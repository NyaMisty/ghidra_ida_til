
#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\pc\wdk8_km.til.h"
/// #define HAVETYPE_DOT11_DIRECTION ===DEFINED

/// #define HAVETYPE__DEVICE_RELATION_TYPE ===DEFINED

/// #define GHIDRA ===DEFINED

/// #ifndef INCLUDE_GUARD_wdk8_km_til ===true

/// #define INCLUDE_GUARD_wdk8_km_til ===DEFINED


#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\5_gengdt\pc\.\..\..\..\..\IDAPlugins\idatil2c\common.h"


/// #define __int64  long long ===DEFINED
/// #define __int32  int ===DEFINED
/// #define __int16  short ===DEFINED
/// #define __int8  char ===DEFINED

/// #ifdef GHIDRA ===true

typedef struct {
    long long u1;
    long long u2;
} __int128;
typedef struct {
    unsigned long long u1;
    unsigned long long u2;
} __uint128;
/// #endif ===true


typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;

/// #define _BYTE  uint8_t ===DEFINED
/// #define _WORD  uint16_t ===DEFINED
/// #define _QWORD  uint64_t ===DEFINED
/// #define _DWORD  uint32_t ===DEFINED



/// #ifndef HAVETYPE_bool ===true

/// #define bool  char ===DEFINED
/// #endif ===true


/// #ifndef HAVETYPE___u32 ===true

typedef uint32_t __u32;
/// #endif ===true

/// #ifndef HAVETYPE___u16 ===true

typedef uint16_t __u16;
/// #endif ===true

/// #ifndef HAVETYPE___u64 ===true

typedef uint64_t __u64;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_uid32_t ===true

typedef unsigned int __kernel_uid32_t;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_mqd_t ===true

typedef int __kernel_mqd_t;
/// #endif ===true

/// #ifndef HAVETYPE_DOT11_DIRECTION ===false
//// 
//// typedef int DOT11_DIRECTION; 
/// #endif ===false

/// #ifndef HAVETYPE__DEVICE_RELATION_TYPE ===false
//// 
//// enum _DEVICE_RELATION_TYPE {_DEVICE_RELATION_TYPE_UNDEFINED,};
/// #endif ===false



/// #define __fastcall ===DEFINED

/// #define __unaligned ===DEFINED

/// #define __stdcall ===DEFINED

/// #define __cppobj ===DEFINED

/// #define __declspec([x])   ===DEFINED
/// #define __hidden ===DEFINED

/// #define __cdecl ===DEFINED

/// #define __noreturn ===DEFINED

/// #define __pascal ===DEFINED

/// #define __near ===DEFINED

/// #define __high ===DEFINED


/// #define const ===DEFINED

/// #define this  _this ===DEFINED
/// #define near ===DEFINED


typedef char _Mbstatet;

typedef void **va_list;





























 
#line 6: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\pc\wdk8_km.til.h"




struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23___0516FB65A30BF30ED1CBCB9E0A080D81;
struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23___A160C96603A00ACF5A7C4A243294620B;
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY___2AA764CCAD4465B40EF2819DA8B429D2___19436C2F0C0C306A8BFD7B32BBC2825D;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___0260175AB369BB076E5DF9D52C499CDD;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___03284708F4EE9EB7399C911CFB45E6EF;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___66F6FAC6CA82FDCEBF26995791DDFFA4;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___D27B19D2597F90E0BBF2A289F6F401BB;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___D9FABD0107FA781F545DDC567DED4A6C;
struct _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR___31591524D764D3BBCEB254E6332A248B___6F865FCB40142115B3FDCF5472778760;
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY___8220F45EC4CA30F4B7BEFF9D32D9F1CE___E68E69178BF9C90E9AD3136A5DA83667;
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY___E355F55852CE4C01F070476D6F7C9BBB___1D6DC8237BA491DDA746AC6A0CA5DF74;
struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8___9953234E643C1BF94D82499C45A21BA5;
struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8___E412C98F24301A3F500510DCA8E67F3B;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___0C134FED9563613891FD8FE73D627A45;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___79CD772B57A90B848A0BB4D03509C7A5;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___BC35937926C6FBC613FD6B261B9AE84F;
struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3___8BEB346562FAF5B62B3932DA3828A9F2;
struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3___A449343E09C4C1546A59A24613FBC6AB;
struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83___B906FBF57CF9FF7366BAF5FEA2701BCC;
struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83___CC46BAFA385FB9077FD080B9665E9ABA;
struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A___7AB4B1C9EFBFAEDCB742AC6C2C0A9748;
struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A___8EB7A50067A0464F8BEB6BA6FAD84C81;
struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711___3E1F33A4D6146CCFCE9EB881F18EEEC7;
struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711___764ECECA7B0364BB3FF4D84547E713EE;
struct _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5___D80251304882AD479C33D66627E6BB6D;
struct _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5___F53AFF6980E02C8263F2E1590A50DA7A;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR_________DE3CCB929DB832FEAC38EBA7195AFD95___BB7094CF39B58C60385FAAA7DFEE1197;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR_________DE3CCB929DB832FEAC38EBA7195AFD95___D155ACCA6E988C466DB4311FB52073D0;
struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_MONITOR_REFRESH_DESC;
struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR___7981EB885823FFAE046A8EBFAC9A705A___DD41CD652535E6B68DB16881A824C165;
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___0B910CEDC59248BCDC53AAAD9E906EAA;
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___0FC824BA0302BE32D35D01F029B1AD05;
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___5361B51F0EE27E908DA5F02E9D475C54;
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___577F46EA907A36E539BFA3B1AF421A80;
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___581006640C95FBAB4BFA285C52463061;
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___60E89AF55FEDC62AB5124B8D3E3FE988;
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___EA160FC66BC16F497CF08E0A7DD91C4D;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088___196EE06A2DB656739DF343240CCA5A2C;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088___AB3E8D6F5DDFCC0505F425518AD8237E;
struct _DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS___CD4A4751E03E0E13D07F13C0897CF7F0___345C9315266921A5615E194C0B7E8CDB;
struct _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS___0A21D9AE078C811356AA56F1AA8C2BF4___DFB25419D061610BA88AF429AD796DE8;
struct _FILE_REMOTE_PROTOCOL_INFORMATION______3AC68F171D171C587D8A80AB3E80154E___4024C6681B04613664DD05BB2C95A759;
struct _FILE_REMOTE_PROTOCOL_INFORMATION______3AC68F171D171C587D8A80AB3E80154E___55E32AD925E5589114AECD9F8222A621;
struct _NDIS_NET_BUFFER_LIST_FILTERING_INFO___B48DC90554B964DE8C747D9B814BBB60___0013F1FA1361201B5291CFCA2EDFB635;
struct _D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS___A8B88D5BDB1228732AE547855E9ABDB5___4E1282F14A853ABC73F5BB5DDE693C4C;
struct _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS___034D7373B817C02422E4D62DA035E5FF___E2BAFAAC7C89847FEE3380BA63F38ACC;
struct _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93___2338CFC5105DF7E384B2C185C8FBCF5A;
struct _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93___332EADD4F62035FD5633C7FF38BB14E6;
struct _PROCESS_EXTENDED_BASIC_INFORMATION___E6BF994F87CD7E8E9F73233F6875B43D___93879C939F9799A7AEAC28A80CFADCC1;
union _CM_PARTIAL_RESOURCE_DESCRIPTOR______CBF9A9E0C6D93C7BA38845A49CC9788E___DE3CCB929DB832FEAC38EBA7195AFD95;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___24C0FA88E7D8683045143D2871F0ADEA;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___3407DC9360180855067BCF2436BCF223;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___62CC19C4D26368E1DB72E254C17C07C0;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___9FBE9EE09EFBE9DD3093DC43F2458B69;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___C71B5FE49AE1E5B05636CDDD7D3DD727;
struct _D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS___655BA7FA29CCB4E6E8B3A600E5702580___CDF29082CFF35E0EAA14A197F1DCF33C;
struct _DXGK_CREATECONTEXTALLOCATIONFLAGS___61A6213A88C057D16E4E0A395CF0FF00___7E05657BE3DFA69514CB298BBA2D5DDF;
struct _INDICATION_PARAMETERS_ENHANCED______13E44387A1BA7056A332A8AC5EFA477D___2966B27BDD3BF7F486C2DA8CD7E6F64C;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___019FC1BD90023EA502588D9EDB27A093;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___24C0FA88E7D8683045143D2871F0ADEA;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___9FBE9EE09EFBE9DD3093DC43F2458B69;
struct _DXGK_SETVIDPNSOURCEADDRESS_FLAGS___0DB8D2702BCADD830BEA3156E7D1B675___BE2C2AF3484C88CA375E3E49ACA8104B;
struct _FILE_REMOTE_PROTOCOL_INFORMATION___63A064FF7C4EF3DC6E958885DE390874___3AC68F171D171C587D8A80AB3E80154E;
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY___45A98C1F8CA82C31F92D6F2DB941F5BF___63C64F7D5703FAD7B76B7BD1AFA1ED4F;
struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755___7FC436678155DFA8ADAC694F8425CDB1;
struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755___8D27D99A3565F20450334F9AF7D1743A;
struct _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7___94C088134ED8F25DD6CC04D6DA40A0AF;
struct _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7___9B7144FD41D26DD547F4C3FA36F343DB;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___019FC1BD90023EA502588D9EDB27A093;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___2B5A11F81960A3C58CB02D6DFB7B4957;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___400A9E4FD04D5F129B6A6DD288D7BEF4;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___54911E495599BDFB05E828710D67429F;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___84F77B99EDFEAF462CCE796A4BAA8009;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___D5430022CEFEEB8C97042C1E85AA2BC0;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___ECB8C2C044A0E440702FC598AC25079A;
union _DXGKARG_BUILDPAGINGBUFFER_________31A6E6E69D11548870F9DD66858D70C9___44EAA8E240A8DE9BFA1FE26FC8D5EF22;
union _DXGKARG_BUILDPAGINGBUFFER_________C9D31DD41E1FADF97E70E45B8DDAE5D0___44EAA8E240A8DE9BFA1FE26FC8D5EF22;
struct _NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671___4902617F7B303E67E1AC49578C09A516;
struct _NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671___EA4052A1E868B7B130C491D1B37AF88C;
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA___92BCF8F8996F0A3CD2E63EB1EBBE61D8;
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA___D3AE0C0A124DD0DE7B3E9AC1D2855E05;
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___F699C0DB98285CF9E5D39CB87B49A7E7___53B92DDCBF9996BF5092A8CE7C1BACE6;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___05881B79B3CAFBFC2EAF6FE4C8FAB51F;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___08205AB7C2167E8C9C2BF0274334A928;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___0FE99879202BD133F2D64F545464A292;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___1F3D6AF14FC8FA95287DDF447D6BE47F;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___6BF00F84A5C727E3B25245E9FBDFB278;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___812F79A5FC2BE6FE62CE9F41854F4845;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___ACFC0B8B00258A4187B421B4FDF1B18A;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___BB7094CF39B58C60385FAAA7DFEE1197;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___BBBCA153A119060DF311607C16E36BB2;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___CBF9A9E0C6D93C7BA38845A49CC9788E;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___D2EE30319AFD96435F4334D8E12C7935;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___EB36DC85652755C8EC8C69A205B736DB;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___551B0CF679922063F379905F8C1D5CE8___B2E03ED94C06E2E681F8D03FF7FF5CB3;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___B42F2B2B4BBA4E8DC819D947841EA255___6E35CCFC02D81E31BD4C6BEDD77CB20A;
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___13E44387A1BA7056A332A8AC5EFA477D;
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___1D2285BA9AE7386B60F6E3B61C9FBCF3;
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___9A42D17D2996B040624A535ABD3DC7B0;
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___9E9E7C0E34D4E998220BB8024C1EC0F5;
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___A3A06E9BACE23A97764B611BD6F32578;
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___DDC57483DA80FA367A27C1F6944A9F5F;
struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD___0A44648A440ADCC9299E094591176B02___37464B1A6F609AC6C12E19D8BB9038F5;
struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD___12366B4554501CEE1BDEB101C5AF44CF___E5C749320C6A4B994D255A206596AE24;
struct _PROCESS_MITIGATION_ASLR_POLICY___92EEC1AC3E0202E7FB93616558A78AB6___5FDB0C128CAE6B510A580B0DF7449C28;
struct _DXGK_MULTIPLANE_OVERLAY_BLEND___1E37BDD2558EEDD3B8B05F66E3722F95___1D6D566DFEE76AA38DC565683F37F64C;
struct _DXGK_MULTIPLANE_OVERLAY_FLAGS___BA4570F1357798E6B2AAE11FBDFE711D___2E6AB168D1113E8CF440FBE7992D8305;
struct _OB_POST_OPERATION_INFORMATION___9E26F4D194EE3F8ED97EC5420551EEA8___076C9C0F1A3FEA506D5A7AF627950FBD;
struct _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762___94C088134ED8F25DD6CC04D6DA40A0AF;
struct _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762___9B7144FD41D26DD547F4C3FA36F343DB;
struct _PROCESS_MITIGATION_DEP_POLICY___F116839C509786518B7C72B8B76ECE10___7C60618F8DDAB6C9415DCB902B86CBEA;
struct _DXGKARG_BUILDPAGINGBUFFER______3EB8CABE069EF4BB3B59E8B4E119E046___C9D31DD41E1FADF97E70E45B8DDAE5D0;
struct _DXGKARG_BUILDPAGINGBUFFER______AB1AD8C4B599AC16D84572F0ADA81B2A___31A6E6E69D11548870F9DD66858D70C9;
struct _DXGKARG_BUILDPAGINGBUFFER______B8543B8A5FA03AFF2CFE9331D405A718___34F45DEC358C162226AEB40EE1713239;
struct _DXGKARG_BUILDPAGINGBUFFER______F96A1248A3A1B3EAF839ECFA87915C7E___C9D31DD41E1FADF97E70E45B8DDAE5D0;
struct _DXGKARG_UPDATEPAGETABLEFLAGS___050F7664A78ED8E1CD2034B3C2BB2C31___FFEA0779933AD6F1B13728E00B6E6752;
struct _DXGK_DESCRIBEALLOCATIONFLAGS___2BE12FD22C72134B114850BA9D4E091D___E88790A9D38B7E0F112158D6B120A378;
struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_MONITOR_DESC;
struct _DXGK_SETPOINTERPOSITIONFLAGS___EDB2CF8C2113AC57422ADD41F1F67284___DC9AFCC46158ADD751499DECE1101FF4;
struct _HDAUDIO_CODEC_RESPONSE_________F7A0B89072390A37182FF8981BAE8E57___41EFFB85977F698B0114BF219457EB7D;
struct _HIDP_KEYBOARD_MODIFIER_STATE___09F65E3D8EC31FFE3E62B668D67CDD30___CCD288663407EB3BCE693252A6740B18;
struct _NLB_PUBLIC_IOCTL_INPUT_________0BF847604AFDCDBF1A158B1DB8767C47___EC338A43ABF6B75852E48F7D35CA5A68;
struct _OB_PRE_OPERATION_INFORMATION___27673A9B23E3827F846C9CF36744DA66___076C9C0F1A3FEA506D5A7AF627950FBD;
struct _SCO_INDICATION_PARAMETERS______8C090F53DC32F6BA76ECAD738E355805___EC8174D427A0F5D70404B11229FCD192;
struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___11081E9A81804B9809362466AC81245B;
struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___884D48B70C161200DAEBFA67F1F31A50;
struct _DXGK_CREATEALLOCATIONFLAGS2___D1A97408460E1FEA85F44866C81053FF___E01109843263E8591DC4620CD33ADE5E;
struct _DXGK_DESTROYALLOCATIONFLAGS___A1DA969D0BF462BE86DF3AAFED10CC89___C8C18221F12F9B6646A01B1C2F8CB3B2;
struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_ENGINE_DESC;
struct _FUNCTIONAL_DEVICE_EXTENSION___50C61D085A2F906BF66460A0C351E861___73D0177DA111EAE28DEBDBC67FA5AB79;
struct _NETWORK_OPEN_ECP_CONTEXT_V0___05ECC70A33AA78360CE5BAA96286B27B___A10C39190F0F2427004629954B88C2E8;
struct _POWER_STATE_CHARACTERISTICS___3444A41F8A39DA3EB5A6D35169EAB189___9EE6C19477BE1283A4921B5F7832FFB5;
struct _TDI20_CLIENT_INTERFACE_INFO___17090AB1AC76E3F51FDFECA895B54C88___883A693B07695AD4FA9EFBC99364FC4B;
struct _TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529___C026F1E43655E7E3D6874DD97C3C1DD0;
struct _TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529___DCDD09C3FB597D7805CC66AAC35A1C26;
struct _TDI20_CLIENT_INTERFACE_INFO___DBFFC609AC9C9DF31CC2C895F8D48A3C___9BA10B872D58EA52358D8BF594A45CC2;
struct _VPD_BLOCK_LIMITS_PAGE_________48AE7A0C43572EBB1C54711BBCEF1E27___1171F22B554AE5456697F3AA7B60F002;
struct _DISPATCHER_HEADER____________9AEC1978167063A5A657752090B9C59F___2FBC6CFED9A28A64EC4EE027A1B73629;
struct _DISPATCHER_HEADER____________AAB494C8674620924F4E93AFE0F5B426___F32BA6C812E0F769F09938C2098D009F;
struct _DISPATCHER_HEADER____________E0F499287B198740481681CBD6043B35___A88D3AAC38BB26B7BA3A58BD453FEA82;
struct _DXGK_CREATEALLOCATIONFLAGS___2C1DE17B3602DD7A1C3B69ADBEDBC48A___E01109843263E8591DC4620CD33ADE5E;
struct _DXGK_POWER_COMPONENT_FLAGS___D180033327BF7FFFCDCE62B6821A55F9___3F2E209B917263CF550E0B49950B9820;
struct _DXGK_SEGMENTBANKPREFERENCE___C6C7745BB49F41DCAE1615122A006DD8___0FD2D93B789A5FCF458225CD4A369FB3;
struct _IMAGE_DELAYLOAD_DESCRIPTOR___24F6574E5593E2C842E103EF8265DC95___CDB9B99D549B790D4C735D013865E181;
struct _SYSTEM_POWER_STATE_CONTEXT___364D4FCA241438740838CF50D18006E2___76514DB155979F88E47E6F460A9859AB;
struct _D3DDDI_CREATECONTEXTFLAGS___DEAF33FA41163E0FF876B6E6CC0834BA___A9A58C11A3F64E28737E050ADF9B46C1;
struct _D3DKM_TRANSPARENTBLTFLAGS___70EB8777C082EFE4C602960A67FF671E___24F29349B034DA5093C49395AAA12BF0;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___3EB8CABE069EF4BB3B59E8B4E119E046;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___9727AC4DDD1719C8C8FC560327A49CAA;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___A4484C77F207812881C1E1418C2F7952;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___AB1AD8C4B599AC16D84572F0ADA81B2A;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___AC0F9210C306688B09ED71AB939B4173;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___B23455DF8066A3318DDF1E92BFD72172;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___B8543B8A5FA03AFF2CFE9331D405A718;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___E1F4249D1557DDD5F3F51CC54703FD4A;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___E4F4861FB104718B686777235333E57B;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___F7EE40DE4E716B260B779FE59F440645;
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___F96A1248A3A1B3EAF839ECFA87915C7E;
struct _DXGKCB_GETHANDLEDATAFLAGS___5572F66C59C9F3A90BDF1613B7A48E48___42C27059EB34331C14506940C3DD3E8E;
struct _DXGK_ALLOCATIONINFOFLAGS2___98E3A45A4DBE36C032B4E4AC2E8B9F54___C427DD94C55A9E97BD86B465543B898E;
struct _DXGK_ALLOCATIONUSAGEINFO1___C317DE8A1589ADE636AC0CB74A84EADC___9F321F4B5FA7A669E9D040477F8E568E;
struct _FILE_OBJECTID_INFORMATION___A3F92533EDD69EF294B8F85C72EB0335___E1A7AD90C36323494F3E6BEAF74B95B5;
union _HDAUDIO_CODEC_RESPONSE______EBA4BFB70B136AE598193DB3C50674E5___F7A0B89072390A37182FF8981BAE8E57;
union _NLB_PUBLIC_IOCTL_INPUT______DD4D914590692A0344DAA3E8E6A718EB___0BF847604AFDCDBF1A158B1DB8767C47;
struct _NOTIFICATION_MEDIA_STATUS___7F016F2347F7A626442932B97010E935___A64B2677AFBFBDCEB30F044C30307B18;
struct _PCC_GENREIC_SHARED_REGION___10E8DF4D696433E5BFD564CD1D883F8C___5D29C60EE4488AD58BAF5859C3F8BDA7;
struct _PCC_GENREIC_SHARED_REGION___27BE20E7AAEF8A28D5A3593632264250___90C390148895C12A0A32B55ABE6D8EAE;
struct _PHYSICAL_DEVICE_EXTENSION___441C77CE4BDFA0084198F2EE5537E17E___73D0177DA111EAE28DEBDBC67FA5AB79;
struct _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12___8C090F53DC32F6BA76ECAD738E355805;
struct _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12___A2D12BBF9FDE02488895E7FF9970C0E3;
struct _D3DDDI_PATCHLOCATIONLIST___0F98B9AEA6B883F69971393929BE9C10___69927EDEEA6AC7340BCC2157C3B7C3D1;
struct _DXGK_ALLOCATIONINFOFLAGS___9EBD3D271EAD7213A5F7051B20FA4555___950F9B92EEAE96A4D30B381EE96D24DD;
struct _DXGK_DISCARDCONTENTFLAGS___833EF5D1359128C4E733B4C6CE94D49D___9D6029052F7B0E3E2C067326CF632F2F;
struct _DXGK_OPENALLOCATIONFLAGS___D8A898C3CC121BAA810A888BA7378A03___2524EDBD7812635A3843940AD983396F;
struct _DXGK_PREEMPTCOMMANDFLAGS___0D5650F9498A6B37A04F693A28355D8E___345C9315266921A5615E194C0B7E8CDB;
struct _HDAUDIO_CONVERTER_FORMAT___268651D303ED1FF2E9E207C3C058BF27___52D101C152B9345B1B2B55DAFF1D826A;
struct _INDICATION_PARAMETERS______291A00F730A408470B9A239C0029CCE4___2966B27BDD3BF7F486C2DA8CD7E6F64C;
struct _NETWORK_OPEN_ECP_CONTEXT___4394467ED109257AE2A2394666F4A3B8___2FC93A188CFE60146508D166162219FF;
union _VPD_BLOCK_LIMITS_PAGE______6D8344D7D2E60C771339A25A2275A935___48AE7A0C43572EBB1C54711BBCEF1E27;
struct _DEVICE_MEDIA_INFO_________D22BD4DC823953AE58E358A96C378F3D___13DAAE7CADC79513027175D5D6580D0B;
union _DISPATCHER_HEADER_________122E4B3396C704A8B6A7CF97EAAF7D74___E0F499287B198740481681CBD6043B35;
union _DISPATCHER_HEADER_________2986B08B47BF9BFD72B43A2B98AB18CC___AAB494C8674620924F4E93AFE0F5B426;
union _DISPATCHER_HEADER_________3D88FD3E473BDC33E8E9B3C9823BBBAC___0721FA4078DC4A6AFEE1EA98BF9F2861;
union _DISPATCHER_HEADER_________3D88FD3E473BDC33E8E9B3C9823BBBAC___9AEC1978167063A5A657752090B9C59F;
struct _DXGK_CHILD_CAPABILITIES___9DDE597FBE4C2FCE091CE12E5A13564E___8D7FC5F0568A79CE7E46B43252C96728;
struct _DXGK_CREATECONTEXTFLAGS___DCE14139BF8D7994AEB61B9C12A1E22E___C8FF0F71D1DECFDFBC4298EE6EB8855C;
struct _DXGK_SUBMITCOMMANDFLAGS___6731932D94F59BD250F28E6270D01601___E01BF2757404D736E57C9E3AA2534032;
struct _DXGK_VIRTUALADDRESSCAPS___B92D749DF1DD3B9524F85FA541BF8C4B___378DCE61C23BA3BD955527BB5BA03BB5;
struct _IO_STACK_LOCATION_________A1B04431FB6E59C2D561338119C8AE61___5395532E35CA13A919E63C6E41FE24BB;
struct _IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5___19ABAB2698FF067AB251F272D19344BF;
struct _IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5___D73A842DF02ECD359F5D4E8396DDC93E;
struct _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0___093282B89252D62DDE409211CEEEE04C;
struct _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0___6A0DD04A155F7276D124AE510E11507E;
struct _SD_RW_EXTENDED_ARGUMENT___C73E6A1E0D5770B9EB75E35F076E7DDA___2F9E36BBACC6AB85E16B14DB0738C6FC;
struct _CDB___SPACE_TAPE_MARKS___452053D96BC8D647FEF06A172E57CD82___723BA1E74126376B75E150C11F3E5EB8;
struct _COUNTED_REASON_CONTEXT___0169A8C3C5184AFD0045925CDBD9A996___48DC2BE0BFF23344CA7D314FCD6B972D;
struct _D3DDDI_ALLOCATIONINFO2___C37602EC42612761CBD3C806D59105EF___9C54106681C0543AF5CF76AF186F5814;
struct _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC___1985B6C0A98C70387841619C427FA5AC;
struct _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC___6F1145A126A17372ED69F96ECC75C774;
struct _DXGK_CREATEDEVICEFLAGS___2F67346E464C3CB5F4584001891B2DBB___0116588DB9BEA0AA997CFE1F8AEDB2A9;
struct _DXGK_GDIARG_STRETCHBLT___72D9C1E774232B238E507145974EF112___FCA50DB8B571C289B3C0AE05392B03C2;
struct _DXGK_SEGMENTPREFERENCE___5F0E46343C77D0D7B0B3DAC6467FFF79___59FADADC9B5649AD99C3978E94186D1F;
struct _HDAUDIO_CODEC_RESPONSE___C3E611620E2F089E1A23F35E3CB26325___EBA4BFB70B136AE598193DB3C50674E5;
struct _HW_INITIALIZATION_DATA___629464E23AC53C7DCCC75BF07BD6EA4B___CDC7C98BFDDB2D5AE64DC8463D32D136;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___17B187B8C3CC0C2C04D148A62457C1B5;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___6F2DCCC140478981F4C84F12EF58F0E8;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___711A32C7DEC837C87D3D622B5D6CA547;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___812F79A5FC2BE6FE62CE9F41854F4845;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___90A8EEE83C9F91E29DD5F8EE42946559;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___9B5808D9D572DC66358F5E90A8A74F4F;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___A5682085F38B4530410BC09C233C00C6;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___ACFC0B8B00258A4187B421B4FDF1B18A;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___CFEA0CDFCF8B31E537C8D44F49AF209A;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___DA030873C766E4C7B95104F99E17565C;
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___F28011FF41998B198A306197E74BFABD;
struct _NDIS_PACKET_8021Q_INFO___8882A3A36CF70686E2666AD9F1873AAF___4902617F7B303E67E1AC49578C09A516;
struct _NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D___0E4ACC651B354EB7F71EE82734BE4E30;
struct _NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D___5AA99D45118A963659DD55ABCA110FDC;
struct _NLB_PUBLIC_IOCTL_INPUT___A898DB159985FE167F7F53788BA32DF7___DD4D914590692A0344DAA3E8E6A718EB;
struct _NV_SEP_CACHE_PARAMETER___D6AAA6E512359887CA6B2F20090C3374___E45BAA110AECCF8491FEADB615702004;
struct _PCIX_BRIDGE_CAPABILITY___0853D9480451221ACDFBE7118BCCBE8E___A5A2E6C5BBBC81C26B0C8B0B46C9ACE9;
struct _PCIX_BRIDGE_CAPABILITY___CA70B71BC10E862FDC7C78E196CAE6C9___AC22FB39CB111AE2AB9424F0EC3161C0;
struct _PCIX_BRIDGE_CAPABILITY___EECBA3A91F5E25257CAAF226CCCFD303___4AE0EDF6FA0F41D2DD767ECA4BD149D4;
struct _BRB_L2CA_OPEN_CHANNEL___2205ED29735D6185B7CC4245BA253E72___92BCF8F8996F0A3CD2E63EB1EBBE61D8;
struct _BRB_L2CA_OPEN_CHANNEL___C3EA006E90E98BA18A832E0DDC1D8811___53B92DDCBF9996BF5092A8CE7C1BACE6;
struct _D3DDDI_ALLOCATIONINFO___9C237A8DCEB414086FDDD8CA87C44C50___9C54106681C0543AF5CF76AF186F5814;
struct _D3DDDI_ALLOCATIONLIST___C80EEC70EA5C50DBE7190B67C99082D6___397A5E6133528C3EDF71A6FF599DC983;
struct _D3DDDI_RESOURCEFLAGS2___81001EC007C0C438D87887A3711AD82F___4414E5F7522B3B16D586B912F1160829;
struct _DXGK_BRIGHTNESS_STATE___66C590267A583B1EC093FE09AF2A9D94___3896E537B3BD1A832A0D287DD3B20842;
struct _DXGK_MAPAPERTUREFLAGS___D42F3BF489806A17BD1D237EC4E3FA1A___A5CB05A35B193C4D681B1357F34313FE;
struct _DXGK_PRESENTATIONCAPS___C11F8E6BC7C43C2BB3DD3E618E55E425___FDD1F284E5E2ED5A188B9EC3BD77B504;
struct _HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C___18F6A2D84AEBEE4DBCB00498C19F6546;
struct _HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C___553B430681195D47D9945C050CB38E82;
struct _IDE_DEVICE_PARAMETERS___DC002D496C8A250B8E7023CEEB6D0A52___1E318727270B7D90275212297693BBE0;
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___1D2285BA9AE7386B60F6E3B61C9FBCF3;
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___291A00F730A408470B9A239C0029CCE4;
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___A3A06E9BACE23A97764B611BD6F32578;
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___B2B0BA248C92E6A6BDACB67852B2EA97;
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___DDC57483DA80FA367A27C1F6944A9F5F;
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___EA7A87208E3E8087220E134963950D88;
struct _IPV4_TIMESTAMP_OPTION___2E193DEAAB8F2BBFABCD47F30D0D12BC___E0327DE6E6EA79E8CEF3B61154C13EF9;
struct _PS_CREATE_NOTIFY_INFO___0573261C701E630EF5641D92A6F614F2___AD7BFEB44AD5F82CA0E001337E494E2B;
struct _SD_RW_DIRECT_ARGUMENT___E799D1D7F4FD931B58035FED85E80D2B___82EB7C5FC3ECE867F722784A81E8B11E;
struct _STORAGE_OFFLOAD_TOKEN___45C29CB8E6D02895655581947ABDA793___F76DCE325C2D5C7EAAA9288066DBE18F;
struct _VPD_BLOCK_LIMITS_PAGE___FA2E4E0823A0B10E6F7DCB7EE3FDAC7A___6D8344D7D2E60C771339A25A2275A935;
struct DL_TEREDO_ADDRESS_PRV___8AE4EEAF9BFB4C7125F7ADE378B0209F___75452F4916212336117570F081D85C4D;
struct _D3DDDICB_SIGNALFLAGS___37DCD84A128AE20AFACAE49DED23B1AC___BF2510D441EE24298AE8E223747F3648;
struct _D3DDDI_RESOURCEFLAGS___0A8E4AF2B4ABBA3F67396D587D70E98B___DFEDBB163B56A659C941E01AE40F0809;
struct _D3DKMT_WDDM_1_2_CAPS___85A070F6A014979135EAC7792424D6A3___0F5964AD7A466414866DCBA5BE62409C;
union _DEVICE_MEDIA_INFO______F3A2277F3846D5D09599391720F7D644___D22BD4DC823953AE58E358A96C378F3D;
union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___122E4B3396C704A8B6A7CF97EAAF7D74;
union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___2986B08B47BF9BFD72B43A2B98AB18CC;
union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___3D88FD3E473BDC33E8E9B3C9823BBBAC;
struct _DXGK_BRIGHTNESS_CAPS___D9D36000DE1DD4D29BAB8D412DCDF7E1___7EBDBF249FE68AB70FEBAF549ABFE596;
struct _DXGK_DEVICEINFOFLAGS___313A06C1F8E7A72B04D91FC65245D0A6___3A81826735823A7E4E2E7A28673642C0;
struct _FILE_OBJECTID_BUFFER___8A2E0D068CCE16AC437AD7ECF5548605___E1A7AD90C36323494F3E6BEAF74B95B5;
union _IO_STACK_LOCATION______01D776BE44431130AB476CFB6102BAD9___A1B04431FB6E59C2D561338119C8AE61;
union _IO_STACK_LOCATION______0F8D78D040FF3560CA28CFD6A777B9AE___7E80610E1B9C691709D7734F8FEF924B;
struct _IPV6_FRAGMENT_HEADER___92C6B06247B11EB7CB56D4524B6C4DF2___95524D7FF2E8E5CA171D244EABE3E9C8;
struct _LOG_PARAMETER_HEADER___78DA7D7ACDB40656AE4F463B7A904041___E905DA64F8277D89B8BF07FD43435193;
struct _MODE_INFO_EXCEPTIONS___46486C1043A9BFDA7F1CD33DAB7A74FB___4093EAC1ED3453951EF80FAEAADF12E7;
struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___28631FC908F7F9A5469B368DB2C2AB28;
struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___3474FE5EDFA452AAD9BE6166E926835A;
struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___79DCBD39C0DB0D790BAE7BE236DF2C3A;
struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___90DDF8997D261BEC455E3EBCF23FFD67;
struct _WHEA_PCI_SLOT_NUMBER___B33AE7BF1FDC215AED0B88878C3A5E8F___A9FC48894F8D14019CAF4D8F08A526D6;
struct _DISK_DETECTION_INFO___48876EDB82F731E03DD8D988B59F7EB8___C6895C4B5C301AAC9475EDA00CD39D51;
struct _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833___235585ADA1A6D4A89570F816D4F70F98;
struct _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833___BE6FFFE6B14D10E80BF326EA5B53821A;
struct _DXGK_TRANSFERFLAGS2___4C244374FF25457F97E9B31CB89E7EBC___EAE165496D5BFDBDD95280214C6ACDC1;
struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___27183FC11B178907B5D2BB34AFACE7F1;
struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___538BBEAAFB526DA55D87E8D9C61BE453;
struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___7F2A391463C85579B142CF8A59256159;
struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___E4726FB01B43180CB4D608E8FC40A3CF;
struct _IGMPV3_QUERY_HEADER___BADC5553DDFA9D11ED858F66D86D59FC___A4E2B1CD24A78BF513C2534CAC5D7D7B;
struct _IGMPV3_QUERY_HEADER___D8E78313C7C869914A98684B90C859EB___A466432AB51F33C0F9566AC62E60D474;
struct _IMAGE_AUX_SYMBOL______DCE4F7C37BB8311C74F011B1C8562952___3E868562AB90F0B001BAD735FF84E5A3;
struct _IMAGE_AUX_SYMBOL______DCE4F7C37BB8311C74F011B1C8562952___50827E48B61BB1B6D5157F089F0837CE;
struct _IMAGE_AUX_SYMBOL______DE029D051A7479C614D66B3BC2EAA5D0___5BDCCE9CDA78802544222B2C68F4ACCC;
struct _NT_SMB_HEADER_________4F8831D3A8722163D7D711A38E950EFF___D1702EC55EA39E7B8B84C855211D69BC;
struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___27183FC11B178907B5D2BB34AFACE7F1;
struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___538BBEAAFB526DA55D87E8D9C61BE453;
struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___E4726FB01B43180CB4D608E8FC40A3CF;
struct _ACPI_SRAT_ENTRY______934BEDD351FC4B1D46DCE8BA1EC27DBF___1196FF6CE8067B2B35B898660F75E27E;
struct _ACPI_SRAT_ENTRY______B5E578257FBF3862337C2F1A8AD9935B___1196FF6CE8067B2B35B898660F75E27E;
struct _ACPI_SRAT_ENTRY______F283BDF483E96915173589B9951F87CD___DC8F39E2CA406A36842771D96FE8E578;
struct _CDB___SET_CD_SPEED___5042636D3EF4672BAA051A846CBFD7E7___001D666376D0C4DBD36F80530E61A012;
struct _D3DDDICB_LOCKFLAGS___ED792A498079A6342A08F53AEABA2A3A___E5338CF7B743D9B09B49C7CF5F2B6ABC;
struct _D3DDDI_ESCAPEFLAGS___1E6467755CCFD5D3734D714B43840EC2___B70A34BD02D6029B9E2448784158907E;
struct _DXGK_GAMMARAMPCAPS___01A74871349E05421D5F5860B0BC2732___3D587546F3918A3D6EE51008ED21D136;
struct _DXGK_SEGMENTFLAGS2___781DFF8C386BAF2FD5859671E4CB1CCB___BD7871BA2F60B1D3BC722835D1DFB67B;
struct _DXGK_TRANSFERFLAGS___4D1486DD1E7506599394F0F2A8A65E0A___302D1026E10F578CC86103988839248E;
struct _IPV4_OPTION_HEADER___4C1C3CB250A3C2661892A36CD59164CA___7C81DD1BFAD5C5D4BBD6B7BB13E2FDA0;
struct _LLDP_TLV_TYPE_INFO___E487BBF590D175501C59AA3CB0A964A2___78C78507AFB44B529CF4FC0292F93BC8;
struct _MLDV2_QUERY_HEADER___05E330219958D4FF52893F61F28F917A___7174B48358BF23E91701085D5C8B6951;
struct _MLDV2_QUERY_HEADER___D24BA13BEDB45029026182C5769FF7FA___A4E2B1CD24A78BF513C2534CAC5D7D7B;
struct _WAIT_CONTEXT_BLOCK___4501E438057B524022C881311375F7D8___AFA4B425CF8D1FD581BF88EDB4DB420B;
struct _DATA_BLOCK_HEADER___BB186B0ECE516B444BF083DE287475ED___D5776D461B2025CBC9CD270DE2445408;
struct _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C___88882CC45E21AA3B08D6DD74C9D19C54;
struct _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C___F3A2277F3846D5D09599391720F7D644;
struct _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6___61AC8A2B58CFD260593455E7BA36662D;
struct _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6___A0285CA1D5BF0E1F2165CAF9E52CE46B;
struct _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93___AFF04DDE3F02527F7CD33F31B475CA02;
union _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93___D43038B1DD00167268319662DF7D50CE;
struct _DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5___AEEBA1D7BAAC6A97757F743FD696B8E6;
struct _DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5___C3F3147D4FCD8A6B6E889D916E43EB90;
struct _DXGK_ENGINESTATUS___71579A1E1FAD40681B38D2EFE6BBA1F6___1958C0CE0F30652E7A53C351F5828294;
struct _DXGK_POINTERFLAGS___C9573884F6BD666D6E4986CB772F7316___13E2B3CF36913A195C6C5551DFC7D75A;
struct _DXGK_PRESENTFLAGS___759923E5051464C6F2E56DEAB7A49BFF___46B339A188AE7A54CE96CD9934751C12;
struct _DXGK_SEGMENTFLAGS___B3DE18E4A209DC1AB8FF5AECCB1010D4___D2A2F249D28235F8FFF1C866BFFB9624;
struct _FLT_CALLBACK_DATA___312C66EF40AEDAF2A3A5D4554FF51F28___AF593265884A231A5F64AB3E7AB0774C;
struct _FLT_PARAMETERS______5EC0DA9471CFCB1EC49AD6D2337964D2___5395532E35CA13A919E63C6E41FE24BB;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___01D776BE44431130AB476CFB6102BAD9;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___03E399533941020534C84F7B69BA6C0D;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___0B4B6594CAB5E465787267831231A11E;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___0F8D78D040FF3560CA28CFD6A777B9AE;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___15881024B0F660B7398AF4B4249A3A24;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___3EEFC530056981631A2136A7505B6E7C;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___41591AB00568573FD23A44C44B36D401;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___525464D5DCAD8B8C6AA0F9E4B917EADA;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___5886429FC15D5D9FBCD15B5B7E423A41;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___670710264263D47AAED285B3D8DDF250;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___68F4161CE02EA63EA7D518C4FD2536A7;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___69C11E4E3904219D9A8207E8DBA8FECD;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___6B11BC409C8BDB4C1D2CF8E6F83B383D;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___6B2C785D143F1FC8838B7561470E9FA8;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___70BA97A5E111D15A65F2B5969B1432E5;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___7336F5CE809A28AD3CEF03AEB402B448;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___7995DA36ED0214F9D006DCD5B47162D4;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A0C1706FD51296A5870D577CA7F99003;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A3F11F7237E1D19F6A2E9E54FFFFB312;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A48AC67DA7BF2793E8D357C78FAF1030;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A966DB415F2680C4FACE19E6D9509309;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A9C83915A7FBD780C6C13045BCED6336;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___AB42F48A787DC1F7A85A7D9222F9ECCF;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___AFA69771633799B8FB97339D76F53EAE;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___B225BF4DA8BD0649341E73B822EE9BDC;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___B2B4984C7002DD41520623255E2F9497;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___CAFA629F92AFE900ACAC7E5B47418F4C;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___D177823888D2499403AB088A16B8A5D6;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___D24474CE3B68EBF89E5A61C71CBC75EE;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E1830675726AC350ADD284B511E01E52;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E3C1BD80419791D70DF0170630DDCD15;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E9AB88EACB9E2856AF9688A39BBEAD59;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___F0865C6FA226E0A715609B3D711D72E6;
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___FA02ECF11A69AC1E6B191DC34CAEB912;
struct _IVHD_DEVICE_ENTRY___52C462F56CDF084018E3913BD4CBE19B___EF8F6BA37C2863099350BF038B629297;
struct _IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2___13073B7CB035872C4D9FD7FB30B0281A;
struct _IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2___9608B92844F0E5A0BDAB2DD9BFE04B43;
struct _KUSER_SHARED_DATA___2FE92813FF9B9B4E284DEDC0C06BCA1D___BD1B756ECC8CEE65EDC696B218E648A7;
struct _KUSER_SHARED_DATA___5E5F141A573F9B2433651B29934443B8___3D940D5D03EF7F98CEE6737EDE752E57;
struct _KUSER_SHARED_DATA___CE0A0B9CF154763236C6E82AB829672B___061CAD105B6E501C96239533A98B33A9;
struct _KUSER_SHARED_DATA___E012BA1FCB959C5ACB245290F5960DFD___E80489C3E818F50385E1FFEB85439BB9;
struct _RTL_BALANCED_NODE___6446A29996E22DA45E60A1EA14188AE9___86DF4A9FEBEFA77DC8EE1BF77C3EBDD5;
struct nd_opt_prefix_info___398BCD3A84C3D8595978A4C13A2CD80A___D8228C77A2ABB3E84742704A357288DF;
struct nd_opt_prefix_info___B36C22119BA8D8A8DE4E1DF87B7DDAC4___4D31284C466138778A6C6027B2D52F0C;
struct DL_TEREDO_ADDRESS___90126361DB06D31AC779EF63186CE8C6___87CC70020A842B1AC26340D80EF2CD57;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___12FA867A59BECB21C674460992AF9488;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___1D6CDA7D5D0A584FC0764C46539EFAE1;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___20347F80BDDE7CED824A1C3E12EB14E6;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___68DE96DE104288B6A6B76CEFD20DF3DC;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___88177A16B25AE2D7461AD53DB2DFFB78;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___90296A97FAF2F188598986BCC8190F40;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___A35BCFC4393A820CBA8699E45B0DC901;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___A77EFFD190B68F1C6D758123EB9F07C2;
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___BEBA4CAF75BBFCFE7350B961AFBB95A3;
struct _HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893___83D0A1D806B42BB3CFEB24AD25988CD4;
struct _HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893___9A2DEDAE27CA526CD6B2E1277E119468;
union _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA___DCE4F7C37BB8311C74F011B1C8562952;
union _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA___DE029D051A7479C614D66B3BC2EAA5D0;
union _LOWIO_CONTEXT______3158FA256123766910623FA14A28078A___B6068E2419538643A346D908FDFDE457;
struct _MOUSE_INPUT_DATA___C2F358CA55696375BBE6CFBE88407757___32D8C13BA161E9435E51482125023854;
union _NT_SMB_HEADER______69A4AD5419EA3D4C8A0ABF1A7711CEED___4F8831D3A8722163D7D711A38E950EFF;
struct _SMB_HEADER_________34C178CB18FCF9B52F82980C351547DB___D1702EC55EA39E7B8B84C855211D69BC;
struct _STOR_LOCK_HANDLE___DF05CED8E4E68472CFDF14CBD12862B2___D126D6E7BD455D2E3F3215E98A3F632A;
struct nd_opt_route_info___DC5D226088DB1FA6D255C52DD8FCB908___9DCB88DEC110B99E01442782DF606EF3;
struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___934BEDD351FC4B1D46DCE8BA1EC27DBF;
struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___B5E578257FBF3862337C2F1A8AD9935B;
struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___F283BDF483E96915173589B9951F87CD;
struct _DXGK_PATCHFLAGS___3F44A29E3CF80453CA6C96B988F2597D___DE1EC4FC577E58E9D57B2F58F10A0487;
struct _DXGK_VIDSCHCAPS___5E74790812C969E3ACDA73D10C67000E___DE026473D05A702E3E1640570A42EE2C;
struct _HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41___83D0A1D806B42BB3CFEB24AD25988CD4;
struct _HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41___9A2DEDAE27CA526CD6B2E1277E119468;
struct _IMAGE_SYMBOL_EX___F68D1BB612E723B85ECC44FD18D8129B___CEDF31EE281EF9B050A3F2DD4988342A;
struct _PCI_SLOT_NUMBER___49AFFD3D7EC59F1BE207C4846B68BFFF___A9FC48894F8D14019CAF4D8F08A526D6;
struct _RXCE_SIGNATURE____133B17B9D3CB80B518FB5AF2A06254B1___D56F8B1863917927A478371C2B4391CD;
struct _DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995___235585ADA1A6D4A89570F816D4F70F98;
struct _DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995___BE6FFFE6B14D10E80BF326EA5B53821A;
struct _DXGK_VIDMMCAPS___0FC7972752449C7826273C22D7F8DC2B___74DF1CCC095029D3F7D5077FB687F323;
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___102A4CD179CF55A184E910E638146F66;
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___1F0DB25A8A5AFEBFBAFF1BECD093D0BD;
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___A8945491307EAC7B88D14EFBDDAC9963;
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___AEAA07217ABEEB4DF41A305F13068EDC;
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___B2CAEB05560B1B5609C03D1D0C22322E;
union _FLT_PARAMETERS___28FCA4D722CF4A97784C865BFD6B2B2D___5EC0DA9471CFCB1EC49AD6D2337964D2;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___03E399533941020534C84F7B69BA6C0D;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___41591AB00568573FD23A44C44B36D401;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___5886429FC15D5D9FBCD15B5B7E423A41;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___670710264263D47AAED285B3D8DDF250;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___69C11E4E3904219D9A8207E8DBA8FECD;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___6B11BC409C8BDB4C1D2CF8E6F83B383D;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___7336F5CE809A28AD3CEF03AEB402B448;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___7995DA36ED0214F9D006DCD5B47162D4;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___CAFA629F92AFE900ACAC7E5B47418F4C;
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___E3C1BD80419791D70DF0170630DDCD15;
struct _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398___1F8B7C21C9C3E44248E9C6F91974E44C;
struct _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398___51800FF9876E4DCE174B345C898F336F;
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___11EA1119CC79FBA10791013D30AA59BE;
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___33640225AA3D91F9671E4FD78DC671E9;
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___54D27BE50E2EFCA540B5C2B9627E61E7;
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___EFE0DB8369A33EF75497D4E3C4478735;
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___FA02ECF11A69AC1E6B191DC34CAEB912;
struct _IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT___294F33E41A680E78D61DF2181BA4C646;
union _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23;
struct _NDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO___ACF360C69B9384F89E0440749D787BB1;
union _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY___2AA764CCAD4465B40EF2819DA8B429D2;
struct _DXGK_FLIPCAPS___BB8BCFC6A76D53AA4E1798E1B22DE04B___AAB4171E51AEA23D82198A37E851F9C6;
struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___3158FA256123766910623FA14A28078A;
struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___5BC723C225445B2132FC8B685106C35B;
struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___8294FE1E339237E736BFFDCB9C6C05F1;
struct _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68___3514090A4590A95A1DE583AEB66EEF9E;
struct _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68___8B54ED8CB39CC03D44DD62F841F64493;
struct _MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC___62646870AE5B68D63F726DC7B906275E;
struct _MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC___63C342055F04C1546F1B3920ADC7D8C9;
struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___DOT11_RSN_REKEY_PARAMETERS;
union _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86;
struct _NT_SMB_HEADER___1981ACDE232C6DE21F6ECE4E585F2227___69A4AD5419EA3D4C8A0ABF1A7711CEED;
struct _NT_SMB_HEADER___EFB48DF9E93823741A1223EC6F9E871B___FC77E2F8670B2F58D81FC02676A7A797;
struct _REASON_BUFFER___F74655129F2DFA9F1DDC40A17BAD0BC2___E2947B9388DB43752E355D35F1DCFC93;
union _RX_CONTEXT______0E64B696EDD7DC71B6561395573F3971___6FE7070A58AC6E12D42CE47521BA6502;
union _RX_CONTEXT______0E64B696EDD7DC71B6561395573F3971___79EB80B3C82106AE3D5E59FE1F3799E8;
union _RX_CONTEXT______86805C25ACFE1D5CF2EE68C1410C95AB___495EECD16AAD7612FB99F9950DB2D822;
union _SMB_HEADER______4051A1DFD32F501AB1EB47AEE5569E00___34C178CB18FCF9B52F82980C351547DB;
union _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR___31591524D764D3BBCEB254E6332A248B;
struct _ASYNC_PACKET___03C481F7A4752B31164DFBAFD3BDD779___1D6F3402F5C57A4CB8668FC1E7849EE4;
struct _ASYNC_PACKET___AB07F285586641EA5A3A0A6EB783C0F2___5FED45C7A7070B3B92A06D6CE07E910F;
struct _IMAGE_SYMBOL___5E628A43DDB5BBBB85D75BCB8FDF7ACA___CEDF31EE281EF9B050A3F2DD4988342A;
struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___EAPOL_REQUEST_ID_MESSAGE_WOL_PACKET_PARAMETERS;
struct _NDIS_RW_LOCK___2850CBFD26D1AF5C4667709DD08EAAB9___66F9C77FB8E51BB73E770AD4F88FD05A;
struct _NDIS_RW_LOCK___8DA56E8A00A40642C2533108FF443746___A1347237DC898E262687A42C1AC243F2;
struct _TDI_VERSION____0CEFFAAA4EF78E9CFDB9937EFD46D598___883A693B07695AD4FA9EFBC99364FC4B;
struct _WNODE_HEADER___F03C597F21C6A23CEEDB6A1B653FCCEC___0AFF34700F133A66677DA8590144B5D8;
struct _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE___686E5B55FC3238EAD7412FD5A5C4A093;
struct _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE___D8EDD8813E9D2C777B4C66E2AEE9CFF4;
struct _DL_EUI64______A9DCE9EB2C6B848E9C6868EF1C1A4D5A___AB4C09936D2B120E3DDD8B4D45A5D7FF;
struct _FPDT_RECORD___0CC1B4B8637A0854707BAFDC0DDB0B75___28C7BCA5FED5513FD0BCEA9828806A17;
struct _IGMP_HEADER___B9454631A37D51F61B5C2590DE4942DA___9A52E82B89F3A3AE6B2F78E467664CEA;
struct _INQUIRYDATA___57A8C0293E1F2A67A1B3BE29EFC0DD2E___CB49C0207A42B6C7BC0ECE4108D7F7F8;
struct _IPV4_HEADER___1102F78AC293BC76A5071660AA34A7CC___F11B15A51CFFCDAB5E9FFF0D1A58CBE8;
struct _IPV4_HEADER___7294C6500B7E8E66DD9EAFF73AAE9420___F4C21EB835C5D4DFDE52800A9D198A9B;
struct _IPV4_HEADER___80DFA742D2097AD049AAE78FF03C750C___37C47C346917A4DE3CC45FD35C6B5017;
struct _OWNER_ENTRY___6B4978F9925CAA83AD6686635A513271___658AD709826129357C3064DC5428D5B8;
struct _TPM20_TABLE___C10FB33E4CEA99E8ACC08E19EFF679EB___3793DD88648FDB414F5AE82C07DFBD73;
struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS___6811685E9C9CDE140128703EAAAFCDFF;
struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS___488C0DA93B204848A74B494FE302347F;
struct _XSTATE_SAVE___18201E4AFA8D7B47D67A178F8DC66E77___AAB77B42D6DB5CE2906BF76243B5486F;
struct _IMAGE_INFO___750B9F7C657AA4459AFB3416A5571407___EE88D46FA510EEFAF6F582DB353EFFEE;
union _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS___9D9C737CB8CAAA408C0677004DFD02D8;
struct _IVHD_BLOCK___CC2427FB4E5628166180EC8970FE14AA___755609061C13195953D9B1206A3A8D71;
struct _IVHD_BLOCK___FFAE79A01A0C522F1D9081A9AC9A1E79___B2C21B5885346285C3C15A05A5EB04A0;
struct _IVMD_BLOCK___6CA5807B4C1D95CBC919D39BCB1B3D59___8816CF2C331B62425571B12594BC19F9;
struct _NAME_CACHE___7DD328E67B358AE0D444348E77BB2A06___B9369606FF1834C7F170102E1B88C818;
struct _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER___00CEFFFBE39527BBEE12FB46571022EC;
union _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY___8220F45EC4CA30F4B7BEFF9D32D9F1CE;
union _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY___E355F55852CE4C01F070476D6F7C9BBB;
struct _RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162___0E64B696EDD7DC71B6561395573F3971;
struct _RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162___EE6CDB8E348AFDFD207852A1BBDDA4B5;
struct _RX_CONTEXT___6AFB99893DFF2673B7FC3EB4E39AD6BC___86805C25ACFE1D5CF2EE68C1410C95AB;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___2E6E1237D89AC2CAB060B49770B2CA80;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___3468237E04E6C07F1A666998C04EBABE;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___4C13AF031D06E093FE52B506E8E4A77C;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___7BC758282EA7540BD9403E898486B59E;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___AFA69771633799B8FB97339D76F53EAE;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___CFEAA99B9132A38F888FE454C8847D59;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___E1830675726AC350ADD284B511E01E52;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___E92C6DBFB4AF914E88BD4C5D248FCB7C;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___F0865C6FA226E0A715609B3D711D72E6;
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___F6D510E582433D4D61984B32A02828F3;
struct _SMB_HEADER___9087A7F271D3D790A38473E0603644E5___4051A1DFD32F501AB1EB47AEE5569E00;
struct _V_NET_ROOT___67228D3E87097EDE9B472C5F8816F370___D3338666C09A8578FAD5206245EB6400;
struct _ERESOURCE___0F9CA66D6BD1B66FB152E2AC5421C126___70F280A3DEE89B0F258B5EC8A3BE63AA;
struct _IRP_________63BBF9CAFCFD23268916A053C4643290___D67882FDDE0993B795A398485751D997;
union _IRP_________665C8370128C04AB892B069E6FB086E8___8B5CD6CDFBAAB114E6B0B83ED2C2A4E9;
struct _MRX_FOBX____383A86132F0018DAD323C741CB139F27___1AD73BDAAE097FB53141F860CE77F2CB;
struct _PCC_TABLE___83536B2122381EB1BF94D79CF0D5F89E___8A9F02FD7BC4DD12824BA4C68FE6B03F;
struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY___C238245912B9C54C7D9DB158AAAEEA48;
union _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8;
union _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4;
union _DL_EUI64___111DC19AD74244695D2230B77DE8AE02___A9DCE9EB2C6B848E9C6868EF1C1A4D5A;
struct _DXGK_PDE___7E37419C9C4A9D7B990FC9CE94D534E4___5B6B5864B9D54C2E38FEBF61B894C1CF;
struct _DXGK_PTE___E0A8C8A05CB3CF7081FA3F36783E9131___B6F1E4DC78FE35545F3C2E803FCB1620;
union _IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS___8EB445A79BB4AE80EB9672A9FB0D8476;
struct _NET_ROOT___340FAF2C1DA1218AC74455EBD02C5C0A___4CB3A38A6DD30C9447592C75F663798A;
struct _SRV_CALL___0ACC7C61618F999A81F788F7C5AA38D2___B9369606FF1834C7F170102E1B88C818;
struct _SRV_OPEN___77A51EE1E80C64E222053A0C90FCC703___4A191DB403A6ECE0FF5004BC7D821FF6;
struct _VLAN_TAG___439FFFA6F528943BE2F423ED909F8DC1___C4451011160A8F3572F11B1881C01209;
union _FOBX______ADD771FE9CD79D23D667359594276EB2___865247889A0C7AF3CF91917EA6941236;
union _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3;
union _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83;
struct _PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER___5BA7C143CE7966D60CEDB6D7415F71DD;
struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS___C238245912B9C54C7D9DB158AAAEEA48;
struct _PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER___39C386DD28FDD484F36F0B7CA0059F21;
struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___1C732FDD310020FA7128495F79C8FC1D;
struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___6FF2EA7F93E3FC49E9FC7D42382D3B64;
struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___D7ABDBAACD9DB800E4D6CE155D0E9319;
struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS___EBBD5017D96525D77178BA3E4B036D03;
struct _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS___73DDC73F6A9FBC135E9914E62BF32308;
union _IRP______1DDC8106121C6C57578C3B7B583E783E___72AAA2734763A5172362D9A41AF08CB4;
union _IRP______2AD798E65616C4F7304824DBFA27E419___63BBF9CAFCFD23268916A053C4643290;
struct _IRP______2AD798E65616C4F7304824DBFA27E419___665C8370128C04AB892B069E6FB086E8;
struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___IPV4_ARP_PARAMETERS;
union _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A;
struct in_addr___4F64C6817212FE4AF89030399F21EE2D___B9D7529FFD1842B2B059BD2E926FB2C5;
struct in_addr___4F64C6817212FE4AF89030399F21EE2D___F085A1F6735C7CEA9C650424FAF692B1;
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___THRESHOLD_RESOURCE_COUNT;
union _NDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO___FBC3E3D200D1894498D4254511F52EC8;
struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___IPV6_NS_PARAMETERS;
struct _PCI_COMMON_HEADER______PCI_HEADER_TYPE_2___BF732D50E3BB202AC9DF9F724DDB36D4;
struct _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER___733AE15B0C3BC85882D4F5FD4F4261B3;
struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK___C238245912B9C54C7D9DB158AAAEEA48;
struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY___5CEDD6DE0469F7C458057B946BAEAEAC;
union _DXGKARG_GETSTANDARDALLOCATIONDRIVERDATA___4B54797CDD414360C77500AE5D81FC70;
struct _FOBX___980A609D988DBD4CB131C399AACA181C___46B6635654A84F3F68986807E5ABC352;
struct _FOBX___980A609D988DBD4CB131C399AACA181C___ADD771FE9CD79D23D667359594276EB2;
struct _FOBX___B95E32BA05695D37ADEEDE609BEA19EE___154C6638EF194F9A81AE81169DF8572C;
union _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711;
struct _KPCR___ECC1A0E65F841FBB98040378B25C100B___1652290D526860EA48CDE12F1525BEA4;
struct _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY___B7574879703BF72EB610F2F1617FB9A2;
union _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE___1A0DE5E9D8917651411CC9599FC7DD6D;
union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX___293D76B56AB4224063B0E84352A448B8;
struct _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS___7E0C474F883E1834B3C25CB8F2CF97DD;
struct _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS___87F9BFB18513EDB3A7E0A3216175706F;
struct _______FE8FDDC6ADACC1B4F7EC8CFC7CAEB9FF___006192E8E41FD8F2EA1B27D51D7CA475;
union _DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS___E8833107248134010C284DCB80BEA478;
struct _FCB___50C0FDD650F19B09787FD38ED35AB87F___E4F32DF01258BB49EB743B84D1B370FA;
struct _IRP___66699B8BF83DC91F51A70E4C6E3F33A6___2AD798E65616C4F7304824DBFA27E419;
struct _IRP___6B96A96ED958C92F2CB4B83EAB343043___1DDC8106121C6C57578C3B7B583E783E;
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___BACKGROUND_SCAN_STATUS;
struct _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER___D9C74A38A870D0320034BBD65C683AD2;
struct _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER___679760A62E4138D50BDF4FE2A647D3A1;
struct _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER___59873FEB55F6600C99E31DE5AC76366D;
struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS___5CEDD6DE0469F7C458057B946BAEAEAC;
struct _USB_DEFAULT_PIPE_SETUP_PACKET___wIndex___C5207073352B9080466BBA41ADF73D00;
struct _USB_DEFAULT_PIPE_SETUP_PACKET___wValue___C5207073352B9080466BBA41ADF73D00;
union _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER___CFC7B0DA028A7F4F3B52DE418131CED1;
union _CLAIM_SECURITY_ATTRIBUTES_INFORMATION___849AEB11D7805A845288B570A3606227;
union _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5;
struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_0;
struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_1;
struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_2;
struct _PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER___9BDE94C8FE1CF521A2B6D72B34D087CA;
struct _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS___9503091861CF4683EE1755DF66CD71EF;
union _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING___CFC7B0DA028A7F4F3B52DE418131CED1;
union _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1___F8600A37A74FD5E8A633BFFD12DED29B;
struct _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS___98D8E7E308266478D1D362C4BD74CF14;
struct _PCI_EXPRESS_DEVICE_STATUS_2_REGISTER___AAB7521546E80192293BF045FBAEF5A5;
struct _PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER___33B85A381B3FEB24A38E4197A9E1BED9;
struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK___5CEDD6DE0469F7C458057B946BAEAEAC;
union _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR___7981EB885823FFAE046A8EBFAC9A705A;
union _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6;
union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088;
struct _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS___F816CA965C8EB9964AAB88E39FD7C726;
struct ____1B15D34C184CB996FC269D8F9168C70F___2045542961514ACF8A05342E7D7A4BD3;
struct ____1B15D34C184CB996FC269D8F9168C70F___40DF1D993F355996A89CD36C5B1ABF70;
struct ____1B15D34C184CB996FC269D8F9168C70F___557E0A75632B2AB77ABA22F73346E46E;
struct ____1B15D34C184CB996FC269D8F9168C70F___58C2C17DBEA3E5C4294F58D3F434B669;
struct ____1B15D34C184CB996FC269D8F9168C70F___77A8D5BA7911BAC3E5E8672810CEE79A;
struct ____1B15D34C184CB996FC269D8F9168C70F___88E5B7AA2308BDD340E63FD79CED674D;
struct ____1B15D34C184CB996FC269D8F9168C70F___F0EAB68459A9F767BF6487584D0432BE;
struct ____1B15D34C184CB996FC269D8F9168C70F___F60F9682E16A06CBF246055AD9379216;
struct ____38AB66A4EA7C49F20D686D738A108FEA___013671E5920392F7B68C675C97F9F7D8;
struct ____6FF570DE39DD7AC51D2C8779583801A9___78C70DD6D6F7B4A2EF6C7EC5E1A96854;
struct ____7D59497C865DE6C98CEC474B1DC28F43___3F669E74CC6D42C10CB60EC7CCFC5702;
struct ____7D59497C865DE6C98CEC474B1DC28F43___97C49605D0EAB7C21A896C4F2E74D2BC;
union ____99F8928C094CB2C20BF05591F5CB082D___FE8FDDC6ADACC1B4F7EC8CFC7CAEB9FF;
struct ____9EF2451CEFA2D95A0F2C171B14CF10A6___DEC6D8E934FC1F5324F6B18F87CE5851;
struct ____C0FDAA75702D310095668259A700B2EB___87BB28B1146A9074D2787F4C46A2017B;
struct ____E178C36FC483474FC566940F4ECECCD0___12EDD93CAC4208332C3108DBB4839320;
struct ____EED1528C7EAD0409AD8D581383F39997___38167C14DDD6FD68ECBEEF1BA5418F40;
struct ____EED1528C7EAD0409AD8D581383F39997___7DB82CB5BC08FF580B488AC7D1BB7838;
struct ____F044539147C377D1A0F579F3A4EAC6A7___8DB12206A787E12F5CB68E9C5F8D04FA;
union _DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS___CD4A4751E03E0E13D07F13C0897CF7F0;
union _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS___0A21D9AE078C811356AA56F1AA8C2BF4;
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___DATE_OF_MANUFACTURE;
union _NDIS_NET_BUFFER_LIST_FILTERING_INFO___B48DC90554B964DE8C747D9B814BBB60;
struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___IPV4_TCP_SYN_WOL_PACKET_PARAMETERS;
struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___IPV6_TCP_SYN_WOL_PACKET_PARAMETERS;
struct _PCI_EXPRESS_DEVICE_CONTROL_REGISTER___FF07EAD2A1FC4493A4326FA96B8509C3;
struct _WHEA_MEMORY_ERROR_SECTION_VALIDBITS___CA2549C9282E981BBD06140190CACED9;
union _D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS___A8B88D5BDB1228732AE547855E9ABDB5;
union _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS___034D7373B817C02422E4D62DA035E5FF;
union _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93;
union _IO_DISCONNECT_INTERRUPT_PARAMETERS___8EB445A79BB4AE80EB9672A9FB0D8476;
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1___5E52735AD19ACB0310D2F12B8DD890CE;
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2___AAE8E5EF1AC450E09B5EEC83DD02498B;
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2___F6900041418FEA52CE0185D09FCBBC16;
struct _PCI_EXPRESS_ACS_CAPABIITY_REGISTER___E2489E6D610F7CF0B3F6210AF02A76C7;
struct _PCI_EXPRESS_CORRECTABLE_ERROR_MASK___98D8E7E308266478D1D362C4BD74CF14;
struct _PCI_EXPRESS_DEVICE_STATUS_REGISTER___8D16E2D3140029B99C59EF1414D8FA91;
union _PROCESS_EXTENDED_BASIC_INFORMATION___E6BF994F87CD7E8E9F73233F6875B43D;
struct _WHEA_ERROR_RECORD_HEADER_VALIDBITS___303239889594314C554CBA593C88201B;
union _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F;
union _D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS___655BA7FA29CCB4E6E8B3A600E5702580;
union _DXGK_CREATECONTEXTALLOCATIONFLAGS___61A6213A88C057D16E4E0A395CF0FF00;
struct _DXGK_PRESENTMULTIPLANEOVERLAYLIST___9E15F1C4ADB895F7C878D486221D8304;
struct _IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS___E626C5E7F1FDB3EA13C1C77C7D656CD4;
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___SELF_TEST_RESULTS;
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___SOLID_STATE_MEDIA;
struct _PCI_EXPRESS_CAPABILITIES_REGISTER___D337D576951D723C09FB7F464F1ED801;
struct _PCI_EXPRESS_LINK_CONTROL_REGISTER___BE1F288DD5954ACB2B5DBA4752D8F166;
struct _PCI_EXPRESS_ROOT_CONTROL_REGISTER___BCB46F1AB8E2650210485E57DA7EFF70;
struct _PCI_EXPRESS_SLOT_CONTROL_REGISTER___7F355CBA7DE41F13E8F39C22E6505FBE;
struct _WHEA_ERROR_INJECTION_CAPABILITIES___45331E6F0F3048A1678A6E0B376D3893;
union _057D959110EF5AD26CCA8DAEC04011D1___18711787946D537D259722AB27BFCBD3;
union _117E3A994AEBF040E18388CACE709509___F044539147C377D1A0F579F3A4EAC6A7;
union _15F35BF8B73635FE222DFD2153EC2695___817E162991BB60FEE8D3126C21A6C91C;
struct _15F35BF8B73635FE222DFD2153EC2695___A566F97FD8A813538FFE7A14C974CE0A;
union _1E1F3A8FE12995513A3555C52633C7C9___9BC4A883C75E3D7D69E68DB5928F8CDB;
union _1E49DD38FB2118FBA108586CF41E8D50___E178C36FC483474FC566940F4ECECCD0;
union _2319D0803FA8D60BE4B5925A7A9CB62F___6FF570DE39DD7AC51D2C8779583801A9;
union _2319D0803FA8D60BE4B5925A7A9CB62F___C0FDAA75702D310095668259A700B2EB;
union _24396BA7B1ABFC61208375C7C88D8B5F___DA7EE1E32CD45FB8635BE676609FC669;
union _2CC32A13BC47B0ADD425440A5881DEFA___F1120EB057508E4EB018F6F06D0FF063;
union _33D5B48BFB25F68EBEA0D059F2171BBA___32A657B5357991FC951178A7ED233F2B;
union _33D5B48BFB25F68EBEA0D059F2171BBA___58FB3E9EF9061AAB6CC24D01751A314D;
union _37B8E770EA172EE03D1653C7B692D623___1B15D34C184CB996FC269D8F9168C70F;
struct _407A2FFEB90671F2460E9DB49EB613D5___BFBB13DB58F1C35A5B00643EA83A5652;
union _48F34F6E58318E719B3C17D5DF8D3416___BF32DB6F8F7ADBF71F90C18AFCE2FD9C;
struct _49DE94CD170A783608C4A6CA5E13CF1F___445634E971F5AB42189D2AF4A82D7917;
struct _49DE94CD170A783608C4A6CA5E13CF1F___EEA291B95E2758FCA85357F8BCFF0FA8;
union _4C3688935B439E6B73B5D283DA0CA595___9EF2451CEFA2D95A0F2C171B14CF10A6;
union _5A8D7CCD30F40712144BEFCDAC7E1929___3D2B62F9915B44C4461260C3662DC358;
union _6659DDBE55020196BB0156953601526A___EED1528C7EAD0409AD8D581383F39997;
union _6D91A0F5ACE4E1ABC2608485BBBFEC12___38AB66A4EA7C49F20D686D738A108FEA;
union _742D342C7048E2C3902DF7570B72F6FC___1E7C0E17512837337D4DA69F160D7B1A;
union _798F2A0931AE69495F6CF5BE64E576B5___C07814F2AB249BB45CDFEF44975072DA;
union _79EFEDCEBD127DAA6245792B357A1A48___EED1528C7EAD0409AD8D581383F39997;
union _81CBD782E1765289C4F89D039AD60F12___9F1A7E006C2BA3848AD5B824CC804FF9;
struct _90FA911F5F1D4FE086DF5A0612D3E63E___C647542A1E5DFD351C2D0807CB3F9E35;
union _A2B9D6959A188CB660A127F9232FE650___99F8928C094CB2C20BF05591F5CB082D;
struct _A4FB595EF421231CAF150DDD3288A6D5___33A5881EA3D20175AF6F6CBC82269B7B;
union _A9A577EE7A824FAC978D1F581F222FD5___5A61C97CDA6B159BFB90D97CD02CBE5B;
union _ADC8229B35D2FBAA1DBEA2E6CF74A72A___CC5A134094C1157C29EB10C0D9181A57;
union _C0F7BB227D2914979DE22500D0E4A4BA___0CCE2AE982A077A8E6346F069E293B38;
union _C0F7BB227D2914979DE22500D0E4A4BA___AC534CA50395027A7F697CBC885BBBC2;
struct _C62299E2FAA36942CDE27418DA4FF5CB___5DF234520AB1AC2CADFED3B4B74AA075;
union _C62299E2FAA36942CDE27418DA4FF5CB___7D59497C865DE6C98CEC474B1DC28F43;
struct _C9F2A16A1B5FC998B91DA494984E0FDB___0559678CAE7576A37561112FDF9C20E6;
struct _C9F2A16A1B5FC998B91DA494984E0FDB___F7C05C0C56E55CB044DFD46C70BB2992;
union _DE8F492EE455543594962797C1392B09___5BDBA56DE03A5015F28D8AA8E2E4ED3B;
union _EF62F39E220E1A59E4CABD7B09369D89___209F08508D464E0EBFB2D318B910257C;
union _F686D1C2766FDD5B6EB9F09F9CA57BCC___82DE14DB9EA53355F37C8BC9C4425BE7;
struct _FAF6A73AFD9895CF3E56308E3C23E916___C647542A1E5DFD351C2D0807CB3F9E35;
struct DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO___FBCA4EB12BF1C0767298C36EFA7C0892;
struct _ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F___ATM_AAL0_INFO;
struct _ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F___ATM_AAL5_INFO;
union _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB;
struct _DISPLAYID_DETAILED_TIMING_TYPE_I___0B9E5C82A537FE04348FC016FB6647EB;
struct _DISPLAYID_DETAILED_TIMING_TYPE_I___9EE0A142F0F301DE9B45F63555A35675;
struct _DISPLAYID_DETAILED_TIMING_TYPE_I___D79DFD3846F6A5C179FAD220967B78F0;
union _DXGK_SETVIDPNSOURCEADDRESS_FLAGS___0DB8D2702BCADD830BEA3156E7D1B675;
union _FILE_REMOTE_PROTOCOL_INFORMATION___63A064FF7C4EF3DC6E958885DE390874;
struct _FILE_REMOTE_PROTOCOL_INFORMATION___865097E02C343FFD892BE5274F1384F8;
union _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY___45A98C1F8CA82C31F92D6F2DB941F5BF;
union _NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755;
struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD___85AE8A1C7DB2D3F8E7B70522EFF4A40E;
struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD___A5EADBA4742C6114AFE67D153539770B;
struct _PCI_EXPRESS_LINK_STATUS_REGISTER___D69A6337DE42BA55564AE370D64BFAE3;
struct _PCI_EXPRESS_ROOT_STATUS_REGISTER___4F434F80AEC764354DD51998F5874A53;
struct _PCI_EXPRESS_SEC_AER_CAPABILITIES___CD69AB3F7AE1D8CF5FBE5824A8E3B866;
struct _PCI_EXPRESS_SLOT_STATUS_REGISTER___E4062700D507CBE17820A0562DC02DD8;
struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY___D2E2FD7B103617CDB3471F8365D365F6;
union _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7;
union _TXFS_READ_BACKUP_INFORMATION_OUT___C1F058836943135750608F5E6F329B74;
struct _USB_HUB_30_PORT_REMOTE_WAKE_MASK___F4148C9CC9B661C03E82E006C8766DE5;
union _D3DKMDT_MONITOR_FREQUENCY_RANGE___5DFEF500743829CE0535851E9E30CA31;
union _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2;
union _IO_CONNECT_INTERRUPT_PARAMETERS___2E6CC9919A7A4E65C2869C27AF9F4E89;
struct _IPV6_ROUTER_ADVERTISEMENT_FLAGS___0A9F88BE9FBAC81DEAEFC8E114D245E9;
union _LOADER_PARTITION_INFORMATION_EX___86D3AC22214D8559AD53D7C151554AB3;
union _NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671;
union _STORAGE_DEVICE_LAYOUT_SIGNATURE___EAC3BE34E0D92A563AB4E2E6C3906A31;
union _ACPI_EVAL_INPUT_BUFFER_COMPLEX___CFC7B0DA028A7F4F3B52DE418131CED1;
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA;
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___C4C4F695C967872700C046BF7B6AB829;
union _BRB_L2CA_OPEN_ENHANCED_CHANNEL___F699C0DB98285CF9E5D39CB87B49A7E7;
union _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16;
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___551B0CF679922063F379905F8C1D5CE8;
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___B42F2B2B4BBA4E8DC819D947841EA255;
union _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V1___B783A93C66F3958767B0FFA5BCA43F70;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2___7FB4AAE69F10985DCBD38DFCF9049415;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2___F6900041418FEA52CE0185D09FCBBC16;
struct _PCI_EXPRESS_ROOT_ERROR_COMMAND___C9FDF6600CA518887781372DF821BFD8;
struct _PCI_EXPRESS_TPH_ST_TABLE_ENTRY___BF5EA3584C0C6633909A3F73F70152F1;
union _PCI_ROOT_BUS_OSC_CONTROL_FIELD___0A44648A440ADCC9299E094591176B02;
union _PCI_ROOT_BUS_OSC_SUPPORT_FIELD___12366B4554501CEE1BDEB101C5AF44CF;
union _PROCESS_MITIGATION_ASLR_POLICY___92EEC1AC3E0202E7FB93616558A78AB6;
union _VIRTUAL_HW_INITIALIZATION_DATA___0FF088419D5CE492B61F851A1D5DBD89;
struct _VPD_BLOCK_LIMITS_PAGE____________1171F22B554AE5456697F3AA7B60F002;
struct _WHEA_ERROR_RECORD_HEADER_FLAGS___437784891AA9E873707BAF02F9C8B216;
struct _WHEA_GENERIC_ERROR_BLOCKSTATUS___8E748FF62B0DE0015AF471E0F7E6304E;
struct _WHEA_PCIEXPRESS_COMMAND_STATUS___3F732B5E21BA338017FAD933910A3B51;
struct _AER_ENDPOINT_DESCRIPTOR_FLAGS___644EF056A6BCD34BEB130C59ECDD245F;
struct _AER_ROOTPORT_DESCRIPTOR_FLAGS___EFF43A9EAE4B7B62E532E338439EC9F9;
union _DXGK_MULTIPLANE_OVERLAY_BLEND___1E37BDD2558EEDD3B8B05F66E3722F95;
union _DXGK_MULTIPLANE_OVERLAY_FLAGS___BA4570F1357798E6B2AAE11FBDFE711D;
union _OB_POST_OPERATION_INFORMATION___9E26F4D194EE3F8ED97EC5420551EEA8;
struct _PCI_EXPRESS_ROOT_ERROR_STATUS___63031A8666915B2575DB899C0AF35723;
union _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762;
union _PROCESS_MITIGATION_DEP_POLICY___F116839C509786518B7C72B8B76ECE10;
union _CDROM_TOC_CD_TEXT_DATA_BLOCK___467EDB5D48A0B01833F2860D1359C73C;
union _DXGKARG_UPDATEPAGETABLEFLAGS___050F7664A78ED8E1CD2034B3C2BB2C31;
union _DXGK_DESCRIBEALLOCATIONFLAGS___2BE12FD22C72134B114850BA9D4E091D;
union _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11;
union _DXGK_SETPOINTERPOSITIONFLAGS___EDB2CF8C2113AC57422ADD41F1F67284;
union _HIDP_KEYBOARD_MODIFIER_STATE___09F65E3D8EC31FFE3E62B668D67CDD30;
union _IMAGE_RUNTIME_FUNCTION_ENTRY___5CE347C3E3AA0FA9F4F8F0D1051C3C6A;
union _NDIS_CONFIGURATION_PARAMETER___CAEDC0C5BA1E496165C848BD75AE74FE;
struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD___AB23E12DE29272C03DA85FFDA3AFB0C3;
struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD___BD1ABE3F7089330570815518DCEC2E2A;
struct _NOTIFICATION_MEDIA_STATUS______A64B2677AFBFBDCEB30F044C30307B18;
union _OB_PRE_OPERATION_INFORMATION___27673A9B23E3827F846C9CF36744DA66;
struct _PCI_EXPRESS_AER_CAPABILITIES___B122B60A73C0073EBE81EF7DAD0DD591;
struct _PCI_EXPRESS_PME_REQUESTOR_ID___2DC6C11806CCC5D8E8048E1ED5002165;
union _SET_PARTITION_INFORMATION_EX___ECBF70424E32A71371BB3749E7C6F2EC;
struct _USB_FUNCTION_SUSPEND_OPTIONS___B9F42C73C99009482819DE74B79AF743;
union _WHEA_ERROR_SOURCE_DESCRIPTOR___56ED19DD1B595419A3CAA61DD61D8112;
struct _WHEA_NMI_ERROR_SECTION_FLAGS___0A6B79CB4316EFFE316115F1C7AE6602;
union _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D;
struct _AER_BRIDGE_DESCRIPTOR_FLAGS___DA323376D87A17572D4BAAC59ACA696A;
union _CLAIM_SECURITY_ATTRIBUTE_V1___250FC43820722680DFCAB37A6DA5659E;
struct _CLASS_FUNCTION_SUPPORT_INFO___BC31D02BDFED8E48EFF79C7269298751;
struct _CLASS_FUNCTION_SUPPORT_INFO___C8451C2C65B56671EE6E9E14E6F6646E;
struct _CLASS_FUNCTION_SUPPORT_INFO___CA87E02B5CCB4A8C12E403EBDC16A39C;
union _DOT11_RECV_SENSITIVITY_LIST___3E10F19293958D459085543E1DB0EE9F;
union _DRIVE_LAYOUT_INFORMATION_EX___E2E3D8483D032B54611BEB6ADCC46344;
union _DXGK_CREATEALLOCATIONFLAGS2___D1A97408460E1FEA85F44866C81053FF;
union _DXGK_DESTROYALLOCATIONFLAGS___A1DA969D0BF462BE86DF3AAFED10CC89;
union _FUNCTIONAL_DEVICE_EXTENSION___50C61D085A2F906BF66460A0C351E861;
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___TEMPERATURE;
struct _NETWORK_OPEN_ECP_CONTEXT_V0___05ECC70A33AA78360CE5BAA96286B27B;
struct _PCI_EXPRESS_ERROR_SOURCE_ID___DDA24732C4B871AD437034059C0FCEEF;
union _POWER_STATE_CHARACTERISTICS___3444A41F8A39DA3EB5A6D35169EAB189;
union _TDI20_CLIENT_INTERFACE_INFO___17090AB1AC76E3F51FDFECA895B54C88;
union _TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529;
union _TDI20_CLIENT_INTERFACE_INFO___DBFFC609AC9C9DF31CC2C895F8D48A3C;
union _VPD_BLOCK_LIMITS_PAGE_________48AE7A0C43572EBB1C54711BBCEF1E27;
struct _WHEA_XPF_PROCINFO_VALIDBITS___3C1F6002C2BC1C6104160BD0BB9BEBBC;
struct _DEVICE_MEDIA_INFO____________13DAAE7CADC79513027175D5D6580D0B;
union _DXGK_CREATEALLOCATIONFLAGS___2C1DE17B3602DD7A1C3B69ADBEDBC48A;
union _DXGK_POWER_COMPONENT_FLAGS___D180033327BF7FFFCDCE62B6821A55F9;
union _DXGK_SEGMENTBANKPREFERENCE___C6C7745BB49F41DCAE1615122A006DD8;
union _IMAGE_DELAYLOAD_DESCRIPTOR___24F6574E5593E2C842E103EF8265DC95;
struct _NDIS_OFFLOAD_ENCAPSULATION___B2822AC75AC4B94EB74A1441EE0BFACA;
union _SYSTEM_POWER_STATE_CONTEXT___364D4FCA241438740838CF50D18006E2;
struct _TXFS_GET_METADATA_INFO_OUT___739594F3E437CE445B9757A30828364A;
struct _USB_PORT_STATUS_AND_CHANGE___06D7F19183DD338F8D2AD97F0DBC7E2B;
struct _WHEA_PROCESSOR_FAMILY_INFO___62A8DAF1CB19E49D91E3DACC630DA822;
struct _CDB___SPACE_TAPE_MARKS______723BA1E74126376B75E150C11F3E5EB8;
union _D3DDDI_CREATECONTEXTFLAGS___DEAF33FA41163E0FF876B6E6CC0834BA;
union _D3DKMDT_VIDPN_SOURCE_MODE___01EDAA54D3F2A7060C07B479CB91114F;
union _D3DKM_TRANSPARENTBLTFLAGS___70EB8777C082EFE4C602960A67FF671E;
union _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A;
union _DXGKCB_GETHANDLEDATAFLAGS___5572F66C59C9F3A90BDF1613B7A48E48;
union _DXGK_ALLOCATIONINFOFLAGS2___98E3A45A4DBE36C032B4E4AC2E8B9F54;
union _DXGK_ALLOCATIONUSAGEINFO1___2A9579F41F778F14D996C4BC0A4DF902;
union _DXGK_ALLOCATIONUSAGEINFO1___C317DE8A1589ADE636AC0CB74A84EADC;
union _FILE_OBJECTID_INFORMATION___A3F92533EDD69EF294B8F85C72EB0335;
union _FSRTL_ADVANCED_FCB_HEADER___497FAF580C19703F3851D2AABA9676AF;
struct _GP_LOG_GENERAL_STATISTICS___1350F65D8D90970E4E3E116C40691EBE;
struct _GP_LOG_GENERAL_STATISTICS___8FC98EEE0DC2E70BC55E2F60E42B37BA;
struct _GP_LOG_GENERAL_STATISTICS___AC9A22C2F9C10B348A85CE2CC0A55F94;
struct _GP_LOG_GENERAL_STATISTICS___B9451235FC33A6343B7364266B17A909;
struct _GP_LOG_GENERAL_STATISTICS___F7D30742C50C0EA5208BC15FB67D657A;
struct _NDIS_WMI_IPSEC_OFFLOAD_V1___04B785E902F554EE82AB5A3EF1E8BED0;
struct _NDIS_WMI_IPSEC_OFFLOAD_V1___37618DCDF7B57DD82418D90E0A50FF53;
struct _NDIS_WMI_IPSEC_OFFLOAD_V1___D8E07F18D96E070BC89A9372D5814F4D;
union _NOTIFICATION_MEDIA_STATUS___7F016F2347F7A626442932B97010E935;
union _PCC_GENREIC_SHARED_REGION___10E8DF4D696433E5BFD564CD1D883F8C;
union _PCC_GENREIC_SHARED_REGION___27BE20E7AAEF8A28D5A3593632264250;
struct _PCI_EXPRESS_SRIOV_CONTROL___62BBC5D0F36C540DD5E2F4B58FEF697D;
union _PHYSICAL_DEVICE_EXTENSION___441C77CE4BDFA0084198F2EE5537E17E;
struct _SCARD_READER_CAPABILITIES___7FAA9F970C1886EDD50B9B3377DCDB8A;
union _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12;
struct _USB_HUB_STATUS_AND_CHANGE___494A1A55370F7FD1FED812E5A3BD4DA2;
struct RETRIEVAL_POINTERS_BUFFER___1BE95960A89AEFDDC7C143B6A7C3CEB0;
union _D3DDDI_PATCHLOCATIONLIST___0F98B9AEA6B883F69971393929BE9C10;
struct _DOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS;
union _DXGK_ALLOCATIONINFOFLAGS___9EBD3D271EAD7213A5F7051B20FA4555;
union _DXGK_DISCARDCONTENTFLAGS___833EF5D1359128C4E733B4C6CE94D49D;
union _DXGK_OPENALLOCATIONFLAGS___D8A898C3CC121BAA810A888BA7378A03;
union _DXGK_PREEMPTCOMMANDFLAGS___0D5650F9498A6B37A04F693A28355D8E;
union _HDAUDIO_CONVERTER_FORMAT___268651D303ED1FF2E9E207C3C058BF27;
struct _NETWORK_OPEN_ECP_CONTEXT___4394467ED109257AE2A2394666F4A3B8;
union _PARTITION_INFORMATION_EX___41520227951B374488E85ABED149FDD2;
struct _PCI_EXPRESS_SRIOV_STATUS___230D8E9DD6D1B7B03EB5AF197C5956F1;
struct _REPARSE_GUID_DATA_BUFFER___E4726FB01B43180CB4D608E8FC40A3CF;
struct _VPD_BLOCK_LIMITS_PAGE______6D8344D7D2E60C771339A25A2275A935;
struct _COMMON_DEVICE_EXTENSION___CB28ED112FDC3525E02BE69D95E78DC7;
union _DEBUGGING_DEVICE_IN_USE___C97601570AE780F8A4008CD204CAAD4C;
union _DEVICE_MEDIA_INFO_________D22BD4DC823953AE58E358A96C378F3D;
struct _DOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS;
struct _DOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS;
union _DXGK_CHILD_CAPABILITIES___9DDE597FBE4C2FCE091CE12E5A13564E;
struct _DXGK_CHILD_CONTAINER_ID___8F96A48BE5F5F140B50E0E2C33F50352;
union _DXGK_CREATECONTEXTFLAGS___DCE14139BF8D7994AEB61B9C12A1E22E;
union _DXGK_SUBMITCOMMANDFLAGS___6731932D94F59BD250F28E6270D01601;
union _DXGK_VIRTUALADDRESSCAPS___B92D749DF1DD3B9524F85FA541BF8C4B;
union _HW_STREAM_REQUEST_BLOCK___9AC406258F9759C0176992CA6A9257C0;
union _IMAGE_IMPORT_DESCRIPTOR___32690C7EF5B9C640E059CDC11577DADC;
union _IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5;
union _KSSTREAM_POINTER_OFFSET___4CF715FE59791F9AF0BCA050DECE6C8F;
struct _LOG_PARAMETER_HEADER______E905DA64F8277D89B8BF07FD43435193;
struct _MODE_INFO_EXCEPTIONS______4093EAC1ED3453951EF80FAEAADF12E7;
struct _PCI_EXPRESS_ACS_CONTROL___B4802C50A88B1C851D0BA896AA846108;
struct _PNP_REPLACE_MEMORY_LIST___FC773AB9D769E51F1BAEF74ABBA2004B;
union _QUERY_FILE_LAYOUT_INPUT___BDB76599BE499DA67E74B7A8F967A7F4;
union _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0;
struct _SCARD_CARD_CAPABILITIES___04A56D5AE48DCA620FF532F490C27CBE;
struct _SCARD_CARD_CAPABILITIES___57DB11C5A919C9FFEA42ABD013F0F605;
struct _SCARD_CARD_CAPABILITIES___67FC6CBD3288DA1B1063F1C083E8CBB8;
struct _SCARD_CARD_CAPABILITIES___6AC5016A1C89DDEA62C1DD2E494C2449;
struct _SCARD_CARD_CAPABILITIES___6E3D9C38B005446A1B3A45462E2C50A9;
union _SD_GLOBAL_CHANGE_OUTPUT___8CE7FB804F1AFA92BB72A9A8C03B588F;
union _SD_RW_EXTENDED_ARGUMENT___C73E6A1E0D5770B9EB75E35F076E7DDA;
struct _WHEA_ERROR_PACKET_FLAGS___C7D1ECE9C01D92286062F80E9BABF03D;
struct _WHEA_NOTIFICATION_FLAGS___D9F8BA727F02FA7D5CD681B2EFB762AC;
struct _WHEA_PCIEXPRESS_VERSION___F373AF903B78102C712ED151F57F9067;
union tagWNODE_EVENT_REFERENCE___35BDACE2D4BA78DD0D25FA8577D99EB2;
struct SMHBA_LibraryAttributes___91D40CC418AE3D350413FD3CA2834C70;
union _ACPI_EVAL_INPUT_BUFFER___CFC7B0DA028A7F4F3B52DE418131CED1;
union _CDB___SPACE_TAPE_MARKS___452053D96BC8D647FEF06A172E57CD82;
union _CDVD_CAPABILITIES_PAGE___254A78F1960B41FD07B3E9DD4326BCF4;
union _CDVD_CAPABILITIES_PAGE___89C222D438D1A4E3002E695748367B56;
union _CDVD_CAPABILITIES_PAGE___C34E40A4E7ED3A9507928E231B2F2525;
union _CDVD_CAPABILITIES_PAGE___D48E2D6B4C0C98BF5D603F20218AFD0F;
union _CDVD_CAPABILITIES_PAGE___E47D562C812A0990AEEC54257C58558D;
union _COUNTED_REASON_CONTEXT___0169A8C3C5184AFD0045925CDBD9A996;
union _D3DDDI_ALLOCATIONINFO2___C37602EC42612761CBD3C806D59105EF;
union _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC;
union _DXGK_CREATEDEVICEFLAGS___2F67346E464C3CB5F4584001891B2DBB;
union _DXGK_GDIARG_STRETCHBLT___72D9C1E774232B238E507145974EF112;
union _DXGK_SEGMENTPREFERENCE___5F0E46343C77D0D7B0B3DAC6467FFF79;
struct _FILE_LAYOUT_INFO_ENTRY___CB15603BAC5FC127CE80876F979A76A8;
union _GENERAL_LOOKASIDE_POOL___069B740C1857A11367A9BFE4C43AA2E8;
union _GENERAL_LOOKASIDE_POOL___12DFDCE967313C3B7DB84D914C6D2312;
union _GENERAL_LOOKASIDE_POOL___15E753D7C02A960DCE39CA1D248AD77A;
union _GENERAL_LOOKASIDE_POOL___1DBA9DD087472369DDC11975A606CD44;
union _GENERAL_LOOKASIDE_POOL___30CCD2649BDFA90F272B33B2D857C57A;
union _GENERAL_LOOKASIDE_POOL___FB106391A1988A396D89C68A33D7E06D;
union _HDAUDIO_CODEC_RESPONSE___C3E611620E2F089E1A23F35E3CB26325;
union _HW_INITIALIZATION_DATA___0FF088419D5CE492B61F851A1D5DBD89;
union _HW_INITIALIZATION_DATA___629464E23AC53C7DCCC75BF07BD6EA4B;
union _IMAGE_FUNCTION_ENTRY64___20B872DD2F1538A436CF92B8294FA12B;
union _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02;
union _NDIS_PACKET_8021Q_INFO___8882A3A36CF70686E2666AD9F1873AAF;
union _NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D;
union _NLB_PUBLIC_IOCTL_INPUT___A898DB159985FE167F7F53788BA32DF7;
union _NV_SEP_CACHE_PARAMETER___D6AAA6E512359887CA6B2F20090C3374;
union _PCIX_BRIDGE_CAPABILITY___0853D9480451221ACDFBE7118BCCBE8E;
union _PCIX_BRIDGE_CAPABILITY___CA70B71BC10E862FDC7C78E196CAE6C9;
union _PCIX_BRIDGE_CAPABILITY___EECBA3A91F5E25257CAAF226CCCFD303;
struct _PCI_EXPRESS_SRIOV_CAPS___EEE46FBFC49F2EA055853CCCF568835B;
union _RX_TOPLEVELIRP_CONTEXT___5130196CA7666B8823729A067CD25FC9;
union _SD_GLOBAL_CHANGE_INPUT___A0DBCB078D30EE13E6919343E3D34626;
struct _BRB_L2CA_OPEN_CHANNEL___2205ED29735D6185B7CC4245BA253E72;
union _BRB_L2CA_OPEN_CHANNEL___C3EA006E90E98BA18A832E0DDC1D8811;
struct _BRB_L2CA_OPEN_CHANNEL___C4C4F695C967872700C046BF7B6AB829;
struct _CDB___SET_CD_SPEED______001D666376D0C4DBD36F80530E61A012;
union _D3DDDI_ALLOCATIONINFO___9C237A8DCEB414086FDDD8CA87C44C50;
union _D3DDDI_ALLOCATIONLIST___C80EEC70EA5C50DBE7190B67C99082D6;
union _D3DDDI_RESOURCEFLAGS2___81001EC007C0C438D87887A3711AD82F;
union _DXGKARG_SUBMITCOMMAND___2BF1231023CCF326F9650EAE9AC3A0DD;
union _DXGK_BRIGHTNESS_STATE___66C590267A583B1EC093FE09AF2A9D94;
union _DXGK_MAPAPERTUREFLAGS___D42F3BF489806A17BD1D237EC4E3FA1A;
union _DXGK_PRESENTATIONCAPS___C11F8E6BC7C43C2BB3DD3E618E55E425;
union _DXGK_RENDERKM_COMMAND___20FB83705FDF1C2BBDC788448CA29830;
union _HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C;
union _IDE_DEVICE_PARAMETERS___DC002D496C8A250B8E7023CEEB6D0A52;
union _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1;
union _IPV4_TIMESTAMP_OPTION___2E193DEAAB8F2BBFABCD47F30D0D12BC;
struct _NDIS_IPSEC_OFFLOAD_V1___2B28F3C4BF5C05EE63DD2874B5A956A7;
struct _NDIS_IPSEC_OFFLOAD_V1___4E67E90746235B7144A86866915CDA2D;
struct _NDIS_IPSEC_OFFLOAD_V1___D8E07F18D96E070BC89A9372D5814F4D;
struct _PCI_FIRMWARE_BUS_CAPS___F717B6ED75AD40500CFEB48B9575FAA8;
union _PS_CREATE_NOTIFY_INFO___0573261C701E630EF5641D92A6F614F2;
union _SD_RW_DIRECT_ARGUMENT___E799D1D7F4FD931B58035FED85E80D2B;
union _STORAGE_OFFLOAD_TOKEN___45C29CB8E6D02895655581947ABDA793;
union _TCG_DESCRIPTION_TABLE___C7581E26A4D392CED2FF0026FAC3559E;
union _VPD_BLOCK_LIMITS_PAGE___FA2E4E0823A0B10E6F7DCB7EE3FDAC7A;
struct _WHEA_PERSISTENCE_INFO___7AB0461A727F28B9D4873A511C9F9EFB;
union _XXCTL_LOWIO_COMPONENT___A5BF1F1DE168F2930E7B3CD36C2417E0;
union tagKS_VIDEOINFOHEADER2___01A44D9558BB1F61717C3B626DE377C9;
struct threadlocaleinfostruct___F0551D0CB09E7A078CAEF7CAC43D74C7;
union DL_TEREDO_ADDRESS_PRV___8AE4EEAF9BFB4C7125F7ADE378B0209F;
union _ACPI_METHOD_ARGUMENT___0083E76AA1C365C25C9D682C0B227FF6;
union _D3DDDICB_SIGNALFLAGS___37DCD84A128AE20AFACAE49DED23B1AC;
union _D3DDDI_RESOURCEFLAGS___0A8E4AF2B4ABBA3F67396D587D70E98B;
union _D3DKMT_WDDM_1_2_CAPS___85A070F6A014979135EAC7792424D6A3;
struct _DATA_BLOCK_HEADER______D5776D461B2025CBC9CD270DE2445408;
struct _DEVICE_MEDIA_INFO______88882CC45E21AA3B08D6DD74C9D19C54;
struct _DEVICE_MEDIA_INFO______F3A2277F3846D5D09599391720F7D644;
union _DXGKARG_CREATEDEVICE___88C7CC88C3AEB67EED929825372DD737;
union _DXGK_BRIGHTNESS_CAPS___D9D36000DE1DD4D29BAB8D412DCDF7E1;
union _DXGK_DEVICEINFOFLAGS___313A06C1F8E7A72B04D91FC65245D0A6;
union _FILE_OBJECTID_BUFFER___8A2E0D068CCE16AC437AD7ECF5548605;
struct _FS_FILTER_PARAMETERS___1BF1138F8D2DDD2E6462FEFA2C4F94BC;
struct _FS_FILTER_PARAMETERS___236B69F1384B32B472ACEC4C285A943A;
struct _FS_FILTER_PARAMETERS___5B669461F49D34FCB51CE394BE9DE27D;
struct _FS_FILTER_PARAMETERS___AA05E81392ACE825A6BBCE938D4EAD26;
struct _FS_FILTER_PARAMETERS___B5EF3880B5460E4FA7339BA4EC64CC87;
struct _IDENTIFY_DEVICE_DATA___08E70F6BE1BD6D9A212D4A1690DDFD0C;
struct _IDENTIFY_DEVICE_DATA___12A4342928D94AECC3A43EA0575FBAB8;
struct _IDENTIFY_DEVICE_DATA___14E40EC7098BD326031AA650FE1DB3FE;
struct _IDENTIFY_DEVICE_DATA___192FB275A46403967D21DE7FA554A203;
struct _IDENTIFY_DEVICE_DATA___1BE366EA36C6384A30F12CF34356AF9F;
struct _IDENTIFY_DEVICE_DATA___203C4FAE0BDA73D274908785397D9C03;
struct _IDENTIFY_DEVICE_DATA___225B350560ECC59032D39E74312893EB;
struct _IDENTIFY_DEVICE_DATA___5E4194840947852D208055E7E36F6DE0;
struct _IDENTIFY_DEVICE_DATA___70D97C1CA81047AA3A5C5FF02FCAA482;
struct _IDENTIFY_DEVICE_DATA___73BF718C0A16827ACF4BCCDC8FE0AB80;
struct _IDENTIFY_DEVICE_DATA___7580C65F02C015112FE06020CA159734;
struct _IDENTIFY_DEVICE_DATA___7ADADD728B0146E8D9DFD8DADFF2A168;
struct _IDENTIFY_DEVICE_DATA___7F7924F5455EF74EEF944BAF2D1B53E0;
struct _IDENTIFY_DEVICE_DATA___87ABCA1EF46434BB0666B0A3893466BC;
struct _IDENTIFY_DEVICE_DATA___8AC509BE06BC544968FA4DB93AEBE278;
struct _IDENTIFY_DEVICE_DATA___8AD45ED998F239B9E15610B6B0046E61;
struct _IDENTIFY_DEVICE_DATA___AE3BDDA92CBEF5805BC8903A20EBBF23;
struct _IDENTIFY_DEVICE_DATA___AF4503D6E1C5D8B2587D3FEE3C5AA5B3;
struct _IDENTIFY_DEVICE_DATA___AF56F38A6D7AB42A96A48238551AF768;
struct _IDENTIFY_DEVICE_DATA___C42486ED998A28B0E7112D29F2C90329;
struct _IDENTIFY_DEVICE_DATA___D62E39E1BA2C739F9147BD3FDBA79656;
struct _IDENTIFY_PACKET_DATA___4D0D8A6E1575DBFC8FF13E8F4AA06544;
struct _IDENTIFY_PACKET_DATA___65DE72EC710FD9FA26A6C725839D8094;
struct _IDENTIFY_PACKET_DATA___69679A9AA3F0126DD1D8A213A394B62D;
struct _IDENTIFY_PACKET_DATA___7580C65F02C015112FE06020CA159734;
struct _IDENTIFY_PACKET_DATA___7B6D9A62CEB2216D6ED8F277820BB2C0;
struct _IDENTIFY_PACKET_DATA___BA0DC10A0CB33F43BECBCA7EB8B60DE6;
struct _IDENTIFY_PACKET_DATA___C0EA3BD1A61AC099F9618D5EA8CD1861;
struct _IDENTIFY_PACKET_DATA___C4D62A0A000E4C4676633696250E3F53;
struct _IDENTIFY_PACKET_DATA___D309D3D129FE400D718FE1D4BFEA4633;
struct _IDENTIFY_PACKET_DATA___DE01DC02042077DE4035063B1BEDE90F;
union _IMAGE_SECTION_HEADER___4A6E593A9690750D94F7FA5A570333DC;
union _IPV6_FRAGMENT_HEADER___92C6B06247B11EB7CB56D4524B6C4DF2;
union _LOG_PARAMETER_HEADER___78DA7D7ACDB40656AE4F463B7A904041;
union _MODE_INFO_EXCEPTIONS___46486C1043A9BFDA7F1CD33DAB7A74FB;
union _SDBUS_REQUEST_PACKET___1CA46CBE469C5BC31243B2E5E7689902;
union _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C;
struct _USB_INTERFACE_STATUS___D36DABEEA71DB85ACF17B8F77B3F5EA6;
union _WHEA_ERROR_PACKET_V1___1E4CB6DF892A3CDE8BB341BD02892B91;
struct _WHEA_PCIXBUS_COMMAND___41F7F75BC920B1871F508779A190BAF9;
union _WHEA_PCI_SLOT_NUMBER___B33AE7BF1FDC215AED0B88878C3A5E8F;
struct _WHEA_XPF_CACHE_CHECK___6099C0CCB946F741D0A0BD22CEEE4581;
union DOT11_PHY_ATTRIBUTES___211D85AF04401B4C3AAB02FAE3102543;
union IMPORT_OBJECT_HEADER___8123182D7FCA810AFAD4545864718BF1;
struct INTEL_CACHE_INFO_EAX___5AAA3FCCBBF8AC3BEF7CBEB634486771;
struct INTEL_CACHE_INFO_EBX___B2AB10EA6CDAB471D57E9F6288C6AB56;
struct _CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B___LBA;
struct _CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B___MSF;
union _CLASS_POWER_CONTEXT___17E0FD5FF75A8E801AD8B6E16645E3EF;
struct _DEVICE_SET_PASSWORD___BC90B211B20C0B706D62BE1DAC65D53B;
union _DISK_DETECTION_INFO___48876EDB82F731E03DD8D988B59F7EB8;
union _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833;
struct _DOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS;
struct _DOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS;
struct _DXGK_ALLOCATIONLIST___936A4FEA36CE3B7BC231B771E91D6CFF;
union _DXGK_TRANSFERFLAGS2___4C244374FF25457F97E9B31CB89E7EBC;
union _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0;
union _HW_EVENT_DESCRIPTOR___5566F62EE5BDFEA92488954C24E62452;
union _IGMPV3_QUERY_HEADER___BADC5553DDFA9D11ED858F66D86D59FC;
union _IGMPV3_QUERY_HEADER___D8E78313C7C869914A98684B90C859EB;
struct _IMAGE_AUX_SYMBOL_EX___0B38B08C56F10253A28FEC508E6080A1;
struct _IMAGE_AUX_SYMBOL_EX___7DE2BBBE69FE3B9D9F705B9F266ED457;
struct _IMAGE_AUX_SYMBOL_EX___AF9309B91FE05EB19F86BDA86FAB5DEE;
struct _IMAGE_AUX_SYMBOL_EX___E4EB5173E13E498BE72EBAB3BCAF7D9F;
struct _IMAGE_AUX_SYMBOL_EX___F2683A71694251BD29D36860D2E756FD;
union _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS;
struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___WOL_BITMAP_PATTERN;
union _RDBSS_DEVICE_OBJECT___10CA472531081661EFDEFAD42E260FC9;
struct _RDBSS_DEVICE_OBJECT___8E5F2250B80FEA01BE2192B09BB2E785;
union _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8;
struct _SMARTCARD_EXTENSION___9855578B9592CE4ADCB1D8D489F779A0;
union _STOR_POFX_DEVICE_V2___0B5FC411B4C62088E1E17FEC8681629D;
union _STREAM_EXTENT_ENTRY___72E4D09D488BEF968C138C69BDFB0892;
struct _USB_ENDPOINT_STATUS___C3CE524354F442F1B06A73CA63E663F1;
union _WWAN_AUTH_CHALLENGE___E6006800066CD04FA0133270A2878C2F;
struct IPRouteNotifyOutput___EEE9818F3F84ECAEFE37CF9D6ABE2C57;
union _ARBITER_PARAMETERS___3A7A23006A6D0BBB6E18B2FA6F877FDD;
union _CDB___SET_CD_SPEED___5042636D3EF4672BAA051A846CBFD7E7;
union _COMPLETION_CONTEXT___A3035D131E712C9B8FDABD583C95013C;
union _D3DDDICB_LOCKFLAGS___ED792A498079A6342A08F53AEABA2A3A;
union _D3DDDI_ESCAPEFLAGS___1E6467755CCFD5D3734D714B43840EC2;
union _D3DKMDT_GAMMA_RAMP___833D6B2DFF43FD3049AE5520F396FCC6;
struct _DOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS;
struct _DOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS;
struct _DOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS;
union _DSM_WMILIB_CONTEXT___7BAC0EB42F04039DCC0E6CEEB0AA7162;
union _DSM_WMILIB_CONTEXT___9AA77EDF1265EA30C6E769CD24F15228;
union _DSM_WMILIB_CONTEXT___EA4A8BBD62C3B7ACB1B0449CF31EABE3;
union _DSM_WMILIB_CONTEXT___F28A93AD97002CA7E7D2FE1135B08147;
struct _DXGK_DMABUFFERCAPS___A59CDFCD4842FA309C91AA36896BAA4C;
union _DXGK_GAMMARAMPCAPS___01A74871349E05421D5F5860B0BC2732;
union _DXGK_SEGMENTFLAGS2___781DFF8C386BAF2FD5859671E4CB1CCB;
union _DXGK_TRANSFERFLAGS___4D1486DD1E7506599394F0F2A8A65E0A;
union _IMAGE_THUNK_DATA32___73C2E9E4D5513E54CD9FEBC1C78BE69B;
union _IMAGE_THUNK_DATA64___F155400DC8E777EDFF51409B49416578;
union _IPV4_OPTION_HEADER___4C1C3CB250A3C2661892A36CD59164CA;
union _LLDP_TLV_TYPE_INFO___E487BBF590D175501C59AA3CB0A964A2;
union _MLDV2_QUERY_HEADER___05E330219958D4FF52893F61F28F917A;
union _MLDV2_QUERY_HEADER___D24BA13BEDB45029026182C5769FF7FA;
union _SCSI_REQUEST_BLOCK___881DB7056EA58ED002ED8DEAE86A2418;
struct _SUPPORTED_ADVANCES___DA0C519E2D0E0B115FE28FF86470BB99;
struct _TA_ADDRESS_NETBIOS_UNICODE_EX_XP___AddrNetbiosWCharEx;
struct _USB_20_PORT_CHANGE___4591AA8E4CFF3B4B4BEE1BDCD73C24C3;
struct _USB_20_PORT_STATUS___D84CE26E1ACA930E07E2FD4D78C39651;
struct _USB_30_PORT_CHANGE___1C3A8138BBE744CC2165C52FE2F0EEC2;
struct _USB_30_PORT_STATUS___F68EB907A879B784CB9E4FCD94F166C5;
union _WAIT_CONTEXT_BLOCK___4501E438057B524022C881311375F7D8;
struct _WHEA_XPF_BUS_CHECK___46942ADF216CDDF9A252DB6562D8145B;
struct _WHEA_XPF_TLB_CHECK___6099C0CCB946F741D0A0BD22CEEE4581;
union _WWAN_AUTH_RESPONSE___EDA7B12D2E325970687F251858520D25;
union IMAGE_COR20_HEADER___32407F107936FCB17EEA014AB1E5DEE6;
union _AAL_PARAMETERS_IE___0FDB8D62C7DBB0B09ABD7E38350DE0B1;
struct _AMD_L1_CACHE_INFO___7F3D7DC6DEE4929F3B22493DFA423641;
struct _AMD_L2_CACHE_INFO___93F2A660E4CD3E37717BAE33F33D55E9;
struct _AMD_L3_CACHE_INFO___A61214777383D438D35F1F9A4ECBF3EC;
union _AVC_MULTIFUNC_IRB___19B143002B6E29BFBBF92C7766CBAC0D;
union _DATA_BLOCK_HEADER___BB186B0ECE516B444BF083DE287475ED;
union _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C;
union _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6;
union _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93;
union _DMA_TRANSFER_INFO___1AC9C7FF0B634D00F8691EAF3EBE776A;
union _DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5;
union _DXGK_ENGINESTATUS___71579A1E1FAD40681B38D2EFE6BBA1F6;
union _DXGK_POINTERFLAGS___C9573884F6BD666D6E4986CB772F7316;
union _DXGK_PRESENTFLAGS___759923E5051464C6F2E56DEAB7A49BFF;
union _DXGK_SEGMENTFLAGS___B3DE18E4A209DC1AB8FF5AECCB1010D4;
union _FLT_CALLBACK_DATA___312C66EF40AEDAF2A3A5D4554FF51F28;
union _GENERAL_LOOKASIDE___069B740C1857A11367A9BFE4C43AA2E8;
union _GENERAL_LOOKASIDE___12DFDCE967313C3B7DB84D914C6D2312;
union _GENERAL_LOOKASIDE___15E753D7C02A960DCE39CA1D248AD77A;
union _GENERAL_LOOKASIDE___1DBA9DD087472369DDC11975A606CD44;
union _GENERAL_LOOKASIDE___30CCD2649BDFA90F272B33B2D857C57A;
union _GENERAL_LOOKASIDE___FB106391A1988A396D89C68A33D7E06D;
union _IDE_REQUEST_BLOCK___6827F88AFC668996C2E61485C9C556E7;
union _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E;
union _IVHD_DEVICE_ENTRY___52C462F56CDF084018E3913BD4CBE19B;
union _IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2;
union _KUSER_SHARED_DATA___2FE92813FF9B9B4E284DEDC0C06BCA1D;
union _KUSER_SHARED_DATA___5E5F141A573F9B2433651B29934443B8;
union _KUSER_SHARED_DATA___CE0A0B9CF154763236C6E82AB829672B;
union _KUSER_SHARED_DATA___E012BA1FCB959C5ACB245290F5960DFD;
struct _MM_PREFETCH_FLAGS___F0C4C7D9B872C493007C4EE01995C4E0;
struct _NLB_HOOK_IP_TUPLE___EC338A43ABF6B75852E48F7D35CA5A68;
union _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC;
union _PCI_PM_CAPABILITY___0CFAED28D81EDD84E3F5FE60E5E74408;
union _PCI_PM_CAPABILITY___C45C7236308434D5F24B7026BFA487E6;
union _PCI_PM_CAPABILITY___D88BA7F7712EFFD5A716339859759941;
union _PMI_CONFIGURATION___399906DC0E414BE6CAEA0950F1FB4247;
union _RTL_BALANCED_NODE___6446A29996E22DA45E60A1EA14188AE9;
union _RTL_BALANCED_NODE___9BF36C84E3411792BEB9166F3629864E;
struct _STOR_SLIST_HEADER___873380EAC912F4CED96D83C084F02EE7;
struct _USB_DEVICE_STATUS___0B8A99F60B7FA7EDD835D7A15C0FC1AD;
struct _WHEA_ERROR_STATUS___390C86F153586C246F7E5B624A004BCC;
struct _WHEA_XPF_MS_CHECK___860AFE6EA3547F3F8363D000B0737353;
union _WHEA_XPF_PROCINFO___951C8B8409E073FB6F291BFA9F780EC0;
struct _XPF_MC_BANK_FLAGS___DD3EFD26B55353E648024B9E0E8957B6;
union nd_opt_prefix_info___398BCD3A84C3D8595978A4C13A2CD80A;
union nd_opt_prefix_info___B36C22119BA8D8A8DE4E1DF87B7DDAC4;
union DL_TEREDO_ADDRESS___90126361DB06D31AC779EF63186CE8C6;
union NLBConnectionInfo___E95D8C2B45558B13F22A96F6355E1CB1;
union _ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F;
union _AV_61883_REQUEST___F219298361C97389521033D921298EFE;
union _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339;
union _DMA_ADAPTER_INFO___30CB67B4FA26260D4DCF21117DBD827C;
union _HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893;
struct _IMAGE_AUX_SYMBOL___0C431E7450878A23F5A2614033BB8283;
struct _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA;
struct _IMAGE_AUX_SYMBOL___79192DA83C94219CD7DBAD7FD0DDA1D7;
struct _IMAGE_AUX_SYMBOL___8635EE7233618CADAED4C714D8F85165;
union _IMAGE_LINENUMBER___8F4018462B36FF5E08E7E47CD20461F4;
union _IMAGE_RELOCATION___B304133DF5C7CCD398D50216E2E397C0;
union _KSM_BDA_PIN_PAIR___54CD25B4E687557DB78A3697AAB04510;
union _KSM_BDA_PIN_PAIR___F2C15BE15B02E5D4E08CDF00E238673A;
union _MOUSE_INPUT_DATA___C2F358CA55696375BBE6CFBE88407757;
union _NDIS_802_11_TEST___EA8AE02B4DE78A1E972BFE0FFA71A62F;
union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___HEADER_FIELD;
union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___RESULT_VALUE;
union _PMI_CAPABILITIES___5717254535A888947B89412363774281;
struct _RATE_QUOTA_LIMIT___79FA692AF2D868318B7516C685A0638E;
union _RX_CONNECTION_ID___B825E9A178883B67F543C89189176897;
struct _SCARD_READER_CAPABILITIES___CLKFrequenciesSupported;
struct _STOR_LOCK_HANDLE___DF05CED8E4E68472CFDF14CBD12862B2;
union nd_opt_route_info___DC5D226088DB1FA6D255C52DD8FCB908;
union tagWNODE_ALL_DATA___2509F747D046B06D85040055D485D2C5;
union _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE;
union _AVC_COMMAND_IRB___39C82A5B2A48A1A8E03C983BBE5BCCB4;
struct _DOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS;
struct _DOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS;
union _DXGKARG_PRESENT___6C9CE20EBB898E736357E8F8761763A7;
struct _DXGKARG_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY;
struct _DXGKMDT_OPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS;
union _DXGK_PATCHFLAGS___3F44A29E3CF80453CA6C96B988F2597D;
union _DXGK_VIDSCHCAPS___5E74790812C969E3ACDA73D10C67000E;
union _ETHERNET_HEADER___1556FB332F5E2F39B2A0C943D96D0976;
union _HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41;
union _HOOK_IP_ADDRESS___E79D2EBADADA954EBAD234A2B8162860;
union _IDE_REGISTERS_1___20B55380DF4C8B3DCEB19895FEFF6C05;
union _IDE_REGISTERS_1___5BE01C1C87DC18EA931D2A1A4B00E24D;
union _IDE_REGISTERS_1___66A4CEBCA41C7F2F44834B6315F8F025;
union _IDE_REGISTERS_1___E03BE7A8061D78A453A4655D3BC8D71A;
union _IMAGE_SYMBOL_EX___F68D1BB612E723B85ECC44FD18D8129B;
union _IO_STATUS_BLOCK___77CEE0AF02806C16F943E6B3BF8ECA77;
struct _MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive;
struct _MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive;
union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___FIELD_VALUE;
union _NET_BUFFER_LIST___CCB763B4739EE3E630364C68588BBC2A;
struct _NTFS_STATISTICS___7571E070C889D08DB25D48A45EE92D71;
struct _NTFS_STATISTICS___9384ABB0CC0EC9C0951E51F8FDAAF22F;
struct _NTFS_STATISTICS___C26E01C8818FDA238FF8A90EE27DD2F8;
union _PCI_SLOT_NUMBER___49AFFD3D7EC59F1BE207C4846B68BFFF;
union _RXCE_SIGNATURE____133B17B9D3CB80B518FB5AF2A06254B1;
struct _WHEA_PCIXBUS_ID___92536E19E1A4E63488016EDB40D91DA1;
union tagKS_FRAME_INFO___9558694AFE91A3DAB1DCB8FEE644E504;
struct _BOOT_AREA_INFO___3839CBDF84A3CC2804B95051FB4D4A6B;
struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT;
union _DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995;
struct _DOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS;
struct _DOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS;
struct _DOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS;
struct _DOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS;
union _DXGK_VIDMMCAPS___0FC7972752449C7826273C22D7F8DC2B;
union _EX_RUNDOWN_REF___B53373035CFC48957629DB1D3A5A55C6;
union _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917;
struct _FLT_PARAMETERS___1668572F00F17AE5B41FB3467E028768;
struct _FLT_PARAMETERS___19A603DC746060C8601748F5A450859F;
struct _FLT_PARAMETERS___1BF1138F8D2DDD2E6462FEFA2C4F94BC;
struct _FLT_PARAMETERS___236B69F1384B32B472ACEC4C285A943A;
struct _FLT_PARAMETERS___28FCA4D722CF4A97784C865BFD6B2B2D;
union _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D;
struct _FLT_PARAMETERS___3145899A9181DB98718ECB838F857ECE;
struct _FLT_PARAMETERS___3622164DF61772CECDB513BD2EB7BD64;
struct _FLT_PARAMETERS___41B139D9CD7692782FB91B1F1DE88DB3;
struct _FLT_PARAMETERS___4EA9DD3B1B7070BE9209D6B23D90C430;
struct _FLT_PARAMETERS___546594058FF7FFDC9D8C0D4E10864DA8;
struct _FLT_PARAMETERS___5B587018489257566E3078D7CD7246AA;
union _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398;
struct _FLT_PARAMETERS___683C3EE208A9575EF36144430C7EF9B0;
struct _FLT_PARAMETERS___68BF592B97A76A0B8F7EC116AE55EF21;
struct _FLT_PARAMETERS___7563D854AF0F8A29D547365163A901D2;
struct _FLT_PARAMETERS___7BF83C65B01BCAEC150BF48E3913102E;
struct _FLT_PARAMETERS___7CA8F3751773063710B131C149F5D66B;
struct _FLT_PARAMETERS___8B4F3F4C47B95A7D4CF340B7EF6275B0;
union _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678;
struct _FLT_PARAMETERS___A8B5303DDD6CF49B21EB229EB6671508;
struct _FLT_PARAMETERS___AFAE931016418FD1718C58C39C98E785;
struct _FLT_PARAMETERS___B5EF3880B5460E4FA7339BA4EC64CC87;
struct _FLT_PARAMETERS___D24474CE3B68EBF89E5A61C71CBC75EE;
struct _FLT_PARAMETERS___E1830675726AC350ADD284B511E01E52;
struct _FLT_PARAMETERS___E62B83C9A059D9549228C87BE00B0E32;
struct _FLT_PARAMETERS___F38300D51E9A4C5A1745047EEB093AA7;
struct _FLT_PARAMETERS___F67E610FB32023731ED0EF1EC94F13C4;
union _IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT;
struct _INQUIRYDATA______CB49C0207A42B6C7BC0ECE4108D7F7F8;
struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO;
struct _NDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO;
struct _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS;
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct _ULARGE_INTEGER___A11EDDC93F80F43D83612CEB0708CAE5;
struct _USB_HUB_CHANGE___369110CA5D91C0E783CF3CC547869E9E;
struct _USB_HUB_STATUS___851A5CE610B0F5793D26DBBD007348A4;
struct _WHEA_TIMESTAMP___0E69AD184FCFEB7998E3B897182A8ACD;
union tagKS_VIDEOINFO___F8BBADE88DA80D04A6A2CB02740F1E2F;
union _CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B;
union _DDPIXELFORMAT___0E0BD8DB15B3F2A790C062F781315157;
union _DDPIXELFORMAT___10AA641B3215541DB69A48A361AE0013;
union _DDPIXELFORMAT___3ED4EC923A768B2489A9D1155BD11968;
union _DDPIXELFORMAT___4C5EBD389D88C4C046794501FFF390F4;
union _DDPIXELFORMAT___DB4BDA43012B420E1DC9AEEACAA267A5;
union _DEVICE_OBJECT___3ABEFC84562B0417329DFE2AD83813CB;
struct _DMAR_GCMD_REG___5304890D6886F1BE734326F607D0FB5D;
struct _DMAR_GSTS_REG___7659272750ECE9356F44E000EC473E45;
struct _DOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS;
struct _DOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS;
union _DSM_INIT_DATA___7B796C68D8CF5529D47BAB86970BEFFB;
union _DXGKARG_PATCH___2BF1231023CCF326F9650EAE9AC3A0DD;
union _DXGK_FLIPCAPS___BB8BCFC6A76D53AA4E1798E1B22DE04B;
union _KSEVENT_ENTRY___B26956EB948B1BB74D1F370DF846EB48;
struct _LARGE_INTEGER___824E624842C29B0A9DF85A636208834D;
union _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4;
union _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307;
union _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68;
union _MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC;
struct _NDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES;
struct _NDIS_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO;
union _NT_SMB_HEADER___1981ACDE232C6DE21F6ECE4E585F2227;
union _NT_SMB_HEADER___EFB48DF9E93823741A1223EC6F9E871B;
union _REASON_BUFFER___F74655129F2DFA9F1DDC40A17BAD0BC2;
struct _SDP_NODE_DATA___807436153354125C07D3815CF85E838D;
struct _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR;
struct _WHEA_REVISION___CA623CBB00D0468508E5ED0CE7B63B14;
union _WWAN_SMS_SEND___ECED145D5F818BC1186127ADF514A07D;
struct _XPF_MCE_FLAGS___BEDAFFCF8B2FE2B464F6E114319CEB5E;
union HBA_EventInfo___354F98172143542044A796E42E11C620;
union HBA_ipaddress___4EAECFF073648158AC6DFCBC0F70CF69;
union _ACCESS_STATE___18D81C5C1A882E7A2AF410C6CD9261CD;
union _ASYNC_PACKET___03C481F7A4752B31164DFBAFD3BDD779;
union _ASYNC_PACKET___AB07F285586641EA5A3A0A6EB783C0F2;
struct _DXGKMDT_OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS;
union _ICMP_MESSAGE___C0C56E405763639CDB48E11DB99F029A;
union _IMAGE_SYMBOL___5E628A43DDB5BBBB85D75BCB8FDF7ACA;
struct _IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS;
struct _MSNdis_80211_ReceivedSignalStrengthEventTrigger;
union _NDIS_RW_LOCK___2850CBFD26D1AF5C4667709DD08EAAB9;
union _NDIS_RW_LOCK___8DA56E8A00A40642C2533108FF443746;
struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE;
union _NPI_MODULEID___CBDDAE44958519F00C94596B49D418BE;
struct _SLIST_HEADER___D67E919714D5786AEADF401AEE8662CB;
union _STATUS_BLOCK___176BD189C2C9FD33950A172BC44A9FB2;
union _TDI_VERSION____0CEFFAAA4EF78E9CFDB9937EFD46D598;
struct _USB_DEVICE_CAPABILITY_SUPERSPEED_USB_DESCRIPTOR;
union _WNODE_HEADER___94883EDDB53D73798B50E968A69A9EBB;
union _WNODE_HEADER___F03C597F21C6A23CEEDB6A1B653FCCEC;
union _CREATE_DISK___E6D8F73FA11FE79B0BBE7B30BDE20C7B;
union _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE;
struct _DEVICESCOPE___0E40B4712A51F81A51768366A691CE53;
union _FPDT_RECORD___0CC1B4B8637A0854707BAFDC0DDB0B75;
union _IGMP_HEADER___3A21793F27C9FFFA7D1391D8CCC24F6D;
union _IGMP_HEADER___B9454631A37D51F61B5C2590DE4942DA;
union _INQUIRYDATA___57A8C0293E1F2A67A1B3BE29EFC0DD2E;
union _IPV4_HEADER___1102F78AC293BC76A5071660AA34A7CC;
union _IPV4_HEADER___7294C6500B7E8E66DD9EAFF73AAE9420;
union _IPV4_HEADER___80DFA742D2097AD049AAE78FF03C750C;
struct _IVRS_IVINFO___B647E9AE4D013B6F339A233AA25F8EF5;
union _KSM_BDA_PIN___E33ABE1885360AB30BA4739A3C7D59A2;
union _KWAIT_BLOCK___2ACC67C642B9E501E8652DFF4606A234;
struct _NDIS_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES;
struct _NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS;
struct _NET_LUID_LH___0227A65EDE726BD8ABDBF310B0E65A75;
struct _OS_DEP_DATA___950186A194D3C228919DADD735B465AC;
union _OWNER_ENTRY___6B4978F9925CAA83AD6686635A513271;
struct _SCARD_READER_CAPABILITIES___DataRatesSupported;
union _TDI_REQUEST___4EEE655D8D7CBB31716A34162394170F;
union _TPM20_TABLE___C10FB33E4CEA99E8ACC08E19EFF679EB;
struct _VENDOR_ATTR___2AE9AD3FAE8157A8CA711EA8B2DDE80C;
struct _VENDOR_ATTR___7FDDA7E13B97E7F637DB452F6613430E;
union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS;
union _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS;
struct _WmiQueryTcpConnectionOffloadHardwareConfig_OUT;
union _XSTATE_SAVE___18201E4AFA8D7B47D67A178F8DC66E77;
union sockaddr_in6___478B75FEFC20993B5CDAB8E612A985FD;
struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_QUERY_ADC;
struct _DOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS;
struct _DOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS;
struct _DPC_BUFFER___DC140212850B4BBB5937385B736ED228;
union _DS3DVECTOR___1C324E33BC6F74D1A02BB1B088C4590A;
union _DS3DVECTOR___4C8BE1C25D9187060DF6575EC0B5A14F;
union _DS3DVECTOR___C7D9B5A2358E86AF5EA4461ED5800501;
struct _DXGKMDT_OPM_CONNECTED_HDCP_DEVICE_INFORMATION;
struct _EIGHT_BYTE___F1176AC26BBE1D3664185011CC8CE040;
union _IMAGE_INFO___750B9F7C657AA4459AFB3416A5571407;
struct _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS;
union _IVHD_BLOCK___CC2427FB4E5628166180EC8970FE14AA;
union _IVHD_BLOCK___FFAE79A01A0C522F1D9081A9AC9A1E79;
union _IVMD_BLOCK___6CA5807B4C1D95CBC919D39BCB1B3D59;
union _IVMD_BLOCK___AB426EBBCAD19089742802B1D7435C2A;
union _IVMD_BLOCK___DD07C6CB3A3C828A5F6EC3604DA4D352;
struct _MCG_STATUS___65E0EF83A2317964BD9F5E638D1B3E1C;
struct _MCI_STATUS___1D31C29479B2395600399FA7C9D42D3F;
union _NAME_CACHE___7DD328E67B358AE0D444348E77BB2A06;
struct _NDIS_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES;
union _NET_BUFFER___05113C3D100EAEBCDF9954E02D617F8E;
union _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER;
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
union _RX_CONTEXT___026195C05D43F7BC9CC58BDC838286E9;
union _RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162;
union _RX_CONTEXT___6AFB99893DFF2673B7FC3EB4E39AD6BC;
union _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3;
struct _SES_ADDITIONAL_ELEMENT_STATUS_DIAGNOSTIC_PAGE;
union _SMB_HEADER___9087A7F271D3D790A38473E0603644E5;
struct _USB_DEVICE_CAPABILITY_CONTAINER_ID_DESCRIPTOR;
union _V_NET_ROOT___67228D3E87097EDE9B472C5F8816F370;
struct _WmiQueryReceiveFilterHardwareCapabilities_OUT;
struct _WmiQueryTcpConnectionOffloadCurrentConfig_OUT;
struct _WmiQueryTcpConnectionOffloadHardwareConfig_IN;
struct _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS;
union _CHAR_INFO___0E79EC4DAC98A4AB202537FA8C3F69FC;
union _CIP_FRAME___2E16906FAA07C2FD0ECFFAB6F8122094;
union _DMARTABLE___AE0FC9D9EC7026AF279F43755B1DFE09;
struct _DOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS;
struct _DOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS;
union _ERESOURCE___0F9CA66D6BD1B66FB152E2AC5421C126;
union _ERESOURCE___6485B31835FF66149107F3D6F17C6B98;
struct _FOUR_BYTE___052E3EAE3F81046A720753D4C5FCE875;
union _HIDP_DATA___054E66EBAEB900A97FB470AAB272100E;
struct _MCI_STATS___C2A101EC7ECF14B971CBBE2E489A1AF6;
union _MRX_FOBX____383A86132F0018DAD323C741CB139F27;
union _NDIS_GUID___AB53B9CEEC61ECDF1333D6EBB2604C4E;
struct _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY;
union _OS_STRING___0FBC153B268A9F44C6FF20F5B96C7697;
union _PCC_TABLE___83536B2122381EB1BF94D79CF0D5F89E;
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY;
struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR;
struct _WINDOWS_BLOCK_DEVICE_TOKEN_LIMITS_DESCRIPTOR;
struct _WmiQueryReceiveFilterCurrentCapabilities_OUT;
struct _WmiQueryReceiveFilterHardwareCapabilities_IN;
struct _WmiQueryTcpConnectionOffloadCurrentConfig_IN;
struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
struct _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD;
struct _DL_EUI48___537D01AC81A8B528D810E8012560EBBE;
struct _DL_EUI64___111DC19AD74244695D2230B77DE8AE02;
struct _DOT11_MANUFACTURING_SELF_TEST_QUERY_RESULTS;
struct _DXGKMDT_OPM_SET_PROTECTION_LEVEL_PARAMETERS;
union _DXGK_PDE___7E37419C9C4A9D7B990FC9CE94D534E4;
union _DXGK_PTE___E0A8C8A05CB3CF7081FA3F36783E9131;
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
struct _IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS;
struct _IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT;
struct _LOG_PARAMETER______THRESHOLD_RESOURCE_COUNT;
struct _MCI_ADDR___A76831D64C2EAE3852FBB9C70B9C2DA0;
struct _NDIS_SHARED_MEMORY_PROVIDER_CHARACTERISTICS;
struct _NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS;
struct _NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS;
union _NET_ROOT___340FAF2C1DA1218AC74455EBD02C5C0A;
struct _SMB_DATE___04CC96DF4805108A95FF2CDA81BBA394;
struct _SMB_TIME___0AFD35857EE7B930B2A5C166E7350CD8;
union _SRV_CALL___0ACC7C61618F999A81F788F7C5AA38D2;
union _SRV_OPEN___03B51F6B0294198AC1E02D34CA408274;
union _SRV_OPEN___77A51EE1E80C64E222053A0C90FCC703;
struct _SUPPORTED_SECURITY_PROTOCOLS_PARAMETER_DATA;
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
struct _TWO_BYTE___A43753048E566B87C8933E4D36C3FCE6;
union _VLAN_TAG___439FFFA6F528943BE2F423ED909F8DC1;
struct _WmiQueryReceiveFilterCurrentCapabilities_IN;
struct _timecode___6889D7C8638655C86F211076F8C624CB;
struct _D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT;
struct _DOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS;
struct _HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO;
struct _IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS;
union _KSM_PIN___E33ABE1885360AB30BA4739A3C7D59A2;
struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO;
struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO;
struct _NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS;
union _NDK_SGE___D19CDDEA9BCFEEE1770C08F9285617BC;
union _PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER;
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS;
union _PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER;
union _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS;
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS;
union _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS;
union in6_addr___6F0816B860EA11CA8E788AEE35731DB2;
union _AVC_STREAM_REQUEST_BLOCK___tagCommandData;
union _AV_PCR___396EF7A68396BFEFEEA92DFA7F5171E0;
struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION;
struct _D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION;
struct _DL_OUI___AD92321663AD4FB1F8CDF3CCCCCE05F2;
struct _DOT11_SEND_INVITATION_RESPONSE_PARAMETERS;
struct _HID_DESCRIPTOR___HID_DESCRIPTOR_DESC_LIST;
struct _LENGTH___44C0F8F40373C59203C7FC1E796772D8;
struct _LENGTH___C09D2434E28C17F81CB8FDACD5F0366E;
struct _LOG_PARAMETER______BACKGROUND_SCAN_STATUS;
struct _NDIS_NBL_MEDIA_MEDIA_SPECIFIC_INFORMATION;
struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO;
struct _NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
struct _VBICODECFILTERING_STATISTICS_TELETEXT_PIN;
struct _WmiQueryNICSwitchHardwareCapabilities_OUT;
struct _WmiQueryReceiveFilterGlobalParameters_OUT;
union in_addr___4F64C6817212FE4AF89030399F21EE2D;
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_EX;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT;
struct _DOT11_MANUFACTURING_SELF_TEST_SET_PARAMS;
struct _DOT11_SEND_INVITATION_REQUEST_PARAMETERS;
struct _NDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES;
struct _NDIS_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES;
struct _NDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO;
struct _NDIS_OID_REQUEST___REQUEST_DATA___METHOD;
union _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER;
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK;
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY;
struct _REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION;
struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION;
struct _SES_ADDITIONAL_ELEMENT_STATUS_DESCRIPTOR;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
struct _WmiQueryNICSwitchCurrentCapabilities_OUT;
struct _WmiQueryNICSwitchHardwareCapabilities_IN;
struct _WmiQueryReceiveFilterGlobalParameters_IN;
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_EX;
struct _DOT11_INCOMING_ASSOC_STARTED_PARAMETERS;
struct _DOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS;
struct _DOT11_POWER_MGMT_AUTO_MODE_ENABLED_INFO;
struct _DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG;
struct _DXGKARG_GETSTANDARDALLOCATIONDRIVERDATA;
struct _DXGK_MONITORFREQUENCYRANGESET_INTERFACE;
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION;
union _FOBX___980A609D988DBD4CB131C399AACA181C;
union _FOBX___B95E32BA05695D37ADEEDE609BEA19EE;
struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION;
union _KPCR___ECC1A0E65F841FBB98040378B25C100B;
struct _MSNdis_EthernetMaximumMulticastListSize;
struct _MSNdis_NetworkDirectAdapterCapabilities;
struct _MSNdis_StatusDot11AssociationCompletion;
struct _MSNdis_StatusExternalConnectivityChange;
struct _NDIS_MINIPORT_INTERRUPT_CHARACTERISTICS;
struct _NDIS_OID_REQUEST___REQUEST_DATA___QUERY;
union _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY;
struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION;
union _QUAD___563CC45C8CF107F9F4F62DBD7F648A58;
struct _SCSI_SENSE_DESCRIPTOR_ATA_STATUS_RETURN;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION;
struct _USB_BUS_INTERFACE_HUB_SELECTIVE_SUSPEND;
struct _VBICODECFILTERING_STATISTICS_COMMON_PIN;
struct _VIDEO_PORT_WCMEMORYPROTECTION_INTERFACE;
union _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS;
union _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS;
struct _WmiQueryNICSwitchCurrentCapabilities_IN;
struct _______38167C14DDD6FD68ECBEEF1BA5418F40;
struct _______7DB82CB5BC08FF580B488AC7D1BB7838;
struct DOT11_ASSOCIATION_COMPLETION_PARAMETERS;
struct DOT11_MANUFACTURING_CALLBACK_PARAMETERS;
union _BRB___B3989489D001C29E299AADF382160F96;
struct _CDROM_EXCEPTION_PERFORMANCE_DESCRIPTOR;
struct _CLASS_VPD_ECOP_BLOCK_DEVICE_ROD_LIMITS;
struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_RX;
struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_TX;
struct _DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS;
struct _DOT11_WFD_DISCOVER_COMPLETE_PARAMETERS;
struct _DXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS;
union _FCB___50C0FDD650F19B09787FD38ED35AB87F;
union _FCB___B8BC522CD9CB7EDB980D9EC7301387EB;
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
struct _IOCTL_IR_ENTER_PRIORITY_RECEIVE_PARAMS;
union _IRB___09A81769302A491E6411F5F4C2220811;
struct _IRB_REQ_ISOCH_MODIFY_STREAM_PROPERTIES;
struct _IRB_REQ_ISOCH_QUERY_CURRENT_CYCLE_TIME;
union _IRP___66699B8BF83DC91F51A70E4C6E3F33A6;
union _IRP___6B96A96ED958C92F2CB4B83EAB343043;
union _IRP___CBBBB9F4F0755A16DC8A369061485BEC;
struct _KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT;
struct _LOG_PARAMETER______DATE_OF_MANUFACTURE;
struct _LOG_PARAMETER_THRESHOLD_RESOURCE_COUNT;
struct _MSNdis_StatusDot11ConnectionCompletion;
struct _MSNdis_StatusMediaSpecificIndicationEx;
struct _NDIS_CO_CALL_MANAGER_OPTIONAL_HANDLERS;
struct _NDIS_NBL_MEDIA_SPECIFIC_INFORMATION_EX;
struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE;
struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER;
union _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER;
union _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER;
union _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER;
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS;
struct _PCI_EXPRESS_VENDOR_SPECIFIC_CAPABILITY;
struct _RESOURCEMANAGER_COMPLETION_INFORMATION;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION;
union _URB___9B418D10B4EEB83522B3D8F0EA3C0682;
struct _USBC_DEVICE_CONFIGURATION_INTERFACE_V1;
union _USB_DEFAULT_PIPE_SETUP_PACKET___wIndex;
union _USB_DEFAULT_PIPE_SETUP_PACKET___wValue;
struct _VBICODECFILTERING_STATISTICS_NABTS_PIN;
struct _WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS;
struct DOT11_CONNECTION_COMPLETION_PARAMETERS;
struct _ACPI_DEVICE_INFORMATION_OUTPUT_BUFFER;
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER;
struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION;
struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE;
struct _DXGKARG_SETDISPLAYPRIVATEDRIVERFORMAT;
struct _DXGKMDT_OPM_HDCP_KEY_SELECTION_VECTOR;
struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION;
struct _FILTER_AGGREGATE_STANDARD_INFORMATION;
union _HW_STREAM_REQUEST_BLOCK___CommandData;
struct _IPSEC_OFFLOAD_V2_SECURITY_ASSOCIATION;
struct _IRB_REQ_GET_CONFIGURATION_INFORMATION;
struct _IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES;
struct _IRB_REQ_SEND_PHY_CONFIGURATION_PACKET;
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
struct _L2CAP_RETRANSMISSION_AND_FLOW_CONTROL;
struct _MSNdis_80211_BaseServiceSetIdentifier;
struct _MSNdis_EthernetMoreTransmitCollisions;
struct _MSNdis_StatusDot11MPDUMaxLengthChange;
struct _MSiSCSI_InitiatorInstanceFailureEvent;
struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION;
struct _NDIS_OID_REQUEST___REQUEST_DATA___SET;
struct _NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS;
struct _NDIS_TAPI_CONDITIONAL_MEDIA_DETECTION;
struct _NDIS_TAPI_SET_DEFAULT_MEDIA_DETECTION;
struct _NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES;
struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO;
struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_READ;
struct _NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION;
union _PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER;
struct _REAL_TIME_NOTIFICATION_SETTING_OUTPUT;
struct _SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2;
struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES;
struct _TA_ADDRESS_NETBIOS_EX___AddrNetbiosEx;
struct _URB_CONTROL_GET_CONFIGURATION_REQUEST;
struct _VBICODECFILTERING_STATISTICS_TELETEXT;
struct _VPD_BLOCK_DEVICE_CHARACTERISTICS_PAGE;
union _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS;
struct _WHEA_PSHED_PLUGIN_REGISTRATION_PACKET;
struct DOT11_PMKID_CANDIDATE_LIST_PARAMETERS;
struct IMiniportWaveRTStreamNotificationVtbl;
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING;
struct _ARBITER_RETEST_ALLOCATION_PARAMETERS;
struct _CDB___REQUEST_VOLUME_ELEMENT_ADDRESS;
struct _CDROM_NOMINAL_PERFORMANCE_DESCRIPTOR;
struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;
struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT;
struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER;
struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION;
struct _DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST;
struct _DXGKARG_UPDATEACTIVEVIDPNPRESENTPATH;
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
struct _IDENTIFY_DEVICE_DATA_LOG_PAGE_HEADER;
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
struct _IRB_REQ_ISOCH_ALLOCATE_RESOURCES_W2K;
struct _IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP;
struct _LOG_PARAMETER______SELF_TEST_RESULTS;
struct _LOG_PARAMETER______SOLID_STATE_MEDIA;
struct _MECHANICAL_STATUS_INFORMATION_HEADER;
struct _MSNdis_80211_TransmitAntennaSelected;
struct _MSNdis_EthernetReceiveErrorAlignment;
struct _MSNdis_InterruptModerationParameters;
struct _MSNdis_ReceiveFilterGlobalParameters;
struct _MSNdis_StatusDot11PmkidCandidateList;
struct _MSNdis_StatusMediaSpecificIndication;
struct _MSNdis_WmiTcpLargeSendOffloadV1_IPv4;
struct _MSNdis_WmiTcpLargeSendOffloadV2_IPv4;
struct _MSNdis_WmiTcpLargeSendOffloadV2_IPv6;
struct _NDIS_INTERRUPT_MODERATION_PARAMETERS;
struct _NDIS_MINIPORT_DRIVER_CHARACTERISTICS;
struct _NDIS_PROTOCOL_DRIVER_CHARACTERISTICS;
struct _NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS;
struct _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS;
struct _NDIS_WWAN_DEVICE_SET_SERVICE_SESSION;
struct _OB_POST_DUPLICATE_HANDLE_INFORMATION;
struct _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY;
struct _PCI_AGP_CAPABILITY___PCI_AGP_COMMAND;
union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS;
union _PCI_EXPRESS_DEVICE_STATUS_2_REGISTER;
struct _PCI_EXPRESS_LINK_QUIESCENT_INTERFACE;
union _PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER;
struct _PCI_EXPRESS_SERIAL_NUMBER_CAPABILITY;
struct _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY;
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK;
struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR;
struct _REAL_TIME_NOTIFICATION_SETTING_INPUT;
struct _SCSI_PASS_THROUGH_DIRECT_WITH_BUFFER;
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA;
struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
struct _TRANSACTIONMANAGER_BASIC_INFORMATION;
struct _USB_INTERFACE_ASSOCIATION_DESCRIPTOR;
struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR;
struct _WHEA_FIRMWARE_ERROR_RECORD_REFERENCE;
union _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS;
struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION;
struct _WmiMonitorListedSupportedSourceModes;
struct _WmiQueryReceiveScaleCapabilities_OUT;
struct _CDB___GET_EVENT_STATUS_NOTIFICATION;
struct _CHANGER_SEND_VOLUME_TAG_INFORMATION;
struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;
struct _CO_AF_TAPI_INCOMING_CALL_PARAMETERS;
struct _CSV_QUERY_FILE_REVISION_ECP_CONTEXT;
struct _DEBUGGING_DEVICE_IN_USE_INFORMATION;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP;
struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS;
struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR;
struct _DOT11_MANUFACTURING_TEST_QUERY_DATA;
struct _DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY;
struct _DOT11_SUPPORTED_DATA_RATES_VALUE_V2;
struct _DOT11_SUPPORTED_OFDM_FREQUENCY_LIST;
struct _DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS;
struct _DXGKMDT_OPM_ACP_AND_CGMSA_SIGNALING;
struct _DXGKMDT_OPM_SET_HDCP_SRM_PARAMETERS;
struct _DXGK_MONITORDESCRIPTORSET_INTERFACE;
struct _DXGK_MONITORSOURCEMODESET_INTERFACE;
struct _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS;
struct _FILE_SYSTEM_RECOGNITION_INFORMATION;
struct _IRB_REQ_ISOCH_SET_CHANNEL_BANDWIDTH;
struct _KSM_BDA_WMDRMTUNER_GETPIDPROTECTION;
struct _KSM_BDA_WMDRMTUNER_SETPIDPROTECTION;
struct _LOG_PAGE_LOGICAL_BLOCK_PROVISIONING;
struct _MSMCAInfo_RawCorrectedPlatformEvent;
struct _MSNdis_80211_FragmentationThreshold;
struct _MSNdis_80211_ReceiveAntennaSelected;
struct _MSNdis_80211_ReceivedSignalStrength;
struct _MSNdis_EthernetOneTransmitCollision;
struct _MSNdis_ReceiveFilterFieldParameters;
struct _MSNdis_StatusDot11RoamingCompletion;
struct _MSiSCSI_InitiatorInstanceStatistics;
struct _NDIS_802_11_ASSOCIATION_INFORMATION;
struct _NDIS_FILTER_PARTIAL_CHARACTERISTICS;
struct _NDIS_NET_BUFFER_LIST_FILTERING_INFO;
struct _NDIS_PORT_AUTHENTICATION_PARAMETERS;
struct _NDIS_SCATTER_GATHER_LIST_PARAMETERS;
struct _NDIS_WWAN_SERVICE_ACTIVATION_STATUS;
struct _NDIS_WWAN_SUPPORTED_DEVICE_SERVICES;
struct _NODE_TYPE_CODE_AND_SIZE_NO_REFCOUNT;
struct _OB_PRE_DUPLICATE_HANDLE_INFORMATION;
struct _PCI_AGP_CAPABILITY___PCI_AGP_STATUS;
struct _PCI_EXPRESS_ARI_CAPABILITY_REGISTER;
union _PCI_EXPRESS_DEVICE_CONTROL_REGISTER;
struct _PCI_EXPRESS_ROOTPORT_AER_CAPABILITY;
struct _PCI_FIRMWARE_BUS_CAPS_RETURN_BUFFER;
struct _PROCESS_KEEPALIVE_COUNT_INFORMATION;
struct _REENUMERATE_SELF_INTERFACE_STANDARD;
struct _REG_ENUMERATE_VALUE_KEY_INFORMATION;
struct _REG_SET_INFORMATION_KEY_INFORMATION;
struct _RXCE_CONNECTION_COMPLETION_CONTEXT_;
struct _SCSI_SENSE_DESCRIPTOR_BLOCK_COMMAND;
struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;
struct _SecPkgCredentials_KdcProxySettingsW;
struct _TRANSACTION_ENLISTMENTS_INFORMATION;
struct _URB_CONTROL_VENDOR_OR_CLASS_REQUEST;
struct _VBICODECFILTERING_STATISTICS_CC_PIN;
struct _VBICODECFILTERING_STATISTICS_COMMON;
struct _VPD_LOGICAL_BLOCK_PROVISIONING_PAGE;
union _WHEA_MEMORY_ERROR_SECTION_VALIDBITS;
struct _WmiQueryPciDeviceCustomProperty_OUT;
struct _WmiQueryReceiveFilterParameters_OUT;
struct _WmiQueryReceiveScaleCapabilities_IN;
struct D3DKMDT_HMONITORFREQUENCYRANGESET__;
struct DOT11_COUNTRY_OR_REGION_STRING_LIST;
struct DOT11_ROAMING_COMPLETION_PARAMETERS;
struct IKoInitializeParentDeviceObjectVtbl;
struct _ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER;
struct _ARBITER_BOOT_ALLOCATION_PARAMETERS;
struct _ARBITER_QUERY_ARBITRATE_PARAMETERS;
struct _ARBITER_TEST_ALLOCATION_PARAMETERS;
struct _ATM_BROADBAND_BEARER_CAPABILITY_IE;
struct _BDA_WMDRMTUNER_PURCHASEENTITLEMENT;
struct _CHANNEL_CONFIG_PARAMETERS_ENHANCED;
struct _CreateVirtualPortExUsingDHCHAP_OUT;
struct _D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS;
struct _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES;
struct _DEVICE_DSM_NOTIFICATION_PARAMETERS;
struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS;
struct _DOT11_WFD_DEVICE_CAPABILITY_CONFIG;
struct _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS;
struct _DXGK_MULTIPLANE_OVERLAY_ATTRIBUTES;
struct _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO;
struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
struct _FILE_VALID_DATA_LENGTH_INFORMATION;
struct _FILTER_AGGREGATE_BASIC_INFORMATION;
struct _FILTER_VOLUME_STANDARD_INFORMATION;
struct _IDE_ADVANCED_CHANNEL_CONFIGURATION;
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
struct _IO_DISCONNECT_INTERRUPT_PARAMETERS;
struct _IRB_REQ_GET_LOCAL_HOST_INFORMATION;
struct _IRB_REQ_SET_DEVICE_XMIT_PROPERTIES;
struct _ISCSI_DiscoveredTargetPortalGroup2;
struct _KEY_SET_VIRTUALIZATION_INFORMATION;
struct _KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT;
struct _MSNdis_80211_NetworkInfrastructure;
struct _MSNdis_80211_NetworkTypesSupported;
struct _MSNdis_AtmSupportedServiceCategory;
struct _MSNdis_DeviceWakeOnMagicPacketOnly;
struct _MSNdis_StatusDot11AssociationStart;
struct _MSNdis_WmiIPSecOffloadV1_Supported;
struct _MSNdis_WmiReceiveScaleCapabilities;
struct _NDIS_802_11_AUTHENTICATION_REQUEST;
struct _NDIS_FILTER_DRIVER_CHARACTERISTICS;
struct _NDIS_RECEIVE_QUEUE_FREE_PARAMETERS;
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1;
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2;
struct _PARALLEL_INTERRUPT_SERVICE_ROUTINE;
union _PCI_EXPRESS_ACS_CAPABIITY_REGISTER;
union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK;
union _PCI_EXPRESS_DEVICE_STATUS_REGISTER;
struct _PROCESS_EXTENDED_BASIC_INFORMATION;
struct _REG_QUERY_KEY_SECURITY_INFORMATION;
struct _SFFDISK_QUERY_DEVICE_PROTOCOL_DATA;
struct _STORAGE_FAILURE_PREDICT_THRESHOLDS;
struct _TARGET_DEVICE_REMOVAL_NOTIFICATION;
struct _TRANSACTIONMANAGER_LOG_INFORMATION;
struct _TRANSACTION_PROPERTIES_INFORMATION;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES;
struct _USB_CONFIGURATION_POWER_DESCRIPTOR;
struct _VBICODECFILTERING_NABTS_SUBSTREAMS;
struct _VBICODECFILTERING_STATISTICS_NABTS;
union _WHEA_ERROR_RECORD_HEADER_VALIDBITS;
struct _WmiMonitorSupportedDisplayFeatures;
struct _WmiQueryPciDeviceCustomProperty_IN;
struct _WmiQueryReceiveFilterParameters_IN;
struct _WmiQueryReceiveQueueParameters_OUT;
struct _tagKSAUDIOENGINE_BUFFER_SIZE_RANGE;
struct DOT11_ASSOCIATION_START_PARAMETERS;
struct DOT11_CIPHER_KEY_MAPPING_KEY_VALUE;
struct IMiniportStreamAudioEngineNodeVtbl;
struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX_EX;
struct _AGP_TARGET_BUS_INTERFACE_STANDARD;
struct _ARBITER_QUERY_CONFLICT_PARAMETERS;
struct _ATM_BROADBAND_SENDING_COMPLETE_IE;
struct _CHANGER_INITIALIZE_ELEMENT_STATUS;
struct _CLEAR_CLIENT_STICKINESS_HOOK_INFO;
struct _CO_TAPI_TRANSLATE_NDIS_CALLPARAMS;
struct _CO_TAPI_TRANSLATE_TAPI_CALLPARAMS;
struct _ClearDevInstanceHealthCounters_IN;
struct _CreateVirtualPortExUsingDHCHAP_IN;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2;
struct _D3DKMDT_GRAPHICS_RENDERING_FORMAT;
struct _D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS;
struct _DEVICE_DATA_SET_REPAIR_PARAMETERS;
struct _DEVICE_LB_PROVISIONING_DESCRIPTOR;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES;
struct _DEVICE_STATISTICS_LOG_PAGE_HEADER;
struct _DOT11_CURRENT_OPTIONAL_CAPABILITY;
struct _DOT11_DIVERSITY_SELECTION_RX_LIST;
struct _DOT11_MANUFACTURING_TEST_SET_DATA;
struct _DOT11_POWER_MGMT_MODE_STATUS_INFO;
struct _DOT11_SUPPORTED_DSSS_CHANNEL_LIST;
struct _DVBScramblingControlSpanningEvent;
struct _DXGKARGCB_CREATECONTEXTALLOCATION;
struct _DXGKARG_QUERYDEPENDENTENGINEGROUP;
struct _DXGKMDT_OPM_REQUESTED_INFORMATION;
struct _DXGK_CREATECONTEXTALLOCATIONFLAGS;
struct _DXGK_PRESENTMULTIPLANEOVERLAYINFO;
struct _DXGK_PRESENTMULTIPLANEOVERLAYLIST;
struct _DXGK_VIDPNSOURCEMODESET_INTERFACE;
struct _DXGK_VIDPNTARGETMODESET_INTERFACE;
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION;
struct _FILE_IO_PRIORITY_HINT_INFORMATION;
struct _FILE_IS_REMOTE_DEVICE_INFORMATION;
struct _FLT_CREATEFILE_TARGET_ECP_CONTEXT;
union _IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS;
struct _IRB_REQ_SET_LOCAL_HOST_PROPERTIES;
struct _ISCSI_DiscoveredTargetPortalGroup;
struct _KSPROPERTY_GRAPHMANAGER_INTERFACE;
struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
struct _MODE_CDROM_WRITE_PARAMETERS_PAGE2;
struct _MOUNTMGR_DRIVE_LETTER_INFORMATION;
struct _MSNdis_80211_ServiceSetIdentifier;
struct _MSNdis_StatusDot11ConnectionStart;
struct _MSNdis_StatusHDSplitCurrentConfig;
struct _MSNdis_TokenRingCurrentFunctional;
struct _MSNdis_TokenRingCurrentRingStatus;
struct _MSiSCSI_InitiatorNodeFailureEvent;
struct _NDIS_MINIPORT_PNP_CHARACTERISTICS;
struct _NDIS_PCI_DEVICE_CUSTOM_PROPERTIES;
union _NDIS_PM_WOL_PATTERN___WOL_PATTERN;
struct _NDIS_WMI_RECEIVE_QUEUE_PARAMETERS;
struct _NDIS_WWAN_DEVICE_SERVICE_RESPONSE;
struct _NDIS_WWAN_SET_PREFERRED_PROVIDERS;
struct _NDIS_WWAN_SET_PROVISIONED_CONTEXT;
struct _NPI_LLDP_PROVIDER_CHARACTERISTICS;
struct _OB_POST_CREATE_HANDLE_INFORMATION;
struct _PCI_EXPRESS_BRIDGE_AER_CAPABILITY;
union _PCI_EXPRESS_CAPABILITIES_REGISTER;
union _PCI_EXPRESS_LINK_CONTROL_REGISTER;
union _PCI_EXPRESS_ROOT_CONTROL_REGISTER;
union _PCI_EXPRESS_SLOT_CONTROL_REGISTER;
struct _REMOTE_LINK_TRACKING_INFORMATION_;
struct _RESOURCEMANAGER_BASIC_INFORMATION;
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
struct _SCSI_SENSE_DESCRIPTOR_INFORMATION;
struct _SOCKET_SECURITY_QUERY_INFO_IPSEC2;
struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT;
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION;
struct _SYSTEM_POWER_STATE_DISABLE_REASON;
struct _TARGET_DEVICE_CUSTOM_NOTIFICATION;
struct _TDI_ADDRESS_NETBIOS_UNICODE_EX_XP;
struct _TXFS_ROLLFORWARD_REDO_INFORMATION;
struct _URB_CONTROL_GET_INTERFACE_REQUEST;
struct _URB_OS_FEATURE_DESCRIPTOR_REQUEST;
struct _VIDEO_HARDWARE_CONFIGURATION_DATA;
struct _VIDEO_PORT_DEBUG_REPORT_INTERFACE;
union _WHEA_ERROR_INJECTION_CAPABILITIES;
struct _WWAN_DEVICE_SERVICE_SESSION_WRITE;
struct _WmiMonitorDigitalVideoInputParams;
struct _WmiQueryHardwareOffloadConfig_OUT;
struct _WmiQueryReceiveQueueParameters_IN;
struct tagKS_DATAFORMAT_VIDEOINFO_PALETTE;
struct _004D1690B92AB6C871F002F03A8A3150;
struct _00F974B505468747ECE960C8A578057F;
struct _01091B9DEBEBC2354EBF1594EEF6BE89;
struct _01DCE0ED23F464638BF845FBE919C7FC;
struct _0235C12200358EB80BD199E9E2C1E45C;
struct _0237C65E8322975CE5980DC9C74E362C;
struct _03760394881EE2760DEA592B594C7CB3;
struct _0563D17F902D53081481BDEBB46755BB;
struct _057D959110EF5AD26CCA8DAEC04011D1;
struct _05B1F1BDA3A085B0ABA09A777878EB7C;
struct _0606DB5FE2099CCDC829F33B29607B55;
struct _060D6FD956D3EBF205D64C3CA4764571;
struct _060F75F85D33090A279ABE5EFCC5AB4A;
struct _062D643B57BB006C3005C5FAB86889C0;
struct _07B7FBDB71A394C363DCB969C30B9F57;
struct _07D0DEFC473073A5B78BC3974C364183;
struct _0842067D4928A6ED06A0CF2C82B469EC;
struct _097132A3DAC724C77C2462A4DC4AA652;
struct _0B037F2534779A05E9AEAE9A3A29D997;
struct _0B8D1429C3827E0DB460E98487EB6908;
struct _0C4AC156F5CD9D086646B489056E0FB7;
struct _0CB766F7CF0963C13F728D1318E296EA;
struct _0D4D90B30C078E58E26CBA964C3C5A4B;
struct _0D819AFF13E0F3A45F15772F26E3677A;
struct _0D8536C0635F0C9C2E983545F11C4AD1;
struct _0D8B1FE4A186593EFC62C1490ACF7897;
struct _0E076CBD8F5A7ED08B697C5009EDFCFF;
struct _0FCABF7018C994F9B8701EF83F726E07;
struct _113235CB38218359B65312E6A8B53D96;
struct _117E3A994AEBF040E18388CACE709509;
struct _12065485545C98CF3EA596DDCCDF0ED5;
struct _120C91A26C0A2C69E1789355DF7D48EB;
struct _1260C3F85D445CE832F2313B24AA992C;
struct _12A419A691843E3FACBCDACF473D8E54;
struct _138CFB88078211FD2A51624E09EC668F;
struct _1501AF060343F1F91CA0D6153CF3A6C1;
struct _155DA1A439C400442DF8DC3CA0B009F1;
struct _15F35BF8B73635FE222DFD2153EC2695;
struct _1695112F83C2100BD6016AFE09814BB8;
struct _1889F3BAB83DF1AC38A4E0627115688D;
struct _190FAF90ED71AB17CA7DE27E94D1BCF3;
struct _1A4802CA8EE706B456CA9B76D6D132BC;
struct _1B63FBE2ECC383A1603E3615A504628D;
struct _1C1547A44DB0B6456BF86742FC40B205;
struct _1C72DF34A2E997094BDDFB37C83896FB;
struct _1C8C43135D010607C9E39DAEFBEEA658;
struct _1CE0BD7852F87226759D0185D4AC1198;
struct _1CF8D236196540158D67A26DAC991F28;
struct _1D3855BED4097B50524459F6573D9798;
struct _1E1F3A8FE12995513A3555C52633C7C9;
struct _1E49DD38FB2118FBA108586CF41E8D50;
struct _1E8FB3C461BB5B132CC95A1A06B366AC;
struct _1F0027E2ABF976FB8AD72E88DC9BB28B;
struct _1F16BBD766B6BEFB723ABEAEF53457A3;
struct _1F616AD8AB927B39714EF11ABE14251C;
struct _204C6CB5B1CC0D35B371E5C594718A83;
struct _21360BCC3E7339C6666FC361A17309B6;
struct _22CB949541BBA3A46A33E43835E46CAD;
struct _2313F5502F168B8A201E3DA7C3B8E19D;
struct _2319D0803FA8D60BE4B5925A7A9CB62F;
struct _23496AA6B538BC04EA278D40B88E7395;
struct _2361741245AFF1C51192B59F7339350B;
struct _237238CE6134F0577B32BA38B1011348;
struct _24396BA7B1ABFC61208375C7C88D8B5F;
struct _26873349DB0A36B1F3161FA857CA70AC;
struct _271E49C86C8EFA0B647D87A58CF03284;
struct _28A0AF738EE9756E1A9EEC68C6D23E3C;
struct _28B3DD3F07F137DE885F9AB2BF32CB8A;
struct _299134A1587F81C88B1AF91D3DBFCA39;
struct _2A16572F0F8FCFF7B23E4E39050175A8;
struct _2AA7958816AF26AF0A1E54EEE587A92C;
struct _2AB63320416E6F865FE6CC3B86FCC505;
struct _2AE221845231FFCECC219BE7F7049133;
struct _2BB1A5364724F142E07EC8BC0AB4A355;
struct _2BE75473CF3D1F712ED4D05E7A3C1140;
struct _2CC32A13BC47B0ADD425440A5881DEFA;
struct _2E8FF8F0F30DAB89972BBD12E0BA3A8E;
struct _2E9A7A0438C52FCD74FAAABDE54DD374;
struct _2F642FF65A2C0B5567E803A6696CABCC;
struct _2FCB7B16F35A994219C907239F9496DC;
struct _3128CFC3245060A29C7CC794B5D69F28;
struct _321B4BFFCE66D8FF56170997BB33071C;
struct _331B1DF8077172E73B1772E454860C5E;
struct _33D5B48BFB25F68EBEA0D059F2171BBA;
struct _34925C97D7FBDFE0BB6570642E2AD082;
struct _349EB074D4E400CE7F81D3BDE9131585;
struct _34AF5E86DC3341832991CC8A37B0F3B6;
struct _358B21B769DBB67C3050F61FED658732;
struct _363B0F3181141CB904AEE47E3AB77A0E;
struct _364E147BBB652D1A6AD46ACECD93F8A9;
struct _37B8E770EA172EE03D1653C7B692D623;
struct _38332C6D8513F636DCCBCCABE200BE7A;
struct _383365F5B01CBBB641F2B03EBB603E45;
struct _3878B18F15C290CF7BC80116234DE41C;
struct _3990AA19D6F3231E9709B3F98F437D89;
struct _39D33AF960C88F66DA4F36F84B0EC24C;
struct _3A744348A6C9F73853F568E19FD6B4F7;
struct _3B5C203EDC3EAE75DCA18DA66E622E4F;
struct _3E8BFD172CC0232DA5E7071EC2A0A89F;
struct _407A2FFEB90671F2460E9DB49EB613D5;
struct _40A6D5622BA75F270314126148B7B4DB;
struct _40B3E31023928B11E2A8685514812B52;
struct _4165210F16C022CFBA13D08EABF6E295;
struct _42F99BA4BF00EE2B1B9AFA99FBE7C8B1;
struct _433BAB6AAAB02EEB6CF36ABDE1A4217C;
struct _436EEAB87169589F8FF54A3E6B966B58;
struct _441EBF211493C42D9642F77D873F68D1;
struct _4424FFEAB304DE779362E708A77EF4CB;
struct _4436E3E3B2A9BAC50D793DBB422657C7;
struct _451777DAEA681FBE98F7EEED9576F1D3;
struct _4678A3289DA4711CDCEC5ACF3537B1AB;
struct _46F416DE933130F4FE917427A7A28C6B;
struct _47B9B8BEF06705D3AC5342748B9ED2E2;
struct _48207AC35C517F533F0BE91ADB0B9FCA;
struct _489123E2AD8EAE95455F5E3AE4E05067;
struct _48F34F6E58318E719B3C17D5DF8D3416;
struct _490AB8E779FD104DCCEC9F5E52960528;
union _49DE94CD170A783608C4A6CA5E13CF1F;
struct _4A08272B00433CD7EE8E1AF4F71BCC64;
struct _4B3A6E5AEDB605283F91028F6AB24B20;
struct _4B6917C7FECE298C62988A6425F6625F;
struct _4BA00FD375EDE5DADBE8CAB814E48723;
struct _4C19A7724930D5B111BE03D85B9BF8C9;
struct _4C3688935B439E6B73B5D283DA0CA595;
struct _4DD80126BF490D6FAEABA1D4740D8838;
struct _50092E5B8D5585E25A36D2D7AA7D11CF;
struct _5174F44B3769759428827427236E3006;
struct _518AEB1FEE0990110D4FC7592EB5CC55;
struct _52AD6460DAD19A3D48443005CDCF2412;
struct _52BD71AC0F61B53F3E44045ED088295E;
struct _53BCF8451FB1BBF1B3D3F15C66D0D1DB;
struct _549F68C5033A6E8C170A3B5760D9B241;
struct _5670F38347E174B4000DBD4C099C3F79;
struct _56FA1B9DDCE9D648FE900988960BAD6F;
struct _57C5023E6D7E701595220C2F2C785C20;
struct _58C2A16435EA044F8AD69979A6836AA4;
struct _58C2C1BF6568EE28BD9B872E6BA03976;
struct _595A1F057E8A453471581C9A3BFF13FD;
struct _5A8D7CCD30F40712144BEFCDAC7E1929;
struct _5AF83BE1E127935AA438E91D3D277054;
struct _5B98A3A85E20DBA203FE93F0C6DC9B6B;
struct _5D7BCB0D4B3608CEC2ABF81A20A24C68;
struct _5DB42174B48D54F5127552AD4BBA26D1;
struct _5E92F866E5E5F01CD93A72BBF8C1999A;
struct _5E9BD264646644ED8CAA43D9E3AB2E3D;
struct _5EE71717BA15F45B49C3B1BDFE65804E;
struct _61992E1E6DA7B91ECC7FA4A74B115A04;
struct _631353BB22A3E1576EFF7DC760D2A07D;
struct _64810CDFD77AB08FD39653CA0460DA11;
struct _64911FAA3782108E0493959C6B1F8F86;
struct _6659DDBE55020196BB0156953601526A;
struct _66CF5E28886A6CE6C0E44A3DF6E2CD53;
struct _67AAAF7D3F21423E664B1BA9EE478FED;
struct _686FDF1C0C03C3D9039AD8B14FB9C99A;
struct _6957CE76948A33FD66E00469AB6817B0;
struct _69DAD432D0597BAB6A67398C913F94DB;
struct _69F844921B1DE9364EE161E0CBB12E4A;
struct _6A5B75FE3CDFCD80FCDD67FCD1AED8F3;
struct _6A72E0E621DD38BDAEEB041E3C2A50BB;
struct _6B8E9FF8FB4DE59DE7DA4092DA92354D;
struct _6C32D841228ADC85BF22C8C3850F7AC4;
struct _6D0219E08C78C5ABE6BF34925E3CE89B;
struct _6D40E8E2125A3BBCEB5B162FD51EF33B;
struct _6D7329FAD13C403F17A910B84CCFB7BF;
struct _6D91A0F5ACE4E1ABC2608485BBBFEC12;
struct _6F08919EF02DAA05323F80511ECED656;
struct _7007A5D07675D2D320A62125AF136FB2;
struct _7069A3AF9C526B33740CA7D5809B477E;
struct _707EC234ECD45402760253CA9174D40C;
struct _717F7A89FCE81E507F2DE95312881168;
struct _72295A7541EC936D47FC3642EE72298B;
struct _726D8FC833E61F5DB3AAF636888074FD;
struct _742D342C7048E2C3902DF7570B72F6FC;
struct _7445C9FCFCC2899651BCA0E341BC0369;
struct _7624C08BB8F92FE59066142391459661;
struct _764676431BC78EE50306C71955FB365D;
struct _76743BAC06EF1EE4A95E434A18762A4D;
struct _76BBB8505EB675FEBBC29DD2F96B6E73;
struct _798F2A0931AE69495F6CF5BE64E576B5;
struct _799828DB081536A4670A0BD2D36EB2B0;
struct _79EFEDCEBD127DAA6245792B357A1A48;
struct _7A161162541E13AAF3E44563AE0B1752;
struct _7D6AD1D4C0599A70ED2A75DF53A62D54;
struct _7DA6CEE7E211DED2F61B14AB99948ADC;
struct _7DB559BE1DE343E17A8A94B6F2E38031;
struct _7FACA56ADE6E3D8EA85378C4937BF6DD;
struct _80E50DFA284ED4BC838B08AAD8EA99BA;
struct _816E3560EF21380C948191659F672DF0;
struct _81AC0294484DCEB16CBE342B679E5951;
struct _81CBD782E1765289C4F89D039AD60F12;
struct _8251F34BCF49AE1C266F7CD180791646;
struct _8276AF68B2084DDEC7235E96B5A3DDF6;
struct _82A92AD198AEB558BCF016A3DC6D0FC4;
struct _82A9949D9C93DB4693E05DBBCDD803A5;
struct _85CBE24E9ED55DBB779718CA5D73A273;
struct _8630A1F515F1D9088A894BA95A0F4D66;
struct _872ED6AFBC09867EE86BBF274F8CE85A;
struct _8734295609DAB040198410EB4CD6E51F;
struct _8765F39B1D4DEFD1F2F8643F85B5D457;
struct _87CE1B284ED7C4D9787DE2C17B5E3229;
struct _8A300D195525B62B81F3FAC87DD6582B;
struct _8B9777916333A4B8A3A60FA8F93F002E;
struct _8E0937B200DCBA03D39E01164C2A4D0D;
struct _8F18F53EFBEBE9496980818DD790123F;
struct _8F1F2360283DF2289B54980815148EF3;
struct _8F34270CB28A8FB9BC09363183528BFE;
struct _8F4AC9317002A11552A6341450417F12;
struct _8FE9905039884FA12A33AF170E497D82;
struct _90FA911F5F1D4FE086DF5A0612D3E63E;
struct _91BD25BE856B91F4F94C146E39BAA29E;
struct _9283D0FA6633E8568FC062864CF70F24;
struct _93436C1F0A8D6F6AE253292F43F7C270;
struct _93B241075AB814F9677BDB457CD6BECF;
struct _9452773C7C9658DF0A7C90A31311AC2C;
struct _97739C7249C02ACEBAF17DFC34E3F72B;
struct _97BF4F75CC2B13E4CD29FCADBEF14990;
struct _98D21277AAAA3049664E864EBED0B60A;
struct _99C6912CDB5C12269FDD73BE73429D8B;
struct _9A6BD7645A973A5ADF34F154404EC940;
struct _9ADD4811563784E97592213CBF8060F3;
struct _9B0A4478CCC03CE069B62A821FAD8B21;
struct _9C12574F58AA2B5C1EBE7BBCF485E547;
struct _9CC657B7E0AE245246966219C61A944E;
struct _9D2EE2D5E082F56CCDE737471FBF8D82;
struct _9DABE2D50638D6782800B54C16FE3B63;
struct _9E1ED747B9CD39E7270D6384935529E0;
struct _9E657745785F4F2083998F3B8B91C4CD;
struct _9EB91D8C4EA5FEB95803C89041761FE9;
struct _9FC3DA75389FEB436866F6884A7E4AB3;
struct _9FEB4B420E923D4204A687EB7CAB54F3;
struct _A032DB0F7E204543FB4FDFFDC60EE56A;
struct _A07373D2A5755254DCD028456AB4EC3B;
struct _A156F3783D3AF89709906294AAADEE96;
struct _A26E898CA2658C153BF5293169564991;
struct _A2B9D6959A188CB660A127F9232FE650;
struct _A352DA0F15C73F1F5EAA2E36AD3C4FF0;
struct _A35330E71724D40A1BD15D9C53ABB072;
struct _A4CC0F087DE00420119DAAB092DFFA3E;
union _A4FB595EF421231CAF150DDD3288A6D5;
struct _A5418207B8ACB2A177A7C8A16D784C3F;
struct _A62BA18312609C33C34CD1E15FBCE3E3;
struct _A97809CBA93BE73DFF75CDF56246D798;
struct _A9A577EE7A824FAC978D1F581F222FD5;
struct _AAB530BE51B826E42B40424AF03CA80A;
struct _AAD79452FC68247846A5E3B058A03BB4;
struct _AAE9FC4E72E05402C2BAEC93236C31D9;
struct _AC9A5C69A2E8BFD7F981D24477498145;
struct _ACFC21BFB5CC6BA65A81729B6E881FEB;
struct _AD455FBC572689F791F2277291BE97AE;
struct _AD8E08CFADC045292413D8E747DD5ED4;
struct _ADC8229B35D2FBAA1DBEA2E6CF74A72A;
struct _AE319F515EC2CAE237A98B55063CA2F4;
struct _AF8F52BD2951A3140126221F3F69B7AF;
struct _AFA69771633799B8FB97339D76F53EAE;
struct _B03639772012518ABC96BF05B41D5C12;
struct _B04A80E61A6C52E3FD4D22A5F125C77E;
struct _B09E3BE94FE30150210BFD831422B212;
struct _B0B71E7A52FD9A7B3B7D3722060F0E86;
struct _B0BC4AADD5C9FF12157D028DEF0CCD6A;
struct _B479CD8F7541BC4BC8DADEB69DB970AF;
struct _B4A25942D193F2EAA86C395C02EC729E;
struct _B62AAB724E8D7D841EB663A6FEE96A5E;
struct _B62AAF3B70FEB5C8D5EF5D71926BC992;
struct _B772E343E2BFFCD16A4D25DD01A27975;
struct _B8B838046A6339950C48D4D07BD9D7BC;
struct _B8CB9EEA0904F1CA6D6978D8DADC6932;
struct _BA519187DB4FB038EDB1959BB4D2DF27;
struct _BA718A362089753A7EB60B21429558A7;
struct _BA878B11B82B24305DD851662AD4DC24;
struct _BB313D54CF23017BA1FEE07E0A69AC13;
struct _BBE51AA07033B60919BF464EA8FAB770;
struct _BC62D53B4BCE191E8F4EB4D4D278EB00;
struct _BC7A094E99B893F962A170A802EFE988;
struct _BCFB24E8FFADAC88C53CD3CD50E1DFA4;
struct _BD45DD415248BEAEE554FBC6AD56DBFA;
struct _BD86F746C2C01DD8A428D9C33DA8EFBD;
struct _BDE91A4D4766441856A2EB7036E539BD;
struct _BF6BFD8678B7E7ABDC56122D693BAF10;
struct _BFD35443418CDCF1187E122E74A5B815;
struct _C0C97988B2B1541C7D96E5C8ECD89FD1;
struct _C0F7BB227D2914979DE22500D0E4A4BA;
struct _C18AA754B44D3B0CE088F6A6B0863744;
struct _C1C3EF408C46606406ABFE21B3E99DE8;
struct _C62299E2FAA36942CDE27418DA4FF5CB;
struct _C96031E4DF2664011E796FDD2EAA04AE;
union _C9F2A16A1B5FC998B91DA494984E0FDB;
struct _CA0DACF90AABDE33CADDF7416F0C17F2;
struct _CB16EFCEDA39FCD4D0BC1BDE67199271;
struct _CBA7ED455CF404F3CA70D8CDC7B47AD9;
struct _CF9BC9550FD422E0D8C3D585EC5FABC6;
struct _D0C2582348DF16EE31650672742EA602;
struct _D2D205A4E5DA2498F5010F3E3EADEEBB;
struct _D4D0762896814197118ADD898ABBFE52;
struct _D55ED97765090EFE6FCBF66E3A8167D2;
struct _D5F4E645249F637B2C3C729A114CD9D6;
struct _D611436986C6FEF0F654B123D787805F;
struct _D63E714A239F9C0D1FE2D222C2E0E7D5;
struct _D673094E3AD950F76728E160E7A2C382;
struct _D7325426B7F06BB5A63E402FDFE43953;
struct _D74197C1B01F8299C3B95153261D4A94;
struct _D78C377FC65BA439C025401600215C2E;
struct _D86AEF8896DDE0BDF211E48E78F8BB6F;
struct _D8768C71F24D405D4B7DEC8016730D6C;
struct _D8D7C26B9FDE94F9B7E724B17C76CE36;
struct _D96EA640170F725CA11FCBCFEE3FF36E;
struct _D9863DBF23EBBD7F74D85DDE027E035E;
struct _DB6743270A05FF5B7AB17563AEBB3A96;
struct _DCA1691E12E502D611F5426518CFEFB5;
struct _DCC11EC9B9FE9CEA4F12FF4EAD85BA21;
struct _DCCCDBDB2D2AC461237A75FB18C0449E;
struct _DDC9888807A9735D7BAE133B998CF89F;
struct _DE2D2125000B90024B7DD637FE0DF34E;
struct _DE8F492EE455543594962797C1392B09;
struct _DF566185D2A6E0088E9F136346A69B5D;
struct _E054F7F0B81E76E3D6D098531C7E763C;
struct _E15D7B7CA61FF43DF93005DFD376A388;
struct _E1A151A2F6A6C209F977C1A4EAB9F7DF;
struct _E1D601DFB9F50A58CFF7A79389CE7A63;
struct _E21F85AFDEE9EAF37885ADBF8938BB0C;
struct _E4277B22BE8DDC98F66C5B49691234CA;
struct _E4A6BAB3223452EC45F6B117A37FFCF9;
struct _E4D39CEDA60A9A842177218EB3078B88;
struct _E4F7CAB5B6B7D45C514D7552CCE8FB09;
struct _E56F877AE116898CEBF188009740BA30;
struct _E5C551D5220B94E855DFD2A46F971A3B;
struct _E6A0A6AFD97C9603961F7D97D8E3F005;
struct _E6A349E6C594207448DC3F8A57F3A91C;
struct _E6BAC8160F506AD645132E93AB36F89C;
struct _E79116A6AA0CFF653592F57D81FA8A4C;
struct _E7B7FA0D35363FDD22D2212ED4AF2596;
struct _E7BDCECB0924BC4C6E03B7EEA1B31BA1;
struct _E7F5496ECA9568683CB70A9C1E22006D;
struct _EA389285BB7D2C99CE0D2AD282BB3F14;
struct _EA4AC72E281160164D445E15D4425ADE;
struct _EC8EE2E9AF7D4EC32726A7FD632A186D;
struct _ECC65BA02B08F93DE1D3AD2A06446B79;
struct _ECD9D23603D8BADEE24156B8BE3276B4;
struct _EDF2F1A5F1BE56D609AF1AF9494F3DFB;
struct _EE7A277138FF7ACF03A1E9A4C6095702;
struct _EEDA301819F8EA8D15C0ADB3D7583498;
struct _EF62F39E220E1A59E4CABD7B09369D89;
struct _EF8244FDD6E56AA9E208EAF51AE7E8BA;
struct _EF98EE567420140E285BF0657F46953F;
struct _F0AD97B4DA1FA55F31FC7FE8AE7CC03A;
struct _F0DE5EAC046D7D32AA534DC253D377C4;
struct _F1FF9EB17A5B0DC512AB60E4FE6215DC;
struct _F2A265646FB33FDD4D1C81D3F589355E;
struct _F2DB9C7A95CA6E7C489F89DFE01AE08F;
struct _F3B7485C952161763EA52E3754EBFEF6;
struct _F686D1C2766FDD5B6EB9F09F9CA57BCC;
struct _F81C3DA38AA87E09A89CEC7FF6997E89;
struct _F903DA300906E5E06303D440D5AEF258;
struct _F9D4D1B8EC80C871C217333061A02293;
struct _FAF6A73AFD9895CF3E56308E3C23E916;
struct _FB17C9225429EF808B128BCE70FFD0DB;
struct _FB8A4E21AD43EDA8BFCCEEFE99FC59C9;
struct _FBE7179BAB40555F1A13AD3C5BC3BB71;
struct _FF5E69F4B253A5B06BAE6BEDF0A709ED;
union DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO;
struct DOT11_CONNECTION_START_PARAMETERS;
struct IMiniportWaveRTStreamNotification;
struct IUnregisterPhysicalConnectionVtbl;
struct STORAGE_BREAK_RESERVATION_REQUEST;
struct _ACPI_ENUM_CHILDREN_OUTPUT_BUFFER;
struct _ATM_TRANSIT_NETWORK_SELECTION_IE;
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO;
struct _D3DKMDT_SHAREDPRIMARYSURFACEDATA;
struct _DEVICEDUMP_RESTRICTED_SUBSECTION;
struct _DISPLAYID_DETAILED_TIMING_TYPE_I;
struct _DOT11_CURRENT_OFFLOAD_CAPABILITY;
struct _DOT11_HOPPING_PATTERN_ENTRY_LIST;
struct _DOT11_INCOMING_ASSOC_DECISION_V2;
struct _DOT11_SUPPORTED_DATA_RATES_VALUE;
struct _DOT11_WFD_DISCOVER_DEVICE_FILTER;
struct _DOT11_WFD_GROUP_START_PARAMETERS;
struct _DXGKARG_RECOMMENDFUNCTIONALVIDPN;
struct _DXGKARG_SETVIDPNSOURCEVISIBILITY;
struct _DXGKMDT_OPM_ACTUAL_OUTPUT_FORMAT;
struct _DXGKMDT_OPM_CONFIGURE_PARAMETERS;
struct _DXGKMDT_OPM_ENCRYPTED_PARAMETERS;
struct _DXGKMDT_OPM_STANDARD_INFORMATION;
struct _DXGK_SETVIDPNSOURCEADDRESS_FLAGS;
struct _FILE_FS_VOLUME_FLAGS_INFORMATION;
struct _FILE_REMOTE_PROTOCOL_INFORMATION;
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY;
struct _INTERNAL_I8042_START_INFORMATION;
struct _IOCTL_IR_SET_WAKE_PATTERN_PARAMS;
struct _IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH;
struct _KBUGCHECK_REASON_CALLBACK_RECORD;
struct _KBUGCHECK_SECONDARY_DUMP_DATA_EX;
struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY;
struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT;
struct _MODE_CDROM_WRITE_PARAMETERS_PAGE;
struct _MPIO_PASS_THROUGH_PATH_DIRECT_EX;
struct _MRX_CALLDOWN_COMPLETION_CONTEXT_;
struct _MSFC_NPIVLUNMappingInformationEx;
struct _MSMCAEvent_PlatformSpecificError;
struct _MSNdis_AtmHardwareCurrentAddress;
struct _MSNdis_FddiShortPermanentAddress;
struct _MSNdis_NetworkDirectCapabilities;
struct _MSNdis_ReceiveFilterCapabilities;
struct _MSNdis_StatusDot11Disassociation;
struct _MSNdis_StatusDot11PhyStateChange;
struct _MSNdis_StatusDot11TkipmicFailure;
struct _MSNdis_TokenRingCurrentRingState;
struct _MSNdis_TokenRingPermanentAddress;
struct _MSNdis_WmiIPSecOffloadV1_IPv4ESP;
struct _MSV1_0_GETCHALLENRESP_REQUEST_V1;
struct _MSiSCSI_InitiatorLoginStatistics;
struct _NDIS_802_11_AUTHENTICATION_EVENT;
struct _NDIS_802_11_PMKID_CANDIDATE_LIST;
struct _NDIS_CO_CLIENT_OPTIONAL_HANDLERS;
struct _NDIS_IF_PROVIDER_CHARACTERISTICS;
union _NDIS_MINIPORT_ADAPTER_ATTRIBUTES;
struct _NDIS_MINIPORT_CO_CHARACTERISTICS;
struct _NDIS_MINIPORT_RESTART_PARAMETERS;
struct _NDIS_PROTOCOL_CO_CHARACTERISTICS;
struct _NDIS_PROTOCOL_RESTART_PARAMETERS;
struct _NDIS_RECEIVE_FILTER_CAPABILITIES;
struct _NDIS_RECEIVE_THROTTLE_PARAMETERS;
struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO;
struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD;
struct _NDIS_WWAN_DEVICE_SERVICE_COMMAND;
struct _NDK_OBJECT_HEADER_RESERVED_BLOCK;
struct _NETWORK_APP_INSTANCE_ECP_CONTEXT;
struct _NOTIFICATION_EVENT_STATUS_HEADER;
struct _OB_PRE_CREATE_HANDLE_INFORMATION;
struct _PCI_EXPRESS_ARI_CONTROL_REGISTER;
union _PCI_EXPRESS_LINK_STATUS_REGISTER;
union _PCI_EXPRESS_ROOT_STATUS_REGISTER;
union _PCI_EXPRESS_SEC_AER_CAPABILITIES;
union _PCI_EXPRESS_SLOT_STATUS_REGISTER;
struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY;
struct _PMI_METERED_HARDWARE_INFORMATION;
struct _PROCESS_DEVICEMAP_INFORMATION_EX;
struct _PROCESS_HANDLE_TRACING_ENABLE_EX;
struct _REG_DELETE_VALUE_KEY_INFORMATION;
struct _REG_KEY_HANDLE_CLOSE_INFORMATION;
struct _REG_SET_KEY_SECURITY_INFORMATION;
struct _REQUEST_REMOTE_WAKE_NOTIFICATION;
struct _SAVED_DEVICE_INTERNAL_STATUS_LOG;
struct _SCSI_SUPPORTED_CONTROL_TYPE_LIST;
struct _STORAGE_ALLOCATE_BC_STREAM_INPUT;
struct _STORAGE_DEVICE_UNIQUE_IDENTIFIER;
struct _STORAGE_GET_BC_PROPERTIES_OUTPUT;
struct _STOR_POFX_POWER_REQUIRED_CONTEXT;
struct _TA_ADDRESS_NETBIOS_UNICODE_EX_XP;
struct _TIMER_SET_COALESCABLE_TIMER_INFO;
struct _TXFS_READ_BACKUP_INFORMATION_OUT;
struct _USB_DEVICE_CAPABILITY_DESCRIPTOR;
union _USB_HUB_30_PORT_REMOTE_WAKE_MASK;
struct _WATCHDOG_TIMER_INSTRUCTION_ENTRY;
struct _WHEA_XPF_PROCESSOR_ERROR_SECTION;
struct _WMI_CHANGER_PROBLEM_DEVICE_ERROR;
struct _WSK_PROVIDER_CONNECTION_DISPATCH;
struct _WWAN_DEVICE_SERVICE_SESSION_READ;
struct _WmiGetMonitorRawEEdidV1Block_OUT;
struct _WmiMonitorAnalogVideoInputParams;
struct _WmiQueryCurrentOffloadConfig_OUT;
struct _WmiQueryHDSplitCurrentConfig_OUT;
struct _WmiQueryHardwareOffloadConfig_IN;
struct _WmiQueryPhysicalMediumTypeEx_OUT;
struct tagKS_DATAFORMAT_VIDEOINFOHEADER2;
struct D3DKMDT_HVIDEOPRESENTSOURCESET__;
struct D3DKMDT_HVIDEOPRESENTTARGETSET__;
struct DOT11_MPDU_MAX_LENGTH_INDICATION;
struct DOT11_TKIPMIC_FAILURE_PARAMETERS;
struct _ACPI_ENUM_CHILDREN_INPUT_BUFFER;
struct _APPLICATIONLAUNCH_SETTING_VALUE;
struct _ARBITER_ADD_RESERVED_PARAMETERS;
struct _BRB_GET_DEVICE_INTERFACE_STRING;
struct _CDB___READ_FORMATTED_CAPACITIES;
struct _CDB___RECEIVE_TOKEN_INFORMATION;
struct _CHANGE_BUFFERING_STATE_REQUEST_;
struct _CHANNEL_CONFIG_RESULTS_ENHANCED;
struct _CLASS_QUERY_WMI_REGINFO_EX_LIST;
struct _CO_AF_TAPI_MAKE_CALL_PARAMETERS;
struct _CSRT_RESOURCE_DESCRIPTOR_HEADER;
struct _CSV_DOWN_LEVEL_OPEN_ECP_CONTEXT;
struct _D3DKMDT_MONITOR_FREQUENCY_RANGE;
struct _DOT11_CAN_SUSTAIN_AP_PARAMETERS;
struct _DOT11_DISASSOCIATE_PEER_REQUEST;
struct _DOT11_OFFLOAD_NETWORK_LIST_INFO;
struct _DOT11_OPERATION_MODE_CAPABILITY;
struct _DOT11_REG_DOMAINS_SUPPORT_VALUE;
struct _DOT11_WFD_CONFIGURATION_TIMEOUT;
struct _DOT11_WFD_DEVICE_LISTEN_CHANNEL;
struct _DOT11_WFD_GROUP_JOIN_PARAMETERS;
struct _DSM_QuerySupportedLBPolicies_V2;
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA;
struct _DXGKARG_ENUMVIDPNCOFUNCMODALITY;
struct _DXGKMDT_OPM_GET_INFO_PARAMETERS;
struct _DsmSetLoadBalancePolicyALUA_OUT;
struct _FILE_FS_DRIVER_PATH_INFORMATION;
struct _FILE_FS_SECTOR_SIZE_INFORMATION;
struct _FILE_MAILSLOT_QUERY_INFORMATION;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER;
struct _FILTER_VOLUME_BASIC_INFORMATION;
struct _FIRMWARE_BOOT_PERFORMANCE_TABLE;
struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_1;
struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_2;
struct _GetDiscoveredPortAttributes_OUT;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct _IO_CONNECT_INTERRUPT_PARAMETERS;
struct _IO_INTERRUPT_MESSAGE_INFO_ENTRY;
struct _IPSEC_OFFLOAD_V2_ALGORITHM_INFO;
union _IPV6_ROUTER_ADVERTISEMENT_FLAGS;
struct _IRB_REQ_GET_SPEED_TOPOLOGY_MAPS;
struct _KSM_BDA_GDDS_SERVICEFROMTUNEXML;
struct _LOADER_PARTITION_INFORMATION_EX;
struct _MSFC_VirtualFibrePortAttributes;
struct _MSMCAEvent_MemoryHierarchyError;
struct _MSNdis_80211_AuthenticationMode;
struct _MSNdis_80211_InfrastructureMode;
struct _MSNdis_80211_TransmitPowerLevel;
struct _MSNdis_EthernetPermanentAddress;
struct _MSNdis_FddiLongPermanentAddress;
struct _MSNdis_FddiShortMaximumListSize;
struct _MSNdis_NetworkDirectAdapterInfo;
struct _MSNdis_StatusPacketFilterChange;
struct _MSNdis_WmiIPSecOffloadV1_IPv4AH;
struct _MSNdis_WmiTcpLargeSendOffloadV1;
struct _MSNdis_WmiTcpLargeSendOffloadV2;
struct _MSiSCSI_RedirectPortalInfoClass;
struct _NDIS_802_11_NON_BCAST_SSID_LIST;
struct _NDIS_NET_BUFFER_LIST_8021Q_INFO;
union _NDIS_OID_REQUEST___REQUEST_DATA;
struct _NDIS_RECEIVE_SCALE_CAPABILITIES;
struct _NDIS_RESTART_GENERAL_ATTRIBUTES;
struct _NDIS_TAPI_NEGOTIATE_EXT_VERSION;
struct _NDIS_WMI_PM_ACTIVE_CAPABILITIES;
struct _NDIS_WMI_TCP_CONNECTION_OFFLOAD;
struct _NDIS_WWAN_GET_VISIBLE_PROVIDERS;
struct _NDIS_WWAN_SET_SIGNAL_INDICATION;
struct _NDIS_WWAN_SET_SMS_CONFIGURATION;
struct _NET_BUFFER_LIST_POOL_PARAMETERS;
struct _NOTIFICATION_OPERATIONAL_STATUS;
struct _NPI_LLDP_CLIENT_CHARACTERISTICS;
struct _PCI_EXPRESS_ROOT_PORT_INTERFACE;
struct _PCI_MSIX_TABLE_CONFIG_INTERFACE;
struct _PUBLIC_OBJECT_BASIC_INFORMATION;
struct _REG_POST_CREATE_KEY_INFORMATION;
struct _REG_QUERY_VALUE_KEY_INFORMATION;
struct _RemoveConnectionFromSession_OUT;
struct _SFF_PROTOCOL_INTERFACE_STANDARD;
struct _STORAGE_DEVICE_LAYOUT_SIGNATURE;
struct _SecPkgContext_SubjectAttributes;
struct _USB_DEVICE_QUALIFIER_DESCRIPTOR;
struct _VBICODECFILTERING_CC_SUBSTREAMS;
struct _VBICODECFILTERING_STATISTICS_CC;
struct _VIDEO_CHILD_STATE_CONFIGURATION;
struct _VIDEO_QUERY_PERFORMANCE_COUNTER;
struct _WmiGetMonitorRawEEdidV1Block_IN;
struct _WmiMonitorListedFrequencyRanges;
struct _WmiQueryCurrentOffloadConfig_IN;
struct _WmiQueryHDSplitCurrentConfig_IN;
struct _WmiQueryInterruptModeration_OUT;
struct _WmiQueryPhysicalMediumTypeEx_IN;
struct __PUBLIC_OBJECT_TYPE_INFORMATION;
struct tagKS_DATAFORMAT_VIDEOINFOHEADER;
struct tcp_opt_sack__tcp_opt_sack_block;
struct D3DKMDT_HMONITORDESCRIPTORSET__;
struct D3DKMDT_HMONITORSOURCEMODESET__;
struct DOT11_DISASSOCIATION_PARAMETERS;
struct IKoInitializeParentDeviceObject;
struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX;
struct _BDA_CAS_CHECK_ENTITLEMENTTOKEN;
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL;
struct _CDB___INITIALIZE_ELEMENT_RANGE;
struct _CLASSPNP_SCAN_FOR_SPECIAL_INFO;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
struct _CM_PNP_BIOS_INSTALLATION_CHECK;
struct _ClearMpioDiskHealthCounters_IN;
struct _DEDUP_CHUNK_INFORMATION_HASH32;
struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR;
struct _DEVICE_SEEK_PENALTY_DESCRIPTOR;
struct _DOT11_AVAILABLE_FREQUENCY_LIST;
struct _DOT11_MANUFACTURING_TEST_SLEEP;
struct _DOT11_MD_CAPABILITY_ENTRY_LIST;
struct _DOT11_SUPPORTED_OFDM_FREQUENCY;
struct _DSM_NOTIFICATION_REQUEST_BLOCK;
struct _DXGKARG_QUERYVIDPNHWCAPABILITY;
struct _DXGKARG_RECOMMENDVIDPNTOPOLOGY;
struct _DXGK_ALLOCATIONGROUPDESCRIPTOR;
struct _DXGK_MULITPLANE_OVERLAY_FILTER;
struct _DXGK_TIMED_OPERATION_INTERFACE;
struct _DXGK_VIDEO_OUTPUT_CAPABILITIES;
struct _DsmSetLoadBalancePolicyALUA_IN;
struct _FILE_ATTRIBUTE_TAG_INFORMATION;
struct _FILE_REPARSE_POINT_INFORMATION;
struct _FILE_STANDARD_LINK_INFORMATION;
struct _GET_INJECTION_CAPABILITIES_OUT;
struct _GetDiscoveredPortAttributes_IN;
struct _IEEE1394_SCATTER_GATHER_HEADER;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _INDICATION_PARAMETERS_ENHANCED;
struct _IRB_REQ_ALLOCATE_ADDRESS_RANGE;
struct _IRB_REQ_BUS_RESET_NOTIFICATION;
struct _IRB_REQ_ISOCH_ALLOCATE_CHANNEL;
struct _KEYBOARD_INDICATOR_TRANSLATION;
struct _KEY_VIRTUALIZATION_INFORMATION;
struct _KSM_BDA_USERACTIVITY_USEREASON;
struct _LOG_PARAMETER______TEMPERATURE;
struct _MODE_DEVICE_CONFIGURATION_PAGE;
struct _MORE_PARALLEL_PORT_INFORMATION;
struct _MSFC_NPIVLUNMappingInformation;
struct _MSNdis_80211_ConfigurationInfo;
struct _MSNdis_FddiLongMaximumListSize;
struct _MSNdis_FddiShortCurrentAddress;
struct _MSNdis_ReceiveFilterParameters;
struct _MSNdis_StatusDot11RoamingStart;
struct _MSNdis_StatusOperationalStatus;
struct _MSNdis_StatusTaskOffloadChange;
struct _MSNdis_TokenRingCurrentAddress;
struct _MSNdis_TokenRingLastOpenStatus;
struct _MSNdis_WmiHDSplitCurrentConfig;
struct _MSNdis_WmiTcpConnectionOffload;
struct _MSNdis_WmiTcpIpChecksumOffload;
struct _MSV1_0_GETCHALLENRESP_RESPONSE;
struct _MSV1_0_LM20_CHALLENGE_RESPONSE;
struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL;
struct _NDIS_FILTER_RESTART_PARAMETERS;
struct _NDIS_MINIPORT_PAUSE_PARAMETERS;
struct _NDIS_PROTOCOL_PAUSE_PARAMETERS;
struct _NDIS_RECEIVE_FILTER_INFO_ARRAY;
struct _NDIS_RECEIVE_FILTER_PARAMETERS;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V1;
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2;
struct _NDIS_WWAN_DEVICE_SERVICE_EVENT;
struct _NDIS_WWAN_PACKET_SERVICE_STATE;
struct _NDIS_WWAN_PROVISIONED_CONTEXTS;
struct _NOTIFICATION_MULTI_HOST_STATUS;
struct _OFFLOAD_IPSEC_DELETE_UDPESP_SA;
struct _PARALLEL_INTERRUPT_INFORMATION;
struct _PAR_DEVICE_ID_SIZE_INFORMATION;
struct _PCI_DEVICE_PRESENCE_PARAMETERS;
union _PCI_EXPRESS_ROOT_ERROR_COMMAND;
union _PCI_EXPRESS_TPH_ST_TABLE_ENTRY;
struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD;
struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD;
struct _PHYSICAL_COUNTER_RESOURCE_LIST;
struct _PORT_CONFIGURATION_INFORMATION;
struct _PROCESS_MITIGATION_ASLR_POLICY;
struct _REG_POST_OPERATION_INFORMATION;
struct _REG_PRE_CREATE_KEY_INFORMATION;
struct _RESP_QUERY_SECURITY_DESCRIPTOR;
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT;
struct _RXCE_CONNECTION_EVENT_HANDLER_;
struct _RX_WORK_QUEUE_RUNDOWN_CONTEXT_;
struct _RemoveConnectionFromSession_IN;
struct _SCSI_PASS_THROUGH_WITH_BUFFERS;
struct _SFFDISK_DEVICE_RPMB_DATA_FRAME;
struct _SOCKET_SECURITY_QUERY_TEMPLATE;
struct _SOCKET_SECURITY_SETTINGS_IPSEC;
struct _STARTIO_PERFORMANCE_PARAMETERS;
struct _STORAGE_FAILURE_PREDICT_STATUS;
struct _STOR_POFX_COMPONENT_IDLE_STATE;
struct _SecPkgContext_NegotiationInfoW;
struct _SecPkgCredentials_SSIProviderW;
struct _TOKEN_APPCONTAINER_INFORMATION;
struct _URB_BULK_OR_INTERRUPT_TRANSFER;
struct _URB_CONTROL_DESCRIPTOR_REQUEST;
struct _URB_CONTROL_GET_STATUS_REQUEST;
struct _USB_BUS_INTERFACE_HUB_MINIDUMP;
struct _USB_INTERFACE_POWER_DESCRIPTOR;
struct _VBICAP_PROPERTIES_PROTECTION_S;
struct _VIDEO_SHARE_MEMORY_INFORMATION;
struct _VIRTUAL_HW_INITIALIZATION_DATA;
union _WHEA_ERROR_RECORD_HEADER_FLAGS;
union _WHEA_GENERIC_ERROR_BLOCKSTATUS;
union _WHEA_PCIEXPRESS_COMMAND_STATUS;
struct _WSK_CLIENT_CONNECTION_DISPATCH;
struct _WSK_PROVIDER_DATAGRAM_DISPATCH;
struct _WWAN_SERVICE_ACTIVATION_STATUS;
struct _WWAN_SUPPORTED_DEVICE_SERVICES;
struct _WmiMonitorColorCharacteristics;
struct _WmiQueryInterruptModeration_IN;
struct _WmiSetTcpOffloadParameters_OUT;
struct creative_fastspeech10format_tag;
struct tagKS_DATAFORMAT_MPEGVIDEOINFO2;
struct DOT11_CIPHER_DEFAULT_KEY_VALUE;
struct DOT11_ROAMING_START_PARAMETERS;
struct IMiniportStreamAudioEngineNode;
union _AER_ENDPOINT_DESCRIPTOR_FLAGS;
union _AER_ROOTPORT_DESCRIPTOR_FLAGS;
struct _BDA_TS_SELECTORINFO_ISDBS_EXT;
struct _CDROM_TOC_FULL_TOC_DATA_BLOCK;
struct _CLFS_MGMT_CLIENT_REGISTRATION;
struct _CLFS_PHYSICAL_LSN_INFORMATION;
struct _COMPOSITE_DEVICE_CAPABILITIES;
struct _D3DDDI_GAMMA_RAMP_RGB256x3x16;
struct _DEVICEDUMP_PRIVATE_SUBSECTION;
struct _DEVICEDUMP_STORAGEDEVICE_DATA;
struct _DEVICEDUMP_SUBSECTION_POINTER;
struct _DEVICE_OBJECT_POWER_EXTENSION;
struct _DOT11_DATA_RATE_MAPPING_TABLE;
struct _DOT11_INCOMING_ASSOC_DECISION;
struct _DXGKARG_ACQUIRESWIZZLINGRANGE;
struct _DXGKARG_RECOMMENDMONITORMODES;
struct _DXGKARG_RELEASESWIZZLINGRANGE;
struct _DXGKARG_SETVIDPNSOURCEADDRESS;
struct _DXGK_FIRMWARE_TABLE_INTERFACE;
struct _DXGK_MULTIPLANE_OVERLAY_BLEND;
struct _DXGK_MULTIPLANE_OVERLAY_FLAGS;
struct _DXGK_MULTIPLANE_OVERLAY_PLANE;
struct _DXGK_TARGETMODE_DETAIL_TIMING;
struct _EXCEPTION_REGISTRATION_RECORD;
struct _FILE_FS_ATTRIBUTE_INFORMATION;
struct _FILE_FS_DATA_COPY_INFORMATION;
struct _FILE_FS_FULL_SIZE_INFORMATION;
struct _FILE_MAILSLOT_SET_INFORMATION;
struct _FILE_MOVE_CLUSTER_INFORMATION;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER;
struct _FILE_SFIO_RESERVE_INFORMATION;
struct _FIRMWARE_S3_PERFORMANCE_TABLE;
struct _FORMATTED_CAPACITY_DESCRIPTOR;
struct _FSVIDEO_REVERSE_MOUSE_POINTER;
struct _FSVIDEO_WRITE_TO_FRAME_BUFFER;
struct _HWPROFILE_CHANGE_NOTIFICATION;
struct _IDE_VENDOR_DEFINED_POWER_INFO;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _IO_CREATE_STREAM_FILE_OPTIONS;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _IO_SESSION_STATE_NOTIFICATION;
struct _IRB_REQ_ISOCH_QUERY_RESOURCES;
struct _ISCSI_DiscoveredTargetPortal2;
struct _KBUGCHECK_SECONDARY_DUMP_DATA;
struct _KEYBOARD_INDICATOR_PARAMETERS;
struct _KEYBOARD_TYPEMATIC_PARAMETERS;
struct _KEY_CONTROL_FLAGS_INFORMATION;
struct _KEY_VALUE_PARTIAL_INFORMATION;
struct _KernelThermalConstraintChange;
struct _MESSAGE_INTERRUPT_INFORMATION;
struct _MODE_DEVICE_CAPABILITIES_PAGE;
struct _MODE_READ_WRITE_RECOVERY_PAGE;
struct _MPIO_CONTROLLER_CONFIGURATION;
struct _MPIO_DEVINSTANCE_HEALTH_CLASS;
struct _MPIO_PASS_THROUGH_PATH_DIRECT;
struct _MSAcpi_ThermalZoneTemperature;
struct _MSFC_HBAPortAttributesResults;
struct _MSNdis_80211_DesiredDataRates;
struct _MSNdis_80211_NetworkTypeInUse;
struct _MSNdis_80211_NumberOfAntennas;
struct _MSNdis_AtmReceiveCellsDropped;
struct _MSNdis_EthernetCurrentAddress;
struct _MSNdis_FddiDownstreamNodeLong;
struct _MSNdis_FddiLongCurrentAddress;
struct _MSNdis_FddiRingManagmentState;
struct _MSNdis_FddiShortMulticastList;
struct _MSNdis_ReceiveFilterInfoArray;
struct _MSNdis_ReceiveQueueParameters;
struct _MSNdis_StatusDevicePowerOffEx;
struct _MSNdis_StatusDot11LinkQuality;
struct _MSNdis_StatusDot11ScanConfirm;
struct _MSV1_0_GETCHALLENRESP_REQUEST;
struct _MSV1_0_LM20_CHALLENGE_REQUEST;
struct _MSiSCSI_LUNMappingInformation;
struct _MSiSCSI_RequestTimeStatistics;
struct _NDIS_802_11_NETWORK_TYPE_LIST;
struct _NDIS_802_11_STATUS_INDICATION;
struct _NDIS_DEVICE_OBJECT_ATTRIBUTES;
struct _NDIS_DRIVER_OPTIONAL_HANDLERS;
struct _NDIS_FILTER_ATTACH_PARAMETERS;
struct _NDIS_MINIPORT_INIT_PARAMETERS;
struct _NDIS_RECEIVE_QUEUE_INFO_ARRAY;
struct _NDIS_RECEIVE_QUEUE_PARAMETERS;
struct _NDIS_RECEIVE_SCALE_PARAMETERS;
struct _NDIS_SHARED_MEMORY_PARAMETERS;
struct _NDIS_SYSTEM_PROCESSOR_INFO_EX;
struct _NDIS_TAPI_GET_CALL_ADDRESS_ID;
struct _NDIS_TAPI_GET_LINE_DEV_STATUS;
struct _NDIS_TAPI_PROVIDER_INITIALIZE;
struct _NDIS_TAPI_SEND_USER_USER_INFO;
struct _NDIS_TAPI_SET_STATUS_MESSAGES;
struct _NDIS_WWAN_PREFERRED_PROVIDERS;
struct _NETROOT_THROTTLING_PARAMETERS;
struct _OB_POST_OPERATION_INFORMATION;
struct _PARPORT_WMI_ALLOC_FREE_COUNTS;
union _PCI_EXPRESS_ROOT_ERROR_STATUS;
struct _PCMCIA_BUS_INTERFACE_STANDARD;
struct _PMI_MEASUREMENT_CONFIGURATION;
struct _PNP_REPLACE_PROCESSOR_LIST_V1;
struct _PROCESS_DEVICEMAP_INFORMATION;
struct _PROCESS_HANDLE_TRACING_ENABLE;
struct _PROCESS_MITIGATION_DEP_POLICY;
struct _PURGE_SYNCHRONIZATION_CONTEXT;
struct _REG_CREATE_KEY_INFORMATION_V1;
struct _REG_ENUMERATE_KEY_INFORMATION;
struct _REG_SET_VALUE_KEY_INFORMATION;
struct _REQ_QUERY_SECURITY_DESCRIPTOR;
struct _RemoveChapForPhysicalPort_OUT;
struct _SERIAL_PORT_REDIRECTION_TABLE;
struct _SOC_SUBSYSTEM_FAILURE_DETAILS;
struct _STORAGE_FAILURE_PREDICT_EVENT;
struct _STORAGE_PRIORITY_HINT_SUPPORT;
struct _STOR_INIT_UNICODE_STRING_ARGS;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER;
struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE;
struct _SecPkgContext_CredentialNameW;
struct _SecPkgContext_NegoPackageInfo;
struct _SetTunnelModeOuterAddress_OUT;
struct _TA_APPLETALK_ADDR___AddrAtalk;
struct _TDI_REQUEST_KERNEL_QUERY_INFO;
struct _TDI_REQUEST_QUERY_INFORMATION;
struct _TRANSACTION_BASIC_INFORMATION;
struct _TXFS_WRITE_BACKUP_INFORMATION;
struct _USB_DEFAULT_PIPE_SETUP_PACKET;
struct _USB_DEVICE_PERFORMANCE_INFO_0;
struct _USB_HIGH_SPEED_MAXPACKET___MP;
struct _VIDEO_WIN32K_CALLBACKS_PARAMS;
struct _VPD_IDENTIFICATION_DESCRIPTOR;
struct _WATCHDOG_TIMER_RESOURCE_TABLE;
struct _WHEA_GENERIC_ERROR_DATA_ENTRY;
struct _WHEA_GENERIC_ERROR_DESCRIPTOR;
struct _WHEA_PCIEXPRESS_ERROR_SECTION;
struct _WHEA_PCIXDEVICE_ERROR_SECTION;
struct _WMI_TAPE_PROBLEM_DEVICE_ERROR;
struct _WmiSetInterruptModeration_OUT;
struct _WmiSetTcpOffloadParameters_IN;
struct creative_fastspeech8format_tag;
struct mediaspace_adpcmwaveformat_tag;
struct tagKS_DATAFORMAT_H264VIDEOINFO;
struct tagKS_DATAFORMAT_VBIINFOHEADER;
struct D3DKMDT_HVIDPNSOURCEMODESET__;
struct D3DKMDT_HVIDPNTARGETMODESET__;
struct DOT11_DATA_RATE_MAPPING_ENTRY;
struct DOT11_LINK_QUALITY_PARAMETERS;
struct DOT11_PORT_STATE_NOTIFICATION;
struct IMiniportWaveCyclicStreamVtbl;
struct IUnregisterPhysicalConnection;
struct WHEA_PCIXDEVICE_REGISTER_PAIR;
struct _ACPI_DEBUGGING_DEVICE_IN_USE;
struct _BDA_DVBT2_L1_SIGNALLING_DATA;
struct _BDA_WMDRMTUNER_PIDPROTECTION;
struct _BTH_PROFILE_DRIVER_INTERFACE;
struct _CDB___PERSISTENT_RESERVE_OUT;
struct _CDB___READ_TRACK_INFORMATION;
struct _CDROM_TOC_CD_TEXT_DATA_BLOCK;
struct _CDROM_WRITE_SPEED_DESCRIPTOR;
struct _CDVD_INACTIVITY_TIMEOUT_PAGE;
struct _CM_DISK_GEOMETRY_DEVICE_DATA;
struct _CM_EISA_FUNCTION_INFORMATION;
struct _D3DKMDT_VIDEO_PRESENT_SOURCE;
struct _D3DKMDT_VIDEO_PRESENT_TARGET;
struct _DEVICEDUMP_PUBLIC_SUBSECTION;
struct _DEVICEDUMP_STRUCTURE_VERSION;
struct _DEVICE_DATA_SET_SCRUB_OUTPUT;
struct _DOT11_AVAILABLE_CHANNEL_LIST;
struct _DOT11_CURRENT_OPERATION_MODE;
struct _DOT11_DIVERSITY_SELECTION_RX;
struct _DOT11_NIC_SPECIFIC_EXTENSION;
struct _DOT11_SEND_EXTENSION_INFO_V2;
struct _DOT11_SUPPORTED_ANTENNA_LIST;
struct _DOT11_SUPPORTED_DSSS_CHANNEL;
struct _DOT11_SUPPORTED_POWER_LEVELS;
struct _DRIVE_LAYOUT_INFORMATION_GPT;
struct _DRIVE_LAYOUT_INFORMATION_MBR;
struct _DSM_QuerySupportedLBPolicies;
struct _DXGKARGCB_ENUMHANDLECHILDREN;
struct _DXGKARG_UPDATEPAGETABLEFLAGS;
struct _DXGK_DESCRIBEALLOCATIONFLAGS;
struct _DXGK_POWER_COMPONENT_MAPPING;
struct _DXGK_POWER_RUNTIME_COMPONENT;
struct _DXGK_SETPOINTERPOSITIONFLAGS;
struct _DXGK_VIDPNTOPOLOGY_INTERFACE;
struct _ENABLE_DISABLE_FP_POLLING_IN;
struct _ENLISTMENT_BASIC_INFORMATION;
struct _EXTENDED_ENCRYPTED_DATA_INFO;
struct _FILE_COMPRESSION_INFORMATION;
struct _FILE_DISPOSITION_INFORMATION;
struct _FILE_END_OF_FILE_INFORMATION;
struct _FILE_FS_OBJECTID_INFORMATION;
struct _FILE_ID_BOTH_DIR_INFORMATION;
struct _FILE_ID_EXTD_DIR_INFORMATION;
struct _FILE_ID_FULL_DIR_INFORMATION;
struct _FILE_PIPE_REMOTE_INFORMATION;
struct _FILE_SFIO_VOLUME_INFORMATION;
struct _FILE_TYPE_NOTIFICATION_INPUT;
struct _FILE_VOLUME_NAME_INFORMATION;
struct _FSRTL_PER_FILEOBJECT_CONTEXT;
struct _HAL_AMLI_BAD_IO_ADDRESS_LIST;
struct _HIDP_KEYBOARD_MODIFIER_STATE;
struct _IDE_CONTROLLER_CONFIGURATION;
struct _IDE_TRANSFER_MODE_PARAMETERS;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct _INSTANCE_PARTIAL_INFORMATION;
struct _INTERNAL_I8042_HOOK_KEYBOARD;
struct _IO_SESSION_STATE_INFORMATION;
struct _IRB_REQ_GET_GENERATION_COUNT;
struct _IRB_REQ_ISOCH_ATTACH_BUFFERS;
struct _IRB_REQ_ISOCH_DETACH_BUFFERS;
struct _IRB_REQ_ISOCH_FREE_BANDWIDTH;
struct _IRB_REQ_ISOCH_FREE_RESOURCES;
struct _ISCSI_DiscoveredTargetPortal;
struct _KSM_BDA_CAS_ENTITLEMENTTOKEN;
struct _KSM_BDA_CAS_OPENBROADCASTMMI;
struct _KSM_BDA_WMDRMTUNER_SYNCVALUE;
struct _MODE_DATA_COMPRESS_PAGE_PLUS;
struct _MODE_DEVICE_CONFIG_PAGE_PLUS;
struct _MODE_TRANSPORT_GEOMETRY_PAGE;
struct _MOUNTDEV_SUGGESTED_LINK_NAME;
struct _MOUNTMGR_DRIVE_LETTER_TARGET;
struct _MPIO_DEVINSTANCE_HEALTH_INFO;
struct _MRX_SRVCALL_CALLBACK_CONTEXT;
struct _MSFC_FibrePortNPIVAttributes;
struct _MSMCAEvent_MemoryPageRemoved;
struct _MSMCAEvent_PCIComponentError;
struct _MSNdis_80211_ConfigurationFH;
struct _MSNdis_AtmMaxAal34PacketSize;
struct _MSNdis_CoReceivePdusNoBuffer;
struct _MSNdis_CoVendorDriverVersion;
struct _MSNdis_EthernetMulticastList;
struct _MSNdis_FddiLongMulticastList;
struct _MSNdis_NicSwitchCapabilities;
struct _MSNdis_ReceiveQueueInfoArray;
struct _MSNdis_StatusDevicePowerOnEx;
struct _MSNdis_StatusLinkSpeedChange;
struct _MSNdis_TokenRingCurrentGroup;
struct _MSiSCSI_ConnectionStatistics;
struct _MSiSCSI_InitiatorSessionInfo;
struct _MSiSCSI_SecurityCapabilities;
struct _NAMED_PIPE_CREATE_PARAMETERS;
struct _NDIS_802_11_CONFIGURATION_FH;
struct _NDIS_CONFIGURATION_PARAMETER;
struct _NDIS_FILTER_PAUSE_PARAMETERS;
struct _NDIS_HD_SPLIT_CURRENT_CONFIG;
struct _NDIS_NIC_SWITCH_CAPABILITIES;
struct _NDIS_PM_WAKE_UP_CAPABILITIES;
struct _NDIS_RECEIVE_HASH_PARAMETERS;
struct _NDIS_TAPI_GET_ADDRESS_STATUS;
struct _NDIS_TAPI_SELECT_EXT_VERSION;
struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD;
struct _NDIS_WWAN_REGISTRATION_STATE;
struct _NDIS_WWAN_SERVICE_ACTIVATION;
struct _NDIS_WWAN_SET_PACKET_SERVICE;
struct _NDIS_WWAN_SET_REGISTER_STATE;
struct _NDK_SHARED_ENDPOINT_DISPATCH;
struct _NOTIFICATION_EXTERNAL_STATUS;
struct _NPI_PROVIDER_CHARACTERISTICS;
union _OB_POST_OPERATION_PARAMETERS;
struct _OB_PRE_OPERATION_INFORMATION;
struct _OFFLOAD_SECURITY_ASSOCIATION;
struct _PCI_DEVICE_PRESENT_INTERFACE;
union _PCI_EXPRESS_AER_CAPABILITIES;
union _PCI_EXPRESS_PME_REQUESTOR_ID;
struct _PCI_EXPRESS_SRIOV_CAPABILITY;
struct _PCI_SUBSYSTEM_IDS_CAPABILITY;
struct _PCI_VIRTUALIZATION_INTERFACE;
struct _PCW_REGISTRATION_INFORMATION;
struct _PLUGPLAY_NOTIFICATION_HEADER;
struct _PNP_REPLACE_DRIVER_INTERFACE;
struct _PROCESS_HANDLE_TRACING_ENTRY;
struct _PROCESS_HANDLE_TRACING_QUERY;
struct _PROCESS_WS_WATCH_INFORMATION;
struct _REQUEST_OPLOCK_OUTPUT_BUFFER;
struct _REQ_QUERY_FS_INFORMATION_FID;
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY;
struct _ReportDiscoveredTargets2_OUT;
struct _SCSI_SENSE_DESCRIPTOR_HEADER;
struct _SD_CHANGE_MACHINE_SID_OUTPUT;
struct _SECURITY_DESCRIPTOR_RELATIVE;
struct _SET_PARTITION_INFORMATION_EX;
struct _SET_PURGE_FAILURE_MODE_INPUT;
struct _SE_ADT_PARAMETER_ARRAY_ENTRY;
struct _SFFDISK_DEVICE_PASSWORD_DATA;
struct _STORAGE_DEVICE_ID_DESCRIPTOR;
struct _STORAGE_FAILURE_PREDICT_DATA;
struct _STORAGE_OFFLOAD_WRITE_OUTPUT;
struct _STORAGE_REQUEST_BLOCK_HEADER;
struct _STORAGE_SCSI_INFO_EXCEPTIONS;
struct _STORAGE_WRITE_CACHE_PROPERTY;
struct _STOR_WMI_QUERYTRACEINFO_ARGS;
struct _SYSTEM_HIBERFILE_INFORMATION;
struct _SecPkgContext_PasswordExpiry;
struct _SetTunnelModeOuterAddress_IN;
struct _TCG_DESCRIPTION_TABLE_CLIENT;
struct _TCG_DESCRIPTION_TABLE_SERVER;
struct _TDI_REQUEST_KERNEL_ASSOCIATE;
struct _TDI_REQUEST_KERNEL_RECEIVEDG;
struct _TDI_REQUEST_KERNEL_SET_EVENT;
struct _TDI_REQUEST_RECEIVE_DATAGRAM;
struct _TRANSACTION_BIND_INFORMATION;
struct _TRANSACTION_LIST_INFORMATION;
struct _TXFS_CREATE_MINIVERSION_INFO;
struct _TXFS_LIST_TRANSACTIONS_ENTRY;
struct _TXFS_TRANSACTION_ACTIVE_INFO;
struct _URB_GET_CURRENT_FRAME_NUMBER;
struct _USB_CONFIGURATION_DESCRIPTOR;
struct _USB_CONTROLLER_INFORMATION_0;
struct _USB_CONTROLLER_INFORMATION_1;
union _USB_FUNCTION_SUSPEND_OPTIONS;
struct _VIDEO_HW_INITIALIZATION_DATA;
struct _VPCI_INVALIDATE_BLOCK_OUTPUT;
struct _VPD_MEDIA_SERIAL_NUMBER_PAGE;
struct _WHEA_AER_ENDPOINT_DESCRIPTOR;
struct _WHEA_AER_ROOTPORT_DESCRIPTOR;
struct _WHEA_ERROR_SOURCE_DESCRIPTOR;
union _WHEA_NMI_ERROR_SECTION_FLAGS;
struct _WHEA_NOTIFICATION_DESCRIPTOR;
struct _WSK_CLIENT_DATAGRAM_DISPATCH;
struct _WSK_PROVIDER_CHARACTERISTICS;
struct _WSK_PROVIDER_LISTEN_DISPATCH;
struct _WWAN_DEVICE_SERVICE_RESPONSE;
struct _WmiMonitorBasicDisplayParams;
struct _WmiSetInterruptModeration_IN;
struct _tagKSAUDIOENGINE_VOLUMELEVEL;
struct creative_fastspeechformat_tag;
struct tagKS_DATARANGE_BDA_TRANSPORT;
struct tagKS_DATARANGE_VIDEO_PALETTE;
struct DOT11_PRIVACY_EXEMPTION_LIST;
struct IAdapterPowerManagement2Vtbl;
struct IAdapterPowerManagement3Vtbl;
struct IMiniportAudioEngineNodeVtbl;
struct KSGRAPHMANAGER_FUNCTIONTABLE;
union _AER_BRIDGE_DESCRIPTOR_FLAGS;
struct _ATM_CALLING_PARTY_NUMBER_IE;
struct _BTHX_HCI_READ_WRITE_CONTEXT;
struct _CDB___PERSISTENT_RESERVE_IN;
struct _CDB___READ_DISK_INFORMATION;
struct _CDB___REQUEST_BLOCK_ADDRESS;
struct _CDB___SECURITY_PROTOCOL_OUT;
struct _CHANGER_READ_ELEMENT_STATUS;
struct _CLAIM_SECURITY_ATTRIBUTE_V1;
struct _CLASS_FUNCTION_SUPPORT_INFO;
struct _CLASS_INTERPRET_SENSE_INFO2;
struct _CM_FULL_RESOURCE_DESCRIPTOR;
struct _D3DKMDT_MONITOR_SOURCE_MODE;
struct _D3DKMDT_VIDPN_HW_CAPABILITY;
struct _DEBUG_DEVICE_INFORMATION_V2;
struct _DEVICE_UI_FIRMWARE_REVISION;
struct _DISK_PERFORMANCE_PARAMETERS;
struct _DOT11_HOPPING_PATTERN_ENTRY;
struct _DOT11_RECV_SENSITIVITY_LIST;
struct _DOT11_WME_AC_PARAMTERS_LIST;
struct _DRIVER_VERIFIER_THUNK_PAIRS;
struct _DRIVE_LAYOUT_INFORMATION_EX;
struct _DUAL_OPLOCK_KEY_ECP_CONTEXT;
struct _DXGKARGCB_GETCAPTUREADDRESS;
struct _DXGKARG_PRESENT_DISPLAYONLY;
struct _DXGKARG_UPDATEPAGEDIRECTORY;
struct _DXGK_CREATEALLOCATIONFLAGS2;
struct _DXGK_DEBUG_REPORT_INTERFACE;
struct _DXGK_DESTROYALLOCATIONFLAGS;
struct _DeleteInitiatorNodeName_OUT;
struct _DsmSetLoadBalancePolicy_OUT;
struct _FILE_ALLOCATED_RANGE_BUFFER;
struct _FILE_ALLOCATION_INFORMATION;
struct _FILE_COMPLETION_INFORMATION;
struct _FILE_FS_CONTROL_INFORMATION;
struct _FILE_LINK_ENTRY_INFORMATION;
struct _FILE_MAKE_COMPATIBLE_BUFFER;
struct _FILE_PIPE_LOCAL_INFORMATION;
struct _FILE_SET_DEFECT_MGMT_BUFFER;
struct _FUNCTIONAL_DEVICE_EXTENSION;
struct _GetFcpPersistentBinding_OUT;
struct _HID_MINIDRIVER_REGISTRATION;
struct _ICMPV4_ADDRESS_MASK_MESSAGE;
struct _ICMPV4_ROUTER_ADVERT_HEADER;
struct _IGMPV3_REPORT_RECORD_HEADER;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct _IO_REMOVE_LOCK_COMMON_BLOCK;
struct _ISCSI_Supported_LB_Policies;
struct _KEY_VALUE_BASIC_INFORMATION;
struct _KEY_WOW64_FLAGS_INFORMATION;
struct _KSM_BDA_GDDS_TUNEXMLFROMIDX;
struct _KSM_BDA_TS_SELECTOR_SETTSID;
struct _KS_VIDEO_STREAM_CONFIG_CAPS;
struct _KernelPerfStateDomainChange;
struct _MEDIA_CHANGE_DETECTION_INFO;
struct _MODE_TAPE_MEDIA_INFORMATION;
struct _MOUNTMGR_CHANGE_NOTIFY_INFO;
struct _MOUNTMGR_CREATE_POINT_INPUT;
struct _MOUNTMGR_VOLUME_MOUNT_POINT;
struct _MRX_PIPE_HANDLE_INFORMATION;
struct _MSFC_FCAdapterHBAAttributes;
struct _MSFC_FibrePortHBAAttributes;
struct _MSFC_FibrePortHBAStatistics;
struct _MSKeyboard_ClassInformation;
struct _MSMCAEvent_SystemEventError;
struct _MSNdis_80211_ReloadDefaults;
struct _MSNdis_AtmMaxAal0PacketSize;
struct _MSNdis_AtmMaxAal1PacketSize;
struct _MSNdis_AtmMaxAal5PacketSize;
struct _MSNdis_AtmSupportedAalTypes;
struct _MSNdis_CoMediaConnectStatus;
struct _MSNdis_FddiLConnectionState;
struct _MSNdis_FddiUpstreamNodeLong;
struct _MSNdis_NetworkDirectVersion;
struct _MSNdis_NotifyAdapterArrival;
struct _MSNdis_NotifyAdapterRemoval;
struct _MSNdis_StatusDevicePowerOff;
struct _MSNdis_StatusProtocolUnbind;
struct _MSNdis_TcpOffloadParameters;
struct _MSV1_0_GETUSERINFO_RESPONSE;
struct _MSVerifierIrpLogInformation;
struct _NDIS_MSIX_CONFIG_PARAMETERS;
struct _NDIS_TAPI_PROVIDER_SHUTDOWN;
struct _NDIS_TCP_CONNECTION_OFFLOAD;
struct _NDIS_WMI_RECEIVE_QUEUE_INFO;
struct _NDIS_WWAN_SET_CONTEXT_STATE;
struct _NDIS_WWAN_SET_HOME_PROVIDER;
struct _NDIS_WWAN_SMS_CONFIGURATION;
struct _NDIS_WWAN_SMS_DELETE_STATUS;
struct _NDIS_WWAN_VISIBLE_PROVIDERS;
struct _NDK_LOGICAL_ADDRESS_MAPPING;
struct _NETWORK_OPEN_ECP_CONTEXT_V0;
union _OB_PRE_OPERATION_PARAMETERS;
struct _OFFLOAD_IPSEC_ADD_UDPESP_SA;
struct _PCI_DEBUGGING_DEVICE_IN_USE;
union _PCI_EXPRESS_ERROR_SOURCE_ID;
struct _PMI_BUDGETING_CONFIGURATION;
struct _PMI_THRESHOLD_CONFIGURATION;
struct _POWER_STATE_CHARACTERISTICS;
struct _PROCESSOR_POWER_INFORMATION;
struct _PROCESSOR_POWER_POLICY_INFO;
struct _PROCESS_SESSION_INFORMATION;
struct _REG_REPLACE_KEY_INFORMATION;
struct _REG_RESTORE_KEY_INFORMATION;
struct _REQUEST_OPLOCK_INPUT_BUFFER;
struct _REQ_SET_SECURITY_DESCRIPTOR;
struct _RXCE_ADDRESS_EVENT_HANDLER_;
struct _RXCE_TRANSPORT_INFORMATION_;
struct _ReportDiscoveredTargets_OUT;
struct _SCSI_PASS_THROUGH_DIRECT_EX;
struct _SD_CHANGE_MACHINE_SID_INPUT;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _SEC_WINNT_AUTH_IDENTITY_EX2;
struct _SEC_WINNT_AUTH_IDENTITY_EXW;
struct _SES_CONTROL_DIAGNOSTIC_PAGE;
struct _SFFDISK_DEVICE_COMMAND_DATA;
struct _SFI_TIMER_DESCRIPTION_TABLE;
struct _STORAGE_IDLE_POWERUP_REASON;
struct _STORAGE_MINIPORT_DESCRIPTOR;
struct _STORAGE_OFFLOAD_READ_OUTPUT;
struct _STORPORT_EXTENDED_FUNCTIONS;
struct _STOR_DEVICE_CAPABILITIES_EX;
struct _STOR_SCATTER_GATHER_ELEMENT;
struct _STOR_WMI_TRACE_MESSAGE_ARGS;
struct _SYSTEM_SCOPED_POLICY_ID_ACE;
struct _TDI20_CLIENT_INTERFACE_INFO;
struct _TDI_PROVIDER_RESOURCE_STATS;
struct _TDI_REQUEST_KERNEL_SET_INFO;
struct _TDI_REQUEST_SET_INFORMATION;
struct _TOKEN_GROUPS_AND_PRIVILEGES;
struct _TRANSACTION_ENLISTMENT_PAIR;
struct _TXFS_GET_TRANSACTED_VERSION;
struct _URB_CONTROL_FEATURE_REQUEST;
struct _USB_BUS_INFORMATION_LEVEL_0;
struct _USB_BUS_INFORMATION_LEVEL_1;
struct _VBICODECFILTERING_SCANLINES;
struct _VIDEO_DEVICE_SESSION_STATUS;
struct _VIDEO_HARDWARE_STATE_HEADER;
struct _VIDEO_LOAD_FONT_INFORMATION;
struct _WATCHDOG_TIMER_ACTION_TABLE;
struct _WHEA_PSHED_PLUGIN_CALLBACKS;
struct _WHEA_XPF_MC_BANK_DESCRIPTOR;
union _WHEA_XPF_PROCINFO_VALIDBITS;
struct _WMI_CHANGER_PROBLEM_WARNING;
struct _WSK_PROVIDER_BASIC_DISPATCH;
struct _WWAN_DEVICE_SERVICE_COMMAND;
struct _WWAN_DEVICE_SERVICE_SESSION;
struct _WmiSetALSBrightnessState_IN;
struct _WmiSetHDSplitParameters_OUT;
struct _tagKSAUDIOENGINE_DESCRIPTOR;
struct audiofile_af10waveformat_tag;
struct audiofile_af36waveformat_tag;
struct creative_adpcmwaveformat_tag;
struct tagKS_DATAFORMAT_MPEG2TS_AVC;
struct tag_video_geterrortext_parms;
struct DOT11_ASSOCIATION_INFO_LIST;
struct DOT11_AUTH_CIPHER_PAIR_LIST;
struct DOT11_CIPHER_ALGORITHM_LIST;
struct DOT11_HRDSSS_PHY_ATTRIBUTES;
struct IAdapterPowerManagementVtbl;
struct PCI_AGP_EXTENDED_CAPABILITY;
struct _ADMINISTRATOR_POWER_POLICY;
struct _AGP_BUS_INTERFACE_STANDARD;
struct _ATAPI_FAILURE_PREDICT_DATA;
struct _AddConnectionToSession_OUT;
struct _BDCB_STATUS_UPDATE_CONTEXT;
struct _BRB_L2CA_UNREGISTER_SERVER;
struct _BTHDDI_SDP_PARSE_INTERFACE;
struct _CDB___READ_BUFFER_CAPACITY;
struct _CDB___SECURITY_PROTOCOL_IN;
struct _CDB___SEND_OPC_INFORMATION;
struct _CDROM_EXCLUSIVE_LOCK_STATE;
struct _CLASS_MEDIA_CHANGE_CONTEXT;
struct _CLASS_READ_CAPACITY16_DATA;
struct _CLFS_STREAM_ID_INFORMATION;
struct _CO_CALL_MANAGER_PARAMETERS;
struct _CSRT_RESOURCE_GROUP_HEADER;
struct _ClearPathHealthCounters_IN;
struct _D3DDDI_MULTISAMPLINGMETHOD;
struct _D3DDDI_OPENALLOCATIONINFO2;
struct _D3DKMDT_MONITOR_DESCRIPTOR;
struct _D3DKMDT_STAGINGSURFACEDATA;
struct _D3DKMDT_VIDPN_PRESENT_PATH;
struct _DOT11_VWIFI_COMBINATION_V2;
struct _DOT11_VWIFI_COMBINATION_V3;
struct _DOT11_WFD_DISCOVER_REQUEST;
struct _DOT11_WFD_INVITATION_FLAGS;
struct _DRIVER_INITIALIZATION_DATA;
struct _DSM_Load_Balance_Policy_V2;
struct _DXGKARG_COLLECTDBGINFO_EXT;
struct _DXGKARG_DESCRIBEALLOCATION;
struct _DXGKARG_SETPOINTERPOSITION;
struct _DXGK_CREATEALLOCATIONFLAGS;
struct _DXGK_GDIARG_CLEARTYPEBLEND;
struct _DXGK_GDIARG_TRANSPARENTBLT;
struct _DXGK_INTERFACESPECIFICDATA;
struct _DXGK_POWER_COMPONENT_FLAGS;
struct _DXGK_PRESENTALLOCATIONINFO;
struct _DXGK_SEGMENTBANKPREFERENCE;
struct _DeleteInitiatorNodeName_IN;
struct _DsmSetLoadBalancePolicy_IN;
struct _ENLISTMENT_CRM_INFORMATION;
struct _ETW_TRACE_SESSION_SETTINGS;
struct _FILE_ALIGNMENT_INFORMATION;
struct _FILE_DIRECTORY_INFORMATION;
struct _FILE_FS_DEVICE_INFORMATION;
struct _FILE_FS_VOLUME_INFORMATION;
struct _FILE_GET_QUOTA_INFORMATION;
struct _FILE_NUMA_NODE_INFORMATION;
struct _FILE_ZERO_DATA_INFORMATION;
struct _FILTER_INITIALIZATION_DATA;
struct _FLT_OPERATION_REGISTRATION;
struct _FSCTL_OFFLOAD_WRITE_OUTPUT;
struct _FSCTL_QUERY_FAT_BPB_BUFFER;
struct _FSVIDEO_SCREEN_INFORMATION;
struct _GetFcpPersistentBinding_IN;
struct _GetPortAttributesByWWN_OUT;
struct _HDAUDIO_DEVICE_INFORMATION;
struct _HID_COLLECTION_INFORMATION;
struct _ICMPV4_ROUTER_ADVERT_ENTRY;
struct _IDE_SCATTER_GATHER_ELEMENT;
struct _IMAGE_DELAYLOAD_DESCRIPTOR;
struct _INSTANCE_BASIC_INFORMATION;
struct _IO_DEVICE_HINT_ECP_CONTEXT;
struct _IPSEC_OFFLOAD_V2_DELETE_SA;
struct _IPSEC_OFFLOAD_V2_UPDATE_SA;
struct _IRB_REQ_FREE_ADDRESS_RANGE;
struct _IRB_REQ_ISOCH_FREE_CHANNEL;
struct _IR_PRIORITY_RECEIVE_PARAMS;
struct _ISCSI_ConnectionStaticInfo;
struct _KEYBOARD_PORT_WMI_STD_DATA;
struct _KEYBOARD_UNIT_ID_PARAMETER;
struct _KEY_VALUE_FULL_INFORMATION;
struct _KEY_WRITE_TIME_INFORMATION;
struct _KMDDOD_INITIALIZATION_DATA;
struct _KSM_BDA_CAS_CLOSEMMIDIALOG;
struct _KSM_BDA_WMDRM_RENEWLICENSE;
struct _MAILSLOT_CREATE_PARAMETERS;
struct _MEDIA_SPECIFIC_INFORMATION;
struct _MLDV2_REPORT_RECORD_HEADER;
struct _MODE_DATA_COMPRESSION_PAGE;
struct _MODE_MEDIUM_PARTITION_PAGE;
struct _MODE_MEDIUM_PART_PAGE_PLUS;
struct _MSNdis_80211_BssIdListScan;
struct _MSNdis_80211_Configuration;
struct _MSNdis_80211_PrivacyFilter;
struct _MSNdis_AtmMaxActiveVciBits;
struct _MSNdis_AtmMaxActiveVpiBits;
struct _MSNdis_AtmSupportedVcRates;
struct _MSNdis_CoTransmitPduErrors;
struct _MSNdis_CoVendorDescription;
struct _MSNdis_CurrentPacketFilter;
struct _MSNdis_NetworkShortAddress;
struct _MSNdis_PMCapabilitiesParam;
struct _MSNdis_StatusDevicePowerOn;
struct _MSNdis_StatusNetworkChange;
struct _MSNdis_TokenRingLineErrors;
struct _MSNdis_TokenRingLostFrames;
struct _MSNdis_TransmitBufferSpace;
struct _MSNdis_VendorDriverVersion;
struct _MSV1_0_GETUSERINFO_REQUEST;
struct _MSV1_0_INTERACTIVE_PROFILE;
struct _MSWmi_GuidRegistrationInfo;
struct _NDIS_DRIVER_WRAPPER_HANDLE;
struct _NDIS_INTERFACE_INFORMATION;
struct _NDIS_OFFLOAD_ENCAPSULATION;
struct _NDIS_PHYSICAL_ADDRESS_UNIT;
struct _NDIS_SYSTEM_PROCESSOR_INFO;
struct _NDIS_TAPI_GET_ADDRESS_CAPS;
struct _NDIS_TAPI_GET_EXTENSION_ID;
struct _NDIS_TAPI_SET_APP_SPECIFIC;
struct _NDIS_TIMER_CHARACTERISTICS;
struct _NDIS_WAN_CO_GET_STATS_INFO;
struct _NET_BUFFER_POOL_PARAMETERS;
struct _NET_PNP_EVENT_NOTIFICATION;
struct _NPI_CLIENT_CHARACTERISTICS;
struct _PCI_AGP_APERTURE_PAGE_SIZE;
struct _PCI_BUS_INTERFACE_STANDARD;
struct _PCI_EXPRESS_ACS_CAPABILITY;
struct _PCI_EXPRESS_AER_CAPABILITY;
struct _PCI_EXPRESS_ARI_CAPABILITY;
struct _PCI_EXPRESS_LTR_CAPABILITY;
struct _PF_SET_EXTENSION_HOOK_INFO;
struct _PNP_REPLACE_PROCESSOR_LIST;
struct _POWER_PLATFORM_INFORMATION;
struct _PO_FX_COMPONENT_IDLE_STATE;
struct _READ_DVD_STRUCTURES_HEADER;
struct _REG_CREATE_KEY_INFORMATION;
struct _REG_DELETE_KEY_INFORMATION;
struct _REG_RENAME_KEY_INFORMATION;
struct _REG_UNLOAD_KEY_INFORMATION;
struct _REQUEST_RAW_ENCRYPTED_DATA;
struct _SDBUS_INTERFACE_PARAMETERS;
struct _SES_STATUS_DIAGNOSTIC_PAGE;
struct _SOCKET_SECURITY_QUERY_INFO;
struct _STORAGE_ADAPTER_DESCRIPTOR;
struct _STORAGE_EVENT_NOTIFICATION;
struct _STOR_ADAPTER_CONTROL_POWER;
struct _STOR_ALLOC_DIAG_EVENT_ARGS;
struct _STOR_INITGLOBALLOGGER_ARGS;
struct _STREAM_DATA_INTERSECT_INFO;
struct _STREAM_PROPERTY_DESCRIPTOR;
struct _SUB_Q_MEDIA_CATALOG_NUMBER;
struct _SYSTEM_MANDATORY_LABEL_ACE;
struct _SYSTEM_POWER_LOGGING_ENTRY;
struct _SYSTEM_POWER_STATE_CONTEXT;
struct _SecPkgContext_PackageInfoW;
struct _SetChapForPhysicalPort_OUT;
struct _TCP_INITIAL_RTO_PARAMETERS;
struct _TDI_CONNECTION_INFORMATION;
struct _TDI_REQUEST_KERNEL_RECEIVE;
struct _TXFS_GET_METADATA_INFO_OUT;
struct _TXFS_SAVEPOINT_INFORMATION;
struct _UNICODE_PREFIX_TABLE_ENTRY;
struct _USBD_INTERFACE_INFORMATION;
struct _USBD_ISO_PACKET_DESCRIPTOR;
struct _USB_BUS_INTERFACE_USBDI_V0;
struct _USB_BUS_INTERFACE_USBDI_V1;
struct _USB_BUS_INTERFACE_USBDI_V2;
struct _USB_BUS_INTERFACE_USBDI_V3;
union _USB_PORT_STATUS_AND_CHANGE;
struct _VIDEO_POINTER_CAPABILITIES;
struct _VIDEO_PORT_AGP_INTERFACE_2;
struct _VIDEO_PORT_I2C_INTERFACE_2;
struct _VIDEO_PORT_INT10_INTERFACE;
struct _VIDEO_PUBLIC_ACCESS_RANGES;
struct _WHEA_AER_BRIDGE_DESCRIPTOR;
struct _WHEA_PCIXBUS_ERROR_SECTION;
union _WHEA_PROCESSOR_FAMILY_INFO;
struct _WSK_CLIENT_LISTEN_DISPATCH;
struct _WSK_EVENT_CALLBACK_CONTROL;
struct _WWAN_GET_VISIBLE_PROVIDERS;
struct _WWAN_SET_SIGNAL_INDICATION;
struct _WWAN_SET_SMS_CONFIGURATION;
struct _WmiMonitorConnectionParams;
struct _WmiQueryStatisticsInfo_OUT;
struct _WmiSetHDSplitParameters_IN;
struct _tagKSJACK_SINK_INFORMATION;
struct contres_vqlpcwaveformat_tag;
struct nms_vbxadpcmmwaveformat_tag;
struct tagKS_DATARANGE_ANALOGVIDEO;
struct tagKS_DATARANGE_BDA_ANTENNA;
struct tagKS_DATARANGE_MPEG1_VIDEO;
struct tagKS_DATARANGE_MPEG2TS_AVC;
struct tagKS_DATARANGE_MPEG2_VIDEO;
struct tagVIDEO_MONITOR_DESCRIPTOR;
struct tag_video_stream_init_parms;
struct DOT11_MAC_FRAME_STATISTICS;
struct DOT11_PHY_FRAME_STATISTICS;
struct DOT11_PHY_STATE_PARAMETERS;
struct DXGK_DEBUG_REPORT_HANDLE__;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF;
struct IMiniportWavePciStreamVtbl;
struct _ACPI_EVAL_INPUT_BUFFER_EX;
struct _ATM_TRAFFIC_DESCRIPTOR_IE;
struct _AddConnectionToSession_IN;
struct _BDA_ETHERNET_ADDRESS_LIST;
struct _BDA_ISDBCAS_REQUESTHEADER;
struct _BDA_USERACTIVITY_INTERVAL;
struct _BOOTDISK_INFORMATION_LITE;
struct _BRB_ACL_ENTER_ACTIVE_MODE;
struct _BRB_SCO_UNREGISTER_SERVER;
struct _BTHDDI_SDP_NODE_INTERFACE;
struct _CDB___INIT_ELEMENT_STATUS;
struct _CDB___POSITION_TO_ELEMENT;
struct _CDB___READ_ELEMENT_STATUS;
struct _CDB___RESERVE_TRACK_RZONE;
struct _CDB___SYNCHRONIZE_CACHE10;
struct _CDB___SYNCHRONIZE_CACHE16;
struct _CDROM_PERFORMANCE_REQUEST;
struct _CDROM_TOC_ATIP_DATA_BLOCK;
struct _CDROM_WRITE_SPEED_REQUEST;
struct _CHANGER_ELEMENT_STATUS_EX;
struct _CHANNEL_CONFIG_PARAMETERS;
struct _CLASS_PRIVATE_COMMON_DATA;
struct _CLFS_LOG_NAME_INFORMATION;
struct _CLS_CONTAINER_INFORMATION;
struct _CONFIGURATION_INFORMATION;
struct _D3DDDIARG_CREATERESOURCE2;
struct _D3DDDI_CREATECONTEXTFLAGS;
struct _D3DDDI_OPENALLOCATIONINFO;
struct _D3DKMDT_SHADOWSURFACEDATA;
struct _D3DKMDT_VIDEO_SIGNAL_INFO;
struct _D3DKMDT_VIDPN_SOURCE_MODE;
struct _D3DKMDT_VIDPN_TARGET_MODE;
struct _D3DKM_TRANSPARENTBLTFLAGS;
struct _DEVICEDUMP_SECTION_HEADER;
struct _DISK_COPY_DATA_PARAMETERS;
struct _DOT11_ASSOCIATION_INFO_EX;
struct _DOT11_DEFAULT_WEP_OFFLOAD;
struct _DOT11_FRAGMENT_DESCRIPTOR;
struct _DOT11_OPTIONAL_CAPABILITY;
struct _DOT11_SEND_EXTENSION_INFO;
struct _DOT11_SUPPORTED_PHY_TYPES;
struct _DXGKARG_BUILDPAGINGBUFFER;
struct _DXGKARG_COMMITVIDPN_FLAGS;
struct _DXGKARG_CREATEALLOCATION2;
struct _DXGKARG_DESCRIBEPAGETABLE;
struct _DXGKARG_DESTROYALLOCATION;
struct _DXGKARG_MOVEPAGEDIRECTORY;
struct _DXGKARG_QUERYCURRENTFENCE;
struct _DXGKARG_QUERYENGINESTATUS;
struct _DXGKCB_GETHANDLEDATAFLAGS;
struct _DXGKMDT_OPM_RANDOM_NUMBER;
struct _DXGK_ALLOCATIONINFOFLAGS2;
struct _DXGK_ALLOCATIONUSAGEINFO1;
struct _DXGK_MONITOR_INTERFACE_V2;
struct _EISA_MEMORY_CONFIGURATION;
struct _FILE_BOTH_DIR_INFORMATION;
struct _FILE_FS_LABEL_INFORMATION;
struct _FILE_FULL_DIR_INFORMATION;
struct _FILE_INTERNAL_INFORMATION;
struct _FILE_OBJECTID_INFORMATION;
struct _FILE_PIPE_WAIT_FOR_BUFFER;
struct _FILE_POSITION_INFORMATION;
struct _FILE_QUERY_SPARING_BUFFER;
struct _FILE_STANDARD_INFORMATION;
struct _FILE_TRACKING_INFORMATION;
struct _FLT_FILE_NAME_INFORMATION;
struct _FSCTL_OFFLOAD_READ_OUTPUT;
struct _FSCTL_OFFLOAD_WRITE_INPUT;
struct _FSRTL_ADVANCED_FCB_HEADER;
struct _FSVIDEO_COPY_FRAME_BUFFER;
struct _GET_ALL_ERROR_SOURCES_OUT;
struct _GET_ERROR_SOURCE_INFO_OUT;
struct _GP_LOG_GENERAL_STATISTICS;
struct _GetPersistentBinding2_OUT;
struct _GetPortAttributesByWWN_IN;
struct _HDAUDIO_BUFFER_DESCRIPTOR;
struct _HDAUDIO_BUS_INTERFACE_BDL;
struct _HIDP_LINK_COLLECTION_NODE;
struct _IDE_CHANNEL_CONFIGURATION;
struct _IMAGE_BOUND_FORWARDER_REF;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct _IMAGE_RESOURCE_DATA_ENTRY;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _INJECT_HARDWARE_ERROR_OUT;
struct _INSTANCE_FULL_INFORMATION;
struct _INTERNAL_I8042_HOOK_MOUSE;
struct _IO_INTERRUPT_MESSAGE_INFO;
struct _ISCSI_RedirectSessionInfo;
struct _KBUGCHECK_CALLBACK_RECORD;
struct _KDPC_WATCHDOG_INFORMATION;
struct _KSM_BDA_TUNER_TUNEREQUEST;
struct _KS_DVDCOPY_SET_COPY_STATE;
struct _KernelThermalPolicyChange;
struct _LINK_TRACKING_INFORMATION;
struct _MF_VARYING_RESOURCE_ENTRY;
struct _MODE_ELEMENT_ADDRESS_PAGE;
struct _MOUNTMGR_QUERY_AUTO_MOUNT;
struct _MPIO_PASS_THROUGH_PATH_EX;
struct _MRX_CREATENETROOT_CONTEXT;
struct _MRX_SRVCALLDOWN_STRUCTURE;
struct _MSNdis_80211_Disassociate;
struct _MSNdis_80211_RTSThreshold;
struct _MSNdis_AtmTransmitCellsOk;
struct _MSNdis_CoMinimumLinkSpeed;
struct _MSNdis_CoReceivePduErrors;
struct _MSNdis_EnumerateAdapterEx;
struct _MSNdis_EthernetMacOptions;
struct _MSNdis_FddiAttachmentType;
struct _MSNdis_MaximumSendPackets;
struct _MSNdis_MediaConnectStatus;
struct _MSNdis_NetworkDirectState;
struct _MSNdis_PMAdminConfigParam;
struct _MSNdis_PMAdminConfigState;
struct _MSNdis_PhysicalMediumType;
struct _MSNdis_PortAuthParameters;
struct _MSNdis_ReceiveBufferSpace;
struct _MSNdis_StatusProtocolBind;
struct _MSV1_0_ENUMUSERS_RESPONSE;
struct _MSV1_0_LM20_LOGON_PROFILE;
struct _MSiSCSI_BootConfiguration;
struct _MSiSCSI_SessionStatistics;
struct _NDIS_802_11_BSSID_LIST_EX;
struct _NDIS_802_11_CONFIGURATION;
struct _NDIS_CONFIGURATION_OBJECT;
struct _NDIS_PORT_CHARACTERISTICS;
struct _NDIS_TAPI_GET_CALL_STATUS;
struct _NDIS_TAPI_SET_CALL_PARAMS;
struct _NDIS_WAN_CO_GET_COMP_INFO;
struct _NDIS_WAN_CO_GET_LINK_INFO;
struct _NDIS_WAN_CO_SET_COMP_INFO;
struct _NDIS_WAN_CO_SET_LINK_INFO;
struct _NDIS_WMI_IPSEC_OFFLOAD_V1;
struct _NDIS_WWAN_SET_RADIO_STATE;
struct _NDIS_WWAN_SMS_SEND_STATUS;
struct _NDIS_WWAN_VENDOR_SPECIFIC;
struct _NOTIFICATION_MEDIA_STATUS;
struct _NOTIFICATION_POWER_STATUS;
struct _NPI_REGISTRATION_INSTANCE;
struct _OBJECT_HANDLE_INFORMATION;
struct _OB_OPERATION_REGISTRATION;
struct _PAGE_PRIORITY_INFORMATION;
struct _PARALLEL_PORT_INFORMATION;
struct _PARCLASS_NEGOTIATION_MASK;
struct _PARPORT_REMOVAL_RELATIONS;
struct _PARTITION_INFORMATION_GPT;
struct _PARTITION_INFORMATION_MBR;
struct _PCC_GENREIC_SHARED_REGION;
union _PCI_EXPRESS_SRIOV_CONTROL;
struct _PCMCIA_INTERFACE_STANDARD;
struct _PCMCIA_SOCKET_INFORMATION;
struct _PHYSICAL_DEVICE_EXTENSION;
struct _PMI_REPORTED_CAPABILITIES;
struct _POINTER_PORT_WMI_STD_DATA;
struct _PREFETCH_OPEN_ECP_CONTEXT;
struct _PROCESS_BASIC_INFORMATION;
struct _READ_BUFFER_CAPACITY_DATA;
struct _READ_ELEMENT_ADDRESS_INFO;
struct _REGISTER_COMPOSITE_DEVICE;
struct _REG_QUERY_KEY_INFORMATION;
struct _RESOURCE_PERFORMANCE_DATA;
struct _RX_WORK_QUEUE_DISPATCHER_;
struct _RemovePersistentEntry_OUT;
struct _RemovePersistentLogin_OUT;
struct _SCARD_READER_CAPABILITIES;
struct _SCO_INDICATION_PARAMETERS;
struct _SDBUS_ADAPTER_SOCKET_INFO;
struct _SECURITY_FUNCTION_TABLE_W;
struct _SEC_WINNT_AUTH_IDENTITY_W;
struct _SET_ERROR_SOURCE_INFO_OUT;
struct _SET_PARTITION_INFORMATION;
struct _SHRINK_VOLUME_INFORMATION;
struct _SOCKET_PROCESSOR_AFFINITY;
struct _STORAGE_BUS_RESET_REQUEST;
struct _STORAGE_DESCRIPTOR_HEADER;
struct _STORAGE_DEVICE_DESCRIPTOR;
struct _STORAGE_DIAG_EVENT_RECORD;
struct _STOR_ALLOC_EL_RECORD_ARGS;
struct _STOR_CLEANUP_TRACING_ARGS;
struct _STOR_FREE_DIAG_EVENT_ARGS;
struct _STOR_POFX_UNIT_POWER_INFO;
struct _STOR_POWER_CONTROL_HEADER;
struct _STOR_WRITE_EL_RECORD_ARGS;
struct _SecPkgContext_StreamSizes;
struct _SetChapForPhysicalPort_IN;
struct _SetRADIUSSharedSecret_OUT;
struct _TAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS;
struct _TA_ADDRESS_NETBIOS___Addr;
struct _TDI_REQUEST_KERNEL_ACCEPT;
struct _TDI_REQUEST_KERNEL_SENDDG;
struct _TDI_REQUEST_SEND_DATAGRAM;
struct _TXFS_QUERY_RM_INFORMATION;
struct _TXFS_START_RM_INFORMATION;
struct _USBD_INTERFACE_LIST_ENTRY;
struct _USBRPM_DEVICE_INFORMATION;
struct _USB_EXTPORT_INFORMATION_0;
union _USB_HUB_STATUS_AND_CHANGE;
struct _VIDEO_PERFORMANCE_COUNTER;
struct _VPD_THIRD_PARTY_COPY_PAGE;
struct _VP_SCATTER_GATHER_ELEMENT;
struct _WHEA_MEMORY_ERROR_SECTION;
struct _WHEA_PCIEXPRESS_DEVICE_ID;
struct _WMI_TAPE_DRIVE_PARAMETERS;
struct _WMI_TAPE_MEDIA_PARAMETERS;
struct _WMI_TAPE_PROBLEM_IO_ERROR;
struct _WSK_EXTENSION_CONTROL_OUT;
struct _WWAN_DEVICE_SERVICE_ENTRY;
struct _WWAN_DEVICE_SERVICE_EVENT;
struct _WmiEnumReceiveFilters_OUT;
struct _WmiMonitorBrightnessEvent;
struct _WmiMonitorRawEEdidV1Block;
struct _WmiQueryStatisticsInfo_IN;
struct contres_cr10waveformat_tag;
struct fmtowns_snd_waveformat_tag;
struct sierra_adpcmwaveformat_tag;
struct tagKS_DATAFORMAT_IMAGEINFO;
struct tagKS_DATARANGE_H264_VIDEO;
struct yamaha_adpmcwaveformat_tag;
struct ANON_OBJECT_HEADER_BIGOBJ;
struct DOT11_AUTH_ALGORITHM_LIST;
struct DOT11_EXTSTA_RECV_CONTEXT;
struct DOT11_EXTSTA_SEND_CONTEXT;
struct DOT11_OFDM_PHY_ATTRIBUTES;
struct IMiniportWaveCyclicStream;
struct IMiniportWaveRTStreamVtbl;
struct RETRIEVAL_POINTERS_BUFFER;
struct _ALLOW_PERFORMANCE_HIT_IN;
struct _ATM_SERVICE_ADDRESS_LIST;
struct _AUX_MODULE_EXTENDED_INFO;
struct _AVC_STREAM_REQUEST_BLOCK;
struct _BDA_CAS_REQUESTTUNERDATA;
struct _BDA_ISDBCAS_RESPONSEDATA;
struct _BRB_L2CA_REGISTER_SERVER;
struct _BRB_SCO_GET_CHANNEL_INFO;
struct _CACHE_UNINITIALIZE_EVENT;
struct _CDB___READ_DVD_STRUCTURE;
struct _CDB___SEND_DVD_STRUCTURE;
struct _CDROM_PERFORMANCE_HEADER;
struct _CLS_IO_STATISTICS_HEADER;
struct _CM_COMPONENT_INFORMATION;
struct _CM_EISA_SLOT_INFORMATION;
struct _CM_INT13_DRIVE_PARAMETER;
struct _CM_PARTIAL_RESOURCE_LIST;
struct _CO_TAPI_CALL_DIAGNOSTICS;
struct _CSV_QUERY_REDIRECT_STATE;
struct _D3COLD_SUPPORT_INTERFACE;
struct _D3DDDIARG_CREATERESOURCE;
struct _D3DDDI_GAMMA_RAMP_DXGI_1;
struct _D3DDDI_KERNELOVERLAYINFO;
struct _D3DDDI_PATCHLOCATIONLIST;
struct _DEBUG_DEVICE_INFORMATION;
struct _DEBUG_TRACE_CONTROLPOINT;
struct _DECRYPTION_STATUS_BUFFER;
struct _DISABLE_ERROR_SOURCE_OUT;
struct _DOT11_DEFAULT_WEP_UPLOAD;
struct _DOT11_MANUFACTURING_TEST;
struct _DOT11_OFFLOAD_CAPABILITY;
struct _DOT11_QOS_TX_MEDIUM_TIME;
struct _DOT11_STOP_AP_PARAMETERS;
struct _DRIVE_LAYOUT_INFORMATION;
struct _DXGKARG_CREATEALLOCATION;
struct _DXGKARG_ISSUPPORTEDVIDPN;
struct _DXGKARG_QUERYADAPTERINFO;
struct _DXGK_ALLOCATIONINFOFLAGS;
struct _DXGK_ALLOCATIONUSAGEHINT;
struct _DXGK_DISCARDCONTENTFLAGS;
struct _DXGK_DISPLAY_INFORMATION;
struct _DXGK_OPENALLOCATIONFLAGS;
struct _DXGK_POWER_RUNTIME_STATE;
struct _DXGK_PREEMPTCOMMANDFLAGS;
struct _EHSTOR_DEVICE_PROPERTIES;
struct _ENABLE_OFFLINE_DIAGS_OUT;
struct _FILE_FS_SIZE_INFORMATION;
struct _FILE_FULL_EA_INFORMATION;
struct _FLT_CONTEXT_REGISTRATION;
struct _FSCTL_OFFLOAD_READ_INPUT;
struct _FSRTL_PER_STREAM_CONTEXT;
struct _FSVIDEO_MODE_INFORMATION;
struct _FrequencyRangeDescriptor;
struct _GET_ERROR_SOURCE_INFO_IN;
struct _GET_LOCAL_HOST_INFO7_W2K;
struct _GET_LOCAL_HOST_INFO7_WXP;
struct _GET_PARTITION_ATTRIBUTES;
struct _GetBindingCapability_OUT;
struct _GetPathConfiguration_OUT;
struct _GetPersistentBinding2_IN;
struct _GetPresharedKeyForId_OUT;
struct _HAL_PLATFORM_INFORMATION;
struct _HAL_PROCESSOR_SPEED_INFO;
struct _HDAUDIO_BUS_INTERFACE_V2;
struct _HDAUDIO_CONVERTER_FORMAT;
struct _HIDP_EXTENDED_ATTRIBUTES;
struct _HID_INTERFACE_NOTIFY_PNP;
struct _ICMPV4_TIMESTAMP_MESSAGE;
struct _IDE_CONTROLLER_INTERFACE;
struct _IDE_VENDOR_DEFINED_POWER;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _INJECT_HARDWARE_ERROR_IN;
struct _IO_DRIVER_CREATE_CONTEXT;
struct _IO_REMOVE_LOCK_DBG_BLOCK;
struct _IPV6_OPTION_ROUTER_ALERT;
struct _ISCSI_RedirectPortalInfo;
struct _KSM_BDA_CAS_CAPTURETOKEN;
struct _KSM_BDA_SCAN_CAPABILTIES;
struct _L2CAP_CONFIG_VALUE_RANGE;
struct _L2CAP_EXTENDED_FLOW_SPEC;
struct _MF_ENUMERATION_INTERFACE;
struct _MM_PHYSICAL_ADDRESS_LIST;
struct _MODE_RIGID_GEOMETRY_PAGE;
struct _MPIO_ADAPTER_INFORMATION;
struct _MP_DEVICE_DATA_SET_RANGE;
struct _MSDiskDriver_Performance;
struct _MSMouse_ClassInformation;
struct _MSNdis_80211_NetworkType;
struct _MSNdis_AtmReceiveCellsOk;
struct _MSNdis_HDSplitParameters;
struct _MSNdis_PMCapabilityState;
struct _MSNdis_PciDeviceProperty;
struct _MSNdis_ReceiveFilterInfo;
struct _MSNdis_TransmitBlockSize;
struct _MSNdis_VendorDescription;
struct _MSNdis_WmiIPSecOffloadV1;
struct _MSPower_DeviceWakeEnable;
struct _MSSmBios_RawSMBiosTables;
struct _MSV1_0_ENUMUSERS_REQUEST;
struct _MSV1_0_INTERACTIVE_LOGON;
struct _MSiSCSI_HBASessionConfig;
struct _MSiSCSI_PersistentLogins;
struct _NAMED_PIPE_INFORMATION_1;
struct _NDISTAPI_CHARACTERISTICS;
struct _NDIS_802_11_VARIABLE_IEs;
struct _NDIS_HD_SPLIT_ATTRIBUTES;
struct _NDIS_HD_SPLIT_PARAMETERS;
struct _NDIS_IP_OPER_STATUS_INFO;
struct _NDIS_PM_PROTOCOL_OFFLOAD;
struct _NDIS_RECEIVE_FILTER_INFO;
struct _NDIS_RECEIVE_QUEUE_STATE;
struct _NDIS_STATISTICS_VALUE_EX;
struct _NDIS_TAPI_GET_ADDRESS_ID;
struct _NDIS_TAPI_GET_DEV_CONFIG;
struct _NDIS_TAPI_MONITOR_DIGITS;
struct _NDIS_TAPI_SET_DEV_CONFIG;
struct _NDIS_TAPI_SET_MEDIA_MODE;
struct _NDIS_WAN_GET_BRIDGE_INFO;
struct _NDIS_WAN_SET_BRIDGE_INFO;
struct _NDIS_WMI_PM_ADMIN_CONFIG;
struct _NDIS_WWAN_AUTH_CHALLENGE;
struct _NDIS_WWAN_HOME_PROVIDER2;
struct _NETWORK_OPEN_ECP_CONTEXT;
struct _NET_BUFFER_SHARED_MEMORY;
struct _NET_PHYSICAL_LOCATION_LH;
struct _NL_BANDWIDTH_INFORMATION;
struct _NL_INTERFACE_OFFLOAD_ROD;
struct _NOTIFICATION_BUSY_STATUS;
struct _OB_CALLBACK_REGISTRATION;
struct _PARALLEL_PNP_INFORMATION;
struct _PARTITION_INFORMATION_EX;
union _PCI_EXPRESS_SRIOV_STATUS;
union _PCW_CALLBACK_INFORMATION;
struct _PHY_CONFIGURATION_PACKET;
struct _POWER_MONITOR_INVOCATION;
struct _Q2931_CALLMGR_PARAMETERS;
struct _QUERY_FILE_LAYOUT_OUTPUT;
struct _RDBSS_STARTSTOP_CONTEXT_;
struct _REG_LOAD_KEY_INFORMATION;
struct _REG_SAVE_KEY_INFORMATION;
struct _REPARSE_GUID_DATA_BUFFER;
struct _RTL_QUERY_REGISTRY_TABLE;
struct _RemovePersistentEntry_IN;
struct _RemovePersistentLogin_IN;
struct _SCSI_PASS_THROUGH_DIRECT;
struct _SCSI_POWER_REQUEST_BLOCK;
struct _SDBUS_INTERFACE_STANDARD;
struct _SECURITY_SUBJECT_CONTEXT;
union _SES_PROTOCOL_INFORMATION;
struct _SES_SAS_SLOT_INFORMATION;
struct _SET_ERROR_SOURCE_INFO_IN;
struct _SET_PARTITION_ATTRIBUTES;
struct _SID_IDENTIFIER_AUTHORITY;
struct _SILO_DRIVER_CAPABILITIES;
struct _SOCKET_SECURITY_SETTINGS;
struct _SRBEX_DATA_BIDIRECTIONAL;
struct _STOR_DEVICE_CAPABILITIES;
struct _STOR_FREE_EL_RECORD_ARGS;
struct _STOR_LOG_DIAG_EVENT_ARGS;
struct _STOR_POFX_ACTIVE_CONTEXT;
struct _STOR_POFX_FSTATE_CONTEXT;
struct _STOR_SCATTER_GATHER_LIST;
struct _STOR_WMI_REGCONTROL_ARGS;
struct _STREAM_METHOD_DESCRIPTOR;
struct _SWENUM_INSTALL_INTERFACE;
struct _SYSTEM_POWER_INFORMATION;
struct _SecPkgContext_AuthorityW;
struct _SecPkgContext_LogoffTime;
struct _SecPkgContext_NegoStatus;
struct _SecPkgContext_ProtoInfoW;
struct _SecPkgContext_SessionKey;
struct _SecPkgCredentials_NamesW;
struct _SetGroupPresharedKey_OUT;
struct _SetInitiatorNodeName_OUT;
struct _SetLoadBalancePolicy_OUT;
struct _SetPresharedKeyForId_OUT;
struct _SetRADIUSSharedSecret_IN;
struct _TA_ADDRESS_IP6___AddrIp6;
struct _TA_ADDRESS_IPX___AddrIpx;
struct _TA_ADDRESS_VNS___AddrVns;
struct _TOKEN_ACCESS_INFORMATION;
struct _TRANSACTION_NOTIFICATION;
struct _URB_FRAME_LENGTH_CONTROL;
struct _URB_SELECT_CONFIGURATION;
struct _USBC_FUNCTION_DESCRIPTOR;
struct _USBD_VERSION_INFORMATION;
struct _USB_BUS_INTERFACE_HUB_V0;
struct _USB_BUS_INTERFACE_HUB_V1;
struct _USB_BUS_INTERFACE_HUB_V2;
struct _USB_BUS_INTERFACE_HUB_V3;
struct _USB_BUS_INTERFACE_HUB_V4;
struct _USB_BUS_INTERFACE_HUB_V5;
struct _USB_BUS_INTERFACE_HUB_V6;
struct _USB_BUS_INTERFACE_HUB_V7;
struct _USB_BUS_INTERFACE_HUB_V8;
struct _USB_CD_ERROR_INFORMATION;
struct _USB_DEVICE_INFORMATION_0;
struct _USB_EXTHUB_INFORMATION_0;
union _USB_HIGH_SPEED_MAXPACKET;
struct _USB_ID_ERROR_INFORMATION;
struct _USB_INTERFACE_DESCRIPTOR;
struct _VIDEO_COLOR_CAPABILITIES;
struct _VIDEO_MEMORY_INFORMATION;
struct _VIDEO_POINTER_ATTRIBUTES;
struct _VIDEO_PORT_AGP_INTERFACE;
struct _VIDEO_PORT_I2C_INTERFACE;
struct _VIDEO_X86_BIOS_ARGUMENTS;
struct _VPD_ATA_INFORMATION_PAGE;
struct _VPD_SUPPORTED_PAGES_PAGE;
struct _WHEA_ERROR_RECORD_HEADER;
struct _WMI_TAPE_PROBLEM_WARNING;
struct _WSK_EXTENSION_CONTROL_IN;
struct _WWAN_AUTH_AKAP_CHALLENGE;
struct _WmiEnumReceiveFilters_IN;
struct _WmiEnumReceiveQueues_OUT;
struct _WmiSetLinkParameters_OUT;
struct _WmiSetPortParameters_OUT;
struct _XVARIABLE_NAME_AND_VALUE;
struct tagKS_DATARANGE_VIDEO_VBI;
struct tagKS_TVTUNER_CHANGE_INFO;
struct tag_video_configure_parms;
struct D3DKMDT_HVIDPNTOPOLOGY__;
struct DOT11_ASSOCIATION_PARAMS;
struct DOT11_ERP_PHY_ATTRIBUTES;
struct DOT11_LINK_QUALITY_ENTRY;
struct IAdapterPowerManagement2;
struct IAdapterPowerManagement3;
struct IMiniportAudioEngineNode;
struct IMiniportAudioEngineVtbl;
struct INonDelegatedUnknownVtbl;
struct IPortClsRuntimePowerVtbl;
struct IPortWMIRegistrationVtbl;
struct IUnregisterSubdeviceVtbl;
struct SMHBA_ProtocolStatistics;
struct _ACPI_EVAL_OUTPUT_BUFFER;
struct _ACPI_INTERFACE_STANDARD;
struct _API_SET_NAMESPACE_ARRAY;
struct _API_SET_NAMESPACE_ENTRY;
struct _ATA_PASS_THROUGH_DIRECT;
struct _BDA_CAS_CLOSE_MMIDIALOG;
struct _BDA_TEMPLATE_CONNECTION;
struct _BOOTDISK_INFORMATION_EX;
struct _BRB_L2CA_UPDATE_CHANNEL;
struct _BRB_SCO_GET_SYSTEM_INFO;
struct _BRB_SCO_REGISTER_SERVER;
struct _CACHE_MANAGER_CALLBACKS;
struct _CDB___ATA_PASSTHROUGH12;
struct _CDB___ATA_PASSTHROUGH16;
struct _CDB___CDB6READWRITETAPE;
struct _CDB___GET_CONFIGURATION;
struct _CDROM_STREAMING_CONTROL;
struct _CDROM_SUB_Q_DATA_FORMAT;
struct _CDROM_TOC_FULL_TOC_DATA;
struct _CDVD_CHALLENGE_KEY_DATA;
struct _CHANGER_EXCHANGE_MEDIUM;
struct _CM_KEYBOARD_DEVICE_DATA;
struct _CM_PNP_BIOS_DEVICE_NODE;
struct _COMMON_DEVICE_EXTENSION;
struct _CO_GET_CALL_INFORMATION;
struct _CSV_QUERY_FILE_REVISION;
struct _CreateVirtualPortEx_OUT;
struct _D3DKMDT_FREQUENCY_RANGE;
struct _D3DKMDT_GDISURFACEFLAGS;
struct _D3DKMDT_PREEMPTION_CAPS;
struct _DEBUGGING_DEVICE_IN_USE;
struct _DEVICE_POWER_DESCRIPTOR;
struct _DISABLE_ERROR_SOURCE_IN;
struct _DMA_CONFIGURATION_BYTE0;
struct _DMA_CONFIGURATION_BYTE1;
struct _DOT11_PER_MSDU_COUNTERS;
struct _DOT11_STATUS_INDICATION;
struct _DOT11_SUPPORTED_ANTENNA;
struct _DOT11_VWIFI_COMBINATION;
struct _DOT11_WFD_ADDITIONAL_IE;
struct _DOT11_WME_AC_PARAMETERS;
struct _DSM_Load_Balance_Policy;
struct _DXGKARGCB_GETHANDLEDATA;
struct _DXGKARG_CLOSEALLOCATION;
struct _DXGKARG_SETPOINTERSHAPE;
struct _DXGKARG_UPDATEPAGETABLE;
struct _DXGK_ALLOCATIONGROUPOUT;
struct _DXGK_CHILD_CAPABILITIES;
struct _DXGK_CHILD_CONTAINER_ID;
struct _DXGK_CREATECONTEXTFLAGS;
struct _DXGK_GENERIC_DESCRIPTOR;
struct _DXGK_OPENALLOCATIONINFO;
struct _DXGK_SEGMENTDESCRIPTOR2;
struct _DXGK_SEGMENTDESCRIPTOR3;
struct _DXGK_SUBMITCOMMANDFLAGS;
struct _DXGK_VIRTUALADDRESSCAPS;
struct _EISA_PORT_CONFIGURATION;
struct _ENABLE_ERROR_SOURCE_OUT;
struct _EVENT_FILTER_DESCRIPTOR;
struct _FAILURE_PREDICTION_INFO;
struct _FILE_ACCESS_INFORMATION;
struct _FILE_GET_EA_INFORMATION;
struct _FILE_NOTIFY_INFORMATION;
struct _FILE_RENAME_INFORMATION;
struct _FILE_STREAM_INFORMATION;
struct _FILTER_FULL_INFORMATION;
struct _FLT_CALLBACK_DATA_QUEUE;
struct _FLT_RELATED_CONTEXTS_EX;
struct _FORMATTED_CAPACITY_LIST;
struct _FSRTL_COMMON_FCB_HEADER;
struct _FSVIDEO_CURSOR_POSITION;
struct _FS_FILTER_CALLBACK_DATA;
struct _GetBindingCapability_IN;
struct _GetFcpTargetMapping_OUT;
struct _GetPathConfiguration_IN;
struct _GetPresharedKeyForId_IN;
struct _HW_STREAM_REQUEST_BLOCK;
struct _IDE_SCATTER_GATHER_LIST;
struct _IMAGE_IMPORT_DESCRIPTOR;
struct _IMAGE_OPTIONAL_HEADER64;
struct _IO_SESSION_CONNECT_INFO;
struct _IPSEC_OFFLOAD_V2_ADD_SA;
struct _IRB_RECEIVE_PHY_PACKETS;
struct _IRB_REQ_SEND_PHY_PACKET;
struct _ISCSI_DiscoveredTarget2;
struct _ISCSI_SessionStaticInfo;
struct _ISCSI_TargetPortalGroup;
struct _ImageArchitectureHeader;
struct _KSM_BDA_ISDBCAS_REQUEST;
struct _KSPROCESSPIN_INDEXENTRY;
struct _KSSTREAM_POINTER_OFFSET;
struct _MF_VARYING_RESOURCE_MAP;
struct _MODE_DATA_COMPRESS_PAGE;
struct _MODE_DEVICE_CONFIG_PAGE;
struct _MODE_FLEXIBLE_DISK_PAGE;
struct _MODE_PARAMETER_HEADER10;
struct _MODE_READ_RECOVERY_PAGE;
struct _MOUNTMGR_SET_AUTO_MOUNT;
struct _MOUSE_UNIT_ID_PARAMETER;
struct _MSFC_DH_Chap_Parameters;
struct _MSMCAEvent_InvalidError;
struct _MSNdis_80211_Statistics;
struct _MSNdis_CoHardwareStatus;
struct _MSNdis_CoMediaSupported;
struct _MSNdis_CoTransmitPdusOk;
struct _MSNdis_CurrentLookahead;
struct _MSNdis_EnumerateAdapter;
struct _MSNdis_MaximumFrameSize;
struct _MSNdis_MaximumLookahead;
struct _MSNdis_MaximumTotalSize;
struct _MSNdis_NetworkLinkSpeed;
struct _MSNdis_ReceiveBlockSize;
struct _MSNdis_ReceiveQueueInfo;
struct _MSSmBios_SMBiosEventlog;
struct _MSiSCSI_BootInformation;
struct _MSiSCSI_DiscoveryConfig;
struct _MSiSCSI_PortalInfoClass;
struct _NDIS_OFFLOAD_PARAMETERS;
struct _NDIS_RECEIVE_QUEUE_INFO;
struct _NDIS_RESTART_ATTRIBUTES;
struct _NDIS_RSS_PROCESSOR_INFO;
struct _NDIS_SG_DMA_DESCRIPTION;
struct _NDIS_TAPI_CONFIG_DIALOG;
struct _NDIS_TAPI_GATHER_DIGITS;
struct _NDIS_TAPI_GET_CALL_INFO;
struct _NDIS_WAN_GET_STATS_INFO;
struct _NDIS_WMI_GROUP_AFFINITY;
struct _NDIS_WWAN_AUTH_RESPONSE;
struct _NDIS_WWAN_CONTEXT_STATE;
struct _NDIS_WWAN_HOME_PROVIDER;
struct _NDK_EXTENSION_INTERFACE;
struct _NET_BUFFER_LIST_CONTEXT;
struct _NODE_TYPE_CODE_AND_SIZE;
struct _OBJECT_NAME_INFORMATION;
struct _OFFLOAD_IPSEC_DELETE_SA;
struct _PCI_CAPABILITIES_HEADER;
union _PCI_EXPRESS_ACS_CONTROL;
struct _PCW_COUNTER_INFORMATION;
struct _PERF_CONFIGURATION_DATA;
struct _PNP_REPLACE_MEMORY_LIST;
struct _POOLED_USAGE_AND_LIMITS;
struct _POWER_SESSION_RIT_STATE;
struct _QUERY_FILE_LAYOUT_INPUT;
struct _RemoveVirtualPortEx_OUT;
struct _S3PT_PERFORMANCE_RECORD;
struct _SCARD_CARD_CAPABILITIES;
struct _SD_GLOBAL_CHANGE_OUTPUT;
struct _SD_RW_EXTENDED_ARGUMENT;
struct _SECTION_OBJECT_POINTERS;
struct _SECURITY_CLIENT_CONTEXT;
struct _SID_AND_ATTRIBUTES_HASH;
struct _SMB_TRANSACT_NAMED_PIPE;
struct _SOCKET_PEER_TARGET_NAME;
struct _SRBEX_DATA_SCSI_CDB_VAR;
struct _STORAGE_ERRORLOG_PACKET;
struct _STORAGE_PREDICT_FAILURE;
struct _STORAGE_TRACE_INIT_INFO;
struct _STOR_POFX_POWER_CONTROL;
struct _STOR_POWER_SETTING_INFO;
struct _STOR_SYSTEM_POWER_HINTS;
struct _STOR_UNIT_CONTROL_POWER;
struct _SecPkgContext_UserFlags;
struct _SetCHAPSharedSecret_OUT;
struct _SetGenerationalGuid_OUT;
struct _SetGroupPresharedKey_IN;
struct _SetInitiatorNodeName_IN;
struct _SetLoadBalancePolicy_IN;
struct _SetPresharedKeyForId_IN;
struct _SpanningEventDescriptor;
struct _SpanningEventEmmMessage;
struct _TDI_PROVIDER_STATISTICS;
struct _TDI_REQUEST_KERNEL_SEND;
struct _TRANSPORT_HEADER_OFFSET;
struct _URB_CONTROL_TRANSFER_EX;
struct _URB_OPEN_STATIC_STREAMS;
struct _USBD_DEVICE_INFORMATION;
struct _USBD_STREAM_INFORMATION;
struct _USB_ENDPOINT_DESCRIPTOR;
struct _VIDEO_CURSOR_ATTRIBUTES;
struct _VIDEO_PORT_AGP_SERVICES;
struct _VPCI_INTERFACE_STANDARD;
struct _VPD_IDENTIFICATION_PAGE;
union _WHEA_ERROR_PACKET_FLAGS;
struct _WHEA_IPF_CMC_DESCRIPTOR;
struct _WHEA_IPF_CPE_DESCRIPTOR;
struct _WHEA_IPF_MCA_DESCRIPTOR;
union _WHEA_NOTIFICATION_FLAGS;
union _WHEA_PCIEXPRESS_VERSION;
struct _WHEA_X64_REGISTER_STATE;
struct _WHEA_X86_REGISTER_STATE;
struct _WHEA_XPF_CMC_DESCRIPTOR;
struct _WHEA_XPF_MCE_DESCRIPTOR;
struct _WHEA_XPF_NMI_DESCRIPTOR;
struct _WSK_DATAGRAM_INDICATION;
struct _WWAN_AUTH_AKAP_RESPONSE;
struct _WWAN_AUTH_AKA_CHALLENGE;
struct _WWAN_AUTH_SIM_CHALLENGE;
struct _WWAN_REGISTRATION_STATE;
struct _WWAN_SERVICE_ACTIVATION;
struct _WWAN_SET_REGISTER_STATE;
struct _WmiEnumReceiveQueues_IN;
struct _WmiMonitorColorXYZinCIE;
struct _WmiSetLinkParameters_IN;
struct _WmiSetPortParameters_IN;
struct csimaadpcmwaveformat_tag;
struct digiadpcmmwaveformat_tag;
struct g721_adpcmwaveformat_tag;
struct g723_adpcmwaveformat_tag;
struct mpeglayer3waveformat_tag;
struct tagWNODE_EVENT_REFERENCE;
struct tagWNODE_SINGLE_INSTANCE;
struct truespeechwaveformat_tag;
struct DOT11_EXTSTA_ATTRIBUTES;
struct DOT11_EXTSTA_CAPABILITY;
struct DOT11_KEY_ALGO_TKIP_MIC;
struct DOT11_PRIVACY_EXEMPTION;
struct IAdapterPowerManagement;
struct IMiniportMidiStreamVtbl;
struct IMiniportWaveCyclicVtbl;
struct IPMultihopRouteEntry_V1;
struct IPMultihopRouteEntry_V2;
struct IPortClsSubdeviceExVtbl;
struct SMHBA_AdapterAttributes;
struct SMHBA_LibraryAttributes;
struct _ACPI_EVAL_INPUT_BUFFER;
struct _ATM_TRAFFIC_DESCRIPTOR;
struct _ATM_VC_RATES_SUPPORTED;
struct _AVC_SUBUNIT_INFO_BLOCK;
struct _BDA_TEMPLATE_PIN_JOINT;
struct _BDA_WMDRM_RENEWLICENSE;
struct _BDCB_IMAGE_INFORMATION;
struct _BRB_L2CA_CLOSE_CHANNEL;
struct _BUS_INTERFACE_STANDARD;
struct _CDB___PLAY_CD______LBA;
struct _CDB___PLAY_CD______MSF;
struct _CDB___SPACE_TAPE_MARKS;
struct _CDB___WRITE_TAPE_MARKS;
struct _CDROM_EXCLUSIVE_ACCESS;
struct _CDROM_TOC_CD_TEXT_DATA;
struct _CDROM_TOC_SESSION_DATA;
struct _CDVD_CAPABILITIES_PAGE;
struct _CHANGER_ELEMENT_STATUS;
struct _CHANNEL_CONFIG_RESULTS;
struct _CLASS_DRIVER_EXTENSION;
struct _CLASS_PRIVATE_FDO_DATA;
struct _CLASS_PRIVATE_PDO_DATA;
struct _CLFS_MGMT_NOTIFICATION;
struct _CLS_ARCHIVE_DESCRIPTOR;
struct _CM_MONITOR_DEVICE_DATA;
struct _COUNTED_REASON_CONTEXT;
struct _CO_SPECIFIC_PARAMETERS;
struct _CreateVirtualPortEx_IN;
struct _D3DDDI_ALLOCATIONINFO2;
struct _D3DKMDT_GDISURFACEDATA;
struct _DEVICE_TRIM_DESCRIPTOR;
struct _DISK_CACHE_INFORMATION;
struct _DISK_CONTROLLER_NUMBER;
struct _DOT11_EXTAP_ATTRIBUTES;
struct _DOT11_RECV_SENSITIVITY;
struct _DOT11_REG_DOMAIN_VALUE;
struct _DOT11_WFD_DEVICE_ENTRY;
struct _DXGKARG_COLLECTDBGINFO;
struct _DXGKARG_OPENALLOCATION;
struct _DXGKARG_PREEMPTCOMMAND;
struct _DXGK_CREATEDEVICEFLAGS;
struct _DXGK_DEVICE_DESCRIPTOR;
struct _DXGK_GDIARG_ALPHABLEND;
struct _DXGK_GDIARG_STRETCHBLT;
struct _DXGK_GPUENGINETOPOLOGY;
struct _DXGK_MONITOR_INTERFACE;
struct _DXGK_SEGMENTDESCRIPTOR;
struct _DXGK_SEGMENTPREFERENCE;
struct _DXGK_WIN32K_PARAM_DATA;
struct _EISA_DMA_CONFIGURATION;
struct _EISA_IRQ_CONFIGURATION;
struct _ENABLE_ERROR_SOURCE_IN;
struct _FILE_BASIC_INFORMATION;
struct _FILE_LAYOUT_INFO_ENTRY;
struct _FILE_LAYOUT_NAME_ENTRY;
struct _FILE_LEVEL_TRIM_OUTPUT;
struct _FILE_LINKS_INFORMATION;
struct _FILE_NAMES_INFORMATION;
struct _FILE_PIPE_EVENT_BUFFER;
struct _FILE_QUOTA_INFORMATION;
struct _FILE_SET_SPARSE_BUFFER;
struct _FLT_IO_PARAMETER_BLOCK;
struct _FSRTL_AUXILIARY_BUFFER;
struct _FSRTL_PER_FILE_CONTEXT;
struct _GENERAL_LOOKASIDE_POOL;
struct _GET_CHANGER_PARAMETERS;
struct _GET_LENGTH_INFORMATION;
struct _GP_LOG_PAGE_DESCRIPTOR;
struct _GetFcpTargetMapping_IN;
struct _HDAUDIO_CODEC_RESPONSE;
struct _HDAUDIO_CODEC_TRANSFER;
struct _HID_INTERFACE_HIDPARSE;
struct _HPET_DESCRIPTION_TABLE;
struct _HW_INITIALIZATION_DATA;
struct _IDE_MINIPORT_RESOURCES;
struct _IF_PHYSICAL_ADDRESS_LH;
struct _IMAGE_EXPORT_DIRECTORY;
struct _IMAGE_FUNCTION_ENTRY64;
struct _IO_RESOURCE_DESCRIPTOR;
struct _IRB_REQ_GET_CONFIG_ROM;
struct _ISCSI_DiscoveredTarget;
struct _ISCSI_Persistent_Login;
struct _ImageArchitectureEntry;
struct _KEY_CACHED_INFORMATION;
struct _KSM_BDA_EVENT_COMPLETE;
struct _KSM_BDA_GPNV_NAMEINDEX;
struct _LBA_FILTER_TABLE_ENTRY;
struct _LBA_STATUS_LIST_HEADER;
struct _LEGACY_BUS_INFORMATION;
struct _LLDP_PROVIDER_DISPATCH;
struct _LOCAL_X2APIC_NMISOURCE;
struct _MINIPORT_DUMP_POINTERS;
struct _MODE_CAPABILITIES_PAGE;
struct _MPEG2_TRANSPORT_STRIDE;
struct _MPIO_DISK_HEALTH_CLASS;
struct _MPIO_PASS_THROUGH_PATH;
struct _MPIO_PATH_HEALTH_CLASS;
struct _MRX_NORMAL_NODE_HEADER;
struct _MSFC_HBAPortStatistics;
struct _MSMCAEvent_MemoryError;
struct _MSMCAEvent_PCIBusError;
struct _MSMCAEvent_SMBIOSError;
struct _MSNdis_80211_DataRates;
struct _MSNdis_80211_PowerMode;
struct _MSNdis_80211_RemoveWEP;
struct _MSNdis_80211_WEPStatus;
struct _MSNdis_80211_WLanBssId;
struct _MSNdis_AtmMaxActiveVcs;
struct _MSNdis_CoDriverVersion;
struct _MSNdis_CoReceivePdusOk;
struct _MSNdis_FddiFrameErrors;
struct _MSNdis_FddiLctFailures;
struct _MSNdis_ReceiveNoBuffer;
struct _MSNdis_StatusLinkState;
struct _MSNdis_StatusPortState;
struct _MSNdis_WmiMethodHeader;
struct _MSSmBios_Sysid1394List;
struct _MSSmBios_SysidUUIDList;
struct _MSWmi_PnPInstanceNames;
struct _MSiSCSI_HBAInformation;
struct _MSiSCSI_NICPerformance;
struct _MSiSCSI_TargetMappings;
struct _NDIS_802_11_BSSID_LIST;
struct _NDIS_802_11_CAPABILITY;
struct _NDIS_802_11_REMOVE_KEY;
struct _NDIS_802_11_STATISTICS;
struct _NDIS_FILTER_ATTRIBUTES;
struct _NDIS_PACKET_8021Q_INFO;
struct _NDIS_PM_COUNTED_STRING;
struct _NDIS_PM_PACKET_PATTERN;
struct _NDIS_PROCESSOR_INFO_EX;
struct _NDIS_STATUS_INDICATION;
struct _NDIS_TAPI_DEV_SPECIFIC;
struct _NDIS_TAPI_GET_DEV_CAPS;
struct _NDIS_WAN_COMPRESS_INFO;
struct _NDIS_WAN_GET_COMP_INFO;
struct _NDIS_WAN_GET_LINK_INFO;
struct _NDIS_WAN_PROTOCOL_CAPS;
struct _NDIS_WAN_SET_COMP_INFO;
struct _NDIS_WAN_SET_LINK_INFO;
struct _NDIS_WMI_METHOD_HEADER;
struct _NDIS_WWAN_SIGNAL_STATE;
struct _NDIS_WWAN_USSD_REQUEST;
struct _NDK_CONNECTOR_DISPATCH;
union _NET_BUFFER_DATA_LENGTH;
union _NET_BUFFER_LIST_HEADER;
struct _NLB_PUBLIC_IOCTL_INPUT;
struct _NUMA_NODE_RELATIONSHIP;
struct _NV_SEP_CACHE_PARAMETER;
struct _OPLOCK_KEY_ECP_CONTEXT;
struct _PCIX_BRIDGE_CAPABILITY;
struct _PCI_EXPRESS_CAPABILITY;
union _PCI_EXPRESS_SRIOV_CAPS;
struct _PCW_COUNTER_DESCRIPTOR;
struct _PERFORMANCE_DESCRIPTOR;
struct _PLEX_READ_DATA_REQUEST;
struct _PNP_LOCATION_INTERFACE;
struct _PNP_REPLACE_PARAMETERS;
struct _POWER_SESSION_TIMEOUTS;
struct _POWER_SESSION_WINLOGON;
struct _PO_WAKE_SOURCE_HISTORY;
struct _PROCESSOR_POWER_POLICY;
struct _PROCESSOR_RELATIONSHIP;
struct _PROCESS_EXCEPTION_PORT;
struct _RETRIEVAL_POINTER_BASE;
struct _RKF_BYPASS_ECP_CONTEXT;
struct _RTL_DYNAMIC_HASH_TABLE;
struct _RX_DISPATCHER_CONTEXT_;
struct _RX_FCBTRACKER_CALLINFO;
struct _RX_TOPLEVELIRP_CONTEXT;
struct _RX_WORK_DISPATCH_ITEM_;
struct _RemoveRADIUSServer_OUT;
struct _RemoveVirtualPortEx_IN;
struct _SCATTER_GATHER_ELEMENT;
struct _SCSI_PNP_REQUEST_BLOCK;
struct _SCSI_WMI_REQUEST_BLOCK;
struct _SD_GLOBAL_CHANGE_INPUT;
struct _SEND_RECEIVE_HOOK_INFO;
struct _SES_CONTROL_DESCRIPTOR;
struct _SE_ADT_PARAMETER_ARRAY;
struct _SE_IMPERSONATION_STATE;
struct _SE_SECURITY_DESCRIPTOR;
struct _SLOT_TABLE_INFORMATION;
struct _STORAGE_PROPERTY_QUERY;
struct _STORAGE_TRACE_DPS_INFO;
struct _STOR_INIT_TRACING_ARGS;
struct _STOR_LOG_EVENT_DETAILS;
struct _SUB_Q_CURRENT_POSITION;
struct _SecPkgContext_CredInfo;
struct _SecPkgContext_KeyInfoW;
struct _SecPkgContext_Lifespan;
struct _SecPkgContext_NegoKeys;
struct _SecPkgCredentials_Cert;
struct _SetCHAPSharedSecret_IN;
struct _SetGenerationalGuid_IN;
struct _SetPersistentEntry_OUT;
struct _TA_ADDRESS_IP___AddrIp;
struct _TA_ADDRESS_NS___AddrNs;
struct _TDI_ADDRESS_NETBIOS_EX;
struct _TDI_DISCONNECT_REQUEST;
struct _TOKEN_MANDATORY_POLICY;
struct _TRANSACTION_LIST_ENTRY;
struct _TXFS_LIST_TRANSACTIONS;
struct _UNMAP_BLOCK_DESCRIPTOR;
struct _USB_IDLE_CALLBACK_INFO;
struct _USB_PIPE_INFORMATION_0;
struct _VIDEO_MODE_INFORMATION;
struct _VIDEO_POINTER_POSITION;
struct _VIDEO_PORT_CONFIG_INFO;
struct _VIDEO_POWER_MANAGEMENT;
struct _VIDEO_WIN32K_CALLBACKS;
struct _VPCI_WRITE_BLOCK_INPUT;
struct _VPD_SERIAL_NUMBER_PAGE;
struct _VP_SCATTER_GATHER_LIST;
struct _WHEA_NMI_ERROR_SECTION;
struct _WMI_CHANGER_PARAMETERS;
struct _WMI_TAPE_SYMBOLIC_NAME;
struct _WRITE_USN_REASON_INPUT;
struct _WSA_COMPATIBILITY_MODE;
struct _WWAN_AUTH_AKA_RESPONSE;
struct _WWAN_AUTH_SIM_RESPONSE;
struct _WWAN_SET_CONTEXT_STATE;
struct _WWAN_SMS_CONFIGURATION;
struct _WmiSetALSBrightness_IN;
struct _pipe_config_descriptor;
struct _tagKSJACK_DESCRIPTION2;
struct dvi_adpcmwaveformat_tag;
struct ima_adpcmwaveformat_tag;
struct tagKS_DATAFORMAT_DV_AVC;
struct tagKS_DATARANGE_DVVIDEO;
struct tagVIDEO_MONITOR_DEVICE;
struct DOT11_AUTH_CIPHER_PAIR;
struct DOT11_MAC_ADDRESS_LIST;
struct DOT11_VWIFI_ATTRIBUTES;
struct HBA_FCPTargetMappingV2;
struct IIndirectedUnknownVtbl;
struct IMiniportWavePciStream;
struct IPRouteNextHopEntry_V1;
struct IPRouteNextHopEntry_V2;
struct IPortWavePciStreamVtbl;
struct NDIS_CO_DEVICE_PROFILE;
struct SMHBA_SASPhyStatistics;
struct USBD_FUNCTION_HANDLE__;
struct _ARBITER_CONFLICT_INFO;
struct _AUX_MODULE_BASIC_INFO;
struct _AVCSTRM_BUFFER_STRUCT;
struct _AVC_SUBUNIT_ADDR_SPEC;
struct _BASEBAND_CHANNEL_INFO;
struct _BDA_IPv4_ADDRESS_LIST;
struct _BDA_IPv6_ADDRESS_LIST;
struct _BDA_TUNER_DIAGNOSTICS;
struct _BDA_WMDRM_KEYINFOLIST;
struct _BRB_GET_LOCAL_BD_ADDR;
struct _BRB_L2CA_ACL_TRANSFER;
struct _BRB_L2CA_OPEN_CHANNEL;
struct _BRB_SCO_CLOSE_CHANNEL;
struct _BRB_SCO_FLUSH_CHANNEL;
struct _BUS_INFO_CAPABILITIES;
struct _CDB___EXCHANGE_MEDIUM;
struct _CDB___GET_PERFORMANCE;
struct _CDB___PLXTR_READ_CDDA;
struct _CDB___READ_CAPACITY16;
struct _CDB___SEND_VOLUME_TAG;
struct _CDB___TOKEN_OPERATION;
struct _CDROM_SIMPLE_OPC_INFO;
struct _CDVD_FEATURE_SET_PAGE;
struct _CDVD_REPORT_AGID_DATA;
struct _CDVD_TITLE_KEY_HEADER;
struct _CLOCK_RATE_CONVERSION;
struct _CM_FLOPPY_DEVICE_DATA;
struct _CM_PCCARD_DEVICE_DATA;
struct _CM_SERIAL_DEVICE_DATA;
struct _CO_TAPI_TRANSLATE_SAP;
struct _CSV_IS_OWNED_BY_CSVFS;
struct _CreateVirtualPort_OUT;
struct _D3DDDI_ALLOCATIONINFO;
struct _D3DDDI_ALLOCATIONLIST;
struct _D3DDDI_RESOURCEFLAGS2;
struct _DESCRIPTOR_SENSE_DATA;
struct _DEVICE_DATA_SET_RANGE;
struct _DISK_PERFORMANCE_INFO;
struct _DOT11_AP_JOIN_REQUEST;
struct _DOT11_BSS_DESCRIPTION;
struct _DOT11_PEER_STATISTICS;
struct _DOT11_POWER_MGMT_MODE;
struct _DOT11_QOS_TX_DURATION;
struct _DOT11_SCAN_REQUEST_V2;
struct _DOT11_WFD_DEVICE_INFO;
struct _DOT11_WFD_DEVICE_TYPE;
struct _DOT11_WPS_DEVICE_NAME;
struct _DUMP_POINTERS_VERSION;
struct _DXGKARG_CANCELCOMMAND;
struct _DXGKARG_CREATECONTEXT;
struct _DXGKARG_CREATEOVERLAY;
struct _DXGKARG_SUBMITCOMMAND;
struct _DXGKARG_UPDATEOVERLAY;
struct _DXGKMDT_OPM_OUTPUT_ID;
struct _DXGK_BRIGHTNESS_STATE;
struct _DXGK_CHILD_DESCRIPTOR;
struct _DXGK_GDIARG_COLORFILL;
struct _DXGK_MAPAPERTUREFLAGS;
struct _DXGK_PRESENTATIONCAPS;
struct _DXGK_QUERYSEGMENTOUT2;
struct _DXGK_QUERYSEGMENTOUT3;
struct _DXGK_RENDERKM_COMMAND;
struct _ELEMENT_STATUS_HEADER;
struct _EMULATOR_ACCESS_ENTRY;
struct _EVENT_DATA_DESCRIPTOR;
struct _EXECUTE_SELF_TEST_OUT;
struct _FILESYSTEM_STATISTICS;
struct _FILE_LEVEL_TRIM_RANGE;
struct _FILE_LINK_INFORMATION;
struct _FILE_MODE_INFORMATION;
struct _FILE_NAME_INFORMATION;
struct _FILE_OBJECT_EXTENSION;
struct _FILE_PIPE_INFORMATION;
struct _FILE_PIPE_PEEK_BUFFER;
struct _FILTER_MESSAGE_HEADER;
struct _FLT_VOLUME_PROPERTIES;
struct _GENERATE_NAME_CONTEXT;
struct _GET_FP_CAPABILITY_OUT;
struct _GET_SINGLE_POLICY_OUT;
struct _GET_UNIT_CAPABILITIES;
struct _GetBindingSupport_OUT;
struct _HAL_POWER_INFORMATION;
struct _HAL_PROCESSOR_FEATURE;
struct _HDAUDIO_BUS_INTERFACE;
struct _HDAUDIO_CODEC_COMMAND;
struct _HDAUDIO_STREAM_FORMAT;
struct _HID_DEVICE_ATTRIBUTES;
struct _HW_STREAM_INFORMATION;
struct _ICMPV4_ROUTER_SOLICIT;
struct _IDE_CHANNEL_INTERFACE;
struct _IDE_DEVICE_PARAMETERS;
struct _IGMPV3_REPORT_HEADER_;
struct _IMAGE_BASE_RELOCATION;
struct _IMAGE_DEBUG_DIRECTORY;
struct _IMAGE_OPTIONAL_HEADER;
struct _IMAGE_TLS_DIRECTORY32;
struct _IMAGE_TLS_DIRECTORY64;
struct _INDICATION_PARAMETERS;
struct _INITIAL_PRIVILEGE_SET;
struct _IO_COMPLETION_CONTEXT;
struct _IPV4_TIMESTAMP_OPTION;
struct _IPV6_EXTENSION_HEADER;
struct _IPV6_OPTION_JUMBOGRAM;
struct _IdleStateAccountingEx;
struct _KCRM_TRANSACTION_BLOB;
struct _KEY_BASIC_INFORMATION;
struct _KEY_TRUST_INFORMATION;
struct _KSM_BDA_GPNV_GETVALUE;
struct _KSM_BDA_GPNV_SETVALUE;
struct _KernelIdleStateChange;
struct _KernelPerfStateChange;
struct _LBA_STATUS_DESCRIPTOR;
struct _MEMORY_COOLING_REGION;
struct _MODE_MEDIUM_PART_PAGE;
struct _MODE_PARAMETER_HEADER;
struct _MOUNTMGR_MOUNT_POINTS;
struct _MOUNTMGR_VOLUME_PATHS;
struct _MPIO_DISK_HEALTH_INFO;
struct _MPIO_PATH_HEALTH_INFO;
struct _MPIO_PATH_INFORMATION;
struct _MRX_CALLDOWN_CONTEXT_;
struct _MSFC_NPIVCapabilities;
struct _MSMCAInfo_RawCMCEvent;
struct _MSMCAInfo_RawMCAEvent;
struct _MSNdis_80211_BSSIList;
struct _MSNdis_FddiFramesLost;
struct _MSNdis_FddiLemRejects;
struct _MSNdis_HardwareStatus;
struct _MSNdis_LinkParameters;
struct _MSNdis_MediaSupported;
struct _MSNdis_NetworkAddress;
struct _MSNdis_PMCapabilities;
struct _MSNdis_StatisticsInfo;
struct _MSNdis_TransmitsError;
struct _MSNdis_VlanIdentifier;
struct _MSNdis_WmiEnumAdapter;
struct _MSV1_0_NTLM3_RESPONSE;
struct _MSVerifierIrpLogEntry;
struct _MSiSCSI_QueryLBPolicy;
struct _NDIS_802_11_FIXED_IEs;
struct _NDIS_FILTER_INTERFACE;
struct _NDIS_IPSEC_OFFLOAD_V1;
struct _NDIS_IPSEC_OFFLOAD_V2;
struct _NDIS_IRDA_PACKET_INFO;
struct _NDIS_PNP_CAPABILITIES;
union _NDIS_RW_LOCK_REFCOUNT;
struct _NDIS_STATISTICS_VALUE;
struct _NDIS_TAPI_SECURE_CALL;
struct _NDIS_WMI_ENUM_ADAPTER;
struct _NDIS_WMI_EVENT_HEADER;
struct _NDIS_WWAN_DEVICE_CAPS;
struct _NDIS_WWAN_DRIVER_CAPS;
struct _NDIS_WWAN_RADIO_STATE;
struct _NDIS_WWAN_SMS_RECEIVE;
struct _NDK_LISTENER_DISPATCH;
struct _NET_IF_RCV_ADDRESS_LH;
struct _NL_PATH_BANDWIDTH_ROD;
struct _NODE_DEVICE_EXTENSION;
struct _NOTIFICATION_INFO_W2K;
struct _NOTIFICATION_INFO_WXP;
struct _NPAGED_LOOKASIDE_LIST;
struct _NVCACHE_REQUEST_BLOCK;
struct _PARALLEL_1284_COMMAND;
struct _PARALLEL_PARCHIP_INFO;
struct _PARALLEL_WMI_LOG_INFO;
struct _PARTITION_INFORMATION;
struct _PAR_QUERY_INFORMATION;
struct _PCI_AGP_ISOCH_COMMAND;
struct _PCI_FIRMWARE_BUS_CAPS;
struct _PCMCIA_SOCKET_REQUEST;
struct _PHYSICAL_MEMORY_RANGE;
struct _POWER_IDLE_RESILIENCY;
struct _POWER_SESSION_CONNECT;
struct _PO_WAKE_SOURCE_DEVICE;
struct _PO_WAKE_SOURCE_HEADER;
struct _PREVENT_MEDIA_REMOVAL;
struct _PROCESSOR_IDLE_STATES;
struct _PS_CREATE_NOTIFY_INFO;
struct _QUERY_PATH_REQUEST_EX;
struct _READ_AHEAD_PARAMETERS;
struct _READ_CAPACITY_DATA_EX;
struct _REDBOOK_WMI_PERF_DATA;
struct _ROOTHUB_PDO_EXTENSION;
struct _RX_BUFFERING_MANAGER_;
struct _RemoveRADIUSServer_IN;
struct _RemoveVirtualPort_OUT;
struct _RescanVirtualPort_OUT;
struct _SCSI_ADAPTER_BUS_INFO;
struct _SCSI_EXTENDED_MESSAGE;
struct _SD_QUERY_STATS_OUTPUT;
struct _SD_RW_DIRECT_ARGUMENT;
struct _SES_STATUS_DESCRIPTOR;
struct _SET_LOCAL_HOST_PROPS1;
struct _SET_LOCAL_HOST_PROPS2;
struct _SET_LOCAL_HOST_PROPS3;
struct _SET_LOCAL_HOST_PROPS4;
struct _SET_LOCAL_HOST_PROPS5;
struct _SET_SINGLE_POLICY_OUT;
struct _SMB_TRANSACT_MAILSLOT;
struct _SRBEX_DATA_SCSI_CDB16;
struct _SRBEX_DATA_SCSI_CDB32;
struct _STORAGE_DEVICE_NUMBER;
struct _STORAGE_OFFLOAD_TOKEN;
struct _STORAGE_READ_CAPACITY;
struct _STORAGE_REQUEST_BLOCK;
struct _STREAM_TIME_REFERENCE;
struct _SecPkgContext_DceInfo;
struct _SetBindingSupport_OUT;
struct _SetPersistentEntry_IN;
struct _TAPE_CREATE_PARTITION;
struct _TA_ADDRESS_NETBIOS_EX;
struct _TCG_DESCRIPTION_TABLE;
struct _TDI_ADDRESS_APPLETALK;
struct _TDI_ADDRESS_IP6_WIN2K;
struct _TDI_MAX_DATAGRAM_INFO;
struct _TDI_NCPA_BINDING_INFO;
struct _TDI_PNP_CONTEXT_WIN2K;
struct _TDI_REQUEST_ASSOCIATE;
struct _TDI_REQUEST_SET_EVENT;
struct _TDI_ROUTING_INFO_WS03;
struct _TOKEN_MANDATORY_LABEL;
struct _USBD_PIPE_INFORMATION;
struct _USB_30_HUB_DESCRIPTOR;
struct _USB_COMMON_DESCRIPTOR;
struct _USB_DEVICE_DESCRIPTOR;
struct _USB_LEVEL_INFORMATION;
struct _USB_STRING_DESCRIPTOR;
struct _VIDEO_CHILD_ENUM_INFO;
struct _VIDEO_CURSOR_POSITION;
struct _VIDEO_LUT_RGB256WORDS;
struct _VPCI_READ_BLOCK_INPUT;
struct _VPD_BLOCK_LIMITS_PAGE;
struct _VP_DEVICE_DESCRIPTION;
struct _WAE_DESCRIPTION_TABLE;
union _WHEA_PERSISTENCE_INFO;
struct _WHEA_XPF_CONTEXT_INFO;
struct _WRITE_LOG_SECTORS_OUT;
struct _WSK_PROVIDER_DISPATCH;
struct _WmiEnumeratePorts_OUT;
struct _WmiQueryLinkState_OUT;
struct _WmiQueryPortState_OUT;
struct _XXCTL_LOWIO_COMPONENT;
struct digirealwaveformat_tag;
struct dolbyac2waveformat_tag;
struct msaudio1waveformat_tag;
struct oliadpcmwaveformat_tag;
struct tagKS_BITMAPINFOHEADER;
struct tagKS_DATARANGE_DV_AVC;
struct tagKS_DATARANGE_VIDEO2;
struct tagKS_VIDEOINFOHEADER2;
struct tagTRANSPORTAUDIOPARMS;
struct tagTRANSPORTBASICPARMS;
struct tagTRANSPORTVIDEOPARMS;
struct tcp_opt_sack_permitted;
struct threadlocaleinfostruct;
struct wmaudio2waveformat_tag;
struct wmaudio3waveformat_tag;
struct ANON_OBJECT_HEADER_V2;
struct DL_TEREDO_ADDRESS_PRV;
struct DOT11_BSSID_CANDIDATE;
struct DOT11_OFFLOAD_NETWORK;
struct HBA_AdapterAttributes;
struct HBA_LibraryAttributes;
struct IMiniportTopologyVtbl;
struct IMiniportWaveRTStream;
struct IPortClsEtwHelperVtbl;
struct IPortWaveRTStreamVtbl;
struct KSM_BDA_WMDRM_LICENSE;
struct SDP_ULARGE_INTEGER_16;
struct _ACPI_METHOD_ARGUMENT;
struct _ATM_MEDIA_PARAMETERS;
struct _BANDWIDTH_ALLOCATION;
struct _BDA_CAS_CLOSEMMIDATA;
struct _BDA_ETHERNET_ADDRESS;
struct _BDA_PROGRAM_PID_LIST;
struct _BDA_SCAN_CAPABILTIES;
struct _BDA_TUNER_TUNERSTATE;
struct _BM_REQUEST_TYPE___BM;
struct _BOOTDISK_INFORMATION;
struct _BRB_SCO_OPEN_CHANNEL;
struct _BTH_L2CAP_EVENT_INFO;
struct _BUS_INTERFACE_SWENUM;
struct _CDAUDIO_CONTROL_PAGE;
struct _CDB32___CDB32GENERIC;
struct _CDB___GET_LBA_STATUS;
struct _CDB___PLAY_AUDIO_MSF;
struct _CDB___SEND_CUE_SHEET;
struct _CDB___SET_READ_AHEAD;
struct _CDB___STOP_PLAY_SCAN;
struct _CDROM_EXCLUSIVE_LOCK;
struct _CDROM_PLAY_AUDIO_MSF;
struct _CDROM_SEEK_AUDIO_MSF;
struct _CDVD_REPORT_ASF_DATA;
struct _CHANGER_ELEMENT_LIST;
struct _CHANGER_PRODUCT_DATA;
struct _CHANGER_SET_POSITION;
struct _CIP_DATA_FORMAT_VER2;
struct _CIP_DATA_FORMAT_VER3;
struct _CM_SONIC_DEVICE_DATA;
struct _CM_VIDEO_DEVICE_DATA;
struct _COMPRESSED_DATA_INFO;
struct _CO_TAPI_ADDRESS_CAPS;
struct _CreateVirtualPort_IN;
struct _D3DDDICB_SIGNALFLAGS;
struct _D3DDDI_RESOURCEFLAGS;
struct _D3DKMT_WDDM_1_2_CAPS;
struct _DMA_TRANSFER_INFO_V1;
struct _DOT11_COUNTERS_ENTRY;
struct _DOT11_MAC_PARAMETERS;
struct _DOT11_PEER_INFO_LIST;
struct _DOT11_WFD_ATTRIBUTES;
struct _DOT4_DC_DESTROY_DATA;
struct _DSM_QueryLBPolicy_V2;
struct _DXGKARG_CREATEDEVICE;
struct _DXGKARG_SUBMITRENDER;
struct _DXGK_ALLOCATIONINFO2;
struct _DXGK_BRIGHTNESS_CAPS;
struct _DXGK_DEVICEINFOFLAGS;
struct _DXGK_QUERYSEGMENTOUT;
struct _DXGK_TIMED_OPERATION;
struct _DXGK_VIDPN_INTERFACE;
struct _EISA_PORT_DESCRIPTOR;
struct _ENABLE_DISABLE_FP_IN;
struct _ENTROPY_SOURCE_STATE;
struct _EXECUTE_SELF_TEST_IN;
struct _FILE_ALL_INFORMATION;
struct _FILE_OBJECTID_BUFFER;
struct _FILE_REFERENCE_RANGE;
union _FILE_SEGMENT_ELEMENT;
struct _FLT_RELATED_CONTEXTS;
struct _FORMAT_EX_PARAMETERS;
union _FS_FILTER_PARAMETERS;
struct _GEN_GET_NETCARD_TIME;
struct _GET_LOCAL_HOST_INFO1;
struct _GET_LOCAL_HOST_INFO2;
struct _GET_LOCAL_HOST_INFO3;
struct _GET_LOCAL_HOST_INFO4;
struct _GET_LOCAL_HOST_INFO5;
struct _GET_LOCAL_HOST_INFO6;
struct _GET_LOCAL_HOST_INFO8;
struct _GET_SINGLE_POLICY_IN;
struct _GetBindingSupport_IN;
struct _GetFC4Statistics_OUT;
struct _GetFCPStatistics_OUT;
struct _HIDP_COLLECTION_DESC;
struct _HID_DEVICE_EXTENSION;
struct _HW_STREAM_DESCRIPTOR;
struct _IDENTIFY_DEVICE_DATA;
struct _IDENTIFY_PACKET_DATA;
struct _IF_COUNTED_STRING_LH;
struct _IMAGE_DATA_DIRECTORY;
struct _IMAGE_FUNCTION_ENTRY;
struct _IMAGE_IMPORT_BY_NAME;
struct _IMAGE_SECTION_HEADER;
struct _INT10_BIOS_ARGUMENTS;
struct _IO_ERROR_LOG_MESSAGE;
struct _IO_SCSI_CAPABILITIES;
struct _IPV6_FRAGMENT_HEADER;
struct _IRB_REQ_ASYNC_STREAM;
struct _IRB_REQ_ISOCH_LISTEN;
struct _KEY_FULL_INFORMATION;
struct _KEY_NAME_INFORMATION;
struct _KEY_NODE_INFORMATION;
struct _KSALLOCATOR_DISPATCH;
struct _LLDP_CLIENT_DISPATCH;
struct _LOG_PARAMETER_HEADER;
struct _LogoutFromTarget_OUT;
struct _MODE_DISCONNECT_PAGE;
struct _MODE_INFO_EXCEPTIONS;
struct _MODE_PARAMETER_BLOCK;
struct _MODE_PARM_READ_WRITE;
struct _MOUNTDEV_STABLE_GUID;
struct _MOUNTMGR_MOUNT_POINT;
struct _MOUNTMGR_TARGET_NAME;
struct _MPIO_CONTROLLER_INFO;
struct _MPIO_TIMERS_COUNTERS;
struct _MSIde_PortDeviceInfo;
struct _MSMCAInfo_RawMCAData;
struct _MSNdis_CountedString;
struct _MSNdis_DriverVersion;
struct _MSNdis_GroupAffinity;
struct _MSNdis_LinkStateData;
struct _MSNdis_PMAdminConfig;
struct _MSNdis_PortStateData;
struct _MSNdis_WmiOutputInfo;
struct _MSPower_DeviceEnable;
struct _MSV1_0_SUBAUTH_LOGON;
struct _MSiSCSI_AdapterEvent;
struct _MSiSCSI_MMIPSECStats;
struct _MSiSCSI_QMIPSECStats;
struct _MSiSCSI_RADIUSConfig;
struct _NDIS_802_11_AI_REQFI;
struct _NDIS_802_11_AI_RESFI;
struct _NDIS_BIND_PARAMETERS;
struct _NDIS_DMA_DESCRIPTION;
struct _NDIS_HYPERVISOR_INFO;
struct _NDIS_LINK_PARAMETERS;
struct _NDIS_OPEN_PARAMETERS;
struct _NDIS_PM_CAPABILITIES;
struct _NDIS_STATISTICS_INFO;
struct _NDIS_TAPI_CLOSE_CALL;
struct _NDIS_WAN_CO_FRAGMENT;
struct _NDIS_WWAN_READY_INFO;
struct _NDIS_WWAN_SET_PIN_EX;
struct _NDIS_WWAN_SMS_DELETE;
struct _NDIS_WWAN_SMS_STATUS;
struct _NDIS_WWAN_USSD_EVENT;
struct _NDK_ADAPTER_DISPATCH;
struct _NETWORK_ADDRESS_LIST;
struct _NET_BUFFER_LIST_DATA;
struct _NET_DEVICE_PNP_EVENT;
struct _NFS_OPEN_ECP_CONTEXT;
struct _NON_PAGED_DEBUG_INFO;
struct _NT_CREATE_PARAMETERS;
struct _NVCACHE_HINT_PAYLOAD;
struct _NV_FEATURE_PARAMETER;
struct _OFFLOAD_IPSEC_ADD_SA;
struct _PAGED_LOOKASIDE_LIST;
struct _PARCLASS_INFORMATION;
struct _PCC_GENERIC_SUBSPACE;
struct _PCI_AGP_ISOCH_STATUS;
struct _PCI_PMC___PM_SUPPORT;
struct _PCW_MASK_INFORMATION;
struct _PIDListSpanningEvent;
struct _PMI_MEASUREMENT_DATA;
struct _POWER_CONDITION_PAGE;
struct _PO_WAKE_SOURCE_FIXED;
struct _PO_WAKE_SOURCE_TIMER;
struct _PROCESSOR_GROUP_INFO;
struct _PROCESSOR_IDLE_STATE;
struct _PROCESS_ACCESS_TOKEN;
struct _ProcessorPerformance;
struct _READ_CAPACITY16_DATA;
struct _READ_LOG_SECTORS_OUT;
struct _REDBOOK_WMI_STD_DATA;
struct _REPAIR_COPIES_OUTPUT;
struct _RSS_SCALABILITY_INFO;
struct _RemoveVirtualPort_IN;
struct _RemoveiSNSServer_OUT;
struct _RescanVirtualPort_IN;
struct _SCSI_PASS_THROUGH_EX;
struct _SDBUS_REQUEST_PACKET;
struct _SD_QUERY_STATS_INPUT;
struct _SEC_CHANNEL_BINDINGS;
struct _SEC_NEGOTIATION_INFO;
struct _SERIAL_WMI_COMM_DATA;
struct _SERIAL_WMI_PERF_DATA;
struct _SET_CMP_ADDRESS_TYPE;
struct _SET_SINGLE_POLICY_IN;
struct _SE_ADT_ACCESS_REASON;
struct _SRV_OPEN_ECP_CONTEXT;
struct _STORAGE_HOTPLUG_INFO;
struct _STOR_DEBUGPRINT_ARGS;
struct _STOR_UC_DEVICE_USAGE;
struct _STOR_UNIT_ATTRIBUTES;
struct _SYSENV_VARIABLE_INFO;
struct _ScsiReadCapacity_OUT;
struct _SecPkgContext_NamesW;
struct _SetBindingSupport_IN;
struct _TDI_ADDRESS_OSI_TSAP;
struct _TRANSLATOR_INTERFACE;
struct _UNICODE_PREFIX_TABLE;
struct _URB_CONTROL_TRANSFER;
struct _URB_GET_FRAME_LENGTH;
struct _URB_SELECT_INTERFACE;
struct _URB_SET_FRAME_LENGTH;
struct _USBCAMD_DEVICE_DATA2;
union _USB_INTERFACE_STATUS;
struct _USB_TOPOLOGY_ADDRESS;
struct _VIDEO_COLOR_LUT_DATA;
struct _VIDEO_HARDWARE_STATE;
struct _VIDEO_REQUEST_PACKET;
struct _VIRTUAL_STORAGE_TYPE;
struct _WAN_CO_MTULINKPARAMS;
struct _WHEA_ERROR_PACKET_V1;
struct _WHEA_ERROR_PACKET_V2;
union _WHEA_PCIXBUS_COMMAND;
struct _WHEA_PCI_SLOT_NUMBER;
union _WHEA_XPF_CACHE_CHECK;
struct _WHEA_XPF_MCA_SECTION;
struct _WMI_DISK_PERFORMANCE;
struct _WRITE_LOG_SECTORS_IN;
struct _WWAN_SMS_CDMA_RECORD;
struct _WWAN_VENDOR_SPECIFIC;
struct _WmiEnumeratePorts_IN;
struct _WmiMonitorBrightness;
struct _WmiQueryLinkState_IN;
struct _WmiQueryPortState_IN;
struct _XSTATE_CONFIGURATION;
struct digifixwaveformat_tag;
struct digistdwaveformat_tag;
struct echosc1waveformat_tag;
struct olicelpwaveformat_tag;
struct tagBDA_TRANSPORT_INFO;
struct tagKS_AnalogVideoInfo;
struct tagKS_DATARANGE_IMAGE;
struct tagKS_DATARANGE_VIDEO;
struct tagKS_VIDEOINFOHEADER;
struct wavefilter_volume_tag;
struct DOT11_PHY_ATTRIBUTES;
struct HBA_FCPBindingEntry2;
struct HBA_FCPTargetMapping;
struct IMPORT_OBJECT_HEADER;
struct IMiniportAudioEngine;
struct IMiniportWavePciVtbl;
struct IMusicTechnologyVtbl;
union INTEL_CACHE_INFO_EAX;
union INTEL_CACHE_INFO_EBX;
struct INonDelegatedUnknown;
struct IPortClsRuntimePower;
struct IPortWMIRegistration;
struct IUnregisterSubdevice;
struct NDIS_WMI_OUTPUT_INFO;
struct NLBTCPAddressInfo_v1;
struct NLBTCPAddressInfo_v2;
struct NLBTCPConnectionInfo;
struct SDP_LARGE_INTEGER_16;
struct SMHBA_PortAttributes;
struct TRANSPORT_SETTING_ID;
struct _API_SET_VALUE_ARRAY;
struct _API_SET_VALUE_ENTRY;
struct _ATA_PASS_THROUGH_EX;
struct _ATM_FLOW_PARAMETERS;
struct _AVCSTRM_FORMAT_INFO;
struct _AVCSTRM_OPEN_STRUCT;
struct _AVC_EXT_PLUG_COUNTS;
struct _AVC_PEER_DO_LOCATOR;
struct _AVC_PRECONNECT_INFO;
struct _AVC_SETCONNECT_INFO;
struct _AddRADIUSServer_OUT;
struct _BDA_CAS_OPENMMIDATA;
struct _BDA_DISEQC_RESPONSE;
struct _BDA_FILTER_TEMPLATE;
struct _BDA_ISDBCAS_EMG_REQ;
struct _BDA_MUX_PIDLISTITEM;
struct _BDA_RATING_PINRESET;
struct _BDA_SIGNAL_TIMEOUTS;
struct _BDA_TS_SELECTORINFO;
struct _BIT_RATE_ADJUSTMENT;
struct _BTH_ENUMERATOR_INFO;
struct _BUS_GENERATION_NODE;
struct _CDB___CDB6READWRITE;
struct _CDB___MEDIA_REMOVAL;
struct _CDB___MODE_SELECT10;
struct _CDB___NEC_READ_CDDA;
struct _CDB___READ_POSITION;
struct _CDB___SET_STREAMING;
struct _CDROM_SET_STREAMING;
struct _CDROM_TOC_ATIP_DATA;
struct _CHANGER_MOVE_MEDIUM;
struct _CLASS_POWER_CONTEXT;
struct _CLASS_POWER_OPTIONS;
struct _CMP_GET_PLUG_HANDLE;
struct _CM_SCSI_DEVICE_DATA;
struct _CO_MEDIA_PARAMETERS;
struct _D3DKMDT_PALETTEDATA;
struct _DEBUG_PORT_TABLE_V2;
struct _DEVICE_CAPABILITIES;
struct _DEVICE_SET_PASSWORD;
struct _DISK_DETECTION_INFO;
struct _DISK_GROW_PARTITION;
struct _DISK_PARTITION_INFO;
struct _DMA_ADAPTER_INFO_V1;
struct _DOT11_ADDITIONAL_IE;
struct _DOT11_PHY_TYPE_INFO;
struct _DOT11_RESET_REQUEST;
struct _DOT11_START_REQUEST;
struct _DOT11_WFD_GO_INTENT;
struct _DOT11_WME_UPDATE_IE;
struct _DOT4_DC_CREATE_DATA;
struct _DSM_COMPLETION_INFO;
struct _DSM_DEREGISTER_DATA;
struct _DXGKARG_COMMITVIDPN;
struct _DXGKARG_FLIPOVERLAY;
struct _DXGKARG_GETSCANLINE;
struct _DXGKARG_RESETENGINE;
struct _DXGKARG_STOPCAPTURE;
struct _DXGK_ALLOCATIONINFO;
struct _DXGK_ALLOCATIONLIST;
struct _DXGK_BACKLIGHT_INFO;
struct _DXGK_QUERYSEGMENTIN;
struct _DXGK_TRANSFERFLAGS2;
struct _EISA_IRQ_DESCRIPTOR;
struct _ELEMENT_STATUS_PAGE;
struct _ENCRYPTED_DATA_INFO;
struct _EVENT_FILTER_HEADER;
struct _FILE_EA_INFORMATION;
struct _FILE_ID_INFORMATION;
struct _FILTER_REPLY_HEADER;
struct _FLT_RELATED_OBJECTS;
struct _FLT_TAG_DATA_BUFFER;
struct _FS_FILTER_CALLBACKS;
struct _GET_DISK_ATTRIBUTES;
struct _GetFC4Statistics_IN;
struct _GetFCPStatistics_IN;
struct _HAL_BUS_INFORMATION;
struct _HBAFCPBindingEntry2;
struct _HIDP_GETCOLDESC_DBG;
struct _HW_EVENT_DESCRIPTOR;
struct _IDE_ERROR_LOG_ENTRY;
struct _IGMPV3_QUERY_HEADER;
union _IMAGE_AUX_SYMBOL_EX;
struct _IO_ERROR_LOG_PACKET;
struct _IO_SECURITY_CONTEXT;
struct _IPV4_ROUTING_HEADER;
struct _IPV6_ROUTING_HEADER;
struct _IRB_REQ_ASYNC_WRITE;
struct _ISCSI_TargetMapping;
struct _IdleStateAccounting;
struct _KBUGCHECK_ADD_PAGES;
struct _KCRM_MARSHAL_HEADER;
struct _KDEVICE_QUEUE_ENTRY;
struct _KEYBOARD_ATTRIBUTES;
struct _KEYBOARD_IME_STATUS;
struct _KEYBOARD_INPUT_DATA;
struct _KSDEVICE_DESCRIPTOR;
struct _KSFILTER_DESCRIPTOR;
struct _KSM_BDA_DEBUG_LEVEL;
struct _KSM_BDA_SCAN_FILTER;
struct _KSPIN_DESCRIPTOR_EX;
struct _KS_COPY_MACROVISION;
struct _KS_DVDCOPY_TITLEKEY;
struct _L2CAP_CONFIG_OPTION;
struct _LINE_ADDRESS_STATUS;
struct _LLDP_CURRENT_STATUS;
struct _LUID_AND_ATTRIBUTES;
struct _LogoutFromTarget_IN;
struct _MLDV2_REPORT_HEADER;
struct _MPIO_GET_DESCRIPTOR;
struct _MPIO_REGISTERED_DSM;
struct _MSMCAEvent_BusError;
struct _MSMCAEvent_CPUError;
struct _MSMCAEvent_TLBError;
struct _MSNdis_80211_AddWEP;
struct _MSNdis_CoMacOptions;
struct _MSNdis_CoMediaInUse;
struct _MSNdis_ObjectHeader;
struct _MSNdis_ReceiveError;
struct _MSNdis_WmiSetHeader;
struct _MSiSCSI_TCPIPConfig;
struct _NAME_CACHE_CONTROL_;
struct _NDIS_GENERIC_OBJECT;
struct _NDIS_IP_OPER_STATUS;
struct _NDIS_MINIPORT_BLOCK;
struct _NDIS_MINIPORT_TIMER;
struct _NDIS_M_DRIVER_BLOCK;
struct _NDIS_PM_WOL_PATTERN;
struct _NDIS_PROCESSOR_INFO;
struct _NDIS_PROTOCOL_BLOCK;
struct _NDIS_TAPI_MAKE_CALL;
struct _NDIS_WMI_SET_HEADER;
struct _NDIS_WRAPPER_HANDLE;
struct _NDK_SHARED_ENDPOINT;
struct _NETWORK_ADDRESS_IPX;
struct _OBJECT_ATTRIBUTES32;
struct _OBJECT_ATTRIBUTES64;
struct _PAR_SET_INFORMATION;
struct _PBDAParentalControl;
struct _PCC_SUBSPACE_HEADER;
struct _PNP_BUS_INFORMATION;
struct _POWER_USER_PRESENCE;
struct _PO_WAKE_SOURCE_INFO;
struct _PTP_VENDOR_DATA_OUT;
struct _QUERY_PATH_RESPONSE;
struct _RDBSS_DEVICE_OBJECT;
struct _READ_LOG_SECTORS_IN;
struct _REPAIR_COPIES_INPUT;
struct _REPARSE_DATA_BUFFER;
struct _RESOURCE_HASH_ENTRY;
struct _RTL_HEAP_PARAMETERS;
struct _RX_WORK_QUEUE_ITEM_;
struct _RemoveiSNSServer_IN;
struct _SCATTER_GATHER_LIST;
struct _SECURITY_DESCRIPTOR;
struct _SERIAL_WMI_COMMPROP;
struct _SET_DISK_ATTRIBUTES;
struct _SINGLE_LIST_ENTRY32;
struct _SMARTCARD_EXTENSION;
struct _SOCKET_ADDRESS_LIST;
struct _STOR_POFX_COMPONENT;
struct _STOR_POFX_DEVICE_V2;
struct _STREAM_EXTENT_ENTRY;
struct _STREAM_LAYOUT_ENTRY;
struct _SYSTEM_POWER_POLICY;
struct _ScsiReadCapacity_IN;
struct _SecPkgContext_Flags;
struct _SecPkgContext_Sizes;
struct _TAPE_GET_STATISTICS;
struct _TAPE_WMI_OPERATIONS;
struct _TDI_ADDRESS_NETBIOS;
struct _TDI_CONNECTION_INFO;
struct _TDI_CONNECT_REQUEST;
struct _TDI_REQUEST_RECEIVE;
struct _TEXTUAL_LEAF_FORMAT;
struct _TOKEN_DEVICE_CLAIMS;
struct _TOKEN_PRIMARY_GROUP;
struct _TXN_PARAMETER_BLOCK;
struct _USBCAMD_DEVICE_DATA;
union _USB_ENDPOINT_STATUS;
struct _VideoModeDescriptor;
struct _WSK_CLIENT_DISPATCH;
struct _WSK_DATA_INDICATION;
struct _WWAN_AUTH_CHALLENGE;
struct _WWAN_PACKET_SERVICE;
struct _WWAN_SMS_PDU_RECORD;
struct _WmiSetBrightness_IN;
struct _ZONE_SEGMENT_HEADER;
struct adpcmewaveformat_tag;
struct gsm610waveformat_tag;
struct oligsmwaveformat_tag;
struct olioprwaveformat_tag;
struct olisbcwaveformat_tag;
struct sonarcwaveformat_tag;
struct tagKS_BDA_FRAME_INFO;
struct tagKS_MPEG1VIDEOINFO;
struct tagKS_MPEGVIDEOINFO2;
struct tagKS_VBI_FRAME_INFO;
struct tagWNODE_METHOD_ITEM;
struct tagWNODE_SINGLE_ITEM;
struct tag_KS_TRUECOLORINFO;
struct tag_video_open_parms;
struct DOT11_KEY_ALGO_CCMP;
struct DOT11_PHY_TYPE_LIST;
struct HBA_FCPBindingEntry;
struct IDrmAudioStreamVtbl;
struct IMiniportMidiStream;
struct IMiniportWaveCyclic;
struct IMiniportWaveRTVtbl;
union IPRouteNotifyOutput;
struct IPortClsSubdeviceEx;
struct IPortClsVersionVtbl;
struct IPortWaveCyclicVtbl;
struct IPreFetchOffsetVtbl;
struct KSAUTOMATION_TABLE_;
struct RX_LOG_ENTRY_HEADER;
union SMHBA_PhyStatistics;
struct SMHBA_TargetMapping;
struct _AALUSER_PARAMETERS;
struct _ACCESS_ALLOWED_ACE;
struct _ARBITER_LIST_ENTRY;
struct _ARBITER_PARAMETERS;
struct _AVC_PIN_DESCRIPTOR;
struct _AddRADIUSServer_IN;
struct _BDANODE_DESCRIPTOR;
struct _BTH_HCI_EVENT_INFO;
struct _BTH_RADIO_IN_RANGE;
struct _CACHE_RELATIONSHIP;
struct _CDB___CDB6INQUIRY3;
struct _CDB___MODE_SENSE10;
struct _CDB___PAUSE_RESUME;
struct _CDB___REPAIR_TRACK;
struct _CDB___SET_CD_SPEED;
struct _CDROM_TOC_PMA_DATA;
struct _CHANGER_SET_ACCESS;
struct _CMP_GET_PLUG_STATE;
struct _COMPLETION_CONTEXT;
struct _CO_CALL_PARAMETERS;
struct _CSV_NAMESPACE_INFO;
struct _CSV_QUERY_MDS_PATH;
struct _D3DDDICB_LOCKFLAGS;
struct _D3DDDI_ESCAPEFLAGS;
struct _D3DDDI_SURFACEINFO;
struct _D3DKMDT_GAMMA_RAMP;
struct _DDVIDEOPORTCONNECT;
struct _DESCRIPTION_HEADER;
struct _DEVICE_DESCRIPTION;
struct _DISK_CACHE_SETTING;
struct _DISK_EX_INT13_INFO;
struct _DISK_SNAPSHOT_INFO;
struct _DISPLAY_BRIGHTNESS;
struct _DOT11_IV48_COUNTER;
struct _DOT11_JOIN_REQUEST;
struct _DOT11_RECV_CONTEXT;
struct _DOT11_SCAN_REQUEST;
struct _DOT11_SEND_CONTEXT;
struct _DOT11_WFD_GROUP_ID;
struct _DSM_WMILIB_CONTEXT;
struct _DXGKARG_SETPALETTE;
struct _DXGK_AGP_INTERFACE;
struct _DXGK_DMABUFFERCAPS;
struct _DXGK_GAMMARAMPCAPS;
struct _DXGK_GDIARG_BITBLT;
struct _DXGK_I2C_INTERFACE;
struct _DXGK_OPM_INTERFACE;
struct _DXGK_SEGMENTFLAGS2;
struct _DXGK_SPB_INTERFACE;
struct _DXGK_TRANSFERFLAGS;
struct _ELEMENT_DESCRIPTOR;
struct _EXCEPTION_POINTERS;
struct _EXCEPTION_RECORD32;
struct _EXCEPTION_RECORD64;
struct _FBPT_RECORD_HEADER;
struct _FCB_BUFFERED_LOCKS;
struct _FILE_REGION_OUTPUT;
struct _FLOATING_SAVE_AREA;
struct _FORMAT_LIST_HEADER;
struct _FPDT_RECORD_HEADER;
struct _FSCNTL_SCREEN_INFO;
struct _GETVERSIONINPARAMS;
struct _GET_ALL_POLICY_OUT;
struct _GROUP_RELATIONSHIP;
struct _GetEventBuffer_OUT;
struct _GetFC3MgmtInfo_OUT;
struct _HBAFCPBindingEntry;
struct _HIDP_UNKNOWN_TOKEN;
struct _IMAGE_NT_HEADERS64;
struct _IMAGE_THUNK_DATA32;
struct _IMAGE_THUNK_DATA64;
struct _IO_CSQ_IRP_CONTEXT;
struct _IPV4_OPTION_HEADER;
struct _IPV6_OPTION_HEADER;
struct _IRB_REQ_ASYNC_LOCK;
struct _IRB_REQ_ASYNC_READ;
struct _IRB_REQ_ISOCH_STOP;
struct _IRB_REQ_ISOCH_TALK;
struct _IR_TRANSMIT_PARAMS;
struct _ISCSI_LoginOptions;
struct _ISCSI_TargetPortal;
struct _KCRM_PROTOCOL_BLOB;
struct _KLOCK_QUEUE_HANDLE;
struct _KSM_BDA_DRM_SETDRM;
struct _KSM_BDA_SCAN_START;
struct _KS_DVDCOPY_CHLGKEY;
struct _KS_DVDCOPY_DISCKEY;
struct _L2CAP_CONFIG_RANGE;
struct _LLDP_TLV_TYPE_INFO;
struct _LOWIO_PER_FCB_INFO;
struct _MAP_REGISTER_ENTRY;
struct _MEMORY_POWER_STATE;
struct _MLDV2_QUERY_HEADER;
struct _MOUNTDEV_UNIQUE_ID;
struct _MSFC_FC4STATISTICS;
struct _MSNdis_CoLinkSpeed;
struct _MSNdis_TransmitsOk;
struct _MSWmi_ProviderInfo;
struct _NDIS_CO_LINK_SPEED;
struct _NDIS_IP_OPER_STATE;
struct _NDIS_MAC_LINE_DOWN;
struct _NDIS_OBJECT_HEADER;
struct _NDIS_PM_PARAMETERS;
struct _NDIS_RSS_PROCESSOR;
struct _NDIS_VAR_DATA_DESC;
struct _NDIS_WAN_GET_STATS;
struct _NDIS_WAN_LINE_DOWN;
struct _NDIS_WLAN_BSSID_EX;
struct _NDIS_WWAN_PIN_INFO;
struct _NDIS_WWAN_PIN_LIST;
struct _NDIS_WWAN_SMS_READ;
struct _NDIS_WWAN_SMS_SEND;
struct _NETWORK_ADDRESS_IP;
struct _NET_IF_INFORMATION;
struct _OPLOCK_KEY_CONTEXT;
struct _PARALLEL_CHIP_MODE;
struct _PCI_AGP_CAPABILITY;
struct _PCPROPERTY_REQUEST;
struct _PLATFORM_INTERRUPT;
struct _PO_FX_COMPONENT_V1;
struct _PO_FX_COMPONENT_V2;
struct _PREFIX_TABLE_ENTRY;
struct _PTP_VENDOR_DATA_IN;
struct _QUERY_PATH_REQUEST;
struct _READ_CAPACITY_DATA;
struct _REASSIGN_BLOCKS_EX;
struct _RESUME_PERFORMANCE;
struct _RTL_BALANCED_LINKS;
struct _RX_BINDING_CONTEXT;
struct _RX_FCB_TABLE_ENTRY;
struct _RX_SCAVENGER_ENTRY;
struct _S3PT_RECORD_HEADER;
struct _SCSIWMILIB_CONTEXT;
struct _SCSI_REQUEST_BLOCK;
struct _SDP_TREE_ROOT_NODE;
struct _SD_ENUM_SDS_OUTPUT;
struct _SECURITY_USER_DATA;
struct _SERIAL_WMI_HW_DATA;
struct _SES_PHY_DESCRIPTOR;
struct _SET_UNIT_DIRECTORY;
struct _SE_ADT_OBJECT_TYPE;
struct _SID_AND_ATTRIBUTES;
struct _SRBEX_DATA_IO_INFO;
struct _STORAGE_IDENTIFIER;
struct _STORAGE_IDLE_POWER;
struct _STREAMS_TDI_ACTION;
union _SUB_Q_CHANNEL_DATA;
union _SUPPORTED_ADVANCES;
struct _ScsiReportLuns_OUT;
struct _SendCTPassThru_OUT;
struct _SetFC3MgmtInfo_OUT;
struct _TAPE_PHYS_POSITION;
struct _TAPE_POSITION_DATA;
struct _TA_ADDRESS_NETBIOS;
struct _TDI_ADDRESS_IP6_XP;
struct _TDI_ADDRESS_NETONE;
struct _TDI_PNP_CONTEXT_XP;
struct _TDI_REQUEST_ACCEPT;
struct _TDI_REQUEST_KERNEL;
struct _TDI_REQUEST_LISTEN;
struct _TDI_REQUEST_STATUS;
struct _TOKEN_AUDIT_POLICY;
struct _TOKEN_DEFAULT_DACL;
struct _TOKEN_LINKED_TOKEN;
struct _TRACK_INFORMATION2;
struct _TRACK_INFORMATION3;
struct _URB_ISOCH_TRANSFER;
struct _USBRPM_DEVICE_LIST;
union _USB_20_PORT_CHANGE;
union _USB_20_PORT_STATUS;
union _USB_30_PORT_CHANGE;
union _USB_30_PORT_STATUS;
struct _USB_BOS_DESCRIPTOR;
struct _USB_HUB_DESCRIPTOR;
struct _VERIFY_INFORMATION;
struct _VIDEO_ACCESS_RANGE;
struct _VIDEO_PALETTE_DATA;
struct _VIDEO_REGISTER_VDM;
struct _VIDEO_SHARE_MEMORY;
struct _WAIT_CONTEXT_BLOCK;
struct _WHEA_GENERIC_ERROR;
struct _WHEA_PCIXDEVICE_ID;
union _WHEA_XPF_BUS_CHECK;
union _WHEA_XPF_TLB_CHECK;
struct _WWAN_AUTH_RESPONSE;
struct _WWAN_CONTEXT_STATE;
struct _WWAN_SMS_SEND_CDMA;
struct adpcmwaveformat_tag;
struct heaacwaveformat_tag;
struct mpeg1waveformat_tag;
struct nd_neighbor_solicit;
struct sockaddr_in6_w2ksp1;
struct sockaddr_storage_xp;
struct tagKS_H264VIDEOINFO;
struct tagKS_VBIINFOHEADER;
struct tagWNODE_EVENT_ITEM;
struct tag_s_RIFFWAVE_INST;
struct tag_s_RIFFWAVE_inst;
struct threadmbcinfostruct;
struct wavefilter_echo_tag;
struct ANON_OBJECT_HEADER;
struct DOT11_CHANNEL_HINT;
struct DOT11_KEY_ALGO_BIP;
struct HBA_FcpScsiEntryV2;
struct HBA_Link_EventInfo;
struct HBA_PortAttributes;
struct HBA_PortStatistics;
struct HBA_RSCN_EventInfo;
struct IIndirectedUnknown;
struct IInterruptSyncVtbl;
struct IMAGE_COR20_HEADER;
struct IPortWavePciStream;
struct SMHBA_BindingEntry;
struct _AAL_PARAMETERS_IE;
struct _ACCESS_DENIED_ACE;
union _AMD_L1_CACHE_INFO;
union _AMD_L2_CACHE_INFO;
union _AMD_L3_CACHE_INFO;
struct _ARBITER_INTERFACE;
struct _ATM_LIJ_CALLID_IE;
struct _AVCPRECONNECTINFO;
struct _AVC_MULTIFUNC_IRB;
struct _AddiSNSServer_OUT;
struct _BDA_DRM_DRMSTATUS;
struct _BDA_GDDS_DATATYPE;
struct _BDA_TABLE_SECTION;
struct _BTHHFP_DESCRIPTOR;
struct _BTHX_CAPABILITIES;
struct _CDB___BLANK_MEDIA;
struct _CDB___CDB6GENERIC;
struct _CDB___CDB6INQUIRY;
struct _CDB___CLOSE_TRACK;
struct _CDB___LOAD_UNLOAD;
struct _CDB___MECH_STATUS;
struct _CDB___MODE_SELECT;
struct _CDB___MOVE_MEDIUM;
struct _CDB___READ_CD_MSF;
struct _CDB___READ_HEADER;
struct _CDB___REPORT_LUNS;
struct _CDROM_READ_TOC_EX;
struct _CIP_VALIDATE_INFO;
struct _CLASS_VPD_B0_DATA;
struct _CLASS_VPD_B1_DATA;
struct _CLASS_VPD_B2_DATA;
struct _CLASS_WORKING_SET;
struct _CLS_IO_STATISTICS;
struct _CMP_MONITOR_PLUGS;
struct _COMMIT_POLICY_OUT;
struct _CONFIG_ROM_HEADER;
struct _CONTROLLER_OBJECT;
struct _CO_TAPI_LINE_CAPS;
struct _CSRT_TABLE_HEADER;
struct _CSV_CONTROL_PARAM;
struct _ChannelChangeInfo;
struct _CrtMemBlockHeader;
struct _DATA_BLOCK_HEADER;
struct _DEVICE_MEDIA_INFO;
struct _DIAGNOSTIC_BUFFER;
struct _DICTIONARY_HEADER;
union _DIRECTORY_ENTRIES;
struct _DISK_CLUSTER_INFO;
struct _DISK_SAN_SETTINGS;
struct _DISPATCHER_HEADER;
struct _DMA_TRANSFER_INFO;
struct _DOT11_WEP_OFFLOAD;
struct _DOT11_WFD_CHANNEL;
struct _DOT4_DC_OPEN_DATA;
struct _DSM_QueryLBPolicy;
struct _DSM_QueryUniqueId;
struct _DXGKRNL_INTERFACE;
struct _DXGK_CHILD_STATUS;
struct _DXGK_ENGINESTATUS;
struct _DXGK_POINTERFLAGS;
struct _DXGK_PRESENTFLAGS;
struct _DXGK_SEGMENTFLAGS;
struct _ENCRYPTION_BUFFER;
struct _FCP_SEND_RESPONSE;
struct _FILE_LAYOUT_ENTRY;
struct _FILE_REGION_INPUT;
struct _FLT_CALLBACK_DATA;
struct _FORMAT_DESCRIPTOR;
struct _FORMAT_PARAMETERS;
struct _GENERAL_LOOKASIDE;
struct _GEN_GET_TIME_CAPS;
struct _HAL_MCA_INTERFACE;
struct _HID_DRIVER_CONFIG;
struct _IDE_REQUEST_BLOCK;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_ROM_HEADERS;
struct _INTERFACE_INFO_EX;
struct _IO_STACK_LOCATION;
struct _IRB_REQ_BUS_RESET;
struct _IR_RECEIVE_PARAMS;
struct _IR_TRANSMIT_CHUNK;
struct _IVHD_DEVICE_ENTRY;
struct _IVRS_BLOCK_HEADER;
struct _IdleStateBucketEx;
struct _KBUGCHECK_DUMP_IO;
struct _KERNEL_USER_TIMES;
struct _KSDEVICE_DISPATCH;
struct _KSFILTER_DISPATCH;
struct _KSNODE_DESCRIPTOR;
struct _KS_DVDCOPY_BUSKEY;
struct _KS_DVDCOPY_REGION;
struct _KUSER_SHARED_DATA;
struct _LINE_ADDRESS_CAPS;
struct _LINE_EXTENSION_ID;
struct _LLDP_ADMIN_CONFIG;
struct _LOOKASIDE_LIST_EX;
struct _LoginToTarget_OUT;
struct _MECHANICAL_STATUS;
struct _MEMORY_POWER_NODE;
struct _MINIPORT_MAPPINGS;
union _MM_PREFETCH_FLAGS;
struct _MODE_CACHING_PAGE;
struct _MODE_CONTROL_PAGE;
struct _MPIOMoveDevice_IN;
struct _MPIO_VERSION_INFO;
struct _MSFC_AdapterEvent;
struct _MSMCAEvent_Header;
struct _MSNdis_CoVendorId;
struct _MSNdis_MacOptions;
struct _MSNdis_MediaInUse;
struct _MSNdis_RSSEnabled;
struct _MSNdis_ReceivesOk;
struct _MSNdis_WmiOffload;
struct _MSSerial_PortName;
struct _MSV1_0_LM20_LOGON;
struct _MSWmi_PnPDeviceId;
struct _MSiSCSI_NICConfig;
struct _NABTS_BUFFER_LINE;
struct _NDIS_802_11_PMKID;
struct _NDIS_ENUM_FILTERS;
struct _NDIS_MAC_FRAGMENT;
struct _NDIS_WAN_FRAGMENT;
struct _NDIS_WWAN_SET_PIN;
struct _NDK_OBJECT_HEADER;
union _NET_BUFFER_HEADER;
struct _NLB_HOOK_IP_TUPLE;
struct _OBJECT_ATTRIBUTES;
struct _OFFLOAD_ALGO_INFO;
struct _PCI_COMMON_CONFIG;
struct _PCI_COMMON_HEADER;
struct _PCI_PM_CAPABILITY;
struct _PMI_CONFIGURATION;
struct _PM_DISPATCH_TABLE;
struct _PingIPAddress_OUT;
struct _READ_BLOCK_LIMITS;
struct _REPARSE_INDEX_KEY;
struct _REQ_NOTIFY_CHANGE;
struct _REQ_NT_IO_CONTROL;
struct _RTL_BALANCED_NODE;
struct _RTL_GENERIC_TABLE;
struct _SCRUB_DATA_OUTPUT;
struct _SCSI_INQUIRY_DATA;
struct _SCSI_PASS_THROUGH;
struct _SD_ENUM_SDS_ENTRY;
struct _SD_ENUM_SDS_INPUT;
struct _SE_ACCESS_REQUEST;
struct _SINGLE_LIST_ENTRY;
struct _SMARTCARD_REQUEST;
struct _STOR_REQUEST_INFO;
union _STOR_SLIST_HEADER;
struct _ScsiReportLuns_IN;
struct _SdpAttributeRange;
struct _SendCTPassThru_IN;
struct _SetDSMCounters_IN;
struct _SetFC3MgmtInfo_IN;
struct _TAPE_GET_POSITION;
struct _TAPE_INIT_DATA_EX;
struct _TAPE_SET_POSITION;
struct _TA_APPLETALK_ADDR;
struct _TDI_ACTION_HEADER;
struct _TDI_DATAGRAM_INFO;
struct _TDI_ENDPOINT_INFO;
struct _TDI_PROVIDER_INFO;
struct _TOKEN_USER_CLAIMS;
struct _TRACK_INFORMATION;
struct _TRANSPORT_ADDRESS;
struct _UNIT_ISOCH_PARAMS;
struct _UNMAP_LIST_HEADER;
union _USB_DEVICE_STATUS;
struct _VIDEO_BANK_SELECT;
struct _VIDEO_CHILD_STATE;
struct _VIDEO_I2C_CONTROL;
struct _WAN_CO_LINKPARAMS;
struct _WHEA_ERROR_RECORD;
union _WHEA_ERROR_STATUS;
union _WHEA_XPF_MS_CHECK;
struct _WHEA_XPF_PROCINFO;
struct _WMI_DISK_GEOMETRY;
struct _WWAN_SIGNAL_STATE;
struct _WWAN_SMS_SEND_PDU;
struct _WWAN_USSD_REQUEST;
union _XPF_MC_BANK_FLAGS;
struct _XSAVE_AREA_HEADER;
struct _sockaddr_in6_pair;
struct aptxwaveformat_tag;
struct nd_neighbor_advert;
struct nd_opt_prefix_info;
struct tagACT_AUTHZ_STATE;
struct tagACT_QUEUE_STATE;
struct tagKS_AMVPDATAINFO;
struct tagKS_MPEAUDIOINFO;
struct tagTIMECODE_SAMPLE;
struct tagTRANSPORTSTATUS;
struct tagWNODE_TOO_SMALL;
struct DL_TEREDO_ADDRESS;
struct DL_TUNNEL_ADDRESS;
struct DOT11_ENCAP_ENTRY;
struct DOT11_IBSS_PARAMS;
struct DOT11_PHY_ID_LIST;
struct DOT11_PMKID_ENTRY;
struct HBA_FC4Statistics;
struct HBA_Pty_EventInfo;
struct IMiniportMidiVtbl;
struct IMiniportTopology;
struct IPRouteLookupData;
struct IPortClsEtwHelper;
struct IPortClsPowerVtbl;
struct IPortTopologyVtbl;
struct IPortWaveRTStream;
struct IResourceListVtbl;
struct ISdpNodeContainer;
struct IServiceGroupVtbl;
struct NLBConnectionInfo;
union SdpQueryUuidUnion;
struct _AAL34_PARAMETERS;
struct _ATM_AAL_OOB_INFO;
struct _ATM_QOS_CLASS_IE;
struct _AVC_PEER_DO_LIST;
struct _AV_61883_REQUEST;
struct _AddiSNSServer_IN;
struct _BDA_CA_MODULE_UI;
struct _BDA_IPv4_ADDRESS;
struct _BDA_IPv6_ADDRESS;
struct _BDA_WMDRM_STATUS;
struct _BRB_ACL_GET_MODE;
struct _BRB_SCO_TRANSFER;
struct _BUS_RESET_NOTIFY;
struct _CACHE_DESCRIPTOR;
struct _CDB___CDB6FORMAT;
struct _CDB___CDB6VERIFY;
struct _CDB___MODE_SENSE;
struct _CDB___PLAY_AUDIO;
struct _CDB___REPORT_KEY;
struct _CDB___SEEK_BLOCK;
struct _CDB___START_STOP;
struct _CDB___SUBCHANNEL;
struct _CDDA_OUTPUT_PORT;
struct _CIP_ATTACH_FRAME;
struct _CIP_CANCEL_FRAME;
struct _CLFS_MGMT_POLICY;
struct _CLS_SCAN_CONTEXT;
struct _CMP_CONNECT_VER2;
struct _CMP_CONNECT_VER3;
struct _CMP_MONITOR_INFO;
struct _CM_RESOURCE_LIST;
struct _D3DKMDT_2DREGION;
struct _D3DKMT_MOVE_RECT;
struct _DEBUG_PORT_TABLE;
struct _DEVICE_RELATIONS;
struct _DEVOBJ_EXTENSION;
struct _DIRECTORY_HEADER;
struct _DISC_INFORMATION;
struct _DISK_GEOMETRY_EX;
struct _DISK_INFORMATION;
struct _DISK_PERFORMANCE;
struct _DMA_ADAPTER_INFO;
struct _DOT11_RSSI_RANGE;
struct _DOT11_WEP_UPLOAD;
struct _DRIVER_EXTENSION;
struct _DSM_MPIO_CONTEXT;
struct _DSM_VERSION_INFO;
struct _DUMP_POINTERS_EX;
struct _DXGKMDT_OPM_OMAC;
struct _DXGK_CONTEXTINFO;
struct _DXGK_DEVICE_INFO;
struct _DXGK_OVERLAYINFO;
struct _EISA_MEMORY_TYPE;
struct _ENUM_PDO_RESULTS;
struct _EVENT_DESCRIPTOR;
struct _EXCEPTION_RECORD;
struct _EXFAT_STATISTICS;
struct _FAST_IO_DISPATCH;
struct _FCP_GET_RESPONSE;
struct _FCP_SEND_REQUEST;
struct _FILE_PREFETCH_EX;
struct _FILE_REGION_INFO;
struct _FILTER_EXTENSION;
struct _FLT_NAME_CONTROL;
struct _FLT_REGISTRATION;
struct _HARDWARE_ADDRESS;
struct _HARDWARE_COUNTER;
struct _HIDP_BUTTON_CAPS;
struct _HIDP_DEVICE_DESC;
struct _HISTOGRAM_BUCKET;
struct _HW_STREAM_HEADER;
struct _HW_STREAM_OBJECT;
struct _IDE_ACCESS_RANGE;
union _IMAGE_AUX_SYMBOL;
struct _IMAGE_DEBUG_MISC;
struct _IMAGE_DOS_HEADER;
struct _IMAGE_LINENUMBER;
struct _IMAGE_NT_HEADERS;
struct _IMAGE_OS2_HEADER;
struct _IMAGE_RELOCATION;
struct _IMAGE_VXD_HEADER;
struct _IO_PRIORITY_INFO;
struct _IO_RESOURCE_LIST;
struct _ISCSI_IP_Address;
struct _ISCSI_PortalInfo;
struct _ISOCH_DESCRIPTOR;
struct _IdleAccountingEx;
struct _KRESOURCEMANAGER;
struct _KSCLOCK_DISPATCH;
struct _KSM_BDA_PIN_PAIR;
struct _KSPIN_LOCK_QUEUE;
struct _KSPROPERTY_SPHLI;
struct _KSPROPERTY_SPPAL;
struct _KSP_BDA_NODE_PIN;
struct _KSSTREAM_POINTER;
struct _KTMOBJECT_CURSOR;
struct _KernelIdleStates;
struct _KernelPerfStates;
struct _LBA_FILTER_TABLE;
struct _LINE_CALL_PARAMS;
struct _LINE_CALL_STATUS;
struct _LINE_DIAL_PARAMS;
struct _LoginToTarget_IN;
struct _MCFG_TABLE_ENTRY;
struct _MINIRDR_DISPATCH;
struct _MODE_FORMAT_PAGE;
struct _MOUSE_ATTRIBUTES;
struct _MOUSE_INPUT_DATA;
struct _MPIO_DSM_Path_V2;
struct _MSFC_EventBuffer;
struct _MSFC_TargetEvent;
struct _MSNdis_LinkSpeed;
struct _MSNdis_PortArray;
struct _MSV1_0_S4U_LOGON;
struct _MSiSCSI_Eventlog;
struct _NDIS_802_11_SSID;
struct _NDIS_802_11_TEST;
struct _NDIS_MAC_LINE_UP;
struct _NDIS_OID_REQUEST;
struct _NDIS_TAPI_ACCEPT;
struct _NDIS_TAPI_ANSWER;
struct _NDIS_TAPI_GET_ID;
struct _NDIS_WAN_CO_INFO;
struct _NDIS_WAN_LINE_UP;
struct _NDIS_WMI_OFFLOAD;
struct _NDK_ADAPTER_INFO;
struct _NDK_SRQ_DISPATCH;
struct _NETWORK_CHANNELS;
struct _OBJECT_TYPE_LIST;
struct _OSVERSIONINFOEXA;
struct _OSVERSIONINFOEXW;
struct _PCMETHOD_REQUEST;
struct _PMI_CAPABILITIES;
struct _PROCESSOR_NUMBER;
struct _PingIPAddress_IN;
struct _Q2931_DELETE_PVC;
struct _QOS_SHAPING_RATE;
union _RATE_QUOTA_LIMIT;
struct _RESP_PEEK_NMPIPE;
struct _RXCE_CONNECTION_;
struct _RX_CONNECTION_ID;
struct _RX_IRP_LIST_ITEM;
struct _RemoveTarget_OUT;
struct _SCARD_IO_REQUEST;
struct _SCRUB_DATA_INPUT;
struct _SDCMD_DESCRIPTOR;
struct _SENDCMDOUTPARAMS;
struct _SMB_FIND_BUFFER2;
struct _SRBEX_DATA_POWER;
struct _SRB_HISTORY_ITEM;
struct _STOR_LOCK_HANDLE;
struct _STOR_POFX_DEVICE;
struct _STOR_SLIST_ENTRY;
struct _SUB_Q_TRACK_ISRC;
struct _SYSTEM_ALARM_ACE;
struct _SYSTEM_AUDIT_ACE;
struct _TAPE_WRITE_MARKS;
struct _TDI_ADDRESS_8022;
struct _TDI_ADDRESS_INFO;
struct _TDI_REQUEST_SEND;
union _TDI_REQUEST_TYPE;
struct _THROTTLING_STATE;
struct _TOKEN_PRIVILEGES;
struct _TOKEN_STATISTICS;
struct _UNIT_DDI_VERSION;
struct _URB_PIPE_REQUEST;
struct _WSK_PROVIDER_NPI;
struct _WSK_REGISTRATION;
struct _WSK_TDI_MAP_INFO;
struct _WWAN_DEVICE_CAPS;
struct _WWAN_DRIVER_CAPS;
struct _WWAN_LIST_HEADER;
struct _WWAN_RADIO_STATE;
struct _WWAN_SET_CONTEXT;
struct _WWAN_USSD_STRING;
struct _wfinddata32i64_t;
struct _wfinddata64i32_t;
struct drmwaveformat_tag;
struct heaacwaveinfo_tag;
struct localeinfo_struct;
struct nd_opt_route_info;
struct nd_router_solicit;
struct pcmwaveformat_tag;
struct tagJPEGINFOHEADER;
struct tagKS_AMVPDIMINFO;
struct tagWNODE_ALL_DATA;
struct D3DKMDT_HVIDPN__;
struct DOT11_BSSID_LIST;
struct DOT11_BYTE_ARRAY;
struct DOT11_PMKID_LIST;
struct DOT11_QOS_PARAMS;
struct DOT11_STATISTICS;
struct HBA_FcpScsiEntry;
struct IMiniportWavePci;
struct IMusicTechnology;
struct IP6RouteEntry_V1;
struct IP6RouteEntry_V2;
struct IPortWavePciVtbl;
struct IPowerNotifyVtbl;
struct IRegistryKeyVtbl;
struct IServiceSinkVtbl;
struct _AAL1_PARAMETERS;
struct _AAL5_PARAMETERS;
struct _ACPI_ENUM_CHILD;
struct _ACPI_MSCT_ENTRY;
struct _ACPI_SRAT_ENTRY;
struct _ACPI_WPBT_TABLE;
struct _AGP_INFO_COMMON;
struct _AGP_INFO_DRIVER;
struct _AVC_COMMAND_IRB;
struct _BDA_DISEQC_SEND;
struct _BDA_PIN_PAIRING;
union _BM_REQUEST_TYPE;
struct _BTH_DEVICE_INFO;
struct _CDB___LOGSELECT;
struct _CDB___PARTITION;
struct _CDROM_DISK_DATA;
struct _CDROM_SET_SPEED;
struct _CDVD_KEY_HEADER;
struct _CHANGER_ELEMENT;
struct _CHAR_IMAGE_INFO;
struct _CIP_HDR2_MPEGTS;
struct _CIP_NOTIFY_INFO;
struct _CLASS_INIT_DATA;
struct _CLS_INFORMATION;
struct _CLS_WRITE_ENTRY;
struct _CMC_DRIVER_INFO;
struct _CMP_CREATE_PLUG;
struct _CMP_DELETE_PLUG;
struct _CMP_NOTIFY_INFO;
struct _CM_MCA_POS_DATA;
struct _CONTROLLER_INFO;
struct _CO_ADDRESS_LIST;
struct _CO_TAPI_CM_CAPS;
struct _CPE_DRIVER_INFO;
struct _CREATE_DISK_GPT;
struct _CREATE_DISK_MBR;
struct _ChannelTypeInfo;
struct _D3DDDI_RATIONAL;
struct _DIRECTORY_ENTRY;
struct _DISK_INT13_INFO;
struct _DOT11_PEER_INFO;
struct _DOT11_UPDATE_IE;
struct _DOT4_DRIVER_CMD;
struct _DXGKARG_PRESENT;
struct _DXGK_DEVICEINFO;
struct _DXGK_DRIVERCAPS;
struct _DXGK_ENUM_PIVOT;
struct _DXGK_PATCHFLAGS;
struct _DXGK_START_INFO;
struct _DXGK_VIDSCHCAPS;
struct _ETHERNET_HEADER;
struct _FCB_INIT_PACKET;
struct _FCP_GET_REQUEST;
struct _FILE_LEVEL_TRIM;
struct _FONT_IMAGE_INFO;
struct _GENERIC_MAPPING;
struct _GET_MEDIA_TYPES;
struct _GIC_DISTRIBUTOR;
struct _HBAFCPScsiEntry;
struct _HIDP_REPORT_IDS;
struct _HIDP_VALUE_CAPS;
struct _HID_XFER_PACKET;
struct _HOOK_IP_ADDRESS;
struct _HW_CLOCK_OBJECT;
struct _HW_TIME_CONTEXT;
struct _IDE_REGISTERS_1;
struct _IDE_REGISTERS_2;
struct _IMAGE_SYMBOL_EX;
struct _INET_PORT_RANGE;
struct _IO_STATUS_BLOCK;
struct _IRB_REQ_CONTROL;
struct _KEY_VALUE_ENTRY;
struct _KSFILTERFACTORY;
struct _KernelIdleState;
struct _KernelPerfState;
struct _LINE_DEV_STATUS;
struct _LLDP_STATISTICS;
struct _LOCAL_NMISOURCE;
struct _LOWIO_LOCK_LIST;
struct _MCA_DRIVER_INFO;
struct _MF_RESOURCE_MAP;
struct _MPIO_DRIVE_INFO;
struct _MPIO_EventEntry;
struct _MRX_NAME_CACHE_;
struct _MRX_V_NET_ROOT_;
struct _MSMCAInfo_Entry;
struct _MSNdis_PortChar;
struct _MSNdis_VendorID;
struct _NABTSFEC_BUFFER;
struct _NDIS_802_11_KEY;
struct _NDIS_802_11_WEP;
struct _NDIS_LINK_SPEED;
struct _NDIS_LINK_STATE;
struct _NDIS_OPEN_BLOCK;
struct _NDIS_OPER_STATE;
struct _NDIS_PORT_ARRAY;
struct _NDIS_PORT_STATE;
struct _NDIS_RW_LOCK_EX;
struct _NDIS_TAPI_CLOSE;
struct _NDIS_TAPI_EVENT;
struct _NDIS_WLAN_BSSID;
struct _NDK_CQ_DISPATCH;
struct _NDK_MR_DISPATCH;
struct _NDK_MW_DISPATCH;
struct _NDK_PD_DISPATCH;
struct _NDK_QP_DISPATCH;
struct _NETWORK_ADDRESS;
struct _NET_BUFFER_DATA;
struct _NET_BUFFER_LIST;
struct _NET_IF_ALIAS_LH;
struct _NTFS_STATISTICS;
struct _OCR_REGISTER_V2;
struct _OPC_TABLE_ENTRY;
struct _PATHNAME_BUFFER;
struct _PCEVENT_REQUEST;
struct _PCI_AGP_CONTROL;
struct _PCI_SLOT_NUMBER;
struct _PDO_INFORMATION;
struct _PMKID_CANDIDATE;
struct _PO_FX_DEVICE_V1;
struct _PO_FX_DEVICE_V2;
struct _PROCLOCALX2APIC;
struct _QUERY_HOOK_INFO;
struct _QUERY_INTERFACE;
struct _QUOTA_LIMITS_EX;
struct _RDBSS_SCAVENGER;
struct _REASSIGN_BLOCKS;
struct _RIO_CMSG_BUFFER;
struct _RTC_ALLOCA_NODE;
struct _RTL_SPLAY_LINKS;
struct _RXCE_SIGNATURE_;
struct _RXCE_TRANSPORT_;
struct _RX_PREFIX_ENTRY;
struct _RX_PREFIX_TABLE;
struct _RegisteredGuids;
struct _RemoveTarget_IN;
struct _SDP_NODE_HEADER;
struct _SENDCMDINPARAMS;
struct _SE_ACCESS_REPLY;
struct _SMARTCARD_REPLY;
struct _SMB_FIND_BUFFER;
struct _SYSENV_VARIABLE;
struct _ScsiInquiry_OUT;
struct _SendTargets_OUT;
struct _TAPE_STATISTICS;
struct _TDI_ADDRESS_IPX;
struct _TDI_ADDRESS_VNS;
struct _TOKEN_ELEVATION;
struct _UNIT_DIAG_LEVEL;
union _USB_PORT_CHANGE;
union _USB_PORT_STATUS;
struct _VIDEOPARAMETERS;
struct _VIDEO_NUM_MODES;
struct _VPOSVERSIONINFO;
struct _WAKE_TIMER_INFO;
union _WHEA_PCIXBUS_ID;
struct _WORK_QUEUE_ITEM;
struct _WST_BUFFER_LINE;
struct _WWAN_PIN_ACTION;
struct _WWAN_READY_INFO;
struct _WWAN_SMS_FILTER;
struct _WWAN_SMS_STATUS;
struct _WWAN_USSD_EVENT;
struct _finddata32i64_t;
struct _finddata64i32_t;
struct group_source_req;
struct nd_router_advert;
struct sockaddr_in6_old;
struct sockaddr_storage;
struct tagKS_FRAME_INFO;
struct CM_Power_Data_s;
struct D3DDDI_DXGI_RGB;
struct DOT11_BSS_ENTRY;
struct DOT11_SSID_LIST;
struct HBA_FCPBinding2;
struct HWINEVENTHOOK__;
struct IDmaChannelVtbl;
struct IDrmAudioStream;
struct IMiniportWaveRT;
struct IPInterfaceInfo;
struct IPRouteEntry_V1;
struct IPRouteEntry_V2;
struct IPRouteEntry_V3;
struct IPortClsVersion;
struct IPortEventsVtbl;
struct IPortWaveCyclic;
struct IPortWaveRTVtbl;
struct IPreFetchOffset;
struct SMHBA_ScsiEntry;
struct _ACCESS_REASONS;
struct _ADAPTER_OBJECT;
struct _ADDRESS_OFFSET;
struct _AVCCONNECTINFO;
struct _BDA_DEBUG_DATA;
struct _BDA_EVENT_DATA;
struct _BDA_SCAN_START;
struct _BDA_SCAN_STATE;
struct _BINDING_HANDLE;
struct _BOOT_AREA_INFO;
struct _BUS_RESET_DATA;
struct _CDB___LOGSENSE;
struct _CDB___READ_TOC;
struct _CDB___SEND_KEY;
struct _CDB___VERIFY16;
struct _CLASS_DEV_INFO;
struct _CLASS_WMI_INFO;
struct _CMP_DISCONNECT;
struct _CONTROLLER_IDS;
struct _CO_AF_TAPI_SAP;
struct _ClearCache_OUT;
struct _DISK_HISTOGRAM;
struct _DISK_PARTITION;
struct _DISK_SIGNATURE;
struct _DMA_OPERATIONS;
struct _DOT11_RATE_SET;
struct _DSM_PARAMETERS;
struct _DXGKARG_ESCAPE;
struct _DXGKARG_RENDER;
struct _DXGK_VIDMMCAPS;
struct _ENUM_PDO_ENTRY;
struct _EOF_WAIT_BLOCK;
struct _EX_RUNDOWN_REF;
struct _FAT_STATISTICS;
struct _FILE_LOCK_INFO;
union _FLT_PARAMETERS;
struct _GROUP_AFFINITY;
struct _HAL_ERROR_INFO;
struct _HBAFC3MgmtInfo;
struct _HID_DESCRIPTOR;
struct _IDE_IO_CONTROL;
struct _IDE_POWER_INFO;
struct _INDICATOR_LIST;
struct _INTERFACE_INFO;
struct _IO_REMOVE_LOCK;
struct _IPTLS_METADATA;
struct _IR_DEV_CAPS_V2;
struct _IdleAccounting;
struct _KBUGCHECK_DATA;
struct _KEYBOARD_ID_EX;
struct _KFLOATING_SAVE;
struct _KSGOP_USERDATA;
struct _KSMPEGVID_RECT;
struct _KSM_BDA_BUFFER;
struct _KSPIN_DISPATCH;
struct _L2CAP_FLOWSPEC;
struct _LINE_CALL_INFO;
struct _LLDP_TLV_ARRAY;
struct _MAPPED_ADDRESS;
struct _MF_DEVICE_INFO;
struct _MPIO_DISK_INFO;
struct _MSFC_LinkEvent;
struct _MSFC_PortEvent;
struct _MSV1_0_AV_PAIR;
struct _NDIS_DMA_BLOCK;
struct _NDIS_SPIN_LOCK;
struct _NDIS_TAPI_DIAL;
struct _NDIS_TAPI_DROP;
struct _NDIS_TAPI_OPEN;
struct _NDIS_WORK_ITEM;
struct _OSVERSIONINFOA;
struct _OSVERSIONINFOW;
struct _POWER_SEQUENCE;
struct _PROCLOCALSAPIC;
struct _RESP_NT_CANCEL;
struct _RTL_BITMAP_RUN;
struct _RX_DISPATCHER_;
struct _RX_WORK_QUEUE_;
struct _RemoveLink_OUT;
struct _RemovePort_OUT;
struct _SD_SOCKET_DATA;
struct _SET_FCP_NOTIFY;
struct _SMARTBATTTABLE;
struct _SOCKET_ADDRESS;
struct _SRBEX_DATA_PNP;
struct _SRBEX_DATA_WMI;
struct _SRB_IO_CONTROL;
struct _STOR_ADDR_BTL8;
struct _ScsiInquiry_IN;
struct _SendRNIDV2_OUT;
struct _SendTargets_IN;
struct _T1_BLOCK_FRAME;
struct _TAPE_INIT_DATA;
struct _TA_ADDRESS_IP6;
struct _TA_ADDRESS_IPX;
struct _TA_ADDRESS_VNS;
struct _TDI_ADDRESS_IP;
struct _TDI_ADDRESS_NS;
struct _TDI_CMSGHDR_XP;
struct _TXFS_MODIFY_RM;
union _ULARGE_INTEGER;
struct _UNICODE_STRING;
struct _USAGE_AND_PAGE;
union _USB_HUB_CHANGE;
union _USB_HUB_STATUS;
struct _VIDEO_CLUTDATA;
struct _VM_COUNTERS_EX;
struct _VOLUME_CONTROL;
union _WHEA_TIMESTAMP;
struct _WMIGUIDREGINFO;
struct _WMILIB_CONTEXT;
struct _WSK_CLIENT_NPI;
struct _WSK_INSPECT_ID;
struct _WWAN_PROVIDER2;
struct _XSTATE_CONTEXT;
struct _XSTATE_FEATURE;
struct _XVARIABLE_NAME;
struct __RAW_READ_INFO;
struct _wfinddatai64_t;
struct tagKS_VIDEOINFO;
struct tagSILO_COMMAND;
struct tcp_opt_unknown;
struct DOT11_MAC_INFO;
struct HBA_FCPBinding;
struct HENHMETAFILE__;
struct ICMPv6SNMPInfo;
struct IInterruptSync;
struct IPNotifyOutput;
struct SMHBA_SAS_Port;
struct USBDI_HANDLE__;
struct _ADDRESS_RANGE;
struct _AVC_PIN_COUNT;
struct _AVC_UNIQUE_ID;
struct _AddTarget_OUT;
struct _BANK_POSITION;
struct _BDA_GDDS_DATA;
struct _BDA_PID_UNMAP;
struct _BRB_L2CA_PING;
struct _CC_FILE_SIZES;
struct _CDB___PLAY_CD;
struct _CDB___READ_CD;
struct _CDB___SCAN_CD;
struct _CDB___WRITE12;
struct _CDB___WRITE16;
struct _CDVD_KEY_DATA;
struct _CLUSTER_RANGE;
struct _CSV_MGMT_LOCK;
struct _DDPIXELFORMAT;
struct _DEVICE_OBJECT;
struct _DISK_GEOMETRY;
union _DMAR_GCMD_REG;
union _DMAR_GSTS_REG;
struct _DOT11_WPA_TSC;
struct _DOT4_ACTIVITY;
struct _DRIVER_OBJECT;
struct _DSM_INIT_DATA;
struct _DUMP_POINTERS;
struct _DXGKARG_PATCH;
struct _DXGK_FLIPCAPS;
struct _FILE_PREFETCH;
struct _GET_UNIT_INFO;
struct _HAL_CALLBACKS;
struct _I2C_CALLBACKS;
struct _I2C_FNC_TABLE;
struct _IDE_LBA_RANGE;
struct _IDE_TASK_FILE;
struct _IMAGE_INFO_EX;
struct _ISCSI_LUNList;
struct _KDEVICE_QUEUE;
struct _KSEVENT_ENTRY;
union _LARGE_INTEGER;
struct _LINE_DEV_CAPS;
struct _LINKED_DEVICE;
struct _LOCK_STATE_EX;
struct _LOG_PARAMETER;
struct _LOWIO_CONTEXT;
struct _MCA_EXCEPTION;
struct _MCD_INIT_DATA;
struct _MEMORY_REGION;
struct _MODE_CAP_PAGE;
struct _MODE_MRW_PAGE;
struct _MOUNTDEV_NAME;
struct _MPIO_DSM_Path;
struct _MRX_NET_ROOT_;
struct _MRX_SRV_CALL_;
struct _MRX_SRV_OPEN_;
struct _MSWmi_MofData;
struct _NDIS_WAN_INFO;
struct _NDK_CONNECTOR;
struct _NET_PNP_EVENT;
struct _NON_PAGED_FCB;
struct _NT_SMB_HEADER;
struct _OUTPUT_PACKET;
struct _PCI_PMCSR_BSE;
struct _PRIVILEGE_SET;
struct _PROCLOCALAPIC;
struct _Q2931_ADD_PVC;
struct _RDBSS_EXPORTS;
struct _REASON_BUFFER;
struct _REQ_NT_CANCEL;
struct _REQ_NT_RENAME;
struct _RTC_framedesc;
struct _RTL_AVL_TABLE;
struct _RXCE_ADDRESS_;
struct _RX_WORK_ITEM_;
struct _RemovePort_IN;
struct _SCSI_BUS_DATA;
union _SDP_NODE_DATA;
union _SENSE_DATA_EX;
struct _SET_UNIT_INFO;
struct _SE_ADT_CLAIMS;
struct _SE_AUDIT_INFO;
union _SOCKADDR_INET;
struct _SecBufferDesc;
struct _SendRNIDV2_IN;
struct _TA_ADDRESS_IP;
struct _TA_ADDRESS_NS;
struct _TOKEN_CONTROL;
struct _TUPLE_REQUEST;
struct _USB_PORT_PATH;
union _WHEA_REVISION;
struct _WSK_TRANSPORT;
struct _WWAN_PIN_DESC;
struct _WWAN_PIN_INFO;
struct _WWAN_PIN_LIST;
struct _WWAN_PROVIDER;
struct _WWAN_SMS_READ;
struct _WWAN_SMS_SEND;
union _XPF_MCE_FLAGS;
struct __finddata64_t;
struct __lc_time_data;
struct _finddatai64_t;
struct _wfinddata32_t;
struct _wfinddata64_t;
struct in6_pktinfo_ex;
struct ip_mreq_source;
struct tagKS_AMVPSIZE;
struct wavefilter_tag;
struct waveformat_tag;
struct HBA_EventInfo;
struct HBA_ipaddress;
struct HCOLORSPACE__;
struct IDrmPort2Vtbl;
struct IMiniportMidi;
struct IMiniportVtbl;
struct IPinCountVtbl;
struct IPortClsPower;
struct IPortMidiVtbl;
struct IPortTopology;
struct IResourceList;
struct IServiceGroup;
struct SMHBA_Binding;
struct SMHBA_FC_Port;
struct SMHBA_PORTLUN;
struct SMHBA_SAS_Phy;
struct SMHBA_SCSILUN;
struct USBD_HANDLE__;
struct _ACCESS_RANGE;
struct _ACCESS_STATE;
struct _ADDRESS_FIFO;
struct _AGP_STD_DATA;
struct _ASYNC_PACKET;
struct _ATM_CAUSE_IE;
struct _AUDIO_OUTPUT;
struct _AddTarget_IN;
struct _BTHX_VERSION;
struct _BUS_INFO_IDS;
struct _CC_BYTE_PAIR;
struct _CDB___LOCATE;
struct _CDB___READ12;
struct _CDB___READ16;
struct _CIP_HDR2_FDF;
struct _CIP_HDR2_SYT;
struct _CLFS_NODE_ID;
struct _CMP_SET_PLUG;
struct _CM_ROM_BLOCK;
struct _CONNECT_DATA;
struct _DEVICE_FLAGS;
struct _DISK_LOGGING;
struct _DRIVERSTATUS;
struct _DSM_COUNTERS;
struct _DualMonoInfo;
struct _GENERIC_ANDX;
struct _GET_UNIT_IDS;
struct _ICMP_MESSAGE;
struct _IDEREGISTERS;
struct _IMAGE_SYMBOL;
struct _IO_NMISOURCE;
struct _ISOCH_HEADER;
struct _KSM_PIN_PAIR;
struct _KSPROCESSPIN;
struct _KSYSTEM_TIME;
struct _KS_DVD_YCrCb;
struct _KTRANSACTION;
struct _LanguageInfo;
struct _NABTS_BUFFER;
struct _NDIS_AF_LIST;
struct _NDIS_OFFLOAD;
struct _NDIS_RW_LOCK;
struct _NDK_LISTENER;
struct _NETWORK_NAME;
struct _NLSTABLEINFO;
struct _NODE_ADDRESS;
struct _NPI_MODULEID;
struct _PDOSCSI_ADDR;
struct _PREFIX_TABLE;
struct _PROCLOCALGIC;
struct _QUOTA_LIMITS;
struct _REGISTER_FIS;
union _RTL_RUN_ONCE;
struct _RX_FCB_TABLE;
struct _RX_MID_ATLAS;
struct _SCSI_ADDRESS;
struct _SDRESP_TYPE3;
struct _SELF_ID_MORE;
struct _SHARE_ACCESS;
union _SLIST_HEADER;
struct _STATUS_BLOCK;
struct _STOR_ADDRESS;
struct _SUB_Q_HEADER;
struct _SYSENV_VALUE;
struct _SdpQueryUuid;
struct _SendLIRR_OUT;
struct _SendRNID_OUT;
struct _TAPE_PREPARE;
struct _TDI_VERSION_;
struct _TEXTUAL_LEAF;
struct _TOKEN_GROUPS;
struct _TOKEN_ORIGIN;
struct _TOKEN_SOURCE;
struct _TOPOLOGY_MAP;
struct _URB_HCD_AREA;
struct _VIDEO_MEMORY;
struct _WNODE_HEADER;
struct _WSK_BUF_LIST;
struct _WWAN_CONTEXT;
struct _WmiMonitorID;
struct _XSAVE_FORMAT;
struct __JUMP_BUFFER;
struct _finddata32_t;
struct adpcmcoef_tag;
struct in_pktinfo_ex;
struct nd_opt_rd_hdr;
struct tWAVEFORMATEX;
struct tagDRMFORWARD;
struct tagKS_RGBQUAD;
struct tcp_keepalive;
struct AddrXlatInfo;
struct HBA_MgmtInfo;
struct HBA_fc4types;
struct ICMPSNMPInfo;
struct IDrmPortVtbl;
struct IPNotifyData;
struct IPRouteBlock;
struct IPinNameVtbl;
struct IPortWavePci;
struct IPowerNotify;
struct IRegistryKey;
struct IServiceSink;
struct IUnknownVtbl;
struct LIST_ENTRY32;
struct LIST_ENTRY64;
struct SMHBA_FC_Phy;
struct SMHBA_ScsiId;
struct _ATM_ADDRESS;
struct _ATM_BHLI_IE;
struct _ATM_BLLI_IE;
struct _ATM_PVC_SAP;
struct _AUTHZ_STATE;
struct _AddLink_OUT;
struct _AddPort_OUT;
struct _BDA_PID_MAP;
struct _BIN_RESULTS;
struct _CC_HW_FIELD;
struct _CDB___CDB10;
struct _CDB___CDB12;
struct _CDB___CDB16;
struct _CDB___ERASE;
struct _CDB___PRINT;
struct _CDB___UNMAP;
struct _CPTABLEINFO;
struct _CREATE_DISK;
struct _CSADDR_INFO;
struct _ChannelInfo;
struct _CrtMemState;
struct _DDC_CONTROL;
struct _DEVICESCOPE;
struct _DISK_RECORD;
struct _DMA_ADAPTER;
struct _DSM_VERSION;
struct _DUMP_DRIVER;
struct _FBPT_RECORD;
struct _FILE_ID_128;
struct _FILE_OBJECT;
struct _FLAT_STRING;
struct _FPDT_RECORD;
struct _GPIOControl;
struct _ICMP_HEADER;
struct _IGMP_HEADER;
struct _INQUIRYDATA;
struct _IO_COUNTERS;
struct _IPV4_HEADER;
struct _IPV6_HEADER;
struct _IR_DEV_CAPS;
union _IVRS_IVINFO;
struct _KENLISTMENT;
struct _KEYBOARD_ID;
struct _KSM_BDA_PIN;
struct _KWAIT_BLOCK;
struct _LEAF_FORMAT;
struct _NDK_ADAPTER;
union _NET_LUID_LH;
struct _OS_DEP_DATA;
struct _OWNER_ENTRY;
struct _PORT_OUTPUT;
union _POWER_STATE;
struct _QOS_SD_MODE;
struct _RTC_vardesc;
struct _SI_COPYFILE;
struct _SNAP_HEADER;
struct _SRB_HISTORY;
struct _SecPkgInfoW;
struct _SendLIRR_IN;
struct _SendRLS_OUT;
struct _SendRNID_IN;
struct _SendRPL_OUT;
struct _SendRPS_OUT;
struct _SendSRL_OUT;
struct _TDI_REQUEST;
struct _TIME_FIELDS;
struct _TOKEN_OWNER;
struct _TPM20_TABLE;
struct _VENDOR_ATTR;
struct _VM_COUNTERS;
struct _VOLUMELABEL;
struct _WSK_TDI_MAP;
struct _XSTATE_SAVE;
struct _ZONE_HEADER;
struct _wfinddata_t;
struct addrinfoex2A;
struct addrinfoex2W;
struct group_filter;
union sockaddr_gen;
struct sockaddr_in6;
struct tagDRMRIGHTS;
struct tcp_opt_sack;
struct HINSTANCE__;
struct HMETAFILE__;
struct ICMPv6Stats;
struct IDmaChannel;
struct IPAddrEntry;
struct IPortEvents;
struct IPortWaveRT;
struct _ACE_HEADER;
struct _ARP_HEADER;
struct _ATM_RAW_IE;
struct _ATM_VPIVCI;
struct _AVC_PIN_ID;
struct _AddPort_IN;
struct _BDA_BUFFER;
struct _BDA_STRING;
struct _BGRT_TABLE;
struct _BOOT_TABLE;
struct _BRB_HEADER;
struct _BSSID_INFO;
struct _CDB___SEEK;
struct _CIP_LISTEN;
struct _CONFIG_ROM;
struct _CO_ADDRESS;
struct _CYCLE_TIME;
struct _D3DDDIRECT;
struct _DEVPROPKEY;
struct _DICTIONARY;
struct _DOT11_SSID;
struct _DPC_BUFFER;
struct _DS3DVECTOR;
struct _ECP_HEADER;
union _EIGHT_BYTE;
struct _FAST_MUTEX;
struct _FPDT_TABLE;
struct _FSALLOCATE;
struct _GTDT_TABLE;
struct _I2CControl;
struct _IMAGE_INFO;
struct _IO_ADDRESS;
struct _IPPT_TABLE;
struct _ISA_VECTOR;
struct _ISCSI_Path;
struct _IVHD_BLOCK;
struct _IVMD_BLOCK;
struct _KAPC_STATE;
struct _KSEMAPHORE;
struct _KS_DVD_YUV;
struct _LIST_ENTRY;
struct _LOCK_STATE;
struct _MCFG_TABLE;
union _MCG_STATUS;
union _MCI_STATUS;
struct _MLD_HEADER;
struct _MSAcpiInfo;
struct _MSWmi_Guid;
struct _NAME_CACHE;
struct _NDIS_EVENT;
struct _NDIS_TIMER;
struct _NDK_RESULT;
struct _NET_BUFFER;
struct _OEM0_TABLE;
struct _PCIBUSDATA;
struct _PUBLIC_BCB;
struct _RDBSS_DATA;
struct _RTL_BITMAP;
struct _RX_CONTEXT;
struct _SENSE_DATA;
struct _SE_EXPORTS;
struct _SMB_HEADER;
struct _SMB_PARAMS;
struct _SRBEX_DATA;
struct _SYSID_1394;
struct _SYSID_UUID;
struct _SendRLS_IN;
struct _SendRPL_IN;
struct _SendRPS_IN;
struct _SendSRL_IN;
struct _TAPE_ERASE;
struct _TA_ADDRESS;
struct _TOKEN_USER;
struct _TRACK_DATA;
struct _URB_HEADER;
struct _VAR_STRING;
struct _VIDEO_MODE;
struct _V_NET_ROOT;
struct _WSK_SOCKET;
struct _WST_BUFFER;
struct _XSAVE_AREA;
struct __utimbuf32;
struct __utimbuf64;
struct _diskfree_t;
struct _finddata_t;
struct addrinfoexA;
struct addrinfoexW;
struct in6_pktinfo;
struct ip_msfilter;
struct nd_redirect;
struct sockaddr_dl;
struct sockaddr_in;
struct tcp_opt_mss;
struct HBA_ScsiId;
struct HMONITOR__;
struct HPALETTE__;
struct IPSNMPInfo;
struct POHANDLE__;
struct SLIT_TABLE;
struct SMHBA_LUID;
union SMHBA_Port;
struct _ACPI_MPST;
struct _ACPI_MSCT;
struct _ACPI_SRAT;
struct _APICTABLE;
struct _BIN_COUNT;
struct _BIN_RANGE;
struct _CDROM_TOC;
struct _CHAR_INFO;
struct _CIP_FRAME;
struct _CLIENT_ID;
struct _CO_HEADER;
struct _DMARTABLE;
struct _ENG_EVENT;
struct _ERESOURCE;
struct _FCP_FRAME;
struct _FILE_LOCK;
union _FOUR_BYTE;
struct _HBAScsiID;
struct _HIDP_CAPS;
struct _HIDP_DATA;
struct _INTERFACE;
struct _KSMAPPING;
struct _KS_COLCON;
struct _LARGE_MCB;
struct _LLDP_MSAP;
union _MCI_STATS;
struct _MRX_FOBX_;
struct _NDIS_GUID;
struct _NDIS_PORT;
struct _OS_STRING;
struct _PCC_TABLE;
struct _PCI_PMCSR;
struct _PMI_EVENT;
struct _READ_LIST;
struct _REFERENCE;
struct _RIORESULT;
struct _SCSI_ADDR;
struct _SFI_TIMER;
struct _SPEED_MAP;
struct _SecBuffer;
struct _SecHandle;
struct _VIDEO_VDM;
struct _exception;
struct _stat32i64;
struct _stat64i32;
struct in_pktinfo;
struct nd_opt_hdr;
struct nd_opt_mtu;
struct tagDEVCAPS;
struct tcp_opt_ts;
struct tcp_opt_ws;
struct HBA_FcpId;
struct HBITMAP__;
struct HSPRITE__;
struct HWINSTA__;
struct ICMPStats;
struct IDrmPort2;
struct IMiniport;
struct IPinCount;
struct IPortMidi;
struct IPortVtbl;
struct _BASE_MCB;
struct _CIP_HDR1;
struct _CIP_STOP;
struct _CIP_TALK;
union _DL_EUI48;
union _DL_EUI64;
struct _DXGK_PDE;
struct _DXGK_PTE;
struct _ECP_LIST;
struct _FCB_LOCK;
struct _FILETIME;
struct _FLOAT128;
struct _FPO_DATA;
struct _GEN_ADDR;
struct _HBAFCPID;
struct _KSDEVICE;
struct _KSFILTER;
struct _LLDP_TLV;
struct _LOG_PAGE;
struct _LUN_LIST;
union _MCI_ADDR;
struct _MRX_FCB_;
struct _NET_ROOT;
struct _NT_TIB32;
struct _NT_TIB64;
struct _OBJECTID;
struct _PCW_DATA;
struct _PERF_BIN;
struct _PTS_DATA;
struct _Q2931_IE;
struct _RXCE_VC_;
struct _SDP_NODE;
union _SMB_DATE;
union _SMB_TIME;
struct _SRV_CALL;
struct _SRV_OPEN;
struct _STOR_DPC;
struct _STRING32;
struct _STRING64;
union _TWO_BYTE;
struct _VGA_CHAR;
struct _VLAN_TAG;
struct _WHEA128A;
struct _X_FILTER;
struct __timeb32;
struct __timeb64;
struct _flowspec;
struct _heapinfo;
union _timecode;
struct addrinfoW;
struct group_req;
struct ipv6_mreq;
struct tagPOINTS;
struct utimbuf32;
struct HACCEL__;
struct HBA_LUID;
struct HBRUSH__;
struct HLSURF__;
struct IDrmPort;
struct IPinName;
struct IUnknown;
struct _ATM_SAP;
struct _AVC_IRB;
struct _BRB_PSM;
struct _CLS_LSN;
struct _CONTEXT;
struct _CSTRING;
union _DL_EI48;
union _DL_EI64;
struct _DSM_IDS;
struct _FEALIST;
struct _GEALIST;
struct _IDEREGS;
struct _IOSAPIC;
struct _KMUTANT;
struct _KSM_PIN;
struct _MSFC_TM;
struct _NDK_SGE;
struct _NDK_SRQ;
struct _PCI_PMC;
struct _RIO_BUF;
struct _RSDT_32;
struct _RSDT_64;
struct _SELF_ID;
struct _T0_DATA;
struct _T1_DATA;
struct _WSK_BUF;
struct __VRB_SG;
struct _complex;
struct _stati64;
struct _utimbuf;
struct addrinfo;
struct in6_addr;
struct sockaddr;
struct tagLC_ID;
struct tagPOINT;
struct HBA_wwn;
struct HDESK__;
struct HFONT__;
struct HGLRC__;
struct HHOOK__;
struct HICON__;
struct HMENU__;
struct HMSAP__;
struct HRSRC__;
struct HTASK__;
struct HUMPD__;
struct _AV_PCR;
struct _CO_PVC;
union _DL_OUI;
struct _DVINFO;
struct _FSINFO;
struct _IOAPIC;
struct _IO_CSQ;
struct _KEVENT;
struct _KQUEUE;
struct _KSGATE;
struct _KTIMER;
union _LENGTH;
struct _NDK_CQ;
struct _NDK_MR;
struct _NDK_MW;
struct _NDK_PD;
struct _NDK_QP;
struct _NT_TIB;
struct _POINTL;
struct _STRING;
union _UCHAR1;
union _UCHAR2;
union _UCHAR4;
struct _WSABUF;
struct _WSAMSG;
struct __m128d;
union __m128i;
union __m256i;
struct _ldiv_t;
struct _stat32;
struct _stat64;
struct cmsghdr;
struct in_addr;
struct ip_mreq;
struct tagRECT;
struct tagSIZE;
struct tcp_hdr;
struct utimbuf;
struct HKEY__;
struct HPEN__;
struct HRGN__;
struct HSTR__;
struct HWND__;
struct RX_LOG;
union _CDB32;
struct _COORD;
struct _KGATE;
struct _KSPIN;
struct _M128A;
struct _MAPIC;
struct _RECTL;
union __m128;
union __m256;
struct _div_t;
struct _iobuf;
struct _timeb;
struct HDC__;
struct HKL__;
struct IPort;
struct _ATSR;
struct _CROM;
struct _DMAR;
struct _DRHD;
struct _DSDT;
struct _EAOP;
struct _FACS;
struct _FADT;
struct _FOBX;
struct _GUID;
struct _IPCR;
struct _IVRS;
struct _KAPC;
struct _KDPC;
struct _KPCR;
struct _LUID;
struct _OPCR;
struct _QUAD;
struct _RHSA;
struct _RMRR;
struct _RSDP;
struct _XSDT;
union __m64;
struct _stat;
struct lconv;
struct timeb;
struct _ACL;
struct _BRB;
union _CDB;
struct _FCB;
struct _FEA;
struct _GEA;
struct _IRB;
struct _IRP;
struct _KTM;
struct _MCB;
struct _MDL;
struct _NPI;
struct _SID;
struct _URB;
struct _VPB;
struct stat;
struct tm;

struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23___0516FB65A30BF30ED1CBCB9E0A080D81 {unsigned int NextHeader : 8;unsigned int PadLength : 8;unsigned int AhHeaderOffset : 8;unsigned int EspHeaderOffset : 8;};
struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23___A160C96603A00ACF5A7C4A243294620B {unsigned int NextHeader : 8;unsigned int PadLength : 8;unsigned int HeaderInfoSet : 1;};
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY___2AA764CCAD4465B40EF2819DA8B429D2___19436C2F0C0C306A8BFD7B32BBC2825D {unsigned int DisableExtensionPoints : 1;unsigned int ReservedFlags : 31;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___0260175AB369BB076E5DF9D52C499CDD {unsigned int MSS : 20;unsigned int TcpHeaderOffset : 10;unsigned int Type : 1;unsigned int Reserved2 : 1;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___03284708F4EE9EB7399C911CFB45E6EF {unsigned int Reserved : 30;unsigned int Type : 1;unsigned int Reserved2 : 1;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___66F6FAC6CA82FDCEBF26995791DDFFA4 {unsigned int MSS : 20;unsigned int TcpHeaderOffset : 10;unsigned int Type : 1;unsigned int IPVersion : 1;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___D27B19D2597F90E0BBF2A289F6F401BB {unsigned int Unused : 30;unsigned int Type : 1;unsigned int Reserved2 : 1;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___D9FABD0107FA781F545DDC567DED4A6C {unsigned int TcpPayload : 30;unsigned int Type : 1;unsigned int Reserved2 : 1;};
struct _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR___31591524D764D3BBCEB254E6332A248B___6F865FCB40142115B3FDCF5472778760 {unsigned int Reserved : 1;unsigned int LPMCapable : 1;unsigned int BESLAndAlternateHIRDSupported : 1;unsigned int BaselineBESLValid : 1;unsigned int DeepBESLValid : 1;unsigned int Reserved1 : 3;unsigned int BaselineBESL : 4;unsigned int DeepBESL : 4;unsigned int Reserved2 : 16;};
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY___8220F45EC4CA30F4B7BEFF9D32D9F1CE___E68E69178BF9C90E9AD3136A5DA83667 {unsigned int RaiseExceptionOnInvalidHandleReference : 1;unsigned int HandleExceptionsPermanentlyEnabled : 1;unsigned int ReservedFlags : 30;};
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY___E355F55852CE4C01F070476D6F7C9BBB___1D6DC8237BA491DDA746AC6A0CA5DF74 {unsigned int DisallowWin32kSystemCalls : 1;unsigned int ReservedFlags : 31;};
struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8___9953234E643C1BF94D82499C45A21BA5 {unsigned char MaxStreams : 5;unsigned char Reserved1 : 3;};
struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8___E412C98F24301A3F500510DCA8E67F3B {unsigned char Mult : 2;unsigned char Reserved2 : 6;};
struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83___CC46BAFA385FB9077FD080B9665E9ABA {unsigned int SaDeleteReq : 1;unsigned int CryptoDone : 1;unsigned int NextCryptoDone : 1;unsigned int Reserved : 13;unsigned int CryptoStatus : 16;};
struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A___7AB4B1C9EFBFAEDCB742AC6C2C0A9748 {unsigned int IsIPv4 : 1;unsigned int IsIPv6 : 1;unsigned int TcpChecksum : 1;unsigned int UdpChecksum : 1;unsigned int IpHeaderChecksum : 1;unsigned int Reserved : 11;unsigned int TcpHeaderOffset : 10;};
struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A___8EB7A50067A0464F8BEB6BA6FAD84C81 {unsigned int TcpChecksumFailed : 1;unsigned int UdpChecksumFailed : 1;unsigned int IpChecksumFailed : 1;unsigned int TcpChecksumSucceeded : 1;unsigned int UdpChecksumSucceeded : 1;unsigned int IpChecksumSucceeded : 1;unsigned int Loopback : 1;};
struct _DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS___CD4A4751E03E0E13D07F13C0897CF7F0___345C9315266921A5615E194C0B7E8CDB {unsigned int Reserved : 32;};
struct _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS___0A21D9AE078C811356AA56F1AA8C2BF4___DFB25419D061610BA88AF429AD796DE8 {unsigned int NominalRange : 1;unsigned int Bt709 : 1;unsigned int xvYCC : 1;unsigned int Reserved : 29;};
struct _D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS___A8B88D5BDB1228732AE547855E9ABDB5___4E1282F14A853ABC73F5BB5DDE693C4C {unsigned int Shared : 1;unsigned int NtSecuritySharing : 1;unsigned int Reserved : 29;unsigned int Reserved0 : 1;};
struct _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS___034D7373B817C02422E4D62DA035E5FF___E2BAFAAC7C89847FEE3380BA63F38ACC {unsigned int ValidPhysicalAdapterMask : 1;unsigned int Reserved : 31;};
struct _PROCESS_EXTENDED_BASIC_INFORMATION___E6BF994F87CD7E8E9F73233F6875B43D___93879C939F9799A7AEAC28A80CFADCC1 {unsigned int IsProtectedProcess : 1;unsigned int IsWow64Process : 1;unsigned int IsProcessDeleting : 1;unsigned int IsCrossSessionCreate : 1;unsigned int IsFrozen : 1;unsigned int IsBackground : 1;unsigned int IsStronglyNamed : 1;unsigned int SpareBits : 25;};
struct _D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS___655BA7FA29CCB4E6E8B3A600E5702580___CDF29082CFF35E0EAA14A197F1DCF33C {unsigned int Rotate : 1;unsigned int Reserved : 31;};
struct _DXGK_CREATECONTEXTALLOCATIONFLAGS___61A6213A88C057D16E4E0A395CF0FF00___7E05657BE3DFA69514CB298BBA2D5DDF {unsigned int SharedAcrossContexts : 1;unsigned int Reserved : 31;};
struct _DXGK_SETVIDPNSOURCEADDRESS_FLAGS___0DB8D2702BCADD830BEA3156E7D1B675___BE2C2AF3484C88CA375E3E49ACA8104B {unsigned int ModeChange : 1;unsigned int FlipImmediate : 1;unsigned int FlipOnNextVSync : 1;unsigned int FlipStereo : 1;unsigned int FlipStereoTemporaryMono : 1;unsigned int FlipStereoPreferRight : 1;unsigned int SharedPrimaryTransition : 1;unsigned int Reserved : 25;};
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY___45A98C1F8CA82C31F92D6F2DB941F5BF___63C64F7D5703FAD7B76B7BD1AFA1ED4F {unsigned int Flag : 2;unsigned int FunctionLength : 11;unsigned int Ret : 2;unsigned int H : 1;unsigned int Reg : 3;unsigned int R : 1;unsigned int L : 1;unsigned int C : 1;unsigned int StackAdjust : 10;};
struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755___7FC436678155DFA8ADAC694F8425CDB1 {unsigned int NdisPacketChecksumV4 : 1;unsigned int NdisPacketChecksumV6 : 1;unsigned int NdisPacketTcpChecksum : 1;unsigned int NdisPacketUdpChecksum : 1;unsigned int NdisPacketIpChecksum : 1;};
struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755___8D27D99A3565F20450334F9AF7D1743A {unsigned int NdisPacketTcpChecksumFailed : 1;unsigned int NdisPacketUdpChecksumFailed : 1;unsigned int NdisPacketIpChecksumFailed : 1;unsigned int NdisPacketTcpChecksumSucceeded : 1;unsigned int NdisPacketUdpChecksumSucceeded : 1;unsigned int NdisPacketIpChecksumSucceeded : 1;unsigned int NdisPacketLoopback : 1;};
struct _NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671___4902617F7B303E67E1AC49578C09A516 {unsigned int UserPriority : 3;unsigned int CanonicalFormatId : 1;unsigned int VlanId : 12;unsigned int Reserved : 16;};
struct _NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671___EA4052A1E868B7B130C491D1B37AF88C {unsigned int UserPriority : 3;unsigned int CanonicalFormatId : 1;unsigned int VlanId : 12;unsigned int WMMInfo : 4;unsigned int Reserved : 12;};
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___551B0CF679922063F379905F8C1D5CE8___B2E03ED94C06E2E681F8D03FF7FF5CB3 {unsigned int OffsetToDirectory : 31;unsigned int DataIsDirectory : 1;};
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___B42F2B2B4BBA4E8DC819D947841EA255___6E35CCFC02D81E31BD4C6BEDD77CB20A {unsigned int NameOffset : 31;unsigned int NameIsString : 1;};
struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD___0A44648A440ADCC9299E094591176B02___37464B1A6F609AC6C12E19D8BB9038F5 {unsigned int ExpressNativeHotPlug : 1;unsigned int ShpcNativeHotPlug : 1;unsigned int ExpressNativePME : 1;unsigned int ExpressAdvancedErrorReporting : 1;unsigned int ExpressCapabilityStructure : 1;unsigned int LatencyToleranceReporting : 1;unsigned int Reserved : 26;};
struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD___12366B4554501CEE1BDEB101C5AF44CF___E5C749320C6A4B994D255A206596AE24 {unsigned int ExtendedConfigOpRegions : 1;unsigned int ActiveStatePowerManagement : 1;unsigned int ClockPowerManagement : 1;unsigned int SegmentGroups : 1;unsigned int MessageSignaledInterrupts : 1;unsigned int OptimizedBufferFlushAndFill : 1;unsigned int AspmOptionality : 1;unsigned int Reserved : 25;};
struct _PROCESS_MITIGATION_ASLR_POLICY___92EEC1AC3E0202E7FB93616558A78AB6___5FDB0C128CAE6B510A580B0DF7449C28 {unsigned int EnableBottomUpRandomization : 1;unsigned int EnableForceRelocateImages : 1;unsigned int EnableHighEntropy : 1;unsigned int DisallowStrippedImages : 1;unsigned int ReservedFlags : 28;};
struct _DXGK_MULTIPLANE_OVERLAY_BLEND___1E37BDD2558EEDD3B8B05F66E3722F95___1D6D566DFEE76AA38DC565683F37F64C {unsigned int AlphaBlend : 1;unsigned int Reserved : 31;};
struct _DXGK_MULTIPLANE_OVERLAY_FLAGS___BA4570F1357798E6B2AAE11FBDFE711D___2E6AB168D1113E8CF440FBE7992D8305 {unsigned int VerticalFlip : 1;unsigned int HorizontalFlip : 1;unsigned int Reserved : 30;};
struct _OB_POST_OPERATION_INFORMATION___9E26F4D194EE3F8ED97EC5420551EEA8___076C9C0F1A3FEA506D5A7AF627950FBD {unsigned int KernelHandle : 1;unsigned int Reserved : 31;};
struct _PROCESS_MITIGATION_DEP_POLICY___F116839C509786518B7C72B8B76ECE10___7C60618F8DDAB6C9415DCB902B86CBEA {unsigned int Enable : 1;unsigned int DisableAtlThunkEmulation : 1;unsigned int ReservedFlags : 30;};
struct _DXGKARG_UPDATEPAGETABLEFLAGS___050F7664A78ED8E1CD2034B3C2BB2C31___FFEA0779933AD6F1B13728E00B6E6752 {unsigned int LinearAccess : 1;unsigned int Reserved : 31;};
struct _DXGK_DESCRIBEALLOCATIONFLAGS___2BE12FD22C72134B114850BA9D4E091D___E88790A9D38B7E0F112158D6B120A378 {unsigned int CheckDisplayMode : 1;unsigned int Reserved : 31;};
struct _DXGK_SETPOINTERPOSITIONFLAGS___EDB2CF8C2113AC57422ADD41F1F67284___DC9AFCC46158ADD751499DECE1101FF4 {unsigned int Visible : 1;unsigned int Procedural : 1;unsigned int Reserved : 30;};
struct _HDAUDIO_CODEC_RESPONSE_________F7A0B89072390A37182FF8981BAE8E57___41EFFB85977F698B0114BF219457EB7D {unsigned int Response : 21;unsigned int SubTag : 5;unsigned int Tag : 6;};
struct _HIDP_KEYBOARD_MODIFIER_STATE___09F65E3D8EC31FFE3E62B668D67CDD30___CCD288663407EB3BCE693252A6740B18 {unsigned int LeftControl : 1;unsigned int LeftShift : 1;unsigned int LeftAlt : 1;unsigned int LeftGUI : 1;unsigned int RightControl : 1;unsigned int RightShift : 1;unsigned int RightAlt : 1;unsigned int RigthGUI : 1;unsigned int CapsLock : 1;unsigned int ScollLock : 1;unsigned int NumLock : 1;unsigned int Reserved : 21;};
struct _OB_PRE_OPERATION_INFORMATION___27673A9B23E3827F846C9CF36744DA66___076C9C0F1A3FEA506D5A7AF627950FBD {unsigned int KernelHandle : 1;unsigned int Reserved : 31;};
struct _DXGK_CREATEALLOCATIONFLAGS2___D1A97408460E1FEA85F44866C81053FF___E01109843263E8591DC4620CD33ADE5E {unsigned int Resource : 1;unsigned int Reserved : 31;};
struct _DXGK_DESTROYALLOCATIONFLAGS___A1DA969D0BF462BE86DF3AAFED10CC89___C8C18221F12F9B6646A01B1C2F8CB3B2 {unsigned int DestroyResource : 1;unsigned int Reserved : 31;};
struct _POWER_STATE_CHARACTERISTICS___3444A41F8A39DA3EB5A6D35169EAB189___9EE6C19477BE1283A4921B5F7832FFB5 {unsigned char Value : 6;unsigned char Revision : 2;};
struct _DISPATCHER_HEADER____________9AEC1978167063A5A657752090B9C59F___2FBC6CFED9A28A64EC4EE027A1B73629 {unsigned char Index : 1;unsigned char Processor : 5;unsigned char Inserted : 1;unsigned char Expired : 1;};
struct _DISPATCHER_HEADER____________AAB494C8674620924F4E93AFE0F5B426___F32BA6C812E0F769F09938C2098D009F {unsigned char Absolute : 1;unsigned char Wake : 1;unsigned char EncodedTolerableDelay : 6;};
struct _DISPATCHER_HEADER____________E0F499287B198740481681CBD6043B35___A88D3AAC38BB26B7BA3A58BD453FEA82 {unsigned char CycleProfiling : 1;unsigned char CounterProfiling : 1;unsigned char GroupScheduling : 1;unsigned char AffinitySet : 1;unsigned char Reserved : 4;};
struct _DXGK_CREATEALLOCATIONFLAGS___2C1DE17B3602DD7A1C3B69ADBEDBC48A___E01109843263E8591DC4620CD33ADE5E {unsigned int Resource : 1;unsigned int Reserved : 31;};
struct _DXGK_POWER_COMPONENT_FLAGS___D180033327BF7FFFCDCE62B6821A55F9___3F2E209B917263CF550E0B49950B9820 {unsigned int Reserved0 : 1;unsigned int DriverCompletesFStateTransition : 1;unsigned int TransitionTo_F0_OnDx : 1;unsigned int Reserved : 29;};
struct _DXGK_SEGMENTBANKPREFERENCE___C6C7745BB49F41DCAE1615122A006DD8___0FD2D93B789A5FCF458225CD4A369FB3 {unsigned int Bank0 : 7;unsigned int Direction0 : 1;unsigned int Bank1 : 7;unsigned int Direction1 : 1;unsigned int Bank2 : 7;unsigned int Direction2 : 1;unsigned int Bank3 : 7;unsigned int Direction3 : 1;};
struct _IMAGE_DELAYLOAD_DESCRIPTOR___24F6574E5593E2C842E103EF8265DC95___CDB9B99D549B790D4C735D013865E181 {unsigned int RvaBased : 1;unsigned int ReservedAttributes : 31;};
struct _SYSTEM_POWER_STATE_CONTEXT___364D4FCA241438740838CF50D18006E2___76514DB155979F88E47E6F460A9859AB {unsigned int Reserved1 : 8;unsigned int TargetSystemState : 4;unsigned int EffectiveSystemState : 4;unsigned int CurrentSystemState : 4;unsigned int IgnoreHibernationPath : 1;unsigned int PseudoTransition : 1;unsigned int Reserved2 : 10;};
struct _D3DDDI_CREATECONTEXTFLAGS___DEAF33FA41163E0FF876B6E6CC0834BA___A9A58C11A3F64E28737E050ADF9B46C1 {unsigned int NullRendering : 1;unsigned int Reserved : 31;};
struct _D3DKM_TRANSPARENTBLTFLAGS___70EB8777C082EFE4C602960A67FF671E___24F29349B034DA5093C49395AAA12BF0 {unsigned int HonorAlpha : 1;};
struct _DXGKCB_GETHANDLEDATAFLAGS___5572F66C59C9F3A90BDF1613B7A48E48___42C27059EB34331C14506940C3DD3E8E {unsigned int DeviceSpecific : 1;unsigned int Reserved : 31;};
struct _DXGK_ALLOCATIONINFOFLAGS2___98E3A45A4DBE36C032B4E4AC2E8B9F54___C427DD94C55A9E97BD86B465543B898E {unsigned int CpuVisible : 1;unsigned int ReadOnly : 1;unsigned int PermanentSysMem : 1;unsigned int Cached : 1;unsigned int ExistingSysMem : 1;unsigned int ExistingKernelSysMem : 1;unsigned int Swizzled : 1;unsigned int Overlay : 1;unsigned int Capture : 1;unsigned int SynchronousPaging : 1;unsigned int LinkMirrored : 1;unsigned int LinkInstanced : 1;unsigned int Reserved : 5;unsigned int Reserved14 : 1;unsigned int Reserved13 : 1;unsigned int Reserved12 : 1;unsigned int Reserved11 : 1;unsigned int Reserved10 : 1;unsigned int Reserved9 : 1;unsigned int Reserved8 : 1;unsigned int Reserved7 : 1;unsigned int Reserved6 : 1;unsigned int Reserved5 : 1;unsigned int Reserved4 : 1;unsigned int Reserved3 : 1;unsigned int Reserved2 : 1;unsigned int Reserved1 : 1;unsigned int Reserved0 : 1;};
struct _DXGK_ALLOCATIONUSAGEINFO1___C317DE8A1589ADE636AC0CB74A84EADC___9F321F4B5FA7A669E9D040477F8E568E {unsigned int PrivateFormat : 1;unsigned int Swizzled : 1;unsigned int MipMap : 1;unsigned int Cube : 1;unsigned int Volume : 1;unsigned int Vertex : 1;unsigned int Index : 1;unsigned int Reserved : 25;};
struct _NOTIFICATION_MEDIA_STATUS___7F016F2347F7A626442932B97010E935___A64B2677AFBFBDCEB30F044C30307B18 {unsigned char DoorTrayOpen : 1;unsigned char MediaPresent : 1;unsigned char ReservedX : 6;};
struct _PCC_GENREIC_SHARED_REGION___10E8DF4D696433E5BFD564CD1D883F8C___5D29C60EE4488AD58BAF5859C3F8BDA7 {unsigned short CommandComplete : 1;unsigned short SciReceived : 1;unsigned short Error : 1;unsigned short PlatformNotification : 1;unsigned short Reserved : 12;};
struct _PCC_GENREIC_SHARED_REGION___27BE20E7AAEF8A28D5A3593632264250___90C390148895C12A0A32B55ABE6D8EAE {unsigned short CommandCode : 8;unsigned short ReservedZ : 7;unsigned short SciDoorbell : 1;};
struct _D3DDDI_PATCHLOCATIONLIST___0F98B9AEA6B883F69971393929BE9C10___69927EDEEA6AC7340BCC2157C3B7C3D1 {unsigned int SlotId : 24;unsigned int Reserved : 8;};
struct _DXGK_ALLOCATIONINFOFLAGS___9EBD3D271EAD7213A5F7051B20FA4555___950F9B92EEAE96A4D30B381EE96D24DD {unsigned int CpuVisible : 1;unsigned int PermanentSysMem : 1;unsigned int Cached : 1;unsigned int Protected : 1;unsigned int ExistingSysMem : 1;unsigned int ExistingKernelSysMem : 1;unsigned int FromEndOfSegment : 1;unsigned int Swizzled : 1;unsigned int Overlay : 1;unsigned int Capture : 1;unsigned int UseAlternateVA : 1;unsigned int SynchronousPaging : 1;unsigned int LinkMirrored : 1;unsigned int LinkInstanced : 1;unsigned int Reserved : 7;unsigned int Reserved14 : 1;unsigned int Reserved13 : 1;unsigned int Reserved12 : 1;unsigned int Reserved11 : 1;unsigned int Reserved10 : 1;unsigned int Reserved9 : 1;unsigned int Reserved4 : 1;unsigned int Reserved3 : 1;unsigned int Reserved2 : 1;unsigned int Reserved1 : 1;unsigned int Reserved0 : 1;};
struct _DXGK_DISCARDCONTENTFLAGS___833EF5D1359128C4E733B4C6CE94D49D___9D6029052F7B0E3E2C067326CF632F2F {unsigned int AllocationIsIdle : 1;unsigned int Reserved : 31;};
struct _DXGK_OPENALLOCATIONFLAGS___D8A898C3CC121BAA810A888BA7378A03___2524EDBD7812635A3843940AD983396F {unsigned int Create : 1;unsigned int ReadOnly : 1;unsigned int Reserved : 30;};
struct _DXGK_PREEMPTCOMMANDFLAGS___0D5650F9498A6B37A04F693A28355D8E___345C9315266921A5615E194C0B7E8CDB {unsigned int Reserved : 32;};
struct _HDAUDIO_CONVERTER_FORMAT___268651D303ED1FF2E9E207C3C058BF27___52D101C152B9345B1B2B55DAFF1D826A {unsigned short NumberOfChannels : 4;unsigned short BitsPerSample : 3;unsigned short : 1;unsigned short SampleRate : 7;unsigned short StreamType : 1;};
struct _DXGK_CREATECONTEXTFLAGS___DCE14139BF8D7994AEB61B9C12A1E22E___C8FF0F71D1DECFDFBC4298EE6EB8855C {unsigned int SystemContext : 1;unsigned int GdiContext : 1;unsigned int Reserved : 30;};
struct _DXGK_SUBMITCOMMANDFLAGS___6731932D94F59BD250F28E6270D01601___E01BF2757404D736E57C9E3AA2534032 {unsigned int Paging : 1;unsigned int Present : 1;unsigned int RedirectedPresent : 1;unsigned int NullRendering : 1;unsigned int Flip : 1;unsigned int FlipWithNoWait : 1;unsigned int ContextSwitch : 1;unsigned int Reserved : 25;};
struct _DXGK_VIRTUALADDRESSCAPS___B92D749DF1DD3B9524F85FA541BF8C4B___378DCE61C23BA3BD955527BB5BA03BB5 {unsigned int PrivilegedMemorySupported : 1;unsigned int ReadOnlyMemorySupported : 1;unsigned int Reserved : 30;};
struct _SD_RW_EXTENDED_ARGUMENT___C73E6A1E0D5770B9EB75E35F076E7DDA___2F9E36BBACC6AB85E16B14DB0738C6FC {unsigned int Count : 9;unsigned int Address : 17;unsigned int OpCode : 1;unsigned int BlockMode : 1;unsigned int Function : 3;unsigned int WriteToDevice : 1;};
struct _CDB___SPACE_TAPE_MARKS___452053D96BC8D647FEF06A172E57CD82___723BA1E74126376B75E150C11F3E5EB8 {unsigned char Link : 1;unsigned char Flag : 1;unsigned char Reserved : 4;unsigned char VendorUnique : 2;};
struct _D3DDDI_ALLOCATIONINFO2___C37602EC42612761CBD3C806D59105EF___9C54106681C0543AF5CF76AF186F5814 {unsigned int Primary : 1;unsigned int Stereo : 1;unsigned int Reserved : 30;};
struct _DXGK_CREATEDEVICEFLAGS___2F67346E464C3CB5F4584001891B2DBB___0116588DB9BEA0AA997CFE1F8AEDB2A9 {unsigned int SystemDevice : 1;unsigned int GdiDevice : 1;unsigned int Reserved : 29;unsigned int Reserved0 : 1;};
struct _DXGK_GDIARG_STRETCHBLT___72D9C1E774232B238E507145974EF112___FCA50DB8B571C289B3C0AE05392B03C2 {unsigned int Mode : 16;unsigned int MirrorX : 1;unsigned int MirrorY : 1;};
struct _DXGK_SEGMENTPREFERENCE___5F0E46343C77D0D7B0B3DAC6467FFF79___59FADADC9B5649AD99C3978E94186D1F {unsigned int SegmentId0 : 5;unsigned int Direction0 : 1;unsigned int SegmentId1 : 5;unsigned int Direction1 : 1;unsigned int SegmentId2 : 5;unsigned int Direction2 : 1;unsigned int SegmentId3 : 5;unsigned int Direction3 : 1;unsigned int SegmentId4 : 5;unsigned int Direction4 : 1;unsigned int Reserved : 2;};
struct _NDIS_PACKET_8021Q_INFO___8882A3A36CF70686E2666AD9F1873AAF___4902617F7B303E67E1AC49578C09A516 {unsigned int UserPriority : 3;unsigned int CanonicalFormatId : 1;unsigned int VlanId : 12;unsigned int Reserved : 16;};
struct _NV_SEP_CACHE_PARAMETER___D6AAA6E512359887CA6B2F20090C3374___E45BAA110AECCF8491FEADB615702004 {unsigned char WriteCacheEnabled : 1;unsigned char WriteCacheChangeable : 1;unsigned char WriteThroughIOSupported : 1;unsigned char FlushCacheSupported : 1;unsigned char ReservedBits : 4;};
struct _PCIX_BRIDGE_CAPABILITY___0853D9480451221ACDFBE7118BCCBE8E___A5A2E6C5BBBC81C26B0C8B0B46C9ACE9 {unsigned int SelectSecondaryRegisters : 1;unsigned int ErrorPresentInOtherBank : 1;unsigned int AdditionalCorrectableError : 1;unsigned int AdditionalUncorrectableError : 1;unsigned int ErrorPhase : 3;unsigned int ErrorCorrected : 1;unsigned int Syndrome : 8;unsigned int ErrorFirstCommand : 4;unsigned int ErrorSecondCommand : 4;unsigned int ErrorUpperAttributes : 4;unsigned int ControlUpdateEnable : 1;unsigned int Rsvd : 1;unsigned int DisableSingleBitCorrection : 1;unsigned int EccMode : 1;};
struct _PCIX_BRIDGE_CAPABILITY___CA70B71BC10E862FDC7C78E196CAE6C9___AC22FB39CB111AE2AB9424F0EC3161C0 {unsigned short Bus64Bit : 1;unsigned short Bus133MHzCapable : 1;unsigned short SplitCompletionDiscarded : 1;unsigned short UnexpectedSplitCompletion : 1;unsigned short SplitCompletionOverrun : 1;unsigned short SplitRequestDelayed : 1;unsigned short BusModeFrequency : 4;unsigned short Rsvd : 2;unsigned short Version : 2;unsigned short Bus266MHzCapable : 1;unsigned short Bus533MHzCapable : 1;};
struct _PCIX_BRIDGE_CAPABILITY___EECBA3A91F5E25257CAAF226CCCFD303___4AE0EDF6FA0F41D2DD767ECA4BD149D4 {unsigned int FunctionNumber : 3;unsigned int DeviceNumber : 5;unsigned int BusNumber : 8;unsigned int Device64Bit : 1;unsigned int Device133MHzCapable : 1;unsigned int SplitCompletionDiscarded : 1;unsigned int UnexpectedSplitCompletion : 1;unsigned int SplitCompletionOverrun : 1;unsigned int SplitRequestDelayed : 1;unsigned int Rsvd : 7;unsigned int DIMCapable : 1;unsigned int Device266MHzCapable : 1;unsigned int Device533MHzCapable : 1;};
struct _D3DDDI_ALLOCATIONINFO___9C237A8DCEB414086FDDD8CA87C44C50___9C54106681C0543AF5CF76AF186F5814 {unsigned int Primary : 1;unsigned int Stereo : 1;unsigned int Reserved : 30;};
struct _D3DDDI_ALLOCATIONLIST___C80EEC70EA5C50DBE7190B67C99082D6___397A5E6133528C3EDF71A6FF599DC983 {unsigned int WriteOperation : 1;unsigned int DoNotRetireInstance : 1;unsigned int OfferPriority : 3;unsigned int Reserved : 27;};
struct _D3DDDI_RESOURCEFLAGS2___81001EC007C0C438D87887A3711AD82F___4414E5F7522B3B16D586B912F1160829 {unsigned int VideoEncoder : 1;unsigned int UserMemory : 1;unsigned int Reserved : 30;};
struct _DXGK_BRIGHTNESS_STATE___66C590267A583B1EC093FE09AF2A9D94___3896E537B3BD1A832A0D287DD3B20842 {unsigned int SmoothBrightness : 1;unsigned int Reserved : 31;};
struct _DXGK_MAPAPERTUREFLAGS___D42F3BF489806A17BD1D237EC4E3FA1A___A5CB05A35B193C4D681B1357F34313FE {unsigned int CacheCoherent : 1;unsigned int Reserved : 31;};
struct _DXGK_PRESENTATIONCAPS___C11F8E6BC7C43C2BB3DD3E618E55E425___FDD1F284E5E2ED5A188B9EC3BD77B504 {unsigned int NoScreenToScreenBlt : 1;unsigned int NoOverlapScreenBlt : 1;unsigned int SupportKernelModeCommandBuffer : 1;unsigned int NoSameBitmapAlphaBlend : 1;unsigned int NoSameBitmapStretchBlt : 1;unsigned int NoSameBitmapTransparentBlt : 1;unsigned int NoSameBitmapOverlappedAlphaBlend : 1;unsigned int NoSameBitmapOverlappedStretchBlt : 1;unsigned int DriverSupportsCddDwmInterop : 1;unsigned int Reserved0 : 1;unsigned int AlignmentShift : 4;unsigned int MaxTextureWidthShift : 3;unsigned int MaxTextureHeightShift : 3;unsigned int SupportAllBltRops : 1;unsigned int SupportMirrorStretchBlt : 1;unsigned int SupportMonoStretchBltModes : 1;unsigned int StagingRectStartPitchAligned : 1;unsigned int NoSameBitmapBitBlt : 1;unsigned int NoSameBitmapOverlappedBitBlt : 1;unsigned int Reserved1 : 1;unsigned int NoTempSurfaceForClearTypeBlend : 1;unsigned int SupportSoftwareDeviceBitmaps : 1;unsigned int NoCacheCoherentApertureMemory : 1;unsigned int SupportLinearHeap : 1;unsigned int Reserved : 1;};
struct _HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C___18F6A2D84AEBEE4DBCB00498C19F6546 {unsigned int Data : 8;unsigned int VerbId : 12;unsigned int Node : 8;unsigned int CodecAddress : 4;};
struct _HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C___553B430681195D47D9945C050CB38E82 {unsigned int Data : 16;unsigned int VerbId : 4;unsigned int Node : 8;unsigned int CodecAddress : 4;};
struct _IPV4_TIMESTAMP_OPTION___2E193DEAAB8F2BBFABCD47F30D0D12BC___E0327DE6E6EA79E8CEF3B61154C13EF9 {unsigned char Flags : 4;unsigned char Overflow : 4;};
struct _PS_CREATE_NOTIFY_INFO___0573261C701E630EF5641D92A6F614F2___AD7BFEB44AD5F82CA0E001337E494E2B {unsigned int FileOpenNameAvailable : 1;unsigned int Reserved : 31;};
struct _SD_RW_DIRECT_ARGUMENT___E799D1D7F4FD931B58035FED85E80D2B___82EB7C5FC3ECE867F722784A81E8B11E {unsigned int Data : 8;unsigned int Reserved1 : 1;unsigned int Address : 17;unsigned int Reserved2 : 1;unsigned int ReadAfterWrite : 1;unsigned int Function : 3;unsigned int WriteToDevice : 1;};
struct _D3DDDICB_SIGNALFLAGS___37DCD84A128AE20AFACAE49DED23B1AC___BF2510D441EE24298AE8E223747F3648 {unsigned int SignalAtSubmission : 1;unsigned int EnqueueCpuEvent : 1;unsigned int Reserved : 30;};
struct _D3DDDI_RESOURCEFLAGS___0A8E4AF2B4ABBA3F67396D587D70E98B___DFEDBB163B56A659C941E01AE40F0809 {unsigned int RenderTarget : 1;unsigned int ZBuffer : 1;unsigned int Dynamic : 1;unsigned int HintStatic : 1;unsigned int AutogenMipmap : 1;unsigned int DMap : 1;unsigned int WriteOnly : 1;unsigned int NotLockable : 1;unsigned int Points : 1;unsigned int RtPatches : 1;unsigned int NPatches : 1;unsigned int SharedResource : 1;unsigned int DiscardRenderTarget : 1;unsigned int Video : 1;unsigned int CaptureBuffer : 1;unsigned int Primary : 1;unsigned int Texture : 1;unsigned int CubeMap : 1;unsigned int Volume : 1;unsigned int VertexBuffer : 1;unsigned int IndexBuffer : 1;unsigned int DecodeRenderTarget : 1;unsigned int DecodeCompressedBuffer : 1;unsigned int VideoProcessRenderTarget : 1;unsigned int CpuOptimized : 1;unsigned int MightDrawFromLocked : 1;unsigned int Overlay : 1;unsigned int MatchGdiPrimary : 1;unsigned int InterlacedRefresh : 1;unsigned int TextApi : 1;unsigned int RestrictedContent : 1;unsigned int RestrictSharedAccess : 1;};
struct _D3DKMT_WDDM_1_2_CAPS___85A070F6A014979135EAC7792424D6A3___0F5964AD7A466414866DCBA5BE62409C {unsigned int SupportNonVGA : 1;unsigned int SupportSmoothRotation : 1;unsigned int SupportPerEngineTDR : 1;unsigned int SupportKernelModeCommandBuffer : 1;unsigned int SupportCCD : 1;unsigned int SupportSoftwareDeviceBitmaps : 1;unsigned int SupportGammaRamp : 1;unsigned int SupportHWCursor : 1;unsigned int SupportHWVSync : 1;unsigned int SupportSurpriseRemovalInHibernation : 1;unsigned int Reserved : 22;};
struct _DXGK_BRIGHTNESS_CAPS___D9D36000DE1DD4D29BAB8D412DCDF7E1___7EBDBF249FE68AB70FEBAF549ABFE596 {unsigned int SmoothBrightness : 1;unsigned int AdaptiveBrightness : 1;unsigned int Reserved : 30;};
struct _DXGK_DEVICEINFOFLAGS___313A06C1F8E7A72B04D91FC65245D0A6___3A81826735823A7E4E2E7A28673642C0 {unsigned int GuaranteedDmaBufferContract : 1;unsigned int Reserved : 31;};
struct _IPV6_FRAGMENT_HEADER___92C6B06247B11EB7CB56D4524B6C4DF2___95524D7FF2E8E5CA171D244EABE3E9C8 {unsigned short DontUse1 : 8;unsigned short MoreFragments : 1;unsigned short ReservedBits : 2;unsigned short DontUse2 : 5;};
struct _LOG_PARAMETER_HEADER___78DA7D7ACDB40656AE4F463B7A904041___E905DA64F8277D89B8BF07FD43435193 {unsigned char FormatAndLinking : 2;unsigned char TMC : 2;unsigned char ETC : 1;unsigned char TSD : 1;unsigned char Obsolete : 1;unsigned char DU : 1;};
struct _MODE_INFO_EXCEPTIONS___46486C1043A9BFDA7F1CD33DAB7A74FB___4093EAC1ED3453951EF80FAEAADF12E7 {unsigned char LogErr : 1;unsigned char Reserved2 : 1;unsigned char Test : 1;unsigned char Dexcpt : 1;unsigned char Reserved3 : 3;unsigned char Perf : 1;};
struct _WHEA_PCI_SLOT_NUMBER___B33AE7BF1FDC215AED0B88878C3A5E8F___A9FC48894F8D14019CAF4D8F08A526D6 {unsigned int DeviceNumber : 5;unsigned int FunctionNumber : 3;unsigned int Reserved : 24;};
struct _DXGK_TRANSFERFLAGS2___4C244374FF25457F97E9B31CB89E7EBC___EAE165496D5BFDBDD95280214C6ACDC1 {unsigned int Swizzle : 1;unsigned int Unswizzle : 1;unsigned int AllocationIsIdle : 1;unsigned int SwizzlingRange : 1;unsigned int Reserved : 28;};
struct _IGMPV3_QUERY_HEADER___BADC5553DDFA9D11ED858F66D86D59FC___A4E2B1CD24A78BF513C2534CAC5D7D7B {unsigned char QQCMantissa : 4;unsigned char QQCExponent : 3;unsigned char QQCType : 1;};
struct _IGMPV3_QUERY_HEADER___D8E78313C7C869914A98684B90C859EB___A466432AB51F33C0F9566AC62E60D474 {unsigned char MaxRespCodeMantissa : 4;unsigned char MaxRespCodeExponent : 3;unsigned char MaxRespCodeType : 1;};
struct _ACPI_SRAT_ENTRY______934BEDD351FC4B1D46DCE8BA1EC27DBF___1196FF6CE8067B2B35B898660F75E27E {unsigned int Enabled : 1;unsigned int Reserved : 31;};
struct _ACPI_SRAT_ENTRY______B5E578257FBF3862337C2F1A8AD9935B___1196FF6CE8067B2B35B898660F75E27E {unsigned int Enabled : 1;unsigned int Reserved : 31;};
struct _ACPI_SRAT_ENTRY______F283BDF483E96915173589B9951F87CD___DC8F39E2CA406A36842771D96FE8E578 {unsigned int Enabled : 1;unsigned int HotPlug : 1;unsigned int Reserved : 30;};
struct _CDB___SET_CD_SPEED___5042636D3EF4672BAA051A846CBFD7E7___001D666376D0C4DBD36F80530E61A012 {unsigned char RotationControl : 2;unsigned char Reserved3 : 6;};
struct _D3DDDICB_LOCKFLAGS___ED792A498079A6342A08F53AEABA2A3A___E5338CF7B743D9B09B49C7CF5F2B6ABC {unsigned int ReadOnly : 1;unsigned int WriteOnly : 1;unsigned int DonotWait : 1;unsigned int IgnoreSync : 1;unsigned int LockEntire : 1;unsigned int DonotEvict : 1;unsigned int AcquireAperture : 1;unsigned int Discard : 1;unsigned int NoExistingReference : 1;unsigned int UseAlternateVA : 1;unsigned int IgnoreReadSync : 1;unsigned int Reserved : 21;};
struct _D3DDDI_ESCAPEFLAGS___1E6467755CCFD5D3734D714B43840EC2___B70A34BD02D6029B9E2448784158907E {unsigned int HardwareAccess : 1;unsigned int Reserved : 31;};
struct _DXGK_GAMMARAMPCAPS___01A74871349E05421D5F5860B0BC2732___3D587546F3918A3D6EE51008ED21D136 {unsigned int Gamma_Rgb256x3x16 : 1;unsigned int Reserved : 31;};
struct _DXGK_SEGMENTFLAGS2___781DFF8C386BAF2FD5859671E4CB1CCB___BD7871BA2F60B1D3BC722835D1DFB67B {unsigned int Aperture : 1;unsigned int PopulatedFromSystemMemory : 1;unsigned int SystemMemoryReservedByBios : 1;unsigned int CpuVisible : 1;unsigned int Reserved : 28;};
struct _DXGK_TRANSFERFLAGS___4D1486DD1E7506599394F0F2A8A65E0A___302D1026E10F578CC86103988839248E {unsigned int Swizzle : 1;unsigned int Unswizzle : 1;unsigned int AllocationIsIdle : 1;unsigned int TransferStart : 1;unsigned int TransferEnd : 1;unsigned int Reserved : 27;};
struct _IPV4_OPTION_HEADER___4C1C3CB250A3C2661892A36CD59164CA___7C81DD1BFAD5C5D4BBD6B7BB13E2FDA0 {unsigned char OptionNumber : 5;unsigned char OptionClass : 2;unsigned char CopiedFlag : 1;};
struct _MLDV2_QUERY_HEADER___05E330219958D4FF52893F61F28F917A___7174B48358BF23E91701085D5C8B6951 {unsigned short MaxRespCodeMantissaHi : 4;unsigned short MaxRespCodeExponent : 3;unsigned short MaxRespCodeType : 1;unsigned short MaxRespCodeMantissaLo : 8;};
struct _MLDV2_QUERY_HEADER___D24BA13BEDB45029026182C5769FF7FA___A4E2B1CD24A78BF513C2534CAC5D7D7B {unsigned char QQCMantissa : 4;unsigned char QQCExponent : 3;unsigned char QQCType : 1;};
struct _DXGK_ENGINESTATUS___71579A1E1FAD40681B38D2EFE6BBA1F6___1958C0CE0F30652E7A53C351F5828294 {unsigned int Responsive : 1;unsigned int Reserved : 31;};
struct _DXGK_POINTERFLAGS___C9573884F6BD666D6E4986CB772F7316___13E2B3CF36913A195C6C5551DFC7D75A {unsigned int Monochrome : 1;unsigned int Color : 1;unsigned int MaskedColor : 1;unsigned int Reserved : 29;};
struct _DXGK_PRESENTFLAGS___759923E5051464C6F2E56DEAB7A49BFF___46B339A188AE7A54CE96CD9934751C12 {unsigned int Blt : 1;unsigned int ColorFill : 1;unsigned int Flip : 1;unsigned int FlipWithNoWait : 1;unsigned int SrcColorKey : 1;unsigned int DstColorKey : 1;unsigned int LinearToSrgb : 1;unsigned int Rotate : 1;unsigned int FlipStereo : 1;unsigned int FlipStereoTemporaryMono : 1;unsigned int FlipStereoPreferRight : 1;unsigned int BltStereoUseRight : 1;unsigned int FlipWithMultiPlaneOverlay : 1;unsigned int Reserved : 19;};
struct _DXGK_SEGMENTFLAGS___B3DE18E4A209DC1AB8FF5AECCB1010D4___D2A2F249D28235F8FFF1C866BFFB9624 {unsigned int Aperture : 1;unsigned int Agp : 1;unsigned int CpuVisible : 1;unsigned int UseBanking : 1;unsigned int CacheCoherent : 1;unsigned int PitchAlignment : 1;unsigned int PopulatedFromSystemMemory : 1;unsigned int PreservedDuringStandby : 1;unsigned int PreservedDuringHibernate : 1;unsigned int PartiallyPreservedDuringHibernate : 1;unsigned int DirectFlip : 1;unsigned int Reserved : 21;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___B2B4984C7002DD41520623255E2F9497 {struct _SCSI_REQUEST_BLOCK *Srb;};
struct _IVHD_DEVICE_ENTRY___52C462F56CDF084018E3913BD4CBE19B___EF8F6BA37C2863099350BF038B629297 {unsigned char INITPass : 1;unsigned char ExtIntPass : 1;unsigned char NMIPass : 1;unsigned char ReservedZ0 : 1;unsigned char SysMgt : 2;unsigned char LINT0Pass : 1;unsigned char LINT1Pass : 1;};
struct _IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2___9608B92844F0E5A0BDAB2DD9BFE04B43 {unsigned int Reserved : 31;unsigned int AtsDisabled : 1;};
struct _KUSER_SHARED_DATA___5E5F141A573F9B2433651B29934443B8___3D940D5D03EF7F98CEE6737EDE752E57 {unsigned char NXSupportPolicy : 2;unsigned char SEHValidationPolicy : 2;unsigned char CurDirDevicesSkippedForDlls : 2;unsigned char Reserved : 2;};
struct _KUSER_SHARED_DATA___CE0A0B9CF154763236C6E82AB829672B___061CAD105B6E501C96239533A98B33A9 {unsigned int DbgErrorPortPresent : 1;unsigned int DbgElevationEnabled : 1;unsigned int DbgVirtEnabled : 1;unsigned int DbgInstallerDetectEnabled : 1;unsigned int DbgLkgEnabled : 1;unsigned int DbgDynProcessorEnabled : 1;unsigned int DbgConsoleBrokerEnabled : 1;unsigned int DbgSecureBootEnabled : 1;unsigned int SpareBits : 24;};
struct _RTL_BALANCED_NODE___6446A29996E22DA45E60A1EA14188AE9___86DF4A9FEBEFA77DC8EE1BF77C3EBDD5 {struct _RTL_BALANCED_NODE *Left;struct _RTL_BALANCED_NODE *Right;};
struct nd_opt_prefix_info___398BCD3A84C3D8595978A4C13A2CD80A___D8228C77A2ABB3E84742704A357288DF {unsigned char Route : 1;unsigned char Reserved1 : 3;unsigned char SitePrefix : 1;unsigned char RouterAddress : 1;unsigned char Autonomous : 1;unsigned char OnLink : 1;};
struct nd_opt_route_info___DC5D226088DB1FA6D255C52DD8FCB908___9DCB88DEC110B99E01442782DF606EF3 {unsigned char Reserved : 3;unsigned char Preference : 2;};
struct _DXGK_PATCHFLAGS___3F44A29E3CF80453CA6C96B988F2597D___DE1EC4FC577E58E9D57B2F58F10A0487 {unsigned int Paging : 1;unsigned int Present : 1;unsigned int RedirectedPresent : 1;unsigned int NullRendering : 1;unsigned int Reserved : 28;};
struct _DXGK_VIDSCHCAPS___5E74790812C969E3ACDA73D10C67000E___DE026473D05A702E3E1640570A42EE2C {unsigned int MultiEngineAware : 1;unsigned int VSyncPowerSaveAware : 1;unsigned int PreemptionAware : 1;unsigned int NoDmaPatching : 1;unsigned int CancelCommandAware : 1;unsigned int Reserved : 27;};
struct _PCI_SLOT_NUMBER___49AFFD3D7EC59F1BE207C4846B68BFFF___A9FC48894F8D14019CAF4D8F08A526D6 {unsigned int DeviceNumber : 5;unsigned int FunctionNumber : 3;unsigned int Reserved : 24;};
struct _DXGK_VIDMMCAPS___0FC7972752449C7826273C22D7F8DC2B___74DF1CCC095029D3F7D5077FB687F323 {unsigned int OutOfOrderLock : 1;unsigned int DedicatedPagingEngine : 1;unsigned int PagingEngineCanSwizzle : 1;unsigned int SectionBackedPrimary : 1;unsigned int Reserved : 28;};
struct _IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT___294F33E41A680E78D61DF2181BA4C646 {unsigned short VendorDefinedPower : 1;unsigned short Reserved : 15;};
struct _DXGK_FLIPCAPS___BB8BCFC6A76D53AA4E1798E1B22DE04B___AAB4171E51AEA23D82198A37E851F9C6 {unsigned int FlipOnVSyncWithNoWait : 1;unsigned int FlipOnVSyncMmIo : 1;unsigned int FlipInterval : 1;unsigned int FlipImmediateMmIo : 1;unsigned int Reserved : 28;};
struct _ASYNC_PACKET___AB07F285586641EA5A3A0A6EB783C0F2___5FED45C7A7070B3B92A06D6CE07E910F {unsigned short AP_Reserved : 12;unsigned short AP_Rcode : 4;};
struct _IGMP_HEADER___B9454631A37D51F61B5C2590DE4942DA___9A52E82B89F3A3AE6B2F78E467664CEA {unsigned char Type : 4;unsigned char Version : 4;};
struct _INQUIRYDATA___57A8C0293E1F2A67A1B3BE29EFC0DD2E___CB49C0207A42B6C7BC0ECE4108D7F7F8 {unsigned char ANSIVersion : 3;unsigned char ECMAVersion : 3;unsigned char ISOVersion : 2;};
struct _IPV4_HEADER___1102F78AC293BC76A5071660AA34A7CC___F11B15A51CFFCDAB5E9FFF0D1A58CBE8 {unsigned short DontUse1 : 5;unsigned short MoreFragments : 1;unsigned short DontFragment : 1;unsigned short Reserved : 1;unsigned short DontUse2 : 8;};
struct _IPV4_HEADER___7294C6500B7E8E66DD9EAFF73AAE9420___F4C21EB835C5D4DFDE52800A9D198A9B {unsigned char HeaderLength : 4;unsigned char Version : 4;};
struct _IPV4_HEADER___80DFA742D2097AD049AAE78FF03C750C___37C47C346917A4DE3CC45FD35C6B5017 {unsigned char EcnField : 2;unsigned char TypeOfService : 6;};
struct _OWNER_ENTRY___6B4978F9925CAA83AD6686635A513271___658AD709826129357C3064DC5428D5B8 {unsigned int IoPriorityBoosted : 1;unsigned int OwnerReferenced : 1;unsigned int OwnerCount : 30;};
struct _TPM20_TABLE___C10FB33E4CEA99E8ACC08E19EFF679EB___3793DD88648FDB414F5AE82C07DFBD73 {unsigned int UseMemoryDescriptors : 1;unsigned int CmdListCapable : 1;unsigned int NoDeviceIO : 1;unsigned int DeviceMemory : 1;unsigned int DevMemOnly : 1;unsigned int Reserved : 27;};
struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS___6811685E9C9CDE140128703EAAAFCDFF {unsigned char FRUId : 1;unsigned char FRUText : 1;unsigned char Reserved : 6;};
struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS___488C0DA93B204848A74B494FE302347F {unsigned long long ProcessorType : 1;unsigned long long InstructionSet : 1;unsigned long long ErrorType : 1;unsigned long long Operation : 1;unsigned long long Flags : 1;unsigned long long Level : 1;unsigned long long CPUVersion : 1;unsigned long long CPUBrandString : 1;unsigned long long ProcessorId : 1;unsigned long long TargetAddress : 1;unsigned long long RequesterId : 1;unsigned long long ResponderId : 1;unsigned long long InstructionPointer : 1;unsigned long long Reserved : 51;};
struct _IMAGE_INFO___750B9F7C657AA4459AFB3416A5571407___EE88D46FA510EEFAF6F582DB353EFFEE {unsigned int ImageAddressingMode : 8;unsigned int SystemModeImage : 1;unsigned int ImageMappedToAllPids : 1;unsigned int ExtendedInfoPresent : 1;unsigned int MachineTypeMismatch : 1;unsigned int Reserved : 20;};
struct _IVHD_BLOCK___CC2427FB4E5628166180EC8970FE14AA___755609061C13195953D9B1206A3A8D71 {unsigned char HtTunEn : 1;unsigned char PassPW : 1;unsigned char ResPassPW : 1;unsigned char Isoc : 1;unsigned char IotlbSup : 1;unsigned char ReservedZ0 : 3;};
struct _IVHD_BLOCK___FFAE79A01A0C522F1D9081A9AC9A1E79___B2C21B5885346285C3C15A05A5EB04A0 {unsigned short MsiNum : 5;unsigned short Reserved1 : 3;unsigned short UnitId : 5;unsigned short Reserved2 : 3;};
struct _IVMD_BLOCK___6CA5807B4C1D95CBC919D39BCB1B3D59___8816CF2C331B62425571B12594BC19F9 {unsigned char Unity : 1;unsigned char IR : 1;unsigned char IW : 1;unsigned char ExclusionRange : 1;unsigned char ReservedZ0 : 4;};
struct _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER___00CEFFFBE39527BBEE12FB46571022EC {unsigned int NoStModeSupported : 1;unsigned int InteruptVectorModeSupported : 1;unsigned int DeviceSpecificModeSupported : 1;unsigned int Rsvd : 5;unsigned int ExtendedTPHRequesterSupported : 1;unsigned int StTableLocation : 2;unsigned int Rsvd2 : 5;unsigned int StTableSize : 11;unsigned int Rsvd3 : 5;};
struct _PCC_TABLE___83536B2122381EB1BF94D79CF0D5F89E___8A9F02FD7BC4DD12824BA4C68FE6B03F {unsigned int SciSupported : 1;unsigned int Reserved : 31;};
struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY___C238245912B9C54C7D9DB158AAAEEA48 {unsigned int TargetAbortOnSplitCompletion : 1;unsigned int MasterAbortOnSplitCompletion : 1;unsigned int ReceivedTargetAbort : 1;unsigned int ReceivedMasterAbort : 1;unsigned int RsvdZ : 1;unsigned int UnexpectedSplitCompletionError : 1;unsigned int UncorrectableSplitCompletion : 1;unsigned int UncorrectableDataError : 1;unsigned int UncorrectableAttributeError : 1;unsigned int UncorrectableAddressError : 1;unsigned int DelayedTransactionDiscardTimerExpired : 1;unsigned int PERRAsserted : 1;unsigned int SERRAsserted : 1;unsigned int InternalBridgeError : 1;unsigned int Reserved : 18;};
struct _DXGK_PDE___7E37419C9C4A9D7B990FC9CE94D534E4___5B6B5864B9D54C2E38FEBF61B894C1CF {unsigned long long Valid : 1;unsigned long long Segment : 5;unsigned long long Reserved : 6;unsigned long long PageTableAddress : 52;};
struct _DXGK_PTE___E0A8C8A05CB3CF7081FA3F36783E9131___B6F1E4DC78FE35545F3C2E803FCB1620 {unsigned long long Valid : 1;unsigned long long CacheCoherent : 1;unsigned long long ReadOnly : 1;unsigned long long Privileged : 1;unsigned long long Segment : 5;unsigned long long Reserved : 3;unsigned long long PageAddress : 52;};
struct _VLAN_TAG___439FFFA6F528943BE2F423ED909F8DC1___C4451011160A8F3572F11B1881C01209 {unsigned short VID : 12;unsigned short CFI : 1;unsigned short User_Priority : 3;};
struct _PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER___5BA7C143CE7966D60CEDB6D7415F71DD {unsigned int CompletionTimeoutRangesSupported : 4;unsigned int CompletionTimeoutDisableSupported : 1;unsigned int AriForwardingSupported : 1;unsigned int AtomicOpRoutingSupported : 1;unsigned int AtomicOpCompleterSupported32Bit : 1;unsigned int AtomicOpCompleterSupported64Bit : 1;unsigned int CASCompleterSupported128Bit : 1;unsigned int NoROEnabledPRPRPassing : 1;unsigned int LTRMechanismSupported : 1;unsigned int TPHCompleterSupported : 2;unsigned int Rsvd : 4;unsigned int OBFFSupported : 2;unsigned int ExtendedFmtFieldSuported : 1;unsigned int EndEndTLPPrefixSupported : 1;unsigned int MaxEndEndTLPPrefixes : 2;unsigned int Rsvd2 : 8;};
struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS___C238245912B9C54C7D9DB158AAAEEA48 {unsigned int TargetAbortOnSplitCompletion : 1;unsigned int MasterAbortOnSplitCompletion : 1;unsigned int ReceivedTargetAbort : 1;unsigned int ReceivedMasterAbort : 1;unsigned int RsvdZ : 1;unsigned int UnexpectedSplitCompletionError : 1;unsigned int UncorrectableSplitCompletion : 1;unsigned int UncorrectableDataError : 1;unsigned int UncorrectableAttributeError : 1;unsigned int UncorrectableAddressError : 1;unsigned int DelayedTransactionDiscardTimerExpired : 1;unsigned int PERRAsserted : 1;unsigned int SERRAsserted : 1;unsigned int InternalBridgeError : 1;unsigned int Reserved : 18;};
struct _PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER___39C386DD28FDD484F36F0B7CA0059F21 {unsigned int StModeSelect : 3;unsigned int Rsvd : 5;unsigned int TphRequesterEnable : 2;unsigned int Rsvd2 : 22;};
struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS___EBBD5017D96525D77178BA3E4B036D03 {unsigned int Primary : 1;unsigned int ContainmentWarning : 1;unsigned int Reset : 1;unsigned int ThresholdExceeded : 1;unsigned int ResourceNotAvailable : 1;unsigned int LatentError : 1;unsigned int Reserved : 26;};
struct _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS___73DDC73F6A9FBC135E9914E62BF32308 {unsigned long long LocalAPICId : 1;unsigned long long CpuId : 1;unsigned long long ProcInfoCount : 6;unsigned long long ContextInfoCount : 6;unsigned long long Reserved : 50;};
struct _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER___733AE15B0C3BC85882D4F5FD4F4261B3 {unsigned int MaxPayloadSizeSupported : 3;unsigned int PhantomFunctionsSupported : 2;unsigned int ExtendedTagSupported : 1;unsigned int L0sAcceptableLatency : 3;unsigned int L1AcceptableLatency : 3;unsigned int Undefined : 3;unsigned int RoleBasedErrorReporting : 1;unsigned int Rsvd1 : 2;unsigned int CapturedSlotPowerLimit : 8;unsigned int CapturedSlotPowerLimitScale : 2;unsigned int Rsvd2 : 4;};
struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK___C238245912B9C54C7D9DB158AAAEEA48 {unsigned int TargetAbortOnSplitCompletion : 1;unsigned int MasterAbortOnSplitCompletion : 1;unsigned int ReceivedTargetAbort : 1;unsigned int ReceivedMasterAbort : 1;unsigned int RsvdZ : 1;unsigned int UnexpectedSplitCompletionError : 1;unsigned int UncorrectableSplitCompletion : 1;unsigned int UncorrectableDataError : 1;unsigned int UncorrectableAttributeError : 1;unsigned int UncorrectableAddressError : 1;unsigned int DelayedTransactionDiscardTimerExpired : 1;unsigned int PERRAsserted : 1;unsigned int SERRAsserted : 1;unsigned int InternalBridgeError : 1;unsigned int Reserved : 18;};
struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY___5CEDD6DE0469F7C458057B946BAEAEAC {unsigned int Undefined : 1;unsigned int Reserved1 : 3;unsigned int DataLinkProtocolError : 1;unsigned int SurpriseDownError : 1;unsigned int Reserved2 : 6;unsigned int PoisonedTLP : 1;unsigned int FlowControlProtocolError : 1;unsigned int CompletionTimeout : 1;unsigned int CompleterAbort : 1;unsigned int UnexpectedCompletion : 1;unsigned int ReceiverOverflow : 1;unsigned int MalformedTLP : 1;unsigned int ECRCError : 1;unsigned int UnsupportedRequestError : 1;unsigned int AcsViolation : 1;unsigned int UncorrectableInternalError : 1;unsigned int MCBlockedTlp : 1;unsigned int AtomicOpEgressBlocked : 1;unsigned int TlpPrefixBlocked : 1;unsigned int Reserved3 : 6;};
struct _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY___B7574879703BF72EB610F2F1617FB9A2 {unsigned int VFMigrationStateBIR : 3;unsigned int VFMigrationStateOffset : 29;};
struct _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS___7E0C474F883E1834B3C25CB8F2CF97DD {unsigned long long PortType : 1;unsigned long long Version : 1;unsigned long long CommandStatus : 1;unsigned long long DeviceId : 1;unsigned long long DeviceSerialNumber : 1;unsigned long long BridgeControlStatus : 1;unsigned long long ExpressCapability : 1;unsigned long long AerInfo : 1;unsigned long long Reserved : 56;};
struct _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS___87F9BFB18513EDB3A7E0A3216175706F {unsigned long long ErrorStatus : 1;unsigned long long IdInfo : 1;unsigned long long MemoryNumber : 1;unsigned long long IoNumber : 1;unsigned long long RegisterDataPairs : 1;unsigned long long Reserved : 59;};
struct _______FE8FDDC6ADACC1B4F7EC8CFC7CAEB9FF___006192E8E41FD8F2EA1B27D51D7CA475 {unsigned char NoDomainAccounting : 1;unsigned char IncreasePolicy : 2;unsigned char DecreasePolicy : 2;unsigned char Reserved : 3;};
struct _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER___D9C74A38A870D0320034BBD65C683AD2 {unsigned int MaximumLinkSpeed : 4;unsigned int MaximumLinkWidth : 6;unsigned int ActiveStatePMSupport : 2;unsigned int L0sExitLatency : 3;unsigned int L1ExitLatency : 3;unsigned int ClockPowerManagement : 1;unsigned int SurpriseDownErrorReportingCapable : 1;unsigned int DataLinkLayerActiveReportingCapable : 1;unsigned int LinkBandwidthNotificationCapability : 1;unsigned int AspmOptionalityCompliance : 1;unsigned int Rsvd : 1;unsigned int PortNumber : 8;};
struct _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER___679760A62E4138D50BDF4FE2A647D3A1 {unsigned short CRSSoftwareVisibility : 1;unsigned short Rsvd : 15;};
struct _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER___59873FEB55F6600C99E31DE5AC76366D {unsigned int AttentionButtonPresent : 1;unsigned int PowerControllerPresent : 1;unsigned int MRLSensorPresent : 1;unsigned int AttentionIndicatorPresent : 1;unsigned int PowerIndicatorPresent : 1;unsigned int HotPlugSurprise : 1;unsigned int HotPlugCapable : 1;unsigned int SlotPowerLimit : 8;unsigned int SlotPowerLimitScale : 2;unsigned int ElectromechanicalLockPresent : 1;unsigned int NoCommandCompletedSupport : 1;unsigned int PhysicalSlotNumber : 13;};
struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS___5CEDD6DE0469F7C458057B946BAEAEAC {unsigned int Undefined : 1;unsigned int Reserved1 : 3;unsigned int DataLinkProtocolError : 1;unsigned int SurpriseDownError : 1;unsigned int Reserved2 : 6;unsigned int PoisonedTLP : 1;unsigned int FlowControlProtocolError : 1;unsigned int CompletionTimeout : 1;unsigned int CompleterAbort : 1;unsigned int UnexpectedCompletion : 1;unsigned int ReceiverOverflow : 1;unsigned int MalformedTLP : 1;unsigned int ECRCError : 1;unsigned int UnsupportedRequestError : 1;unsigned int AcsViolation : 1;unsigned int UncorrectableInternalError : 1;unsigned int MCBlockedTlp : 1;unsigned int AtomicOpEgressBlocked : 1;unsigned int TlpPrefixBlocked : 1;unsigned int Reserved3 : 6;};
struct _PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER___9BDE94C8FE1CF521A2B6D72B34D087CA {unsigned short CompletionTimeoutValue : 4;unsigned short CompletionTimeoutDisable : 1;unsigned short AriForwardingEnable : 1;unsigned short AtomicOpRequesterEnable : 1;unsigned short AtomicOpEgresBlocking : 1;unsigned short IDORequestEnable : 1;unsigned short IDOCompletionEnable : 1;unsigned short LTRMechanismEnable : 1;unsigned short Rsvd : 2;unsigned short OBFFEnable : 2;unsigned short EndEndTLPPrefixBlocking : 1;};
struct _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS___98D8E7E308266478D1D362C4BD74CF14 {unsigned int ReceiverError : 1;unsigned int Reserved1 : 5;unsigned int BadTLP : 1;unsigned int BadDLLP : 1;unsigned int ReplayNumRollover : 1;unsigned int Reserved2 : 3;unsigned int ReplayTimerTimeout : 1;unsigned int AdvisoryNonFatalError : 1;unsigned int CorrectedInternalError : 1;unsigned int HeaderLogOverflow : 1;unsigned int Reserved3 : 16;};
struct _PCI_EXPRESS_DEVICE_STATUS_2_REGISTER___AAB7521546E80192293BF045FBAEF5A5 {unsigned short Rsvd : 16;};
struct _PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER___33B85A381B3FEB24A38E4197A9E1BED9 {unsigned int MaxSnoopLatencyValue : 10;unsigned int MaxSnoopLatencyScale : 3;unsigned int Rsvd : 2;unsigned int MaxSnoopRequirement : 1;unsigned int MaxNoSnoopLatencyValue : 10;unsigned int MaxNoSnoopLatencyScale : 3;unsigned int Rsvd2 : 2;unsigned int MaxNoSnoopRequirement : 1;};
struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK___5CEDD6DE0469F7C458057B946BAEAEAC {unsigned int Undefined : 1;unsigned int Reserved1 : 3;unsigned int DataLinkProtocolError : 1;unsigned int SurpriseDownError : 1;unsigned int Reserved2 : 6;unsigned int PoisonedTLP : 1;unsigned int FlowControlProtocolError : 1;unsigned int CompletionTimeout : 1;unsigned int CompleterAbort : 1;unsigned int UnexpectedCompletion : 1;unsigned int ReceiverOverflow : 1;unsigned int MalformedTLP : 1;unsigned int ECRCError : 1;unsigned int UnsupportedRequestError : 1;unsigned int AcsViolation : 1;unsigned int UncorrectableInternalError : 1;unsigned int MCBlockedTlp : 1;unsigned int AtomicOpEgressBlocked : 1;unsigned int TlpPrefixBlocked : 1;unsigned int Reserved3 : 6;};
struct _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS___F816CA965C8EB9964AAB88E39FD7C726 {unsigned long long ErrorStatus : 1;unsigned long long ErrorType : 1;unsigned long long BusId : 1;unsigned long long BusAddress : 1;unsigned long long BusData : 1;unsigned long long BusCommand : 1;unsigned long long RequesterId : 1;unsigned long long CompleterId : 1;unsigned long long TargetId : 1;unsigned long long Reserved : 55;};
struct ____38AB66A4EA7C49F20D686D738A108FEA___013671E5920392F7B68C675C97F9F7D8 {unsigned int Zone : 28;unsigned int Level : 4;};
struct ____6FF570DE39DD7AC51D2C8779583801A9___78C70DD6D6F7B4A2EF6C7EC5E1A96854 {unsigned short DataParityErrorRecoveryEnable : 1;unsigned short EnableRelaxedOrdering : 1;unsigned short MaxMemoryReadByteCount : 2;unsigned short MaxOutstandingSplitTransactions : 3;unsigned short Reserved : 9;};
struct ____C0FDAA75702D310095668259A700B2EB___87BB28B1146A9074D2787F4C46A2017B {unsigned int FunctionNumber : 3;unsigned int DeviceNumber : 5;unsigned int BusNumber : 8;unsigned int Device64Bit : 1;unsigned int Capable133MHz : 1;unsigned int SplitCompletionDiscarded : 1;unsigned int UnexpectedSplitCompletion : 1;unsigned int DeviceComplexity : 1;unsigned int DesignedMaxMemoryReadByteCount : 2;unsigned int DesignedMaxOutstandingSplitTransactions : 3;unsigned int DesignedMaxCumulativeReadSize : 3;unsigned int ReceivedSplitCompletionErrorMessage : 1;unsigned int CapablePCIX266 : 1;unsigned int CapablePCIX533 : 1;};
struct ____E178C36FC483474FC566940F4ECECCD0___12EDD93CAC4208332C3108DBB4839320 {unsigned short AllowScaling : 1;unsigned short Disabled : 1;unsigned short Reserved : 14;};
struct _PCI_EXPRESS_DEVICE_CONTROL_REGISTER___FF07EAD2A1FC4493A4326FA96B8509C3 {unsigned short CorrectableErrorEnable : 1;unsigned short NonFatalErrorEnable : 1;unsigned short FatalErrorEnable : 1;unsigned short UnsupportedRequestErrorEnable : 1;unsigned short EnableRelaxedOrder : 1;unsigned short MaxPayloadSize : 3;unsigned short ExtendedTagEnable : 1;unsigned short PhantomFunctionsEnable : 1;unsigned short AuxPowerEnable : 1;unsigned short NoSnoopEnable : 1;unsigned short MaxReadRequestSize : 3;unsigned short BridgeConfigRetryEnable : 1;};
struct _WHEA_MEMORY_ERROR_SECTION_VALIDBITS___CA2549C9282E981BBD06140190CACED9 {unsigned long long ErrorStatus : 1;unsigned long long PhysicalAddress : 1;unsigned long long PhysicalAddressMask : 1;unsigned long long Node : 1;unsigned long long Card : 1;unsigned long long Module : 1;unsigned long long Bank : 1;unsigned long long Device : 1;unsigned long long Row : 1;unsigned long long Column : 1;unsigned long long BitPosition : 1;unsigned long long RequesterId : 1;unsigned long long ResponderId : 1;unsigned long long TargetId : 1;unsigned long long ErrorType : 1;unsigned long long Reserved : 49;};
struct _PCI_EXPRESS_ACS_CAPABIITY_REGISTER___E2489E6D610F7CF0B3F6210AF02A76C7 {unsigned short SourceValidation : 1;unsigned short TranslationBlocking : 1;unsigned short RequestRedirect : 1;unsigned short CompletionRedirect : 1;unsigned short UpstreamForwarding : 1;unsigned short EgressControl : 1;unsigned short DirectTranslation : 1;unsigned short Reserved : 1;unsigned short EgressControlVectorSize : 8;};
struct _PCI_EXPRESS_CORRECTABLE_ERROR_MASK___98D8E7E308266478D1D362C4BD74CF14 {unsigned int ReceiverError : 1;unsigned int Reserved1 : 5;unsigned int BadTLP : 1;unsigned int BadDLLP : 1;unsigned int ReplayNumRollover : 1;unsigned int Reserved2 : 3;unsigned int ReplayTimerTimeout : 1;unsigned int AdvisoryNonFatalError : 1;unsigned int CorrectedInternalError : 1;unsigned int HeaderLogOverflow : 1;unsigned int Reserved3 : 16;};
struct _PCI_EXPRESS_DEVICE_STATUS_REGISTER___8D16E2D3140029B99C59EF1414D8FA91 {unsigned short CorrectableErrorDetected : 1;unsigned short NonFatalErrorDetected : 1;unsigned short FatalErrorDetected : 1;unsigned short UnsupportedRequestDetected : 1;unsigned short AuxPowerDetected : 1;unsigned short TransactionsPending : 1;unsigned short Rsvd : 10;};
struct _WHEA_ERROR_RECORD_HEADER_VALIDBITS___303239889594314C554CBA593C88201B {unsigned int PlatformId : 1;unsigned int Timestamp : 1;unsigned int PartitionId : 1;unsigned int Reserved : 29;};
struct _DXGK_PRESENTMULTIPLANEOVERLAYLIST___9E15F1C4ADB895F7C878D486221D8304 {unsigned int SegmentId : 5;unsigned int Reserved : 27;};
struct _PCI_EXPRESS_CAPABILITIES_REGISTER___D337D576951D723C09FB7F464F1ED801 {unsigned short CapabilityVersion : 4;unsigned short DeviceType : 4;unsigned short SlotImplemented : 1;unsigned short InterruptMessageNumber : 5;unsigned short Rsvd : 2;};
struct _PCI_EXPRESS_LINK_CONTROL_REGISTER___BE1F288DD5954ACB2B5DBA4752D8F166 {unsigned short ActiveStatePMControl : 2;unsigned short Rsvd1 : 1;unsigned short ReadCompletionBoundary : 1;unsigned short LinkDisable : 1;unsigned short RetrainLink : 1;unsigned short CommonClockConfig : 1;unsigned short ExtendedSynch : 1;unsigned short EnableClockPowerManagement : 1;unsigned short Rsvd2 : 7;};
struct _PCI_EXPRESS_ROOT_CONTROL_REGISTER___BCB46F1AB8E2650210485E57DA7EFF70 {unsigned short CorrectableSerrEnable : 1;unsigned short NonFatalSerrEnable : 1;unsigned short FatalSerrEnable : 1;unsigned short PMEInterruptEnable : 1;unsigned short CRSSoftwareVisibilityEnable : 1;unsigned short Rsvd : 11;};
struct _PCI_EXPRESS_SLOT_CONTROL_REGISTER___7F355CBA7DE41F13E8F39C22E6505FBE {unsigned short AttentionButtonEnable : 1;unsigned short PowerFaultDetectEnable : 1;unsigned short MRLSensorEnable : 1;unsigned short PresenceDetectEnable : 1;unsigned short CommandCompletedEnable : 1;unsigned short HotPlugInterruptEnable : 1;unsigned short AttentionIndicatorControl : 2;unsigned short PowerIndicatorControl : 2;unsigned short PowerControllerControl : 1;unsigned short ElectromechanicalLockControl : 1;unsigned short DataLinkStateChangeEnable : 1;unsigned short Rsvd : 3;};
struct _WHEA_ERROR_INJECTION_CAPABILITIES___45331E6F0F3048A1678A6E0B376D3893 {unsigned int ProcessorCorrectable : 1;unsigned int ProcessorUncorrectableNonFatal : 1;unsigned int ProcessorUncorrectableFatal : 1;unsigned int MemoryCorrectable : 1;unsigned int MemoryUncorrectableNonFatal : 1;unsigned int MemoryUncorrectableFatal : 1;unsigned int PCIExpressCorrectable : 1;unsigned int PCIExpressUncorrectableNonFatal : 1;unsigned int PCIExpressUncorrectableFatal : 1;unsigned int PlatformCorrectable : 1;unsigned int PlatformUncorrectableNonFatal : 1;unsigned int PlatformUncorrectableFatal : 1;unsigned int IA64Corrected : 1;unsigned int IA64Recoverable : 1;unsigned int IA64Fatal : 1;unsigned int IA64RecoverableCache : 1;unsigned int IA64RecoverableRegFile : 1;unsigned int Reserved : 15;};
struct _15F35BF8B73635FE222DFD2153EC2695___A566F97FD8A813538FFE7A14C974CE0A {unsigned int ReferralServers : 1;unsigned int StorageServers : 1;};
struct _90FA911F5F1D4FE086DF5A0612D3E63E___C647542A1E5DFD351C2D0807CB3F9E35 {unsigned short StripPath : 1;};
struct _C62299E2FAA36942CDE27418DA4FF5CB___5DF234520AB1AC2CADFED3B4B74AA075 {unsigned short StripPath : 1;unsigned short NameListReferral : 1;};
struct _FAF6A73AFD9895CF3E56308E3C23E916___C647542A1E5DFD351C2D0807CB3F9E35 {unsigned short StripPath : 1;};
struct _DISPLAYID_DETAILED_TIMING_TYPE_I___0B9E5C82A537FE04348FC016FB6647EB {unsigned short HorizontalFrontPorch : 15;unsigned short HorizontalSyncPolarity : 1;};
struct _DISPLAYID_DETAILED_TIMING_TYPE_I___9EE0A142F0F301DE9B45F63555A35675 {unsigned int PixelClock : 24;unsigned int AspectRatio : 3;unsigned int Reserved : 1;unsigned int ScanningType : 1;unsigned int StereoMode : 2;unsigned int PreferredTiming : 1;};
struct _DISPLAYID_DETAILED_TIMING_TYPE_I___D79DFD3846F6A5C179FAD220967B78F0 {unsigned short VerticalFrontPorch : 15;unsigned short VerticalSyncPolarity : 1;};
struct _PCI_EXPRESS_LINK_STATUS_REGISTER___D69A6337DE42BA55564AE370D64BFAE3 {unsigned short LinkSpeed : 4;unsigned short LinkWidth : 6;unsigned short Undefined : 1;unsigned short LinkTraining : 1;unsigned short SlotClockConfig : 1;unsigned short DataLinkLayerActive : 1;unsigned short Rsvd : 2;};
struct _PCI_EXPRESS_ROOT_STATUS_REGISTER___4F434F80AEC764354DD51998F5874A53 {unsigned int PMERequestorId : 16;unsigned int PMEStatus : 1;unsigned int PMEPending : 1;unsigned int Rsvd : 14;};
struct _PCI_EXPRESS_SEC_AER_CAPABILITIES___CD69AB3F7AE1D8CF5FBE5824A8E3B866 {unsigned int SecondaryUncorrectableFirstErrorPtr : 5;unsigned int Reserved : 27;};
struct _PCI_EXPRESS_SLOT_STATUS_REGISTER___E4062700D507CBE17820A0562DC02DD8 {unsigned short AttentionButtonPressed : 1;unsigned short PowerFaultDetected : 1;unsigned short MRLSensorChanged : 1;unsigned short PresenceDetectChanged : 1;unsigned short CommandCompleted : 1;unsigned short MRLSensorState : 1;unsigned short PresenceDetectState : 1;unsigned short ElectromechanicalLockEngaged : 1;unsigned short DataLinkStateChanged : 1;unsigned short Rsvd : 7;};
struct _USB_HUB_30_PORT_REMOTE_WAKE_MASK___F4148C9CC9B661C03E82E006C8766DE5 {unsigned char ConnectRemoteWakeEnable : 1;unsigned char DisconnectRemoteWakeEnable : 1;unsigned char OverCurrentRemoteWakeEnable : 1;unsigned char Reserved0 : 5;};
struct _IPV6_ROUTER_ADVERTISEMENT_FLAGS___0A9F88BE9FBAC81DEAEFC8E114D245E9 {unsigned char Reserved : 3;unsigned char Preference : 2;unsigned char HomeAgent : 1;unsigned char OtherStatefulConfiguration : 1;unsigned char ManagedAddressConfiguration : 1;};
struct _PCI_EXPRESS_ROOT_ERROR_COMMAND___C9FDF6600CA518887781372DF821BFD8 {unsigned int CorrectableErrorReportingEnable : 1;unsigned int NonFatalErrorReportingEnable : 1;unsigned int FatalErrorReportingEnable : 1;unsigned int Reserved : 29;};
struct _PCI_EXPRESS_TPH_ST_TABLE_ENTRY___BF5EA3584C0C6633909A3F73F70152F1 {unsigned short LowerEntry : 8;unsigned short UpperEntry : 8;};
struct _WHEA_ERROR_RECORD_HEADER_FLAGS___437784891AA9E873707BAF02F9C8B216 {unsigned int Recovered : 1;unsigned int PreviousError : 1;unsigned int Simulated : 1;unsigned int Reserved : 29;};
struct _WHEA_GENERIC_ERROR_BLOCKSTATUS___8E748FF62B0DE0015AF471E0F7E6304E {unsigned int UncorrectableError : 1;unsigned int CorrectableError : 1;unsigned int MultipleUncorrectableErrors : 1;unsigned int MultipleCorrectableErrors : 1;unsigned int ErrorDataEntryCount : 10;unsigned int Reserved : 18;};
struct _AER_ENDPOINT_DESCRIPTOR_FLAGS___644EF056A6BCD34BEB130C59ECDD245F {unsigned short UncorrectableErrorMaskRW : 1;unsigned short UncorrectableErrorSeverityRW : 1;unsigned short CorrectableErrorMaskRW : 1;unsigned short AdvancedCapsAndControlRW : 1;unsigned short Reserved : 12;};
struct _AER_ROOTPORT_DESCRIPTOR_FLAGS___EFF43A9EAE4B7B62E532E338439EC9F9 {unsigned short UncorrectableErrorMaskRW : 1;unsigned short UncorrectableErrorSeverityRW : 1;unsigned short CorrectableErrorMaskRW : 1;unsigned short AdvancedCapsAndControlRW : 1;unsigned short RootErrorCommandRW : 1;unsigned short Reserved : 11;};
struct _PCI_EXPRESS_ROOT_ERROR_STATUS___63031A8666915B2575DB899C0AF35723 {unsigned int CorrectableErrorReceived : 1;unsigned int MultipleCorrectableErrorsReceived : 1;unsigned int UncorrectableErrorReceived : 1;unsigned int MultipleUncorrectableErrorsReceived : 1;unsigned int FirstUncorrectableFatal : 1;unsigned int NonFatalErrorMessagesReceived : 1;unsigned int FatalErrorMessagesReceived : 1;unsigned int Reserved : 20;unsigned int AdvancedErrorInterruptMessageNumber : 5;};
struct _NOTIFICATION_MEDIA_STATUS______A64B2677AFBFBDCEB30F044C30307B18 {unsigned char DoorTrayOpen : 1;unsigned char MediaPresent : 1;unsigned char ReservedX : 6;};
struct _PCI_EXPRESS_AER_CAPABILITIES___B122B60A73C0073EBE81EF7DAD0DD591 {unsigned int FirstErrorPointer : 5;unsigned int ECRCGenerationCapable : 1;unsigned int ECRCGenerationEnable : 1;unsigned int ECRCCheckCapable : 1;unsigned int ECRCCheckEnable : 1;unsigned int MultipleHeaderRecordingCapable : 1;unsigned int MultipleHeaderRecordingEnable : 1;unsigned int TlpPrefixLogPresent : 1;unsigned int Reserved : 20;};
struct _PCI_EXPRESS_PME_REQUESTOR_ID___2DC6C11806CCC5D8E8048E1ED5002165 {unsigned short FunctionNumber : 3;unsigned short DeviceNumber : 5;unsigned short BusNumber : 8;};
struct _USB_FUNCTION_SUSPEND_OPTIONS___B9F42C73C99009482819DE74B79AF743 {unsigned char PowerState : 1;unsigned char RemoteWakeEnabled : 1;unsigned char Reserved : 6;};
struct _WHEA_NMI_ERROR_SECTION_FLAGS___0A6B79CB4316EFFE316115F1C7AE6602 {unsigned int HypervisorError : 1;unsigned int Reserved : 31;};
struct _AER_BRIDGE_DESCRIPTOR_FLAGS___DA323376D87A17572D4BAAC59ACA696A {unsigned short UncorrectableErrorMaskRW : 1;unsigned short UncorrectableErrorSeverityRW : 1;unsigned short CorrectableErrorMaskRW : 1;unsigned short AdvancedCapsAndControlRW : 1;unsigned short SecondaryUncorrectableErrorMaskRW : 1;unsigned short SecondaryUncorrectableErrorSevRW : 1;unsigned short SecondaryCapsAndControlRW : 1;unsigned short Reserved : 9;};
struct _CLASS_FUNCTION_SUPPORT_INFO___BC31D02BDFED8E48EFF79C7269298751 {unsigned int BlockLimits : 1;unsigned int BlockDeviceCharacteristics : 1;unsigned int LBProvisioning : 1;unsigned int BlockDeviceRODLimits : 1;unsigned int Reserved : 28;};
struct _PCI_EXPRESS_ERROR_SOURCE_ID___DDA24732C4B871AD437034059C0FCEEF {unsigned short CorrectableSourceIdFun : 3;unsigned short CorrectableSourceIdDev : 5;unsigned short CorrectableSourceIdBus : 8;unsigned short UncorrectableSourceIdFun : 3;unsigned short UncorrectableSourceIdDev : 5;unsigned short UncorrectableSourceIdBus : 8;};
struct _WHEA_XPF_PROCINFO_VALIDBITS___3C1F6002C2BC1C6104160BD0BB9BEBBC {unsigned long long CheckInfo : 1;unsigned long long TargetId : 1;unsigned long long RequesterId : 1;unsigned long long ResponderId : 1;unsigned long long InstructionPointer : 1;unsigned long long Reserved : 59;};
struct _CDB___SPACE_TAPE_MARKS______723BA1E74126376B75E150C11F3E5EB8 {unsigned char Link : 1;unsigned char Flag : 1;unsigned char Reserved : 4;unsigned char VendorUnique : 2;};
struct _GP_LOG_GENERAL_STATISTICS___8FC98EEE0DC2E70BC55E2F60E42B37BA {unsigned long long Count : 48;unsigned long long Reserved : 8;unsigned long long ReservedFlags : 5;unsigned long long Normalized : 1;unsigned long long ValidValue : 1;unsigned long long Supported : 1;};
struct _GP_LOG_GENERAL_STATISTICS___AC9A22C2F9C10B348A85CE2CC0A55F94 {unsigned long long Count : 32;unsigned long long Reserved : 32;};
struct _GP_LOG_GENERAL_STATISTICS___B9451235FC33A6343B7364266B17A909 {unsigned long long RevisionNumber : 16;unsigned long long PageNumber : 8;unsigned long long Reserved : 40;};
struct _GP_LOG_GENERAL_STATISTICS___F7D30742C50C0EA5208BC15FB67D657A {unsigned long long Count : 32;unsigned long long Reserved : 24;unsigned long long ReservedFlags : 5;unsigned long long Normalized : 1;unsigned long long ValidValue : 1;unsigned long long Supported : 1;};
struct _PCI_EXPRESS_SRIOV_CONTROL___62BBC5D0F36C540DD5E2F4B58FEF697D {unsigned short VFEnable : 1;unsigned short VFMigrationEnable : 1;unsigned short VFMigrationInterruptEnable : 1;unsigned short VFMemorySpaceEnable : 1;unsigned short ARICapableHierarchy : 1;unsigned short Reserved1 : 11;};
typedef struct _DOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS *PDOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS;
struct _PCI_EXPRESS_SRIOV_STATUS___230D8E9DD6D1B7B03EB5AF197C5956F1 {unsigned short VFMigrationStatus : 1;unsigned short Reserved1 : 15;};
typedef struct _DOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS DOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS *PDOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS *PDOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS;
struct _COMMON_DEVICE_EXTENSION___CB28ED112FDC3525E02BE69D95E78DC7 {unsigned char IsFdo : 1;unsigned char IsInitialized : 1;unsigned char IsSrbLookasideListInitialized : 1;};
struct _LOG_PARAMETER_HEADER______E905DA64F8277D89B8BF07FD43435193 {unsigned char FormatAndLinking : 2;unsigned char TMC : 2;unsigned char ETC : 1;unsigned char TSD : 1;unsigned char Obsolete : 1;unsigned char DU : 1;};
struct _MODE_INFO_EXCEPTIONS______4093EAC1ED3453951EF80FAEAADF12E7 {unsigned char LogErr : 1;unsigned char Reserved2 : 1;unsigned char Test : 1;unsigned char Dexcpt : 1;unsigned char Reserved3 : 3;unsigned char Perf : 1;};
struct _PCI_EXPRESS_ACS_CONTROL___B4802C50A88B1C851D0BA896AA846108 {unsigned short SourceValidation : 1;unsigned short TranslationBlocking : 1;unsigned short RequestRedirect : 1;unsigned short CompletionRedirect : 1;unsigned short UpstreamForwarding : 1;unsigned short EgressControl : 1;unsigned short DirectTranslation : 1;unsigned short Reserved : 9;};
struct _WHEA_ERROR_PACKET_FLAGS___C7D1ECE9C01D92286062F80E9BABF03D {unsigned int PreviousError : 1;unsigned int Reserved1 : 1;unsigned int HypervisorError : 1;unsigned int Simulated : 1;unsigned int PlatformPfaControl : 1;unsigned int PlatformDirectedOffline : 1;unsigned int Reserved2 : 26;};
struct _WHEA_NOTIFICATION_FLAGS___D9F8BA727F02FA7D5CD681B2EFB762AC {unsigned short PollIntervalRW : 1;unsigned short SwitchToPollingThresholdRW : 1;unsigned short SwitchToPollingWindowRW : 1;unsigned short ErrorThresholdRW : 1;unsigned short ErrorThresholdWindowRW : 1;unsigned short Reserved : 11;};
typedef struct _DOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS DOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS DOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS;
struct SMHBA_LibraryAttributes___91D40CC418AE3D350413FD3CA2834C70 {int tm_mday;int tm_mon;int tm_year;};
struct _PCI_EXPRESS_SRIOV_CAPS___EEE46FBFC49F2EA055853CCCF568835B {unsigned int VFMigrationCapable : 1;unsigned int Reserved1 : 20;unsigned int VFMigrationInterruptNumber : 11;};
struct _CDB___SET_CD_SPEED______001D666376D0C4DBD36F80530E61A012 {unsigned char RotationControl : 2;unsigned char Reserved3 : 6;};
struct _NDIS_IPSEC_OFFLOAD_V1___2B28F3C4BF5C05EE63DD2874B5A956A7 {unsigned int Des : 2;unsigned int Reserved : 2;unsigned int TripleDes : 2;unsigned int NullEsp : 2;unsigned int Transport : 2;unsigned int Tunnel : 2;unsigned int Send : 2;unsigned int Receive : 2;};
struct _NDIS_IPSEC_OFFLOAD_V1___4E67E90746235B7144A86866915CDA2D {unsigned int Md5 : 2;unsigned int Sha_1 : 2;unsigned int Transport : 2;unsigned int Tunnel : 2;unsigned int Send : 2;unsigned int Receive : 2;};
struct _PCI_FIRMWARE_BUS_CAPS___F717B6ED75AD40500CFEB48B9575FAA8 {unsigned char SixtyFourBitDevice : 1;unsigned char PciXMode1EccCapable : 1;unsigned char DeviceIdMessagingCapable : 1;unsigned char ObffWakeSignalCapable : 1;unsigned char Reserved1 : 4;};
struct _WHEA_PERSISTENCE_INFO___7AB0461A727F28B9D4873A511C9F9EFB {unsigned long long Signature : 16;unsigned long long Length : 24;unsigned long long Identifier : 16;unsigned long long Attributes : 2;unsigned long long DoNotLog : 1;unsigned long long Reserved : 5;};
struct _IDENTIFY_DEVICE_DATA___08E70F6BE1BD6D9A212D4A1690DDFD0C {unsigned short LogicalSectorsPerPhysicalSector : 4;unsigned short Reserved0 : 8;unsigned short LogicalSectorLongerThan256Words : 1;unsigned short MultipleLogicalSectorsPerPhysicalSector : 1;unsigned short Reserved1 : 2;};
struct _IDENTIFY_DEVICE_DATA___12A4342928D94AECC3A43EA0575FBAB8 {unsigned short Reserved0 : 1;unsigned short SataGen1 : 1;unsigned short SataGen2 : 1;unsigned short SataGen3 : 1;unsigned short Reserved1 : 4;unsigned short NCQ : 1;unsigned short HIPM : 1;unsigned short PhyEvents : 1;unsigned short NcqUnload : 1;unsigned short NcqPriority : 1;unsigned short HostAutoPS : 1;unsigned short DeviceAutoPS : 1;unsigned short ReadLogDMA : 1;unsigned short Reserved2 : 1;unsigned short CurrentSpeed : 3;unsigned short NcqStreaming : 1;unsigned short NcqQueueMgmt : 1;unsigned short NcqReceiveSend : 1;unsigned short DEVSLPtoReducedPwrState : 1;unsigned short Reserved3 : 8;};
struct _IDENTIFY_DEVICE_DATA___14E40EC7098BD326031AA650FE1DB3FE {unsigned short Reserved0 : 1;unsigned short NonZeroOffsets : 1;unsigned short DmaSetupAutoActivate : 1;unsigned short DIPM : 1;unsigned short InOrderData : 1;unsigned short HardwareFeatureControl : 1;unsigned short SoftwareSettingsPreservation : 1;unsigned short DeviceAutoPS : 1;unsigned short DEVSLP : 1;unsigned short HybridInformation : 1;unsigned short Reserved1 : 6;};
struct _IDENTIFY_DEVICE_DATA___192FB275A46403967D21DE7FA554A203 {unsigned short ReservedForDrqTechnicalReport : 1;unsigned short WriteReadVerify : 1;unsigned short WriteUncorrectableExt : 1;unsigned short ReadWriteLogDmaExt : 1;unsigned short DownloadMicrocodeMode3 : 1;unsigned short FreefallControl : 1;unsigned short SenseDataReporting : 1;unsigned short ExtendedPowerConditions : 1;unsigned short Reserved0 : 6;unsigned short WordValid : 2;};
struct _IDENTIFY_DEVICE_DATA___1BE366EA36C6384A30F12CF34356AF9F {unsigned short AlignmentOfLogicalWithinPhysical : 14;unsigned short Word209Supported : 1;unsigned short Reserved0 : 1;};
struct _IDENTIFY_DEVICE_DATA___203C4FAE0BDA73D274908785397D9C03 {unsigned short FeatureSupported : 1;unsigned short Reserved : 15;};
struct _IDENTIFY_DEVICE_DATA___225B350560ECC59032D39E74312893EB {unsigned short Reserved1 : 1;unsigned short Retired3 : 1;unsigned short ResponseIncomplete : 1;unsigned short Retired2 : 3;unsigned short FixedDevice : 1;unsigned short RemovableMedia : 1;unsigned short Retired1 : 7;unsigned short DeviceType : 1;};
struct _IDENTIFY_DEVICE_DATA___70D97C1CA81047AA3A5C5FF02FCAA482 {unsigned short Supported : 1;unsigned short Reserved0 : 1;unsigned short WriteSameSuported : 1;unsigned short ErrorRecoveryControlSupported : 1;unsigned short FeatureControlSuported : 1;unsigned short DataTablesSuported : 1;unsigned short Reserved1 : 6;unsigned short VendorSpecific : 4;};
struct _IDENTIFY_DEVICE_DATA___73BF718C0A16827ACF4BCCDC8FE0AB80 {unsigned short SupportsTrim : 1;unsigned short Reserved0 : 15;};
struct _IDENTIFY_DEVICE_DATA___7580C65F02C015112FE06020CA159734 {unsigned short MajorVersion : 12;unsigned short TransportType : 4;};
struct _IDENTIFY_DEVICE_DATA___7ADADD728B0146E8D9DFD8DADFF2A168 {unsigned short TimeRequired : 15;unsigned short ExtendedTimeReported : 1;};
struct _IDENTIFY_DEVICE_DATA___87ABCA1EF46434BB0666B0A3893466BC {unsigned short SmartCommands : 1;unsigned short SecurityMode : 1;unsigned short RemovableMediaFeature : 1;unsigned short PowerManagement : 1;unsigned short Reserved1 : 1;unsigned short WriteCache : 1;unsigned short LookAhead : 1;unsigned short ReleaseInterrupt : 1;unsigned short ServiceInterrupt : 1;unsigned short DeviceReset : 1;unsigned short HostProtectedArea : 1;unsigned short Obsolete1 : 1;unsigned short WriteBuffer : 1;unsigned short ReadBuffer : 1;unsigned short Nop : 1;unsigned short Obsolete2 : 1;unsigned short DownloadMicrocode : 1;unsigned short DmaQueued : 1;unsigned short Cfa : 1;unsigned short AdvancedPm : 1;unsigned short Msn : 1;unsigned short PowerUpInStandby : 1;unsigned short ManualPowerUp : 1;unsigned short Reserved2 : 1;unsigned short SetMax : 1;unsigned short Acoustics : 1;unsigned short BigLba : 1;unsigned short DeviceConfigOverlay : 1;unsigned short FlushCache : 1;unsigned short FlushCacheExt : 1;unsigned short WordValid83 : 2;unsigned short SmartErrorLog : 1;unsigned short SmartSelfTest : 1;unsigned short MediaSerialNumber : 1;unsigned short MediaCardPassThrough : 1;unsigned short StreamingFeature : 1;unsigned short GpLogging : 1;unsigned short WriteFua : 1;unsigned short WriteQueuedFua : 1;unsigned short WWN64Bit : 1;unsigned short URGReadStream : 1;unsigned short URGWriteStream : 1;unsigned short ReservedForTechReport : 2;unsigned short IdleWithUnloadFeature : 1;unsigned short WordValid : 2;};
struct _IDENTIFY_DEVICE_DATA___8AC509BE06BC544968FA4DB93AEBE278 {unsigned short SmartCommands : 1;unsigned short SecurityMode : 1;unsigned short RemovableMediaFeature : 1;unsigned short PowerManagement : 1;unsigned short Reserved1 : 1;unsigned short WriteCache : 1;unsigned short LookAhead : 1;unsigned short ReleaseInterrupt : 1;unsigned short ServiceInterrupt : 1;unsigned short DeviceReset : 1;unsigned short HostProtectedArea : 1;unsigned short Obsolete1 : 1;unsigned short WriteBuffer : 1;unsigned short ReadBuffer : 1;unsigned short Nop : 1;unsigned short Obsolete2 : 1;unsigned short DownloadMicrocode : 1;unsigned short DmaQueued : 1;unsigned short Cfa : 1;unsigned short AdvancedPm : 1;unsigned short Msn : 1;unsigned short PowerUpInStandby : 1;unsigned short ManualPowerUp : 1;unsigned short Reserved2 : 1;unsigned short SetMax : 1;unsigned short Acoustics : 1;unsigned short BigLba : 1;unsigned short DeviceConfigOverlay : 1;unsigned short FlushCache : 1;unsigned short FlushCacheExt : 1;unsigned short Resrved3 : 1;unsigned short Words119_120Valid : 1;unsigned short SmartErrorLog : 1;unsigned short SmartSelfTest : 1;unsigned short MediaSerialNumber : 1;unsigned short MediaCardPassThrough : 1;unsigned short StreamingFeature : 1;unsigned short GpLogging : 1;unsigned short WriteFua : 1;unsigned short WriteQueuedFua : 1;unsigned short WWN64Bit : 1;unsigned short URGReadStream : 1;unsigned short URGWriteStream : 1;unsigned short ReservedForTechReport : 2;unsigned short IdleWithUnloadFeature : 1;unsigned short Reserved4 : 2;};
struct _IDENTIFY_DEVICE_DATA___8AD45ED998F239B9E15610B6B0046E61 {unsigned short SecuritySupported : 1;unsigned short SecurityEnabled : 1;unsigned short SecurityLocked : 1;unsigned short SecurityFrozen : 1;unsigned short SecurityCountExpired : 1;unsigned short EnhancedSecurityEraseSupported : 1;unsigned short Reserved0 : 2;unsigned short SecurityLevel : 1;unsigned short Reserved1 : 7;};
struct _IDENTIFY_DEVICE_DATA___AE3BDDA92CBEF5805BC8903A20EBBF23 {unsigned short Reserved : 2;unsigned short NonVolatileWriteCache : 1;unsigned short ExtendedUserAddressableSectorsSupported : 1;unsigned short DeviceEncryptsAllUserData : 1;unsigned short ReadZeroAfterTrimSupported : 1;unsigned short Optional28BitCommandsSupported : 1;unsigned short IEEE1667 : 1;unsigned short DownloadMicrocodeDmaSupported : 1;unsigned short SetMaxSetPasswordUnlockDmaSupported : 1;unsigned short WriteBufferDmaSupported : 1;unsigned short ReadBufferDmaSupported : 1;unsigned short DeviceConfigIdentifySetDmaSupported : 1;unsigned short LPSAERCSupported : 1;unsigned short DeterministicReadAfterTrimSupported : 1;unsigned short CFastSpecSupported : 1;};
struct _IDENTIFY_DEVICE_DATA___AF4503D6E1C5D8B2587D3FEE3C5AA5B3 {unsigned short NVCachePowerModeEnabled : 1;unsigned short Reserved0 : 3;unsigned short NVCacheFeatureSetEnabled : 1;unsigned short Reserved1 : 3;unsigned short NVCachePowerModeVersion : 4;unsigned short NVCacheFeatureSetVersion : 4;};
struct _IDENTIFY_DEVICE_DATA___AF56F38A6D7AB42A96A48238551AF768 {unsigned short ReservedForDrqTechnicalReport : 1;unsigned short WriteReadVerify : 1;unsigned short WriteUncorrectableExt : 1;unsigned short ReadWriteLogDmaExt : 1;unsigned short DownloadMicrocodeMode3 : 1;unsigned short FreefallControl : 1;unsigned short SenseDataReporting : 1;unsigned short ExtendedPowerConditions : 1;unsigned short Reserved0 : 6;unsigned short Reserved1 : 2;};
struct _IDENTIFY_DEVICE_DATA___C42486ED998A28B0E7112D29F2C90329 {unsigned short Reserved0 : 1;unsigned short NonZeroOffsets : 1;unsigned short DmaSetupAutoActivate : 1;unsigned short DIPM : 1;unsigned short InOrderData : 1;unsigned short HardwareFeatureControl : 1;unsigned short SoftwareSettingsPreservation : 1;unsigned short NCQAutosense : 1;unsigned short DEVSLP : 1;unsigned short HybridInformation : 1;unsigned short Reserved1 : 6;};
struct _IDENTIFY_DEVICE_DATA___D62E39E1BA2C739F9147BD3FDBA79656 {unsigned short MaximumCurrentInMA : 12;unsigned short CfaPowerMode1Disabled : 1;unsigned short CfaPowerMode1Required : 1;unsigned short Reserved0 : 1;unsigned short Word160Supported : 1;};
struct _IDENTIFY_PACKET_DATA___4D0D8A6E1575DBFC8FF13E8F4AA06544 {unsigned short Reserved0 : 5;unsigned short GpLogging : 1;unsigned short Reserved1 : 2;unsigned short WWN64Bit : 1;unsigned short Reserved2 : 5;unsigned short WordValid : 2;};
struct _IDENTIFY_PACKET_DATA___65DE72EC710FD9FA26A6C725839D8094 {unsigned short UDMA0Supported : 1;unsigned short UDMA1Supported : 1;unsigned short UDMA2Supported : 1;unsigned short UDMA3Supported : 1;unsigned short UDMA4Supported : 1;unsigned short UDMA5Supported : 1;unsigned short UDMA6Supported : 1;unsigned short MDMA0Supported : 1;unsigned short MDMA1Supported : 1;unsigned short MDMA2Supported : 1;unsigned short DMASupported : 1;unsigned short ReservedWord62 : 4;unsigned short DMADIRBitRequired : 1;};
struct _IDENTIFY_PACKET_DATA___69679A9AA3F0126DD1D8A213A394B62D {unsigned short SmartCommands : 1;unsigned short SecurityMode : 1;unsigned short RemovableMedia : 1;unsigned short PowerManagement : 1;unsigned short PacketCommands : 1;unsigned short WriteCache : 1;unsigned short LookAhead : 1;unsigned short ReleaseInterrupt : 1;unsigned short ServiceInterrupt : 1;unsigned short DeviceReset : 1;unsigned short HostProtectedArea : 1;unsigned short Obsolete1 : 1;unsigned short WriteBuffer : 1;unsigned short ReadBuffer : 1;unsigned short Nop : 1;unsigned short Obsolete2 : 1;unsigned short DownloadMicrocode : 1;unsigned short Reserved1 : 2;unsigned short AdvancedPm : 1;unsigned short Msn : 1;unsigned short PowerUpInStandby : 1;unsigned short ManualPowerUp : 1;unsigned short Reserved2 : 1;unsigned short SetMax : 1;unsigned short Reserved3 : 3;unsigned short FlushCache : 1;unsigned short Reserved : 3;};
struct _IDENTIFY_PACKET_DATA___7580C65F02C015112FE06020CA159734 {unsigned short MajorVersion : 12;unsigned short TransportType : 4;};
struct _IDENTIFY_PACKET_DATA___7B6D9A62CEB2216D6ED8F277820BB2C0 {unsigned short Reserved0 : 1;unsigned short Reserved1 : 2;unsigned short DIPM : 1;unsigned short Reserved2 : 1;unsigned short AsynchronousNotification : 1;unsigned short SoftwareSettingsPreservation : 1;unsigned short Reserved3 : 9;};
struct _IDENTIFY_PACKET_DATA___BA0DC10A0CB33F43BECBCA7EB8B60DE6 {unsigned short SmartCommands : 1;unsigned short SecurityMode : 1;unsigned short RemovableMedia : 1;unsigned short PowerManagement : 1;unsigned short PacketCommands : 1;unsigned short WriteCache : 1;unsigned short LookAhead : 1;unsigned short ReleaseInterrupt : 1;unsigned short ServiceInterrupt : 1;unsigned short DeviceReset : 1;unsigned short HostProtectedArea : 1;unsigned short Obsolete1 : 1;unsigned short WriteBuffer : 1;unsigned short ReadBuffer : 1;unsigned short Nop : 1;unsigned short Obsolete2 : 1;unsigned short DownloadMicrocode : 1;unsigned short Reserved1 : 2;unsigned short AdvancedPm : 1;unsigned short Msn : 1;unsigned short PowerUpInStandby : 1;unsigned short ManualPowerUp : 1;unsigned short Reserved2 : 1;unsigned short SetMax : 1;unsigned short Reserved3 : 3;unsigned short FlushCache : 1;unsigned short Reserved4 : 1;unsigned short WordValid : 2;};
struct _IDENTIFY_PACKET_DATA___C0EA3BD1A61AC099F9618D5EA8CD1861 {unsigned short Reserved0 : 1;unsigned short SataGen1 : 1;unsigned short SataGen2 : 1;unsigned short SataGen3 : 1;unsigned short Reserved1 : 5;unsigned short HIPM : 1;unsigned short PhyEvents : 1;unsigned short Reserved3 : 2;unsigned short HostAutoPS : 1;unsigned short DeviceAutoPS : 1;unsigned short Reserved4 : 1;unsigned short Reserved5 : 1;unsigned short CurrentSpeed : 3;unsigned short SlimlineDeviceAttention : 1;unsigned short HostEnvironmentDetect : 1;unsigned short Reserved : 10;};
struct _IDENTIFY_PACKET_DATA___C4D62A0A000E4C4676633696250E3F53 {unsigned short Reserved0 : 1;unsigned short Reserved1 : 2;unsigned short DIPM : 1;unsigned short Reserved2 : 1;unsigned short AsynchronousNotification : 1;unsigned short SoftwareSettingsPreservation : 1;unsigned short DeviceAutoPS : 1;unsigned short Reserved3 : 8;};
struct _IDENTIFY_PACKET_DATA___D309D3D129FE400D718FE1D4BFEA4633 {unsigned short PacketType : 2;unsigned short IncompleteResponse : 1;unsigned short Reserved1 : 2;unsigned short DrqDelay : 2;unsigned short RemovableMedia : 1;unsigned short CommandPacketType : 5;unsigned short Reserved2 : 1;unsigned short DeviceType : 2;};
struct _IDENTIFY_PACKET_DATA___DE01DC02042077DE4035063B1BEDE90F {unsigned short VendorSpecific : 8;unsigned short DmaSupported : 1;unsigned short LbaSupported : 1;unsigned short IordyDisabled : 1;unsigned short IordySupported : 1;unsigned short Obsolete : 1;unsigned short OverlapSupported : 1;unsigned short QueuedCommandsSupported : 1;unsigned short InterleavedDmaSupported : 1;unsigned short DeviceSpecificStandbyTimerValueMin : 1;unsigned short Obsolete1 : 1;unsigned short ReservedWord50 : 12;unsigned short WordValid : 2;};
struct _USB_INTERFACE_STATUS___D36DABEEA71DB85ACF17B8F77B3F5EA6 {unsigned short RemoteWakeupCapable : 1;unsigned short RemoteWakeupEnabled : 1;unsigned short Reserved : 14;};
struct _WHEA_PCIXBUS_COMMAND___41F7F75BC920B1871F508779A190BAF9 {unsigned long long Command : 56;unsigned long long PCIXCommand : 1;unsigned long long Reserved : 7;};
struct _WHEA_XPF_CACHE_CHECK___6099C0CCB946F741D0A0BD22CEEE4581 {unsigned long long TransactionTypeValid : 1;unsigned long long OperationValid : 1;unsigned long long LevelValid : 1;unsigned long long ProcessorContextCorruptValid : 1;unsigned long long UncorrectedValid : 1;unsigned long long PreciseIPValid : 1;unsigned long long RestartableIPValid : 1;unsigned long long OverflowValid : 1;unsigned long long ReservedValid : 8;unsigned long long TransactionType : 2;unsigned long long Operation : 4;unsigned long long Level : 3;unsigned long long ProcessorContextCorrupt : 1;unsigned long long Uncorrected : 1;unsigned long long PreciseIP : 1;unsigned long long RestartableIP : 1;unsigned long long Overflow : 1;unsigned long long Reserved : 34;};
struct INTEL_CACHE_INFO_EAX___5AAA3FCCBBF8AC3BEF7CBEB634486771 {int Type : 5;unsigned int Level : 3;unsigned int SelfInitializing : 1;unsigned int FullyAssociative : 1;unsigned int Reserved : 4;unsigned int ThreadsSharing : 12;unsigned int ProcessorCores : 6;};
struct INTEL_CACHE_INFO_EBX___B2AB10EA6CDAB471D57E9F6288C6AB56 {unsigned int LineSize : 12;unsigned int Partitions : 10;unsigned int Associativity : 10;};
typedef struct _DOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS *PDOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS *PDOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS;
struct _DEVICE_SET_PASSWORD___BC90B211B20C0B706D62BE1DAC65D53B {unsigned short PasswordIdentifier : 1;unsigned short Reserved1 : 7;unsigned short MasterPasswordCapability : 1;unsigned short Reserved2 : 7;};
struct _DXGK_ALLOCATIONLIST___936A4FEA36CE3B7BC231B771E91D6CFF {unsigned int WriteOperation : 1;unsigned int SegmentId : 5;unsigned int Reserved : 26;};
union _HW_EVENT_DESCRIPTOR___5566F62EE5BDFEA92488954C24E62452 {struct _HW_STREAM_OBJECT *StreamObject;struct _HW_DEVICE_EXTENSION *DeviceExtension;};
struct _USB_ENDPOINT_STATUS___C3CE524354F442F1B06A73CA63E663F1 {unsigned short Halt : 1;unsigned short Reserved : 15;};
typedef struct _DOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS DOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS DOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS;
typedef struct _DOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS *PDOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS *PDOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS;
typedef struct _DOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS *PDOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS;
struct _SUPPORTED_ADVANCES___DA0C519E2D0E0B115FE28FF86470BB99 {unsigned short AdvancedChannelConfigurationSupported : 1;unsigned short Reserved : 15;};
struct _USB_20_PORT_CHANGE___4591AA8E4CFF3B4B4BEE1BDCD73C24C3 {unsigned short ConnectStatusChange : 1;unsigned short PortEnableDisableChange : 1;unsigned short SuspendChange : 1;unsigned short OverCurrentIndicatorChange : 1;unsigned short ResetChange : 1;unsigned short Reserved2 : 11;};
struct _USB_20_PORT_STATUS___D84CE26E1ACA930E07E2FD4D78C39651 {unsigned short CurrentConnectStatus : 1;unsigned short PortEnabledDisabled : 1;unsigned short Suspend : 1;unsigned short OverCurrent : 1;unsigned short Reset : 1;unsigned short Reserved0 : 3;unsigned short PortPower : 1;unsigned short LowSpeedDeviceAttached : 1;unsigned short HighSpeedDeviceAttached : 1;unsigned short PortTestMode : 1;unsigned short PortIndicatorControl : 1;unsigned short Reserved1 : 3;};
struct _USB_30_PORT_CHANGE___1C3A8138BBE744CC2165C52FE2F0EEC2 {unsigned short ConnectStatusChange : 1;unsigned short Reserved2 : 2;unsigned short OverCurrentIndicatorChange : 1;unsigned short ResetChange : 1;unsigned short BHResetChange : 1;unsigned short PortLinkStateChange : 1;unsigned short PortConfigErrorChange : 1;unsigned short Reserved3 : 8;};
struct _USB_30_PORT_STATUS___F68EB907A879B784CB9E4FCD94F166C5 {unsigned short CurrentConnectStatus : 1;unsigned short PortEnabledDisabled : 1;unsigned short Reserved0 : 1;unsigned short OverCurrent : 1;unsigned short Reset : 1;unsigned short PortLinkState : 4;unsigned short PortPower : 1;unsigned short NegotiatedDeviceSpeed : 3;unsigned short Reserved1 : 3;};
struct _WHEA_XPF_BUS_CHECK___46942ADF216CDDF9A252DB6562D8145B {unsigned long long TransactionTypeValid : 1;unsigned long long OperationValid : 1;unsigned long long LevelValid : 1;unsigned long long ProcessorContextCorruptValid : 1;unsigned long long UncorrectedValid : 1;unsigned long long PreciseIPValid : 1;unsigned long long RestartableIPValid : 1;unsigned long long OverflowValid : 1;unsigned long long ParticipationValid : 1;unsigned long long TimeoutValid : 1;unsigned long long AddressSpaceValid : 1;unsigned long long ReservedValid : 5;unsigned long long TransactionType : 2;unsigned long long Operation : 4;unsigned long long Level : 3;unsigned long long ProcessorContextCorrupt : 1;unsigned long long Uncorrected : 1;unsigned long long PreciseIP : 1;unsigned long long RestartableIP : 1;unsigned long long Overflow : 1;unsigned long long Participation : 2;unsigned long long Timeout : 1;unsigned long long AddressSpace : 2;unsigned long long Reserved : 29;};
struct _WHEA_XPF_TLB_CHECK___6099C0CCB946F741D0A0BD22CEEE4581 {unsigned long long TransactionTypeValid : 1;unsigned long long OperationValid : 1;unsigned long long LevelValid : 1;unsigned long long ProcessorContextCorruptValid : 1;unsigned long long UncorrectedValid : 1;unsigned long long PreciseIPValid : 1;unsigned long long RestartableIPValid : 1;unsigned long long OverflowValid : 1;unsigned long long ReservedValid : 8;unsigned long long TransactionType : 2;unsigned long long Operation : 4;unsigned long long Level : 3;unsigned long long ProcessorContextCorrupt : 1;unsigned long long Uncorrected : 1;unsigned long long PreciseIP : 1;unsigned long long RestartableIP : 1;unsigned long long Overflow : 1;unsigned long long Reserved : 34;};
typedef struct _DOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS DOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS DOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS;
typedef struct _DOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS DOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS;
typedef struct _1F16BBD766B6BEFB723ABEAEF53457A3 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_PIN_S;
struct _MM_PREFETCH_FLAGS___F0C4C7D9B872C493007C4EE01995C4E0 {unsigned int Priority : 3;unsigned int RepurposePriority : 3;unsigned int PriorityProtection : 1;unsigned int MustBeZero : 2;unsigned int CannotBeUsedAsFlags : 23;};
struct _USB_DEVICE_STATUS___0B8A99F60B7FA7EDD835D7A15C0FC1AD {unsigned short SelfPowered : 1;unsigned short RemoteWakeup : 1;unsigned short U1Enable : 1;unsigned short U2Enable : 1;unsigned short LtmEnable : 1;unsigned short Reserved : 11;};
struct _WHEA_ERROR_STATUS___390C86F153586C246F7E5B624A004BCC {unsigned long long Reserved1 : 8;unsigned long long ErrorType : 8;unsigned long long Address : 1;unsigned long long Control : 1;unsigned long long Data : 1;unsigned long long Responder : 1;unsigned long long Requester : 1;unsigned long long FirstError : 1;unsigned long long Overflow : 1;unsigned long long Reserved2 : 41;};
struct _WHEA_XPF_MS_CHECK___860AFE6EA3547F3F8363D000B0737353 {unsigned long long ErrorTypeValid : 1;unsigned long long ProcessorContextCorruptValid : 1;unsigned long long UncorrectedValid : 1;unsigned long long PreciseIPValid : 1;unsigned long long RestartableIPValid : 1;unsigned long long OverflowValid : 1;unsigned long long ReservedValue : 10;unsigned long long ErrorType : 3;unsigned long long ProcessorContextCorrupt : 1;unsigned long long Uncorrected : 1;unsigned long long PreciseIP : 1;unsigned long long RestartableIP : 1;unsigned long long Overflow : 1;unsigned long long Reserved : 40;};
struct _XPF_MC_BANK_FLAGS___DD3EFD26B55353E648024B9E0E8957B6 {unsigned char ClearOnInitializationRW : 1;unsigned char ControlDataRW : 1;unsigned char Reserved : 6;};
typedef struct _1F16BBD766B6BEFB723ABEAEF53457A3 KSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_PIN_S;
union NLBConnectionInfo___E95D8C2B45558B13F22A96F6355E1CB1 {NLBTCPConnectionInfo *pTCPInfo;};
typedef struct _E4A6BAB3223452EC45F6B117A37FFCF9 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_PIN_S;
struct _RATE_QUOTA_LIMIT___79FA692AF2D868318B7516C685A0638E {unsigned int RatePercent : 7;unsigned int Reserved0 : 25;};
typedef struct _E4A6BAB3223452EC45F6B117A37FFCF9 KSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_PIN_S;
enum MACRO_MSiSCSI_HBAInformation_FunctionalitySupported {MSiSCSI_HBAInformation_FunctionalitySupported_ID = 10,MSiSCSI_HBAInformation_GenerationalGuid_ID = 11,MSiSCSI_HBAInformation_MaxCDBLength_ID = 12,MSiSCSI_HBAInformation_BiDiScsiCommands_ID = 13,MSiSCSI_HBAInformation_VendorID_ID = 14,MSiSCSI_HBAInformation_VendorModel_ID = 15,MSiSCSI_HBAInformation_VendorVersion_ID = 16,MSiSCSI_HBAInformation_FirmwareVersion_ID = 17,MSiSCSI_HBAInformation_AsicVersion_ID = 18,MSiSCSI_HBAInformation_OptionRomVersion_ID = 19,MSiSCSI_HBAInformation_SerialNumber_ID = 20,MSiSCSI_HBAInformation_DriverName_ID = 21,MSiSCSI_HBASessionConfig_InitialR2T_ID = 1,MSiSCSI_HBASessionConfig_ImmediateData_ID = 2,MSiSCSI_HBASessionConfig_MaxRecvDataSegmentLength_ID = 3,MSiSCSI_HBASessionConfig_MaxBurstLength_ID = 4,MSiSCSI_HBASessionConfig_FirstBurstLength_ID = 5,MSiSCSI_HBASessionConfig_MaxOutstandingR2T_ID = 6,};
enum MACRO_WmiQueryTcpConnectionOffloadHardwareConfig_IN {WmiQueryTcpConnectionOffloadHardwareConfig_IN_Header_ID = 1,WmiQueryTcpConnectionOffloadHardwareConfig_OUT_Offload_ID = 2,};
typedef struct _DOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS *PDOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS *PDOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS;
typedef struct _F9D4D1B8EC80C871C217333061A02293 *PKSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_S;
typedef struct _MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive *PMSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive;
typedef struct _MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive *PMSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive;
typedef struct _DOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS DOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS DOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS;
typedef struct _DXGKARG_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY DXGKARG_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY;
typedef struct _DXGKMDT_OPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS DXGKMDT_OPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS;
typedef struct _F9D4D1B8EC80C871C217333061A02293 KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_S;
enum MACRO_WmiQueryReceiveFilterHardwareCapabilities_IN {WmiQueryReceiveFilterHardwareCapabilities_IN_Header_ID = 1,WmiQueryReceiveFilterHardwareCapabilities_OUT_ReceiveFilterHardwareCapabilities_ID = 2,};
enum MACRO_WmiQueryTcpConnectionOffloadCurrentConfig_IN {WmiQueryTcpConnectionOffloadCurrentConfig_IN_Header_ID = 1,WmiQueryTcpConnectionOffloadCurrentConfig_OUT_Offload_ID = 2,};
typedef struct _MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive;
typedef struct _MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive;
typedef struct _DOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS *PDOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS *PDOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS;
typedef struct _DOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS *PDOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS;
typedef struct _DOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS *PDOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS;
typedef union _IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT *PIDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT;
typedef struct _2AA7958816AF26AF0A1E54EEE587A92C *PKSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE_S;
typedef struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO *PNDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO *PNDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS *PNDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS;
typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY *PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT {unsigned int NoProtection : 1;unsigned int MacroVisionApsTrigger : 1;unsigned int MacroVisionFull : 1;unsigned int Reserved : 29;};
struct _INQUIRYDATA______CB49C0207A42B6C7BC0ECE4108D7F7F8 {unsigned char ANSIVersion : 3;unsigned char ECMAVersion : 3;unsigned char ISOVersion : 2;};
struct _USB_HUB_CHANGE___369110CA5D91C0E783CF3CC547869E9E {unsigned short LocalPowerChange : 1;unsigned short OverCurrentChange : 1;unsigned short Reserved : 14;};
struct _USB_HUB_STATUS___851A5CE610B0F5793D26DBBD007348A4 {unsigned short LocalPowerLost : 1;unsigned short OverCurrent : 1;unsigned short Reserved : 14;};
struct _WHEA_TIMESTAMP___0E69AD184FCFEB7998E3B897182A8ACD {unsigned long long Seconds : 8;unsigned long long Minutes : 8;unsigned long long Hours : 8;unsigned long long Precise : 1;unsigned long long Reserved : 7;unsigned long long Day : 8;unsigned long long Month : 8;unsigned long long Year : 8;unsigned long long Century : 8;};
typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT;
typedef struct _DOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS DOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS;
typedef struct _DOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS DOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS;
typedef struct _DOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS DOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS;
typedef struct _DOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS DOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS;
typedef union _IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT;
typedef struct _2AA7958816AF26AF0A1E54EEE587A92C KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE_S;
enum MACRO_WmiQueryReceiveFilterCurrentCapabilities_IN {WmiQueryReceiveFilterCurrentCapabilities_IN_Header_ID = 1,WmiQueryReceiveFilterCurrentCapabilities_OUT_ReceiveFilterCurrentCapabilities_ID = 2,};
typedef struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO NDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS;
typedef struct _DOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS *PDOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS;
typedef struct _DOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS *PDOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS;
typedef struct _1CE0BD7852F87226759D0185D4AC1198 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_CC_PIN_S;
typedef struct _07B7FBDB71A394C363DCB969C30B9F57 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_S;
typedef struct _NDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES *PNDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES;
typedef struct _NDIS_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES *PNDIS_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES;
typedef struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO *PNDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO;
typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
typedef struct _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR *PUSB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR;
struct _DMAR_GCMD_REG___5304890D6886F1BE734326F607D0FB5D {unsigned int Reserved : 23;unsigned int CompatibilityFormatInterruptEnable : 1;unsigned int SetInterruptRemappingTablePointer : 1;unsigned int InterruptRemappingEnable : 1;unsigned int QueuedInvalidationEnable : 1;unsigned int WriteBufferFlush : 1;unsigned int EnableAdvancedFaultLogging : 1;unsigned int SetFaultLog : 1;unsigned int SetRootTablePointer : 1;unsigned int TranslationEnable : 1;};
struct _DMAR_GSTS_REG___7659272750ECE9356F44E000EC473E45 {unsigned int Reserved : 23;unsigned int CompatibilityFormatInterruptStatus : 1;unsigned int SetInterruptRemappingTablePointerStatus : 1;unsigned int InterruptRemappingEnableStatus : 1;unsigned int QueuedInvalidationEnableStatus : 1;unsigned int WriteBufferFlushStatus : 1;unsigned int EnableAdvancedFaultLoggingStatus : 1;unsigned int SetFaultLogStatus : 1;unsigned int SetRootTablePointerStatus : 1;unsigned int TranslationEnableStatus : 1;};
struct _XPF_MCE_FLAGS___BEDAFFCF8B2FE2B464F6E114319CEB5E {unsigned int MCG_CapabilityRW : 1;unsigned int MCG_GlobalControlRW : 1;unsigned int Reserved : 30;};
typedef struct _DOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS DOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS;
typedef struct _DOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS DOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS;
union HBA_ipaddress___4EAECFF073648158AC6DFCBC0F70CF69 {unsigned char ipv4address[4];unsigned char ipv6address[16];};
typedef struct _1CE0BD7852F87226759D0185D4AC1198 KSPROPERTY_VBICODECFILTERING_STATISTICS_CC_PIN_S;
typedef struct _07B7FBDB71A394C363DCB969C30B9F57 KSPROPERTY_VBICODECFILTERING_STATISTICS_COMMON_S;
enum MACRO_ISCSI_ConnectionStaticInfo_HeaderIntegrity {ISCSI_ConnectionStaticInfo_HeaderIntegrity_ID = 5,ISCSI_ConnectionStaticInfo_DataIntegrity_ID = 6,ISCSI_ConnectionStaticInfo_Reserved_ID = 7,ISCSI_ConnectionStaticInfo_MaxRecvDataSegmentLength_ID = 8,ISCSI_ConnectionStaticInfo_AuthType_ID = 9,ISCSI_ConnectionStaticInfo_LocalAddr_ID = 10,ISCSI_ConnectionStaticInfo_LocalPort_ID = 11,ISCSI_ConnectionStaticInfo_RemoteAddr_ID = 12,ISCSI_ConnectionStaticInfo_RemotePort_ID = 13,ISCSI_ConnectionStaticInfo_EstimatedThroughput_ID = 14,ISCSI_ConnectionStaticInfo_MaxDatagramSize_ID = 15,ISCSI_SessionStaticInfo_UniqueSessionId_ID = 1,ISCSI_SessionStaticInfo_InitiatoriSCSIName_ID = 2,ISCSI_SessionStaticInfo_TargetiSCSIName_ID = 3,ISCSI_SessionStaticInfo_TSID_ID = 4,ISCSI_SessionStaticInfo_ISID_ID = 5,ISCSI_SessionStaticInfo_InitialR2t_ID = 6,ISCSI_SessionStaticInfo_ImmediateData_ID = 7,};
enum MACRO_WmiQueryTcpConnectionOffloadHardwareConfig {WmiQueryTcpConnectionOffloadHardwareConfig = 1,};
typedef struct _NDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES NDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES;
typedef struct _NDIS_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES NDIS_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES;
typedef struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO;
typedef struct _DXGKMDT_OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS *PDXGKMDT_OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS;
typedef struct _IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS *PIO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS;
typedef struct _C96031E4DF2664011E796FDD2EAA04AE *PKSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY_S;
typedef struct _DB6743270A05FF5B7AB17563AEBB3A96 *PKSPROPERTY_VBICODECFILTERING_NABTS_SUBSTREAMS_S;
typedef struct _190FAF90ED71AB17CA7DE27E94D1BCF3 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_S;
typedef struct _MSNdis_80211_ReceivedSignalStrengthEventTrigger *PMSNdis_80211_ReceivedSignalStrengthEventTrigger;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE *PNDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE;
typedef struct _USB_DEVICE_CAPABILITY_SUPERSPEED_USB_DESCRIPTOR *PUSB_DEVICE_CAPABILITY_SUPERSPEED_USB_DESCRIPTOR;
typedef struct _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR;
typedef struct _DXGKMDT_OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS DXGKMDT_OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS;
typedef struct _IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS;
typedef struct _C96031E4DF2664011E796FDD2EAA04AE KSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY_S;
typedef struct _DB6743270A05FF5B7AB17563AEBB3A96 KSPROPERTY_VBICODECFILTERING_NABTS_SUBSTREAMS_S;
typedef struct _190FAF90ED71AB17CA7DE27E94D1BCF3 KSPROPERTY_VBICODECFILTERING_STATISTICS_NABTS_S;
enum MACRO_WmiQueryReceiveFilterHardwareCapabilities {WmiQueryReceiveFilterHardwareCapabilities = 1,};
enum MACRO_WmiQueryTcpConnectionOffloadCurrentConfig {WmiQueryTcpConnectionOffloadCurrentConfig = 1,};
typedef struct _MSNdis_80211_ReceivedSignalStrengthEventTrigger MSNdis_80211_ReceivedSignalStrengthEventTrigger;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE;
typedef struct _NDIS_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES *PNDIS_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES;
typedef struct _NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS *PNDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS;
typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS;
typedef union _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS *PWHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS;
typedef struct _WmiQueryTcpConnectionOffloadHardwareConfig_OUT *PWmiQueryTcpConnectionOffloadHardwareConfig_OUT;
typedef struct _USB_DEVICE_CAPABILITY_SUPERSPEED_USB_DESCRIPTOR USB_DEVICE_CAPABILITY_SUPERSPEED_USB_DESCRIPTOR;
enum _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE {D3DKMDT_VPPMT_UNINITIALIZED = 0x0,D3DKMDT_VPPMT_NOPROTECTION = 0x1,D3DKMDT_VPPMT_MACROVISION_APSTRIGGER = 0x2,D3DKMDT_VPPMT_MACROVISION_FULLSUPPORT = 0x3,};
enum _DISPLAYID_DETAILED_TIMING_TYPE_I_SCANNING_MODE {DIDDT1_Progressive = 0x0,DIDDT1_Interlaced = 0x1,};
enum _DISPLAYID_DETAILED_TIMING_TYPE_I_SYNC_POLARITY {DIDDT1_Sync_Positive = 0x0,DIDDT1_Sync_Negative = 0x1,};
struct _IVRS_IVINFO___B647E9AE4D013B6F339A233AA25F8EF5 {unsigned int ReservedZ0 : 8;unsigned int PASize : 7;unsigned int VASize : 7;unsigned int HtAtsResv : 1;unsigned int ReservedZ1 : 9;};
union _KWAIT_BLOCK___2ACC67C642B9E501E8652DFF4606A234 {struct _KTHREAD *Thread;struct _KQUEUE *NotificationQueue;};
struct _NET_LUID_LH___0227A65EDE726BD8ABDBF310B0E65A75 {unsigned long long Reserved : 24;unsigned long long NetLuidIndex : 24;unsigned long long IfType : 16;};
enum MACRO_WmiQueryNICSwitchHardwareCapabilities_IN {WmiQueryNICSwitchHardwareCapabilities_IN_Header_ID = 1,WmiQueryNICSwitchHardwareCapabilities_OUT_NicSwitchHardwareCapabilities_ID = 2,};
enum MACRO_WmiQueryReceiveFilterCurrentCapabilities {WmiQueryReceiveFilterCurrentCapabilities = 1,};
enum MACRO_WmiQueryReceiveFilterGlobalParameters_IN {WmiQueryReceiveFilterGlobalParameters_IN_Header_ID = 1,WmiQueryReceiveFilterGlobalParameters_OUT_ReceiveFilterGlobalParameters_ID = 2,};
typedef struct _NDIS_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES NDIS_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES;
typedef struct _NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS;
typedef struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_QUERY_ADC *PDOT11_MANUFACTURING_FUNCTIONAL_TEST_QUERY_ADC;
typedef struct _DOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS *PDOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS;
typedef struct _DOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS *PDOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS;
typedef struct _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS *PIO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS;
typedef struct _03760394881EE2760DEA592B594C7CB3 *PKSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST_S;
typedef struct _0D8536C0635F0C9C2E983545F11C4AD1 *PKSRTAUDIO_BUFFER_PROPERTY_WITH_NOTIFICATION32;
typedef struct _NDIS_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES *PNDIS_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES;
typedef union _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER *PPCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER;
typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY *PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY *PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
typedef struct _SES_ADDITIONAL_ELEMENT_STATUS_DIAGNOSTIC_PAGE *PSES_ADDITIONAL_ELEMENT_STATUS_DIAGNOSTIC_PAGE;
typedef struct _USB_DEVICE_CAPABILITY_CONTAINER_ID_DESCRIPTOR *PUSB_DEVICE_CAPABILITY_CONTAINER_ID_DESCRIPTOR;
typedef struct _WmiQueryReceiveFilterHardwareCapabilities_OUT *PWmiQueryReceiveFilterHardwareCapabilities_OUT;
typedef struct _WmiQueryTcpConnectionOffloadCurrentConfig_OUT *PWmiQueryTcpConnectionOffloadCurrentConfig_OUT;
typedef struct _WmiQueryTcpConnectionOffloadHardwareConfig_IN *PWmiQueryTcpConnectionOffloadHardwareConfig_IN;
typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS;
typedef union _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS;
typedef struct _WmiQueryTcpConnectionOffloadHardwareConfig_OUT WmiQueryTcpConnectionOffloadHardwareConfig_OUT;
enum _DISPLAYID_DETAILED_TIMING_TYPE_I_ASPECT_RATIO {DIDDT1_AspectRatio_1x1 = 0x0,DIDDT1_AspectRatio_5x4 = 0x1,DIDDT1_AspectRatio_4x3 = 0x2,DIDDT1_AspectRatio_15x9 = 0x3,DIDDT1_AspectRatio_16x9 = 0x4,DIDDT1_AspectRatio_16x10 = 0x5,};
typedef struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_QUERY_ADC DOT11_MANUFACTURING_FUNCTIONAL_TEST_QUERY_ADC;
typedef struct _DOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS DOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS;
typedef struct _DOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS DOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS;
typedef struct _DXGKMDT_OPM_CONNECTED_HDCP_DEVICE_INFORMATION DXGKMDT_OPM_CONNECTED_HDCP_DEVICE_INFORMATION;
typedef struct _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS;
typedef struct _03760394881EE2760DEA592B594C7CB3 KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST_S;
typedef struct _0D8536C0635F0C9C2E983545F11C4AD1 KSRTAUDIO_BUFFER_PROPERTY_WITH_NOTIFICATION32;
enum MACRO_WmiQueryNICSwitchCurrentCapabilities_IN {WmiQueryNICSwitchCurrentCapabilities_IN_Header_ID = 1,WmiQueryNICSwitchCurrentCapabilities_OUT_NicSwitchCurrentCapabilities_ID = 2,};
typedef struct _NDIS_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES NDIS_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES;
typedef struct _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS *PARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS;
typedef union _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER;
typedef struct _DOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS *PDOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS;
typedef struct _DOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS *PDOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS;
typedef struct _39D33AF960C88F66DA4F36F84B0EC24C *PKSPROPERTY_CAMERACONTROL_NODE_FOCAL_LENGTH_S;
typedef struct _E5C551D5220B94E855DFD2A46F971A3B *PKSPROPERTY_VBICODECFILTERING_CC_SUBSTREAMS_S;
typedef struct _FB8A4E21AD43EDA8BFCCEEFE99FC59C9 *PKSPROPERTY_VBICODECFILTERING_STATISTICS_CC_S;
typedef struct _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY *PNDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY;
typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY *PPCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY;
typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
typedef struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR *PUSB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR;
typedef struct _WINDOWS_BLOCK_DEVICE_TOKEN_LIMITS_DESCRIPTOR *PWINDOWS_BLOCK_DEVICE_TOKEN_LIMITS_DESCRIPTOR;
typedef struct _WmiQueryReceiveFilterCurrentCapabilities_OUT *PWmiQueryReceiveFilterCurrentCapabilities_OUT;
typedef struct _WmiQueryReceiveFilterHardwareCapabilities_IN *PWmiQueryReceiveFilterHardwareCapabilities_IN;
typedef struct _WmiQueryTcpConnectionOffloadCurrentConfig_IN *PWmiQueryTcpConnectionOffloadCurrentConfig_IN;
typedef struct _SES_ADDITIONAL_ELEMENT_STATUS_DIAGNOSTIC_PAGE SES_ADDITIONAL_ELEMENT_STATUS_DIAGNOSTIC_PAGE;
typedef struct _USB_DEVICE_CAPABILITY_CONTAINER_ID_DESCRIPTOR USB_DEVICE_CAPABILITY_CONTAINER_ID_DESCRIPTOR;
typedef struct _WmiQueryReceiveFilterHardwareCapabilities_OUT WmiQueryReceiveFilterHardwareCapabilities_OUT;
typedef struct _WmiQueryTcpConnectionOffloadCurrentConfig_OUT WmiQueryTcpConnectionOffloadCurrentConfig_OUT;
typedef struct _WmiQueryTcpConnectionOffloadHardwareConfig_IN WmiQueryTcpConnectionOffloadHardwareConfig_IN;
enum _DISPLAYID_DETAILED_TIMING_TYPE_I_STEREO_MODE {DIDDT1_Monoscopic = 0x0,DIDDT1_Stereo = 0x1,DIDDT1_Dependent = 0x2,};
typedef struct _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS;
typedef struct _DOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS DOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS;
typedef struct _DOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS DOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS;
typedef struct _39D33AF960C88F66DA4F36F84B0EC24C KSPROPERTY_CAMERACONTROL_NODE_FOCAL_LENGTH_S;
typedef struct _E5C551D5220B94E855DFD2A46F971A3B KSPROPERTY_VBICODECFILTERING_CC_SUBSTREAMS_S;
typedef struct _FB8A4E21AD43EDA8BFCCEEFE99FC59C9 KSPROPERTY_VBICODECFILTERING_STATISTICS_CC_S;
enum MACRO_EnableDisableHardwareFailurePrediction {EnableDisableHardwareFailurePrediction = 2,};
enum MACRO_OID_DOT11_WFD_SEND_INVITATION_RESPONSE {OID_DOT11_WFD_SEND_INVITATION_RESPONSE = 0xE05010E,};
enum MACRO_OID_DOT11_WFD_SEND_PROVISION_DISCOVERY {OID_DOT11_WFD_SEND_PROVISION_DISCOVERY_RESPONSE = 0xE050110,};
typedef struct _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY;
typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE *PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD *PDEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD;
typedef struct _DOT11_MANUFACTURING_SELF_TEST_QUERY_RESULTS *PDOT11_MANUFACTURING_SELF_TEST_QUERY_RESULTS;
typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION *PFILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
typedef struct _IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS *PIO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS;
typedef struct _9283D0FA6633E8568FC062864CF70F24 *PKSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS_S;
typedef struct _B4A25942D193F2EAA86C395C02EC729E *PKSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE_S;
typedef struct _C1C3EF408C46606406ABFE21B3E99DE8 *PKSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE_S;
typedef struct _CF9BC9550FD422E0D8C3D585EC5FABC6 *PKSRTAUDIO_BUFFER_PROPERTY_WITH_NOTIFICATION;
typedef struct _NDIS_SHARED_MEMORY_PROVIDER_CHARACTERISTICS *PNDIS_SHARED_MEMORY_PROVIDER_CHARACTERISTICS;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS *PNDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS;
typedef struct _NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS *PNDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS;
typedef struct _SUPPORTED_SECURITY_PROTOCOLS_PARAMETER_DATA *PSUPPORTED_SECURITY_PROTOCOLS_PARAMETER_DATA;
typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION *PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
typedef struct _WmiQueryReceiveFilterCurrentCapabilities_IN *PWmiQueryReceiveFilterCurrentCapabilities_IN;
typedef struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR;
typedef struct _WINDOWS_BLOCK_DEVICE_TOKEN_LIMITS_DESCRIPTOR WINDOWS_BLOCK_DEVICE_TOKEN_LIMITS_DESCRIPTOR;
typedef struct _WmiQueryReceiveFilterCurrentCapabilities_OUT WmiQueryReceiveFilterCurrentCapabilities_OUT;
typedef struct _WmiQueryReceiveFilterHardwareCapabilities_IN WmiQueryReceiveFilterHardwareCapabilities_IN;
typedef struct _WmiQueryTcpConnectionOffloadCurrentConfig_IN WmiQueryTcpConnectionOffloadCurrentConfig_IN;
struct _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT {unsigned int Identity : 1;unsigned int Rotate90 : 1;unsigned int Rotate180 : 1;unsigned int Rotate270 : 1;};
struct _SMB_DATE___04CC96DF4805108A95FF2CDA81BBA394 {unsigned short Day : 5;unsigned short Month : 4;unsigned short Year : 7;};
struct _SMB_TIME___0AFD35857EE7B930B2A5C166E7350CD8 {unsigned short TwoSeconds : 5;unsigned short Minutes : 6;unsigned short Hours : 5;};
typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT;
typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD;
typedef struct _DOT11_MANUFACTURING_SELF_TEST_QUERY_RESULTS DOT11_MANUFACTURING_SELF_TEST_QUERY_RESULTS;
typedef struct _DXGKMDT_OPM_SET_PROTECTION_LEVEL_PARAMETERS DXGKMDT_OPM_SET_PROTECTION_LEVEL_PARAMETERS;
typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
typedef struct _IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS;
typedef struct _IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT;
typedef struct _9283D0FA6633E8568FC062864CF70F24 KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS_S;
typedef struct _B4A25942D193F2EAA86C395C02EC729E KSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE_S;
typedef struct _C1C3EF408C46606406ABFE21B3E99DE8 KSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE_S;
typedef struct _CF9BC9550FD422E0D8C3D585EC5FABC6 KSRTAUDIO_BUFFER_PROPERTY_WITH_NOTIFICATION;
enum MACRO_EnableDisableFailurePredictionPolling {EnableDisableFailurePredictionPolling = 3,};
enum MACRO_MSiSCSI_InitiatorInstanceFailureEvent {MSiSCSI_InitiatorInstanceFailureEvent_FailureType_ID = 1,MSiSCSI_InitiatorInstanceFailureEvent_RemoteNodeName_ID = 2,};
enum MACRO_WmiQueryNICSwitchHardwareCapabilities {WmiQueryNICSwitchHardwareCapabilities = 1,};
enum MACRO_WmiQueryReceiveFilterGlobalParameters {WmiQueryReceiveFilterGlobalParameters = 1,};
typedef struct _NDIS_SHARED_MEMORY_PROVIDER_CHARACTERISTICS NDIS_SHARED_MEMORY_PROVIDER_CHARACTERISTICS;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS;
typedef struct _NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS;
typedef struct _DOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS *PDOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS;
typedef struct _HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO *PHID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO;
typedef struct _IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS *PIO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS;
typedef struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO *PNDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO *PNDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS *PNDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS;
typedef union _PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER *PPCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER;
typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS *PPCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS;
typedef union _PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER *PPCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER;
typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS;
typedef union _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS *PWHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS;
typedef struct _SUPPORTED_SECURITY_PROTOCOLS_PARAMETER_DATA SUPPORTED_SECURITY_PROTOCOLS_PARAMETER_DATA;
typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
typedef struct _WmiQueryReceiveFilterCurrentCapabilities_IN WmiQueryReceiveFilterCurrentCapabilities_IN;
enum _D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT {D3DKMDT_MFRC_UNINITIALIZED = 0x0,D3DKMDT_MFRC_ACTIVESIZE = 0x1,D3DKMDT_MFRC_MAXPIXELRATE = 0x2,};
struct _D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT {unsigned int Identity : 1;unsigned int Centered : 1;unsigned int Stretched : 1;unsigned int AspectRatioCenteredMax : 1;unsigned int Custom : 1;};
enum _DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT {DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT_PROGRESSIVE = 0x0,DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT_INTERLACED_TOP_FIELD_FIRST = 0x1,DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT_INTERLACED_BOTTOM_FIELD_FIRST = 0x2,};
enum _STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE {ReadyForNextDeviceRequest = 0x0,DeviceRequestComplete = 0x1,SignalMultipleDeviceEvents = 0x2,SignalDeviceEvent = 0x3,DeleteDeviceEvent = 0x4,SignalMultipleDeviceInstanceEvents = 0x5,DeviceNotificationMaximum = 0x6,};
enum _STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE {ReadyForNextStreamDataRequest = 0x0,ReadyForNextStreamControlRequest = 0x1,HardwareStarved = 0x2,StreamRequestComplete = 0x3,SignalMultipleStreamEvents = 0x4,SignalStreamEvent = 0x5,DeleteStreamEvent = 0x6,StreamNotificationMaximum = 0x7,};
typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT;
typedef struct _DOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS DOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS;
typedef struct _HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO;
typedef struct _IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS;
enum MACRO_WmiQueryNICSwitchCurrentCapabilities {WmiQueryNICSwitchCurrentCapabilities = 1,};
typedef struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS;
typedef union _PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER;
typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS;
typedef union _PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER;
typedef struct _DOT11_SEND_INVITATION_RESPONSE_PARAMETERS *PDOT11_SEND_INVITATION_RESPONSE_PARAMETERS;
typedef struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO *PNDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO *PNDIS_WWAN_DEVICE_SERVICE_SESSION_COMPLETE;
typedef struct _NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS *PNDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS;
typedef struct _AAE9FC4E72E05402C2BAEC93236C31D9 *PRECEIVE_TOKEN_INFORMATION_RESPONSE_HEADER;
typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
typedef struct _VBICODECFILTERING_STATISTICS_TELETEXT_PIN *PVBICODECFILTERING_STATISTICS_TELETEXT_PIN;
typedef struct _WmiQueryNICSwitchHardwareCapabilities_OUT *PWmiQueryNICSwitchHardwareCapabilities_OUT;
typedef struct _WmiQueryReceiveFilterGlobalParameters_OUT *PWmiQueryReceiveFilterGlobalParameters_OUT;
typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
typedef union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS;
typedef union _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS;
struct _DL_OUI___AD92321663AD4FB1F8CDF3CCCCCE05F2 {unsigned char Group : 1;unsigned char Local : 1;};
enum _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE {ResourceTypeSingle = 0x0,ResourceTypeRange = 0x1,ResourceTypeExtendedCounterConfiguration = 0x2,ResourceTypeOverflow = 0x3,ResourceTypeMax = 0x4,};
typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION;
typedef struct _D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION;
typedef struct _DOT11_SEND_INVITATION_RESPONSE_PARAMETERS DOT11_SEND_INVITATION_RESPONSE_PARAMETERS;
enum MACRO_ISCSI_ConnectionStaticInfo_Protocol {ISCSI_ConnectionStaticInfo_Protocol_ID = 4,};
enum MACRO_WmiQueryReceiveScaleCapabilities_IN {WmiQueryReceiveScaleCapabilities_IN_Header_ID = 1,WmiQueryReceiveScaleCapabilities_OUT_RssCaps_ID = 2,};
typedef struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO;
typedef struct _NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_EX *PACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_EX;
typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT;
typedef struct _DOT11_MANUFACTURING_SELF_TEST_SET_PARAMS *PDOT11_MANUFACTURING_SELF_TEST_SET_PARAMS;
typedef struct _DOT11_SEND_INVITATION_REQUEST_PARAMETERS *PDOT11_SEND_INVITATION_REQUEST_PARAMETERS;
typedef struct _B8CB9EEA0904F1CA6D6978D8DADC6932 *PKSPROPERTY_TUNER_NETWORKTYPE_SCAN_CAPS_S;
typedef struct _8630A1F515F1D9088A894BA95A0F4D66 *PKSPROPERTY_VBICODECFILTERING_SCANLINES_S;
typedef struct _NDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES *PNDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES;
typedef struct _NDIS_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES *PNDIS_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES;
typedef struct _NDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO *PNDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO;
typedef union _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER *PPCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK *PPCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK;
typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY *PPCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY;
typedef struct _REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION *PREG_CALLBACK_CONTEXT_CLEANUP_INFORMATION;
typedef struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION *PREG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION;
typedef struct _SES_ADDITIONAL_ELEMENT_STATUS_DESCRIPTOR *PSES_ADDITIONAL_ELEMENT_STATUS_DESCRIPTOR;
typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY *PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
typedef struct _WmiQueryNICSwitchCurrentCapabilities_OUT *PWmiQueryNICSwitchCurrentCapabilities_OUT;
typedef struct _WmiQueryNICSwitchHardwareCapabilities_IN *PWmiQueryNICSwitchHardwareCapabilities_IN;
typedef struct _WmiQueryReceiveFilterGlobalParameters_IN *PWmiQueryReceiveFilterGlobalParameters_IN;
typedef struct _AAE9FC4E72E05402C2BAEC93236C31D9 RECEIVE_TOKEN_INFORMATION_RESPONSE_HEADER;
typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
typedef struct _VBICODECFILTERING_STATISTICS_TELETEXT_PIN VBICODECFILTERING_STATISTICS_TELETEXT_PIN;
typedef struct _WmiQueryNICSwitchHardwareCapabilities_OUT WmiQueryNICSwitchHardwareCapabilities_OUT;
typedef struct _WmiQueryReceiveFilterGlobalParameters_OUT WmiQueryReceiveFilterGlobalParameters_OUT;
enum _DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_MODE {DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_NONE = 0x0,DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_FRAME0 = 0x1,DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_FRAME1 = 0x2,};
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_EX ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_EX;
typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT;
typedef struct _DOT11_MANUFACTURING_SELF_TEST_SET_PARAMS DOT11_MANUFACTURING_SELF_TEST_SET_PARAMS;
typedef struct _DOT11_SEND_INVITATION_REQUEST_PARAMETERS DOT11_SEND_INVITATION_REQUEST_PARAMETERS;
typedef struct _B8CB9EEA0904F1CA6D6978D8DADC6932 KSPROPERTY_TUNER_NETWORKTYPE_SCAN_CAPS_S;
typedef struct _8630A1F515F1D9088A894BA95A0F4D66 KSPROPERTY_VBICODECFILTERING_SCANLINES_S;
enum MACRO_ClearAllDevInstancesHealthCounters {ClearAllDevInstancesHealthCounters = 1,ClearDevInstanceHealthCounters = 2,};
enum MACRO_WmiMonitorSupportedDisplayFeatures {WmiMonitorSupportedDisplayFeatures_StandbySupported_ID = 1,WmiMonitorSupportedDisplayFeatures_SuspendSupported_ID = 2,WmiMonitorSupportedDisplayFeatures_ActiveOffSupported_ID = 3,WmiMonitorSupportedDisplayFeatures_DisplayType_ID = 4,WmiMonitorSupportedDisplayFeatures_sRGBSupported_ID = 5,WmiMonitorSupportedDisplayFeatures_HasPreferredTimingMode_ID = 6,WmiMonitorSupportedDisplayFeatures_GTFSupported_ID = 7,};
enum MACRO_WmiQueryPciDeviceCustomProperty_IN {WmiQueryPciDeviceCustomProperty_IN_Header_ID = 1,WmiQueryPciDeviceCustomProperty_OUT_PciDeviceProperty_ID = 2,};
enum MACRO_WmiQueryReceiveFilterParameters_IN {WmiQueryReceiveFilterParameters_IN_Header_ID = 1,WmiQueryReceiveFilterParameters_IN_ReceiveFilterParameters_ID = 2,WmiQueryReceiveFilterParameters_OUT_ReceiveFilterParameters_ID = 2,};
typedef struct _NDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES NDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES;
typedef struct _NDIS_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES NDIS_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES;
typedef struct _NDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO NDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_EX *PACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_EX;
typedef union _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK;
typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY;
typedef struct DOT11_ASSOCIATION_COMPLETION_PARAMETERS *PDOT11_ASSOCIATION_COMPLETION_PARAMETERS;
typedef struct _DOT11_INCOMING_ASSOC_STARTED_PARAMETERS *PDOT11_INCOMING_ASSOC_STARTED_PARAMETERS;
typedef struct DOT11_MANUFACTURING_CALLBACK_PARAMETERS *PDOT11_MANUFACTURING_CALLBACK_PARAMETERS;
typedef struct _DOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS *PDOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS;
typedef struct _DOT11_POWER_MGMT_AUTO_MODE_ENABLED_INFO *PDOT11_POWER_MGMT_AUTO_MODE_ENABLED_INFO;
typedef struct _DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG *PDOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG;
typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION *PFILE_PROCESS_IDS_USING_FILE_INFORMATION;
typedef struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION *PINSTANCE_AGGREGATE_STANDARD_INFORMATION;
typedef struct _47B9B8BEF06705D3AC5342748B9ED2E2 *PKSPROPERTY_BDA_RF_TUNER_STANDARD_MODE_S;
typedef struct _1B63FBE2ECC383A1603E3615A504628D *PKSPROPERTY_CAMERACONTROL_FOCAL_LENGTH_S;
typedef struct _4DD80126BF490D6FAEABA1D4740D8838 *PKSRTAUDIO_NOTIFICATION_EVENT_PROPERTY32;
typedef struct _MSNdis_EthernetMaximumMulticastListSize *PMSNdis_EthernetMaximumMulticastListSize;
typedef struct _MSNdis_NetworkDirectAdapterCapabilities *PMSNdis_NetworkDirectAdapterCapabilities;
typedef struct _MSNdis_StatusDot11AssociationCompletion *PMSNdis_StatusDot11AssociationCompletion;
typedef struct _MSNdis_StatusExternalConnectivityChange *PMSNdis_StatusExternalConnectivityChange;
typedef struct _NDIS_MINIPORT_INTERRUPT_CHARACTERISTICS *PNDIS_MINIPORT_INTERRUPT_CHARACTERISTICS;
typedef union _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY *PPCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY;
typedef struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION *PPROCESS_REVOKE_FILE_HANDLES_INFORMATION;
typedef struct _SCSI_SENSE_DESCRIPTOR_ATA_STATUS_RETURN *PSCSI_SENSE_DESCRIPTOR_ATA_STATUS_RETURN;
typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE *PSTORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION *PTRANSACTIONMANAGER_RECOVERY_INFORMATION;
typedef struct _USB_BUS_INTERFACE_HUB_SELECTIVE_SUSPEND *PUSB_BUS_INTERFACE_HUB_SELECTIVE_SUSPEND;
typedef struct _VBICODECFILTERING_STATISTICS_COMMON_PIN *PVBICODECFILTERING_STATISTICS_COMMON_PIN;
typedef struct _VIDEO_PORT_WCMEMORYPROTECTION_INTERFACE *PVIDEO_PORT_WCMEMORYPROTECTION_INTERFACE;
typedef union _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS *PWHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS;
typedef union _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS *PWHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS;
typedef struct _WmiQueryNICSwitchCurrentCapabilities_IN *PWmiQueryNICSwitchCurrentCapabilities_IN;
typedef struct _REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION;
typedef struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION;
typedef struct _SES_ADDITIONAL_ELEMENT_STATUS_DESCRIPTOR SES_ADDITIONAL_ELEMENT_STATUS_DESCRIPTOR;
typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
typedef struct _WmiQueryNICSwitchCurrentCapabilities_OUT WmiQueryNICSwitchCurrentCapabilities_OUT;
typedef struct _WmiQueryNICSwitchHardwareCapabilities_IN WmiQueryNICSwitchHardwareCapabilities_IN;
typedef struct _WmiQueryReceiveFilterGlobalParameters_IN WmiQueryReceiveFilterGlobalParameters_IN;
enum _D3DKMDT_GRAPHICS_PREEMPTION_GRANULARITY {D3DKMDT_GRAPHICS_PREEMPTION_NONE = 0x0,D3DKMDT_GRAPHICS_PREEMPTION_DMA_BUFFER_BOUNDARY = 0x64,D3DKMDT_GRAPHICS_PREEMPTION_PRIMITIVE_BOUNDARY = 0xC8,D3DKMDT_GRAPHICS_PREEMPTION_TRIANGLE_BOUNDARY = 0x12C,D3DKMDT_GRAPHICS_PREEMPTION_PIXEL_BOUNDARY = 0x190,D3DKMDT_GRAPHICS_PREEMPTION_SHADER_BOUNDARY = 0x1F4,};
enum _DXGKMDT_OPM_BUS_TYPE_AND_IMPLEMENTATION {DXGKMDT_OPM_BUS_TYPE_OTHER = 0x0,DXGKMDT_OPM_BUS_TYPE_PCI = 0x1,DXGKMDT_OPM_BUS_TYPE_PCIX = 0x2,DXGKMDT_OPM_BUS_TYPE_PCIEXPRESS = 0x3,DXGKMDT_OPM_BUS_TYPE_AGP = 0x4,DXGKMDT_OPM_BUS_IMPLEMENTATION_MODIFIER_INSIDE_OF_CHIPSET = 0x10000,DXGKMDT_OPM_BUS_IMPLEMENTATION_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP = 0x20000,DXGKMDT_OPM_BUS_IMPLEMENTATION_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 0x30000,DXGKMDT_OPM_BUS_IMPLEMENTATION_MODIFIER_DAUGHTER_BOARD_CONNECTOR = 0x40000,DXGKMDT_OPM_BUS_IMPLEMENTATION_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 0x50000,DXGKMDT_OPM_BUS_IMPLEMENTATION_MODIFIER_NON_STANDARD = 0x80000000,DXGKMDT_OPM_COPP_COMPATIBLE_BUS_TYPE_INTEGRATED = 0x80000000,};
enum _DXGKMDT_OPM_IMAGE_ASPECT_RATIO_EN300294 {DXGKMDT_OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_4_BY_3 = 0x0,DXGKMDT_OPM_ASPECT_RATIO_EN300294_BOX_14_BY_9_CENTER = 0x1,DXGKMDT_OPM_ASPECT_RATIO_EN300294_BOX_14_BY_9_TOP = 0x2,DXGKMDT_OPM_ASPECT_RATIO_EN300294_BOX_16_BY_9_CENTER = 0x3,DXGKMDT_OPM_ASPECT_RATIO_EN300294_BOX_16_BY_9_TOP = 0x4,DXGKMDT_OPM_ASPECT_RATIO_EN300294_BOX_GT_16_BY_9_CENTER = 0x5,DXGKMDT_OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_4_BY_3_PROTECTED_CENTER = 0x6,DXGKMDT_OPM_ASPECT_RATIO_EN300294_FULL_FORMAT_16_BY_9_ANAMORPHIC = 0x7,DXGKMDT_OPM_ASPECT_RATIO_FORCE_ULONG = 0x7FFFFFFF,};
union _QUAD___563CC45C8CF107F9F4F62DBD7F648A58 {long long UseThisFieldToCopy;double DoNotUseThisField;};
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_EX ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_EX;
typedef struct _DOT11_INCOMING_ASSOC_STARTED_PARAMETERS DOT11_INCOMING_ASSOC_STARTED_PARAMETERS;
typedef struct _DOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS DOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS;
typedef struct _DOT11_POWER_MGMT_AUTO_MODE_ENABLED_INFO DOT11_POWER_MGMT_AUTO_MODE_ENABLED_INFO;
typedef struct _DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG;
typedef struct _DXGKARG_GETSTANDARDALLOCATIONDRIVERDATA DXGKARG_GETSTANDARDALLOCATIONDRIVERDATA;
typedef struct _DXGK_MONITORFREQUENCYRANGESET_INTERFACE DXGK_MONITORFREQUENCYRANGESET_INTERFACE;
typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION FILE_PROCESS_IDS_USING_FILE_INFORMATION;
typedef struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION INSTANCE_AGGREGATE_STANDARD_INFORMATION;
typedef struct _47B9B8BEF06705D3AC5342748B9ED2E2 KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE_S;
typedef struct _1B63FBE2ECC383A1603E3615A504628D KSPROPERTY_CAMERACONTROL_FOCAL_LENGTH_S;
typedef struct _4DD80126BF490D6FAEABA1D4740D8838 KSRTAUDIO_NOTIFICATION_EVENT_PROPERTY32;
enum MACRO_CreateVirtualPortExUsingDHCHAP_IN {CreateVirtualPortExUsingDHCHAP_IN_WWPN_ID = 2,CreateVirtualPortExUsingDHCHAP_IN_WWNN_ID = 3,CreateVirtualPortExUsingDHCHAP_IN_Tag_ID = 4,CreateVirtualPortExUsingDHCHAP_IN_VirtualName_ID = 5,CreateVirtualPortExUsingDHCHAP_IN_CHAP_ID = 6,CreateVirtualPortExUsingDHCHAP_OUT_Status_ID = 1,};
enum MACRO_MSiSCSI_InitiatorNodeFailureEvent {MSiSCSI_InitiatorNodeFailureEvent_FailureType_ID = 2,MSiSCSI_InitiatorNodeFailureEvent_TargetFailureName_ID = 3,MSiSCSI_InitiatorNodeFailureEvent_TargetFailureAddr_ID = 4,};
enum MACRO_WmiQueryReceiveQueueParameters_IN {WmiQueryReceiveQueueParameters_IN_Header_ID = 1,WmiQueryReceiveQueueParameters_IN_ReceiveQueueParameters_ID = 2,WmiQueryReceiveQueueParameters_OUT_ReceiveQueueParameters_ID = 2,};
typedef struct _MSNdis_EthernetMaximumMulticastListSize MSNdis_EthernetMaximumMulticastListSize;
typedef struct _MSNdis_NetworkDirectAdapterCapabilities MSNdis_NetworkDirectAdapterCapabilities;
typedef struct _MSNdis_StatusDot11AssociationCompletion MSNdis_StatusDot11AssociationCompletion;
typedef struct _MSNdis_StatusExternalConnectivityChange MSNdis_StatusExternalConnectivityChange;
typedef struct _NDIS_MINIPORT_INTERRUPT_CHARACTERISTICS NDIS_MINIPORT_INTERRUPT_CHARACTERISTICS;
typedef struct _CDROM_EXCEPTION_PERFORMANCE_DESCRIPTOR *PCDROM_EXCEPTION_PERFORMANCE_DESCRIPTOR;
typedef union _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY;
typedef struct _CLASS_VPD_ECOP_BLOCK_DEVICE_ROD_LIMITS *PCLASS_VPD_ECOP_BLOCK_DEVICE_ROD_LIMITS;
typedef struct DOT11_CONNECTION_COMPLETION_PARAMETERS *PDOT11_CONNECTION_COMPLETION_PARAMETERS;
typedef struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_RX *PDOT11_MANUFACTURING_FUNCTIONAL_TEST_RX;
typedef struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_TX *PDOT11_MANUFACTURING_FUNCTIONAL_TEST_TX;
typedef struct _DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS *PDOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS;
typedef struct _DOT11_WFD_DISCOVER_COMPLETE_PARAMETERS *PDOT11_WFD_DISCOVER_COMPLETE_PARAMETERS;
typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION *PFILE_NETWORK_PHYSICAL_NAME_INFORMATION;
typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER *PFSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER *PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
typedef struct _IOCTL_IR_ENTER_PRIORITY_RECEIVE_PARAMS *PIOCTL_IR_ENTER_PRIORITY_RECEIVE_PARAMS;
typedef struct _KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT *PKSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT;
typedef struct _LOG_PARAMETER_THRESHOLD_RESOURCE_COUNT *PLOG_PARAMETER_THRESHOLD_RESOURCE_COUNT;
typedef struct _MSNdis_StatusDot11ConnectionCompletion *PMSNdis_StatusDot11ConnectionCompletion;
typedef struct _MSNdis_StatusMediaSpecificIndicationEx *PMSNdis_StatusMediaSpecificIndicationEx;
typedef struct _NDIS_CO_CALL_MANAGER_OPTIONAL_HANDLERS *PNDIS_CO_CALL_MANAGER_OPTIONAL_HANDLERS;
typedef struct _NDIS_NBL_MEDIA_SPECIFIC_INFORMATION_EX *PNDIS_NBL_MEDIA_SPECIFIC_INFORMATION_EX;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE *PNDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE;
typedef struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER *PPCI_EXPRESS_ENHANCED_CAPABILITY_HEADER;
typedef union _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER *PPCI_EXPRESS_LINK_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER *PPCI_EXPRESS_ROOT_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER *PPCI_EXPRESS_SLOT_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS *PPCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS;
typedef struct _PCI_EXPRESS_VENDOR_SPECIFIC_CAPABILITY *PPCI_EXPRESS_VENDOR_SPECIFIC_CAPABILITY;
typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION *PRESOURCEMANAGER_COMPLETION_INFORMATION;
typedef struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION PROCESS_REVOKE_FILE_HANDLES_INFORMATION;
typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST *PSTORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION *PTRANSACTIONMANAGER_LOGPATH_INFORMATION;
typedef struct _USBC_DEVICE_CONFIGURATION_INTERFACE_V1 *PUSBC_DEVICE_CONFIGURATION_INTERFACE_V1;
typedef struct _VBICODECFILTERING_STATISTICS_NABTS_PIN *PVBICODECFILTERING_STATISTICS_NABTS_PIN;
typedef struct _WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS *PWWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS;
typedef struct _SCSI_SENSE_DESCRIPTOR_ATA_STATUS_RETURN SCSI_SENSE_DESCRIPTOR_ATA_STATUS_RETURN;
typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION TRANSACTIONMANAGER_RECOVERY_INFORMATION;
typedef struct _USB_BUS_INTERFACE_HUB_SELECTIVE_SUSPEND USB_BUS_INTERFACE_HUB_SELECTIVE_SUSPEND;
typedef struct _VBICODECFILTERING_STATISTICS_COMMON_PIN VBICODECFILTERING_STATISTICS_COMMON_PIN;
typedef struct _VIDEO_PORT_WCMEMORYPROTECTION_INTERFACE VIDEO_PORT_WCMEMORYPROTECTION_INTERFACE;
typedef union _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS;
typedef union _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS;
typedef struct _WmiQueryNICSwitchCurrentCapabilities_IN WmiQueryNICSwitchCurrentCapabilities_IN;
enum _D3DKMDT_COMPUTE_PREEMPTION_GRANULARITY {D3DKMDT_COMPUTE_PREEMPTION_NONE = 0x0,D3DKMDT_COMPUTE_PREEMPTION_DMA_BUFFER_BOUNDARY = 0x64,D3DKMDT_COMPUTE_PREEMPTION_DISPATCH_BOUNDARY = 0xC8,D3DKMDT_COMPUTE_PREEMPTION_THREAD_GROUP_BOUNDARY = 0x12C,D3DKMDT_COMPUTE_PREEMPTION_THREAD_BOUNDARY = 0x190,D3DKMDT_COMPUTE_PREEMPTION_SHADER_BOUNDARY = 0x1F4,};
enum _WWAN_DEVICE_SERVICE_SESSION_CAPABILITY {WwanDeviceServiceSessionNotSupported = 0x0,WwanDeviceServiceSessionWriteSupported = 0x1,WwanDeviceServiceSessionReadSupported = 0x2,};
typedef struct _CDROM_EXCEPTION_PERFORMANCE_DESCRIPTOR CDROM_EXCEPTION_PERFORMANCE_DESCRIPTOR;
typedef struct _CLASS_VPD_ECOP_BLOCK_DEVICE_ROD_LIMITS CLASS_VPD_ECOP_BLOCK_DEVICE_ROD_LIMITS;
typedef struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_RX DOT11_MANUFACTURING_FUNCTIONAL_TEST_RX;
typedef struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_TX DOT11_MANUFACTURING_FUNCTIONAL_TEST_TX;
typedef struct _DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS;
typedef struct _DOT11_WFD_DISCOVER_COMPLETE_PARAMETERS DOT11_WFD_DISCOVER_COMPLETE_PARAMETERS;
typedef struct _DXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS DXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS;
typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER FSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER FSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
typedef struct _IOCTL_IR_ENTER_PRIORITY_RECEIVE_PARAMS IOCTL_IR_ENTER_PRIORITY_RECEIVE_PARAMS;
typedef struct _IRB_REQ_ISOCH_MODIFY_STREAM_PROPERTIES IRB_REQ_ISOCH_MODIFY_STREAM_PROPERTIES;
typedef struct _IRB_REQ_ISOCH_QUERY_CURRENT_CYCLE_TIME IRB_REQ_ISOCH_QUERY_CURRENT_CYCLE_TIME;
typedef struct _KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT;
typedef struct _LOG_PARAMETER_THRESHOLD_RESOURCE_COUNT LOG_PARAMETER_THRESHOLD_RESOURCE_COUNT;
enum MACRO_GetErrorInjectionCapabilitiesRtn {GetErrorInjectionCapabilitiesRtn = 1,};
enum MACRO_ISCSI_ConnectionStaticInfo_State {ISCSI_ConnectionStaticInfo_State_ID = 3,};
enum MACRO_WmiQueryHardwareOffloadConfig_IN {WmiQueryHardwareOffloadConfig_IN_Header_ID = 1,WmiQueryHardwareOffloadConfig_OUT_Offload_ID = 2,};
enum MACRO_WmiQueryReceiveScaleCapabilities {WmiQueryReceiveScaleCapabilities = 1,};
typedef struct _MSNdis_StatusDot11ConnectionCompletion MSNdis_StatusDot11ConnectionCompletion;
typedef struct _MSNdis_StatusMediaSpecificIndicationEx MSNdis_StatusMediaSpecificIndicationEx;
typedef struct _NDIS_CO_CALL_MANAGER_OPTIONAL_HANDLERS NDIS_CO_CALL_MANAGER_OPTIONAL_HANDLERS;
typedef struct _NDIS_NBL_MEDIA_SPECIFIC_INFORMATION_EX NDIS_NBL_MEDIA_SPECIFIC_INFORMATION_EX;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE;
typedef struct _ACPI_DEVICE_INFORMATION_OUTPUT_BUFFER *PACPI_DEVICE_INFORMATION_OUTPUT_BUFFER;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER *PACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER;
typedef struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER;
typedef union _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER PCI_EXPRESS_LINK_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS;
typedef struct _PCI_EXPRESS_VENDOR_SPECIFIC_CAPABILITY PCI_EXPRESS_VENDOR_SPECIFIC_CAPABILITY;
typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION *PCLAIM_SECURITY_ATTRIBUTES_INFORMATION;
typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE *PDEVICE_DATA_SET_LB_PROVISIONING_STATE;
typedef struct DOT11_PMKID_CANDIDATE_LIST_PARAMETERS *PDOT11_PMKID_CANDIDATE_LIST_PARAMETERS;
typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION *PFILE_FS_PERSISTENT_VOLUME_INFORMATION;
typedef struct _FILTER_AGGREGATE_STANDARD_INFORMATION *PFILTER_AGGREGATE_STANDARD_INFORMATION;
typedef struct _IPSEC_OFFLOAD_V2_SECURITY_ASSOCIATION *PIPSEC_OFFLOAD_V2_SECURITY_ASSOCIATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
typedef struct _451777DAEA681FBE98F7EEED9576F1D3 *PKSPROPERTY_BDA_RF_TUNER_SCAN_STATUS_S;
typedef struct _441EBF211493C42D9642F77D873F68D1 *PKSPROPERTY_VIDEOCOMPRESSION_GETINFO_S;
typedef struct _D2D205A4E5DA2498F5010F3E3EADEEBB *PKSPROPERTY_VIDEOCONTROL_FRAME_RATES_S;
typedef struct _AE319F515EC2CAE237A98B55063CA2F4 *PKSRTAUDIO_NOTIFICATION_EVENT_PROPERTY;
typedef struct _L2CAP_RETRANSMISSION_AND_FLOW_CONTROL *PL2CAP_RETRANSMISSION_AND_FLOW_CONTROL;
typedef struct _MSNdis_80211_BaseServiceSetIdentifier *PMSNdis_80211_BaseServiceSetIdentifier;
typedef struct _MSNdis_EthernetMoreTransmitCollisions *PMSNdis_EthernetMoreTransmitCollisions;
typedef struct _MSNdis_StatusDot11MPDUMaxLengthChange *PMSNdis_StatusDot11MPDUMaxLengthChange;
typedef struct _MSiSCSI_InitiatorInstanceFailureEvent *PMSiSCSI_InitiatorInstanceFailureEvent;
typedef struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION *PNDIS_802_11_AUTHENTICATION_ENCRYPTION;
typedef struct _NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS *PNDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS;
typedef struct _NDIS_TAPI_CONDITIONAL_MEDIA_DETECTION *PNDIS_TAPI_CONDITIONAL_MEDIA_DETECTION;
typedef struct _NDIS_TAPI_SET_DEFAULT_MEDIA_DETECTION *PNDIS_TAPI_SET_DEFAULT_MEDIA_DETECTION;
typedef struct _NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES *PNDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_READ *PNDIS_WWAN_DEVICE_SERVICE_SESSION_READ;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION *PNDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION;
typedef union _PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER *PPCI_EXPRESS_DEVICE_CONTROL_2_REGISTER;
typedef struct _REAL_TIME_NOTIFICATION_SETTING_OUTPUT *PREAL_TIME_NOTIFICATION_SETTING_OUTPUT;
typedef struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES *PSTORAGE_LB_PROVISIONING_MAP_RESOURCES;
typedef struct _VBICODECFILTERING_STATISTICS_TELETEXT *PVBICODECFILTERING_STATISTICS_TELETEXT;
typedef struct _VPD_BLOCK_DEVICE_CHARACTERISTICS_PAGE *PVPD_BLOCK_DEVICE_CHARACTERISTICS_PAGE;
typedef union _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS *PWHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS;
typedef struct _WHEA_PSHED_PLUGIN_REGISTRATION_PACKET *PWHEA_PSHED_PLUGIN_REGISTRATION_PACKET;
typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION RESOURCEMANAGER_COMPLETION_INFORMATION;
typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION TRANSACTIONMANAGER_LOGPATH_INFORMATION;
typedef struct _USBC_DEVICE_CONFIGURATION_INTERFACE_V1 USBC_DEVICE_CONFIGURATION_INTERFACE_V1;
typedef struct _VBICODECFILTERING_STATISTICS_NABTS_PIN VBICODECFILTERING_STATISTICS_NABTS_PIN;
typedef struct _WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS;
enum _D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING {D3DDDI_VSSLO_UNINITIALIZED = 0x0,D3DDDI_VSSLO_PROGRESSIVE = 0x1,D3DDDI_VSSLO_INTERLACED_UPPERFIELDFIRST = 0x2,D3DDDI_VSSLO_INTERLACED_LOWERFIELDFIRST = 0x3,D3DDDI_VSSLO_OTHER = 0xFF,};
enum _D3DKMDT_ENUMCOFUNCMODALITY_PIVOT_TYPE {D3DKMDT_EPT_UNINITIALIZED = 0x0,D3DKMDT_EPT_VIDPNSOURCE = 0x1,D3DKMDT_EPT_VIDPNTARGET = 0x2,D3DKMDT_EPT_SCALING = 0x3,D3DKMDT_EPT_ROTATION = 0x4,D3DKMDT_EPT_NOPIVOT = 0x5,};
enum _D3DKMDT_MONITOR_ORIENTATION_AWARENESS {D3DKMDT_MOA_UNINITIALIZED = 0x0,D3DKMDT_MOA_NONE = 0x1,D3DKMDT_MOA_POLLED = 0x2,D3DKMDT_MOA_INTERRUPTIBLE = 0x3,};
enum _D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE {D3DKMDT_VPPI_UNINITIALIZED = 0x0,D3DKMDT_VPPI_PRIMARY = 0x1,D3DKMDT_VPPI_SECONDARY = 0x2,D3DKMDT_VPPI_TERTIARY = 0x3,D3DKMDT_VPPI_QUATERNARY = 0x4,D3DKMDT_VPPI_QUINARY = 0x5,D3DKMDT_VPPI_SENARY = 0x6,D3DKMDT_VPPI_SEPTENARY = 0x7,D3DKMDT_VPPI_OCTONARY = 0x8,D3DKMDT_VPPI_NONARY = 0x9,D3DKMDT_VPPI_DENARY = 0xA,};
enum _DXGK_ACTIVE_VIDPN_INVALIDATION_REASON {DXGK_AVIR_UNINITIALIZED = 0x0,DXGK_AVIR_HOTKEY = 0x1,DXGK_AVIR_USERMODE = 0x2,};
enum _DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT {DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_MONO = 0x0,DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_HORIZONTAL = 0x1,DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_VERTICAL = 0x2,DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_SEPARATE = 0x3,DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_MONO_OFFSET = 0x4,DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_ROW_INTERLEAVED = 0x5,DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_COLUMN_INTERLEAVED = 0x6,DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT_CHECKERBOARD = 0x7,};
enum _DXGK_PRESENT_DISPLAY_ONLY_PROGRESS_ID {DXGK_PRESENT_DISPLAYONLY_PROGRESS_ID_COMPLETE = 0x0,DXGK_PRESENT_DISPLAYONLY_PROGRESS_ID_FAILED = 0x1,};
enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE {NotifyTypeCreate = 0x0,NotifyTypeRetired = 0x1,};
typedef struct _ACPI_DEVICE_INFORMATION_OUTPUT_BUFFER ACPI_DEVICE_INFORMATION_OUTPUT_BUFFER;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER;
typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION CLAIM_SECURITY_ATTRIBUTES_INFORMATION;
typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE DEVICE_DATA_SET_LB_PROVISIONING_STATE;
typedef struct _DXGKARG_SETDISPLAYPRIVATEDRIVERFORMAT DXGKARG_SETDISPLAYPRIVATEDRIVERFORMAT;
typedef struct _DXGKMDT_OPM_HDCP_KEY_SELECTION_VECTOR DXGKMDT_OPM_HDCP_KEY_SELECTION_VECTOR;
typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION FILE_FS_PERSISTENT_VOLUME_INFORMATION;
typedef struct _FILTER_AGGREGATE_STANDARD_INFORMATION FILTER_AGGREGATE_STANDARD_INFORMATION;
typedef struct _IPSEC_OFFLOAD_V2_SECURITY_ASSOCIATION IPSEC_OFFLOAD_V2_SECURITY_ASSOCIATION;
typedef struct _IRB_REQ_GET_CONFIGURATION_INFORMATION IRB_REQ_GET_CONFIGURATION_INFORMATION;
typedef struct _IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES;
typedef struct _IRB_REQ_SEND_PHY_CONFIGURATION_PACKET IRB_REQ_SEND_PHY_CONFIGURATION_PACKET;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
typedef struct _451777DAEA681FBE98F7EEED9576F1D3 KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS_S;
typedef struct _441EBF211493C42D9642F77D873F68D1 KSPROPERTY_VIDEOCOMPRESSION_GETINFO_S;
typedef struct _D2D205A4E5DA2498F5010F3E3EADEEBB KSPROPERTY_VIDEOCONTROL_FRAME_RATES_S;
typedef struct _AE319F515EC2CAE237A98B55063CA2F4 KSRTAUDIO_NOTIFICATION_EVENT_PROPERTY;
typedef struct _L2CAP_RETRANSMISSION_AND_FLOW_CONTROL L2CAP_RETRANSMISSION_AND_FLOW_CONTROL;
enum MACRO_ClearAllMpioDisksHealthCounters {ClearAllMpioDisksHealthCounters = 8,};
enum MACRO_MSFC_VirtualFibrePortAttributes {MSFC_VirtualFibrePortAttributes_Status_ID = 1,MSFC_VirtualFibrePortAttributes_FCId_ID = 2,MSFC_VirtualFibrePortAttributes_VirtualName_ID = 3,MSFC_VirtualFibrePortAttributes_Tag_ID = 4,MSFC_VirtualFibrePortAttributes_WWPN_ID = 5,MSFC_VirtualFibrePortAttributes_WWNN_ID = 6,MSFC_VirtualFibrePortAttributes_FabricWWN_ID = 7,MSFC_FibrePortNPIVAttributes_WWPN_ID = 1,MSFC_FibrePortNPIVAttributes_WWNN_ID = 2,MSFC_FibrePortNPIVAttributes_NumberVirtualPorts_ID = 3,MSFC_FibrePortNPIVAttributes_VirtualPorts_ID = 4,MSFC_NPIVLUNMappingInformation_WWPNVirtualPort_ID = 1,MSFC_NPIVLUNMappingInformation_WWPNPhysicalPort_ID = 2,MSFC_NPIVLUNMappingInformation_OSBus_ID = 3,MSFC_NPIVLUNMappingInformation_OSTarget_ID = 4,MSFC_NPIVLUNMappingInformation_OSLUN_ID = 5,MSFC_NPIVLUNMappingInformationEx_WWPNVirtualPort_ID = 1,MSFC_NPIVLUNMappingInformationEx_WWPNPhysicalPort_ID = 2,MSFC_NPIVLUNMappingInformationEx_PortNumber_ID = 3,MSFC_NPIVLUNMappingInformationEx_OSBus_ID = 4,MSFC_NPIVLUNMappingInformationEx_OSTarget_ID = 5,MSFC_NPIVLUNMappingInformationEx_OSLUN_ID = 6,};
enum MACRO_MSiSCSI_RedirectPortalInfoClass {MSiSCSI_RedirectPortalInfoClass_UniqueAdapterId_ID = 1,MSiSCSI_RedirectPortalInfoClass_SessionCount_ID = 2,MSiSCSI_RedirectPortalInfoClass_RedirectSessionList_ID = 3,};
enum MACRO_WmiGetMonitorRawEEdidV1Block_IN {WmiGetMonitorRawEEdidV1Block_IN_BlockId_ID = 1,WmiGetMonitorRawEEdidV1Block_OUT_BlockType_ID = 2,WmiGetMonitorRawEEdidV1Block_OUT_BlockContent_ID = 3,};
enum MACRO_WmiQueryCurrentOffloadConfig_IN {WmiQueryCurrentOffloadConfig_IN_Header_ID = 1,WmiQueryCurrentOffloadConfig_OUT_Offload_ID = 2,};
enum MACRO_WmiQueryHDSplitCurrentConfig_IN {WmiQueryHDSplitCurrentConfig_IN_Header_ID = 1,WmiQueryHDSplitCurrentConfig_OUT_HdSplitCurrentConfig_ID = 2,};
enum MACRO_WmiQueryPciDeviceCustomProperty {WmiQueryPciDeviceCustomProperty = 1,};
enum MACRO_WmiQueryPhysicalMediumTypeEx_IN {WmiQueryPhysicalMediumTypeEx_IN_Header_ID = 1,WmiQueryPhysicalMediumTypeEx_OUT_NdisPhysicalMediumTypeEx_ID = 2,};
enum MACRO_WmiQueryReceiveFilterParameters {WmiQueryReceiveFilterParameters = 1,};
typedef struct _MSNdis_80211_BaseServiceSetIdentifier MSNdis_80211_BaseServiceSetIdentifier;
typedef struct _MSNdis_EthernetMoreTransmitCollisions MSNdis_EthernetMoreTransmitCollisions;
typedef struct _MSNdis_StatusDot11MPDUMaxLengthChange MSNdis_StatusDot11MPDUMaxLengthChange;
typedef struct _MSiSCSI_InitiatorInstanceFailureEvent MSiSCSI_InitiatorInstanceFailureEvent;
typedef struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION NDIS_802_11_AUTHENTICATION_ENCRYPTION;
typedef struct _NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS;
typedef struct _NDIS_TAPI_CONDITIONAL_MEDIA_DETECTION NDIS_TAPI_CONDITIONAL_MEDIA_DETECTION;
typedef struct _NDIS_TAPI_SET_DEFAULT_MEDIA_DETECTION NDIS_TAPI_SET_DEFAULT_MEDIA_DETECTION;
typedef struct _NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_READ NDIS_WWAN_DEVICE_SERVICE_SESSION_READ;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION;
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING *PACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING;
typedef struct _ARBITER_RETEST_ALLOCATION_PARAMETERS *PARBITER_RETEST_ALLOCATION_PARAMETERS;
typedef struct _CDROM_NOMINAL_PERFORMANCE_DESCRIPTOR *PCDROM_NOMINAL_PERFORMANCE_DESCRIPTOR;
typedef union _PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 *PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;
typedef struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT *PCSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT;
typedef struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER *PDEDUP_QUERY_FILE_HASHES_INPUT_BUFFER;
typedef struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION *PDEVICE_INTERFACE_CHANGE_NOTIFICATION;
typedef struct _DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST *PDOT11_WFD_SECONDARY_DEVICE_TYPE_LIST;
typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION *PFILE_IOSTATUSBLOCK_RANGE_INFORMATION;
typedef struct _IDENTIFY_DEVICE_DATA_LOG_PAGE_HEADER *PIDENTIFY_DEVICE_DATA_LOG_PAGE_HEADER;
typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
typedef struct _MECHANICAL_STATUS_INFORMATION_HEADER *PMECHANICAL_STATUS_INFORMATION_HEADER;
typedef struct _MSNdis_80211_TransmitAntennaSelected *PMSNdis_80211_TransmitAntennaSelected;
typedef struct _MSNdis_EthernetReceiveErrorAlignment *PMSNdis_EthernetReceiveErrorAlignment;
typedef struct _MSNdis_InterruptModerationParameters *PMSNdis_InterruptModerationParameters;
typedef struct _MSNdis_ReceiveFilterGlobalParameters *PMSNdis_ReceiveFilterGlobalParameters;
typedef struct _MSNdis_StatusDot11PmkidCandidateList *PMSNdis_StatusDot11PmkidCandidateList;
typedef struct _MSNdis_StatusMediaSpecificIndication *PMSNdis_StatusMediaSpecificIndication;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV1_IPv4 *PMSNdis_WmiTcpLargeSendOffloadV1_IPv4;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV2_IPv4 *PMSNdis_WmiTcpLargeSendOffloadV2_IPv4;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV2_IPv6 *PMSNdis_WmiTcpLargeSendOffloadV2_IPv6;
typedef struct _NDIS_INTERRUPT_MODERATION_PARAMETERS *PNDIS_INTERRUPT_MODERATION_PARAMETERS;
typedef struct _NDIS_MINIPORT_DRIVER_CHARACTERISTICS *PNDIS_MINIPORT_DRIVER_CHARACTERISTICS;
typedef struct _NDIS_PROTOCOL_DRIVER_CHARACTERISTICS *PNDIS_PROTOCOL_DRIVER_CHARACTERISTICS;
typedef struct _NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS *PNDIS_RECEIVE_FILTER_CLEAR_PARAMETERS;
typedef struct _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS *PNDIS_RECEIVE_FILTER_FIELD_PARAMETERS;
typedef struct _NDIS_WWAN_DEVICE_SET_SERVICE_SESSION *PNDIS_WWAN_SET_DEVICE_SERVICE_SESSION;
typedef struct _OB_POST_DUPLICATE_HANDLE_INFORMATION *POB_POST_DUPLICATE_HANDLE_INFORMATION;
typedef struct _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY *POFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY;
typedef union _PCI_EXPRESS_DEVICE_STATUS_2_REGISTER *PPCI_EXPRESS_DEVICE_STATUS_2_REGISTER;
typedef struct _PCI_EXPRESS_LINK_QUIESCENT_INTERFACE *PPCI_EXPRESS_LINK_QUIESCENT_INTERFACE;
typedef union _PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER *PPCI_EXPRESS_LTR_MAX_LATENCY_REGISTER;
typedef struct _PCI_EXPRESS_SERIAL_NUMBER_CAPABILITY *PPCI_EXPRESS_SERIAL_NUMBER_CAPABILITY;
typedef struct _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY *PPCI_EXPRESS_TPH_REQUESTER_CAPABILITY;
typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK *PPCI_EXPRESS_UNCORRECTABLE_ERROR_MASK;
typedef struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR *PPHYSICAL_COUNTER_RESOURCE_DESCRIPTOR;
typedef struct _REAL_TIME_NOTIFICATION_SETTING_INPUT *PREAL_TIME_NOTIFICATION_SETTING_INPUT;
typedef struct _RX_CREATE_CONNECTION_CALLOUT_CONTEXT_ *PRX_CREATE_CONNECTION_CALLOUT_CONTEXT;
typedef struct _SCSI_PASS_THROUGH_DIRECT_WITH_BUFFER *PSCSI_PASS_THROUGH_DIRECT_WITH_BUFFER;
typedef struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA *PSFFDISK_DEVICE_PARTITION_ACCESS_DATA;
typedef struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR *PSTORAGE_DEVICE_RESILIENCY_DESCRIPTOR;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;
typedef struct _TDI_REQUEST_KERNEL_QUERY_INFO *PTDI_REQUEST_KERNEL_QUERY_INFORMATION;
typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION *PTRANSACTIONMANAGER_BASIC_INFORMATION;
typedef struct _USB_INTERFACE_ASSOCIATION_DESCRIPTOR *PUSB_INTERFACE_ASSOCIATION_DESCRIPTOR;
typedef struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR *PWHEA_ERROR_RECORD_SECTION_DESCRIPTOR;
typedef struct _WHEA_FIRMWARE_ERROR_RECORD_REFERENCE *PWHEA_FIRMWARE_ERROR_RECORD_REFERENCE;
typedef union _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS *PWHEA_PCIXBUS_ERROR_SECTION_VALIDBITS;
typedef struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION *PWHEA_PROCESSOR_GENERIC_ERROR_SECTION;
typedef struct _WmiMonitorListedSupportedSourceModes *PWmiMonitorListedSupportedSourceModes;
typedef struct _WmiQueryReceiveScaleCapabilities_OUT *PWmiQueryReceiveScaleCapabilities_OUT;
typedef struct _REAL_TIME_NOTIFICATION_SETTING_OUTPUT REAL_TIME_NOTIFICATION_SETTING_OUTPUT;
typedef struct _SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2 SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2;
typedef struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES STORAGE_LB_PROVISIONING_MAP_RESOURCES;
typedef struct _VBICODECFILTERING_STATISTICS_TELETEXT VBICODECFILTERING_STATISTICS_TELETEXT;
typedef struct _VPD_BLOCK_DEVICE_CHARACTERISTICS_PAGE VPD_BLOCK_DEVICE_CHARACTERISTICS_PAGE;
typedef union _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS;
typedef struct _WHEA_PSHED_PLUGIN_REGISTRATION_PACKET WHEA_PSHED_PLUGIN_REGISTRATION_PACKET;
enum _DXGK_RECOMMENDFUNCTIONALVIDPN_REASON {DXGK_RFVR_UNINITIALIZED = 0x0,DXGK_RFVR_HOTKEY = 0x1,DXGK_RFVR_USERMODE = 0x2,};
struct _IDENTIFY_DEVICE_DATA_LOG_PAGE_HEADER {unsigned long long RevisionNumber : 16;unsigned long long PageNumber : 8;unsigned long long Reserved : 40;};
enum _NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE {NdisReceiveQueueOperationalStateUndefined = 0x0,NdisReceiveQueueOperationalStateRunning = 0x1,NdisReceiveQueueOperationalStatePaused = 0x2,NdisReceiveQueueOperationalStateDmaStopped = 0x3,NdisReceiveQueueOperationalStateMaximum = 0x4,};
struct _PCI_AGP_CAPABILITY___PCI_AGP_COMMAND {unsigned int Rate : 3;unsigned int Rsvd1 : 1;unsigned int FastWriteEnable : 1;unsigned int FourGBEnable : 1;unsigned int Rsvd2 : 1;unsigned int Gart64 : 1;unsigned int AGPEnable : 1;unsigned int SBAEnable : 1;unsigned int CalibrationCycle : 3;unsigned int AsyncReqSize : 3;unsigned int Rsvd3 : 8;unsigned int RequestQueueDepth : 8;};
enum _TRANSACTIONMANAGER_INFORMATION_CLASS {TransactionManagerBasicInformation = 0x0,TransactionManagerLogInformation = 0x1,TransactionManagerLogPathInformation = 0x2,TransactionManagerRecoveryInformation = 0x4,};
typedef struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING;
typedef struct _ARBITER_RETEST_ALLOCATION_PARAMETERS ARBITER_RETEST_ALLOCATION_PARAMETERS;
enum BDA_CONDITIONALACCESS_MMICLOSEREASON {CONDITIONALACCESS_UNSPECIFIED = 0x0,CONDITIONALACCESS_CLOSED_ITSELF = 0x1,CONDITIONALACCESS_TUNER_REQUESTED_CLOSE = 0x2,CONDITIONALACCESS_DIALOG_TIMEOUT = 0x3,CONDITIONALACCESS_DIALOG_FOCUS_CHANGE = 0x4,CONDITIONALACCESS_DIALOG_USER_DISMISSED = 0x5,CONDITIONALACCESS_DIALOG_USER_NOT_AVAILABLE = 0x6,};
enum BDA_CONDITIONALACCESS_SESSION_RESULT {CONDITIONALACCESS_SUCCESSFULL = 0x0,CONDITIONALACCESS_ENDED_NOCHANGE = 0x1,CONDITIONALACCESS_ABORTED = 0x2,};
typedef struct _CDROM_NOMINAL_PERFORMANCE_DESCRIPTOR CDROM_NOMINAL_PERFORMANCE_DESCRIPTOR;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;
typedef struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT;
typedef struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER;
typedef struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION DEVICE_INTERFACE_CHANGE_NOTIFICATION;
typedef struct _DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST;
typedef struct _DXGKARG_UPDATEACTIVEVIDPNPRESENTPATH DXGKARG_UPDATEACTIVEVIDPNPRESENTPATH;
typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
typedef struct _IDENTIFY_DEVICE_DATA_LOG_PAGE_HEADER IDENTIFY_DEVICE_DATA_LOG_PAGE_HEADER;
typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
typedef struct _IRB_REQ_ISOCH_ALLOCATE_RESOURCES_W2K IRB_REQ_ISOCH_ALLOCATE_RESOURCES_W2K;
typedef struct _IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP;
enum MACRO_ClearDevInstanceHealthCounters {ClearDevInstanceHealthCounters_IN_PathID_ID = 1,MPIO_DSM_Path_V2_DsmPathId_ID = 1,MPIO_DSM_Path_V2_Reserved_ID = 2,MPIO_DSM_Path_V2_PathWeight_ID = 3,MPIO_DSM_Path_V2_PrimaryPath_ID = 4,MPIO_DSM_Path_V2_OptimizedPath_ID = 5,MPIO_DSM_Path_V2_PreferredPath_ID = 6,MPIO_DSM_Path_V2_FailedPath_ID = 7,};
enum MACRO_ClearMpioDiskHealthCounters_IN {ClearMpioDiskHealthCounters_IN_DiskOrdinal_ID = 1,};
enum MACRO_CreateVirtualPortExUsingDHCHAP {CreateVirtualPortExUsingDHCHAP = 4,};
enum MACRO_DOT11_SEND_INVITATION_RESPONSE {DOT11_SEND_INVITATION_RESPONSE_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DOT11_SEND_PROVISION_DISCOVERY {DOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DsmSetLoadBalancePolicyALUA_IN {DsmSetLoadBalancePolicyALUA_IN_LoadBalancePolicy_ID = 1,DsmSetLoadBalancePolicyALUA_OUT_Status_ID = 2,};
enum MACRO_GetDiscoveredPortAttributes_IN {GetDiscoveredPortAttributes_IN_PortIndex_ID = 1,GetDiscoveredPortAttributes_IN_DiscoveredPortIndex_ID = 2,GetDiscoveredPortAttributes_OUT_HBAStatus_ID = 3,GetDiscoveredPortAttributes_OUT_PortAttributes_ID = 4,};
enum MACRO_GetFailurePredictionCapability {GetFailurePredictionCapability = 4,};
enum MACRO_RemoveConnectionFromSession_IN {RemoveConnectionFromSession_IN_UniqueSessionId_ID = 1,RemoveConnectionFromSession_IN_UniqueConnectionId_ID = 2,RemoveConnectionFromSession_OUT_Status_ID = 3,};
enum MACRO_WmiQueryInterruptModeration_IN {WmiQueryInterruptModeration_IN_Header_ID = 1,WmiQueryInterruptModeration_OUT_InterruptModeration_ID = 2,};
enum MACRO_WmiQueryReceiveQueueParameters {WmiQueryReceiveQueueParameters = 1,};
typedef struct _MECHANICAL_STATUS_INFORMATION_HEADER MECHANICAL_STATUS_INFORMATION_HEADER;
typedef struct _MSNdis_80211_TransmitAntennaSelected MSNdis_80211_TransmitAntennaSelected;
typedef struct _MSNdis_EthernetReceiveErrorAlignment MSNdis_EthernetReceiveErrorAlignment;
typedef struct _MSNdis_InterruptModerationParameters MSNdis_InterruptModerationParameters;
typedef struct _MSNdis_ReceiveFilterGlobalParameters MSNdis_ReceiveFilterGlobalParameters;
typedef struct _MSNdis_StatusDot11PmkidCandidateList MSNdis_StatusDot11PmkidCandidateList;
typedef struct _MSNdis_StatusMediaSpecificIndication MSNdis_StatusMediaSpecificIndication;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV1_IPv4 MSNdis_WmiTcpLargeSendOffloadV1_IPv4;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV2_IPv4 MSNdis_WmiTcpLargeSendOffloadV2_IPv4;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV2_IPv6 MSNdis_WmiTcpLargeSendOffloadV2_IPv6;
typedef struct _NDIS_INTERRUPT_MODERATION_PARAMETERS NDIS_INTERRUPT_MODERATION_PARAMETERS;
typedef struct _NDIS_MINIPORT_DRIVER_CHARACTERISTICS NDIS_MINIPORT_DRIVER_CHARACTERISTICS;
typedef struct _NDIS_PROTOCOL_DRIVER_CHARACTERISTICS NDIS_PROTOCOL_DRIVER_CHARACTERISTICS;
typedef struct _NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS;
typedef struct _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS NDIS_RECEIVE_FILTER_FIELD_PARAMETERS;
typedef struct _NDIS_WWAN_DEVICE_SET_SERVICE_SESSION NDIS_WWAN_SET_DEVICE_SERVICE_SESSION;
typedef struct _OB_POST_DUPLICATE_HANDLE_INFORMATION OB_POST_DUPLICATE_HANDLE_INFORMATION;
typedef struct _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY;
typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION *PCHANGER_SEND_VOLUME_TAG_INFORMATION;
typedef union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS PCI_EXPRESS_CORRECTABLE_ERROR_STATUS;
typedef union _PCI_EXPRESS_DEVICE_STATUS_2_REGISTER PCI_EXPRESS_DEVICE_STATUS_2_REGISTER;
typedef struct _PCI_EXPRESS_LINK_QUIESCENT_INTERFACE PCI_EXPRESS_LINK_QUIESCENT_INTERFACE;
typedef union _PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER;
typedef struct _PCI_EXPRESS_SERIAL_NUMBER_CAPABILITY PCI_EXPRESS_SERIAL_NUMBER_CAPABILITY;
typedef struct _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY PCI_EXPRESS_TPH_REQUESTER_CAPABILITY;
typedef union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE *PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;
typedef struct _CO_AF_TAPI_INCOMING_CALL_PARAMETERS *PCO_AF_TAPI_INCOMING_CALL_PARAMETERS;
typedef struct _CSV_QUERY_FILE_REVISION_ECP_CONTEXT *PCSV_QUERY_FILE_REVISION_ECP_CONTEXT;
typedef struct _DEBUGGING_DEVICE_IN_USE_INFORMATION *PDEBUGGING_DEVICE_IN_USE_INFORMATION;
typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP *PDEVICEDUMP_STORAGESTACK_PUBLIC_DUMP;
typedef struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS *PDEVICE_DSM_OFFLOAD_WRITE_PARAMETERS;
typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR *PDEVICE_WRITE_AGGREGATION_DESCRIPTOR;
typedef struct DOT11_COUNTRY_OR_REGION_STRING_LIST *PDOT11_COUNTRY_OR_REGION_STRING_LIST;
typedef struct _DOT11_MANUFACTURING_TEST_QUERY_DATA *PDOT11_MANUFACTURING_TEST_QUERY_DATA;
typedef struct _DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY *PDOT11_MULTI_DOMAIN_CAPABILITY_ENTRY;
typedef struct DOT11_ROAMING_COMPLETION_PARAMETERS *PDOT11_ROAMING_COMPLETION_PARAMETERS;
typedef struct _DOT11_SUPPORTED_DATA_RATES_VALUE_V2 *PDOT11_SUPPORTED_DATA_RATES_VALUE_V2;
typedef struct _DOT11_SUPPORTED_OFDM_FREQUENCY_LIST *PDOT11_SUPPORTED_OFDM_FREQUENCY_LIST;
typedef struct _DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS *PDXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS;
typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION *PFILE_SYSTEM_RECOGNITION_INFORMATION;
typedef struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR;
typedef struct _KSM_BDA_WMDRMTUNER_GETPIDPROTECTION *PKSM_BDA_WMDRMTUNER_GETPIDPROTECTION;
typedef struct _KSM_BDA_WMDRMTUNER_SETPIDPROTECTION *PKSM_BDA_WMDRMTUNER_SETPIDPROTECTION;
typedef struct _LOG_PAGE_LOGICAL_BLOCK_PROVISIONING *PLOG_PAGE_LOGICAL_BLOCK_PROVISIONING;
typedef struct _A352DA0F15C73F1F5EAA2E36AD3C4FF0 *PLOOPEDSTREAMING_POSITION_EVENT_DATA;
typedef struct _MSMCAInfo_RawCorrectedPlatformEvent *PMSMCAInfo_RawCorrectedPlatformEvent;
typedef struct _MSNdis_80211_FragmentationThreshold *PMSNdis_80211_FragmentationThreshold;
typedef struct _MSNdis_80211_ReceiveAntennaSelected *PMSNdis_80211_ReceiveAntennaSelected;
typedef struct _MSNdis_80211_ReceivedSignalStrength *PMSNdis_80211_ReceivedSignalStrength;
typedef struct _MSNdis_EthernetOneTransmitCollision *PMSNdis_EthernetOneTransmitCollision;
typedef struct _MSNdis_ReceiveFilterFieldParameters *PMSNdis_ReceiveFilterFieldParameters;
typedef struct _MSNdis_StatusDot11RoamingCompletion *PMSNdis_StatusDot11RoamingCompletion;
typedef struct _MSiSCSI_InitiatorInstanceStatistics *PMSiSCSI_InitiatorInstanceStatistics;
typedef struct _NDIS_802_11_ASSOCIATION_INFORMATION *PNDIS_802_11_ASSOCIATION_INFORMATION;
typedef struct _NDIS_FILTER_PARTIAL_CHARACTERISTICS *PNDIS_FILTER_PARTIAL_CHARACTERISTICS;
typedef struct _NDIS_NBL_MEDIA_MEDIA_SPECIFIC_INFORMATION *PNDIS_NBL_MEDIA_SPECIFIC_INFORMATION;
typedef struct _NDIS_NET_BUFFER_LIST_FILTERING_INFO *PNDIS_NET_BUFFER_LIST_FILTERING_INFO;
typedef struct _NDIS_PORT_AUTHENTICATION_PARAMETERS *PNDIS_PORT_AUTHENTICATION_PARAMETERS;
typedef struct _NDIS_SCATTER_GATHER_LIST_PARAMETERS *PNDIS_SCATTER_GATHER_LIST_PARAMETERS;
typedef struct _NDIS_WWAN_SERVICE_ACTIVATION_STATUS *PNDIS_WWAN_SERVICE_ACTIVATION_STATUS;
typedef struct _NDIS_WWAN_SUPPORTED_DEVICE_SERVICES *PNDIS_WWAN_SUPPORTED_DEVICE_SERVICES;
typedef struct _OB_PRE_DUPLICATE_HANDLE_INFORMATION *POB_PRE_DUPLICATE_HANDLE_INFORMATION;
typedef struct _PCI_EXPRESS_ARI_CAPABILITY_REGISTER *PPCI_EXPRESS_ARI_CAPABILITY_REGISTER;
typedef union _PCI_EXPRESS_DEVICE_CONTROL_REGISTER *PPCI_EXPRESS_DEVICE_CONTROL_REGISTER;
typedef struct _PCI_EXPRESS_ROOTPORT_AER_CAPABILITY *PPCI_EXPRESS_ROOTPORT_AER_CAPABILITY;
typedef struct _PCI_FIRMWARE_BUS_CAPS_RETURN_BUFFER *PPCI_FIRMWARE_BUS_CAPS_RETURN_BUFFER;
typedef struct _PROCESS_KEEPALIVE_COUNT_INFORMATION *PPROCESS_KEEPALIVE_COUNT_INFORMATION;
typedef struct _REENUMERATE_SELF_INTERFACE_STANDARD *PREENUMERATE_SELF_INTERFACE_STANDARD;
typedef struct _REG_ENUMERATE_VALUE_KEY_INFORMATION *PREG_ENUMERATE_VALUE_KEY_INFORMATION;
typedef struct _REG_SET_INFORMATION_KEY_INFORMATION *PREG_SET_INFORMATION_KEY_INFORMATION;
typedef struct _SCSI_SENSE_DESCRIPTOR_BLOCK_COMMAND *PSCSI_SENSE_DESCRIPTOR_BLOCK_COMMAND;
typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR *PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;
typedef struct _SecPkgCredentials_KdcProxySettingsW *PSecPkgCredentials_KdcProxySettingsW;
typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION *PTRANSACTION_ENLISTMENTS_INFORMATION;
typedef struct _VBICODECFILTERING_STATISTICS_CC_PIN *PVBICODECFILTERING_STATISTICS_CC_PIN;
typedef struct _VBICODECFILTERING_STATISTICS_COMMON *PVBICODECFILTERING_STATISTICS_COMMON;
typedef struct _VPD_LOGICAL_BLOCK_PROVISIONING_PAGE *PVPD_LOGICAL_BLOCK_PROVISIONING_PAGE;
typedef union _WHEA_MEMORY_ERROR_SECTION_VALIDBITS *PWHEA_MEMORY_ERROR_SECTION_VALIDBITS;
typedef struct _WmiQueryPciDeviceCustomProperty_OUT *PWmiQueryPciDeviceCustomProperty_OUT;
typedef struct _WmiQueryReceiveFilterParameters_OUT *PWmiQueryReceiveFilterParameters_OUT;
typedef struct _WmiQueryReceiveScaleCapabilities_IN *PWmiQueryReceiveScaleCapabilities_IN;
typedef struct _REAL_TIME_NOTIFICATION_SETTING_INPUT REAL_TIME_NOTIFICATION_SETTING_INPUT;
typedef struct _SCSI_PASS_THROUGH_DIRECT_WITH_BUFFER SCSI_PASS_THROUGH_DIRECT_WITH_BUFFER;
typedef struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA SFFDISK_DEVICE_PARTITION_ACCESS_DATA;
typedef struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR STORAGE_DEVICE_RESILIENCY_DESCRIPTOR;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
typedef struct _TDI_REQUEST_KERNEL_QUERY_INFO TDI_REQUEST_KERNEL_QUERY_INFORMATION;
typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION TRANSACTIONMANAGER_BASIC_INFORMATION;
typedef struct _USB_INTERFACE_ASSOCIATION_DESCRIPTOR USB_INTERFACE_ASSOCIATION_DESCRIPTOR;
typedef struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR WHEA_ERROR_RECORD_SECTION_DESCRIPTOR;
typedef struct _WHEA_FIRMWARE_ERROR_RECORD_REFERENCE WHEA_FIRMWARE_ERROR_RECORD_REFERENCE;
typedef union _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS;
typedef struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION WHEA_PROCESSOR_GENERIC_ERROR_SECTION;
typedef struct _WmiMonitorListedSupportedSourceModes WmiMonitorListedSupportedSourceModes;
typedef struct _WmiQueryReceiveScaleCapabilities_OUT WmiQueryReceiveScaleCapabilities_OUT;
enum _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN {D3DKMDT_MCO_UNINITIALIZED = 0x0,D3DKMDT_MCO_DEFAULTMONITORPROFILE = 0x1,D3DKMDT_MCO_MONITORDESCRIPTOR = 0x2,D3DKMDT_MCO_MONITORDESCRIPTOR_REGISTRYOVERRIDE = 0x3,D3DKMDT_MCO_SPECIFICCAP_REGISTRYOVERRIDE = 0x4,D3DKMDT_MCO_DRIVER = 0x5,};
enum _D3DKMDT_MONITOR_CONNECTIVITY_CHECKS {D3DKMDT_MCC_UNINITIALIZED = 0x0,D3DKMDT_MCC_IGNORE = 0x1,D3DKMDT_MCC_ENFORCE = 0x2,};
enum _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION {D3DKMDT_VPPR_UNINITIALIZED = 0x0,D3DKMDT_VPPR_IDENTITY = 0x1,D3DKMDT_VPPR_ROTATE90 = 0x2,D3DKMDT_VPPR_ROTATE180 = 0x3,D3DKMDT_VPPR_ROTATE270 = 0x4,D3DKMDT_VPPR_UNPINNED = 0xFE,D3DKMDT_VPPR_NOTSPECIFIED = 0xFF,};
enum _DXGK_MULTIPLANE_OVERLAY_FILTER_TYPE {DXGK_MULTIPLANE_OVERLAY_FILTER_CAPS_BRIGHTNESS = 0x1,DXGK_MULTIPLANE_OVERLAY_FILTER_CAPS_CONTRAST = 0x2,DXGK_MULTIPLANE_OVERLAY_FILTER_CAPS_HUE = 0x4,DXGK_MULTIPLANE_OVERLAY_FILTER_CAPS_SATURATION = 0x8,DXGK_MULTIPLANE_OVERLAY_FILTER_CAPS_STRETCH_QUALITY = 0x10,};
enum _NL_INTERFACE_NETWORK_CATEGORY_STATE {NlincCategoryUnknown = 0x0,NlincPublic = 0x1,NlincPrivate = 0x2,NlincDomainAuthenticated = 0x3,NlincCategoryStateMax = 0x4,};
struct _PCI_AGP_CAPABILITY___PCI_AGP_STATUS {unsigned int Rate : 3;unsigned int Agp3Mode : 1;unsigned int FastWrite : 1;unsigned int FourGB : 1;unsigned int HostTransDisable : 1;unsigned int Gart64 : 1;unsigned int ITA_Coherent : 1;unsigned int SideBandAddressing : 1;unsigned int CalibrationCycle : 3;unsigned int AsyncRequestSize : 3;unsigned int Rsvd1 : 1;unsigned int Isoch : 1;unsigned int Rsvd2 : 6;unsigned int RequestQueueDepthMaximum : 8;};
struct _PCI_EXPRESS_ARI_CAPABILITY_REGISTER {unsigned short MfvcFunctionGroupsCapability : 1;unsigned short AcsFunctionGroupsCapability : 1;unsigned short Reserved : 6;unsigned short NextFunctionNumber : 8;};
typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION CHANGER_SEND_VOLUME_TAG_INFORMATION;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;
typedef struct _CO_AF_TAPI_INCOMING_CALL_PARAMETERS CO_AF_TAPI_INCOMING_CALL_PARAMETERS;
typedef struct _CSV_QUERY_FILE_REVISION_ECP_CONTEXT CSV_QUERY_FILE_REVISION_ECP_CONTEXT;
struct D3DKMDT_HMONITORFREQUENCYRANGESET__ {int unused;};
typedef struct _DEBUGGING_DEVICE_IN_USE_INFORMATION DEBUGGING_DEVICE_IN_USE_INFORMATION;
typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP;
typedef struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS;
typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR DEVICE_WRITE_AGGREGATION_DESCRIPTOR;
typedef struct _DOT11_MANUFACTURING_TEST_QUERY_DATA DOT11_MANUFACTURING_TEST_QUERY_DATA;
typedef struct _DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY;
typedef struct _DOT11_SUPPORTED_DATA_RATES_VALUE_V2 DOT11_SUPPORTED_DATA_RATES_VALUE_V2;
typedef struct _DOT11_SUPPORTED_OFDM_FREQUENCY_LIST DOT11_SUPPORTED_OFDM_FREQUENCY_LIST;
typedef struct _DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS;
typedef struct _DXGKMDT_OPM_ACP_AND_CGMSA_SIGNALING DXGKMDT_OPM_ACP_AND_CGMSA_SIGNALING;
typedef struct _DXGKMDT_OPM_SET_HDCP_SRM_PARAMETERS DXGKMDT_OPM_SET_HDCP_SRM_PARAMETERS;
typedef struct _DXGK_MONITORDESCRIPTORSET_INTERFACE DXGK_MONITORDESCRIPTORSET_INTERFACE;
typedef struct _DXGK_MONITORSOURCEMODESET_INTERFACE DXGK_MONITORSOURCEMODESET_INTERFACE;
typedef struct _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS;
typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION FILE_SYSTEM_RECOGNITION_INFORMATION;
typedef struct _IRB_REQ_ISOCH_SET_CHANNEL_BANDWIDTH IRB_REQ_ISOCH_SET_CHANNEL_BANDWIDTH;
typedef struct _KSM_BDA_WMDRMTUNER_GETPIDPROTECTION KSM_BDA_WMDRMTUNER_GETPIDPROTECTION;
typedef struct _KSM_BDA_WMDRMTUNER_SETPIDPROTECTION KSM_BDA_WMDRMTUNER_SETPIDPROTECTION;
typedef struct _LOG_PAGE_LOGICAL_BLOCK_PROVISIONING LOG_PAGE_LOGICAL_BLOCK_PROVISIONING;
typedef struct _A352DA0F15C73F1F5EAA2E36AD3C4FF0 LOOPEDSTREAMING_POSITION_EVENT_DATA;
enum MACRO_MSiSCSI_HBAInformation_Status {MSiSCSI_HBAInformation_Status_ID = 9,};
enum MACRO_OID_DOT11_SUPPORTED_MULTICAST {OID_DOT11_SUPPORTED_MULTICAST_ALGORITHM_PAIR = 234946952,OID_DOT11_ENABLED_MULTICAST_CIPHER_ALGORITHM = 234946953,OID_DOT11_CIPHER_DEFAULT_KEY_ID = 234946954,OID_DOT11_CIPHER_DEFAULT_KEY = 234946955,};
enum MACRO_OID_DOT11_WFD_SEND_INVITATION {OID_DOT11_WFD_SEND_INVITATION_REQUEST = 0xE05010D,};
enum MACRO_RemoveChapForPhysicalPort_OUT {RemoveChapForPhysicalPort_OUT_Status_ID = 1,};
enum MACRO_WmiQueryHardwareOffloadConfig {WmiQueryHardwareOffloadConfig = 1,};
enum MACRO_WmiSetTcpOffloadParameters_IN {WmiSetTcpOffloadParameters_IN_MethodHeader_ID = 1,WmiSetTcpOffloadParameters_IN_TcpOffloadParameters_ID = 2,WmiSetTcpOffloadParameters_OUT_OutputInfo_ID = 3,};
typedef struct _MSMCAInfo_RawCorrectedPlatformEvent MSMCAInfo_RawCorrectedPlatformEvent;
typedef struct _MSNdis_80211_FragmentationThreshold MSNdis_80211_FragmentationThreshold;
typedef struct _MSNdis_80211_ReceiveAntennaSelected MSNdis_80211_ReceiveAntennaSelected;
typedef struct _MSNdis_80211_ReceivedSignalStrength MSNdis_80211_ReceivedSignalStrength;
typedef struct _MSNdis_EthernetOneTransmitCollision MSNdis_EthernetOneTransmitCollision;
typedef struct _MSNdis_ReceiveFilterFieldParameters MSNdis_ReceiveFilterFieldParameters;
typedef struct _MSNdis_StatusDot11RoamingCompletion MSNdis_StatusDot11RoamingCompletion;
typedef struct _MSiSCSI_InitiatorInstanceStatistics MSiSCSI_InitiatorInstanceStatistics;
typedef struct _NDIS_802_11_ASSOCIATION_INFORMATION NDIS_802_11_ASSOCIATION_INFORMATION;
typedef struct _NDIS_FILTER_PARTIAL_CHARACTERISTICS NDIS_FILTER_PARTIAL_CHARACTERISTICS;
typedef struct _NDIS_NBL_MEDIA_MEDIA_SPECIFIC_INFORMATION NDIS_NBL_MEDIA_SPECIFIC_INFORMATION;
typedef struct _NDIS_NET_BUFFER_LIST_FILTERING_INFO NDIS_NET_BUFFER_LIST_FILTERING_INFO;
typedef struct _NDIS_PORT_AUTHENTICATION_PARAMETERS NDIS_PORT_AUTHENTICATION_PARAMETERS;
typedef struct _NDIS_SCATTER_GATHER_LIST_PARAMETERS NDIS_SCATTER_GATHER_LIST_PARAMETERS;
typedef struct _NDIS_WWAN_SERVICE_ACTIVATION_STATUS NDIS_WWAN_SERVICE_ACTIVATION_STATUS;
typedef struct _NDIS_WWAN_SUPPORTED_DEVICE_SERVICES NDIS_WWAN_SUPPORTED_DEVICE_SERVICES;
typedef struct _NODE_TYPE_CODE_AND_SIZE_NO_REFCOUNT NODE_TYPE_CODE_AND_SIZE_NO_REFCOUNT;
typedef struct _OB_PRE_DUPLICATE_HANDLE_INFORMATION OB_PRE_DUPLICATE_HANDLE_INFORMATION;
typedef struct _ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER *PACPI_MANIPULATE_GLOBAL_LOCK_BUFFER;
typedef struct _ARBITER_BOOT_ALLOCATION_PARAMETERS *PARBITER_BOOT_ALLOCATION_PARAMETERS;
typedef struct _ARBITER_QUERY_ARBITRATE_PARAMETERS *PARBITER_QUERY_ARBITRATE_PARAMETERS;
typedef struct _ARBITER_TEST_ALLOCATION_PARAMETERS *PARBITER_TEST_ALLOCATION_PARAMETERS;
typedef struct _ATM_BROADBAND_BEARER_CAPABILITY_IE *PATM_BROADBAND_BEARER_CAPABILITY_IE;
typedef struct _BDA_WMDRMTUNER_PURCHASEENTITLEMENT *PBDA_WMDRMTUNER_PURCHASEENTITLEMENT;
typedef struct _CHANNEL_CONFIG_PARAMETERS_ENHANCED *PCHANNEL_CONFIG_PARAMETERS_ENHANCED;
typedef struct _PCI_EXPRESS_ARI_CAPABILITY_REGISTER PCI_EXPRESS_ARI_CAPABILITY_REGISTER;
typedef union _PCI_EXPRESS_DEVICE_CONTROL_REGISTER PCI_EXPRESS_DEVICE_CONTROL_REGISTER;
typedef struct _PCI_EXPRESS_ROOTPORT_AER_CAPABILITY PCI_EXPRESS_ROOTPORT_AER_CAPABILITY;
typedef struct _PCI_FIRMWARE_BUS_CAPS_RETURN_BUFFER PCI_FIRMWARE_BUS_CAPS_RETURN_BUFFER;
typedef struct _CreateVirtualPortExUsingDHCHAP_OUT *PCreateVirtualPortExUsingDHCHAP_OUT;
typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS *PDEVICE_DSM_NOTIFICATION_PARAMETERS;
typedef struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS *PDEVICE_DSM_OFFLOAD_READ_PARAMETERS;
typedef struct DOT11_ASSOCIATION_START_PARAMETERS *PDOT11_ASSOCIATION_START_PARAMETERS;
typedef struct DOT11_CIPHER_KEY_MAPPING_KEY_VALUE *PDOT11_CIPHER_KEY_MAPPING_KEY_VALUE;
typedef struct _DOT11_WFD_DEVICE_CAPABILITY_CONFIG *PDOT11_WFD_DEVICE_CAPABILITY_CONFIG;
typedef struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER *PFILE_INITIATE_REPAIR_OUTPUT_BUFFER;
typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX *PFILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER *PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION *PFILE_VALID_DATA_LENGTH_INFORMATION;
typedef struct _FILTER_AGGREGATE_BASIC_INFORMATION *PFILTER_AGGREGATE_BASIC_INFORMATION;
typedef struct _FILTER_VOLUME_STANDARD_INFORMATION *PFILTER_VOLUME_STANDARD_INFORMATION;
typedef struct _IDE_ADVANCED_CHANNEL_CONFIGURATION *PIDE_ADVANCED_CHANNEL_CONFIGURATION;
typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
typedef struct _IO_DISCONNECT_INTERRUPT_PARAMETERS *PIO_DISCONNECT_INTERRUPT_PARAMETERS;
typedef struct _ISCSI_DiscoveredTargetPortalGroup2 *PISCSI_DiscoveredTargetPortalGroup2;
typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION *PKEY_SET_VIRTUALIZATION_INFORMATION;
typedef struct _KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT *PKE_PROCESSOR_CHANGE_NOTIFY_CONTEXT;
typedef struct _1D3855BED4097B50524459F6573D9798 *PKSPROPERTY_BDA_RF_TUNER_STANDARD_S;
typedef struct _1F0027E2ABF976FB8AD72E88DC9BB28B *PKSPROPERTY_DROPPEDFRAMES_CURRENT_S;
typedef struct _MSNdis_80211_NetworkInfrastructure *PMSNdis_80211_NetworkInfrastructure;
typedef struct _MSNdis_80211_NetworkTypesSupported *PMSNdis_80211_NetworkTypesSupported;
typedef struct _MSNdis_AtmSupportedServiceCategory *PMSNdis_AtmSupportedServiceCategory;
typedef struct _MSNdis_DeviceWakeOnMagicPacketOnly *PMSNdis_DeviceWakeOnMagicPacketOnly;
typedef struct _MSNdis_StatusDot11AssociationStart *PMSNdis_StatusDot11AssociationStart;
typedef struct _MSNdis_WmiIPSecOffloadV1_Supported *PMSNdis_WmiIPSecOffloadV1_Supported;
typedef struct _MSNdis_WmiReceiveScaleCapabilities *PMSNdis_WmiReceiveScaleCapabilities;
typedef struct _NDIS_802_11_AUTHENTICATION_REQUEST *PNDIS_802_11_AUTHENTICATION_REQUEST;
typedef struct _NDIS_FILTER_DRIVER_CHARACTERISTICS *PNDIS_FILTER_DRIVER_CHARACTERISTICS;
typedef struct _NDIS_RECEIVE_QUEUE_FREE_PARAMETERS *PNDIS_RECEIVE_QUEUE_FREE_PARAMETERS;
typedef struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 *PNDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1;
typedef struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 *PNDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2;
typedef struct _PARALLEL_INTERRUPT_SERVICE_ROUTINE *PPARALLEL_INTERRUPT_SERVICE_ROUTINE;
typedef union _PCI_EXPRESS_ACS_CAPABIITY_REGISTER *PPCI_EXPRESS_ACS_CAPABIITY_REGISTER;
typedef union _PCI_EXPRESS_DEVICE_STATUS_REGISTER *PPCI_EXPRESS_DEVICE_STATUS_REGISTER;
typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION *PPROCESS_EXTENDED_BASIC_INFORMATION;
typedef struct _REG_QUERY_KEY_SECURITY_INFORMATION *PREG_QUERY_KEY_SECURITY_INFORMATION;
typedef struct _PROCESS_KEEPALIVE_COUNT_INFORMATION PROCESS_KEEPALIVE_COUNT_INFORMATION;
typedef struct _RXCE_CONNECTION_COMPLETION_CONTEXT_ *PRXCE_CONNECTION_COMPLETION_CONTEXT;
typedef struct _SFFDISK_QUERY_DEVICE_PROTOCOL_DATA *PSFFDISK_QUERY_DEVICE_PROTOCOL_DATA;
typedef struct _STORAGE_FAILURE_PREDICT_THRESHOLDS *PSTORAGE_FAILURE_PREDICT_THRESHOLDS;
typedef struct _TARGET_DEVICE_REMOVAL_NOTIFICATION *PTARGET_DEVICE_REMOVAL_NOTIFICATION;
typedef struct _TDI_REQUEST_KERNEL_SET_INFO *PTDI_REQUEST_KERNEL_SET_INFORMATION;
typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION *PTRANSACTIONMANAGER_LOG_INFORMATION;
typedef struct _TRANSACTION_PROPERTIES_INFORMATION *PTRANSACTION_PROPERTIES_INFORMATION;
typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES *PTXFS_LIST_TRANSACTION_LOCKED_FILES;
typedef struct _USB_CONFIGURATION_POWER_DESCRIPTOR *PUSB_CONFIGURATION_POWER_DESCRIPTOR;
typedef struct _VBICODECFILTERING_NABTS_SUBSTREAMS *PVBICODECFILTERING_NABTS_SUBSTREAMS;
typedef struct _VBICODECFILTERING_STATISTICS_NABTS *PVBICODECFILTERING_STATISTICS_NABTS;
typedef union _WHEA_ERROR_RECORD_HEADER_VALIDBITS *PWHEA_ERROR_RECORD_HEADER_VALIDBITS;
typedef struct _WmiMonitorSupportedDisplayFeatures *PWmiMonitorSupportedDisplayFeatures;
typedef struct _WmiQueryPciDeviceCustomProperty_IN *PWmiQueryPciDeviceCustomProperty_IN;
typedef struct _WmiQueryReceiveFilterParameters_IN *PWmiQueryReceiveFilterParameters_IN;
typedef struct _WmiQueryReceiveQueueParameters_OUT *PWmiQueryReceiveQueueParameters_OUT;
typedef struct _REENUMERATE_SELF_INTERFACE_STANDARD REENUMERATE_SELF_INTERFACE_STANDARD;
typedef struct _REG_ENUMERATE_VALUE_KEY_INFORMATION REG_ENUMERATE_VALUE_KEY_INFORMATION;
typedef struct _REG_SET_INFORMATION_KEY_INFORMATION REG_SET_INFORMATION_KEY_INFORMATION;
typedef struct _SCSI_SENSE_DESCRIPTOR_BLOCK_COMMAND SCSI_SENSE_DESCRIPTOR_BLOCK_COMMAND;
typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;
typedef struct _SecPkgCredentials_KdcProxySettingsW SecPkgCredentials_KdcProxySettingsW;
typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION TRANSACTION_ENLISTMENTS_INFORMATION;
typedef struct _VBICODECFILTERING_STATISTICS_CC_PIN VBICODECFILTERING_STATISTICS_CC_PIN;
typedef struct _VBICODECFILTERING_STATISTICS_COMMON VBICODECFILTERING_STATISTICS_COMMON;
typedef struct _VPD_LOGICAL_BLOCK_PROVISIONING_PAGE VPD_LOGICAL_BLOCK_PROVISIONING_PAGE;
typedef union _WHEA_MEMORY_ERROR_SECTION_VALIDBITS WHEA_MEMORY_ERROR_SECTION_VALIDBITS;
typedef struct _WmiQueryPciDeviceCustomProperty_OUT WmiQueryPciDeviceCustomProperty_OUT;
typedef struct _WmiQueryReceiveFilterParameters_OUT WmiQueryReceiveFilterParameters_OUT;
typedef struct _WmiQueryReceiveScaleCapabilities_IN WmiQueryReceiveScaleCapabilities_IN;
enum _D3DKMDT_VIDPN_PRESENT_PATH_CONTENT {D3DKMDT_VPPC_UNINITIALIZED = 0x0,D3DKMDT_VPPC_GRAPHICS = 0x1,D3DKMDT_VPPC_VIDEO = 0x2,D3DKMDT_VPPC_NOTSPECIFIED = 0xFF,};
enum _D3DKMDT_VIDPN_PRESENT_PATH_SCALING {D3DKMDT_VPPS_UNINITIALIZED = 0x0,D3DKMDT_VPPS_IDENTITY = 0x1,D3DKMDT_VPPS_CENTERED = 0x2,D3DKMDT_VPPS_STRETCHED = 0x3,D3DKMDT_VPPS_ASPECTRATIOCENTEREDMAX = 0x4,D3DKMDT_VPPS_CUSTOM = 0x5,D3DKMDT_VPPS_RESERVED1 = 0xFD,D3DKMDT_VPPS_UNPINNED = 0xFE,D3DKMDT_VPPS_NOTSPECIFIED = 0xFF,};
enum _DXGKMDT_OPM_VIDEO_OUTPUT_SEMANTICS {DXGKMDT_OPM_VOS_COPP_SEMANTICS = 0x0,DXGKMDT_OPM_VOS_OPM_SEMANTICS = 0x1,};
enum _DXGK_RECOMMENDVIDPNTOPOLOGY_REASON {DXGK_RVT_UNINITIALIZED = 0x0,DXGK_RVT_INITIALIZATION_NOLKG = 0x1,DXGK_RVT_AUGMENTATION_NOLKG = 0x2,DXGK_RVT_AUGMENTATION_LKGOVERRIDE = 0x3,DXGK_RVT_INITIALIZATION_LKGOVERRIDE = 0x4,};
struct _KEY_SET_VIRTUALIZATION_INFORMATION {unsigned int VirtualTarget : 1;unsigned int VirtualStore : 1;unsigned int VirtualSource : 1;unsigned int Reserved : 29;};
enum _NDIS_802_11_NETWORK_INFRASTRUCTURE {Ndis802_11IBSS = 0x0,Ndis802_11Infrastructure = 0x1,Ndis802_11AutoUnknown = 0x2,Ndis802_11InfrastructureMax = 0x3,};
enum _RXCE_CONNECTION_INFORMATION_CLASS_ {RxCeTransportProviderInformation = 0x1,RxCeConnectionInformation = 0x2,RxCeConnectionEndpointInformation = 0x3,RxCeRemoteAddressInformation = 0x4,};
enum _VIDEO_WIN32K_CALLBACKS_PARAMS_TYPE {VideoPowerNotifyCallout = 0x1,VideoDisplaySwitchCallout = 0x2,VideoEnumChildPdoNotifyCallout = 0x3,VideoFindAdapterCallout = 0x4,VideoWakeupCallout = 0x5,VideoChangeDisplaySettingsCallout = 0x6,VideoPnpNotifyCallout = 0x7,VideoDxgkDisplaySwitchCallout = 0x8,VideoDxgkMonitorEventCallout = 0x9,VideoDxgkFindAdapterTdrCallout = 0xA,};
typedef struct _ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER;
typedef struct _ARBITER_BOOT_ALLOCATION_PARAMETERS ARBITER_BOOT_ALLOCATION_PARAMETERS;
typedef struct _ARBITER_QUERY_ARBITRATE_PARAMETERS ARBITER_QUERY_ARBITRATE_PARAMETERS;
typedef struct _ARBITER_TEST_ALLOCATION_PARAMETERS ARBITER_TEST_ALLOCATION_PARAMETERS;
typedef struct _ATM_BROADBAND_BEARER_CAPABILITY_IE ATM_BROADBAND_BEARER_CAPABILITY_IE;
typedef struct _BDA_WMDRMTUNER_PURCHASEENTITLEMENT BDA_WMDRMTUNER_PURCHASEENTITLEMENT;
typedef struct _CHANNEL_CONFIG_PARAMETERS_ENHANCED CHANNEL_CONFIG_PARAMETERS_ENHANCED;
typedef struct _CreateVirtualPortExUsingDHCHAP_OUT CreateVirtualPortExUsingDHCHAP_OUT;
typedef struct _D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS;
typedef struct _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES;
typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS DEVICE_DSM_NOTIFICATION_PARAMETERS;
typedef struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS DEVICE_DSM_OFFLOAD_READ_PARAMETERS;
enum DOT11_MANUFACTURING_SELF_TEST_TYPE {DOT11_MANUFACTURING_SELF_TEST_TYPE_INTERFACE = 0x1,DOT11_MANUFACTURING_SELF_TEST_TYPE_RF_INTERFACE = 0x2,DOT11_MANUFACTURING_SELF_TEST_TYPE_BT_COEXISTENCE = 0x3,};
typedef struct _DOT11_WFD_DEVICE_CAPABILITY_CONFIG DOT11_WFD_DEVICE_CAPABILITY_CONFIG;
typedef struct _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS;
typedef struct _DXGK_MULTIPLANE_OVERLAY_ATTRIBUTES DXGK_MULTIPLANE_OVERLAY_ATTRIBUTES;
typedef struct _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO;
typedef struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER FILE_INITIATE_REPAIR_OUTPUT_BUFFER;
typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION FILE_VALID_DATA_LENGTH_INFORMATION;
typedef struct _FILTER_AGGREGATE_BASIC_INFORMATION FILTER_AGGREGATE_BASIC_INFORMATION;
typedef struct _FILTER_VOLUME_STANDARD_INFORMATION FILTER_VOLUME_STANDARD_INFORMATION;
typedef struct _IDE_ADVANCED_CHANNEL_CONFIGURATION IDE_ADVANCED_CHANNEL_CONFIGURATION;
typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
typedef struct _IO_DISCONNECT_INTERRUPT_PARAMETERS IO_DISCONNECT_INTERRUPT_PARAMETERS;
typedef struct _IRB_REQ_GET_LOCAL_HOST_INFORMATION IRB_REQ_GET_LOCAL_HOST_INFORMATION;
typedef struct _IRB_REQ_SET_DEVICE_XMIT_PROPERTIES IRB_REQ_SET_DEVICE_XMIT_PROPERTIES;
typedef struct _ISCSI_DiscoveredTargetPortalGroup2 ISCSI_DiscoveredTargetPortalGroup2;
typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION KEY_SET_VIRTUALIZATION_INFORMATION;
typedef struct _KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT;
typedef struct _1D3855BED4097B50524459F6573D9798 KSPROPERTY_BDA_RF_TUNER_STANDARD_S;
typedef struct _1F0027E2ABF976FB8AD72E88DC9BB28B KSPROPERTY_DROPPEDFRAMES_CURRENT_S;
enum MACRO_ClassInformation_DeviceId_ID {MSMouse_ClassInformation_DeviceId_ID = 1,MSKeyboard_ClassInformation_DeviceId_ID = 1,AGP_STD_DATA_ApertureBase_ID = 1,AGP_STD_DATA_ApertureLength_ID = 2,AGP_STD_DATA_AgpStatus_ID = 3,AGP_STD_DATA_AgpCommand_ID = 4,MSAcpi_ThermalZoneTemperature_ThermalStamp_ID = 1,MSAcpi_ThermalZoneTemperature_ThermalConstant1_ID = 2,MSAcpi_ThermalZoneTemperature_ThermalConstant2_ID = 3,MSAcpi_ThermalZoneTemperature_Reserved_ID = 4,MSAcpi_ThermalZoneTemperature_SamplingPeriod_ID = 5,MSAcpi_ThermalZoneTemperature_CurrentTemperature_ID = 6,MSAcpi_ThermalZoneTemperature_PassiveTripPoint_ID = 7,MSAcpi_ThermalZoneTemperature_CriticalTripPoint_ID = 8,MSAcpi_ThermalZoneTemperature_ActiveTripPointCount_ID = 9,MSAcpi_ThermalZoneTemperature_ActiveTripPoint_ID = 10,WMI_DISK_GEOMETRY_Cylinders_ID = 1,WMI_DISK_GEOMETRY_MediaType_ID = 2,WMI_DISK_GEOMETRY_TracksPerCylinder_ID = 3,WMI_DISK_GEOMETRY_SectorsPerTrack_ID = 4,WMI_DISK_GEOMETRY_BytesPerSector_ID = 5,WMI_DISK_PERFORMANCE_BytesRead_ID = 1,WMI_DISK_PERFORMANCE_BytesWritten_ID = 2,WMI_DISK_PERFORMANCE_ReadTime_ID = 3,WMI_DISK_PERFORMANCE_WriteTime_ID = 4,WMI_DISK_PERFORMANCE_IdleTime_ID = 5,WMI_DISK_PERFORMANCE_ReadCount_ID = 6,WMI_DISK_PERFORMANCE_WriteCount_ID = 7,WMI_DISK_PERFORMANCE_QueueDepth_ID = 8,WMI_DISK_PERFORMANCE_SplitCount_ID = 9,WMI_DISK_PERFORMANCE_QueryTime_ID = 10,WMI_DISK_PERFORMANCE_StorageDeviceNumber_ID = 11,WMI_DISK_PERFORMANCE_StorageManagerName_ID = 12,MSDiskDriver_Performance_PerfData_ID = 1,MSDiskDriver_Performance_DeviceName_ID = 2,STORAGE_FAILURE_PREDICT_STATUS_Reason_ID = 1,STORAGE_FAILURE_PREDICT_STATUS_PredictFailure_ID = 2,STORAGE_FAILURE_PREDICT_DATA_Length_ID = 1,STORAGE_FAILURE_PREDICT_DATA_VendorSpecific_ID = 2,ATAPI_FAILURE_PREDICT_DATA_Length_ID = 1,ATAPI_FAILURE_PREDICT_DATA_VendorSpecific_ID = 2,ATAPI_FAILURE_PREDICT_DATA_OfflineCollectionStatus_ID = 3,ATAPI_FAILURE_PREDICT_DATA_SelfTestStatus_ID = 4,ATAPI_FAILURE_PREDICT_DATA_TotalTime_ID = 5,ATAPI_FAILURE_PREDICT_DATA_VendorSpecific2_ID = 6,ATAPI_FAILURE_PREDICT_DATA_OfflineCollectCapability_ID = 7,ATAPI_FAILURE_PREDICT_DATA_SmartCapability_ID = 8,ATAPI_FAILURE_PREDICT_DATA_ErrorLogCapability_ID = 9,ATAPI_FAILURE_PREDICT_DATA_VendorSpecific3_ID = 10,ATAPI_FAILURE_PREDICT_DATA_ShortPollTimeInMinutes_ID = 11,ATAPI_FAILURE_PREDICT_DATA_ExtendedPollTimeInMinutes_ID = 12,ATAPI_FAILURE_PREDICT_DATA_Reserved_ID = 13,ATAPI_FAILURE_PREDICT_DATA_VendorSpecific4_ID = 14,ATAPI_FAILURE_PREDICT_DATA_Checksum_ID = 15,STORAGE_FAILURE_PREDICT_THRESHOLDS_VendorSpecific_ID = 1,STORAGE_FAILURE_PREDICT_EVENT_Length_ID = 1,STORAGE_FAILURE_PREDICT_EVENT_VendorSpecific_ID = 2,};
enum MACRO_CmResourceTypeDeviceSpecific {CmResourceTypeDeviceSpecific = 5,};
enum MACRO_ISCSI_DiscoveredTargetPortal {ISCSI_DiscoveredTargetPortal_Socket_ID = 1,ISCSI_DiscoveredTargetPortal_Address_ID = 2,ISCSI_DiscoveredTargetPortal_SymbolicName_ID = 3,ISCSI_DiscoveredTargetPortalGroup_PortalCount_ID = 1,ISCSI_DiscoveredTargetPortalGroup_Portals_ID = 2,ISCSI_DiscoveredTarget_TargetPortalGroupCount_ID = 1,ISCSI_DiscoveredTarget_TargetName_ID = 2,ISCSI_DiscoveredTarget_TargetAlias_ID = 3,ISCSI_DiscoveredTarget_TargetDiscoveredPortalGroups_ID = 4,ISCSI_DiscoveredTargetPortal2_Socket_ID = 1,ISCSI_DiscoveredTargetPortal2_Address_ID = 2,ISCSI_DiscoveredTargetPortal2_SecurityBitmap_ID = 3,ISCSI_DiscoveredTargetPortal2_KeySize_ID = 4,ISCSI_DiscoveredTargetPortal2_Key_ID = 5,ISCSI_DiscoveredTargetPortal2_SymbolicName_ID = 6,ISCSI_DiscoveredTargetPortalGroup2_PortalCount_ID = 1,ISCSI_DiscoveredTargetPortalGroup2_Tag_ID = 2,ISCSI_DiscoveredTargetPortalGroup2_Portals_ID = 3,ISCSI_DiscoveredTarget2_TargetPortalGroupCount_ID = 1,ISCSI_DiscoveredTarget2_TargetName_ID = 2,ISCSI_DiscoveredTarget2_TargetAlias_ID = 3,ISCSI_DiscoveredTarget2_TargetDiscoveredPortalGroups_ID = 4,};
enum MACRO_OID_DOT11_WFD_SEND_PROVISION {OID_DOT11_WFD_SEND_PROVISION_DISCOVERY_REQUEST = 0xE05010F,};
enum MACRO_ReportDiscoveredTargets2_OUT {ReportDiscoveredTargets2_OUT_Status_ID = 1,ReportDiscoveredTargets2_OUT_TargetCount_ID = 2,ReportDiscoveredTargets2_OUT_Targets_ID = 3,};
enum MACRO_SetTunnelModeOuterAddress_IN {SetTunnelModeOuterAddress_IN_PortNumber_ID = 1,SetTunnelModeOuterAddress_IN_DestinationAddress_ID = 2,SetTunnelModeOuterAddress_IN_TunnelModeOuterAddress_ID = 3,SetTunnelModeOuterAddress_OUT_Status_ID = 4,};
enum MACRO_WmiGetMonitorRawEEdidV1Block {WmiGetMonitorRawEEdidV1Block = 1,};
enum MACRO_WmiMonitorBasicDisplayParams {WmiMonitorBasicDisplayParams_VideoInputType_ID = 1,WmiMonitorBasicDisplayParams_MaxHorizontalImageSize_ID = 2,WmiMonitorBasicDisplayParams_MaxVerticalImageSize_ID = 3,WmiMonitorBasicDisplayParams_DisplayTransferCharacteristic_ID = 4,WmiMonitorBasicDisplayParams_SupportedDisplayFeatures_ID = 5,};
enum MACRO_WmiQueryCurrentOffloadConfig {WmiQueryCurrentOffloadConfig = 1,};
enum MACRO_WmiQueryHDSplitCurrentConfig {WmiQueryHDSplitCurrentConfig = 1,};
enum MACRO_WmiQueryPhysicalMediumTypeEx {WmiQueryPhysicalMediumTypeEx = 1,};
enum MACRO_WmiSetInterruptModeration_IN {WmiSetInterruptModeration_IN_MethodHeader_ID = 1,WmiSetInterruptModeration_IN_InterruptModeration_ID = 2,WmiSetInterruptModeration_OUT_OutputInfo_ID = 3,};
typedef struct _MSNdis_80211_NetworkInfrastructure MSNdis_80211_NetworkInfrastructure;
typedef struct _MSNdis_80211_NetworkTypesSupported MSNdis_80211_NetworkTypesSupported;
typedef struct _MSNdis_AtmSupportedServiceCategory MSNdis_AtmSupportedServiceCategory;
typedef struct _MSNdis_DeviceWakeOnMagicPacketOnly MSNdis_DeviceWakeOnMagicPacketOnly;
typedef struct _MSNdis_StatusDot11AssociationStart MSNdis_StatusDot11AssociationStart;
typedef struct _MSNdis_WmiIPSecOffloadV1_Supported MSNdis_WmiIPSecOffloadV1_Supported;
typedef struct _MSNdis_WmiReceiveScaleCapabilities MSNdis_WmiReceiveScaleCapabilities;
typedef struct _NDIS_802_11_AUTHENTICATION_REQUEST NDIS_802_11_AUTHENTICATION_REQUEST;
typedef struct _NDIS_FILTER_DRIVER_CHARACTERISTICS NDIS_FILTER_DRIVER_CHARACTERISTICS;
typedef struct _NDIS_RECEIVE_QUEUE_FREE_PARAMETERS NDIS_RECEIVE_QUEUE_FREE_PARAMETERS;
typedef struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1;
typedef struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2;
typedef struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX_EX *PACPI_EVAL_INPUT_BUFFER_COMPLEX_EX;
typedef struct _AGP_TARGET_BUS_INTERFACE_STANDARD *PAGP_TARGET_BUS_INTERFACE_STANDARD;
typedef struct _PARALLEL_INTERRUPT_SERVICE_ROUTINE PARALLEL_INTERRUPT_SERVICE_ROUTINE;
typedef struct _ARBITER_QUERY_CONFLICT_PARAMETERS *PARBITER_QUERY_CONFLICT_PARAMETERS;
typedef struct _ATM_BROADBAND_SENDING_COMPLETE_IE *PATM_BROADBAND_SENDING_COMPLETE_IE;
typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS *PCHANGER_INITIALIZE_ELEMENT_STATUS;
typedef union _PCI_EXPRESS_ACS_CAPABIITY_REGISTER PCI_EXPRESS_ACS_CAPABIITY_REGISTER;
typedef union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK PCI_EXPRESS_CORRECTABLE_ERROR_MASK;
typedef union _PCI_EXPRESS_DEVICE_STATUS_REGISTER PCI_EXPRESS_DEVICE_STATUS_REGISTER;
typedef struct _CLEAR_CLIENT_STICKINESS_HOOK_INFO *PCLEAR_CLIENT_STICKINESS_HOOK_INFO;
typedef struct _CO_TAPI_TRANSLATE_NDIS_CALLPARAMS *PCO_TAPI_TRANSLATE_NDIS_CALLPARAMS;
typedef struct _CO_TAPI_TRANSLATE_TAPI_CALLPARAMS *PCO_TAPI_TRANSLATE_TAPI_CALLPARAMS;
typedef struct _ClearDevInstanceHealthCounters_IN *PClearDevInstanceHealthCounters_IN;
typedef struct _CreateVirtualPortExUsingDHCHAP_IN *PCreateVirtualPortExUsingDHCHAP_IN;
typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS *PDEVICE_DATA_SET_REPAIR_PARAMETERS;
typedef struct _DEVICE_LB_PROVISIONING_DESCRIPTOR *PDEVICE_LB_PROVISIONING_DESCRIPTOR;
typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES;
typedef struct _DEVICE_STATISTICS_LOG_PAGE_HEADER *PDEVICE_STATISTICS_LOG_PAGE_HEADER;
typedef union DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO *PDOT11_BSS_ENTRY_PHY_SPECIFIC_INFO;
typedef struct DOT11_CONNECTION_START_PARAMETERS *PDOT11_CONNECTION_START_PARAMETERS;
typedef struct _DOT11_CURRENT_OPTIONAL_CAPABILITY *PDOT11_CURRENT_OPTIONAL_CAPABILITY;
typedef struct _DOT11_DIVERSITY_SELECTION_RX_LIST *PDOT11_DIVERSITY_SELECTION_RX_LIST;
typedef struct _DOT11_MANUFACTURING_TEST_SET_DATA *PDOT11_MANUFACTURING_TEST_SET_DATA;
typedef struct _DOT11_SUPPORTED_DSSS_CHANNEL_LIST *PDOT11_SUPPORTED_DSSS_CHANNEL_LIST;
typedef struct _DXGKMDT_OPM_REQUESTED_INFORMATION *PDXGKMDT_OPM_REQUESTED_INFORMATION;
typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION *PFILE_ID_GLOBAL_TX_DIR_INFORMATION;
typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION *PFILE_IO_PRIORITY_HINT_INFORMATION;
typedef struct _FILE_IS_REMOTE_DEVICE_INFORMATION *PFILE_IS_REMOTE_DEVICE_INFORMATION;
typedef struct _FLT_CREATEFILE_TARGET_ECP_CONTEXT *PFLT_CREATEFILE_TARGET_ECP_CONTEXT;
typedef struct _46F416DE933130F4FE917427A7A28C6B *PINET_PORT_RESERVATION_INFORMATION;
typedef union _IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS *PIPV6_NEIGHBOR_ADVERTISEMENT_FLAGS;
typedef struct _ISCSI_DiscoveredTargetPortalGroup *PISCSI_DiscoveredTargetPortalGroup;
typedef struct _F2A265646FB33FDD4D1C81D3F589355E *PKSDATAFORMAT_WAVEFORMATEXTENSIBLE;
typedef struct _7445C9FCFCC2899651BCA0E341BC0369 *PKSNODEPROPERTY_AUDIO_DEV_SPECIFIC;
typedef struct _KSPROPERTY_GRAPHMANAGER_INTERFACE *PKSPROPERTY_GRAPHMANAGER_INTERFACE;
typedef struct _D673094E3AD950F76728E160E7A2C382 *PKSPROPERTY_VIDEODECODER_STATUS2_S;
typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT *PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
typedef struct _MODE_CDROM_WRITE_PARAMETERS_PAGE2 *PMODE_CDROM_WRITE_PARAMETERS_PAGE2;
typedef struct _MOUNTMGR_DRIVE_LETTER_INFORMATION *PMOUNTMGR_DRIVE_LETTER_INFORMATION;
typedef struct _MSNdis_80211_ServiceSetIdentifier *PMSNdis_80211_ServiceSetIdentifier;
typedef struct _MSNdis_StatusDot11ConnectionStart *PMSNdis_StatusDot11ConnectionStart;
typedef struct _MSNdis_StatusHDSplitCurrentConfig *PMSNdis_StatusHDSplitCurrentConfig;
typedef struct _MSNdis_TokenRingCurrentFunctional *PMSNdis_TokenRingCurrentFunctional;
typedef struct _MSNdis_TokenRingCurrentRingStatus *PMSNdis_TokenRingCurrentRingStatus;
typedef struct _MSiSCSI_InitiatorNodeFailureEvent *PMSiSCSI_InitiatorNodeFailureEvent;
typedef struct _NDIS_CALL_MANAGER_CHARACTERISTICS *PNDIS_CALL_MANAGER_CHARACTERISTICS;
typedef struct _NDIS_MINIPORT_PNP_CHARACTERISTICS *PNDIS_MINIPORT_PNP_CHARACTERISTICS;
typedef struct _NDIS_PCI_DEVICE_CUSTOM_PROPERTIES *PNDIS_PCI_DEVICE_CUSTOM_PROPERTIES;
typedef struct _NDIS_WMI_RECEIVE_QUEUE_PARAMETERS *PNDIS_WMI_RECEIVE_QUEUE_PARAMETERS;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_RESPONSE *PNDIS_WWAN_DEVICE_SERVICE_RESPONSE;
typedef struct _NDIS_WWAN_SET_PREFERRED_PROVIDERS *PNDIS_WWAN_SET_PREFERRED_PROVIDERS;
typedef struct _NDIS_WWAN_SET_PROVISIONED_CONTEXT *PNDIS_WWAN_SET_PROVISIONED_CONTEXT;
typedef struct _NPI_LLDP_PROVIDER_CHARACTERISTICS *PNPI_LLDP_PROVIDER_CHARACTERISTICS;
typedef struct _OB_POST_CREATE_HANDLE_INFORMATION *POB_POST_CREATE_HANDLE_INFORMATION;
typedef struct _PCI_EXPRESS_BRIDGE_AER_CAPABILITY *PPCI_EXPRESS_BRIDGE_AER_CAPABILITY;
typedef union _PCI_EXPRESS_CAPABILITIES_REGISTER *PPCI_EXPRESS_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_LINK_CONTROL_REGISTER *PPCI_EXPRESS_LINK_CONTROL_REGISTER;
typedef union _PCI_EXPRESS_ROOT_CONTROL_REGISTER *PPCI_EXPRESS_ROOT_CONTROL_REGISTER;
typedef union _PCI_EXPRESS_SLOT_CONTROL_REGISTER *PPCI_EXPRESS_SLOT_CONTROL_REGISTER;
typedef struct _RESOURCEMANAGER_BASIC_INFORMATION *PRESOURCEMANAGER_BASIC_INFORMATION;
typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION PROCESS_EXTENDED_BASIC_INFORMATION;
typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR *PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
typedef struct _SCSI_SENSE_DESCRIPTOR_INFORMATION *PSCSI_SENSE_DESCRIPTOR_INFORMATION;
typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT *PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT;
typedef struct STORAGE_BREAK_RESERVATION_REQUEST *PSTORAGE_BREAK_RESERVATION_REQUEST;
typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION *PSYSTEM_FIRMWARE_TABLE_INFORMATION;
typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON *PSYSTEM_POWER_STATE_DISABLE_REASON;
typedef struct _TARGET_DEVICE_CUSTOM_NOTIFICATION *PTARGET_DEVICE_CUSTOM_NOTIFICATION;
typedef struct _TDI_ADDRESS_NETBIOS_UNICODE_EX_XP *PTDI_ADDRESS_NETBIOS_UNICODE_EX_XP;
typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION *PTXFS_ROLLFORWARD_REDO_INFORMATION;
typedef struct _VIDEO_HARDWARE_CONFIGURATION_DATA *PVIDEO_HARDWARE_CONFIGURATION_DATA;
typedef struct _VIDEO_PORT_DEBUG_REPORT_INTERFACE *PVIDEO_PORT_DEBUG_REPORT_INTERFACE;
typedef union _WHEA_ERROR_INJECTION_CAPABILITIES *PWHEA_ERROR_INJECTION_CAPABILITIES;
typedef struct _WWAN_DEVICE_SERVICE_SESSION_WRITE *PWWAN_DEVICE_SERVICE_SESSION_WRITE;
typedef struct _WmiMonitorDigitalVideoInputParams *PWmiMonitorDigitalVideoInputParams;
typedef struct _WmiQueryHardwareOffloadConfig_OUT *PWmiQueryHardwareOffloadConfig_OUT;
typedef struct _WmiQueryReceiveQueueParameters_IN *PWmiQueryReceiveQueueParameters_IN;
typedef struct _REG_QUERY_KEY_SECURITY_INFORMATION REG_QUERY_KEY_SECURITY_INFORMATION;
typedef struct _RXCE_CONNECTION_COMPLETION_CONTEXT_ RXCE_CONNECTION_COMPLETION_CONTEXT;
typedef struct _SFFDISK_QUERY_DEVICE_PROTOCOL_DATA SFFDISK_QUERY_DEVICE_PROTOCOL_DATA;
typedef struct _STORAGE_FAILURE_PREDICT_THRESHOLDS STORAGE_FAILURE_PREDICT_THRESHOLDS;
typedef struct _TARGET_DEVICE_REMOVAL_NOTIFICATION TARGET_DEVICE_REMOVAL_NOTIFICATION;
typedef struct _TDI_REQUEST_KERNEL_SET_INFO TDI_REQUEST_KERNEL_SET_INFORMATION;
typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION TRANSACTIONMANAGER_LOG_INFORMATION;
typedef struct _TRANSACTION_PROPERTIES_INFORMATION TRANSACTION_PROPERTIES_INFORMATION;
typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES TXFS_LIST_TRANSACTION_LOCKED_FILES;
typedef struct _USB_CONFIGURATION_POWER_DESCRIPTOR USB_CONFIGURATION_POWER_DESCRIPTOR;
typedef struct _VBICODECFILTERING_NABTS_SUBSTREAMS VBICODECFILTERING_NABTS_SUBSTREAMS;
typedef struct _VBICODECFILTERING_STATISTICS_NABTS VBICODECFILTERING_STATISTICS_NABTS;
typedef union _WHEA_ERROR_RECORD_HEADER_VALIDBITS WHEA_ERROR_RECORD_HEADER_VALIDBITS;
typedef struct _WmiMonitorSupportedDisplayFeatures WmiMonitorSupportedDisplayFeatures;
typedef struct _WmiQueryPciDeviceCustomProperty_IN WmiQueryPciDeviceCustomProperty_IN;
typedef struct _WmiQueryReceiveFilterParameters_IN WmiQueryReceiveFilterParameters_IN;
typedef struct _WmiQueryReceiveQueueParameters_OUT WmiQueryReceiveQueueParameters_OUT;
enum _D3DDDI_SYNCHRONIZATIONOBJECT_TYPE {D3DDDI_SYNCHRONIZATION_MUTEX = 0x1,D3DDDI_SEMAPHORE = 0x2,D3DDDI_FENCE = 0x3,D3DDDI_CPU_NOTIFICATION = 0x4,};
struct _DEVICE_STATISTICS_LOG_PAGE_HEADER {unsigned long long RevisionNumber : 16;unsigned long long PageNumber : 8;unsigned long long Reserved : 40;};
enum _DOT11_MANUFACTURING_CALLBACK_TYPE {dot11_manufacturing_callback_unknown = 0x0,dot11_manufacturing_callback_self_test_complete = 0x1,dot11_manufacturing_callback_sleep_complete = 0x2,dot11_manufacturing_callback_IHV_start = 0x80000000,dot11_manufacturing_callback_IHV_end = 0xFFFFFFFF,};
enum _DXGKMDT_OPM_HDCP_PROTECTION_LEVEL {DXGKMDT_OPM_HDCP_OFF = 0x0,DXGKMDT_OPM_HDCP_ON = 0x1,DXGKMDT_OPM_HDCP_FORCE_ULONG = 0x7FFFFFFF,};
enum _RESOURCEMANAGER_INFORMATION_CLASS {ResourceManagerBasicInformation = 0x0,ResourceManagerCompletionInformation = 0x1,};
enum _WWAN_DEVICE_SERVICE_SESSION_STATE {WwanDeviceServiceSessionOpen = 0x1,WwanDeviceServiceSessionClosed = 0x2,};
enum _0125F7DD214878EB629B8863199E19EA {PoAc = 0x0,PoDc = 0x1,PoHot = 0x2,PoConditionMaximum = 0x3,};
enum _023C071F6B2DC664943C68B81541179C {KSPROPERTY_STREAM_ALLOCATOR = 0x0,KSPROPERTY_STREAM_QUALITY = 0x1,KSPROPERTY_STREAM_DEGRADATION = 0x2,KSPROPERTY_STREAM_MASTERCLOCK = 0x3,KSPROPERTY_STREAM_TIMEFORMAT = 0x4,KSPROPERTY_STREAM_PRESENTATIONTIME = 0x5,KSPROPERTY_STREAM_PRESENTATIONEXTENT = 0x6,KSPROPERTY_STREAM_FRAMETIME = 0x7,KSPROPERTY_STREAM_RATECAPABILITY = 0x8,KSPROPERTY_STREAM_RATE = 0x9,KSPROPERTY_STREAM_PIPE_ID = 0xA,};
enum _02FAD7642A42DC49E4482F6F328202A2 {KSMETHOD_BDA_CREATE_PIN_FACTORY = 0x0,KSMETHOD_BDA_DELETE_PIN_FACTORY = 0x1,KSMETHOD_BDA_CREATE_TOPOLOGY = 0x2,};
enum _03AEA90D0BBEF9102658D6C1846F75AB {NLBHookApiInvalid = 0x0,NLBHookApiV3 = 0x3,NLBHookApiMax = 0xFFFF,};
enum _0442A98CC757C235E625FFA017269499 {IdeStart = 0x0,IdeStop = 0x1,IdePowerUp = 0x2,IdePowerDown = 0x3,IdeVendorDefined = 0x4,};
enum _05DAA4B528850479245A9C123C494191 {KSPROPERTY_DVDSUBPIC_PALETTE = 0x0,KSPROPERTY_DVDSUBPIC_HLI = 0x1,KSPROPERTY_DVDSUBPIC_COMPOSIT_ON = 0x2,};
enum _05EE2DFF740CFD0F1BF1AC89BD3D2E1D {AUDIO_CURVE_TYPE_NONE = 0x0,AUDIO_CURVE_TYPE_WINDOWS_FADE = 0x1,};
enum _0613C7FBE46AC3A4EDE29E53E46716D3 {MRLClosed = 0x0,MRLOpen = 0x1,};
enum _0689FBDB5239F8144BB29647BD372423 {KS_CAPTURE_ALLOC_INVALID = 0x0,KS_CAPTURE_ALLOC_SYSTEM = 0x1,KS_CAPTURE_ALLOC_VRAM = 0x2,KS_CAPTURE_ALLOC_SYSTEM_AGP = 0x4,KS_CAPTURE_ALLOC_VRAM_MAPPED = 0x8,};
enum _06D1ED250FD368380D92731A8809DBAC {NldsInvalid = 0x0,NldsTentative = 0x1,NldsDuplicate = 0x2,NldsDeprecated = 0x3,NldsPreferred = 0x4,IpDadStateInvalid = 0x0,IpDadStateTentative = 0x1,IpDadStateDuplicate = 0x2,IpDadStateDeprecated = 0x3,IpDadStatePreferred = 0x4,};
enum _0A77555B03865B677ABEDAD45C36FB86 {KSPROPERTY_MEDIASEEKING_CAPABILITIES = 0x0,KSPROPERTY_MEDIASEEKING_FORMATS = 0x1,KSPROPERTY_MEDIASEEKING_TIMEFORMAT = 0x2,KSPROPERTY_MEDIASEEKING_POSITION = 0x3,KSPROPERTY_MEDIASEEKING_STOPPOSITION = 0x4,KSPROPERTY_MEDIASEEKING_POSITIONS = 0x5,KSPROPERTY_MEDIASEEKING_DURATION = 0x6,KSPROPERTY_MEDIASEEKING_AVAILABLE = 0x7,KSPROPERTY_MEDIASEEKING_PREROLL = 0x8,KSPROPERTY_MEDIASEEKING_CONVERTTIMEFORMAT = 0x9,};
enum _0A8504B2A02FDAAC5DE9FC241C2D2824 {GeneralRegistryKey = 0x0,DeviceRegistryKey = 0x1,DriverRegistryKey = 0x2,HwProfileRegistryKey = 0x3,DeviceInterfaceRegistryKey = 0x4,};
enum _0B04060F21BCD959670CDC2C41862B4B {KSPROPERTY_TUNER_MODE_TV = 0x1,KSPROPERTY_TUNER_MODE_FM_RADIO = 0x2,KSPROPERTY_TUNER_MODE_AM_RADIO = 0x4,KSPROPERTY_TUNER_MODE_DSS = 0x8,KSPROPERTY_TUNER_MODE_ATSC = 0x10,};
enum _0B804802F465170881F43A3A4D8457F6 {KSPROPERTY_BDA_PIDFILTER_MAP_PIDS = 0x0,KSPROPERTY_BDA_PIDFILTER_UNMAP_PIDS = 0x1,KSPROPERTY_BDA_PIDFILTER_LIST_PIDS = 0x2,};
struct _0B8D1429C3827E0DB460E98487EB6908 {unsigned int Inexact : 1;unsigned int Underflow : 1;unsigned int Overflow : 1;unsigned int ZeroDivide : 1;unsigned int InvalidOperation : 1;};
enum _0BF2F814A5A7EB58DFED44BB484B2203 {WskInspectReject = 0x0,WskInspectAccept = 0x1,WskInspectPend = 0x2,WskInspectMax = 0x3,};
enum _0C0D8E877CDAA32B9F529E7264818D98 {_FpCompareEqual = 0x0,_FpCompareGreater = 0x1,_FpCompareLess = 0x2,_FpCompareUnordered = 0x3,};
enum _0C48B1A02A365DA9EEBAB619832376BC {KS_AMVP_DO_NOT_CARE = 0x0,KS_AMVP_BEST_BANDWIDTH = 0x1,KS_AMVP_INPUT_SAME_AS_OUTPUT = 0x2,};
enum _0C76443C932A2F4443609D822C5F1E4F {KSPROPERTY_ONESHOT_RECONNECT = 0x0,KSPROPERTY_ONESHOT_DISCONNECT = 0x1,};
enum _0CCF2589EBE4C99CC2ECB8B07AE7CB21 {KS_MPEG2Profile_Simple = 0x0,KS_MPEG2Profile_Main = 0x1,KS_MPEG2Profile_SNRScalable = 0x2,KS_MPEG2Profile_SpatiallyScalable = 0x3,KS_MPEG2Profile_High = 0x4,};
enum _0CDD13AED9949118DD70163834A3A235 {_FpRoundNearest = 0x0,_FpRoundMinusInfinity = 0x1,_FpRoundPlusInfinity = 0x2,_FpRoundChopped = 0x3,};
enum _0D1125125EE6964C07B35C2F5E1C590A {KSEVENT_VIDCAPTOSTI_EXT_TRIGGER = 0x0,KSEVENT_VIDCAP_AUTO_UPDATE = 0x1,KSEVENT_VIDCAP_SEARCH = 0x2,};
enum _0D5B3907082C5F608CE93488DF313CD4 {DxgkServicesAgp = 0x0,DxgkServicesDebugReport = 0x1,DxgkServicesTimedOperation = 0x2,DxgkServicesSPB = 0x3,DxgkServicesBDD = 0x4,DxgkServicesFirmwareTable = 0x5,};
struct _0D8B1FE4A186593EFC62C1490ACF7897 {double m256d_f64[4];};
enum _0FC989869F227A36D749990E523E5F04 {PowerActionNone = 0x0,PowerActionReserved = 0x1,PowerActionSleep = 0x2,PowerActionHibernate = 0x3,PowerActionShutdown = 0x4,PowerActionShutdownReset = 0x5,PowerActionShutdownOff = 0x6,PowerActionWarmEject = 0x7,};
enum _106423C0A7104421C1086EAB95FB5639 {SFFDISK_RPMB_IS_SUPPORTED = 0x0,SFFDISK_RPMB_PROGRAM_AUTH_KEY = 0x1,SFFDISK_RPMB_QUERY_WRITE_COUNTER = 0x2,SFFDISK_RPMB_AUTHENTICATED_WRITE = 0x3,SFFDISK_RPMB_AUTHENTICATED_READ = 0x4,SFFDISK_GPP_IS_SUPPORTED = 0x10000,SFFDISK_GPP_READ = 0x10001,SFFDISK_GPP_WRITE = 0x10002,};
enum _11EC008DD3BC1FD2717C5AD6FBC7A4E2 {KSPROPERTY_EXTENSION_UNIT_INFO = 0x0,KSPROPERTY_EXTENSION_UNIT_CONTROL = 0x1,KSPROPERTY_EXTENSION_UNIT_PASS_THROUGH = 0xFFFF,};
enum _1256F69D5966409158414A6E5C8CAF36 {PowerOn = 0x0,PowerOff = 0x1,};
enum _126464B142E9F95B22C7078089269995 {KSMETHOD_BDA_USERACTIVITY_USEREASON = 0x0,KSMETHOD_BDA_USERACTIVITY_INTERVAL = 0x1,KSMETHOD_BDA_USERACTIVITY_DETECTED = 0x2,};
enum _14400591F8E5BCF1B27F1E85FCD157AC {Bda_DigitalStandard_None = 0x0,Bda_DigitalStandard_DVB_T = 0x1,Bda_DigitalStandard_DVB_S = 0x2,Bda_DigitalStandard_DVB_C = 0x4,Bda_DigitalStandard_ATSC = 0x8,Bda_DigitalStandard_ISDB_T = 0x10,Bda_DigitalStandard_ISDB_S = 0x20,Bda_DigitalStandard_ISDB_C = 0x40,};
enum _14D0313F53F71FF0D9CAA5A76B4BCC94 {SFFP_PROP_MEDIA_CAPACITY = 0x0,SFFP_PROP_PARTITION_SIZE = 0x1,SFFP_PROP_WRITE_PROTECTED = 0x2,SFFP_PROP_MEDIA_STATE = 0x3,SFFP_PROP_MEDIA_CHANGECOUNT = 0x4,SFFP_PROP_MEDIA_ID = 0x5,SFFP_PROP_PROTOCOL_GUID = 0x6,SFFP_PROP_VERIFY_STATE = 0x7,SFFP_PROP_PARTITION_START_OFFSET = 0x8,SFFP_PROP_TRIM_SUPPORT = 0x9,};
enum _154E8F117D3015A595819B0DB5A6F7BC {SDRF_GET_PROPERTY = 0x0,SDRF_SET_PROPERTY = 0x1,SDRF_DEVICE_COMMAND = 0x2,SDRF_ERASE_COMMAND = 0x3,SDRF_MMC_SOFT_RESET = 0x4,};
enum _15DAC05CD31110EA425E38E139653BC4 {KSEVENT_DYNAMIC_FORMAT_CHANGE = 0x0,};
enum _15EAB5DB270905D3ADC7E2FB667B7EB6 {KSPROPERTY_BDA_PIN_ID = 0x0,KSPROPERTY_BDA_PIN_TYPE = 0x1,};
enum _1653C6230DF717019257E2169FA7FC6A {KSPROPERTY_VIDEODECODER_CAPS = 0x0,KSPROPERTY_VIDEODECODER_STANDARD = 0x1,KSPROPERTY_VIDEODECODER_STATUS = 0x2,KSPROPERTY_VIDEODECODER_OUTPUT_ENABLE = 0x3,KSPROPERTY_VIDEODECODER_VCR_TIMING = 0x4,KSPROPERTY_VIDEODECODER_STATUS2 = 0x5,};
enum _1737843133A6E4DC3631406BF92A2320 {KSPROPERTY_BDA_TABLE_SECTION = 0x0,};
enum _179945923F574A37108B154726F97D56 {KSPROPERTY_VIDEOCOMPRESSION_GETINFO = 0x0,KSPROPERTY_VIDEOCOMPRESSION_KEYFRAME_RATE = 0x1,KSPROPERTY_VIDEOCOMPRESSION_PFRAMES_PER_KEYFRAME = 0x2,KSPROPERTY_VIDEOCOMPRESSION_QUALITY = 0x3,KSPROPERTY_VIDEOCOMPRESSION_OVERRIDE_KEYFRAME = 0x4,KSPROPERTY_VIDEOCOMPRESSION_OVERRIDE_FRAME_SIZE = 0x5,KSPROPERTY_VIDEOCOMPRESSION_WINDOWSIZE = 0x6,};
enum _1CC95E689DB1A3C540445D2EA8FF4FA2 {CMP_Broadcast = 0x0,CMP_PointToPoint = 0x1,};
struct _1CF8D236196540158D67A26DAC991F28 {unsigned int W[2];};
enum _1D78DD8871C05E6FD7D3820402F49BC1 {IfOperStatusUp = 0x1,IfOperStatusDown = 0x2,IfOperStatusTesting = 0x3,IfOperStatusUnknown = 0x4,IfOperStatusDormant = 0x5,IfOperStatusNotPresent = 0x6,IfOperStatusLowerLayerDown = 0x7,};
enum _1FFC3954F3EEED4BA40483519ADC2C52 {KSPROPERTY_BDA_ECM_MAP_STATUS = 0x0,KSPROPERTY_BDA_CA_MODULE_STATUS = 0x1,KSPROPERTY_BDA_CA_SMART_CARD_STATUS = 0x2,KSPROPERTY_BDA_CA_MODULE_UI = 0x3,KSPROPERTY_BDA_CA_SET_PROGRAM_PIDS = 0x4,KSPROPERTY_BDA_CA_REMOVE_PROGRAM = 0x5,};
enum _206E03DA3E63D1D496663A7F788871C5 {DxgkBacklightOptimizationDisable = 0x0,DxgkBacklightOptimizationDesktop = 0x1,DxgkBacklightOptimizationDynamic = 0x2,DxgkBacklightOptimizationDimmed = 0x3,};
enum _214B3FAB360CFC0FA4B19913ED3BE09A {KSMETHOD_STREAMIO_READ = 0x0,KSMETHOD_STREAMIO_WRITE = 0x1,};
enum _219D11F677061808D19E166038DCDF6D {KS_TUNER_TUNING_EXACT = 0x1,KS_TUNER_TUNING_FINE = 0x2,KS_TUNER_TUNING_COARSE = 0x3,};
enum _222C5FE2FBB310101DEF802D75341780 {KSPROPERTY_HRTF3D_PARAMS = 0x0,KSPROPERTY_HRTF3D_INITIALIZE = 0x1,KSPROPERTY_HRTF3D_FILTER_FORMAT = 0x2,};
enum _239F13ABFE0DEB25C9BEF2C1826A55A5 {_FpFormatFp32 = 0x0,_FpFormatFp64 = 0x1,_FpFormatFp80 = 0x2,_FpFormatFp128 = 0x3,_FpFormatI16 = 0x4,_FpFormatI32 = 0x5,_FpFormatI64 = 0x6,_FpFormatU16 = 0x7,_FpFormatU32 = 0x8,_FpFormatU64 = 0x9,_FpFormatBcd80 = 0xA,_FpFormatCompare = 0xB,_FpFormatString = 0xC,};
enum _23E6C1A168AB0FE32A30B33B75B3E087 {KS_StreamingHint_FrameInterval = 0x100,KS_StreamingHint_KeyFrameRate = 0x200,KS_StreamingHint_PFrameRate = 0x400,KS_StreamingHint_CompQuality = 0x800,KS_StreamingHint_CompWindowSize = 0x1000,};
enum _263B2BD306F36DC6C8E0E139355C6151 {kVersionInvalid = 0xFFFFFFFF,kVersionWin98 = 0x0,kVersionWin98SE = 0x1,kVersionWin2K = 0x2,kVersionWin98SE_QFE2 = 0x3,kVersionWin2K_SP2 = 0x4,kVersionWinME = 0x5,kVersionWin98SE_QFE3 = 0x6,kVersionWinME_QFE1 = 0x7,kVersionWinXP = 0x8,kVersionWinXPSP1 = 0x9,kVersionWinServer2003 = 0xA,kVersionWin2K_UAAQFE = 0xB,kVersionWinXP_UAAQFE = 0xC,kVersionWinServer2003_UAAQFE = 0xD,kVersionWindowsLonghorn = 0xE,};
enum _26ED6592DCB8847128015546CAE6B6BB {KSMETHOD_BDA_WMDRM_STATUS = 0x0,KSMETHOD_BDA_WMDRM_REVINFO = 0x1,KSMETHOD_BDA_WMDRM_CRL = 0x2,KSMETHOD_BDA_WMDRM_MESSAGE = 0x3,KSMETHOD_BDA_WMDRM_REISSUELICENSE = 0x4,KSMETHOD_BDA_WMDRM_RENEWLICENSE = 0x5,KSMETHOD_BDA_WMDRM_LICENSE = 0x6,KSMETHOD_BDA_WMDRM_KEYINFO = 0x7,};
enum _270C55D2D3E5E2B5C5E1C425B61D62C1 {KSPROPERTY_VPCONFIG_NUMCONNECTINFO = 0x0,KSPROPERTY_VPCONFIG_GETCONNECTINFO = 0x1,KSPROPERTY_VPCONFIG_SETCONNECTINFO = 0x2,KSPROPERTY_VPCONFIG_VPDATAINFO = 0x3,KSPROPERTY_VPCONFIG_MAXPIXELRATE = 0x4,KSPROPERTY_VPCONFIG_INFORMVPINPUT = 0x5,KSPROPERTY_VPCONFIG_NUMVIDEOFORMAT = 0x6,KSPROPERTY_VPCONFIG_GETVIDEOFORMAT = 0x7,KSPROPERTY_VPCONFIG_SETVIDEOFORMAT = 0x8,KSPROPERTY_VPCONFIG_INVERTPOLARITY = 0x9,KSPROPERTY_VPCONFIG_DECIMATIONCAPABILITY = 0xA,KSPROPERTY_VPCONFIG_SCALEFACTOR = 0xB,KSPROPERTY_VPCONFIG_DDRAWHANDLE = 0xC,KSPROPERTY_VPCONFIG_VIDEOPORTID = 0xD,KSPROPERTY_VPCONFIG_DDRAWSURFACEHANDLE = 0xE,KSPROPERTY_VPCONFIG_SURFACEPARAMS = 0xF,};
enum _27AD37380C8900BF8828E9942DAD6F74 {KS_PixAspectRatio_NTSC4x3 = 0x0,KS_PixAspectRatio_NTSC16x9 = 0x1,KS_PixAspectRatio_PAL4x3 = 0x2,KS_PixAspectRatio_PAL16x9 = 0x3,};
enum _27EA88566304FD4A859B4EB0EE874253 {KSPROPERTY_GENERAL_COMPONENTID = 0x0,};
enum _2811190B5E8A43AD046E3AEC6C4B4077 {KSPROPERTY_AC3_ERROR_CONCEALMENT = 0x1,KSPROPERTY_AC3_ALTERNATE_AUDIO = 0x2,KSPROPERTY_AC3_DOWNMIX = 0x3,KSPROPERTY_AC3_BIT_STREAM_MODE = 0x4,KSPROPERTY_AC3_DIALOGUE_LEVEL = 0x5,KSPROPERTY_AC3_LANGUAGE_CODE = 0x6,KSPROPERTY_AC3_ROOM_TYPE = 0x7,};
enum _28CB952E2786B5E8C33A5F294DD66395 {DevicePropertyDeviceDescription = 0x0,DevicePropertyHardwareID = 0x1,DevicePropertyCompatibleIDs = 0x2,DevicePropertyBootConfiguration = 0x3,DevicePropertyBootConfigurationTranslated = 0x4,DevicePropertyClassName = 0x5,DevicePropertyClassGuid = 0x6,DevicePropertyDriverKeyName = 0x7,DevicePropertyManufacturer = 0x8,DevicePropertyFriendlyName = 0x9,DevicePropertyLocationInformation = 0xA,DevicePropertyPhysicalDeviceObjectName = 0xB,DevicePropertyBusTypeGuid = 0xC,DevicePropertyLegacyBusType = 0xD,DevicePropertyBusNumber = 0xE,DevicePropertyEnumeratorName = 0xF,DevicePropertyAddress = 0x10,DevicePropertyUINumber = 0x11,DevicePropertyInstallState = 0x12,DevicePropertyRemovalPolicy = 0x13,DevicePropertyResourceRequirements = 0x14,DevicePropertyAllocatedResources = 0x15,DevicePropertyContainerID = 0x16,};
enum _29FE7A6908066E8FC2BBE0B126D9C91F {NetworkOpenIntegrityAny = 0x0,NetworkOpenIntegrityNone = 0x1,NetworkOpenIntegritySigned = 0x2,NetworkOpenIntegrityEncrypted = 0x3,NetworkOpenIntegrityMaximum = 0x4,};
enum _2A33936B3139EB9E66CA5E1EA8E4A87B {PmiMeasurementTypeInput = 0x0,PmiMeasurementTypeOutput = 0x1,PmiMeasurementTypeMax = 0x2,};
enum _2A8472B1E6C2A8931738C92032F03B5A {BusQueryDeviceID = 0x0,BusQueryHardwareIDs = 0x1,BusQueryCompatibleIDs = 0x2,BusQueryInstanceID = 0x3,BusQueryDeviceSerialNumber = 0x4,BusQueryContainerID = 0x5,};
enum _2AC2BDA32D2B45F40865B7F1C65FC03F {KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST_PROPERTY_ID = 0x0,};
struct _2AE221845231FFCECC219BE7F7049133 {long double x;};
enum _2CD358AE72CA35E88B6E5377F4286C0E {KSMETHOD_WAVETABLE_WAVE_ALLOC = 0x0,KSMETHOD_WAVETABLE_WAVE_FREE = 0x1,KSMETHOD_WAVETABLE_WAVE_FIND = 0x2,KSMETHOD_WAVETABLE_WAVE_WRITE = 0x3,};
enum _2D06E770D8F86C31A6EBC72A59D3B380 {KSPROPERTY_MPEG2VID_MODES = 0x0,KSPROPERTY_MPEG2VID_CUR_MODE = 0x1,KSPROPERTY_MPEG2VID_4_3_RECT = 0x2,KSPROPERTY_MPEG2VID_16_9_RECT = 0x3,KSPROPERTY_MPEG2VID_16_9_PANSCAN = 0x4,};
enum _2DEFE1B87100719F80278A026CBFF4D7 {KSPROPERTY_ALLOCATOR_CONTROL_HONOR_COUNT = 0x0,KSPROPERTY_ALLOCATOR_CONTROL_SURFACE_SIZE = 0x1,KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_CAPS = 0x2,KSPROPERTY_ALLOCATOR_CONTROL_CAPTURE_INTERLEAVE = 0x3,};
enum _2E38A7C1F534E42343A61A8545C8A30E {KSPROPERTY_QUALITY_REPORT = 0x0,KSPROPERTY_QUALITY_ERROR = 0x1,};
enum _2E638D538041F5F5768A2ABD3931C6AD {IP6OPT_PAD1 = 0x0,IP6OPT_PADN = 0x1,IP6OPT_TUNNEL_LIMIT = 0x4,IP6OPT_ROUTER_ALERT = 0x5,IP6OPT_JUMBO = 0xC2,IP6OPT_NSAP_ADDR = 0xC3,};
enum _2EA5FED34BB00BFE47ECF8AA0811C9A6 {PowerDownDeviceInitial3 = 0x0,PowerDownDeviceLocked3 = 0x1,PowerDownDeviceQuiesced3 = 0x2,PowerDownDeviceFlushed3 = 0x3,PowerDownDeviceStopped3 = 0x4,PowerDownDeviceOff3 = 0x5,PowerDownDeviceUnlocked3 = 0x6,};
enum _2EEB654D0A08F9A92362B5D58EAE2147 {KSEVENT_EXTDEV_COMMAND_NOTIFY_INTERIM_READY = 0x0,KSEVENT_EXTDEV_COMMAND_CONTROL_INTERIM_READY = 0x1,KSEVENT_EXTDEV_COMMAND_BUSRESET = 0x2,KSEVENT_EXTDEV_TIMECODE_UPDATE = 0x3,KSEVENT_EXTDEV_OPERATION_MODE_UPDATE = 0x4,KSEVENT_EXTDEV_TRANSPORT_STATE_UPDATE = 0x5,KSEVENT_EXTDEV_NOTIFY_REMOVAL = 0x6,KSEVENT_EXTDEV_NOTIFY_MEDIUM_CHANGE = 0x7,};
enum _32421077C2010E274338AC2C523E1512 {KS_SEEKING_CanSeekAbsolute = 0x1,KS_SEEKING_CanSeekForwards = 0x2,KS_SEEKING_CanSeekBackwards = 0x4,KS_SEEKING_CanGetCurrentPos = 0x8,KS_SEEKING_CanGetStopPos = 0x10,KS_SEEKING_CanGetDuration = 0x20,KS_SEEKING_CanPlayBackwards = 0x40,};
enum _337A456D7D632A4922EE6C9CE465DAB9 {KSMETHOD_BDA_EVENT_DATA = 0x0,KSMETHOD_BDA_EVENT_COMPLETE = 0x1,};
enum _34FBAA152A0E04FDD9415278111565D2 {KSPROPERTY_MPEG4_MEDIATYPE_SD_BOX = 0x1,};
enum _36ED128D68EAAF7F1CDD97218E1C5001 {KSPROPERTY_CROSSBAR_CAPS = 0x0,KSPROPERTY_CROSSBAR_PININFO = 0x1,KSPROPERTY_CROSSBAR_CAN_ROUTE = 0x2,KSPROPERTY_CROSSBAR_ROUTE = 0x3,KSPROPERTY_CROSSBAR_INPUT_ACTIVE = 0x4,};
enum _37D474810C204F88D5E7D0AA3911B83F {ISCSI_ENCRYPT_NONE = 0x0,ISCSI_ENCRYPT_3DES_HMAC_SHA1 = 0x1,ISCSI_ENCRYPT_AES_CTR = 0x2,};
enum _3827BDD047F9694DA5A1AB4228D7528E {SDTT_UNSPECIFIED = 0x0,SDTT_CMD_ONLY = 0x1,SDTT_SINGLE_BLOCK = 0x2,SDTT_MULTI_BLOCK = 0x3,SDTT_MULTI_BLOCK_NO_CMD12 = 0x4,};
enum _388C37F61299C64FD1DD68C2D8B2451D {KSPROPERTY_BDA_SIGNAL_STRENGTH = 0x0,KSPROPERTY_BDA_SIGNAL_QUALITY = 0x1,KSPROPERTY_BDA_SIGNAL_PRESENT = 0x2,KSPROPERTY_BDA_SIGNAL_LOCKED = 0x3,KSPROPERTY_BDA_SAMPLE_TIME = 0x4,KSPROPERTY_BDA_SIGNAL_LOCK_CAPS = 0x5,KSPROPERTY_BDA_SIGNAL_LOCK_TYPE = 0x6,};
enum _38DCB8AC08778B6D83885D33F45337CD {KSPROPERTY_DIRECTSOUND3DLISTENER_ALL = 0x0,KSPROPERTY_DIRECTSOUND3DLISTENER_POSITION = 0x1,KSPROPERTY_DIRECTSOUND3DLISTENER_VELOCITY = 0x2,KSPROPERTY_DIRECTSOUND3DLISTENER_ORIENTATION = 0x3,KSPROPERTY_DIRECTSOUND3DLISTENER_DISTANCEFACTOR = 0x4,KSPROPERTY_DIRECTSOUND3DLISTENER_ROLLOFFFACTOR = 0x5,KSPROPERTY_DIRECTSOUND3DLISTENER_DOPPLERFACTOR = 0x6,KSPROPERTY_DIRECTSOUND3DLISTENER_BATCH = 0x7,KSPROPERTY_DIRECTSOUND3DLISTENER_ALLOCATION = 0x8,};
enum _3A35E47CE092B3ED2AE8A1283BD096A7 {KSMICARRAY_MICTYPE_OMNIDIRECTIONAL = 0x0,KSMICARRAY_MICTYPE_SUBCARDIOID = 0x1,KSMICARRAY_MICTYPE_CARDIOID = 0x2,KSMICARRAY_MICTYPE_SUPERCARDIOID = 0x3,KSMICARRAY_MICTYPE_HYPERCARDIOID = 0x4,KSMICARRAY_MICTYPE_8SHAPED = 0x5,KSMICARRAY_MICTYPE_VENDORDEFINED = 0xF,};
enum _3A65399903FADBC05E4C10BA9E609C32 {KSINTERFACE_MEDIA_MUSIC = 0x0,KSINTERFACE_MEDIA_WAVE_BUFFERED = 0x1,KSINTERFACE_MEDIA_WAVE_QUEUED = 0x2,};
enum _3A98730CE8FA5C41DCBE091A69EDD8A4 {KSEVENT_VPVBINOTIFY_FORMATCHANGE = 0x0,};
enum _3ABDAF5754BA3A7227E79705F9B5F6D6 {SDTD_UNSPECIFIED = 0x0,SDTD_READ = 0x1,SDTD_WRITE = 0x2,};
enum _3ADF40B5A0EAA9D4D385C443F69C37B6 {IdeBusPata = 0x0,IdeBusSata = 0x1,IdeBusUnknown = 0x2,};
enum _3BB8E64E0619C4E48B005AB1DFF8B019 {KSPROPERTY_DISPLAY_ADAPTER_GUID = 0x1,KSPROPERTY_PREFERRED_CAPTURE_SURFACE = 0x2,KSPROPERTY_CURRENT_CAPTURE_SURFACE = 0x3,KSPROPERTY_MAP_CAPTURE_HANDLE_TO_VRAM_ADDRESS = 0x4,};
enum _3C624B7E45B4A5C0CACC01D69E2B0D62 {ISCSI_DIGEST_TYPE_NONE = 0x0,ISCSI_DIGEST_TYPE_CRC32C = 0x1,};
enum _3C9ACFCDCE444EA19BF9C4916F527A0D {KS_VideoControlFlag_FlipHorizontal = 0x1,KS_VideoControlFlag_FlipVertical = 0x2,KS_Obsolete_VideoControlFlag_ExternalTriggerEnable = 0x10,KS_Obsolete_VideoControlFlag_Trigger = 0x20,KS_VideoControlFlag_ExternalTriggerEnable = 0x4,KS_VideoControlFlag_Trigger = 0x8,KS_VideoControlFlag_IndependentImagePin = 0x40,KS_VideoControlFlag_StillCapturePreviewFrame = 0x80,};
enum _3D3158304144A21DE6EE9D59FE667BA8 {KSPROPERTY_JACK_DESCRIPTION = 0x1,KSPROPERTY_JACK_DESCRIPTION2 = 0x2,KSPROPERTY_JACK_SINK_INFO = 0x3,KSPROPERTY_JACK_CONTAINERID = 0x4,};
enum _3E73702E428A13B3EA4562EB2B59A625 {P12843DL_OFF = 0x0,P12843DL_DOT3_DL = 0x1,P12843DL_MLC_DL = 0x2,P12843DL_DOT4_DL = 0x3,};
enum _3EB7CD5A2478AE20126886459846210D {KSPROPERTY_BDA_AUTODEMODULATE_START = 0x0,KSPROPERTY_BDA_AUTODEMODULATE_STOP = 0x1,};
enum _3F0E1F32807E838958D0814D130CFE59 {KS_AM_RATE_SimpleRateChange = 0x1,KS_AM_RATE_ExactRateChange = 0x2,KS_AM_RATE_MaxFullDataRate = 0x3,KS_AM_RATE_Step = 0x4,};
enum _3F668F976E8CEC135060DE8458EC67A0 {SDP_MEDIA_CHANGECOUNT = 0x0,SDP_MEDIA_STATE = 0x1,SDP_WRITE_PROTECTED = 0x2,SDP_FUNCTION_NUMBER = 0x3,SDP_FUNCTION_TYPE = 0x4,SDP_BUS_DRIVER_VERSION = 0x5,SDP_BUS_WIDTH = 0x6,SDP_BUS_CLOCK = 0x7,SDP_BUS_INTERFACE_CONTROL = 0x8,SDP_HOST_BLOCK_LENGTH = 0x9,SDP_FUNCTION_BLOCK_LENGTH = 0xA,SDP_FN0_BLOCK_LENGTH = 0xB,SDP_FUNCTION_INT_ENABLE = 0xC,SDP_SET_CARD_INTERRUPT_FORWARD = 0xD,SDP_SET_WAKE_INTERRUPT_FORWARD = 0xE,SDP_HIGH_CAPACITY_SUPPORTED = 0xF,};
enum _3F865298D7A39DB2D042C10B310808E8 {FailurePredictionNone = 0x0,FailurePredictionIoctl = 0x1,FailurePredictionSmart = 0x2,FailurePredictionSense = 0x3,};
enum _3F93F90BCBFB2C679E78C94BA1DFCB18 {KSMETHOD_BDA_ISDBCAS_SETREQUEST = 0x0,KSMETHOD_BDA_ISDBCAS_RESPONSEDATA = 0x1,};
enum _4033373E8B2FE00DB03F6BA8CD29F686 {KSMETHOD_BDA_WMDRMTUNER_CANCELCAPTURETOKEN = 0x0,KSMETHOD_BDA_WMDRMTUNER_SETPIDPROTECTION = 0x1,KSMETHOD_BDA_WMDRMTUNER_GETPIDPROTECTION = 0x2,KSMETHOD_BDA_WMDRMTUNER_SETSYNCVALUE = 0x3,KSMETHOD_BDA_WMDRMTUNER_STARTCODEPROFILE = 0x4,KSMETHOD_BDA_WMDRMTUNER_PURCHASE_ENTITLEMENT = 0x5,};
enum _414881918899110C4C8585ADE11D74B4 {KSPROPERTY_STREAMALLOCATOR_FUNCTIONTABLE = 0x0,KSPROPERTY_STREAMALLOCATOR_STATUS = 0x1,};
enum _429EB74962E87703A45DDC99578FCDEB {KSEVENT_BDA_EVENT_PENDINGEVENT = 0x0,};
enum _430F34FDD05865024699A32F04EA8E7D {ARP_REQUEST = 0x1,ARP_RESPONSE = 0x2,};
enum _4359A6DF66D6C0A2E03091CE4CF62226 {KSDEGRADE_STANDARD_SAMPLE = 0x0,KSDEGRADE_STANDARD_QUALITY = 0x1,KSDEGRADE_STANDARD_COMPUTATION = 0x2,KSDEGRADE_STANDARD_SKIP = 0x3,};
enum _43CF01C67384A91F7B708EDE09A1C266 {RXCONTEXT_FLAG4LOWIO_PIPE_OPERATION = 0x1,RXCONTEXT_FLAG4LOWIO_PIPE_SYNC_OPERATION = 0x2,RXCONTEXT_FLAG4LOWIO_READAHEAD = 0x4,RXCONTEXT_FLAG4LOWIO_THIS_READ_ENLARGED = 0x8,RXCONTEXT_FLAG4LOWIO_THIS_IO_BUFFERED = 0x10,RXCONTEXT_FLAG4LOWIO_LOCK_FCB_RESOURCE_HELD = 0x20,RXCONTEXT_FLAG4LOWIO_LOCK_WAS_QUEUED_IN_LOCKMANAGER = 0x40,RXCONTEXT_FLAG4LOWIO_THIS_IO_FAST = 0x80,RXCONTEXT_FLAG4LOWIO_LOCK_OPERATION_COMPLETED = 0x100,RXCONTEXT_FLAG4LOWIO_LOCK_BUFFERED_ON_ENTRY = 0x200,};
enum _43FCAF11C616917BBA786E6D92BCE878 {CONTROL_CHANNEL_TRIGGER_STATUS_INVALID = 0x0,CONTROL_CHANNEL_TRIGGER_STATUS_SOFTWARE_SLOT_ALLOCATED = 0x1,CONTROL_CHANNEL_TRIGGER_STATUS_HARDWARE_SLOT_ALLOCATED = 0x2,CONTROL_CHANNEL_TRIGGER_STATUS_POLICY_ERROR = 0x3,CONTROL_CHANNEL_TRIGGER_STATUS_SYSTEM_ERROR = 0x4,CONTROL_CHANNEL_TRIGGER_STATUS_TRANSPORT_DISCONNECTED = 0x5,CONTROL_CHANNEL_TRIGGER_STATUS_SERVICE_UNAVAILABLE = 0x6,};
enum _44DC41ACBBA2F30AE6B8641A443941EE {SDPMS_NO_MEDIA = 0x0,SDPMS_MEDIA_INSERTED = 0x1,};
enum _450AB481C71E837C7D97DD5198D29691 {KdNameSpacePCI = 0x0,KdNameSpaceACPI = 0x1,KdNameSpaceAny = 0x2,KdNameSpaceMax = 0x3,};
enum _46FFE91252AC4BB1103ECF2E486A148F {KS_CompressionCaps_CanQuality = 0x1,KS_CompressionCaps_CanCrunch = 0x2,KS_CompressionCaps_CanKeyFrame = 0x4,KS_CompressionCaps_CanBFrame = 0x8,KS_CompressionCaps_CanWindow = 0x10,};
enum _49B4DF22A98C0153E90C1246F17F787B {KSPROPERTY_VIDEOENCODER_CAPS = 0x0,KSPROPERTY_VIDEOENCODER_STANDARD = 0x1,KSPROPERTY_VIDEOENCODER_COPYPROTECTION = 0x2,KSPROPERTY_VIDEOENCODER_CC_ENABLE = 0x3,};
enum _49EE439E56BE34AE43E8DD7C2A7C5B0D {KSPROPERTY_SELECTOR_SOURCE_NODE_ID = 0x0,KSPROPERTY_SELECTOR_NUM_SOURCES = 0x1,};
enum _4ADD18C59427D2D4505C2F6B781D5A2B {NlsoOther = 0x0,NlsoManual = 0x1,NlsoWellKnown = 0x2,NlsoDhcp = 0x3,NlsoLinkLayerAddress = 0x4,NlsoRandom = 0x5,IpSuffixOriginOther = 0x0,IpSuffixOriginManual = 0x1,IpSuffixOriginWellKnown = 0x2,IpSuffixOriginDhcp = 0x3,IpSuffixOriginLinkLayerAddress = 0x4,IpSuffixOriginRandom = 0x5,IpSuffixOriginUnchanged = 0x10,};
enum _4B933B38561F3202E8B681F2D4CA4B1B {KS_MPEG2Level_Low = 0x0,KS_MPEG2Level_Main = 0x1,KS_MPEG2Level_High1440 = 0x2,KS_MPEG2Level_High = 0x3,};
enum _4B9A5D9798CAEECAF66471EC6A7BB50E {NLB_FILTER_HOOK_PROCEED_WITH_HASH = 0x0,NLB_FILTER_HOOK_REVERSE_HASH = 0x1,NLB_FILTER_HOOK_FORWARD_HASH = 0x2,NLB_FILTER_HOOK_ACCEPT_UNCONDITIONALLY = 0x3,NLB_FILTER_HOOK_REJECT_UNCONDITIONALLY = 0x4,NLB_FILTER_HOOK_USE_MODIFIED_TUPLE = 0x5,};
enum _4BAA0EF8FAE2F23162EFC47E7D43DBA8 {RX_LOG_UNINITIALIZED = 0x0,RX_LOG_ENABLED = 0x1,RX_LOG_DISABLED = 0x2,RX_LOG_ERROR = 0x3,};
enum _4BC7B6F7085B9AE96B4CD2F6C16EFA48 {ISCSI_LOGINTARGET_DISCOVERY = 0x0,ISCSI_LOGINTARGET_INFORMATIONAL = 0x1,ISCSI_LOGINTARGET_DATA = 0x2,};
enum _4BE57A986B4F72C371F36A34EB044977 {PmiMeasurementUnitMilliWatt = 0x0,PmiMeasurementUnitMax = 0x1,};
enum _4BE76D8A2D42FA48351D108905A477D8 {KSPROPERTY_GM_GRAPHMANAGER = 0x0,KSPROPERTY_GM_TIMESTAMP_CLOCK = 0x1,KSPROPERTY_GM_RATEMATCH = 0x2,KSPROPERTY_GM_RENDER_CLOCK = 0x3,};
enum _4CDE0135BF0DD65FF3AEA877B53731B2 {PowerUpDeviceInitial = 0x0,PowerUpDeviceLocked = 0x1,PowerUpDeviceOn = 0x2,PowerUpDeviceStarted = 0x3,PowerUpDeviceUnlocked = 0x4,};
enum _4CF302B10AC45D566291D4F82FF21449 {StorPowerActionNone = 0x0,StorPowerActionReserved = 0x1,StorPowerActionSleep = 0x2,StorPowerActionHibernate = 0x3,StorPowerActionShutdown = 0x4,StorPowerActionShutdownReset = 0x5,StorPowerActionShutdownOff = 0x6,StorPowerActionWarmEject = 0x7,};
enum _4DC501E3A6D49DD0180B70CB55BC0E01 {SignalAndServiceStatusSpanningEvent_None = 0xFFFFFFFF,SignalAndServiceStatusSpanningEvent_Clear = 0x0,SignalAndServiceStatusSpanningEvent_NoTVSignal = 0x1,SignalAndServiceStatusSpanningEvent_ServiceOffAir = 0x2,SignalAndServiceStatusSpanningEvent_WeakTVSignal = 0x3,SignalAndServiceStatusSpanningEvent_NoSubscription = 0x4,SignalAndServiceStatusSpanningEvent_AllAVScrambled = 0x5,};
enum _4EB082DFE97E2478F2076624F2DA8794 {ChannelTypeNone = 0x0,ChannelTypeOther = 0x1,ChannelTypeVideo = 0x2,ChannelTypeAudio = 0x4,ChannelTypeText = 0x8,ChannelTypeSubtitles = 0x10,ChannelTypeCaptions = 0x20,ChannelTypeSuperimpose = 0x40,ChannelTypeData = 0x80,};
enum _4F0AA3E1E28506607394CF7C0CEBDCDC {KSPROPERTY_AUDIO_LATENCY = 0x1,KSPROPERTY_AUDIO_COPY_PROTECTION = 0x2,KSPROPERTY_AUDIO_CHANNEL_CONFIG = 0x3,KSPROPERTY_AUDIO_VOLUMELEVEL = 0x4,KSPROPERTY_AUDIO_POSITION = 0x5,KSPROPERTY_AUDIO_DYNAMIC_RANGE = 0x6,KSPROPERTY_AUDIO_QUALITY = 0x7,KSPROPERTY_AUDIO_SAMPLING_RATE = 0x8,KSPROPERTY_AUDIO_DYNAMIC_SAMPLING_RATE = 0x9,KSPROPERTY_AUDIO_MIX_LEVEL_TABLE = 0xA,KSPROPERTY_AUDIO_MIX_LEVEL_CAPS = 0xB,KSPROPERTY_AUDIO_MUX_SOURCE = 0xC,KSPROPERTY_AUDIO_MUTE = 0xD,KSPROPERTY_AUDIO_BASS = 0xE,KSPROPERTY_AUDIO_MID = 0xF,KSPROPERTY_AUDIO_TREBLE = 0x10,KSPROPERTY_AUDIO_BASS_BOOST = 0x11,KSPROPERTY_AUDIO_EQ_LEVEL = 0x12,KSPROPERTY_AUDIO_NUM_EQ_BANDS = 0x13,KSPROPERTY_AUDIO_EQ_BANDS = 0x14,KSPROPERTY_AUDIO_AGC = 0x15,KSPROPERTY_AUDIO_DELAY = 0x16,KSPROPERTY_AUDIO_LOUDNESS = 0x17,KSPROPERTY_AUDIO_WIDE_MODE = 0x18,KSPROPERTY_AUDIO_WIDENESS = 0x19,KSPROPERTY_AUDIO_REVERB_LEVEL = 0x1A,KSPROPERTY_AUDIO_CHORUS_LEVEL = 0x1B,KSPROPERTY_AUDIO_DEV_SPECIFIC = 0x1C,KSPROPERTY_AUDIO_DEMUX_DEST = 0x1D,KSPROPERTY_AUDIO_STEREO_ENHANCE = 0x1E,KSPROPERTY_AUDIO_MANUFACTURE_GUID = 0x1F,KSPROPERTY_AUDIO_PRODUCT_GUID = 0x20,KSPROPERTY_AUDIO_CPU_RESOURCES = 0x21,KSPROPERTY_AUDIO_STEREO_SPEAKER_GEOMETRY = 0x22,KSPROPERTY_AUDIO_SURROUND_ENCODE = 0x23,KSPROPERTY_AUDIO_3D_INTERFACE = 0x24,KSPROPERTY_AUDIO_PEAKMETER = 0x25,KSPROPERTY_AUDIO_ALGORITHM_INSTANCE = 0x26,KSPROPERTY_AUDIO_FILTER_STATE = 0x27,KSPROPERTY_AUDIO_PREFERRED_STATUS = 0x28,KSPROPERTY_AUDIO_PEQ_MAX_BANDS = 0x29,KSPROPERTY_AUDIO_PEQ_NUM_BANDS = 0x2A,KSPROPERTY_AUDIO_PEQ_BAND_CENTER_FREQ = 0x2B,KSPROPERTY_AUDIO_PEQ_BAND_Q_FACTOR = 0x2C,KSPROPERTY_AUDIO_PEQ_BAND_LEVEL = 0x2D,KSPROPERTY_AUDIO_CHORUS_MODULATION_RATE = 0x2E,KSPROPERTY_AUDIO_CHORUS_MODULATION_DEPTH = 0x2F,KSPROPERTY_AUDIO_REVERB_TIME = 0x30,KSPROPERTY_AUDIO_REVERB_DELAY_FEEDBACK = 0x31,KSPROPERTY_AUDIO_POSITIONEX = 0x32,KSPROPERTY_AUDIO_MIC_ARRAY_GEOMETRY = 0x33,KSPROPERTY_AUDIO_PRESENTATION_POSITION = 0x34,KSPROPERTY_AUDIO_WAVERT_CURRENT_WRITE_POSITION = 0x35,KSPROPERTY_AUDIO_LINEAR_BUFFER_POSITION = 0x36,KSPROPERTY_AUDIO_PEAKMETER2 = 0x37,};
enum _4F70025E697681DF4138B78EC6988F16 {VideoPortServicesAGP = 0x1,VideoPortServicesI2C = 0x2,VideoPortServicesHeadless = 0x3,VideoPortServicesInt10 = 0x4,VideoPortServicesDebugReport = 0x5,VideoPortServicesWCMemoryProtection = 0x6,};
enum _51E2EEFCC61EF61BA570BB294F739445 {UserNotPresent = 0x0,UserPresent = 0x1,UserUnknown = 0xFF,};
enum _54C7D444FA208DC7013A9CDC0D1DFDA7 {KSPROPERTY_CAMERACONTROL_PAN = 0x0,KSPROPERTY_CAMERACONTROL_TILT = 0x1,KSPROPERTY_CAMERACONTROL_ROLL = 0x2,KSPROPERTY_CAMERACONTROL_ZOOM = 0x3,KSPROPERTY_CAMERACONTROL_EXPOSURE = 0x4,KSPROPERTY_CAMERACONTROL_IRIS = 0x5,KSPROPERTY_CAMERACONTROL_FOCUS = 0x6,KSPROPERTY_CAMERACONTROL_SCANMODE = 0x7,KSPROPERTY_CAMERACONTROL_PRIVACY = 0x8,KSPROPERTY_CAMERACONTROL_PANTILT = 0x9,KSPROPERTY_CAMERACONTROL_PAN_RELATIVE = 0xA,KSPROPERTY_CAMERACONTROL_TILT_RELATIVE = 0xB,KSPROPERTY_CAMERACONTROL_ROLL_RELATIVE = 0xC,KSPROPERTY_CAMERACONTROL_ZOOM_RELATIVE = 0xD,KSPROPERTY_CAMERACONTROL_EXPOSURE_RELATIVE = 0xE,KSPROPERTY_CAMERACONTROL_IRIS_RELATIVE = 0xF,KSPROPERTY_CAMERACONTROL_FOCUS_RELATIVE = 0x10,KSPROPERTY_CAMERACONTROL_PANTILT_RELATIVE = 0x11,KSPROPERTY_CAMERACONTROL_FOCAL_LENGTH = 0x12,KSPROPERTY_CAMERACONTROL_AUTO_EXPOSURE_PRIORITY = 0x13,};
enum _56F286DAD20CDECB067008B7BD4809D6 {KSPROPERTY_RTAUDIO_GETPOSITIONFUNCTION = 0x0,KSPROPERTY_RTAUDIO_BUFFER = 0x1,KSPROPERTY_RTAUDIO_HWLATENCY = 0x2,KSPROPERTY_RTAUDIO_POSITIONREGISTER = 0x3,KSPROPERTY_RTAUDIO_CLOCKREGISTER = 0x4,KSPROPERTY_RTAUDIO_BUFFER_WITH_NOTIFICATION = 0x5,KSPROPERTY_RTAUDIO_REGISTER_NOTIFICATION_EVENT = 0x6,KSPROPERTY_RTAUDIO_UNREGISTER_NOTIFICATION_EVENT = 0x7,KSPROPERTY_RTAUDIO_QUERY_NOTIFICATION_SUPPORT = 0x8,};
enum _588B79C44B661DAA89A4A63C076A83C8 {eConnTypeUnknown = 0x0,eConnType3Point5mm = 0x1,eConnTypeQuarter = 0x2,eConnTypeAtapiInternal = 0x3,eConnTypeRCA = 0x4,eConnTypeOptical = 0x5,eConnTypeOtherDigital = 0x6,eConnTypeOtherAnalog = 0x7,eConnTypeMultichannelAnalogDIN = 0x8,eConnTypeXlrProfessional = 0x9,eConnTypeRJ11Modem = 0xA,eConnTypeCombination = 0xB,};
enum _58D48C0FB5ECB9FA87F591A2A065325C {KSEVENT_BDA_DISEQC_DATA_RECEIVED = 0x0,};
enum _590B73EBA2289426BF23338FF0AEEAF9 {WMI_GET_ALL_DATA = 0x0,WMI_GET_SINGLE_INSTANCE = 0x1,WMI_SET_SINGLE_INSTANCE = 0x2,WMI_SET_SINGLE_ITEM = 0x3,WMI_ENABLE_EVENTS = 0x4,WMI_DISABLE_EVENTS = 0x5,WMI_ENABLE_COLLECTION = 0x6,WMI_DISABLE_COLLECTION = 0x7,WMI_REGINFO = 0x8,WMI_EXECUTE_METHOD = 0x9,WMI_CAPTURE_STATE = 0xA,};
enum _59247D2B2540BDEE4F717D6204EAE13F {CONSTRICTOR_OPTION_DISABLE = 0x0,CONSTRICTOR_OPTION_MUTE = 0x1,};
enum _59DFCEDD58F1A9BB4DC4C26A675D2643 {KSEVENT_CAMERACONTROL_FOCUS = 0x0,KSEVENT_CAMERACONTROL_ZOOM = 0x1,};
enum _59F47961FEC953F20A64EC788B1D06EA {KSPROPERTY_TVAUDIO_CAPS = 0x0,KSPROPERTY_TVAUDIO_MODE = 0x1,KSPROPERTY_TVAUDIO_CURRENTLY_AVAILABLE_MODES = 0x2,};
enum _5A3467F7F820039F54409F0D6697F58C {KSMETHOD_BDA_TUNER_SETTUNER = 0x0,KSMETHOD_BDA_TUNER_GETTUNERSTATE = 0x1,KSMETHOD_BDA_TUNER_SIGNALNOISERATIO = 0x2,};
enum _5CBF14E525F8BDCEBA8D0763A604A116 {ISCSI_IP_ADDRESS_TEXT = 0x0,ISCSI_IP_ADDRESS_IPV4 = 0x1,ISCSI_IP_ADDRESS_IPV6 = 0x2,ISCSI_IP_ADDRESS_EMPTY = 0x3,};
enum _5D45993B0684C89D7D9492DEAC222292 {KSPROPERTY_CYCLIC_POSITION = 0x0,};
enum _5D93CEBEF53306420EE1E70105404527 {KSEVENT_TUNER_CHANGED = 0x0,KSEVENT_TUNER_INITIATE_SCAN = 0x1,};
enum _5DB038E67C93660546D046F3C51D1C54 {RouteProtocolOther = 0x1,RouteProtocolLocal = 0x2,RouteProtocolNetMgmt = 0x3,RouteProtocolIcmp = 0x4,RouteProtocolEgp = 0x5,RouteProtocolGgp = 0x6,RouteProtocolHello = 0x7,RouteProtocolRip = 0x8,RouteProtocolIsIs = 0x9,RouteProtocolEsIs = 0xA,RouteProtocolCisco = 0xB,RouteProtocolBbn = 0xC,RouteProtocolOspf = 0xD,RouteProtocolBgp = 0xE,MIB_IPPROTO_OTHER = 0x1,PROTO_IP_OTHER = 0x1,MIB_IPPROTO_LOCAL = 0x2,PROTO_IP_LOCAL = 0x2,MIB_IPPROTO_NETMGMT = 0x3,PROTO_IP_NETMGMT = 0x3,MIB_IPPROTO_ICMP = 0x4,PROTO_IP_ICMP = 0x4,MIB_IPPROTO_EGP = 0x5,PROTO_IP_EGP = 0x5,MIB_IPPROTO_GGP = 0x6,PROTO_IP_GGP = 0x6,MIB_IPPROTO_HELLO = 0x7,PROTO_IP_HELLO = 0x7,MIB_IPPROTO_RIP = 0x8,PROTO_IP_RIP = 0x8,MIB_IPPROTO_IS_IS = 0x9,PROTO_IP_IS_IS = 0x9,MIB_IPPROTO_ES_IS = 0xA,PROTO_IP_ES_IS = 0xA,MIB_IPPROTO_CISCO = 0xB,PROTO_IP_CISCO = 0xB,MIB_IPPROTO_BBN = 0xC,PROTO_IP_BBN = 0xC,MIB_IPPROTO_OSPF = 0xD,PROTO_IP_OSPF = 0xD,MIB_IPPROTO_BGP = 0xE,PROTO_IP_BGP = 0xE,MIB_IPPROTO_NT_AUTOSTATIC = 0x2712,PROTO_IP_NT_AUTOSTATIC = 0x2712,MIB_IPPROTO_NT_STATIC = 0x2716,PROTO_IP_NT_STATIC = 0x2716,MIB_IPPROTO_NT_STATIC_NON_DOD = 0x2717,PROTO_IP_NT_STATIC_NON_DOD = 0x2717,};
enum _5E815F531691CADE0920F6FE7F05DC54 {KSMETHOD_BDA_GDDS_DATATYPE = 0x0,KSMETHOD_BDA_GDDS_DATA = 0x1,KSMETHOD_BDA_GDDS_TUNEXMLFROMIDX = 0x2,KSMETHOD_BDA_GDDS_GETSERVICES = 0x3,KSMETHOD_BDA_GDDS_SERVICEFROMTUNEXML = 0x4,KSMETHOD_BDA_GDDS_DATAUPDATE = 0x5,};
enum _5EA8F044749A3CD34677CB1E9E0E09A9 {KSPROPERTY_VIDEOPROCAMP_BRIGHTNESS = 0x0,KSPROPERTY_VIDEOPROCAMP_CONTRAST = 0x1,KSPROPERTY_VIDEOPROCAMP_HUE = 0x2,KSPROPERTY_VIDEOPROCAMP_SATURATION = 0x3,KSPROPERTY_VIDEOPROCAMP_SHARPNESS = 0x4,KSPROPERTY_VIDEOPROCAMP_GAMMA = 0x5,KSPROPERTY_VIDEOPROCAMP_COLORENABLE = 0x6,KSPROPERTY_VIDEOPROCAMP_WHITEBALANCE = 0x7,KSPROPERTY_VIDEOPROCAMP_BACKLIGHT_COMPENSATION = 0x8,KSPROPERTY_VIDEOPROCAMP_GAIN = 0x9,KSPROPERTY_VIDEOPROCAMP_DIGITAL_MULTIPLIER = 0xA,KSPROPERTY_VIDEOPROCAMP_DIGITAL_MULTIPLIER_LIMIT = 0xB,KSPROPERTY_VIDEOPROCAMP_WHITEBALANCE_COMPONENT = 0xC,KSPROPERTY_VIDEOPROCAMP_POWERLINE_FREQUENCY = 0xD,};
enum _5F41E4353E4B35443F0B47CBEC1499B3 {KdConfigureDeviceAndContinue = 0x0,KdSkipDeviceAndContinue = 0x1,KdConfigureDeviceAndStop = 0x2,KdSkipDeviceAndStop = 0x3,};
enum _5F4F90A626A6FDB67639732D9E3389D6 {KSPROPERTY_CONNECTION_STATE = 0x0,KSPROPERTY_CONNECTION_PRIORITY = 0x1,KSPROPERTY_CONNECTION_DATAFORMAT = 0x2,KSPROPERTY_CONNECTION_ALLOCATORFRAMING = 0x3,KSPROPERTY_CONNECTION_PROPOSEDATAFORMAT = 0x4,KSPROPERTY_CONNECTION_ACQUIREORDERING = 0x5,KSPROPERTY_CONNECTION_ALLOCATORFRAMING_EX = 0x6,KSPROPERTY_CONNECTION_STARTAT = 0x7,};
enum _5F7CACEFCAE6D59CA4BCCF22EBF82FD5 {KSPROPERTY_BDA_RF_TUNER_FREQUENCY = 0x0,KSPROPERTY_BDA_RF_TUNER_POLARITY = 0x1,KSPROPERTY_BDA_RF_TUNER_RANGE = 0x2,KSPROPERTY_BDA_RF_TUNER_TRANSPONDER = 0x3,KSPROPERTY_BDA_RF_TUNER_BANDWIDTH = 0x4,KSPROPERTY_BDA_RF_TUNER_FREQUENCY_MULTIPLIER = 0x5,KSPROPERTY_BDA_RF_TUNER_CAPS = 0x6,KSPROPERTY_BDA_RF_TUNER_SCAN_STATUS = 0x7,KSPROPERTY_BDA_RF_TUNER_STANDARD = 0x8,KSPROPERTY_BDA_RF_TUNER_STANDARD_MODE = 0x9,};
enum _5FB4B89D89D7F3E9E930012D26E1CC5E {UNSPECIFIED_COMPARTMENT_ID = 0x0,DEFAULT_COMPARTMENT_ID = 0x1,};
enum _62D33E18697CC8662AB20FA6FAD2C6ED {eGeoLocRear = 0x1,eGeoLocFront = 0x2,eGeoLocLeft = 0x3,eGeoLocRight = 0x4,eGeoLocTop = 0x5,eGeoLocBottom = 0x6,eGeoLocRearPanel = 0x7,eGeoLocRiser = 0x8,eGeoLocInsideMobileLid = 0x9,eGeoLocDrivebay = 0xA,eGeoLocHDMI = 0xB,eGeoLocOutsideMobileLid = 0xC,eGeoLocATAPI = 0xD,eGeoLocNotApplicable = 0xE,eGeoLocReserved6 = 0xF,EPcxGeoLocation_enum_count = 0x10,};
enum _62D95A1861CF901152B53DFA047F6B81 {KSINTERFACE_FILEIO_STREAMING = 0x0,};
enum _647189E37124054D29E0D1AD2CCD51DF {KSMETHOD_BDA_DRM_CURRENT = 0x0,KSMETHOD_BDA_DRM_DRMSTATUS = 0x1,};
enum _6482D7A0F8ECEE932DF178E2624E51B8 {PerRequestExtension = 0x0,DmaBuffer = 0x1,SRBDataBuffer = 0x2,};
enum _658345D4A0AC297778ED4BE2EFA31AA1 {KS_AnalogVideo_None = 0x0,KS_AnalogVideo_NTSC_M = 0x1,KS_AnalogVideo_NTSC_M_J = 0x2,KS_AnalogVideo_NTSC_433 = 0x4,KS_AnalogVideo_PAL_B = 0x10,KS_AnalogVideo_PAL_D = 0x20,KS_AnalogVideo_PAL_G = 0x40,KS_AnalogVideo_PAL_H = 0x80,KS_AnalogVideo_PAL_I = 0x100,KS_AnalogVideo_PAL_M = 0x200,KS_AnalogVideo_PAL_N = 0x400,KS_AnalogVideo_PAL_60 = 0x800,KS_AnalogVideo_SECAM_B = 0x1000,KS_AnalogVideo_SECAM_D = 0x2000,KS_AnalogVideo_SECAM_G = 0x4000,KS_AnalogVideo_SECAM_H = 0x8000,KS_AnalogVideo_SECAM_K = 0x10000,KS_AnalogVideo_SECAM_K1 = 0x20000,KS_AnalogVideo_SECAM_L = 0x40000,KS_AnalogVideo_SECAM_L1 = 0x80000,KS_AnalogVideo_PAL_N_COMBO = 0x100000,};
enum _66124419281F30CC163023F3CD17B7FF {eGenLocPrimaryBox = 0x0,eGenLocInternal = 0x1,eGenLocSeparate = 0x2,eGenLocOther = 0x3,EPcxGenLocation_enum_count = 0x4,};
enum _66CFC4768C639F377503F8F40E82D750 {SFFVS_VERIFY_REQUIRED = 0x0,SFFVS_VERIFY_ACKNOWLEDGED = 0x1,};
enum _67063D379273ADCD5D91019DFED2E95F {KSEVENT_VIDEODECODER_CHANGED = 0x0,};
enum _676B88915C1B724692BC802D411C1179 {TIME_GET_STREAM_TIME = 0x0,TIME_READ_ONBOARD_CLOCK = 0x1,TIME_SET_ONBOARD_CLOCK = 0x2,};
enum _67CB246AF4B587686CE10AFAD452B210 {KSPROPERTY_SERVICE_BUILDCACHE = 0x0,KSPROPERTY_SERVICE_MERIT = 0x1,};
enum _685D0097497CB64E18A21F243FD25622 {KSPROPERTY_ITD3D_PARAMS = 0x0,};
enum _69ADA42DF3FC369FCB26E55906D6FF52 {PmiReportedCapabilities = 0x0,PmiMeteredHardware = 0x1,PmiCapabilitiesMax = 0x2,};
enum _6A4F9FD289D1A939E2A70058613B4F06 {KsAcquireOnly = 0x0,KsAcquireAndRemove = 0x1,KsAcquireOnlySingleItem = 0x2,KsAcquireAndRemoveOnlySingleItem = 0x3,};
enum _6A58EEAD8E4C7DF4F80FA7C6A74A3704 {KSPROPERTY_PIN_CINSTANCES = 0x0,KSPROPERTY_PIN_CTYPES = 0x1,KSPROPERTY_PIN_DATAFLOW = 0x2,KSPROPERTY_PIN_DATARANGES = 0x3,KSPROPERTY_PIN_DATAINTERSECTION = 0x4,KSPROPERTY_PIN_INTERFACES = 0x5,KSPROPERTY_PIN_MEDIUMS = 0x6,KSPROPERTY_PIN_COMMUNICATION = 0x7,KSPROPERTY_PIN_GLOBALCINSTANCES = 0x8,KSPROPERTY_PIN_NECESSARYINSTANCES = 0x9,KSPROPERTY_PIN_PHYSICALCONNECTION = 0xA,KSPROPERTY_PIN_CATEGORY = 0xB,KSPROPERTY_PIN_NAME = 0xC,KSPROPERTY_PIN_CONSTRAINEDDATARANGES = 0xD,KSPROPERTY_PIN_PROPOSEDATAFORMAT = 0xE,};
enum _6B2401DF69FC0CC161171E2CBCDDC1C6 {KSEVENT_LOOPEDSTREAMING_POSITION = 0x0,};
enum _6B870DC24D0C8AC4BA7D2C047999A6A3 {KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST_SIZE = 0x0,KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_LIST = 0x1,KSPROPERTY_BDA_ETHERNET_FILTER_MULTICAST_MODE = 0x2,};
enum _6BC93927B2FCDA47A41BC70D4867097B {ISCSI_NIC_LINKSTATE_DISCONNECTED = 0x0,ISCSI_NIC_LINKSTATE_CONNECTED = 0x1,};
enum _6C432552579635BAFB72E2DE7140253C {DockStateUnsupported = 0x0,DockStateUnDocked = 0x1,DockStateDocked = 0x2,DockStateUnknown = 0x3,};
enum _6D08AF020E88675B59174822EC55B914 {KSEVENT_CLOCK_INTERVAL_MARK = 0x0,KSEVENT_CLOCK_POSITION_MARK = 0x1,};
struct _6D7329FAD13C403F17A910B84CCFB7BF {unsigned char ld12[12];};
enum _6DAD80B3977302E5EA3CDCFB6538A59F {KSMETHOD_STREAMALLOCATOR_ALLOC = 0x0,KSMETHOD_STREAMALLOCATOR_FREE = 0x1,};
enum _6E893538BC02018E8F19122424D609DA {IGMP_MAX_RESP_CODE_TYPE_NORMAL = 0x0,IGMP_MAX_RESP_CODE_TYPE_FLOAT = 0x1,};
enum _6F5958920F6A8F401B50E2A1B2D54572 {KSPROPERTY_BDA_LNB_LOF_LOW_BAND = 0x0,KSPROPERTY_BDA_LNB_LOF_HIGH_BAND = 0x1,KSPROPERTY_BDA_LNB_SWITCH_FREQUENCY = 0x2,};
enum _6F6C2F72068A7A854C30F881415EDCB8 {KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST_SIZE = 0x0,KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_LIST = 0x1,KSPROPERTY_BDA_IPv6_FILTER_MULTICAST_MODE = 0x2,};
enum _6F9F41060DD80647953DB726CA7F25E7 {KS_SEEKING_NoPositioning = 0x0,KS_SEEKING_AbsolutePositioning = 0x1,KS_SEEKING_RelativePositioning = 0x2,KS_SEEKING_IncrementalPositioning = 0x3,KS_SEEKING_PositioningBitsMask = 0x3,KS_SEEKING_SeekToKeyFrame = 0x4,KS_SEEKING_ReturnTime = 0x8,};
enum _702932362B8608D728382EB01F6EA68B {KSPROPERTY_BDA_NULL_TRANSFORM_START = 0x0,KSPROPERTY_BDA_NULL_TRANSFORM_STOP = 0x1,};
enum _714E217E1FF07AEF9AC8D62CE7BB20D6 {KSPROPERTY_BDA_VOID_TRANSFORM_START = 0x0,KSPROPERTY_BDA_VOID_TRANSFORM_STOP = 0x1,};
struct _72295A7541EC936D47FC3642EE72298B {unsigned short W[5];};
enum _729DCE355D7523E6CA017E6077BAB356 {KSPROPERTY_TOPOLOGY_CATEGORIES = 0x0,KSPROPERTY_TOPOLOGY_NODES = 0x1,KSPROPERTY_TOPOLOGY_CONNECTIONS = 0x2,KSPROPERTY_TOPOLOGY_NAME = 0x3,};
enum _72AC7BAA1D78A7FE74CAD66443B09317 {ePortConnJack = 0x0,ePortConnIntegratedDevice = 0x1,ePortConnBothIntegratedAndJack = 0x2,ePortConnUnknown = 0x3,};
enum _73E65E14982D93DAA2179242AF0E53FC {KSMETHOD_BDA_GPNV_GETVALUE = 0x0,KSMETHOD_BDA_GPNV_SETVALUE = 0x1,KSMETHOD_BDA_GPNV_NAMEFROMINDEX = 0x2,KSMETHOD_BDA_GPNV_GETVALUEUPDATENAME = 0x3,};
enum _7527A514AFDC53113B26312D726B42E0 {KSJACK_SINK_CONNECTIONTYPE_HDMI = 0x0,KSJACK_SINK_CONNECTIONTYPE_DISPLAYPORT = 0x1,};
enum _75702A0302E577557AFE6696B3A25395 {KSEVENT_BDA_TUNER_SCAN = 0x0,};
enum _764BEEFADD59ED26AD22E3DCEAD8707C {SDBUS_SPEED_MODE_NORMAL = 0x0,SDBUS_SPEED_MODE_HIGH = 0x1,SDBUS_SPEED_MODE_SDR50 = 0x2,SDBUS_SPEED_MODE_SDR104 = 0x3,SDBUS_SPEED_MODE_DDR50 = 0x4,};
enum _76CFA367F19FC9C2CFDDA1F00B51634A {SAFE_MODE = 0x0,UNSAFE_MODE = 0x1,};
enum _7772B546DBDF650B52C572BF7BB5BA92 {KSPROPERTY_AUDDECOUT_MODES = 0x0,KSPROPERTY_AUDDECOUT_CUR_MODE = 0x1,};
enum _78C1F328871321AF9E01CD1E713BC3BD {KSPROPERTY_CAMERACONTROL_FLASH_PROPERTY_ID = 0x0,};
enum _7C36316A4B7BB52D1F56412D2D347D9B {ICMP4_UNREACH_NET = 0x0,ICMP4_UNREACH_HOST = 0x1,ICMP4_UNREACH_PROTOCOL = 0x2,ICMP4_UNREACH_PORT = 0x3,ICMP4_UNREACH_FRAG_NEEDED = 0x4,ICMP4_UNREACH_SOURCEROUTE_FAILED = 0x5,ICMP4_UNREACH_NET_UNKNOWN = 0x6,ICMP4_UNREACH_HOST_UNKNOWN = 0x7,ICMP4_UNREACH_ISOLATED = 0x8,ICMP4_UNREACH_NET_ADMIN = 0x9,ICMP4_UNREACH_HOST_ADMIN = 0xA,ICMP4_UNREACH_NET_TOS = 0xB,ICMP4_UNREACH_HOST_TOS = 0xC,ICMP4_UNREACH_ADMIN = 0xD,};
enum _7CE1B7F1EC16E342EFF5A9F3696EB2C0 {KsListEntryTail = 0x0,KsListEntryHead = 0x1,};
enum _7E5E2E9213D821482F3EC7CB6FD4B62E {SDBUS_ERASE_TYPE_ERASE = 0x0,SDBUS_ERASE_TYPE_TRIM = 0x1,SDBUS_ERASE_TYPE_DISCARD = 0x3,};
enum _7F5D1BD59C89064E268CCC053C4C2B9C {WinNullSid = 0x0,WinWorldSid = 0x1,WinLocalSid = 0x2,WinCreatorOwnerSid = 0x3,WinCreatorGroupSid = 0x4,WinCreatorOwnerServerSid = 0x5,WinCreatorGroupServerSid = 0x6,WinNtAuthoritySid = 0x7,WinDialupSid = 0x8,WinNetworkSid = 0x9,WinBatchSid = 0xA,WinInteractiveSid = 0xB,WinServiceSid = 0xC,WinAnonymousSid = 0xD,WinProxySid = 0xE,WinEnterpriseControllersSid = 0xF,WinSelfSid = 0x10,WinAuthenticatedUserSid = 0x11,WinRestrictedCodeSid = 0x12,WinTerminalServerSid = 0x13,WinRemoteLogonIdSid = 0x14,WinLogonIdsSid = 0x15,WinLocalSystemSid = 0x16,WinLocalServiceSid = 0x17,WinNetworkServiceSid = 0x18,WinBuiltinDomainSid = 0x19,WinBuiltinAdministratorsSid = 0x1A,WinBuiltinUsersSid = 0x1B,WinBuiltinGuestsSid = 0x1C,WinBuiltinPowerUsersSid = 0x1D,WinBuiltinAccountOperatorsSid = 0x1E,WinBuiltinSystemOperatorsSid = 0x1F,WinBuiltinPrintOperatorsSid = 0x20,WinBuiltinBackupOperatorsSid = 0x21,WinBuiltinReplicatorSid = 0x22,WinBuiltinPreWindows2000CompatibleAccessSid = 0x23,WinBuiltinRemoteDesktopUsersSid = 0x24,WinBuiltinNetworkConfigurationOperatorsSid = 0x25,WinAccountAdministratorSid = 0x26,WinAccountGuestSid = 0x27,WinAccountKrbtgtSid = 0x28,WinAccountDomainAdminsSid = 0x29,WinAccountDomainUsersSid = 0x2A,WinAccountDomainGuestsSid = 0x2B,WinAccountComputersSid = 0x2C,WinAccountControllersSid = 0x2D,WinAccountCertAdminsSid = 0x2E,WinAccountSchemaAdminsSid = 0x2F,WinAccountEnterpriseAdminsSid = 0x30,WinAccountPolicyAdminsSid = 0x31,WinAccountRasAndIasServersSid = 0x32,WinNTLMAuthenticationSid = 0x33,WinDigestAuthenticationSid = 0x34,WinSChannelAuthenticationSid = 0x35,WinThisOrganizationSid = 0x36,WinOtherOrganizationSid = 0x37,WinBuiltinIncomingForestTrustBuildersSid = 0x38,WinBuiltinPerfMonitoringUsersSid = 0x39,WinBuiltinPerfLoggingUsersSid = 0x3A,WinBuiltinAuthorizationAccessSid = 0x3B,WinBuiltinTerminalServerLicenseServersSid = 0x3C,WinBuiltinDCOMUsersSid = 0x3D,WinBuiltinIUsersSid = 0x3E,WinIUserSid = 0x3F,WinBuiltinCryptoOperatorsSid = 0x40,WinUntrustedLabelSid = 0x41,WinLowLabelSid = 0x42,WinMediumLabelSid = 0x43,WinHighLabelSid = 0x44,WinSystemLabelSid = 0x45,WinWriteRestrictedCodeSid = 0x46,WinCreatorOwnerRightsSid = 0x47,WinCacheablePrincipalsGroupSid = 0x48,WinNonCacheablePrincipalsGroupSid = 0x49,WinEnterpriseReadonlyControllersSid = 0x4A,WinAccountReadonlyControllersSid = 0x4B,WinBuiltinEventLogReadersGroup = 0x4C,WinNewEnterpriseReadonlyControllersSid = 0x4D,WinBuiltinCertSvcDComAccessGroup = 0x4E,WinMediumPlusLabelSid = 0x4F,WinLocalLogonSid = 0x50,WinConsoleLogonSid = 0x51,WinThisOrganizationCertificateSid = 0x52,WinApplicationPackageAuthoritySid = 0x53,WinBuiltinAnyPackageSid = 0x54,WinCapabilityInternetClientSid = 0x55,WinCapabilityInternetClientServerSid = 0x56,WinCapabilityPrivateNetworkClientServerSid = 0x57,WinCapabilityPicturesLibrarySid = 0x58,WinCapabilityVideosLibrarySid = 0x59,WinCapabilityMusicLibrarySid = 0x5A,WinCapabilityDocumentsLibrarySid = 0x5B,WinCapabilitySharedUserCertificatesSid = 0x5C,WinCapabilityEnterpriseAuthenticationSid = 0x5D,WinCapabilityRemovableStorageSid = 0x5E,WinBuiltinRDSRemoteAccessServersSid = 0x5F,WinBuiltinRDSEndpointServersSid = 0x60,WinBuiltinRDSManagementServersSid = 0x61,WinUserModeDriversSid = 0x62,WinBuiltinHyperVAdminsSid = 0x63,WinAccountCloneableControllersSid = 0x64,WinBuiltinAccessControlAssistanceOperatorsSid = 0x65,WinBuiltinRemoteManagementUsersSid = 0x66,WinAuthenticationAuthorityAssertedSid = 0x67,WinAuthenticationServiceAssertedSid = 0x68,};
enum _7FC356CE6E1C304E0791EFC61BF0E919 {RX_CONTEXT_FLAG_FROM_POOL = 0x1,RX_CONTEXT_FLAG_WAIT = 0x2,RX_CONTEXT_FLAG_WRITE_THROUGH = 0x4,RX_CONTEXT_FLAG_FLOPPY = 0x8,RX_CONTEXT_FLAG_RECURSIVE_CALL = 0x10,RX_CONTEXT_FLAG_THIS_DEVICE_TOP_LEVEL = 0x20,RX_CONTEXT_FLAG_DEFERRED_WRITE = 0x40,RX_CONTEXT_FLAG_VERIFY_READ = 0x80,RX_CONTEXT_FLAG_STACK_IO_CONTEZT = 0x100,RX_CONTEXT_FLAG_IN_FSP = 0x200,RX_CONTEXT_FLAG_CREATE_MAILSLOT = 0x400,RX_CONTEXT_FLAG_MAILSLOT_REPARSE = 0x800,RX_CONTEXT_FLAG_ASYNC_OPERATION = 0x1000,RX_CONTEXT_FLAG_NO_COMPLETE_FROM_FSP = 0x2000,RX_CONTEXT_FLAG_POST_ON_STABLE_CONDITION = 0x4000,RX_CONTEXT_FLAG_FSP_DELAYED_OVERFLOW_QUEUE = 0x8000,RX_CONTEXT_FLAG_FSP_CRITICAL_OVERFLOW_QUEUE = 0x10000,RX_CONTEXT_FLAG_MINIRDR_INVOKED = 0x20000,RX_CONTEXT_FLAG_WAITING_FOR_RESOURCE = 0x40000,RX_CONTEXT_FLAG_CANCELLED = 0x80000,RX_CONTEXT_FLAG_SYNC_EVENT_WAITERS = 0x100000,RX_CONTEXT_FLAG_NO_PREPOSTING_NEEDED = 0x200000,RX_CONTEXT_FLAG_BYPASS_VALIDOP_CHECK = 0x400000,RX_CONTEXT_FLAG_BLOCKED_PIPE_RESUME = 0x800000,RX_CONTEXT_FLAG_IN_SERIALIZATION_QUEUE = 0x1000000,RX_CONTEXT_FLAG_NO_EXCEPTION_BREAKPOINT = 0x2000000,RX_CONTEXT_FLAG_NEEDRECONNECT = 0x4000000,RX_CONTEXT_FLAG_MUST_SUCCEED = 0x8000000,RX_CONTEXT_FLAG_MUST_SUCCEED_NONBLOCKING = 0x10000000,RX_CONTEXT_FLAG_MUST_SUCCEED_ALLOCATED = 0x20000000,RX_CONTEXT_FLAG_MINIRDR_INITIATED = 0x80000000,};
enum _80B40C51F983DF6470D1FE94B60AC2DA {MCAST_INCLUDE = 0x0,MCAST_EXCLUDE = 0x1,};
enum _80F0FAF9552DB3E28E865A8EDEC675E2 {BusWidth32Bits = 0x0,BusWidth64Bits = 0x1,};
enum _8142B63D1170E3CCF91671CCCC3193B7 {CMP_PlugLocal = 0x0,CMP_PlugRemote = 0x1,};
enum _81C96E3F196AC83D02B4522B31857D28 {IpPrefixOriginOther = 0x0,IpPrefixOriginManual = 0x1,IpPrefixOriginWellKnown = 0x2,IpPrefixOriginDhcp = 0x3,IpPrefixOriginRouterAdvertisement = 0x4,IpPrefixOriginUnchanged = 0x10,};
enum _835A3F9810D32B04FEBEAA2BCD104598 {WskSetOption = 0x0,WskGetOption = 0x1,WskIoctl = 0x2,WskControlMax = 0x3,};
enum _852A570504FBC560DED5BD6F9A7B3939 {DmaComplete = 0x0,DmaAborted = 0x1,DmaError = 0x2,DmaCancelled = 0x3,};
enum _85B8D048AA221EC9AB61032617833AB7 {FLOAT_COEFF = 0x0,SHORT_COEFF = 0x1,KSDS3D_COEFF_COUNT = 0x2,};
enum _861DD39FC4CEDEF9FD3B0ECFEB4EA61F {KSEVENT_STREAMALLOCATOR_INTERNAL_FREEFRAME = 0x0,KSEVENT_STREAMALLOCATOR_FREEFRAME = 0x1,};
enum _86DF3DCCF80712F6908D10FD67A625E2 {DeviceUnknown = 0x0,DeviceIsAta = 0x1,DeviceIsAtapi = 0x2,DeviceNotExist = 0x3,};
enum _8787F4302E3326DCF7673C839D45289E {ChannelChangeSpanningEvent_Start = 0x0,ChannelChangeSpanningEvent_End = 0x2,};
enum _87F25CE704E45E1C4AD5F80E170A75FF {KS_VIDEODECODER_FLAGS_CAN_DISABLE_OUTPUT = 0x1,KS_VIDEODECODER_FLAGS_CAN_USE_VCR_LOCKING = 0x2,KS_VIDEODECODER_FLAGS_CAN_INDICATE_LOCKED = 0x4,};
enum _8983102664F2E585A5C75546CC98BFE0 {KSMETHOD_BDA_CAS_CHECKENTITLEMENTTOKEN = 0x0,KSMETHOD_BDA_CAS_SETCAPTURETOKEN = 0x1,KSMETHOD_BDA_CAS_OPENBROADCASTMMI = 0x2,KSMETHOD_BDA_CAS_CLOSEMMIDIALOG = 0x3,};
enum _8B285748F7460E41F2A965D9020E3933 {IP_OPT_EOL = 0x0,IP_OPT_NOP = 0x1,IP_OPT_SECURITY = 0x82,IP_OPT_LSRR = 0x83,IP_OPT_TS = 0x44,IP_OPT_RR = 0x7,IP_OPT_SSRR = 0x89,IP_OPT_SID = 0x88,IP_OPT_ROUTER_ALERT = 0x94,IP_OPT_MULTIDEST = 0x95,};
enum _8BA33F62695D5AFFC5CD1A5F9D35B8BA {KSEVENT_DEVICE_LOST = 0x0,KSEVENT_DEVICE_PREEMPTED = 0x1,};
enum _8C42F93EAAD4EBF2FF4C30FDE456EABE {CMP_PlugOut = 0x0,CMP_PlugIn = 0x1,};
enum _8CEE03652AB23D42ED82ECA2E372F7E6 {KSMETHOD_BDA_MUX_GETPIDLIST = 0x0,KSMETHOD_BDA_MUX_SETPIDLIST = 0x1,};
enum _8D43FB820B033ED13008555ED0EFBEEB {InterruptSyncModeNormal = 0x1,InterruptSyncModeAll = 0x2,InterruptSyncModeRepeat = 0x3,};
enum _8DE99528E372621AB370A19368014C30 {KSMETHOD_BDA_START_CHANGES = 0x0,KSMETHOD_BDA_CHECK_CHANGES = 0x1,KSMETHOD_BDA_COMMIT_CHANGES = 0x2,KSMETHOD_BDA_GET_CHANGE_STATE = 0x3,};
struct _8E0937B200DCBA03D39E01164C2A4D0D {unsigned int W[4];};
enum _8E304CD910907B07F66BA6A3540081CA {KS_PhysConn_Video_Tuner = 0x1,KS_PhysConn_Video_Composite = 0x2,KS_PhysConn_Video_SVideo = 0x3,KS_PhysConn_Video_RGB = 0x4,KS_PhysConn_Video_YRYBY = 0x5,KS_PhysConn_Video_SerialDigital = 0x6,KS_PhysConn_Video_ParallelDigital = 0x7,KS_PhysConn_Video_SCSI = 0x8,KS_PhysConn_Video_AUX = 0x9,KS_PhysConn_Video_1394 = 0xA,KS_PhysConn_Video_USB = 0xB,KS_PhysConn_Video_VideoDecoder = 0xC,KS_PhysConn_Video_VideoEncoder = 0xD,KS_PhysConn_Video_SCART = 0xE,KS_PhysConn_Audio_Tuner = 0x1000,KS_PhysConn_Audio_Line = 0x1001,KS_PhysConn_Audio_Mic = 0x1002,KS_PhysConn_Audio_AESDigital = 0x1003,KS_PhysConn_Audio_SPDIFDigital = 0x1004,KS_PhysConn_Audio_SCSI = 0x1005,KS_PhysConn_Audio_AUX = 0x1006,KS_PhysConn_Audio_1394 = 0x1007,KS_PhysConn_Audio_USB = 0x1008,KS_PhysConn_Audio_AudioDecoder = 0x1009,};
enum _8EE7F9EA7D1453B89425165DC84C8DAD {KSEVENT_CONTROL_CHANGE = 0x0,};
enum _90C5F04E0DCFA05FF87E9259EA488940 {PowerStateSleeping1 = 0x0,PowerStateSleeping2 = 0x1,PowerStateSleeping3 = 0x2,PowerStateSleeping4 = 0x3,PowerStateShutdownOff = 0x4,PowerStateShutdownReset = 0x5,PowerStateSleeping4Firmware = 0x6,PowerStateMaximum = 0x7,};
enum _90DB2C5D4601A6EE82DF6DF2E8E9E70F {StorStartDevice = 0x0,StorRemoveDevice = 0x2,StorStopDevice = 0x4,StorQueryCapabilities = 0x9,StorQueryResourceRequirements = 0xB,StorFilterResourceRequirements = 0xD,StorSurpriseRemoval = 0x17,};
enum _913F477DC939D6BCE5130F5803AE22C4 {KSMETHOD_BDA_DEBUG_LEVEL = 0x0,KSMETHOD_BDA_DEBUG_DATA = 0x1,};
enum _9239C4646B2840F9E3B30EC525310BA9 {KsObjectTypeDevice = 0x0,KsObjectTypeFilterFactory = 0x1,KsObjectTypeFilter = 0x2,KsObjectTypePin = 0x3,};
enum _931B4160E02726FBC71D690B6D34D309 {KSPROPERTY_CLOCK_TIME = 0x0,KSPROPERTY_CLOCK_PHYSICALTIME = 0x1,KSPROPERTY_CLOCK_CORRELATEDTIME = 0x2,KSPROPERTY_CLOCK_CORRELATEDPHYSICALTIME = 0x3,KSPROPERTY_CLOCK_RESOLUTION = 0x4,KSPROPERTY_CLOCK_STATE = 0x5,KSPROPERTY_CLOCK_FUNCTIONTABLE = 0x6,};
enum _936EE475885E5E1972395CF18A9E441C {DIRECT_FORM = 0x0,CASCADE_FORM = 0x1,KSDS3D_FILTER_METHOD_COUNT = 0x2,};
enum _96E1D162D1577D34227CC3C8C2455781 {Av61883_GetUnitInfo = 0x0,Av61883_SetUnitInfo = 0x1,Av61883_SetPlug = 0x2,Av61883_GetPlugHandle = 0x3,Av61883_GetPlugState = 0x4,Av61883_Connect = 0x5,Av61883_Disconnect = 0x6,Av61883_AttachFrame = 0x7,Av61883_CancelFrame = 0x8,Av61883_Talk = 0x9,Av61883_Listen = 0xA,Av61883_Stop = 0xB,Av61883_SendFcpRequest = 0xC,Av61883_GetFcpResponse = 0xD,Av61883_GetFcpRequest = 0xE,Av61883_SendFcpResponse = 0xF,Av61883_SetFcpNotify = 0x10,Av61883_CreatePlug = 0x11,Av61883_DeletePlug = 0x12,Av61883_BusResetNotify = 0x13,Av61883_BusReset = 0x14,Av61883_SetUnitDirectory = 0x15,Av61883_MonitorPlugs = 0x16,Av61883_MAX = 0x17,};
enum _984DD30B3DA0FC7F55BB22873AC26968 {KSPROPERTY_VIDEOCONTROL_CAPS = 0x0,KSPROPERTY_VIDEOCONTROL_ACTUAL_FRAME_RATE = 0x1,KSPROPERTY_VIDEOCONTROL_FRAME_RATES = 0x2,KSPROPERTY_VIDEOCONTROL_MODE = 0x3,};
enum _99797C396B1D447BBE63E5346EF4FE3A {KSPIN_COMMUNICATION_NONE = 0x0,KSPIN_COMMUNICATION_SINK = 0x1,KSPIN_COMMUNICATION_SOURCE = 0x2,KSPIN_COMMUNICATION_BOTH = 0x3,KSPIN_COMMUNICATION_BRIDGE = 0x4,};
enum _9C98972B03F60624FF7DDC28C537A0E5 {NLBSessionStateChange = 0x0,NLBSYNAttackBegins = 0x1,NLBSYNAttackEnds = 0x2,NLBTimerStarvationBegins = 0x3,NLBTimerStarvationEnds = 0x4,};
enum _9D4A7C1CB213FEDF002D00B6A9073617 {Monitor = 0x1,NonPrimaryChip = 0x2,VideoChip = 0x3,Other = 0x4,};
enum _9E04942AE70A085A678F430E656AB31C {SratProcessorLocalAPIC = 0x0,SratMemory = 0x1,SratProcessorLocalX2APIC = 0x2,};
enum _9E0565FF8CB6288B094DEDB695088DFB {KSPROPERTY_DROPPEDFRAMES_CURRENT = 0x0,};
enum _9EF483498AA047CA29C8FBCACF32A50A {SupportUnknown = 0x0,Supported = 0x1,NotSupported = 0x2,};
enum _A1E89C657E90049EA789DE2B75FA4D0B {KS_TUNER_STRATEGY_PLL = 0x1,KS_TUNER_STRATEGY_SIGNAL_STRENGTH = 0x2,KS_TUNER_STRATEGY_DRIVER_TUNES = 0x4,};
enum _A5B4E8FAC21A27E9D836EC72E0E2550F {KSPROPERTY_DIRECTSOUND3DBUFFER_ALL = 0x0,KSPROPERTY_DIRECTSOUND3DBUFFER_POSITION = 0x1,KSPROPERTY_DIRECTSOUND3DBUFFER_VELOCITY = 0x2,KSPROPERTY_DIRECTSOUND3DBUFFER_CONEANGLES = 0x3,KSPROPERTY_DIRECTSOUND3DBUFFER_CONEORIENTATION = 0x4,KSPROPERTY_DIRECTSOUND3DBUFFER_CONEOUTSIDEVOLUME = 0x5,KSPROPERTY_DIRECTSOUND3DBUFFER_MINDISTANCE = 0x6,KSPROPERTY_DIRECTSOUND3DBUFFER_MAXDISTANCE = 0x7,KSPROPERTY_DIRECTSOUND3DBUFFER_MODE = 0x8,};
enum _A5F41F4A4CEB7AD1CC9DEF125B1934E9 {NlatUnspecified = 0x0,NlatUnicast = 0x1,NlatAnycast = 0x2,NlatMulticast = 0x3,NlatBroadcast = 0x4,NlatInvalid = 0x5,};
enum _A6BC26748E56DACD668315459CCF5D3F {KSPROPERTY_DRMAUDIOSTREAM_CONTENTID = 0x0,};
enum _A7ED9ADA4119276C5D56169B582520A6 {IPNotifyNotification = 0x0,IPNotifySynchronization = 0x1,IPNotifyMaximumVersion = 0x2,};
enum _A82677F2D780EECC07262E494F367D1E {KS_DVDCOPYSTATE_INITIALIZE = 0x0,KS_DVDCOPYSTATE_INITIALIZE_TITLE = 0x1,KS_DVDCOPYSTATE_AUTHENTICATION_NOT_REQUIRED = 0x2,KS_DVDCOPYSTATE_AUTHENTICATION_REQUIRED = 0x3,KS_DVDCOPYSTATE_DONE = 0x4,};
enum _A8757D06DED2CCF986301BEFE12C52F6 {NoAspmSupport = 0x0,L0sEntrySupport = 0x1,L1EntrySupport = 0x2,L0sAndL1EntrySupport = 0x3,};
enum _A929C63020887A483B35F70A5EFC96A1 {ICMP4_TIME_EXCEED_TRANSIT = 0x0,ICMP4_TIME_EXCEED_REASSEMBLY = 0x1,};
enum _A98B79572840FDA381AA9CDCE69D1BC8 {EqualPriority = 0x0,KeepPrefetchedData = 0x1,KeepReadData = 0x2,};
enum _AB84C8955069406F80CB719201B159DD {KS_MACROVISION_DISABLED = 0x0,KS_MACROVISION_LEVEL1 = 0x1,KS_MACROVISION_LEVEL2 = 0x2,KS_MACROVISION_LEVEL3 = 0x3,};
enum _ABCFC2A4415A1B92F689754BC7BBAC71 {KSPROPERTY_TUNER_CAPS = 0x0,KSPROPERTY_TUNER_MODE_CAPS = 0x1,KSPROPERTY_TUNER_MODE = 0x2,KSPROPERTY_TUNER_STANDARD = 0x3,KSPROPERTY_TUNER_FREQUENCY = 0x4,KSPROPERTY_TUNER_INPUT = 0x5,KSPROPERTY_TUNER_STATUS = 0x6,KSPROPERTY_TUNER_IF_MEDIUM = 0x7,KSPROPERTY_TUNER_SCAN_CAPS = 0x8,KSPROPERTY_TUNER_SCAN_STATUS = 0x9,KSPROPERTY_TUNER_STANDARD_MODE = 0xA,KSPROPERTY_TUNER_NETWORKTYPE_SCAN_CAPS = 0xB,};
enum _ACDD7173F686B0B8EEB5D0397954DC28 {ConstantBitRate = 0x0,VariableBitRateAverage = 0x1,VariableBitRatePeak = 0x2,};
enum _AD2684E740CA89CFFCE63237D53FEB0F {KSEVENT_VPNOTIFY_FORMATCHANGE = 0x0,};
struct _AD8E08CFADC045292413D8E747DD5ED4 {unsigned char ld[10];};
enum _ADC633718E981BBAA2F59FA41E3EE0B2 {KSINTERFACE_STANDARD_STREAMING = 0x0,KSINTERFACE_STANDARD_LOOPED_STREAMING = 0x1,KSINTERFACE_STANDARD_CONTROL = 0x2,};
enum _AE38AF776BB1805CEA32DBCE744D31F5 {IdePowerUnSpecified = 0x0,IdePowerD0 = 0x1,IdePowerD3 = 0x2,};
enum _AE62E0A625C886191E9AB96384D4F84B {L0s_Below64ns = 0x0,L0s_64ns_128ns = 0x1,L0s_128ns_256ns = 0x2,L0s_256ns_512ns = 0x3,L0s_512ns_1us = 0x4,L0s_1us_2us = 0x5,L0s_2us_4us = 0x6,L0s_Above4us = 0x7,};
enum _AF13F99353F05C737A579C4443E690B4 {ISCSI_ADAPTER_TARGETS_CHANGED = 0x3,};
enum _AFD2BA95F9F20215AEC85634F099FBF4 {HW_MODE_COMPATIBILITY = 0x0,HW_MODE_PS2 = 0x1,HW_MODE_FAST_CENTRONICS = 0x2,HW_MODE_ECP = 0x3,HW_MODE_EPP = 0x4,HW_MODE_RESERVED = 0x5,HW_MODE_TEST = 0x6,HW_MODE_CONFIGURATION = 0x7,};
enum _B0755FE71A01275B70F52874EF7AD4F8 {DlUnicast = 0x0,DlMulticast = 0x1,DlBroadcast = 0x2,};
enum _B0DCED09D1949213E723E7E65C2CEA39 {L0sAndL1EntryDisabled = 0x0,L0sEntryEnabled = 0x1,L1EntryEnabled = 0x2,L0sAndL1EntryEnabled = 0x3,};
enum _B14F48021D83543DB76D37697F0DBC63 {KSEVENT_PINCAPS_FORMATCHANGE = 0x0,KSEVENT_PINCAPS_JACKINFOCHANGE = 0x1,};
enum _B2EB8B93357D17BDFB6172EECC16498C {VideoPortUnlockAfterDma = 0x1,VideoPortKeepPagesLocked = 0x2,VideoPortDmaInitOnly = 0x3,};
enum _B2FEA4471B4E47BF670D2BF086DC1A6A {SFFDISK_DC_GET_VERSION = 0x0,SFFDISK_DC_LOCK_CHANNEL = 0x1,SFFDISK_DC_UNLOCK_CHANNEL = 0x2,SFFDISK_DC_DEVICE_COMMAND = 0x3,};
enum _B3236B54C110CBB1085E590D1151299D {KsInvokeOnSuccess = 0x1,KsInvokeOnError = 0x2,KsInvokeOnCancel = 0x4,};
enum _B3A25F3087310B7563986D73C0AD94C1 {KSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY_PROPERTY_ID = 0x0,};
enum _B3A84405D78147E904BCCE08E14749CA {KSPROPERTY_TOPOLOGYNODE_ENABLE = 0x1,KSPROPERTY_TOPOLOGYNODE_RESET = 0x2,};
enum _B4146B4455210223113A90850032B577 {ALLOCATIONGROUPINDEX_NOVIRTUALMEMORY = 0xFFFFFFFF,};
enum _B4C4FC6252558A234733AE07E885CE6F {KSPROPERTY_WAVE_COMPATIBLE_CAPABILITIES = 0x0,KSPROPERTY_WAVE_INPUT_CAPABILITIES = 0x1,KSPROPERTY_WAVE_OUTPUT_CAPABILITIES = 0x2,KSPROPERTY_WAVE_BUFFER = 0x3,KSPROPERTY_WAVE_FREQUENCY = 0x4,KSPROPERTY_WAVE_VOLUME = 0x5,KSPROPERTY_WAVE_PAN = 0x6,};
enum _B4EFCEC8C68CF8B596CEF68A8AD15C1A {KSSTATE_STOP = 0x0,KSSTATE_ACQUIRE = 0x1,KSSTATE_PAUSE = 0x2,KSSTATE_RUN = 0x3,};
enum _B59563CDA7089DFA1A43D1362D866F9E {NetworkOpenLocationAny = 0x0,NetworkOpenLocationRemote = 0x1,NetworkOpenLocationLoopback = 0x2,};
enum _B5A4B5A656201D85B4765723CAC74A95 {DeviceWakeSourceType = 0x0,FixedWakeSourceType = 0x1,TimerWakeSourceType = 0x2,};
enum _B7C7B2ED7EE1EDA005EE955C1E33527F {eMixFormat = 0x0,eDeviceFormat = 0x1,eSupportedDeviceFormats = 0x2,};
enum _B7D2D905F5EEADB8A12D41415E190E1C {KsStackCopyToNewLocation = 0x0,KsStackReuseCurrentLocation = 0x1,KsStackUseNewLocation = 0x2,};
enum _B8842F298E38803458C077776FB4B251 {KS_AMVP_MODE_WEAVE = 0x0,KS_AMVP_MODE_BOBINTERLEAVED = 0x1,KS_AMVP_MODE_BOBNONINTERLEAVED = 0x2,KS_AMVP_MODE_SKIPEVEN = 0x3,KS_AMVP_MODE_SKIPODD = 0x4,};
enum _B8E6EA46FEA3CBC2C608E1704F1A49C9 {KSPROPERTY_MEMORY_TRANSPORT = 0x1,};
struct _BA519187DB4FB038EDB1959BB4D2DF27 {double x;};
enum _BBF977403BF9669DC8E813E1F1F17969 {IndicatorOn = 0x1,IndicatorBlink = 0x2,IndicatorOff = 0x3,};
enum _BC3BBEDF262FFCCA226CBBAFD36E3C62 {SDBUS_TRANSFER_METHOD_UNSPECIFIED = 0x0,SDBUS_TRANSFER_METHOD_PIO = 0x1,SDBUS_TRANSFER_METHOD_DB_DMA = 0x2,SDBUS_TRANSFER_METHOD_ADMA2 = 0x3,SDBUS_TRANSFER_METHOD_SYSTEM_DMA = 0x4,};
enum _BEAB8038D4ED47FA577F0642A94E1F77 {ENTROPY_SOURCE_TYPE_HIGH_PUSH = 0x1,ENTROPY_SOURCE_TYPE_LOW_PUSH = 0x2,ENTROPY_SOURCE_TYPE_HIGH_PULL = 0x3,};
enum _BEB7D72EDB8960BEC5A4EFCCDB0EAE04 {KS_CAMERACONTROL_ASYNC_START = 0x1,KS_CAMERACONTROL_ASYNC_STOP = 0x2,KS_CAMERACONTROL_ASYNC_RESET = 0x3,};
enum _BECB94647B58B04CC4161D86B675F294 {KSPROPERTY_BDA_MODULATION_TYPE = 0x0,KSPROPERTY_BDA_INNER_FEC_TYPE = 0x1,KSPROPERTY_BDA_INNER_FEC_RATE = 0x2,KSPROPERTY_BDA_OUTER_FEC_TYPE = 0x3,KSPROPERTY_BDA_OUTER_FEC_RATE = 0x4,KSPROPERTY_BDA_SYMBOL_RATE = 0x5,KSPROPERTY_BDA_SPECTRAL_INVERSION = 0x6,KSPROPERTY_BDA_GUARD_INTERVAL = 0x7,KSPROPERTY_BDA_TRANSMISSION_MODE = 0x8,KSPROPERTY_BDA_ROLL_OFF = 0x9,KSPROPERTY_BDA_PILOT = 0xA,KSPROPERTY_BDA_SIGNALTIMEOUTS = 0xB,KSPROPERTY_BDA_PLP_NUMBER = 0xC,};
enum _BFA670D78B5850C2D3991209E6B67309 {IP_OPTION_TIMESTAMP_ONLY = 0x0,IP_OPTION_TIMESTAMP_ADDRESS = 0x1,IP_OPTION_TIMESTAMP_SPECIFIC_ADDRESS = 0x3,};
enum _C310F8ABE5805F505DC81B500CFCD039 {MaxPayload128Bytes = 0x0,MaxPayload256Bytes = 0x1,MaxPayload512Bytes = 0x2,MaxPayload1024Bytes = 0x3,MaxPayload2048Bytes = 0x4,MaxPayload4096Bytes = 0x5,};
enum _C3305B6EE9A249E58E7AD6D1E51C81B9 {USBCAMD_CamControlFlag_NoVideoRawProcessing = 0x1,USBCAMD_CamControlFlag_NoStillRawProcessing = 0x2,USBCAMD_CamControlFlag_AssociatedFormat = 0x4,USBCAMD_CamControlFlag_EnableDeviceEvents = 0x8,};
enum _C42D9FB212A9AC1E10AA532315005A0D {SFFMS_NO_MEDIA = 0x0,SFFMS_MEDIA_PRESENT = 0x1,};
enum _C43D2A6EFFDC6958F872464784E778EF {KSEVENT_TVAUDIO_CHANGED = 0x0,};
enum _C49E60E1EED22F985503E6BE3D604AD6 {ScsiWmiEventControl = 0x0,ScsiWmiDataBlockControl = 0x1,};
enum _C4D6B4788DF8F3B1BAEDB99C4EDC1075 {ARP_HW_ENET = 0x1,ARP_HW_802 = 0x6,};
enum _C5C3968CA997F1F22C1FAF41804E06C0 {L1_Below1us = 0x0,L1_1us_2us = 0x1,L1_2us_4us = 0x2,L1_4us_8us = 0x3,L1_8us_16us = 0x4,L1_16us_32us = 0x5,L1_32us_64us = 0x6,L1_Above64us = 0x7,};
enum _C650760535C8F8DBC377C44CC6C73C0B {PoDisabledStateSleeping1 = 0x0,PoDisabledStateSleeping2 = 0x1,PoDisabledStateSleeping3 = 0x2,PoDisabledStateSleeping4 = 0x3,PoDisabledStateSleeping0Idle = 0x4,PoDisabledStateReserved5 = 0x5,PoDisabledStateSleeping4Firmware = 0x6,PoDisabledStateMaximum = 0x7,};
enum _C6C2F99D2D8586669EAAB98FA7901354 {ChannelStateDisabled = 0x0,ChannelStateEnabled = 0x1,ChannelStateUnKnown = 0x2,};
enum _C6D353107DE03E6ED1C3CE95F019C718 {PciExpressEndpoint = 0x0,PciExpressLegacyEndpoint = 0x1,PciExpressRootPort = 0x4,PciExpressUpstreamSwitchPort = 0x5,PciExpressDownstreamSwitchPort = 0x6,PciExpressToPciXBridge = 0x7,PciXToExpressBridge = 0x8,PciExpressRootComplexIntegratedEndpoint = 0x9,PciExpressRootComplexEventCollector = 0xA,};
enum _C8C95D1253099DC07F9D615EA2A8002A {KSEVENTS_NONE = 0x0,KSEVENTS_SPINLOCK = 0x1,KSEVENTS_MUTEX = 0x2,KSEVENTS_FMUTEX = 0x3,KSEVENTS_FMUTEXUNSAFE = 0x4,KSEVENTS_INTERRUPT = 0x5,KSEVENTS_ERESOURCE = 0x6,};
enum _C9C41CE7F7AB140BE1C872069B92FC11 {LT_DONT_CARE = 0x0,LT_LOWEST_LATENCY = 0x1,};
enum _CAE561814972B63FC408CA74931D2863 {KSEVENT_CROSSBAR_CHANGED = 0x0,};
enum _CB3435FABEA0A3C4DEC3DC8A5EBD37B4 {KSEVENT_CONNECTION_POSITIONUPDATE = 0x0,KSEVENT_CONNECTION_DATADISCONTINUITY = 0x1,KSEVENT_CONNECTION_TIMEDISCONTINUITY = 0x2,KSEVENT_CONNECTION_PRIORITY = 0x3,KSEVENT_CONNECTION_ENDOFSTREAM = 0x4,};
enum _CBE1DD2CAA455ED961B673E1E179B87C {SlotEmpty = 0x0,CardPresent = 0x1,};
enum _CC5E868E92D22FA173F3C556F0FC8F5F {IE_AALParameters = 0x0,IE_TrafficDescriptor = 0x1,IE_BroadbandBearerCapability = 0x2,IE_BHLI = 0x3,IE_BLLI = 0x4,IE_CalledPartyNumber = 0x5,IE_CalledPartySubaddress = 0x6,IE_CallingPartyNumber = 0x7,IE_CallingPartySubaddress = 0x8,IE_Cause = 0x9,IE_QOSClass = 0xA,IE_TransitNetworkSelection = 0xB,IE_BroadbandSendingComplete = 0xC,IE_LIJCallId = 0xD,IE_Raw = 0xE,};
enum _CD1AEEBAB641DEC86F01C12702A854EA {DeviceTextDescription = 0x0,DeviceTextLocationInformation = 0x1,};
enum _CD46E8A9ECB90C60412C1D2343F6C90B {SFFDISK_DP_IS_SUPPORTED = 0x0,SFFDISK_DP_SET_PASSWORD = 0x1,SFFDISK_DP_LOCK_DEVICE = 0x2,SFFDISK_DP_UNLOCK_DEVICE = 0x3,SFFDISK_DP_RESET_DEVICE_ALL_DATA = 0x4,};
enum _CD7784D22BC3CCBE883A680641608D54 {VpNonCached = 0x0,VpWriteCombined = 0x1,VpCached = 0x2,};
enum _CE9CE3A0AB54AFEEDAB00D1A3DF6009E {KSPROPERTY_EXTXPORT_CAPABILITIES = 0x0,KSPROPERTY_EXTXPORT_INPUT_SIGNAL_MODE = 0x1,KSPROPERTY_EXTXPORT_OUTPUT_SIGNAL_MODE = 0x2,KSPROPERTY_EXTXPORT_LOAD_MEDIUM = 0x3,KSPROPERTY_EXTXPORT_MEDIUM_INFO = 0x4,KSPROPERTY_EXTXPORT_STATE = 0x5,KSPROPERTY_EXTXPORT_STATE_NOTIFY = 0x6,KSPROPERTY_EXTXPORT_TIMECODE_SEARCH = 0x7,KSPROPERTY_EXTXPORT_ATN_SEARCH = 0x8,KSPROPERTY_EXTXPORT_RTC_SEARCH = 0x9,KSPROPERTY_RAW_AVC_CMD = 0xA,};
enum _CFCB2E1C2645813857E415DB4A5CF091 {KSPROPERTY_VBICODECFILTERING_SCANLINES_REQUESTED_BIT_ARRAY = 0x1,KSPROPERTY_VBICODECFILTERING_SCANLINES_DISCOVERED_BIT_ARRAY = 0x2,KSPROPERTY_VBICODECFILTERING_SUBSTREAMS_REQUESTED_BIT_ARRAY = 0x3,KSPROPERTY_VBICODECFILTERING_SUBSTREAMS_DISCOVERED_BIT_ARRAY = 0x4,KSPROPERTY_VBICODECFILTERING_STATISTICS = 0x5,};
enum _CFDA6B458BFD5441F09F532A42BB2B66 {KSPROPERTY_DVDCOPY_CHLG_KEY = 0x1,KSPROPERTY_DVDCOPY_DVD_KEY1 = 0x2,KSPROPERTY_DVDCOPY_DEC_KEY2 = 0x3,KSPROPERTY_DVDCOPY_TITLE_KEY = 0x4,KSPROPERTY_COPY_MACROVISION = 0x5,KSPROPERTY_DVDCOPY_REGION = 0x6,KSPROPERTY_DVDCOPY_SET_COPY_STATE = 0x7,KSPROPERTY_DVDCOPY_DISC_KEY = 0x80,};
enum _CFDB0D303165423155BC335C42AADBEC {ScopeLevelInterface = 0x1,ScopeLevelLink = 0x2,ScopeLevelSubnet = 0x3,ScopeLevelAdmin = 0x4,ScopeLevelSite = 0x5,ScopeLevelOrganization = 0x8,ScopeLevelGlobal = 0xE,ScopeLevelCount = 0x10,};
enum _D00284FE4FDF23C69D83117CE04F8BE4 {KSMETHOD_BDA_TS_SELECTOR_SETTSID = 0x0,KSMETHOD_BDA_TS_SELECTOR_GETTSINFORMATION = 0x1,};
enum _D17046D3F50DBE26C20AAD2627B176C2 {KSPROPERTY_CAMERACONTROL_VIDEO_STABILIZATION_MODE_PROPERTY_ID = 0x0,};
enum _D1BAF05EA5701465801D1F5D69AEB032 {RX_CONTEXT_CREATE_FLAG_UNC_NAME = 0x1,RX_CONTEXT_CREATE_FLAG_STRIPPED_TRAILING_BACKSLASH = 0x2,RX_CONTEXT_CREATE_FLAG_ADDEDBACKSLASH = 0x4,RX_CONTEXT_CREATE_FLAG_REPARSE = 0x8,RX_CONTEXT_CREATE_FLAG_SPECIAL_PATH = 0x10,};
enum _D28224BC9A9B8BD3505A505C1CAC1B65 {PmiMeasurementConfiguration = 0x0,PmiBudgetingConfiguration = 0x1,PmiThresholdConfiguration = 0x2,PmiConfigurationMax = 0x3,};
enum _D2D7ADDD7CC8EBBAC27CC93F1D71BE3D {KSPROPERTY_EXTDEVICE_ID = 0x0,KSPROPERTY_EXTDEVICE_VERSION = 0x1,KSPROPERTY_EXTDEVICE_POWER_STATE = 0x2,KSPROPERTY_EXTDEVICE_PORT = 0x3,KSPROPERTY_EXTDEVICE_CAPABILITIES = 0x4,};
enum _D3BDF6313D5C42682F258DB657F1A9EF {RCVALL_OFF = 0x0,RCVALL_ON = 0x1,RCVALL_SOCKETLEVELONLY = 0x2,RCVALL_IPLEVEL = 0x3,};
enum _D5CA3A18CB786C06D1FE5E26C4BBD8C9 {KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST_SIZE = 0x0,KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_LIST = 0x1,KSPROPERTY_BDA_IPv4_FILTER_MULTICAST_MODE = 0x2,};
enum _D5E6F51AEB03C07F77C1A65CE86D0EDF {PmiCapabilitiesChangedEvent = 0x0,PmiThresholdEvent = 0x1,PmiConfigurationChangedEvent = 0x2,PmiBudgetEvent = 0x3,PmiAveragingIntervalChangedEvent = 0x4,PmiEventMax = 0x5,};
enum _D64CEF8F52066C406CD4BA6573420261 {KSRESET_BEGIN = 0x0,KSRESET_END = 0x1,};
enum _D65DCBF02618B4971A14091F77C71942 {KSTARGET_STATE_DISABLED = 0x0,KSTARGET_STATE_ENABLED = 0x1,};
enum _D7E4C26A6426AEE0A09437799E727C87 {KSMICARRAY_MICARRAYTYPE_LINEAR = 0x0,KSMICARRAY_MICARRAYTYPE_PLANAR = 0x1,KSMICARRAY_MICARRAYTYPE_3D = 0x2,};
enum _D7F48ACA8F7E5F151D30CF090E11B572 {_FpCodeUnspecified = 0x0,_FpCodeAdd = 0x1,_FpCodeSubtract = 0x2,_FpCodeMultiply = 0x3,_FpCodeDivide = 0x4,_FpCodeSquareRoot = 0x5,_FpCodeRemainder = 0x6,_FpCodeCompare = 0x7,_FpCodeConvert = 0x8,_FpCodeRound = 0x9,_FpCodeTruncate = 0xA,_FpCodeFloor = 0xB,_FpCodeCeil = 0xC,_FpCodeAcos = 0xD,_FpCodeAsin = 0xE,_FpCodeAtan = 0xF,_FpCodeAtan2 = 0x10,_FpCodeCabs = 0x11,_FpCodeCos = 0x12,_FpCodeCosh = 0x13,_FpCodeExp = 0x14,_FpCodeFabs = 0x15,_FpCodeFmod = 0x16,_FpCodeFrexp = 0x17,_FpCodeHypot = 0x18,_FpCodeLdexp = 0x19,_FpCodeLog = 0x1A,_FpCodeLog10 = 0x1B,_FpCodeModf = 0x1C,_FpCodePow = 0x1D,_FpCodeSin = 0x1E,_FpCodeSinh = 0x1F,_FpCodeTan = 0x20,_FpCodeTanh = 0x21,_FpCodeY0 = 0x22,_FpCodeY1 = 0x23,_FpCodeYn = 0x24,_FpCodeLogb = 0x25,_FpCodeNextafter = 0x26,_FpCodeNegate = 0x27,_FpCodeFmin = 0x28,_FpCodeFmax = 0x29,_FpCodeConvertTrunc = 0x2A,_XMMIAddps = 0x2B,_XMMIAddss = 0x2C,_XMMISubps = 0x2D,_XMMISubss = 0x2E,_XMMIMulps = 0x2F,_XMMIMulss = 0x30,_XMMIDivps = 0x31,_XMMIDivss = 0x32,_XMMISqrtps = 0x33,_XMMISqrtss = 0x34,_XMMIMaxps = 0x35,_XMMIMaxss = 0x36,_XMMIMinps = 0x37,_XMMIMinss = 0x38,_XMMICmpps = 0x39,_XMMICmpss = 0x3A,_XMMIComiss = 0x3B,_XMMIUComiss = 0x3C,_XMMICvtpi2ps = 0x3D,_XMMICvtsi2ss = 0x3E,_XMMICvtps2pi = 0x3F,_XMMICvtss2si = 0x40,_XMMICvttps2pi = 0x41,_XMMICvttss2si = 0x42,_XMMIAddsubps = 0x43,_XMMIHaddps = 0x44,_XMMIHsubps = 0x45,_XMMIRoundps = 0x46,_XMMIRoundss = 0x47,_XMMIDpps = 0x48,_XMMI2Addpd = 0x49,_XMMI2Addsd = 0x4A,_XMMI2Subpd = 0x4B,_XMMI2Subsd = 0x4C,_XMMI2Mulpd = 0x4D,_XMMI2Mulsd = 0x4E,_XMMI2Divpd = 0x4F,_XMMI2Divsd = 0x50,_XMMI2Sqrtpd = 0x51,_XMMI2Sqrtsd = 0x52,_XMMI2Maxpd = 0x53,_XMMI2Maxsd = 0x54,_XMMI2Minpd = 0x55,_XMMI2Minsd = 0x56,_XMMI2Cmppd = 0x57,_XMMI2Cmpsd = 0x58,_XMMI2Comisd = 0x59,_XMMI2UComisd = 0x5A,_XMMI2Cvtpd2pi = 0x5B,_XMMI2Cvtsd2si = 0x5C,_XMMI2Cvttpd2pi = 0x5D,_XMMI2Cvttsd2si = 0x5E,_XMMI2Cvtps2pd = 0x5F,_XMMI2Cvtss2sd = 0x60,_XMMI2Cvtpd2ps = 0x61,_XMMI2Cvtsd2ss = 0x62,_XMMI2Cvtdq2ps = 0x63,_XMMI2Cvttps2dq = 0x64,_XMMI2Cvtps2dq = 0x65,_XMMI2Cvttpd2dq = 0x66,_XMMI2Cvtpd2dq = 0x67,_XMMI2Addsubpd = 0x68,_XMMI2Haddpd = 0x69,_XMMI2Hsubpd = 0x6A,_XMMI2Roundpd = 0x6B,_XMMI2Roundsd = 0x6C,_XMMI2Dppd = 0x6D,};
enum _DA0D5BB75CBDBE72A15ACBE1E5F6B74A {KSMETHOD_BDA_SCAN_CAPABILTIES = 0x0,KSMETHOD_BDA_SCANNING_STATE = 0x1,KSMETHOD_BDA_SCAN_FILTER = 0x2,KSMETHOD_BDA_SCAN_START = 0x3,KSMETHOD_BDA_SCAN_RESUME = 0x4,KSMETHOD_BDA_SCAN_STOP = 0x5,};
enum _DA909687F2C7D951C543BFC25B77F519 {EventGeneration = 0x0,DataBlockCollection = 0x1,};
enum _DD5FC77EC1374A734666B81823C28AFB {FULL_FILTER = 0x0,LIGHT_FILTER = 0x1,KSDS3D_FILTER_QUALITY_COUNT = 0x2,};
enum _DD63D416C80B0B367D506EB1E8E34ADE {KSSTREAM_POINTER_STATE_UNLOCKED = 0x0,KSSTREAM_POINTER_STATE_LOCKED = 0x1,};
enum _DF2051BCD5E4FC2C953B94B617C6FC67 {HAL_MCE_RECORD = 0x0,HAL_MCA_RECORD = 0x1,};
enum _DF42200E5C7644BA9EFD9248E6DB20BA {KSEVENT_BDA_PIN_CONNECTED = 0x0,KSEVENT_BDA_PIN_DISCONNECTED = 0x1,};
enum _DF9DC3CA715243000FDF1AF65F7091A6 {SystemPowerPolicyAc = 0x0,SystemPowerPolicyDc = 0x1,VerifySystemPolicyAc = 0x2,VerifySystemPolicyDc = 0x3,SystemPowerCapabilities = 0x4,SystemBatteryState = 0x5,SystemPowerStateHandler = 0x6,ProcessorStateHandler = 0x7,SystemPowerPolicyCurrent = 0x8,AdministratorPowerPolicy = 0x9,SystemReserveHiberFile = 0xA,ProcessorInformation = 0xB,SystemPowerInformation = 0xC,ProcessorStateHandler2 = 0xD,LastWakeTime = 0xE,LastSleepTime = 0xF,SystemExecutionState = 0x10,SystemPowerStateNotifyHandler = 0x11,ProcessorPowerPolicyAc = 0x12,ProcessorPowerPolicyDc = 0x13,VerifyProcessorPowerPolicyAc = 0x14,VerifyProcessorPowerPolicyDc = 0x15,ProcessorPowerPolicyCurrent = 0x16,SystemPowerStateLogging = 0x17,SystemPowerLoggingEntry = 0x18,SetPowerSettingValue = 0x19,NotifyUserPowerSetting = 0x1A,PowerInformationLevelUnused0 = 0x1B,SystemMonitorHiberBootPowerOff = 0x1C,SystemVideoState = 0x1D,TraceApplicationPowerMessage = 0x1E,TraceApplicationPowerMessageEnd = 0x1F,ProcessorPerfStates = 0x20,ProcessorIdleStates = 0x21,ProcessorCap = 0x22,SystemWakeSource = 0x23,SystemHiberFileInformation = 0x24,TraceServicePowerMessage = 0x25,ProcessorLoad = 0x26,PowerShutdownNotification = 0x27,MonitorCapabilities = 0x28,SessionPowerInit = 0x29,SessionDisplayState = 0x2A,PowerRequestCreate = 0x2B,PowerRequestAction = 0x2C,GetPowerRequestList = 0x2D,ProcessorInformationEx = 0x2E,NotifyUserModeLegacyPowerEvent = 0x2F,GroupPark = 0x30,ProcessorIdleDomains = 0x31,WakeTimerList = 0x32,SystemHiberFileSize = 0x33,ProcessorIdleStatesHv = 0x34,ProcessorPerfStatesHv = 0x35,ProcessorPerfCapHv = 0x36,ProcessorSetIdle = 0x37,LogicalProcessorIdling = 0x38,UserPresence = 0x39,PowerSettingNotificationName = 0x3A,GetPowerSettingValue = 0x3B,IdleResiliency = 0x3C,SessionRITState = 0x3D,SessionConnectNotification = 0x3E,SessionPowerCleanup = 0x3F,SessionLockState = 0x40,SystemHiberbootState = 0x41,PlatformInformation = 0x42,PdcInvocation = 0x43,MonitorInvocation = 0x44,FirmwareTableInformationRegistered = 0x45,SetShutdownSelectedTime = 0x46,SuspendResumeInvocation = 0x47,PlmPowerRequestCreate = 0x48,ScreenOff = 0x49,CsDeviceNotification = 0x4A,PlatformRole = 0x4B,LastResumePerformance = 0x4C,DisplayBurst = 0x4D,ExitLatencySamplingPercentage = 0x4E,ApplyLowPowerScenarioSettings = 0x4F,PowerInformationLevelMaximum = 0x50,};
enum _E04FEB4585E773A1798F0515E7916701 {UnknownMode = 0x0,ChsMode = 0x1,LbaMode = 0x2,Lba48BitMode = 0x3,};
enum _E1D7F57E2A49D0507BA8D33EFA899EEA {ApicDestinationModePhysical = 0x1,ApicDestinationModeLogicalFlat = 0x2,ApicDestinationModeLogicalClustered = 0x3,ApicDestinationModeUnknown = 0x4,};
enum _E230A553FC43DE80D792089E8D4F6A36 {IPPROTO_HOPOPTS = 0x0,IPPROTO_ICMP = 0x1,IPPROTO_IGMP = 0x2,IPPROTO_GGP = 0x3,IPPROTO_IPV4 = 0x4,IPPROTO_ST = 0x5,IPPROTO_TCP = 0x6,IPPROTO_CBT = 0x7,IPPROTO_EGP = 0x8,IPPROTO_IGP = 0x9,IPPROTO_PUP = 0xC,IPPROTO_UDP = 0x11,IPPROTO_IDP = 0x16,IPPROTO_RDP = 0x1B,IPPROTO_IPV6 = 0x29,IPPROTO_ROUTING = 0x2B,IPPROTO_FRAGMENT = 0x2C,IPPROTO_ESP = 0x32,IPPROTO_AH = 0x33,IPPROTO_ICMPV6 = 0x3A,IPPROTO_NONE = 0x3B,IPPROTO_DSTOPTS = 0x3C,IPPROTO_ND = 0x4D,IPPROTO_ICLFXBM = 0x4E,IPPROTO_PIM = 0x67,IPPROTO_PGM = 0x71,IPPROTO_L2TP = 0x73,IPPROTO_SCTP = 0x84,IPPROTO_RAW = 0xFF,IPPROTO_MAX = 0x100,IPPROTO_RESERVED_RAW = 0x101,IPPROTO_RESERVED_IPSEC = 0x102,IPPROTO_RESERVED_IPSECOFFLOAD = 0x103,IPPROTO_RESERVED_WNV = 0x104,IPPROTO_RESERVED_MAX = 0x105,};
enum _E248109EE30B8C00485013D3FC9AB4CA {PHASE_UNKNOWN = 0x0,PHASE_NEGOTIATION = 0x1,PHASE_SETUP = 0x2,PHASE_FORWARD_IDLE = 0x3,PHASE_FORWARD_XFER = 0x4,PHASE_FWD_TO_REV = 0x5,PHASE_REVERSE_IDLE = 0x6,PHASE_REVERSE_XFER = 0x7,PHASE_REV_TO_FWD = 0x8,PHASE_TERMINATE = 0x9,PHASE_DATA_AVAILABLE = 0xA,PHASE_DATA_NOT_AVAIL = 0xB,PHASE_INTERRUPT_HOST = 0xC,};
enum _E30A00E4222EAF4A672E1227DA7CD141 {MsvAvEOL = 0x0,MsvAvNbComputerName = 0x1,MsvAvNbDomainName = 0x2,MsvAvDnsComputerName = 0x3,MsvAvDnsDomainName = 0x4,MsvAvDnsTreeName = 0x5,MsvAvFlags = 0x6,MsvAvTimestamp = 0x7,MsvAvRestrictions = 0x8,MsvAvTargetName = 0x9,MsvAvChannelBindings = 0xA,};
enum _E38CE7F1AC08E248910BE7D26668C82A {TUNNEL_TYPE_NONE = 0x0,TUNNEL_TYPE_OTHER = 0x1,TUNNEL_TYPE_DIRECT = 0x2,TUNNEL_TYPE_6TO4 = 0xB,TUNNEL_TYPE_ISATAP = 0xD,TUNNEL_TYPE_TEREDO = 0xE,TUNNEL_TYPE_IPHTTPS = 0xF,};
enum _E429D5BCA10BC7F1E46CF67F9B793820 {KSPROPERTY_STREAMINTERFACE_HEADERSIZE = 0x0,};
enum _E4F601CF8334073149F423AA599EAEAE {KSPROPERTY_VBICAP_PROPERTIES_PROTECTION = 0x1,};
enum _E5E05FC88E8385A5216FCD37A95BAA87 {KSPIN_DATAFLOW_IN = 0x1,KSPIN_DATAFLOW_OUT = 0x2,};
enum _E5E6E0D9FF0D91240836F1F7EEF0D725 {ISCSI_NO_AUTH_TYPE = 0x0,ISCSI_CHAP_AUTH_TYPE = 0x1,ISCSI_MUTUAL_CHAP_AUTH_TYPE = 0x2,};
struct _E6A349E6C594207448DC3F8A57F3A91C {float f;};
enum _E747D6D325A8056CFFE85C81BD62423F {SDCC_STANDARD = 0x0,SDCC_APP_CMD = 0x1,};
enum _E77CB3051D9C8ED4930C18407A61777E {eMINIPORT_IHV_DEFINED = 0x0,eMINIPORT_BUFFER_COMPLETE = 0x1,eMINIPORT_PIN_STATE = 0x2,eMINIPORT_GET_STREAM_POSITION = 0x3,eMINIPORT_SET_WAVERT_BUFFER_WRITE_POSITION = 0x4,eMINIPORT_GET_PRESENTATION_POSITION = 0x5,eMINIPORT_PROGRAM_DMA = 0x6,eMINIPORT_GLITCH_REPORT = 0x7,};
enum _E868200BB43754926927BC830F38AC6F {MonitorRequestReasonUnknown = 0x0,MonitorRequestReasonPowerButton = 0x1,MonitorRequestReasonRemoteConnection = 0x2,MonitorRequestReasonScMonitorpower = 0x3,MonitorRequestReasonUserInput = 0x4,MonitorRequestReasonAcDcDisplayBurst = 0x5,MonitorRequestReasonUserDisplayBurst = 0x6,MonitorRequestReasonPoSetSystemState = 0x7,MonitorRequestReasonSetThreadExecutionState = 0x8,MonitorRequestReasonFullWake = 0x9,MonitorRequestReasonSessionUnlock = 0xA,MonitorRequestReasonScreenOffRequest = 0xB,MonitorRequestReasonIdleTimeout = 0xC,MonitorRequestReasonPolicyChange = 0xD,MonitorRequestReasonMax = 0xE,};
enum _EBF8251B43E7412EBBCF0A9FFEA6D7A7 {_FpPrecisionFull = 0x0,_FpPrecision53 = 0x1,_FpPrecision24 = 0x2,};
enum _EC48461D6F8CB906345649547B79F0B9 {PowerDownDeviceInitial2 = 0x0,PowerDownDeviceLocked2 = 0x1,PowerDownDeviceFlushed2 = 0x2,PowerDownDeviceStopped2 = 0x3,PowerDownDeviceOff2 = 0x4,PowerDownDeviceUnlocked2 = 0x5,};
enum _EDF8FA4BB7F3E419A3E1C09777E7A0AF {SFFDC_DEVICE_COMMAND = 0x0,SFFDC_DEVICE_PASSWORD = 0x1,};
enum _EEDC202E1D6A59707A46C9F564CBCDC1 {DebugLevelFatal = 0x0,DebugLevelError = 0x1,DebugLevelWarning = 0x2,DebugLevelInfo = 0x3,DebugLevelTrace = 0x4,DebugLevelVerbose = 0x5,DebugLevelMaximum = 0x6,};
enum _EFCC84E8C2A5CC38881F2196F9700629 {FixedWakeSourcePowerButton = 0x0,FixedWakeSourceSleepButton = 0x1,FixedWakeSourceRtc = 0x2,FixedWakeSourceDozeToHibernate = 0x3,};
enum _F239DEADC25CACD7CAEE22C293522824 {KSPROPERTY_AUDIOENGINE_LFXENABLE = 0x0,KSPROPERTY_AUDIOENGINE_GFXENABLE = 0x1,KSPROPERTY_AUDIOENGINE_MIXFORMAT = 0x2,KSPROPERTY_AUDIOENGINE_PROCESSINGPERIOD = 0x3,KSPROPERTY_AUDIOENGINE_DEVICEFORMAT = 0x4,KSPROPERTY_AUDIOENGINE_SUPPORTEDDEVICEFORMATS = 0x5,KSPROPERTY_AUDIOENGINE_DESCRIPTOR = 0x6,KSPROPERTY_AUDIOENGINE_BUFFER_SIZE_RANGE = 0x7,KSPROPERTY_AUDIOENGINE_LOOPBACK_PROTECTION = 0x8,KSPROPERTY_AUDIOENGINE_VOLUMELEVEL = 0x9,};
enum _F3F03CD4671992E876D53816337456CB {PowerDownDeviceInitial = 0x0,PowerDownDeviceLocked = 0x1,PowerDownDeviceStopped = 0x2,PowerDownDeviceOff = 0x3,PowerDownDeviceUnlocked = 0x4,};
enum _F5BF111CB6DC433A136378229CB58F7F {KSPROPERTY_BDA_DISEQC_ENABLE = 0x0,KSPROPERTY_BDA_DISEQC_LNB_SOURCE = 0x1,KSPROPERTY_BDA_DISEQC_USETONEBURST = 0x2,KSPROPERTY_BDA_DISEQC_REPEATS = 0x3,KSPROPERTY_BDA_DISEQC_SEND = 0x4,KSPROPERTY_BDA_DISEQC_RESPONSE = 0x5,};
enum _F5DB4F72D73D690AE94D963EB3A9BA06 {eVolumeAttribute = 0x0,eMuteAttribute = 0x1,ePeakMeterAttribute = 0x2,};
enum _F5E9AD53D969E47E21B14A1F6622DC98 {KSPROPERTY_OVERLAYUPDATE_INTERESTS = 0x0,KSPROPERTY_OVERLAYUPDATE_CLIPLIST = 0x1,KSPROPERTY_OVERLAYUPDATE_PALETTE = 0x2,KSPROPERTY_OVERLAYUPDATE_COLORKEY = 0x4,KSPROPERTY_OVERLAYUPDATE_VIDEOPOSITION = 0x8,KSPROPERTY_OVERLAYUPDATE_DISPLAYCHANGE = 0x10,KSPROPERTY_OVERLAYUPDATE_COLORREF = 0x10000000,};
enum _F82217EAE416E44B66BEB74A12D4E69E {ND_OPT_SOURCE_LINKADDR = 0x1,ND_OPT_TARGET_LINKADDR = 0x2,ND_OPT_PREFIX_INFORMATION = 0x3,ND_OPT_REDIRECTED_HEADER = 0x4,ND_OPT_MTU = 0x5,ND_OPT_NBMA_SHORTCUT_LIMIT = 0x6,ND_OPT_ADVERTISEMENT_INTERVAL = 0x7,ND_OPT_HOME_AGENT_INFORMATION = 0x8,ND_OPT_SOURCE_ADDR_LIST = 0x9,ND_OPT_TARGET_ADDR_LIST = 0xA,ND_OPT_ROUTE_INFO = 0x18,};
enum _F82401D521EFC03EBC08D5EDB30820DF {MLD_MAX_RESP_CODE_TYPE_NORMAL = 0x0,MLD_MAX_RESP_CODE_TYPE_FLOAT = 0x1,};
enum _F83EBA9D0BD861E54A6698205AB72334 {KSPROPERTY_BIBLIOGRAPHIC_LEADER = 0x52444C20,KSPROPERTY_BIBLIOGRAPHIC_LCCN = 0x30313020,KSPROPERTY_BIBLIOGRAPHIC_ISBN = 0x30323020,KSPROPERTY_BIBLIOGRAPHIC_ISSN = 0x32323020,KSPROPERTY_BIBLIOGRAPHIC_CATALOGINGSOURCE = 0x30343020,KSPROPERTY_BIBLIOGRAPHIC_MAINPERSONALNAME = 0x30303120,KSPROPERTY_BIBLIOGRAPHIC_MAINCORPORATEBODY = 0x30313120,KSPROPERTY_BIBLIOGRAPHIC_MAINMEETINGNAME = 0x31313120,KSPROPERTY_BIBLIOGRAPHIC_MAINUNIFORMTITLE = 0x30333120,KSPROPERTY_BIBLIOGRAPHIC_UNIFORMTITLE = 0x30343220,KSPROPERTY_BIBLIOGRAPHIC_TITLESTATEMENT = 0x35343220,KSPROPERTY_BIBLIOGRAPHIC_VARYINGFORMTITLE = 0x36343220,KSPROPERTY_BIBLIOGRAPHIC_PUBLICATION = 0x30363220,KSPROPERTY_BIBLIOGRAPHIC_PHYSICALDESCRIPTION = 0x30303320,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYTITLE = 0x30343420,KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENT = 0x30393420,KSPROPERTY_BIBLIOGRAPHIC_GENERALNOTE = 0x30303520,KSPROPERTY_BIBLIOGRAPHIC_BIBLIOGRAPHYNOTE = 0x34303520,KSPROPERTY_BIBLIOGRAPHIC_CONTENTSNOTE = 0x35303520,KSPROPERTY_BIBLIOGRAPHIC_CREATIONCREDIT = 0x38303520,KSPROPERTY_BIBLIOGRAPHIC_CITATION = 0x30313520,KSPROPERTY_BIBLIOGRAPHIC_PARTICIPANT = 0x31313520,KSPROPERTY_BIBLIOGRAPHIC_SUMMARY = 0x30323520,KSPROPERTY_BIBLIOGRAPHIC_TARGETAUDIENCE = 0x31323520,KSPROPERTY_BIBLIOGRAPHIC_ADDEDFORMAVAILABLE = 0x30333520,KSPROPERTY_BIBLIOGRAPHIC_SYSTEMDETAILS = 0x38333520,KSPROPERTY_BIBLIOGRAPHIC_AWARDS = 0x36383520,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYPERSONALNAME = 0x30303620,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYTOPICALTERM = 0x30353620,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYGEOGRAPHIC = 0x31353620,KSPROPERTY_BIBLIOGRAPHIC_INDEXTERMGENRE = 0x35353620,KSPROPERTY_BIBLIOGRAPHIC_INDEXTERMCURRICULUM = 0x38353620,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYUNIFORMTITLE = 0x30333720,KSPROPERTY_BIBLIOGRAPHIC_ADDEDENTRYRELATED = 0x30343720,KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENTPERSONALNAME = 0x30303820,KSPROPERTY_BIBLIOGRAPHIC_SERIESSTATEMENTUNIFORMTITLE = 0x30333820,};
enum _F8DF59CE70524272C25A772B848902B7 {IP_INVALID = 0x0,IP_v4 = 0x1,IP_v6 = 0x2,};
enum _FA11D0DE19A9089B50BC241520DAD748 {KSEVENT_BDA_PROGRAM_FLOW_STATUS_CHANGED = 0x0,KSEVENT_BDA_CA_MODULE_STATUS_CHANGED = 0x1,KSEVENT_BDA_CA_SMART_CARD_STATUS_CHANGED = 0x2,KSEVENT_BDA_CA_MODULE_UI_REQUESTED = 0x3,};
enum _FC23A50C1CCE287E75E010175501A7BF {KSPROPERTY_BDA_NODE_TYPES = 0x0,KSPROPERTY_BDA_PIN_TYPES = 0x1,KSPROPERTY_BDA_TEMPLATE_CONNECTIONS = 0x2,KSPROPERTY_BDA_NODE_METHODS = 0x3,KSPROPERTY_BDA_NODE_PROPERTIES = 0x4,KSPROPERTY_BDA_NODE_EVENTS = 0x5,KSPROPERTY_BDA_CONTROLLING_PIN_ID = 0x6,KSPROPERTY_BDA_NODE_DESCRIPTORS = 0x7,};
enum _FDE649CC57CE41CE85FECAF000FEEDF5 {DS3D_HRTF_VERSION_1 = 0x0,};
enum _FEF87262652661024D4D95B05F6AD345 {KeProcessorAddStartNotify = 0x0,KeProcessorAddCompleteNotify = 0x1,KeProcessorAddFailureNotify = 0x2,};
enum _FEFB4230E342442E5E029160A828198A {SDBUS_FUNCTION_TYPE_UNKNOWN = 0x0,SDBUS_FUNCTION_TYPE_SDIO = 0x1,SDBUS_FUNCTION_TYPE_SD_MEMORY = 0x2,SDBUS_FUNCTION_TYPE_MMC_MEMORY = 0x3,};
enum _FF3C8108EE41D1B5391303520A7710DC {KSPROPERTY_TIMECODE_READER = 0x0,KSPROPERTY_ATN_READER = 0x1,KSPROPERTY_RTC_READER = 0x2,};
enum _FF45D4E2473FCC32F6B74B38D48F9318 {SDRT_UNSPECIFIED = 0x0,SDRT_NONE = 0x1,SDRT_1 = 0x2,SDRT_1B = 0x3,SDRT_2 = 0x4,SDRT_3 = 0x5,SDRT_4 = 0x6,SDRT_5 = 0x7,SDRT_5B = 0x8,SDRT_6 = 0x9,};
typedef struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX_EX ACPI_EVAL_INPUT_BUFFER_COMPLEX_EX;
typedef struct _AGP_TARGET_BUS_INTERFACE_STANDARD AGP_TARGET_BUS_INTERFACE_STANDARD;
typedef struct _ARBITER_QUERY_CONFLICT_PARAMETERS ARBITER_QUERY_CONFLICT_PARAMETERS;
typedef struct _ATM_BROADBAND_SENDING_COMPLETE_IE ATM_BROADBAND_SENDING_COMPLETE_IE;
enum BDA_CONDITIONALACCESS_REQUESTTYPE {CONDITIONALACCESS_ACCESS_UNSPECIFIED = 0x0,CONDITIONALACCESS_ACCESS_NOT_POSSIBLE = 0x1,CONDITIONALACCESS_ACCESS_POSSIBLE = 0x2,CONDITIONALACCESS_ACCESS_POSSIBLE_NO_STREAMING_DISRUPTION = 0x3,};
typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS CHANGER_INITIALIZE_ELEMENT_STATUS;
typedef struct _CLEAR_CLIENT_STICKINESS_HOOK_INFO CLEAR_CLIENT_STICKINESS_HOOK_INFO;
typedef struct _CO_TAPI_TRANSLATE_NDIS_CALLPARAMS CO_TAPI_TRANSLATE_NDIS_CALLPARAMS;
typedef struct _CO_TAPI_TRANSLATE_TAPI_CALLPARAMS CO_TAPI_TRANSLATE_TAPI_CALLPARAMS;
typedef struct _ClearDevInstanceHealthCounters_IN ClearDevInstanceHealthCounters_IN;
typedef struct _CreateVirtualPortExUsingDHCHAP_IN CreateVirtualPortExUsingDHCHAP_IN;
typedef struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2 D3DDDI_SYNCHRONIZATIONOBJECTINFO2;
typedef struct _D3DKMDT_GRAPHICS_RENDERING_FORMAT D3DKMDT_GRAPHICS_RENDERING_FORMAT;
typedef struct D3DKMDT_HMONITORFREQUENCYRANGESET__ *D3DKMDT_HMONITORFREQUENCYRANGESET;
typedef struct _D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS;
typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS DEVICE_DATA_SET_REPAIR_PARAMETERS;
typedef struct _DEVICE_LB_PROVISIONING_DESCRIPTOR DEVICE_LB_PROVISIONING_DESCRIPTOR;
typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES DEVICE_MANAGE_DATA_SET_ATTRIBUTES;
typedef struct _DEVICE_STATISTICS_LOG_PAGE_HEADER DEVICE_STATISTICS_LOG_PAGE_HEADER;
typedef struct _DOT11_CURRENT_OPTIONAL_CAPABILITY DOT11_CURRENT_OPTIONAL_CAPABILITY;
typedef struct _DOT11_DIVERSITY_SELECTION_RX_LIST DOT11_DIVERSITY_SELECTION_RX_LIST;
typedef struct _DOT11_MANUFACTURING_TEST_SET_DATA DOT11_MANUFACTURING_TEST_SET_DATA;
typedef struct _DOT11_POWER_MGMT_MODE_STATUS_INFO DOT11_POWER_MGMT_MODE_STATUS_INFO;
typedef struct _DOT11_SUPPORTED_DSSS_CHANNEL_LIST DOT11_SUPPORTED_DSSS_CHANNEL_LIST;
typedef struct _DVBScramblingControlSpanningEvent DVBScramblingControlSpanningEvent;
typedef struct _DXGKARGCB_CREATECONTEXTALLOCATION DXGKARGCB_CREATECONTEXTALLOCATION;
typedef struct _DXGKARG_QUERYDEPENDENTENGINEGROUP DXGKARG_QUERYDEPENDENTENGINEGROUP;
typedef struct _DXGKMDT_OPM_REQUESTED_INFORMATION DXGKMDT_OPM_REQUESTED_INFORMATION;
typedef struct _DXGK_CREATECONTEXTALLOCATIONFLAGS DXGK_CREATECONTEXTALLOCATIONFLAGS;
typedef struct _DXGK_PRESENTMULTIPLANEOVERLAYINFO DXGK_PRESENTMULTIPLANEOVERLAYINFO;
typedef struct _DXGK_PRESENTMULTIPLANEOVERLAYLIST DXGK_PRESENTMULTIPLANEOVERLAYLIST;
typedef struct _DXGK_VIDPNSOURCEMODESET_INTERFACE DXGK_VIDPNSOURCEMODESET_INTERFACE;
typedef struct _DXGK_VIDPNTARGETMODESET_INTERFACE DXGK_VIDPNTARGETMODESET_INTERFACE;
typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION FILE_ID_GLOBAL_TX_DIR_INFORMATION;
typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION FILE_IO_PRIORITY_HINT_INFORMATION;
typedef struct _FILE_IS_REMOTE_DEVICE_INFORMATION FILE_IS_REMOTE_DEVICE_INFORMATION;
typedef struct _FLT_CREATEFILE_TARGET_ECP_CONTEXT FLT_CREATEFILE_TARGET_ECP_CONTEXT;
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_IA64_RUNTIME_FUNCTION_ENTRY;
struct IMiniportWaveRTStreamNotification {struct IMiniportWaveRTStreamNotificationVtbl *lpVtbl;};
typedef struct _46F416DE933130F4FE917427A7A28C6B INET_PORT_RESERVATION_INFORMATION;
typedef union _IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS;
typedef struct _IRB_REQ_SET_LOCAL_HOST_PROPERTIES IRB_REQ_SET_LOCAL_HOST_PROPERTIES;
typedef struct _ISCSI_DiscoveredTargetPortalGroup ISCSI_DiscoveredTargetPortalGroup;
typedef struct _F2A265646FB33FDD4D1C81D3F589355E KSDATAFORMAT_WAVEFORMATEXTENSIBLE;
typedef struct _7445C9FCFCC2899651BCA0E341BC0369 KSNODEPROPERTY_AUDIO_DEV_SPECIFIC;
typedef struct _KSPROPERTY_GRAPHMANAGER_INTERFACE KSPROPERTY_GRAPHMANAGER_INTERFACE;
typedef struct _D673094E3AD950F76728E160E7A2C382 KSPROPERTY_VIDEODECODER_STATUS2_S;
typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
enum MACRO_ClearAllPathsHealthCounters {ClearAllPathsHealthCounters = 6,};
enum MACRO_ClearMpioDiskHealthCounters {ClearMpioDiskHealthCounters = 7,};
enum MACRO_CmResourceTypeDevicePrivate {CmResourceTypeDevicePrivate = 129,};
enum MACRO_DsmSetLoadBalancePolicyALUA {DsmSetLoadBalancePolicyALUA = 2,};
enum MACRO_GetDiscoveredPortAttributes {GetDiscoveredPortAttributes = 1,};
enum MACRO_ISCSI_Path_ConnectionStatus {ISCSI_Path_ConnectionStatus_ID = 5,ISCSI_Path_TCPOffLoadAvailable_ID = 6,ISCSI_Supported_LB_Policies_UniqueSessionId_ID = 1,};
enum MACRO_OID_DOT11_CURRENT_FREQUENCY {OID_DOT11_CURRENT_FREQUENCY = 218170178,OID_DOT11_TI_THRESHOLD = 218170179,OID_DOT11_FREQUENCY_BANDS_SUPPORTED = 218170180,};
enum MACRO_OID_DOT11_CURRENT_OPERATION {OID_DOT11_CURRENT_OPERATION_MODE = 218170120,OID_DOT11_CURRENT_PACKET_FILTER = 218170121,};
enum MACRO_OID_DOT11_SUPPORTED_COUNTRY {OID_DOT11_SUPPORTED_COUNTRY_OR_REGION_STRING = 234946968,};
enum MACRO_PARENTAL_CONTROL_TIME_RANGE {PARENTAL_CONTROL_TIME_RANGE = 0x1,REQUIRED_PARENTAL_CONTROL_TIME_RANGE = 0x2,};
enum MACRO_PcmciaInvalidControllerType {PcmciaInvalidControllerType = 0xFFFFFFFF,};
enum MACRO_RemoveConnectionFromSession {RemoveConnectionFromSession = 34,};
enum MACRO_ReportDiscoveredTargets_OUT {ReportDiscoveredTargets_OUT_Status_ID = 1,ReportDiscoveredTargets_OUT_TargetCount_ID = 2,ReportDiscoveredTargets_OUT_Targets_ID = 3,};
enum MACRO_WmiQueryInterruptModeration {WmiQueryInterruptModeration = 1,};
enum MACRO_WmiRevertToPolicyBrightness {WmiRevertToPolicyBrightness = 2,};
enum MACRO_WmiSetALSBrightnessState_IN {WmiSetALSBrightnessState_IN_State_ID = 1,};
typedef struct _MODE_CDROM_WRITE_PARAMETERS_PAGE2 MODE_CDROM_WRITE_PARAMETERS_PAGE2;
typedef struct _MOUNTMGR_DRIVE_LETTER_INFORMATION MOUNTMGR_DRIVE_LETTER_INFORMATION;
typedef struct _MSNdis_80211_ServiceSetIdentifier MSNdis_80211_ServiceSetIdentifier;
typedef struct _MSNdis_StatusDot11ConnectionStart MSNdis_StatusDot11ConnectionStart;
typedef struct _MSNdis_StatusHDSplitCurrentConfig MSNdis_StatusHDSplitCurrentConfig;
typedef struct _MSNdis_TokenRingCurrentFunctional MSNdis_TokenRingCurrentFunctional;
typedef struct _MSNdis_TokenRingCurrentRingStatus MSNdis_TokenRingCurrentRingStatus;
typedef struct _MSiSCSI_InitiatorNodeFailureEvent MSiSCSI_InitiatorNodeFailureEvent;
typedef struct _NDIS_MINIPORT_PNP_CHARACTERISTICS NDIS_MINIPORT_PNP_CHARACTERISTICS;
typedef struct _NDIS_PCI_DEVICE_CUSTOM_PROPERTIES NDIS_PCI_DEVICE_CUSTOM_PROPERTIES;
typedef struct _NDIS_WMI_RECEIVE_QUEUE_PARAMETERS NDIS_WMI_RECEIVE_QUEUE_PARAMETERS;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_RESPONSE NDIS_WWAN_DEVICE_SERVICE_RESPONSE;
typedef struct _NDIS_WWAN_SET_PREFERRED_PROVIDERS NDIS_WWAN_SET_PREFERRED_PROVIDERS;
typedef struct _NDIS_WWAN_SET_PROVISIONED_CONTEXT NDIS_WWAN_SET_PROVISIONED_CONTEXT;
typedef struct _NPI_LLDP_PROVIDER_CHARACTERISTICS NPI_LLDP_PROVIDER_CHARACTERISTICS;
typedef struct _OB_POST_CREATE_HANDLE_INFORMATION OB_POST_CREATE_HANDLE_INFORMATION;
typedef struct _ATM_TRANSIT_NETWORK_SELECTION_IE *PATM_TRANSIT_NETWORK_SELECTION_IE;
typedef struct _PCI_EXPRESS_BRIDGE_AER_CAPABILITY PCI_EXPRESS_BRIDGE_AER_CAPABILITY;
typedef union _PCI_EXPRESS_CAPABILITIES_REGISTER PCI_EXPRESS_CAPABILITIES_REGISTER;
typedef union _PCI_EXPRESS_LINK_CONTROL_REGISTER PCI_EXPRESS_LINK_CONTROL_REGISTER;
typedef union _PCI_EXPRESS_ROOT_CONTROL_REGISTER PCI_EXPRESS_ROOT_CONTROL_REGISTER;
typedef union _PCI_EXPRESS_SLOT_CONTROL_REGISTER PCI_EXPRESS_SLOT_CONTROL_REGISTER;
typedef struct _DEVICEDUMP_RESTRICTED_SUBSECTION *PDEVICEDUMP_RESTRICTED_SUBSECTION;
typedef struct _DOT11_CURRENT_OFFLOAD_CAPABILITY *PDOT11_CURRENT_OFFLOAD_CAPABILITY;
typedef struct _DOT11_HOPPING_PATTERN_ENTRY_LIST *PDOT11_HOPPING_PATTERN_ENTRY_LIST;
typedef struct _DOT11_INCOMING_ASSOC_DECISION_V2 *PDOT11_INCOMING_ASSOC_DECISION_V2;
typedef struct DOT11_MPDU_MAX_LENGTH_INDICATION *PDOT11_MPDU_MAX_LENGTH_INDICATION;
typedef struct _DOT11_POWER_MGMT_MODE_STATUS_INFO *PDOT11_POWER_MGMT_MODE_STATUSINFO;
typedef struct _DOT11_SUPPORTED_DATA_RATES_VALUE *PDOT11_SUPPORTED_DATA_RATES_VALUE;
typedef struct DOT11_TKIPMIC_FAILURE_PARAMETERS *PDOT11_TKIPMIC_FAILURE_PARAMETERS;
typedef struct _DOT11_WFD_DISCOVER_DEVICE_FILTER *PDOT11_WFD_DISCOVER_DEVICE_FILTER;
typedef struct _DOT11_WFD_GROUP_START_PARAMETERS *PDOT11_WFD_GROUP_START_PARAMETERS;
typedef struct _DXGKMDT_OPM_CONFIGURE_PARAMETERS *PDXGKMDT_OPM_CONFIGURE_PARAMETERS;
typedef struct _DXGKMDT_OPM_ENCRYPTED_PARAMETERS *PDXGKMDT_OPM_ENCRYPTED_PARAMETERS;
typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION *PFILE_FS_VOLUME_FLAGS_INFORMATION;
typedef struct _FILE_REMOTE_PROTOCOL_INFORMATION *PFILE_REMOTE_PROTOCOL_INFORMATION;
typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY *PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY;
typedef struct _INTERNAL_I8042_START_INFORMATION *PINTERNAL_I8042_START_INFORMATION;
typedef struct _KBUGCHECK_REASON_CALLBACK_RECORD *PKBUGCHECK_REASON_CALLBACK_RECORD;
typedef struct _KBUGCHECK_SECONDARY_DUMP_DATA_EX *PKBUGCHECK_SECONDARY_DUMP_DATA_EX;
typedef struct _6B8E9FF8FB4DE59DE7DA4092DA92354D *PKSNODEPROPERTY_AUDIO_3D_LISTENER;
typedef struct _0CB766F7CF0963C13F728D1318E296EA *PKSPROPERTY_CAMERACONTROL_FLASH_S;
typedef struct _BB313D54CF23017BA1FEE07E0A69AC13 *PKSPROPERTY_CAMERACONTROL_NODE_S2;
typedef struct _726D8FC833E61F5DB3AAF636888074FD *PKSPROPERTY_TUNER_STANDARD_MODE_S;
typedef struct _D86AEF8896DDE0BDF211E48E78F8BB6F *PKSPROPERTY_VIDEODECODER_STATUS_S;
typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY *PLOOKUP_STREAM_FROM_CLUSTER_ENTRY;
typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT *PLOOKUP_STREAM_FROM_CLUSTER_INPUT;
typedef IMiniportWaveRTStreamNotification *PMINIPORTWAVERTSTREAMNOTIFICATION;
typedef struct _MODE_CDROM_WRITE_PARAMETERS_PAGE *PMODE_CDROM_WRITE_PARAMETERS_PAGE;
typedef struct _MPIO_PASS_THROUGH_PATH_DIRECT_EX *PMPIO_PASS_THROUGH_PATH_DIRECT_EX;
typedef struct _MSFC_NPIVLUNMappingInformationEx *PMSFC_NPIVLUNMappingInformationEx;
typedef struct _MSMCAEvent_PlatformSpecificError *PMSMCAEvent_PlatformSpecificError;
typedef struct _MSNdis_AtmHardwareCurrentAddress *PMSNdis_AtmHardwareCurrentAddress;
typedef struct _MSNdis_FddiShortPermanentAddress *PMSNdis_FddiShortPermanentAddress;
typedef struct _MSNdis_NetworkDirectCapabilities *PMSNdis_NetworkDirectCapabilities;
typedef struct _MSNdis_ReceiveFilterCapabilities *PMSNdis_ReceiveFilterCapabilities;
typedef struct _MSNdis_StatusDot11Disassociation *PMSNdis_StatusDot11Disassociation;
typedef struct _MSNdis_StatusDot11PhyStateChange *PMSNdis_StatusDot11PhyStateChange;
typedef struct _MSNdis_StatusDot11TkipmicFailure *PMSNdis_StatusDot11TkipmicFailure;
typedef struct _MSNdis_TokenRingCurrentRingState *PMSNdis_TokenRingCurrentRingState;
typedef struct _MSNdis_TokenRingPermanentAddress *PMSNdis_TokenRingPermanentAddress;
typedef struct _MSNdis_WmiIPSecOffloadV1_IPv4ESP *PMSNdis_WmiIPSecOffloadV1_IPv4ESP;
typedef struct _MSV1_0_GETCHALLENRESP_REQUEST_V1 *PMSV1_0_GETCHALLENRESP_REQUEST_V1;
typedef struct _MSiSCSI_InitiatorLoginStatistics *PMSiSCSI_InitiatorLoginStatistics;
typedef struct _NDIS_802_11_AUTHENTICATION_EVENT *PNDIS_802_11_AUTHENTICATION_EVENT;
typedef struct _NDIS_802_11_PMKID_CANDIDATE_LIST *PNDIS_802_11_PMKID_CANDIDATE_LIST;
typedef struct _NDIS_CO_CLIENT_OPTIONAL_HANDLERS *PNDIS_CO_CLIENT_OPTIONAL_HANDLERS;
typedef struct _NDIS_IF_PROVIDER_CHARACTERISTICS *PNDIS_IF_PROVIDER_CHARACTERISTICS;
typedef union _NDIS_MINIPORT_ADAPTER_ATTRIBUTES *PNDIS_MINIPORT_ADAPTER_ATTRIBUTES;
typedef struct _NDIS_MINIPORT_CO_CHARACTERISTICS *PNDIS_MINIPORT_CO_CHARACTERISTICS;
typedef struct _NDIS_MINIPORT_RESTART_PARAMETERS *PNDIS_MINIPORT_RESTART_PARAMETERS;
typedef struct _NDIS_PROTOCOL_CO_CHARACTERISTICS *PNDIS_PROTOCOL_CO_CHARACTERISTICS;
typedef struct _NDIS_PROTOCOL_RESTART_PARAMETERS *PNDIS_PROTOCOL_RESTART_PARAMETERS;
typedef struct _NDIS_RECEIVE_FILTER_CAPABILITIES *PNDIS_RECEIVE_FILTER_CAPABILITIES;
typedef struct _NDIS_RECEIVE_THROTTLE_PARAMETERS *PNDIS_RECEIVE_THROTTLE_PARAMETERS;
typedef struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO *PNDIS_TCP_IP_CHECKSUM_PACKET_INFO;
typedef struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD *PNDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_COMMAND *PNDIS_WWAN_DEVICE_SERVICE_COMMAND;
typedef struct _NETWORK_APP_INSTANCE_ECP_CONTEXT *PNETWORK_APP_INSTANCE_ECP_CONTEXT;
typedef struct _NOTIFICATION_EVENT_STATUS_HEADER *PNOTIFICATION_EVENT_STATUS_HEADER;
typedef struct _OB_PRE_CREATE_HANDLE_INFORMATION *POB_PRE_CREATE_HANDLE_INFORMATION;
typedef struct _PCI_EXPRESS_ARI_CONTROL_REGISTER *PPCI_EXPRESS_ARI_CONTROL_REGISTER;
typedef union _PCI_EXPRESS_LINK_STATUS_REGISTER *PPCI_EXPRESS_LINK_STATUS_REGISTER;
typedef union _PCI_EXPRESS_ROOT_STATUS_REGISTER *PPCI_EXPRESS_ROOT_STATUS_REGISTER;
typedef union _PCI_EXPRESS_SEC_AER_CAPABILITIES *PPCI_EXPRESS_SEC_AER_CAPABILITIES;
typedef union _PCI_EXPRESS_SLOT_STATUS_REGISTER *PPCI_EXPRESS_SLOT_STATUS_REGISTER;
typedef struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY *PPCI_ROOT_BUS_HARDWARE_CAPABILITY;
typedef struct _PMI_METERED_HARDWARE_INFORMATION *PPMI_METERED_HARDWARE_INFORMATION;
typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX *PPROCESS_DEVICEMAP_INFORMATION_EX;
typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX *PPROCESS_HANDLE_TRACING_ENABLE_EX;
typedef struct _4BA00FD375EDE5DADBE8CAB814E48723 *PRECEIVE_TOKEN_INFORMATION_HEADER;
typedef struct _REG_DELETE_VALUE_KEY_INFORMATION *PREG_DELETE_VALUE_KEY_INFORMATION;
typedef struct _REG_KEY_HANDLE_CLOSE_INFORMATION *PREG_KEY_HANDLE_CLOSE_INFORMATION;
typedef struct _REG_SET_KEY_SECURITY_INFORMATION *PREG_SET_KEY_SECURITY_INFORMATION;
typedef struct _REMOTE_LINK_TRACKING_INFORMATION_ *PREMOTE_LINK_TRACKING_INFORMATION;
typedef struct _REQUEST_REMOTE_WAKE_NOTIFICATION *PREQUEST_REMOTE_WAKE_NOTIFICATION;
typedef struct _SAVED_DEVICE_INTERNAL_STATUS_LOG *PSAVED_DEVICE_INTERNAL_STATUS_LOG;
typedef struct _SCSI_SUPPORTED_CONTROL_TYPE_LIST *PSCSI_SUPPORTED_CONTROL_TYPE_LIST;
typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT *PSTORAGE_ALLOCATE_BC_STREAM_INPUT;
typedef struct _STORAGE_DEVICE_UNIQUE_IDENTIFIER *PSTORAGE_DEVICE_UNIQUE_IDENTIFIER;
typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT *PSTORAGE_GET_BC_PROPERTIES_OUTPUT;
typedef struct _STOR_POFX_POWER_REQUIRED_CONTEXT *PSTOR_POFX_POWER_REQUIRED_CONTEXT;
typedef struct _TA_ADDRESS_NETBIOS_UNICODE_EX_XP *PTA_NETBIOS_UNICODE_EX_ADDRESS_XP;
typedef struct _TIMER_SET_COALESCABLE_TIMER_INFO *PTIMER_SET_COALESCABLE_TIMER_INFO;
typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT *PTXFS_READ_BACKUP_INFORMATION_OUT;
typedef struct _USB_DEVICE_CAPABILITY_DESCRIPTOR *PUSB_DEVICE_CAPABILITY_DESCRIPTOR;
typedef union _USB_HUB_30_PORT_REMOTE_WAKE_MASK *PUSB_HUB_30_PORT_REMOTE_WAKE_MASK;
typedef struct _WATCHDOG_TIMER_INSTRUCTION_ENTRY *PWATCHDOG_TIMER_INSTRUCTION_ENTRY;
typedef struct _WHEA_XPF_PROCESSOR_ERROR_SECTION *PWHEA_XPF_PROCESSOR_ERROR_SECTION;
typedef struct _WMI_CHANGER_PROBLEM_DEVICE_ERROR *PWMI_CHANGER_PROBLEM_DEVICE_ERROR;
typedef struct _WSK_PROVIDER_CONNECTION_DISPATCH *PWSK_PROVIDER_CONNECTION_DISPATCH;
typedef struct _WWAN_DEVICE_SERVICE_SESSION_READ *PWWAN_DEVICE_SERVICE_SESSION_READ;
typedef struct _WmiGetMonitorRawEEdidV1Block_OUT *PWmiGetMonitorRawEEdidV1Block_OUT;
typedef struct _WmiMonitorAnalogVideoInputParams *PWmiMonitorAnalogVideoInputParams;
typedef struct _WmiQueryCurrentOffloadConfig_OUT *PWmiQueryCurrentOffloadConfig_OUT;
typedef struct _WmiQueryHDSplitCurrentConfig_OUT *PWmiQueryHDSplitCurrentConfig_OUT;
typedef struct _WmiQueryHardwareOffloadConfig_IN *PWmiQueryHardwareOffloadConfig_IN;
typedef struct _WmiQueryPhysicalMediumTypeEx_OUT *PWmiQueryPhysicalMediumTypeEx_OUT;
typedef struct _RESOURCEMANAGER_BASIC_INFORMATION RESOURCEMANAGER_BASIC_INFORMATION;
typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR RTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
typedef struct _SCSI_SENSE_DESCRIPTOR_INFORMATION SCSI_SENSE_DESCRIPTOR_INFORMATION;
typedef struct _SOCKET_SECURITY_QUERY_INFO_IPSEC2 SOCKET_SECURITY_QUERY_INFO_IPSEC2;
typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT STORAGE_ALLOCATE_BC_STREAM_OUTPUT;
typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION SYSTEM_FIRMWARE_TABLE_INFORMATION;
typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON SYSTEM_POWER_STATE_DISABLE_REASON;
typedef struct _TARGET_DEVICE_CUSTOM_NOTIFICATION TARGET_DEVICE_CUSTOM_NOTIFICATION;
typedef struct _TDI_ADDRESS_NETBIOS_UNICODE_EX_XP TDI_ADDRESS_NETBIOS_UNICODE_EX_XP;
typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION TXFS_ROLLFORWARD_REDO_INFORMATION;
typedef struct _VIDEO_HARDWARE_CONFIGURATION_DATA VIDEO_HARDWARE_CONFIGURATION_DATA;
typedef struct _VIDEO_PORT_DEBUG_REPORT_INTERFACE VIDEO_PORT_DEBUG_REPORT_INTERFACE;
typedef union _WHEA_ERROR_INJECTION_CAPABILITIES WHEA_ERROR_INJECTION_CAPABILITIES;
typedef struct _WWAN_DEVICE_SERVICE_SESSION_WRITE WWAN_DEVICE_SERVICE_SESSION_WRITE;
typedef struct _WmiMonitorDigitalVideoInputParams WmiMonitorDigitalVideoInputParams;
typedef struct _WmiQueryHardwareOffloadConfig_OUT WmiQueryHardwareOffloadConfig_OUT;
typedef struct _WmiQueryReceiveQueueParameters_IN WmiQueryReceiveQueueParameters_IN;
enum _CDROM_PERFORMANCE_EXCEPTION_TYPE {CdromNominalPerformance = 0x1,CdromEntirePerformanceList = 0x2,CdromPerformanceExceptionsOnly = 0x3,};
enum _CDROM_PERFORMANCE_TOLERANCE_TYPE {Cdrom10Nominal20Exceptions = 0x1,};
enum _DXGKMDT_OPM_ACP_PROTECTION_LEVEL {DXGKMDT_OPM_ACP_OFF = 0x0,DXGKMDT_OPM_ACP_LEVEL_ONE = 0x1,DXGKMDT_OPM_ACP_LEVEL_TWO = 0x2,DXGKMDT_OPM_ACP_LEVEL_THREE = 0x3,DXGKMDT_OPM_ACP_FORCE_ULONG = 0x7FFFFFFF,};
enum _DXGK_BUILDPAGINGBUFFER_OPERATION {DXGK_OPERATION_TRANSFER = 0x0,DXGK_OPERATION_FILL = 0x1,DXGK_OPERATION_DISCARD_CONTENT = 0x2,DXGK_OPERATION_READ_PHYSICAL = 0x3,DXGK_OPERATION_WRITE_PHYSICAL = 0x4,DXGK_OPERATION_MAP_APERTURE_SEGMENT = 0x5,DXGK_OPERATION_UNMAP_APERTURE_SEGMENT = 0x6,DXGK_OPERATION_SPECIAL_LOCK_TRANSFER = 0x7,DXGK_OPERATION_VIRTUAL_TRANSFER = 0x8,DXGK_OPERATION_VIRTUAL_FILL = 0x9,DXGK_OPERATION_INIT_CONTEXT_RESOURCE = 0xA,};
enum _HAL_DMA_CRASH_DUMP_REGISTER_TYPE {HalDmaCrashDumpRegisterSet1 = 0x0,HalDmaCrashDumpRegisterSet2 = 0x1,HalDmaCrashDumpRegisterSetMax = 0x2,};
struct _PCI_EXPRESS_ARI_CONTROL_REGISTER {unsigned short MfvcFunctionGroupsEnable : 1;unsigned short AcsFunctionGroupsEnable : 1;unsigned short Reserved1 : 2;unsigned short FunctionGroup : 3;unsigned short Reserved2 : 9;};
typedef struct _ACPI_ENUM_CHILDREN_OUTPUT_BUFFER ACPI_ENUM_CHILDREN_OUTPUT_BUFFER;
typedef struct _ATM_TRANSIT_NETWORK_SELECTION_IE ATM_TRANSIT_NETWORK_SELECTION_IE;
typedef struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO D3DDDI_SYNCHRONIZATIONOBJECTINFO;
struct D3DKMDT_HVIDEOPRESENTSOURCESET__ {int unused;};
struct D3DKMDT_HVIDEOPRESENTTARGETSET__ {int unused;};
typedef struct _D3DKMDT_SHAREDPRIMARYSURFACEDATA D3DKMDT_SHAREDPRIMARYSURFACEDATA;
typedef struct _DEVICEDUMP_RESTRICTED_SUBSECTION DEVICEDUMP_RESTRICTED_SUBSECTION;
typedef struct _DISPLAYID_DETAILED_TIMING_TYPE_I DISPLAYID_DETAILED_TIMING_TYPE_I;
typedef struct _DOT11_CURRENT_OFFLOAD_CAPABILITY DOT11_CURRENT_OFFLOAD_CAPABILITY;
typedef struct _DOT11_HOPPING_PATTERN_ENTRY_LIST DOT11_HOPPING_PATTERN_ENTRY_LIST;
typedef struct _DOT11_INCOMING_ASSOC_DECISION_V2 DOT11_INCOMING_ASSOC_DECISION_V2;
typedef struct _DOT11_SUPPORTED_DATA_RATES_VALUE DOT11_SUPPORTED_DATA_RATES_VALUE;
typedef struct _DOT11_WFD_DISCOVER_DEVICE_FILTER DOT11_WFD_DISCOVER_DEVICE_FILTER;
typedef struct _DOT11_WFD_GROUP_START_PARAMETERS DOT11_WFD_GROUP_START_PARAMETERS;
typedef struct _DXGKARG_RECOMMENDFUNCTIONALVIDPN DXGKARG_RECOMMENDFUNCTIONALVIDPN;
typedef struct _DXGKARG_SETVIDPNSOURCEVISIBILITY DXGKARG_SETVIDPNSOURCEVISIBILITY;
typedef struct _DXGKMDT_OPM_ACTUAL_OUTPUT_FORMAT DXGKMDT_OPM_ACTUAL_OUTPUT_FORMAT;
typedef struct _DXGKMDT_OPM_CONFIGURE_PARAMETERS DXGKMDT_OPM_CONFIGURE_PARAMETERS;
typedef struct _DXGKMDT_OPM_ENCRYPTED_PARAMETERS DXGKMDT_OPM_ENCRYPTED_PARAMETERS;
typedef struct _DXGKMDT_OPM_STANDARD_INFORMATION DXGKMDT_OPM_STANDARD_INFORMATION;
typedef struct _DXGK_SETVIDPNSOURCEADDRESS_FLAGS DXGK_SETVIDPNSOURCEADDRESS_FLAGS;
typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION FILE_FS_VOLUME_FLAGS_INFORMATION;
typedef struct _FILE_REMOTE_PROTOCOL_INFORMATION FILE_REMOTE_PROTOCOL_INFORMATION;
typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY IMAGE_ARM_RUNTIME_FUNCTION_ENTRY;
typedef struct _INTERNAL_I8042_START_INFORMATION INTERNAL_I8042_START_INFORMATION;
typedef struct _IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH;
typedef struct _KBUGCHECK_REASON_CALLBACK_RECORD KBUGCHECK_REASON_CALLBACK_RECORD;
typedef struct _KBUGCHECK_SECONDARY_DUMP_DATA_EX KBUGCHECK_SECONDARY_DUMP_DATA_EX;
typedef struct _6B8E9FF8FB4DE59DE7DA4092DA92354D KSNODEPROPERTY_AUDIO_3D_LISTENER;
typedef struct _0CB766F7CF0963C13F728D1318E296EA KSPROPERTY_CAMERACONTROL_FLASH_S;
typedef struct _BB313D54CF23017BA1FEE07E0A69AC13 KSPROPERTY_CAMERACONTROL_NODE_S2;
typedef struct _726D8FC833E61F5DB3AAF636888074FD KSPROPERTY_TUNER_STANDARD_MODE_S;
typedef struct _D86AEF8896DDE0BDF211E48E78F8BB6F KSPROPERTY_VIDEODECODER_STATUS_S;
typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY LOOKUP_STREAM_FROM_CLUSTER_ENTRY;
typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT LOOKUP_STREAM_FROM_CLUSTER_INPUT;
enum MACRO_ClearPathHealthCounters_IN {ClearPathHealthCounters_IN_PathID_ID = 1,};
enum MACRO_CmResourceTypeMfCardConfig {CmResourceTypeMfCardConfig = 131,};
enum MACRO_CmResourceTypePcCardConfig {CmResourceTypePcCardConfig = 130,};
enum MACRO_DeleteInitiatorNodeName_IN {DeleteInitiatorNodeName_IN_DeletedInitiatorName_ID = 1,DeleteInitiatorNodeName_OUT_Status_ID = 2,};
enum MACRO_DsmSetLoadBalancePolicy_IN {DsmSetLoadBalancePolicy_IN_LoadBalancePolicy_ID = 1,DsmSetLoadBalancePolicy_OUT_Status_ID = 2,};
enum MACRO_GetFcpPersistentBinding_IN {GetFcpPersistentBinding_IN_InEntryCount_ID = 1,GetFcpPersistentBinding_OUT_HBAStatus_ID = 2,GetFcpPersistentBinding_OUT_TotalEntryCount_ID = 3,GetFcpPersistentBinding_OUT_OutEntryCount_ID = 4,GetFcpPersistentBinding_OUT_Entry_ID = 5,};
enum MACRO_ISCSI_ConnectionStaticInfo {ISCSI_ConnectionStaticInfo_UniqueConnectionId_ID = 1,ISCSI_ConnectionStaticInfo_CID_ID = 2,};
enum MACRO_OID_DOT11_ENUM_ASSOCIATION {OID_DOT11_ENUM_ASSOCIATION_INFO = 234946957,};
enum MACRO_WmiMonitorConnectionParams {WmiMonitorConnectionParams_VideoOutputTechnology_ID = 1,WmiMonitorAnalogVideoInputParams_SignalLevelStandard_ID = 1,WmiMonitorAnalogVideoInputParams_SetupExpected_ID = 2,WmiMonitorAnalogVideoInputParams_SeparateSyncsSupported_ID = 3,WmiMonitorAnalogVideoInputParams_CompositeSyncSupported_ID = 4,WmiMonitorAnalogVideoInputParams_SyncOnGreenVideoSupported_ID = 5,WmiMonitorAnalogVideoInputParams_SerrationOfVsyncRequired_ID = 6,WmiMonitorDigitalVideoInputParams_IsDFP1xCompatible_ID = 1,WmiMonitorColorXYZinCIE_X_ID = 1,WmiMonitorColorXYZinCIE_Y_ID = 2,WmiMonitorColorCharacteristics_Red_ID = 1,WmiMonitorColorCharacteristics_Blue_ID = 2,WmiMonitorColorCharacteristics_Green_ID = 3,WmiMonitorColorCharacteristics_DefaultWhite_ID = 4,VideoModeDescriptor_PixelClockRate_ID = 1,VideoModeDescriptor_VerticalRefreshRateNumerator_ID = 2,VideoModeDescriptor_VerticalRefreshRateDenominator_ID = 3,VideoModeDescriptor_HorizontalRefreshRateNumerator_ID = 4,VideoModeDescriptor_HorizontalRefreshRateDenominator_ID = 5,VideoModeDescriptor_HorizontalActivePixels_ID = 6,VideoModeDescriptor_VerticalActivePixels_ID = 7,VideoModeDescriptor_HorizontalBlankingPixels_ID = 8,VideoModeDescriptor_VerticalBlankingPixels_ID = 9,VideoModeDescriptor_HorizontalSyncOffset_ID = 10,VideoModeDescriptor_VerticalSyncOffset_ID = 11,VideoModeDescriptor_HorizontalSyncPulseWidth_ID = 12,VideoModeDescriptor_VerticalSyncPulseWidth_ID = 13,VideoModeDescriptor_HorizontalImageSize_ID = 14,VideoModeDescriptor_VerticalImageSize_ID = 15,VideoModeDescriptor_HorizontalBorder_ID = 16,VideoModeDescriptor_VerticalBorder_ID = 17,VideoModeDescriptor_IsInterlaced_ID = 18,VideoModeDescriptor_StereoModeType_ID = 19,VideoModeDescriptor_SyncSignalType_ID = 20,VideoModeDescriptor_IsSerrationRequired_ID = 21,VideoModeDescriptor_IsSyncOnRGB_ID = 22,VideoModeDescriptor_CompositePolarityType_ID = 23,VideoModeDescriptor_VerticalPolarityType_ID = 24,VideoModeDescriptor_HorizontalPolarityType_ID = 25,VideoModeDescriptor_VideoStandardType_ID = 26,VideoModeDescriptor_Origin_ID = 27,VideoModeDescriptor_TimingType_ID = 28,WmiMonitorListedSupportedSourceModes_NumOfMonitorSourceModes_ID = 1,WmiMonitorListedSupportedSourceModes_PreferredMonitorSourceModeIndex_ID = 2,WmiMonitorListedSupportedSourceModes_MonitorSourceModes_ID = 3,FrequencyRangeDescriptor_Origin_ID = 1,FrequencyRangeDescriptor_MinVSyncNumerator_ID = 2,FrequencyRangeDescriptor_MinVSyncDenominator_ID = 3,FrequencyRangeDescriptor_MaxVSyncNumerator_ID = 4,FrequencyRangeDescriptor_MaxVSyncDenominator_ID = 5,FrequencyRangeDescriptor_MinHSyncNumerator_ID = 6,FrequencyRangeDescriptor_MinHSyncDenominator_ID = 7,FrequencyRangeDescriptor_MaxHSyncNumerator_ID = 8,FrequencyRangeDescriptor_MaxHSyncDenominator_ID = 9,FrequencyRangeDescriptor_ConstraintType_ID = 10,FrequencyRangeDescriptor_ActiveWidth_ID = 11,FrequencyRangeDescriptor_ActiveHeight_ID = 12,FrequencyRangeDescriptor_MaxPixelRate_ID = 13,WmiMonitorListedFrequencyRanges_NumOfMonitorFreqRanges_ID = 1,WmiMonitorListedFrequencyRanges_MonitorFreqRanges_ID = 2,KernelPerfState_Frequency_ID = 1,KernelPerfState_Power_ID = 2,KernelPerfState_PercentFrequency_ID = 3,KernelPerfState_IncreaseLevel_ID = 4,KernelPerfState_DecreaseLevel_ID = 5,KernelPerfState_Type_ID = 6,KernelPerfState_IncreaseTime_ID = 7,KernelPerfState_DecreaseTime_ID = 8,KernelPerfState_Control_ID = 9,KernelPerfState_Status_ID = 10,KernelPerfState_HitCount_ID = 11,KernelPerfState_Reserved1_ID = 12,KernelPerfState_Reserved2_ID = 13,KernelPerfState_Reserved3_ID = 14,KernelPerfStates_Count_ID = 1,KernelPerfStates_MaxFrequency_ID = 2,KernelPerfStates_CurrentState_ID = 3,KernelPerfStates_MaxPerfState_ID = 4,KernelPerfStates_MinPerfState_ID = 5,KernelPerfStates_LowestPerfState_ID = 6,KernelPerfStates_ThermalConstraint_ID = 7,KernelPerfStates_BusyAdjThreshold_ID = 8,KernelPerfStates_PolicyType_ID = 9,KernelPerfStates_Type_ID = 10,KernelPerfStates_Reserved_ID = 11,KernelPerfStates_TimerInterval_ID = 12,KernelPerfStates_TargetProcessors_ID = 13,KernelPerfStates_PStateHandler_ID = 14,KernelPerfStates_PStateContext_ID = 15,KernelPerfStates_TStateHandler_ID = 16,KernelPerfStates_TStateContext_ID = 17,KernelPerfStates_FeedbackHandler_ID = 18,KernelPerfStates_Reserved1_ID = 19,KernelPerfStates_Reserved2_ID = 20,KernelPerfStates_State_ID = 21,KernelIdleState_Latency_ID = 1,KernelIdleState_Power_ID = 2,KernelIdleState_TimeCheck_ID = 3,KernelIdleState_PromotePercent_ID = 4,KernelIdleState_DemotePercent_ID = 5,KernelIdleState_StateType_ID = 6,KernelIdleState_Reserved_ID = 7,KernelIdleState_StateFlags_ID = 8,KernelIdleState_Context_ID = 9,KernelIdleState_IdleHandler_ID = 10,KernelIdleState_Reserved1_ID = 11,KernelIdleStates_Type_ID = 1,KernelIdleStates_Count_ID = 2,KernelIdleStates_TargetState_ID = 3,KernelIdleStates_OldState_ID = 4,KernelIdleStates_TargetProcessors_ID = 5,KernelIdleStates_State_ID = 6,KernelPerfStateChange_State_ID = 1,KernelPerfStateChange_Status_ID = 2,KernelPerfStateChange_Latency_ID = 3,KernelPerfStateChange_Speed_ID = 4,KernelPerfStateChange_Processor_ID = 5,KernelPerfStateDomainChange_State_ID = 1,KernelPerfStateDomainChange_Latency_ID = 2,KernelPerfStateDomainChange_Speed_ID = 3,KernelPerfStateDomainChange_Processors_ID = 4,KernelIdleStateChange_NewState_ID = 1,KernelIdleStateChange_OldState_ID = 2,KernelIdleStateChange_Processors_ID = 3,KernelThermalConstraintChange_ThermalConstraint_ID = 1,KernelThermalConstraintChange_Processors_ID = 2,IdleStateAccounting_IdleTransitions_ID = 1,IdleStateAccounting_FailedTransitions_ID = 2,IdleStateAccounting_InvalidBucketIndex_ID = 3,IdleStateAccounting_TotalTime_ID = 4,IdleStateAccounting_IdleTimeBuckets_ID = 5,IdleAccounting_StateCount_ID = 1,IdleAccounting_TotalTransitions_ID = 2,IdleAccounting_ResetCount_ID = 3,IdleAccounting_StartTime_ID = 4,IdleAccounting_State_ID = 5,IdleStateBucketEx_TotalTimeUs_ID = 1,IdleStateBucketEx_MinTimeUs_ID = 2,IdleStateBucketEx_MaxTimeUs_ID = 3,IdleStateBucketEx_Count_ID = 4,IdleStateAccountingEx_TotalTime_ID = 1,IdleStateAccountingEx_IdleTransitions_ID = 2,IdleStateAccountingEx_FailedTransitions_ID = 3,IdleStateAccountingEx_InvalidBucketIndex_ID = 4,IdleStateAccountingEx_MinTimeUs_ID = 5,IdleStateAccountingEx_MaxTimeUs_ID = 6,IdleStateAccountingEx_IdleTimeBuckets_ID = 7,IdleAccountingEx_StateCount_ID = 1,IdleAccountingEx_TotalTransitions_ID = 2,IdleAccountingEx_ResetCount_ID = 3,IdleAccountingEx_StartTime_ID = 4,IdleAccountingEx_State_ID = 5,KernelThermalPolicyChange_CoolingMode_ID = 1,KernelThermalPolicyChange_Processors_ID = 2,ProcessorPerformance_frequency_ID = 1,ProcessorPerformance_power_ID = 2,ProcessorPerformance_percentage_ID = 3,};
enum MACRO_WmiSetHDSplitParameters_IN {WmiSetHDSplitParameters_IN_MethodHeader_ID = 1,WmiSetHDSplitParameters_IN_HDSplitParameters_ID = 2,WmiSetHDSplitParameters_OUT_OutputInfo_ID = 3,};
enum MACRO_WmiSetTcpOffloadParameters {WmiSetTcpOffloadParameters = 1,};
typedef struct _MODE_CDROM_WRITE_PARAMETERS_PAGE MODE_CDROM_WRITE_PARAMETERS_PAGE;
typedef struct _MPIO_PASS_THROUGH_PATH_DIRECT_EX MPIO_PASS_THROUGH_PATH_DIRECT_EX;
typedef struct _MSFC_NPIVLUNMappingInformationEx MSFC_NPIVLUNMappingInformationEx;
typedef struct _MSMCAEvent_PlatformSpecificError MSMCAEvent_PlatformSpecificError;
typedef struct _MSNdis_AtmHardwareCurrentAddress MSNdis_AtmHardwareCurrentAddress;
typedef struct _MSNdis_FddiShortPermanentAddress MSNdis_FddiShortPermanentAddress;
typedef struct _MSNdis_NetworkDirectCapabilities MSNdis_NetworkDirectCapabilities;
typedef struct _MSNdis_ReceiveFilterCapabilities MSNdis_ReceiveFilterCapabilities;
typedef struct _MSNdis_StatusDot11Disassociation MSNdis_StatusDot11Disassociation;
typedef struct _MSNdis_StatusDot11PhyStateChange MSNdis_StatusDot11PhyStateChange;
typedef struct _MSNdis_StatusDot11TkipmicFailure MSNdis_StatusDot11TkipmicFailure;
typedef struct _MSNdis_TokenRingCurrentRingState MSNdis_TokenRingCurrentRingState;
typedef struct _MSNdis_TokenRingPermanentAddress MSNdis_TokenRingPermanentAddress;
typedef struct _MSNdis_WmiIPSecOffloadV1_IPv4ESP MSNdis_WmiIPSecOffloadV1_IPv4ESP;
typedef struct _MSV1_0_GETCHALLENRESP_REQUEST_V1 MSV1_0_GETCHALLENRESP_REQUEST_V1;
typedef struct _MSiSCSI_InitiatorLoginStatistics MSiSCSI_InitiatorLoginStatistics;
typedef struct _NDIS_802_11_AUTHENTICATION_EVENT NDIS_802_11_AUTHENTICATION_EVENT;
typedef struct _NDIS_802_11_PMKID_CANDIDATE_LIST NDIS_802_11_PMKID_CANDIDATE_LIST;
typedef struct _NDIS_CO_CLIENT_OPTIONAL_HANDLERS NDIS_CO_CLIENT_OPTIONAL_HANDLERS;
typedef struct _NDIS_IF_PROVIDER_CHARACTERISTICS NDIS_IF_PROVIDER_CHARACTERISTICS;
typedef union _NDIS_MINIPORT_ADAPTER_ATTRIBUTES NDIS_MINIPORT_ADAPTER_ATTRIBUTES;
typedef struct _NDIS_MINIPORT_CO_CHARACTERISTICS NDIS_MINIPORT_CO_CHARACTERISTICS;
typedef struct _NDIS_MINIPORT_RESTART_PARAMETERS NDIS_MINIPORT_RESTART_PARAMETERS;
typedef struct _NDIS_PROTOCOL_CO_CHARACTERISTICS NDIS_PROTOCOL_CO_CHARACTERISTICS;
typedef struct _NDIS_PROTOCOL_RESTART_PARAMETERS NDIS_PROTOCOL_RESTART_PARAMETERS;
typedef struct _NDIS_RECEIVE_FILTER_CAPABILITIES NDIS_RECEIVE_FILTER_CAPABILITIES;
typedef struct _NDIS_RECEIVE_THROTTLE_PARAMETERS NDIS_RECEIVE_THROTTLE_PARAMETERS;
typedef struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO NDIS_TCP_IP_CHECKSUM_PACKET_INFO;
typedef struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_COMMAND NDIS_WWAN_DEVICE_SERVICE_COMMAND;
typedef struct _NDK_OBJECT_HEADER_RESERVED_BLOCK NDK_OBJECT_HEADER_RESERVED_BLOCK;
typedef struct _NETWORK_APP_INSTANCE_ECP_CONTEXT NETWORK_APP_INSTANCE_ECP_CONTEXT;
typedef struct _NOTIFICATION_EVENT_STATUS_HEADER NOTIFICATION_EVENT_STATUS_HEADER;
typedef struct _OB_PRE_CREATE_HANDLE_INFORMATION OB_PRE_CREATE_HANDLE_INFORMATION;
typedef struct _ACPI_ENUM_CHILDREN_INPUT_BUFFER *PACPI_ENUM_CHILDREN_INPUT_BUFFER;
typedef struct _APPLICATIONLAUNCH_SETTING_VALUE *PAPPLICATIONLAUNCH_SETTING_VALUE;
typedef struct _ARBITER_ADD_RESERVED_PARAMETERS *PARBITER_ADD_RESERVED_PARAMETERS;
typedef struct _CHANNEL_CONFIG_RESULTS_ENHANCED *PCHANNEL_CONFIG_RESULTS_ENHANCED;
typedef struct _PCI_EXPRESS_ARI_CONTROL_REGISTER PCI_EXPRESS_ARI_CONTROL_REGISTER;
typedef union _PCI_EXPRESS_LINK_STATUS_REGISTER PCI_EXPRESS_LINK_STATUS_REGISTER;
typedef union _PCI_EXPRESS_ROOT_STATUS_REGISTER PCI_EXPRESS_ROOT_STATUS_REGISTER;
typedef union _PCI_EXPRESS_SEC_AER_CAPABILITIES PCI_EXPRESS_SEC_AER_CAPABILITIES;
typedef union _PCI_EXPRESS_SLOT_STATUS_REGISTER PCI_EXPRESS_SLOT_STATUS_REGISTER;
typedef struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY PCI_ROOT_BUS_HARDWARE_CAPABILITY;
typedef struct _CLASS_QUERY_WMI_REGINFO_EX_LIST *PCLASS_QUERY_WMI_REGINFO_EX_LIST;
typedef struct _CO_AF_TAPI_MAKE_CALL_PARAMETERS *PCO_AF_TAPI_MAKE_CALL_PARAMETERS;
typedef struct _CSRT_RESOURCE_DESCRIPTOR_HEADER *PCSRT_RESOURCE_DESCRIPTOR_HEADER;
typedef struct _CSV_DOWN_LEVEL_OPEN_ECP_CONTEXT *PCSV_DOWN_LEVEL_OPEN_ECP_CONTEXT;
typedef struct _DOT11_CAN_SUSTAIN_AP_PARAMETERS *PDOT11_CAN_SUSTAIN_AP_PARAMETERS;
typedef struct _DOT11_DISASSOCIATE_PEER_REQUEST *PDOT11_DISASSOCIATE_PEER_REQUEST;
typedef struct DOT11_DISASSOCIATION_PARAMETERS *PDOT11_DISASSOCIATION_PARAMETERS;
typedef struct _DOT11_OFFLOAD_NETWORK_LIST_INFO *PDOT11_OFFLOAD_NETWORK_LIST_INFO;
typedef struct _DOT11_OPERATION_MODE_CAPABILITY *PDOT11_OPERATION_MODE_CAPABILITY;
typedef struct _DOT11_REG_DOMAINS_SUPPORT_VALUE *PDOT11_REG_DOMAINS_SUPPORT_VALUE;
typedef struct _DOT11_WFD_CONFIGURATION_TIMEOUT *PDOT11_WFD_CONFIGURATION_TIMEOUT;
typedef struct _DOT11_WFD_DEVICE_LISTEN_CHANNEL *PDOT11_WFD_DEVICE_LISTEN_CHANNEL;
typedef struct _DOT11_WFD_GROUP_JOIN_PARAMETERS *PDOT11_WFD_GROUP_JOIN_PARAMETERS;
typedef struct _DSM_QuerySupportedLBPolicies_V2 *PDSM_QuerySupportedLBPolicies_V2;
typedef struct _DXGKMDT_OPM_GET_INFO_PARAMETERS *PDXGKMDT_OPM_GET_INFO_PARAMETERS;
typedef struct _DsmSetLoadBalancePolicyALUA_OUT *PDsmSetLoadBalancePolicyALUA_OUT;
typedef struct _FILE_FS_DRIVER_PATH_INFORMATION *PFILE_FS_DRIVER_PATH_INFORMATION;
typedef struct _FILE_FS_SECTOR_SIZE_INFORMATION *PFILE_FS_SECTOR_SIZE_INFORMATION;
typedef struct _FILE_MAILSLOT_QUERY_INFORMATION *PFILE_MAILSLOT_QUERY_INFORMATION;
typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER *PFILE_PIPE_CLIENT_PROCESS_BUFFER;
typedef struct _FILTER_VOLUME_BASIC_INFORMATION *PFILTER_VOLUME_BASIC_INFORMATION;
typedef struct _FIRMWARE_BOOT_PERFORMANCE_TABLE *PFIRMWARE_BOOT_PERFORMANCE_TABLE;
typedef struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_1 *PFSRTL_MUP_PROVIDER_INFO_LEVEL_1;
typedef struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_2 *PFSRTL_MUP_PROVIDER_INFO_LEVEL_2;
typedef struct _GetDiscoveredPortAttributes_OUT *PGetDiscoveredPortAttributes_OUT;
typedef struct _HAL_PROCESSOR_SPEED_INFO *PHAL_PROCESSOR_SPEED_INFORMATION;
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IO_CONNECT_INTERRUPT_PARAMETERS *PIO_CONNECT_INTERRUPT_PARAMETERS;
typedef struct _IO_INTERRUPT_MESSAGE_INFO_ENTRY *PIO_INTERRUPT_MESSAGE_INFO_ENTRY;
typedef struct _IPSEC_OFFLOAD_V2_ALGORITHM_INFO *PIPSEC_OFFLOAD_V2_ALGORITHM_INFO;
typedef union _IPV6_ROUTER_ADVERTISEMENT_FLAGS *PIPV6_ROUTER_ADVERTISEMENT_FLAGS;
typedef struct _tagKSAUDIOENGINE_BUFFER_SIZE_RANGE *PKSAUDIOENGINE_BUFFER_SIZE_RANGE;
typedef struct _DCC11EC9B9FE9CEA4F12FF4EAD85BA21 *PKSEVENTDATA_BDA_RF_TUNER_SCAN_S;
typedef struct _KSM_BDA_GDDS_SERVICEFROMTUNEXML *PKSM_BDA_GDDS_SERVICEFROMTUNEXML;
typedef struct _363B0F3181141CB904AEE47E3AB77A0E PKSPROPERTY_CAMERACONTROL_NODE_S;
typedef struct _BB313D54CF23017BA1FEE07E0A69AC13 *PKSPROPERTY_VIDEOPROCAMP_NODE_S2;
typedef struct _1260C3F85D445CE832F2313B24AA992C *PKSRTAUDIO_HWREGISTER_PROPERTY32;
typedef struct _1C72DF34A2E997094BDDFB37C83896FB *PKSSTREAMALLOCATOR_FUNCTIONTABLE;
typedef struct tagKS_DATAFORMAT_VIDEOINFO_PALETTE *PKS_DATAFORMAT_VIDEOINFO_PALETTE;
typedef struct _LOADER_PARTITION_INFORMATION_EX *PLOADER_PARTITION_INFORMATION_EX;
typedef struct _PMI_METERED_HARDWARE_INFORMATION PMI_METERED_HARDWARE_INFORMATION;
typedef struct _MRX_CALLDOWN_COMPLETION_CONTEXT_ *PMRX_CALLDOWN_COMPLETION_CONTEXT;
typedef struct _MSFC_VirtualFibrePortAttributes *PMSFC_VirtualFibrePortAttributes;
typedef struct _MSMCAEvent_MemoryHierarchyError *PMSMCAEvent_MemoryHierarchyError;
typedef struct _MSNdis_80211_AuthenticationMode *PMSNdis_80211_AuthenticationMode;
typedef struct _MSNdis_80211_InfrastructureMode *PMSNdis_80211_InfrastructureMode;
typedef struct _MSNdis_80211_TransmitPowerLevel *PMSNdis_80211_TransmitPowerLevel;
typedef struct _MSNdis_EthernetPermanentAddress *PMSNdis_EthernetPermanentAddress;
typedef struct _MSNdis_FddiLongPermanentAddress *PMSNdis_FddiLongPermanentAddress;
typedef struct _MSNdis_FddiShortMaximumListSize *PMSNdis_FddiShortMaximumListSize;
typedef struct _MSNdis_NetworkDirectAdapterInfo *PMSNdis_NetworkDirectAdapterInfo;
typedef struct _MSNdis_StatusPacketFilterChange *PMSNdis_StatusPacketFilterChange;
typedef struct _MSNdis_WmiIPSecOffloadV1_IPv4AH *PMSNdis_WmiIPSecOffloadV1_IPv4AH;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV1 *PMSNdis_WmiTcpLargeSendOffloadV1;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV2 *PMSNdis_WmiTcpLargeSendOffloadV2;
typedef struct _MSiSCSI_RedirectPortalInfoClass *PMSiSCSI_RedirectPortalInfoClass;
typedef struct _NDIS_802_11_NON_BCAST_SSID_LIST *PNDIS_802_11_NON_BCAST_SSID_LIST;
typedef struct _NDIS_NET_BUFFER_LIST_8021Q_INFO *PNDIS_NET_BUFFER_LIST_8021Q_INFO;
typedef struct _NDIS_RECEIVE_SCALE_CAPABILITIES *PNDIS_RECEIVE_SCALE_CAPABILITIES;
typedef struct _NDIS_RESTART_GENERAL_ATTRIBUTES *PNDIS_RESTART_GENERAL_ATTRIBUTES;
typedef struct _NDIS_TAPI_NEGOTIATE_EXT_VERSION *PNDIS_TAPI_NEGOTIATE_EXT_VERSION;
typedef struct _NDIS_WMI_PM_ACTIVE_CAPABILITIES *PNDIS_WMI_PM_ACTIVE_CAPABILITIES;
typedef struct _NDIS_WMI_TCP_CONNECTION_OFFLOAD *PNDIS_WMI_TCP_CONNECTION_OFFLOAD;
typedef struct _NDIS_WWAN_GET_VISIBLE_PROVIDERS *PNDIS_WWAN_GET_VISIBLE_PROVIDERS;
typedef struct _NDIS_WWAN_SET_SIGNAL_INDICATION *PNDIS_WWAN_SET_SIGNAL_INDICATION;
typedef struct _NDIS_WWAN_SET_SMS_CONFIGURATION *PNDIS_WWAN_SET_SMS_CONFIGURATION;
typedef struct _NET_BUFFER_LIST_POOL_PARAMETERS *PNET_BUFFER_LIST_POOL_PARAMETERS;
typedef struct _549F68C5033A6E8C170A3B5760D9B241 *PNLB_IOCTL_REGISTER_HOOK_REQUEST;
typedef struct _NOTIFICATION_OPERATIONAL_STATUS *PNOTIFICATION_OPERATIONAL_STATUS;
typedef struct _NPI_LLDP_CLIENT_CHARACTERISTICS *PNPI_LLDP_CLIENT_CHARACTERISTICS;
typedef struct _PCI_EXPRESS_ROOT_PORT_INTERFACE *PPCI_EXPRESS_ROOT_PORT_INTERFACE;
typedef struct _PCI_MSIX_TABLE_CONFIG_INTERFACE *PPCI_MSIX_TABLE_CONFIG_INTERFACE;
typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION *PPUBLIC_OBJECT_BASIC_INFORMATION;
typedef struct _REG_POST_CREATE_KEY_INFORMATION *PREG_POST_CREATE_KEY_INFORMATION;
typedef struct _REG_QUERY_VALUE_KEY_INFORMATION *PREG_QUERY_VALUE_KEY_INFORMATION;
typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX PROCESS_DEVICEMAP_INFORMATION_EX;
typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX PROCESS_HANDLE_TRACING_ENABLE_EX;
typedef struct _RemoveConnectionFromSession_OUT *PRemoveConnectionFromSession_OUT;
typedef struct _SFF_PROTOCOL_INTERFACE_STANDARD *PSFF_PROTOCOL_INTERFACE_STANDARD;
typedef struct _STORAGE_DEVICE_LAYOUT_SIGNATURE *PSTORAGE_DEVICE_LAYOUT_SIGNATURE;
typedef struct _SecPkgContext_SubjectAttributes *PSecPkgContext_SubjectAttributes;
typedef struct _USB_DEVICE_QUALIFIER_DESCRIPTOR *PUSB_DEVICE_QUALIFIER_DESCRIPTOR;
typedef struct _VBICODECFILTERING_CC_SUBSTREAMS *PVBICODECFILTERING_CC_SUBSTREAMS;
typedef struct _VBICODECFILTERING_STATISTICS_CC *PVBICODECFILTERING_STATISTICS_CC;
typedef struct _VIDEO_CHILD_STATE_CONFIGURATION *PVIDEO_CHILD_STATE_CONFIGURATION;
typedef struct _VIDEO_QUERY_PERFORMANCE_COUNTER *PVIDEO_QUERY_PERFORMANCE_COUNTER;
typedef struct _WmiGetMonitorRawEEdidV1Block_IN *PWmiGetMonitorRawEEdidV1Block_IN;
typedef struct _WmiMonitorListedFrequencyRanges *PWmiMonitorListedFrequencyRanges;
typedef struct _WmiQueryCurrentOffloadConfig_IN *PWmiQueryCurrentOffloadConfig_IN;
typedef struct _WmiQueryHDSplitCurrentConfig_IN *PWmiQueryHDSplitCurrentConfig_IN;
typedef struct _WmiQueryInterruptModeration_OUT *PWmiQueryInterruptModeration_OUT;
typedef struct _WmiQueryPhysicalMediumTypeEx_IN *PWmiQueryPhysicalMediumTypeEx_IN;
typedef struct _4BA00FD375EDE5DADBE8CAB814E48723 RECEIVE_TOKEN_INFORMATION_HEADER;
typedef struct _REG_DELETE_VALUE_KEY_INFORMATION REG_DELETE_VALUE_KEY_INFORMATION;
typedef struct _REG_KEY_HANDLE_CLOSE_INFORMATION REG_KEY_HANDLE_CLOSE_INFORMATION;
typedef struct _REG_SET_KEY_SECURITY_INFORMATION REG_SET_KEY_SECURITY_INFORMATION;
typedef struct _REMOTE_LINK_TRACKING_INFORMATION_ REMOTE_LINK_TRACKING_INFORMATION;
typedef struct _REQUEST_REMOTE_WAKE_NOTIFICATION REQUEST_REMOTE_WAKE_NOTIFICATION;
typedef struct _SAVED_DEVICE_INTERNAL_STATUS_LOG SAVED_DEVICE_INTERNAL_STATUS_LOG;
typedef struct _SCSI_SUPPORTED_CONTROL_TYPE_LIST SCSI_SUPPORTED_CONTROL_TYPE_LIST;
typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT STORAGE_ALLOCATE_BC_STREAM_INPUT;
typedef struct _STORAGE_DEVICE_UNIQUE_IDENTIFIER STORAGE_DEVICE_UNIQUE_IDENTIFIER;
typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT STORAGE_GET_BC_PROPERTIES_OUTPUT;
typedef struct _STOR_POFX_POWER_REQUIRED_CONTEXT STOR_POFX_POWER_REQUIRED_CONTEXT;
typedef struct _TA_ADDRESS_NETBIOS_UNICODE_EX_XP TA_NETBIOS_UNICODE_EX_ADDRESS_XP;
typedef struct _TIMER_SET_COALESCABLE_TIMER_INFO TIMER_SET_COALESCABLE_TIMER_INFO;
typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT TXFS_READ_BACKUP_INFORMATION_OUT;
typedef struct _USB_DEVICE_CAPABILITY_DESCRIPTOR USB_DEVICE_CAPABILITY_DESCRIPTOR;
typedef union _USB_HUB_30_PORT_REMOTE_WAKE_MASK USB_HUB_30_PORT_REMOTE_WAKE_MASK;
typedef struct _WATCHDOG_TIMER_INSTRUCTION_ENTRY WATCHDOG_TIMER_INSTRUCTION_ENTRY;
typedef struct _WHEA_XPF_PROCESSOR_ERROR_SECTION WHEA_XPF_PROCESSOR_ERROR_SECTION;
typedef struct _WMI_CHANGER_PROBLEM_DEVICE_ERROR WMI_CHANGER_PROBLEM_DEVICE_ERROR;
typedef struct _WSK_PROVIDER_CONNECTION_DISPATCH WSK_PROVIDER_CONNECTION_DISPATCH;
typedef struct _WWAN_DEVICE_SERVICE_SESSION_READ WWAN_DEVICE_SERVICE_SESSION_READ;
typedef struct _WmiGetMonitorRawEEdidV1Block_OUT WmiGetMonitorRawEEdidV1Block_OUT;
typedef struct _WmiMonitorAnalogVideoInputParams WmiMonitorAnalogVideoInputParams;
typedef struct _WmiQueryCurrentOffloadConfig_OUT WmiQueryCurrentOffloadConfig_OUT;
typedef struct _WmiQueryHDSplitCurrentConfig_OUT WmiQueryHDSplitCurrentConfig_OUT;
typedef struct _WmiQueryHardwareOffloadConfig_IN WmiQueryHardwareOffloadConfig_IN;
typedef struct _WmiQueryPhysicalMediumTypeEx_OUT WmiQueryPhysicalMediumTypeEx_OUT;
enum _D3DKMDT_MONITOR_DESCRIPTOR_TYPE {D3DKMDT_MDT_UNINITIALIZED = 0x0,D3DKMDT_MDT_VESA_EDID_V1_BASEBLOCK = 0x1,D3DKMDT_MDT_VESA_EDID_V1_BLOCKMAP = 0x2,D3DKMDT_MDT_OTHER = 0xFF,};
enum _D3DKMDT_PIXEL_VALUE_ACCESS_MODE {D3DKMDT_PVAM_UNINITIALIZED = 0x0,D3DKMDT_PVAM_DIRECT = 0x1,D3DKMDT_PVAM_PRESETPALETTE = 0x2,D3DKMDT_PVAM_SETTABLEPALETTE = 0x3,};
enum _D3DKMDT_STANDARDALLOCATION_TYPE {D3DKMDT_STANDARDALLOCATION_SHAREDPRIMARYSURFACE = 0x1,D3DKMDT_STANDARDALLOCATION_SHADOWSURFACE = 0x2,D3DKMDT_STANDARDALLOCATION_STAGINGSURFACE = 0x3,D3DKMDT_STANDARDALLOCATION_GDISURFACE = 0x4,};
enum _D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY {D3DKMDT_VOT_UNINITIALIZED = 0xFFFFFFFE,D3DKMDT_VOT_OTHER = 0xFFFFFFFF,D3DKMDT_VOT_HD15 = 0x0,D3DKMDT_VOT_SVIDEO = 0x1,D3DKMDT_VOT_COMPOSITE_VIDEO = 0x2,D3DKMDT_VOT_COMPONENT_VIDEO = 0x3,D3DKMDT_VOT_DVI = 0x4,D3DKMDT_VOT_HDMI = 0x5,D3DKMDT_VOT_LVDS = 0x6,D3DKMDT_VOT_D_JPN = 0x8,D3DKMDT_VOT_SDI = 0x9,D3DKMDT_VOT_DISPLAYPORT_EXTERNAL = 0xA,D3DKMDT_VOT_DISPLAYPORT_EMBEDDED = 0xB,D3DKMDT_VOT_UDI_EXTERNAL = 0xC,D3DKMDT_VOT_UDI_EMBEDDED = 0xD,D3DKMDT_VOT_SDTVDONGLE = 0xE,D3DKMDT_VOT_INTERNAL = 0x80000000,D3DKMDT_VOT_SVIDEO_4PIN = 0x1,D3DKMDT_VOT_SVIDEO_7PIN = 0x1,D3DKMDT_VOT_RF = 0x2,D3DKMDT_VOT_RCA_3COMPONENT = 0x3,D3DKMDT_VOT_BNC = 0x3,};
enum _DXGKMDT_OPM_PROTECTION_STANDARD {DXGKMDT_OPM_PROTECTION_STANDARD_OTHER = 0x80000000,DXGKMDT_OPM_PROTECTION_STANDARD_NONE = 0x0,DXGKMDT_OPM_PROTECTION_STANDARD_IEC61880_525I = 0x1,DXGKMDT_OPM_PROTECTION_STANDARD_IEC61880_2_525I = 0x2,DXGKMDT_OPM_PROTECTION_STANDARD_IEC62375_625P = 0x4,DXGKMDT_OPM_PROTECTION_STANDARD_EIA608B_525 = 0x8,DXGKMDT_OPM_PROTECTION_STANDARD_EN300294_625I = 0x10,DXGKMDT_OPM_PROTECTION_STANDARD_CEA805A_TYPEA_525P = 0x20,DXGKMDT_OPM_PROTECTION_STANDARD_CEA805A_TYPEA_750P = 0x40,DXGKMDT_OPM_PROTECTION_STANDARD_CEA805A_TYPEA_1125I = 0x80,DXGKMDT_OPM_PROTECTION_STANDARD_CEA805A_TYPEB_525P = 0x100,DXGKMDT_OPM_PROTECTION_STANDARD_CEA805A_TYPEB_750P = 0x200,DXGKMDT_OPM_PROTECTION_STANDARD_CEA805A_TYPEB_1125I = 0x400,DXGKMDT_OPM_PROTECTION_STANDARD_ARIBTRB15_525I = 0x800,DXGKMDT_OPM_PROTECTION_STANDARD_ARIBTRB15_525P = 0x1000,DXGKMDT_OPM_PROTECTION_STANDARD_ARIBTRB15_750P = 0x2000,DXGKMDT_OPM_PROTECTION_STANDARD_ARIBTRB15_1125I = 0x4000,};
enum _DXGK_CHILD_DEVICE_HPD_AWARENESS {HpdAwarenessUninitialized = 0x0,HpdAwarenessAlwaysConnected = 0x1,HpdAwarenessNone = 0x2,HpdAwarenessPolled = 0x3,HpdAwarenessInterruptible = 0x4,};
enum _FILTER_VOLUME_INFORMATION_CLASS {FilterVolumeBasicInformation = 0x0,FilterVolumeStandardInformation = 0x1,};
enum _IO_CONTAINER_NOTIFICATION_CLASS {IoSessionStateNotification = 0x0,IoMaxContainerNotificationClass = 0x1,};
enum _NDIS_802_11_AUTHENTICATION_MODE {Ndis802_11AuthModeOpen = 0x0,Ndis802_11AuthModeShared = 0x1,Ndis802_11AuthModeAutoSwitch = 0x2,Ndis802_11AuthModeWPA = 0x3,Ndis802_11AuthModeWPAPSK = 0x4,Ndis802_11AuthModeWPANone = 0x5,Ndis802_11AuthModeWPA2 = 0x6,Ndis802_11AuthModeWPA2PSK = 0x7,Ndis802_11AuthModeMax = 0x8,};
enum _RXCE_CONNECTION_CREATE_OPTIONS_ {RxCeSelectFirstSuccessfulTransport = 0x0,RxCeSelectBestSuccessfulTransport = 0x1,RxCeSelectAllSuccessfulTransports = 0x2,};
struct _SecPkgContext_SubjectAttributes {void *AttributeInfo;};
typedef struct _ACPI_ENUM_CHILDREN_INPUT_BUFFER ACPI_ENUM_CHILDREN_INPUT_BUFFER;
typedef struct _APPLICATIONLAUNCH_SETTING_VALUE APPLICATIONLAUNCH_SETTING_VALUE;
typedef struct _ARBITER_ADD_RESERVED_PARAMETERS ARBITER_ADD_RESERVED_PARAMETERS;
typedef struct _CHANNEL_CONFIG_RESULTS_ENHANCED CHANNEL_CONFIG_RESULTS_ENHANCED;
typedef struct _CLASS_QUERY_WMI_REGINFO_EX_LIST CLASS_QUERY_WMI_REGINFO_EX_LIST;
typedef struct _CO_AF_TAPI_MAKE_CALL_PARAMETERS CO_AF_TAPI_MAKE_CALL_PARAMETERS;
typedef struct _CSRT_RESOURCE_DESCRIPTOR_HEADER CSRT_RESOURCE_DESCRIPTOR_HEADER;
typedef struct _CSV_DOWN_LEVEL_OPEN_ECP_CONTEXT CSV_DOWN_LEVEL_OPEN_ECP_CONTEXT;
struct D3DKMDT_HMONITORDESCRIPTORSET__ {int unused;};
struct D3DKMDT_HMONITORSOURCEMODESET__ {int unused;};
typedef struct _D3DKMDT_MONITOR_FREQUENCY_RANGE D3DKMDT_MONITOR_FREQUENCY_RANGE;
typedef struct _DOT11_CAN_SUSTAIN_AP_PARAMETERS DOT11_CAN_SUSTAIN_AP_PARAMETERS;
typedef struct _DOT11_DISASSOCIATE_PEER_REQUEST DOT11_DISASSOCIATE_PEER_REQUEST;
typedef struct _DOT11_OFFLOAD_NETWORK_LIST_INFO DOT11_OFFLOAD_NETWORK_LIST_INFO;
typedef struct _DOT11_OPERATION_MODE_CAPABILITY DOT11_OPERATION_MODE_CAPABILITY;
typedef struct _DOT11_REG_DOMAINS_SUPPORT_VALUE DOT11_REG_DOMAINS_SUPPORT_VALUE;
typedef struct _DOT11_WFD_CONFIGURATION_TIMEOUT DOT11_WFD_CONFIGURATION_TIMEOUT;
typedef struct _DOT11_WFD_DEVICE_LISTEN_CHANNEL DOT11_WFD_DEVICE_LISTEN_CHANNEL;
typedef struct _DOT11_WFD_GROUP_JOIN_PARAMETERS DOT11_WFD_GROUP_JOIN_PARAMETERS;
typedef struct _DSM_QuerySupportedLBPolicies_V2 DSM_QuerySupportedLBPolicies_V2;
typedef struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA DXGKARGCB_NOTIFY_INTERRUPT_DATA;
typedef struct _DXGKARG_ENUMVIDPNCOFUNCMODALITY DXGKARG_ENUMVIDPNCOFUNCMODALITY;
typedef struct _DXGKMDT_OPM_GET_INFO_PARAMETERS DXGKMDT_OPM_GET_INFO_PARAMETERS;
typedef struct _DsmSetLoadBalancePolicyALUA_OUT DsmSetLoadBalancePolicyALUA_OUT;
typedef struct _FILE_FS_DRIVER_PATH_INFORMATION FILE_FS_DRIVER_PATH_INFORMATION;
typedef struct _FILE_FS_SECTOR_SIZE_INFORMATION FILE_FS_SECTOR_SIZE_INFORMATION;
typedef struct _FILE_MAILSLOT_QUERY_INFORMATION FILE_MAILSLOT_QUERY_INFORMATION;
typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER FILE_PIPE_CLIENT_PROCESS_BUFFER;
typedef struct _FILTER_VOLUME_BASIC_INFORMATION FILTER_VOLUME_BASIC_INFORMATION;
typedef struct _FIRMWARE_BOOT_PERFORMANCE_TABLE FIRMWARE_BOOT_PERFORMANCE_TABLE;
typedef struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_1 FSRTL_MUP_PROVIDER_INFO_LEVEL_1;
typedef struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_2 FSRTL_MUP_PROVIDER_INFO_LEVEL_2;
typedef struct _GetDiscoveredPortAttributes_OUT GetDiscoveredPortAttributes_OUT;
typedef struct _HAL_PROCESSOR_SPEED_INFO HAL_PROCESSOR_SPEED_INFORMATION;
struct IKoInitializeParentDeviceObject {struct IKoInitializeParentDeviceObjectVtbl *lpVtbl;};
typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING IMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IO_CONNECT_INTERRUPT_PARAMETERS IO_CONNECT_INTERRUPT_PARAMETERS;
typedef struct _IO_INTERRUPT_MESSAGE_INFO_ENTRY IO_INTERRUPT_MESSAGE_INFO_ENTRY;
typedef struct _IPSEC_OFFLOAD_V2_ALGORITHM_INFO IPSEC_OFFLOAD_V2_ALGORITHM_INFO;
typedef union _IPV6_ROUTER_ADVERTISEMENT_FLAGS IPV6_ROUTER_ADVERTISEMENT_FLAGS;
typedef struct _IRB_REQ_GET_SPEED_TOPOLOGY_MAPS IRB_REQ_GET_SPEED_TOPOLOGY_MAPS;
typedef struct _tagKSAUDIOENGINE_BUFFER_SIZE_RANGE KSAUDIOENGINE_BUFFER_SIZE_RANGE;
typedef struct _DCC11EC9B9FE9CEA4F12FF4EAD85BA21 KSEVENTDATA_BDA_RF_TUNER_SCAN_S;
typedef struct _KSM_BDA_GDDS_SERVICEFROMTUNEXML KSM_BDA_GDDS_SERVICEFROMTUNEXML;
typedef struct _363B0F3181141CB904AEE47E3AB77A0E KSPROPERTY_CAMERACONTROL_NODE_S;
typedef struct _BB313D54CF23017BA1FEE07E0A69AC13 KSPROPERTY_VIDEOPROCAMP_NODE_S2;
typedef struct _1260C3F85D445CE832F2313B24AA992C KSRTAUDIO_HWREGISTER_PROPERTY32;
typedef struct _1C72DF34A2E997094BDDFB37C83896FB KSSTREAMALLOCATOR_FUNCTIONTABLE;
typedef struct tagKS_DATAFORMAT_VIDEOINFO_PALETTE KS_DATAFORMAT_VIDEOINFO_PALETTE;
typedef struct _LOADER_PARTITION_INFORMATION_EX LOADER_PARTITION_INFORMATION_EX;
enum MACRO_AddConnectionToSession_IN {AddConnectionToSession_IN_UniqueAdapterId_ID = 1,AddConnectionToSession_IN_UniqueSessionId_ID = 2,AddConnectionToSession_IN_SecurityFlags_ID = 3,AddConnectionToSession_IN_PortNumber_ID = 4,AddConnectionToSession_IN_LoginOptions_ID = 5,AddConnectionToSession_IN_TargetPortal_ID = 6,AddConnectionToSession_IN_UsernameSize_ID = 7,AddConnectionToSession_IN_PasswordSize_ID = 8,AddConnectionToSession_IN_KeySize_ID = 9,AddConnectionToSession_IN_Key_ID = 10,AddConnectionToSession_IN_Username_ID = 11,AddConnectionToSession_IN_Password_ID = 12,AddConnectionToSession_OUT_Status_ID = 13,AddConnectionToSession_OUT_UniqueConnectionId_ID = 14,};
enum MACRO_ClfsContainerInitializing {ClfsContainerInitializing = 0x1,ClfsContainerInactive = 0x2,ClfsContainerActive = 0x4,ClfsContainerActivePendingDelete = 0x8,ClfsContainerPendingArchive = 0x10,ClfsContainerPendingArchiveAndDelete = 0x20,};
enum MACRO_CmResourceTypeMemoryLarge {CmResourceTypeMemoryLarge = 7,CmResourceTypeNonArbitrated = 128,};
enum MACRO_DOT11_AVAILABLE_FREQUENCY {DOT11_AVAILABLE_FREQUENCY_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_SEND_GO_NEGOTIATION {DOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DRIVER_VERIFIER_IOMANAGER {DRIVER_VERIFIER_IOMANAGER_VIOLATION = 0xC9,};
enum MACRO_ENABLE_DISABLE_FP_POLLING {ENABLE_DISABLE_FP_POLLING_IN_Period_ID = 1,ENABLE_DISABLE_FP_POLLING_IN_Enable_ID = 2,};
enum MACRO_GetPortAttributesByWWN_IN {GetPortAttributesByWWN_IN_wwn_ID = 1,GetPortAttributesByWWN_OUT_HBAStatus_ID = 2,GetPortAttributesByWWN_OUT_PortAttributes_ID = 3,};
enum MACRO_MSNdis_EnumerateAdapterEx {MSNdis_EnumerateAdapterEx_EnumerateAdapter_ID = 1,};
enum MACRO_NDIS_PACKET_TYPE_DIRECTED {NDIS_PACKET_TYPE_DIRECTED = 0x1,NDIS_PACKET_TYPE_MULTICAST = 0x2,NDIS_PACKET_TYPE_ALL_MULTICAST = 0x4,NDIS_PACKET_TYPE_BROADCAST = 0x8,NDIS_PACKET_TYPE_SOURCE_ROUTING = 0x10,NDIS_PACKET_TYPE_PROMISCUOUS = 0x20,NDIS_PACKET_TYPE_SMT = 0x40,NDIS_PACKET_TYPE_ALL_LOCAL = 0x80,NDIS_PACKET_TYPE_GROUP = 0x1000,NDIS_PACKET_TYPE_ALL_FUNCTIONAL = 0x2000,NDIS_PACKET_TYPE_FUNCTIONAL = 0x4000,NDIS_PACKET_TYPE_MAC_FRAME = 0x8000,NDIS_PACKET_TYPE_NO_LOCAL = 0x10000,NDIS_RING_SIGNAL_LOSS = 0x8000,NDIS_RING_HARD_ERROR = 0x4000,NDIS_RING_SOFT_ERROR = 0x2000,NDIS_RING_TRANSMIT_BEACON = 0x1000,NDIS_RING_LOBE_WIRE_FAULT = 0x800,NDIS_RING_AUTO_REMOVAL_ERROR = 0x400,NDIS_RING_REMOVE_RECEIVED = 0x200,NDIS_RING_COUNTER_OVERFLOW = 0x100,NDIS_RING_SINGLE_STATION = 0x80,NDIS_RING_RING_RECOVERY = 0x40,NDIS_PROT_OPTION_ESTIMATED_LENGTH = 0x1,NDIS_PROT_OPTION_NO_LOOPBACK = 0x2,NDIS_PROT_OPTION_NO_RSVD_ON_RCVPKT = 0x4,NDIS_PROT_OPTION_SEND_RESTRICTED = 0x8,NDIS_MAC_OPTION_COPY_LOOKAHEAD_DATA = 0x1,NDIS_MAC_OPTION_RECEIVE_SERIALIZED = 0x2,NDIS_MAC_OPTION_TRANSFERS_NOT_PEND = 0x4,NDIS_MAC_OPTION_NO_LOOPBACK = 0x8,NDIS_MAC_OPTION_FULL_DUPLEX = 0x10,NDIS_MAC_OPTION_EOTX_INDICATION = 0x20,NDIS_MAC_OPTION_8021P_PRIORITY = 0x40,NDIS_MAC_OPTION_SUPPORTS_MAC_ADDRESS_OVERWRITE = 0x80,NDIS_MAC_OPTION_RECEIVE_AT_DPC = 0x100,NDIS_MAC_OPTION_8021Q_VLAN = 0x200,NDIS_MAC_OPTION_RESERVED = 0x80000000,NDIS_MEDIA_CAP_TRANSMIT = 0x1,NDIS_MEDIA_CAP_RECEIVE = 0x2,NDIS_CO_MAC_OPTION_DYNAMIC_LINK_SPEED = 0x1,NDIS_IF_MAX_STRING_SIZE = 0x100,NDIS_MAX_PHYS_ADDRESS_LENGTH = 0x20,NDIS_LINK_STATE_XMIT_LINK_SPEED_AUTO_NEGOTIATED = 0x1,NDIS_LINK_STATE_RCV_LINK_SPEED_AUTO_NEGOTIATED = 0x2,NDIS_LINK_STATE_DUPLEX_AUTO_NEGOTIATED = 0x4,NDIS_LINK_STATE_PAUSE_FUNCTIONS_AUTO_NEGOTIATED = 0x8,NDIS_LINK_STATE_REVISION_1 = 0x1,NDIS_LINK_PARAMETERS_REVISION_1 = 0x1,NDIS_OPER_STATE_REVISION_1 = 0x1,};
enum MACRO_OID_DOT11_DESIRED_COUNTRY {OID_DOT11_DESIRED_COUNTRY_OR_REGION_STRING = 234946969,OID_DOT11_PORT_STATE_NOTIFICATION = 234947226,};
enum MACRO_OID_DOT11_ENABLED_UNICAST {OID_DOT11_ENABLED_UNICAST_CIPHER_ALGORITHM = 234946951,};
enum MACRO_OID_DOT11_OFFLOAD_NETWORK {OID_DOT11_OFFLOAD_NETWORK_LIST = 0xE070103,};
enum MACRO_RemoveChapForPhysicalPort {RemoveChapForPhysicalPort = 2,};
enum MACRO_SetChapForPhysicalPort_IN {SetChapForPhysicalPort_IN_CHAP_ID = 2,SetChapForPhysicalPort_OUT_Status_ID = 1,};
enum MACRO_SetTunnelModeOuterAddress {SetTunnelModeOuterAddress = 4,};
enum MACRO_WmiQueryStatisticsInfo_IN {WmiQueryStatisticsInfo_IN_Header_ID = 1,WmiQueryStatisticsInfo_OUT_StatisticsInfo_ID = 2,};
enum MACRO_WmiSetInterruptModeration {WmiSetInterruptModeration = 1,};
typedef struct _MRX_CALLDOWN_COMPLETION_CONTEXT_ MRX_CALLDOWN_COMPLETION_CONTEXT;
typedef struct _MSFC_VirtualFibrePortAttributes MSFC_VirtualFibrePortAttributes;
typedef struct _MSMCAEvent_MemoryHierarchyError MSMCAEvent_MemoryHierarchyError;
typedef struct _MSNdis_80211_AuthenticationMode MSNdis_80211_AuthenticationMode;
typedef struct _MSNdis_80211_InfrastructureMode MSNdis_80211_InfrastructureMode;
typedef struct _MSNdis_80211_TransmitPowerLevel MSNdis_80211_TransmitPowerLevel;
typedef struct _MSNdis_EthernetPermanentAddress MSNdis_EthernetPermanentAddress;
typedef struct _MSNdis_FddiLongPermanentAddress MSNdis_FddiLongPermanentAddress;
typedef struct _MSNdis_FddiShortMaximumListSize MSNdis_FddiShortMaximumListSize;
typedef struct _MSNdis_NetworkDirectAdapterInfo MSNdis_NetworkDirectAdapterInfo;
typedef struct _MSNdis_StatusPacketFilterChange MSNdis_StatusPacketFilterChange;
typedef struct _MSNdis_WmiIPSecOffloadV1_IPv4AH MSNdis_WmiIPSecOffloadV1_IPv4AH;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV1 MSNdis_WmiTcpLargeSendOffloadV1;
typedef struct _MSNdis_WmiTcpLargeSendOffloadV2 MSNdis_WmiTcpLargeSendOffloadV2;
typedef struct _MSiSCSI_RedirectPortalInfoClass MSiSCSI_RedirectPortalInfoClass;
typedef struct _NDIS_802_11_NON_BCAST_SSID_LIST NDIS_802_11_NON_BCAST_SSID_LIST;
typedef struct _NDIS_NET_BUFFER_LIST_8021Q_INFO NDIS_NET_BUFFER_LIST_8021Q_INFO;
typedef struct _NDIS_RECEIVE_SCALE_CAPABILITIES NDIS_RECEIVE_SCALE_CAPABILITIES;
typedef struct _NDIS_RESTART_GENERAL_ATTRIBUTES NDIS_RESTART_GENERAL_ATTRIBUTES;
typedef struct _NDIS_TAPI_NEGOTIATE_EXT_VERSION NDIS_TAPI_NEGOTIATE_EXT_VERSION;
typedef struct _NDIS_WMI_PM_ACTIVE_CAPABILITIES NDIS_WMI_PM_ACTIVE_CAPABILITIES;
typedef struct _NDIS_WMI_TCP_CONNECTION_OFFLOAD NDIS_WMI_TCP_CONNECTION_OFFLOAD;
typedef struct _NDIS_WWAN_GET_VISIBLE_PROVIDERS NDIS_WWAN_GET_VISIBLE_PROVIDERS;
typedef struct _NDIS_WWAN_SET_SIGNAL_INDICATION NDIS_WWAN_SET_SIGNAL_INDICATION;
typedef struct _NDIS_WWAN_SET_SMS_CONFIGURATION NDIS_WWAN_SET_SMS_CONFIGURATION;
typedef struct _NET_BUFFER_LIST_POOL_PARAMETERS NET_BUFFER_LIST_POOL_PARAMETERS;
typedef struct _549F68C5033A6E8C170A3B5760D9B241 NLB_IOCTL_REGISTER_HOOK_REQUEST;
typedef struct _NOTIFICATION_OPERATIONAL_STATUS NOTIFICATION_OPERATIONAL_STATUS;
typedef struct _NPI_LLDP_CLIENT_CHARACTERISTICS NPI_LLDP_CLIENT_CHARACTERISTICS;
typedef struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX *PACPI_EVAL_INPUT_BUFFER_COMPLEX;
typedef struct _BDA_CAS_CHECK_ENTITLEMENTTOKEN *PBDA_CAS_CHECK_ENTITLEMENTTOKEN;
typedef struct _CHANGE_BUFFERING_STATE_REQUEST_ *PCHANGE_BUFFERING_STATE_REQUEST;
typedef struct _PCI_EXPRESS_ROOT_PORT_INTERFACE PCI_EXPRESS_ROOT_PORT_INTERFACE;
typedef struct _PCI_MSIX_TABLE_CONFIG_INTERFACE PCI_MSIX_TABLE_CONFIG_INTERFACE;
typedef struct _CLASSPNP_SCAN_FOR_SPECIAL_INFO *PCLASSPNP_SCAN_FOR_SPECIAL_INFO;
typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR *PCM_PARTIAL_RESOURCE_DESCRIPTOR;
typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK *PCM_PNP_BIOS_INSTALLATION_CHECK;
typedef struct _ClearMpioDiskHealthCounters_IN *PClearMpioDiskHealthCounters_IN;
typedef struct _DEDUP_CHUNK_INFORMATION_HASH32 *PDEDUP_CHUNK_INFORMATION_HASH32;
typedef struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR *PDEVICE_COPY_OFFLOAD_DESCRIPTOR;
typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR *PDEVICE_SEEK_PENALTY_DESCRIPTOR;
typedef struct _DOT11_AVAILABLE_FREQUENCY_LIST *PDOT11_AVAILABLE_FREQUENCY_LIST;
typedef struct DOT11_CIPHER_DEFAULT_KEY_VALUE *PDOT11_CIPHER_DEFAULT_KEY_VALUE;
typedef struct _DOT11_MANUFACTURING_TEST_SLEEP *PDOT11_MANUFACTURING_TEST_SLEEP;
typedef struct _DOT11_MD_CAPABILITY_ENTRY_LIST *PDOT11_MD_CAPABILITY_ENTRY_LIST;
typedef struct DOT11_ROAMING_START_PARAMETERS *PDOT11_ROAMING_START_PARAMETERS;
typedef struct _DOT11_SUPPORTED_OFDM_FREQUENCY *PDOT11_SUPPORTED_OFDM_FREQUENCY;
typedef struct _DSM_NOTIFICATION_REQUEST_BLOCK *PDSM_NOTIFICATION_REQUEST_BLOCK;
typedef struct _DXGK_TIMED_OPERATION_INTERFACE *PDXGK_TIMED_OPERATION_INTERFACE;
typedef struct _DXGK_VIDEO_OUTPUT_CAPABILITIES *PDXGK_VIDEO_OUTPUT_CAPABILITIES;
typedef struct _DsmSetLoadBalancePolicyALUA_IN *PDsmSetLoadBalancePolicyALUA_IN;
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION *PFILE_ATTRIBUTE_TAG_INFORMATION;
typedef struct _FILE_REPARSE_POINT_INFORMATION *PFILE_REPARSE_POINT_INFORMATION;
typedef struct _FILE_STANDARD_LINK_INFORMATION *PFILE_STANDARD_LINK_INFORMATION;
typedef struct _GET_INJECTION_CAPABILITIES_OUT *PGET_INJECTION_CAPABILITIES_OUT;
typedef struct _GetDiscoveredPortAttributes_IN *PGetDiscoveredPortAttributes_IN;
typedef struct _IEEE1394_SCATTER_GATHER_HEADER *PIEEE1394_SCATTER_GATHER_HEADER;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef IMiniportStreamAudioEngineNode *PIMINIPORTStreamAudioEngineNode;
typedef struct _INDICATION_PARAMETERS_ENHANCED *PINDICATION_PARAMETERS_ENHANCED;
typedef struct _799828DB081536A4670A0BD2D36EB2B0 *PINET_PORT_RESERVATION_INSTANCE;
typedef struct _KEYBOARD_INDICATOR_TRANSLATION *PKEYBOARD_INDICATOR_TRANSLATION;
typedef struct _KEY_VIRTUALIZATION_INFORMATION *PKEY_VIRTUALIZATION_INFORMATION;
typedef struct _2BB1A5364724F142E07EC8BC0AB4A355 *PKSAUDIO_MICROPHONE_COORDINATES;
typedef struct _KSM_BDA_USERACTIVITY_USEREASON *PKSM_BDA_USERACTIVITY_USEREASON;
typedef struct _D4D0762896814197118ADD898ABBFE52 *PKSPROPERTY_BDA_RF_TUNER_CAPS_S;
typedef struct _EA389285BB7D2C99CE0D2AD282BB3F14 *PKSPROPERTY_TUNER_SCAN_STATUS_S;
typedef struct _490AB8E779FD104DCCEC9F5E52960528 *PKSPROPERTY_VIDEOCOMPRESSION_S1;
typedef struct _B04A80E61A6C52E3FD4D22A5F125C77E *PKSPROPERTY_VIDEOCONTROL_CAPS_S;
typedef struct _CB16EFCEDA39FCD4D0BC1BDE67199271 *PKSPROPERTY_VIDEOCONTROL_MODE_S;
typedef struct _56FA1B9DDCE9D648FE900988960BAD6F *PKSPROPERTY_VIDEODECODER_CAPS_S;
typedef struct _363B0F3181141CB904AEE47E3AB77A0E *PKSPROPERTY_VIDEOPROCAMP_NODE_S;
typedef struct tagKS_DATAFORMAT_VIDEOINFOHEADER2 *PKS_DATAFORMAT_VIDEOINFOHEADER2;
typedef struct _MODE_DEVICE_CONFIGURATION_PAGE *PMODE_DEVICE_CONFIGURATION_PAGE;
typedef struct _MORE_PARALLEL_PORT_INFORMATION *PMORE_PARALLEL_PORT_INFORMATION;
typedef struct _MSFC_NPIVLUNMappingInformation *PMSFC_NPIVLUNMappingInformation;
typedef struct _MSNdis_80211_ConfigurationInfo *PMSNdis_80211_ConfigurationInfo;
typedef struct _MSNdis_FddiLongMaximumListSize *PMSNdis_FddiLongMaximumListSize;
typedef struct _MSNdis_FddiShortCurrentAddress *PMSNdis_FddiShortCurrentAddress;
typedef struct _MSNdis_ReceiveFilterParameters *PMSNdis_ReceiveFilterParameters;
typedef struct _MSNdis_StatusDot11RoamingStart *PMSNdis_StatusDot11RoamingStart;
typedef struct _MSNdis_StatusOperationalStatus *PMSNdis_StatusOperationalStatus;
typedef struct _MSNdis_StatusTaskOffloadChange *PMSNdis_StatusTaskOffloadChange;
typedef struct _MSNdis_TokenRingCurrentAddress *PMSNdis_TokenRingCurrentAddress;
typedef struct _MSNdis_TokenRingLastOpenStatus *PMSNdis_TokenRingLastOpenStatus;
typedef struct _MSNdis_WmiHDSplitCurrentConfig *PMSNdis_WmiHDSplitCurrentConfig;
typedef struct _MSNdis_WmiTcpConnectionOffload *PMSNdis_WmiTcpConnectionOffload;
typedef struct _MSNdis_WmiTcpIpChecksumOffload *PMSNdis_WmiTcpIpChecksumOffload;
typedef struct _MSV1_0_GETCHALLENRESP_RESPONSE *PMSV1_0_GETCHALLENRESP_RESPONSE;
typedef struct _MSV1_0_LM20_CHALLENGE_RESPONSE *PMSV1_0_LM20_CHALLENGE_RESPONSE;
typedef struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL *PMSV1_0_SUPPLEMENTAL_CREDENTIAL;
typedef struct _NDIS_FILTER_RESTART_PARAMETERS *PNDIS_FILTER_RESTART_PARAMETERS;
typedef struct _NDIS_MINIPORT_PAUSE_PARAMETERS *PNDIS_MINIPORT_PAUSE_PARAMETERS;
typedef struct _NDIS_PROTOCOL_PAUSE_PARAMETERS *PNDIS_PROTOCOL_PAUSE_PARAMETERS;
typedef struct _NDIS_RECEIVE_FILTER_INFO_ARRAY *PNDIS_RECEIVE_FILTER_INFO_ARRAY;
typedef struct _NDIS_RECEIVE_FILTER_PARAMETERS *PNDIS_RECEIVE_FILTER_PARAMETERS;
typedef struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V1 *PNDIS_TCP_LARGE_SEND_OFFLOAD_V1;
typedef struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2 *PNDIS_TCP_LARGE_SEND_OFFLOAD_V2;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_EVENT *PNDIS_WWAN_DEVICE_SERVICE_EVENT;
typedef struct _NDIS_WWAN_PACKET_SERVICE_STATE *PNDIS_WWAN_PACKET_SERVICE_STATE;
typedef struct _NDIS_WWAN_PROVISIONED_CONTEXTS *PNDIS_WWAN_PROVISIONED_CONTEXTS;
typedef struct _NOTIFICATION_MULTI_HOST_STATUS *PNOTIFICATION_MULTI_HOST_STATUS;
typedef struct _69F844921B1DE9364EE161E0CBB12E4A *PNTFS_FILE_RECORD_OUTPUT_BUFFER;
typedef struct _OFFLOAD_IPSEC_DELETE_UDPESP_SA *POFFLOAD_IPSEC_DELETE_UDPESP_SA;
typedef struct _PARALLEL_INTERRUPT_INFORMATION *PPARALLEL_INTERRUPT_INFORMATION;
typedef struct _PAR_DEVICE_ID_SIZE_INFORMATION *PPAR_DEVICE_ID_SIZE_INFORMATION;
typedef struct _PCI_DEVICE_PRESENCE_PARAMETERS *PPCI_DEVICE_PRESENCE_PARAMETERS;
typedef union _PCI_EXPRESS_ROOT_ERROR_COMMAND *PPCI_EXPRESS_ROOT_ERROR_COMMAND;
typedef union _PCI_EXPRESS_TPH_ST_TABLE_ENTRY *PPCI_EXPRESS_TPH_ST_TABLE_ENTRY;
typedef struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD *PPCI_ROOT_BUS_OSC_CONTROL_FIELD;
typedef struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD *PPCI_ROOT_BUS_OSC_SUPPORT_FIELD;
typedef struct _PHYSICAL_COUNTER_RESOURCE_LIST *PPHYSICAL_COUNTER_RESOURCE_LIST;
typedef struct _PORT_CONFIGURATION_INFORMATION *PPORT_CONFIGURATION_INFORMATION;
typedef struct _PROCESS_MITIGATION_ASLR_POLICY *PPROCESS_MITIGATION_ASLR_POLICY;
typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION *PPUBLIC_OBJECT_TYPE_INFORMATION;
typedef struct _REG_POST_OPERATION_INFORMATION *PREG_POST_OPERATION_INFORMATION;
typedef struct _REG_PRE_CREATE_KEY_INFORMATION *PREG_PRE_CREATE_KEY_INFORMATION;
typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT *PRTL_DYNAMIC_HASH_TABLE_CONTEXT;
typedef struct _RemoveConnectionFromSession_IN *PRemoveConnectionFromSession_IN;
typedef struct _SCSI_PASS_THROUGH_WITH_BUFFERS *PSCSI_PASS_THROUGH_WITH_BUFFERS;
typedef struct _SFFDISK_DEVICE_RPMB_DATA_FRAME *PSFFDISK_DEVICE_RPMB_DATA_FRAME;
typedef struct _STARTIO_PERFORMANCE_PARAMETERS *PSTARTIO_PERFORMANCE_PARAMETERS;
typedef struct _STORAGE_FAILURE_PREDICT_STATUS *PSTORAGE_FAILURE_PREDICT_STATUS;
typedef struct _STOR_POFX_COMPONENT_IDLE_STATE *PSTOR_POFX_COMPONENT_IDLE_STATE;
typedef struct _SecPkgContext_NegotiationInfoW *PSecPkgContext_NegotiationInfoW;
typedef struct _SecPkgCredentials_SSIProviderW *PSecPkgCredentials_SSIProviderW;
typedef struct _TOKEN_APPCONTAINER_INFORMATION *PTOKEN_APPCONTAINER_INFORMATION;
typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION PUBLIC_OBJECT_BASIC_INFORMATION;
typedef struct _pipe_config_descriptor *PUSBCAMD_Pipe_Config_Descriptor;
typedef struct _USB_BUS_INTERFACE_HUB_MINIDUMP *PUSB_BUS_INTERFACE_HUB_MINIDUMP;
typedef struct _USB_INTERFACE_POWER_DESCRIPTOR *PUSB_INTERFACE_POWER_DESCRIPTOR;
typedef struct _VBICAP_PROPERTIES_PROTECTION_S *PVBICAP_PROPERTIES_PROTECTION_S;
typedef struct _VIDEO_SHARE_MEMORY_INFORMATION *PVIDEO_SHARE_MEMORY_INFORMATION;
typedef struct _VIRTUAL_HW_INITIALIZATION_DATA *PVIRTUAL_HW_INITIALIZATION_DATA;
typedef union _WHEA_ERROR_RECORD_HEADER_FLAGS *PWHEA_ERROR_RECORD_HEADER_FLAGS;
typedef union _WHEA_GENERIC_ERROR_BLOCKSTATUS *PWHEA_GENERIC_ERROR_BLOCKSTATUS;
typedef union _WHEA_PCIEXPRESS_COMMAND_STATUS *PWHEA_PCIEXPRESS_COMMAND_STATUS;
typedef struct _WSK_CLIENT_CONNECTION_DISPATCH *PWSK_CLIENT_CONNECTION_DISPATCH;
typedef struct _WSK_PROVIDER_DATAGRAM_DISPATCH *PWSK_PROVIDER_DATAGRAM_DISPATCH;
typedef struct _WWAN_SERVICE_ACTIVATION_STATUS *PWWAN_SERVICE_ACTIVATION_STATUS;
typedef struct _WWAN_SUPPORTED_DEVICE_SERVICES *PWWAN_SUPPORTED_DEVICE_SERVICES;
typedef struct _WmiMonitorColorCharacteristics *PWmiMonitorColorCharacteristics;
typedef struct _WmiQueryInterruptModeration_IN *PWmiQueryInterruptModeration_IN;
typedef struct _WmiSetTcpOffloadParameters_OUT *PWmiSetTcpOffloadParameters_OUT;
typedef struct _REG_POST_CREATE_KEY_INFORMATION REG_POST_CREATE_KEY_INFORMATION;
typedef struct _REG_QUERY_VALUE_KEY_INFORMATION REG_QUERY_VALUE_KEY_INFORMATION;
typedef struct _RemoveConnectionFromSession_OUT RemoveConnectionFromSession_OUT;
typedef struct _SFF_PROTOCOL_INTERFACE_STANDARD SFF_PROTOCOL_INTERFACE_STANDARD;
typedef struct _STORAGE_DEVICE_LAYOUT_SIGNATURE STORAGE_DEVICE_LAYOUT_SIGNATURE;
typedef struct _SecPkgContext_SubjectAttributes SecPkgContext_SubjectAttributes;
typedef struct _USB_DEVICE_QUALIFIER_DESCRIPTOR USB_DEVICE_QUALIFIER_DESCRIPTOR;
typedef struct _VBICODECFILTERING_CC_SUBSTREAMS VBICODECFILTERING_CC_SUBSTREAMS;
typedef struct _VBICODECFILTERING_STATISTICS_CC VBICODECFILTERING_STATISTICS_CC;
typedef struct _VIDEO_CHILD_STATE_CONFIGURATION VIDEO_CHILD_STATE_CONFIGURATION;
typedef struct _VIDEO_QUERY_PERFORMANCE_COUNTER VIDEO_QUERY_PERFORMANCE_COUNTER;
typedef struct _WmiGetMonitorRawEEdidV1Block_IN WmiGetMonitorRawEEdidV1Block_IN;
typedef struct _WmiMonitorListedFrequencyRanges WmiMonitorListedFrequencyRanges;
typedef struct _WmiQueryCurrentOffloadConfig_IN WmiQueryCurrentOffloadConfig_IN;
typedef struct _WmiQueryHDSplitCurrentConfig_IN WmiQueryHDSplitCurrentConfig_IN;
typedef struct _WmiQueryInterruptModeration_OUT WmiQueryInterruptModeration_OUT;
typedef struct _WmiQueryPhysicalMediumTypeEx_IN WmiQueryPhysicalMediumTypeEx_IN;
enum _CDROM_PERFORMANCE_REQUEST_TYPE {CdromPerformanceRequest = 0x1,CdromWriteSpeedRequest = 0x2,};
enum _D3DKMDT_VIDPN_SOURCE_MODE_TYPE {D3DKMDT_RMT_UNINITIALIZED = 0x0,D3DKMDT_RMT_GRAPHICS = 0x1,D3DKMDT_RMT_TEXT = 0x2,D3DKMDT_RMT_GRAPHICS_STEREO = 0x3,D3DKMDT_RMT_GRAPHICS_STEREO_ADVANCED_SCAN = 0x4,};
enum _DEVICE_USAGE_NOTIFICATION_TYPE {DeviceUsageTypeUndefined = 0x0,DeviceUsageTypePaging = 0x1,DeviceUsageTypeHibernation = 0x2,DeviceUsageTypeDumpFile = 0x3,DeviceUsageTypeBoot = 0x4,DeviceUsageTypePostDisplay = 0x5,};
enum _DXGKDT_OPM_DVI_CHARACTERISTICS {DXGKMDT_OPM_DVI_CHARACTERISTIC_1_0 = 0x1,DXGKMDT_OPM_DVI_CHARACTERISTIC_1_1_OR_ABOVE = 0x2,DXGKMDT_OPM_DVI_CHARACTERISTICS_FORCE_ULONG = 0xFFFFFFFF,};
enum _DXGK_MONITOR_INTERFACE_VERSION {DXGK_MONITOR_INTERFACE_VERSION_UNINITIALIZED = 0x0,DXGK_MONITOR_INTERFACE_VERSION_V1 = 0x1,DXGK_MONITOR_INTERFACE_VERSION_V2 = 0x2,};
enum _INTERRUPT_SYNCHRONIZATION_MODE {InterruptSupportNone = 0x0,InterruptSynchronizeAll = 0x1,InterruptSynchronizePerMessage = 0x2,};
enum _IO_CONTAINER_INFORMATION_CLASS {IoSessionStateInformation = 0x0,IoMaxContainerInformationClass = 0x1,};
enum _IO_NOTIFICATION_EVENT_CATEGORY {EventCategoryReserved = 0x0,EventCategoryHardwareProfileChange = 0x1,EventCategoryDeviceInterfaceChange = 0x2,EventCategoryTargetDeviceChange = 0x3,};
struct _KEY_VIRTUALIZATION_INFORMATION {unsigned int VirtualizationCandidate : 1;unsigned int VirtualizationEnabled : 1;unsigned int VirtualTarget : 1;unsigned int VirtualStore : 1;unsigned int VirtualSource : 1;unsigned int Reserved : 27;};
enum _LINK_TRACKING_INFORMATION_TYPE {NtfsLinkTrackingInformation = 0x0,DfsLinkTrackingInformation = 0x1,};
enum _LOGICAL_PROCESSOR_RELATIONSHIP {RelationProcessorCore = 0x0,RelationNumaNode = 0x1,RelationCache = 0x2,RelationProcessorPackage = 0x3,RelationGroup = 0x4,RelationAll = 0xFFFF,};
enum _NDIS_HYPERVISOR_PARTITION_TYPE {NdisHypervisorPartitionTypeUnknown = 0x0,NdisHypervisorPartitionTypeMsHvParent = 0x1,NdisHypervisorPartitionMsHvChild = 0x2,NdisHypervisorPartitionTypeMax = 0x3,};
enum _NDIS_SUPPORTED_PAUSE_FUNCTIONS {NdisPauseFunctionsUnsupported = 0x0,NdisPauseFunctionsSendOnly = 0x1,NdisPauseFunctionsReceiveOnly = 0x2,NdisPauseFunctionsSendAndReceive = 0x3,NdisPauseFunctionsUnknown = 0x4,};
enum _NL_LINK_LOCAL_ADDRESS_BEHAVIOR {LinkLocalAlwaysOff = 0x0,LinkLocalDelayed = 0x1,LinkLocalAlwaysOn = 0x2,LinkLocalUnchanged = 0xFFFFFFFF,};
enum _PO_CS_DEVICE_NOTIFICATION_TYPE {PoCsDeviceNotificationStorage = 0x0,PoCsDeviceNotificationWiFi = 0x1,PoCsDeviceNotificationMbn = 0x2,PoCsDeviceNotificationAudio = 0x3,PoCsDeviceNotificationMaximum = 0x4,};
enum _RESOURCE_TRANSLATION_DIRECTION {TranslateChildToParent = 0x0,TranslateParentToChild = 0x1,};
enum _STREAMING_CONTROL_REQUEST_TYPE {CdromStreamingDisable = 0x1,CdromStreamingEnableForReadOnly = 0x2,CdromStreamingEnableForWriteOnly = 0x3,CdromStreamingEnableForReadWrite = 0x4,};
typedef struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX ACPI_EVAL_INPUT_BUFFER_COMPLEX;
typedef struct _BDA_CAS_CHECK_ENTITLEMENTTOKEN BDA_CAS_CHECK_ENTITLEMENTTOKEN;
typedef struct _CHANGE_BUFFERING_STATE_REQUEST_ CHANGE_BUFFERING_STATE_REQUEST;
typedef struct _CLASSPNP_SCAN_FOR_SPECIAL_INFO CLASSPNP_SCAN_FOR_SPECIAL_INFO;
typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR CM_PARTIAL_RESOURCE_DESCRIPTOR;
typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK CM_PNP_BIOS_INSTALLATION_CHECK;
typedef struct creative_fastspeech10format_tag CREATIVEFASTSPEECH10WAVEFORMAT;
typedef struct _ClearMpioDiskHealthCounters_IN ClearMpioDiskHealthCounters_IN;
typedef struct D3DKMDT_HVIDEOPRESENTSOURCESET__ *D3DKMDT_HVIDEOPRESENTSOURCESET;
typedef struct D3DKMDT_HVIDEOPRESENTTARGETSET__ *D3DKMDT_HVIDEOPRESENTTARGETSET;
typedef struct _DEDUP_CHUNK_INFORMATION_HASH32 DEDUP_CHUNK_INFORMATION_HASH32;
typedef struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR DEVICE_COPY_OFFLOAD_DESCRIPTOR;
typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR DEVICE_SEEK_PENALTY_DESCRIPTOR;
typedef struct _DOT11_AVAILABLE_FREQUENCY_LIST DOT11_AVAILABLE_FREQUENCY_LIST;
typedef struct _DOT11_MANUFACTURING_TEST_SLEEP DOT11_MANUFACTURING_TEST_SLEEP;
typedef struct _DOT11_MD_CAPABILITY_ENTRY_LIST DOT11_MD_CAPABILITY_ENTRY_LIST;
typedef struct _DOT11_SUPPORTED_OFDM_FREQUENCY DOT11_SUPPORTED_OFDM_FREQUENCY;
typedef struct _DSM_NOTIFICATION_REQUEST_BLOCK DSM_NOTIFICATION_REQUEST_BLOCK;
typedef struct _DXGKARG_QUERYVIDPNHWCAPABILITY DXGKARG_QUERYVIDPNHWCAPABILITY;
typedef struct _DXGKARG_RECOMMENDVIDPNTOPOLOGY DXGKARG_RECOMMENDVIDPNTOPOLOGY;
typedef struct _DXGK_ALLOCATIONGROUPDESCRIPTOR DXGK_ALLOCATIONGROUPDESCRIPTOR;
typedef struct _DXGK_MULITPLANE_OVERLAY_FILTER DXGK_MULTIPLANE_OVERLAY_FILTER;
typedef struct _DXGK_TIMED_OPERATION_INTERFACE DXGK_TIMED_OPERATION_INTERFACE;
typedef struct _DXGK_VIDEO_OUTPUT_CAPABILITIES DXGK_VIDEO_OUTPUT_CAPABILITIES;
typedef struct _DsmSetLoadBalancePolicyALUA_IN DsmSetLoadBalancePolicyALUA_IN;
typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION FILE_ATTRIBUTE_TAG_INFORMATION;
typedef struct _FILE_REPARSE_POINT_INFORMATION FILE_REPARSE_POINT_INFORMATION;
typedef struct _FILE_STANDARD_LINK_INFORMATION FILE_STANDARD_LINK_INFORMATION;
typedef struct _GET_INJECTION_CAPABILITIES_OUT GET_INJECTION_CAPABILITIES_OUT;
typedef struct _GetDiscoveredPortAttributes_IN GetDiscoveredPortAttributes_IN;
typedef struct _IEEE1394_SCATTER_GATHER_HEADER IEEE1394_SCATTER_GATHER_HEADER;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct IMiniportStreamAudioEngineNode {struct IMiniportStreamAudioEngineNodeVtbl *lpVtbl;};
typedef struct _INDICATION_PARAMETERS_ENHANCED INDICATION_PARAMETERS_ENHANCED;
typedef struct _799828DB081536A4670A0BD2D36EB2B0 INET_PORT_RESERVATION_INSTANCE;
typedef struct _IRB_REQ_ALLOCATE_ADDRESS_RANGE IRB_REQ_ALLOCATE_ADDRESS_RANGE;
typedef struct _IRB_REQ_BUS_RESET_NOTIFICATION IRB_REQ_BUS_RESET_NOTIFICATION;
typedef struct _IRB_REQ_ISOCH_ALLOCATE_CHANNEL IRB_REQ_ISOCH_ALLOCATE_CHANNEL;
typedef struct _KEYBOARD_INDICATOR_TRANSLATION KEYBOARD_INDICATOR_TRANSLATION;
typedef struct _KEY_VIRTUALIZATION_INFORMATION KEY_VIRTUALIZATION_INFORMATION;
typedef struct _2BB1A5364724F142E07EC8BC0AB4A355 KSAUDIO_MICROPHONE_COORDINATES;
typedef struct _KSM_BDA_USERACTIVITY_USEREASON KSM_BDA_USERACTIVITY_USEREASON;
typedef struct _D4D0762896814197118ADD898ABBFE52 KSPROPERTY_BDA_RF_TUNER_CAPS_S;
typedef struct _EA389285BB7D2C99CE0D2AD282BB3F14 KSPROPERTY_TUNER_SCAN_STATUS_S;
typedef struct _490AB8E779FD104DCCEC9F5E52960528 KSPROPERTY_VIDEOCOMPRESSION_S1;
typedef struct _B04A80E61A6C52E3FD4D22A5F125C77E KSPROPERTY_VIDEOCONTROL_CAPS_S;
typedef struct _CB16EFCEDA39FCD4D0BC1BDE67199271 KSPROPERTY_VIDEOCONTROL_MODE_S;
typedef struct _56FA1B9DDCE9D648FE900988960BAD6F KSPROPERTY_VIDEODECODER_CAPS_S;
typedef struct _363B0F3181141CB904AEE47E3AB77A0E KSPROPERTY_VIDEOPROCAMP_NODE_S;
typedef struct tagKS_DATAFORMAT_VIDEOINFOHEADER2 KS_DATAFORMAT_VIDEOINFOHEADER2;
enum MACRO_CO_E_FAILEDTOIMPERSONATE {CO_E_FAILEDTOIMPERSONATE = 0x80010123,CO_E_FAILEDTOGETSECCTX = 0x80010124,CO_E_FAILEDTOOPENTHREADTOKEN = 0x80010125,CO_E_FAILEDTOGETTOKENINFO = 0x80010126,CO_E_TRUSTEEDOESNTMATCHCLIENT = 0x80010127,CO_E_FAILEDTOQUERYCLIENTBLANKET = 0x80010128,CO_E_FAILEDTOSETDACL = 0x80010129,CO_E_ACCESSCHECKFAILED = 0x8001012A,CO_E_NETACCESSAPIFAILED = 0x8001012B,CO_E_WRONGTRUSTEENAMESYNTAX = 0x8001012C,CO_E_INVALIDSID = 0x8001012D,CO_E_CONVERSIONFAILED = 0x8001012E,CO_E_NOMATCHINGSIDFOUND = 0x8001012F,CO_E_LOOKUPACCSIDFAILED = 0x80010130,CO_E_NOMATCHINGNAMEFOUND = 0x80010131,CO_E_LOOKUPACCNAMEFAILED = 0x80010132,CO_E_SETSERLHNDLFAILED = 0x80010133,CO_E_FAILEDTOGETWINDIR = 0x80010134,CO_E_PATHTOOLONG = 0x80010135,CO_E_FAILEDTOGENUUID = 0x80010136,CO_E_FAILEDTOCREATEFILE = 0x80010137,CO_E_FAILEDTOCLOSEHANDLE = 0x80010138,CO_E_EXCEEDSYSACLLIMIT = 0x80010139,CO_E_ACESINWRONGORDER = 0x8001013A,CO_E_INCOMPATIBLESTREAMVERSION = 0x8001013B,CO_E_FAILEDTOOPENPROCESSTOKEN = 0x8001013C,CO_E_DECODEFAILED = 0x8001013D,CO_E_ACNOTINITIALIZED = 0x8001013F,CO_E_CANCEL_DISABLED = 0x80010140,};
enum MACRO_ClsContainerInitializing {ClsContainerInitializing = 0x1,ClsContainerInactive = 0x2,ClsContainerActive = 0x4,ClsContainerActivePendingDelete = 0x8,ClsContainerPendingArchive = 0x10,ClsContainerPendingArchiveAndDelete = 0x20,};
enum MACRO_CmResourceTypeConfigData {CmResourceTypeConfigData = 128,};
enum MACRO_CmResourceTypeConnection {CmResourceTypeConnection = 132,};
enum MACRO_DOT11_ASSOCIATION_PARAMS {DOT11_ASSOCIATION_PARAMS_REVISION_1 = 1,DOT11_MAX_NUM_OF_FRAGMENTS = 16,DOT11_PRIORITY_CONTENTION = 0,DOT11_PRIORITY_CONTENTION_FREE = 1,DOT11_SERVICE_CLASS_REORDERABLE_MULTICAST = 0,DOT11_SERVICE_CLASS_STRICTLY_ORDERED = 1,DOT11_FLAGS_80211B_SHORT_PREAMBLE = 1,DOT11_FLAGS_80211B_PBCC = 2,DOT11_FLAGS_80211B_CHANNEL_AGILITY = 4,DOT11_FLAGS_PS_ON = 8,DOT11_FLAGS_80211G_DSSS_OFDM = 16,DOT11_FLAGS_80211G_USE_PROTECTION = 32,DOT11_FLAGS_80211G_NON_ERP_PRESENT = 64,DOT11_FLAGS_80211G_BARKER_PREAMBLE_MODE = 128,DOT11_WME_PACKET = 256,DOT11_PHY_ATTRIBUTES_REVISION_1 = 1,DOT11_EXTSTA_ATTRIBUTES_SAFEMODE_OID_SUPPORTED = 1,DOT11_EXTSTA_ATTRIBUTES_SAFEMODE_CERTIFIED = 2,DOT11_EXTSTA_ATTRIBUTES_SAFEMODE_RESERVED = 12,DOT11_EXTSTA_ATTRIBUTES_REVISION_1 = 1,DOT11_EXTSTA_ATTRIBUTES_REVISION_2 = 2,DOT11_EXTSTA_ATTRIBUTES_REVISION_3 = 3,DOT11_SEND_CONTEXT_REVISION_1 = 1,DOT11_RECV_CONTEXT_REVISION_1 = 1,DOT11_STATUS_SUCCESS = 1,DOT11_STATUS_RETRY_LIMIT_EXCEEDED = 2,DOT11_STATUS_UNSUPPORTED_PRIORITY = 4,DOT11_STATUS_UNSUPPORTED_SERVICE_CLASS = 8,DOT11_STATUS_UNAVAILABLE_PRIORITY = 16,DOT11_STATUS_UNAVAILABLE_SERVICE_CLASS = 32,DOT11_STATUS_XMIT_MSDU_TIMER_EXPIRED = 64,DOT11_STATUS_UNAVAILABLE_BSS = 128,DOT11_STATUS_EXCESSIVE_DATA_LENGTH = 256,DOT11_STATUS_ENCRYPTION_FAILED = 512,DOT11_STATUS_WEP_KEY_UNAVAILABLE = 1024,DOT11_STATUS_ICV_VERIFIED = 2048,DOT11_STATUS_PACKET_REASSEMBLED = 4096,DOT11_STATUS_PACKET_NOT_REASSEMBLED = 8192,DOT11_STATUS_GENERATE_AUTH_FAILED = 16384,DOT11_STATUS_AUTH_NOT_VERIFIED = 32768,DOT11_STATUS_AUTH_VERIFIED = 65536,DOT11_STATUS_AUTH_FAILED = 131072,DOT11_STATUS_PS_LIFETIME_EXPIRED = 262144,DOT11_STATUS_RESET_CONFIRM = 4,DOT11_STATUS_SCAN_CONFIRM = 1,DOT11_STATUS_JOIN_CONFIRM = 2,DOT11_STATUS_START_CONFIRM = 3,DOT11_STATUS_AP_JOIN_CONFIRM = 5,DOT11_STATUS_MPDU_MAX_LENGTH_CHANGED = 6,DOT11_MPDU_MAX_LENGTH_INDICATION_REVISION_1 = 1,DOT11_ASSOCIATION_START_PARAMETERS_REVISION_1 = 1,DOT11_ENCAP_RFC_1042 = 1,DOT11_ENCAP_802_1H = 2,DOT11_ASSOC_STATUS_SUCCESS = 0,DOT11_ASSOC_STATUS_FAILURE = 1,DOT11_ASSOC_STATUS_UNREACHABLE = 2,DOT11_ASSOC_STATUS_RADIO_OFF = 3,DOT11_ASSOC_STATUS_PHY_DISABLED = 4,DOT11_ASSOC_STATUS_CANCELLED = 5,DOT11_ASSOC_STATUS_CANDIDATE_LIST_EXHAUSTED = 6,DOT11_ASSOC_STATUS_DISASSOCIATED_BY_OS = 7,DOT11_ASSOC_STATUS_DISASSOCIATED_BY_ROAMING = 8,DOT11_ASSOC_STATUS_DISASSOCIATED_BY_RESET = 9,DOT11_ASSOC_STATUS_SYSTEM_ERROR = 10,DOT11_ASSOC_STATUS_ROAMING_BETTER_AP_FOUND = 11,DOT11_ASSOC_STATUS_ROAMING_ASSOCIATION_LOST = 12,DOT11_ASSOC_STATUS_ROAMING_ADHOC = 13,DOT11_ASSOC_STATUS_PEER_DEAUTHENTICATED = 65536,DOT11_ASSOC_STATUS_PEER_DEAUTHENTICATED_START = 65536,DOT11_ASSOC_STATUS_PEER_DEAUTHENTICATED_END = 131071,DOT11_ASSOC_STATUS_PEER_DISASSOCIATED = 131072,DOT11_ASSOC_STATUS_PEER_DISASSOCIATED_START = 131072,DOT11_ASSOC_STATUS_PEER_DISASSOCIATED_END = 196607,DOT11_ASSOC_STATUS_ASSOCIATION_RESPONSE = 196608,DOT11_ASSOC_STATUS_ASSOCIATION_RESPONSE_START = 196608,DOT11_ASSOC_STATUS_ASSOCIATION_RESPONSE_END = 262143,DOT11_ASSOC_STATUS_REASON_CODE_MASK = 65535,DOT11_ASSOC_STATUS_IHV_START = -2147483648,DOT11_ASSOC_STATUS_IHV_END = -1,DOT11_ASSOCIATION_COMPLETION_PARAMETERS_REVISION_1 = 1,DOT11_ASSOCIATION_COMPLETION_PARAMETERS_REVISION_2 = 2,DOT11_CONNECTION_START_PARAMETERS_REVISION_1 = 1,DOT11_CONNECTION_STATUS_SUCCESS = 0,DOT11_CONNECTION_STATUS_FAILURE = 1,DOT11_CONNECTION_STATUS_CANDIDATE_LIST_EXHAUSTED = 6,DOT11_CONNECTION_STATUS_PHY_POWER_DOWN = 3,DOT11_CONNECTION_STATUS_CANCELLED = 5,DOT11_CONNECTION_STATUS_IHV_START = -2147483648,DOT11_CONNECTION_STATUS_IHV_END = -1,DOT11_CONNECTION_COMPLETION_PARAMETERS_REVISION_1 = 1,DOT11_ROAMING_REASON_BETTER_AP_FOUND = 11,DOT11_ROAMING_REASON_ASSOCIATION_LOST = 12,DOT11_ROAMING_REASON_ADHOC = 13,DOT11_ROAMING_REASON_IHV_START = -2147483648,DOT11_ROAMING_REASON_IHV_END = -1,DOT11_ROAMING_START_PARAMETERS_REVISION_1 = 1,DOT11_ROAMING_COMPLETION_PARAMETERS_REVISION_1 = 1,DOT11_DISASSOC_REASON_OS = 7,DOT11_DISASSOC_REASON_PEER_UNREACHABLE = 2,DOT11_DISASSOC_REASON_PEER_DEAUTHENTICATED = 65536,DOT11_DISASSOC_REASON_PEER_DISASSOCIATED = 131072,DOT11_DISASSOC_REASON_RADIO_OFF = 3,DOT11_DISASSOC_REASON_PHY_DISABLED = 4,DOT11_DISASSOC_REASON_IHV_START = -2147483648,DOT11_DISASSOC_REASON_IHV_END = -1,DOT11_DISASSOCIATION_PARAMETERS_REVISION_1 = 1,DOT11_TKIPMIC_FAILURE_PARAMETERS_REVISION_1 = 1,DOT11_PMKID_CANDIDATE_LIST_PARAMETERS_REVISION_1 = 1,DOT11_PMKID_CANDIDATE_PREAUTH_ENABLED = 1,DOT11_PHY_STATE_PARAMETERS_REVISION_1 = 1,DOT11_LINK_QUALITY_PARAMETERS_REVISION_1 = 1,DOT11_EXTSTA_SEND_CONTEXT_REVISION_1 = 1,DOT11_RECV_FLAG_RAW_PACKET = 1,DOT11_RECV_FLAG_RAW_PACKET_FCS_FAILURE = 2,DOT11_RECV_FLAG_RAW_PACKET_TIMESTAMP = 4,DOT11_EXTSTA_RECV_CONTEXT_REVISION_1 = 1,};
enum MACRO_DRIVER_CORRUPTED_SYSPTES {DRIVER_CORRUPTED_SYSPTES = 0xDB,DRIVER_INVALID_STACK_ACCESS = 0xDC,};
enum MACRO_EXCEPTION_NONCONTINUABLE {EXCEPTION_NONCONTINUABLE = 0x1,EXCEPTION_UNWINDING = 0x2,EXCEPTION_EXIT_UNWIND = 0x4,EXCEPTION_STACK_INVALID = 0x8,EXCEPTION_NESTED_CALL = 0x10,EXCEPTION_TARGET_UNWIND = 0x20,EXCEPTION_COLLIDED_UNWIND = 0x40,EXCEPTION_UNWIND = 0x66,EXCEPTION_MAXIMUM_PARAMETERS = 0xF,};
enum MACRO_GetPersistentBinding2_IN {GetPersistentBinding2_IN_PortWWN_ID = 1,GetPersistentBinding2_IN_InEntryCount_ID = 2,GetPersistentBinding2_OUT_HBAStatus_ID = 3,GetPersistentBinding2_OUT_TotalEntryCount_ID = 4,GetPersistentBinding2_OUT_OutEntryCount_ID = 5,GetPersistentBinding2_OUT_Bindings_ID = 6,};
enum MACRO_IOCTL_DISK_GET_PARTITION {IOCTL_DISK_GET_PARTITION_ATTRIBUTES = 0x700E8,IOCTL_DISK_SET_PARTITION_ATTRIBUTES = 0x7C0EC,IOCTL_DISK_GET_DISK_ATTRIBUTES = 0x700F0,IOCTL_DISK_SET_DISK_ATTRIBUTES = 0x7C0F4,};
enum MACRO_ISCSI_RedirectPortalInfo {ISCSI_RedirectPortalInfo_UniqueConnectionId_ID = 1,ISCSI_RedirectPortalInfo_OriginalIPAddr_ID = 2,ISCSI_RedirectPortalInfo_OriginalPort_ID = 3,ISCSI_RedirectPortalInfo_RedirectedIPAddr_ID = 4,ISCSI_RedirectPortalInfo_RedirectedPort_ID = 5,ISCSI_RedirectPortalInfo_Redirected_ID = 6,ISCSI_RedirectPortalInfo_TemporaryRedirect_ID = 7,ISCSI_RedirectSessionInfo_UniqueSessionId_ID = 1,ISCSI_RedirectSessionInfo_TargetPortalGroupTag_ID = 2,ISCSI_RedirectSessionInfo_ConnectionCount_ID = 3,ISCSI_RedirectSessionInfo_RedirectPortalList_ID = 4,};
enum MACRO_MSiSCSI_PersistentLogins {MSiSCSI_PersistentLogins_PersistentLoginCount_ID = 1,MSiSCSI_PersistentLogins_Reserved_ID = 2,MSiSCSI_PersistentLogins_PersistentLogins_ID = 3,MSiSCSI_TargetMappings_UniqueAdapterId_ID = 1,MSiSCSI_TargetMappings_TargetMappingCount_ID = 2,MSiSCSI_TargetMappings_Reserved_ID = 3,MSiSCSI_TargetMappings_TargetMappings_ID = 4,MSiSCSI_LUNMappingInformation_UniqueAdapterId_ID = 1,MSiSCSI_LUNMappingInformation_UniqueSessionId_ID = 2,MSiSCSI_LUNMappingInformation_OSBus_ID = 3,MSiSCSI_LUNMappingInformation_OSTarget_ID = 4,MSiSCSI_LUNMappingInformation_OSLUN_ID = 5,};
enum MACRO_NdisHashFunctionToeplitz {NdisHashFunctionToeplitz = 0x1,NdisHashFunctionReserved1 = 0x2,NdisHashFunctionReserved2 = 0x4,NdisHashFunctionReserved3 = 0x8,};
enum MACRO_OID_DOT11_WFD_ADDITIONAL {OID_DOT11_WFD_ADDITIONAL_IE = 0xE050108,};
enum MACRO_PAIRING_PROTOCOL_VERSION {OCUR_PAIRING_PROTOCOL_VERSION = 2,PBDA_PAIRING_PROTOCOL_VERSION = 3,};
enum MACRO_PER_THREAD_LOCALE_GLOBAL {_ENABLE_PER_THREAD_LOCALE_GLOBAL = 0x10,_DISABLE_PER_THREAD_LOCALE_GLOBAL = 0x20,};
enum MACRO_RemovePersistentEntry_IN {RemovePersistentEntry_IN_PortWWN_ID = 1,RemovePersistentEntry_IN_Binding_ID = 2,RemovePersistentEntry_OUT_HBAStatus_ID = 3,};
enum MACRO_RemovePersistentLogin_IN {RemovePersistentLogin_IN_PortNumber_ID = 1,RemovePersistentLogin_IN_TargetName_ID = 2,RemovePersistentLogin_IN_TargetPortal_ID = 3,RemovePersistentLogin_OUT_Status_ID = 4,};
enum MACRO_ReportDiscoveredTargets2 {ReportDiscoveredTargets2 = 11,};
enum MACRO_SetRADIUSSharedSecret_IN {SetRADIUSSharedSecret_IN_SharedSecretSize_ID = 1,SetRADIUSSharedSecret_IN_SharedSecret_ID = 2,SetRADIUSSharedSecret_OUT_Status_ID = 3,};
enum MACRO_WmiEnumReceiveFilters_IN {WmiEnumReceiveFilters_IN_Header_ID = 1,WmiEnumReceiveFilters_IN_ReceiveFilterInfoArray_ID = 2,WmiEnumReceiveFilters_OUT_ReceiveFilterInfoArray_ID = 2,};
enum MACRO_WmiSetALSBrightnessState {WmiSetALSBrightnessState = 3,};
typedef struct _MODE_DEVICE_CONFIGURATION_PAGE MODE_DEVICE_CONFIGURATION_PAGE;
typedef struct _MORE_PARALLEL_PORT_INFORMATION MORE_PARALLEL_PORT_INFORMATION;
typedef struct _MSFC_NPIVLUNMappingInformation MSFC_NPIVLUNMappingInformation;
typedef struct _MSNdis_80211_ConfigurationInfo MSNdis_80211_ConfigurationInfo;
typedef struct _MSNdis_FddiLongMaximumListSize MSNdis_FddiLongMaximumListSize;
typedef struct _MSNdis_FddiShortCurrentAddress MSNdis_FddiShortCurrentAddress;
typedef struct _MSNdis_ReceiveFilterParameters MSNdis_ReceiveFilterParameters;
typedef struct _MSNdis_StatusDot11RoamingStart MSNdis_StatusDot11RoamingStart;
typedef struct _MSNdis_StatusOperationalStatus MSNdis_StatusOperationalStatus;
typedef struct _MSNdis_StatusTaskOffloadChange MSNdis_StatusTaskOffloadChange;
typedef struct _MSNdis_TokenRingCurrentAddress MSNdis_TokenRingCurrentAddress;
typedef struct _MSNdis_TokenRingLastOpenStatus MSNdis_TokenRingLastOpenStatus;
typedef struct _MSNdis_WmiHDSplitCurrentConfig MSNdis_WmiHDSplitCurrentConfig;
typedef struct _MSNdis_WmiTcpConnectionOffload MSNdis_WmiTcpConnectionOffload;
typedef struct _MSNdis_WmiTcpIpChecksumOffload MSNdis_WmiTcpIpChecksumOffload;
typedef struct _MSV1_0_GETCHALLENRESP_RESPONSE MSV1_0_GETCHALLENRESP_RESPONSE;
typedef struct _MSV1_0_LM20_CHALLENGE_RESPONSE MSV1_0_LM20_CHALLENGE_RESPONSE;
typedef struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL MSV1_0_SUPPLEMENTAL_CREDENTIAL;
typedef struct _NDIS_FILTER_RESTART_PARAMETERS NDIS_FILTER_RESTART_PARAMETERS;
typedef struct _NDIS_MINIPORT_PAUSE_PARAMETERS NDIS_MINIPORT_PAUSE_PARAMETERS;
typedef struct _NDIS_PROTOCOL_PAUSE_PARAMETERS NDIS_PROTOCOL_PAUSE_PARAMETERS;
typedef struct _NDIS_RECEIVE_FILTER_INFO_ARRAY NDIS_RECEIVE_FILTER_INFO_ARRAY;
typedef struct _NDIS_RECEIVE_FILTER_PARAMETERS NDIS_RECEIVE_FILTER_PARAMETERS;
typedef struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V1 NDIS_TCP_LARGE_SEND_OFFLOAD_V1;
typedef struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2 NDIS_TCP_LARGE_SEND_OFFLOAD_V2;
typedef struct _NDIS_WWAN_DEVICE_SERVICE_EVENT NDIS_WWAN_DEVICE_SERVICE_EVENT;
typedef struct _NDIS_WWAN_PACKET_SERVICE_STATE NDIS_WWAN_PACKET_SERVICE_STATE;
typedef struct _NDIS_WWAN_PROVISIONED_CONTEXTS NDIS_WWAN_PROVISIONED_CONTEXTS;
typedef struct _NOTIFICATION_MULTI_HOST_STATUS NOTIFICATION_MULTI_HOST_STATUS;
typedef struct _69F844921B1DE9364EE161E0CBB12E4A NTFS_FILE_RECORD_OUTPUT_BUFFER;
typedef struct _OFFLOAD_IPSEC_DELETE_UDPESP_SA OFFLOAD_IPSEC_DELETE_UDPESP_SA;
typedef union _AER_ENDPOINT_DESCRIPTOR_FLAGS *PAER_ENDPOINT_DESCRIPTOR_FLAGS;
typedef union _AER_ROOTPORT_DESCRIPTOR_FLAGS *PAER_ROOTPORT_DESCRIPTOR_FLAGS;
typedef struct _PARALLEL_INTERRUPT_INFORMATION PARALLEL_INTERRUPT_INFORMATION;
typedef struct _PAR_DEVICE_ID_SIZE_INFORMATION PAR_DEVICE_ID_SIZE_INFORMATION;
typedef struct _BDA_TS_SELECTORINFO_ISDBS_EXT *PBDA_TS_SELECTORINFO_ISDBS_EXT;
typedef struct _2AB63320416E6F865FE6CC3B86FCC505 *PBLOCK_DEVICE_RANGE_DESCRIPTOR;
typedef struct _D78C377FC65BA439C025401600215C2E *PBLOCK_DEVICE_TOKEN_DESCRIPTOR;
typedef struct _CDROM_TOC_FULL_TOC_DATA_BLOCK *PCDROM_TOC_FULL_TOC_DATA_BLOCK;
typedef struct _PCI_DEVICE_PRESENCE_PARAMETERS PCI_DEVICE_PRESENCE_PARAMETERS;
typedef union _PCI_EXPRESS_ROOT_ERROR_COMMAND PCI_EXPRESS_ROOT_ERROR_COMMAND;
typedef union _PCI_EXPRESS_TPH_ST_TABLE_ENTRY PCI_EXPRESS_TPH_ST_TABLE_ENTRY;
typedef struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD PCI_ROOT_BUS_OSC_CONTROL_FIELD;
typedef struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD PCI_ROOT_BUS_OSC_SUPPORT_FIELD;
typedef struct _CLEAN_AND_DIRTY_VOLUME_PACKET *PCLEAN_AND_DIRTY_VOLUME_PACKET;
typedef struct _CLFS_MGMT_CLIENT_REGISTRATION *PCLFS_MGMT_CLIENT_REGISTRATION;
typedef struct _CLFS_PHYSICAL_LSN_INFORMATION *PCLFS_PHYSICAL_LSN_INFORMATION;
typedef struct _COMPOSITE_DEVICE_CAPABILITIES *PCOMPOSITE_DEVICE_CAPABILITIES;
typedef struct _DEVICEDUMP_PRIVATE_SUBSECTION *PDEVICEDUMP_PRIVATE_SUBSECTION;
typedef struct _DEVICEDUMP_STORAGEDEVICE_DATA *PDEVICEDUMP_STORAGEDEVICE_DATA;
typedef struct _DEVICEDUMP_SUBSECTION_POINTER *PDEVICEDUMP_SUBSECTION_POINTER;
typedef struct DOT11_DATA_RATE_MAPPING_ENTRY *PDOT11_DATA_RATE_MAPPING_ENTRY;
typedef struct _DOT11_DATA_RATE_MAPPING_TABLE *PDOT11_DATA_RATE_MAPPING_TABLE;
typedef struct _DOT11_INCOMING_ASSOC_DECISION *PDOT11_INCOMING_ASSOC_DECISION;
typedef struct DOT11_LINK_QUALITY_PARAMETERS *PDOT11_LINK_QUALITY_PARAMETERS;
typedef struct DOT11_PORT_STATE_NOTIFICATION *PDOT11_PORT_STATE_NOTIFICATION;
typedef struct _DXGK_FIRMWARE_TABLE_INTERFACE *PDXGK_FIRMWARE_TABLE_INTERFACE;
typedef struct _FILE_FS_ATTRIBUTE_INFORMATION *PFILE_FS_ATTRIBUTE_INFORMATION;
typedef struct _FILE_FS_DATA_COPY_INFORMATION *PFILE_FS_DATA_COPY_INFORMATION;
typedef struct _FILE_FS_FULL_SIZE_INFORMATION *PFILE_FS_FULL_SIZE_INFORMATION;
typedef struct _FILE_MAILSLOT_SET_INFORMATION *PFILE_MAILSLOT_SET_INFORMATION;
typedef struct _FILE_MOVE_CLUSTER_INFORMATION *PFILE_MOVE_CLUSTER_INFORMATION;
typedef struct _FILE_NETWORK_OPEN_INFORMATION *PFILE_NETWORK_OPEN_INFORMATION;
typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER *PFILE_PIPE_ASSIGN_EVENT_BUFFER;
typedef struct _FILE_SFIO_RESERVE_INFORMATION *PFILE_SFIO_RESERVE_INFORMATION;
typedef struct _FIRMWARE_S3_PERFORMANCE_TABLE *PFIRMWARE_S3_PERFORMANCE_TABLE;
typedef struct _FORMATTED_CAPACITY_DESCRIPTOR *PFORMATTED_CAPACITY_DESCRIPTOR;
typedef struct _FSVIDEO_REVERSE_MOUSE_POINTER *PFSVIDEO_REVERSE_MOUSE_POINTER;
typedef struct _FSVIDEO_WRITE_TO_FRAME_BUFFER *PFSVIDEO_WRITE_TO_FRAME_BUFFER;
typedef struct _HWPROFILE_CHANGE_NOTIFICATION *PHWPROFILE_CHANGE_NOTIFICATION;
typedef void ( *PHW_RECEIVE_STREAM_CONTROL_SRB)(struct _HW_STREAM_REQUEST_BLOCK *SRB);
typedef struct _PHYSICAL_COUNTER_RESOURCE_LIST PHYSICAL_COUNTER_RESOURCE_LIST;
typedef struct _IDE_VENDOR_DEFINED_POWER_INFO *PIDE_VENDOR_DEFINED_POWER_INFO;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _1F616AD8AB927B39714EF11ABE14251C *PIMAGE_LOAD_CONFIG_DIRECTORY32;
typedef struct _0842067D4928A6ED06A0CF2C82B469EC *PIMAGE_LOAD_CONFIG_DIRECTORY64;
typedef struct _IO_CREATE_STREAM_FILE_OPTIONS *PIO_CREATE_STREAM_FILE_OPTIONS;
typedef struct _IO_REMOVE_LOCK_TRACKING_BLOCK *PIO_REMOVE_LOCK_TRACKING_BLOCK;
typedef struct _IO_RESOURCE_REQUIREMENTS_LIST *PIO_RESOURCE_REQUIREMENTS_LIST;
typedef struct _IO_SESSION_STATE_NOTIFICATION *PIO_SESSION_STATE_NOTIFICATION;
typedef struct _ISCSI_DiscoveredTargetPortal2 *PISCSI_DiscoveredTargetPortal2;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE *PISECURITY_DESCRIPTOR_RELATIVE;
typedef struct _KBUGCHECK_SECONDARY_DUMP_DATA *PKBUGCHECK_SECONDARY_DUMP_DATA;
typedef struct _KEYBOARD_INDICATOR_PARAMETERS *PKEYBOARD_INDICATOR_PARAMETERS;
typedef struct _KEYBOARD_TYPEMATIC_PARAMETERS *PKEYBOARD_TYPEMATIC_PARAMETERS;
typedef struct _KEY_CONTROL_FLAGS_INFORMATION *PKEY_CONTROL_FLAGS_INFORMATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION *PKEY_VALUE_PARTIAL_INFORMATION;
typedef struct _A5418207B8ACB2A177A7C8A16D784C3F *PKSAUDIO_PRESENTATION_POSITION;
typedef struct _433BAB6AAAB02EEB6CF36ABDE1A4217C *PKSDS3D_HRTF_FILTER_FORMAT_MSG;
typedef struct _1501AF060343F1F91CA0D6153CF3A6C1 *PKSEVENT_TUNER_INITIATE_SCAN_S;
typedef struct _4436E3E3B2A9BAC50D793DBB422657C7 *PKSNODEPROPERTY_AUDIO_PROPERTY;
typedef struct _7624C08BB8F92FE59066142391459661 *PKSPROPERTY_CAMERACONTROL_S_EX;
typedef struct _05B1F1BDA3A085B0ABA09A777878EB7C *PKSPROPERTY_CROSSBAR_PININFO_S;
typedef struct _6957CE76948A33FD66E00469AB6817B0 *PKSPROPERTY_VIDEOCOMPRESSION_S;
typedef struct _28B3DD3F07F137DE885F9AB2BF32CB8A *PKSRTAUDIO_HWREGISTER_PROPERTY;
typedef struct tagKS_DATAFORMAT_VIDEOINFOHEADER *PKS_DATAFORMAT_VIDEOINFOHEADER;
typedef struct _KernelThermalConstraintChange *PKernelThermalConstraintChange;
typedef struct _MESSAGE_INTERRUPT_INFORMATION *PMESSAGE_INTERRUPT_INFORMATION;
typedef struct _MODE_DEVICE_CAPABILITIES_PAGE *PMODE_DEVICE_CAPABILITIES_PAGE;
typedef struct _MODE_READ_WRITE_RECOVERY_PAGE *PMODE_READ_WRITE_RECOVERY_PAGE;
typedef struct _MPIO_CONTROLLER_CONFIGURATION *PMPIO_CONTROLLER_CONFIGURATION;
typedef struct _MPIO_DEVINSTANCE_HEALTH_CLASS *PMPIO_DEVINSTANCE_HEALTH_CLASS;
typedef struct _MPIO_PASS_THROUGH_PATH_DIRECT *PMPIO_PASS_THROUGH_PATH_DIRECT;
typedef struct _MSAcpi_ThermalZoneTemperature *PMSAcpi_ThermalZoneTemperature;
typedef struct _MSFC_HBAPortAttributesResults *PMSFC_HBAPortAttributesResults;
typedef struct _MSNdis_80211_DesiredDataRates *PMSNdis_80211_DesiredDataRates;
typedef struct _MSNdis_80211_NetworkTypeInUse *PMSNdis_80211_NetworkTypeInUse;
typedef struct _MSNdis_80211_NumberOfAntennas *PMSNdis_80211_NumberOfAntennas;
typedef struct _MSNdis_AtmReceiveCellsDropped *PMSNdis_AtmReceiveCellsDropped;
typedef struct _MSNdis_EthernetCurrentAddress *PMSNdis_EthernetCurrentAddress;
typedef struct _MSNdis_FddiDownstreamNodeLong *PMSNdis_FddiDownstreamNodeLong;
typedef struct _MSNdis_FddiLongCurrentAddress *PMSNdis_FddiLongCurrentAddress;
typedef struct _MSNdis_FddiRingManagmentState *PMSNdis_FddiRingManagmentState;
typedef struct _MSNdis_FddiShortMulticastList *PMSNdis_FddiShortMulticastList;
typedef struct _MSNdis_ReceiveFilterInfoArray *PMSNdis_ReceiveFilterInfoArray;
typedef struct _MSNdis_ReceiveQueueParameters *PMSNdis_ReceiveQueueParameters;
typedef struct _MSNdis_StatusDevicePowerOffEx *PMSNdis_StatusDevicePowerOffEx;
typedef struct _MSNdis_StatusDot11LinkQuality *PMSNdis_StatusDot11LinkQuality;
typedef struct _MSNdis_StatusDot11ScanConfirm *PMSNdis_StatusDot11ScanConfirm;
typedef struct _MSV1_0_GETCHALLENRESP_REQUEST *PMSV1_0_GETCHALLENRESP_REQUEST;
typedef struct _MSV1_0_LM20_CHALLENGE_REQUEST *PMSV1_0_LM20_CHALLENGE_REQUEST;
typedef struct _MSiSCSI_LUNMappingInformation *PMSiSCSI_LUNMappingInformation;
typedef struct _MSiSCSI_RequestTimeStatistics *PMSiSCSI_RequestTimeStatistics;
typedef struct _NDIS_802_11_NETWORK_TYPE_LIST *PNDIS_802_11_NETWORK_TYPE_LIST;
typedef struct _NDIS_802_11_STATUS_INDICATION *PNDIS_802_11_STATUS_INDICATION;
typedef struct _NDIS_DEVICE_OBJECT_ATTRIBUTES *PNDIS_DEVICE_OBJECT_ATTRIBUTES;
typedef struct _NDIS_DRIVER_OPTIONAL_HANDLERS *PNDIS_DRIVER_OPTIONAL_HANDLERS;
typedef struct _NDIS_FILTER_ATTACH_PARAMETERS *PNDIS_FILTER_ATTACH_PARAMETERS;
typedef struct _NDIS_MINIPORT_INIT_PARAMETERS *PNDIS_MINIPORT_INIT_PARAMETERS;
typedef struct _NDIS_RECEIVE_QUEUE_INFO_ARRAY *PNDIS_RECEIVE_QUEUE_INFO_ARRAY;
typedef struct _NDIS_RECEIVE_QUEUE_PARAMETERS *PNDIS_RECEIVE_QUEUE_PARAMETERS;
typedef struct _NDIS_RECEIVE_SCALE_PARAMETERS *PNDIS_RECEIVE_SCALE_PARAMETERS;
typedef struct _NDIS_SHARED_MEMORY_PARAMETERS *PNDIS_SHARED_MEMORY_PARAMETERS;
typedef struct _NDIS_SYSTEM_PROCESSOR_INFO_EX *PNDIS_SYSTEM_PROCESSOR_INFO_EX;
typedef struct _NDIS_TAPI_GET_CALL_ADDRESS_ID *PNDIS_TAPI_GET_CALL_ADDRESS_ID;
typedef struct _NDIS_TAPI_GET_LINE_DEV_STATUS *PNDIS_TAPI_GET_LINE_DEV_STATUS;
typedef struct _NDIS_TAPI_PROVIDER_INITIALIZE *PNDIS_TAPI_PROVIDER_INITIALIZE;
typedef struct _NDIS_TAPI_SEND_USER_USER_INFO *PNDIS_TAPI_SEND_USER_USER_INFO;
typedef struct _NDIS_TAPI_SET_STATUS_MESSAGES *PNDIS_TAPI_SET_STATUS_MESSAGES;
typedef struct _NDIS_WWAN_PREFERRED_PROVIDERS *PNDIS_WWAN_PREFERRED_PROVIDERS;
typedef struct _NETROOT_THROTTLING_PARAMETERS *PNETROOT_THROTTLING_PARAMETERS;
typedef struct _50092E5B8D5585E25A36D2D7AA7D11CF *PNTFS_FILE_RECORD_INPUT_BUFFER;
typedef struct _OB_POST_OPERATION_INFORMATION *POB_POST_OPERATION_INFORMATION;
typedef struct _PORT_CONFIGURATION_INFORMATION PORT_CONFIGURATION_INFORMATION;
typedef struct _PARPORT_WMI_ALLOC_FREE_COUNTS *PPARPORT_WMI_ALLOC_FREE_COUNTS;
typedef union _PCI_EXPRESS_ROOT_ERROR_STATUS *PPCI_EXPRESS_ROOT_ERROR_STATUS;
typedef struct _PCMCIA_BUS_INTERFACE_STANDARD *PPCMCIA_BUS_INTERFACE_STANDARD;
typedef struct _PMI_MEASUREMENT_CONFIGURATION *PPMI_MEASUREMENT_CONFIGURATION;
typedef struct _PNP_REPLACE_PROCESSOR_LIST_V1 *PPNP_REPLACE_PROCESSOR_LIST_V1;
typedef struct _PROCESS_DEVICEMAP_INFORMATION *PPROCESS_DEVICEMAP_INFORMATION;
typedef struct _PROCESS_HANDLE_TRACING_ENABLE *PPROCESS_HANDLE_TRACING_ENABLE;
typedef struct _PROCESS_MITIGATION_DEP_POLICY *PPROCESS_MITIGATION_DEP_POLICY;
typedef struct _PURGE_SYNCHRONIZATION_CONTEXT *PPURGE_SYNCHRONIZATION_CONTEXT;
typedef struct _REG_CREATE_KEY_INFORMATION_V1 *PREG_CREATE_KEY_INFORMATION_V1;
typedef struct _REG_ENUMERATE_KEY_INFORMATION *PREG_ENUMERATE_KEY_INFORMATION;
typedef struct _REG_POST_CREATE_KEY_INFORMATION *PREG_POST_OPEN_KEY_INFORMATION;
typedef struct _REG_SET_VALUE_KEY_INFORMATION *PREG_SET_VALUE_KEY_INFORMATION;
typedef struct _PROCESS_MITIGATION_ASLR_POLICY PROCESS_MITIGATION_ASLR_POLICY;
typedef struct _RXCE_CONNECTION_EVENT_HANDLER_ *PRXCE_CONNECTION_EVENT_HANDLER;
typedef struct _RX_WORK_QUEUE_RUNDOWN_CONTEXT_ *PRX_WORK_QUEUE_RUNDOWN_CONTEXT;
typedef struct _RemoveChapForPhysicalPort_OUT *PRemoveChapForPhysicalPort_OUT;
typedef struct _SERIAL_PORT_REDIRECTION_TABLE *PSERIAL_PORT_REDIRECTION_TABLE;
typedef struct _SOC_SUBSYSTEM_FAILURE_DETAILS *PSOC_SUBSYSTEM_FAILURE_DETAILS;
typedef struct _STORAGE_FAILURE_PREDICT_EVENT *PSTORAGE_FAILURE_PREDICT_EVENT;
typedef struct _STORAGE_PRIORITY_HINT_SUPPORT *PSTORAGE_PRIORITY_HINT_SUPPORT;
typedef struct _STOR_INIT_UNICODE_STRING_ARGS *PSTOR_INIT_UNICODE_STRING_ARGS;
typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER *PSYSTEM_FIRMWARE_TABLE_HANDLER;
typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE *PSYSTEM_RESOURCE_ATTRIBUTE_ACE;
typedef struct _SecPkgContext_CredentialNameW *PSecPkgContext_CredentialNameW;
typedef struct _SecPkgContext_NegoPackageInfo *PSecPkgContext_NegoPackageInfo;
typedef struct _SetTunnelModeOuterAddress_OUT *PSetTunnelModeOuterAddress_OUT;
typedef struct _TDI_REQUEST_ASSOCIATE *PTDI_REQUEST_ASSOCIATE_ADDRESS;
typedef struct _TDI_REQUEST_QUERY_INFORMATION *PTDI_REQUEST_QUERY_INFORMATION;
typedef struct _TDI_REQUEST_SET_EVENT *PTDI_REQUEST_SET_EVENT_HANDLER;
typedef struct _TRANSACTION_BASIC_INFORMATION *PTRANSACTION_BASIC_INFORMATION;
typedef struct _TXFS_WRITE_BACKUP_INFORMATION *PTXFS_WRITE_BACKUP_INFORMATION;
typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION PUBLIC_OBJECT_TYPE_INFORMATION;
typedef struct _USB_DEFAULT_PIPE_SETUP_PACKET *PUSB_DEFAULT_PIPE_SETUP_PACKET;
typedef struct _USB_DEVICE_PERFORMANCE_INFO_0 *PUSB_DEVICE_PERFORMANCE_INFO_0;
typedef struct _VIDEO_WIN32K_CALLBACKS_PARAMS *PVIDEO_WIN32K_CALLBACKS_PARAMS;
typedef struct _VPD_IDENTIFICATION_DESCRIPTOR *PVPD_IDENTIFICATION_DESCRIPTOR;
typedef struct _WATCHDOG_TIMER_RESOURCE_TABLE *PWATCHDOG_TIMER_RESOURCE_TABLE;
typedef struct _7A161162541E13AAF3E44563AE0B1752 *PWAVEFORMATEXTENSIBLE_IEC61937;
typedef struct _WHEA_GENERIC_ERROR_DATA_ENTRY *PWHEA_GENERIC_ERROR_DATA_ENTRY;
typedef struct _WHEA_GENERIC_ERROR_DESCRIPTOR *PWHEA_GENERIC_ERROR_DESCRIPTOR;
typedef struct _WHEA_PCIEXPRESS_ERROR_SECTION *PWHEA_PCIEXPRESS_ERROR_SECTION;
typedef struct _WHEA_PCIXDEVICE_ERROR_SECTION *PWHEA_PCIXDEVICE_ERROR_SECTION;
typedef struct WHEA_PCIXDEVICE_REGISTER_PAIR *PWHEA_PCIXDEVICE_REGISTER_PAIR;
typedef struct _WMI_TAPE_PROBLEM_DEVICE_ERROR *PWMI_TAPE_PROBLEM_DEVICE_ERROR;
typedef struct _WmiSetInterruptModeration_OUT *PWmiSetInterruptModeration_OUT;
typedef struct _WmiSetTcpOffloadParameters_IN *PWmiSetTcpOffloadParameters_IN;
typedef struct _REG_POST_OPERATION_INFORMATION REG_POST_OPERATION_INFORMATION;
typedef struct _REG_PRE_CREATE_KEY_INFORMATION REG_PRE_CREATE_KEY_INFORMATION;
typedef struct _RESP_QUERY_SECURITY_DESCRIPTOR RESP_QUERY_SECURITY_DESCRIPTOR;
typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT RTL_DYNAMIC_HASH_TABLE_CONTEXT;
typedef struct _RemoveConnectionFromSession_IN RemoveConnectionFromSession_IN;
typedef struct _SCSI_PASS_THROUGH_WITH_BUFFERS SCSI_PASS_THROUGH_WITH_BUFFERS;
typedef struct _SFFDISK_DEVICE_RPMB_DATA_FRAME SFFDISK_DEVICE_RPMB_DATA_FRAME;
typedef struct _SOCKET_SECURITY_QUERY_TEMPLATE SOCKET_SECURITY_QUERY_TEMPLATE;
typedef struct _SOCKET_SECURITY_SETTINGS_IPSEC SOCKET_SECURITY_SETTINGS_IPSEC;
typedef struct _STARTIO_PERFORMANCE_PARAMETERS STARTIO_PERFORMANCE_PARAMETERS;
typedef struct _STORAGE_FAILURE_PREDICT_STATUS STORAGE_FAILURE_PREDICT_STATUS;
typedef struct _STOR_POFX_COMPONENT_IDLE_STATE STOR_POFX_COMPONENT_IDLE_STATE;
typedef struct _SecPkgContext_NegotiationInfoW SecPkgContext_NegotiationInfoW;
typedef struct _SecPkgCredentials_SSIProviderW SecPkgCredentials_SSIProviderW;
typedef struct _TOKEN_APPCONTAINER_INFORMATION TOKEN_APPCONTAINER_INFORMATION;
typedef struct _pipe_config_descriptor USBCAMD_Pipe_Config_Descriptor;
typedef struct _USB_BUS_INTERFACE_HUB_MINIDUMP USB_BUS_INTERFACE_HUB_MINIDUMP;
typedef struct _USB_INTERFACE_POWER_DESCRIPTOR USB_INTERFACE_POWER_DESCRIPTOR;
typedef struct _VBICAP_PROPERTIES_PROTECTION_S VBICAP_PROPERTIES_PROTECTION_S;
typedef struct _VIDEO_SHARE_MEMORY_INFORMATION VIDEO_SHARE_MEMORY_INFORMATION;
typedef struct _VIRTUAL_HW_INITIALIZATION_DATA VIRTUAL_HW_INITIALIZATION_DATA;
typedef union _WHEA_ERROR_RECORD_HEADER_FLAGS WHEA_ERROR_RECORD_HEADER_FLAGS;
typedef union _WHEA_GENERIC_ERROR_BLOCKSTATUS WHEA_GENERIC_ERROR_BLOCKSTATUS;
typedef union _WHEA_PCIEXPRESS_COMMAND_STATUS WHEA_PCIEXPRESS_COMMAND_STATUS;
typedef struct _WSK_CLIENT_CONNECTION_DISPATCH WSK_CLIENT_CONNECTION_DISPATCH;
typedef struct _WSK_PROVIDER_DATAGRAM_DISPATCH WSK_PROVIDER_DATAGRAM_DISPATCH;
typedef struct _WWAN_SERVICE_ACTIVATION_STATUS WWAN_SERVICE_ACTIVATION_STATUS;
typedef struct _WWAN_SUPPORTED_DEVICE_SERVICES WWAN_SUPPORTED_DEVICE_SERVICES;
typedef struct _WmiMonitorColorCharacteristics WmiMonitorColorCharacteristics;
typedef struct _WmiQueryInterruptModeration_IN WmiQueryInterruptModeration_IN;
typedef struct _WmiSetTcpOffloadParameters_OUT WmiSetTcpOffloadParameters_OUT;
enum _ALTERNATIVE_ARCHITECTURE_TYPE {StandardDesign = 0x0,NEC98x86 = 0x1,EndAlternatives = 0x2,};
struct _COMPOSITE_DEVICE_CAPABILITIES {unsigned int CapabilityFunctionSuspend : 1;unsigned int Reserved : 31;};
enum _D3COLD_LAST_TRANSITION_STATUS {LastDStateTransitionStatusUnknown = 0x0,LastDStateTransitionD3hot = 0x1,LastDStateTransitionD3cold = 0x2,};
enum _D3DKMDT_TEXT_RENDERING_FORMAT {D3DKMDT_TRF_UNINITIALIZED = 0x0,};
enum _D3DKMDT_VIDEO_SIGNAL_STANDARD {D3DKMDT_VSS_UNINITIALIZED = 0x0,D3DKMDT_VSS_VESA_DMT = 0x1,D3DKMDT_VSS_VESA_GTF = 0x2,D3DKMDT_VSS_VESA_CVT = 0x3,D3DKMDT_VSS_IBM = 0x4,D3DKMDT_VSS_APPLE = 0x5,D3DKMDT_VSS_NTSC_M = 0x6,D3DKMDT_VSS_NTSC_J = 0x7,D3DKMDT_VSS_NTSC_443 = 0x8,D3DKMDT_VSS_PAL_B = 0x9,D3DKMDT_VSS_PAL_B1 = 0xA,D3DKMDT_VSS_PAL_G = 0xB,D3DKMDT_VSS_PAL_H = 0xC,D3DKMDT_VSS_PAL_I = 0xD,D3DKMDT_VSS_PAL_D = 0xE,D3DKMDT_VSS_PAL_N = 0xF,D3DKMDT_VSS_PAL_NC = 0x10,D3DKMDT_VSS_SECAM_B = 0x11,D3DKMDT_VSS_SECAM_D = 0x12,D3DKMDT_VSS_SECAM_G = 0x13,D3DKMDT_VSS_SECAM_H = 0x14,D3DKMDT_VSS_SECAM_K = 0x15,D3DKMDT_VSS_SECAM_K1 = 0x16,D3DKMDT_VSS_SECAM_L = 0x17,D3DKMDT_VSS_SECAM_L1 = 0x18,D3DKMDT_VSS_EIA_861 = 0x19,D3DKMDT_VSS_EIA_861A = 0x1A,D3DKMDT_VSS_EIA_861B = 0x1B,D3DKMDT_VSS_PAL_K = 0x1C,D3DKMDT_VSS_PAL_K1 = 0x1D,D3DKMDT_VSS_PAL_L = 0x1E,D3DKMDT_VSS_PAL_M = 0x1F,D3DKMDT_VSS_OTHER = 0xFF,};
struct _DEVICE_OBJECT_POWER_EXTENSION;
enum _DOT11_MANUFACTURING_TEST_TYPE {dot11_manufacturing_test_unknown = 0x0,dot11_manufacturing_test_self_start = 0x1,dot11_manufacturing_test_self_query_result = 0x2,dot11_manufacturing_test_rx = 0x3,dot11_manufacturing_test_tx = 0x4,dot11_manufacturing_test_query_adc = 0x5,dot11_manufacturing_test_set_data = 0x6,dot11_manufacturing_test_query_data = 0x7,dot11_manufacturing_test_sleep = 0x8,dot11_manufacturing_test_awake = 0x9,dot11_manufacturing_test_IHV_start = 0x80000000,dot11_manufacturing_test_IHV_end = 0xFFFFFFFF,};
enum _DXGKMDT_DPCP_PROTECTION_LEVEL {DXGKMDT_OPM_DPCP_OFF = 0x0,DXGKMDT_OPM_DPCP_ON = 0x1,DXGKMDT_OPM_DPCP_FORCE_ULONG = 0x7FFFFFFF,};
enum _DXGKMDT_OPM_INTERLEAVE_FORMAT {DXGKMDT_OPM_INTERLEAVE_FORMAT_OTHER = 0x0,DXGKMDT_OPM_INTERLEAVE_FORMAT_PROGRESSIVE = 0x2,DXGKMDT_OPM_INTERLEAVE_FORMAT_INTERLEAVED_EVEN_FIRST = 0x3,DXGKMDT_OPM_INTERLEAVE_FORMAT_INTERLEAVED_ODD_FIRST = 0x4,DXGKMDT_OPM_INTERLEAVE_FORMAT_FORCE_ULONG = 0xFFFFFFFF,};
enum _EXCLUSIVE_ACCESS_REQUEST_TYPE {ExclusiveAccessQueryState = 0x0,ExclusiveAccessLockDevice = 0x1,ExclusiveAccessUnlockDevice = 0x2,};
enum _FLT_CALLBACK_DATA_QUEUE_FLAGS {};
enum _NDIS_802_11_MEDIA_STREAM_MODE {Ndis802_11MediaStreamOff = 0x0,Ndis802_11MediaStreamOn = 0x1,};
enum _NDIS_PM_PROTOCOL_OFFLOAD_TYPE {NdisPMProtocolOffloadIdUnspecified = 0x0,NdisPMProtocolOffloadIdIPv4ARP = 0x1,NdisPMProtocolOffloadIdIPv6NS = 0x2,NdisPMProtocolOffload80211RSNRekey = 0x3,NdisPMProtocolOffloadIdMaximum = 0x4,};
enum _NDIS_PORT_AUTHORIZATION_STATE {NdisPortAuthorizationUnknown = 0x0,NdisPortAuthorized = 0x1,NdisPortUnauthorized = 0x2,NdisPortReauthorizing = 0x3,};
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY *_PIMAGE_RUNTIME_FUNCTION_ENTRY;
enum _QUERY_FILE_LAYOUT_FILTER_TYPE {QUERY_FILE_LAYOUT_FILTER_TYPE_NONE = 0x0,QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS = 0x1,QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID = 0x2,QUERY_FILE_LAYOUT_NUM_FILTER_TYPES = 0x3,};
struct _SecPkgContext_NegoPackageInfo {unsigned int PackageMask;};
enum _TRANSACTION_INFORMATION_CLASS {TransactionBasicInformation = 0x0,TransactionPropertiesInformation = 0x1,TransactionEnlistmentInformation = 0x2,TransactionSuperiorEnlistmentInformation = 0x3,};
struct _USB_HIGH_SPEED_MAXPACKET___MP {unsigned short MaxPacket : 11;unsigned short HSmux : 2;unsigned short Reserved : 3;};
enum _WHEA_ERROR_PACKET_DATA_FORMAT {WheaDataFormatIPFSalRecord = 0x0,WheaDataFormatXPFMCA = 0x1,WheaDataFormatMemory = 0x2,WheaDataFormatPCIExpress = 0x3,WheaDataFormatNMIPort = 0x4,WheaDataFormatPCIXBus = 0x5,WheaDataFormatPCIXDevice = 0x6,WheaDataFormatGeneric = 0x7,WheaDataFormatMax = 0x8,};
enum _WSA_COMPATIBILITY_BEHAVIOR_ID {WsaBehaviorAll = 0x0,WsaBehaviorReceiveBuffering = 0x1,WsaBehaviorAutoTuning = 0x2,};
typedef union _AER_ENDPOINT_DESCRIPTOR_FLAGS AER_ENDPOINT_DESCRIPTOR_FLAGS;
typedef union _AER_ROOTPORT_DESCRIPTOR_FLAGS AER_ROOTPORT_DESCRIPTOR_FLAGS;
typedef struct _BDA_TS_SELECTORINFO_ISDBS_EXT BDA_TS_SELECTORINFO_ISDBS_EXT;
typedef struct _2AB63320416E6F865FE6CC3B86FCC505 BLOCK_DEVICE_RANGE_DESCRIPTOR;
typedef struct _D78C377FC65BA439C025401600215C2E BLOCK_DEVICE_TOKEN_DESCRIPTOR;
typedef struct _CDROM_TOC_FULL_TOC_DATA_BLOCK CDROM_TOC_FULL_TOC_DATA_BLOCK;
typedef struct _CLFS_MGMT_CLIENT_REGISTRATION CLFS_MGMT_CLIENT_REGISTRATION;
typedef struct _CLFS_PHYSICAL_LSN_INFORMATION CLFS_PHYSICAL_LSN_INFORMATION;
typedef struct _COMPOSITE_DEVICE_CAPABILITIES COMPOSITE_DEVICE_CAPABILITIES;
typedef struct creative_fastspeech8format_tag CREATIVEFASTSPEECH8WAVEFORMAT;
typedef struct _D3DDDI_GAMMA_RAMP_RGB256x3x16 D3DDDI_GAMMA_RAMP_RGB256x3x16;
typedef struct D3DKMDT_HMONITORDESCRIPTORSET__ *D3DKMDT_HMONITORDESCRIPTORSET;
typedef struct D3DKMDT_HMONITORSOURCEMODESET__ *D3DKMDT_HMONITORSOURCEMODESET;
struct D3DKMDT_HVIDPNSOURCEMODESET__ {int unused;};
struct D3DKMDT_HVIDPNTARGETMODESET__ {int unused;};
typedef struct _DEVICEDUMP_PRIVATE_SUBSECTION DEVICEDUMP_PRIVATE_SUBSECTION;
typedef struct _DEVICEDUMP_STORAGEDEVICE_DATA DEVICEDUMP_STORAGEDEVICE_DATA;
typedef struct _DEVICEDUMP_SUBSECTION_POINTER DEVICEDUMP_SUBSECTION_POINTER;
typedef struct _DOT11_DATA_RATE_MAPPING_TABLE DOT11_DATA_RATE_MAPPING_TABLE;
typedef struct _DOT11_INCOMING_ASSOC_DECISION DOT11_INCOMING_ASSOC_DECISION;
typedef struct _DXGKARG_ACQUIRESWIZZLINGRANGE DXGKARG_ACQUIRESWIZZLINGRANGE;
typedef struct _DXGKARG_RECOMMENDMONITORMODES DXGKARG_RECOMMENDMONITORMODES;
typedef struct _DXGKARG_RELEASESWIZZLINGRANGE DXGKARG_RELEASESWIZZLINGRANGE;
typedef struct _DXGKARG_SETVIDPNSOURCEADDRESS DXGKARG_SETVIDPNSOURCEADDRESS;
typedef struct _DXGK_FIRMWARE_TABLE_INTERFACE DXGK_FIRMWARE_TABLE_INTERFACE;
typedef struct _DXGK_MULTIPLANE_OVERLAY_BLEND DXGK_MULTIPLANE_OVERLAY_BLEND;
typedef struct _DXGK_MULTIPLANE_OVERLAY_FLAGS DXGK_MULTIPLANE_OVERLAY_FLAGS;
typedef struct _DXGK_MULTIPLANE_OVERLAY_PLANE DXGK_MULTIPLANE_OVERLAY_PLANE;
typedef struct _DXGK_TARGETMODE_DETAIL_TIMING DXGK_TARGETMODE_DETAIL_TIMING;
typedef struct _EXCEPTION_REGISTRATION_RECORD EXCEPTION_REGISTRATION_RECORD;
typedef struct _FILE_FS_ATTRIBUTE_INFORMATION FILE_FS_ATTRIBUTE_INFORMATION;
typedef struct _FILE_FS_DATA_COPY_INFORMATION FILE_FS_DATA_COPY_INFORMATION;
typedef struct _FILE_FS_FULL_SIZE_INFORMATION FILE_FS_FULL_SIZE_INFORMATION;
typedef struct _FILE_MAILSLOT_SET_INFORMATION FILE_MAILSLOT_SET_INFORMATION;
typedef struct _FILE_MOVE_CLUSTER_INFORMATION FILE_MOVE_CLUSTER_INFORMATION;
typedef struct _FILE_NETWORK_OPEN_INFORMATION FILE_NETWORK_OPEN_INFORMATION;
typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER FILE_PIPE_ASSIGN_EVENT_BUFFER;
typedef struct _FILE_SFIO_RESERVE_INFORMATION FILE_SFIO_RESERVE_INFORMATION;
typedef struct _FIRMWARE_S3_PERFORMANCE_TABLE FIRMWARE_S3_PERFORMANCE_TABLE;
typedef struct _FORMATTED_CAPACITY_DESCRIPTOR FORMATTED_CAPACITY_DESCRIPTOR;
typedef struct _FSVIDEO_REVERSE_MOUSE_POINTER FSVIDEO_REVERSE_MOUSE_POINTER;
typedef struct _FSVIDEO_WRITE_TO_FRAME_BUFFER FSVIDEO_WRITE_TO_FRAME_BUFFER;
typedef struct _HWPROFILE_CHANGE_NOTIFICATION HWPROFILE_CHANGE_NOTIFICATION;
typedef struct _IDE_VENDOR_DEFINED_POWER_INFO IDE_VENDOR_DEFINED_POWER_INFO;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR IMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _1F616AD8AB927B39714EF11ABE14251C IMAGE_LOAD_CONFIG_DIRECTORY32;
typedef struct _0842067D4928A6ED06A0CF2C82B469EC IMAGE_LOAD_CONFIG_DIRECTORY64;
typedef struct _IO_CREATE_STREAM_FILE_OPTIONS IO_CREATE_STREAM_FILE_OPTIONS;
typedef struct _IO_RESOURCE_REQUIREMENTS_LIST IO_RESOURCE_REQUIREMENTS_LIST;
typedef struct _IO_SESSION_STATE_NOTIFICATION IO_SESSION_STATE_NOTIFICATION;
typedef struct _IRB_REQ_ISOCH_QUERY_RESOURCES IRB_REQ_ISOCH_QUERY_RESOURCES;
typedef struct _ISCSI_DiscoveredTargetPortal2 ISCSI_DiscoveredTargetPortal2;
struct IUnregisterPhysicalConnection {struct IUnregisterPhysicalConnectionVtbl *lpVtbl;};
typedef struct _KBUGCHECK_SECONDARY_DUMP_DATA KBUGCHECK_SECONDARY_DUMP_DATA;
typedef struct _KEYBOARD_INDICATOR_PARAMETERS KEYBOARD_INDICATOR_PARAMETERS;
typedef struct _KEYBOARD_TYPEMATIC_PARAMETERS KEYBOARD_TYPEMATIC_PARAMETERS;
typedef struct _KEY_CONTROL_FLAGS_INFORMATION KEY_CONTROL_FLAGS_INFORMATION;
typedef struct _KEY_VALUE_PARTIAL_INFORMATION KEY_VALUE_PARTIAL_INFORMATION;
typedef struct _A5418207B8ACB2A177A7C8A16D784C3F KSAUDIO_PRESENTATION_POSITION;
typedef struct _433BAB6AAAB02EEB6CF36ABDE1A4217C KSDS3D_HRTF_FILTER_FORMAT_MSG;
typedef struct _1501AF060343F1F91CA0D6153CF3A6C1 KSEVENT_TUNER_INITIATE_SCAN_S;
typedef struct _4436E3E3B2A9BAC50D793DBB422657C7 KSNODEPROPERTY_AUDIO_PROPERTY;
typedef struct _7624C08BB8F92FE59066142391459661 KSPROPERTY_CAMERACONTROL_S_EX;
typedef struct _05B1F1BDA3A085B0ABA09A777878EB7C KSPROPERTY_CROSSBAR_PININFO_S;
typedef struct _6957CE76948A33FD66E00469AB6817B0 KSPROPERTY_VIDEOCOMPRESSION_S;
typedef struct _28B3DD3F07F137DE885F9AB2BF32CB8A KSRTAUDIO_HWREGISTER_PROPERTY;
typedef struct tagKS_DATAFORMAT_VIDEOINFOHEADER KS_DATAFORMAT_VIDEOINFOHEADER;
typedef struct _KernelThermalConstraintChange KernelThermalConstraintChange;
enum MACRO_CRITICAL_INITIALIZATION {CRITICAL_INITIALIZATION_FAILURE = 0x13D,};
enum MACRO_ClearPathHealthCounters {ClearPathHealthCounters = 5,};
enum MACRO_CmResourceTypeBusNumber {CmResourceTypeBusNumber = 6,};
enum MACRO_DOT11_WFD_DEVICE_LISTEN {DOT11_WFD_DEVICE_LISTEN_CHANNEL_REVISION_1 = 1,};
enum MACRO_DRIVER_RETURNED_HOLDING {DRIVER_RETURNED_HOLDING_CANCEL_LOCK = 0x11B,};
enum MACRO_DRIVER_VERIFIER_SPECIAL {DRIVER_VERIFIER_SPECIAL_POOLING = 0x1,DRIVER_VERIFIER_FORCE_IRQL_CHECKING = 0x2,DRIVER_VERIFIER_INJECT_ALLOCATION_FAILURES = 0x4,DRIVER_VERIFIER_TRACK_POOL_ALLOCATIONS = 0x8,DRIVER_VERIFIER_IO_CHECKING = 0x10,};
enum MACRO_DeleteInitiatorNodeName {DeleteInitiatorNodeName = 91,};
enum MACRO_DsmSetLoadBalancePolicy {DsmSetLoadBalancePolicy = 1,};
enum MACRO_GetBindingCapability_IN {GetBindingCapability_IN_PortWWN_ID = 1,GetBindingCapability_OUT_HBAStatus_ID = 2,GetBindingCapability_OUT_BindType_ID = 3,};
enum MACRO_GetFcpPersistentBinding {GetFcpPersistentBinding = 2,};
enum MACRO_GetPathConfiguration_IN {GetPathConfiguration_IN_PathID_ID = 1,GetPathConfiguration_OUT_EntryCount_ID = 2,GetPathConfiguration_OUT_Address_ID = 3,};
enum MACRO_GetPresharedKeyForId_IN {GetPresharedKeyForId_IN_PortNumber_ID = 1,GetPresharedKeyForId_IN_IdType_ID = 2,GetPresharedKeyForId_IN_IdSize_ID = 3,GetPresharedKeyForId_IN_Id_ID = 4,GetPresharedKeyForId_OUT_Status_ID = 5,GetPresharedKeyForId_OUT_SecurityFlags_ID = 6,};
enum MACRO_IOCTL_INTERNAL_PARALLEL {IOCTL_INTERNAL_PARALLEL_PORT_ALLOCATE = 1441836,IOCTL_INTERNAL_GET_PARALLEL_PORT_INFO = 1441840,IOCTL_INTERNAL_PARALLEL_CONNECT_INTERRUPT = 1441844,IOCTL_INTERNAL_PARALLEL_DISCONNECT_INTERRUPT = 1441848,IOCTL_INTERNAL_RELEASE_PARALLEL_PORT_INFO = 1441852,IOCTL_INTERNAL_GET_MORE_PARALLEL_PORT_INFO = 1441860,IOCTL_INTERNAL_PARCHIP_CONNECT = 1441864,IOCTL_INTERNAL_PARALLEL_SET_CHIP_MODE = 1441868,IOCTL_INTERNAL_PARALLEL_CLEAR_CHIP_MODE = 1441872,IOCTL_INTERNAL_GET_PARALLEL_PNP_INFO = 1441876,IOCTL_INTERNAL_INIT_1284_3_BUS = 1441880,IOCTL_INTERNAL_SELECT_DEVICE = 1441884,IOCTL_INTERNAL_DESELECT_DEVICE = 1441888,IOCTL_INTERNAL_GET_PARPORT_FDO = 1441908,IOCTL_INTERNAL_PARCLASS_CONNECT = 1441912,IOCTL_INTERNAL_PARCLASS_DISCONNECT = 1441916,IOCTL_INTERNAL_DISCONNECT_IDLE = 1441920,IOCTL_INTERNAL_LOCK_PORT = 1441940,IOCTL_INTERNAL_UNLOCK_PORT = 1441944,IOCTL_INTERNAL_PARALLEL_PORT_FREE = 1441952,IOCTL_INTERNAL_PARDOT3_CONNECT = 1441956,IOCTL_INTERNAL_PARDOT3_DISCONNECT = 1441960,IOCTL_INTERNAL_PARDOT3_RESET = 1441964,IOCTL_INTERNAL_PARDOT3_SIGNAL = 1441968,IOCTL_INTERNAL_REGISTER_FOR_REMOVAL_RELATIONS = 1441992,IOCTL_INTERNAL_UNREGISTER_FOR_REMOVAL_RELATIONS = 1441996,IOCTL_INTERNAL_LOCK_PORT_NO_SELECT = 1442000,IOCTL_INTERNAL_UNLOCK_PORT_NO_DESELECT = 1442004,IOCTL_INTERNAL_DISABLE_END_OF_CHAIN_BUS_RESCAN = 1442008,IOCTL_INTERNAL_ENABLE_END_OF_CHAIN_BUS_RESCAN = 1442012,};
enum MACRO_ISCSI_SessionStaticInfo {ISCSI_SessionStaticInfo_Type_ID = 8,ISCSI_SessionStaticInfo_DataSequenceInOrder_ID = 9,ISCSI_SessionStaticInfo_DataPduInOrder_ID = 10,ISCSI_SessionStaticInfo_ErrorRecoveryLevel_ID = 11,ISCSI_SessionStaticInfo_MaxOutstandingR2t_ID = 12,ISCSI_SessionStaticInfo_FirstBurstLength_ID = 13,ISCSI_SessionStaticInfo_MaxBurstLength_ID = 14,ISCSI_SessionStaticInfo_MaxConnections_ID = 15,ISCSI_SessionStaticInfo_ConnectionCount_ID = 16,ISCSI_SessionStaticInfo_ConnectionsList_ID = 17,ISCSI_PortalInfo_Index_ID = 1,};
enum MACRO_KSPROPERTY_VIDEOPROCAMP {KSPROPERTY_VIDEOPROCAMP_FLAGS_AUTO = 0x1,KSPROPERTY_VIDEOPROCAMP_FLAGS_MANUAL = 0x2,KSPROPERTY_CAMERACONTROL_FLAGS_AUTO = 0x1,KSPROPERTY_CAMERACONTROL_FLAGS_MANUAL = 0x2,KSPROPERTY_CAMERACONTROL_FLAGS_ASYNCHRONOUS = 0x4,KSPROPERTY_CAMERACONTROL_FLAGS_ABSOLUTE = 0x0,KSPROPERTY_CAMERACONTROL_FLAGS_RELATIVE = 0x10,KSPROPERTY_CAMERACONTROL_FLASH_OFF = 0x0,KSPROPERTY_CAMERACONTROL_FLASH_ON = 0x1,KSPROPERTY_CAMERACONTROL_FLASH_AUTO = 0x2,KSPROPERTY_CAMERACONTROL_FLASH_FLAGS_AUTO = 0x1,KSPROPERTY_CAMERACONTROL_FLASH_FLAGS_MANUAL = 0x2,KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_OFF = 0x0,KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_HIGH = 0x1,KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_MEDIUM = 0x2,KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_LOW = 0x3,KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_AUTO = 0x4,KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_FLAGS_AUTO = 0x1,KSPROPERTY_CAMERACONTROL_VIDEOSTABILIZATION_MODE_FLAGS_MANUAL = 0x2,KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST_FLAGS_AUTO = 0x1,KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST_FLAGS_MANUAL = 0x2,KSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY_EXCLUSIVE_WITH_RECORD = 0x1,};
enum MACRO_MPIO_DSM_Path_DsmPathId {MPIO_DSM_Path_DsmPathId_ID = 1,MPIO_DSM_Path_Reserved_ID = 2,MPIO_DSM_Path_PathWeight_ID = 3,MPIO_DSM_Path_PrimaryPath_ID = 4,};
enum MACRO_MSiSCSI_BootInformation {MSiSCSI_BootInformation_NodeName_ID = 1,MSiSCSI_BootInformation_SharedSecretLength_ID = 2,MSiSCSI_BootInformation_SharedSecret_ID = 3,MSiSCSI_AdapterEvent_UniqueAdapterId_ID = 1,MSiSCSI_AdapterEvent_EventCode_ID = 2,};
enum MACRO_MSiSCSI_PortalInfoClass {MSiSCSI_PortalInfoClass_PortalInfoCount_ID = 1,MSiSCSI_PortalInfoClass_PortalInformation_ID = 2,MSiSCSI_InitiatorSessionInfo_UniqueAdapterId_ID = 1,MSiSCSI_InitiatorSessionInfo_SessionCount_ID = 2,MSiSCSI_InitiatorSessionInfo_SessionsList_ID = 3,MSiSCSI_InitiatorNodeFailureEvent_FailureTime_ID = 1,};
enum MACRO_OID_DOT11_DESIRED_BSSID {OID_DOT11_DESIRED_BSSID_LIST = 234946942,OID_DOT11_DESIRED_BSS_TYPE = 234946943,OID_DOT11_PMKID_LIST = 234947200,};
enum MACRO_OID_DOT11_MANUFACTURING {OID_DOT11_MANUFACTURING_TEST = 0xE080201,};
enum MACRO_OID_DOT11_WFD_SECONDARY {OID_DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST = 0xE050104,};
enum MACRO_PHY_PACKET_NOTIFICATION {REGISTER_PHY_PACKET_NOTIFICATION = 0x1,DEREGISTER_PHY_PACKET_NOTIFICATION = 0x2,};
enum MACRO_ReportDiscoveredTargets {ReportDiscoveredTargets = 10,};
enum MACRO_SetGroupPresharedKey_IN {SetGroupPresharedKey_IN_KeySize_ID = 1,SetGroupPresharedKey_IN_Key_ID = 2,SetGroupPresharedKey_OUT_Status_ID = 3,};
enum MACRO_SetInitiatorNodeName_IN {SetInitiatorNodeName_IN_CreatedInitiatorName_ID = 1,SetInitiatorNodeName_OUT_Status_ID = 2,};
enum MACRO_SetLoadBalancePolicy_IN {SetLoadBalancePolicy_IN_LoadBalancePolicies_ID = 1,SetLoadBalancePolicy_OUT_Status_ID = 2,};
enum MACRO_SetPresharedKeyForId_IN {SetPresharedKeyForId_IN_PortNumber_ID = 1,SetPresharedKeyForId_IN_SecurityFlags_ID = 2,SetPresharedKeyForId_IN_IdType_ID = 3,SetPresharedKeyForId_IN_IdSize_ID = 4,SetPresharedKeyForId_IN_KeySize_ID = 5,SetPresharedKeyForId_IN_Id_ID = 6,SetPresharedKeyForId_IN_Key_ID = 7,SetPresharedKeyForId_OUT_Status_ID = 8,};
enum MACRO_WmiEnumReceiveQueues_IN {WmiEnumReceiveQueues_IN_Header_ID = 1,WmiEnumReceiveQueues_IN_ReceiveQueueInfoArray_ID = 2,WmiEnumReceiveQueues_OUT_ReceiveQueueInfoArray_ID = 2,};
enum MACRO_WmiSetHDSplitParameters {WmiSetHDSplitParameters = 1,};
enum MACRO_WmiSetLinkParameters_IN {WmiSetLinkParameters_IN_MethodHeader_ID = 1,WmiSetLinkParameters_IN_LinkParameters_ID = 2,WmiSetLinkParameters_OUT_OutputInfo_ID = 3,};
enum MACRO_WmiSetPortParameters_IN {WmiSetPortParameters_IN_MethodHeader_ID = 1,WmiSetPortParameters_IN_PortParameters_ID = 2,WmiSetPortParameters_OUT_OutputInfo_ID = 3,};
typedef struct _MESSAGE_INTERRUPT_INFORMATION MESSAGE_INTERRUPT_INFORMATION;
typedef struct _MODE_DEVICE_CAPABILITIES_PAGE MODE_DEVICE_CAPABILITIES_PAGE;
typedef struct _MODE_READ_WRITE_RECOVERY_PAGE MODE_READ_WRITE_RECOVERY_PAGE;
typedef struct _MPIO_CONTROLLER_CONFIGURATION MPIO_CONTROLLER_CONFIGURATION;
typedef struct _MPIO_DEVINSTANCE_HEALTH_CLASS MPIO_DEVINSTANCE_HEALTH_CLASS;
typedef struct _MPIO_PASS_THROUGH_PATH_DIRECT MPIO_PASS_THROUGH_PATH_DIRECT;
typedef struct _MSAcpi_ThermalZoneTemperature MSAcpi_ThermalZoneTemperature;
typedef struct _MSFC_HBAPortAttributesResults MSFC_HBAPortAttributesResults;
typedef struct _MSNdis_80211_DesiredDataRates MSNdis_80211_DesiredDataRates;
typedef struct _MSNdis_80211_NetworkTypeInUse MSNdis_80211_NetworkTypeInUse;
typedef struct _MSNdis_80211_NumberOfAntennas MSNdis_80211_NumberOfAntennas;
typedef struct _MSNdis_AtmReceiveCellsDropped MSNdis_AtmReceiveCellsDropped;
typedef struct _MSNdis_EthernetCurrentAddress MSNdis_EthernetCurrentAddress;
typedef struct _MSNdis_FddiDownstreamNodeLong MSNdis_FddiDownstreamNodeLong;
typedef struct _MSNdis_FddiLongCurrentAddress MSNdis_FddiLongCurrentAddress;
typedef struct _MSNdis_FddiRingManagmentState MSNdis_FddiRingManagmentState;
typedef struct _MSNdis_FddiShortMulticastList MSNdis_FddiShortMulticastList;
typedef struct _MSNdis_ReceiveFilterInfoArray MSNdis_ReceiveFilterInfoArray;
typedef struct _MSNdis_ReceiveQueueParameters MSNdis_ReceiveQueueParameters;
typedef struct _MSNdis_StatusDevicePowerOffEx MSNdis_StatusDevicePowerOffEx;
typedef struct _MSNdis_StatusDot11LinkQuality MSNdis_StatusDot11LinkQuality;
typedef struct _MSNdis_StatusDot11ScanConfirm MSNdis_StatusDot11ScanConfirm;
typedef struct _MSV1_0_GETCHALLENRESP_REQUEST MSV1_0_GETCHALLENRESP_REQUEST;
typedef struct _MSV1_0_LM20_CHALLENGE_REQUEST MSV1_0_LM20_CHALLENGE_REQUEST;
typedef struct _MSiSCSI_LUNMappingInformation MSiSCSI_LUNMappingInformation;
typedef struct _MSiSCSI_RequestTimeStatistics MSiSCSI_RequestTimeStatistics;
typedef struct _NDIS_802_11_NETWORK_TYPE_LIST NDIS_802_11_NETWORK_TYPE_LIST;
typedef struct _NDIS_802_11_STATUS_INDICATION NDIS_802_11_STATUS_INDICATION;
typedef struct _NDIS_DEVICE_OBJECT_ATTRIBUTES NDIS_DEVICE_OBJECT_ATTRIBUTES;
typedef struct _NDIS_DRIVER_OPTIONAL_HANDLERS NDIS_DRIVER_OPTIONAL_HANDLERS;
typedef struct _NDIS_FILTER_ATTACH_PARAMETERS NDIS_FILTER_ATTACH_PARAMETERS;
typedef struct _NDIS_MINIPORT_INIT_PARAMETERS NDIS_MINIPORT_INIT_PARAMETERS;
typedef struct _NDIS_RECEIVE_QUEUE_INFO_ARRAY NDIS_RECEIVE_QUEUE_INFO_ARRAY;
typedef struct _NDIS_RECEIVE_QUEUE_PARAMETERS NDIS_RECEIVE_QUEUE_PARAMETERS;
typedef struct _NDIS_RECEIVE_SCALE_PARAMETERS NDIS_RECEIVE_SCALE_PARAMETERS;
typedef struct _NDIS_SHARED_MEMORY_PARAMETERS NDIS_SHARED_MEMORY_PARAMETERS;
typedef struct _NDIS_SYSTEM_PROCESSOR_INFO_EX NDIS_SYSTEM_PROCESSOR_INFO_EX;
typedef struct _NDIS_TAPI_GET_CALL_ADDRESS_ID NDIS_TAPI_GET_CALL_ADDRESS_ID;
typedef struct _NDIS_TAPI_GET_LINE_DEV_STATUS NDIS_TAPI_GET_LINE_DEV_STATUS;
typedef struct _NDIS_TAPI_PROVIDER_INITIALIZE NDIS_TAPI_PROVIDER_INITIALIZE;
typedef struct _NDIS_TAPI_SEND_USER_USER_INFO NDIS_TAPI_SEND_USER_USER_INFO;
typedef struct _NDIS_TAPI_SET_STATUS_MESSAGES NDIS_TAPI_SET_STATUS_MESSAGES;
typedef struct _NDIS_WWAN_PREFERRED_PROVIDERS NDIS_WWAN_PREFERRED_PROVIDERS;
typedef struct _NETROOT_THROTTLING_PARAMETERS NETROOT_THROTTLING_PARAMETERS;
typedef struct _50092E5B8D5585E25A36D2D7AA7D11CF NTFS_FILE_RECORD_INPUT_BUFFER;
typedef struct _OB_POST_OPERATION_INFORMATION OB_POST_OPERATION_INFORMATION;
typedef struct _ACPI_DEBUGGING_DEVICE_IN_USE *PACPI_DEBUGGING_DEVICE_IN_USE;
typedef struct _PARPORT_WMI_ALLOC_FREE_COUNTS PARPORT_WMI_ALLOC_FREE_COUNTS;
typedef struct _BDA_DVBT2_L1_SIGNALLING_DATA *PBDA_DVBT2_L1_SIGNALLING_DATA;
typedef struct _BDA_WMDRMTUNER_PIDPROTECTION *PBDA_WMDRMTUNER_PIDPROTECTION;
typedef struct _BTH_PROFILE_DRIVER_INTERFACE *PBTH_PROFILE_DRIVER_INTERFACE;
typedef struct _CDROM_TOC_CD_TEXT_DATA_BLOCK *PCDROM_TOC_CD_TEXT_DATA_BLOCK;
typedef struct _CDROM_WRITE_SPEED_DESCRIPTOR *PCDROM_WRITE_SPEED_DESCRIPTOR;
typedef struct _CDVD_INACTIVITY_TIMEOUT_PAGE *PCDVD_INACTIVITY_TIMEOUT_PAGE;
typedef union _PCI_EXPRESS_ROOT_ERROR_STATUS PCI_EXPRESS_ROOT_ERROR_STATUS;
typedef struct _PCMCIA_BUS_INTERFACE_STANDARD PCMCIA_BUS_INTERFACE_STANDARD;
typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA *PCM_DISK_GEOMETRY_DEVICE_DATA;
typedef struct _CM_EISA_FUNCTION_INFORMATION *PCM_EISA_FUNCTION_INFORMATION;
typedef struct _DEVICEDUMP_PUBLIC_SUBSECTION *PDEVICEDUMP_PUBLIC_SUBSECTION;
typedef struct _DEVICEDUMP_STRUCTURE_VERSION *PDEVICEDUMP_STRUCTURE_VERSION;
typedef struct _DEVICE_DATA_SET_SCRUB_OUTPUT *PDEVICE_DATA_SET_SCRUB_OUTPUT;
typedef struct _DOT11_AVAILABLE_CHANNEL_LIST *PDOT11_AVAILABLE_CHANNEL_LIST;
typedef struct _DOT11_CURRENT_OPERATION_MODE *PDOT11_CURRENT_OPERATION_MODE;
typedef struct _DOT11_DIVERSITY_SELECTION_RX *PDOT11_DIVERSITY_SELECTION_RX;
typedef struct _DOT11_NIC_SPECIFIC_EXTENSION *PDOT11_NIC_SPECIFIC_EXTENSION;
typedef struct DOT11_PRIVACY_EXEMPTION_LIST *PDOT11_PRIVACY_EXEMPTION_LIST;
typedef struct _DOT11_SEND_EXTENSION_INFO_V2 *PDOT11_SEND_EXTENSION_INFO_V2;
typedef struct _DOT11_SUPPORTED_ANTENNA_LIST *PDOT11_SUPPORTED_ANTENNA_LIST;
typedef struct _DOT11_SUPPORTED_DSSS_CHANNEL *PDOT11_SUPPORTED_DSSS_CHANNEL;
typedef struct _DOT11_SUPPORTED_POWER_LEVELS *PDOT11_SUPPORTED_POWER_LEVELS;
typedef struct _DOT11_WME_AC_PARAMTERS_LIST *PDOT11_WME_AC_PARAMETERS_LIST;
typedef struct _DRIVE_LAYOUT_INFORMATION_GPT *PDRIVE_LAYOUT_INFORMATION_GPT;
typedef struct _DRIVE_LAYOUT_INFORMATION_MBR *PDRIVE_LAYOUT_INFORMATION_MBR;
typedef struct _DSM_QuerySupportedLBPolicies *PDSM_QuerySupportedLBPolicies;
typedef struct _ENABLE_DISABLE_FP_POLLING_IN *PENABLE_DISABLE_FP_POLLING_IN;
typedef struct _ENLISTMENT_BASIC_INFORMATION *PENLISTMENT_BASIC_INFORMATION;
typedef struct _EXTENDED_ENCRYPTED_DATA_INFO *PEXTENDED_ENCRYPTED_DATA_INFO;
typedef struct _FILE_COMPRESSION_INFORMATION *PFILE_COMPRESSION_INFORMATION;
typedef struct _FILE_DISPOSITION_INFORMATION *PFILE_DISPOSITION_INFORMATION;
typedef struct _FILE_END_OF_FILE_INFORMATION *PFILE_END_OF_FILE_INFORMATION;
typedef struct _FILE_FS_OBJECTID_INFORMATION *PFILE_FS_OBJECTID_INFORMATION;
typedef struct _FILE_ID_BOTH_DIR_INFORMATION *PFILE_ID_BOTH_DIR_INFORMATION;
typedef struct _FILE_ID_EXTD_DIR_INFORMATION *PFILE_ID_EXTD_DIR_INFORMATION;
typedef struct _FILE_ID_FULL_DIR_INFORMATION *PFILE_ID_FULL_DIR_INFORMATION;
typedef struct _FILE_PIPE_REMOTE_INFORMATION *PFILE_PIPE_REMOTE_INFORMATION;
typedef struct _FILE_SFIO_VOLUME_INFORMATION *PFILE_SFIO_VOLUME_INFORMATION;
typedef struct _FILE_TYPE_NOTIFICATION_INPUT *PFILE_TYPE_NOTIFICATION_INPUT;
typedef struct _FILE_VOLUME_NAME_INFORMATION *PFILE_VOLUME_NAME_INFORMATION;
typedef struct _FSRTL_PER_FILEOBJECT_CONTEXT *PFSRTL_PER_FILEOBJECT_CONTEXT;
typedef struct _HAL_AMLI_BAD_IO_ADDRESS_LIST *PHAL_AMLI_BAD_IO_ADDRESS_LIST;
typedef struct _HIDP_KEYBOARD_MODIFIER_STATE *PHIDP_KEYBOARD_MODIFIER_STATE;
typedef struct _IDE_CONTROLLER_CONFIGURATION *PIDE_CONTROLLER_CONFIGURATION;
typedef struct _IDE_TRANSFER_MODE_PARAMETERS *PIDE_TRANSFER_MODE_PARAMETERS;
typedef struct _INSTANCE_PARTIAL_INFORMATION *PINSTANCE_PARTIAL_INFORMATION;
typedef struct _INTERNAL_I8042_HOOK_KEYBOARD *PINTERNAL_I8042_HOOK_KEYBOARD;
typedef struct _IO_SESSION_STATE_INFORMATION *PIO_SESSION_STATE_INFORMATION;
typedef struct _ISCSI_DiscoveredTargetPortal *PISCSI_DiscoveredTargetPortal;
typedef struct KSGRAPHMANAGER_FUNCTIONTABLE PKSGRAPHMANAGER_FUNCTIONTABLE;
typedef struct _KSM_BDA_CAS_ENTITLEMENTTOKEN *PKSM_BDA_CAS_ENTITLEMENTTOKEN;
typedef struct _KSM_BDA_CAS_OPENBROADCASTMMI *PKSM_BDA_CAS_OPENBROADCASTMMI;
typedef struct _KSM_BDA_WMDRMTUNER_SYNCVALUE *PKSM_BDA_WMDRMTUNER_SYNCVALUE;
typedef struct _8251F34BCF49AE1C266F7CD180791646 *PKSNODEPROPERTY_AUDIO_CHANNEL;
typedef struct _364E147BBB652D1A6AD46ACECD93F8A9 *PKSPROPERTY_CROSSBAR_ACTIVE_S;
typedef struct _631353BB22A3E1576EFF7DC760D2A07D *PKSPROPERTY_STEPPING_LONGLONG;
typedef struct _B62AAF3B70FEB5C8D5EF5D71926BC992 *PKSPROPERTY_TUNER_FREQUENCY_S;
typedef struct _23496AA6B538BC04EA278D40B88E7395 *PKSPROPERTY_TUNER_IF_MEDIUM_S;
typedef struct _358B21B769DBB67C3050F61FED658732 *PKSPROPERTY_TUNER_MODE_CAPS_S;
typedef struct _5670F38347E174B4000DBD4C099C3F79 *PKSPROPERTY_TUNER_SCAN_CAPS_S;
typedef struct _7DA6CEE7E211DED2F61B14AB99948ADC *PKSP_DRMAUDIOSTREAM_CONTENTID;
typedef struct tagKS_DATAFORMAT_MPEGVIDEOINFO2 *PKS_DATAFORMAT_MPEGVIDEOINFO2;
typedef struct _PMI_MEASUREMENT_CONFIGURATION PMI_MEASUREMENT_CONFIGURATION;
typedef struct _MODE_DATA_COMPRESS_PAGE_PLUS *PMODE_DATA_COMPRESS_PAGE_PLUS;
typedef struct _MODE_DEVICE_CONFIG_PAGE_PLUS *PMODE_DEVICE_CONFIG_PAGE_PLUS;
typedef struct _MODE_TRANSPORT_GEOMETRY_PAGE *PMODE_TRANSPORT_GEOMETRY_PAGE;
typedef struct _MOUNTDEV_SUGGESTED_LINK_NAME *PMOUNTDEV_SUGGESTED_LINK_NAME;
typedef struct _MOUNTMGR_DRIVE_LETTER_TARGET *PMOUNTMGR_DRIVE_LETTER_TARGET;
typedef struct _MPIO_DEVINSTANCE_HEALTH_INFO *PMPIO_DEVINSTANCE_HEALTH_INFO;
typedef struct _MRX_SRVCALL_CALLBACK_CONTEXT *PMRX_SRVCALL_CALLBACK_CONTEXT;
typedef struct _MSFC_FibrePortNPIVAttributes *PMSFC_FibrePortNPIVAttributes;
typedef struct _MSMCAEvent_MemoryPageRemoved *PMSMCAEvent_MemoryPageRemoved;
typedef struct _MSMCAEvent_PCIComponentError *PMSMCAEvent_PCIComponentError;
typedef struct _MSNdis_80211_ConfigurationFH *PMSNdis_80211_ConfigurationFH;
typedef struct _MSNdis_AtmMaxAal34PacketSize *PMSNdis_AtmMaxAal34PacketSize;
typedef struct _MSNdis_CoReceivePdusNoBuffer *PMSNdis_CoReceivePdusNoBuffer;
typedef struct _MSNdis_CoVendorDriverVersion *PMSNdis_CoVendorDriverVersion;
typedef struct _MSNdis_EthernetMulticastList *PMSNdis_EthernetMulticastList;
typedef struct _MSNdis_FddiLongMulticastList *PMSNdis_FddiLongMulticastList;
typedef struct _MSNdis_NicSwitchCapabilities *PMSNdis_NicSwitchCapabilities;
typedef struct _MSNdis_ReceiveQueueInfoArray *PMSNdis_ReceiveQueueInfoArray;
typedef struct _MSNdis_StatusDevicePowerOnEx *PMSNdis_StatusDevicePowerOnEx;
typedef struct _MSNdis_StatusLinkSpeedChange *PMSNdis_StatusLinkSpeedChange;
typedef struct _MSNdis_TokenRingCurrentGroup *PMSNdis_TokenRingCurrentGroup;
typedef struct _MSiSCSI_ConnectionStatistics *PMSiSCSI_ConnectionStatistics;
typedef struct _MSiSCSI_InitiatorSessionInfo *PMSiSCSI_InitiatorSessionInfo;
typedef struct _MSiSCSI_SecurityCapabilities *PMSiSCSI_SecurityCapabilities;
typedef struct _NAMED_PIPE_CREATE_PARAMETERS *PNAMED_PIPE_CREATE_PARAMETERS;
typedef struct _NDIS_802_11_CONFIGURATION_FH *PNDIS_802_11_CONFIGURATION_FH;
typedef struct _NDIS_CONFIGURATION_PARAMETER *PNDIS_CONFIGURATION_PARAMETER;
typedef struct _NDIS_FILTER_PAUSE_PARAMETERS *PNDIS_FILTER_PAUSE_PARAMETERS;
typedef struct _NDIS_HD_SPLIT_CURRENT_CONFIG *PNDIS_HD_SPLIT_CURRENT_CONFIG;
typedef struct _NDIS_NIC_SWITCH_CAPABILITIES *PNDIS_NIC_SWITCH_CAPABILITIES;
typedef struct _NDIS_PM_WAKE_UP_CAPABILITIES *PNDIS_PM_WAKE_UP_CAPABILITIES;
typedef struct _NDIS_RECEIVE_HASH_PARAMETERS *PNDIS_RECEIVE_HASH_PARAMETERS;
typedef struct _NDIS_TAPI_GET_ADDRESS_STATUS *PNDIS_TAPI_GET_ADDRESS_STATUS;
typedef struct _NDIS_TAPI_SELECT_EXT_VERSION *PNDIS_TAPI_SELECT_EXT_VERSION;
typedef struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD *PNDIS_TCP_IP_CHECKSUM_OFFLOAD;
typedef struct _NDIS_WWAN_REGISTRATION_STATE *PNDIS_WWAN_REGISTRATION_STATE;
typedef struct _NDIS_WWAN_SERVICE_ACTIVATION *PNDIS_WWAN_SERVICE_ACTIVATION;
typedef struct _NDIS_WWAN_SET_PACKET_SERVICE *PNDIS_WWAN_SET_PACKET_SERVICE;
typedef struct _NDIS_WWAN_SET_REGISTER_STATE *PNDIS_WWAN_SET_REGISTER_STATE;
typedef struct _NOTIFICATION_EXTERNAL_STATUS *PNOTIFICATION_EXTERNAL_STATUS;
typedef  struct _NPI_PROVIDER_CHARACTERISTICS *PNPI_PROVIDER_CHARACTERISTICS;
typedef struct _PNP_REPLACE_PROCESSOR_LIST_V1 PNP_REPLACE_PROCESSOR_LIST_V1;
typedef union _OB_POST_OPERATION_PARAMETERS *POB_POST_OPERATION_PARAMETERS;
typedef struct _OB_PRE_OPERATION_INFORMATION *POB_PRE_OPERATION_INFORMATION;
typedef struct _OFFLOAD_SECURITY_ASSOCIATION *POFFLOAD_SECURITY_ASSOCIATION;
typedef union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS *PPCI_CORRECTABLE_ERROR_STATUS;
typedef struct _PCI_DEVICE_PRESENT_INTERFACE *PPCI_DEVICE_PRESENT_INTERFACE;
typedef union _PCI_EXPRESS_AER_CAPABILITIES *PPCI_EXPRESS_AER_CAPABILITIES;
typedef union _PCI_EXPRESS_PME_REQUESTOR_ID *PPCI_EXPRESS_PME_REQUESTOR_ID;
typedef struct _PCI_EXPRESS_SRIOV_CAPABILITY *PPCI_EXPRESS_SRIOV_CAPABILITY;
typedef struct _PCI_SUBSYSTEM_IDS_CAPABILITY *PPCI_SUBSYSTEM_IDS_CAPABILITY;
typedef struct _PCI_VIRTUALIZATION_INTERFACE *PPCI_VIRTUALIZATION_INTERFACE;
typedef struct _PCW_REGISTRATION_INFORMATION *PPCW_REGISTRATION_INFORMATION;
typedef struct _PLUGPLAY_NOTIFICATION_HEADER *PPLUGPLAY_NOTIFICATION_HEADER;
typedef struct _PNP_REPLACE_DRIVER_INTERFACE *PPNP_REPLACE_DRIVER_INTERFACE;
typedef struct _BCFB24E8FFADAC88C53CD3CD50E1DFA4 *PPPM_IDLE_STATE_ACCOUNTING_EX;
typedef struct _PROCESS_HANDLE_TRACING_ENTRY *PPROCESS_HANDLE_TRACING_ENTRY;
typedef struct _PROCESS_HANDLE_TRACING_QUERY *PPROCESS_HANDLE_TRACING_QUERY;
typedef struct _PROCESS_WS_WATCH_INFORMATION *PPROCESS_WS_WATCH_INFORMATION;
typedef struct _REG_PRE_CREATE_KEY_INFORMATION *PREG_PRE_OPEN_KEY_INFORMATION;
typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER *PREQUEST_OPLOCK_OUTPUT_BUFFER;
typedef struct _PROCESS_DEVICEMAP_INFORMATION PROCESS_DEVICEMAP_INFORMATION;
typedef struct _PROCESS_HANDLE_TRACING_ENABLE PROCESS_HANDLE_TRACING_ENABLE;
typedef struct _PROCESS_MITIGATION_DEP_POLICY PROCESS_MITIGATION_DEP_POLICY;
typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY *PRTL_DYNAMIC_HASH_TABLE_ENTRY;
typedef struct _ReportDiscoveredTargets2_OUT *PReportDiscoveredTargets2_OUT;
typedef struct _SCSI_SENSE_DESCRIPTOR_HEADER *PSCSI_SENSE_DESCRIPTOR_HEADER;
typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT *PSD_CHANGE_MACHINE_SID_OUTPUT;
typedef struct _SET_PARTITION_INFORMATION_EX *PSET_PARTITION_INFORMATION_EX;
typedef struct _SET_PURGE_FAILURE_MODE_INPUT *PSET_PURGE_FAILURE_MODE_INPUT;
typedef struct _SE_ADT_PARAMETER_ARRAY_ENTRY *PSE_ADT_PARAMETER_ARRAY_ENTRY;
typedef struct _SFFDISK_DEVICE_PASSWORD_DATA *PSFFDISK_DEVICE_PASSWORD_DATA;
typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR *PSTORAGE_DEVICE_ID_DESCRIPTOR;
typedef struct _STORAGE_FAILURE_PREDICT_DATA *PSTORAGE_FAILURE_PREDICT_DATA;
typedef struct _STORAGE_OFFLOAD_WRITE_OUTPUT *PSTORAGE_OFFLOAD_WRITE_OUTPUT;
typedef struct _STORAGE_REQUEST_BLOCK_HEADER *PSTORAGE_REQUEST_BLOCK_HEADER;
typedef struct _STORAGE_SCSI_INFO_EXCEPTIONS *PSTORAGE_SCSI_INFO_EXCEPTIONS;
typedef struct _STORAGE_WRITE_CACHE_PROPERTY *PSTORAGE_WRITE_CACHE_PROPERTY;
typedef struct _STOR_WMI_QUERYTRACEINFO_ARGS *PSTOR_WMI_QUERYTRACEINFO_ARGS;
typedef struct _SYSTEM_HIBERFILE_INFORMATION *PSYSTEM_HIBERFILE_INFORMATION;
typedef struct _SecPkgContext_PasswordExpiry *PSecPkgContext_PasswordExpiry;
typedef struct _SetTunnelModeOuterAddress_IN *PSetTunnelModeOuterAddress_IN;
typedef struct _TCG_DESCRIPTION_TABLE_CLIENT *PTCG_DESCRIPTION_TABLE_CLIENT;
typedef struct _TCG_DESCRIPTION_TABLE_SERVER *PTCG_DESCRIPTION_TABLE_SERVER;
typedef struct _TDI_REQUEST_KERNEL_ASSOCIATE *PTDI_REQUEST_KERNEL_ASSOCIATE;
typedef struct _TDI_REQUEST_KERNEL_RECEIVEDG *PTDI_REQUEST_KERNEL_RECEIVEDG;
typedef struct _TDI_REQUEST_KERNEL_SET_EVENT *PTDI_REQUEST_KERNEL_SET_EVENT;
typedef struct _TDI_REQUEST_RECEIVE_DATAGRAM *PTDI_REQUEST_RECEIVE_DATAGRAM;
typedef struct _TRANSACTION_BIND_INFORMATION *PTRANSACTION_BIND_INFORMATION;
typedef struct _TRANSACTION_LIST_INFORMATION *PTRANSACTION_LIST_INFORMATION;
typedef struct _TXFS_CREATE_MINIVERSION_INFO *PTXFS_CREATE_MINIVERSION_INFO;
typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY *PTXFS_LIST_TRANSACTIONS_ENTRY;
typedef struct _TXFS_TRANSACTION_ACTIVE_INFO *PTXFS_TRANSACTION_ACTIVE_INFO;
typedef IUnregisterPhysicalConnection *PUNREGISTERPHYSICALCONNECTION;
typedef struct _PURGE_SYNCHRONIZATION_CONTEXT PURGE_SYNCHRONIZATION_CONTEXT;
typedef struct _USB_CONFIGURATION_DESCRIPTOR *PUSB_CONFIGURATION_DESCRIPTOR;
typedef struct _USB_CONTROLLER_INFORMATION_0 *PUSB_CONTROLLER_INFORMATION_0;
typedef struct _USB_CONTROLLER_INFORMATION_1 *PUSB_CONTROLLER_INFORMATION_1;
typedef union _USB_FUNCTION_SUSPEND_OPTIONS *PUSB_FUNCTION_SUSPEND_OPTIONS;
typedef struct _VIDEO_HW_INITIALIZATION_DATA *PVIDEO_HW_INITIALIZATION_DATA;
typedef struct _VPCI_INVALIDATE_BLOCK_OUTPUT *PVPCI_INVALIDATE_BLOCK_OUTPUT;
typedef struct _VPD_MEDIA_SERIAL_NUMBER_PAGE *PVPD_MEDIA_SERIAL_NUMBER_PAGE;
typedef struct _3128CFC3245060A29C7CC794B5D69F28 *PVRAM_SURFACE_INFO_PROPERTY_S;
typedef struct _WHEA_AER_ENDPOINT_DESCRIPTOR *PWHEA_AER_ENDPOINT_DESCRIPTOR;
typedef struct _WHEA_AER_ROOTPORT_DESCRIPTOR *PWHEA_AER_ROOTPORT_DESCRIPTOR;
typedef struct _WHEA_ERROR_SOURCE_DESCRIPTOR *PWHEA_ERROR_SOURCE_DESCRIPTOR;
typedef union _WHEA_NMI_ERROR_SECTION_FLAGS *PWHEA_NMI_ERROR_SECTION_FLAGS;
typedef struct _WHEA_NOTIFICATION_DESCRIPTOR *PWHEA_NOTIFICATION_DESCRIPTOR;
typedef struct _WSK_CLIENT_DATAGRAM_DISPATCH *PWSK_CLIENT_DATAGRAM_DISPATCH;
typedef struct _WSK_PROVIDER_CHARACTERISTICS *PWSK_PROVIDER_CHARACTERISTICS;
typedef struct _WSK_PROVIDER_LISTEN_DISPATCH *PWSK_PROVIDER_LISTEN_DISPATCH;
typedef struct _WWAN_DEVICE_SERVICE_RESPONSE *PWWAN_DEVICE_SERVICE_RESPONSE;
typedef struct _WmiMonitorBasicDisplayParams *PWmiMonitorBasicDisplayParams;
typedef struct _WmiSetInterruptModeration_IN *PWmiSetInterruptModeration_IN;
typedef struct _REG_CREATE_KEY_INFORMATION_V1 REG_CREATE_KEY_INFORMATION_V1;
typedef struct _REG_ENUMERATE_KEY_INFORMATION REG_ENUMERATE_KEY_INFORMATION;
typedef struct _REG_POST_CREATE_KEY_INFORMATION REG_POST_OPEN_KEY_INFORMATION;
typedef struct _REG_SET_VALUE_KEY_INFORMATION REG_SET_VALUE_KEY_INFORMATION;
typedef struct _REQ_QUERY_SECURITY_DESCRIPTOR REQ_QUERY_SECURITY_DESCRIPTOR;
typedef struct _RXCE_CONNECTION_EVENT_HANDLER_ RXCE_CONNECTION_EVENT_HANDLER;
typedef struct _RX_WORK_QUEUE_RUNDOWN_CONTEXT_ RX_WORK_QUEUE_RUNDOWN_CONTEXT;
typedef struct _RemoveChapForPhysicalPort_OUT RemoveChapForPhysicalPort_OUT;
typedef struct _SERIAL_PORT_REDIRECTION_TABLE SERIAL_PORT_REDIRECTION_TABLE;
typedef struct _SOC_SUBSYSTEM_FAILURE_DETAILS SOC_SUBSYSTEM_FAILURE_DETAILS;
typedef struct _STORAGE_FAILURE_PREDICT_EVENT STORAGE_FAILURE_PREDICT_EVENT;
typedef struct _STORAGE_PRIORITY_HINT_SUPPORT STORAGE_PRIORITY_HINT_SUPPORT;
typedef struct _STOR_INIT_UNICODE_STRING_ARGS STOR_INIT_UNICODE_STRING_ARGS;
typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER SYSTEM_FIRMWARE_TABLE_HANDLER;
typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE SYSTEM_RESOURCE_ATTRIBUTE_ACE;
typedef struct _SecPkgContext_CredentialNameW SecPkgContext_CredentialNameW;
typedef struct _SecPkgContext_NegoPackageInfo SecPkgContext_NegoPackageInfo;
typedef struct _SetTunnelModeOuterAddress_OUT SetTunnelModeOuterAddress_OUT;
typedef struct _TDI_REQUEST_ASSOCIATE TDI_REQUEST_ASSOCIATE_ADDRESS;
typedef struct _TDI_REQUEST_QUERY_INFORMATION TDI_REQUEST_QUERY_INFORMATION;
typedef struct _TDI_REQUEST_SET_EVENT TDI_REQUEST_SET_EVENT_HANDLER;
typedef struct _TRANSACTION_BASIC_INFORMATION TRANSACTION_BASIC_INFORMATION;
typedef struct _TXFS_WRITE_BACKUP_INFORMATION TXFS_WRITE_BACKUP_INFORMATION;
typedef struct _USB_DEFAULT_PIPE_SETUP_PACKET USB_DEFAULT_PIPE_SETUP_PACKET;
typedef struct _USB_DEVICE_PERFORMANCE_INFO_0 USB_DEVICE_PERFORMANCE_INFO_0;
typedef struct _VIDEO_WIN32K_CALLBACKS_PARAMS VIDEO_WIN32K_CALLBACKS_PARAMS;
typedef struct _VPD_IDENTIFICATION_DESCRIPTOR VPD_IDENTIFICATION_DESCRIPTOR;
typedef struct _WATCHDOG_TIMER_RESOURCE_TABLE WATCHDOG_TIMER_RESOURCE_TABLE;
typedef struct _7A161162541E13AAF3E44563AE0B1752 WAVEFORMATEXTENSIBLE_IEC61937;
typedef struct _WHEA_GENERIC_ERROR_DATA_ENTRY WHEA_GENERIC_ERROR_DATA_ENTRY;
typedef struct _WHEA_GENERIC_ERROR_DESCRIPTOR WHEA_GENERIC_ERROR_DESCRIPTOR;
typedef struct _WHEA_PCIEXPRESS_ERROR_SECTION WHEA_PCIEXPRESS_ERROR_SECTION;
typedef struct _WHEA_PCIXDEVICE_ERROR_SECTION WHEA_PCIXDEVICE_ERROR_SECTION;
typedef struct _WMI_TAPE_PROBLEM_DEVICE_ERROR WMI_TAPE_PROBLEM_DEVICE_ERROR;
typedef struct _WmiSetInterruptModeration_OUT WmiSetInterruptModeration_OUT;
typedef struct _WmiSetTcpOffloadParameters_IN WmiSetTcpOffloadParameters_IN;
enum _DOT11_WPS_DEVICE_PASSWORD_ID {DOT11_WPS_PASSWORD_ID_DEFAULT = 0x0,DOT11_WPS_PASSWORD_ID_USER_SPECIFIED = 0x1,DOT11_WPS_PASSWORD_ID_MACHINE_SPECIFIED = 0x2,DOT11_WPS_PASSWORD_ID_REKEY = 0x3,DOT11_WPS_PASSWORD_ID_PUSHBUTTON = 0x4,DOT11_WPS_PASSWORD_ID_REGISTRAR_SPECIFIED = 0x5,};
enum _DXGK_VIDPN_INTERFACE_VERSION {DXGK_VIDPN_INTERFACE_VERSION_UNINITIALIZED = 0x0,DXGK_VIDPN_INTERFACE_VERSION_V1 = 0x1,};
enum _ENLISTMENT_INFORMATION_CLASS {EnlistmentBasicInformation = 0x0,EnlistmentRecoveryInformation = 0x1,EnlistmentCrmInformation = 0x2,};
enum _HAL_DISPLAY_BIOS_INFORMATION {HalDisplayInt10Bios = 0x0,HalDisplayEmulatedBios = 0x1,HalDisplayNoBios = 0x2,};
enum _IO_COMPLETION_ROUTINE_RESULT {ContinueCompletion = 0x0,StopCompletion = 0xC0000016,};
enum _MEDIA_CHANGE_DETECTION_STATE {MediaUnknown = 0x0,MediaPresent = 0x1,MediaNotPresent = 0x2,MediaUnavailable = 0x3,};
enum _MSV1_0_PROTOCOL_MESSAGE_TYPE {MsV1_0Lm20ChallengeRequest = 0x0,MsV1_0Lm20GetChallengeResponse = 0x1,MsV1_0EnumerateUsers = 0x2,MsV1_0GetUserInfo = 0x3,MsV1_0ReLogonUsers = 0x4,MsV1_0ChangePassword = 0x5,MsV1_0ChangeCachedPassword = 0x6,MsV1_0GenericPassthrough = 0x7,MsV1_0CacheLogon = 0x8,MsV1_0SubAuth = 0x9,MsV1_0DeriveCredential = 0xA,MsV1_0CacheLookup = 0xB,MsV1_0SetProcessOption = 0xC,MsV1_0ConfigLocalAliases = 0xD,MsV1_0ClearCachedCredentials = 0xE,MsV1_0LookupToken = 0xF,MsV1_0ValidateAuth = 0x10,MsV1_0CacheLookupEx = 0x11,MsV1_0GetCredentialKey = 0x12,MsV1_0SetThreadOption = 0x13,};
enum _NL_ROUTER_DISCOVERY_BEHAVIOR {RouterDiscoveryDisabled = 0x0,RouterDiscoveryEnabled = 0x1,RouterDiscoveryDhcp = 0x2,RouterDiscoveryUnchanged = 0xFFFFFFFF,};
enum _SECURITY_IMPERSONATION_LEVEL {SecurityAnonymous = 0x0,SecurityIdentification = 0x1,SecurityImpersonation = 0x2,SecurityDelegation = 0x3,};
enum _SYSTEM_FIRMWARE_TABLE_ACTION {SystemFirmwareTable_Enumerate = 0x0,SystemFirmwareTable_Get = 0x1,};
typedef struct _ACPI_DEBUGGING_DEVICE_IN_USE ACPI_DEBUGGING_DEVICE_IN_USE;
typedef struct _BDA_DVBT2_L1_SIGNALLING_DATA BDA_DVBT2_L1_SIGNALLING_DATA;
typedef struct _BDA_WMDRMTUNER_PIDPROTECTION BDA_WMDRMTUNER_PIDPROTECTION;
typedef struct _BTH_PROFILE_DRIVER_INTERFACE BTH_PROFILE_DRIVER_INTERFACE;
typedef struct _CDROM_TOC_CD_TEXT_DATA_BLOCK CDROM_TOC_CD_TEXT_DATA_BLOCK;
typedef struct _CDROM_WRITE_SPEED_DESCRIPTOR CDROM_WRITE_SPEED_DESCRIPTOR;
typedef struct _CDVD_INACTIVITY_TIMEOUT_PAGE CDVD_INACTIVITY_TIMEOUT_PAGE;
typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA CM_DISK_GEOMETRY_DEVICE_DATA;
typedef struct _CM_EISA_FUNCTION_INFORMATION CM_EISA_FUNCTION_INFORMATION;
typedef struct _D3DKMDT_VIDEO_PRESENT_SOURCE D3DKMDT_VIDEO_PRESENT_SOURCE;
typedef struct _D3DKMDT_VIDEO_PRESENT_TARGET D3DKMDT_VIDEO_PRESENT_TARGET;
typedef struct _DEVICEDUMP_PUBLIC_SUBSECTION DEVICEDUMP_PUBLIC_SUBSECTION;
typedef struct _DEVICEDUMP_STRUCTURE_VERSION DEVICEDUMP_STRUCTURE_VERSION;
typedef struct _DEVICE_DATA_SET_SCRUB_OUTPUT DEVICE_DATA_SET_SCRUB_OUTPUT;
typedef struct _DOT11_AVAILABLE_CHANNEL_LIST DOT11_AVAILABLE_CHANNEL_LIST;
typedef struct _DOT11_CURRENT_OPERATION_MODE DOT11_CURRENT_OPERATION_MODE;
typedef struct _DOT11_DIVERSITY_SELECTION_RX DOT11_DIVERSITY_SELECTION_RX;
typedef struct _DOT11_NIC_SPECIFIC_EXTENSION DOT11_NIC_SPECIFIC_EXTENSION;
typedef struct _DOT11_SEND_EXTENSION_INFO_V2 DOT11_SEND_EXTENSION_INFO_V2;
typedef struct _DOT11_SUPPORTED_ANTENNA_LIST DOT11_SUPPORTED_ANTENNA_LIST;
typedef struct _DOT11_SUPPORTED_DSSS_CHANNEL DOT11_SUPPORTED_DSSS_CHANNEL;
typedef struct _DOT11_SUPPORTED_POWER_LEVELS DOT11_SUPPORTED_POWER_LEVELS;
typedef struct _DOT11_WME_AC_PARAMTERS_LIST DOT11_WME_AC_PARAMETERS_LIST;
typedef struct _DRIVE_LAYOUT_INFORMATION_GPT DRIVE_LAYOUT_INFORMATION_GPT;
typedef struct _DRIVE_LAYOUT_INFORMATION_MBR DRIVE_LAYOUT_INFORMATION_MBR;
typedef struct _DSM_QuerySupportedLBPolicies DSM_QuerySupportedLBPolicies;
typedef struct _DXGKARGCB_ENUMHANDLECHILDREN DXGKARGCB_ENUMHANDLECHILDREN;
typedef struct _DXGKARG_UPDATEPAGETABLEFLAGS DXGKARG_UPDATEPAGETABLEFLAGS;
typedef struct _DXGK_DESCRIBEALLOCATIONFLAGS DXGK_DESCRIBEALLOCATIONFLAGS;
typedef struct _DXGK_POWER_COMPONENT_MAPPING DXGK_POWER_COMPONENT_MAPPING;
typedef struct _DXGK_POWER_RUNTIME_COMPONENT DXGK_POWER_RUNTIME_COMPONENT;
typedef struct _DXGK_SETPOINTERPOSITIONFLAGS DXGK_SETPOINTERPOSITIONFLAGS;
typedef struct _DXGK_VIDPNTOPOLOGY_INTERFACE DXGK_VIDPNTOPOLOGY_INTERFACE;
typedef struct _ENABLE_DISABLE_FP_POLLING_IN ENABLE_DISABLE_FP_POLLING_IN;
typedef struct _ENLISTMENT_BASIC_INFORMATION ENLISTMENT_BASIC_INFORMATION;
typedef struct _EXTENDED_ENCRYPTED_DATA_INFO EXTENDED_ENCRYPTED_DATA_INFO;
typedef struct _FILE_COMPRESSION_INFORMATION FILE_COMPRESSION_INFORMATION;
typedef struct _FILE_DISPOSITION_INFORMATION FILE_DISPOSITION_INFORMATION;
typedef struct _FILE_END_OF_FILE_INFORMATION FILE_END_OF_FILE_INFORMATION;
typedef struct _FILE_FS_OBJECTID_INFORMATION FILE_FS_OBJECTID_INFORMATION;
typedef struct _FILE_ID_BOTH_DIR_INFORMATION FILE_ID_BOTH_DIR_INFORMATION;
typedef struct _FILE_ID_EXTD_DIR_INFORMATION FILE_ID_EXTD_DIR_INFORMATION;
typedef struct _FILE_ID_FULL_DIR_INFORMATION FILE_ID_FULL_DIR_INFORMATION;
typedef struct _FILE_PIPE_REMOTE_INFORMATION FILE_PIPE_REMOTE_INFORMATION;
typedef struct _FILE_SFIO_VOLUME_INFORMATION FILE_SFIO_VOLUME_INFORMATION;
typedef struct _FILE_TYPE_NOTIFICATION_INPUT FILE_TYPE_NOTIFICATION_INPUT;
typedef struct _FILE_VOLUME_NAME_INFORMATION FILE_VOLUME_NAME_INFORMATION;
typedef struct _FSRTL_PER_FILEOBJECT_CONTEXT FSRTL_PER_FILEOBJECT_CONTEXT;
typedef struct _HAL_AMLI_BAD_IO_ADDRESS_LIST HAL_AMLI_BAD_IO_ADDRESS_LIST;
typedef struct _HIDP_KEYBOARD_MODIFIER_STATE HIDP_KEYBOARD_MODIFIER_STATE;
typedef struct _IDE_CONTROLLER_CONFIGURATION IDE_CONTROLLER_CONFIGURATION;
typedef struct _IDE_TRANSFER_MODE_PARAMETERS IDE_TRANSFER_MODE_PARAMETERS;
typedef _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _INSTANCE_PARTIAL_INFORMATION INSTANCE_PARTIAL_INFORMATION;
typedef struct _INTERNAL_I8042_HOOK_KEYBOARD INTERNAL_I8042_HOOK_KEYBOARD;
typedef struct _IO_SESSION_STATE_INFORMATION IO_SESSION_STATE_INFORMATION;
typedef struct _IRB_REQ_GET_GENERATION_COUNT IRB_REQ_GET_GENERATION_COUNT;
typedef struct _IRB_REQ_ISOCH_ATTACH_BUFFERS IRB_REQ_ISOCH_ATTACH_BUFFERS;
typedef struct _IRB_REQ_ISOCH_DETACH_BUFFERS IRB_REQ_ISOCH_DETACH_BUFFERS;
typedef struct _IRB_REQ_ISOCH_FREE_BANDWIDTH IRB_REQ_ISOCH_FREE_BANDWIDTH;
typedef struct _IRB_REQ_ISOCH_FREE_RESOURCES IRB_REQ_ISOCH_FREE_RESOURCES;
typedef struct _ISCSI_DiscoveredTargetPortal ISCSI_DiscoveredTargetPortal;
typedef struct _KSM_BDA_CAS_ENTITLEMENTTOKEN KSM_BDA_CAS_ENTITLEMENTTOKEN;
typedef struct _KSM_BDA_CAS_OPENBROADCASTMMI KSM_BDA_CAS_OPENBROADCASTMMI;
typedef struct _KSM_BDA_WMDRMTUNER_SYNCVALUE KSM_BDA_WMDRMTUNER_SYNCVALUE;
typedef struct _8251F34BCF49AE1C266F7CD180791646 KSNODEPROPERTY_AUDIO_CHANNEL;
typedef struct _364E147BBB652D1A6AD46ACECD93F8A9 KSPROPERTY_CROSSBAR_ACTIVE_S;
typedef struct _631353BB22A3E1576EFF7DC760D2A07D KSPROPERTY_STEPPING_LONGLONG;
typedef struct _B62AAF3B70FEB5C8D5EF5D71926BC992 KSPROPERTY_TUNER_FREQUENCY_S;
typedef struct _23496AA6B538BC04EA278D40B88E7395 KSPROPERTY_TUNER_IF_MEDIUM_S;
typedef struct _358B21B769DBB67C3050F61FED658732 KSPROPERTY_TUNER_MODE_CAPS_S;
typedef struct _5670F38347E174B4000DBD4C099C3F79 KSPROPERTY_TUNER_SCAN_CAPS_S;
typedef struct _7DA6CEE7E211DED2F61B14AB99948ADC KSP_DRMAUDIOSTREAM_CONTENTID;
typedef struct tagKS_DATAFORMAT_MPEGVIDEOINFO2 KS_DATAFORMAT_MPEGVIDEOINFO2;
enum MACRO_AddConnectionToSession {AddConnectionToSession = 32,};
enum MACRO_CM_RESOURCE_CONNECTION {CM_RESOURCE_CONNECTION_CLASS_GPIO = 0x1,CM_RESOURCE_CONNECTION_CLASS_SERIAL = 0x2,CM_RESOURCE_CONNECTION_TYPE_GPIO_IO = 0x2,CM_RESOURCE_CONNECTION_TYPE_SERIAL_I2C = 0x1,CM_RESOURCE_CONNECTION_TYPE_SERIAL_SPI = 0x2,CM_RESOURCE_CONNECTION_TYPE_SERIAL_UART = 0x3,};
enum MACRO_ClearAllHealthCounters {ClearAllHealthCounters = 4,};
enum MACRO_CreateVirtualPortEx_IN {CreateVirtualPortEx_IN_WWPN_ID = 2,CreateVirtualPortEx_IN_WWNN_ID = 3,CreateVirtualPortEx_IN_Tag_ID = 4,CreateVirtualPortEx_IN_VirtualName_ID = 5,CreateVirtualPortEx_OUT_Status_ID = 1,};
enum MACRO_GetFcpTargetMapping_IN {GetFcpTargetMapping_IN_HbaPortWWN_ID = 1,GetFcpTargetMapping_IN_InEntryCount_ID = 2,GetFcpTargetMapping_OUT_HBAStatus_ID = 3,GetFcpTargetMapping_OUT_TotalEntryCount_ID = 4,GetFcpTargetMapping_OUT_OutEntryCount_ID = 5,GetFcpTargetMapping_OUT_Entry_ID = 6,};
enum MACRO_GetPortAttributesByWWN {GetPortAttributesByWWN = 2,};
enum MACRO_IOCTL_INTERNAL_USB_GET {IOCTL_INTERNAL_USB_GET_PORT_STATUS = 2228243,IOCTL_INTERNAL_USB_ENABLE_PORT = 2228247,IOCTL_INTERNAL_USB_GET_HUB_COUNT = 2228251,IOCTL_INTERNAL_USB_CYCLE_PORT = 2228255,IOCTL_INTERNAL_USB_GET_HUB_NAME = 2228256,IOCTL_INTERNAL_USB_GET_BUS_INFO = 2229280,IOCTL_INTERNAL_USB_GET_CONTROLLER_NAME = 2229284,IOCTL_INTERNAL_USB_GET_BUSGUID_INFO = 2229288,IOCTL_INTERNAL_USB_GET_PARENT_HUB_INFO = 2229292,IOCTL_INTERNAL_USB_SUBMIT_IDLE_NOTIFICATION = 2228263,IOCTL_INTERNAL_USB_GET_DEVICE_HANDLE = 2229299,IOCTL_INTERNAL_USB_NOTIFY_IDLE_READY = 2229315,IOCTL_INTERNAL_USB_REQ_GLOBAL_SUSPEND = 2229319,IOCTL_INTERNAL_USB_REQ_GLOBAL_RESUME = 2229323,IOCTL_INTERNAL_USB_RECORD_FAILURE = 2228267,IOCTL_INTERNAL_USB_GET_DEVICE_HANDLE_EX = 2229303,IOCTL_INTERNAL_USB_GET_TT_DEVICE_HANDLE = 2229307,IOCTL_INTERNAL_USB_GET_TOPOLOGY_ADDRESS = 2229311,IOCTL_INTERNAL_USB_GET_DEVICE_CONFIG_INFO = 2229327,IOCTL_INTERNAL_USB_REGISTER_COMPOSITE_DEVICE = 4784131,IOCTL_INTERNAL_USB_UNREGISTER_COMPOSITE_DEVICE = 4784135,IOCTL_INTERNAL_USB_REQUEST_REMOTE_WAKE_NOTIFICATION = 4784139,};
enum MACRO_MSiSCSI_HBAInformation {MSiSCSI_HBAInformation_UniqueAdapterId_ID = 1,MSiSCSI_HBAInformation_IntegratedTCPIP_ID = 2,MSiSCSI_HBAInformation_RequiresBinaryIpAddresses_ID = 3,MSiSCSI_HBAInformation_VersionMin_ID = 4,MSiSCSI_HBAInformation_VersionMax_ID = 5,MSiSCSI_HBAInformation_MultifunctionDevice_ID = 6,MSiSCSI_HBAInformation_CacheValid_ID = 7,MSiSCSI_HBAInformation_NumberOfPorts_ID = 8,};
enum MACRO_OID_DOT11_DISASSOCIATE {OID_DOT11_DISASSOCIATE_PEER_REQUEST = 0xE030105,};
enum MACRO_OID_DOT11_WFD_DISCOVER {OID_DOT11_WFD_DISCOVER_REQUEST = 0xE050105,};
enum MACRO_RemoveVirtualPortEx_IN {RemoveVirtualPortEx_IN_WWPN_ID = 2,RemoveVirtualPortEx_OUT_Status_ID = 1,};
enum MACRO_ResourceNeverExclusive {ResourceNeverExclusive = 0x10,ResourceReleaseByOtherThread = 0x20,ResourceOwnedExclusive = 0x80,};
enum MACRO_SetCHAPSharedSecret_IN {SetCHAPSharedSecret_IN_SharedSecretSize_ID = 1,SetCHAPSharedSecret_IN_SharedSecret_ID = 2,SetCHAPSharedSecret_OUT_Status_ID = 3,};
enum MACRO_SetChapForPhysicalPort {SetChapForPhysicalPort = 1,};
enum MACRO_SetGenerationalGuid_IN {SetGenerationalGuid_IN_GenerationalGuid_ID = 1,SetGenerationalGuid_OUT_Status_ID = 2,};
enum MACRO_WmiQueryStatisticsInfo {WmiQueryStatisticsInfo = 1,};
typedef struct _MODE_DATA_COMPRESS_PAGE_PLUS MODE_DATA_COMPRESS_PAGE_PLUS;
typedef struct _MODE_DEVICE_CONFIG_PAGE_PLUS MODE_DEVICE_CONFIG_PAGE_PLUS;
typedef struct _MODE_TRANSPORT_GEOMETRY_PAGE MODE_TRANSPORT_GEOMETRY_PAGE;
typedef struct _MOUNTDEV_SUGGESTED_LINK_NAME MOUNTDEV_SUGGESTED_LINK_NAME;
typedef struct _MOUNTMGR_DRIVE_LETTER_TARGET MOUNTMGR_DRIVE_LETTER_TARGET;
typedef struct _MPIO_DEVINSTANCE_HEALTH_INFO MPIO_DEVINSTANCE_HEALTH_INFO;
typedef struct _MRX_SRVCALL_CALLBACK_CONTEXT MRX_SRVCALL_CALLBACK_CONTEXT;
typedef struct _MSFC_FibrePortNPIVAttributes MSFC_FibrePortNPIVAttributes;
typedef struct _MSMCAEvent_MemoryPageRemoved MSMCAEvent_MemoryPageRemoved;
typedef struct _MSMCAEvent_PCIComponentError MSMCAEvent_PCIComponentError;
typedef struct _MSNdis_80211_ConfigurationFH MSNdis_80211_ConfigurationFH;
typedef struct _MSNdis_AtmMaxAal34PacketSize MSNdis_AtmMaxAal34PacketSize;
typedef struct _MSNdis_CoReceivePdusNoBuffer MSNdis_CoReceivePdusNoBuffer;
typedef struct _MSNdis_CoVendorDriverVersion MSNdis_CoVendorDriverVersion;
typedef struct _MSNdis_EthernetMulticastList MSNdis_EthernetMulticastList;
typedef struct _MSNdis_FddiLongMulticastList MSNdis_FddiLongMulticastList;
typedef struct _MSNdis_NicSwitchCapabilities MSNdis_NicSwitchCapabilities;
typedef struct _MSNdis_ReceiveQueueInfoArray MSNdis_ReceiveQueueInfoArray;
typedef struct _MSNdis_StatusDevicePowerOnEx MSNdis_StatusDevicePowerOnEx;
typedef struct _MSNdis_StatusLinkSpeedChange MSNdis_StatusLinkSpeedChange;
typedef struct _MSNdis_TokenRingCurrentGroup MSNdis_TokenRingCurrentGroup;
typedef struct _MSiSCSI_ConnectionStatistics MSiSCSI_ConnectionStatistics;
typedef struct _MSiSCSI_InitiatorSessionInfo MSiSCSI_InitiatorSessionInfo;
typedef struct _MSiSCSI_SecurityCapabilities MSiSCSI_SecurityCapabilities;
typedef struct _NAMED_PIPE_CREATE_PARAMETERS NAMED_PIPE_CREATE_PARAMETERS;
typedef struct _NDIS_802_11_CONFIGURATION_FH NDIS_802_11_CONFIGURATION_FH;
typedef struct _NDIS_CONFIGURATION_PARAMETER NDIS_CONFIGURATION_PARAMETER;
typedef struct _NDIS_FILTER_PAUSE_PARAMETERS NDIS_FILTER_PAUSE_PARAMETERS;
typedef struct _NDIS_HD_SPLIT_CURRENT_CONFIG NDIS_HD_SPLIT_CURRENT_CONFIG;
typedef struct _NDIS_NIC_SWITCH_CAPABILITIES NDIS_NIC_SWITCH_CAPABILITIES;
typedef struct _NDIS_PM_WAKE_UP_CAPABILITIES NDIS_PM_WAKE_UP_CAPABILITIES;
typedef struct _NDIS_RECEIVE_HASH_PARAMETERS NDIS_RECEIVE_HASH_PARAMETERS;
typedef struct _NDIS_TAPI_GET_ADDRESS_STATUS NDIS_TAPI_GET_ADDRESS_STATUS;
typedef struct _NDIS_TAPI_SELECT_EXT_VERSION NDIS_TAPI_SELECT_EXT_VERSION;
typedef struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD NDIS_TCP_IP_CHECKSUM_OFFLOAD;
typedef struct _NDIS_WWAN_REGISTRATION_STATE NDIS_WWAN_REGISTRATION_STATE;
typedef struct _NDIS_WWAN_SERVICE_ACTIVATION NDIS_WWAN_SERVICE_ACTIVATION;
typedef struct _NDIS_WWAN_SET_PACKET_SERVICE NDIS_WWAN_SET_PACKET_SERVICE;
typedef struct _NDIS_WWAN_SET_REGISTER_STATE NDIS_WWAN_SET_REGISTER_STATE;
typedef struct _NDK_SHARED_ENDPOINT_DISPATCH NDK_SHARED_ENDPOINT_DISPATCH;
typedef struct _NOTIFICATION_EXTERNAL_STATUS NOTIFICATION_EXTERNAL_STATUS;
typedef struct _NPI_PROVIDER_CHARACTERISTICS NPI_PROVIDER_CHARACTERISTICS;
typedef union _OB_POST_OPERATION_PARAMETERS OB_POST_OPERATION_PARAMETERS;
typedef struct _OB_PRE_OPERATION_INFORMATION OB_PRE_OPERATION_INFORMATION;
typedef struct _OFFLOAD_SECURITY_ASSOCIATION OFFLOAD_SECURITY_ASSOCIATION;
typedef union _AER_BRIDGE_DESCRIPTOR_FLAGS *PAER_BRIDGE_DESCRIPTOR_FLAGS;
typedef struct _ATM_CALLING_PARTY_NUMBER_IE *PATM_CALLING_PARTY_NUMBER_IE;
typedef struct _BTHX_HCI_READ_WRITE_CONTEXT *PBTHX_HCI_READ_WRITE_CONTEXT;
typedef struct _CHANGER_READ_ELEMENT_STATUS *PCHANGER_READ_ELEMENT_STATUS;
typedef struct _PCI_DEVICE_PRESENT_INTERFACE PCI_DEVICE_PRESENT_INTERFACE;
typedef union _PCI_EXPRESS_AER_CAPABILITIES PCI_EXPRESS_AER_CAPABILITIES;
typedef union _PCI_EXPRESS_PME_REQUESTOR_ID PCI_EXPRESS_PME_REQUESTOR_ID;
typedef struct _PCI_EXPRESS_SRIOV_CAPABILITY PCI_EXPRESS_SRIOV_CAPABILITY;
typedef struct _PCI_SUBSYSTEM_IDS_CAPABILITY PCI_SUBSYSTEM_IDS_CAPABILITY;
typedef struct _PCI_VIRTUALIZATION_INTERFACE PCI_VIRTUALIZATION_INTERFACE;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1 *PCLAIM_SECURITY_ATTRIBUTE_V1;
typedef struct _CLASS_FUNCTION_SUPPORT_INFO *PCLASS_FUNCTION_SUPPORT_INFO;
typedef struct _CLASS_INTERPRET_SENSE_INFO2 *PCLASS_INTERPRET_SENSE_INFO2;
typedef struct _CM_FULL_RESOURCE_DESCRIPTOR *PCM_FULL_RESOURCE_DESCRIPTOR;
typedef struct _PCW_REGISTRATION_INFORMATION PCW_REGISTRATION_INFORMATION;
typedef struct _DEBUG_DEVICE_INFORMATION_V2 *PDEBUG_DEVICE_INFORMATION_V2;
typedef struct _DEVICE_UI_FIRMWARE_REVISION *PDEVICE_UI_FIRMWARE_REVISION;
typedef struct _DISK_PERFORMANCE_PARAMETERS *PDISK_PERFORMANCE_PARAMETERS;
typedef struct DOT11_ASSOCIATION_INFO_LIST *PDOT11_ASSOCIATION_INFO_LIST;
typedef struct DOT11_AUTH_CIPHER_PAIR_LIST *PDOT11_AUTH_CIPHER_PAIR_LIST;
typedef struct DOT11_CIPHER_ALGORITHM_LIST *PDOT11_CIPHER_ALGORITHM_LIST;
typedef struct _DOT11_HOPPING_PATTERN_ENTRY *PDOT11_HOPPING_PATTERN_ENTRY;
typedef struct DOT11_HRDSSS_PHY_ATTRIBUTES *PDOT11_HRDSSS_PHY_ATTRIBUTES;
typedef struct _DOT11_RECV_SENSITIVITY_LIST *PDOT11_RECV_SENSITIVITY_LIST;
typedef struct _DRIVER_VERIFIER_THUNK_PAIRS *PDRIVER_VERIFIER_THUNK_PAIRS;
typedef struct _DRIVE_LAYOUT_INFORMATION_EX *PDRIVE_LAYOUT_INFORMATION_EX;
typedef struct _DUAL_OPLOCK_KEY_ECP_CONTEXT *PDUAL_OPLOCK_KEY_ECP_CONTEXT;
typedef struct _AF8F52BD2951A3140126221F3F69B7AF *PDXGK_BRIGHTNESS_INTERFACE_2;
typedef struct _DXGK_DEBUG_REPORT_INTERFACE *PDXGK_DEBUG_REPORT_INTERFACE;
typedef struct _DeleteInitiatorNodeName_OUT *PDeleteInitiatorNodeName_OUT;
typedef struct _DsmSetLoadBalancePolicy_OUT *PDsmSetLoadBalancePolicy_OUT;
typedef struct _FILE_ALLOCATED_RANGE_BUFFER *PFILE_ALLOCATED_RANGE_BUFFER;
typedef struct _FILE_ALLOCATION_INFORMATION *PFILE_ALLOCATION_INFORMATION;
typedef struct _FILE_COMPLETION_INFORMATION *PFILE_COMPLETION_INFORMATION;
typedef struct _FILE_FS_CONTROL_INFORMATION *PFILE_FS_CONTROL_INFORMATION;
typedef struct _FILE_LINK_ENTRY_INFORMATION *PFILE_LINK_ENTRY_INFORMATION;
typedef struct _FILE_MAKE_COMPATIBLE_BUFFER *PFILE_MAKE_COMPATIBLE_BUFFER;
typedef struct _FILE_PIPE_LOCAL_INFORMATION *PFILE_PIPE_LOCAL_INFORMATION;
typedef struct _FILE_SET_DEFECT_MGMT_BUFFER *PFILE_SET_DEFECT_MGMT_BUFFER;
typedef struct _FUNCTIONAL_DEVICE_EXTENSION *PFUNCTIONAL_DEVICE_EXTENSION;
typedef struct _GetFcpPersistentBinding_OUT *PGetFcpPersistentBinding_OUT;
typedef struct _HID_MINIDRIVER_REGISTRATION *PHID_MINIDRIVER_REGISTRATION;
typedef struct _ICMPV4_ADDRESS_MASK_MESSAGE *PICMPV4_ADDRESS_MASK_MESSAGE;
typedef struct _ICMPV4_ROUTER_ADVERT_HEADER *PICMPV4_ROUTER_ADVERT_HEADER;
typedef struct _IGMPV3_REPORT_RECORD_HEADER *PIGMPV3_REPORT_RECORD_HEADER;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _E4277B22BE8DDC98F66C5B49691234CA *PINET_PORT_RESERVATION_TOKEN;
typedef struct _ISCSI_Supported_LB_Policies *PISCSI_Supported_LB_Policies;
typedef struct _KEY_VALUE_BASIC_INFORMATION *PKEY_VALUE_BASIC_INFORMATION;
typedef struct _KEY_WOW64_FLAGS_INFORMATION *PKEY_WOW64_FLAGS_INFORMATION;
typedef struct _6D40E8E2125A3BBCEB5B162FD51EF33B *PKSDS3D_LISTENER_ORIENTATION;
typedef struct _KSM_BDA_GDDS_TUNEXMLFROMIDX *PKSM_BDA_GDDS_TUNEXMLFROMIDX;
typedef struct _KSM_BDA_TS_SELECTOR_SETTSID *PKSM_BDA_TS_SELECTOR_SETTSID;
typedef struct _ACFC21BFB5CC6BA65A81729B6E881FEB *PKSPROPERTY_CAMERACONTROL_S2;
typedef struct _ECD9D23603D8BADEE24156B8BE3276B4 *PKSPROPERTY_CROSSBAR_ROUTE_S;
typedef struct _060F75F85D33090A279ABE5EFCC5AB4A *PKSPROPERTY_TUNER_STANDARD_S;
typedef struct _B479CD8F7541BC4BC8DADEB69DB970AF *PKSRTAUDIO_BUFFER_PROPERTY32;
typedef struct _B03639772012518ABC96BF05B41D5C12 *PKSSTREAMALLOCATOR_STATUS_EX;
typedef struct tagKS_DATAFORMAT_H264VIDEOINFO *PKS_DATAFORMAT_H264VIDEOINFO;
typedef struct tagKS_DATAFORMAT_VBIINFOHEADER *PKS_DATAFORMAT_VBIINFOHEADER;
typedef struct _KS_VIDEO_STREAM_CONFIG_CAPS *PKS_VIDEO_STREAM_CONFIG_CAPS;
typedef struct _KernelPerfStateDomainChange *PKernelPerfStateDomainChange;
typedef struct _PLUGPLAY_NOTIFICATION_HEADER PLUGPLAY_NOTIFICATION_HEADER;
typedef struct _MEDIA_CHANGE_DETECTION_INFO *PMEDIA_CHANGE_DETECTION_INFO;
typedef struct _MODE_TAPE_MEDIA_INFORMATION *PMODE_TAPE_MEDIA_INFORMATION;
typedef struct _MOUNTMGR_CHANGE_NOTIFY_INFO *PMOUNTMGR_CHANGE_NOTIFY_INFO;
typedef struct _MOUNTMGR_CREATE_POINT_INPUT *PMOUNTMGR_CREATE_POINT_INPUT;
typedef struct _MOUNTMGR_VOLUME_MOUNT_POINT *PMOUNTMGR_VOLUME_MOUNT_POINT;
typedef struct _MRX_PIPE_HANDLE_INFORMATION *PMRX_PIPE_HANDLE_INFORMATION;
typedef struct _MSFC_FCAdapterHBAAttributes *PMSFC_FCAdapterHBAAttributes;
typedef struct _MSFC_FibrePortHBAAttributes *PMSFC_FibrePortHBAAttributes;
typedef struct _MSFC_FibrePortHBAStatistics *PMSFC_FibrePortHBAStatistics;
typedef struct _MSKeyboard_ClassInformation *PMSKeyboard_ClassInformation;
typedef struct _MSMCAEvent_SystemEventError *PMSMCAEvent_SystemEventError;
typedef struct _MSNdis_80211_ReloadDefaults *PMSNdis_80211_ReloadDefaults;
typedef struct _MSNdis_AtmMaxAal0PacketSize *PMSNdis_AtmMaxAal0PacketSize;
typedef struct _MSNdis_AtmMaxAal1PacketSize *PMSNdis_AtmMaxAal1PacketSize;
typedef struct _MSNdis_AtmMaxAal5PacketSize *PMSNdis_AtmMaxAal5PacketSize;
typedef struct _MSNdis_AtmSupportedAalTypes *PMSNdis_AtmSupportedAalTypes;
typedef struct _MSNdis_CoMediaConnectStatus *PMSNdis_CoMediaConnectStatus;
typedef struct _MSNdis_FddiLConnectionState *PMSNdis_FddiLConnectionState;
typedef struct _MSNdis_FddiUpstreamNodeLong *PMSNdis_FddiUpstreamNodeLong;
typedef struct _MSNdis_NetworkDirectVersion *PMSNdis_NetworkDirectVersion;
typedef struct _MSNdis_NotifyAdapterArrival *PMSNdis_NotifyAdapterArrival;
typedef struct _MSNdis_NotifyAdapterRemoval *PMSNdis_NotifyAdapterRemoval;
typedef struct _MSNdis_StatusDevicePowerOff *PMSNdis_StatusDevicePowerOff;
typedef struct _MSNdis_StatusProtocolUnbind *PMSNdis_StatusProtocolUnbind;
typedef struct _MSNdis_TcpOffloadParameters *PMSNdis_TcpOffloadParameters;
typedef struct _MSV1_0_GETUSERINFO_RESPONSE *PMSV1_0_GETUSERINFO_RESPONSE;
typedef struct _MSVerifierIrpLogInformation *PMSVerifierIrpLogInformation;
typedef struct _NDIS_MSIX_CONFIG_PARAMETERS *PNDIS_MSIX_CONFIG_PARAMETERS;
typedef struct _NDIS_TAPI_PROVIDER_SHUTDOWN *PNDIS_TAPI_PROVIDER_SHUTDOWN;
typedef struct _NDIS_TCP_CONNECTION_OFFLOAD *PNDIS_TCP_CONNECTION_OFFLOAD;
typedef struct _NDIS_WMI_RECEIVE_QUEUE_INFO *PNDIS_WMI_RECEIVE_QUEUE_INFO;
typedef struct _NDIS_WWAN_SET_CONTEXT_STATE *PNDIS_WWAN_SET_CONTEXT_STATE;
typedef struct _NDIS_WWAN_SET_HOME_PROVIDER *PNDIS_WWAN_SET_HOME_PROVIDER;
typedef struct _NDIS_WWAN_SMS_CONFIGURATION *PNDIS_WWAN_SMS_CONFIGURATION;
typedef struct _NDIS_WWAN_SMS_DELETE_STATUS *PNDIS_WWAN_SMS_DELETE_STATUS;
typedef struct _NDIS_WWAN_VISIBLE_PROVIDERS *PNDIS_WWAN_VISIBLE_PROVIDERS;
typedef struct _NETWORK_OPEN_ECP_CONTEXT_V0 *PNETWORK_OPEN_ECP_CONTEXT_V0;
typedef struct _PNP_REPLACE_DRIVER_INTERFACE PNP_REPLACE_DRIVER_INTERFACE;
typedef union _OB_PRE_OPERATION_PARAMETERS *POB_PRE_OPERATION_PARAMETERS;
typedef struct _OFFLOAD_IPSEC_ADD_UDPESP_SA *POFFLOAD_IPSEC_ADD_UDPESP_SA;
typedef struct _A97809CBA93BE73DFF75CDF56246D798 *POFFSETINSTANCEDATAANDLENGTH;
typedef struct PCI_AGP_EXTENDED_CAPABILITY *PPCI_AGP_EXTENDED_CAPABILITY;
typedef struct _PCI_DEBUGGING_DEVICE_IN_USE *PPCI_DEBUGGING_DEVICE_IN_USE;
typedef union _PCI_EXPRESS_ERROR_SOURCE_ID *PPCI_EXPRESS_ERROR_SOURCE_ID;
typedef struct _CLFS_STREAM_ID_INFORMATION **PPCLFS_STREAM_ID_INFORMATION;
typedef struct _PMI_BUDGETING_CONFIGURATION *PPMI_BUDGETING_CONFIGURATION;
typedef struct _PMI_THRESHOLD_CONFIGURATION *PPMI_THRESHOLD_CONFIGURATION;
typedef struct _BCFB24E8FFADAC88C53CD3CD50E1DFA4 PPM_IDLE_STATE_ACCOUNTING_EX;
typedef struct _POWER_STATE_CHARACTERISTICS *PPOWER_STATE_CHARACTERISTICS;
typedef struct _PROCESSOR_POWER_INFORMATION *PPROCESSOR_POWER_INFORMATION;
typedef struct _PROCESSOR_POWER_POLICY_INFO *PPROCESSOR_POWER_POLICY_INFO;
typedef struct _PROCESS_SESSION_INFORMATION *PPROCESS_SESSION_INFORMATION;
typedef struct _REG_CREATE_KEY_INFORMATION_V1 *PREG_OPEN_KEY_INFORMATION_V1;
typedef struct _REG_REPLACE_KEY_INFORMATION *PREG_REPLACE_KEY_INFORMATION;
typedef struct _REG_RESTORE_KEY_INFORMATION *PREG_RESTORE_KEY_INFORMATION;
typedef struct _REQUEST_OPLOCK_INPUT_BUFFER *PREQUEST_OPLOCK_INPUT_BUFFER;
typedef struct _AFA69771633799B8FB97339D76F53EAE *PRESP_NT_QUERY_FS_QUOTA_INFO;
typedef struct _PROCESS_HANDLE_TRACING_ENTRY PROCESS_HANDLE_TRACING_ENTRY;
typedef struct _PROCESS_HANDLE_TRACING_QUERY PROCESS_HANDLE_TRACING_QUERY;
typedef struct _PROCESS_WS_WATCH_INFORMATION PROCESS_WS_WATCH_INFORMATION;
typedef struct _RX_CALLOUT_PARAMETERS_BLOCK_ *PRX_CALLOUT_PARAMETERS_BLOCK;
typedef struct _ReportDiscoveredTargets_OUT *PReportDiscoveredTargets_OUT;
typedef struct _SCSI_PASS_THROUGH_DIRECT_EX *PSCSI_PASS_THROUGH_DIRECT_EX;
typedef struct _SD_CHANGE_MACHINE_SID_INPUT *PSD_CHANGE_MACHINE_SID_INPUT;
typedef struct _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;
typedef struct _SEC_WINNT_AUTH_IDENTITY_EX2 *PSEC_WINNT_AUTH_IDENTITY_EX2;
typedef struct _SEC_WINNT_AUTH_IDENTITY_EXW *PSEC_WINNT_AUTH_IDENTITY_EXW;
typedef struct _SES_CONTROL_DIAGNOSTIC_PAGE *PSES_CONTROL_DIAGNOSTIC_PAGE;
typedef struct _SFFDISK_DEVICE_COMMAND_DATA *PSFFDISK_DEVICE_COMMAND_DATA;
typedef struct _SFI_TIMER_DESCRIPTION_TABLE *PSFI_TIMER_DESCRIPTION_TABLE;
typedef struct _STORAGE_IDLE_POWERUP_REASON *PSTORAGE_IDLE_POWERUP_REASON;
typedef struct _STORAGE_MINIPORT_DESCRIPTOR *PSTORAGE_MINIPORT_DESCRIPTOR;
typedef struct _STORAGE_OFFLOAD_READ_OUTPUT *PSTORAGE_OFFLOAD_READ_OUTPUT;
typedef struct _STORPORT_EXTENDED_FUNCTIONS *PSTORPORT_EXTENDED_FUNCTIONS;
typedef struct _STOR_DEVICE_CAPABILITIES_EX *PSTOR_DEVICE_CAPABILITIES_EX;
typedef struct _STOR_SCATTER_GATHER_ELEMENT *PSTOR_SCATTER_GATHER_ELEMENT;
typedef struct _STOR_WMI_TRACE_MESSAGE_ARGS *PSTOR_WMI_TRACE_MESSAGE_ARGS;
typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE *PSYSTEM_SCOPED_POLICY_ID_ACE;
typedef struct _TDI20_CLIENT_INTERFACE_INFO *PTDI20_CLIENT_INTERFACE_INFO;
typedef struct _TDI_PROVIDER_RESOURCE_STATS *PTDI_PROVIDER_RESOURCE_STATS;
typedef struct _TDI_REQUEST_SET_INFORMATION *PTDI_REQUEST_SET_INFORMATION;
typedef struct _TOKEN_GROUPS_AND_PRIVILEGES *PTOKEN_GROUPS_AND_PRIVILEGES;
typedef struct _TRANSACTION_ENLISTMENT_PAIR *PTRANSACTION_ENLISTMENT_PAIR;
typedef struct _TXFS_GET_TRANSACTED_VERSION *PTXFS_GET_TRANSACTED_VERSION;
typedef struct _USB_BUS_INFORMATION_LEVEL_0 *PUSB_BUS_INFORMATION_LEVEL_0;
typedef struct _USB_BUS_INFORMATION_LEVEL_1 *PUSB_BUS_INFORMATION_LEVEL_1;
typedef struct _VBICODECFILTERING_SCANLINES *PVBICODECFILTERING_SCANLINES;
typedef struct _VIDEO_DEVICE_SESSION_STATUS *PVIDEO_DEVICE_SESSION_STATUS;
typedef struct _VIDEO_HARDWARE_STATE_HEADER *PVIDEO_HARDWARE_STATE_HEADER;
typedef struct _VIDEO_LOAD_FONT_INFORMATION *PVIDEO_LOAD_FONT_INFORMATION;
typedef struct _WATCHDOG_TIMER_ACTION_TABLE *PWATCHDOG_TIMER_ACTION_TABLE;
typedef struct _WHEA_PSHED_PLUGIN_CALLBACKS *PWHEA_PSHED_PLUGIN_CALLBACKS;
typedef struct _WHEA_XPF_MC_BANK_DESCRIPTOR *PWHEA_XPF_MC_BANK_DESCRIPTOR;
typedef union _WHEA_XPF_PROCINFO_VALIDBITS *PWHEA_XPF_PROCINFO_VALIDBITS;
typedef struct _WMI_CHANGER_PROBLEM_WARNING *PWMI_CHANGER_PROBLEM_WARNING;
typedef struct _WSK_PROVIDER_BASIC_DISPATCH *PWSK_PROVIDER_BASIC_DISPATCH;
typedef struct _WWAN_DEVICE_SERVICE_COMMAND *PWWAN_DEVICE_SERVICE_COMMAND;
typedef struct _WWAN_DEVICE_SERVICE_SESSION *PWWAN_DEVICE_SERVICE_SESSION;
typedef struct _WmiSetALSBrightnessState_IN *PWmiSetALSBrightnessState_IN;
typedef struct _WmiSetHDSplitParameters_OUT *PWmiSetHDSplitParameters_OUT;
typedef struct _REG_PRE_CREATE_KEY_INFORMATION REG_PRE_OPEN_KEY_INFORMATION;
typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER REQUEST_OPLOCK_OUTPUT_BUFFER;
typedef struct _REQ_QUERY_FS_INFORMATION_FID REQ_QUERY_FS_INFORMATION_FID;
typedef struct _EF62F39E220E1A59E4CABD7B09369D89 REQ_REPORT_DFS_INCONSISTENCY;
typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY RTL_DYNAMIC_HASH_TABLE_ENTRY;
enum ReplacesCorHdrNumericDefines {COMIMAGE_FLAGS_ILONLY = 0x1,COMIMAGE_FLAGS_32BITREQUIRED = 0x2,COMIMAGE_FLAGS_IL_LIBRARY = 0x4,COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x8,COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x10,COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,COR_VERSION_MAJOR_V2 = 0x2,COR_VERSION_MAJOR = 0x2,COR_VERSION_MINOR = 0x5,COR_DELETED_NAME_LENGTH = 0x8,COR_VTABLEGAP_NAME_LENGTH = 0x8,NATIVE_TYPE_MAX_CB = 0x1,COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 0xFF,IMAGE_COR_MIH_METHODRVA = 0x1,IMAGE_COR_MIH_EHRVA = 0x2,IMAGE_COR_MIH_BASICBLOCK = 0x8,COR_VTABLE_32BIT = 0x1,COR_VTABLE_64BIT = 0x2,COR_VTABLE_FROM_UNMANAGED = 0x4,COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 0x8,COR_VTABLE_CALL_MOST_DERIVED = 0x10,IMAGE_COR_EATJ_THUNK_SIZE = 0x20,MAX_CLASS_NAME = 0x400,MAX_PACKAGE_NAME = 0x400,};
typedef struct _ReportDiscoveredTargets2_OUT ReportDiscoveredTargets2_OUT;
typedef struct _SCSI_SENSE_DESCRIPTOR_HEADER SCSI_SENSE_DESCRIPTOR_HEADER;
typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT SD_CHANGE_MACHINE_SID_OUTPUT;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE SECURITY_DESCRIPTOR_RELATIVE;
typedef struct _SET_PARTITION_INFORMATION_EX SET_PARTITION_INFORMATION_EX;
typedef struct _SET_PURGE_FAILURE_MODE_INPUT SET_PURGE_FAILURE_MODE_INPUT;
typedef struct _SE_ADT_PARAMETER_ARRAY_ENTRY SE_ADT_PARAMETER_ARRAY_ENTRY;
typedef struct _SFFDISK_DEVICE_PASSWORD_DATA SFFDISK_DEVICE_PASSWORD_DATA;
typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR STORAGE_DEVICE_ID_DESCRIPTOR;
typedef struct _STORAGE_FAILURE_PREDICT_DATA STORAGE_FAILURE_PREDICT_DATA;
typedef struct _STORAGE_OFFLOAD_WRITE_OUTPUT STORAGE_OFFLOAD_WRITE_OUTPUT;
typedef struct _STORAGE_REQUEST_BLOCK_HEADER STORAGE_REQUEST_BLOCK_HEADER;
typedef struct _STORAGE_SCSI_INFO_EXCEPTIONS STORAGE_SCSI_INFO_EXCEPTIONS;
typedef struct _STORAGE_WRITE_CACHE_PROPERTY STORAGE_WRITE_CACHE_PROPERTY;
typedef struct _STOR_WMI_QUERYTRACEINFO_ARGS STOR_WMI_QUERYTRACEINFO_ARGS;
typedef struct _SYSTEM_HIBERFILE_INFORMATION SYSTEM_HIBERFILE_INFORMATION;
typedef struct _SecPkgContext_PasswordExpiry SecPkgContext_PasswordExpiry;
typedef struct _SetTunnelModeOuterAddress_IN SetTunnelModeOuterAddress_IN;
typedef struct _TCG_DESCRIPTION_TABLE_CLIENT TCG_DESCRIPTION_TABLE_CLIENT;
typedef struct _TCG_DESCRIPTION_TABLE_SERVER TCG_DESCRIPTION_TABLE_SERVER;
typedef struct _TDI_REQUEST_KERNEL_ASSOCIATE TDI_REQUEST_KERNEL_ASSOCIATE;
typedef struct _TDI_REQUEST_KERNEL_RECEIVEDG TDI_REQUEST_KERNEL_RECEIVEDG;
typedef struct _TDI_REQUEST_KERNEL_SET_EVENT TDI_REQUEST_KERNEL_SET_EVENT;
typedef struct _TDI_REQUEST_RECEIVE_DATAGRAM TDI_REQUEST_RECEIVE_DATAGRAM;
typedef struct _TRANSACTION_BIND_INFORMATION TRANSACTION_BIND_INFORMATION;
typedef struct _TRANSACTION_LIST_INFORMATION TRANSACTION_LIST_INFORMATION;
typedef struct _TXFS_CREATE_MINIVERSION_INFO TXFS_CREATE_MINIVERSION_INFO;
typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY TXFS_LIST_TRANSACTIONS_ENTRY;
typedef struct _TXFS_TRANSACTION_ACTIVE_INFO TXFS_TRANSACTION_ACTIVE_INFO;
typedef struct _USB_CONFIGURATION_DESCRIPTOR USB_CONFIGURATION_DESCRIPTOR;
typedef struct _USB_CONTROLLER_INFORMATION_0 USB_CONTROLLER_INFORMATION_0;
typedef struct _USB_CONTROLLER_INFORMATION_1 USB_CONTROLLER_INFORMATION_1;
typedef union _USB_FUNCTION_SUSPEND_OPTIONS USB_FUNCTION_SUSPEND_OPTIONS;
typedef struct _VIDEO_HW_INITIALIZATION_DATA VIDEO_HW_INITIALIZATION_DATA;
typedef struct _VPCI_INVALIDATE_BLOCK_OUTPUT VPCI_INVALIDATE_BLOCK_OUTPUT;
typedef struct _VPD_MEDIA_SERIAL_NUMBER_PAGE VPD_MEDIA_SERIAL_NUMBER_PAGE;
typedef struct _3128CFC3245060A29C7CC794B5D69F28 VRAM_SURFACE_INFO_PROPERTY_S;
typedef struct _WHEA_AER_ENDPOINT_DESCRIPTOR WHEA_AER_ENDPOINT_DESCRIPTOR;
typedef struct _WHEA_AER_ROOTPORT_DESCRIPTOR WHEA_AER_ROOTPORT_DESCRIPTOR;
typedef struct _WHEA_ERROR_SOURCE_DESCRIPTOR WHEA_ERROR_SOURCE_DESCRIPTOR;
typedef union _WHEA_NMI_ERROR_SECTION_FLAGS WHEA_NMI_ERROR_SECTION_FLAGS;
typedef struct _WHEA_NOTIFICATION_DESCRIPTOR WHEA_NOTIFICATION_DESCRIPTOR;
typedef struct _WSK_CLIENT_DATAGRAM_DISPATCH WSK_CLIENT_DATAGRAM_DISPATCH;
typedef struct _WSK_PROVIDER_CHARACTERISTICS WSK_PROVIDER_CHARACTERISTICS;
typedef struct _WSK_PROVIDER_LISTEN_DISPATCH WSK_PROVIDER_LISTEN_DISPATCH;
typedef struct _WWAN_DEVICE_SERVICE_RESPONSE WWAN_DEVICE_SERVICE_RESPONSE;
typedef struct _WmiMonitorBasicDisplayParams WmiMonitorBasicDisplayParams;
typedef struct _WmiSetInterruptModeration_IN WmiSetInterruptModeration_IN;
enum _AUTHENTICATION_REQUIREMENTS {MITMProtectionNotRequired = 0x0,MITMProtectionRequired = 0x1,MITMProtectionNotRequiredBonding = 0x2,MITMProtectionRequiredBonding = 0x3,MITMProtectionNotRequiredGeneralBonding = 0x4,MITMProtectionRequiredGeneralBonding = 0x5,MITMProtectionNotDefined = 0xFF,};
enum _CHANGER_DEVICE_PROBLEM_TYPE {DeviceProblemNone = 0x0,DeviceProblemHardware = 0x1,DeviceProblemCHMError = 0x2,DeviceProblemDoorOpen = 0x3,DeviceProblemCalibrationError = 0x4,DeviceProblemTargetFailure = 0x5,DeviceProblemCHMMoveError = 0x6,DeviceProblemCHMZeroError = 0x7,DeviceProblemCartridgeInsertError = 0x8,DeviceProblemPositionError = 0x9,DeviceProblemSensorError = 0xA,DeviceProblemCartridgeEjectError = 0xB,DeviceProblemGripperError = 0xC,DeviceProblemDriveError = 0xD,};
enum _CLFS_MGMT_NOTIFICATION_TYPE {ClfsMgmtAdvanceTailNotification = 0x0,ClfsMgmtLogFullHandlerNotification = 0x1,ClfsMgmtLogUnpinnedNotification = 0x2,ClfsMgmtLogWriteNotification = 0x3,};
enum _D3DKMDT_MONITOR_ORIENTATION {D3DKMDT_MO_UNINITIALIZED = 0x0,D3DKMDT_MO_0DEG = 0x1,D3DKMDT_MO_90DEG = 0x2,D3DKMDT_MO_180DEG = 0x3,D3DKMDT_MO_270DEG = 0x4,};
enum _D3DKMDT_MONITOR_TIMING_TYPE {D3DKMDT_MTT_UNINITIALIZED = 0x0,D3DKMDT_MTT_ESTABLISHED = 0x1,D3DKMDT_MTT_STANDARD = 0x2,D3DKMDT_MTT_EXTRASTANDARD = 0x3,D3DKMDT_MTT_DETAILED = 0x4,D3DKMDT_MTT_DEFAULTMONITORPROFILE = 0x5,D3DKMDT_MTT_DRIVER = 0x6,};
struct _D3DKMDT_VIDPN_HW_CAPABILITY {unsigned int DriverRotation : 1;unsigned int DriverScaling : 1;unsigned int DriverCloning : 1;unsigned int DriverColorConvert : 1;unsigned int DriverLinkedAdapaterOutput : 1;unsigned int DriverRemoteDisplay : 1;unsigned int Reserved : 26;};
enum _DXGKMDT_OPM_PROTECTION_TYPE {DXGKMDT_OPM_PROTECTION_TYPE_OTHER = 0x80000000,DXGKMDT_OPM_PROTECTION_TYPE_NONE = 0x0,DXGKMDT_OPM_PROTECTION_TYPE_COPP_COMPATIBLE_HDCP = 0x1,DXGKMDT_OPM_PROTECTION_TYPE_ACP = 0x2,DXGKMDT_OPM_PROTECTION_TYPE_CGMSA = 0x4,DXGKMDT_OPM_PROTECTION_TYPE_HDCP = 0x8,DXGKMDT_OPM_PROTECTION_TYPE_DPCP = 0x10,DXGKMDT_OPM_PROTECTION_TYPE_MASK = 0x8000001F,};
enum _FS_FILTER_SECTION_SYNC_TYPE {SyncTypeOther = 0x0,SyncTypeCreateSection = 0x1,};
enum _HAL_QUERY_INFORMATION_CLASS {HalInstalledBusInformation = 0x0,HalProfileSourceInformation = 0x1,HalInformationClassUnused1 = 0x2,HalPowerInformation = 0x3,HalProcessorSpeedInformation = 0x4,HalCallbackInformation = 0x5,HalMapRegisterInformation = 0x6,HalMcaLogInformation = 0x7,HalFrameBufferCachingInformation = 0x8,HalDisplayBiosInformation = 0x9,HalProcessorFeatureInformation = 0xA,HalNumaTopologyInterface = 0xB,HalErrorInformation = 0xC,HalCmcLogInformation = 0xD,HalCpeLogInformation = 0xE,HalQueryMcaInterface = 0xF,HalQueryAMLIIllegalIOPortAddresses = 0x10,HalQueryMaxHotPlugMemoryAddress = 0x11,HalPartitionIpiInterface = 0x12,HalPlatformInformation = 0x13,HalQueryProfileSourceList = 0x14,HalInitLogInformation = 0x15,HalFrequencyInformation = 0x16,HalProcessorBrandString = 0x17,HalHypervisorInformation = 0x18,HalPlatformTimerInformation = 0x19,HalAcpiAuditInformation = 0x1A,HalIrtInformation = 0x1B,HalSecondaryInterruptInformation = 0x1C,HalParkingPageInformation = 0x1D,HalNumaRangeTableInformation = 0x1E,HalChannelTopologyInformation = 0x1F,HalExternalCacheInformation = 0x20,HalQueryDebuggerInformation = 0x21,HalFwBootPerformanceInformation = 0x22,HalFwS3PerformanceInformation = 0x23,HalGetChannelPowerInformation = 0x24,};
enum _IO_QUERY_DEVICE_DATA_FORMAT {IoQueryDeviceIdentifier = 0x0,IoQueryDeviceConfigurationData = 0x1,IoQueryDeviceComponentInformation = 0x2,IoQueryDeviceMaxData = 0x3,};
enum _KBUGCHECK_BUFFER_DUMP_STATE {BufferEmpty = 0x0,BufferInserted = 0x1,BufferStarted = 0x2,BufferFinished = 0x3,BufferIncomplete = 0x4,};
enum _KEY_VALUE_INFORMATION_CLASS {KeyValueBasicInformation = 0x0,KeyValueFullInformation = 0x1,KeyValuePartialInformation = 0x2,KeyValueFullInformationAlign64 = 0x3,KeyValuePartialInformationAlign64 = 0x4,MaxKeyValueInfoClass = 0x5,};
struct _MEDIA_CHANGE_DETECTION_INFO;
enum _NDIS_802_11_RELOAD_DEFAULTS {Ndis802_11ReloadWEPKeys = 0x0,};
enum _NDIS_FDDI_LCONNECTION_STATE {NdisFddiStateOff = 0x1,NdisFddiStateBreak = 0x2,NdisFddiStateTrace = 0x3,NdisFddiStateConnect = 0x4,NdisFddiStateNext = 0x5,NdisFddiStateSignal = 0x6,NdisFddiStateJoin = 0x7,NdisFddiStateVerify = 0x8,NdisFddiStateActive = 0x9,NdisFddiStateMaintenance = 0xA,};
enum _RTL_GENERIC_COMPARE_RESULTS {GenericLessThan = 0x0,GenericGreaterThan = 0x1,GenericEqual = 0x2,};
enum _SCSI_ADAPTER_CONTROL_STATUS {ScsiAdapterControlSuccess = 0x0,ScsiAdapterControlUnsuccessful = 0x1,};
struct _SEC_WINNT_AUTH_IDENTITY_EX2 {unsigned int Version;unsigned short cbHeaderLength;unsigned int cbStructureLength;unsigned int UserOffset;unsigned short UserLength;unsigned int DomainOffset;unsigned short DomainLength;unsigned int PackedCredentialsOffset;unsigned short PackedCredentialsLength;unsigned int Flags;unsigned int PackageListOffset;unsigned short PackageListLength;};
struct _SEC_WINNT_AUTH_IDENTITY_EXW {unsigned int Version;unsigned int Length;unsigned short *User;unsigned int UserLength;unsigned short *Domain;unsigned int DomainLength;unsigned short *Password;unsigned int PasswordLength;unsigned int Flags;unsigned short *PackageList;unsigned int PackageListLength;};
enum _SHRINK_VOLUME_REQUEST_TYPES {ShrinkPrepare = 0x1,ShrinkCommit = 0x2,ShrinkAbort = 0x3,};
enum _STORAGE_IDENTIFIER_CODE_SET {StorageIdCodeSetReserved = 0x0,StorageIdCodeSetBinary = 0x1,StorageIdCodeSetAscii = 0x2,StorageIdCodeSetUtf8 = 0x3,};
enum _STORAGE_POWERUP_REASON_TYPE {StoragePowerupUnknown = 0x0,StoragePowerupIO = 0x1,StoragePowerupDeviceAttention = 0x2,};
enum _STOR_EVENT_ASSOCIATION_ENUM {StorEventAdapterAssociation = 0x0,StorEventLunAssociation = 0x1,StorEventTargetAssociation = 0x2,StorEventInvalidAssociation = 0x3,};
enum _TIMER_SET_INFORMATION_CLASS {TimerSetCoalescableTimer = 0x0,MaxTimerInfoClass = 0x1,};
enum _WHEA_PCIEXPRESS_DEVICE_TYPE {WheaPciExpressEndpoint = 0x0,WheaPciExpressLegacyEndpoint = 0x1,WheaPciExpressRootPort = 0x4,WheaPciExpressUpstreamSwitchPort = 0x5,WheaPciExpressDownstreamSwitchPort = 0x6,WheaPciExpressToPciXBridge = 0x7,WheaPciXToExpressBridge = 0x8,WheaPciExpressRootComplexIntegratedEndpoint = 0x9,WheaPciExpressRootComplexEventCollector = 0xA,};
typedef union _AER_BRIDGE_DESCRIPTOR_FLAGS AER_BRIDGE_DESCRIPTOR_FLAGS;
typedef struct _ATM_CALLING_PARTY_NUMBER_IE ATM_CALLING_PARTY_NUMBER_IE;
typedef struct _BTHX_HCI_READ_WRITE_CONTEXT BTHX_HCI_READ_WRITE_CONTEXT;
typedef struct _CHANGER_READ_ELEMENT_STATUS CHANGER_READ_ELEMENT_STATUS;
typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1 CLAIM_SECURITY_ATTRIBUTE_V1;
typedef struct _CLASS_FUNCTION_SUPPORT_INFO CLASS_FUNCTION_SUPPORT_INFO;
typedef struct _CLASS_INTERPRET_SENSE_INFO2 CLASS_INTERPRET_SENSE_INFO2;
typedef struct _CM_FULL_RESOURCE_DESCRIPTOR CM_FULL_RESOURCE_DESCRIPTOR;
typedef struct D3DKMDT_HVIDPNSOURCEMODESET__ *D3DKMDT_HVIDPNSOURCEMODESET;
typedef struct D3DKMDT_HVIDPNTARGETMODESET__ *D3DKMDT_HVIDPNTARGETMODESET;
typedef struct _D3DKMDT_MONITOR_SOURCE_MODE D3DKMDT_MONITOR_SOURCE_MODE;
typedef struct _D3DKMDT_VIDPN_HW_CAPABILITY D3DKMDT_VIDPN_HW_CAPABILITY;
typedef struct _DEBUG_DEVICE_INFORMATION_V2 DEBUG_DEVICE_INFORMATION_V2;
typedef struct _DEVICE_UI_FIRMWARE_REVISION DEVICE_UI_FIRMWARE_REVISION;
typedef struct _DISK_PERFORMANCE_PARAMETERS DISK_PERFORMANCE_PARAMETERS;
typedef struct _DOT11_HOPPING_PATTERN_ENTRY DOT11_HOPPING_PATTERN_ENTRY;
typedef struct _DOT11_RECV_SENSITIVITY_LIST DOT11_RECV_SENSITIVITY_LIST;
typedef struct _DRIVER_VERIFIER_THUNK_PAIRS DRIVER_VERIFIER_THUNK_PAIRS;
typedef struct _DRIVE_LAYOUT_INFORMATION_EX DRIVE_LAYOUT_INFORMATION_EX;
typedef struct _DUAL_OPLOCK_KEY_ECP_CONTEXT DUAL_OPLOCK_KEY_ECP_CONTEXT;
typedef struct _DXGKARGCB_GETCAPTUREADDRESS DXGKARGCB_GETCAPTUREADDRESS;
typedef struct _DXGKARG_PRESENT_DISPLAYONLY DXGKARG_PRESENT_DISPLAYONLY;
typedef struct _DXGKARG_UPDATEPAGEDIRECTORY DXGKARG_UPDATEPAGEDIRECTORY;
typedef struct _AF8F52BD2951A3140126221F3F69B7AF DXGK_BRIGHTNESS_INTERFACE_2;
typedef struct _DXGK_CREATEALLOCATIONFLAGS2 DXGK_CREATEALLOCATIONFLAGS2;
typedef struct _DXGK_DEBUG_REPORT_INTERFACE DXGK_DEBUG_REPORT_INTERFACE;
typedef struct _DXGK_DESTROYALLOCATIONFLAGS DXGK_DESTROYALLOCATIONFLAGS;
typedef struct _DeleteInitiatorNodeName_OUT DeleteInitiatorNodeName_OUT;
typedef struct _DsmSetLoadBalancePolicy_OUT DsmSetLoadBalancePolicy_OUT;
typedef struct _81AC0294484DCEB16CBE342B679E5951 DvbParentalRatingDescriptor;
typedef struct _FILE_ALLOCATED_RANGE_BUFFER FILE_ALLOCATED_RANGE_BUFFER;
typedef struct _FILE_ALLOCATION_INFORMATION FILE_ALLOCATION_INFORMATION;
typedef struct _FILE_COMPLETION_INFORMATION FILE_COMPLETION_INFORMATION;
typedef struct _FILE_FS_CONTROL_INFORMATION FILE_FS_CONTROL_INFORMATION;
typedef struct _FILE_LINK_ENTRY_INFORMATION FILE_LINK_ENTRY_INFORMATION;
typedef struct _FILE_MAKE_COMPATIBLE_BUFFER FILE_MAKE_COMPATIBLE_BUFFER;
typedef struct _FILE_PIPE_LOCAL_INFORMATION FILE_PIPE_LOCAL_INFORMATION;
typedef struct _FILE_SET_DEFECT_MGMT_BUFFER FILE_SET_DEFECT_MGMT_BUFFER;
typedef struct _FUNCTIONAL_DEVICE_EXTENSION FUNCTIONAL_DEVICE_EXTENSION;
typedef struct _GetFcpPersistentBinding_OUT GetFcpPersistentBinding_OUT;
typedef struct _HID_MINIDRIVER_REGISTRATION HID_MINIDRIVER_REGISTRATION;
typedef struct _ICMPV4_ADDRESS_MASK_MESSAGE ICMPV4_ADDRESS_MASK_MESSAGE;
typedef struct _ICMPV4_ROUTER_ADVERT_HEADER ICMPV4_ROUTER_ADVERT_HEADER;
typedef struct _IGMPV3_REPORT_RECORD_HEADER IGMPV3_REPORT_RECORD_HEADER;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER IMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U IMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER IMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _E4277B22BE8DDC98F66C5B49691234CA INET_PORT_RESERVATION_TOKEN;
typedef struct _IO_REMOVE_LOCK_COMMON_BLOCK IO_REMOVE_LOCK_COMMON_BLOCK;
typedef struct _IRB_RECEIVE_PHY_PACKETS IRB_REQ_RECEIVE_PHY_PACKETS;
typedef struct _ISCSI_Supported_LB_Policies ISCSI_Supported_LB_Policies;
typedef struct _KEY_VALUE_BASIC_INFORMATION KEY_VALUE_BASIC_INFORMATION;
typedef struct _KEY_WOW64_FLAGS_INFORMATION KEY_WOW64_FLAGS_INFORMATION;
typedef struct _6D40E8E2125A3BBCEB5B162FD51EF33B KSDS3D_LISTENER_ORIENTATION;
typedef struct _KSM_BDA_GDDS_TUNEXMLFROMIDX KSM_BDA_GDDS_TUNEXMLFROMIDX;
typedef struct _KSM_BDA_TS_SELECTOR_SETTSID KSM_BDA_TS_SELECTOR_SETTSID;
typedef struct _ACFC21BFB5CC6BA65A81729B6E881FEB KSPROPERTY_CAMERACONTROL_S2;
typedef struct _ECD9D23603D8BADEE24156B8BE3276B4 KSPROPERTY_CROSSBAR_ROUTE_S;
typedef struct _060F75F85D33090A279ABE5EFCC5AB4A KSPROPERTY_TUNER_STANDARD_S;
typedef struct _B479CD8F7541BC4BC8DADEB69DB970AF KSRTAUDIO_BUFFER_PROPERTY32;
typedef struct _B03639772012518ABC96BF05B41D5C12 KSSTREAMALLOCATOR_STATUS_EX;
typedef struct tagKS_DATAFORMAT_H264VIDEOINFO KS_DATAFORMAT_H264VIDEOINFO;
typedef struct tagKS_DATAFORMAT_VBIINFOHEADER KS_DATAFORMAT_VBIINFOHEADER;
typedef struct _KS_VIDEO_STREAM_CONFIG_CAPS KS_VIDEO_STREAM_CONFIG_CAPS;
typedef struct _KernelPerfStateDomainChange KernelPerfStateDomainChange;
enum MACRO_CO_E_ACTIVATIONFAILED {CO_E_ACTIVATIONFAILED = 0x8004E021,CO_E_ACTIVATIONFAILED_EVENTLOGGED = 0x8004E022,CO_E_ACTIVATIONFAILED_CATALOGERROR = 0x8004E023,CO_E_ACTIVATIONFAILED_TIMEOUT = 0x8004E024,CO_E_INITIALIZATIONFAILED = 0x8004E025,};
enum MACRO_CmResourceTypeMaximum {CmResourceTypeMaximum = 8,};
enum MACRO_DOT11_POWER_MGMT_MODE {DOT11_POWER_MGMT_MODE_STATUS_INFO_REVISION_1 = 1,};
enum MACRO_DOT11_SEND_INVITATION {DOT11_SEND_INVITATION_REQUEST_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DOT11_WFD_DEVICE_INFO {DOT11_WFD_DEVICE_INFO_REVISION_1 = 1,};
enum MACRO_DOT11_WFD_GROUP_START {DOT11_WFD_GROUP_START_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DisableErrorSourceRtn {DisableErrorSourceRtn = 5,};
enum MACRO_GetAllErrorSourcesRtn {GetAllErrorSourcesRtn = 1,};
enum MACRO_GetErrorSourceInfoRtn {GetErrorSourceInfoRtn = 2,};
enum MACRO_GetPersistentBinding2 {GetPersistentBinding2 = 6,};
enum MACRO_INITIALIZATION_FAILED {PHASE0_INITIALIZATION_FAILED = 0x31,PHASE1_INITIALIZATION_FAILED = 0x32,};
enum MACRO_INQUIRYDATABUFFERSIZE {INQUIRYDATABUFFERSIZE = 36,};
enum MACRO_MSiSCSI_QueryLBPolicy {MSiSCSI_QueryLBPolicy_UniqueAdapterId_ID = 1,MSiSCSI_QueryLBPolicy_Reserved_ID = 2,MSiSCSI_QueryLBPolicy_SessionCount_ID = 3,MSiSCSI_QueryLBPolicy_LoadBalancePolicies_ID = 4,MSiSCSI_Eventlog_Type_ID = 1,MSiSCSI_Eventlog_LogToEventlog_ID = 2,MSiSCSI_Eventlog_Size_ID = 3,MSiSCSI_Eventlog_AdditionalData_ID = 4,};
enum MACRO_OID_DOT11_CURRENT_CCA {OID_DOT11_CURRENT_CCA_MODE = 218170167,OID_DOT11_ED_THRESHOLD = 218170168,OID_DOT11_CCA_WATCHDOG_TIMER_MAX = 218170169,OID_DOT11_CCA_WATCHDOG_COUNT_MAX = 218170170,OID_DOT11_CCA_WATCHDOG_TIMER_MIN = 218170171,OID_DOT11_CCA_WATCHDOG_COUNT_MIN = 218170172,OID_DOT11_REG_DOMAINS_SUPPORT_VALUE = 218170173,OID_DOT11_SUPPORTED_TX_ANTENNA = 218170174,OID_DOT11_SUPPORTED_RX_ANTENNA = 218170175,OID_DOT11_DIVERSITY_SELECTION_RX = 218170176,OID_DOT11_SUPPORTED_DATA_RATES_VALUE = 218170177,};
enum MACRO_OID_DOT11_CURRENT_PHY {OID_DOT11_CURRENT_PHY_ID = 234946962,OID_DOT11_MEDIA_STREAMING_ENABLED = 234946963,OID_DOT11_UNREACHABLE_DETECTION_THRESHOLD = 234946964,OID_DOT11_ACTIVE_PHY_LIST = 234946965,OID_DOT11_EXTSTA_CAPABILITY = 234946966,};
enum MACRO_OID_DOT11_OPERATIONAL {OID_DOT11_OPERATIONAL_RATE_SET = 218170138,OID_DOT11_BEACON_PERIOD = 218170139,OID_DOT11_DTIM_PERIOD = 218170140,OID_DOT11_WEP_ICV_ERROR_COUNT = 218170141,OID_DOT11_MAC_ADDRESS = 218170142,OID_DOT11_RTS_THRESHOLD = 218170143,OID_DOT11_SHORT_RETRY_LIMIT = 218170144,OID_DOT11_LONG_RETRY_LIMIT = 218170145,OID_DOT11_FRAGMENTATION_THRESHOLD = 218170146,OID_DOT11_MAX_TRANSMIT_MSDU_LIFETIME = 218170147,OID_DOT11_MAX_RECEIVE_LIFETIME = 218170148,OID_DOT11_COUNTERS_ENTRY = 218170149,OID_DOT11_SUPPORTED_PHY_TYPES = 218170150,OID_DOT11_CURRENT_REG_DOMAIN = 218170151,};
enum MACRO_OID_DOT11_WFD_CONNECT {OID_DOT11_WFD_CONNECT_TO_GROUP_REQUEST = 0xE060104,OID_DOT11_WFD_DISCONNECT_FROM_GROUP_REQUEST = 0xE060105,OID_DOT11_WFD_GROUP_JOIN_PARAMETERS = 0xE060106,};
enum MACRO_OID_DOT11_WFD_DESIRED {OID_DOT11_WFD_DESIRED_GROUP_ID = 0xE060101,OID_DOT11_WFD_START_GO_REQUEST = 0xE060102,OID_DOT11_WFD_GROUP_START_PARAMETERS = 0xE060103,};
enum MACRO_OID_DOT11_WFD_SEND_GO {OID_DOT11_WFD_SEND_GO_NEGOTIATION_CONFIRMATION = 0xE05010C,};
enum MACRO_PER_THREAD_LOCALE_NEW {_ENABLE_PER_THREAD_LOCALE_NEW = 0x100,_DISABLE_PER_THREAD_LOCALE_NEW = 0x200,};
enum MACRO_RDBSS_TRACKER_HISTORY {RDBSS_TRACKER_HISTORY_SIZE = 32,};
enum MACRO_RemovePersistentEntry {RemovePersistentEntry = 8,};
enum MACRO_RemovePersistentLogin {RemovePersistentLogin = 33,};
enum MACRO_RemoveRADIUSServer_IN {RemoveRADIUSServer_IN_RADIUSIPAddress_ID = 1,RemoveRADIUSServer_OUT_Status_ID = 2,};
enum MACRO_SYSTEM_AUDIT_CALLBACK {SYSTEM_AUDIT_CALLBACK_ACE_TYPE = 0xD,SYSTEM_ALARM_CALLBACK_ACE_TYPE = 0xE,SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE = 0xF,SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE = 0x10,SYSTEM_MANDATORY_LABEL_ACE_TYPE = 0x11,SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE = 0x12,SYSTEM_SCOPED_POLICY_ID_ACE_TYPE = 0x13,};
enum MACRO_SetErrorSourceInfoRtn {SetErrorSourceInfoRtn = 3,};
enum MACRO_SetPersistentEntry_IN {SetPersistentEntry_IN_PortWWN_ID = 1,SetPersistentEntry_IN_Binding_ID = 2,SetPersistentEntry_OUT_HBAStatus_ID = 3,};
enum MACRO_SetRADIUSSharedSecret {SetRADIUSSharedSecret = 72,};
enum MACRO_UNKNOWN_LOGON_SESSION {DEREF_UNKNOWN_LOGON_SESSION = 0x46,REF_UNKNOWN_LOGON_SESSION = 0x47,};
enum MACRO_VIDEO_TDR_APPLICATION {VIDEO_TDR_APPLICATION_BLOCKED = 0x142,};
enum MACRO_WmiEnumReceiveFilters {WmiEnumReceiveFilters = 1,};
typedef struct _MEDIA_CHANGE_DETECTION_INFO MEDIA_CHANGE_DETECTION_INFO;
typedef struct _MODE_TAPE_MEDIA_INFORMATION MODE_TAPE_MEDIA_INFORMATION;
typedef struct _MOUNTMGR_CHANGE_NOTIFY_INFO MOUNTMGR_CHANGE_NOTIFY_INFO;
typedef struct _MOUNTMGR_CREATE_POINT_INPUT MOUNTMGR_CREATE_POINT_INPUT;
typedef struct _MOUNTMGR_VOLUME_MOUNT_POINT MOUNTMGR_VOLUME_MOUNT_POINT;
typedef struct _MRX_PIPE_HANDLE_INFORMATION MRX_PIPE_HANDLE_INFORMATION;
typedef struct _MSFC_FCAdapterHBAAttributes MSFC_FCAdapterHBAAttributes;
typedef struct _MSFC_FibrePortHBAAttributes MSFC_FibrePortHBAAttributes;
typedef struct _MSFC_FibrePortHBAStatistics MSFC_FibrePortHBAStatistics;
typedef struct _MSKeyboard_ClassInformation MSKeyboard_ClassInformation;
typedef struct _MSMCAEvent_SystemEventError MSMCAEvent_SystemEventError;
typedef struct _MSNdis_80211_ReloadDefaults MSNdis_80211_ReloadDefaults;
typedef struct _MSNdis_AtmMaxAal0PacketSize MSNdis_AtmMaxAal0PacketSize;
typedef struct _MSNdis_AtmMaxAal1PacketSize MSNdis_AtmMaxAal1PacketSize;
typedef struct _MSNdis_AtmMaxAal5PacketSize MSNdis_AtmMaxAal5PacketSize;
typedef struct _MSNdis_AtmSupportedAalTypes MSNdis_AtmSupportedAalTypes;
typedef struct _MSNdis_CoMediaConnectStatus MSNdis_CoMediaConnectStatus;
typedef struct _MSNdis_FddiLConnectionState MSNdis_FddiLConnectionState;
typedef struct _MSNdis_FddiUpstreamNodeLong MSNdis_FddiUpstreamNodeLong;
typedef struct _MSNdis_NetworkDirectVersion MSNdis_NetworkDirectVersion;
typedef struct _MSNdis_NotifyAdapterArrival MSNdis_NotifyAdapterArrival;
typedef struct _MSNdis_NotifyAdapterRemoval MSNdis_NotifyAdapterRemoval;
typedef struct _MSNdis_StatusDevicePowerOff MSNdis_StatusDevicePowerOff;
typedef struct _MSNdis_StatusProtocolUnbind MSNdis_StatusProtocolUnbind;
typedef struct _MSNdis_TcpOffloadParameters MSNdis_TcpOffloadParameters;
typedef struct _MSV1_0_GETUSERINFO_RESPONSE MSV1_0_GETUSERINFO_RESPONSE;
typedef struct _MSVerifierIrpLogInformation MSVerifierIrpLogInformation;
typedef struct _NDIS_MSIX_CONFIG_PARAMETERS NDIS_MSIX_CONFIG_PARAMETERS;
typedef struct _NDIS_TAPI_PROVIDER_SHUTDOWN NDIS_TAPI_PROVIDER_SHUTDOWN;
typedef struct _NDIS_TCP_CONNECTION_OFFLOAD NDIS_TCP_CONNECTION_OFFLOAD;
typedef struct _NDIS_WMI_RECEIVE_QUEUE_INFO NDIS_WMI_RECEIVE_QUEUE_INFO;
typedef struct _NDIS_WWAN_SET_CONTEXT_STATE NDIS_WWAN_SET_CONTEXT_STATE;
typedef struct _NDIS_WWAN_SET_HOME_PROVIDER NDIS_WWAN_SET_HOME_PROVIDER;
typedef struct _NDIS_WWAN_SMS_CONFIGURATION NDIS_WWAN_SMS_CONFIGURATION;
typedef struct _NDIS_WWAN_SMS_DELETE_STATUS NDIS_WWAN_SMS_DELETE_STATUS;
typedef struct _NDIS_WWAN_VISIBLE_PROVIDERS NDIS_WWAN_VISIBLE_PROVIDERS;
typedef struct _NDK_LOGICAL_ADDRESS_MAPPING NDK_LOGICAL_ADDRESS_MAPPING;
typedef struct _NETWORK_OPEN_ECP_CONTEXT_V0 NETWORK_OPEN_ECP_CONTEXT_V0;
typedef union _OB_PRE_OPERATION_PARAMETERS OB_PRE_OPERATION_PARAMETERS;
typedef struct _OFFLOAD_IPSEC_ADD_UDPESP_SA OFFLOAD_IPSEC_ADD_UDPESP_SA;
typedef struct _A97809CBA93BE73DFF75CDF56246D798 OFFSETINSTANCEDATAANDLENGTH;
typedef struct _ADMINISTRATOR_POWER_POLICY *PADMINISTRATOR_POWER_POLICY;
typedef struct _AGP_BUS_INTERFACE_STANDARD *PAGP_BUS_INTERFACE_STANDARD;
typedef struct _ATAPI_FAILURE_PREDICT_DATA *PATAPI_FAILURE_PREDICT_DATA;
typedef struct _AddConnectionToSession_OUT *PAddConnectionToSession_OUT;
typedef struct _BDCB_STATUS_UPDATE_CONTEXT *PBDCB_STATUS_UPDATE_CONTEXT;
typedef struct _BTHDDI_SDP_PARSE_INTERFACE *PBTHDDI_SDP_PARSE_INTERFACE;
typedef struct _CDROM_EXCLUSIVE_LOCK_STATE *PCDROM_EXCLUSIVE_LOCK_STATE;
typedef struct _PCI_DEBUGGING_DEVICE_IN_USE PCI_DEBUGGING_DEVICE_IN_USE;
typedef union _PCI_EXPRESS_ERROR_SOURCE_ID PCI_EXPRESS_ERROR_SOURCE_ID;
typedef struct _CLASS_MEDIA_CHANGE_CONTEXT *PCLASS_MEDIA_CHANGE_CONTEXT;
typedef struct _CLASS_READ_CAPACITY16_DATA *PCLASS_READ_CAPACITY16_DATA;
typedef struct _CLFS_STREAM_ID_INFORMATION *PCLFS_STREAM_ID_INFORMATION;
typedef struct _CO_CALL_MANAGER_PARAMETERS *PCO_CALL_MANAGER_PARAMETERS;
typedef struct _CSRT_RESOURCE_GROUP_HEADER *PCSRT_RESOURCE_GROUP_HEADER;
typedef struct _ClearPathHealthCounters_IN *PClearPathHealthCounters_IN;
typedef struct DOT11_MAC_FRAME_STATISTICS *PDOT11_MAC_FRAME_STATISTICS;
typedef struct DOT11_PHY_FRAME_STATISTICS *PDOT11_PHY_FRAME_STATISTICS;
typedef struct DOT11_PHY_STATE_PARAMETERS *PDOT11_PHY_STATE_PARAMETERS;
typedef struct _DOT11_VWIFI_COMBINATION_V2 *PDOT11_VWIFI_COMBINATION_V2;
typedef struct _DOT11_VWIFI_COMBINATION_V3 *PDOT11_VWIFI_COMBINATION_V3;
typedef struct _DOT11_WFD_DISCOVER_REQUEST *PDOT11_WFD_DISCOVER_REQUEST;
typedef struct _DOT11_WFD_INVITATION_FLAGS *PDOT11_WFD_INVITATION_FLAGS;
typedef struct _DRIVER_INITIALIZATION_DATA *PDRIVER_INITIALIZATION_DATA;
typedef struct _DSM_Load_Balance_Policy_V2 *PDSM_Load_Balance_Policy_V2;
typedef struct _DeleteInitiatorNodeName_IN *PDeleteInitiatorNodeName_IN;
typedef struct _DsmSetLoadBalancePolicy_IN *PDsmSetLoadBalancePolicy_IN;
typedef struct _ENLISTMENT_CRM_INFORMATION *PENLISTMENT_CRM_INFORMATION;
typedef struct _ETW_TRACE_SESSION_SETTINGS *PETW_TRACE_SESSION_SETTINGS;
typedef struct _EX_RUNDOWN_REF_CACHE_AWARE *PEX_RUNDOWN_REF_CACHE_AWARE;
typedef struct _FILE_ALIGNMENT_INFORMATION *PFILE_ALIGNMENT_INFORMATION;
typedef struct _FILE_DIRECTORY_INFORMATION *PFILE_DIRECTORY_INFORMATION;
typedef struct _FILE_FS_DEVICE_INFORMATION *PFILE_FS_DEVICE_INFORMATION;
typedef struct _FILE_FS_VOLUME_INFORMATION *PFILE_FS_VOLUME_INFORMATION;
typedef struct _FILE_GET_QUOTA_INFORMATION *PFILE_GET_QUOTA_INFORMATION;
typedef struct _FILE_NUMA_NODE_INFORMATION *PFILE_NUMA_NODE_INFORMATION;
typedef struct _FILE_ZERO_DATA_INFORMATION *PFILE_ZERO_DATA_INFORMATION;
typedef struct _FILTER_INITIALIZATION_DATA *PFILTER_INITIALIZATION_DATA;
typedef struct _FLT_OPERATION_REGISTRATION *PFLT_OPERATION_REGISTRATION;
typedef struct _FSCTL_OFFLOAD_WRITE_OUTPUT *PFSCTL_OFFLOAD_WRITE_OUTPUT;
typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER *PFSCTL_QUERY_FAT_BPB_BUFFER;
typedef struct _FSVIDEO_SCREEN_INFORMATION *PFSVIDEO_SCREEN_INFORMATION;
typedef struct _GetFcpPersistentBinding_IN *PGetFcpPersistentBinding_IN;
typedef struct _GetPortAttributesByWWN_OUT *PGetPortAttributesByWWN_OUT;
typedef struct _HDAUDIO_DEVICE_INFORMATION *PHDAUDIO_DEVICE_INFORMATION;
typedef struct _HID_COLLECTION_INFORMATION *PHID_COLLECTION_INFORMATION;
typedef void ( *PHW_RECEIVE_STREAM_DATA_SRB)(struct _HW_STREAM_REQUEST_BLOCK *SRB);
typedef struct _ICMPV4_ROUTER_ADVERT_ENTRY *PICMPV4_ROUTER_ADVERT_ENTRY;
typedef struct _IDE_SCATTER_GATHER_ELEMENT *PIDE_SCATTER_GATHER_ELEMENT;
typedef IMAGE_AUX_SYMBOL_TOKEN_DEF *PIMAGE_AUX_SYMBOL_TOKEN_DEF;
typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR *PIMAGE_DELAYLOAD_DESCRIPTOR;
typedef struct _INSTANCE_BASIC_INFORMATION *PINSTANCE_BASIC_INFORMATION;
typedef struct _IO_DEVICE_HINT_ECP_CONTEXT *PIO_DEVICE_HINT_ECP_CONTEXT;
typedef struct _IPSEC_OFFLOAD_V2_DELETE_SA *PIPSEC_OFFLOAD_V2_DELETE_SA;
typedef struct _IPSEC_OFFLOAD_V2_UPDATE_SA *PIPSEC_OFFLOAD_V2_UPDATE_SA;
typedef struct _IR_PRIORITY_RECEIVE_PARAMS *PIR_PRIORITY_RECEIVE_PARAMS;
typedef struct _IOCTL_IR_SET_WAKE_PATTERN_PARAMS *PIR_SET_WAKE_PATTERN_PARAMS;
typedef struct _ISCSI_ConnectionStaticInfo *PISCSI_ConnectionStaticInfo;
typedef struct _KEYBOARD_PORT_WMI_STD_DATA *PKEYBOARD_PORT_WMI_STD_DATA;
typedef struct _KEYBOARD_UNIT_ID_PARAMETER *PKEYBOARD_UNIT_ID_PARAMETER;
typedef struct _KEY_VALUE_FULL_INFORMATION *PKEY_VALUE_FULL_INFORMATION;
typedef struct _KEY_WRITE_TIME_INFORMATION *PKEY_WRITE_TIME_INFORMATION;
typedef struct _KMDDOD_INITIALIZATION_DATA *PKMDDOD_INITIALIZATION_DATA;
typedef struct _7FACA56ADE6E3D8EA85378C4937BF6DD *PKSAUDIO_MIC_ARRAY_GEOMETRY;
typedef struct _6C32D841228ADC85BF22C8C3850F7AC4 *PKSDRMAUDIOSTREAM_CONTENTID;
typedef struct _KSM_BDA_CAS_CLOSEMMIDIALOG *PKSM_BDA_CAS_CLOSEMMIDIALOG;
typedef struct _KSM_BDA_WMDRM_RENEWLICENSE *PKSM_BDA_WMDRM_RENEWLICENSE;
typedef union _49DE94CD170A783608C4A6CA5E13CF1F *PKSPROPERTY_BOUNDS_LONGLONG;
typedef struct _9A6BD7645A973A5ADF34F154404EC940 *PKSPROPERTY_CAMERACONTROL_S;
typedef struct _6F08919EF02DAA05323F80511ECED656 *PKSPROPERTY_CROSSBAR_CAPS_S;
typedef struct _79EFEDCEBD127DAA6245792B357A1A48 *PKSPROPERTY_EXTXPORT_NODE_S;
typedef struct _363B0F3181141CB904AEE47E3AB77A0E *PKSPROPERTY_SELECTOR_NODE_S;
typedef struct _8A300D195525B62B81F3FAC87DD6582B *PKSPROPERTY_TIMECODE_NODE_S;
typedef struct _ACFC21BFB5CC6BA65A81729B6E881FEB *PKSPROPERTY_VIDEOPROCAMP_S2;
typedef struct _E79116A6AA0CFF653592F57D81FA8A4C *PKSWAVE_OUTPUT_CAPABILITIES;
typedef struct tagKS_DATARANGE_BDA_TRANSPORT *PKS_DATARANGE_BDA_TRANSPORT;
typedef struct tagKS_DATARANGE_VIDEO_PALETTE *PKS_DATARANGE_VIDEO_PALETTE;
typedef struct _MAILSLOT_CREATE_PARAMETERS *PMAILSLOT_CREATE_PARAMETERS;
typedef struct _MEDIA_SPECIFIC_INFORMATION *PMEDIA_SPECIFIC_INFORMATION;
typedef struct _PMI_BUDGETING_CONFIGURATION PMI_BUDGETING_CONFIGURATION;
typedef struct _PMI_THRESHOLD_CONFIGURATION PMI_THRESHOLD_CONFIGURATION;
typedef struct _MLDV2_REPORT_RECORD_HEADER *PMLDV2_REPORT_RECORD_HEADER;
typedef struct _MODE_DATA_COMPRESSION_PAGE *PMODE_DATA_COMPRESSION_PAGE;
typedef struct _MODE_MEDIUM_PARTITION_PAGE *PMODE_MEDIUM_PARTITION_PAGE;
typedef struct _MODE_MEDIUM_PART_PAGE_PLUS *PMODE_MEDIUM_PART_PAGE_PLUS;
typedef struct _MSNdis_80211_BssIdListScan *PMSNdis_80211_BssIdListScan;
typedef struct _MSNdis_80211_Configuration *PMSNdis_80211_Configuration;
typedef struct _MSNdis_80211_PrivacyFilter *PMSNdis_80211_PrivacyFilter;
typedef struct _MSNdis_AtmMaxActiveVciBits *PMSNdis_AtmMaxActiveVciBits;
typedef struct _MSNdis_AtmMaxActiveVpiBits *PMSNdis_AtmMaxActiveVpiBits;
typedef struct _MSNdis_AtmSupportedVcRates *PMSNdis_AtmSupportedVcRates;
typedef struct _MSNdis_CoTransmitPduErrors *PMSNdis_CoTransmitPduErrors;
typedef struct _MSNdis_CoVendorDescription *PMSNdis_CoVendorDescription;
typedef struct _MSNdis_CurrentPacketFilter *PMSNdis_CurrentPacketFilter;
typedef struct _MSNdis_NetworkShortAddress *PMSNdis_NetworkShortAddress;
typedef struct _MSNdis_PMCapabilitiesParam *PMSNdis_PMCapabilitiesParam;
typedef struct _MSNdis_StatusDevicePowerOn *PMSNdis_StatusDevicePowerOn;
typedef struct _MSNdis_StatusNetworkChange *PMSNdis_StatusNetworkChange;
typedef struct _MSNdis_TokenRingLineErrors *PMSNdis_TokenRingLineErrors;
typedef struct _MSNdis_TokenRingLostFrames *PMSNdis_TokenRingLostFrames;
typedef struct _MSNdis_TransmitBufferSpace *PMSNdis_TransmitBufferSpace;
typedef struct _MSNdis_VendorDriverVersion *PMSNdis_VendorDriverVersion;
typedef struct _MSV1_0_GETUSERINFO_REQUEST *PMSV1_0_GETUSERINFO_REQUEST;
typedef struct _MSV1_0_INTERACTIVE_PROFILE *PMSV1_0_INTERACTIVE_PROFILE;
typedef struct _MSWmi_GuidRegistrationInfo *PMSWmi_GuidRegistrationInfo;
typedef struct _NDIS_DRIVER_WRAPPER_HANDLE *PNDIS_DRIVER_WRAPPER_HANDLE;
typedef struct _NDIS_INTERFACE_INFORMATION *PNDIS_INTERFACE_INFORMATION;
typedef struct _NDIS_OFFLOAD_ENCAPSULATION *PNDIS_OFFLOAD_ENCAPSULATION;
typedef struct _NDIS_PHYSICAL_ADDRESS_UNIT *PNDIS_PHYSICAL_ADDRESS_UNIT;
typedef struct _NDIS_SYSTEM_PROCESSOR_INFO *PNDIS_SYSTEM_PROCESSOR_INFO;
typedef struct _NDIS_TAPI_GET_ADDRESS_CAPS *PNDIS_TAPI_GET_ADDRESS_CAPS;
typedef struct _NDIS_TAPI_GET_EXTENSION_ID *PNDIS_TAPI_GET_EXTENSION_ID;
typedef struct _NDIS_TAPI_SET_APP_SPECIFIC *PNDIS_TAPI_SET_APP_SPECIFIC;
typedef struct _NDIS_TIMER_CHARACTERISTICS *PNDIS_TIMER_CHARACTERISTICS;
typedef struct _NDIS_WAN_CO_GET_STATS_INFO *PNDIS_WAN_CO_GET_STATS_INFO;
typedef struct nd_neighbor_solicit *PND_NEIGHBOR_SOLICIT_HEADER;
typedef struct _NET_BUFFER_POOL_PARAMETERS *PNET_BUFFER_POOL_PARAMETERS;
typedef struct _NET_PNP_EVENT_NOTIFICATION *PNET_PNP_EVENT_NOTIFICATION;
typedef  struct _NPI_CLIENT_CHARACTERISTICS *PNPI_CLIENT_CHARACTERISTICS;
typedef struct _POWER_STATE_CHARACTERISTICS POWER_STATE_CHARACTERISTICS;
typedef struct _PCI_AGP_APERTURE_PAGE_SIZE *PPCI_AGP_APERTURE_PAGE_SIZE;
typedef struct _PCI_BUS_INTERFACE_STANDARD *PPCI_BUS_INTERFACE_STANDARD;
typedef union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK *PPCI_CORRECTABLE_ERROR_MASK;
typedef struct _PCI_EXPRESS_ACS_CAPABILITY *PPCI_EXPRESS_ACS_CAPABILITY;
typedef struct _PCI_EXPRESS_AER_CAPABILITY *PPCI_EXPRESS_AER_CAPABILITY;
typedef struct _PCI_EXPRESS_ARI_CAPABILITY *PPCI_EXPRESS_ARI_CAPABILITY;
typedef struct _PCI_EXPRESS_LTR_CAPABILITY *PPCI_EXPRESS_LTR_CAPABILITY;
typedef struct _CLFS_LOG_NAME_INFORMATION **PPCLFS_LOG_NAME_INFORMATION;
typedef struct _CLS_CONTAINER_INFORMATION **PPCLS_CONTAINER_INFORMATION;
typedef struct _PF_SET_EXTENSION_HOOK_INFO *PPF_SET_EXTENSION_HOOK_INFO;
typedef struct _PNP_REPLACE_PROCESSOR_LIST *PPNP_REPLACE_PROCESSOR_LIST;
typedef struct _POWER_PLATFORM_INFORMATION *PPOWER_PLATFORM_INFORMATION;
typedef struct _B0B71E7A52FD9A7B3B7D3722060F0E86 *PPOWER_STATE_NOTIFY_HANDLER;
typedef struct _PO_FX_COMPONENT_IDLE_STATE *PPO_FX_COMPONENT_IDLE_STATE;
typedef struct _28A0AF738EE9756E1A9EEC68C6D23E3C *PPPM_PERFSTATE_DOMAIN_EVENT;
typedef struct _9FC3DA75389FEB436866F6884A7E4AB3 *PPRI_RESERVATION_DESCRIPTOR;
typedef struct _1E49DD38FB2118FBA108586CF41E8D50 *PPROCESSOR_IDLESTATE_POLICY;
typedef struct _A2B9D6959A188CB660A127F9232FE650 *PPROCESSOR_PERFSTATE_POLICY;
typedef struct _READ_DVD_STRUCTURES_HEADER *PREAD_DVD_STRUCTURES_HEADER;
typedef struct _REG_CREATE_KEY_INFORMATION *PREG_CREATE_KEY_INFORMATION;
typedef struct _REG_DELETE_KEY_INFORMATION *PREG_DELETE_KEY_INFORMATION;
typedef struct _REG_RENAME_KEY_INFORMATION *PREG_RENAME_KEY_INFORMATION;
typedef struct _REG_UNLOAD_KEY_INFORMATION *PREG_UNLOAD_KEY_INFORMATION;
typedef struct _REQUEST_RAW_ENCRYPTED_DATA *PREQUEST_RAW_ENCRYPTED_DATA;
typedef struct _E7B7FA0D35363FDD22D2212ED4AF2596 *PREQ_NT_QUERY_FS_QUOTA_INFO;
typedef struct _PROCESSOR_POWER_INFORMATION PROCESSOR_POWER_INFORMATION;
typedef struct _PROCESSOR_POWER_POLICY_INFO PROCESSOR_POWER_POLICY_INFO;
typedef struct _PROCESS_SESSION_INFORMATION PROCESS_SESSION_INFORMATION;
typedef struct _RXCE_ADDRESS_EVENT_HANDLER_ *PRXCE_ADDRESS_EVENT_HANDLER;
typedef struct _RXCE_TRANSPORT_INFORMATION_ *PRXCE_TRANSPORT_INFORMATION;
typedef struct _SDBUS_INTERFACE_PARAMETERS *PSDBUS_INTERFACE_PARAMETERS;
typedef struct _SES_STATUS_DIAGNOSTIC_PAGE *PSES_STATUS_DIAGNOSTIC_PAGE;
typedef struct _STORAGE_ADAPTER_DESCRIPTOR *PSTORAGE_ADAPTER_DESCRIPTOR;
typedef struct _STORAGE_EVENT_NOTIFICATION *PSTORAGE_EVENT_NOTIFICATION;
typedef struct _STOR_ADAPTER_CONTROL_POWER *PSTOR_ADAPTER_CONTROL_POWER;
typedef struct _STOR_ALLOC_DIAG_EVENT_ARGS *PSTOR_ALLOC_DIAG_EVENT_ARGS;
typedef struct _STOR_INITGLOBALLOGGER_ARGS *PSTOR_INITGLOBALLOGGER_ARGS;
typedef struct _STREAM_DATA_INTERSECT_INFO *PSTREAM_DATA_INTERSECT_INFO;
typedef struct _STREAM_PROPERTY_DESCRIPTOR *PSTREAM_PROPERTY_DESCRIPTOR;
typedef struct _SUB_Q_MEDIA_CATALOG_NUMBER *PSUB_Q_MEDIA_CATALOG_NUMBER;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE *PSYSTEM_MANDATORY_LABEL_ACE;
typedef struct _SYSTEM_POWER_LOGGING_ENTRY *PSYSTEM_POWER_LOGGING_ENTRY;
typedef struct _SYSTEM_POWER_STATE_CONTEXT *PSYSTEM_POWER_STATE_CONTEXT;
typedef struct _SecPkgContext_PackageInfoW *PSecPkgContext_PackageInfoW;
typedef struct _SetChapForPhysicalPort_OUT *PSetChapForPhysicalPort_OUT;
typedef struct _TCP_INITIAL_RTO_PARAMETERS *PTCP_INITIAL_RTO_PARAMETERS;
typedef struct _TDI_CONNECTION_INFORMATION *PTDI_CONNECTION_INFORMATION;
typedef struct _TDI_REQUEST_KERNEL_RECEIVE *PTDI_REQUEST_KERNEL_RECEIVE;
typedef struct _TXFS_GET_METADATA_INFO_OUT *PTXFS_GET_METADATA_INFO_OUT;
typedef struct _TXFS_SAVEPOINT_INFORMATION *PTXFS_SAVEPOINT_INFORMATION;
typedef struct _USBD_INTERFACE_INFORMATION *PUSBD_INTERFACE_INFORMATION;
typedef struct _USBD_ISO_PACKET_DESCRIPTOR *PUSBD_ISO_PACKET_DESCRIPTOR;
typedef struct _USB_BUS_INTERFACE_USBDI_V0 *PUSB_BUS_INTERFACE_USBDI_V0;
typedef struct _USB_BUS_INTERFACE_USBDI_V1 *PUSB_BUS_INTERFACE_USBDI_V1;
typedef struct _USB_BUS_INTERFACE_USBDI_V2 *PUSB_BUS_INTERFACE_USBDI_V2;
typedef struct _USB_BUS_INTERFACE_USBDI_V3 *PUSB_BUS_INTERFACE_USBDI_V3;
typedef union _USB_PORT_STATUS_AND_CHANGE *PUSB_PORT_STATUS_AND_CHANGE;
typedef struct _VIDEO_POINTER_CAPABILITIES *PVIDEO_POINTER_CAPABILITIES;
typedef struct _VIDEO_PORT_AGP_INTERFACE_2 *PVIDEO_PORT_AGP_INTERFACE_2;
typedef struct _VIDEO_PORT_I2C_INTERFACE_2 *PVIDEO_PORT_I2C_INTERFACE_2;
typedef struct _VIDEO_PORT_INT10_INTERFACE *PVIDEO_PORT_INT10_INTERFACE;
typedef struct _VIDEO_PUBLIC_ACCESS_RANGES *PVIDEO_PUBLIC_ACCESS_RANGES;
typedef struct _WHEA_AER_BRIDGE_DESCRIPTOR *PWHEA_AER_BRIDGE_DESCRIPTOR;
typedef struct _WHEA_PCIXBUS_ERROR_SECTION *PWHEA_PCIXBUS_ERROR_SECTION;
typedef union _WHEA_PROCESSOR_FAMILY_INFO *PWHEA_PROCESSOR_FAMILY_INFO;
typedef struct _WSK_CLIENT_LISTEN_DISPATCH *PWSK_CLIENT_LISTEN_DISPATCH;
typedef struct _WSK_EVENT_CALLBACK_CONTROL *PWSK_EVENT_CALLBACK_CONTROL;
typedef struct _WWAN_GET_VISIBLE_PROVIDERS *PWWAN_GET_VISIBLE_PROVIDERS;
typedef struct _WWAN_SET_SIGNAL_INDICATION *PWWAN_SET_SIGNAL_INDICATION;
typedef struct _WWAN_SET_SMS_CONFIGURATION *PWWAN_SET_SMS_CONFIGURATION;
typedef struct _WmiMonitorConnectionParams *PWmiMonitorConnectionParams;
typedef struct _WmiQueryStatisticsInfo_OUT *PWmiQueryStatisticsInfo_OUT;
typedef struct _WmiSetHDSplitParameters_IN *PWmiSetHDSplitParameters_IN;
typedef struct _BDA_USERACTIVITY_INTERVAL *P_BDA_USERACTIVITY_INTERVAL;
typedef struct _REG_CREATE_KEY_INFORMATION_V1 REG_OPEN_KEY_INFORMATION_V1;
typedef struct _REG_REPLACE_KEY_INFORMATION REG_REPLACE_KEY_INFORMATION;
typedef struct _REG_RESTORE_KEY_INFORMATION REG_RESTORE_KEY_INFORMATION;
typedef struct _REQUEST_OPLOCK_INPUT_BUFFER REQUEST_OPLOCK_INPUT_BUFFER;
typedef struct _REQ_SET_SECURITY_DESCRIPTOR REQ_SET_SECURITY_DESCRIPTOR;
typedef struct _AFA69771633799B8FB97339D76F53EAE RESP_NT_QUERY_FS_QUOTA_INFO;
typedef struct _ReportDiscoveredTargets_OUT ReportDiscoveredTargets_OUT;
typedef struct _SCSI_PASS_THROUGH_DIRECT_EX SCSI_PASS_THROUGH_DIRECT_EX;
typedef struct _SD_CHANGE_MACHINE_SID_INPUT SD_CHANGE_MACHINE_SID_INPUT;
typedef struct _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;
typedef struct _SEC_WINNT_AUTH_IDENTITY_EX2 SEC_WINNT_AUTH_IDENTITY_EX2;
typedef struct _SEC_WINNT_AUTH_IDENTITY_EXW SEC_WINNT_AUTH_IDENTITY_EXW;
typedef struct _SES_CONTROL_DIAGNOSTIC_PAGE SES_CONTROL_DIAGNOSTIC_PAGE;
typedef struct _SFFDISK_DEVICE_COMMAND_DATA SFFDISK_DEVICE_COMMAND_DATA;
typedef struct _SFI_TIMER_DESCRIPTION_TABLE SFI_TIMER_DESCRIPTION_TABLE;
typedef struct _STORAGE_IDLE_POWERUP_REASON STORAGE_IDLE_POWERUP_REASON;
typedef struct _STORAGE_MINIPORT_DESCRIPTOR STORAGE_MINIPORT_DESCRIPTOR;
typedef struct _STORAGE_OFFLOAD_READ_OUTPUT STORAGE_OFFLOAD_READ_OUTPUT;
typedef struct _STORPORT_EXTENDED_FUNCTIONS STORPORT_EXTENDED_FUNCTIONS;
typedef struct _STOR_DEVICE_CAPABILITIES_EX STOR_DEVICE_CAPABILITIES_EX;
typedef struct _STOR_SCATTER_GATHER_ELEMENT STOR_SCATTER_GATHER_ELEMENT;
typedef struct _STOR_WMI_TRACE_MESSAGE_ARGS STOR_WMI_TRACE_MESSAGE_ARGS;
typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE SYSTEM_SCOPED_POLICY_ID_ACE;
typedef struct _TDI20_CLIENT_INTERFACE_INFO TDI20_CLIENT_INTERFACE_INFO;
typedef struct _TDI_PROVIDER_RESOURCE_STATS TDI_PROVIDER_RESOURCE_STATS;
typedef struct _TDI_REQUEST_SET_INFORMATION TDI_REQUEST_SET_INFORMATION;
typedef struct _TOKEN_GROUPS_AND_PRIVILEGES TOKEN_GROUPS_AND_PRIVILEGES;
typedef struct _TRANSACTION_ENLISTMENT_PAIR TRANSACTION_ENLISTMENT_PAIR;
typedef struct _TXFS_GET_TRANSACTED_VERSION TXFS_GET_TRANSACTED_VERSION;
typedef struct _USB_BUS_INFORMATION_LEVEL_0 USB_BUS_INFORMATION_LEVEL_0;
typedef struct _USB_BUS_INFORMATION_LEVEL_1 USB_BUS_INFORMATION_LEVEL_1;
typedef struct _VBICODECFILTERING_SCANLINES VBICODECFILTERING_SCANLINES;
typedef struct _VIDEO_DEVICE_SESSION_STATUS VIDEO_DEVICE_SESSION_STATUS;
typedef struct _VIDEO_HARDWARE_STATE_HEADER VIDEO_HARDWARE_STATE_HEADER;
typedef struct _VIDEO_LOAD_FONT_INFORMATION VIDEO_LOAD_FONT_INFORMATION;
typedef struct _WATCHDOG_TIMER_ACTION_TABLE WATCHDOG_TIMER_ACTION_TABLE;
typedef struct _WHEA_PSHED_PLUGIN_CALLBACKS WHEA_PSHED_PLUGIN_CALLBACKS;
typedef struct _WHEA_XPF_MC_BANK_DESCRIPTOR WHEA_XPF_MC_BANK_DESCRIPTOR;
typedef union _WHEA_XPF_PROCINFO_VALIDBITS WHEA_XPF_PROCINFO_VALIDBITS;
typedef struct _WMI_CHANGER_PROBLEM_WARNING WMI_CHANGER_PROBLEM_WARNING;
typedef struct _WSK_PROVIDER_BASIC_DISPATCH WSK_PROVIDER_BASIC_DISPATCH;
typedef struct _WWAN_DEVICE_SERVICE_COMMAND WWAN_DEVICE_SERVICE_COMMAND;
typedef struct _WWAN_DEVICE_SERVICE_SESSION WWAN_DEVICE_SERVICE_SESSION;
typedef struct _WmiSetALSBrightnessState_IN WmiSetALSBrightnessState_IN;
typedef struct _WmiSetHDSplitParameters_OUT WmiSetHDSplitParameters_OUT;
enum _DEVICEDUMP_COLLECTION_TYPE {TCCollectionBugCheck = 0x1,TCCollectionApplicationRequested = 0x2,TCCollectionDeviceRequested = 0x3,};
struct _DOT11_WFD_INVITATION_FLAGS {unsigned char InvitationType : 1;unsigned char Reserved : 7;};
enum _DXGK_SURPRISE_REMOVAL_TYPE {DxgkRemovalHibernation = 0x0,};
enum _FLT_POSTOP_CALLBACK_STATUS {FLT_POSTOP_FINISHED_PROCESSING = 0x0,FLT_POSTOP_MORE_PROCESSING_REQUIRED = 0x1,};
enum _INSTANCE_INFORMATION_CLASS {InstanceBasicInformation = 0x0,InstancePartialInformation = 0x1,InstanceFullInformation = 0x2,InstanceAggregateStandardInformation = 0x3,};
enum _IPSEC_OFFLOAD_V2_OPERATION {IPsecOffloadV2Ah = 0x1,IPsecOffloadV2Esp = 0x2,IPsecOffloadV2Max = 0x3,};
enum _MM_MDL_PAGE_CONTENTS_STATE {MmMdlPageContentsDynamic = 0x0,MmMdlPageContentsInvariant = 0x1,MmMdlPageContentsQuery = 0x2,};
enum _MSV1_0_PROFILE_BUFFER_TYPE {MsV1_0InteractiveProfile = 0x2,MsV1_0Lm20LogonProfile = 0x3,MsV1_0SmartCardProfile = 0x4,};
enum _NDIS_802_11_PRIVACY_FILTER {Ndis802_11PrivFilterAcceptAll = 0x0,Ndis802_11PrivFilter8021xWEP = 0x1,};
enum _NDIS_PM_ADMIN_CONFIG_STATE {NdisPMAdminConfigUnspecified = 0x0,NdisPMAdminConfigDisabled = 0x1,NdisPMAdminConfigEnabled = 0x2,};
enum _NET_IF_MEDIA_CONNECT_STATE {MediaConnectStateUnknown = 0x0,MediaConnectStateConnected = 0x1,MediaConnectStateDisconnected = 0x2,};
struct _PCI_AGP_APERTURE_PAGE_SIZE {unsigned short PageSizeMask : 11;unsigned short Rsvd1 : 1;unsigned short PageSizeSelect : 4;};
enum _STOR_SYNCHRONIZATION_MODEL {StorSynchronizeHalfDuplex = 0x0,StorSynchronizeFullDuplex = 0x1,};
enum _WWAN_PACKET_SERVICE_ACTION {WwanPacketServiceActionAttach = 0x0,WwanPacketServiceActionDetach = 0x1,};
typedef struct _ADMINISTRATOR_POWER_POLICY ADMINISTRATOR_POWER_POLICY;
typedef struct _AGP_BUS_INTERFACE_STANDARD AGP_BUS_INTERFACE_STANDARD;
typedef struct _ATAPI_FAILURE_PREDICT_DATA ATAPI_FAILURE_PREDICT_DATA;
typedef struct _AddConnectionToSession_OUT AddConnectionToSession_OUT;
typedef struct _BDCB_STATUS_UPDATE_CONTEXT BDCB_STATUS_UPDATE_CONTEXT;
typedef struct _BTHDDI_SDP_PARSE_INTERFACE BTHDDI_SDP_PARSE_INTERFACE;
typedef struct _CDROM_EXCLUSIVE_LOCK_STATE CDROM_EXCLUSIVE_LOCK_STATE;
typedef struct _CLASS_MEDIA_CHANGE_CONTEXT CLASS_MEDIA_CHANGE_CONTEXT;
typedef struct _CLASS_READ_CAPACITY16_DATA CLASS_READ_CAPACITY16_DATA;
typedef struct _CLFS_STREAM_ID_INFORMATION CLFS_STREAM_ID_INFORMATION;
typedef struct _CO_CALL_MANAGER_PARAMETERS CO_CALL_MANAGER_PARAMETERS;
typedef struct _CSRT_RESOURCE_GROUP_HEADER CSRT_RESOURCE_GROUP_HEADER;
typedef struct _ClearPathHealthCounters_IN ClearPathHealthCounters_IN;
typedef struct _D3DDDI_MULTISAMPLINGMETHOD D3DDDI_MULTISAMPLINGMETHOD;
typedef struct _D3DDDI_OPENALLOCATIONINFO2 D3DDDI_OPENALLOCATIONINFO2;
typedef struct _D3DKMDT_MONITOR_DESCRIPTOR D3DKMDT_MONITOR_DESCRIPTOR;
typedef struct _D3DKMDT_STAGINGSURFACEDATA D3DKMDT_STAGINGSURFACEDATA;
typedef struct _D3DKMDT_VIDPN_PRESENT_PATH D3DKMDT_VIDPN_PRESENT_PATH;
typedef struct creative_fastspeechformat_tag DIALOGICOKIADPCMWAVEFORMAT;
typedef struct _DOT11_VWIFI_COMBINATION_V2 DOT11_VWIFI_COMBINATION_V2;
typedef struct _DOT11_VWIFI_COMBINATION_V3 DOT11_VWIFI_COMBINATION_V3;
typedef struct _DOT11_WFD_DISCOVER_REQUEST DOT11_WFD_DISCOVER_REQUEST;
typedef struct _DOT11_WFD_INVITATION_FLAGS DOT11_WFD_INVITATION_FLAGS;
typedef struct _DRIVER_INITIALIZATION_DATA DRIVER_INITIALIZATION_DATA;
typedef struct _DSM_Load_Balance_Policy_V2 DSM_Load_Balance_Policy_V2;
typedef struct _DXGKARG_COLLECTDBGINFO_EXT DXGKARG_COLLECTDBGINFO_EXT;
typedef struct _DXGKARG_DESCRIBEALLOCATION DXGKARG_DESCRIBEALLOCATION;
typedef struct _DXGKARG_SETPOINTERPOSITION DXGKARG_SETPOINTERPOSITION;
typedef struct _DXGK_CREATEALLOCATIONFLAGS DXGK_CREATEALLOCATIONFLAGS;
struct DXGK_DEBUG_REPORT_HANDLE__ {int unused;};
typedef struct _DXGK_GDIARG_CLEARTYPEBLEND DXGK_GDIARG_CLEARTYPEBLEND;
typedef struct _DXGK_GDIARG_TRANSPARENTBLT DXGK_GDIARG_TRANSPARENTBLT;
typedef struct _DXGK_INTERFACESPECIFICDATA DXGK_INTERFACESPECIFICDATA;
typedef struct _DXGK_POWER_COMPONENT_FLAGS DXGK_POWER_COMPONENT_FLAGS;
typedef struct _DXGK_PRESENTALLOCATIONINFO DXGK_PRESENTALLOCATIONINFO;
typedef struct _DXGK_SEGMENTBANKPREFERENCE DXGK_SEGMENTBANKPREFERENCE;
typedef struct _DeleteInitiatorNodeName_IN DeleteInitiatorNodeName_IN;
typedef struct _DsmSetLoadBalancePolicy_IN DsmSetLoadBalancePolicy_IN;
typedef struct _ENLISTMENT_CRM_INFORMATION ENLISTMENT_CRM_INFORMATION;
typedef struct _ETW_TRACE_SESSION_SETTINGS ETW_TRACE_SESSION_SETTINGS;
typedef struct _FILE_ALIGNMENT_INFORMATION FILE_ALIGNMENT_INFORMATION;
typedef struct _FILE_DIRECTORY_INFORMATION FILE_DIRECTORY_INFORMATION;
typedef struct _FILE_FS_DEVICE_INFORMATION FILE_FS_DEVICE_INFORMATION;
typedef struct _FILE_FS_VOLUME_INFORMATION FILE_FS_VOLUME_INFORMATION;
typedef struct _FILE_GET_QUOTA_INFORMATION FILE_GET_QUOTA_INFORMATION;
typedef struct _FILE_NUMA_NODE_INFORMATION FILE_NUMA_NODE_INFORMATION;
typedef struct _FILE_ZERO_DATA_INFORMATION FILE_ZERO_DATA_INFORMATION;
typedef struct _FILTER_INITIALIZATION_DATA FILTER_INITIALIZATION_DATA;
typedef struct _FLT_OPERATION_REGISTRATION FLT_OPERATION_REGISTRATION;
typedef struct _FSCTL_OFFLOAD_WRITE_OUTPUT FSCTL_OFFLOAD_WRITE_OUTPUT;
typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER FSCTL_QUERY_FAT_BPB_BUFFER;
typedef struct _FSVIDEO_SCREEN_INFORMATION FSVIDEO_SCREEN_INFORMATION;
typedef struct _GetFcpPersistentBinding_IN GetFcpPersistentBinding_IN;
typedef struct _GetPortAttributesByWWN_OUT GetPortAttributesByWWN_OUT;
typedef struct _HDAUDIO_DEVICE_INFORMATION HDAUDIO_DEVICE_INFORMATION;
typedef struct _HID_COLLECTION_INFORMATION HID_COLLECTION_INFORMATION;
typedef struct _ICMPV4_ROUTER_ADVERT_ENTRY ICMPV4_ROUTER_ADVERT_ENTRY;
typedef struct _IDE_SCATTER_GATHER_ELEMENT IDE_SCATTER_GATHER_ELEMENT;
typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR IMAGE_DELAYLOAD_DESCRIPTOR;
typedef struct _INSTANCE_BASIC_INFORMATION INSTANCE_BASIC_INFORMATION;
typedef struct _IO_DEVICE_HINT_ECP_CONTEXT IO_DEVICE_HINT_ECP_CONTEXT;
typedef struct _IPSEC_OFFLOAD_V2_DELETE_SA IPSEC_OFFLOAD_V2_DELETE_SA;
typedef struct _IPSEC_OFFLOAD_V2_UPDATE_SA IPSEC_OFFLOAD_V2_UPDATE_SA;
typedef struct _IRB_REQ_FREE_ADDRESS_RANGE IRB_REQ_FREE_ADDRESS_RANGE;
typedef struct _IRB_REQ_ISOCH_FREE_CHANNEL IRB_REQ_ISOCH_FREE_CHANNEL;
typedef struct _IR_PRIORITY_RECEIVE_PARAMS IR_PRIORITY_RECEIVE_PARAMS;
typedef struct _IOCTL_IR_SET_WAKE_PATTERN_PARAMS IR_SET_WAKE_PATTERN_PARAMS;
typedef struct _ISCSI_ConnectionStaticInfo ISCSI_ConnectionStaticInfo;
typedef struct _KEYBOARD_PORT_WMI_STD_DATA KEYBOARD_PORT_WMI_STD_DATA;
typedef struct _KEYBOARD_UNIT_ID_PARAMETER KEYBOARD_UNIT_ID_PARAMETER;
typedef struct _KEY_VALUE_FULL_INFORMATION KEY_VALUE_FULL_INFORMATION;
typedef struct _KEY_WRITE_TIME_INFORMATION KEY_WRITE_TIME_INFORMATION;
typedef struct _KMDDOD_INITIALIZATION_DATA KMDDOD_INITIALIZATION_DATA;
typedef struct _7FACA56ADE6E3D8EA85378C4937BF6DD KSAUDIO_MIC_ARRAY_GEOMETRY;
typedef struct _6C32D841228ADC85BF22C8C3850F7AC4 KSDRMAUDIOSTREAM_CONTENTID;
typedef struct _KSM_BDA_CAS_CLOSEMMIDIALOG KSM_BDA_CAS_CLOSEMMIDIALOG;
typedef struct _KSM_BDA_WMDRM_RENEWLICENSE KSM_BDA_WMDRM_RENEWLICENSE;
typedef union _49DE94CD170A783608C4A6CA5E13CF1F KSPROPERTY_BOUNDS_LONGLONG;
typedef struct _9A6BD7645A973A5ADF34F154404EC940 KSPROPERTY_CAMERACONTROL_S;
typedef struct _6F08919EF02DAA05323F80511ECED656 KSPROPERTY_CROSSBAR_CAPS_S;
typedef struct _79EFEDCEBD127DAA6245792B357A1A48 KSPROPERTY_EXTXPORT_NODE_S;
typedef struct _363B0F3181141CB904AEE47E3AB77A0E KSPROPERTY_SELECTOR_NODE_S;
typedef struct _8A300D195525B62B81F3FAC87DD6582B KSPROPERTY_TIMECODE_NODE_S;
typedef struct _ACFC21BFB5CC6BA65A81729B6E881FEB KSPROPERTY_VIDEOPROCAMP_S2;
typedef struct _E79116A6AA0CFF653592F57D81FA8A4C KSWAVE_OUTPUT_CAPABILITIES;
typedef struct tagKS_DATARANGE_BDA_TRANSPORT KS_DATARANGE_BDA_TRANSPORT;
typedef struct tagKS_DATARANGE_VIDEO_PALETTE KS_DATARANGE_VIDEO_PALETTE;
typedef struct tag_video_geterrortext_parms *LPVIDEO_GETERRORTEXT_PARMS;
enum MACRO_BW_UNITS_PER_QUADLET {S100_BW_UNITS_PER_QUADLET = 19,S200_BW_UNITS_PER_QUADLET = 9,S400_BW_UNITS_PER_QUADLET = 4,S800_BW_UNITS_PER_QUADLET = 2,S1600_BW_UNITS_PER_QUADLET = 1,};
enum MACRO_CmResourceTypeMemory {CmResourceTypeMemory = 3,CmResourceTypeDma = 4,};
enum MACRO_CreateVirtualPort_IN {CreateVirtualPort_IN_WWPN_ID = 2,CreateVirtualPort_IN_WWNN_ID = 3,CreateVirtualPort_IN_Tag_ID = 4,CreateVirtualPort_IN_VirtualName_ID = 5,CreateVirtualPort_OUT_Status_ID = 1,};
enum MACRO_DFS_REFERRAL_SUCCESS {DFS_REFERRAL_SUCCESS = 0x40003844,DFS_MAX_DNR_ATTEMPTS = 0x40003845,DFS_SPECIAL_REFERRAL_FAILURE = 0x40003846,DFS_OPEN_FAILURE = 0x40003847,};
enum MACRO_DOT11_CIPHER_DEFAULT {DOT11_CIPHER_DEFAULT_KEY_VALUE_REVISION_1 = 1,};
enum MACRO_DOT11_MAC_PARAMETERS {DOT11_MAC_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DOT11_SEND_PROVISION {DOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DOT11_WFD_ADDITIONAL {DOT11_WFD_ADDITIONAL_IE_REVISION_1 = 1,};
enum MACRO_DOT11_WFD_DEVICE_NOT {DOT11_WFD_DEVICE_NOT_DISCOVERABLE = 0,DOT11_WFD_DEVICE_AUTO_AVAILABILITY = 16,DOT11_WFD_DEVICE_HIGH_AVAILABILITY = 24,};
enum MACRO_DOT11_WFD_GROUP_JOIN {DOT11_WFD_GROUP_JOIN_PARAMETERS_REVISION_1 = 1,};
enum MACRO_EnableErrorSourceRtn {EnableErrorSourceRtn = 4,};
enum MACRO_FILE_CHARACTERISTICS {FILE_CHARACTERISTICS_EXPECT_ORDERLY_REMOVAL_EX = 0x4000,FILE_CHARACTERISTICS_EXPECT_SURPRISE_REMOVAL_EX = 0x8000,FILE_CHARACTERISTICS_REMOVAL_POLICY_MASK_EX = 0xC000,FILE_CHARACTERISTICS_EXPECT_ORDERLY_REMOVAL_DEPRECATED = 0x200,FILE_CHARACTERISTICS_EXPECT_SURPRISE_REMOVAL_DEPRECATED = 0x300,FILE_CHARACTERISTICS_REMOVAL_POLICY_MASK_DEPRECATED = 0x300,FILE_CHARACTERISTICS_PROPAGATED = 0x4010F,};
enum MACRO_GetBindingCapability {GetBindingCapability = 3,};
enum MACRO_GetBindingSupport_IN {GetBindingSupport_IN_PortWWN_ID = 1,GetBindingSupport_OUT_HBAStatus_ID = 2,GetBindingSupport_OUT_BindType_ID = 3,};
enum MACRO_GetPathConfiguration {GetPathConfiguration = 2,};
enum MACRO_GetPresharedKeyForId {GetPresharedKeyForId = 2,};
enum MACRO_IOCTL_INTERNAL_I8042 {IOCTL_INTERNAL_I8042_HOOK_KEYBOARD = 0xB3FC3,IOCTL_INTERNAL_I8042_HOOK_MOUSE = 0xF3FC3,IOCTL_INTERNAL_I8042_KEYBOARD_WRITE_BUFFER = 0xB3FC7,IOCTL_INTERNAL_I8042_MOUSE_WRITE_BUFFER = 0xF3FC7,IOCTL_INTERNAL_I8042_CONTROLLER_WRITE_BUFFER = 0xB3FCB,IOCTL_INTERNAL_I8042_KEYBOARD_START_INFORMATION = 0xB3FCF,IOCTL_INTERNAL_I8042_MOUSE_START_INFORMATION = 0xF3FCF,};
enum MACRO_LAST_LINEREQUESTMODE {LAST_LINEREQUESTMODE = 2,};
enum MACRO_MM_MSFT_ACM_WMAUDIO2 {MM_MSFT_ACM_WMAUDIO2 = 101,};
enum MACRO_MSiSCSI_MMIPSECStats {MSiSCSI_MMIPSECStats_ActiveAcquire_ID = 1,MSiSCSI_MMIPSECStats_ActiveReceive_ID = 2,MSiSCSI_MMIPSECStats_AcquireFailures_ID = 3,MSiSCSI_MMIPSECStats_ReceiveFailures_ID = 4,MSiSCSI_MMIPSECStats_SendFailures_ID = 5,MSiSCSI_MMIPSECStats_AcquireHeapSize_ID = 6,MSiSCSI_MMIPSECStats_ReceiveHeapSize_ID = 7,MSiSCSI_MMIPSECStats_NegotiationFailures_ID = 8,MSiSCSI_MMIPSECStats_AuthenticationFailures_ID = 9,MSiSCSI_MMIPSECStats_InvalidCookiesReceived_ID = 10,MSiSCSI_MMIPSECStats_TotalGetSPI_ID = 11,MSiSCSI_MMIPSECStats_KeyAdditions_ID = 12,MSiSCSI_MMIPSECStats_KeyUpdates_ID = 13,MSiSCSI_MMIPSECStats_GetSPIFailures_ID = 14,MSiSCSI_MMIPSECStats_KeyAdditionFailures_ID = 15,MSiSCSI_MMIPSECStats_KeyUpdateFailures_ID = 16,MSiSCSI_MMIPSECStats_ConnectionListSize_ID = 17,MSiSCSI_MMIPSECStats_OakleyMainMode_ID = 18,MSiSCSI_MMIPSECStats_OakleyQuickMode_ID = 19,MSiSCSI_MMIPSECStats_InvalidPackets_ID = 20,MSiSCSI_MMIPSECStats_SoftAssociations_ID = 21,MSiSCSI_QMIPSECStats_ActiveSA_ID = 1,MSiSCSI_QMIPSECStats_PendingKeyOperations_ID = 2,MSiSCSI_QMIPSECStats_KeyAdditions_ID = 3,MSiSCSI_QMIPSECStats_KeyDeletions_ID = 4,MSiSCSI_QMIPSECStats_ReKeys_ID = 5,MSiSCSI_QMIPSECStats_ActiveTunnels_ID = 6,MSiSCSI_QMIPSECStats_BadSPIPackets_ID = 7,MSiSCSI_QMIPSECStats_PacketsNotDecrypted_ID = 8,MSiSCSI_QMIPSECStats_PacketsNotAuthenticated_ID = 9,MSiSCSI_QMIPSECStats_PacketsWithReplayDetection_ID = 10,MSiSCSI_QMIPSECStats_ConfidentialBytesSent_ID = 11,MSiSCSI_QMIPSECStats_ConfidentialBytesReceived_ID = 12,MSiSCSI_QMIPSECStats_AuthenticatedBytesSent_ID = 13,MSiSCSI_QMIPSECStats_AuthenticatedBytesReceived_ID = 14,MSiSCSI_QMIPSECStats_TransportBytesSent_ID = 15,MSiSCSI_QMIPSECStats_TransportBytesReceived_ID = 16,MSiSCSI_QMIPSECStats_TunnelBytesSent_ID = 17,MSiSCSI_QMIPSECStats_TunnelBytesReceived_ID = 18,MSiSCSI_ConnectionStatistics_iSCSIName_ID = 1,MSiSCSI_ConnectionStatistics_CID_ID = 2,MSiSCSI_ConnectionStatistics_USID_ID = 3,MSiSCSI_ConnectionStatistics_UniqueAdapterId_ID = 4,MSiSCSI_ConnectionStatistics_BytesSent_ID = 5,MSiSCSI_ConnectionStatistics_BytesReceived_ID = 6,MSiSCSI_ConnectionStatistics_PDUCommandsSent_ID = 7,MSiSCSI_ConnectionStatistics_PDUResponsesReceived_ID = 8,MSiSCSI_SessionStatistics_iSCSIName_ID = 1,MSiSCSI_SessionStatistics_USID_ID = 2,MSiSCSI_SessionStatistics_UniqueAdapterId_ID = 3,MSiSCSI_SessionStatistics_BytesSent_ID = 4,MSiSCSI_SessionStatistics_BytesReceived_ID = 5,MSiSCSI_SessionStatistics_PDUCommandsSent_ID = 6,MSiSCSI_SessionStatistics_PDUResponsesReceived_ID = 7,MSiSCSI_SessionStatistics_DigestErrors_ID = 8,MSiSCSI_SessionStatistics_ConnectionTimeoutErrors_ID = 9,MSiSCSI_SessionStatistics_FormatErrors_ID = 10,MSiSCSI_InitiatorLoginStatistics_UniqueAdapterId_ID = 1,MSiSCSI_InitiatorLoginStatistics_LoginAcceptRsps_ID = 2,MSiSCSI_InitiatorLoginStatistics_LoginOtherFailRsps_ID = 3,MSiSCSI_InitiatorLoginStatistics_LoginRedirectRsps_ID = 4,MSiSCSI_InitiatorLoginStatistics_LoginAuthFailRsps_ID = 5,MSiSCSI_InitiatorLoginStatistics_LoginAuthenticateFails_ID = 6,MSiSCSI_InitiatorLoginStatistics_LoginNegotiateFails_ID = 7,MSiSCSI_InitiatorLoginStatistics_LogoutNormals_ID = 8,MSiSCSI_InitiatorLoginStatistics_LogoutOtherCodes_ID = 9,MSiSCSI_InitiatorLoginStatistics_LoginFailures_ID = 10,MSiSCSI_InitiatorInstanceStatistics_UniqueAdapterId_ID = 1,MSiSCSI_InitiatorInstanceStatistics_SessionDigestErrorCount_ID = 2,MSiSCSI_InitiatorInstanceStatistics_SessionConnectionTimeoutErrorCount_ID = 3,MSiSCSI_InitiatorInstanceStatistics_SessionFormatErrorCount_ID = 4,MSiSCSI_InitiatorInstanceStatistics_SessionFailureCount_ID = 5,MSiSCSI_NICPerformance_BytesTransmitted_ID = 1,MSiSCSI_NICPerformance_BytesReceived_ID = 2,MSiSCSI_NICPerformance_PDUTransmitted_ID = 3,MSiSCSI_NICPerformance_PDUReceived_ID = 4,MSiSCSI_RequestTimeStatistics_iSCSIName_ID = 1,MSiSCSI_RequestTimeStatistics_CID_ID = 2,MSiSCSI_RequestTimeStatistics_USID_ID = 3,MSiSCSI_RequestTimeStatistics_UniqueAdapterId_ID = 4,MSiSCSI_RequestTimeStatistics_MaximumProcessingTime_ID = 5,MSiSCSI_RequestTimeStatistics_AverageProcessingTime_ID = 6,};
enum MACRO_NOTIFICATION_ROUTINE {REGISTER_NOTIFICATION_ROUTINE = 1,DEREGISTER_NOTIFICATION_ROUTINE = 2,EXTENDED_NOTIFICATION_ROUTINE = 4,};
enum MACRO_OBSOLETE_IOCTL_CDROM {OBSOLETE_IOCTL_CDROM_GET_CONTROL = 0x24034,};
enum MACRO_OID_DOT11_ADDITIONAL {OID_DOT11_ADDITIONAL_IE = 0xE030107,};
enum MACRO_OID_DOT11_DISCONNECT {OID_DOT11_DISCONNECT_REQUEST = 234946958,OID_DOT11_UNICAST_USE_GROUP_ENABLED = 234946959,OID_DOT11_HARDWARE_PHY_STATE = 234946960,OID_DOT11_DESIRED_PHY_LIST = 234946961,};
enum MACRO_OID_DOT11_POWER_MGMT {OID_DOT11_POWER_MGMT_MODE_STATUS = 0xE070102,};
enum MACRO_OID_DOT11_WFD_DEVICE {OID_DOT11_WFD_DEVICE_INFO = 0xE050103,};
enum MACRO_OID_DOT11_WFD_LISTEN {OID_DOT11_WFD_LISTEN_STATE_DISCOVERABILITY = 0xE050107,};
enum MACRO_RemoveVirtualPort_IN {RemoveVirtualPort_IN_WWPN_ID = 2,RemoveVirtualPort_OUT_Status_ID = 1,};
enum MACRO_RescanVirtualPort_IN {RescanVirtualPort_IN_WWPN_ID = 2,RescanVirtualPort_OUT_Status_ID = 1,};
enum MACRO_SECURITY_INFORMATION {OWNER_SECURITY_INFORMATION = 0x1,GROUP_SECURITY_INFORMATION = 0x2,DACL_SECURITY_INFORMATION = 0x4,SACL_SECURITY_INFORMATION = 0x8,LABEL_SECURITY_INFORMATION = 0x10,ATTRIBUTE_SECURITY_INFORMATION = 0x20,SCOPE_SECURITY_INFORMATION = 0x40,BACKUP_SECURITY_INFORMATION = 0x10000,PROTECTED_DACL_SECURITY_INFORMATION = 0x80000000,PROTECTED_SACL_SECURITY_INFORMATION = 0x40000000,UNPROTECTED_DACL_SECURITY_INFORMATION = 0x20000000,UNPROTECTED_SACL_SECURITY_INFORMATION = 0x10000000,};
enum MACRO_SetBindingSupport_IN {SetBindingSupport_IN_PortWWN_ID = 1,SetBindingSupport_IN_BindType_ID = 2,SetBindingSupport_OUT_HBAStatus_ID = 3,};
enum MACRO_SetGroupPresharedKey {SetGroupPresharedKey = 3,};
enum MACRO_SetInitiatorNodeName {SetInitiatorNodeName = 92,};
enum MACRO_SetLoadBalancePolicy {SetLoadBalancePolicy = 10,};
enum MACRO_SetPresharedKeyForId {SetPresharedKeyForId = 1,};
enum MACRO_UNIT_DIRECTORY_ENTRY {ADD_UNIT_DIRECTORY_ENTRY = 0x1,REMOVE_UNIT_DIRECTORY_ENTRY = 0x2,};
enum MACRO_WmiEnumReceiveQueues {WmiEnumReceiveQueues = 1,};
enum MACRO_WmiEnumeratePorts_IN {WmiEnumeratePorts_IN_Header_ID = 1,WmiEnumeratePorts_OUT_Ports_ID = 2,};
enum MACRO_WmiQueryLinkState_IN {WmiQueryLinkState_IN_Header_ID = 1,WmiQueryLinkState_OUT_LinkState_ID = 2,};
enum MACRO_WmiQueryPortState_IN {WmiQueryPortState_IN_Header_ID = 1,WmiQueryPortState_OUT_PortState_ID = 2,};
enum MACRO_WmiSetLinkParameters {WmiSetLinkParameters = 1,};
enum MACRO_WmiSetPortParameters {WmiSetPortParameters = 1,};
typedef struct _MAILSLOT_CREATE_PARAMETERS MAILSLOT_CREATE_PARAMETERS;
typedef struct _MEDIA_SPECIFIC_INFORMATION MEDIA_SPECIFIC_INFORMATION;
typedef struct _MLDV2_REPORT_RECORD_HEADER MLDV2_REPORT_RECORD_HEADER;
typedef struct _MODE_DATA_COMPRESSION_PAGE MODE_DATA_COMPRESSION_PAGE;
typedef struct _MODE_MEDIUM_PARTITION_PAGE MODE_MEDIUM_PARTITION_PAGE;
typedef struct _MODE_MEDIUM_PART_PAGE_PLUS MODE_MEDIUM_PART_PAGE_PLUS;
typedef struct _MSNdis_80211_BssIdListScan MSNdis_80211_BssIdListScan;
typedef struct _MSNdis_80211_Configuration MSNdis_80211_Configuration;
typedef struct _MSNdis_80211_PrivacyFilter MSNdis_80211_PrivacyFilter;
typedef struct _MSNdis_AtmMaxActiveVciBits MSNdis_AtmMaxActiveVciBits;
typedef struct _MSNdis_AtmMaxActiveVpiBits MSNdis_AtmMaxActiveVpiBits;
typedef struct _MSNdis_AtmSupportedVcRates MSNdis_AtmSupportedVcRates;
typedef struct _MSNdis_CoTransmitPduErrors MSNdis_CoTransmitPduErrors;
typedef struct _MSNdis_CoVendorDescription MSNdis_CoVendorDescription;
typedef struct _MSNdis_CurrentPacketFilter MSNdis_CurrentPacketFilter;
typedef struct _MSNdis_NetworkShortAddress MSNdis_NetworkShortAddress;
typedef struct _MSNdis_PMCapabilitiesParam MSNdis_PMCapabilitiesParam;
typedef struct _MSNdis_StatusDevicePowerOn MSNdis_StatusDevicePowerOn;
typedef struct _MSNdis_StatusNetworkChange MSNdis_StatusNetworkChange;
typedef struct _MSNdis_TokenRingLineErrors MSNdis_TokenRingLineErrors;
typedef struct _MSNdis_TokenRingLostFrames MSNdis_TokenRingLostFrames;
typedef struct _MSNdis_TransmitBufferSpace MSNdis_TransmitBufferSpace;
typedef struct _MSNdis_VendorDriverVersion MSNdis_VendorDriverVersion;
typedef struct _MSV1_0_GETUSERINFO_REQUEST MSV1_0_GETUSERINFO_REQUEST;
typedef struct _MSV1_0_INTERACTIVE_PROFILE MSV1_0_INTERACTIVE_PROFILE;
typedef struct _MSWmi_GuidRegistrationInfo MSWmi_GuidRegistrationInfo;
typedef struct _NDIS_DRIVER_WRAPPER_HANDLE NDIS_DRIVER_WRAPPER_HANDLE;
typedef struct _NDIS_INTERFACE_INFORMATION NDIS_INTERFACE_INFORMATION;
typedef struct _NDIS_OFFLOAD_ENCAPSULATION NDIS_OFFLOAD_ENCAPSULATION;
typedef struct _NDIS_PHYSICAL_ADDRESS_UNIT NDIS_PHYSICAL_ADDRESS_UNIT;
typedef struct _NDIS_SYSTEM_PROCESSOR_INFO NDIS_SYSTEM_PROCESSOR_INFO;
typedef struct _NDIS_TAPI_GET_ADDRESS_CAPS NDIS_TAPI_GET_ADDRESS_CAPS;
typedef struct _NDIS_TAPI_GET_EXTENSION_ID NDIS_TAPI_GET_EXTENSION_ID;
typedef struct _NDIS_TAPI_SET_APP_SPECIFIC NDIS_TAPI_SET_APP_SPECIFIC;
typedef struct _NDIS_TIMER_CHARACTERISTICS NDIS_TIMER_CHARACTERISTICS;
typedef struct _NDIS_WAN_CO_GET_STATS_INFO NDIS_WAN_CO_GET_STATS_INFO;
typedef struct nd_neighbor_solicit ND_NEIGHBOR_SOLICIT_HEADER;
typedef struct _NET_BUFFER_POOL_PARAMETERS NET_BUFFER_POOL_PARAMETERS;
typedef struct _NET_PNP_EVENT_NOTIFICATION NET_PNP_EVENT_NOTIFICATION;
typedef struct _NPI_CLIENT_CHARACTERISTICS NPI_CLIENT_CHARACTERISTICS;
typedef struct _ACPI_EVAL_INPUT_BUFFER_EX *PACPI_EVAL_INPUT_BUFFER_EX;
typedef struct _ATM_TRAFFIC_DESCRIPTOR_IE *PATM_TRAFFIC_DESCRIPTOR_IE;
typedef struct _AddConnectionToSession_IN *PAddConnectionToSession_IN;
typedef struct _BDA_ETHERNET_ADDRESS_LIST *PBDA_ETHERNET_ADDRESS_LIST;
typedef struct _BDA_ISDBCAS_REQUESTHEADER *PBDA_ISDBCAS_REQUESTHEADER;
typedef struct _BOOTDISK_INFORMATION_LITE *PBOOTDISK_INFORMATION_LITE;
typedef struct _BTHDDI_SDP_NODE_INTERFACE *PBTHDDI_SDP_NODE_INTERFACE;
typedef struct _CDROM_PERFORMANCE_REQUEST *PCDROM_PERFORMANCE_REQUEST;
typedef struct _CDROM_TOC_ATIP_DATA_BLOCK *PCDROM_TOC_ATIP_DATA_BLOCK;
typedef struct _CDROM_WRITE_SPEED_REQUEST *PCDROM_WRITE_SPEED_REQUEST;
typedef struct _CHANGER_ELEMENT_STATUS_EX *PCHANGER_ELEMENT_STATUS_EX;
typedef struct _CHANNEL_CONFIG_PARAMETERS *PCHANNEL_CONFIG_PARAMETERS;
typedef struct _PCI_AGP_APERTURE_PAGE_SIZE PCI_AGP_APERTURE_PAGE_SIZE;
typedef struct _PCI_BUS_INTERFACE_STANDARD PCI_BUS_INTERFACE_STANDARD;
typedef void (*PCI_ERROR_HANDLER_CALLBACK)(void);
typedef struct _PCI_EXPRESS_ACS_CAPABILITY PCI_EXPRESS_ACS_CAPABILITY;
typedef struct _PCI_EXPRESS_AER_CAPABILITY PCI_EXPRESS_AER_CAPABILITY;
typedef struct _PCI_EXPRESS_ARI_CAPABILITY PCI_EXPRESS_ARI_CAPABILITY;
typedef struct _PCI_EXPRESS_LTR_CAPABILITY PCI_EXPRESS_LTR_CAPABILITY;
typedef struct _CLASS_PRIVATE_COMMON_DATA *PCLASS_PRIVATE_COMMON_DATA;
typedef struct _CLFS_LOG_NAME_INFORMATION *PCLFS_LOG_NAME_INFORMATION;
typedef struct _CLS_CONTAINER_INFORMATION *PCLS_CONTAINER_INFORMATION;
typedef struct _CONFIGURATION_INFORMATION *PCONFIGURATION_INFORMATION;
typedef struct _CBA7ED455CF404F3CA70D8CDC7B47AD9 *PDEBUG_MEMORY_REQUIREMENTS;
typedef struct _DEVICEDUMP_SECTION_HEADER *PDEVICEDUMP_SECTION_HEADER;
typedef struct _DISK_COPY_DATA_PARAMETERS *PDISK_COPY_DATA_PARAMETERS;
typedef struct _DOT11_ASSOCIATION_INFO_EX *PDOT11_ASSOCIATION_INFO_EX;
typedef struct DOT11_AUTH_ALGORITHM_LIST *PDOT11_AUTH_ALGORITHM_LIST;
typedef struct _DOT11_DEFAULT_WEP_OFFLOAD *PDOT11_DEFAULT_WEP_OFFLOAD;
typedef struct DOT11_EXTSTA_RECV_CONTEXT *PDOT11_EXTSTA_RECV_CONTEXT;
typedef struct DOT11_EXTSTA_SEND_CONTEXT *PDOT11_EXTSTA_SEND_CONTEXT;
typedef struct _DOT11_FRAGMENT_DESCRIPTOR *PDOT11_FRAGMENT_DESCRIPTOR;
typedef struct DOT11_OFDM_PHY_ATTRIBUTES *PDOT11_OFDM_PHY_ATTRIBUTES;
typedef struct _DOT11_OPTIONAL_CAPABILITY *PDOT11_OPTIONAL_CAPABILITY;
typedef struct _DOT11_SEND_EXTENSION_INFO *PDOT11_SEND_EXTENSION_INFO;
typedef struct _DOT11_SUPPORTED_PHY_TYPES *PDOT11_SUPPORTED_PHY_TYPES;
typedef struct _DXGKMDT_OPM_RANDOM_NUMBER *PDXGKMDT_OPM_RANDOM_NUMBER;
typedef struct _AAB530BE51B826E42B40424AF03CA80A *PDXGK_BRIGHTNESS_INTERFACE;
typedef struct _EISA_MEMORY_CONFIGURATION *PEISA_MEMORY_CONFIGURATION;
typedef struct _FILE_BOTH_DIR_INFORMATION *PFILE_BOTH_DIR_INFORMATION;
typedef struct _FILE_FS_LABEL_INFORMATION *PFILE_FS_LABEL_INFORMATION;
typedef struct _FILE_FULL_DIR_INFORMATION *PFILE_FULL_DIR_INFORMATION;
typedef struct _FILE_INTERNAL_INFORMATION *PFILE_INTERNAL_INFORMATION;
typedef struct _FILE_OBJECTID_INFORMATION *PFILE_OBJECTID_INFORMATION;
typedef struct _FILE_PIPE_WAIT_FOR_BUFFER *PFILE_PIPE_WAIT_FOR_BUFFER;
typedef struct _FILE_POSITION_INFORMATION *PFILE_POSITION_INFORMATION;
typedef struct _FILE_QUERY_SPARING_BUFFER *PFILE_QUERY_SPARING_BUFFER;
typedef struct _FILE_STANDARD_INFORMATION *PFILE_STANDARD_INFORMATION;
typedef struct _FILE_TRACKING_INFORMATION *PFILE_TRACKING_INFORMATION;
typedef struct _FLT_FILE_NAME_INFORMATION *PFLT_FILE_NAME_INFORMATION;
typedef struct _FSCTL_OFFLOAD_READ_OUTPUT *PFSCTL_OFFLOAD_READ_OUTPUT;
typedef struct _FSCTL_OFFLOAD_WRITE_INPUT *PFSCTL_OFFLOAD_WRITE_INPUT;
typedef struct _FSVIDEO_COPY_FRAME_BUFFER *PFSVIDEO_COPY_FRAME_BUFFER;
typedef struct _PF_SET_EXTENSION_HOOK_INFO PF_SET_EXTENSION_HOOK_INFO;
typedef struct _GET_ALL_ERROR_SOURCES_OUT *PGET_ALL_ERROR_SOURCES_OUT;
typedef struct _GET_ERROR_SOURCE_INFO_OUT *PGET_ERROR_SOURCE_INFO_OUT;
typedef struct _GP_LOG_GENERAL_STATISTICS *PGP_LOG_GENERAL_STATISTICS;
typedef struct _GetPersistentBinding2_OUT *PGetPersistentBinding2_OUT;
typedef struct _GetPortAttributesByWWN_IN *PGetPortAttributesByWWN_IN;
typedef struct _HDAUDIO_BUFFER_DESCRIPTOR *PHDAUDIO_BUFFER_DESCRIPTOR;
typedef struct _HDAUDIO_BUS_INTERFACE_BDL *PHDAUDIO_BUS_INTERFACE_BDL;
typedef struct _HIDP_LINK_COLLECTION_NODE *PHIDP_LINK_COLLECTION_NODE;
typedef struct _IDE_CHANNEL_CONFIGURATION *PIDE_CHANNEL_CONFIGURATION;
typedef struct _ImageArchitectureHeader *PIMAGE_ARCHITECTURE_HEADER;
typedef struct _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;
typedef struct _INJECT_HARDWARE_ERROR_OUT *PINJECT_HARDWARE_ERROR_OUT;
typedef struct _INSTANCE_FULL_INFORMATION *PINSTANCE_FULL_INFORMATION;
typedef struct _INTERNAL_I8042_HOOK_MOUSE *PINTERNAL_I8042_HOOK_MOUSE;
typedef struct _IO_INTERRUPT_MESSAGE_INFO *PIO_INTERRUPT_MESSAGE_INFO;
typedef struct _ISCSI_RedirectSessionInfo *PISCSI_RedirectSessionInfo;
typedef struct _KBUGCHECK_CALLBACK_RECORD *PKBUGCHECK_CALLBACK_RECORD;
typedef struct _KDPC_WATCHDOG_INFORMATION *PKDPC_WATCHDOG_INFORMATION;
typedef struct _tagKSAUDIOENGINE_VOLUMELEVEL *PKSAUDIOENGINE_VOLUMELEVEL;
typedef struct _097132A3DAC724C77C2462A4DC4AA652 *PKSDATAFORMAT_WAVEFORMATEX;
typedef struct _8FE9905039884FA12A33AF170E497D82 *PKSDS3D_BUFFER_CONE_ANGLES;
typedef struct _KSM_BDA_TUNER_TUNEREQUEST *PKSM_BDA_TUNER_TUNEREQUEST;
typedef struct _61992E1E6DA7B91ECC7FA4A74B115A04 *PKSPROPERTY_MEDIAAVAILABLE;
typedef struct _E15D7B7CA61FF43DF93005DFD376A388 *PKSPROPERTY_TUNER_STATUS_S;
typedef struct _AAD79452FC68247846A5E3B058A03BB4 *PKSPROPERTY_TVAUDIO_CAPS_S;
typedef struct _764676431BC78EE50306C71955FB365D *PKSPROPERTY_VIDEODECODER_S;
typedef struct _9A6BD7645A973A5ADF34F154404EC940 *PKSPROPERTY_VIDEOENCODER_S;
typedef struct _9A6BD7645A973A5ADF34F154404EC940 *PKSPROPERTY_VIDEOPROCAMP_S;
typedef struct _717F7A89FCE81E507F2DE95312881168 *PKSRTAUDIO_BUFFER_PROPERTY;
typedef struct _816E3560EF21380C948191659F672DF0 *PKSWAVE_INPUT_CAPABILITIES;
typedef struct tagKS_DATAFORMAT_MPEG2TS_AVC *PKS_DATAFORMAT_MPEG2TS_AVC;
typedef struct _KS_DVDCOPY_SET_COPY_STATE *PKS_DVDCOPY_SET_COPY_STATE;
typedef struct _98D21277AAAA3049664E864EBED0B60A *PKS_FRAMING_RANGE_WEIGHTED;
typedef struct _KernelThermalPolicyChange *PKernelThermalPolicyChange;
typedef struct _LINK_TRACKING_INFORMATION *PLINK_TRACKING_INFORMATION;
typedef struct _MF_VARYING_RESOURCE_ENTRY *PMF_VARYING_RESOURCE_ENTRY;
typedef struct _MODE_ELEMENT_ADDRESS_PAGE *PMODE_ELEMENT_ADDRESS_PAGE;
typedef struct _MODE_PARM_READ_WRITE *PMODE_PARM_READ_WRITE_DATA;
typedef struct _MOUNTMGR_QUERY_AUTO_MOUNT *PMOUNTMGR_QUERY_AUTO_MOUNT;
typedef struct _MPIO_PASS_THROUGH_PATH_EX *PMPIO_PASS_THROUGH_PATH_EX;
typedef struct _MRX_CREATENETROOT_CONTEXT *PMRX_CREATENETROOT_CONTEXT;
typedef struct _MRX_SRVCALLDOWN_STRUCTURE *PMRX_SRVCALLDOWN_STRUCTURE;
typedef struct _MSNdis_80211_Disassociate *PMSNdis_80211_Disassociate;
typedef struct _MSNdis_80211_RTSThreshold *PMSNdis_80211_RTSThreshold;
typedef struct _MSNdis_AtmTransmitCellsOk *PMSNdis_AtmTransmitCellsOk;
typedef struct _MSNdis_CoMinimumLinkSpeed *PMSNdis_CoMinimumLinkSpeed;
typedef struct _MSNdis_CoReceivePduErrors *PMSNdis_CoReceivePduErrors;
typedef struct _MSNdis_EnumerateAdapterEx *PMSNdis_EnumerateAdapterEx;
typedef struct _MSNdis_EthernetMacOptions *PMSNdis_EthernetMacOptions;
typedef struct _MSNdis_FddiAttachmentType *PMSNdis_FddiAttachmentType;
typedef struct _MSNdis_MaximumSendPackets *PMSNdis_MaximumSendPackets;
typedef struct _MSNdis_MediaConnectStatus *PMSNdis_MediaConnectStatus;
typedef struct _MSNdis_NetworkDirectState *PMSNdis_NetworkDirectState;
typedef struct _MSNdis_PMAdminConfigParam *PMSNdis_PMAdminConfigParam;
typedef struct _MSNdis_PMAdminConfigState *PMSNdis_PMAdminConfigState;
typedef struct _MSNdis_PhysicalMediumType *PMSNdis_PhysicalMediumType;
typedef struct _MSNdis_PortAuthParameters *PMSNdis_PortAuthParameters;
typedef struct _MSNdis_ReceiveBufferSpace *PMSNdis_ReceiveBufferSpace;
typedef struct _MSNdis_StatusProtocolBind *PMSNdis_StatusProtocolBind;
typedef struct _MSV1_0_ENUMUSERS_RESPONSE *PMSV1_0_ENUMUSERS_RESPONSE;
typedef struct _MSV1_0_LM20_LOGON_PROFILE *PMSV1_0_LM20_LOGON_PROFILE;
typedef struct _MSiSCSI_BootConfiguration *PMSiSCSI_BootConfiguration;
typedef struct _MSiSCSI_SessionStatistics *PMSiSCSI_SessionStatistics;
typedef struct _NDIS_802_11_BSSID_LIST_EX *PNDIS_802_11_BSSID_LIST_EX;
typedef struct _NDIS_802_11_CONFIGURATION *PNDIS_802_11_CONFIGURATION;
typedef struct _NDIS_CONFIGURATION_OBJECT *PNDIS_CONFIGURATION_OBJECT;
typedef struct _NDIS_PORT_CHARACTERISTICS *PNDIS_PORT_CHARACTERISTICS;
typedef struct _NDIS_TAPI_GET_CALL_STATUS *PNDIS_TAPI_GET_CALL_STATUS;
typedef struct _NDIS_TAPI_SET_CALL_PARAMS *PNDIS_TAPI_SET_CALL_PARAMS;
typedef struct _NDIS_WAN_CO_GET_COMP_INFO *PNDIS_WAN_CO_GET_COMP_INFO;
typedef struct _NDIS_WAN_CO_GET_LINK_INFO *PNDIS_WAN_CO_GET_LINK_INFO;
typedef struct _NDIS_WAN_CO_SET_COMP_INFO *PNDIS_WAN_CO_SET_COMP_INFO;
typedef struct _NDIS_WAN_CO_SET_LINK_INFO *PNDIS_WAN_CO_SET_LINK_INFO;
typedef struct _NDIS_WMI_IPSEC_OFFLOAD_V1 *PNDIS_WMI_IPSEC_OFFLOAD_V1;
typedef struct _NDIS_WWAN_SET_RADIO_STATE *PNDIS_WWAN_SET_RADIO_STATE;
typedef struct _NDIS_WWAN_SMS_SEND_STATUS *PNDIS_WWAN_SMS_SEND_STATUS;
typedef struct _NDIS_WWAN_VENDOR_SPECIFIC *PNDIS_WWAN_VENDOR_SPECIFIC;
typedef struct nd_neighbor_advert *PND_NEIGHBOR_ADVERT_HEADER;
typedef struct _NOTIFICATION_MEDIA_STATUS *PNOTIFICATION_MEDIA_STATUS;
typedef struct _NOTIFICATION_POWER_STATUS *PNOTIFICATION_POWER_STATUS;
typedef struct _489123E2AD8EAE95455F5E3AE4E05067 *PNOTIFY_USER_POWER_SETTING;
typedef  struct _NPI_REGISTRATION_INSTANCE *PNPI_REGISTRATION_INSTANCE;
typedef struct _PNP_REPLACE_PROCESSOR_LIST PNP_REPLACE_PROCESSOR_LIST;
typedef struct _4424FFEAB304DE779362E708A77EF4CB *PNTFS_EXTENDED_VOLUME_DATA;
typedef struct _OBJECT_HANDLE_INFORMATION *POBJECT_HANDLE_INFORMATION;
typedef struct _OB_OPERATION_REGISTRATION *POB_OPERATION_REGISTRATION;
typedef struct _POWER_PLATFORM_INFORMATION POWER_PLATFORM_INFORMATION;
typedef struct _B0B71E7A52FD9A7B3B7D3722060F0E86 POWER_STATE_NOTIFY_HANDLER;
typedef struct _PO_FX_COMPONENT_IDLE_STATE PO_FX_COMPONENT_IDLE_STATE;
typedef struct _PAGE_PRIORITY_INFORMATION *PPAGE_PRIORITY_INFORMATION;
typedef struct _PARALLEL_PORT_INFORMATION *PPARALLEL_PORT_INFORMATION;
typedef struct _PARCLASS_NEGOTIATION_MASK *PPARCLASS_NEGOTIATION_MASK;
typedef struct _PARPORT_REMOVAL_RELATIONS *PPARPORT_REMOVAL_RELATIONS;
typedef struct _PARTITION_INFORMATION_GPT *PPARTITION_INFORMATION_GPT;
typedef struct _PARTITION_INFORMATION_MBR *PPARTITION_INFORMATION_MBR;
typedef struct _PCC_GENREIC_SHARED_REGION *PPCC_GENERIC_SHARED_REGION;
typedef union _PCI_EXPRESS_SRIOV_CONTROL *PPCI_EXPRESS_SRIOV_CONTROL;
typedef struct _CLS_IO_STATISTICS_HEADER **PPCLS_IO_STATISTICS_HEADER;
typedef struct _PCMCIA_INTERFACE_STANDARD *PPCMCIA_INTERFACE_STANDARD;
typedef struct _PCMCIA_SOCKET_INFORMATION *PPCMCIA_SOCKET_INFORMATION;
typedef struct _PHYSICAL_DEVICE_EXTENSION *PPHYSICAL_DEVICE_EXTENSION;
typedef struct _PMI_REPORTED_CAPABILITIES *PPMI_REPORTED_CAPABILITIES;
typedef struct _28A0AF738EE9756E1A9EEC68C6D23E3C PPM_PERFSTATE_DOMAIN_EVENT;
typedef struct _POINTER_PORT_WMI_STD_DATA *PPOINTER_PORT_WMI_STD_DATA;
typedef struct _5E92F866E5E5F01CD93A72BBF8C1999A *PPPM_IDLE_STATE_ACCOUNTING;
typedef struct _PREFETCH_OPEN_ECP_CONTEXT *PPREFETCH_OPEN_ECP_CONTEXT;
typedef struct _PROCESS_BASIC_INFORMATION *PPROCESS_BASIC_INFORMATION;
typedef struct _READ_BUFFER_CAPACITY_DATA *PREAD_BUFFER_CAPACITY_DATA;
typedef struct _READ_ELEMENT_ADDRESS_INFO *PREAD_ELEMENT_ADDRESS_INFO;
typedef struct _REGISTER_COMPOSITE_DEVICE *PREGISTER_COMPOSITE_DEVICE;
typedef struct _REG_DELETE_KEY_INFORMATION *PREG_FLUSH_KEY_INFORMATION;
typedef struct _REG_QUERY_KEY_INFORMATION *PREG_QUERY_KEY_INFORMATION;
typedef struct _RESOURCE_PERFORMANCE_DATA *PRESOURCE_PERFORMANCE_DATA;
typedef struct RETRIEVAL_POINTERS_BUFFER *PRETRIEVAL_POINTERS_BUFFER;
typedef struct _9FC3DA75389FEB436866F6884A7E4AB3 PRI_RESERVATION_DESCRIPTOR;
typedef struct _1E49DD38FB2118FBA108586CF41E8D50 PROCESSOR_IDLESTATE_POLICY;
typedef struct _A2B9D6959A188CB660A127F9232FE650 PROCESSOR_PERFSTATE_POLICY;
typedef struct _RemovePersistentEntry_OUT *PRemovePersistentEntry_OUT;
typedef struct _RemovePersistentLogin_OUT *PRemovePersistentLogin_OUT;
typedef struct _SCARD_READER_CAPABILITIES *PSCARD_READER_CAPABILITIES;
typedef struct _SCO_INDICATION_PARAMETERS *PSCO_INDICATION_PARAMETERS;
typedef struct _SDBUS_ADAPTER_SOCKET_INFO *PSDBUS_ADAPTER_SOCKET_INFO;
typedef struct _SEC_WINNT_AUTH_IDENTITY_W *PSEC_WINNT_AUTH_IDENTITY_W;
typedef struct _SET_ERROR_SOURCE_INFO_OUT *PSET_ERROR_SOURCE_INFO_OUT;
typedef struct _SET_PARTITION_INFORMATION *PSET_PARTITION_INFORMATION;
typedef struct _SHRINK_VOLUME_INFORMATION *PSHRINK_VOLUME_INFORMATION;
typedef struct _SOCKET_PROCESSOR_AFFINITY *PSOCKET_PROCESSOR_AFFINITY;
typedef struct _060D6FD956D3EBF205D64C3CA4764571 *PSTARTING_LCN_INPUT_BUFFER;
typedef struct _80E50DFA284ED4BC838B08AAD8EA99BA *PSTARTING_VCN_INPUT_BUFFER;
typedef struct _STORAGE_BUS_RESET_REQUEST *PSTORAGE_BUS_RESET_REQUEST;
typedef struct _STORAGE_DESCRIPTOR_HEADER *PSTORAGE_DESCRIPTOR_HEADER;
typedef struct _STORAGE_DEVICE_DESCRIPTOR *PSTORAGE_DEVICE_DESCRIPTOR;
typedef struct _STORAGE_DIAG_EVENT_RECORD *PSTORAGE_DIAG_EVENT_RECORD;
typedef struct _STOR_ALLOC_EL_RECORD_ARGS *PSTOR_ALLOC_EL_RECORD_ARGS;
typedef struct _STOR_CLEANUP_TRACING_ARGS *PSTOR_CLEANUP_TRACING_ARGS;
typedef struct _STOR_FREE_DIAG_EVENT_ARGS *PSTOR_FREE_DIAG_EVENT_ARGS;
typedef struct _STOR_POFX_UNIT_POWER_INFO *PSTOR_POFX_UNIT_POWER_INFO;
typedef struct _STOR_POWER_CONTROL_HEADER *PSTOR_POWER_CONTROL_HEADER;
typedef struct _STOR_WRITE_EL_RECORD_ARGS *PSTOR_WRITE_EL_RECORD_ARGS;
typedef struct _9FEB4B420E923D4204A687EB7CAB54F3 *PSYSTEM_POWER_CAPABILITIES;
typedef struct _SecPkgContext_StreamSizes *PSecPkgContext_StreamSizes;
typedef struct _SetChapForPhysicalPort_IN *PSetChapForPhysicalPort_IN;
typedef struct _SetRADIUSSharedSecret_OUT *PSetRADIUSSharedSecret_OUT;
typedef struct _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;
typedef struct _TDI_REQUEST_KERNEL_ACCEPT *PTDI_REQUEST_KERNEL_ACCEPT;
typedef struct _TDI_REQUEST_KERNEL_SENDDG *PTDI_REQUEST_KERNEL_SENDDG;
typedef struct _TDI_REQUEST_SEND_DATAGRAM *PTDI_REQUEST_SEND_DATAGRAM;
typedef struct _TXFS_QUERY_RM_INFORMATION *PTXFS_QUERY_RM_INFORMATION;
typedef struct _TXFS_START_RM_INFORMATION *PTXFS_START_RM_INFORMATION;
typedef struct _USBD_INTERFACE_LIST_ENTRY *PUSBD_INTERFACE_LIST_ENTRY;
typedef struct _USBRPM_DEVICE_INFORMATION *PUSBRPM_DEVICE_INFORMATION;
typedef union _USB_HUB_STATUS_AND_CHANGE *PUSB_HUB_STATUS_AND_CHANGE;
typedef struct _VIDEO_PERFORMANCE_COUNTER *PVIDEO_PERFORMANCE_COUNTER;
typedef struct _VPD_THIRD_PARTY_COPY_PAGE *PVPD_THIRD_PARTY_COPY_PAGE;
typedef struct _VP_SCATTER_GATHER_ELEMENT *PVP_SCATTER_GATHER_ELEMENT;
typedef struct _WHEA_MEMORY_ERROR_SECTION *PWHEA_MEMORY_ERROR_SECTION;
typedef struct _WHEA_PCIEXPRESS_DEVICE_ID *PWHEA_PCIEXPRESS_DEVICE_ID;
typedef struct _WMI_TAPE_DRIVE_PARAMETERS *PWMI_TAPE_DRIVE_PARAMETERS;
typedef struct _WMI_TAPE_MEDIA_PARAMETERS *PWMI_TAPE_MEDIA_PARAMETERS;
typedef struct _WMI_TAPE_PROBLEM_IO_ERROR *PWMI_TAPE_PROBLEM_IO_ERROR;
typedef struct _WSK_EXTENSION_CONTROL_OUT *PWSK_EXTENSION_CONTROL_OUT;
typedef struct _WWAN_DEVICE_SERVICE_ENTRY *PWWAN_DEVICE_SERVICE_ENTRY;
typedef struct _WWAN_DEVICE_SERVICE_EVENT *PWWAN_DEVICE_SERVICE_EVENT;
typedef struct _WmiEnumReceiveFilters_OUT *PWmiEnumReceiveFilters_OUT;
typedef struct _WmiMonitorBrightnessEvent *PWmiMonitorBrightnessEvent;
typedef struct _WmiMonitorRawEEdidV1Block *PWmiMonitorRawEEdidV1Block;
typedef struct _WmiQueryStatisticsInfo_IN *PWmiQueryStatisticsInfo_IN;
typedef struct _READ_DVD_STRUCTURES_HEADER READ_DVD_STRUCTURES_HEADER;
typedef struct _REG_CREATE_KEY_INFORMATION REG_CREATE_KEY_INFORMATION;
typedef struct _REG_DELETE_KEY_INFORMATION REG_DELETE_KEY_INFORMATION;
typedef struct _REG_RENAME_KEY_INFORMATION REG_RENAME_KEY_INFORMATION;
typedef struct _REG_UNLOAD_KEY_INFORMATION REG_UNLOAD_KEY_INFORMATION;
typedef struct _REQUEST_RAW_ENCRYPTED_DATA REQUEST_RAW_ENCRYPTED_DATA;
typedef struct _E7B7FA0D35363FDD22D2212ED4AF2596 REQ_NT_QUERY_FS_QUOTA_INFO;
typedef struct _RXCE_ADDRESS_EVENT_HANDLER_ RXCE_ADDRESS_EVENT_HANDLER;
typedef struct _RXCE_TRANSPORT_INFORMATION_ RXCE_TRANSPORT_INFORMATION;
typedef struct _SDBUS_INTERFACE_PARAMETERS SDBUS_INTERFACE_PARAMETERS;
typedef struct _SES_STATUS_DIAGNOSTIC_PAGE SES_STATUS_DIAGNOSTIC_PAGE;
typedef struct _SOCKET_SECURITY_QUERY_INFO SOCKET_SECURITY_QUERY_INFO;
typedef struct _STORAGE_ADAPTER_DESCRIPTOR STORAGE_ADAPTER_DESCRIPTOR;
typedef struct _STORAGE_EVENT_NOTIFICATION STORAGE_EVENT_NOTIFICATION;
typedef struct _STOR_ADAPTER_CONTROL_POWER STOR_ADAPTER_CONTROL_POWER;
typedef struct _STOR_ALLOC_DIAG_EVENT_ARGS STOR_ALLOC_DIAG_EVENT_ARGS;
typedef struct _STOR_INITGLOBALLOGGER_ARGS STOR_INITGLOBALLOGGER_ARGS;
typedef struct _STREAM_DATA_INTERSECT_INFO STREAM_DATA_INTERSECT_INFO;
typedef struct _STREAM_PROPERTY_DESCRIPTOR STREAM_PROPERTY_DESCRIPTOR;
typedef struct _SUB_Q_MEDIA_CATALOG_NUMBER SUB_Q_MEDIA_CATALOG_NUMBER;
typedef struct _SYSTEM_MANDATORY_LABEL_ACE SYSTEM_MANDATORY_LABEL_ACE;
typedef struct _SYSTEM_POWER_LOGGING_ENTRY SYSTEM_POWER_LOGGING_ENTRY;
typedef struct _SYSTEM_POWER_STATE_CONTEXT SYSTEM_POWER_STATE_CONTEXT;
typedef struct _SecPkgContext_PackageInfoW SecPkgContext_PackageInfoW;
typedef struct _SetChapForPhysicalPort_OUT SetChapForPhysicalPort_OUT;
typedef struct _TCP_INITIAL_RTO_PARAMETERS TCP_INITIAL_RTO_PARAMETERS;
typedef struct _TDI_CONNECTION_INFORMATION TDI_CONNECTION_INFORMATION;
typedef struct _TDI_REQUEST_KERNEL_RECEIVE TDI_REQUEST_KERNEL_RECEIVE;
typedef struct _TXFS_GET_METADATA_INFO_OUT TXFS_GET_METADATA_INFO_OUT;
typedef struct _TXFS_SAVEPOINT_INFORMATION TXFS_SAVEPOINT_INFORMATION;
typedef struct _UNICODE_PREFIX_TABLE_ENTRY UNICODE_PREFIX_TABLE_ENTRY;
typedef struct _USBD_INTERFACE_INFORMATION USBD_INTERFACE_INFORMATION;
typedef struct _USBD_ISO_PACKET_DESCRIPTOR USBD_ISO_PACKET_DESCRIPTOR;
typedef struct _USB_BUS_INTERFACE_USBDI_V0 USB_BUS_INTERFACE_USBDI_V0;
typedef struct _USB_BUS_INTERFACE_USBDI_V1 USB_BUS_INTERFACE_USBDI_V1;
typedef struct _USB_BUS_INTERFACE_USBDI_V2 USB_BUS_INTERFACE_USBDI_V2;
typedef struct _USB_BUS_INTERFACE_USBDI_V3 USB_BUS_INTERFACE_USBDI_V3;
typedef union _USB_PORT_STATUS_AND_CHANGE USB_PORT_STATUS_AND_CHANGE;
typedef struct _VIDEO_POINTER_CAPABILITIES VIDEO_POINTER_CAPABILITIES;
typedef struct _VIDEO_PORT_AGP_INTERFACE_2 VIDEO_PORT_AGP_INTERFACE_2;
typedef struct _VIDEO_PORT_I2C_INTERFACE_2 VIDEO_PORT_I2C_INTERFACE_2;
typedef struct _VIDEO_PORT_INT10_INTERFACE VIDEO_PORT_INT10_INTERFACE;
typedef struct _VIDEO_PUBLIC_ACCESS_RANGES VIDEO_PUBLIC_ACCESS_RANGES;
enum VIDEO_SYNCHRONIZE_PRIORITY {VpLowPriority = 0x0,VpMediumPriority = 0x1,VpHighPriority = 0x2,};
typedef struct _WHEA_AER_BRIDGE_DESCRIPTOR WHEA_AER_BRIDGE_DESCRIPTOR;
typedef struct _WHEA_PCIXBUS_ERROR_SECTION WHEA_PCIXBUS_ERROR_SECTION;
typedef union _WHEA_PROCESSOR_FAMILY_INFO WHEA_PROCESSOR_FAMILY_INFO;
typedef struct _WSK_CLIENT_LISTEN_DISPATCH WSK_CLIENT_LISTEN_DISPATCH;
typedef struct _WSK_EVENT_CALLBACK_CONTROL WSK_EVENT_CALLBACK_CONTROL;
typedef struct _WWAN_GET_VISIBLE_PROVIDERS WWAN_GET_VISIBLE_PROVIDERS;
typedef struct _WWAN_SET_SIGNAL_INDICATION WWAN_SET_SIGNAL_INDICATION;
typedef struct _WWAN_SET_SMS_CONFIGURATION WWAN_SET_SMS_CONFIGURATION;
typedef struct _WmiMonitorConnectionParams WmiMonitorConnectionParams;
typedef struct _WmiQueryStatisticsInfo_OUT WmiQueryStatisticsInfo_OUT;
typedef struct _WmiSetHDSplitParameters_IN WmiSetHDSplitParameters_IN;
enum _ACPI_GENERIC_ADDRESS_TYPE {AcpiGenericSpaceMemory = 0x0,AcpiGenericSpaceIO = 0x1,AcpiGenericSpacePciConfig = 0x2,AcpiGenericSpaceEC = 0x3,AcpiGenericSpaceSMBus = 0x4,AcpiGenericSpacePcc = 0xA,AcpiGenericSpaceFixedFunction = 0x7F,};
struct _CLASS_PRIVATE_COMMON_DATA;
enum _CLS_LOG_INFORMATION_CLASS {ClfsLogBasicInformation = 0x0,ClfsLogBasicInformationPhysical = 0x1,ClfsLogPhysicalNameInformation = 0x2,ClfsLogStreamIdentifierInformation = 0x3,ClfsLogSystemMarkingInformation = 0x4,ClfsLogPhysicalLsnInformation = 0x5,};
enum _DRIVER_RUNTIME_INIT_FLAGS {DrvRtPoolNxOptIn = 0x1,LastDrvRtFlag = 0x2,};
struct _DXGKARG_COMMITVIDPN_FLAGS {unsigned int PathPowerTransition : 1;unsigned int PathPoweredOff : 1;unsigned int Reserved : 30;};
enum _DXGK_POWER_COMPONENT_TYPE {DXGK_POWER_COMPONENT_ENGINE = 0x0,DXGK_POWER_COMPONENT_MONITOR = 0x1,DXGK_POWER_COMPONENT_MONITOR_REFRESH = 0x2,DXGK_POWER_COMPONENT_OTHER = 0x5,DXGK_POWER_COMPONENT_MAX = 0x6,};
enum _DXGK_QUERYADAPTERINFOTYPE {DXGKQAITYPE_UMDRIVERPRIVATE = 0x0,DXGKQAITYPE_DRIVERCAPS = 0x1,DXGKQAITYPE_QUERYSEGMENT = 0x2,DXGKQAITYPE_ALLOCATIONGROUP = 0x3,DXGKQAITYPE_QUERYSEGMENT2 = 0x4,DXGKQAITYPE_QUERYSEGMENT3 = 0x5,DXGKQAITYPE_NUMPOWERCOMPONENTS = 0x6,DXGKQAITYPE_POWERCOMPONENTINFO = 0x7,DXGKQAITYPE_PREFERREDGPUNODE = 0x8,};
enum _EMULATOR_PORT_ACCESS_TYPE {Uchar = 0x0,Ushort = 0x1,Ulong = 0x2,};
enum _FLT_PREOP_CALLBACK_STATUS {FLT_PREOP_SUCCESS_WITH_CALLBACK = 0x0,FLT_PREOP_SUCCESS_NO_CALLBACK = 0x1,FLT_PREOP_PENDING = 0x2,FLT_PREOP_DISALLOW_FASTIO = 0x3,FLT_PREOP_COMPLETE = 0x4,FLT_PREOP_SYNCHRONIZE = 0x5,};
enum _FLT_SET_CONTEXT_OPERATION {FLT_SET_CONTEXT_REPLACE_IF_EXISTS = 0x0,FLT_SET_CONTEXT_KEEP_IF_EXISTS = 0x1,};
enum _FSRTL_CHANGE_BACKING_TYPE {ChangeDataControlArea = 0x0,ChangeImageControlArea = 0x1,ChangeSharedCacheMap = 0x2,};
enum _HAL_SET_INFORMATION_CLASS {HalProfileSourceInterval = 0x0,HalProfileSourceInterruptHandler = 0x1,HalMcaRegisterDriver = 0x2,HalKernelErrorHandler = 0x3,HalCmcRegisterDriver = 0x4,HalCpeRegisterDriver = 0x5,HalMcaLog = 0x6,HalCmcLog = 0x7,HalCpeLog = 0x8,HalGenerateCmcInterrupt = 0x9,HalProfileSourceTimerHandler = 0xA,HalEnlightenment = 0xB,HalProfileDpgoSourceInterruptHandler = 0xC,HalRegisterSecondaryInterruptInterface = 0xD,HalSetChannelPowerInformation = 0xE,};
enum _HDAUDIO_CODEC_POWER_STATE {PowerCodecUnspecified = 0x0,PowerCodecD0 = 0x1,PowerCodecD1 = 0x2,PowerCodecD2 = 0x3,PowerCodecD3 = 0x4,PowerCodecD3Cold = 0x5,PowerCodecMaximum = 0x6,};
enum _KBUGCHECK_CALLBACK_REASON {KbCallbackInvalid = 0x0,KbCallbackReserved1 = 0x1,KbCallbackSecondaryDumpData = 0x2,KbCallbackDumpIo = 0x3,KbCallbackAddPages = 0x4,KbCallbackSecondaryMultiPartDumpData = 0x5,};
enum _KEY_SET_INFORMATION_CLASS {KeyWriteTimeInformation = 0x0,KeyWow64FlagsInformation = 0x1,KeyControlFlagsInformation = 0x2,KeySetVirtualizationInformation = 0x3,KeySetDebugInformation = 0x4,KeySetHandleTagsInformation = 0x5,MaxKeySetInfoClass = 0x6,};
enum _MINIRDR_BUFSTATE_COMMANDS {MRDRBUFSTCMD__COMMAND_FORCEPURGE0 = 0x0,MRDRBUFSTCMD__1 = 0x1,MRDRBUFSTCMD__2 = 0x2,MRDRBUFSTCMD__3 = 0x3,MRDRBUFSTCMD__4 = 0x4,MRDRBUFSTCMD__5 = 0x5,MRDRBUFSTCMD__6 = 0x6,MRDRBUFSTCMD__7 = 0x7,MRDRBUFSTCMD__8 = 0x8,MRDRBUFSTCMD__9 = 0x9,MRDRBUFSTCMD__10 = 0xA,MRDRBUFSTCMD__11 = 0xB,MRDRBUFSTCMD__12 = 0xC,MRDRBUFSTCMD__13 = 0xD,MRDRBUFSTCMD__14 = 0xE,MRDRBUFSTCMD__15 = 0xF,MRDRBUFSTCMD__16 = 0x10,MRDRBUFSTCMD__17 = 0x11,MRDRBUFSTCMD__18 = 0x12,MRDRBUFSTCMD__19 = 0x13,MRDRBUFSTCMD__20 = 0x14,MRDRBUFSTCMD__21 = 0x15,MRDRBUFSTCMD__22 = 0x16,MRDRBUFSTCMD__23 = 0x17,MRDRBUFSTCMD__24 = 0x18,MRDRBUFSTCMD__25 = 0x19,MRDRBUFSTCMD__26 = 0x1A,MRDRBUFSTCMD__27 = 0x1B,MRDRBUFSTCMD__28 = 0x1C,MRDRBUFSTCMD__29 = 0x1D,MRDRBUFSTCMD__30 = 0x1E,MRDRBUFSTCMD__31 = 0x1F,MRDRBUFSTCMD_MAXXX = 0x20,};
enum _MOUNTMGR_AUTO_MOUNT_STATE {Disabled = 0x0,Enabled = 0x1,};
enum _NDIS_FDDI_ATTACHMENT_TYPE {NdisFddiTypeIsolated = 0x1,NdisFddiTypeLocalA = 0x2,NdisFddiTypeLocalB = 0x3,NdisFddiTypeLocalAB = 0x4,NdisFddiTypeLocalS = 0x5,NdisFddiTypeWrapA = 0x6,NdisFddiTypeWrapB = 0x7,NdisFddiTypeWrapAB = 0x8,NdisFddiTypeWrapS = 0x9,NdisFddiTypeCWrapA = 0xA,NdisFddiTypeCWrapB = 0xB,NdisFddiTypeCWrapS = 0xC,NdisFddiTypeThrough = 0xD,};
enum _NDIS_INTERRUPT_MODERATION {NdisInterruptModerationUnknown = 0x0,NdisInterruptModerationNotSupported = 0x1,NdisInterruptModerationEnabled = 0x2,NdisInterruptModerationDisabled = 0x3,};
enum _NDIS_NET_BUFFER_LIST_INFO {TcpIpChecksumNetBufferListInfo = 0x0,TcpOffloadBytesTransferred = 0x0,IPsecOffloadV1NetBufferListInfo = 0x1,IPsecOffloadV2NetBufferListInfo = 0x1,TcpLargeSendNetBufferListInfo = 0x2,TcpReceiveNoPush = 0x2,ClassificationHandleNetBufferListInfo = 0x3,Ieee8021QNetBufferListInfo = 0x4,NetBufferListCancelId = 0x5,MediaSpecificInformation = 0x6,NetBufferListFrameType = 0x7,NetBufferListProtocolId = 0x7,NetBufferListHashValue = 0x8,NetBufferListHashInfo = 0x9,WfpNetBufferListInfo = 0xA,IPsecOffloadV2TunnelNetBufferListInfo = 0xB,IPsecOffloadV2HeaderNetBufferListInfo = 0xC,NetBufferListCorrelationId = 0xD,NetBufferListFilteringInfo = 0xE,MediaSpecificInformationEx = 0xF,NblOriginalInterfaceIfIndex = 0x10,NblReAuthWfpFlowContext = 0x10,TcpReceiveBytesTransferred = 0x11,MaxNetBufferListInfo = 0x12,};
enum _NET_IF_MEDIA_DUPLEX_STATE {MediaDuplexStateUnknown = 0x0,MediaDuplexStateHalf = 0x1,MediaDuplexStateFull = 0x2,};
enum _PROCESS_MITIGATION_POLICY {ProcessDEPPolicy = 0x0,ProcessASLRPolicy = 0x1,ProcessReserved1MitigationPolicy = 0x2,ProcessStrictHandleCheckPolicy = 0x3,ProcessSystemCallDisablePolicy = 0x4,ProcessMitigationOptionsMask = 0x5,ProcessExtensionPointDisablePolicy = 0x6,MaxProcessMitigationPolicy = 0x7,};
enum _RX_NAME_CONJURING_METHODS {VNetRoot_As_Prefix = 0x0,VNetRoot_As_UNC_Name = 0x1,VNetRoot_As_DriveLetter = 0x2,};
enum _SCO_RETRANSMISSION_EFFORT {SCO_RETRANSMISSION_NONE = 0x0,SCO_RETRANSMISSION_MIN1_POWER = 0x1,SCO_RETRANSMISSION_MIN1_QUALITY = 0x2,SCO_RETRANSMISSION_DONT_CARE = 0xFF,};
enum _SCSI_ADAPTER_CONTROL_TYPE {ScsiQuerySupportedControlTypes = 0x0,ScsiStopAdapter = 0x1,ScsiRestartAdapter = 0x2,ScsiSetBootConfig = 0x3,ScsiSetRunningConfig = 0x4,ScsiAdapterControlMax = 0x5,MakeAdapterControlTypeSizeOfUlong = 0xFFFFFFFF,};
enum _SCSI_UC_DEVICE_USAGE_TYPE {ScsiDeviceUsageTypeUndefined = 0x0,ScsiDeviceUsageTypePaging = 0x1,ScsiDeviceUsageTypeHibernation = 0x2,ScsiDeviceUsageTypeDumpFile = 0x3,ScsiDeviceUsageTypeBoot = 0x4,};
struct _SEC_WINNT_AUTH_IDENTITY_W {unsigned short *User;unsigned int UserLength;unsigned short *Domain;unsigned int DomainLength;unsigned short *Password;unsigned int PasswordLength;unsigned int Flags;};
enum _STORAGE_TRACE_NOTIFY_TYPE {InitTracing = 0x3E8,CleanupTracing = 0x3E9,TraceMessage = 0x7D0,InitGlobalLogger = 0x7D1,WMIRegistrationControl = 0x7D2,WmiQueryTraceInfo = 0x7D3,InitUnicodeString = 0x7D4,TraceDebugPrint = 0x7D5,AllocDiagEvent = 0xBB8,FreeDiagEvent = 0xBB9,LogDiagEvent = 0xBBA,WriteErrorLogRecord = 0xFA0,AllocErrorLog = 0xFA1,FreeErrorLog = 0xFA2,};
struct _SecPkgContext_StreamSizes {unsigned int cbHeader;unsigned int cbTrailer;unsigned int cbMaximumMessage;unsigned int cBuffers;unsigned int cbBlockSize;};
enum _WWAN_PACKET_SERVICE_STATE {WwanPacketServiceStateUnknown = 0x0,WwanPacketServiceStateAttaching = 0x1,WwanPacketServiceStateAttached = 0x2,WwanPacketServiceStateDetaching = 0x3,WwanPacketServiceStateDetached = 0x4,};
typedef struct _ACPI_EVAL_INPUT_BUFFER_EX ACPI_EVAL_INPUT_BUFFER_EX;
typedef struct _ATM_TRAFFIC_DESCRIPTOR_IE ATM_TRAFFIC_DESCRIPTOR_IE;
typedef struct _AddConnectionToSession_IN AddConnectionToSession_IN;
typedef struct _BDA_ETHERNET_ADDRESS_LIST BDA_ETHERNET_ADDRESS_LIST;
typedef struct _BDA_ISDBCAS_REQUESTHEADER BDA_ISDBCAS_REQUESTHEADER;
typedef struct _BDA_USERACTIVITY_INTERVAL BDA_USERACTIVITY_INTERVAL;
typedef struct _BOOTDISK_INFORMATION_LITE BOOTDISK_INFORMATION_LITE;
typedef struct _BTHDDI_SDP_NODE_INTERFACE BTHDDI_SDP_NODE_INTERFACE;
enum BinaryConvolutionCodeRate {BDA_BCC_RATE_NOT_SET = 0xFFFFFFFF,BDA_BCC_RATE_NOT_DEFINED = 0x0,BDA_BCC_RATE_1_2 = 0x1,BDA_BCC_RATE_2_3 = 0x2,BDA_BCC_RATE_3_4 = 0x3,BDA_BCC_RATE_3_5 = 0x4,BDA_BCC_RATE_4_5 = 0x5,BDA_BCC_RATE_5_6 = 0x6,BDA_BCC_RATE_5_11 = 0x7,BDA_BCC_RATE_7_8 = 0x8,BDA_BCC_RATE_1_4 = 0x9,BDA_BCC_RATE_1_3 = 0xA,BDA_BCC_RATE_2_5 = 0xB,BDA_BCC_RATE_6_7 = 0xC,BDA_BCC_RATE_8_9 = 0xD,BDA_BCC_RATE_9_10 = 0xE,BDA_BCC_RATE_MAX = 0xF,};
typedef struct _CDROM_PERFORMANCE_REQUEST CDROM_PERFORMANCE_REQUEST;
typedef struct _CDROM_TOC_ATIP_DATA_BLOCK CDROM_TOC_ATIP_DATA_BLOCK;
typedef struct _CDROM_WRITE_SPEED_REQUEST CDROM_WRITE_SPEED_REQUEST;
typedef struct _CHANGER_ELEMENT_STATUS_EX CHANGER_ELEMENT_STATUS_EX;
typedef struct _CHANNEL_CONFIG_PARAMETERS CHANNEL_CONFIG_PARAMETERS;
typedef struct _CLASS_PRIVATE_COMMON_DATA CLASS_PRIVATE_COMMON_DATA;
typedef struct _CLFS_LOG_NAME_INFORMATION CLFS_LOG_NAME_INFORMATION;
typedef struct _CLS_CONTAINER_INFORMATION CLS_CONTAINER_INFORMATION;
typedef struct _CONFIGURATION_INFORMATION CONFIGURATION_INFORMATION;
typedef struct _D3DDDIARG_CREATERESOURCE2 D3DDDIARG_CREATERESOURCE2;
typedef struct _D3DDDI_CREATECONTEXTFLAGS D3DDDI_CREATECONTEXTFLAGS;
typedef struct _D3DDDI_OPENALLOCATIONINFO D3DDDI_OPENALLOCATIONINFO;
typedef struct _D3DKMDT_SHADOWSURFACEDATA D3DKMDT_SHADOWSURFACEDATA;
typedef struct _D3DKMDT_VIDEO_SIGNAL_INFO D3DKMDT_VIDEO_SIGNAL_INFO;
typedef struct _D3DKMDT_VIDPN_SOURCE_MODE D3DKMDT_VIDPN_SOURCE_MODE;
typedef struct _D3DKMDT_VIDPN_TARGET_MODE D3DKMDT_VIDPN_TARGET_MODE;
typedef struct _D3DKM_TRANSPARENTBLTFLAGS D3DKM_TRANSPARENTBLTFLAGS;
typedef struct _CBA7ED455CF404F3CA70D8CDC7B47AD9 DEBUG_MEMORY_REQUIREMENTS;
typedef struct _DEVICEDUMP_SECTION_HEADER DEVICEDUMP_SECTION_HEADER;
typedef struct _DISK_COPY_DATA_PARAMETERS DISK_COPY_DATA_PARAMETERS;
typedef struct _DOT11_ASSOCIATION_INFO_EX DOT11_ASSOCIATION_INFO_EX;
typedef struct _DOT11_DEFAULT_WEP_OFFLOAD DOT11_DEFAULT_WEP_OFFLOAD;
typedef struct _DOT11_FRAGMENT_DESCRIPTOR DOT11_FRAGMENT_DESCRIPTOR;
typedef struct _DOT11_OPTIONAL_CAPABILITY DOT11_OPTIONAL_CAPABILITY;
typedef struct _DOT11_SEND_EXTENSION_INFO DOT11_SEND_EXTENSION_INFO;
typedef struct _DOT11_SUPPORTED_PHY_TYPES DOT11_SUPPORTED_PHY_TYPES;
typedef struct _DXGKARG_BUILDPAGINGBUFFER DXGKARG_BUILDPAGINGBUFFER;
typedef struct _DXGKARG_COMMITVIDPN_FLAGS DXGKARG_COMMITVIDPN_FLAGS;
typedef struct _DXGKARG_CREATEALLOCATION2 DXGKARG_CREATEALLOCATION2;
typedef struct _DXGKARG_DESCRIBEPAGETABLE DXGKARG_DESCRIBEPAGETABLE;
typedef struct _DXGKARG_DESTROYALLOCATION DXGKARG_DESTROYALLOCATION;
typedef struct _DXGKARG_MOVEPAGEDIRECTORY DXGKARG_MOVEPAGEDIRECTORY;
typedef struct _DXGKARG_QUERYCURRENTFENCE DXGKARG_QUERYCURRENTFENCE;
typedef struct _DXGKARG_QUERYENGINESTATUS DXGKARG_QUERYENGINESTATUS;
typedef struct _DXGKCB_GETHANDLEDATAFLAGS DXGKCB_GETHANDLEDATAFLAGS;
typedef struct _DXGKMDT_OPM_RANDOM_NUMBER DXGKMDT_OPM_RANDOM_NUMBER;
typedef struct _DXGK_ALLOCATIONINFOFLAGS2 DXGK_ALLOCATIONINFOFLAGS2;
typedef struct _DXGK_ALLOCATIONUSAGEINFO1 DXGK_ALLOCATIONUSAGEINFO1;
typedef struct _AAB530BE51B826E42B40424AF03CA80A DXGK_BRIGHTNESS_INTERFACE;
typedef struct _DXGK_MONITOR_INTERFACE_V2 DXGK_MONITOR_INTERFACE_V2;
typedef struct _EISA_MEMORY_CONFIGURATION EISA_MEMORY_CONFIGURATION;
typedef struct _FILE_BOTH_DIR_INFORMATION FILE_BOTH_DIR_INFORMATION;
typedef struct _FILE_FS_LABEL_INFORMATION FILE_FS_LABEL_INFORMATION;
typedef struct _FILE_FULL_DIR_INFORMATION FILE_FULL_DIR_INFORMATION;
typedef struct _FILE_INTERNAL_INFORMATION FILE_INTERNAL_INFORMATION;
typedef struct _FILE_OBJECTID_INFORMATION FILE_OBJECTID_INFORMATION;
typedef struct _FILE_PIPE_WAIT_FOR_BUFFER FILE_PIPE_WAIT_FOR_BUFFER;
typedef struct _FILE_POSITION_INFORMATION FILE_POSITION_INFORMATION;
typedef struct _FILE_QUERY_SPARING_BUFFER FILE_QUERY_SPARING_BUFFER;
typedef struct _FILE_STANDARD_INFORMATION FILE_STANDARD_INFORMATION;
typedef struct _FILE_TRACKING_INFORMATION FILE_TRACKING_INFORMATION;
typedef struct _FLT_FILE_NAME_INFORMATION FLT_FILE_NAME_INFORMATION;
typedef struct _FSCTL_OFFLOAD_READ_OUTPUT FSCTL_OFFLOAD_READ_OUTPUT;
typedef struct _FSCTL_OFFLOAD_WRITE_INPUT FSCTL_OFFLOAD_WRITE_INPUT;
typedef struct _FSRTL_ADVANCED_FCB_HEADER FSRTL_ADVANCED_FCB_HEADER;
typedef struct _FSVIDEO_COPY_FRAME_BUFFER FSVIDEO_COPY_FRAME_BUFFER;
typedef struct _GET_ALL_ERROR_SOURCES_OUT GET_ALL_ERROR_SOURCES_OUT;
typedef struct _GET_ERROR_SOURCE_INFO_OUT GET_ERROR_SOURCE_INFO_OUT;
typedef struct _GP_LOG_GENERAL_STATISTICS GP_LOG_GENERAL_STATISTICS;
typedef struct _GetPersistentBinding2_OUT GetPersistentBinding2_OUT;
typedef struct _GetPortAttributesByWWN_IN GetPortAttributesByWWN_IN;
typedef struct _HDAUDIO_BUFFER_DESCRIPTOR HDAUDIO_BUFFER_DESCRIPTOR;
typedef struct _HDAUDIO_BUS_INTERFACE_BDL HDAUDIO_BUS_INTERFACE_BDL;
typedef struct _HIDP_LINK_COLLECTION_NODE HIDP_LINK_COLLECTION_NODE;
typedef struct _IDE_CHANNEL_CONFIGURATION IDE_CHANNEL_CONFIGURATION;
typedef struct _ImageArchitectureHeader IMAGE_ARCHITECTURE_HEADER;
typedef struct _IMAGE_BOUND_FORWARDER_REF IMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER IMAGE_COFF_SYMBOLS_HEADER;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER IMAGE_ROM_OPTIONAL_HEADER;
struct IMiniportWaveCyclicStream {struct IMiniportWaveCyclicStreamVtbl *lpVtbl;};
typedef struct _INJECT_HARDWARE_ERROR_OUT INJECT_HARDWARE_ERROR_OUT;
typedef struct _INSTANCE_FULL_INFORMATION INSTANCE_FULL_INFORMATION;
typedef struct _INTERNAL_I8042_HOOK_MOUSE INTERNAL_I8042_HOOK_MOUSE;
typedef struct _IO_INTERRUPT_MESSAGE_INFO IO_INTERRUPT_MESSAGE_INFO;
typedef struct _ISCSI_RedirectSessionInfo ISCSI_RedirectSessionInfo;
typedef struct _KBUGCHECK_CALLBACK_RECORD KBUGCHECK_CALLBACK_RECORD;
typedef struct _KDPC_WATCHDOG_INFORMATION KDPC_WATCHDOG_INFORMATION;
typedef struct _tagKSAUDIOENGINE_VOLUMELEVEL KSAUDIOENGINE_VOLUMELEVEL;
typedef struct _097132A3DAC724C77C2462A4DC4AA652 KSDATAFORMAT_WAVEFORMATEX;
typedef struct _8FE9905039884FA12A33AF170E497D82 KSDS3D_BUFFER_CONE_ANGLES;
typedef struct _KSM_BDA_TUNER_TUNEREQUEST KSM_BDA_TUNER_TUNEREQUEST;
typedef struct _61992E1E6DA7B91ECC7FA4A74B115A04 KSPROPERTY_MEDIAAVAILABLE;
typedef struct _E15D7B7CA61FF43DF93005DFD376A388 KSPROPERTY_TUNER_STATUS_S;
typedef struct _AAD79452FC68247846A5E3B058A03BB4 KSPROPERTY_TVAUDIO_CAPS_S;
typedef struct _764676431BC78EE50306C71955FB365D KSPROPERTY_VIDEODECODER_S;
typedef struct _9A6BD7645A973A5ADF34F154404EC940 KSPROPERTY_VIDEOENCODER_S;
typedef struct _9A6BD7645A973A5ADF34F154404EC940 KSPROPERTY_VIDEOPROCAMP_S;
typedef struct _717F7A89FCE81E507F2DE95312881168 KSRTAUDIO_BUFFER_PROPERTY;
typedef struct _816E3560EF21380C948191659F672DF0 KSWAVE_INPUT_CAPABILITIES;
typedef struct tagKS_DATAFORMAT_MPEG2TS_AVC KS_DATAFORMAT_MPEG2TS_AVC;
typedef struct _KS_DVDCOPY_SET_COPY_STATE KS_DVDCOPY_SET_COPY_STATE;
typedef struct _98D21277AAAA3049664E864EBED0B60A KS_FRAMING_RANGE_WEIGHTED;
typedef struct _KernelThermalPolicyChange KernelThermalPolicyChange;
typedef struct _LINK_TRACKING_INFORMATION LINK_TRACKING_INFORMATION;
typedef struct tag_video_stream_init_parms *LPVIDEO_STREAM_INIT_PARMS;
enum MACRO_AllowPerformanceHit {AllowPerformanceHit = 1,};
enum MACRO_BUS_RESET_BEGINNING {BUS_RESET_BEGINNING = 0x1,BUS_RESET_FINISHED = 0x2,BUS_RESET_LOCAL_NODE_IS_ROOT = 0x4,BUS_RESET_LOCAL_NODE_IS_ISOCH_MANAGER = 0x8,BUS_RESET_LOCAL_NODE_IS_BUS_MANAGER = 0x10,BUS_RESET_SELFID_ENUMERATION_ERROR = 0x20,BUS_RESET_STORM_ERROR = 0x40,BUS_RESET_ABSENT_ON_POWER_UP = 0x80,BUS_RESET_UNOPTIMIZED_TOPOLOGY = 0x100,};
enum MACRO_COHERENCY_EXCEPTION {DATA_COHERENCY_EXCEPTION = 0x55,INSTRUCTION_COHERENCY_EXCEPTION = 0x56,};
enum MACRO_CO_E_THREADINGMODEL {CO_E_THREADINGMODEL_CHANGED = 0x8004E028,CO_E_NOIISINTRINSICS = 0x8004E029,CO_E_NOCOOKIES = 0x8004E02A,CO_E_DBERROR = 0x8004E02B,CO_E_NOTPOOLED = 0x8004E02C,CO_E_NOTCONSTRUCTED = 0x8004E02D,CO_E_NOSYNCHRONIZATION = 0x8004E02E,CO_E_ISOLEVELMISMATCH = 0x8004E02F,CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED = 0x8004E030,CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED = 0x8004E031,};
enum MACRO_CreateVirtualPortEx {CreateVirtualPortEx = 3,};
enum MACRO_DOT11_MANUFACTURING {DOT11_MANUFACTURING_TEST_REVISION_1 = 1,DOT11_MANUFACTURING_CALLBACK_REVISION_1 = 1,};
enum MACRO_DOT11_WFD_SECONDARY {DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST_REVISION_1 = 1,};
enum MACRO_DRIVER_VERIFIER_DMA {DRIVER_VERIFIER_DMA_VIOLATION = 0xE6,};
enum MACRO_DeviceDsmActionFlag {DeviceDsmActionFlag_NonDestructive = 0x80000000,};
enum MACRO_FILE_DEVICE_IRCLASS {FILE_DEVICE_IRCLASS = 0xF60,};
enum MACRO_GetFC4Statistics_IN {GetFC4Statistics_IN_PortWWN_ID = 1,GetFC4Statistics_IN_FC4Type_ID = 2,GetFC4Statistics_OUT_HBAStatus_ID = 3,GetFC4Statistics_OUT_FC4Statistics_ID = 4,};
enum MACRO_GetFCPStatistics_IN {GetFCPStatistics_IN_ScsiId_ID = 1,GetFCPStatistics_OUT_HBAStatus_ID = 2,GetFCPStatistics_OUT_FC4Statistics_ID = 3,};
enum MACRO_GetFcpTargetMapping {GetFcpTargetMapping = 1,};
enum MACRO_HBAFCPBindingEntry2 {HBAFCPBindingEntry2_Type_ID = 1,HBAFCPBindingEntry2_FCPId_ID = 2,HBAFCPBindingEntry2_Luid_ID = 3,HBAFCPBindingEntry2_ScsiId_ID = 4,};
enum MACRO_ISCSI_HBA_PRESHARED {ISCSI_HBA_PRESHARED_KEY_CACHE = 0x1,ISCSI_HBA_ISCSI_AUTHENTICATION_CACHE = 0x2,ISCSI_HBA_IPSEC_TUNNEL_MODE = 0x4,ISCSI_HBA_CHAP_VIA_RADIUS = 0x8,ISCSI_HBA_ISNS_DISCOVERY = 0x10,ISCSI_HBA_SLP_DISCOVERY = 0x20,};
enum MACRO_KERNEL_STACK_LOCKED {KERNEL_STACK_LOCKED_AT_EXIT = 0x94,};
enum MACRO_KSFILTER_DESCRIPTOR {KSFILTER_DESCRIPTOR_VERSION = 4294967295,KSFILTER_FLAG_DISPATCH_LEVEL_PROCESSING = 1,KSFILTER_FLAG_CRITICAL_PROCESSING = 2,KSFILTER_FLAG_HYPERCRITICAL_PROCESSING = 4,KSFILTER_FLAG_RECEIVE_ZERO_LENGTH_SAMPLES = 8,KSFILTER_FLAG_DENY_USERMODE_ACCESS = -2147483648,};
enum MACRO_LINETRANSLATEOPTION {LINETRANSLATEOPTION_CARDOVERRIDE = 0x1,};
enum MACRO_LINETRANSLATERESULT {LINETRANSLATERESULT_CANONICAL = 0x1,LINETRANSLATERESULT_INTERNATIONAL = 0x2,LINETRANSLATERESULT_LONGDISTANCE = 0x4,LINETRANSLATERESULT_LOCAL = 0x8,LINETRANSLATERESULT_INTOLLLIST = 0x10,LINETRANSLATERESULT_NOTINTOLLLIST = 0x20,LINETRANSLATERESULT_DIALBILLING = 0x40,LINETRANSLATERESULT_DIALQUIET = 0x80,LINETRANSLATERESULT_DIALDIALTONE = 0x100,LINETRANSLATERESULT_DIALPROMPT = 0x200,};
enum MACRO_LogoutFromTarget_IN {LogoutFromTarget_IN_UniqueSessionId_ID = 1,LogoutFromTarget_OUT_Status_ID = 2,};
enum MACRO_MCA_MEMORYHIERARCHY {MCA_MEMORYHIERARCHY_ERROR = 0xC0050078,MCA_TLB_ERROR = 0xC0050079,MCA_BUS_ERROR = 0xC005007A,MCA_BUS_TIMEOUT_ERROR = 0xC005007B,MCA_INTERNALTIMER_ERROR = 0xC005007C,MCA_MICROCODE_ROM_PARITY_ERROR = 0xC005007E,MCA_EXTERNAL_ERROR = 0xC005007F,MCA_FRC_ERROR = 0xC0050080,};
enum MACRO_MONITOR_PLUG_NOTIFY {REGISTER_MONITOR_PLUG_NOTIFY = 0x1,DEREGISTER_MONITOR_PLUG_NOTIFY = 0x2,};
enum MACRO_MOUNTDEVCONTROLTYPE {MOUNTDEVCONTROLTYPE = 0x4D,};
enum MACRO_MOUNTMGRCONTROLTYPE {MOUNTMGRCONTROLTYPE = 0x6D,};
enum MACRO_MdlMappingNoExecute {MdlMappingNoExecute = 0x40000000,};
enum MACRO_OID_DOT11_AVAILABLE {OID_DOT11_AVAILABLE_FREQUENCY_LIST = 0xE030104,};
enum MACRO_OID_DOT11_ENUM_PEER {OID_DOT11_ENUM_PEER_INFO = 0xE030108,};
enum MACRO_OID_DOT11_SUPPORTED {OID_DOT11_SUPPORTED_UNICAST_ALGORITHM_PAIR = 234946950,};
enum MACRO_OID_DOT11_WFD_FLUSH {OID_DOT11_WFD_FLUSH_DEVICE_LIST = 0xE050109,OID_DOT11_WFD_SEND_GO_NEGOTIATION_REQUEST = 0xE05010A,};
enum MACRO_OID_DOT11_WFD_GROUP {OID_DOT11_WFD_GROUP_OWNER_CAPABILITY = 0xE050102,};
enum MACRO_PROCESSOR_IDLESTATE {PROCESSOR_IDLESTATE_POLICY_COUNT = 0x3,};
enum MACRO_PROCESSOR_LOCAL_GIC {PROCESSOR_LOCAL_GIC = 11,};
enum MACRO_RemoveVirtualPortEx {RemoveVirtualPortEx = 5,};
enum MACRO_RemoveiSNSServer_IN {RemoveiSNSServer_IN_iSNSServerName_ID = 1,RemoveiSNSServer_OUT_Status_ID = 2,};
enum MACRO_SECURITY_DESCRIPTOR {SECURITY_DESCRIPTOR_REVISION1 = 1,};
enum MACRO_SYSTEM_AUDIT_OBJECT {SYSTEM_AUDIT_OBJECT_ACE_TYPE = 0x7,SYSTEM_ALARM_OBJECT_ACE_TYPE = 0x8,};
enum MACRO_ScsiReadCapacity_IN {ScsiReadCapacity_IN_UniqueSessionId_ID = 1,ScsiReadCapacity_IN_Lun_ID = 2,ScsiReadCapacity_OUT_Status_ID = 3,};
enum MACRO_SetCHAPSharedSecret {SetCHAPSharedSecret = 71,};
enum MACRO_SetGenerationalGuid {SetGenerationalGuid = 6,};
enum MACRO_TRUST_E_NOSIGNATURE {TRUST_E_NOSIGNATURE = 0x800B0100,};
enum MACRO_WRITEBACKINVALIDATE {WRITEBACKINVALIDATE_WORKS_BIT = 0,WRITEBACKINVALIDATE_WORKS = 1,WRITEBACKINVALIDATE_DOESNT_INVALIDATE_BIT = 1,WRITEBACKINVALIDATE_DOESNT_INVALIDATE = 2,};
enum MACRO_WheaCommitPolicyRtn {WheaCommitPolicyRtn = 4,};
enum MACRO_WheaGetAllPolicyRtn {WheaGetAllPolicyRtn = 1,};
enum MACRO_WmiSetALSBrightness {WmiSetALSBrightness = 4,};
enum MACRO_WmiSetBrightness_IN {WmiSetBrightness_IN_Timeout_ID = 1,WmiSetBrightness_IN_Brightness_ID = 2,};
typedef struct mediaspace_adpcmwaveformat_tag MEDIASPACEADPCMWAVEFORMAT;
typedef struct _MF_VARYING_RESOURCE_ENTRY MF_VARYING_RESOURCE_ENTRY;
typedef struct _MODE_ELEMENT_ADDRESS_PAGE MODE_ELEMENT_ADDRESS_PAGE;
typedef struct _MODE_PARM_READ_WRITE MODE_PARM_READ_WRITE_DATA;
typedef struct _MOUNTMGR_QUERY_AUTO_MOUNT MOUNTMGR_QUERY_AUTO_MOUNT;
typedef struct _MPIO_PASS_THROUGH_PATH_EX MPIO_PASS_THROUGH_PATH_EX;
typedef struct _MRX_CREATENETROOT_CONTEXT MRX_CREATENETROOT_CONTEXT;
typedef struct _MRX_SRVCALLDOWN_STRUCTURE MRX_SRVCALLDOWN_STRUCTURE;
typedef struct _MSNdis_80211_Disassociate MSNdis_80211_Disassociate;
typedef struct _MSNdis_80211_RTSThreshold MSNdis_80211_RTSThreshold;
typedef struct _MSNdis_AtmTransmitCellsOk MSNdis_AtmTransmitCellsOk;
typedef struct _MSNdis_CoMinimumLinkSpeed MSNdis_CoMinimumLinkSpeed;
typedef struct _MSNdis_CoReceivePduErrors MSNdis_CoReceivePduErrors;
typedef struct _MSNdis_EnumerateAdapterEx MSNdis_EnumerateAdapterEx;
typedef struct _MSNdis_EthernetMacOptions MSNdis_EthernetMacOptions;
typedef struct _MSNdis_FddiAttachmentType MSNdis_FddiAttachmentType;
typedef struct _MSNdis_MaximumSendPackets MSNdis_MaximumSendPackets;
typedef struct _MSNdis_MediaConnectStatus MSNdis_MediaConnectStatus;
typedef struct _MSNdis_NetworkDirectState MSNdis_NetworkDirectState;
typedef struct _MSNdis_PMAdminConfigParam MSNdis_PMAdminConfigParam;
typedef struct _MSNdis_PMAdminConfigState MSNdis_PMAdminConfigState;
typedef struct _MSNdis_PhysicalMediumType MSNdis_PhysicalMediumType;
typedef struct _MSNdis_PortAuthParameters MSNdis_PortAuthParameters;
typedef struct _MSNdis_ReceiveBufferSpace MSNdis_ReceiveBufferSpace;
typedef struct _MSNdis_StatusProtocolBind MSNdis_StatusProtocolBind;
typedef struct _MSV1_0_ENUMUSERS_RESPONSE MSV1_0_ENUMUSERS_RESPONSE;
typedef struct _MSV1_0_LM20_LOGON_PROFILE MSV1_0_LM20_LOGON_PROFILE;
typedef struct _MSiSCSI_BootConfiguration MSiSCSI_BootConfiguration;
typedef struct _MSiSCSI_SessionStatistics MSiSCSI_SessionStatistics;
typedef struct _NDIS_802_11_BSSID_LIST_EX NDIS_802_11_BSSID_LIST_EX;
typedef struct _NDIS_802_11_CONFIGURATION NDIS_802_11_CONFIGURATION;
typedef struct _NDIS_CONFIGURATION_OBJECT NDIS_CONFIGURATION_OBJECT;
typedef struct _NDIS_PORT_CHARACTERISTICS NDIS_PORT_CHARACTERISTICS;
typedef struct _NDIS_TAPI_GET_CALL_STATUS NDIS_TAPI_GET_CALL_STATUS;
typedef struct _NDIS_TAPI_SET_CALL_PARAMS NDIS_TAPI_SET_CALL_PARAMS;
typedef struct _NDIS_WAN_CO_GET_COMP_INFO NDIS_WAN_CO_GET_COMP_INFO;
typedef struct _NDIS_WAN_CO_GET_LINK_INFO NDIS_WAN_CO_GET_LINK_INFO;
typedef struct _NDIS_WAN_CO_SET_COMP_INFO NDIS_WAN_CO_SET_COMP_INFO;
typedef struct _NDIS_WAN_CO_SET_LINK_INFO NDIS_WAN_CO_SET_LINK_INFO;
typedef struct _NDIS_WMI_IPSEC_OFFLOAD_V1 NDIS_WMI_IPSEC_OFFLOAD_V1;
typedef struct _NDIS_WWAN_SET_RADIO_STATE NDIS_WWAN_SET_RADIO_STATE;
typedef struct _NDIS_WWAN_SMS_SEND_STATUS NDIS_WWAN_SMS_SEND_STATUS;
typedef struct _NDIS_WWAN_VENDOR_SPECIFIC NDIS_WWAN_VENDOR_SPECIFIC;
typedef struct nd_neighbor_advert ND_NEIGHBOR_ADVERT_HEADER;
typedef struct _NOTIFICATION_MEDIA_STATUS NOTIFICATION_MEDIA_STATUS;
typedef struct _NOTIFICATION_POWER_STATUS NOTIFICATION_POWER_STATUS;
typedef struct _489123E2AD8EAE95455F5E3AE4E05067 NOTIFY_USER_POWER_SETTING;
typedef struct _NPI_REGISTRATION_INSTANCE NPI_REGISTRATION_INSTANCE;
typedef struct _4424FFEAB304DE779362E708A77EF4CB NTFS_EXTENDED_VOLUME_DATA;
typedef struct _OBJECT_HANDLE_INFORMATION OBJECT_HANDLE_INFORMATION;
typedef struct _OB_OPERATION_REGISTRATION OB_OPERATION_REGISTRATION;
typedef struct _5D7BCB0D4B3608CEC2ABF81A20A24C68 *PACPI_INTERFACE_STANDARD2;
typedef struct _PAGE_PRIORITY_INFORMATION PAGE_PRIORITY_INFORMATION;
typedef struct _ALLOW_PERFORMANCE_HIT_IN *PALLOW_PERFORMANCE_HIT_IN;
typedef struct _PARALLEL_PORT_INFORMATION PARALLEL_PORT_INFORMATION;
typedef struct _PARCLASS_NEGOTIATION_MASK PARCLASS_NEGOTIATION_MASK;
typedef struct _PARPORT_REMOVAL_RELATIONS PARPORT_REMOVAL_RELATIONS;
typedef struct _PARTITION_INFORMATION_GPT PARTITION_INFORMATION_GPT;
typedef struct _PARTITION_INFORMATION_MBR PARTITION_INFORMATION_MBR;
typedef struct _ATM_SERVICE_ADDRESS_LIST *PATM_SERVICE_ADDRESS_LIST;
typedef struct _AUX_MODULE_EXTENDED_INFO *PAUX_MODULE_EXTENDED_INFO;
typedef struct _AVC_STREAM_REQUEST_BLOCK *PAVC_STREAM_REQUEST_BLOCK;
typedef struct _BDA_CAS_REQUESTTUNERDATA *PBDA_CAS_REQUESTTUNERDATA;
typedef struct _BDA_ISDBCAS_RESPONSEDATA *PBDA_ISDBCAS_RESPONSEDATA;
typedef struct _CACHE_UNINITIALIZE_EVENT *PCACHE_UNINITIALIZE_EVENT;
typedef struct _PCC_GENREIC_SHARED_REGION PCC_GENERIC_SHARED_REGION;
typedef struct _CDROM_PERFORMANCE_HEADER *PCDROM_PERFORMANCE_HEADER;
typedef union _PCI_EXPRESS_SRIOV_CONTROL PCI_EXPRESS_SRIOV_CONTROL;
typedef struct _CLS_IO_STATISTICS_HEADER *PCLS_IO_STATISTICS_HEADER;
typedef struct _PCMCIA_INTERFACE_STANDARD PCMCIA_INTERFACE_STANDARD;
typedef struct _PCMCIA_SOCKET_INFORMATION PCMCIA_SOCKET_INFORMATION;
typedef struct _CM_COMPONENT_INFORMATION *PCM_COMPONENT_INFORMATION;
typedef struct _CM_EISA_SLOT_INFORMATION *PCM_EISA_SLOT_INFORMATION;
typedef struct _CM_INT13_DRIVE_PARAMETER *PCM_INT13_DRIVE_PARAMETER;
typedef struct _CM_PARTIAL_RESOURCE_LIST *PCM_PARTIAL_RESOURCE_LIST;
typedef struct _CO_TAPI_CALL_DIAGNOSTICS *PCO_TAPI_CALL_DIAGNOSTICS;
typedef struct _CSV_QUERY_REDIRECT_STATE *PCSV_QUERY_REDIRECT_STATE;
typedef struct _D3COLD_SUPPORT_INTERFACE *PD3COLD_SUPPORT_INTERFACE;
typedef struct _DEBUG_DEVICE_INFORMATION *PDEBUG_DEVICE_INFORMATION;
typedef struct _DEBUG_TRACE_CONTROLPOINT *PDEBUG_TRACE_CONTROLPOINT;
typedef struct _DECRYPTION_STATUS_BUFFER *PDECRYPTION_STATUS_BUFFER;
typedef struct _DISABLE_ERROR_SOURCE_OUT *PDISABLE_ERROR_SOURCE_OUT;
typedef struct DOT11_ASSOCIATION_PARAMS *PDOT11_ASSOCIATION_PARAMS;
typedef struct _DOT11_DEFAULT_WEP_UPLOAD *PDOT11_DEFAULT_WEP_UPLOAD;
typedef struct DOT11_ERP_PHY_ATTRIBUTES *PDOT11_ERP_PHY_ATTRIBUTES;
typedef struct DOT11_EXTSTA_RECV_CONTEXT *PDOT11_EXTAP_RECV_CONTEXT;
typedef struct DOT11_EXTSTA_SEND_CONTEXT *PDOT11_EXTAP_SEND_CONTEXT;
typedef struct DOT11_LINK_QUALITY_ENTRY *PDOT11_LINK_QUALITY_ENTRY;
typedef struct _DOT11_MANUFACTURING_TEST *PDOT11_MANUFACTURING_TEST;
typedef struct _DOT11_OFFLOAD_CAPABILITY *PDOT11_OFFLOAD_CAPABILITY;
typedef struct _DOT11_QOS_TX_MEDIUM_TIME *PDOT11_QOS_TX_MEDIUM_TIME;
typedef struct _DOT11_STOP_AP_PARAMETERS *PDOT11_STOP_AP_PARAMETERS;
typedef struct _DRIVE_LAYOUT_INFORMATION *PDRIVE_LAYOUT_INFORMATION;
typedef struct _DXGK_DISPLAY_INFORMATION *PDXGK_DISPLAY_INFORMATION;
typedef struct _EHSTOR_DEVICE_PROPERTIES *PEHSTOR_DEVICE_PROPERTIES;
typedef struct _ENABLE_OFFLINE_DIAGS_OUT *PENABLE_OFFLINE_DIAGS_OUT;
typedef struct _FILE_FS_SIZE_INFORMATION *PFILE_FS_SIZE_INFORMATION;
typedef struct _FILE_FULL_EA_INFORMATION *PFILE_FULL_EA_INFORMATION;
typedef struct _FLT_CONTEXT_REGISTRATION *PFLT_CONTEXT_REGISTRATION;
typedef struct _FLT_DEFERRED_IO_WORKITEM *PFLT_DEFERRED_IO_WORKITEM;
typedef struct _FSCTL_OFFLOAD_READ_INPUT *PFSCTL_OFFLOAD_READ_INPUT;
typedef struct _FSRTL_PER_STREAM_CONTEXT *PFSRTL_PER_STREAM_CONTEXT;
typedef struct _FSVIDEO_MODE_INFORMATION *PFSVIDEO_MODE_INFORMATION;
typedef struct _FrequencyRangeDescriptor *PFrequencyRangeDescriptor;
typedef struct _GET_ERROR_SOURCE_INFO_IN *PGET_ERROR_SOURCE_INFO_IN;
typedef struct _GET_LOCAL_HOST_INFO7_W2K *PGET_LOCAL_HOST_INFO7_W2K;
typedef struct _GET_LOCAL_HOST_INFO7_WXP *PGET_LOCAL_HOST_INFO7_WXP;
typedef struct _GET_PARTITION_ATTRIBUTES *PGET_PARTITION_ATTRIBUTES;
typedef struct _GetBindingCapability_OUT *PGetBindingCapability_OUT;
typedef struct _GetPathConfiguration_OUT *PGetPathConfiguration_OUT;
typedef struct _GetPersistentBinding2_IN *PGetPersistentBinding2_IN;
typedef struct _GetPresharedKeyForId_OUT *PGetPresharedKeyForId_OUT;
typedef struct _HAL_PLATFORM_INFORMATION *PHAL_PLATFORM_INFORMATION;
typedef struct _HDAUDIO_BUS_INTERFACE_V2 *PHDAUDIO_BUS_INTERFACE_V2;
typedef struct _HDAUDIO_CONVERTER_FORMAT *PHDAUDIO_CONVERTER_FORMAT;
typedef struct _HIDP_EXTENDED_ATTRIBUTES *PHIDP_EXTENDED_ATTRIBUTES;
typedef struct _HID_INTERFACE_NOTIFY_PNP *PHID_INTERFACE_NOTIFY_PNP;
typedef struct _PHYSICAL_DEVICE_EXTENSION PHYSICAL_DEVICE_EXTENSION;
typedef struct _ICMPV4_TIMESTAMP_MESSAGE *PICMPV4_TIMESTAMP_MESSAGE;
typedef struct _IDE_CONTROLLER_INTERFACE *PIDE_CONTROLLER_INTERFACE;
typedef struct _IDE_VENDOR_DEFINED_POWER *PIDE_VENDOR_DEFINED_POWER;
typedef struct _ImageArchitectureEntry *PIMAGE_ARCHITECTURE_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;
typedef IMiniportAudioEngineNode *PIMINIPORTAudioEngineNode;
typedef struct _INJECT_HARDWARE_ERROR_IN *PINJECT_HARDWARE_ERROR_IN;
typedef struct _IO_DRIVER_CREATE_CONTEXT *PIO_DRIVER_CREATE_CONTEXT;
typedef struct _IPV6_OPTION_ROUTER_ALERT *PIPV6_OPTION_ROUTER_ALERT;
typedef struct _ISCSI_RedirectPortalInfo *PISCSI_RedirectPortalInfo;
typedef struct _tagKSAUDIOENGINE_DESCRIPTOR *PKSAUDIOENGINE_DESCRIPTOR;
typedef struct _KSM_BDA_CAS_CAPTURETOKEN *PKSM_BDA_CAS_CAPTURETOKEN;
typedef struct _KSM_BDA_SCAN_CAPABILTIES *PKSM_BDA_SCAN_CAPABILTIES;
typedef struct _1889F3BAB83DF1AC38A4E0627115688D *PKSPIN_PHYSICALCONNECTION;
typedef struct _BC7A094E99B893F962A170A802EFE988 *PKSPROPERTY_MEMBERSHEADER;
typedef struct _BA718A362089753A7EB60B21429558A7 *PKSPROPERTY_STEPPING_LONG;
typedef struct _E4D39CEDA60A9A842177218EB3078B88 *PKSPROPERTY_TUNER_INPUT_S;
typedef struct _E21F85AFDEE9EAF37885ADBF8938BB0C *PKSSTREAMALLOCATOR_STATUS;
typedef struct tagKS_DATARANGE_ANALOGVIDEO *PKS_DATARANGE_ANALOGVIDEO;
typedef struct tagKS_DATARANGE_BDA_ANTENNA *PKS_DATARANGE_BDA_ANTENNA;
typedef struct tagKS_DATARANGE_MPEG1_VIDEO *PKS_DATARANGE_MPEG1_VIDEO;
typedef struct tagKS_DATARANGE_MPEG2TS_AVC *PKS_DATARANGE_MPEG2TS_AVC;
typedef struct tagKS_DATARANGE_MPEG2_VIDEO *PKS_DATARANGE_MPEG2_VIDEO;
typedef struct _L2CAP_CONFIG_VALUE_RANGE *PL2CAP_CONFIG_VALUE_RANGE;
typedef struct _L2CAP_EXTENDED_FLOW_SPEC *PL2CAP_EXTENDED_FLOW_SPEC;
typedef struct _MF_ENUMERATION_INTERFACE *PMF_ENUMERATION_INTERFACE;
typedef IMiniportWaveCyclicStream *PMINIPORTWAVECYCLICSTREAM;
typedef struct _PMI_REPORTED_CAPABILITIES PMI_REPORTED_CAPABILITIES;
typedef struct _MM_PHYSICAL_ADDRESS_LIST *PMM_PHYSICAL_ADDRESS_LIST;
typedef struct _MODE_RIGID_GEOMETRY_PAGE *PMODE_RIGID_GEOMETRY_PAGE;
typedef struct _MPIO_ADAPTER_INFORMATION *PMPIO_ADAPTER_INFORMATION;
typedef struct _MP_DEVICE_DATA_SET_RANGE *PMP_DEVICE_DATA_SET_RANGE;
typedef struct _MSDiskDriver_Performance *PMSDiskDriver_Performance;
typedef struct _MSMouse_ClassInformation *PMSMouse_ClassInformation;
typedef struct _MSNdis_80211_NetworkType *PMSNdis_80211_NetworkType;
typedef struct _MSNdis_AtmReceiveCellsOk *PMSNdis_AtmReceiveCellsOk;
typedef struct _MSNdis_HDSplitParameters *PMSNdis_HDSplitParameters;
typedef struct _MSNdis_PMCapabilityState *PMSNdis_PMCapabilityState;
typedef struct _MSNdis_PciDeviceProperty *PMSNdis_PciDeviceProperty;
typedef struct _MSNdis_ReceiveFilterInfo *PMSNdis_ReceiveFilterInfo;
typedef struct _MSNdis_TransmitBlockSize *PMSNdis_TransmitBlockSize;
typedef struct _MSNdis_VendorDescription *PMSNdis_VendorDescription;
typedef struct _MSNdis_WmiIPSecOffloadV1 *PMSNdis_WmiIPSecOffloadV1;
typedef struct _MSPower_DeviceWakeEnable *PMSPower_DeviceWakeEnable;
typedef struct _MSSmBios_RawSMBiosTables *PMSSmBios_RawSMBiosTables;
typedef struct _MSV1_0_ENUMUSERS_REQUEST *PMSV1_0_ENUMUSERS_REQUEST;
typedef struct _MSV1_0_INTERACTIVE_LOGON *PMSV1_0_INTERACTIVE_LOGON;
typedef struct _MSiSCSI_HBASessionConfig *PMSiSCSI_HBASessionConfig;
typedef struct _MSiSCSI_PersistentLogins *PMSiSCSI_PersistentLogins;
typedef struct _NDISTAPI_CHARACTERISTICS *PNDISTAPI_CHARACTERISTICS;
typedef struct _NDIS_802_11_VARIABLE_IEs *PNDIS_802_11_VARIABLE_IEs;
typedef struct _NDIS_HD_SPLIT_ATTRIBUTES *PNDIS_HD_SPLIT_ATTRIBUTES;
typedef struct _NDIS_HD_SPLIT_PARAMETERS *PNDIS_HD_SPLIT_PARAMETERS;
typedef struct _NDIS_IP_OPER_STATUS_INFO *PNDIS_IP_OPER_STATUS_INFO;
typedef struct _NDIS_PM_PROTOCOL_OFFLOAD *PNDIS_PM_PROTOCOL_OFFLOAD;
typedef struct _NDIS_RECEIVE_FILTER_INFO *PNDIS_RECEIVE_FILTER_INFO;
typedef struct _NDIS_RECEIVE_QUEUE_STATE *PNDIS_RECEIVE_QUEUE_STATE;
typedef struct _NDIS_TAPI_GET_ADDRESS_ID *PNDIS_TAPI_GET_ADDRESS_ID;
typedef struct _NDIS_TAPI_GET_DEV_CONFIG *PNDIS_TAPI_GET_DEV_CONFIG;
typedef struct _NDIS_TAPI_MONITOR_DIGITS *PNDIS_TAPI_MONITOR_DIGITS;
typedef struct _NDIS_TAPI_SET_DEV_CONFIG *PNDIS_TAPI_SET_DEV_CONFIG;
typedef struct _NDIS_TAPI_SET_MEDIA_MODE *PNDIS_TAPI_SET_MEDIA_MODE;
typedef struct _NDIS_WAN_GET_BRIDGE_INFO *PNDIS_WAN_GET_BRIDGE_INFO;
typedef struct _NDIS_WAN_SET_BRIDGE_INFO *PNDIS_WAN_SET_BRIDGE_INFO;
typedef struct _NDIS_WMI_PM_ADMIN_CONFIG *PNDIS_WMI_PM_ADMIN_CONFIG;
typedef struct _NDIS_WWAN_AUTH_CHALLENGE *PNDIS_WWAN_AUTH_CHALLENGE;
typedef struct _NDIS_WWAN_HOME_PROVIDER2 *PNDIS_WWAN_HOME_PROVIDER2;
typedef struct nd_router_solicit *PND_ROUTER_SOLICIT_HEADER;
typedef struct _NETWORK_OPEN_ECP_CONTEXT *PNETWORK_OPEN_ECP_CONTEXT;
typedef struct _NET_BUFFER_SHARED_MEMORY *PNET_BUFFER_SHARED_MEMORY;
typedef struct _NET_PHYSICAL_LOCATION_LH *PNET_PHYSICAL_LOCATION_LH;
typedef struct _NL_BANDWIDTH_INFORMATION *PNL_BANDWIDTH_INFORMATION;
typedef struct _NL_INTERFACE_OFFLOAD_ROD *PNL_INTERFACE_OFFLOAD_ROD;
typedef struct _NOTIFICATION_BUSY_STATUS *PNOTIFICATION_BUSY_STATUS;
typedef struct _OB_CALLBACK_REGISTRATION *POB_CALLBACK_REGISTRATION;
typedef struct _POINTER_PORT_WMI_STD_DATA POINTER_PORT_WMI_STD_DATA;
typedef struct _PARALLEL_PNP_INFORMATION *PPARALLEL_PNP_INFORMATION;
typedef struct _PARTITION_INFORMATION_EX *PPARTITION_INFORMATION_EX;
typedef union _PCI_EXPRESS_SRIOV_STATUS *PPCI_EXPRESS_SRIOV_STATUS;
typedef union _PCW_CALLBACK_INFORMATION *PPCW_CALLBACK_INFORMATION;
typedef struct _PHY_CONFIGURATION_PACKET *PPHY_CONFIGURATION_PACKET;
typedef struct _5E92F866E5E5F01CD93A72BBF8C1999A PPM_IDLE_STATE_ACCOUNTING;
typedef struct _POWER_MONITOR_INVOCATION *PPOWER_MONITOR_INVOCATION;
typedef struct _8734295609DAB040198410EB4CD6E51F *PPPM_IDLE_STATE_BUCKET_EX;
typedef struct _D74197C1B01F8299C3B95153261D4A94 *PPPM_THERMAL_POLICY_EVENT;
typedef struct _8F1F2360283DF2289B54980815148EF3 *PPPM_WMI_LEGACY_PERFSTATE;
typedef struct _062D643B57BB006C3005C5FAB86889C0 *PPROCESSOR_IDLESTATE_INFO;
typedef struct _Q2931_CALLMGR_PARAMETERS *PQ2931_CALLMGR_PARAMETERS;
typedef struct _QUERY_FILE_LAYOUT_OUTPUT *PQUERY_FILE_LAYOUT_OUTPUT;
typedef struct _383365F5B01CBBB641F2B03EBB603E45 *PREAD_USN_JOURNAL_DATA_V0;
typedef struct _D7325426B7F06BB5A63E402FDFE43953 *PREAD_USN_JOURNAL_DATA_V1;
typedef struct _PREFETCH_OPEN_ECP_CONTEXT PREFETCH_OPEN_ECP_CONTEXT;
typedef struct _REG_LOAD_KEY_INFORMATION *PREG_LOAD_KEY_INFORMATION;
typedef struct _REG_CREATE_KEY_INFORMATION *PREG_OPEN_KEY_INFORMATION;
typedef struct _REG_SAVE_KEY_INFORMATION *PREG_SAVE_KEY_INFORMATION;
typedef struct _REPARSE_GUID_DATA_BUFFER *PREPARSE_GUID_DATA_BUFFER;
typedef struct _004D1690B92AB6C871F002F03A8A3150 *PREQ_NT_SET_FS_QUOTA_INFO;
typedef struct _PROCESS_BASIC_INFORMATION PROCESS_BASIC_INFORMATION;
typedef struct _RTL_QUERY_REGISTRY_TABLE *PRTL_QUERY_REGISTRY_TABLE;
typedef struct _RX_WORK_QUEUE_DISPATCHER_ *PRX_WORK_QUEUE_DISPATCHER;
typedef struct _RemovePersistentEntry_IN *PRemovePersistentEntry_IN;
typedef struct _RemovePersistentLogin_IN *PRemovePersistentLogin_IN;
typedef struct _SCSI_PASS_THROUGH_DIRECT *PSCSI_PASS_THROUGH_DIRECT;
typedef struct _SCSI_POWER_REQUEST_BLOCK *PSCSI_POWER_REQUEST_BLOCK;
typedef struct _SDBUS_INTERFACE_STANDARD *PSDBUS_INTERFACE_STANDARD;
typedef struct _SECURITY_SUBJECT_CONTEXT *PSECURITY_SUBJECT_CONTEXT;
typedef union _SES_PROTOCOL_INFORMATION *PSES_PROTOCOL_INFORMATION;
typedef struct _SES_SAS_SLOT_INFORMATION *PSES_SAS_SLOT_INFORMATION;
typedef struct _SET_ERROR_SOURCE_INFO_IN *PSET_ERROR_SOURCE_INFO_IN;
typedef struct _SET_PARTITION_ATTRIBUTES *PSET_PARTITION_ATTRIBUTES;
typedef struct _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;
typedef struct _SILO_DRIVER_CAPABILITIES *PSILO_DRIVER_CAPABILITIES;
typedef struct SMHBA_ProtocolStatistics *PSMHBA_PROTOCOLSTATISTICS;
typedef struct _SRBEX_DATA_BIDIRECTIONAL *PSRBEX_DATA_BIDIRECTIONAL;
typedef struct _STOR_DEVICE_CAPABILITIES *PSTOR_DEVICE_CAPABILITIES;
typedef struct _STOR_FREE_EL_RECORD_ARGS *PSTOR_FREE_EL_RECORD_ARGS;
typedef struct _STOR_LOG_DIAG_EVENT_ARGS *PSTOR_LOG_DIAG_EVENT_ARGS;
typedef struct _STOR_POFX_ACTIVE_CONTEXT *PSTOR_POFX_ACTIVE_CONTEXT;
typedef struct _STOR_POFX_FSTATE_CONTEXT *PSTOR_POFX_FSTATE_CONTEXT;
typedef struct _STOR_SCATTER_GATHER_LIST *PSTOR_SCATTER_GATHER_LIST;
typedef struct _STOR_WMI_REGCONTROL_ARGS *PSTOR_WMI_REGCONTROL_ARGS;
typedef struct _STREAM_METHOD_DESCRIPTOR *PSTREAM_METHOD_DESCRIPTOR;
typedef struct _SWENUM_INSTALL_INTERFACE *PSWENUM_INSTALL_INTERFACE;
typedef struct _SYSTEM_POWER_INFORMATION *PSYSTEM_POWER_INFORMATION;
typedef struct _SecPkgContext_AuthorityW *PSecPkgContext_AuthorityW;
typedef struct _SecPkgContext_LogoffTime *PSecPkgContext_LogoffTime;
typedef struct _SecPkgContext_NegoStatus *PSecPkgContext_NegoStatus;
typedef struct _SecPkgContext_ProtoInfoW *PSecPkgContext_ProtoInfoW;
typedef struct _SecPkgContext_SessionKey *PSecPkgContext_SessionKey;
typedef struct _SecPkgCredentials_NamesW *PSecPkgCredentials_NamesW;
typedef struct _SetGroupPresharedKey_OUT *PSetGroupPresharedKey_OUT;
typedef struct _SetInitiatorNodeName_OUT *PSetInitiatorNodeName_OUT;
typedef struct _SetLoadBalancePolicy_OUT *PSetLoadBalancePolicy_OUT;
typedef struct _SetPresharedKeyForId_OUT *PSetPresharedKeyForId_OUT;
typedef struct _SetRADIUSSharedSecret_IN *PSetRADIUSSharedSecret_IN;
typedef struct _TOKEN_ACCESS_INFORMATION *PTOKEN_ACCESS_INFORMATION;
typedef struct _TRANSACTION_NOTIFICATION *PTRANSACTION_NOTIFICATION;
typedef struct _USBC_FUNCTION_DESCRIPTOR *PUSBC_FUNCTION_DESCRIPTOR;
typedef struct _USBD_VERSION_INFORMATION *PUSBD_VERSION_INFORMATION;
typedef struct _USB_BUS_INTERFACE_HUB_V0 *PUSB_BUS_INTERFACE_HUB_V0;
typedef struct _USB_BUS_INTERFACE_HUB_V1 *PUSB_BUS_INTERFACE_HUB_V1;
typedef struct _USB_BUS_INTERFACE_HUB_V2 *PUSB_BUS_INTERFACE_HUB_V2;
typedef struct _USB_BUS_INTERFACE_HUB_V3 *PUSB_BUS_INTERFACE_HUB_V3;
typedef struct _USB_BUS_INTERFACE_HUB_V4 *PUSB_BUS_INTERFACE_HUB_V4;
typedef struct _USB_BUS_INTERFACE_HUB_V5 *PUSB_BUS_INTERFACE_HUB_V5;
typedef struct _USB_BUS_INTERFACE_HUB_V6 *PUSB_BUS_INTERFACE_HUB_V6;
typedef struct _USB_BUS_INTERFACE_HUB_V7 *PUSB_BUS_INTERFACE_HUB_V7;
typedef struct _USB_BUS_INTERFACE_HUB_V8 *PUSB_BUS_INTERFACE_HUB_V8;
typedef struct _USB_CD_ERROR_INFORMATION *PUSB_CD_ERROR_INFORMATION;
typedef struct _USB_DEVICE_INFORMATION_0 *PUSB_DEVICE_INFORMATION_0;
typedef struct _USB_EXTHUB_INFORMATION_0 *PUSB_EXTHUB_INFORMATION_0;
typedef union _USB_HIGH_SPEED_MAXPACKET *PUSB_HIGH_SPEED_MAXPACKET;
typedef struct _USB_ID_ERROR_INFORMATION *PUSB_ID_ERROR_INFORMATION;
typedef struct _USB_INTERFACE_DESCRIPTOR *PUSB_INTERFACE_DESCRIPTOR;
typedef struct _VIDEO_COLOR_CAPABILITIES *PVIDEO_COLOR_CAPABILITIES;
typedef struct _VIDEO_MEMORY_INFORMATION *PVIDEO_MEMORY_INFORMATION;
typedef struct tagVIDEO_MONITOR_DESCRIPTOR *PVIDEO_MONITOR_DESCRIPTOR;
typedef struct _VIDEO_POINTER_ATTRIBUTES *PVIDEO_POINTER_ATTRIBUTES;
typedef struct _VIDEO_PORT_AGP_INTERFACE *PVIDEO_PORT_AGP_INTERFACE;
typedef struct _VIDEO_PORT_I2C_INTERFACE *PVIDEO_PORT_I2C_INTERFACE;
typedef struct _VIDEO_X86_BIOS_ARGUMENTS *PVIDEO_X86_BIOS_ARGUMENTS;
typedef struct _VPD_ATA_INFORMATION_PAGE *PVPD_ATA_INFORMATION_PAGE;
typedef struct _VPD_SUPPORTED_PAGES_PAGE *PVPD_SUPPORTED_PAGES_PAGE;
typedef struct _WHEA_ERROR_RECORD_HEADER *PWHEA_ERROR_RECORD_HEADER;
typedef struct _WMI_TAPE_PROBLEM_WARNING *PWMI_TAPE_PROBLEM_WARNING;
typedef struct _E7F5496ECA9568683CB70A9C1E22006D *PWRITE_USING_TOKEN_HEADER;
typedef struct _WSK_EXTENSION_CONTROL_IN *PWSK_EXTENSION_CONTROL_IN;
typedef struct _WWAN_AUTH_AKAP_CHALLENGE *PWWAN_AUTH_AKAP_CHALLENGE;
typedef struct _WmiEnumReceiveFilters_IN *PWmiEnumReceiveFilters_IN;
typedef struct _WmiEnumReceiveQueues_OUT *PWmiEnumReceiveQueues_OUT;
typedef struct _WmiSetLinkParameters_OUT *PWmiSetLinkParameters_OUT;
typedef struct _WmiSetPortParameters_OUT *PWmiSetPortParameters_OUT;
typedef struct _XVARIABLE_NAME_AND_VALUE *PXVARIABLE_NAME_AND_VALUE;
typedef struct _READ_BUFFER_CAPACITY_DATA READ_BUFFER_CAPACITY_DATA;
typedef struct _READ_ELEMENT_ADDRESS_INFO READ_ELEMENT_ADDRESS_INFO;
typedef struct _REGISTER_COMPOSITE_DEVICE REGISTER_COMPOSITE_DEVICE;
typedef struct _REG_DELETE_KEY_INFORMATION REG_FLUSH_KEY_INFORMATION;
typedef struct _REG_QUERY_KEY_INFORMATION REG_QUERY_KEY_INFORMATION;
typedef struct _RESOURCE_PERFORMANCE_DATA RESOURCE_PERFORMANCE_DATA;
typedef struct _RemovePersistentEntry_OUT RemovePersistentEntry_OUT;
typedef struct _RemovePersistentLogin_OUT RemovePersistentLogin_OUT;
typedef struct _SCARD_READER_CAPABILITIES SCARD_READER_CAPABILITIES;
typedef struct _SCO_INDICATION_PARAMETERS SCO_INDICATION_PARAMETERS;
typedef struct _SDBUS_ADAPTER_SOCKET_INFO SDBUS_ADAPTER_SOCKET_INFO;
typedef struct _SEC_WINNT_AUTH_IDENTITY_W SEC_WINNT_AUTH_IDENTITY_W;
typedef struct _SET_ERROR_SOURCE_INFO_OUT SET_ERROR_SOURCE_INFO_OUT;
typedef struct _SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION;
typedef struct _SHRINK_VOLUME_INFORMATION SHRINK_VOLUME_INFORMATION;
typedef struct _SOCKET_PROCESSOR_AFFINITY SOCKET_PROCESSOR_AFFINITY;
typedef struct _060D6FD956D3EBF205D64C3CA4764571 STARTING_LCN_INPUT_BUFFER;
typedef struct _80E50DFA284ED4BC838B08AAD8EA99BA STARTING_VCN_INPUT_BUFFER;
typedef struct _STORAGE_BUS_RESET_REQUEST STORAGE_BUS_RESET_REQUEST;
typedef struct _STORAGE_DESCRIPTOR_HEADER STORAGE_DESCRIPTOR_HEADER;
typedef struct _STORAGE_DEVICE_DESCRIPTOR STORAGE_DEVICE_DESCRIPTOR;
typedef struct _STORAGE_DIAG_EVENT_RECORD STORAGE_DIAG_EVENT_RECORD;
typedef struct _STOR_ALLOC_EL_RECORD_ARGS STOR_ALLOC_EL_RECORD_ARGS;
typedef struct _STOR_CLEANUP_TRACING_ARGS STOR_CLEANUP_TRACING_ARGS;
typedef struct _STOR_FREE_DIAG_EVENT_ARGS STOR_FREE_DIAG_EVENT_ARGS;
typedef struct _STOR_POFX_UNIT_POWER_INFO STOR_POFX_UNIT_POWER_INFO;
typedef struct _STOR_POWER_CONTROL_HEADER STOR_POWER_CONTROL_HEADER;
typedef struct _STOR_WRITE_EL_RECORD_ARGS STOR_WRITE_EL_RECORD_ARGS;
typedef struct _9FEB4B420E923D4204A687EB7CAB54F3 SYSTEM_POWER_CAPABILITIES;
typedef struct _SecPkgContext_StreamSizes SecPkgContext_StreamSizes;
typedef struct _SetChapForPhysicalPort_IN SetChapForPhysicalPort_IN;
typedef struct _SetRADIUSSharedSecret_OUT SetRADIUSSharedSecret_OUT;
typedef struct _TAPE_GET_DRIVE_PARAMETERS TAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS TAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_DRIVE_PARAMETERS TAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS TAPE_SET_MEDIA_PARAMETERS;
typedef struct _TDI_REQUEST_KERNEL_ACCEPT TDI_REQUEST_KERNEL_ACCEPT;
typedef struct _TDI_REQUEST_KERNEL_SENDDG TDI_REQUEST_KERNEL_SENDDG;
typedef struct _TDI_REQUEST_SEND_DATAGRAM TDI_REQUEST_SEND_DATAGRAM;
typedef struct _TXFS_QUERY_RM_INFORMATION TXFS_QUERY_RM_INFORMATION;
typedef struct _TXFS_START_RM_INFORMATION TXFS_START_RM_INFORMATION;
typedef struct _USBD_INTERFACE_LIST_ENTRY USBD_INTERFACE_LIST_ENTRY;
typedef struct _USBRPM_DEVICE_INFORMATION USBRPM_DEVICE_INFORMATION;
typedef struct _USB_EXTPORT_INFORMATION_0 USB_EXTPORT_INFORMATION_0;
typedef union _USB_HUB_STATUS_AND_CHANGE USB_HUB_STATUS_AND_CHANGE;
typedef struct _VIDEO_PERFORMANCE_COUNTER VIDEO_PERFORMANCE_COUNTER;
typedef struct _VPD_THIRD_PARTY_COPY_PAGE VPD_THIRD_PARTY_COPY_PAGE;
typedef struct _VP_SCATTER_GATHER_ELEMENT VP_SCATTER_GATHER_ELEMENT;
typedef struct _WHEA_MEMORY_ERROR_SECTION WHEA_MEMORY_ERROR_SECTION;
typedef struct _WHEA_PCIEXPRESS_DEVICE_ID WHEA_PCIEXPRESS_DEVICE_ID;
typedef struct _WMI_TAPE_DRIVE_PARAMETERS WMI_TAPE_DRIVE_PARAMETERS;
typedef struct _WMI_TAPE_MEDIA_PARAMETERS WMI_TAPE_MEDIA_PARAMETERS;
typedef struct _WMI_TAPE_PROBLEM_IO_ERROR WMI_TAPE_PROBLEM_IO_ERROR;
typedef struct _WSK_EXTENSION_CONTROL_OUT WSK_EXTENSION_CONTROL_OUT;
typedef struct _WWAN_DEVICE_SERVICE_ENTRY WWAN_DEVICE_SERVICE_ENTRY;
typedef struct _WWAN_DEVICE_SERVICE_EVENT WWAN_DEVICE_SERVICE_EVENT;
typedef struct _WmiEnumReceiveFilters_OUT WmiEnumReceiveFilters_OUT;
typedef struct _WmiMonitorBrightnessEvent WmiMonitorBrightnessEvent;
typedef struct _WmiMonitorRawEEdidV1Block WmiMonitorRawEEdidV1Block;
typedef struct _WmiQueryStatisticsInfo_IN WmiQueryStatisticsInfo_IN;
enum _ACPI_GENERIC_ACCESS_SIZE {AcpiGenericAccessSizeLegacy = 0x0,AcpiGenericAccessSizeByte = 0x1,AcpiGenericAccessSizeWord = 0x2,AcpiGenericAccessSizeDWord = 0x3,AcpiGenericAccessSizeQWord = 0x4,};
enum _ACPI_WPBT_CONTENT_LAYOUT {WpbtContentLayoutPE = 0x1,};
enum _CSV_DOWN_LEVEL_FILE_TYPE {CsvDownLevelFileObject = 0x0,CsvCsvFsInternalFileObject = 0x1,};
enum _DXGKMDT_CERTIFICATE_TYPE {DXGKMDT_OPM_CERTIFICATE = 0x0,DXGKMDT_COPP_CERTIFICATE = 0x1,DXGKMDT_UAB_CERTIFICATE = 0x2,DXGKMDT_FORCE_ULONG = 0xFFFFFFFF,};
enum _FILTER_INFORMATION_CLASS {FilterFullInformation = 0x0,FilterAggregateBasicInformation = 0x1,FilterAggregateStandardInformation = 0x2,};
enum _MEMORY_CACHING_TYPE_ORIG {MmFrameBufferCached = 0x2,};
enum _MSV1_0_LOGON_SUBMIT_TYPE {MsV1_0InteractiveLogon = 0x2,MsV1_0Lm20Logon = 0x3,MsV1_0NetworkLogon = 0x4,MsV1_0SubAuthLogon = 0x5,MsV1_0WorkstationUnlockLogon = 0x7,MsV1_0S4ULogon = 0xC,MsV1_0VirtualLogon = 0x52,MsV1_0NoElevationLogon = 0x53,};
enum _NDIS_802_11_NETWORK_TYPE {Ndis802_11FH = 0x0,Ndis802_11DS = 0x1,Ndis802_11OFDM5 = 0x2,Ndis802_11OFDM24 = 0x3,Ndis802_11Automode = 0x4,Ndis802_11NetworkTypeMax = 0x5,};
enum _NDIS_802_11_RADIO_STATUS {Ndis802_11RadioStatusOn = 0x0,Ndis802_11RadioStatusHardwareOff = 0x1,Ndis802_11RadioStatusSoftwareOff = 0x2,Ndis802_11RadioStatusHardwareSoftwareOff = 0x3,Ndis802_11RadioStatusMax = 0x4,};
enum _NDIS_FDDI_RING_MGT_STATE {NdisFddiRingIsolated = 0x1,NdisFddiRingNonOperational = 0x2,NdisFddiRingOperational = 0x3,NdisFddiRingDetect = 0x4,NdisFddiRingNonOperationalDup = 0x5,NdisFddiRingOperationalDup = 0x6,NdisFddiRingDirected = 0x7,NdisFddiRingTrace = 0x8,};
enum _NDIS_NETWORK_CHANGE_TYPE {NdisPossibleNetworkChange = 0x1,NdisDefinitelyNetworkChange = 0x2,NdisNetworkChangeFromMediaConnect = 0x3,NdisNetworkChangeMax = 0x4,};
enum _NDIS_PM_CAPABILITY_STATE {NdisPMAdminConfigUnsupported = 0x0,NdisPMAdminConfigInactive = 0x1,NdisPMAdminConfigActive = 0x2,};
enum _NDIS_RECEIVE_FILTER_TEST {NdisReceiveFilterTestUndefined = 0x0,NdisReceiveFilterTestEqual = 0x1,NdisReceiveFilterTestMaskEqual = 0x2,NdisReceiveFilterTestNotEqual = 0x3,NdisReceiveFilterTestMaximum = 0x4,};
enum _NDIS_RECEIVE_FILTER_TYPE {NdisReceiveFilterTypeUndefined = 0x0,NdisReceiveFilterTypeVMQueue = 0x1,NdisReceiveFilterTypePacketCoalescing = 0x2,NdisReceiveFilterTypeMaximum = 0x3,};
enum _NDIS_SHARED_MEMORY_USAGE {NdisSharedMemoryUsageUndefined = 0x0,NdisSharedMemoryUsageXmit = 0x1,NdisSharedMemoryUsageXmitHeader = 0x2,NdisSharedMemoryUsageXmitData = 0x3,NdisSharedMemoryUsageReceive = 0x4,NdisSharedMemoryUsageReceiveLookahead = 0x5,NdisSharedMemoryUsageReceivePostLookahead = 0x6,NdisSharedMemoryUsageReceiveHeader = 0x7,NdisSharedMemoryUsageReceiveData = 0x8,NdisSharedMemoryUsageOther = 0x9,NdisSharedMemoryUsageMax = 0xA,};
struct _NL_INTERFACE_OFFLOAD_ROD {unsigned char NlChecksumSupported : 1;unsigned char NlOptionsSupported : 1;unsigned char TlDatagramChecksumSupported : 1;unsigned char TlStreamChecksumSupported : 1;unsigned char TlStreamOptionsSupported : 1;unsigned char FastPathCompatible : 1;unsigned char TlLargeSendOffloadSupported : 1;unsigned char TlGiantSendOffloadSupported : 1;};
enum _OBJECT_INFORMATION_CLASS {ObjectBasicInformation = 0x0,ObjectTypeInformation = 0x2,};
enum _OB_PREOP_CALLBACK_STATUS {OB_PREOP_SUCCESS = 0x0,};
enum _RX_SCAVENGER_ENTRY_STATE {RX_SCAVENGING_INACTIVE = 0x0,RX_SCAVENGING_PENDING = 0x1,RX_SCAVENGING_IN_PROGRESS = 0x2,RX_SCAVENGING_AWAITING_RESPONSE = 0x3,};
enum _SCSI_UNIT_CONTROL_STATUS {ScsiUnitControlSuccess = 0x0,ScsiUnitControlUnsuccessful = 0x1,};
enum _SOCKET_SECURITY_PROTOCOL {SOCKET_SECURITY_PROTOCOL_DEFAULT = 0x0,SOCKET_SECURITY_PROTOCOL_IPSEC = 0x1,SOCKET_SECURITY_PROTOCOL_IPSEC2 = 0x2,SOCKET_SECURITY_PROTOCOL_INVALID = 0x3,};
enum _STORAGE_ASSOCIATION_TYPE {StorageIdAssocDevice = 0x0,StorageIdAssocPort = 0x1,StorageIdAssocTarget = 0x2,};
struct _SecPkgContext_NegoStatus {unsigned int LastStatus;};
struct _SecPkgContext_SessionKey {unsigned int SessionKeyLength;unsigned char *SessionKey;};
typedef struct _5D7BCB0D4B3608CEC2ABF81A20A24C68 ACPI_INTERFACE_STANDARD2;
typedef struct _ALLOW_PERFORMANCE_HIT_IN ALLOW_PERFORMANCE_HIT_IN;
typedef struct _ATM_SERVICE_ADDRESS_LIST ATM_SERVICE_ADDRESS_LIST;
typedef struct audiofile_af10waveformat_tag AUDIOFILE_AF10WAVEFORMAT;
typedef struct audiofile_af36waveformat_tag AUDIOFILE_AF36WAVEFORMAT;
typedef struct _AUX_MODULE_EXTENDED_INFO AUX_MODULE_EXTENDED_INFO;
typedef struct _AVC_STREAM_REQUEST_BLOCK AVC_STREAM_REQUEST_BLOCK;
typedef struct _BDA_CAS_REQUESTTUNERDATA BDA_CAS_REQUESTTUNERDATA;
enum BDA_Frequency_Multiplier {BDA_FREQUENCY_MULTIPLIER_NOT_SET = 0xFFFFFFFF,BDA_FREQUENCY_MULTIPLIER_NOT_DEFINED = 0x0,};
typedef struct _BDA_ISDBCAS_RESPONSEDATA BDA_ISDBCAS_RESPONSEDATA;
typedef struct _CACHE_UNINITIALIZE_EVENT CACHE_UNINITIALIZE_EVENT;
typedef struct _CDROM_PERFORMANCE_HEADER CDROM_PERFORMANCE_HEADER;
typedef struct _CLS_IO_STATISTICS_HEADER CLS_IO_STATISTICS_HEADER;
typedef struct _CM_COMPONENT_INFORMATION CM_COMPONENT_INFORMATION;
typedef struct _CM_EISA_SLOT_INFORMATION CM_EISA_SLOT_INFORMATION;
typedef struct _CM_INT13_DRIVE_PARAMETER CM_INT13_DRIVE_PARAMETER;
typedef struct _CM_PARTIAL_RESOURCE_LIST CM_PARTIAL_RESOURCE_LIST;
typedef struct _CO_TAPI_CALL_DIAGNOSTICS CO_TAPI_CALL_DIAGNOSTICS;
typedef struct _CSV_QUERY_REDIRECT_STATE CSV_QUERY_REDIRECT_STATE;
typedef struct _D3COLD_SUPPORT_INTERFACE D3COLD_SUPPORT_INTERFACE;
typedef struct _D3DDDIARG_CREATERESOURCE D3DDDIARG_CREATERESOURCE;
enum D3DDDI_FLIPINTERVAL_TYPE {D3DDDI_FLIPINTERVAL_IMMEDIATE = 0x0,D3DDDI_FLIPINTERVAL_ONE = 0x1,D3DDDI_FLIPINTERVAL_TWO = 0x2,D3DDDI_FLIPINTERVAL_THREE = 0x3,D3DDDI_FLIPINTERVAL_FOUR = 0x4,};
typedef struct _D3DDDI_GAMMA_RAMP_DXGI_1 D3DDDI_GAMMA_RAMP_DXGI_1;
typedef struct _D3DDDI_KERNELOVERLAYINFO D3DDDI_KERNELOVERLAYINFO;
typedef struct _D3DDDI_PATCHLOCATIONLIST D3DDDI_PATCHLOCATIONLIST;
struct D3DKMDT_HVIDPNTOPOLOGY__ {int unused;};
typedef struct _DEBUG_DEVICE_INFORMATION DEBUG_DEVICE_INFORMATION;
typedef struct _DEBUG_TRACE_CONTROLPOINT DEBUG_TRACE_CONTROLPOINT;
typedef struct _DECRYPTION_STATUS_BUFFER DECRYPTION_STATUS_BUFFER;
typedef struct _DISABLE_ERROR_SOURCE_OUT DISABLE_ERROR_SOURCE_OUT;
typedef struct _DOT11_DEFAULT_WEP_UPLOAD DOT11_DEFAULT_WEP_UPLOAD;
typedef struct DOT11_EXTSTA_RECV_CONTEXT DOT11_EXTAP_RECV_CONTEXT;
typedef struct DOT11_EXTSTA_SEND_CONTEXT DOT11_EXTAP_SEND_CONTEXT;
typedef struct _DOT11_MANUFACTURING_TEST DOT11_MANUFACTURING_TEST;
typedef struct _DOT11_OFFLOAD_CAPABILITY DOT11_OFFLOAD_CAPABILITY;
typedef struct _DOT11_QOS_TX_MEDIUM_TIME DOT11_QOS_TX_MEDIUM_TIME;
typedef struct _DOT11_STOP_AP_PARAMETERS DOT11_STOP_AP_PARAMETERS;
typedef struct _DRIVE_LAYOUT_INFORMATION DRIVE_LAYOUT_INFORMATION;
typedef struct _DXGKARG_CREATEALLOCATION DXGKARG_CREATEALLOCATION;
typedef struct _DXGKARG_ISSUPPORTEDVIDPN DXGKARG_ISSUPPORTEDVIDPN;
typedef struct _DXGKARG_QUERYADAPTERINFO DXGKARG_QUERYADAPTERINFO;
typedef struct _DXGK_ALLOCATIONINFOFLAGS DXGK_ALLOCATIONINFOFLAGS;
typedef struct _DXGK_ALLOCATIONUSAGEHINT DXGK_ALLOCATIONUSAGEHINT;
typedef struct DXGK_DEBUG_REPORT_HANDLE__ *DXGK_DEBUG_REPORT_HANDLE;
typedef struct _DXGK_DISCARDCONTENTFLAGS DXGK_DISCARDCONTENTFLAGS;
typedef struct _DXGK_DISPLAY_INFORMATION DXGK_DISPLAY_INFORMATION;
typedef struct _DXGK_OPENALLOCATIONFLAGS DXGK_OPENALLOCATIONFLAGS;
typedef struct _DXGK_POWER_RUNTIME_STATE DXGK_POWER_RUNTIME_STATE;
typedef struct _DXGK_PREEMPTCOMMANDFLAGS DXGK_PREEMPTCOMMANDFLAGS;
typedef struct _EHSTOR_DEVICE_PROPERTIES EHSTOR_DEVICE_PROPERTIES;
typedef struct _ENABLE_OFFLINE_DIAGS_OUT ENABLE_OFFLINE_DIAGS_OUT;
typedef struct _FILE_FS_SIZE_INFORMATION FILE_FS_SIZE_INFORMATION;
typedef struct _FILE_FULL_EA_INFORMATION FILE_FULL_EA_INFORMATION;
typedef struct _FLT_CONTEXT_REGISTRATION FLT_CONTEXT_REGISTRATION;
typedef struct _FSCTL_OFFLOAD_READ_INPUT FSCTL_OFFLOAD_READ_INPUT;
typedef struct _FSRTL_PER_STREAM_CONTEXT FSRTL_PER_STREAM_CONTEXT;
typedef struct _FSVIDEO_MODE_INFORMATION FSVIDEO_MODE_INFORMATION;
typedef struct _FrequencyRangeDescriptor FrequencyRangeDescriptor;
typedef struct _GET_ERROR_SOURCE_INFO_IN GET_ERROR_SOURCE_INFO_IN;
typedef struct _GET_LOCAL_HOST_INFO7_W2K GET_LOCAL_HOST_INFO7_W2K;
typedef struct _GET_LOCAL_HOST_INFO7_WXP GET_LOCAL_HOST_INFO7_WXP;
typedef struct _GET_PARTITION_ATTRIBUTES GET_PARTITION_ATTRIBUTES;
typedef struct _GetBindingCapability_OUT GetBindingCapability_OUT;
typedef struct _GetPathConfiguration_OUT GetPathConfiguration_OUT;
typedef struct _GetPersistentBinding2_IN GetPersistentBinding2_IN;
typedef struct _GetPresharedKeyForId_OUT GetPresharedKeyForId_OUT;
typedef struct _HAL_PLATFORM_INFORMATION HAL_PLATFORM_INFORMATION;
typedef struct _HDAUDIO_BUS_INTERFACE_V2 HDAUDIO_BUS_INTERFACE_V2;
typedef struct _HDAUDIO_CONVERTER_FORMAT HDAUDIO_CONVERTER_FORMAT;
typedef struct _HIDP_EXTENDED_ATTRIBUTES HIDP_EXTENDED_ATTRIBUTES;
typedef struct _HID_INTERFACE_NOTIFY_PNP HID_INTERFACE_NOTIFY_PNP;
struct IAdapterPowerManagement2 {struct IAdapterPowerManagement2Vtbl *lpVtbl;};
struct IAdapterPowerManagement3 {struct IAdapterPowerManagement3Vtbl *lpVtbl;};
typedef struct _ICMPV4_TIMESTAMP_MESSAGE ICMPV4_TIMESTAMP_MESSAGE;
typedef struct _IDE_CONTROLLER_INTERFACE IDE_CONTROLLER_INTERFACE;
typedef struct _IDE_VENDOR_DEFINED_POWER IDE_VENDOR_DEFINED_POWER;
typedef struct _ImageArchitectureEntry IMAGE_ARCHITECTURE_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY;
struct IMiniportAudioEngineNode {struct IMiniportAudioEngineNodeVtbl *lpVtbl;};
typedef struct _INJECT_HARDWARE_ERROR_IN INJECT_HARDWARE_ERROR_IN;
typedef struct _IO_DRIVER_CREATE_CONTEXT IO_DRIVER_CREATE_CONTEXT;
typedef struct _IO_REMOVE_LOCK_DBG_BLOCK IO_REMOVE_LOCK_DBG_BLOCK;
typedef struct _IPV6_OPTION_ROUTER_ALERT IPV6_OPTION_ROUTER_ALERT;
typedef struct _ISCSI_RedirectPortalInfo ISCSI_RedirectPortalInfo;
typedef struct _tagKSAUDIOENGINE_DESCRIPTOR KSAUDIOENGINE_DESCRIPTOR;
typedef struct _KSM_BDA_CAS_CAPTURETOKEN KSM_BDA_CAS_CAPTURETOKEN;
typedef struct _KSM_BDA_SCAN_CAPABILTIES KSM_BDA_SCAN_CAPABILTIES;
typedef struct _1889F3BAB83DF1AC38A4E0627115688D KSPIN_PHYSICALCONNECTION;
typedef struct _BC7A094E99B893F962A170A802EFE988 KSPROPERTY_MEMBERSHEADER;
typedef struct _BA718A362089753A7EB60B21429558A7 KSPROPERTY_STEPPING_LONG;
typedef struct _E4D39CEDA60A9A842177218EB3078B88 KSPROPERTY_TUNER_INPUT_S;
typedef struct _E21F85AFDEE9EAF37885ADBF8938BB0C KSSTREAMALLOCATOR_STATUS;
typedef struct tagKS_DATARANGE_ANALOGVIDEO KS_DATARANGE_ANALOGVIDEO;
typedef struct tagKS_DATARANGE_BDA_ANTENNA KS_DATARANGE_BDA_ANTENNA;
typedef struct tagKS_DATARANGE_MPEG1_VIDEO KS_DATARANGE_MPEG1_VIDEO;
typedef struct tagKS_DATARANGE_MPEG2TS_AVC KS_DATARANGE_MPEG2TS_AVC;
typedef struct tagKS_DATARANGE_MPEG2_VIDEO KS_DATARANGE_MPEG2_VIDEO;
typedef struct _L2CAP_CONFIG_VALUE_RANGE L2CAP_CONFIG_VALUE_RANGE;
typedef struct _L2CAP_EXTENDED_FLOW_SPEC L2CAP_EXTENDED_FLOW_SPEC;
enum MACRO_ATTEMPTED_WRITE_TO {ATTEMPTED_WRITE_TO_CM_PROTECTED_STORAGE = 0x11C,};
enum MACRO_AddRADIUSServer_IN {AddRADIUSServer_IN_RADIUSIPAddress_ID = 1,AddRADIUSServer_OUT_Status_ID = 2,};
enum MACRO_BLOCK_DEVICE_TOKEN {BLOCK_DEVICE_TOKEN_SIZE = 512,MAX_SENSE_BUFFER_SIZE = 255,};
enum MACRO_CDROM_INQUIRY_SIZE {MINIMUM_CDROM_INQUIRY_SIZE = 36,MAXIMUM_CDROM_INQUIRY_SIZE = 260,};
enum MACRO_CERT_E_UNTRUSTEDCA {CERT_E_UNTRUSTEDCA = 0x800B0112,CERT_E_INVALID_POLICY = 0x800B0113,CERT_E_INVALID_NAME = 0x800B0114,};
enum MACRO_COMPRESSION_FORMAT {COMPRESSION_FORMAT_SPARSE = 0x4000,};
enum MACRO_CRITICAL_STRUCTURE {CRITICAL_STRUCTURE_CORRUPTION = 0x109,};
enum MACRO_CmResourceTypeNull {CmResourceTypeNull = 0,CmResourceTypePort = 1,CmResourceTypeInterrupt = 2,};
enum MACRO_DEVICE_DESCRIPTION {DEVICE_DESCRIPTION_VERSION = 0,DEVICE_DESCRIPTION_VERSION1 = 1,DEVICE_DESCRIPTION_VERSION2 = 2,DEVICE_DESCRIPTION_VERSION3 = 3,};
enum MACRO_DOT11_DISASSOCIATE {DOT11_DISASSOCIATE_PEER_REQUEST_REVISION_1 = 1,};
enum MACRO_DOT11_POWER_SAVING {DOT11_POWER_SAVING_NO_POWER_SAVING = 0,DOT11_POWER_SAVING_FAST_PSP = 8,DOT11_POWER_SAVING_MAX_PSP = 16,DOT11_POWER_SAVING_MAXIMUM_LEVEL = 24,};
enum MACRO_DOT11_WFD_DISCOVER {DOT11_WFD_DISCOVER_REQUEST_REVISION_1 = 1,};
enum MACRO_EVENT_WHEA_PROCESS {EVENT_WHEA_PROCESS_TERMINATE_value = 0x29,};
enum MACRO_EnableOfflineDiags {EnableOfflineDiags = 5,};
enum MACRO_FLTFL_REGISTRATION {FLTFL_REGISTRATION_DO_NOT_SUPPORT_SERVICE_STOP = 0x1,FLTFL_REGISTRATION_SUPPORT_NPFS_MSFS = 0x2,FLTFL_IO_OPERATION_NON_CACHED = 0x1,FLTFL_IO_OPERATION_PAGING = 0x2,FLTFL_IO_OPERATION_DO_NOT_UPDATE_BYTE_OFFSET = 0x4,FLTFL_IO_OPERATION_SYNCHRONOUS_PAGING = 0x8,};
enum MACRO_GetEventBuffer_OUT {GetEventBuffer_OUT_HBAStatus_ID = 1,GetEventBuffer_OUT_EventCount_ID = 2,GetEventBuffer_OUT_Events_ID = 3,};
enum MACRO_GetFC3MgmtInfo_OUT {GetFC3MgmtInfo_OUT_HBAStatus_ID = 1,GetFC3MgmtInfo_OUT_MgmtInfo_ID = 2,};
enum MACRO_HARDWARE_INTERRUPT {HARDWARE_INTERRUPT_STORM = 0xF2,};
enum MACRO_HBAFCPBindingEntry {HBAFCPBindingEntry_Type_ID = 1,HBAFCPBindingEntry_FCPId_ID = 2,HBAFCPBindingEntry_ScsiId_ID = 3,};
enum MACRO_INVALID_HIBERNATED {INVALID_HIBERNATED_STATE = 0xBD,};
enum MACRO_IOCTL_CDROM_SIMBAD {IOCTL_CDROM_SIMBAD = 0x2400C,};
enum MACRO_IOCTL_INTERNAL_USB {IOCTL_INTERNAL_USB_SUBMIT_URB = 2228227,IOCTL_INTERNAL_USB_RESET_PORT = 2228231,IOCTL_INTERNAL_USB_GET_ROOTHUB_PDO = 2228239,};
enum MACRO_IOCTL_KS_HANDSHAKE {IOCTL_KS_HANDSHAKE = 0x2F001F,};
enum MACRO_LAST_LINEMEDIAMODE {LAST_LINEMEDIAMODE = 0x4000,};
enum MACRO_LINEADDRESSSHARING {LINEADDRESSSHARING_PRIVATE = 0x1,LINEADDRESSSHARING_BRIDGEDEXCL = 0x2,LINEADDRESSSHARING_BRIDGEDNEW = 0x4,LINEADDRESSSHARING_BRIDGEDSHARED = 0x8,LINEADDRESSSHARING_MONITORED = 0x10,};
enum MACRO_LINECALLPARAMFLAGS {LINECALLPARAMFLAGS_SECURE = 0x1,LINECALLPARAMFLAGS_IDLE = 0x2,LINECALLPARAMFLAGS_BLOCKID = 0x4,LINECALLPARAMFLAGS_ORIGOFFHOOK = 0x8,LINECALLPARAMFLAGS_DESTOFFHOOK = 0x10,};
enum MACRO_LINEDEVSTATUSFLAGS {LINEDEVSTATUSFLAGS_CONNECTED = 0x1,LINEDEVSTATUSFLAGS_MSGWAIT = 0x2,LINEDEVSTATUSFLAGS_INSERVICE = 0x4,LINEDEVSTATUSFLAGS_LOCKED = 0x8,};
enum MACRO_LINEDISCONNECTMODE {LINEDISCONNECTMODE_NORMAL = 0x1,LINEDISCONNECTMODE_UNKNOWN = 0x2,LINEDISCONNECTMODE_REJECT = 0x4,LINEDISCONNECTMODE_PICKUP = 0x8,LINEDISCONNECTMODE_FORWARDED = 0x10,LINEDISCONNECTMODE_BUSY = 0x20,LINEDISCONNECTMODE_NOANSWER = 0x40,LINEDISCONNECTMODE_BADADDRESS = 0x80,LINEDISCONNECTMODE_UNREACHABLE = 0x100,LINEDISCONNECTMODE_CONGESTION = 0x200,LINEDISCONNECTMODE_INCOMPATIBLE = 0x400,LINEDISCONNECTMODE_UNAVAIL = 0x800,LINEDISCONNECTMODE_NODIALTONE = 0x1000,};
enum MACRO_LINEREMOVEFROMCONF {LINEREMOVEFROMCONF_NONE = 0x1,LINEREMOVEFROMCONF_LAST = 0x2,LINEREMOVEFROMCONF_ANY = 0x3,};
enum MACRO_LINETOLLLISTOPTION {LINETOLLLISTOPTION_ADD = 0x1,LINETOLLLISTOPTION_REMOVE = 0x2,};
enum MACRO_LoginNegotiateFail {LoginNegotiateFail = 3,LogoutOthers = 4,};
enum MACRO_MANUALLY_INITIATED {MANUALLY_INITIATED_CRASH1 = 0xDEADDEAD,};
enum MACRO_MAXIMUM_ENCRYPTION {MAXIMUM_ENCRYPTION_VALUE = 0x4,};
enum MACRO_MAX_IPV6_EXTENSION {MAX_IPV6_EXTENSION_HEADER_LENGTH = 2048,IPV6_ROUTER_ALERT_LENGTH = 8,};
enum MACRO_MCACpuRegFileError {MCACpuRegFileError = 3,MCACpuMSError = 4,};
enum MACRO_MSFC_FC4STATISTICS {MSFC_FC4STATISTICS_InputRequests_ID = 1,MSFC_FC4STATISTICS_OutputRequests_ID = 2,MSFC_FC4STATISTICS_ControlRequests_ID = 3,MSFC_FC4STATISTICS_InputMegabytes_ID = 4,MSFC_FC4STATISTICS_OutputMegabytes_ID = 5,MSFC_EventBuffer_EventType_ID = 1,MSFC_EventBuffer_EventInfo_ID = 2,};
enum MACRO_MSG_CorrectedError {MSG_CorrectedError_EventMessage = 0x1,MSG_UncorrectedError_EventMessage = 0x2,MSG_MCAMemHierarchyErr_EventMessage = 0x6,MSG_MCATLBErr_EventMessage = 0x8,MSG_MCABusErr_EventMessage = 0xA,MSG_MCABusTOErr_EventMessage = 0xC,MSG_MCAWDTOErr_EventMessage = 0xE,MSG_MCAExternalErr_EventMessage = 0x10,MSG_MCAFRCErr_EventMessage = 0x11,MSG_PCIeErr_EventMessage = 0x12,MSG_WHEA_ERROR_KEYWORD_KeywordMessage = 0x1000000C,MSG_eventProviderName = 0x90000001,MSG_Init_EventMessage = 0xB0000005,MSG_MCAMemHierarchyWrn_EventMessage = 0xB0000007,MSG_MCATLBWrn_EventMessage = 0xB0000009,MSG_MCABusWrn_EventMessage = 0xB000000B,MSG_MCABusTOWrn_EventMessage = 0xB000000D,MSG_MCAROMParityErr_EventMessage = 0xB000000F,MSG_PCIeWrn_EventMessage = 0xB0000013,MSG_WHEA_EventMessage = 0xB0000014,MSG_MemoryOffline_EventMessage = 0xB000001F,MSG_ProcessTerminate_EventMessage = 0xB0000029,MSG_mapWHEAPending_No = 0xD0000001,MSG_mapWHEAPending_Yes = 0xD0000002,MSG_mapWHEAPlatformDirected_No = 0xD0000003,MSG_mapWHEAPlatformDirected_Yes = 0xD0000004,MSG_mapWHEAUncorrected_No = 0xD0000005,MSG_mapWHEAUncorrected_Yes = 0xD0000006,MSG_mapWHEAPersisted_No = 0xD0000007,MSG_mapWHEAPersisted_Yes = 0xD0000008,};
enum MACRO_OID_DOT11_EXCLUDED {OID_DOT11_EXCLUDED_MAC_ADDRESS_LIST = 234946941,};
enum MACRO_OID_DOT11_INCOMING {OID_DOT11_INCOMING_ASSOCIATION_DECISION = 0xE030106,};
enum MACRO_OID_DOT11_WFD_ENUM {OID_DOT11_WFD_ENUM_DEVICE_LIST = 0xE050106,};
enum MACRO_OID_DOT11_WFD_SEND {OID_DOT11_WFD_SEND_GO_NEGOTIATION_RESPONSE = 0xE05010B,};
enum MACRO_RefreshInformation {RefreshInformation = 3,SendCTPassThru = 4,};
enum MACRO_RemoveRADIUSServer {RemoveRADIUSServer = 104,};
enum MACRO_RxMaximumWorkQueue {RxMaximumWorkQueue = 3,};
enum MACRO_SCSI_SENSE_OPTIONS {SCSI_SENSE_OPTIONS_NONE = 0x0,SCSI_SENSE_OPTIONS_FIXED_FORMAT_IF_UNKNOWN_FORMAT_INDICATED = 0x1,};
enum MACRO_SERVICE_BESTEFFORT {SERVICE_BESTEFFORT = 0x80010000,SERVICE_CONTROLLEDLOAD = 0x80020000,SERVICE_GUARANTEED = 0x80040000,SERVICE_QUALITATIVE = 0x80200000,SERVICE_NO_TRAFFIC_CONTROL = 0x81000000,SERVICE_NO_QOS_SIGNALING = 0x40000000,};
enum MACRO_SessionDigestError {SessionDigestError = 0,SessionCxnTimeoutError = 1,SessionFormatError = 2,};
enum MACRO_SetPersistentEntry {SetPersistentEntry = 7,};
enum MACRO_TRANSACTIONMANAGER {TRANSACTIONMANAGER_QUERY_INFORMATION = 0x1,TRANSACTIONMANAGER_SET_INFORMATION = 0x2,TRANSACTIONMANAGER_RECOVER = 0x4,TRANSACTIONMANAGER_RENAME = 0x8,TRANSACTIONMANAGER_CREATE_RM = 0x10,TRANSACTIONMANAGER_BIND_TRANSACTION = 0x20,TRANSACTIONMANAGER_GENERIC_READ = 0x20001,TRANSACTIONMANAGER_GENERIC_WRITE = 0x2001E,TRANSACTIONMANAGER_GENERIC_EXECUTE = 0x20000,TRANSACTIONMANAGER_ALL_ACCESS = 0xF003F,};
enum MACRO_TRANSACTION_NOTIFY {TRANSACTION_NOTIFY_MASK = 0x3FFFFFFF,TRANSACTION_NOTIFY_PREPREPARE = 0x1,TRANSACTION_NOTIFY_PREPARE = 0x2,TRANSACTION_NOTIFY_COMMIT = 0x4,TRANSACTION_NOTIFY_ROLLBACK = 0x8,TRANSACTION_NOTIFY_PREPREPARE_COMPLETE = 0x10,TRANSACTION_NOTIFY_PREPARE_COMPLETE = 0x20,TRANSACTION_NOTIFY_COMMIT_COMPLETE = 0x40,TRANSACTION_NOTIFY_ROLLBACK_COMPLETE = 0x80,TRANSACTION_NOTIFY_RECOVER = 0x100,TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT = 0x200,TRANSACTION_NOTIFY_DELEGATE_COMMIT = 0x400,TRANSACTION_NOTIFY_RECOVER_QUERY = 0x800,TRANSACTION_NOTIFY_ENLIST_PREPREPARE = 0x1000,TRANSACTION_NOTIFY_LAST_RECOVER = 0x2000,TRANSACTION_NOTIFY_INDOUBT = 0x4000,TRANSACTION_NOTIFY_PROPAGATE_PULL = 0x8000,TRANSACTION_NOTIFY_PROPAGATE_PUSH = 0x10000,TRANSACTION_NOTIFY_MARSHAL = 0x20000,TRANSACTION_NOTIFY_ENLIST_MASK = 0x40000,TRANSACTION_NOTIFY_RM_DISCONNECTED = 0x1000000,TRANSACTION_NOTIFY_TM_ONLINE = 0x2000000,TRANSACTION_NOTIFY_COMMIT_REQUEST = 0x4000000,TRANSACTION_NOTIFY_PROMOTE = 0x8000000,TRANSACTION_NOTIFY_PROMOTE_NEW = 0x10000000,TRANSACTION_NOTIFY_REQUEST_OUTCOME = 0x20000000,TRANSACTION_NOTIFY_COMMIT_FINALIZE = 0x40000000,TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED = 0x1,};
enum MACRO_UNSUPPORTED_FORMAT {UNSUPPORTED_FORMAT = 12,};
enum MACRO_VOLSNAPCONTROLTYPE {VOLSNAPCONTROLTYPE = 0x53,};
enum MACRO_WHEA_UNCORRECTABLE {WHEA_UNCORRECTABLE_ERROR = 0x124,};
typedef struct _MF_ENUMERATION_INTERFACE MF_ENUMERATION_INTERFACE;
typedef struct _MM_PHYSICAL_ADDRESS_LIST MM_PHYSICAL_ADDRESS_LIST;
typedef struct _MODE_RIGID_GEOMETRY_PAGE MODE_RIGID_GEOMETRY_PAGE;
typedef struct _MPIO_ADAPTER_INFORMATION MPIO_ADAPTER_INFORMATION;
typedef struct _MP_DEVICE_DATA_SET_RANGE MP_DEVICE_DATA_SET_RANGE;
typedef struct _MSDiskDriver_Performance MSDiskDriver_Performance;
typedef struct _MSMouse_ClassInformation MSMouse_ClassInformation;
typedef struct _MSNdis_80211_NetworkType MSNdis_80211_NetworkType;
typedef struct _MSNdis_AtmReceiveCellsOk MSNdis_AtmReceiveCellsOk;
typedef struct _MSNdis_HDSplitParameters MSNdis_HDSplitParameters;
typedef struct _MSNdis_PMCapabilityState MSNdis_PMCapabilityState;
typedef struct _MSNdis_PciDeviceProperty MSNdis_PciDeviceProperty;
typedef struct _MSNdis_ReceiveFilterInfo MSNdis_ReceiveFilterInfo;
typedef struct _MSNdis_TransmitBlockSize MSNdis_TransmitBlockSize;
typedef struct _MSNdis_VendorDescription MSNdis_VendorDescription;
typedef struct _MSNdis_WmiIPSecOffloadV1 MSNdis_WmiIPSecOffloadV1;
typedef struct _MSPower_DeviceWakeEnable MSPower_DeviceWakeEnable;
typedef struct _MSSmBios_RawSMBiosTables MSSmBios_RawSMBiosTables;
typedef struct _MSV1_0_ENUMUSERS_REQUEST MSV1_0_ENUMUSERS_REQUEST;
typedef struct _MSV1_0_INTERACTIVE_LOGON MSV1_0_INTERACTIVE_LOGON;
typedef struct _MSiSCSI_HBASessionConfig MSiSCSI_HBASessionConfig;
typedef struct _MSiSCSI_PersistentLogins MSiSCSI_PersistentLogins;
typedef struct _NAMED_PIPE_INFORMATION_1 NAMED_PIPE_INFORMATION_1;
typedef struct _NDISTAPI_CHARACTERISTICS NDISTAPI_CHARACTERISTICS;
typedef struct _NDIS_802_11_VARIABLE_IEs NDIS_802_11_VARIABLE_IEs;
typedef struct _NDIS_HD_SPLIT_ATTRIBUTES NDIS_HD_SPLIT_ATTRIBUTES;
typedef struct _NDIS_HD_SPLIT_PARAMETERS NDIS_HD_SPLIT_PARAMETERS;
typedef struct _NDIS_IP_OPER_STATUS_INFO NDIS_IP_OPER_STATUS_INFO;
typedef struct _NDIS_PM_PROTOCOL_OFFLOAD NDIS_PM_PROTOCOL_OFFLOAD;
typedef struct _NDIS_RECEIVE_FILTER_INFO NDIS_RECEIVE_FILTER_INFO;
typedef struct _NDIS_RECEIVE_QUEUE_STATE NDIS_RECEIVE_QUEUE_STATE;
typedef struct _NDIS_STATISTICS_VALUE_EX NDIS_STATISTICS_VALUE_EX;
typedef struct _NDIS_TAPI_GET_ADDRESS_ID NDIS_TAPI_GET_ADDRESS_ID;
typedef struct _NDIS_TAPI_GET_DEV_CONFIG NDIS_TAPI_GET_DEV_CONFIG;
typedef struct _NDIS_TAPI_MONITOR_DIGITS NDIS_TAPI_MONITOR_DIGITS;
typedef struct _NDIS_TAPI_SET_DEV_CONFIG NDIS_TAPI_SET_DEV_CONFIG;
typedef struct _NDIS_TAPI_SET_MEDIA_MODE NDIS_TAPI_SET_MEDIA_MODE;
typedef struct _NDIS_WAN_GET_BRIDGE_INFO NDIS_WAN_GET_BRIDGE_INFO;
typedef struct _NDIS_WAN_SET_BRIDGE_INFO NDIS_WAN_SET_BRIDGE_INFO;
typedef struct _NDIS_WMI_PM_ADMIN_CONFIG NDIS_WMI_PM_ADMIN_CONFIG;
typedef struct _NDIS_WWAN_AUTH_CHALLENGE NDIS_WWAN_AUTH_CHALLENGE;
typedef struct _NDIS_WWAN_HOME_PROVIDER2 NDIS_WWAN_HOME_PROVIDER2;
typedef struct nd_router_solicit ND_ROUTER_SOLICIT_HEADER;
typedef struct _NETWORK_OPEN_ECP_CONTEXT NETWORK_OPEN_ECP_CONTEXT;
typedef struct _NET_BUFFER_SHARED_MEMORY NET_BUFFER_SHARED_MEMORY;
typedef struct _NET_PHYSICAL_LOCATION_LH NET_PHYSICAL_LOCATION_LH;
typedef struct _NL_BANDWIDTH_INFORMATION NL_BANDWIDTH_INFORMATION;
typedef struct _NL_INTERFACE_OFFLOAD_ROD NL_INTERFACE_OFFLOAD_ROD;
typedef struct _NOTIFICATION_BUSY_STATUS NOTIFICATION_BUSY_STATUS;
typedef struct _OB_CALLBACK_REGISTRATION OB_CALLBACK_REGISTRATION;
typedef struct _ACPI_INTERFACE_STANDARD *PACPI_INTERFACE_STANDARD;
typedef IAdapterPowerManagement2 *PADAPTERPOWERMANAGEMENT2;
typedef IAdapterPowerManagement3 *PADAPTERPOWERMANAGEMENT3;
typedef struct _API_SET_NAMESPACE_ARRAY *PAPI_SET_NAMESPACE_ARRAY;
typedef struct _API_SET_NAMESPACE_ENTRY *PAPI_SET_NAMESPACE_ENTRY;
typedef struct _PARALLEL_PNP_INFORMATION PARALLEL_PNP_INFORMATION;
typedef struct _PARTITION_INFORMATION_EX PARTITION_INFORMATION_EX;
typedef struct _ATA_PASS_THROUGH_DIRECT *PATA_PASS_THROUGH_DIRECT;
typedef struct _7069A3AF9C526B33740CA7D5809B477E *PBATTERY_REPORTING_SCALE;
typedef struct _BDA_CAS_CLOSE_MMIDIALOG *PBDA_CAS_CLOSE_MMIDIALOG;
typedef struct _BDA_TEMPLATE_CONNECTION *PBDA_TEMPLATE_CONNECTION;
typedef struct _BOOTDISK_INFORMATION_EX *PBOOTDISK_INFORMATION_EX;
typedef struct _57C5023E6D7E701595220C2F2C785C20 *PBULK_SECURITY_TEST_DATA;
typedef struct _9452773C7C9658DF0A7C90A31311AC2C *PBUS_INTERFACE_REFERENCE;
typedef struct _CACHE_MANAGER_CALLBACKS *PCACHE_MANAGER_CALLBACKS;
typedef struct _CDROM_STREAMING_CONTROL *PCDROM_STREAMING_CONTROL;
typedef struct _CDROM_SUB_Q_DATA_FORMAT *PCDROM_SUB_Q_DATA_FORMAT;
typedef struct _CDROM_TOC_FULL_TOC_DATA *PCDROM_TOC_FULL_TOC_DATA;
typedef struct _CDVD_CHALLENGE_KEY_DATA *PCDVD_CHALLENGE_KEY_DATA;
typedef struct _CHANGER_EXCHANGE_MEDIUM *PCHANGER_EXCHANGE_MEDIUM;
typedef union _PCI_EXPRESS_SRIOV_STATUS PCI_EXPRESS_SRIOV_STATUS;
typedef struct _CM_KEYBOARD_DEVICE_DATA *PCM_KEYBOARD_DEVICE_DATA;
typedef struct _CM_PNP_BIOS_DEVICE_NODE *PCM_PNP_BIOS_DEVICE_NODE;
typedef struct _COMMON_DEVICE_EXTENSION *PCOMMON_DEVICE_EXTENSION;
typedef struct _CO_GET_CALL_INFORMATION *PCO_GET_CALL_INFORMATION;
typedef struct _9EB91D8C4EA5FEB95803C89041761FE9 *PCREATE_USN_JOURNAL_DATA;
typedef struct _CSV_QUERY_FILE_REVISION *PCSV_QUERY_FILE_REVISION;
typedef union _PCW_CALLBACK_INFORMATION PCW_CALLBACK_INFORMATION;
typedef struct _CreateVirtualPortEx_OUT *PCreateVirtualPortEx_OUT;
typedef struct _DEBUGGING_DEVICE_IN_USE *PDEBUGGING_DEVICE_IN_USE;
typedef struct _F3B7485C952161763EA52E3754EBFEF6 *PDEBUG_DEVICE_DESCRIPTOR;
typedef struct _4A08272B00433CD7EE8E1AF4F71BCC64 *PDELETE_USN_JOURNAL_DATA;
typedef struct _DEVICE_POWER_DESCRIPTOR *PDEVICE_POWER_DESCRIPTOR;
typedef struct _DISABLE_ERROR_SOURCE_IN *PDISABLE_ERROR_SOURCE_IN;
typedef struct DOT11_EXTSTA_ATTRIBUTES *PDOT11_EXTSTA_ATTRIBUTES;
typedef struct DOT11_EXTSTA_CAPABILITY *PDOT11_EXTSTA_CAPABILITY;
typedef struct DOT11_KEY_ALGO_TKIP_MIC *PDOT11_KEY_ALGO_TKIP_MIC;
typedef struct _DOT11_PER_MSDU_COUNTERS *PDOT11_PER_MSDU_COUNTERS;
typedef struct DOT11_PRIVACY_EXEMPTION *PDOT11_PRIVACY_EXEMPTION;
typedef struct _DOT11_STATUS_INDICATION *PDOT11_STATUS_INDICATION;
typedef struct _DOT11_SUPPORTED_ANTENNA *PDOT11_SUPPORTED_ANTENNA;
typedef struct _DOT11_VWIFI_COMBINATION *PDOT11_VWIFI_COMBINATION;
typedef struct _DOT11_WFD_ADDITIONAL_IE *PDOT11_WFD_ADDITIONAL_IE;
typedef struct _DOT11_WME_AC_PARAMETERS *PDOT11_WME_AC_PARAMETERS;
typedef struct _DSM_Load_Balance_Policy *PDSM_Load_Balance_Policy;
typedef struct _DXGK_CHILD_CAPABILITIES *PDXGK_CHILD_CAPABILITIES;
typedef struct _DXGK_CHILD_CONTAINER_ID *PDXGK_CHILD_CONTAINER_ID;
typedef struct _DXGK_GENERIC_DESCRIPTOR *PDXGK_GENERIC_DESCRIPTOR;
typedef struct _EISA_PORT_CONFIGURATION *PEISA_PORT_CONFIGURATION;
typedef struct _ENABLE_ERROR_SOURCE_OUT *PENABLE_ERROR_SOURCE_OUT;
typedef struct _EVENT_FILTER_DESCRIPTOR *PEVENT_FILTER_DESCRIPTOR;
typedef struct _FAILURE_PREDICTION_INFO *PFAILURE_PREDICTION_INFO;
typedef struct _FILE_ACCESS_INFORMATION *PFILE_ACCESS_INFORMATION;
typedef struct _FILE_GET_EA_INFORMATION *PFILE_GET_EA_INFORMATION;
typedef struct _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;
typedef struct _FILE_RENAME_INFORMATION *PFILE_RENAME_INFORMATION;
typedef struct _FILE_STREAM_INFORMATION *PFILE_STREAM_INFORMATION;
typedef struct _FILTER_FULL_INFORMATION *PFILTER_FULL_INFORMATION;
typedef struct _FLT_CALLBACK_DATA_QUEUE *PFLT_CALLBACK_DATA_QUEUE;
typedef struct _FLT_RELATED_CONTEXTS_EX *PFLT_RELATED_CONTEXTS_EX;
typedef struct _FORMATTED_CAPACITY_LIST *PFORMATTED_CAPACITY_LIST;
typedef struct _FSVIDEO_CURSOR_POSITION *PFSVIDEO_CURSOR_POSITION;
typedef struct _FS_FILTER_CALLBACK_DATA *PFS_FILTER_CALLBACK_DATA;
typedef struct _GetBindingCapability_IN *PGetBindingCapability_IN;
typedef struct _GetFcpTargetMapping_OUT *PGetFcpTargetMapping_OUT;
typedef struct _GetPathConfiguration_IN *PGetPathConfiguration_IN;
typedef struct _GetPresharedKeyForId_IN *PGetPresharedKeyForId_IN;
typedef struct _HW_STREAM_REQUEST_BLOCK *PHW_STREAM_REQUEST_BLOCK;
typedef struct _PHY_CONFIGURATION_PACKET PHY_CONFIGURATION_PACKET;
typedef struct _IDE_SCATTER_GATHER_LIST *PIDE_SCATTER_GATHER_LIST;
typedef struct _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER32;
typedef struct _IMAGE_OPTIONAL_HEADER64 *PIMAGE_OPTIONAL_HEADER64;
typedef struct _IO_SESSION_CONNECT_INFO *PIO_SESSION_CONNECT_INFO;
typedef struct _IPSEC_OFFLOAD_V2_ADD_SA *PIPSEC_OFFLOAD_V2_ADD_SA;
typedef struct _ISCSI_DiscoveredTarget2 *PISCSI_DiscoveredTarget2;
typedef struct _ISCSI_SessionStaticInfo *PISCSI_SessionStaticInfo;
typedef struct _ISCSI_TargetPortalGroup *PISCSI_TargetPortalGroup;
typedef struct _2FCB7B16F35A994219C907239F9496DC *PKSAC3_ERROR_CONCEALMENT;
typedef struct _66CF5E28886A6CE6C0E44A3DF6E2CD53 *PKSAUDIO_COPY_PROTECTION;
typedef struct _tagKSJACK_SINK_INFORMATION *PKSJACK_SINK_INFORMATION;
typedef struct _KSM_BDA_ISDBCAS_REQUEST *PKSM_BDA_ISDBCAS_REQUEST;
typedef struct _KSPROCESSPIN_INDEXENTRY *PKSPROCESSPIN_INDEXENTRY;
typedef struct _48207AC35C517F533F0BE91ADB0B9FCA *PKSPROPERTY_TUNER_CAPS_S;
typedef struct _85CBE24E9ED55DBB779718CA5D73A273 *PKSPROPERTY_TUNER_MODE_S;
typedef struct _KSSTREAM_POINTER_OFFSET *PKSSTREAM_POINTER_OFFSET;
typedef struct tagKS_DATAFORMAT_IMAGEINFO *PKS_DATAFORMAT_IMAGEINFO;
typedef struct tagKS_DATARANGE_H264_VIDEO *PKS_DATARANGE_H264_VIDEO;
typedef struct _MF_VARYING_RESOURCE_MAP *PMF_VARYING_RESOURCE_MAP;
typedef struct _MODE_DATA_COMPRESS_PAGE *PMODE_DATA_COMPRESS_PAGE;
typedef struct _MODE_DEVICE_CONFIG_PAGE *PMODE_DEVICE_CONFIG_PAGE;
typedef struct _MODE_FLEXIBLE_DISK_PAGE *PMODE_FLEXIBLE_DISK_PAGE;
typedef struct _MODE_PARAMETER_HEADER10 *PMODE_PARAMETER_HEADER10;
typedef struct _MODE_READ_RECOVERY_PAGE *PMODE_READ_RECOVERY_PAGE;
typedef struct _MOUNTMGR_SET_AUTO_MOUNT *PMOUNTMGR_SET_AUTO_MOUNT;
typedef struct _MOUSE_UNIT_ID_PARAMETER *PMOUSE_UNIT_ID_PARAMETER;
typedef struct _MSFC_DH_Chap_Parameters *PMSFC_DH_Chap_Parameters;
typedef struct _MSMCAEvent_InvalidError *PMSMCAEvent_InvalidError;
typedef struct _MSNdis_80211_Statistics *PMSNdis_80211_Statistics;
typedef struct _MSNdis_CoHardwareStatus *PMSNdis_CoHardwareStatus;
typedef struct _MSNdis_CoMediaSupported *PMSNdis_CoMediaSupported;
typedef struct _MSNdis_CoTransmitPdusOk *PMSNdis_CoTransmitPdusOk;
typedef struct _MSNdis_CurrentLookahead *PMSNdis_CurrentLookahead;
typedef struct _MSNdis_EnumerateAdapter *PMSNdis_EnumerateAdapter;
typedef struct _MSNdis_MaximumFrameSize *PMSNdis_MaximumFrameSize;
typedef struct _MSNdis_MaximumLookahead *PMSNdis_MaximumLookahead;
typedef struct _MSNdis_MaximumTotalSize *PMSNdis_MaximumTotalSize;
typedef struct _MSNdis_NetworkLinkSpeed *PMSNdis_NetworkLinkSpeed;
typedef struct _MSNdis_ReceiveBlockSize *PMSNdis_ReceiveBlockSize;
typedef struct _MSNdis_ReceiveQueueInfo *PMSNdis_ReceiveQueueInfo;
typedef struct _MSSmBios_SMBiosEventlog *PMSSmBios_SMBiosEventlog;
typedef struct _MSiSCSI_BootInformation *PMSiSCSI_BootInformation;
typedef struct _MSiSCSI_DiscoveryConfig *PMSiSCSI_DiscoveryConfig;
typedef struct _MSiSCSI_PortalInfoClass *PMSiSCSI_PortalInfoClass;
typedef struct _NDIS_OFFLOAD_PARAMETERS *PNDIS_OFFLOAD_PARAMETERS;
typedef struct _NDIS_RECEIVE_QUEUE_INFO *PNDIS_RECEIVE_QUEUE_INFO;
typedef struct _NDIS_RESTART_ATTRIBUTES *PNDIS_RESTART_ATTRIBUTES;
typedef struct _NDIS_RSS_PROCESSOR_INFO *PNDIS_RSS_PROCESSOR_INFO;
typedef struct _NDIS_SG_DMA_DESCRIPTION *PNDIS_SG_DMA_DESCRIPTION;
typedef struct _NDIS_TAPI_CONFIG_DIALOG *PNDIS_TAPI_CONFIG_DIALOG;
typedef struct _NDIS_TAPI_GATHER_DIGITS *PNDIS_TAPI_GATHER_DIGITS;
typedef struct _NDIS_TAPI_GET_CALL_INFO *PNDIS_TAPI_GET_CALL_INFO;
typedef struct _NDIS_WAN_GET_STATS_INFO *PNDIS_WAN_GET_STATS_INFO;
typedef struct _NDIS_WMI_GROUP_AFFINITY *PNDIS_WMI_GROUP_AFFINITY;
typedef struct _NDIS_WWAN_AUTH_RESPONSE *PNDIS_WWAN_AUTH_RESPONSE;
typedef struct _NDIS_WWAN_CONTEXT_STATE *PNDIS_WWAN_CONTEXT_STATE;
typedef struct _NDIS_WWAN_HOME_PROVIDER *PNDIS_WWAN_HOME_PROVIDER;
typedef struct nd_router_advert *PND_ROUTER_ADVERT_HEADER;
typedef struct _NET_BUFFER_LIST_CONTEXT *PNET_BUFFER_LIST_CONTEXT;
typedef struct _NODE_TYPE_CODE_AND_SIZE *PNODE_TYPE_CODE_AND_SIZE;
typedef struct _6A5B75FE3CDFCD80FCDD67FCD1AED8F3 *PNTFS_VOLUME_DATA_BUFFER;
typedef struct _OBJECT_NAME_INFORMATION *POBJECT_NAME_INFORMATION;
typedef struct _OFFLOAD_IPSEC_DELETE_SA *POFFLOAD_IPSEC_DELETE_SA;
typedef struct _POWER_MONITOR_INVOCATION POWER_MONITOR_INVOCATION;
typedef struct _PCI_CAPABILITIES_HEADER *PPCI_CAPABILITIES_HEADER;
typedef union _PCI_EXPRESS_ACS_CONTROL *PPCI_EXPRESS_ACS_CONTROL;
typedef struct _CLS_ARCHIVE_DESCRIPTOR **PPCLS_ARCHIVE_DESCRIPTOR;
typedef struct _PCW_COUNTER_INFORMATION *PPCW_COUNTER_INFORMATION;
typedef struct _PERF_CONFIGURATION_DATA *PPERF_CONFIGURATION_DATA;
typedef struct _8734295609DAB040198410EB4CD6E51F PPM_IDLE_STATE_BUCKET_EX;
typedef struct _D74197C1B01F8299C3B95153261D4A94 PPM_THERMAL_POLICY_EVENT;
typedef struct _8F1F2360283DF2289B54980815148EF3 PPM_WMI_LEGACY_PERFSTATE;
typedef struct _PNP_REPLACE_MEMORY_LIST *PPNP_REPLACE_MEMORY_LIST;
typedef struct _POWER_SESSION_RIT_STATE *PPOWER_SESSION_RIT_STATE;
typedef struct _BD86F746C2C01DD8A428D9C33DA8EFBD *PPPM_THERMALCHANGE_EVENT;
typedef struct _QUERY_FILE_LAYOUT_INPUT *PQUERY_FILE_LAYOUT_INPUT;
typedef struct _RDBSS_STARTSTOP_CONTEXT_ *PRDBSS_STARTSTOP_CONTEXT;
typedef struct _5174F44B3769759428827427236E3006 *PREFS_VOLUME_DATA_BUFFER;
typedef struct _062D643B57BB006C3005C5FAB86889C0 PROCESSOR_IDLESTATE_INFO;
typedef struct _RemoveVirtualPortEx_OUT *PRemoveVirtualPortEx_OUT;
typedef struct _S3PT_PERFORMANCE_RECORD *PS3PT_PERFORMANCE_RECORD;
typedef struct _SCARD_CARD_CAPABILITIES *PSCARD_CARD_CAPABILITIES;
typedef struct _E6BAC8160F506AD645132E93AB36F89C *PSCSIWMI_REQUEST_CONTEXT;
typedef struct _SD_GLOBAL_CHANGE_OUTPUT *PSD_GLOBAL_CHANGE_OUTPUT;
typedef struct _SD_RW_EXTENDED_ARGUMENT *PSD_RW_EXTENDED_ARGUMENT;
typedef struct _SECURITY_CLIENT_CONTEXT *PSECURITY_CLIENT_CONTEXT;
typedef struct _22CB949541BBA3A46A33E43835E46CAD *PSET_POWER_SETTING_VALUE;
typedef struct _SID_AND_ATTRIBUTES_HASH *PSID_AND_ATTRIBUTES_HASH;
typedef struct SMHBA_AdapterAttributes *PSMHBA_ADAPTERATTRIBUTES;
typedef struct SMHBA_LibraryAttributes *PSMHBA_LIBRARYATTRIBUTES;
typedef struct _SRBEX_DATA_SCSI_CDB_VAR *PSRBEX_DATA_SCSI_CDB_VAR;
typedef struct _STORAGE_ERRORLOG_PACKET *PSTORAGE_ERRORLOG_PACKET;
typedef struct _STORAGE_PREDICT_FAILURE *PSTORAGE_PREDICT_FAILURE;
typedef struct _STORAGE_TRACE_INIT_INFO *PSTORAGE_TRACE_INIT_INFO;
typedef struct _STOR_POFX_POWER_CONTROL *PSTOR_POFX_POWER_CONTROL;
typedef struct _STOR_POWER_SETTING_INFO *PSTOR_POWER_SETTING_INFO;
typedef struct _STOR_SYSTEM_POWER_HINTS *PSTOR_SYSTEM_POWER_HINTS;
typedef struct _STOR_UNIT_CONTROL_POWER *PSTOR_UNIT_CONTROL_POWER;
typedef struct _SecPkgContext_UserFlags *PSecPkgContext_UserFlags;
typedef struct _SetCHAPSharedSecret_OUT *PSetCHAPSharedSecret_OUT;
typedef struct _SetGenerationalGuid_OUT *PSetGenerationalGuid_OUT;
typedef struct _SetGroupPresharedKey_IN *PSetGroupPresharedKey_IN;
typedef struct _SetInitiatorNodeName_IN *PSetInitiatorNodeName_IN;
typedef struct _SetLoadBalancePolicy_IN *PSetLoadBalancePolicy_IN;
typedef struct _SetPresharedKeyForId_IN *PSetPresharedKeyForId_IN;
typedef struct _TDI_PROVIDER_STATISTICS *PTDI_PROVIDER_STATISTICS;
typedef struct _TDI_REQUEST_KERNEL_SEND *PTDI_REQUEST_KERNEL_SEND;
typedef struct _TRANSPORT_HEADER_OFFSET *PTRANSPORT_HEADER_OFFSET;
typedef struct _USBD_DEVICE_INFORMATION *PUSBD_DEVICE_INFORMATION;
typedef struct _USBD_STREAM_INFORMATION *PUSBD_STREAM_INFORMATION;
typedef struct _USB_ENDPOINT_DESCRIPTOR *PUSB_ENDPOINT_DESCRIPTOR;
typedef struct _USB_EXTPORT_INFORMATION_0 *PUSB_EXTPORT_INFORMATION;
typedef struct _407A2FFEB90671F2460E9DB49EB613D5 *PVIDEO_BRIGHTNESS_POLICY;
typedef struct _VIDEO_CURSOR_ATTRIBUTES *PVIDEO_CURSOR_ATTRIBUTES;
typedef struct _VIDEO_PORT_AGP_SERVICES *PVIDEO_PORT_AGP_SERVICES;
typedef struct _VPCI_INTERFACE_STANDARD *PVPCI_INTERFACE_STANDARD;
typedef struct _VPD_IDENTIFICATION_PAGE *PVPD_IDENTIFICATION_PAGE;
typedef union _WHEA_ERROR_PACKET_FLAGS *PWHEA_ERROR_PACKET_FLAGS;
typedef struct _WHEA_IPF_CMC_DESCRIPTOR *PWHEA_IPF_CMC_DESCRIPTOR;
typedef struct _WHEA_IPF_CPE_DESCRIPTOR *PWHEA_IPF_CPE_DESCRIPTOR;
typedef struct _WHEA_IPF_MCA_DESCRIPTOR *PWHEA_IPF_MCA_DESCRIPTOR;
typedef union _WHEA_NOTIFICATION_FLAGS *PWHEA_NOTIFICATION_FLAGS;
typedef union _WHEA_PCIEXPRESS_VERSION *PWHEA_PCIEXPRESS_VERSION;
typedef struct _WHEA_X64_REGISTER_STATE *PWHEA_X64_REGISTER_STATE;
typedef struct _WHEA_X86_REGISTER_STATE *PWHEA_X86_REGISTER_STATE;
typedef struct _WHEA_XPF_CMC_DESCRIPTOR *PWHEA_XPF_CMC_DESCRIPTOR;
typedef struct _WHEA_XPF_MCE_DESCRIPTOR *PWHEA_XPF_MCE_DESCRIPTOR;
typedef struct _WHEA_XPF_NMI_DESCRIPTOR *PWHEA_XPF_NMI_DESCRIPTOR;
typedef struct _WSK_DATAGRAM_INDICATION *PWSK_DATAGRAM_INDICATION;
typedef struct _WWAN_AUTH_AKAP_RESPONSE *PWWAN_AUTH_AKAP_RESPONSE;
typedef struct _WWAN_AUTH_AKA_CHALLENGE *PWWAN_AUTH_AKA_CHALLENGE;
typedef struct _WWAN_AUTH_SIM_CHALLENGE *PWWAN_AUTH_SIM_CHALLENGE;
typedef struct _WWAN_REGISTRATION_STATE *PWWAN_REGISTRATION_STATE;
typedef struct _WWAN_SERVICE_ACTIVATION *PWWAN_SERVICE_ACTIVATION;
typedef struct _WWAN_SET_REGISTER_STATE *PWWAN_SET_REGISTER_STATE;
typedef struct _WmiEnumReceiveQueues_IN *PWmiEnumReceiveQueues_IN;
typedef struct _WmiMonitorColorXYZinCIE *PWmiMonitorColorXYZinCIE;
typedef struct _WmiSetLinkParameters_IN *PWmiSetLinkParameters_IN;
typedef struct _WmiSetPortParameters_IN *PWmiSetPortParameters_IN;
typedef struct _Q2931_CALLMGR_PARAMETERS Q2931_CALLMGR_PARAMETERS;
typedef struct _QUERY_FILE_LAYOUT_OUTPUT QUERY_FILE_LAYOUT_OUTPUT;
typedef struct _383365F5B01CBBB641F2B03EBB603E45 READ_USN_JOURNAL_DATA_V0;
typedef struct _D7325426B7F06BB5A63E402FDFE43953 READ_USN_JOURNAL_DATA_V1;
typedef struct _REG_LOAD_KEY_INFORMATION REG_LOAD_KEY_INFORMATION;
typedef struct _REG_CREATE_KEY_INFORMATION REG_OPEN_KEY_INFORMATION;
typedef struct _REG_SAVE_KEY_INFORMATION REG_SAVE_KEY_INFORMATION;
typedef struct _REPARSE_GUID_DATA_BUFFER REPARSE_GUID_DATA_BUFFER;
typedef struct _004D1690B92AB6C871F002F03A8A3150 REQ_NT_SET_FS_QUOTA_INFO;
typedef struct _RTL_QUERY_REGISTRY_TABLE RTL_QUERY_REGISTRY_TABLE;
typedef struct _RX_WORK_QUEUE_DISPATCHER_ RX_WORK_QUEUE_DISPATCHER;
typedef struct _RemovePersistentEntry_IN RemovePersistentEntry_IN;
typedef struct _RemovePersistentLogin_IN RemovePersistentLogin_IN;
typedef struct _SCSI_PASS_THROUGH_DIRECT SCSI_PASS_THROUGH_DIRECT;
typedef struct _SCSI_POWER_REQUEST_BLOCK SCSI_POWER_REQUEST_BLOCK;
typedef struct _SDBUS_INTERFACE_STANDARD SDBUS_INTERFACE_STANDARD;
typedef struct _SECURITY_SUBJECT_CONTEXT SECURITY_SUBJECT_CONTEXT;
typedef union _SES_PROTOCOL_INFORMATION SES_PROTOCOL_INFORMATION;
typedef struct _SES_SAS_SLOT_INFORMATION SES_SAS_SLOT_INFORMATION;
typedef struct _SET_ERROR_SOURCE_INFO_IN SET_ERROR_SOURCE_INFO_IN;
typedef struct _SET_PARTITION_ATTRIBUTES SET_PARTITION_ATTRIBUTES;
typedef struct _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;
typedef struct _SILO_DRIVER_CAPABILITIES SILO_DRIVER_CAPABILITIES;
typedef struct SMHBA_ProtocolStatistics SMHBA_PROTOCOLSTATISTICS;
typedef struct _SOCKET_SECURITY_SETTINGS SOCKET_SECURITY_SETTINGS;
typedef struct _SRBEX_DATA_BIDIRECTIONAL SRBEX_DATA_BIDIRECTIONAL;
typedef struct _STOR_DEVICE_CAPABILITIES STOR_DEVICE_CAPABILITIES;
typedef struct _STOR_FREE_EL_RECORD_ARGS STOR_FREE_EL_RECORD_ARGS;
typedef struct _STOR_LOG_DIAG_EVENT_ARGS STOR_LOG_DIAG_EVENT_ARGS;
typedef struct _STOR_POFX_ACTIVE_CONTEXT STOR_POFX_ACTIVE_CONTEXT;
typedef struct _STOR_POFX_FSTATE_CONTEXT STOR_POFX_FSTATE_CONTEXT;
typedef struct _STOR_SCATTER_GATHER_LIST STOR_SCATTER_GATHER_LIST;
typedef struct _STOR_WMI_REGCONTROL_ARGS STOR_WMI_REGCONTROL_ARGS;
typedef struct _STREAM_METHOD_DESCRIPTOR STREAM_METHOD_DESCRIPTOR;
typedef struct _SWENUM_INSTALL_INTERFACE SWENUM_INSTALL_INTERFACE;
typedef struct _SYSTEM_POWER_INFORMATION SYSTEM_POWER_INFORMATION;
typedef struct _SecPkgContext_AuthorityW SecPkgContext_AuthorityW;
typedef struct _SecPkgContext_LogoffTime SecPkgContext_LogoffTime;
typedef struct _SecPkgContext_NegoStatus SecPkgContext_NegoStatus;
typedef struct _SecPkgContext_ProtoInfoW SecPkgContext_ProtoInfoW;
typedef struct _SecPkgContext_SessionKey SecPkgContext_SessionKey;
typedef struct _SecPkgCredentials_NamesW SecPkgCredentials_NamesW;
typedef struct _SetGroupPresharedKey_OUT SetGroupPresharedKey_OUT;
typedef struct _SetInitiatorNodeName_OUT SetInitiatorNodeName_OUT;
typedef struct _SetLoadBalancePolicy_OUT SetLoadBalancePolicy_OUT;
typedef struct _SetPresharedKeyForId_OUT SetPresharedKeyForId_OUT;
typedef struct _SetRADIUSSharedSecret_IN SetRADIUSSharedSecret_IN;
typedef struct _TOKEN_ACCESS_INFORMATION TOKEN_ACCESS_INFORMATION;
typedef struct _TRANSACTION_NOTIFICATION TRANSACTION_NOTIFICATION;
typedef struct _USBC_FUNCTION_DESCRIPTOR USBC_FUNCTION_DESCRIPTOR;
typedef struct _USBD_VERSION_INFORMATION USBD_VERSION_INFORMATION;
typedef struct _USB_BUS_INTERFACE_HUB_V0 USB_BUS_INTERFACE_HUB_V0;
typedef struct _USB_BUS_INTERFACE_HUB_V1 USB_BUS_INTERFACE_HUB_V1;
typedef struct _USB_BUS_INTERFACE_HUB_V2 USB_BUS_INTERFACE_HUB_V2;
typedef struct _USB_BUS_INTERFACE_HUB_V3 USB_BUS_INTERFACE_HUB_V3;
typedef struct _USB_BUS_INTERFACE_HUB_V4 USB_BUS_INTERFACE_HUB_V4;
typedef struct _USB_BUS_INTERFACE_HUB_V5 USB_BUS_INTERFACE_HUB_V5;
typedef struct _USB_BUS_INTERFACE_HUB_V6 USB_BUS_INTERFACE_HUB_V6;
typedef struct _USB_BUS_INTERFACE_HUB_V7 USB_BUS_INTERFACE_HUB_V7;
typedef struct _USB_BUS_INTERFACE_HUB_V8 USB_BUS_INTERFACE_HUB_V8;
typedef struct _USB_CD_ERROR_INFORMATION USB_CD_ERROR_INFORMATION;
typedef struct _USB_DEVICE_INFORMATION_0 USB_DEVICE_INFORMATION_0;
typedef struct _USB_EXTHUB_INFORMATION_0 USB_EXTHUB_INFORMATION_0;
typedef union _USB_HIGH_SPEED_MAXPACKET USB_HIGH_SPEED_MAXPACKET;
typedef struct _USB_ID_ERROR_INFORMATION USB_ID_ERROR_INFORMATION;
typedef struct _USB_INTERFACE_DESCRIPTOR USB_INTERFACE_DESCRIPTOR;
typedef struct _VIDEO_COLOR_CAPABILITIES VIDEO_COLOR_CAPABILITIES;
typedef struct tag_video_geterrortext_parms VIDEO_GETERRORTEXT_PARMS;
typedef struct _VIDEO_MEMORY_INFORMATION VIDEO_MEMORY_INFORMATION;
typedef struct tagVIDEO_MONITOR_DESCRIPTOR VIDEO_MONITOR_DESCRIPTOR;
typedef struct _VIDEO_POINTER_ATTRIBUTES VIDEO_POINTER_ATTRIBUTES;
typedef struct _VIDEO_PORT_AGP_INTERFACE VIDEO_PORT_AGP_INTERFACE;
typedef struct _VIDEO_PORT_I2C_INTERFACE VIDEO_PORT_I2C_INTERFACE;
typedef struct _VIDEO_X86_BIOS_ARGUMENTS VIDEO_X86_BIOS_ARGUMENTS;
typedef struct _VPD_ATA_INFORMATION_PAGE VPD_ATA_INFORMATION_PAGE;
typedef struct _VPD_SUPPORTED_PAGES_PAGE VPD_SUPPORTED_PAGES_PAGE;
typedef struct _WHEA_ERROR_RECORD_HEADER WHEA_ERROR_RECORD_HEADER;
typedef struct _WMI_TAPE_PROBLEM_WARNING WMI_TAPE_PROBLEM_WARNING;
typedef struct _E7F5496ECA9568683CB70A9C1E22006D WRITE_USING_TOKEN_HEADER;
typedef struct _WSK_EXTENSION_CONTROL_IN WSK_EXTENSION_CONTROL_IN;
typedef struct _WWAN_AUTH_AKAP_CHALLENGE WWAN_AUTH_AKAP_CHALLENGE;
typedef struct _WmiEnumReceiveFilters_IN WmiEnumReceiveFilters_IN;
typedef struct _WmiEnumReceiveQueues_OUT WmiEnumReceiveQueues_OUT;
typedef struct _WmiSetLinkParameters_OUT WmiSetLinkParameters_OUT;
typedef struct _WmiSetPortParameters_OUT WmiSetPortParameters_OUT;
typedef struct _XVARIABLE_NAME_AND_VALUE XVARIABLE_NAME_AND_VALUE;
enum _APCI_IVHD_ENTRY_VARIETY {IvhdEntryVarietyIoapic = 0x1,IvhdEntryVarietyHpet = 0x2,};
enum _BDCB_STATUS_UPDATE_TYPE {BdCbStatusPrepareForDependencyLoad = 0x0,BdCbStatusPrepareForDriverLoad = 0x1,BdCbStatusPrepareForUnload = 0x2,};
enum _D3DKMDT_MODE_PREFERENCE {D3DKMDT_MP_UNINITIALIZED = 0x0,D3DKMDT_MP_PREFERRED = 0x1,D3DKMDT_MP_NOTPREFERRED = 0x2,};
struct _DMA_CONFIGURATION_BYTE0 {unsigned char Channel : 3;unsigned char Reserved : 3;unsigned char Shared : 1;unsigned char MoreEntries : 1;};
struct _DMA_CONFIGURATION_BYTE1 {unsigned char Reserved0 : 2;unsigned char TransferSize : 2;unsigned char Timing : 2;unsigned char Reserved1 : 2;};
enum _DOT11_ASSOCIATION_STATE {dot11_assoc_state_zero = 0x0,dot11_assoc_state_unauth_unassoc = 0x1,dot11_assoc_state_auth_unassoc = 0x2,dot11_assoc_state_auth_assoc = 0x3,};
enum _DOT11_DIVERSITY_SUPPORT {dot11_diversity_support_unknown = 0x0,dot11_diversity_support_fixedlist = 0x1,dot11_diversity_support_notsupported = 0x2,dot11_diversity_support_dynamic = 0x3,};
enum _DOT11_POWER_MODE_REASON {dot11_power_mode_reason_no_change = 0x0,dot11_power_mode_reason_noncompliant_AP = 0x1,dot11_power_mode_reason_legacy_WFD_device = 0x2,dot11_power_mode_reason_compliant_AP = 0x3,dot11_power_mode_reason_compliant_WFD_device = 0x4,dot11_power_mode_reason_others = 0x5,};
enum _DOT11_WFD_DISCOVER_TYPE {dot11_wfd_discover_type_scan_only = 0x1,dot11_wfd_discover_type_find_only = 0x2,dot11_wfd_discover_type_auto = 0x3,dot11_wfd_discover_type_scan_social_channels = 0x4,dot11_wfd_discover_type_forced = 0x80000000,};
enum _DOT11_WPS_CONFIG_METHOD {DOT11_WPS_CONFIG_METHOD_NULL = 0x0,DOT11_WPS_CONFIG_METHOD_DISPLAY = 0x8,DOT11_WPS_CONFIG_METHOD_PUSHBUTTON = 0x80,DOT11_WPS_CONFIG_METHOD_KEYPAD = 0x100,};
enum _DXGK_RENDERKM_OPERATION {DXGK_GDIOP_BITBLT = 0x1,DXGK_GDIOP_COLORFILL = 0x2,DXGK_GDIOP_ALPHABLEND = 0x3,DXGK_GDIOP_STRETCHBLT = 0x4,DXGK_GDIOP_ESCAPE = 0x5,DXGK_GDIOP_TRANSPARENTBLT = 0x6,DXGK_GDIOP_CLEARTYPEBLEND = 0x7,};
struct _FAILURE_PREDICTION_INFO;
enum _FSRTL_COMPARISON_RESULT {LessThan = 0xFFFFFFFF,EqualTo = 0x0,GreaterThan = 0x1,};
enum _HIDP_KEYBOARD_DIRECTION {HidP_Keyboard_Break = 0x0,HidP_Keyboard_Make = 0x1,};
enum _IF_ADMINISTRATIVE_STATE {IF_ADMINISTRATIVE_DISABLED = 0x0,IF_ADMINISTRATIVE_ENABLED = 0x1,IF_ADMINISTRATIVE_DEMANDDIAL = 0x2,};
enum _INTERNAL_IF_OPER_STATUS {IF_OPER_STATUS_NON_OPERATIONAL = 0x0,IF_OPER_STATUS_UNREACHABLE = 0x1,IF_OPER_STATUS_DISCONNECTED = 0x2,IF_OPER_STATUS_CONNECTING = 0x3,IF_OPER_STATUS_CONNECTED = 0x4,IF_OPER_STATUS_OPERATIONAL = 0x5,};
struct _ImageArchitectureHeader {unsigned int AmaskValue : 1;int : 7;unsigned int AmaskShift : 8;int : 16;unsigned int FirstEntryRVA;};
enum _KSPIN_LOCK_QUEUE_NUMBER {LockQueueUnusedSpare0 = 0x0,LockQueueExpansionLock = 0x1,LockQueueUnusedSpare2 = 0x2,LockQueueSystemSpaceLock = 0x3,LockQueueVacbLock = 0x4,LockQueueMasterLock = 0x5,LockQueueNonPagedPoolLock = 0x6,LockQueueIoCancelLock = 0x7,LockQueueWorkQueueLock = 0x8,LockQueueIoVpbLock = 0x9,LockQueueIoDatabaseLock = 0xA,LockQueueIoCompletionLock = 0xB,LockQueueNtfsStructLock = 0xC,LockQueueAfdWorkQueueLock = 0xD,LockQueueBcbLock = 0xE,LockQueueMmNonPagedPoolLock = 0xF,LockQueueUnusedSpare16 = 0x10,LockQueueMaximumLock = 0x11,};
enum _L2CAP_DISCONNECT_REASON {HciDisconnect = 0x0,L2capDisconnectRequest = 0x1,RadioPoweredDown = 0x2,HardwareRemoval = 0x3,};
struct _MSSmBios_SMBiosEventlog {char VariableData[1];};
enum _NDIS_802_11_STATUS_TYPE {Ndis802_11StatusType_Authentication = 0x0,Ndis802_11StatusType_MediaStreamMode = 0x1,Ndis802_11StatusType_PMKID_CandidateList = 0x2,Ndis802_11StatusTypeMax = 0x3,};
enum _NDIS_DEVICE_POWER_STATE {NdisDeviceStateUnspecified = 0x0,NdisDeviceStateD0 = 0x1,NdisDeviceStateD1 = 0x2,NdisDeviceStateD2 = 0x3,NdisDeviceStateD3 = 0x4,NdisDeviceStateMaximum = 0x5,};
enum _NDIS_PORT_CONTROL_STATE {NdisPortControlStateUnknown = 0x0,NdisPortControlStateControlled = 0x1,NdisPortControlStateUncontrolled = 0x2,};
enum _NDIS_RECEIVE_QUEUE_TYPE {NdisReceiveQueueTypeUnspecified = 0x0,NdisReceiveQueueTypeVMQueue = 0x1,NdisReceiveQueueTypeMaximum = 0x2,};
enum _NDIS_WAN_MEDIUM_SUBTYPE {NdisWanMediumHub = 0x0,NdisWanMediumX_25 = 0x1,NdisWanMediumIsdn = 0x2,NdisWanMediumSerial = 0x3,NdisWanMediumFrameRelay = 0x4,NdisWanMediumAtm = 0x5,NdisWanMediumSonet = 0x6,NdisWanMediumSW56K = 0x7,NdisWanMediumPPTP = 0x8,NdisWanMediumL2TP = 0x9,NdisWanMediumIrda = 0xA,NdisWanMediumParallel = 0xB,NdisWanMediumPppoe = 0xC,NdisWanMediumSSTP = 0xD,NdisWanMediumAgileVPN = 0xE,};
struct _NDK_EXTENSION_INTERFACE { void *Dispatch;};
enum _NET_IF_RCV_ADDRESS_TYPE {NET_IF_RCV_ADDRESS_TYPE_OTHER = 0x1,NET_IF_RCV_ADDRESS_TYPE_VOLATILE = 0x2,NET_IF_RCV_ADDRESS_TYPE_NON_VOLATILE = 0x3,};
enum _NV_SEP_WRITE_CACHE_TYPE {NVSEPWriteCacheTypeUnknown = 0x0,NVSEPWriteCacheTypeNone = 0x1,NVSEPWriteCacheTypeWriteBack = 0x2,NVSEPWriteCacheTypeWriteThrough = 0x3,};
enum _PCMCIA_CONTROLLER_CLASS {PcmciaInvalidControllerClass = 0xFFFFFFFF,PcmciaIntelCompatible = 0x0,PcmciaCardBusCompatible = 0x1,PcmciaElcController = 0x2,PcmciaDatabook = 0x3,PcmciaPciPcmciaBridge = 0x4,PcmciaCirrusLogic = 0x5,PcmciaTI = 0x6,PcmciaTopic = 0x7,PcmciaRicoh = 0x8,PcmciaDatabookCB = 0x9,PcmciaOpti = 0xA,PcmciaTrid = 0xB,PcmciaO2Micro = 0xC,PcmciaNEC = 0xD,PcmciaNEC_98 = 0xE,};
enum _PO_SLEEP_DISABLE_REASON {PoSleepDisableReasonVideo = 0x0,PoSleepDisableReasonHypervisor = 0x1,PoSleepDisableReasonVhdBoot = 0x2,PoSleepDisableReasonPortableWorkspace = 0x3,PoSleepDisableReasonMax = 0x4,};
enum _SECURITY_OPERATION_CODE {SetSecurityDescriptor = 0x0,QuerySecurityDescriptor = 0x1,DeleteSecurityDescriptor = 0x2,AssignSecurityDescriptor = 0x3,};
enum _STORAGE_IDENTIFIER_TYPE {StorageIdTypeVendorSpecific = 0x0,StorageIdTypeVendorId = 0x1,StorageIdTypeEUI64 = 0x2,StorageIdTypeFCPHName = 0x3,StorageIdTypePortRelative = 0x4,StorageIdTypeTargetPortGroup = 0x5,StorageIdTypeLogicalUnitGroup = 0x6,StorageIdTypeMD5LogicalUnitIdentifier = 0x7,StorageIdTypeScsiNameString = 0x8,};
enum _STOR_DEVICE_POWER_STATE {StorPowerDeviceUnspecified = 0x0,StorPowerDeviceD0 = 0x1,StorPowerDeviceD1 = 0x2,StorPowerDeviceD2 = 0x3,StorPowerDeviceD3 = 0x4,StorPowerDeviceMaximum = 0x5,};
struct _SecPkgContext_UserFlags {unsigned int UserFlags;};
enum _TAPE_DRIVE_PROBLEM_TYPE {TapeDriveProblemNone = 0x0,TapeDriveReadWriteWarning = 0x1,TapeDriveReadWriteError = 0x2,TapeDriveReadWarning = 0x3,TapeDriveWriteWarning = 0x4,TapeDriveReadError = 0x5,TapeDriveWriteError = 0x6,TapeDriveHardwareError = 0x7,TapeDriveUnsupportedMedia = 0x8,TapeDriveScsiConnectionError = 0x9,TapeDriveTimetoClean = 0xA,TapeDriveCleanDriveNow = 0xB,TapeDriveMediaLifeExpired = 0xC,TapeDriveSnappedTape = 0xD,};
enum _TOKEN_INFORMATION_CLASS {TokenUser = 0x1,TokenGroups = 0x2,TokenPrivileges = 0x3,TokenOwner = 0x4,TokenPrimaryGroup = 0x5,TokenDefaultDacl = 0x6,TokenSource = 0x7,TokenType = 0x8,TokenImpersonationLevel = 0x9,TokenStatistics = 0xA,TokenRestrictedSids = 0xB,TokenSessionId = 0xC,TokenGroupsAndPrivileges = 0xD,TokenSessionReference = 0xE,TokenSandBoxInert = 0xF,TokenAuditPolicy = 0x10,TokenOrigin = 0x11,TokenElevationType = 0x12,TokenLinkedToken = 0x13,TokenElevation = 0x14,TokenHasRestrictions = 0x15,TokenAccessInformation = 0x16,TokenVirtualizationAllowed = 0x17,TokenVirtualizationEnabled = 0x18,TokenIntegrityLevel = 0x19,TokenUIAccess = 0x1A,TokenMandatoryPolicy = 0x1B,TokenLogonSid = 0x1C,TokenIsAppContainer = 0x1D,TokenCapabilities = 0x1E,TokenAppContainerSid = 0x1F,TokenAppContainerNumber = 0x20,TokenUserClaimAttributes = 0x21,TokenDeviceClaimAttributes = 0x22,TokenRestrictedUserClaimAttributes = 0x23,TokenRestrictedDeviceClaimAttributes = 0x24,TokenDeviceGroups = 0x25,TokenRestrictedDeviceGroups = 0x26,TokenSecurityAttributes = 0x27,TokenIsRestricted = 0x28,MaxTokenInfoClass = 0x29,};
enum _TRACE_INFORMATION_CLASS {TraceIdClass = 0x0,TraceHandleClass = 0x1,TraceEnableFlagsClass = 0x2,TraceEnableLevelClass = 0x3,GlobalLoggerHandleClass = 0x4,EventLoggerHandleClass = 0x5,AllLoggerHandlesClass = 0x6,TraceHandleByNameClass = 0x7,LoggerEventsLostClass = 0x8,TraceSessionSettingsClass = 0x9,LoggerEventsLoggedClass = 0xA,DiskIoNotifyRoutinesClass = 0xB,TraceInformationClassReserved1 = 0xC,FltIoNotifyRoutinesClass = 0xD,TraceInformationClassReserved2 = 0xE,WdfNotifyRoutinesClass = 0xF,MaxTraceInformationClass = 0x10,};
enum _USBPORT_CREATEDEV_ERROR {CreateDevErrNotSet = 0x0,CreateDevBadHubDevHandle = 0x1,CreateDevFailedAllocDevHandle = 0x2,CreateDevFailedOpenEndpoint = 0x3,CreateDevFailedAllocDsBuff = 0x4,CreateDevFailedGetDs = 0x5,CreateDevTtNotFound = 0x6,CreateDevBadDevHandlePtr = 0x7,};
enum _WHEA_ERROR_SOURCE_STATE {WheaErrSrcStateStopped = 0x1,WheaErrSrcStateStarted = 0x2,};
enum _WMIENABLEDISABLECONTROL {WmiEventControl = 0x0,WmiDataBlockControl = 0x1,};
enum _WWAN_ACTIVATION_COMMAND {WwanActivationCommandDeactivate = 0x0,WwanActivationCommandActivate = 0x1,WwanActivationCommandMax = 0x2,};
enum _WWAN_USSD_SESSION_STATE {WwanUssdSessionStateNew = 0x0,WwanUssdSessionStateExisting = 0x1,};
typedef struct _ACPI_EVAL_OUTPUT_BUFFER ACPI_EVAL_OUTPUT_BUFFER;
typedef struct _ACPI_INTERFACE_STANDARD ACPI_INTERFACE_STANDARD;
typedef struct _API_SET_NAMESPACE_ARRAY API_SET_NAMESPACE_ARRAY;
typedef struct _API_SET_NAMESPACE_ENTRY API_SET_NAMESPACE_ENTRY;
typedef struct _ATA_PASS_THROUGH_DIRECT ATA_PASS_THROUGH_DIRECT;
typedef struct _7069A3AF9C526B33740CA7D5809B477E BATTERY_REPORTING_SCALE;
typedef struct _BDA_CAS_CLOSE_MMIDIALOG BDA_CAS_CLOSE_MMIDIALOG;
typedef struct _BDA_TEMPLATE_CONNECTION BDA_TEMPLATE_CONNECTION;
typedef struct _BOOTDISK_INFORMATION_EX BOOTDISK_INFORMATION_EX;
typedef struct _57C5023E6D7E701595220C2F2C785C20 BULK_SECURITY_TEST_DATA;
typedef struct _9452773C7C9658DF0A7C90A31311AC2C BUS_INTERFACE_REFERENCE;
typedef struct _CACHE_MANAGER_CALLBACKS CACHE_MANAGER_CALLBACKS;
typedef struct _CDROM_STREAMING_CONTROL CDROM_STREAMING_CONTROL;
typedef struct _CDROM_SUB_Q_DATA_FORMAT CDROM_SUB_Q_DATA_FORMAT;
typedef struct _CDROM_TOC_FULL_TOC_DATA CDROM_TOC_FULL_TOC_DATA;
typedef struct _CDVD_CHALLENGE_KEY_DATA CDVD_CHALLENGE_KEY_DATA;
typedef struct _CHANGER_EXCHANGE_MEDIUM CHANGER_EXCHANGE_MEDIUM;
typedef struct _CM_KEYBOARD_DEVICE_DATA CM_KEYBOARD_DEVICE_DATA;
typedef struct _CM_PNP_BIOS_DEVICE_NODE CM_PNP_BIOS_DEVICE_NODE;
typedef struct _COMMON_DEVICE_EXTENSION COMMON_DEVICE_EXTENSION;
typedef struct _CO_GET_CALL_INFORMATION CO_GET_CALL_INFORMATION;
typedef struct _9EB91D8C4EA5FEB95803C89041761FE9 CREATE_USN_JOURNAL_DATA;
typedef struct creative_adpcmwaveformat_tag CREATIVEADPCMWAVEFORMAT;
typedef struct _CSV_QUERY_FILE_REVISION CSV_QUERY_FILE_REVISION;
typedef struct _CreateVirtualPortEx_OUT CreateVirtualPortEx_OUT;
enum D3DDDI_SCANLINEORDERING {D3DDDI_SCANLINEORDERING_UNKNOWN = 0x0,D3DDDI_SCANLINEORDERING_PROGRESSIVE = 0x1,D3DDDI_SCANLINEORDERING_INTERLACED = 0x2,};
typedef struct _D3DKMDT_FREQUENCY_RANGE D3DKMDT_FREQUENCY_RANGE;
typedef struct _D3DKMDT_GDISURFACEFLAGS D3DKMDT_GDISURFACEFLAGS;
typedef struct _D3DKMDT_PREEMPTION_CAPS D3DKMDT_PREEMPTION_CAPS;
typedef struct _DEBUGGING_DEVICE_IN_USE DEBUGGING_DEVICE_IN_USE;
typedef struct _F3B7485C952161763EA52E3754EBFEF6 DEBUG_DEVICE_DESCRIPTOR;
typedef struct _4A08272B00433CD7EE8E1AF4F71BCC64 DELETE_USN_JOURNAL_DATA;
typedef struct _DEVICE_POWER_DESCRIPTOR DEVICE_POWER_DESCRIPTOR;
typedef struct _DISABLE_ERROR_SOURCE_IN DISABLE_ERROR_SOURCE_IN;
typedef struct _DMA_CONFIGURATION_BYTE0 DMA_CONFIGURATION_BYTE0;
typedef struct _DMA_CONFIGURATION_BYTE1 DMA_CONFIGURATION_BYTE1;
typedef struct _DOT11_PER_MSDU_COUNTERS DOT11_PER_MSDU_COUNTERS;
typedef struct _DOT11_STATUS_INDICATION DOT11_STATUS_INDICATION;
typedef struct _DOT11_SUPPORTED_ANTENNA DOT11_SUPPORTED_ANTENNA;
typedef struct _DOT11_VWIFI_COMBINATION DOT11_VWIFI_COMBINATION;
typedef struct _DOT11_WFD_ADDITIONAL_IE DOT11_WFD_ADDITIONAL_IE;
typedef struct _DOT11_WME_AC_PARAMETERS DOT11_WME_AC_PARAMETERS;
typedef struct _DSM_Load_Balance_Policy DSM_Load_Balance_Policy;
typedef struct _DXGKARGCB_GETHANDLEDATA DXGKARGCB_GETHANDLEDATA;
typedef struct _DXGKARG_CLOSEALLOCATION DXGKARG_CLOSEALLOCATION;
typedef struct _DXGKARG_SETPOINTERSHAPE DXGKARG_SETPOINTERSHAPE;
typedef struct _DXGKARG_UPDATEPAGETABLE DXGKARG_UPDATEPAGETABLE;
typedef struct _DXGK_ALLOCATIONGROUPOUT DXGK_ALLOCATIONGROUPOUT;
typedef struct _DXGK_CHILD_CAPABILITIES DXGK_CHILD_CAPABILITIES;
typedef struct _DXGK_CHILD_CONTAINER_ID DXGK_CHILD_CONTAINER_ID;
typedef struct _DXGK_CREATECONTEXTFLAGS DXGK_CREATECONTEXTFLAGS;
typedef struct _DXGK_GENERIC_DESCRIPTOR DXGK_GENERIC_DESCRIPTOR;
typedef struct _DXGK_OPENALLOCATIONINFO DXGK_OPENALLOCATIONINFO;
typedef struct _DXGK_SEGMENTDESCRIPTOR2 DXGK_SEGMENTDESCRIPTOR2;
typedef struct _DXGK_SEGMENTDESCRIPTOR3 DXGK_SEGMENTDESCRIPTOR3;
typedef struct _DXGK_SUBMITCOMMANDFLAGS DXGK_SUBMITCOMMANDFLAGS;
typedef struct _DXGK_VIRTUALADDRESSCAPS DXGK_VIRTUALADDRESSCAPS;
typedef struct _EISA_PORT_CONFIGURATION EISA_PORT_CONFIGURATION;
typedef struct _ENABLE_ERROR_SOURCE_OUT ENABLE_ERROR_SOURCE_OUT;
typedef struct _EVENT_FILTER_DESCRIPTOR EVENT_FILTER_DESCRIPTOR;
typedef struct _FILE_ACCESS_INFORMATION FILE_ACCESS_INFORMATION;
typedef struct _FILE_GET_EA_INFORMATION FILE_GET_EA_INFORMATION;
typedef struct _FILE_NOTIFY_INFORMATION FILE_NOTIFY_INFORMATION;
typedef struct _FILE_RENAME_INFORMATION FILE_RENAME_INFORMATION;
typedef struct _FILE_STREAM_INFORMATION FILE_STREAM_INFORMATION;
typedef struct _FILTER_FULL_INFORMATION FILTER_FULL_INFORMATION;
typedef struct _FLT_CALLBACK_DATA_QUEUE FLT_CALLBACK_DATA_QUEUE;
typedef struct _FLT_RELATED_CONTEXTS_EX FLT_RELATED_CONTEXTS_EX;
typedef struct _FORMATTED_CAPACITY_LIST FORMATTED_CAPACITY_LIST;
typedef struct _FSRTL_COMMON_FCB_HEADER FSRTL_COMMON_FCB_HEADER;
typedef struct _FSVIDEO_CURSOR_POSITION FSVIDEO_CURSOR_POSITION;
typedef struct _FS_FILTER_CALLBACK_DATA FS_FILTER_CALLBACK_DATA;
typedef struct _GetBindingCapability_IN GetBindingCapability_IN;
typedef struct _GetFcpTargetMapping_OUT GetFcpTargetMapping_OUT;
typedef struct _GetPathConfiguration_IN GetPathConfiguration_IN;
typedef struct _GetPresharedKeyForId_IN GetPresharedKeyForId_IN;
typedef struct _HW_STREAM_REQUEST_BLOCK HW_STREAM_REQUEST_BLOCK;
struct IAdapterPowerManagement {struct IAdapterPowerManagementVtbl *lpVtbl;};
typedef struct _IDE_SCATTER_GATHER_LIST IDE_SCATTER_GATHER_LIST;
typedef struct _IMAGE_IMPORT_DESCRIPTOR IMAGE_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_OPTIONAL_HEADER IMAGE_OPTIONAL_HEADER32;
typedef struct _IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER64;
enum IMPORT_OBJECT_NAME_TYPE {IMPORT_OBJECT_ORDINAL = 0x0,IMPORT_OBJECT_NAME = 0x1,IMPORT_OBJECT_NAME_NO_PREFIX = 0x2,IMPORT_OBJECT_NAME_UNDECORATE = 0x3,};
typedef struct _IO_SESSION_CONNECT_INFO IO_SESSION_CONNECT_INFO;
typedef struct _IPSEC_OFFLOAD_V2_ADD_SA IPSEC_OFFLOAD_V2_ADD_SA;
typedef struct _IRB_REQ_SEND_PHY_PACKET IRB_REQ_SEND_PHY_PACKET;
typedef struct _ISCSI_DiscoveredTarget2 ISCSI_DiscoveredTarget2;
typedef struct _ISCSI_SessionStaticInfo ISCSI_SessionStaticInfo;
typedef struct _ISCSI_TargetPortalGroup ISCSI_TargetPortalGroup;
typedef struct _2FCB7B16F35A994219C907239F9496DC KSAC3_ERROR_CONCEALMENT;
typedef struct _66CF5E28886A6CE6C0E44A3DF6E2CD53 KSAUDIO_COPY_PROTECTION;
typedef struct _tagKSJACK_SINK_INFORMATION KSJACK_SINK_INFORMATION;
typedef struct _KSM_BDA_ISDBCAS_REQUEST KSM_BDA_ISDBCAS_REQUEST;
typedef struct _KSPROCESSPIN_INDEXENTRY KSPROCESSPIN_INDEXENTRY;
typedef struct _48207AC35C517F533F0BE91ADB0B9FCA KSPROPERTY_TUNER_CAPS_S;
typedef struct _85CBE24E9ED55DBB779718CA5D73A273 KSPROPERTY_TUNER_MODE_S;
typedef struct _KSSTREAM_POINTER_OFFSET KSSTREAM_POINTER_OFFSET;
typedef struct tagKS_DATAFORMAT_IMAGEINFO KS_DATAFORMAT_IMAGEINFO;
typedef struct tagKS_DATARANGE_H264_VIDEO KS_DATARANGE_H264_VIDEO;
typedef struct SDP_ULARGE_INTEGER_16 *LPSDP_ULARGE_INTEGER_16;
enum MACRO_ADDRESS_EXTENSION {ADDRESS_EXTENSION_STRUCTURE = 5,};
enum MACRO_ATTEMPTED_EXECUTE {ATTEMPTED_EXECUTE_OF_NOEXECUTE_MEMORY = 0xFC,};
enum MACRO_CLIENT_STICKINESS {START_CLIENT_STICKINESS = 0,STOP_CLIENT_STICKINESS = 1,};
enum MACRO_CreateVirtualPort {CreateVirtualPort = 1,};
enum MACRO_DEV_CAPS_PROTOCOL {DEV_CAPS_PROTOCOL_VERSION_V2 = 0x200,};
enum MACRO_DOT11_ASSOCIATION {DOT11_ASSOCIATION_INFO_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_AUTH_CIPHER {DOT11_AUTH_CIPHER_PAIR_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_MAX_CHANNEL {DOT11_MAX_CHANNEL_HINTS = 4,DOT11_INVALID_CHANNEL_NUMBER = 0,DOT11_NLO_FLAG_STOP_NLO_INDICATION = 1,DOT11_NLO_FLAG_SCAN_ON_AOAC_PLATFORM = 2,DOT11_NLO_FLAG_SCAN_AT_SYSTEM_RESUME = 4,DOT11_OFFLOAD_NETWORK_LIST_REVISION_1 = 1,DOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DSM_QueryUniqueId {DSM_QueryUniqueId_DsmUniqueId_ID = 1,MPIO_PATH_HEALTH_CLASS_PathId_ID = 1,MPIO_PATH_HEALTH_CLASS_NumberReads_ID = 2,MPIO_PATH_HEALTH_CLASS_NumberWrites_ID = 3,MPIO_PATH_HEALTH_CLASS_NumberBytesRead_ID = 4,MPIO_PATH_HEALTH_CLASS_NumberBytesWritten_ID = 5,MPIO_PATH_HEALTH_CLASS_NumberRetries_ID = 6,MPIO_PATH_HEALTH_CLASS_NumberIoErrors_ID = 7,MPIO_PATH_HEALTH_CLASS_CreateTime_ID = 8,MPIO_PATH_HEALTH_CLASS_FailTime_ID = 9,MPIO_PATH_HEALTH_CLASS_PathOffline_ID = 10,MPIO_PATH_HEALTH_CLASS_NumberReadsWrap_ID = 11,MPIO_PATH_HEALTH_CLASS_NumberWritesWrap_ID = 12,MPIO_PATH_HEALTH_CLASS_NumberBytesReadWrap_ID = 13,MPIO_PATH_HEALTH_CLASS_NumberBytesWrittenWrap_ID = 14,MPIO_PATH_HEALTH_CLASS_OutstandingRequests_ID = 15,MPIO_PATH_HEALTH_CLASS_Pad_ID = 16,MPIO_PATH_HEALTH_INFO_NumberPathPackets_ID = 1,MPIO_PATH_HEALTH_INFO_Reserved_ID = 2,MPIO_PATH_HEALTH_INFO_PathHealthPackets_ID = 3,MPIO_DISK_HEALTH_CLASS_Name_ID = 1,MPIO_DISK_HEALTH_CLASS_NumberReads_ID = 2,MPIO_DISK_HEALTH_CLASS_NumberWrites_ID = 3,MPIO_DISK_HEALTH_CLASS_NumberBytesRead_ID = 4,MPIO_DISK_HEALTH_CLASS_NumberBytesWritten_ID = 5,MPIO_DISK_HEALTH_CLASS_NumberRetries_ID = 6,MPIO_DISK_HEALTH_CLASS_NumberIoErrors_ID = 7,MPIO_DISK_HEALTH_CLASS_CreateTime_ID = 8,MPIO_DISK_HEALTH_CLASS_PathFailures_ID = 9,MPIO_DISK_HEALTH_CLASS_FailTime_ID = 10,MPIO_DISK_HEALTH_CLASS_DeviceOffline_ID = 11,MPIO_DISK_HEALTH_CLASS_NumberReadsWrap_ID = 12,MPIO_DISK_HEALTH_CLASS_NumberWritesWrap_ID = 13,MPIO_DISK_HEALTH_CLASS_NumberBytesReadWrap_ID = 14,MPIO_DISK_HEALTH_CLASS_NumberBytesWrittenWrap_ID = 15,MPIO_DISK_HEALTH_CLASS_Pad_ID = 16,MPIO_DISK_HEALTH_INFO_NumberDiskPackets_ID = 1,MPIO_DISK_HEALTH_INFO_Reserved_ID = 2,MPIO_DISK_HEALTH_INFO_DiskHealthPackets_ID = 3,SCSI_ADDR_PortNumber_ID = 1,SCSI_ADDR_ScsiPathId_ID = 2,SCSI_ADDR_TargetId_ID = 3,SCSI_ADDR_Lun_ID = 4,MPIO_DRIVE_INFO_NumberPaths_ID = 1,MPIO_DRIVE_INFO_Name_ID = 2,MPIO_DRIVE_INFO_SerialNumber_ID = 3,MPIO_DRIVE_INFO_DsmName_ID = 4,MPIO_DISK_INFO_NumberDrives_ID = 1,MPIO_DISK_INFO_DriveInfo_ID = 2,DSM_VERSION_MajorVersion_ID = 1,DSM_VERSION_MinorVersion_ID = 2,DSM_VERSION_ProductBuild_ID = 3,DSM_VERSION_QfeNumber_ID = 4,DSM_COUNTERS_PathVerifyEnabled_ID = 1,DSM_COUNTERS_PathVerificationPeriod_ID = 2,DSM_COUNTERS_PDORemovePeriod_ID = 3,DSM_COUNTERS_RetryCount_ID = 4,DSM_COUNTERS_RetryInterval_ID = 5,DSM_COUNTERS_Reserved32_ID = 6,DSM_COUNTERS_Reserved64_ID = 7,DSM_PARAMETERS_DsmName_ID = 1,DSM_PARAMETERS_DsmContext_ID = 2,DSM_PARAMETERS_DsmVersion_ID = 3,DSM_PARAMETERS_DsmCounters_ID = 4,MPIO_REGISTERED_DSM_NumberDSMs_ID = 1,MPIO_REGISTERED_DSM_DsmParameters_ID = 2,MPIO_ADAPTER_INFORMATION_PathId_ID = 1,MPIO_ADAPTER_INFORMATION_BusNumber_ID = 2,MPIO_ADAPTER_INFORMATION_DeviceNumber_ID = 3,MPIO_ADAPTER_INFORMATION_FunctionNumber_ID = 4,MPIO_ADAPTER_INFORMATION_Pad_ID = 5,MPIO_ADAPTER_INFORMATION_AdapterName_ID = 6,MPIO_PATH_INFORMATION_NumberPaths_ID = 1,MPIO_PATH_INFORMATION_Pad_ID = 2,MPIO_PATH_INFORMATION_PathList_ID = 3,MPIO_CONTROLLER_INFO_IdentifierType_ID = 1,MPIO_CONTROLLER_INFO_IdentifierLength_ID = 2,MPIO_CONTROLLER_INFO_Identifier_ID = 3,MPIO_CONTROLLER_INFO_ControllerState_ID = 4,MPIO_CONTROLLER_INFO_Pad_ID = 5,MPIO_CONTROLLER_INFO_AssociatedDsm_ID = 6,MPIO_CONTROLLER_CONFIGURATION_NumberControllers_ID = 1,MPIO_CONTROLLER_CONFIGURATION_ControllerInfo_ID = 2,MPIO_TIMERS_COUNTERS_PathVerifyEnabled_ID = 1,MPIO_TIMERS_COUNTERS_PathVerificationPeriod_ID = 2,MPIO_TIMERS_COUNTERS_PDORemovePeriod_ID = 3,MPIO_TIMERS_COUNTERS_RetryCount_ID = 4,MPIO_TIMERS_COUNTERS_RetryInterval_ID = 5,};
enum MACRO_ENABLE_DISABLE_FP {ENABLE_DISABLE_FP_IN_Enable_ID = 1,};
enum MACRO_EXCEPTION_DIVIDED {EXCEPTION_DIVIDED_BY_ZERO = 0,EXCEPTION_DEBUG = 1,EXCEPTION_NMI = 2,EXCEPTION_INT3 = 3,EXCEPTION_BOUND_CHECK = 5,EXCEPTION_INVALID_OPCODE = 6,EXCEPTION_NPX_NOT_AVAILABLE = 7,EXCEPTION_DOUBLE_FAULT = 8,EXCEPTION_NPX_OVERRUN = 9,EXCEPTION_INVALID_TSS = 10,EXCEPTION_SEGMENT_NOT_PRESENT = 11,EXCEPTION_STACK_FAULT = 12,EXCEPTION_GP_FAULT = 13,EXCEPTION_RESERVED_TRAP = 15,EXCEPTION_NPX_ERROR = 16,EXCEPTION_ALIGNMENT_CHECK = 17,};
enum MACRO_FINALIZE_ON_PURGE {DONT_ATTEMPT_FINALIZE_ON_PURGE = 0,ATTEMPT_FINALIZE_ON_PURGE = 1,};
enum MACRO_GetBindingSupport {GetBindingSupport = 4,};
enum MACRO_INITIAL_BANDWIDTH {INITIAL_BANDWIDTH_UNITS = 4915,};
enum MACRO_INVALID_PROCESSOR {INVALID_PROCESSOR_INDEX = 0xFFFFFFFF,};
enum MACRO_IOCTL_1394_TOGGLE {IOCTL_1394_TOGGLE_ENUM_TEST_ON = 0x220220,IOCTL_1394_TOGGLE_ENUM_TEST_OFF = 0x220224,};
enum MACRO_IOCTL_DISK_DELETE {IOCTL_DISK_DELETE_DRIVE_LAYOUT = 0x7C100,IOCTL_DISK_UPDATE_PROPERTIES = 0x70140,IOCTL_DISK_FORMAT_DRIVE = 0x7C3CC,IOCTL_DISK_SENSE_DEVICE = 0x703E0,IOCTL_DISK_GET_CACHE_SETTING = 0x740E0,IOCTL_DISK_SET_CACHE_SETTING = 0x7C0E4,IOCTL_DISK_COPY_DATA = 0x7C064,IOCTL_DISK_INTERNAL_SET_VERIFY = 0x70403,IOCTL_DISK_INTERNAL_CLEAR_VERIFY = 0x70407,IOCTL_DISK_INTERNAL_SET_NOTIFY = 0x70408,IOCTL_DISK_CHECK_VERIFY = 0x74800,IOCTL_DISK_MEDIA_REMOVAL = 0x74804,IOCTL_DISK_EJECT_MEDIA = 0x74808,IOCTL_DISK_LOAD_MEDIA = 0x7480C,IOCTL_DISK_RESERVE = 0x74810,IOCTL_DISK_RELEASE = 0x74814,IOCTL_DISK_FIND_NEW_DEVICES = 0x74818,IOCTL_DISK_GET_MEDIA_TYPES = 0x70C00,IOCTL_STORAGE_BASE = 0x2D,IOCTL_STORAGE_CHECK_VERIFY = 0x2D4800,IOCTL_STORAGE_CHECK_VERIFY2 = 0x2D0800,IOCTL_STORAGE_MEDIA_REMOVAL = 0x2D4804,IOCTL_STORAGE_EJECT_MEDIA = 0x2D4808,IOCTL_STORAGE_LOAD_MEDIA = 0x2D480C,IOCTL_STORAGE_LOAD_MEDIA2 = 0x2D080C,IOCTL_STORAGE_RESERVE = 0x2D4810,IOCTL_STORAGE_RELEASE = 0x2D4814,IOCTL_STORAGE_FIND_NEW_DEVICES = 0x2D4818,IOCTL_STORAGE_EJECTION_CONTROL = 0x2D0940,IOCTL_STORAGE_MCN_CONTROL = 0x2D0944,IOCTL_STORAGE_GET_MEDIA_TYPES = 0x2D0C00,IOCTL_STORAGE_GET_MEDIA_TYPES_EX = 0x2D0C04,IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER = 0x2D0C10,IOCTL_STORAGE_GET_HOTPLUG_INFO = 0x2D0C14,IOCTL_STORAGE_SET_HOTPLUG_INFO = 0x2DCC18,IOCTL_STORAGE_RESET_BUS = 0x2D5000,IOCTL_STORAGE_RESET_DEVICE = 0x2D5004,IOCTL_STORAGE_BREAK_RESERVATION = 0x2D5014,IOCTL_STORAGE_PERSISTENT_RESERVE_IN = 0x2D5018,IOCTL_STORAGE_PERSISTENT_RESERVE_OUT = 0x2DD01C,IOCTL_STORAGE_GET_DEVICE_NUMBER = 0x2D1080,IOCTL_STORAGE_PREDICT_FAILURE = 0x2D1100,IOCTL_STORAGE_READ_CAPACITY = 0x2D5140,IOCTL_STORAGE_QUERY_PROPERTY = 0x2D1400,IOCTL_STORAGE_MANAGE_DATA_SET_ATTRIBUTES = 0x2D9404,IOCTL_STORAGE_GET_LB_PROVISIONING_MAP_RESOURCES = 0x2D5408,IOCTL_STORAGE_GET_DEVICE_TELEMETRY = 0x2DD1C0,IOCTL_STORAGE_DEVICE_TELEMETRY_NOTIFY = 0x2DD1C4,IOCTL_STORAGE_DEVICE_TELEMETRY_QUERY_CAPS = 0x2DD1C8,IOCTL_STORAGE_GET_DEVICE_TELEMETRY_RAW = 0x2DD1CC,IOCTL_STORAGE_GET_BC_PROPERTIES = 0x2D5800,IOCTL_STORAGE_ALLOCATE_BC_STREAM = 0x2DD804,IOCTL_STORAGE_FREE_BC_STREAM = 0x2DD808,IOCTL_STORAGE_CHECK_PRIORITY_HINT_SUPPORT = 0x2D1880,IOCTL_STORAGE_START_DATA_INTEGRITY_CHECK = 0x2DD884,IOCTL_STORAGE_STOP_DATA_INTEGRITY_CHECK = 0x2DD888,};
enum MACRO_KERNEL_STACK_SIZE {KERNEL_STACK_SIZE = 12288,KERNEL_LARGE_STACK_SIZE = 61440,KERNEL_LARGE_STACK_COMMIT = 12288,};
enum MACRO_LINECALLCOMPLCOND {LINECALLCOMPLCOND_BUSY = 0x1,LINECALLCOMPLCOND_NOANSWER = 0x2,};
enum MACRO_LINECALLCOMPLMODE {LINECALLCOMPLMODE_CAMPON = 0x1,LINECALLCOMPLMODE_CALLBACK = 0x2,LINECALLCOMPLMODE_INTRUDE = 0x4,LINECALLCOMPLMODE_MESSAGE = 0x8,};
enum MACRO_LINECALLINFOSTATE {LINECALLINFOSTATE_OTHER = 0x1,LINECALLINFOSTATE_DEVSPECIFIC = 0x2,LINECALLINFOSTATE_BEARERMODE = 0x4,LINECALLINFOSTATE_RATE = 0x8,LINECALLINFOSTATE_MEDIAMODE = 0x10,LINECALLINFOSTATE_APPSPECIFIC = 0x20,LINECALLINFOSTATE_CALLID = 0x40,LINECALLINFOSTATE_RELATEDCALLID = 0x80,LINECALLINFOSTATE_ORIGIN = 0x100,LINECALLINFOSTATE_REASON = 0x200,LINECALLINFOSTATE_COMPLETIONID = 0x400,LINECALLINFOSTATE_NUMOWNERINCR = 0x800,LINECALLINFOSTATE_NUMOWNERDECR = 0x1000,LINECALLINFOSTATE_NUMMONITORS = 0x2000,LINECALLINFOSTATE_TRUNK = 0x4000,LINECALLINFOSTATE_CALLERID = 0x8000,LINECALLINFOSTATE_CALLEDID = 0x10000,LINECALLINFOSTATE_CONNECTEDID = 0x20000,LINECALLINFOSTATE_REDIRECTIONID = 0x40000,LINECALLINFOSTATE_REDIRECTINGID = 0x80000,LINECALLINFOSTATE_DISPLAY = 0x100000,LINECALLINFOSTATE_USERUSERINFO = 0x200000,LINECALLINFOSTATE_HIGHLEVELCOMP = 0x400000,LINECALLINFOSTATE_LOWLEVELCOMP = 0x800000,LINECALLINFOSTATE_CHARGINGINFO = 0x1000000,LINECALLINFOSTATE_TERMINAL = 0x2000000,LINECALLINFOSTATE_DIALPARAMS = 0x4000000,LINECALLINFOSTATE_MONITORMODES = 0x8000000,};
enum MACRO_LINECALLPRIVILEGE {LINECALLPRIVILEGE_NONE = 0x1,LINECALLPRIVILEGE_MONITOR = 0x2,LINECALLPRIVILEGE_OWNER = 0x4,};
enum MACRO_MAXIMUM_EXPANSION {MAXIMUM_EXPANSION_SIZE = 59392,};
enum MACRO_MAXIMUM_LEADBYTES {MAXIMUM_LEADBYTES = 12,};
enum MACRO_MAXIMUM_SUPPORTED {MAXIMUM_SUPPORTED_EXTENSION = 512,};
enum MACRO_MEMORY_MANAGEMENT {MEMORY_MANAGEMENT = 0x1A,};
enum MACRO_MPIOMoveDevice_IN {MPIOMoveDevice_IN_DiskOrdinal_ID = 1,MPIOMoveDevice_IN_Flags_ID = 2,MPIOMoveDevice_IN_PathID_ID = 3,};
enum MACRO_MSFC_AdapterEvent {MSFC_AdapterEvent_EventType_ID = 1,MSFC_AdapterEvent_PortWWN_ID = 2,MSFC_PortEvent_EventType_ID = 1,MSFC_PortEvent_FabricPortId_ID = 2,MSFC_PortEvent_PortWWN_ID = 3,MSFC_TargetEvent_EventType_ID = 1,MSFC_TargetEvent_PortWWN_ID = 2,MSFC_TargetEvent_DiscoveredPortWWN_ID = 3,};
enum MACRO_MdlMappingNoWrite {MdlMappingNoWrite = 0x80000000,};
enum MACRO_NDIS_INTERMEDIATE {NDIS_INTERMEDIATE_DRIVER = 0x1,NDIS_WDM_DRIVER = 0x2,NDIS_MINIPORT_DRIVER_CHARACTERISTICS_REVISION_1 = 0x1,NDIS_MINIPORT_DRIVER_CHARACTERISTICS_REVISION_2 = 0x2,NDIS_MINIPORT_CO_CHARACTERISTICS_REVISION_1 = 0x1,NDIS_DMA_24BITS = 0x0,NDIS_DMA_32BITS = 0x1,NDIS_DMA_64BITS = 0x2,NDIS_SG_LIST_WRITE_TO_DEVICE = 0x1,NDIS_MSIX_CONFIG_PARAMETERS_REVISION_1 = 0x1,};
enum MACRO_NWF_MANUFACTURING {NWF_MANUFACTURING_OID = 0x8,};
enum MACRO_OID_DOT11_CONNECT {OID_DOT11_CONNECT_REQUEST = 234946945,OID_DOT11_EXCLUDE_UNENCRYPTED = 234946946,OID_DOT11_STATISTICS = 235012483,};
enum MACRO_OID_DOT11_CURRENT {OID_DOT11_CURRENT_OFFLOAD_CAPABILITY = 218170113,OID_DOT11_WEP_OFFLOAD = 218170114,OID_DOT11_WEP_UPLOAD = 218170115,OID_DOT11_DEFAULT_WEP_OFFLOAD = 218170116,OID_DOT11_DEFAULT_WEP_UPLOAD = 218170117,OID_DOT11_MPDU_MAX_LENGTH = 218170118,OID_DOT11_OPERATION_MODE_CAPABILITY = 218170119,};
enum MACRO_OID_DOT11_DESIRED {OID_DOT11_DESIRED_SSID_LIST = 234946940,};
enum MACRO_OID_DOT11_ENABLED {OID_DOT11_ENABLED_AUTHENTICATION_ALGORITHM = 234946949,};
enum MACRO_OID_DOT11_OFFLOAD {OID_DOT11_OFFLOAD_CAPABILITY = 218170112,};
enum MACRO_OID_DOT11_PRIVACY {OID_DOT11_PRIVACY_EXEMPTION_LIST = 234946948,};
enum MACRO_OID_DOT11_PRIVATE {OID_DOT11_PRIVATE_OIDS_START = 218171136,OID_DOT11_CURRENT_ADDRESS = 218171138,OID_DOT11_PERMANENT_ADDRESS = 218171139,OID_DOT11_MULTICAST_LIST = 218171140,OID_DOT11_MAXIMUM_LIST_SIZE = 218171141,};
enum MACRO_OID_DOT11_WFD_GET {OID_DOT11_WFD_GET_DIALOG_TOKEN = 0xE050111,OID_DOT11_WFD_STOP_DISCOVERY = 0xE050112,OID_DOT11_WFD_DEVICE_LISTEN_CHANNEL = 0xE050113,};
enum MACRO_PASS_THROUGH_MODE {PASS_THROUGH_MODE = 0x10000000,RAW_PASS_THROUGH_MODE = 0x20000000,};
enum MACRO_PER_THREAD_LOCALE {_ENABLE_PER_THREAD_LOCALE = 0x1,_DISABLE_PER_THREAD_LOCALE = 0x2,};
enum MACRO_PLUGPLAY_PROPERTY {PLUGPLAY_PROPERTY_PERSISTENT = 0x1,};
enum MACRO_PROCESSOR_FEATURE {PROCESSOR_FEATURE_MAX = 64,};
enum MACRO_PROCESS_EXCEPTION {PROCESS_EXCEPTION_PORT_ALL_STATE_BITS = 0x3,PROCESS_EXCEPTION_PORT_ALL_STATE_FLAGS = 0x7,};
enum MACRO_RESERVE_RESOURCES {RESERVE_RESOURCES_VC = 0x40,};
enum MACRO_RemoveVirtualPort {RemoveVirtualPort = 2,};
enum MACRO_RescanVirtualPort {RescanVirtualPort = 6,};
enum MACRO_SECURITY_PROTOCOL {SECURITY_PROTOCOL_IEEE1667 = 0xEE,};
enum MACRO_SESSION_HAS_VALID {SESSION_HAS_VALID_SPECIAL_POOL_ON_EXIT = 0xEC,};
enum MACRO_ScsiReportLuns_IN {ScsiReportLuns_IN_UniqueSessionId_ID = 1,ScsiReportLuns_OUT_Status_ID = 2,};
enum MACRO_SetBindingSupport {SetBindingSupport = 5,};
enum MACRO_SetDSMCounters_IN {SetDSMCounters_IN_DsmContext_ID = 1,SetDSMCounters_IN_DsmCounters_ID = 2,};
enum MACRO_SetFC3MgmtInfo_IN {SetFC3MgmtInfo_IN_MgmtInfo_ID = 1,SetFC3MgmtInfo_OUT_HBAStatus_ID = 2,};
enum MACRO_TDI_EVENT_CHAINED {TDI_EVENT_CHAINED_RECEIVE = 7,TDI_EVENT_CHAINED_RECEIVE_DATAGRAM = 8,TDI_EVENT_CHAINED_RECEIVE_EXPEDITED = 9,TDI_EVENT_ERROR_EX = 10,TDI_CURRENT_MAJOR_VERSION = 2,TDI_CURRENT_MINOR_VERSION = 0,TDI_CURRENT_VERSION = 2,TDI_VERSION_ONE = 1,TDI_STATUS_BAD_VERSION = -1073676284,TDI_STATUS_BAD_CHARACTERISTICS = -1073676283,TDI_PNP_CONTEXT_TYPE_IF_NAME = 1,TDI_PNP_CONTEXT_TYPE_IF_ADDR = 2,TDI_PNP_CONTEXT_TYPE_PDO = 3,TDI_PNP_CONTEXT_TYPE_FIRST_OR_LAST_IF = 4,TDI_SUCCESS = 0,TDI_NO_RESOURCES = 1,TDI_ADDR_IN_USE = 2,TDI_BAD_ADDR = 3,TDI_NO_FREE_ADDR = 4,TDI_ADDR_INVALID = 6,TDI_ADDR_DELETED = 7,TDI_BUFFER_OVERFLOW = 9,TDI_BAD_EVENT_TYPE = 10,TDI_BAD_OPTION = 11,TDI_CONN_REFUSED = 14,TDI_INVALID_CONNECTION = 15,TDI_ALREADY_ASSOCIATED = 16,TDI_NOT_ASSOCIATED = 17,TDI_CONNECTION_ACTIVE = 18,TDI_CONNECTION_ABORTED = 19,TDI_CONNECTION_RESET = 20,TDI_TIMED_OUT = 21,TDI_GRACEFUL_DISC = 22,TDI_NOT_ACCEPTED = 23,TDI_MORE_PROCESSING = 24,TDI_INVALID_STATE = 25,TDI_INVALID_PARAMETER = 26,TDI_DEST_NET_UNREACH = 27,TDI_DEST_HOST_UNREACH = 28,TDI_DEST_UNREACHABLE = 28,TDI_DEST_PROT_UNREACH = 29,TDI_DEST_PORT_UNREACH = 30,TDI_INVALID_QUERY = 31,TDI_REQ_ABORTED = 32,TDI_BUFFER_TOO_SMALL = 33,TDI_CANCELLED = 34,TDI_BUFFER_TOO_BIG = 35,TDI_ITEM_NOT_FOUND = 36,TDI_INVALID_REQUEST = 254,TDI_PENDING = 255,TDI_OPTION_EOL = 0,TDI_ADDRESS_OPTION_REUSE = 1,TDI_ADDRESS_OPTION_DHCP = 2,TDI_ADDRESS_OPTION_RAW = 3,};
enum MACRO_TRANSACTION_QUERY {TRANSACTION_QUERY_INFORMATION = 0x1,TRANSACTION_SET_INFORMATION = 0x2,TRANSACTION_ENLIST = 0x4,TRANSACTION_COMMIT = 0x8,TRANSACTION_ROLLBACK = 0x10,TRANSACTION_PROPAGATE = 0x20,TRANSACTION_RIGHT_RESERVED1 = 0x40,TRANSACTION_GENERIC_READ = 0x120001,TRANSACTION_GENERIC_WRITE = 0x12003E,TRANSACTION_GENERIC_EXECUTE = 0x120018,TRANSACTION_ALL_ACCESS = 0x1F003F,TRANSACTION_RESOURCE_MANAGER_RIGHTS = 0x120037,};
enum MACRO_UNEXPECTED_KERNEL {UNEXPECTED_KERNEL_MODE_TRAP = 0x7F,UNEXPECTED_KERNEL_MODE_TRAP_M = 0x1000007F,};
enum MACRO_WHEA_ERROR_RECORD {WHEA_ERROR_RECORD_VALID_PLATFORMID = 0x1,WHEA_ERROR_RECORD_VALID_TIMESTAMP = 0x2,WHEA_ERROR_RECORD_VALID_PARTITIONID = 0x4,WHEA_ERROR_RECORD_FLAGS_RECOVERED = 0x1,WHEA_ERROR_RECORD_FLAGS_PREVIOUSERROR = 0x2,WHEA_ERROR_RECORD_FLAGS_SIMULATED = 0x4,WHEA_ERROR_RECORD_SIGNATURE = 0x52455043,WHEA_ERROR_RECORD_REVISION = 0x210,WHEA_ERROR_RECORD_SIGNATURE_END = 0xFFFFFFFF,WHEA_SECTION_DESCRIPTOR_FLAGS_PRIMARY = 0x1,WHEA_SECTION_DESCRIPTOR_FLAGS_CONTAINMENTWRN = 0x2,WHEA_SECTION_DESCRIPTOR_FLAGS_RESET = 0x4,WHEA_SECTION_DESCRIPTOR_FLAGS_THRESHOLDEXCEEDED = 0x8,WHEA_SECTION_DESCRIPTOR_FLAGS_RESOURCENA = 0x10,WHEA_SECTION_DESCRIPTOR_FLAGS_LATENTERROR = 0x20,WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_REVISION = 0x201,};
enum MACRO_WmiEnumeratePorts {WmiEnumeratePorts = 1,};
enum MACRO_WmiQueryLinkState {WmiQueryLinkState = 1,};
enum MACRO_WmiQueryPortState {WmiQueryPortState = 1,};
typedef struct _MF_VARYING_RESOURCE_MAP MF_VARYING_RESOURCE_MAP;
typedef struct _MODE_DATA_COMPRESS_PAGE MODE_DATA_COMPRESS_PAGE;
typedef struct _MODE_DEVICE_CONFIG_PAGE MODE_DEVICE_CONFIG_PAGE;
typedef struct _MODE_FLEXIBLE_DISK_PAGE MODE_FLEXIBLE_DISK_PAGE;
typedef struct _MODE_PARAMETER_HEADER10 MODE_PARAMETER_HEADER10;
typedef struct _MODE_READ_RECOVERY_PAGE MODE_READ_RECOVERY_PAGE;
typedef struct _MOUNTMGR_SET_AUTO_MOUNT MOUNTMGR_SET_AUTO_MOUNT;
typedef struct _MOUSE_UNIT_ID_PARAMETER MOUSE_UNIT_ID_PARAMETER;
typedef struct _MSFC_DH_Chap_Parameters MSFC_DH_Chap_Parameters;
typedef struct _MSMCAEvent_InvalidError MSMCAEvent_InvalidError;
typedef struct _MSNdis_80211_Statistics MSNdis_80211_Statistics;
typedef struct _MSNdis_CoHardwareStatus MSNdis_CoHardwareStatus;
typedef struct _MSNdis_CoMediaSupported MSNdis_CoMediaSupported;
typedef struct _MSNdis_CoTransmitPdusOk MSNdis_CoTransmitPdusOk;
typedef struct _MSNdis_CurrentLookahead MSNdis_CurrentLookahead;
typedef struct _MSNdis_EnumerateAdapter MSNdis_EnumerateAdapter;
typedef struct _MSNdis_MaximumFrameSize MSNdis_MaximumFrameSize;
typedef struct _MSNdis_MaximumLookahead MSNdis_MaximumLookahead;
typedef struct _MSNdis_MaximumTotalSize MSNdis_MaximumTotalSize;
typedef struct _MSNdis_NetworkLinkSpeed MSNdis_NetworkLinkSpeed;
typedef struct _MSNdis_ReceiveBlockSize MSNdis_ReceiveBlockSize;
typedef struct _MSNdis_ReceiveQueueInfo MSNdis_ReceiveQueueInfo;
typedef struct _MSSmBios_SMBiosEventlog MSSmBios_SMBiosEventlog;
typedef struct _MSiSCSI_BootInformation MSiSCSI_BootInformation;
typedef struct _MSiSCSI_DiscoveryConfig MSiSCSI_DiscoveryConfig;
typedef struct _MSiSCSI_PortalInfoClass MSiSCSI_PortalInfoClass;
typedef struct _NDIS_OFFLOAD_PARAMETERS NDIS_OFFLOAD_PARAMETERS;
typedef struct _NDIS_RECEIVE_QUEUE_INFO NDIS_RECEIVE_QUEUE_INFO;
typedef struct _NDIS_RESTART_ATTRIBUTES NDIS_RESTART_ATTRIBUTES;
typedef struct _NDIS_RSS_PROCESSOR_INFO NDIS_RSS_PROCESSOR_INFO;
typedef struct _NDIS_SG_DMA_DESCRIPTION NDIS_SG_DMA_DESCRIPTION;
typedef struct _NDIS_TAPI_CONFIG_DIALOG NDIS_TAPI_CONFIG_DIALOG;
typedef struct _NDIS_TAPI_GATHER_DIGITS NDIS_TAPI_GATHER_DIGITS;
typedef struct _NDIS_TAPI_GET_CALL_INFO NDIS_TAPI_GET_CALL_INFO;
typedef struct _NDIS_WAN_GET_STATS_INFO NDIS_WAN_GET_STATS_INFO;
typedef struct _NDIS_WMI_GROUP_AFFINITY NDIS_WMI_GROUP_AFFINITY;
typedef struct _NDIS_WWAN_AUTH_RESPONSE NDIS_WWAN_AUTH_RESPONSE;
typedef struct _NDIS_WWAN_CONTEXT_STATE NDIS_WWAN_CONTEXT_STATE;
typedef struct _NDIS_WWAN_HOME_PROVIDER NDIS_WWAN_HOME_PROVIDER;
typedef struct _NDK_EXTENSION_INTERFACE NDK_EXTENSION_INTERFACE;
typedef struct nd_router_advert ND_ROUTER_ADVERT_HEADER;
typedef struct _NET_BUFFER_LIST_CONTEXT NET_BUFFER_LIST_CONTEXT;
typedef struct _NODE_TYPE_CODE_AND_SIZE NODE_TYPE_CODE_AND_SIZE;
typedef struct _6A5B75FE3CDFCD80FCDD67FCD1AED8F3 NTFS_VOLUME_DATA_BUFFER;
typedef struct _OBJECT_NAME_INFORMATION OBJECT_NAME_INFORMATION;
typedef struct _OFFLOAD_IPSEC_DELETE_SA OFFLOAD_IPSEC_DELETE_SA;
typedef struct _ACPI_EVAL_INPUT_BUFFER *PACPI_EVAL_INPUT_BUFFER;
typedef IAdapterPowerManagement *PADAPTERPOWERMANAGEMENT;
typedef struct _ATM_TRAFFIC_DESCRIPTOR *PATM_TRAFFIC_DESCRIPTOR;
typedef struct _ATM_VC_RATES_SUPPORTED *PATM_VC_RATES_SUPPORTED;
typedef struct _AVC_SUBUNIT_INFO_BLOCK *PAVC_SUBUNIT_INFO_BLOCK;
typedef struct _BDA_TEMPLATE_PIN_JOINT *PBDA_TEMPLATE_PIN_JOINT;
typedef struct _BDA_WMDRM_RENEWLICENSE *PBDA_WMDRM_RENEWLICENSE;
typedef struct _BDCB_IMAGE_INFORMATION *PBDCB_IMAGE_INFORMATION;
typedef struct _BUS_INTERFACE_STANDARD *PBUS_INTERFACE_STANDARD;
typedef struct _CDROM_EXCLUSIVE_ACCESS *PCDROM_EXCLUSIVE_ACCESS;
typedef struct _CDROM_TOC_CD_TEXT_DATA *PCDROM_TOC_CD_TEXT_DATA;
typedef struct _CDROM_TOC_SESSION_DATA *PCDROM_TOC_SESSION_DATA;
typedef struct _CDVD_CAPABILITIES_PAGE *PCDVD_CAPABILITIES_PAGE;
typedef struct _CHANGER_ELEMENT_STATUS *PCHANGER_ELEMENT_STATUS;
typedef struct _CHANNEL_CONFIG_RESULTS *PCHANNEL_CONFIG_RESULTS;
typedef struct _PCI_CAPABILITIES_HEADER PCI_CAPABILITIES_HEADER;
typedef union _PCI_EXPRESS_ACS_CONTROL PCI_EXPRESS_ACS_CONTROL;
typedef struct _CLASS_DRIVER_EXTENSION *PCLASS_DRIVER_EXTENSION;
typedef struct _CLASS_PRIVATE_FDO_DATA *PCLASS_PRIVATE_FDO_DATA;
typedef struct _CLASS_PRIVATE_PDO_DATA *PCLASS_PRIVATE_PDO_DATA;
typedef struct _CLFS_MGMT_NOTIFICATION *PCLFS_MGMT_NOTIFICATION;
typedef struct _CLS_ARCHIVE_DESCRIPTOR *PCLS_ARCHIVE_DESCRIPTOR;
typedef struct _CM_MONITOR_DEVICE_DATA *PCM_MONITOR_DEVICE_DATA;
typedef struct _COUNTED_REASON_CONTEXT *PCOUNTED_REASON_CONTEXT;
typedef struct _CO_SPECIFIC_PARAMETERS *PCO_SPECIFIC_PARAMETERS;
typedef struct _PCW_COUNTER_INFORMATION PCW_COUNTER_INFORMATION;
typedef struct _CreateVirtualPortEx_IN *PCreateVirtualPortEx_IN;
typedef struct _DEVICE_TRIM_DESCRIPTOR *PDEVICE_TRIM_DESCRIPTOR;
typedef struct _DISK_CACHE_INFORMATION *PDISK_CACHE_INFORMATION;
typedef struct _DISK_CONTROLLER_NUMBER *PDISK_CONTROLLER_NUMBER;
typedef struct DOT11_AUTH_CIPHER_PAIR *PDOT11_AUTH_CIPHER_PAIR;
typedef struct _DOT11_EXTAP_ATTRIBUTES *PDOT11_EXTAP_ATTRIBUTES;
typedef struct DOT11_MAC_ADDRESS_LIST *PDOT11_MAC_ADDRESS_LIST;
typedef struct _DOT11_RECV_SENSITIVITY *PDOT11_RECV_SENSITIVITY;
typedef struct _DOT11_REG_DOMAIN_VALUE *PDOT11_REG_DOMAIN_VALUE;
typedef struct DOT11_VWIFI_ATTRIBUTES *PDOT11_VWIFI_ATTRIBUTES;
typedef struct _DOT11_WFD_DEVICE_ENTRY *PDOT11_WFD_DEVICE_ENTRY;
typedef struct _DXGK_DEVICE_DESCRIPTOR *PDXGK_DEVICE_DESCRIPTOR;
typedef struct _DXGK_WIN32K_PARAM_DATA *PDXGK_WIN32K_PARAM_DATA;
typedef struct _EISA_DMA_CONFIGURATION *PEISA_DMA_CONFIGURATION;
typedef struct _EISA_IRQ_CONFIGURATION *PEISA_IRQ_CONFIGURATION;
typedef struct _ENABLE_ERROR_SOURCE_IN *PENABLE_ERROR_SOURCE_IN;
typedef struct _PERF_CONFIGURATION_DATA PERF_CONFIGURATION_DATA;
typedef struct _FILE_BASIC_INFORMATION *PFILE_BASIC_INFORMATION;
typedef struct _FILE_LAYOUT_INFO_ENTRY *PFILE_LAYOUT_INFO_ENTRY;
typedef struct _FILE_LAYOUT_NAME_ENTRY *PFILE_LAYOUT_NAME_ENTRY;
typedef struct _FILE_LEVEL_TRIM_OUTPUT *PFILE_LEVEL_TRIM_OUTPUT;
typedef struct _FILE_LINKS_INFORMATION *PFILE_LINKS_INFORMATION;
typedef struct _FILE_NAMES_INFORMATION *PFILE_NAMES_INFORMATION;
typedef struct _FILE_PIPE_EVENT_BUFFER *PFILE_PIPE_EVENT_BUFFER;
typedef struct _FILE_QUOTA_INFORMATION *PFILE_QUOTA_INFORMATION;
typedef struct _FILE_SET_SPARSE_BUFFER *PFILE_SET_SPARSE_BUFFER;
typedef struct _FLT_IO_PARAMETER_BLOCK *PFLT_IO_PARAMETER_BLOCK;
typedef struct _FSRTL_PER_FILE_CONTEXT *PFSRTL_PER_FILE_CONTEXT;
typedef struct _GENERAL_LOOKASIDE_POOL *PGENERAL_LOOKASIDE_POOL;
typedef struct _GET_CHANGER_PARAMETERS *PGET_CHANGER_PARAMETERS;
typedef struct _GET_LENGTH_INFORMATION *PGET_LENGTH_INFORMATION;
typedef struct _GP_LOG_PAGE_DESCRIPTOR *PGP_LOG_PAGE_DESCRIPTOR;
typedef struct _GetFcpTargetMapping_IN *PGetFcpTargetMapping_IN;
typedef struct HBA_FCPTargetMappingV2 *PHBA_FCPTARGETMAPPINGV2;
typedef struct _HDAUDIO_CODEC_RESPONSE *PHDAUDIO_CODEC_RESPONSE;
typedef struct _HDAUDIO_CODEC_TRANSFER *PHDAUDIO_CODEC_TRANSFER;
typedef struct _HID_INTERFACE_HIDPARSE *PHID_INTERFACE_HIDPARSE;
typedef struct _HPET_DESCRIPTION_TABLE *PHPET_DESCRIPTION_TABLE;
typedef struct _HW_INITIALIZATION_DATA *PHW_INITIALIZATION_DATA;
typedef struct _IDE_MINIPORT_RESOURCES *PIDE_MINIPORT_RESOURCES;
typedef struct _IF_PHYSICAL_ADDRESS_LH *PIF_PHYSICAL_ADDRESS_LH;
typedef struct _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;
typedef struct _IMAGE_FUNCTION_ENTRY64 *PIMAGE_FUNCTION_ENTRY64;
typedef struct _IO_RESOURCE_DESCRIPTOR *PIO_RESOURCE_DESCRIPTOR;
typedef struct _ISCSI_DiscoveredTarget *PISCSI_DiscoveredTarget;
typedef struct _ISCSI_Persistent_Login *PISCSI_Persistent_Login;
typedef struct _KEY_CACHED_INFORMATION *PKEY_CACHED_INFORMATION;
typedef struct _E1D601DFB9F50A58CFF7A79389CE7A63 *PKSALLOCATOR_FRAMING_EX;
typedef struct _97BF4F75CC2B13E4CD29FCADBEF14990 *PKSAUDIO_CHANNEL_CONFIG;
typedef struct _FB17C9225429EF808B128BCE70FFD0DB *PKSDS3D_HRTF_PARAMS_MSG;
typedef struct _KSM_BDA_EVENT_COMPLETE *PKSM_BDA_EVENT_COMPLETE;
typedef struct _KSM_BDA_GPNV_NAMEINDEX *PKSM_BDA_GPNV_NAMEINDEX;
typedef union _C9F2A16A1B5FC998B91DA494984E0FDB *PKSPROPERTY_BOUNDS_LONG;
typedef struct _155DA1A439C400442DF8DC3CA0B009F1 *PKSPROPERTY_DESCRIPTION;
typedef struct _057D959110EF5AD26CCA8DAEC04011D1 *PKSPROPERTY_EXTDEVICE_S;
typedef struct _707EC234ECD45402760253CA9174D40C *PKSPROPERTY_MEMBERSLIST;
typedef struct _120C91A26C0A2C69E1789355DF7D48EB *PKSRTAUDIO_HWREGISTER32;
typedef struct _3A744348A6C9F73853F568E19FD6B4F7 *PKS_AM_SimpleRateChange;
typedef struct tagKS_DATARANGE_VIDEO_VBI *PKS_DATARANGE_VIDEO_VBI;
typedef struct tagKS_TVTUNER_CHANGE_INFO *PKS_TVTUNER_CHANGE_INFO;
typedef struct _LBA_FILTER_TABLE_ENTRY *PLBA_FILTER_TABLE_ENTRY;
typedef struct _LBA_STATUS_LIST_HEADER *PLBA_STATUS_LIST_HEADER;
typedef struct _LEGACY_BUS_INFORMATION *PLEGACY_BUS_INFORMATION;
typedef struct _LLDP_PROVIDER_DISPATCH *PLLDP_PROVIDER_DISPATCH;
typedef struct _MINIPORT_DUMP_POINTERS *PMINIPORT_DUMP_POINTERS;
typedef struct _MODE_CAPABILITIES_PAGE *PMODE_CAPABILITIES_PAGE;
typedef struct _MPEG2_TRANSPORT_STRIDE *PMPEG2_TRANSPORT_STRIDE;
typedef struct _MPIO_DISK_HEALTH_CLASS *PMPIO_DISK_HEALTH_CLASS;
typedef struct _MPIO_PASS_THROUGH_PATH *PMPIO_PASS_THROUGH_PATH;
typedef struct _MPIO_PATH_HEALTH_CLASS *PMPIO_PATH_HEALTH_CLASS;
typedef struct _MSFC_HBAPortStatistics *PMSFC_HBAPortStatistics;
typedef struct _MSMCAEvent_MemoryError *PMSMCAEvent_MemoryError;
typedef struct _MSMCAEvent_PCIBusError *PMSMCAEvent_PCIBusError;
typedef struct _MSMCAEvent_SMBIOSError *PMSMCAEvent_SMBIOSError;
typedef struct _MSNdis_80211_DataRates *PMSNdis_80211_DataRates;
typedef struct _MSNdis_80211_PowerMode *PMSNdis_80211_PowerMode;
typedef struct _MSNdis_80211_RemoveWEP *PMSNdis_80211_RemoveWEP;
typedef struct _MSNdis_80211_WEPStatus *PMSNdis_80211_WEPStatus;
typedef struct _MSNdis_80211_WLanBssId *PMSNdis_80211_WLanBssId;
typedef struct _MSNdis_AtmMaxActiveVcs *PMSNdis_AtmMaxActiveVcs;
typedef struct _MSNdis_CoDriverVersion *PMSNdis_CoDriverVersion;
typedef struct _MSNdis_CoReceivePdusOk *PMSNdis_CoReceivePdusOk;
typedef struct _MSNdis_FddiFrameErrors *PMSNdis_FddiFrameErrors;
typedef struct _MSNdis_FddiLctFailures *PMSNdis_FddiLctFailures;
typedef struct _MSNdis_ReceiveNoBuffer *PMSNdis_ReceiveNoBuffer;
typedef struct _MSNdis_StatusLinkState *PMSNdis_StatusLinkState;
typedef struct _MSNdis_StatusPortState *PMSNdis_StatusPortState;
typedef struct _MSNdis_WmiMethodHeader *PMSNdis_WmiMethodHeader;
typedef struct _MSSmBios_Sysid1394List *PMSSmBios_Sysid1394List;
typedef struct _MSSmBios_SysidUUIDList *PMSSmBios_SysidUUIDList;
typedef struct _MSWmi_PnPInstanceNames *PMSWmi_PnPInstanceNames;
typedef struct _MSiSCSI_HBAInformation *PMSiSCSI_HBAInformation;
typedef struct _MSiSCSI_NICPerformance *PMSiSCSI_NICPerformance;
typedef struct _MSiSCSI_TargetMappings *PMSiSCSI_TargetMappings;
typedef struct _NDIS_802_11_BSSID_LIST *PNDIS_802_11_BSSID_LIST;
typedef struct _NDIS_802_11_CAPABILITY *PNDIS_802_11_CAPABILITY;
typedef struct _NDIS_802_11_REMOVE_KEY *PNDIS_802_11_REMOVE_KEY;
typedef struct _NDIS_802_11_STATISTICS *PNDIS_802_11_STATISTICS;
typedef struct NDIS_CO_DEVICE_PROFILE *PNDIS_CO_DEVICE_PROFILE;
typedef struct _NDIS_FILTER_ATTRIBUTES *PNDIS_FILTER_ATTRIBUTES;
typedef struct _NDIS_PACKET_8021Q_INFO *PNDIS_PACKET_8021Q_INFO;
typedef struct _NDIS_PM_COUNTED_STRING *PNDIS_PM_COUNTED_STRING;
typedef struct _NDIS_PM_PACKET_PATTERN *PNDIS_PM_PACKET_PATTERN;
typedef struct _NDIS_PROCESSOR_INFO_EX *PNDIS_PROCESSOR_INFO_EX;
typedef struct _NDIS_STATUS_INDICATION *PNDIS_STATUS_INDICATION;
typedef struct _NDIS_TAPI_DEV_SPECIFIC *PNDIS_TAPI_DEV_SPECIFIC;
typedef struct _NDIS_TAPI_GET_DEV_CAPS *PNDIS_TAPI_GET_DEV_CAPS;
typedef struct _NDIS_WAN_GET_COMP_INFO *PNDIS_WAN_GET_COMP_INFO;
typedef struct _NDIS_WAN_GET_LINK_INFO *PNDIS_WAN_GET_LINK_INFO;
typedef struct _NDIS_WAN_PROTOCOL_CAPS *PNDIS_WAN_PROTOCOL_CAPS;
typedef struct _NDIS_WAN_SET_COMP_INFO *PNDIS_WAN_SET_COMP_INFO;
typedef struct _NDIS_WAN_SET_LINK_INFO *PNDIS_WAN_SET_LINK_INFO;
typedef struct _NDIS_WMI_METHOD_HEADER *PNDIS_WMI_METHOD_HEADER;
typedef struct _NDIS_WWAN_SIGNAL_STATE *PNDIS_WWAN_SIGNAL_STATE;
typedef struct _NDIS_WWAN_USSD_REQUEST *PNDIS_WWAN_USSD_REQUEST;
typedef union _NET_BUFFER_DATA_LENGTH *PNET_BUFFER_DATA_LENGTH;
typedef union _NET_BUFFER_LIST_HEADER *PNET_BUFFER_LIST_HEADER;
typedef struct _NLB_PUBLIC_IOCTL_INPUT *PNLB_PUBLIC_IOCTL_INPUT;
typedef struct _PNP_REPLACE_MEMORY_LIST PNP_REPLACE_MEMORY_LIST;
typedef struct _NUMA_NODE_RELATIONSHIP *PNUMA_NODE_RELATIONSHIP;
typedef struct _NV_SEP_CACHE_PARAMETER *PNV_SEP_CACHE_PARAMETER;
typedef struct _POOLED_USAGE_AND_LIMITS POOLED_USAGE_AND_LIMITS;
typedef struct _OPLOCK_KEY_ECP_CONTEXT *POPLOCK_KEY_ECP_CONTEXT;
typedef struct _POWER_SESSION_RIT_STATE POWER_SESSION_RIT_STATE;
typedef struct _PCIX_BRIDGE_CAPABILITY *PPCIX_BRIDGE_CAPABILITY;
typedef struct _PCI_EXPRESS_CAPABILITY *PPCI_EXPRESS_CAPABILITY;
typedef union _PCI_EXPRESS_SRIOV_CAPS *PPCI_EXPRESS_SRIOV_CAPS;
typedef struct _PCW_COUNTER_DESCRIPTOR *PPCW_COUNTER_DESCRIPTOR;
typedef struct _PERFORMANCE_DESCRIPTOR *PPERFORMANCE_DESCRIPTOR;
typedef struct _PLEX_READ_DATA_REQUEST *PPLEX_READ_DATA_REQUEST;
typedef struct _BD86F746C2C01DD8A428D9C33DA8EFBD PPM_THERMALCHANGE_EVENT;
typedef struct _PNP_LOCATION_INTERFACE *PPNP_LOCATION_INTERFACE;
typedef struct _PNP_REPLACE_PARAMETERS *PPNP_REPLACE_PARAMETERS;
typedef struct _POWER_SESSION_TIMEOUTS *PPOWER_SESSION_TIMEOUTS;
typedef struct _POWER_SESSION_WINLOGON *PPOWER_SESSION_WINLOGON;
typedef struct _PO_WAKE_SOURCE_HISTORY *PPO_WAKE_SOURCE_HISTORY;
typedef struct _321B4BFFCE66D8FF56170997BB33071C *PPPM_IDLE_ACCOUNTING_EX;
typedef struct _6A72E0E621DD38BDAEEB041E3C2A50BB *PPPM_WMI_IDLE_STATES_EX;
typedef struct _64810CDFD77AB08FD39653CA0460DA11 *PPPM_WMI_PERF_STATES_EX;
typedef struct _PROCESSOR_POWER_POLICY *PPROCESSOR_POWER_POLICY;
typedef struct _PROCESSOR_RELATIONSHIP *PPROCESSOR_RELATIONSHIP;
typedef struct _PROCESS_EXCEPTION_PORT *PPROCESS_EXCEPTION_PORT;
typedef struct _READ_BLOCK_LIMITS *PREAD_BLOCK_LIMITS_DATA;
typedef struct _RETRIEVAL_POINTER_BASE *PRETRIEVAL_POINTER_BASE;
typedef struct _KCRM_TRANSACTION_BLOB *PRKCRM_TRANSACTION_BLOB;
typedef struct _RKF_BYPASS_ECP_CONTEXT *PRKF_BYPASS_ECP_CONTEXT;
typedef struct _RTL_DYNAMIC_HASH_TABLE *PRTL_DYNAMIC_HASH_TABLE;
typedef struct _EDF2F1A5F1BE56D609AF1AF9494F3DFB *PRX_DEBUG_TRACE_CONTROL;
typedef struct _RX_FCBTRACKER_CALLINFO *PRX_FCBTRACKER_CALLINFO;
typedef struct _RX_FSD_DISPATCH_VECTOR *PRX_FSD_DISPATCH_VECTOR;
typedef struct _RX_TOPLEVELIRP_CONTEXT *PRX_TOPLEVELIRP_CONTEXT;
typedef struct _RemoveRADIUSServer_OUT *PRemoveRADIUSServer_OUT;
typedef struct _RemoveVirtualPortEx_IN *PRemoveVirtualPortEx_IN;
typedef struct _SCATTER_GATHER_ELEMENT *PSCATTER_GATHER_ELEMENT;
typedef struct _SCSI_PNP_REQUEST_BLOCK *PSCSI_PNP_REQUEST_BLOCK;
typedef struct _SCSI_WMI_REQUEST_BLOCK *PSCSI_WMI_REQUEST_BLOCK;
typedef struct _SD_GLOBAL_CHANGE_INPUT *PSD_GLOBAL_CHANGE_INPUT;
typedef struct _SEND_RECEIVE_HOOK_INFO *PSEND_RECEIVE_HOOK_INFO;
typedef struct _SES_CONTROL_DESCRIPTOR *PSES_CONTROL_DESCRIPTOR;
typedef struct _SE_ADT_PARAMETER_ARRAY *PSE_ADT_PARAMETER_ARRAY;
typedef struct _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;
typedef struct _SE_SECURITY_DESCRIPTOR *PSE_SECURITY_DESCRIPTOR;
typedef struct _SLOT_TABLE_INFORMATION *PSLOT_TABLE_INFORMATION;
typedef struct SMHBA_SASPhyStatistics *PSMHBA_SASPHYSTATISTICS;
typedef struct _STORAGE_PROPERTY_QUERY *PSTORAGE_PROPERTY_QUERY;
typedef struct _STORAGE_TRACE_DPS_INFO *PSTORAGE_TRACE_DPS_INFO;
typedef struct _STOR_INIT_TRACING_ARGS *PSTOR_INIT_TRACING_ARGS;
typedef struct _STOR_LOG_EVENT_DETAILS *PSTOR_LOG_EVENT_DETAILS;
typedef struct _SUB_Q_CURRENT_POSITION *PSUB_Q_CURRENT_POSITION;
typedef struct _SecPkgContext_CredInfo *PSecPkgContext_CredInfo;
typedef struct _SecPkgContext_KeyInfoW *PSecPkgContext_KeyInfoW;
typedef struct _SecPkgContext_Lifespan *PSecPkgContext_Lifespan;
typedef struct _SecPkgContext_NegoKeys *PSecPkgContext_NegoKeys;
typedef struct _SecPkgCredentials_Cert *PSecPkgCredentials_Cert;
typedef struct _SECURITY_FUNCTION_TABLE_W *PSecurityFunctionTableW;
typedef struct _SetCHAPSharedSecret_IN *PSetCHAPSharedSecret_IN;
typedef struct _SetGenerationalGuid_IN *PSetGenerationalGuid_IN;
typedef struct _SetPersistentEntry_OUT *PSetPersistentEntry_OUT;
typedef struct _TDI_ADDRESS_NETBIOS_EX *PTDI_ADDRESS_NETBIOS_EX;
typedef struct _TDI_DISCONNECT_REQUEST *PTDI_REQUEST_DISCONNECT;
typedef struct _TOKEN_MANDATORY_POLICY *PTOKEN_MANDATORY_POLICY;
typedef struct _TRANSACTION_LIST_ENTRY *PTRANSACTION_LIST_ENTRY;
typedef struct _TXFS_LIST_TRANSACTIONS *PTXFS_LIST_TRANSACTIONS;
typedef struct _UNMAP_BLOCK_DESCRIPTOR *PUNMAP_BLOCK_DESCRIPTOR;
typedef struct _USB_IDLE_CALLBACK_INFO *PUSB_IDLE_CALLBACK_INFO;
typedef struct _USB_PIPE_INFORMATION_0 *PUSB_PIPE_INFORMATION_0;
typedef struct _VIDEO_MODE_INFORMATION *PVIDEO_MODE_INFORMATION;
typedef struct _VIDEO_POINTER_POSITION *PVIDEO_POINTER_POSITION;
typedef struct _VIDEO_PORT_CONFIG_INFO *PVIDEO_PORT_CONFIG_INFO;
typedef struct _VIDEO_POWER_MANAGEMENT *PVIDEO_POWER_MANAGEMENT;
typedef struct _VIDEO_WIN32K_CALLBACKS *PVIDEO_WIN32K_CALLBACKS;
typedef struct _VPCI_WRITE_BLOCK_INPUT *PVPCI_WRITE_BLOCK_INPUT;
typedef struct _VPD_SERIAL_NUMBER_PAGE *PVPD_SERIAL_NUMBER_PAGE;
typedef struct _VP_SCATTER_GATHER_LIST *PVP_SCATTER_GATHER_LIST;
typedef struct _WHEA_NMI_ERROR_SECTION *PWHEA_NMI_ERROR_SECTION;
typedef struct _WMI_CHANGER_PARAMETERS *PWMI_CHANGER_PARAMETERS;
typedef struct _WMI_TAPE_SYMBOLIC_NAME *PWMI_TAPE_SYMBOLIC_NAME;
typedef struct _WRITE_USN_REASON_INPUT *PWRITE_USN_REASON_INPUT;
typedef struct _WSA_COMPATIBILITY_MODE *PWSA_COMPATIBILITY_MODE;
typedef struct _WWAN_AUTH_AKA_RESPONSE *PWWAN_AUTH_AKA_RESPONSE;
typedef struct _WWAN_AUTH_SIM_RESPONSE *PWWAN_AUTH_SIM_RESPONSE;
typedef struct _WWAN_SET_CONTEXT_STATE *PWWAN_SET_CONTEXT_STATE;
typedef struct _WWAN_SMS_CONFIGURATION *PWWAN_SMS_CONFIGURATION;
typedef struct _WmiSetALSBrightness_IN *PWmiSetALSBrightness_IN;
typedef struct _QUERY_FILE_LAYOUT_INPUT QUERY_FILE_LAYOUT_INPUT;
typedef struct _RDBSS_STARTSTOP_CONTEXT_ RDBSS_STARTSTOP_CONTEXT;
typedef struct _5174F44B3769759428827427236E3006 REFS_VOLUME_DATA_BUFFER;
typedef struct _RemoveVirtualPortEx_OUT RemoveVirtualPortEx_OUT;
typedef struct _S3PT_PERFORMANCE_RECORD S3PT_PERFORMANCE_RECORD;
typedef struct _SCARD_CARD_CAPABILITIES SCARD_CARD_CAPABILITIES;
typedef struct _E6BAC8160F506AD645132E93AB36F89C SCSIWMI_REQUEST_CONTEXT;
typedef struct _SD_GLOBAL_CHANGE_OUTPUT SD_GLOBAL_CHANGE_OUTPUT;
typedef struct _SD_RW_EXTENDED_ARGUMENT SD_RW_EXTENDED_ARGUMENT;
typedef struct _SECTION_OBJECT_POINTERS SECTION_OBJECT_POINTERS;
typedef struct _SECURITY_CLIENT_CONTEXT SECURITY_CLIENT_CONTEXT;
typedef struct _22CB949541BBA3A46A33E43835E46CAD SET_POWER_SETTING_VALUE;
typedef struct _SID_AND_ATTRIBUTES_HASH SID_AND_ATTRIBUTES_HASH;
typedef struct _SMB_TRANSACT_NAMED_PIPE SMB_TRANSACT_NAMED_PIPE;
typedef struct SMHBA_AdapterAttributes SMHBA_ADAPTERATTRIBUTES;
typedef struct SMHBA_LibraryAttributes SMHBA_LIBRARYATTRIBUTES;
typedef struct _SOCKET_PEER_TARGET_NAME SOCKET_PEER_TARGET_NAME;
typedef struct _SRBEX_DATA_SCSI_CDB_VAR SRBEX_DATA_SCSI_CDB_VAR;
typedef struct _STORAGE_ERRORLOG_PACKET STORAGE_ERRORLOG_PACKET;
typedef struct _STORAGE_PREDICT_FAILURE STORAGE_PREDICT_FAILURE;
typedef struct _STORAGE_TRACE_INIT_INFO STORAGE_TRACE_INIT_INFO;
typedef struct _STOR_POFX_POWER_CONTROL STOR_POFX_POWER_CONTROL;
typedef struct _STOR_POWER_SETTING_INFO STOR_POWER_SETTING_INFO;
typedef struct _STOR_SYSTEM_POWER_HINTS STOR_SYSTEM_POWER_HINTS;
typedef struct _STOR_UNIT_CONTROL_POWER STOR_UNIT_CONTROL_POWER;
typedef struct _SecPkgContext_UserFlags SecPkgContext_UserFlags;
typedef struct _SetCHAPSharedSecret_OUT SetCHAPSharedSecret_OUT;
typedef struct _SetGenerationalGuid_OUT SetGenerationalGuid_OUT;
typedef struct _SetGroupPresharedKey_IN SetGroupPresharedKey_IN;
typedef struct _SetInitiatorNodeName_IN SetInitiatorNodeName_IN;
typedef struct _SetLoadBalancePolicy_IN SetLoadBalancePolicy_IN;
typedef struct _SetPresharedKeyForId_IN SetPresharedKeyForId_IN;
typedef struct _SpanningEventDescriptor SpanningEventDescriptor;
typedef struct _SpanningEventEmmMessage SpanningEventEmmMessage;
typedef struct _TDI_PROVIDER_STATISTICS TDI_PROVIDER_STATISTICS;
typedef struct _TDI_REQUEST_KERNEL_SEND TDI_REQUEST_KERNEL_SEND;
typedef struct _TRANSPORT_HEADER_OFFSET TRANSPORT_HEADER_OFFSET;
typedef struct _USBD_DEVICE_INFORMATION USBD_DEVICE_INFORMATION;
typedef struct _USBD_STREAM_INFORMATION USBD_STREAM_INFORMATION;
typedef struct _USB_ENDPOINT_DESCRIPTOR USB_ENDPOINT_DESCRIPTOR;
typedef struct _407A2FFEB90671F2460E9DB49EB613D5 VIDEO_BRIGHTNESS_POLICY;
typedef struct _VIDEO_CURSOR_ATTRIBUTES VIDEO_CURSOR_ATTRIBUTES;
typedef struct _VIDEO_PORT_AGP_SERVICES VIDEO_PORT_AGP_SERVICES;
typedef struct tag_video_stream_init_parms VIDEO_STREAM_INIT_PARMS;
typedef struct _VPCI_INTERFACE_STANDARD VPCI_INTERFACE_STANDARD;
typedef struct _VPD_IDENTIFICATION_PAGE VPD_IDENTIFICATION_PAGE;
typedef union _WHEA_ERROR_PACKET_FLAGS WHEA_ERROR_PACKET_FLAGS;
typedef struct _WHEA_IPF_CMC_DESCRIPTOR WHEA_IPF_CMC_DESCRIPTOR;
typedef struct _WHEA_IPF_CPE_DESCRIPTOR WHEA_IPF_CPE_DESCRIPTOR;
typedef struct _WHEA_IPF_MCA_DESCRIPTOR WHEA_IPF_MCA_DESCRIPTOR;
typedef union _WHEA_NOTIFICATION_FLAGS WHEA_NOTIFICATION_FLAGS;
typedef union _WHEA_PCIEXPRESS_VERSION WHEA_PCIEXPRESS_VERSION;
typedef struct _WHEA_X64_REGISTER_STATE WHEA_X64_REGISTER_STATE;
typedef struct _WHEA_X86_REGISTER_STATE WHEA_X86_REGISTER_STATE;
typedef struct _WHEA_XPF_CMC_DESCRIPTOR WHEA_XPF_CMC_DESCRIPTOR;
typedef struct _WHEA_XPF_MCE_DESCRIPTOR WHEA_XPF_MCE_DESCRIPTOR;
typedef struct _WHEA_XPF_NMI_DESCRIPTOR WHEA_XPF_NMI_DESCRIPTOR;
typedef struct _WSK_DATAGRAM_INDICATION WSK_DATAGRAM_INDICATION;
typedef struct _WWAN_AUTH_AKAP_RESPONSE WWAN_AUTH_AKAP_RESPONSE;
typedef struct _WWAN_AUTH_AKA_CHALLENGE WWAN_AUTH_AKA_CHALLENGE;
typedef struct _WWAN_AUTH_SIM_CHALLENGE WWAN_AUTH_SIM_CHALLENGE;
typedef struct _WWAN_REGISTRATION_STATE WWAN_REGISTRATION_STATE;
typedef struct _WWAN_SERVICE_ACTIVATION WWAN_SERVICE_ACTIVATION;
typedef struct _WWAN_SET_REGISTER_STATE WWAN_SET_REGISTER_STATE;
typedef struct _WmiEnumReceiveQueues_IN WmiEnumReceiveQueues_IN;
typedef struct _WmiMonitorColorXYZinCIE WmiMonitorColorXYZinCIE;
typedef struct _WmiSetLinkParameters_IN WmiSetLinkParameters_IN;
typedef struct _WmiSetPortParameters_IN WmiSetPortParameters_IN;
enum _ACPI_WPBT_CONTENT_TYPE {WpbtContentTypeNative = 0x1,};
enum _ARBITER_REQUEST_SOURCE {ArbiterRequestUndefined = 0xFFFFFFFF,ArbiterRequestLegacyReported = 0x0,ArbiterRequestHalReported = 0x1,ArbiterRequestLegacyAssigned = 0x2,ArbiterRequestPnpDetected = 0x3,ArbiterRequestPnpEnumerated = 0x4,};
enum _CDROM_PERFORMANCE_TYPE {CdromReadPerformance = 0x1,CdromWritePerformance = 0x2,};
struct _CLASS_PRIVATE_FDO_DATA;
struct _CLASS_PRIVATE_PDO_DATA;
enum _D3DDDIMULTISAMPLE_TYPE {D3DDDIMULTISAMPLE_NONE = 0x0,D3DDDIMULTISAMPLE_NONMASKABLE = 0x1,D3DDDIMULTISAMPLE_2_SAMPLES = 0x2,D3DDDIMULTISAMPLE_3_SAMPLES = 0x3,D3DDDIMULTISAMPLE_4_SAMPLES = 0x4,D3DDDIMULTISAMPLE_5_SAMPLES = 0x5,D3DDDIMULTISAMPLE_6_SAMPLES = 0x6,D3DDDIMULTISAMPLE_7_SAMPLES = 0x7,D3DDDIMULTISAMPLE_8_SAMPLES = 0x8,D3DDDIMULTISAMPLE_9_SAMPLES = 0x9,D3DDDIMULTISAMPLE_10_SAMPLES = 0xA,D3DDDIMULTISAMPLE_11_SAMPLES = 0xB,D3DDDIMULTISAMPLE_12_SAMPLES = 0xC,D3DDDIMULTISAMPLE_13_SAMPLES = 0xD,D3DDDIMULTISAMPLE_14_SAMPLES = 0xE,D3DDDIMULTISAMPLE_15_SAMPLES = 0xF,D3DDDIMULTISAMPLE_16_SAMPLES = 0x10,D3DDDIMULTISAMPLE_FORCE_UINT = 0x7FFFFFFF,};
enum _D3DKMDT_GDISURFACETYPE {D3DKMDT_GDISURFACE_INVALID = 0x0,D3DKMDT_GDISURFACE_TEXTURE = 0x1,D3DKMDT_GDISURFACE_STAGING_CPUVISIBLE = 0x2,D3DKMDT_GDISURFACE_STAGING = 0x3,D3DKMDT_GDISURFACE_LOOKUPTABLE = 0x4,D3DKMDT_GDISURFACE_EXISTINGSYSMEM = 0x5,D3DKMDT_GDISURFACE_TEXTURE_CPUVISIBLE = 0x6,};
enum _DOT11_CIPHER_ALGORITHM {DOT11_CIPHER_ALGO_NONE = 0x0,DOT11_CIPHER_ALGO_WEP40 = 0x1,DOT11_CIPHER_ALGO_TKIP = 0x2,DOT11_CIPHER_ALGO_CCMP = 0x4,DOT11_CIPHER_ALGO_WEP104 = 0x5,DOT11_CIPHER_ALGO_BIP = 0x6,DOT11_CIPHER_ALGO_WPA_USE_GROUP = 0x100,DOT11_CIPHER_ALGO_RSN_USE_GROUP = 0x100,DOT11_CIPHER_ALGO_WEP = 0x101,DOT11_CIPHER_ALGO_IHV_START = 0x80000000,DOT11_CIPHER_ALGO_IHV_END = 0xFFFFFFFF,};
enum _DOT11_HOP_ALGO_ADOPTED {dot11_hop_algo_current = 0x0,dot11_hop_algo_hop_index = 0x1,dot11_hop_algo_hcc = 0x2,};
enum _DXGK_CHILD_DEVICE_TYPE {TypeUninitialized = 0x0,TypeVideoOutput = 0x1,TypeOther = 0x2,};
enum _DXGK_CHILD_STATUS_TYPE {StatusUninitialized = 0x0,StatusConnection = 0x1,StatusRotation = 0x2,};
enum _FILE_INFORMATION_CLASS {FileDirectoryInformation = 0x1,FileFullDirectoryInformation = 0x2,FileBothDirectoryInformation = 0x3,FileBasicInformation = 0x4,FileStandardInformation = 0x5,FileInternalInformation = 0x6,FileEaInformation = 0x7,FileAccessInformation = 0x8,FileNameInformation = 0x9,FileRenameInformation = 0xA,FileLinkInformation = 0xB,FileNamesInformation = 0xC,FileDispositionInformation = 0xD,FilePositionInformation = 0xE,FileFullEaInformation = 0xF,FileModeInformation = 0x10,FileAlignmentInformation = 0x11,FileAllInformation = 0x12,FileAllocationInformation = 0x13,FileEndOfFileInformation = 0x14,FileAlternateNameInformation = 0x15,FileStreamInformation = 0x16,FilePipeInformation = 0x17,FilePipeLocalInformation = 0x18,FilePipeRemoteInformation = 0x19,FileMailslotQueryInformation = 0x1A,FileMailslotSetInformation = 0x1B,FileCompressionInformation = 0x1C,FileObjectIdInformation = 0x1D,FileCompletionInformation = 0x1E,FileMoveClusterInformation = 0x1F,FileQuotaInformation = 0x20,FileReparsePointInformation = 0x21,FileNetworkOpenInformation = 0x22,FileAttributeTagInformation = 0x23,FileTrackingInformation = 0x24,FileIdBothDirectoryInformation = 0x25,FileIdFullDirectoryInformation = 0x26,FileValidDataLengthInformation = 0x27,FileShortNameInformation = 0x28,FileIoCompletionNotificationInformation = 0x29,FileIoStatusBlockRangeInformation = 0x2A,FileIoPriorityHintInformation = 0x2B,FileSfioReserveInformation = 0x2C,FileSfioVolumeInformation = 0x2D,FileHardLinkInformation = 0x2E,FileProcessIdsUsingFileInformation = 0x2F,FileNormalizedNameInformation = 0x30,FileNetworkPhysicalNameInformation = 0x31,FileIdGlobalTxDirectoryInformation = 0x32,FileIsRemoteDeviceInformation = 0x33,FileAttributeCacheInformation = 0x34,FileNumaNodeInformation = 0x35,FileStandardLinkInformation = 0x36,FileRemoteProtocolInformation = 0x37,FileRenameInformationBypassAccessCheck = 0x38,FileLinkInformationBypassAccessCheck = 0x39,FileVolumeNameInformation = 0x3A,FileIdInformation = 0x3B,FileIdExtdDirectoryInformation = 0x3C,FileMaximumInformation = 0x3D,};
typedef struct _0B8D1429C3827E0DB460E98487EB6908 _FPIEEE_EXCEPTION_FLAGS;
enum _KBUGCHECK_DUMP_IO_TYPE {KbDumpIoInvalid = 0x0,KbDumpIoHeader = 0x1,KbDumpIoBody = 0x2,KbDumpIoSecondaryData = 0x3,KbDumpIoComplete = 0x4,};
enum _NDIS_802_11_POWER_MODE {Ndis802_11PowerModeCAM = 0x0,Ndis802_11PowerModeMAX_PSP = 0x1,Ndis802_11PowerModeFast_PSP = 0x2,Ndis802_11PowerModeMax = 0x3,};
enum _NDIS_802_11_WEP_STATUS {Ndis802_11WEPEnabled = 0x0,Ndis802_11Encryption1Enabled = 0x0,Ndis802_11WEPDisabled = 0x1,Ndis802_11EncryptionDisabled = 0x1,Ndis802_11WEPKeyAbsent = 0x2,Ndis802_11Encryption1KeyAbsent = 0x2,Ndis802_11WEPNotSupported = 0x3,Ndis802_11EncryptionNotSupported = 0x3,Ndis802_11Encryption2Enabled = 0x4,Ndis802_11Encryption2KeyAbsent = 0x5,Ndis802_11Encryption3Enabled = 0x6,Ndis802_11Encryption3KeyAbsent = 0x7,};
enum _NDIS_IPV4_HEADER_FIELD {NdisIPv4HeaderFieldUndefined = 0x0,NdisIPv4HeaderFieldProtocol = 0x1,NdisIPv4HeaderFieldMaximum = 0x2,};
enum _NDIS_IPV6_HEADER_FIELD {NdisIPv6HeaderFieldUndefined = 0x0,NdisIPv6HeaderFieldProtocol = 0x1,NdisIPv6HeaderFieldMaximum = 0x2,};
enum _NDIS_MSIX_TABLE_CONFIG {NdisMSIXTableConfigSetTableEntry = 0x0,NdisMSIXTableConfigMaskTableEntry = 0x1,NdisMSIXTableConfigUnmaskTableEntry = 0x2,NdisMSIXTableConfigMax = 0x3,};
enum _NDIS_WAN_HEADER_FORMAT {NdisWanHeaderNative = 0x0,NdisWanHeaderEthernet = 0x1,};
enum _NET_DEVICE_POWER_STATE {NetDeviceStateUnspecified = 0x0,NetDeviceStateD0 = 0x1,NetDeviceStateD1 = 0x2,NetDeviceStateD2 = 0x3,NetDeviceStateD3 = 0x4,NetDeviceStateMaximum = 0x5,};
enum _NET_IF_CONNECTION_TYPE {NET_IF_CONNECTION_DEDICATED = 0x1,NET_IF_CONNECTION_PASSIVE = 0x2,NET_IF_CONNECTION_DEMAND = 0x3,NET_IF_CONNECTION_MAXIMUM = 0x4,};
enum _OFFLOAD_INTEGRITY_ALGO {OFFLOAD_IPSEC_INTEGRITY_NONE = 0x0,OFFLOAD_IPSEC_INTEGRITY_MD5 = 0x1,OFFLOAD_IPSEC_INTEGRITY_SHA = 0x2,OFFLOAD_IPSEC_INTEGRITY_MAX = 0x3,};
enum _PCI_HARDWARE_INTERFACE {PciConventional = 0x0,PciXMode1 = 0x1,PciXMode2 = 0x2,PciExpress = 0x3,};
enum _SCSI_NOTIFICATION_TYPE {RequestComplete = 0x0,NextRequest = 0x1,NextLuRequest = 0x2,ResetDetected = 0x3,CallDisableInterrupts = 0x4,CallEnableInterrupts = 0x5,RequestTimerCall = 0x6,BusChangeDetected = 0x7,WMIEvent = 0x8,WMIReregister = 0x9,LinkUp = 0xA,LinkDown = 0xB,QueryTickCount = 0xC,BufferOverrunDetected = 0xD,TraceNotification = 0xE,};
enum _SCSI_UNIT_CONTROL_TYPE {ScsiQuerySupportedUnitControlTypes = 0x0,ScsiUnitUsage = 0x1,ScsiUnitStart = 0x2,ScsiUnitPower = 0x3,ScsiUnitPoFxPowerInfo = 0x4,ScsiUnitPoFxPowerRequired = 0x5,ScsiUnitPoFxPowerActive = 0x6,ScsiUnitPoFxPowerSetFState = 0x7,ScsiUnitPoFxPowerControl = 0x8,ScsiUnitControlMax = 0x9,MakeUnitControlTypeSizeOfUlong = 0xFFFFFFFF,};
enum _STORPORT_FUNCTION_CODE {ExtFunctionAllocatePool = 0x0,ExtFunctionFreePool = 0x1,ExtFunctionAllocateMdl = 0x2,ExtFunctionFreeMdl = 0x3,ExtFunctionBuildMdlForNonPagedPool = 0x4,ExtFunctionGetSystemAddress = 0x5,ExtFunctionGetOriginalMdl = 0x6,ExtFunctionCompleteServiceIrp = 0x7,ExtFunctionGetDeviceObjects = 0x8,ExtFunctionBuildScatterGatherList = 0x9,ExtFunctionPutScatterGatherList = 0xA,ExtFunctionAcquireMSISpinLock = 0xB,ExtFunctionReleaseMSISpinLock = 0xC,ExtFunctionGetMessageInterruptInformation = 0xD,ExtFunctionInitializePerformanceOptimizations = 0xE,ExtFunctionGetStartIoPerformanceParameters = 0xF,ExtFunctionLogSystemEvent = 0x10,ExtFunctionGetCurrentProcessorNumber = 0x11,ExtFunctionGetActiveGroupCount = 0x12,ExtFunctionGetGroupAffinity = 0x13,ExtFunctionGetActiveNodeCount = 0x14,ExtFunctionGetNodeAffinity = 0x15,ExtFunctionGetHighestNodeNumber = 0x16,ExtFunctionGetLogicalProcessorRelationship = 0x17,ExtFunctionAllocateContiguousMemorySpecifyCacheNode = 0x18,ExtFunctionFreeContiguousMemorySpecifyCache = 0x19,ExtFunctionSetPowerSettingNotificationGuids = 0x1A,ExtFunctionInvokeAcpiMethod = 0x1B,ExtFunctionGetRequestInfo = 0x1C,ExtFunctionInitializeWorker = 0x1D,ExtFunctionQueueWorkItem = 0x1E,ExtFunctionFreeWorker = 0x1F,ExtFunctionInitializeTimer = 0x20,ExtFunctionRequestTimer = 0x21,ExtFunctionFreeTimer = 0x22,ExtFunctionInitializeSListHead = 0x23,ExtFunctionInterlockedFlushSList = 0x24,ExtFunctionInterlockedPopEntrySList = 0x25,ExtFunctionInterlockedPushEntrySList = 0x26,ExtFunctionQueryDepthSList = 0x27,ExtFunctionGetActivityId = 0x28,ExtFunctionGetSystemPortNumber = 0x29,ExtFunctionGetDataInBufferMdl = 0x2A,ExtFunctionGetDataInBufferSystemAddress = 0x2B,ExtFunctionGetDataInBufferScatterGatherList = 0x2C,ExtFunctionMarkDumpMemory = 0x2D,ExtFunctionSetUnitAttributes = 0x2E,ExtFunctionQueryPerformanceCounter = 0x2F,ExtFunctionInitializePoFxPower = 0x30,ExtFunctionPoFxActivateComponent = 0x31,ExtFunctionPoFxIdleComponent = 0x32,ExtFunctionPoFxSetComponentLatency = 0x33,ExtFunctionPoFxSetComponentResidency = 0x34,ExtFunctionPoFxPowerControl = 0x35,ExtFunctionFlushDataBufferMdl = 0x36,ExtFunctionDeviceOperationAllowed = 0x37,};
enum _SYSCTL_IRP_DISPOSITION {IrpProcessed = 0x0,IrpNotCompleted = 0x1,IrpNotWmi = 0x2,IrpForward = 0x3,};
struct _SecPkgContext_NegoKeys {unsigned int KeyType;unsigned short KeyLength;unsigned char *KeyValue;unsigned int VerifyKeyType;unsigned short VerifyKeyLength;unsigned char *VerifyKeyValue;};
struct _SecPkgCredentials_Cert {unsigned int EncodedCertSize;unsigned char *EncodedCert;};
enum _USER_ACTIVITY_PRESENCE {PowerUserPresent = 0x0,PowerUserNotPresent = 0x1,PowerUserInactive = 0x2,PowerUserMaximum = 0x3,PowerUserInvalid = 0x3,};
enum _VIDEO_DEVICE_DATA_TYPE {VpMachineData = 0x0,VpCmosData = 0x1,VpBusData = 0x2,VpControllerData = 0x3,VpMonitorData = 0x4,};
enum _WHEA_ERROR_SOURCE_TYPE {WheaErrSrcTypeMCE = 0x0,WheaErrSrcTypeCMC = 0x1,WheaErrSrcTypeCPE = 0x2,WheaErrSrcTypeNMI = 0x3,WheaErrSrcTypePCIe = 0x4,WheaErrSrcTypeGeneric = 0x5,WheaErrSrcTypeINIT = 0x6,WheaErrSrcTypeBOOT = 0x7,WheaErrSrcTypeSCIGeneric = 0x8,WheaErrSrcTypeIPFMCA = 0x9,WheaErrSrcTypeIPFCMC = 0xA,WheaErrSrcTypeIPFCPE = 0xB,WheaErrSrcTypeMax = 0xC,};
enum _WWAN_ASYNC_GETSET_TYPE {WwanAsyncGetDeviceCaps = 0x0,WwanAsyncGetReadyInfo = 0x1,WwanAsyncGetRadioState = 0x2,WwanAsyncSetRadioState = 0x3,WwanAsyncGetPin = 0x4,WwanAsyncSetPin = 0x5,WwanAsyncGetPinList = 0x6,WwanAsyncGetHomeProvider = 0x7,WwanAsyncSetHomeProvider = 0x8,WwanAsyncGetPreferredProviders = 0x9,WwanAsyncSetPreferredProviders = 0xA,WwanAsyncGetVisibleProviders = 0xB,WwanAsyncGetRegisterState = 0xC,WwanAsyncSetRegisterState = 0xD,WwanAsyncGetPacketService = 0xE,WwanAsyncSetPacketService = 0xF,WwanAsyncGetSignalState = 0x10,WwanAsyncSetSignalState = 0x11,WwanAsyncGetConnect = 0x12,WwanAsyncSetConnect = 0x13,WwanAsyncGetProvisionedContexts = 0x14,WwanAsyncSetProvisionedContext = 0x15,WwanAsyncSetServiceActivation = 0x16,WwanAsyncGetSmsConfiguration = 0x17,WwanAsyncSetSmsConfiguration = 0x18,WwanAsyncSmsRead = 0x19,WwanAsyncSmsSend = 0x1A,WwanAsyncSmsDelete = 0x1B,WwanAsyncSmsStatus = 0x1C,WwanAsyncSetVendorSpecific = 0x1D,WwanAsyncSetProfileIndex = 0x1E,WwanAsyncGetDeviceServices = 0x1F,WwanAsyncSubscribeDeviceServiceEvents = 0x20,WwanAsyncAuthChallenge = 0x21,WwanAsyncUssdRequest = 0x22,WwanAsyncSetPinEx = 0x23,WwanAsyncGetPinEx = 0x24,WwanAsyncGetDeviceServiceCommand = 0x25,WwanAsyncSetDeviceServiceCommand = 0x26,WwanAsyncQueryDeviceServiceSupportedCommands = 0x27,WwanAsyncGetPreferredMultiCarrierProviders = 0x28,WwanAsyncSetPreferredMultiCarrierProviders = 0x29,WwanAsyncSetDeviceServiceSession = 0x2A,WwanAsyncWriteDeviceServiceSession = 0x2B,WWAN_ASYNC_GETSET_TYPE_MAX = 0x2C,};
enum _WWAN_SMS_CDMA_ENCODING {WwanSmsCdmaEncodingOctet = 0x0,WwanSmsCdmaEncodingEpm = 0x1,WwanSmsCdmaEncoding7BitAscii = 0x2,WwanSmsCdmaEncodingIa5 = 0x3,WwanSmsCdmaEncodingUnicode = 0x4,WwanSmsCdmaEncodingShiftJis = 0x5,WwanSmsCdmaEncodingKorean = 0x6,WwanSmsCdmaEncodingLatinHebrew = 0x7,WwanSmsCdmaEncodingLatin = 0x8,WwanSmsCdmaEncodingGsm7Bit = 0x9,WwanSmsCdmaEncodingMax = 0xA,};
enum _WWAN_USSD_REQUEST_TYPE {WwanUssdRequestInitiate = 0x0,WwanUssdRequestContinue = 0x1,WwanUssdRequestCancel = 0x2,};
typedef struct _ACPI_EVAL_INPUT_BUFFER ACPI_EVAL_INPUT_BUFFER;
typedef struct _ATM_TRAFFIC_DESCRIPTOR ATM_TRAFFIC_DESCRIPTOR;
typedef struct _ATM_VC_RATES_SUPPORTED ATM_VC_RATES_SUPPORTED;
enum ATSCComponentTypeFlags {ATSCCT_AC3 = 0x1,};
typedef struct _AVC_SUBUNIT_INFO_BLOCK AVC_SUBUNIT_INFO_BLOCK;
typedef struct _BDA_TEMPLATE_PIN_JOINT BDA_TEMPLATE_PIN_JOINT;
typedef struct _BDA_WMDRM_RENEWLICENSE BDA_WMDRM_RENEWLICENSE;
typedef struct _BDCB_IMAGE_INFORMATION BDCB_IMAGE_INFORMATION;
typedef struct _BUS_INTERFACE_STANDARD BUS_INTERFACE_STANDARD;
typedef struct _CDROM_EXCLUSIVE_ACCESS CDROM_EXCLUSIVE_ACCESS;
typedef struct _CDROM_TOC_CD_TEXT_DATA CDROM_TOC_CD_TEXT_DATA;
typedef struct _CDROM_TOC_SESSION_DATA CDROM_TOC_SESSION_DATA;
typedef struct _CDVD_CAPABILITIES_PAGE CDVD_CAPABILITIES_PAGE;
typedef struct _CHANGER_ELEMENT_STATUS CHANGER_ELEMENT_STATUS;
typedef struct _CHANNEL_CONFIG_RESULTS CHANNEL_CONFIG_RESULTS;
typedef struct _CLASS_DRIVER_EXTENSION CLASS_DRIVER_EXTENSION;
typedef struct _CLASS_PRIVATE_FDO_DATA CLASS_PRIVATE_FDO_DATA;
typedef struct _CLASS_PRIVATE_PDO_DATA CLASS_PRIVATE_PDO_DATA;
typedef struct _CLFS_MGMT_NOTIFICATION CLFS_MGMT_NOTIFICATION;
typedef struct _CLS_ARCHIVE_DESCRIPTOR CLS_ARCHIVE_DESCRIPTOR;
typedef struct _CM_MONITOR_DEVICE_DATA CM_MONITOR_DEVICE_DATA;
typedef struct contres_vqlpcwaveformat_tag CONTRESVQLPCWAVEFORMAT;
typedef struct _COUNTED_REASON_CONTEXT COUNTED_REASON_CONTEXT;
typedef struct _CO_SPECIFIC_PARAMETERS CO_SPECIFIC_PARAMETERS;
typedef struct _CreateVirtualPortEx_IN CreateVirtualPortEx_IN;
typedef struct _D3DDDI_ALLOCATIONINFO2 D3DDDI_ALLOCATIONINFO2;
typedef struct _D3DKMDT_GDISURFACEDATA D3DKMDT_GDISURFACEDATA;
typedef struct D3DKMDT_HVIDPNTOPOLOGY__ *D3DKMDT_HVIDPNTOPOLOGY;
typedef struct _DEVICE_TRIM_DESCRIPTOR DEVICE_TRIM_DESCRIPTOR;
typedef struct _DISK_CACHE_INFORMATION DISK_CACHE_INFORMATION;
typedef struct _DISK_CONTROLLER_NUMBER DISK_CONTROLLER_NUMBER;
typedef struct _DOT11_EXTAP_ATTRIBUTES DOT11_EXTAP_ATTRIBUTES;
typedef struct _DOT11_RECV_SENSITIVITY DOT11_RECV_SENSITIVITY;
typedef struct _DOT11_REG_DOMAIN_VALUE DOT11_REG_DOMAIN_VALUE;
typedef struct _DOT11_WFD_DEVICE_ENTRY DOT11_WFD_DEVICE_ENTRY;
typedef struct _DXGKARG_COLLECTDBGINFO DXGKARG_COLLECTDBGINFO;
typedef struct _DXGKARG_OPENALLOCATION DXGKARG_OPENALLOCATION;
typedef struct _DXGKARG_PREEMPTCOMMAND DXGKARG_PREEMPTCOMMAND;
typedef struct _DXGK_CREATEDEVICEFLAGS DXGK_CREATEDEVICEFLAGS;
typedef struct _DXGK_DEVICE_DESCRIPTOR DXGK_DEVICE_DESCRIPTOR;
typedef struct _DXGK_GDIARG_ALPHABLEND DXGK_GDIARG_ALPHABLEND;
typedef struct _DXGK_GDIARG_STRETCHBLT DXGK_GDIARG_STRETCHBLT;
typedef struct _DXGK_GPUENGINETOPOLOGY DXGK_GPUENGINETOPOLOGY;
typedef struct _DXGK_MONITOR_INTERFACE DXGK_MONITOR_INTERFACE;
typedef struct _DXGK_SEGMENTDESCRIPTOR DXGK_SEGMENTDESCRIPTOR;
typedef struct _DXGK_SEGMENTPREFERENCE DXGK_SEGMENTPREFERENCE;
typedef struct _DXGK_WIN32K_PARAM_DATA DXGK_WIN32K_PARAM_DATA;
typedef struct _5AF83BE1E127935AA438E91D3D277054 DvbParentalRatingParam;
typedef struct _EISA_DMA_CONFIGURATION EISA_DMA_CONFIGURATION;
typedef struct _EISA_IRQ_CONFIGURATION EISA_IRQ_CONFIGURATION;
typedef struct _ENABLE_ERROR_SOURCE_IN ENABLE_ERROR_SOURCE_IN;
typedef struct _FILE_BASIC_INFORMATION FILE_BASIC_INFORMATION;
typedef struct _FILE_LAYOUT_INFO_ENTRY FILE_LAYOUT_INFO_ENTRY;
typedef struct _FILE_LAYOUT_NAME_ENTRY FILE_LAYOUT_NAME_ENTRY;
typedef struct _FILE_LEVEL_TRIM_OUTPUT FILE_LEVEL_TRIM_OUTPUT;
typedef struct _FILE_LINKS_INFORMATION FILE_LINKS_INFORMATION;
typedef struct _FILE_NAMES_INFORMATION FILE_NAMES_INFORMATION;
typedef struct _FILE_PIPE_EVENT_BUFFER FILE_PIPE_EVENT_BUFFER;
typedef struct _FILE_QUOTA_INFORMATION FILE_QUOTA_INFORMATION;
typedef struct _FILE_SET_SPARSE_BUFFER FILE_SET_SPARSE_BUFFER;
typedef struct _FLT_IO_PARAMETER_BLOCK FLT_IO_PARAMETER_BLOCK;
typedef struct fmtowns_snd_waveformat_tag FMTOWNS_SND_WAVEFORMAT;
typedef struct _FSRTL_AUXILIARY_BUFFER FSRTL_AUXILIARY_BUFFER;
typedef struct _FSRTL_PER_FILE_CONTEXT FSRTL_PER_FILE_CONTEXT;
typedef struct _GENERAL_LOOKASIDE_POOL GENERAL_LOOKASIDE_POOL;
typedef struct _GET_CHANGER_PARAMETERS GET_CHANGER_PARAMETERS;
typedef struct _GET_LENGTH_INFORMATION GET_LENGTH_INFORMATION;
typedef struct _GP_LOG_PAGE_DESCRIPTOR GP_LOG_PAGE_DESCRIPTOR;
typedef struct _GetFcpTargetMapping_IN GetFcpTargetMapping_IN;
typedef struct HBA_FCPTargetMappingV2 HBA_FCPTARGETMAPPINGV2;
typedef struct _HDAUDIO_CODEC_RESPONSE HDAUDIO_CODEC_RESPONSE;
typedef struct _HDAUDIO_CODEC_TRANSFER HDAUDIO_CODEC_TRANSFER;
typedef struct _HID_INTERFACE_HIDPARSE HID_INTERFACE_HIDPARSE;
typedef struct _HPET_DESCRIPTION_TABLE HPET_DESCRIPTION_TABLE;
typedef struct _HW_INITIALIZATION_DATA HW_INITIALIZATION_DATA;
typedef struct _IDE_MINIPORT_RESOURCES IDE_MINIPORT_RESOURCES;
typedef struct _IF_PHYSICAL_ADDRESS_LH IF_PHYSICAL_ADDRESS_LH;
typedef struct _IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY;
typedef struct _IMAGE_FUNCTION_ENTRY64 IMAGE_FUNCTION_ENTRY64;
struct IMiniportWavePciStream {struct IMiniportWavePciStreamVtbl *lpVtbl;};
typedef struct _IO_RESOURCE_DESCRIPTOR IO_RESOURCE_DESCRIPTOR;
typedef struct _IRB_REQ_GET_CONFIG_ROM IRB_REQ_GET_CONFIG_ROM;
typedef struct _ISCSI_DiscoveredTarget ISCSI_DiscoveredTarget;
typedef struct _ISCSI_Persistent_Login ISCSI_Persistent_Login;
typedef struct _KEY_CACHED_INFORMATION KEY_CACHED_INFORMATION;
typedef struct _E1D601DFB9F50A58CFF7A79389CE7A63 KSALLOCATOR_FRAMING_EX;
typedef struct _97BF4F75CC2B13E4CD29FCADBEF14990 KSAUDIO_CHANNEL_CONFIG;
typedef struct _FB17C9225429EF808B128BCE70FFD0DB KSDS3D_HRTF_PARAMS_MSG;
typedef struct _KSM_BDA_EVENT_COMPLETE KSM_BDA_EVENT_COMPLETE;
typedef struct _KSM_BDA_GPNV_NAMEINDEX KSM_BDA_GPNV_NAMEINDEX;
typedef union _C9F2A16A1B5FC998B91DA494984E0FDB KSPROPERTY_BOUNDS_LONG;
typedef struct _155DA1A439C400442DF8DC3CA0B009F1 KSPROPERTY_DESCRIPTION;
typedef struct _057D959110EF5AD26CCA8DAEC04011D1 KSPROPERTY_EXTDEVICE_S;
typedef struct _707EC234ECD45402760253CA9174D40C KSPROPERTY_MEMBERSLIST;
typedef struct _120C91A26C0A2C69E1789355DF7D48EB KSRTAUDIO_HWREGISTER32;
typedef struct _3A744348A6C9F73853F568E19FD6B4F7 KS_AM_SimpleRateChange;
typedef struct tagKS_DATARANGE_VIDEO_VBI KS_DATARANGE_VIDEO_VBI;
typedef struct tagKS_TVTUNER_CHANGE_INFO KS_TVTUNER_CHANGE_INFO;
typedef struct _LBA_FILTER_TABLE_ENTRY LBA_FILTER_TABLE_ENTRY;
typedef struct _LBA_STATUS_LIST_HEADER LBA_STATUS_LIST_HEADER;
typedef struct _LEGACY_BUS_INFORMATION LEGACY_BUS_INFORMATION;
typedef struct _LLDP_PROVIDER_DISPATCH LLDP_PROVIDER_DISPATCH;
typedef struct _LOCAL_X2APIC_NMISOURCE LOCAL_X2APIC_NMISOURCE;
typedef struct SDP_LARGE_INTEGER_16 *LPSDP_LARGE_INTEGER_16;
enum MACRO_ACCESS_MAX_MS_V5 {ACCESS_MAX_MS_V5_ACE_TYPE = 0x13,};
enum MACRO_AddiSNSServer_IN {AddiSNSServer_IN_iSNSServerName_ID = 1,AddiSNSServer_OUT_Status_ID = 2,};
enum MACRO_BTH_ENUMERATORFL {BTH_ENUMERATORFL_INCOMING = 0x1,BTH_ENUMERATORFL_OUTGOING = 0x2,BTH_ENUMERATORFL_REENUM = 0x4,};
enum MACRO_CONNECTION_STATE {CONNECTION_STATE_CONNECTED = 1,CONNECTION_STATE_DISCONNECTED = 2,CONNECTION_STATE_RECONNECTING = 3,};
enum MACRO_ClfsClientRecord {ClfsClientRecord = 3,};
enum MACRO_DESCRIPTOR_INDEX {OS_STRING_DESCRIPTOR_INDEX = 0xEE,MS_GENRE_DESCRIPTOR_INDEX = 0x1,MS_POWER_DESCRIPTOR_INDEX = 0x2,};
enum MACRO_DEVICE_INTERFACE {DEVICE_INTERFACE_INCLUDE_NONACTIVE = 0x1,};
enum MACRO_DEVICE_QUALIFIER {DEVICE_QUALIFIER_ACTIVE = 0x0,DEVICE_QUALIFIER_NOT_ACTIVE = 0x1,DEVICE_QUALIFIER_NOT_SUPPORTED = 0x3,DEVICE_CONNECTED = 0x0,};
enum MACRO_DEVICE_REFERENCE {DEVICE_REFERENCE_COUNT_NOT_ZERO = 0x36,};
enum MACRO_DOT11_ADDITIONAL {DOT11_ADDITIONAL_IE_REVISION_1 = 1,DOT11_EXTAP_SEND_CONTEXT_REVISION_1 = 1,DOT11_EXTAP_RECV_CONTEXT_REVISION_1 = 1,};
enum MACRO_DOT11_CAPABILITY {DOT11_CAPABILITY_INFO_ESS = 0x1,DOT11_CAPABILITY_INFO_IBSS = 0x2,DOT11_CAPABILITY_INFO_CF_POLLABLE = 0x4,DOT11_CAPABILITY_INFO_CF_POLL_REQ = 0x8,DOT11_CAPABILITY_INFO_PRIVACY = 0x10,DOT11_CAPABILITY_SHORT_PREAMBLE = 0x20,DOT11_CAPABILITY_PBCC = 0x40,DOT11_CAPABILITY_CHANNEL_AGILITY = 0x80,DOT11_CAPABILITY_SHORT_SLOT_TIME = 0x400,DOT11_CAPABILITY_DSSSOFDM = 0x2000,};
enum MACRO_DOT11_CIPHER_KEY {DOT11_CIPHER_KEY_MAPPING_KEY_VALUE_BYTE_ARRAY_REVISION_1 = 1,};
enum MACRO_DOT11_POWER_MGMT {DOT11_POWER_MGMT_AUTO_MODE_ENABLED_REVISION_1 = 1,};
enum MACRO_DOT11_STATISTICS {DOT11_STATISTICS_UNKNOWN = -1,DOT11_STATISTICS_REVISION_1 = 1,};
enum MACRO_DOT11_WFD_DEVICE {DOT11_WFD_DEVICE_CAPABILITY_CONFIG_REVISION_1 = 1,};
enum MACRO_DRIVER_CORRUPTED {DRIVER_CORRUPTED_MMPOOL = 0xD0,DRIVER_IRQL_NOT_LESS_OR_EQUAL = 0xD1,};
enum MACRO_DRIVER_VIOLATION {DRIVER_VIOLATION = 0x121,};
enum MACRO_DSM_Load_Balance {DSM_Load_Balance_Policy_Version_ID = 1,DSM_Load_Balance_Policy_LoadBalancePolicy_ID = 2,DSM_Load_Balance_Policy_DSMPathCount_ID = 3,DSM_Load_Balance_Policy_Reserved_ID = 4,DSM_Load_Balance_Policy_DSM_Paths_ID = 5,DSM_QueryLBPolicy_LoadBalancePolicy_ID = 1,DSM_QuerySupportedLBPolicies_SupportedLBPoliciesCount_ID = 1,DSM_QuerySupportedLBPolicies_Reserved_ID = 2,DSM_QuerySupportedLBPolicies_Supported_LB_Policies_ID = 3,};
enum MACRO_ENLISTMENT_QUERY {ENLISTMENT_QUERY_INFORMATION = 0x1,ENLISTMENT_SET_INFORMATION = 0x2,ENLISTMENT_RECOVER = 0x4,ENLISTMENT_SUBORDINATE_RIGHTS = 0x8,ENLISTMENT_SUPERIOR_RIGHTS = 0x10,ENLISTMENT_GENERIC_READ = 0x20001,ENLISTMENT_GENERIC_WRITE = 0x2001E,ENLISTMENT_GENERIC_EXECUTE = 0x2001C,ENLISTMENT_ALL_ACCESS = 0xF001F,};
enum MACRO_ERROR_VALUE_BASE {I8042_ERROR_VALUE_BASE = 1000,INPORT_ERROR_VALUE_BASE = 2000,SERIAL_MOUSE_ERROR_VALUE_BASE = 3000,};
enum MACRO_FACILITY_MONITOR {FACILITY_MONITOR = 0x1D,FACILITY_MAXIMUM_VALUE = 0xE8,FACILITY_IPSEC = 0x36,FACILITY_IO_ERROR_CODE = 0x4,FACILITY_INTERIX = 0x99,FACILITY_HYPERVISOR = 0x35,FACILITY_HID_ERROR_CODE = 0x11,FACILITY_GRAPHICS_KERNEL = 0x1E,FACILITY_FWP_ERROR_CODE = 0x22,FACILITY_FVE_ERROR_CODE = 0x21,FACILITY_FIREWIRE_ERROR_CODE = 0x12,FACILITY_FILTER_MANAGER = 0x1C,FACILITY_DRIVER_FRAMEWORK = 0x20,FACILITY_DIS = 0x3C,FACILITY_DEBUGGER = 0x1,FACILITY_COMMONLOG = 0x1A,FACILITY_CODCLASS_ERROR_CODE = 0x6,FACILITY_CLUSTER_ERROR_CODE = 0x13,FACILITY_NTCERT = 0x8,FACILITY_BTH_ATT = 0x42,FACILITY_BCD_ERROR_CODE = 0x39,FACILITY_AUDIO_KERNEL = 0x44,FACILITY_ACPI_ERROR_CODE = 0x14,};
enum MACRO_FILE_DEVICE_DOT4 {FILE_DEVICE_DOT4 = 0x3A,};
enum MACRO_FILE_DEVICE_VPCI {FILE_DEVICE_VPCI = 42,};
enum MACRO_FLT_REGISTRATION {FLT_REGISTRATION_VERSION_0200 = 0x200,FLT_REGISTRATION_VERSION_0201 = 0x201,FLT_REGISTRATION_VERSION_0202 = 0x202,FLT_REGISTRATION_VERSION_0203 = 0x203,FLT_REGISTRATION_VERSION = 0x203,};
enum MACRO_FSCTL_IPFLTRDRVR {FSCTL_IPFLTRDRVR_BASE = 18,};
enum MACRO_GetFC4Statistics {GetFC4Statistics = 13,};
enum MACRO_GetFCPStatistics {GetFCPStatistics = 14,};
enum MACRO_HARDWARE_ADDRESS {HARDWARE_ADDRESS_LENGTH = 6,};
enum MACRO_INITIAL_REGISTER {INITIAL_REGISTER_SPACE_HI = 0xFFFF,INITIAL_REGISTER_SPACE_LO = 0xF0000000,};
enum MACRO_INVALID_EXTENDED {INVALID_EXTENDED_PROCESSOR_STATE = 0x131,};
enum MACRO_INVALID_FLOATING {INVALID_FLOATING_POINT_STATE = 0xE7,INVALID_CANCEL_OF_FILE_OPEN = 0xE8,};
enum MACRO_IOCTL_AVC_UPDATE {IOCTL_AVC_UPDATE_VIRTUAL_SUBUNIT_INFO = 0x2A0000,IOCTL_AVC_REMOVE_VIRTUAL_SUBUNIT_INFO = 0x2A0004,IOCTL_AVC_BUS_RESET = 0x2A0008,};
enum MACRO_IOCTL_IR_RECEIVE {IOCTL_IR_RECEIVE = 257966106,IOCTL_IR_PRIORITY_RECEIVE = 257966114,IOCTL_IR_HANDSHAKE = 257949732,IOCTL_IR_ENTER_PRIORITY_RECEIVE = 257982504,IOCTL_IR_EXIT_PRIORITY_RECEIVE = 257982508,IOCTL_IR_USER_OPEN = 257982512,IOCTL_IR_USER_CLOSE = 257982516,IOCTL_IR_SET_WAKE_PATTERN = 257982520,};
enum MACRO_IOCTL_STORAGE_BC {IOCTL_STORAGE_BC_VERSION = 1,};
enum MACRO_IRP_MJ_OPERATION {IRP_MJ_OPERATION_END = 0x80,};
enum MACRO_ISCSI_Persistent {ISCSI_Persistent_Login_TargetName_ID = 1,ISCSI_Persistent_Login_SecurityFlags_ID = 2,ISCSI_Persistent_Login_InitiatorPortNumber_ID = 3,ISCSI_Persistent_Login_UsernameSize_ID = 4,ISCSI_Persistent_Login_IsInformationalSession_ID = 5,ISCSI_Persistent_Login_UniqueIdForISID_ID = 6,ISCSI_Persistent_Login_TargetPortal_ID = 7,ISCSI_Persistent_Login_LoginOptions_ID = 8,ISCSI_Persistent_Login_TargetMapping_ID = 9,ISCSI_Persistent_Login_Username_ID = 10,};
enum MACRO_ISCSI_PortalInfo {ISCSI_PortalInfo_PortalType_ID = 2,ISCSI_PortalInfo_Protocol_ID = 3,ISCSI_PortalInfo_Reserved1_ID = 4,ISCSI_PortalInfo_Reserved2_ID = 5,ISCSI_PortalInfo_IPAddr_ID = 6,ISCSI_PortalInfo_Port_ID = 7,ISCSI_PortalInfo_PortalTag_ID = 8,};
enum MACRO_InitiatorPortals {InitiatorPortals = 0,TargetPortals = 1,};
enum MACRO_KSPROPERTY_AUDIO {KSPROPERTY_AUDIO_BUFFER_DURATION = 1,};
enum MACRO_LINEADDRCAPFLAGS {LINEADDRCAPFLAGS_FWDNUMRINGS = 0x1,LINEADDRCAPFLAGS_PICKUPGROUPID = 0x2,LINEADDRCAPFLAGS_SECURE = 0x4,LINEADDRCAPFLAGS_BLOCKIDDEFAULT = 0x8,LINEADDRCAPFLAGS_BLOCKIDOVERRIDE = 0x10,LINEADDRCAPFLAGS_DIALED = 0x20,LINEADDRCAPFLAGS_ORIGOFFHOOK = 0x40,LINEADDRCAPFLAGS_DESTOFFHOOK = 0x80,LINEADDRCAPFLAGS_FWDCONSULT = 0x100,LINEADDRCAPFLAGS_SETUPCONFNULL = 0x200,LINEADDRCAPFLAGS_AUTORECONNECT = 0x400,LINEADDRCAPFLAGS_COMPLETIONID = 0x800,LINEADDRCAPFLAGS_TRANSFERHELD = 0x1000,LINEADDRCAPFLAGS_TRANSFERMAKE = 0x2000,LINEADDRCAPFLAGS_CONFERENCEHELD = 0x4000,LINEADDRCAPFLAGS_CONFERENCEMAKE = 0x8000,LINEADDRCAPFLAGS_PARTIALDIAL = 0x10000,LINEADDRCAPFLAGS_FWDSTATUSVALID = 0x20000,LINEADDRCAPFLAGS_FWDINTEXTADDR = 0x40000,LINEADDRCAPFLAGS_FWDBUSYNAADDR = 0x80000,LINEADDRCAPFLAGS_ACCEPTTOALERT = 0x100000,LINEADDRCAPFLAGS_CONFDROP = 0x200000,LINEADDRCAPFLAGS_PICKUPCALLWAIT = 0x400000,};
enum MACRO_LINEADDRESSSTATE {LINEADDRESSSTATE_OTHER = 0x1,LINEADDRESSSTATE_DEVSPECIFIC = 0x2,LINEADDRESSSTATE_INUSEZERO = 0x4,LINEADDRESSSTATE_INUSEONE = 0x8,LINEADDRESSSTATE_INUSEMANY = 0x10,LINEADDRESSSTATE_NUMCALLS = 0x20,LINEADDRESSSTATE_FORWARD = 0x40,LINEADDRESSSTATE_TERMINALS = 0x80,};
enum MACRO_LINEDIALTONEMODE {LINEDIALTONEMODE_NORMAL = 0x1,LINEDIALTONEMODE_SPECIAL = 0x2,LINEDIALTONEMODE_INTERNAL = 0x4,LINEDIALTONEMODE_EXTERNAL = 0x8,LINEDIALTONEMODE_UNKNOWN = 0x10,LINEDIALTONEMODE_UNAVAIL = 0x20,};
enum MACRO_LINEGENERATETERM {LINEGENERATETERM_DONE = 0x1,LINEGENERATETERM_CANCEL = 0x2,};
enum MACRO_LINEMEDIACONTROL {LINEMEDIACONTROL_NONE = 0x1,LINEMEDIACONTROL_START = 0x2,LINEMEDIACONTROL_RESET = 0x4,LINEMEDIACONTROL_PAUSE = 0x8,LINEMEDIACONTROL_RESUME = 0x10,LINEMEDIACONTROL_RATEUP = 0x20,LINEMEDIACONTROL_RATEDOWN = 0x40,LINEMEDIACONTROL_RATENORMAL = 0x80,LINEMEDIACONTROL_VOLUMEUP = 0x100,LINEMEDIACONTROL_VOLUMEDOWN = 0x200,LINEMEDIACONTROL_VOLUMENORMAL = 0x400,};
enum MACRO_LINETRANSFERMODE {LINETRANSFERMODE_TRANSFER = 0x1,LINETRANSFERMODE_CONFERENCE = 0x2,};
enum MACRO_LOCK_TRANSACTION {LOCK_TRANSACTION_MASK_SWAP = 1,LOCK_TRANSACTION_COMPARE_SWAP = 2,LOCK_TRANSACTION_FETCH_ADD = 3,LOCK_TRANSACTION_LITTLE_ADD = 4,LOCK_TRANSACTION_BOUNDED_ADD = 5,LOCK_TRANSACTION_WRAP_ADD = 6,};
enum MACRO_LoginToTarget_IN {LoginToTarget_IN_PortNumber_ID = 1,LoginToTarget_IN_LoginOptions_ID = 2,LoginToTarget_IN_SessionType_ID = 3,LoginToTarget_IN_SecurityFlags_ID = 4,LoginToTarget_IN_TargetPortal_ID = 5,LoginToTarget_IN_UsernameSize_ID = 6,LoginToTarget_IN_PasswordSize_ID = 7,LoginToTarget_IN_KeySize_ID = 8,LoginToTarget_IN_UniqueIdForISID_ID = 9,LoginToTarget_IN_PersistentLogin_ID = 10,LoginToTarget_IN_InitiatorNode_ID = 11,LoginToTarget_IN_InitiatorAlias_ID = 12,LoginToTarget_IN_TargetName_ID = 13,LoginToTarget_IN_Mappings_ID = 14,LoginToTarget_IN_Key_ID = 15,LoginToTarget_IN_Username_ID = 16,LoginToTarget_IN_Password_ID = 17,LoginToTarget_OUT_Status_ID = 18,LoginToTarget_OUT_UniqueSessionId_ID = 19,LoginToTarget_OUT_UniqueConnectionId_ID = 20,};
enum MACRO_LogoutFromTarget {LogoutFromTarget = 31,};
enum MACRO_MACHINE_UNJOINED {MACHINE_UNJOINED = 0xC00037ED,};
enum MACRO_MAXIMUM_FILENAME {MAXIMUM_FILENAME_LENGTH = 256,};
enum MACRO_MCACpuCacheError {MCACpuCacheError = 0,MCACpuTlbError = 1,MCACpuBusError = 2,};
enum MACRO_MPIO_DSM_Path_V2 {MPIO_DSM_Path_V2_ALUASupport_ID = 9,MPIO_DSM_Path_V2_SymmetricLUA_ID = 10,MPIO_DSM_Path_V2_TargetPortGroup_Preferred_ID = 11,MPIO_DSM_Path_V2_TargetPortGroup_Identifier_ID = 12,MPIO_DSM_Path_V2_TargetPort_Identifier_ID = 13,MPIO_DSM_Path_V2_Reserved32_ID = 14,MPIO_DSM_Path_V2_Reserved64_ID = 15,};
enum MACRO_NDIS_PACKET_TYPE {NDIS_PACKET_TYPE_MEDIA_SPECIFIC_MASK = 0xFFF0000,NDIS_PACKET_TYPE_802_11_RAW_DATA = 0x10000,NDIS_PACKET_TYPE_802_11_DIRECTED_MGMT = 0x20000,NDIS_PACKET_TYPE_802_11_BROADCAST_MGMT = 0x40000,NDIS_PACKET_TYPE_802_11_MULTICAST_MGMT = 0x80000,NDIS_PACKET_TYPE_802_11_ALL_MULTICAST_MGMT = 0x100000,NDIS_PACKET_TYPE_802_11_PROMISCUOUS_MGMT = 0x200000,NDIS_PACKET_TYPE_802_11_RAW_MGMT = 0x400000,NDIS_PACKET_TYPE_802_11_DIRECTED_CTRL = 0x800000,NDIS_PACKET_TYPE_802_11_BROADCAST_CTRL = 0x1000000,NDIS_PACKET_TYPE_802_11_PROMISCUOUS_CTRL = 0x2000000,};
enum MACRO_NDIS_PM_PROTOCOL {NDIS_PM_PROTOCOL_OFFLOAD_REVISION_1 = 1,NDIS_WMI_PM_ADMIN_CONFIG_REVISION_1 = 1,NDIS_WMI_PM_ACTIVE_CAPABILITIES_REVISION_1 = 1,NDIS_RECEIVE_FILTER_MAC_HEADER_SUPPORTED = 1,NDIS_RECEIVE_FILTER_IPV4_HEADER_SUPPORTED = 2,NDIS_RECEIVE_FILTER_IPV6_HEADER_SUPPORTED = 4,NDIS_RECEIVE_FILTER_ARP_HEADER_SUPPORTED = 8,NDIS_RECEIVE_FILTER_UDP_HEADER_SUPPORTED = 16,NDIS_RECEIVE_FILTER_MAC_HEADER_DEST_ADDR_SUPPORTED = 1,NDIS_RECEIVE_FILTER_MAC_HEADER_SOURCE_ADDR_SUPPORTED = 2,NDIS_RECEIVE_FILTER_MAC_HEADER_PROTOCOL_SUPPORTED = 4,NDIS_RECEIVE_FILTER_MAC_HEADER_VLAN_ID_SUPPORTED = 8,NDIS_RECEIVE_FILTER_MAC_HEADER_PRIORITY_SUPPORTED = 16,NDIS_RECEIVE_FILTER_MAC_HEADER_PACKET_TYPE_SUPPORTED = 32,NDIS_RECEIVE_FILTER_ARP_HEADER_OPERATION_SUPPORTED = 1,NDIS_RECEIVE_FILTER_ARP_HEADER_SPA_SUPPORTED = 2,NDIS_RECEIVE_FILTER_ARP_HEADER_TPA_SUPPORTED = 4,NDIS_RECEIVE_FILTER_IPV4_HEADER_PROTOCOL_SUPPORTED = 1,NDIS_RECEIVE_FILTER_IPV6_HEADER_PROTOCOL_SUPPORTED = 1,NDIS_RECEIVE_FILTER_UDP_HEADER_DEST_PORT_SUPPORTED = 1,NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_EQUAL_SUPPORTED = 1,NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_MASK_EQUAL_SUPPORTED = 2,NDIS_RECEIVE_FILTER_TEST_HEADER_FIELD_NOT_EQUAL_SUPPORTED = 4,NDIS_RECEIVE_FILTER_MSI_X_SUPPORTED = 1,NDIS_RECEIVE_FILTER_VM_QUEUE_SUPPORTED = 2,NDIS_RECEIVE_FILTER_LOOKAHEAD_SPLIT_SUPPORTED = 4,NDIS_RECEIVE_FILTER_VMQ_FILTERS_ENABLED = 1,NDIS_RECEIVE_FILTER_PACKET_COALESCING_FILTERS_ENABLED = 2,NDIS_RECEIVE_FILTER_VM_QUEUES_ENABLED = 1,NDIS_RECEIVE_FILTER_CAPABILITIES_REVISION_1 = 1,NDIS_NIC_SWITCH_CAPABILITIES_REVISION_1 = 1,NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS_REVISION_1 = 1,NDIS_DEFAULT_RECEIVE_QUEUE_ID = 0,NDIS_DEFAULT_RECEIVE_QUEUE_GROUP_ID = 0,NDIS_DEFAULT_RECEIVE_FILTER_ID = 0,NDIS_RECEIVE_FILTER_FIELD_MAC_HEADER_VLAN_UNTAGGED_OR_ZERO = 1,NDIS_RECEIVE_FILTER_PACKET_ENCAPSULATION_GRE = 2,NDIS_RECEIVE_FILTER_FIELD_PARAMETERS_REVISION_1 = 1,NDIS_RECEIVE_FILTER_PARAMETERS_REVISION_1 = 1,NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS_REVISION_1 = 1,NDIS_RECEIVE_QUEUE_PARAMETERS_PER_QUEUE_RECEIVE_INDICATION = 1,NDIS_RECEIVE_QUEUE_PARAMETERS_LOOKAHEAD_SPLIT_REQUIRED = 2,NDIS_RECEIVE_QUEUE_PARAMETERS_FLAGS_CHANGED = 65536,NDIS_RECEIVE_QUEUE_PARAMETERS_PROCESSOR_AFFINITY_CHANGED = 131072,NDIS_RECEIVE_QUEUE_PARAMETERS_SUGGESTED_RECV_BUFFER_NUMBERS_CHANGED = 262144,NDIS_RECEIVE_QUEUE_PARAMETERS_NAME_CHANGED = 524288,NDIS_RECEIVE_QUEUE_PARAMETERS_CHANGE_MASK = -65536,NDIS_RECEIVE_QUEUE_PARAMETERS_REVISION_1 = 1,NDIS_RECEIVE_QUEUE_FREE_PARAMETERS_REVISION_1 = 1,NDIS_RECEIVE_QUEUE_INFO_REVISION_1 = 1,NDIS_RECEIVE_QUEUE_INFO_ARRAY_REVISION_1 = 1,NDIS_RECEIVE_FILTER_INFO_REVISION_1 = 1,NDIS_RECEIVE_FILTER_INFO_ARRAY_REVISION_1 = 1,NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS_REVISION_1 = 1,NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY_REVISION_1 = 1,NDIS_RECEIVE_SCALE_CAPABILITIES_REVISION_1 = 1,NDIS_RSS_CAPS_MESSAGE_SIGNALED_INTERRUPTS = 16777216,NDIS_RSS_CAPS_CLASSIFICATION_AT_ISR = 33554432,NDIS_RSS_CAPS_CLASSIFICATION_AT_DPC = 67108864,NDIS_RSS_CAPS_USING_MSI_X = 134217728,NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV4 = 256,NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV6 = 512,NDIS_RSS_CAPS_HASH_TYPE_TCP_IPV6_EX = 1024,};
enum MACRO_OID_DOT11_CIPHER {OID_DOT11_CIPHER_KEY_MAPPING_KEY = 234946956,};
enum MACRO_OID_DOT11_CREATE {OID_DOT11_CREATE_MAC = 0xE040101,};
enum MACRO_OID_DOT11_DELETE {OID_DOT11_DELETE_MAC = 0xE040102,OID_DOT11_PREFERRED_MAC = 0xE040103,OID_DOT11_VIRTUAL_STATION_CAPABILITY = 0xE040204,};
enum MACRO_PingIPAddress_IN {PingIPAddress_IN_RequestCount_ID = 1,PingIPAddress_IN_RequestSize_ID = 2,PingIPAddress_IN_Timeout_ID = 3,PingIPAddress_IN_Address_ID = 4,PingIPAddress_OUT_Status_ID = 5,PingIPAddress_OUT_ResponsesReceived_ID = 6,};
enum MACRO_PshedFADiscovery {PshedFADiscovery = 0x1,PshedFAErrorSourceControl = 0x2,PshedFAErrorRecordPersistence = 0x4,PshedFAErrorInfoRetrieval = 0x8,PshedFAErrorRecovery = 0x10,PshedFAErrorInjection = 0x20,};
enum MACRO_RESOURCE_MANAGER {RESOURCE_MANAGER_VOLATILE = 0x1,RESOURCE_MANAGER_COMMUNICATION = 0x2,RESOURCE_MANAGER_MAXIMUM_OPTION = 0x3,};
enum MACRO_RPC_E_UNEXPECTED {RPC_E_UNEXPECTED = 0x8001FFFF,};
enum MACRO_RemoveiSNSServer {RemoveiSNSServer = 102,};
enum MACRO_SECPKG_CRED_ATTR {SECPKG_CRED_ATTR_NAMES = 1,SECPKG_CRED_ATTR_SSI_PROVIDER = 2,SECPKG_CRED_ATTR_KDC_PROXY_SETTINGS = 3,SECPKG_CRED_ATTR_CERT = 4,};
enum MACRO_SECURITY_DYNAMIC {SECURITY_DYNAMIC_TRACKING = 1,SECURITY_STATIC_TRACKING = 0,};
enum MACRO_SECURITY_SUPPORT {SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION = 1,SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_2 = 2,SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_3 = 3,SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_4 = 4,};
enum MACRO_SIO_SET_SECURITY {SIO_SET_SECURITY = -1744830264,SIO_QUERY_SECURITY = -671088439,SIO_SET_PEER_TARGET_NAME = -1744830262,SIO_DELETE_PEER_TARGET_NAME = -1744830261,SIO_QUERY_WFP_CONNECTION_REDIRECT_RECORDS = -1744830244,SIO_QUERY_WFP_CONNECTION_REDIRECT_CONTEXT = -1744830243,SIO_SET_WFP_CONNECTION_REDIRECT_RECORDS = -1744830242,SIO_SOCKET_USAGE_NOTIFICATION = -1744830260,};
enum MACRO_STATUS_HEURISTIC {STATUS_HEURISTIC_DAMAGE_POSSIBLE = 0x40190001,STATUS_GUARD_PAGE_VIOLATION = 0x80000001,STATUS_DATATYPE_MISALIGNMENT = 0x80000002,STATUS_BREAKPOINT = 0x80000003,STATUS_SINGLE_STEP = 0x80000004,STATUS_BUFFER_OVERFLOW = 0x80000005,STATUS_NO_MORE_FILES = 0x80000006,STATUS_WAKE_SYSTEM_DEBUGGER = 0x80000007,STATUS_HANDLES_CLOSED = 0x8000000A,STATUS_NO_INHERITANCE = 0x8000000B,STATUS_GUID_SUBSTITUTION_MADE = 0x8000000C,STATUS_PARTIAL_COPY = 0x8000000D,STATUS_DEVICE_PAPER_EMPTY = 0x8000000E,STATUS_DEVICE_POWERED_OFF = 0x8000000F,STATUS_DEVICE_OFF_LINE = 0x80000010,STATUS_DEVICE_BUSY = 0x80000011,STATUS_NO_MORE_EAS = 0x80000012,STATUS_INVALID_EA_NAME = 0x80000013,STATUS_EA_LIST_INCONSISTENT = 0x80000014,STATUS_INVALID_EA_FLAG = 0x80000015,STATUS_VERIFY_REQUIRED = 0x80000016,STATUS_EXTRANEOUS_INFORMATION = 0x80000017,STATUS_RXACT_COMMIT_NECESSARY = 0x80000018,STATUS_NO_MORE_ENTRIES = 0x8000001A,STATUS_FILEMARK_DETECTED = 0x8000001B,STATUS_MEDIA_CHANGED = 0x8000001C,STATUS_BUS_RESET = 0x8000001D,STATUS_END_OF_MEDIA = 0x8000001E,STATUS_BEGINNING_OF_MEDIA = 0x8000001F,STATUS_MEDIA_CHECK = 0x80000020,STATUS_SETMARK_DETECTED = 0x80000021,STATUS_NO_DATA_DETECTED = 0x80000022,STATUS_REDIRECTOR_HAS_OPEN_HANDLES = 0x80000023,STATUS_SERVER_HAS_OPEN_HANDLES = 0x80000024,STATUS_ALREADY_DISCONNECTED = 0x80000025,STATUS_LONGJUMP = 0x80000026,STATUS_CLEANER_CARTRIDGE_INSTALLED = 0x80000027,STATUS_PLUGPLAY_QUERY_VETOED = 0x80000028,STATUS_UNWIND_CONSOLIDATE = 0x80000029,STATUS_REGISTRY_HIVE_RECOVERED = 0x8000002A,STATUS_DLL_MIGHT_BE_INSECURE = 0x8000002B,STATUS_DLL_MIGHT_BE_INCOMPATIBLE = 0x8000002C,STATUS_STOPPED_ON_SYMLINK = 0x8000002D,STATUS_CANNOT_GRANT_REQUESTED_OPLOCK = 0x8000002E,STATUS_NO_ACE_CONDITION = 0x8000002F,STATUS_DEVICE_SUPPORT_IN_PROGRESS = 0x80000030,};
enum MACRO_STORAGE_PRIORITY {STORAGE_PRIORITY_HINT_SUPPORTED = 0x1,};
enum MACRO_SYSTEM_MANDATORY {SYSTEM_MANDATORY_LABEL_NO_WRITE_UP = 0x1,SYSTEM_MANDATORY_LABEL_NO_READ_UP = 0x2,SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP = 0x4,SYSTEM_MANDATORY_LABEL_VALID_MASK = 0x7,};
enum MACRO_ScsiReadCapacity {ScsiReadCapacity_IN_Cdb_ID = 1,ScsiReadCapacity_IN_HbaPortWWN_ID = 2,ScsiReadCapacity_IN_DiscoveredPortWWN_ID = 3,ScsiReadCapacity_IN_FcLun_ID = 4,ScsiReadCapacity_OUT_HBAStatus_ID = 5,ScsiReadCapacity_OUT_SenseBufferSize_ID = 7,ScsiReadCapacity_OUT_ResponseBuffer_SIZE_HINT = 16,};
enum MACRO_THREAD_PROFILING {THREAD_PROFILING_FLAG_DISPATCH = 0x1,};
enum MACRO_THREAD_TERMINATE {THREAD_TERMINATE = 0x1,THREAD_SUSPEND_RESUME = 0x2,THREAD_ALERT = 0x4,THREAD_GET_CONTEXT = 0x8,THREAD_SET_CONTEXT = 0x10,THREAD_SET_INFORMATION = 0x20,THREAD_SET_LIMITED_INFORMATION = 0x400,THREAD_QUERY_LIMITED_INFORMATION = 0x800,THREAD_ALL_ACCESS = 0x1FFFFF,};
enum MACRO_TOKEN_VIRTUALIZE {TOKEN_VIRTUALIZE_ALLOWED = 0x200,TOKEN_VIRTUALIZE_ENABLED = 0x400,TOKEN_IS_FILTERED = 0x800,TOKEN_UIACCESS = 0x1000,TOKEN_NOT_LOW = 0x2000,TOKEN_LOWBOX = 0x4000,};
enum MACRO_TRUST_E_EXPLICIT {TRUST_E_EXPLICIT_DISTRUST = 0x800B0111,};
enum MACRO_TapeAlertLogPage {TapeAlertLogPage = 0x2E,};
enum MACRO_WATCHDOG_TIMEOUT {CLOCK_WATCHDOG_TIMEOUT = 0x101,DPC_WATCHDOG_TIMEOUT = 0x102,};
enum MACRO_WMIREG_FLAG_CALL {WMIREG_FLAG_CALL_BY_NAME = 0x40000000,};
enum MACRO_WSK_FLAG_NODELAY {WSK_FLAG_NODELAY = 0x2,WSK_FLAG_WAITALL = 0x2,WSK_FLAG_DRAIN = 0x4,WSK_NO_WAIT = 0x0,WSK_INFINITE_WAIT = 0xFFFFFFFF,};
enum MACRO_WheaGetPolicyRtn {WheaGetPolicyRtn = 2,};
enum MACRO_WheaSetPolicyRtn {WheaSetPolicyRtn = 3,};
enum MACRO_WmiSetBrightness {WmiSetBrightness = 1,};
enum MACRO_discoverySession {discoverySession = 0,informationalSession = 1,dataSession = 2,};
typedef struct _MINIPORT_DUMP_POINTERS MINIPORT_DUMP_POINTERS;
typedef struct _MODE_CAPABILITIES_PAGE MODE_CAPABILITIES_PAGE;
typedef struct _MPEG2_TRANSPORT_STRIDE MPEG2_TRANSPORT_STRIDE;
typedef struct _MPIO_DISK_HEALTH_CLASS MPIO_DISK_HEALTH_CLASS;
typedef struct _MPIO_PASS_THROUGH_PATH MPIO_PASS_THROUGH_PATH;
typedef struct _MPIO_PATH_HEALTH_CLASS MPIO_PATH_HEALTH_CLASS;
typedef struct _MRX_NORMAL_NODE_HEADER MRX_NORMAL_NODE_HEADER;
typedef struct _MSFC_HBAPortStatistics MSFC_HBAPortStatistics;
typedef struct _MSMCAEvent_MemoryError MSMCAEvent_MemoryError;
typedef struct _MSMCAEvent_PCIBusError MSMCAEvent_PCIBusError;
typedef struct _MSMCAEvent_SMBIOSError MSMCAEvent_SMBIOSError;
typedef struct _MSNdis_80211_DataRates MSNdis_80211_DataRates;
typedef struct _MSNdis_80211_PowerMode MSNdis_80211_PowerMode;
typedef struct _MSNdis_80211_RemoveWEP MSNdis_80211_RemoveWEP;
typedef struct _MSNdis_80211_WEPStatus MSNdis_80211_WEPStatus;
typedef struct _MSNdis_80211_WLanBssId MSNdis_80211_WLanBssId;
typedef struct _MSNdis_AtmMaxActiveVcs MSNdis_AtmMaxActiveVcs;
typedef struct _MSNdis_CoDriverVersion MSNdis_CoDriverVersion;
typedef struct _MSNdis_CoReceivePdusOk MSNdis_CoReceivePdusOk;
typedef struct _MSNdis_FddiFrameErrors MSNdis_FddiFrameErrors;
typedef struct _MSNdis_FddiLctFailures MSNdis_FddiLctFailures;
typedef struct _MSNdis_ReceiveNoBuffer MSNdis_ReceiveNoBuffer;
typedef struct _MSNdis_StatusLinkState MSNdis_StatusLinkState;
typedef struct _MSNdis_StatusPortState MSNdis_StatusPortState;
typedef struct _MSNdis_WmiMethodHeader MSNdis_WmiMethodHeader;
typedef struct _MSSmBios_Sysid1394List MSSmBios_Sysid1394List;
typedef struct _MSSmBios_SysidUUIDList MSSmBios_SysidUUIDList;
typedef struct _MSWmi_PnPInstanceNames MSWmi_PnPInstanceNames;
typedef struct _MSiSCSI_HBAInformation MSiSCSI_HBAInformation;
typedef struct _MSiSCSI_NICPerformance MSiSCSI_NICPerformance;
typedef struct _MSiSCSI_TargetMappings MSiSCSI_TargetMappings;
typedef struct _NDIS_802_11_BSSID_LIST NDIS_802_11_BSSID_LIST;
typedef struct _NDIS_802_11_CAPABILITY NDIS_802_11_CAPABILITY;
typedef struct _NDIS_802_11_REMOVE_KEY NDIS_802_11_REMOVE_KEY;
typedef struct _NDIS_802_11_STATISTICS NDIS_802_11_STATISTICS;
typedef struct _NDIS_FILTER_ATTRIBUTES NDIS_FILTER_ATTRIBUTES;
typedef struct _NDIS_PACKET_8021Q_INFO NDIS_PACKET_8021Q_INFO;
typedef struct _NDIS_PM_COUNTED_STRING NDIS_PM_COUNTED_STRING;
typedef struct _NDIS_PM_PACKET_PATTERN NDIS_PM_PACKET_PATTERN;
typedef struct _NDIS_PROCESSOR_INFO_EX NDIS_PROCESSOR_INFO_EX;
typedef struct _NDIS_STATUS_INDICATION NDIS_STATUS_INDICATION;
typedef struct _NDIS_TAPI_DEV_SPECIFIC NDIS_TAPI_DEV_SPECIFIC;
typedef struct _NDIS_TAPI_GET_DEV_CAPS NDIS_TAPI_GET_DEV_CAPS;
typedef struct _NDIS_WAN_COMPRESS_INFO NDIS_WAN_COMPRESS_INFO;
typedef struct _NDIS_WAN_GET_COMP_INFO NDIS_WAN_GET_COMP_INFO;
typedef struct _NDIS_WAN_GET_LINK_INFO NDIS_WAN_GET_LINK_INFO;
typedef struct _NDIS_WAN_PROTOCOL_CAPS NDIS_WAN_PROTOCOL_CAPS;
typedef struct _NDIS_WAN_SET_COMP_INFO NDIS_WAN_SET_COMP_INFO;
typedef struct _NDIS_WAN_SET_LINK_INFO NDIS_WAN_SET_LINK_INFO;
typedef struct _NDIS_WMI_METHOD_HEADER NDIS_WMI_METHOD_HEADER;
typedef struct _NDIS_WWAN_SIGNAL_STATE NDIS_WWAN_SIGNAL_STATE;
typedef struct _NDIS_WWAN_USSD_REQUEST NDIS_WWAN_USSD_REQUEST;
typedef struct _NDK_CONNECTOR_DISPATCH NDK_CONNECTOR_DISPATCH;
typedef union _NET_BUFFER_DATA_LENGTH NET_BUFFER_DATA_LENGTH;
typedef union _NET_BUFFER_LIST_HEADER NET_BUFFER_LIST_HEADER;
typedef struct _NLB_PUBLIC_IOCTL_INPUT NLB_PUBLIC_IOCTL_INPUT;
typedef struct nms_vbxadpcmmwaveformat_tag NMS_VBXADPCMWAVEFORMAT;
typedef struct _NUMA_NODE_RELATIONSHIP NUMA_NODE_RELATIONSHIP;
typedef struct _NV_SEP_CACHE_PARAMETER NV_SEP_CACHE_PARAMETER;
typedef struct _OPLOCK_KEY_ECP_CONTEXT OPLOCK_KEY_ECP_CONTEXT;
typedef struct _ARBITER_CONFLICT_INFO *PARBITER_CONFLICT_INFO;
typedef struct _AUX_MODULE_BASIC_INFO *PAUX_MODULE_BASIC_INFO;
typedef struct _AVCSTRM_BUFFER_STRUCT *PAVCSTRM_BUFFER_STRUCT;
typedef struct _AVC_SUBUNIT_ADDR_SPEC *PAVC_SUBUNIT_ADDR_SPEC;
typedef struct _BASEBAND_CHANNEL_INFO *PBASEBAND_CHANNEL_INFO;
typedef struct _BDA_IPv4_ADDRESS_LIST *PBDA_IPv4_ADDRESS_LIST;
typedef struct _BDA_IPv6_ADDRESS_LIST *PBDA_IPv6_ADDRESS_LIST;
typedef struct _BDA_TUNER_DIAGNOSTICS *PBDA_TUNER_DIAGNOSTICS;
typedef struct _BDA_WMDRM_KEYINFOLIST *PBDA_WMDRM_KEYINFOLIST;
typedef struct _BUS_INFO_CAPABILITIES *PBUS_INFO_CAPABILITIES;
typedef struct _40A6D5622BA75F270314126148B7B4DB *PBUS_INTERFACE_MEDIUMS;
typedef struct _CDROM_SIMPLE_OPC_INFO *PCDROM_SIMPLE_OPC_INFO;
typedef struct _CDVD_FEATURE_SET_PAGE *PCDVD_FEATURE_SET_PAGE;
typedef struct _CDVD_REPORT_AGID_DATA *PCDVD_REPORT_AGID_DATA;
typedef struct _CDVD_TITLE_KEY_HEADER *PCDVD_TITLE_KEY_HEADER;
typedef struct _PCIX_BRIDGE_CAPABILITY PCIX_BRIDGE_CAPABILITY;
typedef struct _PCI_EXPRESS_CAPABILITY PCI_EXPRESS_CAPABILITY;
typedef union _PCI_EXPRESS_SRIOV_CAPS PCI_EXPRESS_SRIOV_CAPS;
typedef struct _CLOCK_RATE_CONVERSION *PCLOCK_RATE_CONVERSION;
typedef struct _CM_FLOPPY_DEVICE_DATA *PCM_FLOPPY_DEVICE_DATA;
typedef struct _CM_PCCARD_DEVICE_DATA *PCM_PCCARD_DEVICE_DATA;
typedef struct _CM_SERIAL_DEVICE_DATA *PCM_SERIAL_DEVICE_DATA;
typedef struct _CO_TAPI_TRANSLATE_SAP *PCO_TAPI_TRANSLATE_SAP;
typedef struct _CSV_IS_OWNED_BY_CSVFS *PCSV_IS_OWNED_BY_CSVFS;
typedef struct _PCW_COUNTER_DESCRIPTOR PCW_COUNTER_DESCRIPTOR;
typedef struct _CreateVirtualPort_OUT *PCreateVirtualPort_OUT;
typedef struct _DESCRIPTOR_SENSE_DATA *PDESCRIPTOR_SENSE_DATA;
typedef struct _DEVICE_DATA_SET_RANGE *PDEVICE_DATA_SET_RANGE;
typedef struct _DEVICE_HANDLER_OBJECT *PDEVICE_HANDLER_OBJECT;
typedef struct _DISK_PERFORMANCE_INFO *PDISK_PERFORMANCE_INFO;
typedef struct DL_TEREDO_ADDRESS_PRV *PDL_TEREDO_ADDRESS_PRV;
typedef struct _DOT11_AP_JOIN_REQUEST *PDOT11_AP_JOIN_REQUEST;
typedef struct DOT11_BSSID_CANDIDATE *PDOT11_BSSID_CANDIDATE;
typedef struct _DOT11_BSS_DESCRIPTION *PDOT11_BSS_DESCRIPTION;
typedef struct DOT11_OFFLOAD_NETWORK *PDOT11_OFFLOAD_NETWORK;
typedef struct _DOT11_PEER_STATISTICS *PDOT11_PEER_STATISTICS;
typedef struct _DOT11_POWER_MGMT_MODE *PDOT11_POWER_MGMT_MODE;
typedef struct _DOT11_QOS_TX_DURATION *PDOT11_QOS_TX_DURATION;
typedef struct _DOT11_SCAN_REQUEST_V2 *PDOT11_SCAN_REQUEST_V2;
typedef struct _DOT11_WFD_DEVICE_INFO *PDOT11_WFD_DEVICE_INFO;
typedef struct _DOT11_WFD_DEVICE_TYPE *PDOT11_WFD_DEVICE_TYPE;
typedef struct _DOT11_WPS_DEVICE_NAME *PDOT11_WPS_DEVICE_NAME;
typedef struct _DUMP_POINTERS_VERSION *PDUMP_POINTERS_VERSION;
typedef struct _DXGK_CHILD_DESCRIPTOR *PDXGK_CHILD_DESCRIPTOR;
typedef struct _ELEMENT_STATUS_HEADER *PELEMENT_STATUS_HEADER;
typedef struct _EMULATOR_ACCESS_ENTRY *PEMULATOR_ACCESS_ENTRY;
typedef struct _PERFORMANCE_DESCRIPTOR PERFORMANCE_DESCRIPTOR;
typedef struct _EVENT_DATA_DESCRIPTOR *PEVENT_DATA_DESCRIPTOR;
typedef struct _EXECUTE_SELF_TEST_OUT *PEXECUTE_SELF_TEST_OUT;
typedef struct _FILESYSTEM_STATISTICS *PFILESYSTEM_STATISTICS;
typedef struct _FILE_LEVEL_TRIM_RANGE *PFILE_LEVEL_TRIM_RANGE;
typedef struct _FILE_LINK_INFORMATION *PFILE_LINK_INFORMATION;
typedef struct _FILE_MODE_INFORMATION *PFILE_MODE_INFORMATION;
typedef struct _FILE_NAME_INFORMATION *PFILE_NAME_INFORMATION;
typedef struct _FILE_OBJECT_EXTENSION *PFILE_OBJECT_EXTENSION;
typedef struct _FILE_PIPE_INFORMATION *PFILE_PIPE_INFORMATION;
typedef struct _FILE_PIPE_PEEK_BUFFER *PFILE_PIPE_PEEK_BUFFER;
typedef struct _FILTER_MESSAGE_HEADER *PFILTER_MESSAGE_HEADER;
typedef struct _FLT_VOLUME_PROPERTIES *PFLT_VOLUME_PROPERTIES;
typedef struct _GET_FP_CAPABILITY_OUT *PGET_FP_CAPABILITY_OUT;
typedef struct _GET_SINGLE_POLICY_OUT *PGET_SINGLE_POLICY_OUT;
typedef struct _GET_UNIT_CAPABILITIES *PGET_UNIT_CAPABILITIES;
typedef struct _GetBindingSupport_OUT *PGetBindingSupport_OUT;
typedef void (*PHALMCAINTERFACEUNLOCK)(void);
typedef struct _HAL_POWER_INFORMATION *PHAL_POWER_INFORMATION;
typedef struct HBA_AdapterAttributes *PHBA_ADAPTERATTRIBUTES;
typedef struct HBA_LibraryAttributes *PHBA_LIBRARYATTRIBUTES;
typedef struct _HDAUDIO_BUS_INTERFACE *PHDAUDIO_BUS_INTERFACE;
typedef struct _HDAUDIO_CODEC_COMMAND *PHDAUDIO_CODEC_COMMAND;
typedef struct _HDAUDIO_STREAM_FORMAT *PHDAUDIO_STREAM_FORMAT;
typedef struct _HID_DEVICE_ATTRIBUTES *PHID_DEVICE_ATTRIBUTES;
typedef struct _HW_STREAM_INFORMATION *PHW_STREAM_INFORMATION;
typedef struct _ICMPV4_ROUTER_SOLICIT *PICMPV4_ROUTER_SOLICIT;
typedef struct _IDE_CHANNEL_INTERFACE *PIDE_CHANNEL_INTERFACE;
typedef struct _IDE_DEVICE_PARAMETERS *PIDE_DEVICE_PARAMETERS;
typedef struct _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;
typedef struct _INDICATION_PARAMETERS *PINDICATION_PARAMETERS;
typedef struct _INET_PORT_RANGE *PINET_PORT_RESERVATION;
typedef struct _INITIAL_PRIVILEGE_SET *PINITIAL_PRIVILEGE_SET;
typedef struct _IO_COMPLETION_CONTEXT *PIO_COMPLETION_CONTEXT;
typedef struct _IPV4_TIMESTAMP_OPTION *PIPV4_TIMESTAMP_OPTION;
typedef struct _IPV6_EXTENSION_HEADER *PIPV6_EXTENSION_HEADER;
typedef struct _IPV6_OPTION_JUMBOGRAM *PIPV6_OPTION_JUMBOGRAM;
typedef struct _IdleStateAccountingEx *PIdleStateAccountingEx;
typedef struct _KCRM_TRANSACTION_BLOB *PKCRM_TRANSACTION_BLOB;
typedef struct _KEY_BASIC_INFORMATION *PKEY_BASIC_INFORMATION;
typedef struct _KEY_TRUST_INFORMATION *PKEY_TRUST_INFORMATION;
typedef struct _FBE7179BAB40555F1A13AD3C5BC3BB71 *PKSAC3_ALTERNATE_AUDIO;
typedef struct _9ADD4811563784E97592213CBF8060F3 *PKSAC3_BIT_STREAM_MODE;
typedef struct _52AD6460DAD19A3D48443005CDCF2412 *PKSAUDIO_DYNAMIC_RANGE;
typedef struct _F0AD97B4DA1FA55F31FC7FE8AE7CC03A *PKSCLOCK_FUNCTIONTABLE;
typedef struct _ECC65BA02B08F93DE1D3AD2A06446B79 *PKSDS3D_ITD_PARAMS_MSG;
typedef struct _BDE91A4D4766441856A2EB7036E539BD *PKSEVENT_TIME_INTERVAL;
typedef struct _KSM_BDA_GPNV_GETVALUE *PKSM_BDA_GPNV_GETVALUE;
typedef struct _KSM_BDA_GPNV_SETVALUE *PKSM_BDA_GPNV_SETVALUE;
typedef struct KSM_BDA_WMDRM_LICENSE *PKSM_BDA_WMDRM_LICENSE;
typedef struct _6659DDBE55020196BB0156953601526A *PKSPROPERTY_EXTXPORT_S;
typedef struct _9A6BD7645A973A5ADF34F154404EC940 *PKSPROPERTY_SELECTOR_S;
typedef struct _9C12574F58AA2B5C1EBE7BBCF485E547 *PKSPROPERTY_TIMECODE_S;
typedef struct _B0BC4AADD5C9FF12157D028DEF0CCD6A *PKSTOPOLOGY_CONNECTION;
typedef struct _0606DB5FE2099CCDC829F33B29607B55 *PKSWAVETABLE_WAVE_DESC;
typedef struct _D63E714A239F9C0D1FE2D222C2E0E7D5 *PKS_AM_ExactRateChange;
typedef struct _KernelIdleStateChange *PKernelIdleStateChange;
typedef struct _KernelPerfStateChange *PKernelPerfStateChange;
typedef struct _LBA_STATUS_DESCRIPTOR *PLBA_STATUS_DESCRIPTOR;
typedef struct _PLEX_READ_DATA_REQUEST PLEX_READ_DATA_REQUEST;
typedef struct _MEMORY_COOLING_REGION *PMEMORY_COOLING_REGION;
typedef IMiniportWavePciStream *PMINIPORTWAVEPCISTREAM;
typedef struct _MODE_MEDIUM_PART_PAGE *PMODE_MEDIUM_PART_PAGE;
typedef struct _MODE_PARAMETER_HEADER *PMODE_PARAMETER_HEADER;
typedef struct _MOUNTMGR_MOUNT_POINTS *PMOUNTMGR_MOUNT_POINTS;
typedef struct _MOUNTMGR_VOLUME_PATHS *PMOUNTMGR_VOLUME_PATHS;
typedef struct _C0C97988B2B1541C7D96E5C8ECD89FD1 *PMOVE_FILE_RECORD_DATA;
typedef struct _MPIO_DISK_HEALTH_INFO *PMPIO_DISK_HEALTH_INFO;
typedef struct _MPIO_PATH_HEALTH_INFO *PMPIO_PATH_HEALTH_INFO;
typedef struct _MPIO_PATH_INFORMATION *PMPIO_PATH_INFORMATION;
typedef struct _MSFC_NPIVCapabilities *PMSFC_NPIVCapabilities;
typedef struct _MSMCAInfo_RawCMCEvent *PMSMCAInfo_RawCMCEvent;
typedef struct _MSMCAInfo_RawMCAEvent *PMSMCAInfo_RawMCAEvent;
typedef struct _MSNdis_80211_BSSIList *PMSNdis_80211_BSSIList;
typedef struct _MSNdis_FddiFramesLost *PMSNdis_FddiFramesLost;
typedef struct _MSNdis_FddiLemRejects *PMSNdis_FddiLemRejects;
typedef struct _MSNdis_HardwareStatus *PMSNdis_HardwareStatus;
typedef struct _MSNdis_LinkParameters *PMSNdis_LinkParameters;
typedef struct _MSNdis_MediaSupported *PMSNdis_MediaSupported;
typedef struct _MSNdis_NetworkAddress *PMSNdis_NetworkAddress;
typedef struct _MSNdis_PMCapabilities *PMSNdis_PMCapabilities;
typedef struct _MSNdis_StatisticsInfo *PMSNdis_StatisticsInfo;
typedef struct _MSNdis_TransmitsError *PMSNdis_TransmitsError;
typedef struct _MSNdis_VlanIdentifier *PMSNdis_VlanIdentifier;
typedef struct _MSNdis_WmiEnumAdapter *PMSNdis_WmiEnumAdapter;
typedef struct _MSV1_0_NTLM3_RESPONSE *PMSV1_0_NTLM3_RESPONSE;
typedef struct _MSVerifierIrpLogEntry *PMSVerifierIrpLogEntry;
typedef struct _MSiSCSI_QueryLBPolicy *PMSiSCSI_QueryLBPolicy;
typedef struct _NDIS_802_11_FIXED_IEs *PNDIS_802_11_FIXED_IEs;
typedef struct _NDIS_FILTER_INTERFACE *PNDIS_FILTER_INTERFACE;
typedef struct _NDIS_IPSEC_OFFLOAD_V1 *PNDIS_IPSEC_OFFLOAD_V1;
typedef struct _NDIS_IPSEC_OFFLOAD_V2 *PNDIS_IPSEC_OFFLOAD_V2;
typedef struct _NDIS_IRDA_PACKET_INFO *PNDIS_IRDA_PACKET_INFO;
typedef struct _NDIS_PNP_CAPABILITIES *PNDIS_PNP_CAPABILITIES;
typedef struct _NDIS_TAPI_SECURE_CALL *PNDIS_TAPI_SECURE_CALL;
typedef struct _NDIS_WMI_ENUM_ADAPTER *PNDIS_WMI_ENUM_ADAPTER;
typedef struct _NDIS_WMI_EVENT_HEADER *PNDIS_WMI_EVENT_HEADER;
typedef struct _NDIS_WWAN_DEVICE_CAPS *PNDIS_WWAN_DEVICE_CAPS;
typedef struct _NDIS_WWAN_DRIVER_CAPS *PNDIS_WWAN_DRIVER_CAPS;
typedef struct _NDIS_WWAN_RADIO_STATE *PNDIS_WWAN_RADIO_STATE;
typedef struct _NDIS_WWAN_SMS_RECEIVE *PNDIS_WWAN_SMS_RECEIVE;
typedef struct nd_opt_prefix_info *PND_OPTION_PREFIX_INFO;
typedef struct _NET_IF_RCV_ADDRESS_LH *PNET_IF_RCV_ADDRESS_LH;
typedef struct _4B3A6E5AEDB605283F91028F6AB24B20 *PNLB_FILTER_HOOK_TABLE;
typedef struct _NL_PATH_BANDWIDTH_ROD *PNL_PATH_BANDWIDTH_ROD;
typedef struct _NODE_DEVICE_EXTENSION *PNODE_DEVICE_EXTENSION;
typedef struct _NOTIFICATION_INFO_W2K *PNOTIFICATION_INFO_W2K;
typedef struct _NOTIFICATION_INFO_WXP *PNOTIFICATION_INFO_WXP;
typedef struct _NPAGED_LOOKASIDE_LIST *PNPAGED_LOOKASIDE_LIST;
typedef struct _PNP_LOCATION_INTERFACE PNP_LOCATION_INTERFACE;
typedef struct _PNP_REPLACE_PARAMETERS PNP_REPLACE_PARAMETERS;
typedef struct _NVCACHE_REQUEST_BLOCK *PNVCACHE_REQUEST_BLOCK;
typedef struct _POWER_SESSION_TIMEOUTS POWER_SESSION_TIMEOUTS;
typedef struct _POWER_SESSION_WINLOGON POWER_SESSION_WINLOGON;
typedef struct _PO_WAKE_SOURCE_HISTORY PO_WAKE_SOURCE_HISTORY;
typedef struct _PARALLEL_1284_COMMAND *PPARALLEL_1284_COMMAND;
typedef struct _PARALLEL_PARCHIP_INFO *PPARALLEL_PARCHIP_INFO;
typedef struct _PARALLEL_WMI_LOG_INFO *PPARALLEL_WMI_LOG_INFO;
typedef struct _PARTITION_INFORMATION *PPARTITION_INFORMATION;
typedef struct _PAR_QUERY_INFORMATION *PPAR_QUERY_INFORMATION;
typedef struct _PCI_AGP_ISOCH_COMMAND *PPCI_AGP_ISOCH_COMMAND;
typedef struct _PCI_FIRMWARE_BUS_CAPS *PPCI_FIRMWARE_BUS_CAPS;
typedef struct _PCMCIA_SOCKET_REQUEST *PPCMCIA_SOCKET_REQUEST;
typedef struct _PHYSICAL_MEMORY_RANGE *PPHYSICAL_MEMORY_RANGE;
typedef struct _321B4BFFCE66D8FF56170997BB33071C PPM_IDLE_ACCOUNTING_EX;
typedef struct _6A72E0E621DD38BDAEEB041E3C2A50BB PPM_WMI_IDLE_STATES_EX;
typedef struct _64810CDFD77AB08FD39653CA0460DA11 PPM_WMI_PERF_STATES_EX;
typedef struct _NFS_OPEN_ECP_CONTEXT **PPNFS_OPEN_ECP_CONTEXT;
typedef struct _6D0219E08C78C5ABE6BF34925E3CE89B *PPOPULATE_TOKEN_HEADER;
typedef struct _POWER_IDLE_RESILIENCY *PPOWER_IDLE_RESILIENCY;
typedef struct _POWER_SESSION_CONNECT *PPOWER_SESSION_CONNECT;
typedef struct _PO_WAKE_SOURCE_DEVICE *PPO_WAKE_SOURCE_DEVICE;
typedef struct _PO_WAKE_SOURCE_HEADER *PPO_WAKE_SOURCE_HEADER;
typedef struct _PREVENT_MEDIA_REMOVAL *PPREVENT_MEDIA_REMOVAL;
typedef struct _D55ED97765090EFE6FCBF66E3A8167D2 *PPRI_REGISTRATION_LIST;
typedef struct _PROCESSOR_IDLE_STATES *PPROCESSOR_IDLE_STATES;
typedef struct _PS_CREATE_NOTIFY_INFO *PPS_CREATE_NOTIFY_INFO;
typedef struct _QUERY_PATH_REQUEST_EX *PQUERY_PATH_REQUEST_EX;
typedef struct _READ_AHEAD_PARAMETERS *PREAD_AHEAD_PARAMETERS;
typedef struct _READ_CAPACITY_DATA_EX *PREAD_CAPACITY_DATA_EX;
typedef struct _REDBOOK_WMI_PERF_DATA *PREDBOOK_WMI_PERF_DATA;
typedef struct _PROCESSOR_POWER_POLICY PROCESSOR_POWER_POLICY;
typedef struct _PROCESSOR_RELATIONSHIP PROCESSOR_RELATIONSHIP;
typedef struct _PROCESS_EXCEPTION_PORT PROCESS_EXCEPTION_PORT;
typedef struct _ROOTHUB_PDO_EXTENSION *PROOTHUB_PDO_EXTENSION;
typedef struct _RX_DISPATCHER_CONTEXT_ *PRX_DISPATCHER_CONTEXT;
typedef struct _RX_WORK_DISPATCH_ITEM_ *PRX_WORK_DISPATCH_ITEM;
typedef struct _RemoveRADIUSServer_IN *PRemoveRADIUSServer_IN;
typedef struct _RemoveVirtualPort_OUT *PRemoveVirtualPort_OUT;
typedef struct _RescanVirtualPort_OUT *PRescanVirtualPort_OUT;
typedef struct _SCSI_ADAPTER_BUS_INFO *PSCSI_ADAPTER_BUS_INFO;
typedef struct _SCSI_EXTENDED_MESSAGE *PSCSI_EXTENDED_MESSAGE;
typedef struct SDP_ULARGE_INTEGER_16 *PSDP_ULARGE_INTEGER_16;
typedef struct _SD_QUERY_STATS_OUTPUT *PSD_QUERY_STATS_OUTPUT;
typedef struct _SD_RW_DIRECT_ARGUMENT *PSD_RW_DIRECT_ARGUMENT;
typedef struct _SES_STATUS_DESCRIPTOR *PSES_STATUS_DESCRIPTOR;
typedef struct _SET_LOCAL_HOST_PROPS1 *PSET_LOCAL_HOST_PROPS1;
typedef struct _SET_LOCAL_HOST_PROPS2 *PSET_LOCAL_HOST_PROPS2;
typedef struct _SET_LOCAL_HOST_PROPS3 *PSET_LOCAL_HOST_PROPS3;
typedef struct _SET_LOCAL_HOST_PROPS4 *PSET_LOCAL_HOST_PROPS4;
typedef struct _SET_LOCAL_HOST_PROPS5 *PSET_LOCAL_HOST_PROPS5;
typedef struct _SET_SINGLE_POLICY_OUT *PSET_SINGLE_POLICY_OUT;
typedef struct _SRBEX_DATA_SCSI_CDB16 *PSRBEX_DATA_SCSI_CDB16;
typedef struct _SRBEX_DATA_SCSI_CDB32 *PSRBEX_DATA_SCSI_CDB32;
typedef struct _STORAGE_DEVICE_NUMBER *PSTORAGE_DEVICE_NUMBER;
typedef struct _STORAGE_OFFLOAD_TOKEN *PSTORAGE_OFFLOAD_TOKEN;
typedef struct _STORAGE_READ_CAPACITY *PSTORAGE_READ_CAPACITY;
typedef struct _STORAGE_REQUEST_BLOCK *PSTORAGE_REQUEST_BLOCK;
typedef struct _STREAM_TIME_REFERENCE *PSTREAM_TIME_REFERENCE;
typedef struct _SecPkgContext_DceInfo *PSecPkgContext_DceInfo;
typedef struct _SetBindingSupport_OUT *PSetBindingSupport_OUT;
typedef struct _SetPersistentEntry_IN *PSetPersistentEntry_IN;
typedef struct _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;
typedef struct _TA_ADDRESS_NETBIOS_EX *PTA_NETBIOS_EX_ADDRESS;
typedef struct _TCG_DESCRIPTION_TABLE *PTCG_DESCRIPTION_TABLE;
typedef struct _TDI_ADDRESS_APPLETALK *PTDI_ADDRESS_APPLETALK;
typedef struct _TDI_ADDRESS_IP6_WIN2K *PTDI_ADDRESS_IP6_WIN2K;
typedef struct _TDI_MAX_DATAGRAM_INFO *PTDI_MAX_DATAGRAM_INFO;
typedef struct _TDI_NCPA_BINDING_INFO *PTDI_NCPA_BINDING_INFO;
typedef struct _TDI_PNP_CONTEXT_WIN2K *PTDI_PNP_CONTEXT_WIN2K;
typedef struct _TDI_ROUTING_INFO_WS03 *PTDI_ROUTING_INFO_WS03;
typedef struct _TOKEN_MANDATORY_LABEL *PTOKEN_MANDATORY_LABEL;
typedef struct _USBD_PIPE_INFORMATION *PUSBD_PIPE_INFORMATION;
typedef struct _USB_30_HUB_DESCRIPTOR *PUSB_30_HUB_DESCRIPTOR;
typedef struct _USB_COMMON_DESCRIPTOR *PUSB_COMMON_DESCRIPTOR;
typedef struct _USB_DEVICE_DESCRIPTOR *PUSB_DEVICE_DESCRIPTOR;
typedef struct _USB_LEVEL_INFORMATION *PUSB_LEVEL_INFORMATION;
typedef struct _USB_STRING_DESCRIPTOR *PUSB_STRING_DESCRIPTOR;
typedef struct _VIDEO_CHILD_ENUM_INFO *PVIDEO_CHILD_ENUM_INFO;
typedef struct _VIDEO_CURSOR_POSITION *PVIDEO_CURSOR_POSITION;
typedef struct _VIDEO_LUT_RGB256WORDS *PVIDEO_LUT_RGB256WORDS;
typedef struct _VPCI_READ_BLOCK_INPUT *PVPCI_READ_BLOCK_INPUT;
typedef struct _VPD_BLOCK_LIMITS_PAGE *PVPD_BLOCK_LIMITS_PAGE;
typedef struct _VP_DEVICE_DESCRIPTION *PVP_DEVICE_DESCRIPTION;
typedef struct _WAE_DESCRIPTION_TABLE *PWAE_DESCRIPTION_TABLE;
typedef union _WHEA_PERSISTENCE_INFO *PWHEA_PERSISTENCE_INFO;
typedef struct _WHEA_XPF_CONTEXT_INFO *PWHEA_XPF_CONTEXT_INFO;
typedef struct tagWNODE_EVENT_REFERENCE *PWNODE_EVENT_REFERENCE;
typedef struct tagWNODE_SINGLE_INSTANCE *PWNODE_SINGLE_INSTANCE;
typedef struct _WRITE_LOG_SECTORS_OUT *PWRITE_LOG_SECTORS_OUT;
typedef struct _WSK_PROVIDER_DISPATCH *PWSK_PROVIDER_DISPATCH;
typedef struct _WmiEnumeratePorts_OUT *PWmiEnumeratePorts_OUT;
typedef struct _WmiQueryLinkState_OUT *PWmiQueryLinkState_OUT;
typedef struct _WmiQueryPortState_OUT *PWmiQueryPortState_OUT;
typedef struct _READ_BLOCK_LIMITS READ_BLOCK_LIMITS_DATA;
typedef struct _RETRIEVAL_POINTER_BASE RETRIEVAL_POINTER_BASE;
typedef struct _RKF_BYPASS_ECP_CONTEXT RKF_BYPASS_ECP_CONTEXT;
typedef struct _RTL_DYNAMIC_HASH_TABLE RTL_DYNAMIC_HASH_TABLE;
typedef struct _EDF2F1A5F1BE56D609AF1AF9494F3DFB RX_DEBUG_TRACE_CONTROL;
typedef struct _RX_FCBTRACKER_CALLINFO RX_FCBTRACKER_CALLINFO;
typedef struct _RX_TOPLEVELIRP_CONTEXT RX_TOPLEVELIRP_CONTEXT;
typedef struct _RemoveRADIUSServer_OUT RemoveRADIUSServer_OUT;
typedef struct _RemoveVirtualPortEx_IN RemoveVirtualPortEx_IN;
typedef struct _SCATTER_GATHER_ELEMENT SCATTER_GATHER_ELEMENT;
typedef struct _SCSI_PNP_REQUEST_BLOCK SCSI_PNP_REQUEST_BLOCK;
typedef struct _SCSI_WMI_REQUEST_BLOCK SCSI_WMI_REQUEST_BLOCK;
typedef struct _SD_GLOBAL_CHANGE_INPUT SD_GLOBAL_CHANGE_INPUT;
typedef struct _SEND_RECEIVE_HOOK_INFO SEND_RECEIVE_HOOK_INFO;
typedef struct _SES_CONTROL_DESCRIPTOR SES_CONTROL_DESCRIPTOR;
typedef struct _SE_ADT_PARAMETER_ARRAY SE_ADT_PARAMETER_ARRAY;
typedef struct _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;
typedef struct _SE_SECURITY_DESCRIPTOR SE_SECURITY_DESCRIPTOR;
typedef struct _SLOT_TABLE_INFORMATION SLOT_TABLE_INFORMATION;
typedef struct SMHBA_SASPhyStatistics SMHBA_SASPHYSTATISTICS;
typedef struct _STORAGE_PROPERTY_QUERY STORAGE_PROPERTY_QUERY;
typedef struct _STORAGE_TRACE_DPS_INFO STORAGE_TRACE_DPS_INFO;
typedef struct _STOR_INIT_TRACING_ARGS STOR_INIT_TRACING_ARGS;
typedef struct _STOR_LOG_EVENT_DETAILS STOR_LOG_EVENT_DETAILS;
typedef struct _SUB_Q_CURRENT_POSITION SUB_Q_CURRENT_POSITION;
typedef struct _SecPkgContext_CredInfo SecPkgContext_CredInfo;
typedef struct _SecPkgContext_KeyInfoW SecPkgContext_KeyInfoW;
typedef struct _SecPkgContext_Lifespan SecPkgContext_Lifespan;
typedef struct _SecPkgContext_NegoKeys SecPkgContext_NegoKeys;
typedef struct _SecPkgCredentials_Cert SecPkgCredentials_Cert;
typedef struct _SECURITY_FUNCTION_TABLE_W SecurityFunctionTableW;
typedef struct _SetCHAPSharedSecret_IN SetCHAPSharedSecret_IN;
typedef struct _SetGenerationalGuid_IN SetGenerationalGuid_IN;
typedef struct _SetPersistentEntry_OUT SetPersistentEntry_OUT;
typedef struct tcp_opt_sack_permitted TCP_OPT_SACK_PERMITTED;
typedef struct _TDI_ADDRESS_NETBIOS_EX TDI_ADDRESS_NETBIOS_EX;
typedef struct _TDI_DISCONNECT_REQUEST TDI_REQUEST_DISCONNECT;
typedef struct _TOKEN_MANDATORY_POLICY TOKEN_MANDATORY_POLICY;
typedef struct _TRANSACTION_LIST_ENTRY TRANSACTION_LIST_ENTRY;
typedef struct _TXFS_LIST_TRANSACTIONS TXFS_LIST_TRANSACTIONS;
typedef struct _UNMAP_BLOCK_DESCRIPTOR UNMAP_BLOCK_DESCRIPTOR;
struct USBD_FUNCTION_HANDLE__ {int unused;};
typedef struct _USB_IDLE_CALLBACK_INFO USB_IDLE_CALLBACK_INFO;
typedef struct _USB_PIPE_INFORMATION_0 USB_PIPE_INFORMATION_0;
typedef struct _VIDEO_MODE_INFORMATION VIDEO_MODE_INFORMATION;
typedef struct _VIDEO_POINTER_POSITION VIDEO_POINTER_POSITION;
typedef struct _VIDEO_PORT_CONFIG_INFO VIDEO_PORT_CONFIG_INFO;
typedef struct _VIDEO_POWER_MANAGEMENT VIDEO_POWER_MANAGEMENT;
typedef struct _VIDEO_WIN32K_CALLBACKS VIDEO_WIN32K_CALLBACKS;
typedef struct _VPCI_WRITE_BLOCK_INPUT VPCI_WRITE_BLOCK_INPUT;
typedef struct _VPD_SERIAL_NUMBER_PAGE VPD_SERIAL_NUMBER_PAGE;
typedef struct _VP_SCATTER_GATHER_LIST VP_SCATTER_GATHER_LIST;
typedef struct _WHEA_NMI_ERROR_SECTION WHEA_NMI_ERROR_SECTION;
typedef struct _WMI_CHANGER_PARAMETERS WMI_CHANGER_PARAMETERS;
typedef struct _WMI_TAPE_SYMBOLIC_NAME WMI_TAPE_SYMBOLIC_NAME;
typedef struct _WRITE_USN_REASON_INPUT WRITE_USN_REASON_INPUT;
typedef struct _WSA_COMPATIBILITY_MODE WSA_COMPATIBILITY_MODE;
typedef struct _WWAN_AUTH_AKA_RESPONSE WWAN_AUTH_AKA_RESPONSE;
typedef struct _WWAN_AUTH_SIM_RESPONSE WWAN_AUTH_SIM_RESPONSE;
typedef struct _WWAN_SET_CONTEXT_STATE WWAN_SET_CONTEXT_STATE;
typedef struct _WWAN_SMS_CONFIGURATION WWAN_SMS_CONFIGURATION;
typedef struct _WmiSetALSBrightness_IN WmiSetALSBrightness_IN;
typedef struct yamaha_adpmcwaveformat_tag YAMAHA_ADPCMWAVEFORMAT;
struct _BUS_INFO_CAPABILITIES {unsigned int LinkSpeed : 3;unsigned int Reserved0 : 1;unsigned int Generation : 4;unsigned int MaxRom : 2;unsigned int Reserved1 : 2;unsigned int MaxRec : 4;unsigned int CycleClockAccuracy : 8;unsigned int Reserved2 : 3;unsigned int PowerManagementCapable : 1;unsigned int BusManagerCapable : 1;unsigned int IsochCapable : 1;unsigned int CycleMasterCapable : 1;unsigned int IsochResourceManagerCapable : 1;};
enum _CLFS_LOG_ARCHIVE_MODE {ClfsLogArchiveEnabled = 0x1,ClfsLogArchiveDisabled = 0x2,};
enum _CLFS_MGMT_POLICY_TYPE {ClfsMgmtPolicyMaximumSize = 0x0,ClfsMgmtPolicyMinimumSize = 0x1,ClfsMgmtPolicyNewContainerSize = 0x2,ClfsMgmtPolicyGrowthRate = 0x3,ClfsMgmtPolicyLogTail = 0x4,ClfsMgmtPolicyAutoShrink = 0x5,ClfsMgmtPolicyAutoGrow = 0x6,ClfsMgmtPolicyNewContainerPrefix = 0x7,ClfsMgmtPolicyNewContainerSuffix = 0x8,ClfsMgmtPolicyNewContainerExtension = 0x9,ClfsMgmtPolicyInvalid = 0xA,};
enum _CM_ERROR_CONTROL_TYPE {IgnoreError = 0x0,NormalError = 0x1,SevereError = 0x2,CriticalError = 0x3,};
enum _D3DDDI_GAMMARAMP_TYPE {D3DDDI_GAMMARAMP_UNINITIALIZED = 0x0,D3DDDI_GAMMARAMP_DEFAULT = 0x1,D3DDDI_GAMMARAMP_RGB256x3x16 = 0x2,D3DDDI_GAMMARAMP_DXGI_1 = 0x3,};
enum _D3DDDI_OFFER_PRIORITY {D3DDDI_OFFER_PRIORITY_NONE = 0x0,D3DDDI_OFFER_PRIORITY_LOW = 0x1,D3DDDI_OFFER_PRIORITY_NORMAL = 0x2,D3DDDI_OFFER_PRIORITY_HIGH = 0x3,D3DDDI_OFFER_PRIORITY_AUTO = 0x4,};
enum _D3DKMDT_GTFCOMPLIANCE {D3DKMDT_GTF_UNINITIALIZED = 0x0,D3DKMDT_GTF_COMPLIANT = 0x1,D3DKMDT_GTF_NOTCOMPLIANT = 0x2,};
enum _DEVICE_REMOVAL_POLICY {RemovalPolicyExpectNoRemoval = 0x1,RemovalPolicyExpectOrderlyRemoval = 0x2,RemovalPolicyExpectSurpriseRemoval = 0x3,};
enum _DISK_PERFORMANCE_TYPE {DiskPerformanceTypeAllPriority = 0x0,DiskPerformanceTypeNonLowPriority = 0x1,DiskPerformanceTypeMax = 0x2,};
enum _DSM_NOTIFICATION_TYPE {DeviceFailure = 0x0,PathFailure = 0x1,PathOnLine = 0x2,ThrottleIO = 0x3,ResumeIO = 0x4,SetCurrentPath = 0x5,ThrottleIO_V2 = 0x6,ResumeIO_V2 = 0x7,SetCurrentPath_V2 = 0x8,MaxDsmNotificationType = 0x9,};
enum _DXGKMDT_OPM_HDCP_FLAG {DXGKMDT_OPM_HDCP_FLAG_NONE = 0x0,DXGKMDT_OPM_HDCP_FLAG_REPEATER = 0x1,};
enum _DXGK_GDIROP_COLORFILL {DXGK_GDIROPCF_INVALID = 0x0,DXGK_GDIROPCF_PATCOPY = 0x1,DXGK_GDIROPCF_PATINVERT = 0x2,DXGK_GDIROPCF_PDXN = 0x3,DXGK_GDIROPCF_DSTINVERT = 0x4,DXGK_GDIROPCF_PATAND = 0x5,DXGK_GDIROPCF_PATOR = 0x6,DXGK_GDIROPCF_ROP3 = 0x7,};
enum _EXCEPTION_DISPOSITION {ExceptionContinueExecution = 0x0,ExceptionContinueSearch = 0x1,ExceptionNestedException = 0x2,ExceptionCollidedUnwind = 0x3,};
enum _EXTENDED_AGP_REGISTER {IsochStatus = 0x0,AgpControl = 0x1,ApertureSize = 0x2,AperturePageSize = 0x3,GartLow = 0x4,GartHigh = 0x5,IsochCommand = 0x6,};
enum _HARDWARE_COUNTER_TYPE {PMCCounter = 0x0,MaxHardwareCounterType = 0x1,};
enum _IDE_NOTIFICATION_TYPE {IdeDeviceArrival = 0x0,IdeDeviceRemoval = 0x1,IdePowerStateChange = 0x2,};
enum _KEY_INFORMATION_CLASS {KeyBasicInformation = 0x0,KeyNodeInformation = 0x1,KeyFullInformation = 0x2,KeyNameInformation = 0x3,KeyCachedInformation = 0x4,KeyFlagsInformation = 0x5,KeyVirtualizationInformation = 0x6,KeyHandleTagsInformation = 0x7,KeyTrustInformation = 0x8,MaxKeyInfoClass = 0x9,};
struct _KEY_TRUST_INFORMATION {unsigned int TrustedKey : 1;unsigned int Reserved : 31;};
enum _MONITOR_DISPLAY_STATE {PowerMonitorOff = 0x0,PowerMonitorOn = 0x1,PowerMonitorDim = 0x2,};
enum _NDIS_802_5_RING_STATE {NdisRingStateOpened = 0x1,NdisRingStateClosed = 0x2,NdisRingStateOpening = 0x3,NdisRingStateClosing = 0x4,NdisRingStateOpenFailure = 0x5,NdisRingStateRingFailure = 0x6,};
enum _NDIS_ARP_HEADER_FIELD {NdisARPHeaderFieldUndefined = 0x0,NdisARPHeaderFieldOperation = 0x1,NdisARPHeaderFieldSPA = 0x2,NdisARPHeaderFieldTPA = 0x3,NdisARPHeaderFieldMaximum = 0x4,};
enum _NDIS_DEVICE_PNP_EVENT {NdisDevicePnPEventQueryRemoved = 0x0,NdisDevicePnPEventRemoved = 0x1,NdisDevicePnPEventSurpriseRemoved = 0x2,NdisDevicePnPEventQueryStopped = 0x3,NdisDevicePnPEventStopped = 0x4,NdisDevicePnPEventPowerProfileChanged = 0x5,NdisDevicePnPEventFilterListChanged = 0x6,NdisDevicePnPEventMaximum = 0x7,};
enum _NDIS_ENVIRONMENT_TYPE {NdisEnvironmentWindows = 0x0,NdisEnvironmentWindowsNt = 0x1,};
enum _NDIS_MAC_HEADER_FIELD {NdisMacHeaderFieldUndefined = 0x0,NdisMacHeaderFieldDestinationAddress = 0x1,NdisMacHeaderFieldSourceAddress = 0x2,NdisMacHeaderFieldProtocol = 0x3,NdisMacHeaderFieldVlanId = 0x4,NdisMacHeaderFieldPriority = 0x5,NdisMacHeaderFieldPacketType = 0x6,NdisMacHeaderFieldMaximum = 0x7,};
enum _NDIS_PROCESSOR_VENDOR {NdisProcessorVendorUnknown = 0x0,NdisProcessorVendorGenuinIntel = 0x1,NdisProcessorVendorGenuineIntel = 0x1,NdisProcessorVendorAuthenticAMD = 0x2,};
enum _NDIS_UDP_HEADER_FIELD {NdisUdpHeaderFieldUndefined = 0x0,NdisUdpHeaderFieldDestinationPort = 0x1,NdisUdpHeaderFieldMaximum = 0x2,};
enum _NET_IF_DIRECTION_TYPE {NET_IF_DIRECTION_SENDRECEIVE = 0x0,NET_IF_DIRECTION_SENDONLY = 0x1,NET_IF_DIRECTION_RECEIVEONLY = 0x2,NET_IF_DIRECTION_MAXIMUM = 0x3,};
struct _PCI_AGP_ISOCH_COMMAND {unsigned short Rsvd1 : 6;unsigned short Isoch_Y : 2;unsigned short Isoch_N : 8;};
enum _RDBSS_BUG_CHECK_CODES {RDBSS_BUG_CHECK_FCBSTRUC = 0xFCB00000,RDBSS_BUG_CHECK_CACHESUP = 0xCA550000,RDBSS_BUG_CHECK_CLEANUP = 0xC1EE0000,RDBSS_BUG_CHECK_CLOSE = 0xC10E0000,RDBSS_BUG_CHECK_NTEXCEPT = 0xBAAD0000,};
enum _RDBSS_SCAVENGER_STATE {RDBSS_SCAVENGER_INACTIVE = 0x0,RDBSS_SCAVENGER_DORMANT = 0x1,RDBSS_SCAVENGER_ACTIVE = 0x2,RDBSS_SCAVENGER_SUSPENDED = 0x3,};
enum _SCO_DISCONNECT_REASON {ScoHciDisconnect = 0x0,ScoDisconnectRequest = 0x1,ScoRadioPoweredDown = 0x2,ScoHardwareRemoval = 0x3,};
enum _SE_ADT_PARAMETER_TYPE {SeAdtParmTypeNone = 0x0,SeAdtParmTypeString = 0x1,SeAdtParmTypeFileSpec = 0x2,SeAdtParmTypeUlong = 0x3,SeAdtParmTypeSid = 0x4,SeAdtParmTypeLogonId = 0x5,SeAdtParmTypeNoLogonId = 0x6,SeAdtParmTypeAccessMask = 0x7,SeAdtParmTypePrivs = 0x8,SeAdtParmTypeObjectTypes = 0x9,SeAdtParmTypeHexUlong = 0xA,SeAdtParmTypePtr = 0xB,SeAdtParmTypeTime = 0xC,SeAdtParmTypeGuid = 0xD,SeAdtParmTypeLuid = 0xE,SeAdtParmTypeHexInt64 = 0xF,SeAdtParmTypeStringList = 0x10,SeAdtParmTypeSidList = 0x11,SeAdtParmTypeDuration = 0x12,SeAdtParmTypeUserAccountControl = 0x13,SeAdtParmTypeNoUac = 0x14,SeAdtParmTypeMessage = 0x15,SeAdtParmTypeDateTime = 0x16,SeAdtParmTypeSockAddr = 0x17,SeAdtParmTypeSD = 0x18,SeAdtParmTypeLogonHours = 0x19,SeAdtParmTypeLogonIdNoSid = 0x1A,SeAdtParmTypeUlongNoConv = 0x1B,SeAdtParmTypeSockAddrNoPort = 0x1C,SeAdtParmTypeAccessReason = 0x1D,SeAdtParmTypeStagingReason = 0x1E,SeAdtParmTypeResourceAttribute = 0x1F,SeAdtParmTypeClaims = 0x20,SeAdtParmTypeLogonIdAsSid = 0x21,};
enum _STORAGE_ID_NAA_FORMAT {StorageIdNAAFormatIEEEExtended = 0x2,StorageIdNAAFormatIEEERegistered = 0x3,StorageIdNAAFormatIEEEERegisteredExtended = 0x5,};
enum _STORAGE_PORT_CODE_SET {StoragePortCodeSetReserved = 0x0,StoragePortCodeSetStorport = 0x1,StoragePortCodeSetSCSIport = 0x2,StoragePortCodeSetSpaceport = 0x3,StoragePortCodeSetATAport = 0x4,StoragePortCodeSetUSBport = 0x5,StoragePortCodeSetSBP2port = 0x6,StoragePortCodeSetSDport = 0x7,};
enum _STOR_IO_PRIORITY_HINT {StorIoPriorityVeryLow = 0x0,StorIoPriorityLow = 0x1,StorIoPriorityNormal = 0x2,StorIoPriorityHigh = 0x3,StorIoPriorityCritical = 0x4,StorIoMaxPriorityTypes = 0x5,StorIoMaxPriorityValue = 0xFFFF,};
struct _SecPkgContext_DceInfo {unsigned int AuthzSvc;void *pPac;};
enum _USBPORT_INITDEV_ERROR {InitDevErrNotSet = 0x0,InitDevFailedSetAddress = 0x1,InitDevFailedPokeEndpoint = 0x2,InitDevBadDeviceDescriptor = 0x3,};
enum _USB_CONTROLLER_FLAVOR {USB_HcGeneric = 0x0,OHCI_Generic = 0x64,OHCI_Hydra = 0x65,OHCI_NEC = 0x66,UHCI_Generic = 0xC8,UHCI_Piix4 = 0xC9,UHCI_Piix3 = 0xCA,UHCI_Ich2 = 0xCB,UHCI_Reserved204 = 0xCC,UHCI_Ich1 = 0xCD,UHCI_Ich3m = 0xCE,UHCI_Ich4 = 0xCF,UHCI_Ich5 = 0xD0,UHCI_Ich6 = 0xD1,UHCI_Intel = 0xF9,UHCI_VIA = 0xFA,UHCI_VIA_x01 = 0xFB,UHCI_VIA_x02 = 0xFC,UHCI_VIA_x03 = 0xFD,UHCI_VIA_x04 = 0xFE,UHCI_VIA_x0E_FIFO = 0x108,EHCI_Generic = 0x3E8,EHCI_NEC = 0x7D0,EHCI_Lucent = 0xBB8,EHCI_NVIDIA_Tegra2 = 0xFA0,EHCI_NVIDIA_Tegra3 = 0xFA1,EHCI_Intel_Medfield = 0x1389,};
enum _WWAN_ACTIVATION_STATE {WwanActivationStateUnknown = 0x0,WwanActivationStateActivated = 0x1,WwanActivationStateActivating = 0x2,WwanActivationStateDeactivated = 0x3,WwanActivationStateDeactivating = 0x4,WwanActivationStateMax = 0x5,};
enum _WWAN_VOICE_CALL_STATE {WwanVoiceCallStateNone = 0x0,WwanVoiceCallStateInProgress = 0x1,WwanVoiceCallStateHangUp = 0x2,WwanVoiceCallStateMaximum = 0x3,};
enum tagScanModulationTypes {BDA_SCAN_MOD_16QAM = 0x1,BDA_SCAN_MOD_32QAM = 0x2,BDA_SCAN_MOD_64QAM = 0x4,BDA_SCAN_MOD_80QAM = 0x8,BDA_SCAN_MOD_96QAM = 0x10,BDA_SCAN_MOD_112QAM = 0x20,BDA_SCAN_MOD_128QAM = 0x40,BDA_SCAN_MOD_160QAM = 0x80,BDA_SCAN_MOD_192QAM = 0x100,BDA_SCAN_MOD_224QAM = 0x200,BDA_SCAN_MOD_256QAM = 0x400,BDA_SCAN_MOD_320QAM = 0x800,BDA_SCAN_MOD_384QAM = 0x1000,BDA_SCAN_MOD_448QAM = 0x2000,BDA_SCAN_MOD_512QAM = 0x4000,BDA_SCAN_MOD_640QAM = 0x8000,BDA_SCAN_MOD_768QAM = 0x10000,BDA_SCAN_MOD_896QAM = 0x20000,BDA_SCAN_MOD_1024QAM = 0x40000,BDA_SCAN_MOD_QPSK = 0x80000,BDA_SCAN_MOD_BPSK = 0x100000,BDA_SCAN_MOD_OQPSK = 0x200000,BDA_SCAN_MOD_8VSB = 0x400000,BDA_SCAN_MOD_16VSB = 0x800000,BDA_SCAN_MOD_AM_RADIO = 0x1000000,BDA_SCAN_MOD_FM_RADIO = 0x2000000,BDA_SCAN_MOD_8PSK = 0x4000000,BDA_SCAN_MOD_RF = 0x8000000,ScanModulationTypesMask_MCE_DigitalCable = 0xB,ScanModulationTypesMask_MCE_TerrestrialATSC = 0x17,ScanModulationTypesMask_MCE_AnalogTv = 0x1C,ScanModulationTypesMask_MCE_All_TV = 0xFFFFFFFF,ScanModulationTypesMask_DVBC = 0x4B,BDA_SCAN_MOD_16APSK = 0x10000000,BDA_SCAN_MOD_32APSK = 0x20000000,};
typedef struct _ARBITER_CONFLICT_INFO ARBITER_CONFLICT_INFO;
typedef struct _AUX_MODULE_BASIC_INFO AUX_MODULE_BASIC_INFO;
typedef struct _AVCSTRM_BUFFER_STRUCT AVCSTRM_BUFFER_STRUCT;
typedef struct _AVC_SUBUNIT_ADDR_SPEC AVC_SUBUNIT_ADDR_SPEC;
typedef struct _BASEBAND_CHANNEL_INFO BASEBAND_CHANNEL_INFO;
enum BDA_Channel_Bandwidth {BDA_CHAN_BANDWITH_NOT_SET = 0xFFFFFFFF,BDA_CHAN_BANDWITH_NOT_DEFINED = 0x0,};
typedef struct _BDA_IPv4_ADDRESS_LIST BDA_IPv4_ADDRESS_LIST;
typedef struct _BDA_IPv6_ADDRESS_LIST BDA_IPv6_ADDRESS_LIST;
typedef struct _BDA_TUNER_DIAGNOSTICS BDA_TUNER_DIAGNOSTICS;
typedef struct _BDA_WMDRM_KEYINFOLIST BDA_WMDRM_KEYINFOLIST;
typedef struct _BUS_INFO_CAPABILITIES BUS_INFO_CAPABILITIES;
typedef struct _40A6D5622BA75F270314126148B7B4DB BUS_INTERFACE_MEDIUMS;
typedef struct _CDROM_SIMPLE_OPC_INFO CDROM_SIMPLE_OPC_INFO;
typedef struct _CDVD_FEATURE_SET_PAGE CDVD_FEATURE_SET_PAGE;
typedef struct _CDVD_REPORT_AGID_DATA CDVD_REPORT_AGID_DATA;
typedef struct _CDVD_TITLE_KEY_HEADER CDVD_TITLE_KEY_HEADER;
typedef struct _CLOCK_RATE_CONVERSION CLOCK_RATE_CONVERSION;
typedef struct _CM_FLOPPY_DEVICE_DATA CM_FLOPPY_DEVICE_DATA;
typedef struct _CM_PCCARD_DEVICE_DATA CM_PCCARD_DEVICE_DATA;
typedef struct _CM_SERIAL_DEVICE_DATA CM_SERIAL_DEVICE_DATA;
typedef struct contres_cr10waveformat_tag CONTRESCR10WAVEFORMAT;
typedef struct _CO_TAPI_TRANSLATE_SAP CO_TAPI_TRANSLATE_SAP;
typedef struct _CSV_IS_OWNED_BY_CSVFS CSV_IS_OWNED_BY_CSVFS;
typedef struct _CreateVirtualPort_OUT CreateVirtualPort_OUT;
typedef struct _D3DDDI_ALLOCATIONINFO D3DDDI_ALLOCATIONINFO;
typedef struct _D3DDDI_ALLOCATIONLIST D3DDDI_ALLOCATIONLIST;
typedef struct _D3DDDI_RESOURCEFLAGS2 D3DDDI_RESOURCEFLAGS2;
typedef struct _DESCRIPTOR_SENSE_DATA DESCRIPTOR_SENSE_DATA;
typedef struct _DEVICE_DATA_SET_RANGE DEVICE_DATA_SET_RANGE;
typedef struct _DISK_PERFORMANCE_INFO DISK_PERFORMANCE_INFO;
typedef struct _DOT11_AP_JOIN_REQUEST DOT11_AP_JOIN_REQUEST;
typedef struct _DOT11_BSS_DESCRIPTION DOT11_BSS_DESCRIPTION;
typedef struct _DOT11_PEER_STATISTICS DOT11_PEER_STATISTICS;
typedef struct _DOT11_POWER_MGMT_MODE DOT11_POWER_MGMT_MODE;
typedef struct _DOT11_QOS_TX_DURATION DOT11_QOS_TX_DURATION;
typedef struct _DOT11_SCAN_REQUEST_V2 DOT11_SCAN_REQUEST_V2;
typedef struct _DOT11_WFD_DEVICE_INFO DOT11_WFD_DEVICE_INFO;
typedef struct _DOT11_WFD_DEVICE_TYPE DOT11_WFD_DEVICE_TYPE;
typedef struct _DOT11_WPS_DEVICE_NAME DOT11_WPS_DEVICE_NAME;
typedef struct _DUMP_POINTERS_VERSION DUMP_POINTERS_VERSION;
typedef struct _DXGKARG_CANCELCOMMAND DXGKARG_CANCELCOMMAND;
typedef struct _DXGKARG_CREATECONTEXT DXGKARG_CREATECONTEXT;
typedef struct _DXGKARG_CREATEOVERLAY DXGKARG_CREATEOVERLAY;
typedef struct _DXGKARG_SUBMITCOMMAND DXGKARG_SUBMITCOMMAND;
typedef struct _DXGKARG_UPDATEOVERLAY DXGKARG_UPDATEOVERLAY;
typedef struct _DXGKMDT_OPM_OUTPUT_ID DXGKMDT_OPM_OUTPUT_ID;
typedef struct _DXGK_BRIGHTNESS_STATE DXGK_BRIGHTNESS_STATE;
typedef struct _DXGK_CHILD_DESCRIPTOR DXGK_CHILD_DESCRIPTOR;
typedef struct _DXGK_GDIARG_COLORFILL DXGK_GDIARG_COLORFILL;
typedef struct _DXGK_MAPAPERTUREFLAGS DXGK_MAPAPERTUREFLAGS;
typedef struct _DXGK_PRESENTATIONCAPS DXGK_PRESENTATIONCAPS;
typedef struct _DXGK_QUERYSEGMENTOUT2 DXGK_QUERYSEGMENTOUT2;
typedef struct _DXGK_QUERYSEGMENTOUT3 DXGK_QUERYSEGMENTOUT3;
typedef struct _DXGK_RENDERKM_COMMAND DXGK_RENDERKM_COMMAND;
typedef struct _ELEMENT_STATUS_HEADER ELEMENT_STATUS_HEADER;
typedef struct _EMULATOR_ACCESS_ENTRY EMULATOR_ACCESS_ENTRY;
typedef struct _ENTROPY_SOURCE_STATE *ENTROPY_SOURCE_HANDLE;
typedef struct _EVENT_DATA_DESCRIPTOR EVENT_DATA_DESCRIPTOR;
typedef struct _EXECUTE_SELF_TEST_OUT EXECUTE_SELF_TEST_OUT;
typedef void FAST_IO_DETACH_DEVICE(struct _DEVICE_OBJECT *SourceDevice, struct _DEVICE_OBJECT *TargetDevice);
typedef struct _FILESYSTEM_STATISTICS FILESYSTEM_STATISTICS;
typedef struct _FILE_LEVEL_TRIM_RANGE FILE_LEVEL_TRIM_RANGE;
typedef struct _FILE_LINK_INFORMATION FILE_LINK_INFORMATION;
typedef struct _FILE_MODE_INFORMATION FILE_MODE_INFORMATION;
typedef struct _FILE_NAME_INFORMATION FILE_NAME_INFORMATION;
typedef struct _FILE_OBJECT_EXTENSION FILE_OBJECT_EXTENSION;
typedef struct _FILE_PIPE_INFORMATION FILE_PIPE_INFORMATION;
typedef struct _FILE_PIPE_PEEK_BUFFER FILE_PIPE_PEEK_BUFFER;
typedef struct _FILTER_MESSAGE_HEADER FILTER_MESSAGE_HEADER;
typedef struct _FLT_VOLUME_PROPERTIES FLT_VOLUME_PROPERTIES;
typedef struct _GENERATE_NAME_CONTEXT GENERATE_NAME_CONTEXT;
typedef struct _GET_FP_CAPABILITY_OUT GET_FP_CAPABILITY_OUT;
typedef struct _GET_SINGLE_POLICY_OUT GET_SINGLE_POLICY_OUT;
typedef struct _GET_UNIT_CAPABILITIES GET_UNIT_CAPABILITIES;
typedef struct _GetBindingSupport_OUT GetBindingSupport_OUT;
typedef struct _HAL_POWER_INFORMATION HAL_POWER_INFORMATION;
typedef struct _HAL_PROCESSOR_FEATURE HAL_PROCESSOR_FEATURE;
typedef struct HBA_AdapterAttributes HBA_ADAPTERATTRIBUTES;
typedef struct HBA_LibraryAttributes HBA_LIBRARYATTRIBUTES;
typedef struct _HDAUDIO_BUS_INTERFACE HDAUDIO_BUS_INTERFACE;
typedef struct _HDAUDIO_CODEC_COMMAND HDAUDIO_CODEC_COMMAND;
typedef struct _HDAUDIO_STREAM_FORMAT HDAUDIO_STREAM_FORMAT;
typedef struct _HID_DEVICE_ATTRIBUTES HID_DEVICE_ATTRIBUTES;
typedef struct _HW_STREAM_INFORMATION HW_STREAM_INFORMATION;
typedef struct _ICMPV4_ROUTER_SOLICIT ICMPV4_ROUTER_SOLICIT;
typedef struct _IDE_CHANNEL_INTERFACE IDE_CHANNEL_INTERFACE;
typedef struct _IDE_DEVICE_PARAMETERS IDE_DEVICE_PARAMETERS;
enum IMAGE_AUX_SYMBOL_TYPE {IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 0x1,};
typedef struct _IMAGE_BASE_RELOCATION IMAGE_BASE_RELOCATION;
typedef struct _IMAGE_DEBUG_DIRECTORY IMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY32;
typedef struct _IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY64;
struct IMiniportWaveRTStream {struct IMiniportWaveRTStreamVtbl *lpVtbl;};
typedef struct _INDICATION_PARAMETERS INDICATION_PARAMETERS;
typedef struct _INET_PORT_RANGE INET_PORT_RESERVATION;
typedef struct _INITIAL_PRIVILEGE_SET INITIAL_PRIVILEGE_SET;
typedef struct _IO_COMPLETION_CONTEXT IO_COMPLETION_CONTEXT;
typedef struct _IPV4_TIMESTAMP_OPTION IPV4_TIMESTAMP_OPTION;
typedef struct _IPV6_EXTENSION_HEADER IPV6_EXTENSION_HEADER;
typedef struct _IPV6_OPTION_JUMBOGRAM IPV6_OPTION_JUMBOGRAM;
typedef struct _IdleStateAccountingEx IdleStateAccountingEx;
typedef struct _KCRM_TRANSACTION_BLOB KCRM_TRANSACTION_BLOB;
typedef struct _KEY_BASIC_INFORMATION KEY_BASIC_INFORMATION;
typedef struct _KEY_TRUST_INFORMATION KEY_TRUST_INFORMATION;
typedef struct _FBE7179BAB40555F1A13AD3C5BC3BB71 KSAC3_ALTERNATE_AUDIO;
typedef struct _9ADD4811563784E97592213CBF8060F3 KSAC3_BIT_STREAM_MODE;
typedef struct _52AD6460DAD19A3D48443005CDCF2412 KSAUDIO_DYNAMIC_RANGE;
typedef struct _F0AD97B4DA1FA55F31FC7FE8AE7CC03A KSCLOCK_FUNCTIONTABLE;
typedef struct _ECC65BA02B08F93DE1D3AD2A06446B79 KSDS3D_ITD_PARAMS_MSG;
typedef struct _BDE91A4D4766441856A2EB7036E539BD KSEVENT_TIME_INTERVAL;
typedef struct _KSM_BDA_GPNV_GETVALUE KSM_BDA_GPNV_GETVALUE;
typedef struct _KSM_BDA_GPNV_SETVALUE KSM_BDA_GPNV_SETVALUE;
typedef struct _6659DDBE55020196BB0156953601526A KSPROPERTY_EXTXPORT_S;
typedef struct _9A6BD7645A973A5ADF34F154404EC940 KSPROPERTY_SELECTOR_S;
typedef struct _9C12574F58AA2B5C1EBE7BBCF485E547 KSPROPERTY_TIMECODE_S;
typedef struct _B0BC4AADD5C9FF12157D028DEF0CCD6A KSTOPOLOGY_CONNECTION;
typedef struct _0606DB5FE2099CCDC829F33B29607B55 KSWAVETABLE_WAVE_DESC;
typedef struct _D63E714A239F9C0D1FE2D222C2E0E7D5 KS_AM_ExactRateChange;
typedef struct _KernelIdleStateChange KernelIdleStateChange;
typedef struct _KernelPerfStateChange KernelPerfStateChange;
typedef struct _LBA_STATUS_DESCRIPTOR LBA_STATUS_DESCRIPTOR;
typedef struct sockaddr_in6_w2ksp1 *LPSOCKADDR_IN6_W2KSP1;
typedef struct sockaddr_storage *LPSOCKADDR_STORAGE_LH;
typedef struct sockaddr_storage_xp *LPSOCKADDR_STORAGE_XP;
typedef struct _SOCKET_ADDRESS_LIST *LPSOCKET_ADDRESS_LIST;
enum MACRO_ACCESS_ACE_FLAG {SUCCESSFUL_ACCESS_ACE_FLAG = 0x40,FAILED_ACCESS_ACE_FLAG = 0x80,};
enum MACRO_ACPI_BIOS_FATAL {ACPI_BIOS_FATAL_ERROR = 0xE0,};
enum MACRO_ATTEMPTED_WRITE {ATTEMPTED_WRITE_TO_READONLY_MEMORY = 0xBE,};
enum MACRO_AddRADIUSServer {AddRADIUSServer = 103,};
enum MACRO_BTH_MAX_SERVICE {BTH_MAX_SERVICE_NAME_SIZE = 256,};
enum MACRO_CDROM_EXCLUSIVE {CDROM_EXCLUSIVE_CALLER_LENGTH = 64,CDROM_LOCK_IGNORE_VOLUME = 1,CDROM_NO_MEDIA_NOTIFICATIONS = 2,CDROM_NOT_IN_EXCLUSIVE_MODE = 0,CDROM_IN_EXCLUSIVE_MODE = 1,};
enum MACRO_CONTEXT_E_NOJIT {CONTEXT_E_NOJIT = 0x8004E026,CONTEXT_E_NOTRANSACTION = 0x8004E027,};
enum MACRO_CRITICAL_OBJECT {CRITICAL_OBJECT_TERMINATION = 0xF4,};
enum MACRO_CURRENT_AVCSTRM {CURRENT_AVCSTRM_DDI_VERSION = 825578574,};
enum MACRO_DEFAULT_FAILURE {DEFAULT_FAILURE_PREDICTION_PERIOD = 3600,};
enum MACRO_DOT11_AVAILABLE {DOT11_AVAILABLE_CHANNEL_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_FREQUENCY {DOT11_FREQUENCY_BANDS_LOWER = 0x1,DOT11_FREQUENCY_BANDS_MIDDLE = 0x2,DOT11_FREQUENCY_BANDS_UPPER = 0x4,};
enum MACRO_DOT11_OPERATION {DOT11_OPERATION_MODE_UNKNOWN = 0x0,DOT11_OPERATION_MODE_STATION = 0x1,DOT11_OPERATION_MODE_AP = 0x2,DOT11_OPERATION_MODE_EXTENSIBLE_STATION = 0x4,DOT11_OPERATION_MODE_EXTENSIBLE_AP = 0x8,DOT11_OPERATION_MODE_WFD_DEVICE = 0x10,DOT11_OPERATION_MODE_WFD_GROUP_OWNER = 0x20,DOT11_OPERATION_MODE_WFD_CLIENT = 0x40,DOT11_OPERATION_MODE_MANUFACTURING = 0x40000000,DOT11_OPERATION_MODE_NETWORK_MONITOR = 0x80000000,};
enum MACRO_DOT11_WFD_GROUP {DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG_REVISION_1 = 1,};
enum MACRO_DRIVER_INTERNAL {PORT_DRIVER_INTERNAL = 0x2C,SCSI_DISK_DRIVER_INTERNAL = 0x2D,};
enum MACRO_DRIVER_RETURNED {DRIVER_RETURNED_STATUS_REPARSE_FOR_VOLUME_OPEN = 0xF9,};
enum MACRO_DRIVER_UNLOADED {DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS = 0xCE,};
enum MACRO_DRIVER_VERIFIER {DRIVER_VERIFIER_DETECTED_VIOLATION = 0xC4,DRIVER_CORRUPTED_EXPOOL = 0xC5,DRIVER_CAUGHT_MODIFYING_FREED_POOL = 0xC6,};
enum MACRO_DXGK_ALLOCATION {DXGK_ALLOCATION_LIST_SIZE_GDICONTEXT = 256,DXGK_TEXTURE_SIZE_SHIFT = 11,DXGK_MAX_ASYMETRICAL_PROCESSING_NODES = 64,DXGK_SEGMENT_ID_INVALID = 0,DXGK_SEGMENT_ID_SYSTEMMEMORY = 31,DXGK_SEGMENT_SET_SYSTEMMEMORY = -2147483648,DXGK_FSTATE_UNKNOWN_POWER = -1,DXGK_FSTATE_UNKNOWN_TIME = -1,DXGK_MAX_F_STATES = 8,DXGK_POWER_COMPONENT_NAME_SIZE = 40,DXGK_MAX_POWER_COMPONENT_PROVIDERS = 16,DXGK_SECONDARY_BUCKETING_TAG = 1649636173,};
enum MACRO_DeviceDsmAction {DeviceDsmAction_None = 0,DeviceDsmAction_Trim = 1,DeviceDsmAction_Notification = -2147483646,DeviceDsmAction_OffloadRead = -2147483645,DeviceDsmAction_OffloadWrite = 4,DeviceDsmAction_Allocation = -2147483643,DeviceDsmAction_Repair = -2147483642,DeviceDsmAction_Scrub = -2147483641,DeviceDsmAction_DrtQuery = -2147483640,DeviceDsmAction_DrtClear = -2147483639,DeviceDsmAction_DrtDisable = -2147483638,};
enum MACRO_EVENT_TRANSPORT {EVENT_TRANSPORT_RESOURCE_POOL = 0x80002329,EVENT_TRANSPORT_RESOURCE_LIMIT = 0x8000232A,EVENT_TRANSPORT_RESOURCE_SPECIFIC = 0x8000232B,EVENT_TRANSPORT_REGISTER_FAILED = 0xC000232C,EVENT_TRANSPORT_BINDING_FAILED = 0xC000232D,EVENT_TRANSPORT_ADAPTER_NOT_FOUND = 0xC000232E,EVENT_TRANSPORT_SET_OID_FAILED = 0xC000232F,EVENT_TRANSPORT_QUERY_OID_FAILED = 0xC0002330,EVENT_TRANSPORT_TRANSFER_DATA = 0x40002331,EVENT_TRANSPORT_TOO_MANY_LINKS = 0x40002332,EVENT_TRANSPORT_BAD_PROTOCOL = 0x40002333,EVENT_IPX_NEW_DEFAULT_TYPE = 0x4000251D,EVENT_IPX_SAP_ANNOUNCE = 0x8000251E,EVENT_IPX_ILLEGAL_CONFIG = 0x8000251F,EVENT_IPX_INTERNAL_NET_INVALID = 0xC0002520,EVENT_IPX_NO_FRAME_TYPES = 0xC0002521,EVENT_IPX_CREATE_DEVICE = 0xC0002522,EVENT_IPX_NO_ADAPTERS = 0xC0002523,EVENT_RPCSS_CREATEPROCESS_FAILURE = 0xC0002710,EVENT_RPCSS_RUNAS_CREATEPROCESS_FAILURE = 0xC0002711,EVENT_RPCSS_LAUNCH_ACCESS_DENIED = 0xC0002712,EVENT_RPCSS_DEFAULT_LAUNCH_ACCESS_DENIED = 0xC0002713,EVENT_RPCSS_RUNAS_CANT_LOGIN = 0xC0002714,EVENT_RPCSS_START_SERVICE_FAILURE = 0xC0002715,EVENT_RPCSS_REMOTE_SIDE_ERROR = 0xC0002716,EVENT_RPCSS_ACTIVATION_ERROR = 0xC0002717,EVENT_RPCSS_REMOTE_SIDE_ERROR_WITH_FILE = 0xC0002718,EVENT_RPCSS_REMOTE_SIDE_UNAVAILABLE = 0xC0002719,EVENT_RPCSS_SERVER_START_TIMEOUT = 0xC000271A,EVENT_RPCSS_SERVER_NOT_RESPONDING = 0xC000271B,EVENT_DCOM_ASSERTION_FAILURE = 0xC000271C,EVENT_DCOM_INVALID_ENDPOINT_DATA = 0xC000271D,EVENT_DCOM_COMPLUS_DISABLED = 0xC000271E,EVENT_RPCSS_STOP_SERVICE_FAILURE = 0xC000272D,EVENT_RPCSS_CREATEDEBUGGERPROCESS_FAILURE = 0xC000272E,EVENT_DNS_CACHE_START_FAILURE_NO_DLL = 0xC0002AF8,EVENT_DNS_CACHE_START_FAILURE_NO_ENTRY = 0xC0002AF9,EVENT_DNS_CACHE_START_FAILURE_NO_CONTROL = 0xC0002AFA,EVENT_DNS_CACHE_START_FAILURE_NO_DONE_EVENT = 0xC0002AFB,EVENT_DNS_CACHE_START_FAILURE_NO_RPC = 0xC0002AFC,EVENT_DNS_CACHE_START_FAILURE_NO_SHUTDOWN_NOTIFY = 0xC0002AFD,EVENT_DNS_CACHE_START_FAILURE_NO_UPDATE = 0xC0002AFE,EVENT_DNS_CACHE_START_FAILURE_LOW_MEMORY = 0xC0002AFF,EVENT_DNS_CACHE_NETWORK_PERF_WARNING = 0x80002B2A,EVENT_DNS_CACHE_UNABLE_TO_REACH_SERVER_WARNING = 0x80002B2B,EVENT_DNSAPI_REGISTRATION_FAILED_TIMEOUT = 0x80002B8E,EVENT_DNSAPI_REGISTRATION_FAILED_SERVERFAIL = 0x80002B8F,EVENT_DNSAPI_REGISTRATION_FAILED_NOTSUPP = 0x80002B90,EVENT_DNSAPI_REGISTRATION_FAILED_REFUSED = 0x80002B91,EVENT_DNSAPI_REGISTRATION_FAILED_SECURITY = 0x80002B92,EVENT_DNSAPI_REGISTRATION_FAILED_OTHER = 0x80002B93,EVENT_DNSAPI_PTR_REGISTRATION_FAILED_TIMEOUT = 0x80002B94,EVENT_DNSAPI_PTR_REGISTRATION_FAILED_SERVERFAIL = 0x80002B95,EVENT_DNSAPI_PTR_REGISTRATION_FAILED_NOTSUPP = 0x80002B96,EVENT_DNSAPI_PTR_REGISTRATION_FAILED_REFUSED = 0x80002B97,EVENT_DNSAPI_PTR_REGISTRATION_FAILED_SECURITY = 0x80002B98,EVENT_DNSAPI_PTR_REGISTRATION_FAILED_OTHER = 0x80002B99,EVENT_DNSAPI_REGISTRATION_FAILED_TIMEOUT_PRIMARY_DN = 0x80002B9A,EVENT_DNSAPI_REGISTRATION_FAILED_SERVERFAIL_PRIMARY_DN = 0x80002B9B,EVENT_DNSAPI_REGISTRATION_FAILED_NOTSUPP_PRIMARY_DN = 0x80002B9C,EVENT_DNSAPI_REGISTRATION_FAILED_REFUSED_PRIMARY_DN = 0x80002B9D,EVENT_DNSAPI_REGISTRATION_FAILED_SECURITY_PRIMARY_DN = 0x80002B9E,EVENT_DNSAPI_REGISTRATION_FAILED_OTHER_PRIMARY_DN = 0x80002B9F,EVENT_DNSAPI_DEREGISTRATION_FAILED_TIMEOUT = 0x80002BAC,EVENT_DNSAPI_DEREGISTRATION_FAILED_SERVERFAIL = 0x80002BAD,EVENT_DNSAPI_DEREGISTRATION_FAILED_NOTSUPP = 0x80002BAE,EVENT_DNSAPI_DEREGISTRATION_FAILED_REFUSED = 0x80002BAF,EVENT_DNSAPI_DEREGISTRATION_FAILED_SECURITY = 0x80002BB0,EVENT_DNSAPI_DEREGISTRATION_FAILED_OTHER = 0x80002BB1,EVENT_DNSAPI_PTR_DEREGISTRATION_FAILED_TIMEOUT = 0x80002BB2,EVENT_DNSAPI_PTR_DEREGISTRATION_FAILED_SERVERFAIL = 0x80002BB3,EVENT_DNSAPI_PTR_DEREGISTRATION_FAILED_NOTSUPP = 0x80002BB4,EVENT_DNSAPI_PTR_DEREGISTRATION_FAILED_REFUSED = 0x80002BB5,EVENT_DNSAPI_PTR_DEREGISTRATION_FAILED_SECURITY = 0x80002BB6,EVENT_DNSAPI_PTR_DEREGISTRATION_FAILED_OTHER = 0x80002BB7,EVENT_DNSAPI_DEREGISTRATION_FAILED_TIMEOUT_PRIMARY_DN = 0x80002BB8,EVENT_DNSAPI_DEREGISTRATION_FAILED_SERVERFAIL_PRIMARY_DN = 0x80002BB9,EVENT_DNSAPI_DEREGISTRATION_FAILED_NOTSUPP_PRIMARY_DN = 0x80002BBA,EVENT_DNSAPI_DEREGISTRATION_FAILED_REFUSED_PRIMARY_DN = 0x80002BBB,EVENT_DNSAPI_DEREGISTRATION_FAILED_SECURITY_PRIMARY_DN = 0x80002BBC,EVENT_DNSAPI_DEREGISTRATION_FAILED_OTHER_PRIMARY_DN = 0x80002BBD,EVENT_DNSAPI_REGISTERED_ADAPTER = 0x40002BC0,EVENT_DNSAPI_REGISTERED_PTR = 0x40002BC1,EVENT_DNSAPI_REGISTERED_ADAPTER_PRIMARY_DN = 0x40002BC2,EVENT_TRK_INTERNAL_ERROR = 0xC00030D4,EVENT_TRK_SERVICE_START_SUCCESS = 0x400030D5,EVENT_TRK_SERVICE_START_FAILURE = 0xC00030D6,EVENT_TRK_SERVICE_CORRUPT_LOG = 0xC00030D7,EVENT_TRK_SERVICE_VOL_QUOTA_EXCEEDED = 0x800030D8,EVENT_TRK_SERVICE_VOLUME_CREATE = 0x400030D9,EVENT_TRK_SERVICE_VOLUME_CLAIM = 0x400030DA,EVENT_TRK_SERVICE_DUPLICATE_VOLIDS = 0x400030DB,EVENT_TRK_SERVICE_MOVE_QUOTA_EXCEEDED = 0x800030DC,EVENT_FRS_ERROR = 0xC00034BC,EVENT_FRS_STARTING = 0x400034BD,EVENT_FRS_STOPPING = 0x400034BE,EVENT_FRS_STOPPED = 0x400034BF,EVENT_FRS_STOPPED_FORCE = 0xC00034C0,EVENT_FRS_STOPPED_ASSERT = 0xC00034C1,EVENT_FRS_ASSERT = 0xC00034C2,EVENT_FRS_VOLUME_NOT_SUPPORTED = 0xC00034C3,EVENT_FRS_LONG_JOIN = 0x800034C4,EVENT_FRS_LONG_JOIN_DONE = 0x800034C5,EVENT_FRS_CANNOT_COMMUNICATE = 0xC00034C6,EVENT_FRS_DATABASE_SPACE = 0xC00034C7,EVENT_FRS_DISK_WRITE_CACHE_ENABLED = 0x800034C8,EVENT_FRS_JET_1414 = 0xC00034C9,EVENT_FRS_SYSVOL_NOT_READY = 0x800034CA,EVENT_FRS_SYSVOL_NOT_READY_PRIMARY = 0x800034CB,EVENT_FRS_SYSVOL_READY = 0x400034CC,EVENT_FRS_ACCESS_CHECKS_DISABLED = 0x800034CD,EVENT_FRS_ACCESS_CHECKS_FAILED_USER = 0x800034CE,EVENT_FRS_ACCESS_CHECKS_FAILED_UNKNOWN = 0xC00034CF,EVENT_FRS_MOVED_PREEXISTING = 0x800034D0,EVENT_FRS_CANNOT_START_BACKUP_RESTORE_IN_PROGRESS = 0xC00034D1,EVENT_FRS_STAGING_AREA_FULL = 0x800034D2,EVENT_FRS_HUGE_FILE = 0x800034D3,EVENT_FRS_CANNOT_CREATE_UUID = 0xC00034D4,EVENT_FRS_NO_DNS_ATTRIBUTE = 0x800034D5,EVENT_FRS_NO_SID = 0xC00034D6,};
enum MACRO_EXCEPTION_SCOPE {EXCEPTION_SCOPE_INVALID = 0x14D,};
enum MACRO_ExecuteSelfTest {ExecuteSelfTest = 8,};
enum MACRO_FILE_DEVICE_USB {FILE_DEVICE_USB = 34,};
enum MACRO_FSCTL_INTEGRITY {FSCTL_INTEGRITY_FLAG_CHECKSUM_ENFORCEMENT_OFF = 1,};
enum MACRO_HBAFCPScsiEntry {HBAFCPScsiEntry_FCPId_ID = 1,HBAFCPScsiEntry_Luid_ID = 2,HBAFCPScsiEntry_ScsiId_ID = 3,};
enum MACRO_INJECT_HARDWARE {INJECT_HARDWARE_ERROR_IN_ErrorType_ID = 1,INJECT_HARDWARE_ERROR_IN_Parameter1_ID = 2,INJECT_HARDWARE_ERROR_IN_Parameter2_ID = 3,INJECT_HARDWARE_ERROR_IN_Parameter3_ID = 4,INJECT_HARDWARE_ERROR_IN_Parameter4_ID = 5,INJECT_HARDWARE_ERROR_OUT_Status_ID = 6,};
enum MACRO_IOCTL_CDROM_SUB {IOCTL_CDROM_SUB_Q_CHANNEL = 0x0,IOCTL_CDROM_CURRENT_POSITION = 0x1,IOCTL_CDROM_MEDIA_CATALOG = 0x2,IOCTL_CDROM_TRACK_ISRC = 0x3,};
enum MACRO_IOCTL_SCSI_BASE {IOCTL_SCSI_BASE = 4,IOCTL_SCSI_PASS_THROUGH = 315396,IOCTL_SCSI_MINIPORT = 315400,IOCTL_SCSI_GET_INQUIRY_DATA = 266252,IOCTL_SCSI_GET_CAPABILITIES = 266256,IOCTL_SCSI_PASS_THROUGH_DIRECT = 315412,IOCTL_SCSI_GET_ADDRESS = 266264,IOCTL_SCSI_RESCAN_BUS = 266268,IOCTL_SCSI_GET_DUMP_POINTERS = 266272,IOCTL_SCSI_FREE_DUMP_POINTERS = 266276,IOCTL_IDE_PASS_THROUGH = 315432,IOCTL_ATA_PASS_THROUGH = 315436,IOCTL_ATA_PASS_THROUGH_DIRECT = 315440,IOCTL_ATA_MINIPORT = 315444,IOCTL_MINIPORT_PROCESS_SERVICE_IRP = 315448,IOCTL_MPIO_PASS_THROUGH_PATH = 315452,IOCTL_MPIO_PASS_THROUGH_PATH_DIRECT = 315456,IOCTL_SCSI_PASS_THROUGH_EX = 315460,IOCTL_SCSI_PASS_THROUGH_DIRECT_EX = 315464,IOCTL_MPIO_PASS_THROUGH_PATH_EX = 315468,IOCTL_MPIO_PASS_THROUGH_PATH_DIRECT_EX = 315472,IOCTL_SCSI_MINIPORT_NVCACHE = 1771008,};
enum MACRO_IOCTL_SMARTCARD {IOCTL_SMARTCARD_POWER = 3211268,IOCTL_SMARTCARD_GET_ATTRIBUTE = 3211272,IOCTL_SMARTCARD_SET_ATTRIBUTE = 3211276,IOCTL_SMARTCARD_CONFISCATE = 3211280,IOCTL_SMARTCARD_TRANSMIT = 3211284,IOCTL_SMARTCARD_EJECT = 3211288,IOCTL_SMARTCARD_SWALLOW = 3211292,IOCTL_SMARTCARD_IS_PRESENT = 3211304,IOCTL_SMARTCARD_IS_ABSENT = 3211308,IOCTL_SMARTCARD_SET_PROTOCOL = 3211312,IOCTL_SMARTCARD_GET_STATE = 3211320,IOCTL_SMARTCARD_GET_LAST_ERROR = 3211324,IOCTL_SMARTCARD_GET_PERF_CNTR = 3211328,};
enum MACRO_IOCTL_TDI_MAGIC {IOCTL_TDI_MAGIC_BULLET = 0x2101FF,};
enum MACRO_IOCTL_TDI_QUERY {IOCTL_TDI_QUERY_DIRECT_SEND_HANDLER = 0x210203,IOCTL_TDI_QUERY_DIRECT_SENDDG_HANDLER = 0x210207,};
enum MACRO_IRQL_UNEXPECTED {IRQL_UNEXPECTED_VALUE = 0xC8,};
enum MACRO_ISCSI_Supported {ISCSI_Supported_LB_Policies_LoadBalancePolicy_ID = 2,ISCSI_Supported_LB_Policies_iSCSI_PathCount_ID = 3,ISCSI_Supported_LB_Policies_iSCSI_Paths_ID = 4,};
enum MACRO_KERNEL_SECURITY {KERNEL_SECURITY_CHECK_FAILURE = 0x139,KERNEL_MODE_HEAP_CORRUPTION = 0x13A,};
enum MACRO_KSAUDDECOUTMODE {KSAUDDECOUTMODE_STEREO_ANALOG = 0x1,KSAUDDECOUTMODE_PCM_51 = 0x2,KSAUDDECOUTMODE_SPDIFF = 0x4,};
enum MACRO_KSAUDIO_QUALITY {KSAUDIO_QUALITY_WORST = 0x0,KSAUDIO_QUALITY_PC = 0x1,KSAUDIO_QUALITY_BASIC = 0x2,KSAUDIO_QUALITY_ADVANCED = 0x3,KSAUDIO_CPU_RESOURCES_NOT_HOST_CPU = 0x0,KSAUDIO_CPU_RESOURCES_HOST_CPU = 0x7FFFFFFF,KSAUDIO_SPEAKER_DIRECTOUT = 0x0,KSAUDIO_SPEAKER_MONO = 0x4,KSAUDIO_SPEAKER_STEREO = 0x3,KSAUDIO_SPEAKER_QUAD = 0x33,KSAUDIO_SPEAKER_SURROUND = 0x107,KSAUDIO_SPEAKER_5POINT1 = 0x3F,KSAUDIO_SPEAKER_7POINT1 = 0xFF,KSAUDIO_SPEAKER_5POINT1_SURROUND = 0x60F,KSAUDIO_SPEAKER_7POINT1_SURROUND = 0x63F,KSAUDIO_SPEAKER_5POINT1_BACK = 0x3F,KSAUDIO_SPEAKER_7POINT1_WIDE = 0xFF,KSAUDIO_SPEAKER_GROUND_FRONT_LEFT = 0x1,KSAUDIO_SPEAKER_GROUND_FRONT_CENTER = 0x4,KSAUDIO_SPEAKER_GROUND_FRONT_RIGHT = 0x2,KSAUDIO_SPEAKER_GROUND_REAR_LEFT = 0x10,KSAUDIO_SPEAKER_GROUND_REAR_RIGHT = 0x20,KSAUDIO_SPEAKER_TOP_MIDDLE = 0x800,KSAUDIO_SPEAKER_SUPER_WOOFER = 0x8,};
enum MACRO_KSRELATIVEEVENT {KSRELATIVEEVENT_FLAG_HANDLE = 0x1,KSRELATIVEEVENT_FLAG_POINTER = 0x2,};
enum MACRO_LINEADDRESSMODE {LINEADDRESSMODE_ADDRESSID = 0x1,LINEADDRESSMODE_DIALABLEADDR = 0x2,};
enum MACRO_LINEADDRFEATURE {LINEADDRFEATURE_FORWARD = 0x1,LINEADDRFEATURE_MAKECALL = 0x2,LINEADDRFEATURE_PICKUP = 0x4,LINEADDRFEATURE_SETMEDIACONTROL = 0x8,LINEADDRFEATURE_SETTERMINAL = 0x10,LINEADDRFEATURE_SETUPCONF = 0x20,LINEADDRFEATURE_UNCOMPLETECALL = 0x40,LINEADDRFEATURE_UNPARK = 0x80,};
enum MACRO_LINECALLFEATURE {LINECALLFEATURE_ACCEPT = 0x1,LINECALLFEATURE_ADDTOCONF = 0x2,LINECALLFEATURE_ANSWER = 0x4,LINECALLFEATURE_BLINDTRANSFER = 0x8,LINECALLFEATURE_COMPLETECALL = 0x10,LINECALLFEATURE_COMPLETETRANSF = 0x20,LINECALLFEATURE_DIAL = 0x40,LINECALLFEATURE_DROP = 0x80,LINECALLFEATURE_GATHERDIGITS = 0x100,LINECALLFEATURE_GENERATEDIGITS = 0x200,LINECALLFEATURE_GENERATETONE = 0x400,LINECALLFEATURE_HOLD = 0x800,LINECALLFEATURE_MONITORDIGITS = 0x1000,LINECALLFEATURE_MONITORMEDIA = 0x2000,LINECALLFEATURE_MONITORTONES = 0x4000,LINECALLFEATURE_PARK = 0x8000,LINECALLFEATURE_PREPAREADDCONF = 0x10000,LINECALLFEATURE_REDIRECT = 0x20000,LINECALLFEATURE_REMOVEFROMCONF = 0x40000,LINECALLFEATURE_SECURECALL = 0x80000,LINECALLFEATURE_SENDUSERUSER = 0x100000,LINECALLFEATURE_SETCALLPARAMS = 0x200000,LINECALLFEATURE_SETMEDIACONTROL = 0x400000,LINECALLFEATURE_SETTERMINAL = 0x800000,LINECALLFEATURE_SETUPCONF = 0x1000000,LINECALLFEATURE_SETUPTRANSFER = 0x2000000,LINECALLFEATURE_SWAPHOLD = 0x4000000,LINECALLFEATURE_UNHOLD = 0x8000000,LINECALLFEATURE_RELEASEUSERUSERINFO = 0x10000000,};
enum MACRO_LINECALLPARTYID {LINECALLPARTYID_BLOCKED = 0x1,LINECALLPARTYID_OUTOFAREA = 0x2,LINECALLPARTYID_NAME = 0x4,LINECALLPARTYID_ADDRESS = 0x8,LINECALLPARTYID_PARTIAL = 0x10,LINECALLPARTYID_UNKNOWN = 0x20,LINECALLPARTYID_UNAVAIL = 0x40,};
enum MACRO_LINEDEVCAPFLAGS {LINEDEVCAPFLAGS_CROSSADDRCONF = 0x1,LINEDEVCAPFLAGS_HIGHLEVCOMP = 0x2,LINEDEVCAPFLAGS_LOWLEVCOMP = 0x4,LINEDEVCAPFLAGS_MEDIACONTROL = 0x8,LINEDEVCAPFLAGS_MULTIPLEADDR = 0x10,LINEDEVCAPFLAGS_CLOSEDROP = 0x20,LINEDEVCAPFLAGS_DIALBILLING = 0x40,LINEDEVCAPFLAGS_DIALQUIET = 0x80,LINEDEVCAPFLAGS_DIALDIALTONE = 0x100,};
enum MACRO_LINEFORWARDMODE {LINEFORWARDMODE_UNCOND = 0x1,LINEFORWARDMODE_UNCONDINTERNAL = 0x2,LINEFORWARDMODE_UNCONDEXTERNAL = 0x4,LINEFORWARDMODE_UNCONDSPECIFIC = 0x8,LINEFORWARDMODE_BUSY = 0x10,LINEFORWARDMODE_BUSYINTERNAL = 0x20,LINEFORWARDMODE_BUSYEXTERNAL = 0x40,LINEFORWARDMODE_BUSYSPECIFIC = 0x80,LINEFORWARDMODE_NOANSW = 0x100,LINEFORWARDMODE_NOANSWINTERNAL = 0x200,LINEFORWARDMODE_NOANSWEXTERNAL = 0x400,LINEFORWARDMODE_NOANSWSPECIFIC = 0x800,LINEFORWARDMODE_BUSYNA = 0x1000,LINEFORWARDMODE_BUSYNAINTERNAL = 0x2000,LINEFORWARDMODE_BUSYNAEXTERNAL = 0x4000,LINEFORWARDMODE_BUSYNASPECIFIC = 0x8000,};
enum MACRO_LINEREQUESTMODE {LINEREQUESTMODE_MAKECALL = 0x1,LINEREQUESTMODE_MEDIACALL = 0x2,LINEREQUESTMODE_DROP = 0x4,};
enum MACRO_LINESPECIALINFO {LINESPECIALINFO_NOCIRCUIT = 0x1,LINESPECIALINFO_CUSTIRREG = 0x2,LINESPECIALINFO_REORDER = 0x4,LINESPECIALINFO_UNKNOWN = 0x8,LINESPECIALINFO_UNAVAIL = 0x10,};
enum MACRO_LINETERMSHARING {LINETERMSHARING_PRIVATE = 0x1,LINETERMSHARING_SHAREDEXCL = 0x2,LINETERMSHARING_SHAREDCONF = 0x4,};
enum MACRO_MAXIMUM_ALLOWED {MAXIMUM_ALLOWED = 0x2000000,};
enum MACRO_MAXIMUM_CHANGER {MAXIMUM_CHANGER_INQUIRY_DATA = 252,};
enum MACRO_MAXIMUM_PATHLEN {MAXIMUM_PATHLEN_LANMAN12 = 260,MAXIMUM_PATHLEN_CORE = 128,MAXIMUM_COMPONENT_LANMAN12 = 254,MAXIMUM_COMPONENT_CORE = 12,};
enum MACRO_MAXIMUM_REPARSE {MAXIMUM_REPARSE_DATA_BUFFER_SIZE = 16384,};
enum MACRO_MAXIMUM_RETRIES {MAXIMUM_RETRIES = 4,};
enum MACRO_MAX_AVC_OPERAND {MAX_AVC_OPERAND_BYTES = 509,};
enum MACRO_MAX_TRANSACTION {MAX_TRANSACTION_DESCRIPTION_LENGTH = 64,MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH = 64,};
enum MACRO_MPIO_EventEntry {MPIO_EventEntry_TimeStamp_ID = 1,MPIO_FATAL_ERROR = 1,MPIO_ERROR = 2,MPIO_WARNING = 3,MPIO_INFORMATION = 4,MPIO_EventEntry_Severity_ID = 2,MPIO_EventEntry_Component_ID = 3,MPIO_EventEntry_EventDescription_ID = 4,};
enum MACRO_OID_DOT11_FLUSH {OID_DOT11_FLUSH_BSS_LIST = 234946938,OID_DOT11_POWER_MGMT_REQUEST = 234946939,};
enum MACRO_OID_DOT11_MULTI {OID_DOT11_MULTI_DOMAIN_CAPABILITY_IMPLEMENTED = 218170186,OID_DOT11_MULTI_DOMAIN_CAPABILITY_ENABLED = 218170187,OID_DOT11_COUNTRY_STRING = 218170188,OID_DOT11_MULTI_DOMAIN_CAPABILITY = 218170189,OID_DOT11_EHCC_PRIME_RADIX = 218170190,OID_DOT11_EHCC_NUMBER_OF_CHANNELS_FAMILY_INDEX = 218170191,OID_DOT11_EHCC_CAPABILITY_IMPLEMENTED = 218170192,OID_DOT11_EHCC_CAPABILITY_ENABLED = 218170193,OID_DOT11_HOP_ALGORITHM_ADOPTED = 218170194,OID_DOT11_RANDOM_TABLE_FLAG = 218170195,OID_DOT11_NUMBER_OF_HOPPING_SETS = 218170196,OID_DOT11_HOP_MODULUS = 218170197,OID_DOT11_HOP_OFFSET = 218170198,OID_DOT11_HOPPING_PATTERN = 218170199,OID_DOT11_RANDOM_TABLE_FIELD_NUMBER = 218170200,OID_DOT11_WPA_TSC = 218170201,OID_DOT11_RSSI_RANGE = 218170202,OID_DOT11_RF_USAGE = 218170203,OID_DOT11_NIC_SPECIFIC_EXTENSION = 218170204,OID_DOT11_AP_JOIN_REQUEST = 218170205,OID_DOT11_ERP_PBCC_OPTION_IMPLEMENTED = 218170206,OID_DOT11_ERP_PBCC_OPTION_ENABLED = 218170207,OID_DOT11_DSSS_OFDM_OPTION_IMPLEMENTED = 218170208,OID_DOT11_DSSS_OFDM_OPTION_ENABLED = 218170209,OID_DOT11_SHORT_SLOT_TIME_OPTION_IMPLEMENTED = 218170210,OID_DOT11_SHORT_SLOT_TIME_OPTION_ENABLED = 218170211,OID_DOT11_MAX_MAC_ADDRESS_STATES = 218170212,OID_DOT11_RECV_SENSITIVITY_LIST = 218170213,OID_DOT11_WME_IMPLEMENTED = 218170214,OID_DOT11_WME_ENABLED = 218170215,OID_DOT11_WME_AC_PARAMETERS = 218170216,OID_DOT11_WME_UPDATE_IE = 218170217,OID_DOT11_QOS_TX_QUEUES_SUPPORTED = 218170218,OID_DOT11_QOS_TX_DURATION = 218170219,OID_DOT11_QOS_TX_MEDIUM_TIME = 218170220,OID_DOT11_SUPPORTED_OFDM_FREQUENCY_LIST = 218170221,OID_DOT11_SUPPORTED_DSSS_CHANNEL_LIST = 218170222,OID_DOT11_AUTO_CONFIG_ENABLED = 234946936,};
enum MACRO_OID_DOT11_POWER {OID_DOT11_POWER_MGMT_MODE_AUTO_ENABLED = 0xE070101,};
enum MACRO_OID_DOT11_SHORT {OID_DOT11_SHORT_PREAMBLE_OPTION_IMPLEMENTED = 218170181,OID_DOT11_PBCC_OPTION_IMPLEMENTED = 218170182,OID_DOT11_CHANNEL_AGILITY_PRESENT = 218170183,OID_DOT11_CHANNEL_AGILITY_ENABLED = 218170184,OID_DOT11_HR_CCA_MODE_SUPPORTED = 218170185,};
enum MACRO_OID_DOT11_START {OID_DOT11_START_REQUEST = 218170126,OID_DOT11_UPDATE_IE = 218170127,OID_DOT11_RESET_REQUEST = 218170128,OID_DOT11_NIC_POWER_STATE = 218170129,OID_DOT11_OPTIONAL_CAPABILITY = 218170130,OID_DOT11_CURRENT_OPTIONAL_CAPABILITY = 218170131,OID_DOT11_STATION_ID = 218170132,OID_DOT11_MEDIUM_OCCUPANCY_LIMIT = 218170133,OID_DOT11_CF_POLLABLE = 218170134,OID_DOT11_CFP_PERIOD = 218170135,OID_DOT11_CFP_MAX_DURATION = 218170136,OID_DOT11_POWER_MGMT_MODE = 218170137,};
enum MACRO_PROCESSOR_LOCAL {PROCESSOR_LOCAL_X2APIC = 9,};
enum MACRO_PROCESSOR_STATE {PROCESSOR_STATE_TYPE_PERFORMANCE = 0x1,PROCESSOR_STATE_TYPE_THROTTLE = 0x2,};
enum MACRO_QUERYDIBSUPPORT {QUERYDIBSUPPORT = 3073,};
enum MACRO_READ_ATTRIBUTES {READ_ATTRIBUTES = 0xD0,READ_THRESHOLDS = 0xD1,};
enum MACRO_REGISTRY_FILTER {REGISTRY_FILTER_DRIVER_EXCEPTION = 0x135,};
enum MACRO_RESOURCEMANAGER {RESOURCEMANAGER_QUERY_INFORMATION = 0x1,RESOURCEMANAGER_SET_INFORMATION = 0x2,RESOURCEMANAGER_RECOVER = 0x4,RESOURCEMANAGER_ENLIST = 0x8,RESOURCEMANAGER_GET_NOTIFICATION = 0x10,RESOURCEMANAGER_REGISTER_PROTOCOL = 0x20,RESOURCEMANAGER_COMPLETE_PROPAGATION = 0x40,RESOURCEMANAGER_GENERIC_READ = 0x120001,RESOURCEMANAGER_GENERIC_WRITE = 0x12007E,RESOURCEMANAGER_GENERIC_EXECUTE = 0x12005C,RESOURCEMANAGER_ALL_ACCESS = 0x1F007F,};
enum MACRO_RETURN_RESERVED {RETURN_RESERVED_PARAMETER = 0x80,};
enum MACRO_RegisteredGuids {RegisteredGuids_GuidType_ID = 1,RegisteredGuids_LoggerId_ID = 2,RegisteredGuids_EnableLevel_ID = 3,RegisteredGuids_EnableFlags_ID = 4,RegisteredGuids_IsEnabled_ID = 5,};
enum MACRO_RemoveTarget_IN {RemoveTarget_IN_HbaPortWWN_ID = 1,RemoveTarget_IN_DiscoveredPortWWN_ID = 2,RemoveTarget_IN_AllTargets_ID = 3,RemoveTarget_OUT_HBAStatus_ID = 4,};
enum MACRO_ResetStatistics {ResetStatistics = 1,};
enum MACRO_SECURITY_NATIVE {SECURITY_NATIVE_DREP = 0x10,SECURITY_NETWORK_DREP = 0x0,};
enum MACRO_STATUS_CONTINUE {STATUS_CONTINUE_COMPLETION = 0,};
enum MACRO_STATUS_ENDPOINT {STATUS_ENDPOINT_CLOSED = 0xC0980001,STATUS_DISCONNECTED = 0xC0980002,STATUS_SERVER_ALREADY_STARTED = 0xC0980004,STATUS_SERVER_NOT_STARTED = 0xC0980005,STATUS_OPLOCK_BREAK_UNDERWAY = 0xC0980006,STATUS_NONEXISTENT_NET_NAME = 0xC0980008,};
enum MACRO_STATUS_SEVERITY {STATUS_SEVERITY_WARNING = 0x2,STATUS_SEVERITY_SUCCESS = 0x0,STATUS_SEVERITY_INFORMATIONAL = 0x1,STATUS_SEVERITY_ERROR = 0x3,STATUS_SUCCESS = 0x0,STATUS_WAIT_1 = 0x1,STATUS_WAIT_2 = 0x2,STATUS_WAIT_3 = 0x3,STATUS_WAIT_63 = 0x3F,STATUS_ABANDONED = 0x80,STATUS_ABANDONED_WAIT_0 = 0x80,STATUS_ABANDONED_WAIT_63 = 0xBF,STATUS_USER_APC = 0xC0,STATUS_KERNEL_APC = 0x100,STATUS_ALERTED = 0x101,STATUS_TIMEOUT = 0x102,STATUS_PENDING = 0x103,STATUS_REPARSE = 0x104,STATUS_MORE_ENTRIES = 0x105,STATUS_NOT_ALL_ASSIGNED = 0x106,STATUS_SOME_NOT_MAPPED = 0x107,STATUS_OPLOCK_BREAK_IN_PROGRESS = 0x108,STATUS_VOLUME_MOUNTED = 0x109,STATUS_RXACT_COMMITTED = 0x10A,STATUS_NOTIFY_CLEANUP = 0x10B,STATUS_NOTIFY_ENUM_DIR = 0x10C,STATUS_NO_QUOTAS_FOR_ACCOUNT = 0x10D,STATUS_PRIMARY_TRANSPORT_CONNECT_FAILED = 0x10E,STATUS_PAGE_FAULT_TRANSITION = 0x110,STATUS_PAGE_FAULT_DEMAND_ZERO = 0x111,STATUS_PAGE_FAULT_COPY_ON_WRITE = 0x112,STATUS_PAGE_FAULT_GUARD_PAGE = 0x113,STATUS_PAGE_FAULT_PAGING_FILE = 0x114,STATUS_CACHE_PAGE_LOCKED = 0x115,STATUS_CRASH_DUMP = 0x116,STATUS_BUFFER_ALL_ZEROS = 0x117,STATUS_REPARSE_OBJECT = 0x118,STATUS_RESOURCE_REQUIREMENTS_CHANGED = 0x119,STATUS_TRANSLATION_COMPLETE = 0x120,STATUS_DS_MEMBERSHIP_EVALUATED_LOCALLY = 0x121,STATUS_NOTHING_TO_TERMINATE = 0x122,STATUS_PROCESS_NOT_IN_JOB = 0x123,STATUS_PROCESS_IN_JOB = 0x124,STATUS_VOLSNAP_HIBERNATE_READY = 0x125,STATUS_FSFILTER_OP_COMPLETED_SUCCESSFULLY = 0x126,STATUS_INTERRUPT_VECTOR_ALREADY_CONNECTED = 0x127,STATUS_INTERRUPT_STILL_CONNECTED = 0x128,STATUS_PROCESS_CLONED = 0x129,STATUS_FILE_LOCKED_WITH_ONLY_READERS = 0x12A,STATUS_FILE_LOCKED_WITH_WRITERS = 0x12B,STATUS_VALID_IMAGE_HASH = 0x12C,STATUS_RESOURCEMANAGER_READ_ONLY = 0x202,STATUS_RING_PREVIOUSLY_EMPTY = 0x210,STATUS_RING_PREVIOUSLY_FULL = 0x211,STATUS_RING_PREVIOUSLY_ABOVE_QUOTA = 0x212,STATUS_RING_NEWLY_EMPTY = 0x213,STATUS_RING_SIGNAL_OPPOSITE_ENDPOINT = 0x214,STATUS_OPLOCK_SWITCHED_TO_NEW_HANDLE = 0x215,STATUS_OPLOCK_HANDLE_CLOSED = 0x216,STATUS_WAIT_FOR_OPLOCK = 0x367,};
enum MACRO_STORAGE_ADDRESS {STORAGE_ADDRESS_TYPE_BTL8 = 0,};
enum MACRO_STORAGE_OFFLOAD {STORAGE_OFFLOAD_MAX_TOKEN_LENGTH = 512,STORAGE_OFFLOAD_TOKEN_ID_LENGTH = 504,STORAGE_OFFLOAD_TOKEN_TYPE_ZERO_DATA = -65535,STORAGE_OFFLOAD_READ_RANGE_TRUNCATED = 1,STORAGE_OFFLOAD_WRITE_RANGE_TRUNCATED = 1,STORAGE_OFFLOAD_TOKEN_INVALID = 2,};
enum MACRO_SYNCHRONIZATION {SYNCHRONIZATION_EVENT = 0,NOTIFICATION_EVENT = 1,};
enum MACRO_SYSTEM_SUPPORTS {SYSTEM_SUPPORTS_C1_BIT = 2,SYSTEM_SUPPORTS_C1 = 4,};
enum MACRO_TIMER_TOLERABLE {TIMER_TOLERABLE_DELAY_BITS = 6,TIMER_EXPIRED_INDEX_BITS = 6,TIMER_PROCESSOR_INDEX_BITS = 5,};
enum MACRO_VIDEOAPIVERSION {VIDEOAPIVERSION = 4,};
enum MACRO_WHEA_MEMERRTYPE {WHEA_MEMERRTYPE_UNKNOWN = 0x0,WHEA_MEMERRTYPE_NOERROR = 0x1,WHEA_MEMERRTYPE_SINGLEBITECC = 0x2,WHEA_MEMERRTYPE_MULTIBITECC = 0x3,WHEA_MEMERRTYPE_SINGLESYMCHIPKILL = 0x4,WHEA_MEMERRTYPE_MULTISYMCHIPKILL = 0x5,WHEA_MEMERRTYPE_MASTERABORT = 0x6,WHEA_MEMERRTYPE_TARGETABORT = 0x7,WHEA_MEMERRTYPE_PARITYERROR = 0x8,WHEA_MEMERRTYPE_WATCHDOGTIMEOUT = 0x9,WHEA_MEMERRTYPE_INVALIDADDRESS = 0xA,WHEA_MEMERRTYPE_MIRRORBROKEN = 0xB,WHEA_MEMERRTYPE_MEMORYSPARING = 0xC,};
enum MACRO_WriteLogSectors {WriteLogSectors = 7,};
typedef struct _MEMORY_COOLING_REGION MEMORY_COOLING_REGION;
typedef struct _MODE_MEDIUM_PART_PAGE MODE_MEDIUM_PART_PAGE;
typedef struct _MODE_PARAMETER_HEADER MODE_PARAMETER_HEADER;
typedef struct _MOUNTMGR_MOUNT_POINTS MOUNTMGR_MOUNT_POINTS;
typedef struct _MOUNTMGR_VOLUME_PATHS MOUNTMGR_VOLUME_PATHS;
typedef struct _C0C97988B2B1541C7D96E5C8ECD89FD1 MOVE_FILE_RECORD_DATA;
typedef struct _MPIO_DISK_HEALTH_INFO MPIO_DISK_HEALTH_INFO;
typedef struct _MPIO_PATH_HEALTH_INFO MPIO_PATH_HEALTH_INFO;
typedef struct _MPIO_PATH_INFORMATION MPIO_PATH_INFORMATION;
typedef struct _MSFC_NPIVCapabilities MSFC_NPIVCapabilities;
typedef struct _MSMCAInfo_RawCMCEvent MSMCAInfo_RawCMCEvent;
typedef struct _MSMCAInfo_RawMCAEvent MSMCAInfo_RawMCAEvent;
typedef struct _MSNdis_80211_BSSIList MSNdis_80211_BSSIList;
typedef struct _MSNdis_FddiFramesLost MSNdis_FddiFramesLost;
typedef struct _MSNdis_FddiLemRejects MSNdis_FddiLemRejects;
typedef struct _MSNdis_HardwareStatus MSNdis_HardwareStatus;
typedef struct _MSNdis_LinkParameters MSNdis_LinkParameters;
typedef struct _MSNdis_MediaSupported MSNdis_MediaSupported;
typedef struct _MSNdis_NetworkAddress MSNdis_NetworkAddress;
typedef struct _MSNdis_PMCapabilities MSNdis_PMCapabilities;
typedef struct _MSNdis_StatisticsInfo MSNdis_StatisticsInfo;
typedef struct _MSNdis_TransmitsError MSNdis_TransmitsError;
typedef struct _MSNdis_VlanIdentifier MSNdis_VlanIdentifier;
typedef struct _MSNdis_WmiEnumAdapter MSNdis_WmiEnumAdapter;
typedef struct _MSV1_0_NTLM3_RESPONSE MSV1_0_NTLM3_RESPONSE;
typedef struct _MSVerifierIrpLogEntry MSVerifierIrpLogEntry;
typedef struct _MSiSCSI_QueryLBPolicy MSiSCSI_QueryLBPolicy;
typedef struct _NDIS_802_11_FIXED_IEs NDIS_802_11_FIXED_IEs;
typedef struct _NDIS_FILTER_INTERFACE NDIS_FILTER_INTERFACE;
typedef struct _NDIS_IPSEC_OFFLOAD_V1 NDIS_IPSEC_OFFLOAD_V1;
typedef struct _NDIS_IPSEC_OFFLOAD_V2 NDIS_IPSEC_OFFLOAD_V2;
typedef struct _NDIS_IRDA_PACKET_INFO NDIS_IRDA_PACKET_INFO;
typedef struct _NDIS_PNP_CAPABILITIES NDIS_PNP_CAPABILITIES;
typedef union _NDIS_RW_LOCK_REFCOUNT NDIS_RW_LOCK_REFCOUNT;
typedef struct _NDIS_STATISTICS_VALUE NDIS_STATISTICS_VALUE;
typedef struct _NDIS_TAPI_SECURE_CALL NDIS_TAPI_SECURE_CALL;
typedef struct _NDIS_WMI_ENUM_ADAPTER NDIS_WMI_ENUM_ADAPTER;
typedef struct _NDIS_WMI_EVENT_HEADER NDIS_WMI_EVENT_HEADER;
typedef struct _NDIS_WWAN_DEVICE_CAPS NDIS_WWAN_DEVICE_CAPS;
typedef struct _NDIS_WWAN_DRIVER_CAPS NDIS_WWAN_DRIVER_CAPS;
typedef struct _NDIS_WWAN_RADIO_STATE NDIS_WWAN_RADIO_STATE;
typedef struct _NDIS_WWAN_SMS_RECEIVE NDIS_WWAN_SMS_RECEIVE;
typedef struct _NDK_LISTENER_DISPATCH NDK_LISTENER_DISPATCH;
typedef struct nd_opt_prefix_info ND_OPTION_PREFIX_INFO;
typedef struct _NET_IF_RCV_ADDRESS_LH NET_IF_RCV_ADDRESS_LH;
typedef struct _4B3A6E5AEDB605283F91028F6AB24B20 NLB_FILTER_HOOK_TABLE;
typedef struct _NL_PATH_BANDWIDTH_ROD NL_PATH_BANDWIDTH_ROD;
typedef struct _NODE_DEVICE_EXTENSION NODE_DEVICE_EXTENSION;
typedef struct _NOTIFICATION_INFO_W2K NOTIFICATION_INFO_W2K;
typedef struct _NOTIFICATION_INFO_WXP NOTIFICATION_INFO_WXP;
typedef struct _NPAGED_LOOKASIDE_LIST NPAGED_LOOKASIDE_LIST;
typedef struct _NVCACHE_REQUEST_BLOCK NVCACHE_REQUEST_BLOCK;
typedef struct _PARALLEL_1284_COMMAND PARALLEL_1284_COMMAND;
typedef struct _PARALLEL_PARCHIP_INFO PARALLEL_PARCHIP_INFO;
typedef struct _PARALLEL_WMI_LOG_INFO PARALLEL_WMI_LOG_INFO;
typedef struct _PARTITION_INFORMATION PARTITION_INFORMATION;
typedef struct _PAR_QUERY_INFORMATION PAR_QUERY_INFORMATION;
typedef struct _ATM_MEDIA_PARAMETERS *PATM_MEDIA_PARAMETERS;
typedef struct _BANDWIDTH_ALLOCATION *PBANDWIDTH_ALLOCATION;
typedef struct _BDA_CAS_CLOSEMMIDATA *PBDA_CAS_CLOSEMMIDATA;
typedef struct _BDA_ETHERNET_ADDRESS *PBDA_ETHERNET_ADDRESS;
typedef struct _BDA_PROGRAM_PID_LIST *PBDA_PROGRAM_PID_LIST;
typedef struct _BDA_SCAN_CAPABILTIES *PBDA_SCAN_CAPABILTIES;
typedef struct _BDA_TUNER_TUNERSTATE *PBDA_TUNER_TUNERSTATE;
typedef struct _BOOTDISK_INFORMATION *PBOOTDISK_INFORMATION;
typedef struct _BTH_L2CAP_EVENT_INFO *PBTH_L2CAP_EVENT_INFO;
typedef struct _BUS_INTERFACE_SWENUM *PBUS_INTERFACE_SWENUM;
typedef struct _CDAUDIO_CONTROL_PAGE *PCDAUDIO_CONTROL_PAGE;
typedef struct _CDROM_EXCLUSIVE_LOCK *PCDROM_EXCLUSIVE_LOCK;
typedef struct _CDROM_PLAY_AUDIO_MSF *PCDROM_PLAY_AUDIO_MSF;
typedef struct _CDROM_SEEK_AUDIO_MSF *PCDROM_SEEK_AUDIO_MSF;
typedef struct _CDVD_REPORT_ASF_DATA *PCDVD_REPORT_ASF_DATA;
typedef  struct _FLT_RELATED_OBJECTS *PCFLT_RELATED_OBJECTS;
typedef struct _CHANGER_ELEMENT_LIST *PCHANGER_ELEMENT_LIST;
typedef struct _CHANGER_PRODUCT_DATA *PCHANGER_PRODUCT_DATA;
typedef struct _CHANGER_SET_POSITION *PCHANGER_SET_POSITION;
typedef struct _CIP_DATA_FORMAT_VER2 *PCIP_DATA_FORMAT_VER2;
typedef struct _CIP_DATA_FORMAT_VER3 *PCIP_DATA_FORMAT_VER3;
typedef struct _PCI_AGP_ISOCH_COMMAND PCI_AGP_ISOCH_COMMAND;
typedef struct _PCI_FIRMWARE_BUS_CAPS PCI_FIRMWARE_BUS_CAPS;
typedef struct _PCMCIA_SOCKET_REQUEST PCMCIA_SOCKET_REQUEST;
typedef struct _CM_SONIC_DEVICE_DATA *PCM_SONIC_DEVICE_DATA;
typedef struct _CM_VIDEO_DEVICE_DATA *PCM_VIDEO_DEVICE_DATA;
typedef struct _CO_TAPI_ADDRESS_CAPS *PCO_TAPI_ADDRESS_CAPS;
typedef struct _CreateVirtualPort_IN *PCreateVirtualPort_IN;
typedef struct _349EB074D4E400CE7F81D3BDE9131585 *PDEBUG_DEVICE_ADDRESS;
typedef struct _DMA_TRANSFER_INFO_V1 *PDMA_TRANSFER_INFO_V1;
typedef struct _DOT11_COUNTERS_ENTRY *PDOT11_COUNTERS_ENTRY;
typedef struct _DOT11_MAC_PARAMETERS *PDOT11_MAC_PARAMETERS;
typedef struct _DOT11_PEER_INFO_LIST *PDOT11_PEER_INFO_LIST;
typedef struct DOT11_PHY_ATTRIBUTES *PDOT11_PHY_ATTRIBUTES;
typedef struct _DOT11_WFD_ATTRIBUTES *PDOT11_WFD_ATTRIBUTES;
typedef struct _DOT4_DC_DESTROY_DATA *PDOT4_DC_DESTROY_DATA;
typedef struct _DSM_QueryLBPolicy_V2 *PDSM_QueryLBPolicy_V2;
typedef struct _DXGK_TIMED_OPERATION *PDXGK_TIMED_OPERATION;
typedef struct _EISA_PORT_DESCRIPTOR *PEISA_PORT_DESCRIPTOR;
typedef struct _ENABLE_DISABLE_FP_IN *PENABLE_DISABLE_FP_IN;
typedef struct _EXECUTE_SELF_TEST_IN *PEXECUTE_SELF_TEST_IN;
typedef struct _FILE_ALL_INFORMATION *PFILE_ALL_INFORMATION;
typedef struct _FILE_OBJECTID_BUFFER *PFILE_OBJECTID_BUFFER;
typedef struct _FILE_REFERENCE_RANGE *PFILE_REFERENCE_RANGE;
typedef union _FILE_SEGMENT_ELEMENT *PFILE_SEGMENT_ELEMENT;
typedef struct _FLT_GENERIC_WORKITEM *PFLT_GENERIC_WORKITEM;
typedef struct _FLT_RELATED_CONTEXTS *PFLT_RELATED_CONTEXTS;
typedef struct _FORMAT_EX_PARAMETERS *PFORMAT_EX_PARAMETERS;
typedef union _FS_FILTER_PARAMETERS *PFS_FILTER_PARAMETERS;
typedef struct _GEN_GET_NETCARD_TIME *PGEN_GET_NETCARD_TIME;
typedef struct _GET_LOCAL_HOST_INFO1 *PGET_LOCAL_HOST_INFO1;
typedef struct _GET_LOCAL_HOST_INFO2 *PGET_LOCAL_HOST_INFO2;
typedef struct _GET_LOCAL_HOST_INFO3 *PGET_LOCAL_HOST_INFO3;
typedef struct _GET_LOCAL_HOST_INFO4 *PGET_LOCAL_HOST_INFO4;
typedef struct _GET_LOCAL_HOST_INFO5 *PGET_LOCAL_HOST_INFO5;
typedef struct _GET_LOCAL_HOST_INFO6 *PGET_LOCAL_HOST_INFO6;
typedef struct _GET_LOCAL_HOST_INFO8 *PGET_LOCAL_HOST_INFO8;
typedef struct _GET_SINGLE_POLICY_IN *PGET_SINGLE_POLICY_IN;
typedef struct _GetBindingSupport_IN *PGetBindingSupport_IN;
typedef struct _GetFC4Statistics_OUT *PGetFC4Statistics_OUT;
typedef struct _GetFCPStatistics_OUT *PGetFCPStatistics_OUT;
typedef struct HBA_FCPBindingEntry2 *PHBA_FCPBINDINGENTRY2;
typedef struct HBA_FCPTargetMapping *PHBA_FCPTARGETMAPPING;
typedef struct _HIDP_COLLECTION_DESC *PHIDP_COLLECTION_DESC;
typedef struct _HID_DEVICE_EXTENSION *PHID_DEVICE_EXTENSION;
typedef struct _HW_STREAM_DESCRIPTOR *PHW_STREAM_DESCRIPTOR;
typedef struct _PHYSICAL_MEMORY_RANGE PHYSICAL_MEMORY_RANGE;
typedef struct _IDENTIFY_DEVICE_DATA *PIDENTIFY_DEVICE_DATA;
typedef struct _IDENTIFY_PACKET_DATA *PIDENTIFY_PACKET_DATA;
typedef struct _IF_COUNTED_STRING_LH *PIF_COUNTED_STRING_LH;
typedef struct _IGMPV3_REPORT_HEADER_ *PIGMPV3_REPORT_HEADER;
typedef struct _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;
typedef IMiniportAudioEngine *PIMINIPORTAudioEngine;
typedef struct _INT10_BIOS_ARGUMENTS *PINT10_BIOS_ARGUMENTS;
typedef union INTEL_CACHE_INFO_EAX *PINTEL_CACHE_INFO_EAX;
typedef union INTEL_CACHE_INFO_EBX *PINTEL_CACHE_INFO_EBX;
typedef struct _IO_ERROR_LOG_MESSAGE *PIO_ERROR_LOG_MESSAGE;
typedef struct _IO_SCSI_CAPABILITIES *PIO_SCSI_CAPABILITIES;
typedef struct _IPV6_FRAGMENT_HEADER *PIPV6_FRAGMENT_HEADER;
typedef struct _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;
typedef struct _KEY_FULL_INFORMATION *PKEY_FULL_INFORMATION;
typedef struct _KEY_NAME_INFORMATION *PKEY_NAME_INFORMATION;
typedef struct _KEY_NODE_INFORMATION *PKEY_NODE_INFORMATION;
typedef struct _299134A1587F81C88B1AF91D3DBFCA39 *PKSAC3_DIALOGUE_LEVEL;
typedef struct _KSALLOCATOR_DISPATCH *PKSALLOCATOR_DISPATCH;
typedef struct _BF6BFD8678B7E7ABDC56122D693BAF10 *PKSAUDIO_MIXCAP_TABLE;
typedef struct _38332C6D8513F636DCCBCCABE200BE7A *PKSDS3D_HRTF_INIT_MSG;
typedef struct _97739C7249C02ACEBAF17DFC34E3F72B *PKSMULTIPLE_DATA_PROP;
typedef struct _8F4AC9317002A11552A6341450417F12 *PKSOBJECT_CREATE_ITEM;
typedef struct _7D6AD1D4C0599A70ED2A75DF53A62D54 *PKSPROPERTY_POSITIONS;
typedef struct _F1FF9EB17A5B0DC512AB60E4FE6215DC *PKSPROPERTY_SERIALHDR;
typedef struct _85CBE24E9ED55DBB779718CA5D73A273 *PKSPROPERTY_TVAUDIO_S;
typedef struct _3B5C203EDC3EAE75DCA18DA66E622E4F *PKSRTAUDIO_HWREGISTER;
typedef struct tagKS_DATAFORMAT_DV_AVC *PKS_DATAFORMAT_DV_AVC;
typedef struct tagKS_DATARANGE_DVVIDEO *PKS_DATARANGE_DVVIDEO;
typedef struct _LLDP_CLIENT_DISPATCH *PLLDP_CLIENT_DISPATCH;
typedef struct _LOG_PARAMETER_HEADER *PLOG_PARAMETER_HEADER;
typedef struct _LogoutFromTarget_OUT *PLogoutFromTarget_OUT;
typedef IMiniportWaveRTStream *PMINIPORTWAVERTSTREAM;
typedef struct _MODE_DISCONNECT_PAGE *PMODE_DISCONNECT_PAGE;
typedef struct _MODE_INFO_EXCEPTIONS *PMODE_INFO_EXCEPTIONS;
typedef struct _MODE_PARAMETER_BLOCK *PMODE_PARAMETER_BLOCK;
typedef struct _MOUNTDEV_STABLE_GUID *PMOUNTDEV_STABLE_GUID;
typedef struct _MOUNTMGR_MOUNT_POINT *PMOUNTMGR_MOUNT_POINT;
typedef struct _MOUNTMGR_TARGET_NAME *PMOUNTMGR_TARGET_NAME;
typedef struct _MPIO_CONTROLLER_INFO *PMPIO_CONTROLLER_INFO;
typedef struct _MPIO_TIMERS_COUNTERS *PMPIO_TIMERS_COUNTERS;
typedef struct _MRX_CALLDOWN_CONTEXT_ *PMRX_CALLDOWN_CONTEXT;
typedef struct _MSIde_PortDeviceInfo *PMSIde_PortDeviceInfo;
typedef struct _MSMCAInfo_RawMCAData *PMSMCAInfo_RawMCAData;
typedef struct _MSNdis_CountedString *PMSNdis_CountedString;
typedef struct _MSNdis_DriverVersion *PMSNdis_DriverVersion;
typedef struct _MSNdis_GroupAffinity *PMSNdis_GroupAffinity;
typedef struct _MSNdis_LinkStateData *PMSNdis_LinkStateData;
typedef struct _MSNdis_PMAdminConfig *PMSNdis_PMAdminConfig;
typedef struct _MSNdis_PortStateData *PMSNdis_PortStateData;
typedef struct _MSNdis_WmiOutputInfo *PMSNdis_WmiOutputInfo;
typedef struct _MSPower_DeviceEnable *PMSPower_DeviceEnable;
typedef struct _MSV1_0_SUBAUTH_LOGON *PMSV1_0_SUBAUTH_LOGON;
typedef struct _MSiSCSI_AdapterEvent *PMSiSCSI_AdapterEvent;
typedef struct _MSiSCSI_MMIPSECStats *PMSiSCSI_MMIPSECStats;
typedef struct _MSiSCSI_QMIPSECStats *PMSiSCSI_QMIPSECStats;
typedef struct _MSiSCSI_RADIUSConfig *PMSiSCSI_RADIUSConfig;
typedef struct _NDIS_802_11_AI_REQFI *PNDIS_802_11_AI_REQFI;
typedef struct _NDIS_802_11_AI_RESFI *PNDIS_802_11_AI_RESFI;
typedef struct _NDIS_BIND_PARAMETERS *PNDIS_BIND_PARAMETERS;
typedef struct _NDIS_DMA_DESCRIPTION *PNDIS_DMA_DESCRIPTION;
typedef struct _NDIS_HYPERVISOR_INFO *PNDIS_HYPERVISOR_INFO;
typedef struct _NDIS_LINK_PARAMETERS *PNDIS_LINK_PARAMETERS;
typedef struct _NDIS_OPEN_PARAMETERS *PNDIS_OPEN_PARAMETERS;
typedef struct _NDIS_PM_CAPABILITIES *PNDIS_PM_CAPABILITIES;
typedef struct _NDIS_STATISTICS_INFO *PNDIS_STATISTICS_INFO;
typedef struct _NDIS_TAPI_CLOSE_CALL *PNDIS_TAPI_CLOSE_CALL;
typedef struct _NDIS_WAN_CO_FRAGMENT *PNDIS_WAN_CO_FRAGMENT;
typedef struct NDIS_WMI_OUTPUT_INFO *PNDIS_WMI_OUTPUT_INFO;
typedef struct _NDIS_WWAN_READY_INFO *PNDIS_WWAN_READY_INFO;
typedef struct _NDIS_WWAN_SET_PIN_EX *PNDIS_WWAN_SET_PIN_EX;
typedef struct _NDIS_WWAN_SMS_DELETE *PNDIS_WWAN_SMS_DELETE;
typedef struct _NDIS_WWAN_SMS_STATUS *PNDIS_WWAN_SMS_STATUS;
typedef struct _NDIS_WWAN_USSD_EVENT *PNDIS_WWAN_USSD_EVENT;
typedef struct nd_opt_route_info *PND_OPTION_ROUTE_INFO;
typedef struct _NETWORK_ADDRESS_LIST *PNETWORK_ADDRESS_LIST;
typedef struct _NET_BUFFER_LIST_DATA *PNET_BUFFER_LIST_DATA;
typedef struct _NET_DEVICE_PNP_EVENT *PNET_DEVICE_PNP_EVENT;
typedef struct _NFS_OPEN_ECP_CONTEXT *PNFS_OPEN_ECP_CONTEXT;
typedef struct _NON_PAGED_DEBUG_INFO *PNON_PAGED_DEBUG_INFO;
typedef struct _NT_CREATE_PARAMETERS *PNT_CREATE_PARAMETERS;
typedef struct _NVCACHE_HINT_PAYLOAD *PNVCACHE_HINT_PAYLOAD;
typedef struct _NV_FEATURE_PARAMETER *PNV_FEATURE_PARAMETER;
typedef struct _OFFLOAD_IPSEC_ADD_SA *POFFLOAD_IPSEC_ADD_SA;
typedef struct _6D0219E08C78C5ABE6BF34925E3CE89B POPULATE_TOKEN_HEADER;
typedef struct _POWER_IDLE_RESILIENCY POWER_IDLE_RESILIENCY;
typedef struct _POWER_SESSION_CONNECT POWER_SESSION_CONNECT;
typedef struct _PO_WAKE_SOURCE_DEVICE PO_WAKE_SOURCE_DEVICE;
typedef struct _PO_WAKE_SOURCE_HEADER PO_WAKE_SOURCE_HEADER;
typedef struct _PAGED_LOOKASIDE_LIST *PPAGED_LOOKASIDE_LIST;
typedef struct _PARCLASS_INFORMATION *PPARCLASS_INFORMATION;
typedef struct _PCC_GENERIC_SUBSPACE *PPCC_GENERIC_SUBSPACE;
typedef struct _PCI_AGP_ISOCH_STATUS *PPCI_AGP_ISOCH_STATUS;
typedef struct _PCW_MASK_INFORMATION *PPCW_MASK_INFORMATION;
typedef struct _PMI_MEASUREMENT_DATA *PPMI_MEASUREMENT_DATA;
typedef struct _POWER_CONDITION_PAGE *PPOWER_CONDITION_PAGE;
typedef struct _PO_WAKE_SOURCE_FIXED *PPO_WAKE_SOURCE_FIXED;
typedef struct _PO_WAKE_SOURCE_TIMER *PPO_WAKE_SOURCE_TIMER;
typedef struct _0235C12200358EB80BD199E9E2C1E45C *PPRI_RESERVATION_LIST;
typedef struct _PROCESSOR_GROUP_INFO *PPROCESSOR_GROUP_INFO;
typedef struct _PROCESSOR_IDLE_STATE *PPROCESSOR_IDLE_STATE;
typedef struct _B8B838046A6339950C48D4D07BD9D7BC *PPROCESSOR_IDLE_TIMES;
typedef struct _PROCESS_ACCESS_TOKEN *PPROCESS_ACCESS_TOKEN;
typedef struct _ProcessorPerformance *PProcessorPerformance;
typedef struct _READ_CAPACITY16_DATA *PREAD_CAPACITY16_DATA;
typedef struct _READ_LOG_SECTORS_OUT *PREAD_LOG_SECTORS_OUT;
typedef struct _REDBOOK_WMI_STD_DATA *PREDBOOK_WMI_STD_DATA;
typedef struct _REPAIR_COPIES_OUTPUT *PREPAIR_COPIES_OUTPUT;
typedef struct _PREVENT_MEDIA_REMOVAL PREVENT_MEDIA_REMOVAL;
typedef struct _D55ED97765090EFE6FCBF66E3A8167D2 PRI_REGISTRATION_LIST;
typedef struct _KCRM_MARSHAL_HEADER *PRKCRM_MARSHAL_HEADER;
typedef struct _KDEVICE_QUEUE_ENTRY *PRKDEVICE_QUEUE_ENTRY;
typedef struct _PROCESSOR_IDLE_STATES PROCESSOR_IDLE_STATES;
typedef struct _RSS_SCALABILITY_INFO *PRSS_SCALABILITY_INFO;
typedef struct _OSVERSIONINFOEXW *PRTL_OSVERSIONINFOEXW;
typedef struct _RX_BUFFERING_MANAGER_ *PRX_BUFFERING_MANAGER;
typedef struct _RemoveVirtualPort_IN *PRemoveVirtualPort_IN;
typedef struct _RemoveiSNSServer_OUT *PRemoveiSNSServer_OUT;
typedef struct _RescanVirtualPort_IN *PRescanVirtualPort_IN;
typedef struct _SCSI_PASS_THROUGH_EX *PSCSI_PASS_THROUGH_EX;
typedef struct _SDBUS_REQUEST_PACKET *PSDBUS_REQUEST_PACKET;
typedef struct SDP_LARGE_INTEGER_16 *PSDP_LARGE_INTEGER_16;
typedef struct _SD_QUERY_STATS_INPUT *PSD_QUERY_STATS_INPUT;
typedef struct _SEC_CHANNEL_BINDINGS *PSEC_CHANNEL_BINDINGS;
typedef struct _SEC_NEGOTIATION_INFO *PSEC_NEGOTIATION_INFO;
typedef struct _SERIAL_WMI_COMM_DATA *PSERIAL_WMI_COMM_DATA;
typedef struct _SERIAL_WMI_PERF_DATA *PSERIAL_WMI_PERF_DATA;
typedef struct _SET_CMP_ADDRESS_TYPE *PSET_CMP_ADDRESS_TYPE;
typedef struct _SET_SINGLE_POLICY_IN *PSET_SINGLE_POLICY_IN;
typedef struct _SE_ADT_ACCESS_REASON *PSE_ADT_ACCESS_REASON;
typedef struct SMHBA_PortAttributes *PSMHBA_PORTATTRIBUTES;
typedef struct sockaddr_storage *PSOCKADDR_STORAGE_NFS;
typedef struct _SRV_OPEN_ECP_CONTEXT *PSRV_OPEN_ECP_CONTEXT;
typedef struct _STORAGE_HOTPLUG_INFO *PSTORAGE_HOTPLUG_INFO;
typedef struct _STOR_DEBUGPRINT_ARGS *PSTOR_DEBUGPRINT_ARGS;
typedef struct _STOR_UC_DEVICE_USAGE *PSTOR_UC_DEVICE_USAGE;
typedef struct _STOR_UNIT_ATTRIBUTES *PSTOR_UNIT_ATTRIBUTES;
typedef struct _SYSENV_VARIABLE_INFO *PSYSENV_VARIABLE_INFO;
typedef struct _64911FAA3782108E0493959C6B1F8F86 *PSYSTEM_BATTERY_STATE;
typedef struct _PS_CREATE_NOTIFY_INFO PS_CREATE_NOTIFY_INFO;
typedef struct _ScsiReadCapacity_OUT *PScsiReadCapacity_OUT;
typedef struct _SecPkgContext_NamesW *PSecPkgContext_NamesW;
typedef struct _SetBindingSupport_IN *PSetBindingSupport_IN;
typedef struct _TA_APPLETALK_ADDR *PTA_APPLETALK_ADDRESS;
typedef struct _TDI_ADDRESS_OSI_TSAP *PTDI_ADDRESS_OSI_TSAP;
typedef struct _TRANSLATOR_INTERFACE *PTRANSLATOR_INTERFACE;
typedef struct TRANSPORT_SETTING_ID *PTRANSPORT_SETTING_ID;
typedef struct _USBCAMD_DEVICE_DATA2 *PUSBCAMD_DEVICE_DATA2;
typedef union _USB_INTERFACE_STATUS *PUSB_INTERFACE_STATUS;
typedef struct _USB_TOPOLOGY_ADDRESS *PUSB_TOPOLOGY_ADDRESS;
typedef struct _VIDEO_COLOR_LUT_DATA *PVIDEO_COLOR_LUT_DATA;
typedef struct _VIDEO_HARDWARE_STATE *PVIDEO_HARDWARE_STATE;
typedef struct tagVIDEO_MONITOR_DEVICE *PVIDEO_MONITOR_DEVICE;
typedef struct _VIDEO_REQUEST_PACKET *PVIDEO_REQUEST_PACKET;
typedef struct _VIRTUAL_STORAGE_TYPE *PVIRTUAL_STORAGE_TYPE;
typedef struct _4678A3289DA4711CDCEC5ACF3537B1AB *PVOLUME_BITMAP_BUFFER;
typedef struct _WAN_CO_MTULINKPARAMS *PWAN_CO_MTULINKPARAMS;
typedef struct _48F34F6E58318E719B3C17D5DF8D3416 *PWAVEFORMATEXTENSIBLE;
typedef struct _WHEA_ERROR_PACKET_V1 *PWHEA_ERROR_PACKET_V1;
typedef struct _WHEA_ERROR_PACKET_V2 *PWHEA_ERROR_PACKET_V2;
typedef union _WHEA_PCIXBUS_COMMAND *PWHEA_PCIXBUS_COMMAND;
typedef struct _WHEA_PCI_SLOT_NUMBER *PWHEA_PCI_SLOT_NUMBER;
typedef union _WHEA_XPF_CACHE_CHECK *PWHEA_XPF_CACHE_CHECK;
typedef struct _WHEA_XPF_MCA_SECTION *PWHEA_XPF_MCA_SECTION;
typedef struct _WMI_DISK_PERFORMANCE *PWMI_DISK_PERFORMANCE;
typedef struct _WRITE_LOG_SECTORS_IN *PWRITE_LOG_SECTORS_IN;
typedef struct _WWAN_SMS_CDMA_RECORD *PWWAN_SMS_CDMA_RECORD;
typedef struct _WWAN_VENDOR_SPECIFIC *PWWAN_VENDOR_SPECIFIC;
typedef struct _WmiEnumeratePorts_IN *PWmiEnumeratePorts_IN;
typedef struct _WmiMonitorBrightness *PWmiMonitorBrightness;
typedef struct _WmiQueryLinkState_IN *PWmiQueryLinkState_IN;
typedef struct _WmiQueryPortState_IN *PWmiQueryPortState_IN;
typedef struct _XSTATE_CONFIGURATION *PXSTATE_CONFIGURATION;
typedef struct _QUERY_PATH_REQUEST_EX QUERY_PATH_REQUEST_EX;
typedef struct _READ_AHEAD_PARAMETERS READ_AHEAD_PARAMETERS;
typedef struct _READ_CAPACITY_DATA_EX READ_CAPACITY_DATA_EX;
typedef struct _REDBOOK_WMI_PERF_DATA REDBOOK_WMI_PERF_DATA;
typedef struct _15F35BF8B73635FE222DFD2153EC2695 RESP_GET_DFS_REFERRAL;
typedef struct _ROOTHUB_PDO_EXTENSION ROOTHUB_PDO_EXTENSION;
typedef struct _RX_DISPATCHER_CONTEXT_ RX_DISPATCHER_CONTEXT;
typedef struct _RX_WORK_DISPATCH_ITEM_ RX_WORK_DISPATCH_ITEM;
typedef struct _RemoveRADIUSServer_IN RemoveRADIUSServer_IN;
typedef struct _RemoveVirtualPort_OUT RemoveVirtualPort_OUT;
typedef struct _RescanVirtualPort_OUT RescanVirtualPort_OUT;
typedef struct _SCSI_ADAPTER_BUS_INFO SCSI_ADAPTER_BUS_INFO;
typedef struct _SCSI_EXTENDED_MESSAGE SCSI_EXTENDED_MESSAGE;
typedef struct _SD_QUERY_STATS_OUTPUT SD_QUERY_STATS_OUTPUT;
typedef struct _SD_RW_DIRECT_ARGUMENT SD_RW_DIRECT_ARGUMENT;
typedef struct _SES_STATUS_DESCRIPTOR SES_STATUS_DESCRIPTOR;
typedef struct _SET_LOCAL_HOST_PROPS1 SET_LOCAL_HOST_PROPS1;
typedef struct _SET_LOCAL_HOST_PROPS2 SET_LOCAL_HOST_PROPS2;
typedef struct _SET_LOCAL_HOST_PROPS3 SET_LOCAL_HOST_PROPS3;
typedef struct _SET_LOCAL_HOST_PROPS4 SET_LOCAL_HOST_PROPS4;
typedef struct _SET_LOCAL_HOST_PROPS5 SET_LOCAL_HOST_PROPS5;
typedef struct _SET_SINGLE_POLICY_OUT SET_SINGLE_POLICY_OUT;
typedef struct sierra_adpcmwaveformat_tag SIERRAADPCMWAVEFORMAT;
typedef struct _SMB_TRANSACT_MAILSLOT SMB_TRANSACT_MAILSLOT;
typedef struct _SRBEX_DATA_SCSI_CDB16 SRBEX_DATA_SCSI_CDB16;
typedef struct _SRBEX_DATA_SCSI_CDB32 SRBEX_DATA_SCSI_CDB32;
typedef struct _STORAGE_DEVICE_NUMBER STORAGE_DEVICE_NUMBER;
typedef struct _STORAGE_OFFLOAD_TOKEN STORAGE_OFFLOAD_TOKEN;
typedef struct _STORAGE_READ_CAPACITY STORAGE_READ_CAPACITY;
typedef struct _STORAGE_REQUEST_BLOCK STORAGE_REQUEST_BLOCK;
typedef struct _STREAM_TIME_REFERENCE STREAM_TIME_REFERENCE;
typedef struct _SecPkgContext_DceInfo SecPkgContext_DceInfo;
typedef struct _SetBindingSupport_OUT SetBindingSupport_OUT;
typedef struct _SetPersistentEntry_IN SetPersistentEntry_IN;
typedef struct _TAPE_CREATE_PARTITION TAPE_CREATE_PARTITION;
typedef struct _TA_ADDRESS_NETBIOS_EX TA_NETBIOS_EX_ADDRESS;
typedef struct _TCG_DESCRIPTION_TABLE TCG_DESCRIPTION_TABLE;
typedef struct _TDI_ADDRESS_APPLETALK TDI_ADDRESS_APPLETALK;
typedef struct _TDI_ADDRESS_IP6_WIN2K TDI_ADDRESS_IP6_WIN2K;
typedef struct _TDI_MAX_DATAGRAM_INFO TDI_MAX_DATAGRAM_INFO;
typedef struct _TDI_NCPA_BINDING_INFO TDI_NCPA_BINDING_INFO;
typedef struct _TDI_PNP_CONTEXT_WIN2K TDI_PNP_CONTEXT_WIN2K;
typedef struct _TDI_ROUTING_INFO_WS03 TDI_ROUTING_INFO_WS03;
typedef struct _TOKEN_MANDATORY_LABEL TOKEN_MANDATORY_LABEL;
typedef struct _USBD_PIPE_INFORMATION USBD_PIPE_INFORMATION;
typedef struct _USB_30_HUB_DESCRIPTOR USB_30_HUB_DESCRIPTOR;
typedef struct _USB_COMMON_DESCRIPTOR USB_COMMON_DESCRIPTOR;
typedef struct _USB_DEVICE_DESCRIPTOR USB_DEVICE_DESCRIPTOR;
typedef struct _USB_LEVEL_INFORMATION USB_LEVEL_INFORMATION;
typedef struct _USB_STRING_DESCRIPTOR USB_STRING_DESCRIPTOR;
typedef struct _VIDEO_CHILD_ENUM_INFO VIDEO_CHILD_ENUM_INFO;
typedef struct _VIDEO_CURSOR_POSITION VIDEO_CURSOR_POSITION;
typedef struct _VIDEO_LUT_RGB256WORDS VIDEO_LUT_RGB256WORDS;
typedef struct _VPCI_READ_BLOCK_INPUT VPCI_READ_BLOCK_INPUT;
typedef struct _VPD_BLOCK_LIMITS_PAGE VPD_BLOCK_LIMITS_PAGE;
typedef struct _VP_DEVICE_DESCRIPTION VP_DEVICE_DESCRIPTION;
typedef struct _WAE_DESCRIPTION_TABLE WAE_DESCRIPTION_TABLE;
typedef union _WHEA_PERSISTENCE_INFO WHEA_PERSISTENCE_INFO;
typedef struct _WHEA_XPF_CONTEXT_INFO WHEA_XPF_CONTEXT_INFO;
typedef struct tagWNODE_EVENT_REFERENCE WNODE_EVENT_REFERENCE;
typedef struct tagWNODE_SINGLE_INSTANCE WNODE_SINGLE_INSTANCE;
typedef struct _WRITE_LOG_SECTORS_OUT WRITE_LOG_SECTORS_OUT;
typedef struct _WSK_PROVIDER_DISPATCH WSK_PROVIDER_DISPATCH;
typedef struct _WmiEnumeratePorts_OUT WmiEnumeratePorts_OUT;
typedef struct _WmiQueryLinkState_OUT WmiQueryLinkState_OUT;
typedef struct _WmiQueryPortState_OUT WmiQueryPortState_OUT;
typedef struct _XXCTL_LOWIO_COMPONENT XXCTL_LOWIO_COMPONENT;
struct _BM_REQUEST_TYPE___BM {unsigned char Recipient : 2;unsigned char Reserved : 3;unsigned char Type : 2;unsigned char Dir : 1;};
enum _BTHX_HCI_PACKET_TYPE {HciPacketCommand = 0x1,HciPacketAclData = 0x2,HciPacketEvent = 0x4,};
enum _CM_SERVICE_LOAD_TYPE {BootLoad = 0x0,SystemLoad = 0x1,AutoLoad = 0x2,DemandLoad = 0x3,DisableLoad = 0x4,};
enum _CM_SERVICE_NODE_TYPE {DriverType = 0x1,FileSystemType = 0x2,Win32ServiceOwnProcess = 0x10,Win32ServiceShareProcess = 0x20,AdapterType = 0x4,RecognizerType = 0x8,};
enum _CM_SHARE_DISPOSITION {CmResourceShareUndetermined = 0x0,CmResourceShareDeviceExclusive = 0x1,CmResourceShareDriverExclusive = 0x2,CmResourceShareShared = 0x3,};
enum _DEVICE_INSTALL_STATE {InstallStateInstalled = 0x0,InstallStateNeedsReinstall = 0x1,InstallStateFailedInstall = 0x2,InstallStateFinishInstall = 0x3,};
enum _DEVICE_RELATION_TYPE {BusRelations = 0x0,EjectionRelations = 0x1,PowerRelations = 0x2,RemovalRelations = 0x3,TargetDeviceRelation = 0x4,SingleBusRelations = 0x5,TransportRelations = 0x6,};
enum _DOT11_AUTH_ALGORITHM {DOT11_AUTH_ALGO_80211_OPEN = 0x1,DOT11_AUTH_ALGO_80211_SHARED_KEY = 0x2,DOT11_AUTH_ALGO_WPA = 0x3,DOT11_AUTH_ALGO_WPA_PSK = 0x4,DOT11_AUTH_ALGO_WPA_NONE = 0x5,DOT11_AUTH_ALGO_RSNA = 0x6,DOT11_AUTH_ALGO_RSNA_PSK = 0x7,DOT11_AUTH_ALGO_IHV_START = 0x80000000,DOT11_AUTH_ALGO_IHV_END = 0xFFFFFFFF,};
struct _DOT4_DC_DESTROY_DATA {unsigned char bHsid;};
struct _EISA_PORT_DESCRIPTOR {unsigned char NumberPorts : 5;unsigned char Reserved : 1;unsigned char Shared : 1;unsigned char MoreEntries : 1;};
struct _ENTROPY_SOURCE_STATE;
enum _HDAUDIO_STREAM_STATE {ResetState = 0x0,StopState = 0x1,PauseState = 0x1,RunState = 0x2,};
enum _IO_ALLOCATION_ACTION {KeepObject = 0x1,DeallocateObject = 0x2,DeallocateObjectKeepRegisters = 0x3,};
enum _MOUSE_RESET_SUBSTATE {ExpectingReset = 0x0,ExpectingResetId = 0x1,ExpectingGetDeviceIdACK = 0x2,ExpectingGetDeviceIdValue = 0x3,ExpectingSetResolutionDefaultACK = 0x4,ExpectingSetResolutionDefaultValueACK = 0x5,ExpectingSetResolutionACK = 0x6,ExpectingSetResolutionValueACK = 0x7,ExpectingSetScaling1to1ACK = 0x8,ExpectingSetScaling1to1ACK2 = 0x9,ExpectingSetScaling1to1ACK3 = 0xA,ExpectingReadMouseStatusACK = 0xB,ExpectingReadMouseStatusByte1 = 0xC,ExpectingReadMouseStatusByte2 = 0xD,ExpectingReadMouseStatusByte3 = 0xE,StartPnPIdDetection = 0xF,ExpectingLoopSetSamplingRateACK = 0x10,ExpectingLoopSetSamplingRateValueACK = 0x11,ExpectingPnpIdByte1 = 0x12,ExpectingPnpIdByte2 = 0x13,ExpectingPnpIdByte3 = 0x14,ExpectingPnpIdByte4 = 0x15,ExpectingPnpIdByte5 = 0x16,ExpectingPnpIdByte6 = 0x17,ExpectingPnpIdByte7 = 0x18,EnableWheel = 0x19,Enable5Buttons = 0x1A,ExpectingGetDeviceId2ACK = 0x1B,ExpectingGetDeviceId2Value = 0x1C,ExpectingSetSamplingRateACK = 0x1D,ExpectingSetSamplingRateValueACK = 0x1E,ExpectingEnableACK = 0x1F,ExpectingFinalResolutionACK = 0x20,ExpectingFinalResolutionValueACK = 0x21,ExpectingGetDeviceIdDetectACK = 0x22,ExpectingGetDeviceIdDetectValue = 0x23,CustomHookStateMinimum = 0x64,CustomHookStateMaximum = 0x3E7,I8042ReservedMinimum = 0x3E8,};
enum _NDIS_HARDWARE_STATUS {NdisHardwareStatusReady = 0x0,NdisHardwareStatusInitializing = 0x1,NdisHardwareStatusReset = 0x2,NdisHardwareStatusClosing = 0x3,NdisHardwareStatusNotReady = 0x4,};
enum _NDIS_MAC_PACKET_TYPE {NdisMacPacketTypeUndefined = 0x0,NdisMacPacketTypeUnicast = 0x1,NdisMacPacketTypeMulticast = 0x2,NdisMacPacketTypeBroadcast = 0x3,NdisMacPacketTypeMaximum = 0x4,};
enum _NDIS_PER_PACKET_INFO {TcpIpChecksumPacketInfo = 0x0,IpSecPacketInfo = 0x1,TcpLargeSendPacketInfo = 0x2,ClassificationHandlePacketInfo = 0x3,NdisReserved = 0x4,ScatterGatherListPacketInfo = 0x5,Ieee8021QInfo = 0x6,OriginalPacketInfo = 0x7,PacketCancelId = 0x8,OriginalNetBufferList = 0x9,CachedNetBufferList = 0xA,ShortPacketPaddingInfo = 0xB,MaxPerPacketInfo = 0xC,};
enum _NDIS_PHYSICAL_MEDIUM {NdisPhysicalMediumUnspecified = 0x0,NdisPhysicalMediumWirelessLan = 0x1,NdisPhysicalMediumCableModem = 0x2,NdisPhysicalMediumPhoneLine = 0x3,NdisPhysicalMediumPowerLine = 0x4,NdisPhysicalMediumDSL = 0x5,NdisPhysicalMediumFibreChannel = 0x6,NdisPhysicalMedium1394 = 0x7,NdisPhysicalMediumWirelessWan = 0x8,NdisPhysicalMediumNative802_11 = 0x9,NdisPhysicalMediumBluetooth = 0xA,NdisPhysicalMediumInfiniband = 0xB,NdisPhysicalMediumWiMax = 0xC,NdisPhysicalMediumUWB = 0xD,NdisPhysicalMedium802_3 = 0xE,NdisPhysicalMedium802_5 = 0xF,NdisPhysicalMediumIrda = 0x10,NdisPhysicalMediumWiredWAN = 0x11,NdisPhysicalMediumWiredCoWan = 0x12,NdisPhysicalMediumOther = 0x13,NdisPhysicalMediumMax = 0x14,};
enum _NDIS_SHUTDOWN_ACTION {NdisShutdownPowerOff = 0x0,NdisShutdownBugCheck = 0x1,};
struct _PCI_AGP_ISOCH_STATUS {unsigned int ErrorCode : 2;unsigned int Rsvd1 : 1;unsigned int Isoch_L : 3;unsigned int Isoch_Y : 2;unsigned int Isoch_N : 8;unsigned int Rsvd2 : 16;};
struct _PCI_PMC___PM_SUPPORT {unsigned char Rsvd2 : 1;unsigned char D1 : 1;unsigned char D2 : 1;unsigned char PMED0 : 1;unsigned char PMED1 : 1;unsigned char PMED2 : 1;unsigned char PMED3Hot : 1;unsigned char PMED3Cold : 1;};
enum _PROCESSOR_CACHE_TYPE {CacheUnified = 0x0,CacheInstruction = 0x1,CacheData = 0x2,CacheTrace = 0x3,};
enum _RX_DISPATCHER_STATE_ {RxDispatcherActive = 0x0,RxDispatcherInactive = 0x1,};
enum _RX_WORK_QUEUE_STATE_ {RxWorkQueueActive = 0x0,RxWorkQueueInactive = 0x1,RxWorkQueueRundownInProgress = 0x2,};
struct _SEC_CHANNEL_BINDINGS {unsigned int dwInitiatorAddrType;unsigned int cbInitiatorLength;unsigned int dwInitiatorOffset;unsigned int dwAcceptorAddrType;unsigned int cbAcceptorLength;unsigned int dwAcceptorOffset;unsigned int cbApplicationDataLength;unsigned int dwApplicationDataOffset;};
struct _STOR_UNIT_ATTRIBUTES {unsigned int DeviceAttentionSupported : 1;unsigned int AsyncNotificationSupported : 1;unsigned int D3ColdNotSupported : 1;unsigned int Reserved : 29;};
enum _TAPE_ALERT_INFO_TYPE {TapeAlertInfoNone = 0x0,TapeAlertInfoRequestSense = 0x1,TapeAlertInfoLogPage = 0x2,};
enum _TOKEN_ELEVATION_TYPE {TokenElevationTypeDefault = 0x1,TokenElevationTypeFull = 0x2,TokenElevationTypeLimited = 0x3,};
enum _TRANSFER_COUNT_UNITS {TRANSFER_COUNT_UNITS_BYTES = 0x0,TRANSFER_COUNT_UNITS_KIBIBYTES = 0x1,TRANSFER_COUNT_UNITS_MEBIBYTES = 0x2,TRANSFER_COUNT_UNITS_GIBIBYTES = 0x3,TRANSFER_COUNT_UNITS_TEBIBYTES = 0x4,TRANSFER_COUNT_UNITS_PEBIBYTES = 0x5,TRANSFER_COUNT_UNITS_EXBIBYTES = 0x6,TRANSFER_COUNT_UNITS_NUMBER_BLOCKS = 0xF1,};
enum _TunerDecoderLockType {Tuner_LockType_None = 0x0,Tuner_LockType_Within_Scan_Sensing_Range = 0x1,Tuner_LockType_Locked = 0x2,};
enum _WHEA_RAW_DATA_FORMAT {WheaRawDataFormatIPFSalRecord = 0x0,WheaRawDataFormatIA32MCA = 0x1,WheaRawDataFormatIntel64MCA = 0x2,WheaRawDataFormatAMD64MCA = 0x3,WheaRawDataFormatMemory = 0x4,WheaRawDataFormatPCIExpress = 0x5,WheaRawDataFormatNMIPort = 0x6,WheaRawDataFormatPCIXBus = 0x7,WheaRawDataFormatPCIXDevice = 0x8,WheaRawDataFormatGeneric = 0x9,WheaRawDataFormatMax = 0xA,};
enum _WWAN_REGISTER_ACTION {WwanRegisterActionAutomatic = 0x0,WwanRegisterActionManual = 0x1,WwanRegisterActionMax = 0x2,};
enum _WWAN_USSD_EVENT_TYPE {WwanUssdEventNoActionRequired = 0x0,WwanUssdEventActionRequired = 0x1,WwanUssdEventTerminated = 0x2,WwanUssdEventOtherLocalClient = 0x3,WwanUssdEventOperationNotSupported = 0x4,WwanUssdEventNetworkTimeOut = 0x5,};
typedef struct _ACPI_METHOD_ARGUMENT ACPI_METHOD_ARGUMENT;
typedef struct _ATM_MEDIA_PARAMETERS ATM_MEDIA_PARAMETERS;
typedef struct _BANDWIDTH_ALLOCATION BANDWIDTH_ALLOCATION;
typedef struct _BDA_CAS_CLOSEMMIDATA BDA_CAS_CLOSEMMIDATA;
typedef struct _BDA_ETHERNET_ADDRESS BDA_ETHERNET_ADDRESS;
typedef struct _BDA_PROGRAM_PID_LIST BDA_PROGRAM_PID_LIST;
typedef struct _BDA_SCAN_CAPABILTIES BDA_SCAN_CAPABILTIES;
typedef struct _BDA_TUNER_TUNERSTATE BDA_TUNER_TUNERSTATE;
typedef struct _BOOTDISK_INFORMATION BOOTDISK_INFORMATION;
typedef struct _BTH_L2CAP_EVENT_INFO BTH_L2CAP_EVENT_INFO;
typedef struct _BUS_INTERFACE_SWENUM BUS_INTERFACE_SWENUM;
typedef struct _CDAUDIO_CONTROL_PAGE CDAUDIO_CONTROL_PAGE;
typedef struct _CDROM_EXCLUSIVE_LOCK CDROM_EXCLUSIVE_LOCK;
typedef struct _CDROM_PLAY_AUDIO_MSF CDROM_PLAY_AUDIO_MSF;
typedef struct _CDROM_SEEK_AUDIO_MSF CDROM_SEEK_AUDIO_MSF;
typedef struct _CDVD_REPORT_ASF_DATA CDVD_REPORT_ASF_DATA;
typedef struct _CHANGER_ELEMENT_LIST CHANGER_ELEMENT_LIST;
typedef struct _CHANGER_PRODUCT_DATA CHANGER_PRODUCT_DATA;
typedef struct _CHANGER_SET_POSITION CHANGER_SET_POSITION;
typedef struct _CIP_DATA_FORMAT_VER2 CIP_DATA_FORMAT_VER2;
typedef struct _CIP_DATA_FORMAT_VER3 CIP_DATA_FORMAT_VER3;
typedef struct _CM_SONIC_DEVICE_DATA CM_SONIC_DEVICE_DATA;
typedef struct _CM_VIDEO_DEVICE_DATA CM_VIDEO_DEVICE_DATA;
typedef struct _COMPRESSED_DATA_INFO COMPRESSED_DATA_INFO;
typedef struct _CO_TAPI_ADDRESS_CAPS CO_TAPI_ADDRESS_CAPS;
typedef struct csimaadpcmwaveformat_tag CSIMAADPCMWAVEFORMAT;
typedef struct _CreateVirtualPort_IN CreateVirtualPort_IN;
typedef struct _D3DDDICB_SIGNALFLAGS D3DDDICB_SIGNALFLAGS;
typedef struct _D3DDDI_RESOURCEFLAGS D3DDDI_RESOURCEFLAGS;
typedef struct _D3DKMT_WDDM_1_2_CAPS D3DKMT_WDDM_1_2_CAPS;
typedef struct _349EB074D4E400CE7F81D3BDE9131585 DEBUG_DEVICE_ADDRESS;
typedef struct _DMA_TRANSFER_INFO_V1 DMA_TRANSFER_INFO_V1;
typedef struct _DOT11_COUNTERS_ENTRY DOT11_COUNTERS_ENTRY;
typedef struct _DOT11_MAC_PARAMETERS DOT11_MAC_PARAMETERS;
typedef struct _DOT11_PEER_INFO_LIST DOT11_PEER_INFO_LIST;
typedef struct _DOT11_WFD_ATTRIBUTES DOT11_WFD_ATTRIBUTES;
typedef struct _DOT4_DC_DESTROY_DATA DOT4_DC_DESTROY_DATA;
typedef struct _DSM_QueryLBPolicy_V2 DSM_QueryLBPolicy_V2;
typedef struct _DXGKARG_CREATEDEVICE DXGKARG_CREATEDEVICE;
typedef struct _DXGKARG_SUBMITRENDER DXGKARG_SUBMITRENDER;
typedef struct _DXGK_ALLOCATIONINFO2 DXGK_ALLOCATIONINFO2;
typedef struct _DXGK_BRIGHTNESS_CAPS DXGK_BRIGHTNESS_CAPS;
typedef struct _DXGK_DEVICEINFOFLAGS DXGK_DEVICEINFOFLAGS;
typedef struct _DXGK_QUERYSEGMENTOUT DXGK_QUERYSEGMENTOUT;
typedef struct _DXGK_TIMED_OPERATION DXGK_TIMED_OPERATION;
typedef struct _DXGK_VIDPN_INTERFACE DXGK_VIDPN_INTERFACE;
typedef struct _EISA_PORT_DESCRIPTOR EISA_PORT_DESCRIPTOR;
typedef struct _ENABLE_DISABLE_FP_IN ENABLE_DISABLE_FP_IN;
typedef struct _EXECUTE_SELF_TEST_IN EXECUTE_SELF_TEST_IN;
typedef void FAST_IO_ACQUIRE_FILE(struct _FILE_OBJECT *FileObject);
typedef void FAST_IO_RELEASE_FILE(struct _FILE_OBJECT *FileObject);
typedef struct _FILE_ALL_INFORMATION FILE_ALL_INFORMATION;
typedef struct _FILE_OBJECTID_BUFFER FILE_OBJECTID_BUFFER;
typedef struct _FILE_REFERENCE_RANGE FILE_REFERENCE_RANGE;
typedef union _FILE_SEGMENT_ELEMENT FILE_SEGMENT_ELEMENT;
typedef struct _FLT_RELATED_CONTEXTS FLT_RELATED_CONTEXTS;
typedef struct _FORMAT_EX_PARAMETERS FORMAT_EX_PARAMETERS;
typedef union _FS_FILTER_PARAMETERS FS_FILTER_PARAMETERS;
typedef struct g721_adpcmwaveformat_tag G721_ADPCMWAVEFORMAT;
typedef struct g723_adpcmwaveformat_tag G723_ADPCMWAVEFORMAT;
typedef struct _GEN_GET_NETCARD_TIME GEN_GET_NETCARD_TIME;
typedef struct _GET_LOCAL_HOST_INFO1 GET_LOCAL_HOST_INFO1;
typedef struct _GET_LOCAL_HOST_INFO2 GET_LOCAL_HOST_INFO2;
typedef struct _GET_LOCAL_HOST_INFO3 GET_LOCAL_HOST_INFO3;
typedef struct _GET_LOCAL_HOST_INFO4 GET_LOCAL_HOST_INFO4;
typedef struct _GET_LOCAL_HOST_INFO5 GET_LOCAL_HOST_INFO5;
typedef struct _GET_LOCAL_HOST_INFO6 GET_LOCAL_HOST_INFO6;
typedef struct _GET_LOCAL_HOST_INFO8 GET_LOCAL_HOST_INFO8;
typedef struct _GET_SINGLE_POLICY_IN GET_SINGLE_POLICY_IN;
typedef struct _GetBindingSupport_IN GetBindingSupport_IN;
typedef struct _GetFC4Statistics_OUT GetFC4Statistics_OUT;
typedef struct _GetFCPStatistics_OUT GetFCPStatistics_OUT;
typedef struct HBA_FCPBindingEntry2 HBA_FCPBINDINGENTRY2;
typedef struct HBA_FCPTargetMapping HBA_FCPTARGETMAPPING;
typedef struct _HIDP_COLLECTION_DESC HIDP_COLLECTION_DESC;
typedef struct _HID_DEVICE_EXTENSION HID_DEVICE_EXTENSION;
typedef struct _HW_STREAM_DESCRIPTOR HW_STREAM_DESCRIPTOR;
typedef struct _IDENTIFY_DEVICE_DATA IDENTIFY_DEVICE_DATA;
typedef struct _IDENTIFY_PACKET_DATA IDENTIFY_PACKET_DATA;
typedef struct _IF_COUNTED_STRING_LH IF_COUNTED_STRING_LH;
typedef struct _IGMPV3_REPORT_HEADER_ IGMPV3_REPORT_HEADER;
typedef struct _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_FUNCTION_ENTRY IMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_IMPORT_BY_NAME IMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER;
struct IMiniportAudioEngine {struct IMiniportAudioEngineVtbl *lpVtbl;};
typedef struct _INT10_BIOS_ARGUMENTS INT10_BIOS_ARGUMENTS;
struct INonDelegatedUnknown {struct INonDelegatedUnknownVtbl *lpVtbl;};
typedef struct _IO_ERROR_LOG_MESSAGE IO_ERROR_LOG_MESSAGE;
typedef struct _IO_SCSI_CAPABILITIES IO_SCSI_CAPABILITIES;
typedef IPMultihopRouteEntry_V2 IPMultihopRouteEntry;
typedef struct _IPV6_FRAGMENT_HEADER IPV6_FRAGMENT_HEADER;
struct IPortClsRuntimePower {struct IPortClsRuntimePowerVtbl *lpVtbl;};
struct IPortWMIRegistration {struct IPortWMIRegistrationVtbl *lpVtbl;};
typedef struct _IRB_REQ_ASYNC_STREAM IRB_REQ_ASYNC_STREAM;
typedef struct _IRB_REQ_ISOCH_LISTEN IRB_REQ_ISOCH_LISTEN;
struct IUnregisterSubdevice {struct IUnregisterSubdeviceVtbl *lpVtbl;};
typedef struct _KEY_FULL_INFORMATION KEY_FULL_INFORMATION;
typedef struct _KEY_NAME_INFORMATION KEY_NAME_INFORMATION;
typedef struct _KEY_NODE_INFORMATION KEY_NODE_INFORMATION;
typedef struct _299134A1587F81C88B1AF91D3DBFCA39 KSAC3_DIALOGUE_LEVEL;
typedef struct _KSALLOCATOR_DISPATCH KSALLOCATOR_DISPATCH;
typedef struct _BF6BFD8678B7E7ABDC56122D693BAF10 KSAUDIO_MIXCAP_TABLE;
typedef struct _38332C6D8513F636DCCBCCABE200BE7A KSDS3D_HRTF_INIT_MSG;
typedef struct _97739C7249C02ACEBAF17DFC34E3F72B KSMULTIPLE_DATA_PROP;
typedef struct _8F4AC9317002A11552A6341450417F12 KSOBJECT_CREATE_ITEM;
typedef struct _7D6AD1D4C0599A70ED2A75DF53A62D54 KSPROPERTY_POSITIONS;
typedef struct _F1FF9EB17A5B0DC512AB60E4FE6215DC KSPROPERTY_SERIALHDR;
typedef struct _85CBE24E9ED55DBB779718CA5D73A273 KSPROPERTY_TVAUDIO_S;
typedef struct _3B5C203EDC3EAE75DCA18DA66E622E4F KSRTAUDIO_HWREGISTER;
typedef struct tagKS_DATAFORMAT_DV_AVC KS_DATAFORMAT_DV_AVC;
typedef struct tagKS_DATARANGE_DVVIDEO KS_DATARANGE_DVVIDEO;
typedef struct _LLDP_CLIENT_DISPATCH LLDP_CLIENT_DISPATCH;
typedef struct _LOG_PARAMETER_HEADER LOG_PARAMETER_HEADER;
typedef struct _DDVIDEOPORTCONNECT *LPDDVIDEOPORTCONNECT;
typedef struct _GETVERSIONINPARAMS *LPGETVERSIONINPARAMS;
typedef struct _LogoutFromTarget_OUT LogoutFromTarget_OUT;
enum MACRO_AVCCONNECTINFO {AVCCONNECTINFO_MAX_SUBUNITADDR_LEN = 32,};
enum MACRO_CHANNEL_NIBBLE {CHANNEL_NIBBLE = 0x8,};
enum MACRO_CHANNEL_NUMBER {PRIMARY_CHANNEL_NUMBER = 0,SECONDARY_CHANNEL_NUMBER = 1,};
enum MACRO_CRYPTO_SUCCESS {CRYPTO_SUCCESS = 0,CRYPTO_GENERIC_ERROR = 1,CRYPTO_TRANSPORT_AH_AUTH_FAILED = 2,CRYPTO_TRANSPORT_ESP_AUTH_FAILED = 3,CRYPTO_TUNNEL_AH_AUTH_FAILED = 4,CRYPTO_TUNNEL_ESP_AUTH_FAILED = 5,CRYPTO_INVALID_PACKET_SYNTAX = 6,CRYPTO_INVALID_PROTOCOL = 7,};
enum MACRO_ClearCache_OUT {ClearCache_OUT_Status_ID = 1,};
enum MACRO_ClfsNullRecord {ClfsNullRecord = 0x0,ClfsDataRecord = 0x1,ClfsRestartRecord = 0x2,};
enum MACRO_DEVICEDUMP_CAP {DEVICEDUMP_CAP_PRIVATE_SECTION = 0x1,DEVICEDUMP_CAP_RESTRICTED_SECTION = 0x2,};
enum MACRO_DISK_ATTRIBUTE {DISK_ATTRIBUTE_OFFLINE = 0x1,DISK_ATTRIBUTE_READ_ONLY = 0x2,DISK_ATTRIBUTE_HIDDEN = 0x4,};
enum MACRO_DOT11_INCOMING {DOT11_INCOMING_ASSOC_DECISION_REVISION_1 = 1,DOT11_INCOMING_ASSOC_DECISION_REVISION_2 = 2,};
enum MACRO_DOT11_PHY_AUTO {DOT11_PHY_AUTO_CONFIG_ENABLED_FLAG = 0x1,DOT11_MAC_AUTO_CONFIG_ENABLED_FLAG = 0x2,};
enum MACRO_DRIVER_INVALID {DRIVER_INVALID_CRUNTIME_PARAMETER = 0x110,};
enum MACRO_DRIVER_OVERRAN {DRIVER_OVERRAN_STACK_BUFFER = 0xF7,};
enum MACRO_DRIVER_PORTION {DRIVER_PORTION_MUST_BE_NONPAGED = 0xD3,};
enum MACRO_DTV_MMIMessage {DTV_MMIMessage_Open = 0,DTV_MMIMessage_Close = 1,DTV_Entitlement_CanDecrypt = 0,DTV_Entitlement_NotEntitled = 1,DTV_Entitlement_TechnicalFailure = 2,};
enum MACRO_ENABLE_DISABLE {ENABLE_DISABLE_AUTO_OFFLINE = 0xDB,};
enum MACRO_ENABLE_OFFLINE {ENABLE_OFFLINE_DIAGS_OUT_Success_ID = 1,};
enum MACRO_ERROR_AUDITING {ERROR_AUDITING_DISABLED = 0xC0090001,ERROR_ALL_SIDS_FILTERED = 0xC0090002,ERROR_BIZRULES_NOT_ENABLED = 0xC0090003,};
enum MACRO_FILE_ATTRIBUTE {FILE_ATTRIBUTE_DEDICATED = 256,};
enum MACRO_FILE_REMOVABLE {FILE_REMOVABLE_MEDIA = 0x1,FILE_READ_ONLY_DEVICE = 0x2,FILE_FLOPPY_DISKETTE = 0x4,FILE_WRITE_ONCE_MEDIA = 0x8,FILE_REMOTE_DEVICE = 0x10,FILE_DEVICE_IS_MOUNTED = 0x20,FILE_VIRTUAL_VOLUME = 0x40,FILE_AUTOGENERATED_DEVICE_NAME = 0x80,FILE_DEVICE_SECURE_OPEN = 0x100,FILE_CHARACTERISTIC_PNP_DEVICE = 0x800,FILE_CHARACTERISTIC_TS_DEVICE = 0x1000,FILE_CHARACTERISTIC_WEBDAV_DEVICE = 0x2000,FILE_CHARACTERISTIC_CSV = 0x10000,FILE_DEVICE_ALLOW_APPCONTAINER_TRAVERSAL = 0x20000,FILE_PORTABLE_DEVICE = 0x40000,};
enum MACRO_FLTFL_CALLBACK {FLTFL_CALLBACK_DATA_REISSUE_MASK = 0xFFFF,FLTFL_CALLBACK_DATA_IRP_OPERATION = 0x1,FLTFL_CALLBACK_DATA_FAST_IO_OPERATION = 0x2,FLTFL_CALLBACK_DATA_FS_FILTER_OPERATION = 0x4,FLTFL_CALLBACK_DATA_SYSTEM_BUFFER = 0x8,FLTFL_CALLBACK_DATA_GENERATED_IO = 0x10000,FLTFL_CALLBACK_DATA_REISSUED_IO = 0x20000,FLTFL_CALLBACK_DATA_DRAINING_IO = 0x40000,FLTFL_CALLBACK_DATA_POST_OPERATION = 0x80000,FLTFL_CALLBACK_DATA_NEW_SYSTEM_BUFFER = 0x100000,FLTFL_CALLBACK_DATA_DIRTY = 0x80000000,};
enum MACRO_FLTFL_INSTANCE {FLTFL_INSTANCE_SETUP_AUTOMATIC_ATTACHMENT = 0x1,FLTFL_INSTANCE_SETUP_MANUAL_ATTACHMENT = 0x2,FLTFL_INSTANCE_SETUP_NEWLY_MOUNTED_VOLUME = 0x4,FLTFL_INSTANCE_SETUP_DETACHED_VOLUME = 0x8,FLTFL_INSTANCE_TEARDOWN_MANUAL = 0x1,FLTFL_INSTANCE_TEARDOWN_FILTER_UNLOAD = 0x2,FLTFL_INSTANCE_TEARDOWN_MANDATORY_FILTER_UNLOAD = 0x4,FLTFL_INSTANCE_TEARDOWN_VOLUME_DISMOUNT = 0x8,FLTFL_INSTANCE_TEARDOWN_INTERNAL_ERROR = 0x10,FLTFL_POST_OPERATION_DRAINING = 0x1,FLTFL_OPERATION_REGISTRATION_SKIP_PAGING_IO = 0x1,FLTFL_OPERATION_REGISTRATION_SKIP_CACHED_IO = 0x2,FLTFL_OPERATION_REGISTRATION_SKIP_NON_DASD_IO = 0x4,FLTFL_FILTER_UNLOAD_MANDATORY = 0x1,FLTFL_NORMALIZE_NAME_CASE_SENSITIVE = 0x1,FLTFL_NORMALIZE_NAME_DESTINATION_FILE_NAME = 0x2,};
enum MACRO_FLUSH_MULTIPLE {FLUSH_MULTIPLE_MAXIMUM = 32,};
enum MACRO_FSCTL_MAILSLOT {FSCTL_MAILSLOT_PEEK = 802819,};
enum MACRO_GET_ALL_POLICY {GET_ALL_POLICY_OUT_Status_ID = 1,GET_ALL_POLICY_OUT_Count_ID = 2,GET_ALL_POLICY_OUT_Length_ID = 3,GET_ALL_POLICY_OUT_Values_ID = 4,};
enum MACRO_GICDISTRIBUTOR {GICDISTRIBUTOR = 12,};
enum MACRO_GetEventBuffer {GetEventBuffer = 18,};
enum MACRO_GetFC3MgmtInfo {GetFC3MgmtInfo = 7,};
enum MACRO_HBAFC3MgmtInfo {HBAFC3MgmtInfo_UniqueAdapterId_ID = 1,HBAFC3MgmtInfo_wwn_ID = 2,HBAFC3MgmtInfo_unittype_ID = 3,HBAFC3MgmtInfo_PortId_ID = 4,HBAFC3MgmtInfo_NumberOfAttachedNodes_ID = 5,HBAFC3MgmtInfo_IPVersion_ID = 6,HBAFC3MgmtInfo_UDPPort_ID = 7,HBAFC3MgmtInfo_IPAddress_ID = 8,HBAFC3MgmtInfo_reserved_ID = 9,HBAFC3MgmtInfo_TopologyDiscoveryFlags_ID = 10,HBAFC3MgmtInfo_reserved1_ID = 11,};
enum MACRO_HOST_DATASTORE {HOST_DATASTORE_UPLOAD = 12,HOST_DATASTORE_DOWNLOAD = 13,};
enum MACRO_IMAGE_DOWNLOAD {IMAGE_DOWNLOAD = 11,};
enum MACRO_IMAGE_SEPARATE {IMAGE_SEPARATE_DEBUG_FLAGS_MASK = 0x8000,IMAGE_SEPARATE_DEBUG_MISMATCH = 0x8000,};
enum MACRO_INTERNAL_ERROR {XNS_INTERNAL_ERROR = 0x57,VOLMGRX_INTERNAL_ERROR = 0x58,};
enum MACRO_INVALID_DRIVER {INVALID_DRIVER_HANDLE = 0x11F,};
enum MACRO_INVALID_HANDLE {INVALID_HANDLE_VALUE = -1,};
enum MACRO_INVALID_KERNEL {INVALID_KERNEL_HANDLE = 0x93,};
enum MACRO_INVALID_REGION {INVALID_REGION_OR_SEGMENT = 0x99,};
enum MACRO_IOCTL_ACPI_GET {IOCTL_ACPI_GET_DEVICE_INFORMATION_SIGNATURE = 1248421185,};
enum MACRO_IOCTL_DISK_ARE {IOCTL_DISK_ARE_VOLUMES_READY = 0x7421C,IOCTL_DISK_VOLUMES_ARE_READY = 0x7C220,IOCTL_DISK_GET_PERFORMANCE_INFO = 0x70224,IOCTL_DISK_SIMBAD = 0x7D000,IOCTL_CDROM_BASE = 0x2,IOCTL_CDROM_UNLOAD_DRIVER = 0x25008,IOCTL_CDROM_READ_TOC = 0x24000,IOCTL_CDROM_SEEK_AUDIO_MSF = 0x24004,IOCTL_CDROM_STOP_AUDIO = 0x24008,IOCTL_CDROM_PAUSE_AUDIO = 0x2400C,IOCTL_CDROM_RESUME_AUDIO = 0x24010,IOCTL_CDROM_GET_VOLUME = 0x24014,IOCTL_CDROM_PLAY_AUDIO_MSF = 0x24018,IOCTL_CDROM_SET_VOLUME = 0x24028,IOCTL_CDROM_READ_Q_CHANNEL = 0x2402C,};
enum MACRO_IOCTL_DISK_GET {IOCTL_DISK_GET_PARTITION_INFO_EX = 0x70048,IOCTL_DISK_SET_PARTITION_INFO_EX = 0x7C04C,IOCTL_DISK_GET_DRIVE_LAYOUT_EX = 0x70050,IOCTL_DISK_SET_DRIVE_LAYOUT_EX = 0x7C054,IOCTL_DISK_CREATE_DISK = 0x7C058,IOCTL_DISK_GET_LENGTH_INFO = 0x7405C,IOCTL_DISK_GET_DRIVE_GEOMETRY_EX = 0x700A0,IOCTL_DISK_REASSIGN_BLOCKS_EX = 0x7C0A4,IOCTL_DISK_UPDATE_DRIVE_SIZE = 0x7C0C8,IOCTL_DISK_GROW_PARTITION = 0x7C0D0,IOCTL_DISK_GET_CACHE_INFORMATION = 0x740D4,IOCTL_DISK_SET_CACHE_INFORMATION = 0x7C0D8,};
enum MACRO_IOCTL_INTERNAL {IOCTL_INTERNAL_KEYBOARD_CONNECT = 0xB0203,IOCTL_INTERNAL_KEYBOARD_DISCONNECT = 0xB0403,IOCTL_INTERNAL_KEYBOARD_ENABLE = 0xB0803,IOCTL_INTERNAL_KEYBOARD_DISABLE = 0xB1003,IOCTL_INTERNAL_MOUSE_CONNECT = 0xF0203,IOCTL_INTERNAL_MOUSE_DISCONNECT = 0xF0403,IOCTL_INTERNAL_MOUSE_ENABLE = 0xF0803,IOCTL_INTERNAL_MOUSE_DISABLE = 0xF1003,};
enum MACRO_IOCTL_KEYBOARD {IOCTL_KEYBOARD_QUERY_ATTRIBUTES = 0xB0000,IOCTL_KEYBOARD_SET_TYPEMATIC = 0xB0004,IOCTL_KEYBOARD_SET_INDICATORS = 0xB0008,IOCTL_KEYBOARD_QUERY_TYPEMATIC = 0xB0020,IOCTL_KEYBOARD_QUERY_INDICATORS = 0xB0040,IOCTL_KEYBOARD_QUERY_INDICATOR_TRANSLATION = 0xB0080,IOCTL_KEYBOARD_INSERT_DATA = 0xB0100,IOCTL_KEYBOARD_QUERY_IME_STATUS = 0xB1000,IOCTL_KEYBOARD_SET_IME_STATUS = 0xB1004,};
enum MACRO_IOCTL_MOUNTMGR {IOCTL_MOUNTMGR_CREATE_POINT = 7192576,IOCTL_MOUNTMGR_DELETE_POINTS = 7192580,IOCTL_MOUNTMGR_QUERY_POINTS = 7143432,IOCTL_MOUNTMGR_DELETE_POINTS_DBONLY = 7192588,IOCTL_MOUNTMGR_NEXT_DRIVE_LETTER = 7192592,IOCTL_MOUNTMGR_AUTO_DL_ASSIGNMENTS = 7192596,IOCTL_MOUNTMGR_VOLUME_MOUNT_POINT_CREATED = 7192600,IOCTL_MOUNTMGR_VOLUME_MOUNT_POINT_DELETED = 7192604,IOCTL_MOUNTMGR_CHANGE_NOTIFY = 7159840,IOCTL_MOUNTMGR_KEEP_LINKS_WHEN_OFFLINE = 7192612,IOCTL_MOUNTMGR_CHECK_UNPROCESSED_VOLUMES = 7159848,IOCTL_MOUNTMGR_VOLUME_ARRIVAL_NOTIFICATION = 7159852,IOCTL_MOUNTDEV_QUERY_DEVICE_NAME = 5046280,IOCTL_MOUNTMGR_QUERY_DOS_VOLUME_PATH = 7143472,IOCTL_MOUNTMGR_QUERY_DOS_VOLUME_PATHS = 7143476,IOCTL_MOUNTMGR_SCRUB_REGISTRY = 7192632,IOCTL_MOUNTMGR_QUERY_AUTO_MOUNT = 7143484,IOCTL_MOUNTMGR_SET_AUTO_MOUNT = 7192640,IOCTL_MOUNTMGR_BOOT_DL_ASSIGNMENT = 7192644,IOCTL_MOUNTMGR_TRACELOG_CACHE = 7159880,IOCTL_MOUNTMGR_PREPARE_VOLUME_DELETE = 7192652,IOCTL_MOUNTMGR_CANCEL_VOLUME_DELETE = 7192656,IOCTL_MOUNTDEV_QUERY_UNIQUE_ID = 5046272,IOCTL_MOUNTDEV_QUERY_SUGGESTED_LINK_NAME = 5046284,IOCTL_MOUNTDEV_LINK_CREATED = 5095440,IOCTL_MOUNTDEV_LINK_DELETED = 5095444,IOCTL_MOUNTDEV_QUERY_STABLE_GUID = 5046296,};
enum MACRO_IP_MIB_RTTABLE {IP_MIB_RTTABLE_ENTRY_ID_EX = 0x103,IP_INTFC_FLAG_P2P = 0x1,IP_INTFC_FLAG_P2MP = 0x2,IP_INTFC_FLAG_UNIDIRECTIONAL = 0x4,IP_INTFC_INFO_ID = 0x103,IP_MIB_SINGLE_RT_ENTRY_ID = 0x104,IP_GET_BEST_SOURCE = 0x105,};
enum MACRO_IP_UNSPECIFIED {IP_UNSPECIFIED_HOP_LIMIT = -1,IP_PROTECTION_LEVEL = 23,};
enum MACRO_InjectErrorRtn {InjectErrorRtn = 2,};
enum MACRO_KIP0PCRADDRESS {KIP0PCRADDRESS = 0xFFDFF000,};
enum MACRO_LINEANSWERMODE {LINEANSWERMODE_NONE = 0x1,LINEANSWERMODE_DROP = 0x2,LINEANSWERMODE_HOLD = 0x4,};
enum MACRO_LINEBEARERMODE {LINEBEARERMODE_VOICE = 0x1,LINEBEARERMODE_SPEECH = 0x2,LINEBEARERMODE_MULTIUSE = 0x4,LINEBEARERMODE_DATA = 0x8,LINEBEARERMODE_ALTSPEECHDATA = 0x10,LINEBEARERMODE_NONCALLSIGNALING = 0x20,LINEBEARERMODE_PASSTHROUGH = 0x40,};
enum MACRO_LINECALLORIGIN {LINECALLORIGIN_OUTBOUND = 0x1,LINECALLORIGIN_INTERNAL = 0x2,LINECALLORIGIN_EXTERNAL = 0x4,LINECALLORIGIN_UNKNOWN = 0x10,LINECALLORIGIN_UNAVAIL = 0x20,LINECALLORIGIN_CONFERENCE = 0x40,LINECALLORIGIN_INBOUND = 0x80,};
enum MACRO_LINECALLREASON {LINECALLREASON_DIRECT = 0x1,LINECALLREASON_FWDBUSY = 0x2,LINECALLREASON_FWDNOANSWER = 0x4,LINECALLREASON_FWDUNCOND = 0x8,LINECALLREASON_PICKUP = 0x10,LINECALLREASON_UNPARK = 0x20,LINECALLREASON_REDIRECT = 0x40,LINECALLREASON_CALLCOMPLETION = 0x80,LINECALLREASON_TRANSFER = 0x100,LINECALLREASON_REMINDER = 0x200,LINECALLREASON_UNKNOWN = 0x400,LINECALLREASON_UNAVAIL = 0x800,LINECALLREASON_INTRUDE = 0x1000,LINECALLREASON_PARKED = 0x2000,};
enum MACRO_LINECALLSELECT {LINECALLSELECT_LINE = 0x1,LINECALLSELECT_ADDRESS = 0x2,LINECALLSELECT_CALL = 0x4,};
enum MACRO_LINEGATHERTERM {LINEGATHERTERM_BUFFERFULL = 0x1,LINEGATHERTERM_TERMDIGIT = 0x2,LINEGATHERTERM_FIRSTTIMEOUT = 0x4,LINEGATHERTERM_INTERTIMEOUT = 0x8,LINEGATHERTERM_CANCEL = 0x10,};
enum MACRO_LoginOtherFail {LoginOtherFail = 0,LoginAuthFail = 1,LoginAuthenticateFail = 2,};
enum MACRO_MAXIMUM_NUMBER {MAXIMUM_NUMBER_TRACKS = 100,MAXIMUM_CDROM_SIZE = 804,};
enum MACRO_MAXIMUM_XSTATE {MAXIMUM_XSTATE_FEATURES = 64,};
enum MACRO_MM_SYSTEM_VIEW {MM_SYSTEM_VIEW_EXCEPTIONS_FOR_INPAGE_ERRORS = 0x1,};
enum MACRO_MPIOMoveDevice {MPIOMoveDevice = 1,};
enum MACRO_MSFC_LinkEvent {MSFC_LinkEvent_EventType_ID = 1,MSFC_LinkEvent_AdapterWWN_ID = 2,MSFC_LinkEvent_RLIRBufferSize_ID = 3,MSFC_LinkEvent_RLIRBuffer_ID = 4,MSFC_FCAdapterHBAAttributes_UniqueAdapterId_ID = 1,MSFC_FCAdapterHBAAttributes_HBAStatus_ID = 2,MSFC_FCAdapterHBAAttributes_NodeWWN_ID = 3,MSFC_FCAdapterHBAAttributes_VendorSpecificID_ID = 4,MSFC_FCAdapterHBAAttributes_NumberOfPorts_ID = 5,MSFC_FCAdapterHBAAttributes_Manufacturer_ID = 6,MSFC_FCAdapterHBAAttributes_SerialNumber_ID = 7,MSFC_FCAdapterHBAAttributes_Model_ID = 8,MSFC_FCAdapterHBAAttributes_ModelDescription_ID = 9,MSFC_FCAdapterHBAAttributes_NodeSymbolicName_ID = 10,MSFC_FCAdapterHBAAttributes_HardwareVersion_ID = 11,MSFC_FCAdapterHBAAttributes_DriverVersion_ID = 12,MSFC_FCAdapterHBAAttributes_OptionROMVersion_ID = 13,MSFC_FCAdapterHBAAttributes_FirmwareVersion_ID = 14,MSFC_FCAdapterHBAAttributes_DriverName_ID = 15,MSFC_FCAdapterHBAAttributes_MfgDomain_ID = 16,MSFC_HBAPortAttributesResults_NodeWWN_ID = 1,MSFC_HBAPortAttributesResults_PortWWN_ID = 2,MSFC_HBAPortAttributesResults_PortFcId_ID = 3,MSFC_HBAPortAttributesResults_PortType_ID = 4,MSFC_HBAPortAttributesResults_PortState_ID = 5,MSFC_HBAPortAttributesResults_PortSupportedClassofService_ID = 6,MSFC_HBAPortAttributesResults_PortSupportedFc4Types_ID = 7,MSFC_HBAPortAttributesResults_PortActiveFc4Types_ID = 8,MSFC_HBAPortAttributesResults_PortSupportedSpeed_ID = 9,MSFC_HBAPortAttributesResults_PortSpeed_ID = 10,MSFC_HBAPortAttributesResults_PortMaxFrameSize_ID = 11,MSFC_HBAPortAttributesResults_FabricName_ID = 12,MSFC_HBAPortAttributesResults_NumberofDiscoveredPorts_ID = 13,MSFC_FibrePortHBAAttributes_UniquePortId_ID = 1,MSFC_FibrePortHBAAttributes_HBAStatus_ID = 2,MSFC_FibrePortHBAAttributes_Attributes_ID = 3,MSFC_FibrePortHBAStatistics_UniquePortId_ID = 1,MSFC_FibrePortHBAStatistics_HBAStatus_ID = 2,MSFC_FibrePortHBAStatistics_Statistics_ID = 3,};
enum MACRO_MULTIPROCESSOR {MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED = 0x3E,};
enum MACRO_NAME_MAX_CHARS {FILTER_NAME_MAX_CHARS = 255,VOLUME_NAME_MAX_CHARS = 1024,INSTANCE_NAME_MAX_CHARS = 255,};
enum MACRO_NO_MORE_SYSTEM {NO_MORE_SYSTEM_PTES = 0x3F,};
enum MACRO_OBSOLETE_IOCTL {OBSOLETE_IOCTL_STORAGE_RESET_BUS = 0x2DD000,OBSOLETE_IOCTL_STORAGE_RESET_DEVICE = 0x2DD004,};
enum MACRO_OID_DOT11_ATIM {OID_DOT11_ATIM_WINDOW = 218170122,OID_DOT11_SCAN_REQUEST = 218170123,OID_DOT11_CURRENT_PHY_TYPE = 218170124,};
enum MACRO_OID_DOT11_DATA {OID_DOT11_DATA_RATE_MAPPING_TABLE = 234946967,};
enum MACRO_OID_DOT11_ENUM {OID_DOT11_ENUM_BSS_LIST = 234946937,};
enum MACRO_OID_DOT11_IBSS {OID_DOT11_IBSS_PARAMS = 234946971,};
enum MACRO_OID_DOT11_JOIN {OID_DOT11_JOIN_REQUEST = 218170125,};
enum MACRO_OID_DOT11_SAFE {OID_DOT11_SAFE_MODE_ENABLED = 234946973,OID_DOT11_HIDDEN_NETWORK_ENABLED = 234946974,OID_DOT11_ASSOCIATION_PARAMS = 234946975,};
enum MACRO_OID_DOT11_TEMP {OID_DOT11_TEMP_TYPE = 218170152,OID_DOT11_CURRENT_TX_ANTENNA = 218170153,OID_DOT11_DIVERSITY_SUPPORT = 218170154,OID_DOT11_CURRENT_RX_ANTENNA = 218170155,OID_DOT11_SUPPORTED_POWER_LEVELS = 218170156,OID_DOT11_CURRENT_TX_POWER_LEVEL = 218170157,OID_DOT11_HOP_TIME = 218170158,OID_DOT11_CURRENT_CHANNEL_NUMBER = 218170159,OID_DOT11_MAX_DWELL_TIME = 218170160,OID_DOT11_CURRENT_DWELL_TIME = 218170161,OID_DOT11_CURRENT_SET = 218170162,OID_DOT11_CURRENT_PATTERN = 218170163,OID_DOT11_CURRENT_INDEX = 218170164,OID_DOT11_CURRENT_CHANNEL = 218170165,OID_DOT11_CCA_MODE_SUPPORTED = 218170166,};
enum MACRO_PROCESSOR_PERF {PROCESSOR_PERF_BOOST_POLICY_DISABLED = 0,PROCESSOR_PERF_BOOST_POLICY_MAX = 100,PROCESSOR_PERF_BOOST_MODE_DISABLED = 0,PROCESSOR_PERF_BOOST_MODE_ENABLED = 1,PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE = 2,PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED = 3,PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE = 4,PROCESSOR_PERF_BOOST_MODE_MAX = 4,};
enum MACRO_RESOURCE_OWNER {RESOURCE_OWNER_POINTER_INVALID = 0x132,};
enum MACRO_RPC_NT_INVALID {RPC_NT_INVALID_OBJECT = 0xC002004D,RPC_NT_NO_INTERFACES = 0xC002004F,RPC_NT_CALL_CANCELLED = 0xC0020050,RPC_NT_BINDING_INCOMPLETE = 0xC0020051,RPC_NT_COMM_FAILURE = 0xC0020052,RPC_NT_UNSUPPORTED_AUTHN_LEVEL = 0xC0020053,RPC_NT_NO_PRINC_NAME = 0xC0020054,RPC_NT_NOT_RPC_ERROR = 0xC0020055,RPC_NT_UUID_LOCAL_ONLY = 0x40020056,RPC_NT_SEC_PKG_ERROR = 0xC0020057,RPC_NT_NOT_CANCELLED = 0xC0020058,RPC_NT_INVALID_ES_ACTION = 0xC0030059,RPC_NT_WRONG_ES_VERSION = 0xC003005A,RPC_NT_WRONG_STUB_VERSION = 0xC003005B,RPC_NT_INVALID_PIPE_OBJECT = 0xC003005C,RPC_NT_INVALID_PIPE_OPERATION = 0xC003005D,RPC_NT_WRONG_PIPE_VERSION = 0xC003005E,RPC_NT_PIPE_CLOSED = 0xC003005F,RPC_NT_PIPE_DISCIPLINE_ERROR = 0xC0030060,RPC_NT_PIPE_EMPTY = 0xC0030061,RPC_NT_INVALID_ASYNC_HANDLE = 0xC0020062,RPC_NT_INVALID_ASYNC_CALL = 0xC0020063,RPC_NT_PROXY_ACCESS_DENIED = 0xC0020064,RPC_NT_COOKIE_AUTH_FAILED = 0xC0020065,RPC_NT_SEND_INCOMPLETE = 0x400200AF,};
enum MACRO_RX_TOPLEVELIRP {RX_TOPLEVELIRP_CONTEXT_SIGNATURE = 1280604242,};
enum MACRO_ReadLogSectors {ReadLogSectors = 6,};
enum MACRO_RemoveLink_OUT {RemoveLink_OUT_HBAStatus_ID = 1,MSFC_TM_tm_sec_ID = 1,MSFC_TM_tm_min_ID = 2,MSFC_TM_tm_hour_ID = 3,MSFC_TM_tm_mday_ID = 4,MSFC_TM_tm_mon_ID = 5,MSFC_TM_tm_year_ID = 6,MSFC_TM_tm_wday_ID = 7,MSFC_TM_tm_yday_ID = 8,MSFC_TM_tm_isdst_ID = 9,};
enum MACRO_RenamedOldName {RenamedOldName = 3,RenamedNewName = 4,};
enum MACRO_SERVICE_ACTION {SERVICE_ACTION_XDWRITE = 0x4,SERVICE_ACTION_XPWRITE = 0x6,SERVICE_ACTION_XDWRITEREAD = 0x7,SERVICE_ACTION_WRITE = 0xB,SERVICE_ACTION_WRITE_VERIFY = 0xC,SERVICE_ACTION_WRITE_SAME = 0xD,SERVICE_ACTION_ORWRITE = 0xE,SERVICE_ACTION_POPULATE_TOKEN = 0x10,SERVICE_ACTION_WRITE_USING_TOKEN = 0x11,SERVICE_ACTION_RECEIVE_TOKEN_INFORMATION = 0x7,SERVICE_ACTION_READ_CAPACITY16 = 0x10,SERVICE_ACTION_GET_LBA_STATUS = 0x12,};
enum MACRO_SE_UNSOLICITED {SE_UNSOLICITED_INPUT_PRIVILEGE = 6,};
enum MACRO_SMCLIB_VERSION {SMCLIB_VERSION = 0x150,SMCLIB_VERSION_REQUIRED = 0x100,};
enum MACRO_STATUS_CLUSTER {STATUS_CLUSTER_NODE_ALREADY_UP = 0x80130001,STATUS_CLUSTER_NODE_ALREADY_DOWN = 0x80130002,STATUS_CLUSTER_NETWORK_ALREADY_ONLINE = 0x80130003,STATUS_CLUSTER_NETWORK_ALREADY_OFFLINE = 0x80130004,STATUS_CLUSTER_NODE_ALREADY_MEMBER = 0x80130005,STATUS_FLT_BUFFER_TOO_SMALL = 0x801C0001,STATUS_FVE_PARTIAL_METADATA = 0x80210001,STATUS_FVE_TRANSIENT_STATE = 0x80210002,STATUS_UNSUCCESSFUL = 0xC0000001,STATUS_NOT_IMPLEMENTED = 0xC0000002,STATUS_INVALID_INFO_CLASS = 0xC0000003,STATUS_INFO_LENGTH_MISMATCH = 0xC0000004,STATUS_ACCESS_VIOLATION = 0xC0000005,STATUS_IN_PAGE_ERROR = 0xC0000006,STATUS_PAGEFILE_QUOTA = 0xC0000007,STATUS_INVALID_HANDLE = 0xC0000008,STATUS_BAD_INITIAL_STACK = 0xC0000009,STATUS_BAD_INITIAL_PC = 0xC000000A,STATUS_INVALID_CID = 0xC000000B,STATUS_TIMER_NOT_CANCELED = 0xC000000C,STATUS_INVALID_PARAMETER = 0xC000000D,STATUS_NO_SUCH_DEVICE = 0xC000000E,STATUS_NO_SUCH_FILE = 0xC000000F,STATUS_INVALID_DEVICE_REQUEST = 0xC0000010,STATUS_END_OF_FILE = 0xC0000011,STATUS_WRONG_VOLUME = 0xC0000012,STATUS_NO_MEDIA_IN_DEVICE = 0xC0000013,STATUS_UNRECOGNIZED_MEDIA = 0xC0000014,STATUS_NONEXISTENT_SECTOR = 0xC0000015,STATUS_MORE_PROCESSING_REQUIRED = 0xC0000016,STATUS_NO_MEMORY = 0xC0000017,STATUS_CONFLICTING_ADDRESSES = 0xC0000018,STATUS_NOT_MAPPED_VIEW = 0xC0000019,STATUS_UNABLE_TO_FREE_VM = 0xC000001A,STATUS_UNABLE_TO_DELETE_SECTION = 0xC000001B,STATUS_INVALID_SYSTEM_SERVICE = 0xC000001C,STATUS_ILLEGAL_INSTRUCTION = 0xC000001D,STATUS_INVALID_LOCK_SEQUENCE = 0xC000001E,STATUS_INVALID_VIEW_SIZE = 0xC000001F,STATUS_INVALID_FILE_FOR_SECTION = 0xC0000020,STATUS_ALREADY_COMMITTED = 0xC0000021,STATUS_ACCESS_DENIED = 0xC0000022,STATUS_BUFFER_TOO_SMALL = 0xC0000023,STATUS_OBJECT_TYPE_MISMATCH = 0xC0000024,STATUS_NONCONTINUABLE_EXCEPTION = 0xC0000025,STATUS_INVALID_DISPOSITION = 0xC0000026,STATUS_UNWIND = 0xC0000027,STATUS_BAD_STACK = 0xC0000028,STATUS_INVALID_UNWIND_TARGET = 0xC0000029,STATUS_NOT_LOCKED = 0xC000002A,STATUS_PARITY_ERROR = 0xC000002B,STATUS_UNABLE_TO_DECOMMIT_VM = 0xC000002C,STATUS_NOT_COMMITTED = 0xC000002D,STATUS_INVALID_PORT_ATTRIBUTES = 0xC000002E,STATUS_PORT_MESSAGE_TOO_LONG = 0xC000002F,STATUS_INVALID_PARAMETER_MIX = 0xC0000030,STATUS_INVALID_QUOTA_LOWER = 0xC0000031,STATUS_DISK_CORRUPT_ERROR = 0xC0000032,STATUS_OBJECT_NAME_INVALID = 0xC0000033,STATUS_OBJECT_NAME_NOT_FOUND = 0xC0000034,STATUS_OBJECT_NAME_COLLISION = 0xC0000035,STATUS_PORT_DISCONNECTED = 0xC0000037,STATUS_DEVICE_ALREADY_ATTACHED = 0xC0000038,STATUS_OBJECT_PATH_INVALID = 0xC0000039,STATUS_OBJECT_PATH_NOT_FOUND = 0xC000003A,STATUS_OBJECT_PATH_SYNTAX_BAD = 0xC000003B,STATUS_DATA_OVERRUN = 0xC000003C,STATUS_DATA_LATE_ERROR = 0xC000003D,STATUS_DATA_ERROR = 0xC000003E,STATUS_CRC_ERROR = 0xC000003F,STATUS_SECTION_TOO_BIG = 0xC0000040,STATUS_PORT_CONNECTION_REFUSED = 0xC0000041,STATUS_INVALID_PORT_HANDLE = 0xC0000042,STATUS_SHARING_VIOLATION = 0xC0000043,STATUS_QUOTA_EXCEEDED = 0xC0000044,STATUS_INVALID_PAGE_PROTECTION = 0xC0000045,STATUS_MUTANT_NOT_OWNED = 0xC0000046,STATUS_SEMAPHORE_LIMIT_EXCEEDED = 0xC0000047,STATUS_PORT_ALREADY_SET = 0xC0000048,STATUS_SECTION_NOT_IMAGE = 0xC0000049,STATUS_SUSPEND_COUNT_EXCEEDED = 0xC000004A,STATUS_THREAD_IS_TERMINATING = 0xC000004B,STATUS_BAD_WORKING_SET_LIMIT = 0xC000004C,STATUS_INCOMPATIBLE_FILE_MAP = 0xC000004D,STATUS_SECTION_PROTECTION = 0xC000004E,STATUS_EAS_NOT_SUPPORTED = 0xC000004F,STATUS_EA_TOO_LARGE = 0xC0000050,STATUS_NONEXISTENT_EA_ENTRY = 0xC0000051,STATUS_NO_EAS_ON_FILE = 0xC0000052,STATUS_EA_CORRUPT_ERROR = 0xC0000053,STATUS_FILE_LOCK_CONFLICT = 0xC0000054,STATUS_LOCK_NOT_GRANTED = 0xC0000055,STATUS_DELETE_PENDING = 0xC0000056,STATUS_CTL_FILE_NOT_SUPPORTED = 0xC0000057,STATUS_UNKNOWN_REVISION = 0xC0000058,STATUS_REVISION_MISMATCH = 0xC0000059,STATUS_INVALID_OWNER = 0xC000005A,STATUS_INVALID_PRIMARY_GROUP = 0xC000005B,STATUS_NO_IMPERSONATION_TOKEN = 0xC000005C,STATUS_CANT_DISABLE_MANDATORY = 0xC000005D,STATUS_NO_LOGON_SERVERS = 0xC000005E,STATUS_NO_SUCH_LOGON_SESSION = 0xC000005F,STATUS_NO_SUCH_PRIVILEGE = 0xC0000060,STATUS_PRIVILEGE_NOT_HELD = 0xC0000061,STATUS_INVALID_ACCOUNT_NAME = 0xC0000062,STATUS_USER_EXISTS = 0xC0000063,STATUS_NO_SUCH_USER = 0xC0000064,STATUS_GROUP_EXISTS = 0xC0000065,STATUS_NO_SUCH_GROUP = 0xC0000066,STATUS_MEMBER_IN_GROUP = 0xC0000067,STATUS_MEMBER_NOT_IN_GROUP = 0xC0000068,STATUS_LAST_ADMIN = 0xC0000069,STATUS_WRONG_PASSWORD = 0xC000006A,STATUS_ILL_FORMED_PASSWORD = 0xC000006B,STATUS_PASSWORD_RESTRICTION = 0xC000006C,STATUS_LOGON_FAILURE = 0xC000006D,STATUS_ACCOUNT_RESTRICTION = 0xC000006E,STATUS_INVALID_LOGON_HOURS = 0xC000006F,STATUS_INVALID_WORKSTATION = 0xC0000070,STATUS_PASSWORD_EXPIRED = 0xC0000071,STATUS_ACCOUNT_DISABLED = 0xC0000072,STATUS_NONE_MAPPED = 0xC0000073,STATUS_TOO_MANY_LUIDS_REQUESTED = 0xC0000074,STATUS_LUIDS_EXHAUSTED = 0xC0000075,STATUS_INVALID_SUB_AUTHORITY = 0xC0000076,STATUS_INVALID_ACL = 0xC0000077,STATUS_INVALID_SID = 0xC0000078,STATUS_INVALID_SECURITY_DESCR = 0xC0000079,STATUS_PROCEDURE_NOT_FOUND = 0xC000007A,STATUS_INVALID_IMAGE_FORMAT = 0xC000007B,STATUS_NO_TOKEN = 0xC000007C,STATUS_BAD_INHERITANCE_ACL = 0xC000007D,STATUS_RANGE_NOT_LOCKED = 0xC000007E,STATUS_DISK_FULL = 0xC000007F,STATUS_SERVER_DISABLED = 0xC0000080,STATUS_SERVER_NOT_DISABLED = 0xC0000081,STATUS_TOO_MANY_GUIDS_REQUESTED = 0xC0000082,STATUS_GUIDS_EXHAUSTED = 0xC0000083,STATUS_INVALID_ID_AUTHORITY = 0xC0000084,STATUS_AGENTS_EXHAUSTED = 0xC0000085,STATUS_INVALID_VOLUME_LABEL = 0xC0000086,STATUS_SECTION_NOT_EXTENDED = 0xC0000087,STATUS_NOT_MAPPED_DATA = 0xC0000088,STATUS_RESOURCE_DATA_NOT_FOUND = 0xC0000089,STATUS_RESOURCE_TYPE_NOT_FOUND = 0xC000008A,STATUS_RESOURCE_NAME_NOT_FOUND = 0xC000008B,STATUS_ARRAY_BOUNDS_EXCEEDED = 0xC000008C,STATUS_FLOAT_DENORMAL_OPERAND = 0xC000008D,STATUS_FLOAT_DIVIDE_BY_ZERO = 0xC000008E,STATUS_FLOAT_INEXACT_RESULT = 0xC000008F,STATUS_FLOAT_INVALID_OPERATION = 0xC0000090,STATUS_FLOAT_OVERFLOW = 0xC0000091,STATUS_FLOAT_STACK_CHECK = 0xC0000092,STATUS_FLOAT_UNDERFLOW = 0xC0000093,STATUS_INTEGER_DIVIDE_BY_ZERO = 0xC0000094,STATUS_INTEGER_OVERFLOW = 0xC0000095,STATUS_PRIVILEGED_INSTRUCTION = 0xC0000096,STATUS_TOO_MANY_PAGING_FILES = 0xC0000097,STATUS_FILE_INVALID = 0xC0000098,STATUS_ALLOTTED_SPACE_EXCEEDED = 0xC0000099,STATUS_INSUFFICIENT_RESOURCES = 0xC000009A,STATUS_DFS_EXIT_PATH_FOUND = 0xC000009B,STATUS_DEVICE_DATA_ERROR = 0xC000009C,STATUS_DEVICE_NOT_CONNECTED = 0xC000009D,STATUS_DEVICE_POWER_FAILURE = 0xC000009E,STATUS_FREE_VM_NOT_AT_BASE = 0xC000009F,STATUS_MEMORY_NOT_ALLOCATED = 0xC00000A0,STATUS_WORKING_SET_QUOTA = 0xC00000A1,STATUS_MEDIA_WRITE_PROTECTED = 0xC00000A2,STATUS_DEVICE_NOT_READY = 0xC00000A3,STATUS_INVALID_GROUP_ATTRIBUTES = 0xC00000A4,STATUS_BAD_IMPERSONATION_LEVEL = 0xC00000A5,STATUS_CANT_OPEN_ANONYMOUS = 0xC00000A6,STATUS_BAD_VALIDATION_CLASS = 0xC00000A7,STATUS_BAD_TOKEN_TYPE = 0xC00000A8,STATUS_BAD_MASTER_BOOT_RECORD = 0xC00000A9,STATUS_INSTRUCTION_MISALIGNMENT = 0xC00000AA,STATUS_INSTANCE_NOT_AVAILABLE = 0xC00000AB,STATUS_PIPE_NOT_AVAILABLE = 0xC00000AC,STATUS_INVALID_PIPE_STATE = 0xC00000AD,STATUS_PIPE_BUSY = 0xC00000AE,STATUS_ILLEGAL_FUNCTION = 0xC00000AF,STATUS_PIPE_DISCONNECTED = 0xC00000B0,STATUS_PIPE_CLOSING = 0xC00000B1,STATUS_PIPE_CONNECTED = 0xC00000B2,STATUS_PIPE_LISTENING = 0xC00000B3,STATUS_INVALID_READ_MODE = 0xC00000B4,STATUS_IO_TIMEOUT = 0xC00000B5,STATUS_FILE_FORCED_CLOSED = 0xC00000B6,STATUS_PROFILING_NOT_STARTED = 0xC00000B7,STATUS_PROFILING_NOT_STOPPED = 0xC00000B8,STATUS_COULD_NOT_INTERPRET = 0xC00000B9,STATUS_FILE_IS_A_DIRECTORY = 0xC00000BA,STATUS_NOT_SUPPORTED = 0xC00000BB,STATUS_REMOTE_NOT_LISTENING = 0xC00000BC,STATUS_DUPLICATE_NAME = 0xC00000BD,STATUS_BAD_NETWORK_PATH = 0xC00000BE,STATUS_NETWORK_BUSY = 0xC00000BF,STATUS_DEVICE_DOES_NOT_EXIST = 0xC00000C0,STATUS_TOO_MANY_COMMANDS = 0xC00000C1,STATUS_ADAPTER_HARDWARE_ERROR = 0xC00000C2,STATUS_INVALID_NETWORK_RESPONSE = 0xC00000C3,STATUS_UNEXPECTED_NETWORK_ERROR = 0xC00000C4,STATUS_BAD_REMOTE_ADAPTER = 0xC00000C5,STATUS_PRINT_QUEUE_FULL = 0xC00000C6,STATUS_NO_SPOOL_SPACE = 0xC00000C7,STATUS_PRINT_CANCELLED = 0xC00000C8,STATUS_NETWORK_NAME_DELETED = 0xC00000C9,STATUS_NETWORK_ACCESS_DENIED = 0xC00000CA,STATUS_BAD_DEVICE_TYPE = 0xC00000CB,STATUS_BAD_NETWORK_NAME = 0xC00000CC,STATUS_TOO_MANY_NAMES = 0xC00000CD,STATUS_TOO_MANY_SESSIONS = 0xC00000CE,STATUS_SHARING_PAUSED = 0xC00000CF,STATUS_REQUEST_NOT_ACCEPTED = 0xC00000D0,STATUS_REDIRECTOR_PAUSED = 0xC00000D1,STATUS_NET_WRITE_FAULT = 0xC00000D2,STATUS_PROFILING_AT_LIMIT = 0xC00000D3,STATUS_NOT_SAME_DEVICE = 0xC00000D4,STATUS_FILE_RENAMED = 0xC00000D5,STATUS_VIRTUAL_CIRCUIT_CLOSED = 0xC00000D6,STATUS_NO_SECURITY_ON_OBJECT = 0xC00000D7,STATUS_CANT_WAIT = 0xC00000D8,STATUS_PIPE_EMPTY = 0xC00000D9,STATUS_CANT_ACCESS_DOMAIN_INFO = 0xC00000DA,STATUS_CANT_TERMINATE_SELF = 0xC00000DB,STATUS_INVALID_SERVER_STATE = 0xC00000DC,STATUS_INVALID_DOMAIN_STATE = 0xC00000DD,STATUS_INVALID_DOMAIN_ROLE = 0xC00000DE,STATUS_NO_SUCH_DOMAIN = 0xC00000DF,STATUS_DOMAIN_EXISTS = 0xC00000E0,STATUS_DOMAIN_LIMIT_EXCEEDED = 0xC00000E1,STATUS_OPLOCK_NOT_GRANTED = 0xC00000E2,STATUS_INVALID_OPLOCK_PROTOCOL = 0xC00000E3,STATUS_INTERNAL_DB_CORRUPTION = 0xC00000E4,STATUS_INTERNAL_ERROR = 0xC00000E5,STATUS_GENERIC_NOT_MAPPED = 0xC00000E6,STATUS_BAD_DESCRIPTOR_FORMAT = 0xC00000E7,STATUS_INVALID_USER_BUFFER = 0xC00000E8,STATUS_UNEXPECTED_IO_ERROR = 0xC00000E9,STATUS_UNEXPECTED_MM_CREATE_ERR = 0xC00000EA,STATUS_UNEXPECTED_MM_MAP_ERROR = 0xC00000EB,STATUS_UNEXPECTED_MM_EXTEND_ERR = 0xC00000EC,STATUS_NOT_LOGON_PROCESS = 0xC00000ED,STATUS_LOGON_SESSION_EXISTS = 0xC00000EE,STATUS_INVALID_PARAMETER_1 = 0xC00000EF,STATUS_INVALID_PARAMETER_2 = 0xC00000F0,STATUS_INVALID_PARAMETER_3 = 0xC00000F1,STATUS_INVALID_PARAMETER_4 = 0xC00000F2,STATUS_INVALID_PARAMETER_5 = 0xC00000F3,STATUS_INVALID_PARAMETER_6 = 0xC00000F4,STATUS_INVALID_PARAMETER_7 = 0xC00000F5,STATUS_INVALID_PARAMETER_8 = 0xC00000F6,STATUS_INVALID_PARAMETER_9 = 0xC00000F7,STATUS_INVALID_PARAMETER_10 = 0xC00000F8,STATUS_INVALID_PARAMETER_11 = 0xC00000F9,STATUS_INVALID_PARAMETER_12 = 0xC00000FA,STATUS_REDIRECTOR_NOT_STARTED = 0xC00000FB,STATUS_REDIRECTOR_STARTED = 0xC00000FC,STATUS_STACK_OVERFLOW = 0xC00000FD,STATUS_NO_SUCH_PACKAGE = 0xC00000FE,STATUS_BAD_FUNCTION_TABLE = 0xC00000FF,STATUS_VARIABLE_NOT_FOUND = 0xC0000100,STATUS_DIRECTORY_NOT_EMPTY = 0xC0000101,STATUS_FILE_CORRUPT_ERROR = 0xC0000102,STATUS_NOT_A_DIRECTORY = 0xC0000103,STATUS_BAD_LOGON_SESSION_STATE = 0xC0000104,STATUS_LOGON_SESSION_COLLISION = 0xC0000105,STATUS_NAME_TOO_LONG = 0xC0000106,STATUS_FILES_OPEN = 0xC0000107,STATUS_CONNECTION_IN_USE = 0xC0000108,STATUS_MESSAGE_NOT_FOUND = 0xC0000109,STATUS_PROCESS_IS_TERMINATING = 0xC000010A,STATUS_INVALID_LOGON_TYPE = 0xC000010B,STATUS_NO_GUID_TRANSLATION = 0xC000010C,STATUS_CANNOT_IMPERSONATE = 0xC000010D,STATUS_IMAGE_ALREADY_LOADED = 0xC000010E,STATUS_ABIOS_NOT_PRESENT = 0xC000010F,STATUS_ABIOS_LID_NOT_EXIST = 0xC0000110,STATUS_ABIOS_LID_ALREADY_OWNED = 0xC0000111,STATUS_ABIOS_NOT_LID_OWNER = 0xC0000112,STATUS_ABIOS_INVALID_COMMAND = 0xC0000113,STATUS_ABIOS_INVALID_LID = 0xC0000114,STATUS_ABIOS_SELECTOR_NOT_AVAILABLE = 0xC0000115,STATUS_ABIOS_INVALID_SELECTOR = 0xC0000116,STATUS_NO_LDT = 0xC0000117,STATUS_INVALID_LDT_SIZE = 0xC0000118,STATUS_INVALID_LDT_OFFSET = 0xC0000119,STATUS_INVALID_LDT_DESCRIPTOR = 0xC000011A,STATUS_INVALID_IMAGE_NE_FORMAT = 0xC000011B,STATUS_RXACT_INVALID_STATE = 0xC000011C,STATUS_RXACT_COMMIT_FAILURE = 0xC000011D,STATUS_MAPPED_FILE_SIZE_ZERO = 0xC000011E,STATUS_TOO_MANY_OPENED_FILES = 0xC000011F,STATUS_CANCELLED = 0xC0000120,STATUS_CANNOT_DELETE = 0xC0000121,STATUS_INVALID_COMPUTER_NAME = 0xC0000122,STATUS_FILE_DELETED = 0xC0000123,STATUS_SPECIAL_ACCOUNT = 0xC0000124,STATUS_SPECIAL_GROUP = 0xC0000125,STATUS_SPECIAL_USER = 0xC0000126,STATUS_MEMBERS_PRIMARY_GROUP = 0xC0000127,STATUS_FILE_CLOSED = 0xC0000128,STATUS_TOO_MANY_THREADS = 0xC0000129,STATUS_THREAD_NOT_IN_PROCESS = 0xC000012A,STATUS_TOKEN_ALREADY_IN_USE = 0xC000012B,STATUS_PAGEFILE_QUOTA_EXCEEDED = 0xC000012C,STATUS_COMMITMENT_LIMIT = 0xC000012D,STATUS_INVALID_IMAGE_LE_FORMAT = 0xC000012E,STATUS_INVALID_IMAGE_NOT_MZ = 0xC000012F,STATUS_INVALID_IMAGE_PROTECT = 0xC0000130,STATUS_INVALID_IMAGE_WIN_16 = 0xC0000131,STATUS_LOGON_SERVER_CONFLICT = 0xC0000132,STATUS_TIME_DIFFERENCE_AT_DC = 0xC0000133,STATUS_SYNCHRONIZATION_REQUIRED = 0xC0000134,STATUS_DLL_NOT_FOUND = 0xC0000135,STATUS_OPEN_FAILED = 0xC0000136,STATUS_IO_PRIVILEGE_FAILED = 0xC0000137,STATUS_ORDINAL_NOT_FOUND = 0xC0000138,STATUS_ENTRYPOINT_NOT_FOUND = 0xC0000139,STATUS_CONTROL_C_EXIT = 0xC000013A,STATUS_LOCAL_DISCONNECT = 0xC000013B,STATUS_REMOTE_DISCONNECT = 0xC000013C,STATUS_REMOTE_RESOURCES = 0xC000013D,STATUS_LINK_FAILED = 0xC000013E,STATUS_LINK_TIMEOUT = 0xC000013F,STATUS_INVALID_CONNECTION = 0xC0000140,STATUS_INVALID_ADDRESS = 0xC0000141,STATUS_DLL_INIT_FAILED = 0xC0000142,STATUS_MISSING_SYSTEMFILE = 0xC0000143,STATUS_UNHANDLED_EXCEPTION = 0xC0000144,STATUS_APP_INIT_FAILURE = 0xC0000145,STATUS_PAGEFILE_CREATE_FAILED = 0xC0000146,STATUS_NO_PAGEFILE = 0xC0000147,STATUS_INVALID_LEVEL = 0xC0000148,STATUS_WRONG_PASSWORD_CORE = 0xC0000149,STATUS_ILLEGAL_FLOAT_CONTEXT = 0xC000014A,STATUS_PIPE_BROKEN = 0xC000014B,STATUS_REGISTRY_CORRUPT = 0xC000014C,STATUS_REGISTRY_IO_FAILED = 0xC000014D,STATUS_NO_EVENT_PAIR = 0xC000014E,STATUS_UNRECOGNIZED_VOLUME = 0xC000014F,STATUS_SERIAL_NO_DEVICE_INITED = 0xC0000150,STATUS_NO_SUCH_ALIAS = 0xC0000151,STATUS_MEMBER_NOT_IN_ALIAS = 0xC0000152,STATUS_MEMBER_IN_ALIAS = 0xC0000153,STATUS_ALIAS_EXISTS = 0xC0000154,STATUS_LOGON_NOT_GRANTED = 0xC0000155,STATUS_TOO_MANY_SECRETS = 0xC0000156,STATUS_SECRET_TOO_LONG = 0xC0000157,STATUS_INTERNAL_DB_ERROR = 0xC0000158,STATUS_FULLSCREEN_MODE = 0xC0000159,STATUS_TOO_MANY_CONTEXT_IDS = 0xC000015A,STATUS_LOGON_TYPE_NOT_GRANTED = 0xC000015B,STATUS_NOT_REGISTRY_FILE = 0xC000015C,STATUS_NT_CROSS_ENCRYPTION_REQUIRED = 0xC000015D,STATUS_DOMAIN_CTRLR_CONFIG_ERROR = 0xC000015E,STATUS_FT_MISSING_MEMBER = 0xC000015F,STATUS_ILL_FORMED_SERVICE_ENTRY = 0xC0000160,STATUS_ILLEGAL_CHARACTER = 0xC0000161,STATUS_UNMAPPABLE_CHARACTER = 0xC0000162,STATUS_UNDEFINED_CHARACTER = 0xC0000163,STATUS_FLOPPY_VOLUME = 0xC0000164,STATUS_FLOPPY_ID_MARK_NOT_FOUND = 0xC0000165,STATUS_FLOPPY_WRONG_CYLINDER = 0xC0000166,STATUS_FLOPPY_UNKNOWN_ERROR = 0xC0000167,STATUS_FLOPPY_BAD_REGISTERS = 0xC0000168,STATUS_DISK_RECALIBRATE_FAILED = 0xC0000169,STATUS_DISK_OPERATION_FAILED = 0xC000016A,STATUS_DISK_RESET_FAILED = 0xC000016B,STATUS_SHARED_IRQ_BUSY = 0xC000016C,STATUS_FT_ORPHANING = 0xC000016D,STATUS_BIOS_FAILED_TO_CONNECT_INTERRUPT = 0xC000016E,STATUS_PARTITION_FAILURE = 0xC0000172,STATUS_INVALID_BLOCK_LENGTH = 0xC0000173,STATUS_DEVICE_NOT_PARTITIONED = 0xC0000174,STATUS_UNABLE_TO_LOCK_MEDIA = 0xC0000175,STATUS_UNABLE_TO_UNLOAD_MEDIA = 0xC0000176,STATUS_EOM_OVERFLOW = 0xC0000177,STATUS_NO_MEDIA = 0xC0000178,STATUS_NO_SUCH_MEMBER = 0xC000017A,STATUS_INVALID_MEMBER = 0xC000017B,STATUS_KEY_DELETED = 0xC000017C,STATUS_NO_LOG_SPACE = 0xC000017D,STATUS_TOO_MANY_SIDS = 0xC000017E,STATUS_LM_CROSS_ENCRYPTION_REQUIRED = 0xC000017F,STATUS_KEY_HAS_CHILDREN = 0xC0000180,STATUS_CHILD_MUST_BE_VOLATILE = 0xC0000181,STATUS_DEVICE_CONFIGURATION_ERROR = 0xC0000182,STATUS_DRIVER_INTERNAL_ERROR = 0xC0000183,STATUS_INVALID_DEVICE_STATE = 0xC0000184,STATUS_IO_DEVICE_ERROR = 0xC0000185,STATUS_DEVICE_PROTOCOL_ERROR = 0xC0000186,STATUS_BACKUP_CONTROLLER = 0xC0000187,STATUS_LOG_FILE_FULL = 0xC0000188,STATUS_TOO_LATE = 0xC0000189,STATUS_NO_TRUST_LSA_SECRET = 0xC000018A,STATUS_NO_TRUST_SAM_ACCOUNT = 0xC000018B,STATUS_TRUSTED_DOMAIN_FAILURE = 0xC000018C,STATUS_TRUSTED_RELATIONSHIP_FAILURE = 0xC000018D,STATUS_EVENTLOG_FILE_CORRUPT = 0xC000018E,STATUS_EVENTLOG_CANT_START = 0xC000018F,STATUS_TRUST_FAILURE = 0xC0000190,STATUS_MUTANT_LIMIT_EXCEEDED = 0xC0000191,STATUS_NETLOGON_NOT_STARTED = 0xC0000192,STATUS_ACCOUNT_EXPIRED = 0xC0000193,STATUS_POSSIBLE_DEADLOCK = 0xC0000194,STATUS_NETWORK_CREDENTIAL_CONFLICT = 0xC0000195,STATUS_REMOTE_SESSION_LIMIT = 0xC0000196,STATUS_EVENTLOG_FILE_CHANGED = 0xC0000197,STATUS_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 0xC0000198,STATUS_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 0xC0000199,STATUS_NOLOGON_SERVER_TRUST_ACCOUNT = 0xC000019A,STATUS_DOMAIN_TRUST_INCONSISTENT = 0xC000019B,STATUS_FS_DRIVER_REQUIRED = 0xC000019C,STATUS_IMAGE_ALREADY_LOADED_AS_DLL = 0xC000019D,STATUS_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = 0xC000019E,STATUS_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = 0xC000019F,STATUS_SECURITY_STREAM_IS_INCONSISTENT = 0xC00001A0,STATUS_INVALID_LOCK_RANGE = 0xC00001A1,STATUS_INVALID_ACE_CONDITION = 0xC00001A2,STATUS_IMAGE_SUBSYSTEM_NOT_PRESENT = 0xC00001A3,STATUS_NOTIFICATION_GUID_ALREADY_DEFINED = 0xC00001A4,STATUS_INVALID_EXCEPTION_HANDLER = 0xC00001A5,STATUS_DUPLICATE_PRIVILEGES = 0xC00001A6,STATUS_NOT_ALLOWED_ON_SYSTEM_FILE = 0xC00001A7,STATUS_REPAIR_NEEDED = 0xC00001A8,STATUS_QUOTA_NOT_ENABLED = 0xC00001A9,STATUS_NO_APPLICATION_PACKAGE = 0xC00001AA,STATUS_NETWORK_OPEN_RESTRICTION = 0xC0000201,STATUS_NO_USER_SESSION_KEY = 0xC0000202,STATUS_USER_SESSION_DELETED = 0xC0000203,STATUS_RESOURCE_LANG_NOT_FOUND = 0xC0000204,STATUS_INSUFF_SERVER_RESOURCES = 0xC0000205,STATUS_INVALID_BUFFER_SIZE = 0xC0000206,STATUS_INVALID_ADDRESS_COMPONENT = 0xC0000207,STATUS_INVALID_ADDRESS_WILDCARD = 0xC0000208,STATUS_TOO_MANY_ADDRESSES = 0xC0000209,STATUS_ADDRESS_ALREADY_EXISTS = 0xC000020A,STATUS_ADDRESS_CLOSED = 0xC000020B,STATUS_CONNECTION_DISCONNECTED = 0xC000020C,STATUS_CONNECTION_RESET = 0xC000020D,STATUS_TOO_MANY_NODES = 0xC000020E,STATUS_TRANSACTION_ABORTED = 0xC000020F,STATUS_TRANSACTION_TIMED_OUT = 0xC0000210,STATUS_TRANSACTION_NO_RELEASE = 0xC0000211,STATUS_TRANSACTION_NO_MATCH = 0xC0000212,STATUS_TRANSACTION_RESPONDED = 0xC0000213,STATUS_TRANSACTION_INVALID_ID = 0xC0000214,STATUS_TRANSACTION_INVALID_TYPE = 0xC0000215,STATUS_NOT_SERVER_SESSION = 0xC0000216,STATUS_NOT_CLIENT_SESSION = 0xC0000217,STATUS_CANNOT_LOAD_REGISTRY_FILE = 0xC0000218,STATUS_DEBUG_ATTACH_FAILED = 0xC0000219,STATUS_SYSTEM_PROCESS_TERMINATED = 0xC000021A,STATUS_DATA_NOT_ACCEPTED = 0xC000021B,STATUS_NO_BROWSER_SERVERS_FOUND = 0xC000021C,STATUS_VDM_HARD_ERROR = 0xC000021D,STATUS_DRIVER_CANCEL_TIMEOUT = 0xC000021E,STATUS_REPLY_MESSAGE_MISMATCH = 0xC000021F,STATUS_MAPPED_ALIGNMENT = 0xC0000220,STATUS_IMAGE_CHECKSUM_MISMATCH = 0xC0000221,STATUS_LOST_WRITEBEHIND_DATA = 0xC0000222,STATUS_CLIENT_SERVER_PARAMETERS_INVALID = 0xC0000223,STATUS_PASSWORD_MUST_CHANGE = 0xC0000224,STATUS_NOT_FOUND = 0xC0000225,STATUS_NOT_TINY_STREAM = 0xC0000226,STATUS_RECOVERY_FAILURE = 0xC0000227,STATUS_STACK_OVERFLOW_READ = 0xC0000228,STATUS_FAIL_CHECK = 0xC0000229,STATUS_DUPLICATE_OBJECTID = 0xC000022A,STATUS_OBJECTID_EXISTS = 0xC000022B,STATUS_CONVERT_TO_LARGE = 0xC000022C,STATUS_RETRY = 0xC000022D,STATUS_FOUND_OUT_OF_SCOPE = 0xC000022E,STATUS_ALLOCATE_BUCKET = 0xC000022F,STATUS_PROPSET_NOT_FOUND = 0xC0000230,STATUS_MARSHALL_OVERFLOW = 0xC0000231,STATUS_INVALID_VARIANT = 0xC0000232,STATUS_DOMAIN_CONTROLLER_NOT_FOUND = 0xC0000233,STATUS_ACCOUNT_LOCKED_OUT = 0xC0000234,STATUS_HANDLE_NOT_CLOSABLE = 0xC0000235,STATUS_CONNECTION_REFUSED = 0xC0000236,STATUS_GRACEFUL_DISCONNECT = 0xC0000237,STATUS_ADDRESS_ALREADY_ASSOCIATED = 0xC0000238,STATUS_ADDRESS_NOT_ASSOCIATED = 0xC0000239,STATUS_CONNECTION_INVALID = 0xC000023A,STATUS_CONNECTION_ACTIVE = 0xC000023B,STATUS_NETWORK_UNREACHABLE = 0xC000023C,STATUS_HOST_UNREACHABLE = 0xC000023D,STATUS_PROTOCOL_UNREACHABLE = 0xC000023E,STATUS_PORT_UNREACHABLE = 0xC000023F,STATUS_REQUEST_ABORTED = 0xC0000240,STATUS_CONNECTION_ABORTED = 0xC0000241,STATUS_BAD_COMPRESSION_BUFFER = 0xC0000242,STATUS_USER_MAPPED_FILE = 0xC0000243,STATUS_AUDIT_FAILED = 0xC0000244,STATUS_TIMER_RESOLUTION_NOT_SET = 0xC0000245,STATUS_CONNECTION_COUNT_LIMIT = 0xC0000246,STATUS_LOGIN_TIME_RESTRICTION = 0xC0000247,STATUS_LOGIN_WKSTA_RESTRICTION = 0xC0000248,STATUS_IMAGE_MP_UP_MISMATCH = 0xC0000249,STATUS_INSUFFICIENT_LOGON_INFO = 0xC0000250,STATUS_BAD_DLL_ENTRYPOINT = 0xC0000251,STATUS_BAD_SERVICE_ENTRYPOINT = 0xC0000252,STATUS_LPC_REPLY_LOST = 0xC0000253,STATUS_IP_ADDRESS_CONFLICT1 = 0xC0000254,STATUS_IP_ADDRESS_CONFLICT2 = 0xC0000255,STATUS_REGISTRY_QUOTA_LIMIT = 0xC0000256,STATUS_PATH_NOT_COVERED = 0xC0000257,STATUS_NO_CALLBACK_ACTIVE = 0xC0000258,STATUS_LICENSE_QUOTA_EXCEEDED = 0xC0000259,STATUS_PWD_TOO_SHORT = 0xC000025A,STATUS_PWD_TOO_RECENT = 0xC000025B,STATUS_PWD_HISTORY_CONFLICT = 0xC000025C,STATUS_PLUGPLAY_NO_DEVICE = 0xC000025E,STATUS_UNSUPPORTED_COMPRESSION = 0xC000025F,STATUS_INVALID_HW_PROFILE = 0xC0000260,STATUS_INVALID_PLUGPLAY_DEVICE_PATH = 0xC0000261,STATUS_DRIVER_ORDINAL_NOT_FOUND = 0xC0000262,STATUS_DRIVER_ENTRYPOINT_NOT_FOUND = 0xC0000263,STATUS_RESOURCE_NOT_OWNED = 0xC0000264,STATUS_TOO_MANY_LINKS = 0xC0000265,STATUS_QUOTA_LIST_INCONSISTENT = 0xC0000266,STATUS_FILE_IS_OFFLINE = 0xC0000267,STATUS_EVALUATION_EXPIRATION = 0xC0000268,STATUS_ILLEGAL_DLL_RELOCATION = 0xC0000269,STATUS_LICENSE_VIOLATION = 0xC000026A,STATUS_DLL_INIT_FAILED_LOGOFF = 0xC000026B,STATUS_DRIVER_UNABLE_TO_LOAD = 0xC000026C,STATUS_DFS_UNAVAILABLE = 0xC000026D,STATUS_VOLUME_DISMOUNTED = 0xC000026E,STATUS_WX86_INTERNAL_ERROR = 0xC000026F,STATUS_WX86_FLOAT_STACK_CHECK = 0xC0000270,STATUS_VALIDATE_CONTINUE = 0xC0000271,STATUS_NO_MATCH = 0xC0000272,STATUS_NO_MORE_MATCHES = 0xC0000273,STATUS_NOT_A_REPARSE_POINT = 0xC0000275,STATUS_IO_REPARSE_TAG_INVALID = 0xC0000276,STATUS_IO_REPARSE_TAG_MISMATCH = 0xC0000277,STATUS_IO_REPARSE_DATA_INVALID = 0xC0000278,STATUS_IO_REPARSE_TAG_NOT_HANDLED = 0xC0000279,STATUS_PWD_TOO_LONG = 0xC000027A,STATUS_STOWED_EXCEPTION = 0xC000027B,STATUS_REPARSE_POINT_NOT_RESOLVED = 0xC0000280,STATUS_DIRECTORY_IS_A_REPARSE_POINT = 0xC0000281,STATUS_RANGE_LIST_CONFLICT = 0xC0000282,STATUS_SOURCE_ELEMENT_EMPTY = 0xC0000283,STATUS_DESTINATION_ELEMENT_FULL = 0xC0000284,STATUS_ILLEGAL_ELEMENT_ADDRESS = 0xC0000285,STATUS_MAGAZINE_NOT_PRESENT = 0xC0000286,STATUS_REINITIALIZATION_NEEDED = 0xC0000287,STATUS_DEVICE_REQUIRES_CLEANING = 0x80000288,STATUS_DEVICE_DOOR_OPEN = 0x80000289,STATUS_ENCRYPTION_FAILED = 0xC000028A,STATUS_DECRYPTION_FAILED = 0xC000028B,STATUS_RANGE_NOT_FOUND = 0xC000028C,STATUS_NO_RECOVERY_POLICY = 0xC000028D,STATUS_NO_EFS = 0xC000028E,STATUS_WRONG_EFS = 0xC000028F,STATUS_NO_USER_KEYS = 0xC0000290,STATUS_FILE_NOT_ENCRYPTED = 0xC0000291,STATUS_NOT_EXPORT_FORMAT = 0xC0000292,STATUS_FILE_ENCRYPTED = 0xC0000293,STATUS_WAKE_SYSTEM = 0x40000294,STATUS_WMI_GUID_NOT_FOUND = 0xC0000295,STATUS_WMI_INSTANCE_NOT_FOUND = 0xC0000296,STATUS_WMI_ITEMID_NOT_FOUND = 0xC0000297,STATUS_WMI_TRY_AGAIN = 0xC0000298,STATUS_SHARED_POLICY = 0xC0000299,STATUS_POLICY_OBJECT_NOT_FOUND = 0xC000029A,STATUS_POLICY_ONLY_IN_DS = 0xC000029B,STATUS_VOLUME_NOT_UPGRADED = 0xC000029C,STATUS_REMOTE_STORAGE_NOT_ACTIVE = 0xC000029D,STATUS_REMOTE_STORAGE_MEDIA_ERROR = 0xC000029E,STATUS_NO_TRACKING_SERVICE = 0xC000029F,STATUS_SERVER_SID_MISMATCH = 0xC00002A0,STATUS_DS_NO_ATTRIBUTE_OR_VALUE = 0xC00002A1,STATUS_DS_INVALID_ATTRIBUTE_SYNTAX = 0xC00002A2,STATUS_DS_ATTRIBUTE_TYPE_UNDEFINED = 0xC00002A3,STATUS_DS_ATTRIBUTE_OR_VALUE_EXISTS = 0xC00002A4,STATUS_DS_BUSY = 0xC00002A5,STATUS_DS_UNAVAILABLE = 0xC00002A6,STATUS_DS_NO_RIDS_ALLOCATED = 0xC00002A7,STATUS_DS_NO_MORE_RIDS = 0xC00002A8,STATUS_DS_INCORRECT_ROLE_OWNER = 0xC00002A9,STATUS_DS_RIDMGR_INIT_ERROR = 0xC00002AA,STATUS_DS_OBJ_CLASS_VIOLATION = 0xC00002AB,STATUS_DS_CANT_ON_NON_LEAF = 0xC00002AC,STATUS_DS_CANT_ON_RDN = 0xC00002AD,STATUS_DS_CANT_MOD_OBJ_CLASS = 0xC00002AE,STATUS_DS_CROSS_DOM_MOVE_FAILED = 0xC00002AF,STATUS_DS_GC_NOT_AVAILABLE = 0xC00002B0,STATUS_DIRECTORY_SERVICE_REQUIRED = 0xC00002B1,STATUS_REPARSE_ATTRIBUTE_CONFLICT = 0xC00002B2,STATUS_CANT_ENABLE_DENY_ONLY = 0xC00002B3,STATUS_FLOAT_MULTIPLE_FAULTS = 0xC00002B4,STATUS_FLOAT_MULTIPLE_TRAPS = 0xC00002B5,STATUS_DEVICE_REMOVED = 0xC00002B6,STATUS_JOURNAL_DELETE_IN_PROGRESS = 0xC00002B7,STATUS_JOURNAL_NOT_ACTIVE = 0xC00002B8,STATUS_NOINTERFACE = 0xC00002B9,STATUS_DS_RIDMGR_DISABLED = 0xC00002BA,STATUS_DS_ADMIN_LIMIT_EXCEEDED = 0xC00002C1,STATUS_DRIVER_FAILED_SLEEP = 0xC00002C2,STATUS_MUTUAL_AUTHENTICATION_FAILED = 0xC00002C3,STATUS_CORRUPT_SYSTEM_FILE = 0xC00002C4,STATUS_DATATYPE_MISALIGNMENT_ERROR = 0xC00002C5,STATUS_WMI_READ_ONLY = 0xC00002C6,STATUS_WMI_SET_FAILURE = 0xC00002C7,STATUS_COMMITMENT_MINIMUM = 0xC00002C8,STATUS_REG_NAT_CONSUMPTION = 0xC00002C9,STATUS_TRANSPORT_FULL = 0xC00002CA,STATUS_DS_SAM_INIT_FAILURE = 0xC00002CB,STATUS_ONLY_IF_CONNECTED = 0xC00002CC,STATUS_DS_SENSITIVE_GROUP_VIOLATION = 0xC00002CD,STATUS_PNP_RESTART_ENUMERATION = 0xC00002CE,STATUS_JOURNAL_ENTRY_DELETED = 0xC00002CF,STATUS_DS_CANT_MOD_PRIMARYGROUPID = 0xC00002D0,STATUS_SYSTEM_IMAGE_BAD_SIGNATURE = 0xC00002D1,STATUS_PNP_REBOOT_REQUIRED = 0xC00002D2,STATUS_POWER_STATE_INVALID = 0xC00002D3,STATUS_DS_INVALID_GROUP_TYPE = 0xC00002D4,STATUS_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = 0xC00002D5,STATUS_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = 0xC00002D6,STATUS_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = 0xC00002D7,STATUS_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = 0xC00002D8,STATUS_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = 0xC00002D9,STATUS_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = 0xC00002DA,STATUS_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = 0xC00002DB,STATUS_DS_HAVE_PRIMARY_MEMBERS = 0xC00002DC,STATUS_WMI_NOT_SUPPORTED = 0xC00002DD,STATUS_INSUFFICIENT_POWER = 0xC00002DE,STATUS_SAM_NEED_BOOTKEY_PASSWORD = 0xC00002DF,STATUS_SAM_NEED_BOOTKEY_FLOPPY = 0xC00002E0,STATUS_DS_CANT_START = 0xC00002E1,STATUS_DS_INIT_FAILURE = 0xC00002E2,STATUS_SAM_INIT_FAILURE = 0xC00002E3,STATUS_DS_GC_REQUIRED = 0xC00002E4,STATUS_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = 0xC00002E5,STATUS_DS_NO_FPO_IN_UNIVERSAL_GROUPS = 0xC00002E6,STATUS_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = 0xC00002E7,STATUS_MULTIPLE_FAULT_VIOLATION = 0xC00002E8,STATUS_CURRENT_DOMAIN_NOT_ALLOWED = 0xC00002E9,STATUS_CANNOT_MAKE = 0xC00002EA,STATUS_SYSTEM_SHUTDOWN = 0xC00002EB,STATUS_DS_INIT_FAILURE_CONSOLE = 0xC00002EC,STATUS_DS_SAM_INIT_FAILURE_CONSOLE = 0xC00002ED,STATUS_UNFINISHED_CONTEXT_DELETED = 0xC00002EE,STATUS_NO_TGT_REPLY = 0xC00002EF,STATUS_OBJECTID_NOT_FOUND = 0xC00002F0,STATUS_NO_IP_ADDRESSES = 0xC00002F1,STATUS_WRONG_CREDENTIAL_HANDLE = 0xC00002F2,STATUS_CRYPTO_SYSTEM_INVALID = 0xC00002F3,STATUS_MAX_REFERRALS_EXCEEDED = 0xC00002F4,STATUS_MUST_BE_KDC = 0xC00002F5,STATUS_STRONG_CRYPTO_NOT_SUPPORTED = 0xC00002F6,STATUS_TOO_MANY_PRINCIPALS = 0xC00002F7,STATUS_NO_PA_DATA = 0xC00002F8,STATUS_PKINIT_NAME_MISMATCH = 0xC00002F9,STATUS_SMARTCARD_LOGON_REQUIRED = 0xC00002FA,STATUS_KDC_INVALID_REQUEST = 0xC00002FB,STATUS_KDC_UNABLE_TO_REFER = 0xC00002FC,STATUS_KDC_UNKNOWN_ETYPE = 0xC00002FD,STATUS_SHUTDOWN_IN_PROGRESS = 0xC00002FE,STATUS_SERVER_SHUTDOWN_IN_PROGRESS = 0xC00002FF,STATUS_NOT_SUPPORTED_ON_SBS = 0xC0000300,STATUS_WMI_GUID_DISCONNECTED = 0xC0000301,STATUS_WMI_ALREADY_DISABLED = 0xC0000302,STATUS_WMI_ALREADY_ENABLED = 0xC0000303,STATUS_MFT_TOO_FRAGMENTED = 0xC0000304,STATUS_COPY_PROTECTION_FAILURE = 0xC0000305,STATUS_CSS_AUTHENTICATION_FAILURE = 0xC0000306,STATUS_CSS_KEY_NOT_PRESENT = 0xC0000307,STATUS_CSS_KEY_NOT_ESTABLISHED = 0xC0000308,STATUS_CSS_SCRAMBLED_SECTOR = 0xC0000309,STATUS_CSS_REGION_MISMATCH = 0xC000030A,STATUS_CSS_RESETS_EXHAUSTED = 0xC000030B,STATUS_PASSWORD_CHANGE_REQUIRED = 0xC000030C,STATUS_PKINIT_FAILURE = 0xC0000320,STATUS_SMARTCARD_SUBSYSTEM_FAILURE = 0xC0000321,STATUS_NO_KERB_KEY = 0xC0000322,STATUS_HOST_DOWN = 0xC0000350,STATUS_UNSUPPORTED_PREAUTH = 0xC0000351,STATUS_EFS_ALG_BLOB_TOO_BIG = 0xC0000352,STATUS_PORT_NOT_SET = 0xC0000353,STATUS_DEBUGGER_INACTIVE = 0xC0000354,STATUS_DS_VERSION_CHECK_FAILURE = 0xC0000355,STATUS_AUDITING_DISABLED = 0xC0000356,STATUS_PRENT4_MACHINE_ACCOUNT = 0xC0000357,STATUS_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = 0xC0000358,STATUS_INVALID_IMAGE_WIN_32 = 0xC0000359,STATUS_INVALID_IMAGE_WIN_64 = 0xC000035A,STATUS_BAD_BINDINGS = 0xC000035B,STATUS_NETWORK_SESSION_EXPIRED = 0xC000035C,STATUS_APPHELP_BLOCK = 0xC000035D,STATUS_ALL_SIDS_FILTERED = 0xC000035E,STATUS_NOT_SAFE_MODE_DRIVER = 0xC000035F,STATUS_ACCESS_DISABLED_BY_POLICY_DEFAULT = 0xC0000361,STATUS_ACCESS_DISABLED_BY_POLICY_PATH = 0xC0000362,STATUS_ACCESS_DISABLED_BY_POLICY_PUBLISHER = 0xC0000363,STATUS_ACCESS_DISABLED_BY_POLICY_OTHER = 0xC0000364,STATUS_FAILED_DRIVER_ENTRY = 0xC0000365,STATUS_DEVICE_ENUMERATION_ERROR = 0xC0000366,STATUS_MOUNT_POINT_NOT_RESOLVED = 0xC0000368,STATUS_INVALID_DEVICE_OBJECT_PARAMETER = 0xC0000369,STATUS_MCA_OCCURED = 0xC000036A,STATUS_DRIVER_BLOCKED_CRITICAL = 0xC000036B,STATUS_DRIVER_BLOCKED = 0xC000036C,STATUS_DRIVER_DATABASE_ERROR = 0xC000036D,STATUS_SYSTEM_HIVE_TOO_LARGE = 0xC000036E,STATUS_INVALID_IMPORT_OF_NON_DLL = 0xC000036F,STATUS_DS_SHUTTING_DOWN = 0x40000370,STATUS_NO_SECRETS = 0xC0000371,STATUS_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY = 0xC0000372,STATUS_FAILED_STACK_SWITCH = 0xC0000373,STATUS_HEAP_CORRUPTION = 0xC0000374,STATUS_SMARTCARD_WRONG_PIN = 0xC0000380,STATUS_SMARTCARD_CARD_BLOCKED = 0xC0000381,STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED = 0xC0000382,STATUS_SMARTCARD_NO_CARD = 0xC0000383,STATUS_SMARTCARD_NO_KEY_CONTAINER = 0xC0000384,STATUS_SMARTCARD_NO_CERTIFICATE = 0xC0000385,STATUS_SMARTCARD_NO_KEYSET = 0xC0000386,STATUS_SMARTCARD_IO_ERROR = 0xC0000387,STATUS_DOWNGRADE_DETECTED = 0xC0000388,STATUS_SMARTCARD_CERT_REVOKED = 0xC0000389,STATUS_ISSUING_CA_UNTRUSTED = 0xC000038A,STATUS_REVOCATION_OFFLINE_C = 0xC000038B,STATUS_PKINIT_CLIENT_FAILURE = 0xC000038C,STATUS_SMARTCARD_CERT_EXPIRED = 0xC000038D,STATUS_DRIVER_FAILED_PRIOR_UNLOAD = 0xC000038E,STATUS_SMARTCARD_SILENT_CONTEXT = 0xC000038F,STATUS_PER_USER_TRUST_QUOTA_EXCEEDED = 0xC0000401,STATUS_ALL_USER_TRUST_QUOTA_EXCEEDED = 0xC0000402,STATUS_USER_DELETE_TRUST_QUOTA_EXCEEDED = 0xC0000403,STATUS_DS_NAME_NOT_UNIQUE = 0xC0000404,STATUS_DS_DUPLICATE_ID_FOUND = 0xC0000405,STATUS_DS_GROUP_CONVERSION_ERROR = 0xC0000406,STATUS_VOLSNAP_PREPARE_HIBERNATE = 0xC0000407,STATUS_USER2USER_REQUIRED = 0xC0000408,STATUS_STACK_BUFFER_OVERRUN = 0xC0000409,STATUS_NO_S4U_PROT_SUPPORT = 0xC000040A,STATUS_CROSSREALM_DELEGATION_FAILURE = 0xC000040B,STATUS_REVOCATION_OFFLINE_KDC = 0xC000040C,STATUS_ISSUING_CA_UNTRUSTED_KDC = 0xC000040D,STATUS_KDC_CERT_EXPIRED = 0xC000040E,STATUS_KDC_CERT_REVOKED = 0xC000040F,STATUS_PARAMETER_QUOTA_EXCEEDED = 0xC0000410,STATUS_HIBERNATION_FAILURE = 0xC0000411,STATUS_DELAY_LOAD_FAILED = 0xC0000412,STATUS_AUTHENTICATION_FIREWALL_FAILED = 0xC0000413,STATUS_VDM_DISALLOWED = 0xC0000414,STATUS_HUNG_DISPLAY_DRIVER_THREAD = 0xC0000415,STATUS_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE = 0xC0000416,STATUS_INVALID_CRUNTIME_PARAMETER = 0xC0000417,STATUS_NTLM_BLOCKED = 0xC0000418,STATUS_DS_SRC_SID_EXISTS_IN_FOREST = 0xC0000419,STATUS_DS_DOMAIN_NAME_EXISTS_IN_FOREST = 0xC000041A,STATUS_DS_FLAT_NAME_EXISTS_IN_FOREST = 0xC000041B,STATUS_INVALID_USER_PRINCIPAL_NAME = 0xC000041C,STATUS_FATAL_USER_CALLBACK_EXCEPTION = 0xC000041D,STATUS_ASSERTION_FAILURE = 0xC0000420,STATUS_VERIFIER_STOP = 0xC0000421,STATUS_CALLBACK_POP_STACK = 0xC0000423,STATUS_INCOMPATIBLE_DRIVER_BLOCKED = 0xC0000424,STATUS_HIVE_UNLOADED = 0xC0000425,STATUS_COMPRESSION_DISABLED = 0xC0000426,STATUS_FILE_SYSTEM_LIMITATION = 0xC0000427,STATUS_INVALID_IMAGE_HASH = 0xC0000428,STATUS_NOT_CAPABLE = 0xC0000429,STATUS_REQUEST_OUT_OF_SEQUENCE = 0xC000042A,STATUS_IMPLEMENTATION_LIMIT = 0xC000042B,STATUS_ELEVATION_REQUIRED = 0xC000042C,STATUS_NO_SECURITY_CONTEXT = 0xC000042D,STATUS_PKU2U_CERT_FAILURE = 0xC000042F,STATUS_BEYOND_VDL = 0xC0000432,STATUS_ENCOUNTERED_WRITE_IN_PROGRESS = 0xC0000433,STATUS_PTE_CHANGED = 0xC0000434,STATUS_PURGE_FAILED = 0xC0000435,STATUS_CRED_REQUIRES_CONFIRMATION = 0xC0000440,STATUS_CS_ENCRYPTION_INVALID_SERVER_RESPONSE = 0xC0000441,STATUS_CS_ENCRYPTION_UNSUPPORTED_SERVER = 0xC0000442,STATUS_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE = 0xC0000443,STATUS_CS_ENCRYPTION_NEW_ENCRYPTED_FILE = 0xC0000444,STATUS_CS_ENCRYPTION_FILE_NOT_CSE = 0xC0000445,STATUS_INVALID_LABEL = 0xC0000446,STATUS_DRIVER_PROCESS_TERMINATED = 0xC0000450,STATUS_AMBIGUOUS_SYSTEM_DEVICE = 0xC0000451,STATUS_SYSTEM_DEVICE_NOT_FOUND = 0xC0000452,STATUS_RESTART_BOOT_APPLICATION = 0xC0000453,STATUS_INSUFFICIENT_NVRAM_RESOURCES = 0xC0000454,STATUS_INVALID_SESSION = 0xC0000455,STATUS_THREAD_ALREADY_IN_SESSION = 0xC0000456,STATUS_THREAD_NOT_IN_SESSION = 0xC0000457,STATUS_INVALID_WEIGHT = 0xC0000458,STATUS_REQUEST_PAUSED = 0xC0000459,STATUS_NO_RANGES_PROCESSED = 0xC0000460,STATUS_DISK_RESOURCES_EXHAUSTED = 0xC0000461,STATUS_NEEDS_REMEDIATION = 0xC0000462,STATUS_DEVICE_FEATURE_NOT_SUPPORTED = 0xC0000463,STATUS_DEVICE_UNREACHABLE = 0xC0000464,STATUS_INVALID_TOKEN = 0xC0000465,STATUS_SERVER_UNAVAILABLE = 0xC0000466,STATUS_FILE_NOT_AVAILABLE = 0xC0000467,STATUS_DEVICE_INSUFFICIENT_RESOURCES = 0xC0000468,STATUS_PACKAGE_UPDATING = 0xC0000469,STATUS_NOT_READ_FROM_COPY = 0xC000046A,STATUS_FT_WRITE_FAILURE = 0xC000046B,STATUS_FT_DI_SCAN_REQUIRED = 0xC000046C,STATUS_DATA_CHECKSUM_ERROR = 0xC0000470,STATUS_INTERMIXED_KERNEL_EA_OPERATION = 0xC0000471,STATUS_TRIM_READ_ZERO_NOT_SUPPORTED = 0xC0000472,STATUS_TOO_MANY_SEGMENT_DESCRIPTORS = 0xC0000473,STATUS_INVALID_OFFSET_ALIGNMENT = 0xC0000474,STATUS_INVALID_FIELD_IN_PARAMETER_LIST = 0xC0000475,STATUS_OPERATION_IN_PROGRESS = 0xC0000476,STATUS_INVALID_INITIATOR_TARGET_PATH = 0xC0000477,STATUS_SCRUB_DATA_DISABLED = 0xC0000478,STATUS_NOT_REDUNDANT_STORAGE = 0xC0000479,STATUS_RESIDENT_FILE_NOT_SUPPORTED = 0xC000047A,STATUS_COMPRESSED_FILE_NOT_SUPPORTED = 0xC000047B,STATUS_DIRECTORY_NOT_SUPPORTED = 0xC000047C,STATUS_IO_OPERATION_TIMEOUT = 0xC000047D,STATUS_SYSTEM_NEEDS_REMEDIATION = 0xC000047E,STATUS_APPX_INTEGRITY_FAILURE_CLR_NGEN = 0xC000047F,STATUS_SHARE_UNAVAILABLE = 0xC0000480,STATUS_INVALID_TASK_NAME = 0xC0000500,STATUS_INVALID_TASK_INDEX = 0xC0000501,STATUS_THREAD_ALREADY_IN_TASK = 0xC0000502,STATUS_CALLBACK_BYPASS = 0xC0000503,STATUS_UNDEFINED_SCOPE = 0xC0000504,STATUS_INVALID_CAP = 0xC0000505,STATUS_NOT_GUI_PROCESS = 0xC0000506,STATUS_FAIL_FAST_EXCEPTION = 0xC0000602,STATUS_IMAGE_CERT_REVOKED = 0xC0000603,STATUS_PORT_CLOSED = 0xC0000700,STATUS_MESSAGE_LOST = 0xC0000701,STATUS_INVALID_MESSAGE = 0xC0000702,STATUS_REQUEST_CANCELED = 0xC0000703,STATUS_RECURSIVE_DISPATCH = 0xC0000704,STATUS_LPC_RECEIVE_BUFFER_EXPECTED = 0xC0000705,STATUS_LPC_INVALID_CONNECTION_USAGE = 0xC0000706,STATUS_LPC_REQUESTS_NOT_ALLOWED = 0xC0000707,STATUS_RESOURCE_IN_USE = 0xC0000708,STATUS_HARDWARE_MEMORY_ERROR = 0xC0000709,STATUS_THREADPOOL_HANDLE_EXCEPTION = 0xC000070A,STATUS_THREADPOOL_SET_EVENT_ON_COMPLETION_FAILED = 0xC000070B,STATUS_THREADPOOL_RELEASE_SEMAPHORE_ON_COMPLETION_FAILED = 0xC000070C,STATUS_THREADPOOL_RELEASE_MUTEX_ON_COMPLETION_FAILED = 0xC000070D,STATUS_THREADPOOL_FREE_LIBRARY_ON_COMPLETION_FAILED = 0xC000070E,STATUS_THREADPOOL_RELEASED_DURING_OPERATION = 0xC000070F,STATUS_CALLBACK_RETURNED_WHILE_IMPERSONATING = 0xC0000710,STATUS_APC_RETURNED_WHILE_IMPERSONATING = 0xC0000711,STATUS_PROCESS_IS_PROTECTED = 0xC0000712,STATUS_MCA_EXCEPTION = 0xC0000713,STATUS_CERTIFICATE_MAPPING_NOT_UNIQUE = 0xC0000714,STATUS_SYMLINK_CLASS_DISABLED = 0xC0000715,STATUS_INVALID_IDN_NORMALIZATION = 0xC0000716,STATUS_NO_UNICODE_TRANSLATION = 0xC0000717,STATUS_ALREADY_REGISTERED = 0xC0000718,STATUS_CONTEXT_MISMATCH = 0xC0000719,STATUS_PORT_ALREADY_HAS_COMPLETION_LIST = 0xC000071A,STATUS_CALLBACK_RETURNED_THREAD_PRIORITY = 0xC000071B,STATUS_INVALID_THREAD = 0xC000071C,STATUS_CALLBACK_RETURNED_TRANSACTION = 0xC000071D,STATUS_CALLBACK_RETURNED_LDR_LOCK = 0xC000071E,STATUS_CALLBACK_RETURNED_LANG = 0xC000071F,STATUS_CALLBACK_RETURNED_PRI_BACK = 0xC0000720,STATUS_CALLBACK_RETURNED_THREAD_AFFINITY = 0xC0000721,STATUS_DISK_REPAIR_DISABLED = 0xC0000800,STATUS_DS_DOMAIN_RENAME_IN_PROGRESS = 0xC0000801,STATUS_DISK_QUOTA_EXCEEDED = 0xC0000802,STATUS_DATA_LOST_REPAIR = 0x80000803,STATUS_CONTENT_BLOCKED = 0xC0000804,STATUS_BAD_CLUSTERS = 0xC0000805,STATUS_VOLUME_DIRTY = 0xC0000806,STATUS_DISK_REPAIR_REDIRECTED = 0x40000807,STATUS_DISK_REPAIR_UNSUCCESSFUL = 0xC0000808,STATUS_CORRUPT_LOG_OVERFULL = 0xC0000809,STATUS_CORRUPT_LOG_CORRUPTED = 0xC000080A,STATUS_CORRUPT_LOG_UNAVAILABLE = 0xC000080B,STATUS_CORRUPT_LOG_DELETED_FULL = 0xC000080C,STATUS_CORRUPT_LOG_CLEARED = 0xC000080D,STATUS_ORPHAN_NAME_EXHAUSTED = 0xC000080E,STATUS_PROACTIVE_SCAN_IN_PROGRESS = 0xC000080F,STATUS_FILE_CHECKED_OUT = 0xC0000901,STATUS_CHECKOUT_REQUIRED = 0xC0000902,STATUS_BAD_FILE_TYPE = 0xC0000903,STATUS_FILE_TOO_LARGE = 0xC0000904,STATUS_FORMS_AUTH_REQUIRED = 0xC0000905,STATUS_VIRUS_INFECTED = 0xC0000906,STATUS_VIRUS_DELETED = 0xC0000907,STATUS_BAD_MCFG_TABLE = 0xC0000908,STATUS_CANNOT_BREAK_OPLOCK = 0xC0000909,STATUS_BAD_KEY = 0xC000090A,STATUS_BAD_DATA = 0xC000090B,STATUS_NO_KEY = 0xC000090C,STATUS_FILE_HANDLE_REVOKED = 0xC0000910,STATUS_WOW_ASSERTION = 0xC0009898,STATUS_INVALID_SIGNATURE = 0xC000A000,STATUS_HMAC_NOT_SUPPORTED = 0xC000A001,STATUS_AUTH_TAG_MISMATCH = 0xC000A002,STATUS_INVALID_STATE_TRANSITION = 0xC000A003,STATUS_INVALID_KERNEL_INFO_VERSION = 0xC000A004,STATUS_INVALID_PEP_INFO_VERSION = 0xC000A005,STATUS_IPSEC_QUEUE_OVERFLOW = 0xC000A010,STATUS_ND_QUEUE_OVERFLOW = 0xC000A011,STATUS_HOPLIMIT_EXCEEDED = 0xC000A012,STATUS_PROTOCOL_NOT_SUPPORTED = 0xC000A013,STATUS_FASTPATH_REJECTED = 0xC000A014,STATUS_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED = 0xC000A080,STATUS_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR = 0xC000A081,STATUS_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR = 0xC000A082,STATUS_XML_PARSE_ERROR = 0xC000A083,STATUS_XMLDSIG_ERROR = 0xC000A084,STATUS_WRONG_COMPARTMENT = 0xC000A085,STATUS_AUTHIP_FAILURE = 0xC000A086,STATUS_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS = 0xC000A087,STATUS_DS_OID_NOT_FOUND = 0xC000A088,STATUS_INCORRECT_ACCOUNT_TYPE = 0xC000A089,STATUS_HASH_NOT_SUPPORTED = 0xC000A100,STATUS_HASH_NOT_PRESENT = 0xC000A101,STATUS_SECONDARY_IC_PROVIDER_NOT_REGISTERED = 0xC000A121,STATUS_GPIO_CLIENT_INFORMATION_INVALID = 0xC000A122,STATUS_GPIO_VERSION_NOT_SUPPORTED = 0xC000A123,STATUS_GPIO_INVALID_REGISTRATION_PACKET = 0xC000A124,STATUS_GPIO_OPERATION_DENIED = 0xC000A125,STATUS_GPIO_INCOMPATIBLE_CONNECT_MODE = 0xC000A126,STATUS_GPIO_INTERRUPT_ALREADY_UNMASKED = 0x8000A127,STATUS_CANNOT_SWITCH_RUNLEVEL = 0xC000A141,STATUS_INVALID_RUNLEVEL_SETTING = 0xC000A142,STATUS_RUNLEVEL_SWITCH_TIMEOUT = 0xC000A143,STATUS_SERVICES_FAILED_AUTOSTART = 0x4000A144,STATUS_RUNLEVEL_SWITCH_AGENT_TIMEOUT = 0xC000A145,STATUS_RUNLEVEL_SWITCH_IN_PROGRESS = 0xC000A146,STATUS_NOT_APPCONTAINER = 0xC000A200,STATUS_NOT_SUPPORTED_IN_APPCONTAINER = 0xC000A201,STATUS_INVALID_PACKAGE_SID_LENGTH = 0xC000A202,STATUS_APP_DATA_NOT_FOUND = 0xC000A281,STATUS_APP_DATA_EXPIRED = 0xC000A282,STATUS_APP_DATA_CORRUPT = 0xC000A283,STATUS_APP_DATA_LIMIT_EXCEEDED = 0xC000A284,STATUS_APP_DATA_REBOOT_REQUIRED = 0xC000A285,STATUS_OFFLOAD_READ_FLT_NOT_SUPPORTED = 0xC000A2A1,STATUS_OFFLOAD_WRITE_FLT_NOT_SUPPORTED = 0xC000A2A2,STATUS_OFFLOAD_READ_FILE_NOT_SUPPORTED = 0xC000A2A3,STATUS_OFFLOAD_WRITE_FILE_NOT_SUPPORTED = 0xC000A2A4,};
enum MACRO_STATUS_INVALID {STATUS_INVALID_GENERATION = 0xC0120090,};
enum MACRO_SYSTEM_LICENSE {SYSTEM_LICENSE_VIOLATION = 0x9A,};
enum MACRO_ScsiInquiry_IN {ScsiInquiry_IN_UniqueSessionId_ID = 1,ScsiInquiry_IN_Lun_ID = 2,ScsiInquiry_IN_InquiryFlags_ID = 3,ScsiInquiry_IN_PageCode_ID = 4,ScsiInquiry_OUT_Status_ID = 5,};
enum MACRO_ScsiReportLuns {ScsiReportLuns_IN_Cdb_ID = 1,ScsiReportLuns_IN_HbaPortWWN_ID = 2,ScsiReportLuns_IN_DiscoveredPortWWN_ID = 3,ScsiReportLuns_OUT_HBAStatus_ID = 4,ScsiReportLuns_OUT_SenseBufferSize_ID = 6,ScsiReportLuns_OUT_ResponseBuffer_SIZE_HINT = 16,};
enum MACRO_SendCTPassThru {SendCTPassThru_IN_PortWWN_ID = 1,SendCTPassThru_IN_RequestBufferCount_ID = 2,SendCTPassThru_IN_RequestBuffer_ID = 3,SendCTPassThru_OUT_HBAStatus_ID = 4,SendCTPassThru_OUT_TotalResponseBufferCount_ID = 5,SendCTPassThru_OUT_ActualResponseBufferCount_ID = 6,SendCTPassThru_OUT_ResponseBuffer_SIZE_HINT = 768,SendCTPassThru_OUT_ResponseBuffer_ID = 7,};
enum MACRO_SendTargets_IN {SendTargets_IN_UniqueSessionId_ID = 1,SendTargets_IN_SendTargetsText_ID = 2,SendTargets_OUT_Status_ID = 3,SendTargets_OUT_ResponseSize_ID = 4,SendTargets_OUT_Response_ID = 5,};
enum MACRO_SetDSMCounters {SetDSMCounters = 3,};
enum MACRO_SetFC3MgmtInfo {SetFC3MgmtInfo = 8,};
enum MACRO_THREAD_CSWITCH {THREAD_CSWITCH_PMU_DISABLE = 0,THREAD_CSWITCH_PMU_ENABLE = 1,};
enum MACRO_USB_SUPERSPEED {USB_SUPERSPEED_ISOCHRONOUS_MAX_MULTIPLIER = 2,USB_20_HUB_DESCRIPTOR_TYPE = 41,USB_30_HUB_DESCRIPTOR_TYPE = 42,USB_REQUEST_GET_STATE = 2,USB_REQUEST_CLEAR_TT_BUFFER = 8,USB_REQUEST_RESET_TT = 9,USB_REQUEST_GET_TT_STATE = 10,USB_REQUEST_STOP_TT = 11,USB_REQUEST_SET_HUB_DEPTH = 12,USB_REQUEST_GET_PORT_ERR_COUNT = 13,USB_PORT_STATUS_CONNECT = 1,USB_PORT_STATUS_ENABLE = 2,USB_PORT_STATUS_SUSPEND = 4,USB_PORT_STATUS_OVER_CURRENT = 8,USB_PORT_STATUS_RESET = 16,USB_PORT_STATUS_POWER = 256,USB_PORT_STATUS_LOW_SPEED = 512,USB_PORT_STATUS_HIGH_SPEED = 1024,};
enum MACRO_USE_DEFAULTMSB {USE_DEFAULTMSB = 0,USE_DEFAULTLSB = 0,};
enum MACRO_VALID_TRANSFER {VALID_TRANSFER_FLAGS_MASK = 15,};
enum MACRO_VER_DESCRIPTOR {VER_DESCRIPTOR_SPC4_NOVERSION = 0x460,VER_DESCRIPTOR_SPC4_T10_1731D_R16 = 0x461,VER_DESCRIPTOR_SPC4_T10_1731D_R18 = 0x462,VER_DESCRIPTOR_SPC4_T10_1731D_R23 = 0x463,VER_DESCRIPTOR_SBC3 = 0x4C0,VER_DESCRIPTOR_1667_NOVERSION = 0xFFC0,VER_DESCRIPTOR_1667_2006 = 0xFFC1,VER_DESCRIPTOR_1667_2009 = 0xFFC2,};
enum MACRO_VIDEO_DUALVIEW {VIDEO_DUALVIEW_REMOVABLE = 0x1,VIDEO_DUALVIEW_PRIMARY = 0x80000000,VIDEO_DUALVIEW_SECONDARY = 0x40000000,VIDEO_DUALVIEW_WDDM_VGA = 0x20000000,VIDEO_CHILD_ACTIVE = 0x1,VIDEO_CHILD_DETACHED = 0x2,VIDEO_CHILD_NOPRUNE_FREQ = 0x80000000,VIDEO_CHILD_NOPRUNE_RESOLUTION = 0x40000000,VIDEO_CHILD_VALID = 0x20000000,VIDEO_STATE_NON_STANDARD_VGA = 0x1,VIDEO_STATE_UNEMULATED_VGA_STATE = 0x2,VIDEO_STATE_PACKED_CHAIN4_MODE = 0x4,VIDEO_MODE_NO_ZERO_MEMORY = 0x80000000,VIDEO_MODE_MAP_MEM_LINEAR = 0x40000000,VIDEO_MODE_COLOR = 0x1,VIDEO_MODE_GRAPHICS = 0x2,VIDEO_MODE_PALETTE_DRIVEN = 0x4,VIDEO_MODE_MANAGED_PALETTE = 0x8,VIDEO_MODE_INTERLACED = 0x10,VIDEO_MODE_NO_OFF_SCREEN = 0x20,VIDEO_MODE_NO_64_BIT_ACCESS = 0x40,VIDEO_MODE_BANKED = 0x80,VIDEO_MODE_LINEAR = 0x100,VIDEO_MODE_ASYNC_POINTER = 0x1,VIDEO_MODE_MONO_POINTER = 0x2,VIDEO_MODE_COLOR_POINTER = 0x4,VIDEO_MODE_ANIMATE_START = 0x8,VIDEO_MODE_ANIMATE_UPDATE = 0x10,};
enum MACRO_WORKER_INVALID {WORKER_INVALID = 0xE4,};
enum MACRO__SW_UNEMULATED {_SW_UNEMULATED = 0x40,_SW_SQRTNEG = 0x80,_SW_STACKOVERFLOW = 0x200,_SW_STACKUNDERFLOW = 0x400,};
enum MEDIA_SAMPLE_CONTENT {MEDIA_TRANSPORT_PACKET = 0x0,MEDIA_ELEMENTARY_STREAM = 0x1,MEDIA_MPEG2_PSI = 0x2,MEDIA_TRANSPORT_PAYLOAD = 0x3,};
typedef struct _MODE_DISCONNECT_PAGE MODE_DISCONNECT_PAGE;
typedef struct _MODE_INFO_EXCEPTIONS MODE_INFO_EXCEPTIONS;
typedef struct _MODE_PARAMETER_BLOCK MODE_PARAMETER_BLOCK;
typedef struct _MOUNTDEV_STABLE_GUID MOUNTDEV_STABLE_GUID;
typedef struct _MOUNTMGR_MOUNT_POINT MOUNTMGR_MOUNT_POINT;
typedef struct _MOUNTMGR_TARGET_NAME MOUNTMGR_TARGET_NAME;
typedef struct mpeglayer3waveformat_tag MPEGLAYER3WAVEFORMAT;
typedef struct _MPIO_CONTROLLER_INFO MPIO_CONTROLLER_INFO;
typedef struct _MPIO_TIMERS_COUNTERS MPIO_TIMERS_COUNTERS;
typedef struct _MRX_CALLDOWN_CONTEXT_ MRX_CALLDOWN_CONTEXT;
typedef struct _MSIde_PortDeviceInfo MSIde_PortDeviceInfo;
typedef struct _MSMCAInfo_RawMCAData MSMCAInfo_RawMCAData;
typedef struct _MSNdis_CountedString MSNdis_CountedString;
typedef struct _MSNdis_DriverVersion MSNdis_DriverVersion;
typedef struct _MSNdis_GroupAffinity MSNdis_GroupAffinity;
typedef struct _MSNdis_LinkStateData MSNdis_LinkStateData;
typedef struct _MSNdis_PMAdminConfig MSNdis_PMAdminConfig;
typedef struct _MSNdis_PortStateData MSNdis_PortStateData;
typedef struct _MSNdis_WmiOutputInfo MSNdis_WmiOutputInfo;
typedef struct _MSPower_DeviceEnable MSPower_DeviceEnable;
typedef struct _MSV1_0_SUBAUTH_LOGON MSV1_0_SUBAUTH_LOGON;
typedef struct _MSiSCSI_AdapterEvent MSiSCSI_AdapterEvent;
typedef struct _MSiSCSI_MMIPSECStats MSiSCSI_MMIPSECStats;
typedef struct _MSiSCSI_QMIPSECStats MSiSCSI_QMIPSECStats;
typedef struct _MSiSCSI_RADIUSConfig MSiSCSI_RADIUSConfig;
typedef struct _NDIS_802_11_AI_REQFI NDIS_802_11_AI_REQFI;
typedef struct _NDIS_802_11_AI_RESFI NDIS_802_11_AI_RESFI;
typedef struct _NDIS_BIND_PARAMETERS NDIS_BIND_PARAMETERS;
typedef struct _NDIS_DMA_DESCRIPTION NDIS_DMA_DESCRIPTION;
typedef struct _NDIS_HYPERVISOR_INFO NDIS_HYPERVISOR_INFO;
typedef struct _NDIS_LINK_PARAMETERS NDIS_LINK_PARAMETERS;
typedef struct _NDIS_OPEN_PARAMETERS NDIS_OPEN_PARAMETERS;
typedef struct _NDIS_PM_CAPABILITIES NDIS_PM_CAPABILITIES;
typedef struct _NDIS_STATISTICS_INFO NDIS_STATISTICS_INFO;
typedef struct _NDIS_TAPI_CLOSE_CALL NDIS_TAPI_CLOSE_CALL;
typedef struct _NDIS_WAN_CO_FRAGMENT NDIS_WAN_CO_FRAGMENT;
typedef struct _NDIS_WWAN_READY_INFO NDIS_WWAN_READY_INFO;
typedef struct _NDIS_WWAN_SET_PIN_EX NDIS_WWAN_SET_PIN_EX;
typedef struct _NDIS_WWAN_SMS_DELETE NDIS_WWAN_SMS_DELETE;
typedef struct _NDIS_WWAN_SMS_STATUS NDIS_WWAN_SMS_STATUS;
typedef struct _NDIS_WWAN_USSD_EVENT NDIS_WWAN_USSD_EVENT;
typedef struct _NDK_ADAPTER_DISPATCH NDK_ADAPTER_DISPATCH;
typedef struct nd_opt_route_info ND_OPTION_ROUTE_INFO;
typedef struct _NETWORK_ADDRESS_LIST NETWORK_ADDRESS_LIST;
typedef struct _NET_BUFFER_LIST_DATA NET_BUFFER_LIST_DATA;
typedef struct _NET_DEVICE_PNP_EVENT NET_DEVICE_PNP_EVENT;
typedef struct _NFS_OPEN_ECP_CONTEXT NFS_OPEN_ECP_CONTEXT;
typedef struct _NON_PAGED_DEBUG_INFO NON_PAGED_DEBUG_INFO;
typedef struct _NT_CREATE_PARAMETERS NT_CREATE_PARAMETERS;
typedef struct _NVCACHE_HINT_PAYLOAD NVCACHE_HINT_PAYLOAD;
typedef struct _NV_FEATURE_PARAMETER NV_FEATURE_PARAMETER;
typedef struct _OFFLOAD_IPSEC_ADD_SA OFFLOAD_IPSEC_ADD_SA;
typedef struct _PAGED_LOOKASIDE_LIST PAGED_LOOKASIDE_LIST;
typedef struct _API_SET_VALUE_ARRAY *PAPI_SET_VALUE_ARRAY;
typedef struct _API_SET_VALUE_ENTRY *PAPI_SET_VALUE_ENTRY;
typedef struct _PARCLASS_INFORMATION PARCLASS_INFORMATION;
typedef struct _ATA_PASS_THROUGH_EX *PATA_PASS_THROUGH_EX;
typedef struct _ATM_FLOW_PARAMETERS *PATM_FLOW_PARAMETERS;
typedef struct _AVCSTRM_FORMAT_INFO *PAVCSTRM_FORMAT_INFO;
typedef struct _AVCSTRM_OPEN_STRUCT *PAVCSTRM_OPEN_STRUCT;
typedef struct _AVC_EXT_PLUG_COUNTS *PAVC_EXT_PLUG_COUNTS;
typedef struct _AVC_PEER_DO_LOCATOR *PAVC_PEER_DO_LOCATOR;
typedef struct _AVC_PRECONNECT_INFO *PAVC_PRECONNECT_INFO;
typedef struct _AVC_SETCONNECT_INFO *PAVC_SETCONNECT_INFO;
typedef struct _AddRADIUSServer_OUT *PAddRADIUSServer_OUT;
typedef struct _BDA_CAS_OPENMMIDATA *PBDA_CAS_OPENMMIDATA;
typedef struct _BDA_DISEQC_RESPONSE *PBDA_DISEQC_RESPONSE;
typedef struct _BDA_FILTER_TEMPLATE *PBDA_FILTER_TEMPLATE;
typedef struct _BDA_ISDBCAS_EMG_REQ *PBDA_ISDBCAS_EMG_REQ;
typedef struct _BDA_MUX_PIDLISTITEM *PBDA_MUX_PIDLISTITEM;
typedef struct _BDA_RATING_PINRESET *PBDA_RATING_PINRESET;
typedef struct _BDA_SIGNAL_TIMEOUTS *PBDA_SIGNAL_TIMEOUTS;
typedef struct _BDA_TS_SELECTORINFO *PBDA_TS_SELECTORINFO;
typedef struct _BIT_RATE_ADJUSTMENT *PBIT_RATE_ADJUSTMENT;
typedef struct _BTH_ENUMERATOR_INFO *PBTH_ENUMERATOR_INFO;
typedef struct _BUS_GENERATION_NODE *PBUS_GENERATION_NODE;
typedef struct _PCC_GENERIC_SUBSPACE PCC_GENERIC_SUBSPACE;
typedef struct _CDROM_SET_STREAMING *PCDROM_SET_STREAMING;
typedef struct _CDROM_TOC_ATIP_DATA *PCDROM_TOC_ATIP_DATA;
typedef struct _CHANGER_MOVE_MEDIUM *PCHANGER_MOVE_MEDIUM;
typedef struct _PCI_AGP_ISOCH_STATUS PCI_AGP_ISOCH_STATUS;
typedef struct _CLASS_POWER_CONTEXT *PCLASS_POWER_CONTEXT;
typedef struct _CLASS_POWER_OPTIONS *PCLASS_POWER_OPTIONS;
typedef struct _CMP_GET_PLUG_HANDLE *PCMP_GET_PLUG_HANDLE;
typedef struct _CM_SCSI_DEVICE_DATA *PCM_SCSI_DEVICE_DATA;
typedef struct _CO_MEDIA_PARAMETERS *PCO_MEDIA_PARAMETERS;
typedef struct _PCW_MASK_INFORMATION PCW_MASK_INFORMATION;
typedef struct _DEBUG_PORT_TABLE_V2 *PDEBUG_PORT_TABLE_V2;
typedef struct _DEVICE_CAPABILITIES *PDEVICE_CAPABILITIES;
typedef struct _DEVICE_SET_PASSWORD *PDEVICE_SET_PASSWORD;
typedef struct _DISK_DETECTION_INFO *PDISK_DETECTION_INFO;
typedef struct _DISK_GROW_PARTITION *PDISK_GROW_PARTITION;
typedef struct _DISK_PARTITION_INFO *PDISK_PARTITION_INFO;
typedef struct _DMA_ADAPTER_INFO_V1 *PDMA_ADAPTER_INFO_V1;
typedef struct _DOT11_ADDITIONAL_IE *PDOT11_ADDITIONAL_IE;
typedef struct DOT11_KEY_ALGO_CCMP *PDOT11_KEY_ALGO_CCMP;
typedef struct _DOT11_PHY_TYPE_INFO *PDOT11_PHY_TYPE_INFO;
typedef struct DOT11_PHY_TYPE_LIST *PDOT11_PHY_TYPE_LIST;
typedef struct _DOT11_RESET_REQUEST *PDOT11_RESET_REQUEST;
typedef struct _DOT11_START_REQUEST *PDOT11_START_REQUEST;
typedef struct _DOT11_WFD_GO_INTENT *PDOT11_WFD_GO_INTENT;
typedef struct _DOT11_WME_UPDATE_IE *PDOT11_WME_UPDATE_IE;
typedef struct _DOT4_DC_CREATE_DATA *PDOT4_DC_CREATE_DATA;
typedef struct _DSM_COMPLETION_INFO *PDSM_COMPLETION_INFO;
typedef struct _DSM_DEREGISTER_DATA *PDSM_DEREGISTER_DATA;
typedef struct _EISA_IRQ_DESCRIPTOR *PEISA_IRQ_DESCRIPTOR;
typedef struct _ELEMENT_STATUS_PAGE *PELEMENT_STATUS_PAGE;
typedef struct _ENCRYPTED_DATA_INFO *PENCRYPTED_DATA_INFO;
typedef struct _EVENT_FILTER_HEADER *PEVENT_FILTER_HEADER;
typedef struct _FILE_EA_INFORMATION *PFILE_EA_INFORMATION;
typedef struct _FILE_ID_INFORMATION *PFILE_ID_INFORMATION;
typedef struct _FILTER_REPLY_HEADER *PFILTER_REPLY_HEADER;
typedef struct _FLT_RELATED_OBJECTS *PFLT_RELATED_OBJECTS;
typedef struct _FLT_TAG_DATA_BUFFER *PFLT_TAG_DATA_BUFFER;
typedef struct _FS_FILTER_CALLBACKS *PFS_FILTER_CALLBACKS;
typedef struct _GET_DISK_ATTRIBUTES *PGET_DISK_ATTRIBUTES;
typedef struct _GetFC4Statistics_IN *PGetFC4Statistics_IN;
typedef struct _GetFCPStatistics_IN *PGetFCPStatistics_IN;
typedef void (*PHALMCAINTERFACELOCK)(void);
typedef struct _HAL_BUS_INFORMATION *PHAL_BUS_INFORMATION;
typedef struct _HBAFCPBindingEntry2 *PHBAFCPBindingEntry2;
typedef struct HBA_FCPBindingEntry *PHBA_FCPBINDINGENTRY;
typedef struct _HIDP_GETCOLDESC_DBG *PHIDP_GETCOLDESC_DBG;
typedef struct _HIDP_PREPARSED_DATA *PHIDP_PREPARSED_DATA;
typedef struct _HW_EVENT_DESCRIPTOR *PHW_EVENT_DESCRIPTOR;
typedef struct _IDE_ERROR_LOG_ENTRY *PIDE_ERROR_LOG_ENTRY;
typedef struct _PIDListSpanningEvent PIDListSpanningEvent;
typedef struct _IGMPV3_QUERY_HEADER *PIGMPV3_QUERY_HEADER;
typedef struct _IO_ERROR_LOG_PACKET *PIO_ERROR_LOG_PACKET;
typedef struct _IO_SECURITY_CONTEXT *PIO_SECURITY_CONTEXT;
typedef union IPRouteNotifyOutput *PIPRouteNotifyOutput;
typedef struct _IPV4_ROUTING_HEADER *PIPV4_ROUTING_HEADER;
typedef struct _IPV6_ROUTING_HEADER *PIPV6_ROUTING_HEADER;
typedef struct _ISCSI_TargetMapping *PISCSI_TargetMapping;
typedef struct _IdleStateAccounting *PIdleStateAccounting;
typedef struct _KBUGCHECK_ADD_PAGES *PKBUGCHECK_ADD_PAGES;
typedef struct _KCRM_MARSHAL_HEADER *PKCRM_MARSHAL_HEADER;
typedef struct _KDEVICE_QUEUE_ENTRY *PKDEVICE_QUEUE_ENTRY;
typedef struct _KEYBOARD_ATTRIBUTES *PKEYBOARD_ATTRIBUTES;
typedef struct _KEYBOARD_IME_STATUS *PKEYBOARD_IME_STATUS;
typedef struct _KEYBOARD_INPUT_DATA *PKEYBOARD_INPUT_DATA;
typedef struct _24396BA7B1ABFC61208375C7C88D8B5F *PKSALLOCATOR_FRAMING;
typedef struct _40B3E31023928B11E2A8685514812B52 *PKSDATAFORMAT_DSOUND;
typedef struct _KSDEVICE_DESCRIPTOR *PKSDEVICE_DESCRIPTOR;
typedef struct _518AEB1FEE0990110D4FC7592EB5CC55 *PKSDS3D_LISTENER_ALL;
typedef struct _8765F39B1D4DEFD1F2F8643F85B5D457 *PKSDSOUND_BUFFERDESC;
typedef struct _C0F7BB227D2914979DE22500D0E4A4BA *PKSFASTPROPERTY_ITEM;
typedef struct _KSFILTER_DESCRIPTOR *PKSFILTER_DESCRIPTOR;
typedef struct _tagKSJACK_DESCRIPTION2 *PKSJACK_DESCRIPTION2;
typedef struct _KSM_BDA_DEBUG_LEVEL *PKSM_BDA_DEBUG_LEVEL;
typedef struct _KSM_BDA_SCAN_FILTER *PKSM_BDA_SCAN_FILTER;
typedef struct _KSPIN_DESCRIPTOR_EX *PKSPIN_DESCRIPTOR_EX;
typedef struct _67AAAF7D3F21423E664B1BA9EE478FED *PKSRTAUDIO_HWLATENCY;
typedef struct tagKS_BITMAPINFOHEADER *PKS_BITMAPINFOHEADER;
typedef struct _KS_COPY_MACROVISION *PKS_COPY_MACROVISION;
typedef struct tagKS_DATARANGE_DV_AVC *PKS_DATARANGE_DV_AVC;
typedef struct tagKS_DATARANGE_VIDEO2 *PKS_DATARANGE_VIDEO2;
typedef struct _KS_DVDCOPY_TITLEKEY *PKS_DVDCOPY_TITLEKEY;
typedef struct tagKS_VIDEOINFOHEADER2 *PKS_VIDEOINFOHEADER2;
typedef struct _L2CAP_CONFIG_OPTION *PL2CAP_CONFIG_OPTION;
typedef struct _LINE_ADDRESS_STATUS *PLINE_ADDRESS_STATUS;
typedef struct _LLDP_CURRENT_STATUS *PLLDP_CURRENT_STATUS;
typedef struct _LUID_AND_ATTRIBUTES *PLUID_AND_ATTRIBUTES;
typedef struct _LogoutFromTarget_IN *PLogoutFromTarget_IN;
typedef struct _PMI_MEASUREMENT_DATA PMI_MEASUREMENT_DATA;
typedef struct _MLDV2_REPORT_HEADER *PMLDV2_REPORT_HEADER;
typedef struct _MPIO_GET_DESCRIPTOR *PMPIO_GET_DESCRIPTOR;
typedef struct _MPIO_REGISTERED_DSM *PMPIO_REGISTERED_DSM;
typedef struct _MSMCAEvent_BusError *PMSMCAEvent_BusError;
typedef struct _MSMCAEvent_CPUError *PMSMCAEvent_CPUError;
typedef struct _MSMCAEvent_TLBError *PMSMCAEvent_TLBError;
typedef struct _MSNdis_80211_AddWEP *PMSNdis_80211_AddWEP;
typedef struct _MSNdis_CoMacOptions *PMSNdis_CoMacOptions;
typedef struct _MSNdis_CoMediaInUse *PMSNdis_CoMediaInUse;
typedef struct _MSNdis_ObjectHeader *PMSNdis_ObjectHeader;
typedef struct _MSNdis_ReceiveError *PMSNdis_ReceiveError;
typedef struct _MSNdis_WmiSetHeader *PMSNdis_WmiSetHeader;
typedef struct _MSiSCSI_TCPIPConfig *PMSiSCSI_TCPIPConfig;
typedef struct _NDIS_GENERIC_OBJECT *PNDIS_GENERIC_OBJECT;
typedef struct _NDIS_IP_OPER_STATUS *PNDIS_IP_OPER_STATUS;
typedef struct _NDIS_MINIPORT_BLOCK *PNDIS_MINIPORT_BLOCK;
typedef struct _NDIS_MINIPORT_TIMER *PNDIS_MINIPORT_TIMER;
typedef struct _NDIS_M_DRIVER_BLOCK *PNDIS_M_DRIVER_BLOCK;
typedef struct _NDIS_PM_WOL_PATTERN *PNDIS_PM_WOL_PATTERN;
typedef struct _NDIS_PROCESSOR_INFO *PNDIS_PROCESSOR_INFO;
typedef struct _NDIS_PROTOCOL_BLOCK *PNDIS_PROTOCOL_BLOCK;
typedef struct _NDIS_TAPI_MAKE_CALL *PNDIS_TAPI_MAKE_CALL;
typedef struct _NDIS_WMI_SET_HEADER *PNDIS_WMI_SET_HEADER;
typedef struct _NDIS_WRAPPER_HANDLE *PNDIS_WRAPPER_HANDLE;
typedef struct _NETWORK_ADDRESS_IPX *PNETWORK_ADDRESS_IPX;
typedef struct _POWER_CONDITION_PAGE POWER_CONDITION_PAGE;
typedef struct _PO_WAKE_SOURCE_FIXED PO_WAKE_SOURCE_FIXED;
typedef struct _PO_WAKE_SOURCE_TIMER PO_WAKE_SOURCE_TIMER;
typedef struct _PAR_SET_INFORMATION *PPAR_SET_INFORMATION;
typedef struct _PCC_SUBSPACE_HEADER *PPCC_SUBSPACE_HEADER;
typedef struct _53BCF8451FB1BBF1B3D3F15C66D0D1DB *PPCFILTER_DESCRIPTOR;
typedef struct _PNP_BUS_INFORMATION *PPNP_BUS_INFORMATION;
typedef IPortClsRuntimePower *PPORTCLSRUNTIMEPOWER;
typedef IPortWMIRegistration *PPORTWMIREGISTRATION;
typedef struct _A032DB0F7E204543FB4FDFFDC60EE56A *PPOWER_ACTION_POLICY;
typedef struct _4B6917C7FECE298C62988A6425F6625F *PPOWER_STATE_HANDLER;
typedef struct _POWER_USER_PRESENCE *PPOWER_USER_PRESENCE;
typedef struct _PO_WAKE_SOURCE_INFO *PPO_WAKE_SOURCE_INFO;
typedef struct _4C19A7724930D5B111BE03D85B9BF8C9 *PPPM_IDLESTATE_EVENT;
typedef struct _138CFB88078211FD2A51624E09EC668F *PPPM_IDLE_ACCOUNTING;
typedef struct _0FCABF7018C994F9B8701EF83F726E07 *PPPM_PERFSTATE_EVENT;
typedef struct _2A16572F0F8FCFF7B23E4E39050175A8 *PPPM_WMI_IDLE_STATES;
typedef struct _BC62D53B4BCE191E8F4EB4D4D278EB00 *PPPM_WMI_PERF_STATES;
typedef struct _PTP_VENDOR_DATA_OUT *PPTP_VENDOR_DATA_OUT;
typedef struct _QUERY_PATH_RESPONSE *PQUERY_PATH_RESPONSE;
typedef struct _RDBSS_DEVICE_OBJECT *PRDBSS_DEVICE_OBJECT;
typedef struct _READ_LOG_SECTORS_IN *PREAD_LOG_SECTORS_IN;
typedef struct _REPAIR_COPIES_INPUT *PREPAIR_COPIES_INPUT;
typedef struct _REPARSE_DATA_BUFFER *PREPARSE_DATA_BUFFER;
typedef struct _RESOURCE_HASH_ENTRY *PRESOURCE_HASH_ENTRY;
typedef struct _0235C12200358EB80BD199E9E2C1E45C PRI_RESERVATION_LIST;
typedef struct _KCRM_PROTOCOL_BLOB *PRKCRM_PROTOCOL_BLOB;
typedef struct _PROCESSOR_GROUP_INFO PROCESSOR_GROUP_INFO;
typedef struct _PROCESSOR_IDLE_STATE PROCESSOR_IDLE_STATE;
typedef struct _B8B838046A6339950C48D4D07BD9D7BC PROCESSOR_IDLE_TIMES;
typedef struct _PROCESS_ACCESS_TOKEN PROCESS_ACCESS_TOKEN;
typedef struct _RTL_HEAP_PARAMETERS *PRTL_HEAP_PARAMETERS;
typedef struct RX_LOG_ENTRY_HEADER *PRX_LOG_ENTRY_HEADER;
typedef struct _RemoveiSNSServer_IN *PRemoveiSNSServer_IN;
typedef struct _SCATTER_GATHER_LIST *PSCATTER_GATHER_LIST;
typedef struct _SCSIWMILIB_CONTEXT *PSCSI_WMILIB_CONTEXT;
typedef struct _SERIAL_WMI_COMMPROP *PSERIAL_WMI_COMMPROP;
typedef struct _SET_DISK_ATTRIBUTES *PSET_DISK_ATTRIBUTES;
typedef struct _SINGLE_LIST_ENTRY32 *PSINGLE_LIST_ENTRY32;
typedef struct _SMARTCARD_EXTENSION *PSMARTCARD_EXTENSION;
typedef union SMHBA_PhyStatistics *PSMHBA_PHYSTATISTICS;
typedef struct SMHBA_TargetMapping *PSMHBA_TARGETMAPPING;
typedef struct sockaddr_in6_w2ksp1 *PSOCKADDR_IN6_W2KSP1;
typedef struct sockaddr_storage *PSOCKADDR_STORAGE_LH;
typedef struct sockaddr_storage_xp *PSOCKADDR_STORAGE_XP;
typedef struct _SOCKET_ADDRESS_LIST *PSOCKET_ADDRESS_LIST;
typedef struct _STOR_POFX_COMPONENT *PSTOR_POFX_COMPONENT;
typedef struct _STOR_POFX_DEVICE_V2 *PSTOR_POFX_DEVICE_V2;
typedef struct _STREAM_EXTENT_ENTRY *PSTREAM_EXTENT_ENTRY;
typedef struct _STREAM_LAYOUT_ENTRY *PSTREAM_LAYOUT_ENTRY;
typedef struct _SYSTEM_POWER_POLICY *PSYSTEM_POWER_POLICY;
typedef struct _ScsiReadCapacity_IN *PScsiReadCapacity_IN;
typedef struct _SecPkgContext_Flags *PSecPkgContext_Flags;
typedef struct _SecPkgContext_Sizes *PSecPkgContext_Sizes;
typedef struct _TAPE_GET_STATISTICS *PTAPE_GET_STATISTICS;
typedef struct _TAPE_WMI_OPERATIONS *PTAPE_WMI_OPERATIONS;
typedef struct _TDI_ADDRESS_NETBIOS *PTDI_ADDRESS_NETBIOS;
typedef struct _TDI_CONNECTION_INFO *PTDI_CONNECTION_INFO;
typedef struct _TDI_CONNECT_REQUEST *PTDI_REQUEST_CONNECT;
typedef struct _TDI_REQUEST_RECEIVE *PTDI_REQUEST_RECEIVE;
typedef struct _TEXTUAL_LEAF_FORMAT *PTEXTUAL_LEAF_FORMAT;
typedef struct _TOKEN_DEVICE_CLAIMS *PTOKEN_DEVICE_CLAIMS;
typedef struct _TOKEN_PRIMARY_GROUP *PTOKEN_PRIMARY_GROUP;
typedef struct tagTRANSPORTAUDIOPARMS *PTRANSPORTAUDIOPARMS;
typedef struct tagTRANSPORTBASICPARMS *PTRANSPORTBASICPARMS;
typedef struct tagTRANSPORTVIDEOPARMS *PTRANSPORTVIDEOPARMS;
typedef struct _21360BCC3E7339C6666FC361A17309B6 *PTUNER_ANALOG_CAPS_S;
typedef struct _TXN_PARAMETER_BLOCK *PTXN_PARAMETER_BLOCK;
typedef IUnregisterSubdevice *PUNREGISTERSUBDEVICE;
typedef struct _USBCAMD_DEVICE_DATA *PUSBCAMD_DEVICE_DATA;
typedef union _USB_ENDPOINT_STATUS *PUSB_ENDPOINT_STATUS;
typedef struct _1695112F83C2100BD6016AFE09814BB8 *PUSN_JOURNAL_DATA_V0;
typedef struct _1E8FB3C461BB5B132CC95A1A06B366AC *PUSN_JOURNAL_DATA_V1;
typedef struct _VideoModeDescriptor *PVideoModeDescriptor;
typedef struct _WSK_CLIENT_DISPATCH *PWSK_CLIENT_DISPATCH;
typedef struct _WSK_DATA_INDICATION *PWSK_DATA_INDICATION;
typedef struct _WWAN_AUTH_CHALLENGE *PWWAN_AUTH_CHALLENGE;
typedef struct _WWAN_PACKET_SERVICE *PWWAN_PACKET_SERVICE;
typedef struct _WWAN_SMS_PDU_RECORD *PWWAN_SMS_PDU_RECORD;
typedef struct _WmiSetBrightness_IN *PWmiSetBrightness_IN;
typedef struct _ZONE_SEGMENT_HEADER *PZONE_SEGMENT_HEADER;
typedef struct _ProcessorPerformance ProcessorPerformance;
typedef struct _READ_CAPACITY16_DATA READ_CAPACITY16_DATA;
typedef struct _READ_LOG_SECTORS_OUT READ_LOG_SECTORS_OUT;
typedef struct _REDBOOK_WMI_STD_DATA REDBOOK_WMI_STD_DATA;
typedef struct _REPAIR_COPIES_OUTPUT REPAIR_COPIES_OUTPUT;
typedef struct _F2DB9C7A95CA6E7C489F89DFE01AE08F REQ_GET_DFS_REFERRAL;
typedef struct _RSS_SCALABILITY_INFO RSS_SCALABILITY_INFO;
typedef struct _OSVERSIONINFOEXW RTL_OSVERSIONINFOEXW;
typedef struct _RX_BUFFERING_MANAGER_ RX_BUFFERING_MANAGER;
typedef struct _RemoveVirtualPort_IN RemoveVirtualPort_IN;
typedef struct _RemoveiSNSServer_OUT RemoveiSNSServer_OUT;
typedef struct _RescanVirtualPort_IN RescanVirtualPort_IN;
typedef struct _SCSI_PASS_THROUGH_EX SCSI_PASS_THROUGH_EX;
typedef struct _SDBUS_REQUEST_PACKET SDBUS_REQUEST_PACKET;
typedef struct _SD_QUERY_STATS_INPUT SD_QUERY_STATS_INPUT;
typedef struct _SEC_CHANNEL_BINDINGS SEC_CHANNEL_BINDINGS;
typedef struct _SEC_NEGOTIATION_INFO SEC_NEGOTIATION_INFO;
typedef struct _SERIAL_WMI_COMM_DATA SERIAL_WMI_COMM_DATA;
typedef struct _SERIAL_WMI_PERF_DATA SERIAL_WMI_PERF_DATA;
typedef struct _SET_CMP_ADDRESS_TYPE SET_CMP_ADDRESS_TYPE;
typedef struct _SET_SINGLE_POLICY_IN SET_SINGLE_POLICY_IN;
typedef struct _SE_ADT_ACCESS_REASON SE_ADT_ACCESS_REASON;
typedef struct SMHBA_PortAttributes SMHBA_PORTATTRIBUTES;
typedef struct _SRV_OPEN_ECP_CONTEXT SRV_OPEN_ECP_CONTEXT;
typedef struct _STORAGE_HOTPLUG_INFO STORAGE_HOTPLUG_INFO;
typedef struct _STOR_DEBUGPRINT_ARGS STOR_DEBUGPRINT_ARGS;
typedef struct _STOR_UC_DEVICE_USAGE STOR_UC_DEVICE_USAGE;
typedef struct _STOR_UNIT_ATTRIBUTES STOR_UNIT_ATTRIBUTES;
typedef struct _SYSENV_VARIABLE_INFO SYSENV_VARIABLE_INFO;
typedef struct _64911FAA3782108E0493959C6B1F8F86 SYSTEM_BATTERY_STATE;
typedef struct _ScsiReadCapacity_OUT ScsiReadCapacity_OUT;
typedef struct _SecPkgContext_NamesW SecPkgContext_NamesW;
typedef struct _SetBindingSupport_IN SetBindingSupport_IN;
typedef struct _TA_APPLETALK_ADDR TA_APPLETALK_ADDRESS;
typedef struct _TDI_ADDRESS_OSI_TSAP TDI_ADDRESS_OSI_TSAP;
typedef struct _TRANSLATOR_INTERFACE TRANSLATOR_INTERFACE;
typedef struct truespeechwaveformat_tag TRUESPEECHWAVEFORMAT;
typedef struct _UNICODE_PREFIX_TABLE UNICODE_PREFIX_TABLE;
typedef struct _USBCAMD_DEVICE_DATA2 USBCAMD_DEVICE_DATA2;
typedef struct USBD_FUNCTION_HANDLE__ *USBD_FUNCTION_HANDLE;
typedef union _USB_INTERFACE_STATUS USB_INTERFACE_STATUS;
typedef struct _USB_TOPOLOGY_ADDRESS USB_TOPOLOGY_ADDRESS;
typedef struct _VIDEO_COLOR_LUT_DATA VIDEO_COLOR_LUT_DATA;
typedef struct _VIDEO_HARDWARE_STATE VIDEO_HARDWARE_STATE;
typedef struct tagVIDEO_MONITOR_DEVICE VIDEO_MONITOR_DEVICE;
typedef struct _VIDEO_REQUEST_PACKET VIDEO_REQUEST_PACKET;
typedef struct _VIRTUAL_STORAGE_TYPE VIRTUAL_STORAGE_TYPE;
typedef struct _4678A3289DA4711CDCEC5ACF3537B1AB VOLUME_BITMAP_BUFFER;
typedef struct _WAN_CO_MTULINKPARAMS WAN_CO_MTULINKPARAMS;
typedef struct _48F34F6E58318E719B3C17D5DF8D3416 WAVEFORMATEXTENSIBLE;
typedef struct _WHEA_ERROR_PACKET_V1 WHEA_ERROR_PACKET_V1;
typedef struct _WHEA_ERROR_PACKET_V2 WHEA_ERROR_PACKET_V2;
typedef union _WHEA_PCIXBUS_COMMAND WHEA_PCIXBUS_COMMAND;
typedef struct _WHEA_PCI_SLOT_NUMBER WHEA_PCI_SLOT_NUMBER;
typedef union _WHEA_XPF_CACHE_CHECK WHEA_XPF_CACHE_CHECK;
typedef struct _WHEA_XPF_MCA_SECTION WHEA_XPF_MCA_SECTION;
typedef struct _WMI_DISK_PERFORMANCE WMI_DISK_PERFORMANCE;
typedef struct _WRITE_LOG_SECTORS_IN WRITE_LOG_SECTORS_IN;
typedef struct _WWAN_SMS_CDMA_RECORD WWAN_SMS_CDMA_RECORD;
typedef struct _WWAN_VENDOR_SPECIFIC WWAN_VENDOR_SPECIFIC;
typedef struct _WmiEnumeratePorts_IN WmiEnumeratePorts_IN;
typedef struct _WmiMonitorBrightness WmiMonitorBrightness;
typedef struct _WmiQueryLinkState_IN WmiQueryLinkState_IN;
typedef struct _WmiQueryPortState_IN WmiQueryPortState_IN;
typedef struct _XSTATE_CONFIGURATION XSTATE_CONFIGURATION;
enum _BDCB_CLASSIFICATION {BdCbClassificationUnknownImage = 0x0,BdCbClassificationKnownGoodImage = 0x1,BdCbClassificationKnownBadImage = 0x2,BdCbClassificationKnownBadImageBootCritical = 0x3,BdCbClassificationEnd = 0x4,};
enum _CDROM_OPC_INFO_TYPE {SimpleOpcInfo = 0x1,};
enum _CDROM_SPEED_REQUEST {CdromSetSpeed = 0x0,CdromSetStreaming = 0x1,};
enum _CH_DESCRIPTION_TYPE {ch_description_type_logical = 0x1,ch_description_type_center_frequency = 0x2,ch_description_type_phy_specific = 0x3,};
struct _CLASS_POWER_OPTIONS {unsigned int PowerDown : 1;unsigned int LockQueue : 1;unsigned int HandleSpinDown : 1;unsigned int HandleSpinUp : 1;unsigned int Reserved : 27;};
enum _D3DKMDT_COLOR_BASIS {D3DKMDT_CB_UNINITIALIZED = 0x0,D3DKMDT_CB_INTENSITY = 0x1,D3DKMDT_CB_SRGB = 0x2,D3DKMDT_CB_SCRGB = 0x3,D3DKMDT_CB_YCBCR = 0x4,D3DKMDT_CB_YPBPR = 0x5,};
enum _DISK_SNAPSHOT_STATE {DiskSnapshotNormalDisk = 0x0,DiskSnapshotSnapshotCheckRequired = 0x1,DiskSnapshotPreSnapshot = 0x2,DiskSnapshotSnapshotDisk = 0x3,};
enum _DOT11_KEY_DIRECTION {dot11_key_direction_both = 0x1,dot11_key_direction_inbound = 0x2,dot11_key_direction_outbound = 0x3,};
struct _DOT11_WFD_GO_INTENT {unsigned char TieBreaker : 1;unsigned char Intent : 7;};
enum _DOT11_WFD_SCAN_TYPE {dot11_wfd_scan_type_active = 0x1,dot11_wfd_scan_type_passive = 0x2,dot11_wfd_scan_type_auto = 0x3,};
enum _DXGK_INTERRUPT_TYPE {DXGK_INTERRUPT_DMA_COMPLETED = 0x1,DXGK_INTERRUPT_DMA_PREEMPTED = 0x2,DXGK_INTERRUPT_CRTC_VSYNC = 0x3,DXGK_INTERRUPT_DMA_FAULTED = 0x4,DXGK_INTERRUPT_DISPLAYONLY_VSYNC = 0x5,DXGK_INTERRUPT_DISPLAYONLY_PRESENT_PROGRESS = 0x6,DXGK_INTERRUPT_CRTC_VSYNC_WITH_MULTIPLANE_OVERLAY = 0x7,};
struct _EISA_IRQ_DESCRIPTOR {unsigned char Interrupt : 4;unsigned char Reserved : 1;unsigned char LevelTriggered : 1;unsigned char Shared : 1;unsigned char MoreEntries : 1;};
enum _FLT_FILESYSTEM_TYPE {FLT_FSTYPE_UNKNOWN = 0x0,FLT_FSTYPE_RAW = 0x1,FLT_FSTYPE_NTFS = 0x2,FLT_FSTYPE_FAT = 0x3,FLT_FSTYPE_CDFS = 0x4,FLT_FSTYPE_UDFS = 0x5,FLT_FSTYPE_LANMAN = 0x6,FLT_FSTYPE_WEBDAV = 0x7,FLT_FSTYPE_RDPDR = 0x8,FLT_FSTYPE_NFS = 0x9,FLT_FSTYPE_MS_NETWARE = 0xA,FLT_FSTYPE_NETWARE = 0xB,FLT_FSTYPE_BSUDF = 0xC,FLT_FSTYPE_MUP = 0xD,FLT_FSTYPE_RSFX = 0xE,FLT_FSTYPE_ROXIO_UDF1 = 0xF,FLT_FSTYPE_ROXIO_UDF2 = 0x10,FLT_FSTYPE_ROXIO_UDF3 = 0x11,FLT_FSTYPE_TACIT = 0x12,FLT_FSTYPE_FS_REC = 0x13,FLT_FSTYPE_INCD = 0x14,FLT_FSTYPE_INCD_FAT = 0x15,FLT_FSTYPE_EXFAT = 0x16,FLT_FSTYPE_PSFS = 0x17,FLT_FSTYPE_GPFS = 0x18,FLT_FSTYPE_NPFS = 0x19,FLT_FSTYPE_MSFS = 0x1A,FLT_FSTYPE_CSVFS = 0x1B,FLT_FSTYPE_REFS = 0x1C,FLT_FSTYPE_OPENAFS = 0x1D,};
enum _FPDT_RECORD_SUBTYPE {S3PTTypeResumePerformance = 0x0,S3PTTypeSuspendPerformance = 0x1,BasicBootPerformanceType = 0x2,};
enum _KEYBOARD_SCAN_STATE {Normal = 0x0,GotE0 = 0x1,GotE1 = 0x2,};
enum _KINTERRUPT_POLARITY {InterruptPolarityUnknown = 0x0,InterruptActiveHigh = 0x1,InterruptRisingEdge = 0x1,InterruptActiveLow = 0x2,InterruptFallingEdge = 0x2,InterruptActiveBoth = 0x3,};
enum _MEMORY_CACHING_TYPE {MmNonCached = 0x0,MmCached = 0x1,MmWriteCombined = 0x2,MmHardwareCoherentCached = 0x3,MmNonCachedUnordered = 0x4,MmUSWCCached = 0x5,MmMaximumCacheType = 0x6,};
enum _MM_ROTATE_DIRECTION {MmToFrameBuffer = 0x0,MmToFrameBufferNoCopy = 0x1,MmToRegularMemory = 0x2,MmToRegularMemoryNoCopy = 0x3,MmMaximumRotateDirection = 0x4,};
enum _NDIS_INTERFACE_TYPE {NdisInterfaceInternal = 0x0,NdisInterfaceIsa = 0x1,NdisInterfaceEisa = 0x2,NdisInterfaceMca = 0x3,NdisInterfaceTurboChannel = 0x4,NdisInterfacePci = 0x5,NdisInterfacePcMcia = 0x8,NdisInterfaceCBus = 0x9,NdisInterfaceMPIBus = 0xA,NdisInterfaceMPSABus = 0xB,NdisInterfaceProcessorInternal = 0xC,NdisInterfaceInternalPowerBus = 0xD,NdisInterfacePNPISABus = 0xE,NdisInterfacePNPBus = 0xF,NdisInterfaceUSB = 0x10,NdisInterfaceIrda = 0x11,NdisInterface1394 = 0x12,NdisMaximumInterfaceType = 0x13,};
enum _NDIS_INTERRUPT_TYPE {NDIS_CONNECT_LINE_BASED = 0x1,NDIS_CONNECT_MESSAGE_BASED = 0x2,};
struct _NDIS_MINIPORT_BLOCK;
struct _NDIS_M_DRIVER_BLOCK;
enum _NDIS_PARAMETER_TYPE {NdisParameterInteger = 0x0,NdisParameterHexInteger = 0x1,NdisParameterString = 0x2,NdisParameterMultiString = 0x3,NdisParameterBinary = 0x4,};
enum _NDIS_PROCESSOR_TYPE {NdisProcessorX86 = 0x0,NdisProcessorMips = 0x1,NdisProcessorAlpha = 0x2,NdisProcessorPpc = 0x3,NdisProcessorAmd64 = 0x4,NdisProcessorIA64 = 0x5,NdisProcessorArm = 0x6,};
struct _NDIS_PROTOCOL_BLOCK;
struct _NDIS_WRAPPER_HANDLE;
enum _NET_IF_ADMIN_STATUS {NET_IF_ADMIN_STATUS_UP = 0x1,NET_IF_ADMIN_STATUS_DOWN = 0x2,NET_IF_ADMIN_STATUS_TESTING = 0x3,};
enum _NL_NETWORK_CATEGORY {NetworkCategoryPublic = 0x0,NetworkCategoryPrivate = 0x1,NetworkCategoryDomainAuthenticated = 0x2,NetworkCategoryUnchanged = 0xFFFFFFFF,NetworkCategoryUnknown = 0xFFFFFFFF,};
enum _OFFLOAD_OPERATION_E {AUTHENTICATE = 0x1,ENCRYPT = 0x2,};
enum _POWER_PLATFORM_ROLE {PlatformRoleUnspecified = 0x0,PlatformRoleDesktop = 0x1,PlatformRoleMobile = 0x2,PlatformRoleWorkstation = 0x3,PlatformRoleEnterpriseServer = 0x4,PlatformRoleSOHOServer = 0x5,PlatformRoleAppliancePC = 0x6,PlatformRolePerformanceServer = 0x7,PlatformRoleSlate = 0x8,PlatformRoleMaximum = 0x9,};
enum _RX_FCBTRACKER_CASES {RX_FCBTRACKER_CASE_NORMAL = 0x0,RX_FCBTRACKER_CASE_NULLCONTEXT = 0x1,RX_FCBTRACKER_CASE_CBS_CONTEXT = 0x2,RX_FCBTRACKER_CASE_CBS_WAIT_CONTEXT = 0x3,RX_FCBTRACKER_CASE_MAXIMUM = 0x4,};
struct _SCATTER_GATHER_LIST;
enum _SCO_INDICATION_CODE {ScoIndicationAddReference = 0x0,ScoIndicationReleaseReference = 0x1,ScoIndicationRemoteConnect = 0x2,ScoIndicationRemoteDisconnect = 0x3,};
enum _SECURITY_LOGON_TYPE {UndefinedLogonType = 0x0,Interactive = 0x2,Network = 0x3,Batch = 0x4,Service = 0x5,Proxy = 0x6,Unlock = 0x7,NetworkCleartext = 0x8,NewCredentials = 0x9,RemoteInteractive = 0xA,CachedInteractive = 0xB,CachedRemoteInteractive = 0xC,CachedUnlock = 0xD,};
enum _STORAGE_PROPERTY_ID {StorageDeviceProperty = 0x0,StorageAdapterProperty = 0x1,StorageDeviceIdProperty = 0x2,StorageDeviceUniqueIdProperty = 0x3,StorageDeviceWriteCacheProperty = 0x4,StorageMiniportProperty = 0x5,StorageAccessAlignmentProperty = 0x6,StorageDeviceSeekPenaltyProperty = 0x7,StorageDeviceTrimProperty = 0x8,StorageDeviceWriteAggregationProperty = 0x9,StorageDeviceDeviceTelemetryProperty = 0xA,StorageDeviceLBProvisioningProperty = 0xB,StorageDevicePowerProperty = 0xC,StorageDeviceCopyOffloadProperty = 0xD,StorageDeviceResiliencyProperty = 0xE,};
struct _SecPkgContext_Flags {unsigned int Flags;};
struct _SecPkgContext_Sizes {unsigned int cbMaxToken;unsigned int cbMaxSignature;unsigned int cbBlockSize;unsigned int cbSecurityTrailer;};
enum _TABLE_SEARCH_RESULT {TableEmptyTree = 0x0,TableFoundNode = 0x1,TableInsertAsLeft = 0x2,TableInsertAsRight = 0x3,};
struct _TEXTUAL_LEAF_FORMAT {unsigned int Language : 16;unsigned int CharacterSet : 12;unsigned int Width : 4;};
enum _TRANSACTION_OUTCOME {TransactionOutcomeUndetermined = 0x1,TransactionOutcomeCommitted = 0x2,TransactionOutcomeAborted = 0x3,};
enum _VPD_IDENTIFIER_TYPE {VpdIdentifierTypeVendorSpecific = 0x0,VpdIdentifierTypeVendorId = 0x1,VpdIdentifierTypeEUI64 = 0x2,VpdIdentifierTypeFCPHName = 0x3,VpdIdentifierTypePortRelative = 0x4,VpdIdentifierTypeTargetPortGroup = 0x5,VpdIdentifierTypeLogicalUnitGroup = 0x6,VpdIdentifierTypeMD5LogicalUnitId = 0x7,VpdIdentifierTypeSCSINameString = 0x8,};
enum _WHEA_ERROR_SEVERITY {WheaErrSevRecoverable = 0x0,WheaErrSevFatal = 0x1,WheaErrSevCorrected = 0x2,WheaErrSevInformational = 0x3,};
enum _WWAN_CELLULAR_CLASS {WwanCellularClassUnknown = 0x0,WwanCellularClassGsm = 0x1,WwanCellularClassCdma = 0x2,WwanCellularClassMax = 0x3,};
enum _WWAN_EMERGENCY_MODE {WwanEmergencyModeOff = 0x0,WwanEmergencyModeOn = 0x1,WwanEmergencyModeMax = 0x2,};
enum _WWAN_REGISTER_STATE {WwanRegisterStateUnknown = 0x0,WwanRegisterStateDeregistered = 0x1,WwanRegisterStateSearching = 0x2,WwanRegisterStateHome = 0x3,WwanRegisterStateRoaming = 0x4,WwanRegisterStatePartner = 0x5,WwanRegisterStateDenied = 0x6,WwanRegisterStateMax = 0x7,};
typedef struct _API_SET_VALUE_ARRAY API_SET_VALUE_ARRAY;
typedef struct _API_SET_VALUE_ENTRY API_SET_VALUE_ENTRY;
typedef struct _ATA_PASS_THROUGH_EX ATA_PASS_THROUGH_EX;
typedef struct _ATM_FLOW_PARAMETERS ATM_FLOW_PARAMETERS;
typedef struct _AVCSTRM_FORMAT_INFO AVCSTRM_FORMAT_INFO;
typedef struct _AVCSTRM_OPEN_STRUCT AVCSTRM_OPEN_STRUCT;
typedef struct _AVC_EXT_PLUG_COUNTS AVC_EXT_PLUG_COUNTS;
typedef struct _AVC_PEER_DO_LOCATOR AVC_PEER_DO_LOCATOR;
typedef struct _AVC_PRECONNECT_INFO AVC_PRECONNECT_INFO;
typedef struct _AVC_SETCONNECT_INFO AVC_SETCONNECT_INFO;
typedef struct _AddRADIUSServer_OUT AddRADIUSServer_OUT;
enum ApplicationTypeType {SCTE28_ConditionalAccess = 0x0,SCTE28_POD_Host_Binding_Information = 0x1,SCTE28_IPService = 0x2,SCTE28_NetworkInterface_SCTE55_2 = 0x3,SCTE28_NetworkInterface_SCTE55_1 = 0x4,SCTE28_CopyProtection = 0x5,SCTE28_Diagnostic = 0x6,SCTE28_Undesignated = 0x7,SCTE28_Reserved = 0x8,};
typedef struct _BDA_CAS_OPENMMIDATA BDA_CAS_OPENMMIDATA;
enum BDA_DISCOVERY_STATE {BDA_DISCOVERY_UNSPECIFIED = 0x0,BDA_DISCOVERY_REQUIRED = 0x1,BDA_DISCOVERY_COMPLETE = 0x2,};
typedef struct _BDA_DISEQC_RESPONSE BDA_DISEQC_RESPONSE;
typedef struct _BDA_FILTER_TEMPLATE BDA_FILTER_TEMPLATE;
typedef struct _BDA_ISDBCAS_EMG_REQ BDA_ISDBCAS_EMG_REQ;
typedef struct _BDA_MUX_PIDLISTITEM BDA_MUX_PIDLISTITEM;
typedef struct _BDA_RATING_PINRESET BDA_RATING_PINRESET;
typedef struct _BDA_SIGNAL_TIMEOUTS BDA_SIGNAL_TIMEOUTS;
typedef struct _BDA_TS_SELECTORINFO BDA_TS_SELECTORINFO;
typedef struct _BIT_RATE_ADJUSTMENT BIT_RATE_ADJUSTMENT;
typedef struct _BTH_ENUMERATOR_INFO BTH_ENUMERATOR_INFO;
typedef struct _BUS_GENERATION_NODE BUS_GENERATION_NODE;
typedef struct _CDROM_SET_STREAMING CDROM_SET_STREAMING;
typedef struct _CDROM_TOC_ATIP_DATA CDROM_TOC_ATIP_DATA;
typedef struct _CHANGER_MOVE_MEDIUM CHANGER_MOVE_MEDIUM;
typedef struct _CLASS_POWER_CONTEXT CLASS_POWER_CONTEXT;
typedef struct _CLASS_POWER_OPTIONS CLASS_POWER_OPTIONS;
typedef struct _CMP_GET_PLUG_HANDLE CMP_GET_PLUG_HANDLE;
typedef struct _CM_SCSI_DEVICE_DATA CM_SCSI_DEVICE_DATA;
typedef struct _CO_MEDIA_PARAMETERS CO_MEDIA_PARAMETERS;
typedef struct _D3DKMDT_PALETTEDATA D3DKMDT_PALETTEDATA;
typedef struct _DEBUG_PORT_TABLE_V2 DEBUG_PORT_TABLE_V2;
typedef struct _DEVICE_CAPABILITIES DEVICE_CAPABILITIES;
typedef struct _DEVICE_SET_PASSWORD DEVICE_SET_PASSWORD;
typedef struct digiadpcmmwaveformat_tag DIGIADPCMWAVEFORMAT;
typedef struct _DISK_DETECTION_INFO DISK_DETECTION_INFO;
typedef struct _DISK_GROW_PARTITION DISK_GROW_PARTITION;
typedef struct _DISK_PARTITION_INFO DISK_PARTITION_INFO;
typedef struct _DMA_ADAPTER_INFO_V1 DMA_ADAPTER_INFO_V1;
typedef struct _DOT11_ADDITIONAL_IE DOT11_ADDITIONAL_IE;
typedef struct _DOT11_PHY_TYPE_INFO DOT11_PHY_TYPE_INFO;
typedef struct _DOT11_RESET_REQUEST DOT11_RESET_REQUEST;
typedef struct _DOT11_START_REQUEST DOT11_START_REQUEST;
typedef struct _DOT11_WFD_GO_INTENT DOT11_WFD_GO_INTENT;
typedef struct _DOT11_WME_UPDATE_IE DOT11_WME_UPDATE_IE;
typedef struct _DOT4_DC_CREATE_DATA DOT4_DC_CREATE_DATA;
typedef struct _DSM_COMPLETION_INFO DSM_COMPLETION_INFO;
typedef struct _DSM_DEREGISTER_DATA DSM_DEREGISTER_DATA;
typedef struct _DXGKARG_COMMITVIDPN DXGKARG_COMMITVIDPN;
typedef struct _DXGKARG_FLIPOVERLAY DXGKARG_FLIPOVERLAY;
typedef struct _DXGKARG_GETSCANLINE DXGKARG_GETSCANLINE;
typedef struct _DXGKARG_RESETENGINE DXGKARG_RESETENGINE;
typedef struct _DXGKARG_STOPCAPTURE DXGKARG_STOPCAPTURE;
typedef struct _DXGK_ALLOCATIONINFO DXGK_ALLOCATIONINFO;
typedef struct _DXGK_ALLOCATIONLIST DXGK_ALLOCATIONLIST;
typedef struct _DXGK_BACKLIGHT_INFO DXGK_BACKLIGHT_INFO;
typedef struct _DXGK_QUERYSEGMENTIN DXGK_QUERYSEGMENTIN;
typedef struct _DXGK_TRANSFERFLAGS2 DXGK_TRANSFERFLAGS2;
typedef struct _EISA_IRQ_DESCRIPTOR EISA_IRQ_DESCRIPTOR;
typedef struct _ELEMENT_STATUS_PAGE ELEMENT_STATUS_PAGE;
typedef struct _ENCRYPTED_DATA_INFO ENCRYPTED_DATA_INFO;
typedef struct _EVENT_FILTER_HEADER EVENT_FILTER_HEADER;
typedef struct _FILE_EA_INFORMATION FILE_EA_INFORMATION;
typedef struct _FILE_ID_INFORMATION FILE_ID_INFORMATION;
typedef struct _FILTER_REPLY_HEADER FILTER_REPLY_HEADER;
typedef struct _FLT_RELATED_OBJECTS FLT_RELATED_OBJECTS;
typedef struct _FLT_TAG_DATA_BUFFER FLT_TAG_DATA_BUFFER;
typedef struct _FS_FILTER_CALLBACKS FS_FILTER_CALLBACKS;
typedef struct _GET_DISK_ATTRIBUTES GET_DISK_ATTRIBUTES;
typedef struct _GetFC4Statistics_IN GetFC4Statistics_IN;
typedef struct _GetFCPStatistics_IN GetFCPStatistics_IN;
typedef struct _HAL_BUS_INFORMATION HAL_BUS_INFORMATION;
typedef struct _HBAFCPBindingEntry2 HBAFCPBindingEntry2;
typedef struct HBA_FCPBindingEntry HBA_FCPBINDINGENTRY;
typedef struct _HIDP_GETCOLDESC_DBG HIDP_GETCOLDESC_DBG;
typedef struct _HW_EVENT_DESCRIPTOR HW_EVENT_DESCRIPTOR;
typedef struct _IDE_ERROR_LOG_ENTRY IDE_ERROR_LOG_ENTRY;
typedef struct _IGMPV3_QUERY_HEADER IGMPV3_QUERY_HEADER;
typedef union _IMAGE_AUX_SYMBOL_EX IMAGE_AUX_SYMBOL_EX;
struct IMiniportMidiStream {struct IMiniportMidiStreamVtbl *lpVtbl;};
struct IMiniportWaveCyclic {struct IMiniportWaveCyclicVtbl *lpVtbl;};
typedef struct _IO_ERROR_LOG_PACKET IO_ERROR_LOG_PACKET;
typedef struct _IO_SECURITY_CONTEXT IO_SECURITY_CONTEXT;
typedef IPRouteNextHopEntry_V2 IPRouteNextHopEntry;
typedef struct _IPV4_ROUTING_HEADER IPV4_ROUTING_HEADER;
typedef struct _IPV6_ROUTING_HEADER IPV6_ROUTING_HEADER;
struct IPortClsSubdeviceEx {struct IPortClsSubdeviceExVtbl *lpVtbl;};
typedef struct _IRB_REQ_ASYNC_WRITE IRB_REQ_ASYNC_WRITE;
typedef struct _ISCSI_TargetMapping ISCSI_TargetMapping;
typedef struct _IdleStateAccounting IdleStateAccounting;
typedef struct _KBUGCHECK_ADD_PAGES KBUGCHECK_ADD_PAGES;
typedef struct _KCRM_MARSHAL_HEADER KCRM_MARSHAL_HEADER;
typedef struct _KDEVICE_QUEUE_ENTRY KDEVICE_QUEUE_ENTRY;
typedef struct _KEYBOARD_ATTRIBUTES KEYBOARD_ATTRIBUTES;
typedef struct _KEYBOARD_IME_STATUS KEYBOARD_IME_STATUS;
typedef struct _KEYBOARD_INPUT_DATA KEYBOARD_INPUT_DATA;
typedef struct _24396BA7B1ABFC61208375C7C88D8B5F KSALLOCATOR_FRAMING;
typedef struct _40B3E31023928B11E2A8685514812B52 KSDATAFORMAT_DSOUND;
typedef struct _KSDEVICE_DESCRIPTOR KSDEVICE_DESCRIPTOR;
typedef struct _518AEB1FEE0990110D4FC7592EB5CC55 KSDS3D_LISTENER_ALL;
typedef struct _8765F39B1D4DEFD1F2F8643F85B5D457 KSDSOUND_BUFFERDESC;
typedef struct _C0F7BB227D2914979DE22500D0E4A4BA KSFASTPROPERTY_ITEM;
typedef struct _KSFILTER_DESCRIPTOR KSFILTER_DESCRIPTOR;
typedef struct _tagKSJACK_DESCRIPTION2 KSJACK_DESCRIPTION2;
typedef struct _KSM_BDA_DEBUG_LEVEL KSM_BDA_DEBUG_LEVEL;
typedef struct _KSM_BDA_SCAN_FILTER KSM_BDA_SCAN_FILTER;
typedef struct _KSPIN_DESCRIPTOR_EX KSPIN_DESCRIPTOR_EX;
typedef struct _67AAAF7D3F21423E664B1BA9EE478FED KSRTAUDIO_HWLATENCY;
typedef struct tagKS_BITMAPINFOHEADER KS_BITMAPINFOHEADER;
typedef struct _KS_COPY_MACROVISION KS_COPY_MACROVISION;
typedef struct tagKS_DATARANGE_DV_AVC KS_DATARANGE_DV_AVC;
typedef struct tagKS_DATARANGE_VIDEO2 KS_DATARANGE_VIDEO2;
typedef struct _KS_DVDCOPY_TITLEKEY KS_DVDCOPY_TITLEKEY;
typedef struct tagKS_VIDEOINFOHEADER2 KS_VIDEOINFOHEADER2;
typedef struct _L2CAP_CONFIG_OPTION L2CAP_CONFIG_OPTION;
typedef struct _LINE_ADDRESS_STATUS LINE_ADDRESS_STATUS;
typedef struct _LLDP_CURRENT_STATUS LLDP_CURRENT_STATUS;
typedef struct _INTERFACE_INFO_EX *LPINTERFACE_INFO_EX;
typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;
typedef struct _LogoutFromTarget_IN LogoutFromTarget_IN;
enum MACRO_ACCESS_DEVICE {DIRECT_ACCESS_DEVICE = 0x0,SEQUENTIAL_ACCESS_DEVICE = 0x1,PRINTER_DEVICE = 0x2,PROCESSOR_DEVICE = 0x3,WRITE_ONCE_READ_MULTIPLE_DEVICE = 0x4,READ_ONLY_DIRECT_ACCESS_DEVICE = 0x5,SCANNER_DEVICE = 0x6,OPTICAL_DEVICE = 0x7,};
enum MACRO_ACCESS_MAX_MS {ACCESS_MAX_MS_OBJECT_ACE_TYPE = 0x8,ACCESS_MAX_MS_V4_ACE_TYPE = 0x8,ACCESS_MAX_MS_ACE_TYPE = 0x8,ACCESS_ALLOWED_CALLBACK_ACE_TYPE = 0x9,ACCESS_DENIED_CALLBACK_ACE_TYPE = 0xA,ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE = 0xB,ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE = 0xC,};
enum MACRO_ACCESS_OBJECT {ACCESS_OBJECT_GUID = 0,ACCESS_PROPERTY_SET_GUID = 1,ACCESS_PROPERTY_GUID = 2,ACCESS_MAX_LEVEL = 4,};
enum MACRO_ACCESS_REASON {ACCESS_REASON_TYPE_MASK = 0xFF0000,ACCESS_REASON_DATA_MASK = 0xFFFF,ACCESS_REASON_STAGING_MASK = 0x80000000,ACCESS_REASON_EXDATA_MASK = 0x7F000000,};
enum MACRO_ACPI_HARDWARE {ACPI_HARDWARE_NOT_PRESENT_BIT = 20,ACPI_HARDWARE_NOT_PRESENT = 1048576,};
enum MACRO_ACPI_OPREGION {ACPI_OPREGION_ACCESS_AS_RAW = 0x1,ACPI_OPREGION_ACCESS_AS_COOKED = 0x2,ACPI_OPREGION_REGION_SPACE_MEMORY = 0x0,ACPI_OPREGION_REGION_SPACE_IO = 0x1,ACPI_OPREGION_REGION_SPACE_PCI_CONFIG = 0x2,ACPI_OPREGION_REGION_SPACE_EC = 0x3,ACPI_OPREGION_REGION_SPACE_SMB = 0x4,ACPI_OPREGION_REGION_SPACE_CMOS_CONFIG = 0x5,ACPI_OPREGION_REGION_SPACE_PCIBARTARGET = 0x6,ACPI_OPREGION_READ = 0x0,ACPI_OPREGION_WRITE = 0x1,ACPI_OPREGION_ACCESS_AT_HIGH_LEVEL = 0x1,};
enum MACRO_AddiSNSServer {AddiSNSServer = 101,};
enum MACRO_BUS_INTERFACE {BUS_INTERFACE_SWENUM_VERSION = 0x100,};
enum MACRO_Brightness_ID {WmiSetALSBrightness_IN_Brightness_ID = 1,WmiMonitorBrightnessEvent_Brightness_ID = 1,WmiMonitorRawEEdidV1Block_Id_ID = 1,WmiMonitorRawEEdidV1Block_Type_ID = 2,WmiMonitorRawEEdidV1Block_Content_ID = 3,};
enum MACRO_CC_AGGRESSIVE {CC_AGGRESSIVE_UNMAP_BEHIND = 0x1,CC_DISABLE_READ_AHEAD = 0x2,CC_DISABLE_WRITE_BEHIND = 0x4,CC_DISABLE_DIRTY_PAGE_TRACKING = 0x8,CC_ENABLE_DISK_IO_ACCOUNTING = 0x10,CC_DISABLE_UNMAP_BEHIND = 0x20,};
enum MACRO_CHECKSUM_TYPE {CHECKSUM_TYPE_UNCHANGED = -1,CHECKSUM_TYPE_NONE = 0,CHECKSUM_TYPE_CRC32 = 1,CHECKSUM_TYPE_CRC64 = 2,CHECKSUM_TYPE_ECC = 3,CHECKSUM_TYPE_FIRST_UNUSED_TYPE = 4,};
enum MACRO_CLASS_SPECIAL {CLASS_SPECIAL_DISABLE_SPIN_DOWN = 0x1,CLASS_SPECIAL_DISABLE_SPIN_UP = 0x2,CLASS_SPECIAL_NO_QUEUE_LOCK = 0x8,CLASS_SPECIAL_DISABLE_WRITE_CACHE = 0x10,CLASS_SPECIAL_CAUSE_NOT_REPORTABLE_HACK = 0x20,CLASS_SPECIAL_MODIFY_CACHE_UNSUCCESSFUL = 0x40,CLASS_SPECIAL_FUA_NOT_SUPPORTED = 0x80,CLASS_SPECIAL_VALID_MASK = 0xFB,CLASS_SPECIAL_RESERVED = 0xFFFFFF04,};
enum MACRO_CLASS_WORKING {CLASS_WORKING_SET_MAXIMUM = 2048,CLASS_INTERPRET_SENSE_INFO2_MAXIMUM_HISTORY_COUNT = 30000,CLASS_SRB_SCSI_REQUEST_BLOCK = 1,CLASS_SRB_STORAGE_REQUEST_BLOCK = 2,};
enum MACRO_CLOCK_SUPPORT {CLOCK_SUPPORT_CAN_SET_ONBOARD_CLOCK = 0x1,CLOCK_SUPPORT_CAN_READ_ONBOARD_CLOCK = 0x2,CLOCK_SUPPORT_CAN_RETURN_STREAM_TIME = 0x4,};
enum MACRO_COMMUNICATION {COMMUNICATION_DEVICE = 0x9,ARRAY_CONTROLLER_DEVICE = 0xC,SCSI_ENCLOSURE_DEVICE = 0xD,REDUCED_BLOCK_DEVICE = 0xE,OPTICAL_CARD_READER_WRITER_DEVICE = 0xF,BRIDGE_CONTROLLER_DEVICE = 0x10,OBJECT_BASED_STORAGE_DEVICE = 0x11,LOGICAL_UNIT_NOT_PRESENT_DEVICE = 0x7F,};
enum MACRO_CONFIG_STATUS {CONFIG_STATUS_SUCCESS = 0,CONFIG_STATUS_INVALID_PARAMETER = 1,CONFIG_STATUS_REJECT = 2,CONFIG_STATUS_UNKNOWN_OPTION = 3,CONFIG_STATUS_DISCONNECT = 4095,};
enum MACRO_CONFIG_UPLOAD {CONFIG_UPLOAD = 14,CONFIG_DOWNLOAD = 15,};
enum MACRO_DBG_EXCEPTION {DBG_EXCEPTION_NOT_HANDLED = 0x80010001,};
enum MACRO_DIRTY_NOWRITE {DIRTY_NOWRITE_PAGES_CONGESTION = 0xFD,};
enum MACRO_DISPLAYPOLICY {DISPLAYPOLICY_AC = 0x1,DISPLAYPOLICY_DC = 0x2,DISPLAYPOLICY_BOTH = 0x3,};
enum MACRO_DOT11_COUNTRY {DOT11_COUNTRY_OR_REGION_STRING_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_SEND_GO {DOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DUMP_MINIPORT {DUMP_MINIPORT_VERSION_1 = 0x100,DUMP_MINIPORT_VERSION = 0x200,DUMP_MINIPORT_NAME_LENGTH = 0xF,};
enum MACRO_DUMP_POINTERS {DUMP_POINTERS_VERSION_1 = 1,DUMP_POINTERS_VERSION_2 = 2,DUMP_POINTERS_VERSION_3 = 3,DUMP_DRIVER_NAME_LENGTH = 15,DUMP_EX_FLAG_SUPPORT_64BITMEMORY = 1,DUMP_EX_FLAG_SUPPORT_DD_TELEMETRY = 2,DUMP_EX_FLAG_RESUME_SUPPORT = 4,};
enum MACRO_ERROR_MONITOR {ERROR_MONITOR_NO_DESCRIPTOR = 0x80261001,ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT = 0x80261002,ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM = 0xC0261003,ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK = 0xC0261004,ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED = 0xC0261005,ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK = 0xC0261006,ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK = 0xC0261007,ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA = 0xC0261008,ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK = 0xC0261009,ERROR_MONITOR_INVALID_MANUFACTURE_DATE = 0xC026100A,ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER = 0xC0262000,ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER = 0xC0262001,ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER = 0xC0262002,ERROR_GRAPHICS_ADAPTER_WAS_RESET = 0xC0262003,ERROR_GRAPHICS_INVALID_DRIVER_MODEL = 0xC0262004,ERROR_GRAPHICS_PRESENT_MODE_CHANGED = 0xC0262005,ERROR_GRAPHICS_PRESENT_OCCLUDED = 0xC0262006,ERROR_GRAPHICS_PRESENT_DENIED = 0xC0262007,ERROR_GRAPHICS_CANNOTCOLORCONVERT = 0xC0262008,ERROR_GRAPHICS_DRIVER_MISMATCH = 0xC0262009,ERROR_GRAPHICS_PARTIAL_DATA_POPULATED = 0x4026200A,ERROR_GRAPHICS_PRESENT_REDIRECTION_DISABLED = 0xC026200B,ERROR_GRAPHICS_PRESENT_UNOCCLUDED = 0xC026200C,ERROR_GRAPHICS_WINDOWDC_NOT_AVAILABLE = 0xC026200D,ERROR_GRAPHICS_WINDOWLESS_PRESENT_DISABLED = 0xC026200E,ERROR_GRAPHICS_NO_VIDEO_MEMORY = 0xC0262100,ERROR_GRAPHICS_CANT_LOCK_MEMORY = 0xC0262101,ERROR_GRAPHICS_ALLOCATION_BUSY = 0xC0262102,ERROR_GRAPHICS_TOO_MANY_REFERENCES = 0xC0262103,ERROR_GRAPHICS_TRY_AGAIN_LATER = 0xC0262104,ERROR_GRAPHICS_TRY_AGAIN_NOW = 0xC0262105,ERROR_GRAPHICS_ALLOCATION_INVALID = 0xC0262106,ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE = 0xC0262107,ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED = 0xC0262108,ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION = 0xC0262109,ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE = 0xC0262110,ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION = 0xC0262111,ERROR_GRAPHICS_ALLOCATION_CLOSED = 0xC0262112,ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE = 0xC0262113,ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE = 0xC0262114,ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE = 0xC0262115,ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST = 0xC0262116,ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE = 0xC0262200,ERROR_GRAPHICS_SKIP_ALLOCATION_PREPARATION = 0x40262201,ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY = 0xC0262300,ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED = 0xC0262301,ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED = 0xC0262302,ERROR_GRAPHICS_INVALID_VIDPN = 0xC0262303,ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE = 0xC0262304,ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET = 0xC0262305,ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED = 0xC0262306,ERROR_GRAPHICS_MODE_NOT_PINNED = 0x262307,ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET = 0xC0262308,ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET = 0xC0262309,ERROR_GRAPHICS_INVALID_FREQUENCY = 0xC026230A,ERROR_GRAPHICS_INVALID_ACTIVE_REGION = 0xC026230B,ERROR_GRAPHICS_INVALID_TOTAL_REGION = 0xC026230C,ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE = 0xC0262310,ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE = 0xC0262311,ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET = 0xC0262312,ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY = 0xC0262313,ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET = 0xC0262314,ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET = 0xC0262315,ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET = 0xC0262316,ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET = 0xC0262317,ERROR_GRAPHICS_TARGET_ALREADY_IN_SET = 0xC0262318,ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH = 0xC0262319,ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY = 0xC026231A,ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET = 0xC026231B,ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE = 0xC026231C,ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET = 0xC026231D,ERROR_GRAPHICS_NO_PREFERRED_MODE = 0x26231E,ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET = 0xC026231F,ERROR_GRAPHICS_STALE_MODESET = 0xC0262320,ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET = 0xC0262321,ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE = 0xC0262322,ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN = 0xC0262323,ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE = 0xC0262324,ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION = 0xC0262325,ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES = 0xC0262326,ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY = 0xC0262327,ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE = 0xC0262328,ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET = 0xC0262329,ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET = 0xC026232A,ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR = 0xC026232B,ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET = 0xC026232C,ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET = 0xC026232D,ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE = 0xC026232E,ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE = 0xC026232F,ERROR_GRAPHICS_RESOURCES_NOT_RELATED = 0xC0262330,ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE = 0xC0262331,ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE = 0xC0262332,ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET = 0xC0262333,ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER = 0xC0262334,ERROR_GRAPHICS_NO_VIDPNMGR = 0xC0262335,ERROR_GRAPHICS_NO_ACTIVE_VIDPN = 0xC0262336,ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY = 0xC0262337,ERROR_GRAPHICS_MONITOR_NOT_CONNECTED = 0xC0262338,ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY = 0xC0262339,ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE = 0xC026233A,ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE = 0xC026233B,ERROR_GRAPHICS_INVALID_STRIDE = 0xC026233C,ERROR_GRAPHICS_INVALID_PIXELFORMAT = 0xC026233D,ERROR_GRAPHICS_INVALID_COLORBASIS = 0xC026233E,ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE = 0xC026233F,ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY = 0xC0262340,ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT = 0xC0262341,ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE = 0xC0262342,ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN = 0xC0262343,ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL = 0xC0262344,ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION = 0xC0262345,ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED = 0xC0262346,ERROR_GRAPHICS_INVALID_GAMMA_RAMP = 0xC0262347,ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED = 0xC0262348,ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED = 0xC0262349,ERROR_GRAPHICS_MODE_NOT_IN_MODESET = 0xC026234A,ERROR_GRAPHICS_DATASET_IS_EMPTY = 0x26234B,ERROR_GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET = 0x26234C,ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON = 0xC026234D,ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE = 0xC026234E,ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE = 0xC026234F,ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS = 0xC0262350,ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED = 0x262351,ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING = 0xC0262352,ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED = 0xC0262353,ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS = 0xC0262354,ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT = 0xC0262355,ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM = 0xC0262356,ERROR_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN = 0xC0262357,ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT = 0xC0262358,ERROR_GRAPHICS_MAX_NUM_PATHS_REACHED = 0xC0262359,ERROR_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION = 0xC026235A,ERROR_GRAPHICS_INVALID_CLIENT_TYPE = 0xC026235B,ERROR_GRAPHICS_CLIENTVIDPN_NOT_SET = 0xC026235C,ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED = 0xC0262400,ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED = 0xC0262401,ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS = 0x4026242F,ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER = 0xC0262430,ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED = 0xC0262431,ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED = 0xC0262432,ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY = 0xC0262433,ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED = 0xC0262434,ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON = 0xC0262435,ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE = 0xC0262436,ERROR_GRAPHICS_LEADLINK_START_DEFERRED = 0x40262437,ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER = 0xC0262438,ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY = 0x40262439,ERROR_GRAPHICS_START_DEFERRED = 0x4026243A,ERROR_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED = 0xC026243B,ERROR_GRAPHICS_OPM_NOT_SUPPORTED = 0xC0262500,ERROR_GRAPHICS_COPP_NOT_SUPPORTED = 0xC0262501,ERROR_GRAPHICS_UAB_NOT_SUPPORTED = 0xC0262502,ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS = 0xC0262503,ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST = 0xC0262505,ERROR_GRAPHICS_OPM_INTERNAL_ERROR = 0xC026250B,ERROR_GRAPHICS_OPM_INVALID_HANDLE = 0xC026250C,ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH = 0xC026250E,ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED = 0xC026250F,ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED = 0xC0262510,ERROR_GRAPHICS_PVP_HFS_FAILED = 0xC0262511,ERROR_GRAPHICS_OPM_INVALID_SRM = 0xC0262512,ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP = 0xC0262513,ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP = 0xC0262514,ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA = 0xC0262515,ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET = 0xC0262516,ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH = 0xC0262517,ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE = 0xC0262518,ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS = 0xC026251A,ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS = 0xC026251B,ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS = 0xC026251C,ERROR_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST = 0xC026251D,ERROR_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR = 0xC026251E,ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS = 0xC026251F,ERROR_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED = 0xC0262520,ERROR_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST = 0xC0262521,ERROR_GRAPHICS_I2C_NOT_SUPPORTED = 0xC0262580,ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST = 0xC0262581,ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA = 0xC0262582,ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA = 0xC0262583,ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED = 0xC0262584,ERROR_GRAPHICS_DDCCI_INVALID_DATA = 0xC0262585,ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE = 0xC0262586,ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING = 0xC0262587,ERROR_GRAPHICS_MCA_INTERNAL_ERROR = 0xC0262588,ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND = 0xC0262589,ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH = 0xC026258A,ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM = 0xC026258B,ERROR_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE = 0xC026258C,ERROR_GRAPHICS_MONITOR_NO_LONGER_EXISTS = 0xC026258D,ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE = 0xC02625D8,ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION = 0xC02625D9,ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = 0xC02625DA,ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH = 0xC02625DB,ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION = 0xC02625DC,ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = 0xC02625DE,ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE = 0xC02625DF,ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED = 0xC02625E0,ERROR_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME = 0xC02625E1,ERROR_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP = 0xC02625E2,ERROR_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED = 0xC02625E3,ERROR_GRAPHICS_INVALID_POINTER = 0xC02625E4,ERROR_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE = 0xC02625E5,ERROR_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL = 0xC02625E6,ERROR_GRAPHICS_INTERNAL_ERROR = 0xC02625E7,ERROR_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS = 0xC02605E8,};
enum MACRO_EVENT_SERVICE {EVENT_SERVICE_NOT_INTERACTIVE = 0xC0001B76,EVENT_SERVICE_CRASH = 0xC0001B77,EVENT_SERVICE_RECOVERY_FAILED = 0xC0001B78,EVENT_SERVICE_SCESRV_FAILED = 0xC0001B79,EVENT_SERVICE_CRASH_NO_ACTION = 0xC0001B7A,EVENT_SERVICE_CONTROL_SUCCESS = 0x40001B7B,EVENT_SERVICE_STATUS_SUCCESS = 0x40001B7C,EVENT_SERVICE_CONFIG_BACKOUT_FAILED = 0xC0001B7D,EVENT_FIRST_LOGON_FAILED_II = 0xC0001B7E,EVENT_SERVICE_DIFFERENT_PID_CONNECTED = 0x80001B7F,EVENT_SERVICE_START_TYPE_CHANGED = 0x40001B80,EVENT_SERVICE_LOGON_TYPE_NOT_GRANTED = 0xC0001B81,EVENT_SERVICE_STOP_SUCCESS_WITH_REASON = 0x40001B82,EVENT_SERVICE_SHUTDOWN_FAILED = 0xC0001B83,EVENT_COMMAND_NOT_INTERACTIVE = 0xC0001EDC,EVENT_COMMAND_START_FAILED = 0xC0001EDD,EVENT_BOWSER_OTHER_MASTER_ON_NET = 0xC0001F43,EVENT_BOWSER_PROMOTED_WHILE_ALREADY_MASTER = 0x80001F44,EVENT_BOWSER_NON_MASTER_MASTER_ANNOUNCE = 0x80001F45,EVENT_BOWSER_ILLEGAL_DATAGRAM = 0x80001F46,EVENT_BROWSER_STATUS_BITS_UPDATE_FAILED = 0xC0001F47,EVENT_BROWSER_ROLE_CHANGE_FAILED = 0xC0001F48,EVENT_BROWSER_MASTER_PROMOTION_FAILED = 0xC0001F49,EVENT_BOWSER_NAME_CONVERSION_FAILED = 0xC0001F4A,EVENT_BROWSER_OTHERDOMAIN_ADD_FAILED = 0xC0001F4B,EVENT_BOWSER_ELECTION_RECEIVED = 0x1F4C,EVENT_BOWSER_ELECTION_SENT_GETBLIST_FAILED = 0x40001F4D,EVENT_BOWSER_ELECTION_SENT_FIND_MASTER_FAILED = 0x40001F4E,EVENT_BROWSER_ELECTION_SENT_LANMAN_NT_STARTED = 0x40001F4F,EVENT_BOWSER_ILLEGAL_DATAGRAM_THRESHOLD = 0xC0001F50,EVENT_BROWSER_DEPENDANT_SERVICE_FAILED = 0xC0001F51,EVENT_BROWSER_MASTER_PROMOTION_FAILED_STOPPING = 0xC0001F53,EVENT_BROWSER_MASTER_PROMOTION_FAILED_NO_MASTER = 0xC0001F54,EVENT_BROWSER_SERVER_LIST_FAILED = 0x80001F55,EVENT_BROWSER_DOMAIN_LIST_FAILED = 0x80001F56,EVENT_BROWSER_ILLEGAL_CONFIG = 0x80001F57,EVENT_BOWSER_OLD_BACKUP_FOUND = 0x40001F58,EVENT_BROWSER_SERVER_LIST_RETRIEVED = 0x1F59,EVENT_BROWSER_DOMAIN_LIST_RETRIEVED = 0x1F5A,EVENT_BOWSER_PDC_LOST_ELECTION = 0x40001F5B,EVENT_BOWSER_NON_PDC_WON_ELECTION = 0x40001F5C,EVENT_BOWSER_CANT_READ_REGISTRY = 0x40001F5D,EVENT_BOWSER_MAILSLOT_DATAGRAM_THRESHOLD_EXCEEDED = 0x40001F5E,EVENT_BOWSER_GETBROWSERLIST_THRESHOLD_EXCEEDED = 0x40001F5F,EVENT_BROWSER_BACKUP_STOPPED = 0xC0001F60,EVENT_BROWSER_ELECTION_SENT_LANMAN_NT_STOPPED = 0x40001F61,EVENT_BROWSER_GETBLIST_RECEIVED_NOT_MASTER = 0xC0001F62,EVENT_BROWSER_ELECTION_SENT_ROLE_CHANGED = 0x40001F63,EVENT_BROWSER_NOT_STARTED_IPX_CONFIG_MISMATCH = 0xC0001F64,};
enum MACRO_E_APPLICATION {E_APPLICATION_ACTIVATION_TIMED_OUT = 0x8027025A,E_APPLICATION_ACTIVATION_EXEC_FAILURE = 0x8027025B,E_APPLICATION_TEMPORARY_LICENSE_ERROR = 0x8027025C,};
enum MACRO_FILE_INITIATE {FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_IN_USE = 0x1,FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_REUSED = 0x2,FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_EXIST = 0x4,FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_BASE_RECORD = 0x8,FILE_INITIATE_REPAIR_HINT1_SYSTEM_FILE = 0x10,FILE_INITIATE_REPAIR_HINT1_NOT_IMPLEMENTED = 0x20,FILE_INITIATE_REPAIR_HINT1_UNABLE_TO_REPAIR = 0x40,FILE_INITIATE_REPAIR_HINT1_REPAIR_DISABLED = 0x80,FILE_INITIATE_REPAIR_HINT1_RECURSIVELY_CORRUPTED = 0x100,FILE_INITIATE_REPAIR_HINT1_ORPHAN_GENERATED = 0x200,FILE_INITIATE_REPAIR_HINT1_REPAIRED = 0x400,FILE_INITIATE_REPAIR_HINT1_NOTHING_WRONG = 0x800,FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_NOT_FOUND = 0x1000,FILE_INITIATE_REPAIR_HINT1_POTENTIAL_CROSSLINK = 0x2000,FILE_INITIATE_REPAIR_HINT1_STALE_INFORMATION = 0x4000,FILE_INITIATE_REPAIR_HINT1_CLUSTERS_ALREADY_IN_USE = 0x8000,FILE_INITIATE_REPAIR_HINT1_LCN_NOT_EXIST = 0x10000,FILE_INITIATE_REPAIR_HINT1_INVALID_RUN_LENGTH = 0x20000,FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_ORPHAN = 0x40000,FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_IS_BASE_RECORD = 0x80000,FILE_INITIATE_REPAIR_HINT1_INVALID_ARRAY_LENGTH_COUNT = 0x100000,FILE_INITIATE_REPAIR_HINT1_SID_VALID = 0x200000,FILE_INITIATE_REPAIR_HINT1_SID_MISMATCH = 0x400000,FILE_INITIATE_REPAIR_HINT1_INVALID_PARENT = 0x800000,FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_IN_USE = 0x1000000,FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_REUSED = 0x2000000,FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_EXIST = 0x4000000,FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_BASE_RECORD = 0x8000000,FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_INDEX = 0x10000000,FILE_INITIATE_REPAIR_HINT1_VALID_INDEX_ENTRY = 0x20000000,FILE_INITIATE_REPAIR_HINT1_OUT_OF_GENERIC_NAMES = 0x40000000,FILE_INITIATE_REPAIR_HINT1_OUT_OF_RESOURCE = 0xFFFFFFFF80000000,FILE_INITIATE_REPAIR_HINT1_INVALID_LCN = 0x100000000,FILE_INITIATE_REPAIR_HINT1_INVALID_VCN = 0x200000000,FILE_INITIATE_REPAIR_HINT1_NAME_CONFLICT = 0x400000000,FILE_INITIATE_REPAIR_HINT1_ORPHAN = 0x800000000,FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_TOO_SMALL = 0x1000000000,FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_NON_RESIDENT = 0x2000000000,FILE_INITIATE_REPAIR_HINT1_DENY_DEFRAG = 0x4000000000,FILE_INITIATE_REPAIR_HINT1_PREVIOUS_PARENT_STILL_VALID = 0x8000000000,FILE_INITIATE_REPAIR_HINT1_INDEX_ENTRY_MISMATCH = 0x10000000000,FILE_INITIATE_REPAIR_HINT1_INVALID_ORPHAN_RECOVERY_NAME = 0x20000000000,FILE_INITIATE_REPAIR_HINT1_MULTIPLE_FILE_NAME_ATTRIBUTES = 0x40000000000,};
enum MACRO_FILE_PREFETCH {FILE_PREFETCH_TYPE_FOR_CREATE = 0x1,FILE_PREFETCH_TYPE_FOR_DIRENUM = 0x2,FILE_PREFETCH_TYPE_FOR_CREATE_EX = 0x3,FILE_PREFETCH_TYPE_FOR_DIRENUM_EX = 0x4,FILE_PREFETCH_TYPE_MAX = 0x4,};
enum MACRO_FLTFL_CONTEXT {FLTFL_CONTEXT_REGISTRATION_NO_EXACT_SIZE_MATCH = 0x1,};
enum MACRO_GET_INJECTION {GET_INJECTION_CAPABILITIES_OUT_Status_ID = 1,GET_INJECTION_CAPABILITIES_OUT_Capabilities_ID = 2,};
enum MACRO_ICMP6_INFOMSG {ICMP6_INFOMSG_MASK = 0x80,ICMP6_DST_UNREACH_NOROUTE = 0x0,ICMP6_DST_UNREACH_ADMIN = 0x1,ICMP6_DST_UNREACH_BEYONDSCOPE = 0x2,ICMP6_DST_UNREACH_ADDR = 0x3,ICMP6_DST_UNREACH_NOPORT = 0x4,ICMP6_TIME_EXCEED_TRANSIT = 0x0,ICMP6_TIME_EXCEED_REASSEMBLY = 0x1,ICMP6_PARAMPROB_HEADER = 0x0,ICMP6_PARAMPROB_NEXTHEADER = 0x1,ICMP6_PARAMPROB_OPTION = 0x2,};
enum MACRO_IMPERSONATING {IMPERSONATING_WORKER_THREAD = 0xDF,};
enum MACRO_INITIAL_EVENT {INITIAL_EVENT_STATE_MASK = 2,INITIAL_EVENT_NOT_SIGNALED = 0,INITIAL_EVENT_SIGNALED = 2,};
enum MACRO_IOCTL_AVCSTRM {IOCTL_AVCSTRM_CLASS = 0x22024D,};
enum MACRO_IOCTL_CHANGER {IOCTL_CHANGER_BASE = 48,IOCTL_CHANGER_GET_PARAMETERS = 3162112,IOCTL_CHANGER_GET_STATUS = 3162116,IOCTL_CHANGER_GET_PRODUCT_DATA = 3162120,IOCTL_CHANGER_SET_ACCESS = 3194896,IOCTL_CHANGER_GET_ELEMENT_STATUS = 3194900,IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS = 3162136,IOCTL_CHANGER_SET_POSITION = 3162140,IOCTL_CHANGER_EXCHANGE_MEDIUM = 3162144,IOCTL_CHANGER_MOVE_MEDIUM = 3162148,IOCTL_CHANGER_REINITIALIZE_TRANSPORT = 3162152,IOCTL_CHANGER_QUERY_VOLUME_TAGS = 3194924,};
enum MACRO_IOCTL_DISK_IS {IOCTL_DISK_IS_CLUSTERED = 0x700F8,IOCTL_DISK_GET_SAN_SETTINGS = 0x74200,IOCTL_DISK_SET_SAN_SETTINGS = 0x7C204,IOCTL_DISK_GET_SNAPSHOT_INFO = 0x74208,IOCTL_DISK_SET_SNAPSHOT_INFO = 0x7C20C,IOCTL_DISK_RESET_SNAPSHOT_INFO = 0x7C210,IOCTL_DISK_GET_CLUSTER_INFO = 0x70214,IOCTL_DISK_SET_CLUSTER_INFO = 0x7C218,};
enum MACRO_IOCTL_SFFDISK {IOCTL_SFFDISK_QUERY_DEVICE_PROTOCOL = 0x71E80,IOCTL_SFFDISK_DEVICE_COMMAND = 0x79E84,IOCTL_SFFDISK_DEVICE_PASSWORD = 0x79E88,IOCTL_SFFDISK_PARTITION_ACCESS = 0x71E8C,IOCTL_SFFDISK_MMC_SOFT_RESET = 0x71E90,};
enum MACRO_IOCTL_STORAGE {IOCTL_STORAGE_ENABLE_IDLE_POWER = 0x2D1C80,IOCTL_STORAGE_GET_IDLE_POWERUP_REASON = 0x2D1C84,IOCTL_STORAGE_POWER_ACTIVE = 0x2D1C88,IOCTL_STORAGE_POWER_IDLE = 0x2D1C8C,IOCTL_STORAGE_EVENT_NOTIFICATION = 0x2D1C90,};
enum MACRO_IOCTL_VOLSNAP {IOCTL_VOLSNAP_FLUSH_AND_HOLD_WRITES = 5488640,};
enum MACRO_IO_ERR_THREAD {IO_ERR_THREAD_STUCK_IN_DEVICE_DRIVER = 0xC004006C,};
enum MACRO_IPSEC_OFFLOAD {IPSEC_OFFLOAD_V2_MAX_EXTENSION_HEADERS = 2,IPSEC_OFFLOAD_V2_UDP_ESP_ENCAPSULATION_NONE = 0,IPSEC_OFFLOAD_V2_UDP_ESP_ENCAPSULATION_TRANSPORT = 1,IPSEC_OFFLOAD_V2_UDP_ESP_ENCAPSULATION_TUNNEL = 2,IPSEC_OFFLOAD_V2_TRANSPORT_OVER_UDP_ESP_ENCAPSULATION_TUNNEL = 4,IPSEC_OFFLOAD_V2_UDP_ESP_ENCAPSULATION_TRANSPORT_OVER_TUNNEL = 8,IPSEC_OFFLOAD_V2_ESN_SA = 1,IPSEC_OFFLOAD_V2_INBOUND = 1,IPSEC_OFFLOAD_V2_IPv6 = 16,};
enum MACRO_KERNEL_EXPAND {KERNEL_EXPAND_STACK_ACTIVE = 0x107,};
enum MACRO_KEYBOARD_PORT {KEYBOARD_PORT_WMI_STD_I8042 = 0,KEYBOARD_PORT_WMI_STD_SERIAL = 1,KEYBOARD_PORT_WMI_STD_USB = 2,KEYBOARD_PORT_WMI_STD_DATA_ConnectorType_ID = 1,KEYBOARD_PORT_WMI_STD_DATA_DataQueueSize_ID = 2,KEYBOARD_PORT_WMI_STD_DATA_ErrorCount_ID = 3,KEYBOARD_PORT_WMI_STD_DATA_FunctionKeys_ID = 4,KEYBOARD_PORT_WMI_STD_DATA_Indicators_ID = 5,KEYBOARD_ID_EX_Type_ID = 1,KEYBOARD_ID_EX_Subtype_ID = 2,};
enum MACRO_KEY_SIGNATURE {MODULE_VENDOR_ID_KEY_SIGNATURE = 0x3,NODE_CAPABILITIES_KEY_SIGNATURE = 0xC,SPEC_ID_KEY_SIGNATURE = 0x12,SOFTWARE_VERSION_KEY_SIGNATURE = 0x13,MODEL_ID_KEY_SIGNATURE = 0x17,EXTENDED_SPECIFIER_ID_KEY_SIGNATURE = 0x1C,EXTENDED_KEY_SIGNATURE = 0x1D,EXTENDED_DATA_KEY_SIGNATURE = 0x1E,COMMAND_BASE_KEY_SIGNATURE = 0x40,VENDOR_KEY_SIGNATURE = 0x81,TEXTUAL_LEAF_INDIRECT_KEY_SIGNATURE = 0x81,MODEL_KEY_SIGNATURE = 0x82,UNIT_DIRECTORY_KEY_SIGNATURE = 0xD1,UNIT_DEP_DIR_KEY_SIGNATURE = 0xD4,};
enum MACRO_KSDEVICE_FLAG {KSDEVICE_FLAG_ENABLE_REMOTE_WAKEUP = 0x1,KSDEVICE_FLAG_LOWPOWER_PASSTHROUGH = 0x2,};
enum MACRO_KSEVENT_ENTRY {KSEVENT_ENTRY_DELETED = 1,KSEVENT_ENTRY_ONESHOT = 2,KSEVENT_ENTRY_BUFFERED = 4,};
enum MACRO_KSMPEGVIDMODE {KSMPEGVIDMODE_PANSCAN = 0x1,KSMPEGVIDMODE_LTRBOX = 0x2,KSMPEGVIDMODE_SCALE = 0x4,};
enum MACRO_KSSTREAM_READ {KSSTREAM_READ = 0,KSSTREAM_WRITE = 1,KSSTREAM_PAGED_DATA = 0,KSSTREAM_NONPAGED_DATA = 256,KSSTREAM_SYNCHRONOUS = 4096,KSSTREAM_FAILUREEXCEPTION = 8192,};
enum MACRO_LINECALLSTATE {LINECALLSTATE_IDLE = 0x1,LINECALLSTATE_OFFERING = 0x2,LINECALLSTATE_ACCEPTED = 0x4,LINECALLSTATE_DIALTONE = 0x8,LINECALLSTATE_DIALING = 0x10,LINECALLSTATE_RINGBACK = 0x20,LINECALLSTATE_BUSY = 0x40,LINECALLSTATE_SPECIALINFO = 0x80,LINECALLSTATE_CONNECTED = 0x100,LINECALLSTATE_PROCEEDING = 0x200,LINECALLSTATE_ONHOLD = 0x400,LINECALLSTATE_CONFERENCED = 0x800,LINECALLSTATE_ONHOLDPENDCONF = 0x1000,LINECALLSTATE_ONHOLDPENDTRANSFER = 0x2000,LINECALLSTATE_DISCONNECTED = 0x4000,LINECALLSTATE_UNKNOWN = 0x8000,};
enum MACRO_LINEDIGITMODE {LINEDIGITMODE_PULSE = 0x1,LINEDIGITMODE_DTMF = 0x2,LINEDIGITMODE_DTMFEND = 0x4,};
enum MACRO_LINEMEDIAMODE {LINEMEDIAMODE_UNKNOWN = 0x2,LINEMEDIAMODE_INTERACTIVEVOICE = 0x4,LINEMEDIAMODE_AUTOMATEDVOICE = 0x8,LINEMEDIAMODE_DATAMODEM = 0x10,LINEMEDIAMODE_G3FAX = 0x20,LINEMEDIAMODE_TDD = 0x40,LINEMEDIAMODE_G4FAX = 0x80,LINEMEDIAMODE_DIGITALDATA = 0x100,LINEMEDIAMODE_TELETEX = 0x200,LINEMEDIAMODE_VIDEOTEX = 0x400,LINEMEDIAMODE_TELEX = 0x800,LINEMEDIAMODE_MIXED = 0x1000,LINEMEDIAMODE_ADSI = 0x2000,LINEMEDIAMODE_VOICEVIEW = 0x4000,};
enum MACRO_LOCALE_SYSTEM {LOCALE_SYSTEM_DEFAULT = 2048,LOCALE_USER_DEFAULT = 1024,LOCALE_CUSTOM_DEFAULT = 3072,LOCALE_CUSTOM_UNSPECIFIED = 4096,LOCALE_CUSTOM_UI_DEFAULT = 5120,LOCALE_NEUTRAL = 0,LOCALE_INVARIANT = 127,};
enum MACRO_LoginToTarget {LoginToTarget = 30,};
enum MACRO_MAXIMUM_DEBUG {MAXIMUM_DEBUG_BARS = 6,};
enum MACRO_MAXIMUM_RETRY {MAXIMUM_RETRY_FOR_SINGLE_IO_IN_100NS_UNITS = 0x3B9ACA00,};
enum MACRO_MILEFFECTSERR {MILEFFECTSERR_UNKNOWNPROPERTY = 0x8898060E,MILEFFECTSERR_EFFECTNOTPARTOFGROUP = 0x8898060F,MILEFFECTSERR_NOINPUTSOURCEATTACHED = 0x88980610,MILEFFECTSERR_CONNECTORNOTCONNECTED = 0x88980611,MILEFFECTSERR_CONNECTORNOTASSOCIATEDWITHEFFECT = 0x88980612,MILEFFECTSERR_RESERVED = 0x88980613,MILEFFECTSERR_CYCLEDETECTED = 0x88980614,MILEFFECTSERR_EFFECTINMORETHANONEGRAPH = 0x88980615,MILEFFECTSERR_EFFECTALREADYINAGRAPH = 0x88980616,MILEFFECTSERR_EFFECTHASNOCHILDREN = 0x88980617,MILEFFECTSERR_ALREADYATTACHEDTOLISTENER = 0x88980618,MILEFFECTSERR_NOTAFFINETRANSFORM = 0x88980619,MILEFFECTSERR_EMPTYBOUNDS = 0x8898061A,MILEFFECTSERR_OUTPUTSIZETOOLARGE = 0x8898061B,};
enum MACRO_MIN_DIMENSION {MIN_DIMENSION = 1,};
enum MACRO_MPIO_DSM_Path {MPIO_DSM_Path_V2_TargetPortGroup_State_ID = 8,};
enum MACRO_MUTEX_ALREADY {MUTEX_ALREADY_OWNED = 0xBF,};
enum MACRO_NDIS_PROTOCOL {NDIS_PROTOCOL_ID_DEFAULT = 0x0,NDIS_PROTOCOL_ID_TCP_IP = 0x2,NDIS_PROTOCOL_ID_IPX = 0x6,NDIS_PROTOCOL_ID_NBF = 0x7,NDIS_PROTOCOL_ID_MAX = 0xF,NDIS_PROTOCOL_ID_MASK = 0xF,};
enum MACRO_NTDDI_VERSION {NTDDI_VERSION = 100794368,};
enum MACRO_OID_DOT11_QOS {OID_DOT11_QOS_PARAMS = 234947228,};
enum MACRO_OID_DOT11_WFD {OID_DOT11_WFD_DEVICE_CAPABILITY = 0xE050101,};
enum MACRO_OID_DOT11_WPS {OID_DOT11_WPS_ENABLED = 0xE030101,OID_DOT11_START_AP_REQUEST = 0xE030102,OID_DOT11_AVAILABLE_CHANNEL_LIST = 0xE030103,};
enum MACRO_PAGE_FAULT_IN {PAGE_FAULT_IN_FREED_SPECIAL_POOL = 0xCC,PAGE_FAULT_BEYOND_END_OF_ALLOCATION = 0xCD,};
enum MACRO_PAGE_NOACCESS {PAGE_NOACCESS = 0x1,PAGE_READONLY = 0x2,PAGE_READWRITE = 0x4,PAGE_WRITECOPY = 0x8,PAGE_EXECUTE = 0x10,PAGE_EXECUTE_READ = 0x20,PAGE_EXECUTE_READWRITE = 0x40,PAGE_EXECUTE_WRITECOPY = 0x80,PAGE_GUARD = 0x100,PAGE_NOCACHE = 0x200,PAGE_WRITECOMBINE = 0x400,PAGE_REVERT_TO_FILE_MAP = 0x80000000,};
enum MACRO_PARALLEL_INIT {PARALLEL_INIT = 0x1,PARALLEL_AUTOFEED = 0x2,PARALLEL_PAPER_EMPTY = 0x4,PARALLEL_OFF_LINE = 0x8,PARALLEL_POWER_OFF = 0x10,PARALLEL_NOT_CONNECTED = 0x20,PARALLEL_BUSY = 0x40,PARALLEL_SELECTED = 0x80,};
enum MACRO_PCMCIA_CONFIG {PCMCIA_CONFIG_SPACE = 1,};
enum MACRO_PORTS_MAXIMUM {POINTER_PORTS_MAXIMUM = 8,KEYBOARD_PORTS_MAXIMUM = 8,};
enum MACRO_PORT_SUPPORTS {PORT_SUPPORTS_NOTHING = 0,PORT_SUPPORTS_CSRS = 1,PORT_SUPPORTS_LARGE_ASYNC = 2,PORT_SUPPORTS_NATIVE_ENDIAN = 4,PORT_SUPPORTS_WMI = 8,};
enum MACRO_POWER_REQUEST {POWER_REQUEST_CONTEXT_VERSION = 0,POWER_REQUEST_CONTEXT_SIMPLE_STRING = 1,POWER_REQUEST_CONTEXT_DETAILED_STRING = 2,};
enum MACRO_POWER_SETTING {POWER_SETTING_VALUE_VERSION = 0x1,POWER_PLATFORM_ROLE_V1 = 0x1,POWER_PLATFORM_ROLE_V2 = 0x2,POWER_PLATFORM_ROLE_VERSION = 0x2,};
enum MACRO_PingIPAddress {PingIPAddress = 10,};
enum MACRO_RDBSS_ASSERTS {RDBSS_ASSERTS = 1,};
enum MACRO_RDBSS_TRACKER {RDBSS_TRACKER = 1,};
enum MACRO_RECURSIVE_NMI {RECURSIVE_NMI = 0x111,};
enum MACRO_REQUEST_ASYNC {REQUEST_ASYNC_READ = 0,REQUEST_ASYNC_WRITE = 1,REQUEST_ASYNC_LOCK = 2,REQUEST_ISOCH_ALLOCATE_BANDWIDTH = 3,REQUEST_ISOCH_ALLOCATE_CHANNEL = 4,REQUEST_ISOCH_ALLOCATE_RESOURCES = 5,REQUEST_ISOCH_ATTACH_BUFFERS = 6,REQUEST_ISOCH_DETACH_BUFFERS = 7,REQUEST_ISOCH_FREE_BANDWIDTH = 8,REQUEST_ISOCH_FREE_CHANNEL = 9,REQUEST_ISOCH_FREE_RESOURCES = 10,REQUEST_ISOCH_LISTEN = 11,REQUEST_ISOCH_STOP = 12,REQUEST_ISOCH_TALK = 13,REQUEST_ISOCH_QUERY_CYCLE_TIME = 14,REQUEST_ISOCH_QUERY_RESOURCES = 15,REQUEST_ISOCH_SET_CHANNEL_BANDWIDTH = 16,REQUEST_ALLOCATE_ADDRESS_RANGE = 17,REQUEST_FREE_ADDRESS_RANGE = 18,REQUEST_GET_LOCAL_HOST_INFO = 19,REQUEST_GET_ADDR_FROM_DEVICE_OBJECT = 20,REQUEST_CONTROL = 21,REQUEST_GET_SPEED_BETWEEN_DEVICES = 22,REQUEST_SET_DEVICE_XMIT_PROPERTIES = 23,REQUEST_GET_CONFIGURATION_INFO = 24,REQUEST_BUS_RESET = 25,REQUEST_GET_GENERATION_COUNT = 26,REQUEST_SEND_PHY_CONFIG_PACKET = 27,REQUEST_GET_SPEED_TOPOLOGY_MAPS = 28,REQUEST_BUS_RESET_NOTIFICATION = 29,REQUEST_ASYNC_STREAM = 30,REQUEST_SET_LOCAL_HOST_PROPERTIES = 31,REQUEST_ISOCH_MODIFY_STREAM_PROPERTIES = 32,REQUEST_SEND_PHY_PACKET = 33,REQUEST_RECEIVE_PHY_PACKETS = 34,REQUEST_GET_CONFIG_ROM = 35,};
enum MACRO_RESOURCE_HASH {RESOURCE_HASH_TABLE_SIZE = 64,};
enum MACRO_RESOURCE_USED {RESOURCE_USED_IN_LISTENING = 0x1,RESOURCE_USED_IN_TALKING = 0x2,RESOURCE_BUFFERS_CIRCULAR = 0x4,RESOURCE_STRIP_ADDITIONAL_QUADLETS = 0x8,RESOURCE_TIME_STAMP_ON_COMPLETION = 0x10,RESOURCE_SYNCH_ON_TIME = 0x20,RESOURCE_USE_PACKET_BASED = 0x40,RESOURCE_VARIABLE_ISOCH_PAYLOAD = 0x80,RESOURCE_USE_MULTICHANNEL = 0x100,};
enum MACRO_RTL_DUPLICATE {RTL_DUPLICATE_UNICODE_STRING_NULL_TERMINATE = 0x1,RTL_DUPLICATE_UNICODE_STRING_ALLOCATE_NULL_STRING = 0x2,};
enum MACRO_RemovePort_IN {RemovePort_IN_PortWWN_ID = 1,RemovePort_OUT_HBAStatus_ID = 2,};
enum MACRO_SECURITY_NULL {SECURITY_NULL_RID = 0x0,SECURITY_WORLD_RID = 0x0,SECURITY_LOCAL_RID = 0x0,SECURITY_LOCAL_LOGON_RID = 0x1,SECURITY_CREATOR_OWNER_RID = 0x0,SECURITY_CREATOR_GROUP_RID = 0x1,SECURITY_CREATOR_OWNER_SERVER_RID = 0x2,SECURITY_CREATOR_GROUP_SERVER_RID = 0x3,SECURITY_CREATOR_OWNER_RIGHTS_RID = 0x4,SECURITY_DIALUP_RID = 0x1,SECURITY_NETWORK_RID = 0x2,SECURITY_BATCH_RID = 0x3,SECURITY_INTERACTIVE_RID = 0x4,SECURITY_LOGON_IDS_RID = 0x5,SECURITY_LOGON_IDS_RID_COUNT = 0x3,SECURITY_SERVICE_RID = 0x6,SECURITY_ANONYMOUS_LOGON_RID = 0x7,SECURITY_PROXY_RID = 0x8,SECURITY_ENTERPRISE_CONTROLLERS_RID = 0x9,SECURITY_SERVER_LOGON_RID = 0x9,SECURITY_PRINCIPAL_SELF_RID = 0xA,SECURITY_AUTHENTICATED_USER_RID = 0xB,SECURITY_RESTRICTED_CODE_RID = 0xC,SECURITY_TERMINAL_SERVER_RID = 0xD,SECURITY_REMOTE_LOGON_RID = 0xE,SECURITY_THIS_ORGANIZATION_RID = 0xF,SECURITY_IUSER_RID = 0x11,SECURITY_LOCAL_SYSTEM_RID = 0x12,SECURITY_LOCAL_SERVICE_RID = 0x13,SECURITY_NETWORK_SERVICE_RID = 0x14,SECURITY_NT_NON_UNIQUE = 0x15,SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT = 0x3,SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID = 0x16,SECURITY_BUILTIN_DOMAIN_RID = 0x20,SECURITY_WRITE_RESTRICTED_CODE_RID = 0x21,SECURITY_PACKAGE_BASE_RID = 0x40,SECURITY_PACKAGE_RID_COUNT = 0x2,SECURITY_PACKAGE_NTLM_RID = 0xA,SECURITY_PACKAGE_SCHANNEL_RID = 0xE,SECURITY_PACKAGE_DIGEST_RID = 0x15,SECURITY_CRED_TYPE_BASE_RID = 0x41,SECURITY_CRED_TYPE_RID_COUNT = 0x2,SECURITY_CRED_TYPE_THIS_ORG_CERT_RID = 0x1,SECURITY_MIN_BASE_RID = 0x50,SECURITY_SERVICE_ID_BASE_RID = 0x50,SECURITY_SERVICE_ID_RID_COUNT = 0x6,SECURITY_RESERVED_ID_BASE_RID = 0x51,SECURITY_APPPOOL_ID_BASE_RID = 0x52,SECURITY_APPPOOL_ID_RID_COUNT = 0x6,SECURITY_VIRTUALSERVER_ID_BASE_RID = 0x53,SECURITY_VIRTUALSERVER_ID_RID_COUNT = 0x6,SECURITY_USERMODEDRIVERHOST_ID_BASE_RID = 0x54,SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT = 0x6,SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID = 0x55,SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT = 0x6,SECURITY_WMIHOST_ID_BASE_RID = 0x56,SECURITY_WMIHOST_ID_RID_COUNT = 0x6,SECURITY_TASK_ID_BASE_RID = 0x57,SECURITY_NFS_ID_BASE_RID = 0x58,SECURITY_COM_ID_BASE_RID = 0x59,SECURITY_WINDOW_MANAGER_BASE_RID = 0x5A,SECURITY_RDV_GFX_BASE_RID = 0x5B,SECURITY_DASHOST_ID_BASE_RID = 0x5C,SECURITY_DASHOST_ID_RID_COUNT = 0x6,SECURITY_VIRTUALACCOUNT_ID_RID_COUNT = 0x6,SECURITY_MAX_BASE_RID = 0x6F,SECURITY_MAX_ALWAYS_FILTERED = 0x3E7,SECURITY_MIN_NEVER_FILTERED = 0x3E8,SECURITY_OTHER_ORGANIZATION_RID = 0x3E8,SECURITY_WINDOWSMOBILE_ID_BASE_RID = 0x70,};
enum MACRO_SESSION_QUERY {SESSION_QUERY_ACCESS = 0x1,SESSION_MODIFY_ACCESS = 0x2,SESSION_ALL_ACCESS = 0xF0003,};
enum MACRO_SHARED_GLOBAL {SHARED_GLOBAL_FLAGS_ERROR_PORT_V = 0x0,SHARED_GLOBAL_FLAGS_ERROR_PORT = 0x1,SHARED_GLOBAL_FLAGS_ELEVATION_ENABLED_V = 0x1,SHARED_GLOBAL_FLAGS_ELEVATION_ENABLED = 0x2,SHARED_GLOBAL_FLAGS_VIRT_ENABLED_V = 0x2,SHARED_GLOBAL_FLAGS_VIRT_ENABLED = 0x4,SHARED_GLOBAL_FLAGS_INSTALLER_DETECT_ENABLED_V = 0x3,SHARED_GLOBAL_FLAGS_INSTALLER_DETECT_ENABLED = 0x8,SHARED_GLOBAL_FLAGS_LKG_ENABLED_V = 0x4,SHARED_GLOBAL_FLAGS_LKG_ENABLED = 0x10,SHARED_GLOBAL_FLAGS_DYNAMIC_PROC_ENABLED_V = 0x5,SHARED_GLOBAL_FLAGS_DYNAMIC_PROC_ENABLED = 0x20,SHARED_GLOBAL_FLAGS_CONSOLE_BROKER_ENABLED_V = 0x6,SHARED_GLOBAL_FLAGS_CONSOLE_BROKER_ENABLED = 0x40,SHARED_GLOBAL_FLAGS_SECURE_BOOT_ENABLED_V = 0x7,SHARED_GLOBAL_FLAGS_SECURE_BOOT_ENABLED = 0x80,};
enum MACRO_SMHBA_VERSION {SMHBA_VERSION = 1,};
enum MACRO_SRB_SIGNATURE {SRB_SIGNATURE = 0x53524258,};
enum MACRO_SRB_TYPE_FLAG {SRB_TYPE_FLAG_SCSI_REQUEST_BLOCK = 0x1,SRB_TYPE_FLAG_STORAGE_REQUEST_BLOCK = 0x2,};
enum MACRO_STREAM_LAYOUT {STREAM_LAYOUT_ENTRY_IMMOVABLE = 0x1,STREAM_LAYOUT_ENTRY_PINNED = 0x2,STREAM_LAYOUT_ENTRY_RESIDENT = 0x4,STREAM_LAYOUT_ENTRY_NO_CLUSTERS_ALLOCATED = 0x8,STREAM_EXTENT_ENTRY_AS_RETRIEVAL_POINTERS = 0x1,STREAM_EXTENT_ENTRY_ALL_EXTENTS = 0x2,};
enum MACRO_STREAM_SYSTEM {STREAM_SYSTEM_TIME_MASK = 0x1FFFFFFFF,};
enum MACRO_SYSTEM_THREAD {SYSTEM_THREAD_EXCEPTION_NOT_HANDLED = 0x7E,SYSTEM_THREAD_EXCEPTION_NOT_HANDLED_M = 0x1000007E,};
enum MACRO_SendRNIDV2_IN {SendRNIDV2_IN_PortWWN_ID = 1,SendRNIDV2_IN_DestWWN_ID = 2,SendRNIDV2_IN_DestFCID_ID = 3,SendRNIDV2_IN_NodeIdDataFormat_ID = 4,SendRNIDV2_OUT_HBAStatus_ID = 5,SendRNIDV2_OUT_TotalRspBufferSize_ID = 6,SendRNIDV2_OUT_ActualRspBufferSize_ID = 7,SendRNIDV2_OUT_RspBuffer_SIZE_HINT = 76,SendRNIDV2_OUT_RspBuffer_ID = 8,};
enum MACRO_TDI_ASSOCIATE {TDI_ASSOCIATE_ADDRESS = 0x1,TDI_DISASSOCIATE_ADDRESS = 0x2,TDI_CONNECT = 0x3,TDI_LISTEN = 0x4,TDI_ACCEPT = 0x5,TDI_DISCONNECT = 0x6,TDI_SEND = 0x7,TDI_RECEIVE = 0x8,TDI_SEND_DATAGRAM = 0x9,TDI_RECEIVE_DATAGRAM = 0xA,TDI_SET_EVENT_HANDLER = 0xB,TDI_QUERY_INFORMATION = 0xC,TDI_SET_INFORMATION = 0xD,TDI_ACTION = 0xE,TDI_DIRECT_SEND = 0x27,TDI_DIRECT_SEND_DATAGRAM = 0x29,TDI_DIRECT_ACCEPT = 0x2A,TDI_TRANSPORT_ADDRESS_FILE = 0x1,TDI_CONNECTION_FILE = 0x2,TDI_CONTROL_CHANNEL_FILE = 0x3,};
enum MACRO_UNINITIALIZED {UNINITIALIZED_CYCLE_TIME = 0xFFFFFFFF,UNINITIALIZED_TRANSFER_MODE = 0x7FFFFFFF,};
enum MACRO_VIDEO_DXGKRNL {VIDEO_DXGKRNL_FATAL_ERROR = 0x113,VIDEO_SHADOW_DRIVER_FATAL_ERROR = 0x114,};
enum MACRO_WHEA_FIRMWARE {WHEA_FIRMWARE_RECORD_TYPE_IPFSAL = 0,WHEA_XPF_MCA_EXTREG_MAX_COUNT = 24,WHEA_XPF_MCA_SECTION_VERSION = 1,WHEA_ERROR_PACKET_V1_SIGNATURE = 1951429189,WHEA_ERROR_PACKET_V1_VERSION = 2,WHEA_ERROR_PACKET_V2_SIGNATURE = 1095059543,WHEA_ERROR_PACKET_V2_VERSION = 3,WHEA_ERROR_PACKET_SIGNATURE = 1095059543,WHEA_ERROR_PACKET_VERSION = 3,};
enum MACRO_WIN32K_HANDLE {WIN32K_HANDLE_MANAGER = 0x137,};
enum MACRO_WORKER_THREAD {WORKER_THREAD_RETURNED_WITH_BAD_IO_PRIORITY = 0x128,WORKER_THREAD_RETURNED_WITH_BAD_PAGING_IO_PRIORITY = 0x129,};
enum MACRO_WRITE_PROTECT {WRITE_PROTECT = 9,};
enum MACRO_WWAN_SIMICCID {WWAN_SIMICCID_LEN = 21,WWAN_TN_LEN = 16,WWAN_SCA_MAX_LEN = 14,WWAN_SMS_ADDRESS_MAX_LEN = 16,WWAN_SC_TIME_STAMP_MAX_LEN = 20,WWAN_SMS_CDMA_ADDR_MAX_LEN = 50,WWAN_SMS_CDMA_TIMESTAMP_MAX_LEN = 20,WWAN_SMS_MSG_PDU_LEN = 183,WWAN_SMS_RAW_PDU_LEN = 171,WWAN_SMS_PDU_HEX_BUF_LEN = 366,WWAN_CDMA_SHORT_MSG_SIZE_UNKNOWN = 0,WWAN_CDMA_SHORT_MSG_SIZE_MAX = 160,WWAN_SMS_CDMA_MAX_BUF_LEN = 160,WWAN_SMS_CDMA_MAX_MSG_LEN = 160,WWAN_USSD_STRING_LEN_MAX = 160,WWAN_CDMA_DEFAULT_PROVIDER_ID = 0,WWAN_AUTH_RAND_LEN = 16,WWAN_AUTH_AUTN_LEN = 16,WWAN_AUTH_SRES_LEN = 4,WWAN_AUTH_KC_LEN = 8,WWAN_AUTH_RES_MAX_LEN = 16,WWAN_AUTH_IK_LEN = 16,WWAN_AUTH_CK_LEN = 16,WWAN_AUTH_AUTS_LEN = 14,WWAN_AUTH_NETWORK_NAME_MAX_LEN = 256,WWAN_MAJOR_VERSION_1 = 1,WWAN_MAJOR_VERSION_2 = 2,WWAN_MAJOR_VERSION = 2,WWAN_MINOR_VERSION_0 = 0,WWAN_MINOR_VERSION = 0,WWAN_VERSION_1_0 = 65536,WWAN_VERSION_2_0 = 131072,WWAN_CURRENT_VERSION = 131072,WWAN_DRIVER_CAPS_NONE = 0,WWAN_DATA_CLASS_NONE = 0,WWAN_DATA_CLASS_GPRS = 1,WWAN_DATA_CLASS_EDGE = 2,WWAN_DATA_CLASS_UMTS = 4,WWAN_DATA_CLASS_HSDPA = 8,WWAN_DATA_CLASS_HSUPA = 16,WWAN_DATA_CLASS_LTE = 32,WWAN_DATA_CLASS_1XRTT = 65536,WWAN_DATA_CLASS_1XEVDO = 131072,WWAN_DATA_CLASS_1XEVDO_REVA = 262144,WWAN_DATA_CLASS_1XEVDV = 524288,WWAN_DATA_CLASS_3XRTT = 1048576,WWAN_DATA_CLASS_1XEVDO_REVB = 2097152,WWAN_DATA_CLASS_UMB = 4194304,WWAN_DATA_CLASS_CUSTOM = -2147483648,WWAN_BAND_CLASS_UNKNOWN = 0,WWAN_BAND_CLASS_0 = 1,WWAN_BAND_CLASS_I = 2,WWAN_BAND_CLASS_II = 4,WWAN_BAND_CLASS_III = 8,WWAN_BAND_CLASS_IV = 16,WWAN_BAND_CLASS_V = 32,WWAN_BAND_CLASS_VI = 64,WWAN_BAND_CLASS_VII = 128,WWAN_BAND_CLASS_VIII = 256,WWAN_BAND_CLASS_IX = 512,WWAN_BAND_CLASS_X = 1024,WWAN_BAND_CLASS_XI = 2048,WWAN_BAND_CLASS_XII = 4096,WWAN_BAND_CLASS_XIII = 8192,WWAN_BAND_CLASS_XIV = 16384,WWAN_BAND_CLASS_XV = 32768,WWAN_BAND_CLASS_XVI = 65536,WWAN_BAND_CLASS_XVII = 131072,WWAN_BAND_CLASS_CUSTOM = -2147483648,WWAN_CTRL_CAPS_NONE = 0,WWAN_CTRL_CAPS_REG_MANUAL = 1,WWAN_CTRL_CAPS_HW_RADIO_SWITCH = 2,WWAN_CTRL_CAPS_CDMA_MOBILE_IP = 4,WWAN_CTRL_CAPS_CDMA_SIMPLE_IP = 8,WWAN_CTRL_CAPS_PROTECT_UNIQUEID = 16,WWAN_CTRL_CAPS_MODEL_MULTI_CARRIER = 32,WWAN_CTRL_CAPS_USSD = 64,WWAN_CTRL_CAPS_MULTI_MODE = 128,WWAN_SMS_CAPS_NONE = 0,WWAN_SMS_CAPS_PDU_RECEIVE = 1,WWAN_SMS_CAPS_PDU_SEND = 2,WWAN_SMS_CAPS_TEXT_RECEIVE = 4,WWAN_SMS_CAPS_TEXT_SEND = 8,WWAN_AUTH_ALGO_CAPS_NONE = 0,WWAN_AUTH_ALGO_CAPS_SIM = 1,WWAN_AUTH_ALGO_CAPS_AKA = 2,WWAN_AUTH_ALGO_CAPS_AKAPRIME = 4,WWAN_ATTEMPTS_REMAINING_UNKNOWN = -1,WWAN_PIN_LENGTH_UNKNOWN = -1,WWAN_PROVIDER_STATE_UNKNOWN = 0,WWAN_PROVIDER_STATE_HOME = 1,WWAN_PROVIDER_STATE_FORBIDDEN = 2,WWAN_PROVIDER_STATE_PREFERRED = 4,WWAN_PROVIDER_STATE_VISIBLE = 8,WWAN_PROVIDER_STATE_REGISTERED = 16,WWAN_PROVIDER_STATE_PREFERRED_MULTICARRIER = 32,WWAN_REG_FLAGS_NONE = 0,WWAN_REG_FLAGS_NO_MANUAL_REG = 1,WWAN_REG_FLAGS_PS_AUTO_ATTACH = 2,WWAN_RSSI_UNKNOWN = 99,WWAN_ERROR_RATE_UNKNOWN = 99,WWAN_RSSI_DEFAULT = -1,WWAN_RSSI_DISABLE = 0,WWAN_CONTEXT_ID_APPEND = -1,WWAN_MESSAGE_INDEX_NONE = 0,WWAN_SMS_FLAG_NONE = 0,WWAN_SMS_FLAG_MESSAGE_STORE_FULL = 1,WWAN_SMS_FLAG_NEW_MESSAGE = 2,WWAN_GET_VISIBLE_PROVIDERS_ALL = 0,WWAN_GET_VISIBLE_PROVIDERS_MULTICARRIER = 1,};
enum MACRO__CRTDBG_ALLOC {_CRTDBG_ALLOC_MEM_DF = 0x1,_CRTDBG_DELAY_FREE_MEM_DF = 0x2,_CRTDBG_CHECK_ALWAYS_DF = 0x4,_CRTDBG_RESERVED_DF = 0x8,_CRTDBG_CHECK_CRT_DF = 0x10,_CRTDBG_LEAK_CHECK_DF = 0x20,_CRTDBG_CHECK_EVERY_16_DF = 0x100000,_CRTDBG_CHECK_EVERY_128_DF = 0x800000,_CRTDBG_CHECK_EVERY_1024_DF = 0x4000000,_CRTDBG_CHECK_DEFAULT_DF = 0x0,_CRTDBG_REPORT_FLAG = 0xFFFFFFFF,};
enum MACRO__HEAPBADBEGIN {_HEAPBADBEGIN = -3,};
enum MACRO__INC_MSVIDDRV {_INC_MSVIDDRV = 50,};
enum MACRO__MM_DENORMALS {_MM_DENORMALS_ZERO_MASK = 0x40,_MM_DENORMALS_ZERO_ON = 0x40,_MM_DENORMALS_ZERO_OFF = 0x0,_MM_FROUND_TO_NEAREST_INT = 0x0,_MM_FROUND_TO_NEG_INF = 0x1,_MM_FROUND_TO_POS_INF = 0x2,_MM_FROUND_TO_ZERO = 0x3,_MM_FROUND_CUR_DIRECTION = 0x4,_MM_FROUND_RAISE_EXC = 0x0,_MM_FROUND_NO_EXC = 0x8,_MM_FROUND_NINT = 0x0,_MM_FROUND_FLOOR = 0x1,_MM_FROUND_CEIL = 0x2,_MM_FROUND_TRUNC = 0x3,_MM_FROUND_RINT = 0x4,_MM_FROUND_NEARBYINT = 0xC,};
enum MACRO___SPECSTRINGS {__SPECSTRINGS_STRICT_LEVEL = 1,};
typedef struct _MLDV2_REPORT_HEADER MLDV2_REPORT_HEADER;
typedef struct _MPIO_GET_DESCRIPTOR MPIO_GET_DESCRIPTOR;
typedef struct _MPIO_REGISTERED_DSM MPIO_REGISTERED_DSM;
typedef struct _MSMCAEvent_BusError MSMCAEvent_BusError;
typedef struct _MSMCAEvent_CPUError MSMCAEvent_CPUError;
typedef struct _MSMCAEvent_TLBError MSMCAEvent_TLBError;
typedef struct _MSNdis_80211_AddWEP MSNdis_80211_AddWEP;
typedef struct _MSNdis_CoMacOptions MSNdis_CoMacOptions;
typedef struct _MSNdis_CoMediaInUse MSNdis_CoMediaInUse;
typedef struct _MSNdis_ObjectHeader MSNdis_ObjectHeader;
typedef struct _MSNdis_ReceiveError MSNdis_ReceiveError;
typedef struct _MSNdis_WmiSetHeader MSNdis_WmiSetHeader;
typedef struct _MSiSCSI_TCPIPConfig MSiSCSI_TCPIPConfig;
typedef struct _NDIS_GENERIC_OBJECT NDIS_GENERIC_OBJECT;
typedef struct _NDIS_IP_OPER_STATUS NDIS_IP_OPER_STATUS;
typedef struct _NDIS_MINIPORT_BLOCK NDIS_MINIPORT_BLOCK;
typedef struct _NDIS_MINIPORT_TIMER NDIS_MINIPORT_TIMER;
typedef struct _NDIS_M_DRIVER_BLOCK NDIS_M_DRIVER_BLOCK;
typedef struct _NDIS_PM_WOL_PATTERN NDIS_PM_WOL_PATTERN;
typedef struct _NDIS_PROCESSOR_INFO NDIS_PROCESSOR_INFO;
typedef struct _NDIS_PROTOCOL_BLOCK NDIS_PROTOCOL_BLOCK;
typedef struct _NDIS_TAPI_MAKE_CALL NDIS_TAPI_MAKE_CALL;
typedef struct _NDIS_WMI_SET_HEADER NDIS_WMI_SET_HEADER;
typedef struct _NDIS_WRAPPER_HANDLE NDIS_WRAPPER_HANDLE;
typedef struct _NDK_SHARED_ENDPOINT NDK_SHARED_ENDPOINT;
typedef struct _NETWORK_ADDRESS_IPX NETWORK_ADDRESS_IPX;
typedef struct _OBJECT_ATTRIBUTES32 OBJECT_ATTRIBUTES32;
typedef struct _OBJECT_ATTRIBUTES64 OBJECT_ATTRIBUTES64;
typedef struct _AALUSER_PARAMETERS *PAALUSER_PARAMETERS;
typedef struct _ARBITER_LIST_ENTRY *PARBITER_LIST_ENTRY;
typedef struct _ARBITER_PARAMETERS *PARBITER_PARAMETERS;
typedef struct _PAR_SET_INFORMATION PAR_SET_INFORMATION;
typedef struct _AVC_PIN_DESCRIPTOR *PAVC_PIN_DESCRIPTOR;
typedef struct _AddRADIUSServer_IN *PAddRADIUSServer_IN;
typedef struct _BDANODE_DESCRIPTOR *PBDANODE_DESCRIPTOR;
typedef struct _PBDAParentalControl PBDAParentalControl;
typedef struct tagBDA_TRANSPORT_INFO *PBDA_TRANSPORT_INFO;
typedef struct _BTH_HCI_EVENT_INFO *PBTH_HCI_EVENT_INFO;
typedef struct _BTH_RADIO_IN_RANGE *PBTH_RADIO_IN_RANGE;
typedef struct _CACHE_RELATIONSHIP *PCACHE_RELATIONSHIP;
typedef struct _PCC_SUBSPACE_HEADER PCC_SUBSPACE_HEADER;
typedef struct _CDROM_TOC_PMA_DATA *PCDROM_TOC_PMA_DATA;
typedef struct _53BCF8451FB1BBF1B3D3F15C66D0D1DB PCFILTER_DESCRIPTOR;
typedef struct _CHANGER_SET_ACCESS *PCHANGER_SET_ACCESS;
typedef struct _CMP_GET_PLUG_STATE *PCMP_GET_PLUG_STATE;
typedef struct _COMPLETION_CONTEXT *PCOMPLETION_CONTEXT;
typedef struct _CO_CALL_PARAMETERS *PCO_CALL_PARAMETERS;
typedef struct _CSV_NAMESPACE_INFO *PCSV_NAMESPACE_INFO;
typedef struct _CSV_QUERY_MDS_PATH *PCSV_QUERY_MDS_PATH;
typedef struct _DESCRIPTION_HEADER *PDESCRIPTION_HEADER;
typedef struct _DEVICE_DESCRIPTION *PDEVICE_DESCRIPTION;
typedef struct _DISK_CACHE_SETTING *PDISK_CACHE_SETTING;
typedef struct _DISK_EX_INT13_INFO *PDISK_EX_INT13_INFO;
typedef struct _DISK_SNAPSHOT_INFO *PDISK_SNAPSHOT_INFO;
typedef struct _DISPLAY_BRIGHTNESS *PDISPLAY_BRIGHTNESS;
typedef struct DOT11_CHANNEL_HINT *PDOT11_CHANNEL_HINT;
typedef struct _DOT11_IV48_COUNTER *PDOT11_IV48_COUNTER;
typedef struct _DOT11_JOIN_REQUEST *PDOT11_JOIN_REQUEST;
typedef struct DOT11_KEY_ALGO_BIP *PDOT11_KEY_ALGO_BIP;
typedef struct _DOT11_RECV_CONTEXT *PDOT11_RECV_CONTEXT;
typedef struct _DOT11_SCAN_REQUEST *PDOT11_SCAN_REQUEST;
typedef struct _DOT11_SEND_CONTEXT *PDOT11_SEND_CONTEXT;
typedef struct _DOT11_WFD_GROUP_ID *PDOT11_WFD_GROUP_ID;
typedef struct _DSM_WMILIB_CONTEXT *PDSM_WMILIB_CONTEXT;
typedef struct _DXGK_AGP_INTERFACE *PDXGK_AGP_INTERFACE;
typedef struct _DXGK_I2C_INTERFACE *PDXGK_I2C_INTERFACE;
typedef struct _DXGK_OPM_INTERFACE *PDXGK_OPM_INTERFACE;
typedef struct _DXGK_SPB_INTERFACE *PDXGK_SPB_INTERFACE;
typedef struct _ELEMENT_DESCRIPTOR *PELEMENT_DESCRIPTOR;
typedef struct _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;
typedef struct _EXCEPTION_RECORD32 *PEXCEPTION_RECORD32;
typedef struct _EXCEPTION_RECORD64 *PEXCEPTION_RECORD64;
typedef struct _FBPT_RECORD_HEADER *PFBPT_RECORD_HEADER;
typedef struct _FCB_BUFFERED_LOCKS *PFCB_BUFFERED_LOCKS;
typedef struct _FILE_REGION_OUTPUT *PFILE_REGION_OUTPUT;
typedef struct _34925C97D7FBDFE0BB6570642E2AD082 *PFIND_BY_SID_OUTPUT;
typedef struct _FORMAT_LIST_HEADER *PFORMAT_LIST_HEADER;
typedef struct _FPDT_RECORD_HEADER *PFPDT_RECORD_HEADER;
typedef struct _FSCNTL_SCREEN_INFO *PFSCNTL_SCREEN_INFO;
typedef struct _GETVERSIONINPARAMS *PGETVERSIONINPARAMS;
typedef struct _GET_ALL_POLICY_OUT *PGET_ALL_POLICY_OUT;
typedef struct _GROUP_RELATIONSHIP *PGROUP_RELATIONSHIP;
typedef struct _GetEventBuffer_OUT *PGetEventBuffer_OUT;
typedef struct _GetFC3MgmtInfo_OUT *PGetFC3MgmtInfo_OUT;
typedef struct _HBAFCPBindingEntry *PHBAFCPBindingEntry;
typedef struct HBA_FcpScsiEntryV2 *PHBA_FCPSCSIENTRYV2;
typedef struct HBA_Link_EventInfo *PHBA_LINK_EVENTINFO;
typedef struct HBA_PortAttributes *PHBA_PORTATTRIBUTES;
typedef struct HBA_PortStatistics *PHBA_PORTSTATISTICS;
typedef struct HBA_RSCN_EventInfo *PHBA_RSCN_EVENTINFO;
typedef struct _HIDP_UNKNOWN_TOKEN *PHIDP_UNKNOWN_TOKEN;
typedef struct IMAGE_COR20_HEADER *PIMAGE_COR20_HEADER;
typedef struct _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;
typedef struct _IMAGE_NT_HEADERS64 *PIMAGE_NT_HEADERS64;
typedef struct _IO_CSQ_IRP_CONTEXT *PIO_CSQ_IRP_CONTEXT;
typedef struct _IPV4_OPTION_HEADER *PIPV4_OPTION_HEADER;
typedef struct _IPV6_OPTION_HEADER *PIPV6_OPTION_HEADER;
typedef struct _IR_TRANSMIT_PARAMS *PIR_TRANSMIT_PARAMS;
typedef struct _ISCSI_LoginOptions *PISCSI_LoginOptions;
typedef struct _ISCSI_TargetPortal *PISCSI_TargetPortal;
typedef struct _KCRM_PROTOCOL_BLOB *PKCRM_PROTOCOL_BLOB;
typedef struct _KLOCK_QUEUE_HANDLE *PKLOCK_QUEUE_HANDLE;
typedef struct _BD45DD415248BEAEE554FBC6AD56DBFA *PKSAUDIO_POSITIONEX;
typedef struct KSAUTOMATION_TABLE_ *PKSAUTOMATION_TABLE;
typedef struct _93436C1F0A8D6F6AE253292F43F7C270 *PKSJACK_DESCRIPTION;
typedef struct _KSM_BDA_DRM_SETDRM *PKSM_BDA_DRM_SETDRM;
typedef struct _KSM_BDA_SCAN_START *PKSM_BDA_SCAN_START;
typedef struct _76BBB8505EB675FEBBC29DD2F96B6E73 *PKSRTAUDIO_BUFFER32;
typedef struct tagKS_AnalogVideoInfo *PKS_ANALOGVIDEOINFO;
typedef struct tagKS_DATARANGE_IMAGE *PKS_DATARANGE_IMAGE;
typedef struct tagKS_DATARANGE_VIDEO *PKS_DATARANGE_VIDEO;
typedef struct _KS_DVDCOPY_CHLGKEY *PKS_DVDCOPY_CHLGKEY;
typedef struct _KS_DVDCOPY_DISCKEY *PKS_DVDCOPY_DISCKEY;
typedef struct tagKS_VIDEOINFOHEADER *PKS_VIDEOINFOHEADER;
typedef struct _L2CAP_CONFIG_RANGE *PL2CAP_CONFIG_RANGE;
typedef struct _LLDP_TLV_TYPE_INFO *PLLDP_TLV_TYPE_INFO;
typedef struct _LOWIO_PER_FCB_INFO *PLOWIO_PER_FCB_INFO;
typedef struct _MAP_REGISTER_ENTRY *PMAP_REGISTER_ENTRY;
typedef struct _MEMORY_POWER_STATE *PMEMORY_POWER_STATE;
typedef IMiniportMidiStream *PMINIPORTMIDISTREAM;
typedef IMiniportWaveCyclic *PMINIPORTWAVECYCLIC;
typedef struct _MLDV2_QUERY_HEADER *PMLDV2_QUERY_HEADER;
typedef struct _MOUNTDEV_UNIQUE_ID *PMOUNTDEV_UNIQUE_ID;
typedef struct _0D819AFF13E0F3A45F15772F26E3677A *PMRXSHADOW_SRV_OPEN;
typedef struct _MSFC_FC4STATISTICS *PMSFC_FC4STATISTICS;
typedef struct _MSNdis_CoLinkSpeed *PMSNdis_CoLinkSpeed;
typedef struct _MSNdis_TransmitsOk *PMSNdis_TransmitsOk;
typedef struct _MSWmi_ProviderInfo *PMSWmi_ProviderInfo;
typedef struct _NAME_CACHE_CONTROL_ *PNAME_CACHE_CONTROL;
typedef struct _NDIS_CO_LINK_SPEED *PNDIS_CO_LINK_SPEED;
typedef struct _NDIS_IP_OPER_STATE *PNDIS_IP_OPER_STATE;
typedef struct _NDIS_MAC_LINE_DOWN *PNDIS_MAC_LINE_DOWN;
typedef struct _NDIS_OBJECT_HEADER *PNDIS_OBJECT_HEADER;
typedef struct _NDIS_PM_PARAMETERS *PNDIS_PM_PARAMETERS;
typedef struct _NDIS_RSS_PROCESSOR *PNDIS_RSS_PROCESSOR;
typedef struct _NDIS_VAR_DATA_DESC *PNDIS_VAR_DATA_DESC;
typedef struct _NDIS_WAN_GET_STATS *PNDIS_WAN_GET_STATS;
typedef struct _NDIS_WAN_LINE_DOWN *PNDIS_WAN_LINE_DOWN;
typedef struct _NDIS_WLAN_BSSID_EX *PNDIS_WLAN_BSSID_EX;
typedef struct _NDIS_WWAN_PIN_INFO *PNDIS_WWAN_PIN_INFO;
typedef struct _NDIS_WWAN_PIN_LIST *PNDIS_WWAN_PIN_LIST;
typedef struct _NDIS_WWAN_SMS_READ *PNDIS_WWAN_SMS_READ;
typedef struct _NDIS_WWAN_SMS_SEND *PNDIS_WWAN_SMS_SEND;
typedef struct nd_redirect *PND_REDIRECT_HEADER;
typedef struct _NETWORK_ADDRESS_IP *PNETWORK_ADDRESS_IP;
typedef struct _NET_IF_INFORMATION *PNET_IF_INFORMATION;
typedef struct _NODE_TYPE_CODE_AND_SIZE *PNODE_TYPE_AND_SIZE;
typedef struct _PNP_BUS_INFORMATION PNP_BUS_INFORMATION;
typedef struct _OPLOCK_KEY_CONTEXT *POPLOCK_KEY_CONTEXT;
typedef struct _A032DB0F7E204543FB4FDFFDC60EE56A POWER_ACTION_POLICY;
typedef struct _4B6917C7FECE298C62988A6425F6625F POWER_STATE_HANDLER;
typedef struct _POWER_USER_PRESENCE POWER_USER_PRESENCE;
typedef struct _PO_WAKE_SOURCE_INFO PO_WAKE_SOURCE_INFO;
typedef struct _PARALLEL_CHIP_MODE *PPARALLEL_CHIP_MODE;
typedef struct _D8D7C26B9FDE94F9B7E724B17C76CE36 *PPCAUTOMATION_TABLE;
typedef struct _PCI_AGP_CAPABILITY *PPCI_AGP_CAPABILITY;
typedef struct _CLS_IO_STATISTICS **PPCLS_IO_STATISTICS;
typedef struct _PCPROPERTY_REQUEST *PPCPROPERTY_REQUEST;
typedef struct _4C19A7724930D5B111BE03D85B9BF8C9 PPM_IDLESTATE_EVENT;
typedef struct _138CFB88078211FD2A51624E09EC668F PPM_IDLE_ACCOUNTING;
typedef struct _0FCABF7018C994F9B8701EF83F726E07 PPM_PERFSTATE_EVENT;
typedef struct _2A16572F0F8FCFF7B23E4E39050175A8 PPM_WMI_IDLE_STATES;
typedef struct _BC62D53B4BCE191E8F4EB4D4D278EB00 PPM_WMI_PERF_STATES;
typedef IPortClsSubdeviceEx *PPORTCLSSubdeviceEx;
typedef struct _PO_FX_COMPONENT_V1 *PPO_FX_COMPONENT_V1;
typedef struct _PO_FX_COMPONENT_V2 *PPO_FX_COMPONENT_V2;
typedef struct _2313F5502F168B8A201E3DA7C3B8E19D *PPPM_WMI_IDLE_STATE;
typedef struct _E6A0A6AFD97C9603961F7D97D8E3F005 *PPPM_WMI_PERF_STATE;
typedef struct _A62BA18312609C33C34CD1E15FBCE3E3 *PPRO_PARAMETER_LIST;
typedef struct _PTP_VENDOR_DATA_IN *PPTP_VENDOR_DATA_IN;
typedef struct _QUERY_PATH_REQUEST *PQUERY_PATH_REQUEST;
typedef struct _READ_CAPACITY_DATA *PREAD_CAPACITY_DATA;
typedef struct _B772E343E2BFFCD16A4D25DD01A27975 *PREAD_FILE_USN_DATA;
typedef struct _REASSIGN_BLOCKS_EX *PREASSIGN_BLOCKS_EX;
typedef struct _RESUME_PERFORMANCE *PRESUME_PERFORMANCE;
typedef struct _OSVERSIONINFOW *PRTL_OSVERSIONINFOW;
typedef struct _RX_BINDING_CONTEXT *PRX_BINDING_CONTEXT;
typedef struct _RX_FCB_TABLE_ENTRY *PRX_FCB_TABLE_ENTRY;
typedef struct _RX_SCAVENGER_ENTRY *PRX_SCAVENGER_ENTRY;
typedef struct _RX_WORK_QUEUE_ITEM_ *PRX_WORK_QUEUE_ITEM;
typedef struct _S3PT_RECORD_HEADER *PS3PT_RECORD_HEADER;
typedef struct _113235CB38218359B65312E6A8B53D96 *PSCSIWMIGUIDREGINFO;
typedef struct _SCSI_REQUEST_BLOCK *PSCSI_REQUEST_BLOCK;
typedef struct _SDP_TREE_ROOT_NODE *PSDP_TREE_ROOT_NODE;
typedef struct _SD_ENUM_SDS_OUTPUT *PSD_ENUM_SDS_OUTPUT;
typedef struct _SECURITY_USER_DATA *PSECURITY_USER_DATA;
typedef struct _SERIAL_WMI_HW_DATA *PSERIAL_WMI_HW_DATA;
typedef struct _SES_PHY_DESCRIPTOR *PSES_PHY_DESCRIPTOR;
typedef struct _SET_UNIT_DIRECTORY *PSET_UNIT_DIRECTORY;
typedef struct _SE_ADT_OBJECT_TYPE *PSE_ADT_OBJECT_TYPE;
typedef struct _SID_AND_ATTRIBUTES *PSID_AND_ATTRIBUTES;
typedef struct SMHBA_BindingEntry *PSMHBA_BINDINGENTRY;
typedef struct _SRBEX_DATA_IO_INFO *PSRBEX_DATA_IO_INFO;
typedef struct _STORAGE_IDENTIFIER *PSTORAGE_IDENTIFIER;
typedef struct _STORAGE_IDLE_POWER *PSTORAGE_IDLE_POWER;
typedef struct _STREAMS_TDI_ACTION *PSTREAMS_TDI_ACTION;
typedef unsigned long long *PSTREAM_SYSTEM_TIME;
typedef union _SUB_Q_CHANNEL_DATA *PSUB_Q_CHANNEL_DATA;
typedef union _SUPPORTED_ADVANCES *PSUPPORTED_ADVANCES;
typedef struct _5E9BD264646644ED8CAA43D9E3AB2E3D *PSYSTEM_POWER_LEVEL;
typedef struct _ScsiReportLuns_OUT *PScsiReportLuns_OUT;
typedef struct _SendCTPassThru_OUT *PSendCTPassThru_OUT;
typedef struct _SetFC3MgmtInfo_OUT *PSetFC3MgmtInfo_OUT;
typedef struct _TAPE_PHYS_POSITION PTAPE_PHYS_POSITION;
typedef struct _TAPE_POSITION_DATA *PTAPE_POSITION_DATA;
typedef struct _TA_ADDRESS_NETBIOS *PTA_NETBIOS_ADDRESS;
typedef struct _TDI_ADDRESS_IP6_XP *PTDI_ADDRESS_IP6_XP;
typedef struct _TDI_ADDRESS_NETONE *PTDI_ADDRESS_NETONE;
typedef struct _TDI_PNP_CONTEXT_XP *PTDI_PNP_CONTEXT_XP;
typedef struct _TDI_REQUEST_ACCEPT *PTDI_REQUEST_ACCEPT;
typedef struct _TDI_REQUEST_KERNEL *PTDI_REQUEST_KERNEL;
typedef struct _TDI_REQUEST_LISTEN *PTDI_REQUEST_LISTEN;
typedef struct _TDI_REQUEST_STATUS *PTDI_REQUEST_STATUS;
typedef struct _TOKEN_AUDIT_POLICY *PTOKEN_AUDIT_POLICY;
typedef struct _TOKEN_DEFAULT_DACL *PTOKEN_DEFAULT_DACL;
typedef struct _TOKEN_LINKED_TOKEN *PTOKEN_LINKED_TOKEN;
typedef struct _PTP_VENDOR_DATA_OUT PTP_VENDOR_DATA_OUT;
typedef struct _TRACK_INFORMATION2 *PTRACK_INFORMATION2;
typedef struct _TRACK_INFORMATION3 *PTRACK_INFORMATION3;
typedef struct _USBRPM_DEVICE_LIST *PUSBRPM_DEVICE_LIST;
typedef union _USB_20_PORT_CHANGE *PUSB_20_PORT_CHANGE;
typedef union _USB_20_PORT_STATUS *PUSB_20_PORT_STATUS;
typedef union _USB_30_PORT_CHANGE *PUSB_30_PORT_CHANGE;
typedef union _USB_30_PORT_STATUS *PUSB_30_PORT_STATUS;
typedef struct _USB_BOS_DESCRIPTOR *PUSB_BOS_DESCRIPTOR;
typedef struct _USB_HUB_DESCRIPTOR *PUSB_HUB_DESCRIPTOR;
typedef struct _VERIFY_INFORMATION *PVERIFY_INFORMATION;
typedef struct _VIDEO_ACCESS_RANGE *PVIDEO_ACCESS_RANGE;
typedef struct _VIDEO_DEBUG_REPORT *PVIDEO_DEBUG_REPORT;
typedef struct _VIDEO_PALETTE_DATA *PVIDEO_PALETTE_DATA;
typedef struct _VIDEO_REGISTER_VDM *PVIDEO_REGISTER_VDM;
typedef struct _VIDEO_SHARE_MEMORY *PVIDEO_SHARE_MEMORY;
typedef struct _WAIT_CONTEXT_BLOCK *PWAIT_CONTEXT_BLOCK;
typedef struct _WHEA_GENERIC_ERROR *PWHEA_GENERIC_ERROR;
typedef struct _WHEA_PCIXDEVICE_ID *PWHEA_PCIXDEVICE_ID;
typedef union _WHEA_XPF_BUS_CHECK *PWHEA_XPF_BUS_CHECK;
typedef union _WHEA_XPF_TLB_CHECK *PWHEA_XPF_TLB_CHECK;
typedef struct _WWAN_AUTH_RESPONSE *PWWAN_AUTH_RESPONSE;
typedef struct _WWAN_CONTEXT_STATE *PWWAN_CONTEXT_STATE;
typedef struct _WWAN_SMS_SEND_CDMA *PWWAN_SMS_SEND_CDMA;
typedef struct _BDA_GDDS_DATATYPE *P_BDA_GDDS_DATATYPE;
typedef struct _QUERY_PATH_RESPONSE QUERY_PATH_RESPONSE;
typedef struct _RDBSS_DEVICE_OBJECT RDBSS_DEVICE_OBJECT;
typedef struct _READ_LOG_SECTORS_IN READ_LOG_SECTORS_IN;
typedef struct _REPAIR_COPIES_INPUT REPAIR_COPIES_INPUT;
typedef struct _REPARSE_DATA_BUFFER REPARSE_DATA_BUFFER;
typedef struct _RESOURCE_HASH_ENTRY RESOURCE_HASH_ENTRY;
typedef struct _RTL_HEAP_PARAMETERS RTL_HEAP_PARAMETERS;
typedef struct _RemoveiSNSServer_IN RemoveiSNSServer_IN;
typedef struct _SCATTER_GATHER_LIST SCATTER_GATHER_LIST;
typedef struct _SCSIWMILIB_CONTEXT SCSI_WMILIB_CONTEXT;
typedef struct _SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR;
typedef struct _SERIAL_WMI_COMMPROP SERIAL_WMI_COMMPROP;
typedef struct _SET_DISK_ATTRIBUTES SET_DISK_ATTRIBUTES;
typedef struct _SINGLE_LIST_ENTRY32 SINGLE_LIST_ENTRY32;
typedef struct _SMARTCARD_EXTENSION SMARTCARD_EXTENSION;
typedef union SMHBA_PhyStatistics SMHBA_PHYSTATISTICS;
typedef struct SMHBA_TargetMapping SMHBA_TARGETMAPPING;
typedef struct sockaddr_in6_w2ksp1 SOCKADDR_IN6_W2KSP1;
typedef struct sockaddr_storage SOCKADDR_STORAGE_LH;
typedef struct sockaddr_storage_xp SOCKADDR_STORAGE_XP;
typedef struct _SOCKET_ADDRESS_LIST SOCKET_ADDRESS_LIST;
typedef struct _STOR_POFX_COMPONENT STOR_POFX_COMPONENT;
typedef struct _STOR_POFX_DEVICE_V2 STOR_POFX_DEVICE_V2;
typedef struct _STREAM_EXTENT_ENTRY STREAM_EXTENT_ENTRY;
typedef struct _STREAM_LAYOUT_ENTRY STREAM_LAYOUT_ENTRY;
typedef struct _SYSTEM_POWER_POLICY SYSTEM_POWER_POLICY;
typedef struct _ScsiReadCapacity_IN ScsiReadCapacity_IN;
typedef struct _SecPkgContext_Flags SecPkgContext_Flags;
typedef struct _SecPkgContext_Sizes SecPkgContext_Sizes;
typedef struct _TAPE_GET_STATISTICS TAPE_GET_STATISTICS;
typedef struct _TAPE_WMI_OPERATIONS TAPE_WMI_OPERATIONS;
typedef struct _TDI_ADDRESS_NETBIOS TDI_ADDRESS_NETBIOS;
typedef struct _TDI_CONNECTION_INFO TDI_CONNECTION_INFO;
typedef struct _TDI_CONNECT_REQUEST TDI_REQUEST_CONNECT;
typedef struct _TDI_REQUEST_RECEIVE TDI_REQUEST_RECEIVE;
typedef struct _TEXTUAL_LEAF_FORMAT TEXTUAL_LEAF_FORMAT;
typedef struct _TOKEN_DEVICE_CLAIMS TOKEN_DEVICE_CLAIMS;
typedef struct _TOKEN_PRIMARY_GROUP TOKEN_PRIMARY_GROUP;
typedef struct tagTRANSPORTAUDIOPARMS TRANSPORTAUDIOPARMS;
typedef struct tagTRANSPORTBASICPARMS TRANSPORTBASICPARMS;
typedef struct tagTRANSPORTVIDEOPARMS TRANSPORTVIDEOPARMS;
typedef struct _21360BCC3E7339C6666FC361A17309B6 TUNER_ANALOG_CAPS_S;
typedef struct _TXN_PARAMETER_BLOCK TXN_PARAMETER_BLOCK;
typedef struct _USBCAMD_DEVICE_DATA USBCAMD_DEVICE_DATA;
typedef union _USB_ENDPOINT_STATUS USB_ENDPOINT_STATUS;
typedef struct _1695112F83C2100BD6016AFE09814BB8 USN_JOURNAL_DATA_V0;
typedef struct _1E8FB3C461BB5B132CC95A1A06B366AC USN_JOURNAL_DATA_V1;
typedef struct _VideoModeDescriptor VideoModeDescriptor;
typedef struct _WSK_CLIENT_DISPATCH WSK_CLIENT_DISPATCH;
typedef struct _WSK_DATA_INDICATION WSK_DATA_INDICATION;
typedef struct _WWAN_AUTH_CHALLENGE WWAN_AUTH_CHALLENGE;
typedef struct _WWAN_PACKET_SERVICE WWAN_PACKET_SERVICE;
typedef struct _WWAN_SMS_PDU_RECORD WWAN_SMS_PDU_RECORD;
typedef struct _WmiSetBrightness_IN WmiSetBrightness_IN;
typedef struct _ZONE_SEGMENT_HEADER ZONE_SEGMENT_HEADER;
enum _ACCESS_REASON_TYPE {AccessReasonNone = 0x0,AccessReasonAllowedAce = 0x10000,AccessReasonDeniedAce = 0x20000,AccessReasonAllowedParentAce = 0x30000,AccessReasonDeniedParentAce = 0x40000,AccessReasonNotGrantedByCape = 0x50000,AccessReasonNotGrantedByParentCape = 0x60000,AccessReasonNotGrantedToAppContainer = 0x70000,AccessReasonMissingPrivilege = 0x100000,AccessReasonFromPrivilege = 0x200000,AccessReasonIntegrityLevel = 0x300000,AccessReasonOwnership = 0x400000,AccessReasonNullDacl = 0x500000,AccessReasonEmptyDacl = 0x600000,AccessReasonNoSD = 0x700000,AccessReasonNoGrant = 0x800000,};
enum _BDCB_CALLBACK_TYPE {BdCbStatusUpdate = 0x0,BdCbInitializeImage = 0x1,};
enum _CLFS_IOSTATS_CLASS {ClfsIoStatsDefault = 0x0,ClfsIoStatsMax = 0xFFFF,};
enum _CONFIGURATION_TYPE {ArcSystem = 0x0,CentralProcessor = 0x1,FloatingPointProcessor = 0x2,PrimaryIcache = 0x3,PrimaryDcache = 0x4,SecondaryIcache = 0x5,SecondaryDcache = 0x6,SecondaryCache = 0x7,EisaAdapter = 0x8,TcAdapter = 0x9,ScsiAdapter = 0xA,DtiAdapter = 0xB,MultiFunctionAdapter = 0xC,DiskController = 0xD,TapeController = 0xE,CdromController = 0xF,WormController = 0x10,SerialController = 0x11,NetworkController = 0x12,DisplayController = 0x13,ParallelController = 0x14,PointerController = 0x15,KeyboardController = 0x16,AudioController = 0x17,OtherController = 0x18,DiskPeripheral = 0x19,FloppyDiskPeripheral = 0x1A,TapePeripheral = 0x1B,ModemPeripheral = 0x1C,MonitorPeripheral = 0x1D,PrinterPeripheral = 0x1E,PointerPeripheral = 0x1F,KeyboardPeripheral = 0x20,TerminalPeripheral = 0x21,OtherPeripheral = 0x22,LinePeripheral = 0x23,NetworkPeripheral = 0x24,SystemMemory = 0x25,DockingInformation = 0x26,RealModeIrqRoutingTable = 0x27,RealModePCIEnumeration = 0x28,MaximumType = 0x29,};
enum _DEVICE_POWER_STATE {PowerDeviceUnspecified = 0x0,PowerDeviceD0 = 0x1,PowerDeviceD1 = 0x2,PowerDeviceD2 = 0x3,PowerDeviceD3 = 0x4,PowerDeviceMaximum = 0x5,};
enum _DOT11_OFFLOAD_TYPE {dot11_offload_type_wep = 0x1,dot11_offload_type_auth = 0x2,};
enum _DOT11_UPDATE_IE_OP {dot11_update_ie_op_create_replace = 0x1,dot11_update_ie_op_delete = 0x2,};
enum _DXGKMDT_OPM_STATUS {DXGKMDT_OPM_STATUS_NORMAL = 0x0,DXGKMDT_OPM_STATUS_LINK_LOST = 0x1,DXGKMDT_OPM_STATUS_RENEGOTIATION_REQUIRED = 0x2,DXGKMDT_OPM_STATUS_TAMPERING_DETECTED = 0x4,DXGKMDT_OPM_STATUS_REVOKED_HDCP_DEVICE_ATTACHED = 0x8,};
enum _DXGK_GDIROP_BITBLT {DXGK_GDIROP_INVALID = 0x0,DXGK_GDIROP_SRCCOPY = 0x1,DXGK_GDIROP_SRCINVERT = 0x2,DXGK_GDIROP_SRCAND = 0x3,DXGK_GDIROP_SRCOR = 0x4,DXGK_GDIROP_ROP3 = 0x5,};
enum _IDE_OPERATION_MODE {IdeModeNormal = 0x0,IdeModeDump = 0x1,IdeModeRemovableBay = 0x2,};
enum _INTERLOCKED_RESULT {ResultNegative = 0x8000,ResultZero = 0x4000,ResultPositive = 0x0,};
enum _IO_PAGING_PRIORITY {IoPagingPriorityInvalid = 0x0,IoPagingPriorityNormal = 0x1,IoPagingPriorityHigh = 0x2,IoPagingPriorityReserved1 = 0x3,IoPagingPriorityReserved2 = 0x4,};
enum _LOCK_HOLDING_STATE {LHS_LockNotHeld = 0x0,LHS_SharedLockHeld = 0x1,LHS_ExclusiveLockHeld = 0x2,};
struct _MSWmi_ProviderInfo {char VariableData[1];};
enum _NDIS_PM_WOL_PACKET {NdisPMWoLPacketUnspecified = 0x0,NdisPMWoLPacketBitmapPattern = 0x1,NdisPMWoLPacketMagicPacket = 0x2,NdisPMWoLPacketIPv4TcpSyn = 0x3,NdisPMWoLPacketIPv6TcpSyn = 0x4,NdisPMWoLPacketEapolRequestIdMessage = 0x5,NdisPMWoLPacketMaximum = 0x6,};
enum _NDIS_POWER_PROFILE {NdisPowerProfileBattery = 0x0,NdisPowerProfileAcOnLine = 0x1,};
enum _NET_IF_ACCESS_TYPE {NET_IF_ACCESS_LOOPBACK = 0x1,NET_IF_ACCESS_BROADCAST = 0x2,NET_IF_ACCESS_POINT_TO_POINT = 0x3,NET_IF_ACCESS_POINT_TO_MULTI_POINT = 0x4,NET_IF_ACCESS_MAXIMUM = 0x5,};
enum _NET_IF_OPER_STATUS {NET_IF_OPER_STATUS_UP = 0x1,NET_IF_OPER_STATUS_DOWN = 0x2,NET_IF_OPER_STATUS_TESTING = 0x3,NET_IF_OPER_STATUS_UNKNOWN = 0x4,NET_IF_OPER_STATUS_DORMANT = 0x5,NET_IF_OPER_STATUS_NOT_PRESENT = 0x6,NET_IF_OPER_STATUS_LOWER_LAYER_DOWN = 0x7,};
enum _NET_PNP_EVENT_CODE {NetEventSetPower = 0x0,NetEventQueryPower = 0x1,NetEventQueryRemoveDevice = 0x2,NetEventCancelRemoveDevice = 0x3,NetEventReconfigure = 0x4,NetEventBindList = 0x5,NetEventBindsComplete = 0x6,NetEventPnPCapabilities = 0x7,NetEventPause = 0x8,NetEventRestart = 0x9,NetEventPortActivation = 0xA,NetEventPortDeactivation = 0xB,NetEventIMReEnableDevice = 0xC,NetEventNDKEnable = 0xD,NetEventNDKDisable = 0xE,NetEventFilterPreDetach = 0xF,NetEventBindFailed = 0x10,NetEventSwitchActivate = 0x11,NetEventMaximum = 0x12,};
enum _POWER_REQUEST_TYPE {PowerRequestDisplayRequired = 0x0,PowerRequestSystemRequired = 0x1,PowerRequestAwayModeRequired = 0x2,PowerRequestExecutionRequired = 0x3,};
enum _RX_BLOCK_CONDITION {Condition_Uninitialized = 0x0,Condition_InTransition = 0x1,Condition_Closing = 0x2,Condition_Good = 0x3,Condition_Bad = 0x4,Condition_Closed = 0x5,};
enum _RX_NC_CHECK_STATUS {RX_NC_SUCCESS = 0x0,RX_NC_TIME_EXPIRED = 0x1,RX_NC_MRXCTX_FAIL = 0x2,};
enum _SE_AUDIT_OPERATION {AuditPrivilegeObject = 0x0,AuditPrivilegeService = 0x1,AuditAccessCheck = 0x2,AuditOpenObject = 0x3,AuditOpenObjectWithTransaction = 0x4,AuditCloseObject = 0x5,AuditDeleteObject = 0x6,AuditOpenObjectForDelete = 0x7,AuditOpenObjectForDeleteWithTransaction = 0x8,AuditCloseNonObject = 0x9,AuditOpenNonObject = 0xA,AuditObjectReference = 0xB,AuditHandleCreation = 0xC,};
enum _SOC_SUBSYSTEM_TYPE {SOC_SUBSYS_WIRELESS_MODEM = 0x0,SOC_SUBSYS_AUDIO_DSP = 0x1,SOC_SUBSYS_WIRELSS_CONNECTIVITY = 0x2,SOC_SUBSYS_SENSORS = 0x3,};
enum _STORAGE_MEDIA_TYPE {DDS_4mm = 0x20,MiniQic = 0x21,Travan = 0x22,QIC = 0x23,MP_8mm = 0x24,AME_8mm = 0x25,AIT1_8mm = 0x26,DLT = 0x27,NCTP = 0x28,IBM_3480 = 0x29,IBM_3490E = 0x2A,IBM_Magstar_3590 = 0x2B,IBM_Magstar_MP = 0x2C,STK_DATA_D3 = 0x2D,SONY_DTF = 0x2E,DV_6mm = 0x2F,DMI = 0x30,SONY_D2 = 0x31,CLEANER_CARTRIDGE = 0x32,CD_ROM = 0x33,CD_R = 0x34,CD_RW = 0x35,DVD_ROM = 0x36,DVD_R = 0x37,DVD_RW = 0x38,MO_3_RW = 0x39,MO_5_WO = 0x3A,MO_5_RW = 0x3B,MO_5_LIMDOW = 0x3C,PC_5_WO = 0x3D,PC_5_RW = 0x3E,PD_5_RW = 0x3F,ABL_5_WO = 0x40,PINNACLE_APEX_5_RW = 0x41,SONY_12_WO = 0x42,PHILIPS_12_WO = 0x43,HITACHI_12_WO = 0x44,CYGNET_12_WO = 0x45,KODAK_14_WO = 0x46,MO_NFR_525 = 0x47,NIKON_12_RW = 0x48,IOMEGA_ZIP = 0x49,IOMEGA_JAZ = 0x4A,SYQUEST_EZ135 = 0x4B,SYQUEST_EZFLYER = 0x4C,SYQUEST_SYJET = 0x4D,AVATAR_F2 = 0x4E,MP2_8mm = 0x4F,DST_S = 0x50,DST_M = 0x51,DST_L = 0x52,VXATape_1 = 0x53,VXATape_2 = 0x54,STK_9840 = 0x55,LTO_Ultrium = 0x56,LTO_Accelis = 0x57,DVD_RAM = 0x58,AIT_8mm = 0x59,ADR_1 = 0x5A,ADR_2 = 0x5B,STK_9940 = 0x5C,SAIT = 0x5D,VXATape = 0x5E,};
enum _STORAGE_QUERY_TYPE {PropertyStandardQuery = 0x0,PropertyExistsQuery = 0x1,PropertyMaskQuery = 0x2,PropertyQueryMaxDefined = 0x3,};
enum _SYSTEM_POWER_STATE {PowerSystemUnspecified = 0x0,PowerSystemWorking = 0x1,PowerSystemSleeping1 = 0x2,PowerSystemSleeping2 = 0x3,PowerSystemSleeping3 = 0x4,PowerSystemHibernate = 0x5,PowerSystemShutdown = 0x6,PowerSystemMaximum = 0x7,};
enum _TPM20_START_METHOD {Tpm20TableStartMethodInvalid = 0x0,Tpm20TableStartMethodSim = 0x1,Tpm20TableStartMethodAcpi = 0x2,Tpm20TableStartMethodTz1 = 0x3,Tpm20TableStartMethodTz2 = 0x4,Tpm20TableStartMethodTz3 = 0x5,Tpm20TableStartMethodTis13 = 0x6,};
enum _WRITE_CACHE_CHANGE {WriteCacheChangeUnknown = 0x0,WriteCacheNotChangeable = 0x1,WriteCacheChangeable = 0x2,};
enum _WRITE_CACHE_ENABLE {WriteCacheEnableUnknown = 0x0,WriteCacheDisabled = 0x1,WriteCacheEnabled = 0x2,};
enum _WWAN_AUTH_PROTOCOL {WwanAuthProtocolNone = 0x0,WwanAuthProtocolPap = 0x1,WwanAuthProtocolChap = 0x2,WwanAuthProtocolMsChapV2 = 0x3,WwanAuthProtocolMax = 0x4,};
enum _WWAN_PIN_OPERATION {WwanPinOperationEnter = 0x0,WwanPinOperationEnable = 0x1,WwanPinOperationDisable = 0x2,WwanPinOperationChange = 0x3,WwanPinOperationMax = 0x4,};
enum _WWAN_REGISTER_MODE {WwanRegisterModeUnknown = 0x0,WwanRegisterModeAutomatic = 0x1,WwanRegisterModeManual = 0x2,WwanRegisterModeMax = 0x3,};
enum _WWAN_SMS_CDMA_LANG {WwanSmsCdmaLangUnknown = 0x0,WwanSmsCdmaLangEnglish = 0x1,WwanSmsCdmaLangFrench = 0x2,WwanSmsCdmaLangSpanish = 0x3,WwanSmsCdmaLangJapanese = 0x4,WwanSmsCdmaLangKorean = 0x5,WwanSmsCdmaLangChinese = 0x6,WwanSmsCdmaLangHebrew = 0x7,WwanSmsCdmaLangMax = 0x8,};
enum _tagAvcResponseCode {AVC_RESPONSE_NOTIMPL = 0x8,AVC_RESPONSE_ACCEPTED = 0x9,AVC_RESPONSE_REJECTED = 0xA,AVC_RESPONSE_IN_TRANSITION = 0xB,AVC_RESPONSE_STABLE = 0xC,AVC_RESPONSE_IMPLEMENTED = 0xC,AVC_RESPONSE_CHANGED = 0xD,AVC_RESPONSE_INTERIM = 0xF,};
typedef void (*pKdCheckPowerButton)(void);
struct tag_s_RIFFWAVE_INST;
struct threadmbcinfostruct;
typedef struct _AALUSER_PARAMETERS AALUSER_PARAMETERS;
typedef struct _ACCESS_ALLOWED_ACE ACCESS_ALLOWED_ACE;
typedef struct _ARBITER_LIST_ENTRY ARBITER_LIST_ENTRY;
typedef struct _ARBITER_PARAMETERS ARBITER_PARAMETERS;
typedef struct _AVC_PIN_DESCRIPTOR AVC_PIN_DESCRIPTOR;
typedef struct _AddRADIUSServer_IN AddRADIUSServer_IN;
typedef struct _BDANODE_DESCRIPTOR BDANODE_DESCRIPTOR;
enum BDA_MULTICAST_MODE {BDA_PROMISCUOUS_MULTICAST = 0x0,BDA_FILTERED_MULTICAST = 0x1,BDA_NO_MULTICAST = 0x2,};
typedef struct tagBDA_TRANSPORT_INFO BDA_TRANSPORT_INFO;
typedef struct _BTH_HCI_EVENT_INFO BTH_HCI_EVENT_INFO;
typedef struct _BTH_RADIO_IN_RANGE BTH_RADIO_IN_RANGE;
typedef struct _CACHE_RELATIONSHIP CACHE_RELATIONSHIP;
typedef struct _CDROM_TOC_PMA_DATA CDROM_TOC_PMA_DATA;
typedef struct _CHANGER_SET_ACCESS CHANGER_SET_ACCESS;
typedef struct _CMP_GET_PLUG_STATE CMP_GET_PLUG_STATE;
typedef struct _COMPLETION_CONTEXT COMPLETION_CONTEXT;
typedef struct _CO_CALL_PARAMETERS CO_CALL_PARAMETERS;
typedef struct _CSV_NAMESPACE_INFO CSV_NAMESPACE_INFO;
typedef struct _CSV_QUERY_MDS_PATH CSV_QUERY_MDS_PATH;
typedef struct _D3DDDICB_LOCKFLAGS D3DDDICB_LOCKFLAGS;
typedef struct _D3DDDI_ESCAPEFLAGS D3DDDI_ESCAPEFLAGS;
typedef struct _D3DDDI_SURFACEINFO D3DDDI_SURFACEINFO;
typedef struct _D3DKMDT_GAMMA_RAMP D3DKMDT_GAMMA_RAMP;
typedef struct _DDVIDEOPORTCONNECT DDVIDEOPORTCONNECT;
typedef struct _DESCRIPTION_HEADER DESCRIPTION_HEADER;
typedef struct _DEVICE_DESCRIPTION DEVICE_DESCRIPTION;
typedef struct digirealwaveformat_tag DIGIREALWAVEFORMAT;
typedef struct _DISK_CACHE_SETTING DISK_CACHE_SETTING;
typedef struct _DISK_EX_INT13_INFO DISK_EX_INT13_INFO;
typedef struct _DISK_SNAPSHOT_INFO DISK_SNAPSHOT_INFO;
typedef struct _DISPLAY_BRIGHTNESS DISPLAY_BRIGHTNESS;
typedef struct dolbyac2waveformat_tag DOLBYAC2WAVEFORMAT;
typedef struct _DOT11_IV48_COUNTER DOT11_IV48_COUNTER;
typedef struct _DOT11_JOIN_REQUEST DOT11_JOIN_REQUEST;
typedef struct _DOT11_RECV_CONTEXT DOT11_RECV_CONTEXT;
typedef struct _DOT11_SCAN_REQUEST DOT11_SCAN_REQUEST;
typedef struct _DOT11_SEND_CONTEXT DOT11_SEND_CONTEXT;
typedef struct _DOT11_WFD_GROUP_ID DOT11_WFD_GROUP_ID;
typedef struct _DSM_WMILIB_CONTEXT DSM_WMILIB_CONTEXT;
typedef struct dvi_adpcmwaveformat_tag DVIADPCMWAVEFORMAT;
typedef struct _DXGKARG_SETPALETTE DXGKARG_SETPALETTE;
typedef struct _DXGK_AGP_INTERFACE DXGK_AGP_INTERFACE;
typedef struct _DXGK_DMABUFFERCAPS DXGK_DMABUFFERCAPS;
typedef struct _DXGK_GAMMARAMPCAPS DXGK_GAMMARAMPCAPS;
typedef struct _DXGK_GDIARG_BITBLT DXGK_GDIARG_BITBLT;
typedef struct _DXGK_I2C_INTERFACE DXGK_I2C_INTERFACE;
typedef struct _DXGK_OPM_INTERFACE DXGK_OPM_INTERFACE;
typedef struct _DXGK_SEGMENTFLAGS2 DXGK_SEGMENTFLAGS2;
typedef struct _DXGK_SPB_INTERFACE DXGK_SPB_INTERFACE;
typedef struct _DXGK_TRANSFERFLAGS DXGK_TRANSFERFLAGS;
typedef struct _ELEMENT_DESCRIPTOR ELEMENT_DESCRIPTOR;
typedef struct _EXCEPTION_POINTERS EXCEPTION_POINTERS;
typedef struct _EXCEPTION_RECORD32 EXCEPTION_RECORD32;
typedef struct _EXCEPTION_RECORD64 EXCEPTION_RECORD64;
typedef struct _FBPT_RECORD_HEADER FBPT_RECORD_HEADER;
typedef struct _FCB_BUFFERED_LOCKS FCB_BUFFERED_LOCKS;
typedef struct _FILE_REGION_OUTPUT FILE_REGION_OUTPUT;
typedef struct _34925C97D7FBDFE0BB6570642E2AD082 FIND_BY_SID_OUTPUT;
typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;
typedef struct _FORMAT_LIST_HEADER FORMAT_LIST_HEADER;
typedef struct _FPDT_RECORD_HEADER FPDT_RECORD_HEADER;
typedef struct _FSCNTL_SCREEN_INFO FSCNTL_SCREEN_INFO;
typedef struct _GETVERSIONINPARAMS GETVERSIONINPARAMS;
typedef struct _GET_ALL_POLICY_OUT GET_ALL_POLICY_OUT;
typedef struct _GROUP_RELATIONSHIP GROUP_RELATIONSHIP;
typedef struct _GetEventBuffer_OUT GetEventBuffer_OUT;
typedef struct _GetFC3MgmtInfo_OUT GetFC3MgmtInfo_OUT;
typedef struct _HBAFCPBindingEntry HBAFCPBindingEntry;
typedef void *HBA_CALLBACKHANDLE;
typedef struct HBA_FcpScsiEntryV2 HBA_FCPSCSIENTRYV2;
typedef struct HBA_Link_EventInfo HBA_LINK_EVENTINFO;
typedef struct HBA_PortAttributes HBA_PORTATTRIBUTES;
typedef struct HBA_PortStatistics HBA_PORTSTATISTICS;
typedef struct HBA_RSCN_EventInfo HBA_RSCN_EVENTINFO;
enum HBA_fcpbindingtype {TO_D_ID = 0x0,TO_WWN = 0x1,TO_OTHER = 0x2,};
typedef struct _HIDP_UNKNOWN_TOKEN HIDP_UNKNOWN_TOKEN;
struct IIndirectedUnknown {struct IIndirectedUnknownVtbl *lpVtbl;};
typedef struct ima_adpcmwaveformat_tag IMAADPCMWAVEFORMAT;
typedef struct _IMAGE_NT_HEADERS IMAGE_NT_HEADERS32;
typedef struct _IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS64;
typedef struct _IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32;
typedef struct _IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA64;
enum IMPORT_OBJECT_TYPE {IMPORT_OBJECT_CODE = 0x0,IMPORT_OBJECT_DATA = 0x1,IMPORT_OBJECT_CONST = 0x2,};
typedef struct _IO_CSQ_IRP_CONTEXT IO_CSQ_IRP_CONTEXT;
typedef struct _IPV4_OPTION_HEADER IPV4_OPTION_HEADER;
typedef struct _IPV6_OPTION_HEADER IPV6_OPTION_HEADER;
struct IPortWavePciStream {struct IPortWavePciStreamVtbl *lpVtbl;};
typedef struct _IRB_REQ_ASYNC_LOCK IRB_REQ_ASYNC_LOCK;
typedef struct _IRB_REQ_ASYNC_READ IRB_REQ_ASYNC_READ;
typedef struct _IRB_REQ_ISOCH_STOP IRB_REQ_ISOCH_STOP;
typedef struct _IRB_REQ_ISOCH_TALK IRB_REQ_ISOCH_TALK;
typedef struct _IR_TRANSMIT_PARAMS IR_TRANSMIT_PARAMS;
typedef struct _ISCSI_LoginOptions ISCSI_LoginOptions;
typedef struct _ISCSI_TargetPortal ISCSI_TargetPortal;
enum ISDBCAS_REQUEST_ID {ISDBCAS_REQUEST_ID_EMG = 0x38,ISDBCAS_REQUEST_ID_EMD = 0x3A,};
typedef struct _KCRM_PROTOCOL_BLOB KCRM_PROTOCOL_BLOB;
typedef struct _KLOCK_QUEUE_HANDLE KLOCK_QUEUE_HANDLE;
typedef struct _BD45DD415248BEAEE554FBC6AD56DBFA KSAUDIO_POSITIONEX;
typedef struct KSAUTOMATION_TABLE_ KSAUTOMATION_TABLE;
typedef struct _93436C1F0A8D6F6AE253292F43F7C270 KSJACK_DESCRIPTION;
typedef struct _KSM_BDA_DRM_SETDRM KSM_BDA_DRM_SETDRM;
typedef struct _KSM_BDA_SCAN_START KSM_BDA_SCAN_START;
typedef struct _76BBB8505EB675FEBBC29DD2F96B6E73 KSRTAUDIO_BUFFER32;
typedef struct tagKS_AnalogVideoInfo KS_ANALOGVIDEOINFO;
typedef struct tagKS_DATARANGE_IMAGE KS_DATARANGE_IMAGE;
typedef struct tagKS_DATARANGE_VIDEO KS_DATARANGE_VIDEO;
typedef struct _KS_DVDCOPY_CHLGKEY KS_DVDCOPY_CHLGKEY;
typedef struct _KS_DVDCOPY_DISCKEY KS_DVDCOPY_DISCKEY;
typedef struct tagKS_VIDEOINFOHEADER KS_VIDEOINFOHEADER;
typedef struct _L2CAP_CONFIG_RANGE L2CAP_CONFIG_RANGE;
typedef struct _LLDP_TLV_TYPE_INFO LLDP_TLV_TYPE_INFO;
typedef struct _LOWIO_PER_FCB_INFO LOWIO_PER_FCB_INFO;
typedef struct _OSVERSIONINFOEXA *LPOSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXW *LPOSVERSIONINFOEXW;
typedef struct _QOS_SHAPING_RATE *LPQOS_SHAPING_RATE;
typedef struct _76743BAC06EF1EE4A95E434A18762A4D *LPRATING_ATTRIBUTE;
typedef struct _SCARD_IO_REQUEST *LPSCARD_IO_REQUEST;
typedef struct _A26E898CA2658C153BF5293169564991 *LPSCARD_T0_COMMAND;
typedef struct _SENDCMDOUTPARAMS *LPSENDCMDOUTPARAMS;
typedef struct tag_video_configure_parms *LPVIDEOCONFIGPARMS;
typedef struct tag_video_open_parms *LPVIDEO_OPEN_PARMS;
enum MACRO_ACCESS_FLAGS {ACCESS_FLAGS_TYPE_READ = 1,ACCESS_FLAGS_TYPE_WRITE = 2,ACCESS_FLAGS_TYPE_LOCK = 4,ACCESS_FLAGS_TYPE_BROADCAST = 8,};
enum MACRO_ACL_TRANSFER {ACL_TRANSFER_DIRECTION_OUT = 0x0,ACL_TRANSFER_DIRECTION_IN = 0x1,ACL_SHORT_TRANSFER_OK = 0x2,ACL_TRANSFER_TIMEOUT = 0x4,};
enum MACRO_ADDRESS_TYPE {ADDRESS_TYPE_FLAG_BTL8 = 0x1,};
enum MACRO_AGP_INTERNAL {AGP_INTERNAL = 0x115,};
enum MACRO_AddTarget_IN {AddTarget_IN_HbaPortWWN_ID = 1,AddTarget_IN_DiscoveredPortWWN_ID = 2,AddTarget_IN_AllTargets_ID = 3,AddTarget_OUT_HBAStatus_ID = 4,};
enum MACRO_BAD_EXHANDLE {BAD_EXHANDLE = 0xA7,};
enum MACRO_BLOCK_DEVICE {BLOCK_DEVICE_TOKEN_LIMITS_DESCRIPTOR_TYPE_WINDOWS = 0x0,};
enum MACRO_BLOCK_PERIOD {BLOCK_PERIOD_2997 = 133466800,BLOCK_PERIOD_25 = 133333333,};
enum MACRO_BUGCODE_USB3 {BUGCODE_USB3_DRIVER = 0x144,};
enum MACRO_BUS_RESPONSE {BUS_RESPONSE_IS_RAW = 1,};
enum MACRO_CLASSFACTORY {CLASSFACTORY_E_FIRST = 0x80040110,CLASSFACTORY_E_LAST = 0x8004011F,CLASSFACTORY_S_FIRST = 0x40110,CLASSFACTORY_S_LAST = 0x4011F,};
enum MACRO_DCOMPOSITION {DCOMPOSITION_ERROR_WINDOW_ALREADY_COMPOSED = 0x88980800,DCOMPOSITION_ERROR_SURFACE_BEING_RENDERED = 0x88980801,DCOMPOSITION_ERROR_SURFACE_NOT_BEING_RENDERED = 0x88980802,};
enum MACRO_DEBUG_BUFFER {DEBUG_BUFFER_LENGTH = 256,};
enum MACRO_DEFAULT_READ {DEFAULT_READ_AHEAD_GRANULARITY = 0x8000,};
enum MACRO_DEVICE_SCOPE {DEVICE_SCOPE_PCI_DEVICE = 1,DEVICE_SCOPE_PCI_SUB = 2,DEVICE_SCOPE_IOAPIC = 3,DEVICE_SCOPE_HPET = 4,DEVICE_SCOPE_MIN_SIZE = 8,};
enum MACRO_DEVPROP_MASK {DEVPROP_MASK_TYPE = 0xFFF,DEVPROP_MASK_TYPEMOD = 0xF000,DEVPROP_TRUE = 0xFF,DEVPROP_FALSE = 0x0,};
enum MACRO_DFS_REFERRAL {DFS_REFERRAL_REQUEST = 0x400037EE,};
enum MACRO_DISK_CLUSTER {DISK_CLUSTER_FLAG_ENABLED = 0x1,DISK_CLUSTER_FLAG_CSV = 0x2,DISK_CLUSTER_FLAG_IN_MAINTENANCE = 0x4,DISK_CLUSTER_FLAG_PNP_ARRIVAL_COMPLETE = 0x8,};
enum MACRO_DISK_LOGGING {DISK_LOGGING_START = 0,DISK_LOGGING_STOP = 1,DISK_LOGGING_DUMP = 2,DISK_BINNING = 3,};
enum MACRO_DMA_TRANSFER {DMA_TRANSFER_CONTEXT_VERSION1 = 1,DMA_TRANSFER_CONTEXT_SIZE_V1 = 64,DMA_SYNCHRONOUS_CALLBACK = 1,};
enum MACRO_DOMAIN_GROUP {DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED = 0x1F0,DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS = 0x1F1,DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS = 0x1F2,};
enum MACRO_DOT11_CIPHER {DOT11_CIPHER_ALGORITHM_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_DEVICE {DOT11_DEVICE_ENTRY_BYTE_ARRAY_REVISION_1 = 1,};
enum MACRO_DOT11_EXEMPT {DOT11_EXEMPT_NO_EXEMPTION = 0,DOT11_EXEMPT_ALWAYS = 1,DOT11_EXEMPT_ON_KEY_MAPPING_KEY_UNAVAILABLE = 2,DOT11_EXEMPT_UNICAST = 1,DOT11_EXEMPT_MULTICAST = 2,DOT11_EXEMPT_BOTH = 3,DOT11_PRIVACY_EXEMPTION_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_EXTSTA {DOT11_EXTSTA_CAPABILITY_REVISION_1 = 1,};
enum MACRO_DOT11_PACKET {DOT11_PACKET_TYPE_DIRECTED_CTRL = 0x1,DOT11_PACKET_TYPE_DIRECTED_MGMT = 0x2,DOT11_PACKET_TYPE_DIRECTED_DATA = 0x4,DOT11_PACKET_TYPE_MULTICAST_CTRL = 0x8,DOT11_PACKET_TYPE_MULTICAST_MGMT = 0x10,DOT11_PACKET_TYPE_MULTICAST_DATA = 0x20,DOT11_PACKET_TYPE_BROADCAST_CTRL = 0x40,DOT11_PACKET_TYPE_BROADCAST_MGMT = 0x80,DOT11_PACKET_TYPE_BROADCAST_DATA = 0x100,DOT11_PACKET_TYPE_PROMISCUOUS_CTRL = 0x200,DOT11_PACKET_TYPE_PROMISCUOUS_MGMT = 0x400,DOT11_PACKET_TYPE_PROMISCUOUS_DATA = 0x800,DOT11_PACKET_TYPE_ALL_MULTICAST_CTRL = 0x1000,DOT11_PACKET_TYPE_ALL_MULTICAST_MGMT = 0x2000,DOT11_PACKET_TYPE_ALL_MULTICAST_DATA = 0x4000,DOT11_PACKET_TYPE_RESERVED = 0xFFFF8000,};
enum MACRO_DOT11_PHY_ID {DOT11_PHY_ID_LIST_REVISION_1 = 1,DOT11_PHY_ID_ANY = -1,};
enum MACRO_DXGK_PRESENT {DXGK_PRESENT_SOURCE_INDEX = 1,DXGK_PRESENT_DESTINATION_INDEX = 2,DXGK_PRESENT_MAX_INDEX = 2,};
enum MACRO_ENABLE_ERROR {ENABLE_ERROR_SOURCE_IN_ErrorSourceId_ID = 2,ENABLE_ERROR_SOURCE_OUT_Status_ID = 1,};
enum MACRO_ENABLE_SMART {ENABLE_SMART = 0xD8,DISABLE_SMART = 0xD9,};
enum MACRO_ERROR_SPACES {ERROR_SPACES_POOL_WAS_DELETED = 0xE70001,ERROR_SPACES_RESILIENCY_TYPE_INVALID = 0x80E70003,ERROR_SPACES_DRIVE_SECTOR_SIZE_INVALID = 0x80E70004,ERROR_SPACES_DRIVE_REDUNDANCY_INVALID = 0x80E70006,ERROR_SPACES_NUMBER_OF_DATA_COPIES_INVALID = 0x80E70007,ERROR_SPACES_PARITY_LAYOUT_INVALID = 0x80E70008,ERROR_SPACES_INTERLEAVE_LENGTH_INVALID = 0x80E70009,ERROR_SPACES_NUMBER_OF_COLUMNS_INVALID = 0x80E7000A,ERROR_SPACES_NOT_ENOUGH_DRIVES = 0x80E7000B,ERROR_VOLSNAP_BOOTFILE_NOT_VALID = 0x80820001,};
enum MACRO_EVENT_BRIDGE {EVENT_BRIDGE_PROTOCOL_REGISTER_FAILED = 0xC0003908,EVENT_BRIDGE_MINIPROT_DEVNAME_MISSING = 0xC0003909,EVENT_BRIDGE_MINIPORT_REGISTER_FAILED = 0xC000390A,EVENT_BRIDGE_DEVICE_CREATION_FAILED = 0xC000390B,EVENT_BRIDGE_NO_BRIDGE_MAC_ADDR = 0xC000390C,EVENT_BRIDGE_MINIPORT_INIT_FAILED = 0xC000390D,EVENT_BRIDGE_ETHERNET_NOT_OFFERED = 0xC000390E,EVENT_BRIDGE_THREAD_CREATION_FAILED = 0xC000390F,EVENT_BRIDGE_THREAD_REF_FAILED = 0xC0003910,EVENT_BRIDGE_PACKET_POOL_CREATION_FAILED = 0xC0003911,EVENT_BRIDGE_BUFFER_POOL_CREATION_FAILED = 0xC0003912,EVENT_BRIDGE_INIT_MALLOC_FAILED = 0xC0003913,EVENT_BRIDGE_ADAPTER_LINK_SPEED_QUERY_FAILED = 0xC000396C,EVENT_BRIDGE_ADAPTER_MAC_ADDR_QUERY_FAILED = 0xC000396D,EVENT_BRIDGE_ADAPTER_FILTER_FAILED = 0xC000396E,EVENT_BRIDGE_ADAPTER_NAME_QUERY_FAILED = 0xC000396F,EVENT_BRIDGE_ADAPTER_BIND_FAILED = 0xC0003970,EVENT_DAV_REDIR_DELAYED_WRITE_FAILED = 0x800039D0,EVENT_WEBCLIENT_CLOSE_PUT_FAILED = 0x80003A35,EVENT_WEBCLIENT_CLOSE_DELETE_FAILED = 0x80003A36,EVENT_WEBCLIENT_CLOSE_PROPPATCH_FAILED = 0x80003A37,EVENT_WEBCLIENT_SETINFO_PROPPATCH_FAILED = 0x80003A38,EVENT_WSK_OWNINGTHREAD_PARAMETER_IGNORED = 0xC0003E80,EVENT_WINSOCK_TDI_FILTER_DETECTED = 0x80003E81,EVENT_EQOS_INFO_MACHINE_POLICY_REFRESH_NO_CHANGE = 0x40004074,EVENT_EQOS_INFO_MACHINE_POLICY_REFRESH_WITH_CHANGE = 0x40004075,EVENT_EQOS_INFO_USER_POLICY_REFRESH_NO_CHANGE = 0x40004076,EVENT_EQOS_INFO_USER_POLICY_REFRESH_WITH_CHANGE = 0x40004077,EVENT_EQOS_INFO_TCP_AUTOTUNING_NOT_CONFIGURED = 0x40004078,EVENT_EQOS_INFO_TCP_AUTOTUNING_OFF = 0x40004079,EVENT_EQOS_INFO_TCP_AUTOTUNING_HIGHLY_RESTRICTED = 0x4000407A,EVENT_EQOS_INFO_TCP_AUTOTUNING_RESTRICTED = 0x4000407B,EVENT_EQOS_INFO_TCP_AUTOTUNING_NORMAL = 0x4000407C,EVENT_EQOS_INFO_APP_MARKING_NOT_CONFIGURED = 0x4000407D,EVENT_EQOS_INFO_APP_MARKING_IGNORED = 0x4000407E,EVENT_EQOS_INFO_APP_MARKING_ALLOWED = 0x4000407F,EVENT_EQOS_INFO_LOCAL_SETTING_DONT_USE_NLA = 0x40004080,EVENT_EQOS_URL_QOS_APPLICATION_CONFLICT = 0x40004081,EVENT_EQOS_WARNING_TEST_1 = 0x800040D8,EVENT_EQOS_WARNING_TEST_2 = 0x800040D9,EVENT_EQOS_WARNING_MACHINE_POLICY_VERSION = 0x800040DA,EVENT_EQOS_WARNING_USER_POLICY_VERSION = 0x800040DB,EVENT_EQOS_WARNING_MACHINE_POLICY_PROFILE_NOT_SPECIFIED = 0x800040DC,EVENT_EQOS_WARNING_USER_POLICY_PROFILE_NOT_SPECIFIED = 0x800040DD,EVENT_EQOS_WARNING_MACHINE_POLICY_QUOTA_EXCEEDED = 0x800040DE,EVENT_EQOS_WARNING_USER_POLICY_QUOTA_EXCEEDED = 0x800040DF,EVENT_EQOS_WARNING_MACHINE_POLICY_CONFLICT = 0x800040E0,EVENT_EQOS_WARNING_USER_POLICY_CONFLICT = 0x800040E1,EVENT_EQOS_WARNING_MACHINE_POLICY_NO_FULLPATH_APPNAME = 0x800040E2,EVENT_EQOS_WARNING_USER_POLICY_NO_FULLPATH_APPNAME = 0x800040E3,EVENT_EQOS_ERROR_MACHINE_POLICY_REFERESH = 0xC000413C,EVENT_EQOS_ERROR_USER_POLICY_REFERESH = 0xC000413D,EVENT_EQOS_ERROR_OPENING_MACHINE_POLICY_ROOT_KEY = 0xC000413E,EVENT_EQOS_ERROR_OPENING_USER_POLICY_ROOT_KEY = 0xC000413F,EVENT_EQOS_ERROR_MACHINE_POLICY_KEYNAME_TOO_LONG = 0xC0004140,EVENT_EQOS_ERROR_USER_POLICY_KEYNAME_TOO_LONG = 0xC0004141,EVENT_EQOS_ERROR_MACHINE_POLICY_KEYNAME_SIZE_ZERO = 0xC0004142,EVENT_EQOS_ERROR_USER_POLICY_KEYNAME_SIZE_ZERO = 0xC0004143,EVENT_EQOS_ERROR_OPENING_MACHINE_POLICY_SUBKEY = 0xC0004144,EVENT_EQOS_ERROR_OPENING_USER_POLICY_SUBKEY = 0xC0004145,EVENT_EQOS_ERROR_PROCESSING_MACHINE_POLICY_FIELD = 0xC0004146,EVENT_EQOS_ERROR_PROCESSING_USER_POLICY_FIELD = 0xC0004147,EVENT_EQOS_ERROR_SETTING_TCP_AUTOTUNING = 0xC0004148,EVENT_EQOS_ERROR_SETTING_APP_MARKING = 0xC0004149,EVENT_WINNAT_SESSION_LIMIT_REACHED = 0x80004268,};
enum MACRO_EVENT_FILTER {EVENT_FILTER_TYPE_SCHEMATIZED = 0x80000000,EVENT_FILTER_TYPE_SYSTEM_FLAGS = 0x80000001,EVENT_FILTER_TYPE_TRACEHANDLE = 0x80000002,EVENT_WRITE_FLAG_NO_FAULTING = 0x1,};
enum MACRO_EXECUTE_SELF {EXECUTE_SELF_TEST_IN_Subcommand_ID = 1,EXECUTE_SELF_TEST_OUT_ReturnCode_ID = 2,};
enum MACRO_EXTRA_VOLUME {EXTRA_VOLUME_DELETED = 0xC00037E6,EXTRA_VOLUME_NOT_DELETED = 0xC00037E7,};
enum MACRO_FACILITY_MCA {FACILITY_MCA_ERROR_CODE = 0x5,};
enum MACRO_FACILITY_XPS {FACILITY_XPS = 82,FACILITY_XAML = 43,FACILITY_USN = 129,FACILITY_BLBUI = 128,FACILITY_SPP = 256,FACILITY_WSB_ONLINE = 133,FACILITY_DLS = 153,FACILITY_BLB_CLI = 121,FACILITY_BLB = 120,FACILITY_WSBAPP = 122,FACILITY_WPN = 62,FACILITY_WMAAECMA = 1996,FACILITY_WINRM = 51,FACILITY_WINPE = 61,FACILITY_WINDOWSUPDATE = 36,FACILITY_WINDOWS_STORE = 63,FACILITY_WINDOWS_SETUP = 48,FACILITY_WINDOWS_DEFENDER = 80,FACILITY_WINDOWS_CE = 24,FACILITY_WINDOWS = 8,FACILITY_WINCODEC_DWRITE_DWM = 2200,FACILITY_WIA = 33,FACILITY_WER = 27,FACILITY_WEB_SOCKET = 886,FACILITY_WEB = 885,FACILITY_USERMODE_VOLSNAP = 130,FACILITY_USERMODE_VOLMGR = 56,FACILITY_VISUALCPP = 109,FACILITY_USERMODE_VIRTUALIZATION = 55,FACILITY_USERMODE_VHD = 58,FACILITY_URT = 19,FACILITY_UMI = 22,FACILITY_UI = 42,FACILITY_TPM_SOFTWARE = 41,FACILITY_TPM_SERVICES = 40,FACILITY_SXS = 23,FACILITY_STORAGE = 3,FACILITY_STATE_MANAGEMENT = 34,FACILITY_SSPI = 9,FACILITY_USERMODE_SPACES = 231,FACILITY_SOS = 160,FACILITY_SCARD = 16,FACILITY_SHELL = 39,FACILITY_SETUPAPI = 15,FACILITY_SECURITY = 9,FACILITY_SDIAG = 60,FACILITY_RPC = 1,FACILITY_RESTORE = 256,FACILITY_SCRIPT = 112,FACILITY_PARSE = 113,FACILITY_RAS = 83,FACILITY_POWERSHELL = 84,FACILITY_PLA = 48,FACILITY_PIDGENX = 2561,FACILITY_P2P_INT = 98,FACILITY_P2P = 99,FACILITY_OPC = 81,FACILITY_ONLINE_ID = 134,FACILITY_WIN32 = 7,FACILITY_CONTROL = 10,FACILITY_WEBSERVICES = 61,FACILITY_NULL = 0,FACILITY_NDIS = 52,FACILITY_NAP = 39,FACILITY_MOBILE = 1793,FACILITY_METADIRECTORY = 35,FACILITY_MSMQ = 14,FACILITY_MEDIASERVER = 13,FACILITY_MBN = 84,FACILITY_LINGUISTIC_SERVICES = 305,FACILITY_LEAP = 2184,FACILITY_INTERNET = 12,FACILITY_ITF = 4,FACILITY_INPUT = 64,FACILITY_USERMODE_HYPERVISOR = 53,FACILITY_ACCELERATOR = 1536,FACILITY_HTTP = 25,FACILITY_GRAPHICS = 38,FACILITY_FWP = 50,FACILITY_FVE = 49,FACILITY_USERMODE_FILTER_MANAGER = 31,FACILITY_EAS = 85,FACILITY_EAP = 66,FACILITY_DXGI_DDI = 2171,FACILITY_DXGI = 2170,FACILITY_DPLAY = 21,FACILITY_DMSERVER = 256,FACILITY_DISPATCH = 2,FACILITY_DIRECTORYSERVICE = 37,FACILITY_DIRECTMUSIC = 2168,FACILITY_DIRECT3D11 = 2172,FACILITY_DIRECT3D10 = 2169,FACILITY_DIRECT2D = 2201,FACILITY_DAF = 100,FACILITY_DEPLOYMENT_SERVICES_UTIL = 260,FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT = 272,FACILITY_DEPLOYMENT_SERVICES_TFTP = 264,FACILITY_DEPLOYMENT_SERVICES_PXE = 263,FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER = 289,FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT = 290,FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT = 259,FACILITY_DEPLOYMENT_SERVICES_IMAGING = 258,FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING = 278,FACILITY_DEPLOYMENT_SERVICES_SERVER = 257,FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER = 293,FACILITY_DEPLOYMENT_SERVICES_BINLSVC = 261,FACILITY_DEFRAG = 2304,FACILITY_DEBUGGERS = 176,FACILITY_CONFIGURATION = 33,FACILITY_COMPLUS = 17,FACILITY_USERMODE_COMMONLOG = 26,FACILITY_CMI = 54,FACILITY_CERT = 11,FACILITY_BLUETOOTH_ATT = 101,FACILITY_BCD = 57,FACILITY_BACKGROUNDCOPY = 32,FACILITY_AUDIOSTREAMING = 1094,FACILITY_AUDCLNT = 2185,FACILITY_AUDIO = 102,FACILITY_ACS = 20,FACILITY_AAF = 18,};
enum MACRO_FLT_ALLOCATE {FLT_ALLOCATE_CALLBACK_DATA_PREALLOCATE_ALL_MEMORY = 0x1,FLT_VOLUME_CONTEXT = 0x1,FLT_INSTANCE_CONTEXT = 0x2,FLT_FILE_CONTEXT = 0x4,FLT_STREAM_CONTEXT = 0x8,FLT_STREAMHANDLE_CONTEXT = 0x10,FLT_TRANSACTION_CONTEXT = 0x20,FLT_SECTION_CONTEXT = 0x40,FLT_CONTEXT_END = 0xFFFF,FLT_ALL_CONTEXTS = 0x7F,};
enum MACRO_FLT_INTERNAL {FLT_INTERNAL_OPERATION_COUNT = 22,};
enum MACRO_FLT_VARIABLE {FLT_VARIABLE_SIZED_CONTEXTS = 4294967295,};
enum MACRO_FSRTL_VOLUME {FSRTL_VOLUME_DISMOUNT = 1,FSRTL_VOLUME_DISMOUNT_FAILED = 2,FSRTL_VOLUME_LOCK = 3,FSRTL_VOLUME_LOCK_FAILED = 4,FSRTL_VOLUME_UNLOCK = 5,FSRTL_VOLUME_MOUNT = 6,FSRTL_VOLUME_NEEDS_CHKDSK = 7,FSRTL_VOLUME_WORM_NEAR_FULL = 8,FSRTL_VOLUME_WEARING_OUT = 9,FSRTL_VOLUME_FORCED_CLOSED = 10,FSRTL_VOLUME_INFO_MAKE_COMPAT = 11,FSRTL_VOLUME_PREPARING_EJECT = 12,FSRTL_VOLUME_CHANGE_SIZE = 13,FSRTL_VOLUME_BACKGROUND_FORMAT = 14,FSRTL_UNC_PROVIDER_FLAGS_MAILSLOTS_SUPPORTED = 1,FSRTL_UNC_PROVIDER_FLAGS_CSC_ENABLED = 2,FSRTL_UNC_PROVIDER_FLAGS_DOMAIN_SVC_AWARE = 4,FSRTL_ALLOCATE_ECPLIST_FLAG_CHARGE_QUOTA = 1,FSRTL_ALLOCATE_ECP_FLAG_CHARGE_QUOTA = 1,FSRTL_ALLOCATE_ECP_FLAG_NONPAGED_POOL = 2,FSRTL_ECP_LOOKASIDE_FLAG_NONPAGED_POOL = 2,};
enum MACRO_GPIO_COMMAND {GPIO_COMMAND_QUERY = 0x1,GPIO_COMMAND_OPEN = 0x1,GPIO_COMMAND_OPEN_PINS = 0x2,GPIO_COMMAND_CLOSE_PINS = 0x4,GPIO_COMMAND_READ_BUFFER = 0x8,GPIO_COMMAND_WRITE_BUFFER = 0x10,GPIO_FLAGS_BYTE = 0x1,GPIO_FLAGS_WORD = 0x2,GPIO_FLAGS_DWORD = 0x4,GPIO_STATUS_NOERROR = 0x0,GPIO_STATUS_BUSY = 0x1,GPIO_STATUS_ERROR = 0x2,GPIO_STATUS_NO_ASYNCH = 0x4,};
enum MACRO_HAL_DISPATCH {HAL_DISPATCH_VERSION = 4,HAL_MCE_INTERRUPTS_BASED = 4294967295,HAL_MCE_DISABLED = 0,HAL_CMC_INTERRUPTS_BASED = 4294967295,HAL_CMC_DISABLED = 0,HAL_CPE_INTERRUPTS_BASED = 4294967295,HAL_CPE_DISABLED = 0,HAL_MCA_INTERRUPTS_BASED = 4294967295,HAL_MCA_DISABLED = 0,HAL_PLATFORM_DISABLE_WRITE_COMBINING = 1,HAL_PLATFORM_DISABLE_PTCG = 4,HAL_PLATFORM_DISABLE_UC_MAIN_MEMORY = 8,HAL_PLATFORM_ENABLE_WRITE_COMBINING_MMIO = 16,HAL_PLATFORM_ACPI_TABLES_CACHED = 32,};
enum MACRO_HBA_REGISTRY {HBA_REGISTRY_BINDING_VERSION = 1,};
enum MACRO_HID_HARDWARE {MOUSE_HID_HARDWARE = 0x80,WHEELMOUSE_HID_HARDWARE = 0x100,};
enum MACRO_HID_REVISION {HID_REVISION = 0x1,};
enum MACRO_IDE_UNTAGGED {IDE_UNTAGGED = 0xFF,IDE_UNINITIALIZED_VALUE = 0xFFFFFFFF,IDE_REG_SZ = 0x1,IDE_REG_BINARY = 0x3,IDE_REG_DWORD = 0x4,};
enum MACRO_IMAGE_COMDAT {IMAGE_COMDAT_SELECT_NODUPLICATES = 1,IMAGE_COMDAT_SELECT_ANY = 2,IMAGE_COMDAT_SELECT_SAME_SIZE = 3,IMAGE_COMDAT_SELECT_EXACT_MATCH = 4,IMAGE_COMDAT_SELECT_ASSOCIATIVE = 5,IMAGE_COMDAT_SELECT_LARGEST = 6,IMAGE_COMDAT_SELECT_NEWEST = 7,IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 1,IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 2,IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 3,IMAGE_REL_I386_ABSOLUTE = 0,IMAGE_REL_I386_DIR16 = 1,IMAGE_REL_I386_REL16 = 2,IMAGE_REL_I386_DIR32 = 6,IMAGE_REL_I386_DIR32NB = 7,IMAGE_REL_I386_SEG12 = 9,IMAGE_REL_I386_SECTION = 10,IMAGE_REL_I386_SECREL = 11,IMAGE_REL_I386_TOKEN = 12,IMAGE_REL_I386_SECREL7 = 13,IMAGE_REL_I386_REL32 = 20,IMAGE_REL_MIPS_ABSOLUTE = 0,IMAGE_REL_MIPS_REFHALF = 1,IMAGE_REL_MIPS_REFWORD = 2,IMAGE_REL_MIPS_JMPADDR = 3,IMAGE_REL_MIPS_REFHI = 4,IMAGE_REL_MIPS_REFLO = 5,IMAGE_REL_MIPS_GPREL = 6,IMAGE_REL_MIPS_LITERAL = 7,IMAGE_REL_MIPS_SECTION = 10,IMAGE_REL_MIPS_SECREL = 11,IMAGE_REL_MIPS_SECRELLO = 12,IMAGE_REL_MIPS_SECRELHI = 13,IMAGE_REL_MIPS_TOKEN = 14,IMAGE_REL_MIPS_JMPADDR16 = 16,IMAGE_REL_MIPS_REFWORDNB = 34,IMAGE_REL_MIPS_PAIR = 37,IMAGE_REL_ALPHA_ABSOLUTE = 0,IMAGE_REL_ALPHA_REFLONG = 1,IMAGE_REL_ALPHA_REFQUAD = 2,IMAGE_REL_ALPHA_GPREL32 = 3,IMAGE_REL_ALPHA_LITERAL = 4,IMAGE_REL_ALPHA_LITUSE = 5,IMAGE_REL_ALPHA_GPDISP = 6,IMAGE_REL_ALPHA_BRADDR = 7,IMAGE_REL_ALPHA_HINT = 8,IMAGE_REL_ALPHA_INLINE_REFLONG = 9,IMAGE_REL_ALPHA_REFHI = 10,IMAGE_REL_ALPHA_REFLO = 11,IMAGE_REL_ALPHA_PAIR = 12,IMAGE_REL_ALPHA_MATCH = 13,IMAGE_REL_ALPHA_SECTION = 14,IMAGE_REL_ALPHA_SECREL = 15,IMAGE_REL_ALPHA_REFLONGNB = 16,IMAGE_REL_ALPHA_SECRELLO = 17,IMAGE_REL_ALPHA_SECRELHI = 18,IMAGE_REL_ALPHA_REFQ3 = 19,IMAGE_REL_ALPHA_REFQ2 = 20,IMAGE_REL_ALPHA_REFQ1 = 21,IMAGE_REL_ALPHA_GPRELLO = 22,IMAGE_REL_ALPHA_GPRELHI = 23,IMAGE_REL_PPC_ABSOLUTE = 0,IMAGE_REL_PPC_ADDR64 = 1,IMAGE_REL_PPC_ADDR32 = 2,IMAGE_REL_PPC_ADDR24 = 3,IMAGE_REL_PPC_ADDR16 = 4,IMAGE_REL_PPC_ADDR14 = 5,IMAGE_REL_PPC_REL24 = 6,IMAGE_REL_PPC_REL14 = 7,IMAGE_REL_PPC_TOCREL16 = 8,IMAGE_REL_PPC_TOCREL14 = 9,IMAGE_REL_PPC_ADDR32NB = 10,IMAGE_REL_PPC_SECREL = 11,IMAGE_REL_PPC_SECTION = 12,IMAGE_REL_PPC_IFGLUE = 13,IMAGE_REL_PPC_IMGLUE = 14,IMAGE_REL_PPC_SECREL16 = 15,IMAGE_REL_PPC_REFHI = 16,IMAGE_REL_PPC_REFLO = 17,IMAGE_REL_PPC_PAIR = 18,IMAGE_REL_PPC_SECRELLO = 19,IMAGE_REL_PPC_SECRELHI = 20,IMAGE_REL_PPC_GPREL = 21,IMAGE_REL_PPC_TOKEN = 22,IMAGE_REL_PPC_TYPEMASK = 255,IMAGE_REL_PPC_NEG = 256,IMAGE_REL_PPC_BRTAKEN = 512,IMAGE_REL_PPC_BRNTAKEN = 1024,IMAGE_REL_PPC_TOCDEFN = 2048,IMAGE_REL_SH3_ABSOLUTE = 0,IMAGE_REL_SH3_DIRECT16 = 1,IMAGE_REL_SH3_DIRECT32 = 2,IMAGE_REL_SH3_DIRECT8 = 3,IMAGE_REL_SH3_DIRECT8_WORD = 4,IMAGE_REL_SH3_DIRECT8_LONG = 5,IMAGE_REL_SH3_DIRECT4 = 6,IMAGE_REL_SH3_DIRECT4_WORD = 7,IMAGE_REL_SH3_DIRECT4_LONG = 8,IMAGE_REL_SH3_PCREL8_WORD = 9,IMAGE_REL_SH3_PCREL8_LONG = 10,IMAGE_REL_SH3_PCREL12_WORD = 11,IMAGE_REL_SH3_STARTOF_SECTION = 12,IMAGE_REL_SH3_SIZEOF_SECTION = 13,IMAGE_REL_SH3_SECTION = 14,IMAGE_REL_SH3_SECREL = 15,IMAGE_REL_SH3_DIRECT32_NB = 16,IMAGE_REL_SH3_GPREL4_LONG = 17,IMAGE_REL_SH3_TOKEN = 18,IMAGE_REL_SHM_PCRELPT = 19,IMAGE_REL_SHM_REFLO = 20,IMAGE_REL_SHM_REFHALF = 21,IMAGE_REL_SHM_RELLO = 22,IMAGE_REL_SHM_RELHALF = 23,IMAGE_REL_SHM_PAIR = 24,IMAGE_REL_SH_NOMODE = 32768,IMAGE_REL_ARM_ABSOLUTE = 0,IMAGE_REL_ARM_ADDR32 = 1,IMAGE_REL_ARM_ADDR32NB = 2,IMAGE_REL_ARM_BRANCH24 = 3,IMAGE_REL_ARM_BRANCH11 = 4,IMAGE_REL_ARM_TOKEN = 5,IMAGE_REL_ARM_GPREL12 = 6,IMAGE_REL_ARM_GPREL7 = 7,IMAGE_REL_ARM_BLX24 = 8,IMAGE_REL_ARM_BLX11 = 9,IMAGE_REL_ARM_SECTION = 14,IMAGE_REL_ARM_SECREL = 15,IMAGE_REL_ARM_MOV32A = 16,IMAGE_REL_ARM_MOV32 = 16,IMAGE_REL_ARM_MOV32T = 17,IMAGE_REL_THUMB_MOV32 = 17,IMAGE_REL_ARM_BRANCH20T = 18,IMAGE_REL_THUMB_BRANCH20 = 18,IMAGE_REL_ARM_BRANCH24T = 20,IMAGE_REL_THUMB_BRANCH24 = 20,IMAGE_REL_ARM_BLX23T = 21,IMAGE_REL_THUMB_BLX23 = 21,IMAGE_REL_AM_ABSOLUTE = 0,IMAGE_REL_AM_ADDR32 = 1,IMAGE_REL_AM_ADDR32NB = 2,IMAGE_REL_AM_CALL32 = 3,IMAGE_REL_AM_FUNCINFO = 4,IMAGE_REL_AM_REL32_1 = 5,IMAGE_REL_AM_REL32_2 = 6,IMAGE_REL_AM_SECREL = 7,IMAGE_REL_AM_SECTION = 8,IMAGE_REL_AM_TOKEN = 9,IMAGE_REL_AMD64_ABSOLUTE = 0,IMAGE_REL_AMD64_ADDR64 = 1,IMAGE_REL_AMD64_ADDR32 = 2,IMAGE_REL_AMD64_ADDR32NB = 3,IMAGE_REL_AMD64_REL32 = 4,IMAGE_REL_AMD64_REL32_1 = 5,IMAGE_REL_AMD64_REL32_2 = 6,IMAGE_REL_AMD64_REL32_3 = 7,IMAGE_REL_AMD64_REL32_4 = 8,IMAGE_REL_AMD64_REL32_5 = 9,IMAGE_REL_AMD64_SECTION = 10,IMAGE_REL_AMD64_SECREL = 11,IMAGE_REL_AMD64_SECREL7 = 12,IMAGE_REL_AMD64_TOKEN = 13,IMAGE_REL_AMD64_SREL32 = 14,IMAGE_REL_AMD64_PAIR = 15,IMAGE_REL_AMD64_SSPAN32 = 16,IMAGE_REL_IA64_ABSOLUTE = 0,IMAGE_REL_IA64_IMM14 = 1,IMAGE_REL_IA64_IMM22 = 2,IMAGE_REL_IA64_IMM64 = 3,IMAGE_REL_IA64_DIR32 = 4,IMAGE_REL_IA64_DIR64 = 5,IMAGE_REL_IA64_PCREL21B = 6,IMAGE_REL_IA64_PCREL21M = 7,IMAGE_REL_IA64_PCREL21F = 8,IMAGE_REL_IA64_GPREL22 = 9,IMAGE_REL_IA64_LTOFF22 = 10,IMAGE_REL_IA64_SECTION = 11,IMAGE_REL_IA64_SECREL22 = 12,IMAGE_REL_IA64_SECREL64I = 13,IMAGE_REL_IA64_SECREL32 = 14,IMAGE_REL_IA64_DIR32NB = 16,IMAGE_REL_IA64_SREL14 = 17,IMAGE_REL_IA64_SREL22 = 18,IMAGE_REL_IA64_SREL32 = 19,IMAGE_REL_IA64_UREL32 = 20,IMAGE_REL_IA64_PCREL60X = 21,IMAGE_REL_IA64_PCREL60B = 22,IMAGE_REL_IA64_PCREL60F = 23,IMAGE_REL_IA64_PCREL60I = 24,IMAGE_REL_IA64_PCREL60M = 25,IMAGE_REL_IA64_IMMGPREL64 = 26,IMAGE_REL_IA64_TOKEN = 27,IMAGE_REL_IA64_GPREL32 = 28,IMAGE_REL_IA64_ADDEND = 31,IMAGE_REL_CEF_ABSOLUTE = 0,IMAGE_REL_CEF_ADDR32 = 1,IMAGE_REL_CEF_ADDR64 = 2,IMAGE_REL_CEF_ADDR32NB = 3,IMAGE_REL_CEF_SECTION = 4,IMAGE_REL_CEF_SECREL = 5,IMAGE_REL_CEF_TOKEN = 6,IMAGE_REL_CEE_ABSOLUTE = 0,IMAGE_REL_CEE_ADDR32 = 1,IMAGE_REL_CEE_ADDR64 = 2,IMAGE_REL_CEE_ADDR32NB = 3,IMAGE_REL_CEE_SECTION = 4,IMAGE_REL_CEE_SECREL = 5,IMAGE_REL_CEE_TOKEN = 6,IMAGE_REL_M32R_ABSOLUTE = 0,IMAGE_REL_M32R_ADDR32 = 1,IMAGE_REL_M32R_ADDR32NB = 2,IMAGE_REL_M32R_ADDR24 = 3,IMAGE_REL_M32R_GPREL16 = 4,IMAGE_REL_M32R_PCREL24 = 5,IMAGE_REL_M32R_PCREL16 = 6,IMAGE_REL_M32R_PCREL8 = 7,IMAGE_REL_M32R_REFHALF = 8,IMAGE_REL_M32R_REFHI = 9,IMAGE_REL_M32R_REFLO = 10,IMAGE_REL_M32R_PAIR = 11,IMAGE_REL_M32R_SECTION = 12,IMAGE_REL_M32R_SECREL32 = 13,IMAGE_REL_M32R_TOKEN = 14,IMAGE_REL_EBC_ABSOLUTE = 0,IMAGE_REL_EBC_ADDR32NB = 1,IMAGE_REL_EBC_REL32 = 2,IMAGE_REL_EBC_SECTION = 3,IMAGE_REL_EBC_SECREL = 4,};
enum MACRO_INACCESSIBLE {INACCESSIBLE_BOOT_DEVICE = 0x7B,};
enum MACRO_INCOMING_SMB {INCOMING_SMB_FLAGS2 = 61507,};
enum MACRO_INCONSISTENT {INCONSISTENT_IRP = 0x2A,};
enum MACRO_INITIAL_MODE {INITIAL_MODE = 0x0,};
enum MACRO_INSUFFICIENT {INSUFFICIENT_SYSTEM_MAP_REGS = 0x45,};
enum MACRO_INVALID_PORT {INVALID_PORT_RESERVATION_TOKEN = 0,};
enum MACRO_INVALID_WORK {INVALID_WORK_QUEUE_ITEM = 0x96,};
enum MACRO_IOCTL_BTHHFP {IOCTL_BTHHFP_GET_DEVICEOBJECT = 2228227,IOCTL_BTHHFP_DEVICE_GET_DESCRIPTOR = 2228627,IOCTL_BTHHFP_DEVICE_GET_VOLUMEPROPERTYVALUES = 2228631,IOCTL_BTHHFP_DEVICE_GET_KSNODETYPES = 2228231,IOCTL_BTHHFP_DEVICE_GET_CONTAINERID = 2228235,IOCTL_BTHHFP_DEVICE_REQUEST_CONNECT = 2228239,IOCTL_BTHHFP_DEVICE_REQUEST_DISCONNECT = 2228243,IOCTL_BTHHFP_DEVICE_GET_CONNECTION_STATUS_UPDATE = 2228247,IOCTL_BTHHFP_SPEAKER_SET_VOLUME = 2228251,IOCTL_BTHHFP_SPEAKER_GET_VOLUME_STATUS_UPDATE = 2228255,IOCTL_BTHHFP_MIC_SET_VOLUME = 2228259,IOCTL_BTHHFP_MIC_GET_VOLUME_STATUS_UPDATE = 2228263,IOCTL_BTHHFP_STREAM_OPEN = 2228267,IOCTL_BTHHFP_STREAM_CLOSE = 2228271,IOCTL_BTHHFP_STREAM_GET_STATUS_UPDATE = 2228275,};
enum MACRO_IOCTL_EHSTOR {IOCTL_EHSTOR_DEVICE_GET_AUTHZ_STATE = 0x2D1408,IOCTL_EHSTOR_DEVICE_SILO_COMMAND = 0x2D140C,IOCTL_EHSTOR_DEVICE_ENUMERATE_PDOS = 0x2D1410,IOCTL_EHSTOR_DEVICE_SET_AUTHZ_STATE = 0x2D1414,IOCTL_EHSTOR_DEVICE_QUERY_PROPERTIES = 0x2D1418,IOCTL_EHSTOR_DEVICE_GET_QUEUE_STATE = 0x2D141C,IOCTL_EHSTOR_DEVICE_SET_QUEUE_STATE = 0x2DD420,IOCTL_EHSTOR_DRIVER_REPORT_CAPABILITIES = 0x2DD440,IOCTL_EHSTOR_DRIVER_UPDATE_LBA_FILTER_TABLE = 0x2DD444,IOCTL_EHSTOR_DRIVER_PERFORM_AUTHZ = 0x2DD448,};
enum MACRO_IOCTL_IR_GET {IOCTL_IR_GET_EMITTERS = 257966088,IOCTL_IR_FLASH_RECEIVER = 257982476,IOCTL_IR_RESET_DEVICE = 257982480,IOCTL_IR_TRANSMIT = 257982485,};
enum MACRO_IOCTL_PCMCIA {IOCTL_PCMCIA_BASE = 4,IOCTL_GET_TUPLE_DATA = 274144,IOCTL_SOCKET_INFORMATION = 274160,IOCTL_PCMCIA_HIDE_DEVICE = 306952,IOCTL_PCMCIA_REVEAL_DEVICE = 306956,};
enum MACRO_IOCTL_SWENUM {IOCTL_SWENUM_INSTALL_INTERFACE = 0x2A0000,IOCTL_SWENUM_REMOVE_INTERFACE = 0x2A0004,IOCTL_SWENUM_GET_BUS_ID = 0x2A400B,};
enum MACRO_IPV4_MINIMUM {IPV4_MINIMUM_MTU = 576,};
enum MACRO_IPV6_VERSION {IPV6_VERSION = 0x60,IPV6_TRAFFIC_CLASS_MASK = 0xC00F,IPV6_ECN_MASK = 0x3000,IPV6_FLOW_LABEL_MASK = 0xFFFF0F00,};
enum MACRO_KERNEL_STACK {KERNEL_STACK_INPAGE_ERROR = 0x77,};
enum MACRO_KEYBOARD_LED {KEYBOARD_LED_INJECTED = 0x8000,KEYBOARD_SHADOW = 0x4000,KEYBOARD_KANA_LOCK_ON = 0x8,KEYBOARD_CAPS_LOCK_ON = 0x4,KEYBOARD_NUM_LOCK_ON = 0x2,KEYBOARD_SCROLL_LOCK_ON = 0x1,KEYBOARD_ERROR_VALUE_BASE = 0x2710,};
enum MACRO_KSDATAFORMAT {KSDATAFORMAT_BIT_TEMPORAL_COMPRESSION = 0,KSDATAFORMAT_TEMPORAL_COMPRESSION = 1,KSDATAFORMAT_BIT_ATTRIBUTES = 1,KSDATAFORMAT_ATTRIBUTES = 2,};
enum MACRO_LAST_SESSION {LAST_SESSION_EMPTY = 0x0,LAST_SESSION_INCOMPLETE = 0x1,LAST_SESSION_RESERVED_DAMAGED = 0x2,LAST_SESSION_COMPLETE = 0x3,};
enum MACRO_LINEBUSYMODE {LINEBUSYMODE_STATION = 0x1,LINEBUSYMODE_TRUNK = 0x2,LINEBUSYMODE_UNKNOWN = 0x4,LINEBUSYMODE_UNAVAIL = 0x8,};
enum MACRO_LINEDEVSTATE {LINEDEVSTATE_OTHER = 0x1,LINEDEVSTATE_RINGING = 0x2,LINEDEVSTATE_CONNECTED = 0x4,LINEDEVSTATE_DISCONNECTED = 0x8,LINEDEVSTATE_MSGWAITON = 0x10,LINEDEVSTATE_MSGWAITOFF = 0x20,LINEDEVSTATE_INSERVICE = 0x40,LINEDEVSTATE_OUTOFSERVICE = 0x80,LINEDEVSTATE_MAINTENANCE = 0x100,LINEDEVSTATE_OPEN = 0x200,LINEDEVSTATE_CLOSE = 0x400,LINEDEVSTATE_NUMCALLS = 0x800,LINEDEVSTATE_NUMCOMPLETIONS = 0x1000,LINEDEVSTATE_TERMINALS = 0x2000,LINEDEVSTATE_ROAMMODE = 0x4000,LINEDEVSTATE_BATTERY = 0x8000,LINEDEVSTATE_SIGNAL = 0x10000,LINEDEVSTATE_DEVSPECIFIC = 0x20000,LINEDEVSTATE_REINIT = 0x40000,LINEDEVSTATE_LOCK = 0x80000,};
enum MACRO_LINEPARKMODE {LINEPARKMODE_DIRECTED = 0x1,LINEPARKMODE_NONDIRECTED = 0x2,};
enum MACRO_LINEROAMMODE {LINEROAMMODE_UNKNOWN = 0x1,LINEROAMMODE_UNAVAIL = 0x2,LINEROAMMODE_HOME = 0x4,LINEROAMMODE_ROAMA = 0x8,LINEROAMMODE_ROAMB = 0x10,};
enum MACRO_LINETERMMODE {LINETERMMODE_BUTTONS = 0x1,LINETERMMODE_LAMPS = 0x2,LINETERMMODE_DISPLAY = 0x4,LINETERMMODE_RINGER = 0x8,LINETERMMODE_HOOKSWITCH = 0x10,LINETERMMODE_MEDIATOLINE = 0x20,LINETERMMODE_MEDIAFROMLINE = 0x40,LINETERMMODE_MEDIABIDIRECT = 0x80,};
enum MACRO_LINETONEMODE {LINETONEMODE_CUSTOM = 0x1,LINETONEMODE_RINGBACK = 0x2,LINETONEMODE_BUSY = 0x4,LINETONEMODE_BEEP = 0x8,LINETONEMODE_BILLING = 0x10,};
enum MACRO_LINE_NEWCALL {LINE_NEWCALL = 500,LINE_CALLDEVSPECIFIC = 501,};
enum MACRO_LOCAL_X2APIC {LOCAL_X2APIC_NMI_SOURCE = 10,};
enum MACRO_LOW_PRIORITY {LOW_PRIORITY = 0,LOW_REALTIME_PRIORITY = 16,};
enum MACRO_MANUFACTURER {MANUFACTURER_NAME_LENGTH = 64,DEVICE_IDENTIFIER_LENGTH = 64,DRIVER_NAME_LENGTH = 32,};
enum MACRO_MAXIMUM_ATTR {MAXIMUM_ATTR_STRING_LENGTH = 32,MAXIMUM_SMARTCARD_READERS = 10,};
enum MACRO_MAXIMUM_PROC {MAXIMUM_PROC_PER_GROUP = 32,MAXIMUM_PROCESSORS = 32,};
enum MACRO_MAXIMUM_WAIT {MAXIMUM_WAIT_OBJECTS = 64,MAXIMUM_SUSPEND_COUNT = 127,};
enum MACRO_MEDIA_CHANGE {MEDIA_CHANGE_DEFAULT_TIME = 1,MEDIA_CHANGE_TIMEOUT_TIME = 300,};
enum MACRO_MEMORY_IMAGE {MEMORY_IMAGE_CORRUPT = 0xA2,};
enum MACRO_MINIPORT_DSM {MINIPORT_DSM_NOTIFICATION_VERSION_1 = 1,MINIPORT_DSM_NOTIFICATION_VERSION = 1,MINIPORT_DSM_PROFILE_UNKNOWN = 0,MINIPORT_DSM_PROFILE_PAGE_FILE = 1,MINIPORT_DSM_PROFILE_HIBERNATION_FILE = 2,MINIPORT_DSM_PROFILE_CRASHDUMP_FILE = 3,MINIPORT_DSM_NOTIFY_FLAG_BEGIN = 1,MINIPORT_DSM_NOTIFY_FLAG_END = 2,};
enum MACRO_MISSING_EXIT {MISSING_EXIT_POINT_CREATED = 0xC00037E2,MISSING_EXIT_POINT_NOT_CREATED = 0xC00037E3,MISSING_VOLUME_CREATED = 0xC00037E4,MISSING_VOLUME_NOT_CREATED = 0xC00037E5,};
enum MACRO_MM_CHROMATIC {MM_CHROMATIC_M1 = 0x1,MM_CHROMATIC_M1_WAVEIN = 0x2,MM_CHROMATIC_M1_WAVEOUT = 0x3,MM_CHROMATIC_M1_FMSYNTH = 0x4,MM_CHROMATIC_M1_MIXER = 0x5,MM_CHROMATIC_M1_AUX = 0x6,MM_CHROMATIC_M1_AUX_CD = 0x7,MM_CHROMATIC_M1_MIDIIN = 0x8,MM_CHROMATIC_M1_MIDIOUT = 0x9,MM_CHROMATIC_M1_WTSYNTH = 0x10,MM_CHROMATIC_M1_MPEGWAVEIN = 0x11,MM_CHROMATIC_M1_MPEGWAVEOUT = 0x12,MM_CHROMATIC_M2 = 0x13,MM_CHROMATIC_M2_WAVEIN = 0x14,MM_CHROMATIC_M2_WAVEOUT = 0x15,MM_CHROMATIC_M2_FMSYNTH = 0x16,MM_CHROMATIC_M2_MIXER = 0x17,MM_CHROMATIC_M2_AUX = 0x18,MM_CHROMATIC_M2_AUX_CD = 0x19,MM_CHROMATIC_M2_MIDIIN = 0x20,MM_CHROMATIC_M2_MIDIOUT = 0x21,MM_CHROMATIC_M2_WTSYNTH = 0x22,MM_CHROMATIC_M2_MPEGWAVEIN = 0x23,MM_CHROMATIC_M2_MPEGWAVEOUT = 0x24,MM_VIENNASYS_TSP_WAVE_DRIVER = 0x1,MM_CONNECTIX_VIDEC_CODEC = 0x1,MM_GADGETLABS_WAVE44_WAVEIN = 0x1,MM_GADGETLABS_WAVE44_WAVEOUT = 0x2,MM_GADGETLABS_WAVE42_WAVEIN = 0x3,MM_GADGETLABS_WAVE42_WAVEOUT = 0x4,MM_GADGETLABS_WAVE4_MIDIIN = 0x5,MM_GADGETLABS_WAVE4_MIDIOUT = 0x6,MM_FRONTIER_WAVECENTER_MIDIIN = 0x1,MM_FRONTIER_WAVECENTER_MIDIOUT = 0x2,MM_FRONTIER_WAVECENTER_WAVEIN = 0x3,MM_FRONTIER_WAVECENTER_WAVEOUT = 0x4,MM_VIONA_QVINPCI_MIXER = 0x1,MM_VIONA_QVINPCI_WAVEIN = 0x2,MM_VIONAQVINPCI_WAVEOUT = 0x3,MM_VIONA_BUSTER_MIXER = 0x4,MM_VIONA_CINEMASTER_MIXER = 0x5,MM_VIONA_CONCERTO_MIXER = 0x6,MM_CASIO_WP150_MIDIOUT = 0x1,MM_CASIO_WP150_MIDIIN = 0x2,MM_CASIO_LSG_MIDIOUT = 0x3,MM_DIMD_PLATFORM = 0x0,MM_DIMD_DIRSOUND = 0x1,MM_DIMD_VIRTMPU = 0x2,MM_DIMD_VIRTSB = 0x3,MM_DIMD_VIRTJOY = 0x4,MM_DIMD_WAVEIN = 0x5,MM_DIMD_WAVEOUT = 0x6,MM_DIMD_MIDIIN = 0x7,MM_DIMD_MIDIOUT = 0x8,MM_DIMD_AUX_LINE = 0x9,MM_DIMD_MIXER = 0xA,MM_DIMD_WSS_WAVEIN = 0xE,MM_DIMD_WSS_WAVEOUT = 0xF,MM_DIMD_WSS_MIXER = 0x11,MM_DIMD_WSS_AUX = 0x15,MM_DIMD_WSS_SYNTH = 0x4C,MM_S3_WAVEOUT = 0x1,MM_S3_WAVEIN = 0x2,MM_S3_MIDIOUT = 0x3,MM_S3_MIDIIN = 0x4,MM_S3_FMSYNTH = 0x5,MM_S3_MIXER = 0x6,MM_S3_AUX = 0x7,MM_VKC_MPU401_MIDIIN = 0x100,MM_VKC_SERIAL_MIDIIN = 0x101,MM_VKC_MPU401_MIDIOUT = 0x200,MM_VKC_SERIAL_MIDIOUT = 0x201,MM_ZEFIRO_ZA2 = 0x2,MM_FHGIIS_MPEGLAYER3_DECODE = 0x9,MM_FHGIIS_MPEGLAYER3 = 0xA,MM_FHGIIS_MPEGLAYER3_LITE = 0xA,MM_FHGIIS_MPEGLAYER3_BASIC = 0xB,MM_FHGIIS_MPEGLAYER3_ADVANCED = 0xC,MM_FHGIIS_MPEGLAYER3_PROFESSIONAL = 0xD,MM_FHGIIS_MPEGLAYER3_ADVANCEDPLUS = 0xE,MM_QUICKNET_PJWAVEIN = 0x1,MM_QUICKNET_PJWAVEOUT = 0x2,MM_SICRESOURCE_SSO3D = 0x2,MM_SICRESOURCE_SSOW3DI = 0x3,MM_NEOMAGIC_SYNTH = 0x1,MM_NEOMAGIC_WAVEOUT = 0x2,MM_NEOMAGIC_WAVEIN = 0x3,MM_NEOMAGIC_MIDIOUT = 0x4,MM_NEOMAGIC_MIDIIN = 0x5,MM_NEOMAGIC_AUX = 0x6,MM_NEOMAGIC_MW3DX_WAVEOUT = 0xA,MM_NEOMAGIC_MW3DX_WAVEIN = 0xB,MM_NEOMAGIC_MW3DX_MIDIOUT = 0xC,MM_NEOMAGIC_MW3DX_MIDIIN = 0xD,MM_NEOMAGIC_MW3DX_FMSYNTH = 0xE,MM_NEOMAGIC_MW3DX_GMSYNTH = 0xF,MM_NEOMAGIC_MW3DX_MIXER = 0x10,MM_NEOMAGIC_MW3DX_AUX = 0x11,MM_NEOMAGIC_MWAVE_WAVEOUT = 0x14,MM_NEOMAGIC_MWAVE_WAVEIN = 0x15,MM_NEOMAGIC_MWAVE_MIDIOUT = 0x16,MM_NEOMAGIC_MWAVE_MIDIIN = 0x17,MM_NEOMAGIC_MWAVE_MIXER = 0x18,MM_NEOMAGIC_MWAVE_AUX = 0x19,MM_MERGING_MPEGL3 = 0x1,MM_XIRLINK_VISIONLINK = 0x1,MM_OTI_611WAVEIN = 0x5,MM_OTI_611WAVEOUT = 0x6,MM_OTI_611MIXER = 0x7,MM_OTI_611MIDIN = 0x12,MM_OTI_611MIDIOUT = 0x13,MM_AUREAL_AU8820 = 0x10,MM_AU8820_SYNTH = 0x11,MM_AU8820_WAVEOUT = 0x12,MM_AU8820_WAVEIN = 0x13,MM_AU8820_MIXER = 0x14,MM_AU8820_AUX = 0x15,MM_AU8820_MIDIOUT = 0x16,MM_AU8820_MIDIIN = 0x17,MM_AUREAL_AU8830 = 0x20,MM_AU8830_SYNTH = 0x21,MM_AU8830_WAVEOUT = 0x22,MM_AU8830_WAVEIN = 0x23,MM_AU8830_MIXER = 0x24,MM_AU8830_AUX = 0x25,MM_AU8830_MIDIOUT = 0x26,MM_AU8830_MIDIIN = 0x27,MM_VIVO_AUDIO_CODEC = 0x1,MM_SHARP_MDC_MIDI_SYNTH = 0x1,MM_SHARP_MDC_MIDI_IN = 0x2,MM_SHARP_MDC_MIDI_OUT = 0x3,MM_SHARP_MDC_WAVE_IN = 0x4,MM_SHARP_MDC_WAVE_OUT = 0x5,MM_SHARP_MDC_AUX = 0x6,MM_SHARP_MDC_MIXER = 0xA,MM_SHARP_MDC_AUX_MASTER = 0x64,MM_SHARP_MDC_AUX_BASS = 0x65,MM_SHARP_MDC_AUX_TREBLE = 0x66,MM_SHARP_MDC_AUX_MIDI_VOL = 0x67,MM_SHARP_MDC_AUX_WAVE_VOL = 0x68,MM_SHARP_MDC_AUX_WAVE_RVB = 0x69,MM_SHARP_MDC_AUX_WAVE_CHR = 0x6A,MM_SHARP_MDC_AUX_VOL = 0x6B,MM_SHARP_MDC_AUX_RVB = 0x6C,MM_SHARP_MDC_AUX_CHR = 0x6D,MM_LUCENT_ACM_G723 = 0x0,MM_ATT_G729A = 0x1,MM_MARIAN_ARC44WAVEIN = 0x1,MM_MARIAN_ARC44WAVEOUT = 0x2,MM_MARIAN_PRODIF24WAVEIN = 0x3,MM_MARIAN_PRODIF24WAVEOUT = 0x4,MM_MARIAN_ARC88WAVEIN = 0x5,MM_MARIAN_ARC88WAVEOUT = 0x6,MM_BCB_NETBOARD_10 = 0x1,MM_BCB_TT75_10 = 0x2,MM_MOTIONPIXELS_MVI2 = 0x1,MM_QDESIGN_ACM_MPEG = 0x1,MM_QDESIGN_ACM_QDESIGN_MUSIC = 0x2,MM_NMP_CCP_WAVEIN = 0x1,MM_NMP_CCP_WAVEOUT = 0x2,MM_NMP_ACM_AMR = 0xA,MM_DF_ACM_G726 = 0x1,MM_DF_ACM_GSM610 = 0x2,MM_BERCOS_WAVEIN = 0x1,MM_BERCOS_MIXER = 0x2,MM_BERCOS_WAVEOUT = 0x3,MM_ONLIVE_MPCODEC = 0x1,MM_PHONET_PP_WAVEOUT = 0x1,MM_PHONET_PP_WAVEIN = 0x2,MM_PHONET_PP_MIXER = 0x3,MM_FTR_ENCODER_WAVEIN = 0x1,MM_FTR_ACM = 0x2,MM_ENET_T2000_LINEIN = 0x1,MM_ENET_T2000_LINEOUT = 0x2,MM_ENET_T2000_HANDSETIN = 0x3,MM_ENET_T2000_HANDSETOUT = 0x4,MM_EMAGIC_UNITOR8 = 0x1,MM_SIPROLAB_ACELPNET = 0x1,MM_DICTAPHONE_G726 = 0x1,MM_RZS_ACM_TUBGSM = 0x1,MM_EES_PCMIDI14 = 0x1,MM_EES_PCMIDI14_IN = 0x2,MM_EES_PCMIDI14_OUT1 = 0x3,MM_EES_PCMIDI14_OUT2 = 0x4,MM_EES_PCMIDI14_OUT3 = 0x5,MM_EES_PCMIDI14_OUT4 = 0x6,MM_HAFTMANN_LPTDAC2 = 0x1,MM_LUCID_PCI24WAVEIN = 0x1,MM_LUCID_PCI24WAVEOUT = 0x2,MM_HEADSPACE_HAESYNTH = 0x1,MM_HEADSPACE_HAEWAVEOUT = 0x2,MM_HEADSPACE_HAEWAVEIN = 0x3,MM_HEADSPACE_HAEMIXER = 0x4,MM_UNISYS_ACM_NAP = 0x1,MM_LUMINOSITI_SCWAVEIN = 0x1,MM_LUMINOSITI_SCWAVEOUT = 0x2,MM_LUMINOSITI_SCWAVEMIX = 0x3,MM_ACTIVEVOICE_ACM_VOXADPCM = 0x1,MM_DTS_DS = 0x1,MM_SOFTLAB_NSK_FRW_WAVEIN = 0x1,MM_SOFTLAB_NSK_FRW_WAVEOUT = 0x2,MM_SOFTLAB_NSK_FRW_MIXER = 0x3,MM_SOFTLAB_NSK_FRW_AUX = 0x4,MM_FORTEMEDIA_WAVEIN = 0x1,MM_FORTEMEDIA_WAVEOUT = 0x2,MM_FORTEMEDIA_FMSYNC = 0x3,MM_FORTEMEDIA_MIXER = 0x4,MM_FORTEMEDIA_AUX = 0x5,MM_SONORUS_STUDIO = 0x1,MM_I_LINK_VOICE_CODER = 0x1,MM_SELSIUS_SYSTEMS_RTPWAVEOUT = 0x1,MM_SELSIUS_SYSTEMS_RTPWAVEIN = 0x2,MM_ADMOS_FM_SYNTH = 0x1,MM_ADMOS_QS3AMIDIOUT = 0x2,MM_ADMOS_QS3AMIDIIN = 0x3,MM_ADMOS_QS3AWAVEOUT = 0x4,MM_ADMOS_QS3AWAVEIN = 0x5,MM_LEXICON_STUDIO_WAVE_OUT = 0x1,MM_LEXICON_STUDIO_WAVE_IN = 0x2,MM_SGI_320_WAVEIN = 0x1,MM_SGI_320_WAVEOUT = 0x2,MM_SGI_320_MIXER = 0x3,MM_SGI_540_WAVEIN = 0x4,MM_SGI_540_WAVEOUT = 0x5,MM_SGI_540_MIXER = 0x6,MM_SGI_RAD_ADATMONO1_WAVEIN = 0x7,MM_SGI_RAD_ADATMONO2_WAVEIN = 0x8,MM_SGI_RAD_ADATMONO3_WAVEIN = 0x9,MM_SGI_RAD_ADATMONO4_WAVEIN = 0xA,MM_SGI_RAD_ADATMONO5_WAVEIN = 0xB,MM_SGI_RAD_ADATMONO6_WAVEIN = 0xC,MM_SGI_RAD_ADATMONO7_WAVEIN = 0xD,MM_SGI_RAD_ADATMONO8_WAVEIN = 0xE,MM_SGI_RAD_ADATSTEREO12_WAVEIN = 0xF,MM_SGI_RAD_ADATSTEREO34_WAVEIN = 0x10,MM_SGI_RAD_ADATSTEREO56_WAVEIN = 0x11,MM_SGI_RAD_ADATSTEREO78_WAVEIN = 0x12,MM_SGI_RAD_ADAT8CHAN_WAVEIN = 0x13,MM_SGI_RAD_ADATMONO1_WAVEOUT = 0x14,MM_SGI_RAD_ADATMONO2_WAVEOUT = 0x15,MM_SGI_RAD_ADATMONO3_WAVEOUT = 0x16,MM_SGI_RAD_ADATMONO4_WAVEOUT = 0x17,MM_SGI_RAD_ADATMONO5_WAVEOUT = 0x18,MM_SGI_RAD_ADATMONO6_WAVEOUT = 0x19,MM_SGI_RAD_ADATMONO7_WAVEOUT = 0x1A,MM_SGI_RAD_ADATMONO8_WAVEOUT = 0x1B,MM_SGI_RAD_ADATSTEREO12_WAVEOUT = 0x1C,MM_SGI_RAD_ADATSTEREO32_WAVEOUT = 0x1D,MM_SGI_RAD_ADATSTEREO56_WAVEOUT = 0x1E,MM_SGI_RAD_ADATSTEREO78_WAVEOUT = 0x1F,MM_SGI_RAD_ADAT8CHAN_WAVEOUT = 0x20,MM_SGI_RAD_AESMONO1_WAVEIN = 0x21,MM_SGI_RAD_AESMONO2_WAVEIN = 0x22,MM_SGI_RAD_AESSTEREO_WAVEIN = 0x23,MM_SGI_RAD_AESMONO1_WAVEOUT = 0x24,MM_SGI_RAD_AESMONO2_WAVEOUT = 0x25,MM_SGI_RAD_AESSTEREO_WAVEOUT = 0x26,MM_IPI_ACM_HSX = 0x1,MM_IPI_ACM_RPELP = 0x2,MM_IPI_WF_ASSS = 0x3,MM_IPI_AT_WAVEOUT = 0x4,MM_IPI_AT_WAVEIN = 0x5,MM_IPI_AT_MIXER = 0x6,MM_ICE_WAVEOUT = 0x1,MM_ICE_WAVEIN = 0x2,MM_ICE_MTWAVEOUT = 0x3,MM_ICE_MTWAVEIN = 0x4,MM_ICE_MIDIOUT1 = 0x5,MM_ICE_MIDIIN1 = 0x6,MM_ICE_MIDIOUT2 = 0x7,MM_ICE_MIDIIN2 = 0x8,MM_ICE_SYNTH = 0x9,MM_ICE_MIXER = 0xA,MM_ICE_AUX = 0xB,MM_VQST_VQC1 = 0x1,MM_VQST_VQC2 = 0x2,MM_ETEK_KWIKMIDI_MIDIIN = 0x1,MM_ETEK_KWIKMIDI_MIDIOUT = 0x2,MM_INTERNET_SSW_MIDIOUT = 0xA,MM_INTERNET_SSW_MIDIIN = 0xB,MM_INTERNET_SSW_WAVEOUT = 0xC,MM_INTERNET_SSW_WAVEIN = 0xD,MM_SONY_ACM_SCX = 0x1,MM_UH_ACM_ADPCM = 0x1,MM_SYDEC_NV_WAVEIN = 0x1,MM_SYDEC_NV_WAVEOUT = 0x2,MM_FLEXION_X300_WAVEIN = 0x1,MM_FLEXION_X300_WAVEOUT = 0x2,MM_VIA_WAVEOUT = 0x1,MM_VIA_WAVEIN = 0x2,MM_VIA_MIXER = 0x3,MM_VIA_AUX = 0x4,MM_VIA_MPU401_MIDIOUT = 0x5,MM_VIA_MPU401_MIDIIN = 0x6,MM_VIA_SWFM_SYNTH = 0x7,MM_VIA_WDM_WAVEOUT = 0x8,MM_VIA_WDM_WAVEIN = 0x9,MM_VIA_WDM_MIXER = 0xA,MM_VIA_WDM_MPU401_MIDIOUT = 0xB,MM_VIA_WDM_MPU401_MIDIIN = 0xC,MM_MICRONAS_SC4 = 0x1,MM_MICRONAS_CLP833 = 0x2,MM_HP_WAVEOUT = 0x1,MM_HP_WAVEIN = 0x2,MM_QUICKAUDIO_MINIMIDI = 0x1,MM_QUICKAUDIO_MAXIMIDI = 0x2,MM_ICCC_UNA3_WAVEIN = 0x1,MM_ICCC_UNA3_WAVEOUT = 0x2,MM_ICCC_UNA3_AUX = 0x3,MM_ICCC_UNA3_MIXER = 0x4,MM_3COM_CB_MIXER = 0x1,MM_3COM_CB_WAVEIN = 0x2,MM_3COM_CB_WAVEOUT = 0x3,MM_MINDMAKER_GC_WAVEIN = 0x1,MM_MINDMAKER_GC_WAVEOUT = 0x2,MM_MINDMAKER_GC_MIXER = 0x3,MM_TELEKOL_WAVEOUT = 0x1,MM_TELEKOL_WAVEIN = 0x2,MM_ALGOVISION_VB80WAVEOUT = 0x1,MM_ALGOVISION_VB80WAVEIN = 0x2,MM_ALGOVISION_VB80MIXER = 0x3,MM_ALGOVISION_VB80AUX = 0x4,MM_ALGOVISION_VB80AUX2 = 0x5,};
enum MACRO_MM_MICROSOFT {MM_MICROSOFT = 1,MM_CREATIVE = 2,MM_MEDIAVISION = 3,MM_FUJITSU = 4,MM_PRAGMATRAX = 5,MM_CYRIX = 6,MM_PHILIPS_SPEECH_PROCESSING = 7,MM_NETXL = 8,MM_ZYXEL = 9,MM_BECUBED = 10,MM_AARDVARK = 11,MM_BINTEC = 12,MM_HEWLETT_PACKARD = 13,MM_ACULAB = 14,MM_FAITH = 15,MM_MITEL = 16,MM_QUANTUM3D = 17,MM_SNI = 18,MM_EMU = 19,MM_ARTISOFT = 20,MM_TURTLE_BEACH = 21,MM_IBM = 22,MM_VOCALTEC = 23,MM_ROLAND = 24,MM_DSP_SOLUTIONS = 25,MM_NEC = 26,MM_ATI = 27,MM_WANGLABS = 28,MM_TANDY = 29,MM_VOYETRA = 30,MM_ANTEX = 31,MM_ICL_PS = 32,MM_INTEL = 33,MM_GRAVIS = 34,MM_VAL = 35,MM_INTERACTIVE = 36,MM_YAMAHA = 37,MM_EVEREX = 38,MM_ECHO = 39,MM_SIERRA = 40,MM_CAT = 41,MM_APPS = 42,MM_DSP_GROUP = 43,MM_MELABS = 44,MM_COMPUTER_FRIENDS = 45,MM_ESS = 46,MM_AUDIOFILE = 47,MM_MOTOROLA = 48,MM_CANOPUS = 49,MM_EPSON = 50,MM_TRUEVISION = 51,MM_AZTECH = 52,MM_VIDEOLOGIC = 53,MM_SCALACS = 54,MM_KORG = 55,MM_APT = 56,MM_ICS = 57,MM_ITERATEDSYS = 58,MM_METHEUS = 59,MM_LOGITECH = 60,MM_WINNOV = 61,MM_NCR = 62,MM_EXAN = 63,MM_AST = 64,MM_WILLOWPOND = 65,MM_SONICFOUNDRY = 66,MM_VITEC = 67,MM_MOSCOM = 68,MM_SILICONSOFT = 69,MM_TERRATEC = 70,MM_MEDIASONIC = 71,MM_SANYO = 72,MM_SUPERMAC = 73,MM_AUDIOPT = 74,MM_NOGATECH = 75,MM_SPEECHCOMP = 76,MM_AHEAD = 77,MM_DOLBY = 78,MM_OKI = 79,MM_AURAVISION = 80,MM_OLIVETTI = 81,MM_IOMAGIC = 82,MM_MATSUSHITA = 83,MM_CONTROLRES = 84,MM_XEBEC = 85,MM_NEWMEDIA = 86,MM_NMS = 87,MM_LYRRUS = 88,MM_COMPUSIC = 89,MM_OPTI = 90,MM_ADLACC = 91,MM_COMPAQ = 92,MM_DIALOGIC = 93,MM_INSOFT = 94,MM_MPTUS = 95,MM_WEITEK = 96,MM_LERNOUT_AND_HAUSPIE = 97,MM_QCIAR = 98,MM_APPLE = 99,MM_DIGITAL = 100,MM_MOTU = 101,MM_WORKBIT = 102,MM_OSITECH = 103,MM_MIRO = 104,MM_CIRRUSLOGIC = 105,MM_ISOLUTION = 106,MM_HORIZONS = 107,MM_CONCEPTS = 108,MM_VTG = 109,MM_RADIUS = 110,MM_ROCKWELL = 111,MM_XYZ = 112,MM_OPCODE = 113,MM_VOXWARE = 114,MM_NORTHERN_TELECOM = 115,MM_APICOM = 116,MM_GRANDE = 117,MM_ADDX = 118,MM_WILDCAT = 119,MM_RHETOREX = 120,MM_BROOKTREE = 121,MM_ENSONIQ = 125,MM_FAST = 126,MM_NVIDIA = 127,MM_OKSORI = 128,MM_DIACOUSTICS = 129,MM_GULBRANSEN = 130,MM_KAY_ELEMETRICS = 131,MM_CRYSTAL = 132,MM_SPLASH_STUDIOS = 133,MM_QUARTERDECK = 134,MM_TDK = 135,MM_DIGITAL_AUDIO_LABS = 136,MM_SEERSYS = 137,MM_PICTURETEL = 138,MM_ATT_MICROELECTRONICS = 139,MM_OSPREY = 140,MM_MEDIATRIX = 141,MM_SOUNDESIGNS = 142,MM_ALDIGITAL = 143,MM_SPECTRUM_SIGNAL_PROCESSING = 144,MM_ECS = 145,MM_AMD = 146,MM_COREDYNAMICS = 147,MM_CANAM = 148,MM_SOFTSOUND = 149,MM_NORRIS = 150,MM_DDD = 151,MM_EUPHONICS = 152,MM_PRECEPT = 153,MM_CRYSTAL_NET = 154,MM_CHROMATIC = 155,MM_VOICEINFO = 156,MM_VIENNASYS = 157,MM_CONNECTIX = 158,MM_GADGETLABS = 159,MM_FRONTIER = 160,MM_VIONA = 161,MM_CASIO = 162,MM_DIAMONDMM = 163,MM_S3 = 164,MM_DVISION = 165,MM_NETSCAPE = 166,MM_SOUNDSPACE = 167,MM_VANKOEVERING = 168,MM_QTEAM = 169,MM_ZEFIRO = 170,MM_STUDER = 171,MM_FRAUNHOFER_IIS = 172,MM_QUICKNET = 173,MM_ALARIS = 174,MM_SICRESOURCE = 175,MM_NEOMAGIC = 176,MM_MERGING_TECHNOLOGIES = 177,MM_XIRLINK = 178,MM_COLORGRAPH = 179,MM_OTI = 180,MM_AUREAL = 181,MM_VIVO = 182,MM_SHARP = 183,MM_LUCENT = 184,MM_ATT = 185,MM_SUNCOM = 186,MM_SORVIS = 187,MM_INVISION = 188,MM_BERKOM = 189,MM_MARIAN = 190,MM_DPSINC = 191,MM_BCB = 192,MM_MOTIONPIXELS = 193,MM_QDESIGN = 194,MM_NMP = 195,MM_DATAFUSION = 196,MM_DUCK = 197,MM_FTR = 198,MM_BERCOS = 199,MM_ONLIVE = 200,MM_SIEMENS_SBC = 201,MM_TERALOGIC = 202,MM_PHONET = 203,MM_WINBOND = 204,MM_VIRTUALMUSIC = 205,MM_ENET = 206,MM_GUILLEMOT = 207,MM_EMAGIC = 208,MM_MWM = 209,MM_PACIFICRESEARCH = 210,MM_SIPROLAB = 211,MM_LYNX = 212,MM_SPECTRUM_PRODUCTIONS = 213,MM_DICTAPHONE = 214,MM_QUALCOMM = 215,MM_RZS = 216,MM_AUDIOSCIENCE = 217,MM_PINNACLE = 218,MM_EES = 219,MM_HAFTMANN = 220,MM_LUCID = 221,MM_HEADSPACE = 222,MM_UNISYS = 223,MM_LUMINOSITI = 224,MM_ACTIVEVOICE = 225,MM_DTS = 226,MM_DIGIGRAM = 227,MM_SOFTLAB_NSK = 228,MM_FORTEMEDIA = 229,MM_SONORUS = 230,MM_ARRAY = 231,MM_DATARAN = 232,MM_I_LINK = 233,MM_SELSIUS_SYSTEMS = 234,MM_ADMOS = 235,MM_LEXICON = 236,MM_SGI = 237,MM_IPI = 238,MM_ICE = 239,MM_VQST = 240,MM_ETEK = 241,MM_CS = 242,MM_ALESIS = 243,MM_INTERNET = 244,MM_SONY = 245,MM_HYPERACTIVE = 246,MM_UHER_INFORMATIC = 247,MM_SYDEC_NV = 248,MM_FLEXION = 249,MM_VIA = 250,MM_MICRONAS = 251,MM_ANALOGDEVICES = 252,MM_HP = 253,MM_MATROX_DIV = 254,MM_QUICKAUDIO = 255,MM_YOUCOM = 256,MM_RICHMOND = 257,MM_IODD = 258,MM_ICCC = 259,MM_3COM = 260,MM_MALDEN = 261,MM_3DFX = 262,MM_MINDMAKER = 263,MM_TELEKOL = 264,MM_ST_MICROELECTRONICS = 265,MM_ALGOVISION = 266,MM_UNMAPPED = 65535,MM_PID_UNMAPPED = 65535,MM_MIDI_MAPPER = 1,MM_WAVE_MAPPER = 2,MM_SNDBLST_MIDIOUT = 3,MM_SNDBLST_MIDIIN = 4,MM_SNDBLST_SYNTH = 5,MM_SNDBLST_WAVEOUT = 6,MM_SNDBLST_WAVEIN = 7,MM_ADLIB = 9,MM_MPU401_MIDIOUT = 10,MM_MPU401_MIDIIN = 11,MM_PC_JOYSTICK = 12,MM_PCSPEAKER_WAVEOUT = 13,MM_MSFT_WSS_WAVEIN = 14,MM_MSFT_WSS_WAVEOUT = 15,MM_MSFT_WSS_FMSYNTH_STEREO = 16,MM_MSFT_WSS_MIXER = 17,MM_MSFT_WSS_OEM_WAVEIN = 18,MM_MSFT_WSS_OEM_WAVEOUT = 19,MM_MSFT_WSS_OEM_FMSYNTH_STEREO = 20,MM_MSFT_WSS_AUX = 21,MM_MSFT_WSS_OEM_AUX = 22,MM_MSFT_GENERIC_WAVEIN = 23,MM_MSFT_GENERIC_WAVEOUT = 24,MM_MSFT_GENERIC_MIDIIN = 25,MM_MSFT_GENERIC_MIDIOUT = 26,MM_MSFT_GENERIC_MIDISYNTH = 27,MM_MSFT_GENERIC_AUX_LINE = 28,MM_MSFT_GENERIC_AUX_MIC = 29,MM_MSFT_GENERIC_AUX_CD = 30,MM_MSFT_WSS_OEM_MIXER = 31,MM_MSFT_MSACM = 32,MM_MSFT_ACM_MSADPCM = 33,MM_MSFT_ACM_IMAADPCM = 34,MM_MSFT_ACM_MSFILTER = 35,MM_MSFT_ACM_GSM610 = 36,MM_MSFT_ACM_G711 = 37,MM_MSFT_ACM_PCM = 38,MM_WSS_SB16_WAVEIN = 39,MM_WSS_SB16_WAVEOUT = 40,MM_WSS_SB16_MIDIIN = 41,MM_WSS_SB16_MIDIOUT = 42,MM_WSS_SB16_SYNTH = 43,MM_WSS_SB16_AUX_LINE = 44,MM_WSS_SB16_AUX_CD = 45,MM_WSS_SB16_MIXER = 46,MM_WSS_SBPRO_WAVEIN = 47,MM_WSS_SBPRO_WAVEOUT = 48,MM_WSS_SBPRO_MIDIIN = 49,MM_WSS_SBPRO_MIDIOUT = 50,MM_WSS_SBPRO_SYNTH = 51,MM_WSS_SBPRO_AUX_LINE = 52,MM_WSS_SBPRO_AUX_CD = 53,MM_WSS_SBPRO_MIXER = 54,MM_MSFT_WSS_NT_WAVEIN = 55,MM_MSFT_WSS_NT_WAVEOUT = 56,MM_MSFT_WSS_NT_FMSYNTH_STEREO = 57,MM_MSFT_WSS_NT_MIXER = 58,MM_MSFT_WSS_NT_AUX = 59,MM_MSFT_SB16_WAVEIN = 60,MM_MSFT_SB16_WAVEOUT = 61,MM_MSFT_SB16_MIDIIN = 62,MM_MSFT_SB16_MIDIOUT = 63,MM_MSFT_SB16_SYNTH = 64,MM_MSFT_SB16_AUX_LINE = 65,MM_MSFT_SB16_AUX_CD = 66,MM_MSFT_SB16_MIXER = 67,MM_MSFT_SBPRO_WAVEIN = 68,MM_MSFT_SBPRO_WAVEOUT = 69,MM_MSFT_SBPRO_MIDIIN = 70,MM_MSFT_SBPRO_MIDIOUT = 71,MM_MSFT_SBPRO_SYNTH = 72,MM_MSFT_SBPRO_AUX_LINE = 73,MM_MSFT_SBPRO_AUX_CD = 74,MM_MSFT_SBPRO_MIXER = 75,MM_MSFT_MSOPL_SYNTH = 76,MM_MSFT_VMDMS_LINE_WAVEIN = 80,MM_MSFT_VMDMS_LINE_WAVEOUT = 81,MM_MSFT_VMDMS_HANDSET_WAVEIN = 82,MM_MSFT_VMDMS_HANDSET_WAVEOUT = 83,MM_MSFT_VMDMW_LINE_WAVEIN = 84,MM_MSFT_VMDMW_LINE_WAVEOUT = 85,MM_MSFT_VMDMW_HANDSET_WAVEIN = 86,MM_MSFT_VMDMW_HANDSET_WAVEOUT = 87,MM_MSFT_VMDMW_MIXER = 88,MM_MSFT_VMDM_GAME_WAVEOUT = 89,MM_MSFT_VMDM_GAME_WAVEIN = 90,MM_MSFT_ACM_MSNAUDIO = 91,MM_MSFT_ACM_MSG723 = 92,MM_MSFT_ACM_MSRT24 = 93,MM_MSFT_WDMAUDIO_WAVEOUT = 100,MM_MSFT_WDMAUDIO_WAVEIN = 101,MM_MSFT_WDMAUDIO_MIDIOUT = 102,MM_MSFT_WDMAUDIO_MIDIIN = 103,MM_MSFT_WDMAUDIO_MIXER = 104,MM_MSFT_WDMAUDIO_AUX = 105,MM_CREATIVE_SB15_WAVEIN = 1,MM_CREATIVE_SB20_WAVEIN = 2,MM_CREATIVE_SBPRO_WAVEIN = 3,MM_CREATIVE_SBP16_WAVEIN = 4,MM_CREATIVE_PHNBLST_WAVEIN = 5,MM_CREATIVE_SB15_WAVEOUT = 101,MM_CREATIVE_SB20_WAVEOUT = 102,MM_CREATIVE_SBPRO_WAVEOUT = 103,MM_CREATIVE_SBP16_WAVEOUT = 104,MM_CREATIVE_PHNBLST_WAVEOUT = 105,MM_CREATIVE_MIDIOUT = 201,MM_CREATIVE_MIDIIN = 202,MM_CREATIVE_FMSYNTH_MONO = 301,MM_CREATIVE_FMSYNTH_STEREO = 302,MM_CREATIVE_MIDI_AWE32 = 303,MM_CREATIVE_AUX_CD = 401,MM_CREATIVE_AUX_LINE = 402,MM_CREATIVE_AUX_MIC = 403,MM_CREATIVE_AUX_MASTER = 404,MM_CREATIVE_AUX_PCSPK = 405,MM_CREATIVE_AUX_WAVE = 406,MM_CREATIVE_AUX_MIDI = 407,MM_CREATIVE_SBPRO_MIXER = 408,MM_CREATIVE_SB16_MIXER = 409,MM_MEDIAVISION_PROAUDIO = 16,MM_PROAUD_MIDIOUT = 17,MM_PROAUD_MIDIIN = 18,MM_PROAUD_SYNTH = 19,MM_PROAUD_WAVEOUT = 20,MM_PROAUD_WAVEIN = 21,MM_PROAUD_MIXER = 22,MM_PROAUD_AUX = 23,MM_MEDIAVISION_THUNDER = 32,MM_THUNDER_SYNTH = 35,MM_THUNDER_WAVEOUT = 36,MM_THUNDER_WAVEIN = 37,MM_THUNDER_AUX = 39,MM_MEDIAVISION_TPORT = 64,MM_TPORT_WAVEOUT = 65,MM_TPORT_WAVEIN = 66,MM_TPORT_SYNTH = 67,MM_MEDIAVISION_PROAUDIO_PLUS = 80,MM_PROAUD_PLUS_MIDIOUT = 81,MM_PROAUD_PLUS_MIDIIN = 82,MM_PROAUD_PLUS_SYNTH = 83,MM_PROAUD_PLUS_WAVEOUT = 84,MM_PROAUD_PLUS_WAVEIN = 85,MM_PROAUD_PLUS_MIXER = 86,MM_PROAUD_PLUS_AUX = 87,MM_MEDIAVISION_PROAUDIO_16 = 96,MM_PROAUD_16_MIDIOUT = 97,MM_PROAUD_16_MIDIIN = 98,MM_PROAUD_16_SYNTH = 99,MM_PROAUD_16_WAVEOUT = 100,MM_PROAUD_16_WAVEIN = 101,MM_PROAUD_16_MIXER = 102,MM_PROAUD_16_AUX = 103,MM_MEDIAVISION_PROSTUDIO_16 = 96,MM_STUDIO_16_MIDIOUT = 97,MM_STUDIO_16_MIDIIN = 98,MM_STUDIO_16_SYNTH = 99,MM_STUDIO_16_WAVEOUT = 100,MM_STUDIO_16_WAVEIN = 101,MM_STUDIO_16_MIXER = 102,MM_STUDIO_16_AUX = 103,MM_MEDIAVISION_CDPC = 112,MM_CDPC_MIDIOUT = 113,MM_CDPC_MIDIIN = 114,MM_CDPC_SYNTH = 115,MM_CDPC_WAVEOUT = 116,MM_CDPC_WAVEIN = 117,MM_CDPC_MIXER = 118,MM_CDPC_AUX = 119,MM_MEDIAVISION_OPUS1208 = 128,MM_OPUS401_MIDIOUT = 129,MM_OPUS401_MIDIIN = 130,MM_OPUS1208_SYNTH = 131,MM_OPUS1208_WAVEOUT = 132,MM_OPUS1208_WAVEIN = 133,MM_OPUS1208_MIXER = 134,MM_OPUS1208_AUX = 135,MM_MEDIAVISION_OPUS1216 = 144,MM_OPUS1216_MIDIOUT = 145,MM_OPUS1216_MIDIIN = 146,MM_OPUS1216_SYNTH = 147,MM_OPUS1216_WAVEOUT = 148,MM_OPUS1216_WAVEIN = 149,MM_OPUS1216_MIXER = 150,MM_OPUS1216_AUX = 151,MM_CYRIX_XASYNTH = 1,MM_CYRIX_XAMIDIIN = 2,MM_CYRIX_XAMIDIOUT = 3,MM_CYRIX_XAWAVEIN = 4,MM_CYRIX_XAWAVEOUT = 5,MM_CYRIX_XAAUX = 6,MM_CYRIX_XAMIXER = 7,MM_PHILIPS_ACM_LPCBB = 1,MM_NETXL_XLVIDEO = 1,MM_ZYXEL_ACM_ADPCM = 1,MM_AARDVARK_STUDIO12_WAVEOUT = 1,MM_AARDVARK_STUDIO12_WAVEIN = 2,MM_AARDVARK_STUDIO88_WAVEOUT = 3,MM_AARDVARK_STUDIO88_WAVEIN = 4,MM_BINTEC_TAPI_WAVE = 1,MM_HEWLETT_PACKARD_CU_CODEC = 1,MM_MITEL_TALKTO_LINE_WAVEOUT = 100,MM_MITEL_TALKTO_LINE_WAVEIN = 101,MM_MITEL_TALKTO_HANDSET_WAVEOUT = 102,MM_MITEL_TALKTO_HANDSET_WAVEIN = 103,MM_MITEL_TALKTO_BRIDGED_WAVEOUT = 104,MM_MITEL_TALKTO_BRIDGED_WAVEIN = 105,MM_MITEL_MPA_HANDSET_WAVEOUT = 200,MM_MITEL_MPA_HANDSET_WAVEIN = 201,MM_MITEL_MPA_HANDSFREE_WAVEOUT = 202,MM_MITEL_MPA_HANDSFREE_WAVEIN = 203,MM_MITEL_MPA_LINE1_WAVEOUT = 204,MM_MITEL_MPA_LINE1_WAVEIN = 205,MM_MITEL_MPA_LINE2_WAVEOUT = 206,MM_MITEL_MPA_LINE2_WAVEIN = 207,MM_MITEL_MEDIAPATH_WAVEOUT = 300,MM_MITEL_MEDIAPATH_WAVEIN = 301,MM_SNI_ACM_G721 = 1,MM_EMU_APSSYNTH = 1,MM_EMU_APSMIDIIN = 2,MM_EMU_APSMIDIOUT = 3,MM_EMU_APSWAVEIN = 4,MM_EMU_APSWAVEOUT = 5,MM_ARTISOFT_SBWAVEIN = 1,MM_ARTISOFT_SBWAVEOUT = 2,MM_TBS_TROPEZ_WAVEIN = 37,MM_TBS_TROPEZ_WAVEOUT = 38,MM_TBS_TROPEZ_AUX1 = 39,MM_TBS_TROPEZ_AUX2 = 40,MM_TBS_TROPEZ_LINE = 41,MM_MMOTION_WAVEAUX = 1,MM_MMOTION_WAVEOUT = 2,MM_MMOTION_WAVEIN = 3,MM_IBM_PCMCIA_WAVEIN = 11,MM_IBM_PCMCIA_WAVEOUT = 12,MM_IBM_PCMCIA_SYNTH = 13,MM_IBM_PCMCIA_MIDIIN = 14,MM_IBM_PCMCIA_MIDIOUT = 15,MM_IBM_PCMCIA_AUX = 16,MM_IBM_THINKPAD200 = 17,MM_IBM_MWAVE_WAVEIN = 18,MM_IBM_MWAVE_WAVEOUT = 19,MM_IBM_MWAVE_MIXER = 20,MM_IBM_MWAVE_MIDIIN = 21,MM_IBM_MWAVE_MIDIOUT = 22,MM_IBM_MWAVE_AUX = 23,MM_IBM_WC_MIDIOUT = 30,MM_IBM_WC_WAVEOUT = 31,MM_IBM_WC_MIXEROUT = 33,MM_VOCALTEC_WAVEOUT = 1,MM_VOCALTEC_WAVEIN = 2,MM_ROLAND_RAP10_MIDIOUT = 10,MM_ROLAND_RAP10_MIDIIN = 11,MM_ROLAND_RAP10_SYNTH = 12,MM_ROLAND_RAP10_WAVEOUT = 13,MM_ROLAND_RAP10_WAVEIN = 14,MM_ROLAND_MPU401_MIDIOUT = 15,MM_ROLAND_MPU401_MIDIIN = 16,MM_ROLAND_SMPU_MIDIOUTA = 17,MM_ROLAND_SMPU_MIDIOUTB = 18,MM_ROLAND_SMPU_MIDIINA = 19,MM_ROLAND_SMPU_MIDIINB = 20,MM_ROLAND_SC7_MIDIOUT = 21,MM_ROLAND_SC7_MIDIIN = 22,MM_ROLAND_SERIAL_MIDIOUT = 23,MM_ROLAND_SERIAL_MIDIIN = 24,MM_ROLAND_SCP_MIDIOUT = 38,MM_ROLAND_SCP_MIDIIN = 39,MM_ROLAND_SCP_WAVEOUT = 40,MM_ROLAND_SCP_WAVEIN = 41,MM_ROLAND_SCP_MIXER = 42,MM_ROLAND_SCP_AUX = 48,MM_DSP_SOLUTIONS_WAVEOUT = 1,MM_DSP_SOLUTIONS_WAVEIN = 2,MM_DSP_SOLUTIONS_SYNTH = 3,MM_DSP_SOLUTIONS_AUX = 4,MM_NEC_73_86_SYNTH = 5,MM_NEC_73_86_WAVEOUT = 6,MM_NEC_73_86_WAVEIN = 7,MM_NEC_26_SYNTH = 9,MM_NEC_MPU401_MIDIOUT = 10,MM_NEC_MPU401_MIDIIN = 11,MM_NEC_JOYSTICK = 12,MM_WANGLABS_WAVEIN1 = 1,MM_WANGLABS_WAVEOUT1 = 2,MM_TANDY_VISWAVEIN = 1,MM_TANDY_VISWAVEOUT = 2,MM_TANDY_VISBIOSSYNTH = 3,MM_TANDY_SENS_MMAWAVEIN = 4,MM_TANDY_SENS_MMAWAVEOUT = 5,MM_TANDY_SENS_MMAMIDIIN = 6,MM_TANDY_SENS_MMAMIDIOUT = 7,MM_TANDY_SENS_VISWAVEOUT = 8,MM_TANDY_PSSJWAVEIN = 9,MM_TANDY_PSSJWAVEOUT = 10,MM_ANTEX_SX12_WAVEIN = 1,MM_ANTEX_SX12_WAVEOUT = 2,MM_ANTEX_SX15_WAVEIN = 3,MM_ANTEX_SX15_WAVEOUT = 4,MM_ANTEX_VP625_WAVEIN = 5,MM_ANTEX_VP625_WAVEOUT = 6,MM_ANTEX_AUDIOPORT22_WAVEIN = 7,MM_ANTEX_AUDIOPORT22_WAVEOUT = 8,MM_ANTEX_AUDIOPORT22_FEEDTHRU = 9,MM_INTELOPD_WAVEIN = 1,MM_INTELOPD_WAVEOUT = 101,MM_INTELOPD_AUX = 401,MM_INTEL_NSPMODEMLINEIN = 501,MM_INTEL_NSPMODEMLINEOUT = 502,MM_VAL_MICROKEY_AP_WAVEIN = 1,MM_VAL_MICROKEY_AP_WAVEOUT = 2,MM_INTERACTIVE_WAVEIN = 69,MM_INTERACTIVE_WAVEOUT = 69,MM_YAMAHA_GSS_SYNTH = 1,MM_YAMAHA_GSS_WAVEOUT = 2,MM_YAMAHA_GSS_WAVEIN = 3,MM_YAMAHA_GSS_MIDIOUT = 4,MM_YAMAHA_GSS_MIDIIN = 5,MM_YAMAHA_GSS_AUX = 6,MM_YAMAHA_SERIAL_MIDIOUT = 7,MM_YAMAHA_SERIAL_MIDIIN = 8,MM_YAMAHA_OPL3SA_WAVEOUT = 16,MM_YAMAHA_OPL3SA_WAVEIN = 17,MM_YAMAHA_OPL3SA_FMSYNTH = 18,MM_YAMAHA_OPL3SA_YSYNTH = 19,MM_YAMAHA_OPL3SA_MIDIOUT = 20,MM_YAMAHA_OPL3SA_MIDIIN = 21,MM_YAMAHA_OPL3SA_MIXER = 23,MM_YAMAHA_OPL3SA_JOYSTICK = 24,MM_YAMAHA_YMF724LEG_MIDIOUT = 25,MM_YAMAHA_YMF724LEG_MIDIIN = 26,MM_YAMAHA_YMF724_WAVEOUT = 27,MM_YAMAHA_YMF724_WAVEIN = 28,MM_YAMAHA_YMF724_MIDIOUT = 29,MM_YAMAHA_YMF724_AUX = 30,MM_YAMAHA_YMF724_MIXER = 31,MM_YAMAHA_YMF724LEG_FMSYNTH = 32,MM_YAMAHA_YMF724LEG_MIXER = 33,MM_YAMAHA_SXG_MIDIOUT = 34,MM_YAMAHA_SXG_WAVEOUT = 35,MM_YAMAHA_SXG_MIXER = 36,MM_YAMAHA_ACXG_WAVEIN = 37,MM_YAMAHA_ACXG_WAVEOUT = 38,MM_YAMAHA_ACXG_MIDIOUT = 39,MM_YAMAHA_ACXG_MIXER = 40,MM_YAMAHA_ACXG_AUX = 41,MM_EVEREX_CARRIER = 1,MM_ECHO_SYNTH = 1,MM_ECHO_WAVEOUT = 2,MM_ECHO_WAVEIN = 3,MM_ECHO_MIDIOUT = 4,MM_ECHO_MIDIIN = 5,MM_ECHO_AUX = 6,MM_SIERRA_ARIA_MIDIOUT = 20,MM_SIERRA_ARIA_MIDIIN = 21,MM_SIERRA_ARIA_SYNTH = 22,MM_SIERRA_ARIA_WAVEOUT = 23,MM_SIERRA_ARIA_WAVEIN = 24,MM_SIERRA_ARIA_AUX = 25,MM_SIERRA_ARIA_AUX2 = 32,MM_SIERRA_QUARTET_WAVEIN = 80,MM_SIERRA_QUARTET_WAVEOUT = 81,MM_SIERRA_QUARTET_MIDIIN = 82,MM_SIERRA_QUARTET_MIDIOUT = 83,MM_SIERRA_QUARTET_SYNTH = 84,MM_SIERRA_QUARTET_AUX_CD = 85,MM_SIERRA_QUARTET_AUX_LINE = 86,MM_SIERRA_QUARTET_AUX_MODEM = 87,MM_SIERRA_QUARTET_MIXER = 88,MM_CAT_WAVEOUT = 1,MM_DSP_GROUP_TRUESPEECH = 1,MM_MELABS_MIDI2GO = 1,MM_ESS_AMWAVEOUT = 1,MM_ESS_AMWAVEIN = 2,MM_ESS_AMAUX = 3,MM_ESS_AMSYNTH = 4,MM_ESS_AMMIDIOUT = 5,MM_ESS_AMMIDIIN = 6,MM_ESS_MIXER = 7,MM_ESS_AUX_CD = 8,MM_ESS_MPU401_MIDIOUT = 9,MM_ESS_MPU401_MIDIIN = 10,MM_ESS_ES488_WAVEOUT = 16,MM_ESS_ES488_WAVEIN = 17,MM_ESS_ES488_MIXER = 18,MM_ESS_ES688_WAVEOUT = 19,MM_ESS_ES688_WAVEIN = 20,MM_ESS_ES688_MIXER = 21,MM_ESS_ES1488_WAVEOUT = 22,MM_ESS_ES1488_WAVEIN = 23,MM_ESS_ES1488_MIXER = 24,MM_ESS_ES1688_WAVEOUT = 25,MM_ESS_ES1688_WAVEIN = 26,MM_ESS_ES1688_MIXER = 27,MM_ESS_ES1788_WAVEOUT = 28,MM_ESS_ES1788_WAVEIN = 29,MM_ESS_ES1788_MIXER = 30,MM_ESS_ES1888_WAVEOUT = 31,MM_ESS_ES1888_WAVEIN = 32,MM_ESS_ES1888_MIXER = 33,MM_ESS_ES1868_WAVEOUT = 34,MM_ESS_ES1868_WAVEIN = 35,MM_ESS_ES1868_MIXER = 36,MM_ESS_ES1878_WAVEOUT = 37,MM_ESS_ES1878_WAVEIN = 38,MM_ESS_ES1878_MIXER = 39,MM_CANOPUS_ACM_DVREX = 1,MM_EPS_FMSND = 1,MM_TRUEVISION_WAVEIN1 = 1,MM_TRUEVISION_WAVEOUT1 = 2,MM_AZTECH_MIDIOUT = 3,MM_AZTECH_MIDIIN = 4,MM_AZTECH_WAVEIN = 17,MM_AZTECH_WAVEOUT = 18,MM_AZTECH_FMSYNTH = 20,MM_AZTECH_MIXER = 21,MM_AZTECH_PRO16_WAVEIN = 33,MM_AZTECH_PRO16_WAVEOUT = 34,MM_AZTECH_PRO16_FMSYNTH = 38,MM_AZTECH_DSP16_WAVEIN = 65,MM_AZTECH_DSP16_WAVEOUT = 66,MM_AZTECH_DSP16_FMSYNTH = 68,MM_AZTECH_DSP16_WAVESYNTH = 70,MM_AZTECH_NOVA16_WAVEIN = 71,MM_AZTECH_NOVA16_WAVEOUT = 72,MM_AZTECH_NOVA16_MIXER = 73,MM_AZTECH_WASH16_WAVEIN = 74,MM_AZTECH_WASH16_WAVEOUT = 75,MM_AZTECH_WASH16_MIXER = 76,MM_AZTECH_AUX_CD = 401,MM_AZTECH_AUX_LINE = 402,MM_AZTECH_AUX_MIC = 403,MM_AZTECH_AUX = 404,MM_VIDEOLOGIC_MSWAVEIN = 1,MM_VIDEOLOGIC_MSWAVEOUT = 2,MM_KORG_PCIF_MIDIOUT = 1,MM_KORG_PCIF_MIDIIN = 2,MM_KORG_1212IO_MSWAVEIN = 3,MM_KORG_1212IO_MSWAVEOUT = 4,MM_APT_ACE100CD = 1,MM_ICS_WAVEDECK_WAVEOUT = 1,MM_ICS_WAVEDECK_WAVEIN = 2,MM_ICS_WAVEDECK_MIXER = 3,MM_ICS_WAVEDECK_AUX = 4,MM_ICS_WAVEDECK_SYNTH = 5,MM_ICS_WAVEDEC_SB_WAVEOUT = 6,MM_ICS_WAVEDEC_SB_WAVEIN = 7,MM_ICS_WAVEDEC_SB_FM_MIDIOUT = 8,MM_ICS_WAVEDEC_SB_MPU401_MIDIOUT = 9,MM_ICS_WAVEDEC_SB_MPU401_MIDIIN = 10,MM_ICS_WAVEDEC_SB_MIXER = 11,MM_ICS_WAVEDEC_SB_AUX = 12,MM_ICS_2115_LITE_MIDIOUT = 13,MM_ICS_2120_LITE_MIDIOUT = 14,MM_ITERATEDSYS_FUFCODEC = 1,MM_METHEUS_ZIPPER = 1,MM_WINNOV_CAVIAR_WAVEIN = 1,MM_WINNOV_CAVIAR_WAVEOUT = 2,MM_WINNOV_CAVIAR_VIDC = 3,MM_WINNOV_CAVIAR_CHAMPAGNE = 4,MM_WINNOV_CAVIAR_YUV8 = 5,MM_NCR_BA_WAVEIN = 1,MM_NCR_BA_WAVEOUT = 2,MM_NCR_BA_SYNTH = 3,MM_NCR_BA_AUX = 4,MM_NCR_BA_MIXER = 5,MM_AST_MODEMWAVE_WAVEIN = 13,MM_AST_MODEMWAVE_WAVEOUT = 14,MM_WILLOWPOND_FMSYNTH_STEREO = 20,MM_WILLOWPOND_MPU401 = 21,MM_WILLOWPOND_SNDPORT_WAVEIN = 100,MM_WILLOWPOND_SNDPORT_WAVEOUT = 101,MM_WILLOWPOND_SNDPORT_MIXER = 102,MM_WILLOWPOND_SNDPORT_AUX = 103,MM_WILLOWPOND_PH_WAVEIN = 104,MM_WILLOWPOND_PH_WAVEOUT = 105,MM_WILLOWPOND_PH_MIXER = 106,MM_WILLOWPOND_PH_AUX = 107,MM_WILLOPOND_SNDCOMM_WAVEIN = 108,MM_WILLOWPOND_SNDCOMM_WAVEOUT = 109,MM_WILLOWPOND_SNDCOMM_MIXER = 110,MM_WILLOWPOND_SNDCOMM_AUX = 111,MM_WILLOWPOND_GENERIC_WAVEIN = 112,MM_WILLOWPOND_GENERIC_WAVEOUT = 113,MM_WILLOWPOND_GENERIC_MIXER = 114,MM_WILLOWPOND_GENERIC_AUX = 115,MM_VITEC_VMAKER = 1,MM_VITEC_VMPRO = 2,MM_MOSCOM_VPC2400_IN = 1,MM_MOSCOM_VPC2400_OUT = 2,MM_SILICONSOFT_SC1_WAVEIN = 1,MM_SILICONSOFT_SC1_WAVEOUT = 2,MM_SILICONSOFT_SC2_WAVEIN = 3,MM_SILICONSOFT_SC2_WAVEOUT = 4,MM_SILICONSOFT_SOUNDJR2_WAVEOUT = 5,MM_SILICONSOFT_SOUNDJR2PR_WAVEIN = 6,MM_SILICONSOFT_SOUNDJR2PR_WAVEOUT = 7,MM_SILICONSOFT_SOUNDJR3_WAVEOUT = 8,MM_TTEWS_WAVEIN = 1,MM_TTEWS_WAVEOUT = 2,MM_TTEWS_MIDIIN = 3,MM_TTEWS_MIDIOUT = 4,MM_TTEWS_MIDISYNTH = 5,MM_TTEWS_MIDIMONITOR = 6,MM_TTEWS_VMIDIIN = 7,MM_TTEWS_VMIDIOUT = 8,MM_TTEWS_AUX = 9,MM_TTEWS_MIXER = 10,MM_MEDIASONIC_ACM_G723 = 1,MM_MEDIASONIC_ICOM = 2,MM_ICOM_WAVEIN = 3,MM_ICOM_WAVEOUT = 4,MM_ICOM_MIXER = 5,MM_ICOM_AUX = 6,MM_ICOM_LINE = 7,MM_SANYO_ACM_LD_ADPCM = 1,MM_AHEAD_MULTISOUND = 1,MM_AHEAD_SOUNDBLASTER = 2,MM_AHEAD_PROAUDIO = 3,MM_AHEAD_GENERIC = 4,MM_OLIVETTI_WAVEIN = 1,MM_OLIVETTI_WAVEOUT = 2,MM_OLIVETTI_MIXER = 3,MM_OLIVETTI_AUX = 4,MM_OLIVETTI_MIDIIN = 5,MM_OLIVETTI_MIDIOUT = 6,MM_OLIVETTI_SYNTH = 7,MM_OLIVETTI_JOYSTICK = 8,MM_OLIVETTI_ACM_GSM = 9,MM_OLIVETTI_ACM_ADPCM = 10,MM_OLIVETTI_ACM_CELP = 11,MM_OLIVETTI_ACM_SBC = 12,MM_OLIVETTI_ACM_OPR = 13,MM_IOMAGIC_TEMPO_WAVEOUT = 1,MM_IOMAGIC_TEMPO_WAVEIN = 2,MM_IOMAGIC_TEMPO_SYNTH = 3,MM_IOMAGIC_TEMPO_MIDIOUT = 4,MM_IOMAGIC_TEMPO_MXDOUT = 5,MM_IOMAGIC_TEMPO_AUXOUT = 6,MM_MATSUSHITA_WAVEIN = 1,MM_MATSUSHITA_WAVEOUT = 2,MM_MATSUSHITA_FMSYNTH_STEREO = 3,MM_MATSUSHITA_MIXER = 4,MM_MATSUSHITA_AUX = 5,MM_NEWMEDIA_WAVJAMMER = 1,MM_LYRRUS_BRIDGE_GUITAR = 1,MM_OPTI_M16_FMSYNTH_STEREO = 1,MM_OPTI_M16_MIDIIN = 2,MM_OPTI_M16_MIDIOUT = 3,MM_OPTI_M16_WAVEIN = 4,MM_OPTI_M16_WAVEOUT = 5,MM_OPTI_M16_MIXER = 6,MM_OPTI_M16_AUX = 7,MM_OPTI_P16_FMSYNTH_STEREO = 16,MM_OPTI_P16_MIDIIN = 17,MM_OPTI_P16_MIDIOUT = 18,MM_OPTI_P16_WAVEIN = 19,MM_OPTI_P16_WAVEOUT = 20,MM_OPTI_P16_MIXER = 21,MM_OPTI_P16_AUX = 22,MM_OPTI_M32_WAVEIN = 32,MM_OPTI_M32_WAVEOUT = 33,MM_OPTI_M32_MIDIIN = 34,MM_OPTI_M32_MIDIOUT = 35,MM_OPTI_M32_SYNTH_STEREO = 36,MM_OPTI_M32_MIXER = 37,MM_OPTI_M32_AUX = 38,MM_COMPAQ_BB_WAVEIN = 1,MM_COMPAQ_BB_WAVEOUT = 2,MM_COMPAQ_BB_WAVEAUX = 3,MM_MPTUS_SPWAVEOUT = 1,MM_LERNOUT_ANDHAUSPIE_LHCODECACM = 1,MM_DIGITAL_AV320_WAVEIN = 1,MM_DIGITAL_AV320_WAVEOUT = 2,MM_DIGITAL_ACM_G723 = 3,MM_DIGITAL_ICM_H263 = 4,MM_DIGITAL_ICM_H261 = 5,MM_MOTU_MTP_MIDIOUT_ALL = 100,MM_MOTU_MTP_MIDIIN_1 = 101,MM_MOTU_MTP_MIDIOUT_1 = 101,MM_MOTU_MTP_MIDIIN_2 = 102,MM_MOTU_MTP_MIDIOUT_2 = 102,MM_MOTU_MTP_MIDIIN_3 = 103,MM_MOTU_MTP_MIDIOUT_3 = 103,MM_MOTU_MTP_MIDIIN_4 = 104,MM_MOTU_MTP_MIDIOUT_4 = 104,MM_MOTU_MTP_MIDIIN_5 = 105,MM_MOTU_MTP_MIDIOUT_5 = 105,MM_MOTU_MTP_MIDIIN_6 = 106,MM_MOTU_MTP_MIDIOUT_6 = 106,MM_MOTU_MTP_MIDIIN_7 = 107,MM_MOTU_MTP_MIDIOUT_7 = 107,MM_MOTU_MTP_MIDIIN_8 = 108,MM_MOTU_MTP_MIDIOUT_8 = 108,MM_MOTU_MTPII_MIDIOUT_ALL = 200,MM_MOTU_MTPII_MIDIIN_SYNC = 200,MM_MOTU_MTPII_MIDIIN_1 = 201,MM_MOTU_MTPII_MIDIOUT_1 = 201,MM_MOTU_MTPII_MIDIIN_2 = 202,MM_MOTU_MTPII_MIDIOUT_2 = 202,MM_MOTU_MTPII_MIDIIN_3 = 203,MM_MOTU_MTPII_MIDIOUT_3 = 203,MM_MOTU_MTPII_MIDIIN_4 = 204,MM_MOTU_MTPII_MIDIOUT_4 = 204,MM_MOTU_MTPII_MIDIIN_5 = 205,MM_MOTU_MTPII_MIDIOUT_5 = 205,MM_MOTU_MTPII_MIDIIN_6 = 206,MM_MOTU_MTPII_MIDIOUT_6 = 206,MM_MOTU_MTPII_MIDIIN_7 = 207,MM_MOTU_MTPII_MIDIOUT_7 = 207,MM_MOTU_MTPII_MIDIIN_8 = 208,MM_MOTU_MTPII_MIDIOUT_8 = 208,MM_MOTU_MTPII_NET_MIDIIN_1 = 209,MM_MOTU_MTPII_NET_MIDIOUT_1 = 209,MM_MOTU_MTPII_NET_MIDIIN_2 = 210,MM_MOTU_MTPII_NET_MIDIOUT_2 = 210,MM_MOTU_MTPII_NET_MIDIIN_3 = 211,MM_MOTU_MTPII_NET_MIDIOUT_3 = 211,MM_MOTU_MTPII_NET_MIDIIN_4 = 212,MM_MOTU_MTPII_NET_MIDIOUT_4 = 212,MM_MOTU_MTPII_NET_MIDIIN_5 = 213,MM_MOTU_MTPII_NET_MIDIOUT_5 = 213,MM_MOTU_MTPII_NET_MIDIIN_6 = 214,MM_MOTU_MTPII_NET_MIDIOUT_6 = 214,MM_MOTU_MTPII_NET_MIDIIN_7 = 215,MM_MOTU_MTPII_NET_MIDIOUT_7 = 215,MM_MOTU_MTPII_NET_MIDIIN_8 = 216,MM_MOTU_MTPII_NET_MIDIOUT_8 = 216,MM_MOTU_MXP_MIDIIN_MIDIOUT_ALL = 300,MM_MOTU_MXP_MIDIIN_SYNC = 300,MM_MOTU_MXP_MIDIIN_MIDIIN_1 = 301,MM_MOTU_MXP_MIDIIN_MIDIOUT_1 = 301,MM_MOTU_MXP_MIDIIN_MIDIIN_2 = 302,MM_MOTU_MXP_MIDIIN_MIDIOUT_2 = 302,MM_MOTU_MXP_MIDIIN_MIDIIN_3 = 303,MM_MOTU_MXP_MIDIIN_MIDIOUT_3 = 303,MM_MOTU_MXP_MIDIIN_MIDIIN_4 = 304,MM_MOTU_MXP_MIDIIN_MIDIOUT_4 = 304,MM_MOTU_MXP_MIDIIN_MIDIIN_5 = 305,MM_MOTU_MXP_MIDIIN_MIDIOUT_5 = 305,MM_MOTU_MXP_MIDIIN_MIDIIN_6 = 306,MM_MOTU_MXP_MIDIIN_MIDIOUT_6 = 306,MM_MOTU_MXPMPU_MIDIOUT_ALL = 400,MM_MOTU_MXPMPU_MIDIIN_SYNC = 400,MM_MOTU_MXPMPU_MIDIIN_1 = 401,MM_MOTU_MXPMPU_MIDIOUT_1 = 401,MM_MOTU_MXPMPU_MIDIIN_2 = 402,MM_MOTU_MXPMPU_MIDIOUT_2 = 402,MM_MOTU_MXPMPU_MIDIIN_3 = 403,MM_MOTU_MXPMPU_MIDIOUT_3 = 403,MM_MOTU_MXPMPU_MIDIIN_4 = 404,MM_MOTU_MXPMPU_MIDIOUT_4 = 404,MM_MOTU_MXPMPU_MIDIIN_5 = 405,MM_MOTU_MXPMPU_MIDIOUT_5 = 405,MM_MOTU_MXPMPU_MIDIIN_6 = 406,MM_MOTU_MXPMPU_MIDIOUT_6 = 406,MM_MOTU_MXN_MIDIOUT_ALL = 500,MM_MOTU_MXN_MIDIIN_SYNC = 500,MM_MOTU_MXN_MIDIIN_1 = 501,MM_MOTU_MXN_MIDIOUT_1 = 501,MM_MOTU_MXN_MIDIIN_2 = 502,MM_MOTU_MXN_MIDIOUT_2 = 502,MM_MOTU_MXN_MIDIIN_3 = 503,MM_MOTU_MXN_MIDIOUT_3 = 503,MM_MOTU_MXN_MIDIIN_4 = 504,MM_MOTU_MXN_MIDIOUT_4 = 504,MM_MOTU_FLYER_MIDI_IN_SYNC = 600,MM_MOTU_FLYER_MIDI_IN_A = 601,MM_MOTU_FLYER_MIDI_OUT_A = 601,MM_MOTU_FLYER_MIDI_IN_B = 602,MM_MOTU_FLYER_MIDI_OUT_B = 602,MM_MOTU_PKX_MIDI_IN_SYNC = 700,MM_MOTU_PKX_MIDI_IN_A = 701,MM_MOTU_PKX_MIDI_OUT_A = 701,MM_MOTU_PKX_MIDI_IN_B = 702,MM_MOTU_PKX_MIDI_OUT_B = 702,MM_MOTU_DTX_MIDI_IN_SYNC = 800,MM_MOTU_DTX_MIDI_IN_A = 801,MM_MOTU_DTX_MIDI_OUT_A = 801,MM_MOTU_DTX_MIDI_IN_B = 802,MM_MOTU_DTX_MIDI_OUT_B = 802,MM_MOTU_MTPAV_MIDIOUT_ALL = 900,MM_MOTU_MTPAV_MIDIIN_SYNC = 900,MM_MOTU_MTPAV_MIDIIN_1 = 901,MM_MOTU_MTPAV_MIDIOUT_1 = 901,MM_MOTU_MTPAV_MIDIIN_2 = 902,MM_MOTU_MTPAV_MIDIOUT_2 = 902,MM_MOTU_MTPAV_MIDIIN_3 = 903,MM_MOTU_MTPAV_MIDIOUT_3 = 903,MM_MOTU_MTPAV_MIDIIN_4 = 904,MM_MOTU_MTPAV_MIDIOUT_4 = 904,MM_MOTU_MTPAV_MIDIIN_5 = 905,MM_MOTU_MTPAV_MIDIOUT_5 = 905,MM_MOTU_MTPAV_MIDIIN_6 = 906,MM_MOTU_MTPAV_MIDIOUT_6 = 906,MM_MOTU_MTPAV_MIDIIN_7 = 907,MM_MOTU_MTPAV_MIDIOUT_7 = 907,MM_MOTU_MTPAV_MIDIIN_8 = 908,MM_MOTU_MTPAV_MIDIOUT_8 = 908,MM_MOTU_MTPAV_NET_MIDIIN_1 = 909,MM_MOTU_MTPAV_NET_MIDIOUT_1 = 909,MM_MOTU_MTPAV_NET_MIDIIN_2 = 910,MM_MOTU_MTPAV_NET_MIDIOUT_2 = 910,MM_MOTU_MTPAV_NET_MIDIIN_3 = 911,MM_MOTU_MTPAV_NET_MIDIOUT_3 = 911,MM_MOTU_MTPAV_NET_MIDIIN_4 = 912,MM_MOTU_MTPAV_NET_MIDIOUT_4 = 912,MM_MOTU_MTPAV_NET_MIDIIN_5 = 913,MM_MOTU_MTPAV_NET_MIDIOUT_5 = 913,MM_MOTU_MTPAV_NET_MIDIIN_6 = 914,MM_MOTU_MTPAV_NET_MIDIOUT_6 = 914,MM_MOTU_MTPAV_NET_MIDIIN_7 = 915,MM_MOTU_MTPAV_NET_MIDIOUT_7 = 915,MM_MOTU_MTPAV_NET_MIDIIN_8 = 916,MM_MOTU_MTPAV_NET_MIDIOUT_8 = 916,MM_MOTU_MTPAV_MIDIIN_ADAT = 917,MM_MOTU_MTPAV_MIDIOUT_ADAT = 917,MM_MOTU_MXPXT_MIDIIN_SYNC = 1000,MM_MOTU_MXPXT_MIDIOUT_ALL = 1000,MM_MOTU_MXPXT_MIDIIN_1 = 1001,MM_MOTU_MXPXT_MIDIOUT_1 = 1001,MM_MOTU_MXPXT_MIDIOUT_2 = 1002,MM_MOTU_MXPXT_MIDIIN_2 = 1002,MM_MOTU_MXPXT_MIDIIN_3 = 1003,MM_MOTU_MXPXT_MIDIOUT_3 = 1003,MM_MOTU_MXPXT_MIDIIN_4 = 1004,MM_MOTU_MXPXT_MIDIOUT_4 = 1004,MM_MOTU_MXPXT_MIDIIN_5 = 1005,MM_MOTU_MXPXT_MIDIOUT_5 = 1005,MM_MOTU_MXPXT_MIDIOUT_6 = 1006,MM_MOTU_MXPXT_MIDIIN_6 = 1006,MM_MOTU_MXPXT_MIDIOUT_7 = 1007,MM_MOTU_MXPXT_MIDIIN_7 = 1007,MM_MOTU_MXPXT_MIDIOUT_8 = 1008,MM_MOTU_MXPXT_MIDIIN_8 = 1008,MM_WORKBIT_MIXER = 1,MM_WORKBIT_WAVEOUT = 2,MM_WORKBIT_WAVEIN = 3,MM_WORKBIT_MIDIIN = 4,MM_WORKBIT_MIDIOUT = 5,MM_WORKBIT_FMSYNTH = 6,MM_WORKBIT_AUX = 7,MM_WORKBIT_JOYSTICK = 8,MM_OSITECH_TRUMPCARD = 1,MM_MIRO_MOVIEPRO = 1,MM_MIRO_VIDEOD1 = 2,MM_MIRO_VIDEODC1TV = 3,MM_MIRO_VIDEOTD = 4,MM_MIRO_DC30_WAVEOUT = 5,MM_MIRO_DC30_WAVEIN = 6,MM_MIRO_DC30_MIX = 7,MM_ISOLUTION_PASCAL = 1,MM_VOICEMIXER = 1,};
enum MACRO_MSNdis_80211 {MSNdis_80211_BaseServiceSetIdentifier_Ndis80211MacAddress_ID = 1,MSNdis_80211_ServiceSetIdentifier_Ndis80211SsId_ID = 1,MSNdis_80211_NetworkType_Ndis80211NetworkType_ID = 1,MSNdis_80211_NetworkTypesSupported_NumberOfItems_ID = 1,MSNdis_80211_NetworkTypesSupported_Ndis80211NetworkTypes_ID = 2,MSNdis_80211_NetworkTypeInUse_Ndis80211NetworkTypeInUse_ID = 1,MSNdis_80211_PowerMode_Ndis80211PowerMode_ID = 1,MSNdis_80211_TransmitPowerLevel_Ndis80211TransmitPowerLevel_ID = 1,MSNdis_80211_ReceivedSignalStrength_Ndis80211ReceivedSignalStrength_ID = 1,MSNdis_80211_ReceivedSignalStrengthEventTrigger_Ndis80211ReceivedSignalStrengthTrigger_ID = 1,MSNdis_80211_NetworkInfrastructure_Ndis80211NetworkInfrastructure_ID = 1,MSNdis_80211_ConfigurationFH_FHLength_ID = 1,MSNdis_80211_ConfigurationFH_HopPattern_ID = 2,MSNdis_80211_ConfigurationFH_HopSet_ID = 3,MSNdis_80211_ConfigurationFH_DwellTime_ID = 4,MSNdis_80211_ConfigurationInfo_ConfigLength_ID = 1,MSNdis_80211_ConfigurationInfo_BeaconPeriod_ID = 2,MSNdis_80211_ConfigurationInfo_ATIMWindow_ID = 3,MSNdis_80211_ConfigurationInfo_DSConfig_ID = 4,MSNdis_80211_ConfigurationInfo_FHConfig_ID = 5,MSNdis_80211_WLanBssId_Ndis80211WLanBssIdLength_ID = 1,MSNdis_80211_WLanBssId_Ndis80211MacAddress_ID = 2,MSNdis_80211_WLanBssId_Reserved_ID = 3,MSNdis_80211_WLanBssId_Ndis80211SsIdLength_ID = 4,MSNdis_80211_WLanBssId_Ndis80211SsId_ID = 5,MSNdis_80211_WLanBssId_Ndis80211Privacy_ID = 6,MSNdis_80211_WLanBssId_Ndis80211Rssi_ID = 7,MSNdis_80211_WLanBssId_Ndis80211NetworkTypeInUse_ID = 8,MSNdis_80211_WLanBssId_Ndis80211Configuration_ID = 9,MSNdis_80211_WLanBssId_Ndis80211InfrastructureMode_ID = 10,MSNdis_80211_WLanBssId_Ndis80211SupportedRate_ID = 11,MSNdis_80211_BSSIList_NumberOfItems_ID = 1,MSNdis_80211_BSSIList_Ndis80211BSSIList_ID = 2,MSNdis_80211_InfrastructureMode_Ndis80211InfrastructureMode_ID = 1,MSNdis_80211_FragmentationThreshold_Ndis80211FragmentationThreshold_ID = 1,MSNdis_80211_RTSThreshold_Ndis80211RTSThreshold_ID = 1,MSNdis_80211_NumberOfAntennas_Ndis80211NumberOfAntennas_ID = 1,MSNdis_80211_ReceiveAntennaSelected_Ndis80211ReceiveAntennaSelected_ID = 1,MSNdis_80211_TransmitAntennaSelected_Ndis80211TransmitAntennaSelected_ID = 1,MSNdis_80211_DataRates_Ndis80211DataRate_ID = 1,MSNdis_80211_DesiredDataRates_Ndis80211DesiredRate_ID = 1,MSNdis_80211_Configuration_Ndis80211Config_ID = 1,MSNdis_80211_Statistics_StatisticsLength_ID = 1,MSNdis_80211_Statistics_TransmittedFragmentCount_ID = 2,MSNdis_80211_Statistics_MulticastTransmittedFrameCount_ID = 3,MSNdis_80211_Statistics_FailedCount_ID = 4,MSNdis_80211_Statistics_RetryCount_ID = 5,MSNdis_80211_Statistics_MultipleRetryCount_ID = 6,MSNdis_80211_Statistics_RTSSuccessCount_ID = 7,MSNdis_80211_Statistics_RTSFailureCount_ID = 8,MSNdis_80211_Statistics_ACKFailureCount_ID = 9,MSNdis_80211_Statistics_FrameDuplicateCount_ID = 10,MSNdis_80211_Statistics_ReceivedFragmentCount_ID = 11,MSNdis_80211_Statistics_MulticastReceivedFrameCount_ID = 12,MSNdis_80211_Statistics_FCSErrorCount_ID = 13,MSNdis_80211_AddWEP_Length_ID = 1,MSNdis_80211_AddWEP_KeyIndex_ID = 2,MSNdis_80211_AddWEP_KeyLength_ID = 3,MSNdis_80211_AddWEP_KeyMaterial_ID = 4,MSNdis_80211_RemoveWEP_Ndis80211KeyIndex_ID = 1,MSNdis_80211_Disassociate_UnusedParameter_ID = 1,MSNdis_80211_BssIdListScan_UnusedParameter_ID = 1,MSNdis_80211_AuthenticationMode_Ndis80211AuthenticationMode_ID = 1,MSNdis_80211_PrivacyFilter_Ndis80211PrivacyFilter_ID = 1,MSNdis_80211_WEPStatus_Ndis80211WEPStatus_ID = 1,MSNdis_80211_ReloadDefaults_Ndis80211ReloadDefaults_ID = 1,MSNdis_PMAdminConfigState_NdisPMAdminConfigState_ID = 1,MSNdis_PMAdminConfigParam_Header_ID = 1,MSNdis_PMAdminConfigParam_WakeOnPattern_ID = 2,MSNdis_PMAdminConfigParam_WakeOnMagicPacket_ID = 3,MSNdis_PMAdminConfigParam_DeviceSleepOnDisconnect_ID = 4,MSNdis_PMAdminConfigParam_PMARPOffload_ID = 5,MSNdis_PMAdminConfigParam_PMNDOffload_ID = 6,MSNdis_PMAdminConfigParam_PMWiFiRekeyOffload_ID = 7,MSNdis_PMAdminConfig_PMAdminConfigParam_ID = 1,MSNdis_PMCapabilityState_NdisPMCapabilityState_ID = 1,MSNdis_PMCapabilitiesParam_Header_ID = 1,MSNdis_PMCapabilitiesParam_WakeOnPattern_ID = 2,MSNdis_PMCapabilitiesParam_WakeOnMagicPacket_ID = 3,MSNdis_PMCapabilitiesParam_DeviceSleepOnDisconnect_ID = 4,MSNdis_PMCapabilitiesParam_PMARPOffload_ID = 5,MSNdis_PMCapabilitiesParam_PMNDOffload_ID = 6,MSNdis_PMCapabilitiesParam_PMWiFiRekeyOffload_ID = 7,MSNdis_PMCapabilities_PMCapabilitiesParam_ID = 1,MSNdis_StatusMediaSpecificIndication_NumberElements_ID = 1,MSNdis_StatusMediaSpecificIndication_NdisStatusMediaSpecificIndication_ID = 2,MSNdis_StatusLinkSpeedChange_NdisStatusLinkSpeedChange_ID = 1,MSNdis_StatusProtocolBind_Transport_ID = 1,MSNdis_StatusProtocolUnbind_Transport_ID = 1,MSNdis_StatusDevicePowerOn_Device_ID = 1,MSNdis_StatusDevicePowerOff_Device_ID = 1,MSNdis_StatusDevicePowerOnEx_Device_ID = 1,MSNdis_StatusDevicePowerOffEx_Device_ID = 1,MSNdis_StatusTaskOffloadChange_NumberElements_ID = 1,MSNdis_StatusTaskOffloadChange_TaskOffloadCapabilities_ID = 2,MSNdis_StatusPacketFilterChange_NumberElements_ID = 1,MSNdis_StatusPacketFilterChange_NdisPacketFilterStatusIndication_ID = 2,MSNdis_StatusNetworkChange_NumberElements_ID = 1,MSNdis_StatusNetworkChange_NdisNetworkChangeStatusIndication_ID = 2,MSNdis_StatusOperationalStatus_NumberElements_ID = 1,MSNdis_StatusOperationalStatus_NdisOperationalStatusStatusIndication_ID = 2,MSNdis_StatusLinkState_NumberElements_ID = 1,MSNdis_StatusLinkState_NdisLinkStateStatusIndication_ID = 2,MSNdis_StatusPortState_NumberElements_ID = 1,MSNdis_StatusPortState_NdisPortStateStatusIndication_ID = 2,MSNdis_StatusExternalConnectivityChange_NdisMediaConnectStatus_ID = 1,MSNdis_StatusMediaSpecificIndicationEx_NumberElements_ID = 1,MSNdis_StatusMediaSpecificIndicationEx_NdisStatusMediaSpecificIndication_ID = 2,MSNdis_StatusHDSplitCurrentConfig_NumberElements_ID = 1,MSNdis_StatusHDSplitCurrentConfig_HDSplitCurrentConfig_ID = 2,MSNdis_StatusDot11ScanConfirm_NumberElements_ID = 1,MSNdis_StatusDot11ScanConfirm_NdisStatusDot11ScanConfirmIndication_ID = 2,MSNdis_StatusDot11MPDUMaxLengthChange_NumberElements_ID = 1,MSNdis_StatusDot11MPDUMaxLengthChange_NdisStatusDot11MPDUMaxLengthChangeIndication_ID = 2,MSNdis_StatusDot11AssociationStart_NumberElements_ID = 1,MSNdis_StatusDot11AssociationStart_NdisStatusDot11AssociationStartIndication_ID = 2,MSNdis_StatusDot11AssociationCompletion_NumberElements_ID = 1,MSNdis_StatusDot11AssociationCompletion_NdisStatusDot11AssociationCompletionIndication_ID = 2,MSNdis_StatusDot11ConnectionStart_NumberElements_ID = 1,MSNdis_StatusDot11ConnectionStart_NdisStatusDot11ConnectionStartIndication_ID = 2,MSNdis_StatusDot11ConnectionCompletion_NumberElements_ID = 1,MSNdis_StatusDot11ConnectionCompletion_NdisStatusDot11ConnectionCompletionIndication_ID = 2,MSNdis_StatusDot11RoamingStart_NumberElements_ID = 1,MSNdis_StatusDot11RoamingStart_NdisStatusDot11RoamingStartIndication_ID = 2,MSNdis_StatusDot11RoamingCompletion_NumberElements_ID = 1,MSNdis_StatusDot11RoamingCompletion_NdisStatusDot11RoamingCompletionIndication_ID = 2,MSNdis_StatusDot11Disassociation_NumberElements_ID = 1,MSNdis_StatusDot11Disassociation_NdisStatusDot11DisassociationIndication_ID = 2,MSNdis_StatusDot11TkipmicFailure_NumberElements_ID = 1,MSNdis_StatusDot11TkipmicFailure_NdisStatusDot11TkipmicFailureIndication_ID = 2,MSNdis_StatusDot11PmkidCandidateList_NumberElements_ID = 1,MSNdis_StatusDot11PmkidCandidateList_NdisStatusDot11PmkidCandidateListIndication_ID = 2,MSNdis_StatusDot11PhyStateChange_NumberElements_ID = 1,MSNdis_StatusDot11PhyStateChange_NdisStatusDot11PhyStateChangeIndication_ID = 2,MSNdis_StatusDot11LinkQuality_NumberElements_ID = 1,MSNdis_StatusDot11LinkQuality_NdisStatusDot11LinkQualityIndication_ID = 2,};
enum MACRO_NABTS_BUFFER {NABTS_BUFFER_PICTURENUMBER_SUPPORT = 1,};
enum MACRO_NDIS_OFFLOAD {NDIS_OFFLOAD_FLAGS_GROUP_CHECKSUM_CAPABILITIES = 0x1,NDIS_OFFLOAD_REVISION_1 = 0x1,NDIS_OFFLOAD_REVISION_2 = 0x2,NDIS_TCP_CONNECTION_OFFLOAD_REVISION_1 = 0x1,NDIS_TCP_CONNECTION_OFFLOAD_REVISION_2 = 0x2,NDIS_MAXIMUM_PORTS = 0x1000000,NDIS_DEFAULT_PORT_NUMBER = 0x0,NDIS_PORT_AUTHENTICATION_PARAMETERS_REVISION_1 = 0x1,NDIS_WMI_DEFAULT_METHOD_ID = 0x1,NDIS_WMI_OBJECT_TYPE_SET = 0x1,NDIS_WMI_OBJECT_TYPE_METHOD = 0x2,NDIS_WMI_OBJECT_TYPE_EVENT = 0x3,NDIS_WMI_OBJECT_TYPE_ENUM_ADAPTER = 0x4,NDIS_WMI_OBJECT_TYPE_OUTPUT_INFO = 0x5,NDIS_WMI_METHOD_HEADER_REVISION_1 = 0x1,NDIS_WMI_SET_HEADER_REVISION_1 = 0x1,NDIS_WMI_EVENT_HEADER_REVISION_1 = 0x1,NDIS_WMI_ENUM_ADAPTER_REVISION_1 = 0x1,NDIS_DEVICE_TYPE_ENDPOINT = 0x1,NDIS_HD_SPLIT_PARAMETERS_REVISION_1 = 0x1,NDIS_HD_SPLIT_COMBINE_ALL_HEADERS = 0x1,NDIS_HD_SPLIT_CURRENT_CONFIG_REVISION_1 = 0x1,NDIS_HD_SPLIT_CAPS_SUPPORTS_HEADER_DATA_SPLIT = 0x1,NDIS_HD_SPLIT_CAPS_SUPPORTS_IPV4_OPTIONS = 0x2,NDIS_HD_SPLIT_CAPS_SUPPORTS_IPV6_EXTENSION_HEADERS = 0x4,NDIS_HD_SPLIT_CAPS_SUPPORTS_TCP_OPTIONS = 0x8,NDIS_HD_SPLIT_ENABLE_HEADER_DATA_SPLIT = 0x1,NDIS_PM_WOL_BITMAP_PATTERN_SUPPORTED = 0x1,NDIS_PM_WOL_MAGIC_PACKET_SUPPORTED = 0x2,NDIS_PM_WOL_IPV4_TCP_SYN_SUPPORTED = 0x4,NDIS_PM_WOL_IPV6_TCP_SYN_SUPPORTED = 0x8,NDIS_PM_WOL_IPV4_DEST_ADDR_WILDCARD_SUPPORTED = 0x200,NDIS_PM_WOL_IPV6_DEST_ADDR_WILDCARD_SUPPORTED = 0x800,NDIS_PM_WOL_EAPOL_REQUEST_ID_MESSAGE_SUPPORTED = 0x10000,NDIS_PM_PROTOCOL_OFFLOAD_ARP_SUPPORTED = 0x1,NDIS_PM_PROTOCOL_OFFLOAD_NS_SUPPORTED = 0x2,NDIS_PM_PROTOCOL_OFFLOAD_80211_RSN_REKEY_SUPPORTED = 0x80,NDIS_PM_WOL_BITMAP_PATTERN_ENABLED = 0x1,NDIS_PM_WOL_MAGIC_PACKET_ENABLED = 0x2,NDIS_PM_WOL_IPV4_TCP_SYN_ENABLED = 0x4,NDIS_PM_WOL_IPV6_TCP_SYN_ENABLED = 0x8,NDIS_PM_WOL_IPV4_DEST_ADDR_WILDCARD_ENABLED = 0x200,NDIS_PM_WOL_IPV6_DEST_ADDR_WILDCARD_ENABLED = 0x800,NDIS_PM_WOL_EAPOL_REQUEST_ID_MESSAGE_ENABLED = 0x10000,NDIS_PM_PROTOCOL_OFFLOAD_ARP_ENABLED = 0x1,NDIS_PM_PROTOCOL_OFFLOAD_NS_ENABLED = 0x2,NDIS_PM_PROTOCOL_OFFLOAD_80211_RSN_REKEY_ENABLED = 0x80,NDIS_PM_WAKE_ON_LINK_CHANGE_ENABLED = 0x1,NDIS_PM_WOL_PRIORITY_LOWEST = 0xFFFFFFFF,NDIS_PM_WOL_PRIORITY_NORMAL = 0x10000000,NDIS_PM_WOL_PRIORITY_HIGHEST = 0x1,NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_LOWEST = 0xFFFFFFFF,NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_NORMAL = 0x10000000,NDIS_PM_PROTOCOL_OFFLOAD_PRIORITY_HIGHEST = 0x1,NDIS_PM_MAX_STRING_SIZE = 0x40,NDIS_PM_CAPABILITIES_REVISION_1 = 0x1,NDIS_PM_PARAMETERS_REVISION_1 = 0x1,};
enum MACRO_NETROOT_FLAG {NETROOT_FLAG_ENCLOSED_ALLOCATED = 0x10000,NETROOT_FLAG_DEVICE_NETROOT = 0x20000,NETROOT_FLAG_FINALIZATION_IN_PROGRESS = 0x40000,NETROOT_FLAG_NAME_ALREADY_REMOVED = 0x80000,NETROOT_INIT_KEY = 0x0,};
enum MACRO_NETWORK_OPEN {NETWORK_OPEN_ECP_IN_FLAG_DISABLE_HANDLE_COLLAPSING = 0x1,NETWORK_OPEN_ECP_IN_FLAG_DISABLE_HANDLE_DURABILITY = 0x2,NETWORK_OPEN_ECP_IN_FLAG_FORCE_BUFFERED_SYNCHRONOUS_IO_HACK = 0x80000000,NETWORK_OPEN_ECP_IN_FLAG_DISABLE_OPLOCKS = 0x4,};
enum MACRO_NOTIFICATION {NOTIFICATION_OPERATIONAL_CHANGE_CLASS_MASK = 0x2,NOTIFICATION_POWER_MANAGEMENT_CLASS_MASK = 0x4,NOTIFICATION_EXTERNAL_REQUEST_CLASS_MASK = 0x8,NOTIFICATION_MEDIA_STATUS_CLASS_MASK = 0x10,NOTIFICATION_MULTI_HOST_CLASS_MASK = 0x20,NOTIFICATION_DEVICE_BUSY_CLASS_MASK = 0x40,NOTIFICATION_NO_CLASS_EVENTS = 0x0,NOTIFICATION_OPERATIONAL_CHANGE_CLASS_EVENTS = 0x1,NOTIFICATION_POWER_MANAGEMENT_CLASS_EVENTS = 0x2,NOTIFICATION_EXTERNAL_REQUEST_CLASS_EVENTS = 0x3,NOTIFICATION_MEDIA_STATUS_CLASS_EVENTS = 0x4,NOTIFICATION_MULTI_HOST_CLASS_EVENTS = 0x5,NOTIFICATION_DEVICE_BUSY_CLASS_EVENTS = 0x6,NOTIFICATION_OPERATIONAL_EVENT_NO_CHANGE = 0x0,NOTIFICATION_OPERATIONAL_EVENT_CHANGE_REQUESTED = 0x1,NOTIFICATION_OPERATIONAL_EVENT_CHANGE_OCCURRED = 0x2,NOTIFICATION_OPERATIONAL_STATUS_AVAILABLE = 0x0,NOTIFICATION_OPERATIONAL_STATUS_TEMPORARY_BUSY = 0x1,NOTIFICATION_OPERATIONAL_STATUS_EXTENDED_BUSY = 0x2,NOTIFICATION_OPERATIONAL_OPCODE_NONE = 0x0,NOTIFICATION_OPERATIONAL_OPCODE_FEATURE_CHANGE = 0x1,NOTIFICATION_OPERATIONAL_OPCODE_FEATURE_ADDED = 0x2,NOTIFICATION_OPERATIONAL_OPCODE_UNIT_RESET = 0x3,NOTIFICATION_OPERATIONAL_OPCODE_FIRMWARE_CHANGED = 0x4,NOTIFICATION_OPERATIONAL_OPCODE_INQUIRY_CHANGED = 0x5,NOTIFICATION_POWER_EVENT_NO_CHANGE = 0x0,NOTIFICATION_POWER_EVENT_CHANGE_SUCCEEDED = 0x1,NOTIFICATION_POWER_EVENT_CHANGE_FAILED = 0x2,NOTIFICATION_POWER_STATUS_ACTIVE = 0x1,NOTIFICATION_POWER_STATUS_IDLE = 0x2,NOTIFICATION_POWER_STATUS_STANDBY = 0x3,NOTIFICATION_POWER_STATUS_SLEEP = 0x4,NOTIFICATION_MEDIA_EVENT_NO_EVENT = 0x0,NOTIFICATION_EXTERNAL_EVENT_NO_CHANGE = 0x0,NOTIFICATION_EXTERNAL_EVENT_BUTTON_DOWN = 0x1,NOTIFICATION_EXTERNAL_EVENT_BUTTON_UP = 0x2,NOTIFICATION_EXTERNAL_EVENT_EXTERNAL = 0x3,NOTIFICATION_EXTERNAL_STATUS_READY = 0x0,NOTIFICATION_EXTERNAL_STATUS_PREVENT = 0x1,NOTIFICATION_EXTERNAL_REQUEST_NONE = 0x0,NOTIFICATION_EXTERNAL_REQUEST_QUEUE_OVERRUN = 0x1,NOTIFICATION_EXTERNAL_REQUEST_PLAY = 0x101,NOTIFICATION_EXTERNAL_REQUEST_REWIND_BACK = 0x102,NOTIFICATION_EXTERNAL_REQUEST_FAST_FORWARD = 0x103,NOTIFICATION_EXTERNAL_REQUEST_PAUSE = 0x104,NOTIFICATION_EXTERNAL_REQUEST_STOP = 0x106,NOTIFICATION_EXTERNAL_REQUEST_ASCII_LOW = 0x200,NOTIFICATION_EXTERNAL_REQUEST_ASCII_HIGH = 0x2FF,NOTIFICATION_MEDIA_EVENT_NO_CHANGE = 0x0,NOTIFICATION_MEDIA_EVENT_EJECT_REQUEST = 0x1,NOTIFICATION_MEDIA_EVENT_NEW_MEDIA = 0x2,NOTIFICATION_MEDIA_EVENT_MEDIA_REMOVAL = 0x3,NOTIFICATION_MEDIA_EVENT_MEDIA_CHANGE = 0x4,NOTIFICATION_BUSY_EVENT_NO_EVENT = 0x0,NOTIFICATION_MULTI_HOST_EVENT_NO_CHANGE = 0x0,NOTIFICATION_MULTI_HOST_EVENT_CONTROL_REQUEST = 0x1,NOTIFICATION_MULTI_HOST_EVENT_CONTROL_GRANT = 0x2,NOTIFICATION_MULTI_HOST_EVENT_CONTROL_RELEASE = 0x3,NOTIFICATION_MULTI_HOST_STATUS_READY = 0x0,NOTIFICATION_MULTI_HOST_STATUS_PREVENT = 0x1,NOTIFICATION_MULTI_HOST_PRIORITY_NO_REQUESTS = 0x0,NOTIFICATION_MULTI_HOST_PRIORITY_LOW = 0x1,NOTIFICATION_MULTI_HOST_PRIORITY_MEDIUM = 0x2,NOTIFICATION_MULTI_HOST_PRIORITY_HIGH = 0x3,NOTIFICATION_BUSY_EVENT_NO_CHANGE = 0x0,NOTIFICATION_BUSY_EVENT_BUSY = 0x1,NOTIFICATION_BUSY_EVENT_LO_CHANGE = 0x2,NOTIFICATION_BUSY_STATUS_NO_EVENT = 0x0,NOTIFICATION_BUSY_STATUS_POWER = 0x1,NOTIFICATION_BUSY_STATUS_IMMEDIATE = 0x2,NOTIFICATION_BUSY_STATUS_DEFERRED = 0x3,};
enum MACRO_NULL_CONTEXT {NULL_CONTEXT = 0,};
enum MACRO_OLD_PARCLASS {OLD_PARCLASS = 0,};
enum MACRO_OPLOCK_LEVEL {OPLOCK_LEVEL_CACHE_READ = 0x1,OPLOCK_LEVEL_CACHE_HANDLE = 0x2,OPLOCK_LEVEL_CACHE_WRITE = 0x4,};
enum MACRO_PCI_VERIFIER {PCI_VERIFIER_DETECTED_VIOLATION = 0xF6,};
enum MACRO_PLATFORM_INT {PLATFORM_INT_PMI = 1,PLATFORM_INT_INIT = 2,PLATFORM_INT_CPE = 3,};
enum MACRO_PNP_DETECTED {PNP_DETECTED_FATAL_ERROR = 0xCA,};
enum MACRO_POOL_TAGGING {POOL_TAGGING = 1,};
enum MACRO_POWER_ACTION {POWER_ACTION_QUERY_ALLOWED = 0x1,POWER_ACTION_UI_ALLOWED = 0x2,POWER_ACTION_OVERRIDE_APPS = 0x4,POWER_ACTION_HIBERBOOT = 0x8,POWER_ACTION_PSEUDO_TRANSITION = 0x8000000,POWER_ACTION_LIGHTEST_FIRST = 0x10000000,POWER_ACTION_LOCK_CONSOLE = 0x20000000,POWER_ACTION_DISABLE_WAKES = 0x40000000,POWER_ACTION_CRITICAL = 0x80000000,POWER_LEVEL_USER_NOTIFY_TEXT = 0x1,POWER_LEVEL_USER_NOTIFY_SOUND = 0x2,POWER_LEVEL_USER_NOTIFY_EXEC = 0x4,POWER_USER_NOTIFY_BUTTON = 0x8,POWER_USER_NOTIFY_SHUTDOWN = 0x10,POWER_USER_NOTIFY_FORCED_SHUTDOWN = 0x20,POWER_FORCE_TRIGGER_RESET = 0x80000000,};
enum MACRO_POWER_DEVICE {POWER_DEVICE_IDLE_POLICY_PERFORMANCE = 0,POWER_DEVICE_IDLE_POLICY_CONSERVATIVE = 1,POWER_SYSTEM_MAXIMUM = 7,};
enum MACRO_PROCESS_LUID {PROCESS_LUID_DOSDEVICES_ONLY = 0x1,PROCESS_HANDLE_EXCEPTIONS_ENABLED = 0x1,PROCESS_HANDLE_TRACING_MAX_STACKS = 0x10,};
enum MACRO_PROVISIONING {PROVISIONING_TYPE_UNKNOWN = 0x0,PROVISIONING_TYPE_RESOURCE = 0x1,PROVISIONING_TYPE_THIN = 0x2,};
enum MACRO_QUOTA_LIMITS {QUOTA_LIMITS_HARDWS_MIN_ENABLE = 0x1,QUOTA_LIMITS_HARDWS_MIN_DISABLE = 0x2,QUOTA_LIMITS_HARDWS_MAX_ENABLE = 0x4,QUOTA_LIMITS_HARDWS_MAX_DISABLE = 0x8,QUOTA_LIMITS_USE_DEFAULT_LIMITS = 0x10,};
enum MACRO_RDBSS_MANAGE {RDBSS_MANAGE_SRV_CALL_EXTENSION = 0x1,RDBSS_MANAGE_NET_ROOT_EXTENSION = 0x2,RDBSS_MANAGE_V_NET_ROOT_EXTENSION = 0x4,RDBSS_MANAGE_FCB_EXTENSION = 0x8,RDBSS_MANAGE_SRV_OPEN_EXTENSION = 0x10,RDBSS_MANAGE_FOBX_EXTENSION = 0x20,RDBSS_NO_DEFERRED_CACHE_READAHEAD = 0x1000,};
enum MACRO_READ_FAILURE {READ_FAILURE = 5,WRITE_FAILURE = 6,};
enum MACRO_REMOTE_POWER {REMOTE_POWER_ON_CAPABLE_BIT = 17,REMOTE_POWER_ON_CAPABLE = 131072,};
enum MACRO_REQUEST_INFO {REQUEST_INFO_NO_CACHE_FLAG = 0x1,REQUEST_INFO_PAGING_IO_FLAG = 0x2,REQUEST_INFO_SEQUENTIAL_IO_FLAG = 0x4,REQUEST_INFO_TEMPORARY_FLAG = 0x8,REQUEST_INFO_WRITE_THROUGH_FLAG = 0x10,};
enum MACRO_RETURN_SMART {RETURN_SMART_STATUS = 0xDA,};
enum MACRO_RX_PROCESSOR {RX_PROCESSOR_ARCHITECTURE_INTEL = 0,RX_PROCESSOR_ARCHITECTURE_MIPS = 1,RX_PROCESSOR_ARCHITECTURE_ALPHA = 2,RX_PROCESSOR_ARCHITECTURE_PPC = 3,RX_PROCESSOR_ARCHITECTURE_UNKNOWN = 65535,};
enum MACRO_RX_SCAVENGER {RX_SCAVENGER_FINALIZATION_TIME_INTERVAL = 100000000,RX_MAX_SCAVENGER_TIME_INTERVAL = 120,RX_SCAVENGER_ENTRY_TYPE_MARKER = 1,RX_SCAVENGER_ENTRY_TYPE_FCB = 2,RX_SCAVENGER_OP_PURGE = 1,RX_SCAVENGER_OP_CLOSE = 2,RX_SCAVENGER_INITIATED_OPERATION = 1,RX_SCAVENGER_MUTEX_ACQUIRED = 1,};
enum MACRO_RemoveTarget {RemoveTarget = 11,};
enum MACRO_SCSIOP_DENON {SCSIOP_DENON_EJECT_DISC = 0xE6,SCSIOP_DENON_STOP_AUDIO = 0xE7,SCSIOP_DENON_PLAY_AUDIO = 0xE8,SCSIOP_DENON_READ_TOC = 0xE9,SCSIOP_DENON_READ_SUBCODE = 0xEB,};
enum MACRO_SCSI_MAXIMUM {SCSI_MAXIMUM_BUSES_PER_ADAPTER = 255,SCSI_MAXIMUM_TARGETS_PER_BUS = 128,SCSI_MAXIMUM_LUNS_PER_TARGET = 255,SCSI_MINIMUM_PHYSICAL_BREAKS = 16,SCSI_MAXIMUM_PHYSICAL_BREAKS = 255,SCSI_MAXIMUM_BUSES = 8,SCSI_MAXIMUM_TARGETS = 8,SCSI_MAXIMUM_LOGICAL_UNITS = 8,};
enum MACRO_SDBUS_DRIVER {SDBUS_DRIVER_VERSION_1 = 0x100,SDBUS_DRIVER_VERSION_2 = 0x200,SDBUS_DRIVER_VERSION_3 = 0x300,};
enum MACRO_SECURITY_APP {SECURITY_APP_PACKAGE_BASE_RID = 0x2,SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT = 0x2,SECURITY_APP_PACKAGE_RID_COUNT = 0x8,SECURITY_CAPABILITY_BASE_RID = 0x3,SECURITY_BUILTIN_CAPABILITY_RID_COUNT = 0x2,SECURITY_CAPABILITY_RID_COUNT = 0x5,SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE = 0x1,SECURITY_CAPABILITY_INTERNET_CLIENT = 0x1,SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER = 0x2,SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER = 0x3,SECURITY_CAPABILITY_PICTURES_LIBRARY = 0x4,SECURITY_CAPABILITY_VIDEOS_LIBRARY = 0x5,SECURITY_CAPABILITY_MUSIC_LIBRARY = 0x6,SECURITY_CAPABILITY_DOCUMENTS_LIBRARY = 0x7,SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION = 0x8,SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES = 0x9,SECURITY_CAPABILITY_REMOVABLE_STORAGE = 0xA,SECURITY_CAPABILITY_INTERNET_EXPLORER = 0x1000,SECURITY_MANDATORY_UNTRUSTED_RID = 0x0,SECURITY_MANDATORY_LOW_RID = 0x1000,SECURITY_MANDATORY_MEDIUM_RID = 0x2000,SECURITY_MANDATORY_MEDIUM_PLUS_RID = 0x2100,SECURITY_MANDATORY_HIGH_RID = 0x3000,SECURITY_MANDATORY_SYSTEM_RID = 0x4000,SECURITY_MANDATORY_PROTECTED_PROCESS_RID = 0x5000,SECURITY_MANDATORY_MAXIMUM_USER_RID = 0x4000,SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT = 0x1,SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID = 0x1,SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID = 0x2,SECURITY_TRUSTED_INSTALLER_RID1 = 0x38FB89B5,SECURITY_TRUSTED_INSTALLER_RID2 = 0xCBC28419,SECURITY_TRUSTED_INSTALLER_RID3 = 0x6D236C5C,SECURITY_TRUSTED_INSTALLER_RID4 = 0x6E770057,SECURITY_TRUSTED_INSTALLER_RID5 = 0x876402C0,};
enum MACRO_SOC_CRITICAL {SOC_CRITICAL_DEVICE_REMOVED = 0x14E,};
enum MACRO_SRVCALL_FLAG {SRVCALL_FLAG_NO_CONNECTION_ALLOWED = 0x10000,SRVCALL_FLAG_NO_WRITES_ALLOWED = 0x20000,SRVCALL_FLAG_NO_DELETES_ALLOWED = 0x40000,};
enum MACRO_SRVOPEN_FLAG {SRVOPEN_FLAG_ENCLOSED_ALLOCATED = 0x10000,SRVOPEN_FLAG_FOBX_USED = 0x20000,SRVOPEN_FLAG_SHAREACCESS_UPDATED = 0x40000,SRVOPEN_INIT_KEY = 0x0,};
enum MACRO_STATE_ACTIVE {STATE_ACTIVE_OPTIMIZED = 0,STATE_ACTIVE_UNOPTIMIZED = 1,STATE_STANDBY = 2,STATE_UNAVAILABLE = 3,STATE_NOT_USED = 16,};
enum MACRO_STATE_CHANGE {STATE_CHANGE_LUN = 0x1,STATE_CHANGE_TARGET = 0x2,STATE_CHANGE_BUS = 0x4,};
enum MACRO_STORAGE_IDLE {STORAGE_IDLE_POWERUP_REASON_VERSION_V1 = 1,STORAGE_EVENT_NOTIFICATION_VERSION_V1 = 1,STORAGE_EVENT_MEDIA_STATUS = 1,STORAGE_EVENT_DEVICE_STATUS = 2,STORAGE_EVENT_DEVICE_OPERATION = 4,STORAGE_EVENT_ALL = 7,};
enum MACRO_STORAGE_SCSI {STORAGE_SCSI_INFO_EXCEPTIONS_PageSavable_ID = 1,STORAGE_SCSI_INFO_EXCEPTIONS_Flags_ID = 2,STORAGE_SCSI_INFO_EXCEPTIONS_MRIE_ID = 3,STORAGE_SCSI_INFO_EXCEPTIONS_Padding_ID = 4,STORAGE_SCSI_INFO_EXCEPTIONS_IntervalTimer_ID = 5,STORAGE_SCSI_INFO_EXCEPTIONS_ReportCount_ID = 6,};
enum MACRO_STOR_ADAPTER {STOR_ADAPTER_FEATURE_RESERVED = 0x1,STOR_ADAPTER_FEATURE_STOP_UNIT_DURING_POWER_DOWN = 0x2,};
enum MACRO_STOR_ADDRESS {STOR_ADDRESS_TYPE_UNKNOWN = 0x0,STOR_ADDRESS_TYPE_BTL8 = 0x1,STOR_ADDRESS_TYPE_MAX = 0xFFFF,STOR_ADDR_BTL8_ADDRESS_LENGTH = 0x4,};
enum MACRO_STOR_CURRENT {STOR_CURRENT_LOG_INTERFACE_REVISION = 0x100,};
enum MACRO_STOR_FEATURE {STOR_FEATURE_VIRTUAL_MINIPORT = 0x1,STOR_FEATURE_ATA_PASS_THROUGH = 0x2,STOR_FEATURE_FULL_PNP_DEVICE_CAPABILITIES = 0x4,STOR_FEATURE_DUMP_POINTERS = 0x8,STOR_FEATURE_DEVICE_NAME_NO_SUFFIX = 0x10,STOR_FEATURE_DUMP_RESUME_CAPABLE = 0x20,STOR_FEATURE_DEVICE_DESCRIPTOR_FROM_ATA_INFO_VPD = 0x40,};
enum MACRO_STREAM_CLASS {STREAM_CLASS_VERSION_20 = 0x200,};
enum MACRO_STRINGFORMAT {STRINGFORMAT_ASCII = 0x1,STRINGFORMAT_DBCS = 0x2,STRINGFORMAT_UNICODE = 0x3,STRINGFORMAT_BINARY = 0x4,};
enum MACRO_SYSTEM_AUDIT {SYSTEM_AUDIT_ACE_TYPE = 0x2,SYSTEM_ALARM_ACE_TYPE = 0x3,};
enum MACRO_SYSTEM_IMAGE {SYSTEM_IMAGE_BAD_SIGNATURE = 0xC3,};
enum MACRO_THREAD_STUCK {THREAD_STUCK_IN_DEVICE_DRIVER = 0xEA,THREAD_STUCK_IN_DEVICE_DRIVER_M = 0x100000EA,};
enum MACRO_TOKEN_SOURCE {TOKEN_SOURCE_LENGTH = 8,};
enum MACRO_TRUST_E_FAIL {TRUST_E_FAIL = 0x800B010B,};
enum MACRO_TYPE_CHANNEL {STREAM_TYPE_CHANNEL = 1,PACKET_TYPE_CHANNEL = 2,};
enum MACRO_UNINITIALIZE {UNINITIALIZE_CACHE_MAPS = 1,};
enum MACRO_USBD_DEVHACK {USBD_DEVHACK_SLOW_ENUMERATION = 0x1,USBD_DEVHACK_DISABLE_SN = 0x2,USBD_DEVHACK_SET_DIAG_ID = 0x4,};
enum MACRO_USE_PLATFORM {USE_PLATFORM_CLOCK_BIT = 15,USE_PLATFORM_CLOCK = 32768,};
enum MACRO_VIDEO_DEVICE {VIDEO_DEVICE_COLOR = 0x1,VIDEO_OPTIONAL_GAMMET_TABLE = 0x2,VIDEO_COLOR_LUT_DATA_FORMAT_RGB256WORDS = 0x1,VIDEO_COLOR_LUT_DATA_FORMAT_PRIVATEFORMAT = 0x80000000,};
enum MACRO_VIDEO_DRIVER {VIDEO_DRIVER_INIT_FAILURE = 0xB4,};
enum MACRO_VIDEO_MEMORY {VIDEO_MEMORY_MANAGEMENT_INTERNAL = 0x10E,};
enum MACRO_VIDEO_REASON {VIDEO_REASON_NONE = 0,VIDEO_REASON_POLICY1 = 1,VIDEO_REASON_POLICY2 = 2,VIDEO_REASON_POLICY3 = 3,VIDEO_REASON_POLICY4 = 4,VIDEO_REASON_LOCK = 5,VIDEO_REASON_FAILED_ROTATION = 5,VIDEO_REASON_ALLOCATION = 6,VIDEO_REASON_SCRATCH = 8,VIDEO_REASON_CONFIGURATION = 9,VIDEO_MAX_REASON = 9,VIDEO_AGP_RATE_1X = 1,VIDEO_AGP_RATE_2X = 2,VIDEO_AGP_RATE_4X = 4,VIDEO_AGP_RATE_8X = 8,VIDEO_RANGE_PASSIVE_DECODE = 1,VIDEO_RANGE_10_BIT_DECODE = 2,};
enum MACRO_WRITES_VALID {RECOVERED_WRITES_VALID = 0x1,UNRECOVERED_WRITES_VALID = 0x2,RECOVERED_READS_VALID = 0x4,UNRECOVERED_READS_VALID = 0x8,WRITE_COMPRESSION_INFO_VALID = 0x10,READ_COMPRESSION_INFO_VALID = 0x20,};
enum MACRO_WmiMonitorID {WmiMonitorID_ProductCodeID_ID = 1,WmiMonitorID_SerialNumberID_ID = 2,WmiMonitorID_ManufacturerName_ID = 3,WmiMonitorID_WeekOfManufacture_ID = 4,WmiMonitorID_YearOfManufacture_ID = 5,WmiMonitorID_UserFriendlyNameLength_ID = 6,WmiMonitorID_UserFriendlyName_ID = 7,};
enum MACRO__CRT_RPTHOOK {_CRT_RPTHOOK_INSTALL = 0,_CRT_RPTHOOK_REMOVE = 1,};
enum MACRO__HEAPBADNODE {_HEAPBADNODE = -4,};
enum MACRO__MM_PCOMCTRL {_MM_PCOMCTRL_LT = 0,_MM_PCOMCTRL_LE = 1,_MM_PCOMCTRL_GT = 2,_MM_PCOMCTRL_GE = 3,_MM_PCOMCTRL_EQ = 4,_MM_PCOMCTRL_NEQ = 5,_MM_PCOMCTRL_FALSE = 6,_MM_PCOMCTRL_TRUE = 7,_MM_PERMUTE2_COPY = 0,_MM_PERMUTE2_ZEROIF1 = 2,_MM_PERMUTE2_ZEROIF0 = 3,};
enum MACRO__NLSCMPERROR {_NLSCMPERROR = 2147483647,};
enum MACRO__WIN32_WINNT {_WIN32_WINNT = 0x602,};
typedef struct _MAP_REGISTER_ENTRY MAP_REGISTER_ENTRY;
typedef struct _MEMORY_POWER_STATE MEMORY_POWER_STATE;
typedef struct _MLDV2_QUERY_HEADER MLDV2_QUERY_HEADER;
typedef struct _MOUNTDEV_UNIQUE_ID MOUNTDEV_UNIQUE_ID;
typedef struct _0D819AFF13E0F3A45F15772F26E3677A MRXSHADOW_SRV_OPEN;
typedef struct msaudio1waveformat_tag MSAUDIO1WAVEFORMAT;
typedef struct _MSFC_FC4STATISTICS MSFC_FC4STATISTICS;
typedef struct _MSNdis_CoLinkSpeed MSNdis_CoLinkSpeed;
typedef struct _MSNdis_TransmitsOk MSNdis_TransmitsOk;
typedef struct _MSWmi_ProviderInfo MSWmi_ProviderInfo;
typedef struct _NAME_CACHE_CONTROL_ NAME_CACHE_CONTROL;
typedef struct _NDIS_CO_LINK_SPEED NDIS_CO_LINK_SPEED;
typedef struct _NDIS_IP_OPER_STATE NDIS_IP_OPER_STATE;
typedef struct _NDIS_MAC_LINE_DOWN NDIS_MAC_LINE_DOWN;
typedef struct _NDIS_OBJECT_HEADER NDIS_OBJECT_HEADER;
typedef struct _NDIS_PM_PARAMETERS NDIS_PM_PARAMETERS;
typedef struct _NDIS_RSS_PROCESSOR NDIS_RSS_PROCESSOR;
typedef struct _NDIS_VAR_DATA_DESC NDIS_VAR_DATA_DESC;
typedef struct _NDIS_WAN_GET_STATS NDIS_WAN_GET_STATS;
typedef struct _NDIS_WAN_LINE_DOWN NDIS_WAN_LINE_DOWN;
typedef struct _NDIS_WLAN_BSSID_EX NDIS_WLAN_BSSID_EX;
typedef struct _NDIS_WWAN_PIN_INFO NDIS_WWAN_PIN_INFO;
typedef struct _NDIS_WWAN_PIN_LIST NDIS_WWAN_PIN_LIST;
typedef struct _NDIS_WWAN_SMS_READ NDIS_WWAN_SMS_READ;
typedef struct _NDIS_WWAN_SMS_SEND NDIS_WWAN_SMS_SEND;
typedef struct nd_redirect ND_REDIRECT_HEADER;
typedef struct _NETWORK_ADDRESS_IP NETWORK_ADDRESS_IP;
typedef struct _NET_IF_INFORMATION NET_IF_INFORMATION;
typedef struct oliadpcmwaveformat_tag OLIADPCMWAVEFORMAT;
typedef struct _OPLOCK_KEY_CONTEXT OPLOCK_KEY_CONTEXT;
typedef struct _AAL_PARAMETERS_IE *PAAL_PARAMETERS_IE;
typedef union _AMD_L1_CACHE_INFO *PAMD_L1_CACHE_INFO;
typedef union _AMD_L2_CACHE_INFO *PAMD_L2_CACHE_INFO;
typedef union _AMD_L3_CACHE_INFO *PAMD_L3_CACHE_INFO;
typedef struct _PARALLEL_CHIP_MODE PARALLEL_CHIP_MODE;
typedef struct _ARBITER_INTERFACE *PARBITER_INTERFACE;
typedef struct _ATM_LIJ_CALLID_IE *PATM_LIJ_CALLID_IE;
typedef struct _AVCPRECONNECTINFO *PAVCPRECONNECTINFO;
typedef struct _AVC_MULTIFUNC_IRB *PAVC_MULTIFUNC_IRB;
typedef struct _AddiSNSServer_OUT *PAddiSNSServer_OUT;
typedef struct _BDA_DRM_DRMSTATUS *PBDA_DRM_DRMSTATUS;
typedef struct _BDA_TABLE_SECTION *PBDA_TABLE_SECTION;
typedef struct _BTHHFP_DESCRIPTOR *PBTHHFP_DESCRIPTOR;
typedef struct _BTHX_CAPABILITIES *PBTHX_CAPABILITIES;
typedef struct _D8D7C26B9FDE94F9B7E724B17C76CE36 PCAUTOMATION_TABLE;
typedef struct _CDROM_READ_TOC_EX *PCDROM_READ_TOC_EX;
typedef struct _CIP_VALIDATE_INFO *PCIP_VALIDATE_INFO;
typedef struct _PCI_AGP_CAPABILITY PCI_AGP_CAPABILITY;
typedef struct _CLASS_VPD_B0_DATA *PCLASS_VPD_B0_DATA;
typedef struct _CLASS_VPD_B1_DATA *PCLASS_VPD_B1_DATA;
typedef struct _CLASS_VPD_B2_DATA *PCLASS_VPD_B2_DATA;
typedef struct _CLASS_WORKING_SET *PCLASS_WORKING_SET;
typedef struct _CLS_IO_STATISTICS *PCLS_IO_STATISTICS;
typedef struct _CMP_MONITOR_PLUGS *PCMP_MONITOR_PLUGS;
typedef struct _COMMIT_POLICY_OUT *PCOMMIT_POLICY_OUT;
typedef struct _CONFIG_ROM_HEADER *PCONFIG_ROM_HEADER;
typedef struct _CONTROLLER_OBJECT *PCONTROLLER_OBJECT;
typedef struct _0563D17F902D53081481BDEBB46755BB *PCO_ADDRESS_FAMILY;
typedef struct _CO_TAPI_LINE_CAPS *PCO_TAPI_LINE_CAPS;
typedef struct _PCPROPERTY_REQUEST PCPROPERTY_REQUEST;
typedef struct _CSRT_TABLE_HEADER *PCSRT_TABLE_HEADER;
typedef struct _CSV_CONTROL_PARAM *PCSV_CONTROL_PARAM;
typedef struct _DATA_BLOCK_HEADER *PDATA_BLOCK_HEADER;
typedef struct _DEVICE_MEDIA_INFO *PDEVICE_MEDIA_INFO;
typedef struct _DIAGNOSTIC_BUFFER *PDIAGNOSTIC_BUFFER;
typedef struct _DICTIONARY_HEADER *PDICTIONARY_HEADER;
typedef union _DIRECTORY_ENTRIES *PDIRECTORY_ENTRIES;
typedef struct _DISK_CLUSTER_INFO *PDISK_CLUSTER_INFO;
typedef struct _DISK_SAN_SETTINGS *PDISK_SAN_SETTINGS;
typedef struct DL_TEREDO_ADDRESS *PDL_TEREDO_ADDRESS;
typedef struct DL_TUNNEL_ADDRESS *PDL_TUNNEL_ADDRESS;
typedef struct _DMA_TRANSFER_INFO *PDMA_TRANSFER_INFO;
typedef struct DOT11_ENCAP_ENTRY *PDOT11_ENCAP_ENTRY;
typedef struct DOT11_IBSS_PARAMS *PDOT11_IBSS_PARAMS;
typedef struct DOT11_PHY_ID_LIST *PDOT11_PHY_ID_LIST;
typedef struct DOT11_PMKID_ENTRY *PDOT11_PMKID_ENTRY;
typedef struct _DOT11_WEP_OFFLOAD *PDOT11_WEP_OFFLOAD;
typedef struct _DOT11_WFD_CHANNEL *PDOT11_WFD_CHANNEL;
typedef struct _DOT4_DC_OPEN_DATA *PDOT4_DC_OPEN_DATA;
typedef struct _DSM_QueryLBPolicy *PDSM_QueryLBPolicy;
typedef struct _DSM_QueryUniqueId *PDSM_QueryUniqueId;
typedef struct _DXGKRNL_INTERFACE *PDXGKRNL_INTERFACE;
typedef struct _DXGK_CHILD_STATUS *PDXGK_CHILD_STATUS;
typedef struct _ENCRYPTION_BUFFER *PENCRYPTION_BUFFER;
typedef struct _FCP_SEND_RESPONSE *PFCP_SEND_RESPONSE;
typedef struct _FILE_LAYOUT_ENTRY *PFILE_LAYOUT_ENTRY;
typedef struct _FILE_REGION_INPUT *PFILE_REGION_INPUT;
typedef struct _FLT_CALLBACK_DATA *PFLT_CALLBACK_DATA;
typedef struct _FORMAT_DESCRIPTOR *PFORMAT_DESCRIPTOR;
typedef struct _FORMAT_PARAMETERS *PFORMAT_PARAMETERS;
typedef struct _GEN_GET_TIME_CAPS *PGEN_GET_TIME_CAPS;
typedef struct HBA_FC4Statistics *PHBA_FC4STATISTICS;
typedef struct HBA_Pty_EventInfo *PHBA_PTY_EVENTINFO;
typedef struct _HID_DRIVER_CONFIG *PHID_DRIVER_CONFIG;
typedef struct _IDE_REQUEST_BLOCK *PIDE_REQUEST_BLOCK;
typedef struct _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;
typedef struct _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;
typedef struct _IO_STACK_LOCATION *PIO_STACK_LOCATION;
typedef struct IPRouteLookupData *PIPRouteLookupData;
typedef struct _IR_RECEIVE_PARAMS *PIR_RECEIVE_PARAMS;
typedef struct _IR_TRANSMIT_CHUNK *PIR_TRANSMIT_CHUNK;
typedef struct _IVHD_DEVICE_ENTRY *PIVHD_DEVICE_ENTRY;
typedef struct _IVRS_BLOCK_HEADER *PIVRS_BLOCK_HEADER;
typedef struct _IdleStateBucketEx *PIdleStateBucketEx;
typedef struct _KBUGCHECK_DUMP_IO *PKBUGCHECK_DUMP_IO;
typedef struct _DCCCDBDB2D2AC461237A75FB18C0449E *PKSCORRELATED_TIME;
typedef struct _A156F3783D3AF89709906294AAADEE96 *PKSDATARANGE_AUDIO;
typedef struct _DCA1691E12E502D611F5426518CFEFB5 *PKSDATARANGE_MUSIC;
typedef struct _KSDEVICE_DISPATCH *PKSDEVICE_DISPATCH;
typedef struct _9E1ED747B9CD39E7270D6384935529E0 *PKSDS3D_BUFFER_ALL;
typedef struct _AC9A5C69A2E8BFD7F981D24477498145 *PKSDS3D_ITD_PARAMS;
typedef struct _A07373D2A5755254DCD028456AB4EC3B *PKSEVENT_TIME_MARK;
typedef struct _2CC32A13BC47B0ADD425440A5881DEFA *PKSFASTMETHOD_ITEM;
typedef struct _KSFILTER_DISPATCH *PKSFILTER_DISPATCH;
typedef struct _KSNODE_DESCRIPTOR *PKSNODE_DESCRIPTOR;
typedef struct _0E076CBD8F5A7ED08B697C5009EDFCFF *PKSPROPERTY_SERIAL;
typedef struct _EE7A277138FF7ACF03A1E9A4C6095702 *PKSPROPERTY_VALUES;
typedef struct _3878B18F15C290CF7BC80116234DE41C *PKSQUALITY_MANAGER;
typedef struct _26873349DB0A36B1F3161FA857CA70AC *PKSRATE_CAPABILITY;
typedef struct _BFD35443418CDCF1187E122E74A5B815 *PKSVPSURFACEPARAMS;
typedef struct _F0DE5EAC046D7D32AA534DC253D377C4 *PKSWAVE_COMPATCAPS;
typedef struct tagKS_BDA_FRAME_INFO *PKS_BDA_FRAME_INFO;
typedef struct _KS_DVDCOPY_BUSKEY *PKS_DVDCOPY_BUSKEY;
typedef struct _KS_DVDCOPY_REGION *PKS_DVDCOPY_REGION;
typedef struct tagKS_MPEG1VIDEOINFO *PKS_MPEG1VIDEOINFO;
typedef struct tagKS_MPEGVIDEOINFO2 *PKS_MPEGVIDEOINFO2;
typedef struct tagKS_VBI_FRAME_INFO *PKS_VBI_FRAME_INFO;
typedef struct _KUSER_SHARED_DATA *PKUSER_SHARED_DATA;
typedef struct _PLATFORM_INTERRUPT PLATFORM_INTERRUPT;
typedef struct _LINE_ADDRESS_CAPS *PLINE_ADDRESS_CAPS;
typedef struct _LINE_EXTENSION_ID *PLINE_EXTENSION_ID;
typedef struct _LLDP_ADMIN_CONFIG *PLLDP_ADMIN_CONFIG;
typedef struct _LOOKASIDE_LIST_EX *PLOOKASIDE_LIST_EX;
typedef struct _LoginToTarget_OUT *PLoginToTarget_OUT;
typedef struct _MECHANICAL_STATUS *PMECHANICAL_STATUS;
typedef struct _MEMORY_POWER_NODE *PMEMORY_POWER_NODE;
typedef struct _MINIPORT_MAPPINGS *PMINIPORT_MAPPINGS;
typedef union _MM_PREFETCH_FLAGS *PMM_PREFETCH_FLAGS;
typedef struct _MODE_CACHING_PAGE *PMODE_CACHING_PAGE;
typedef struct _MODE_CONTROL_PAGE *PMODE_CONTROL_PAGE;
typedef struct _MPIOMoveDevice_IN *PMPIOMoveDevice_IN;
typedef struct _MPIO_VERSION_INFO *PMPIO_VERSION_INFO;
typedef struct _MSFC_AdapterEvent *PMSFC_AdapterEvent;
typedef struct _MSMCAEvent_Header *PMSMCAEvent_Header;
typedef struct _MSNdis_CoVendorId *PMSNdis_CoVendorId;
typedef struct _MSNdis_MacOptions *PMSNdis_MacOptions;
typedef struct _MSNdis_MediaInUse *PMSNdis_MediaInUse;
typedef struct _MSNdis_RSSEnabled *PMSNdis_RSSEnabled;
typedef struct _MSNdis_ReceivesOk *PMSNdis_ReceivesOk;
typedef struct _MSNdis_WmiOffload *PMSNdis_WmiOffload;
typedef struct _MSSerial_PortName *PMSSerial_PortName;
typedef struct _MSV1_0_LM20_LOGON *PMSV1_0_LM20_LOGON;
typedef struct _MSWmi_PnPDeviceId *PMSWmi_PnPDeviceId;
typedef struct _MSiSCSI_NICConfig *PMSiSCSI_NICConfig;
typedef struct _NABTS_BUFFER_LINE *PNABTS_BUFFER_LINE;
typedef struct _NDIS_802_11_PMKID *PNDIS_802_11_PMKID;
typedef struct _NDIS_ENUM_FILTERS *PNDIS_ENUM_FILTERS;
typedef struct _NDIS_MAC_FRAGMENT *PNDIS_MAC_FRAGMENT;
typedef struct _NDIS_WAN_FRAGMENT *PNDIS_WAN_FRAGMENT;
typedef struct _NDIS_WWAN_SET_PIN *PNDIS_WWAN_SET_PIN;
typedef union _NET_BUFFER_HEADER *PNET_BUFFER_HEADER;
typedef struct _NLB_HOOK_IP_TUPLE *PNLB_HOOK_IP_TUPLE;
typedef struct _OFFLOAD_ALGO_INFO *POFFLOAD_ALGO_INFO;
typedef struct _PO_FX_COMPONENT_V1 PO_FX_COMPONENT_V1;
typedef struct _PO_FX_COMPONENT_V2 PO_FX_COMPONENT_V2;
typedef struct _PCI_COMMON_CONFIG *PPCI_COMMON_CONFIG;
typedef struct _PCI_COMMON_HEADER *PPCI_COMMON_HEADER;
typedef struct _PCI_PM_CAPABILITY *PPCI_PM_CAPABILITY;
typedef struct _CLS_SCAN_CONTEXT **PPCLS_SCAN_CONTEXT;
typedef struct _D96EA640170F725CA11FCBCFEE3FF36E *PPCNODE_DESCRIPTOR;
typedef struct _PMI_CONFIGURATION *PPMI_CONFIGURATION;
typedef struct _PM_DISPATCH_TABLE *PPM_DISPATCH_TABLE;
typedef struct _2313F5502F168B8A201E3DA7C3B8E19D PPM_WMI_IDLE_STATE;
typedef struct _E6A0A6AFD97C9603961F7D97D8E3F005 PPM_WMI_PERF_STATE;
typedef IPortWavePciStream *PPORTWAVEPCISTREAM;
typedef struct _PingIPAddress_OUT *PPingIPAddress_OUT;
typedef struct _PREFIX_TABLE_ENTRY PREFIX_TABLE_ENTRY;
typedef struct _REPARSE_INDEX_KEY *PREPARSE_INDEX_KEY;
typedef struct _KRESOURCEMANAGER *PRKRESOURCEMANAGER;
typedef void PROTOCOL_UNINSTALL(void);
typedef struct _A62BA18312609C33C34CD1E15FBCE3E3 PRO_PARAMETER_LIST;
typedef struct _RTL_BALANCED_NODE *PRTL_BALANCED_NODE;
typedef struct _BINDING_HANDLE *PRX_BINDING_HANDLE;
typedef struct _SCRUB_DATA_OUTPUT *PSCRUB_DATA_OUTPUT;
typedef struct _SCSI_INQUIRY_DATA *PSCSI_INQUIRY_DATA;
typedef struct _SCSI_PASS_THROUGH *PSCSI_PASS_THROUGH;
typedef struct _SD_ENUM_SDS_ENTRY *PSD_ENUM_SDS_ENTRY;
typedef struct _SD_ENUM_SDS_INPUT *PSD_ENUM_SDS_INPUT;
typedef struct _SE_ACCESS_REQUEST *PSE_ACCESS_REQUEST;
typedef struct _SINGLE_LIST_ENTRY *PSINGLE_LIST_ENTRY;
typedef struct _SMARTCARD_REQUEST *PSMARTCARD_REQUEST;
typedef struct _sockaddr_in6_pair *PSOCKADDR_IN6_PAIR;
typedef struct _STOR_REQUEST_INFO *PSTOR_REQUEST_INFO;
typedef union _STOR_SLIST_HEADER *PSTOR_SLIST_HEADER;
typedef struct _ScsiReportLuns_IN *PScsiReportLuns_IN;
typedef struct _SendCTPassThru_IN *PSendCTPassThru_IN;
typedef struct _SetDSMCounters_IN *PSetDSMCounters_IN;
typedef struct _SetFC3MgmtInfo_IN *PSetFC3MgmtInfo_IN;
typedef struct _TAPE_GET_POSITION *PTAPE_GET_POSITION;
typedef struct _TAPE_INIT_DATA_EX *PTAPE_INIT_DATA_EX;
typedef struct _TAPE_SET_POSITION *PTAPE_SET_POSITION;
typedef struct _TDI_ACTION_HEADER *PTDI_ACTION_HEADER;
typedef struct _TDI_DATAGRAM_INFO *PTDI_DATAGRAM_INFO;
typedef struct _TDI_ENDPOINT_INFO *PTDI_ENDPOINT_INFO;
typedef struct _TDI_PROVIDER_INFO *PTDI_PROVIDER_INFO;
typedef struct _TOKEN_USER_CLAIMS *PTOKEN_USER_CLAIMS;
typedef struct _PTP_VENDOR_DATA_IN PTP_VENDOR_DATA_IN;
typedef struct _TRACK_INFORMATION *PTRACK_INFORMATION;
typedef struct _TRANSPORT_ADDRESS *PTRANSPORT_ADDRESS;
typedef struct _UNIT_ISOCH_PARAMS *PUNIT_ISOCH_PARAMS;
typedef struct _UNMAP_LIST_HEADER *PUNMAP_LIST_HEADER;
typedef struct _2361741245AFF1C51192B59F7339350B *PUSBCAMD_INTERFACE;
typedef union _USB_DEVICE_STATUS *PUSB_DEVICE_STATUS;
typedef struct _VIDEO_BANK_SELECT *PVIDEO_BANK_SELECT;
typedef struct _VIDEO_CHILD_STATE *PVIDEO_CHILD_STATE;
typedef struct _VIDEO_I2C_CONTROL *PVIDEO_I2C_CONTROL;
typedef struct _5EE71717BA15F45B49C3B1BDFE65804E *PVRAM_SURFACE_INFO;
typedef struct _WAN_CO_LINKPARAMS *PWAN_CO_LINKPARAMS;
typedef struct _WHEA_ERROR_PACKET_V2 *PWHEA_ERROR_PACKET;
typedef struct _WHEA_ERROR_RECORD *PWHEA_ERROR_RECORD;
typedef union _WHEA_ERROR_STATUS *PWHEA_ERROR_STATUS;
typedef union _WHEA_XPF_MS_CHECK *PWHEA_XPF_MS_CHECK;
typedef struct _WHEA_XPF_PROCINFO *PWHEA_XPF_PROCINFO;
typedef struct _WMI_DISK_GEOMETRY *PWMI_DISK_GEOMETRY;
typedef struct tagWNODE_METHOD_ITEM *PWNODE_METHOD_ITEM;
typedef struct tagWNODE_SINGLE_ITEM *PWNODE_SINGLE_ITEM;
typedef struct _WWAN_SIGNAL_STATE *PWWAN_SIGNAL_STATE;
typedef struct _WWAN_SMS_SEND_PDU *PWWAN_SMS_SEND_PDU;
typedef struct _WWAN_USSD_REQUEST *PWWAN_USSD_REQUEST;
typedef union _XPF_MC_BANK_FLAGS *PXPF_MC_BANK_FLAGS;
typedef struct _XSAVE_AREA_HEADER *PXSAVE_AREA_HEADER;
typedef struct _QUERY_PATH_REQUEST QUERY_PATH_REQUEST;
typedef struct _READ_CAPACITY_DATA READ_CAPACITY_DATA;
typedef struct _B772E343E2BFFCD16A4D25DD01A27975 READ_FILE_USN_DATA;
typedef struct _REASSIGN_BLOCKS_EX REASSIGN_BLOCKS_EX;
typedef struct _RESUME_PERFORMANCE RESUME_PERFORMANCE;
typedef struct _RTL_BALANCED_LINKS RTL_BALANCED_LINKS;
typedef struct _OSVERSIONINFOW RTL_OSVERSIONINFOW;
typedef struct _RX_BINDING_CONTEXT RX_BINDING_CONTEXT;
typedef struct _RX_FCB_TABLE_ENTRY RX_FCB_TABLE_ENTRY;
typedef struct _RX_SCAVENGER_ENTRY RX_SCAVENGER_ENTRY;
typedef struct _RX_WORK_QUEUE_ITEM_ RX_WORK_QUEUE_ITEM;
typedef struct _S3PT_RECORD_HEADER S3PT_RECORD_HEADER;
typedef struct _113235CB38218359B65312E6A8B53D96 SCSIWMIGUIDREGINFO;
typedef struct _SCSI_REQUEST_BLOCK SCSI_REQUEST_BLOCK;
typedef struct _SDP_TREE_ROOT_NODE SDP_TREE_ROOT_NODE;
typedef struct _SD_ENUM_SDS_OUTPUT SD_ENUM_SDS_OUTPUT;
typedef struct _SECURITY_USER_DATA SECURITY_USER_DATA;
typedef struct _SERIAL_WMI_HW_DATA SERIAL_WMI_HW_DATA;
typedef struct _SES_PHY_DESCRIPTOR SES_PHY_DESCRIPTOR;
typedef struct _SET_UNIT_DIRECTORY SET_UNIT_DIRECTORY;
typedef struct _SE_ADT_OBJECT_TYPE SE_ADT_OBJECT_TYPE;
typedef struct _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES;
typedef struct SMHBA_BindingEntry SMHBA_BINDINGENTRY;
typedef struct _SRBEX_DATA_IO_INFO SRBEX_DATA_IO_INFO;
typedef struct _STORAGE_IDENTIFIER STORAGE_IDENTIFIER;
typedef struct _STORAGE_IDLE_POWER STORAGE_IDLE_POWER;
typedef struct _STREAMS_TDI_ACTION STREAMS_TDI_ACTION;
typedef unsigned long long STREAM_SYSTEM_TIME;
typedef union _SUB_Q_CHANNEL_DATA SUB_Q_CHANNEL_DATA;
typedef union _SUPPORTED_ADVANCES SUPPORTED_ADVANCES;
typedef struct _5E9BD264646644ED8CAA43D9E3AB2E3D SYSTEM_POWER_LEVEL;
typedef struct _ScsiReportLuns_OUT ScsiReportLuns_OUT;
typedef struct _SendCTPassThru_OUT SendCTPassThru_OUT;
typedef struct _SetFC3MgmtInfo_OUT SetFC3MgmtInfo_OUT;
typedef struct _TAPE_PHYS_POSITION TAPE_PHYS_POSITION;
typedef struct _TAPE_POSITION_DATA TAPE_POSITION_DATA;
typedef struct _TA_ADDRESS_NETBIOS TA_NETBIOS_ADDRESS;
typedef struct _TDI_ADDRESS_IP6_XP TDI_ADDRESS_IP6_XP;
typedef struct _TDI_ADDRESS_NETONE TDI_ADDRESS_NETONE;
typedef struct _TDI_PNP_CONTEXT_XP TDI_PNP_CONTEXT_XP;
typedef struct _TDI_REQUEST_ACCEPT TDI_REQUEST_ACCEPT;
typedef struct _TDI_REQUEST_KERNEL TDI_REQUEST_KERNEL;
typedef struct _TDI_REQUEST_LISTEN TDI_REQUEST_LISTEN;
typedef struct _TDI_REQUEST_STATUS TDI_REQUEST_STATUS;
typedef struct _TOKEN_AUDIT_POLICY TOKEN_AUDIT_POLICY;
typedef struct _TOKEN_DEFAULT_DACL TOKEN_DEFAULT_DACL;
typedef struct _TOKEN_LINKED_TOKEN TOKEN_LINKED_TOKEN;
typedef struct _TRACK_INFORMATION2 TRACK_INFORMATION2;
typedef struct _TRACK_INFORMATION3 TRACK_INFORMATION3;
typedef struct _USBRPM_DEVICE_LIST USBRPM_DEVICE_LIST;
typedef union _USB_20_PORT_CHANGE USB_20_PORT_CHANGE;
typedef union _USB_20_PORT_STATUS USB_20_PORT_STATUS;
typedef union _USB_30_PORT_CHANGE USB_30_PORT_CHANGE;
typedef union _USB_30_PORT_STATUS USB_30_PORT_STATUS;
typedef struct _USB_BOS_DESCRIPTOR USB_BOS_DESCRIPTOR;
typedef struct _USB_HUB_DESCRIPTOR USB_HUB_DESCRIPTOR;
typedef struct _VERIFY_INFORMATION VERIFY_INFORMATION;
typedef struct _VIDEO_ACCESS_RANGE VIDEO_ACCESS_RANGE;
typedef struct _VIDEO_PALETTE_DATA VIDEO_PALETTE_DATA;
typedef struct _VIDEO_REGISTER_VDM VIDEO_REGISTER_VDM;
typedef struct _VIDEO_SHARE_MEMORY VIDEO_SHARE_MEMORY;
typedef struct _WAIT_CONTEXT_BLOCK WAIT_CONTEXT_BLOCK;
typedef struct _WHEA_GENERIC_ERROR WHEA_GENERIC_ERROR;
typedef struct _WHEA_PCIXDEVICE_ID WHEA_PCIXDEVICE_ID;
typedef union _WHEA_XPF_BUS_CHECK WHEA_XPF_BUS_CHECK;
typedef union _WHEA_XPF_TLB_CHECK WHEA_XPF_TLB_CHECK;
typedef struct wmaudio2waveformat_tag WMAUDIO2WAVEFORMAT;
typedef struct wmaudio3waveformat_tag WMAUDIO3WAVEFORMAT;
typedef struct _WWAN_AUTH_RESPONSE WWAN_AUTH_RESPONSE;
typedef struct _WWAN_CONTEXT_STATE WWAN_CONTEXT_STATE;
typedef struct _WWAN_SMS_SEND_CDMA WWAN_SMS_SEND_CDMA;
enum _CLASS_DEBUG_LEVEL {ClassDebugError = 0x0,ClassDebugWarning = 0x1,ClassDebugTrace = 0x2,ClassDebugInfo = 0x3,ClassDebugMediaLocks = 0x8,ClassDebugMCN = 0x9,ClassDebugDelayedRetry = 0xA,ClassDebugSenseInfo = 0xB,ClassDebugRemoveLock = 0xC,ClassDebugExternal4 = 0xD,ClassDebugExternal3 = 0xE,ClassDebugExternal2 = 0xF,ClassDebugExternal1 = 0x10,};
enum _CLFS_CONTEXT_MODE {ClfsContextNone = 0x0,ClfsContextUndoNext = 0x1,ClfsContextPrevious = 0x2,ClfsContextForward = 0x3,};
enum _CLS_IOSTATS_CLASS {ClsIoStatsDefault = 0x0,ClsIoStatsMax = 0xFFFF,};
struct _CONFIG_ROM_HEADER {unsigned int Crc : 16;unsigned int CrcLength : 8;unsigned int InfoLength : 8;};
struct _CrtMemBlockHeader;
enum _DEVICE_WAKE_DEPTH {DeviceWakeDepthNotWakeable = 0x0,DeviceWakeDepthD0 = 0x1,DeviceWakeDepthD1 = 0x2,DeviceWakeDepthD2 = 0x3,DeviceWakeDepthD3hot = 0x4,DeviceWakeDepthD3cold = 0x5,DeviceWakeDepthMaximum = 0x6,};
struct _DICTIONARY_HEADER;
enum _DUID_MATCH_STATUS {DuidExactMatch = 0x0,DuidSubIdMatch = 0x1,DuidNoMatch = 0x2,DuidErrorGeneral = 0x64,DuidErrorMissingDuid = 0x65,DuidErrorVersionMismatch = 0x66,DuidErrorInvalidDuid = 0x67,DuidErrorInvalidDeviceIdDescSize = 0x68,DuidErrorInvalidDeviceDescSize = 0x69,DuidErrorInvalidLayoutSigSize = 0x6A,DuidErrorInvalidLayoutSigVersion = 0x6B,DuidErrorMaximum = 0x6C,};
enum _DXGKMDT_OPM_CGMSA {DXGKMDT_OPM_CGMSA_OFF = 0x0,DXGKMDT_OPM_CGMSA_COPY_FREELY = 0x1,DXGKMDT_OPM_CGMSA_COPY_NO_MORE = 0x2,DXGKMDT_OPM_CGMSA_COPY_ONE_GENERATION = 0x3,DXGKMDT_OPM_CGMSA_COPY_NEVER = 0x4,DXGKMDT_OPM_REDISTRIBUTION_CONTROL_REQUIRED = 0x8,};
enum _ENUMERATOR_ACTION {ENUMERATOR_ACTION_CREATE = 0x0,ENUMERATOR_ACTION_REMOVE = 0x1,ENUMERATOR_ACTION_DESTROY = 0x2,ENUMERATOR_ACTION_MAX = 0x3,};
enum _IDE_CALLBACK_TYPE {IdeTimerRoutine = 0x0,IdeWorkerRoutine = 0x1,IdeSynchronizedRoutine = 0x2,IdeControllerSyncRoutine = 0x3,IdeMaxCallbackType = 0x4,};
enum _IRQ_DEVICE_POLICY {IrqPolicyMachineDefault = 0x0,IrqPolicyAllCloseProcessors = 0x1,IrqPolicyOneCloseProcessor = 0x2,IrqPolicyAllProcessorsInMachine = 0x3,IrqPolicySpecifiedProcessors = 0x4,IrqPolicySpreadMessagesAcrossAllProcessors = 0x5,};
enum _LLDP_ADMIN_STATUS {LldpDisabled = 0x0,LldpEnabledTxOnly = 0x1,LldpEnabledRxOnly = 0x2,LldpEnabledRxTx = 0x3,};
enum _NDIS_FRAME_HEADER {NdisFrameHeaderUndefined = 0x0,NdisFrameHeaderMac = 0x1,NdisFrameHeaderArp = 0x2,NdisFrameHeaderIPv4 = 0x3,NdisFrameHeaderIPv6 = 0x4,NdisFrameHeaderUdp = 0x5,NdisFrameHeaderMaximum = 0x6,};
enum _NDIS_REQUEST_TYPE {NdisRequestQueryInformation = 0x0,NdisRequestSetInformation = 0x1,NdisRequestQueryStatistics = 0x2,NdisRequestOpen = 0x3,NdisRequestClose = 0x4,NdisRequestSend = 0x5,NdisRequestTransferData = 0x6,NdisRequestReset = 0x7,NdisRequestGeneric1 = 0x8,NdisRequestGeneric2 = 0x9,NdisRequestGeneric3 = 0xA,NdisRequestGeneric4 = 0xB,NdisRequestMethod = 0xC,};
enum _NL_BANDWIDTH_FLAG {NlbwDisabled = 0x0,NlbwEnabled = 0x1,NlbwUnchanged = 0xFFFFFFFF,};
enum _NL_NEIGHBOR_STATE {NlnsUnreachable = 0x0,NlnsIncomplete = 0x1,NlnsProbe = 0x2,NlnsDelay = 0x3,NlnsStale = 0x4,NlnsReachable = 0x5,NlnsPermanent = 0x6,NlnsMaximum = 0x7,};
enum _NPI_MODULEID_TYPE {MIT_GUID = 0x1,MIT_IF_LUID = 0x2,};
enum _OFFLOAD_CONF_ALGO {OFFLOAD_IPSEC_CONF_NONE = 0x0,OFFLOAD_IPSEC_CONF_DES = 0x1,OFFLOAD_IPSEC_CONF_RESERVED = 0x2,OFFLOAD_IPSEC_CONF_3_DES = 0x3,OFFLOAD_IPSEC_CONF_MAX = 0x4,};
enum _PCW_CALLBACK_TYPE {PcwCallbackAddCounter = 0x0,PcwCallbackRemoveCounter = 0x1,PcwCallbackEnumerateInstances = 0x2,PcwCallbackCollectData = 0x3,};
enum _PF_FORWARD_ACTION {PF_FORWARD = 0x0,PF_DROP = 0x1,PF_PASS = 0x2,PF_ICMP_ON_DROP = 0x3,};
enum _RAID_SYSTEM_POWER {RaidSystemPowerUnknown = 0x0,RaidSystemPowerLowest = 0x1,RaidSystemPowerLow = 0x2,RaidSystemPowerMedium = 0x3,RaidSystemPowerHigh = 0x4,};
enum _SECPKG_CRED_CLASS {SecPkgCredClass_None = 0x0,SecPkgCredClass_Ephemeral = 0xA,SecPkgCredClass_PersistedGeneric = 0x14,SecPkgCredClass_PersistedSpecific = 0x1E,SecPkgCredClass_Explicit = 0x28,};
struct _SINGLE_LIST_ENTRY {struct _SINGLE_LIST_ENTRY *Next;};
enum _SOCKET_USAGE_TYPE {SYSTEM_CRITICAL_SOCKET = 0x1,};
enum _TRANSACTION_STATE {TransactionStateNormal = 0x1,TransactionStateIndoubt = 0x2,TransactionStateCommittedNotify = 0x3,};
enum _VIDEO_POWER_STATE {VideoPowerUnspecified = 0x0,VideoPowerOn = 0x1,VideoPowerStandBy = 0x2,VideoPowerSuspend = 0x3,VideoPowerOff = 0x4,VideoPowerHibernate = 0x5,VideoPowerShutdown = 0x6,VideoPowerMaximum = 0x7,};
enum _VP_LOCK_OPERATION {VpReadAccess = 0x0,VpWriteAccess = 0x1,VpModifyAccess = 0x2,};
enum _WWAN_CONTEXT_TYPE {WwanContextTypeNone = 0x0,WwanContextTypeInternet = 0x1,WwanContextTypeVpn = 0x2,WwanContextTypeVoice = 0x3,WwanContextTypeVideoShare = 0x4,WwanContextTypeCustom = 0x5,WwanContextTypePurchase = 0x6,WwanContextTypeMax = 0x7,};
enum _tagAvcCommandType {AVC_CTYPE_CONTROL = 0x0,AVC_CTYPE_STATUS = 0x1,AVC_CTYPE_SPEC_INQ = 0x2,AVC_CTYPE_NOTIFY = 0x3,AVC_CTYPE_GEN_INQ = 0x4,};
enum _tagAvcSubunitType {AVC_SUBUNITTYPE_VIDEO_MONITOR = 0x0,AVC_SUBUNITTYPE_AUDIO = 0x1,AVC_SUBUNITTYPE_PRINTER = 0x2,AVC_SUBUNITTYPE_DISC_PLAYER = 0x3,AVC_SUBUNITTYPE_TAPE_PLAYER = 0x4,AVC_SUBUNITTYPE_TUNER = 0x5,AVC_SUBUNITTYPE_CA = 0x6,AVC_SUBUNITTYPE_VIDEO_CAMERA = 0x7,AVC_SUBUNITTYPE_PANEL = 0x9,AVC_SUBUNITTYPE_BULLETINBOARD = 0xA,AVC_SUBUNITTYPE_CAMERASTORAGE = 0xB,AVC_SUBUNITTYPE_VENDOR_UNIQUE = 0x1C,AVC_SUBUNITTYPE_EXTENDED = 0x1E,AVC_SUBUNITTYPE_EXTENDED_FULL = 0xFF,AVC_SUBUNITTYPE_UNIT = 0x1F,};
typedef struct _AAL_PARAMETERS_IE AAL_PARAMETERS_IE;
typedef struct _ACCESS_DENIED_ACE ACCESS_DENIED_ACE;
typedef union _AMD_L1_CACHE_INFO AMD_L1_CACHE_INFO;
typedef union _AMD_L2_CACHE_INFO AMD_L2_CACHE_INFO;
typedef union _AMD_L3_CACHE_INFO AMD_L3_CACHE_INFO;
typedef struct _ARBITER_INTERFACE ARBITER_INTERFACE;
typedef struct _ATM_LIJ_CALLID_IE ATM_LIJ_CALLID_IE;
typedef struct _AVCPRECONNECTINFO AVCPRECONNECTINFO;
typedef struct _AVC_MULTIFUNC_IRB AVC_MULTIFUNC_IRB;
typedef struct _AddiSNSServer_OUT AddiSNSServer_OUT;
typedef struct _BDA_DRM_DRMSTATUS BDA_DRM_DRMSTATUS;
typedef struct _BDA_GDDS_DATATYPE BDA_GDDS_DATATYPE;
typedef struct _BDA_TABLE_SECTION BDA_TABLE_SECTION;
typedef struct _BTHHFP_DESCRIPTOR BTHHFP_DESCRIPTOR;
typedef struct _BTHX_CAPABILITIES BTHX_CAPABILITIES;
typedef struct _CDROM_READ_TOC_EX CDROM_READ_TOC_EX;
typedef struct _CIP_VALIDATE_INFO CIP_VALIDATE_INFO;
typedef struct _CLASS_VPD_B0_DATA CLASS_VPD_B0_DATA;
typedef struct _CLASS_VPD_B1_DATA CLASS_VPD_B1_DATA;
typedef struct _CLASS_VPD_B2_DATA CLASS_VPD_B2_DATA;
typedef struct _CLASS_WORKING_SET CLASS_WORKING_SET;
typedef struct _CLS_IO_STATISTICS CLS_IO_STATISTICS;
typedef struct _CMP_MONITOR_PLUGS CMP_MONITOR_PLUGS;
typedef struct _COMMIT_POLICY_OUT COMMIT_POLICY_OUT;
typedef struct _CONFIG_ROM_HEADER CONFIG_ROM_HEADER;
typedef struct _CONTROLLER_OBJECT CONTROLLER_OBJECT;
typedef struct _0563D17F902D53081481BDEBB46755BB CO_ADDRESS_FAMILY;
typedef struct _CO_TAPI_LINE_CAPS CO_TAPI_LINE_CAPS;
typedef struct _CSRT_TABLE_HEADER CSRT_TABLE_HEADER;
typedef struct _CSV_CONTROL_PARAM CSV_CONTROL_PARAM;
typedef struct _ChannelChangeInfo ChannelChangeInfo;
enum ComponentCategory {CategoryNotSet = 0xFFFFFFFF,CategoryOther = 0x0,CategoryVideo = 0x1,CategoryAudio = 0x2,CategoryText = 0x3,CategorySubtitles = 0x4,CategoryCaptions = 0x5,CategorySuperimpose = 0x6,CategoryData = 0x7,CATEGORY_COUNT = 0x8,};
typedef struct _DATA_BLOCK_HEADER DATA_BLOCK_HEADER;
typedef struct _DEVICE_MEDIA_INFO DEVICE_MEDIA_INFO;
typedef struct _DIAGNOSTIC_BUFFER DIAGNOSTIC_BUFFER;
typedef struct _DICTIONARY_HEADER DICTIONARY_HEADER;
typedef struct digifixwaveformat_tag DIGIFIXWAVEFORMAT;
typedef struct digistdwaveformat_tag DIGISTDWAVEFORMAT;
typedef union _DIRECTORY_ENTRIES DIRECTORY_ENTRIES;
typedef struct _DISK_CLUSTER_INFO DISK_CLUSTER_INFO;
typedef struct _DISK_SAN_SETTINGS DISK_SAN_SETTINGS;
typedef struct _DISPATCHER_HEADER DISPATCHER_HEADER;
typedef struct _DMA_TRANSFER_INFO DMA_TRANSFER_INFO;
typedef struct _DOT11_WEP_OFFLOAD DOT11_WEP_OFFLOAD;
typedef struct _DOT11_WFD_CHANNEL DOT11_WFD_CHANNEL;
typedef struct _DOT4_DC_OPEN_DATA DOT4_DC_OPEN_DATA;
typedef struct _DSM_QueryLBPolicy DSM_QueryLBPolicy;
typedef struct _DSM_QueryUniqueId DSM_QueryUniqueId;
typedef struct _DXGKRNL_INTERFACE DXGKRNL_INTERFACE;
typedef struct _DXGK_CHILD_STATUS DXGK_CHILD_STATUS;
typedef struct _DXGK_ENGINESTATUS DXGK_ENGINESTATUS;
typedef struct _DXGK_POINTERFLAGS DXGK_POINTERFLAGS;
typedef struct _DXGK_PRESENTFLAGS DXGK_PRESENTFLAGS;
typedef struct _DXGK_SEGMENTFLAGS DXGK_SEGMENTFLAGS;
enum DeviceObjectState {DeviceObjectStarted = 0x0,DeviceObjectStopped = 0x1,DeviceObjectRemoved = 0x2,};
typedef struct echosc1waveformat_tag ECHOSC1WAVEFORMAT;
typedef struct _ENCRYPTION_BUFFER ENCRYPTION_BUFFER;
typedef struct _FCP_SEND_RESPONSE FCP_SEND_RESPONSE;
typedef struct _FILE_LAYOUT_ENTRY FILE_LAYOUT_ENTRY;
typedef struct _FILE_REGION_INPUT FILE_REGION_INPUT;
typedef struct _FLT_CALLBACK_DATA FLT_CALLBACK_DATA;
typedef struct _FORMAT_DESCRIPTOR FORMAT_DESCRIPTOR;
typedef struct _FORMAT_PARAMETERS FORMAT_PARAMETERS;
typedef struct _GENERAL_LOOKASIDE GENERAL_LOOKASIDE;
typedef struct _GEN_GET_TIME_CAPS GEN_GET_TIME_CAPS;
typedef struct _HAL_MCA_INTERFACE HAL_MCA_INTERFACE;
typedef struct HBA_FC4Statistics HBA_FC4STATISTICS;
typedef struct HBA_Pty_EventInfo HBA_PTY_EVENTINFO;
typedef struct _HID_DRIVER_CONFIG HID_DRIVER_CONFIG;
typedef struct _IDE_REQUEST_BLOCK IDE_REQUEST_BLOCK;
typedef struct _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;
typedef struct _IMAGE_ROM_HEADERS IMAGE_ROM_HEADERS;
struct IMiniportTopology {struct IMiniportTopologyVtbl *lpVtbl;};
typedef struct _INTERFACE_INFO_EX INTERFACE_INFO_EX;
typedef struct _IO_STACK_LOCATION IO_STACK_LOCATION;
struct IPortClsEtwHelper {struct IPortClsEtwHelperVtbl *lpVtbl;};
struct IPortWaveRTStream {struct IPortWaveRTStreamVtbl *lpVtbl;};
typedef struct _IRB_REQ_BUS_RESET IRB_REQ_BUS_RESET;
typedef struct _IR_RECEIVE_PARAMS IR_RECEIVE_PARAMS;
typedef struct _IR_TRANSMIT_CHUNK IR_TRANSMIT_CHUNK;
struct ISdpNodeContainer;
typedef struct _IVHD_DEVICE_ENTRY IVHD_DEVICE_ENTRY;
typedef struct _IVRS_BLOCK_HEADER IVRS_BLOCK_HEADER;
typedef struct _IdleStateBucketEx IdleStateBucketEx;
typedef struct _KBUGCHECK_DUMP_IO KBUGCHECK_DUMP_IO;
typedef struct _KERNEL_USER_TIMES KERNEL_USER_TIMES;
typedef struct _DCCCDBDB2D2AC461237A75FB18C0449E KSCORRELATED_TIME;
typedef struct _A156F3783D3AF89709906294AAADEE96 KSDATARANGE_AUDIO;
typedef struct _DCA1691E12E502D611F5426518CFEFB5 KSDATARANGE_MUSIC;
typedef struct _KSDEVICE_DISPATCH KSDEVICE_DISPATCH;
typedef struct _9E1ED747B9CD39E7270D6384935529E0 KSDS3D_BUFFER_ALL;
typedef struct _AC9A5C69A2E8BFD7F981D24477498145 KSDS3D_ITD_PARAMS;
typedef struct _A07373D2A5755254DCD028456AB4EC3B KSEVENT_TIME_MARK;
typedef struct _2CC32A13BC47B0ADD425440A5881DEFA KSFASTMETHOD_ITEM;
typedef struct _KSFILTER_DISPATCH KSFILTER_DISPATCH;
typedef struct _KSNODE_DESCRIPTOR KSNODE_DESCRIPTOR;
typedef struct _0E076CBD8F5A7ED08B697C5009EDFCFF KSPROPERTY_SERIAL;
typedef struct _EE7A277138FF7ACF03A1E9A4C6095702 KSPROPERTY_VALUES;
typedef struct _3878B18F15C290CF7BC80116234DE41C KSQUALITY_MANAGER;
typedef struct _26873349DB0A36B1F3161FA857CA70AC KSRATE_CAPABILITY;
typedef struct _BFD35443418CDCF1187E122E74A5B815 KSVPSURFACEPARAMS;
typedef struct _F0DE5EAC046D7D32AA534DC253D377C4 KSWAVE_COMPATCAPS;
typedef struct tagKS_BDA_FRAME_INFO KS_BDA_FRAME_INFO;
typedef struct _KS_DVDCOPY_BUSKEY KS_DVDCOPY_BUSKEY;
typedef struct _KS_DVDCOPY_REGION KS_DVDCOPY_REGION;
typedef struct tagKS_MPEG1VIDEOINFO KS_MPEG1VIDEOINFO;
typedef struct tagKS_MPEGVIDEOINFO2 KS_MPEGVIDEOINFO2;
typedef struct tagKS_VBI_FRAME_INFO KS_VBI_FRAME_INFO;
typedef struct _KUSER_SHARED_DATA KUSER_SHARED_DATA;
typedef struct _LINE_ADDRESS_CAPS LINE_ADDRESS_CAPS;
typedef struct _LINE_EXTENSION_ID LINE_EXTENSION_ID;
typedef struct _LLDP_ADMIN_CONFIG LLDP_ADMIN_CONFIG;
typedef struct _LOOKASIDE_LIST_EX LOOKASIDE_LIST_EX;
typedef struct _SENDCMDINPARAMS *LPSENDCMDINPARAMS;
typedef struct sockaddr_in6 *LPSOCKADDR_IN6_LH;
typedef struct _VIDEOPARAMETERS *LPVIDEOPARAMETERS;
typedef struct _LoginToTarget_OUT LoginToTarget_OUT;
enum MACRO_ACPI_METHOD {ACPI_METHOD_ARGUMENT_INTEGER = 0x0,ACPI_METHOD_ARGUMENT_STRING = 0x1,ACPI_METHOD_ARGUMENT_BUFFER = 0x2,ACPI_METHOD_ARGUMENT_PACKAGE = 0x3,ACPI_METHOD_ARGUMENT_PACKAGE_EX = 0x4,ACPI_ACQUIRE_GLOBAL_LOCK_SIGNATURE = 0x4C676141,ACPI_RELEASE_GLOBAL_LOCK_SIGNATURE = 0x4C677241,};
enum MACRO_ACPI_NOTIFY {ACPI_NOTIFY_DOCK_EVENT = 0x77,ACPI_NOTIFY_PANEL_SWITCH = 0x80,ACPI_NOTIFY_DEVICE_HOTPLUG = 0x81,ACPI_NOTIFY_CYCLE_DISPLAY_HOTKEY = 0x82,ACPI_NOTIFY_NEXT_DISPLAY_HOTKEY = 0x83,ACPI_NOTIFY_PREV_DISPLAY_HOTKEY = 0x84,ACPI_NOTIFY_CYCLE_BRIGHTNESS_HOTKEY = 0x85,ACPI_NOTIFY_INC_BRIGHTNESS_HOTKEY = 0x86,ACPI_NOTIFY_DEC_BRIGHTNESS_HOTKEY = 0x87,ACPI_NOTIFY_ZERO_BRIGHTNESS_HOTKEY = 0x88,ACPI_NOTIFY_VIDEO_WAKEUP = 0x90,ACPI_ARG_ENABLE_SWITCH_EVENT = 0x0,ACPI_ARG_ENABLE_AUTO_SWITCH = 0x1,ACPI_ARG_DISABLE_SWITCH_EVENT = 0x2,ACPI_ARG_ENABLE_AUTO_LCD_BRIGHTNESS = 0x0,ACPI_ARG_DISABLE_AUTO_LCD_BRIGHTNESS = 0x4,ACPI_METHOD_DISPLAY_DOS = 0x534F445F,ACPI_METHOD_DISPLAY_DOD = 0x444F445F,ACPI_METHOD_DISPLAY_ROM = 0x4D4F525F,ACPI_METHOD_DISPLAY_GPD = 0x4450475F,ACPI_METHOD_DISPLAY_SPD = 0x4450535F,ACPI_METHOD_DISPLAY_VPO = 0x4F50565F,ACPI_METHOD_HARDWARE_ID = 0x4449485F,ACPI_METHOD_SUBSYSTEM_ID = 0x4255535F,ACPI_METHOD_REVISION_ID = 0x5652485F,ACPI_METHOD_OUTPUT_ADR = 0x5244415F,ACPI_METHOD_OUTPUT_BCL = 0x4C43425F,ACPI_METHOD_OUTPUT_BCM = 0x4D43425F,ACPI_METHOD_OUTPUT_DDC = 0x4344445F,ACPI_METHOD_OUTPUT_DCS = 0x5343445F,ACPI_METHOD_OUTPUT_DGS = 0x5347445F,ACPI_METHOD_OUTPUT_DSS = 0x5353445F,};
enum MACRO_ACPI_OBJECT {ACPI_OBJECT_HAS_CHILDREN = 0x1,};
enum MACRO_APIC_LENGTH {PROCESSOR_LOCAL_APIC_LENGTH = 8,IO_APIC_LENGTH = 12,ISA_VECTOR_OVERRIDE_LENGTH = 10,IO_NMI_SOURCE_LENGTH = 8,LOCAL_NMI_SOURCE_LENGTH = 6,PLATFORM_INTERRUPT_SOURCE_LENGTH = 16,IO_SAPIC_LENGTH = 16,PROCESSOR_LOCAL_SAPIC_LENGTH = 12,PROCESSOR_LOCAL_X2APIC_LENGTH = 16,LOCAL_X2APIC_NMI_SOURCE_LENGTH = 12,};
enum MACRO_APPLICATION {APPLICATION_ERROR_MASK = 0x20000000,};
enum MACRO_ASYNC_FLAGS {ASYNC_FLAGS_NONINCREMENTING = 0x1,ASYNC_FLAGS_NO_STATUS = 0x2,ASYNC_FLAGS_PING = 0x4,ASYNC_FLAGS_BROADCAST = 0x8,};
enum MACRO_ATM_SERVICE {ATM_SERVICE_CATEGORY_CBR = 1,ATM_SERVICE_CATEGORY_VBR = 2,ATM_SERVICE_CATEGORY_UBR = 4,ATM_SERVICE_CATEGORY_ABR = 8,ATM_FLOW_PARAMS_RSVD1_MPP = 1,};
enum MACRO_AVC_SUBUNIT {AVC_SUBUNIT_ADDR_PERSISTENT = 0x1,AVC_SUBUNIT_ADDR_TRIGGERBUSRESET = 0x2,};
enum MACRO_AddLink_OUT {AddLink_OUT_HBAStatus_ID = 1,};
enum MACRO_BUFFER_SIZE {READ_ATTRIBUTE_BUFFER_SIZE = 512,IDENTIFY_BUFFER_SIZE = 512,READ_THRESHOLD_BUFFER_SIZE = 512,SMART_LOG_SECTOR_SIZE = 512,};
enum MACRO_BUGCODE_USB {BUGCODE_USB_DRIVER = 0xFE,};
enum MACRO_CACHE_FULLY {CACHE_FULLY_ASSOCIATIVE = 0xFF,};
enum MACRO_CDB6GENERIC {CDB6GENERIC_LENGTH = 6,CDB10GENERIC_LENGTH = 10,CDB12GENERIC_LENGTH = 12,};
enum MACRO_CDB_INQUIRY {CDB_INQUIRY_EVPD = 0x1,};
enum MACRO_CMP_ADDRESS {CMP_ADDRESS_TYPE_GLOBAL = 0x1,CMP_ADDRESS_TYPE_EXCLUSIVE = 0x2,};
enum MACRO_CM_RESOURCE {CM_RESOURCE_INTERRUPT_LEVEL_SENSITIVE = 0x0,CM_RESOURCE_INTERRUPT_LATCHED = 0x1,CM_RESOURCE_INTERRUPT_MESSAGE = 0x2,CM_RESOURCE_INTERRUPT_POLICY_INCLUDED = 0x4,CM_RESOURCE_INTERRUPT_SECONDARY_INTERRUPT = 0x10,CM_RESOURCE_INTERRUPT_WAKE_HINT = 0x20,CM_RESOURCE_INTERRUPT_LEVEL_LATCHED_BITS = 0x1,CM_RESOURCE_INTERRUPT_MESSAGE_TOKEN = 0xFFFFFFFE,CM_RESOURCE_MEMORY_READ_WRITE = 0x0,CM_RESOURCE_MEMORY_READ_ONLY = 0x1,CM_RESOURCE_MEMORY_WRITE_ONLY = 0x2,CM_RESOURCE_MEMORY_WRITEABILITY_MASK = 0x3,CM_RESOURCE_MEMORY_PREFETCHABLE = 0x4,CM_RESOURCE_MEMORY_COMBINEDWRITE = 0x8,CM_RESOURCE_MEMORY_24 = 0x10,CM_RESOURCE_MEMORY_CACHEABLE = 0x20,CM_RESOURCE_MEMORY_WINDOW_DECODE = 0x40,CM_RESOURCE_MEMORY_BAR = 0x80,CM_RESOURCE_MEMORY_COMPAT_FOR_INACCESSIBLE_RANGE = 0x100,CM_RESOURCE_MEMORY_LARGE = 0xE00,CM_RESOURCE_MEMORY_LARGE_40 = 0x200,CM_RESOURCE_MEMORY_LARGE_48 = 0x400,CM_RESOURCE_MEMORY_LARGE_64 = 0x800,CM_RESOURCE_MEMORY_LARGE_40_MAXLEN = 0xFFFFFFFF00,CM_RESOURCE_MEMORY_LARGE_48_MAXLEN = 0xFFFFFFFF0000,CM_RESOURCE_MEMORY_LARGE_64_MAXLEN = 0xFFFFFFFF00000000,CM_RESOURCE_PORT_MEMORY = 0x0,CM_RESOURCE_PORT_IO = 0x1,CM_RESOURCE_PORT_10_BIT_DECODE = 0x4,CM_RESOURCE_PORT_12_BIT_DECODE = 0x8,CM_RESOURCE_PORT_16_BIT_DECODE = 0x10,CM_RESOURCE_PORT_POSITIVE_DECODE = 0x20,CM_RESOURCE_PORT_PASSIVE_DECODE = 0x40,CM_RESOURCE_PORT_WINDOW_DECODE = 0x80,CM_RESOURCE_PORT_BAR = 0x100,CM_RESOURCE_DMA_8 = 0x0,CM_RESOURCE_DMA_16 = 0x1,CM_RESOURCE_DMA_32 = 0x2,CM_RESOURCE_DMA_8_AND_16 = 0x4,CM_RESOURCE_DMA_BUS_MASTER = 0x8,CM_RESOURCE_DMA_TYPE_A = 0x10,CM_RESOURCE_DMA_TYPE_B = 0x20,CM_RESOURCE_DMA_TYPE_F = 0x40,CM_RESOURCE_DMA_V3 = 0x80,};
enum MACRO_CNFGA_IMPID {CNFGA_IMPID_SHIFT = 4,};
enum MACRO_COMPRESSION {COMPRESSION_FORMAT_NONE = 0x0,COMPRESSION_FORMAT_DEFAULT = 0x1,COMPRESSION_FORMAT_LZNT1 = 0x2,COMPRESSION_FORMAT_XPRESS = 0x3,COMPRESSION_FORMAT_XPRESS_HUFF = 0x4,COMPRESSION_ENGINE_STANDARD = 0x0,COMPRESSION_ENGINE_MAXIMUM = 0x100,COMPRESSION_ENGINE_HIBER = 0x200,};
enum MACRO_CONNECT_RSP {CONNECT_RSP_RESULT_SUCCESS = 0x0,CONNECT_RSP_RESULT_PENDING = 0x1,CONNECT_RSP_RESULT_PSM_NEG = 0x2,CONNECT_RSP_RESULT_SECURITY_BLOCK = 0x3,CONNECT_RSP_RESULT_NO_RESOURCES = 0x4,CONNECT_RSP_STATUS_NO_INFORMATION = 0x0,CONNECT_RSP_STATUS_AUTHENTICATION_PENDING = 0x1,CONNECT_RSP_STATUS_AUTHORIZATION_PENDING = 0x2,};
enum MACRO_CONVERT10_S {CONVERT10_S_NO_PRESENTATION = 0x401C0,};
enum MACRO_CO_E_SERVER {CO_E_SERVER_STOPPING = 0x80080008,};
enum MACRO_D3DKMDT_MAX {D3DKMDT_MAX_OVERLAYS_BITCOUNT = 2,D3DKMDT_MAX_OVERLAYS = 4,D3DKMDT_DIMENSION_UNINITIALIZED = 4294967295,D3DKMDT_FREQUENCY_UNINITIALIZED = 4294967295,D3DKMDT_DIMENSION_NOTSPECIFIED = 4294967294,D3DKMDT_FREQUENCY_NOTSPECIFIED = 4294967294,};
enum MACRO_DATA_OFFSET {DATA_OFFSET = 0,};
enum MACRO_DEFAULT_ECR {DEFAULT_ECR_TEST = 0xD4,DEFAULT_ECR_COMPATIBILITY = 0x14,DEFAULT_ECR_CONFIGURATION = 0xF4,};
enum MACRO_DEFAULT_MIN {DEFAULT_MIN_PIN_LENGTH = 4,};
enum MACRO_DOMAIN_USER {DOMAIN_USER_RID_ADMIN = 0x1F4,DOMAIN_USER_RID_GUEST = 0x1F5,DOMAIN_USER_RID_KRBTGT = 0x1F6,DOMAIN_USER_RID_MAX = 0x3E7,DOMAIN_GROUP_RID_ADMINS = 0x200,DOMAIN_GROUP_RID_USERS = 0x201,DOMAIN_GROUP_RID_GUESTS = 0x202,DOMAIN_GROUP_RID_COMPUTERS = 0x203,DOMAIN_GROUP_RID_CONTROLLERS = 0x204,DOMAIN_GROUP_RID_CERT_ADMINS = 0x205,DOMAIN_GROUP_RID_SCHEMA_ADMINS = 0x206,DOMAIN_GROUP_RID_ENTERPRISE_ADMINS = 0x207,DOMAIN_GROUP_RID_POLICY_ADMINS = 0x208,DOMAIN_GROUP_RID_READONLY_CONTROLLERS = 0x209,DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS = 0x20A,DOMAIN_ALIAS_RID_ADMINS = 0x220,DOMAIN_ALIAS_RID_USERS = 0x221,DOMAIN_ALIAS_RID_GUESTS = 0x222,DOMAIN_ALIAS_RID_POWER_USERS = 0x223,DOMAIN_ALIAS_RID_ACCOUNT_OPS = 0x224,DOMAIN_ALIAS_RID_SYSTEM_OPS = 0x225,DOMAIN_ALIAS_RID_PRINT_OPS = 0x226,DOMAIN_ALIAS_RID_BACKUP_OPS = 0x227,DOMAIN_ALIAS_RID_REPLICATOR = 0x228,DOMAIN_ALIAS_RID_RAS_SERVERS = 0x229,DOMAIN_ALIAS_RID_PREW2KCOMPACCESS = 0x22A,DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS = 0x22B,DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS = 0x22C,DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS = 0x22D,DOMAIN_ALIAS_RID_MONITORING_USERS = 0x22E,DOMAIN_ALIAS_RID_LOGGING_USERS = 0x22F,DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS = 0x230,DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS = 0x231,DOMAIN_ALIAS_RID_DCOM_USERS = 0x232,DOMAIN_ALIAS_RID_IUSERS = 0x238,DOMAIN_ALIAS_RID_CRYPTO_OPERATORS = 0x239,DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP = 0x23B,DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP = 0x23C,DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP = 0x23D,DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP = 0x23E,DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS = 0x23F,DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS = 0x240,DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS = 0x241,DOMAIN_ALIAS_RID_HYPER_V_ADMINS = 0x242,DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS = 0x243,DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS = 0x244,};
enum MACRO_DOT11_EXTAP {DOT11_EXTAP_ATTRIBUTES_REVISION_1 = 1,DOT11_INCOMING_ASSOC_STARTED_PARAMETERS_REVISION_1 = 1,DOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS_REVISION_1 = 1,DOT11_ASSOC_ERROR_SOURCE_OS = 0,DOT11_ASSOC_ERROR_SOURCE_REMOTE = 1,DOT11_ASSOC_ERROR_SOURCE_OTHER = 255,DOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS_REVISION_1 = 1,DOT11_STOP_AP_PARAMETERS_REVISION_1 = 1,DOT11_STOP_AP_REASON_FREQUENCY_NOT_AVAILABLE = 1,DOT11_STOP_AP_REASON_CHANNEL_NOT_AVAILABLE = 2,DOT11_STOP_AP_REASON_AP_ACTIVE = 3,DOT11_STOP_AP_REASON_IHV_START = -16777216,DOT11_STOP_AP_REASON_IHV_END = -1,DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS_REVISION_1 = 1,DOT11_CAN_SUSTAIN_AP_PARAMETERS_REVISION_1 = 1,DOT11_CAN_SUSTAIN_AP_REASON_IHV_START = -16777216,DOT11_CAN_SUSTAIN_AP_REASON_IHV_END = -1,};
enum MACRO_DOT11_PMKID {DOT11_PMKID_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_POWER {DOT11_POWER_SAVE_LEVEL_MAX_PSP = 1,DOT11_POWER_SAVE_LEVEL_FAST_PSP = 2,};
enum MACRO_DOT4_STREAM {DOT4_STREAM_RECEIVED = 0x100,DOT4_STREAM_CREDITS = 0x101,DOT4_MESSAGE_RECEIVED = 0x102,DOT4_DISCONNECT = 0x103,DOT4_CHANNEL_CLOSED = 0x105,DOT4_CHANNEL = 0x0,};
enum MACRO_DO_SUPPORTS {DO_SUPPORTS_PERSISTENT_ACLS = 0x20000,};
enum MACRO_DRIVER_LEFT {DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS = 0xCB,};
enum MACRO_DRIVER_PAGE {DRIVER_PAGE_FAULT_IN_FREED_SPECIAL_POOL = 0xD5,DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION = 0xD6,DRIVER_PAGE_FAULT_BEYOND_END_OF_ALLOCATION_M = 0x100000D6,DRIVER_UNMAPPING_INVALID_VIEW = 0xD7,DRIVER_USED_EXCESSIVE_PTES = 0xD8,};
enum MACRO_DRVO_REINIT {DRVO_REINIT_REGISTERED = 0x8,DRVO_INITIALIZED = 0x10,DRVO_BOOTREINIT_REGISTERED = 0x20,DRVO_LEGACY_RESOURCES = 0x40,};
enum MACRO_DUMP_FILTER {DUMP_FILTER_MAJOR_VERSION_1 = 1,DUMP_FILTER_MAJOR_VERSION = 2,DUMP_FILTER_MINOR_VERSION = 0,DUMP_FILTER_CRITICAL = 1,DUMP_FILTER_EXT_FLAG_DUMP_DEVICE_POWER_OFF = 1,DUMP_FILTER_FLAG_SYSTEM_SUPPORT_READ = 1,DUMP_FILTER_FLAG_SYSTEM_SUPPORT_FILTER_EXTENSION_EX = 2,};
enum MACRO_ERROR_LABEL {ERROR_LABEL_UNREADABLE = 0x1,ERROR_LABEL_QUESTIONABLE = 0x2,ERROR_SLOT_NOT_PRESENT = 0x4,ERROR_DRIVE_NOT_INSTALLED = 0x8,ERROR_TRAY_MALFUNCTION = 0x10,ERROR_INIT_STATUS_NEEDED = 0x11,ERROR_UNHANDLED_ERROR = 0xFFFFFFFF,};
enum MACRO_EVENT_QUERY {EVENT_QUERY_STATE = 0x1,EVENT_MODIFY_STATE = 0x2,EVENT_ALL_ACCESS = 0x1F0003,};
enum MACRO_E_BLUETOOTH {E_BLUETOOTH_ATT_INVALID_HANDLE = 0x80650001,E_BLUETOOTH_ATT_READ_NOT_PERMITTED = 0x80650002,E_BLUETOOTH_ATT_WRITE_NOT_PERMITTED = 0x80650003,E_BLUETOOTH_ATT_INVALID_PDU = 0x80650004,E_BLUETOOTH_ATT_INSUFFICIENT_AUTHENTICATION = 0x80650005,E_BLUETOOTH_ATT_REQUEST_NOT_SUPPORTED = 0x80650006,E_BLUETOOTH_ATT_INVALID_OFFSET = 0x80650007,E_BLUETOOTH_ATT_INSUFFICIENT_AUTHORIZATION = 0x80650008,E_BLUETOOTH_ATT_PREPARE_QUEUE_FULL = 0x80650009,E_BLUETOOTH_ATT_ATTRIBUTE_NOT_FOUND = 0x8065000A,E_BLUETOOTH_ATT_ATTRIBUTE_NOT_LONG = 0x8065000B,E_BLUETOOTH_ATT_INSUFFICIENT_ENCRYPTION_KEY_SIZE = 0x8065000C,E_BLUETOOTH_ATT_INVALID_ATTRIBUTE_VALUE_LENGTH = 0x8065000D,E_BLUETOOTH_ATT_UNLIKELY = 0x8065000E,E_BLUETOOTH_ATT_INSUFFICIENT_ENCRYPTION = 0x8065000F,E_BLUETOOTH_ATT_UNSUPPORTED_GROUP_TYPE = 0x80650010,E_BLUETOOTH_ATT_INSUFFICIENT_RESOURCES = 0x80650011,E_BLUETOOTH_ATT_UNKNOWN_ERROR = 0x80651000,E_AUDIO_ENGINE_NODE_NOT_FOUND = 0x80660001,E_HDAUDIO_EMPTY_CONNECTION_LIST = 0x80660002,E_HDAUDIO_CONNECTION_LIST_NOT_SUPPORTED = 0x80660003,E_HDAUDIO_NO_LOGICAL_DEVICES_CREATED = 0x80660004,E_HDAUDIO_NULL_LINKED_LIST_ENTRY = 0x80660005,};
enum MACRO_FACILITY_NT {FACILITY_NT_BIT = 0x10000000,};
enum MACRO_FACS_S4BIOS {FACS_S4BIOS_SUPPORTED_BIT = 0,FACS_S4BIOS_SUPPORTED = 1,};
enum MACRO_FILE_DEVICE {FILE_DEVICE_SCSI = 0x1B,};
enum MACRO_FILE_LAYOUT {FILE_LAYOUT_NAME_ENTRY_PRIMARY = 0x1,FILE_LAYOUT_NAME_ENTRY_DOS = 0x2,};
enum MACRO_FILE_OPLOCK {FILE_OPLOCK_BROKEN_TO_LEVEL_2 = 0x7,FILE_OPLOCK_BROKEN_TO_NONE = 0x8,FILE_OPBATCH_BREAK_UNDERWAY = 0x9,FILE_NOTIFY_CHANGE_FILE_NAME = 0x1,FILE_NOTIFY_CHANGE_DIR_NAME = 0x2,FILE_NOTIFY_CHANGE_NAME = 0x3,FILE_NOTIFY_CHANGE_ATTRIBUTES = 0x4,FILE_NOTIFY_CHANGE_SIZE = 0x8,FILE_NOTIFY_CHANGE_LAST_WRITE = 0x10,FILE_NOTIFY_CHANGE_LAST_ACCESS = 0x20,FILE_NOTIFY_CHANGE_CREATION = 0x40,FILE_NOTIFY_CHANGE_EA = 0x80,FILE_NOTIFY_CHANGE_SECURITY = 0x100,FILE_NOTIFY_CHANGE_STREAM_NAME = 0x200,FILE_NOTIFY_CHANGE_STREAM_SIZE = 0x400,FILE_NOTIFY_CHANGE_STREAM_WRITE = 0x800,FILE_NOTIFY_VALID_MASK = 0xFFF,FILE_ACTION_ADDED = 0x1,FILE_ACTION_REMOVED = 0x2,FILE_ACTION_MODIFIED = 0x3,FILE_ACTION_RENAMED_OLD_NAME = 0x4,FILE_ACTION_RENAMED_NEW_NAME = 0x5,FILE_ACTION_ADDED_STREAM = 0x6,FILE_ACTION_REMOVED_STREAM = 0x7,FILE_ACTION_MODIFIED_STREAM = 0x8,FILE_ACTION_REMOVED_BY_DELETE = 0x9,FILE_ACTION_ID_NOT_TUNNELLED = 0xA,FILE_ACTION_TUNNELLED_ID_COLLISION = 0xB,FILE_PIPE_BYTE_STREAM_TYPE = 0x0,FILE_PIPE_MESSAGE_TYPE = 0x1,FILE_PIPE_ACCEPT_REMOTE_CLIENTS = 0x0,FILE_PIPE_REJECT_REMOTE_CLIENTS = 0x2,FILE_PIPE_TYPE_VALID_MASK = 0x3,FILE_PIPE_QUEUE_OPERATION = 0x0,FILE_PIPE_COMPLETE_OPERATION = 0x1,FILE_PIPE_BYTE_STREAM_MODE = 0x0,FILE_PIPE_MESSAGE_MODE = 0x1,FILE_PIPE_INBOUND = 0x0,FILE_PIPE_OUTBOUND = 0x1,FILE_PIPE_FULL_DUPLEX = 0x2,FILE_PIPE_DISCONNECTED_STATE = 0x1,FILE_PIPE_LISTENING_STATE = 0x2,FILE_PIPE_CONNECTED_STATE = 0x3,FILE_PIPE_CLOSING_STATE = 0x4,FILE_PIPE_CLIENT_END = 0x0,FILE_PIPE_SERVER_END = 0x1,FILE_CASE_SENSITIVE_SEARCH = 0x1,FILE_CASE_PRESERVED_NAMES = 0x2,FILE_UNICODE_ON_DISK = 0x4,FILE_PERSISTENT_ACLS = 0x8,FILE_FILE_COMPRESSION = 0x10,FILE_VOLUME_QUOTAS = 0x20,FILE_SUPPORTS_SPARSE_FILES = 0x40,FILE_SUPPORTS_REPARSE_POINTS = 0x80,FILE_SUPPORTS_REMOTE_STORAGE = 0x100,FILE_VOLUME_IS_COMPRESSED = 0x8000,FILE_SUPPORTS_OBJECT_IDS = 0x10000,FILE_SUPPORTS_ENCRYPTION = 0x20000,FILE_NAMED_STREAMS = 0x40000,FILE_READ_ONLY_VOLUME = 0x80000,FILE_SEQUENTIAL_WRITE_ONCE = 0x100000,FILE_SUPPORTS_TRANSACTIONS = 0x200000,FILE_SUPPORTS_HARD_LINKS = 0x400000,FILE_SUPPORTS_EXTENDED_ATTRIBUTES = 0x800000,FILE_SUPPORTS_OPEN_BY_FILE_ID = 0x1000000,FILE_SUPPORTS_USN_JOURNAL = 0x2000000,FILE_SUPPORTS_INTEGRITY_STREAMS = 0x4000000,FILE_INVALID_FILE_ID = 0xFFFFFFFF,FILE_NEED_EA = 0x80,FILE_EA_TYPE_BINARY = 0xFFFE,FILE_EA_TYPE_ASCII = 0xFFFD,FILE_EA_TYPE_BITMAP = 0xFFFB,FILE_EA_TYPE_METAFILE = 0xFFFA,FILE_EA_TYPE_ICON = 0xFFF9,FILE_EA_TYPE_EA = 0xFFEE,FILE_EA_TYPE_MVMT = 0xFFDF,FILE_EA_TYPE_MVST = 0xFFDE,FILE_EA_TYPE_ASN1 = 0xFFDD,FILE_EA_TYPE_FAMILY_IDS = 0xFF01,FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_WRITELOCKED = 0x1,FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_VISIBLE_TO_TX = 0x2,FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_VISIBLE_OUTSIDE_TX = 0x4,};
enum MACRO_FILE_REGION {FILE_REGION_USAGE_VALID_CACHED_DATA = 0x1,};
enum MACRO_FILE_SYSTEM {FILE_SYSTEM = 0x22,FAT_FILE_SYSTEM = 0x23,NTFS_FILE_SYSTEM = 0x24,NPFS_FILE_SYSTEM = 0x25,CDFS_FILE_SYSTEM = 0x26,RDR_FILE_SYSTEM = 0x27,};
enum MACRO_HP_RESERVED {HP_RESERVED = 10,};
enum MACRO_I8042_POWER {I8042_POWER_SYS_BUTTON = 0x1,I8042_SLEEP_SYS_BUTTON = 0x2,I8042_WAKE_SYS_BUTTON = 0x4,I8042_SYS_BUTTONS = 0x7,};
enum MACRO_IMAGE_DEBUG {IMAGE_DEBUG_MISC_EXENAME = 1,IMAGE_SEPARATE_DEBUG_SIGNATURE = 18756,};
enum MACRO_IMAGE_MAJOR {IMAGE_MAJOR_LINKER_VERSION = 2,IMAGE_DOS_SIGNATURE = 23117,IMAGE_OS2_SIGNATURE = 17742,IMAGE_OS2_SIGNATURE_LE = 17740,IMAGE_VXD_SIGNATURE = 17740,IMAGE_NT_SIGNATURE = 17744,IMAGE_SIZEOF_FILE_HEADER = 20,IMAGE_FILE_RELOCS_STRIPPED = 1,IMAGE_FILE_EXECUTABLE_IMAGE = 2,IMAGE_FILE_LINE_NUMS_STRIPPED = 4,IMAGE_FILE_LOCAL_SYMS_STRIPPED = 8,IMAGE_FILE_AGGRESIVE_WS_TRIM = 16,IMAGE_FILE_LARGE_ADDRESS_AWARE = 32,IMAGE_FILE_BYTES_REVERSED_LO = 128,IMAGE_FILE_32BIT_MACHINE = 256,IMAGE_FILE_DEBUG_STRIPPED = 512,IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 1024,IMAGE_FILE_NET_RUN_FROM_SWAP = 2048,IMAGE_FILE_SYSTEM = 4096,IMAGE_FILE_DLL = 8192,IMAGE_FILE_UP_SYSTEM_ONLY = 16384,IMAGE_FILE_BYTES_REVERSED_HI = 32768,IMAGE_FILE_MACHINE_UNKNOWN = 0,IMAGE_FILE_MACHINE_I386 = 332,IMAGE_FILE_MACHINE_R3000 = 354,IMAGE_FILE_MACHINE_R4000 = 358,IMAGE_FILE_MACHINE_R10000 = 360,IMAGE_FILE_MACHINE_WCEMIPSV2 = 361,IMAGE_FILE_MACHINE_ALPHA = 388,IMAGE_FILE_MACHINE_SH3 = 418,IMAGE_FILE_MACHINE_SH3DSP = 419,IMAGE_FILE_MACHINE_SH3E = 420,IMAGE_FILE_MACHINE_SH4 = 422,IMAGE_FILE_MACHINE_SH5 = 424,IMAGE_FILE_MACHINE_ARM = 448,IMAGE_FILE_MACHINE_THUMB = 450,IMAGE_FILE_MACHINE_ARMNT = 452,IMAGE_FILE_MACHINE_AM33 = 467,IMAGE_FILE_MACHINE_POWERPC = 496,IMAGE_FILE_MACHINE_POWERPCFP = 497,IMAGE_FILE_MACHINE_IA64 = 512,IMAGE_FILE_MACHINE_MIPS16 = 614,IMAGE_FILE_MACHINE_ALPHA64 = 644,IMAGE_FILE_MACHINE_MIPSFPU = 870,IMAGE_FILE_MACHINE_MIPSFPU16 = 1126,IMAGE_FILE_MACHINE_AXP64 = 644,IMAGE_FILE_MACHINE_TRICORE = 1312,IMAGE_FILE_MACHINE_CEF = 3311,IMAGE_FILE_MACHINE_EBC = 3772,IMAGE_FILE_MACHINE_AMD64 = 34404,IMAGE_FILE_MACHINE_M32R = 36929,IMAGE_FILE_MACHINE_CEE = 49390,IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16,IMAGE_NT_OPTIONAL_HDR32_MAGIC = 267,IMAGE_NT_OPTIONAL_HDR64_MAGIC = 523,IMAGE_ROM_OPTIONAL_HDR_MAGIC = 263,IMAGE_NT_OPTIONAL_HDR_MAGIC = 267,IMAGE_SUBSYSTEM_UNKNOWN = 0,IMAGE_SUBSYSTEM_NATIVE = 1,IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,IMAGE_SUBSYSTEM_OS2_CUI = 5,IMAGE_SUBSYSTEM_POSIX_CUI = 7,IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,IMAGE_SUBSYSTEM_EFI_ROM = 13,IMAGE_SUBSYSTEM_XBOX = 14,IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 32,IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 64,IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 128,IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 256,IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 512,IMAGE_DLLCHARACTERISTICS_NO_SEH = 1024,IMAGE_DLLCHARACTERISTICS_NO_BIND = 2048,IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 4096,IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 8192,IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 32768,IMAGE_LOADER_FLAGS_COMPLUS = 1,IMAGE_LOADER_FLAGS_SYSTEM_GLOBAL = 16777216,IMAGE_DIRECTORY_ENTRY_EXPORT = 0,IMAGE_DIRECTORY_ENTRY_IMPORT = 1,IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,IMAGE_DIRECTORY_ENTRY_SECURITY = 4,IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,IMAGE_DIRECTORY_ENTRY_DEBUG = 6,IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,IMAGE_DIRECTORY_ENTRY_TLS = 9,IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,IMAGE_DIRECTORY_ENTRY_IAT = 12,IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,IMAGE_SIZEOF_SHORT_NAME = 8,IMAGE_SIZEOF_SECTION_HEADER = 40,IMAGE_SCN_TYPE_NO_PAD = 8,IMAGE_SCN_CNT_CODE = 32,IMAGE_SCN_CNT_INITIALIZED_DATA = 64,IMAGE_SCN_CNT_UNINITIALIZED_DATA = 128,IMAGE_SCN_LNK_OTHER = 256,IMAGE_SCN_LNK_INFO = 512,IMAGE_SCN_LNK_REMOVE = 2048,IMAGE_SCN_LNK_COMDAT = 4096,IMAGE_SCN_NO_DEFER_SPEC_EXC = 16384,IMAGE_SCN_GPREL = 32768,IMAGE_SCN_MEM_FARDATA = 32768,IMAGE_SCN_MEM_PURGEABLE = 131072,IMAGE_SCN_MEM_16BIT = 131072,IMAGE_SCN_MEM_LOCKED = 262144,IMAGE_SCN_MEM_PRELOAD = 524288,IMAGE_SCN_ALIGN_1BYTES = 1048576,IMAGE_SCN_ALIGN_2BYTES = 2097152,IMAGE_SCN_ALIGN_4BYTES = 3145728,IMAGE_SCN_ALIGN_8BYTES = 4194304,IMAGE_SCN_ALIGN_16BYTES = 5242880,IMAGE_SCN_ALIGN_32BYTES = 6291456,IMAGE_SCN_ALIGN_64BYTES = 7340032,IMAGE_SCN_ALIGN_128BYTES = 8388608,IMAGE_SCN_ALIGN_256BYTES = 9437184,IMAGE_SCN_ALIGN_512BYTES = 10485760,IMAGE_SCN_ALIGN_1024BYTES = 11534336,IMAGE_SCN_ALIGN_2048BYTES = 12582912,IMAGE_SCN_ALIGN_4096BYTES = 13631488,IMAGE_SCN_ALIGN_8192BYTES = 14680064,IMAGE_SCN_ALIGN_MASK = 15728640,IMAGE_SCN_LNK_NRELOC_OVFL = 16777216,IMAGE_SCN_MEM_DISCARDABLE = 33554432,IMAGE_SCN_MEM_NOT_CACHED = 67108864,IMAGE_SCN_MEM_NOT_PAGED = 134217728,IMAGE_SCN_MEM_SHARED = 268435456,IMAGE_SCN_MEM_EXECUTE = 536870912,IMAGE_SCN_MEM_READ = 1073741824,IMAGE_SCN_MEM_WRITE = -2147483648,IMAGE_SCN_SCALE_INDEX = 1,IMAGE_SIZEOF_SYMBOL = 18,IMAGE_SYM_UNDEFINED = 0,IMAGE_SYM_ABSOLUTE = -1,IMAGE_SYM_DEBUG = -2,IMAGE_SYM_SECTION_MAX = 65279,IMAGE_SYM_SECTION_MAX_EX = 2147483647,IMAGE_SYM_TYPE_NULL = 0,IMAGE_SYM_TYPE_VOID = 1,IMAGE_SYM_TYPE_CHAR = 2,IMAGE_SYM_TYPE_SHORT = 3,IMAGE_SYM_TYPE_INT = 4,IMAGE_SYM_TYPE_LONG = 5,IMAGE_SYM_TYPE_FLOAT = 6,IMAGE_SYM_TYPE_DOUBLE = 7,IMAGE_SYM_TYPE_STRUCT = 8,IMAGE_SYM_TYPE_UNION = 9,IMAGE_SYM_TYPE_ENUM = 10,IMAGE_SYM_TYPE_MOE = 11,IMAGE_SYM_TYPE_UCHAR = 12,IMAGE_SYM_TYPE_USHORT = 13,IMAGE_SYM_TYPE_UINT = 14,IMAGE_SYM_TYPE_ULONG = 15,IMAGE_SYM_TYPE_PCODE = 32768,IMAGE_SYM_DTYPE_NULL = 0,IMAGE_SYM_DTYPE_POINTER = 1,IMAGE_SYM_DTYPE_FUNCTION = 2,IMAGE_SYM_DTYPE_ARRAY = 3,IMAGE_SYM_CLASS_END_OF_FUNCTION = 255,IMAGE_SYM_CLASS_NULL = 0,IMAGE_SYM_CLASS_AUTOMATIC = 1,IMAGE_SYM_CLASS_EXTERNAL = 2,IMAGE_SYM_CLASS_STATIC = 3,IMAGE_SYM_CLASS_REGISTER = 4,IMAGE_SYM_CLASS_EXTERNAL_DEF = 5,IMAGE_SYM_CLASS_LABEL = 6,IMAGE_SYM_CLASS_UNDEFINED_LABEL = 7,IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = 8,IMAGE_SYM_CLASS_ARGUMENT = 9,IMAGE_SYM_CLASS_STRUCT_TAG = 10,IMAGE_SYM_CLASS_MEMBER_OF_UNION = 11,IMAGE_SYM_CLASS_UNION_TAG = 12,IMAGE_SYM_CLASS_TYPE_DEFINITION = 13,IMAGE_SYM_CLASS_UNDEFINED_STATIC = 14,IMAGE_SYM_CLASS_ENUM_TAG = 15,IMAGE_SYM_CLASS_MEMBER_OF_ENUM = 16,IMAGE_SYM_CLASS_REGISTER_PARAM = 17,IMAGE_SYM_CLASS_BIT_FIELD = 18,IMAGE_SYM_CLASS_FAR_EXTERNAL = 68,IMAGE_SYM_CLASS_BLOCK = 100,IMAGE_SYM_CLASS_FUNCTION = 101,IMAGE_SYM_CLASS_END_OF_STRUCT = 102,IMAGE_SYM_CLASS_FILE = 103,IMAGE_SYM_CLASS_SECTION = 104,IMAGE_SYM_CLASS_WEAK_EXTERNAL = 105,IMAGE_SYM_CLASS_CLR_TOKEN = 107,};
enum MACRO_INVALID_MDL {INVALID_MDL_RANGE = 0x12E,};
enum MACRO_IOCTL_61883 {IOCTL_61883_CLASS = 0x220245,};
enum MACRO_IOCTL_CDROM {IOCTL_CDROM_GET_LAST_SESSION = 0x24038,IOCTL_CDROM_RAW_READ = 0x2403E,IOCTL_CDROM_DISK_TYPE = 0x20040,IOCTL_CDROM_GET_DRIVE_GEOMETRY = 0x2404C,IOCTL_CDROM_GET_DRIVE_GEOMETRY_EX = 0x24050,IOCTL_CDROM_READ_TOC_EX = 0x24054,IOCTL_CDROM_GET_CONFIGURATION = 0x24058,IOCTL_CDROM_EXCLUSIVE_ACCESS = 0x2C05C,IOCTL_CDROM_SET_SPEED = 0x24060,IOCTL_CDROM_GET_INQUIRY_DATA = 0x24064,IOCTL_CDROM_ENABLE_STREAMING = 0x24068,IOCTL_CDROM_SEND_OPC_INFORMATION = 0x2C06C,IOCTL_CDROM_GET_PERFORMANCE = 0x24070,IOCTL_CDROM_CHECK_VERIFY = 0x24800,IOCTL_CDROM_MEDIA_REMOVAL = 0x24804,IOCTL_CDROM_EJECT_MEDIA = 0x24808,IOCTL_CDROM_LOAD_MEDIA = 0x2480C,IOCTL_CDROM_RESERVE = 0x24810,IOCTL_CDROM_RELEASE = 0x24814,IOCTL_CDROM_FIND_NEW_DEVICES = 0x24818,};
enum MACRO_IOCTL_MOUSE {IOCTL_MOUSE_QUERY_ATTRIBUTES = 983040,IOCTL_MOUSE_INSERT_DATA = 983044,};
enum MACRO_IOCTL_MPDSM {IOCTL_MPDSM_REGISTER = 0x64736DC004,IOCTL_MPDSM_DEREGISTER = 0x64736DC008,};
enum MACRO_IOCTL_REDIR {IOCTL_REDIR_QUERY_PATH = 1311119,IOCTL_REDIR_QUERY_PATH_EX = 1311123,};
enum MACRO_IOCTL_SDBUS {IOCTL_SDBUS_BASE = 4,IOCTL_SD_SUBMIT_REQUEST = 274547,IOCTL_SD_GET_SOCKET_COUNT = 274548,IOCTL_SD_GET_ADAPTER_SOCKET_INFO = 274552,IOCTL_SYSENV_GET_VARIABLE = 5373956,IOCTL_SYSENV_SET_VARIABLE = 5373960,IOCTL_SYSENV_ENUM_VARIABLES = 5373964,IOCTL_SYSENV_QUERY_VARIABLE_INFO = 5373968,};
enum MACRO_IOCTL_VIDEO {IOCTL_VIDEO_DISABLE_VDM = 0x230004,IOCTL_VIDEO_REGISTER_VDM = 0x230008,IOCTL_VIDEO_SET_OUTPUT_DEVICE_POWER_STATE = 0x23000C,IOCTL_VIDEO_GET_OUTPUT_DEVICE_POWER_STATE = 0x230010,IOCTL_VIDEO_MONITOR_DEVICE = 0x230014,IOCTL_VIDEO_ENUM_MONITOR_PDO = 0x230018,IOCTL_VIDEO_INIT_WIN32K_CALLBACKS = 0x23001C,IOCTL_VIDEO_IS_VGA_DEVICE = 0x230024,IOCTL_VIDEO_USE_DEVICE_IN_SESSION = 0x230028,IOCTL_VIDEO_PREPARE_FOR_EARECOVERY = 0x23002C,IOCTL_VIDEO_ENABLE_VDM = 0x230000,IOCTL_VIDEO_SAVE_HARDWARE_STATE = 0x230200,IOCTL_VIDEO_RESTORE_HARDWARE_STATE = 0x230204,IOCTL_VIDEO_HANDLE_VIDEOPARAMETERS = 0x230020,IOCTL_VIDEO_QUERY_AVAIL_MODES = 0x230400,IOCTL_VIDEO_QUERY_NUM_AVAIL_MODES = 0x230404,IOCTL_VIDEO_QUERY_CURRENT_MODE = 0x230408,IOCTL_VIDEO_SET_CURRENT_MODE = 0x23040C,IOCTL_VIDEO_RESET_DEVICE = 0x230410,IOCTL_VIDEO_LOAD_AND_SET_FONT = 0x230414,IOCTL_VIDEO_SET_PALETTE_REGISTERS = 0x230418,IOCTL_VIDEO_SET_COLOR_REGISTERS = 0x23041C,IOCTL_VIDEO_ENABLE_CURSOR = 0x230420,IOCTL_VIDEO_DISABLE_CURSOR = 0x230424,IOCTL_VIDEO_SET_CURSOR_ATTR = 0x230428,IOCTL_VIDEO_QUERY_CURSOR_ATTR = 0x23042C,IOCTL_VIDEO_SET_CURSOR_POSITION = 0x230430,IOCTL_VIDEO_QUERY_CURSOR_POSITION = 0x230434,IOCTL_VIDEO_ENABLE_POINTER = 0x230438,IOCTL_VIDEO_DISABLE_POINTER = 0x23043C,IOCTL_VIDEO_SET_POINTER_ATTR = 0x230440,IOCTL_VIDEO_QUERY_POINTER_ATTR = 0x230444,IOCTL_VIDEO_SET_POINTER_POSITION = 0x230448,IOCTL_VIDEO_QUERY_POINTER_POSITION = 0x23044C,IOCTL_VIDEO_QUERY_POINTER_CAPABILITIES = 0x230450,IOCTL_VIDEO_GET_BANK_SELECT_CODE = 0x230454,IOCTL_VIDEO_MAP_VIDEO_MEMORY = 0x230458,IOCTL_VIDEO_UNMAP_VIDEO_MEMORY = 0x23045C,IOCTL_VIDEO_QUERY_PUBLIC_ACCESS_RANGES = 0x230460,IOCTL_VIDEO_FREE_PUBLIC_ACCESS_RANGES = 0x230464,IOCTL_VIDEO_QUERY_COLOR_CAPABILITIES = 0x230468,IOCTL_VIDEO_SET_POWER_MANAGEMENT = 0x23046C,IOCTL_VIDEO_GET_POWER_MANAGEMENT = 0x230470,IOCTL_VIDEO_SHARE_VIDEO_MEMORY = 0x230474,IOCTL_VIDEO_UNSHARE_VIDEO_MEMORY = 0x230478,IOCTL_VIDEO_SET_COLOR_LUT_DATA = 0x23047C,IOCTL_VIDEO_GET_CHILD_STATE = 0x230480,IOCTL_VIDEO_VALIDATE_CHILD_STATE_CONFIGURATION = 0x230484,IOCTL_VIDEO_SET_CHILD_STATE_CONFIGURATION = 0x230488,IOCTL_VIDEO_SWITCH_DUALVIEW = 0x23048C,IOCTL_VIDEO_SET_BANK_POSITION = 0x230490,IOCTL_VIDEO_QUERY_SUPPORTED_BRIGHTNESS = 0x230494,IOCTL_VIDEO_QUERY_DISPLAY_BRIGHTNESS = 0x230498,IOCTL_VIDEO_SET_DISPLAY_BRIGHTNESS = 0x23049C,IOCTL_FSVIDEO_COPY_FRAME_BUFFER = 0x340800,IOCTL_FSVIDEO_WRITE_TO_FRAME_BUFFER = 0x340804,IOCTL_FSVIDEO_REVERSE_MOUSE_POINTER = 0x340808,IOCTL_FSVIDEO_SET_CURRENT_MODE = 0x34080C,IOCTL_FSVIDEO_SET_SCREEN_INFORMATION = 0x340810,IOCTL_FSVIDEO_SET_CURSOR_POSITION = 0x340814,};
enum MACRO_IO_ERR_PORT {IO_ERR_PORT_TIMEOUT = 0xC0040075,IO_WARNING_BUS_RESET = 0x80040076,IO_INFO_THROTTLE_COMPLETE = 0x40040077,};
enum MACRO_IO_RESOURCE {IO_RESOURCE_PREFERRED = 0x1,IO_RESOURCE_DEFAULT = 0x2,IO_RESOURCE_ALTERNATIVE = 0x8,};
enum MACRO_IO_TYPE_CSQ {IO_TYPE_CSQ_IRP_CONTEXT = 1,IO_TYPE_CSQ = 2,IO_TYPE_CSQ_EX = 3,};
enum MACRO_IRP_NOCACHE {IRP_NOCACHE = 0x1,IRP_PAGING_IO = 0x2,IRP_MOUNT_COMPLETION = 0x2,IRP_SYNCHRONOUS_API = 0x4,IRP_ASSOCIATED_IRP = 0x8,IRP_BUFFERED_IO = 0x10,IRP_DEALLOCATE_BUFFER = 0x20,IRP_INPUT_OPERATION = 0x40,IRP_SYNCHRONOUS_PAGING_IO = 0x40,IRP_CREATE_OPERATION = 0x80,IRP_READ_OPERATION = 0x100,IRP_WRITE_OPERATION = 0x200,IRP_CLOSE_OPERATION = 0x400,IRP_DEFER_IO_COMPLETION = 0x800,IRP_OB_QUERY_NAME = 0x1000,IRP_HOLD_DEVICE_QUEUE = 0x2000,IRP_UM_DRIVER_INITIATED_IO = 0x400000,IRP_QUOTA_CHARGED = 0x1,IRP_ALLOCATED_MUST_SUCCEED = 0x2,IRP_ALLOCATED_FIXED_SIZE = 0x4,IRP_LOOKASIDE_ALLOCATION = 0x8,};
enum MACRO_KERNEL_DATA {KERNEL_DATA_INPAGE_ERROR = 0x7A,};
enum MACRO_KERNEL_MODE {KERNEL_MODE_EXCEPTION_NOT_HANDLED = 0x8E,KERNEL_MODE_EXCEPTION_NOT_HANDLED_M = 0x1000008E,};
enum MACRO_KSALLOCATOR {KSALLOCATOR_REQUIREMENTF_INPLACE_MODIFIER = 0x1,KSALLOCATOR_REQUIREMENTF_SYSTEM_MEMORY = 0x2,KSALLOCATOR_REQUIREMENTF_FRAME_INTEGRITY = 0x4,KSALLOCATOR_REQUIREMENTF_MUST_ALLOCATE = 0x8,KSALLOCATOR_REQUIREMENTF_PREFERENCES_ONLY = 0x80000000,KSALLOCATOR_OPTIONF_COMPATIBLE = 0x1,KSALLOCATOR_OPTIONF_SYSTEM_MEMORY = 0x2,KSALLOCATOR_OPTIONF_VALID = 0x3,KSALLOCATOR_FLAG_PARTIAL_READ_SUPPORT = 0x10,KSALLOCATOR_FLAG_DEVICE_SPECIFIC = 0x20,KSALLOCATOR_FLAG_CAN_ALLOCATE = 0x40,KSALLOCATOR_FLAG_INSIST_ON_FRAMESIZE_RATIO = 0x80,KSALLOCATOR_FLAG_NO_FRAME_INTEGRITY = 0x100,KSALLOCATOR_FLAG_MULTIPLE_OUTPUT = 0x200,KSALLOCATOR_FLAG_CYCLE = 0x400,KSALLOCATOR_FLAG_ALLOCATOR_EXISTS = 0x800,KSALLOCATOR_FLAG_INDEPENDENT_RANGES = 0x1000,KSALLOCATOR_FLAG_ATTENTION_STEPPING = 0x2000,};
enum MACRO_KSATTRIBUTE {KSATTRIBUTE_REQUIRED = 0x1,};
enum MACRO_KSDATARANGE {KSDATARANGE_BIT_ATTRIBUTES = 1,KSDATARANGE_ATTRIBUTES = 2,KSDATARANGE_BIT_REQUIRED_ATTRIBUTES = 2,KSDATARANGE_REQUIRED_ATTRIBUTES = 4,};
enum MACRO_KSDSOUND_3D {KSDSOUND_3D_MODE_NORMAL = 0x0,KSDSOUND_3D_MODE_HEADRELATIVE = 0x1,KSDSOUND_3D_MODE_DISABLE = 0x2,KSDSOUND_BUFFER_CTRL_HRTF_3D = 0x40000000,};
enum MACRO_KSFRAMETIME {KSFRAMETIME_VARIABLESIZE = 0x1,};
enum MACRO_LANG_SYSTEM {LANG_SYSTEM_DEFAULT = 2048,LANG_USER_DEFAULT = 1024,};
enum MACRO_LINEFEATURE {LINEFEATURE_DEVSPECIFIC = 0x1,LINEFEATURE_DEVSPECIFICFEAT = 0x2,LINEFEATURE_FORWARD = 0x4,LINEFEATURE_MAKECALL = 0x8,LINEFEATURE_SETMEDIACONTROL = 0x10,LINEFEATURE_SETTERMINAL = 0x20,};
enum MACRO_LINETERMDEV {LINETERMDEV_PHONE = 0x1,LINETERMDEV_HEADSET = 0x2,LINETERMDEV_SPEAKER = 0x4,};
enum MACRO_LLDP_DELETE {LLDP_DELETE_TLV = 65535,LLDP_SOMETHING_CHANGED_LOCAL = 1,LLDP_SOMETHING_CHANGED_REMOTE = 2,LLDP_SOMETHING_CHANGED_CONFIG = 4,LLDP_SOMETHING_CHANGED_STATUS = 8,LLDP_SOMETHING_CHANGED_ADDED = 16,LLDP_SOMETHING_CHANGED_REMOVED_TIMEOUT = 32,LLDP_SOMETHING_CHANGED_REMOVED_SHUTDOWN = 64,LLDP_SOMETHING_CHANGED_REMOVED = 96,LLDP_MSAP_INITIAL_NOTIFICATION = 1073741824,LLDP_MSAP_SHUTDOWN = -2147483648,LLDP_ADMIN_CONFIG_REVISION_1 = 1,LLDP_CURRENT_STATUS_REVISION_1 = 1,LLDP_STATISTICS_REVISION_1 = 1,LLDP_CLIENT_CHARACTERISTICS_REVISION_1 = 1,LLDP_PROVIDER_CHARACTERISTICS_REVISION_1 = 1,};
enum MACRO_LOCK_UNLOCK {LOCK_UNLOCK_IEPORT = 0x1,LOCK_UNLOCK_DOOR = 0x2,LOCK_UNLOCK_KEYPAD = 0x4,LOCK_ELEMENT = 0x0,};
enum MACRO_LOGON_GRACE {LOGON_GRACE_LOGON = 0x1000000,};
enum MACRO_MAXIMUM_ATR {MAXIMUM_ATR_CODES = 4,MAXIMUM_ATR_LENGTH = 33,};
enum MACRO_MAXIMUM_CDB {MAXIMUM_CDB_SIZE = 12,};
enum MACRO_MAXIMUM_USB {MAXIMUM_USB_STRING_LENGTH = 255,};
enum MACRO_MAXLONGLONG {MAXLONGLONG = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_MAX_COUNTRY {MAX_COUNTRY_CODE_STRING = 3,};
enum MACRO_MAX_DEVPROP {MAX_DEVPROP_TYPE = 0x19,MAX_DEVPROP_TYPEMOD = 0x2000,};
enum MACRO_MAX_IDE_LBA {MAX_IDE_LBA_RANGE_SECTOR_COUNT_VALUE = 0xFFFF,};
enum MACRO_MAX_LATENCY {C2_MAX_LATENCY = 100,C3_MAX_LATENCY = 1000,};
enum MACRO_MAX_SERVICE {MAX_SERVICE_LENGTH = 40,};
enum MACRO_MCA_WARNING {MCA_WARNING_CMC_THRESHOLD_EXCEEDED = 0x8005006D,MCA_WARNING_CPE_THRESHOLD_EXCEEDED = 0x8005006E,MCA_WARNING_CPU_THERMAL_THROTTLED = 0x8005006F,MCA_INFO_CPU_THERMAL_THROTTLING_REMOVED = 0x40050070,MCA_WARNING_CPU = 0x80050071,MCA_ERROR_CPU = 0xC0050072,MCA_INFO_NO_MORE_CORRECTED_ERROR_LOGS = 0x40050073,MCA_INFO_MEMORY_PAGE_MARKED_BAD = 0x40050074,};
enum MACRO_MIN_UCSCHAR {MIN_UCSCHAR = 0,MAX_UCSCHAR = 1114111,};
enum MACRO_MM_MSFT_ACM {MM_MSFT_ACM_MSAUDIO1 = 39,};
enum MACRO_MM_PREFETCH {MM_PREFETCH_FLAGS_MASK = 127,};
enum MACRO_MODE_SELECT {MODE_SELECT_IMMEDIATE = 0x4,MODE_SELECT_PFBIT = 0x10,};
enum MACRO_MOUSE_ERROR {MOUSE_ERROR_VALUE_BASE = 20000,};
enum MACRO_MRX_CONTEXT {MRX_CONTEXT_FIELD_COUNT = 4,};
enum MACRO_NANOSECONDS {NANOSECONDS = 10000000,};
enum MACRO_NDIS_DEVICE {NDIS_DEVICE_WAKE_UP_ENABLE = 0x1,NDIS_DEVICE_WAKE_ON_PATTERN_MATCH_ENABLE = 0x2,NDIS_DEVICE_WAKE_ON_MAGIC_PACKET_ENABLE = 0x4,};
enum MACRO_NDIS_MEMORY {NDIS_MEMORY_CONTIGUOUS = 0x1,NDIS_MEMORY_NONCACHED = 0x2,NDIS_OPEN_RECEIVE_NOT_REENTRANT = 0x1,NDIS_STATUS_ONLINE = 0x40010003,NDIS_STATUS_RESET_START = 0x40010004,NDIS_STATUS_RESET_END = 0x40010005,NDIS_STATUS_RING_STATUS = 0x40010006,NDIS_STATUS_CLOSED = 0x40010007,NDIS_STATUS_WAN_LINE_UP = 0x40010008,NDIS_STATUS_WAN_LINE_DOWN = 0x40010009,NDIS_STATUS_WAN_FRAGMENT = 0x4001000A,NDIS_STATUS_MEDIA_CONNECT = 0x4001000B,NDIS_STATUS_MEDIA_DISCONNECT = 0x4001000C,NDIS_STATUS_HARDWARE_LINE_UP = 0x4001000D,NDIS_STATUS_HARDWARE_LINE_DOWN = 0x4001000E,NDIS_STATUS_INTERFACE_UP = 0x4001000F,NDIS_STATUS_INTERFACE_DOWN = 0x40010010,NDIS_STATUS_MEDIA_BUSY = 0x40010011,NDIS_STATUS_MEDIA_SPECIFIC_INDICATION = 0x40010012,NDIS_STATUS_WW_INDICATION = 0x40010012,NDIS_STATUS_LINK_SPEED_CHANGE = 0x40010013,NDIS_STATUS_WAN_GET_STATS = 0x40010014,NDIS_STATUS_WAN_CO_FRAGMENT = 0x40010015,NDIS_STATUS_WAN_CO_LINKPARAMS = 0x40010016,NDIS_STATUS_WAN_CO_MTULINKPARAMS = 0x40010025,NDIS_STATUS_LINK_STATE = 0x40010017,NDIS_STATUS_NETWORK_CHANGE = 0x40010018,NDIS_STATUS_MEDIA_SPECIFIC_INDICATION_EX = 0x40010019,NDIS_STATUS_PORT_STATE = 0x40010022,NDIS_STATUS_OPER_STATUS = 0x40010023,NDIS_STATUS_PACKET_FILTER = 0x40010024,NDIS_STATUS_IP_OPER_STATUS = 0x40010026,NDIS_STATUS_OFFLOAD_PAUSE = 0x40020001,NDIS_STATUS_UPLOAD_ALL = 0x40020002,NDIS_STATUS_OFFLOAD_RESUME = 0x40020003,NDIS_STATUS_OFFLOAD_PARTIAL_SUCCESS = 0x40020004,NDIS_STATUS_OFFLOAD_STATE_INVALID = 0x40020005,NDIS_STATUS_TASK_OFFLOAD_CURRENT_CONFIG = 0x40020006,NDIS_STATUS_TASK_OFFLOAD_HARDWARE_CAPABILITIES = 0x40020007,NDIS_STATUS_OFFLOAD_ENCASPULATION_CHANGE = 0x40020008,NDIS_STATUS_TCP_CONNECTION_OFFLOAD_HARDWARE_CAPABILITIES = 0x4002000B,NDIS_STATUS_HD_SPLIT_CURRENT_CONFIG = 0x4002000C,NDIS_STATUS_RECEIVE_QUEUE_STATE = 0x4002000D,NDIS_STATUS_OFFLOAD_IM_RESERVED1 = 0x40020100,NDIS_STATUS_OFFLOAD_IM_RESERVED2 = 0x40020101,NDIS_STATUS_OFFLOAD_IM_RESERVED3 = 0x40020102,NDIS_STATUS_DOT11_SCAN_CONFIRM = 0x40030000,NDIS_STATUS_DOT11_MPDU_MAX_LENGTH_CHANGED = 0x40030001,NDIS_STATUS_DOT11_ASSOCIATION_START = 0x40030002,NDIS_STATUS_DOT11_ASSOCIATION_COMPLETION = 0x40030003,NDIS_STATUS_DOT11_CONNECTION_START = 0x40030004,NDIS_STATUS_DOT11_CONNECTION_COMPLETION = 0x40030005,NDIS_STATUS_DOT11_ROAMING_START = 0x40030006,NDIS_STATUS_DOT11_ROAMING_COMPLETION = 0x40030007,NDIS_STATUS_DOT11_DISASSOCIATION = 0x40030008,NDIS_STATUS_DOT11_TKIPMIC_FAILURE = 0x40030009,NDIS_STATUS_DOT11_PMKID_CANDIDATE_LIST = 0x4003000A,NDIS_STATUS_DOT11_PHY_STATE_CHANGED = 0x4003000B,NDIS_STATUS_DOT11_LINK_QUALITY = 0x4003000C,NDIS_STATUS_DOT11_INCOMING_ASSOC_STARTED = 0x4003000D,NDIS_STATUS_DOT11_INCOMING_ASSOC_REQUEST_RECEIVED = 0x4003000E,NDIS_STATUS_DOT11_INCOMING_ASSOC_COMPLETION = 0x4003000F,NDIS_STATUS_DOT11_STOP_AP = 0x40030010,NDIS_STATUS_DOT11_PHY_FREQUENCY_ADOPTED = 0x40030011,NDIS_STATUS_DOT11_CAN_SUSTAIN_AP = 0x40030012,NDIS_STATUS_DOT11_WFD_DISCOVER_COMPLETE = 0x40030013,NDIS_STATUS_DOT11_WFD_GO_NEGOTIATION_REQUEST_SEND_COMPLETE = 0x40030014,NDIS_STATUS_DOT11_WFD_RECEIVED_GO_NEGOTIATION_REQUEST = 0x40030015,NDIS_STATUS_DOT11_WFD_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE = 0x40030016,NDIS_STATUS_DOT11_WFD_RECEIVED_GO_NEGOTIATION_RESPONSE = 0x40030017,NDIS_STATUS_DOT11_WFD_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE = 0x40030018,NDIS_STATUS_DOT11_WFD_RECEIVED_GO_NEGOTIATION_CONFIRMATION = 0x40030019,NDIS_STATUS_DOT11_WFD_INVITATION_REQUEST_SEND_COMPLETE = 0x4003001A,NDIS_STATUS_DOT11_WFD_RECEIVED_INVITATION_REQUEST = 0x4003001B,NDIS_STATUS_DOT11_WFD_INVITATION_RESPONSE_SEND_COMPLETE = 0x4003001C,NDIS_STATUS_DOT11_WFD_RECEIVED_INVITATION_RESPONSE = 0x4003001D,NDIS_STATUS_DOT11_WFD_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE = 0x4003001E,NDIS_STATUS_DOT11_WFD_RECEIVED_PROVISION_DISCOVERY_REQUEST = 0x4003001F,NDIS_STATUS_DOT11_WFD_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE = 0x40030020,NDIS_STATUS_DOT11_WFD_RECEIVED_PROVISION_DISCOVERY_RESPONSE = 0x40030021,NDIS_STATUS_DOT11_WFD_GROUP_OPERATING_CHANNEL = 0x40030022,NDIS_STATUS_DOT11_OFFLOAD_NETWORK_STATUS_CHANGED = 0x40030023,NDIS_STATUS_DOT11_MANUFACTURING_CALLBACK = 0x40030024,NDIS_STATUS_WWAN_DEVICE_CAPS = 0x40041000,NDIS_STATUS_WWAN_READY_INFO = 0x40041001,NDIS_STATUS_WWAN_RADIO_STATE = 0x40041002,NDIS_STATUS_WWAN_PIN_INFO = 0x40041003,NDIS_STATUS_WWAN_PIN_LIST = 0x40041004,NDIS_STATUS_WWAN_HOME_PROVIDER = 0x40041005,NDIS_STATUS_WWAN_PREFERRED_PROVIDERS = 0x40041006,NDIS_STATUS_WWAN_VISIBLE_PROVIDERS = 0x40041007,NDIS_STATUS_WWAN_REGISTER_STATE = 0x40041008,NDIS_STATUS_WWAN_PACKET_SERVICE = 0x40041009,NDIS_STATUS_WWAN_SIGNAL_STATE = 0x4004100A,NDIS_STATUS_WWAN_CONTEXT_STATE = 0x4004100B,NDIS_STATUS_WWAN_PROVISIONED_CONTEXTS = 0x4004100C,NDIS_STATUS_WWAN_SERVICE_ACTIVATION = 0x4004100D,NDIS_STATUS_WWAN_SMS_CONFIGURATION = 0x4004100E,NDIS_STATUS_WWAN_SMS_RECEIVE = 0x4004100F,NDIS_STATUS_WWAN_SMS_SEND = 0x40041010,NDIS_STATUS_WWAN_SMS_DELETE = 0x40041011,NDIS_STATUS_WWAN_SMS_STATUS = 0x40041012,NDIS_STATUS_WWAN_DNS_ADDRESS = 0x40041013,NDIS_STATUS_WWAN_VENDOR_SPECIFIC = 0x40043000,NDIS_STATUS_PM_WOL_PATTERN_REJECTED = 0x40030051,NDIS_STATUS_PM_OFFLOAD_REJECTED = 0x40030052,NDIS_STATUS_PM_CAPABILITIES_CHANGE = 0x40030053,NDIS_STATUS_SUCCESS = 0x0,NDIS_STATUS_PENDING = 0x103,NDIS_STATUS_NOT_RECOGNIZED = 0x10001,NDIS_STATUS_NOT_COPIED = 0x10002,NDIS_STATUS_NOT_ACCEPTED = 0x10003,NDIS_STATUS_CALL_ACTIVE = 0x10007,NDIS_STATUS_INDICATION_REQUIRED = 0x40230001,NDIS_STATUS_NOT_RESETTABLE = 0x80010001,NDIS_STATUS_SOFT_ERRORS = 0x80010003,NDIS_STATUS_HARD_ERRORS = 0x80010004,NDIS_STATUS_BUFFER_OVERFLOW = 0x80000005,NDIS_STATUS_FAILURE = 0xC0000001,NDIS_STATUS_RESOURCES = 0xC000009A,NDIS_STATUS_CLOSING = 0xC0010002,NDIS_STATUS_BAD_VERSION = 0xC0010004,NDIS_STATUS_BAD_CHARACTERISTICS = 0xC0010005,NDIS_STATUS_ADAPTER_NOT_FOUND = 0xC0010006,NDIS_STATUS_OPEN_FAILED = 0xC0010007,NDIS_STATUS_DEVICE_FAILED = 0xC0010008,NDIS_STATUS_MULTICAST_FULL = 0xC0010009,NDIS_STATUS_MULTICAST_EXISTS = 0xC001000A,NDIS_STATUS_MULTICAST_NOT_FOUND = 0xC001000B,NDIS_STATUS_REQUEST_ABORTED = 0xC001000C,NDIS_STATUS_RESET_IN_PROGRESS = 0xC001000D,NDIS_STATUS_CLOSING_INDICATING = 0xC001000E,NDIS_STATUS_NOT_SUPPORTED = 0xC00000BB,NDIS_STATUS_INVALID_PACKET = 0xC001000F,NDIS_STATUS_OPEN_LIST_FULL = 0xC0010010,NDIS_STATUS_ADAPTER_NOT_READY = 0xC0010011,NDIS_STATUS_ADAPTER_NOT_OPEN = 0xC0010012,NDIS_STATUS_NOT_INDICATING = 0xC0010013,NDIS_STATUS_INVALID_LENGTH = 0xC0010014,NDIS_STATUS_INVALID_DATA = 0xC0010015,NDIS_STATUS_BUFFER_TOO_SHORT = 0xC0010016,NDIS_STATUS_INVALID_OID = 0xC0010017,NDIS_STATUS_ADAPTER_REMOVED = 0xC0010018,NDIS_STATUS_UNSUPPORTED_MEDIA = 0xC0010019,NDIS_STATUS_GROUP_ADDRESS_IN_USE = 0xC001001A,NDIS_STATUS_FILE_NOT_FOUND = 0xC001001B,NDIS_STATUS_ERROR_READING_FILE = 0xC001001C,NDIS_STATUS_ALREADY_MAPPED = 0xC001001D,NDIS_STATUS_RESOURCE_CONFLICT = 0xC001001E,NDIS_STATUS_NO_CABLE = 0xC001001F,NDIS_STATUS_INVALID_DEVICE_REQUEST = 0xC0000010,NDIS_STATUS_NETWORK_UNREACHABLE = 0xC000023C,NDIS_STATUS_DATA_NOT_ACCEPTED = 0xC000021B,NDIS_STATUS_INVALID_SAP = 0xC0010020,NDIS_STATUS_SAP_IN_USE = 0xC0010021,NDIS_STATUS_INVALID_ADDRESS = 0xC0010022,NDIS_STATUS_VC_NOT_ACTIVATED = 0xC0010023,NDIS_STATUS_DEST_OUT_OF_ORDER = 0xC0010024,NDIS_STATUS_VC_NOT_AVAILABLE = 0xC0010025,NDIS_STATUS_CELLRATE_NOT_AVAILABLE = 0xC0010026,NDIS_STATUS_INCOMPATIBLE_QOS = 0xC0010027,NDIS_STATUS_INCOMPATABLE_QOS = 0xC0010027,NDIS_STATUS_AAL_PARAMS_UNSUPPORTED = 0xC0010028,NDIS_STATUS_NO_ROUTE_TO_DESTINATION = 0xC0010029,NDIS_STATUS_TOKEN_RING_OPEN_ERROR = 0xC0011000,NDIS_STATUS_SEND_ABORTED = 0xC023000C,NDIS_STATUS_PAUSED = 0xC023002A,NDIS_STATUS_INTERFACE_NOT_FOUND = 0xC023002B,NDIS_STATUS_INVALID_PARAMETER = 0xC000000D,NDIS_STATUS_UNSUPPORTED_REVISION = 0xC023002C,NDIS_STATUS_INVALID_PORT = 0xC023002D,NDIS_STATUS_INVALID_PORT_STATE = 0xC023002E,NDIS_STATUS_INVALID_STATE = 0xC0000184,NDIS_STATUS_MEDIA_DISCONNECTED = 0xC023001F,NDIS_STATUS_LOW_POWER_STATE = 0xC023002F,NDIS_STATUS_DOT11_AUTO_CONFIG_ENABLED = 0xC0232000,NDIS_STATUS_DOT11_MEDIA_IN_USE = 0xC0232001,NDIS_STATUS_DOT11_POWER_STATE_INVALID = 0xC0232002,NDIS_STATUS_PM_WOL_PATTERN_LIST_FULL = 0xC0232003,NDIS_STATUS_PM_PROTOCOL_OFFLOAD_LIST_FULL = 0xC0232004,NDIS_STATUS_UPLOAD_IN_PROGRESS = 0xC0231001,NDIS_STATUS_REQUEST_UPLOAD = 0xC0231002,NDIS_STATUS_UPLOAD_REQUESTED = 0xC0231003,NDIS_STATUS_OFFLOAD_TCP_ENTRIES = 0xC0231004,NDIS_STATUS_OFFLOAD_PATH_ENTRIES = 0xC0231005,NDIS_STATUS_OFFLOAD_NEIGHBOR_ENTRIES = 0xC0231006,NDIS_STATUS_OFFLOAD_IP_ADDRESS_ENTRIES = 0xC0231007,NDIS_STATUS_OFFLOAD_HW_ADDRESS_ENTRIES = 0xC0231008,NDIS_STATUS_OFFLOAD_VLAN_ENTRIES = 0xC0231009,NDIS_STATUS_OFFLOAD_TCP_XMIT_BUFFER = 0xC023100A,NDIS_STATUS_OFFLOAD_TCP_RCV_BUFFER = 0xC023100B,NDIS_STATUS_OFFLOAD_TCP_RCV_WINDOW = 0xC023100C,NDIS_STATUS_OFFLOAD_VLAN_MISMATCH = 0xC023100D,NDIS_STATUS_OFFLOAD_DATA_NOT_ACCEPTED = 0xC023100E,NDIS_STATUS_OFFLOAD_POLICY = 0xC023100F,NDIS_STATUS_OFFLOAD_DATA_PARTIALLY_ACCEPTED = 0xC0231010,NDIS_STATUS_OFFLOAD_REQUEST_RESET = 0xC0231011,NDIS_STATUS_OFFLOAD_CONNECTION_REJECTED = 0xC0231012,NDIS_ERROR_CODE_RESOURCE_CONFLICT = 0xC0001388,NDIS_ERROR_CODE_OUT_OF_RESOURCES = 0xC0001389,NDIS_ERROR_CODE_HARDWARE_FAILURE = 0xC000138A,NDIS_ERROR_CODE_ADAPTER_NOT_FOUND = 0xC000138B,NDIS_ERROR_CODE_INTERRUPT_CONNECT = 0xC000138C,NDIS_ERROR_CODE_DRIVER_FAILURE = 0xC000138D,NDIS_ERROR_CODE_BAD_VERSION = 0xC000138E,NDIS_ERROR_CODE_TIMEOUT = 0x8000138F,NDIS_ERROR_CODE_NETWORK_ADDRESS = 0xC0001390,NDIS_ERROR_CODE_UNSUPPORTED_CONFIGURATION = 0xC0001391,NDIS_ERROR_CODE_INVALID_VALUE_FROM_ADAPTER = 0xC0001392,NDIS_ERROR_CODE_MISSING_CONFIGURATION_PARAMETER = 0xC0001393,NDIS_ERROR_CODE_BAD_IO_BASE_ADDRESS = 0xC0001394,NDIS_ERROR_CODE_RECEIVE_SPACE_SMALL = 0x40001395,NDIS_ERROR_CODE_ADAPTER_DISABLED = 0x80001396,NDIS_RWL_AT_DISPATCH_LEVEL = 0x1,NDIS_MAX_PROCESSOR_COUNT = 0x20,NDIS_CONFIGURATION_OBJECT_REVISION_1 = 0x1,NDIS_CONFIG_FLAG_FILTER_INSTANCE_CONFIGURATION = 0x1,};
enum MACRO_NDIS_OBJECT {NDIS_OBJECT_TYPE_DEFAULT = 0x80,NDIS_OBJECT_TYPE_MINIPORT_INIT_PARAMETERS = 0x81,NDIS_OBJECT_TYPE_SG_DMA_DESCRIPTION = 0x83,NDIS_OBJECT_TYPE_MINIPORT_INTERRUPT = 0x84,NDIS_OBJECT_TYPE_DEVICE_OBJECT_ATTRIBUTES = 0x85,NDIS_OBJECT_TYPE_BIND_PARAMETERS = 0x86,NDIS_OBJECT_TYPE_OPEN_PARAMETERS = 0x87,NDIS_OBJECT_TYPE_RSS_CAPABILITIES = 0x88,NDIS_OBJECT_TYPE_RSS_PARAMETERS = 0x89,NDIS_OBJECT_TYPE_MINIPORT_DRIVER_CHARACTERISTICS = 0x8A,NDIS_OBJECT_TYPE_FILTER_DRIVER_CHARACTERISTICS = 0x8B,NDIS_OBJECT_TYPE_FILTER_PARTIAL_CHARACTERISTICS = 0x8C,NDIS_OBJECT_TYPE_FILTER_ATTRIBUTES = 0x8D,NDIS_OBJECT_TYPE_CLIENT_CHIMNEY_OFFLOAD_GENERIC_CHARACTERISTICS = 0x8E,NDIS_OBJECT_TYPE_PROVIDER_CHIMNEY_OFFLOAD_GENERIC_CHARACTERISTICS = 0x8F,NDIS_OBJECT_TYPE_CO_PROTOCOL_CHARACTERISTICS = 0x90,NDIS_OBJECT_TYPE_CO_MINIPORT_CHARACTERISTICS = 0x91,NDIS_OBJECT_TYPE_MINIPORT_PNP_CHARACTERISTICS = 0x92,NDIS_OBJECT_TYPE_CLIENT_CHIMNEY_OFFLOAD_CHARACTERISTICS = 0x93,NDIS_OBJECT_TYPE_PROVIDER_CHIMNEY_OFFLOAD_CHARACTERISTICS = 0x94,NDIS_OBJECT_TYPE_PROTOCOL_DRIVER_CHARACTERISTICS = 0x95,NDIS_OBJECT_TYPE_REQUEST_EX = 0x96,NDIS_OBJECT_TYPE_OID_REQUEST = 0x96,NDIS_OBJECT_TYPE_TIMER_CHARACTERISTICS = 0x97,NDIS_OBJECT_TYPE_STATUS_INDICATION = 0x98,NDIS_OBJECT_TYPE_FILTER_ATTACH_PARAMETERS = 0x99,NDIS_OBJECT_TYPE_FILTER_PAUSE_PARAMETERS = 0x9A,NDIS_OBJECT_TYPE_FILTER_RESTART_PARAMETERS = 0x9B,NDIS_OBJECT_TYPE_PORT_CHARACTERISTICS = 0x9C,NDIS_OBJECT_TYPE_PORT_STATE = 0x9D,NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES = 0x9E,NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES = 0x9F,NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES = 0xA0,NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES = 0xA1,NDIS_OBJECT_TYPE_RESTART_GENERAL_ATTRIBUTES = 0xA2,NDIS_OBJECT_TYPE_PROTOCOL_RESTART_PARAMETERS = 0xA3,NDIS_OBJECT_TYPE_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES = 0xA4,NDIS_OBJECT_TYPE_CO_CALL_MANAGER_OPTIONAL_HANDLERS = 0xA5,NDIS_OBJECT_TYPE_CO_CLIENT_OPTIONAL_HANDLERS = 0xA6,NDIS_OBJECT_TYPE_OFFLOAD = 0xA7,NDIS_OBJECT_TYPE_OFFLOAD_ENCAPSULATION = 0xA8,NDIS_OBJECT_TYPE_CONFIGURATION_OBJECT = 0xA9,NDIS_OBJECT_TYPE_DRIVER_WRAPPER_OBJECT = 0xAA,NDIS_OBJECT_TYPE_HD_SPLIT_ATTRIBUTES = 0xAB,NDIS_OBJECT_TYPE_NSI_NETWORK_RW_STRUCT = 0xAC,NDIS_OBJECT_TYPE_NSI_COMPARTMENT_RW_STRUCT = 0xAD,NDIS_OBJECT_TYPE_NSI_INTERFACE_PERSIST_RW_STRUCT = 0xAE,NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES = 0xAF,NDIS_OBJECT_TYPE_SHARED_MEMORY_PROVIDER_CHARACTERISTICS = 0xB0,NDIS_OBJECT_TYPE_RSS_PROCESSOR_INFO = 0xB1,NDIS_OBJECT_REVISION_1 = 0x1,NDIS_STATISTICS_FLAGS_VALID_DIRECTED_FRAMES_RCV = 0x1,NDIS_STATISTICS_FLAGS_VALID_MULTICAST_FRAMES_RCV = 0x2,NDIS_STATISTICS_FLAGS_VALID_BROADCAST_FRAMES_RCV = 0x4,NDIS_STATISTICS_FLAGS_VALID_BYTES_RCV = 0x8,NDIS_STATISTICS_FLAGS_VALID_RCV_DISCARDS = 0x10,NDIS_STATISTICS_FLAGS_VALID_RCV_ERROR = 0x20,NDIS_STATISTICS_FLAGS_VALID_DIRECTED_FRAMES_XMIT = 0x40,NDIS_STATISTICS_FLAGS_VALID_MULTICAST_FRAMES_XMIT = 0x80,NDIS_STATISTICS_FLAGS_VALID_BROADCAST_FRAMES_XMIT = 0x100,NDIS_STATISTICS_FLAGS_VALID_BYTES_XMIT = 0x200,NDIS_STATISTICS_FLAGS_VALID_XMIT_ERROR = 0x400,NDIS_STATISTICS_FLAGS_VALID_XMIT_DISCARDS = 0x8000,NDIS_STATISTICS_FLAGS_VALID_DIRECTED_BYTES_RCV = 0x10000,NDIS_STATISTICS_FLAGS_VALID_MULTICAST_BYTES_RCV = 0x20000,NDIS_STATISTICS_FLAGS_VALID_BROADCAST_BYTES_RCV = 0x40000,NDIS_STATISTICS_FLAGS_VALID_DIRECTED_BYTES_XMIT = 0x80000,NDIS_STATISTICS_FLAGS_VALID_MULTICAST_BYTES_XMIT = 0x100000,NDIS_STATISTICS_FLAGS_VALID_BROADCAST_BYTES_XMIT = 0x200000,NDIS_STATISTICS_INFO_REVISION_1 = 0x1,NDIS_INTERRUPT_MODERATION_CHANGE_NEEDS_RESET = 0x1,NDIS_INTERRUPT_MODERATION_CHANGE_NEEDS_REINITIALIZE = 0x2,NDIS_INTERRUPT_MODERATION_PARAMETERS_REVISION_1 = 0x1,NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES_REVISION_1 = 0x1,NDIS_OBJECT_TYPE_PCI_DEVICE_CUSTOM_PROPERTIES_REVISION_1 = 0x1,NDIS_OBJECT_TYPE_PCI_DEVICE_CUSTOM_PROPERTIES_REVISION_2 = 0x2,};
enum MACRO_NDIS_PACKET {NDIS_PACKET_POOL_TAG_FOR_NWLNKIPX = 1766868046,NDIS_PACKET_POOL_TAG_FOR_NWLNKSPX = 1934640206,NDIS_PACKET_POOL_TAG_FOR_NWLNKNB = 1850754126,NDIS_PACKET_POOL_TAG_FOR_TCPIP = 1951417422,NDIS_PACKET_POOL_TAG_FOR_NBF = 1649427534,NDIS_PACKET_POOL_TAG_FOR_APPLETALK = 1632650318,};
enum MACRO_NET_IF_OPER {NET_IF_OPER_STATUS_DOWN_NOT_AUTHENTICATED = 0x1,NET_IF_OPER_STATUS_DOWN_NOT_MEDIA_CONNECTED = 0x2,NET_IF_OPER_STATUS_DORMANT_PAUSED = 0x4,NET_IF_OPER_STATUS_DORMANT_LOW_POWER = 0x8,NET_IF_COMPARTMENT_ID_UNSPECIFIED = 0x0,NET_IF_COMPARTMENT_ID_PRIMARY = 0x1,NET_IF_OID_IF_ALIAS = 0x1,NET_IF_OID_COMPARTMENT_ID = 0x2,NET_IF_OID_NETWORK_GUID = 0x3,NET_IF_OID_IF_ENTRY = 0x4,NET_SITEID_UNSPECIFIED = 0x0,NET_SITEID_MAXUSER = 0x7FFFFFF,NET_SITEID_MAXSYSTEM = 0xFFFFFFF,NET_IFINDEX_UNSPECIFIED = 0x0,NET_IFLUID_UNSPECIFIED = 0x0,};
enum MACRO_NT_TRANSACT {NT_TRANSACT_MIN_FUNCTION = 1,NT_TRANSACT_CREATE = 1,NT_TRANSACT_IOCTL = 2,NT_TRANSACT_SET_SECURITY_DESC = 3,NT_TRANSACT_NOTIFY_CHANGE = 4,NT_TRANSACT_RENAME = 5,NT_TRANSACT_QUERY_SECURITY_DESC = 6,NT_TRANSACT_QUERY_QUOTA = 7,NT_TRANSACT_SET_QUOTA = 8,NT_TRANSACT_MAX_FUNCTION = 8,};
enum MACRO_OBJECT_PUSH {OBJECT_PUSH_FORMAT_VCARD_2_1 = 0x1,OBJECT_PUSH_FORMAT_VCARD_3_0 = 0x2,OBJECT_PUSH_FORMAT_VCAL_1_0 = 0x3,OBJECT_PUSH_FORMAT_ICAL_2_0 = 0x4,OBJECT_PUSH_FORMAT_VNOTE = 0x5,OBJECT_PUSH_FORMAT_VMESSAGE = 0x6,OBJECT_PUSH_FORMAT_ANY = 0xFF,};
enum MACRO_OBJECT_TYPE {OBJECT_TYPE_CREATE = 0x1,OBJECT_TYPE_ALL_ACCESS = 0xF0001,};
enum MACRO_OBJ_INHERIT {OBJ_INHERIT = 0x2,OBJ_PERMANENT = 0x10,OBJ_EXCLUSIVE = 0x20,OBJ_CASE_INSENSITIVE = 0x40,OBJ_OPENIF = 0x80,OBJ_OPENLINK = 0x100,OBJ_KERNEL_HANDLE = 0x200,OBJ_FORCE_ACCESS_CHECK = 0x400,OBJ_VALID_ATTRIBUTES = 0x7F2,};
enum MACRO_OFFLOAD_MAX {OFFLOAD_MAX_SAS = 3,OFFLOAD_INBOUND_SA = 1,OFFLOAD_OUTBOUND_SA = 2,};
enum MACRO_OPLOCK_FLAG {OPLOCK_FLAG_COMPLETE_IF_OPLOCKED = 0x1,OPLOCK_FLAG_OPLOCK_KEY_CHECK_ONLY = 0x2,OPLOCK_FLAG_BACK_OUT_ATOMIC_OPLOCK = 0x4,OPLOCK_FLAG_IGNORE_OPLOCK_KEYS = 0x8,OPLOCK_FLAG_PARENT_OBJECT = 0x10,OPLOCK_FLAG_CLOSING_DELETE_ON_CLOSE = 0x20,OPLOCK_FLAG_REMOVING_FILE_OR_LINK = 0x40,OPLOCK_FSCTRL_FLAG_ALL_KEYS_MATCH = 0x1,};
enum MACRO_PNP_REPLACE {PNP_REPLACE_NO_MAP = 9223372036854775807,PNP_REPLACE_PARAMETERS_VERSION = 2,PNP_REPLACE_DRIVER_INTERFACE_VERSION = 1,PNP_REPLACE_MEMORY_SUPPORTED = 1,PNP_REPLACE_PROCESSOR_SUPPORTED = 2,PNP_REPLACE_HARDWARE_MEMORY_MIRRORING = 4,PNP_REPLACE_HARDWARE_PAGE_COPY = 8,PNP_REPLACE_HARDWARE_QUIESCE = 16,};
enum MACRO_POWERBUTTON {POWERBUTTON_ACTION_INDEX_NOTHING = 0,POWERBUTTON_ACTION_INDEX_SLEEP = 1,POWERBUTTON_ACTION_INDEX_HIBERNATE = 2,POWERBUTTON_ACTION_INDEX_SHUTDOWN = 3,POWERBUTTON_ACTION_VALUE_NOTHING = 0,POWERBUTTON_ACTION_VALUE_SLEEP = 2,POWERBUTTON_ACTION_VALUE_HIBERNATE = 3,POWERBUTTON_ACTION_VALUE_SHUTDOWN = 6,};
enum MACRO_POWER_CLASS {POWER_CLASS_NOT_NEED_NOT_REPEAT = 0,POWER_CLASS_SELF_POWER_PROVIDE_15W = 1,POWER_CLASS_SELF_POWER_PROVIDE_30W = 2,POWER_CLASS_SELF_POWER_PROVIDE_45W = 3,POWER_CLASS_MAYBE_POWERED_UPTO_1W = 4,POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_2W = 5,POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_5W = 6,POWER_CLASS_IS_POWERED_UPTO_1W_NEEDS_9W = 7,};
enum MACRO_PO_THROTTLE {PO_THROTTLE_NONE = 0,PO_THROTTLE_CONSTANT = 1,PO_THROTTLE_DEGRADE = 2,PO_THROTTLE_ADAPTIVE = 3,PO_THROTTLE_MAXIMUM = 4,};
enum MACRO_PROCESS_DUP {PROCESS_DUP_HANDLE = 0x40,PROCESS_ALL_ACCESS = 0x1FFFFF,};
enum MACRO_QOS_GENERAL {QOS_GENERAL_ID_BASE = 2000,QOS_OBJECT_END_OF_LIST = 2001,QOS_OBJECT_SD_MODE = 2002,QOS_OBJECT_SHAPING_RATE = 2003,QOS_OBJECT_DESTADDR = 2004,};
enum MACRO_RESERVATION {RESERVATION_ACTION_READ_KEYS = 0x0,RESERVATION_ACTION_READ_RESERVATIONS = 0x1,RESERVATION_ACTION_REGISTER = 0x0,RESERVATION_ACTION_RESERVE = 0x1,RESERVATION_ACTION_RELEASE = 0x2,RESERVATION_ACTION_CLEAR = 0x3,RESERVATION_ACTION_PREEMPT = 0x4,RESERVATION_ACTION_PREEMPT_ABORT = 0x5,RESERVATION_ACTION_REGISTER_IGNORE_EXISTING = 0x6,RESERVATION_SCOPE_LU = 0x0,RESERVATION_SCOPE_ELEMENT = 0x2,RESERVATION_TYPE_WRITE_EXCLUSIVE = 0x1,RESERVATION_TYPE_EXCLUSIVE = 0x3,RESERVATION_TYPE_WRITE_EXCLUSIVE_REGISTRANTS = 0x5,RESERVATION_TYPE_EXCLUSIVE_REGISTRANTS = 0x6,};
enum MACRO_RX_ORIGINAL {RX_ORIGINAL_DBG = 0,RX_POOL_WRAPPER = 1,};
enum MACRO_SCARD_CLASS {SCARD_CLASS_VENDOR_INFO = 1,SCARD_CLASS_COMMUNICATIONS = 2,SCARD_CLASS_PROTOCOL = 3,SCARD_CLASS_POWER_MGMT = 4,SCARD_CLASS_SECURITY = 5,SCARD_CLASS_MECHANICAL = 6,SCARD_CLASS_VENDOR_DEFINED = 7,SCARD_CLASS_IFD_PROTOCOL = 8,SCARD_CLASS_ICC_STATE = 9,SCARD_CLASS_PERF = 32766,SCARD_CLASS_SYSTEM = 32767,SCARD_ATTR_VENDOR_NAME = 65792,SCARD_ATTR_VENDOR_IFD_TYPE = 65793,SCARD_ATTR_VENDOR_IFD_VERSION = 65794,SCARD_ATTR_VENDOR_IFD_SERIAL_NO = 65795,SCARD_ATTR_CHANNEL_ID = 131344,SCARD_ATTR_PROTOCOL_TYPES = 196896,SCARD_ATTR_DEFAULT_CLK = 196897,SCARD_ATTR_MAX_CLK = 196898,SCARD_ATTR_DEFAULT_DATA_RATE = 196899,SCARD_ATTR_MAX_DATA_RATE = 196900,SCARD_ATTR_MAX_IFSD = 196901,SCARD_ATTR_POWER_MGMT_SUPPORT = 262449,SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE = 328000,SCARD_ATTR_USER_AUTH_INPUT_DEVICE = 328002,SCARD_ATTR_CHARACTERISTICS = 393552,SCARD_ATTR_CURRENT_PROTOCOL_TYPE = 524801,SCARD_ATTR_CURRENT_CLK = 524802,SCARD_ATTR_CURRENT_F = 524803,SCARD_ATTR_CURRENT_D = 524804,SCARD_ATTR_CURRENT_N = 524805,SCARD_ATTR_CURRENT_W = 524806,SCARD_ATTR_CURRENT_IFSC = 524807,SCARD_ATTR_CURRENT_IFSD = 524808,SCARD_ATTR_CURRENT_BWT = 524809,SCARD_ATTR_CURRENT_CWT = 524810,SCARD_ATTR_CURRENT_EBC_ENCODING = 524811,SCARD_ATTR_EXTENDED_BWT = 524812,SCARD_ATTR_ICC_PRESENCE = 590592,SCARD_ATTR_ICC_INTERFACE_STATUS = 590593,SCARD_ATTR_CURRENT_IO_STATE = 590594,SCARD_ATTR_ATR_STRING = 590595,SCARD_ATTR_ICC_TYPE_PER_ATR = 590596,SCARD_ATTR_ESC_RESET = 499712,SCARD_ATTR_ESC_CANCEL = 499715,SCARD_ATTR_ESC_AUTHREQUEST = 499717,SCARD_ATTR_MAXINPUT = 499719,SCARD_ATTR_DEVICE_UNIT = 2147418113,SCARD_ATTR_DEVICE_IN_USE = 2147418114,SCARD_ATTR_DEVICE_FRIENDLY_NAME_A = 2147418115,SCARD_ATTR_DEVICE_SYSTEM_NAME_A = 2147418116,SCARD_ATTR_DEVICE_FRIENDLY_NAME_W = 2147418117,SCARD_ATTR_DEVICE_SYSTEM_NAME_W = 2147418118,SCARD_ATTR_SUPRESS_T1_IFS_REQUEST = 2147418119,SCARD_PERF_NUM_TRANSMISSIONS = 2147352577,SCARD_PERF_BYTES_TRANSMITTED = 2147352578,SCARD_PERF_TRANSMISSION_TIME = 2147352579,SCARD_ATTR_DEVICE_FRIENDLY_NAME = 2147418115,SCARD_ATTR_DEVICE_SYSTEM_NAME = 2147418116,SCARD_T0_HEADER_LENGTH = 7,SCARD_T0_CMD_LENGTH = 5,SCARD_T1_PROLOGUE_LENGTH = 3,SCARD_T1_EPILOGUE_LENGTH = 2,SCARD_T1_MAX_IFS = 254,SCARD_UNKNOWN = 0,SCARD_ABSENT = 1,SCARD_PRESENT = 2,SCARD_SWALLOWED = 3,SCARD_POWERED = 4,SCARD_NEGOTIABLE = 5,SCARD_SPECIFIC = 6,SCARD_READER_SWALLOWS = 1,SCARD_READER_EJECTS = 2,SCARD_READER_CONFISCATES = 4,SCARD_READER_TYPE_SERIAL = 1,SCARD_READER_TYPE_PARALELL = 2,SCARD_READER_TYPE_KEYBOARD = 4,SCARD_READER_TYPE_SCSI = 8,SCARD_READER_TYPE_IDE = 16,SCARD_READER_TYPE_USB = 32,SCARD_READER_TYPE_PCMCIA = 64,SCARD_READER_TYPE_TPM = 128,SCARD_READER_TYPE_VENDOR = 240,};
enum MACRO_SECPKG_ATTR {SECPKG_ATTR_SIZES = 0,SECPKG_ATTR_NAMES = 1,SECPKG_ATTR_LIFESPAN = 2,SECPKG_ATTR_DCE_INFO = 3,SECPKG_ATTR_STREAM_SIZES = 4,SECPKG_ATTR_KEY_INFO = 5,SECPKG_ATTR_AUTHORITY = 6,SECPKG_ATTR_PROTO_INFO = 7,SECPKG_ATTR_PASSWORD_EXPIRY = 8,SECPKG_ATTR_SESSION_KEY = 9,SECPKG_ATTR_PACKAGE_INFO = 10,SECPKG_ATTR_USER_FLAGS = 11,SECPKG_ATTR_NEGOTIATION_INFO = 12,SECPKG_ATTR_NATIVE_NAMES = 13,SECPKG_ATTR_FLAGS = 14,SECPKG_ATTR_USE_VALIDATED = 15,SECPKG_ATTR_CREDENTIAL_NAME = 16,SECPKG_ATTR_TARGET_INFORMATION = 17,SECPKG_ATTR_ACCESS_TOKEN = 18,SECPKG_ATTR_TARGET = 19,SECPKG_ATTR_AUTHENTICATION_ID = 20,SECPKG_ATTR_LOGOFF_TIME = 21,SECPKG_ATTR_NEGO_KEYS = 22,SECPKG_ATTR_PROMPTING_NEEDED = 24,SECPKG_ATTR_UNIQUE_BINDINGS = 25,SECPKG_ATTR_ENDPOINT_BINDINGS = 26,SECPKG_ATTR_CLIENT_SPECIFIED_TARGET = 27,SECPKG_ATTR_LAST_CLIENT_TOKEN_STATUS = 30,SECPKG_ATTR_NEGO_PKG_INFO = 31,SECPKG_ATTR_NEGO_STATUS = 32,SECPKG_ATTR_CONTEXT_DELETED = 33,SECPKG_ATTR_DTLS_MTU = 34,SECPKG_ATTR_DATAGRAM_SIZES = 4,SECPKG_ATTR_SUBJECT_SECURITY_ATTRIBUTES = 128,SECPKG_ATTR_NEGO_INFO_FLAG_NO_KERBEROS = 1,SECPKG_ATTR_NEGO_INFO_FLAG_NO_NTLM = 2,SECPKG_CONTEXT_EXPORT_RESET_NEW = 1,SECPKG_CONTEXT_EXPORT_DELETE_OLD = 2,SECPKG_CONTEXT_EXPORT_TO_KERNEL = 4,};
enum MACRO_SECPKG_CRED {SECPKG_CRED_INBOUND = 0x1,SECPKG_CRED_OUTBOUND = 0x2,SECPKG_CRED_BOTH = 0x3,SECPKG_CRED_DEFAULT = 0x4,SECPKG_CRED_RESERVED = 0xF0000000,SECPKG_CRED_AUTOLOGON_RESTRICTED = 0x10,SECPKG_CRED_PROCESS_POLICY_ONLY = 0x20,};
enum MACRO_SEC_DELETED {SEC_DELETED_HANDLE = 4294967294,};
enum MACRO_SERVICETYPE {SERVICETYPE_NOTRAFFIC = 0x0,SERVICETYPE_BESTEFFORT = 0x1,SERVICETYPE_CONTROLLEDLOAD = 0x2,SERVICETYPE_GUARANTEED = 0x3,SERVICETYPE_NETWORK_UNAVAILABLE = 0x4,SERVICETYPE_GENERAL_INFORMATION = 0x5,SERVICETYPE_NOCHANGE = 0x6,SERVICETYPE_NONCONFORMING = 0x9,SERVICETYPE_NETWORK_CONTROL = 0xA,SERVICETYPE_QUALITATIVE = 0xD,};
enum MACRO_SESSION_HAS {SESSION_HAS_VALID_VIEWS_ON_EXIT = 0xBA,};
enum MACRO_SE_SECURITY {SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE = 0x1,SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE = 0x2,SE_SECURITY_DESCRIPTOR_VALID_FLAGS = 0x3,};
enum MACRO_SIO_ACQUIRE {SIO_ACQUIRE_PORT_RESERVATION = -1744830364,SIO_RELEASE_PORT_RESERVATION = -1744830363,SIO_ASSOCIATE_PORT_RESERVATION = -1744830362,};
enum MACRO_SIZEOF_IPV6 {SIZEOF_IPV6_ROUTERALERT = 8,};
enum MACRO_STATUS_ACPI {STATUS_ACPI_INVALID_OPCODE = 0xC0140001,STATUS_ACPI_STACK_OVERFLOW = 0xC0140002,STATUS_ACPI_ASSERT_FAILED = 0xC0140003,STATUS_ACPI_INVALID_INDEX = 0xC0140004,STATUS_ACPI_INVALID_ARGUMENT = 0xC0140005,STATUS_ACPI_FATAL = 0xC0140006,STATUS_ACPI_INVALID_SUPERNAME = 0xC0140007,STATUS_ACPI_INVALID_ARGTYPE = 0xC0140008,STATUS_ACPI_INVALID_OBJTYPE = 0xC0140009,STATUS_ACPI_INVALID_TARGETTYPE = 0xC014000A,STATUS_ACPI_INCORRECT_ARGUMENT_COUNT = 0xC014000B,STATUS_ACPI_ADDRESS_NOT_MAPPED = 0xC014000C,STATUS_ACPI_INVALID_EVENTTYPE = 0xC014000D,STATUS_ACPI_HANDLER_COLLISION = 0xC014000E,STATUS_ACPI_INVALID_DATA = 0xC014000F,STATUS_ACPI_INVALID_REGION = 0xC0140010,STATUS_ACPI_INVALID_ACCESS_SIZE = 0xC0140011,STATUS_ACPI_ACQUIRE_GLOBAL_LOCK = 0xC0140012,STATUS_ACPI_ALREADY_INITIALIZED = 0xC0140013,STATUS_ACPI_NOT_INITIALIZED = 0xC0140014,STATUS_ACPI_INVALID_MUTEX_LEVEL = 0xC0140015,STATUS_ACPI_MUTEX_NOT_OWNED = 0xC0140016,STATUS_ACPI_MUTEX_NOT_OWNER = 0xC0140017,STATUS_ACPI_RS_ACCESS = 0xC0140018,STATUS_ACPI_INVALID_TABLE = 0xC0140019,STATUS_ACPI_REG_HANDLER_FAILED = 0xC0140020,STATUS_ACPI_POWER_REQUEST_FAILED = 0xC0140021,STATUS_CTX_WINSTATION_NAME_INVALID = 0xC00A0001,STATUS_CTX_INVALID_PD = 0xC00A0002,STATUS_CTX_PD_NOT_FOUND = 0xC00A0003,STATUS_CTX_CDM_CONNECT = 0x400A0004,STATUS_CTX_CDM_DISCONNECT = 0x400A0005,STATUS_CTX_CLOSE_PENDING = 0xC00A0006,STATUS_CTX_NO_OUTBUF = 0xC00A0007,STATUS_CTX_MODEM_INF_NOT_FOUND = 0xC00A0008,STATUS_CTX_INVALID_MODEMNAME = 0xC00A0009,STATUS_CTX_RESPONSE_ERROR = 0xC00A000A,STATUS_CTX_MODEM_RESPONSE_TIMEOUT = 0xC00A000B,STATUS_CTX_MODEM_RESPONSE_NO_CARRIER = 0xC00A000C,STATUS_CTX_MODEM_RESPONSE_NO_DIALTONE = 0xC00A000D,STATUS_CTX_MODEM_RESPONSE_BUSY = 0xC00A000E,STATUS_CTX_MODEM_RESPONSE_VOICE = 0xC00A000F,STATUS_CTX_TD_ERROR = 0xC00A0010,STATUS_CTX_LICENSE_CLIENT_INVALID = 0xC00A0012,STATUS_CTX_LICENSE_NOT_AVAILABLE = 0xC00A0013,STATUS_CTX_LICENSE_EXPIRED = 0xC00A0014,STATUS_CTX_WINSTATION_NOT_FOUND = 0xC00A0015,STATUS_CTX_WINSTATION_NAME_COLLISION = 0xC00A0016,STATUS_CTX_WINSTATION_BUSY = 0xC00A0017,STATUS_CTX_BAD_VIDEO_MODE = 0xC00A0018,STATUS_CTX_GRAPHICS_INVALID = 0xC00A0022,STATUS_CTX_NOT_CONSOLE = 0xC00A0024,STATUS_CTX_CLIENT_QUERY_TIMEOUT = 0xC00A0026,STATUS_CTX_CONSOLE_DISCONNECT = 0xC00A0027,STATUS_CTX_CONSOLE_CONNECT = 0xC00A0028,STATUS_CTX_SHADOW_DENIED = 0xC00A002A,STATUS_CTX_WINSTATION_ACCESS_DENIED = 0xC00A002B,STATUS_CTX_INVALID_WD = 0xC00A002E,STATUS_CTX_WD_NOT_FOUND = 0xC00A002F,STATUS_CTX_SHADOW_INVALID = 0xC00A0030,STATUS_CTX_SHADOW_DISABLED = 0xC00A0031,STATUS_RDP_PROTOCOL_ERROR = 0xC00A0032,STATUS_CTX_CLIENT_LICENSE_NOT_SET = 0xC00A0033,STATUS_CTX_CLIENT_LICENSE_IN_USE = 0xC00A0034,STATUS_CTX_SHADOW_ENDED_BY_MODE_CHANGE = 0xC00A0035,STATUS_CTX_SHADOW_NOT_RUNNING = 0xC00A0036,STATUS_CTX_LOGON_DISABLED = 0xC00A0037,STATUS_CTX_SECURITY_LAYER_ERROR = 0xC00A0038,STATUS_TS_INCOMPATIBLE_SESSIONS = 0xC00A0039,STATUS_TS_VIDEO_SUBSYSTEM_ERROR = 0xC00A003A,STATUS_PNP_BAD_MPS_TABLE = 0xC0040035,STATUS_PNP_TRANSLATION_FAILED = 0xC0040036,STATUS_PNP_IRQ_TRANSLATION_FAILED = 0xC0040037,STATUS_PNP_INVALID_ID = 0xC0040038,STATUS_IO_REISSUE_AS_CACHED = 0xC0040039,STATUS_MUI_FILE_NOT_FOUND = 0xC00B0001,STATUS_MUI_INVALID_FILE = 0xC00B0002,STATUS_MUI_INVALID_RC_CONFIG = 0xC00B0003,STATUS_MUI_INVALID_LOCALE_NAME = 0xC00B0004,STATUS_MUI_INVALID_ULTIMATEFALLBACK_NAME = 0xC00B0005,STATUS_MUI_FILE_NOT_LOADED = 0xC00B0006,STATUS_RESOURCE_ENUM_USER_STOP = 0xC00B0007,STATUS_FLT_NO_HANDLER_DEFINED = 0xC01C0001,STATUS_FLT_CONTEXT_ALREADY_DEFINED = 0xC01C0002,STATUS_FLT_INVALID_ASYNCHRONOUS_REQUEST = 0xC01C0003,STATUS_FLT_DISALLOW_FAST_IO = 0xC01C0004,STATUS_FLT_INVALID_NAME_REQUEST = 0xC01C0005,STATUS_FLT_NOT_SAFE_TO_POST_OPERATION = 0xC01C0006,STATUS_FLT_NOT_INITIALIZED = 0xC01C0007,STATUS_FLT_FILTER_NOT_READY = 0xC01C0008,STATUS_FLT_POST_OPERATION_CLEANUP = 0xC01C0009,STATUS_FLT_INTERNAL_ERROR = 0xC01C000A,STATUS_FLT_DELETING_OBJECT = 0xC01C000B,STATUS_FLT_MUST_BE_NONPAGED_POOL = 0xC01C000C,STATUS_FLT_DUPLICATE_ENTRY = 0xC01C000D,STATUS_FLT_CBDQ_DISABLED = 0xC01C000E,STATUS_FLT_DO_NOT_ATTACH = 0xC01C000F,STATUS_FLT_DO_NOT_DETACH = 0xC01C0010,STATUS_FLT_INSTANCE_ALTITUDE_COLLISION = 0xC01C0011,STATUS_FLT_INSTANCE_NAME_COLLISION = 0xC01C0012,STATUS_FLT_FILTER_NOT_FOUND = 0xC01C0013,STATUS_FLT_VOLUME_NOT_FOUND = 0xC01C0014,STATUS_FLT_INSTANCE_NOT_FOUND = 0xC01C0015,STATUS_FLT_CONTEXT_ALLOCATION_NOT_FOUND = 0xC01C0016,STATUS_FLT_INVALID_CONTEXT_REGISTRATION = 0xC01C0017,STATUS_FLT_NAME_CACHE_MISS = 0xC01C0018,STATUS_FLT_NO_DEVICE_OBJECT = 0xC01C0019,STATUS_FLT_VOLUME_ALREADY_MOUNTED = 0xC01C001A,STATUS_FLT_ALREADY_ENLISTED = 0xC01C001B,STATUS_FLT_CONTEXT_ALREADY_LINKED = 0xC01C001C,STATUS_FLT_NO_WAITER_FOR_REPLY = 0xC01C0020,STATUS_FLT_REGISTRATION_BUSY = 0xC01C0023,STATUS_SXS_SECTION_NOT_FOUND = 0xC0150001,STATUS_SXS_CANT_GEN_ACTCTX = 0xC0150002,STATUS_SXS_INVALID_ACTCTXDATA_FORMAT = 0xC0150003,STATUS_SXS_ASSEMBLY_NOT_FOUND = 0xC0150004,STATUS_SXS_MANIFEST_FORMAT_ERROR = 0xC0150005,STATUS_SXS_MANIFEST_PARSE_ERROR = 0xC0150006,STATUS_SXS_ACTIVATION_CONTEXT_DISABLED = 0xC0150007,STATUS_SXS_KEY_NOT_FOUND = 0xC0150008,STATUS_SXS_VERSION_CONFLICT = 0xC0150009,STATUS_SXS_WRONG_SECTION_TYPE = 0xC015000A,STATUS_SXS_THREAD_QUERIES_DISABLED = 0xC015000B,STATUS_SXS_ASSEMBLY_MISSING = 0xC015000C,STATUS_SXS_RELEASE_ACTIVATION_CONTEXT = 0x4015000D,STATUS_SXS_PROCESS_DEFAULT_ALREADY_SET = 0xC015000E,STATUS_SXS_EARLY_DEACTIVATION = 0xC015000F,STATUS_SXS_INVALID_DEACTIVATION = 0xC0150010,STATUS_SXS_MULTIPLE_DEACTIVATION = 0xC0150011,STATUS_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = 0xC0150012,STATUS_SXS_PROCESS_TERMINATION_REQUESTED = 0xC0150013,STATUS_SXS_CORRUPT_ACTIVATION_STACK = 0xC0150014,STATUS_SXS_CORRUPTION = 0xC0150015,STATUS_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE = 0xC0150016,STATUS_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME = 0xC0150017,STATUS_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = 0xC0150018,STATUS_SXS_IDENTITY_PARSE_ERROR = 0xC0150019,STATUS_SXS_COMPONENT_STORE_CORRUPT = 0xC015001A,STATUS_SXS_FILE_HASH_MISMATCH = 0xC015001B,STATUS_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT = 0xC015001C,STATUS_SXS_IDENTITIES_DIFFERENT = 0xC015001D,STATUS_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = 0xC015001E,STATUS_SXS_FILE_NOT_PART_OF_ASSEMBLY = 0xC015001F,STATUS_ADVANCED_INSTALLER_FAILED = 0xC0150020,STATUS_XML_ENCODING_MISMATCH = 0xC0150021,STATUS_SXS_MANIFEST_TOO_BIG = 0xC0150022,STATUS_SXS_SETTING_NOT_REGISTERED = 0xC0150023,STATUS_SXS_TRANSACTION_CLOSURE_INCOMPLETE = 0xC0150024,STATUS_SMI_PRIMITIVE_INSTALLER_FAILED = 0xC0150025,STATUS_GENERIC_COMMAND_FAILED = 0xC0150026,STATUS_SXS_FILE_HASH_MISSING = 0xC0150027,STATUS_CLUSTER_INVALID_NODE = 0xC0130001,STATUS_CLUSTER_NODE_EXISTS = 0xC0130002,STATUS_CLUSTER_JOIN_IN_PROGRESS = 0xC0130003,STATUS_CLUSTER_NODE_NOT_FOUND = 0xC0130004,STATUS_CLUSTER_LOCAL_NODE_NOT_FOUND = 0xC0130005,STATUS_CLUSTER_NETWORK_EXISTS = 0xC0130006,STATUS_CLUSTER_NETWORK_NOT_FOUND = 0xC0130007,STATUS_CLUSTER_NETINTERFACE_EXISTS = 0xC0130008,STATUS_CLUSTER_NETINTERFACE_NOT_FOUND = 0xC0130009,STATUS_CLUSTER_INVALID_REQUEST = 0xC013000A,STATUS_CLUSTER_INVALID_NETWORK_PROVIDER = 0xC013000B,STATUS_CLUSTER_NODE_DOWN = 0xC013000C,STATUS_CLUSTER_NODE_UNREACHABLE = 0xC013000D,STATUS_CLUSTER_NODE_NOT_MEMBER = 0xC013000E,STATUS_CLUSTER_JOIN_NOT_IN_PROGRESS = 0xC013000F,STATUS_CLUSTER_INVALID_NETWORK = 0xC0130010,STATUS_CLUSTER_NO_NET_ADAPTERS = 0xC0130011,STATUS_CLUSTER_NODE_UP = 0xC0130012,STATUS_CLUSTER_NODE_PAUSED = 0xC0130013,STATUS_CLUSTER_NODE_NOT_PAUSED = 0xC0130014,STATUS_CLUSTER_NO_SECURITY_CONTEXT = 0xC0130015,STATUS_CLUSTER_NETWORK_NOT_INTERNAL = 0xC0130016,STATUS_CLUSTER_POISONED = 0xC0130017,STATUS_CLUSTER_NON_CSV_PATH = 0xC0130018,STATUS_CLUSTER_CSV_VOLUME_NOT_LOCAL = 0xC0130019,STATUS_CLUSTER_CSV_READ_OPLOCK_BREAK_IN_PROGRESS = 0xC0130020,STATUS_CLUSTER_CSV_AUTO_PAUSE_ERROR = 0xC0130021,STATUS_CLUSTER_CSV_REDIRECTED = 0xC0130022,STATUS_CLUSTER_CSV_NOT_REDIRECTED = 0xC0130023,STATUS_CLUSTER_CSV_VOLUME_DRAINING = 0xC0130024,STATUS_TRANSACTIONAL_CONFLICT = 0xC0190001,STATUS_INVALID_TRANSACTION = 0xC0190002,STATUS_TRANSACTION_NOT_ACTIVE = 0xC0190003,STATUS_TM_INITIALIZATION_FAILED = 0xC0190004,STATUS_RM_NOT_ACTIVE = 0xC0190005,STATUS_RM_METADATA_CORRUPT = 0xC0190006,STATUS_TRANSACTION_NOT_JOINED = 0xC0190007,STATUS_DIRECTORY_NOT_RM = 0xC0190008,STATUS_COULD_NOT_RESIZE_LOG = 0x80190009,STATUS_TRANSACTIONS_UNSUPPORTED_REMOTE = 0xC019000A,STATUS_LOG_RESIZE_INVALID_SIZE = 0xC019000B,STATUS_REMOTE_FILE_VERSION_MISMATCH = 0xC019000C,STATUS_CRM_PROTOCOL_ALREADY_EXISTS = 0xC019000F,STATUS_TRANSACTION_PROPAGATION_FAILED = 0xC0190010,STATUS_CRM_PROTOCOL_NOT_FOUND = 0xC0190011,STATUS_TRANSACTION_SUPERIOR_EXISTS = 0xC0190012,STATUS_TRANSACTION_REQUEST_NOT_VALID = 0xC0190013,STATUS_TRANSACTION_NOT_REQUESTED = 0xC0190014,STATUS_TRANSACTION_ALREADY_ABORTED = 0xC0190015,STATUS_TRANSACTION_ALREADY_COMMITTED = 0xC0190016,STATUS_TRANSACTION_INVALID_MARSHALL_BUFFER = 0xC0190017,STATUS_CURRENT_TRANSACTION_NOT_VALID = 0xC0190018,STATUS_LOG_GROWTH_FAILED = 0xC0190019,STATUS_OBJECT_NO_LONGER_EXISTS = 0xC0190021,STATUS_STREAM_MINIVERSION_NOT_FOUND = 0xC0190022,STATUS_STREAM_MINIVERSION_NOT_VALID = 0xC0190023,STATUS_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION = 0xC0190024,STATUS_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT = 0xC0190025,STATUS_CANT_CREATE_MORE_STREAM_MINIVERSIONS = 0xC0190026,STATUS_HANDLE_NO_LONGER_VALID = 0xC0190028,STATUS_NO_TXF_METADATA = 0x80190029,STATUS_LOG_CORRUPTION_DETECTED = 0xC0190030,STATUS_CANT_RECOVER_WITH_HANDLE_OPEN = 0x80190031,STATUS_RM_DISCONNECTED = 0xC0190032,STATUS_ENLISTMENT_NOT_SUPERIOR = 0xC0190033,STATUS_RECOVERY_NOT_NEEDED = 0x40190034,STATUS_RM_ALREADY_STARTED = 0x40190035,STATUS_FILE_IDENTITY_NOT_PERSISTENT = 0xC0190036,STATUS_CANT_BREAK_TRANSACTIONAL_DEPENDENCY = 0xC0190037,STATUS_CANT_CROSS_RM_BOUNDARY = 0xC0190038,STATUS_TXF_DIR_NOT_EMPTY = 0xC0190039,STATUS_INDOUBT_TRANSACTIONS_EXIST = 0xC019003A,STATUS_TM_VOLATILE = 0xC019003B,STATUS_ROLLBACK_TIMER_EXPIRED = 0xC019003C,STATUS_TXF_ATTRIBUTE_CORRUPT = 0xC019003D,STATUS_EFS_NOT_ALLOWED_IN_TRANSACTION = 0xC019003E,STATUS_TRANSACTIONAL_OPEN_NOT_ALLOWED = 0xC019003F,STATUS_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE = 0xC0190040,STATUS_TXF_METADATA_ALREADY_PRESENT = 0x80190041,STATUS_TRANSACTION_SCOPE_CALLBACKS_NOT_SET = 0x80190042,STATUS_TRANSACTION_REQUIRED_PROMOTION = 0xC0190043,STATUS_CANNOT_EXECUTE_FILE_IN_TRANSACTION = 0xC0190044,STATUS_TRANSACTIONS_NOT_FROZEN = 0xC0190045,STATUS_TRANSACTION_FREEZE_IN_PROGRESS = 0xC0190046,STATUS_NOT_SNAPSHOT_VOLUME = 0xC0190047,STATUS_NO_SAVEPOINT_WITH_OPEN_FILES = 0xC0190048,STATUS_SPARSE_NOT_ALLOWED_IN_TRANSACTION = 0xC0190049,STATUS_TM_IDENTITY_MISMATCH = 0xC019004A,STATUS_FLOATED_SECTION = 0xC019004B,STATUS_CANNOT_ACCEPT_TRANSACTED_WORK = 0xC019004C,STATUS_CANNOT_ABORT_TRANSACTIONS = 0xC019004D,STATUS_TRANSACTION_NOT_FOUND = 0xC019004E,STATUS_RESOURCEMANAGER_NOT_FOUND = 0xC019004F,STATUS_ENLISTMENT_NOT_FOUND = 0xC0190050,STATUS_TRANSACTIONMANAGER_NOT_FOUND = 0xC0190051,STATUS_TRANSACTIONMANAGER_NOT_ONLINE = 0xC0190052,STATUS_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION = 0xC0190053,STATUS_TRANSACTION_NOT_ROOT = 0xC0190054,STATUS_TRANSACTION_OBJECT_EXPIRED = 0xC0190055,STATUS_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION = 0xC0190056,STATUS_TRANSACTION_RESPONSE_NOT_ENLISTED = 0xC0190057,STATUS_TRANSACTION_RECORD_TOO_LONG = 0xC0190058,STATUS_NO_LINK_TRACKING_IN_TRANSACTION = 0xC0190059,STATUS_OPERATION_NOT_SUPPORTED_IN_TRANSACTION = 0xC019005A,STATUS_TRANSACTION_INTEGRITY_VIOLATED = 0xC019005B,STATUS_TRANSACTIONMANAGER_IDENTITY_MISMATCH = 0xC019005C,STATUS_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT = 0xC019005D,STATUS_TRANSACTION_MUST_WRITETHROUGH = 0xC019005E,STATUS_TRANSACTION_NO_SUPERIOR = 0xC019005F,STATUS_EXPIRED_HANDLE = 0xC0190060,STATUS_TRANSACTION_NOT_ENLISTED = 0xC0190061,STATUS_LOG_SECTOR_INVALID = 0xC01A0001,STATUS_LOG_SECTOR_PARITY_INVALID = 0xC01A0002,STATUS_LOG_SECTOR_REMAPPED = 0xC01A0003,STATUS_LOG_BLOCK_INCOMPLETE = 0xC01A0004,STATUS_LOG_INVALID_RANGE = 0xC01A0005,STATUS_LOG_BLOCKS_EXHAUSTED = 0xC01A0006,STATUS_LOG_READ_CONTEXT_INVALID = 0xC01A0007,STATUS_LOG_RESTART_INVALID = 0xC01A0008,STATUS_LOG_BLOCK_VERSION = 0xC01A0009,STATUS_LOG_BLOCK_INVALID = 0xC01A000A,STATUS_LOG_READ_MODE_INVALID = 0xC01A000B,STATUS_LOG_NO_RESTART = 0x401A000C,STATUS_LOG_METADATA_CORRUPT = 0xC01A000D,STATUS_LOG_METADATA_INVALID = 0xC01A000E,STATUS_LOG_METADATA_INCONSISTENT = 0xC01A000F,STATUS_LOG_RESERVATION_INVALID = 0xC01A0010,STATUS_LOG_CANT_DELETE = 0xC01A0011,STATUS_LOG_CONTAINER_LIMIT_EXCEEDED = 0xC01A0012,STATUS_LOG_START_OF_LOG = 0xC01A0013,STATUS_LOG_POLICY_ALREADY_INSTALLED = 0xC01A0014,STATUS_LOG_POLICY_NOT_INSTALLED = 0xC01A0015,STATUS_LOG_POLICY_INVALID = 0xC01A0016,STATUS_LOG_POLICY_CONFLICT = 0xC01A0017,STATUS_LOG_PINNED_ARCHIVE_TAIL = 0xC01A0018,STATUS_LOG_RECORD_NONEXISTENT = 0xC01A0019,STATUS_LOG_RECORDS_RESERVED_INVALID = 0xC01A001A,STATUS_LOG_SPACE_RESERVED_INVALID = 0xC01A001B,STATUS_LOG_TAIL_INVALID = 0xC01A001C,STATUS_LOG_FULL = 0xC01A001D,STATUS_LOG_MULTIPLEXED = 0xC01A001E,STATUS_LOG_DEDICATED = 0xC01A001F,STATUS_LOG_ARCHIVE_NOT_IN_PROGRESS = 0xC01A0020,STATUS_LOG_ARCHIVE_IN_PROGRESS = 0xC01A0021,STATUS_LOG_EPHEMERAL = 0xC01A0022,STATUS_LOG_NOT_ENOUGH_CONTAINERS = 0xC01A0023,STATUS_LOG_CLIENT_ALREADY_REGISTERED = 0xC01A0024,STATUS_LOG_CLIENT_NOT_REGISTERED = 0xC01A0025,STATUS_LOG_FULL_HANDLER_IN_PROGRESS = 0xC01A0026,STATUS_LOG_CONTAINER_READ_FAILED = 0xC01A0027,STATUS_LOG_CONTAINER_WRITE_FAILED = 0xC01A0028,STATUS_LOG_CONTAINER_OPEN_FAILED = 0xC01A0029,STATUS_LOG_CONTAINER_STATE_INVALID = 0xC01A002A,STATUS_LOG_STATE_INVALID = 0xC01A002B,STATUS_LOG_PINNED = 0xC01A002C,STATUS_LOG_METADATA_FLUSH_FAILED = 0xC01A002D,STATUS_LOG_INCONSISTENT_SECURITY = 0xC01A002E,STATUS_LOG_APPENDED_FLUSH_FAILED = 0xC01A002F,STATUS_LOG_PINNED_RESERVATION = 0xC01A0030,STATUS_VIDEO_HUNG_DISPLAY_DRIVER_THREAD = 0xC01B00EA,STATUS_VIDEO_HUNG_DISPLAY_DRIVER_THREAD_RECOVERED = 0x801B00EB,STATUS_VIDEO_DRIVER_DEBUG_REPORT_REQUEST = 0x401B00EC,STATUS_MONITOR_NO_DESCRIPTOR = 0xC01D0001,STATUS_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT = 0xC01D0002,STATUS_MONITOR_INVALID_DESCRIPTOR_CHECKSUM = 0xC01D0003,STATUS_MONITOR_INVALID_STANDARD_TIMING_BLOCK = 0xC01D0004,STATUS_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED = 0xC01D0005,STATUS_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK = 0xC01D0006,STATUS_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK = 0xC01D0007,STATUS_MONITOR_NO_MORE_DESCRIPTOR_DATA = 0xC01D0008,STATUS_MONITOR_INVALID_DETAILED_TIMING_BLOCK = 0xC01D0009,STATUS_MONITOR_INVALID_MANUFACTURE_DATE = 0xC01D000A,STATUS_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER = 0xC01E0000,STATUS_GRAPHICS_INSUFFICIENT_DMA_BUFFER = 0xC01E0001,STATUS_GRAPHICS_INVALID_DISPLAY_ADAPTER = 0xC01E0002,STATUS_GRAPHICS_ADAPTER_WAS_RESET = 0xC01E0003,STATUS_GRAPHICS_INVALID_DRIVER_MODEL = 0xC01E0004,STATUS_GRAPHICS_PRESENT_MODE_CHANGED = 0xC01E0005,STATUS_GRAPHICS_PRESENT_OCCLUDED = 0xC01E0006,STATUS_GRAPHICS_PRESENT_DENIED = 0xC01E0007,STATUS_GRAPHICS_CANNOTCOLORCONVERT = 0xC01E0008,STATUS_GRAPHICS_DRIVER_MISMATCH = 0xC01E0009,STATUS_GRAPHICS_PARTIAL_DATA_POPULATED = 0x401E000A,STATUS_GRAPHICS_PRESENT_REDIRECTION_DISABLED = 0xC01E000B,STATUS_GRAPHICS_PRESENT_UNOCCLUDED = 0xC01E000C,STATUS_GRAPHICS_WINDOWDC_NOT_AVAILABLE = 0xC01E000D,STATUS_GRAPHICS_WINDOWLESS_PRESENT_DISABLED = 0xC01E000E,STATUS_GRAPHICS_NO_VIDEO_MEMORY = 0xC01E0100,STATUS_GRAPHICS_CANT_LOCK_MEMORY = 0xC01E0101,STATUS_GRAPHICS_ALLOCATION_BUSY = 0xC01E0102,STATUS_GRAPHICS_TOO_MANY_REFERENCES = 0xC01E0103,STATUS_GRAPHICS_TRY_AGAIN_LATER = 0xC01E0104,STATUS_GRAPHICS_TRY_AGAIN_NOW = 0xC01E0105,STATUS_GRAPHICS_ALLOCATION_INVALID = 0xC01E0106,STATUS_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE = 0xC01E0107,STATUS_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED = 0xC01E0108,STATUS_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION = 0xC01E0109,STATUS_GRAPHICS_INVALID_ALLOCATION_USAGE = 0xC01E0110,STATUS_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION = 0xC01E0111,STATUS_GRAPHICS_ALLOCATION_CLOSED = 0xC01E0112,STATUS_GRAPHICS_INVALID_ALLOCATION_INSTANCE = 0xC01E0113,STATUS_GRAPHICS_INVALID_ALLOCATION_HANDLE = 0xC01E0114,STATUS_GRAPHICS_WRONG_ALLOCATION_DEVICE = 0xC01E0115,STATUS_GRAPHICS_ALLOCATION_CONTENT_LOST = 0xC01E0116,STATUS_GRAPHICS_GPU_EXCEPTION_ON_DEVICE = 0xC01E0200,STATUS_GRAPHICS_SKIP_ALLOCATION_PREPARATION = 0x401E0201,STATUS_GRAPHICS_INVALID_VIDPN_TOPOLOGY = 0xC01E0300,STATUS_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED = 0xC01E0301,STATUS_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED = 0xC01E0302,STATUS_GRAPHICS_INVALID_VIDPN = 0xC01E0303,STATUS_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE = 0xC01E0304,STATUS_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET = 0xC01E0305,STATUS_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED = 0xC01E0306,STATUS_GRAPHICS_MODE_NOT_PINNED = 0x401E0307,STATUS_GRAPHICS_INVALID_VIDPN_SOURCEMODESET = 0xC01E0308,STATUS_GRAPHICS_INVALID_VIDPN_TARGETMODESET = 0xC01E0309,STATUS_GRAPHICS_INVALID_FREQUENCY = 0xC01E030A,STATUS_GRAPHICS_INVALID_ACTIVE_REGION = 0xC01E030B,STATUS_GRAPHICS_INVALID_TOTAL_REGION = 0xC01E030C,STATUS_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE = 0xC01E0310,STATUS_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE = 0xC01E0311,STATUS_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET = 0xC01E0312,STATUS_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY = 0xC01E0313,STATUS_GRAPHICS_MODE_ALREADY_IN_MODESET = 0xC01E0314,STATUS_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET = 0xC01E0315,STATUS_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET = 0xC01E0316,STATUS_GRAPHICS_SOURCE_ALREADY_IN_SET = 0xC01E0317,STATUS_GRAPHICS_TARGET_ALREADY_IN_SET = 0xC01E0318,STATUS_GRAPHICS_INVALID_VIDPN_PRESENT_PATH = 0xC01E0319,STATUS_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY = 0xC01E031A,STATUS_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET = 0xC01E031B,STATUS_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE = 0xC01E031C,STATUS_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET = 0xC01E031D,STATUS_GRAPHICS_NO_PREFERRED_MODE = 0x401E031E,STATUS_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET = 0xC01E031F,STATUS_GRAPHICS_STALE_MODESET = 0xC01E0320,STATUS_GRAPHICS_INVALID_MONITOR_SOURCEMODESET = 0xC01E0321,STATUS_GRAPHICS_INVALID_MONITOR_SOURCE_MODE = 0xC01E0322,STATUS_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN = 0xC01E0323,STATUS_GRAPHICS_MODE_ID_MUST_BE_UNIQUE = 0xC01E0324,STATUS_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION = 0xC01E0325,STATUS_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES = 0xC01E0326,STATUS_GRAPHICS_PATH_NOT_IN_TOPOLOGY = 0xC01E0327,STATUS_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE = 0xC01E0328,STATUS_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET = 0xC01E0329,STATUS_GRAPHICS_INVALID_MONITORDESCRIPTORSET = 0xC01E032A,STATUS_GRAPHICS_INVALID_MONITORDESCRIPTOR = 0xC01E032B,STATUS_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET = 0xC01E032C,STATUS_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET = 0xC01E032D,STATUS_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE = 0xC01E032E,STATUS_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE = 0xC01E032F,STATUS_GRAPHICS_RESOURCES_NOT_RELATED = 0xC01E0330,STATUS_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE = 0xC01E0331,STATUS_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE = 0xC01E0332,STATUS_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET = 0xC01E0333,STATUS_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER = 0xC01E0334,STATUS_GRAPHICS_NO_VIDPNMGR = 0xC01E0335,STATUS_GRAPHICS_NO_ACTIVE_VIDPN = 0xC01E0336,STATUS_GRAPHICS_STALE_VIDPN_TOPOLOGY = 0xC01E0337,STATUS_GRAPHICS_MONITOR_NOT_CONNECTED = 0xC01E0338,STATUS_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY = 0xC01E0339,STATUS_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE = 0xC01E033A,STATUS_GRAPHICS_INVALID_VISIBLEREGION_SIZE = 0xC01E033B,STATUS_GRAPHICS_INVALID_STRIDE = 0xC01E033C,STATUS_GRAPHICS_INVALID_PIXELFORMAT = 0xC01E033D,STATUS_GRAPHICS_INVALID_COLORBASIS = 0xC01E033E,STATUS_GRAPHICS_INVALID_PIXELVALUEACCESSMODE = 0xC01E033F,STATUS_GRAPHICS_TARGET_NOT_IN_TOPOLOGY = 0xC01E0340,STATUS_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT = 0xC01E0341,STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE = 0xC01E0342,STATUS_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN = 0xC01E0343,STATUS_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL = 0xC01E0344,STATUS_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION = 0xC01E0345,STATUS_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED = 0xC01E0346,STATUS_GRAPHICS_INVALID_GAMMA_RAMP = 0xC01E0347,STATUS_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED = 0xC01E0348,STATUS_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED = 0xC01E0349,STATUS_GRAPHICS_MODE_NOT_IN_MODESET = 0xC01E034A,STATUS_GRAPHICS_DATASET_IS_EMPTY = 0x401E034B,STATUS_GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET = 0x401E034C,STATUS_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON = 0xC01E034D,STATUS_GRAPHICS_INVALID_PATH_CONTENT_TYPE = 0xC01E034E,STATUS_GRAPHICS_INVALID_COPYPROTECTION_TYPE = 0xC01E034F,STATUS_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS = 0xC01E0350,STATUS_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED = 0x401E0351,STATUS_GRAPHICS_INVALID_SCANLINE_ORDERING = 0xC01E0352,STATUS_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED = 0xC01E0353,STATUS_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS = 0xC01E0354,STATUS_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT = 0xC01E0355,STATUS_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM = 0xC01E0356,STATUS_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN = 0xC01E0357,STATUS_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT = 0xC01E0358,STATUS_GRAPHICS_MAX_NUM_PATHS_REACHED = 0xC01E0359,STATUS_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION = 0xC01E035A,STATUS_GRAPHICS_INVALID_CLIENT_TYPE = 0xC01E035B,STATUS_GRAPHICS_CLIENTVIDPN_NOT_SET = 0xC01E035C,STATUS_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED = 0xC01E0400,STATUS_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED = 0xC01E0401,STATUS_GRAPHICS_UNKNOWN_CHILD_STATUS = 0x401E042F,STATUS_GRAPHICS_NOT_A_LINKED_ADAPTER = 0xC01E0430,STATUS_GRAPHICS_LEADLINK_NOT_ENUMERATED = 0xC01E0431,STATUS_GRAPHICS_CHAINLINKS_NOT_ENUMERATED = 0xC01E0432,STATUS_GRAPHICS_ADAPTER_CHAIN_NOT_READY = 0xC01E0433,STATUS_GRAPHICS_CHAINLINKS_NOT_STARTED = 0xC01E0434,STATUS_GRAPHICS_CHAINLINKS_NOT_POWERED_ON = 0xC01E0435,STATUS_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE = 0xC01E0436,STATUS_GRAPHICS_LEADLINK_START_DEFERRED = 0x401E0437,STATUS_GRAPHICS_NOT_POST_DEVICE_DRIVER = 0xC01E0438,STATUS_GRAPHICS_POLLING_TOO_FREQUENTLY = 0x401E0439,STATUS_GRAPHICS_START_DEFERRED = 0x401E043A,STATUS_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED = 0xC01E043B,STATUS_GRAPHICS_OPM_NOT_SUPPORTED = 0xC01E0500,STATUS_GRAPHICS_COPP_NOT_SUPPORTED = 0xC01E0501,STATUS_GRAPHICS_UAB_NOT_SUPPORTED = 0xC01E0502,STATUS_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS = 0xC01E0503,STATUS_GRAPHICS_OPM_NO_PROTECTED_OUTPUTS_EXIST = 0xC01E0505,STATUS_GRAPHICS_OPM_INTERNAL_ERROR = 0xC01E050B,STATUS_GRAPHICS_OPM_INVALID_HANDLE = 0xC01E050C,STATUS_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH = 0xC01E050E,STATUS_GRAPHICS_OPM_SPANNING_MODE_ENABLED = 0xC01E050F,STATUS_GRAPHICS_OPM_THEATER_MODE_ENABLED = 0xC01E0510,STATUS_GRAPHICS_PVP_HFS_FAILED = 0xC01E0511,STATUS_GRAPHICS_OPM_INVALID_SRM = 0xC01E0512,STATUS_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP = 0xC01E0513,STATUS_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP = 0xC01E0514,STATUS_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA = 0xC01E0515,STATUS_GRAPHICS_OPM_HDCP_SRM_NEVER_SET = 0xC01E0516,STATUS_GRAPHICS_OPM_RESOLUTION_TOO_HIGH = 0xC01E0517,STATUS_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE = 0xC01E0518,STATUS_GRAPHICS_OPM_PROTECTED_OUTPUT_NO_LONGER_EXISTS = 0xC01E051A,STATUS_GRAPHICS_OPM_PROTECTED_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS = 0xC01E051C,STATUS_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST = 0xC01E051D,STATUS_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR = 0xC01E051E,STATUS_GRAPHICS_OPM_PROTECTED_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS = 0xC01E051F,STATUS_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED = 0xC01E0520,STATUS_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST = 0xC01E0521,STATUS_GRAPHICS_I2C_NOT_SUPPORTED = 0xC01E0580,STATUS_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST = 0xC01E0581,STATUS_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA = 0xC01E0582,STATUS_GRAPHICS_I2C_ERROR_RECEIVING_DATA = 0xC01E0583,STATUS_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED = 0xC01E0584,STATUS_GRAPHICS_DDCCI_INVALID_DATA = 0xC01E0585,STATUS_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE = 0xC01E0586,STATUS_GRAPHICS_DDCCI_INVALID_CAPABILITIES_STRING = 0xC01E0587,STATUS_GRAPHICS_MCA_INTERNAL_ERROR = 0xC01E0588,STATUS_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND = 0xC01E0589,STATUS_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH = 0xC01E058A,STATUS_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM = 0xC01E058B,STATUS_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE = 0xC01E058C,STATUS_GRAPHICS_MONITOR_NO_LONGER_EXISTS = 0xC01E058D,STATUS_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED = 0xC01E05E0,STATUS_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME = 0xC01E05E1,STATUS_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP = 0xC01E05E2,STATUS_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED = 0xC01E05E3,STATUS_GRAPHICS_INVALID_POINTER = 0xC01E05E4,STATUS_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE = 0xC01E05E5,STATUS_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL = 0xC01E05E6,STATUS_GRAPHICS_INTERNAL_ERROR = 0xC01E05E7,STATUS_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS = 0xC01E05E8,STATUS_FVE_LOCKED_VOLUME = 0xC0210000,STATUS_FVE_NOT_ENCRYPTED = 0xC0210001,STATUS_FVE_BAD_INFORMATION = 0xC0210002,STATUS_FVE_TOO_SMALL = 0xC0210003,STATUS_FVE_FAILED_WRONG_FS = 0xC0210004,STATUS_FVE_BAD_PARTITION_SIZE = 0xC0210005,STATUS_FVE_FS_NOT_EXTENDED = 0xC0210006,STATUS_FVE_FS_MOUNTED = 0xC0210007,STATUS_FVE_NO_LICENSE = 0xC0210008,STATUS_FVE_ACTION_NOT_ALLOWED = 0xC0210009,STATUS_FVE_BAD_DATA = 0xC021000A,STATUS_FVE_VOLUME_NOT_BOUND = 0xC021000B,STATUS_FVE_NOT_DATA_VOLUME = 0xC021000C,STATUS_FVE_CONV_READ_ERROR = 0xC021000D,STATUS_FVE_CONV_WRITE_ERROR = 0xC021000E,STATUS_FVE_OVERLAPPED_UPDATE = 0xC021000F,STATUS_FVE_FAILED_SECTOR_SIZE = 0xC0210010,STATUS_FVE_FAILED_AUTHENTICATION = 0xC0210011,STATUS_FVE_NOT_OS_VOLUME = 0xC0210012,STATUS_FVE_KEYFILE_NOT_FOUND = 0xC0210013,STATUS_FVE_KEYFILE_INVALID = 0xC0210014,STATUS_FVE_KEYFILE_NO_VMK = 0xC0210015,STATUS_FVE_TPM_DISABLED = 0xC0210016,STATUS_FVE_TPM_SRK_AUTH_NOT_ZERO = 0xC0210017,STATUS_FVE_TPM_INVALID_PCR = 0xC0210018,STATUS_FVE_TPM_NO_VMK = 0xC0210019,STATUS_FVE_PIN_INVALID = 0xC021001A,STATUS_FVE_AUTH_INVALID_APPLICATION = 0xC021001B,STATUS_FVE_AUTH_INVALID_CONFIG = 0xC021001C,STATUS_FVE_DEBUGGER_ENABLED = 0xC021001D,STATUS_FVE_DRY_RUN_FAILED = 0xC021001E,STATUS_FVE_BAD_METADATA_POINTER = 0xC021001F,STATUS_FVE_OLD_METADATA_COPY = 0xC0210020,STATUS_FVE_REBOOT_REQUIRED = 0xC0210021,STATUS_FVE_RAW_ACCESS = 0xC0210022,STATUS_FVE_RAW_BLOCKED = 0xC0210023,STATUS_FVE_NO_AUTOUNLOCK_MASTER_KEY = 0xC0210024,STATUS_FVE_MOR_FAILED = 0xC0210025,STATUS_FVE_NO_FEATURE_LICENSE = 0xC0210026,STATUS_FVE_POLICY_USER_DISABLE_RDV_NOT_ALLOWED = 0xC0210027,STATUS_FVE_CONV_RECOVERY_FAILED = 0xC0210028,STATUS_FVE_VIRTUALIZED_SPACE_TOO_BIG = 0xC0210029,STATUS_FVE_INVALID_DATUM_TYPE = 0xC021002A,STATUS_FVE_VOLUME_TOO_SMALL = 0xC0210030,STATUS_FVE_ENH_PIN_INVALID = 0xC0210031,STATUS_FVE_FULL_ENCRYPTION_NOT_ALLOWED_ON_TP_STORAGE = 0xC0210032,STATUS_FVE_WIPE_NOT_ALLOWED_ON_TP_STORAGE = 0xC0210033,STATUS_FVE_NOT_ALLOWED_ON_CSV_STACK = 0xC0210034,STATUS_FVE_NOT_ALLOWED_ON_CLUSTER = 0xC0210035,STATUS_FVE_NOT_ALLOWED_TO_UPGRADE_WHILE_CONVERTING = 0xC0210036,STATUS_FVE_WIPE_CANCEL_NOT_APPLICABLE = 0xC0210037,STATUS_FVE_EDRIVE_DRY_RUN_FAILED = 0xC0210038,STATUS_FVE_SECUREBOOT_DISABLED = 0xC0210039,STATUS_FVE_SECUREBOOT_CONFIG_CHANGE = 0xC021003A,STATUS_FVE_DEVICE_LOCKEDOUT = 0xC021003B,STATUS_FWP_CALLOUT_NOT_FOUND = 0xC0220001,STATUS_FWP_CONDITION_NOT_FOUND = 0xC0220002,STATUS_FWP_FILTER_NOT_FOUND = 0xC0220003,STATUS_FWP_LAYER_NOT_FOUND = 0xC0220004,STATUS_FWP_PROVIDER_NOT_FOUND = 0xC0220005,STATUS_FWP_PROVIDER_CONTEXT_NOT_FOUND = 0xC0220006,STATUS_FWP_SUBLAYER_NOT_FOUND = 0xC0220007,STATUS_FWP_NOT_FOUND = 0xC0220008,STATUS_FWP_ALREADY_EXISTS = 0xC0220009,STATUS_FWP_IN_USE = 0xC022000A,STATUS_FWP_DYNAMIC_SESSION_IN_PROGRESS = 0xC022000B,STATUS_FWP_WRONG_SESSION = 0xC022000C,STATUS_FWP_NO_TXN_IN_PROGRESS = 0xC022000D,STATUS_FWP_TXN_IN_PROGRESS = 0xC022000E,STATUS_FWP_TXN_ABORTED = 0xC022000F,STATUS_FWP_SESSION_ABORTED = 0xC0220010,STATUS_FWP_INCOMPATIBLE_TXN = 0xC0220011,STATUS_FWP_TIMEOUT = 0xC0220012,STATUS_FWP_NET_EVENTS_DISABLED = 0xC0220013,STATUS_FWP_INCOMPATIBLE_LAYER = 0xC0220014,STATUS_FWP_KM_CLIENTS_ONLY = 0xC0220015,STATUS_FWP_LIFETIME_MISMATCH = 0xC0220016,STATUS_FWP_BUILTIN_OBJECT = 0xC0220017,STATUS_FWP_TOO_MANY_CALLOUTS = 0xC0220018,STATUS_FWP_NOTIFICATION_DROPPED = 0xC0220019,STATUS_FWP_TRAFFIC_MISMATCH = 0xC022001A,STATUS_FWP_INCOMPATIBLE_SA_STATE = 0xC022001B,STATUS_FWP_NULL_POINTER = 0xC022001C,STATUS_FWP_INVALID_ENUMERATOR = 0xC022001D,STATUS_FWP_INVALID_FLAGS = 0xC022001E,STATUS_FWP_INVALID_NET_MASK = 0xC022001F,STATUS_FWP_INVALID_RANGE = 0xC0220020,STATUS_FWP_INVALID_INTERVAL = 0xC0220021,STATUS_FWP_ZERO_LENGTH_ARRAY = 0xC0220022,STATUS_FWP_NULL_DISPLAY_NAME = 0xC0220023,STATUS_FWP_INVALID_ACTION_TYPE = 0xC0220024,STATUS_FWP_INVALID_WEIGHT = 0xC0220025,STATUS_FWP_MATCH_TYPE_MISMATCH = 0xC0220026,STATUS_FWP_TYPE_MISMATCH = 0xC0220027,STATUS_FWP_OUT_OF_BOUNDS = 0xC0220028,STATUS_FWP_RESERVED = 0xC0220029,STATUS_FWP_DUPLICATE_CONDITION = 0xC022002A,STATUS_FWP_DUPLICATE_KEYMOD = 0xC022002B,STATUS_FWP_ACTION_INCOMPATIBLE_WITH_LAYER = 0xC022002C,STATUS_FWP_ACTION_INCOMPATIBLE_WITH_SUBLAYER = 0xC022002D,STATUS_FWP_CONTEXT_INCOMPATIBLE_WITH_LAYER = 0xC022002E,STATUS_FWP_CONTEXT_INCOMPATIBLE_WITH_CALLOUT = 0xC022002F,STATUS_FWP_INCOMPATIBLE_AUTH_METHOD = 0xC0220030,STATUS_FWP_INCOMPATIBLE_DH_GROUP = 0xC0220031,STATUS_FWP_EM_NOT_SUPPORTED = 0xC0220032,STATUS_FWP_NEVER_MATCH = 0xC0220033,STATUS_FWP_PROVIDER_CONTEXT_MISMATCH = 0xC0220034,STATUS_FWP_INVALID_PARAMETER = 0xC0220035,STATUS_FWP_TOO_MANY_SUBLAYERS = 0xC0220036,STATUS_FWP_CALLOUT_NOTIFICATION_FAILED = 0xC0220037,STATUS_FWP_INVALID_AUTH_TRANSFORM = 0xC0220038,STATUS_FWP_INVALID_CIPHER_TRANSFORM = 0xC0220039,STATUS_FWP_INCOMPATIBLE_CIPHER_TRANSFORM = 0xC022003A,STATUS_FWP_INVALID_TRANSFORM_COMBINATION = 0xC022003B,STATUS_FWP_DUPLICATE_AUTH_METHOD = 0xC022003C,STATUS_FWP_INVALID_TUNNEL_ENDPOINT = 0xC022003D,STATUS_FWP_L2_DRIVER_NOT_READY = 0xC022003E,STATUS_FWP_KEY_DICTATOR_ALREADY_REGISTERED = 0xC022003F,STATUS_FWP_KEY_DICTATION_INVALID_KEYING_MATERIAL = 0xC0220040,STATUS_FWP_CONNECTIONS_DISABLED = 0xC0220041,STATUS_FWP_INVALID_DNS_NAME = 0xC0220042,STATUS_FWP_STILL_ON = 0xC0220043,STATUS_FWP_IKEEXT_NOT_RUNNING = 0xC0220044,STATUS_FWP_TCPIP_NOT_READY = 0xC0220100,STATUS_FWP_INJECT_HANDLE_CLOSING = 0xC0220101,STATUS_FWP_INJECT_HANDLE_STALE = 0xC0220102,STATUS_FWP_CANNOT_PEND = 0xC0220103,STATUS_FWP_DROP_NOICMP = 0xC0220104,STATUS_NDIS_CLOSING = 0xC0230002,STATUS_NDIS_BAD_VERSION = 0xC0230004,STATUS_NDIS_BAD_CHARACTERISTICS = 0xC0230005,STATUS_NDIS_ADAPTER_NOT_FOUND = 0xC0230006,STATUS_NDIS_OPEN_FAILED = 0xC0230007,STATUS_NDIS_DEVICE_FAILED = 0xC0230008,STATUS_NDIS_MULTICAST_FULL = 0xC0230009,STATUS_NDIS_MULTICAST_EXISTS = 0xC023000A,STATUS_NDIS_MULTICAST_NOT_FOUND = 0xC023000B,STATUS_NDIS_REQUEST_ABORTED = 0xC023000C,STATUS_NDIS_RESET_IN_PROGRESS = 0xC023000D,STATUS_NDIS_NOT_SUPPORTED = 0xC02300BB,STATUS_NDIS_INVALID_PACKET = 0xC023000F,STATUS_NDIS_ADAPTER_NOT_READY = 0xC0230011,STATUS_NDIS_INVALID_LENGTH = 0xC0230014,STATUS_NDIS_INVALID_DATA = 0xC0230015,STATUS_NDIS_BUFFER_TOO_SHORT = 0xC0230016,STATUS_NDIS_INVALID_OID = 0xC0230017,STATUS_NDIS_ADAPTER_REMOVED = 0xC0230018,STATUS_NDIS_UNSUPPORTED_MEDIA = 0xC0230019,STATUS_NDIS_GROUP_ADDRESS_IN_USE = 0xC023001A,STATUS_NDIS_FILE_NOT_FOUND = 0xC023001B,STATUS_NDIS_ERROR_READING_FILE = 0xC023001C,STATUS_NDIS_ALREADY_MAPPED = 0xC023001D,STATUS_NDIS_RESOURCE_CONFLICT = 0xC023001E,STATUS_NDIS_MEDIA_DISCONNECTED = 0xC023001F,STATUS_NDIS_INVALID_ADDRESS = 0xC0230022,STATUS_NDIS_INVALID_DEVICE_REQUEST = 0xC0230010,STATUS_NDIS_PAUSED = 0xC023002A,STATUS_NDIS_INTERFACE_NOT_FOUND = 0xC023002B,STATUS_NDIS_UNSUPPORTED_REVISION = 0xC023002C,STATUS_NDIS_INVALID_PORT = 0xC023002D,STATUS_NDIS_INVALID_PORT_STATE = 0xC023002E,STATUS_NDIS_LOW_POWER_STATE = 0xC023002F,STATUS_NDIS_REINIT_REQUIRED = 0xC0230030,STATUS_NDIS_DOT11_AUTO_CONFIG_ENABLED = 0xC0232000,STATUS_NDIS_DOT11_MEDIA_IN_USE = 0xC0232001,STATUS_NDIS_DOT11_POWER_STATE_INVALID = 0xC0232002,STATUS_NDIS_PM_WOL_PATTERN_LIST_FULL = 0xC0232003,STATUS_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL = 0xC0232004,STATUS_NDIS_INDICATION_REQUIRED = 0x40230001,STATUS_NDIS_OFFLOAD_POLICY = 0xC023100F,STATUS_NDIS_OFFLOAD_CONNECTION_REJECTED = 0xC0231012,STATUS_NDIS_OFFLOAD_PATH_REJECTED = 0xC0231013,STATUS_TPM_ERROR_MASK = 0xC0290000,STATUS_TPM_AUTHFAIL = 0xC0290001,STATUS_TPM_BADINDEX = 0xC0290002,STATUS_TPM_BAD_PARAMETER = 0xC0290003,STATUS_TPM_AUDITFAILURE = 0xC0290004,STATUS_TPM_CLEAR_DISABLED = 0xC0290005,STATUS_TPM_DEACTIVATED = 0xC0290006,STATUS_TPM_DISABLED = 0xC0290007,STATUS_TPM_DISABLED_CMD = 0xC0290008,STATUS_TPM_FAIL = 0xC0290009,STATUS_TPM_BAD_ORDINAL = 0xC029000A,STATUS_TPM_INSTALL_DISABLED = 0xC029000B,STATUS_TPM_INVALID_KEYHANDLE = 0xC029000C,STATUS_TPM_KEYNOTFOUND = 0xC029000D,STATUS_TPM_INAPPROPRIATE_ENC = 0xC029000E,STATUS_TPM_MIGRATEFAIL = 0xC029000F,STATUS_TPM_INVALID_PCR_INFO = 0xC0290010,STATUS_TPM_NOSPACE = 0xC0290011,STATUS_TPM_NOSRK = 0xC0290012,STATUS_TPM_NOTSEALED_BLOB = 0xC0290013,STATUS_TPM_OWNER_SET = 0xC0290014,STATUS_TPM_RESOURCES = 0xC0290015,STATUS_TPM_SHORTRANDOM = 0xC0290016,STATUS_TPM_SIZE = 0xC0290017,STATUS_TPM_WRONGPCRVAL = 0xC0290018,STATUS_TPM_BAD_PARAM_SIZE = 0xC0290019,STATUS_TPM_SHA_THREAD = 0xC029001A,STATUS_TPM_SHA_ERROR = 0xC029001B,STATUS_TPM_FAILEDSELFTEST = 0xC029001C,STATUS_TPM_AUTH2FAIL = 0xC029001D,STATUS_TPM_BADTAG = 0xC029001E,STATUS_TPM_IOERROR = 0xC029001F,STATUS_TPM_ENCRYPT_ERROR = 0xC0290020,STATUS_TPM_DECRYPT_ERROR = 0xC0290021,STATUS_TPM_INVALID_AUTHHANDLE = 0xC0290022,STATUS_TPM_NO_ENDORSEMENT = 0xC0290023,STATUS_TPM_INVALID_KEYUSAGE = 0xC0290024,STATUS_TPM_WRONG_ENTITYTYPE = 0xC0290025,STATUS_TPM_INVALID_POSTINIT = 0xC0290026,STATUS_TPM_INAPPROPRIATE_SIG = 0xC0290027,STATUS_TPM_BAD_KEY_PROPERTY = 0xC0290028,STATUS_TPM_BAD_MIGRATION = 0xC0290029,STATUS_TPM_BAD_SCHEME = 0xC029002A,STATUS_TPM_BAD_DATASIZE = 0xC029002B,STATUS_TPM_BAD_MODE = 0xC029002C,STATUS_TPM_BAD_PRESENCE = 0xC029002D,STATUS_TPM_BAD_VERSION = 0xC029002E,STATUS_TPM_NO_WRAP_TRANSPORT = 0xC029002F,STATUS_TPM_AUDITFAIL_UNSUCCESSFUL = 0xC0290030,STATUS_TPM_AUDITFAIL_SUCCESSFUL = 0xC0290031,STATUS_TPM_NOTRESETABLE = 0xC0290032,STATUS_TPM_NOTLOCAL = 0xC0290033,STATUS_TPM_BAD_TYPE = 0xC0290034,STATUS_TPM_INVALID_RESOURCE = 0xC0290035,STATUS_TPM_NOTFIPS = 0xC0290036,STATUS_TPM_INVALID_FAMILY = 0xC0290037,STATUS_TPM_NO_NV_PERMISSION = 0xC0290038,STATUS_TPM_REQUIRES_SIGN = 0xC0290039,STATUS_TPM_KEY_NOTSUPPORTED = 0xC029003A,STATUS_TPM_AUTH_CONFLICT = 0xC029003B,STATUS_TPM_AREA_LOCKED = 0xC029003C,STATUS_TPM_BAD_LOCALITY = 0xC029003D,STATUS_TPM_READ_ONLY = 0xC029003E,STATUS_TPM_PER_NOWRITE = 0xC029003F,STATUS_TPM_FAMILYCOUNT = 0xC0290040,STATUS_TPM_WRITE_LOCKED = 0xC0290041,STATUS_TPM_BAD_ATTRIBUTES = 0xC0290042,STATUS_TPM_INVALID_STRUCTURE = 0xC0290043,STATUS_TPM_KEY_OWNER_CONTROL = 0xC0290044,STATUS_TPM_BAD_COUNTER = 0xC0290045,STATUS_TPM_NOT_FULLWRITE = 0xC0290046,STATUS_TPM_CONTEXT_GAP = 0xC0290047,STATUS_TPM_MAXNVWRITES = 0xC0290048,STATUS_TPM_NOOPERATOR = 0xC0290049,STATUS_TPM_RESOURCEMISSING = 0xC029004A,STATUS_TPM_DELEGATE_LOCK = 0xC029004B,STATUS_TPM_DELEGATE_FAMILY = 0xC029004C,STATUS_TPM_DELEGATE_ADMIN = 0xC029004D,STATUS_TPM_TRANSPORT_NOTEXCLUSIVE = 0xC029004E,STATUS_TPM_OWNER_CONTROL = 0xC029004F,STATUS_TPM_DAA_RESOURCES = 0xC0290050,STATUS_TPM_DAA_INPUT_DATA0 = 0xC0290051,STATUS_TPM_DAA_INPUT_DATA1 = 0xC0290052,STATUS_TPM_DAA_ISSUER_SETTINGS = 0xC0290053,STATUS_TPM_DAA_TPM_SETTINGS = 0xC0290054,STATUS_TPM_DAA_STAGE = 0xC0290055,STATUS_TPM_DAA_ISSUER_VALIDITY = 0xC0290056,STATUS_TPM_DAA_WRONG_W = 0xC0290057,STATUS_TPM_BAD_HANDLE = 0xC0290058,STATUS_TPM_BAD_DELEGATE = 0xC0290059,STATUS_TPM_BADCONTEXT = 0xC029005A,STATUS_TPM_TOOMANYCONTEXTS = 0xC029005B,STATUS_TPM_MA_TICKET_SIGNATURE = 0xC029005C,STATUS_TPM_MA_DESTINATION = 0xC029005D,STATUS_TPM_MA_SOURCE = 0xC029005E,STATUS_TPM_MA_AUTHORITY = 0xC029005F,STATUS_TPM_PERMANENTEK = 0xC0290061,STATUS_TPM_BAD_SIGNATURE = 0xC0290062,STATUS_TPM_NOCONTEXTSPACE = 0xC0290063,STATUS_TPM_COMMAND_BLOCKED = 0xC0290400,STATUS_TPM_INVALID_HANDLE = 0xC0290401,STATUS_TPM_DUPLICATE_VHANDLE = 0xC0290402,STATUS_TPM_EMBEDDED_COMMAND_BLOCKED = 0xC0290403,STATUS_TPM_EMBEDDED_COMMAND_UNSUPPORTED = 0xC0290404,STATUS_TPM_RETRY = 0xC0290800,STATUS_TPM_NEEDS_SELFTEST = 0xC0290801,STATUS_TPM_DOING_SELFTEST = 0xC0290802,STATUS_TPM_DEFEND_LOCK_RUNNING = 0xC0290803,STATUS_TPM_COMMAND_CANCELED = 0xC0291001,STATUS_TPM_TOO_MANY_CONTEXTS = 0xC0291002,STATUS_TPM_NOT_FOUND = 0xC0291003,STATUS_TPM_ACCESS_DENIED = 0xC0291004,STATUS_TPM_INSUFFICIENT_BUFFER = 0xC0291005,STATUS_TPM_PPI_FUNCTION_UNSUPPORTED = 0xC0291006,STATUS_PCP_ERROR_MASK = 0xC0292000,STATUS_PCP_DEVICE_NOT_READY = 0xC0292001,STATUS_PCP_INVALID_HANDLE = 0xC0292002,STATUS_PCP_INVALID_PARAMETER = 0xC0292003,STATUS_PCP_FLAG_NOT_SUPPORTED = 0xC0292004,STATUS_PCP_NOT_SUPPORTED = 0xC0292005,STATUS_PCP_BUFFER_TOO_SMALL = 0xC0292006,STATUS_PCP_INTERNAL_ERROR = 0xC0292007,STATUS_PCP_AUTHENTICATION_FAILED = 0xC0292008,STATUS_PCP_AUTHENTICATION_IGNORED = 0xC0292009,STATUS_PCP_POLICY_NOT_FOUND = 0xC029200A,STATUS_PCP_PROFILE_NOT_FOUND = 0xC029200B,STATUS_PCP_VALIDATION_FAILED = 0xC029200C,STATUS_HV_INVALID_HYPERCALL_CODE = 0xC0350002,STATUS_HV_INVALID_HYPERCALL_INPUT = 0xC0350003,STATUS_HV_INVALID_ALIGNMENT = 0xC0350004,STATUS_HV_INVALID_PARAMETER = 0xC0350005,STATUS_HV_ACCESS_DENIED = 0xC0350006,STATUS_HV_INVALID_PARTITION_STATE = 0xC0350007,STATUS_HV_OPERATION_DENIED = 0xC0350008,STATUS_HV_UNKNOWN_PROPERTY = 0xC0350009,STATUS_HV_PROPERTY_VALUE_OUT_OF_RANGE = 0xC035000A,STATUS_HV_INSUFFICIENT_MEMORY = 0xC035000B,STATUS_HV_PARTITION_TOO_DEEP = 0xC035000C,STATUS_HV_INVALID_PARTITION_ID = 0xC035000D,STATUS_HV_INVALID_VP_INDEX = 0xC035000E,STATUS_HV_INVALID_PORT_ID = 0xC0350011,STATUS_HV_INVALID_CONNECTION_ID = 0xC0350012,STATUS_HV_INSUFFICIENT_BUFFERS = 0xC0350013,STATUS_HV_NOT_ACKNOWLEDGED = 0xC0350014,STATUS_HV_ACKNOWLEDGED = 0xC0350016,STATUS_HV_INVALID_SAVE_RESTORE_STATE = 0xC0350017,STATUS_HV_INVALID_SYNIC_STATE = 0xC0350018,STATUS_HV_OBJECT_IN_USE = 0xC0350019,STATUS_HV_INVALID_PROXIMITY_DOMAIN_INFO = 0xC035001A,STATUS_HV_NO_DATA = 0xC035001B,STATUS_HV_INACTIVE = 0xC035001C,STATUS_HV_NO_RESOURCES = 0xC035001D,STATUS_HV_FEATURE_UNAVAILABLE = 0xC035001E,STATUS_HV_INSUFFICIENT_DEVICE_DOMAINS = 0xC0350038,STATUS_HV_INVALID_LP_INDEX = 0xC0350041,STATUS_HV_NOT_PRESENT = 0xC0351000,STATUS_VID_DUPLICATE_HANDLER = 0xC0370001,STATUS_VID_TOO_MANY_HANDLERS = 0xC0370002,STATUS_VID_QUEUE_FULL = 0xC0370003,STATUS_VID_HANDLER_NOT_PRESENT = 0xC0370004,STATUS_VID_INVALID_OBJECT_NAME = 0xC0370005,STATUS_VID_PARTITION_NAME_TOO_LONG = 0xC0370006,STATUS_VID_MESSAGE_QUEUE_NAME_TOO_LONG = 0xC0370007,STATUS_VID_PARTITION_ALREADY_EXISTS = 0xC0370008,STATUS_VID_PARTITION_DOES_NOT_EXIST = 0xC0370009,STATUS_VID_PARTITION_NAME_NOT_FOUND = 0xC037000A,STATUS_VID_MESSAGE_QUEUE_ALREADY_EXISTS = 0xC037000B,STATUS_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT = 0xC037000C,STATUS_VID_MB_STILL_REFERENCED = 0xC037000D,STATUS_VID_CHILD_GPA_PAGE_SET_CORRUPTED = 0xC037000E,STATUS_VID_INVALID_NUMA_SETTINGS = 0xC037000F,STATUS_VID_INVALID_NUMA_NODE_INDEX = 0xC0370010,STATUS_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED = 0xC0370011,STATUS_VID_INVALID_MEMORY_BLOCK_HANDLE = 0xC0370012,STATUS_VID_PAGE_RANGE_OVERFLOW = 0xC0370013,STATUS_VID_INVALID_MESSAGE_QUEUE_HANDLE = 0xC0370014,STATUS_VID_INVALID_GPA_RANGE_HANDLE = 0xC0370015,STATUS_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE = 0xC0370016,STATUS_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED = 0xC0370017,STATUS_VID_INVALID_PPM_HANDLE = 0xC0370018,STATUS_VID_MBPS_ARE_LOCKED = 0xC0370019,STATUS_VID_MESSAGE_QUEUE_CLOSED = 0xC037001A,STATUS_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED = 0xC037001B,STATUS_VID_STOP_PENDING = 0xC037001C,STATUS_VID_INVALID_PROCESSOR_STATE = 0xC037001D,STATUS_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT = 0xC037001E,STATUS_VID_KM_INTERFACE_ALREADY_INITIALIZED = 0xC037001F,STATUS_VID_MB_PROPERTY_ALREADY_SET_RESET = 0xC0370020,STATUS_VID_MMIO_RANGE_DESTROYED = 0xC0370021,STATUS_VID_INVALID_CHILD_GPA_PAGE_SET = 0xC0370022,STATUS_VID_RESERVE_PAGE_SET_IS_BEING_USED = 0xC0370023,STATUS_VID_RESERVE_PAGE_SET_TOO_SMALL = 0xC0370024,STATUS_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE = 0xC0370025,STATUS_VID_MBP_COUNT_EXCEEDED_LIMIT = 0xC0370026,STATUS_VID_SAVED_STATE_CORRUPT = 0xC0370027,STATUS_VID_SAVED_STATE_UNRECOGNIZED_ITEM = 0xC0370028,STATUS_VID_SAVED_STATE_INCOMPATIBLE = 0xC0370029,STATUS_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED = 0x80370001,STATUS_IPSEC_BAD_SPI = 0xC0360001,STATUS_IPSEC_SA_LIFETIME_EXPIRED = 0xC0360002,STATUS_IPSEC_WRONG_SA = 0xC0360003,STATUS_IPSEC_REPLAY_CHECK_FAILED = 0xC0360004,STATUS_IPSEC_INVALID_PACKET = 0xC0360005,STATUS_IPSEC_INTEGRITY_CHECK_FAILED = 0xC0360006,STATUS_IPSEC_CLEAR_TEXT_DROP = 0xC0360007,STATUS_IPSEC_AUTH_FIREWALL_DROP = 0xC0360008,STATUS_IPSEC_THROTTLE_DROP = 0xC0360009,STATUS_IPSEC_DOSP_BLOCK = 0xC0368000,STATUS_IPSEC_DOSP_RECEIVED_MULTICAST = 0xC0368001,STATUS_IPSEC_DOSP_INVALID_PACKET = 0xC0368002,STATUS_IPSEC_DOSP_STATE_LOOKUP_FAILED = 0xC0368003,STATUS_IPSEC_DOSP_MAX_ENTRIES = 0xC0368004,STATUS_IPSEC_DOSP_KEYMOD_NOT_ALLOWED = 0xC0368005,STATUS_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES = 0xC0368006,STATUS_VOLMGR_INCOMPLETE_REGENERATION = 0x80380001,STATUS_VOLMGR_INCOMPLETE_DISK_MIGRATION = 0x80380002,STATUS_VOLMGR_DATABASE_FULL = 0xC0380001,STATUS_VOLMGR_DISK_CONFIGURATION_CORRUPTED = 0xC0380002,STATUS_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC = 0xC0380003,STATUS_VOLMGR_PACK_CONFIG_UPDATE_FAILED = 0xC0380004,STATUS_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME = 0xC0380005,STATUS_VOLMGR_DISK_DUPLICATE = 0xC0380006,STATUS_VOLMGR_DISK_DYNAMIC = 0xC0380007,STATUS_VOLMGR_DISK_ID_INVALID = 0xC0380008,STATUS_VOLMGR_DISK_INVALID = 0xC0380009,STATUS_VOLMGR_DISK_LAST_VOTER = 0xC038000A,STATUS_VOLMGR_DISK_LAYOUT_INVALID = 0xC038000B,STATUS_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS = 0xC038000C,STATUS_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED = 0xC038000D,STATUS_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL = 0xC038000E,STATUS_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS = 0xC038000F,STATUS_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS = 0xC0380010,STATUS_VOLMGR_DISK_MISSING = 0xC0380011,STATUS_VOLMGR_DISK_NOT_EMPTY = 0xC0380012,STATUS_VOLMGR_DISK_NOT_ENOUGH_SPACE = 0xC0380013,STATUS_VOLMGR_DISK_REVECTORING_FAILED = 0xC0380014,STATUS_VOLMGR_DISK_SECTOR_SIZE_INVALID = 0xC0380015,STATUS_VOLMGR_DISK_SET_NOT_CONTAINED = 0xC0380016,STATUS_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS = 0xC0380017,STATUS_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES = 0xC0380018,STATUS_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED = 0xC0380019,STATUS_VOLMGR_EXTENT_ALREADY_USED = 0xC038001A,STATUS_VOLMGR_EXTENT_NOT_CONTIGUOUS = 0xC038001B,STATUS_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION = 0xC038001C,STATUS_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED = 0xC038001D,STATUS_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION = 0xC038001E,STATUS_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH = 0xC038001F,STATUS_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED = 0xC0380020,STATUS_VOLMGR_INTERLEAVE_LENGTH_INVALID = 0xC0380021,STATUS_VOLMGR_MAXIMUM_REGISTERED_USERS = 0xC0380022,STATUS_VOLMGR_MEMBER_IN_SYNC = 0xC0380023,STATUS_VOLMGR_MEMBER_INDEX_DUPLICATE = 0xC0380024,STATUS_VOLMGR_MEMBER_INDEX_INVALID = 0xC0380025,STATUS_VOLMGR_MEMBER_MISSING = 0xC0380026,STATUS_VOLMGR_MEMBER_NOT_DETACHED = 0xC0380027,STATUS_VOLMGR_MEMBER_REGENERATING = 0xC0380028,STATUS_VOLMGR_ALL_DISKS_FAILED = 0xC0380029,STATUS_VOLMGR_NO_REGISTERED_USERS = 0xC038002A,STATUS_VOLMGR_NO_SUCH_USER = 0xC038002B,STATUS_VOLMGR_NOTIFICATION_RESET = 0xC038002C,STATUS_VOLMGR_NUMBER_OF_MEMBERS_INVALID = 0xC038002D,STATUS_VOLMGR_NUMBER_OF_PLEXES_INVALID = 0xC038002E,STATUS_VOLMGR_PACK_DUPLICATE = 0xC038002F,STATUS_VOLMGR_PACK_ID_INVALID = 0xC0380030,STATUS_VOLMGR_PACK_INVALID = 0xC0380031,STATUS_VOLMGR_PACK_NAME_INVALID = 0xC0380032,STATUS_VOLMGR_PACK_OFFLINE = 0xC0380033,STATUS_VOLMGR_PACK_HAS_QUORUM = 0xC0380034,STATUS_VOLMGR_PACK_WITHOUT_QUORUM = 0xC0380035,STATUS_VOLMGR_PARTITION_STYLE_INVALID = 0xC0380036,STATUS_VOLMGR_PARTITION_UPDATE_FAILED = 0xC0380037,STATUS_VOLMGR_PLEX_IN_SYNC = 0xC0380038,STATUS_VOLMGR_PLEX_INDEX_DUPLICATE = 0xC0380039,STATUS_VOLMGR_PLEX_INDEX_INVALID = 0xC038003A,STATUS_VOLMGR_PLEX_LAST_ACTIVE = 0xC038003B,STATUS_VOLMGR_PLEX_MISSING = 0xC038003C,STATUS_VOLMGR_PLEX_REGENERATING = 0xC038003D,STATUS_VOLMGR_PLEX_TYPE_INVALID = 0xC038003E,STATUS_VOLMGR_PLEX_NOT_RAID5 = 0xC038003F,STATUS_VOLMGR_PLEX_NOT_SIMPLE = 0xC0380040,STATUS_VOLMGR_STRUCTURE_SIZE_INVALID = 0xC0380041,STATUS_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS = 0xC0380042,STATUS_VOLMGR_TRANSACTION_IN_PROGRESS = 0xC0380043,STATUS_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE = 0xC0380044,STATUS_VOLMGR_VOLUME_CONTAINS_MISSING_DISK = 0xC0380045,STATUS_VOLMGR_VOLUME_ID_INVALID = 0xC0380046,STATUS_VOLMGR_VOLUME_LENGTH_INVALID = 0xC0380047,STATUS_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE = 0xC0380048,STATUS_VOLMGR_VOLUME_NOT_MIRRORED = 0xC0380049,STATUS_VOLMGR_VOLUME_NOT_RETAINED = 0xC038004A,STATUS_VOLMGR_VOLUME_OFFLINE = 0xC038004B,STATUS_VOLMGR_VOLUME_RETAINED = 0xC038004C,STATUS_VOLMGR_NUMBER_OF_EXTENTS_INVALID = 0xC038004D,STATUS_VOLMGR_DIFFERENT_SECTOR_SIZE = 0xC038004E,STATUS_VOLMGR_BAD_BOOT_DISK = 0xC038004F,STATUS_VOLMGR_PACK_CONFIG_OFFLINE = 0xC0380050,STATUS_VOLMGR_PACK_CONFIG_ONLINE = 0xC0380051,STATUS_VOLMGR_NOT_PRIMARY_PACK = 0xC0380052,STATUS_VOLMGR_PACK_LOG_UPDATE_FAILED = 0xC0380053,STATUS_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID = 0xC0380054,STATUS_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID = 0xC0380055,STATUS_VOLMGR_VOLUME_MIRRORED = 0xC0380056,STATUS_VOLMGR_PLEX_NOT_SIMPLE_SPANNED = 0xC0380057,STATUS_VOLMGR_NO_VALID_LOG_COPIES = 0xC0380058,STATUS_VOLMGR_PRIMARY_PACK_PRESENT = 0xC0380059,STATUS_VOLMGR_NUMBER_OF_DISKS_INVALID = 0xC038005A,STATUS_VOLMGR_MIRROR_NOT_SUPPORTED = 0xC038005B,STATUS_VOLMGR_RAID5_NOT_SUPPORTED = 0xC038005C,STATUS_BCD_NOT_ALL_ENTRIES_IMPORTED = 0x80390001,STATUS_BCD_TOO_MANY_ELEMENTS = 0xC0390002,STATUS_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED = 0x80390003,STATUS_VHD_DRIVE_FOOTER_MISSING = 0xC03A0001,STATUS_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH = 0xC03A0002,STATUS_VHD_DRIVE_FOOTER_CORRUPT = 0xC03A0003,STATUS_VHD_FORMAT_UNKNOWN = 0xC03A0004,STATUS_VHD_FORMAT_UNSUPPORTED_VERSION = 0xC03A0005,STATUS_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH = 0xC03A0006,STATUS_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION = 0xC03A0007,STATUS_VHD_SPARSE_HEADER_CORRUPT = 0xC03A0008,STATUS_VHD_BLOCK_ALLOCATION_FAILURE = 0xC03A0009,STATUS_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT = 0xC03A000A,STATUS_VHD_INVALID_BLOCK_SIZE = 0xC03A000B,STATUS_VHD_BITMAP_MISMATCH = 0xC03A000C,STATUS_VHD_PARENT_VHD_NOT_FOUND = 0xC03A000D,STATUS_VHD_CHILD_PARENT_ID_MISMATCH = 0xC03A000E,STATUS_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH = 0xC03A000F,STATUS_VHD_METADATA_READ_FAILURE = 0xC03A0010,STATUS_VHD_METADATA_WRITE_FAILURE = 0xC03A0011,STATUS_VHD_INVALID_SIZE = 0xC03A0012,STATUS_VHD_INVALID_FILE_SIZE = 0xC03A0013,STATUS_VIRTDISK_PROVIDER_NOT_FOUND = 0xC03A0014,STATUS_VIRTDISK_NOT_VIRTUAL_DISK = 0xC03A0015,STATUS_VHD_PARENT_VHD_ACCESS_DENIED = 0xC03A0016,STATUS_VHD_CHILD_PARENT_SIZE_MISMATCH = 0xC03A0017,STATUS_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED = 0xC03A0018,STATUS_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT = 0xC03A0019,STATUS_VIRTUAL_DISK_LIMITATION = 0xC03A001A,STATUS_VHD_INVALID_TYPE = 0xC03A001B,STATUS_VHD_INVALID_STATE = 0xC03A001C,STATUS_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE = 0xC03A001D,STATUS_VIRTDISK_DISK_ALREADY_OWNED = 0xC03A001E,STATUS_VIRTDISK_DISK_ONLINE_AND_WRITABLE = 0xC03A001F,STATUS_CTLOG_TRACKING_NOT_INITIALIZED = 0xC03A0020,STATUS_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE = 0xC03A0021,STATUS_CTLOG_VHD_CHANGED_OFFLINE = 0xC03A0022,STATUS_CTLOG_INVALID_TRACKING_STATE = 0xC03A0023,STATUS_CTLOG_INCONSISTENT_TRACKING_FILE = 0xC03A0024,STATUS_VHD_METADATA_FULL = 0xC03A0028,STATUS_QUERY_STORAGE_ERROR = 0x803A0001,STATUS_DIS_NOT_PRESENT = 0xC03C0001,STATUS_DIS_ATTRIBUTE_NOT_FOUND = 0xC03C0002,STATUS_DIS_UNRECOGNIZED_ATTRIBUTE = 0xC03C0003,STATUS_DIS_PARTIAL_DATA = 0xC03C0004,STATUS_RKF_KEY_NOT_FOUND = 0xC0400001,STATUS_RKF_DUPLICATE_KEY = 0xC0400002,STATUS_RKF_BLOB_FULL = 0xC0400003,STATUS_RKF_STORE_FULL = 0xC0400004,STATUS_RKF_FILE_BLOCKED = 0xC0400005,STATUS_RKF_ACTIVE_KEY = 0xC0400006,STATUS_RDBSS_RESTART_OPERATION = 0xC0410001,STATUS_RDBSS_CONTINUE_OPERATION = 0xC0410002,STATUS_RDBSS_POST_OPERATION = 0xC0410003,STATUS_BTH_ATT_INVALID_HANDLE = 0xC0420001,STATUS_BTH_ATT_READ_NOT_PERMITTED = 0xC0420002,STATUS_BTH_ATT_WRITE_NOT_PERMITTED = 0xC0420003,STATUS_BTH_ATT_INVALID_PDU = 0xC0420004,STATUS_BTH_ATT_INSUFFICIENT_AUTHENTICATION = 0xC0420005,STATUS_BTH_ATT_REQUEST_NOT_SUPPORTED = 0xC0420006,STATUS_BTH_ATT_INVALID_OFFSET = 0xC0420007,STATUS_BTH_ATT_INSUFFICIENT_AUTHORIZATION = 0xC0420008,STATUS_BTH_ATT_PREPARE_QUEUE_FULL = 0xC0420009,STATUS_BTH_ATT_ATTRIBUTE_NOT_FOUND = 0xC042000A,STATUS_BTH_ATT_ATTRIBUTE_NOT_LONG = 0xC042000B,STATUS_BTH_ATT_INSUFFICIENT_ENCRYPTION_KEY_SIZE = 0xC042000C,STATUS_BTH_ATT_INVALID_ATTRIBUTE_VALUE_LENGTH = 0xC042000D,STATUS_BTH_ATT_UNLIKELY = 0xC042000E,STATUS_BTH_ATT_INSUFFICIENT_ENCRYPTION = 0xC042000F,STATUS_BTH_ATT_UNSUPPORTED_GROUP_TYPE = 0xC0420010,STATUS_BTH_ATT_INSUFFICIENT_RESOURCES = 0xC0420011,STATUS_BTH_ATT_UNKNOWN_ERROR = 0xC0421000,STATUS_SECUREBOOT_ROLLBACK_DETECTED = 0xC0430001,STATUS_SECUREBOOT_POLICY_VIOLATION = 0xC0430002,STATUS_SECUREBOOT_INVALID_POLICY = 0xC0430003,STATUS_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND = 0xC0430004,STATUS_SECUREBOOT_POLICY_NOT_SIGNED = 0xC0430005,STATUS_SECUREBOOT_NOT_ENABLED = 0x80430006,STATUS_SECUREBOOT_FILE_REPLACED = 0xC0430007,STATUS_AUDIO_ENGINE_NODE_NOT_FOUND = 0xC0440001,STATUS_HDAUDIO_EMPTY_CONNECTION_LIST = 0xC0440002,STATUS_HDAUDIO_CONNECTION_LIST_NOT_SUPPORTED = 0xC0440003,STATUS_HDAUDIO_NO_LOGICAL_DEVICES_CREATED = 0xC0440004,STATUS_HDAUDIO_NULL_LINKED_LIST_ENTRY = 0xC0440005,STATUS_SPACES_RESILIENCY_TYPE_INVALID = 0xC0E70003,STATUS_SPACES_DRIVE_SECTOR_SIZE_INVALID = 0xC0E70004,STATUS_SPACES_INTERLEAVE_LENGTH_INVALID = 0xC0E70009,STATUS_SPACES_NUMBER_OF_COLUMNS_INVALID = 0xC0E7000A,STATUS_SPACES_NOT_ENOUGH_DRIVES = 0xC0E7000B,STATUS_VOLSNAP_BOOTFILE_NOT_VALID = 0xC0500003,};
enum MACRO_STATUS_LLDP {STATUS_LLDP_NEIGHBOR_NOT_AVAILABLE = -1073741275,};
enum MACRO_STOR_STATUS {STOR_STATUS_SUCCESS = 0x0,STOR_STATUS_UNSUCCESSFUL = 0xC1000001,STOR_STATUS_NOT_IMPLEMENTED = 0xC1000002,STOR_STATUS_INSUFFICIENT_RESOURCES = 0xC1000003,STOR_STATUS_BUFFER_TOO_SMALL = 0xC1000004,STOR_STATUS_ACCESS_DENIED = 0xC1000005,STOR_STATUS_INVALID_PARAMETER = 0xC1000006,STOR_STATUS_INVALID_DEVICE_REQUEST = 0xC1000007,STOR_STATUS_INVALID_IRQL = 0xC1000008,STOR_STATUS_INVALID_DEVICE_STATE = 0xC1000009,STOR_STATUS_INVALID_BUFFER_SIZE = 0xC100000A,STOR_STATUS_UNSUPPORTED_VERSION = 0xC100000B,STOR_STATUS_BUSY = 0xC100000C,};
enum MACRO_STOR_SYSTEM {STOR_SYSTEM_POWER_HINTS_V1 = 0x1,STOR_PERF_DPC_REDIRECTION = 0x1,STOR_PERF_CONCURRENT_CHANNELS = 0x2,STOR_PERF_INTERRUPT_MESSAGE_RANGES = 0x4,STOR_PERF_ADV_CONFIG_LOCALITY = 0x8,STOR_PERF_OPTIMIZE_FOR_COMPLETION_DURING_STARTIO = 0x10,STOR_PERF_DPC_REDIRECTION_CURRENT_CPU = 0x20,STOR_PERF_VERSION_2 = 0x2,STOR_PERF_VERSION_3 = 0x3,STOR_PERF_VERSION_4 = 0x4,STOR_PERF_VERSION = 0x4,STOR_REQUEST_INFO_VER_1 = 0x1,};
enum MACRO_SYNCHRONIZE {SYNCHRONIZE = 0x100000,};
enum MACRO_SYSTEM_EXIT {SYSTEM_EXIT_OWNED_MUTEX = 0x39,SYSTEM_UNWIND_PREVIOUS_USER = 0x3A,SYSTEM_SERVICE_EXCEPTION = 0x3B,};
enum MACRO_SYSTEM_PAGE {SYSTEM_PAGE_PRIORITY_BITS = 3,SYSTEM_PAGE_PRIORITY_LEVELS = 8,};
enum MACRO_SYSTEM_SCAN {SYSTEM_SCAN_AT_RAISED_IRQL_CAUGHT_IMPROPER_DRIVER_UNLOAD = 0xD4,};
enum MACRO_ScsiInquiry {ScsiInquiry_IN_Cdb_ID = 1,ScsiInquiry_IN_HbaPortWWN_ID = 2,ScsiInquiry_IN_DiscoveredPortWWN_ID = 3,ScsiInquiry_IN_FcLun_ID = 4,ScsiInquiry_OUT_HBAStatus_ID = 5,ScsiInquiry_OUT_ResponseBufferSize_ID = 6,ScsiInquiry_OUT_SenseBufferSize_ID = 7,ScsiInquiry_OUT_ResponseBuffer_SIZE_HINT = 96,ScsiInquiry_OUT_ResponseBuffer_ID = 9,};
enum MACRO_SendLIRR_IN {SendLIRR_IN_SourceWWN_ID = 1,SendLIRR_IN_DestWWN_ID = 2,SendLIRR_IN_Function_ID = 3,SendLIRR_IN_Type_ID = 4,SendLIRR_OUT_HBAStatus_ID = 5,SendLIRR_OUT_TotalRspBufferSize_ID = 6,SendLIRR_OUT_ActualRspBufferSize_ID = 7,SendLIRR_OUT_RspBuffer_SIZE_HINT = 8,SendLIRR_OUT_RspBuffer_ID = 8,};
enum MACRO_SendRNID_IN {SendRNID_IN_wwn_ID = 1,SendRNID_IN_wwntype_ID = 2,SendRNID_OUT_HBAStatus_ID = 3,SendRNID_OUT_ResponseBufferCount_ID = 4,SendRNID_OUT_ResponseBuffer_SIZE_HINT = 76,SendRNID_OUT_ResponseBuffer_ID = 5,};
enum MACRO_SendTargets {SendTargets = 10,};
enum MACRO_TCP_INITIAL {TCP_INITIAL_RTO_UNSPECIFIED_RTT = 65535,TCP_INITIAL_RTO_UNSPECIFIED_MAX_SYN_RETRANSMISSIONS = 255,TCP_INITIAL_RTO_DEFAULT_RTT = 0,TCP_INITIAL_RTO_DEFAULT_MAX_SYN_RETRANSMISSIONS = 0,};
enum MACRO_TCP_NODELAY {TCP_NODELAY = 0x1,};
enum MACRO_TCP_OFFLOAD {TCP_OFFLOAD_NO_PREFERENCE = 0,TCP_OFFLOAD_NOT_PREFERRED = 1,TCP_OFFLOAD_PREFERRED = 2,TCP_EXPEDITED_1122 = 2,TCP_KEEPALIVE = 3,TCP_MAXSEG = 4,TCP_MAXRT = 5,TCP_STDURG = 6,TCP_NOURG = 7,TCP_ATMARK = 8,TCP_NOSYNRETRIES = 9,TCP_TIMESTAMPS = 10,TCP_OFFLOAD_PREFERENCE = 11,TCP_CONGESTION_ALGORITHM = 12,TCP_DELAY_FIN_ACK = 13,};
enum MACRO_THREAD_WAIT {THREAD_WAIT_OBJECTS = 3,};
enum MACRO_TRANSACTION {TRANSACTION_MANAGER_VOLATILE = 0x1,TRANSACTION_MANAGER_COMMIT_DEFAULT = 0x0,TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME = 0x2,TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES = 0x4,TRANSACTION_MANAGER_COMMIT_LOWEST = 0x8,TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY = 0x10,TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS = 0x20,TRANSACTION_MANAGER_MAXIMUM_OPTION = 0x3F,TRANSACTION_DO_NOT_PROMOTE = 0x1,TRANSACTION_MAXIMUM_OPTION = 0x1,};
enum MACRO_UNMOUNTABLE {UNMOUNTABLE_BOOT_VOLUME = 0xED,};
enum MACRO_UNSUPPORTED {UNSUPPORTED_PROCESSOR = 0x5D,};
enum MACRO_USBD_CLIENT {USBD_CLIENT_CONTRACT_VERSION_INVALID = 0xFFFFFFFF,USBD_CLIENT_CONTRACT_VERSION_602 = 0x602,USBD_INTERFACE_VERSION_600 = 0x600,USBD_INTERFACE_VERSION_602 = 0x602,};
enum MACRO_USB_FEATURE {USB_FEATURE_INTERFACE_POWER_D0 = 0x2,USB_FEATURE_INTERFACE_POWER_D1 = 0x3,USB_FEATURE_INTERFACE_POWER_D2 = 0x4,USB_FEATURE_INTERFACE_POWER_D3 = 0x5,USB_SUPPORT_D0_COMMAND = 0x1,USB_SUPPORT_D1_COMMAND = 0x2,USB_SUPPORT_D2_COMMAND = 0x4,USB_SUPPORT_D3_COMMAND = 0x8,USB_SUPPORT_D1_WAKEUP = 0x10,USB_SUPPORT_D2_WAKEUP = 0x20,USB_PORTATTR_NO_CONNECTOR = 0x1,USB_PORTATTR_SHARED_USB2 = 0x2,USB_PORTATTR_MINI_CONNECTOR = 0x4,USB_PORTATTR_OEM_CONNECTOR = 0x8,USB_PORTATTR_OWNED_BY_CC = 0x1000000,USB_PORTATTR_NO_OVERCURRENT_UI = 0x2000000,USB_DEFAULT_DEVICE_ADDRESS = 0x0,USB_DEFAULT_ENDPOINT_ADDRESS = 0x0,USB_DEFAULT_MAX_PACKET = 0x40,};
enum MACRO_VALID_WRITE {VALID_WRITE_USN_REASON_MASK = -2147483647,};
enum MACRO_VIDEO_DEBUG {VIDEO_DEBUG_REPORT_MAX_SIZE = 0x8000,VIDEO_PORT_DEBUG_REPORT_INTERFACE_VERSION_1 = 0x1,};
enum MACRO_WAVE_FILTER {WAVE_FILTER_UNKNOWN = 0x0,WAVE_FILTER_DEVELOPMENT = 0xFFFF,WAVE_FILTER_VOLUME = 0x1,WAVE_FILTER_ECHO = 0x2,};
enum MACRO_WHEA_PLUGIN {WHEA_PLUGIN_REGISTRATION_PACKET_VERSION = 0x10000,};
enum MACRO_WMIREGISTER {WMIREGISTER = 0,WMIUPDATE = 1,};
enum MACRO_WMIREG_FLAG {WMIREG_FLAG_EXPENSIVE = 0x1,WMIREG_FLAG_INSTANCE_LIST = 0x4,WMIREG_FLAG_INSTANCE_BASENAME = 0x8,WMIREG_FLAG_INSTANCE_PDO = 0x20,WMIREG_FLAG_REMOVE_GUID = 0x10000,WMIREG_FLAG_RESERVED1 = 0x20000,WMIREG_FLAG_RESERVED2 = 0x40000,WMIREG_FLAG_TRACED_GUID = 0x80000,WMIREG_FLAG_TRACE_CONTROL_GUID = 0x1000,WMIREG_FLAG_EVENT_ONLY_GUID = 0x40,};
enum MACRO__CRT_SECURE {_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES = 0,_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT = 0,_CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES = 1,};
enum MACRO__CVTBUFSIZE {_CVTBUFSIZE = 349,};
enum MACRO__EM_INEXACT {_EM_INEXACT = 0x1,_EM_UNDERFLOW = 0x2,_EM_OVERFLOW = 0x4,_EM_ZERODIVIDE = 0x8,_EM_INVALID = 0x10,_EM_DENORMAL = 0x80000,};
enum MACRO__HEAPBADPTR {_HEAPBADPTR = -6,};
enum MACRO___STDC_WANT {__STDC_WANT_SECURE_LIB__ = 1,};
enum MACRO_bootSession {bootSession = 3,};
typedef struct _MECHANICAL_STATUS MECHANICAL_STATUS;
typedef struct _MEMORY_POWER_NODE MEMORY_POWER_NODE;
typedef struct _MINIPORT_MAPPINGS MINIPORT_MAPPINGS;
typedef union _MM_PREFETCH_FLAGS MM_PREFETCH_FLAGS;
typedef struct _MODE_CACHING_PAGE MODE_CACHING_PAGE;
typedef struct _MODE_CONTROL_PAGE MODE_CONTROL_PAGE;
typedef struct _MPIOMoveDevice_IN MPIOMoveDevice_IN;
typedef struct _MPIO_VERSION_INFO MPIO_VERSION_INFO;
typedef struct _MSFC_AdapterEvent MSFC_AdapterEvent;
typedef struct _MSMCAEvent_Header MSMCAEvent_Header;
typedef struct _MSNdis_CoVendorId MSNdis_CoVendorId;
typedef struct _MSNdis_MacOptions MSNdis_MacOptions;
typedef struct _MSNdis_MediaInUse MSNdis_MediaInUse;
typedef struct _MSNdis_RSSEnabled MSNdis_RSSEnabled;
typedef struct _MSNdis_ReceivesOk MSNdis_ReceivesOk;
typedef struct _MSNdis_WmiOffload MSNdis_WmiOffload;
typedef struct _MSSerial_PortName MSSerial_PortName;
typedef struct _MSV1_0_LM20_LOGON MSV1_0_LM20_LOGON;
typedef struct _MSWmi_PnPDeviceId MSWmi_PnPDeviceId;
typedef struct _MSiSCSI_NICConfig MSiSCSI_NICConfig;
typedef struct _NABTS_BUFFER_LINE NABTS_BUFFER_LINE;
typedef struct _NDIS_802_11_PMKID NDIS_802_11_PMKID;
typedef struct _NDIS_ENUM_FILTERS NDIS_ENUM_FILTERS;
typedef struct _NDIS_MAC_FRAGMENT NDIS_MAC_FRAGMENT;
typedef struct _NDIS_WAN_FRAGMENT NDIS_WAN_FRAGMENT;
typedef struct _NDIS_WWAN_SET_PIN NDIS_WWAN_SET_PIN;
typedef struct _NDK_OBJECT_HEADER NDK_OBJECT_HEADER;
typedef struct _NETWORK_CHANNELS NETWORK_CHANNELSR;
typedef union _NET_BUFFER_HEADER NET_BUFFER_HEADER;
typedef NLBTCPAddressInfo_v2 NLBTCPAddressInfo;
typedef struct _NLB_HOOK_IP_TUPLE NLB_HOOK_IP_TUPLE;
enum NodeContainerType {NodeContainerTypeSequence = 0x0,NodeContainerTypeAlternative = 0x1,};
typedef struct _OBJECT_ATTRIBUTES OBJECT_ATTRIBUTES;
typedef struct _OFFLOAD_ALGO_INFO OFFLOAD_ALGO_INFO;
typedef struct olicelpwaveformat_tag OLICELPWAVEFORMAT;
typedef struct _AAL34_PARAMETERS *PAAL34_PARAMETERS;
typedef struct _ATM_AAL_OOB_INFO *PATM_AAL_OOB_INFO;
typedef struct _ATM_QOS_CLASS_IE *PATM_QOS_CLASS_IE;
typedef struct _AVC_PEER_DO_LIST *PAVC_PEER_DO_LIST;
typedef struct _AV_61883_REQUEST *PAV_61883_REQUEST;
typedef struct _AddiSNSServer_IN *PAddiSNSServer_IN;
typedef struct _BDA_CA_MODULE_UI *PBDA_CA_MODULE_UI;
typedef struct _BDA_IPv4_ADDRESS *PBDA_IPv4_ADDRESS;
typedef struct _BDA_IPv6_ADDRESS *PBDA_IPv6_ADDRESS;
typedef struct _BDA_WMDRM_STATUS *PBDA_WMDRM_STATUS;
typedef struct _BUS_RESET_NOTIFY *PBUS_RESET_NOTIFY;
typedef struct _CACHE_DESCRIPTOR *PCACHE_DESCRIPTOR;
typedef struct _CDDA_OUTPUT_PORT *PCDDA_OUTPUT_PORT;
typedef struct _CIP_ATTACH_FRAME *PCIP_ATTACH_FRAME;
typedef struct _CIP_CANCEL_FRAME *PCIP_CANCEL_FRAME;
typedef struct _PCI_COMMON_CONFIG PCI_COMMON_CONFIG;
typedef struct _PCI_COMMON_HEADER PCI_COMMON_HEADER;
typedef struct _PCI_PM_CAPABILITY PCI_PM_CAPABILITY;
typedef struct _CLFS_MGMT_POLICY *PCLFS_MGMT_POLICY;
typedef struct _CLS_SCAN_CONTEXT *PCLS_SCAN_CONTEXT;
typedef struct _CMP_CONNECT_VER2 *PCMP_CONNECT_VER2;
typedef struct _CMP_CONNECT_VER3 *PCMP_CONNECT_VER3;
typedef struct _CMP_MONITOR_INFO *PCMP_MONITOR_INFO;
typedef struct _CM_RESOURCE_LIST *PCM_RESOURCE_LIST;
typedef struct _D96EA640170F725CA11FCBCFEE3FF36E PCNODE_DESCRIPTOR;
typedef struct _DEBUG_PORT_TABLE *PDEBUG_PORT_TABLE;
typedef struct _DEVICE_RELATIONS *PDEVICE_RELATIONS;
typedef struct _DEVOBJ_EXTENSION *PDEVOBJ_EXTENSION;
typedef struct _DFS_NAME_CONTEXT_ *PDFS_NAME_CONTEXT;
typedef struct _DIRECTORY_HEADER *PDIRECTORY_HEADER;
typedef struct _DISC_INFORMATION *PDISC_INFORMATION;
typedef struct _DISK_GEOMETRY_EX *PDISK_GEOMETRY_EX;
typedef struct _DISK_INFORMATION *PDISK_INFORMATION;
typedef struct _DISK_PERFORMANCE *PDISK_PERFORMANCE;
typedef struct _DMA_ADAPTER_INFO *PDMA_ADAPTER_INFO;
typedef struct DOT11_BSSID_LIST *PDOT11_BSSID_LIST;
typedef struct DOT11_BYTE_ARRAY *PDOT11_BYTE_ARRAY;
typedef struct DOT11_PMKID_LIST *PDOT11_PMKID_LIST;
typedef struct DOT11_QOS_PARAMS *PDOT11_QOS_PARAMS;
typedef struct _DOT11_RSSI_RANGE *PDOT11_RSSI_RANGE;
typedef struct DOT11_STATISTICS *PDOT11_STATISTICS;
typedef struct _DOT11_WEP_UPLOAD *PDOT11_WEP_UPLOAD;
typedef struct _DRIVER_EXTENSION *PDRIVER_EXTENSION;
typedef struct _DSM_MPIO_CONTEXT *PDSM_MPIO_CONTEXT;
typedef struct _DSM_VERSION_INFO *PDSM_VERSION_INFO;
typedef struct _DUMP_POINTERS_EX *PDUMP_POINTERS_EX;
typedef struct _DXGKMDT_OPM_OMAC *PDXGKMDT_OPM_OMAC;
typedef struct _DXGK_DEVICE_INFO *PDXGK_DEVICE_INFO;
typedef struct _EISA_MEMORY_TYPE *PEISA_MEMORY_TYPE;
typedef struct _ENUM_PDO_RESULTS *PENUM_PDO_RESULTS;
typedef struct _EVENT_DESCRIPTOR *PEVENT_DESCRIPTOR;
typedef struct _EXFAT_STATISTICS *PEXFAT_STATISTICS;
typedef struct _FAST_IO_DISPATCH *PFAST_IO_DISPATCH;
typedef struct _FCP_GET_RESPONSE *PFCP_GET_RESPONSE;
typedef struct _FCP_SEND_REQUEST *PFCP_SEND_REQUEST;
typedef struct _FILE_PREFETCH_EX *PFILE_PREFETCH_EX;
typedef struct _FILE_REGION_INFO *PFILE_REGION_INFO;
typedef struct _FILTER_EXTENSION *PFILTER_EXTENSION;
typedef struct _331B1DF8077172E73B1772E454860C5E *PFIND_BY_SID_DATA;
typedef struct _SENSE_DATA *PFIXED_SENSE_DATA;
typedef struct _FLT_NAME_CONTROL *PFLT_NAME_CONTROL;
typedef struct _FLT_REGISTRATION *PFLT_REGISTRATION;
typedef struct group_source_req *PGROUP_SOURCE_REQ;
typedef struct _HARDWARE_ADDRESS *PHARDWARE_ADDRESS;
typedef struct _HARDWARE_COUNTER *PHARDWARE_COUNTER;
typedef struct HBA_FcpScsiEntry *PHBA_FCPSCSIENTRY;
typedef struct _HIDP_BUTTON_CAPS *PHIDP_BUTTON_CAPS;
typedef struct _HIDP_DEVICE_DESC *PHIDP_DEVICE_DESC;
typedef struct _HISTOGRAM_BUCKET *PHISTOGRAM_BUCKET;
typedef struct _HW_STREAM_HEADER *PHW_STREAM_HEADER;
typedef struct _HW_STREAM_OBJECT *PHW_STREAM_OBJECT;
typedef struct _IDE_ACCESS_RANGE *PIDE_ACCESS_RANGE;
typedef struct _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;
typedef struct _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;
typedef struct _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;
typedef struct _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;
typedef struct _IO_PRIORITY_INFO *PIO_PRIORITY_INFO;
typedef struct _IO_RESOURCE_LIST *PIO_RESOURCE_LIST;
typedef struct _ISCSI_IP_Address *PISCSI_IP_Address;
typedef struct _ISCSI_PortalInfo *PISCSI_PortalInfo;
typedef struct _ISOCH_DESCRIPTOR *PISOCH_DESCRIPTOR;
typedef struct _IdleAccountingEx *PIdleAccountingEx;
typedef struct _KRESOURCEMANAGER *PKRESOURCEMANAGER;
typedef struct _FF5E69F4B253A5B06BAE6BEDF0A709ED *PKSATTRIBUTE_LIST;
typedef struct _12A419A691843E3FACBCDACF473D8E54 *PKSAUDIO_MIXLEVEL;
typedef struct _1E1F3A8FE12995513A3555C52633C7C9 *PKSAUDIO_MIX_CAPS;
typedef struct _8F18F53EFBEBE9496980818DD790123F *PKSAUDIO_POSITION;
typedef struct _KSCLOCK_DISPATCH *PKSCLOCK_DISPATCH;
typedef struct _0B037F2534779A05E9AEAE9A3A29D997 *PKSDISPATCH_TABLE;
typedef struct _KSM_BDA_PIN_PAIR *PKSM_BDA_PIN_PAIR;
typedef struct _01091B9DEBEBC2354EBF1594EEF6BE89 *PKSPIN_CINSTANCES;
typedef struct _4C3688935B439E6B73B5D283DA0CA595 *PKSPIN_DESCRIPTOR;
typedef struct _KSPIN_LOCK_QUEUE *PKSPIN_LOCK_QUEUE;
typedef struct _KSPROPERTY_SPHLI *PKSPROPERTY_SPHLI;
typedef struct _KSPROPERTY_SPPAL *PKSPROPERTY_SPPAL;
typedef struct _KSP_BDA_NODE_PIN *PKSP_BDA_NODE_PIN;
typedef struct _82A9949D9C93DB4693E05DBBCDD803A5 *PKSRTAUDIO_BUFFER;
typedef struct _9B0A4478CCC03CE069B62A821FAD8B21 *PKSSCATTER_GATHER;
typedef struct _KSSTREAM_POINTER *PKSSTREAM_POINTER;
typedef struct _EA4AC72E281160164D445E15D4425ADE *PKSVPMAXPIXELRATE;
typedef struct _B62AAB724E8D7D841EB663A6FEE96A5E *PKS_FRAMING_RANGE;
typedef struct tagKS_H264VIDEOINFO *PKS_H264VIDEOINFO;
typedef struct tagKS_MPEAUDIOINFO *PKS_MPEGAUDIOINFO;
typedef struct tag_KS_TRUECOLORINFO *PKS_TRUECOLORINFO;
typedef struct tagKS_VBIINFOHEADER *PKS_VBIINFOHEADER;
typedef struct _KTMOBJECT_CURSOR *PKTMOBJECT_CURSOR;
typedef struct _KernelIdleStates *PKernelIdleStates;
typedef struct _KernelPerfStates *PKernelPerfStates;
typedef struct _LBA_FILTER_TABLE *PLBA_FILTER_TABLE;
typedef struct _LINE_CALL_PARAMS *PLINE_CALL_PARAMS;
typedef struct _LINE_CALL_STATUS *PLINE_CALL_STATUS;
typedef struct _LINE_DIAL_PARAMS *PLINE_DIAL_PARAMS;
typedef struct _LoginToTarget_IN *PLoginToTarget_IN;
typedef struct _ADC8229B35D2FBAA1DBEA2E6CF74A72A *PMARK_HANDLE_INFO;
typedef struct _MCFG_TABLE_ENTRY *PMCFG_TABLE_ENTRY;
typedef struct _5DB42174B48D54F5127552AD4BBA26D1 *PMFT_ENUM_DATA_V0;
typedef struct _F81C3DA38AA87E09A89CEC7FF6997E89 *PMFT_ENUM_DATA_V1;
typedef IMiniportTopology *PMINIPORTTOPOLOGY;
typedef struct _MINIRDR_DISPATCH *PMINIRDR_DISPATCH;
typedef struct _PMI_CONFIGURATION PMI_CONFIGURATION;
typedef struct _MODE_FORMAT_PAGE *PMODE_FORMAT_PAGE;
typedef struct _MOUSE_ATTRIBUTES *PMOUSE_ATTRIBUTES;
typedef struct _MOUSE_INPUT_DATA *PMOUSE_INPUT_DATA;
typedef struct _MPIO_DSM_Path_V2 *PMPIO_DSM_Path_V2;
typedef struct _MSFC_EventBuffer *PMSFC_EventBuffer;
typedef struct _MSFC_TargetEvent *PMSFC_TargetEvent;
typedef struct _MSNdis_LinkSpeed *PMSNdis_LinkSpeed;
typedef struct _MSNdis_PortArray *PMSNdis_PortArray;
typedef struct _MSV1_0_S4U_LOGON *PMSV1_0_S4U_LOGON;
typedef struct _MSiSCSI_Eventlog *PMSiSCSI_Eventlog;
typedef struct _PM_DISPATCH_TABLE PM_DISPATCH_TABLE;
typedef struct _NDIS_802_11_SSID *PNDIS_802_11_SSID;
typedef struct _NDIS_802_11_TEST *PNDIS_802_11_TEST;
typedef struct _NDIS_MAC_LINE_UP *PNDIS_MAC_LINE_UP;
typedef struct _NDIS_OID_REQUEST *PNDIS_OID_REQUEST;
typedef struct _NDIS_TAPI_ACCEPT *PNDIS_TAPI_ACCEPT;
typedef struct _NDIS_TAPI_ANSWER *PNDIS_TAPI_ANSWER;
typedef struct _NDIS_TAPI_GET_ID *PNDIS_TAPI_GET_ID;
typedef struct _NDIS_WAN_CO_INFO *PNDIS_WAN_CO_INFO;
typedef struct _NDIS_WAN_LINE_UP *PNDIS_WAN_LINE_UP;
typedef struct _NDIS_WMI_OFFLOAD *PNDIS_WMI_OFFLOAD;
typedef struct nd_opt_rd_hdr *PND_OPTION_RD_HDR;
typedef struct _NETWORK_CHANNELS *PNETWORK_CHANNELS;
typedef struct _OBJECT_TYPE_LIST *POBJECT_TYPE_LIST;
typedef struct _OSVERSIONINFOEXA *POSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXW *POSVERSIONINFOEXW;
typedef struct _2319D0803FA8D60BE4B5925A7A9CB62F *PPCI_X_CAPABILITY;
typedef struct _CLS_INFORMATION *PPCLS_INFORMATION;
typedef struct _CLS_WRITE_ENTRY **PPCLS_WRITE_ENTRY;
typedef struct _PCMETHOD_REQUEST *PPCMETHOD_REQUEST;
typedef struct _07D0DEFC473073A5B78BC3974C364183 *PPCPIN_DESCRIPTOR;
typedef struct _PCW_REGISTRATION *PPCW_REGISTRATION;
typedef struct _PMI_CAPABILITIES *PPMI_CAPABILITIES;
typedef IPortClsEtwHelper *PPORTCLSETWHELPER;
typedef IPortWaveRTStream *PPORTWAVERTSTREAM;
typedef struct _PROCESSOR_NUMBER *PPROCESSOR_NUMBER;
typedef struct _PingIPAddress_IN *PPingIPAddress_IN;
typedef struct _Q2931_DELETE_PVC *PQ2931_DELETE_PVC;
typedef union _RATE_QUOTA_LIMIT *PRATE_QUOTA_LIMIT;
typedef struct _RDBSS_IO_CONTEXT *PRDBSS_IO_CONTEXT;
typedef struct _READER_EXTENSION *PREADER_EXTENSION;
typedef struct _RX_CONNECTION_ID *PRX_CONNECTION_ID;
typedef struct _RX_IRP_LIST_ITEM *PRX_IRP_LIST_ITEM;
typedef struct _RemoveTarget_OUT *PRemoveTarget_OUT;
typedef struct _SCARD_IO_REQUEST *PSCARD_IO_REQUEST;
typedef struct _SCRUB_DATA_INPUT *PSCRUB_DATA_INPUT;
typedef struct _SDCMD_DESCRIPTOR *PSDCMD_DESCRIPTOR;
typedef struct _SENDCMDOUTPARAMS *PSENDCMDOUTPARAMS;
typedef struct _SRBEX_DATA_POWER *PSRBEX_DATA_POWER;
typedef struct _SRB_HISTORY_ITEM *PSRB_HISTORY_ITEM;
typedef struct _STOR_LOCK_HANDLE *PSTOR_LOCK_HANDLE;
typedef struct _STOR_POFX_DEVICE *PSTOR_POFX_DEVICE;
typedef struct _STOR_SLIST_ENTRY *PSTOR_SLIST_ENTRY;
typedef unsigned long long *PSTREAM_TIMESTAMP;
typedef struct _SUB_Q_TRACK_ISRC *PSUB_Q_TRACK_ISRC;
typedef struct _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;
typedef struct _TDI_ADDRESS_8022 *PTDI_ADDRESS_8022;
typedef struct _TDI_ADDRESS_INFO *PTDI_ADDRESS_INFO;
typedef struct _TDI_REQUEST_SEND *PTDI_REQUEST_SEND;
typedef union _TDI_REQUEST_TYPE *PTDI_REQUEST_TYPE;
typedef struct _THROTTLING_STATE *PTHROTTLING_STATE;
typedef struct _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;
typedef struct _TOKEN_STATISTICS *PTOKEN_STATISTICS;
typedef struct _UNIT_DDI_VERSION *PUNIT_DDI_VERSION;
typedef struct tagWNODE_EVENT_ITEM *PWNODE_EVENT_ITEM;
typedef struct _WSK_PROVIDER_NPI *PWSK_PROVIDER_NPI;
typedef struct _WSK_REGISTRATION *PWSK_REGISTRATION;
typedef struct _WSK_TDI_MAP_INFO *PWSK_TDI_MAP_INFO;
typedef struct _WWAN_DEVICE_CAPS *PWWAN_DEVICE_CAPS;
typedef struct _WWAN_DRIVER_CAPS *PWWAN_DRIVER_CAPS;
typedef struct _WWAN_LIST_HEADER *PWWAN_LIST_HEADER;
typedef struct _WWAN_RADIO_STATE *PWWAN_RADIO_STATE;
typedef struct _WWAN_SET_CONTEXT *PWWAN_SET_CONTEXT;
typedef struct _WWAN_USSD_STRING *PWWAN_USSD_STRING;
typedef struct _PingIPAddress_OUT PingIPAddress_OUT;
typedef struct _REPARSE_INDEX_KEY REPARSE_INDEX_KEY;
typedef struct _REQ_NOTIFY_CHANGE REQ_NOTIFY_CHANGE;
typedef struct _REQ_NT_IO_CONTROL REQ_NT_IO_CONTROL;
typedef struct _RTL_BALANCED_NODE RTL_BALANCED_NODE;
typedef struct _RTL_GENERIC_TABLE RTL_GENERIC_TABLE;
typedef struct _BINDING_HANDLE RX_BINDING_HANDLE;
typedef struct _SCRUB_DATA_OUTPUT SCRUB_DATA_OUTPUT;
typedef struct _SCSI_INQUIRY_DATA SCSI_INQUIRY_DATA;
typedef struct _SCSI_PASS_THROUGH SCSI_PASS_THROUGH;
typedef struct _SD_ENUM_SDS_ENTRY SD_ENUM_SDS_ENTRY;
typedef struct _SD_ENUM_SDS_INPUT SD_ENUM_SDS_INPUT;
typedef struct _SE_ACCESS_REQUEST SE_ACCESS_REQUEST;
typedef struct _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;
typedef struct _SMARTCARD_REQUEST SMARTCARD_REQUEST;
typedef struct _sockaddr_in6_pair SOCKADDR_IN6_PAIR;
typedef struct _STOR_REQUEST_INFO STOR_REQUEST_INFO;
typedef union _STOR_SLIST_HEADER STOR_SLIST_HEADER;
typedef struct _ScsiReportLuns_IN ScsiReportLuns_IN;
typedef struct _SdpAttributeRange SdpAttributeRange;
typedef struct _SendCTPassThru_IN SendCTPassThru_IN;
typedef struct _SetDSMCounters_IN SetDSMCounters_IN;
typedef struct _SetFC3MgmtInfo_IN SetFC3MgmtInfo_IN;
enum SpectralInversion {BDA_SPECTRAL_INVERSION_NOT_SET = 0xFFFFFFFF,BDA_SPECTRAL_INVERSION_NOT_DEFINED = 0x0,BDA_SPECTRAL_INVERSION_AUTOMATIC = 0x1,BDA_SPECTRAL_INVERSION_NORMAL = 0x2,BDA_SPECTRAL_INVERSION_INVERTED = 0x3,BDA_SPECTRAL_INVERSION_MAX = 0x4,};
typedef struct _TAPE_GET_POSITION TAPE_GET_POSITION;
typedef struct _TAPE_INIT_DATA_EX TAPE_INIT_DATA_EX;
typedef struct _TAPE_SET_POSITION TAPE_SET_POSITION;
typedef struct _TDI_ACTION_HEADER TDI_ACTION_HEADER;
typedef struct _TDI_DATAGRAM_INFO TDI_DATAGRAM_INFO;
typedef struct _TDI_ENDPOINT_INFO TDI_ENDPOINT_INFO;
typedef struct _TDI_PROVIDER_INFO TDI_PROVIDER_INFO;
typedef struct _TOKEN_USER_CLAIMS TOKEN_USER_CLAIMS;
typedef struct _TRACK_INFORMATION TRACK_INFORMATION;
typedef struct _TRANSPORT_ADDRESS TRANSPORT_ADDRESS;
typedef struct _UNIT_ISOCH_PARAMS UNIT_ISOCH_PARAMS;
typedef struct _UNMAP_LIST_HEADER UNMAP_LIST_HEADER;
typedef struct _2361741245AFF1C51192B59F7339350B USBCAMD_INTERFACE;
typedef union _USB_DEVICE_STATUS USB_DEVICE_STATUS;
typedef struct _VIDEO_BANK_SELECT VIDEO_BANK_SELECT;
typedef struct _VIDEO_CHILD_STATE VIDEO_CHILD_STATE;
enum VIDEO_DEBUG_LEVEL {Error = 0x0,Warn = 0x1,Trace = 0x2,Info = 0x3,};
typedef struct _VIDEO_I2C_CONTROL VIDEO_I2C_CONTROL;
typedef struct _5EE71717BA15F45B49C3B1BDFE65804E VRAM_SURFACE_INFO;
typedef struct _WAN_CO_LINKPARAMS WAN_CO_LINKPARAMS;
typedef struct _WHEA_ERROR_PACKET_V2 WHEA_ERROR_PACKET;
typedef struct _WHEA_ERROR_RECORD WHEA_ERROR_RECORD;
typedef union _WHEA_ERROR_STATUS WHEA_ERROR_STATUS;
typedef union _WHEA_XPF_MS_CHECK WHEA_XPF_MS_CHECK;
typedef struct _WHEA_XPF_PROCINFO WHEA_XPF_PROCINFO;
typedef struct _WMI_DISK_GEOMETRY WMI_DISK_GEOMETRY;
typedef struct tagWNODE_METHOD_ITEM WNODE_METHOD_ITEM;
typedef struct tagWNODE_SINGLE_ITEM WNODE_SINGLE_ITEM;
typedef struct _WWAN_SIGNAL_STATE WWAN_SIGNAL_STATE;
typedef struct _WWAN_SMS_SEND_PDU WWAN_SMS_SEND_PDU;
typedef struct _WWAN_USSD_REQUEST WWAN_USSD_REQUEST;
typedef union _XPF_MC_BANK_FLAGS XPF_MC_BANK_FLAGS;
typedef struct _XSAVE_AREA_HEADER XSAVE_AREA_HEADER;
enum _AUDIT_EVENT_TYPE {AuditEventObjectAccess = 0x0,AuditEventDirectoryServiceAccess = 0x1,};
enum _AVCSTRM_FUNCTION {AVCSTRM_READ = 0x0,AVCSTRM_WRITE = 0x1,AVCSTRM_ABORT_STREAMING = 0x2,AVCSTRM_OPEN = 0x100,AVCSTRM_CLOSE = 0x101,AVCSTRM_GET_STATE = 0x102,AVCSTRM_SET_STATE = 0x103,AVCSTRM_GET_PROPERTY = 0x104,AVCSTRM_SET_PROPERTY = 0x105,};
enum _BTHX_SCO_SUPPORT {ScoSupportNone = 0x0,ScoSupportHCI = 0x1,ScoSupportHCIBypass = 0x2,};
enum _CLS_CONTEXT_MODE {ClsContextNone = 0x0,ClsContextUndoNext = 0x1,ClsContextPrevious = 0x2,ClsContextForward = 0x3,};
enum _CREATE_FILE_TYPE {CreateFileTypeNone = 0x0,CreateFileTypeNamedPipe = 0x1,CreateFileTypeMailslot = 0x2,};
struct _DIRECTORY_HEADER {unsigned int Crc : 16;unsigned int Length : 16;};
enum _DISK_CACHE_STATE {DiskCacheNormal = 0x0,DiskCacheWriteThroughNotSupported = 0x1,DiskCacheModifyUnsuccessful = 0x2,};
enum _DOT11_ACK_POLICY {dot11_ack_policy_none = 0x0,dot11_ack_policy_acknowledge = 0x1,dot11_ack_policy_do_not_acknowledge = 0x2,};
enum _DOT11_POWER_MODE {dot11_power_mode_unknown = 0x0,dot11_power_mode_active = 0x1,dot11_power_mode_powersave = 0x2,};
enum _DOT11_RESET_TYPE {dot11_reset_type_phy = 0x1,dot11_reset_type_mac = 0x2,dot11_reset_type_phy_and_mac = 0x3,};
enum _DXGK_HANDLE_TYPE {DXGK_HANDLE_ALLOCATION = 0x1,DXGK_HANDLE_RESOURCE = 0x2,};
enum _DXGK_WDDMVERSION {DXGKDDI_WDDMv1 = 0x1000,DXGKDDI_WDDMv1_2 = 0x1200,DXGKDDI_WDDMv2 = 0x2000,};
struct _EISA_MEMORY_TYPE {unsigned char ReadWrite : 1;unsigned char Cached : 1;unsigned char Reserved0 : 1;unsigned char Type : 2;unsigned char Shared : 1;unsigned char Reserved1 : 1;unsigned char MoreEntries : 1;};
enum _EX_POOL_PRIORITY {LowPoolPriority = 0x0,LowPoolPrioritySpecialPoolOverrun = 0x8,LowPoolPrioritySpecialPoolUnderrun = 0x9,NormalPoolPriority = 0x10,NormalPoolPrioritySpecialPoolOverrun = 0x18,NormalPoolPrioritySpecialPoolUnderrun = 0x19,HighPoolPriority = 0x20,HighPoolPrioritySpecialPoolOverrun = 0x28,HighPoolPrioritySpecialPoolUnderrun = 0x29,};
enum _FAST_IO_POSSIBLE {FastIoIsNotPossible = 0x0,FastIoIsPossible = 0x1,FastIoIsQuestionable = 0x2,};
enum _FILTER_DUMP_TYPE {DumpTypeUndefined = 0x0,DumpTypeCrashdump = 0x1,DumpTypeHibernation = 0x2,};
enum _FPDT_RECORD_TYPE {FpdtTypeBootTablePointer = 0x0,FpdtTypeS3TablePointer = 0x1,};
enum _HIDP_REPORT_TYPE {HidP_Input = 0x0,HidP_Output = 0x1,HidP_Feature = 0x2,};
enum _INTEL_CACHE_TYPE {IntelCacheNull = 0x0,IntelCacheData = 0x1,IntelCacheInstruction = 0x2,IntelCacheUnified = 0x3,IntelCacheRam = 0x4,IntelCacheTrace = 0x5,};
enum _IO_PRIORITY_HINT {IoPriorityVeryLow = 0x0,IoPriorityLow = 0x1,IoPriorityNormal = 0x2,IoPriorityHigh = 0x3,IoPriorityCritical = 0x4,MaxIoPriorityTypes = 0x5,};
enum _IO_SESSION_EVENT {IoSessionEventIgnore = 0x0,IoSessionEventCreated = 0x1,IoSessionEventTerminated = 0x2,IoSessionEventConnected = 0x3,IoSessionEventDisconnected = 0x4,IoSessionEventLogon = 0x5,IoSessionEventLogoff = 0x6,IoSessionEventMax = 0x7,};
enum _IO_SESSION_STATE {IoSessionStateCreated = 0x1,IoSessionStateInitialized = 0x2,IoSessionStateConnected = 0x3,IoSessionStateDisconnected = 0x4,IoSessionStateDisconnectedLoggedOn = 0x5,IoSessionStateLoggedOn = 0x6,IoSessionStateLoggedOff = 0x7,IoSessionStateTerminated = 0x8,IoSessionStateMax = 0x9,};
enum _IRQ_GROUP_POLICY {GroupAffinityAllGroupZero = 0x0,GroupAffinityDontCare = 0x1,};
struct _KRESOURCEMANAGER;
enum _MEDIA_BLANK_TYPE {MediaBlankTypeFull = 0x0,MediaBlankTypeMinimal = 0x1,MediaBlankTypeIncompleteTrack = 0x2,MediaBlankTypeUnreserveLastTrack = 0x3,MediaBlankTypeTrackTail = 0x4,MediaBlankTypeUncloseLastSession = 0x5,MediaBlankTypeEraseLastSession = 0x6,};
enum _MM_PAGE_PRIORITY {LowPagePriority = 0x0,NormalPagePriority = 0x10,HighPagePriority = 0x20,};
enum _NDIS_HALT_ACTION {NdisHaltDeviceDisabled = 0x0,NdisHaltDeviceInstanceDeInitialized = 0x1,NdisHaltDevicePoweredDown = 0x2,NdisHaltDeviceSurpriseRemoved = 0x3,NdisHaltDeviceFailed = 0x4,NdisHaltDeviceInitializationFailed = 0x5,NdisHaltDeviceStopped = 0x6,};
enum _NDIS_MEDIA_STATE {NdisMediaStateConnected = 0x0,NdisMediaStateDisconnected = 0x1,};
enum _NDIS_WAN_QUALITY {NdisWanRaw = 0x0,NdisWanErrorControl = 0x1,NdisWanReliable = 0x2,};
struct _NETWORK_CHANNELS {unsigned int NC_Channel : 6;unsigned int NC_Reserved : 18;unsigned int NC_Npm_ID : 6;unsigned int NC_Valid : 1;unsigned int NC_One : 1;};
enum _OPERATION_STATUS {OPERATION_COMPLETED_WITH_SUCCESS = 0x1,OPERATION_COMPLETED_WITH_ERROR = 0x2,OPERATION_COMPLETED_WITH_RESIDUAL_DATA = 0x3,OPERATION_IN_PROGRESS_IN_FOREGROUND = 0x11,OPERATION_IN_PROGRESS_IN_BACKGROUND = 0x12,OPERATION_TERMINATED = 0x60,};
enum _POWER_STATE_TYPE {SystemPowerState = 0x0,DevicePowerState = 0x1,};
enum _PROCESSINFOCLASS {ProcessBasicInformation = 0x0,ProcessQuotaLimits = 0x1,ProcessIoCounters = 0x2,ProcessVmCounters = 0x3,ProcessTimes = 0x4,ProcessBasePriority = 0x5,ProcessRaisePriority = 0x6,ProcessDebugPort = 0x7,ProcessExceptionPort = 0x8,ProcessAccessToken = 0x9,ProcessLdtInformation = 0xA,ProcessLdtSize = 0xB,ProcessDefaultHardErrorMode = 0xC,ProcessIoPortHandlers = 0xD,ProcessPooledUsageAndLimits = 0xE,ProcessWorkingSetWatch = 0xF,ProcessUserModeIOPL = 0x10,ProcessEnableAlignmentFaultFixup = 0x11,ProcessPriorityClass = 0x12,ProcessWx86Information = 0x13,ProcessHandleCount = 0x14,ProcessAffinityMask = 0x15,ProcessPriorityBoost = 0x16,ProcessDeviceMap = 0x17,ProcessSessionInformation = 0x18,ProcessForegroundInformation = 0x19,ProcessWow64Information = 0x1A,ProcessImageFileName = 0x1B,ProcessLUIDDeviceMapsEnabled = 0x1C,ProcessBreakOnTermination = 0x1D,ProcessDebugObjectHandle = 0x1E,ProcessDebugFlags = 0x1F,ProcessHandleTracing = 0x20,ProcessIoPriority = 0x21,ProcessExecuteFlags = 0x22,ProcessTlsInformation = 0x23,ProcessCookie = 0x24,ProcessImageInformation = 0x25,ProcessCycleTime = 0x26,ProcessPagePriority = 0x27,ProcessInstrumentationCallback = 0x28,ProcessThreadStackAllocation = 0x29,ProcessWorkingSetWatchEx = 0x2A,ProcessImageFileNameWin32 = 0x2B,ProcessImageFileMapping = 0x2C,ProcessAffinityUpdateMode = 0x2D,ProcessMemoryAllocationMode = 0x2E,ProcessGroupInformation = 0x2F,ProcessTokenVirtualizationEnabled = 0x30,ProcessConsoleHostProcess = 0x31,ProcessWindowInformation = 0x32,ProcessHandleInformation = 0x33,ProcessMitigationPolicy = 0x34,ProcessDynamicFunctionTableInformation = 0x35,ProcessHandleCheckingMode = 0x36,ProcessKeepAliveCount = 0x37,ProcessRevokeFileHandles = 0x38,ProcessWorkingSetControl = 0x39,MaxProcessInfoClass = 0x3A,};
enum _REG_NOTIFY_CLASS {RegNtDeleteKey = 0x0,RegNtPreDeleteKey = 0x0,RegNtSetValueKey = 0x1,RegNtPreSetValueKey = 0x1,RegNtDeleteValueKey = 0x2,RegNtPreDeleteValueKey = 0x2,RegNtSetInformationKey = 0x3,RegNtPreSetInformationKey = 0x3,RegNtRenameKey = 0x4,RegNtPreRenameKey = 0x4,RegNtEnumerateKey = 0x5,RegNtPreEnumerateKey = 0x5,RegNtEnumerateValueKey = 0x6,RegNtPreEnumerateValueKey = 0x6,RegNtQueryKey = 0x7,RegNtPreQueryKey = 0x7,RegNtQueryValueKey = 0x8,RegNtPreQueryValueKey = 0x8,RegNtQueryMultipleValueKey = 0x9,RegNtPreQueryMultipleValueKey = 0x9,RegNtPreCreateKey = 0xA,RegNtPostCreateKey = 0xB,RegNtPreOpenKey = 0xC,RegNtPostOpenKey = 0xD,RegNtKeyHandleClose = 0xE,RegNtPreKeyHandleClose = 0xE,RegNtPostDeleteKey = 0xF,RegNtPostSetValueKey = 0x10,RegNtPostDeleteValueKey = 0x11,RegNtPostSetInformationKey = 0x12,RegNtPostRenameKey = 0x13,RegNtPostEnumerateKey = 0x14,RegNtPostEnumerateValueKey = 0x15,RegNtPostQueryKey = 0x16,RegNtPostQueryValueKey = 0x17,RegNtPostQueryMultipleValueKey = 0x18,RegNtPostKeyHandleClose = 0x19,RegNtPreCreateKeyEx = 0x1A,RegNtPostCreateKeyEx = 0x1B,RegNtPreOpenKeyEx = 0x1C,RegNtPostOpenKeyEx = 0x1D,RegNtPreFlushKey = 0x1E,RegNtPostFlushKey = 0x1F,RegNtPreLoadKey = 0x20,RegNtPostLoadKey = 0x21,RegNtPreUnLoadKey = 0x22,RegNtPostUnLoadKey = 0x23,RegNtPreQueryKeySecurity = 0x24,RegNtPostQueryKeySecurity = 0x25,RegNtPreSetKeySecurity = 0x26,RegNtPostSetKeySecurity = 0x27,RegNtCallbackObjectContextCleanup = 0x28,RegNtPreRestoreKey = 0x29,RegNtPostRestoreKey = 0x2A,RegNtPreSaveKey = 0x2B,RegNtPostSaveKey = 0x2C,RegNtPreReplaceKey = 0x2D,RegNtPostReplaceKey = 0x2E,MaxRegNtNotifyClass = 0x2F,};
enum _SILO_DRIVER_CAPS {CAP_ON_DEMAND_AUTHENTICATION = 0x1,CAP_BANDING_SUPPORT = 0x2,};
enum _STORAGE_BUS_TYPE {BusTypeUnknown = 0x0,BusTypeScsi = 0x1,BusTypeAtapi = 0x2,BusTypeAta = 0x3,BusType1394 = 0x4,BusTypeSsa = 0x5,BusTypeFibre = 0x6,BusTypeUsb = 0x7,BusTypeRAID = 0x8,BusTypeiScsi = 0x9,BusTypeSas = 0xA,BusTypeSata = 0xB,BusTypeSd = 0xC,BusTypeMmc = 0xD,BusTypeVirtual = 0xE,BusTypeFileBackedVirtual = 0xF,BusTypeSpaces = 0x10,BusTypeMax = 0x11,BusTypeMaxReserved = 0x7F,};
struct _STOR_SLIST_ENTRY {struct _STOR_SLIST_ENTRY *Next;};
enum _USB_DEVICE_SPEED {UsbLowSpeed = 0x0,UsbFullSpeed = 0x1,UsbHighSpeed = 0x2,UsbSuperSpeed = 0x3,};
enum _WRITE_CACHE_TYPE {WriteCacheTypeUnknown = 0x0,WriteCacheTypeNone = 0x1,WriteCacheTypeWriteBack = 0x2,WriteCacheTypeWriteThrough = 0x3,};
enum _WWAN_AUTH_METHOD {WwanAuthSim = 0x0,WwanAuthAka = 0x1,WwanAuthAkaPrime = 0x2,WwanAuthMethodMax = 0x3,};
enum _WWAN_COMPRESSION {WwanCompressionNone = 0x0,WwanCompressionEnable = 0x1,WwanCompressionMax = 0x2,};
enum _WWAN_DEVICE_TYPE {WwanDeviceTypeUnknown = 0x0,WwanDeviceTypeEmbedded = 0x1,WwanDeviceTypeRemovable = 0x2,WwanDeviceTypeRemote = 0x3,WwanDeviceTypeMax = 0x4,};
enum _WWAN_READY_STATE {WwanReadyStateOff = 0x0,WwanReadyStateInitialized = 0x1,WwanReadyStateSimNotInserted = 0x2,WwanReadyStateBadSim = 0x3,WwanReadyStateFailure = 0x4,WwanReadyStateNotActivated = 0x5,WwanReadyStateDeviceLocked = 0x6,};
enum _WWAN_STRUCT_TYPE {WwanStructTN = 0x0,WwanStructContext = 0x1,WwanStructProvider = 0x2,WwanStructSmsPdu = 0x3,WwanStructReserved0 = 0x4,WwanStructReserved1 = 0x5,WwanStructReserved2 = 0x6,WwanStructSmsCdma = 0x7,WwanStructReserved3 = 0x8,WwanStructDeviceServiceEntry = 0x9,WwanStructProvider2 = 0xA,WwanStructDeviceServiceGuid = 0xB,WwanStructDeviceServiceCommandId = 0xC,WwanStructCellularClass = 0xD,WwanStructMax = 0xE,};
enum _WWAN_VOICE_CLASS {WwanVoiceClassUnknown = 0x0,WwanVoiceClassNoVoice = 0x1,WwanVoiceClassSeparateVoiceData = 0x2,WwanVoiceClassSimultaneousVoiceData = 0x3,WwanVoiceClassMax = 0x4,};
typedef void (*pReservedFunction)();
typedef struct _AAL34_PARAMETERS AAL34_PARAMETERS;
typedef struct adpcmewaveformat_tag ADPCMEWAVEFORMAT;
typedef struct _ATM_AAL_OOB_INFO ATM_AAL_OOB_INFO;
typedef struct _ATM_QOS_CLASS_IE ATM_QOS_CLASS_IE;
typedef struct _AVC_PEER_DO_LIST AVC_PEER_DO_LIST;
typedef struct _AV_61883_REQUEST AV_61883_REQUEST;
typedef struct _AddiSNSServer_IN AddiSNSServer_IN;
typedef struct _BDA_CA_MODULE_UI BDA_CA_MODULE_UI;
enum BDA_CHANGE_STATE {BDA_CHANGES_COMPLETE = 0x0,BDA_CHANGES_PENDING = 0x1,};
typedef struct _BDA_IPv4_ADDRESS BDA_IPv4_ADDRESS;
typedef struct _BDA_IPv6_ADDRESS BDA_IPv6_ADDRESS;
enum BDA_SIGNAL_STATE {BDA_SIGNAL_UNAVAILABLE = 0x0,BDA_SIGNAL_INACTIVE = 0x1,BDA_SIGNAL_ACTIVE = 0x2,};
typedef struct _BDA_WMDRM_STATUS BDA_WMDRM_STATUS;
typedef struct _BUS_RESET_NOTIFY BUS_RESET_NOTIFY;
typedef struct _CACHE_DESCRIPTOR CACHE_DESCRIPTOR;
typedef struct _CDDA_OUTPUT_PORT CDDA_OUTPUT_PORT;
typedef struct _CIP_ATTACH_FRAME CIP_ATTACH_FRAME;
typedef struct _CIP_CANCEL_FRAME CIP_CANCEL_FRAME;
typedef struct _CLFS_MGMT_POLICY CLFS_MGMT_POLICY;
typedef struct _CLS_SCAN_CONTEXT CLS_SCAN_CONTEXT;
typedef struct _CMP_CONNECT_VER2 CMP_CONNECT_VER2;
typedef struct _CMP_CONNECT_VER3 CMP_CONNECT_VER3;
typedef struct _CMP_MONITOR_INFO CMP_MONITOR_INFO;
typedef struct _CM_RESOURCE_LIST CM_RESOURCE_LIST;
typedef int CM_RESOURCE_TYPE;
typedef struct _D3DKMDT_2DREGION D3DKMDT_2DREGION;
struct D3DKMDT_HVIDPN__ {int unused;};
typedef struct _D3DKMT_MOVE_RECT D3DKMT_MOVE_RECT;
typedef struct _DEBUG_PORT_TABLE DEBUG_PORT_TABLE;
typedef struct _DEVICE_RELATIONS DEVICE_RELATIONS;
typedef struct _DEVOBJ_EXTENSION DEVOBJ_EXTENSION;
typedef struct _DIRECTORY_HEADER DIRECTORY_HEADER;
typedef struct _DISC_INFORMATION DISC_INFORMATION;
typedef struct _DISK_GEOMETRY_EX DISK_GEOMETRY_EX;
typedef struct _DISK_INFORMATION DISK_INFORMATION;
typedef struct _DISK_PERFORMANCE DISK_PERFORMANCE;
typedef struct _DMA_ADAPTER_INFO DMA_ADAPTER_INFO;
typedef struct _DOT11_RSSI_RANGE DOT11_RSSI_RANGE;
typedef struct _DOT11_WEP_UPLOAD DOT11_WEP_UPLOAD;
typedef struct _DRIVER_EXTENSION DRIVER_EXTENSION;
typedef struct _DSM_MPIO_CONTEXT DSM_MPIO_CONTEXT;
typedef struct _DSM_VERSION_INFO DSM_VERSION_INFO;
typedef struct _DUMP_POINTERS_EX DUMP_POINTERS_EX;
typedef struct _DXGKMDT_OPM_OMAC DXGKMDT_OPM_OMAC;
typedef struct _DXGK_CONTEXTINFO DXGK_CONTEXTINFO;
typedef struct _DXGK_DEVICE_INFO DXGK_DEVICE_INFO;
typedef struct _DXGK_OVERLAYINFO DXGK_OVERLAYINFO;
typedef struct _EISA_MEMORY_TYPE EISA_MEMORY_TYPE;
typedef struct _ENUM_PDO_RESULTS ENUM_PDO_RESULTS;
typedef struct _EVENT_DESCRIPTOR EVENT_DESCRIPTOR;
typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;
typedef struct _EXFAT_STATISTICS EXFAT_STATISTICS;
typedef struct _FAST_IO_DISPATCH FAST_IO_DISPATCH;
typedef struct _FCP_GET_RESPONSE FCP_GET_RESPONSE;
typedef struct _FCP_SEND_REQUEST FCP_SEND_REQUEST;
typedef struct _FILE_PREFETCH_EX FILE_PREFETCH_EX;
typedef struct _FILE_REGION_INFO FILE_REGION_INFO;
typedef struct _FILTER_EXTENSION FILTER_EXTENSION;
typedef struct _331B1DF8077172E73B1772E454860C5E FIND_BY_SID_DATA;
typedef struct _SENSE_DATA FIXED_SENSE_DATA;
typedef struct _FLT_NAME_CONTROL FLT_NAME_CONTROL;
typedef struct _FLT_REGISTRATION FLT_REGISTRATION;
typedef struct group_source_req GROUP_SOURCE_REQ;
typedef struct gsm610waveformat_tag GSM610WAVEFORMAT;
typedef struct _HARDWARE_ADDRESS HARDWARE_ADDRESS;
typedef struct _HARDWARE_COUNTER HARDWARE_COUNTER;
typedef struct HBA_FcpScsiEntry HBA_FCPSCSIENTRY;
typedef struct _HIDP_BUTTON_CAPS HIDP_BUTTON_CAPS;
typedef struct _HIDP_DEVICE_DESC HIDP_DEVICE_DESC;
typedef struct _HISTOGRAM_BUCKET HISTOGRAM_BUCKET;
typedef struct _HW_STREAM_HEADER HW_STREAM_HEADER;
typedef struct _HW_STREAM_OBJECT HW_STREAM_OBJECT;
typedef struct _IDE_ACCESS_RANGE IDE_ACCESS_RANGE;
typedef union _IMAGE_AUX_SYMBOL IMAGE_AUX_SYMBOL;
typedef struct _IMAGE_DEBUG_MISC IMAGE_DEBUG_MISC;
typedef struct _IMAGE_DOS_HEADER IMAGE_DOS_HEADER;
typedef struct _IMAGE_LINENUMBER IMAGE_LINENUMBER;
typedef struct _IMAGE_OS2_HEADER IMAGE_OS2_HEADER;
typedef struct _IMAGE_RELOCATION IMAGE_RELOCATION;
typedef struct _IMAGE_VXD_HEADER IMAGE_VXD_HEADER;
struct IMiniportWavePci {struct IMiniportWavePciVtbl *lpVtbl;};
struct IMusicTechnology {struct IMusicTechnologyVtbl *lpVtbl;};
typedef struct _IO_PRIORITY_INFO IO_PRIORITY_INFO;
typedef struct _IO_RESOURCE_LIST IO_RESOURCE_LIST;
typedef struct _ISCSI_IP_Address ISCSI_IP_Address;
typedef struct _ISCSI_PortalInfo ISCSI_PortalInfo;
typedef struct _ISOCH_DESCRIPTOR ISOCH_DESCRIPTOR;
typedef struct _IdleAccountingEx IdleAccountingEx;
typedef struct _KRESOURCEMANAGER KRESOURCEMANAGER;
typedef struct _FF5E69F4B253A5B06BAE6BEDF0A709ED KSATTRIBUTE_LIST;
typedef struct _12A419A691843E3FACBCDACF473D8E54 KSAUDIO_MIXLEVEL;
typedef struct _1E1F3A8FE12995513A3555C52633C7C9 KSAUDIO_MIX_CAPS;
typedef struct _8F18F53EFBEBE9496980818DD790123F KSAUDIO_POSITION;
typedef struct _KSCLOCK_DISPATCH KSCLOCK_DISPATCH;
typedef struct _0B037F2534779A05E9AEAE9A3A29D997 KSDISPATCH_TABLE;
typedef struct _KSM_BDA_PIN_PAIR KSM_BDA_PIN_PAIR;
typedef struct _01091B9DEBEBC2354EBF1594EEF6BE89 KSPIN_CINSTANCES;
typedef struct _4C3688935B439E6B73B5D283DA0CA595 KSPIN_DESCRIPTOR;
typedef struct _KSPIN_LOCK_QUEUE KSPIN_LOCK_QUEUE;
typedef struct _KSPROPERTY_SPHLI KSPROPERTY_SPHLI;
typedef struct _KSPROPERTY_SPPAL KSPROPERTY_SPPAL;
typedef struct _KSP_BDA_NODE_PIN KSP_BDA_NODE_PIN;
typedef struct _82A9949D9C93DB4693E05DBBCDD803A5 KSRTAUDIO_BUFFER;
typedef struct _9B0A4478CCC03CE069B62A821FAD8B21 KSSCATTER_GATHER;
typedef struct _KSSTREAM_POINTER KSSTREAM_POINTER;
typedef struct _EA4AC72E281160164D445E15D4425ADE KSVPMAXPIXELRATE;
typedef struct _B62AAB724E8D7D841EB663A6FEE96A5E KS_FRAMING_RANGE;
typedef struct tagKS_H264VIDEOINFO KS_H264VIDEOINFO;
typedef struct tagKS_MPEAUDIOINFO KS_MPEGAUDIOINFO;
typedef struct tag_KS_TRUECOLORINFO KS_TRUECOLORINFO;
typedef struct tagKS_VBIINFOHEADER KS_VBIINFOHEADER;
typedef struct _KTMOBJECT_CURSOR KTMOBJECT_CURSOR;
typedef struct _KernelIdleStates KernelIdleStates;
typedef struct _KernelPerfStates KernelPerfStates;
typedef struct _LBA_FILTER_TABLE LBA_FILTER_TABLE;
typedef struct _LINE_CALL_PARAMS LINE_CALL_PARAMS;
typedef struct _LINE_CALL_STATUS LINE_CALL_STATUS;
typedef struct _LINE_DIAL_PARAMS LINE_DIAL_PARAMS;
typedef struct _INTERFACE_INFO *LPINTERFACE_INFO;
typedef struct _OSVERSIONINFOA *LPOSVERSIONINFOA;
typedef struct _OSVERSIONINFOW *LPOSVERSIONINFOW;
typedef struct _EC8EE2E9AF7D4EC32726A7FD632A186D *LPQOS_OBJECT_HDR;
typedef struct _SOCKET_ADDRESS *LPSOCKET_ADDRESS;
typedef struct _LoginToTarget_IN LoginToTarget_IN;
enum MACRO_ACCESS_MAX {ACCESS_MAX_MS_V2_ACE_TYPE = 0x3,ACCESS_ALLOWED_COMPOUND_ACE_TYPE = 0x4,ACCESS_MAX_MS_V3_ACE_TYPE = 0x4,ACCESS_MIN_MS_OBJECT_ACE_TYPE = 0x5,ACCESS_ALLOWED_OBJECT_ACE_TYPE = 0x5,ACCESS_DENIED_OBJECT_ACE_TYPE = 0x6,};
enum MACRO_ACCESS_MIN {ACCESS_MIN_MS_ACE_TYPE = 0x0,ACCESS_ALLOWED_ACE_TYPE = 0x0,ACCESS_DENIED_ACE_TYPE = 0x1,};
enum MACRO_ADDRSTRLEN {INET_ADDRSTRLEN = 22,INET6_ADDRSTRLEN = 65,};
enum MACRO_AUDIO_DATA {AUDIO_DATA_TRACK = 0x4,};
enum MACRO_AUDIO_WITH {AUDIO_WITH_PREEMPHASIS = 0x1,};
enum MACRO_AUTHZSTATE {AUTHZSTATE_AUTHENTICATE = 0x1,AUTHZSTATE_CLEAR_AUTHKEY_CACHE = 0x2,};
enum MACRO_AVC_DEVICE {AVC_DEVICE_TAPE_REC = 0x20,AVC_DEVICE_CAMERA = 0x38,AVC_DEVICE_TUNER = 0x28,};
enum MACRO_AddPort_IN {AddPort_IN_PortWWN_ID = 1,AddPort_OUT_HBAStatus_ID = 2,};
enum MACRO_BACKGROUND {BACKGROUND_BLUE = 0x10,BACKGROUND_GREEN = 0x20,BACKGROUND_RED = 0x40,BACKGROUND_INTENSITY = 0x80,};
enum MACRO_BAD_SYSTEM {BAD_SYSTEM_CONFIG_INFO = 0x74,};
enum MACRO_BIT_OFFSET {NAP_BIT_OFFSET = 32,SAP_BIT_OFFSET = 0,COD_FORMAT_BIT_OFFSET = 0,COD_MINOR_BIT_OFFSET = 2,COD_MAJOR_BIT_OFFSET = 8,COD_SERVICE_BIT_OFFSET = 13,};
enum MACRO_BTHDDI_SDP {BTHDDI_SDP_PARSE_INTERFACE_VERSION_FOR_QI = 0x100,BTHDDI_SDP_NODE_INTERFACE_VERSION_FOR_QI = 0x100,};
enum MACRO_BUGCODE_ID {BUGCODE_ID_DRIVER = 0xD2,};
enum MACRO_BYTE_BIDIR {BYTE_BIDIR = 0x10,};
enum MACRO_BYTE_ERROR {BYTE_ERROR = 0xFF,SHORT_ERROR = 0xFFFFFFFF,USHORT_ERROR = 0xFFFF,WORD_ERROR = 0xFFFF,INT_ERROR = 0xFFFFFFFF,INT32_ERROR = 0xFFFFFFFF,UINT_ERROR = 0xFFFFFFFF,UINT32_ERROR = 0xFFFFFFFF,LONG_ERROR = 0xFFFFFFFF,ULONG_ERROR = 0xFFFFFFFF,DWORD_ERROR = 0xFFFFFFFF,LONGLONG_ERROR = 0xFFFFFFFF,LONG64_ERROR = 0xFFFFFFFF,INT64_ERROR = 0xFFFFFFFF,ULONGLONG_ERROR = 0xFFFFFFFF,DWORDLONG_ERROR = 0xFFFFFFFF,ULONG64_ERROR = 0xFFFFFFFF,UINT64_ERROR = 0xFFFFFFFF,INT_PTR_ERROR = 0xFFFFFFFF,UINT_PTR_ERROR = 0xFFFFFFFF,LONG_PTR_ERROR = 0xFFFFFFFF,ULONG_PTR_ERROR = 0xFFFFFFFF,DWORD_PTR_ERROR = 0xFFFFFFFF,PTRDIFF_T_ERROR = 0xFFFFFFFF,SIZE_T_ERROR = 0xFFFFFFFF,SSIZE_T_ERROR = 0xFFFFFFFF,_SIZE_T_ERROR = 0xFFFFFFFF,};
enum MACRO_BYTE_ORDER {BYTE_ORDER = 1234,};
enum MACRO_CDROM_READ {CDROM_READ_TOC_EX_FORMAT_TOC = 0x0,CDROM_READ_TOC_EX_FORMAT_SESSION = 0x1,CDROM_READ_TOC_EX_FORMAT_FULL_TOC = 0x2,CDROM_READ_TOC_EX_FORMAT_PMA = 0x3,CDROM_READ_TOC_EX_FORMAT_ATIP = 0x4,CDROM_READ_TOC_EX_FORMAT_CDTEXT = 0x5,CDROM_CD_TEXT_PACK_ALBUM_NAME = 0x80,CDROM_CD_TEXT_PACK_PERFORMER = 0x81,CDROM_CD_TEXT_PACK_SONGWRITER = 0x82,CDROM_CD_TEXT_PACK_COMPOSER = 0x83,CDROM_CD_TEXT_PACK_ARRANGER = 0x84,CDROM_CD_TEXT_PACK_MESSAGES = 0x85,CDROM_CD_TEXT_PACK_DISC_ID = 0x86,CDROM_CD_TEXT_PACK_GENRE = 0x87,CDROM_CD_TEXT_PACK_TOC_INFO = 0x88,CDROM_CD_TEXT_PACK_TOC_INFO2 = 0x89,CDROM_CD_TEXT_PACK_UPC_EAN = 0x8E,CDROM_CD_TEXT_PACK_SIZE_INFO = 0x8F,CDROM_DISK_AUDIO_TRACK = 0x1,CDROM_DISK_DATA_TRACK = 0x2,};
enum MACRO_CLIENTSITE {CLIENTSITE_E_FIRST = 0x80040190,CLIENTSITE_E_LAST = 0x8004019F,CLIENTSITE_S_FIRST = 0x40190,CLIENTSITE_S_LAST = 0x4019F,};
enum MACRO_COMADMIN_E {COMADMIN_E_OBJECT_PARENT_MISSING = 0x80110808,COMADMIN_E_OBJECT_DOES_NOT_EXIST = 0x80110809,COMADMIN_E_APP_NOT_RUNNING = 0x8011080A,COMADMIN_E_INVALID_PARTITION = 0x8011080B,COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE = 0x8011080D,COMADMIN_E_USER_IN_SET = 0x8011080E,COMADMIN_E_CANTRECYCLELIBRARYAPPS = 0x8011080F,COMADMIN_E_CANTRECYCLESERVICEAPPS = 0x80110811,COMADMIN_E_PROCESSALREADYRECYCLED = 0x80110812,COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED = 0x80110813,COMADMIN_E_CANTMAKEINPROCSERVICE = 0x80110814,COMADMIN_E_PROGIDINUSEBYCLSID = 0x80110815,COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET = 0x80110816,COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED = 0x80110817,COMADMIN_E_PARTITION_ACCESSDENIED = 0x80110818,COMADMIN_E_PARTITION_MSI_ONLY = 0x80110819,COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT = 0x8011081A,COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS = 0x8011081B,COMADMIN_E_COMP_MOVE_SOURCE = 0x8011081C,COMADMIN_E_COMP_MOVE_DEST = 0x8011081D,COMADMIN_E_COMP_MOVE_PRIVATE = 0x8011081E,COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET = 0x8011081F,COMADMIN_E_CANNOT_ALIAS_EVENTCLASS = 0x80110820,COMADMIN_E_PRIVATE_ACCESSDENIED = 0x80110821,COMADMIN_E_SAFERINVALID = 0x80110822,COMADMIN_E_REGISTRY_ACCESSDENIED = 0x80110823,COMADMIN_E_PARTITIONS_DISABLED = 0x80110824,};
enum MACRO_CONFIG_ROM {CONFIG_ROM_SIGNATURE = 0x31333934,};
enum MACRO_CONNECTION {CONNECTION_PARAMETERS_ACCEPTED = 0x0,CONNECTION_PARAMETERS_REJECTED = 0x1,};
enum MACRO_CO_ADDRESS {CO_ADDRESS_FAMILY_Q2931 = 0x1,CO_ADDRESS_FAMILY_PSCHED = 0x2,CO_ADDRESS_FAMILY_L2TP = 0x3,CO_ADDRESS_FAMILY_IRDA = 0x4,CO_ADDRESS_FAMILY_1394 = 0x5,CO_ADDRESS_FAMILY_PPP = 0x6,CO_ADDRESS_FAMILY_INFINIBAND = 0x7,CO_ADDRESS_FAMILY_TAPI = 0x800,CO_ADDRESS_FAMILY_TAPI_PROXY = 0x801,CO_ADDRESS_FAMILY_PROXY = 0x80000000,};
enum MACRO_CO_DYNAMIC {CO_DYNAMIC = 0x1,CO_FIXED = 0x2,CO_UNKNOWN = 0x4,};
enum MACRO_CO_E_CLASS {CO_E_CLASS_CREATE_FAILED = 0x80080001,CO_E_SCM_ERROR = 0x80080002,CO_E_SCM_RPC_FAILURE = 0x80080003,CO_E_BAD_PATH = 0x80080004,CO_E_SERVER_EXEC_FAILURE = 0x80080005,CO_E_OBJSRV_RPC_FAILURE = 0x80080006,};
enum MACRO_CO_E_FIRST {CO_E_FIRST = 0x800401F0,CO_E_LAST = 0x800401FF,CO_S_FIRST = 0x401F0,CO_S_LAST = 0x401FF,CO_E_NOTINITIALIZED = 0x800401F0,CO_E_ALREADYINITIALIZED = 0x800401F1,CO_E_CANTDETERMINECLASS = 0x800401F2,CO_E_CLASSSTRING = 0x800401F3,CO_E_IIDSTRING = 0x800401F4,CO_E_APPNOTFOUND = 0x800401F5,CO_E_APPSINGLEUSE = 0x800401F6,CO_E_ERRORINAPP = 0x800401F7,CO_E_DLLNOTFOUND = 0x800401F8,CO_E_ERRORINDLL = 0x800401F9,CO_E_WRONGOSFORAPP = 0x800401FA,CO_E_OBJNOTREG = 0x800401FB,CO_E_OBJISREG = 0x800401FC,CO_E_OBJNOTCONNECTED = 0x800401FD,CO_E_APPDIDNTREG = 0x800401FE,CO_E_RELEASED = 0x800401FF,};
enum MACRO_ClearCache {ClearCache = 5,};
enum MACRO_D3DDDI_MAX {D3DDDI_MAX_OBJECT_WAITED_ON = 32,D3DDDI_MAX_OBJECT_SIGNALED = 32,D3DDDI_MAX_BROADCAST_CONTEXT = 64,D3DDDI_ALLOCATIONPRIORITY_MINIMUM = 671088640,D3DDDI_ALLOCATIONPRIORITY_LOW = 1342177280,D3DDDI_ALLOCATIONPRIORITY_NORMAL = 2013265920,D3DDDI_ALLOCATIONPRIORITY_HIGH = -1610612736,D3DDDI_ALLOCATIONPRIORITY_MAXIMUM = -939524096,};
enum MACRO_DATA_BLOCK {DATA_BLOCK_MODE0 = 0x0,DATA_BLOCK_MODE1 = 0x1,DATA_BLOCK_MODE2 = 0x2,};
enum MACRO_DBG_STATUS {DBG_STATUS_CONTROL_C = 1,DBG_STATUS_SYSRQ = 2,DBG_STATUS_BUGCHECK_FIRST = 3,DBG_STATUS_BUGCHECK_SECOND = 4,DBG_STATUS_FATAL = 5,DBG_STATUS_DEBUG_CONTROL = 6,DBG_STATUS_WORKER = 7,};
enum MACRO_DEREGISTER {DEREGISTER_FCP_NOTIFY = 0x0,REGISTER_FCP_RESPONSE_NOTIFY = 0x1,REGISTER_FCP_REQUEST_NOTIFY = 0x2,REGISTER_BUS_RESET_NOTIFY = 0x1,DEREGISTER_BUS_RESET_NOTIFY = 0x2,};
enum MACRO_DESCRIPTOR {DESCRIPTOR_SYNCH_ON_SY = 0x1,DESCRIPTOR_SYNCH_ON_TAG = 0x2,DESCRIPTOR_SYNCH_ON_TIME = 0x4,DESCRIPTOR_USE_SY_TAG_IN_FIRST = 0x8,DESCRIPTOR_TIME_STAMP_ON_COMPLETION = 0x10,DESCRIPTOR_PRIORITY_TIME_DELIVERY = 0x20,DESCRIPTOR_HEADER_SCATTER_GATHER = 0x40,DESCRIPTOR_SYNCH_ON_ALL_TAGS = 0x80,};
enum MACRO_DEVICEDUMP {DEVICEDUMP_STRUCTURE_VERSION_V1 = 1,DEVICEDUMP_MAX_IDSTRING = 32,};
enum MACRO_DEVICE_DSM {DEVICE_DSM_FLAG_ENTIRE_DATA_SET_RANGE = 0x1,DEVICE_DSM_FLAG_TRIM_NOT_FS_ALLOCATED = 0x80000000,DEVICE_DSM_FLAG_ALLOCATION_CONSOLIDATEABLE_ONLY = 0x40000000,DEVICE_DSM_FLAG_SCRUB_SKIP_IN_SYNC = 0x10000000,DEVICE_DSM_NOTIFY_FLAG_BEGIN = 0x1,DEVICE_DSM_NOTIFY_FLAG_END = 0x2,};
enum MACRO_DEVICE_VGA {DEVICE_VGA_ENABLED = 1,};
enum MACRO_DIAGNOSTIC {DIAGNOSTIC_REASON_VERSION = 0,DIAGNOSTIC_REASON_SIMPLE_STRING = 1,DIAGNOSTIC_REASON_DETAILED_STRING = 2,DIAGNOSTIC_REASON_NOT_SPECIFIED = -2147483648,DIAGNOSTIC_REASON_INVALID_FLAGS = 2147483644,};
enum MACRO_DISORDERLY {DISORDERLY_SHUTDOWN = 0xF3,};
enum MACRO_DOT11_AUTH {DOT11_AUTH_ALGORITHM_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_DATA {DOT11_DATA_RATE_MAPPING_TABLE_REVISION_1 = 1,DOT11_DATA_RATE_NON_STANDARD = 1,DOT11_DATA_RATE_INDEX_MASK = 127,};
enum MACRO_DOT11_IBSS {DOT11_IBSS_PARAMS_REVISION_1 = 1,};
enum MACRO_DOT11_PEER {DOT11_PEER_INFO_LIST_REVISION_1 = 1,DOT11_VWIFI_COMBINATION_REVISION_1 = 1,DOT11_VWIFI_COMBINATION_REVISION_2 = 2,DOT11_VWIFI_COMBINATION_REVISION_3 = 3,DOT11_VWIFI_ATTRIBUTES_REVISION_1 = 1,};
enum MACRO_DOT11_PORT {DOT11_PORT_STATE_NOTIFICATION_REVISION_1 = 1,};
enum MACRO_DOT11_SEND {DOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DOT11_SSID {DOT11_SSID_LIST_REVISION_1 = 1,};
enum MACRO_DPC_NORMAL {DPC_NORMAL = 0,DPC_THREADED = 1,};
enum MACRO_DRAGDROP_S {DRAGDROP_S_DROP = 0x40100,DRAGDROP_S_CANCEL = 0x40101,DRAGDROP_S_USEDEFAULTCURSORS = 0x40102,};
enum MACRO_ECP_OFFSET {ECP_OFFSET = 0x400,CNFGB_OFFSET = 0x401,ECR_OFFSET = 0x402,FIFO_OFFSET = 0x400,CFIFO_OFFSET = 0x400,CNFGA_OFFSET = 0x400,ECP_DFIFO_OFFSET = 0x400,TFIFO_OFFSET = 0x400,};
enum MACRO_EM_INVALID {EM_INVALID = 16,EM_DENORMAL = 524288,EM_ZERODIVIDE = 8,EM_OVERFLOW = 4,EM_UNDERFLOW = 2,EM_INEXACT = 1,};
enum MACRO_ENCRYPTION {ENCRYPTION_FORMAT_DEFAULT = 0x1,};
enum MACRO_ENLISTMENT {ENLISTMENT_SUPERIOR = 0x1,ENLISTMENT_MAXIMUM_OPTION = 0x1,};
enum MACRO_ERROR_CRED {ERROR_CRED_REQUIRES_CONFIRMATION = 0x80097019,};
enum MACRO_ERROR_NDIS {ERROR_NDIS_INTERFACE_CLOSING = 0x80340002,ERROR_NDIS_BAD_VERSION = 0x80340004,ERROR_NDIS_BAD_CHARACTERISTICS = 0x80340005,ERROR_NDIS_ADAPTER_NOT_FOUND = 0x80340006,ERROR_NDIS_OPEN_FAILED = 0x80340007,ERROR_NDIS_DEVICE_FAILED = 0x80340008,ERROR_NDIS_MULTICAST_FULL = 0x80340009,ERROR_NDIS_MULTICAST_EXISTS = 0x8034000A,ERROR_NDIS_MULTICAST_NOT_FOUND = 0x8034000B,ERROR_NDIS_REQUEST_ABORTED = 0x8034000C,ERROR_NDIS_RESET_IN_PROGRESS = 0x8034000D,ERROR_NDIS_NOT_SUPPORTED = 0x803400BB,ERROR_NDIS_INVALID_PACKET = 0x8034000F,ERROR_NDIS_ADAPTER_NOT_READY = 0x80340011,ERROR_NDIS_INVALID_LENGTH = 0x80340014,ERROR_NDIS_INVALID_DATA = 0x80340015,ERROR_NDIS_BUFFER_TOO_SHORT = 0x80340016,ERROR_NDIS_INVALID_OID = 0x80340017,ERROR_NDIS_ADAPTER_REMOVED = 0x80340018,ERROR_NDIS_UNSUPPORTED_MEDIA = 0x80340019,ERROR_NDIS_GROUP_ADDRESS_IN_USE = 0x8034001A,ERROR_NDIS_FILE_NOT_FOUND = 0x8034001B,ERROR_NDIS_ERROR_READING_FILE = 0x8034001C,ERROR_NDIS_ALREADY_MAPPED = 0x8034001D,ERROR_NDIS_RESOURCE_CONFLICT = 0x8034001E,ERROR_NDIS_MEDIA_DISCONNECTED = 0x8034001F,ERROR_NDIS_INVALID_ADDRESS = 0x80340022,ERROR_NDIS_INVALID_DEVICE_REQUEST = 0x80340010,ERROR_NDIS_PAUSED = 0x8034002A,ERROR_NDIS_INTERFACE_NOT_FOUND = 0x8034002B,ERROR_NDIS_UNSUPPORTED_REVISION = 0x8034002C,ERROR_NDIS_INVALID_PORT = 0x8034002D,ERROR_NDIS_INVALID_PORT_STATE = 0x8034002E,ERROR_NDIS_LOW_POWER_STATE = 0x8034002F,ERROR_NDIS_REINIT_REQUIRED = 0x80340030,ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED = 0x80342000,ERROR_NDIS_DOT11_MEDIA_IN_USE = 0x80342001,ERROR_NDIS_DOT11_POWER_STATE_INVALID = 0x80342002,ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL = 0x80342003,ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL = 0x80342004,ERROR_NDIS_INDICATION_REQUIRED = 0x340001,ERROR_NDIS_OFFLOAD_POLICY = 0xC034100F,ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED = 0xC0341012,ERROR_NDIS_OFFLOAD_PATH_REJECTED = 0xC0341013,ERROR_HV_INVALID_HYPERCALL_CODE = 0xC0350002,ERROR_HV_INVALID_HYPERCALL_INPUT = 0xC0350003,ERROR_HV_INVALID_ALIGNMENT = 0xC0350004,ERROR_HV_INVALID_PARAMETER = 0xC0350005,ERROR_HV_ACCESS_DENIED = 0xC0350006,ERROR_HV_INVALID_PARTITION_STATE = 0xC0350007,ERROR_HV_OPERATION_DENIED = 0xC0350008,ERROR_HV_UNKNOWN_PROPERTY = 0xC0350009,ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE = 0xC035000A,ERROR_HV_INSUFFICIENT_MEMORY = 0xC035000B,ERROR_HV_PARTITION_TOO_DEEP = 0xC035000C,ERROR_HV_INVALID_PARTITION_ID = 0xC035000D,ERROR_HV_INVALID_VP_INDEX = 0xC035000E,ERROR_HV_INVALID_PORT_ID = 0xC0350011,ERROR_HV_INVALID_CONNECTION_ID = 0xC0350012,ERROR_HV_INSUFFICIENT_BUFFERS = 0xC0350013,ERROR_HV_NOT_ACKNOWLEDGED = 0xC0350014,ERROR_HV_ACKNOWLEDGED = 0xC0350016,ERROR_HV_INVALID_SAVE_RESTORE_STATE = 0xC0350017,ERROR_HV_INVALID_SYNIC_STATE = 0xC0350018,ERROR_HV_OBJECT_IN_USE = 0xC0350019,ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO = 0xC035001A,ERROR_HV_NO_DATA = 0xC035001B,ERROR_HV_INACTIVE = 0xC035001C,ERROR_HV_NO_RESOURCES = 0xC035001D,ERROR_HV_FEATURE_UNAVAILABLE = 0xC035001E,ERROR_HV_INSUFFICIENT_DEVICE_DOMAINS = 0xC0350038,ERROR_HV_INVALID_LP_INDEX = 0xC0350041,ERROR_HV_NOT_PRESENT = 0xC0351000,ERROR_VID_DUPLICATE_HANDLER = 0xC0370001,ERROR_VID_TOO_MANY_HANDLERS = 0xC0370002,ERROR_VID_QUEUE_FULL = 0xC0370003,ERROR_VID_HANDLER_NOT_PRESENT = 0xC0370004,ERROR_VID_INVALID_OBJECT_NAME = 0xC0370005,ERROR_VID_PARTITION_NAME_TOO_LONG = 0xC0370006,ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG = 0xC0370007,ERROR_VID_PARTITION_ALREADY_EXISTS = 0xC0370008,ERROR_VID_PARTITION_DOES_NOT_EXIST = 0xC0370009,ERROR_VID_PARTITION_NAME_NOT_FOUND = 0xC037000A,ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS = 0xC037000B,ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT = 0xC037000C,ERROR_VID_MB_STILL_REFERENCED = 0xC037000D,ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED = 0xC037000E,ERROR_VID_INVALID_NUMA_SETTINGS = 0xC037000F,ERROR_VID_INVALID_NUMA_NODE_INDEX = 0xC0370010,ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED = 0xC0370011,ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE = 0xC0370012,ERROR_VID_PAGE_RANGE_OVERFLOW = 0xC0370013,ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE = 0xC0370014,ERROR_VID_INVALID_GPA_RANGE_HANDLE = 0xC0370015,ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE = 0xC0370016,ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED = 0xC0370017,ERROR_VID_INVALID_PPM_HANDLE = 0xC0370018,ERROR_VID_MBPS_ARE_LOCKED = 0xC0370019,ERROR_VID_MESSAGE_QUEUE_CLOSED = 0xC037001A,ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED = 0xC037001B,ERROR_VID_STOP_PENDING = 0xC037001C,ERROR_VID_INVALID_PROCESSOR_STATE = 0xC037001D,ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT = 0xC037001E,ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED = 0xC037001F,ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET = 0xC0370020,ERROR_VID_MMIO_RANGE_DESTROYED = 0xC0370021,ERROR_VID_INVALID_CHILD_GPA_PAGE_SET = 0xC0370022,ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED = 0xC0370023,ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL = 0xC0370024,ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE = 0xC0370025,ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT = 0xC0370026,ERROR_VID_SAVED_STATE_CORRUPT = 0xC0370027,ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM = 0xC0370028,ERROR_VID_SAVED_STATE_INCOMPATIBLE = 0xC0370029,ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED = 0x80370001,ERROR_VOLMGR_INCOMPLETE_REGENERATION = 0x80380001,ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION = 0x80380002,ERROR_VOLMGR_DATABASE_FULL = 0xC0380001,ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED = 0xC0380002,ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC = 0xC0380003,ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED = 0xC0380004,ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME = 0xC0380005,ERROR_VOLMGR_DISK_DUPLICATE = 0xC0380006,ERROR_VOLMGR_DISK_DYNAMIC = 0xC0380007,ERROR_VOLMGR_DISK_ID_INVALID = 0xC0380008,ERROR_VOLMGR_DISK_INVALID = 0xC0380009,ERROR_VOLMGR_DISK_LAST_VOTER = 0xC038000A,ERROR_VOLMGR_DISK_LAYOUT_INVALID = 0xC038000B,ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS = 0xC038000C,ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED = 0xC038000D,ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL = 0xC038000E,ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS = 0xC038000F,ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS = 0xC0380010,ERROR_VOLMGR_DISK_MISSING = 0xC0380011,ERROR_VOLMGR_DISK_NOT_EMPTY = 0xC0380012,ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE = 0xC0380013,ERROR_VOLMGR_DISK_REVECTORING_FAILED = 0xC0380014,ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID = 0xC0380015,ERROR_VOLMGR_DISK_SET_NOT_CONTAINED = 0xC0380016,ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS = 0xC0380017,ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES = 0xC0380018,ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED = 0xC0380019,ERROR_VOLMGR_EXTENT_ALREADY_USED = 0xC038001A,ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS = 0xC038001B,ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION = 0xC038001C,ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED = 0xC038001D,ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION = 0xC038001E,ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH = 0xC038001F,ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED = 0xC0380020,ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID = 0xC0380021,ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS = 0xC0380022,ERROR_VOLMGR_MEMBER_IN_SYNC = 0xC0380023,ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE = 0xC0380024,ERROR_VOLMGR_MEMBER_INDEX_INVALID = 0xC0380025,ERROR_VOLMGR_MEMBER_MISSING = 0xC0380026,ERROR_VOLMGR_MEMBER_NOT_DETACHED = 0xC0380027,ERROR_VOLMGR_MEMBER_REGENERATING = 0xC0380028,ERROR_VOLMGR_ALL_DISKS_FAILED = 0xC0380029,ERROR_VOLMGR_NO_REGISTERED_USERS = 0xC038002A,ERROR_VOLMGR_NO_SUCH_USER = 0xC038002B,ERROR_VOLMGR_NOTIFICATION_RESET = 0xC038002C,ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID = 0xC038002D,ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID = 0xC038002E,ERROR_VOLMGR_PACK_DUPLICATE = 0xC038002F,ERROR_VOLMGR_PACK_ID_INVALID = 0xC0380030,ERROR_VOLMGR_PACK_INVALID = 0xC0380031,ERROR_VOLMGR_PACK_NAME_INVALID = 0xC0380032,ERROR_VOLMGR_PACK_OFFLINE = 0xC0380033,ERROR_VOLMGR_PACK_HAS_QUORUM = 0xC0380034,ERROR_VOLMGR_PACK_WITHOUT_QUORUM = 0xC0380035,ERROR_VOLMGR_PARTITION_STYLE_INVALID = 0xC0380036,ERROR_VOLMGR_PARTITION_UPDATE_FAILED = 0xC0380037,ERROR_VOLMGR_PLEX_IN_SYNC = 0xC0380038,ERROR_VOLMGR_PLEX_INDEX_DUPLICATE = 0xC0380039,ERROR_VOLMGR_PLEX_INDEX_INVALID = 0xC038003A,ERROR_VOLMGR_PLEX_LAST_ACTIVE = 0xC038003B,ERROR_VOLMGR_PLEX_MISSING = 0xC038003C,ERROR_VOLMGR_PLEX_REGENERATING = 0xC038003D,ERROR_VOLMGR_PLEX_TYPE_INVALID = 0xC038003E,ERROR_VOLMGR_PLEX_NOT_RAID5 = 0xC038003F,ERROR_VOLMGR_PLEX_NOT_SIMPLE = 0xC0380040,ERROR_VOLMGR_STRUCTURE_SIZE_INVALID = 0xC0380041,ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS = 0xC0380042,ERROR_VOLMGR_TRANSACTION_IN_PROGRESS = 0xC0380043,ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE = 0xC0380044,ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK = 0xC0380045,ERROR_VOLMGR_VOLUME_ID_INVALID = 0xC0380046,ERROR_VOLMGR_VOLUME_LENGTH_INVALID = 0xC0380047,ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE = 0xC0380048,ERROR_VOLMGR_VOLUME_NOT_MIRRORED = 0xC0380049,ERROR_VOLMGR_VOLUME_NOT_RETAINED = 0xC038004A,ERROR_VOLMGR_VOLUME_OFFLINE = 0xC038004B,ERROR_VOLMGR_VOLUME_RETAINED = 0xC038004C,ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID = 0xC038004D,ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE = 0xC038004E,ERROR_VOLMGR_BAD_BOOT_DISK = 0xC038004F,ERROR_VOLMGR_PACK_CONFIG_OFFLINE = 0xC0380050,ERROR_VOLMGR_PACK_CONFIG_ONLINE = 0xC0380051,ERROR_VOLMGR_NOT_PRIMARY_PACK = 0xC0380052,ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED = 0xC0380053,ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID = 0xC0380054,ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID = 0xC0380055,ERROR_VOLMGR_VOLUME_MIRRORED = 0xC0380056,ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED = 0xC0380057,ERROR_VOLMGR_NO_VALID_LOG_COPIES = 0xC0380058,ERROR_VOLMGR_PRIMARY_PACK_PRESENT = 0xC0380059,ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID = 0xC038005A,ERROR_VOLMGR_MIRROR_NOT_SUPPORTED = 0xC038005B,ERROR_VOLMGR_RAID5_NOT_SUPPORTED = 0xC038005C,ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED = 0x80390001,ERROR_BCD_TOO_MANY_ELEMENTS = 0xC0390002,ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED = 0x80390003,ERROR_VHD_DRIVE_FOOTER_MISSING = 0xC03A0001,ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH = 0xC03A0002,ERROR_VHD_DRIVE_FOOTER_CORRUPT = 0xC03A0003,ERROR_VHD_FORMAT_UNKNOWN = 0xC03A0004,ERROR_VHD_FORMAT_UNSUPPORTED_VERSION = 0xC03A0005,ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH = 0xC03A0006,ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION = 0xC03A0007,ERROR_VHD_SPARSE_HEADER_CORRUPT = 0xC03A0008,ERROR_VHD_BLOCK_ALLOCATION_FAILURE = 0xC03A0009,ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT = 0xC03A000A,ERROR_VHD_INVALID_BLOCK_SIZE = 0xC03A000B,ERROR_VHD_BITMAP_MISMATCH = 0xC03A000C,ERROR_VHD_PARENT_VHD_NOT_FOUND = 0xC03A000D,ERROR_VHD_CHILD_PARENT_ID_MISMATCH = 0xC03A000E,ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH = 0xC03A000F,ERROR_VHD_METADATA_READ_FAILURE = 0xC03A0010,ERROR_VHD_METADATA_WRITE_FAILURE = 0xC03A0011,ERROR_VHD_INVALID_SIZE = 0xC03A0012,ERROR_VHD_INVALID_FILE_SIZE = 0xC03A0013,ERROR_VIRTDISK_PROVIDER_NOT_FOUND = 0xC03A0014,ERROR_VIRTDISK_NOT_VIRTUAL_DISK = 0xC03A0015,ERROR_VHD_PARENT_VHD_ACCESS_DENIED = 0xC03A0016,ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH = 0xC03A0017,ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED = 0xC03A0018,ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT = 0xC03A0019,ERROR_VIRTUAL_DISK_LIMITATION = 0xC03A001A,ERROR_VHD_INVALID_TYPE = 0xC03A001B,ERROR_VHD_INVALID_STATE = 0xC03A001C,ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE = 0xC03A001D,ERROR_VIRTDISK_DISK_ALREADY_OWNED = 0xC03A001E,ERROR_VIRTDISK_DISK_ONLINE_AND_WRITABLE = 0xC03A001F,ERROR_CTLOG_TRACKING_NOT_INITIALIZED = 0xC03A0020,ERROR_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE = 0xC03A0021,ERROR_CTLOG_VHD_CHANGED_OFFLINE = 0xC03A0022,ERROR_CTLOG_INVALID_TRACKING_STATE = 0xC03A0023,ERROR_CTLOG_INCONSISTENT_TRACKING_FILE = 0xC03A0024,ERROR_VHD_RESIZE_WOULD_TRUNCATE_DATA = 0xC03A0025,ERROR_VHD_COULD_NOT_COMPUTE_MINIMUM_VIRTUAL_SIZE = 0xC03A0026,ERROR_VHD_ALREADY_AT_OR_BELOW_MINIMUM_VIRTUAL_SIZE = 0xC03A0027,ERROR_VHD_METADATA_FULL = 0xC03A0028,ERROR_QUERY_STORAGE_ERROR = 0x803A0001,};
enum MACRO_ETH_LENGTH {ETH_LENGTH_OF_ADDRESS = 6,};
enum MACRO_EVENT_TYPE {EVENT_TYPE_MASK = 1,};
enum MACRO_EVENT_WHEA {EVENT_WHEA_INIT_OP_value = 0x5,EVENT_WHEA_ERROR_value = 0x14,EVENT_WHEA_MEMORY_OFFLINE_value = 0x1F,};
enum MACRO_EXIT_POINT {EXTRA_EXIT_POINT = 0xC00037DC,MISSING_EXIT_POINT = 0xC00037DD,};
enum MACRO_EX_RUNDOWN {EX_RUNDOWN_ACTIVE = 0x1,EX_RUNDOWN_COUNT_SHIFT = 0x1,EX_RUNDOWN_COUNT_INC = 0x2,};
enum MACRO_FILESYSTEM {FILESYSTEM_STATISTICS_TYPE_NTFS = 1,FILESYSTEM_STATISTICS_TYPE_FAT = 2,FILESYSTEM_STATISTICS_TYPE_EXFAT = 3,FILESYSTEM_STATISTICS_TYPE_REFS = 4,};
enum MACRO_FLTFL_FILE {FLTFL_FILE_NAME_PARSED_FINAL_COMPONENT = 0x1,FLTFL_FILE_NAME_PARSED_EXTENSION = 0x2,FLTFL_FILE_NAME_PARSED_STREAM = 0x4,FLTFL_FILE_NAME_PARSED_PARENT_DIR = 0x8,};
enum MACRO_FOREGROUND {FOREGROUND_BLUE = 0x1,FOREGROUND_GREEN = 0x2,FOREGROUND_RED = 0x4,FOREGROUND_INTENSITY = 0x8,};
enum MACRO_FRAME_SIZE {FRAME_SIZE_SDDV_NTSC = 120000,FRAME_SIZE_SDDV_PAL = 144000,FRAME_SIZE_HDDV_NTSC = 240000,FRAME_SIZE_HDDV_PAL = 288000,FRAME_SIZE_SDLDV_NTSC = 60000,FRAME_SIZE_SDLDV_PAL = 72000,};
enum MACRO_FRAME_TIME {FRAME_TIME_NTSC = 333667,FRAME_TIME_PAL = 400000,};
enum MACRO_FSCTL_PIPE {FSCTL_PIPE_ASSIGN_EVENT = 1114112,FSCTL_PIPE_DISCONNECT = 1114116,FSCTL_PIPE_LISTEN = 1114120,FSCTL_PIPE_PEEK = 1130508,FSCTL_PIPE_QUERY_EVENT = 1114128,FSCTL_PIPE_TRANSCEIVE = 1163287,FSCTL_PIPE_WAIT = 1114136,FSCTL_PIPE_IMPERSONATE = 1114140,FSCTL_PIPE_SET_CLIENT_PROCESS = 1114144,FSCTL_PIPE_QUERY_CLIENT_PROCESS = 1114148,FSCTL_PIPE_GET_PIPE_ATTRIBUTE = 1114152,FSCTL_PIPE_SET_PIPE_ATTRIBUTE = 1114156,FSCTL_PIPE_GET_CONNECTION_ATTRIBUTE = 1114160,FSCTL_PIPE_SET_CONNECTION_ATTRIBUTE = 1114164,FSCTL_PIPE_GET_HANDLE_ATTRIBUTE = 1114168,FSCTL_PIPE_SET_HANDLE_ATTRIBUTE = 1114172,FSCTL_PIPE_FLUSH = 1146944,FSCTL_PIPE_INTERNAL_READ = 1138676,FSCTL_PIPE_INTERNAL_WRITE = 1155064,FSCTL_PIPE_INTERNAL_TRANSCEIVE = 1171455,FSCTL_PIPE_INTERNAL_READ_OVFLOW = 1138688,};
enum MACRO_GET_SINGLE {GET_SINGLE_POLICY_IN_Type_ID = 2,GET_SINGLE_POLICY_OUT_Status_ID = 1,GET_SINGLE_POLICY_OUT_Value_ID = 3,};
enum MACRO_HARDWARE_A {HARDWARE_A = 30,HARDWARE_B = 31,};
enum MACRO_HORIZONTAL {HORIZONTAL_WHEEL_PRESENT = 0x8000,};
enum MACRO_HYPERVISOR {HYPERVISOR_ERROR = 0x20001,WINLOGON_FATAL_ERROR = 0xC000021A,};
enum MACRO_INDICATION {INDICATION_PAIR_DEVICE = 0x1,INDICATION_UNPAIR_DEVICE = 0x2,INDICATION_UNPERSONALIZE_DEVICE = 0x4,INDICATION_LE_DEVICE = 0x10000,};
enum MACRO_INVALID_IO {INVALID_IO_BOOST_STATE = 0x13C,};
enum MACRO_INVALID_PF {INVALID_PF_IF_INDEX = 0xFFFFFFFF,};
enum MACRO_IOCTL_1394 {IOCTL_1394_CLASS = 0x22021D,};
enum MACRO_IOCTL_ACPI {IOCTL_ACPI_ASYNC_EVAL_METHOD = 3325952,IOCTL_ACPI_EVAL_METHOD = 3325956,IOCTL_ACPI_ACQUIRE_GLOBAL_LOCK = 3325968,IOCTL_ACPI_RELEASE_GLOBAL_LOCK = 3325972,IOCTL_ACPI_EVAL_METHOD_EX = 3325976,IOCTL_ACPI_ASYNC_EVAL_METHOD_EX = 3325980,IOCTL_ACPI_ENUM_CHILDREN = 3325984,IOCTL_ACPI_GET_DEVICE_INFORMATION = 3325992,};
enum MACRO_IOCTL_BTHX {IOCTL_BTHX_GET_VERSION = 0x410403,IOCTL_BTHX_SET_VERSION = 0x410407,IOCTL_BTHX_QUERY_CAPABILITIES = 0x41040B,IOCTL_BTHX_WRITE_HCI = 0x41040F,IOCTL_BTHX_READ_HCI = 0x410413,};
enum MACRO_IOCTL_DISK {IOCTL_DISK_BASE = 7,IOCTL_DISK_GET_DRIVE_GEOMETRY = 458752,IOCTL_DISK_GET_PARTITION_INFO = 475140,IOCTL_DISK_SET_PARTITION_INFO = 507912,IOCTL_DISK_GET_DRIVE_LAYOUT = 475148,IOCTL_DISK_SET_DRIVE_LAYOUT = 507920,IOCTL_DISK_VERIFY = 458772,IOCTL_DISK_FORMAT_TRACKS = 507928,IOCTL_DISK_REASSIGN_BLOCKS = 507932,IOCTL_DISK_PERFORMANCE = 458784,IOCTL_DISK_IS_WRITABLE = 458788,IOCTL_DISK_LOGGING = 458792,IOCTL_DISK_FORMAT_TRACKS_EX = 507948,IOCTL_DISK_HISTOGRAM_STRUCTURE = 458800,IOCTL_DISK_HISTOGRAM_DATA = 458804,IOCTL_DISK_HISTOGRAM_RESET = 458808,IOCTL_DISK_REQUEST_STRUCTURE = 458812,IOCTL_DISK_REQUEST_DATA = 458816,IOCTL_DISK_PERFORMANCE_OFF = 458848,IOCTL_DISK_CONTROLLER_NUMBER = 458820,};
enum MACRO_IOCTL_DOT4 {IOCTL_DOT4_USER_BASE = 2049,IOCTL_DOT4_LAST = 2058,IOCTL_DOT4_CREATE_SOCKET = 3809314,IOCTL_DOT4_DESTROY_SOCKET = 3809322,IOCTL_DOT4_WAIT_FOR_CHANNEL = 3809318,IOCTL_DOT4_OPEN_CHANNEL = 3809286,IOCTL_DOT4_CLOSE_CHANNEL = 3809288,IOCTL_DOT4_READ = 3809294,IOCTL_DOT4_WRITE = 3809297,IOCTL_DOT4_ADD_ACTIVITY_BROADCAST = 3809300,IOCTL_DOT4_REMOVE_ACTIVITY_BROADCAST = 3809304,IOCTL_DOT4_WAIT_ACTIVITY_BROADCAST = 3809310,};
enum MACRO_IOCTL_NDIS {IOCTL_NDIS_QUERY_GLOBAL_STATS = 1507330,IOCTL_NDIS_QUERY_ALL_STATS = 1507334,IOCTL_NDIS_DO_PNP_OPERATION = 1507336,IOCTL_NDIS_QUERY_SELECTED_STATS = 1507342,IOCTL_NDIS_ENUMERATE_INTERFACES = 1507344,IOCTL_NDIS_ADD_TDI_DEVICE = 1507348,IOCTL_NDIS_GET_LOG_DATA = 1507358,IOCTL_NDIS_GET_VERSION = 1507360,IOCTL_NDIS_RESERVED1 = 1507364,IOCTL_NDIS_RESERVED2 = 1507368,IOCTL_NDIS_RESERVED3 = 1507372,IOCTL_NDIS_RESERVED4 = 1507376,IOCTL_NDIS_RESERVED5 = 1507380,IOCTL_NDIS_RESERVED6 = 1540152,IOCTL_NDIS_RESERVED7 = 1507390,IOCTL_NDIS_RESERVED8 = 1507392,IOCTL_NDIS_RESERVED9 = 1507396,IOCTL_NDIS_RESERVED10 = 1507400,IOCTL_NDIS_RESERVED11 = 1507404,IOCTL_NDIS_RESERVED12 = 1507408,IOCTL_NDIS_RESERVED13 = 1507412,IOCTL_NDIS_RESERVED14 = 1507416,IOCTL_NDIS_RESERVED15 = 1507420,IOCTL_NDIS_RESERVED16 = 1507424,IOCTL_NDIS_RESERVED17 = 1507428,IOCTL_NDIS_RESERVED18 = 1507432,IOCTL_NDIS_RESERVED19 = 1507436,IOCTL_NDIS_RESERVED20 = 1507440,IOCTL_NDIS_RESERVED21 = 1507444,IOCTL_NDIS_RESERVED22 = 1507448,IOCTL_NDIS_RESERVED23 = 1507452,IOCTL_NDIS_RESERVED24 = 1507456,IOCTL_NDIS_RESERVED25 = 1507460,IOCTL_NDIS_RESERVED26 = 1507464,IOCTL_NDIS_RESERVED27 = 1507468,IOCTL_NDIS_RESERVED28 = 1507472,IOCTL_NDIS_RESERVED29 = 1507476,IOCTL_NDIS_RESERVED30 = 1507480,};
enum MACRO_IOCTL_SCSI {IOCTL_SCSI_EXECUTE_IN = 1769489,IOCTL_SCSI_EXECUTE_OUT = 1769490,IOCTL_SCSI_EXECUTE_NONE = 1769491,IOCTL_SCSI_MINIPORT_SMART_VERSION = 1770752,IOCTL_SCSI_MINIPORT_IDENTIFY = 1770753,IOCTL_SCSI_MINIPORT_READ_SMART_ATTRIBS = 1770754,IOCTL_SCSI_MINIPORT_READ_SMART_THRESHOLDS = 1770755,IOCTL_SCSI_MINIPORT_ENABLE_SMART = 1770756,IOCTL_SCSI_MINIPORT_DISABLE_SMART = 1770757,IOCTL_SCSI_MINIPORT_RETURN_STATUS = 1770758,IOCTL_SCSI_MINIPORT_ENABLE_DISABLE_AUTOSAVE = 1770759,IOCTL_SCSI_MINIPORT_SAVE_ATTRIBUTE_VALUES = 1770760,IOCTL_SCSI_MINIPORT_EXECUTE_OFFLINE_DIAGS = 1770761,IOCTL_SCSI_MINIPORT_ENABLE_DISABLE_AUTO_OFFLINE = 1770762,IOCTL_SCSI_MINIPORT_READ_SMART_LOG = 1770763,IOCTL_SCSI_MINIPORT_WRITE_SMART_LOG = 1770764,IOCTL_SCSI_MINIPORT_DSM = 1771296,IOCTL_SCSI_MINIPORT_NOT_QUORUM_CAPABLE = 1770784,IOCTL_SCSI_MINIPORT_NOT_CLUSTER_CAPABLE = 1770785,};
enum MACRO_IOCTL_TAPE {IOCTL_TAPE_BASE = 31,IOCTL_TAPE_ERASE = 2080768,IOCTL_TAPE_PREPARE = 2048004,IOCTL_TAPE_WRITE_MARKS = 2080776,IOCTL_TAPE_GET_POSITION = 2048012,IOCTL_TAPE_SET_POSITION = 2048016,IOCTL_TAPE_GET_DRIVE_PARAMS = 2048020,IOCTL_TAPE_SET_DRIVE_PARAMS = 2080792,IOCTL_TAPE_GET_MEDIA_PARAMS = 2048028,IOCTL_TAPE_SET_MEDIA_PARAMS = 2048032,IOCTL_TAPE_GET_STATUS = 2048036,IOCTL_TAPE_CREATE_PARTITION = 2080808,IOCTL_TAPE_MEDIA_REMOVAL = 2050052,IOCTL_TAPE_EJECT_MEDIA = 2050056,IOCTL_TAPE_LOAD_MEDIA = 2050060,IOCTL_TAPE_RESERVE = 2050064,IOCTL_TAPE_RELEASE = 2050068,};
enum MACRO_IOCTL_VPCI {IOCTL_VPCI_INVALIDATE_BLOCK = 0x2AC007,IOCTL_VPCI_READ_BLOCK = 0x2AC00B,IOCTL_VPCI_WRITE_BLOCK = 0x2AC00F,};
enum MACRO_IO_REPARSE {IO_REPARSE_TAG_RESERVED_ZERO = 0,IO_REPARSE_TAG_RESERVED_ONE = 1,IO_REPARSE_TAG_RESERVED_RANGE = 1,IO_REPARSE_TAG_VALID_VALUES = -268369921,IO_REPARSE_TAG_MOUNT_POINT = -1610612733,IO_REPARSE_TAG_HSM = -1073741820,IO_REPARSE_TAG_DRIVE_EXTENDER = -2147483643,IO_REPARSE_TAG_HSM2 = -2147483642,IO_REPARSE_TAG_SIS = -2147483641,IO_REPARSE_TAG_WIM = -2147483640,IO_REPARSE_TAG_CSV = -2147483639,IO_REPARSE_TAG_DFS = -2147483638,IO_REPARSE_TAG_FILTER_MANAGER = -2147483637,IO_REPARSE_TAG_SYMLINK = -1610612724,IO_REPARSE_TAG_IIS_CACHE = -1610612720,IO_REPARSE_TAG_DFSR = -2147483630,IO_REPARSE_TAG_DEDUP = -2147483629,IO_REPARSE_TAG_APPXSTRM = -1073741804,IO_REPARSE_TAG_NFS = -2147483628,IO_REPARSE_TAG_IFSTEST_CONGRUENT = 9,IO_REPARSE_TAG_MOONWALK_HSM = 10,IO_REPARSE_TAG_TSINGHUA_UNIVERSITY_RESEARCH = 11,IO_REPARSE_TAG_ARKIVIO = 12,IO_REPARSE_TAG_SOLUTIONSOFT = 536870925,IO_REPARSE_TAG_COMMVAULT = 14,IO_REPARSE_TAG_OVERTONE = 15,IO_REPARSE_TAG_SYMANTEC_HSM2 = 16,IO_REPARSE_TAG_ENIGMA_HSM = 17,IO_REPARSE_TAG_SYMANTEC_HSM = 18,IO_REPARSE_TAG_INTERCOPE_HSM = 19,IO_REPARSE_TAG_KOM_NETWORKS_HSM = 20,IO_REPARSE_TAG_MEMORY_TECH_HSM = 21,IO_REPARSE_TAG_BRIDGEHEAD_HSM = 22,IO_REPARSE_TAG_OSR_SAMPLE = 536870935,IO_REPARSE_TAG_GLOBAL360_HSM = 24,IO_REPARSE_TAG_ALTIRIS_HSM = 25,IO_REPARSE_TAG_HERMES_HSM = 26,IO_REPARSE_TAG_POINTSOFT_HSM = 27,IO_REPARSE_TAG_GRAU_DATASTORAGE_HSM = 28,IO_REPARSE_TAG_COMMVAULT_HSM = 29,IO_REPARSE_TAG_DATASTOR_SIS = 30,IO_REPARSE_TAG_EDSI_HSM = 31,IO_REPARSE_TAG_HP_HSM = 32,IO_REPARSE_TAG_SER_HSM = 33,IO_REPARSE_TAG_DOUBLE_TAKE_HSM = 34,IO_REPARSE_TAG_WISDATA_HSM = 35,IO_REPARSE_TAG_MIMOSA_HSM = 36,IO_REPARSE_TAG_HSAG_HSM = 37,IO_REPARSE_TAG_ADA_HSM = 38,IO_REPARSE_TAG_AUTN_HSM = 39,IO_REPARSE_TAG_NEXSAN_HSM = 40,IO_REPARSE_TAG_DOUBLE_TAKE_SIS = 41,IO_REPARSE_TAG_SONY_HSM = 42,IO_REPARSE_TAG_ELTAN_HSM = 43,IO_REPARSE_TAG_UTIXO_HSM = 44,IO_REPARSE_TAG_QUEST_HSM = 45,IO_REPARSE_TAG_DATAGLOBAL_HSM = 46,IO_REPARSE_TAG_QI_TECH_HSM = 536870959,IO_REPARSE_TAG_DATAFIRST_HSM = 48,IO_REPARSE_TAG_C2CSYSTEMS_HSM = 49,IO_REPARSE_TAG_WATERFORD = 50,IO_REPARSE_TAG_RIVERBED_HSM = 51,IO_REPARSE_TAG_CARINGO_HSM = 52,IO_REPARSE_TAG_MAXISCALE_HSM = 536870965,IO_REPARSE_TAG_CITRIX_PM = 54,IO_REPARSE_TAG_OPENAFS_DFS = 55,IO_REPARSE_TAG_ZLTI_HSM = 56,IO_REPARSE_TAG_EMC_HSM = 57,IO_REPARSE_TAG_VMWARE_PM = 58,IO_REPARSE_TAG_ARCO_BACKUP = 59,IO_REPARSE_TAG_CARROLL_HSM = 60,};
enum MACRO_IO_SESSION {IO_SESSION_STATE_ALL_EVENTS = 0xFFFFFFFF,IO_SESSION_STATE_CREATION_EVENT = 0x1,IO_SESSION_STATE_TERMINATION_EVENT = 0x2,IO_SESSION_STATE_CONNECT_EVENT = 0x4,IO_SESSION_STATE_DISCONNECT_EVENT = 0x8,IO_SESSION_STATE_LOGON_EVENT = 0x10,IO_SESSION_STATE_LOGOFF_EVENT = 0x20,IO_SESSION_STATE_VALID_EVENT_MASK = 0x3F,IO_SESSION_MAX_PAYLOAD_SIZE = 0x100,};
enum MACRO_IO_WARNING {IO_WARNING_RESET = 0x80040081,IO_CDROM_EXCLUSIVE_LOCK = 0x40040085,IO_LOST_DELAYED_WRITE_NETWORK_DISCONNECTED = 0x8004008B,IO_LOST_DELAYED_WRITE_NETWORK_SERVER_ERROR = 0x8004008C,IO_LOST_DELAYED_WRITE_NETWORK_LOCAL_DISK_ERROR = 0x8004008D,};
enum MACRO_IP_OPTIONS {IP_OPTIONS = 1,IP_HDRINCL = 2,IP_TOS = 3,IP_TTL = 4,IP_MULTICAST_IF = 9,IP_MULTICAST_TTL = 10,IP_MULTICAST_LOOP = 11,IP_ADD_MEMBERSHIP = 12,IP_DROP_MEMBERSHIP = 13,IP_DONTFRAGMENT = 14,IP_ADD_SOURCE_MEMBERSHIP = 15,IP_DROP_SOURCE_MEMBERSHIP = 16,IP_BLOCK_SOURCE = 17,IP_UNBLOCK_SOURCE = 18,IP_PKTINFO = 19,IP_HOPLIMIT = 21,IP_RECEIVE_BROADCAST = 22,IP_RECVIF = 24,IP_RECVDSTADDR = 25,IP_IFLIST = 28,IP_ADD_IFLIST = 29,IP_DEL_IFLIST = 30,IP_UNICAST_IF = 31,IP_RTHDR = 32,IP_RECVRTHDR = 38,IP_TCLASS = 39,IP_RECVTCLASS = 40,IP_ORIGINAL_ARRIVAL_IF = 47,IP_ECN = 50,IP_PKTINFO_EX = 51,IP_WFP_REDIRECT_RECORDS = 60,IP_WFP_REDIRECT_CONTEXT = 70,IP_UNSPECIFIED_TYPE_OF_SERVICE = -1,};
enum MACRO_IRB_STATUS {IRB_STATUS_PENDING = 0x0,IRB_STATUS_SUCCESS = 0x1,IRB_STATUS_DATALENGTH_MISMATCH = 0x2,IRB_STATUS_DEVICE_ERROR = 0x3,IRB_STATUS_INVALID_REQUEST = 0x4,IRB_STATUS_BUS_RESET = 0x5,IRB_STATUS_SELECTION_TIMEOUT = 0x6,IRB_STATUS_BUSY = 0x7,IRB_STATUS_RETURN_TASKFILE_VALID = 0x10,IRB_STATUS_AUTOSENSE_VALID = 0x20,IRB_STATUS_INTERNAL_ERROR = 0x40,IRB_STATUS_FORCE_ENUM_DEVICE1_NEEDED = 0x80,IRB_FUNCTION_ATA_COMMAND = 0x100,IRB_FUNCTION_ATA_IDENTIFY = 0x101,IRB_FUNCTION_ATA_READ = 0x102,IRB_FUNCTION_ATA_WRITE = 0x103,IRB_FUNCTION_ATA_FLUSH = 0x104,IRB_FUNCTION_ATA_SMART = 0x105,IRB_FUNCTION_ATA_GPLOG = 0x106,IRB_FUNCTION_ATAPI_COMMAND = 0x200,IRB_FUNCTION_REQUEST_SENSE = 0x201,IRB_FUNCTION_MINIPORT_COMMAND = 0x400,IRB_FUNCTION_ADAPTER_FLUSH = 0x401,IRB_FUNCTION_SHUTDOWN = 0x402,IRB_FUNCTION_POWER_CHANGE = 0x403,IRB_FUNCTION_LUN_RESET = 0x404,IRB_FUNCTION_MINIPORT_IOCTL = 0x405,IRB_FUNCTION_POWER_REBOOT = 0x406,IRB_FLAGS_DRDY_REQUIRED = 0x1,IRB_FLAGS_USE_DMA = 0x2,IRB_FLAGS_MAP_BUFFERS = 0x4,IRB_FLAGS_48BIT = 0x8,IRB_FLAGS_PIO_MULTIPLE = 0x10,IRB_FLAGS_RETURN_RESULTS = 0x20,IRB_FLAGS_DATA_IN = 0x40,IRB_FLAGS_DATA_OUT = 0x80,IRB_FLAGS_DISCARDABLE = 0x100,IRB_FLAGS_HIGH_PRIORITY = 0x200,IRB_FLAGS_FORCE_ENUM_DEVICE1 = 0x400,};
enum MACRO_IRP_MN_BUS {IRP_MN_BUS_RESET = 0x87,};
enum MACRO_ISCSI_Path {ISCSI_Path_UniqueConnectionId_ID = 1,ISCSI_Path_EstimatedLinkSpeed_ID = 2,ISCSI_Path_PathWeight_ID = 3,ISCSI_Path_PrimaryPath_ID = 4,};
enum MACRO_KERNEL_WMI {KERNEL_WMI_INTERNAL = 0x14A,};
enum MACRO_KSDISPATCH {KSDISPATCH_FASTIO = 0x80000000,};
enum MACRO_KSINSTANCE {KSINSTANCE_INDETERMINATE = 4294967295,};
enum MACRO_KSPRIORITY {KSPRIORITY_LOW = 0x1,KSPRIORITY_NORMAL = 0x40000000,KSPRIORITY_HIGH = 0x80000000,KSPRIORITY_EXCLUSIVE = 0xFFFFFFFF,};
enum MACRO_KSPROPERTY {KSPROPERTY_TYPE_GET = 0x1,KSPROPERTY_TYPE_SET = 0x2,KSPROPERTY_TYPE_SETSUPPORT = 0x100,KSPROPERTY_TYPE_BASICSUPPORT = 0x200,KSPROPERTY_TYPE_RELATIONS = 0x400,KSPROPERTY_TYPE_SERIALIZESET = 0x800,KSPROPERTY_TYPE_UNSERIALIZESET = 0x1000,KSPROPERTY_TYPE_SERIALIZERAW = 0x2000,KSPROPERTY_TYPE_UNSERIALIZERAW = 0x4000,KSPROPERTY_TYPE_SERIALIZESIZE = 0x8000,KSPROPERTY_TYPE_DEFAULTVALUES = 0x10000,KSPROPERTY_TYPE_TOPOLOGY = 0x10000000,KSPROPERTY_TYPE_HIGHPRIORITY = 0x8000000,KSPROPERTY_MEMBER_RANGES = 0x1,KSPROPERTY_MEMBER_STEPPEDRANGES = 0x2,KSPROPERTY_MEMBER_VALUES = 0x3,KSPROPERTY_MEMBER_FLAG_DEFAULT = 0x1,KSPROPERTY_MEMBER_FLAG_BASICSUPPORT_MULTICHANNEL = 0x2,KSPROPERTY_MEMBER_FLAG_BASICSUPPORT_UNIFORM = 0x4,};
enum MACRO_KS_TVAUDIO {KS_TVAUDIO_MODE_MONO = 0x1,KS_TVAUDIO_MODE_STEREO = 0x2,KS_TVAUDIO_MODE_LANG_A = 0x10,KS_TVAUDIO_MODE_LANG_B = 0x20,KS_TVAUDIO_MODE_LANG_C = 0x40,KS_TVAUDIO_PRESET_STEREO = 0x200,KS_TVAUDIO_PRESET_LANG_A = 0x1000,KS_TVAUDIO_PRESET_LANG_B = 0x2000,KS_TVAUDIO_PRESET_LANG_C = 0x4000,};
enum MACRO_L2CAP_FLOW {L2CAP_FLOW_SERVICE_TYPE_NOTRAFFIC = 0,L2CAP_FLOW_SERVICE_TYPE_BESTEFFORT = 1,L2CAP_FLOW_SERVICE_TYPE_GUARANTEED = 2,};
enum MACRO_LDBL_RADIX {LDBL_RADIX = 2,LDBL_ROUNDS = 1,};
enum MACRO_LONG_LEAST {LONG_LEAST_SIGNIFICANT_BIT = 0,LONG_3RD_MOST_SIGNIFICANT_BIT = 1,LONG_2ND_MOST_SIGNIFICANT_BIT = 2,LONG_MOST_SIGNIFICANT_BIT = 3,};
enum MACRO_LONG_NAMES {UNDERSTANDS_LONG_NAMES = 1,NO_LONG_NAMES = 2,};
enum MACRO_MAXIMUM_IP {MAXIMUM_IP_OPER_STATUS_ADDRESS_FAMILIES_SUPPORTED = 32,};
enum MACRO_MAX_HASHES {MAX_HASHES = 4,};
enum MACRO_MAX_VOLUME {MAX_VOLUME_ID_SIZE = 36,MAX_VOLUME_TEMPLATE_SIZE = 40,};
enum MACRO_MCA_EXTREG {MCA_EXTREG_V2MAX = 24,};
enum MACRO_MEDIA_LIFE {MEDIA_LIFE = 7,};
enum MACRO_MIN_BUFFER {MIN_BUFFER_SIZE = 288,};
enum MACRO_MISMATCHED {MISMATCHED_HAL = 0x79,};
enum MACRO_MM_VOXWARE {MM_VOXWARE_CODEC = 1,MM_NORTEL_MPXAC_WAVEIN = 1,MM_NORTEL_MPXAC_WAVEOUT = 2,MM_ADDX_PCTV_DIGITALMIX = 1,MM_ADDX_PCTV_WAVEIN = 2,MM_ADDX_PCTV_WAVEOUT = 3,MM_ADDX_PCTV_MIXER = 4,MM_ADDX_PCTV_AUX_CD = 5,MM_ADDX_PCTV_AUX_LINE = 6,MM_WILDCAT_AUTOSCOREMIDIIN = 1,MM_RHETOREX_WAVEIN = 1,MM_RHETOREX_WAVEOUT = 2,MM_BTV_WAVEIN = 1,MM_BTV_WAVEOUT = 2,MM_BTV_MIDIIN = 3,MM_BTV_MIDIOUT = 4,MM_BTV_MIDISYNTH = 5,MM_BTV_AUX_LINE = 6,MM_BTV_AUX_MIC = 7,MM_BTV_AUX_CD = 8,MM_BTV_DIGITALIN = 9,MM_BTV_DIGITALOUT = 10,MM_BTV_MIDIWAVESTREAM = 11,MM_BTV_MIXER = 12,MM_ENSONIQ_SOUNDSCAPE = 16,MM_SOUNDSCAPE_WAVEOUT = 17,MM_SOUNDSCAPE_WAVEOUT_AUX = 18,MM_SOUNDSCAPE_WAVEIN = 19,MM_SOUNDSCAPE_MIDIOUT = 20,MM_SOUNDSCAPE_MIDIIN = 21,MM_SOUNDSCAPE_SYNTH = 22,MM_SOUNDSCAPE_MIXER = 23,MM_SOUNDSCAPE_AUX = 24,MM_NVIDIA_WAVEOUT = 1,MM_NVIDIA_WAVEIN = 2,MM_NVIDIA_MIDIOUT = 3,MM_NVIDIA_MIDIIN = 4,MM_NVIDIA_GAMEPORT = 5,MM_NVIDIA_MIXER = 6,MM_NVIDIA_AUX = 7,MM_OKSORI_BASE = 0,MM_OKSORI_OSR8_WAVEOUT = 1,MM_OKSORI_OSR8_WAVEIN = 2,MM_OKSORI_OSR16_WAVEOUT = 3,MM_OKSORI_OSR16_WAVEIN = 4,MM_OKSORI_FM_OPL4 = 5,MM_OKSORI_MIX_MASTER = 6,MM_OKSORI_MIX_WAVE = 7,MM_OKSORI_MIX_FM = 8,MM_OKSORI_MIX_LINE = 9,MM_OKSORI_MIX_CD = 10,MM_OKSORI_MIX_MIC = 11,MM_OKSORI_MIX_ECHO = 12,MM_OKSORI_MIX_AUX1 = 13,MM_OKSORI_MIX_LINE1 = 14,MM_OKSORI_EXT_MIC1 = 15,MM_OKSORI_EXT_MIC2 = 16,MM_OKSORI_MIDIOUT = 17,MM_OKSORI_MIDIIN = 18,MM_OKSORI_MPEG_CDVISION = 19,MM_DIACOUSTICS_DRUM_ACTION = 1,MM_KAY_ELEMETRICS_CSL = 17152,MM_KAY_ELEMETRICS_CSL_DAT = 17160,MM_KAY_ELEMETRICS_CSL_4CHANNEL = 17161,MM_CRYSTAL_CS4232_WAVEIN = 1,MM_CRYSTAL_CS4232_WAVEOUT = 2,MM_CRYSTAL_CS4232_WAVEMIXER = 3,MM_CRYSTAL_CS4232_WAVEAUX_AUX1 = 4,MM_CRYSTAL_CS4232_WAVEAUX_AUX2 = 5,MM_CRYSTAL_CS4232_WAVEAUX_LINE = 6,MM_CRYSTAL_CS4232_WAVEAUX_MONO = 7,MM_CRYSTAL_CS4232_WAVEAUX_MASTER = 8,MM_CRYSTAL_CS4232_MIDIIN = 9,MM_CRYSTAL_CS4232_MIDIOUT = 10,MM_CRYSTAL_CS4232_INPUTGAIN_AUX1 = 13,MM_CRYSTAL_CS4232_INPUTGAIN_LOOP = 14,MM_CRYSTAL_SOUND_FUSION_WAVEIN = 21,MM_CRYSTAL_SOUND_FUSION_WAVEOUT = 22,MM_CRYSTAL_SOUND_FUSION_MIXER = 23,MM_CRYSTAL_SOUND_FUSION_MIDIIN = 24,MM_CRYSTAL_SOUND_FUSION_MIDIOUT = 25,MM_CRYSTAL_SOUND_FUSION_JOYSTICK = 26,MM_QUARTERDECK_LHWAVEIN = 0,MM_QUARTERDECK_LHWAVEOUT = 1,MM_TDK_MW_MIDI_SYNTH = 1,MM_TDK_MW_MIDI_IN = 2,MM_TDK_MW_MIDI_OUT = 3,MM_TDK_MW_WAVE_IN = 4,MM_TDK_MW_WAVE_OUT = 5,MM_TDK_MW_AUX = 6,MM_TDK_MW_MIXER = 10,MM_TDK_MW_AUX_MASTER = 100,MM_TDK_MW_AUX_BASS = 101,MM_TDK_MW_AUX_TREBLE = 102,MM_TDK_MW_AUX_MIDI_VOL = 103,MM_TDK_MW_AUX_WAVE_VOL = 104,MM_TDK_MW_AUX_WAVE_RVB = 105,MM_TDK_MW_AUX_WAVE_CHR = 106,MM_TDK_MW_AUX_VOL = 107,MM_TDK_MW_AUX_RVB = 108,MM_TDK_MW_AUX_CHR = 109,MM_DIGITAL_AUDIO_LABS_TC = 1,MM_DIGITAL_AUDIO_LABS_DOC = 2,MM_DIGITAL_AUDIO_LABS_V8 = 16,MM_DIGITAL_AUDIO_LABS_CPRO = 17,MM_DIGITAL_AUDIO_LABS_VP = 18,MM_DIGITAL_AUDIO_LABS_CDLX = 19,MM_DIGITAL_AUDIO_LABS_CTDIF = 20,MM_SEERSYS_SEERSYNTH = 1,MM_SEERSYS_SEERWAVE = 2,MM_SEERSYS_SEERMIX = 3,MM_SEERSYS_WAVESYNTH = 4,MM_SEERSYS_WAVESYNTH_WG = 5,MM_SEERSYS_REALITY = 6,MM_OSPREY_1000WAVEIN = 1,MM_OSPREY_1000WAVEOUT = 2,MM_SOUNDESIGNS_WAVEIN = 1,MM_SOUNDESIGNS_WAVEOUT = 2,MM_SSP_SNDFESWAVEIN = 1,MM_SSP_SNDFESWAVEOUT = 2,MM_SSP_SNDFESMIDIIN = 3,MM_SSP_SNDFESMIDIOUT = 4,MM_SSP_SNDFESSYNTH = 5,MM_SSP_SNDFESMIX = 6,MM_SSP_SNDFESAUX = 7,MM_ECS_AADF_MIDI_IN = 10,MM_ECS_AADF_MIDI_OUT = 11,MM_ECS_AADF_WAVE2MIDI_IN = 12,MM_AMD_INTERWAVE_WAVEIN = 1,MM_AMD_INTERWAVE_WAVEOUT = 2,MM_AMD_INTERWAVE_SYNTH = 3,MM_AMD_INTERWAVE_MIXER1 = 4,MM_AMD_INTERWAVE_MIXER2 = 5,MM_AMD_INTERWAVE_JOYSTICK = 6,MM_AMD_INTERWAVE_EX_CD = 7,MM_AMD_INTERWAVE_MIDIIN = 8,MM_AMD_INTERWAVE_MIDIOUT = 9,MM_AMD_INTERWAVE_AUX1 = 10,MM_AMD_INTERWAVE_AUX2 = 11,MM_AMD_INTERWAVE_AUX_MIC = 12,MM_AMD_INTERWAVE_AUX_CD = 13,MM_AMD_INTERWAVE_MONO_IN = 14,MM_AMD_INTERWAVE_MONO_OUT = 15,MM_AMD_INTERWAVE_EX_TELEPHONY = 16,MM_AMD_INTERWAVE_WAVEOUT_BASE = 17,MM_AMD_INTERWAVE_WAVEOUT_TREBLE = 18,MM_AMD_INTERWAVE_STEREO_ENHANCED = 19,MM_COREDYNAMICS_DYNAMIXHR = 1,MM_COREDYNAMICS_DYNASONIX_SYNTH = 2,MM_COREDYNAMICS_DYNASONIX_MIDI_IN = 3,MM_COREDYNAMICS_DYNASONIX_MIDI_OUT = 4,MM_COREDYNAMICS_DYNASONIX_WAVE_IN = 5,MM_COREDYNAMICS_DYNASONIX_WAVE_OUT = 6,MM_COREDYNAMICS_DYNASONIX_AUDIO_IN = 7,MM_COREDYNAMICS_DYNASONIX_AUDIO_OUT = 8,MM_COREDYNAMICS_DYNAGRAFX_VGA = 9,MM_COREDYNAMICS_DYNAGRAFX_WAVE_IN = 10,MM_COREDYNAMICS_DYNAGRAFX_WAVE_OUT = 11,MM_CANAM_CBXWAVEOUT = 1,MM_CANAM_CBXWAVEIN = 2,MM_SOFTSOUND_CODEC = 1,MM_NORRIS_VOICELINK = 1,MM_DDD_MIDILINK_MIDIIN = 1,MM_DDD_MIDILINK_MIDIOUT = 2,MM_EUPHONICS_AUX_CD = 1,MM_EUPHONICS_AUX_LINE = 2,MM_EUPHONICS_AUX_MASTER = 3,MM_EUPHONICS_AUX_MIC = 4,MM_EUPHONICS_AUX_MIDI = 5,MM_EUPHONICS_AUX_WAVE = 6,MM_EUPHONICS_FMSYNTH_MONO = 7,MM_EUPHONICS_FMSYNTH_STEREO = 8,MM_EUPHONICS_MIDIIN = 9,MM_EUPHONICS_MIDIOUT = 10,MM_EUPHONICS_MIXER = 11,MM_EUPHONICS_WAVEIN = 12,MM_EUPHONICS_WAVEOUT = 13,MM_EUPHONICS_EUSYNTH = 14,};
enum MACRO_MODE_BLOCK {MODE_BLOCK_DESC_LENGTH = 8,MODE_HEADER_LENGTH = 4,MODE_HEADER_LENGTH10 = 8,};
enum MACRO_MPEGLAYER3 {MPEGLAYER3_WFX_EXTRA_BYTES = 12,MPEGLAYER3_ID_UNKNOWN = 0,MPEGLAYER3_ID_MPEG = 1,MPEGLAYER3_ID_CONSTANTFRAMESIZE = 2,MPEGLAYER3_FLAG_PADDING_ISO = 0,MPEGLAYER3_FLAG_PADDING_ON = 1,MPEGLAYER3_FLAG_PADDING_OFF = 2,};
enum MACRO_MSAcpiInfo {MSAcpiInfo_BootArchitecture_ID = 1,MSAcpiInfo_PreferredProfile_ID = 2,MSAcpiInfo_Capabilities_ID = 3,};
enum MACRO_MSMCAEvent {MSMCAEvent_CPUError_MajorErrorType_ID = 7,MSMCAEvent_CPUError_Level_ID = 8,MSMCAEvent_CPUError_CacheOp_ID = 9,MSMCAEvent_CPUError_CacheMesi_ID = 10,MSMCAEvent_CPUError_TLBOp_ID = 11,MSMCAEvent_CPUError_BusType_ID = 12,MSMCAEvent_CPUError_BusSev_ID = 13,MSMCAEvent_CPUError_RegFileId_ID = 14,MSMCAEvent_CPUError_RegFileOp_ID = 15,MSMCAEvent_CPUError_MSSid_ID = 16,MSMCAEvent_CPUError_MSOp_ID = 17,MSMCAEvent_CPUError_MSArrayId_ID = 18,MSMCAEvent_CPUError_MSIndex_ID = 19,MSMCAEvent_CPUError_Size_ID = 20,MSMCAEvent_CPUError_RawRecord_ID = 21,MSMCAEvent_MemoryError_RecordId_ID = 1,MSMCAEvent_MemoryError_ErrorSeverity_ID = 2,MSMCAEvent_MemoryError_Type_ID = 3,MSMCAEvent_MemoryError_Cpu_ID = 4,MSMCAEvent_MemoryError_AdditionalErrors_ID = 5,MSMCAEvent_MemoryError_LogToEventlog_ID = 6,MSMCAEvent_MemoryError_VALIDATION_BITS_ID = 7,MSMCAEvent_MemoryError_MEM_ERROR_STATUS_ID = 8,MSMCAEvent_MemoryError_MEM_PHYSICAL_ADDR_ID = 9,MSMCAEvent_MemoryError_MEM_PHYSICAL_MASK_ID = 10,MSMCAEvent_MemoryError_RESPONDER_ID_ID = 11,MSMCAEvent_MemoryError_TARGET_ID_ID = 12,MSMCAEvent_MemoryError_REQUESTOR_ID_ID = 13,MSMCAEvent_MemoryError_BUS_SPECIFIC_DATA_ID = 14,MSMCAEvent_MemoryError_MEM_NODE_ID = 15,MSMCAEvent_MemoryError_MEM_CARD_ID = 16,MSMCAEvent_MemoryError_MEM_BANK_ID = 17,MSMCAEvent_MemoryError_xMEM_DEVICE_ID = 18,MSMCAEvent_MemoryError_MEM_MODULE_ID = 19,MSMCAEvent_MemoryError_MEM_ROW_ID = 20,MSMCAEvent_MemoryError_MEM_COLUMN_ID = 21,MSMCAEvent_MemoryError_MEM_BIT_POSITION_ID = 22,MSMCAEvent_MemoryError_Size_ID = 23,MSMCAEvent_MemoryError_RawRecord_ID = 24,MSMCAEvent_PCIBusError_RecordId_ID = 1,MSMCAEvent_PCIBusError_ErrorSeverity_ID = 2,MSMCAEvent_PCIBusError_Type_ID = 3,MSMCAEvent_PCIBusError_Cpu_ID = 4,MSMCAEvent_PCIBusError_AdditionalErrors_ID = 5,MSMCAEvent_PCIBusError_LogToEventlog_ID = 6,MSMCAEvent_PCIBusError_VALIDATION_BITS_ID = 7,MSMCAEvent_PCIBusError_PCI_BUS_ERROR_STATUS_ID = 8,MSMCAEvent_PCIBusError_PCI_BUS_ADDRESS_ID = 9,MSMCAEvent_PCIBusError_PCI_BUS_DATA_ID = 10,MSMCAEvent_PCIBusError_PCI_BUS_CMD_ID = 11,MSMCAEvent_PCIBusError_PCI_BUS_REQUESTOR_ID_ID = 12,MSMCAEvent_PCIBusError_PCI_BUS_RESPONDER_ID_ID = 13,MSMCAEvent_PCIBusError_PCI_BUS_TARGET_ID_ID = 14,MSMCAEvent_PCIBusError_PCI_BUS_ERROR_TYPE_ID = 15,MSMCAEvent_PCIBusError_PCI_BUS_ID_BusNumber_ID = 16,MSMCAEvent_PCIBusError_PCI_BUS_ID_SegmentNumber_ID = 17,MSMCAEvent_PCIBusError_Size_ID = 18,MSMCAEvent_PCIBusError_RawRecord_ID = 19,MSMCAEvent_PCIComponentError_RecordId_ID = 1,MSMCAEvent_PCIComponentError_ErrorSeverity_ID = 2,MSMCAEvent_PCIComponentError_Type_ID = 3,MSMCAEvent_PCIComponentError_Cpu_ID = 4,MSMCAEvent_PCIComponentError_AdditionalErrors_ID = 5,MSMCAEvent_PCIComponentError_LogToEventlog_ID = 6,MSMCAEvent_PCIComponentError_VALIDATION_BITS_ID = 7,MSMCAEvent_PCIComponentError_PCI_COMP_ERROR_STATUS_ID = 8,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_VendorId_ID = 9,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_DeviceId_ID = 10,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeInterface_ID = 11,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeSubClass_ID = 12,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_ClassCodeBaseClass_ID = 13,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_FunctionNumber_ID = 14,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_DeviceNumber_ID = 15,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_BusNumber_ID = 16,MSMCAEvent_PCIComponentError_PCI_COMP_INFO_SegmentNumber_ID = 17,MSMCAEvent_PCIComponentError_Size_ID = 18,MSMCAEvent_PCIComponentError_RawRecord_ID = 19,MSMCAEvent_SystemEventError_RecordId_ID = 1,MSMCAEvent_SystemEventError_ErrorSeverity_ID = 2,MSMCAEvent_SystemEventError_Type_ID = 3,MSMCAEvent_SystemEventError_Cpu_ID = 4,MSMCAEvent_SystemEventError_AdditionalErrors_ID = 5,MSMCAEvent_SystemEventError_LogToEventlog_ID = 6,MSMCAEvent_SystemEventError_VALIDATION_BITS_ID = 7,MSMCAEvent_SystemEventError_SEL_TIME_STAMP_ID = 8,MSMCAEvent_SystemEventError_SEL_RECORD_ID_ID = 9,MSMCAEvent_SystemEventError_SEL_GENERATOR_ID_ID = 10,MSMCAEvent_SystemEventError_SEL_RECORD_TYPE_ID = 11,MSMCAEvent_SystemEventError_SEL_EVM_REV_ID = 12,MSMCAEvent_SystemEventError_SEL_SENSOR_TYPE_ID = 13,MSMCAEvent_SystemEventError_SEL_SENSOR_NUM_ID = 14,MSMCAEvent_SystemEventError_SEL_EVENT_DIR_TYPE_ID = 15,MSMCAEvent_SystemEventError_SEL_DATA1_ID = 16,MSMCAEvent_SystemEventError_SEL_DATA2_ID = 17,MSMCAEvent_SystemEventError_SEL_DATA3_ID = 18,MSMCAEvent_SystemEventError_Size_ID = 19,MSMCAEvent_SystemEventError_RawRecord_ID = 20,MSMCAEvent_SMBIOSError_RecordId_ID = 1,MSMCAEvent_SMBIOSError_ErrorSeverity_ID = 2,MSMCAEvent_SMBIOSError_Type_ID = 3,MSMCAEvent_SMBIOSError_Cpu_ID = 4,MSMCAEvent_SMBIOSError_AdditionalErrors_ID = 5,MSMCAEvent_SMBIOSError_LogToEventlog_ID = 6,MSMCAEvent_SMBIOSError_VALIDATION_BITS_ID = 7,MSMCAEvent_SMBIOSError_SMBIOS_EVENT_TYPE_ID = 8,MSMCAEvent_SMBIOSError_Size_ID = 9,MSMCAEvent_SMBIOSError_RawRecord_ID = 10,MSMCAEvent_PlatformSpecificError_RecordId_ID = 1,MSMCAEvent_PlatformSpecificError_ErrorSeverity_ID = 2,MSMCAEvent_PlatformSpecificError_Type_ID = 3,MSMCAEvent_PlatformSpecificError_Cpu_ID = 4,MSMCAEvent_PlatformSpecificError_AdditionalErrors_ID = 5,MSMCAEvent_PlatformSpecificError_LogToEventlog_ID = 6,MSMCAEvent_PlatformSpecificError_VALIDATION_BITS_ID = 7,MSMCAEvent_PlatformSpecificError_PLATFORM_ERROR_STATUS_ID = 8,MSMCAEvent_PlatformSpecificError_PLATFORM_REQUESTOR_ID_ID = 9,MSMCAEvent_PlatformSpecificError_PLATFORM_RESPONDER_ID_ID = 10,MSMCAEvent_PlatformSpecificError_PLATFORM_TARGET_ID_ID = 11,MSMCAEvent_PlatformSpecificError_PLATFORM_BUS_SPECIFIC_DATA_ID = 12,MSMCAEvent_PlatformSpecificError_OEM_COMPONENT_ID_ID = 13,MSMCAEvent_PlatformSpecificError_Size_ID = 14,MSMCAEvent_PlatformSpecificError_RawRecord_ID = 15,MSMCAEvent_InvalidError_RecordId_ID = 1,MSMCAEvent_InvalidError_ErrorSeverity_ID = 2,MSMCAEvent_InvalidError_Type_ID = 3,MSMCAEvent_InvalidError_Cpu_ID = 4,MSMCAEvent_InvalidError_AdditionalErrors_ID = 5,MSMCAEvent_InvalidError_LogToEventlog_ID = 6,MSMCAEvent_InvalidError_Size_ID = 7,MSMCAEvent_InvalidError_RawRecord_ID = 8,MSMCAEvent_MemoryPageRemoved_PhysicalAddress_ID = 1,};
enum MACRO_MSV1_0_OWF {MSV1_0_OWF_PASSWORD_LENGTH = 16,MSV1_0_CRED_LM_PRESENT = 1,MSV1_0_CRED_NT_PRESENT = 2,MSV1_0_CRED_VERSION = 0,MSV1_0_NTLM3_RESPONSE_LENGTH = 16,MSV1_0_NTLM3_OWF_LENGTH = 16,MSV1_0_MAX_NTLM3_LIFE = 129600,MSV1_0_MAX_AVL_SIZE = 64000,MSV1_0_AV_FLAG_FORCE_GUEST = 1,MSV1_0_AV_FLAG_MIC_HANDSHAKE_MESSAGES = 2,MSV1_0_AV_FLAG_UNVERIFIED_TARGET = 4,};
enum MACRO_MSiSCSI_LB {MSiSCSI_LB_FAILOVER = 1,MSiSCSI_LB_ROUND_ROBIN = 2,MSiSCSI_LB_ROUND_ROBIN_WITH_SUBSET = 3,MSiSCSI_LB_DYN_LEAST_QUEUE_DEPTH = 4,MSiSCSI_LB_WEIGHTED_PATHS = 5,MSiSCSI_LB_VENDOR_SPECIFIC = 6,};
enum MACRO_NDIS_IPSEC {NDIS_IPSEC_OFFLOAD_V2_ADD_SA_REVISION_1 = 1,NDIS_IPSEC_OFFLOAD_V2_DELETE_SA_REVISION_1 = 1,NDIS_IPSEC_OFFLOAD_V2_UPDATE_SA_REVISION_1 = 1,NDIS_BIND_PARAMETERS_REVISION_1 = 1,NDIS_BIND_PARAMETERS_REVISION_2 = 2,NDIS_BIND_PARAMETERS_REVISION_3 = 3,NDIS_PROTOCOL_CO_CHARACTERISTICS_REVISION_1 = 1,NDIS_PROTOCOL_DRIVER_CHARACTERISTICS_REVISION_1 = 1,NDIS_PROTOCOL_DRIVER_CHARACTERISTICS_REVISION_2 = 2,NDIS_OPEN_PARAMETERS_REVISION_1 = 1,NDIS_PROTOCOL_PAUSE_PARAMETERS_REVISION_1 = 1,NDIS_PROTOCOL_RESTART_PARAMETERS_REVISION_1 = 1,};
enum MACRO_NET_BUFFER {NET_BUFFER_LIST_POOL_PARAMETERS_REVISION_1 = 1,NET_BUFFER_POOL_PARAMETERS_REVISION_1 = 1,};
enum MACRO_NET_DEVICE {NET_DEVICE_PNP_EVENT_REVISION_1 = 1,};
enum MACRO_NLB_PUBLIC {NLB_PUBLIC_IOCTL_CLIENT_STICKINESS_NOTIFY = 3233841236,};
enum MACRO_NMI_SOURCE {IO_NMI_SOURCE = 3,LOCAL_NMI_SOURCE = 4,};
enum MACRO_NO_REMOVAL {NO_REMOVAL = 10,};
enum MACRO_NO_TIMEOUT {NO_TIMEOUT = 0,};
enum MACRO_OFFSET_ECP {OFFSET_ECP_DFIFO = 1024,OFFSET_TFIFO = 1024,OFFSET_CFIFO = 1024,OFFSET_ECR = 1026,OFFSET_PARALLEL_REGISTER_SPAN = 3,};
enum MACRO_PAGE_FAULT {PAGE_FAULT_IN_NONPAGED_AREA = 0x50,PAGE_FAULT_IN_NONPAGED_AREA_M = 0x10000050,};
enum MACRO_PCCARD_PCI {PCCARD_PCI_CONFIGURATION_SPACE = 0,PCCARD_ATTRIBUTE_MEMORY = 1,PCCARD_COMMON_MEMORY = 2,PCCARD_ATTRIBUTE_MEMORY_INDIRECT = 3,PCCARD_COMMON_MEMORY_INDIRECT = 4,};
enum MACRO_PCI_CONFIG {PCI_CONFIG_SPACE_ACCESS_FAILURE = 0xC0,};
enum MACRO_PCPROPERTY {PCPROPERTY_ITEM_FLAG_GET = 1,PCPROPERTY_ITEM_FLAG_SET = 2,PCPROPERTY_ITEM_FLAG_BASICSUPPORT = 512,PCPROPERTY_ITEM_FLAG_SERIALIZERAW = 8192,PCPROPERTY_ITEM_FLAG_UNSERIALIZERAW = 16384,PCPROPERTY_ITEM_FLAG_SERIALIZESIZE = 32768,PCPROPERTY_ITEM_FLAG_SERIALIZE = 57344,PCPROPERTY_ITEM_FLAG_DEFAULTVALUES = 65536,};
enum MACRO_PERSISTENT {PERSISTENT_VOLUME_STATE_SHORT_NAME_CREATION_DISABLED = 0x1,PERSISTENT_VOLUME_STATE_VOLUME_SCRUB_DISABLED = 0x2,};
enum MACRO_PNP_DEVICE {PNP_DEVICE_DISABLED = 0x1,PNP_DEVICE_DONT_DISPLAY_IN_UI = 0x2,PNP_DEVICE_FAILED = 0x4,PNP_DEVICE_REMOVED = 0x8,PNP_DEVICE_RESOURCE_REQUIREMENTS_CHANGED = 0x10,PNP_DEVICE_NOT_DISABLEABLE = 0x20,PNP_DEVICE_DISCONNECTED = 0x40,};
enum MACRO_POWER_PERF {POWER_PERF_SCALE = 100,POWER_STATE_HANDLER_TYPE_MAX = 8,POWER_STATE_DISABLED_TYPE_MAX = 8,};
enum MACRO_PROTECTION {PROTECTION_LEVEL_UNRESTRICTED = 10,PROTECTION_LEVEL_EDGERESTRICTED = 20,PROTECTION_LEVEL_RESTRICTED = 30,PROTECTION_LEVEL_DEFAULT = 4294967295,};
enum MACRO_QUERY_CALL {QUERY_CALL_PARAMETERS = 0x4,};
enum MACRO_QUERY_FILE {QUERY_FILE_LAYOUT_RESTART = 0x1,QUERY_FILE_LAYOUT_INCLUDE_NAMES = 0x2,QUERY_FILE_LAYOUT_INCLUDE_STREAMS = 0x4,QUERY_FILE_LAYOUT_INCLUDE_EXTENTS = 0x8,QUERY_FILE_LAYOUT_INCLUDE_EXTRA_INFO = 0x10,QUERY_FILE_LAYOUT_INCLUDE_STREAMS_WITH_NO_CLUSTERS_ALLOCATED = 0x20,QUERY_FILE_LAYOUT_SINGLE_INSTANCED = 0x1,};
enum MACRO_RAID_ASYNC {RAID_ASYNC_NOTIFY_FLAG_MEDIA_STATUS = 0x1,RAID_ASYNC_NOTIFY_FLAG_DEVICE_STATUS = 0x2,RAID_ASYNC_NOTIFY_FLAG_DEVICE_OPERATION = 0x4,RAID_ASYNC_NOTIFY_SUPPORTED_FLAGS = 0x7,};
enum MACRO_RDBSS_FILE {RDBSS_FILE_SYSTEM = 39,};
enum MACRO_RX_REQUEST {RX_REQUEST_PREPARED_FOR_HANDLING = 0x10000000,};
enum MACRO_RX_SRVCALL {RX_SRVCALL_POOLTAG = 1666414674,RX_NETROOT_POOLTAG = 1917745234,RX_V_NETROOT_POOLTAG = 1851160658,RX_FCB_POOLTAG = 1665562706,RX_SRVOPEN_POOLTAG = 1867741266,RX_FOBX_POOLTAG = 2017884242,RX_NONPAGEDFCB_POOLTAG = 1716418642,RX_WORKQ_POOLTAG = 1901557842,RX_BUFFERING_MANAGER_POOLTAG = 1833072722,RX_MISC_POOLTAG = 1934456914,RX_IRPC_POOLTAG = 1917417554,RX_MRX_POOLTAG = 2018342994,RX_NAME_CACHE_POOLTAG = 1666086994,RX_BUFFERED_LOCK_POOLTAG = 1800173650,};
enum MACRO_RemoveLink {RemoveLink = 31,};
enum MACRO_RemovePort {RemovePort = 21,};
enum MACRO_SCSI_DMA64 {SCSI_DMA64_SYSTEM_SUPPORTED = 0x80,SCSI_DMA64_MINIPORT_SUPPORTED = 0x1,SCSI_DMA64_MINIPORT_FULL64BIT_SUPPORTED = 0x2,SCSI_DMA64_MINIPORT_FULL64BIT_NO_BOUNDARY_REQ_SUPPORTED = 0x3,SCSI_DMA64_MINIPORT_64BIT_ONE_4GB_SUPPORTED = 0x4,};
enum MACRO_SCSI_IOCTL {SCSI_IOCTL_DATA_OUT = 0,SCSI_IOCTL_DATA_IN = 1,SCSI_IOCTL_DATA_UNSPECIFIED = 2,SCSI_IOCTL_DATA_BIDIRECTIONAL = 3,};
enum MACRO_SCSI_SENSE {SCSI_SENSE_ERRORCODE_FIXED_CURRENT = 0x70,SCSI_SENSE_ERRORCODE_FIXED_DEFERRED = 0x71,SCSI_SENSE_ERRORCODE_DESCRIPTOR_CURRENT = 0x72,SCSI_SENSE_ERRORCODE_DESCRIPTOR_DEFERRED = 0x73,SCSI_SENSE_DESCRIPTOR_TYPE_INFORMATION = 0x0,SCSI_SENSE_DESCRIPTOR_TYPE_COMMAND_SPECIFIC = 0x1,SCSI_SENSE_DESCRIPTOR_TYPE_SENSE_KEY_SPECIFIC = 0x2,SCSI_SENSE_DESCRIPTOR_TYPE_FIELD_REPLACEABLE_UNIT = 0x3,SCSI_SENSE_DESCRIPTOR_TYPE_STREAM_COMMAND = 0x4,SCSI_SENSE_DESCRIPTOR_TYPE_BLOCK_COMMAND = 0x5,SCSI_SENSE_DESCRIPTOR_TYPE_OSD_OBJECT_IDENTIFICATION = 0x6,SCSI_SENSE_DESCRIPTOR_TYPE_OSD_RESPONSE_INTEGRITY_CHECK = 0x7,SCSI_SENSE_DESCRIPTOR_TYPE_OSD_ATTRIBUTE_IDENTIFICATION = 0x8,SCSI_SENSE_DESCRIPTOR_TYPE_ATA_STATUS_RETURN = 0x9,SCSI_SENSE_DESCRIPTOR_TYPE_PROGRESS_INDICATION = 0xA,SCSI_SENSE_DESCRIPTOR_TYPE_USER_DATA_SEGMENT_REFERRAL = 0xB,SCSI_SENSE_DESCRIPTOR_TYPE_FORWARDED_SENSE_DATA = 0xC,SCSI_SENSE_NO_SENSE = 0x0,SCSI_SENSE_RECOVERED_ERROR = 0x1,SCSI_SENSE_NOT_READY = 0x2,SCSI_SENSE_MEDIUM_ERROR = 0x3,SCSI_SENSE_HARDWARE_ERROR = 0x4,SCSI_SENSE_ILLEGAL_REQUEST = 0x5,SCSI_SENSE_UNIT_ATTENTION = 0x6,SCSI_SENSE_DATA_PROTECT = 0x7,SCSI_SENSE_BLANK_CHECK = 0x8,SCSI_SENSE_UNIQUE = 0x9,SCSI_SENSE_COPY_ABORTED = 0xA,SCSI_SENSE_ABORTED_COMMAND = 0xB,SCSI_SENSE_EQUAL = 0xC,SCSI_SENSE_VOL_OVERFLOW = 0xD,SCSI_SENSE_MISCOMPARE = 0xE,SCSI_SENSE_RESERVED = 0xF,SCSI_ILLEGAL_LENGTH = 0x20,SCSI_EOM = 0x40,SCSI_FILE_MARK = 0x80,SCSI_ADSENSE_NO_SENSE = 0x0,SCSI_ADSENSE_NO_SEEK_COMPLETE = 0x2,SCSI_ADSENSE_LUN_NOT_READY = 0x4,SCSI_ADSENSE_LUN_COMMUNICATION = 0x8,SCSI_ADSENSE_WRITE_ERROR = 0xC,SCSI_ADSENSE_COPY_TARGET_DEVICE_ERROR = 0xD,SCSI_ADSENSE_UNRECOVERED_ERROR = 0x11,SCSI_ADSENSE_TRACK_ERROR = 0x14,SCSI_ADSENSE_SEEK_ERROR = 0x15,SCSI_ADSENSE_REC_DATA_NOECC = 0x17,SCSI_ADSENSE_REC_DATA_ECC = 0x18,SCSI_ADSENSE_PARAMETER_LIST_LENGTH = 0x1A,SCSI_ADSENSE_ILLEGAL_COMMAND = 0x20,SCSI_ADSENSE_ACCESS_DENIED = 0x20,SCSI_ADSENSE_ILLEGAL_BLOCK = 0x21,SCSI_ADSENSE_INVALID_TOKEN = 0x23,SCSI_ADSENSE_INVALID_CDB = 0x24,SCSI_ADSENSE_INVALID_LUN = 0x25,SCSI_ADSENSE_INVALID_FIELD_PARAMETER_LIST = 0x26,SCSI_ADSENSE_WRITE_PROTECT = 0x27,SCSI_ADSENSE_MEDIUM_CHANGED = 0x28,SCSI_ADSENSE_BUS_RESET = 0x29,SCSI_ADSENSE_PARAMETERS_CHANGED = 0x2A,SCSI_ADSENSE_INSUFFICIENT_TIME_FOR_OPERATION = 0x2E,SCSI_ADSENSE_INVALID_MEDIA = 0x30,SCSI_ADSENSE_LB_PROVISIONING = 0x38,SCSI_ADSENSE_NO_MEDIA_IN_DEVICE = 0x3A,SCSI_ADSENSE_POSITION_ERROR = 0x3B,SCSI_ADSENSE_LOGICAL_UNIT_ERROR = 0x3E,SCSI_ADSENSE_OPERATING_CONDITIONS_CHANGED = 0x3F,SCSI_ADSENSE_DATA_TRANSFER_ERROR = 0x4B,SCSI_ADSENSE_RESOURCE_FAILURE = 0x55,SCSI_ADSENSE_OPERATOR_REQUEST = 0x5A,SCSI_ADSENSE_FAILURE_PREDICTION_THRESHOLD_EXCEEDED = 0x5D,SCSI_ADSENSE_ILLEGAL_MODE_FOR_THIS_TRACK = 0x64,SCSI_ADSENSE_COPY_PROTECTION_FAILURE = 0x6F,SCSI_ADSENSE_POWER_CALIBRATION_ERROR = 0x73,SCSI_ADSENSE_VENDOR_UNIQUE = 0x80,SCSI_ADSENSE_MUSIC_AREA = 0xA0,SCSI_ADSENSE_DATA_AREA = 0xA1,SCSI_ADSENSE_VOLUME_OVERFLOW = 0xA7,SCSI_ADWRITE_PROTECT = 0x27,SCSI_FAILURE_PREDICTION_THRESHOLD_EXCEEDED = 0x5D,SCSI_SENSEQ_OPERATION_IS_IN_PROGRESS = 0x16,SCSI_SENSEQ_CAUSE_NOT_REPORTABLE = 0x0,SCSI_SENSEQ_BECOMING_READY = 0x1,SCSI_SENSEQ_INIT_COMMAND_REQUIRED = 0x2,SCSI_SENSEQ_MANUAL_INTERVENTION_REQUIRED = 0x3,SCSI_SENSEQ_FORMAT_IN_PROGRESS = 0x4,SCSI_SENSEQ_REBUILD_IN_PROGRESS = 0x5,SCSI_SENSEQ_RECALCULATION_IN_PROGRESS = 0x6,SCSI_SENSEQ_OPERATION_IN_PROGRESS = 0x7,SCSI_SENSEQ_LONG_WRITE_IN_PROGRESS = 0x8,SCSI_SENSEQ_SPACE_ALLOC_IN_PROGRESS = 0x14,SCSI_SENSEQ_COMM_FAILURE = 0x0,SCSI_SENSEQ_COMM_TIMEOUT = 0x1,SCSI_SENSEQ_COMM_PARITY_ERROR = 0x2,SCSI_SESNEQ_COMM_CRC_ERROR = 0x3,SCSI_SENSEQ_UNREACHABLE_TARGET = 0x4,SCSI_SENSEQ_LOSS_OF_STREAMING = 0x9,SCSI_SENSEQ_PADDING_BLOCKS_ADDED = 0xA,SCSI_SENSEQ_NOT_REACHABLE = 0x2,SCSI_SENSEQ_DATA_UNDERRUN = 0x4,SCSI_SENSEQ_UNRECOVERED_READ_ERROR = 0x0,SCSI_SENSEQ_FILEMARK_DETECTED = 0x1,SCSI_SENSEQ_END_OF_MEDIA_DETECTED = 0x2,SCSI_SENSEQ_SETMARK_DETECTED = 0x3,SCSI_SENSEQ_BEGINNING_OF_MEDIA_DETECTED = 0x4,SCSI_SENSEQ_NO_ACCESS_RIGHTS = 0x2,SCSI_SENSEQ_ILLEGAL_ELEMENT_ADDR = 0x1,SCSI_SENSEQ_INVALID_RELEASE_OF_PERSISTENT_RESERVATION = 0x4,SCSI_SENSEQ_TOO_MANY_SEGMENT_DESCRIPTORS = 0x8,SCSI_SENSEQ_SPACE_ALLOC_FAILED_WRITE_PROTECT = 0x7,SCSI_SENSEQ_CAPACITY_DATA_CHANGED = 0x9,SCSI_SENSEQ_DESTINATION_FULL = 0xD,SCSI_SENSEQ_SOURCE_EMPTY = 0xE,SCSI_SENSEQ_INCOMPATIBLE_MEDIA_INSTALLED = 0x0,SCSI_SENSEQ_UNKNOWN_FORMAT = 0x1,SCSI_SENSEQ_INCOMPATIBLE_FORMAT = 0x2,SCSI_SENSEQ_CLEANING_CARTRIDGE_INSTALLED = 0x3,SCSI_SENSEQ_SOFT_THRESHOLD_REACHED = 0x7,SCSI_SENSEQ_TIMEOUT_ON_LOGICAL_UNIT = 0x2,SCSI_SENSEQ_TARGET_OPERATING_CONDITIONS_CHANGED = 0x0,SCSI_SENSEQ_MICROCODE_CHANGED = 0x1,SCSI_SENSEQ_OPERATING_DEFINITION_CHANGED = 0x2,SCSI_SENSEQ_INQUIRY_DATA_CHANGED = 0x3,SCSI_SENSEQ_COMPONENT_DEVICE_ATTACHED = 0x4,SCSI_SENSEQ_DEVICE_IDENTIFIER_CHANGED = 0x5,SCSI_SENSEQ_REDUNDANCY_GROUP_MODIFIED = 0x6,SCSI_SENSEQ_REDUNDANCY_GROUP_DELETED = 0x7,SCSI_SENSEQ_SPARE_MODIFIED = 0x8,SCSI_SENSEQ_SPARE_DELETED = 0x9,SCSI_SENSEQ_VOLUME_SET_MODIFIED = 0xA,SCSI_SENSEQ_VOLUME_SET_DELETED = 0xB,SCSI_SENSEQ_VOLUME_SET_DEASSIGNED = 0xC,SCSI_SENSEQ_VOLUME_SET_REASSIGNED = 0xD,SCSI_SENSEQ_REPORTED_LUNS_DATA_CHANGED = 0xE,SCSI_SENSEQ_ECHO_BUFFER_OVERWRITTEN = 0xF,SCSI_SENSEQ_MEDIUM_LOADABLE = 0x10,SCSI_SENSEQ_MEDIUM_AUXILIARY_MEMORY_ACCESSIBLE = 0x11,SCSI_SENSEQ_INITIATOR_RESPONSE_TIMEOUT = 0x6,SCSI_SENSEQ_INSUFFICIENT_RESOURCES = 0x3,SCSI_SENSEQ_STATE_CHANGE_INPUT = 0x0,SCSI_SENSEQ_MEDIUM_REMOVAL = 0x1,SCSI_SENSEQ_WRITE_PROTECT_ENABLE = 0x2,SCSI_SENSEQ_WRITE_PROTECT_DISABLE = 0x3,SCSI_SENSEQ_AUTHENTICATION_FAILURE = 0x0,SCSI_SENSEQ_KEY_NOT_PRESENT = 0x1,SCSI_SENSEQ_KEY_NOT_ESTABLISHED = 0x2,SCSI_SENSEQ_READ_OF_SCRAMBLED_SECTOR_WITHOUT_AUTHENTICATION = 0x3,SCSI_SENSEQ_MEDIA_CODE_MISMATCHED_TO_LOGICAL_UNIT = 0x4,SCSI_SENSEQ_LOGICAL_UNIT_RESET_COUNT_ERROR = 0x5,SCSI_SENSEQ_POWER_CALIBRATION_AREA_ALMOST_FULL = 0x1,SCSI_SENSEQ_POWER_CALIBRATION_AREA_FULL = 0x2,SCSI_SENSEQ_POWER_CALIBRATION_AREA_ERROR = 0x3,SCSI_SENSEQ_PMA_RMA_UPDATE_FAILURE = 0x4,SCSI_SENSEQ_PMA_RMA_IS_FULL = 0x5,SCSI_SENSEQ_PMA_RMA_ALMOST_FULL = 0x6,};
enum MACRO_SDP_ATTRIB {SDP_ATTRIB_SDP_VERSION_NUMBER_LIST = 0x200,SDP_ATTRIB_SDP_DATABASE_STATE = 0x201,SDP_ATTRIB_BROWSE_GROUP_ID = 0x200,SDP_ATTRIB_CORDLESS_EXTERNAL_NETWORK = 0x301,SDP_ATTRIB_FAX_CLASS_1_SUPPORT = 0x302,SDP_ATTRIB_FAX_CLASS_2_0_SUPPORT = 0x303,SDP_ATTRIB_FAX_CLASS_2_SUPPORT = 0x304,SDP_ATTRIB_FAX_AUDIO_FEEDBACK_SUPPORT = 0x305,SDP_ATTRIB_HEADSET_REMOTE_AUDIO_VOLUME_CONTROL = 0x302,SDP_ATTRIB_LAN_LPSUBNET = 0x200,SDP_ATTRIB_OBJECT_PUSH_SUPPORTED_FORMATS_LIST = 0x303,SDP_ATTRIB_SYNCH_SUPPORTED_DATA_STORES_LIST = 0x301,SDP_ATTRIB_SERVICE_VERSION = 0x300,SDP_ATTRIB_PAN_NETWORK_ADDRESS = 0x306,SDP_ATTRIB_PAN_WAP_GATEWAY = 0x307,SDP_ATTRIB_PAN_HOME_PAGE_URL = 0x308,SDP_ATTRIB_PAN_WAP_STACK_TYPE = 0x309,SDP_ATTRIB_PAN_SECURITY_DESCRIPTION = 0x30A,SDP_ATTRIB_PAN_NET_ACCESS_TYPE = 0x30B,SDP_ATTRIB_PAN_MAX_NET_ACCESS_RATE = 0x30C,SDP_ATTRIB_IMAGING_SUPPORTED_CAPABILITIES = 0x310,SDP_ATTRIB_IMAGING_SUPPORTED_FEATURES = 0x311,SDP_ATTRIB_IMAGING_SUPPORTED_FUNCTIONS = 0x312,SDP_ATTRIB_IMAGING_TOTAL_DATA_CAPACITY = 0x313,SDP_ATTRIB_DI_SPECIFICATION_ID = 0x200,SDP_ATTRIB_DI_VENDOR_ID = 0x201,SDP_ATTRIB_DI_PRODUCT_ID = 0x202,SDP_ATTRIB_DI_VERSION = 0x203,SDP_ATTRIB_DI_PRIMARY_RECORD = 0x204,SDP_ATTRIB_DI_VENDOR_ID_SOURCE = 0x205,SDP_ATTRIB_HID_DEVICE_RELEASE_NUMBER = 0x200,SDP_ATTRIB_HID_PARSER_VERSION = 0x201,SDP_ATTRIB_HID_DEVICE_SUBCLASS = 0x202,SDP_ATTRIB_HID_COUNTRY_CODE = 0x203,SDP_ATTRIB_HID_VIRTUAL_CABLE = 0x204,SDP_ATTRIB_HID_RECONNECT_INITIATE = 0x205,SDP_ATTRIB_HID_DESCRIPTOR_LIST = 0x206,SDP_ATTRIB_HID_LANG_ID_BASE_LIST = 0x207,SDP_ATTRIB_HID_SDP_DISABLE = 0x208,SDP_ATTRIB_HID_BATTERY_POWER = 0x209,SDP_ATTRIB_HID_REMOTE_WAKE = 0x20A,SDP_ATTRIB_HID_PROFILE_VERSION = 0x20B,SDP_ATTRIB_HID_SUPERVISION_TIMEOUT = 0x20C,SDP_ATTRIB_HID_NORMALLY_CONNECTABLE = 0x20D,SDP_ATTRIB_HID_BOOT_DEVICE = 0x20E,SDP_ATTRIB_HID_SSR_HOST_MAX_LATENCY = 0x20F,SDP_ATTRIB_HID_SSR_HOST_MIN_TIMEOUT = 0x210,};
enum MACRO_SERIAL_WMI {SERIAL_WMI_PARITY_NONE = 0,SERIAL_WMI_PARITY_ODD = 1,SERIAL_WMI_PARITY_EVEN = 2,SERIAL_WMI_PARITY_SPACE = 3,SERIAL_WMI_PARITY_MARK = 4,SERIAL_WMI_COMM_DATA_Parity_ID = 3,SERIAL_WMI_COMM_DATA_ParityCheckEnable_ID = 4,SERIAL_WMI_STOP_1 = 0,SERIAL_WMI_STOP_1_5 = 1,SERIAL_WMI_STOP_2 = 2,SERIAL_WMI_COMM_DATA_StopBits_ID = 5,SERIAL_WMI_COMM_DATA_XoffCharacter_ID = 6,SERIAL_WMI_COMM_DATA_XoffXmitThreshold_ID = 7,SERIAL_WMI_COMM_DATA_XonCharacter_ID = 8,SERIAL_WMI_COMM_DATA_XonXmitThreshold_ID = 9,SERIAL_WMI_COMM_DATA_MaximumBaudRate_ID = 10,SERIAL_WMI_COMM_DATA_MaximumOutputBufferSize_ID = 11,SERIAL_WMI_COMM_DATA_MaximumInputBufferSize_ID = 12,SERIAL_WMI_COMM_DATA_Support16BitMode_ID = 13,SERIAL_WMI_COMM_DATA_SupportDTRDSR_ID = 14,SERIAL_WMI_COMM_DATA_SupportIntervalTimeouts_ID = 15,SERIAL_WMI_COMM_DATA_SupportParityCheck_ID = 16,SERIAL_WMI_COMM_DATA_SupportRTSCTS_ID = 17,SERIAL_WMI_COMM_DATA_SupportXonXoff_ID = 18,SERIAL_WMI_COMM_DATA_SettableBaudRate_ID = 19,SERIAL_WMI_COMM_DATA_SettableDataBits_ID = 20,SERIAL_WMI_COMM_DATA_SettableFlowControl_ID = 21,SERIAL_WMI_COMM_DATA_SettableParity_ID = 22,SERIAL_WMI_COMM_DATA_SettableParityCheck_ID = 23,SERIAL_WMI_COMM_DATA_SettableStopBits_ID = 24,SERIAL_WMI_COMM_DATA_IsBusy_ID = 25,SERIAL_WMI_HW_DATA_IrqNumber_ID = 1,SERIAL_WMI_HW_DATA_IrqVector_ID = 2,SERIAL_WMI_HW_DATA_IrqLevel_ID = 3,SERIAL_WMI_HW_DATA_IrqAffinityMask_ID = 4,SERIAL_WMI_INTTYPE_LATCHED = 0,SERIAL_WMI_INTTYPE_LEVEL = 1,SERIAL_WMI_HW_DATA_InterruptType_ID = 5,SERIAL_WMI_HW_DATA_BaseIOAddress_ID = 6,SERIAL_WMI_PERF_DATA_ReceivedCount_ID = 1,SERIAL_WMI_PERF_DATA_TransmittedCount_ID = 2,SERIAL_WMI_PERF_DATA_FrameErrorCount_ID = 3,SERIAL_WMI_PERF_DATA_SerialOverrunErrorCount_ID = 4,SERIAL_WMI_PERF_DATA_BufferOverrunErrorCount_ID = 5,SERIAL_WMI_PERF_DATA_ParityErrorCount_ID = 6,SERIAL_WMI_COMMPROP_wPacketLength_ID = 1,SERIAL_WMI_COMMPROP_wPacketVersion_ID = 2,SERIAL_WMI_COMMPROP_dwServiceMask_ID = 3,SERIAL_WMI_COMMPROP_dwReserved1_ID = 4,SERIAL_WMI_COMMPROP_dwMaxTxQueue_ID = 5,SERIAL_WMI_COMMPROP_dwMaxRxQueue_ID = 6,SERIAL_WMI_COMMPROP_dwMaxBaud_ID = 7,SERIAL_WMI_COMMPROP_dwProvSubType_ID = 8,SERIAL_WMI_COMMPROP_dwProvCapabilities_ID = 9,SERIAL_WMI_COMMPROP_dwSettableParams_ID = 10,SERIAL_WMI_COMMPROP_dwSettableBaud_ID = 11,SERIAL_WMI_COMMPROP_wSettableData_ID = 12,SERIAL_WMI_COMMPROP_wSettableStopParity_ID = 13,SERIAL_WMI_COMMPROP_dwCurrentTxQueue_ID = 14,SERIAL_WMI_COMMPROP_dwCurrentRxQueue_ID = 15,SERIAL_WMI_COMMPROP_dwProvSpec1_ID = 16,SERIAL_WMI_COMMPROP_dwProvSpec2_ID = 17,SERIAL_WMI_COMMPROP_dwProvCharSize_ID = 18,SERIAL_WMI_COMMPROP_wcProvChar_ID = 19,};
enum MACRO_SET_REPAIR {SET_REPAIR_ENABLED = 0x1,SET_REPAIR_WARN_ABOUT_DATA_LOSS = 0x8,SET_REPAIR_DISABLED_AND_BUGCHECK_ON_CORRUPT = 0x10,SET_REPAIR_VALID_MASK = 0x19,};
enum MACRO_SET_SINGLE {SET_SINGLE_POLICY_IN_Type_ID = 2,SET_SINGLE_POLICY_IN_Value_ID = 3,SET_SINGLE_POLICY_OUT_Status_ID = 1,};
enum MACRO_SIO_RCVALL {SIO_RCVALL = -1744830463,SIO_RCVALL_MCAST = -1744830462,SIO_RCVALL_IGMPMCAST = -1744830461,SIO_KEEPALIVE_VALS = -1744830460,SIO_ABSORB_RTRALERT = -1744830459,SIO_UCAST_IF = -1744830458,SIO_LIMIT_BROADCASTS = -1744830457,SIO_INDEX_BIND = -1744830456,SIO_INDEX_MCASTIF = -1744830455,SIO_INDEX_ADD_MCAST = -1744830454,SIO_INDEX_DEL_MCAST = -1744830453,SIO_RCVALL_MCAST_IF = -1744830451,SIO_RCVALL_IF = -1744830450,SIO_LOOPBACK_FAST_PATH = -1744830448,SIO_TCP_INITIAL_RTO = -1744830447,SIO_APPLY_TRANSPORT_SETTING = -1744830445,SIO_QUERY_TRANSPORT_SETTING = -1744830444,};
enum MACRO_SMART_READ {SMART_READ_LOG = 0xD5,SMART_WRITE_LOG = 0xD6,};
enum MACRO_SMB_ACCESS {SMB_ACCESS_READ_ONLY = 0,SMB_ACCESS_WRITE_ONLY = 1,SMB_ACCESS_READ_WRITE = 2,SMB_ACCESS_EXECUTE = 3,SMB_OPEN_QUERY_INFORMATION = 1,SMB_OPEN_OPLOCK = 2,SMB_OPEN_OPBATCH = 4,SMB_OPEN_QUERY_EA_LENGTH = 8,SMB_OPEN_EXTENDED_RESPONSE = 16,};
enum MACRO_SMB_FLAGS2 {SMB_FLAGS2_KNOWS_LONG_NAMES = 0x1,SMB_FLAGS2_KNOWS_EAS = 0x2,SMB_FLAGS2_SMB_SECURITY_SIGNATURE = 0x4,SMB_FLAGS2_IS_LONG_NAME = 0x40,SMB_FLAGS2_DFS = 0x1000,SMB_FLAGS2_PAGING_IO = 0x2000,SMB_FLAGS2_NT_STATUS = 0x4000,SMB_FLAGS2_UNICODE = 0x8000,};
enum MACRO_SMB_FORMAT {SMB_FORMAT_DATA = 1,SMB_FORMAT_DIALECT = 2,SMB_FORMAT_PATHNAME = 3,SMB_FORMAT_ASCII = 4,SMB_FORMAT_VARIABLE = 5,SMB_WMODE_WRITE_THROUGH = 1,SMB_WMODE_SET_REMAINING = 2,SMB_WMODE_WRITE_RAW_NAMED_PIPE = 4,SMB_WMODE_START_OF_MESSAGE = 8,SMB_WMODE_DATAGRAM = 128,SMB_FLAGS_LOCK_AND_READ_OK = 1,SMB_FLAGS_SEND_NO_ACK = 2,SMB_FLAGS_CASE_INSENSITIVE = 8,SMB_FLAGS_CANONICALIZED_PATHS = 16,SMB_FLAGS_OPLOCK = 32,SMB_FLAGS_OPLOCK_NOTIFY_ANY = 64,SMB_FLAGS_SERVER_TO_REDIR = 128,};
enum MACRO_SRC_PACKET {SRC_PACKET_SIZE_SDDV = 480,SRC_PACKET_SIZE_HDDV = 960,SRC_PACKET_SIZE_SDLDV = 240,SRC_PACKET_SIZE_MPEG2TS = 192,};
enum MACRO_STATUS_FLT {STATUS_FLT_IO_COMPLETE = 0x1C0001,STATUS_DIS_ATTRIBUTE_BUILT = 0x3C0001,STATUS_OBJECT_NAME_EXISTS = 0x40000000,STATUS_THREAD_WAS_SUSPENDED = 0x40000001,STATUS_WORKING_SET_LIMIT_RANGE = 0x40000002,STATUS_IMAGE_NOT_AT_BASE = 0x40000003,STATUS_RXACT_STATE_CREATED = 0x40000004,STATUS_SEGMENT_NOTIFICATION = 0x40000005,STATUS_LOCAL_USER_SESSION_KEY = 0x40000006,STATUS_BAD_CURRENT_DIRECTORY = 0x40000007,STATUS_SERIAL_MORE_WRITES = 0x40000008,STATUS_REGISTRY_RECOVERED = 0x40000009,STATUS_FT_READ_RECOVERY_FROM_BACKUP = 0x4000000A,STATUS_FT_WRITE_RECOVERY = 0x4000000B,STATUS_SERIAL_COUNTER_TIMEOUT = 0x4000000C,STATUS_NULL_LM_PASSWORD = 0x4000000D,STATUS_IMAGE_MACHINE_TYPE_MISMATCH = 0x4000000E,STATUS_RECEIVE_PARTIAL = 0x4000000F,STATUS_RECEIVE_EXPEDITED = 0x40000010,STATUS_RECEIVE_PARTIAL_EXPEDITED = 0x40000011,STATUS_EVENT_DONE = 0x40000012,STATUS_EVENT_PENDING = 0x40000013,STATUS_CHECKING_FILE_SYSTEM = 0x40000014,STATUS_FATAL_APP_EXIT = 0x40000015,STATUS_PREDEFINED_HANDLE = 0x40000016,STATUS_WAS_UNLOCKED = 0x40000017,STATUS_SERVICE_NOTIFICATION = 0x40000018,STATUS_WAS_LOCKED = 0x40000019,STATUS_LOG_HARD_ERROR = 0x4000001A,STATUS_ALREADY_WIN32 = 0x4000001B,STATUS_WX86_UNSIMULATE = 0x4000001C,STATUS_WX86_CONTINUE = 0x4000001D,STATUS_WX86_SINGLE_STEP = 0x4000001E,STATUS_WX86_BREAKPOINT = 0x4000001F,STATUS_WX86_EXCEPTION_CONTINUE = 0x40000020,STATUS_WX86_EXCEPTION_LASTCHANCE = 0x40000021,STATUS_WX86_EXCEPTION_CHAIN = 0x40000022,STATUS_IMAGE_MACHINE_TYPE_MISMATCH_EXE = 0x40000023,STATUS_NO_YIELD_PERFORMED = 0x40000024,STATUS_TIMER_RESUME_IGNORED = 0x40000025,STATUS_ARBITRATION_UNHANDLED = 0x40000026,STATUS_CARDBUS_NOT_SUPPORTED = 0x40000027,STATUS_WX86_CREATEWX86TIB = 0x40000028,STATUS_MP_PROCESSOR_MISMATCH = 0x40000029,STATUS_HIBERNATED = 0x4000002A,STATUS_RESUME_HIBERNATION = 0x4000002B,STATUS_FIRMWARE_UPDATED = 0x4000002C,STATUS_DRIVERS_LEAKING_LOCKED_PAGES = 0x4000002D,STATUS_MESSAGE_RETRIEVED = 0x4000002E,STATUS_SYSTEM_POWERSTATE_TRANSITION = 0x4000002F,STATUS_ALPC_CHECK_COMPLETION_LIST = 0x40000030,STATUS_SYSTEM_POWERSTATE_COMPLEX_TRANSITION = 0x40000031,STATUS_ACCESS_AUDIT_BY_POLICY = 0x40000032,STATUS_ABANDON_HIBERFILE = 0x40000033,STATUS_BIZRULES_NOT_ENABLED = 0x40000034,STATUS_FT_READ_FROM_COPY = 0x40000035,STATUS_IMAGE_AT_DIFFERENT_BASE = 0x40000036,};
enum MACRO_STATUS_OS2 {STATUS_OS2_INVALID_LEVEL = -1063718788,STATUS_OS2_EA_LIST_INCONSISTENT = -1063718657,STATUS_OS2_NEGATIVE_SEEK = -1063718781,STATUS_OS2_NO_MORE_SIDS = -1063718799,STATUS_OS2_EAS_DIDNT_FIT = -1063718637,STATUS_OS2_EA_ACCESS_DENIED = -1063717918,STATUS_OS2_CANCEL_VIOLATION = -1063718739,STATUS_OS2_ATOMIC_LOCKS_NOT_SUPPORTED = -1063718738,STATUS_OS2_CANNOT_COPY = -1063718646,};
enum MACRO_SYNCH_DATA {SYNCH_DATA_STORE_PHONEBOOK = 0x1,SYNCH_DATA_STORE_CALENDAR = 0x3,SYNCH_DATA_STORE_NOTES = 0x5,SYNCH_DATA_STORE_MESSAGES = 0x6,};
enum MACRO_SYSTEM_PTE {SYSTEM_PTE_MISUSE = 0xDA,};
enum MACRO_SendRLS_IN {SendRLS_IN_PortWWN_ID = 1,SendRLS_IN_DestWWN_ID = 2,SendRLS_OUT_HBAStatus_ID = 3,SendRLS_OUT_TotalRspBufferSize_ID = 4,SendRLS_OUT_ActualRspBufferSize_ID = 5,SendRLS_OUT_RspBuffer_SIZE_HINT = 28,SendRLS_OUT_RspBuffer_ID = 6,};
enum MACRO_SendRNIDV2 {SendRNIDV2 = 6,};
enum MACRO_SendRPL_IN {SendRPL_IN_PortWWN_ID = 1,SendRPL_IN_AgentWWN_ID = 2,SendRPL_IN_agent_domain_ID = 3,SendRPL_IN_portIndex_ID = 4,SendRPL_OUT_HBAStatus_ID = 5,SendRPL_OUT_TotalRspBufferSize_ID = 6,SendRPL_OUT_ActualRspBufferSize_ID = 7,SendRPL_OUT_RspBuffer_SIZE_HINT = 28,SendRPL_OUT_RspBuffer_ID = 8,};
enum MACRO_SendRPS_IN {SendRPS_IN_PortWWN_ID = 1,SendRPS_IN_AgentWWN_ID = 2,SendRPS_IN_ObjectWWN_ID = 3,SendRPS_IN_AgentDomain_ID = 4,SendRPS_IN_ObjectPortNumber_ID = 5,SendRPS_OUT_HBAStatus_ID = 6,SendRPS_OUT_TotalRspBufferSize_ID = 7,SendRPS_OUT_ActualRspBufferSize_ID = 8,SendRPS_OUT_RspBuffer_SIZE_HINT = 64,SendRPS_OUT_RspBuffer_ID = 9,};
enum MACRO_SendSRL_IN {SendSRL_IN_PortWWN_ID = 1,SendSRL_IN_WWN_ID = 2,SendSRL_IN_Domain_ID = 3,SendSRL_OUT_HBAStatus_ID = 4,SendSRL_OUT_TotalRspBufferSize_ID = 5,SendSRL_OUT_ActualRspBufferSize_ID = 6,SendSRL_OUT_RspBuffer_SIZE_HINT = 8,SendSRL_OUT_RspBuffer_ID = 7,};
enum MACRO_TAPE_ERASE {TAPE_ERASE_SHORT = 0,TAPE_ERASE_LONG = 1,TAPE_LOAD = 0,TAPE_UNLOAD = 1,TAPE_TENSION = 2,TAPE_LOCK = 3,TAPE_UNLOCK = 4,TAPE_FORMAT = 5,TAPE_SETMARKS = 0,TAPE_FILEMARKS = 1,TAPE_SHORT_FILEMARKS = 2,TAPE_LONG_FILEMARKS = 3,TAPE_ABSOLUTE_POSITION = 0,TAPE_LOGICAL_POSITION = 1,TAPE_PSEUDO_LOGICAL_POSITION = 2,TAPE_REWIND = 0,TAPE_ABSOLUTE_BLOCK = 1,TAPE_LOGICAL_BLOCK = 2,TAPE_PSEUDO_LOGICAL_BLOCK = 3,TAPE_SPACE_END_OF_DATA = 4,TAPE_SPACE_RELATIVE_BLOCKS = 5,TAPE_SPACE_FILEMARKS = 6,TAPE_SPACE_SEQUENTIAL_FMKS = 7,TAPE_SPACE_SETMARKS = 8,TAPE_SPACE_SEQUENTIAL_SMKS = 9,TAPE_DRIVE_FIXED = 1,TAPE_DRIVE_SELECT = 2,TAPE_DRIVE_INITIATOR = 4,TAPE_DRIVE_ERASE_SHORT = 16,TAPE_DRIVE_ERASE_LONG = 32,TAPE_DRIVE_ERASE_BOP_ONLY = 64,TAPE_DRIVE_ERASE_IMMEDIATE = 128,TAPE_DRIVE_TAPE_CAPACITY = 256,TAPE_DRIVE_TAPE_REMAINING = 512,TAPE_DRIVE_FIXED_BLOCK = 1024,TAPE_DRIVE_VARIABLE_BLOCK = 2048,TAPE_DRIVE_WRITE_PROTECT = 4096,TAPE_DRIVE_EOT_WZ_SIZE = 8192,TAPE_DRIVE_ECC = 65536,TAPE_DRIVE_COMPRESSION = 131072,TAPE_DRIVE_PADDING = 262144,TAPE_DRIVE_REPORT_SMKS = 524288,TAPE_DRIVE_GET_ABSOLUTE_BLK = 1048576,TAPE_DRIVE_GET_LOGICAL_BLK = 2097152,TAPE_DRIVE_SET_EOT_WZ_SIZE = 4194304,TAPE_DRIVE_EJECT_MEDIA = 16777216,TAPE_DRIVE_CLEAN_REQUESTS = 33554432,TAPE_DRIVE_SET_CMP_BOP_ONLY = 67108864,TAPE_DRIVE_RESERVED_BIT = -2147483648,TAPE_DRIVE_LOAD_UNLOAD = -2147483647,TAPE_DRIVE_TENSION = -2147483646,TAPE_DRIVE_LOCK_UNLOCK = -2147483644,TAPE_DRIVE_REWIND_IMMEDIATE = -2147483640,TAPE_DRIVE_SET_BLOCK_SIZE = -2147483632,TAPE_DRIVE_LOAD_UNLD_IMMED = -2147483616,TAPE_DRIVE_TENSION_IMMED = -2147483584,TAPE_DRIVE_LOCK_UNLK_IMMED = -2147483520,TAPE_DRIVE_SET_ECC = -2147483392,TAPE_DRIVE_SET_COMPRESSION = -2147483136,TAPE_DRIVE_SET_PADDING = -2147482624,TAPE_DRIVE_SET_REPORT_SMKS = -2147481600,TAPE_DRIVE_ABSOLUTE_BLK = -2147479552,TAPE_DRIVE_ABS_BLK_IMMED = -2147475456,TAPE_DRIVE_LOGICAL_BLK = -2147467264,TAPE_DRIVE_LOG_BLK_IMMED = -2147450880,TAPE_DRIVE_END_OF_DATA = -2147418112,TAPE_DRIVE_RELATIVE_BLKS = -2147352576,TAPE_DRIVE_FILEMARKS = -2147221504,TAPE_DRIVE_SEQUENTIAL_FMKS = -2146959360,TAPE_DRIVE_SETMARKS = -2146435072,TAPE_DRIVE_SEQUENTIAL_SMKS = -2145386496,TAPE_DRIVE_REVERSE_POSITION = -2143289344,TAPE_DRIVE_SPACE_IMMEDIATE = -2139095040,TAPE_DRIVE_WRITE_SETMARKS = -2130706432,TAPE_DRIVE_WRITE_FILEMARKS = -2113929216,TAPE_DRIVE_WRITE_SHORT_FMKS = -2080374784,TAPE_DRIVE_WRITE_LONG_FMKS = -2013265920,TAPE_DRIVE_WRITE_MARK_IMMED = -1879048192,TAPE_DRIVE_FORMAT = -1610612736,TAPE_DRIVE_FORMAT_IMMEDIATE = -1073741824,TAPE_DRIVE_HIGH_FEATURES = -2147483648,TAPE_FIXED_PARTITIONS = 0,TAPE_SELECT_PARTITIONS = 1,TAPE_INITIATOR_PARTITIONS = 2,TAPE_QUERY_DRIVE_PARAMETERS = 0,TAPE_QUERY_MEDIA_CAPACITY = 1,TAPE_CHECK_FOR_DRIVE_PROBLEM = 2,TAPE_QUERY_IO_ERROR_DATA = 3,TAPE_QUERY_DEVICE_ERROR_DATA = 4,};
enum MACRO_TAPE_RETRY {TAPE_RETRY_MASK = 0xFFFF,};
enum MACRO_TC_NONCONF {TC_NONCONF_BORROW = 0,TC_NONCONF_SHAPE = 1,TC_NONCONF_DISCARD = 2,TC_NONCONF_BORROW_PLUS = 3,};
enum MACRO_THREAD_NOT {THREAD_NOT_MUTEX_OWNER = 0x11,};
enum MACRO_UNEXPECTED {UNEXPECTED_INITIALIZATION_CALL = 0x33,};
enum MACRO_USB_SUBMIT {USB_SUBMIT_URB = 0,USB_RESET_PORT = 1,USB_GET_ROOTHUB_PDO = 3,USB_GET_PORT_STATUS = 4,USB_ENABLE_PORT = 5,USB_GET_HUB_COUNT = 6,USB_CYCLE_PORT = 7,USB_GET_HUB_NAME = 8,USB_IDLE_NOTIFICATION = 9,USB_RECORD_FAILURE = 10,USB_GET_BUS_INFO = 264,USB_GET_CONTROLLER_NAME = 265,USB_GET_BUSGUID_INFO = 266,USB_GET_PARENT_HUB_INFO = 267,USB_GET_DEVICE_HANDLE = 268,USB_GET_DEVICE_HANDLE_EX = 269,USB_GET_TT_DEVICE_HANDLE = 270,USB_GET_TOPOLOGY_ADDRESS = 271,USB_IDLE_NOTIFICATION_EX = 272,USB_REQ_GLOBAL_SUSPEND = 273,USB_REQ_GLOBAL_RESUME = 274,USB_GET_HUB_CONFIG_INFO = 275,USB_REGISTER_COMPOSITE_DEVICE = 0,USB_UNREGISTER_COMPOSITE_DEVICE = 1,USB_REQUEST_REMOTE_WAKE_NOTIFICATION = 2,};
enum MACRO_VIDEO_PORT {VIDEO_PORT_AGP_INTERFACE_VERSION_1 = 1,VIDEO_PORT_AGP_INTERFACE_VERSION_2 = 2,VIDEO_PORT_I2C_INTERFACE_VERSION_1 = 1,VIDEO_PORT_I2C_INTERFACE_VERSION_2 = 2,VIDEO_PORT_INT10_INTERFACE_VERSION_1 = 1,VIDEO_PORT_WCMEMORYPROTECTION_INTERFACE_VERSION_1 = 1,VIDEO_MEMORY_SPACE_MEMORY = 0,VIDEO_MEMORY_SPACE_IO = 1,VIDEO_MEMORY_SPACE_USER_MODE = 2,VIDEO_MEMORY_SPACE_DENSE = 4,VIDEO_MEMORY_SPACE_P6CACHE = 8,VIDEO_ENUM_MORE_DEVICES = 1246,VIDEO_ENUM_NO_MORE_DEVICES = 1248,VIDEO_ENUM_INVALID_DEVICE = 123,};
enum MACRO_WHEA_ERROR {WHEA_ERROR_SOURCE_DESCRIPTOR_VERSION_10 = 10,WHEA_MAX_MC_BANKS = 32,WHEA_ERROR_SOURCE_FLAG_FIRMWAREFIRST = 1,WHEA_ERROR_SOURCE_FLAG_GLOBAL = 2,WHEA_ERROR_SOURCE_FLAG_PREALLOCATE_PER_PROCESSOR = 4,WHEA_ERROR_SOURCE_FLAG_DEFAULTSOURCE = -2147483648,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_XPFMCE = 0,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_XPFCMC = 1,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_XPFNMI = 2,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_IPFMCA = 3,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_IPFCMC = 4,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_IPFCPE = 5,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_AERROOTPORT = 6,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_AERENDPOINT = 7,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_AERBRIDGE = 8,WHEA_ERROR_SOURCE_DESCRIPTOR_TYPE_GENERIC = 9,WHEA_XPF_MC_BANK_STATUSFORMAT_IA32MCA = 0,WHEA_XPF_MC_BANK_STATUSFORMAT_Intel64MCA = 1,WHEA_XPF_MC_BANK_STATUSFORMAT_AMD64MCA = 2,WHEA_NOTIFICATION_TYPE_POLLED = 0,WHEA_NOTIFICATION_TYPE_EXTERNALINTERRUPT = 1,WHEA_NOTIFICATION_TYPE_LOCALINTERRUPT = 2,WHEA_NOTIFICATION_TYPE_SCI = 3,WHEA_NOTIFICATION_TYPE_NMI = 4,WHEA_DISABLE_OFFLINE = 0,WHEA_MEM_PERSISTOFFLINE = 1,WHEA_MEM_PFA_DISABLE = 2,WHEA_MEM_PFA_PAGECOUNT = 3,WHEA_MEM_PFA_THRESHOLD = 4,WHEA_MEM_PFA_TIMEOUT = 5,};
enum MACRO_WHEA_WRITE {WHEA_WRITE_FLAG_DUMMY = 0x1,};
enum MACRO_WHEELMOUSE {WHEELMOUSE_I8042_HARDWARE = 0x20,WHEELMOUSE_SERIAL_HARDWARE = 0x40,};
enum MACRO_WINDOWS_NT {WINDOWS_NT_INFO_STRING_PLURAL = 0x4000009D,WINDOWS_NT_RC_STRING = 0x4000009E,};
enum MACRO__FREEENTRY {_FREEENTRY = 0,_USEDENTRY = 1,};
enum MACRO__HEAPEMPTY {_HEAPEMPTY = -1,};
enum MACRO__P_NOWAITO {_P_NOWAITO = 3,_P_DETACH = 4,};
enum MACRO__SECURECRT {_SECURECRT_FILL_BUFFER_PATTERN = 0xFE,};
typedef struct _ADC8229B35D2FBAA1DBEA2E6CF74A72A MARK_HANDLE_INFO;
typedef struct _MCFG_TABLE_ENTRY MCFG_TABLE_ENTRY;
typedef struct _5DB42174B48D54F5127552AD4BBA26D1 MFT_ENUM_DATA_V0;
typedef struct _F81C3DA38AA87E09A89CEC7FF6997E89 MFT_ENUM_DATA_V1;
typedef struct _MINIRDR_DISPATCH MINIRDR_DISPATCH;
typedef struct _MODE_FORMAT_PAGE MODE_FORMAT_PAGE;
typedef struct _MOUSE_ATTRIBUTES MOUSE_ATTRIBUTES;
typedef struct _MOUSE_INPUT_DATA MOUSE_INPUT_DATA;
typedef struct _MPIO_DSM_Path_V2 MPIO_DSM_Path_V2;
typedef struct _MSFC_EventBuffer MSFC_EventBuffer;
typedef struct _MSFC_TargetEvent MSFC_TargetEvent;
typedef struct _MSNdis_LinkSpeed MSNdis_LinkSpeed;
typedef struct _MSNdis_PortArray MSNdis_PortArray;
typedef struct _MSV1_0_S4U_LOGON MSV1_0_S4U_LOGON;
typedef struct _MSiSCSI_Eventlog MSiSCSI_Eventlog;
typedef struct _NDIS_802_11_SSID NDIS_802_11_SSID;
typedef struct _NDIS_802_11_TEST NDIS_802_11_TEST;
typedef struct _NDIS_MAC_LINE_UP NDIS_MAC_LINE_UP;
typedef struct _NDIS_OID_REQUEST NDIS_OID_REQUEST;
typedef struct _NDIS_TAPI_ACCEPT NDIS_TAPI_ACCEPT;
typedef struct _NDIS_TAPI_ANSWER NDIS_TAPI_ANSWER;
typedef struct _NDIS_TAPI_GET_ID NDIS_TAPI_GET_ID;
typedef struct _NDIS_WAN_CO_INFO NDIS_WAN_CO_INFO;
typedef struct _NDIS_WAN_LINE_UP NDIS_WAN_LINE_UP;
typedef struct _NDIS_WMI_OFFLOAD NDIS_WMI_OFFLOAD;
typedef struct _NDK_ADAPTER_INFO NDK_ADAPTER_INFO;
typedef struct _NDK_SRQ_DISPATCH NDK_SRQ_DISPATCH;
typedef struct nd_opt_rd_hdr ND_OPTION_RD_HDR;
typedef struct _OBJECT_TYPE_LIST OBJECT_TYPE_LIST;
typedef struct oligsmwaveformat_tag OLIGSMWAVEFORMAT;
typedef struct olioprwaveformat_tag OLIOPRWAVEFORMAT;
typedef struct olisbcwaveformat_tag OLISBCWAVEFORMAT;
typedef struct _OSVERSIONINFOEXA OSVERSIONINFOEXA;
typedef struct _OSVERSIONINFOEXW OSVERSIONINFOEXW;
typedef struct _AAL1_PARAMETERS *PAAL1_PARAMETERS;
typedef struct _AAL5_PARAMETERS *PAAL5_PARAMETERS;
typedef struct _ACPI_MSCT_ENTRY *PACPI_MSCT_ENTRY;
typedef struct _ACPI_SRAT_ENTRY *PACPI_SRAT_ENTRY;
typedef struct _ACPI_WPBT_TABLE *PACPI_WPBT_TABLE;
typedef struct tagACT_AUTHZ_STATE *PACT_AUTHZ_STATE;
typedef struct tagACT_QUEUE_STATE *PACT_QUEUE_STATE;
typedef struct _AGP_INFO_COMMON *PAGP_INFO_COMMON;
typedef struct _AGP_INFO_DRIVER *PAGP_INFO_DRIVER;
typedef struct _AVC_COMMAND_IRB *PAVC_COMMAND_IRB;
typedef struct _BDA_DISEQC_SEND *PBDA_DISEQC_SEND;
typedef struct _BDA_PIN_PAIRING *PBDA_PIN_PAIRING;
typedef union _BM_REQUEST_TYPE *PBM_REQUEST_TYPE;
typedef struct _BTH_DEVICE_INFO *PBTH_DEVICE_INFO;
typedef struct _CALLBACK_OBJECT *PCALLBACK_OBJECT;
typedef struct _CDROM_DISK_DATA *PCDROM_DISK_DATA;
typedef struct _CDROM_SET_SPEED *PCDROM_SET_SPEED;
typedef struct _CDVD_KEY_HEADER *PCDVD_KEY_HEADER;
typedef struct _CHANGER_ELEMENT *PCHANGER_ELEMENT;
typedef struct _CHAR_IMAGE_INFO *PCHAR_IMAGE_INFO;
typedef struct _CIP_HDR2_MPEGTS *PCIP_HDR2_MPEGTS;
typedef struct _CIP_NOTIFY_INFO *PCIP_NOTIFY_INFO;
typedef struct _2319D0803FA8D60BE4B5925A7A9CB62F PCI_X_CAPABILITY;
typedef struct _CLASS_INIT_DATA *PCLASS_INIT_DATA;
typedef struct _CLS_INFORMATION *PCLS_INFORMATION;
typedef struct _CLS_WRITE_ENTRY *PCLS_WRITE_ENTRY;
typedef struct _CMC_DRIVER_INFO *PCMC_DRIVER_INFO;
typedef struct _PCMETHOD_REQUEST PCMETHOD_REQUEST;
typedef struct _CMP_CREATE_PLUG *PCMP_CREATE_PLUG;
typedef struct _CMP_DELETE_PLUG *PCMP_DELETE_PLUG;
typedef struct _CMP_NOTIFY_INFO *PCMP_NOTIFY_INFO;
typedef struct _CM_MCA_POS_DATA *PCM_MCA_POS_DATA;
typedef struct _CONTROLLER_INFO *PCONTROLLER_INFO;
typedef struct _CO_ADDRESS_LIST *PCO_ADDRESS_LIST;
typedef struct _CO_TAPI_CM_CAPS *PCO_TAPI_CM_CAPS;
typedef struct _CPE_DRIVER_INFO *PCPE_DRIVER_INFO;
typedef struct _07D0DEFC473073A5B78BC3974C364183 PCPIN_DESCRIPTOR;
typedef struct _CREATE_DISK_GPT *PCREATE_DISK_GPT;
typedef struct _CREATE_DISK_MBR *PCREATE_DISK_MBR;
typedef struct _DIRECTORY_ENTRY *PDIRECTORY_ENTRY;
typedef struct _DISK_INT13_INFO *PDISK_INT13_INFO;
typedef struct DOT11_BSS_ENTRY *PDOT11_BSS_ENTRY;
typedef struct _DOT11_PEER_INFO *PDOT11_PEER_INFO;
typedef struct DOT11_SSID_LIST *PDOT11_SSID_LIST;
typedef struct _DOT11_UPDATE_IE *PDOT11_UPDATE_IE;
typedef struct _DOT4_DRIVER_CMD *PDOT4_DRIVER_CMD;
typedef struct _DXGK_START_INFO *PDXGK_START_INFO;
typedef struct _ETHERNET_HEADER *PETHERNET_HEADER;
typedef struct _FCB_INIT_PACKET *PFCB_INIT_PACKET;
typedef struct _FCP_GET_REQUEST *PFCP_GET_REQUEST;
typedef struct _FILE_LEVEL_TRIM *PFILE_LEVEL_TRIM;
typedef struct _FONT_IMAGE_INFO *PFONT_IMAGE_INFO;
typedef struct _GET_MEDIA_TYPES *PGET_MEDIA_TYPES;
typedef struct _HBAFCPScsiEntry *PHBAFCPScsiEntry;
typedef struct HBA_FCPBinding2 *PHBA_FCPBINDING2;
typedef struct _HIDP_REPORT_IDS *PHIDP_REPORT_IDS;
typedef struct _HIDP_VALUE_CAPS *PHIDP_VALUE_CAPS;
typedef struct _HID_XFER_PACKET *PHID_XFER_PACKET;
typedef struct _HOOK_IP_ADDRESS *PHOOK_IP_ADDRESS;
typedef struct _HW_CLOCK_OBJECT *PHW_CLOCK_OBJECT;
typedef struct _HW_TIME_CONTEXT *PHW_TIME_CONTEXT;
typedef struct _IDE_REGISTERS_1 *PIDE_REGISTERS_1;
typedef struct _IDE_REGISTERS_2 *PIDE_REGISTERS_2;
typedef struct _INET_PORT_RANGE *PINET_PORT_RANGE;
typedef struct _IO_STATUS_BLOCK *PIO_STATUS_BLOCK;
typedef struct _KEY_VALUE_ENTRY *PKEY_VALUE_ENTRY;
typedef struct _12065485545C98CF3EA596DDCCDF0ED5 *PKSAC3_ROOM_TYPE;
typedef struct _872ED6AFBC09867EE86BBF274F8CE85A *PKSCLOCKINSTANCE;
typedef struct _C18AA754B44D3B0CE088F6A6B0863744 *PKSDISPLAYCHANGE;
typedef struct _KSFILTERFACTORY *PKSFILTERFACTORY;
typedef struct _D5F4E645249F637B2C3C729A114CD9D6 *PKSIDEFAULTCLOCK;
typedef struct _D0C2582348DF16EE31650672742EA602 *PKSMULTIPLE_ITEM;
typedef struct _42F99BA4BF00EE2B1B9AFA99FBE7C8B1 *PKSOBJECT_CREATE;
typedef struct _33D5B48BFB25F68EBEA0D059F2171BBA *PKSPROPERTY_ITEM;
typedef struct _87CE1B284ED7C4D9787DE2C17B5E3229 *PKSSTREAM_HEADER;
typedef struct tagKS_AMVPDATAINFO *PKS_AMVPDATAINFO;
typedef struct _EEDA301819F8EA8D15C0ADB3D7583498 *PKS_FRAMING_ITEM;
typedef struct _KernelIdleState *PKernelIdleState;
typedef struct _KernelPerfState *PKernelPerfState;
typedef struct _LINE_DEV_STATUS *PLINE_DEV_STATUS;
typedef struct _LLDP_STATISTICS *PLLDP_STATISTICS;
typedef struct _LOWIO_LOCK_LIST *PLOWIO_LOCK_LIST;
typedef struct _MCA_DRIVER_INFO *PMCA_DRIVER_INFO;
typedef struct _MF_RESOURCE_MAP *PMF_RESOURCE_MAP;
typedef IMiniportWavePci *PMINIPORTWAVEPCI;
typedef struct _PMI_CAPABILITIES PMI_CAPABILITIES;
typedef struct _MPIO_DRIVE_INFO *PMPIO_DRIVE_INFO;
typedef struct _MPIO_EventEntry *PMPIO_EventEntry;
typedef struct _MSMCAInfo_Entry *PMSMCAInfo_Entry;
typedef struct _MSNdis_PortChar *PMSNdis_PortChar;
typedef struct _MSNdis_VendorID *PMSNdis_VendorID;
typedef IMusicTechnology *PMUSICTECHNOLOGY;
typedef struct _NABTSFEC_BUFFER *PNABTSFEC_BUFFER;
typedef struct _NDIS_802_11_KEY *PNDIS_802_11_KEY;
typedef struct _NDIS_802_11_WEP *PNDIS_802_11_WEP;
typedef struct _NDIS_LINK_SPEED *PNDIS_LINK_SPEED;
typedef struct _NDIS_LINK_STATE *PNDIS_LINK_STATE;
typedef struct _NDIS_OPEN_BLOCK *PNDIS_OPEN_BLOCK;
typedef struct _NDIS_OPER_STATE *PNDIS_OPER_STATE;
typedef struct _NDIS_PORT_ARRAY *PNDIS_PORT_ARRAY;
typedef struct _NDIS_PORT_STATE *PNDIS_PORT_STATE;
typedef struct _NDIS_RW_LOCK_EX *PNDIS_RW_LOCK_EX;
typedef struct _NDIS_TAPI_CLOSE *PNDIS_TAPI_CLOSE;
typedef struct _NDIS_TAPI_EVENT *PNDIS_TAPI_EVENT;
typedef struct _NDIS_WLAN_BSSID *PNDIS_WLAN_BSSID;
typedef struct _NETWORK_ADDRESS *PNETWORK_ADDRESS;
typedef struct _NET_BUFFER_DATA *PNET_BUFFER_DATA;
typedef struct _NET_BUFFER_LIST *PNET_BUFFER_LIST;
typedef struct _NET_IF_ALIAS_LH *PNET_IF_ALIAS_LH;
typedef struct _NTFS_STATISTICS *PNTFS_STATISTICS;
typedef struct _OCR_REGISTER_V2 *POCR_REGISTER_V2;
typedef struct _OPC_TABLE_ENTRY *POPC_TABLE_ENTRY;
typedef struct _PATHNAME_BUFFER *PPATHNAME_BUFFER;
typedef struct _PCEVENT_REQUEST *PPCEVENT_REQUEST;
typedef struct _PCI_AGP_CONTROL *PPCI_AGP_CONTROL;
typedef struct _PCI_SLOT_NUMBER *PPCI_SLOT_NUMBER;
typedef struct _1C1547A44DB0B6456BF86742FC40B205 *PPCPROPERTY_ITEM;
typedef struct _PDO_INFORMATION *PPDO_INFORMATION;
typedef struct _PMKID_CANDIDATE *PPMKID_CANDIDATE;
typedef struct _PO_FX_DEVICE_V1 *PPO_FX_DEVICE_V1;
typedef struct _PO_FX_DEVICE_V2 *PPO_FX_DEVICE_V2;
typedef struct _QUERY_HOOK_INFO *PQUERY_HOOK_INFO;
typedef struct _QUERY_INTERFACE *PQUERY_INTERFACE;
typedef struct _QUOTA_LIMITS_EX *PQUOTA_LIMITS_EX;
typedef struct _RDBSS_SCAVENGER *PRDBSS_SCAVENGER;
typedef struct _REASSIGN_BLOCKS *PREASSIGN_BLOCKS;
typedef struct _RIO_CMSG_BUFFER *PRIO_CMSG_BUFFER;
typedef struct _PROCESSOR_NUMBER PROCESSOR_NUMBER;
typedef struct _RXCE_CONNECTION_ *PRXCE_CONNECTION;
typedef struct _RX_PREFIX_ENTRY *PRX_PREFIX_ENTRY;
typedef struct _RX_PREFIX_TABLE *PRX_PREFIX_TABLE;
typedef struct _RegisteredGuids *PRegisteredGuids;
typedef struct _RemoveTarget_IN *PRemoveTarget_IN;
typedef struct _SDP_NODE_HEADER *PSDP_NODE_HEADER;
typedef struct _SENDCMDINPARAMS *PSENDCMDINPARAMS;
typedef struct _SE_ACCESS_REPLY *PSE_ACCESS_REPLY;
typedef struct _SMARTCARD_REPLY *PSMARTCARD_REPLY;
typedef struct SMHBA_ScsiEntry *PSMHBA_SCSIENTRY;
typedef struct sockaddr_in6 *PSOCKADDR_IN6_LH;
typedef struct _SYSENV_VARIABLE *PSYSENV_VARIABLE;
typedef struct _ScsiInquiry_OUT *PScsiInquiry_OUT;
typedef struct _SendTargets_OUT *PSendTargets_OUT;
typedef struct _TAPE_STATISTICS *PTAPE_STATISTICS;
typedef struct _TDI_ADDRESS_IPX *PTDI_ADDRESS_IPX;
typedef struct _TDI_ADDRESS_VNS *PTDI_ADDRESS_VNS;
typedef struct _TOKEN_ELEVATION *PTOKEN_ELEVATION;
typedef struct tagTRANSPORTSTATUS *PTRANSPORTSTATUS;
typedef struct _B09E3BE94FE30150210BFD831422B212 *PTRANSPORT_STATE;
typedef struct _UNIT_DIAG_LEVEL *PUNIT_DIAG_LEVEL;
typedef union _USB_PORT_CHANGE *PUSB_PORT_CHANGE;
typedef union _USB_PORT_STATUS *PUSB_PORT_STATUS;
typedef struct _VIDEOPARAMETERS *PVIDEOPARAMETERS;
typedef struct _VIDEO_NUM_MODES *PVIDEO_NUM_MODES;
typedef struct _VPOSVERSIONINFO *PVPOSVERSIONINFO;
typedef struct _WAKE_TIMER_INFO *PWAKE_TIMER_INFO;
typedef union _WHEA_PCIXBUS_ID *PWHEA_PCIXBUS_ID;
typedef struct tagWNODE_TOO_SMALL *PWNODE_TOO_SMALL;
typedef struct _WORK_QUEUE_ITEM *PWORK_QUEUE_ITEM;
typedef struct _WST_BUFFER_LINE *PWST_BUFFER_LINE;
typedef struct _WWAN_PIN_ACTION *PWWAN_PIN_ACTION;
typedef struct _WWAN_READY_INFO *PWWAN_READY_INFO;
typedef struct _WWAN_SMS_FILTER *PWWAN_SMS_FILTER;
typedef struct _WWAN_SMS_STATUS *PWWAN_SMS_STATUS;
typedef struct _WWAN_USSD_EVENT *PWWAN_USSD_EVENT;
typedef struct _PingIPAddress_IN PingIPAddress_IN;
typedef struct _Q2931_DELETE_PVC Q2931_DELETE_PVC;
typedef struct _QOS_SHAPING_RATE QOS_SHAPING_RATE;
typedef union _RATE_QUOTA_LIMIT RATE_QUOTA_LIMIT;
typedef struct _76743BAC06EF1EE4A95E434A18762A4D RATING_ATTRIBUTE;
typedef struct _RESP_PEEK_NMPIPE RESP_PEEK_NMPIPE;
typedef struct _RX_CONNECTION_ID RX_CONNECTION_ID;
typedef struct _RX_IRP_LIST_ITEM RX_IRP_LIST_ITEM;
typedef struct _RemoveTarget_OUT RemoveTarget_OUT;
typedef struct _SCARD_IO_REQUEST SCARD_IO_REQUEST;
typedef struct _A26E898CA2658C153BF5293169564991 SCARD_T0_COMMAND;
typedef struct _81CBD782E1765289C4F89D039AD60F12 SCARD_T0_REQUEST;
typedef struct _8B9777916333A4B8A3A60FA8F93F002E SCARD_T1_REQUEST;
typedef struct _SCRUB_DATA_INPUT SCRUB_DATA_INPUT;
typedef struct _SDCMD_DESCRIPTOR SDCMD_DESCRIPTOR;
enum SDP_SPECIFICTYPE {SDP_ST_NONE = 0x0,SDP_ST_UINT8 = 0x10,SDP_ST_UINT16 = 0x110,SDP_ST_UINT32 = 0x210,SDP_ST_UINT64 = 0x310,SDP_ST_UINT128 = 0x410,SDP_ST_INT8 = 0x20,SDP_ST_INT16 = 0x120,SDP_ST_INT32 = 0x220,SDP_ST_INT64 = 0x320,SDP_ST_INT128 = 0x420,SDP_ST_UUID16 = 0x130,SDP_ST_UUID32 = 0x220,SDP_ST_UUID128 = 0x430,};
typedef struct _SENDCMDOUTPARAMS SENDCMDOUTPARAMS;
typedef struct _SMB_FIND_BUFFER2 SMB_FIND_BUFFER2;
typedef struct sonarcwaveformat_tag SONARCWAVEFORMAT;
typedef struct _SRBEX_DATA_POWER SRBEX_DATA_POWER;
typedef struct _SRB_HISTORY_ITEM SRB_HISTORY_ITEM;
typedef struct _STOR_LOCK_HANDLE STOR_LOCK_HANDLE;
typedef struct _STOR_POFX_DEVICE STOR_POFX_DEVICE;
typedef struct _STOR_SLIST_ENTRY STOR_SLIST_ENTRY;
typedef unsigned long long STREAM_TIMESTAMP;
typedef struct _SUB_Q_TRACK_ISRC SUB_Q_TRACK_ISRC;
typedef struct _SYSTEM_ALARM_ACE SYSTEM_ALARM_ACE;
typedef struct _SYSTEM_AUDIT_ACE SYSTEM_AUDIT_ACE;
typedef struct _TAPE_WRITE_MARKS TAPE_WRITE_MARKS;
typedef struct _TDI_ADDRESS_8022 TDI_ADDRESS_8022;
typedef struct _TDI_ADDRESS_INFO TDI_ADDRESS_INFO;
typedef struct _TDI_REQUEST_SEND TDI_REQUEST_SEND;
typedef union _TDI_REQUEST_TYPE TDI_REQUEST_TYPE;
typedef struct _THROTTLING_STATE THROTTLING_STATE;
typedef struct _TOKEN_PRIVILEGES TOKEN_PRIVILEGES;
typedef struct _TOKEN_STATISTICS TOKEN_STATISTICS;
enum TransmissionMode {BDA_XMIT_MODE_NOT_SET = 0xFFFFFFFF,BDA_XMIT_MODE_NOT_DEFINED = 0x0,BDA_XMIT_MODE_2K = 0x1,BDA_XMIT_MODE_8K = 0x2,BDA_XMIT_MODE_4K = 0x3,BDA_XMIT_MODE_2K_INTERLEAVED = 0x4,BDA_XMIT_MODE_4K_INTERLEAVED = 0x5,BDA_XMIT_MODE_1K = 0x6,BDA_XMIT_MODE_16K = 0x7,BDA_XMIT_MODE_32K = 0x8,BDA_XMIT_MODE_MAX = 0x9,};
typedef struct _UNIT_DDI_VERSION UNIT_DDI_VERSION;
typedef struct tag_video_configure_parms VIDEOCONFIGPARMS;
typedef struct tag_video_open_parms VIDEO_OPEN_PARMS;
typedef struct wavefilter_volume_tag VOLUMEWAVEFILTER;
typedef struct tagWNODE_EVENT_ITEM WNODE_EVENT_ITEM;
typedef struct _WSK_PROVIDER_NPI WSK_PROVIDER_NPI;
typedef struct _WSK_REGISTRATION WSK_REGISTRATION;
typedef struct _WSK_TDI_MAP_INFO WSK_TDI_MAP_INFO;
typedef struct _WWAN_DEVICE_CAPS WWAN_DEVICE_CAPS;
typedef struct _WWAN_DRIVER_CAPS WWAN_DRIVER_CAPS;
typedef struct _WWAN_LIST_HEADER WWAN_LIST_HEADER;
typedef struct _WWAN_RADIO_STATE WWAN_RADIO_STATE;
typedef struct _WWAN_SET_CONTEXT WWAN_SET_CONTEXT;
typedef struct _WWAN_USSD_STRING WWAN_USSD_STRING;
enum _BGRT_IMAGE_TYPE {BgrtImageTypeBitmap = 0x0,BgrtImageTypeMax = 0x1,};
struct _CIP_HDR2_MPEGTS {unsigned int TSF : 1;unsigned int RSV23bit : 23;unsigned int FMT : 6;unsigned int Bit10 : 2;};
typedef int (*_CRT_REPORT_HOOK)(int, char *, int *);
enum _D3DDDI_ROTATION {D3DDDI_ROTATION_IDENTITY = 0x1,D3DDDI_ROTATION_90 = 0x2,D3DDDI_ROTATION_180 = 0x3,D3DDDI_ROTATION_270 = 0x4,};
struct _DIRECTORY_ENTRY {unsigned int Value : 24;unsigned int KeyId : 6;unsigned int KeyType : 2;};
enum _DISK_SAN_POLICY {DiskSanPolicyUnknown = 0x0,DiskSanPolicyOnline = 0x1,DiskSanPolicyOfflineShared = 0x2,DiskSanPolicyOffline = 0x3,DiskSanPolicyOfflineInternal = 0x4,DiskSanPolicyMax = 0x5,};
enum _DOT11_SCAN_TYPE {dot11_scan_type_active = 0x1,dot11_scan_type_passive = 0x2,dot11_scan_type_auto = 0x3,dot11_scan_type_forced = 0x80000000,};
enum _DOT11_TEMP_TYPE {dot11_temp_type_unknown = 0x0,dot11_temp_type_1 = 0x1,dot11_temp_type_2 = 0x2,};
enum _DXGK_EVENT_TYPE {DxgkUndefinedEvent = 0x0,DxgkAcpiEvent = 0x1,DxgkPowerStateEvent = 0x2,DxgkDockingEvent = 0x3,};
enum _ENUMERATOR_TYPE {ENUMERATOR_TYPE_PROTOCOL = 0x0,ENUMERATOR_TYPE_SERVICE = 0x1,ENUMERATOR_TYPE_DEVICE = 0x2,ENUMERATOR_TYPE_MAX = 0x3,};
enum _FILTER_CALLBACK {CallbackDumpInit = 0x0,CallbackDumpStart = 0x1,CallbackDumpWrite = 0x2,CallbackDumpFinish = 0x3,CallbackDumpRead = 0x4,CallbackMaxCallback = 0x5,};
enum _INDICATION_CODE {IndicationAddReference = 0x0,IndicationReleaseReference = 0x1,IndicationRemoteConnect = 0x2,IndicationRemoteDisconnect = 0x3,IndicationRemoteConfigRequest = 0x4,IndicationRemoteConfigResponse = 0x5,IndicationFreeExtraOptions = 0x6,IndicationRecvPacket = 0x7,IndicationPairDevice = 0x8,IndicationUnpairDevice = 0x9,IndicationUnpersonalizeDevice = 0xA,IndicationRemoteConnectLE = 0xB,};
enum _IVHD_ENTRY_TYPE {IvhdEntryTypePad4 = 0x0,IvhdEntryTypeAll = 0x1,IvhdEntryTypeSelect = 0x2,IvhdEntryTypeStartRange = 0x3,IvhdEntryTypeEndRange = 0x4,IvhdEntryTypePad8 = 0x40,IvhdEntryTypeAliasSelect = 0x42,IvhdEntryTypeAliasStartRange = 0x43,IvhdEntryTypeExtendedSelect = 0x46,IvhdEntryTypeExtendedStartRange = 0x47,IvhdEntryTypeSpecialDevice = 0x48,};
enum _IVRS_BLOCK_TYPE {IommuDefinitionBlockTypeIvhd = 0x10,IommuDefinitionBlockTypeIvmdAll = 0x20,IommuDefinitionBlockTypeIvmdSpecified = 0x21,IommuDefinitionBlockTypeIvmdRange = 0x22,};
enum _KDPC_IMPORTANCE {LowImportance = 0x0,MediumImportance = 0x1,HighImportance = 0x2,MediumHighImportance = 0x3,};
enum _KINTERRUPT_MODE {LevelSensitive = 0x0,Latched = 0x1,};
enum _KPROFILE_SOURCE {ProfileTime = 0x0,ProfileAlignmentFixup = 0x1,ProfileTotalIssues = 0x2,ProfilePipelineDry = 0x3,ProfileLoadInstructions = 0x4,ProfilePipelineFrozen = 0x5,ProfileBranchInstructions = 0x6,ProfileTotalNonissues = 0x7,ProfileDcacheMisses = 0x8,ProfileIcacheMisses = 0x9,ProfileCacheMisses = 0xA,ProfileBranchMispredictions = 0xB,ProfileStoreInstructions = 0xC,ProfileFpInstructions = 0xD,ProfileIntegerInstructions = 0xE,Profile2Issue = 0xF,Profile3Issue = 0x10,Profile4Issue = 0x11,ProfileSpecialInstructions = 0x12,ProfileTotalCycles = 0x13,ProfileIcacheIssues = 0x14,ProfileDcacheAccesses = 0x15,ProfileMemoryBarrierCycles = 0x16,ProfileLoadLinkedIssues = 0x17,ProfileMaximum = 0x18,};
enum _MANDATORY_LEVEL {MandatoryLevelUntrusted = 0x0,MandatoryLevelLow = 0x1,MandatoryLevelMedium = 0x2,MandatoryLevelHigh = 0x3,MandatoryLevelSystem = 0x4,MandatoryLevelSecureProcess = 0x5,MandatoryLevelCount = 0x6,};
struct _NDIS_OPEN_BLOCK;
struct _NDIS_RW_LOCK_EX;
enum _NDK_OBJECT_TYPE {NdkObjectTypeUndefined = 0x0,NdkObjectTypeAdapter = 0x1,NdkObjectTypeQp = 0x2,NdkObjectTypeCq = 0x3,NdkObjectTypeMr = 0x4,NdkObjectTypeMw = 0x5,NdkObjectTypePd = 0x6,NdkObjectTypeSharedEndpoint = 0x7,NdkObjectTypeConnector = 0x8,NdkObjectTypeListener = 0x9,NdkObjectTypeSrq = 0xA,NdkObjectTypeMax = 0xB,};
enum _NL_ROUTE_ORIGIN {NlroManual = 0x0,NlroWellKnown = 0x1,NlroDHCP = 0x2,NlroRouterAdvertisement = 0x3,Nlro6to4 = 0x4,};
enum _NT_PRODUCT_TYPE {NtProductWinNt = 0x1,NtProductLanManNt = 0x2,NtProductServer = 0x3,};
struct _OCR_REGISTER_V2 {unsigned int Reserved1 : 7;unsigned int VoltageProfile1 : 1;unsigned int Reserved2 : 7;unsigned int VoltageProfile2 : 9;unsigned int Reserved3 : 6;unsigned int CardCapacityStatus : 1;unsigned int PowerState : 1;};
enum _PARTITION_STYLE {PARTITION_STYLE_MBR = 0x0,PARTITION_STYLE_GPT = 0x1,PARTITION_STYLE_RAW = 0x2,};
struct _PCI_AGP_CONTROL {unsigned int Rsvd1 : 7;unsigned int GTLB_Enable : 1;unsigned int AP_Enable : 1;unsigned int CAL_Disable : 1;unsigned int Rsvd2 : 22;};
enum _PC_EXIT_LATENCY {PcExitLatencyInstant = 0x0,PcExitLatencyFast = 0x1,PcExitLatencyResponsive = 0x2,};
enum _RTC_ErrorNumber {_RTC_CHKSTK = 0x0,_RTC_CVRT_LOSS_INFO = 0x1,_RTC_CORRUPT_STACK = 0x2,_RTC_UNINIT_LOCAL_USE = 0x3,_RTC_CORRUPTED_ALLOCA = 0x4,_RTC_ILLEGAL = 0x5,};
struct _RTL_SPLAY_LINKS {struct _RTL_SPLAY_LINKS *Parent;struct _RTL_SPLAY_LINKS *LeftChild;struct _RTL_SPLAY_LINKS *RightChild;};
enum _RX_RDBSS_STATE_ {RDBSS_STARTABLE = 0x0,RDBSS_STARTED = 0x1,RDBSS_STOP_IN_PROGRESS = 0x2,};
enum _SECTION_INHERIT {ViewShare = 0x1,ViewUnmap = 0x2,};
enum _STREAM_PRIORITY {High = 0x0,Dispatch = 0x1,Low = 0x2,LowToHigh = 0x3,};
enum _THREADINFOCLASS {ThreadBasicInformation = 0x0,ThreadTimes = 0x1,ThreadPriority = 0x2,ThreadBasePriority = 0x3,ThreadAffinityMask = 0x4,ThreadImpersonationToken = 0x5,ThreadDescriptorTableEntry = 0x6,ThreadEnableAlignmentFaultFixup = 0x7,ThreadEventPair_Reusable = 0x8,ThreadQuerySetWin32StartAddress = 0x9,ThreadZeroTlsCell = 0xA,ThreadPerformanceCount = 0xB,ThreadAmILastThread = 0xC,ThreadIdealProcessor = 0xD,ThreadPriorityBoost = 0xE,ThreadSetTlsArrayAddress = 0xF,ThreadIsIoPending = 0x10,ThreadHideFromDebugger = 0x11,ThreadBreakOnTermination = 0x12,ThreadSwitchLegacyState = 0x13,ThreadIsTerminated = 0x14,ThreadLastSystemCall = 0x15,ThreadIoPriority = 0x16,ThreadCycleTime = 0x17,ThreadPagePriority = 0x18,ThreadActualBasePriority = 0x19,ThreadTebInformation = 0x1A,ThreadCSwitchMon = 0x1B,ThreadCSwitchPmu = 0x1C,ThreadWow64Context = 0x1D,ThreadGroupInformation = 0x1E,ThreadUmsInformation = 0x1F,ThreadCounterProfiling = 0x20,ThreadIdealProcessorEx = 0x21,ThreadCpuAccountingInformation = 0x22,MaxThreadInfoClass = 0x23,};
enum _TRACK_MODE_TYPE {YellowMode2 = 0x0,XAForm2 = 0x1,CDDA = 0x2,RawWithC2AndSubCode = 0x3,RawWithC2 = 0x4,RawWithSubCode = 0x5,};
enum _TUNNEL_SUB_TYPE {TUNNEL_SUB_TYPE_NONE = 0x0,TUNNEL_SUB_TYPE_CP = 0x1,TUNNEL_SUB_TYPE_IPTLS = 0x2,TUNNEL_SUB_TYPE_HA = 0x3,};
enum _USB_DEVICE_TYPE {Usb11Device = 0x0,Usb20Device = 0x1,};
enum _VIDEO_BANK_TYPE {VideoNotBanked = 0x0,VideoBanked1RW = 0x1,VideoBanked1R1W = 0x2,VideoBanked2RW = 0x3,NumVideoBankTypes = 0x4,};
enum _VPD_ASSOCIATION {VpdAssocDevice = 0x0,VpdAssocPort = 0x1,VpdAssocTarget = 0x2,VpdAssocReserved1 = 0x3,VpdAssocReserved2 = 0x4,};
enum _WHEA_CPU_VENDOR {WheaCpuVendorOther = 0x0,WheaCpuVendorIntel = 0x1,WheaCpuVendorAmd = 0x2,};
enum _WHEA_ERROR_TYPE {WheaErrTypeProcessor = 0x0,WheaErrTypeMemory = 0x1,WheaErrTypePCIExpress = 0x2,WheaErrTypeNMI = 0x3,WheaErrTypePCIXBus = 0x4,WheaErrTypePCIXDevice = 0x5,WheaErrTypeGeneric = 0x6,};
enum _WORK_QUEUE_TYPE {CriticalWorkQueue = 0x0,DelayedWorkQueue = 0x1,HyperCriticalWorkQueue = 0x2,NormalWorkQueue = 0x3,BackgroundWorkQueue = 0x4,RealTimeWorkQueue = 0x5,SuperCriticalWorkQueue = 0x6,MaximumWorkQueue = 0x7,CustomPriorityWorkQueue = 0x20,};
enum _WWAN_MSG_STATUS {WwanMsgStatusNew = 0x0,WwanMsgStatusOld = 0x1,WwanMsgStatusDraft = 0x2,WwanMsgStatusSent = 0x3,WwanMsgStatusMax = 0x4,};
enum _WWAN_PIN_FORMAT {WwanPinFormatUnknown = 0x0,WwanPinFormatNumeric = 0x1,WwanPinFormatAlphaNumeric = 0x2,WwanPinFormatMax = 0x3,};
enum _WWAN_SMS_FORMAT {WwanSmsFormatPdu = 0x0,WwanSmsFormatReserved0 = 0x1,WwanSmsFormatReserved1 = 0x2,WwanSmsFormatReserved2 = 0x3,WwanSmsFormatCdma = 0x4,WwanSmsFormatMax = 0x5,};
enum _tagAVC_FUNCTION {AVC_FUNCTION_COMMAND = 0x0,AVC_FUNCTION_GET_PIN_COUNT = 0x1,AVC_FUNCTION_GET_PIN_DESCRIPTOR = 0x2,AVC_FUNCTION_GET_CONNECTINFO = 0x3,AVC_FUNCTION_SET_CONNECTINFO = 0x4,AVC_FUNCTION_ACQUIRE = 0x5,AVC_FUNCTION_RELEASE = 0x6,AVC_FUNCTION_CLR_CONNECTINFO = 0x7,AVC_FUNCTION_GET_EXT_PLUG_COUNTS = 0x8,AVC_FUNCTION_GET_UNIQUE_ID = 0x9,AVC_FUNCTION_GET_REQUEST = 0xA,AVC_FUNCTION_SEND_RESPONSE = 0xB,AVC_FUNCTION_FIND_PEER_DO = 0xC,AVC_FUNCTION_PEER_DO_LIST = 0xD,AVC_FUNCTION_GET_SUBUNIT_INFO = 0xE,};
typedef struct _AAL1_PARAMETERS AAL1_PARAMETERS;
typedef struct _AAL5_PARAMETERS AAL5_PARAMETERS;
typedef struct _ACPI_ENUM_CHILD ACPI_ENUM_CHILD;
typedef struct _ACPI_MSCT_ENTRY ACPI_MSCT_ENTRY;
typedef struct _ACPI_SRAT_ENTRY ACPI_SRAT_ENTRY;
typedef struct _ACPI_WPBT_TABLE ACPI_WPBT_TABLE;
typedef struct tagACT_AUTHZ_STATE ACT_AUTHZ_STATE;
typedef struct tagACT_QUEUE_STATE ACT_QUEUE_STATE;
typedef struct adpcmwaveformat_tag ADPCMWAVEFORMAT;
typedef struct _AGP_INFO_COMMON AGP_INFO_COMMON;
typedef struct _AGP_INFO_DRIVER AGP_INFO_DRIVER;
typedef struct _AVC_COMMAND_IRB AVC_COMMAND_IRB;
typedef struct _BDA_DISEQC_SEND BDA_DISEQC_SEND;
typedef struct _BDA_PIN_PAIRING BDA_PIN_PAIRING;
typedef union _BM_REQUEST_TYPE BM_REQUEST_TYPE;
typedef struct _BTH_DEVICE_INFO BTH_DEVICE_INFO;
typedef struct _CDROM_DISK_DATA CDROM_DISK_DATA;
typedef struct _CDROM_SET_SPEED CDROM_SET_SPEED;
typedef struct _CDVD_KEY_HEADER CDVD_KEY_HEADER;
typedef struct _CHANGER_ELEMENT CHANGER_ELEMENT;
typedef struct _CHAR_IMAGE_INFO CHAR_IMAGE_INFO;
typedef struct _CIP_HDR2_MPEGTS CIP_HDR2_MPEGTS;
typedef struct _CIP_NOTIFY_INFO CIP_NOTIFY_INFO;
typedef struct _CLASS_INIT_DATA CLASS_INIT_DATA;
typedef struct _CLS_INFORMATION CLS_INFORMATION;
typedef struct _CLS_WRITE_ENTRY CLS_WRITE_ENTRY;
typedef struct _CMC_DRIVER_INFO CMC_DRIVER_INFO;
typedef struct _CMP_CREATE_PLUG CMP_CREATE_PLUG;
typedef struct _CMP_DELETE_PLUG CMP_DELETE_PLUG;
typedef struct _CMP_NOTIFY_INFO CMP_NOTIFY_INFO;
typedef struct _CM_MCA_POS_DATA CM_MCA_POS_DATA;
typedef struct _CONTROLLER_INFO CONTROLLER_INFO;
typedef struct _CO_ADDRESS_LIST CO_ADDRESS_LIST;
typedef struct _CO_TAPI_CM_CAPS CO_TAPI_CM_CAPS;
typedef struct _CPE_DRIVER_INFO CPE_DRIVER_INFO;
typedef struct _CREATE_DISK_GPT CREATE_DISK_GPT;
typedef struct _CREATE_DISK_MBR CREATE_DISK_MBR;
typedef struct _ChannelTypeInfo ChannelTypeInfo;
enum ComponentStatus {StatusActive = 0x0,StatusInactive = 0x1,StatusUnavailable = 0x2,};
struct D3DDDI_DXGI_RGB {float Red;float Green;float Blue;};
typedef struct _D3DDDI_RATIONAL D3DDDI_RATIONAL;
typedef void *D3DKMDT_ADAPTER;
typedef struct _90FA911F5F1D4FE086DF5A0612D3E63E DFS_REFERRAL_V1;
typedef struct _FAF6A73AFD9895CF3E56308E3C23E916 DFS_REFERRAL_V2;
typedef struct _C62299E2FAA36942CDE27418DA4FF5CB DFS_REFERRAL_V3;
typedef struct _DIRECTORY_ENTRY DIRECTORY_ENTRY;
typedef struct _DISK_INT13_INFO DISK_INT13_INFO;
enum DOT11_DIRECTION {DOT11_DIR_INBOUND = 0x1,DOT11_DIR_OUTBOUND = 0x2,DOT11_DIR_BOTH = 0x3,};
typedef struct _DOT11_PEER_INFO DOT11_PEER_INFO;
typedef struct _DOT11_UPDATE_IE DOT11_UPDATE_IE;
typedef struct _DOT4_DRIVER_CMD DOT4_DRIVER_CMD;
typedef struct _DXGKARG_PRESENT DXGKARG_PRESENT;
typedef struct _DXGK_DEVICEINFO DXGK_DEVICEINFO;
typedef struct _DXGK_DRIVERCAPS DXGK_DRIVERCAPS;
typedef struct _DXGK_ENUM_PIVOT DXGK_ENUM_PIVOT;
typedef struct _DXGK_PATCHFLAGS DXGK_PATCHFLAGS;
typedef struct _DXGK_START_INFO DXGK_START_INFO;
typedef struct _DXGK_VIDSCHCAPS DXGK_VIDSCHCAPS;
typedef struct _ETHERNET_HEADER ETHERNET_HEADER;
typedef struct _FCB_INIT_PACKET FCB_INIT_PACKET;
typedef struct _FCP_GET_REQUEST FCP_GET_REQUEST;
typedef struct _FILE_LEVEL_TRIM FILE_LEVEL_TRIM;
typedef struct _FONT_IMAGE_INFO FONT_IMAGE_INFO;
typedef struct _GENERIC_MAPPING GENERIC_MAPPING;
typedef struct _GET_MEDIA_TYPES GET_MEDIA_TYPES;
typedef struct _GIC_DISTRIBUTOR GIC_DISTRIBUTOR;
typedef struct _HBAFCPScsiEntry HBAFCPScsiEntry;
typedef struct HBA_FCPBinding2 HBA_FCPBINDING2;
typedef struct heaacwaveformat_tag HEAACWAVEFORMAT;
typedef struct _HIDP_REPORT_IDS HIDP_REPORT_IDS;
typedef struct _HIDP_VALUE_CAPS HIDP_VALUE_CAPS;
typedef struct _HID_XFER_PACKET HID_XFER_PACKET;
typedef struct _HOOK_IP_ADDRESS HOOK_IP_ADDRESS;
struct HWINEVENTHOOK__ {int unused;};
typedef struct _HW_CLOCK_OBJECT HW_CLOCK_OBJECT;
typedef struct _HW_TIME_CONTEXT HW_TIME_CONTEXT;
typedef struct _IDE_REGISTERS_1 IDE_REGISTERS_1;
typedef struct _IDE_REGISTERS_2 IDE_REGISTERS_2;
struct IDrmAudioStream {struct IDrmAudioStreamVtbl *lpVtbl;};
typedef struct _IMAGE_SYMBOL_EX IMAGE_SYMBOL_EX;
struct IMiniportWaveRT {struct IMiniportWaveRTVtbl *lpVtbl;};
typedef struct _INET_PORT_RANGE INET_PORT_RANGE;
typedef struct _IO_STATUS_BLOCK IO_STATUS_BLOCK;
struct IPortClsVersion {struct IPortClsVersionVtbl *lpVtbl;};
struct IPortWaveCyclic {struct IPortWaveCyclicVtbl *lpVtbl;};
struct IPreFetchOffset {struct IPreFetchOffsetVtbl *lpVtbl;};
typedef struct _IRB_REQ_CONTROL IRB_REQ_CONTROL;
typedef struct _KEY_VALUE_ENTRY KEY_VALUE_ENTRY;
typedef struct _12065485545C98CF3EA596DDCCDF0ED5 KSAC3_ROOM_TYPE;
typedef struct _872ED6AFBC09867EE86BBF274F8CE85A KSCLOCKINSTANCE;
typedef struct _C18AA754B44D3B0CE088F6A6B0863744 KSDISPLAYCHANGE;
typedef struct _KSFILTERFACTORY KSFILTERFACTORY;
typedef struct _D5F4E645249F637B2C3C729A114CD9D6 KSIDEFAULTCLOCK;
typedef struct _D0C2582348DF16EE31650672742EA602 KSMULTIPLE_ITEM;
typedef struct _42F99BA4BF00EE2B1B9AFA99FBE7C8B1 KSOBJECT_CREATE;
typedef struct _33D5B48BFB25F68EBEA0D059F2171BBA KSPROPERTY_ITEM;
typedef struct _742D342C7048E2C3902DF7570B72F6FC KSRELATIVEEVENT;
typedef struct _87CE1B284ED7C4D9787DE2C17B5E3229 KSSTREAM_HEADER;
typedef struct tagKS_AMVPDATAINFO KS_AMVPDATAINFO;
typedef struct _EEDA301819F8EA8D15C0ADB3D7583498 KS_FRAMING_ITEM;
typedef struct _KernelIdleState KernelIdleState;
typedef struct _KernelPerfState KernelPerfState;
typedef struct _LINE_DEV_STATUS LINE_DEV_STATUS;
typedef struct _LLDP_STATISTICS LLDP_STATISTICS;
typedef struct _LOCAL_NMISOURCE LOCAL_NMISOURCE;
typedef struct _LOWIO_LOCK_LIST LOWIO_LOCK_LIST;
typedef struct _DDPIXELFORMAT *LPDDPIXELFORMAT;
typedef struct _595A1F057E8A453471581C9A3BFF13FD *LPRATING_SYSTEM;
enum MACRO_ACPI_BIOS {ACPI_BIOS_ERROR = 0xA5,FP_EMULATION_ERROR = 0xA6,};
enum MACRO_ACPI_EVAL {ACPI_EVAL_INPUT_BUFFER_SIGNATURE = 1114203457,ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_SIGNATURE = 1231643969,ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_SIGNATURE = 1399416129,ACPI_EVAL_INPUT_BUFFER_COMPLEX_SIGNATURE = 1130980673,ACPI_EVAL_OUTPUT_BUFFER_SIGNATURE = 1114596673,ACPI_EVAL_INPUT_BUFFER_SIGNATURE_EX = 1097426241,ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_SIGNATURE_EX = 1147757889,ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_SIGNATURE_EX = 1164535105,ACPI_EVAL_INPUT_BUFFER_COMPLEX_SIGNATURE_EX = 1181312321,ACPI_ENUM_CHILDREN_OUTPUT_BUFFER_SIGNATURE = 1198089537,ACPI_ENUM_CHILDREN_INPUT_BUFFER_SIGNATURE = 1214866753,};
enum MACRO_ATA_FLAGS {ATA_FLAGS_DRDY_REQUIRED = 1,ATA_FLAGS_DATA_IN = 2,ATA_FLAGS_DATA_OUT = 4,ATA_FLAGS_48BIT_COMMAND = 8,ATA_FLAGS_USE_DMA = 16,ATA_FLAGS_NO_MULTIPLE = 32,};
enum MACRO_ATM_CAUSE {ATM_CAUSE_LOC_USER = 0x0,ATM_CAUSE_LOC_PRIVATE_LOCAL = 0x1,ATM_CAUSE_LOC_PUBLIC_LOCAL = 0x2,ATM_CAUSE_LOC_TRANSIT_NETWORK = 0x3,ATM_CAUSE_LOC_PUBLIC_REMOTE = 0x4,ATM_CAUSE_LOC_PRIVATE_REMOTE = 0x5,ATM_CAUSE_LOC_INTERNATIONAL_NETWORK = 0x7,ATM_CAUSE_LOC_BEYOND_INTERWORKING = 0xA,ATM_CAUSE_UNALLOCATED_NUMBER = 0x1,ATM_CAUSE_NO_ROUTE_TO_TRANSIT_NETWORK = 0x2,ATM_CAUSE_NO_ROUTE_TO_DESTINATION = 0x3,ATM_CAUSE_VPI_VCI_UNACCEPTABLE = 0xA,ATM_CAUSE_NORMAL_CALL_CLEARING = 0x10,ATM_CAUSE_USER_BUSY = 0x11,ATM_CAUSE_NO_USER_RESPONDING = 0x12,ATM_CAUSE_CALL_REJECTED = 0x15,ATM_CAUSE_NUMBER_CHANGED = 0x16,ATM_CAUSE_USER_REJECTS_CLIR = 0x17,ATM_CAUSE_DESTINATION_OUT_OF_ORDER = 0x1B,ATM_CAUSE_INVALID_NUMBER_FORMAT = 0x1C,ATM_CAUSE_STATUS_ENQUIRY_RESPONSE = 0x1E,ATM_CAUSE_NORMAL_UNSPECIFIED = 0x1F,ATM_CAUSE_VPI_VCI_UNAVAILABLE = 0x23,ATM_CAUSE_NETWORK_OUT_OF_ORDER = 0x26,ATM_CAUSE_TEMPORARY_FAILURE = 0x29,ATM_CAUSE_ACCESS_INFORMAION_DISCARDED = 0x2B,ATM_CAUSE_NO_VPI_VCI_AVAILABLE = 0x2D,ATM_CAUSE_RESOURCE_UNAVAILABLE = 0x2F,ATM_CAUSE_QOS_UNAVAILABLE = 0x31,ATM_CAUSE_USER_CELL_RATE_UNAVAILABLE = 0x33,ATM_CAUSE_BEARER_CAPABILITY_UNAUTHORIZED = 0x39,ATM_CAUSE_BEARER_CAPABILITY_UNAVAILABLE = 0x3A,ATM_CAUSE_OPTION_UNAVAILABLE = 0x3F,ATM_CAUSE_BEARER_CAPABILITY_UNIMPLEMENTED = 0x41,ATM_CAUSE_UNSUPPORTED_TRAFFIC_PARAMETERS = 0x49,ATM_CAUSE_INVALID_CALL_REFERENCE = 0x51,ATM_CAUSE_CHANNEL_NONEXISTENT = 0x52,ATM_CAUSE_INCOMPATIBLE_DESTINATION = 0x58,ATM_CAUSE_INVALID_ENDPOINT_REFERENCE = 0x59,ATM_CAUSE_INVALID_TRANSIT_NETWORK_SELECTION = 0x5B,ATM_CAUSE_TOO_MANY_PENDING_ADD_PARTY = 0x5C,ATM_CAUSE_AAL_PARAMETERS_UNSUPPORTED = 0x5D,ATM_CAUSE_MANDATORY_IE_MISSING = 0x60,ATM_CAUSE_UNIMPLEMENTED_MESSAGE_TYPE = 0x61,ATM_CAUSE_UNIMPLEMENTED_IE = 0x63,ATM_CAUSE_INVALID_IE_CONTENTS = 0x64,ATM_CAUSE_INVALID_STATE_FOR_MESSAGE = 0x65,ATM_CAUSE_RECOVERY_ON_TIMEOUT = 0x66,ATM_CAUSE_INCORRECT_MESSAGE_LENGTH = 0x68,ATM_CAUSE_PROTOCOL_ERROR = 0x6F,ATM_CAUSE_COND_UNKNOWN = 0x0,ATM_CAUSE_COND_PERMANENT = 0x1,ATM_CAUSE_COND_TRANSIENT = 0x2,ATM_CAUSE_REASON_USER = 0x0,ATM_CAUSE_REASON_IE_MISSING = 0x4,ATM_CAUSE_REASON_IE_INSUFFICIENT = 0x8,ATM_CAUSE_PU_PROVIDER = 0x0,ATM_CAUSE_PU_USER = 0x8,ATM_CAUSE_NA_NORMAL = 0x0,ATM_CAUSE_NA_ABNORMAL = 0x4,ATM_MEDIA_SPECIFIC = 0x1,};
enum MACRO_ATTEMPTED {ATTEMPTED_SWITCH_FROM_DPC = 0xB8,};
enum MACRO_ATTRIBUTE {ATTRIBUTE_VM_PASSTHROUGH_LUN = 0x1,};
enum MACRO_AddTarget {AddTarget = 10,};
enum MACRO_AudioType {AudioType_Standard = 0,AudioType_Music_And_Effects = 1,AudioType_Visually_Impaired = 2,AudioType_Hearing_Impaired = 3,AudioType_Dialogue = 4,AudioType_Commentary = 5,AudioType_Emergency = 6,AudioType_Voiceover = 7,AudioType_Reserved = -1,};
enum MACRO_BALLPOINT {BALLPOINT_I8042_HARDWARE = 0x8,BALLPOINT_SERIAL_HARDWARE = 0x10,};
enum MACRO_BITLOCKER {BITLOCKER_FATAL_ERROR = 0x120,};
enum MACRO_BMREQUEST {BMREQUEST_HOST_TO_DEVICE = 0,BMREQUEST_DEVICE_TO_HOST = 1,BMREQUEST_STANDARD = 0,BMREQUEST_CLASS = 1,BMREQUEST_VENDOR = 2,BMREQUEST_TO_DEVICE = 0,BMREQUEST_TO_INTERFACE = 1,BMREQUEST_TO_ENDPOINT = 2,BMREQUEST_TO_OTHER = 3,};
enum MACRO_BROADCAST {BROADCAST_VC = 0x8,MULTIPOINT_VC = 0x10,};
enum MACRO_BUS_ERROR {DATA_BUS_ERROR = 0x2E,INSTRUCTION_BUS_ERROR = 0x2F,};
enum MACRO_BUS_RESET {BUS_RESET_FLAGS_PERFORM_RESET = 1,BUS_RESET_FLAGS_FORCE_ROOT = 2,};
enum MACRO_CDB_AUDIO {CDB_AUDIO_PAUSE = 0,CDB_AUDIO_RESUME = 1,CDB_DEVICE_START = 17,CDB_DEVICE_STOP = 16,CDB_EJECT_MEDIA = 16,CDB_LOAD_MEDIA = 1,CDB_SUBCHANNEL_HEADER = 0,CDB_SUBCHANNEL_BLOCK = 1,};
enum MACRO_CHAR_TYPE {CHAR_TYPE_SBCS = 0,CHAR_TYPE_LEADING = 2,CHAR_TYPE_TRAILING = 3,};
enum MACRO_CLASS_TAG {CLASS_TAG_AUTORUN_DISABLE = 1095525203,CLASS_TAG_FILE_OBJECT_EXTENSION = 1179411283,CLASS_TAG_MEDIA_CHANGE_DETECTION = 1296851795,CLASS_TAG_MOUNT = 1833722707,CLASS_TAG_RELEASE_QUEUE = 1900831571,CLASS_TAG_POWER = 1464623955,CLASS_TAG_WMI = 2001494867,CLASS_TAG_FAILURE_PREDICT = 1716282195,CLASS_TAG_DEVICE_CONTROL = 1330209619,CLASS_TAG_MODE_DATA = 1867277139,CLASS_TAG_MULTIPATH = 1833984851,CLASS_TAG_LOCK_TRACKING = 1414292307,CLASS_TAG_LB_PROVISIONING = 1347183443,};
enum MACRO_CLFS_MGMT {CLFS_MGMT_CLIENT_REGISTRATION_VERSION = 0x1,};
enum MACRO_CONTEXT_E {CONTEXT_E_FIRST = 0x8004E000,CONTEXT_E_LAST = 0x8004E02F,CONTEXT_S_FIRST = 0x4E000,CONTEXT_S_LAST = 0x4E02F,CONTEXT_E_ABORTED = 0x8004E002,CONTEXT_E_ABORTING = 0x8004E003,CONTEXT_E_NOCONTEXT = 0x8004E004,CONTEXT_E_WOULD_DEADLOCK = 0x8004E005,CONTEXT_E_SYNCH_TIMEOUT = 0x8004E006,CONTEXT_E_OLDREF = 0x8004E007,CONTEXT_E_ROLENOTFOUND = 0x8004E00C,CONTEXT_E_TMNOTAVAILABLE = 0x8004E00F,};
enum MACRO_CONVERT10 {CONVERT10_E_FIRST = 0x800401C0,CONVERT10_E_LAST = 0x800401CF,CONVERT10_S_FIRST = 0x401C0,CONVERT10_S_LAST = 0x401CF,CONVERT10_E_OLESTREAM_GET = 0x800401C0,CONVERT10_E_OLESTREAM_PUT = 0x800401C1,CONVERT10_E_OLESTREAM_FMT = 0x800401C2,CONVERT10_E_OLESTREAM_BITMAP_TO_DIB = 0x800401C3,CONVERT10_E_STG_FMT = 0x800401C4,CONVERT10_E_STG_NO_STD_STREAM = 0x800401C5,CONVERT10_E_STG_DIB_TO_BITMAP = 0x800401C6,};
enum MACRO_DBG_REPLY {DBG_REPLY_LATER = 0x40010001,DBG_UNABLE_TO_PROVIDE_HANDLE = 0x40010002,DBG_TERMINATE_THREAD = 0x40010003,DBG_TERMINATE_PROCESS = 0x40010004,DBG_CONTROL_C = 0x40010005,DBG_PRINTEXCEPTION_C = 0x40010006,DBG_RIPEXCEPTION = 0x40010007,DBG_CONTROL_BREAK = 0x40010008,DBG_COMMAND_EXCEPTION = 0x40010009,};
enum MACRO_DBL_RADIX {DBL_RADIX = 2,DBL_ROUNDS = 1,};
enum MACRO_DEVICE_UI {DEVICE_UI_FIRMWARE_REVISION_FirmwareRevision_ID = 1,MSVerifierIrpLogEntry_Count_ID = 1,MSVerifierIrpLogEntry_Major_ID = 2,MSVerifierIrpLogEntry_Minor_ID = 3,MSVerifierIrpLogEntry_Flags_ID = 4,MSVerifierIrpLogEntry_Control_ID = 5,MSVerifierIrpLogEntry_Arg1_ID = 6,MSVerifierIrpLogEntry_Arg2_ID = 7,MSVerifierIrpLogEntry_Arg3_ID = 8,MSVerifierIrpLogEntry_Arg4_ID = 9,MSVerifierIrpLogInformation_DeviceType_ID = 1,MSVerifierIrpLogInformation_EntryCount_ID = 2,MSVerifierIrpLogInformation_Entries_ID = 3,WmiMonitorBrightness_CurrentBrightness_ID = 1,WmiMonitorBrightness_Levels_ID = 2,WmiMonitorBrightness_Level_ID = 3,};
enum MACRO_DEVPROPID {DEVPROPID_FIRST_USABLE = 2,};
enum MACRO_DFS_ERROR {DFS_ERROR_CREATE_REPARSEPOINT_FAILURE = 0xC00038A7,DFS_ERROR_UNSUPPORTED_FILESYSTEM = 0xC00038A8,DFS_ERROR_OVERLAPPING_DIRECTORIES = 0xC00038A9,DFS_INFO_ACTIVEDIRECTORY_ONLINE = 0x400038AC,DFS_ERROR_TOO_MANY_ERRORS = 0xC00038AD,DFS_ERROR_WINSOCKINIT_FAILED = 0xC00038AE,DFS_ERROR_SECURITYINIT_FAILED = 0xC00038AF,DFS_ERROR_THREADINIT_FAILED = 0xC00038B0,DFS_ERROR_SITECACHEINIT_FAILED = 0xC00038B1,DFS_ERROR_ROOTSYNCINIT_FAILED = 0xC00038B2,DFS_ERROR_CREATEEVENT_FAILED = 0xC00038B3,DFS_ERROR_COMPUTERINFO_FAILED = 0xC00038B4,DFS_ERROR_CLUSTERINFO_FAILED = 0xC00038B5,DFS_ERROR_DCINFO_FAILED = 0xC00038B6,DFS_ERROR_PREFIXTABLE_FAILED = 0xC00038B7,DFS_ERROR_HANDLENAMESPACE_FAILED = 0xC00038B8,DFS_ERROR_REGISTERSTORE_FAILED = 0xC00038B9,DFS_ERROR_REFLECTIONENGINE_FAILED = 0xC00038BA,DFS_ERROR_ACTIVEDIRECTORY_OFFLINE = 0xC00038BB,DFS_ERROR_SITESUPPOR_FAILED = 0xC00038BC,DFS_ERROR_DSCONNECT_FAILED = 0x800038BE,DFS_INFO_DS_RECONNECTED = 0x400038C1,DFS_ERROR_NO_DFS_DATA = 0xC00038C2,DFS_INFO_FINISH_INIT = 0x400038C3,DFS_INFO_RECONNECT_DATA = 0x400038C4,DFS_INFO_FINISH_BUILDING_NAMESPACE = 0x400038C5,DFS_ERROR_ON_ROOT = 0x800038C6,DFS_ERROR_MUTLIPLE_ROOTS_NOT_SUPPORTED = 0xC00038C7,DFS_WARN_DOMAIN_REFERRAL_OVERFLOW = 0x800038C8,DFS_INFO_DOMAIN_REFERRAL_MIN_OVERFLOW = 0x400038C9,DFS_WARN_INCOMPLETE_MOVE = 0x800038CA,DFS_ERROR_RESYNCHRONIZE_FAILED = 0xC00038CB,DFS_ERROR_REMOVE_LINK_FAILED = 0xC00038CC,DFS_WARN_METADATA_LINK_TYPE_INCORRECT = 0x800038CD,DFS_WARN_METADATA_LINK_INFO_INVALID = 0x800038CE,DFS_ERROR_TARGET_LIST_INCORRECT = 0xC00038CF,DFS_ERROR_LINKS_OVERLAP = 0xC00038D0,DFS_ERROR_LINK_OVERLAP = 0xC00038D1,DFS_ERROR_CREATE_REPARSEPOINT_SUCCESS = 0x400038D2,DFS_ERROR_DUPLICATE_LINK = 0xC00038D3,DFS_ERROR_TRUSTED_DOMAIN_INFO_FAILED = 0xC00038D4,DFS_INFO_TRUSTED_DOMAIN_INFO_SUCCESS = 0x400038D5,DFS_ERROR_CROSS_FOREST_TRUST_INFO_FAILED = 0xC00038D6,DFS_INFO_CROSS_FOREST_TRUST_INFO_SUCCESS = 0x400038D7,DFS_INIT_SUCCESS = 0x400038D8,DFS_ROOT_SHARE_ACQUIRE_FAILED = 0x800038D9,DFS_ROOT_SHARE_ACQUIRE_SUCCESS = 0x400038DA,};
enum MACRO_DIAGLEVEL {DIAGLEVEL_NONE = 0x0,DIAGLEVEL_IGNORE_OPLUG = 0x1,DIAGLEVEL_IGNORE_IPLUG = 0x2,DIAGLEVEL_SET_CHANNEL_63 = 0x4,DIAGLEVEL_IPCR_IGNORE_FREE = 0x8,DIAGLEVEL_HIDE_OPLUG = 0x10,DIAGLEVEL_IPCR_ALWAYS_ALLOC = 0x20,DIAGLEVEL_SPECIFY_BLOCKSIZE = 0x40,};
enum MACRO_DIRECTORY {DIRECTORY_QUERY = 0x1,DIRECTORY_TRAVERSE = 0x2,DIRECTORY_CREATE_OBJECT = 0x4,DIRECTORY_CREATE_SUBDIRECTORY = 0x8,DIRECTORY_ALL_ACCESS = 0xF000F,};
enum MACRO_DISCHARGE {DISCHARGE_POLICY_CRITICAL = 0,DISCHARGE_POLICY_LOW = 1,};
enum MACRO_DISCOVERY {DISCOVERY_FILTER_BITMASK_DEVICE = 0x1,DISCOVERY_FILTER_BITMASK_GO = 0x2,DISCOVERY_FILTER_BITMASK_ANY = 0xF,};
enum MACRO_DISK_TYPE {DISK_TYPE_CDDA = 0x0,DISK_TYPE_CDI = 0x10,DISK_TYPE_XA = 0x20,DISK_TYPE_UNDEFINED = 0xFF,};
enum MACRO_DISPLAYID {DISPLAYID_DETAILED_TIMING_TYPE_I_SIZE = 20,D3DKMDT_MACROVISION_OEMCOPYPROTECTION_SIZE = 256,};
enum MACRO_DOT11_BSS {DOT11_BSS_ENTRY_BYTE_ARRAY_REVISION_1 = 1,};
enum MACRO_DOT11_CCA {DOT11_CCA_MODE_ED_ONLY = 0x1,DOT11_CCA_MODE_CS_ONLY = 0x2,DOT11_CCA_MODE_ED_and_CS = 0x4,DOT11_CCA_MODE_CS_WITH_TIMER = 0x8,DOT11_CCA_MODE_HRCS_AND_ED = 0x10,};
enum MACRO_DOT11_MAC {DOT11_MAC_ADDRESS_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_MAX {DOT11_MAX_PDU_SIZE = 2346,DOT11_MIN_PDU_SIZE = 256,DOT11_MAX_NUM_DEFAULT_KEY = 4,DOT11_MAX_NUM_DEFAULT_KEY_MFP = 6,};
enum MACRO_DOT11_PHY {DOT11_PHY_TYPE_LIST_REVISION_1 = 1,};
enum MACRO_DOT11_QOS {DOT11_QOS_PARAMS_REVISION_1 = 1,DOT11_QOS_PROTOCOL_FLAG_WMM = 1,DOT11_QOS_PROTOCOL_FLAG_11E = 2,};
enum MACRO_DOT11_REG {DOT11_REG_DOMAIN_OTHER = 0x0,DOT11_REG_DOMAIN_FCC = 0x10,DOT11_REG_DOMAIN_DOC = 0x20,DOT11_REG_DOMAIN_ETSI = 0x30,DOT11_REG_DOMAIN_SPAIN = 0x31,DOT11_REG_DOMAIN_FRANCE = 0x32,DOT11_REG_DOMAIN_MKK = 0x40,};
enum MACRO_DOT11_RSN {DOT11_RSN_KEK_LENGTH = 16,DOT11_RSN_KCK_LENGTH = 16,};
enum MACRO_DOT11_WFD {DOT11_WFD_ATTRIBUTES_REVISION_1 = 1,DOT11_WFD_STATUS_SUCCESS = 0,DOT11_WFD_STATUS_FAILED_INFORMATION_IS_UNAVAILABLE = 1,DOT11_WFD_STATUS_FAILED_INCOMPATIBLE_PARAMETERS = 2,DOT11_WFD_STATUS_FAILED_LIMIT_REACHED = 3,DOT11_WFD_STATUS_FAILED_INVALID_PARAMETERS = 4,DOT11_WFD_STATUS_FAILED_UNABLE_TO_ACCOMODATE_REQUEST = 5,DOT11_WFD_STATUS_FAILED_PREVIOUS_PROTOCOL_ERROR = 6,DOT11_WFD_STATUS_FAILED_NO_COMMON_CHANNELS = 7,DOT11_WFD_STATUS_FAILED_UNKNOWN_WFD_GROUP = 8,DOT11_WFD_STATUS_FAILED_MATCHING_MAX_INTENT = 9,DOT11_WFD_STATUS_FAILED_INCOMPATIBLE_PROVISIONING_METHOD = 10,DOT11_WFD_STATUS_FAILED_REJECTED_BY_USER = 11,DOT11_WFD_MINOR_REASON_SUCCESS = 0,DOT11_WFD_MINOR_REASON_DISASSOCIATED_FROM_WLAN_CROSS_CONNECTION_POLICY = 1,DOT11_WFD_MINOR_REASON_DISASSOCIATED_NOT_MANAGED_INFRASTRUCTURE_CAPABLE = 2,DOT11_WFD_MINOR_REASON_DISASSOCIATED_WFD_COEXISTENCE_POLICY = 3,DOT11_WFD_MINOR_REASON_DISASSOCIATED_INFRASTRUCTURE_MANAGED_POLICY = 4,DOT11_WPS_VERSION_1_0 = 1,DOT11_WPS_VERSION_2_0 = 2,DOT11_WFD_GROUP_CAPABILITY_NONE = 0,DOT11_WFD_GROUP_CAPABILITY_GROUP_OWNER = 1,DOT11_WFD_GROUP_CAPABILITY_PERSISTENT_GROUP = 2,DOT11_WFD_GROUP_CAPABILITY_GROUP_LIMIT_REACHED = 4,DOT11_WFD_GROUP_CAPABILITY_INTRABSS_DISTRIBUTION_SUPPORTED = 8,DOT11_WFD_GROUP_CAPABILITY_CROSS_CONNECTION_SUPPORTED = 16,DOT11_WFD_GROUP_CAPABILITY_PERSISTENT_RECONNECT_SUPPORTED = 32,DOT11_WFD_GROUP_CAPABILITY_IN_GROUP_FORMATION = 64,DOT11_WFD_GROUP_CAPABILITY_RESERVED_7 = 128,DOT11_WPS_DEVICE_NAME_MAX_LENGTH = 32,DOT11_WFD_DISCOVER_COMPLETE_PARAMETERS_REVISION_1 = 1,DOT11_WFD_DISCOVER_COMPLETE_MAX_LIST_SIZE = 128,DOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS_REVISION_1 = 1,DOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS_REVISION_1 = 1,DOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS_REVISION_1 = 1,DOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS_REVISION_1 = 1,DOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS_REVISION_1 = 1,DOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS_REVISION_1 = 1,DOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS_REVISION_1 = 1,DOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS_REVISION_1 = 1,DOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS_REVISION_1 = 1,DOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS_REVISION_1 = 1,DOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS_REVISION_1 = 1,DOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS_REVISION_1 = 1,DOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS_REVISION_1 = 1,DOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS_REVISION_1 = 1,};
enum MACRO_DO_DEVICE {DO_DEVICE_HAS_NAME = 0x40,DO_SYSTEM_BOOT_PARTITION = 0x100,DO_LONG_TERM_REQUESTS = 0x200,DO_NEVER_LAST_DEVICE = 0x400,DO_LOW_PRIORITY_FILESYSTEM = 0x10000,DO_SUPPORTS_TRANSACTIONS = 0x40000,DO_FORCE_NEITHER_IO = 0x80000,DO_VOLUME_DEVICE_OBJECT = 0x100000,DO_SYSTEM_SYSTEM_PARTITION = 0x200000,DO_SYSTEM_CRITICAL_PARTITION = 0x400000,DO_DISALLOW_EXECUTE = 0x800000,};
enum MACRO_DUPLICATE {DUPLICATE_CLOSE_SOURCE = 0x1,DUPLICATE_SAME_ACCESS = 0x2,DUPLICATE_SAME_ATTRIBUTES = 0x4,};
enum MACRO_DXGK_ACPI {DXGK_ACPI_POLL_DISPLAY_CHILDREN = 0x1,DXGK_ACPI_CHANGE_DISPLAY_MODE = 0x2,DXGK_ACPI_CHANGE_DISPLAY_TOPOLOGY = 0x4,DXGK_EXCLUDE_EVICT_ALL = 0x1,DXGK_EXCLUDE_CALL_SYNCHRONOUS = 0x2,DXGK_EXCLUDE_BRIDGE_ACCESS = 0x4,DXGK_EXCLUDE_EVICT_STANDBY = 0x8,DXGK_EXCLUDE_EVICT_HIBERNATE = 0x10,DXGK_EXCLUDE_EVICT_SHUTDOWN = 0x20,DXGK_EXCLUDE_D3_STATE_TRANSITION = 0x40,DXGK_MAX_STRING_LEN = 0x32,DXGK_MAX_REG_SZ_LEN = 0x33,DXGK_WHICHSPACE_CONFIG = 0x0,DXGK_WHICHSPACE_ROM = 0x52696350,DXGK_WHICHSPACE_MCH = 0x80000000,DXGK_WHICHSPACE_BRIDGE = 0x80000001,DXGK_I2C_INTERFACE_VERSION_1 = 0x1,DXGK_OPM_INTERFACE_VERSION_1 = 0x1,DXGK_BRIGHTNESS_INTERFACE_VERSION_1 = 0x1,DXGK_BRIGHTNESS_INTERFACE_VERSION_2 = 0x2,DXGK_AGP_INTERFACE_VERSION_1 = 0x1,DXGK_AGPCOMMAND_AGP1X = 0x1,DXGK_AGPCOMMAND_AGP2X = 0x2,DXGK_AGPCOMMAND_AGP4X = 0x4,DXGK_AGPCOMMAND_AGP8X = 0x8,DXGK_AGPCOMMAND_DISABLE_SBA = 0x10000,DXGK_AGPCOMMAND_DISABLE_FW = 0x20000,DXGK_DEBUG_REPORT_INTERFACE_VERSION_1 = 0x1,DXGK_DEBUG_REPORT_MAX_SIZE = 0xF800,DXGK_TIMED_OPERATION_INTERFACE_VERSION_1 = 0x1,DXGK_TIMED_OPERATION_TIMEOUT_MAX_SECONDS = 0x5,DXGK_SPB_INTERFACE_VERSION_1 = 0x1,DXGK_FIRMWARE_TABLE_INTERFACE_VERSION_1 = 0x1,DXGK_ACPI_PASS_ARGS_TO_CHILDREN = 0x61726150,DXGK_ACPI_USE_ACPI_UID = 0x20646955,};
enum MACRO_ENCRYPTED {ENCRYPTED_DATA_INFO_SPARSE_FILE = 1,};
enum MACRO_ERROR_DBG {ERROR_DBG_CREATE_PROCESS_FAILURE_LOCKDOWN = 0x80B00001,ERROR_DBG_ATTACH_PROCESS_FAILURE_LOCKDOWN = 0x80B00002,ERROR_DBG_CONNECT_SERVER_FAILURE_LOCKDOWN = 0x80B00003,ERROR_DBG_START_SERVER_FAILURE_LOCKDOWN = 0x80B00004,};
enum MACRO_ERROR_FLT {ERROR_FLT_IO_COMPLETE = 0x1F0001,ERROR_FLT_NO_HANDLER_DEFINED = 0x801F0001,ERROR_FLT_CONTEXT_ALREADY_DEFINED = 0x801F0002,ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST = 0x801F0003,ERROR_FLT_DISALLOW_FAST_IO = 0x801F0004,ERROR_FLT_INVALID_NAME_REQUEST = 0x801F0005,ERROR_FLT_NOT_SAFE_TO_POST_OPERATION = 0x801F0006,ERROR_FLT_NOT_INITIALIZED = 0x801F0007,ERROR_FLT_FILTER_NOT_READY = 0x801F0008,ERROR_FLT_POST_OPERATION_CLEANUP = 0x801F0009,ERROR_FLT_INTERNAL_ERROR = 0x801F000A,ERROR_FLT_DELETING_OBJECT = 0x801F000B,ERROR_FLT_MUST_BE_NONPAGED_POOL = 0x801F000C,ERROR_FLT_DUPLICATE_ENTRY = 0x801F000D,ERROR_FLT_CBDQ_DISABLED = 0x801F000E,ERROR_FLT_DO_NOT_ATTACH = 0x801F000F,ERROR_FLT_DO_NOT_DETACH = 0x801F0010,ERROR_FLT_INSTANCE_ALTITUDE_COLLISION = 0x801F0011,ERROR_FLT_INSTANCE_NAME_COLLISION = 0x801F0012,ERROR_FLT_FILTER_NOT_FOUND = 0x801F0013,ERROR_FLT_VOLUME_NOT_FOUND = 0x801F0014,ERROR_FLT_INSTANCE_NOT_FOUND = 0x801F0015,ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND = 0x801F0016,ERROR_FLT_INVALID_CONTEXT_REGISTRATION = 0x801F0017,ERROR_FLT_NAME_CACHE_MISS = 0x801F0018,ERROR_FLT_NO_DEVICE_OBJECT = 0x801F0019,ERROR_FLT_VOLUME_ALREADY_MOUNTED = 0x801F001A,ERROR_FLT_ALREADY_ENLISTED = 0x801F001B,ERROR_FLT_CONTEXT_ALREADY_LINKED = 0x801F001C,ERROR_FLT_NO_WAITER_FOR_REPLY = 0x801F0020,ERROR_FLT_REGISTRATION_BUSY = 0x801F0023,ERROR_HUNG_DISPLAY_DRIVER_THREAD = 0x80260001,};
enum MACRO_ERROR_LOG {ERROR_LOG_LIMIT_SIZE = 240,};
enum MACRO_EVENT_FRS {EVENT_FRS_ROOT_NOT_VALID = 0xC00034E3,EVENT_FRS_STAGE_NOT_VALID = 0xC00034E4,EVENT_FRS_OVERLAPS_LOGGING = 0xC00034E5,EVENT_FRS_OVERLAPS_WORKING = 0xC00034E6,EVENT_FRS_OVERLAPS_STAGE = 0xC00034E7,EVENT_FRS_OVERLAPS_ROOT = 0xC00034E8,EVENT_FRS_OVERLAPS_OTHER_STAGE = 0xC00034E9,EVENT_FRS_PREPARE_ROOT_FAILED = 0xC00034EA,EVENT_FRS_BAD_REG_DATA = 0x800034EB,EVENT_FRS_JOIN_FAIL_TIME_SKEW = 0xC00034EC,EVENT_FRS_RMTCO_TIME_SKEW = 0xC00034ED,EVENT_FRS_CANT_OPEN_STAGE = 0xC00034EE,EVENT_FRS_CANT_OPEN_PREINSTALL = 0xC00034EF,EVENT_FRS_REPLICA_SET_CREATE_FAIL = 0xC00034F0,EVENT_FRS_REPLICA_SET_CREATE_OK = 0x400034F1,EVENT_FRS_REPLICA_SET_CXTIONS = 0x400034F2,EVENT_FRS_IN_ERROR_STATE = 0xC00034F3,EVENT_FRS_REPLICA_NO_ROOT_CHANGE = 0xC00034F4,EVENT_FRS_DUPLICATE_IN_CXTION_SYSVOL = 0xC00034F5,EVENT_FRS_DUPLICATE_IN_CXTION = 0xC00034F6,EVENT_FRS_ROOT_HAS_MOVED = 0xC00034F7,EVENT_FRS_ERROR_REPLICA_SET_DELETED = 0x800034F8,EVENT_FRS_REPLICA_IN_JRNL_WRAP_ERROR = 0xC00034F9,EVENT_FRS_DS_POLL_ERROR_SUMMARY = 0x800034FA,EVENT_PS_GPC_REGISTER_FAILED = 0xC00036B0,EVENT_PS_NO_RESOURCES_FOR_INIT = 0xC00036B1,EVENT_PS_REGISTER_PROTOCOL_FAILED = 0xC00036B2,EVENT_PS_REGISTER_MINIPORT_FAILED = 0xC00036B3,EVENT_PS_BAD_BESTEFFORT_LIMIT = 0x80003714,EVENT_PS_QUERY_OID_GEN_MAXIMUM_FRAME_SIZE = 0xC0003715,EVENT_PS_QUERY_OID_GEN_MAXIMUM_TOTAL_SIZE = 0xC0003716,EVENT_PS_QUERY_OID_GEN_LINK_SPEED = 0xC0003717,EVENT_PS_BINDING_FAILED = 0xC0003718,EVENT_PS_MISSING_ADAPTER_REGISTRY_DATA = 0xC0003719,EVENT_PS_REGISTER_ADDRESS_FAMILY_FAILED = 0xC000371A,EVENT_PS_INIT_DEVICE_FAILED = 0xC000371B,EVENT_PS_WMI_INSTANCE_NAME_FAILED = 0xC000371C,EVENT_PS_WAN_LIMITED_BESTEFFORT = 0x8000371D,EVENT_PS_RESOURCE_POOL = 0xC000371E,EVENT_PS_ADMISSIONCONTROL_OVERFLOW = 0x8000371F,EVENT_PS_NETWORK_ADDRESS_FAIL = 0xC0003720,};
enum MACRO_EVENT_MIN {EVENT_MIN_LEVEL = 0,EVENT_MAX_LEVEL = 255,EVENT_ACTIVITY_CTRL_GET_ID = 1,EVENT_ACTIVITY_CTRL_SET_ID = 2,EVENT_ACTIVITY_CTRL_CREATE_ID = 3,EVENT_ACTIVITY_CTRL_GET_SET_ID = 4,EVENT_ACTIVITY_CTRL_CREATE_SET_ID = 5,};
enum MACRO_EVENT_SRV {EVENT_SRV_SERVICE_FAILED = 0xC00007D0,EVENT_SRV_RESOURCE_SHORTAGE = 0xC00007D1,EVENT_SRV_CANT_CREATE_DEVICE = 0xC00007D2,EVENT_SRV_CANT_CREATE_PROCESS = 0xC00007D3,EVENT_SRV_CANT_CREATE_THREAD = 0xC00007D4,EVENT_SRV_UNEXPECTED_DISC = 0xC00007D5,EVENT_SRV_INVALID_REQUEST = 0xC00007D6,EVENT_SRV_CANT_OPEN_NPFS = 0xC00007D7,EVENT_SRV_CANT_GROW_TABLE = 0x800007D9,EVENT_SRV_CANT_START_SCAVENGER = 0xC00007DA,EVENT_SRV_IRP_STACK_SIZE = 0xC00007DB,EVENT_SRV_NETWORK_ERROR = 0x800007DC,EVENT_SRV_DISK_FULL = 0x800007DD,EVENT_SRV_NO_VIRTUAL_MEMORY = 0xC00007E0,EVENT_SRV_NONPAGED_POOL_LIMIT = 0xC00007E1,EVENT_SRV_PAGED_POOL_LIMIT = 0xC00007E2,EVENT_SRV_NO_NONPAGED_POOL = 0xC00007E3,EVENT_SRV_NO_PAGED_POOL = 0xC00007E4,EVENT_SRV_NO_WORK_ITEM = 0x800007E5,EVENT_SRV_NO_FREE_CONNECTIONS = 0x800007E6,EVENT_SRV_NO_FREE_RAW_WORK_ITEM = 0x800007E7,EVENT_SRV_NO_BLOCKING_IO = 0x800007E8,EVENT_SRV_DOS_ATTACK_DETECTED = 0x800007E9,EVENT_SRV_TOO_MANY_DOS = 0x800007EA,EVENT_SRV_OUT_OF_WORK_ITEM_DOS = 0x800007EB,EVENT_SRV_KEY_NOT_FOUND = 0xC00009C5,EVENT_SRV_KEY_NOT_CREATED = 0xC00009C6,EVENT_SRV_NO_TRANSPORTS_BOUND = 0xC00009C7,EVENT_SRV_CANT_BIND_TO_TRANSPORT = 0x800009C8,EVENT_SRV_CANT_BIND_DUP_NAME = 0xC00009C9,EVENT_SRV_INVALID_REGISTRY_VALUE = 0x800009CA,EVENT_SRV_INVALID_SD = 0x800009CB,EVENT_SRV_CANT_LOAD_DRIVER = 0x800009CC,EVENT_SRV_CANT_UNLOAD_DRIVER = 0x800009CD,EVENT_SRV_CANT_MAP_ERROR = 0x800009CE,EVENT_SRV_CANT_RECREATE_SHARE = 0x800009CF,EVENT_SRV_CANT_CHANGE_DOMAIN_NAME = 0x800009D0,EVENT_SRV_TXF_INIT_FAILED = 0x800009D1,EVENT_RDR_RESOURCE_SHORTAGE = 0x80000BB9,EVENT_RDR_CANT_CREATE_DEVICE = 0x80000BBA,EVENT_RDR_CANT_CREATE_THREAD = 0x80000BBB,EVENT_RDR_CANT_SET_THREAD = 0x80000BBC,EVENT_RDR_INVALID_REPLY = 0x80000BBD,EVENT_RDR_INVALID_SMB = 0x80000BBE,EVENT_RDR_INVALID_LOCK_REPLY = 0x80000BBF,EVENT_RDR_FAILED_UNLOCK = 0x80000BC1,EVENT_RDR_CLOSE_BEHIND = 0x80000BC3,EVENT_RDR_UNEXPECTED_ERROR = 0x80000BC4,EVENT_RDR_TIMEOUT = 0x80000BC5,EVENT_RDR_INVALID_OPLOCK = 0x80000BC6,EVENT_RDR_CONNECTION_REFERENCE = 0x80000BC7,EVENT_RDR_SERVER_REFERENCE = 0x80000BC8,EVENT_RDR_SMB_REFERENCE = 0x80000BC9,EVENT_RDR_ENCRYPT = 0x80000BCA,EVENT_RDR_CONNECTION = 0x80000BCB,EVENT_RDR_MAXCMDS = 0x80000BCD,EVENT_RDR_OPLOCK_SMB = 0x80000BCE,EVENT_RDR_DISPOSITION = 0x80000BCF,EVENT_RDR_CONTEXTS = 0x80000BD0,EVENT_RDR_WRITE_BEHIND_FLUSH_FAILED = 0x80000BD1,EVENT_RDR_AT_THREAD_MAX = 0x80000BD2,EVENT_RDR_CANT_READ_REGISTRY = 0x80000BD3,EVENT_RDR_TIMEZONE_BIAS_TOO_LARGE = 0x80000BD4,EVENT_RDR_PRIMARY_TRANSPORT_CONNECT_FAILED = 0x80000BD5,EVENT_RDR_DELAYED_SET_ATTRIBUTES_FAILED = 0x80000BD6,EVENT_RDR_DELETEONCLOSE_FAILED = 0x80000BD7,EVENT_RDR_CANT_BIND_TRANSPORT = 0x80000BD8,EVENT_RDR_CANT_REGISTER_ADDRESS = 0x80000BD9,EVENT_RDR_CANT_GET_SECURITY_CONTEXT = 0x80000BDA,EVENT_RDR_CANT_BUILD_SMB_HEADER = 0x80000BDB,EVENT_RDR_SECURITY_SIGNATURE_MISMATCH = 0x80000BDC,EVENT_TCPIP6_STARTED = 0x40000C1C,EVENT_STREAMS_STRLOG = 0xC0000FA0,EVENT_STREAMS_ALLOCB_FAILURE = 0x80000FA1,EVENT_STREAMS_ALLOCB_FAILURE_CNT = 0x80000FA2,EVENT_STREAMS_ESBALLOC_FAILURE = 0x80000FA3,EVENT_STREAMS_ESBALLOC_FAILURE_CNT = 0x80000FA4,EVENT_TCPIP_CREATE_DEVICE_FAILED = 0xC0001004,EVENT_TCPIP_NO_RESOURCES_FOR_INIT = 0xC0001005,EVENT_TCPIP_TOO_MANY_NETS = 0xC0001059,EVENT_TCPIP_NO_MASK = 0xC000105A,EVENT_TCPIP_INVALID_ADDRESS = 0xC000105B,EVENT_TCPIP_INVALID_MASK = 0xC000105C,EVENT_TCPIP_NO_ADAPTER_RESOURCES = 0xC000105D,EVENT_TCPIP_DHCP_INIT_FAILED = 0x8000105E,EVENT_TCPIP_ADAPTER_REG_FAILURE = 0xC000105F,EVENT_TCPIP_INVALID_DEFAULT_GATEWAY = 0x80001060,EVENT_TCPIP_NO_ADDRESS_LIST = 0xC0001061,EVENT_TCPIP_NO_MASK_LIST = 0xC0001062,EVENT_TCPIP_NO_BINDINGS = 0xC0001063,EVENT_TCPIP_IP_INIT_FAILED = 0xC0001064,EVENT_TCPIP_TOO_MANY_GATEWAYS = 0x80001065,EVENT_TCPIP_ADDRESS_CONFLICT1 = 0xC0001066,EVENT_TCPIP_ADDRESS_CONFLICT2 = 0xC0001067,EVENT_TCPIP_NTE_CONTEXT_LIST_FAILURE = 0xC0001068,EVENT_TCPIP_MEDIA_CONNECT = 0x40001069,EVENT_TCPIP_MEDIA_DISCONNECT = 0x4000106A,EVENT_TCPIP_IPV4_UNINSTALLED = 0x4000106B,EVENT_TCPIP_AUTOCONFIGURED_ADDRESS_LIMIT_REACHED = 0x8000106C,EVENT_TCPIP_AUTOCONFIGURED_ROUTE_LIMIT_REACHED = 0x8000106D,EVENT_TCPIP_TCP_INIT_FAILED = 0xC0001081,EVENT_TCPIP_TCP_CONNECT_LIMIT_REACHED = 0x80001082,EVENT_TCPIP_TCP_TIME_WAIT_COLLISION = 0x80001083,EVENT_TCPIP_TCP_WSD_WS_RESTRICTED = 0x80001084,EVENT_TCPIP_TCP_MPP_ATTACKS_DETECTED = 0x80001085,EVENT_TCPIP_TCP_CONNECTIONS_PERF_IMPACTED = 0x80001086,EVENT_TCPIP_TCP_GLOBAL_EPHEMERAL_PORT_SPACE_EXHAUSTED = 0x80001087,EVENT_TCPIP_UDP_LIMIT_REACHED = 0x800010A9,EVENT_TCPIP_UDP_GLOBAL_EPHEMERAL_PORT_SPACE_EXHAUSTED = 0x800010AA,EVENT_TCPIP_PCF_MULTICAST_OID_ISSUE = 0x800010C2,EVENT_TCPIP_PCF_MISSING_CAPABILITY = 0x800010C3,EVENT_TCPIP_PCF_SET_FILTER_FAILURE = 0x800010C4,EVENT_TCPIP_PCF_NO_ARP_FILTER = 0x800010C5,EVENT_TCPIP_PCF_CLEAR_FILTER_FAILURE = 0xC00010C6,EVENT_NBT_CREATE_DRIVER = 0xC00010CC,EVENT_NBT_OPEN_REG_PARAMS = 0xC00010CD,EVENT_NBT_NO_BACKUP_WINS = 0x800010CE,EVENT_NBT_NO_WINS = 0x800010CF,EVENT_NBT_BAD_BACKUP_WINS_ADDR = 0x800010D0,EVENT_NBT_BAD_PRIMARY_WINS_ADDR = 0x800010D1,EVENT_NBT_NAME_SERVER_ADDRS = 0xC00010D2,EVENT_NBT_CREATE_ADDRESS = 0xC00010D3,EVENT_NBT_CREATE_CONNECTION = 0xC00010D4,EVENT_NBT_NON_OS_INIT = 0xC00010D5,EVENT_NBT_TIMERS = 0xC00010D6,EVENT_NBT_CREATE_DEVICE = 0xC00010D7,EVENT_NBT_NO_DEVICES = 0x800010D8,EVENT_NBT_OPEN_REG_LINKAGE = 0xC00010D9,EVENT_NBT_READ_BIND = 0xC00010DA,EVENT_NBT_READ_EXPORT = 0xC00010DB,EVENT_NBT_OPEN_REG_NAMESERVER = 0x800010DC,EVENT_SCOPE_LABEL_TOO_LONG = 0x800010DD,EVENT_SCOPE_TOO_LONG = 0x800010DE,EVENT_NBT_DUPLICATE_NAME = 0xC00010DF,EVENT_NBT_NAME_RELEASE = 0xC00010E0,EVENT_NBT_DUPLICATE_NAME_ERROR = 0xC00010E1,EVENT_NBT_NO_RESOURCES = 0xC00010E2,EVENT_NDIS_RESOURCE_CONFLICT = 0xC0001388,EVENT_NDIS_OUT_OF_RESOURCE = 0xC0001389,EVENT_NDIS_HARDWARE_FAILURE = 0xC000138A,EVENT_NDIS_ADAPTER_NOT_FOUND = 0xC000138B,EVENT_NDIS_INTERRUPT_CONNECT = 0xC000138C,EVENT_NDIS_DRIVER_FAILURE = 0xC000138D,EVENT_NDIS_BAD_VERSION = 0xC000138E,EVENT_NDIS_TIMEOUT = 0x8000138F,EVENT_NDIS_NETWORK_ADDRESS = 0xC0001390,EVENT_NDIS_UNSUPPORTED_CONFIGURATION = 0xC0001391,EVENT_NDIS_INVALID_VALUE_FROM_ADAPTER = 0xC0001392,EVENT_NDIS_MISSING_CONFIGURATION_PARAMETER = 0xC0001393,EVENT_NDIS_BAD_IO_BASE_ADDRESS = 0xC0001394,EVENT_NDIS_RECEIVE_SPACE_SMALL = 0x40001395,EVENT_NDIS_ADAPTER_DISABLED = 0x80001396,EVENT_NDIS_IO_PORT_CONFLICT = 0x80001397,EVENT_NDIS_PORT_OR_DMA_CONFLICT = 0x80001398,EVENT_NDIS_MEMORY_CONFLICT = 0x80001399,EVENT_NDIS_INTERRUPT_CONFLICT = 0x8000139A,EVENT_NDIS_DMA_CONFLICT = 0x8000139B,EVENT_NDIS_INVALID_DOWNLOAD_FILE_ERROR = 0xC000139C,EVENT_NDIS_MAXRECEIVES_ERROR = 0x8000139D,EVENT_NDIS_MAXTRANSMITS_ERROR = 0x8000139E,EVENT_NDIS_MAXFRAMESIZE_ERROR = 0x8000139F,EVENT_NDIS_MAXINTERNALBUFS_ERROR = 0x800013A0,EVENT_NDIS_MAXMULTICAST_ERROR = 0x800013A1,EVENT_NDIS_PRODUCTID_ERROR = 0x800013A2,EVENT_NDIS_LOBE_FAILUE_ERROR = 0x800013A3,EVENT_NDIS_SIGNAL_LOSS_ERROR = 0x800013A4,EVENT_NDIS_REMOVE_RECEIVED_ERROR = 0x800013A5,EVENT_NDIS_TOKEN_RING_CORRECTION = 0x400013A6,EVENT_NDIS_ADAPTER_CHECK_ERROR = 0xC00013A7,EVENT_NDIS_RESET_FAILURE_ERROR = 0x800013A8,EVENT_NDIS_CABLE_DISCONNECTED_ERROR = 0x800013A9,EVENT_NDIS_RESET_FAILURE_CORRECTION = 0x800013AA,EVENT_EventlogStarted = 0x80001775,EVENT_EventlogStopped = 0x80001776,EVENT_EventlogAbnormalShutdown = 0x80001778,EVENT_EventLogProductInfo = 0x80001779,EVENT_ComputerNameChange = 0x8000177B,EVENT_DNSDomainNameChange = 0x8000177C,EVENT_EventlogUptime = 0x8000177D,EVENT_UP_DRIVER_ON_MP = 0xC00017D4,EVENT_SERVICE_START_FAILED = 0xC0001B58,EVENT_SERVICE_START_FAILED_II = 0xC0001B59,EVENT_SERVICE_START_FAILED_GROUP = 0xC0001B5A,EVENT_SERVICE_START_FAILED_NONE = 0xC0001B5B,EVENT_CALL_TO_FUNCTION_FAILED = 0xC0001B5D,EVENT_CALL_TO_FUNCTION_FAILED_II = 0xC0001B5E,EVENT_REVERTED_TO_LASTKNOWNGOOD = 0xC0001B5F,EVENT_BAD_ACCOUNT_NAME = 0xC0001B60,EVENT_CONNECTION_TIMEOUT = 0xC0001B61,EVENT_READFILE_TIMEOUT = 0xC0001B62,EVENT_TRANSACT_TIMEOUT = 0xC0001B63,EVENT_TRANSACT_INVALID = 0xC0001B64,EVENT_FIRST_LOGON_FAILED = 0xC0001B65,EVENT_SECOND_LOGON_FAILED = 0xC0001B66,EVENT_INVALID_DRIVER_DEPENDENCY = 0xC0001B67,EVENT_BAD_SERVICE_STATE = 0xC0001B68,EVENT_CIRCULAR_DEPENDENCY_DEMAND = 0xC0001B69,EVENT_CIRCULAR_DEPENDENCY_AUTO = 0xC0001B6A,EVENT_DEPEND_ON_LATER_SERVICE = 0xC0001B6B,EVENT_DEPEND_ON_LATER_GROUP = 0xC0001B6C,EVENT_SEVERE_SERVICE_FAILED = 0xC0001B6D,EVENT_SERVICE_START_HUNG = 0xC0001B6E,EVENT_SERVICE_EXIT_FAILED = 0xC0001B6F,EVENT_SERVICE_EXIT_FAILED_SPECIFIC = 0xC0001B70,EVENT_SERVICE_START_AT_BOOT_FAILED = 0xC0001B71,EVENT_BOOT_SYSTEM_DRIVERS_FAILED = 0xC0001B72,EVENT_RUNNING_LASTKNOWNGOOD = 0xC0001B73,EVENT_TAKE_OWNERSHIP = 0xC0001B74,};
enum MACRO_EXCEPTION {EXCEPTION_EXECUTE_HANDLER = 1,EXCEPTION_CONTINUE_SEARCH = 0,EXCEPTION_CONTINUE_EXECUTION = -1,};
enum MACRO_E_INVALID {E_INVALID_PROTOCOL_OPERATION = 0x83760001,E_INVALID_PROTOCOL_FORMAT = 0x83760002,E_PROTOCOL_EXTENSIONS_NOT_SUPPORTED = 0x83760003,E_SUBPROTOCOL_NOT_SUPPORTED = 0x83760004,E_PROTOCOL_VERSION_NOT_SUPPORTED = 0x83760005,};
enum MACRO_E_MONITOR {E_MONITOR_RESOLUTION_TOO_LOW = 0x80270250,E_ELEVATED_ACTIVATION_NOT_SUPPORTED = 0x80270251,E_UAC_DISABLED = 0x80270252,E_FULL_ADMIN_NOT_SUPPORTED = 0x80270253,E_APPLICATION_NOT_REGISTERED = 0x80270254,E_MULTIPLE_EXTENSIONS_FOR_APPLICATION = 0x80270255,E_MULTIPLE_PACKAGES_FOR_FAMILY = 0x80270256,E_APPLICATION_MANAGER_NOT_RUNNING = 0x80270257,};
enum MACRO_FILE_PIPE {FILE_PIPE_READ_DATA = 0x0,FILE_PIPE_WRITE_SPACE = 0x1,FILE_PIPE_COMPUTER_NAME_LENGTH = 0xF,};
enum MACRO_FILE_SKIP {FILE_SKIP_COMPLETION_PORT_ON_SUCCESS = 0x1,FILE_SKIP_SET_EVENT_ON_HANDLE = 0x2,FILE_SKIP_SET_USER_EVENT_ON_FAST_IO = 0x4,};
enum MACRO_FILE_TYPE {FILE_TYPE_NOTIFICATION_FLAG_USAGE_BEGIN = 0x1,FILE_TYPE_NOTIFICATION_FLAG_USAGE_END = 0x2,};
enum MACRO_FLT_VALID {FLT_VALID_FILE_NAME_FORMATS = 0xFF,FLT_FILE_NAME_NORMALIZED = 0x1,FLT_FILE_NAME_OPENED = 0x2,FLT_FILE_NAME_SHORT = 0x3,FLT_VALID_FILE_NAME_QUERY_METHODS = 0xFF00,FLT_FILE_NAME_QUERY_DEFAULT = 0x100,FLT_FILE_NAME_QUERY_CACHE_ONLY = 0x200,FLT_FILE_NAME_QUERY_FILESYSTEM_ONLY = 0x300,FLT_FILE_NAME_QUERY_ALWAYS_ALLOW_CACHE_LOOKUP = 0x400,FLT_VALID_FILE_NAME_FLAGS = 0xFF000000,FLT_FILE_NAME_REQUEST_FROM_CURRENT_PROVIDER = 0x1000000,FLT_FILE_NAME_DO_NOT_CACHE = 0x2000000,FLT_FILE_NAME_ALLOW_QUERY_ON_REPARSE = 0x4000000,};
enum MACRO_FOBX_FLAG {FOBX_FLAG_MATCH_ALL = 0x10000,FOBX_FLAG_FREE_UNICODE = 0x20000,FOBX_FLAG_USER_SET_LAST_WRITE = 0x40000,FOBX_FLAG_USER_SET_LAST_ACCESS = 0x80000,FOBX_FLAG_USER_SET_CREATION = 0x100000,FOBX_FLAG_USER_SET_LAST_CHANGE = 0x200000,FOBX_FLAG_READ_ONLY = 0x400000,FOBX_FLAG_DELETE_ON_CLOSE = 0x800000,FOBX_FLAG_SRVOPEN_CLOSED = 0x1000000,FOBX_FLAG_UNC_NAME = 0x2000000,FOBX_FLAG_ENCLOSED_ALLOCATED = 0x4000000,FOBX_FLAG_MARKED_AS_DORMANT = 0x8000000,FOBX_FLAG_WRITES_ISSUED = 0x10000000,FOBX_NUMBER_OF_SERIALIZATION_QUEUES = 0x2,};
enum MACRO_FSCTL_LMR {FSCTL_LMR_GET_LINK_TRACKING_INFORMATION = 1310952,FSCTL_LMR_SET_LINK_TRACKING_INFORMATION = 1310956,};
enum MACRO_GCR_ALLOW {GCR_ALLOW_NTLM = 0x100,GCR_USE_OEM_SET = 0x200,GCR_MACHINE_CREDENTIAL = 0x400,GCR_USE_OWF_PASSWORD = 0x800,GCR_ALLOW_LM = 0x1000,GCR_ALLOW_NO_TARGET = 0x2000,};
enum MACRO_GET_ERROR {GET_ERROR_SOURCE_INFO_IN_ErrorSourceId_ID = 2,GET_ERROR_SOURCE_INFO_OUT_Status_ID = 1,GET_ERROR_SOURCE_INFO_OUT_Length_ID = 3,GET_ERROR_SOURCE_INFO_OUT_ErrorSourceInfo_ID = 4,};
enum MACRO_HBAScsiID {HBAScsiID_ScsiBusNumber_ID = 1,HBAScsiID_ScsiTargetNumber_ID = 2,HBAScsiID_ScsiOSLun_ID = 3,HBAScsiID_OSDeviceName_ID = 4,};
enum MACRO_HBA_EVENT {HBA_EVENT_LIP_OCCURRED = 1,HBA_EVENT_LINK_UP = 2,HBA_EVENT_LINK_DOWN = 3,HBA_EVENT_LIP_RESET_OCCURRED = 4,HBA_EVENT_RSCN = 5,HBA_EVENT_PROPRIETARY = 65535,HBA_EVENT_ADAPTER_UNKNOWN = 256,HBA_EVENT_ADAPTER_ADD = 257,HBA_EVENT_ADAPTER_REMOVE = 258,HBA_EVENT_ADAPTER_CHANGE = 259,HBA_EVENT_PORT_UNKNOWN = 512,HBA_EVENT_PORT_OFFLINE = 513,HBA_EVENT_PORT_ONLINE = 514,HBA_EVENT_PORT_NEW_TARGETS = 515,HBA_EVENT_PORT_FABRIC = 516,HBA_EVENT_PORT_BROADCAST_CHANGE = 517,HBA_EVENT_PORT_BROADCAST_D24_0 = 518,HBA_EVENT_PORT_BROADCAST_D27_4 = 519,HBA_EVENT_PORT_BROADCAST_SES = 520,HBA_EVENT_PORT_BROADCAST_D01_4 = 521,HBA_EVENT_PORT_BROADCAST_D04_7 = 522,HBA_EVENT_PORT_BROADCAST_D16_7 = 523,HBA_EVENT_PORT_BROADCAST_D29_7 = 524,HBA_EVENT_PORT_ALL = 767,HBA_EVENT_PORT_STAT_THRESHOLD = 769,HBA_EVENT_PORT_STAT_GROWTH = 770,HBA_EVENT_PHY_STAT_THRESHOLD = 849,HBA_EVENT_PHY_STAT_GROWTH = 850,HBA_EVENT_TARGET_UNKNOWN = 1024,HBA_EVENT_TARGET_OFFLINE = 1025,HBA_EVENT_TARGET_ONLINE = 1026,HBA_EVENT_TARGET_REMOVED = 1027,HBA_EVENT_LINK_UNKNOWN = 1280,HBA_EVENT_LINK_INCIDENT = 1281,};
enum MACRO_ID_LENGTH {VENDOR_ID_LENGTH = 8,PRODUCT_ID_LENGTH = 16,REVISION_LENGTH = 4,SERIAL_NUMBER_LENGTH = 32,};
enum MACRO_IEEE_1284 {IEEE_1284_3_DAISY_CHAIN_MAX_ID = 3,};
enum MACRO_IMAGE_REL {IMAGE_REL_BASED_ABSOLUTE = 0,IMAGE_REL_BASED_HIGH = 1,IMAGE_REL_BASED_LOW = 2,IMAGE_REL_BASED_HIGHLOW = 3,IMAGE_REL_BASED_HIGHADJ = 4,IMAGE_REL_BASED_MACHINE_SPECIFIC_5 = 5,IMAGE_REL_BASED_RESERVED = 6,IMAGE_REL_BASED_MACHINE_SPECIFIC_7 = 7,IMAGE_REL_BASED_MACHINE_SPECIFIC_8 = 8,IMAGE_REL_BASED_MACHINE_SPECIFIC_9 = 9,IMAGE_REL_BASED_DIR64 = 10,IMAGE_REL_BASED_IA64_IMM64 = 9,IMAGE_REL_BASED_MIPS_JMPADDR = 5,IMAGE_REL_BASED_MIPS_JMPADDR16 = 9,IMAGE_REL_BASED_ARM_MOV32 = 5,IMAGE_REL_BASED_THUMB_MOV32 = 7,IMAGE_ARCHIVE_START_SIZE = 8,IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR = 60,IMAGE_ORDINAL_FLAG64 = -9223372036854775808,IMAGE_ORDINAL_FLAG32 = -2147483648,IMAGE_ORDINAL_FLAG = -2147483648,IMAGE_RESOURCE_NAME_IS_STRING = -2147483648,IMAGE_RESOURCE_DATA_IS_DIRECTORY = -2147483648,IMAGE_DEBUG_TYPE_UNKNOWN = 0,IMAGE_DEBUG_TYPE_COFF = 1,IMAGE_DEBUG_TYPE_CODEVIEW = 2,IMAGE_DEBUG_TYPE_FPO = 3,IMAGE_DEBUG_TYPE_MISC = 4,IMAGE_DEBUG_TYPE_EXCEPTION = 5,IMAGE_DEBUG_TYPE_FIXUP = 6,IMAGE_DEBUG_TYPE_OMAP_TO_SRC = 7,IMAGE_DEBUG_TYPE_OMAP_FROM_SRC = 8,IMAGE_DEBUG_TYPE_BORLAND = 9,IMAGE_DEBUG_TYPE_RESERVED10 = 10,IMAGE_DEBUG_TYPE_CLSID = 11,};
enum MACRO_INCREMENT {EVENT_INCREMENT = 1,IO_NO_INCREMENT = 0,IO_CD_ROM_INCREMENT = 1,IO_DISK_INCREMENT = 1,IO_KEYBOARD_INCREMENT = 6,IO_MAILSLOT_INCREMENT = 2,IO_MOUSE_INCREMENT = 6,IO_NAMED_PIPE_INCREMENT = 2,IO_NETWORK_INCREMENT = 2,IO_PARALLEL_INCREMENT = 1,IO_SERIAL_INCREMENT = 2,IO_SOUND_INCREMENT = 8,IO_VIDEO_INCREMENT = 1,SEMAPHORE_INCREMENT = 1,};
enum MACRO_INPLACE_S {INPLACE_S_TRUNCATED = 0x401A0,};
enum MACRO_INTERFACE {INTERFACE_ERROR = 32,};
enum MACRO_INTERRUPT {INTERRUPT_UNWIND_ATTEMPTED = 0x3C,INTERRUPT_EXCEPTION_NOT_HANDLED = 0x3D,};
enum MACRO_IOCTL_AVC {IOCTL_AVC_CLASS = 0x220248,};
enum MACRO_IOCTL_HID {IOCTL_HID_GET_DRIVER_CONFIG = 721296,IOCTL_HID_SET_DRIVER_CONFIG = 721300,IOCTL_HID_GET_POLL_FREQUENCY_MSEC = 721304,IOCTL_HID_SET_POLL_FREQUENCY_MSEC = 721308,IOCTL_GET_NUM_DEVICE_INPUT_BUFFERS = 721312,IOCTL_SET_NUM_DEVICE_INPUT_BUFFERS = 721316,IOCTL_HID_GET_COLLECTION_INFORMATION = 721320,IOCTL_HID_GET_COLLECTION_DESCRIPTOR = 721299,IOCTL_HID_FLUSH_QUEUE = 721303,IOCTL_HID_SET_FEATURE = 721297,IOCTL_HID_SET_OUTPUT_REPORT = 721301,IOCTL_HID_GET_FEATURE = 721298,IOCTL_GET_PHYSICAL_DESCRIPTOR = 721306,IOCTL_HID_GET_HARDWARE_ID = 721310,IOCTL_HID_GET_INPUT_REPORT = 721314,IOCTL_HID_GET_MANUFACTURER_STRING = 721338,IOCTL_HID_GET_PRODUCT_STRING = 721342,IOCTL_HID_GET_SERIALNUMBER_STRING = 721346,IOCTL_HID_GET_INDEXED_STRING = 721378,IOCTL_HID_GET_MS_GENRE_DESCRIPTOR = 721382,IOCTL_HID_ENABLE_SECURE_READ = 721419,IOCTL_HID_DISABLE_SECURE_READ = 721423,IOCTL_HID_GET_DEVICE_DESCRIPTOR = 720899,IOCTL_HID_GET_REPORT_DESCRIPTOR = 720903,IOCTL_HID_READ_REPORT = 720907,IOCTL_HID_WRITE_REPORT = 720911,IOCTL_HID_GET_STRING = 720915,IOCTL_HID_ACTIVATE_DEVICE = 720927,IOCTL_HID_DEACTIVATE_DEVICE = 720931,IOCTL_HID_GET_DEVICE_ATTRIBUTES = 720935,IOCTL_HID_SEND_IDLE_NOTIFICATION_REQUEST = 720939,IOCTL_UMDF_HID_SET_FEATURE = 720979,IOCTL_UMDF_HID_GET_FEATURE = 720983,IOCTL_UMDF_HID_SET_OUTPUT_REPORT = 720987,IOCTL_UMDF_HID_GET_INPUT_REPORT = 720991,IOCTL_UMDF_GET_PHYSICAL_DESCRIPTOR = 720995,};
enum MACRO_IOCTL_LMR {IOCTL_LMR_ARE_FILE_OBJECTS_ON_SAME_SERVER = 1310960,};
enum MACRO_IOCTL_PAR {IOCTL_PAR_BASE = 22,IOCTL_PAR_QUERY_INFORMATION = 1441796,IOCTL_PAR_SET_INFORMATION = 1441800,IOCTL_PAR_QUERY_DEVICE_ID = 1441804,IOCTL_PAR_QUERY_DEVICE_ID_SIZE = 1441808,IOCTL_IEEE1284_GET_MODE = 1441812,IOCTL_IEEE1284_NEGOTIATE = 1441816,IOCTL_PAR_SET_WRITE_ADDRESS = 1441820,IOCTL_PAR_SET_READ_ADDRESS = 1441824,IOCTL_PAR_GET_DEVICE_CAPS = 1441828,IOCTL_PAR_GET_DEFAULT_MODES = 1441832,IOCTL_PAR_PING = 1441836,IOCTL_PAR_QUERY_RAW_DEVICE_ID = 1441840,IOCTL_PAR_ECP_HOST_RECOVERY = 1441844,IOCTL_PAR_GET_READ_ADDRESS = 1441848,IOCTL_PAR_GET_WRITE_ADDRESS = 1441852,IOCTL_PAR_TEST = 1441872,IOCTL_PAR_IS_PORT_FREE = 1441876,IOCTL_PAR_QUERY_LOCATION = 1441880,};
enum MACRO_IOCTL_TDI {IOCTL_TDI_ACCEPT = 2162688,IOCTL_TDI_CONNECT = 2162692,IOCTL_TDI_DISCONNECT = 2162696,IOCTL_TDI_LISTEN = 2162700,IOCTL_TDI_QUERY_INFORMATION = 2162706,IOCTL_TDI_RECEIVE = 2162710,IOCTL_TDI_RECEIVE_DATAGRAM = 2162714,IOCTL_TDI_SEND = 2162717,IOCTL_TDI_SEND_DATAGRAM = 2162721,IOCTL_TDI_SET_EVENT_HANDLER = 2162724,IOCTL_TDI_SET_INFORMATION = 2162729,IOCTL_TDI_ASSOCIATE_ADDRESS = 2162732,IOCTL_TDI_DISASSOCIATE_ADDRESS = 2162736,IOCTL_TDI_ACTION = 2162742,};
enum MACRO_IPSEC_TPT {IPSEC_TPT_UDPESP_ENCAPTYPE_IKE = 0x1,IPSEC_TUN_UDPESP_ENCAPTYPE_IKE = 0x2,IPSEC_TPTOVERTUN_UDPESP_ENCAPTYPE_IKE = 0x4,IPSEC_TPT_UDPESP_OVER_PURE_TUN_ENCAPTYPE_IKE = 0x8,IPSEC_TPT_UDPESP_ENCAPTYPE_OTHER = 0x10,IPSEC_TUN_UDPESP_ENCAPTYPE_OTHER = 0x20,IPSEC_TPTOVERTUN_UDPESP_ENCAPTYPE_OTHER = 0x40,IPSEC_TPT_UDPESP_OVER_PURE_TUN_ENCAPTYPE_OTHER = 0x80,};
enum MACRO_ISCSI_ERR {ISCSI_ERR_TDI_CONNECT_FAILED = 0xC0000001,ISCSI_ERR_INSUFFICIENT_SESSION_RESOURCES = 0xC0000002,ISCSI_ERR_INVALID_COMMAND_SEQUENCE_NUMBER = 0xC0000003,ISCSI_ERR_INVALID_BURST_LENGTH = 0xC0000004,ISCSI_ERR_SETUP_NETWORK_NODE = 0xC0000005,ISCSI_ERR_INSUFFICIENT_CONNECTION_RESOURCES = 0xC0000006,ISCSI_ERR_SEND_FAILED = 0xC0000007,ISCSI_ERR_ISCSI_REQUEST_TIMEOUT = 0xC0000008,ISCSI_ERR_SCSI_REQUEST_TIMEOUT = 0xC0000009,ISCSI_ERR_LOGIN_FAILED = 0xC000000A,ISCSI_ERR_LOGIN_PDU_ERROR = 0xC000000B,ISCSI_ERR_INVALID_LOGIN_REDIRECT_DATA = 0xC000000C,ISCSI_ERR_INVALID_AUTHMETHOD = 0xC000000D,ISCSI_ERR_INVALID_CHAP_ALGORITHM = 0xC000000E,ISCSI_ERR_INVALID_CHAP_CHALLENGE = 0xC000000F,ISCSI_ERR_INVALID_KEY_DURING_CHAP = 0xC0000010,ISCSI_ERR_INVALID_CHAP_RESPONSE = 0xC0000011,ISCSI_ERR_HEADER_DIGEST_NEEDED = 0xC0000012,ISCSI_ERR_HEADER_DATA_NEEDED = 0xC0000013,ISCSI_ERR_CONNECTION_LOST = 0xC0000014,ISCSI_ERR_INVALID_DATA_SEGMENT_LENGTH = 0xC0000015,ISCSI_ERR_HEADER_DIGEST_ERROR = 0xC0000016,ISCSI_ERR_ISCSI_PDU_ERROR = 0xC0000017,ISCSI_ERR_UNKNOWN_ISCSI_OPCODE = 0xC0000018,ISCSI_ERR_DATA_DIGEST_ERROR = 0xC0000019,ISCSI_ERR_EXCESS_DATA_SENT = 0xC000001A,ISCSI_ERR_UNEXPECTED_PDU = 0xC000001B,ISCSI_ERR_INVALID_RTT_PDU = 0xC000001C,ISCSI_ERR_ISCSI_PDU_REJECTED = 0xC000001D,ISCSI_ERR_INSUFFICIENT_WORKITEM_RESOURCES = 0xC000001E,ISCSI_ERR_INSUFFICIENT_REQ_PACKET_RESOURCES = 0xC000001F,ISCSI_INFO_RECEIVED_ASYNC_LOGOUT = 0x40000020,ISCSI_ERR_INVALID_CHAP_CHALLENGE_SIZE = 0xC0000021,ISCSI_INFO_RECONNECTED_TO_TARGET = 0x40000022,ISCSI_ERR_INVALID_TARGET_CHAP_SECRET = 0xC0000023,ISCSI_ERR_INVALID_INITIATOR_CHAP_SECRET = 0xC0000024,ISCSI_ERR_FIPS_NOT_AVAILABLE = 0xC0000025,ISCSI_ERR_CHAP_NOT_OFFERED = 0xC0000026,ISCSI_ERR_DEVICE_RESET = 0xC0000027,ISCSI_ERR_CHAP_OFFERED = 0xC0000028,ISCSI_ERR_AUTH_METHOD_NOT_OFFERED = 0xC0000029,ISCSI_ERR_INVALID_STATUS_SEQ_NUM = 0xC000002A,ISCSI_ERR_LOGIN_TIMED_OUT = 0xC000002B,ISCSI_ERR_LOGOUT_TIMED_OUT = 0xC000002C,ISCSI_ERR_ADDCONNECTION_TIMED_OUT = 0xC000002D,ISCSI_ERR_SENDTARGETS_TIMED_OUT = 0xC000002E,ISCSI_ERR_SCSICOMMAND_TIMED_OUT = 0xC000002F,ISCSI_ERR_NOP_TIMED_OUT = 0xC0000030,ISCSI_ERR_TASKMGMT_TIMED_OUT = 0xC0000031,ISCSI_ERR_ASYNC_TEXT_CMD_TIMED_OUT = 0xC0000032,ISCSI_ERR_ASYNC_LOGOUT_TIMED_OUT = 0xC0000033,ISCSI_ERR_CONFIG_IPSEC_TIMED_OUT = 0xC0000034,ISCSI_ERR_RELEASE_IPSEC_TIMED_OUT = 0xC0000035,ISCSI_ERR_ENCRYPT_DECRYPT_TIMED_OUT = 0xC0000036,ISCSI_ERR_INSUFFICIENT_RESOURCES_FOR_SEND = 0xC0000037,ISCSI_ERR_FAILED_TO_GET_SYSTEM_ADDRESS = 0xC0000038,ISCSI_ERR_FAILED_TO_ALLOCATE_RESOURCES_FOR_IO = 0xC0000039,ISCSI_ERR_FAILED_TO_ALLOCATE_REQUEST_TAG = 0xC000003A,ISCSI_ERR_CONNECTION_DROPPED_BEFORE_FFP = 0xC000003B,ISCSI_ERR_DATA_SENT_IN_SCSI_RESPONSE = 0xC000003C,ISCSI_ERR_DATA_PDU_IN_ORDER_FALSE = 0xC000003D,ISCSI_ERR_DATA_SEQ_IN_ORDER_FALSE = 0xC000003E,ISCSI_ERR_TOO_MANY_RESET_FAILURE = 0xC000003F,ISCSI_INFO_NIC_BOOT = 0x40000040,ISCSI_PAGING_IRP_ERROR = 0xC0000041,ISCSI_ERR_DISABLE_NAGLE = 0xC0000042,ISCSI_USING_PROCESSOR_CRC32 = 0x40000043,ISCSI_ERR_FAILED_TO_RECOVER_SESSION_AFTER_ASYNCLOGOUT = 0xC0000044,ISCSI_ERR_FAILED_TO_RECOVER_UNEXPECTED_TERMINATED_SESSION = 0xC0000045,ISCSI_ERR_FAILED_TO_PROCESS_LOGON_REQUEST = 0xC0000046,ISCSI_SESSION_RECOVERY_REQUEST_NOT_STARTED = 0x40000047,ISCSI_UNEXPECTED_TARGET_PORTAL_IP_TYPE = 0xC0000048,};
enum MACRO_ISCSI_HBA {ISCSI_HBA_STATUS_WORKING = 0,ISCSI_HBA_STATUS_DEGRADED = 1,ISCSI_HBA_STATUS_CRITICAL = 2,ISCSI_HBA_STATUS_FAILED = 3,};
enum MACRO_ISOCH_ANY {ISOCH_ANY_CHANNEL = 0xFFFFFFFF,ISOCH_MAX_CHANNEL = 0x3F,};
enum MACRO_JACKDESC2 {JACKDESC2_PRESENCE_DETECT_CAPABILITY = 0x1,JACKDESC2_DYNAMIC_FORMAT_CHANGE_CAPABILITY = 0x2,};
enum MACRO_KNOWLEDGE {KNOWLEDGE_INCONSISTENCY_DETECTED = 0xC00037E9,};
enum MACRO_KSNODEPIN {KSNODEPIN_STANDARD_IN = 1,KSNODEPIN_STANDARD_OUT = 0,KSNODEPIN_SUM_MUX_IN = 1,KSNODEPIN_SUM_MUX_OUT = 0,KSNODEPIN_DEMUX_IN = 0,KSNODEPIN_DEMUX_OUT = 1,};
enum MACRO_L2CAP_MIN {L2CAP_MIN_FLUSHTO = 1,L2CAP_MAX_FLUSHTO = 65535,L2CAP_DEFAULT_FLUSHTO = 65535,L2CAP_NO_REXMIT_FLUSHTO = 1,L2CAP_INFINITE_FLUSHTO = 65535,L2CAP_RAF_BASIC_MODE = 0,L2CAP_RAF_ENHANCED_RETRANSMISSION_MODE = 3,L2CAP_RAF_STREAMING_MODE = 4,L2CAP_RAF_DEFAULT_MAX_PDU_SIZE = 8000,L2CAP_RAF_DEFAULT_TX_WINDOW_SIZE = 63,L2CAP_RAF_DEFAULT_MAXTRANSMIT = 16,L2CAP_RAF_VALID_CONFIG_REQUEST_RETRANSMISSION_TO = 0,L2CAP_RAF_VALID_CONFIG_REQUEST_MONITOR_TO = 0,L2CAP_NO_FCS = 0,L2CAP_16_BIT_FCS = 1,L2CAP_DEFAULT_FCS = 1,};
enum MACRO_LANG_BASE {LANG_BASE_LANGUAGE_INDEX = 0x0,LANG_BASE_ENCODING_INDEX = 0x1,LANG_BASE_OFFSET_INDEX = 0x2,LANG_DEFAULT_ID = 0x100,};
enum MACRO_LEGACYZIP {LEGACYZIP_MODE_LEN = 3,};
enum MACRO_MARK_DUMP {MARK_DUMP_MEMORY_FLAG_PHYSICAL_ADDRESS = 0x1,};
enum MACRO_MAXUSHORT {MAXUSHORT = 0xFFFF,};
enum MACRO_MAX_EVENT {MAX_EVENT_DATA_DESCRIPTORS = 128,MAX_EVENT_FILTER_DATA_SIZE = 1024,};
enum MACRO_MAX_L2CAP {MAX_L2CAP_PING_DATA_LENGTH = 44,MAX_L2CAP_INFO_DATA_LENGTH = 44,};
enum MACRO_MAX_LOCAL {MAX_LOCAL_NODES = 64,};
enum MACRO_MAX_NABTS {MAX_NABTS_VBI_LINES_PER_FIELD = 11,};
enum MACRO_MAX_UUIDS {MAX_UUIDS_IN_QUERY = 12,};
enum MACRO_MEDIA_NRZ {MEDIA_NRZ_ENCODING = 0x10000,MEDIA_NRZI_ENCODING = 0x20000,MEDIA_NLPID = 0x40000,};
enum MACRO_MM_SYSTEM {MM_SYSTEM_SPACE_END = 0xFFFFFFFF,MM_LOWEST_USER_ADDRESS = 0x10000,};
enum MACRO_MODE_PAGE {MODE_PAGE_DISPLAY = 0x22,};
enum MACRO_MSMCAInfo {MSMCAInfo_Entry_Length_ID = 1,MSMCAInfo_Entry_Data_ID = 2,MSMCAInfo_RawMCAData_Count_ID = 1,MSMCAInfo_RawMCAData_Records_ID = 2,MSMCAInfo_RawCMCEvent_Count_ID = 1,MSMCAInfo_RawCMCEvent_Records_ID = 2,MSMCAInfo_RawMCAEvent_Count_ID = 1,MSMCAInfo_RawMCAEvent_Records_ID = 2,MSMCAInfo_RawCorrectedPlatformEvent_Count_ID = 1,MSMCAInfo_RawCorrectedPlatformEvent_Records_ID = 2,};
enum MACRO_NDIS_HASH {NDIS_HASH_FUNCTION_MASK = 0xFF,NDIS_HASH_TYPE_MASK = 0xFFFF00,NDIS_HASH_IPV4 = 0x100,NDIS_HASH_TCP_IPV4 = 0x200,NDIS_HASH_IPV6 = 0x400,NDIS_HASH_IPV6_EX = 0x800,NDIS_HASH_TCP_IPV6 = 0x1000,NDIS_HASH_TCP_IPV6_EX = 0x2000,NDIS_RSS_PARAM_FLAG_BASE_CPU_UNCHANGED = 0x1,NDIS_RSS_PARAM_FLAG_HASH_INFO_UNCHANGED = 0x2,NDIS_RSS_PARAM_FLAG_ITABLE_UNCHANGED = 0x4,NDIS_RSS_PARAM_FLAG_HASH_KEY_UNCHANGED = 0x8,NDIS_RSS_PARAM_FLAG_DISABLE_RSS = 0x10,NDIS_RSS_INDIRECTION_TABLE_SIZE_REVISION_1 = 0x80,NDIS_RSS_HASH_SECRET_KEY_SIZE_REVISION_1 = 0x28,NDIS_RECEIVE_SCALE_PARAMETERS_REVISION_1 = 0x1,NDIS_RECEIVE_SCALE_PARAMETERS_REVISION_2 = 0x2,NDIS_RSS_INDIRECTION_TABLE_MAX_SIZE_REVISION_1 = 0x80,NDIS_RSS_HASH_SECRET_KEY_MAX_SIZE_REVISION_1 = 0x28,NDIS_RSS_HASH_SECRET_KEY_MAX_SIZE_REVISION_2 = 0x28,NDIS_RECEIVE_HASH_FLAG_ENABLE_HASH = 0x1,NDIS_RECEIVE_HASH_FLAG_HASH_INFO_UNCHANGED = 0x2,NDIS_RECEIVE_HASH_FLAG_HASH_KEY_UNCHANGED = 0x4,NDIS_RECEIVE_HASH_PARAMETERS_REVISION_1 = 0x1,NDIS_RSS_PROCESSOR_INFO_REVISION_1 = 0x1,NDIS_SYSTEM_PROCESSOR_INFO_EX_REVISION_1 = 0x1,NDIS_HYPERVISOR_INFO_FLAG_HYPERVISOR_PRESENT = 0x1,NDIS_HYPERVISOR_INFO_REVISION_1 = 0x1,NDIS_WMI_RECEIVE_QUEUE_PARAMETERS_REVISION_1 = 0x1,NDIS_WMI_RECEIVE_QUEUE_INFO_REVISION_1 = 0x1,NDIS_PORT_STATE_REVISION_1 = 0x1,NDIS_PORT_CHAR_USE_DEFAULT_AUTH_SETTINGS = 0x1,NDIS_PORT_CHARACTERISTICS_REVISION_1 = 0x1,NDIS_PORT_ARRAY_REVISION_1 = 0x1,};
enum MACRO_NDIS_LINK {NDIS_LINK_SPEED_UNKNOWN = -1,};
enum MACRO_NDIS_SEND {NDIS_SEND_FLAGS_DISPATCH_LEVEL = 0x1,NDIS_SEND_FLAGS_CHECK_FOR_LOOPBACK = 0x2,NDIS_SEND_FLAGS_SINGLE_QUEUE = 0x4,NDIS_SEND_COMPLETE_FLAGS_DISPATCH_LEVEL = 0x1,NDIS_SEND_COMPLETE_FLAGS_SINGLE_QUEUE = 0x2,NDIS_RECEIVE_FLAGS_DISPATCH_LEVEL = 0x1,NDIS_RECEIVE_FLAGS_RESOURCES = 0x2,NDIS_RECEIVE_FLAGS_SINGLE_ETHER_TYPE = 0x100,NDIS_RECEIVE_FLAGS_SINGLE_VLAN = 0x200,NDIS_RECEIVE_FLAGS_PERFECT_FILTERED = 0x400,NDIS_RECEIVE_FLAGS_SINGLE_QUEUE = 0x800,NDIS_RECEIVE_FLAGS_SHARED_MEMORY_INFO_VALID = 0x1000,NDIS_RECEIVE_FLAGS_MORE_NBLS = 0x2000,NDIS_RETURN_FLAGS_DISPATCH_LEVEL = 0x1,NDIS_RETURN_FLAGS_SINGLE_QUEUE = 0x2,NDIS_CLONE_FLAGS_RESERVED = 0x1,NDIS_CLONE_FLAGS_USE_ORIGINAL_MDLS = 0x2,NDIS_TASK_OFFLOAD_VERSION = 0x1,};
enum MACRO_NDIS_TAPI {NDIS_TAPI_CURRENT_VERSION = 0x10003,NDIS_STATUS_TAPI_ADDRESSBLOCKED = 0xC0012000,NDIS_STATUS_TAPI_BEARERMODEUNAVAIL = 0xC0012001,NDIS_STATUS_TAPI_CALLUNAVAIL = 0xC0012002,NDIS_STATUS_TAPI_DIALBILLING = 0xC0012003,NDIS_STATUS_TAPI_DIALDIALTONE = 0xC0012004,NDIS_STATUS_TAPI_DIALPROMPT = 0xC0012005,NDIS_STATUS_TAPI_DIALQUIET = 0xC0012006,NDIS_STATUS_TAPI_INCOMPATIBLEEXTVERSION = 0xC0012007,NDIS_STATUS_TAPI_INUSE = 0xC0012008,NDIS_STATUS_TAPI_INVALADDRESS = 0xC0012009,NDIS_STATUS_TAPI_INVALADDRESSID = 0xC001200A,NDIS_STATUS_TAPI_INVALADDRESSMODE = 0xC001200B,NDIS_STATUS_TAPI_INVALBEARERMODE = 0xC001200C,NDIS_STATUS_TAPI_INVALCALLHANDLE = 0xC001200D,NDIS_STATUS_TAPI_INVALCALLPARAMS = 0xC001200E,NDIS_STATUS_TAPI_INVALCALLSTATE = 0xC001200F,NDIS_STATUS_TAPI_INVALDEVICECLASS = 0xC0012010,NDIS_STATUS_TAPI_INVALLINEHANDLE = 0xC0012011,NDIS_STATUS_TAPI_INVALLINESTATE = 0xC0012012,NDIS_STATUS_TAPI_INVALMEDIAMODE = 0xC0012013,NDIS_STATUS_TAPI_INVALRATE = 0xC0012014,NDIS_STATUS_TAPI_NODRIVER = 0xC0012015,NDIS_STATUS_TAPI_OPERATIONUNAVAIL = 0xC0012016,NDIS_STATUS_TAPI_RATEUNAVAIL = 0xC0012017,NDIS_STATUS_TAPI_RESOURCEUNAVAIL = 0xC0012018,NDIS_STATUS_TAPI_STRUCTURETOOSMALL = 0xC0012019,NDIS_STATUS_TAPI_USERUSERINFOTOOBIG = 0xC001201A,NDIS_STATUS_TAPI_ALLOCATED = 0xC001201B,NDIS_STATUS_TAPI_INVALADDRESSSTATE = 0xC001201C,NDIS_STATUS_TAPI_INVALPARAM = 0xC001201D,NDIS_STATUS_TAPI_NODEVICE = 0xC001201E,NDIS_STATUS_TAPI_DISCONNECTMODE_NORMAL = 0xC0012020,NDIS_STATUS_TAPI_DISCONNECTMODE_UNKNOWN = 0xC0012021,NDIS_STATUS_TAPI_DISCONNECTMODE_REJECT = 0xC0012022,NDIS_STATUS_TAPI_DISCONNECTMODE_PICKUP = 0xC0012023,NDIS_STATUS_TAPI_DISCONNECTMODE_FORWARDED = 0xC0012024,NDIS_STATUS_TAPI_DISCONNECTMODE_BUSY = 0xC0012025,NDIS_STATUS_TAPI_DISCONNECTMODE_NOANSWER = 0xC0012026,NDIS_STATUS_TAPI_DISCONNECTMODE_BADADDRESS = 0xC0012027,NDIS_STATUS_TAPI_DISCONNECTMODE_UNREACHABLE = 0xC0012028,NDIS_STATUS_TAPI_DISCONNECTMODE_CONGESTION = 0xC0012029,NDIS_STATUS_TAPI_DISCONNECTMODE_INCOMPATIBLE = 0xC001202A,NDIS_STATUS_TAPI_DISCONNECTMODE_UNAVAIL = 0xC001202B,NDIS_STATUS_TAPI_RECV_DIGIT = 0x40010020,};
enum MACRO_NDIS_WWAN {NDIS_WWAN_DRIVER_CAPS_REVISION_1 = 1,NDIS_WWAN_SERVICE_ACTIVATION_REVISION_1 = 1,NDIS_WWAN_SET_RADIO_STATE_REVISION_1 = 1,NDIS_WWAN_SET_PIN_REVISION_1 = 1,NDIS_WWAN_SET_PIN_REVISION_2 = 2,NDIS_WWAN_SET_PREFERRED_PROVIDERS_REVISION_1 = 1,NDIS_WWAN_SET_REGISTER_STATE_REVISION_1 = 1,NDIS_WWAN_SET_SIGNAL_INDICATION_REVISION_1 = 1,NDIS_WWAN_SET_PACKET_SERVICE_REVISION_1 = 1,NDIS_WWAN_SET_PROVISIONED_CONTEXT_REVISION_1 = 1,NDIS_WWAN_SET_CONTEXT_STATE_REVISION_1 = 1,NDIS_WWAN_SET_CONTEXT_STATE_REVISION_2 = 2,NDIS_WWAN_SET_SMS_CONFIGURATION_REVISION_1 = 1,NDIS_WWAN_SMS_READ_REVISION_1 = 1,NDIS_WWAN_SMS_SEND_REVISION_1 = 1,NDIS_WWAN_SMS_DELETE_REVISION_1 = 1,NDIS_WWAN_SET_HOME_PROVIDER_REVISION_1 = 1,NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS_REVISION_1 = 1,NDIS_WWAN_GET_VISIBLE_PROVIDERS_REVISION_1 = 1,NDIS_WWAN_USSD_REQUEST_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_COMMAND_REVISION_1 = 1,NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS_REVISION_1 = 1,NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS_REVISION_1 = 1,NDIS_WWAN_SET_DEVICE_SERVICE_SESSION_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_REVISION_1 = 1,NDIS_WWAN_DEVICE_CAPS_REVISION_1 = 1,NDIS_WWAN_DEVICE_CAPS_REVISION_2 = 2,NDIS_WWAN_READY_INFO_REVISION_1 = 1,NDIS_WWAN_SERVICE_ACTIVATION_STATUS_REVISION_1 = 1,NDIS_WWAN_VENDOR_SPECIFIC_REVISION_1 = 1,NDIS_WWAN_RADIO_STATE_REVISION_1 = 1,NDIS_WWAN_PIN_INFO_REVISION_1 = 1,NDIS_WWAN_PIN_LIST_REVISION_1 = 1,NDIS_WWAN_HOME_PROVIDER_REVISION_1 = 1,NDIS_WWAN_PREFERRED_PROVIDERS_REVISION_1 = 1,NDIS_WWAN_VISIBLE_PROVIDERS_REVISION_1 = 1,NDIS_WWAN_REGISTRATION_STATE_REVISION_1 = 1,NDIS_WWAN_REGISTRATION_STATE_REVISION_2 = 2,NDIS_WWAN_SIGNAL_STATE_REVISION_1 = 1,NDIS_WWAN_PACKET_SERVICE_STATE_REVISION_1 = 1,NDIS_WWAN_CONTEXT_STATE_REVISION_1 = 1,NDIS_WWAN_CONTEXT_STATE_REVISION_2 = 2,NDIS_WWAN_PROVISIONED_CONTEXTS_REVISION_1 = 1,NDIS_WWAN_SMS_CONFIGURATION_REVISION_1 = 1,NDIS_WWAN_SMS_RECEIVE_REVISION_1 = 1,NDIS_WWAN_SMS_SEND_STATUS_REVISION_1 = 1,NDIS_WWAN_SMS_DELETE_STATUS_REVISION_1 = 1,NDIS_WWAN_SMS_STATUS_REVISION_1 = 1,NDIS_WWAN_SUPPORTED_DEVICE_SERVICES_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_RESPONSE_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_EVENT_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION_REVISION_1 = 1,NDIS_WWAN_HOME_PROVIDER_REVISION_2 = 2,NDIS_WWAN_USSD_EVENT_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS_REVISION_1 = 1,NDIS_WWAN_AUTH_CHALLENGE_REVISION_1 = 1,NDIS_WWAN_AUTH_RESPONSE_REVISION_1 = 1,NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE_REVISION_1 = 1,NDIS_WWAN_DEVICE_SERVICE_SESSION_READ_REVISION_1 = 1,};
enum MACRO_NET_EVENT {NET_EVENT_HALT_MINIPORT_ON_LOW_POWER = 0x1,NET_PNP_EVENT_NOTIFICATION_REVISION_1 = 0x1,};
enum MACRO_NO_REMOVE {NO_REMOVE = 0,};
enum MACRO_NTSTRSAFE {NTSTRSAFE_USE_SECURE_CRT = 0,NTSTRSAFE_MAX_CCH = 2147483647,NTSTRSAFE_MAX_LENGTH = 2147483646,};
enum MACRO_NWF_EXTAP {NWF_EXTAP_OID = 0x3,};
enum MACRO_NWF_POWER {NWF_POWER_SAVE_OID = 0x7,};
enum MACRO_NWF_VWIFI {NWF_VWIFI_OID = 0x4,};
enum MACRO_OID_DOT11 {OID_DOT11_NDIS_START = 0xD010300,};
enum MACRO_PAGE_SIZE {PAGE_SIZE = 0x1000,PAGE_SHIFT = 0xC,};
enum MACRO_PARTITION {PARTITION_ENTRY_UNUSED = 0x0,PARTITION_FAT_12 = 0x1,PARTITION_XENIX_1 = 0x2,PARTITION_XENIX_2 = 0x3,PARTITION_FAT_16 = 0x4,PARTITION_EXTENDED = 0x5,PARTITION_HUGE = 0x6,PARTITION_IFS = 0x7,PARTITION_OS2BOOTMGR = 0xA,PARTITION_FAT32 = 0xB,PARTITION_FAT32_XINT13 = 0xC,PARTITION_XINT13 = 0xE,PARTITION_XINT13_EXTENDED = 0xF,PARTITION_PREP = 0x41,PARTITION_LDM = 0x42,PARTITION_UNIX = 0x63,PARTITION_SPACES = 0xE7,};
enum MACRO_PCI_CLASS {PCI_CLASS_PRE_20 = 0x0,PCI_CLASS_MASS_STORAGE_CTLR = 0x1,PCI_CLASS_NETWORK_CTLR = 0x2,PCI_CLASS_DISPLAY_CTLR = 0x3,PCI_CLASS_MULTIMEDIA_DEV = 0x4,PCI_CLASS_MEMORY_CTLR = 0x5,PCI_CLASS_BRIDGE_DEV = 0x6,PCI_CLASS_SIMPLE_COMMS_CTLR = 0x7,PCI_CLASS_BASE_SYSTEM_DEV = 0x8,PCI_CLASS_INPUT_DEV = 0x9,PCI_CLASS_DOCKING_STATION = 0xA,PCI_CLASS_PROCESSOR = 0xB,PCI_CLASS_SERIAL_BUS_CTLR = 0xC,PCI_CLASS_WIRELESS_CTLR = 0xD,PCI_CLASS_INTELLIGENT_IO_CTLR = 0xE,PCI_CLASS_SATELLITE_COMMS_CTLR = 0xF,PCI_CLASS_ENCRYPTION_DECRYPTION = 0x10,PCI_CLASS_DATA_ACQ_SIGNAL_PROC = 0x11,PCI_CLASS_NOT_DEFINED = 0xFF,PCI_SUBCLASS_PRE_20_NON_VGA = 0x0,PCI_SUBCLASS_PRE_20_VGA = 0x1,PCI_SUBCLASS_MSC_SCSI_BUS_CTLR = 0x0,PCI_SUBCLASS_MSC_IDE_CTLR = 0x1,PCI_SUBCLASS_MSC_FLOPPY_CTLR = 0x2,PCI_SUBCLASS_MSC_IPI_CTLR = 0x3,PCI_SUBCLASS_MSC_RAID_CTLR = 0x4,PCI_SUBCLASS_MSC_AHCI_CTLR = 0x6,PCI_SUBCLASS_MSC_OTHER = 0x80,PCI_SUBCLASS_NET_ETHERNET_CTLR = 0x0,PCI_SUBCLASS_NET_TOKEN_RING_CTLR = 0x1,PCI_SUBCLASS_NET_FDDI_CTLR = 0x2,PCI_SUBCLASS_NET_ATM_CTLR = 0x3,PCI_SUBCLASS_NET_ISDN_CTLR = 0x4,PCI_SUBCLASS_NET_OTHER = 0x80,PCI_SUBCLASS_VID_VGA_CTLR = 0x0,PCI_SUBCLASS_VID_XGA_CTLR = 0x1,PCI_SUBLCASS_VID_3D_CTLR = 0x2,PCI_SUBCLASS_VID_OTHER = 0x80,PCI_SUBCLASS_MM_VIDEO_DEV = 0x0,PCI_SUBCLASS_MM_AUDIO_DEV = 0x1,PCI_SUBCLASS_MM_TELEPHONY_DEV = 0x2,PCI_SUBCLASS_MM_OTHER = 0x80,PCI_SUBCLASS_MEM_RAM = 0x0,PCI_SUBCLASS_MEM_FLASH = 0x1,PCI_SUBCLASS_MEM_OTHER = 0x80,PCI_SUBCLASS_BR_HOST = 0x0,PCI_SUBCLASS_BR_ISA = 0x1,PCI_SUBCLASS_BR_EISA = 0x2,PCI_SUBCLASS_BR_MCA = 0x3,PCI_SUBCLASS_BR_PCI_TO_PCI = 0x4,PCI_SUBCLASS_BR_PCMCIA = 0x5,PCI_SUBCLASS_BR_NUBUS = 0x6,PCI_SUBCLASS_BR_CARDBUS = 0x7,PCI_SUBCLASS_BR_RACEWAY = 0x8,PCI_SUBCLASS_BR_OTHER = 0x80,PCI_SUBCLASS_COM_SERIAL = 0x0,PCI_SUBCLASS_COM_PARALLEL = 0x1,PCI_SUBCLASS_COM_MULTIPORT = 0x2,PCI_SUBCLASS_COM_MODEM = 0x3,PCI_SUBCLASS_COM_OTHER = 0x80,PCI_SUBCLASS_SYS_INTERRUPT_CTLR = 0x0,PCI_SUBCLASS_SYS_DMA_CTLR = 0x1,PCI_SUBCLASS_SYS_SYSTEM_TIMER = 0x2,PCI_SUBCLASS_SYS_REAL_TIME_CLOCK = 0x3,PCI_SUBCLASS_SYS_GEN_HOTPLUG_CTLR = 0x4,PCI_SUBCLASS_SYS_SDIO_CTRL = 0x5,PCI_SUBCLASS_SYS_OTHER = 0x80,PCI_SUBCLASS_INP_KEYBOARD = 0x0,PCI_SUBCLASS_INP_DIGITIZER = 0x1,PCI_SUBCLASS_INP_MOUSE = 0x2,PCI_SUBCLASS_INP_SCANNER = 0x3,PCI_SUBCLASS_INP_GAMEPORT = 0x4,PCI_SUBCLASS_INP_OTHER = 0x80,PCI_SUBCLASS_DOC_GENERIC = 0x0,PCI_SUBCLASS_DOC_OTHER = 0x80,PCI_SUBCLASS_PROC_386 = 0x0,PCI_SUBCLASS_PROC_486 = 0x1,PCI_SUBCLASS_PROC_PENTIUM = 0x2,PCI_SUBCLASS_PROC_ALPHA = 0x10,PCI_SUBCLASS_PROC_POWERPC = 0x20,PCI_SUBCLASS_PROC_COPROCESSOR = 0x40,PCI_SUBCLASS_SB_IEEE1394 = 0x0,PCI_SUBCLASS_SB_ACCESS = 0x1,PCI_SUBCLASS_SB_SSA = 0x2,PCI_SUBCLASS_SB_USB = 0x3,PCI_SUBCLASS_SB_FIBRE_CHANNEL = 0x4,PCI_SUBCLASS_SB_SMBUS = 0x5,PCI_SUBCLASS_SB_THUNDERBOLT = 0xA,PCI_SUBCLASS_WIRELESS_IRDA = 0x0,PCI_SUBCLASS_WIRELESS_CON_IR = 0x1,PCI_SUBCLASS_WIRELESS_RF = 0x10,PCI_SUBCLASS_WIRELESS_OTHER = 0x80,PCI_SUBCLASS_INTIO_I2O = 0x0,PCI_SUBCLASS_SAT_TV = 0x1,PCI_SUBCLASS_SAT_AUDIO = 0x2,PCI_SUBCLASS_SAT_VOICE = 0x3,PCI_SUBCLASS_SAT_DATA = 0x4,PCI_SUBCLASS_CRYPTO_NET_COMP = 0x0,PCI_SUBCLASS_CRYPTO_ENTERTAINMENT = 0x10,PCI_SUBCLASS_CRYPTO_OTHER = 0x80,PCI_SUBCLASS_DASP_DPIO = 0x0,PCI_SUBCLASS_DASP_OTHER = 0x80,PCI_ADDRESS_IO_SPACE = 0x1,PCI_ADDRESS_MEMORY_TYPE_MASK = 0x6,PCI_ADDRESS_MEMORY_PREFETCHABLE = 0x8,PCI_ADDRESS_IO_ADDRESS_MASK = 0xFFFFFFFC,PCI_ADDRESS_MEMORY_ADDRESS_MASK = 0xFFFFFFF0,PCI_ADDRESS_ROM_ADDRESS_MASK = 0xFFFFF800,PCI_TYPE_32BIT = 0x0,PCI_TYPE_20BIT = 0x2,PCI_TYPE_64BIT = 0x4,PCI_ROMADDRESS_ENABLED = 0x1,PCI_DEVICE_PRESENT_INTERFACE_VERSION = 0x1,PCI_USE_SUBSYSTEM_IDS = 0x1,PCI_USE_REVISION = 0x2,PCI_USE_VENDEV_IDS = 0x4,PCI_USE_CLASS_SUBCLASS = 0x8,PCI_USE_PROGIF = 0x10,PCI_USE_LOCAL_BUS = 0x20,PCI_USE_LOCAL_DEVICE = 0x40,PCI_EXPRESS_LINK_QUIESCENT_INTERFACE_VERSION = 0x1,PCI_EXPRESS_ROOT_PORT_INTERFACE_VERSION = 0x1,PCI_MSIX_TABLE_CONFIG_INTERFACE_VERSION = 0x1,};
enum MACRO_PCI_TYPE0 {PCI_TYPE0_ADDRESSES = 6,PCI_TYPE1_ADDRESSES = 2,PCI_TYPE2_ADDRESSES = 5,PCI_EXTENDED_CONFIG_LENGTH = 4096,PCI_MAX_DEVICES = 32,PCI_MAX_FUNCTION = 8,PCI_MAX_BRIDGE_NUMBER = 255,PCI_INVALID_VENDORID = 65535,PCI_MULTIFUNCTION = 128,PCI_DEVICE_TYPE = 0,PCI_BRIDGE_TYPE = 1,PCI_CARDBUS_BRIDGE_TYPE = 2,PCI_ENABLE_IO_SPACE = 1,PCI_ENABLE_MEMORY_SPACE = 2,PCI_ENABLE_BUS_MASTER = 4,PCI_ENABLE_SPECIAL_CYCLES = 8,PCI_ENABLE_WRITE_AND_INVALIDATE = 16,PCI_ENABLE_VGA_COMPATIBLE_PALETTE = 32,PCI_ENABLE_PARITY = 64,PCI_ENABLE_WAIT_CYCLE = 128,PCI_ENABLE_SERR = 256,PCI_ENABLE_FAST_BACK_TO_BACK = 512,PCI_DISABLE_LEVEL_INTERRUPT = 1024,PCI_STATUS_INTERRUPT_PENDING = 8,PCI_STATUS_CAPABILITIES_LIST = 16,PCI_STATUS_66MHZ_CAPABLE = 32,PCI_STATUS_UDF_SUPPORTED = 64,PCI_STATUS_FAST_BACK_TO_BACK = 128,PCI_STATUS_DATA_PARITY_DETECTED = 256,PCI_STATUS_DEVSEL = 1536,PCI_STATUS_SIGNALED_TARGET_ABORT = 2048,PCI_STATUS_RECEIVED_TARGET_ABORT = 4096,PCI_STATUS_RECEIVED_MASTER_ABORT = 8192,PCI_STATUS_SIGNALED_SYSTEM_ERROR = 16384,PCI_STATUS_DETECTED_PARITY_ERROR = 32768,PCI_WHICHSPACE_CONFIG = 0,PCI_WHICHSPACE_ROM = 1382638416,PCI_CAPABILITY_ID_POWER_MANAGEMENT = 1,PCI_CAPABILITY_ID_AGP = 2,PCI_CAPABILITY_ID_VPD = 3,PCI_CAPABILITY_ID_SLOT_ID = 4,PCI_CAPABILITY_ID_MSI = 5,PCI_CAPABILITY_ID_CPCI_HOTSWAP = 6,PCI_CAPABILITY_ID_PCIX = 7,PCI_CAPABILITY_ID_HYPERTRANSPORT = 8,PCI_CAPABILITY_ID_VENDOR_SPECIFIC = 9,PCI_CAPABILITY_ID_DEBUG_PORT = 10,PCI_CAPABILITY_ID_CPCI_RES_CTRL = 11,PCI_CAPABILITY_ID_SHPC = 12,PCI_CAPABILITY_ID_P2P_SSID = 13,PCI_CAPABILITY_ID_AGP_TARGET = 14,PCI_CAPABILITY_ID_SECURE = 15,PCI_CAPABILITY_ID_PCI_EXPRESS = 16,PCI_CAPABILITY_ID_MSIX = 17,PCI_EXPRESS_ADVANCED_ERROR_REPORTING_CAP_ID = 1,PCI_EXPRESS_VIRTUAL_CHANNEL_CAP_ID = 2,PCI_EXPRESS_DEVICE_SERIAL_NUMBER_CAP_ID = 3,PCI_EXPRESS_POWER_BUDGETING_CAP_ID = 4,PCI_EXPRESS_RC_LINK_DECLARATION_CAP_ID = 5,PCI_EXPRESS_RC_INTERNAL_LINK_CONTROL_CAP_ID = 6,PCI_EXPRESS_RC_EVENT_COLLECTOR_ENDPOINT_ASSOCIATION_CAP_ID = 7,PCI_EXPRESS_MFVC_CAP_ID = 8,PCI_EXPRESS_VC_AND_MFVC_CAP_ID = 9,PCI_EXPRESS_RCRB_HEADER_CAP_ID = 10,PCI_EXPRESS_VENDOR_SPECIFIC_CAP_ID = 11,PCI_EXPRESS_ACCESS_CONTROL_SERVICES_CAP_ID = 13,PCI_EXPRESS_ARI_CAP_ID = 14,PCI_EXPRESS_SINGLE_ROOT_IO_VIRTUALIZATION_CAP_ID = 16,PCI_EXPRESS_TPH_REQUESTER_CAP_ID = 23,PCI_EXPRESS_LTR_CAP_ID = 24,PCI_EXPRESS_THUNDERBOLT_CAP_ID = 31,};
enum MACRO_PERFSTATE {PERFSTATE_POLICY_CHANGE_IDEAL = 0,PERFSTATE_POLICY_CHANGE_SINGLE = 1,PERFSTATE_POLICY_CHANGE_ROCKET = 2,PERFSTATE_POLICY_CHANGE_MAX = 2,};
enum MACRO_PERMANENT {PERMANENT_VC = 0x1,};
enum MACRO_PNPNOTIFY {PNPNOTIFY_DEVICE_INTERFACE_INCLUDE_EXISTING_INTERFACES = 0x1,};
enum MACRO_POOL_COLD {POOL_COLD_ALLOCATION = 256,POOL_NX_ALLOCATION = 512,POOL_QUOTA_FAIL_INSTEAD_OF_RAISE = 8,POOL_RAISE_IF_ALLOCATION_FAILURE = 16,};
enum MACRO_PORT_LINK {PORT_LINK_STATE_U0 = 0,PORT_LINK_STATE_U1 = 1,PORT_LINK_STATE_U2 = 2,PORT_LINK_STATE_U3 = 3,PORT_LINK_STATE_DISABLED = 4,PORT_LINK_STATE_RX_DETECT = 5,PORT_LINK_STATE_INACTIVE = 6,PORT_LINK_STATE_POLLING = 7,PORT_LINK_STATE_RECOVERY = 8,PORT_LINK_STATE_HOT_RESET = 9,PORT_LINK_STATE_COMPLIANCE_MODE = 10,PORT_LINK_STATE_LOOPBACK = 11,PORT_LINK_STATE_TEST_MODE = 11,};
enum MACRO_PO_REASON {PO_REASON_STATE_S1 = 0x1,PO_REASON_STATE_S2 = 0x2,PO_REASON_STATE_S3 = 0x4,PO_REASON_STATE_S4 = 0x8,PO_REASON_STATE_S4FIRM = 0x10,PO_REASON_STATE_S0IDLE = 0x20,PO_REASON_STATE_STANDBY = 0x7,PO_REASON_STATE_ALL = 0x1F,PO_SLEEP_DISABLE_S1 = 0x1,PO_SLEEP_DISABLE_S2 = 0x2,PO_SLEEP_DISABLE_S3 = 0x4,PO_SLEEP_DISABLE_S4 = 0x8,PO_SLEEP_DISABLE_ALL = 0xF,PO_PERFORMANCE_LIMIT_OS_POLICY = 0x1,PO_PERFORMANCE_LIMIT_PLATFORM_UNSPECIFIED = 0x2,PO_PERFORMANCE_LIMIT_THERMAL = 0x4,PO_PERFORMANCE_LIMIT_POWER = 0x8,PO_PERFORMANCE_LIMIT_DOMAIN_DEPENDENCY = 0x10,};
enum MACRO_PRIVILEGE {PRIVILEGE_SET_ALL_NECESSARY = 1,};
enum MACRO_PROCESSOR {PROCESSOR_DRIVER_INTERNAL = 0x143,};
enum MACRO_PROTECTED {PROTECTED_POOL = 0x0,};
enum MACRO_P_NOWAITO {P_NOWAITO = 3,P_DETACH = 4,};
enum MACRO_RDBSS_REF {RDBSS_REF_TRACK_SRVCALL = 0x1,RDBSS_REF_TRACK_NETROOT = 0x2,RDBSS_REF_TRACK_VNETROOT = 0x4,RDBSS_REF_TRACK_NETFOBX = 0x8,RDBSS_REF_TRACK_NETFCB = 0x10,RDBSS_REF_TRACK_SRVOPEN = 0x20,};
enum MACRO_READ_COPY {READ_COPY_NUMBER_KEY = 0x52434E00,};
enum MACRO_RECURSIVE {RECURSIVE_MACHINE_CHECK = 0xFB,};
enum MACRO_REFERENCE {REFERENCE_BY_POINTER = 0x18,};
enum MACRO_RTL_QUERY {RTL_QUERY_REGISTRY_SUBKEY = 0x1,RTL_QUERY_REGISTRY_TOPKEY = 0x2,RTL_QUERY_REGISTRY_REQUIRED = 0x4,RTL_QUERY_REGISTRY_NOVALUE = 0x8,RTL_QUERY_REGISTRY_NOEXPAND = 0x10,RTL_QUERY_REGISTRY_DIRECT = 0x20,RTL_QUERY_REGISTRY_DELETE = 0x40,RTL_QUERY_REGISTRY_NOSTRING = 0x80,RTL_QUERY_REGISTRY_TYPECHECK = 0x100,RTL_QUERY_REGISTRY_TYPECHECK_SHIFT = 0x18,RTL_QUERY_REGISTRY_TYPECHECK_MASK = 0xFF000000,RTL_REGISTRY_ABSOLUTE = 0x0,RTL_REGISTRY_SERVICES = 0x1,RTL_REGISTRY_CONTROL = 0x2,RTL_REGISTRY_WINDOWS_NT = 0x3,RTL_REGISTRY_DEVICEMAP = 0x4,RTL_REGISTRY_USER = 0x5,RTL_REGISTRY_MAXIMUM = 0x6,RTL_REGISTRY_HANDLE = 0x40000000,RTL_REGISTRY_OPTIONAL = 0xFFFFFFFF80000000,};
enum MACRO_RX_PREFIX {RX_PREFIX_TABLE_DEFAULT_LENGTH = 32,RX_REGISTERMINI_FLAG_DONT_PROVIDE_UNCS = 1,RX_REGISTERMINI_FLAG_DONT_PROVIDE_MAILSLOTS = 2,RX_REGISTERMINI_FLAG_DONT_INIT_DRIVER_DISPATCH = 4,RX_REGISTERMINI_FLAG_DONT_INIT_PREFIX_N_SCAVENGER = 8,RX_REGISTERMINI_FLAG_DONT_USE_VISTA_REDIRECTOR = 16,};
enum MACRO_SAP_FIELD {SAP_FIELD_ABSENT = 0xFFFFFFFE,SAP_FIELD_ANY = 0xFFFFFFFF,SAP_FIELD_ANY_AESA_SEL = 0xFFFFFFFA,SAP_FIELD_ANY_AESA_REST = 0xFFFFFFFB,};
enum MACRO_SCARD_ATR {SCARD_ATR_LENGTH = 33,SCARD_PROTOCOL_UNDEFINED = 0,SCARD_PROTOCOL_T0 = 1,SCARD_PROTOCOL_T1 = 2,SCARD_PROTOCOL_RAW = 65536,SCARD_PROTOCOL_Tx = 3,SCARD_PROTOCOL_DEFAULT = -2147483648,SCARD_PROTOCOL_OPTIMAL = 0,SCARD_POWER_DOWN = 0,SCARD_COLD_RESET = 1,SCARD_WARM_RESET = 2,};
enum MACRO_SECBUFFER {SECBUFFER_VERSION = 0,SECBUFFER_EMPTY = 0,SECBUFFER_DATA = 1,SECBUFFER_TOKEN = 2,SECBUFFER_PKG_PARAMS = 3,SECBUFFER_MISSING = 4,SECBUFFER_EXTRA = 5,SECBUFFER_STREAM_TRAILER = 6,SECBUFFER_STREAM_HEADER = 7,SECBUFFER_NEGOTIATION_INFO = 8,SECBUFFER_PADDING = 9,SECBUFFER_STREAM = 10,SECBUFFER_MECHLIST = 11,SECBUFFER_MECHLIST_SIGNATURE = 12,SECBUFFER_TARGET = 13,SECBUFFER_CHANNEL_BINDINGS = 14,SECBUFFER_CHANGE_PASS_RESPONSE = 15,SECBUFFER_TARGET_HOST = 16,SECBUFFER_ALERT = 17,SECBUFFER_ATTRMASK = -268435456,SECBUFFER_READONLY = -2147483648,SECBUFFER_READONLY_WITH_CHECKSUM = 268435456,SECBUFFER_RESERVED = 1610612736,};
enum MACRO_SEC_WINNT {SEC_WINNT_AUTH_IDENTITY_VERSION_2 = 0x201,SEC_WINNT_AUTH_IDENTITY_ANSI = 0x1,SEC_WINNT_AUTH_IDENTITY_UNICODE = 0x2,SEC_WINNT_AUTH_IDENTITY_VERSION = 0x200,SEC_WINNT_AUTH_IDENTITY_MARSHALLED = 0x4,SEC_WINNT_AUTH_IDENTITY_ONLY = 0x8,};
enum MACRO_SEMAPHORE {SEMAPHORE_QUERY_STATE = 0x1,SEMAPHORE_MODIFY_STATE = 0x2,SEMAPHORE_ALL_ACCESS = 0x1F0003,};
enum MACRO_SETBITOFF {SETBITOFF = 0,};
enum MACRO_SET_ERROR {SET_ERROR_SOURCE_INFO_IN_Length_ID = 2,SET_ERROR_SOURCE_INFO_IN_ErrorSourceInfo_ID = 3,SET_ERROR_SOURCE_INFO_OUT_Status_ID = 1,};
enum MACRO_SET_LOCAL {SET_LOCAL_HOST_PROPERTIES_NO_CYCLE_STARTS = 0x1,SET_LOCAL_HOST_PROPERTIES_CYCLE_START_CONTROL = 0x1,SET_LOCAL_HOST_PROPERTIES_GAP_COUNT = 0x2,SET_LOCAL_HOST_PROPERTIES_MODIFY_CROM = 0x3,SET_LOCAL_HOST_PROPERTIES_MAX_PAYLOAD = 0x4,SET_LOCAL_HOST_PROPERTIES_DEBUG_ENTRY = 0x5,};
enum MACRO_SET_PURGE {SET_PURGE_FAILURE_MODE_ENABLED = 0x1,SET_PURGE_FAILURE_MODE_DISABLED = 0x2,};
enum MACRO_SE_BACKUP {SE_BACKUP_PRIVILEGES_CHECKED = 0x100,};
enum MACRO_SHORT_MIN {SHORT_MIN = -32768,INT32_MIN = -2147483648,LONGLONG_MIN = -9223372036854775808,LONG64_MIN = -9223372036854775808,INT64_MIN = -9223372036854775808,INT_PTR_MIN = -2147483648,LONG_PTR_MIN = -2147483648,PTRDIFF_T_MIN = -2147483648,SSIZE_T_MIN = -2147483648,};
enum MACRO_SIGNATURE {FADT_SIGNATURE = 0x50434146,ACPI_SRAT_SIGNATURE = 0x54415253,ACPI_MPST_SIGNATURE = 0x5453504D,ACPI_MSCT_SIGNATURE = 0x5443534D,};
enum MACRO_SIO_QUERY {SIO_QUERY_WFP_ALE_ENDPOINT_HANDLE = 1476395213,SIO_QUERY_RSS_SCALABILITY_INFO = 1476395218,};
enum MACRO_SIZEOF_IP {SIZEOF_IP_OPT_ROUTING_HEADER = 3,SIZEOF_IP_OPT_TIMESTAMP_HEADER = 4,SIZEOF_IP_OPT_SECURITY = 11,SIZEOF_IP_OPT_STREAMIDENTIFIER = 4,SIZEOF_IP_OPT_ROUTERALERT = 4,};
enum MACRO_SMART_CYL {SMART_CYL_LOW = 0x4F,SMART_CYL_HI = 0xC2,SMART_NO_ERROR = 0x0,SMART_IDE_ERROR = 0x1,SMART_INVALID_FLAG = 0x2,SMART_INVALID_COMMAND = 0x3,SMART_INVALID_BUFFER = 0x4,SMART_INVALID_DRIVE = 0x5,SMART_INVALID_IOCTL = 0x6,SMART_ERROR_NO_MEM = 0x7,SMART_INVALID_REGISTER = 0x8,SMART_NOT_SUPPORTED = 0x9,SMART_NO_IDE_DEVICE = 0xA,SMART_OFFLINE_ROUTINE_OFFLINE = 0x0,SMART_SHORT_SELFTEST_OFFLINE = 0x1,SMART_EXTENDED_SELFTEST_OFFLINE = 0x2,SMART_ABORT_OFFLINE_SELFTEST = 0x7F,SMART_SHORT_SELFTEST_CAPTIVE = 0x81,SMART_EXTENDED_SELFTEST_CAPTIVE = 0x82,};
enum MACRO_SPEED_100 {SPEED_100_INDEX = 0,SPEED_200_INDEX = 1,SPEED_400_INDEX = 2,};
enum MACRO_SPEED_MAP {SPEED_MAP_LENGTH = 0x3F1,};
enum MACRO_SRB_CLASS {SRB_CLASS_FLAGS_LOW_PRIORITY = 0x10000000,SRB_CLASS_FLAGS_PERSISTANT = 0x20000000,SRB_CLASS_FLAGS_PAGING = 0x40000000,SRB_CLASS_FLAGS_FREE_MDL = 0x80000000,};
enum MACRO_STOR_POFX {STOR_POFX_COMPONENT_IDLE_STATE_VERSION_V1 = 1,STOR_POFX_UNKNOWN_POWER = -1,STOR_POFX_UNKNOWN_TIME = -1,STOR_POFX_COMPONENT_VERSION_V1 = 1,STOR_POFX_UNIT_MIN_IDLE_STATES = 1,STOR_POFX_UNIT_MAX_IDLE_STATES = 2,STOR_POFX_ADAPTER_MIN_IDLE_STATES = 1,STOR_POFX_ADAPTER_MAX_IDLE_STATES = 1,STOR_POFX_DEVICE_VERSION_V1 = 1,STOR_POFX_DEVICE_VERSION_V2 = 2,STOR_POFX_UNIT_MIN_COMPONENTS = 1,STOR_POFX_UNIT_MAX_COMPONENTS = 1,STOR_POFX_ADAPTER_MIN_COMPONENTS = 1,STOR_POFX_ADAPTER_MAX_COMPONENTS = 1,STOR_POFX_DEVICE_FLAG_NO_D0 = 1,STOR_POFX_DEVICE_FLAG_NO_D3 = 2,STOR_POFX_DEVICE_FLAG_ENABLE_D3_COLD = 4,STOR_POFX_DEVICE_FLAG_NO_DUMP_ACTIVE = 8,STOR_POFX_DEVICE_FLAG_IDLE_TIMEOUT = 16,};
enum MACRO_SUPPORTED {SUPPORTED_FS_FEATURES_OFFLOAD_READ = 0x1,SUPPORTED_FS_FEATURES_OFFLOAD_WRITE = 0x2,SUPPORTED_FS_FEATURES_VALID_MASK = 0x3,};
enum MACRO_TDI_EVENT {TDI_EVENT_CONNECT = 0,TDI_EVENT_DISCONNECT = 1,TDI_EVENT_ERROR = 2,TDI_EVENT_RECEIVE = 3,TDI_EVENT_RECEIVE_DATAGRAM = 4,TDI_EVENT_RECEIVE_EXPEDITED = 5,TDI_EVENT_SEND_POSSIBLE = 6,TDI_RECEIVE_BROADCAST = 4,TDI_RECEIVE_MULTICAST = 8,TDI_RECEIVE_PARTIAL = 16,TDI_RECEIVE_NORMAL = 32,TDI_RECEIVE_EXPEDITED = 64,TDI_RECEIVE_PEEK = 128,TDI_RECEIVE_NO_RESPONSE_EXP = 256,TDI_RECEIVE_COPY_LOOKAHEAD = 512,TDI_RECEIVE_ENTIRE_MESSAGE = 1024,TDI_RECEIVE_AT_DISPATCH_LEVEL = 2048,TDI_RECEIVE_CONTROL_INFO = 4096,TDI_RECEIVE_FORCE_INDICATION = 8192,TDI_RECEIVE_NO_PUSH = 16384,TDI_QUERY_ACCEPT = 1,TDI_SEND_EXPEDITED = 32,TDI_SEND_PARTIAL = 64,TDI_SEND_NO_RESPONSE_EXPECTED = 128,TDI_SEND_NON_BLOCKING = 256,TDI_SEND_AND_DISCONNECT = 512,TDI_DISCONNECT_WAIT = 1,TDI_DISCONNECT_ABORT = 2,TDI_DISCONNECT_RELEASE = 4,TDI_QUERY_BROADCAST_ADDRESS = 1,TDI_QUERY_PROVIDER_INFORMATION = 2,TDI_QUERY_PROVIDER_INFO = 2,TDI_QUERY_ADDRESS_INFO = 3,TDI_QUERY_CONNECTION_INFO = 4,TDI_QUERY_PROVIDER_STATISTICS = 5,TDI_QUERY_DATAGRAM_INFO = 6,TDI_QUERY_DATA_LINK_ADDRESS = 7,TDI_QUERY_NETWORK_ADDRESS = 8,TDI_QUERY_MAX_DATAGRAM_INFO = 9,TDI_QUERY_ROUTING_INFO = 10,TDI_QUERY_ADAPTER_STATUS = 256,TDI_QUERY_SESSION_STATUS = 512,TDI_QUERY_FIND_NAME = 768,TDI_SERVICE_CONNECTION_MODE = 1,TDI_SERVICE_ORDERLY_RELEASE = 2,TDI_SERVICE_CONNECTIONLESS_MODE = 4,TDI_SERVICE_ERROR_FREE_DELIVERY = 8,TDI_SERVICE_SECURITY_LEVEL = 16,TDI_SERVICE_BROADCAST_SUPPORTED = 32,TDI_SERVICE_MULTICAST_SUPPORTED = 64,TDI_SERVICE_DELAYED_ACCEPTANCE = 128,TDI_SERVICE_EXPEDITED_DATA = 256,TDI_SERVICE_INTERNAL_BUFFERING = 512,TDI_SERVICE_ROUTE_DIRECTED = 1024,TDI_SERVICE_NO_ZERO_LENGTH = 2048,TDI_SERVICE_POINT_TO_POINT = 4096,TDI_SERVICE_MESSAGE_MODE = 8192,TDI_SERVICE_HALF_DUPLEX = 16384,TDI_SERVICE_DGRAM_CONNECTION = 32768,TDI_SERVICE_FORCE_ACCESS_CHECK = 65536,TDI_SERVICE_SEND_AND_DISCONNECT = 131072,TDI_SERVICE_DIRECT_ACCEPT = 262144,TDI_SERVICE_ACCEPT_LOCAL_ADDR = 524288,TDI_SERVICE_ADDRESS_SECURITY = 1048576,TDI_SERVICE_PREPOST_RECVS = 2097152,TDI_SERVICE_NO_PUSH = 4194304,};
enum MACRO_TOKEN_HAS {TOKEN_HAS_TRAVERSE_PRIVILEGE = 0x1,TOKEN_HAS_BACKUP_PRIVILEGE = 0x2,TOKEN_HAS_RESTORE_PRIVILEGE = 0x4,TOKEN_WRITE_RESTRICTED = 0x8,TOKEN_IS_RESTRICTED = 0x10,TOKEN_SESSION_NOT_REFERENCED = 0x20,TOKEN_SANDBOX_INERT = 0x40,TOKEN_HAS_IMPERSONATE_PRIVILEGE = 0x80,};
enum MACRO_TRANSPORT {TRANSPORT_HEADER_SIZE = 128,};
enum MACRO_TRUNCATED {TRUNCATED_HASH_LEN = 12,};
enum MACRO_TR_LENGTH {TR_LENGTH_OF_FUNCTIONAL = 4,TR_LENGTH_OF_ADDRESS = 6,};
enum MACRO_UCHAR_NUL {UCHAR_NUL = 0x0,UCHAR_SOH = 0x1,UCHAR_STX = 0x2,UCHAR_ETX = 0x3,UCHAR_EOT = 0x4,UCHAR_ENQ = 0x5,UCHAR_ACK = 0x6,UCHAR_BEL = 0x7,UCHAR_BS = 0x8,UCHAR_HT = 0x9,UCHAR_LF = 0xA,UCHAR_VT = 0xB,UCHAR_FF = 0xC,UCHAR_CR = 0xD,UCHAR_SO = 0xE,UCHAR_SI = 0xF,UCHAR_DLE = 0x10,UCHAR_DC1 = 0x11,UCHAR_DC2 = 0x12,UCHAR_DC3 = 0x13,UCHAR_DC4 = 0x14,UCHAR_NAK = 0x15,UCHAR_SYN = 0x16,UCHAR_ETB = 0x17,UCHAR_CAN = 0x18,UCHAR_EM = 0x19,UCHAR_SUB = 0x1A,UCHAR_ESC = 0x1B,UCHAR_FS = 0x1C,UCHAR_GS = 0x1D,UCHAR_RS = 0x1E,UCHAR_US = 0x1F,UCHAR_SP = 0x20,};
enum MACRO_UNIT_CODE {START_UNIT_CODE = 0x1,STOP_UNIT_CODE = 0x0,};
enum MACRO_USBD_KEEP {USBD_KEEP_DEVICE_DATA = 0x1,USBD_MARK_DEVICE_BUSY = 0x2,};
enum MACRO_USBD_PORT {USBD_PORT_ENABLED = 0x1,USBD_PORT_CONNECTED = 0x2,};
enum MACRO_USB_BUSIF {USB_BUSIF_HUB_VERSION_0 = 0x0,USB_BUSIF_HUB_VERSION_1 = 0x1,USB_BUSIF_HUB_VERSION_2 = 0x2,USB_BUSIF_HUB_VERSION_3 = 0x3,USB_BUSIF_HUB_VERSION_4 = 0x4,USB_BUSIF_HUB_VERSION_5 = 0x5,USB_BUSIF_HUB_VERSION_6 = 0x6,USB_BUSIF_HUB_VERSION_7 = 0x7,USB_BUSIF_HUB_VERSION_8 = 0x8,USB_BUSIF_HUB_MIDUMP_VERSION_0 = 0x0,USB_BUSIF_HUB_SS_VERSION_0 = 0x0,};
enum MACRO_USE_LOCAL {USE_LOCAL_NODE = 1,USE_SCODE_SPEED = 2,};
enum MACRO_VER_EQUAL {VER_EQUAL = 1,VER_GREATER = 2,VER_GREATER_EQUAL = 3,VER_LESS = 4,VER_LESS_EQUAL = 5,VER_AND = 6,VER_OR = 7,VER_CONDITION_MASK = 7,VER_NUM_BITS_PER_CONDITION_MASK = 3,VER_MINORVERSION = 1,VER_MAJORVERSION = 2,VER_BUILDNUMBER = 4,VER_PLATFORMID = 8,VER_SERVICEPACKMINOR = 16,VER_SERVICEPACKMAJOR = 32,VER_SUITENAME = 64,VER_PRODUCT_TYPE = 128,VER_NT_WORKSTATION = 1,VER_NT_DOMAIN_CONTROLLER = 2,VER_NT_SERVER = 3,VER_PLATFORM_WIN32s = 0,VER_PLATFORM_WIN32_WINDOWS = 1,VER_PLATFORM_WIN32_NT = 2,};
enum MACRO_VIDEO_TDR {VIDEO_TDR_FAILURE = 0x116,VIDEO_TDR_TIMEOUT_DETECTED = 0x117,};
enum MACRO_VIOLATION {FSRTL_EXTRA_CREATE_PARAMETER_VIOLATION = 0x10C,WDF_VIOLATION = 0x10D,};
enum MACRO_WAN_ERROR {WAN_ERROR_CRC = 0x1,WAN_ERROR_FRAMING = 0x2,WAN_ERROR_HARDWAREOVERRUN = 0x4,WAN_ERROR_BUFFEROVERRUN = 0x8,WAN_ERROR_TIMEOUT = 0x10,WAN_ERROR_ALIGNMENT = 0x20,};
enum MACRO_WRITE_LOG {WRITE_LOG_SECTORS_IN_LogAddress_ID = 1,WRITE_LOG_SECTORS_IN_SectorCount_ID = 2,WRITE_LOG_SECTORS_IN_Length_ID = 3,WRITE_LOG_SECTORS_IN_LogSectors_ID = 4,WRITE_LOG_SECTORS_OUT_Success_ID = 5,};
enum MACRO_WSK_EVENT {WSK_EVENT_RECEIVE_FROM = 0x100,WSK_EVENT_ACCEPT = 0x200,WSK_EVENT_SEND_BACKLOG = 0x10,WSK_EVENT_RECEIVE = 0x40,WSK_EVENT_DISCONNECT = 0x80,WSK_EVENT_DISABLE = 0x80000000,};
enum MACRO_WST_BYTES {WST_BYTES_PER_LINE = 42,};
enum MACRO__BDATYPES {_BDATYPES_ = 1,};
enum MACRO__CRT_WARN {_CRT_WARN = 0,_CRT_ERROR = 1,_CRT_ASSERT = 2,_CRT_ASSERT_WRN = 3,_CRT_ERRCNT = 4,};
enum MACRO__MAX_PATH {_MAX_PATH = 260,_MAX_DRIVE = 3,_MAX_DIR = 256,_MAX_FNAME = 256,_MAX_EXT = 256,};
enum MACRO__MAX_WAIT {_MAX_WAIT_MALLOC_CRT = 60000,};
enum MACRO__OVERFLOW {_OVERFLOW = 3,_UNDERFLOW = 4,};
enum MACRO__TRUNCATE {_TRUNCATE = 4294967295,};
enum MACRO__WIN32_IE {_WIN32_IE = 2560,};
enum MACRO___WARNING {__WARNING_CYCLOMATIC_COMPLEXITY = 28734,__WARNING_USING_UNINIT_VAR = 6001,__WARNING_RETURN_UNINIT_VAR = 6101,__WARNING_DEREF_NULL_PTR = 6011,__WARNING_MISSING_ZERO_TERMINATION2 = 6054,__WARNING_INVALID_PARAM_VALUE_1 = 6387,__WARNING_POSTCONDITION_NULLTERMINATION_VIOLATION = 26036,__WARNING_INVALID_PARAM_VALUE_3 = 28183,__WARNING_RETURNING_BAD_RESULT = 28196,__WARNING_BANNED_API_USAGE = 28719,};
typedef struct _MCA_DRIVER_INFO MCA_DRIVER_INFO;
typedef struct _MF_RESOURCE_MAP MF_RESOURCE_MAP;
typedef struct mpeg1waveformat_tag MPEG1WAVEFORMAT;
enum MPEG2StreamType {BDA_UNITIALIZED_MPEG2STREAMTYPE = 0xFFFFFFFF,Reserved1 = 0x0,ISO_IEC_11172_2_VIDEO = 0x1,ISO_IEC_13818_2_VIDEO = 0x2,ISO_IEC_11172_3_AUDIO = 0x3,ISO_IEC_13818_3_AUDIO = 0x4,ISO_IEC_13818_1_PRIVATE_SECTION = 0x5,ISO_IEC_13818_1_PES = 0x6,ISO_IEC_13522_MHEG = 0x7,ANNEX_A_DSM_CC = 0x8,ITU_T_REC_H_222_1 = 0x9,ISO_IEC_13818_6_TYPE_A = 0xA,ISO_IEC_13818_6_TYPE_B = 0xB,ISO_IEC_13818_6_TYPE_C = 0xC,ISO_IEC_13818_6_TYPE_D = 0xD,ISO_IEC_13818_1_AUXILIARY = 0xE,ISO_IEC_13818_7_AUDIO = 0xF,ISO_IEC_14496_2_VISUAL = 0x10,ISO_IEC_14496_3_AUDIO = 0x11,ISO_IEC_14496_1_IN_PES = 0x12,ISO_IEC_14496_1_IN_SECTION = 0x13,ISO_IEC_13818_6_DOWNLOAD = 0x14,METADATA_IN_PES = 0x15,METADATA_IN_SECTION = 0x16,METADATA_IN_DATA_CAROUSEL = 0x17,METADATA_IN_OBJECT_CAROUSEL = 0x18,METADATA_IN_DOWNLOAD_PROTOCOL = 0x19,IRPM_STREAMM = 0x1A,ITU_T_H264 = 0x1B,ISO_IEC_13818_1_RESERVED = 0x1C,USER_PRIVATE = 0x10,ISO_IEC_USER_PRIVATE = 0x80,DOLBY_AC3_AUDIO = 0x81,DOLBY_DIGITAL_PLUS_AUDIO_ATSC = 0x87,};
typedef struct _MPIO_DRIVE_INFO MPIO_DRIVE_INFO;
typedef struct _MPIO_EventEntry MPIO_EventEntry;
typedef struct _MSMCAInfo_Entry MSMCAInfo_Entry;
typedef struct _MSNdis_PortChar MSNdis_PortChar;
typedef struct _MSNdis_VendorID MSNdis_VendorID;
typedef struct _NABTSFEC_BUFFER NABTSFEC_BUFFER;
typedef struct _NDIS_802_11_KEY NDIS_802_11_KEY;
typedef struct _NDIS_802_11_WEP NDIS_802_11_WEP;
typedef struct _NDIS_LINK_SPEED NDIS_LINK_SPEED;
typedef struct _NDIS_LINK_STATE NDIS_LINK_STATE;
typedef struct _NDIS_OPEN_BLOCK NDIS_OPEN_BLOCK;
typedef struct _NDIS_OPER_STATE NDIS_OPER_STATE;
typedef struct _NDIS_PORT_ARRAY NDIS_PORT_ARRAY;
typedef struct _NDIS_PORT_STATE NDIS_PORT_STATE;
typedef struct _NDIS_RW_LOCK_EX NDIS_RW_LOCK_EX;
typedef struct _NDIS_TAPI_CLOSE NDIS_TAPI_CLOSE;
typedef struct _NDIS_TAPI_EVENT NDIS_TAPI_EVENT;
typedef struct _NDIS_WLAN_BSSID NDIS_WLAN_BSSID;
typedef struct _NDK_CQ_DISPATCH NDK_CQ_DISPATCH;
typedef struct _NDK_MR_DISPATCH NDK_MR_DISPATCH;
typedef struct _NDK_MW_DISPATCH NDK_MW_DISPATCH;
typedef struct _NDK_PD_DISPATCH NDK_PD_DISPATCH;
typedef struct _NDK_QP_DISPATCH NDK_QP_DISPATCH;
typedef struct _NETWORK_ADDRESS NETWORK_ADDRESS;
typedef struct _NET_BUFFER_DATA NET_BUFFER_DATA;
typedef struct _NET_BUFFER_LIST NET_BUFFER_LIST;
typedef struct _NET_IF_ALIAS_LH NET_IF_ALIAS_LH;
typedef struct _NTFS_STATISTICS NTFS_STATISTICS;
typedef  char *NTSTRSAFE_PCSTR;
typedef struct _OCR_REGISTER_V2 OCR_REGISTER_V2;
typedef struct _OPC_TABLE_ENTRY OPC_TABLE_ENTRY;
typedef struct _ACCESS_REASONS *PACCESS_REASONS;
typedef struct _ADAPTER_OBJECT *PADAPTER_OBJECT;
typedef struct _ADDRESS_OFFSET *PADDRESS_OFFSET;
typedef struct _PATHNAME_BUFFER PATHNAME_BUFFER;
typedef struct _AVCCONNECTINFO *PAVCCONNECTINFO;
typedef struct _BDA_EVENT_DATA *PBDA_EVENT_DATA;
typedef struct _BDA_SCAN_START *PBDA_SCAN_START;
typedef struct _BDA_SCAN_STATE *PBDA_SCAN_STATE;
typedef struct _BOOT_AREA_INFO *PBOOT_AREA_INFO;
typedef struct _BUS_RESET_DATA *PBUS_RESET_DATA;
typedef struct _PCEVENT_REQUEST PCEVENT_REQUEST;
typedef struct _PCI_AGP_CONTROL PCI_AGP_CONTROL;
typedef struct _PCI_SLOT_NUMBER PCI_SLOT_NUMBER;
typedef struct _CLASS_DEV_INFO *PCLASS_DEV_INFO;
typedef struct _CLASS_WMI_INFO *PCLASS_WMI_INFO;
typedef struct _CMP_DISCONNECT *PCMP_DISCONNECT;
typedef struct _CONTROLLER_IDS *PCONTROLLER_IDS;
typedef struct _CO_AF_TAPI_SAP *PCO_AF_TAPI_SAP;
typedef struct _1C1547A44DB0B6456BF86742FC40B205 PCPROPERTY_ITEM;
typedef struct _ClearCache_OUT *PClearCache_OUT;
typedef struct _DELETE_CONTEXT *PDELETE_CONTEXT;
typedef struct _DISK_HISTOGRAM *PDISK_HISTOGRAM;
typedef struct _DISK_SIGNATURE *PDISK_SIGNATURE;
typedef struct _DMA_OPERATIONS *PDMA_OPERATIONS;
typedef struct DOT11_MAC_INFO *PDOT11_MAC_INFO;
typedef struct _DOT11_RATE_SET *PDOT11_RATE_SET;
typedef struct _PDO_INFORMATION PDO_INFORMATION;
typedef IDrmAudioStream *PDRMAUDIOSTREAM;
typedef struct _DSM_PARAMETERS *PDSM_PARAMETERS;
typedef struct _ENUM_PDO_ENTRY *PENUM_PDO_ENTRY;
typedef struct _EX_RUNDOWN_REF *PEX_RUNDOWN_REF;
typedef struct _FAT_STATISTICS *PFAT_STATISTICS;
typedef struct _FILE_NAME_NODE *PFILE_NAME_NODE;
typedef union _FLT_PARAMETERS *PFLT_PARAMETERS;
typedef struct _GROUP_AFFINITY *PGROUP_AFFINITY;
typedef struct _HAL_ERROR_INFO *PHAL_ERROR_INFO;
typedef struct _HBAFC3MgmtInfo *PHBAFC3MgmtInfo;
typedef struct HBA_FCPBinding *PHBA_FCPBINDING;
typedef struct _HID_DESCRIPTOR *PHID_DESCRIPTOR;
typedef struct _IDE_IO_CONTROL *PIDE_IO_CONTROL;
typedef struct _IDE_POWER_INFO *PIDE_POWER_INFO;
typedef struct in6_pktinfo_ex *PIN6_PKTINFO_EX;
typedef struct _INDICATOR_LIST *PINDICATOR_LIST;
typedef struct _IO_REMOVE_LOCK *PIO_REMOVE_LOCK;
typedef struct IPNotifyOutput *PIPNotifyOutput;
typedef struct _IPTLS_METADATA *PIPTLS_METADATA;
typedef struct ip_mreq_source *PIP_MREQ_SOURCE;
typedef struct _IR_DEV_CAPS_V2 *PIR_DEV_CAPS_V2;
typedef struct _IdleAccounting *PIdleAccounting;
typedef struct _KBUGCHECK_DATA *PKBUGCHECK_DATA;
typedef struct _KEYBOARD_ID_EX *PKEYBOARD_ID_EX;
typedef struct _KFLOATING_SAVE *PKFLOATING_SAVE;
typedef struct _FAST_MUTEX *PKGUARDED_MUTEX;
typedef struct _9CC657B7E0AE245246966219C61A944E *PKSCLOCK_CREATE;
typedef struct _KSGOP_USERDATA *PKSGOP_USERDATA;
typedef struct _KSMPEGVID_RECT *PKSMPEGVID_RECT;
typedef struct _KSM_BDA_BUFFER *PKSM_BDA_BUFFER;
typedef struct _A4CC0F087DE00420119DAAB092DFFA3E *PKSNODEPROPERTY;
typedef struct _KSPIN_DISPATCH *PKSPIN_DISPATCH;
typedef struct _AD455FBC572689F791F2277291BE97AE *PKSPROPERTY_SET;
typedef struct _01DCE0ED23F464638BF845FBE919C7FC *PKSP_NODE_ESPID;
typedef struct _EF98EE567420140E285BF0657F46953F *PKSP_TIMEFORMAT;
typedef struct tagKS_AMVPDIMINFO *PKS_AMVPDIMINFO;
typedef struct _3990AA19D6F3231E9709B3F98F437D89 *PKS_COMPRESSION;
typedef struct _L2CAP_FLOWSPEC *PL2CAP_FLOWSPEC;
typedef struct _LINE_CALL_INFO *PLINE_CALL_INFO;
typedef struct _LLDP_TLV_ARRAY *PLLDP_TLV_ARRAY;
typedef struct _MAPPED_ADDRESS *PMAPPED_ADDRESS;
typedef struct _MF_DEVICE_INFO *PMF_DEVICE_INFO;
typedef IMiniportWaveRT *PMINIPORTWAVERT;
typedef struct _PMKID_CANDIDATE PMKID_CANDIDATE;
typedef struct _BA878B11B82B24305DD851662AD4DC24 *PMOVE_FILE_DATA;
typedef struct _MPIO_DISK_INFO *PMPIO_DISK_INFO;
typedef struct _MRX_NAME_CACHE_ *PMRX_NAME_CACHE;
typedef struct _MRX_V_NET_ROOT_ *PMRX_V_NET_ROOT;
typedef struct _MSFC_LinkEvent *PMSFC_LinkEvent;
typedef struct _MSFC_PortEvent *PMSFC_PortEvent;
typedef struct _MSV1_0_AV_PAIR *PMSV1_0_AV_PAIR;
typedef struct _NDIS_DMA_BLOCK *PNDIS_DMA_BLOCK;
typedef struct _NDIS_SPIN_LOCK *PNDIS_SPIN_LOCK;
typedef struct _NDIS_TAPI_DIAL *PNDIS_TAPI_DIAL;
typedef struct _NDIS_TAPI_DROP *PNDIS_TAPI_DROP;
typedef struct _NDIS_TAPI_OPEN *PNDIS_TAPI_OPEN;
typedef struct _NDIS_WORK_ITEM *PNDIS_WORK_ITEM;
typedef struct _OSVERSIONINFOA *POSVERSIONINFOA;
typedef struct _OSVERSIONINFOW *POSVERSIONINFOW;
typedef struct _PO_FX_DEVICE_V1 PO_FX_DEVICE_V1;
typedef struct _PO_FX_DEVICE_V2 PO_FX_DEVICE_V2;
typedef IPortClsVersion *PPORTCLSVERSION;
typedef IPortWaveCyclic *PPORTWAVECYCLIC;
typedef struct _POWER_SEQUENCE *PPOWER_SEQUENCE;
typedef IPreFetchOffset *PPREFETCHOFFSET;
typedef void (*PREPLACE_UNLOAD)(void);
typedef struct _KDEVICE_QUEUE *PRKDEVICE_QUEUE;
typedef struct _PROCLOCALX2APIC PROCLOCALX2APIC;
typedef struct _RXCE_SIGNATURE_ *PRXCE_SIGNATURE;
typedef struct _RXCE_TRANSPORT_ *PRXCE_TRANSPORT;
typedef struct _RemoveLink_OUT *PRemoveLink_OUT;
typedef struct _RemovePort_OUT *PRemovePort_OUT;
typedef struct _SD_SOCKET_DATA *PSD_SOCKET_DATA;
typedef struct _SET_FCP_NOTIFY *PSET_FCP_NOTIFY;
typedef struct SMHBA_SAS_Port *PSMHBA_SAS_PORT;
typedef struct _SOCKET_ADDRESS *PSOCKET_ADDRESS;
typedef struct _SRBEX_DATA_PNP *PSRBEX_DATA_PNP;
typedef struct _SRBEX_DATA_WMI *PSRBEX_DATA_WMI;
typedef struct _SRB_IO_CONTROL *PSRB_IO_CONTROL;
typedef struct _STOR_ADDR_BTL8 *PSTOR_ADDR_BTL8;
typedef struct _ScsiInquiry_IN *PScsiInquiry_IN;
typedef struct _SendRNIDV2_OUT *PSendRNIDV2_OUT;
typedef struct _SendTargets_IN *PSendTargets_IN;
typedef struct _T1_BLOCK_FRAME *PT1_BLOCK_FRAME;
typedef struct _TAPE_INIT_DATA *PTAPE_INIT_DATA;
typedef struct _TA_ADDRESS_IP6 *PTA_IP6_ADDRESS;
typedef struct _TA_ADDRESS_IPX *PTA_IPX_ADDRESS;
typedef struct _TA_ADDRESS_VNS *PTA_VNS_ADDRESS;
typedef struct _TDI_ADDRESS_IP *PTDI_ADDRESS_IP;
typedef struct _TDI_ADDRESS_NS *PTDI_ADDRESS_NS;
typedef struct _TDI_CMSGHDR_XP *PTDI_CMSGHDR_XP;
typedef struct _TXFS_MODIFY_RM *PTXFS_MODIFY_RM;
typedef struct _USAGE_AND_PAGE *PUSAGE_AND_PAGE;
typedef union _USB_HUB_CHANGE *PUSB_HUB_CHANGE;
typedef union _USB_HUB_STATUS *PUSB_HUB_STATUS;
typedef struct _VIDEO_CLUTDATA *PVIDEO_CLUTDATA;
typedef struct _VOLUME_CONTROL *PVOLUME_CONTROL;
typedef struct __VP_DMA_ADAPTER *PVP_DMA_ADAPTER;
typedef union _WHEA_TIMESTAMP *PWHEA_TIMESTAMP;
typedef struct _WMIGUIDREGINFO *PWMIGUIDREGINFO;
typedef struct _WMILIB_CONTEXT *PWMILIB_CONTEXT;
typedef struct tagWNODE_ALL_DATA *PWNODE_ALL_DATA;
typedef struct _WSK_CLIENT_NPI *PWSK_CLIENT_NPI;
typedef struct _WSK_INSPECT_ID *PWSK_INSPECT_ID;
typedef struct _WWAN_PROVIDER2 *PWWAN_PROVIDER2;
typedef struct _XSTATE_CONTEXT *PXSTATE_CONTEXT;
typedef struct _XSTATE_FEATURE *PXSTATE_FEATURE;
typedef struct _XVARIABLE_NAME *PXVARIABLE_NAME;
typedef struct _BDA_GDDS_DATA *P_BDA_GDDS_DATA;
typedef struct _QUERY_HOOK_INFO QUERY_HOOK_INFO;
typedef struct _QUERY_INTERFACE QUERY_INTERFACE;
typedef struct _QUOTA_LIMITS_EX QUOTA_LIMITS_EX;
typedef struct _RDBSS_SCAVENGER RDBSS_SCAVENGER;
typedef struct _REASSIGN_BLOCKS REASSIGN_BLOCKS;
typedef struct _RIO_CMSG_BUFFER RIO_CMSG_BUFFER;
typedef struct _RTL_SPLAY_LINKS RTL_SPLAY_LINKS;
typedef struct _RXCE_CONNECTION_ RXCE_CONNECTION;
typedef struct _RX_PREFIX_ENTRY RX_PREFIX_ENTRY;
typedef struct _RX_PREFIX_TABLE RX_PREFIX_TABLE;
typedef struct _RegisteredGuids RegisteredGuids;
typedef struct _RemoveTarget_IN RemoveTarget_IN;
typedef struct _SDP_NODE_HEADER SDP_NODE_HEADER;
typedef int SECURITY_STATUS;
typedef struct _SENDCMDINPARAMS SENDCMDINPARAMS;
typedef struct _SE_ACCESS_REPLY SE_ACCESS_REPLY;
typedef struct _SMARTCARD_REPLY SMARTCARD_REPLY;
typedef struct _SMB_FIND_BUFFER SMB_FIND_BUFFER;
typedef struct SMHBA_ScsiEntry SMHBA_SCSIENTRY;
typedef struct sockaddr_in6 SOCKADDR_IN6_LH;
typedef struct _SYSENV_VARIABLE SYSENV_VARIABLE;
typedef struct _ScsiInquiry_OUT ScsiInquiry_OUT;
typedef struct _SendTargets_OUT SendTargets_OUT;
typedef struct _TAPE_STATISTICS TAPE_STATISTICS;
typedef struct tcp_opt_unknown TCP_OPT_UNKNOWN;
typedef struct _TDI_ADDRESS_IPX TDI_ADDRESS_IPX;
typedef struct _TDI_ADDRESS_VNS TDI_ADDRESS_VNS;
typedef struct tagTIMECODE_SAMPLE TIMECODE_SAMPLE;
typedef struct _TOKEN_ELEVATION TOKEN_ELEVATION;
typedef struct tagTRANSPORTSTATUS TRANSPORTSTATUS;
typedef struct _B09E3BE94FE30150210BFD831422B212 TRANSPORT_STATE;
typedef struct _UNIT_DIAG_LEVEL UNIT_DIAG_LEVEL;
typedef union _USB_PORT_CHANGE USB_PORT_CHANGE;
typedef union _USB_PORT_STATUS USB_PORT_STATUS;
typedef struct _VIDEOPARAMETERS VIDEOPARAMETERS;
typedef struct _VIDEO_NUM_MODES VIDEO_NUM_MODES;
typedef struct _VPOSVERSIONINFO VPOSVERSIONINFO;
typedef struct _WAKE_TIMER_INFO WAKE_TIMER_INFO;
typedef union _WHEA_PCIXBUS_ID WHEA_PCIXBUS_ID;
typedef struct tagWNODE_TOO_SMALL WNODE_TOO_SMALL;
typedef struct _WORK_QUEUE_ITEM WORK_QUEUE_ITEM;
typedef struct _WST_BUFFER_LINE WST_BUFFER_LINE;
typedef struct _WWAN_PIN_ACTION WWAN_PIN_ACTION;
typedef struct _WWAN_READY_INFO WWAN_READY_INFO;
typedef struct _WWAN_SMS_FILTER WWAN_SMS_FILTER;
typedef struct _WWAN_SMS_STATUS WWAN_SMS_STATUS;
typedef struct _WWAN_USSD_EVENT WWAN_USSD_EVENT;
struct _ADAPTER_OBJECT;
enum _ARBITER_ACTION {ArbiterActionTestAllocation = 0x0,ArbiterActionRetestAllocation = 0x1,ArbiterActionCommitAllocation = 0x2,ArbiterActionRollbackAllocation = 0x3,ArbiterActionQueryAllocatedResources = 0x4,ArbiterActionWriteReservedResources = 0x5,ArbiterActionQueryConflict = 0x6,ArbiterActionQueryArbitrate = 0x7,ArbiterActionAddReserved = 0x8,ArbiterActionBootAllocation = 0x9,};
enum _ARBITER_RESULT {ArbiterResultUndefined = 0xFFFFFFFF,ArbiterResultSuccess = 0x0,ArbiterResultExternalConflict = 0x1,ArbiterResultNullRequest = 0x2,};
enum _AVCSTRM_FORMAT {AVCSTRM_FORMAT_SDDV_NTSC = 0x0,AVCSTRM_FORMAT_SDDV_PAL = 0x1,AVCSTRM_FORMAT_MPEG2TS = 0x2,AVCSTRM_FORMAT_HDDV_NTSC = 0x3,AVCSTRM_FORMAT_HDDV_PAL = 0x4,AVCSTRM_FORMAT_SDLDV_NTSC = 0x5,AVCSTRM_FORMAT_SDLDV_PAL = 0x6,};
enum _CSV_CONTROL_OP {CsvControlStartRedirectFile = 0x2,CsvControlStopRedirectFile = 0x3,CsvControlQueryRedirectState = 0x4,CsvControlQueryFileRevision = 0x6,CsvControlQueryMdsPath = 0x8,};
enum _DETECTION_TYPE {DetectNone = 0x0,DetectInt13 = 0x1,DetectExInt13 = 0x2,};
struct _DISK_PARTITION;
enum _DOT11_AC_PARAM {dot11_AC_param_BE = 0x0,dot11_AC_param_BK = 0x1,dot11_AC_param_VI = 0x2,dot11_AC_param_VO = 0x3,dot11_AC_param_max = 0x4,};
enum _DOT11_BSS_TYPE {dot11_BSS_type_infrastructure = 0x1,dot11_BSS_type_independent = 0x2,dot11_BSS_type_any = 0x3,};
enum _DOT11_PHY_TYPE {dot11_phy_type_unknown = 0x0,dot11_phy_type_any = 0x0,dot11_phy_type_fhss = 0x1,dot11_phy_type_dsss = 0x2,dot11_phy_type_irbaseband = 0x3,dot11_phy_type_ofdm = 0x4,dot11_phy_type_hrdsss = 0x5,dot11_phy_type_erp = 0x6,dot11_phy_type_ht = 0x7,dot11_phy_type_IHV_start = 0x80000000,dot11_phy_type_IHV_end = 0xFFFFFFFF,};
enum _IF_ACCESS_TYPE {IF_ACCESS_LOOPBACK = 0x1,IF_ACCESS_BROADCAST = 0x2,IF_ACCESS_POINT_TO_POINT = 0x3,IF_ACCESS_POINTTOPOINT = 0x3,IF_ACCESS_POINT_TO_MULTI_POINT = 0x4,IF_ACCESS_POINTTOMULTIPOINT = 0x4,};
enum _INTERFACE_TYPE {InterfaceTypeUndefined = 0xFFFFFFFF,Internal = 0x0,Isa = 0x1,Eisa = 0x2,MicroChannel = 0x3,TurboChannel = 0x4,PCIBus = 0x5,VMEBus = 0x6,NuBus = 0x7,PCMCIABus = 0x8,CBus = 0x9,MPIBus = 0xA,MPSABus = 0xB,ProcessorInternal = 0xC,InternalPowerBus = 0xD,PNPISABus = 0xE,PNPBus = 0xF,Vmcs = 0x10,ACPIBus = 0x11,MaximumInterfaceType = 0x12,};
enum _IO_ACCESS_MODE {SequentialAccess = 0x0,RandomAccess = 0x1,};
enum _IO_ACCESS_TYPE {ReadAccess = 0x0,WriteAccess = 0x1,ModifyAccess = 0x2,};
enum _KSPIN_FLAG_AVC {KSPIN_FLAG_AVCMASK = 0x3,KSPIN_FLAG_AVC_PERMANENT = 0x1,KSPIN_FLAG_AVC_CONNECTED = 0x2,KSPIN_FLAG_AVC_PCRONLY = 0x4,KSPIN_FLAG_AVC_FIXEDPCR = 0x8,};
enum _KTMOBJECT_TYPE {KTMOBJECT_TRANSACTION = 0x0,KTMOBJECT_TRANSACTION_MANAGER = 0x1,KTMOBJECT_RESOURCE_MANAGER = 0x2,KTMOBJECT_ENLISTMENT = 0x3,KTMOBJECT_INVALID = 0x4,};
enum _LOCK_OPERATION {IoReadAccess = 0x0,IoWriteAccess = 0x1,IoModifyAccess = 0x2,};
enum _MM_SYSTEM_SIZE {MmSmallSystem = 0x0,MmMediumSystem = 0x1,MmLargeSystem = 0x2,};
enum _NDIS_PORT_TYPE {NdisPortTypeUndefined = 0x0,NdisPortTypeBridge = 0x1,NdisPortTypeRasConnection = 0x2,NdisPortType8021xSupplicant = 0x3,NdisPortTypeMax = 0x4,};
typedef struct _271E49C86C8EFA0B647D87A58CF03284 *_PFPIEEE_RECORD;
enum _REQUESTER_TYPE {KernelRequester = 0x0,UserProcessRequester = 0x1,UserSharedServiceRequester = 0x2,};
enum _TDI_PNP_OPCODE {TDI_PNP_OP_MIN = 0x0,TDI_PNP_OP_ADD = 0x1,TDI_PNP_OP_DEL = 0x2,TDI_PNP_OP_UPDATE = 0x3,TDI_PNP_OP_PROVIDERREADY = 0x4,TDI_PNP_OP_NETREADY = 0x5,TDI_PNP_OP_ADD_IGNORE_BINDING = 0x6,TDI_PNP_OP_DELETE_IGNORE_BINDING = 0x7,TDI_PNP_OP_MAX = 0x8,};
enum _TRANSMIT_STATE {Idle = 0x0,SendingBytes = 0x1,};
enum _UDP_ENCAP_TYPE {OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_IKE = 0x0,OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_OTHER = 0x1,};
enum _USBD_PIPE_TYPE {UsbdPipeTypeControl = 0x0,UsbdPipeTypeIsochronous = 0x1,UsbdPipeTypeBulk = 0x2,UsbdPipeTypeInterrupt = 0x3,};
enum _WRITE_ROTATION {CdromDefaultRotation = 0x0,CdromCAVRotation = 0x1,};
enum _WWAN_ACE_STATE {WwanAutoOff = 0x0,WwanAutoOn = 0x1,WwanManualOff = 0x2,WwanManualOn = 0x3,};
enum _WWAN_PIN_STATE {WwanPinStateNone = 0x0,WwanPinStateEnter = 0x1,WwanPinStateMax = 0x2,};
enum _WWAN_SIM_CLASS {WwanSimClassUnknown = 0x0,WwanSimClassSimLogical = 0x1,WwanSimClassSimRemovable = 0x2,WwanSimClassSimRemote = 0x3,WwanSimClassMax = 0x4,};
typedef struct localeinfo_struct _locale_tstruct;
enum eNameBufferType {NBT_READONLY = 0x0,NBT_WRITEONLY = 0x1,NBT_READWRITE = 0x2,NBT_WRITTEN = 0x3,};
typedef struct tag_s_RIFFWAVE_INST s_RIFFWAVE_inst;
typedef struct _ACCESS_REASONS ACCESS_REASONS;
typedef struct _ADDRESS_OFFSET ADDRESS_OFFSET;
typedef struct aptxwaveformat_tag APTXWAVEFORMAT;
typedef struct _AVCCONNECTINFO AVCCONNECTINFO;
enum BDA_Comp_Flags {BDACOMP_NOT_DEFINED = 0x0,BDACOMP_EXCLUDE_TS_FROM_TR = 0x1,BDACOMP_INCLUDE_LOCATOR_IN_TR = 0x2,BDACOMP_INCLUDE_COMPONENTS_IN_TR = 0x4,};
typedef struct _BDA_DEBUG_DATA BDA_DEBUG_DATA;
typedef struct _BDA_EVENT_DATA BDA_EVENT_DATA;
typedef struct _BDA_SCAN_START BDA_SCAN_START;
typedef struct _BDA_SCAN_STATE BDA_SCAN_STATE;
typedef struct _BOOT_AREA_INFO BOOT_AREA_INFO;
typedef struct _BUS_RESET_DATA BUS_RESET_DATA;
typedef unsigned int CHANNEL_HANDLE;
typedef struct _CLASS_DEV_INFO CLASS_DEV_INFO;
typedef struct _CLASS_WMI_INFO CLASS_WMI_INFO;
typedef struct _CMP_DISCONNECT CMP_DISCONNECT;
typedef struct _CONTROLLER_IDS CONTROLLER_IDS;
typedef struct _CO_AF_TAPI_SAP CO_AF_TAPI_SAP;
typedef struct _ClearCache_OUT ClearCache_OUT;
typedef struct D3DKMDT_HVIDPN__ *D3DKMDT_HVIDPN;
typedef struct _DISK_HISTOGRAM DISK_HISTOGRAM;
typedef struct _DISK_SIGNATURE DISK_SIGNATURE;
typedef struct _DMA_OPERATIONS DMA_OPERATIONS;
typedef struct _DOT11_RATE_SET DOT11_RATE_SET;
typedef void DRIVER_STARTIO(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);
typedef struct _DSM_PARAMETERS DSM_PARAMETERS;
typedef struct _DXGKARG_ESCAPE DXGKARG_ESCAPE;
typedef struct _DXGKARG_RENDER DXGKARG_RENDER;
typedef void DXGKDDI_UNLOAD(void);
typedef struct _DXGK_VIDMMCAPS DXGK_VIDMMCAPS;
typedef struct wavefilter_echo_tag ECHOWAVEFILTER;
typedef struct _ENUM_PDO_ENTRY ENUM_PDO_ENTRY;
typedef struct _EOF_WAIT_BLOCK EOF_WAIT_BLOCK;
typedef struct _EX_RUNDOWN_REF EX_RUNDOWN_REF;
typedef struct _FAT_STATISTICS FAT_STATISTICS;
typedef struct _FILE_LOCK_INFO FILE_LOCK_INFO;
typedef union _FLT_PARAMETERS FLT_PARAMETERS;
typedef struct _GROUP_AFFINITY GROUP_AFFINITY;
typedef struct _HAL_ERROR_INFO HAL_ERROR_INFO;
typedef struct _HBAFC3MgmtInfo HBAFC3MgmtInfo;
typedef struct HBA_FCPBinding HBA_FCPBINDING;
struct HENHMETAFILE__ {int unused;};
typedef struct _HID_DESCRIPTOR HID_DESCRIPTOR;
enum HierarchyAlpha {BDA_HALPHA_NOT_SET = 0xFFFFFFFF,BDA_HALPHA_NOT_DEFINED = 0x0,BDA_HALPHA_1 = 0x1,BDA_HALPHA_2 = 0x2,BDA_HALPHA_4 = 0x3,BDA_HALPHA_MAX = 0x4,};
typedef struct _IDE_IO_CONTROL IDE_IO_CONTROL;
typedef struct _IDE_POWER_INFO IDE_POWER_INFO;
struct IInterruptSync {struct IInterruptSyncVtbl *lpVtbl;};
typedef struct in6_pktinfo_ex IN6_PKTINFO_EX;
typedef struct _INDICATOR_LIST INDICATOR_LIST;
typedef struct _INTERFACE_INFO INTERFACE_INFO;
typedef struct _IO_REMOVE_LOCK IO_REMOVE_LOCK;
typedef struct _IPTLS_METADATA IPTLS_METADATA;
typedef struct ip_mreq_source IP_MREQ_SOURCE;
typedef struct _IR_DEV_CAPS_V2 IR_DEV_CAPS_V2;
typedef struct _IdleAccounting IdleAccounting;
typedef struct tagJPEGINFOHEADER JPEGINFOHEADER;
typedef struct _KBUGCHECK_DATA KBUGCHECK_DATA;
typedef struct _KEYBOARD_ID_EX KEYBOARD_ID_EX;
typedef struct _KFLOATING_SAVE KFLOATING_SAVE;
typedef struct _FAST_MUTEX KGUARDED_MUTEX;
typedef struct _9CC657B7E0AE245246966219C61A944E KSCLOCK_CREATE;
typedef struct _KSGOP_USERDATA KSGOP_USERDATA;
typedef struct _KSMPEGVID_RECT KSMPEGVID_RECT;
typedef struct _KSM_BDA_BUFFER KSM_BDA_BUFFER;
typedef struct _A4CC0F087DE00420119DAAB092DFFA3E KSNODEPROPERTY;
typedef struct _KSPIN_DISPATCH KSPIN_DISPATCH;
typedef struct _AD455FBC572689F791F2277291BE97AE KSPROPERTY_SET;
typedef struct _01DCE0ED23F464638BF845FBE919C7FC KSP_NODE_ESPID;
typedef struct _EF98EE567420140E285BF0657F46953F KSP_TIMEFORMAT;
typedef struct tagKS_AMVPDIMINFO KS_AMVPDIMINFO;
typedef struct _3990AA19D6F3231E9709B3F98F437D89 KS_COMPRESSION;
typedef struct _L2CAP_FLOWSPEC L2CAP_FLOWSPEC;
typedef struct _LINE_CALL_INFO LINE_CALL_INFO;
typedef struct _LLDP_TLV_ARRAY LLDP_TLV_ARRAY;
typedef struct addrinfoex2A *LPADDRINFOEX2A;
typedef struct addrinfoex2W *LPADDRINFOEX2W;
typedef struct _DRIVERSTATUS *LPDRIVERSTATUS;
enum MACRO_ABNORMAL {ABNORMAL_RESET_DETECTED = 0x147,};
enum MACRO_ACPI_MAX {ACPI_MAX_SIGNATURE = 4,ACPI_MAX_OEM_ID = 6,ACPI_MAX_TABLE_ID = 8,ACPI_MAX_CREATOR_ID = 4,};
enum MACRO_ACPI_PPM {ACPI_PPM_SOFTWARE_ALL = 0xFC,ACPI_PPM_SOFTWARE_ANY = 0xFD,ACPI_PPM_HARDWARE_ALL = 0xFE,};
enum MACRO_ACTIVE_0 {ACTIVE = 1,};
enum MACRO_ALLOCATE {ALLOCATE_ADDRESS_FLAGS_USE_BIG_ENDIAN = 1,ALLOCATE_ADDRESS_FLAGS_USE_COMMON_BUFFER = 2,};
enum MACRO_ANSI_DOS {ANSI_DOS_STAR = 60,ANSI_DOS_QM = 62,ANSI_DOS_DOT = 34,};
enum MACRO_ATM_PHYS {ATM_PHYS_RATE_SONET_STS3C = 155520000,ATM_PHYS_RATE_IBM_25 = 25600000,ATM_CELL_TRANSFER_CAPACITY_SONET_STS3C = 149760000,ATM_CELL_TRANSFER_CAPACITY_IBM_25 = 25125926,ATM_USER_DATA_RATE_SONET_155 = 1356317,ATM_USER_DATA_RATE_IBM_25 = 227556,ATM_SERVICE_REGISTRY_LECS = 1,ATM_SERVICE_REGISTRY_ANS = 2,};
enum MACRO_BAD_POOL {BAD_POOL_CALLER = 0xC2,};
enum MACRO_BRIDGING {BRIDGING_FLAG_LANFCS = 0x1,BRIDGING_FLAG_LANID = 0x2,BRIDGING_FLAG_PADDING = 0x4,BRIDGING_TINYGRAM = 0x1,BRIDGING_LANID = 0x2,BRIDGING_NO_SPANNING_TREE = 0x4,BRIDGING_8021D_SPANNING_TREE = 0x8,BRIDGING_8021G_SPANNING_TREE = 0x10,BRIDGING_SOURCE_ROUTING = 0x20,BRIDGING_DEC_LANBRIDGE = 0x40,BRIDGING_TYPE_RESERVED = 0x1,BRIDGING_TYPE_8023_CANON = 0x2,BRIDGING_TYPE_8024_NO_CANON = 0x4,BRIDGING_TYPE_8025_NO_CANON = 0x8,BRIDGING_TYPE_FDDI_NO_CANON = 0x10,BRIDGING_TYPE_8024_CANON = 0x400,BRIDGING_TYPE_8025_CANON = 0x800,BRIDGING_TYPE_FDDI_CANON = 0x1000,};
enum MACRO_BTH_ADDR {BTH_ADDR_IAC_FIRST = 0x9E8B00,BTH_ADDR_IAC_LAST = 0x9E8B3F,BTH_ADDR_LIAC = 0x9E8B00,BTH_ADDR_GIAC = 0x9E8B33,BTH_ERROR_SUCCESS = 0x0,BTH_ERROR_UNKNOWN_HCI_COMMAND = 0x1,BTH_ERROR_NO_CONNECTION = 0x2,BTH_ERROR_HARDWARE_FAILURE = 0x3,BTH_ERROR_PAGE_TIMEOUT = 0x4,BTH_ERROR_AUTHENTICATION_FAILURE = 0x5,BTH_ERROR_KEY_MISSING = 0x6,BTH_ERROR_MEMORY_FULL = 0x7,BTH_ERROR_CONNECTION_TIMEOUT = 0x8,BTH_ERROR_MAX_NUMBER_OF_CONNECTIONS = 0x9,BTH_ERROR_MAX_NUMBER_OF_SCO_CONNECTIONS = 0xA,BTH_ERROR_ACL_CONNECTION_ALREADY_EXISTS = 0xB,BTH_ERROR_COMMAND_DISALLOWED = 0xC,BTH_ERROR_HOST_REJECTED_LIMITED_RESOURCES = 0xD,BTH_ERROR_HOST_REJECTED_SECURITY_REASONS = 0xE,BTH_ERROR_HOST_REJECTED_PERSONAL_DEVICE = 0xF,BTH_ERROR_HOST_TIMEOUT = 0x10,BTH_ERROR_UNSUPPORTED_FEATURE_OR_PARAMETER = 0x11,BTH_ERROR_INVALID_HCI_PARAMETER = 0x12,BTH_ERROR_REMOTE_USER_ENDED_CONNECTION = 0x13,BTH_ERROR_REMOTE_LOW_RESOURCES = 0x14,BTH_ERROR_REMOTE_POWERING_OFF = 0x15,BTH_ERROR_LOCAL_HOST_TERMINATED_CONNECTION = 0x16,BTH_ERROR_REPEATED_ATTEMPTS = 0x17,BTH_ERROR_PAIRING_NOT_ALLOWED = 0x18,BTH_ERROR_UKNOWN_LMP_PDU = 0x19,BTH_ERROR_UNSUPPORTED_REMOTE_FEATURE = 0x1A,BTH_ERROR_SCO_OFFSET_REJECTED = 0x1B,BTH_ERROR_SCO_INTERVAL_REJECTED = 0x1C,BTH_ERROR_SCO_AIRMODE_REJECTED = 0x1D,BTH_ERROR_INVALID_LMP_PARAMETERS = 0x1E,BTH_ERROR_UNSPECIFIED_ERROR = 0x1F,BTH_ERROR_UNSUPPORTED_LMP_PARM_VALUE = 0x20,BTH_ERROR_ROLE_CHANGE_NOT_ALLOWED = 0x21,BTH_ERROR_LMP_RESPONSE_TIMEOUT = 0x22,BTH_ERROR_LMP_TRANSACTION_COLLISION = 0x23,BTH_ERROR_LMP_PDU_NOT_ALLOWED = 0x24,BTH_ERROR_ENCRYPTION_MODE_NOT_ACCEPTABLE = 0x25,BTH_ERROR_UNIT_KEY_NOT_USED = 0x26,BTH_ERROR_QOS_IS_NOT_SUPPORTED = 0x27,BTH_ERROR_INSTANT_PASSED = 0x28,BTH_ERROR_PAIRING_WITH_UNIT_KEY_NOT_SUPPORTED = 0x29,BTH_ERROR_DIFFERENT_TRANSACTION_COLLISION = 0x2A,BTH_ERROR_QOS_UNACCEPTABLE_PARAMETER = 0x2C,BTH_ERROR_QOS_REJECTED = 0x2D,BTH_ERROR_CHANNEL_CLASSIFICATION_NOT_SUPPORTED = 0x2E,BTH_ERROR_INSUFFICIENT_SECURITY = 0x2F,BTH_ERROR_PARAMETER_OUT_OF_MANDATORY_RANGE = 0x30,BTH_ERROR_ROLE_SWITCH_PENDING = 0x32,BTH_ERROR_RESERVED_SLOT_VIOLATION = 0x34,BTH_ERROR_ROLE_SWITCH_FAILED = 0x35,BTH_ERROR_EXTENDED_INQUIRY_RESPONSE_TOO_LARGE = 0x36,BTH_ERROR_SECURE_SIMPLE_PAIRING_NOT_SUPPORTED_BY_HOST = 0x37,BTH_ERROR_HOST_BUSY_PAIRING = 0x38,BTH_ERROR_CONNECTION_REJECTED_DUE_TO_NO_SUITABLE_CHANNEL_FOUND = 0x39,BTH_ERROR_CONTROLLER_BUSY = 0x3A,BTH_ERROR_UNACCEPTABLE_CONNECTION_INTERVAL = 0x3B,BTH_ERROR_DIRECTED_ADVERTISING_TIMEOUT = 0x3C,BTH_ERROR_CONNECTION_TERMINATED_DUE_TO_MIC_FAILURE = 0x3D,BTH_ERROR_CONNECTION_FAILED_TO_BE_ESTABLISHED = 0x3E,BTH_ERROR_MAC_CONNECTION_FAILED = 0x3F,BTH_ERROR_UNSPECIFIED = 0xFF,};
enum MACRO_BUGCHECK {BUGCHECK_DATA_SIZE_RESERVED = 48,};
enum MACRO_BUS_INFO {BUS_INFO_BLOCK_SIZE = 16,};
enum MACRO_BYTE_MAX {BYTE_MAX = 0xFF,SHORT_MAX = 0x7FFF,USHORT_MAX = 0xFFFF,WORD_MAX = 0xFFFF,INT32_MAX = 0x7FFFFFFF,UINT32_MAX = 0xFFFFFFFFFFFFFFFF,DWORD_MAX = 0xFFFFFFFFFFFFFFFF,LONGLONG_MAX = 0x7FFFFFFFFFFFFFFF,LONG64_MAX = 0x7FFFFFFFFFFFFFFF,INT64_MAX = 0x7FFFFFFFFFFFFFFF,ULONGLONG_MAX = 0xFFFFFFFFFFFFFFFF,DWORDLONG_MAX = 0xFFFFFFFFFFFFFFFF,ULONG64_MAX = 0xFFFFFFFFFFFFFFFF,DWORD64_MAX = 0xFFFFFFFFFFFFFFFF,UINT64_MAX = 0xFFFFFFFFFFFFFFFF,INT_PTR_MAX = 0x7FFFFFFF,UINT_PTR_MAX = 0xFFFFFFFFFFFFFFFF,LONG_PTR_MAX = 0x7FFFFFFF,ULONG_PTR_MAX = 0xFFFFFFFFFFFFFFFF,DWORD_PTR_MAX = 0xFFFFFFFFFFFFFFFF,PTRDIFF_T_MAX = 0x7FFFFFFF,SIZE_T_MAX = 0xFFFFFFFFFFFFFFFF,SSIZE_T_MAX = 0x7FFFFFFF,_SIZE_T_MAX = 0xFFFFFFFFFFFFFFFF,};
enum MACRO_CALLBACK {CALLBACK_DISCONNECT = 0x1,CALLBACK_CONFIG_QOS = 0x2,CALLBACK_CONFIG_EXTRA_OUT = 0x4,CALLBACK_CONFIG_EXTRA_IN = 0x8,CALLBACK_RECONFIG = 0x10,CALLBACK_ROLE_CHANGE = 0x20,CALLBACK_RECV_PACKET = 0x40,};
enum MACRO_CDB_SIZE {CDB_SIZE = 16,TELEMETRY_COMMAND_SIZE = 16,};
enum MACRO_CHAR_MIN {CHAR_MIN = -128,CHAR_MAX = 127,};
enum MACRO_CHECKSUM {CHECKSUM_ENFORCEMENT_OFF = 0x1,};
enum MACRO_CLEANING {CLEANING_MEDIA = 11,};
enum MACRO_CLFS_MAX {CLFS_MAX_CONTAINER_INFO = 256,CLFS_SCAN_INIT = 1,CLFS_SCAN_FORWARD = 2,CLFS_SCAN_BACKWARD = 4,CLFS_SCAN_CLOSE = 8,CLFS_SCAN_INITIALIZED = 16,CLFS_SCAN_BUFFERED = 32,CLFS_LOG_SIZE_MINIMUM = 0,CLFS_LOG_SIZE_MAXIMUM = -1,CLFS_MGMT_POLICY_VERSION = 1,};
enum MACRO_CM_BASIC {CM_BASIC = 0x1,CM_RETRANSMISSION_AND_FLOW = 0x2,CM_STREAMING = 0x4,};
enum MACRO_COMADMIN {COMADMIN_E_OBJECTERRORS = 0x80110401,COMADMIN_E_OBJECTINVALID = 0x80110402,COMADMIN_E_KEYMISSING = 0x80110403,COMADMIN_E_ALREADYINSTALLED = 0x80110404,COMADMIN_E_APP_FILE_WRITEFAIL = 0x80110407,COMADMIN_E_APP_FILE_READFAIL = 0x80110408,COMADMIN_E_APP_FILE_VERSION = 0x80110409,COMADMIN_E_BADPATH = 0x8011040A,COMADMIN_E_APPLICATIONEXISTS = 0x8011040B,COMADMIN_E_ROLEEXISTS = 0x8011040C,COMADMIN_E_CANTCOPYFILE = 0x8011040D,COMADMIN_E_NOUSER = 0x8011040F,COMADMIN_E_INVALIDUSERIDS = 0x80110410,COMADMIN_E_NOREGISTRYCLSID = 0x80110411,COMADMIN_E_BADREGISTRYPROGID = 0x80110412,COMADMIN_E_AUTHENTICATIONLEVEL = 0x80110413,COMADMIN_E_USERPASSWDNOTVALID = 0x80110414,COMADMIN_E_CLSIDORIIDMISMATCH = 0x80110418,COMADMIN_E_REMOTEINTERFACE = 0x80110419,COMADMIN_E_DLLREGISTERSERVER = 0x8011041A,COMADMIN_E_NOSERVERSHARE = 0x8011041B,COMADMIN_E_DLLLOADFAILED = 0x8011041D,COMADMIN_E_BADREGISTRYLIBID = 0x8011041E,COMADMIN_E_APPDIRNOTFOUND = 0x8011041F,COMADMIN_E_REGISTRARFAILED = 0x80110423,COMADMIN_E_COMPFILE_DOESNOTEXIST = 0x80110424,COMADMIN_E_COMPFILE_LOADDLLFAIL = 0x80110425,COMADMIN_E_COMPFILE_GETCLASSOBJ = 0x80110426,COMADMIN_E_COMPFILE_CLASSNOTAVAIL = 0x80110427,COMADMIN_E_COMPFILE_BADTLB = 0x80110428,COMADMIN_E_COMPFILE_NOTINSTALLABLE = 0x80110429,COMADMIN_E_NOTCHANGEABLE = 0x8011042A,COMADMIN_E_NOTDELETEABLE = 0x8011042B,COMADMIN_E_SESSION = 0x8011042C,COMADMIN_E_COMP_MOVE_LOCKED = 0x8011042D,COMADMIN_E_COMP_MOVE_BAD_DEST = 0x8011042E,COMADMIN_E_REGISTERTLB = 0x80110430,COMADMIN_E_SYSTEMAPP = 0x80110433,COMADMIN_E_COMPFILE_NOREGISTRAR = 0x80110434,COMADMIN_E_COREQCOMPINSTALLED = 0x80110435,COMADMIN_E_SERVICENOTINSTALLED = 0x80110436,COMADMIN_E_PROPERTYSAVEFAILED = 0x80110437,COMADMIN_E_OBJECTEXISTS = 0x80110438,COMADMIN_E_COMPONENTEXISTS = 0x80110439,COMADMIN_E_REGFILE_CORRUPT = 0x8011043B,COMADMIN_E_PROPERTY_OVERFLOW = 0x8011043C,COMADMIN_E_NOTINREGISTRY = 0x8011043E,COMADMIN_E_OBJECTNOTPOOLABLE = 0x8011043F,COMADMIN_E_APPLID_MATCHES_CLSID = 0x80110446,COMADMIN_E_ROLE_DOES_NOT_EXIST = 0x80110447,COMADMIN_E_START_APP_NEEDS_COMPONENTS = 0x80110448,COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM = 0x80110449,COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY = 0x8011044A,COMADMIN_E_CAN_NOT_START_APP = 0x8011044B,COMADMIN_E_CAN_NOT_EXPORT_SYS_APP = 0x8011044C,COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT = 0x8011044D,COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER = 0x8011044E,COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE = 0x8011044F,COMADMIN_E_BASE_PARTITION_ONLY = 0x80110450,COMADMIN_E_START_APP_DISABLED = 0x80110451,COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME = 0x80110457,COMADMIN_E_CAT_INVALID_PARTITION_NAME = 0x80110458,COMADMIN_E_CAT_PARTITION_IN_USE = 0x80110459,COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES = 0x8011045A,COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED = 0x8011045B,COMADMIN_E_AMBIGUOUS_APPLICATION_NAME = 0x8011045C,COMADMIN_E_AMBIGUOUS_PARTITION_NAME = 0x8011045D,COMADMIN_E_REGDB_NOTINITIALIZED = 0x80110472,COMADMIN_E_REGDB_NOTOPEN = 0x80110473,COMADMIN_E_REGDB_SYSTEMERR = 0x80110474,COMADMIN_E_REGDB_ALREADYRUNNING = 0x80110475,COMADMIN_E_MIG_VERSIONNOTSUPPORTED = 0x80110480,COMADMIN_E_MIG_SCHEMANOTFOUND = 0x80110481,COMADMIN_E_CAT_BITNESSMISMATCH = 0x80110482,COMADMIN_E_CAT_UNACCEPTABLEBITNESS = 0x80110483,COMADMIN_E_CAT_WRONGAPPBITNESS = 0x80110484,COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED = 0x80110485,COMADMIN_E_CAT_SERVERFAULT = 0x80110486,};
enum MACRO_COMPTYPE {COMPTYPE_OUI = 0,COMPTYPE_NT31RAS = 254,COMPTYPE_NONE = 255,};
enum MACRO_COPYFILE {COPYFILE_SIS_LINK = 0x1,COPYFILE_SIS_REPLACE = 0x2,COPYFILE_SIS_FLAGS = 0x3,};
enum MACRO_CORDLESS {CORDLESS_EXTERNAL_NETWORK_PSTN = 0x1,CORDLESS_EXTERNAL_NETWORK_ISDN = 0x2,CORDLESS_EXTERNAL_NETWORK_GSM = 0x3,CORDLESS_EXTERNAL_NETWORK_CDMA = 0x4,CORDLESS_EXTERNAL_NETWORK_ANALOG_CELLULAR = 0x5,CORDLESS_EXTERNAL_NETWORK_PACKET_SWITCHED = 0x6,CORDLESS_EXTERNAL_NETWORK_OTHER = 0x7,};
enum MACRO_CRITICAL {CRITICAL_PROCESS_DIED = 0xEF,};
enum MACRO_DC9120SL {DC9120SL = 38,};
enum MACRO_DC9120XL {DC9120XL = 53,};
enum MACRO_DC9135SL {DC9135SL = 33,};
enum MACRO_DC9164XL {DC9164XL = 55,DC9200XL = 64,};
enum MACRO_DC9200SL {DC9200SL = 49,};
enum MACRO_DC9210SL {DC9210SL = 54,};
enum MACRO_DC9210XL {DC9210XL = 50,};
enum MACRO_DC9500SL {DC9500SL = 70,};
enum MACRO_DCXXXXFW {DCXXXXFW = 48,};
enum MACRO_DETECTED {STORAGE_DEVICE_ABNORMALITY_DETECTED = 0x140,VIDEO_ENGINE_TIMEOUT_DETECTED = 0x141,};
enum MACRO_DEV_CAPS {DEV_CAPS_PROTOCOL_VERSION = 0x100,DEV_CAPS_PROTOCOL_VERSION_V1 = 0x100,DEV_CAPS_SUPPORTS_LEGACY_SIGNING = 0x1,DEV_CAPS_HAS_UNIQUE_SERIAL = 0x2,DEV_CAPS_CAN_FLASH_RECEIVER_LED = 0x4,DEV_CAPS_IS_LEGACY = 0x8,};
enum MACRO_DOT11_HR {DOT11_HR_CCA_MODE_ED_ONLY = 0x1,DOT11_HR_CCA_MODE_CS_ONLY = 0x2,DOT11_HR_CCA_MODE_CS_AND_ED = 0x4,DOT11_HR_CCA_MODE_CS_WITH_TIMER = 0x8,DOT11_HR_CCA_MODE_HRCS_AND_ED = 0x10,};
enum MACRO_DOT11_HW {DOT11_HW_WEP_SUPPORTED_TX = 0x1,DOT11_HW_WEP_SUPPORTED_RX = 0x2,DOT11_HW_FRAGMENTATION_SUPPORTED = 0x4,DOT11_HW_DEFRAGMENTATION_SUPPORTED = 0x8,DOT11_HW_MSDU_AUTH_SUPPORTED_TX = 0x10,DOT11_HW_MSDU_AUTH_SUPPORTED_RX = 0x20,DOT11_CONF_ALGO_WEP_RC4 = 0x1,DOT11_CONF_ALGO_TKIP = 0x2,DOT11_AUTH_ALGO_MICHAEL = 0x1,};
enum MACRO_DOWNLOAD {DOWNLOAD_FAIL = 34,};
enum MACRO_DRAGDROP {DRAGDROP_E_FIRST = 0x80040100,DRAGDROP_E_LAST = 0x8004010F,DRAGDROP_S_FIRST = 0x40100,DRAGDROP_S_LAST = 0x4010F,DRAGDROP_E_NOTREGISTERED = 0x80040100,DRAGDROP_E_ALREADYREGISTERED = 0x80040101,DRAGDROP_E_INVALIDHWND = 0x80040102,};
enum MACRO_DSM_Load {DSM_Load_Balance_Policy_V2_Version_ID = 1,DSM_LB_FAILOVER = 1,DSM_LB_ROUND_ROBIN = 2,DSM_LB_ROUND_ROBIN_WITH_SUBSET = 3,DSM_LB_DYN_LEAST_QUEUE_DEPTH = 4,DSM_LB_WEIGHTED_PATHS = 5,DSM_LB_LEAST_BLOCKS = 6,DSM_LB_VENDOR_SPECIFIC = 7,DSM_Load_Balance_Policy_V2_LoadBalancePolicy_ID = 2,DSM_Load_Balance_Policy_V2_DSMPathCount_ID = 3,DSM_Load_Balance_Policy_V2_Reserved_ID = 4,DSM_Load_Balance_Policy_V2_DSM_Paths_ID = 5,DSM_QueryLBPolicy_V2_LoadBalancePolicy_ID = 1,DSM_QuerySupportedLBPolicies_V2_SupportedLBPoliciesCount_ID = 1,DSM_QuerySupportedLBPolicies_V2_Reserved_ID = 2,DSM_QuerySupportedLBPolicies_V2_Supported_LB_Policies_ID = 3,};
enum MACRO_DVRH_USE {DVRH_USE_FAST_MACROS = 1,DVRH_USE_NIBBLE_MACROS = 1,};
enum MACRO_ECR_FIFO {ECR_FIFO_MASK = 0x3,ECR_FIFO_FULL = 0x2,ECR_FIFO_EMPTY = 0x1,ECR_FIFO_SOME_DATA = 0x0,};
enum MACRO_ENCODING {ENCODING_UTF_8 = 0x6A,};
enum MACRO_ETHERNET {ETHERNET_TYPE_MINIMUM = 0x600,ETHERNET_TYPE_IPV4 = 0x800,ETHERNET_TYPE_ARP = 0x806,ETHERNET_TYPE_IPV6 = 0x86DD,ETHERNET_TYPE_802_1Q = 0x8100,};
enum MACRO_EXTENDED {EXTENDED_FLAG_POWER = 0x1,};
enum MACRO_E_STRING {E_STRING_NOT_NULL_TERMINATED = 0x80000017,E_ILLEGAL_DELEGATE_ASSIGNMENT = 0x80000018,E_ASYNC_OPERATION_NOT_STARTED = 0x80000019,E_APPLICATION_EXITING = 0x8000001A,E_APPLICATION_VIEW_EXITING = 0x8000001B,};
enum MACRO_FACILITY {FACILITY_VOLSNAP = 0x50,FACILITY_VOLMGR = 0x38,FACILITY_VIRTUALIZATION = 0x37,FACILITY_VIDEO = 0x1B,FACILITY_USB_ERROR_CODE = 0x10,FACILITY_TRANSACTION = 0x19,FACILITY_TPM = 0x29,FACILITY_TERMINAL_SERVER = 0xA,FACILITY_SXS_ERROR_CODE = 0x15,FACILITY_NTSSPI = 0x9,FACILITY_SPACES = 0xE7,FACILITY_SECUREBOOT = 0x43,FACILITY_RPC_STUBS = 0x3,FACILITY_RPC_RUNTIME = 0x2,FACILITY_RESUME_KEY_FILTER = 0x40,FACILITY_RDBSS = 0x41,FACILITY_NTWIN32 = 0x7,FACILITY_WIN32K_NTUSER = 0x3E,FACILITY_WIN32K_NTGDI = 0x3F,FACILITY_NDIS_ERROR_CODE = 0x23,};
enum MACRO_FACILTIY {FACILTIY_MUI_ERROR_CODE = 0xB,};
enum MACRO_FCB_MODE {FCB_MODE_EXCLUSIVE = 1,FCB_MODE_SHARED = 2,FCB_MODE_SHARED_WAIT_FOR_EXCLUSIVE = 3,FCB_MODE_SHARED_STARVE_EXCLUSIVE = 4,};
enum MACRO_FILENAME {FILENAME_MAX = 260,FOPEN_MAX = 20,};
enum MACRO_FILE_ANY {FILE_ANY_ACCESS = 0,FILE_SPECIAL_ACCESS = 0,FILE_READ_ACCESS = 1,FILE_WRITE_ACCESS = 2,FILE_READ_DATA = 1,FILE_LIST_DIRECTORY = 1,FILE_WRITE_DATA = 2,FILE_ADD_FILE = 2,FILE_APPEND_DATA = 4,FILE_ADD_SUBDIRECTORY = 4,FILE_CREATE_PIPE_INSTANCE = 4,FILE_READ_EA = 8,FILE_WRITE_EA = 16,FILE_EXECUTE = 32,FILE_TRAVERSE = 32,FILE_DELETE_CHILD = 64,FILE_READ_ATTRIBUTES = 128,FILE_WRITE_ATTRIBUTES = 256,FILE_ALL_ACCESS = 2032127,FILE_GENERIC_READ = 1179785,FILE_GENERIC_WRITE = 1179926,FILE_GENERIC_EXECUTE = 1179808,FILE_SHARE_READ = 1,FILE_SHARE_WRITE = 2,FILE_SHARE_DELETE = 4,FILE_SHARE_VALID_FLAGS = 7,FILE_ATTRIBUTE_READONLY = 1,FILE_ATTRIBUTE_HIDDEN = 2,FILE_ATTRIBUTE_SYSTEM = 4,FILE_ATTRIBUTE_DIRECTORY = 16,FILE_ATTRIBUTE_ARCHIVE = 32,FILE_ATTRIBUTE_DEVICE = 64,FILE_ATTRIBUTE_NORMAL = 128,FILE_ATTRIBUTE_TEMPORARY = 256,FILE_ATTRIBUTE_SPARSE_FILE = 512,FILE_ATTRIBUTE_REPARSE_POINT = 1024,FILE_ATTRIBUTE_COMPRESSED = 2048,FILE_ATTRIBUTE_OFFLINE = 4096,FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 8192,FILE_ATTRIBUTE_ENCRYPTED = 16384,FILE_ATTRIBUTE_INTEGRITY_STREAM = 32768,FILE_ATTRIBUTE_VIRTUAL = 65536,FILE_ATTRIBUTE_NO_SCRUB_DATA = 131072,FILE_ATTRIBUTE_VALID_FLAGS = 196535,FILE_ATTRIBUTE_VALID_SET_FLAGS = 143783,FILE_SUPERSEDE = 0,FILE_OPEN = 1,FILE_CREATE = 2,FILE_OPEN_IF = 3,FILE_OVERWRITE = 4,FILE_OVERWRITE_IF = 5,FILE_MAXIMUM_DISPOSITION = 5,FILE_DIRECTORY_FILE = 1,FILE_WRITE_THROUGH = 2,FILE_SEQUENTIAL_ONLY = 4,FILE_NO_INTERMEDIATE_BUFFERING = 8,FILE_SYNCHRONOUS_IO_ALERT = 16,FILE_SYNCHRONOUS_IO_NONALERT = 32,FILE_NON_DIRECTORY_FILE = 64,FILE_CREATE_TREE_CONNECTION = 128,FILE_COMPLETE_IF_OPLOCKED = 256,FILE_NO_EA_KNOWLEDGE = 512,FILE_OPEN_REMOTE_INSTANCE = 1024,FILE_RANDOM_ACCESS = 2048,FILE_DELETE_ON_CLOSE = 4096,FILE_OPEN_BY_FILE_ID = 8192,FILE_OPEN_FOR_BACKUP_INTENT = 16384,FILE_NO_COMPRESSION = 32768,FILE_OPEN_REQUIRING_OPLOCK = 65536,FILE_DISALLOW_EXCLUSIVE = 131072,FILE_SESSION_AWARE = 262144,FILE_RESERVE_OPFILTER = 1048576,FILE_OPEN_REPARSE_POINT = 2097152,FILE_OPEN_NO_RECALL = 4194304,FILE_OPEN_FOR_FREE_SPACE_QUERY = 8388608,FILE_VALID_OPTION_FLAGS = 16777215,FILE_VALID_PIPE_OPTION_FLAGS = 50,FILE_VALID_MAILSLOT_OPTION_FLAGS = 50,FILE_VALID_SET_FLAGS = 54,FILE_SUPERSEDED = 0,FILE_OPENED = 1,FILE_CREATED = 2,FILE_OVERWRITTEN = 3,FILE_EXISTS = 4,FILE_DOES_NOT_EXIST = 5,FILE_WRITE_TO_END_OF_FILE = -1,FILE_USE_FILE_POINTER_POSITION = -2,FILE_BYTE_ALIGNMENT = 0,FILE_WORD_ALIGNMENT = 1,FILE_LONG_ALIGNMENT = 3,FILE_QUAD_ALIGNMENT = 7,FILE_OCTA_ALIGNMENT = 15,FILE_32_BYTE_ALIGNMENT = 31,FILE_64_BYTE_ALIGNMENT = 63,FILE_128_BYTE_ALIGNMENT = 127,FILE_256_BYTE_ALIGNMENT = 255,FILE_512_BYTE_ALIGNMENT = 511,};
enum MACRO_FILE_SET {FILE_SET_ENCRYPTION = 0x1,FILE_CLEAR_ENCRYPTION = 0x2,};
enum MACRO_FLT_PORT {FLT_PORT_CONNECT = 0x1,FLT_PORT_ALL_ACCESS = 0x1F0001,FLT_MAX_TRANSACTION_NOTIFICATIONS = 0x4000000F,};
enum MACRO_FSRTL_CC {FSRTL_CC_FLUSH_ERROR_FLAG_NO_HARD_ERROR = 0x1,FSRTL_CC_FLUSH_ERROR_FLAG_NO_LOG_ENTRY = 0x2,FSRTL_VIRTDISK_FULLY_ALLOCATED = 0x1,FSRTL_VIRTDISK_NO_DRIVE_LETTER = 0x2,};
enum MACRO_GENERATE {GENERATE_CLIENT_CHALLENGE = 0x10,};
enum MACRO_GET_LAST {GET_LAST_SESSION = 0x1,};
enum MACRO_GET_UNIT {GET_UNIT_INFO_IDS = 0x1,GET_UNIT_INFO_CAPABILITIES = 0x2,GET_UNIT_INFO_ISOCH_PARAMS = 0x3,GET_UNIT_BUS_GENERATION_NODE = 0x4,GET_UNIT_DDI_VERSION = 0x5,GET_UNIT_DIAG_LEVEL = 0x6,};
enum MACRO_HAL_MASK {HAL_MASK_UNMASK_FLAGS_NONE = 0x0,HAL_MASK_UNMASK_FLAGS_SERVICING_DEFERRED = 0x1,HAL_MASK_UNMASK_FLAGS_SERVICING_COMPLETE = 0x2,};
enum MACRO_HARDWARE {HARDWARE_PROFILE_UNDOCKED_STRING = 0x40010001,HARDWARE_PROFILE_DOCKED_STRING = 0x40010002,HARDWARE_PROFILE_UNKNOWN_STRING = 0x40010003,};
enum MACRO_HBAFCPID {HBAFCPID_Fcid_ID = 1,HBAFCPID_NodeWWN_ID = 2,HBAFCPID_PortWWN_ID = 3,HBAFCPID_FcpLun_ID = 4,};
enum MACRO_HEADLESS {HEADLESS_BIT = 12,HEADLESS_CAP = 4096,};
enum MACRO_IEEE1212 {IEEE1212_KEY_TYPE_IMMEDIATE = 0,IEEE1212_KEY_TYPE_OFFSET = 1,IEEE1212_KEY_TYPE_LEAF = 2,IEEE1212_KEY_TYPE_DIRECTORY = 3,IEEE1212_KEY_ID_DESCRIPTOR = 1,IEEE1212_KEY_ID_VENDOR = 3,IEEE1212_KEY_ID_UNIT = 17,IEEE1212_KEY_ID_SPECIFIER_ID = 18,IEEE1212_KEY_ID_VERSION = 19,IEEE1212_KEY_ID_DEPENDENT_INFO = 20,IEEE1212_KEY_ID_MODEL = 23,IEEE1212_KEY_ID_EXTENDED_KEY_SPEC_ID = 28,IEEE1212_KEY_ID_EXTENDED_KEY = 29,IEEE1212_KEY_ID_EXTENDED_DATA = 30,};
enum MACRO_IF_CHECK {IF_CHECK_NONE = 0x0,IF_CHECK_MCAST = 0x1,IF_CHECK_SEND = 0x2,IF_CONNECTION_DEDICATED = 0x1,IF_CONNECTION_PASSIVE = 0x2,IF_CONNECTION_DEMAND = 0x3,IF_ADMIN_STATUS_UP = 0x1,IF_ADMIN_STATUS_DOWN = 0x2,IF_ADMIN_STATUS_TESTING = 0x3,};
enum MACRO_INACTIVE {INACTIVE = 0,};
enum MACRO_INCOMING {INCOMING_SMB_FLAGS = 123,};
enum MACRO_INDICATE {INDICATE_ERRED_PACKETS = 0x10,INDICATE_END_OF_TX = 0x20,};
enum MACRO_INTERNAL {INTERNAL_POWER_ERROR = 0xA0,};
enum MACRO_IOCTL_IR {IOCTL_IR_GET_DEV_CAPS = 257966084,};
enum MACRO_IOCTL_KS {IOCTL_KS_PROPERTY = 0x2F0003,IOCTL_KS_ENABLE_EVENT = 0x2F0007,IOCTL_KS_DISABLE_EVENT = 0x2F000B,IOCTL_KS_METHOD = 0x2F000F,IOCTL_KS_WRITE_STREAM = 0x2F8013,IOCTL_KS_READ_STREAM = 0x2F4017,IOCTL_KS_RESET_STATE = 0x2F001B,};
enum MACRO_IOCTL_PF {IOCTL_PF_SET_EXTENSION_POINTER = 1212504,IOCTL_PMI_GET_CAPABILITIES = 4538368,IOCTL_PMI_GET_CONFIGURATION = 4538372,IOCTL_PMI_SET_CONFIGURATION = 4554760,IOCTL_PMI_GET_MEASUREMENT = 4538380,IOCTL_PMI_REGISTER_EVENT_NOTIFY = 4571152,};
enum MACRO_IOC_VOID {IOC_VOID = 0x20000000,IOC_OUT = 0x40000000,IOC_IN = 0x80000000,IOC_INOUT = 0xC0000000,};
enum MACRO_IO_CHECK {IO_CHECK_CREATE_PARAMETERS = 0x200,IO_ATTACH_DEVICE = 0x400,IO_IGNORE_SHARE_ACCESS_CHECK = 0x800,};
enum MACRO_IO_FORCE {IO_FORCE_ACCESS_CHECK = 0x1,IO_NO_PARAMETER_CHECKING = 0x100,IO_REPARSE = 0x0,IO_REMOUNT = 0x1,};
enum MACRO_IPV6_ECN {IPV6_ECN_SHIFT = 12,IPV6_MINIMUM_MTU = 1280,};
enum MACRO_KENCODED {KENCODED_TIMER_PROCESSOR = 1,};
enum MACRO_KEYBOARD {KEYBOARD_OVERRUN_MAKE_CODE = 0xFF,};
enum MACRO_KEY_MAKE {KEY_MAKE = 0,KEY_BREAK = 1,KEY_E0 = 2,KEY_E1 = 4,KEY_TERMSRV_SET_LED = 8,KEY_TERMSRV_SHADOW = 16,KEY_TERMSRV_VKPACKET = 32,};
enum MACRO_KSCREATE {KSCREATE_ITEM_SECURITYCHANGED = 0x1,KSCREATE_ITEM_WILDCARD = 0x2,KSCREATE_ITEM_NOPARAMETERS = 0x4,KSCREATE_ITEM_FREEONSTOP = 0x8,};
enum MACRO_KSDEVICE {KSDEVICE_DESCRIPTOR_VERSION = 0x100,KSDEVICE_DESCRIPTOR_VERSION_2 = 0x110,};
enum MACRO_KSDSOUND {KSDSOUND_BUFFER_PRIMARY = 0x1,KSDSOUND_BUFFER_STATIC = 0x2,KSDSOUND_BUFFER_LOCHARDWARE = 0x4,KSDSOUND_BUFFER_LOCSOFTWARE = 0x8,KSDSOUND_BUFFER_CTRL_3D = 0x1,KSDSOUND_BUFFER_CTRL_FREQUENCY = 0x2,KSDSOUND_BUFFER_CTRL_PAN = 0x4,KSDSOUND_BUFFER_CTRL_VOLUME = 0x8,KSDSOUND_BUFFER_CTRL_POSITIONNOTIFY = 0x10,};
enum MACRO_KSEVENTF {KSEVENTF_EVENT_HANDLE = 0x1,KSEVENTF_SEMAPHORE_HANDLE = 0x2,KSEVENTF_EVENT_OBJECT = 0x4,KSEVENTF_SEMAPHORE_OBJECT = 0x8,KSEVENTF_DPC = 0x10,KSEVENTF_WORKITEM = 0x20,KSEVENTF_KSWORKITEM = 0x80,};
enum MACRO_KSFILTER {KSFILTER_NODE = 4294967295,};
enum MACRO_KSMEDIUM {KSMEDIUM_TYPE_ANYINSTANCE = 0,KSMEDIUM_STANDARD_DEVIO = 0,};
enum MACRO_KSMETHOD {KSMETHOD_TYPE_NONE = 0x0,KSMETHOD_TYPE_READ = 0x1,KSMETHOD_TYPE_WRITE = 0x2,KSMETHOD_TYPE_MODIFY = 0x3,KSMETHOD_TYPE_SOURCE = 0x4,KSMETHOD_TYPE_SEND = 0x1,KSMETHOD_TYPE_SETSUPPORT = 0x100,KSMETHOD_TYPE_BASICSUPPORT = 0x200,KSMETHOD_TYPE_TOPOLOGY = 0x10000000,};
enum MACRO_KSSTREAM {KSSTREAM_HEADER_OPTIONSF_SPLICEPOINT = 0x1,KSSTREAM_HEADER_OPTIONSF_PREROLL = 0x2,KSSTREAM_HEADER_OPTIONSF_DATADISCONTINUITY = 0x4,KSSTREAM_HEADER_OPTIONSF_TYPECHANGED = 0x8,KSSTREAM_HEADER_OPTIONSF_TIMEVALID = 0x10,KSSTREAM_HEADER_OPTIONSF_TIMEDISCONTINUITY = 0x40,KSSTREAM_HEADER_OPTIONSF_FLUSHONPAUSE = 0x80,KSSTREAM_HEADER_OPTIONSF_DURATIONVALID = 0x100,KSSTREAM_HEADER_OPTIONSF_ENDOFSTREAM = 0x200,KSSTREAM_HEADER_OPTIONSF_BUFFEREDTRANSFER = 0x400,KSSTREAM_HEADER_OPTIONSF_VRAM_DATA_TRANSFER = 0x800,KSSTREAM_HEADER_OPTIONSF_LOOPEDDATA = 0x80000000,};
enum MACRO_KS_VIDEO {KS_VIDEO_FLAG_FIELD_MASK = 0x3,KS_VIDEO_FLAG_FRAME = 0x0,KS_VIDEO_FLAG_FIELD1 = 0x1,KS_VIDEO_FLAG_FIELD2 = 0x2,KS_VIDEO_FLAG_FIELD1FIRST = 0x4,KS_VIDEO_FLAG_WEAVE = 0x8,KS_VIDEO_FLAG_IPB_MASK = 0x30,KS_VIDEO_FLAG_I_FRAME = 0x0,KS_VIDEO_FLAG_P_FRAME = 0x10,KS_VIDEO_FLAG_B_FRAME = 0x20,KS_VIDEO_FLAG_REPEAT_FIELD = 0x40,KS_VBI_FLAG_FIELD1 = 0x1,KS_VBI_FLAG_FIELD2 = 0x2,KS_VBI_FLAG_MV_PRESENT = 0x100,KS_VBI_FLAG_MV_HARDWARE = 0x200,KS_VBI_FLAG_MV_DETECTED = 0x400,KS_VBI_FLAG_TVTUNER_CHANGE = 0x10,KS_VBI_FLAG_VBIINFOHEADER_CHANGE = 0x20,KS_AnalogVideo_NTSC_Mask = 0x7,KS_AnalogVideo_PAL_Mask = 0x100FF0,KS_AnalogVideo_SECAM_Mask = 0xFF000,};
enum MACRO_LANGUAGE {LANGUAGE_EN_US = 0x656E,};
enum MACRO_LANMAN20 {LANMAN20 = 5,};
enum MACRO_LM_REDIR {LM_REDIR_FAILURE = 0x40003841,DFS_CONNECTION_FAILURE = 0x40003842,DFS_REFERRAL_FAILURE = 0x40003843,};
enum MACRO_LOCATION {NODE_IDS_LOCATION = 0x8,RESET_START_LOCATION = 0xC,SPLIT_TIMEOUT_HI_LOCATION = 0x18,SPLIT_TIMEOUT_LO_LOCATION = 0x1C,INTERRUPT_TARGET_LOCATION = 0x50,INTERRUPT_MASK_LOCATION = 0x54,CYCLE_TIME_LOCATION = 0x200,BUS_TIME_LOCATION = 0x204,POWER_FAIL_IMMINENT_LOCATION = 0x208,POWER_SOURCE_LOCATION = 0x20C,BUSY_TIMEOUT_LOCATION = 0x210,BUS_MANAGER_ID_LOCATION = 0x21C,BANDWIDTH_AVAILABLE_LOCATION = 0x220,CHANNELS_AVAILABLE_LOCATION = 0x224,NETWORK_CHANNELS_LOCATION = 0x234,CONFIG_ROM_LOCATION = 0x400,TOPOLOGY_MAP_LOCATION = 0x1000,SPEED_MAP_LOCATION = 0x2000,};
enum MACRO_LOG_PAGE {LOG_PAGE_CODE_WRITE_ERROR_COUNTERS = 0x2,LOG_PAGE_CODE_READ_ERROR_COUNTERS = 0x3,LOG_PAGE_CODE_LOGICAL_BLOCK_PROVISIONING = 0xC,LOG_PAGE_CODE_TEMPERATURE = 0xD,LOG_PAGE_CODE_STARTSTOP_CYCLE_COUNTERS = 0xE,LOG_PAGE_CODE_SELFTEST_RESULTS = 0x10,LOG_PAGE_CODE_SOLID_STATE_MEDIA = 0x11,LOG_PAGE_CODE_BACKGROUND_SCAN_RESULTS = 0x15,LOG_PAGE_LBP_PARAMETER_CODE_AVAILABLE = 0x1,LOG_PAGE_LBP_PARAMETER_CODE_USED = 0x2,LOG_PAGE_LBP_RESOURCE_SCOPE_NOT_REPORTED = 0x0,LOG_PAGE_LBP_RESOURCE_SCOPE_DEDICATED_TO_LUN = 0x1,LOG_PAGE_LBP_RESOURCE_SCOPE_NOT_DEDICATED_TO_LUN = 0x2,};
enum MACRO_MAILSLOT {MAILSLOT_FILE_SYSTEM = 0x52,};
enum MACRO_MANUALLY {MANUALLY_INITIATED_CRASH = 0xE2,};
enum MACRO_MASK_AUX {MASK_AUX_50_60_BIT = 0x200000,};
enum MACRO_MAXSHORT {MAXSHORT = 0x7FFF,MINLONG = 0x80000000,};
enum MACRO_MAXUCHAR {MAXUCHAR = 0xFF,};
enum MACRO_MAXULONG {MAXULONG = 0xFFFFFFFF,};
enum MACRO_MAX_IPV4 {MAX_IPV4_PACKET = 65535,MAX_IPV4_HLEN = 60,};
enum MACRO_MAX_IPV6 {MAX_IPV6_PAYLOAD = 65535,};
enum MACRO_MAX_PATH {MAX_PATH = 260,};
enum MACRO_MAX_PIPE {MAX_PIPE_BUFFER_SIZE = 0xFFFF,};
enum MACRO_MAX_SINK {MAX_SINK_DESCRIPTION_NAME_LENGTH = 32,};
enum MACRO_MAX_XFER {MAX_XFER_MODE = 18,};
enum MACRO_MILAVERR {MILAVERR_NOCLOCK = 0x88980500,MILAVERR_NOMEDIATYPE = 0x88980501,MILAVERR_NOVIDEOMIXER = 0x88980502,MILAVERR_NOVIDEOPRESENTER = 0x88980503,MILAVERR_NOREADYFRAMES = 0x88980504,MILAVERR_MODULENOTLOADED = 0x88980505,MILAVERR_WMPFACTORYNOTREGISTERED = 0x88980506,MILAVERR_INVALIDWMPVERSION = 0x88980507,MILAVERR_INSUFFICIENTVIDEORESOURCES = 0x88980508,MILAVERR_VIDEOACCELERATIONNOTAVAILABLE = 0x88980509,MILAVERR_REQUESTEDTEXTURETOOBIG = 0x8898050A,MILAVERR_SEEKFAILED = 0x8898050B,MILAVERR_UNEXPECTEDWMPFAILURE = 0x8898050C,MILAVERR_MEDIAPLAYERCLOSED = 0x8898050D,MILAVERR_UNKNOWNHARDWAREERROR = 0x8898050E,};
enum MACRO_MINIPORT {MINIPORT_REG_SZ = 1,MINIPORT_REG_BINARY = 3,MINIPORT_REG_DWORD = 4,MINIPORT_REG_MULTI_SZ = 7,};
enum MACRO_MODE_LEN {MODE_LEN_1284_3 = 7,};
enum MACRO_MPIO_DSM {MPIO_DSM = 6583149,};
enum MACRO_MPIO_GET {MPIO_GET_DESCRIPTOR_NumberPdos_ID = 1,MPIO_GET_DESCRIPTOR_DeviceName_ID = 2,MPIO_GET_DESCRIPTOR_PdoInformation_ID = 3,MPIO_DEVINSTANCE_HEALTH_CLASS_PathId_ID = 1,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberReads_ID = 2,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberWrites_ID = 3,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberBytesRead_ID = 4,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberBytesWritten_ID = 5,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberRetries_ID = 6,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberIoErrors_ID = 7,MPIO_DEVINSTANCE_HEALTH_CLASS_CreateTime_ID = 8,MPIO_DEVINSTANCE_HEALTH_CLASS_FailTime_ID = 9,MPIO_DEVINSTANCE_HEALTH_CLASS_DeviceOffline_ID = 10,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberReadsWrap_ID = 11,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberWritesWrap_ID = 12,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberBytesReadWrap_ID = 13,MPIO_DEVINSTANCE_HEALTH_CLASS_NumberBytesWrittenWrap_ID = 14,MPIO_DEVINSTANCE_HEALTH_CLASS_Pad_ID = 15,MPIO_DEVINSTANCE_HEALTH_INFO_NumberDevInstancePackets_ID = 1,MPIO_DEVINSTANCE_HEALTH_INFO_Reserved_ID = 2,MPIO_DEVINSTANCE_HEALTH_INFO_DevInstanceHealthPackets_ID = 3,};
enum MACRO_MSAUDIO1 {MSAUDIO1_BITS_PER_SAMPLE = 16,MSAUDIO1_MAX_CHANNELS = 2,};
enum MACRO_MSSIPOTF {MSSIPOTF_E_OUTOFMEMRANGE = 0x80097001,MSSIPOTF_E_CANTGETOBJECT = 0x80097002,MSSIPOTF_E_NOHEADTABLE = 0x80097003,MSSIPOTF_E_BAD_MAGICNUMBER = 0x80097004,MSSIPOTF_E_BAD_OFFSET_TABLE = 0x80097005,MSSIPOTF_E_TABLE_TAGORDER = 0x80097006,MSSIPOTF_E_TABLE_LONGWORD = 0x80097007,MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT = 0x80097008,MSSIPOTF_E_TABLES_OVERLAP = 0x80097009,MSSIPOTF_E_TABLE_PADBYTES = 0x8009700A,MSSIPOTF_E_FILETOOSMALL = 0x8009700B,MSSIPOTF_E_TABLE_CHECKSUM = 0x8009700C,MSSIPOTF_E_FILE_CHECKSUM = 0x8009700D,MSSIPOTF_E_FAILED_POLICY = 0x80097010,MSSIPOTF_E_FAILED_HINTS_CHECK = 0x80097011,MSSIPOTF_E_NOT_OPENTYPE = 0x80097012,MSSIPOTF_E_FILE = 0x80097013,MSSIPOTF_E_CRYPT = 0x80097014,MSSIPOTF_E_BADVERSION = 0x80097015,MSSIPOTF_E_DSIG_STRUCTURE = 0x80097016,MSSIPOTF_E_PCONST_CHECK = 0x80097017,MSSIPOTF_E_STRUCTURE = 0x80097018,};
enum MACRO_MSSerial {MSSerial_PortName_PortName_ID = 1,SERIAL_WMI_COMM_DATA_BaudRate_ID = 1,SERIAL_WMI_COMM_DATA_BitsPerByte_ID = 2,};
enum MACRO_MULTIPLE {MULTIPLE_IRP_COMPLETE_REQUESTS = 0x44,};
enum MACRO_NDIS_802 {NDIS_802_3_MAC_OPTION_PRIORITY = 0x1,};
enum MACRO_NDIS_ETH {NDIS_ETH_TYPE_IPV4 = 0x800,NDIS_ETH_TYPE_ARP = 0x806,NDIS_ETH_TYPE_IPV6 = 0x86DD,NDIS_ETH_TYPE_802_1X = 0x888E,NDIS_ETH_TYPE_802_1Q = 0x8100,NDIS_ETH_TYPE_SLOW_PROTOCOL = 0x8809,NDIS_802_11_LENGTH_SSID = 0x20,NDIS_802_11_LENGTH_RATES = 0x8,NDIS_802_11_LENGTH_RATES_EX = 0x10,NDIS_802_11_AUTH_REQUEST_AUTH_FIELDS = 0xF,NDIS_802_11_AUTH_REQUEST_REAUTH = 0x1,NDIS_802_11_AUTH_REQUEST_KEYUPDATE = 0x2,NDIS_802_11_AUTH_REQUEST_PAIRWISE_ERROR = 0x6,NDIS_802_11_AUTH_REQUEST_GROUP_ERROR = 0xE,NDIS_802_11_PMKID_CANDIDATE_PREAUTH_ENABLED = 0x1,NDIS_802_11_AI_REQFI_CAPABILITIES = 0x1,NDIS_802_11_AI_REQFI_LISTENINTERVAL = 0x2,NDIS_802_11_AI_REQFI_CURRENTAPADDRESS = 0x4,NDIS_802_11_AI_RESFI_CAPABILITIES = 0x1,NDIS_802_11_AI_RESFI_STATUSCODE = 0x2,NDIS_802_11_AI_RESFI_ASSOCIATIONID = 0x4,};
enum MACRO_NDIS_MIN {NDIS_MIN_API = 0x400,NDIS_PROTOCOL_MAJOR_VERSION = 0x6,NDIS_PROTOCOL_MINOR_VERSION = 0x14,NDIS_FILTER_MAJOR_VERSION = 0x6,NDIS_FILTER_MINOR_VERSION = 0x14,NDIS_PROTOCOL_MINIMUM_MAJOR_VERSION = 0x6,NDIS_PROTOCOL_MINIMUM_MINOR_VERSION = 0x14,NDIS_FILTER_MINIMUM_MAJOR_VERSION = 0x6,NDIS_FILTER_MINIMUM_MINOR_VERSION = 0x14,NDIS_LEGACY_MINIPORT = 0x0,NDIS_LEGACY_PROTOCOL = 0x0,NDIS_LEGACY_DRIVER = 0x0,NDIS_SUPPORT_NDIS620 = 0x1,NDIS_SUPPORT_NDIS630 = 0x0,NDIS_SUPPORT_NDIS61 = 0x1,NDIS_SUPPORT_NDIS6 = 0x1,NDIS_SUPPORT_60_COMPATIBLE_API = 0x1,NDIS_RUNTIME_VERSION_60 = 0x60000,NDIS_RUNTIME_VERSION_61 = 0x60001,NDIS_RUNTIME_VERSION_620 = 0x60014,NDIS_RUNTIME_VERSION_630 = 0x6001E,};
enum MACRO_NDIS_NBL {NDIS_NBL_FLAGS_SEND_READ_ONLY = 0x1,NDIS_NBL_FLAGS_RECV_READ_ONLY = 0x2,NDIS_NBL_FLAGS_HD_SPLIT = 0x100,NDIS_NBL_FLAGS_IS_IPV4 = 0x200,NDIS_NBL_FLAGS_IS_IPV6 = 0x400,NDIS_NBL_FLAGS_IS_TCP = 0x800,NDIS_NBL_FLAGS_IS_UDP = 0x1000,NDIS_NBL_FLAGS_SPLIT_AT_UPPER_LAYER_PROTOCOL_HEADER = 0x2000,NDIS_NBL_FLAGS_SPLIT_AT_UPPER_LAYER_PROTOCOL_PAYLOAD = 0x4000,NDIS_NBL_FLAGS_IS_LOOPBACK_PACKET = 0x8000,};
enum MACRO_NDIS_NET {NDIS_NET_BUFFER_LIST_INFO_ILLEGALLY_TRANSFERRED = 0x146,};
enum MACRO_NDIS_OID {NDIS_OID_REQUEST_REVISION_1 = 1,NDIS_OID_REQUEST_TIMEOUT_INFINITE = 0,NDIS_OID_REQUEST_NDIS_RESERVED_SIZE = 16,NDIS_STATUS_INDICATION_FLAGS_NDIS_RESERVED = 4095,NDIS_STATUS_INDICATION_FLAGS_MEDIA_CONNECT_TO_CONNECT = 4096,NDIS_STATUS_INDICATION_REVISION_1 = 1,NDIS_TIMER_CHARACTERISTICS_REVISION_1 = 1,NDIS_MAX_LOOKAHEAD_SIZE_ACCESSED_UNDEFINED = -1,NDIS_RESTART_GENERAL_ATTRIBUTES_MAX_LOOKAHEAD_ACCESSED_DEFINED = 1,NDIS_RESTART_GENERAL_ATTRIBUTES_REVISION_1 = 1,NDIS_RESTART_GENERAL_ATTRIBUTES_REVISION_2 = 2,NDIS_SYSTEM_PROCESSOR_INFO_REVISION_1 = 1,NDIS_PAUSE_NDIS_INTERNAL = 1,NDIS_PAUSE_LOW_POWER = 2,NDIS_PAUSE_BIND_PROTOCOL = 4,NDIS_PAUSE_UNBIND_PROTOCOL = 8,NDIS_PAUSE_ATTACH_FILTER = 16,NDIS_PAUSE_DETACH_FILTER = 32,NDIS_PAUSE_FILTER_RESTART_STACK = 64,NDIS_PAUSE_MINIPORT_DEVICE_REMOVE = 128,NDIS_FILTER_INTERFACE_IM_FILTER = 1,NDIS_FILTER_INTERFACE_LW_FILTER = 2,NDIS_FILTER_INTERFACE_REVISION_1 = 1,NDIS_ENUM_FILTERS_REVISION_1 = 1,NDIS_DEVICE_OBJECT_ATTRIBUTES_REVISION_1 = 1,NDIS_OBJECT_TYPE_DRIVER_WRAPPER_REVISION_1 = 1,NDIS_SHARED_MEM_PARAMETERS_CONTIGUOUS = 1,NDIS_SHARED_MEM_PARAMETERS_CONTIGOUS = 1,NDIS_SHARED_MEM_HANDLE_HAL_ALLOCATED = 0,NDIS_SHARED_MEMORY_PARAMETERS_REVISION_1 = 1,NDIS_SHARED_MEMORY_PROVIDER_CHAR_SUPPORTS_PF_VPORTS = 1,NDIS_SHARED_MEMORY_PROVIDER_CHARACTERISTICS_REVISION_1 = 1,NDIS_RECEIVE_QUEUE_STATE_REVISION_1 = 1,NDIS_SCATTER_GATHER_LIST_PARAMETERS_REVISION_1 = 1,NDIS_NBL_MEDIA_SPECIFIC_INFO_REVISION_1 = 1,NDIS_MEDIA_SPECIFIC_INFO_TUNDL = 65537,NDIS_MEDIA_SPECIFIC_INFO_FCOE = -2147418112,NDIS_MEDIA_SPECIFIC_INFO_EAPOL = -2147418111,NDIS_MEDIA_SPECIFIC_INFO_LLDP = -2147418110,NDIS_MEDIA_SPECIFIC_INFO_TIMESYNC = -2147418109,};
enum MACRO_NDIS_PNP {NDIS_PNP_WAKE_UP_MAGIC_PACKET = 0x1,NDIS_PNP_WAKE_UP_PATTERN_MATCH = 0x2,NDIS_PNP_WAKE_UP_LINK_CHANGE = 0x4,};
enum MACRO_NDIS_TCP {NDIS_TCP_LARGE_SEND_OFFLOAD_V1_TYPE = 0,NDIS_TCP_LARGE_SEND_OFFLOAD_V2_TYPE = 1,NDIS_TCP_LARGE_SEND_OFFLOAD_IPv4 = 0,NDIS_TCP_LARGE_SEND_OFFLOAD_IPv6 = 1,NDIS_LARGE_SEND_OFFLOAD_MAX_HEADER_LENGTH = 128,NDIS_OFFLOAD_ENCAPSULATION_REVISION_1 = 1,};
enum MACRO_NDIS_USE {NDIS_USE_WAN_WRAPPER = 0x1,NDIS_STATUS_TAPI_INDICATION = 0x40010080,};
enum MACRO_NDIS_WDM {NDIS_WDM = 0,};
enum MACRO_NLB_HOOK {NLB_HOOK_FLAGS_PROTOCOL_IS_TCP = 0x100,NLB_HOOK_FLAGS_CONNECTION_UP = 0x2,NLB_HOOK_FLAGS_CONNECTION_DOWN = 0x4,NLB_FILTER_HOOK_FLAGS_STOPPED = 0x1,NLB_FILTER_HOOK_FLAGS_DRAINING = 0x2,NLB_PUBLIC_DEVICE_TYPE_CORE = 0xC0C0,NLB_PUBLIC_IOCTL_MINIPORT_NAME_LENGTH = 0x30,};
enum MACRO_NO_8DOT3 {NO_8DOT3_NAME_PRESENT = 0x1,};
enum MACRO_NO_PAGES {NO_PAGES_AVAILABLE = 0x4D,};
enum MACRO_NTFRSPRF {NTFRSPRF_OPEN_RPC_BINDING_ERROR_SET = 0xC00034D7,NTFRSPRF_OPEN_RPC_BINDING_ERROR_CONN = 0xC00034D8,NTFRSPRF_OPEN_RPC_CALL_ERROR_SET = 0xC00034D9,NTFRSPRF_OPEN_RPC_CALL_ERROR_CONN = 0xC00034DA,NTFRSPRF_COLLECT_RPC_BINDING_ERROR_SET = 0xC00034DB,NTFRSPRF_COLLECT_RPC_BINDING_ERROR_CONN = 0xC00034DC,NTFRSPRF_COLLECT_RPC_CALL_ERROR_SET = 0xC00034DD,NTFRSPRF_COLLECT_RPC_CALL_ERROR_CONN = 0xC00034DE,NTFRSPRF_VIRTUALALLOC_ERROR_SET = 0xC00034DF,NTFRSPRF_VIRTUALALLOC_ERROR_CONN = 0xC00034E0,NTFRSPRF_REGISTRY_ERROR_SET = 0xC00034E1,NTFRSPRF_REGISTRY_ERROR_CONN = 0xC00034E2,};
enum MACRO_OBJ_NAME {OBJ_NAME_PATH_SEPARATOR = 92,};
enum MACRO_OBSOLETE {OBSOLETE_DISK_GET_WRITE_CACHE_STATE = 0x740DC,};
enum MACRO_OID_IRDA {OID_IRDA_RECEIVING = 0xA010100,OID_IRDA_TURNAROUND_TIME = 0xA010101,OID_IRDA_SUPPORTED_SPEEDS = 0xA010102,OID_IRDA_LINK_SPEED = 0xA010103,OID_IRDA_MEDIA_BUSY = 0xA010104,OID_IRDA_EXTRA_RCV_BOFS = 0xA010200,OID_IRDA_RATE_SNIFF = 0xA010201,OID_IRDA_UNICAST_LIST = 0xA010202,OID_IRDA_MAX_UNICAST_LIST_SIZE = 0xA010203,OID_IRDA_MAX_RECEIVE_WINDOW_SIZE = 0xA010204,OID_IRDA_MAX_SEND_WINDOW_SIZE = 0xA010205,OID_IRDA_RESERVED1 = 0xA01020A,OID_IRDA_RESERVED2 = 0xA01020F,OID_1394_LOCAL_NODE_INFO = 0xC010101,OID_1394_VC_INFO = 0xC010102,OID_CO_ADD_PVC = 0xFE000001,OID_CO_DELETE_PVC = 0xFE000002,OID_CO_GET_CALL_INFORMATION = 0xFE000003,OID_CO_ADD_ADDRESS = 0xFE000004,OID_CO_DELETE_ADDRESS = 0xFE000005,OID_CO_GET_ADDRESSES = 0xFE000006,OID_CO_ADDRESS_CHANGE = 0xFE000007,OID_CO_SIGNALING_ENABLED = 0xFE000008,OID_CO_SIGNALING_DISABLED = 0xFE000009,OID_CO_AF_CLOSE = 0xFE00000A,OID_CO_TAPI_CM_CAPS = 0xFE001001,OID_CO_TAPI_LINE_CAPS = 0xFE001002,OID_CO_TAPI_ADDRESS_CAPS = 0xFE001003,OID_CO_TAPI_TRANSLATE_TAPI_CALLPARAMS = 0xFE001004,OID_CO_TAPI_TRANSLATE_NDIS_CALLPARAMS = 0xFE001005,OID_CO_TAPI_TRANSLATE_TAPI_SAP = 0xFE001006,OID_CO_TAPI_GET_CALL_DIAGNOSTICS = 0xFE001007,OID_CO_TAPI_REPORT_DIGITS = 0xFE001008,OID_CO_TAPI_DONT_REPORT_DIGITS = 0xFE001009,OID_PNP_CAPABILITIES = 0xFD010100,OID_PNP_SET_POWER = 0xFD010101,OID_PNP_QUERY_POWER = 0xFD010102,OID_PNP_ADD_WAKE_UP_PATTERN = 0xFD010103,OID_PNP_REMOVE_WAKE_UP_PATTERN = 0xFD010104,OID_PNP_WAKE_UP_PATTERN_LIST = 0xFD010105,OID_PNP_ENABLE_WAKE_UP = 0xFD010106,OID_PNP_WAKE_UP_OK = 0xFD020200,OID_PNP_WAKE_UP_ERROR = 0xFD020201,OID_PM_CURRENT_CAPABILITIES = 0xFD010107,OID_PM_HARDWARE_CAPABILITIES = 0xFD010108,OID_PM_PARAMETERS = 0xFD010109,OID_PM_ADD_WOL_PATTERN = 0xFD01010A,OID_PM_REMOVE_WOL_PATTERN = 0xFD01010B,OID_PM_WOL_PATTERN_LIST = 0xFD01010C,OID_PM_ADD_PROTOCOL_OFFLOAD = 0xFD01010D,OID_PM_GET_PROTOCOL_OFFLOAD = 0xFD01010E,OID_PM_REMOVE_PROTOCOL_OFFLOAD = 0xFD01010F,OID_PM_PROTOCOL_OFFLOAD_LIST = 0xFD010110,OID_PM_RESERVED_1 = 0xFD010111,OID_RECEIVE_FILTER_HARDWARE_CAPABILITIES = 0x10221,OID_RECEIVE_FILTER_GLOBAL_PARAMETERS = 0x10222,OID_RECEIVE_FILTER_ALLOCATE_QUEUE = 0x10223,OID_RECEIVE_FILTER_FREE_QUEUE = 0x10224,OID_RECEIVE_FILTER_ENUM_QUEUES = 0x10225,OID_RECEIVE_FILTER_QUEUE_PARAMETERS = 0x10226,OID_RECEIVE_FILTER_SET_FILTER = 0x10227,OID_RECEIVE_FILTER_CLEAR_FILTER = 0x10228,OID_RECEIVE_FILTER_ENUM_FILTERS = 0x10229,OID_RECEIVE_FILTER_PARAMETERS = 0x1022A,OID_RECEIVE_FILTER_QUEUE_ALLOCATION_COMPLETE = 0x1022B,OID_RECEIVE_FILTER_CURRENT_CAPABILITIES = 0x1022D,OID_NIC_SWITCH_HARDWARE_CAPABILITIES = 0x1022E,OID_NIC_SWITCH_CURRENT_CAPABILITIES = 0x1022F,OID_VLAN_RESERVED1 = 0x10231,OID_VLAN_RESERVED2 = 0x10232,OID_VLAN_RESERVED3 = 0x10233,OID_VLAN_RESERVED4 = 0x10234,OID_NIC_SWITCH_CREATE_SWITCH = 0x10237,OID_NIC_SWITCH_PARAMETERS = 0x10238,OID_NIC_SWITCH_DELETE_SWITCH = 0x10239,OID_NIC_SWITCH_ENUM_SWITCHES = 0x10240,OID_NIC_SWITCH_CREATE_VPORT = 0x10241,OID_NIC_SWITCH_VPORT_PARAMETERS = 0x10242,OID_NIC_SWITCH_ENUM_VPORTS = 0x10243,OID_NIC_SWITCH_DELETE_VPORT = 0x10244,OID_NIC_SWITCH_ALLOCATE_VF = 0x10245,OID_NIC_SWITCH_FREE_VF = 0x10246,OID_NIC_SWITCH_VF_PARAMETERS = 0x10247,OID_NIC_SWITCH_ENUM_VFS = 0x10248,OID_SRIOV_HARDWARE_CAPABILITIES = 0x10249,OID_SRIOV_CURRENT_CAPABILITIES = 0x10250,OID_SRIOV_READ_VF_CONFIG_SPACE = 0x10251,OID_SRIOV_WRITE_VF_CONFIG_SPACE = 0x10252,OID_SRIOV_READ_VF_CONFIG_BLOCK = 0x10253,OID_SRIOV_WRITE_VF_CONFIG_BLOCK = 0x10254,OID_SRIOV_RESET_VF = 0x10255,OID_SRIOV_SET_VF_POWER_STATE = 0x10256,OID_SRIOV_VF_VENDOR_DEVICE_ID = 0x10257,OID_SRIOV_PROBED_BARS = 0x10258,OID_SRIOV_BAR_RESOURCES = 0x10259,OID_SRIOV_PF_LUID = 0x10260,OID_SRIOV_CONFIG_STATE = 0x10261,OID_SRIOV_VF_SERIAL_NUMBER = 0x10262,OID_SRIOV_VF_INVALIDATE_CONFIG_BLOCK = 0x10269,OID_SWITCH_PROPERTY_ADD = 0x10263,OID_SWITCH_PROPERTY_UPDATE = 0x10264,OID_SWITCH_PROPERTY_DELETE = 0x10265,OID_SWITCH_PROPERTY_ENUM = 0x10266,OID_SWITCH_FEATURE_STATUS_QUERY = 0x10267,OID_SWITCH_NIC_REQUEST = 0x10270,OID_SWITCH_PORT_PROPERTY_ADD = 0x10271,OID_SWITCH_PORT_PROPERTY_UPDATE = 0x10272,OID_SWITCH_PORT_PROPERTY_DELETE = 0x10273,OID_SWITCH_PORT_PROPERTY_ENUM = 0x10274,OID_SWITCH_PARAMETERS = 0x10275,OID_SWITCH_PORT_ARRAY = 0x10276,OID_SWITCH_NIC_ARRAY = 0x10277,OID_SWITCH_PORT_CREATE = 0x10278,OID_SWITCH_PORT_DELETE = 0x10279,OID_SWITCH_NIC_CREATE = 0x1027A,OID_SWITCH_NIC_CONNECT = 0x1027B,OID_SWITCH_NIC_DISCONNECT = 0x1027C,OID_SWITCH_NIC_DELETE = 0x1027D,OID_SWITCH_PORT_FEATURE_STATUS_QUERY = 0x1027E,OID_SWITCH_PORT_TEARDOWN = 0x1027F,OID_SWITCH_NIC_SAVE = 0x10290,OID_SWITCH_NIC_SAVE_COMPLETE = 0x10291,OID_SWITCH_NIC_RESTORE = 0x10292,OID_SWITCH_NIC_RESTORE_COMPLETE = 0x10293,OID_SWITCH_NIC_UPDATED = 0x10294,OID_SWITCH_PORT_UPDATED = 0x10295,};
enum MACRO_OLEOBJ_S {OLEOBJ_S_INVALIDVERB = 0x40180,OLEOBJ_S_CANNOT_DOVERB_NOW = 0x40181,OLEOBJ_S_INVALIDHWND = 0x40182,};
enum MACRO_OVERFLOW {OVERFLOW = 3,UNDERFLOW = 4,};
enum MACRO_PAGE_NOT {PAGE_NOT_ZERO = 0x127,};
enum MACRO_PARALLEL {PARALLEL_WMI_LOG_INFO_Flags1_ID = 1,PARALLEL_WMI_LOG_INFO_Flags2_ID = 2,PARALLEL_WMI_LOG_INFO_spare_ID = 3,PARALLEL_WMI_LOG_INFO_SppWriteCount_ID = 4,PARALLEL_WMI_LOG_INFO_NibbleReadCount_ID = 5,PARALLEL_WMI_LOG_INFO_BoundedEcpWriteCount_ID = 6,PARALLEL_WMI_LOG_INFO_BoundedEcpReadCount_ID = 7,PARALLEL_WMI_LOG_INFO_HwEcpWriteCount_ID = 8,PARALLEL_WMI_LOG_INFO_HwEcpReadCount_ID = 9,PARALLEL_WMI_LOG_INFO_SwEcpWriteCount_ID = 10,PARALLEL_WMI_LOG_INFO_SwEcpReadCount_ID = 11,PARALLEL_WMI_LOG_INFO_HwEppWriteCount_ID = 12,PARALLEL_WMI_LOG_INFO_HwEppReadCount_ID = 13,PARALLEL_WMI_LOG_INFO_SwEppWriteCount_ID = 14,PARALLEL_WMI_LOG_INFO_SwEppReadCount_ID = 15,PARALLEL_WMI_LOG_INFO_ByteReadCount_ID = 16,PARALLEL_WMI_LOG_INFO_ChannelNibbleReadCount_ID = 17,};
enum MACRO_PARENTAL {PARENTAL_CONTROL_CONTENT_RATING = 0x100,PARENTAL_CONTROL_ATTRIB_VIOLENCE = 0x200,PARENTAL_CONTROL_ATTRIB_LANGUAGE = 0x201,PARENTAL_CONTROL_ATTRIB_SEXUAL = 0x202,PARENTAL_CONTROL_ATTRIB_DIALOGUE = 0x203,PARENTAL_CONTROL_ATTRIB_FANTASY = 0x204,PARENTAL_CONTROL_VALUE_UNDEFINED = 0x0,};
enum MACRO_PCFILTER {PCFILTER_NODE = 4294967295,};
enum MACRO_PCI_ROOT {PCI_ROOT_BUS_OSC_METHOD_CAPABILITY_REVISION = 0x1,PCI_DATA_TAG = 0x20494350,PCI_DATA_VERSION = 0x1,PCI_EXPRESS_TPH_ST_LOCATION_NONE = 0x0,PCI_EXPRESS_TPH_ST_LOCATION_TPH_CAPABILITY = 0x1,PCI_EXPRESS_TPH_ST_LOCATION_MSIX_TABLE = 0x2,PCI_EXPRESS_TPH_ST_LOCATION_RESERVED = 0x3,PCI_BUS_INTERFACE_STANDARD_VERSION = 0x2,};
enum MACRO_PCMETHOD {PCMETHOD_ITEM_FLAG_NONE = 0,PCMETHOD_ITEM_FLAG_READ = 1,PCMETHOD_ITEM_FLAG_WRITE = 2,PCMETHOD_ITEM_FLAG_MODIFY = 3,PCMETHOD_ITEM_FLAG_SOURCE = 4,PCMETHOD_ITEM_FLAG_BASICSUPPORT = 512,};
enum MACRO_PCUPDATE {PCUPDATE_PIN_DESC_FLAG_DATARANGES = 0x1,};
enum MACRO_PFN_LIST {PFN_LIST_CORRUPT = 0x4E,};
enum MACRO_PLATFORM {PLATFORM_INTERRUPT_SOURCE = 8,};
enum MACRO_PLUGPLAY {PLUGPLAY_REGKEY_DEVICE = 1,PLUGPLAY_REGKEY_DRIVER = 2,PLUGPLAY_REGKEY_CURRENT_HWPROFILE = 4,};
enum MACRO_POLARITY {POLARITY_HIGH = 1,POLARITY_LOW = 3,POLARITY_CONFORMS_WITH_BUS = 0,};
enum MACRO_POSITIVE {POSITIVE_INFINITY_RATE = 0xFFFFFFFE,};
enum MACRO_PRIORITY {HIGH_PRIORITY = 31,MAXIMUM_PRIORITY = 32,};
enum MACRO_READABLE {READABLE_LOCAL_CLOCK = 0x1,};
enum MACRO_READ_LOG {READ_LOG_SECTORS_IN_LogAddress_ID = 1,READ_LOG_SECTORS_IN_SectorCount_ID = 2,READ_LOG_SECTORS_OUT_Length_ID = 3,READ_LOG_SECTORS_OUT_LogSectors_ID = 4,};
enum MACRO_READ_TOC {READ_TOC_FORMAT_TOC = 0x0,READ_TOC_FORMAT_SESSION = 0x1,READ_TOC_FORMAT_FULL_TOC = 0x2,READ_TOC_FORMAT_PMA = 0x3,READ_TOC_FORMAT_ATIP = 0x4,};
enum MACRO_REGISTRY {REGISTRY_ERROR = 0x51,};
enum MACRO_REG_NONE {REG_NONE = 0,REG_SZ = 1,REG_EXPAND_SZ = 2,REG_BINARY = 3,REG_DWORD = 4,REG_DWORD_LITTLE_ENDIAN = 4,REG_DWORD_BIG_ENDIAN = 5,REG_LINK = 6,REG_MULTI_SZ = 7,REG_RESOURCE_LIST = 8,REG_FULL_RESOURCE_DESCRIPTOR = 9,REG_RESOURCE_REQUIREMENTS_LIST = 10,REG_QWORD = 11,REG_QWORD_LITTLE_ENDIAN = 11,};
enum MACRO_RESOURCE {RESOURCE_NOT_OWNED = 0xE3,};
enum MACRO_RETRIEVE {RETRIEVE_DEVICE_UNIT_INFO = 0x0,RETRIEVE_LOCAL_UNIT_INFO = 0x1,};
enum MACRO_REVISION {MAX_ACL_REVISION = 4,SECURITY_DESCRIPTOR_REVISION = 1,};
enum MACRO_ROCKWELL {ROCKWELL_WA1_WAVEIN = 100,ROCKWELL_WA1_WAVEOUT = 101,ROCKWELL_WA1_SYNTH = 102,ROCKWELL_WA1_MIXER = 103,ROCKWELL_WA1_MPU401_IN = 104,ROCKWELL_WA1_MPU401_OUT = 105,ROCKWELL_WA2_WAVEIN = 200,ROCKWELL_WA2_WAVEOUT = 201,ROCKWELL_WA2_SYNTH = 202,ROCKWELL_WA2_MIXER = 203,ROCKWELL_WA2_MPU401_IN = 204,ROCKWELL_WA2_MPU401_OUT = 205,};
enum MACRO_RTC_WAKE {RTC_WAKE_VALID_FROM_S4_BIT = 16,RTC_WAKE_VALID_FROM_S4 = 65536,};
enum MACRO_SCSIMESS {SCSIMESS_ABORT = 0x6,SCSIMESS_ABORT_WITH_TAG = 0xD,SCSIMESS_BUS_DEVICE_RESET = 0xC,SCSIMESS_CLEAR_QUEUE = 0xE,SCSIMESS_COMMAND_COMPLETE = 0x0,SCSIMESS_DISCONNECT = 0x4,SCSIMESS_EXTENDED_MESSAGE = 0x1,SCSIMESS_IDENTIFY = 0x80,SCSIMESS_IDENTIFY_WITH_DISCON = 0xC0,SCSIMESS_IGNORE_WIDE_RESIDUE = 0x23,SCSIMESS_INITIATE_RECOVERY = 0xF,SCSIMESS_INIT_DETECTED_ERROR = 0x5,SCSIMESS_LINK_CMD_COMP = 0xA,SCSIMESS_LINK_CMD_COMP_W_FLAG = 0xB,SCSIMESS_MESS_PARITY_ERROR = 0x9,SCSIMESS_MESSAGE_REJECT = 0x7,SCSIMESS_NO_OPERATION = 0x8,SCSIMESS_HEAD_OF_QUEUE_TAG = 0x21,SCSIMESS_ORDERED_QUEUE_TAG = 0x22,SCSIMESS_SIMPLE_QUEUE_TAG = 0x20,SCSIMESS_RELEASE_RECOVERY = 0x10,SCSIMESS_RESTORE_POINTERS = 0x3,SCSIMESS_SAVE_DATA_POINTER = 0x2,SCSIMESS_TERMINATE_IO_PROCESS = 0x11,SCSIMESS_MODIFY_DATA_POINTER = 0x0,SCSIMESS_SYNCHRONOUS_DATA_REQ = 0x1,SCSIMESS_WIDE_DATA_REQUEST = 0x3,SCSIMESS_MODIFY_DATA_LENGTH = 0x5,SCSIMESS_SYNCH_DATA_LENGTH = 0x3,SCSIMESS_WIDE_DATA_LENGTH = 0x2,};
enum MACRO_SCSISTAT {SCSISTAT_GOOD = 0x0,SCSISTAT_CHECK_CONDITION = 0x2,SCSISTAT_CONDITION_MET = 0x4,SCSISTAT_BUSY = 0x8,SCSISTAT_INTERMEDIATE = 0x10,SCSISTAT_INTERMEDIATE_COND_MET = 0x14,SCSISTAT_RESERVATION_CONFLICT = 0x18,SCSISTAT_COMMAND_TERMINATED = 0x22,SCSISTAT_QUEUE_FULL = 0x28,};
enum MACRO_SECURITY {SECURITY_SYSTEM = 0x29,};
enum MACRO_SETBITON {SETBITON = 1,};
enum MACRO_SET_UNIT {SET_UNIT_INFO_DIAG_LEVEL = 0x1,SET_UNIT_INFO_ISOCH_PARAMS = 0x2,SET_CMP_ADDRESS_RANGE_TYPE = 0x3,};
enum MACRO_SET_USER {SET_USER_EVENT = 0x1,SET_DISPLAY_EVENT = 0x2,};
enum MACRO_SEVERITY {SEVERITY_SUCCESS = 0,SEVERITY_ERROR = 1,};
enum MACRO_SE_OWNER {SE_OWNER_DEFAULTED = 0x1,SE_GROUP_DEFAULTED = 0x2,SE_DACL_PRESENT = 0x4,SE_DACL_DEFAULTED = 0x8,SE_SACL_PRESENT = 0x10,SE_SACL_DEFAULTED = 0x20,SE_DACL_UNTRUSTED = 0x40,SE_SERVER_SECURITY = 0x80,SE_DACL_AUTO_INHERIT_REQ = 0x100,SE_SACL_AUTO_INHERIT_REQ = 0x200,SE_DACL_AUTO_INHERITED = 0x400,SE_SACL_AUTO_INHERITED = 0x800,SE_DACL_PROTECTED = 0x1000,SE_SACL_PROTECTED = 0x2000,SE_RM_CONTROL_VALID = 0x4000,SE_SELF_RELATIVE = 0x8000,};
enum MACRO_SMB_INFO {SMB_INFO_STANDARD = 1,SMB_INFO_QUERY_EA_SIZE = 2,SMB_INFO_SET_EAS = 2,SMB_INFO_QUERY_EAS_FROM_LIST = 3,SMB_INFO_QUERY_ALL_EAS = 4,SMB_INFO_QUERY_FULL_NAME = 5,SMB_INFO_IS_NAME_VALID = 6,SMB_INFO_PASSTHROUGH = 1000,SMB_QUERY_FILE_BASIC_INFO = 257,SMB_QUERY_FILE_STANDARD_INFO = 258,SMB_QUERY_FILE_EA_INFO = 259,SMB_QUERY_FILE_NAME_INFO = 260,SMB_QUERY_FILE_ALLOCATION_INFO = 261,SMB_QUERY_FILE_END_OF_FILEINFO = 262,SMB_QUERY_FILE_ALL_INFO = 263,SMB_QUERY_FILE_ALT_NAME_INFO = 264,SMB_QUERY_FILE_STREAM_INFO = 265,SMB_QUERY_FILE_COMPRESSION_INFO = 267,SMB_SET_FILE_BASIC_INFO = 257,SMB_SET_FILE_DISPOSITION_INFO = 258,SMB_SET_FILE_ALLOCATION_INFO = 259,SMB_SET_FILE_END_OF_FILE_INFO = 260,SMB_QUERY_FS_LABEL_INFO = 257,SMB_QUERY_FS_VOLUME_INFO = 258,SMB_QUERY_FS_SIZE_INFO = 259,SMB_QUERY_FS_DEVICE_INFO = 260,SMB_QUERY_FS_ATTRIBUTE_INFO = 261,SMB_QUERY_FS_QUOTA_INFO = 262,SMB_QUERY_FS_CONTROL_INFO = 263,SMB_INFO_ALLOCATION = 1,SMB_INFO_VOLUME = 2,SMB_NT_RENAME_MOVE_CLUSTER_INFO = 258,SMB_NT_RENAME_SET_LINK_INFO = 259,SMB_NT_RENAME_RENAME_FILE = 260,SMB_NT_RENAME_MOVE_FILE = 261,SMB_FIND_FILE_DIRECTORY_INFO = 257,SMB_FIND_FILE_FULL_DIRECTORY_INFO = 258,SMB_FIND_FILE_NAMES_INFO = 259,SMB_FIND_FILE_BOTH_DIRECTORY_INFO = 260,};
enum MACRO_SMB_OFUN {SMB_OFUN_OPEN_MASK = 0x3,SMB_OFUN_CREATE_MASK = 0x10,SMB_OFUN_OPEN_FAIL = 0x0,SMB_OFUN_OPEN_APPEND = 0x1,SMB_OFUN_OPEN_OPEN = 0x1,SMB_OFUN_OPEN_TRUNCATE = 0x2,SMB_OFUN_CREATE_FAIL = 0x0,SMB_OFUN_CREATE_CREATE = 0x10,SMB_DA_SHARE_MASK = 0x70,SMB_DA_ACCESS_MASK = 0x7,SMB_DA_FCB_MASK = 0xFF,SMB_DA_ACCESS_READ = 0x0,SMB_DA_ACCESS_WRITE = 0x1,SMB_DA_ACCESS_READ_WRITE = 0x2,SMB_DA_ACCESS_EXECUTE = 0x3,SMB_DA_SHARE_COMPATIBILITY = 0x0,SMB_DA_SHARE_EXCLUSIVE = 0x10,SMB_DA_SHARE_DENY_WRITE = 0x20,SMB_DA_SHARE_DENY_READ = 0x30,SMB_DA_SHARE_DENY_NONE = 0x40,SMB_DA_FCB = 0xFF,SMB_CACHE_NORMAL = 0x0,SMB_DO_NOT_CACHE = 0x1000,SMB_LR_UNKNOWN = 0x0,SMB_LR_SEQUENTIAL = 0x100,SMB_LR_RANDOM = 0x200,SMB_LR_RANDOM_WITH_LOCALITY = 0x300,SMB_LR_MASK = 0xF00,SMB_DA_WRITE_THROUGH = 0x4000,SMB_OACT_OPENED = 0x1,SMB_OACT_CREATED = 0x2,SMB_OACT_TRUNCATED = 0x3,SMB_OACT_OPLOCK = 0x8000,SMB_TARGET_IS_FILE = 0x1,SMB_TARGET_IS_DIRECTORY = 0x2,SMB_COPY_TARGET_ASCII = 0x4,SMB_COPY_SOURCE_ASCII = 0x8,SMB_COPY_TREE = 0x20,SMB_FILE_ATTRIBUTE_READONLY = 0x1,SMB_FILE_ATTRIBUTE_HIDDEN = 0x2,SMB_FILE_ATTRIBUTE_SYSTEM = 0x4,SMB_FILE_ATTRIBUTE_VOLUME = 0x8,SMB_FILE_ATTRIBUTE_DIRECTORY = 0x10,SMB_FILE_ATTRIBUTE_ARCHIVE = 0x20,SMB_ERR_SUCCESS = 0x0,SMB_ERR_CLASS_DOS = 0x1,SMB_ERR_BAD_FUNCTION = 0x1,SMB_ERR_BAD_FILE = 0x2,SMB_ERR_BAD_PATH = 0x3,SMB_ERR_NO_FIDS = 0x4,SMB_ERR_ACCESS_DENIED = 0x5,SMB_ERR_BAD_FID = 0x6,SMB_ERR_BAD_MCB = 0x7,SMB_ERR_INSUFFICIENT_MEMORY = 0x8,SMB_ERR_BAD_MEMORY = 0x9,SMB_ERR_BAD_ENVIRONMENT = 0xA,SMB_ERR_BAD_FORMAT = 0xB,SMB_ERR_BAD_ACCESS = 0xC,SMB_ERR_BAD_DATA = 0xD,SMB_ERR_RESERVED = 0xE,SMB_ERR_BAD_DRIVE = 0xF,SMB_ERR_CURRENT_DIRECTORY = 0x10,SMB_ERR_DIFFERENT_DEVICE = 0x11,SMB_ERR_NO_FILES = 0x12,SMB_ERR_BAD_SHARE = 0x20,SMB_ERR_LOCK = 0x21,SMB_ERR_FILE_EXISTS = 0x50,SMB_ERR_BAD_PIPE = 0xE6,SMB_ERR_PIPE_BUSY = 0xE7,SMB_ERR_PIPE_CLOSING = 0xE8,SMB_ERR_PIPE_NOT_CONNECTED = 0xE9,SMB_ERR_MORE_DATA = 0xEA,SMB_ERR_CLASS_SERVER = 0x2,SMB_ERR_ERROR = 0x1,SMB_ERR_BAD_PASSWORD = 0x2,SMB_ERR_BAD_TYPE = 0x3,SMB_ERR_ACCESS = 0x4,SMB_ERR_BAD_TID = 0x5,SMB_ERR_BAD_NET_NAME = 0x6,SMB_ERR_BAD_DEVICE = 0x7,SMB_ERR_QUEUE_FULL = 0x31,SMB_ERR_QUEUE_TOO_BIG = 0x32,SMB_ERR_QUEUE_EOF = 0x33,SMB_ERR_BAD_PRINT_FID = 0x34,SMB_ERR_BAD_SMB_COMMAND = 0x40,SMB_ERR_SERVER_ERROR = 0x41,SMB_ERR_FILE_SPECS = 0x43,SMB_ERR_RESERVED2 = 0x44,SMB_ERR_BAD_PERMITS = 0x45,SMB_ERR_RESERVED3 = 0x46,SMB_ERR_BAD_ATTRIBUTE_MODE = 0x47,SMB_ERR_SERVER_PAUSED = 0x51,SMB_ERR_MESSAGE_OFF = 0x52,SMB_ERR_NO_ROOM = 0x53,SMB_ERR_TOO_MANY_NAMES = 0x57,SMB_ERR_TIMEOUT = 0x58,SMB_ERR_NO_RESOURCE = 0x59,SMB_ERR_TOO_MANY_UIDS = 0x5A,SMB_ERR_BAD_UID = 0x5B,SMB_ERR_INVALID_NAME = 0x7B,SMB_ERR_INVALID_NAME_RANGE = 0xCE,SMB_ERR_USE_MPX = 0xFA,SMB_ERR_USE_STANDARD = 0xFB,SMB_ERR_CONTINUE_MPX = 0xFC,SMB_ERR_RESERVED4 = 0xFD,SMB_ERR_RESERVED5 = 0xFE,SMB_ERR_NO_SUPPORT_INTERNAL = 0xFF,SMB_ERR_NO_SUPPORT = 0xFFFF,SMB_ERR_CLASS_HARDWARE = 0x3,SMB_ERR_NO_WRITE = 0x13,SMB_ERR_BAD_UNIT = 0x14,SMB_ERR_DRIVE_NOT_READY = 0x15,SMB_ERR_BAD_COMMAND = 0x16,SMB_ERR_DATA = 0x17,SMB_ERR_BAD_REQUEST = 0x18,SMB_ERR_SEEK = 0x19,SMB_ERR_BAD_MEDIA = 0x1A,SMB_ERR_BAD_SECTOR = 0x1B,SMB_ERR_NO_PAPER = 0x1C,SMB_ERR_WRITE_FAULT = 0x1D,SMB_ERR_READ_FAULT = 0x1E,SMB_ERR_GENERAL = 0x1F,SMB_ERR_LOCK_CONFLICT = 0x21,SMB_ERR_WRONG_DISK = 0x22,SMB_ERR_FCB_UNAVAILABLE = 0x23,SMB_ERR_SHARE_BUFFER_EXCEEDED = 0x24,SMB_ERR_DISK_FULL = 0x27,SMB_ERR_CLASS_XOS = 0x4,SMB_ERR_CLASS_RMX1 = 0xE1,SMB_ERR_CLASS_RMX2 = 0xE2,SMB_ERR_CLASS_RMX3 = 0xE3,SMB_ERR_CLASS_COMMAND = 0xFF,};
enum MACRO_SMB_PIPE {SMB_PIPE_READMODE_BYTE = 0x0,SMB_PIPE_READMODE_MESSAGE = 0x100,SMB_PIPE_TYPE_BYTE = 0x0,SMB_PIPE_TYPE_MESSAGE = 0x400,SMB_PIPE_END_CLIENT = 0x0,SMB_PIPE_END_SERVER = 0x4000,SMB_PIPE_WAIT = 0x0,SMB_PIPE_NOWAIT = 0x8000,SMB_PIPE_UNLIMITED_INSTANCES = 0xFF,SMB_RENAME_REPLACE_IF_EXISTS = 0x1,};
enum MACRO_SPECIFIC {SPECIFIC_RIGHTS_ALL = 0xFFFF,};
enum MACRO_SRB_TYPE {SRB_TYPE_SCSI_REQUEST_BLOCK = 0,SRB_TYPE_STORAGE_REQUEST_BLOCK = 1,};
enum MACRO_STANDARD {STANDARD_RIGHTS_REQUIRED = 0xF0000,STANDARD_RIGHTS_READ = 0x20000,STANDARD_RIGHTS_WRITE = 0x20000,STANDARD_RIGHTS_EXECUTE = 0x20000,STANDARD_RIGHTS_ALL = 0x1F0000,};
enum MACRO_STOR_MAP {STOR_MAP_NO_BUFFERS = 0,STOR_MAP_ALL_BUFFERS = 1,STOR_MAP_NON_READ_WRITE_BUFFERS = 2,STOR_MAP_ALL_BUFFERS_INCLUDING_READ_WRITE = 3,};
enum MACRO_SYMBOLIC {SYMBOLIC_LINK_QUERY = 0x1,SYMBOLIC_LINK_ALL_ACCESS = 0xF0001,};
enum MACRO_SendLIRR {SendLIRR = 12,};
enum MACRO_SendRNID {SendRNID = 5,};
enum MACRO_TERMINAL {TERMINAL_SERVER_DRIVER_MADE_INCORRECT_MEMORY_REFERENCE = 0xCF,};
enum MACRO_TRANSMIT {TRANSMIT_FLAGS_PULSE_MODE = 0x1,TRANSMIT_FLAGS_DC_MODE = 0x2,};
enum MACRO_UNDEFINE {UNDEFINE_PRIMARY = 0xC,UNDEFINE_ALTERNATE = 0xD,};
enum MACRO_URB_OPEN {URB_OPEN_STATIC_STREAMS_VERSION_100 = 0x100,};
enum MACRO_USBD_ISO {USBD_ISO_START_FRAME_RANGE = 1024,USBD_STATUS_SUCCESS = 0,USBD_STATUS_PENDING = 1073741824,USBD_STATUS_CRC = -1073741823,USBD_STATUS_BTSTUFF = -1073741822,USBD_STATUS_DATA_TOGGLE_MISMATCH = -1073741821,USBD_STATUS_STALL_PID = -1073741820,USBD_STATUS_DEV_NOT_RESPONDING = -1073741819,USBD_STATUS_PID_CHECK_FAILURE = -1073741818,USBD_STATUS_UNEXPECTED_PID = -1073741817,USBD_STATUS_DATA_OVERRUN = -1073741816,USBD_STATUS_DATA_UNDERRUN = -1073741815,USBD_STATUS_RESERVED1 = -1073741814,USBD_STATUS_RESERVED2 = -1073741813,USBD_STATUS_BUFFER_OVERRUN = -1073741812,USBD_STATUS_BUFFER_UNDERRUN = -1073741811,USBD_STATUS_NOT_ACCESSED = -1073741809,USBD_STATUS_FIFO = -1073741808,USBD_STATUS_XACT_ERROR = -1073741807,USBD_STATUS_BABBLE_DETECTED = -1073741806,USBD_STATUS_DATA_BUFFER_ERROR = -1073741805,USBD_STATUS_NO_PING_RESPONSE = -1073741804,USBD_STATUS_INVALID_STREAM_TYPE = -1073741803,USBD_STATUS_INVALID_STREAM_ID = -1073741802,USBD_STATUS_ENDPOINT_HALTED = -1073741776,USBD_STATUS_INVALID_URB_FUNCTION = -2147483136,USBD_STATUS_INVALID_PARAMETER = -2147482880,USBD_STATUS_ERROR_BUSY = -2147482624,USBD_STATUS_INVALID_PIPE_HANDLE = -2147482112,USBD_STATUS_NO_BANDWIDTH = -2147481856,USBD_STATUS_INTERNAL_HC_ERROR = -2147481600,USBD_STATUS_ERROR_SHORT_TRANSFER = -2147481344,USBD_STATUS_BAD_START_FRAME = -1073739264,USBD_STATUS_ISOCH_REQUEST_FAILED = -1073739008,USBD_STATUS_FRAME_CONTROL_OWNED = -1073738752,USBD_STATUS_FRAME_CONTROL_NOT_OWNED = -1073738496,USBD_STATUS_NOT_SUPPORTED = -1073738240,USBD_STATUS_INAVLID_CONFIGURATION_DESCRIPTOR = -1073737984,USBD_STATUS_INVALID_CONFIGURATION_DESCRIPTOR = -1073737984,USBD_STATUS_INSUFFICIENT_RESOURCES = -1073737728,USBD_STATUS_SET_CONFIG_FAILED = -1073733632,USBD_STATUS_BUFFER_TOO_SMALL = -1073729536,USBD_STATUS_INTERFACE_NOT_FOUND = -1073725440,USBD_STATUS_INAVLID_PIPE_FLAGS = -1073721344,USBD_STATUS_TIMEOUT = -1073717248,USBD_STATUS_DEVICE_GONE = -1073713152,USBD_STATUS_STATUS_NOT_MAPPED = -1073709056,USBD_STATUS_HUB_INTERNAL_ERROR = -1073704960,USBD_STATUS_CANCELED = -1073676288,USBD_STATUS_ISO_NOT_ACCESSED_BY_HW = -1073610752,USBD_STATUS_ISO_TD_ERROR = -1073545216,USBD_STATUS_ISO_NA_LATE_USBPORT = -1073479680,USBD_STATUS_ISO_NOT_ACCESSED_LATE = -1073414144,USBD_STATUS_BAD_DESCRIPTOR = -1072693248,USBD_STATUS_BAD_DESCRIPTOR_BLEN = -1072693247,USBD_STATUS_BAD_DESCRIPTOR_TYPE = -1072693246,USBD_STATUS_BAD_INTERFACE_DESCRIPTOR = -1072693245,USBD_STATUS_BAD_ENDPOINT_DESCRIPTOR = -1072693244,USBD_STATUS_BAD_INTERFACE_ASSOC_DESCRIPTOR = -1072693243,USBD_STATUS_BAD_CONFIG_DESC_LENGTH = -1072693242,USBD_STATUS_BAD_NUMBER_OF_INTERFACES = -1072693241,USBD_STATUS_BAD_NUMBER_OF_ENDPOINTS = -1072693240,USBD_STATUS_BAD_ENDPOINT_ADDRESS = -1072693239,USBD_DEFAULT_MAXIMUM_TRANSFER_SIZE = -1,USBD_PF_CHANGE_MAX_PACKET = 1,USBD_PF_SHORT_PACKET_OPT = 2,USBD_PF_ENABLE_RT_THREAD_ACCESS = 4,USBD_PF_MAP_ADD_TRANSFERS = 8,USBD_PF_VALID_MASK = 15,};
enum MACRO_USB_IDLE {USB_IDLE_NOT_READY = 0,USB_IDLE_READY = 1,};
enum MACRO_USE_TIME {USE_TIME_STAMPS = 0x2,};
enum MACRO_VALID_CO {VALID_CO_FLAGS = 3,};
enum MACRO_VARIABLE {VARIABLE_ATTRIBUTE_NON_VOLATILE = 0x1,VARIABLE_INFORMATION_NAMES = 0x1,VARIABLE_INFORMATION_VALUES = 0x2,};
enum MACRO_VHD_BOOT {VHD_BOOT_HOST_VOLUME_NOT_ENOUGH_SPACE = 0x136,};
enum MACRO_VNETROOT {VNETROOT_FLAG_CSCAGENT_INSTANCE = 0x1,VNETROOT_FLAG_FINALIZE_INVOKED = 0x2,VNETROOT_FLAG_FORCED_FINALIZE = 0x4,VNETROOT_FLAG_NOT_FINALIZED = 0x8,};
enum MACRO_WATCHDOG {WATCHDOG_ENABLED = 0x1,WATCHDOG_STOPPED_IN_SLEEP_STATE = 0x80,WATCHDOG_ACTION_RELOAD = 0x1,WATCHDOG_ACTION_QUERY_REMAINING_COUNTDOWN_PERIOD = 0x4,WATCHDOG_ACTION_QUERY_COUNTDOWN_PERIOD = 0x5,WATCHDOG_ACTION_SET_COUNTDOWN_PERIOD = 0x6,WATCHDOG_ACTION_QUERY_RUNNING_STATE = 0x8,WATCHDOG_ACTION_SET_RUNNING_STATE = 0x9,WATCHDOG_ACTION_QUERY_STOPPED_STATE = 0xA,WATCHDOG_ACTION_SET_STOPPED_STATE = 0xB,WATCHDOG_ACTION_QUERY_REBOOT = 0x10,WATCHDOG_ACTION_SET_REBOOT = 0x11,WATCHDOG_ACTION_QUERY_SHUTDOWN = 0x12,WATCHDOG_ACTION_SET_SHUTDOWN = 0x13,WATCHDOG_ACTION_QUERY_BOOT_STATUS = 0x20,WATCHDOG_ACTION_SET_BOOT_STATUS = 0x21,WATCHDOG_INSTRUCTION_READ_VALUE = 0x0,WATCHDOG_INSTRUCTION_READ_COUNTDOWN = 0x1,WATCHDOG_INSTRUCTION_WRITE_VALUE = 0x2,WATCHDOG_INSTRUCTION_WRITE_COUNTDOWN = 0x3,WATCHDOG_INSTRUCTION_PRESERVE_REGISTER = 0x80,};
enum MACRO_WHEA_ETW {WHEA_ETW_PROVIDER_CHANNEL_systemChannel = 0x8,WHEA_CHANNEL = 0x10,WHEA_INIT_CHANNEL = 0x11,WHEA_ERROR_KEYWORD = 0x800,};
enum MACRO_WHEA_SQM {WHEA_SQM_EVENT_START_SESSION_value = 0x20,WHEA_SQM_EVENT_END_SESSION_value = 0x21,WHEA_SQM_EVENT_SETDWORD_value = 0x22,WHEA_SQM_EVENT_INCREMENTDWORD_value = 0x23,WHEA_SQM_EVENT_ADDTOAVERAGEDWORD_value = 0x24,WHEA_SQM_EVENT_SETIFMAXDWORD_value = 0x25,WHEA_SQM_EVENT_SETIFMINDWORD_value = 0x26,WHEA_SQM_EVENT_SETSTRING_value = 0x27,WHEA_SQM_EVENT_ADDTOSTREAM_value = 0x28,};
enum MACRO_WINCODEC {WINCODEC_ERR_WRONGSTATE = 0x88982F04,WINCODEC_ERR_VALUEOUTOFRANGE = 0x88982F05,WINCODEC_ERR_UNKNOWNIMAGEFORMAT = 0x88982F07,WINCODEC_ERR_UNSUPPORTEDVERSION = 0x88982F0B,WINCODEC_ERR_NOTINITIALIZED = 0x88982F0C,WINCODEC_ERR_ALREADYLOCKED = 0x88982F0D,WINCODEC_ERR_PROPERTYNOTFOUND = 0x88982F40,WINCODEC_ERR_PROPERTYNOTSUPPORTED = 0x88982F41,WINCODEC_ERR_PROPERTYSIZE = 0x88982F42,WINCODEC_ERR_CODECPRESENT = 0x88982F43,WINCODEC_ERR_CODECNOTHUMBNAIL = 0x88982F44,WINCODEC_ERR_PALETTEUNAVAILABLE = 0x88982F45,WINCODEC_ERR_CODECTOOMANYSCANLINES = 0x88982F46,WINCODEC_ERR_INTERNALERROR = 0x88982F48,WINCODEC_ERR_SOURCERECTDOESNOTMATCHDIMENSIONS = 0x88982F49,WINCODEC_ERR_COMPONENTNOTFOUND = 0x88982F50,WINCODEC_ERR_IMAGESIZEOUTOFRANGE = 0x88982F51,WINCODEC_ERR_TOOMUCHMETADATA = 0x88982F52,WINCODEC_ERR_BADIMAGE = 0x88982F60,WINCODEC_ERR_BADHEADER = 0x88982F61,WINCODEC_ERR_FRAMEMISSING = 0x88982F62,WINCODEC_ERR_BADMETADATAHEADER = 0x88982F63,WINCODEC_ERR_BADSTREAMDATA = 0x88982F70,WINCODEC_ERR_STREAMWRITE = 0x88982F71,WINCODEC_ERR_STREAMREAD = 0x88982F72,WINCODEC_ERR_STREAMNOTAVAILABLE = 0x88982F73,WINCODEC_ERR_UNSUPPORTEDPIXELFORMAT = 0x88982F80,WINCODEC_ERR_UNSUPPORTEDOPERATION = 0x88982F81,WINCODEC_ERR_INVALIDREGISTRATION = 0x88982F8A,WINCODEC_ERR_COMPONENTINITIALIZEFAILURE = 0x88982F8B,WINCODEC_ERR_INSUFFICIENTBUFFER = 0x88982F8C,WINCODEC_ERR_DUPLICATEMETADATAPRESENT = 0x88982F8D,WINCODEC_ERR_PROPERTYUNEXPECTEDTYPE = 0x88982F8E,WINCODEC_ERR_UNEXPECTEDSIZE = 0x88982F8F,WINCODEC_ERR_INVALIDQUERYREQUEST = 0x88982F90,WINCODEC_ERR_UNEXPECTEDMETADATATYPE = 0x88982F91,WINCODEC_ERR_REQUESTONLYVALIDATMETADATAROOT = 0x88982F92,WINCODEC_ERR_INVALIDQUERYCHARACTER = 0x88982F93,WINCODEC_ERR_WIN32ERROR = 0x88982F94,WINCODEC_ERR_INVALIDPROGRESSIVELEVEL = 0x88982F95,};
enum MACRO_WINLOGON {WINLOGON_LOCK_ON_SLEEP = 0x1,};
enum MACRO_WMAUDIO2 {WMAUDIO2_BITS_PER_SAMPLE = 16,WMAUDIO2_MAX_CHANNELS = 2,};
enum MACRO_WSK_FLAG {WSK_FLAG_AT_DISPATCH_LEVEL = 0x8,WSK_FLAG_RELEASE_ASAP = 0x2,WSK_FLAG_ENTIRE_MESSAGE = 0x4,WSK_FLAG_ABORTIVE = 0x1,WSK_FLAG_BASIC_SOCKET = 0x0,WSK_FLAG_LISTEN_SOCKET = 0x1,WSK_FLAG_CONNECTION_SOCKET = 0x2,WSK_FLAG_DATAGRAM_SOCKET = 0x4,WSK_TRANSPORT_LIST_QUERY = 0x2,WSK_TRANSPORT_LIST_CHANGE = 0x3,WSK_CACHE_SD = 0x4,WSK_RELEASE_SD = 0x5,WSK_TDI_DEVICENAME_MAPPING = 0x6,WSK_SET_STATIC_EVENT_CALLBACKS = 0x7,WSK_TDI_BEHAVIOR = 0x8,WSK_TDI_BEHAVIOR_BYPASS_TDI = 0x1,};
enum MACRO__FPCLASS {_FPCLASS_SNAN = 0x1,_FPCLASS_QNAN = 0x2,_FPCLASS_NINF = 0x4,_FPCLASS_NN = 0x8,_FPCLASS_ND = 0x10,_FPCLASS_NZ = 0x20,_FPCLASS_PZ = 0x40,_FPCLASS_PD = 0x80,_FPCLASS_PN = 0x100,_FPCLASS_PINF = 0x200,};
enum MACRO__HEAPEND {_HEAPEND = -5,};
enum MACRO__MAX_ENV {_MAX_ENV = 32767,};
enum MACRO__NSTREAM {_NSTREAM_ = 512,};
enum MACRO__STRSAFE {_STRSAFE_USE_SECURE_CRT = 0,};
typedef struct _MAPPED_ADDRESS MAPPED_ADDRESS;
typedef struct _MF_DEVICE_INFO MF_DEVICE_INFO;
typedef struct _BA878B11B82B24305DD851662AD4DC24 MOVE_FILE_DATA;
typedef struct _MPIO_DISK_INFO MPIO_DISK_INFO;
typedef struct _MRX_NAME_CACHE_ MRX_NAME_CACHE;
typedef struct _MRX_V_NET_ROOT_ MRX_V_NET_ROOT;
typedef struct _MSFC_LinkEvent MSFC_LinkEvent;
typedef struct _MSFC_PortEvent MSFC_PortEvent;
typedef struct _MSV1_0_AV_PAIR MSV1_0_AV_PAIR;
enum ModulationType {BDA_MOD_NOT_SET = 0xFFFFFFFF,BDA_MOD_NOT_DEFINED = 0x0,BDA_MOD_16QAM = 0x1,BDA_MOD_32QAM = 0x2,BDA_MOD_64QAM = 0x3,BDA_MOD_80QAM = 0x4,BDA_MOD_96QAM = 0x5,BDA_MOD_112QAM = 0x6,BDA_MOD_128QAM = 0x7,BDA_MOD_160QAM = 0x8,BDA_MOD_192QAM = 0x9,BDA_MOD_224QAM = 0xA,BDA_MOD_256QAM = 0xB,BDA_MOD_320QAM = 0xC,BDA_MOD_384QAM = 0xD,BDA_MOD_448QAM = 0xE,BDA_MOD_512QAM = 0xF,BDA_MOD_640QAM = 0x10,BDA_MOD_768QAM = 0x11,BDA_MOD_896QAM = 0x12,BDA_MOD_1024QAM = 0x13,BDA_MOD_QPSK = 0x14,BDA_MOD_BPSK = 0x15,BDA_MOD_OQPSK = 0x16,BDA_MOD_8VSB = 0x17,BDA_MOD_16VSB = 0x18,BDA_MOD_ANALOG_AMPLITUDE = 0x19,BDA_MOD_ANALOG_FREQUENCY = 0x1A,BDA_MOD_8PSK = 0x1B,BDA_MOD_RF = 0x1C,BDA_MOD_16APSK = 0x1D,BDA_MOD_32APSK = 0x1E,BDA_MOD_NBC_QPSK = 0x1F,BDA_MOD_NBC_8PSK = 0x20,BDA_MOD_DIRECTV = 0x21,BDA_MOD_ISDB_T_TMCC = 0x22,BDA_MOD_ISDB_S_TMCC = 0x23,BDA_MOD_MAX = 0x24,};
typedef struct _NDIS_DMA_BLOCK NDIS_DMA_BLOCK;
typedef struct _NDIS_SPIN_LOCK NDIS_SPIN_LOCK;
typedef struct _NDIS_TAPI_DIAL NDIS_TAPI_DIAL;
typedef struct _NDIS_TAPI_DROP NDIS_TAPI_DROP;
typedef struct _NDIS_TAPI_OPEN NDIS_TAPI_OPEN;
typedef struct _NDIS_WORK_ITEM NDIS_WORK_ITEM;
typedef char *NTSTRSAFE_PSTR;
typedef struct _OSVERSIONINFOA OSVERSIONINFOA;
typedef struct _OSVERSIONINFOW OSVERSIONINFOW;
typedef struct _ADDRESS_RANGE *PADDRESS_RANGE;
typedef struct _AVC_PIN_COUNT *PAVC_PIN_COUNT;
typedef struct _AVC_UNIQUE_ID *PAVC_UNIQUE_ID;
typedef struct _AddTarget_OUT *PAddTarget_OUT;
typedef struct _BANK_POSITION *PBANK_POSITION;
typedef struct _BDA_PID_UNMAP *PBDA_PID_UNMAP;
typedef struct _CC_FILE_SIZES *PCC_FILE_SIZES;
typedef struct _CDVD_KEY_DATA *PCDVD_KEY_DATA;
typedef struct _CLOSE_CONTEXT *PCLOSE_CONTEXT;
typedef struct _CLUSTER_RANGE *PCLUSTER_RANGE;
typedef struct CM_Power_Data_s *PCM_POWER_DATA;
typedef struct _CSV_MGMT_LOCK *PCSV_MGMT_LOCK;
typedef struct _DEVICE_OBJECT *PDEVICE_OBJECT;
typedef struct _DISK_GEOMETRY *PDISK_GEOMETRY;
typedef union _DMAR_GCMD_REG *PDMAR_GCMD_REG;
typedef union _DMAR_GSTS_REG *PDMAR_GSTS_REG;
typedef struct _DOT11_WPA_TSC *PDOT11_WPA_TSC;
typedef struct _DOT4_ACTIVITY *PDOT4_ACTIVITY;
typedef struct _DRIVER_OBJECT *PDRIVER_OBJECT;
typedef struct _DSM_INIT_DATA *PDSM_INIT_DATA;
typedef struct _DUMP_POINTERS *PDUMP_POINTERS;
typedef struct _FILE_PREFETCH *PFILE_PREFETCH;
typedef struct _GET_UNIT_INFO *PGET_UNIT_INFO;
typedef struct _HAL_CALLBACKS *PHAL_CALLBACKS;
typedef struct HBA_EventInfo *PHBA_EVENTINFO;
typedef struct HBA_ipaddress *PHBA_IPADDRESS;
typedef struct _I2C_CALLBACKS *PI2C_CALLBACKS;
typedef struct _I2C_FNC_TABLE *PI2C_FNC_TABLE;
typedef struct _IDE_LBA_RANGE *PIDE_LBA_RANGE;
typedef struct _IDE_TASK_FILE *PIDE_TASK_FILE;
typedef struct _IMAGE_INFO_EX *PIMAGE_INFO_EX;
typedef IInterruptSync *PINTERRUPTSYNC;
typedef struct in_pktinfo_ex *PIN_PKTINFO_EX;
typedef struct _ISCSI_LUNList *PISCSI_LUNList;
typedef struct _KDEVICE_QUEUE *PKDEVICE_QUEUE;
typedef struct _E4F7CAB5B6B7D45C514D7552CCE8FB09 *PKSAC3_DOWNMIX;
typedef struct _58C2A16435EA044F8AD69979A6836AA4 *PKSBUFFER_ITEM;
typedef struct _91BD25BE856B91F4F94C146E39BAA29E *PKSCOMPONENTID;
typedef struct _KSEVENT_ENTRY *PKSEVENT_ENTRY;
typedef struct _DE8F492EE455543594962797C1392B09 *PKSMETHOD_ITEM;
typedef struct _DE2D2125000B90024B7DD637FE0DF34E *PKSMUSICFORMAT;
typedef struct _3E8BFD172CC0232DA5E7071EC2A0A89F *PKSNODE_CREATE;
typedef struct _58C2C1BF6568EE28BD9B872E6BA03976 *PKSPIN_CONNECT;
typedef struct _9D2EE2D5E082F56CCDE737471FBF8D82 *PKSQUERYBUFFER;
typedef struct _5B98A3A85E20DBA203FE93F0C6DC9B6B *PKSVPSIZE_PROP;
typedef struct _2E8FF8F0F30DAB89972BBD12E0BA3A8E *PKSWAVE_BUFFER;
typedef struct _436EEAB87169589F8FF54A3E6B966B58 *PKSWAVE_VOLUME;
typedef struct tagKS_FRAME_INFO *PKS_FRAME_INFO;
typedef struct _LINE_DEV_CAPS *PLINE_DEV_CAPS;
typedef struct _LINKED_DEVICE *PLINKED_DEVICE;
typedef struct _LOCK_STATE_EX *PLOCK_STATE_EX;
typedef struct _LOG_PARAMETER *PLOG_PARAMETER;
typedef struct _LOWIO_CONTEXT *PLOWIO_CONTEXT;
typedef struct _MCA_EXCEPTION *PMCA_EXCEPTION;
typedef struct _MCD_INIT_DATA *PMCD_INIT_DATA;
typedef struct _MEMORY_REGION *PMEMORY_REGION;
typedef struct _MODE_CAP_PAGE *PMODE_CAP_PAGE;
typedef struct _MODE_MRW_PAGE *PMODE_MRW_PAGE;
typedef struct _MOUNTDEV_NAME *PMOUNTDEV_NAME;
typedef struct _MPIO_DSM_Path *PMPIO_DSM_Path;
typedef struct _MSWmi_MofData *PMSWmi_MofData;
typedef struct _NDIS_WAN_INFO *PNDIS_WAN_INFO;
typedef struct nd_opt_hdr *PND_OPTION_HDR;
typedef struct nd_opt_mtu *PND_OPTION_MTU;
typedef struct _NET_PNP_EVENT *PNET_PNP_EVENT;
typedef struct _NON_PAGED_FCB *PNON_PAGED_FCB;
typedef unsigned int POINTER_64_INT;
typedef struct _OUTPUT_PACKET *POUTPUT_PACKET;
typedef struct _POWER_SEQUENCE POWER_SEQUENCE;
typedef struct _PCI_PMCSR_BSE *PPCI_PMCSR_BSE;
typedef struct _9DABE2D50638D6782800B54C16FE3B63 *PPCMETHOD_ITEM;
typedef struct _PRIVILEGE_SET *PPRIVILEGE_SET;
typedef struct _Q2931_ADD_PVC *PQ2931_ADD_PVC;
typedef struct __RAW_READ_INFO *PRAW_READ_INFO;
typedef struct _RDBSS_EXPORTS *PRDBSS_EXPORTS;
typedef struct _REASON_BUFFER *PREASON_BUFFER;
typedef struct _REPINNED_BCBS *PREPINNED_BCBS;
typedef struct _KTRANSACTION *PRKTRANSACTION;
typedef struct _PROCLOCALSAPIC PROCLOCALSAPIC;
typedef struct _RX_DISPATCHER_ *PRX_DISPATCHER;
typedef struct _RX_WORK_QUEUE_ *PRX_WORK_QUEUE;
typedef struct _RemovePort_IN *PRemovePort_IN;
typedef struct _SCSI_BUS_DATA *PSCSI_BUS_DATA;
typedef union _SDP_NODE_DATA *PSDP_NODE_DATA;
typedef union _SENSE_DATA_EX *PSENSE_DATA_EX;
typedef struct _SET_UNIT_INFO *PSET_UNIT_INFO;
typedef struct _SE_ADT_CLAIMS *PSE_ADT_CLAIMS;
typedef struct _SE_AUDIT_INFO *PSE_AUDIT_INFO;
typedef struct SMHBA_Binding *PSMHBA_BINDING;
typedef struct SMHBA_FC_Port *PSMHBA_FC_PORT;
typedef struct SMHBA_PORTLUN *PSMHBA_PORTLUN;
typedef struct SMHBA_SAS_Phy *PSMHBA_SAS_PHY;
typedef union _SOCKADDR_INET *PSOCKADDR_INET;
typedef struct _SecBufferDesc *PSecBufferDesc;
typedef struct _SendRNIDV2_IN *PSendRNIDV2_IN;
typedef struct _TA_ADDRESS_IP *PTA_IP_ADDRESS;
typedef struct _TA_ADDRESS_NS *PTA_NS_ADDRESS;
typedef struct _TOKEN_CONTROL *PTOKEN_CONTROL;
typedef struct _TUPLE_REQUEST *PTUPLE_REQUEST;
typedef struct _USB_PORT_PATH *PUSB_PORT_PATH;
typedef struct _34AF5E86DC3341832991CC8A37B0F3B6 *PUSN_RECORD_V2;
typedef struct _00F974B505468747ECE960C8A578057F *PUSN_RECORD_V3;
typedef union _WHEA_REVISION *PWHEA_REVISION;
typedef struct _WSK_TRANSPORT *PWSK_TRANSPORT;
typedef struct _WWAN_PIN_DESC *PWWAN_PIN_DESC;
typedef struct _WWAN_PIN_INFO *PWWAN_PIN_INFO;
typedef struct _WWAN_PIN_LIST *PWWAN_PIN_LIST;
typedef struct _WWAN_PROVIDER *PWWAN_PROVIDER;
typedef struct _WWAN_SMS_READ *PWWAN_SMS_READ;
typedef struct _WWAN_SMS_SEND *PWWAN_SMS_SEND;
typedef union _XPF_MCE_FLAGS *PXPF_MCE_FLAGS;
typedef struct _EC8EE2E9AF7D4EC32726A7FD632A186D QOS_OBJECT_HDR;
typedef struct _RESP_NT_CANCEL RESP_NT_CANCEL;
typedef struct _RTL_BITMAP_RUN RTL_BITMAP_RUN;
typedef struct _RXCE_SIGNATURE_ RXCE_SIGNATURE;
typedef struct _RXCE_TRANSPORT_ RXCE_TRANSPORT;
typedef struct _RemoveLink_OUT RemoveLink_OUT;
typedef struct _RemovePort_OUT RemovePort_OUT;
typedef struct _SD_SOCKET_DATA SD_SOCKET_DATA;
typedef struct _SET_FCP_NOTIFY SET_FCP_NOTIFY;
typedef struct _SMARTBATTTABLE SMARTBATTTABLE;
typedef struct SMHBA_SAS_Port SMHBA_SAS_PORT;
typedef struct _SOCKET_ADDRESS SOCKET_ADDRESS;
typedef struct _SRBEX_DATA_PNP SRBEX_DATA_PNP;
typedef struct _SRBEX_DATA_WMI SRBEX_DATA_WMI;
typedef struct _SRB_IO_CONTROL SRB_IO_CONTROL;
typedef struct _STOR_ADDR_BTL8 STOR_ADDR_BTL8;
typedef  char *STRSAFE_PCNZCH;
typedef struct _ScsiInquiry_IN ScsiInquiry_IN;
typedef struct _SendRNIDV2_OUT SendRNIDV2_OUT;
typedef struct _SendTargets_IN SendTargets_IN;
typedef struct _T1_BLOCK_FRAME T1_BLOCK_FRAME;
typedef struct _TAPE_INIT_DATA TAPE_INIT_DATA;
typedef struct _TA_ADDRESS_IP6 TA_IP6_ADDRESS;
typedef struct _TA_ADDRESS_IPX TA_IPX_ADDRESS;
typedef struct _TA_ADDRESS_VNS TA_VNS_ADDRESS;
typedef struct _TDI_ADDRESS_IP TDI_ADDRESS_IP;
typedef struct _TDI_ADDRESS_NS TDI_ADDRESS_NS;
typedef struct _TDI_CMSGHDR_XP TDI_CMSGHDR_XP;
typedef struct _TXFS_MODIFY_RM TXFS_MODIFY_RM;
typedef union _ULARGE_INTEGER ULARGE_INTEGER;
typedef struct _UNICODE_STRING UNICODE_STRING;
typedef struct _USAGE_AND_PAGE USAGE_AND_PAGE;
struct USBDI_HANDLE__ {int unused;};
typedef union _USB_HUB_CHANGE USB_HUB_CHANGE;
typedef union _USB_HUB_STATUS USB_HUB_STATUS;
typedef struct _VIDEO_CLUTDATA VIDEO_CLUTDATA;
typedef struct _VM_COUNTERS_EX VM_COUNTERS_EX;
typedef struct _VOLUME_CONTROL VOLUME_CONTROL;
typedef union _WHEA_TIMESTAMP WHEA_TIMESTAMP;
typedef struct _WMIGUIDREGINFO WMIGUIDREGINFO;
typedef struct _WMILIB_CONTEXT WMILIB_CONTEXT;
typedef struct tagWNODE_ALL_DATA WNODE_ALL_DATA;
typedef struct _WSK_CLIENT_NPI WSK_CLIENT_NPI;
typedef struct _WSK_INSPECT_ID WSK_INSPECT_ID;
typedef struct _WWAN_PROVIDER2 WWAN_PROVIDER2;
typedef struct _XSTATE_CONTEXT XSTATE_CONTEXT;
typedef struct _XSTATE_FEATURE XSTATE_FEATURE;
typedef struct _XVARIABLE_NAME XVARIABLE_NAME;
enum _BUS_DATA_TYPE {ConfigurationSpaceUndefined = 0xFFFFFFFF,Cmos = 0x0,EisaConfiguration = 0x1,Pos = 0x2,CbusConfiguration = 0x3,PCIConfiguration = 0x4,VMEConfiguration = 0x5,NuBusConfiguration = 0x6,PCMCIAConfiguration = 0x7,MPIConfiguration = 0x8,MPSAConfiguration = 0x9,PNPISAConfiguration = 0xA,SgiInternalConfiguration = 0xB,MaximumBusDataType = 0xC,};
enum _BdaSignalType {Bda_SignalType_Unknown = 0x0,Bda_SignalType_Analog = 0x1,Bda_SignalType_Digital = 0x2,};
enum _FCB_CONDITION {FcbGood = 0x1,FcbBad = 0x2,FcbNeedsToBeVerified = 0x3,};
typedef struct _271E49C86C8EFA0B647D87A58CF03284 _FPIEEE_RECORD;
enum _HW_DMA_RETURN {DmaAsyncReturn = 0x0,DmaSyncReturn = 0x1,};
struct _IDE_LBA_RANGE {unsigned long long StartSector : 48;unsigned long long SectorCount : 16;};
enum _IO_CAPABILITY {IoCaps_DisplayOnly = 0x0,IoCaps_DisplayYesNo = 0x1,IoCaps_KeyboardOnly = 0x2,IoCaps_NoInputNoOutput = 0x3,IoCaps_Undefined = 0xFF,};
enum _LLDP_MIB_TYPE {LldpLocalMib = 0x1,LldpRemoteMib = 0x2,};
enum _NDIS_CLASS_ID {NdisClass802_3Priority = 0x0,NdisClassWirelessWanMbxMailbox = 0x1,NdisClassIrdaPacketInfo = 0x2,NdisClassAtmAALInfo = 0x3,};
struct _PCI_PMCSR_BSE {unsigned char Rsvd1 : 6;unsigned char D3HotSupportsStopClock : 1;unsigned char BusPowerClockControlEnabled : 1;};
struct _RTC_framedesc {int varCount;_RTC_vardesc *variables;};
enum _SCO_LINK_TYPE {ScoLinkType = 0x0,eScoLinkType = 0x2,};
enum _SRBEXDATATYPE {SrbExDataTypeUnknown = 0x0,SrbExDataTypeBidirectional = 0x1,SrbExDataTypeScsiCdb16 = 0x40,SrbExDataTypeScsiCdb32 = 0x41,SrbExDataTypeScsiCdbVar = 0x42,SrbExDataTypeWmi = 0x60,SrbExDataTypePower = 0x61,SrbExDataTypePnP = 0x62,SrbExDataTypeIoInfo = 0x80,SrbExDataTypeMSReservedStart = 0xF0000000,SrbExDataTypeReserved = 0xFFFFFFFF,};
enum _STOR_SPINLOCK {DpcLock = 0x1,StartIoLock = 0x2,InterruptLock = 0x3,};
enum _WRITE_THROUGH {WriteThroughUnknown = 0x0,WriteThroughNotSupported = 0x1,WriteThroughSupported = 0x2,};
enum _WWAN_PIN_MODE {WwanPinModeNotSupported = 0x0,WwanPinModeEnabled = 0x1,WwanPinModeDisabled = 0x2,WwanPinModeMax = 0x3,};
enum _WWAN_PIN_TYPE {WwanPinTypeNone = 0x0,WwanPinTypeCustom = 0x1,WwanPinTypePin1 = 0x2,WwanPinTypePin2 = 0x3,WwanPinTypeDeviceSimPin = 0x4,WwanPinTypeDeviceFirstSimPin = 0x5,WwanPinTypeNetworkPin = 0x6,WwanPinTypeNetworkSubsetPin = 0x7,WwanPinTypeSvcProviderPin = 0x8,WwanPinTypeCorporatePin = 0x9,WwanPinTypeSubsidyLock = 0xA,WwanPinTypePuk1 = 0xB,WwanPinTypePuk2 = 0xC,WwanPinTypeDeviceFirstSimPuk = 0xD,WwanPinTypeNetworkPuk = 0xE,WwanPinTypeNetworkSubsetPuk = 0xF,WwanPinTypeSvcProviderPuk = 0x10,WwanPinTypeCorporatePuk = 0x11,WwanPinTypeMax = 0x12,};
enum _WWAN_SMS_FLAG {WwanSmsFlagAll = 0x0,WwanSmsFlagIndex = 0x1,WwanSmsFlagNew = 0x2,WwanSmsFlagOld = 0x3,WwanSmsFlagSent = 0x4,WwanSmsFlagDraft = 0x5,WwanSmsFlagMax = 0x6,};
struct __lc_time_data;
typedef unsigned int error_status_t;
typedef void (*pHalHaltSystem)(void);
typedef struct threadlocaleinfostruct *pthreadlocinfo;
typedef struct threadmbcinfostruct *pthreadmbcinfo;
typedef struct _ADDRESS_RANGE ADDRESS_RANGE;
typedef struct _AVC_PIN_COUNT AVC_PIN_COUNT;
typedef struct _AVC_UNIQUE_ID AVC_UNIQUE_ID;
typedef struct _AddTarget_OUT AddTarget_OUT;
typedef struct _BANK_POSITION BANK_POSITION;
enum BDA_Frequency {BDA_FREQUENCY_NOT_SET = 0xFFFFFFFF,BDA_FREQUENCY_NOT_DEFINED = 0x0,};
typedef struct _BDA_GDDS_DATA BDA_GDDS_DATA;
typedef struct _BDA_PID_UNMAP BDA_PID_UNMAP;
typedef struct _CC_FILE_SIZES CC_FILE_SIZES;
typedef struct _CDVD_KEY_DATA CDVD_KEY_DATA;
typedef struct _CLUSTER_RANGE CLUSTER_RANGE;
typedef struct CM_Power_Data_s CM_POWER_DATA;
typedef struct _CSV_MGMT_LOCK CSV_MGMT_LOCK;
typedef struct _DDPIXELFORMAT DDPIXELFORMAT;
typedef struct _DEVICE_OBJECT DEVICE_OBJECT;
typedef struct _DISK_GEOMETRY DISK_GEOMETRY;
typedef union _DMAR_GCMD_REG DMAR_GCMD_REG;
typedef union _DMAR_GSTS_REG DMAR_GSTS_REG;
enum DOT11_DS_INFO {DOT11_DS_CHANGED = 0x0,DOT11_DS_UNCHANGED = 0x1,DOT11_DS_UNKNOWN = 0x2,};
typedef struct _DOT11_WPA_TSC DOT11_WPA_TSC;
typedef struct _DOT4_ACTIVITY DOT4_ACTIVITY;
typedef void DRIVER_CANCEL(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);
typedef struct _DRIVER_OBJECT DRIVER_OBJECT;
typedef void DRIVER_UNLOAD(struct _DRIVER_OBJECT *DriverObject);
typedef struct drmwaveformat_tag DRMWAVEFORMAT;
typedef struct _DSM_INIT_DATA DSM_INIT_DATA;
typedef struct _DUMP_POINTERS DUMP_POINTERS;
enum DVBSystemType {DVB_Cable = 0x0,DVB_Terrestrial = 0x1,DVB_Satellite = 0x2,ISDB_Terrestrial = 0x3,ISDB_Satellite = 0x4,};
typedef struct _DXGKARG_PATCH DXGKARG_PATCH;
typedef struct _DXGK_FLIPCAPS DXGK_FLIPCAPS;
typedef struct _FILE_PREFETCH FILE_PREFETCH;
typedef struct _GET_UNIT_INFO GET_UNIT_INFO;
typedef struct _2BE75473CF3D1F712ED4D05E7A3C1140 GPIOINTERFACE;
enum GuardInterval {BDA_GUARD_NOT_SET = 0xFFFFFFFF,BDA_GUARD_NOT_DEFINED = 0x0,BDA_GUARD_1_32 = 0x1,BDA_GUARD_1_16 = 0x2,BDA_GUARD_1_8 = 0x3,BDA_GUARD_1_4 = 0x4,BDA_GUARD_1_128 = 0x5,BDA_GUARD_19_128 = 0x6,BDA_GUARD_19_256 = 0x7,BDA_GUARD_MAX = 0x8,};
typedef struct _HAL_CALLBACKS HAL_CALLBACKS;
typedef struct HBA_EventInfo HBA_EVENTINFO;
typedef struct HBA_ipaddress HBA_IPADDRESS;
struct HCOLORSPACE__ {int unused;};
typedef struct heaacwaveinfo_tag HEAACWAVEINFO;
typedef struct HWINEVENTHOOK__ *HWINEVENTHOOK;
typedef struct _I2C_CALLBACKS I2C_CALLBACKS;
typedef struct _I2C_FNC_TABLE I2C_FNC_TABLE;
typedef struct _IDE_LBA_RANGE IDE_LBA_RANGE;
typedef struct _IDE_TASK_FILE IDE_TASK_FILE;
typedef struct _IMAGE_INFO_EX IMAGE_INFO_EX;
struct IMiniportMidi {struct IMiniportMidiVtbl *lpVtbl;};
typedef struct in_pktinfo_ex IN_PKTINFO_EX;
typedef IP6RouteEntry_V1 IP6RouteEntry;
struct IPortClsPower {struct IPortClsPowerVtbl *lpVtbl;};
struct IPortTopology {struct IPortTopologyVtbl *lpVtbl;};
struct IResourceList {struct IResourceListVtbl *lpVtbl;};
typedef struct _ISCSI_LUNList ISCSI_LUNList;
struct IServiceGroup {struct IServiceGroupVtbl *lpVtbl;};
typedef struct _KDEVICE_QUEUE KDEVICE_QUEUE;
typedef struct _E4F7CAB5B6B7D45C514D7552CCE8FB09 KSAC3_DOWNMIX;
typedef struct _58C2A16435EA044F8AD69979A6836AA4 KSBUFFER_ITEM;
typedef struct _91BD25BE856B91F4F94C146E39BAA29E KSCOMPONENTID;
typedef struct _KSEVENT_ENTRY KSEVENT_ENTRY;
typedef struct _DE8F492EE455543594962797C1392B09 KSMETHOD_ITEM;
typedef struct _DE2D2125000B90024B7DD637FE0DF34E KSMUSICFORMAT;
typedef struct _3E8BFD172CC0232DA5E7071EC2A0A89F KSNODE_CREATE;
typedef struct _58C2C1BF6568EE28BD9B872E6BA03976 KSPIN_CONNECT;
typedef struct _9D2EE2D5E082F56CCDE737471FBF8D82 KSQUERYBUFFER;
typedef struct _5B98A3A85E20DBA203FE93F0C6DC9B6B KSVPSIZE_PROP;
typedef struct _2E8FF8F0F30DAB89972BBD12E0BA3A8E KSWAVE_BUFFER;
typedef struct _436EEAB87169589F8FF54A3E6B966B58 KSWAVE_VOLUME;
typedef struct tagKS_FRAME_INFO KS_FRAME_INFO;
typedef union _LARGE_INTEGER LARGE_INTEGER;
typedef struct _LINE_DEV_CAPS LINE_DEV_CAPS;
typedef struct _LINKED_DEVICE LINKED_DEVICE;
typedef struct _LOCK_STATE_EX LOCK_STATE_EX;
typedef struct _LOG_PARAMETER LOG_PARAMETER;
typedef struct _LOWIO_CONTEXT LOWIO_CONTEXT;
typedef struct addrinfoexA *LPADDRINFOEXA;
typedef struct addrinfoexW *LPADDRINFOEXW;
typedef struct _CSADDR_INFO *LPCSADDR_INFO;
typedef struct _QOS_SD_MODE *LPQOS_SD_MODE;
typedef struct _F903DA300906E5E06303D440D5AEF258 *LPRATING_INFO;
enum MACRO_ADAPTER {ADAPTER_INFO_SYNCHRONOUS_CALLBACK = 0x1,};
enum MACRO_ADDRESS {ADDRESS_TAG_BIT = 0x80000000,};
enum MACRO_AF_TAPI {AF_TAPI_SAP_TYPE = 0x8000,};
enum MACRO_AGP_BUS {AGP_BUS_INTERFACE_V1 = 1,AGP_BUS_INTERFACE_V2 = 2,AGP_BUS_INTERFACE_V3 = 3,AGP_BUS_INTERFACE_V4 = 4,AGP_BUS_INTERFACE_V5 = 5,AGP_CAPABILITIES_MAP_PHYSICAL = 1,AGP_CAPABILITIES_CACHE_COHERENT = 2,AGP_CAPABILITIES_REQUIRES_GPU_FLUSH = 4,AGP_SET_RATE_DISABLE_SBA = 65536,AGP_SET_RATE_DISABLE_FW = 131072,AGP_GUARD_PAGE_CHECK_FIRST_ULONG = 1,AGP_GUARD_PAGE_CHECK_USE_SAME_OFFSET = 2,AGP_GUARD_PAGE_CHECK_DO_NOT_BUGCHECK = 4,};
enum MACRO_ANYSIZE {ANYSIZE_ARRAY = 1,};
enum MACRO_ARBITER {ARBITER_FLAG_BOOT_CONFIG = 0x1,ARBITER_PARTIAL = 0x1,};
enum MACRO_AVCSTRM {AVCSTRM_FORMAT_OPTION_STRIP_SPH = 0x1,};
enum MACRO_AddLink {AddLink = 30,};
enum MACRO_AddPort {AddPort = 20,};
enum MACRO_BATTERY {BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK = 0x7,BATTERY_DISCHARGE_FLAGS_ENABLE = 0x80000000,};
enum MACRO_BOOTING {BOOTING_IN_SAFEMODE_MINIMAL = 0xA8,BOOTING_IN_SAFEMODE_NETWORK = 0xA9,BOOTING_IN_SAFEMODE_DSREPAIR = 0xAA,};
enum MACRO_BOOTLOG {BOOTLOG_LOADED = 0xB5,BOOTLOG_NOT_LOADED = 0xB6,BOOTLOG_ENABLED = 0xB7,};
enum MACRO_BOUNDED {BOUNDED_ECP = 0x80,};
enum MACRO_BTHPORT {BTHPORT_CONTEXT_SIZE = 4,BTHPORT_RESERVED_FIELD_SIZE = 2,};
enum MACRO_BTH_EIR {BTH_EIR_FLAGS_ID = 0x1,BTH_EIR_16_UUIDS_PARTIAL_ID = 0x2,BTH_EIR_16_UUIDS_COMPLETE_ID = 0x3,BTH_EIR_32_UUIDS_PARTIAL_ID = 0x4,BTH_EIR_32_UUIDS_COMPLETE_ID = 0x5,BTH_EIR_128_UUIDS_PARTIAL_ID = 0x6,BTH_EIR_128_UUIDS_COMPLETE_ID = 0x7,BTH_EIR_LOCAL_NAME_PARTIAL_ID = 0x8,BTH_EIR_LOCAL_NAME_COMPLETE_ID = 0x9,BTH_EIR_TX_POWER_LEVEL_ID = 0xA,BTH_EIR_OOB_OPT_DATA_LEN_ID = 0xB,BTH_EIR_OOB_BD_ADDR_ID = 0xC,BTH_EIR_OOB_COD_ID = 0xD,BTH_EIR_OOB_SP_HASH_ID = 0xE,BTH_EIR_OOB_SP_RANDOMIZER_ID = 0xF,BTH_EIR_MANUFACTURER_ID = 0xFF,BTH_EIR_SIZE = 0xF0,};
enum MACRO_BTH_MAX {BTH_MAX_NAME_SIZE = 248,BTH_MAX_PIN_SIZE = 16,BTH_LINK_KEY_LENGTH = 16,BTH_MFG_ERICSSON = 0,BTH_MFG_NOKIA = 1,BTH_MFG_INTEL = 2,BTH_MFG_IBM = 3,BTH_MFG_TOSHIBA = 4,BTH_MFG_3COM = 5,BTH_MFG_MICROSOFT = 6,BTH_MFG_LUCENT = 7,BTH_MFG_MOTOROLA = 8,BTH_MFG_INFINEON = 9,BTH_MFG_CSR = 10,BTH_MFG_SILICONWAVE = 11,BTH_MFG_DIGIANSWER = 12,BTH_MFG_TI = 13,BTH_MFG_PARTHUS = 14,BTH_MFG_BROADCOM = 15,BTH_MFG_MITEL = 16,BTH_MFG_WIDCOMM = 17,BTH_MFG_ZEEVO = 18,BTH_MFG_ATMEL = 19,BTH_MFG_MITSIBUSHI = 20,BTH_MFG_RTX_TELECOM = 21,BTH_MFG_KC_TECHNOLOGY = 22,BTH_MFG_NEWLOGIC = 23,BTH_MFG_TRANSILICA = 24,BTH_MFG_ROHDE_SCHWARZ = 25,BTH_MFG_TTPCOM = 26,BTH_MFG_SIGNIA = 27,BTH_MFG_CONEXANT = 28,BTH_MFG_QUALCOMM = 29,BTH_MFG_INVENTEL = 30,BTH_MFG_AVM_BERLIN = 31,BTH_MFG_BANDSPEED = 32,BTH_MFG_MANSELLA = 33,BTH_MFG_NEC = 34,BTH_MFG_WAVEPLUS_TECHNOLOGY_CO = 35,BTH_MFG_ALCATEL = 36,BTH_MFG_PHILIPS_SEMICONDUCTOR = 37,BTH_MFG_C_TECHNOLOGIES = 38,BTH_MFG_OPEN_INTERFACE = 39,BTH_MFG_RF_MICRO_DEVICES = 40,BTH_MFG_HITACHI = 41,BTH_MFG_SYMBOL_TECHNOLOGIES = 42,BTH_MFG_TENOVIS = 43,BTH_MFG_MACRONIX_INTERNATIONAL = 44,BTH_MFG_INTERNAL_USE = 65535,BTH_ADDR_NULL = 0,};
enum MACRO_BTH_VID {BTH_VID_DEFAULT_VALUE = 0xFFFF,};
enum MACRO_BUGCODE {BUGCODE_NDIS_DRIVER = 0x7C,};
enum MACRO_BUS1394 {BUS1394_DDI_MAJOR_VERSION = 3,BUS1394_DDI_MINOR_VERSION = 0,BUS1394_CURRENT_DDI_VERSION = 3,};
enum MACRO_CACHE_E {CACHE_E_FIRST = 0x80040170,CACHE_E_LAST = 0x8004017F,CACHE_S_FIRST = 0x40170,CACHE_S_LAST = 0x4017F,CACHE_E_NOCACHE_UPDATED = 0x80040170,};
enum MACRO_CACHE_S {CACHE_S_FORMATETC_NOTSUPPORTED = 0x40170,CACHE_S_SAMECACHE = 0x40171,CACHE_S_SOMECACHES_NOTUPDATED = 0x40172,};
enum MACRO_CALLMGR {CALLMGR_SPECIFIC_Q2931 = 0x1,};
enum MACRO_CAPABLE {RECEIVE_TIME_INDICATION_CAPABLE = 0x8,TIMED_SEND_CAPABLE = 0x10,TIME_STAMP_CAPABLE = 0x20,};
enum MACRO_CAP_ATA {CAP_ATA_ID_CMD = 1,CAP_ATAPI_ID_CMD = 2,CAP_SMART_CMD = 4,};
enum MACRO_CDB_USE {CDB_USE_MSF = 0x1,};
enum MACRO_CERTSRV {CERTSRV_E_BAD_REQUESTSUBJECT = 0x80094001,CERTSRV_E_NO_REQUEST = 0x80094002,CERTSRV_E_BAD_REQUESTSTATUS = 0x80094003,CERTSRV_E_PROPERTY_EMPTY = 0x80094004,CERTSRV_E_INVALID_CA_CERTIFICATE = 0x80094005,CERTSRV_E_SERVER_SUSPENDED = 0x80094006,CERTSRV_E_ENCODING_LENGTH = 0x80094007,CERTSRV_E_ROLECONFLICT = 0x80094008,CERTSRV_E_RESTRICTEDOFFICER = 0x80094009,CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED = 0x8009400A,CERTSRV_E_NO_VALID_KRA = 0x8009400B,CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL = 0x8009400C,CERTSRV_E_NO_CAADMIN_DEFINED = 0x8009400D,CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE = 0x8009400E,CERTSRV_E_NO_DB_SESSIONS = 0x8009400F,CERTSRV_E_ALIGNMENT_FAULT = 0x80094010,CERTSRV_E_ENROLL_DENIED = 0x80094011,CERTSRV_E_TEMPLATE_DENIED = 0x80094012,CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE = 0x80094013,CERTSRV_E_ADMIN_DENIED_REQUEST = 0x80094014,CERTSRV_E_NO_POLICY_SERVER = 0x80094015,CERTSRV_E_WEAK_SIGNATURE_OR_KEY = 0x80094016,CERTSRV_E_UNSUPPORTED_CERT_TYPE = 0x80094800,CERTSRV_E_NO_CERT_TYPE = 0x80094801,CERTSRV_E_TEMPLATE_CONFLICT = 0x80094802,CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED = 0x80094803,CERTSRV_E_ARCHIVED_KEY_REQUIRED = 0x80094804,CERTSRV_E_SMIME_REQUIRED = 0x80094805,CERTSRV_E_BAD_RENEWAL_SUBJECT = 0x80094806,CERTSRV_E_BAD_TEMPLATE_VERSION = 0x80094807,CERTSRV_E_TEMPLATE_POLICY_REQUIRED = 0x80094808,CERTSRV_E_SIGNATURE_POLICY_REQUIRED = 0x80094809,CERTSRV_E_SIGNATURE_COUNT = 0x8009480A,CERTSRV_E_SIGNATURE_REJECTED = 0x8009480B,CERTSRV_E_ISSUANCE_POLICY_REQUIRED = 0x8009480C,CERTSRV_E_SUBJECT_UPN_REQUIRED = 0x8009480D,CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED = 0x8009480E,CERTSRV_E_SUBJECT_DNS_REQUIRED = 0x8009480F,CERTSRV_E_ARCHIVED_KEY_UNEXPECTED = 0x80094810,CERTSRV_E_KEY_LENGTH = 0x80094811,CERTSRV_E_SUBJECT_EMAIL_REQUIRED = 0x80094812,CERTSRV_E_UNKNOWN_CERT_TYPE = 0x80094813,CERTSRV_E_CERT_TYPE_OVERLAP = 0x80094814,CERTSRV_E_TOO_MANY_SIGNATURES = 0x80094815,CERTSRV_E_RENEWAL_BAD_PUBLIC_KEY = 0x80094816,};
enum MACRO_CHANGER {CHANGER_BAR_CODE_SCANNER_INSTALLED = 0x1,CHANGER_INIT_ELEM_STAT_WITH_RANGE = 0x2,CHANGER_CLOSE_IEPORT = 0x4,CHANGER_OPEN_IEPORT = 0x8,CHANGER_STATUS_NON_VOLATILE = 0x10,CHANGER_EXCHANGE_MEDIA = 0x20,CHANGER_CLEANER_SLOT = 0x40,CHANGER_LOCK_UNLOCK = 0x80,CHANGER_CARTRIDGE_MAGAZINE = 0x100,CHANGER_MEDIUM_FLIP = 0x200,CHANGER_POSITION_TO_ELEMENT = 0x400,CHANGER_REPORT_IEPORT_STATE = 0x800,CHANGER_STORAGE_DRIVE = 0x1000,CHANGER_STORAGE_IEPORT = 0x2000,CHANGER_STORAGE_SLOT = 0x4000,CHANGER_STORAGE_TRANSPORT = 0x8000,CHANGER_DRIVE_CLEANING_REQUIRED = 0x10000,CHANGER_PREDISMOUNT_EJECT_REQUIRED = 0x20000,CHANGER_CLEANER_ACCESS_NOT_VALID = 0x40000,CHANGER_PREMOUNT_EJECT_REQUIRED = 0x80000,CHANGER_VOLUME_IDENTIFICATION = 0x100000,CHANGER_VOLUME_SEARCH = 0x200000,CHANGER_VOLUME_ASSERT = 0x400000,CHANGER_VOLUME_REPLACE = 0x800000,CHANGER_VOLUME_UNDEFINE = 0x1000000,CHANGER_SERIAL_NUMBER_VALID = 0x4000000,CHANGER_DEVICE_REINITIALIZE_CAPABLE = 0x8000000,CHANGER_KEYPAD_ENABLE_DISABLE = 0x10000000,CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS = 0x20000000,CHANGER_RESERVED_BIT = 0x80000000,CHANGER_PREDISMOUNT_ALIGN_TO_SLOT = 0x80000001,CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE = 0x80000002,CHANGER_CLEANER_AUTODISMOUNT = 0x80000004,CHANGER_TRUE_EXCHANGE_CAPABLE = 0x80000008,CHANGER_SLOTS_USE_TRAYS = 0x80000010,CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR = 0x80000020,CHANGER_CLEANER_OPS_NOT_SUPPORTED = 0x80000040,CHANGER_IEPORT_USER_CONTROL_OPEN = 0x80000080,CHANGER_IEPORT_USER_CONTROL_CLOSE = 0x80000100,CHANGER_MOVE_EXTENDS_IEPORT = 0x80000200,CHANGER_MOVE_RETRACTS_IEPORT = 0x80000400,CHANGER_TO_TRANSPORT = 0x1,CHANGER_TO_SLOT = 0x2,CHANGER_TO_IEPORT = 0x4,CHANGER_TO_DRIVE = 0x8,};
enum MACRO_CHANNEL {PRINTER_CHANNEL = 2,SCANNER_CHANNEL = 4,};
enum MACRO_CHIPSET {CHIPSET_DETECTED_ERROR = 0xB9,};
enum MACRO_CIP_HDR {CIP_HDR_FMT_MASK = 0x3F,CIP_HDR_FMT_DVCR = 0x80,CIP_HDR_FMT_MPEG = 0xA0,CIP_HDR_FDF0_50_60_MASK = 0x80,CIP_HDR_FDF0_50_60_PAL = 0x80,CIP_HDR_FDF0_50_60_NTSC = 0x0,CIP_HDR_FDF0_STYPE_MASK = 0x7C,CIP_HDR_FDF0_STYPE_SD_DVCR = 0x0,CIP_HDR_FDF0_STYPE_SDL_DVCR = 0x4,CIP_HDR_FDF0_STYPE_HD_DVCR = 0x8,CIP_HDR_FDF0_STYPE_SD_DVCPRO = 0x78,CIP_SPH_DV = 0x0,CIP_SPH_MPEG = 0x1,CIP_FN_DV = 0x0,CIP_FN_MPEG = 0x3,CIP_QPC_DV = 0x0,CIP_QPC_MPEG = 0x0,CIP_DBS_SDDV = 0x78,CIP_DBS_HDDV = 0xF0,CIP_DBS_SDLDV = 0x3C,CIP_DBS_MPEG = 0x6,CIP_FMT_DV = 0x0,CIP_FMT_MPEG = 0x20,CIP_60_FIELDS = 0x0,CIP_50_FIELDS = 0x1,CIP_TSF_ON = 0x1,CIP_TSF_OFF = 0x0,CIP_STYPE_DV = 0x0,CIP_STYPE_DVCPRO = 0x1E,};
enum MACRO_CLIPBRD {CLIPBRD_E_FIRST = 0x800401D0,CLIPBRD_E_LAST = 0x800401DF,CLIPBRD_S_FIRST = 0x401D0,CLIPBRD_S_LAST = 0x401DF,CLIPBRD_E_CANT_OPEN = 0x800401D0,CLIPBRD_E_CANT_EMPTY = 0x800401D1,CLIPBRD_E_CANT_SET = 0x800401D2,CLIPBRD_E_BAD_DATA = 0x800401D3,CLIPBRD_E_CANT_CLOSE = 0x800401D4,};
enum MACRO_CONNECT {CONNECT_FULLY_SPECIFIED = 0x1,CONNECT_LINE_BASED = 0x2,CONNECT_MESSAGE_BASED = 0x3,CONNECT_FULLY_SPECIFIED_GROUP = 0x4,CONNECT_CURRENT_VERSION = 0x4,};
enum MACRO_CONTEXT {CONTEXT_i386 = 0x10000,CONTEXT_i486 = 0x10000,CONTEXT_CONTROL = 0x10001,CONTEXT_INTEGER = 0x10002,CONTEXT_SEGMENTS = 0x10004,CONTEXT_FLOATING_POINT = 0x10008,CONTEXT_DEBUG_REGISTERS = 0x10010,CONTEXT_EXTENDED_REGISTERS = 0x10020,CONTEXT_FULL = 0x10007,CONTEXT_ALL = 0x1003F,CONTEXT_XSTATE = 0x10040,CONTEXT_EXCEPTION_ACTIVE = 0x8000000,CONTEXT_SERVICE_ACTIVE = 0x10000000,CONTEXT_EXCEPTION_REQUEST = 0x40000000,CONTEXT_EXCEPTION_REPORTING = 0x80000000,};
enum MACRO_CORRUPT {CORRUPT_ACCESS_TOKEN = 0x28,};
enum MACRO_CO_SEND {CO_SEND_FLAG_SET_DISCARD_ELIBILITY = 0x1,};
enum MACRO_CO_TAPI {CO_TAPI_VERSION = 65539,CO_TAPI_FLAG_PER_LINE_CAPS = 1,CO_TAPI_FLAG_PER_ADDRESS_CAPS = 1,CO_TAPI_LINE_ID_UNSPECIFIED = -1,CO_TAPI_ADDRESS_ID_UNSPECIFIED = -1,CO_TAPI_FLAG_OUTGOING_CALL = 1,CO_TAPI_FLAG_INCOMING_CALL = 2,CO_TAPI_FLAG_USE_DEFAULT_CALLPARAMS = 4,};
enum MACRO_CRYPT_E {CRYPT_E_ASN1_ERROR = 0x80093100,CRYPT_E_ASN1_INTERNAL = 0x80093101,CRYPT_E_ASN1_EOD = 0x80093102,CRYPT_E_ASN1_CORRUPT = 0x80093103,CRYPT_E_ASN1_LARGE = 0x80093104,CRYPT_E_ASN1_CONSTRAINT = 0x80093105,CRYPT_E_ASN1_MEMORY = 0x80093106,CRYPT_E_ASN1_OVERFLOW = 0x80093107,CRYPT_E_ASN1_BADPDU = 0x80093108,CRYPT_E_ASN1_BADARGS = 0x80093109,CRYPT_E_ASN1_BADREAL = 0x8009310A,CRYPT_E_ASN1_BADTAG = 0x8009310B,CRYPT_E_ASN1_CHOICE = 0x8009310C,CRYPT_E_ASN1_RULE = 0x8009310D,CRYPT_E_ASN1_UTF8 = 0x8009310E,CRYPT_E_ASN1_PDU_TYPE = 0x80093133,CRYPT_E_ASN1_NYI = 0x80093134,CRYPT_E_ASN1_EXTENDED = 0x80093201,CRYPT_E_ASN1_NOEOD = 0x80093202,};
enum MACRO_CRYSTAL {CRYSTAL_NET_SFM_CODEC = 1,};
enum MACRO_CURRENT {CURRENT_61883_DDI_VERSION = 0x4,};
enum MACRO_D3DKMDT {D3DKMDT_MAX_VIDPN_SOURCES_BITCOUNT = 4,D3DKMDT_MAX_VIDPN_SOURCES = 16,};
enum MACRO_DEFAULT {DEFAULT_AVC_TIMEOUT = 1000000,DEFAULT_AVC_RETRIES = 9,};
enum MACRO_DEVPROP {DEVPROP_TYPEMOD_ARRAY = 0x1000,DEVPROP_TYPEMOD_LIST = 0x2000,DEVPROP_TYPE_EMPTY = 0x0,DEVPROP_TYPE_NULL = 0x1,DEVPROP_TYPE_SBYTE = 0x2,DEVPROP_TYPE_BYTE = 0x3,DEVPROP_TYPE_INT16 = 0x4,DEVPROP_TYPE_UINT16 = 0x5,DEVPROP_TYPE_INT32 = 0x6,DEVPROP_TYPE_UINT32 = 0x7,DEVPROP_TYPE_INT64 = 0x8,DEVPROP_TYPE_UINT64 = 0x9,DEVPROP_TYPE_FLOAT = 0xA,DEVPROP_TYPE_DOUBLE = 0xB,DEVPROP_TYPE_DECIMAL = 0xC,DEVPROP_TYPE_GUID = 0xD,DEVPROP_TYPE_CURRENCY = 0xE,DEVPROP_TYPE_DATE = 0xF,DEVPROP_TYPE_FILETIME = 0x10,DEVPROP_TYPE_BOOLEAN = 0x11,DEVPROP_TYPE_STRING = 0x12,DEVPROP_TYPE_STRING_LIST = 0x2012,DEVPROP_TYPE_SECURITY_DESCRIPTOR = 0x13,DEVPROP_TYPE_SECURITY_DESCRIPTOR_STRING = 0x14,DEVPROP_TYPE_DEVPROPKEY = 0x15,DEVPROP_TYPE_DEVPROPTYPE = 0x16,DEVPROP_TYPE_BINARY = 0x1003,DEVPROP_TYPE_ERROR = 0x17,DEVPROP_TYPE_NTSTATUS = 0x18,DEVPROP_TYPE_STRING_INDIRECT = 0x19,};
enum MACRO_DIGITAL {DIGITAL_COPY_PERMITTED = 0x2,};
enum MACRO_DISABLE {DISABLE_ERROR_SOURCE_IN_ErrorSourceId_ID = 2,DISABLE_ERROR_SOURCE_OUT_Status_ID = 1,};
enum MACRO_DOSLM12 {DOSLM12 = 6,};
enum MACRO_DOSLM20 {DOSLM20 = 3,LANMAN = 4,};
enum MACRO_DXGKDDI {DXGKDDI_INTERFACE_VERSION_VISTA = 0x1052,DXGKDDI_INTERFACE_VERSION_VISTA_SP1 = 0x1053,DXGKDDI_INTERFACE_VERSION_WIN7 = 0x2005,DXGKDDI_INTERFACE_VERSION_WIN8 = 0x300E,DXGKDDI_INTERFACE_VERSION = 0x300E,};
enum MACRO_DXGKMDT {DXGKMDT_I2C_NO_FLAGS = 0,DXGKMDT_I2C_DEVICE_TRANSMITS_DATA_LENGTH = 1,DXGKMDT_OPM_OMAC_SIZE = 16,DXGKMDT_OPM_128_BIT_RANDOM_NUMBER_SIZE = 16,DXGKMDT_OPM_ENCRYPTED_PARAMETERS_SIZE = 256,DXGKMDT_OPM_CONFIGURE_SETTING_DATA_SIZE = 4056,DXGKMDT_OPM_GET_INFORMATION_PARAMETERS_SIZE = 4056,DXGKMDT_OPM_REQUESTED_INFORMATION_SIZE = 4076,DXGKMDT_OPM_HDCP_KEY_SELECTION_VECTOR_SIZE = 5,DXGKMDT_OPM_PROTECTION_TYPE_SIZE = 4,};
enum MACRO_DYNAMIC {DYNAMIC_ADD_PROCESSOR_MISMATCH = 0x130,};
enum MACRO_DevProp {DevProp_PciRootBus_SecondaryInterface_PciConventional = 0,DevProp_PciRootBus_SecondaryInterface_PciXMode1 = 1,DevProp_PciRootBus_SecondaryInterface_PciXMode2 = 2,DevProp_PciRootBus_SecondaryInterface_PciExpress = 3,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_Conventional_33Mhz = 0,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_Conventional_66Mhz = 1,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_Mode1_66Mhz = 2,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_Mode1_100Mhz = 3,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_Mode1_133Mhz = 4,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_Mode1_ECC_66Mhz = 5,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_Mode1_ECC_100Mhz = 6,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_Mode1_ECC_133Mhz = 7,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_266_Mode2_66Mhz = 8,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_266_Mode2_100Mhz = 9,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_266_Mode2_133Mhz = 10,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_533_Mode2_66Mhz = 11,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_533_Mode2_100Mhz = 12,DevProp_PciRootBus_CurrentSpeedAndMode_Pci_X_533_Mode2_133Mhz = 13,DevProp_PciRootBus_SupportedSpeedsAndModes_Pci_Conventional_33Mhz = 1,DevProp_PciRootBus_SupportedSpeedsAndModes_Pci_Conventional_66Mhz = 2,DevProp_PciRootBus_SupportedSpeedsAndModes_Pci_X_66Mhz = 4,DevProp_PciRootBus_SupportedSpeedsAndModes_Pci_X_133Mhz = 8,DevProp_PciRootBus_SupportedSpeedsAndModes_Pci_X_266Mhz = 16,DevProp_PciRootBus_SupportedSpeedsAndModes_Pci_X_533Mhz = 32,DevProp_PciRootBus_BusWidth_32Bits = 0,DevProp_PciRootBus_BusWidth_64Bits = 1,DevProp_PciDevice_DeviceType_PciConventional = 0,DevProp_PciDevice_DeviceType_PciX = 1,DevProp_PciDevice_DeviceType_PciExpressEndpoint = 2,DevProp_PciDevice_DeviceType_PciExpressLegacyEndpoint = 3,DevProp_PciDevice_DeviceType_PciExpressRootComplexIntegratedEndpoint = 4,DevProp_PciDevice_DeviceType_PciExpressTreatedAsPci = 5,DevProp_PciDevice_BridgeType_PciConventional = 6,DevProp_PciDevice_BridgeType_PciX = 7,DevProp_PciDevice_BridgeType_PciExpressRootPort = 8,DevProp_PciDevice_BridgeType_PciExpressUpstreamSwitchPort = 9,DevProp_PciDevice_BridgeType_PciExpressDownstreamSwitchPort = 10,DevProp_PciDevice_BridgeType_PciExpressToPciXBridge = 11,DevProp_PciDevice_BridgeType_PciXToExpressBridge = 12,DevProp_PciDevice_BridgeType_PciExpressTreatedAsPci = 13,DevProp_PciDevice_CurrentSpeedAndMode_Pci_Conventional_33MHz = 0,DevProp_PciDevice_CurrentSpeedAndMode_Pci_Conventional_66MHz = 1,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode_Conventional_Pci = 0,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode1_66Mhz = 1,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode1_100Mhz = 2,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode1_133MHZ = 3,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode1_ECC_66Mhz = 5,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode1_ECC_100Mhz = 6,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode1_ECC_133Mhz = 7,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode2_266_66MHz = 9,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode2_266_100MHz = 10,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode2_266_133MHz = 11,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode2_533_66MHz = 13,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode2_533_100MHz = 14,DevProp_PciDevice_CurrentSpeedAndMode_PciX_Mode2_533_133MHz = 15,DevProp_PciExpressDevice_PayloadOrRequestSize_128Bytes = 0,DevProp_PciExpressDevice_PayloadOrRequestSize_256Bytes = 1,DevProp_PciExpressDevice_PayloadOrRequestSize_512Bytes = 2,DevProp_PciExpressDevice_PayloadOrRequestSize_1024Bytes = 3,DevProp_PciExpressDevice_PayloadOrRequestSize_2048Bytes = 4,DevProp_PciExpressDevice_PayloadOrRequestSize_4096Bytes = 5,DevProp_PciExpressDevice_LinkSpeed_TwoAndHalf_Gbps = 1,DevProp_PciExpressDevice_LinkSpeed_Five_Gbps = 2,DevProp_PciExpressDevice_LinkWidth_By_1 = 1,DevProp_PciExpressDevice_LinkWidth_By_2 = 2,DevProp_PciExpressDevice_LinkWidth_By_4 = 4,DevProp_PciExpressDevice_LinkWidth_By_8 = 8,DevProp_PciExpressDevice_LinkWidth_By_12 = 12,DevProp_PciExpressDevice_LinkWidth_By_16 = 16,DevProp_PciExpressDevice_LinkWidth_By_32 = 32,DevProp_PciExpressDevice_Spec_Version_10 = 1,DevProp_PciExpressDevice_Spec_Version_11 = 2,DevProp_PciDevice_InterruptType_LineBased = 1,DevProp_PciDevice_InterruptType_Msi = 2,DevProp_PciDevice_InterruptType_MsiX = 4,DevProp_PciDevice_SriovSupport_Ok = 0,DevProp_PciDevice_SriovSupport_MissingAcs = 1,DevProp_PciDevice_SriovSupport_MissingPfDriver = 2,DevProp_PciDevice_SriovSupport_NoBusResource = 3,DevProp_PciDevice_SriovSupport_DidntGetVfBarSpace = 4,DevProp_PciDevice_AcsSupport_Present = 0,DevProp_PciDevice_AcsSupport_NotNeeded = 1,DevProp_PciDevice_AcsSupport_Missing = 2,};
enum MACRO_ECP_MAX {ECP_MAX_FIFO_DEPTH = 4098,};
enum MACRO_ELEMENT {ELEMENT_STATUS_FULL = 0x1,ELEMENT_STATUS_IMPEXP = 0x2,ELEMENT_STATUS_EXCEPT = 0x4,ELEMENT_STATUS_ACCESS = 0x8,ELEMENT_STATUS_EXENAB = 0x10,ELEMENT_STATUS_INENAB = 0x20,ELEMENT_STATUS_PRODUCT_DATA = 0x40,ELEMENT_STATUS_LUN_VALID = 0x1000,ELEMENT_STATUS_ID_VALID = 0x2000,ELEMENT_STATUS_NOT_BUS = 0x8000,ELEMENT_STATUS_INVERT = 0x400000,ELEMENT_STATUS_SVALID = 0x800000,ELEMENT_STATUS_PVOLTAG = 0x10000000,ELEMENT_STATUS_AVOLTAG = 0x20000000,};
enum MACRO_ENTROPY {ENTROPY_MAX_DATA_LEN = 128,};
enum MACRO_EVENT_E {EVENT_E_FIRST = 0x80040200,EVENT_E_LAST = 0x8004021F,EVENT_S_FIRST = 0x40200,EVENT_S_LAST = 0x4021F,EVENT_S_SOME_SUBSCRIBERS_FAILED = 0x40200,EVENT_E_ALL_SUBSCRIBERS_FAILED = 0x80040201,EVENT_S_NOSUBSCRIBERS = 0x40202,EVENT_E_QUERYSYNTAX = 0x80040203,EVENT_E_QUERYFIELD = 0x80040204,EVENT_E_INTERNALEXCEPTION = 0x80040205,EVENT_E_INTERNALERROR = 0x80040206,EVENT_E_INVALID_PER_USER_SID = 0x80040207,EVENT_E_USER_EXCEPTION = 0x80040208,EVENT_E_TOO_MANY_METHODS = 0x80040209,EVENT_E_MISSING_EVENTCLASS = 0x8004020A,EVENT_E_NOT_ALL_REMOVED = 0x8004020B,EVENT_E_COMPLUS_NOT_INSTALLED = 0x8004020C,EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT = 0x8004020D,EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT = 0x8004020E,EVENT_E_INVALID_EVENT_CLASS_PARTITION = 0x8004020F,EVENT_E_PER_USER_SID_NOT_LOGGED_ON = 0x80040210,};
enum MACRO_EXECUTE {EXECUTE_OFFLINE_DIAGS = 0xD4,};
enum MACRO_EXPIRED {EXPIRED_CLEANING_MEDIA = 22,};
enum MACRO_EXT_LEN {EXT_LEN_UNIT = 8,};
enum MACRO_FAILURE {NMI_HARDWARE_FAILURE = 0x80,SPIN_LOCK_INIT_FAILURE = 0x81,};
enum MACRO_FILE_VC {FILE_VC_QUOTA_NONE = 0x0,FILE_VC_QUOTA_TRACK = 0x1,FILE_VC_QUOTA_ENFORCE = 0x2,FILE_VC_QUOTA_MASK = 0x3,FILE_VC_CONTENT_INDEX_DISABLED = 0x8,FILE_VC_LOG_QUOTA_THRESHOLD = 0x10,FILE_VC_LOG_QUOTA_LIMIT = 0x20,FILE_VC_LOG_VOLUME_THRESHOLD = 0x40,FILE_VC_LOG_VOLUME_LIMIT = 0x80,FILE_VC_QUOTAS_INCOMPLETE = 0x100,FILE_VC_QUOTAS_REBUILDING = 0x200,FILE_VC_VALID_MASK = 0x3FF,};
enum MACRO_FLTTCFL {FLTTCFL_AUTO_REPARSE = 0x1,};
enum MACRO_FLT_MAX {FLT_MAX_DEVICE_REPARSE_ATTEMPTS = 64,};
enum MACRO_FLT_MGR {FLT_MGR_BASELINE = 1,FLT_MGR_AFTER_XPSP2 = 1,FLT_MGR_LONGHORN = 1,FLT_MGR_WIN7 = 1,FLT_MGR_WIN8 = 1,};
enum MACRO_GENERIC {GENERIC_READ = 0x80000000,GENERIC_WRITE = 0x40000000,GENERIC_EXECUTE = 0x20000000,GENERIC_ALL = 0x10000000,};
enum MACRO_GENPROC {GENPROC_PROCTYPE_XPF = 0,GENPROC_PROCTYPE_IPF = 1,GENPROC_PROCISA_X86 = 0,GENPROC_PROCISA_IPF = 1,GENPROC_PROCISA_X64 = 2,GENPROC_PROCERRTYPE_UNKNOWN = 0,GENPROC_PROCERRTYPE_CACHE = 1,GENPROC_PROCERRTYPE_TLB = 2,GENPROC_PROCERRTYPE_BUS = 4,GENPROC_PROCERRTYPE_MAE = 8,GENPROC_OP_GENERIC = 0,GENPROC_OP_DATAREAD = 1,GENPROC_OP_DATAWRITE = 2,GENPROC_OP_INSTRUCTIONEXE = 3,GENPROC_FLAGS_RESTARTABLE = 1,GENPROC_FLAGS_PRECISEIP = 2,GENPROC_FLAGS_OVERFLOW = 4,GENPROC_FLAGS_CORRECTED = 8,};
enum MACRO_GET_ALL {GET_ALL_ERROR_SOURCES_OUT_Status_ID = 1,GET_ALL_ERROR_SOURCES_OUT_Count_ID = 2,GET_ALL_ERROR_SOURCES_OUT_Length_ID = 3,GET_ALL_ERROR_SOURCES_OUT_ErrorSourceArray_ID = 4,};
enum MACRO_HID_HID {HID_HID_DESCRIPTOR_TYPE = 0x21,HID_REPORT_DESCRIPTOR_TYPE = 0x22,HID_PHYSICAL_DESCRIPTOR_TYPE = 0x23,HID_STRING_ID_IMANUFACTURER = 0xE,HID_STRING_ID_IPRODUCT = 0xF,HID_STRING_ID_ISERIALNUMBER = 0x10,};
enum MACRO_I8042_0 {I8042 = 2,};
enum MACRO_ID_IPV4 {ID_IPV4_ADDR = 1,ID_FQDN = 2,ID_USER_FQDN = 3,ID_IPV6_ADDR = 5,};
enum MACRO_IF_TYPE {IF_TYPE_OTHER = 1,IF_TYPE_REGULAR_1822 = 2,IF_TYPE_HDH_1822 = 3,IF_TYPE_DDN_X25 = 4,IF_TYPE_RFC877_X25 = 5,IF_TYPE_ETHERNET_CSMACD = 6,IF_TYPE_IS088023_CSMACD = 7,IF_TYPE_ISO88024_TOKENBUS = 8,IF_TYPE_ISO88025_TOKENRING = 9,IF_TYPE_ISO88026_MAN = 10,IF_TYPE_STARLAN = 11,IF_TYPE_PROTEON_10MBIT = 12,IF_TYPE_PROTEON_80MBIT = 13,IF_TYPE_HYPERCHANNEL = 14,IF_TYPE_FDDI = 15,IF_TYPE_LAP_B = 16,IF_TYPE_SDLC = 17,IF_TYPE_DS1 = 18,IF_TYPE_E1 = 19,IF_TYPE_BASIC_ISDN = 20,IF_TYPE_PRIMARY_ISDN = 21,IF_TYPE_PROP_POINT2POINT_SERIAL = 22,IF_TYPE_PPP = 23,IF_TYPE_SOFTWARE_LOOPBACK = 24,IF_TYPE_EON = 25,IF_TYPE_ETHERNET_3MBIT = 26,IF_TYPE_NSIP = 27,IF_TYPE_SLIP = 28,IF_TYPE_ULTRA = 29,IF_TYPE_DS3 = 30,IF_TYPE_SIP = 31,IF_TYPE_FRAMERELAY = 32,IF_TYPE_RS232 = 33,IF_TYPE_PARA = 34,IF_TYPE_ARCNET = 35,IF_TYPE_ARCNET_PLUS = 36,IF_TYPE_ATM = 37,IF_TYPE_MIO_X25 = 38,IF_TYPE_SONET = 39,IF_TYPE_X25_PLE = 40,IF_TYPE_ISO88022_LLC = 41,IF_TYPE_LOCALTALK = 42,IF_TYPE_SMDS_DXI = 43,IF_TYPE_FRAMERELAY_SERVICE = 44,IF_TYPE_V35 = 45,IF_TYPE_HSSI = 46,IF_TYPE_HIPPI = 47,IF_TYPE_MODEM = 48,IF_TYPE_AAL5 = 49,IF_TYPE_SONET_PATH = 50,IF_TYPE_SONET_VT = 51,IF_TYPE_SMDS_ICIP = 52,IF_TYPE_PROP_VIRTUAL = 53,IF_TYPE_PROP_MULTIPLEXOR = 54,IF_TYPE_IEEE80212 = 55,IF_TYPE_FIBRECHANNEL = 56,IF_TYPE_HIPPIINTERFACE = 57,IF_TYPE_FRAMERELAY_INTERCONNECT = 58,IF_TYPE_AFLANE_8023 = 59,IF_TYPE_AFLANE_8025 = 60,IF_TYPE_CCTEMUL = 61,IF_TYPE_FASTETHER = 62,IF_TYPE_ISDN = 63,IF_TYPE_V11 = 64,IF_TYPE_V36 = 65,IF_TYPE_G703_64K = 66,IF_TYPE_G703_2MB = 67,IF_TYPE_QLLC = 68,IF_TYPE_FASTETHER_FX = 69,IF_TYPE_CHANNEL = 70,IF_TYPE_IEEE80211 = 71,IF_TYPE_IBM370PARCHAN = 72,IF_TYPE_ESCON = 73,IF_TYPE_DLSW = 74,IF_TYPE_ISDN_S = 75,IF_TYPE_ISDN_U = 76,IF_TYPE_LAP_D = 77,IF_TYPE_IPSWITCH = 78,IF_TYPE_RSRB = 79,IF_TYPE_ATM_LOGICAL = 80,IF_TYPE_DS0 = 81,IF_TYPE_DS0_BUNDLE = 82,IF_TYPE_BSC = 83,IF_TYPE_ASYNC = 84,IF_TYPE_CNR = 85,IF_TYPE_ISO88025R_DTR = 86,IF_TYPE_EPLRS = 87,IF_TYPE_ARAP = 88,IF_TYPE_PROP_CNLS = 89,IF_TYPE_HOSTPAD = 90,IF_TYPE_TERMPAD = 91,IF_TYPE_FRAMERELAY_MPI = 92,IF_TYPE_X213 = 93,IF_TYPE_ADSL = 94,IF_TYPE_RADSL = 95,IF_TYPE_SDSL = 96,IF_TYPE_VDSL = 97,IF_TYPE_ISO88025_CRFPRINT = 98,IF_TYPE_MYRINET = 99,IF_TYPE_VOICE_EM = 100,IF_TYPE_VOICE_FXO = 101,IF_TYPE_VOICE_FXS = 102,IF_TYPE_VOICE_ENCAP = 103,IF_TYPE_VOICE_OVERIP = 104,IF_TYPE_ATM_DXI = 105,IF_TYPE_ATM_FUNI = 106,IF_TYPE_ATM_IMA = 107,IF_TYPE_PPPMULTILINKBUNDLE = 108,IF_TYPE_IPOVER_CDLC = 109,IF_TYPE_IPOVER_CLAW = 110,IF_TYPE_STACKTOSTACK = 111,IF_TYPE_VIRTUALIPADDRESS = 112,IF_TYPE_MPC = 113,IF_TYPE_IPOVER_ATM = 114,IF_TYPE_ISO88025_FIBER = 115,IF_TYPE_TDLC = 116,IF_TYPE_GIGABITETHERNET = 117,IF_TYPE_HDLC = 118,IF_TYPE_LAP_F = 119,IF_TYPE_V37 = 120,IF_TYPE_X25_MLP = 121,IF_TYPE_X25_HUNTGROUP = 122,IF_TYPE_TRANSPHDLC = 123,IF_TYPE_INTERLEAVE = 124,IF_TYPE_FAST = 125,IF_TYPE_IP = 126,IF_TYPE_DOCSCABLE_MACLAYER = 127,IF_TYPE_DOCSCABLE_DOWNSTREAM = 128,IF_TYPE_DOCSCABLE_UPSTREAM = 129,IF_TYPE_A12MPPSWITCH = 130,IF_TYPE_TUNNEL = 131,IF_TYPE_COFFEE = 132,IF_TYPE_CES = 133,IF_TYPE_ATM_SUBINTERFACE = 134,IF_TYPE_L2_VLAN = 135,IF_TYPE_L3_IPVLAN = 136,IF_TYPE_L3_IPXVLAN = 137,IF_TYPE_DIGITALPOWERLINE = 138,IF_TYPE_MEDIAMAILOVERIP = 139,IF_TYPE_DTM = 140,IF_TYPE_DCN = 141,IF_TYPE_IPFORWARD = 142,IF_TYPE_MSDSL = 143,IF_TYPE_IEEE1394 = 144,IF_TYPE_IF_GSN = 145,IF_TYPE_DVBRCC_MACLAYER = 146,IF_TYPE_DVBRCC_DOWNSTREAM = 147,IF_TYPE_DVBRCC_UPSTREAM = 148,IF_TYPE_ATM_VIRTUAL = 149,IF_TYPE_MPLS_TUNNEL = 150,IF_TYPE_SRP = 151,IF_TYPE_VOICEOVERATM = 152,IF_TYPE_VOICEOVERFRAMERELAY = 153,IF_TYPE_IDSL = 154,IF_TYPE_COMPOSITELINK = 155,IF_TYPE_SS7_SIGLINK = 156,IF_TYPE_PROP_WIRELESS_P2P = 157,IF_TYPE_FR_FORWARD = 158,IF_TYPE_RFC1483 = 159,IF_TYPE_USB = 160,IF_TYPE_IEEE8023AD_LAG = 161,IF_TYPE_BGP_POLICY_ACCOUNTING = 162,IF_TYPE_FRF16_MFR_BUNDLE = 163,IF_TYPE_H323_GATEKEEPER = 164,IF_TYPE_H323_PROXY = 165,IF_TYPE_MPLS = 166,IF_TYPE_MF_SIGLINK = 167,IF_TYPE_HDSL2 = 168,IF_TYPE_SHDSL = 169,IF_TYPE_DS1_FDL = 170,IF_TYPE_POS = 171,IF_TYPE_DVB_ASI_IN = 172,IF_TYPE_DVB_ASI_OUT = 173,IF_TYPE_PLC = 174,IF_TYPE_NFAS = 175,IF_TYPE_TR008 = 176,IF_TYPE_GR303_RDT = 177,IF_TYPE_GR303_IDT = 178,IF_TYPE_ISUP = 179,IF_TYPE_PROP_DOCS_WIRELESS_MACLAYER = 180,IF_TYPE_PROP_DOCS_WIRELESS_DOWNSTREAM = 181,IF_TYPE_PROP_DOCS_WIRELESS_UPSTREAM = 182,IF_TYPE_HIPERLAN2 = 183,IF_TYPE_PROP_BWA_P2MP = 184,IF_TYPE_SONET_OVERHEAD_CHANNEL = 185,IF_TYPE_DIGITAL_WRAPPER_OVERHEAD_CHANNEL = 186,IF_TYPE_AAL2 = 187,IF_TYPE_RADIO_MAC = 188,IF_TYPE_ATM_RADIO = 189,IF_TYPE_IMT = 190,IF_TYPE_MVL = 191,IF_TYPE_REACH_DSL = 192,IF_TYPE_FR_DLCI_ENDPT = 193,IF_TYPE_ATM_VCI_ENDPT = 194,IF_TYPE_OPTICAL_CHANNEL = 195,IF_TYPE_OPTICAL_TRANSPORT = 196,IF_TYPE_IEEE80216_WMAN = 237,IF_TYPE_WWANPP = 243,IF_TYPE_WWANPP2 = 244,};
enum MACRO_IN4ADDR {IN4ADDR_ANY = 0,IN4ADDR_LOOPBACK = 16777343,IN4ADDR_BROADCAST = 4294967295,IN4ADDR_NONE = -1,IN4ADDR_LOOPBACKPREFIX_LENGTH = 8,IN4ADDR_LINKLOCALPREFIX_LENGTH = 16,IN4ADDR_MULTICASTPREFIX_LENGTH = 4,};
enum MACRO_IN6ADDR {IN6ADDR_LINKLOCALPREFIX_LENGTH = 64,IN6ADDR_MULTICASTPREFIX_LENGTH = 8,IN6ADDR_SOLICITEDNODEMULTICASTPREFIX_LENGTH = 104,IN6ADDR_V4MAPPEDPREFIX_LENGTH = 96,IN6ADDR_6TO4PREFIX_LENGTH = 16,IN6ADDR_TEREDOPREFIX_LENGTH = 32,};
enum MACRO_INITIAL {INITIAL_PRIVILEGE_COUNT = 3,};
enum MACRO_INPLACE {INPLACE_E_NOTUNDOABLE = 0x800401A0,INPLACE_E_NOTOOLSPACE = 0x800401A1,INPLACE_E_FIRST = 0x800401A0,INPLACE_E_LAST = 0x800401AF,INPLACE_S_FIRST = 0x401A0,INPLACE_S_LAST = 0x401AF,};
enum MACRO_INSTALL {INSTALL_MORE_MEMORY = 0x7D,};
enum MACRO_INVALID {INVALID_AFFINITY_SET = 0x3,INVALID_DATA_ACCESS_TRAP = 0x4,INVALID_PROCESS_ATTACH_ATTEMPT = 0x5,INVALID_PROCESS_DETACH_ATTEMPT = 0x6,INVALID_SOFTWARE_INTERRUPT = 0x7,};
enum MACRO_IOCPARM {IOCPARM_MASK = 0x7F,};
enum MACRO_IO_FILE {IO_FILE_OBJECT_NON_PAGED_POOL_CHARGE = 64,IO_FILE_OBJECT_PAGED_POOL_CHARGE = 1024,IO_CREATE_STREAM_FILE_RAISE_ON_ERROR = 1,IO_CREATE_STREAM_FILE_LITE = 2,};
enum MACRO_IO_OPEN {IO_OPEN_PAGING_FILE = 0x2,IO_OPEN_TARGET_DIRECTORY = 0x4,IO_STOP_ON_SYMLINK = 0x8,IO_MM_PAGING_FILE = 0x10,};
enum MACRO_IO_TYPE {IO_TYPE_ADAPTER = 0x1,IO_TYPE_CONTROLLER = 0x2,IO_TYPE_DEVICE = 0x3,IO_TYPE_DRIVER = 0x4,IO_TYPE_FILE = 0x5,IO_TYPE_IRP = 0x6,IO_TYPE_MASTER_ADAPTER = 0x7,IO_TYPE_OPEN_PACKET = 0x8,IO_TYPE_TIMER = 0x9,IO_TYPE_VPB = 0xA,IO_TYPE_ERROR_LOG = 0xB,IO_TYPE_ERROR_MESSAGE = 0xC,IO_TYPE_DEVICE_OBJECT_EXTENSION = 0xD,};
enum MACRO_IPPROTO {IPPROTO_IP = 0,};
enum MACRO_IRQL_GT {IRQL_GT_ZERO_AT_SYSTEM_SERVICE = 0x4A,};
enum MACRO_KSAUDIO {KSAUDIO_STEREO_SPEAKER_GEOMETRY_HEADPHONE = -1,KSAUDIO_STEREO_SPEAKER_GEOMETRY_MIN = 5,KSAUDIO_STEREO_SPEAKER_GEOMETRY_NARROW = 10,KSAUDIO_STEREO_SPEAKER_GEOMETRY_WIDE = 20,KSAUDIO_STEREO_SPEAKER_GEOMETRY_MAX = 180,};
enum MACRO_KSEVENT {KSEVENT_TYPE_ENABLE = 0x1,KSEVENT_TYPE_ONESHOT = 0x2,KSEVENT_TYPE_ENABLEBUFFERED = 0x4,KSEVENT_TYPE_SETSUPPORT = 0x100,KSEVENT_TYPE_BASICSUPPORT = 0x200,KSEVENT_TYPE_QUERYBUFFER = 0x400,KSEVENT_TYPE_TOPOLOGY = 0x10000000,};
enum MACRO_KSPROBE {KSPROBE_STREAMREAD = 0x0,KSPROBE_STREAMWRITE = 0x1,KSPROBE_ALLOCATEMDL = 0x10,KSPROBE_PROBEANDLOCK = 0x20,KSPROBE_SYSTEMADDRESS = 0x40,KSPROBE_MODIFY = 0x200,KSPROBE_STREAMWRITEMODIFY = 0x201,KSPROBE_ALLOWFORMATCHANGE = 0x80,};
enum MACRO_LOADING {LOADING_MECHANISM_CADDY = 0x0,LOADING_MECHANISM_TRAY = 0x1,LOADING_MECHANISM_POPUP = 0x2,LOADING_MECHANISM_INDIVIDUAL_CHANGER = 0x4,LOADING_MECHANISM_CARTRIDGE_CHANGER = 0x5,};
enum MACRO_LOWBYTE {LOWBYTE_MASK = 0xFF,};
enum MACRO_MACHINE {MACHINE_CHECK_EXCEPTION = 0x9C,};
enum MACRO_MARSHAL {MARSHAL_E_FIRST = 0x80040120,MARSHAL_E_LAST = 0x8004012F,MARSHAL_S_FIRST = 0x40120,MARSHAL_S_LAST = 0x4012F,};
enum MACRO_MAXCHAR {MAXCHAR = 0x7F,MINSHORT = 0x8000,};
enum MACRO_MAXIMUM {MAXIMUM_WAIT_OBJECTS_EXCEEDED = 0xC,};
enum MACRO_MAXLONG {MAXLONG = 0x7FFFFFFF,};
enum MACRO_MAX_AVC {MAX_AVC_SUBUNITINFO_PAGES = 8,MAX_AVC_SUBUNITINFO_BYTES = 4,};
enum MACRO_MAX_FCB {MAX_FCB_ASYNC_ACQUIRE = 0xF000,};
enum MACRO_MAX_IDE {MAX_IDE_DEVICE = 2,MAX_IDE_LUN = 8,};
enum MACRO_MAX_NUM {MAX_NUM_SUPPORTED_RATES = 8,MAX_NUM_SUPPORTED_RATES_V2 = 255,};
enum MACRO_MAX_REC {MAX_REC_100_RATE = 0x8,MAX_REC_200_RATE = 0x9,MAX_REC_400_RATE = 0xA,};
enum MACRO_MAX_WST {MAX_WST_VBI_LINES_PER_FIELD = 17,};
enum MACRO_MINCHAR {MINCHAR = 0x80,};
enum MACRO_MINIMUM {MINIMUM_CDROM_READ_TOC_EX_SIZE = 2,};
enum MACRO_MINIRDR {MINIRDR_BUFSTATE_COMMAND_FORCEPURGE = 0x1,MINIRDR_BUFSTATE_COMMAND_MASK = 0x1,};
enum MACRO_MIN_DEV {MIN_DEV_VER_FOR_FLAGS = 0x110,};
enum MACRO_MISSING {MISSING_VOLUME = 0xC00037DE,EXTRA_VOLUME = 0xC00037DF,};
enum MACRO_MM_DONT {MM_DONT_ZERO_ALLOCATION = 0x1,MM_ALLOCATE_FROM_LOCAL_NODE_ONLY = 0x2,MM_ALLOCATE_FULLY_REQUIRED = 0x4,MM_ALLOCATE_NO_WAIT = 0x8,MM_ALLOCATE_PREFER_CONTIGUOUS = 0x10,MM_ALLOCATE_REQUIRE_CONTIGUOUS_CHUNKS = 0x20,MM_ALLOCATE_FAST_LARGE_PAGES = 0x40,MM_ANY_NODE_OK = 0x80000000,};
enum MACRO_MM_MSFT {MM_MSFT_ACM_WMAUDIO = 39,};
enum MACRO_MODE_FD {MODE_FD_SINGLE_SIDE = 0x1,MODE_FD_DOUBLE_SIDE = 0x2,MODE_FD_MAXIMUM_TYPE = 0x1E,MODE_DSP_FUA_SUPPORTED = 0x10,MODE_DSP_WRITE_PROTECT = 0x80,};
enum MACRO_MONITOR {MONITOR_STATE_CREATED = 0x1,MONITOR_STATE_REMOVED = 0x2,MONITOR_STATE_UPDATED = 0x4,};
enum MACRO_MSFC_DH {MSFC_DH_Chap_Parameters_SharedSecretLength_ID = 1,MSFC_DH_Chap_Parameters_SecretEncoding_ID = 2,MSFC_DH_Chap_Parameters_SharedSecret_ID = 3,MSFC_NPIVCapabilities_DhChapAvailableOnPhysicalPort_ID = 1,MSFC_NPIVCapabilities_DhChapAvailableOnVirtualPorts_ID = 2,MSFC_NPIVCapabilities_MaxVirtualPortCount_ID = 3,};
enum MACRO_MSPower {MSPower_DeviceEnable_Enable_ID = 1,MSPower_DeviceWakeEnable_Enable_ID = 1,};
enum MACRO_MSiSCSI {MSiSCSI_TCPIPConfig_UseLinkLocalAddress_ID = 1,MSiSCSI_TCPIPConfig_EnableDHCP_ID = 2,MSiSCSI_TCPIPConfig_UseDHCPForDNS_ID = 3,MSiSCSI_TCPIPConfig_IPVersions_ID = 4,MSiSCSI_TCPIPConfig_IpAddress_ID = 5,MSiSCSI_TCPIPConfig_DefaultGateway_ID = 6,MSiSCSI_TCPIPConfig_SubnetMask_ID = 7,MSiSCSI_TCPIPConfig_PreferredDNSServer_ID = 8,MSiSCSI_TCPIPConfig_AlternateDNSServer_ID = 9,MSiSCSI_NICConfig_LinkSpeed_ID = 1,MSiSCSI_NICConfig_MaxLinkSpeed_ID = 2,MSiSCSI_NICConfig_LinkState_ID = 3,MSiSCSI_NICConfig_MaxFrameSize_ID = 4,MSiSCSI_NICConfig_MacAddress_ID = 5,MSiSCSI_BootConfiguration_LUN_ID = 1,MSiSCSI_BootConfiguration_SecurityFlags_ID = 2,MSiSCSI_BootConfiguration_UsernameSize_ID = 3,MSiSCSI_BootConfiguration_PasswordSize_ID = 4,MSiSCSI_BootConfiguration_DiscoverBootDevice_ID = 5,MSiSCSI_BootConfiguration_InitiatorNode_ID = 6,MSiSCSI_BootConfiguration_TargetName_ID = 7,MSiSCSI_BootConfiguration_TargetPortal_ID = 8,MSiSCSI_BootConfiguration_LoginOptions_ID = 9,MSiSCSI_BootConfiguration_Username_ID = 10,MSiSCSI_BootConfiguration_Password_ID = 11,MSiSCSI_SecurityCapabilities_ProtectiScsiTraffic_ID = 1,MSiSCSI_SecurityCapabilities_ProtectiSNSTraffic_ID = 2,MSiSCSI_SecurityCapabilities_CertificatesSupported_ID = 3,MSiSCSI_SecurityCapabilities_EncryptionAvailableCount_ID = 4,MSiSCSI_SecurityCapabilities_EncryptionAvailable_ID = 5,MSiSCSI_DiscoveryConfig_PerformiSNSDiscovery_ID = 1,MSiSCSI_DiscoveryConfig_PerformSLPDiscovery_ID = 2,MSiSCSI_DiscoveryConfig_AutomaticiSNSDiscovery_ID = 3,MSiSCSI_DiscoveryConfig_InitiatorName_ID = 4,MSiSCSI_DiscoveryConfig_iSNSServer_ID = 5,MSiSCSI_RADIUSConfig_UseRADIUSForCHAP_ID = 1,MSiSCSI_RADIUSConfig_SharedSecretSizeInBytes_ID = 2,MSiSCSI_RADIUSConfig_RADIUSServer_ID = 3,MSiSCSI_RADIUSConfig_BackupRADIUSServer_ID = 4,MSiSCSI_RADIUSConfig_Reserved_ID = 5,MSiSCSI_RADIUSConfig_SharedSecret_ID = 6,};
enum MACRO_NDISWAN {NDISWAN_COMPRESSION = 0x1,NDISWAN_ENCRYPTION = 0x10,NDISWAN_40_ENCRYPTION = 0x20,NDISWAN_128_ENCRYPTION = 0x40,NDISWAN_56_ENCRYPTION = 0x80,NDISWAN_HISTORY_LESS = 0x1000000,};
enum MACRO_NDIS_CO {NDIS_CO_CLIENT_OPTIONAL_HANDLERS_REVISION_1 = 1,NDIS_CO_CALL_MANAGER_OPTIONAL_HANDLERS_REVISION_1 = 1,NDIS_FILTER_ATTACH_FLAGS_IGNORE_MANDATORY = 1,NDIS_FILTER_ATTACH_PARAMETERS_REVISION_1 = 1,NDIS_FILTER_ATTACH_PARAMETERS_REVISION_2 = 2,NDIS_FILTER_ATTACH_PARAMETERS_REVISION_3 = 3,NDIS_FILTER_RESTART_PARAMETERS_REVISION_1 = 1,NDIS_FILTER_PAUSE_PARAMETERS_REVISION_1 = 1,NDIS_FILTER_PARTIAL_CHARACTERISTICS_REVISION_1 = 1,NDIS_FILTER_DRIVER_MANDATORY = 1,NDIS_FILTER_CHARACTERISTICS_REVISION_1 = 1,NDIS_FILTER_CHARACTERISTICS_REVISION_2 = 2,NDIS_FILTER_ATTRIBUTES_REVISION_1 = 1,};
enum MACRO_NDIS_IP {NDIS_IP_OPER_STATUS_INFO_REVISION_1 = 1,NDIS_IP_OPER_STATE_REVISION_1 = 1,NDIS_OFFLOAD_PARAMETERS_NO_CHANGE = 0,NDIS_OFFLOAD_PARAMETERS_TX_RX_DISABLED = 1,NDIS_OFFLOAD_PARAMETERS_TX_ENABLED_RX_DISABLED = 2,NDIS_OFFLOAD_PARAMETERS_RX_ENABLED_TX_DISABLED = 3,NDIS_OFFLOAD_PARAMETERS_TX_RX_ENABLED = 4,NDIS_OFFLOAD_PARAMETERS_LSOV1_DISABLED = 1,NDIS_OFFLOAD_PARAMETERS_LSOV1_ENABLED = 2,NDIS_OFFLOAD_PARAMETERS_IPSECV1_DISABLED = 1,NDIS_OFFLOAD_PARAMETERS_IPSECV1_AH_ENABLED = 2,NDIS_OFFLOAD_PARAMETERS_IPSECV1_ESP_ENABLED = 3,NDIS_OFFLOAD_PARAMETERS_IPSECV1_AH_AND_ESP_ENABLED = 4,NDIS_OFFLOAD_PARAMETERS_LSOV2_DISABLED = 1,NDIS_OFFLOAD_PARAMETERS_LSOV2_ENABLED = 2,NDIS_OFFLOAD_PARAMETERS_IPSECV2_DISABLED = 1,NDIS_OFFLOAD_PARAMETERS_IPSECV2_AH_ENABLED = 2,NDIS_OFFLOAD_PARAMETERS_IPSECV2_ESP_ENABLED = 3,NDIS_OFFLOAD_PARAMETERS_IPSECV2_AH_AND_ESP_ENABLED = 4,NDIS_OFFLOAD_PARAMETERS_CONNECTION_OFFLOAD_DISABLED = 1,NDIS_OFFLOAD_PARAMETERS_CONNECTION_OFFLOAD_ENABLED = 2,NDIS_OFFLOAD_PARAMETERS_REVISION_1 = 1,NDIS_OFFLOAD_PARAMETERS_REVISION_2 = 2,NDIS_OFFLOAD_NOT_SUPPORTED = 0,NDIS_OFFLOAD_SUPPORTED = 1,NDIS_OFFLOAD_SET_NO_CHANGE = 0,NDIS_OFFLOAD_SET_ON = 1,NDIS_OFFLOAD_SET_OFF = 2,NDIS_ENCAPSULATION_NOT_SUPPORTED = 0,NDIS_ENCAPSULATION_NULL = 1,NDIS_ENCAPSULATION_IEEE_802_3 = 2,NDIS_ENCAPSULATION_IEEE_802_3_P_AND_Q = 4,NDIS_ENCAPSULATION_IEEE_802_3_P_AND_Q_IN_OOB = 8,NDIS_ENCAPSULATION_IEEE_LLC_SNAP_ROUTED = 16,};
enum MACRO_NDIS_NT {NDIS_NT = 1,};
enum MACRO_NDIS_PM {NDIS_PM_MAX_PATTERN_ID = 0xFFFF,NDIS_PM_PRIVATE_PATTERN_ID = 0x1,NDIS_PM_WOL_PATTERN_REVISION_1 = 0x1,};
enum MACRO_NETROOT {NETROOT_FLAG_SUPPORTS_SYMBOLIC_LINKS = 0x1,NETROOT_FLAG_DFS_AWARE_NETROOT = 0x2,NETROOT_FLAG_DEFER_READAHEAD = 0x4,NETROOT_FLAG_VOLUMEID_INITIALIZED = 0x8,NETROOT_FLAG_FINALIZE_INVOKED = 0x10,NETROOT_FLAG_UNIQUE_FILE_NAME = 0x20,};
enum MACRO_NETWORK {NETWORK_BOOT_INITIALIZATION_FAILED = 0xBB,NETWORK_BOOT_DUPLICATE_ADDRESS = 0xBC,};
enum MACRO_NET_DFS {NET_DFS_ENUM = 0x400038A4,NET_DFS_ENUMEX = 0x400038A5,};
enum MACRO_NOERROR {NOERROR = 0,};
enum MACRO_NOMINAL {NOMINAL_CYCLE_TIME = 125,};
enum MACRO_NO_BOOT {NO_BOOT_DEVICE = 0x53,};
enum MACRO_NO_MORE {NO_MORE_IRP_STACK_LOCATIONS = 0x35,};
enum MACRO_NO_SPIN {NO_SPIN_LOCK_AVAILABLE = 0x1D,};
enum MACRO_NO_SUCH {NO_SUCH_PARTITION = 0x43,};
enum MACRO_NO_USER {NO_USER_MODE_CONTEXT = 0xE,};
enum MACRO_NWF_WFD {NWF_WFD_DEVICE_OID = 0x5,NWF_WFD_ROLE_OID = 0x6,};
enum MACRO_OFFLOAD {OFFLOAD_READ_FLAG_ALL_ZERO_BEYOND_CURRENT_RANGE = 1,};
enum MACRO_OID_802 {OID_802_3_RCV_ERROR_ALIGNMENT = 0x1020101,OID_802_3_XMIT_ONE_COLLISION = 0x1020102,OID_802_3_XMIT_MORE_COLLISIONS = 0x1020103,OID_802_3_XMIT_DEFERRED = 0x1020201,OID_802_3_XMIT_MAX_COLLISIONS = 0x1020202,OID_802_3_RCV_OVERRUN = 0x1020203,OID_802_3_XMIT_UNDERRUN = 0x1020204,OID_802_3_XMIT_HEARTBEAT_FAILURE = 0x1020205,OID_802_3_XMIT_TIMES_CRS_LOST = 0x1020206,OID_802_3_XMIT_LATE_COLLISIONS = 0x1020207,OID_802_3_ADD_MULTICAST_ADDRESS = 0x1010208,OID_802_3_DELETE_MULTICAST_ADDRESS = 0x1010209,OID_802_5_PERMANENT_ADDRESS = 0x2010101,OID_802_5_CURRENT_ADDRESS = 0x2010102,OID_802_5_CURRENT_FUNCTIONAL = 0x2010103,OID_802_5_CURRENT_GROUP = 0x2010104,OID_802_5_LAST_OPEN_STATUS = 0x2010105,OID_802_5_CURRENT_RING_STATUS = 0x2010106,OID_802_5_CURRENT_RING_STATE = 0x2010107,OID_802_5_LINE_ERRORS = 0x2020101,OID_802_5_LOST_FRAMES = 0x2020102,OID_802_5_BURST_ERRORS = 0x2020201,OID_802_5_AC_ERRORS = 0x2020202,OID_802_5_ABORT_DELIMETERS = 0x2020203,OID_802_5_FRAME_COPIED_ERRORS = 0x2020204,OID_802_5_FREQUENCY_ERRORS = 0x2020205,OID_802_5_TOKEN_ERRORS = 0x2020206,OID_802_5_INTERNAL_ERRORS = 0x2020207,OID_FDDI_LONG_PERMANENT_ADDR = 0x3010101,OID_FDDI_LONG_CURRENT_ADDR = 0x3010102,OID_FDDI_LONG_MULTICAST_LIST = 0x3010103,OID_FDDI_LONG_MAX_LIST_SIZE = 0x3010104,OID_FDDI_SHORT_PERMANENT_ADDR = 0x3010105,OID_FDDI_SHORT_CURRENT_ADDR = 0x3010106,OID_FDDI_SHORT_MULTICAST_LIST = 0x3010107,OID_FDDI_SHORT_MAX_LIST_SIZE = 0x3010108,OID_FDDI_ATTACHMENT_TYPE = 0x3020101,OID_FDDI_UPSTREAM_NODE_LONG = 0x3020102,OID_FDDI_DOWNSTREAM_NODE_LONG = 0x3020103,OID_FDDI_FRAME_ERRORS = 0x3020104,OID_FDDI_FRAMES_LOST = 0x3020105,OID_FDDI_RING_MGT_STATE = 0x3020106,OID_FDDI_LCT_FAILURES = 0x3020107,OID_FDDI_LEM_REJECTS = 0x3020108,OID_FDDI_LCONNECTION_STATE = 0x3020109,OID_FDDI_SMT_STATION_ID = 0x3030201,OID_FDDI_SMT_OP_VERSION_ID = 0x3030202,OID_FDDI_SMT_HI_VERSION_ID = 0x3030203,OID_FDDI_SMT_LO_VERSION_ID = 0x3030204,OID_FDDI_SMT_MANUFACTURER_DATA = 0x3030205,OID_FDDI_SMT_USER_DATA = 0x3030206,OID_FDDI_SMT_MIB_VERSION_ID = 0x3030207,OID_FDDI_SMT_MAC_CT = 0x3030208,OID_FDDI_SMT_NON_MASTER_CT = 0x3030209,OID_FDDI_SMT_MASTER_CT = 0x303020A,OID_FDDI_SMT_AVAILABLE_PATHS = 0x303020B,OID_FDDI_SMT_CONFIG_CAPABILITIES = 0x303020C,OID_FDDI_SMT_CONFIG_POLICY = 0x303020D,OID_FDDI_SMT_CONNECTION_POLICY = 0x303020E,OID_FDDI_SMT_T_NOTIFY = 0x303020F,OID_FDDI_SMT_STAT_RPT_POLICY = 0x3030210,OID_FDDI_SMT_TRACE_MAX_EXPIRATION = 0x3030211,OID_FDDI_SMT_PORT_INDEXES = 0x3030212,OID_FDDI_SMT_MAC_INDEXES = 0x3030213,OID_FDDI_SMT_BYPASS_PRESENT = 0x3030214,OID_FDDI_SMT_ECM_STATE = 0x3030215,OID_FDDI_SMT_CF_STATE = 0x3030216,OID_FDDI_SMT_HOLD_STATE = 0x3030217,OID_FDDI_SMT_REMOTE_DISCONNECT_FLAG = 0x3030218,OID_FDDI_SMT_STATION_STATUS = 0x3030219,OID_FDDI_SMT_PEER_WRAP_FLAG = 0x303021A,OID_FDDI_SMT_MSG_TIME_STAMP = 0x303021B,OID_FDDI_SMT_TRANSITION_TIME_STAMP = 0x303021C,OID_FDDI_SMT_SET_COUNT = 0x303021D,OID_FDDI_SMT_LAST_SET_STATION_ID = 0x303021E,OID_FDDI_MAC_FRAME_STATUS_FUNCTIONS = 0x303021F,OID_FDDI_MAC_BRIDGE_FUNCTIONS = 0x3030220,OID_FDDI_MAC_T_MAX_CAPABILITY = 0x3030221,OID_FDDI_MAC_TVX_CAPABILITY = 0x3030222,OID_FDDI_MAC_AVAILABLE_PATHS = 0x3030223,OID_FDDI_MAC_CURRENT_PATH = 0x3030224,OID_FDDI_MAC_UPSTREAM_NBR = 0x3030225,OID_FDDI_MAC_DOWNSTREAM_NBR = 0x3030226,OID_FDDI_MAC_OLD_UPSTREAM_NBR = 0x3030227,OID_FDDI_MAC_OLD_DOWNSTREAM_NBR = 0x3030228,OID_FDDI_MAC_DUP_ADDRESS_TEST = 0x3030229,OID_FDDI_MAC_REQUESTED_PATHS = 0x303022A,OID_FDDI_MAC_DOWNSTREAM_PORT_TYPE = 0x303022B,OID_FDDI_MAC_INDEX = 0x303022C,OID_FDDI_MAC_SMT_ADDRESS = 0x303022D,OID_FDDI_MAC_LONG_GRP_ADDRESS = 0x303022E,OID_FDDI_MAC_SHORT_GRP_ADDRESS = 0x303022F,OID_FDDI_MAC_T_REQ = 0x3030230,OID_FDDI_MAC_T_NEG = 0x3030231,OID_FDDI_MAC_T_MAX = 0x3030232,OID_FDDI_MAC_TVX_VALUE = 0x3030233,OID_FDDI_MAC_T_PRI0 = 0x3030234,OID_FDDI_MAC_T_PRI1 = 0x3030235,OID_FDDI_MAC_T_PRI2 = 0x3030236,OID_FDDI_MAC_T_PRI3 = 0x3030237,OID_FDDI_MAC_T_PRI4 = 0x3030238,OID_FDDI_MAC_T_PRI5 = 0x3030239,OID_FDDI_MAC_T_PRI6 = 0x303023A,OID_FDDI_MAC_FRAME_CT = 0x303023B,OID_FDDI_MAC_COPIED_CT = 0x303023C,OID_FDDI_MAC_TRANSMIT_CT = 0x303023D,OID_FDDI_MAC_TOKEN_CT = 0x303023E,OID_FDDI_MAC_ERROR_CT = 0x303023F,OID_FDDI_MAC_LOST_CT = 0x3030240,OID_FDDI_MAC_TVX_EXPIRED_CT = 0x3030241,OID_FDDI_MAC_NOT_COPIED_CT = 0x3030242,OID_FDDI_MAC_LATE_CT = 0x3030243,OID_FDDI_MAC_RING_OP_CT = 0x3030244,OID_FDDI_MAC_FRAME_ERROR_THRESHOLD = 0x3030245,OID_FDDI_MAC_FRAME_ERROR_RATIO = 0x3030246,OID_FDDI_MAC_NOT_COPIED_THRESHOLD = 0x3030247,OID_FDDI_MAC_NOT_COPIED_RATIO = 0x3030248,OID_FDDI_MAC_RMT_STATE = 0x3030249,OID_FDDI_MAC_DA_FLAG = 0x303024A,OID_FDDI_MAC_UNDA_FLAG = 0x303024B,OID_FDDI_MAC_FRAME_ERROR_FLAG = 0x303024C,OID_FDDI_MAC_NOT_COPIED_FLAG = 0x303024D,OID_FDDI_MAC_MA_UNITDATA_AVAILABLE = 0x303024E,OID_FDDI_MAC_HARDWARE_PRESENT = 0x303024F,OID_FDDI_MAC_MA_UNITDATA_ENABLE = 0x3030250,OID_FDDI_PATH_INDEX = 0x3030251,OID_FDDI_PATH_RING_LATENCY = 0x3030252,OID_FDDI_PATH_TRACE_STATUS = 0x3030253,OID_FDDI_PATH_SBA_PAYLOAD = 0x3030254,OID_FDDI_PATH_SBA_OVERHEAD = 0x3030255,OID_FDDI_PATH_CONFIGURATION = 0x3030256,OID_FDDI_PATH_T_R_MODE = 0x3030257,OID_FDDI_PATH_SBA_AVAILABLE = 0x3030258,OID_FDDI_PATH_TVX_LOWER_BOUND = 0x3030259,OID_FDDI_PATH_T_MAX_LOWER_BOUND = 0x303025A,OID_FDDI_PATH_MAX_T_REQ = 0x303025B,OID_FDDI_PORT_MY_TYPE = 0x303025C,OID_FDDI_PORT_NEIGHBOR_TYPE = 0x303025D,OID_FDDI_PORT_CONNECTION_POLICIES = 0x303025E,OID_FDDI_PORT_MAC_INDICATED = 0x303025F,OID_FDDI_PORT_CURRENT_PATH = 0x3030260,OID_FDDI_PORT_REQUESTED_PATHS = 0x3030261,OID_FDDI_PORT_MAC_PLACEMENT = 0x3030262,OID_FDDI_PORT_AVAILABLE_PATHS = 0x3030263,OID_FDDI_PORT_MAC_LOOP_TIME = 0x3030264,OID_FDDI_PORT_PMD_CLASS = 0x3030265,OID_FDDI_PORT_CONNECTION_CAPABILITIES = 0x3030266,OID_FDDI_PORT_INDEX = 0x3030267,OID_FDDI_PORT_MAINT_LS = 0x3030268,OID_FDDI_PORT_BS_FLAG = 0x3030269,OID_FDDI_PORT_PC_LS = 0x303026A,OID_FDDI_PORT_EB_ERROR_CT = 0x303026B,OID_FDDI_PORT_LCT_FAIL_CT = 0x303026C,OID_FDDI_PORT_LER_ESTIMATE = 0x303026D,OID_FDDI_PORT_LEM_REJECT_CT = 0x303026E,OID_FDDI_PORT_LEM_CT = 0x303026F,OID_FDDI_PORT_LER_CUTOFF = 0x3030270,OID_FDDI_PORT_LER_ALARM = 0x3030271,OID_FDDI_PORT_CONNNECT_STATE = 0x3030272,OID_FDDI_PORT_PCM_STATE = 0x3030273,OID_FDDI_PORT_PC_WITHHOLD = 0x3030274,OID_FDDI_PORT_LER_FLAG = 0x3030275,OID_FDDI_PORT_HARDWARE_PRESENT = 0x3030276,OID_FDDI_SMT_STATION_ACTION = 0x3030277,OID_FDDI_PORT_ACTION = 0x3030278,OID_FDDI_IF_DESCR = 0x3030279,OID_FDDI_IF_TYPE = 0x303027A,OID_FDDI_IF_MTU = 0x303027B,OID_FDDI_IF_SPEED = 0x303027C,OID_FDDI_IF_PHYS_ADDRESS = 0x303027D,OID_FDDI_IF_ADMIN_STATUS = 0x303027E,OID_FDDI_IF_OPER_STATUS = 0x303027F,OID_FDDI_IF_LAST_CHANGE = 0x3030280,OID_FDDI_IF_IN_OCTETS = 0x3030281,OID_FDDI_IF_IN_UCAST_PKTS = 0x3030282,OID_FDDI_IF_IN_NUCAST_PKTS = 0x3030283,OID_FDDI_IF_IN_DISCARDS = 0x3030284,OID_FDDI_IF_IN_ERRORS = 0x3030285,OID_FDDI_IF_IN_UNKNOWN_PROTOS = 0x3030286,OID_FDDI_IF_OUT_OCTETS = 0x3030287,OID_FDDI_IF_OUT_UCAST_PKTS = 0x3030288,OID_FDDI_IF_OUT_NUCAST_PKTS = 0x3030289,OID_FDDI_IF_OUT_DISCARDS = 0x303028A,OID_FDDI_IF_OUT_ERRORS = 0x303028B,OID_FDDI_IF_OUT_QLEN = 0x303028C,OID_FDDI_IF_SPECIFIC = 0x303028D,OID_WAN_PERMANENT_ADDRESS = 0x4010101,OID_WAN_CURRENT_ADDRESS = 0x4010102,OID_WAN_QUALITY_OF_SERVICE = 0x4010103,OID_WAN_PROTOCOL_TYPE = 0x4010104,OID_WAN_MEDIUM_SUBTYPE = 0x4010105,OID_WAN_HEADER_FORMAT = 0x4010106,OID_WAN_GET_INFO = 0x4010107,OID_WAN_SET_LINK_INFO = 0x4010108,OID_WAN_GET_LINK_INFO = 0x4010109,OID_WAN_LINE_COUNT = 0x401010A,OID_WAN_PROTOCOL_CAPS = 0x401010B,OID_WAN_GET_BRIDGE_INFO = 0x401020A,OID_WAN_SET_BRIDGE_INFO = 0x401020B,OID_WAN_GET_COMP_INFO = 0x401020C,OID_WAN_SET_COMP_INFO = 0x401020D,OID_WAN_GET_STATS_INFO = 0x401020E,OID_WAN_CO_GET_INFO = 0x4010180,OID_WAN_CO_SET_LINK_INFO = 0x4010181,OID_WAN_CO_GET_LINK_INFO = 0x4010182,OID_WAN_CO_GET_COMP_INFO = 0x4010280,OID_WAN_CO_SET_COMP_INFO = 0x4010281,OID_WAN_CO_GET_STATS_INFO = 0x4010282,OID_LTALK_CURRENT_NODE_ID = 0x5010102,OID_LTALK_IN_BROADCASTS = 0x5020101,OID_LTALK_IN_LENGTH_ERRORS = 0x5020102,OID_LTALK_OUT_NO_HANDLERS = 0x5020201,OID_LTALK_COLLISIONS = 0x5020202,OID_LTALK_DEFERS = 0x5020203,OID_LTALK_NO_DATA_ERRORS = 0x5020204,OID_LTALK_RANDOM_CTS_ERRORS = 0x5020205,OID_LTALK_FCS_ERRORS = 0x5020206,OID_ARCNET_PERMANENT_ADDRESS = 0x6010101,OID_ARCNET_CURRENT_ADDRESS = 0x6010102,OID_ARCNET_RECONFIGURATIONS = 0x6020201,OID_TAPI_ACCEPT = 0x7030101,OID_TAPI_ANSWER = 0x7030102,OID_TAPI_CLOSE = 0x7030103,OID_TAPI_CLOSE_CALL = 0x7030104,OID_TAPI_CONDITIONAL_MEDIA_DETECTION = 0x7030105,OID_TAPI_CONFIG_DIALOG = 0x7030106,OID_TAPI_DEV_SPECIFIC = 0x7030107,OID_TAPI_DIAL = 0x7030108,OID_TAPI_DROP = 0x7030109,OID_TAPI_GET_ADDRESS_CAPS = 0x703010A,OID_TAPI_GET_ADDRESS_ID = 0x703010B,OID_TAPI_GET_ADDRESS_STATUS = 0x703010C,OID_TAPI_GET_CALL_ADDRESS_ID = 0x703010D,OID_TAPI_GET_CALL_INFO = 0x703010E,OID_TAPI_GET_CALL_STATUS = 0x703010F,OID_TAPI_GET_DEV_CAPS = 0x7030110,OID_TAPI_GET_DEV_CONFIG = 0x7030111,OID_TAPI_GET_EXTENSION_ID = 0x7030112,OID_TAPI_GET_ID = 0x7030113,OID_TAPI_GET_LINE_DEV_STATUS = 0x7030114,OID_TAPI_MAKE_CALL = 0x7030115,OID_TAPI_NEGOTIATE_EXT_VERSION = 0x7030116,OID_TAPI_OPEN = 0x7030117,OID_TAPI_PROVIDER_INITIALIZE = 0x7030118,OID_TAPI_PROVIDER_SHUTDOWN = 0x7030119,OID_TAPI_SECURE_CALL = 0x703011A,OID_TAPI_SELECT_EXT_VERSION = 0x703011B,OID_TAPI_SEND_USER_USER_INFO = 0x703011C,OID_TAPI_SET_APP_SPECIFIC = 0x703011D,OID_TAPI_SET_CALL_PARAMS = 0x703011E,OID_TAPI_SET_DEFAULT_MEDIA_DETECTION = 0x703011F,OID_TAPI_SET_DEV_CONFIG = 0x7030120,OID_TAPI_SET_MEDIA_MODE = 0x7030121,OID_TAPI_SET_STATUS_MESSAGES = 0x7030122,OID_TAPI_GATHER_DIGITS = 0x7030123,OID_TAPI_MONITOR_DIGITS = 0x7030124,OID_ATM_SUPPORTED_VC_RATES = 0x8010101,OID_ATM_SUPPORTED_SERVICE_CATEGORY = 0x8010102,OID_ATM_SUPPORTED_AAL_TYPES = 0x8010103,OID_ATM_HW_CURRENT_ADDRESS = 0x8010104,OID_ATM_MAX_ACTIVE_VCS = 0x8010105,OID_ATM_MAX_ACTIVE_VCI_BITS = 0x8010106,OID_ATM_MAX_ACTIVE_VPI_BITS = 0x8010107,OID_ATM_MAX_AAL0_PACKET_SIZE = 0x8010108,OID_ATM_MAX_AAL1_PACKET_SIZE = 0x8010109,OID_ATM_MAX_AAL34_PACKET_SIZE = 0x801010A,OID_ATM_MAX_AAL5_PACKET_SIZE = 0x801010B,OID_ATM_SIGNALING_VPIVCI = 0x8010201,OID_ATM_ASSIGNED_VPI = 0x8010202,OID_ATM_ACQUIRE_ACCESS_NET_RESOURCES = 0x8010203,OID_ATM_RELEASE_ACCESS_NET_RESOURCES = 0x8010204,OID_ATM_ILMI_VPIVCI = 0x8010205,OID_ATM_DIGITAL_BROADCAST_VPIVCI = 0x8010206,OID_ATM_GET_NEAREST_FLOW = 0x8010207,OID_ATM_ALIGNMENT_REQUIRED = 0x8010208,OID_ATM_LECS_ADDRESS = 0x8010209,OID_ATM_SERVICE_ADDRESS = 0x801020A,OID_ATM_CALL_PROCEEDING = 0x801020B,OID_ATM_CALL_ALERTING = 0x801020C,OID_ATM_PARTY_ALERTING = 0x801020D,OID_ATM_CALL_NOTIFY = 0x801020E,OID_ATM_MY_IP_NM_ADDRESS = 0x801020F,OID_ATM_RCV_CELLS_OK = 0x8020101,OID_ATM_XMIT_CELLS_OK = 0x8020102,OID_ATM_RCV_CELLS_DROPPED = 0x8020103,OID_ATM_RCV_INVALID_VPI_VCI = 0x8020201,OID_ATM_CELLS_HEC_ERROR = 0x8020202,OID_ATM_RCV_REASSEMBLY_ERROR = 0x8020203,OID_802_11_BSSID = 0xD010101,OID_802_11_SSID = 0xD010102,OID_802_11_NETWORK_TYPES_SUPPORTED = 0xD010203,OID_802_11_NETWORK_TYPE_IN_USE = 0xD010204,OID_802_11_TX_POWER_LEVEL = 0xD010205,OID_802_11_RSSI = 0xD010206,OID_802_11_RSSI_TRIGGER = 0xD010207,OID_802_11_INFRASTRUCTURE_MODE = 0xD010108,OID_802_11_FRAGMENTATION_THRESHOLD = 0xD010209,OID_802_11_RTS_THRESHOLD = 0xD01020A,OID_802_11_NUMBER_OF_ANTENNAS = 0xD01020B,OID_802_11_RX_ANTENNA_SELECTED = 0xD01020C,OID_802_11_TX_ANTENNA_SELECTED = 0xD01020D,OID_802_11_SUPPORTED_RATES = 0xD01020E,OID_802_11_DESIRED_RATES = 0xD010210,OID_802_11_CONFIGURATION = 0xD010211,OID_802_11_STATISTICS = 0xD020212,OID_802_11_ADD_WEP = 0xD010113,OID_802_11_REMOVE_WEP = 0xD010114,OID_802_11_DISASSOCIATE = 0xD010115,OID_802_11_POWER_MODE = 0xD010216,OID_802_11_BSSID_LIST = 0xD010217,OID_802_11_AUTHENTICATION_MODE = 0xD010118,OID_802_11_PRIVACY_FILTER = 0xD010119,OID_802_11_BSSID_LIST_SCAN = 0xD01011A,OID_802_11_WEP_STATUS = 0xD01011B,OID_802_11_ENCRYPTION_STATUS = 0xD01011B,OID_802_11_RELOAD_DEFAULTS = 0xD01011C,OID_802_11_ADD_KEY = 0xD01011D,OID_802_11_REMOVE_KEY = 0xD01011E,OID_802_11_ASSOCIATION_INFORMATION = 0xD01011F,OID_802_11_TEST = 0xD010120,OID_802_11_MEDIA_STREAM_MODE = 0xD010121,OID_802_11_CAPABILITY = 0xD010122,OID_802_11_PMKID = 0xD010123,OID_802_11_NON_BCAST_SSID_LIST = 0xD010124,OID_802_11_RADIO_STATUS = 0xD010125,};
enum MACRO_OID_TCP {OID_TCP_TASK_OFFLOAD = 0xFC010201,OID_TCP_TASK_IPSEC_ADD_SA = 0xFC010202,OID_TCP_TASK_IPSEC_DELETE_SA = 0xFC010203,OID_TCP_SAN_SUPPORT = 0xFC010204,OID_TCP_TASK_IPSEC_ADD_UDPESP_SA = 0xFC010205,OID_TCP_TASK_IPSEC_DELETE_UDPESP_SA = 0xFC010206,OID_TCP4_OFFLOAD_STATS = 0xFC010207,OID_TCP6_OFFLOAD_STATS = 0xFC010208,OID_IP4_OFFLOAD_STATS = 0xFC010209,OID_IP6_OFFLOAD_STATS = 0xFC01020A,OID_TCP_OFFLOAD_CURRENT_CONFIG = 0xFC01020B,OID_TCP_OFFLOAD_PARAMETERS = 0xFC01020C,OID_TCP_OFFLOAD_HARDWARE_CAPABILITIES = 0xFC01020D,OID_TCP_CONNECTION_OFFLOAD_CURRENT_CONFIG = 0xFC01020E,OID_TCP_CONNECTION_OFFLOAD_HARDWARE_CAPABILITIES = 0xFC01020F,OID_OFFLOAD_ENCAPSULATION = 0x101010A,OID_TCP_TASK_IPSEC_OFFLOAD_V2_ADD_SA = 0xFC030202,OID_TCP_TASK_IPSEC_OFFLOAD_V2_DELETE_SA = 0xFC030203,OID_TCP_TASK_IPSEC_OFFLOAD_V2_UPDATE_SA = 0xFC030204,OID_FFP_SUPPORT = 0xFC010210,OID_FFP_FLUSH = 0xFC010211,OID_FFP_CONTROL = 0xFC010212,OID_FFP_PARAMS = 0xFC010213,OID_FFP_DATA = 0xFC010214,OID_FFP_DRIVER_STATS = 0xFC020210,OID_FFP_ADAPTER_STATS = 0xFC020211,OID_TCP_CONNECTION_OFFLOAD_PARAMETERS = 0xFC030201,OID_TUNNEL_INTERFACE_SET_OID = 0xF010106,OID_TUNNEL_INTERFACE_RELEASE_OID = 0xF010107,OID_QOS_RESERVED1 = 0xFB010100,OID_QOS_RESERVED2 = 0xFB010101,OID_QOS_RESERVED3 = 0xFB010102,OID_QOS_RESERVED4 = 0xFB010103,OID_QOS_RESERVED5 = 0xFB010104,OID_QOS_RESERVED6 = 0xFB010105,OID_QOS_RESERVED7 = 0xFB010106,OID_QOS_RESERVED8 = 0xFB010107,OID_QOS_RESERVED9 = 0xFB010108,OID_QOS_RESERVED10 = 0xFB010109,OID_QOS_RESERVED11 = 0xFB01010A,OID_QOS_RESERVED12 = 0xFB01010B,OID_QOS_RESERVED13 = 0xFB01010C,OID_QOS_RESERVED14 = 0xFB01010D,OID_QOS_RESERVED15 = 0xFB01010E,OID_QOS_RESERVED16 = 0xFB01010F,OID_QOS_RESERVED17 = 0xFB010110,OID_QOS_RESERVED18 = 0xFB010111,OID_QOS_RESERVED19 = 0xFB010112,OID_QOS_RESERVED20 = 0xFB010113,};
enum MACRO_PARCHIP {PARCHIP_ECR_ARBITRATOR = 1,};
enum MACRO_PARPORT {PARPORT_WMI_ALLOC_FREE_COUNTS_PortAllocates_ID = 1,PARPORT_WMI_ALLOC_FREE_COUNTS_PortFrees_ID = 2,};
enum MACRO_PASSIVE {PASSIVE_INTERRUPT_ERROR = 0x13B,};
enum MACRO_PCEVENT {PCEVENT_ITEM_FLAG_ENABLE = 1,PCEVENT_ITEM_FLAG_ONESHOT = 2,PCEVENT_ITEM_FLAG_BASICSUPPORT = 512,PCEVENT_VERB_NONE = 0,PCEVENT_VERB_ADD = 1,PCEVENT_VERB_REMOVE = 2,PCEVENT_VERB_SUPPORT = 4,};
enum MACRO_PCIXBUS {PCIXBUS_ERRTYPE_UNKNOWN = 0x0,PCIXBUS_ERRTYPE_DATAPARITY = 0x1,PCIXBUS_ERRTYPE_SYSTEM = 0x2,PCIXBUS_ERRTYPE_MASTERABORT = 0x3,PCIXBUS_ERRTYPE_BUSTIMEOUT = 0x4,PCIXBUS_ERRTYPE_MASTERDATAPARITY = 0x5,PCIXBUS_ERRTYPE_ADDRESSPARITY = 0x6,PCIXBUS_ERRTYPE_COMMANDPARITY = 0x7,};
enum MACRO_PCI_AGP {PCI_AGP_RATE_1X = 0x1,PCI_AGP_RATE_2X = 0x2,PCI_AGP_RATE_4X = 0x4,};
enum MACRO_PCI_EXP {PCI_EXP_WAK_BIT = 14,PCI_EXP_WAK = 16384,};
enum MACRO_PDOSCSI {PDOSCSI_ADDR_PortNumber_ID = 1,PDOSCSI_ADDR_ScsiPathId_ID = 2,PDOSCSI_ADDR_TargetId_ID = 3,PDOSCSI_ADDR_Lun_ID = 4,};
enum MACRO_PERSIST {PERSIST_E_SIZEDEFINITE = 0x800B0009,PERSIST_E_SIZEINDEFINITE = 0x800B000A,PERSIST_E_NOTSELFSIZING = 0x800B000B,};
enum MACRO_PINBALL {PINBALL_FILE_SYSTEM = 0x59,};
enum MACRO_POINTER {POINTER_PORT_WMI_STD_I8042 = 0,POINTER_PORT_WMI_STD_SERIAL = 1,POINTER_PORT_WMI_STD_USB = 2,POINTER_PORT_WMI_STD_DATA_ConnectorType_ID = 1,POINTER_PORT_WMI_STD_DATA_DataQueueSize_ID = 2,POINTER_PORT_WMI_STD_DATA_ErrorCount_ID = 3,POINTER_PORT_WMI_STD_DATA_Buttons_ID = 4,POINTER_PORT_WMI_STD_MOUSE = 0,POINTER_PORT_WMI_STD_POINTER = 1,POINTER_PORT_WMI_ABSOLUTE_POINTER = 2,POINTER_PORT_WMI_TABLET = 3,POINTER_PORT_WMI_TOUCH_SCRENE = 4,POINTER_PORT_WMI_PEN = 5,POINTER_PORT_WMI_TRACK_BALL = 6,POINTER_PORT_WMI_OTHER = 256,POINTER_PORT_WMI_STD_DATA_HardwareType_ID = 5,};
enum MACRO_PO_BITS {PO_BITS = 3,};
enum MACRO_PROCESS {PROCESS_HAS_LOCKED_PAGES = 0x76,};
enum MACRO_PRODUCT {PRODUCT_UNDEFINED = 0x0,PRODUCT_ULTIMATE = 0x1,PRODUCT_HOME_BASIC = 0x2,PRODUCT_HOME_PREMIUM = 0x3,PRODUCT_ENTERPRISE = 0x4,PRODUCT_HOME_BASIC_N = 0x5,PRODUCT_BUSINESS = 0x6,PRODUCT_STANDARD_SERVER = 0x7,PRODUCT_DATACENTER_SERVER = 0x8,PRODUCT_SMALLBUSINESS_SERVER = 0x9,PRODUCT_ENTERPRISE_SERVER = 0xA,PRODUCT_STARTER = 0xB,PRODUCT_DATACENTER_SERVER_CORE = 0xC,PRODUCT_STANDARD_SERVER_CORE = 0xD,PRODUCT_ENTERPRISE_SERVER_CORE = 0xE,PRODUCT_ENTERPRISE_SERVER_IA64 = 0xF,PRODUCT_BUSINESS_N = 0x10,PRODUCT_WEB_SERVER = 0x11,PRODUCT_CLUSTER_SERVER = 0x12,PRODUCT_HOME_SERVER = 0x13,PRODUCT_STORAGE_EXPRESS_SERVER = 0x14,PRODUCT_STORAGE_STANDARD_SERVER = 0x15,PRODUCT_STORAGE_WORKGROUP_SERVER = 0x16,PRODUCT_STORAGE_ENTERPRISE_SERVER = 0x17,PRODUCT_SERVER_FOR_SMALLBUSINESS = 0x18,PRODUCT_SMALLBUSINESS_SERVER_PREMIUM = 0x19,PRODUCT_HOME_PREMIUM_N = 0x1A,PRODUCT_ENTERPRISE_N = 0x1B,PRODUCT_ULTIMATE_N = 0x1C,PRODUCT_WEB_SERVER_CORE = 0x1D,PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT = 0x1E,PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY = 0x1F,PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING = 0x20,PRODUCT_SERVER_FOUNDATION = 0x21,PRODUCT_HOME_PREMIUM_SERVER = 0x22,PRODUCT_SERVER_FOR_SMALLBUSINESS_V = 0x23,PRODUCT_STANDARD_SERVER_V = 0x24,PRODUCT_DATACENTER_SERVER_V = 0x25,PRODUCT_ENTERPRISE_SERVER_V = 0x26,PRODUCT_DATACENTER_SERVER_CORE_V = 0x27,PRODUCT_STANDARD_SERVER_CORE_V = 0x28,PRODUCT_ENTERPRISE_SERVER_CORE_V = 0x29,PRODUCT_HYPERV = 0x2A,PRODUCT_STORAGE_EXPRESS_SERVER_CORE = 0x2B,PRODUCT_STORAGE_STANDARD_SERVER_CORE = 0x2C,PRODUCT_STORAGE_WORKGROUP_SERVER_CORE = 0x2D,PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE = 0x2E,PRODUCT_STARTER_N = 0x2F,PRODUCT_PROFESSIONAL = 0x30,PRODUCT_PROFESSIONAL_N = 0x31,PRODUCT_SB_SOLUTION_SERVER = 0x32,PRODUCT_SERVER_FOR_SB_SOLUTIONS = 0x33,PRODUCT_STANDARD_SERVER_SOLUTIONS = 0x34,PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE = 0x35,PRODUCT_SB_SOLUTION_SERVER_EM = 0x36,PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM = 0x37,PRODUCT_SOLUTION_EMBEDDEDSERVER = 0x38,PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE = 0x39,PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT = 0x3B,PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL = 0x3C,PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC = 0x3D,PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC = 0x3E,PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE = 0x3F,PRODUCT_CLUSTER_SERVER_V = 0x40,PRODUCT_EMBEDDED = 0x41,PRODUCT_STARTER_E = 0x42,PRODUCT_HOME_BASIC_E = 0x43,PRODUCT_HOME_PREMIUM_E = 0x44,PRODUCT_PROFESSIONAL_E = 0x45,PRODUCT_ENTERPRISE_E = 0x46,PRODUCT_ULTIMATE_E = 0x47,PRODUCT_ENTERPRISE_EVALUATION = 0x48,PRODUCT_MULTIPOINT_STANDARD_SERVER = 0x4C,PRODUCT_MULTIPOINT_PREMIUM_SERVER = 0x4D,PRODUCT_STANDARD_EVALUATION_SERVER = 0x4F,PRODUCT_DATACENTER_EVALUATION_SERVER = 0x50,PRODUCT_ENTERPRISE_N_EVALUATION = 0x54,PRODUCT_EMBEDDED_AUTOMOTIVE = 0x55,PRODUCT_EMBEDDED_INDUSTRY_A = 0x56,PRODUCT_THINPC = 0x57,PRODUCT_EMBEDDED_A = 0x58,PRODUCT_EMBEDDED_INDUSTRY = 0x59,PRODUCT_EMBEDDED_E = 0x5A,PRODUCT_EMBEDDED_INDUSTRY_E = 0x5B,PRODUCT_EMBEDDED_INDUSTRY_A_E = 0x5C,PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER = 0x5F,PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER = 0x60,PRODUCT_CORE_ARM = 0x61,PRODUCT_CORE_N = 0x62,PRODUCT_CORE_COUNTRYSPECIFIC = 0x63,PRODUCT_CORE_SINGLELANGUAGE = 0x64,PRODUCT_CORE = 0x65,PRODUCT_PROFESSIONAL_WMC = 0x67,PRODUCT_MOBILE_CORE = 0x68,PRODUCT_UNLICENSED = 0xABCDABCD,};
enum MACRO_QOS_NOT {QOS_NOT_SPECIFIED = 0xFFFFFFFF,};
enum MACRO_RAMDISK {RAMDISK_BOOT_INITIALIZATION_FAILED = 0xF8,};
enum MACRO_RECEIVE {RECEIVE_TIME_INDICATION = 0x1,};
enum MACRO_REDBOOK {REDBOOK_WMI_NUMBER_OF_BUFFERS_ID = 1,REDBOOK_WMI_SECTORS_PER_READ_ID = 2,REDBOOK_WMI_SECTORS_PER_READ_MASK_ID = 3,REDBOOK_WMI_MAX_SECTORS_PER_READ_ID = 4,REDBOOK_WMI_PLAY_ENABLED_ID = 5,REDBOOK_WMI_CDDA_SUPPORTED_ID = 6,REDBOOK_WMI_CDDA_ACCURATE_ID = 7,REDBOOK_WMI_STD_DATA_Reserved1_ID = 8,REDBOOK_WMI_PERF_TIME_READING_DELAY_ID = 1,REDBOOK_WMI_PERF_TIME_READING_ID = 2,REDBOOK_WMI_PERF_TIME_STREAMING_DELAY_ID = 3,REDBOOK_WMI_PERF_TIME_STREAMING_ID = 4,REDBOOK_WMI_PERF_DATA_PROCESSED_ID = 5,REDBOOK_WMI_PERF_STREAM_PAUSED_COUNT_ID = 6,};
enum MACRO_REMOVED {REMOVED_8DOT3_NAME = 0x2,};
enum MACRO_REPLACE {REPLACE_PRIMARY = 0xA,REPLACE_ALTERNATE = 0xB,};
enum MACRO_REQUEST {REQUEST_OPLOCK_INPUT_FLAG_REQUEST = 0x1,REQUEST_OPLOCK_INPUT_FLAG_ACK = 0x2,REQUEST_OPLOCK_INPUT_FLAG_COMPLETE_ACK_ON_CLOSE = 0x4,REQUEST_OPLOCK_CURRENT_VERSION = 0x1,REQUEST_OPLOCK_OUTPUT_FLAG_ACK_REQUIRED = 0x1,REQUEST_OPLOCK_OUTPUT_FLAG_MODES_PROVIDED = 0x2,};
enum MACRO_RESERVE {RESERVE_QUEUE_OVERFLOW = 0xFF,};
enum MACRO_RTL_RUN {RTL_RUN_ONCE_CHECK_ONLY = 0x1,RTL_RUN_ONCE_ASYNC = 0x2,RTL_RUN_ONCE_INIT_FAILED = 0x4,RTL_RUN_ONCE_CTX_RESERVED_BITS = 0x2,RTL_HASH_ALLOCATED_HEADER = 0x1,RTL_HASH_RESERVED_SIGNATURE = 0x0,RTL_STACK_WALKING_MODE_FRAMES_TO_SKIP_SHIFT = 0x8,};
enum MACRO_RXCE_VC {RXCE_VC_ACTIVE = 0xAA,RXCE_VC_DISCONNECTED = 0xDD,RXCE_VC_TEARDOWN = 0xBB,RXCE_SEND_EXPEDITED = 0x20,RXCE_SEND_NO_RESPONSE_EXPECTED = 0x80,RXCE_SEND_NON_BLOCKING = 0x100,RXCE_FLAGS_MASK = 0xFF000000,RXCE_SEND_SYNCHRONOUS = 0x10000000,RXCE_SEND_PARTIAL = 0x20000000,};
enum MACRO_SECTION {SECTION_QUERY = 0x1,SECTION_MAP_WRITE = 0x2,SECTION_MAP_READ = 0x4,SECTION_MAP_EXECUTE = 0x8,SECTION_EXTEND_SIZE = 0x10,SECTION_MAP_EXECUTE_EXPLICIT = 0x20,SECTION_ALL_ACCESS = 0xF001F,};
enum MACRO_SEGMENT {SEGMENT_ALL_ACCESS = 983071,};
enum MACRO_SERVICE {SERVICE_KERNEL_DRIVER = 0x1,SERVICE_FILE_SYSTEM_DRIVER = 0x2,SERVICE_ADAPTER = 0x4,SERVICE_RECOGNIZER_DRIVER = 0x8,SERVICE_DRIVER = 0xB,SERVICE_WIN32_OWN_PROCESS = 0x10,SERVICE_WIN32_SHARE_PROCESS = 0x20,SERVICE_WIN32 = 0x30,SERVICE_INTERACTIVE_PROCESS = 0x100,SERVICE_TYPE_ALL = 0x13F,SERVICE_BOOT_START = 0x0,SERVICE_SYSTEM_START = 0x1,SERVICE_AUTO_START = 0x2,SERVICE_DEMAND_START = 0x3,SERVICE_DISABLED = 0x4,SERVICE_ERROR_IGNORE = 0x0,SERVICE_ERROR_NORMAL = 0x1,SERVICE_ERROR_SEVERE = 0x2,SERVICE_ERROR_CRITICAL = 0x3,};
enum MACRO_SESSION {SESSION_HAS_VALID_POOL_ON_EXIT = 0xAB,};
enum MACRO_SIO_SET {SIO_SET_COMPATIBILITY_MODE = -1744830164,};
enum MACRO_SIO_WSK {SIO_WSK_SET_REMOTE_ADDRESS = 0x8F000001,SIO_WSK_REGISTER_EXTENSION = 0xCF000002,SIO_WSK_QUERY_IDEAL_SEND_BACKLOG = 0x4F000003,SIO_WSK_QUERY_RECEIVE_BACKLOG = 0x4F000004,SIO_WSK_QUERY_INSPECT_ID = 0x4F000005,SIO_WSK_SET_SENDTO_ADDRESS = 0x8F000006,SIO_WSK_SET_TCP_SILENT_MODE = 0x2F000007,};
enum MACRO_SMBDBG1 {SMBDBG1 = 0,};
enum MACRO_SMB_COM {SMB_COM_CREATE_DIRECTORY = 0x0,SMB_COM_DELETE_DIRECTORY = 0x1,SMB_COM_OPEN = 0x2,SMB_COM_CREATE = 0x3,SMB_COM_CLOSE = 0x4,SMB_COM_FLUSH = 0x5,SMB_COM_DELETE = 0x6,SMB_COM_RENAME = 0x7,SMB_COM_QUERY_INFORMATION = 0x8,SMB_COM_SET_INFORMATION = 0x9,SMB_COM_READ = 0xA,SMB_COM_WRITE = 0xB,SMB_COM_LOCK_BYTE_RANGE = 0xC,SMB_COM_UNLOCK_BYTE_RANGE = 0xD,SMB_COM_CREATE_TEMPORARY = 0xE,SMB_COM_CREATE_NEW = 0xF,SMB_COM_CHECK_DIRECTORY = 0x10,SMB_COM_PROCESS_EXIT = 0x11,SMB_COM_SEEK = 0x12,SMB_COM_LOCK_AND_READ = 0x13,SMB_COM_WRITE_AND_UNLOCK = 0x14,SMB_COM_READ_RAW = 0x1A,SMB_COM_READ_MPX = 0x1B,SMB_COM_READ_MPX_SECONDARY = 0x1C,SMB_COM_WRITE_RAW = 0x1D,SMB_COM_WRITE_MPX = 0x1E,SMB_COM_WRITE_MPX_SECONDARY = 0x1F,SMB_COM_WRITE_COMPLETE = 0x20,SMB_COM_QUERY_INFORMATION_SRV = 0x21,SMB_COM_SET_INFORMATION2 = 0x22,SMB_COM_QUERY_INFORMATION2 = 0x23,SMB_COM_LOCKING_ANDX = 0x24,SMB_COM_TRANSACTION = 0x25,SMB_COM_TRANSACTION_SECONDARY = 0x26,SMB_COM_IOCTL = 0x27,SMB_COM_IOCTL_SECONDARY = 0x28,SMB_COM_COPY = 0x29,SMB_COM_MOVE = 0x2A,SMB_COM_ECHO = 0x2B,SMB_COM_WRITE_AND_CLOSE = 0x2C,SMB_COM_OPEN_ANDX = 0x2D,SMB_COM_READ_ANDX = 0x2E,SMB_COM_WRITE_ANDX = 0x2F,SMB_COM_CLOSE_AND_TREE_DISC = 0x31,SMB_COM_TRANSACTION2 = 0x32,SMB_COM_TRANSACTION2_SECONDARY = 0x33,SMB_COM_FIND_CLOSE2 = 0x34,SMB_COM_FIND_NOTIFY_CLOSE = 0x35,SMB_COM_TREE_CONNECT = 0x70,SMB_COM_TREE_DISCONNECT = 0x71,SMB_COM_NEGOTIATE = 0x72,SMB_COM_SESSION_SETUP_ANDX = 0x73,SMB_COM_LOGOFF_ANDX = 0x74,SMB_COM_TREE_CONNECT_ANDX = 0x75,SMB_COM_QUERY_INFORMATION_DISK = 0x80,SMB_COM_SEARCH = 0x81,SMB_COM_FIND = 0x82,SMB_COM_FIND_UNIQUE = 0x83,SMB_COM_FIND_CLOSE = 0x84,SMB_COM_NT_TRANSACT = 0xA0,SMB_COM_NT_TRANSACT_SECONDARY = 0xA1,SMB_COM_NT_CREATE_ANDX = 0xA2,SMB_COM_NT_CANCEL = 0xA4,SMB_COM_NT_RENAME = 0xA5,SMB_COM_OPEN_PRINT_FILE = 0xC0,SMB_COM_WRITE_PRINT_FILE = 0xC1,SMB_COM_CLOSE_PRINT_FILE = 0xC2,SMB_COM_GET_PRINT_QUEUE = 0xC3,SMB_COM_SEND_MESSAGE = 0xD0,SMB_COM_SEND_BROADCAST_MESSAGE = 0xD1,SMB_COM_FORWARD_USER_NAME = 0xD2,SMB_COM_CANCEL_FORWARD = 0xD3,SMB_COM_GET_MACHINE_NAME = 0xD4,SMB_COM_SEND_START_MB_MESSAGE = 0xD5,SMB_COM_SEND_END_MB_MESSAGE = 0xD6,SMB_COM_SEND_TEXT_MB_MESSAGE = 0xD7,SMB_COM_NO_ANDX_COMMAND = 0xFF,SMB_SECURITY_SIGNATURE_LENGTH = 0x8,SMB_HEADER_PROTOCOL = 0x424D53FF,};
enum MACRO_SNAPPED {SNAPPED_TAPE = 13,};
enum MACRO_SPEAKER {SPEAKER_FRONT_LEFT = 0x1,SPEAKER_FRONT_RIGHT = 0x2,SPEAKER_FRONT_CENTER = 0x4,SPEAKER_LOW_FREQUENCY = 0x8,SPEAKER_BACK_LEFT = 0x10,SPEAKER_BACK_RIGHT = 0x20,SPEAKER_FRONT_LEFT_OF_CENTER = 0x40,SPEAKER_FRONT_RIGHT_OF_CENTER = 0x80,SPEAKER_BACK_CENTER = 0x100,SPEAKER_SIDE_LEFT = 0x200,SPEAKER_SIDE_RIGHT = 0x400,SPEAKER_TOP_CENTER = 0x800,SPEAKER_TOP_FRONT_LEFT = 0x1000,SPEAKER_TOP_FRONT_CENTER = 0x2000,SPEAKER_TOP_FRONT_RIGHT = 0x4000,SPEAKER_TOP_BACK_LEFT = 0x8000,SPEAKER_TOP_BACK_CENTER = 0x10000,SPEAKER_TOP_BACK_RIGHT = 0x20000,SPEAKER_RESERVED = 0x7FFC0000,SPEAKER_ALL = 0x80000000,};
enum MACRO_SPECIAL {SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION = 0xC1,};
enum MACRO_SRVCALL {SRVCALL_FLAG_MAILSLOT_SERVER = 0x1,SRVCALL_FLAG_FILE_SERVER = 0x2,SRVCALL_FLAG_CASE_INSENSITIVE_NETROOTS = 0x4,SRVCALL_FLAG_CASE_INSENSITIVE_FILENAMES = 0x8,SRVCALL_FLAG_DFS_AWARE_SERVER = 0x10,SRVCALL_FLAG_FORCE_FINALIZED = 0x20,SRVCALL_FLAG_LWIO_AWARE_SERVER = 0x40,SRVCALL_FLAG_LOOPBACK_SERVER = 0x80,};
enum MACRO_SRVOPEN {SRVOPEN_FLAG_DONTUSE_READ_CACHING = 0x1,SRVOPEN_FLAG_DONTUSE_WRITE_CACHING = 0x2,SRVOPEN_FLAG_CLOSED = 0x4,SRVOPEN_FLAG_CLOSE_DELAYED = 0x8,SRVOPEN_FLAG_FILE_RENAMED = 0x10,SRVOPEN_FLAG_FILE_DELETED = 0x20,SRVOPEN_FLAG_BUFFERING_STATE_CHANGE_PENDING = 0x40,SRVOPEN_FLAG_COLLAPSING_DISABLED = 0x80,SRVOPEN_FLAG_BUFFERING_STATE_CHANGE_REQUESTS_PURGED = 0x100,SRVOPEN_FLAG_NO_BUFFERING_STATE_CHANGE = 0x200,SRVOPEN_FLAG_ORPHANED = 0x400,};
enum MACRO_STORAGE {STORAGE_REQUEST_BLOCK_VERSION_1 = 0x1,};
enum MACRO_STREAMS {STREAMS_INTERNAL_ERROR = 0x4B,FATAL_UNHANDLED_HARD_ERROR = 0x4C,};
enum MACRO_STRSAFE {STRSAFE_IGNORE_NULLS = 0x100,STRSAFE_FILL_BEHIND_NULL = 0x200,STRSAFE_FILL_ON_FAILURE = 0x400,STRSAFE_NULL_ON_FAILURE = 0x800,STRSAFE_NO_TRUNCATION = 0x1000,STRSAFE_FILL_BEHIND = 0x200,STRSAFE_ZERO_LENGTH_ON_FAILURE = 0x800,STRSAFE_VALID_FLAGS = 0x1FFF,STRSAFE_UNICODE_STRING_VALID_FLAGS = 0x1FFF,};
enum MACRO_SUBLANG {SUBLANG_NEUTRAL = 0x0,SUBLANG_DEFAULT = 0x1,SUBLANG_SYS_DEFAULT = 0x2,SUBLANG_CUSTOM_DEFAULT = 0x3,SUBLANG_CUSTOM_UNSPECIFIED = 0x4,SUBLANG_UI_CUSTOM_DEFAULT = 0x5,SUBLANG_AFRIKAANS_SOUTH_AFRICA = 0x1,SUBLANG_ALBANIAN_ALBANIA = 0x1,SUBLANG_ALSATIAN_FRANCE = 0x1,SUBLANG_AMHARIC_ETHIOPIA = 0x1,SUBLANG_ARABIC_SAUDI_ARABIA = 0x1,SUBLANG_ARABIC_IRAQ = 0x2,SUBLANG_ARABIC_EGYPT = 0x3,SUBLANG_ARABIC_LIBYA = 0x4,SUBLANG_ARABIC_ALGERIA = 0x5,SUBLANG_ARABIC_MOROCCO = 0x6,SUBLANG_ARABIC_TUNISIA = 0x7,SUBLANG_ARABIC_OMAN = 0x8,SUBLANG_ARABIC_YEMEN = 0x9,SUBLANG_ARABIC_SYRIA = 0xA,SUBLANG_ARABIC_JORDAN = 0xB,SUBLANG_ARABIC_LEBANON = 0xC,SUBLANG_ARABIC_KUWAIT = 0xD,SUBLANG_ARABIC_UAE = 0xE,SUBLANG_ARABIC_BAHRAIN = 0xF,SUBLANG_ARABIC_QATAR = 0x10,SUBLANG_ARMENIAN_ARMENIA = 0x1,SUBLANG_ASSAMESE_INDIA = 0x1,SUBLANG_AZERI_LATIN = 0x1,SUBLANG_AZERI_CYRILLIC = 0x2,SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN = 0x1,SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC = 0x2,SUBLANG_BANGLA_INDIA = 0x1,SUBLANG_BANGLA_BANGLADESH = 0x2,SUBLANG_BASHKIR_RUSSIA = 0x1,SUBLANG_BASQUE_BASQUE = 0x1,SUBLANG_BELARUSIAN_BELARUS = 0x1,SUBLANG_BENGALI_INDIA = 0x1,SUBLANG_BENGALI_BANGLADESH = 0x2,SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN = 0x5,SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 0x8,SUBLANG_BRETON_FRANCE = 0x1,SUBLANG_BULGARIAN_BULGARIA = 0x1,SUBLANG_CATALAN_CATALAN = 0x1,SUBLANG_CENTRAL_KURDISH_IRAQ = 0x1,SUBLANG_CHEROKEE_CHEROKEE = 0x1,SUBLANG_CHINESE_TRADITIONAL = 0x1,SUBLANG_CHINESE_SIMPLIFIED = 0x2,SUBLANG_CHINESE_HONGKONG = 0x3,SUBLANG_CHINESE_SINGAPORE = 0x4,SUBLANG_CHINESE_MACAU = 0x5,SUBLANG_CORSICAN_FRANCE = 0x1,SUBLANG_CZECH_CZECH_REPUBLIC = 0x1,SUBLANG_CROATIAN_CROATIA = 0x1,SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN = 0x4,SUBLANG_DANISH_DENMARK = 0x1,SUBLANG_DARI_AFGHANISTAN = 0x1,SUBLANG_DIVEHI_MALDIVES = 0x1,SUBLANG_DUTCH = 0x1,SUBLANG_DUTCH_BELGIAN = 0x2,SUBLANG_ENGLISH_US = 0x1,SUBLANG_ENGLISH_UK = 0x2,SUBLANG_ENGLISH_AUS = 0x3,SUBLANG_ENGLISH_CAN = 0x4,SUBLANG_ENGLISH_NZ = 0x5,SUBLANG_ENGLISH_EIRE = 0x6,SUBLANG_ENGLISH_SOUTH_AFRICA = 0x7,SUBLANG_ENGLISH_JAMAICA = 0x8,SUBLANG_ENGLISH_CARIBBEAN = 0x9,SUBLANG_ENGLISH_BELIZE = 0xA,SUBLANG_ENGLISH_TRINIDAD = 0xB,SUBLANG_ENGLISH_ZIMBABWE = 0xC,SUBLANG_ENGLISH_PHILIPPINES = 0xD,SUBLANG_ENGLISH_INDIA = 0x10,SUBLANG_ENGLISH_MALAYSIA = 0x11,SUBLANG_ENGLISH_SINGAPORE = 0x12,SUBLANG_ESTONIAN_ESTONIA = 0x1,SUBLANG_FAEROESE_FAROE_ISLANDS = 0x1,SUBLANG_FILIPINO_PHILIPPINES = 0x1,SUBLANG_FINNISH_FINLAND = 0x1,SUBLANG_FRENCH = 0x1,SUBLANG_FRENCH_BELGIAN = 0x2,SUBLANG_FRENCH_CANADIAN = 0x3,SUBLANG_FRENCH_SWISS = 0x4,SUBLANG_FRENCH_LUXEMBOURG = 0x5,SUBLANG_FRENCH_MONACO = 0x6,SUBLANG_FRISIAN_NETHERLANDS = 0x1,SUBLANG_FULAH_SENEGAL = 0x2,SUBLANG_GALICIAN_GALICIAN = 0x1,SUBLANG_GEORGIAN_GEORGIA = 0x1,SUBLANG_GERMAN = 0x1,SUBLANG_GERMAN_SWISS = 0x2,SUBLANG_GERMAN_AUSTRIAN = 0x3,SUBLANG_GERMAN_LUXEMBOURG = 0x4,SUBLANG_GERMAN_LIECHTENSTEIN = 0x5,SUBLANG_GREEK_GREECE = 0x1,SUBLANG_GREENLANDIC_GREENLAND = 0x1,SUBLANG_GUJARATI_INDIA = 0x1,SUBLANG_HAUSA_NIGERIA_LATIN = 0x1,SUBLANG_HAWAIIAN_US = 0x1,SUBLANG_HEBREW_ISRAEL = 0x1,SUBLANG_HINDI_INDIA = 0x1,SUBLANG_HUNGARIAN_HUNGARY = 0x1,SUBLANG_ICELANDIC_ICELAND = 0x1,SUBLANG_IGBO_NIGERIA = 0x1,SUBLANG_INDONESIAN_INDONESIA = 0x1,SUBLANG_INUKTITUT_CANADA = 0x1,SUBLANG_INUKTITUT_CANADA_LATIN = 0x2,SUBLANG_IRISH_IRELAND = 0x2,SUBLANG_ITALIAN = 0x1,SUBLANG_ITALIAN_SWISS = 0x2,SUBLANG_JAPANESE_JAPAN = 0x1,SUBLANG_KANNADA_INDIA = 0x1,SUBLANG_KASHMIRI_SASIA = 0x2,SUBLANG_KASHMIRI_INDIA = 0x2,SUBLANG_KAZAK_KAZAKHSTAN = 0x1,SUBLANG_KHMER_CAMBODIA = 0x1,SUBLANG_KICHE_GUATEMALA = 0x1,SUBLANG_KINYARWANDA_RWANDA = 0x1,SUBLANG_KONKANI_INDIA = 0x1,SUBLANG_KOREAN = 0x1,SUBLANG_KYRGYZ_KYRGYZSTAN = 0x1,SUBLANG_LAO_LAO = 0x1,SUBLANG_LATVIAN_LATVIA = 0x1,SUBLANG_LITHUANIAN = 0x1,SUBLANG_LOWER_SORBIAN_GERMANY = 0x2,SUBLANG_LUXEMBOURGISH_LUXEMBOURG = 0x1,SUBLANG_MACEDONIAN_MACEDONIA = 0x1,SUBLANG_MALAY_MALAYSIA = 0x1,SUBLANG_MALAY_BRUNEI_DARUSSALAM = 0x2,SUBLANG_MALAYALAM_INDIA = 0x1,SUBLANG_MALTESE_MALTA = 0x1,SUBLANG_MAORI_NEW_ZEALAND = 0x1,SUBLANG_MAPUDUNGUN_CHILE = 0x1,SUBLANG_MARATHI_INDIA = 0x1,SUBLANG_MOHAWK_MOHAWK = 0x1,SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA = 0x1,SUBLANG_MONGOLIAN_PRC = 0x2,SUBLANG_NEPALI_INDIA = 0x2,SUBLANG_NEPALI_NEPAL = 0x1,SUBLANG_NORWEGIAN_BOKMAL = 0x1,SUBLANG_NORWEGIAN_NYNORSK = 0x2,SUBLANG_OCCITAN_FRANCE = 0x1,SUBLANG_ODIA_INDIA = 0x1,SUBLANG_ORIYA_INDIA = 0x1,SUBLANG_PASHTO_AFGHANISTAN = 0x1,SUBLANG_PERSIAN_IRAN = 0x1,SUBLANG_POLISH_POLAND = 0x1,SUBLANG_PORTUGUESE = 0x2,SUBLANG_PORTUGUESE_BRAZILIAN = 0x1,SUBLANG_PULAR_SENEGAL = 0x2,SUBLANG_PUNJABI_INDIA = 0x1,SUBLANG_PUNJABI_PAKISTAN = 0x2,SUBLANG_QUECHUA_BOLIVIA = 0x1,SUBLANG_QUECHUA_ECUADOR = 0x2,SUBLANG_QUECHUA_PERU = 0x3,SUBLANG_ROMANIAN_ROMANIA = 0x1,SUBLANG_ROMANSH_SWITZERLAND = 0x1,SUBLANG_RUSSIAN_RUSSIA = 0x1,SUBLANG_SAKHA_RUSSIA = 0x1,SUBLANG_SAMI_NORTHERN_NORWAY = 0x1,SUBLANG_SAMI_NORTHERN_SWEDEN = 0x2,SUBLANG_SAMI_NORTHERN_FINLAND = 0x3,SUBLANG_SAMI_LULE_NORWAY = 0x4,SUBLANG_SAMI_LULE_SWEDEN = 0x5,SUBLANG_SAMI_SOUTHERN_NORWAY = 0x6,SUBLANG_SAMI_SOUTHERN_SWEDEN = 0x7,SUBLANG_SAMI_SKOLT_FINLAND = 0x8,SUBLANG_SAMI_INARI_FINLAND = 0x9,SUBLANG_SANSKRIT_INDIA = 0x1,SUBLANG_SCOTTISH_GAELIC = 0x1,SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN = 0x6,SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 0x7,SUBLANG_SERBIAN_MONTENEGRO_LATIN = 0xB,SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC = 0xC,SUBLANG_SERBIAN_SERBIA_LATIN = 0x9,SUBLANG_SERBIAN_SERBIA_CYRILLIC = 0xA,SUBLANG_SERBIAN_CROATIA = 0x1,SUBLANG_SERBIAN_LATIN = 0x2,SUBLANG_SERBIAN_CYRILLIC = 0x3,SUBLANG_SINDHI_INDIA = 0x1,SUBLANG_SINDHI_PAKISTAN = 0x2,SUBLANG_SINDHI_AFGHANISTAN = 0x2,SUBLANG_SINHALESE_SRI_LANKA = 0x1,SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA = 0x1,SUBLANG_SLOVAK_SLOVAKIA = 0x1,SUBLANG_SLOVENIAN_SLOVENIA = 0x1,SUBLANG_SPANISH = 0x1,SUBLANG_SPANISH_MEXICAN = 0x2,SUBLANG_SPANISH_MODERN = 0x3,SUBLANG_SPANISH_GUATEMALA = 0x4,SUBLANG_SPANISH_COSTA_RICA = 0x5,SUBLANG_SPANISH_PANAMA = 0x6,SUBLANG_SPANISH_DOMINICAN_REPUBLIC = 0x7,SUBLANG_SPANISH_VENEZUELA = 0x8,SUBLANG_SPANISH_COLOMBIA = 0x9,SUBLANG_SPANISH_PERU = 0xA,SUBLANG_SPANISH_ARGENTINA = 0xB,SUBLANG_SPANISH_ECUADOR = 0xC,SUBLANG_SPANISH_CHILE = 0xD,SUBLANG_SPANISH_URUGUAY = 0xE,SUBLANG_SPANISH_PARAGUAY = 0xF,SUBLANG_SPANISH_BOLIVIA = 0x10,SUBLANG_SPANISH_EL_SALVADOR = 0x11,SUBLANG_SPANISH_HONDURAS = 0x12,SUBLANG_SPANISH_NICARAGUA = 0x13,SUBLANG_SPANISH_PUERTO_RICO = 0x14,SUBLANG_SPANISH_US = 0x15,SUBLANG_SWAHILI_KENYA = 0x1,SUBLANG_SWEDISH = 0x1,SUBLANG_SWEDISH_FINLAND = 0x2,SUBLANG_SYRIAC_SYRIA = 0x1,SUBLANG_TAJIK_TAJIKISTAN = 0x1,SUBLANG_TAMAZIGHT_ALGERIA_LATIN = 0x2,SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH = 0x4,SUBLANG_TAMIL_INDIA = 0x1,SUBLANG_TAMIL_SRI_LANKA = 0x2,SUBLANG_TATAR_RUSSIA = 0x1,SUBLANG_TELUGU_INDIA = 0x1,SUBLANG_THAI_THAILAND = 0x1,SUBLANG_TIBETAN_PRC = 0x1,SUBLANG_TIGRIGNA_ERITREA = 0x2,SUBLANG_TIGRINYA_ERITREA = 0x2,SUBLANG_TIGRINYA_ETHIOPIA = 0x1,SUBLANG_TSWANA_BOTSWANA = 0x2,SUBLANG_TSWANA_SOUTH_AFRICA = 0x1,SUBLANG_TURKISH_TURKEY = 0x1,SUBLANG_TURKMEN_TURKMENISTAN = 0x1,SUBLANG_UIGHUR_PRC = 0x1,SUBLANG_UKRAINIAN_UKRAINE = 0x1,SUBLANG_UPPER_SORBIAN_GERMANY = 0x1,SUBLANG_URDU_PAKISTAN = 0x1,SUBLANG_URDU_INDIA = 0x2,SUBLANG_UZBEK_LATIN = 0x1,SUBLANG_UZBEK_CYRILLIC = 0x2,SUBLANG_VALENCIAN_VALENCIA = 0x2,SUBLANG_VIETNAMESE_VIETNAM = 0x1,SUBLANG_WELSH_UNITED_KINGDOM = 0x1,SUBLANG_WOLOF_SENEGAL = 0x1,SUBLANG_XHOSA_SOUTH_AFRICA = 0x1,SUBLANG_YAKUT_RUSSIA = 0x1,SUBLANG_YI_PRC = 0x1,SUBLANG_YORUBA_NIGERIA = 0x1,SUBLANG_ZULU_SOUTH_AFRICA = 0x1,};
enum MACRO_SUPPORT {PIO_SUPPORT = 31,SWDMA_SUPPORT = 224,MWDMA_SUPPORT = 1792,};
enum MACRO_SYMLINK {SYMLINK_FLAG_RELATIVE = 1,};
enum MACRO_S_STORE {S_STORE_LAUNCHED_FOR_REMEDIATION = 0x270258,S_APPLICATION_ACTIVATION_ERROR_HANDLED_BY_DIALOG = 0x270259,};
enum MACRO_SendRLS {SendRLS = 19,};
enum MACRO_SendRPL {SendRPL = 9,};
enum MACRO_SendRPS {SendRPS = 10,};
enum MACRO_SendSRL {SendSRL = 11,};
enum MACRO_TRUST_E {TRUST_E_PROVIDER_UNKNOWN = 0x800B0001,TRUST_E_ACTION_UNKNOWN = 0x800B0002,TRUST_E_SUBJECT_FORM_UNKNOWN = 0x800B0003,TRUST_E_SUBJECT_NOT_TRUSTED = 0x800B0004,};
enum MACRO_UCSCHAR {UCSCHAR_INVALID_CHARACTER = 0xFFFFFFFF,};
enum MACRO_UNKNOWN {NET_IF_LINK_SPEED_UNKNOWN = -1,NIIF_BUS_NUMBER_UNKNOWN = 4294967295,NIIF_SLOT_NUMBER_UNKNOWN = 4294967295,NIIF_FUNCTION_NUMBER_UNKNOWN = 4294967295,};
enum MACRO_USBCAMD {USBCAMD_DATA_PIPE = 0x1,USBCAMD_MULTIPLEX_PIPE = 0x2,USBCAMD_SYNC_PIPE = 0x4,USBCAMD_DONT_CARE_PIPE = 0x8,USBCAMD_VIDEO_STREAM = 0x1,USBCAMD_STILL_STREAM = 0x2,USBCAMD_VIDEO_STILL_STREAM = 0x3,USBCAMD_PROCESSPACKETEX_DropFrame = 0x2,USBCAMD_PROCESSPACKETEX_NextFrameIsStill = 0x4,USBCAMD_PROCESSPACKETEX_CurrentFrameIsStill = 0x8,USBCAMD_STOP_STREAM = 0x1,USBCAMD_START_STREAM = 0x0,USBCAMD_VERSION_200 = 0x200,};
enum MACRO_USB_GET {USB_GET_NODE_INFORMATION = 258,USB_GET_NODE_CONNECTION_INFORMATION = 259,USB_GET_DESCRIPTOR_FROM_NODE_CONNECTION = 260,USB_GET_NODE_CONNECTION_NAME = 261,USB_DIAG_IGNORE_HUBS_ON = 262,USB_DIAG_IGNORE_HUBS_OFF = 263,USB_GET_NODE_CONNECTION_DRIVERKEY_NAME = 264,USB_GET_HUB_CAPABILITIES = 271,USB_GET_NODE_CONNECTION_ATTRIBUTES = 272,USB_HUB_CYCLE_PORT = 273,USB_GET_NODE_CONNECTION_INFORMATION_EX = 274,USB_RESET_HUB = 275,USB_GET_HUB_CAPABILITIES_EX = 276,USB_GET_HUB_INFORMATION_EX = 277,USB_GET_PORT_CONNECTOR_PROPERTIES = 278,USB_GET_NODE_CONNECTION_INFORMATION_EX_V2 = 279,};
enum MACRO_USB_HCD {USB_HCD_CAPS_SUPPORTS_RT_THREADS = 0x1,USB_BUSIF_USBDI_VERSION_0 = 0x0,USB_BUSIF_USBDI_VERSION_1 = 0x1,USB_BUSIF_USBDI_VERSION_2 = 0x2,USB_BUSIF_USBDI_VERSION_3 = 0x3,};
enum MACRO_VOLSNAP {VOLSNAP_OVERLAPPED_TABLE_ACCESS = 0x12D,};
enum MACRO_WARNING {READ_WARNING = 1,WRITE_WARNING = 2,};
enum MACRO_WINDOWS {WINDOWS_NT_BANNER = 0x4000007E,WINDOWS_NT_CSD_STRING = 0x40000087,WINDOWS_NT_INFO_STRING = 0x40000088,WINDOWS_NT_MP_STRING = 0x40000089,};
enum MACRO_WMAUDIO {WMAUDIO_BITS_PER_SAMPLE = 16,WMAUDIO_MAX_CHANNELS = 2,};
enum MACRO_XENROLL {XENROLL_E_KEY_NOT_EXPORTABLE = 0x80095000,XENROLL_E_CANNOT_ADD_ROOT_CERT = 0x80095001,XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND = 0x80095002,XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH = 0x80095003,XENROLL_E_RESPONSE_KA_HASH_MISMATCH = 0x80095004,XENROLL_E_KEYSPEC_SMIME_MISMATCH = 0x80095005,};
enum MACRO__ALLOCA {_ALLOCA_S_THRESHOLD = 1024,_ALLOCA_S_STACK_MARKER = 52428,_ALLOCA_S_HEAP_MARKER = 56797,_ALLOCA_S_MARKER_SIZE = 8,};
enum MACRO__ARGMAX {_ARGMAX = 100,};
enum MACRO__CRTDBG {_CRTDBG_MODE_FILE = 0x1,_CRTDBG_MODE_DEBUG = 0x2,_CRTDBG_MODE_WNDW = 0x4,_CRTDBG_MODE_BREAK = 0x8,_CRTDBG_REPORT_MODE = 0xFFFFFFFF,_CRTDBG_INVALID_HFILE = 0xFFFFFFFF,_CRTDBG_HFILE_ERROR = 0xFFFFFFFE,_CRTDBG_FILE_STDOUT = 0xFFFFFFFC,_CRTDBG_FILE_STDERR = 0xFFFFFFFB,_CRTDBG_REPORT_FILE = 0xFFFFFFFA,};
enum MACRO__CRTWRN {_CRTWRN_WNUMBER__VCCLRIT_DEPRECATED = 1001,_CRTWRN_WNUMBER__EXPLICIT_KEYWORD = 1002,_CRTWRN_WNUMBER__NO_32BIT_TIME_T = 1003,_CRTWRN_WNUMBER__NO_SPECIAL_TRANSFER = 1004,_CRTWRN_WNUMBER__NO_ITERATOR_DEBUGGING = 1005,_CRTWRN_WNUMBER__CLR_AND_STATIC_CPPLIB = 1006,_CRTWRN_WNUMBER_FLOATING_POINT_CONTROL_DEPRECATED = 2001,};
enum MACRO__DOMAIN {_DOMAIN = 1,_SING = 2,};
enum MACRO__HEAPOK {_HEAPOK = -2,};
enum MACRO__IOREAD {_IOREAD = 0x1,_IOWRT = 0x2,};
enum MACRO__MCW_DN {_MCW_DN = 0x3000000,};
enum MACRO__MCW_IC {_MCW_IC = 0x40000,};
enum MACRO__MCW_PC {_MCW_PC = 0x30000,};
enum MACRO__MCW_RC {_MCW_RC = 0x300,};
enum MACRO__REPORT {_REPORT_ERRMODE = 3,};
enum MACRO__XABORT {_XABORT_EXPLICIT = 1,_XABORT_RETRY = 2,_XABORT_CONFLICT = 4,_XABORT_CAPACITY = 8,_XABORT_DEBUG = 16,_XABORT_NESTED = 32,};
enum MACRO__XBEGIN {_XBEGIN_STARTED = -1,};
typedef struct _MCA_EXCEPTION MCA_EXCEPTION;
typedef struct _MCD_INIT_DATA MCD_INIT_DATA;
typedef struct _MEMORY_REGION MEMORY_REGION;
typedef struct _MODE_CAP_PAGE MODE_CAP_PAGE;
typedef struct _MODE_MRW_PAGE MODE_MRW_PAGE;
typedef struct _MOUNTDEV_NAME MOUNTDEV_NAME;
typedef struct _MPIO_DSM_Path MPIO_DSM_Path;
typedef struct _MSWmi_MofData MSWmi_MofData;
typedef struct _NDIS_WAN_INFO NDIS_WAN_INFO;
typedef struct _NDK_CONNECTOR NDK_CONNECTOR;
typedef struct nd_opt_hdr ND_OPTION_HDR;
typedef struct nd_opt_mtu ND_OPTION_MTU;
typedef struct _NET_PNP_EVENT NET_PNP_EVENT;
typedef struct _NON_PAGED_FCB NON_PAGED_FCB;
typedef struct _NT_SMB_HEADER NT_SMB_HEADER;
typedef struct _OUTPUT_PACKET OUTPUT_PACKET;
typedef struct _ACCESS_RANGE *PACCESS_RANGE;
typedef struct _ACCESS_STATE *PACCESS_STATE;
typedef struct _ADDRESS_FIFO *PADDRESS_FIFO;
typedef struct addrinfoex2A *PADDRINFOEX2A;
typedef struct addrinfoex2W *PADDRINFOEX2W;
typedef struct _AGP_STD_DATA *PAGP_STD_DATA;
typedef struct _ASYNC_PACKET *PASYNC_PACKET;
typedef struct _ATM_CAUSE_IE *PATM_CAUSE_IE;
typedef struct _AUDIO_OUTPUT *PAUDIO_OUTPUT;
typedef struct _AddTarget_IN *PAddTarget_IN;
typedef struct _BTHX_VERSION *PBTHX_VERSION;
typedef struct _BUS_INFO_IDS *PBUS_INFO_IDS;
typedef struct _CC_BYTE_PAIR *PCC_BYTE_PAIR;
typedef struct _CIP_HDR2_FDF *PCIP_HDR2_FDF;
typedef struct _CIP_HDR2_SYT *PCIP_HDR2_SYT;
typedef struct _PCI_PMCSR_BSE PCI_PMCSR_BSE;
typedef struct _CLFS_NODE_ID *PCLFS_NODE_ID;
typedef struct _9DABE2D50638D6782800B54C16FE3B63 PCMETHOD_ITEM;
typedef struct _CMP_SET_PLUG *PCMP_SET_PLUG;
typedef struct pcmwaveformat_tag PCMWAVEFORMAT;
typedef struct _CM_ROM_BLOCK *PCM_ROM_BLOCK;
typedef struct _CONNECT_DATA *PCONNECT_DATA;
typedef struct _DEVICE_FLAGS *PDEVICE_FLAGS;
typedef struct _DISK_LOGGING *PDISK_LOGGING;
typedef struct _DRIVERSTATUS *PDRIVERSTATUS;
typedef struct _DSM_COUNTERS *PDSM_COUNTERS;
typedef struct _FCP_GET_RESPONSE *PFCP_RESPONSE;
typedef struct _FLT_INSTANCE *PFLT_INSTANCE;
typedef struct _GET_UNIT_IDS *PGET_UNIT_IDS;
typedef struct group_filter *PGROUP_FILTER;
typedef struct _93B241075AB814F9677BDB457CD6BECF *PHAL_DISPATCH;
typedef struct HBA_fc4types *PHBA_FC4TYPES;
typedef struct HBA_MgmtInfo *PHBA_MGMTINFO;
typedef struct _ICMP_MESSAGE *PICMP_MESSAGE;
typedef struct _IDEREGISTERS *PIDEREGISTERS;
typedef struct IPNotifyData *PIPNotifyData;
typedef struct _ISOCH_HEADER *PISOCH_HEADER;
typedef union _A4FB595EF421231CAF150DDD3288A6D5 *PKSDATAFORMAT;
typedef struct _BBE51AA07033B60919BF464EA8FAB770 *PKSEVENT_ITEM;
typedef struct _117E3A994AEBF040E18388CACE709509 *PKSIDENTIFIER;
typedef struct _D9863DBF23EBBD7F74D85DDE027E035E *PKSMETHOD_SET;
typedef struct _KSM_PIN_PAIR *PKSM_PIN_PAIR;
typedef struct _KSPROCESSPIN *PKSPROCESSPIN;
typedef struct _204C6CB5B1CC0D35B371E5C594718A83 *PKSRESOLUTION;
typedef struct _KSYSTEM_TIME *PKSYSTEM_TIME;
typedef struct _KS_DVD_YCrCb *PKS_DVD_YCrCb;
typedef struct tagKS_VIDEOINFO *PKS_VIDEOINFO;
typedef struct _KTRANSACTION *PKTRANSACTION;
typedef LIST_ENTRY32 *PLIST_ENTRY32;
typedef LIST_ENTRY64 *PLIST_ENTRY64;
typedef IMiniportMidi *PMINIPORTMIDI;
typedef struct _MRX_NET_ROOT_ *PMRX_NET_ROOT;
typedef struct _MRX_SRV_CALL_ *PMRX_SRV_CALL;
typedef struct _MRX_SRV_OPEN_ *PMRX_SRV_OPEN;
typedef struct _NABTS_BUFFER *PNABTS_BUFFER;
typedef struct _NDIS_AF_LIST *PNDIS_AF_LIST;
typedef struct _NDIS_OFFLOAD *PNDIS_OFFLOAD;
typedef struct _NDIS_RW_LOCK *PNDIS_RW_LOCK;
typedef struct _NETWORK_NAME *PNETWORK_NAME;
typedef struct _NLSTABLEINFO *PNLSTABLEINFO;
typedef struct _NODE_ADDRESS *PNODE_ADDRESS;
typedef struct _0C4AC156F5CD9D086646B489056E0FB7 *PPCEVENT_ITEM;
typedef struct _PCW_INSTANCE *PPCW_INSTANCE;
typedef struct _PDOSCSI_ADDR *PPDOSCSI_ADDR;
typedef IPortClsPower *PPORTCLSPOWER;
typedef IPortTopology *PPORTTOPOLOGY;
typedef struct _QUOTA_LIMITS *PQUOTA_LIMITS;
typedef struct _REGISTER_FIS *PREGISTER_FIS;
typedef IResourceList *PRESOURCELIST;
typedef struct RIO_BUFFERID_t **PRIO_BUFFERID;
typedef struct _PRIVILEGE_SET PRIVILEGE_SET;
typedef struct _KENLISTMENT *PRKENLISTMENT;
typedef struct _KWAIT_BLOCK *PRKWAIT_BLOCK;
typedef struct _PROCLOCALAPIC PROCLOCALAPIC;
typedef union _RTL_RUN_ONCE *PRTL_RUN_ONCE;
typedef struct _RXCE_ADDRESS_ *PRXCE_ADDRESS;
typedef struct _RX_FCB_TABLE *PRX_FCB_TABLE;
typedef struct _RX_MID_ATLAS *PRX_MID_ATLAS;
typedef struct _RX_WORK_ITEM_ *PRX_WORK_ITEM;
typedef struct _SCSI_ADDRESS *PSCSI_ADDRESS;
typedef struct _SDRESP_TYPE3 *PSDRESP_TYPE3;
typedef struct _SELF_ID_MORE *PSELF_ID_MORE;
typedef IServiceGroup *PSERVICEGROUP;
typedef struct _SHARE_ACCESS *PSHARE_ACCESS;
typedef struct tagSILO_COMMAND *PSILO_COMMAND;
typedef union _SLIST_HEADER *PSLIST_HEADER;
typedef struct SMHBA_FC_Phy *PSMHBA_FC_PHY;
typedef struct SMHBA_ScsiId *PSMHBA_SCSIID;
typedef struct _STATUS_BLOCK *PSTATUS_BLOCK;
typedef struct _STOR_ADDRESS *PSTOR_ADDRESS;
typedef struct _SUB_Q_HEADER *PSUB_Q_HEADER;
typedef struct _SYSENV_VALUE *PSYSENV_VALUE;
typedef struct _SendLIRR_OUT *PSendLIRR_OUT;
typedef struct _SendRNID_OUT *PSendRNID_OUT;
typedef struct _TAPE_PREPARE *PTAPE_PREPARE;
typedef struct _TEXTUAL_LEAF *PTEXTUAL_LEAF;
typedef struct _TOKEN_GROUPS *PTOKEN_GROUPS;
typedef struct _TOKEN_ORIGIN *PTOKEN_ORIGIN;
typedef struct _TOKEN_SOURCE *PTOKEN_SOURCE;
typedef struct _TOPOLOGY_MAP *PTOPOLOGY_MAP;
typedef struct _VIDEO_MEMORY *PVIDEO_MEMORY;
typedef struct _WNODE_HEADER *PWNODE_HEADER;
typedef struct _WSK_BUF_LIST *PWSK_BUF_LIST;
typedef struct _WWAN_CONTEXT *PWWAN_CONTEXT;
typedef struct _WmiMonitorID *PWmiMonitorID;
typedef struct _XSAVE_FORMAT *PXSAVE_FORMAT;
typedef struct _Q2931_ADD_PVC Q2931_ADD_PVC;
typedef struct _595A1F057E8A453471581C9A3BFF13FD RATING_SYSTEM;
typedef struct __RAW_READ_INFO RAW_READ_INFO;
typedef struct _RDBSS_EXPORTS RDBSS_EXPORTS;
typedef struct _REASON_BUFFER REASON_BUFFER;
typedef struct _REQ_NT_CANCEL REQ_NT_CANCEL;
typedef struct _REQ_NT_RENAME REQ_NT_RENAME;
typedef struct _RTL_AVL_TABLE RTL_AVL_TABLE;
typedef struct _RX_DISPATCHER_ RX_DISPATCHER;
typedef struct _RX_WORK_QUEUE_ RX_WORK_QUEUE;
typedef struct _RemovePort_IN RemovePort_IN;
typedef struct _SCSI_BUS_DATA SCSI_BUS_DATA;
typedef union _SDP_NODE_DATA SDP_NODE_DATA;
typedef union _SENSE_DATA_EX SENSE_DATA_EX;
typedef struct _SET_UNIT_INFO SET_UNIT_INFO;
typedef struct _SE_ADT_CLAIMS SE_ADT_CLAIMS;
typedef struct _SE_AUDIT_INFO SE_AUDIT_INFO;
typedef struct SMHBA_Binding SMHBA_BINDING;
typedef struct SMHBA_FC_Port SMHBA_FC_PORT;
typedef struct SMHBA_SAS_Phy SMHBA_SAS_PHY;
typedef union _SOCKADDR_INET SOCKADDR_INET;
typedef struct _SecBufferDesc SecBufferDesc;
typedef struct _SendRNIDV2_IN SendRNIDV2_IN;
typedef struct _TA_ADDRESS_IP TA_IP_ADDRESS;
typedef struct _TA_ADDRESS_NS TA_NS_ADDRESS;
typedef struct _TOKEN_CONTROL TOKEN_CONTROL;
typedef struct _TUPLE_REQUEST TUPLE_REQUEST;
struct USBD_HANDLE__ {int unused;};
typedef struct _USB_PORT_PATH USB_PORT_PATH;
typedef struct _34AF5E86DC3341832991CC8A37B0F3B6 USN_RECORD_V2;
typedef struct _00F974B505468747ECE960C8A578057F USN_RECORD_V3;
typedef union _WHEA_REVISION WHEA_REVISION;
typedef struct _WSK_TRANSPORT WSK_TRANSPORT;
typedef struct _WWAN_PIN_DESC WWAN_PIN_DESC;
typedef struct _WWAN_PIN_INFO WWAN_PIN_INFO;
typedef struct _WWAN_PIN_LIST WWAN_PIN_LIST;
typedef struct _WWAN_PROVIDER WWAN_PROVIDER;
typedef struct _WWAN_SMS_READ WWAN_SMS_READ;
typedef struct _WWAN_SMS_SEND WWAN_SMS_SEND;
typedef union _XPF_MCE_FLAGS XPF_MCE_FLAGS;
struct _BUS_INFO_IDS {unsigned int ChipIdHigh : 8;unsigned int NodeVendorId : 24;};
struct _CIP_HDR2_FDF {unsigned int FDF : 24;unsigned int FMT : 6;unsigned int Bit10 : 2;};
struct _CIP_HDR2_SYT {unsigned int SYT : 16;unsigned int RSV : 2;unsigned int STYPE : 5;unsigned int F5060_OR_TSF : 1;unsigned int FMT : 6;unsigned int Bit10 : 2;};
enum _D3DDDIFORMAT {D3DDDIFMT_UNKNOWN = 0x0,D3DDDIFMT_R8G8B8 = 0x14,D3DDDIFMT_A8R8G8B8 = 0x15,D3DDDIFMT_X8R8G8B8 = 0x16,D3DDDIFMT_R5G6B5 = 0x17,D3DDDIFMT_X1R5G5B5 = 0x18,D3DDDIFMT_A1R5G5B5 = 0x19,D3DDDIFMT_A4R4G4B4 = 0x1A,D3DDDIFMT_R3G3B2 = 0x1B,D3DDDIFMT_A8 = 0x1C,D3DDDIFMT_A8R3G3B2 = 0x1D,D3DDDIFMT_X4R4G4B4 = 0x1E,D3DDDIFMT_A2B10G10R10 = 0x1F,D3DDDIFMT_A8B8G8R8 = 0x20,D3DDDIFMT_X8B8G8R8 = 0x21,D3DDDIFMT_G16R16 = 0x22,D3DDDIFMT_A2R10G10B10 = 0x23,D3DDDIFMT_A16B16G16R16 = 0x24,D3DDDIFMT_A8P8 = 0x28,D3DDDIFMT_P8 = 0x29,D3DDDIFMT_L8 = 0x32,D3DDDIFMT_A8L8 = 0x33,D3DDDIFMT_A4L4 = 0x34,D3DDDIFMT_V8U8 = 0x3C,D3DDDIFMT_L6V5U5 = 0x3D,D3DDDIFMT_X8L8V8U8 = 0x3E,D3DDDIFMT_Q8W8V8U8 = 0x3F,D3DDDIFMT_V16U16 = 0x40,D3DDDIFMT_W11V11U10 = 0x41,D3DDDIFMT_A2W10V10U10 = 0x43,D3DDDIFMT_UYVY = 0x59565955,D3DDDIFMT_R8G8_B8G8 = 0x47424752,D3DDDIFMT_YUY2 = 0x32595559,D3DDDIFMT_G8R8_G8B8 = 0x42475247,D3DDDIFMT_DXT1 = 0x31545844,D3DDDIFMT_DXT2 = 0x32545844,D3DDDIFMT_DXT3 = 0x33545844,D3DDDIFMT_DXT4 = 0x34545844,D3DDDIFMT_DXT5 = 0x35545844,D3DDDIFMT_D16_LOCKABLE = 0x46,D3DDDIFMT_D32 = 0x47,D3DDDIFMT_D15S1 = 0x49,D3DDDIFMT_D24S8 = 0x4B,D3DDDIFMT_D24X8 = 0x4D,D3DDDIFMT_D24X4S4 = 0x4F,D3DDDIFMT_D16 = 0x50,D3DDDIFMT_D32F_LOCKABLE = 0x52,D3DDDIFMT_D24FS8 = 0x53,D3DDDIFMT_D32_LOCKABLE = 0x54,D3DDDIFMT_S8_LOCKABLE = 0x55,D3DDDIFMT_S1D15 = 0x48,D3DDDIFMT_S8D24 = 0x4A,D3DDDIFMT_X8D24 = 0x4C,D3DDDIFMT_X4S4D24 = 0x4E,D3DDDIFMT_L16 = 0x51,D3DDDIFMT_VERTEXDATA = 0x64,D3DDDIFMT_INDEX16 = 0x65,D3DDDIFMT_INDEX32 = 0x66,D3DDDIFMT_Q16W16V16U16 = 0x6E,D3DDDIFMT_MULTI2_ARGB8 = 0x3154454D,D3DDDIFMT_R16F = 0x6F,D3DDDIFMT_G16R16F = 0x70,D3DDDIFMT_A16B16G16R16F = 0x71,D3DDDIFMT_R32F = 0x72,D3DDDIFMT_G32R32F = 0x73,D3DDDIFMT_A32B32G32R32F = 0x74,D3DDDIFMT_CxV8U8 = 0x75,D3DDDIFMT_A1 = 0x76,D3DDDIFMT_A2B10G10R10_XR_BIAS = 0x77,D3DDDIFMT_DXVACOMPBUFFER_BASE = 0x96,D3DDDIFMT_PICTUREPARAMSDATA = 0x96,D3DDDIFMT_MACROBLOCKDATA = 0x97,D3DDDIFMT_RESIDUALDIFFERENCEDATA = 0x98,D3DDDIFMT_DEBLOCKINGDATA = 0x99,D3DDDIFMT_INVERSEQUANTIZATIONDATA = 0x9A,D3DDDIFMT_SLICECONTROLDATA = 0x9B,D3DDDIFMT_BITSTREAMDATA = 0x9C,D3DDDIFMT_MOTIONVECTORBUFFER = 0x9D,D3DDDIFMT_FILMGRAINBUFFER = 0x9E,D3DDDIFMT_DXVA_RESERVED9 = 0x9F,D3DDDIFMT_DXVA_RESERVED10 = 0xA0,D3DDDIFMT_DXVA_RESERVED11 = 0xA1,D3DDDIFMT_DXVA_RESERVED12 = 0xA2,D3DDDIFMT_DXVA_RESERVED13 = 0xA3,D3DDDIFMT_DXVA_RESERVED14 = 0xA4,D3DDDIFMT_DXVA_RESERVED15 = 0xA5,D3DDDIFMT_DXVA_RESERVED16 = 0xA6,D3DDDIFMT_DXVA_RESERVED17 = 0xA7,D3DDDIFMT_DXVA_RESERVED18 = 0xA8,D3DDDIFMT_DXVA_RESERVED19 = 0xA9,D3DDDIFMT_DXVA_RESERVED20 = 0xAA,D3DDDIFMT_DXVA_RESERVED21 = 0xAB,D3DDDIFMT_DXVA_RESERVED22 = 0xAC,D3DDDIFMT_DXVA_RESERVED23 = 0xAD,D3DDDIFMT_DXVA_RESERVED24 = 0xAE,D3DDDIFMT_DXVA_RESERVED25 = 0xAF,D3DDDIFMT_DXVA_RESERVED26 = 0xB0,D3DDDIFMT_DXVA_RESERVED27 = 0xB1,D3DDDIFMT_DXVA_RESERVED28 = 0xB2,D3DDDIFMT_DXVA_RESERVED29 = 0xB3,D3DDDIFMT_DXVA_RESERVED30 = 0xB4,D3DDDIFMT_DXVA_RESERVED31 = 0xB5,D3DDDIFMT_DXVACOMPBUFFER_MAX = 0xB5,D3DDDIFMT_BINARYBUFFER = 0xC7,D3DDDIFMT_FORCE_UINT = 0x7FFFFFFF,};
struct _DEVICE_FLAGS {unsigned int Failed : 1;unsigned int ReadOnly : 1;unsigned int Removable : 1;unsigned int ConsoleIn : 1;unsigned int ConsoleOut : 1;unsigned int Input : 1;unsigned int Output : 1;};
enum _ELEMENT_TYPE {AllElements = 0x0,ChangerTransport = 0x1,ChangerSlot = 0x2,ChangerIEPort = 0x3,ChangerDrive = 0x4,ChangerDoor = 0x5,ChangerKeypad = 0x6,ChangerMaxElement = 0x7,};
typedef struct _798F2A0931AE69495F6CF5BE64E576B5 _FPIEEE_VALUE;
enum _IRQ_PRIORITY {IrqPriorityUndefined = 0x0,IrqPriorityLow = 0x1,IrqPriorityNormal = 0x2,IrqPriorityHigh = 0x3,};
struct _ISOCH_HEADER {unsigned int IH_Sy : 4;unsigned int IH_tCode : 4;unsigned int IH_Channel : 6;unsigned int IH_Tag : 2;unsigned int IH_Data_Length : 16;};
struct _KTRANSACTION;
enum _KWAIT_REASON {Executive = 0x0,FreePage = 0x1,PageIn = 0x2,PoolAllocation = 0x3,DelayExecution = 0x4,Suspended = 0x5,UserRequest = 0x6,WrExecutive = 0x7,WrFreePage = 0x8,WrPageIn = 0x9,WrPoolAllocation = 0xA,WrDelayExecution = 0xB,WrSuspended = 0xC,WrUserRequest = 0xD,WrEventPair = 0xE,WrQueue = 0xF,WrLpcReceive = 0x10,WrLpcReply = 0x11,WrVirtualMemory = 0x12,WrPageOut = 0x13,WrRendezvous = 0x14,WrKeyedEvent = 0x15,WrTerminated = 0x16,WrProcessInSwap = 0x17,WrCpuRateControl = 0x18,WrCalloutStack = 0x19,WrKernel = 0x1A,WrResource = 0x1B,WrPushLock = 0x1C,WrMutex = 0x1D,WrQuantumEnd = 0x1E,WrDispatchInt = 0x1F,WrPreempted = 0x20,WrYieldExecution = 0x21,WrFastMutex = 0x22,WrGuardedMutex = 0x23,WrRundown = 0x24,WrAlertByThreadId = 0x25,WrDeferredPreempt = 0x26,MaximumWaitReason = 0x27,};
enum _MMFLUSH_TYPE {MmFlushForDelete = 0x0,MmFlushForWrite = 0x1,};
struct _NDIS_AF_LIST;
struct _NODE_ADDRESS {unsigned short NA_Node_Number : 6;unsigned short NA_Bus_Number : 10;};
typedef int (*_RTC_error_fn)(int,  char *, int,  char *,  char *, ...);
enum _RX_FILE_TYPE {FileTypeNotYetKnown = 0x0,FileTypeDirectory = 0x2,FileTypeFile = 0x3,};
struct _SDRESP_TYPE3 {unsigned int Reserved1 : 4;unsigned int VoltageProfile : 20;unsigned int Reserved2 : 7;unsigned int PowerState : 1;};
struct _SELF_ID_MORE {unsigned int SID_Phys_ID : 6;unsigned int SID_Packet_ID : 2;unsigned int SID_PortA : 2;unsigned int SID_Reserved2 : 2;unsigned int SID_Sequence : 3;unsigned int SID_One : 1;unsigned int SID_PortE : 2;unsigned int SID_PortD : 2;unsigned int SID_PortC : 2;unsigned int SID_PortB : 2;unsigned int SID_More_Packets : 1;unsigned int SID_Reserved3 : 1;unsigned int SID_PortH : 2;unsigned int SID_PortG : 2;unsigned int SID_PortF : 2;};
enum _SID_NAME_USE {SidTypeUser = 0x1,SidTypeGroup = 0x2,SidTypeDomain = 0x3,SidTypeAlias = 0x4,SidTypeWellKnownGroup = 0x5,SidTypeDeletedAccount = 0x6,SidTypeInvalid = 0x7,SidTypeUnknown = 0x8,SidTypeComputer = 0x9,SidTypeLabel = 0xA,};
enum _VPD_CODE_SET {VpdCodeSetReserved = 0x0,VpdCodeSetBinary = 0x1,VpdCodeSetAscii = 0x2,VpdCodeSetUTF8 = 0x3,};
enum _VP_POOL_TYPE {VpNonPagedPool = 0x0,VpPagedPool = 0x1,VpNonPagedPoolCacheAligned = 0x4,VpPagedPoolCacheAligned = 0x5,};
enum _WWAN_IP_TYPE {WwanIPTypeDefault = 0x0,WwanIPTypeIPv4 = 0x1,WwanIPTypeIPv6 = 0x2,WwanIPTypeIpv4v6 = 0x3,};
struct __JUMP_BUFFER {unsigned int Ebp;unsigned int Ebx;unsigned int Edi;unsigned int Esi;unsigned int Esp;unsigned int Eip;unsigned int Registration;unsigned int TryLevel;unsigned int Cookie;unsigned int UnwindFunc;unsigned int UnwindData[6];};
struct adpcmcoef_tag {short iCoef1;short iCoef2;};
typedef void (*pHalEndOfBoot)(void);
typedef struct threadlocaleinfostruct threadlocinfo;
typedef struct _ACCESS_RANGE ACCESS_RANGE;
typedef struct _ACCESS_STATE ACCESS_STATE;
typedef struct _ADDRESS_FIFO ADDRESS_FIFO;
typedef struct addrinfoex2A ADDRINFOEX2A;
typedef struct addrinfoex2W ADDRINFOEX2W;
typedef struct adpcmcoef_tag ADPCMCOEFSET;
typedef struct _AGP_STD_DATA AGP_STD_DATA;
typedef struct _ASYNC_PACKET ASYNC_PACKET;
typedef struct _ATM_CAUSE_IE ATM_CAUSE_IE;
typedef struct _AUDIO_OUTPUT AUDIO_OUTPUT;
typedef struct _AddTarget_IN AddTarget_IN;
enum BDA_EVENT_ID {BDA_EVENT_SIGNAL_LOSS = 0x0,BDA_EVENT_SIGNAL_LOCK = 0x1,BDA_EVENT_DATA_START = 0x2,BDA_EVENT_DATA_STOP = 0x3,BDA_EVENT_CHANNEL_ACQUIRED = 0x4,BDA_EVENT_CHANNEL_LOST = 0x5,BDA_EVENT_CHANNEL_SOURCE_CHANGED = 0x6,BDA_EVENT_CHANNEL_ACTIVATED = 0x7,BDA_EVENT_CHANNEL_DEACTIVATED = 0x8,BDA_EVENT_SUBCHANNEL_ACQUIRED = 0x9,BDA_EVENT_SUBCHANNEL_LOST = 0xA,BDA_EVENT_SUBCHANNEL_SOURCE_CHANGED = 0xB,BDA_EVENT_SUBCHANNEL_ACTIVATED = 0xC,BDA_EVENT_SUBCHANNEL_DEACTIVATED = 0xD,BDA_EVENT_ACCESS_GRANTED = 0xE,BDA_EVENT_ACCESS_DENIED = 0xF,BDA_EVENT_OFFER_EXTENDED = 0x10,BDA_EVENT_PURCHASE_COMPLETED = 0x11,BDA_EVENT_SMART_CARD_INSERTED = 0x12,BDA_EVENT_SMART_CARD_REMOVED = 0x13,};
typedef struct _BTHX_VERSION BTHX_VERSION;
typedef struct _BUS_INFO_IDS BUS_INFO_IDS;
typedef struct _CC_BYTE_PAIR CC_BYTE_PAIR;
typedef struct _CIP_HDR2_FDF CIP_HDR2_FDF;
typedef struct _CIP_HDR2_SYT CIP_HDR2_SYT;
typedef struct _CLFS_NODE_ID CLFS_NODE_ID;
typedef struct _CMP_SET_PLUG CMP_SET_PLUG;
typedef struct _CM_ROM_BLOCK CM_ROM_BLOCK;
typedef struct _CONNECT_DATA CONNECT_DATA;
typedef struct _DEVICE_FLAGS DEVICE_FLAGS;
typedef struct _DISK_LOGGING DISK_LOGGING;
typedef struct _DRIVERSTATUS DRIVERSTATUS;
typedef struct _DSM_COUNTERS DSM_COUNTERS;
typedef struct _DualMonoInfo DualMonoInfo;
typedef struct _FCP_GET_RESPONSE FCP_RESPONSE;
typedef struct _GENERIC_ANDX GENERIC_ANDX;
typedef struct _GET_UNIT_IDS GET_UNIT_IDS;
typedef struct group_filter GROUP_FILTER;
typedef struct _93B241075AB814F9677BDB457CD6BECF HAL_DISPATCH;
typedef struct HBA_fc4types HBA_FC4TYPES;
typedef struct HBA_MgmtInfo HBA_MGMTINFO;
typedef struct HENHMETAFILE__ *HENHMETAFILE;
typedef struct _DDC9888807A9735D7BAE133B998CF89F I2CINTERFACE;
typedef struct _ICMP_MESSAGE ICMP_MESSAGE;
typedef struct _IDEREGISTERS IDEREGISTERS;
typedef struct _IMAGE_SYMBOL IMAGE_SYMBOL;
typedef struct _IO_NMISOURCE IO_NMISOURCE;
typedef IPRouteEntry_V3 IPRouteEntry;
struct IPortWavePci {struct IPortWavePciVtbl *lpVtbl;};
struct IPowerNotify {struct IPowerNotifyVtbl *lpVtbl;};
struct IRegistryKey {struct IRegistryKeyVtbl *lpVtbl;};
typedef struct _ISOCH_HEADER ISOCH_HEADER;
struct IServiceSink {struct IServiceSinkVtbl *lpVtbl;};
typedef union _A4FB595EF421231CAF150DDD3288A6D5 KSDATAFORMAT;
typedef struct _BBE51AA07033B60919BF464EA8FAB770 KSEVENT_ITEM;
typedef struct _117E3A994AEBF040E18388CACE709509 KSIDENTIFIER;
typedef struct _D9863DBF23EBBD7F74D85DDE027E035E KSMETHOD_SET;
typedef struct _KSM_PIN_PAIR KSM_PIN_PAIR;
typedef struct _KSPROCESSPIN KSPROCESSPIN;
typedef struct _204C6CB5B1CC0D35B371E5C594718A83 KSRESOLUTION;
typedef struct _KSYSTEM_TIME KSYSTEM_TIME;
typedef struct _KS_DVD_YCrCb KS_DVD_YCrCb;
typedef struct tagKS_VIDEOINFO KS_VIDEOINFO;
typedef struct _KTRANSACTION KTRANSACTION;
typedef struct cmsghdr *LPWSACMSGHDR;
typedef struct _LanguageInfo LanguageInfo;
enum MACRO_ACCESS {ACCESS_SYSTEM_SECURITY = 0x1000000,};
enum MACRO_ACTIVE {ACTIVE_EX_WORKER_THREAD_TERMINATION = 0xE9,};
enum MACRO_ASSERT {ASSERT_PRIMARY = 0x8,ASSERT_ALTERNATE = 0x9,};
enum MACRO_ATDISK {ATDISK_DRIVER_INTERNAL = 0x42,};
enum MACRO_BINARY {BINARY_COMPATIBLE = 0,};
enum MACRO_BITMAP {BITMAP_BITS_BYTE_ALIGN = 8,BITMAP_BITS_WORD_ALIGN = 16,BITMAP_ARRAY_BYTE = 3,BITMAP_PLANES = 1,BITMAP_BITS_PIXEL = 1,};
enum MACRO_BTHDDI {BTHDDI_ENUMERATOR_INTERFACE_VERSION_FOR_QI = 0x200,BTHDDI_PROFILE_DRIVER_INTERFACE_VERSION_FOR_QI = 0x200,};
enum MACRO_BUFSIZ {BUFSIZ = 512,};
enum MACRO_CANCEL {CANCEL_STATE_IN_COMPLETED_IRP = 0x48,};
enum MACRO_CANNOT {CANNOT_WRITE_CONFIGURATION = 0x75,};
enum MACRO_CC_MAX {CC_MAX_HW_DECODE_LINES = 12,};
enum MACRO_CD_RAW {CD_RAW_READ_C2_SIZE = 296,CD_RAW_READ_SUBCODE_SIZE = 96,CD_RAW_SECTOR_WITH_C2_SIZE = 2648,CD_RAW_SECTOR_WITH_SUBCODE_SIZE = 2448,CD_RAW_SECTOR_WITH_C2_AND_SUBCODE_SIZE = 2744,};
enum MACRO_CERT_E {CERT_E_REVOKED = 0x800B010C,CERT_E_UNTRUSTEDTESTROOT = 0x800B010D,CERT_E_REVOCATION_FAILURE = 0x800B010E,CERT_E_CN_NO_MATCH = 0x800B010F,CERT_E_WRONG_USAGE = 0x800B0110,};
enum MACRO_CHANGE {CHANGE_BUFFERING_STATE_CONTEXT = 0xFFFFFFFF,CHANGE_BUFFERING_STATE_CONTEXT_WAIT = 0xFFFFFFFE,};
enum MACRO_CLOCKS {CLOCKS_PER_SEC = 1000,};
enum MACRO_CLSCTX {CLSCTX_KERNEL_SERVER = 0x200,};
enum MACRO_COMMIT {COMMIT_POLICY_OUT_Status_ID = 1,MSSmBios_RawSMBiosTables_Used20CallingMethod_ID = 1,MSSmBios_RawSMBiosTables_SmbiosMajorVersion_ID = 2,MSSmBios_RawSMBiosTables_SmbiosMinorVersion_ID = 3,MSSmBios_RawSMBiosTables_DmiRevision_ID = 4,MSSmBios_RawSMBiosTables_Size_ID = 5,MSSmBios_RawSMBiosTables_SMBiosData_ID = 6,SYSID_UUID_Uuid_ID = 1,MSSmBios_SysidUUIDList_Count_ID = 1,MSSmBios_SysidUUIDList_List_ID = 2,SYSID_1394_x1394_ID = 1,MSSmBios_Sysid1394List_Count_ID = 1,MSSmBios_Sysid1394List_List_ID = 2,MSMCAEvent_Header_RecordId_ID = 1,MSMCAEvent_Header_ErrorSeverity_ID = 2,MSMCAEvent_Header_Type_ID = 3,MSMCAEvent_Header_Cpu_ID = 4,MSMCAEvent_Header_AdditionalErrors_ID = 5,MSMCAEvent_Header_LogToEventlog_ID = 6,MSMCAEvent_BusError_RecordId_ID = 1,MSMCAEvent_BusError_ErrorSeverity_ID = 2,MSMCAEvent_BusError_Type_ID = 3,MSMCAEvent_BusError_Cpu_ID = 4,MSMCAEvent_BusError_AdditionalErrors_ID = 5,MSMCAEvent_BusError_LogToEventlog_ID = 6,MSMCAEvent_BusError_Participation_ID = 7,MSMCAEvent_BusError_MemoryHierarchyLevel_ID = 8,MSMCAEvent_BusError_RequestType_ID = 9,MSMCAEvent_BusError_MemOrIo_ID = 10,MSMCAEvent_BusError_Address_ID = 11,MSMCAEvent_BusError_Size_ID = 12,MSMCAEvent_BusError_RawRecord_ID = 13,MSMCAEvent_TLBError_RecordId_ID = 1,MSMCAEvent_TLBError_ErrorSeverity_ID = 2,MSMCAEvent_TLBError_Type_ID = 3,MSMCAEvent_TLBError_Cpu_ID = 4,MSMCAEvent_TLBError_AdditionalErrors_ID = 5,MSMCAEvent_TLBError_LogToEventlog_ID = 6,MSMCAEvent_TLBError_TransactionType_ID = 7,MSMCAEvent_TLBError_MemoryHierarchyLevel_ID = 8,MSMCAEvent_TLBError_Address_ID = 9,MSMCAEvent_TLBError_Size_ID = 10,MSMCAEvent_TLBError_RawRecord_ID = 11,MSMCAEvent_MemoryHierarchyError_RecordId_ID = 1,MSMCAEvent_MemoryHierarchyError_ErrorSeverity_ID = 2,MSMCAEvent_MemoryHierarchyError_Type_ID = 3,MSMCAEvent_MemoryHierarchyError_Cpu_ID = 4,MSMCAEvent_MemoryHierarchyError_AdditionalErrors_ID = 5,MSMCAEvent_MemoryHierarchyError_LogToEventlog_ID = 6,MSMCAEvent_MemoryHierarchyError_TransactionType_ID = 7,MSMCAEvent_MemoryHierarchyError_MemoryHierarchyLevel_ID = 8,MSMCAEvent_MemoryHierarchyError_RequestType_ID = 9,MSMCAEvent_MemoryHierarchyError_Address_ID = 10,MSMCAEvent_MemoryHierarchyError_Size_ID = 11,MSMCAEvent_MemoryHierarchyError_RawRecord_ID = 12,MSMCAEvent_CPUError_RecordId_ID = 1,MSMCAEvent_CPUError_ErrorSeverity_ID = 2,MSMCAEvent_CPUError_Type_ID = 3,MSMCAEvent_CPUError_Cpu_ID = 4,MSMCAEvent_CPUError_AdditionalErrors_ID = 5,MSMCAEvent_CPUError_LogToEventlog_ID = 6,};
enum MACRO_COMMON {COMMON_LVB_LEADING_BYTE = 0x100,COMMON_LVB_TRAILING_BYTE = 0x200,COMMON_LVB_GRID_HORIZONTAL = 0x400,COMMON_LVB_GRID_LVERTICAL = 0x800,COMMON_LVB_GRID_RVERTICAL = 0x1000,COMMON_LVB_REVERSE_VIDEO = 0x4000,COMMON_LVB_UNDERSCORE = 0x8000,COMMON_LVB_SBCSDBCS = 0x300,};
enum MACRO_CONFIG {CONFIG_ROM_KEY_MASK = 0xFF,CONFIG_ROM_OFFSET_MASK = 0xFFFFFF00,};
enum MACRO_CREATE {CREATE_DELETE_LOCK_NOT_LOCKED = 0x14,};
enum MACRO_CRYPTO {CRYPTO_SELF_TEST_FAILURE = 0x123,};
enum MACRO_D2DERR {D2DERR_WRONG_STATE = 0x88990001,D2DERR_NOT_INITIALIZED = 0x88990002,D2DERR_UNSUPPORTED_OPERATION = 0x88990003,D2DERR_SCANNER_FAILED = 0x88990004,D2DERR_SCREEN_ACCESS_DENIED = 0x88990005,D2DERR_DISPLAY_STATE_INVALID = 0x88990006,D2DERR_ZERO_VECTOR = 0x88990007,D2DERR_INTERNAL_ERROR = 0x88990008,D2DERR_DISPLAY_FORMAT_NOT_SUPPORTED = 0x88990009,D2DERR_INVALID_CALL = 0x8899000A,D2DERR_NO_HARDWARE_DEVICE = 0x8899000B,D2DERR_RECREATE_TARGET = 0x8899000C,D2DERR_TOO_MANY_SHADER_ELEMENTS = 0x8899000D,D2DERR_SHADER_COMPILE_FAILED = 0x8899000E,D2DERR_MAX_TEXTURE_SIZE_EXCEEDED = 0x8899000F,D2DERR_UNSUPPORTED_VERSION = 0x88990010,D2DERR_BAD_NUMBER = 0x88990011,D2DERR_WRONG_FACTORY = 0x88990012,D2DERR_LAYER_ALREADY_IN_USE = 0x88990013,D2DERR_POP_CALL_DID_NOT_MATCH_PUSH = 0x88990014,D2DERR_WRONG_RESOURCE_DOMAIN = 0x88990015,D2DERR_PUSH_POP_UNBALANCED = 0x88990016,D2DERR_RENDER_TARGET_HAS_LAYER_OR_CLIPRECT = 0x88990017,D2DERR_INCOMPATIBLE_BRUSH_TYPES = 0x88990018,D2DERR_WIN32_ERROR = 0x88990019,D2DERR_TARGET_NOT_GDI_COMPATIBLE = 0x8899001A,D2DERR_TEXT_EFFECT_IS_WRONG_TYPE = 0x8899001B,D2DERR_TEXT_RENDERER_NOT_RELEASED = 0x8899001C,D2DERR_EXCEEDS_MAX_BITMAP_SIZE = 0x8899001D,D2DERR_INVALID_GRAPH_CONFIGURATION = 0x8899001E,D2DERR_INVALID_INTERNAL_GRAPH_CONFIGURATION = 0x8899001F,D2DERR_CYCLIC_GRAPH = 0x88990020,D2DERR_BITMAP_CANNOT_DRAW = 0x88990021,D2DERR_OUTSTANDING_BITMAP_REFERENCES = 0x88990022,D2DERR_ORIGINAL_TARGET_NOT_BOUND = 0x88990023,D2DERR_INVALID_TARGET = 0x88990024,D2DERR_BITMAP_BOUND_AS_TARGET = 0x88990025,D2DERR_INSUFFICIENT_DEVICE_CAPABILITIES = 0x88990026,D2DERR_INTERMEDIATE_TOO_LARGE = 0x88990027,D2DERR_EFFECT_IS_NOT_REGISTERED = 0x88990028,D2DERR_INVALID_PROPERTY = 0x88990029,D2DERR_NO_SUBPROPERTIES = 0x8899002A,D2DERR_PRINT_JOB_CLOSED = 0x8899002B,D2DERR_PRINT_FORMAT_NOT_SUPPORTED = 0x8899002C,D2DERR_TOO_MANY_TRANSFORM_INPUTS = 0x8899002D,};
enum MACRO_D3COLD {D3COLD_SUPPORT_INTERFACE_VERSION = 1,};
enum MACRO_D3DDDI {D3DDDI_ID_UNINITIALIZED = 4294967295,D3DDDI_ID_NOTAPPLICABLE = 0,D3DDDI_ID_ALL = 4294967293,};
enum MACRO_DATA_S {DATA_S_SAMEFORMATETC = 0x40130,};
enum MACRO_DBG_NO {DBG_NO_STATE_CHANGE = 0xC0010001,DBG_APP_NOT_IDLE = 0xC0010002,};
enum MACRO_DC10GB {DC10GB = 51,};
enum MACRO_DC6037 {DC6037 = 5,};
enum MACRO_DC6150 {DC6150 = 6,};
enum MACRO_DC6250 {DC6250 = 7,DC6320 = 8,};
enum MACRO_DC6525 {DC6525 = 9,};
enum MACRO_DC9100 {DC9100 = 36,};
enum MACRO_DC9120 {DC9120 = 37,};
enum MACRO_DC9135 {DC9135 = 35,};
enum MACRO_DC9164 {DC9164 = 39,};
enum MACRO_DC9200 {DC9200 = 52,};
enum MACRO_DC9210 {DC9210 = 34,};
enum MACRO_DC9400 {DC9400 = 65,};
enum MACRO_DC9500 {DC9500 = 66,};
enum MACRO_DCXXXX {DCXXXX = 0,DC300 = 1,DC300XLP = 2,};
enum MACRO_DELETE {DELETE = 0x10000,};
enum MACRO_DEVICE {DEVICE_QUEUE_NOT_BUSY = 0x2,};
enum MACRO_DFLAGS {DFLAGS_REMOVABLE_MEDIA = 1,DFLAGS_INT_DRQ = 2,DFLAGS_MSN_SUPPORT = 4,DFLAGS_REMOVABLE_DEVICE = 8,DFLAGS_1667_DEVICE = 16,DFLAGS_FUA_SUPPORT = 4096,};
enum MACRO_DIGSIG {DIGSIG_E_ENCODE = 0x800B0005,DIGSIG_E_DECODE = 0x800B0006,DIGSIG_E_EXTENSIBILITY = 0x800B0007,DIGSIG_E_CRYPTO = 0x800B0008,};
enum MACRO_DOMAIN {DOMAIN = 1,SING = 2,};
enum MACRO_DO_NOT {DO_NOT_RETRY_PURGE = 2,DO_NOT_PURGE_DIRTY_PAGES = 4,};
enum MACRO_DPFLTR {DPFLTR_ERROR_LEVEL = 0,DPFLTR_WARNING_LEVEL = 1,DPFLTR_TRACE_LEVEL = 2,DPFLTR_INFO_LEVEL = 3,DPFLTR_MASK = -2147483648,};
enum MACRO_DRIVER {DRIVER_POWER_STATE_FAILURE = 0x9F,};
enum MACRO_DWMERR {DWMERR_STATE_TRANSITION_FAILED = 0x88980700,DWMERR_THEME_FAILED = 0x88980701,DWMERR_CATASTROPHIC_FAILURE = 0x88980702,};
enum MACRO_DWRITE {DWRITE_E_FILEFORMAT = 0x88985000,DWRITE_E_UNEXPECTED = 0x88985001,DWRITE_E_NOFONT = 0x88985002,DWRITE_E_FILENOTFOUND = 0x88985003,DWRITE_E_FILEACCESS = 0x88985004,DWRITE_E_FONTCOLLECTIONOBSOLETE = 0x88985005,DWRITE_E_ALREADYREGISTERED = 0x88985006,DWRITE_E_CACHEFORMAT = 0x88985007,DWRITE_E_CACHEVERSION = 0x88985008,DWRITE_E_UNSUPPORTEDOPERATION = 0x88985009,};
enum MACRO_EMARCH {EMARCH_ENC_I17_IMM7B_INST_WORD_X = 3,EMARCH_ENC_I17_IMM7B_SIZE_X = 7,EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X = 4,EMARCH_ENC_I17_IMM7B_VAL_POS_X = 0,EMARCH_ENC_I17_IMM9D_INST_WORD_X = 3,EMARCH_ENC_I17_IMM9D_SIZE_X = 9,EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X = 18,EMARCH_ENC_I17_IMM9D_VAL_POS_X = 7,EMARCH_ENC_I17_IMM5C_INST_WORD_X = 3,EMARCH_ENC_I17_IMM5C_SIZE_X = 5,EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X = 13,EMARCH_ENC_I17_IMM5C_VAL_POS_X = 16,EMARCH_ENC_I17_IC_INST_WORD_X = 3,EMARCH_ENC_I17_IC_SIZE_X = 1,EMARCH_ENC_I17_IC_INST_WORD_POS_X = 12,EMARCH_ENC_I17_IC_VAL_POS_X = 21,EMARCH_ENC_I17_IMM41a_INST_WORD_X = 1,EMARCH_ENC_I17_IMM41a_SIZE_X = 10,EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X = 14,EMARCH_ENC_I17_IMM41a_VAL_POS_X = 22,EMARCH_ENC_I17_IMM41b_INST_WORD_X = 1,EMARCH_ENC_I17_IMM41b_SIZE_X = 8,EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X = 24,EMARCH_ENC_I17_IMM41b_VAL_POS_X = 32,EMARCH_ENC_I17_IMM41c_INST_WORD_X = 2,EMARCH_ENC_I17_IMM41c_SIZE_X = 23,EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X = 0,EMARCH_ENC_I17_IMM41c_VAL_POS_X = 40,EMARCH_ENC_I17_SIGN_INST_WORD_X = 3,EMARCH_ENC_I17_SIGN_SIZE_X = 1,EMARCH_ENC_I17_SIGN_INST_WORD_POS_X = 27,EMARCH_ENC_I17_SIGN_VAL_POS_X = 63,};
enum MACRO_ENABLE {ENABLE_DISABLE_AUTOSAVE = 0xD2,};
enum MACRO_ENDIAN {_LITTLE_ENDIAN = 1234,_BIG_ENDIAN = 4321,_PDP_ENDIAN = 3412,};
enum MACRO_ENUM_E {ENUM_E_FIRST = 0x800401B0,ENUM_E_LAST = 0x800401BF,ENUM_S_FIRST = 0x401B0,ENUM_S_LAST = 0x401BF,};
enum MACRO_EPT_NT {EPT_NT_CANT_CREATE = 0xC002004C,};
enum MACRO_ERRATA {ERRATA_FLAG_RESET_TT_ON_CANCEL = 1,ERRATA_FLAG_NO_CLEAR_TT_BUFFER_ON_CANCEL = 2,};
enum MACRO_ERRORS {IGNORE_ERRORS = 0x10000,RETURN_ERRORS = 0x20000,};
enum MACRO_ERRTYP {ERRTYP_INTERNAL = 0x1,ERRTYP_BUS = 0x10,ERRTYP_MEM = 0x4,ERRTYP_TLB = 0x5,ERRTYP_CACHE = 0x6,ERRTYP_FUNCTION = 0x7,ERRTYP_SELFTEST = 0x8,ERRTYP_FLOW = 0x9,ERRTYP_MAP = 0x11,ERRTYP_IMPROPER = 0x12,ERRTYP_UNIMPL = 0x13,ERRTYP_LOSSOFLOCKSTEP = 0x14,ERRTYP_RESPONSE = 0x15,ERRTYP_PARITY = 0x16,ERRTYP_PROTOCOL = 0x17,ERRTYP_PATHERROR = 0x18,ERRTYP_TIMEOUT = 0x19,ERRTYP_POISONED = 0x1A,};
enum MACRO_ERR_V1 {CD_ERR_V1 = 0x1,ID_ERR_V1 = 0x1,};
enum MACRO_FAILED {CRITICAL_SERVICE_FAILED = 0x5A,SET_ENV_VAR_FAILED = 0x5B,HAL_INITIALIZATION_FAILED = 0x5C,};
enum MACRO_FAULTY {FAULTY_HARDWARE_CORRUPTED_PAGE = 0x12B,};
enum MACRO_FLOPPY {FLOPPY_INTERNAL_ERROR = 0x37,};
enum MACRO_FLTMGR {FLTMGR_FILE_SYSTEM = 0xF5,};
enum MACRO_FOREST {FOREST_USER_RID_MAX = 0x1F3,};
enum MACRO_GET_FP {GET_FP_CAPABILITY_OUT_Capability_ID = 1,};
enum MACRO_HTTP_E {HTTP_E_STATUS_UNEXPECTED = 0x80190001,HTTP_E_STATUS_UNEXPECTED_REDIRECTION = 0x80190003,HTTP_E_STATUS_UNEXPECTED_CLIENT_ERROR = 0x80190004,HTTP_E_STATUS_UNEXPECTED_SERVER_ERROR = 0x80190005,HTTP_E_STATUS_AMBIGUOUS = 0x8019012C,HTTP_E_STATUS_MOVED = 0x8019012D,HTTP_E_STATUS_REDIRECT = 0x8019012E,HTTP_E_STATUS_REDIRECT_METHOD = 0x8019012F,HTTP_E_STATUS_NOT_MODIFIED = 0x80190130,HTTP_E_STATUS_USE_PROXY = 0x80190131,HTTP_E_STATUS_REDIRECT_KEEP_VERB = 0x80190133,HTTP_E_STATUS_BAD_REQUEST = 0x80190190,HTTP_E_STATUS_DENIED = 0x80190191,HTTP_E_STATUS_PAYMENT_REQ = 0x80190192,HTTP_E_STATUS_FORBIDDEN = 0x80190193,HTTP_E_STATUS_NOT_FOUND = 0x80190194,HTTP_E_STATUS_BAD_METHOD = 0x80190195,HTTP_E_STATUS_NONE_ACCEPTABLE = 0x80190196,HTTP_E_STATUS_PROXY_AUTH_REQ = 0x80190197,HTTP_E_STATUS_REQUEST_TIMEOUT = 0x80190198,HTTP_E_STATUS_CONFLICT = 0x80190199,HTTP_E_STATUS_GONE = 0x8019019A,HTTP_E_STATUS_LENGTH_REQUIRED = 0x8019019B,HTTP_E_STATUS_PRECOND_FAILED = 0x8019019C,HTTP_E_STATUS_REQUEST_TOO_LARGE = 0x8019019D,HTTP_E_STATUS_URI_TOO_LONG = 0x8019019E,HTTP_E_STATUS_UNSUPPORTED_MEDIA = 0x8019019F,HTTP_E_STATUS_RANGE_NOT_SATISFIABLE = 0x801901A0,HTTP_E_STATUS_EXPECTATION_FAILED = 0x801901A1,HTTP_E_STATUS_SERVER_ERROR = 0x801901F4,HTTP_E_STATUS_NOT_SUPPORTED = 0x801901F5,HTTP_E_STATUS_BAD_GATEWAY = 0x801901F6,HTTP_E_STATUS_SERVICE_UNAVAIL = 0x801901F7,HTTP_E_STATUS_GATEWAY_TIMEOUT = 0x801901F8,HTTP_E_STATUS_VERSION_NOT_SUP = 0x801901F9,};
enum MACRO_ICMPV4 {ICMPV4_INVALID_PREFERENCE_LEVEL = 0x80000000,};
enum MACRO_ICMPV6 {ICMPV6_ECHO_REQUEST_FLAG_REVERSE = 0x1,};
enum MACRO_IDE_GP {IDE_GP_LOG_DIRECTORY_ADDRESS = 0x0,IDE_GP_LOG_DEVICE_STATISTICS_ADDRESS = 0x4,IDE_GP_LOG_NCQ_COMMAND_ERROR_ADDRESS = 0x10,IDE_GP_LOG_CURRENT_DEVICE_INTERNAL_STATUS = 0x24,IDE_GP_LOG_SAVED_DEVICE_INTERNAL_STATUS = 0x25,IDE_GP_LOG_IDENTIFY_DEVICE_DATA_ADDRESS = 0x30,IDE_GP_LOG_SECTOR_SIZE = 0x200,IDE_GP_LOG_VERSION = 0x1,IDE_GP_LOG_SUPPORTED_PAGES = 0x0,IDE_GP_LOG_DEVICE_STATISTICS_GENERAL_PAGE = 0x1,IDE_GP_LOG_IDENTIFY_DEVICE_DATA_SATA_PAGE = 0x8,};
enum MACRO_IEPORT {EXTEND_IEPORT = 2,RETRACT_IEPORT = 3,};
enum MACRO_IMPORT {IMPORT_OBJECT_HDR_SIG2 = 0xFFFF,};
enum MACRO_INADDR {INADDR_ANY = 0x0,INADDR_LOOPBACK = 0x7F000001,INADDR_BROADCAST = 0xFFFFFFFF,INADDR_NONE = 0xFFFFFFFFFFFFFFFF,};
enum MACRO_INJECT {INJECT_ERRTYPE_PROCESSOR_CORRECTABLE = 0x1,INJECT_ERRTYPE_PROCESSOR_UNCORRECTABLENONFATAL = 0x2,INJECT_ERRTYPE_PROCESSOR_UNCORRECTABLEFATAL = 0x4,INJECT_ERRTYPE_MEMORY_CORRECTABLE = 0x8,INJECT_ERRTYPE_MEMORY_UNCORRECTABLENONFATAL = 0x10,INJECT_ERRTYPE_MEMORY_UNCORRECTABLEFATAL = 0x20,INJECT_ERRTYPE_PCIEXPRESS_CORRECTABLE = 0x40,INJECT_ERRTYPE_PCIEXPRESS_UNCORRECTABLENONFATAL = 0x80,INJECT_ERRTYPE_PCIEXPRESS_UNCORRECTABLEFATAL = 0x100,INJECT_ERRTYPE_PLATFORM_CORRECTABLE = 0x200,INJECT_ERRTYPE_PLATFORM_UNCORRECTABLENONFATAL = 0x400,INJECT_ERRTYPE_PLATFORM_UNCORRECTABLEFATAL = 0x800,};
enum MACRO_IO_ERR {IO_ERR_INSUFFICIENT_RESOURCES = 0xC0040002,IO_ERR_DRIVER_ERROR = 0xC0040004,IO_ERR_SEEK_ERROR = 0xC0040006,IO_ERR_BAD_BLOCK = 0xC0040007,IO_ERR_TIMEOUT = 0xC0040009,IO_ERR_CONTROLLER_ERROR = 0xC004000B,IO_ERR_NOT_READY = 0xC004000F,IO_ERR_INVALID_REQUEST = 0xC0040010,IO_ERR_RESET = 0xC0040013,IO_ERR_BAD_FIRMWARE = 0xC0040019,IO_WRN_BAD_FIRMWARE = 0x8004001A,IO_WRITE_CACHE_ENABLED = 0x80040020,IO_RECOVERED_VIA_ECC = 0x80040021,IO_WRITE_CACHE_DISABLED = 0x80040022,IO_WARNING_PAGING_FAILURE = 0x80040033,IO_WRN_FAILURE_PREDICTED = 0x80040034,IO_WARNING_ALLOCATION_FAILED = 0x80040038,IO_WARNING_DUPLICATE_SIGNATURE = 0x8004003A,IO_WARNING_DUPLICATE_PATH = 0x8004003B,IO_WARNING_WRITE_FUA_PROBLEM = 0x80040084,IO_WARNING_VOLUME_LOST_DISK_EXTENT = 0x8004008E,IO_WARNING_DEVICE_HAS_INTERNAL_DUMP = 0x8004008F,IO_WARNING_SOFT_THRESHOLD_REACHED = 0x80040090,IO_WARNING_SOFT_THRESHOLD_REACHED_EX = 0x80040091,IO_WARNING_SOFT_THRESHOLD_REACHED_EX_LUN_LUN = 0x80040092,IO_WARNING_SOFT_THRESHOLD_REACHED_EX_LUN_POOL = 0x80040093,IO_WARNING_SOFT_THRESHOLD_REACHED_EX_POOL_LUN = 0x80040094,IO_WARNING_SOFT_THRESHOLD_REACHED_EX_POOL_POOL = 0x80040095,IO_ERROR_DISK_RESOURCES_EXHAUSTED = 0xC0040096,IO_WARNING_DISK_CAPACITY_CHANGED = 0x80040097,IO_WARNING_DISK_PROVISIONING_TYPE_CHANGED = 0x80040098,IO_WARNING_IO_OPERATION_RETRIED = 0x80040099,IO_ERROR_IO_HARDWARE_ERROR = 0xC004009A,IO_WARNING_COMPLETION_TIME = 0x8004009B,IO_ERR_RETRY_SUCCEEDED = 0x40001,IO_ERR_CONFIGURATION_ERROR = 0xC0040003,IO_ERR_PARITY = 0xC0040005,IO_ERR_OVERRUN_ERROR = 0xC0040008,IO_ERR_SEQUENCE = 0xC004000A,IO_ERR_INTERNAL_ERROR = 0xC004000C,IO_ERR_INCORRECT_IRQL = 0xC004000D,IO_ERR_INVALID_IOBASE = 0xC004000E,IO_ERR_VERSION = 0xC0040011,IO_ERR_LAYERED_FAILURE = 0xC0040012,IO_ERR_PROTOCOL = 0xC0040014,IO_ERR_MEMORY_CONFLICT_DETECTED = 0xC0040015,IO_ERR_PORT_CONFLICT_DETECTED = 0xC0040016,IO_ERR_DMA_CONFLICT_DETECTED = 0xC0040017,IO_ERR_IRQ_CONFLICT_DETECTED = 0xC0040018,IO_ERR_DMA_RESOURCE_CONFLICT = 0xC004001B,IO_ERR_INTERRUPT_RESOURCE_CONFLICT = 0xC004001C,IO_ERR_MEMORY_RESOURCE_CONFLICT = 0xC004001D,IO_ERR_PORT_RESOURCE_CONFLICT = 0xC004001E,IO_BAD_BLOCK_WITH_NAME = 0xC004001F,IO_FILE_QUOTA_THRESHOLD = 0x40040024,IO_FILE_QUOTA_LIMIT = 0x40040025,IO_FILE_QUOTA_STARTED = 0x40040026,IO_FILE_QUOTA_SUCCEEDED = 0x40040027,IO_FILE_QUOTA_FAILED = 0x80040028,IO_FILE_SYSTEM_CORRUPT = 0xC0040029,IO_FILE_QUOTA_CORRUPT = 0xC004002A,IO_SYSTEM_SLEEP_FAILED = 0xC004002B,IO_DUMP_POINTER_FAILURE = 0xC004002C,IO_DUMP_DRIVER_LOAD_FAILURE = 0xC004002D,IO_DUMP_INITIALIZATION_FAILURE = 0xC004002E,IO_DUMP_DUMPFILE_CONFLICT = 0xC004002F,IO_DUMP_DIRECT_CONFIG_FAILED = 0xC0040030,IO_DUMP_PAGE_CONFIG_FAILED = 0xC0040031,IO_LOST_DELAYED_WRITE = 0x80040032,IO_WARNING_INTERRUPT_STILL_PENDING = 0x80040035,IO_DRIVER_CANCEL_TIMEOUT = 0x80040036,IO_FILE_SYSTEM_CORRUPT_WITH_NAME = 0xC0040037,IO_WARNING_LOG_FLUSH_FAILED = 0x80040039,};
enum MACRO_IP6OPT {IP6OPT_TYPE_SKIP = 0x0,IP6OPT_TYPE_DISCARD = 0x40,IP6OPT_TYPE_FORCEICMP = 0x80,IP6OPT_TYPE_ICMP = 0xC0,IP6OPT_MUTABLE = 0x20,};
enum MACRO_IPPORT {IPPORT_TCPMUX = 1,IPPORT_ECHO = 7,IPPORT_DISCARD = 9,IPPORT_SYSTAT = 11,IPPORT_DAYTIME = 13,IPPORT_NETSTAT = 15,IPPORT_QOTD = 17,IPPORT_MSP = 18,IPPORT_CHARGEN = 19,IPPORT_FTP_DATA = 20,IPPORT_FTP = 21,IPPORT_TELNET = 23,IPPORT_SMTP = 25,IPPORT_TIMESERVER = 37,IPPORT_NAMESERVER = 42,IPPORT_WHOIS = 43,IPPORT_MTP = 57,IPPORT_TFTP = 69,IPPORT_RJE = 77,IPPORT_FINGER = 79,IPPORT_TTYLINK = 87,IPPORT_SUPDUP = 95,IPPORT_POP3 = 110,IPPORT_NTP = 123,IPPORT_EPMAP = 135,IPPORT_NETBIOS_NS = 137,IPPORT_NETBIOS_DGM = 138,IPPORT_NETBIOS_SSN = 139,IPPORT_IMAP = 143,IPPORT_SNMP = 161,IPPORT_SNMP_TRAP = 162,IPPORT_IMAP3 = 220,IPPORT_LDAP = 389,IPPORT_HTTPS = 443,IPPORT_MICROSOFT_DS = 445,IPPORT_EXECSERVER = 512,IPPORT_LOGINSERVER = 513,IPPORT_CMDSERVER = 514,IPPORT_EFSSERVER = 520,IPPORT_BIFFUDP = 512,IPPORT_WHOSERVER = 513,IPPORT_ROUTESERVER = 520,IPPORT_RESERVED = 1024,IPPORT_REGISTERED_MIN = 1024,IPPORT_REGISTERED_MAX = 49151,IPPORT_DYNAMIC_MIN = 49152,IPPORT_DYNAMIC_MAX = 65535,};
enum MACRO_IP_MIB {IP_MIB_STATS_ID = 1,IP_MIB_RTCHANGE_NOTIFY_ID = 2,};
enum MACRO_IP_VER {IP_VER_MASK = 0xF0,};
enum MACRO_IRP_MJ {IRP_MJ_ACQUIRE_FOR_SECTION_SYNCHRONIZATION = 255,IRP_MJ_RELEASE_FOR_SECTION_SYNCHRONIZATION = 254,IRP_MJ_ACQUIRE_FOR_MOD_WRITE = 253,IRP_MJ_RELEASE_FOR_MOD_WRITE = 252,IRP_MJ_ACQUIRE_FOR_CC_FLUSH = 251,IRP_MJ_RELEASE_FOR_CC_FLUSH = 250,IRP_MJ_FAST_IO_CHECK_IF_POSSIBLE = 243,IRP_MJ_NETWORK_QUERY_OPEN = 242,IRP_MJ_MDL_READ = 241,IRP_MJ_MDL_READ_COMPLETE = 240,IRP_MJ_PREPARE_MDL_WRITE = 239,IRP_MJ_MDL_WRITE_COMPLETE = 238,IRP_MJ_VOLUME_MOUNT = 237,IRP_MJ_VOLUME_DISMOUNT = 236,};
enum MACRO_IRP_MN {IRP_MN_QUERY_DIRECTORY = 0x1,IRP_MN_NOTIFY_CHANGE_DIRECTORY = 0x2,IRP_MN_USER_FS_REQUEST = 0x0,IRP_MN_MOUNT_VOLUME = 0x1,IRP_MN_VERIFY_VOLUME = 0x2,IRP_MN_LOAD_FILE_SYSTEM = 0x3,IRP_MN_TRACK_LINK = 0x4,IRP_MN_KERNEL_CALL = 0x4,IRP_MN_LOCK = 0x1,IRP_MN_UNLOCK_SINGLE = 0x2,IRP_MN_UNLOCK_ALL = 0x3,IRP_MN_UNLOCK_ALL_BY_KEY = 0x4,IRP_MN_FLUSH_AND_PURGE = 0x1,IRP_MN_FLUSH_DATA_ONLY = 0x2,IRP_MN_FLUSH_NO_SYNC = 0x3,IRP_MN_NORMAL = 0x0,IRP_MN_DPC = 0x1,IRP_MN_MDL = 0x2,IRP_MN_COMPLETE = 0x4,IRP_MN_COMPRESSED = 0x8,IRP_MN_MDL_DPC = 0x3,IRP_MN_COMPLETE_MDL = 0x6,IRP_MN_COMPLETE_MDL_DPC = 0x7,IRP_MN_QUERY_LEGACY_BUS_INFORMATION = 0x18,};
enum MACRO_JPEG_Y {JPEG_Y = 1,JPEG_YCbCr = 2,JPEG_RGB = 3,};
enum MACRO_KBDMOU {KBDMOU_COULD_NOT_SEND_COMMAND = 0x0,KBDMOU_COULD_NOT_SEND_PARAM = 0x1,KBDMOU_NO_RESPONSE = 0x2,KBDMOU_INCORRECT_RESPONSE = 0x4,};
enum MACRO_KERNEL {KERNEL_APC_PENDING_DURING_EXIT = 0x20,};
enum MACRO_KSRATE {KSRATE_NOPRESENTATIONSTART = 0x1,KSRATE_NOPRESENTATIONDURATION = 0x2,};
enum MACRO_KSWAVE {KSWAVE_COMPATCAPS_INPUT = 0x0,KSWAVE_COMPATCAPS_OUTPUT = 0x1,KSWAVE_BUFFER_ATTRIBUTEF_LOOPING = 0x1,KSWAVE_BUFFER_ATTRIBUTEF_STATIC = 0x2,};
enum MACRO_LEGACY {LEGACY_DEVICES_BIT = 0,LEGACY_DEVICES = 1,};
enum MACRO_LENGTH {MAX_UNICODE_STACK_BUFFER_LENGTH = 256,MSV1_0_CHALLENGE_LENGTH = 8,MSV1_0_USER_SESSION_KEY_LENGTH = 16,MSV1_0_LANMAN_SESSION_KEY_LENGTH = 8,};
enum MACRO_LOADER {LOADER_BLOCK_MISMATCH = 0x100,};
enum MACRO_LOCALE {LOCALE_NAME_MAX_LENGTH = 85,};
enum MACRO_LOCKED {LOCKED_PAGES_TRACKER_CORRUPTION = 0xD9,};
enum MACRO_LOOKUP {LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE = 0x1,LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET = 0x2,LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE = 0x4,LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_TXF_SYSTEM_FILE = 0x8,LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_MASK = 0xFF000000,LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_DATA = 0x1000000,LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_INDEX = 0x2000000,LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_SYSTEM = 0x3000000,};
enum MACRO_MAX_FW {MAX_FW_BUCKET_ID_LENGTH = 132,};
enum MACRO_MAX_HW {MAX_HW_COUNTERS = 16,};
enum MACRO_MAX_IF {MAX_IF_TYPE = 244,};
enum MACRO_MCW_IC {MCW_IC = 262144,};
enum MACRO_MCW_PC {MCW_PC = 196608,};
enum MACRO_MCW_RC {MCW_RC = 768,};
enum MACRO_MEDIUM {MEDIUM_CHANGER = 0x8,};
enum MACRO_MEMORY {MEMORY_ALLOCATION_ALIGNMENT = 8,};
enum MACRO_METHOD {METHOD_BUFFERED = 0,METHOD_IN_DIRECT = 1,METHOD_OUT_DIRECT = 2,METHOD_NEITHER = 3,METHOD_DIRECT_TO_HARDWARE = 1,METHOD_DIRECT_FROM_HARDWARE = 2,};
enum MACRO_MILERR {MILERR_OBJECTBUSY = 0x88980001,MILERR_INSUFFICIENTBUFFER = 0x88980002,MILERR_WIN32ERROR = 0x88980003,MILERR_SCANNER_FAILED = 0x88980004,MILERR_SCREENACCESSDENIED = 0x88980005,MILERR_DISPLAYSTATEINVALID = 0x88980006,MILERR_NONINVERTIBLEMATRIX = 0x88980007,MILERR_ZEROVECTOR = 0x88980008,MILERR_TERMINATED = 0x88980009,MILERR_BADNUMBER = 0x8898000A,MILERR_INTERNALERROR = 0x88980080,MILERR_DISPLAYFORMATNOTSUPPORTED = 0x88980084,MILERR_INVALIDCALL = 0x88980085,MILERR_ALREADYLOCKED = 0x88980086,MILERR_NOTLOCKED = 0x88980087,MILERR_DEVICECANNOTRENDERTEXT = 0x88980088,MILERR_GLYPHBITMAPMISSED = 0x88980089,MILERR_MALFORMEDGLYPHCACHE = 0x8898008A,MILERR_GENERIC_IGNORE = 0x8898008B,MILERR_MALFORMED_GUIDELINE_DATA = 0x8898008C,MILERR_NO_HARDWARE_DEVICE = 0x8898008D,MILERR_NEED_RECREATE_AND_PRESENT = 0x8898008E,MILERR_ALREADY_INITIALIZED = 0x8898008F,MILERR_MISMATCHED_SIZE = 0x88980090,MILERR_NO_REDIRECTION_SURFACE_AVAILABLE = 0x88980091,MILERR_REMOTING_NOT_SUPPORTED = 0x88980092,MILERR_QUEUED_PRESENT_NOT_SUPPORTED = 0x88980093,MILERR_NOT_QUEUING_PRESENTS = 0x88980094,MILERR_NO_REDIRECTION_SURFACE_RETRY_LATER = 0x88980095,MILERR_TOOMANYSHADERELEMNTS = 0x88980096,MILERR_MROW_READLOCK_FAILED = 0x88980097,MILERR_MROW_UPDATE_FAILED = 0x88980098,MILERR_SHADER_COMPILE_FAILED = 0x88980099,MILERR_MAX_TEXTURE_SIZE_EXCEEDED = 0x8898009A,MILERR_QPC_TIME_WENT_BACKWARD = 0x8898009B,MILERR_DXGI_ENUMERATION_OUT_OF_SYNC = 0x8898009D,MILERR_ADAPTER_NOT_FOUND = 0x8898009E,};
enum MACRO_MIN_IF {MIN_IF_TYPE = 1,};
enum MACRO_MSNdis {MSNdis_NetworkAddress_Address_ID = 1,MSNdis_NetworkShortAddress_Address_ID = 1,MSNdis_NetworkLinkSpeed_Outbound_ID = 1,MSNdis_NetworkLinkSpeed_Inbound_ID = 2,MSNdis_EnumerateAdapter_DeviceName_ID = 1,MSNdis_NotifyAdapterRemoval_DeviceName_ID = 1,MSNdis_NotifyAdapterArrival_DeviceName_ID = 1,MSNdis_DeviceWakeOnMagicPacketOnly_EnableWakeOnMagicPacketOnly_ID = 1,MSNdis_RSSEnabled_RSSEnabled_ID = 1,MSNdis_NetworkDirectState_Enabled_ID = 1,MSNdis_NetworkDirectVersion_MajorVersionNumber_ID = 1,MSNdis_NetworkDirectVersion_MinorVersionNumber_ID = 2,MSNdis_NetworkDirectAdapterInfo_Version_ID = 1,MSNdis_NetworkDirectAdapterInfo_VendorId_ID = 2,MSNdis_NetworkDirectAdapterInfo_DeviceId_ID = 3,MSNdis_NetworkDirectAdapterInfo_MaxRegistrationSize_ID = 4,MSNdis_NetworkDirectAdapterInfo_MaxWindowSize_ID = 5,MSNdis_NetworkDirectAdapterInfo_FRMRPageCount_ID = 6,MSNdis_NetworkDirectAdapterInfo_MaxInitiatorRequestSge_ID = 7,MSNdis_NetworkDirectAdapterInfo_MaxReceiveRequestSge_ID = 8,MSNdis_NetworkDirectAdapterInfo_MaxReadRequestSge_ID = 9,MSNdis_NetworkDirectAdapterInfo_MaxTransferLength_ID = 10,MSNdis_NetworkDirectAdapterInfo_MaxInlineDataSize_ID = 11,MSNdis_NetworkDirectAdapterInfo_MaxInboundReadLimit_ID = 12,MSNdis_NetworkDirectAdapterInfo_MaxOutboundReadLimit_ID = 13,MSNdis_NetworkDirectAdapterInfo_MaxReceiveQueueDepth_ID = 14,MSNdis_NetworkDirectAdapterInfo_MaxInitiatorQueueDepth_ID = 15,MSNdis_NetworkDirectAdapterInfo_MaxSrqDepth_ID = 16,MSNdis_NetworkDirectAdapterInfo_MaxCqDepth_ID = 17,MSNdis_NetworkDirectAdapterInfo_LargeRequestThreshold_ID = 18,MSNdis_NetworkDirectAdapterInfo_MaxCallerData_ID = 19,MSNdis_NetworkDirectAdapterInfo_MaxCalleeData_ID = 20,MSNdis_NetworkDirectAdapterInfo_InOrderDMA_ID = 21,MSNdis_NetworkDirectAdapterInfo_SupportsCQResize_ID = 22,MSNdis_NetworkDirectAdapterInfo_SupportsLoopbackConnections_ID = 23,MSNdis_NetworkDirectAdapterCapabilities_MaxQpCount_ID = 1,MSNdis_NetworkDirectAdapterCapabilities_MaxCqCount_ID = 2,MSNdis_NetworkDirectAdapterCapabilities_MaxMrCount_ID = 3,MSNdis_NetworkDirectAdapterCapabilities_MaxPdCount_ID = 4,MSNdis_NetworkDirectAdapterCapabilities_MaxInboundReadLimit_ID = 5,MSNdis_NetworkDirectAdapterCapabilities_MaxOutboundReadLimit_ID = 6,MSNdis_NetworkDirectAdapterCapabilities_MaxMwCount_ID = 7,MSNdis_NetworkDirectAdapterCapabilities_MaxSrqCount_ID = 8,MSNdis_NetworkDirectAdapterCapabilities_MissingCounterMask_ID = 9,MSNdis_NetworkDirectAdapterCapabilities_NdAdapterInfo_ID = 10,MSNdis_NetworkDirectCapabilities_NdCapabilities_ID = 1,MSNdis_HardwareStatus_NdisHardwareStatus_ID = 1,MSNdis_MediaSupported_NumberElements_ID = 1,MSNdis_MediaSupported_NdisMediaSupported_ID = 2,MSNdis_MediaInUse_NumberElements_ID = 1,MSNdis_MediaInUse_NdisMediaInUse_ID = 2,MSNdis_MaximumLookahead_NdisMaximumLookahead_ID = 1,MSNdis_MaximumFrameSize_NdisMaximumFrameSize_ID = 1,MSNdis_LinkSpeed_NdisLinkSpeed_ID = 1,MSNdis_TransmitBufferSpace_NdisTransmitBufferSpace_ID = 1,MSNdis_ReceiveBufferSpace_NdisReceiveBufferSpace_ID = 1,MSNdis_TransmitBlockSize_NdisTransmitBlockSize_ID = 1,MSNdis_ReceiveBlockSize_NdisReceiveBlockSize_ID = 1,MSNdis_VendorID_NdisVendorID_ID = 1,MSNdis_VendorDescription_NdisVendorDescription_ID = 1,MSNdis_CurrentPacketFilter_NdisCurrentPacketFilter_ID = 1,MSNdis_CurrentLookahead_NdisCurrentLookahead_ID = 1,MSNdis_DriverVersion_NdisDriverVersion_ID = 1,MSNdis_MaximumTotalSize_NdisMaximumTotalSize_ID = 1,MSNdis_MacOptions_NdisMacOptions_ID = 1,MSNdis_MediaConnectStatus_NdisMediaConnectStatus_ID = 1,MSNdis_MaximumSendPackets_NdisMaximumSendPackets_ID = 1,MSNdis_VendorDriverVersion_NdisVendorDriverVersion_ID = 1,MSNdis_VlanIdentifier_NdisVlanId_ID = 1,MSNdis_PhysicalMediumType_NdisPhysicalMediumType_ID = 1,MSNdis_TransmitsOk_NdisTransmitsOk_ID = 1,MSNdis_ReceivesOk_NdisReceivesOk_ID = 1,MSNdis_TransmitsError_NdisTransmitsError_ID = 1,MSNdis_ReceiveError_NdisReceiveError_ID = 1,MSNdis_ReceiveNoBuffer_NdisReceiveNoBuffer_ID = 1,MSNdis_CoHardwareStatus_NdisCoHardwareStatus_ID = 1,MSNdis_CoMediaSupported_NumberElements_ID = 1,MSNdis_CoMediaSupported_NdisCoMediaSupported_ID = 2,MSNdis_CoMediaInUse_NumberElements_ID = 1,MSNdis_CoMediaInUse_NdisCoMediaInUse_ID = 2,MSNdis_CoLinkSpeed_NdisCoLinkSpeed_ID = 1,MSNdis_CoVendorId_NdisCoVendorID_ID = 1,MSNdis_CoVendorDescription_NdisCoVendorDescription_ID = 1,MSNdis_CoDriverVersion_NdisCoDriverVersion_ID = 1,MSNdis_CoMacOptions_NdisCoMacOptions_ID = 1,MSNdis_CoMediaConnectStatus_NdisCoMediaConnectStatus_ID = 1,MSNdis_CoVendorDriverVersion_NdisCoVendorDriverVersion_ID = 1,MSNdis_CoMinimumLinkSpeed_NdisCoMinimumLinkSpeed_ID = 1,MSNdis_CoTransmitPdusOk_NdisCoTransmitPdusOk_ID = 1,MSNdis_CoReceivePdusOk_NdisCoReceivePdusOk_ID = 1,MSNdis_CoTransmitPduErrors_NdisCoTransmitPduErrors_ID = 1,MSNdis_CoReceivePduErrors_NdisCoReceivePduErrors_ID = 1,MSNdis_CoReceivePdusNoBuffer_NdisCoReceivePdusNoBuffer_ID = 1,MSNdis_AtmSupportedVcRates_MinCellRate_ID = 1,MSNdis_AtmSupportedVcRates_MaxCellRate_ID = 2,MSNdis_AtmSupportedServiceCategory_NdisAtmSupportedServiceCategory_ID = 1,MSNdis_AtmSupportedAalTypes_NdisAtmSupportedAalTypes_ID = 1,MSNdis_AtmHardwareCurrentAddress_NdisAtmHardwareCurrentAddress_ID = 1,MSNdis_AtmMaxActiveVcs_NdisAtmMaxActiveVcs_ID = 1,MSNdis_AtmMaxActiveVciBits_NdisAtmMaxActiveVciBits_ID = 1,MSNdis_AtmMaxActiveVpiBits_NdisAtmMaxActiveVpiBits_ID = 1,MSNdis_AtmMaxAal0PacketSize_NdisAtmMaxAal0PacketSize_ID = 1,MSNdis_AtmMaxAal1PacketSize_NdisAtmMaxAal1PacketSize_ID = 1,MSNdis_AtmMaxAal34PacketSize_NdisAtmMaxAal34PacketSize_ID = 1,MSNdis_AtmMaxAal5PacketSize_NdisAtmMaxAal5PacketSize_ID = 1,MSNdis_AtmReceiveCellsOk_NdisAtmReceiveCellsOk_ID = 1,MSNdis_AtmTransmitCellsOk_NdisAtmTransmitCellsOk_ID = 1,MSNdis_AtmReceiveCellsDropped_NdisAtmReceiveCellsDropped_ID = 1,MSNdis_EthernetPermanentAddress_NdisPermanentAddress_ID = 1,MSNdis_EthernetCurrentAddress_NdisCurrentAddress_ID = 1,MSNdis_EthernetMulticastList_NumberElements_ID = 1,MSNdis_EthernetMulticastList_NdisMulticastList_ID = 2,MSNdis_EthernetMaximumMulticastListSize_NdisEthernetMaximumMulticastListSize_ID = 1,MSNdis_EthernetMacOptions_NdisEthernetMacOptions_ID = 1,MSNdis_EthernetReceiveErrorAlignment_NdisEthernetReceiveErrorAlignment_ID = 1,MSNdis_EthernetOneTransmitCollision_NdisEthernetOneTransmitCollision_ID = 1,MSNdis_EthernetMoreTransmitCollisions_NdisEthernetMoreTransmitCollisions_ID = 1,MSNdis_TokenRingPermanentAddress_NdisPermanentAddress_ID = 1,MSNdis_TokenRingCurrentAddress_NdisCurrentAddress_ID = 1,MSNdis_TokenRingCurrentFunctional_NdisTokenRingCurrentFunctional_ID = 1,MSNdis_TokenRingCurrentGroup_NdisTokenRingCurrentGroup_ID = 1,MSNdis_TokenRingLastOpenStatus_NdisTokenRingLastOpenStatus_ID = 1,MSNdis_TokenRingCurrentRingStatus_NdisTokenRingCurrentRingStatus_ID = 1,MSNdis_TokenRingCurrentRingState_NdisTokenRingCurrentRingState_ID = 1,MSNdis_TokenRingLineErrors_NdisTokenRingLineErrors_ID = 1,MSNdis_TokenRingLostFrames_NdisTokenRingLostFrames_ID = 1,MSNdis_FddiLongPermanentAddress_NdisPermanentAddress_ID = 1,MSNdis_FddiLongCurrentAddress_NdisCurrentAddress_ID = 1,MSNdis_FddiLongMulticastList_NumberElements_ID = 1,MSNdis_FddiLongMulticastList_NdisMulticastList_ID = 2,MSNdis_FddiLongMaximumListSize_NdisFddiLongMaximumListSize_ID = 1,MSNdis_FddiShortPermanentAddress_NdisPermanentAddress_ID = 1,MSNdis_FddiShortCurrentAddress_NdisCurrentAddress_ID = 1,MSNdis_FddiShortMulticastList_NumberElements_ID = 1,MSNdis_FddiShortMulticastList_NdisMulticastList_ID = 2,MSNdis_FddiShortMaximumListSize_NdisFddiShortMaximumListSize_ID = 1,MSNdis_FddiAttachmentType_NdisFddiAttachmentType_ID = 1,MSNdis_FddiUpstreamNodeLong_NdisFddiUpstreamNodeLong_ID = 1,MSNdis_FddiDownstreamNodeLong_NdisFddiDownstreamNodeLong_ID = 1,MSNdis_FddiFrameErrors_NdisFddiFrameErrors_ID = 1,MSNdis_FddiFramesLost_NdisFddiFramesLost_ID = 1,MSNdis_FddiRingManagmentState_NdisFddiRingManagmentState_ID = 1,MSNdis_FddiLctFailures_NdisFddiLctFailures_ID = 1,MSNdis_FddiLemRejects_NdisFddiLemRejects_ID = 1,MSNdis_FddiLConnectionState_NdisFddiLConnectionState_ID = 1,MSNdis_ObjectHeader_Type_ID = 1,MSNdis_ObjectHeader_Revision_ID = 2,MSNdis_ObjectHeader_Size_ID = 3,MSNdis_WmiMethodHeader_Header_ID = 1,MSNdis_WmiMethodHeader_PortNumber_ID = 2,MSNdis_WmiMethodHeader_NetLuid_ID = 3,MSNdis_WmiMethodHeader_RequestId_ID = 4,MSNdis_WmiMethodHeader_Timeout_ID = 5,MSNdis_WmiMethodHeader_Padding_ID = 6,MSNdis_WmiSetHeader_Header_ID = 1,MSNdis_WmiSetHeader_PortNumber_ID = 2,MSNdis_WmiSetHeader_NetLuid_ID = 3,MSNdis_WmiSetHeader_RequestId_ID = 4,MSNdis_WmiSetHeader_Timeout_ID = 5,MSNdis_WmiSetHeader_Padding_ID = 6,MSNdis_WmiOutputInfo_Header_ID = 1,MSNdis_WmiOutputInfo_Flags_ID = 2,MSNdis_WmiOutputInfo_SupportedRevision_ID = 3,MSNdis_WmiOutputInfo_Padding1_ID = 4,MSNdis_WmiOutputInfo_Padding2_ID = 5,MSNdis_WmiOutputInfo_DataOffset_ID = 6,MSNdis_WmiEnumAdapter_Header_ID = 1,MSNdis_WmiEnumAdapter_IfIndex_ID = 2,MSNdis_WmiEnumAdapter_NetLuid_ID = 3,MSNdis_WmiEnumAdapter_DeviceName_ID = 4,MSNdis_LinkStateData_Header_ID = 1,MSNdis_LinkStateData_MediaConnectState_ID = 2,MSNdis_LinkStateData_MediaDuplexState_ID = 3,MSNdis_LinkStateData_XmitLinkSpeed_ID = 4,MSNdis_LinkStateData_RcvLinkSpeed_ID = 5,MSNdis_LinkStateData_PauseFunctions_ID = 6,MSNdis_LinkStateData_AutoNegotiationFlags_ID = 7,MSNdis_LinkParameters_Header_ID = 1,MSNdis_LinkParameters_MediaDuplexState_ID = 2,MSNdis_LinkParameters_XmitLinkSpeed_ID = 3,MSNdis_LinkParameters_RcvLinkSpeed_ID = 4,MSNdis_LinkParameters_PauseFunctions_ID = 5,MSNdis_LinkParameters_AutoNegotiationFlags_ID = 6,MSNdis_InterruptModerationParameters_Header_ID = 1,MSNdis_InterruptModerationParameters_Flags_ID = 2,MSNdis_InterruptModerationParameters_InterruptModeration_ID = 3,MSNdis_StatisticsInfo_Header_ID = 1,MSNdis_StatisticsInfo_SupportedStatistics_ID = 2,MSNdis_StatisticsInfo_ifInDiscards_ID = 3,MSNdis_StatisticsInfo_ifInErrors_ID = 4,MSNdis_StatisticsInfo_ifHCInOctets_ID = 5,MSNdis_StatisticsInfo_ifHCInUcastPkts_ID = 6,MSNdis_StatisticsInfo_ifHCInMulticastPkts_ID = 7,MSNdis_StatisticsInfo_ifHCInBroadcastPkts_ID = 8,MSNdis_StatisticsInfo_ifHCOutOctets_ID = 9,MSNdis_StatisticsInfo_ifHCOutUcastPkts_ID = 10,MSNdis_StatisticsInfo_ifHCOutMulticastPkts_ID = 11,MSNdis_StatisticsInfo_ifHCOutBroadcastPkts_ID = 12,MSNdis_StatisticsInfo_ifOutErrors_ID = 13,MSNdis_StatisticsInfo_ifOutDiscards_ID = 14,MSNdis_StatisticsInfo_ifHCInUcastOctets_ID = 15,MSNdis_StatisticsInfo_ifHCInMulticastOctets_ID = 16,MSNdis_StatisticsInfo_ifHCInBroadcastOctets_ID = 17,MSNdis_StatisticsInfo_ifHCOutUcastOctets_ID = 18,MSNdis_StatisticsInfo_ifHCOutMulticastOctets_ID = 19,MSNdis_StatisticsInfo_ifHCOutBroadcastOctets_ID = 20,MSNdis_PortStateData_Header_ID = 1,MSNdis_PortStateData_MediaConnectState_ID = 2,MSNdis_PortStateData_XmitLinkSpeed_ID = 3,MSNdis_PortStateData_RcvLinkSpeed_ID = 4,MSNdis_PortStateData_Direction_ID = 5,MSNdis_PortStateData_SendControlState_ID = 6,MSNdis_PortStateData_RcvControlState_ID = 7,MSNdis_PortStateData_SendAuthorizationState_ID = 8,MSNdis_PortStateData_RcvAuthorizationState_ID = 9,MSNdis_PortStateData_Flags_ID = 10,MSNdis_PortAuthParameters_Header_ID = 1,MSNdis_PortAuthParameters_SendControlState_ID = 2,MSNdis_PortAuthParameters_RcvControlState_ID = 3,MSNdis_PortAuthParameters_SendAuthorizationState_ID = 4,MSNdis_PortAuthParameters_RcvAuthorizationState_ID = 5,MSNdis_PortChar_Header_ID = 1,MSNdis_PortChar_PortNumber_ID = 2,MSNdis_PortChar_Flags_ID = 3,MSNdis_PortChar_Type_ID = 4,MSNdis_PortChar_MediaConnectState_ID = 5,MSNdis_PortChar_XmitLinkSpeed_ID = 6,MSNdis_PortChar_RcvLinkSpeed_ID = 7,MSNdis_PortChar_Direction_ID = 8,MSNdis_PortChar_SendControlState_ID = 9,MSNdis_PortChar_RcvControlState_ID = 10,MSNdis_PortChar_SendAuthorizationState_ID = 11,MSNdis_PortChar_RcvAuthorizationState_ID = 12,MSNdis_PortArray_Header_ID = 1,MSNdis_PortArray_NumberOfPorts_ID = 2,MSNdis_PortArray_OffsetFirstPort_ID = 3,MSNdis_PortArray_ElementSize_ID = 4,MSNdis_PortArray_Port_ID = 5,MSNdis_PciDeviceProperty_Header_ID = 1,MSNdis_PciDeviceProperty_DeviceType_ID = 2,MSNdis_PciDeviceProperty_CurrentSpeedAndMode_ID = 3,MSNdis_PciDeviceProperty_CurrentPayloadSize_ID = 4,MSNdis_PciDeviceProperty_MaxPayloadSize_ID = 5,MSNdis_PciDeviceProperty_MaxReadRequestSize_ID = 6,MSNdis_PciDeviceProperty_CurrentLinkSpeed_ID = 7,MSNdis_PciDeviceProperty_CurrentLinkWidth_ID = 8,MSNdis_PciDeviceProperty_MaxLinkSpeed_ID = 9,MSNdis_PciDeviceProperty_MaxLinkWidth_ID = 10,MSNdis_WmiTcpLargeSendOffloadV1_IPv4_Encapsulation_ID = 1,MSNdis_WmiTcpLargeSendOffloadV1_IPv4_MaxOffLoadSize_ID = 2,MSNdis_WmiTcpLargeSendOffloadV1_IPv4_MinSegmentCount_ID = 3,MSNdis_WmiTcpLargeSendOffloadV1_IPv4_TcpOptions_ID = 4,MSNdis_WmiTcpLargeSendOffloadV1_IPv4_IpOptions_ID = 5,MSNdis_WmiTcpLargeSendOffloadV1_WmiIPv4_ID = 1,MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_Encapsulation_ID = 1,MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_IpOptionsSupported_ID = 2,MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_TcpOptionsSupported_ID = 3,MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_TcpChecksum_ID = 4,MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_UdpChecksum_ID = 5,MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive_IpChecksum_ID = 6,MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive_Encapsulation_ID = 1,MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive_IpExtensionHeadersSupported_ID = 2,MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive_TcpOptionsSupported_ID = 3,MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive_TcpChecksum_ID = 4,MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive_UdpChecksum_ID = 5,MSNdis_WmiTcpIpChecksumOffload_IPv4Transmit_ID = 1,MSNdis_WmiTcpIpChecksumOffload_IPv4Receive_ID = 2,MSNdis_WmiTcpIpChecksumOffload_IPv6Transmit_ID = 3,MSNdis_WmiTcpIpChecksumOffload_IPv6Receive_ID = 4,MSNdis_WmiIPSecOffloadV1_Supported_Encapsulation_ID = 1,MSNdis_WmiIPSecOffloadV1_Supported_AhEspCombined_ID = 2,MSNdis_WmiIPSecOffloadV1_Supported_TransportTunnelCombined_ID = 3,MSNdis_WmiIPSecOffloadV1_Supported_IPv4Options_ID = 4,MSNdis_WmiIPSecOffloadV1_Supported_Flags_ID = 5,MSNdis_WmiIPSecOffloadV1_IPv4AH_Md5_ID = 1,MSNdis_WmiIPSecOffloadV1_IPv4AH_Sha_1_ID = 2,MSNdis_WmiIPSecOffloadV1_IPv4AH_Transport_ID = 3,MSNdis_WmiIPSecOffloadV1_IPv4AH_Tunnel_ID = 4,MSNdis_WmiIPSecOffloadV1_IPv4AH_Send_ID = 5,MSNdis_WmiIPSecOffloadV1_IPv4AH_Receive_ID = 6,MSNdis_WmiIPSecOffloadV1_IPv4ESP_Des_ID = 1,MSNdis_WmiIPSecOffloadV1_IPv4ESP_Reserved_ID = 2,MSNdis_WmiIPSecOffloadV1_IPv4ESP_TripleDes_ID = 3,MSNdis_WmiIPSecOffloadV1_IPv4ESP_NullEsp_ID = 4,MSNdis_WmiIPSecOffloadV1_IPv4ESP_Transport_ID = 5,MSNdis_WmiIPSecOffloadV1_IPv4ESP_Tunnel_ID = 6,MSNdis_WmiIPSecOffloadV1_IPv4ESP_Send_ID = 7,MSNdis_WmiIPSecOffloadV1_IPv4ESP_Receive_ID = 8,MSNdis_WmiIPSecOffloadV1_WmiSupported_ID = 1,MSNdis_WmiIPSecOffloadV1_WmiIPv4AH_ID = 2,MSNdis_WmiIPSecOffloadV1_WmiIPv4ESP_ID = 3,MSNdis_WmiTcpLargeSendOffloadV2_IPv4_Encapsulation_ID = 1,MSNdis_WmiTcpLargeSendOffloadV2_IPv4_MaxOffLoadSize_ID = 2,MSNdis_WmiTcpLargeSendOffloadV2_IPv4_MinSegmentCount_ID = 3,MSNdis_WmiTcpLargeSendOffloadV2_IPv6_Encapsulation_ID = 1,MSNdis_WmiTcpLargeSendOffloadV2_IPv6_MaxOffLoadSize_ID = 2,MSNdis_WmiTcpLargeSendOffloadV2_IPv6_MinSegmentCount_ID = 3,MSNdis_WmiTcpLargeSendOffloadV2_IPv6_IpExtensionHeadersSupported_ID = 4,MSNdis_WmiTcpLargeSendOffloadV2_IPv6_TcpOptionsSupported_ID = 5,MSNdis_WmiTcpLargeSendOffloadV2_WmiIPv4_ID = 1,MSNdis_WmiTcpLargeSendOffloadV2_WmiIPv6_ID = 2,MSNdis_WmiOffload_Header_ID = 1,MSNdis_WmiOffload_Checksum_ID = 2,MSNdis_WmiOffload_LsoV1_ID = 3,MSNdis_WmiOffload_IPsecV1_ID = 4,MSNdis_WmiOffload_LsoV2_ID = 5,MSNdis_WmiOffload_Flags_ID = 6,MSNdis_TcpOffloadParameters_Header_ID = 1,MSNdis_TcpOffloadParameters_IPv4Checksum_ID = 2,MSNdis_TcpOffloadParameters_TCPIPv4Checksum_ID = 3,MSNdis_TcpOffloadParameters_UDPIPv4Checksum_ID = 4,MSNdis_TcpOffloadParameters_TCPIPv6Checksum_ID = 5,MSNdis_TcpOffloadParameters_UDPIPv6Checksum_ID = 6,MSNdis_TcpOffloadParameters_LsoV1_ID = 7,MSNdis_TcpOffloadParameters_IPsec_ID = 8,MSNdis_TcpOffloadParameters_LsoV2IPv4_ID = 9,MSNdis_TcpOffloadParameters_LsoV2IPv6_ID = 10,MSNdis_TcpOffloadParameters_TcpConnectionIPv4_ID = 11,MSNdis_TcpOffloadParameters_TcpConnectionIPv6_ID = 12,MSNdis_TcpOffloadParameters_Flags_ID = 13,MSNdis_WmiTcpConnectionOffload_Header_ID = 1,MSNdis_WmiTcpConnectionOffload_Encapsulation_ID = 2,MSNdis_WmiTcpConnectionOffload_SupportIp4_ID = 3,MSNdis_WmiTcpConnectionOffload_SupportIp6_ID = 4,MSNdis_WmiTcpConnectionOffload_SupportIp6ExtensionHeaders_ID = 5,MSNdis_WmiTcpConnectionOffload_SupportSack_ID = 6,MSNdis_WmiTcpConnectionOffload_TcpConnectionOffloadCapacity_ID = 7,MSNdis_WmiTcpConnectionOffload_Flags_ID = 8,MSNdis_WmiHDSplitCurrentConfig_Header_ID = 1,MSNdis_WmiHDSplitCurrentConfig_HardwareCapabilities_ID = 2,MSNdis_WmiHDSplitCurrentConfig_CurrentCapabilities_ID = 3,MSNdis_WmiHDSplitCurrentConfig_HDSplitFlags_ID = 4,MSNdis_WmiHDSplitCurrentConfig_HDSplitCombineFlags_ID = 5,MSNdis_WmiHDSplitCurrentConfig_BackfillSize_ID = 6,MSNdis_WmiHDSplitCurrentConfig_MaxHeaderSize_ID = 7,MSNdis_HDSplitParameters_Header_ID = 1,MSNdis_HDSplitParameters_HDSplitCombineFlags_ID = 2,MSNdis_WmiReceiveScaleCapabilities_Header_ID = 1,MSNdis_WmiReceiveScaleCapabilities_CapabilitiesFlags_ID = 2,MSNdis_WmiReceiveScaleCapabilities_NumberOfInterruptMessages_ID = 3,MSNdis_WmiReceiveScaleCapabilities_NumberOfReceiveQueues_ID = 4,MSNdis_ReceiveFilterCapabilities_Header_ID = 1,MSNdis_ReceiveFilterCapabilities_Flags_ID = 2,MSNdis_ReceiveFilterCapabilities_EnabledFilterTypes_ID = 3,MSNdis_ReceiveFilterCapabilities_EnabledQueueTypes_ID = 4,MSNdis_ReceiveFilterCapabilities_NumQueues_ID = 5,MSNdis_ReceiveFilterCapabilities_SupportedQueueProperties_ID = 6,MSNdis_ReceiveFilterCapabilities_SupportedFilterTests_ID = 7,MSNdis_ReceiveFilterCapabilities_SupportedHeaders_ID = 8,MSNdis_ReceiveFilterCapabilities_SupportedMacHeaderFields_ID = 9,MSNdis_ReceiveFilterCapabilities_MaxMacHeaderFilters_ID = 10,MSNdis_ReceiveFilterCapabilities_MaxQueueGroups_ID = 11,MSNdis_ReceiveFilterCapabilities_MaxQueuesPerQueueGroup_ID = 12,MSNdis_ReceiveFilterCapabilities_MinLookaheadSplitSize_ID = 13,MSNdis_ReceiveFilterCapabilities_MaxLookaheadSplitSize_ID = 14,MSNdis_ReceiveFilterGlobalParameters_Header_ID = 1,MSNdis_ReceiveFilterGlobalParameters_Flags_ID = 2,MSNdis_ReceiveFilterGlobalParameters_EnabledFilterTypes_ID = 3,MSNdis_ReceiveFilterGlobalParameters_EnabledQueueTypes_ID = 4,MSNdis_CountedString_Length_ID = 1,MSNdis_CountedString_String_ID = 2,MSNdis_ReceiveFilterInfo_Header_ID = 1,MSNdis_ReceiveFilterInfo_Flags_ID = 2,MSNdis_ReceiveFilterInfo_FilterType_ID = 3,MSNdis_ReceiveFilterInfo_FilterId_ID = 4,MSNdis_ReceiveFilterInfoArray_Header_ID = 1,MSNdis_ReceiveFilterInfoArray_QueueId_ID = 2,MSNdis_ReceiveFilterInfoArray_FirstElementOffset_ID = 3,MSNdis_ReceiveFilterInfoArray_NumElements_ID = 4,MSNdis_ReceiveFilterInfoArray_ElementSize_ID = 5,MSNdis_ReceiveFilterInfoArray_Filter_ID = 6,MSNdis_ReceiveFilterFieldParameters_Header_ID = 1,MSNdis_ReceiveFilterFieldParameters_Flags_ID = 2,MSNdis_ReceiveFilterFieldParameters_FrameHeader_ID = 3,MSNdis_ReceiveFilterFieldParameters_ReceiveFilterTest_ID = 4,MSNdis_ReceiveFilterFieldParameters_MacHeaderField_ID = 5,MSNdis_ReceiveFilterFieldParameters_FieldByteArrayValue_ID = 6,MSNdis_ReceiveFilterFieldParameters_ResultByteArrayValue_ID = 7,MSNdis_ReceiveFilterParameters_Header_ID = 1,MSNdis_ReceiveFilterParameters_Flags_ID = 2,MSNdis_ReceiveFilterParameters_FilterType_ID = 3,MSNdis_ReceiveFilterParameters_QueueId_ID = 4,MSNdis_ReceiveFilterParameters_FilterId_ID = 5,MSNdis_ReceiveFilterParameters_FieldParametersArrayOffset_ID = 6,MSNdis_ReceiveFilterParameters_FieldParametersArrayNumElements_ID = 7,MSNdis_ReceiveFilterParameters_FieldParametersArrayElementSize_ID = 8,MSNdis_ReceiveFilterParameters_RequestedFilterIdBitCount_ID = 9,MSNdis_ReceiveFilterParameters_FieldParameters_ID = 10,MSNdis_NicSwitchCapabilities_Header_ID = 1,MSNdis_NicSwitchCapabilities_Flags_ID = 2,MSNdis_NicSwitchCapabilities_NdisReserved1_ID = 3,MSNdis_NicSwitchCapabilities_NumTotalMacAddresses_ID = 4,MSNdis_NicSwitchCapabilities_NumMacAddressesPerPort_ID = 5,MSNdis_NicSwitchCapabilities_NumVlansPerPort_ID = 6,MSNdis_NicSwitchCapabilities_NdisReserved2_ID = 7,MSNdis_NicSwitchCapabilities_NdisReserved3_ID = 8,MSNdis_GroupAffinity_Mask_ID = 1,MSNdis_GroupAffinity_Group_ID = 2,MSNdis_GroupAffinity_Reserved_ID = 3,MSNdis_ReceiveQueueParameters_Header_ID = 1,MSNdis_ReceiveQueueParameters_Flags_ID = 2,MSNdis_ReceiveQueueParameters_QueueType_ID = 3,MSNdis_ReceiveQueueParameters_QueueId_ID = 4,MSNdis_ReceiveQueueParameters_QueueGroupId_ID = 5,MSNdis_ReceiveQueueParameters_ProcessorAffinity_ID = 6,MSNdis_ReceiveQueueParameters_NumSuggestedReceiveBuffers_ID = 7,MSNdis_ReceiveQueueParameters_MSIXTableEntry_ID = 8,MSNdis_ReceiveQueueParameters_LookaheadSize_ID = 9,MSNdis_ReceiveQueueParameters_VmName_ID = 10,MSNdis_ReceiveQueueParameters_QueueName_ID = 11,MSNdis_ReceiveQueueInfo_Header_ID = 1,MSNdis_ReceiveQueueInfo_Flags_ID = 2,MSNdis_ReceiveQueueInfo_QueueType_ID = 3,MSNdis_ReceiveQueueInfo_QueueId_ID = 4,MSNdis_ReceiveQueueInfo_QueueGroupId_ID = 5,MSNdis_ReceiveQueueInfo_QueueState_ID = 6,MSNdis_ReceiveQueueInfo_ProcessorAffinity_ID = 7,MSNdis_ReceiveQueueInfo_NumSuggestedReceiveBuffers_ID = 8,MSNdis_ReceiveQueueInfo_MSIXTableEntry_ID = 9,MSNdis_ReceiveQueueInfo_LookaheadSize_ID = 10,MSNdis_ReceiveQueueInfo_VmName_ID = 11,MSNdis_ReceiveQueueInfo_QueueName_ID = 12,MSNdis_ReceiveQueueInfoArray_Header_ID = 1,MSNdis_ReceiveQueueInfoArray_FirstElementOffset_ID = 2,MSNdis_ReceiveQueueInfoArray_NumElements_ID = 3,MSNdis_ReceiveQueueInfoArray_ElementSize_ID = 4,MSNdis_ReceiveQueueInfoArray_Queue_ID = 5,};
enum MACRO_MSV1_0 {MSV1_0_SUBAUTHENTICATION_FLAGS = 0xFF000000,};
enum MACRO_MS_PPM {MS_PPM_SOFTWARE_ALL = 0x1,};
enum MACRO_MWDMA1 {MWDMA1 = 9,};
enum MACRO_MWDMA2 {MWDMA2 = 10,};
enum MACRO_NDIS_M {NDIS_M_MAX_LOOKAHEAD = 526,NDIS_INDICATE_ALL_NBLS = -1,NDIS_MINIPORT_INTERRUPT_REVISION_1 = 1,NDIS_MINIPORT_PNP_CHARACTERISTICS_REVISION_1 = 1,NDIS_SG_DMA_64_BIT_ADDRESS = 1,NDIS_SG_DMA_DESCRIPTION_REVISION_1 = 1,NDIS_MINIPORT_INIT_PARAMETERS_REVISION_1 = 1,NDIS_MINIPORT_RESTART_PARAMETERS_REVISION_1 = 1,NDIS_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES_REVISION_1 = 1,NDIS_STATISTICS_XMIT_OK_SUPPORTED = 1,NDIS_STATISTICS_RCV_OK_SUPPORTED = 2,NDIS_STATISTICS_XMIT_ERROR_SUPPORTED = 4,NDIS_STATISTICS_RCV_ERROR_SUPPORTED = 8,NDIS_STATISTICS_RCV_NO_BUFFER_SUPPORTED = 16,NDIS_STATISTICS_DIRECTED_BYTES_XMIT_SUPPORTED = 32,NDIS_STATISTICS_DIRECTED_FRAMES_XMIT_SUPPORTED = 64,NDIS_STATISTICS_MULTICAST_BYTES_XMIT_SUPPORTED = 128,NDIS_STATISTICS_MULTICAST_FRAMES_XMIT_SUPPORTED = 256,NDIS_STATISTICS_BROADCAST_BYTES_XMIT_SUPPORTED = 512,NDIS_STATISTICS_BROADCAST_FRAMES_XMIT_SUPPORTED = 1024,NDIS_STATISTICS_DIRECTED_BYTES_RCV_SUPPORTED = 2048,NDIS_STATISTICS_DIRECTED_FRAMES_RCV_SUPPORTED = 4096,NDIS_STATISTICS_MULTICAST_BYTES_RCV_SUPPORTED = 8192,NDIS_STATISTICS_MULTICAST_FRAMES_RCV_SUPPORTED = 16384,NDIS_STATISTICS_BROADCAST_BYTES_RCV_SUPPORTED = 32768,NDIS_STATISTICS_BROADCAST_FRAMES_RCV_SUPPORTED = 65536,NDIS_STATISTICS_RCV_CRC_ERROR_SUPPORTED = 131072,NDIS_STATISTICS_TRANSMIT_QUEUE_LENGTH_SUPPORTED = 262144,NDIS_STATISTICS_BYTES_RCV_SUPPORTED = 524288,NDIS_STATISTICS_BYTES_XMIT_SUPPORTED = 1048576,NDIS_STATISTICS_RCV_DISCARDS_SUPPORTED = 2097152,NDIS_STATISTICS_GEN_STATISTICS_SUPPORTED = 4194304,NDIS_STATISTICS_XMIT_DISCARDS_SUPPORTED = 134217728,NDIS_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES_REVISION_1 = 1,NDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES_REVISION_1 = 1,NDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES_REVISION_2 = 2,NDIS_HD_SPLIT_ATTRIBUTES_REVISION_1 = 1,NDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES_REVISION_1 = 1,NDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES_REVISION_2 = 2,NDIS_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES_REVISION_1 = 1,NDIS_MINIPORT_ADAPTER_802_11_ATTRIBUTES_REVISION_1 = 1,NDIS_MINIPORT_ADAPTER_802_11_ATTRIBUTES_REVISION_2 = 2,NDIS_MINIPORT_ADAPTER_802_11_ATTRIBUTES_REVISION_3 = 3,NDIS_MINIPORT_ATTRIBUTES_HARDWARE_DEVICE = 1,NDIS_MINIPORT_ATTRIBUTES_NDIS_WDM = 2,NDIS_MINIPORT_ATTRIBUTES_SURPRISE_REMOVE_OK = 4,NDIS_MINIPORT_ATTRIBUTES_NOT_CO_NDIS = 8,NDIS_MINIPORT_ATTRIBUTES_DO_NOT_BIND_TO_ALL_CO = 16,NDIS_MINIPORT_ATTRIBUTES_NO_HALT_ON_SUSPEND = 32,NDIS_MINIPORT_ATTRIBUTES_BUS_MASTER = 64,NDIS_MINIPORT_ATTRIBUTES_CONTROLS_DEFAULT_PORT = 128,NDIS_MINIPORT_PAUSE_PARAMETERS_REVISION_1 = 1,};
enum MACRO_NDK_CQ {NDK_CQ_NOTIFY_ERRORS = 0,NDK_CQ_NOTIFY_ANY = 1,NDK_CQ_NOTIFY_SOLICITED = 2,NDK_MR_FLAG_ALLOW_LOCAL_READ = 0,NDK_MR_FLAG_ALLOW_LOCAL_WRITE = 1,NDK_MR_FLAG_ALLOW_REMOTE_READ = 2,NDK_MR_FLAG_ALLOW_REMOTE_WRITE = 5,NDK_MR_FLAG_RDMA_READ_SINK = 8,NDK_OP_FLAG_SILENT_SUCCESS = 1,NDK_OP_FLAG_READ_FENCE = 2,NDK_OP_FLAG_SEND_AND_SOLICIT_EVENT = 4,NDK_OP_FLAG_ALLOW_REMOTE_READ = 8,NDK_OP_FLAG_ALLOW_LOCAL_WRITE = 16,NDK_OP_FLAG_ALLOW_REMOTE_WRITE = 48,NDK_OP_FLAG_INLINE = 64,NDK_OP_FLAG_RDMA_READ_SINK = 128,};
enum MACRO_NETMAN {NETMAN_VARTYPE_ULONG = 0,NETMAN_VARTYPE_HARDWARE_ADDRESS = 1,NETMAN_VARTYPE_STRING = 2,};
enum MACRO_NET_IF {NET_IF_CURRENT_SESSION = 4294967295,};
enum MACRO_NIBBLE {NIBBLE = 0x4,};
enum MACRO_NOTIFY {NOTIFY_FLAGS_NEVER = 0,NOTIFY_FLAGS_AFTER_READ = 1,NOTIFY_FLAGS_AFTER_WRITE = 2,NOTIFY_FLAGS_AFTER_LOCK = 4,};
enum MACRO_NO_BUS {NO_BUS_MANAGER = 0x3F,};
enum MACRO_NTE_OP {NTE_OP_OK = 0,};
enum MACRO_OBJECT {OBJECT_INITIALIZATION_FAILED = 0x5E,SECURITY_INITIALIZATION_FAILED = 0x5F,PROCESS_INITIALIZATION_FAILED = 0x60,HAL1_INITIALIZATION_FAILED = 0x61,OBJECT1_INITIALIZATION_FAILED = 0x62,SECURITY1_INITIALIZATION_FAILED = 0x63,SYMBOLIC_INITIALIZATION_FAILED = 0x64,MEMORY1_INITIALIZATION_FAILED = 0x65,CACHE_INITIALIZATION_FAILED = 0x66,CONFIG_INITIALIZATION_FAILED = 0x67,FILE_INITIALIZATION_FAILED = 0x68,IO1_INITIALIZATION_FAILED = 0x69,LPC_INITIALIZATION_FAILED = 0x6A,PROCESS1_INITIALIZATION_FAILED = 0x6B,REFMON_INITIALIZATION_FAILED = 0x6C,SESSION1_INITIALIZATION_FAILED = 0x6D,SESSION2_INITIALIZATION_FAILED = 0x6E,SESSION3_INITIALIZATION_FAILED = 0x6F,SESSION4_INITIALIZATION_FAILED = 0x70,SESSION5_INITIALIZATION_FAILED = 0x71,ASSIGN_DRIVE_LETTERS_FAILED = 0x72,CONFIG_LIST_FAILED = 0x73,};
enum MACRO_OFFSET {OFFSET_ECP_AFIFO = 0x0,};
enum MACRO_OLEOBJ {OLEOBJ_E_FIRST = 0x80040180,OLEOBJ_E_LAST = 0x8004018F,OLEOBJ_S_FIRST = 0x40180,OLEOBJ_S_LAST = 0x4018F,OLEOBJ_E_NOVERBS = 0x80040180,OLEOBJ_E_INVALIDVERB = 0x80040181,};
enum MACRO_OPLOCK {OPLOCK_KEY_VERSION_WIN7 = 0x1,OPLOCK_KEY_VERSION_WIN8 = 0x2,OPLOCK_KEY_FLAG_PARENT_KEY = 0x1,OPLOCK_KEY_FLAG_TARGET_KEY = 0x2,};
enum MACRO_PCCARD {PCCARD_MAP_ERROR = 0x1,PCCARD_DEVICE_PCI = 0x10,PCCARD_SCAN_DISABLED = 0x1,PCCARD_MAP_ZERO = 0x2,PCCARD_NO_TIMER = 0x3,PCCARD_NO_PIC = 0x4,PCCARD_NO_LEGACY_BASE = 0x5,PCCARD_DUP_LEGACY_BASE = 0x6,PCCARD_NO_CONTROLLERS = 0x7,};
enum MACRO_PCMCIA {PCMCIA_MEMORY_8BIT_ACCESS = 0,PCMCIA_MEMORY_16BIT_ACCESS = 1,PCMCIA_VPP_0V = 0,PCMCIA_VPP_12V = 1,PCMCIA_VPP_IS_VCC = 2,};
enum MACRO_PHASE0 {PHASE0_EXCEPTION = 0x78,};
enum MACRO_PLANAR {PLANAR_HC = 0x1,};
enum MACRO_POLICY {POLICY_AUDIT_SUBCATEGORY_COUNT = 56,};
enum MACRO_PRAGMA {PRAGMA_DEPRECATED_DDK = 0,};
enum MACRO_PREFIX {PREFIX_MISMATCH = 0xC00037EA,PREFIX_MISMATCH_FIXED = 0xC00037EB,PREFIX_MISMATCH_NOT_FIXED = 0xC00037EC,};
enum MACRO_P_LVL2 {P_LVL2_UP_ONLY_BIT = 3,P_LVL2_UP_ONLY = 8,};
enum MACRO_REFTAG {REFTAG_AFDCONN = 1130653249,REFTAG_AFDENDPOINT = 1164207681,REFTAG_AFDPOLL = 1348757057,REFTAG_ALEIO = 1231383617,REFTAG_ALEPROCTBL = 1348824129,REFTAG_ALESIDTOKEN = 1399155777,REFTAG_CFSFILTER = 1181967939,REFTAG_DWMKERNEL = 1265465156,REFTAG_HTTP = 1886680136,REFTAG_MAILSLOT = 1933996877,REFTAG_NFSVOLUME = 1450403406,REFTAG_PGMFILE = 1416456016,REFTAG_PSLOOKUP = 1431073616,REFTAG_PSWAKE = 1800893264,REFTAG_RAWENDPOINT = 1165451602,REFTAG_TCPENDPOINT = 1164993364,REFTAG_TCPLISTENER = 1282433876,REFTAG_TCPTCB = 1416651604,REFTAG_UDPENDPOINT = 1164993621,REFTAG_USRKDESKTOP = 1148351317,REFTAG_VIDEO_PORT_I386 = 1768188246,REFTAG_VIDEO_PORT = 1348757846,REFTAG_WIN32K = 1798452055,REFTAG_WIN32KQUEUE = 1899115351,REFTAG_WIN32KRESTRICT = 1915892567,REFTAG_WIN32KSERVER = 1395798871,REFTAG_WIN32KSTUBS = 1932669783,REFTAG_WS2IFSL = 1764914007,REFTAG_WSKNAMERES = 1315664727,REFTAG_WSKPROV = 1349219159,REFTAG_WSKTDI = 1416328023,};
enum MACRO_REMOTE {REMOTE_PROTOCOL_FLAG_LOOPBACK = 0x1,REMOTE_PROTOCOL_FLAG_OFFLINE = 0x2,REMOTE_PROTOCOL_FLAG_PERSISTENT_HANDLE = 0x4,REMOTE_PROTOCOL_FLAG_PRIVACY = 0x8,REMOTE_PROTOCOL_FLAG_INTEGRITY = 0x10,REMOTE_PROTOCOL_FLAG_MUTUAL_AUTH = 0x20,};
enum MACRO_REMOVE {REMOVE_PENDING = 1,REMOVE_COMPLETE = 2,};
enum MACRO_RESULT {RESULT_NEGATIVE = 32768,RESULT_ZERO = 16384,RESULT_POSITIVE = 0,};
enum MACRO_RETURN {RETURN_PRIMARY_USERNAME = 0x2,RETURN_PRIMARY_LOGON_DOMAINNAME = 0x4,RETURN_NON_NT_USER_SESSION_KEY = 0x8,};
enum MACRO_RPC_NT {RPC_NT_NOTHING_TO_EXPORT = 0xC0020037,RPC_NT_INCOMPLETE_NAME = 0xC0020038,RPC_NT_INVALID_VERS_OPTION = 0xC0020039,RPC_NT_NO_MORE_MEMBERS = 0xC002003A,RPC_NT_NOT_ALL_OBJS_UNEXPORTED = 0xC002003B,RPC_NT_INTERFACE_NOT_FOUND = 0xC002003C,RPC_NT_ENTRY_ALREADY_EXISTS = 0xC002003D,RPC_NT_ENTRY_NOT_FOUND = 0xC002003E,RPC_NT_NAME_SERVICE_UNAVAILABLE = 0xC002003F,RPC_NT_INVALID_NAF_ID = 0xC0020040,RPC_NT_CANNOT_SUPPORT = 0xC0020041,RPC_NT_NO_CONTEXT_AVAILABLE = 0xC0020042,RPC_NT_INTERNAL_ERROR = 0xC0020043,RPC_NT_ZERO_DIVIDE = 0xC0020044,RPC_NT_ADDRESS_ERROR = 0xC0020045,RPC_NT_FP_DIV_ZERO = 0xC0020046,RPC_NT_FP_UNDERFLOW = 0xC0020047,RPC_NT_FP_OVERFLOW = 0xC0020048,RPC_NT_NO_MORE_ENTRIES = 0xC0030001,RPC_NT_SS_CHAR_TRANS_OPEN_FAIL = 0xC0030002,RPC_NT_SS_CHAR_TRANS_SHORT_FILE = 0xC0030003,RPC_NT_SS_IN_NULL_CONTEXT = 0xC0030004,RPC_NT_SS_CONTEXT_MISMATCH = 0xC0030005,RPC_NT_SS_CONTEXT_DAMAGED = 0xC0030006,RPC_NT_SS_HANDLES_MISMATCH = 0xC0030007,RPC_NT_SS_CANNOT_GET_CALL_HANDLE = 0xC0030008,RPC_NT_NULL_REF_POINTER = 0xC0030009,RPC_NT_ENUM_VALUE_OUT_OF_RANGE = 0xC003000A,RPC_NT_BYTE_COUNT_TOO_SMALL = 0xC003000B,RPC_NT_BAD_STUB_DATA = 0xC003000C,RPC_NT_CALL_IN_PROGRESS = 0xC0020049,RPC_NT_NO_MORE_BINDINGS = 0xC002004A,RPC_NT_GROUP_MEMBER_NOT_FOUND = 0xC002004B,};
enum MACRO_RX_FCB {RX_FCB_TABLE_NUMBER_OF_HASH_BUCKETS = 32,};
enum MACRO_RX_LOG {RX_LOG_REF_TRACKING = 0x80000000,RX_PRINT_REF_TRACKING = 0x40000000,};
enum MACRO_SCSIOP {SCSIOP_TEST_UNIT_READY = 0x0,SCSIOP_REZERO_UNIT = 0x1,SCSIOP_REWIND = 0x1,SCSIOP_REQUEST_BLOCK_ADDR = 0x2,SCSIOP_REQUEST_SENSE = 0x3,SCSIOP_FORMAT_UNIT = 0x4,SCSIOP_READ_BLOCK_LIMITS = 0x5,SCSIOP_REASSIGN_BLOCKS = 0x7,SCSIOP_INIT_ELEMENT_STATUS = 0x7,SCSIOP_READ6 = 0x8,SCSIOP_RECEIVE = 0x8,SCSIOP_WRITE6 = 0xA,SCSIOP_PRINT = 0xA,SCSIOP_SEND = 0xA,SCSIOP_SEEK6 = 0xB,SCSIOP_TRACK_SELECT = 0xB,SCSIOP_SLEW_PRINT = 0xB,SCSIOP_SET_CAPACITY = 0xB,SCSIOP_SEEK_BLOCK = 0xC,SCSIOP_PARTITION = 0xD,SCSIOP_READ_REVERSE = 0xF,SCSIOP_WRITE_FILEMARKS = 0x10,SCSIOP_FLUSH_BUFFER = 0x10,SCSIOP_SPACE = 0x11,SCSIOP_INQUIRY = 0x12,SCSIOP_VERIFY6 = 0x13,SCSIOP_RECOVER_BUF_DATA = 0x14,SCSIOP_MODE_SELECT = 0x15,SCSIOP_RESERVE_UNIT = 0x16,SCSIOP_RELEASE_UNIT = 0x17,SCSIOP_COPY = 0x18,SCSIOP_ERASE = 0x19,SCSIOP_MODE_SENSE = 0x1A,SCSIOP_START_STOP_UNIT = 0x1B,SCSIOP_STOP_PRINT = 0x1B,SCSIOP_LOAD_UNLOAD = 0x1B,SCSIOP_RECEIVE_DIAGNOSTIC = 0x1C,SCSIOP_SEND_DIAGNOSTIC = 0x1D,SCSIOP_MEDIUM_REMOVAL = 0x1E,SCSIOP_READ_FORMATTED_CAPACITY = 0x23,SCSIOP_READ_CAPACITY = 0x25,SCSIOP_READ = 0x28,SCSIOP_WRITE = 0x2A,SCSIOP_SEEK = 0x2B,SCSIOP_LOCATE = 0x2B,SCSIOP_POSITION_TO_ELEMENT = 0x2B,SCSIOP_WRITE_VERIFY = 0x2E,SCSIOP_VERIFY = 0x2F,SCSIOP_SEARCH_DATA_HIGH = 0x30,SCSIOP_SEARCH_DATA_EQUAL = 0x31,SCSIOP_SEARCH_DATA_LOW = 0x32,SCSIOP_SET_LIMITS = 0x33,SCSIOP_READ_POSITION = 0x34,SCSIOP_SYNCHRONIZE_CACHE = 0x35,SCSIOP_COMPARE = 0x39,SCSIOP_COPY_COMPARE = 0x3A,SCSIOP_WRITE_DATA_BUFF = 0x3B,SCSIOP_READ_DATA_BUFF = 0x3C,SCSIOP_WRITE_LONG = 0x3F,SCSIOP_CHANGE_DEFINITION = 0x40,SCSIOP_WRITE_SAME = 0x41,SCSIOP_READ_SUB_CHANNEL = 0x42,SCSIOP_UNMAP = 0x42,SCSIOP_READ_TOC = 0x43,SCSIOP_READ_HEADER = 0x44,SCSIOP_REPORT_DENSITY_SUPPORT = 0x44,SCSIOP_PLAY_AUDIO = 0x45,SCSIOP_GET_CONFIGURATION = 0x46,SCSIOP_PLAY_AUDIO_MSF = 0x47,SCSIOP_PLAY_TRACK_INDEX = 0x48,SCSIOP_PLAY_TRACK_RELATIVE = 0x49,SCSIOP_GET_EVENT_STATUS = 0x4A,SCSIOP_PAUSE_RESUME = 0x4B,SCSIOP_LOG_SELECT = 0x4C,SCSIOP_LOG_SENSE = 0x4D,SCSIOP_STOP_PLAY_SCAN = 0x4E,SCSIOP_XDWRITE = 0x50,SCSIOP_XPWRITE = 0x51,SCSIOP_READ_DISK_INFORMATION = 0x51,SCSIOP_READ_DISC_INFORMATION = 0x51,SCSIOP_READ_TRACK_INFORMATION = 0x52,SCSIOP_XDWRITE_READ = 0x53,SCSIOP_RESERVE_TRACK_RZONE = 0x53,SCSIOP_SEND_OPC_INFORMATION = 0x54,SCSIOP_MODE_SELECT10 = 0x55,SCSIOP_RESERVE_UNIT10 = 0x56,SCSIOP_RESERVE_ELEMENT = 0x56,SCSIOP_RELEASE_UNIT10 = 0x57,SCSIOP_RELEASE_ELEMENT = 0x57,SCSIOP_REPAIR_TRACK = 0x58,SCSIOP_MODE_SENSE10 = 0x5A,SCSIOP_CLOSE_TRACK_SESSION = 0x5B,SCSIOP_READ_BUFFER_CAPACITY = 0x5C,SCSIOP_SEND_CUE_SHEET = 0x5D,SCSIOP_PERSISTENT_RESERVE_IN = 0x5E,SCSIOP_PERSISTENT_RESERVE_OUT = 0x5F,SCSIOP_REPORT_LUNS = 0xA0,SCSIOP_BLANK = 0xA1,SCSIOP_ATA_PASSTHROUGH12 = 0xA1,SCSIOP_SEND_EVENT = 0xA2,SCSIOP_SECURITY_PROTOCOL_IN = 0xA2,SCSIOP_SEND_KEY = 0xA3,SCSIOP_MAINTENANCE_IN = 0xA3,SCSIOP_REPORT_KEY = 0xA4,SCSIOP_MAINTENANCE_OUT = 0xA4,SCSIOP_MOVE_MEDIUM = 0xA5,SCSIOP_LOAD_UNLOAD_SLOT = 0xA6,SCSIOP_EXCHANGE_MEDIUM = 0xA6,SCSIOP_SET_READ_AHEAD = 0xA7,SCSIOP_MOVE_MEDIUM_ATTACHED = 0xA7,SCSIOP_READ12 = 0xA8,SCSIOP_GET_MESSAGE = 0xA8,SCSIOP_SERVICE_ACTION_OUT12 = 0xA9,SCSIOP_WRITE12 = 0xAA,SCSIOP_SEND_MESSAGE = 0xAB,SCSIOP_SERVICE_ACTION_IN12 = 0xAB,SCSIOP_GET_PERFORMANCE = 0xAC,SCSIOP_READ_DVD_STRUCTURE = 0xAD,SCSIOP_WRITE_VERIFY12 = 0xAE,SCSIOP_VERIFY12 = 0xAF,SCSIOP_SEARCH_DATA_HIGH12 = 0xB0,SCSIOP_SEARCH_DATA_EQUAL12 = 0xB1,SCSIOP_SEARCH_DATA_LOW12 = 0xB2,SCSIOP_SET_LIMITS12 = 0xB3,SCSIOP_READ_ELEMENT_STATUS_ATTACHED = 0xB4,SCSIOP_REQUEST_VOL_ELEMENT = 0xB5,SCSIOP_SECURITY_PROTOCOL_OUT = 0xB5,SCSIOP_SEND_VOLUME_TAG = 0xB6,SCSIOP_SET_STREAMING = 0xB6,SCSIOP_READ_DEFECT_DATA = 0xB7,SCSIOP_READ_ELEMENT_STATUS = 0xB8,SCSIOP_READ_CD_MSF = 0xB9,SCSIOP_SCAN_CD = 0xBA,SCSIOP_REDUNDANCY_GROUP_IN = 0xBA,SCSIOP_SET_CD_SPEED = 0xBB,SCSIOP_REDUNDANCY_GROUP_OUT = 0xBB,SCSIOP_PLAY_CD = 0xBC,SCSIOP_SPARE_IN = 0xBC,SCSIOP_MECHANISM_STATUS = 0xBD,SCSIOP_SPARE_OUT = 0xBD,SCSIOP_READ_CD = 0xBE,SCSIOP_VOLUME_SET_IN = 0xBE,SCSIOP_SEND_DVD_STRUCTURE = 0xBF,SCSIOP_VOLUME_SET_OUT = 0xBF,SCSIOP_INIT_ELEMENT_RANGE = 0xE7,SCSIOP_XDWRITE_EXTENDED16 = 0x80,SCSIOP_WRITE_FILEMARKS16 = 0x80,SCSIOP_REBUILD16 = 0x81,SCSIOP_READ_REVERSE16 = 0x81,SCSIOP_REGENERATE16 = 0x82,SCSIOP_EXTENDED_COPY = 0x83,SCSIOP_POPULATE_TOKEN = 0x83,SCSIOP_WRITE_USING_TOKEN = 0x83,SCSIOP_RECEIVE_COPY_RESULTS = 0x84,SCSIOP_RECEIVE_ROD_TOKEN_INFORMATION = 0x84,SCSIOP_ATA_PASSTHROUGH16 = 0x85,SCSIOP_ACCESS_CONTROL_IN = 0x86,SCSIOP_ACCESS_CONTROL_OUT = 0x87,SCSIOP_READ16 = 0x88,SCSIOP_WRITE16 = 0x8A,SCSIOP_READ_ATTRIBUTES = 0x8C,SCSIOP_WRITE_ATTRIBUTES = 0x8D,SCSIOP_WRITE_VERIFY16 = 0x8E,SCSIOP_VERIFY16 = 0x8F,SCSIOP_PREFETCH16 = 0x90,SCSIOP_SYNCHRONIZE_CACHE16 = 0x91,SCSIOP_SPACE16 = 0x91,SCSIOP_LOCK_UNLOCK_CACHE16 = 0x92,SCSIOP_LOCATE16 = 0x92,SCSIOP_WRITE_SAME16 = 0x93,SCSIOP_ERASE16 = 0x93,SCSIOP_READ_CAPACITY16 = 0x9E,SCSIOP_GET_LBA_STATUS = 0x9E,SCSIOP_SERVICE_ACTION_IN16 = 0x9E,SCSIOP_SERVICE_ACTION_OUT16 = 0x9F,SCSIOP_OPERATION32 = 0x7F,};
enum MACRO_SEALED {SEALED_CASE_BIT = 11,SEALED_CASE_CAP = 2048,};
enum MACRO_SEARCH {SEARCH_ALL = 0x0,SEARCH_PRIMARY = 0x1,SEARCH_ALTERNATE = 0x2,SEARCH_ALL_NO_SEQ = 0x4,SEARCH_PRI_NO_SEQ = 0x5,SEARCH_ALT_NO_SEQ = 0x6,};
enum MACRO_SECPKG {SECPKG_FLAG_INTEGRITY = 0x1,SECPKG_FLAG_PRIVACY = 0x2,SECPKG_FLAG_TOKEN_ONLY = 0x4,SECPKG_FLAG_DATAGRAM = 0x8,SECPKG_FLAG_CONNECTION = 0x10,SECPKG_FLAG_MULTI_REQUIRED = 0x20,SECPKG_FLAG_CLIENT_ONLY = 0x40,SECPKG_FLAG_EXTENDED_ERROR = 0x80,SECPKG_FLAG_IMPERSONATION = 0x100,SECPKG_FLAG_ACCEPT_WIN32_NAME = 0x200,SECPKG_FLAG_STREAM = 0x400,SECPKG_FLAG_NEGOTIABLE = 0x800,SECPKG_FLAG_GSS_COMPATIBLE = 0x1000,SECPKG_FLAG_LOGON = 0x2000,SECPKG_FLAG_ASCII_BUFFERS = 0x4000,SECPKG_FLAG_FRAGMENT = 0x8000,SECPKG_FLAG_MUTUAL_AUTH = 0x10000,SECPKG_FLAG_DELEGATION = 0x20000,SECPKG_FLAG_READONLY_WITH_CHECKSUM = 0x40000,SECPKG_FLAG_RESTRICTED_TOKENS = 0x80000,SECPKG_FLAG_NEGO_EXTENDER = 0x100000,SECPKG_FLAG_NEGOTIABLE2 = 0x200000,SECPKG_FLAG_APPCONTAINER_PASSTHROUGH = 0x400000,SECPKG_FLAG_APPCONTAINER_CHECKS = 0x800000,SECPKG_ID_NONE = 0xFFFF,SECPKG_CALLFLAGS_APPCONTAINER = 0x1,SECPKG_CALLFLAGS_APPCONTAINER_AUTHCAPABLE = 0x2,SECPKG_CALLFLAGS_FORCE_SUPPLIED = 0x4,};
enum MACRO_SECQOP {SECQOP_WRAP_NO_ENCRYPT = 0x80000001,SECQOP_WRAP_OOB_DATA = 0x40000000,};
enum MACRO_SECURE {SECURE_BOOT_VIOLATION = 0x145,};
enum MACRO_SELFID {SELFID_PACKET_SIGNITURE = 2,};
enum MACRO_SERIAL {SERIAL_DRIVER_INTERNAL = 0x38,};
enum MACRO_SE_ADT {SE_ADT_OBJECT_ONLY = 0x1,SE_MAX_AUDIT_PARAMETERS = 0x20,SE_MAX_GENERIC_AUDIT_PARAMETERS = 0x1C,SE_ADT_PARAMETERS_SELF_RELATIVE = 0x1,SE_ADT_PARAMETERS_SEND_TO_LSA = 0x2,SE_ADT_PARAMETER_EXTENSIBLE_AUDIT = 0x4,SE_ADT_PARAMETER_GENERIC_AUDIT = 0x8,SE_ADT_PARAMETER_WRITE_SYNCHRONOUS = 0x10,};
enum MACRO_SE_MIN {SE_MIN_WELL_KNOWN_PRIVILEGE = 2,SE_CREATE_TOKEN_PRIVILEGE = 2,SE_ASSIGNPRIMARYTOKEN_PRIVILEGE = 3,SE_LOCK_MEMORY_PRIVILEGE = 4,SE_INCREASE_QUOTA_PRIVILEGE = 5,SE_MACHINE_ACCOUNT_PRIVILEGE = 6,SE_TCB_PRIVILEGE = 7,SE_SECURITY_PRIVILEGE = 8,SE_TAKE_OWNERSHIP_PRIVILEGE = 9,SE_LOAD_DRIVER_PRIVILEGE = 10,SE_SYSTEM_PROFILE_PRIVILEGE = 11,SE_SYSTEMTIME_PRIVILEGE = 12,SE_PROF_SINGLE_PROCESS_PRIVILEGE = 13,SE_INC_BASE_PRIORITY_PRIVILEGE = 14,SE_CREATE_PAGEFILE_PRIVILEGE = 15,SE_CREATE_PERMANENT_PRIVILEGE = 16,SE_BACKUP_PRIVILEGE = 17,SE_RESTORE_PRIVILEGE = 18,SE_SHUTDOWN_PRIVILEGE = 19,SE_DEBUG_PRIVILEGE = 20,SE_AUDIT_PRIVILEGE = 21,SE_SYSTEM_ENVIRONMENT_PRIVILEGE = 22,SE_CHANGE_NOTIFY_PRIVILEGE = 23,SE_REMOTE_SHUTDOWN_PRIVILEGE = 24,SE_UNDOCK_PRIVILEGE = 25,SE_SYNC_AGENT_PRIVILEGE = 26,SE_ENABLE_DELEGATION_PRIVILEGE = 27,SE_MANAGE_VOLUME_PRIVILEGE = 28,SE_IMPERSONATE_PRIVILEGE = 29,SE_CREATE_GLOBAL_PRIVILEGE = 30,SE_TRUSTED_CREDMAN_ACCESS_PRIVILEGE = 31,SE_RELABEL_PRIVILEGE = 32,SE_INC_WORKING_SET_PRIVILEGE = 33,SE_TIME_ZONE_PRIVILEGE = 34,SE_CREATE_SYMBOLIC_LINK_PRIVILEGE = 35,SE_MAX_WELL_KNOWN_PRIVILEGE = 35,};
enum MACRO_SHARED {SHARED_RESOURCE_CONV_ERROR = 0x1F,};
enum MACRO_SIGNAL {SIGINT = 2,SIGILL = 4,SIGFPE = 8,SIGSEGV = 11,SIGTERM = 15,SIGBREAK = 21,SIGABRT = 22,SIGABRT_COMPAT = 6,};
enum MACRO_SINGLE {SINGLE_GROUP_LEGACY_API = 1,};
enum MACRO_SIZEOF {SIZEOF_RFPO_DATA = 16,};
enum MACRO_SMBDBG {SMBDBG = 0,};
enum MACRO_SMCLIB {SMCLIB_NT = 1,};
enum MACRO_SOCKET {SOCKET_SETTINGS_GUARANTEE_ENCRYPTION = 0x1,SOCKET_SETTINGS_ALLOW_INSECURE = 0x2,SOCKET_SETTINGS_IPSEC_SKIP_FILTER_INSTANTIATION = 0x1,SOCKET_SETTINGS_IPSEC_OPTIONAL_PEER_NAME_VERIFICATION = 0x2,SOCKET_SETTINGS_IPSEC_ALLOW_FIRST_INBOUND_PKT_UNENCRYPTED = 0x4,SOCKET_SETTINGS_IPSEC_PEER_NAME_IS_RAW_FORMAT = 0x8,SOCKET_QUERY_IPSEC2_ABORT_CONNECTION_ON_FIELD_CHANGE = 0x1,SOCKET_QUERY_IPSEC2_FIELD_MASK_MM_SA_ID = 0x1,SOCKET_QUERY_IPSEC2_FIELD_MASK_QM_SA_ID = 0x2,SOCKET_INFO_CONNECTION_SECURED = 0x1,SOCKET_INFO_CONNECTION_ENCRYPTED = 0x2,SOCKET_INFO_CONNECTION_IMPERSONATED = 0x4,};
enum MACRO_SO_WSK {SO_WSK_SECURITY = 16385,SO_WSK_EVENT_CALLBACK = 16386,};
enum MACRO_SP_BUS {SP_BUS_PARITY_ERROR = 0x1,SP_UNEXPECTED_DISCONNECT = 0x2,SP_INVALID_RESELECTION = 0x3,SP_BUS_TIME_OUT = 0x4,SP_PROTOCOL_ERROR = 0x5,SP_INTERNAL_ADAPTER_ERROR = 0x6,SP_REQUEST_TIMEOUT = 0x7,SP_IRQ_NOT_RESPONDING = 0x8,SP_BAD_FW_WARNING = 0x9,SP_BAD_FW_ERROR = 0xA,SP_LOST_WMI_MINIPORT_REQUEST = 0xB,SP_VER_TRACE_SUPPORT = 0x10,SP_RETURN_NOT_FOUND = 0x0,SP_RETURN_FOUND = 0x1,SP_RETURN_ERROR = 0x2,SP_RETURN_BAD_CONFIG = 0x3,};
enum MACRO_SRB_HW {SRB_HW_FLAGS_DATA_TRANSFER = 0x1,SRB_HW_FLAGS_STREAM_REQUEST = 0x2,};
enum MACRO_SSINFO {SSINFO_FLAGS_ALIGNED_DEVICE = 0x1,SSINFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE = 0x2,SSINFO_FLAGS_NO_SEEK_PENALTY = 0x4,SSINFO_FLAGS_TRIM_ENABLED = 0x8,SSINFO_OFFSET_UNKNOWN = 0xFFFFFFFF,};
enum MACRO_STATUS {STATUS_WAIT_0 = 0x0,};
enum MACRO_STREAM {STREAM_SET_ENCRYPTION = 0x3,STREAM_CLEAR_ENCRYPTION = 0x4,};
enum MACRO_STRICT {STRICT = 1,};
enum MACRO_STRING {STRING_NAME_OFFSET = 0x0,STRING_DESCRIPTION_OFFSET = 0x1,STRING_PROVIDER_NAME_OFFSET = 0x2,};
enum MACRO_SWDMA0 {SWDMA0 = 5,};
enum MACRO_SWDMA1 {SWDMA1 = 6,};
enum MACRO_SWDMA2 {SWDMA2 = 7,MWDMA0 = 8,};
enum MACRO_SYSTEM {SYSTEM_CACHE_ALIGNMENT_SIZE = 64,};
enum MACRO_TARGET {TARGET_MDL_TOO_SMALL = 0x40,};
enum MACRO_TBSIMP {TBSIMP_E_BUFFER_TOO_SMALL = 0x80290200,TBSIMP_E_CLEANUP_FAILED = 0x80290201,TBSIMP_E_INVALID_CONTEXT_HANDLE = 0x80290202,TBSIMP_E_INVALID_CONTEXT_PARAM = 0x80290203,TBSIMP_E_TPM_ERROR = 0x80290204,TBSIMP_E_HASH_BAD_KEY = 0x80290205,TBSIMP_E_DUPLICATE_VHANDLE = 0x80290206,TBSIMP_E_INVALID_OUTPUT_POINTER = 0x80290207,TBSIMP_E_INVALID_PARAMETER = 0x80290208,TBSIMP_E_RPC_INIT_FAILED = 0x80290209,TBSIMP_E_SCHEDULER_NOT_RUNNING = 0x8029020A,TBSIMP_E_COMMAND_CANCELED = 0x8029020B,TBSIMP_E_OUT_OF_MEMORY = 0x8029020C,TBSIMP_E_LIST_NO_MORE_ITEMS = 0x8029020D,TBSIMP_E_LIST_NOT_FOUND = 0x8029020E,TBSIMP_E_NOT_ENOUGH_SPACE = 0x8029020F,TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS = 0x80290210,TBSIMP_E_COMMAND_FAILED = 0x80290211,TBSIMP_E_UNKNOWN_ORDINAL = 0x80290212,TBSIMP_E_RESOURCE_EXPIRED = 0x80290213,TBSIMP_E_INVALID_RESOURCE = 0x80290214,TBSIMP_E_NOTHING_TO_UNLOAD = 0x80290215,TBSIMP_E_HASH_TABLE_FULL = 0x80290216,TBSIMP_E_TOO_MANY_TBS_CONTEXTS = 0x80290217,TBSIMP_E_TOO_MANY_RESOURCES = 0x80290218,TBSIMP_E_PPI_NOT_SUPPORTED = 0x80290219,TBSIMP_E_TPM_INCOMPATIBLE = 0x8029021A,TBSIMP_E_NO_EVENT_LOG = 0x8029021B,};
enum MACRO_THREAD {THREAD_TERMINATE_HELD_MUTEX = 0x4000008A,};
enum MACRO_TPMAPI {TPMAPI_E_INVALID_STATE = 0x80290100,TPMAPI_E_NOT_ENOUGH_DATA = 0x80290101,TPMAPI_E_TOO_MUCH_DATA = 0x80290102,TPMAPI_E_INVALID_OUTPUT_POINTER = 0x80290103,TPMAPI_E_INVALID_PARAMETER = 0x80290104,TPMAPI_E_OUT_OF_MEMORY = 0x80290105,TPMAPI_E_BUFFER_TOO_SMALL = 0x80290106,TPMAPI_E_INTERNAL_ERROR = 0x80290107,TPMAPI_E_ACCESS_DENIED = 0x80290108,TPMAPI_E_AUTHORIZATION_FAILED = 0x80290109,TPMAPI_E_INVALID_CONTEXT_HANDLE = 0x8029010A,TPMAPI_E_TBS_COMMUNICATION_ERROR = 0x8029010B,TPMAPI_E_TPM_COMMAND_ERROR = 0x8029010C,TPMAPI_E_MESSAGE_TOO_LARGE = 0x8029010D,TPMAPI_E_INVALID_ENCODING = 0x8029010E,TPMAPI_E_INVALID_KEY_SIZE = 0x8029010F,TPMAPI_E_ENCRYPTION_FAILED = 0x80290110,TPMAPI_E_INVALID_KEY_PARAMS = 0x80290111,TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB = 0x80290112,TPMAPI_E_INVALID_PCR_INDEX = 0x80290113,TPMAPI_E_INVALID_DELEGATE_BLOB = 0x80290114,TPMAPI_E_INVALID_CONTEXT_PARAMS = 0x80290115,TPMAPI_E_INVALID_KEY_BLOB = 0x80290116,TPMAPI_E_INVALID_PCR_DATA = 0x80290117,TPMAPI_E_INVALID_OWNER_AUTH = 0x80290118,TPMAPI_E_FIPS_RNG_CHECK_FAILED = 0x80290119,TPMAPI_E_EMPTY_TCG_LOG = 0x8029011A,TPMAPI_E_INVALID_TCG_LOG_ENTRY = 0x8029011B,TPMAPI_E_TCG_SEPARATOR_ABSENT = 0x8029011C,TPMAPI_E_TCG_INVALID_DIGEST_ENTRY = 0x8029011D,TPMAPI_E_POLICY_DENIES_OPERATION = 0x8029011E,};
enum MACRO_TRANS2 {TRANS2_OPEN2 = 0x0,TRANS2_FIND_FIRST2 = 0x1,TRANS2_FIND_NEXT2 = 0x2,TRANS2_QUERY_FS_INFORMATION = 0x3,TRANS2_SET_FS_INFORMATION = 0x4,TRANS2_QUERY_PATH_INFORMATION = 0x5,TRANS2_SET_PATH_INFORMATION = 0x6,TRANS2_QUERY_FILE_INFORMATION = 0x7,TRANS2_SET_FILE_INFORMATION = 0x8,TRANS2_FSCTL = 0x9,TRANS2_IOCTL2 = 0xA,TRANS2_FIND_NOTIFY_FIRST = 0xB,TRANS2_FIND_NOTIFY_NEXT = 0xC,TRANS2_CREATE_DIRECTORY = 0xD,TRANS2_SESSION_SETUP = 0xE,TRANS2_QUERY_FS_INFORMATION_FID = 0xF,TRANS2_GET_DFS_REFERRAL = 0x10,TRANS2_REPORT_DFS_INCONSISTENCY = 0x11,TRANS2_MAX_FUNCTION = 0x11,};
enum MACRO_UCEERR {UCEERR_INVALIDPACKETHEADER = 0x88980400,UCEERR_UNKNOWNPACKET = 0x88980401,UCEERR_ILLEGALPACKET = 0x88980402,UCEERR_MALFORMEDPACKET = 0x88980403,UCEERR_ILLEGALHANDLE = 0x88980404,UCEERR_HANDLELOOKUPFAILED = 0x88980405,UCEERR_RENDERTHREADFAILURE = 0x88980406,UCEERR_CTXSTACKFRSTTARGETNULL = 0x88980407,UCEERR_CONNECTIONIDLOOKUPFAILED = 0x88980408,UCEERR_BLOCKSFULL = 0x88980409,UCEERR_MEMORYFAILURE = 0x8898040A,UCEERR_PACKETRECORDOUTOFRANGE = 0x8898040B,UCEERR_ILLEGALRECORDTYPE = 0x8898040C,UCEERR_OUTOFHANDLES = 0x8898040D,UCEERR_UNCHANGABLE_UPDATE_ATTEMPTED = 0x8898040E,UCEERR_NO_MULTIPLE_WORKER_THREADS = 0x8898040F,UCEERR_REMOTINGNOTSUPPORTED = 0x88980410,UCEERR_MISSINGENDCOMMAND = 0x88980411,UCEERR_MISSINGBEGINCOMMAND = 0x88980412,UCEERR_CHANNELSYNCTIMEDOUT = 0x88980413,UCEERR_CHANNELSYNCABANDONED = 0x88980414,UCEERR_UNSUPPORTEDTRANSPORTVERSION = 0x88980415,UCEERR_TRANSPORTUNAVAILABLE = 0x88980416,UCEERR_FEEDBACK_UNSUPPORTED = 0x88980417,UCEERR_COMMANDTRANSPORTDENIED = 0x88980418,UCEERR_GRAPHICSSTREAMUNAVAILABLE = 0x88980419,UCEERR_GRAPHICSSTREAMALREADYOPEN = 0x88980420,UCEERR_TRANSPORTDISCONNECTED = 0x88980421,UCEERR_TRANSPORTOVERLOADED = 0x88980422,UCEERR_PARTITION_ZOMBIED = 0x88980423,};
enum MACRO_ULLONG {ULLONG_MAX = 0xFFFFFFFF,};
enum MACRO_UNLOCK {UNLOCK_ELEMENT = 1,};
enum MACRO_UP_P2P {UP_P2P = 0x0,UP_P2MP = 0x1,};
enum MACRO_UUID16 {SDP_PROTOCOL_UUID16 = 0x1,UDP_PROTOCOL_UUID16 = 0x2,RFCOMM_PROTOCOL_UUID16 = 0x3,TCP_PROTOCOL_UUID16 = 0x4,TCSBIN_PROTOCOL_UUID16 = 0x5,TCSAT_PROTOCOL_UUID16 = 0x6,OBEX_PROTOCOL_UUID16 = 0x8,IP_PROTOCOL_UUID16 = 0x9,FTP_PROTOCOL_UUID16 = 0xA,HTTP_PROTOCOL_UUID16 = 0xC,WSP_PROTOCOL_UUID16 = 0xE,BNEP_PROTOCOL_UUID16 = 0xF,UPNP_PROTOCOL_UUID16 = 0x10,HID_PROTOCOL_UUID16 = 0x11,HCCC_PROTOCOL_UUID16 = 0x12,HCDC_PROTOCOL_UUID16 = 0x14,HCN_PROTOCOL_UUID16 = 0x16,AVCTP_PROTOCOL_UUID16 = 0x17,AVDTP_PROTOCOL_UUID16 = 0x19,CMPT_PROTOCOL_UUID16 = 0x1B,UDI_C_PLANE_PROTOCOL_UUID16 = 0x1D,L2CAP_PROTOCOL_UUID16 = 0x100,ServiceDiscoveryServerServiceClassID_UUID16 = 0x1000,BrowseGroupDescriptorServiceClassID_UUID16 = 0x1001,PublicBrowseGroupServiceClassID_UUID16 = 0x1002,SerialPortServiceClassID_UUID16 = 0x1101,LANAccessUsingPPPServiceClassID_UUID16 = 0x1102,DialupNetworkingServiceClassID_UUID16 = 0x1103,IrMCSyncServiceClassID_UUID16 = 0x1104,OBEXObjectPushServiceClassID_UUID16 = 0x1105,OBEXFileTransferServiceClassID_UUID16 = 0x1106,IrMcSyncCommandServiceClassID_UUID16 = 0x1107,HeadsetServiceClassID_UUID16 = 0x1108,CordlessServiceClassID_UUID16 = 0x1109,AudioSourceServiceClassID_UUID16 = 0x110A,AudioSinkSourceServiceClassID_UUID16 = 0x110B,AVRemoteControlTargetServiceClassID_UUID16 = 0x110C,AdvancedAudioDistributionServiceClassID_UUID16 = 0x110D,AVRemoteControlServiceClassID_UUID16 = 0x110E,AVRemoteControlControllerServiceClass_UUID16 = 0x110F,IntercomServiceClassID_UUID16 = 0x1110,FaxServiceClassID_UUID16 = 0x1111,HeadsetAudioGatewayServiceClassID_UUID16 = 0x1112,WAPServiceClassID_UUID16 = 0x1113,WAPClientServiceClassID_UUID16 = 0x1114,PANUServiceClassID_UUID16 = 0x1115,NAPServiceClassID_UUID16 = 0x1116,GNServiceClassID_UUID16 = 0x1117,DirectPrintingServiceClassID_UUID16 = 0x1118,ReferencePrintingServiceClassID_UUID16 = 0x1119,ImagingServiceClassID_UUID16 = 0x111A,ImagingResponderServiceClassID_UUID16 = 0x111B,ImagingAutomaticArchiveServiceClassID_UUID16 = 0x111C,ImagingReferenceObjectsServiceClassID_UUID16 = 0x111D,HandsfreeServiceClassID_UUID16 = 0x111E,HandsfreeAudioGatewayServiceClassID_UUID16 = 0x111F,DirectPrintingReferenceObjectsServiceClassID_UUID16 = 0x1120,ReflectsUIServiceClassID_UUID16 = 0x1121,BasicPrintingServiceClassID_UUID16 = 0x1122,PrintingStatusServiceClassID_UUID16 = 0x1123,HumanInterfaceDeviceServiceClassID_UUID16 = 0x1124,HardcopyCableReplacementServiceClassID_UUID16 = 0x1125,HCRPrintServiceClassID_UUID16 = 0x1126,HCRScanServiceClassID_UUID16 = 0x1127,CommonISDNAccessServiceClass_UUID16 = 0x1128,VideoConferencingGWServiceClass_UUID16 = 0x1129,UDIMTServiceClass_UUID16 = 0x112A,UDITAServiceClass_UUID16 = 0x112B,AudioVideoServiceClass_UUID16 = 0x112C,PnPInformationServiceClassID_UUID16 = 0x1200,GenericNetworkingServiceClassID_UUID16 = 0x1201,GenericFileTransferServiceClassID_UUID16 = 0x1202,GenericAudioServiceClassID_UUID16 = 0x1203,GenericTelephonyServiceClassID_UUID16 = 0x1204,VideoConferencingServiceClassID_UUID16 = 0x110F,};
enum MACRO_VIEW_S {VIEW_S_ALREADY_FROZEN = 0x40140,};
enum MACRO_VOLUME {VOLUME_IS_DIRTY = 0x1,VOLUME_UPGRADE_SCHEDULED = 0x2,VOLUME_SESSION_OPEN = 0x4,};
enum MACRO_WIN32K {WIN32K_INIT_OR_RIT_FAILURE = 0x91,};
enum MACRO_WINAPI {WINAPI_PARTITION_DESKTOP = 0x1,WINAPI_PARTITION_APP = 0x2,WINAPI_FAMILY_APP = 0x2,WINAPI_FAMILY_DESKTOP_APP = 0x3,WINAPI_FAMILY = 0x3,};
enum MACRO_WINVER {WINVER = 1538,};
enum MACRO_WMIREG {WMIREG_ACTION_REGISTER = 1,WMIREG_ACTION_DEREGISTER = 2,WMIREG_ACTION_REREGISTER = 3,WMIREG_ACTION_UPDATE_GUIDS = 4,WMIREG_ACTION_BLOCK_IRPS = 5,};
enum MACRO_WORKER {WORKER_THREAD_RETURNED_AT_BAD_IRQL = 0xE1,};
enum MACRO_XSTATE {XSTATE_LEGACY_FLOATING_POINT = 0,XSTATE_LEGACY_SSE = 1,XSTATE_GSSE = 2,XSTATE_AVX = 2,XSTATE_MASK_LEGACY_FLOATING_POINT = 1,XSTATE_MASK_LEGACY_SSE = 2,XSTATE_MASK_LEGACY = 3,XSTATE_MASK_GSSE = 4,XSTATE_MASK_AVX = 4,};
enum MACRO__100NS {_100NS_UNITS_PER_SECOND = 10000000,};
enum MACRO__ALPHA {_ALPHA = 0x103,};
enum MACRO__IOFBF {_IOFBF = 0x0,_IOLBF = 0x40,};
enum MACRO__IONBF {_IONBF = 0x4,_IOMYBUF = 0x8,_IOEOF = 0x10,_IOERR = 0x20,_IOSTRG = 0x40,_IORW = 0x80,};
enum MACRO__JBLEN {_JBLEN = 16,};
enum MACRO__KANJI {_KANJI_CP = 932,};
enum MACRO__PLOSS {_PLOSS = 6,};
enum MACRO__TLOSS {_TLOSS = 5,};
enum MACRO__UPPER {_UPPER = 0x1,_LOWER = 0x2,_DIGIT = 0x4,_SPACE = 0x8,_PUNCT = 0x10,_CONTROL = 0x20,_BLANK = 0x40,_HEX = 0x80,_LEADBYTE = 0x8000,};
enum MACRO__WIN32 {_WIN32_WINNT_NT4 = 0x400,_WIN32_WINNT_WIN2K = 0x500,_WIN32_WINNT_WINXP = 0x501,_WIN32_WINNT_WS03 = 0x502,_WIN32_WINNT_WIN6 = 0x600,_WIN32_WINNT_VISTA = 0x600,_WIN32_WINNT_WS08 = 0x600,_WIN32_WINNT_LONGHORN = 0x600,_WIN32_WINNT_WIN7 = 0x601,_WIN32_WINNT_WIN8 = 0x602,_WIN32_IE_IE20 = 0x200,_WIN32_IE_IE30 = 0x300,_WIN32_IE_IE302 = 0x302,_WIN32_IE_IE40 = 0x400,_WIN32_IE_IE401 = 0x401,_WIN32_IE_IE50 = 0x500,_WIN32_IE_IE501 = 0x501,_WIN32_IE_IE55 = 0x550,_WIN32_IE_IE60 = 0x600,_WIN32_IE_IE60SP1 = 0x601,_WIN32_IE_IE60SP2 = 0x603,_WIN32_IE_IE70 = 0x700,_WIN32_IE_IE80 = 0x800,_WIN32_IE_IE90 = 0x900,_WIN32_IE_IE100 = 0xA00,_WIN32_IE_NT4 = 0x200,_WIN32_IE_NT4SP1 = 0x200,_WIN32_IE_NT4SP2 = 0x200,_WIN32_IE_NT4SP3 = 0x302,_WIN32_IE_NT4SP4 = 0x401,_WIN32_IE_NT4SP5 = 0x401,_WIN32_IE_NT4SP6 = 0x500,_WIN32_IE_WIN98 = 0x401,_WIN32_IE_WIN98SE = 0x500,_WIN32_IE_WINME = 0x550,_WIN32_IE_WIN2K = 0x501,_WIN32_IE_WIN2KSP1 = 0x501,_WIN32_IE_WIN2KSP2 = 0x501,_WIN32_IE_WIN2KSP3 = 0x501,_WIN32_IE_WIN2KSP4 = 0x501,_WIN32_IE_XP = 0x600,_WIN32_IE_XPSP1 = 0x601,_WIN32_IE_XPSP2 = 0x603,_WIN32_IE_WS03 = 0x602,_WIN32_IE_WS03SP1 = 0x603,_WIN32_IE_WIN6 = 0x700,_WIN32_IE_LONGHORN = 0x700,_WIN32_IE_WIN7 = 0x800,_WIN32_IE_WIN8 = 0xA00,};
enum MACRO__WRITE {_WRITE_ABORT_MSG = 0x1,};
enum MACRO___STDC {__STDC_SECURE_LIB__ = 200411,};
typedef struct _MRX_NET_ROOT_ MRX_NET_ROOT;
typedef struct _MRX_SRV_CALL_ MRX_SRV_CALL;
typedef struct _MRX_SRV_OPEN_ MRX_SRV_OPEN;
enum MUX_PID_TYPE {PID_OTHER = 0xFFFFFFFF,PID_ELEMENTARY_STREAM = 0x0,PID_MPEG2_SECTION_PSI_SI = 0x1,};
typedef struct _NABTS_BUFFER NABTS_BUFFER;
typedef struct _NDIS_AF_LIST NDIS_AF_LIST;
typedef struct _NDIS_OFFLOAD NDIS_OFFLOAD;
typedef struct _NDIS_RW_LOCK NDIS_RW_LOCK;
typedef struct _NDK_LISTENER NDK_LISTENER;
typedef struct _NETWORK_NAME NETWORK_NAME;
typedef struct _NLSTABLEINFO NLSTABLEINFO;
typedef struct _NODE_ADDRESS NODE_ADDRESS;
typedef struct _NPI_MODULEID NPI_MODULEID;
typedef struct addrinfoexA *PADDRINFOEXA;
typedef struct addrinfoexW *PADDRINFOEXW;
typedef struct _ATM_ADDRESS *PATM_ADDRESS;
typedef struct _ATM_BHLI_IE *PATM_BHLI_IE;
typedef struct _ATM_BLLI_IE *PATM_BLLI_IE;
typedef struct _ATM_PVC_SAP *PATM_PVC_SAP;
typedef struct _AUTHZ_STATE *PAUTHZ_STATE;
typedef struct _AddLink_OUT *PAddLink_OUT;
typedef struct _AddPort_OUT *PAddPort_OUT;
typedef struct _BDA_PID_MAP *PBDA_PID_MAP;
typedef struct _BIN_RESULTS *PBIN_RESULTS;
typedef struct _BUS_HANDLER *PBUS_HANDLER;
typedef struct _CC_HW_FIELD *PCC_HW_FIELD;
typedef struct _0C4AC156F5CD9D086646B489056E0FB7 PCEVENT_ITEM;
typedef struct _CPTABLEINFO *PCPTABLEINFO;
typedef struct _CREATE_DISK *PCREATE_DISK;
typedef struct _CSADDR_INFO *PCSADDR_INFO;
typedef struct _DDC_CONTROL *PDDC_CONTROL;
typedef struct _DEVICESCOPE *PDEVICESCOPE;
typedef struct _DISK_RECORD *PDISK_RECORD;
typedef struct _DMA_ADAPTER *PDMA_ADAPTER;
typedef struct _PDOSCSI_ADDR PDOSCSI_ADDR;
typedef struct _DSM_VERSION *PDSM_VERSION;
typedef struct _DUMP_DRIVER *PDUMP_DRIVER;
typedef struct _FBPT_RECORD *PFBPT_RECORD;
typedef struct _FCP_SEND_REQUEST *PFCP_REQUEST;
typedef struct _FILE_ID_128 *PFILE_ID_128;
typedef struct _FILE_OBJECT *PFILE_OBJECT;
typedef struct _FLAT_STRING *PFLAT_STRING;
typedef struct _FPDT_RECORD *PFPDT_RECORD;
typedef struct _GPIOControl *PGPIOControl;
typedef struct _8F34270CB28A8FB9BC09363183528BFE *PGUIDREGINFO;
typedef struct _ICMP_HEADER *PICMP_HEADER;
typedef struct _IGMP_HEADER *PIGMP_HEADER;
typedef struct in6_pktinfo *PIN6_PKTINFO;
typedef struct _INQUIRYDATA *PINQUIRYDATA;
typedef struct _IO_WORKITEM *PIO_WORKITEM;
typedef struct _IPV4_HEADER *PIPV4_HEADER;
typedef struct _IPV6_HEADER *PIPV6_HEADER;
typedef struct ip_msfilter *PIP_MSFILTER;
typedef struct _IR_DEV_CAPS *PIR_DEV_CAPS;
typedef union _IVRS_IVINFO *PIVRS_IVINFO;
typedef struct _KENLISTMENT *PKENLISTMENT;
typedef struct _KEYBOARD_ID *PKEYBOARD_ID;
typedef struct _8276AF68B2084DDEC7235E96B5A3DDF6 *PKSATTRIBUTE;
typedef union _A4FB595EF421231CAF150DDD3288A6D5 *PKSDATARANGE;
typedef struct _37B8E770EA172EE03D1653C7B692D623 *PKSEVENTDATA;
typedef struct _A35330E71724D40A1BD15D9C53ABB072 *PKSEVENT_SET;
typedef struct _52BD71AC0F61B53F3E44045ED088295E *PKSFRAMETIME;
typedef struct _E1A151A2F6A6C209F977C1A4EAB9F7DF *PKSHANDSHAKE;
typedef struct _KSM_BDA_PIN *PKSM_BDA_PIN;
typedef struct tagKS_AMVPSIZE *PKS_AMVPSIZE;
typedef struct _KWAIT_BLOCK *PKWAIT_BLOCK;
typedef struct _LEAF_FORMAT *PLEAF_FORMAT;
typedef struct _9E657745785F4F2083998F3B8B91C4CD *PMEDIUM_INFO;
typedef int *PNDIS_STATUS;
typedef union _NET_LUID_LH *PNET_LUID_LH;
typedef struct _X_FILTER *PNULL_FILTER;
typedef struct _OBJECT_TYPE *POBJECT_TYPE;
typedef struct _OS_DEP_DATA *POS_DEP_DATA;
typedef struct _OWNER_ENTRY *POWNER_ENTRY;
typedef IPortWavePci *PPORTWAVEPCI;
typedef struct _PORT_OUTPUT *PPORT_OUTPUT;
typedef IPowerNotify *PPOWERNOTIFY;
typedef union _POWER_STATE *PPOWER_STATE;
typedef struct _PREFIX_TABLE PREFIX_TABLE;
typedef IRegistryKey *PREGISTRYKEY;
typedef struct _KAPC_STATE *PRKAPC_STATE;
typedef struct _KSEMAPHORE *PRKSEMAPHORE;
typedef struct _LIST_ENTRY *PRLIST_ENTRY;
typedef struct _PROCLOCALGIC PROCLOCALGIC;
typedef IServiceSink *PSERVICESINK;
typedef struct _SI_COPYFILE *PSI_COPYFILE;
typedef struct _SINGLE_LIST_ENTRY *PSLIST_ENTRY;
typedef struct _SNAP_HEADER *PSNAP_HEADER;
typedef struct sockaddr_dl *PSOCKADDR_DL;
typedef struct sockaddr_in *PSOCKADDR_IN;
typedef struct _SRB_HISTORY *PSRB_HISTORY;
typedef struct _SecPkgInfoW *PSecPkgInfoW;
typedef struct _SendLIRR_IN *PSendLIRR_IN;
typedef struct _SendRLS_OUT *PSendRLS_OUT;
typedef struct _SendRNID_IN *PSendRNID_IN;
typedef struct _SendRPL_OUT *PSendRPL_OUT;
typedef struct _SendRPS_OUT *PSendRPS_OUT;
typedef struct _SendSRL_OUT *PSendSRL_OUT;
typedef struct _TDI_REQUEST *PTDI_REQUEST;
typedef struct _TDI_VERSION_ *PTDI_VERSION;
typedef struct _TOKEN_OWNER *PTOKEN_OWNER;
typedef struct _TPM20_TABLE *PTPM20_TABLE;
typedef struct _VENDOR_ATTR *PVENDOR_ATTR;
typedef struct _VOLUMELABEL *PVOLUMELABEL;
typedef struct _5A8D7CCD30F40712144BEFCDAC7E1929 *PWMIREGGUIDW;
typedef struct _E054F7F0B81E76E3D6D098531C7E763C *PWMIREGINFOW;
typedef struct _WSK_TDI_MAP *PWSK_TDI_MAP;
typedef struct _XSTATE_SAVE *PXSTATE_SAVE;
typedef struct _ZONE_HEADER *PZONE_HEADER;
enum Polarisation {BDA_POLARISATION_NOT_SET = 0xFFFFFFFF,BDA_POLARISATION_NOT_DEFINED = 0x0,BDA_POLARISATION_LINEAR_H = 0x1,BDA_POLARISATION_LINEAR_V = 0x2,BDA_POLARISATION_CIRCULAR_L = 0x3,BDA_POLARISATION_CIRCULAR_R = 0x4,BDA_POLARISATION_MAX = 0x5,};
typedef struct _QUOTA_LIMITS QUOTA_LIMITS;
typedef struct _REGISTER_FIS REGISTER_FIS;
typedef struct RIO_BUFFERID_t *RIO_BUFFERID;
typedef union _RTL_RUN_ONCE RTL_RUN_ONCE;
typedef struct _RXCE_ADDRESS_ RXCE_ADDRESS;
typedef struct _RX_FCB_TABLE RX_FCB_TABLE;
typedef struct _RX_MID_ATLAS RX_MID_ATLAS;
typedef struct _RX_WORK_ITEM_ RX_WORK_ITEM;
typedef struct _SCSI_ADDRESS SCSI_ADDRESS;
typedef struct _SDRESP_TYPE3 SDRESP_TYPE3;
typedef struct _SELF_ID_MORE SELF_ID_MORE;
typedef struct _SHARE_ACCESS SHARE_ACCESS;
typedef struct tagSILO_COMMAND SILO_COMMAND;
typedef union _SLIST_HEADER SLIST_HEADER;
typedef struct SMHBA_FC_Phy SMHBA_FC_PHY;
typedef struct SMHBA_ScsiId SMHBA_SCSIID;
typedef struct _STATUS_BLOCK STATUS_BLOCK;
typedef struct _STOR_ADDRESS STOR_ADDRESS;
typedef struct _SUB_Q_HEADER SUB_Q_HEADER;
typedef struct _SYSENV_VALUE SYSENV_VALUE;
typedef struct _SdpQueryUuid SdpQueryUuid;
typedef struct _SendLIRR_OUT SendLIRR_OUT;
typedef struct _SendRNID_OUT SendRNID_OUT;
typedef struct _TAPE_PREPARE TAPE_PREPARE;
typedef struct tcp_opt_sack TCP_OPT_SACK;
typedef struct _TEXTUAL_LEAF TEXTUAL_LEAF;
typedef struct _TOKEN_GROUPS TOKEN_GROUPS;
typedef struct _TOKEN_ORIGIN TOKEN_ORIGIN;
typedef struct _TOKEN_SOURCE TOKEN_SOURCE;
typedef struct _TOPOLOGY_MAP TOPOLOGY_MAP;
typedef struct USBDI_HANDLE__ *USBDI_HANDLE;
typedef struct _VIDEO_MEMORY VIDEO_MEMORY;
typedef struct tWAVEFORMATEX WAVEFORMATEX;
typedef struct _WNODE_HEADER WNODE_HEADER;
typedef struct _WSK_BUF_LIST WSK_BUF_LIST;
typedef struct _WWAN_CONTEXT WWAN_CONTEXT;
typedef struct _WmiMonitorID WmiMonitorID;
typedef struct _XSAVE_FORMAT XSAVE_FORMAT;
enum _BRB_VERSION {BLUETOOTH_V1 = 0x0,BLUETOOTH_V2 = 0x1,};
enum _BdaLockType {Bda_LockType_None = 0x0,Bda_LockType_PLL = 0x1,Bda_LockType_DecoderDemod = 0x2,Bda_LockType_Complete = 0x80,};
enum _D3DDDI_POOL {D3DDDIPOOL_SYSTEMMEM = 0x1,D3DDDIPOOL_VIDEOMEMORY = 0x2,D3DDDIPOOL_LOCALVIDMEM = 0x3,D3DDDIPOOL_NONLOCALVIDMEM = 0x4,};
enum _DEBUG_LEVEL {DlDebugError = 0x0,DlDebugWarning = 0x1,DlDebugTrace = 0x2,DlDebugInfo = 0x3,};
enum _DPFLTR_TYPE {DPFLTR_SYSTEM_ID = 0x0,DPFLTR_SMSS_ID = 0x1,DPFLTR_SETUP_ID = 0x2,DPFLTR_NTFS_ID = 0x3,DPFLTR_FSTUB_ID = 0x4,DPFLTR_CRASHDUMP_ID = 0x5,DPFLTR_CDAUDIO_ID = 0x6,DPFLTR_CDROM_ID = 0x7,DPFLTR_CLASSPNP_ID = 0x8,DPFLTR_DISK_ID = 0x9,DPFLTR_REDBOOK_ID = 0xA,DPFLTR_STORPROP_ID = 0xB,DPFLTR_SCSIPORT_ID = 0xC,DPFLTR_SCSIMINIPORT_ID = 0xD,DPFLTR_CONFIG_ID = 0xE,DPFLTR_I8042PRT_ID = 0xF,DPFLTR_SERMOUSE_ID = 0x10,DPFLTR_LSERMOUS_ID = 0x11,DPFLTR_KBDHID_ID = 0x12,DPFLTR_MOUHID_ID = 0x13,DPFLTR_KBDCLASS_ID = 0x14,DPFLTR_MOUCLASS_ID = 0x15,DPFLTR_TWOTRACK_ID = 0x16,DPFLTR_WMILIB_ID = 0x17,DPFLTR_ACPI_ID = 0x18,DPFLTR_AMLI_ID = 0x19,DPFLTR_HALIA64_ID = 0x1A,DPFLTR_VIDEO_ID = 0x1B,DPFLTR_SVCHOST_ID = 0x1C,DPFLTR_VIDEOPRT_ID = 0x1D,DPFLTR_TCPIP_ID = 0x1E,DPFLTR_DMSYNTH_ID = 0x1F,DPFLTR_NTOSPNP_ID = 0x20,DPFLTR_FASTFAT_ID = 0x21,DPFLTR_SAMSS_ID = 0x22,DPFLTR_PNPMGR_ID = 0x23,DPFLTR_NETAPI_ID = 0x24,DPFLTR_SCSERVER_ID = 0x25,DPFLTR_SCCLIENT_ID = 0x26,DPFLTR_SERIAL_ID = 0x27,DPFLTR_SERENUM_ID = 0x28,DPFLTR_UHCD_ID = 0x29,DPFLTR_RPCPROXY_ID = 0x2A,DPFLTR_AUTOCHK_ID = 0x2B,DPFLTR_DCOMSS_ID = 0x2C,DPFLTR_UNIMODEM_ID = 0x2D,DPFLTR_SIS_ID = 0x2E,DPFLTR_FLTMGR_ID = 0x2F,DPFLTR_WMICORE_ID = 0x30,DPFLTR_BURNENG_ID = 0x31,DPFLTR_IMAPI_ID = 0x32,DPFLTR_SXS_ID = 0x33,DPFLTR_FUSION_ID = 0x34,DPFLTR_IDLETASK_ID = 0x35,DPFLTR_SOFTPCI_ID = 0x36,DPFLTR_TAPE_ID = 0x37,DPFLTR_MCHGR_ID = 0x38,DPFLTR_IDEP_ID = 0x39,DPFLTR_PCIIDE_ID = 0x3A,DPFLTR_FLOPPY_ID = 0x3B,DPFLTR_FDC_ID = 0x3C,DPFLTR_TERMSRV_ID = 0x3D,DPFLTR_W32TIME_ID = 0x3E,DPFLTR_PREFETCHER_ID = 0x3F,DPFLTR_RSFILTER_ID = 0x40,DPFLTR_FCPORT_ID = 0x41,DPFLTR_PCI_ID = 0x42,DPFLTR_DMIO_ID = 0x43,DPFLTR_DMCONFIG_ID = 0x44,DPFLTR_DMADMIN_ID = 0x45,DPFLTR_WSOCKTRANSPORT_ID = 0x46,DPFLTR_VSS_ID = 0x47,DPFLTR_PNPMEM_ID = 0x48,DPFLTR_PROCESSOR_ID = 0x49,DPFLTR_DMSERVER_ID = 0x4A,DPFLTR_SR_ID = 0x4B,DPFLTR_INFINIBAND_ID = 0x4C,DPFLTR_IHVDRIVER_ID = 0x4D,DPFLTR_IHVVIDEO_ID = 0x4E,DPFLTR_IHVAUDIO_ID = 0x4F,DPFLTR_IHVNETWORK_ID = 0x50,DPFLTR_IHVSTREAMING_ID = 0x51,DPFLTR_IHVBUS_ID = 0x52,DPFLTR_HPS_ID = 0x53,DPFLTR_RTLTHREADPOOL_ID = 0x54,DPFLTR_LDR_ID = 0x55,DPFLTR_TCPIP6_ID = 0x56,DPFLTR_ISAPNP_ID = 0x57,DPFLTR_SHPC_ID = 0x58,DPFLTR_STORPORT_ID = 0x59,DPFLTR_STORMINIPORT_ID = 0x5A,DPFLTR_PRINTSPOOLER_ID = 0x5B,DPFLTR_VSSDYNDISK_ID = 0x5C,DPFLTR_VERIFIER_ID = 0x5D,DPFLTR_VDS_ID = 0x5E,DPFLTR_VDSBAS_ID = 0x5F,DPFLTR_VDSDYN_ID = 0x60,DPFLTR_VDSDYNDR_ID = 0x61,DPFLTR_VDSLDR_ID = 0x62,DPFLTR_VDSUTIL_ID = 0x63,DPFLTR_DFRGIFC_ID = 0x64,DPFLTR_DEFAULT_ID = 0x65,DPFLTR_MM_ID = 0x66,DPFLTR_DFSC_ID = 0x67,DPFLTR_WOW64_ID = 0x68,DPFLTR_ALPC_ID = 0x69,DPFLTR_WDI_ID = 0x6A,DPFLTR_PERFLIB_ID = 0x6B,DPFLTR_KTM_ID = 0x6C,DPFLTR_IOSTRESS_ID = 0x6D,DPFLTR_HEAP_ID = 0x6E,DPFLTR_WHEA_ID = 0x6F,DPFLTR_USERGDI_ID = 0x70,DPFLTR_MMCSS_ID = 0x71,DPFLTR_TPM_ID = 0x72,DPFLTR_THREADORDER_ID = 0x73,DPFLTR_ENVIRON_ID = 0x74,DPFLTR_EMS_ID = 0x75,DPFLTR_WDT_ID = 0x76,DPFLTR_FVEVOL_ID = 0x77,DPFLTR_NDIS_ID = 0x78,DPFLTR_NVCTRACE_ID = 0x79,DPFLTR_LUAFV_ID = 0x7A,DPFLTR_APPCOMPAT_ID = 0x7B,DPFLTR_USBSTOR_ID = 0x7C,DPFLTR_SBP2PORT_ID = 0x7D,DPFLTR_COVERAGE_ID = 0x7E,DPFLTR_CACHEMGR_ID = 0x7F,DPFLTR_MOUNTMGR_ID = 0x80,DPFLTR_CFR_ID = 0x81,DPFLTR_TXF_ID = 0x82,DPFLTR_KSECDD_ID = 0x83,DPFLTR_FLTREGRESS_ID = 0x84,DPFLTR_MPIO_ID = 0x85,DPFLTR_MSDSM_ID = 0x86,DPFLTR_UDFS_ID = 0x87,DPFLTR_PSHED_ID = 0x88,DPFLTR_STORVSP_ID = 0x89,DPFLTR_LSASS_ID = 0x8A,DPFLTR_SSPICLI_ID = 0x8B,DPFLTR_CNG_ID = 0x8C,DPFLTR_EXFAT_ID = 0x8D,DPFLTR_FILETRACE_ID = 0x8E,DPFLTR_XSAVE_ID = 0x8F,DPFLTR_SE_ID = 0x90,DPFLTR_DRIVEEXTENDER_ID = 0x91,DPFLTR_POWER_ID = 0x92,DPFLTR_CRASHDUMPXHCI_ID = 0x93,DPFLTR_GPIO_ID = 0x94,DPFLTR_REFS_ID = 0x95,DPFLTR_ENDOFTABLE_ID = 0x96,};
enum _FSINFOCLASS {FileFsVolumeInformation = 0x1,FileFsLabelInformation = 0x2,FileFsSizeInformation = 0x3,FileFsDeviceInformation = 0x4,FileFsAttributeInformation = 0x5,FileFsControlInformation = 0x6,FileFsFullSizeInformation = 0x7,FileFsObjectIdInformation = 0x8,FileFsDriverPathInformation = 0x9,FileFsVolumeFlagsInformation = 0xA,FileFsSectorSizeInformation = 0xB,FileFsDataCopyInformation = 0xC,FileFsMaximumInformation = 0xD,};
enum _GETSGSTATUS {SG_ALLOCATED = 0x0,SG_BUFFER_TOO_SMALL = 0x1,};
typedef struct __JUMP_BUFFER _JUMP_BUFFER;
struct _KENLISTMENT;
struct _LEAF_FORMAT {unsigned int SpecifierId : 24;unsigned int DescriptorType : 8;};
enum _MOUSE_STATE {MouseIdle = 0x0,XMovement = 0x1,YMovement = 0x2,ZMovement = 0x3,MouseExpectingACK = 0x4,MouseResetting = 0x5,};
enum _NDIS_MEDIUM {NdisMedium802_3 = 0x0,NdisMedium802_5 = 0x1,NdisMediumFddi = 0x2,NdisMediumWan = 0x3,NdisMediumLocalTalk = 0x4,NdisMediumDix = 0x5,NdisMediumArcnetRaw = 0x6,NdisMediumArcnet878_2 = 0x7,NdisMediumAtm = 0x8,NdisMediumWirelessWan = 0x9,NdisMediumIrda = 0xA,NdisMediumBpc = 0xB,NdisMediumCoWan = 0xC,NdisMedium1394 = 0xD,NdisMediumInfiniBand = 0xE,NdisMediumTunnel = 0xF,NdisMediumNative802_11 = 0x10,NdisMediumLoopback = 0x11,NdisMediumWiMAX = 0x12,NdisMediumIP = 0x13,NdisMediumMax = 0x14,};
struct _RTC_vardesc {int addr;int size;char *name;};
enum _SMB_DIALECT {SmbDialectNtLanMan = 0x0,SmbDialectLanMan21 = 0x1,SmbDialectDosLanMan21 = 0x2,SmbDialectLanMan20 = 0x3,SmbDialectDosLanMan20 = 0x4,SmbDialectLanMan10 = 0x5,SmbDialectMsNet30 = 0x6,SmbDialectMsNet103 = 0x7,SmbDialectPcLan10 = 0x8,SmbDialectPcNet10 = 0x9,SmbDialectIllegal = 0xA,};
enum _SRB_COMMAND {SRB_READ_DATA = 0x0,SRB_WRITE_DATA = 0x1,SRB_GET_STREAM_STATE = 0x2,SRB_SET_STREAM_STATE = 0x3,SRB_SET_STREAM_PROPERTY = 0x4,SRB_GET_STREAM_PROPERTY = 0x5,SRB_OPEN_MASTER_CLOCK = 0x6,SRB_INDICATE_MASTER_CLOCK = 0x7,SRB_UNKNOWN_STREAM_COMMAND = 0x8,SRB_SET_STREAM_RATE = 0x9,SRB_PROPOSE_DATA_FORMAT = 0xA,SRB_CLOSE_MASTER_CLOCK = 0xB,SRB_PROPOSE_STREAM_RATE = 0xC,SRB_SET_DATA_FORMAT = 0xD,SRB_GET_DATA_FORMAT = 0xE,SRB_BEGIN_FLUSH = 0xF,SRB_END_FLUSH = 0x10,SRB_GET_STREAM_INFO = 0x100,SRB_OPEN_STREAM = 0x101,SRB_CLOSE_STREAM = 0x102,SRB_OPEN_DEVICE_INSTANCE = 0x103,SRB_CLOSE_DEVICE_INSTANCE = 0x104,SRB_GET_DEVICE_PROPERTY = 0x105,SRB_SET_DEVICE_PROPERTY = 0x106,SRB_INITIALIZE_DEVICE = 0x107,SRB_CHANGE_POWER_STATE = 0x108,SRB_UNINITIALIZE_DEVICE = 0x109,SRB_UNKNOWN_DEVICE_COMMAND = 0x10A,SRB_PAGING_OUT_DRIVER = 0x10B,SRB_GET_DATA_INTERSECTION = 0x10C,SRB_INITIALIZATION_COMPLETE = 0x10D,SRB_SURPRISE_REMOVAL = 0x10E,SRB_DEVICE_METHOD = 0x10F,SRB_STREAM_METHOD = 0x110,SRB_NOTIFY_IDLE_STATE = 0x111,};
enum _TAPE_STATUS {TAPE_STATUS_SEND_SRB_AND_CALLBACK = 0x0,TAPE_STATUS_CALLBACK = 0x1,TAPE_STATUS_CHECK_TEST_UNIT_READY = 0x2,TAPE_STATUS_SUCCESS = 0x3,TAPE_STATUS_INSUFFICIENT_RESOURCES = 0x4,TAPE_STATUS_NOT_IMPLEMENTED = 0x5,TAPE_STATUS_INVALID_DEVICE_REQUEST = 0x6,TAPE_STATUS_INVALID_PARAMETER = 0x7,TAPE_STATUS_MEDIA_CHANGED = 0x8,TAPE_STATUS_BUS_RESET = 0x9,TAPE_STATUS_SETMARK_DETECTED = 0xA,TAPE_STATUS_FILEMARK_DETECTED = 0xB,TAPE_STATUS_BEGINNING_OF_MEDIA = 0xC,TAPE_STATUS_END_OF_MEDIA = 0xD,TAPE_STATUS_BUFFER_OVERFLOW = 0xE,TAPE_STATUS_NO_DATA_DETECTED = 0xF,TAPE_STATUS_EOM_OVERFLOW = 0x10,TAPE_STATUS_NO_MEDIA = 0x11,TAPE_STATUS_IO_DEVICE_ERROR = 0x12,TAPE_STATUS_UNRECOGNIZED_MEDIA = 0x13,TAPE_STATUS_DEVICE_NOT_READY = 0x14,TAPE_STATUS_MEDIA_WRITE_PROTECTED = 0x15,TAPE_STATUS_DEVICE_DATA_ERROR = 0x16,TAPE_STATUS_NO_SUCH_DEVICE = 0x17,TAPE_STATUS_INVALID_BLOCK_LENGTH = 0x18,TAPE_STATUS_IO_TIMEOUT = 0x19,TAPE_STATUS_DEVICE_NOT_CONNECTED = 0x1A,TAPE_STATUS_DATA_OVERRUN = 0x1B,TAPE_STATUS_DEVICE_BUSY = 0x1C,TAPE_STATUS_REQUIRES_CLEANING = 0x1D,TAPE_STATUS_CLEANER_CARTRIDGE_INSTALLED = 0x1E,};
typedef char __C_ASSERT__[1];
typedef int sig_atomic_t;
typedef struct addrinfoexA ADDRINFOEXA;
typedef struct addrinfoexW ADDRINFOEXW;
typedef struct _ATM_ADDRESS ATM_ADDRESS;
typedef struct _ATM_BHLI_IE ATM_BHLI_IE;
typedef struct _ATM_BLLI_IE ATM_BLLI_IE;
typedef struct _ATM_PVC_SAP ATM_PVC_SAP;
typedef struct _AUTHZ_STATE AUTHZ_STATE;
typedef struct _AddLink_OUT AddLink_OUT;
typedef struct _AddPort_OUT AddPort_OUT;
enum BDA_Channel {BDA_UNDEFINED_CHANNEL = 0xFFFFFFFF,};
typedef struct _BDA_PID_MAP BDA_PID_MAP;
typedef struct _2F642FF65A2C0B5567E803A6696CABCC BINARY_DATA;
typedef struct _BIN_RESULTS BIN_RESULTS;
typedef struct _CC_HW_FIELD CC_HW_FIELD;
typedef struct _CPTABLEINFO CPTABLEINFO;
typedef struct _CREATE_DISK CREATE_DISK;
typedef struct _CSADDR_INFO CSADDR_INFO;
typedef struct _ChannelInfo ChannelInfo;
typedef struct _DDC_CONTROL DDC_CONTROL;
typedef struct _DEVICESCOPE DEVICESCOPE;
typedef struct _DISK_RECORD DISK_RECORD;
typedef struct _DMA_ADAPTER DMA_ADAPTER;
typedef struct _DSM_VERSION DSM_VERSION;
typedef struct _DUMP_DRIVER DUMP_DRIVER;
typedef struct _FBPT_RECORD FBPT_RECORD;
typedef struct _FCP_SEND_REQUEST FCP_REQUEST;
typedef struct _FILE_ID_128 FILE_ID_128;
typedef struct _FILE_OBJECT FILE_OBJECT;
typedef struct _FLAT_STRING FLAT_STRING;
typedef struct _FPDT_RECORD FPDT_RECORD;
typedef struct _GPIOControl GPIOControl;
typedef struct _8F34270CB28A8FB9BC09363183528BFE GUIDREGINFO;
enum HBA_wwntype {NODE_WWN = 0x0,PORT_WWN = 0x1,};
typedef struct HCOLORSPACE__ *HCOLORSPACE;
struct HINSTANCE__ {int unused;};
struct HMETAFILE__ {int unused;};
typedef struct _ICMP_HEADER ICMP_HEADER;
struct IDmaChannel {struct IDmaChannelVtbl *lpVtbl;};
typedef struct _IGMP_HEADER IGMP_HEADER;
typedef struct in6_pktinfo IN6_PKTINFO;
typedef struct _INQUIRYDATA INQUIRYDATA;
typedef struct _IO_COUNTERS IO_COUNTERS;
typedef struct _IPV4_HEADER IPV4_HEADER;
typedef struct _IPV6_HEADER IPV6_HEADER;
typedef struct ip_msfilter IP_MSFILTER;
struct IPortEvents {struct IPortEventsVtbl *lpVtbl;};
struct IPortWaveRT {struct IPortWaveRTVtbl *lpVtbl;};
typedef struct _IR_DEV_CAPS IR_DEV_CAPS;
typedef union _IVRS_IVINFO IVRS_IVINFO;
typedef struct _KENLISTMENT KENLISTMENT;
typedef struct _KEYBOARD_ID KEYBOARD_ID;
typedef struct _8276AF68B2084DDEC7235E96B5A3DDF6 KSATTRIBUTE;
typedef union _A4FB595EF421231CAF150DDD3288A6D5 KSDATARANGE;
typedef struct _37B8E770EA172EE03D1653C7B692D623 KSEVENTDATA;
typedef struct _A35330E71724D40A1BD15D9C53ABB072 KSEVENT_SET;
typedef struct _52BD71AC0F61B53F3E44045ED088295E KSFRAMETIME;
typedef struct _E1A151A2F6A6C209F977C1A4EAB9F7DF KSHANDSHAKE;
typedef struct _KSM_BDA_PIN KSM_BDA_PIN;
typedef struct tagKS_AMVPSIZE KS_AMVPSIZE;
typedef struct _KWAIT_BLOCK KWAIT_BLOCK;
typedef struct _LEAF_FORMAT LEAF_FORMAT;
enum MACRO_ACODE {ACODE_RESERVED_0 = 0,ACODE_ACK_COMPLETE = 1,ACODE_ACK_PENDING = 2,ACODE_RESERVED_3 = 3,ACODE_ACK_BUSY_X = 4,ACODE_ACK_BUSY_A = 5,ACODE_ACK_BUSY_B = 6,ACODE_RESERVED_7 = 7,ACODE_RESERVED_8 = 8,ACODE_RESERVED_9 = 9,ACODE_RESERVED_10 = 10,ACODE_ACK_TARDY = 11,ACODE_RESERVED_12 = 12,ACODE_ACK_DATA_ERROR = 13,ACODE_ACK_TYPE_ERROR = 14,ACODE_RESERVED_15 = 15,ACODE_STATUS_MASK = -1072562064,};
enum MACRO_AFIFO {AFIFO_OFFSET = 0,DSR_OFFSET = 1,DCR_OFFSET = 2,EPP_OFFSET = 4,};
enum MACRO_ALLOC {ALLOC_PRAGMA = 1,ALLOC_DATA_PRAGMA = 1,};
enum MACRO_ALLOW {ALLOW_PERFORMANCE_HIT_IN_Allow_ID = 1,};
enum MACRO_ASYNC {ASYNC_PAYLOAD_100_RATE = 512,ASYNC_PAYLOAD_200_RATE = 1024,ASYNC_PAYLOAD_400_RATE = 2048,ASYNC_PAYLOAD_800_RATE = 4096,ASYNC_PAYLOAD_1600_RATE = 4096,ASYNC_PAYLOAD_3200_RATE = 4096,};
enum MACRO_ATAPI {ATAPI_MODE_SENSE = 0x5A,ATAPI_MODE_SELECT = 0x55,ATAPI_LS120_FORMAT_UNIT = 0x24,};
enum MACRO_AUDIO {AUDIO_STATUS_NOT_SUPPORTED = 0x0,AUDIO_STATUS_IN_PROGRESS = 0x11,AUDIO_STATUS_PAUSED = 0x12,AUDIO_STATUS_PLAY_COMPLETE = 0x13,AUDIO_STATUS_PLAY_ERROR = 0x14,AUDIO_STATUS_NO_STATUS = 0x15,};
enum MACRO_AUDIT {AUDIT_ALLOW_NO_PRIVILEGE = 0x1,};
enum MACRO_AVIIF {AVIIF_CONTROLFRAME = 0x200,};
enum MACRO_Added {Added = 0,Modified = 2,};
enum MACRO_BLANK {BLANK_FULL = 0x0,BLANK_MINIMAL = 0x1,BLANK_TRACK = 0x2,BLANK_UNRESERVE_TRACK = 0x3,BLANK_TAIL = 0x4,BLANK_UNCLOSE_SESSION = 0x5,BLANK_SESSION = 0x6,};
enum MACRO_BLOCK {_FREE_BLOCK = 0,_NORMAL_BLOCK = 1,_CRT_BLOCK = 2,_IGNORE_BLOCK = 3,_CLIENT_BLOCK = 4,};
enum MACRO_BOUND {BOUND_IMAGE_UNSUPPORTED = 0x97,};
enum MACRO_CACHE {CACHE_MANAGER = 0x34,};
enum MACRO_CDROM {CDROM_AUDIO_CONTROL_PAGE = 0xE,};
enum MACRO_CLAIM {CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID = 0x0,CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 = 0x1,CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 = 0x2,CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING = 0x3,CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN = 0x4,CLAIM_SECURITY_ATTRIBUTE_TYPE_SID = 0x5,CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN = 0x6,CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING = 0x10,CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE = 0x1,CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE = 0x2,CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY = 0x4,CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT = 0x8,CLAIM_SECURITY_ATTRIBUTE_DISABLED = 0x10,CLAIM_SECURITY_ATTRIBUTE_MANDATORY = 0x20,CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS = 0x3F,CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS = 0xFFFF0000,CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 = 0x1,CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION = 0x1,};
enum MACRO_CLASS {CLASS_E_NOAGGREGATION = 0x80040110,CLASS_E_CLASSNOTAVAILABLE = 0x80040111,CLASS_E_NOTLICENSED = 0x80040112,};
enum MACRO_CLEAN {CLEAN_NOW = 20,CLEAN_PERIODIC = 21,};
enum MACRO_CLOCK {CLOCK_NETWORK_DERIVED = 0x2,CLOCK_PRECISION = 0x4,};
enum MACRO_CNFGA {CNFGA_IMPID_MASK = 0x70,CNFGA_IMPID_16BIT = 0x0,CNFGA_IMPID_8BIT = 0x10,CNFGA_IMPID_32BIT = 0x20,CNFGA_NO_TRANS_BYTE = 0x4,};
enum MACRO_COMQC {COMQC_E_APPLICATION_NOT_QUEUED = 0x80110600,COMQC_E_NO_QUEUEABLE_INTERFACES = 0x80110601,COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE = 0x80110602,COMQC_E_NO_IPERSISTSTREAM = 0x80110603,COMQC_E_BAD_MESSAGE = 0x80110604,COMQC_E_UNAUTHENTICATED = 0x80110605,COMQC_E_UNTRUSTED_ENQUEUER = 0x80110606,};
enum MACRO_COULD {COULD_NOT_VERIFY_VOLUMES = 0xC00037E8,};
enum MACRO_CRYPT {CRYPT_E_MSG_ERROR = 0x80091001,CRYPT_E_UNKNOWN_ALGO = 0x80091002,CRYPT_E_OID_FORMAT = 0x80091003,CRYPT_E_INVALID_MSG_TYPE = 0x80091004,CRYPT_E_UNEXPECTED_ENCODING = 0x80091005,CRYPT_E_AUTH_ATTR_MISSING = 0x80091006,CRYPT_E_HASH_VALUE = 0x80091007,CRYPT_E_INVALID_INDEX = 0x80091008,CRYPT_E_ALREADY_DECRYPTED = 0x80091009,CRYPT_E_NOT_DECRYPTED = 0x8009100A,CRYPT_E_RECIPIENT_NOT_FOUND = 0x8009100B,CRYPT_E_CONTROL_TYPE = 0x8009100C,CRYPT_E_ISSUER_SERIALNUMBER = 0x8009100D,CRYPT_E_SIGNER_NOT_FOUND = 0x8009100E,CRYPT_E_ATTRIBUTES_MISSING = 0x8009100F,CRYPT_E_STREAM_MSG_NOT_READY = 0x80091010,CRYPT_E_STREAM_INSUFFICIENT_DATA = 0x80091011,CRYPT_I_NEW_PROTECTION_REQUIRED = 0x91012,CRYPT_E_BAD_LEN = 0x80092001,CRYPT_E_BAD_ENCODE = 0x80092002,CRYPT_E_FILE_ERROR = 0x80092003,CRYPT_E_NOT_FOUND = 0x80092004,CRYPT_E_EXISTS = 0x80092005,CRYPT_E_NO_PROVIDER = 0x80092006,CRYPT_E_SELF_SIGNED = 0x80092007,CRYPT_E_DELETED_PREV = 0x80092008,CRYPT_E_NO_MATCH = 0x80092009,CRYPT_E_UNEXPECTED_MSG_TYPE = 0x8009200A,CRYPT_E_NO_KEY_PROPERTY = 0x8009200B,CRYPT_E_NO_DECRYPT_CERT = 0x8009200C,CRYPT_E_BAD_MSG = 0x8009200D,CRYPT_E_NO_SIGNER = 0x8009200E,CRYPT_E_PENDING_CLOSE = 0x8009200F,CRYPT_E_REVOKED = 0x80092010,CRYPT_E_NO_REVOCATION_DLL = 0x80092011,CRYPT_E_NO_REVOCATION_CHECK = 0x80092012,CRYPT_E_REVOCATION_OFFLINE = 0x80092013,CRYPT_E_NOT_IN_REVOCATION_DATABASE = 0x80092014,CRYPT_E_INVALID_NUMERIC_STRING = 0x80092020,CRYPT_E_INVALID_PRINTABLE_STRING = 0x80092021,CRYPT_E_INVALID_IA5_STRING = 0x80092022,CRYPT_E_INVALID_X500_STRING = 0x80092023,CRYPT_E_NOT_CHAR_STRING = 0x80092024,CRYPT_E_FILERESIZED = 0x80092025,CRYPT_E_SECURITY_SETTINGS = 0x80092026,CRYPT_E_NO_VERIFY_USAGE_DLL = 0x80092027,CRYPT_E_NO_VERIFY_USAGE_CHECK = 0x80092028,CRYPT_E_VERIFY_USAGE_OFFLINE = 0x80092029,CRYPT_E_NOT_IN_CTL = 0x8009202A,CRYPT_E_NO_TRUSTED_SIGNER = 0x8009202B,CRYPT_E_MISSING_PUBKEY_PARA = 0x8009202C,CRYPT_E_OBJECT_LOCATOR_OBJECT_NOT_FOUND = 0x8009202D,CRYPT_E_OSS_ERROR = 0x80093000,};
enum MACRO_D3D10 {D3D10_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS = 0x88790001,D3D10_ERROR_FILE_NOT_FOUND = 0x88790002,};
enum MACRO_D3D11 {D3D11_ERROR_TOO_MANY_UNIQUE_STATE_OBJECTS = 0x887C0001,D3D11_ERROR_FILE_NOT_FOUND = 0x887C0002,D3D11_ERROR_TOO_MANY_UNIQUE_VIEW_OBJECTS = 0x887C0003,D3D11_ERROR_DEFERRED_CONTEXT_MAP_WITHOUT_INITIAL_DISCARD = 0x887C0004,};
enum MACRO_D3DKM {D3DKM_INVALID_GAMMA_INDEX = 0xFFFFFFFF,};
enum MACRO_DC615 {DC615 = 3,DC600 = 4,};
enum MACRO_DDUMP {DDUMP_FLAG_DATA_READ_FROM_DEVICE = 0x1,};
enum MACRO_DEBUG {DEBUG_DEVICE_PORT_SERIAL = 0x8000,DEBUG_DEVICE_PORT_1394 = 0x8001,DEBUG_DEVICE_PORT_USB = 0x8002,DEBUG_DEVICE_PORT_NET = 0x8003,DEBUG_DEVICE_PORT_LOCAL = 0x8004,DEBUG_DEVICE_PORT_SUBTYPE_UEFI = 0x7,};
enum MACRO_DIRTY {DIRTY_MAPPED_PAGES_CONGESTION = 0xEB,};
enum MACRO_DMAV3 {DMAV3_TRANFER_WIDTH_8 = 0x0,DMAV3_TRANFER_WIDTH_16 = 0x1,DMAV3_TRANFER_WIDTH_32 = 0x2,DMAV3_TRANFER_WIDTH_64 = 0x3,DMAV3_TRANFER_WIDTH_128 = 0x4,DMAV3_TRANFER_WIDTH_256 = 0x5,};
enum MACRO_DOT11 {DOT11_SSID_MAX_LENGTH = 32,DOT11_BSSID_LIST_REVISION_1 = 1,DOT11_RATE_SET_MAX_LENGTH = 126,};
enum MACRO_DRIVE {DRIVE_EXTENDER = 0x134,};
enum MACRO_EAPOL {EAPOL_REQUEST_ID_WOL_FLAG_MUST_ENCRYPT = 0x1,};
enum MACRO_EFLAG {EFLAG_SIGN = 0x8000,EFLAG_ZERO = 0x4000,EFLAG_SELECT = 0xC000,};
enum MACRO_EJECT {EJECT_MEDIA = 33,};
enum MACRO_EMPTY {EMPTY_THREAD_REAPER_LIST = 0x13,};
enum MACRO_ERRED {ERRED_PACKET_INDICATION = 0x1,};
enum MACRO_ERRNO {EPERM = 1,ENOENT = 2,ESRCH = 3,EINTR = 4,EIO = 5,ENXIO = 6,E2BIG = 7,ENOEXEC = 8,EBADF = 9,ECHILD = 10,EAGAIN = 11,ENOMEM = 12,EACCES = 13,EFAULT = 14,EBUSY = 16,EEXIST = 17,EXDEV = 18,ENODEV = 19,ENOTDIR = 20,EISDIR = 21,ENFILE = 23,EMFILE = 24,ENOTTY = 25,EFBIG = 27,ENOSPC = 28,ESPIPE = 29,EROFS = 30,EMLINK = 31,EPIPE = 32,EDOM = 33,EDEADLK = 36,ENAMETOOLONG = 38,ENOLCK = 39,ENOSYS = 40,ENOTEMPTY = 41,EINVAL = 22,ERANGE = 34,EILSEQ = 42,STRUNCATE = 80,EDEADLOCK = 36,};
enum MACRO_ERROR {ERROR_SEVERITY_SUCCESS = 0x0,ERROR_SEVERITY_INFORMATIONAL = 0x40000000,ERROR_SEVERITY_WARNING = 0x80000000,ERROR_SEVERITY_ERROR = 0xC0000000,ERROR_SUCCESS = 0x0,NO_ERROR = 0x0,SEC_E_OK = 0x0,ERROR_INVALID_FUNCTION = 0x1,ERROR_FILE_NOT_FOUND = 0x2,ERROR_PATH_NOT_FOUND = 0x3,ERROR_TOO_MANY_OPEN_FILES = 0x4,ERROR_ACCESS_DENIED = 0x5,ERROR_INVALID_HANDLE = 0x6,ERROR_ARENA_TRASHED = 0x7,ERROR_NOT_ENOUGH_MEMORY = 0x8,ERROR_INVALID_BLOCK = 0x9,ERROR_BAD_ENVIRONMENT = 0xA,ERROR_BAD_FORMAT = 0xB,ERROR_INVALID_ACCESS = 0xC,ERROR_INVALID_DATA = 0xD,ERROR_OUTOFMEMORY = 0xE,ERROR_INVALID_DRIVE = 0xF,ERROR_CURRENT_DIRECTORY = 0x10,ERROR_NOT_SAME_DEVICE = 0x11,ERROR_NO_MORE_FILES = 0x12,ERROR_WRITE_PROTECT = 0x13,ERROR_BAD_UNIT = 0x14,ERROR_NOT_READY = 0x15,ERROR_BAD_COMMAND = 0x16,ERROR_CRC = 0x17,ERROR_BAD_LENGTH = 0x18,ERROR_SEEK = 0x19,ERROR_NOT_DOS_DISK = 0x1A,ERROR_SECTOR_NOT_FOUND = 0x1B,ERROR_OUT_OF_PAPER = 0x1C,ERROR_WRITE_FAULT = 0x1D,ERROR_READ_FAULT = 0x1E,ERROR_GEN_FAILURE = 0x1F,ERROR_SHARING_VIOLATION = 0x20,ERROR_LOCK_VIOLATION = 0x21,ERROR_WRONG_DISK = 0x22,ERROR_SHARING_BUFFER_EXCEEDED = 0x24,ERROR_HANDLE_EOF = 0x26,ERROR_HANDLE_DISK_FULL = 0x27,ERROR_NOT_SUPPORTED = 0x32,ERROR_REM_NOT_LIST = 0x33,ERROR_DUP_NAME = 0x34,ERROR_BAD_NETPATH = 0x35,ERROR_NETWORK_BUSY = 0x36,ERROR_DEV_NOT_EXIST = 0x37,ERROR_TOO_MANY_CMDS = 0x38,ERROR_ADAP_HDW_ERR = 0x39,ERROR_BAD_NET_RESP = 0x3A,ERROR_UNEXP_NET_ERR = 0x3B,ERROR_BAD_REM_ADAP = 0x3C,ERROR_PRINTQ_FULL = 0x3D,ERROR_NO_SPOOL_SPACE = 0x3E,ERROR_PRINT_CANCELLED = 0x3F,ERROR_NETNAME_DELETED = 0x40,ERROR_NETWORK_ACCESS_DENIED = 0x41,ERROR_BAD_DEV_TYPE = 0x42,ERROR_BAD_NET_NAME = 0x43,ERROR_TOO_MANY_NAMES = 0x44,ERROR_TOO_MANY_SESS = 0x45,ERROR_SHARING_PAUSED = 0x46,ERROR_REQ_NOT_ACCEP = 0x47,ERROR_REDIR_PAUSED = 0x48,ERROR_FILE_EXISTS = 0x50,ERROR_CANNOT_MAKE = 0x52,ERROR_FAIL_I24 = 0x53,ERROR_OUT_OF_STRUCTURES = 0x54,ERROR_ALREADY_ASSIGNED = 0x55,ERROR_INVALID_PASSWORD = 0x56,ERROR_INVALID_PARAMETER = 0x57,ERROR_NET_WRITE_FAULT = 0x58,ERROR_NO_PROC_SLOTS = 0x59,ERROR_TOO_MANY_SEMAPHORES = 0x64,ERROR_EXCL_SEM_ALREADY_OWNED = 0x65,ERROR_SEM_IS_SET = 0x66,ERROR_TOO_MANY_SEM_REQUESTS = 0x67,ERROR_INVALID_AT_INTERRUPT_TIME = 0x68,ERROR_SEM_OWNER_DIED = 0x69,ERROR_SEM_USER_LIMIT = 0x6A,ERROR_DISK_CHANGE = 0x6B,ERROR_DRIVE_LOCKED = 0x6C,ERROR_BROKEN_PIPE = 0x6D,ERROR_OPEN_FAILED = 0x6E,ERROR_BUFFER_OVERFLOW = 0x6F,ERROR_DISK_FULL = 0x70,ERROR_NO_MORE_SEARCH_HANDLES = 0x71,ERROR_INVALID_TARGET_HANDLE = 0x72,ERROR_INVALID_CATEGORY = 0x75,ERROR_INVALID_VERIFY_SWITCH = 0x76,ERROR_BAD_DRIVER_LEVEL = 0x77,ERROR_CALL_NOT_IMPLEMENTED = 0x78,ERROR_SEM_TIMEOUT = 0x79,ERROR_INSUFFICIENT_BUFFER = 0x7A,ERROR_INVALID_NAME = 0x7B,ERROR_INVALID_LEVEL = 0x7C,ERROR_NO_VOLUME_LABEL = 0x7D,ERROR_MOD_NOT_FOUND = 0x7E,ERROR_PROC_NOT_FOUND = 0x7F,ERROR_WAIT_NO_CHILDREN = 0x80,ERROR_CHILD_NOT_COMPLETE = 0x81,ERROR_DIRECT_ACCESS_HANDLE = 0x82,ERROR_NEGATIVE_SEEK = 0x83,ERROR_SEEK_ON_DEVICE = 0x84,ERROR_IS_JOIN_TARGET = 0x85,ERROR_IS_JOINED = 0x86,ERROR_IS_SUBSTED = 0x87,ERROR_NOT_JOINED = 0x88,ERROR_NOT_SUBSTED = 0x89,ERROR_JOIN_TO_JOIN = 0x8A,ERROR_SUBST_TO_SUBST = 0x8B,ERROR_JOIN_TO_SUBST = 0x8C,ERROR_SUBST_TO_JOIN = 0x8D,ERROR_BUSY_DRIVE = 0x8E,ERROR_SAME_DRIVE = 0x8F,ERROR_DIR_NOT_ROOT = 0x90,ERROR_DIR_NOT_EMPTY = 0x91,ERROR_IS_SUBST_PATH = 0x92,ERROR_IS_JOIN_PATH = 0x93,ERROR_PATH_BUSY = 0x94,ERROR_IS_SUBST_TARGET = 0x95,ERROR_SYSTEM_TRACE = 0x96,ERROR_INVALID_EVENT_COUNT = 0x97,ERROR_TOO_MANY_MUXWAITERS = 0x98,ERROR_INVALID_LIST_FORMAT = 0x99,ERROR_LABEL_TOO_LONG = 0x9A,ERROR_TOO_MANY_TCBS = 0x9B,ERROR_SIGNAL_REFUSED = 0x9C,ERROR_DISCARDED = 0x9D,ERROR_NOT_LOCKED = 0x9E,ERROR_BAD_THREADID_ADDR = 0x9F,ERROR_BAD_ARGUMENTS = 0xA0,ERROR_BAD_PATHNAME = 0xA1,ERROR_SIGNAL_PENDING = 0xA2,ERROR_MAX_THRDS_REACHED = 0xA4,ERROR_LOCK_FAILED = 0xA7,ERROR_BUSY = 0xAA,ERROR_DEVICE_SUPPORT_IN_PROGRESS = 0xAB,ERROR_CANCEL_VIOLATION = 0xAD,ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 0xAE,ERROR_INVALID_SEGMENT_NUMBER = 0xB4,ERROR_INVALID_ORDINAL = 0xB6,ERROR_ALREADY_EXISTS = 0xB7,ERROR_INVALID_FLAG_NUMBER = 0xBA,ERROR_SEM_NOT_FOUND = 0xBB,ERROR_INVALID_STARTING_CODESEG = 0xBC,ERROR_INVALID_STACKSEG = 0xBD,ERROR_INVALID_MODULETYPE = 0xBE,ERROR_INVALID_EXE_SIGNATURE = 0xBF,ERROR_EXE_MARKED_INVALID = 0xC0,ERROR_BAD_EXE_FORMAT = 0xC1,ERROR_ITERATED_DATA_EXCEEDS_64k = 0xC2,ERROR_INVALID_MINALLOCSIZE = 0xC3,ERROR_DYNLINK_FROM_INVALID_RING = 0xC4,ERROR_IOPL_NOT_ENABLED = 0xC5,ERROR_INVALID_SEGDPL = 0xC6,ERROR_AUTODATASEG_EXCEEDS_64k = 0xC7,ERROR_RING2SEG_MUST_BE_MOVABLE = 0xC8,ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 0xC9,ERROR_INFLOOP_IN_RELOC_CHAIN = 0xCA,ERROR_ENVVAR_NOT_FOUND = 0xCB,ERROR_NO_SIGNAL_SENT = 0xCD,ERROR_FILENAME_EXCED_RANGE = 0xCE,ERROR_RING2_STACK_IN_USE = 0xCF,ERROR_META_EXPANSION_TOO_LONG = 0xD0,ERROR_INVALID_SIGNAL_NUMBER = 0xD1,ERROR_THREAD_1_INACTIVE = 0xD2,ERROR_LOCKED = 0xD4,ERROR_TOO_MANY_MODULES = 0xD6,ERROR_NESTING_NOT_ALLOWED = 0xD7,ERROR_EXE_MACHINE_TYPE_MISMATCH = 0xD8,ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY = 0xD9,ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY = 0xDA,ERROR_FILE_CHECKED_OUT = 0xDC,ERROR_CHECKOUT_REQUIRED = 0xDD,ERROR_BAD_FILE_TYPE = 0xDE,ERROR_FILE_TOO_LARGE = 0xDF,ERROR_FORMS_AUTH_REQUIRED = 0xE0,ERROR_VIRUS_INFECTED = 0xE1,ERROR_VIRUS_DELETED = 0xE2,ERROR_PIPE_LOCAL = 0xE5,ERROR_BAD_PIPE = 0xE6,ERROR_PIPE_BUSY = 0xE7,ERROR_NO_DATA = 0xE8,ERROR_PIPE_NOT_CONNECTED = 0xE9,ERROR_MORE_DATA = 0xEA,ERROR_VC_DISCONNECTED = 0xF0,ERROR_INVALID_EA_NAME = 0xFE,ERROR_EA_LIST_INCONSISTENT = 0xFF,WAIT_TIMEOUT = 0x102,ERROR_NO_MORE_ITEMS = 0x103,ERROR_CANNOT_COPY = 0x10A,ERROR_DIRECTORY = 0x10B,ERROR_EAS_DIDNT_FIT = 0x113,ERROR_EA_FILE_CORRUPT = 0x114,ERROR_EA_TABLE_FULL = 0x115,ERROR_INVALID_EA_HANDLE = 0x116,ERROR_EAS_NOT_SUPPORTED = 0x11A,ERROR_NOT_OWNER = 0x120,ERROR_TOO_MANY_POSTS = 0x12A,ERROR_PARTIAL_COPY = 0x12B,ERROR_OPLOCK_NOT_GRANTED = 0x12C,ERROR_INVALID_OPLOCK_PROTOCOL = 0x12D,ERROR_DISK_TOO_FRAGMENTED = 0x12E,ERROR_DELETE_PENDING = 0x12F,ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = 0x130,ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = 0x131,ERROR_SECURITY_STREAM_IS_INCONSISTENT = 0x132,ERROR_INVALID_LOCK_RANGE = 0x133,ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = 0x134,ERROR_NOTIFICATION_GUID_ALREADY_DEFINED = 0x135,ERROR_INVALID_EXCEPTION_HANDLER = 0x136,ERROR_DUPLICATE_PRIVILEGES = 0x137,ERROR_NO_RANGES_PROCESSED = 0x138,ERROR_NOT_ALLOWED_ON_SYSTEM_FILE = 0x139,ERROR_DISK_RESOURCES_EXHAUSTED = 0x13A,ERROR_INVALID_TOKEN = 0x13B,ERROR_DEVICE_FEATURE_NOT_SUPPORTED = 0x13C,ERROR_MR_MID_NOT_FOUND = 0x13D,ERROR_SCOPE_NOT_FOUND = 0x13E,ERROR_UNDEFINED_SCOPE = 0x13F,ERROR_INVALID_CAP = 0x140,ERROR_DEVICE_UNREACHABLE = 0x141,ERROR_DEVICE_NO_RESOURCES = 0x142,ERROR_DATA_CHECKSUM_ERROR = 0x143,ERROR_INTERMIXED_KERNEL_EA_OPERATION = 0x144,ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED = 0x146,ERROR_OFFSET_ALIGNMENT_VIOLATION = 0x147,ERROR_INVALID_FIELD_IN_PARAMETER_LIST = 0x148,ERROR_OPERATION_IN_PROGRESS = 0x149,ERROR_BAD_DEVICE_PATH = 0x14A,ERROR_TOO_MANY_DESCRIPTORS = 0x14B,ERROR_SCRUB_DATA_DISABLED = 0x14C,ERROR_NOT_REDUNDANT_STORAGE = 0x14D,ERROR_RESIDENT_FILE_NOT_SUPPORTED = 0x14E,ERROR_COMPRESSED_FILE_NOT_SUPPORTED = 0x14F,ERROR_DIRECTORY_NOT_SUPPORTED = 0x150,ERROR_NOT_READ_FROM_COPY = 0x151,ERROR_FT_WRITE_FAILURE = 0x152,ERROR_FT_DI_SCAN_REQUIRED = 0x153,ERROR_INVALID_KERNEL_INFO_VERSION = 0x154,ERROR_INVALID_PEP_INFO_VERSION = 0x155,ERROR_FAIL_NOACTION_REBOOT = 0x15E,ERROR_FAIL_SHUTDOWN = 0x15F,ERROR_FAIL_RESTART = 0x160,ERROR_MAX_SESSIONS_REACHED = 0x161,ERROR_THREAD_MODE_ALREADY_BACKGROUND = 0x190,ERROR_THREAD_MODE_NOT_BACKGROUND = 0x191,ERROR_PROCESS_MODE_ALREADY_BACKGROUND = 0x192,ERROR_PROCESS_MODE_NOT_BACKGROUND = 0x193,ERROR_INVALID_ADDRESS = 0x1E7,ERROR_USER_PROFILE_LOAD = 0x1F4,ERROR_ARITHMETIC_OVERFLOW = 0x216,ERROR_PIPE_CONNECTED = 0x217,ERROR_PIPE_LISTENING = 0x218,ERROR_VERIFIER_STOP = 0x219,ERROR_ABIOS_ERROR = 0x21A,ERROR_WX86_WARNING = 0x21B,ERROR_WX86_ERROR = 0x21C,ERROR_TIMER_NOT_CANCELED = 0x21D,ERROR_UNWIND = 0x21E,ERROR_BAD_STACK = 0x21F,ERROR_INVALID_UNWIND_TARGET = 0x220,ERROR_INVALID_PORT_ATTRIBUTES = 0x221,ERROR_PORT_MESSAGE_TOO_LONG = 0x222,ERROR_INVALID_QUOTA_LOWER = 0x223,ERROR_DEVICE_ALREADY_ATTACHED = 0x224,ERROR_INSTRUCTION_MISALIGNMENT = 0x225,ERROR_PROFILING_NOT_STARTED = 0x226,ERROR_PROFILING_NOT_STOPPED = 0x227,ERROR_COULD_NOT_INTERPRET = 0x228,ERROR_PROFILING_AT_LIMIT = 0x229,ERROR_CANT_WAIT = 0x22A,ERROR_CANT_TERMINATE_SELF = 0x22B,ERROR_UNEXPECTED_MM_CREATE_ERR = 0x22C,ERROR_UNEXPECTED_MM_MAP_ERROR = 0x22D,ERROR_UNEXPECTED_MM_EXTEND_ERR = 0x22E,ERROR_BAD_FUNCTION_TABLE = 0x22F,ERROR_NO_GUID_TRANSLATION = 0x230,ERROR_INVALID_LDT_SIZE = 0x231,ERROR_INVALID_LDT_OFFSET = 0x233,ERROR_INVALID_LDT_DESCRIPTOR = 0x234,ERROR_TOO_MANY_THREADS = 0x235,ERROR_THREAD_NOT_IN_PROCESS = 0x236,ERROR_PAGEFILE_QUOTA_EXCEEDED = 0x237,ERROR_LOGON_SERVER_CONFLICT = 0x238,ERROR_SYNCHRONIZATION_REQUIRED = 0x239,ERROR_NET_OPEN_FAILED = 0x23A,ERROR_IO_PRIVILEGE_FAILED = 0x23B,ERROR_CONTROL_C_EXIT = 0x23C,ERROR_MISSING_SYSTEMFILE = 0x23D,ERROR_UNHANDLED_EXCEPTION = 0x23E,ERROR_APP_INIT_FAILURE = 0x23F,ERROR_PAGEFILE_CREATE_FAILED = 0x240,ERROR_INVALID_IMAGE_HASH = 0x241,ERROR_NO_PAGEFILE = 0x242,ERROR_ILLEGAL_FLOAT_CONTEXT = 0x243,ERROR_NO_EVENT_PAIR = 0x244,ERROR_DOMAIN_CTRLR_CONFIG_ERROR = 0x245,ERROR_ILLEGAL_CHARACTER = 0x246,ERROR_UNDEFINED_CHARACTER = 0x247,ERROR_FLOPPY_VOLUME = 0x248,ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT = 0x249,ERROR_BACKUP_CONTROLLER = 0x24A,ERROR_MUTANT_LIMIT_EXCEEDED = 0x24B,ERROR_FS_DRIVER_REQUIRED = 0x24C,ERROR_CANNOT_LOAD_REGISTRY_FILE = 0x24D,ERROR_DEBUG_ATTACH_FAILED = 0x24E,ERROR_SYSTEM_PROCESS_TERMINATED = 0x24F,ERROR_DATA_NOT_ACCEPTED = 0x250,ERROR_VDM_HARD_ERROR = 0x251,ERROR_DRIVER_CANCEL_TIMEOUT = 0x252,ERROR_REPLY_MESSAGE_MISMATCH = 0x253,ERROR_LOST_WRITEBEHIND_DATA = 0x254,ERROR_CLIENT_SERVER_PARAMETERS_INVALID = 0x255,ERROR_NOT_TINY_STREAM = 0x256,ERROR_STACK_OVERFLOW_READ = 0x257,ERROR_CONVERT_TO_LARGE = 0x258,ERROR_FOUND_OUT_OF_SCOPE = 0x259,ERROR_ALLOCATE_BUCKET = 0x25A,ERROR_MARSHALL_OVERFLOW = 0x25B,ERROR_INVALID_VARIANT = 0x25C,ERROR_BAD_COMPRESSION_BUFFER = 0x25D,ERROR_AUDIT_FAILED = 0x25E,ERROR_TIMER_RESOLUTION_NOT_SET = 0x25F,ERROR_INSUFFICIENT_LOGON_INFO = 0x260,ERROR_BAD_DLL_ENTRYPOINT = 0x261,ERROR_BAD_SERVICE_ENTRYPOINT = 0x262,ERROR_IP_ADDRESS_CONFLICT1 = 0x263,ERROR_IP_ADDRESS_CONFLICT2 = 0x264,ERROR_REGISTRY_QUOTA_LIMIT = 0x265,ERROR_NO_CALLBACK_ACTIVE = 0x266,ERROR_PWD_TOO_SHORT = 0x267,ERROR_PWD_TOO_RECENT = 0x268,ERROR_PWD_HISTORY_CONFLICT = 0x269,ERROR_UNSUPPORTED_COMPRESSION = 0x26A,ERROR_INVALID_HW_PROFILE = 0x26B,ERROR_INVALID_PLUGPLAY_DEVICE_PATH = 0x26C,ERROR_QUOTA_LIST_INCONSISTENT = 0x26D,ERROR_EVALUATION_EXPIRATION = 0x26E,ERROR_ILLEGAL_DLL_RELOCATION = 0x26F,ERROR_DLL_INIT_FAILED_LOGOFF = 0x270,ERROR_VALIDATE_CONTINUE = 0x271,ERROR_NO_MORE_MATCHES = 0x272,ERROR_RANGE_LIST_CONFLICT = 0x273,ERROR_SERVER_SID_MISMATCH = 0x274,ERROR_CANT_ENABLE_DENY_ONLY = 0x275,ERROR_FLOAT_MULTIPLE_FAULTS = 0x276,ERROR_FLOAT_MULTIPLE_TRAPS = 0x277,ERROR_NOINTERFACE = 0x278,ERROR_DRIVER_FAILED_SLEEP = 0x279,ERROR_CORRUPT_SYSTEM_FILE = 0x27A,ERROR_COMMITMENT_MINIMUM = 0x27B,ERROR_PNP_RESTART_ENUMERATION = 0x27C,ERROR_SYSTEM_IMAGE_BAD_SIGNATURE = 0x27D,ERROR_PNP_REBOOT_REQUIRED = 0x27E,ERROR_INSUFFICIENT_POWER = 0x27F,ERROR_MULTIPLE_FAULT_VIOLATION = 0x280,ERROR_SYSTEM_SHUTDOWN = 0x281,ERROR_PORT_NOT_SET = 0x282,ERROR_DS_VERSION_CHECK_FAILURE = 0x283,ERROR_RANGE_NOT_FOUND = 0x284,ERROR_NOT_SAFE_MODE_DRIVER = 0x286,ERROR_FAILED_DRIVER_ENTRY = 0x287,ERROR_DEVICE_ENUMERATION_ERROR = 0x288,ERROR_MOUNT_POINT_NOT_RESOLVED = 0x289,ERROR_INVALID_DEVICE_OBJECT_PARAMETER = 0x28A,ERROR_MCA_OCCURED = 0x28B,ERROR_DRIVER_DATABASE_ERROR = 0x28C,ERROR_SYSTEM_HIVE_TOO_LARGE = 0x28D,ERROR_DRIVER_FAILED_PRIOR_UNLOAD = 0x28E,ERROR_VOLSNAP_PREPARE_HIBERNATE = 0x28F,ERROR_HIBERNATION_FAILURE = 0x290,ERROR_PWD_TOO_LONG = 0x291,ERROR_FILE_SYSTEM_LIMITATION = 0x299,ERROR_ASSERTION_FAILURE = 0x29C,ERROR_ACPI_ERROR = 0x29D,ERROR_WOW_ASSERTION = 0x29E,ERROR_PNP_BAD_MPS_TABLE = 0x29F,ERROR_PNP_TRANSLATION_FAILED = 0x2A0,ERROR_PNP_IRQ_TRANSLATION_FAILED = 0x2A1,ERROR_PNP_INVALID_ID = 0x2A2,ERROR_WAKE_SYSTEM_DEBUGGER = 0x2A3,ERROR_HANDLES_CLOSED = 0x2A4,ERROR_EXTRANEOUS_INFORMATION = 0x2A5,ERROR_RXACT_COMMIT_NECESSARY = 0x2A6,ERROR_MEDIA_CHECK = 0x2A7,ERROR_GUID_SUBSTITUTION_MADE = 0x2A8,ERROR_STOPPED_ON_SYMLINK = 0x2A9,ERROR_LONGJUMP = 0x2AA,ERROR_PLUGPLAY_QUERY_VETOED = 0x2AB,ERROR_UNWIND_CONSOLIDATE = 0x2AC,ERROR_REGISTRY_HIVE_RECOVERED = 0x2AD,ERROR_DLL_MIGHT_BE_INSECURE = 0x2AE,ERROR_DLL_MIGHT_BE_INCOMPATIBLE = 0x2AF,ERROR_DBG_EXCEPTION_NOT_HANDLED = 0x2B0,ERROR_DBG_REPLY_LATER = 0x2B1,ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE = 0x2B2,ERROR_DBG_TERMINATE_THREAD = 0x2B3,ERROR_DBG_TERMINATE_PROCESS = 0x2B4,ERROR_DBG_CONTROL_C = 0x2B5,ERROR_DBG_PRINTEXCEPTION_C = 0x2B6,ERROR_DBG_RIPEXCEPTION = 0x2B7,ERROR_DBG_CONTROL_BREAK = 0x2B8,ERROR_DBG_COMMAND_EXCEPTION = 0x2B9,ERROR_OBJECT_NAME_EXISTS = 0x2BA,ERROR_THREAD_WAS_SUSPENDED = 0x2BB,ERROR_IMAGE_NOT_AT_BASE = 0x2BC,ERROR_RXACT_STATE_CREATED = 0x2BD,ERROR_SEGMENT_NOTIFICATION = 0x2BE,ERROR_BAD_CURRENT_DIRECTORY = 0x2BF,ERROR_FT_READ_RECOVERY_FROM_BACKUP = 0x2C0,ERROR_FT_WRITE_RECOVERY = 0x2C1,ERROR_IMAGE_MACHINE_TYPE_MISMATCH = 0x2C2,ERROR_RECEIVE_PARTIAL = 0x2C3,ERROR_RECEIVE_EXPEDITED = 0x2C4,ERROR_RECEIVE_PARTIAL_EXPEDITED = 0x2C5,ERROR_EVENT_DONE = 0x2C6,ERROR_EVENT_PENDING = 0x2C7,ERROR_CHECKING_FILE_SYSTEM = 0x2C8,ERROR_FATAL_APP_EXIT = 0x2C9,ERROR_PREDEFINED_HANDLE = 0x2CA,ERROR_WAS_UNLOCKED = 0x2CB,ERROR_SERVICE_NOTIFICATION = 0x2CC,ERROR_WAS_LOCKED = 0x2CD,ERROR_LOG_HARD_ERROR = 0x2CE,ERROR_ALREADY_WIN32 = 0x2CF,ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE = 0x2D0,ERROR_NO_YIELD_PERFORMED = 0x2D1,ERROR_TIMER_RESUME_IGNORED = 0x2D2,ERROR_ARBITRATION_UNHANDLED = 0x2D3,ERROR_CARDBUS_NOT_SUPPORTED = 0x2D4,ERROR_MP_PROCESSOR_MISMATCH = 0x2D5,ERROR_HIBERNATED = 0x2D6,ERROR_RESUME_HIBERNATION = 0x2D7,ERROR_FIRMWARE_UPDATED = 0x2D8,ERROR_DRIVERS_LEAKING_LOCKED_PAGES = 0x2D9,ERROR_WAKE_SYSTEM = 0x2DA,ERROR_WAIT_1 = 0x2DB,ERROR_WAIT_2 = 0x2DC,ERROR_WAIT_3 = 0x2DD,ERROR_WAIT_63 = 0x2DE,ERROR_ABANDONED_WAIT_0 = 0x2DF,ERROR_ABANDONED_WAIT_63 = 0x2E0,ERROR_USER_APC = 0x2E1,ERROR_KERNEL_APC = 0x2E2,ERROR_ALERTED = 0x2E3,ERROR_ELEVATION_REQUIRED = 0x2E4,ERROR_REPARSE = 0x2E5,ERROR_OPLOCK_BREAK_IN_PROGRESS = 0x2E6,ERROR_VOLUME_MOUNTED = 0x2E7,ERROR_RXACT_COMMITTED = 0x2E8,ERROR_NOTIFY_CLEANUP = 0x2E9,ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED = 0x2EA,ERROR_PAGE_FAULT_TRANSITION = 0x2EB,ERROR_PAGE_FAULT_DEMAND_ZERO = 0x2EC,ERROR_PAGE_FAULT_COPY_ON_WRITE = 0x2ED,ERROR_PAGE_FAULT_GUARD_PAGE = 0x2EE,ERROR_PAGE_FAULT_PAGING_FILE = 0x2EF,ERROR_CACHE_PAGE_LOCKED = 0x2F0,ERROR_CRASH_DUMP = 0x2F1,ERROR_BUFFER_ALL_ZEROS = 0x2F2,ERROR_REPARSE_OBJECT = 0x2F3,ERROR_RESOURCE_REQUIREMENTS_CHANGED = 0x2F4,ERROR_TRANSLATION_COMPLETE = 0x2F5,ERROR_NOTHING_TO_TERMINATE = 0x2F6,ERROR_PROCESS_NOT_IN_JOB = 0x2F7,ERROR_PROCESS_IN_JOB = 0x2F8,ERROR_VOLSNAP_HIBERNATE_READY = 0x2F9,ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY = 0x2FA,ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED = 0x2FB,ERROR_INTERRUPT_STILL_CONNECTED = 0x2FC,ERROR_WAIT_FOR_OPLOCK = 0x2FD,ERROR_DBG_EXCEPTION_HANDLED = 0x2FE,ERROR_DBG_CONTINUE = 0x2FF,ERROR_CALLBACK_POP_STACK = 0x300,ERROR_COMPRESSION_DISABLED = 0x301,ERROR_CANTFETCHBACKWARDS = 0x302,ERROR_CANTSCROLLBACKWARDS = 0x303,ERROR_ROWSNOTRELEASED = 0x304,ERROR_BAD_ACCESSOR_FLAGS = 0x305,ERROR_ERRORS_ENCOUNTERED = 0x306,ERROR_NOT_CAPABLE = 0x307,ERROR_REQUEST_OUT_OF_SEQUENCE = 0x308,ERROR_VERSION_PARSE_ERROR = 0x309,ERROR_BADSTARTPOSITION = 0x30A,ERROR_MEMORY_HARDWARE = 0x30B,ERROR_DISK_REPAIR_DISABLED = 0x30C,ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE = 0x30D,ERROR_SYSTEM_POWERSTATE_TRANSITION = 0x30E,ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION = 0x30F,ERROR_MCA_EXCEPTION = 0x310,ERROR_ACCESS_AUDIT_BY_POLICY = 0x311,ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY = 0x312,ERROR_ABANDON_HIBERFILE = 0x313,ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED = 0x314,ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR = 0x315,ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR = 0x316,ERROR_BAD_MCFG_TABLE = 0x317,ERROR_DISK_REPAIR_REDIRECTED = 0x318,ERROR_DISK_REPAIR_UNSUCCESSFUL = 0x319,ERROR_CORRUPT_LOG_OVERFULL = 0x31A,ERROR_CORRUPT_LOG_CORRUPTED = 0x31B,ERROR_CORRUPT_LOG_UNAVAILABLE = 0x31C,ERROR_CORRUPT_LOG_DELETED_FULL = 0x31D,ERROR_CORRUPT_LOG_CLEARED = 0x31E,ERROR_ORPHAN_NAME_EXHAUSTED = 0x31F,ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE = 0x320,ERROR_CANNOT_GRANT_REQUESTED_OPLOCK = 0x321,ERROR_CANNOT_BREAK_OPLOCK = 0x322,ERROR_OPLOCK_HANDLE_CLOSED = 0x323,ERROR_NO_ACE_CONDITION = 0x324,ERROR_INVALID_ACE_CONDITION = 0x325,ERROR_FILE_HANDLE_REVOKED = 0x326,ERROR_IMAGE_AT_DIFFERENT_BASE = 0x327,ERROR_EA_ACCESS_DENIED = 0x3E2,ERROR_OPERATION_ABORTED = 0x3E3,ERROR_IO_INCOMPLETE = 0x3E4,ERROR_IO_PENDING = 0x3E5,ERROR_NOACCESS = 0x3E6,ERROR_SWAPERROR = 0x3E7,ERROR_STACK_OVERFLOW = 0x3E9,ERROR_INVALID_MESSAGE = 0x3EA,ERROR_CAN_NOT_COMPLETE = 0x3EB,ERROR_INVALID_FLAGS = 0x3EC,ERROR_UNRECOGNIZED_VOLUME = 0x3ED,ERROR_FILE_INVALID = 0x3EE,ERROR_FULLSCREEN_MODE = 0x3EF,ERROR_NO_TOKEN = 0x3F0,ERROR_BADDB = 0x3F1,ERROR_BADKEY = 0x3F2,ERROR_CANTOPEN = 0x3F3,ERROR_CANTREAD = 0x3F4,ERROR_CANTWRITE = 0x3F5,ERROR_REGISTRY_RECOVERED = 0x3F6,ERROR_REGISTRY_CORRUPT = 0x3F7,ERROR_REGISTRY_IO_FAILED = 0x3F8,ERROR_NOT_REGISTRY_FILE = 0x3F9,ERROR_KEY_DELETED = 0x3FA,ERROR_NO_LOG_SPACE = 0x3FB,ERROR_KEY_HAS_CHILDREN = 0x3FC,ERROR_CHILD_MUST_BE_VOLATILE = 0x3FD,ERROR_NOTIFY_ENUM_DIR = 0x3FE,ERROR_DEPENDENT_SERVICES_RUNNING = 0x41B,ERROR_INVALID_SERVICE_CONTROL = 0x41C,ERROR_SERVICE_REQUEST_TIMEOUT = 0x41D,ERROR_SERVICE_NO_THREAD = 0x41E,ERROR_SERVICE_DATABASE_LOCKED = 0x41F,ERROR_SERVICE_ALREADY_RUNNING = 0x420,ERROR_INVALID_SERVICE_ACCOUNT = 0x421,ERROR_SERVICE_DISABLED = 0x422,ERROR_CIRCULAR_DEPENDENCY = 0x423,ERROR_SERVICE_DOES_NOT_EXIST = 0x424,ERROR_SERVICE_CANNOT_ACCEPT_CTRL = 0x425,ERROR_SERVICE_NOT_ACTIVE = 0x426,ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = 0x427,ERROR_EXCEPTION_IN_SERVICE = 0x428,ERROR_DATABASE_DOES_NOT_EXIST = 0x429,ERROR_SERVICE_SPECIFIC_ERROR = 0x42A,ERROR_PROCESS_ABORTED = 0x42B,ERROR_SERVICE_DEPENDENCY_FAIL = 0x42C,ERROR_SERVICE_LOGON_FAILED = 0x42D,ERROR_SERVICE_START_HANG = 0x42E,ERROR_INVALID_SERVICE_LOCK = 0x42F,ERROR_SERVICE_MARKED_FOR_DELETE = 0x430,ERROR_SERVICE_EXISTS = 0x431,ERROR_ALREADY_RUNNING_LKG = 0x432,ERROR_SERVICE_DEPENDENCY_DELETED = 0x433,ERROR_BOOT_ALREADY_ACCEPTED = 0x434,ERROR_SERVICE_NEVER_STARTED = 0x435,ERROR_DUPLICATE_SERVICE_NAME = 0x436,ERROR_DIFFERENT_SERVICE_ACCOUNT = 0x437,ERROR_CANNOT_DETECT_DRIVER_FAILURE = 0x438,ERROR_CANNOT_DETECT_PROCESS_ABORT = 0x439,ERROR_NO_RECOVERY_PROGRAM = 0x43A,ERROR_SERVICE_NOT_IN_EXE = 0x43B,ERROR_NOT_SAFEBOOT_SERVICE = 0x43C,ERROR_END_OF_MEDIA = 0x44C,ERROR_FILEMARK_DETECTED = 0x44D,ERROR_BEGINNING_OF_MEDIA = 0x44E,ERROR_SETMARK_DETECTED = 0x44F,ERROR_NO_DATA_DETECTED = 0x450,ERROR_PARTITION_FAILURE = 0x451,ERROR_INVALID_BLOCK_LENGTH = 0x452,ERROR_DEVICE_NOT_PARTITIONED = 0x453,ERROR_UNABLE_TO_LOCK_MEDIA = 0x454,ERROR_UNABLE_TO_UNLOAD_MEDIA = 0x455,ERROR_MEDIA_CHANGED = 0x456,ERROR_BUS_RESET = 0x457,ERROR_NO_MEDIA_IN_DRIVE = 0x458,ERROR_NO_UNICODE_TRANSLATION = 0x459,ERROR_DLL_INIT_FAILED = 0x45A,ERROR_SHUTDOWN_IN_PROGRESS = 0x45B,ERROR_NO_SHUTDOWN_IN_PROGRESS = 0x45C,ERROR_IO_DEVICE = 0x45D,ERROR_SERIAL_NO_DEVICE = 0x45E,ERROR_IRQ_BUSY = 0x45F,ERROR_MORE_WRITES = 0x460,ERROR_COUNTER_TIMEOUT = 0x461,ERROR_FLOPPY_ID_MARK_NOT_FOUND = 0x462,ERROR_FLOPPY_WRONG_CYLINDER = 0x463,ERROR_FLOPPY_UNKNOWN_ERROR = 0x464,ERROR_FLOPPY_BAD_REGISTERS = 0x465,ERROR_DISK_RECALIBRATE_FAILED = 0x466,ERROR_DISK_OPERATION_FAILED = 0x467,ERROR_DISK_RESET_FAILED = 0x468,ERROR_EOM_OVERFLOW = 0x469,ERROR_NOT_ENOUGH_SERVER_MEMORY = 0x46A,ERROR_POSSIBLE_DEADLOCK = 0x46B,ERROR_MAPPED_ALIGNMENT = 0x46C,ERROR_SET_POWER_STATE_VETOED = 0x474,ERROR_SET_POWER_STATE_FAILED = 0x475,ERROR_TOO_MANY_LINKS = 0x476,ERROR_OLD_WIN_VERSION = 0x47E,ERROR_APP_WRONG_OS = 0x47F,ERROR_SINGLE_INSTANCE_APP = 0x480,ERROR_RMODE_APP = 0x481,ERROR_INVALID_DLL = 0x482,ERROR_NO_ASSOCIATION = 0x483,ERROR_DDE_FAIL = 0x484,ERROR_DLL_NOT_FOUND = 0x485,ERROR_NO_MORE_USER_HANDLES = 0x486,ERROR_MESSAGE_SYNC_ONLY = 0x487,ERROR_SOURCE_ELEMENT_EMPTY = 0x488,ERROR_DESTINATION_ELEMENT_FULL = 0x489,ERROR_ILLEGAL_ELEMENT_ADDRESS = 0x48A,ERROR_MAGAZINE_NOT_PRESENT = 0x48B,ERROR_DEVICE_REINITIALIZATION_NEEDED = 0x48C,ERROR_DEVICE_REQUIRES_CLEANING = 0x48D,ERROR_DEVICE_DOOR_OPEN = 0x48E,ERROR_DEVICE_NOT_CONNECTED = 0x48F,ERROR_NOT_FOUND = 0x490,ERROR_NO_MATCH = 0x491,ERROR_SET_NOT_FOUND = 0x492,ERROR_POINT_NOT_FOUND = 0x493,ERROR_NO_TRACKING_SERVICE = 0x494,ERROR_NO_VOLUME_ID = 0x495,ERROR_UNABLE_TO_REMOVE_REPLACED = 0x497,ERROR_UNABLE_TO_MOVE_REPLACEMENT = 0x498,ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = 0x499,ERROR_JOURNAL_DELETE_IN_PROGRESS = 0x49A,ERROR_JOURNAL_NOT_ACTIVE = 0x49B,ERROR_POTENTIAL_FILE_FOUND = 0x49C,ERROR_JOURNAL_ENTRY_DELETED = 0x49D,ERROR_SHUTDOWN_IS_SCHEDULED = 0x4A6,ERROR_SHUTDOWN_USERS_LOGGED_ON = 0x4A7,ERROR_BAD_DEVICE = 0x4B0,ERROR_CONNECTION_UNAVAIL = 0x4B1,ERROR_DEVICE_ALREADY_REMEMBERED = 0x4B2,ERROR_NO_NET_OR_BAD_PATH = 0x4B3,ERROR_BAD_PROVIDER = 0x4B4,ERROR_CANNOT_OPEN_PROFILE = 0x4B5,ERROR_BAD_PROFILE = 0x4B6,ERROR_NOT_CONTAINER = 0x4B7,ERROR_EXTENDED_ERROR = 0x4B8,ERROR_INVALID_GROUPNAME = 0x4B9,ERROR_INVALID_COMPUTERNAME = 0x4BA,ERROR_INVALID_EVENTNAME = 0x4BB,ERROR_INVALID_DOMAINNAME = 0x4BC,ERROR_INVALID_SERVICENAME = 0x4BD,ERROR_INVALID_NETNAME = 0x4BE,ERROR_INVALID_SHARENAME = 0x4BF,ERROR_INVALID_PASSWORDNAME = 0x4C0,ERROR_INVALID_MESSAGENAME = 0x4C1,ERROR_INVALID_MESSAGEDEST = 0x4C2,ERROR_SESSION_CREDENTIAL_CONFLICT = 0x4C3,ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = 0x4C4,ERROR_DUP_DOMAINNAME = 0x4C5,ERROR_NO_NETWORK = 0x4C6,ERROR_CANCELLED = 0x4C7,ERROR_USER_MAPPED_FILE = 0x4C8,ERROR_CONNECTION_REFUSED = 0x4C9,ERROR_GRACEFUL_DISCONNECT = 0x4CA,ERROR_ADDRESS_ALREADY_ASSOCIATED = 0x4CB,ERROR_ADDRESS_NOT_ASSOCIATED = 0x4CC,ERROR_CONNECTION_INVALID = 0x4CD,ERROR_CONNECTION_ACTIVE = 0x4CE,ERROR_NETWORK_UNREACHABLE = 0x4CF,ERROR_HOST_UNREACHABLE = 0x4D0,ERROR_PROTOCOL_UNREACHABLE = 0x4D1,ERROR_PORT_UNREACHABLE = 0x4D2,ERROR_REQUEST_ABORTED = 0x4D3,ERROR_CONNECTION_ABORTED = 0x4D4,ERROR_RETRY = 0x4D5,ERROR_CONNECTION_COUNT_LIMIT = 0x4D6,ERROR_LOGIN_TIME_RESTRICTION = 0x4D7,ERROR_LOGIN_WKSTA_RESTRICTION = 0x4D8,ERROR_INCORRECT_ADDRESS = 0x4D9,ERROR_ALREADY_REGISTERED = 0x4DA,ERROR_SERVICE_NOT_FOUND = 0x4DB,ERROR_NOT_AUTHENTICATED = 0x4DC,ERROR_NOT_LOGGED_ON = 0x4DD,ERROR_CONTINUE = 0x4DE,ERROR_ALREADY_INITIALIZED = 0x4DF,ERROR_NO_MORE_DEVICES = 0x4E0,ERROR_NO_SUCH_SITE = 0x4E1,ERROR_DOMAIN_CONTROLLER_EXISTS = 0x4E2,ERROR_ONLY_IF_CONNECTED = 0x4E3,ERROR_OVERRIDE_NOCHANGES = 0x4E4,ERROR_BAD_USER_PROFILE = 0x4E5,ERROR_NOT_SUPPORTED_ON_SBS = 0x4E6,ERROR_SERVER_SHUTDOWN_IN_PROGRESS = 0x4E7,ERROR_HOST_DOWN = 0x4E8,ERROR_NON_ACCOUNT_SID = 0x4E9,ERROR_NON_DOMAIN_SID = 0x4EA,ERROR_APPHELP_BLOCK = 0x4EB,ERROR_ACCESS_DISABLED_BY_POLICY = 0x4EC,ERROR_REG_NAT_CONSUMPTION = 0x4ED,ERROR_CSCSHARE_OFFLINE = 0x4EE,ERROR_PKINIT_FAILURE = 0x4EF,ERROR_SMARTCARD_SUBSYSTEM_FAILURE = 0x4F0,ERROR_DOWNGRADE_DETECTED = 0x4F1,ERROR_MACHINE_LOCKED = 0x4F7,ERROR_CALLBACK_SUPPLIED_INVALID_DATA = 0x4F9,ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = 0x4FA,ERROR_DRIVER_BLOCKED = 0x4FB,ERROR_INVALID_IMPORT_OF_NON_DLL = 0x4FC,ERROR_ACCESS_DISABLED_WEBBLADE = 0x4FD,ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER = 0x4FE,ERROR_RECOVERY_FAILURE = 0x4FF,ERROR_ALREADY_FIBER = 0x500,ERROR_ALREADY_THREAD = 0x501,ERROR_STACK_BUFFER_OVERRUN = 0x502,ERROR_PARAMETER_QUOTA_EXCEEDED = 0x503,ERROR_DEBUGGER_INACTIVE = 0x504,ERROR_DELAY_LOAD_FAILED = 0x505,ERROR_VDM_DISALLOWED = 0x506,ERROR_UNIDENTIFIED_ERROR = 0x507,ERROR_INVALID_CRUNTIME_PARAMETER = 0x508,ERROR_BEYOND_VDL = 0x509,ERROR_INCOMPATIBLE_SERVICE_SID_TYPE = 0x50A,ERROR_DRIVER_PROCESS_TERMINATED = 0x50B,ERROR_IMPLEMENTATION_LIMIT = 0x50C,ERROR_PROCESS_IS_PROTECTED = 0x50D,ERROR_SERVICE_NOTIFY_CLIENT_LAGGING = 0x50E,ERROR_DISK_QUOTA_EXCEEDED = 0x50F,ERROR_CONTENT_BLOCKED = 0x510,ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE = 0x511,ERROR_APP_HANG = 0x512,ERROR_INVALID_LABEL = 0x513,ERROR_NOT_ALL_ASSIGNED = 0x514,ERROR_SOME_NOT_MAPPED = 0x515,ERROR_NO_QUOTAS_FOR_ACCOUNT = 0x516,ERROR_LOCAL_USER_SESSION_KEY = 0x517,ERROR_NULL_LM_PASSWORD = 0x518,ERROR_UNKNOWN_REVISION = 0x519,ERROR_REVISION_MISMATCH = 0x51A,ERROR_INVALID_OWNER = 0x51B,ERROR_INVALID_PRIMARY_GROUP = 0x51C,ERROR_NO_IMPERSONATION_TOKEN = 0x51D,ERROR_CANT_DISABLE_MANDATORY = 0x51E,ERROR_NO_LOGON_SERVERS = 0x51F,ERROR_NO_SUCH_LOGON_SESSION = 0x520,ERROR_NO_SUCH_PRIVILEGE = 0x521,ERROR_PRIVILEGE_NOT_HELD = 0x522,ERROR_INVALID_ACCOUNT_NAME = 0x523,ERROR_USER_EXISTS = 0x524,ERROR_NO_SUCH_USER = 0x525,ERROR_GROUP_EXISTS = 0x526,ERROR_NO_SUCH_GROUP = 0x527,ERROR_MEMBER_IN_GROUP = 0x528,ERROR_MEMBER_NOT_IN_GROUP = 0x529,ERROR_LAST_ADMIN = 0x52A,ERROR_WRONG_PASSWORD = 0x52B,ERROR_ILL_FORMED_PASSWORD = 0x52C,ERROR_PASSWORD_RESTRICTION = 0x52D,ERROR_LOGON_FAILURE = 0x52E,ERROR_ACCOUNT_RESTRICTION = 0x52F,ERROR_INVALID_LOGON_HOURS = 0x530,ERROR_INVALID_WORKSTATION = 0x531,ERROR_PASSWORD_EXPIRED = 0x532,ERROR_ACCOUNT_DISABLED = 0x533,ERROR_NONE_MAPPED = 0x534,ERROR_TOO_MANY_LUIDS_REQUESTED = 0x535,ERROR_LUIDS_EXHAUSTED = 0x536,ERROR_INVALID_SUB_AUTHORITY = 0x537,ERROR_INVALID_ACL = 0x538,ERROR_INVALID_SID = 0x539,ERROR_INVALID_SECURITY_DESCR = 0x53A,ERROR_BAD_INHERITANCE_ACL = 0x53C,ERROR_SERVER_DISABLED = 0x53D,ERROR_SERVER_NOT_DISABLED = 0x53E,ERROR_INVALID_ID_AUTHORITY = 0x53F,ERROR_ALLOTTED_SPACE_EXCEEDED = 0x540,ERROR_INVALID_GROUP_ATTRIBUTES = 0x541,ERROR_BAD_IMPERSONATION_LEVEL = 0x542,ERROR_CANT_OPEN_ANONYMOUS = 0x543,ERROR_BAD_VALIDATION_CLASS = 0x544,ERROR_BAD_TOKEN_TYPE = 0x545,ERROR_NO_SECURITY_ON_OBJECT = 0x546,ERROR_CANT_ACCESS_DOMAIN_INFO = 0x547,ERROR_INVALID_SERVER_STATE = 0x548,ERROR_INVALID_DOMAIN_STATE = 0x549,ERROR_INVALID_DOMAIN_ROLE = 0x54A,ERROR_NO_SUCH_DOMAIN = 0x54B,ERROR_DOMAIN_EXISTS = 0x54C,ERROR_DOMAIN_LIMIT_EXCEEDED = 0x54D,ERROR_INTERNAL_DB_CORRUPTION = 0x54E,ERROR_INTERNAL_ERROR = 0x54F,ERROR_GENERIC_NOT_MAPPED = 0x550,ERROR_BAD_DESCRIPTOR_FORMAT = 0x551,ERROR_NOT_LOGON_PROCESS = 0x552,ERROR_LOGON_SESSION_EXISTS = 0x553,ERROR_NO_SUCH_PACKAGE = 0x554,ERROR_BAD_LOGON_SESSION_STATE = 0x555,ERROR_LOGON_SESSION_COLLISION = 0x556,ERROR_INVALID_LOGON_TYPE = 0x557,ERROR_CANNOT_IMPERSONATE = 0x558,ERROR_RXACT_INVALID_STATE = 0x559,ERROR_RXACT_COMMIT_FAILURE = 0x55A,ERROR_SPECIAL_ACCOUNT = 0x55B,ERROR_SPECIAL_GROUP = 0x55C,ERROR_SPECIAL_USER = 0x55D,ERROR_MEMBERS_PRIMARY_GROUP = 0x55E,ERROR_TOKEN_ALREADY_IN_USE = 0x55F,ERROR_NO_SUCH_ALIAS = 0x560,ERROR_MEMBER_NOT_IN_ALIAS = 0x561,ERROR_MEMBER_IN_ALIAS = 0x562,ERROR_ALIAS_EXISTS = 0x563,ERROR_LOGON_NOT_GRANTED = 0x564,ERROR_TOO_MANY_SECRETS = 0x565,ERROR_SECRET_TOO_LONG = 0x566,ERROR_INTERNAL_DB_ERROR = 0x567,ERROR_TOO_MANY_CONTEXT_IDS = 0x568,ERROR_LOGON_TYPE_NOT_GRANTED = 0x569,ERROR_NT_CROSS_ENCRYPTION_REQUIRED = 0x56A,ERROR_NO_SUCH_MEMBER = 0x56B,ERROR_INVALID_MEMBER = 0x56C,ERROR_TOO_MANY_SIDS = 0x56D,ERROR_LM_CROSS_ENCRYPTION_REQUIRED = 0x56E,ERROR_NO_INHERITANCE = 0x56F,ERROR_FILE_CORRUPT = 0x570,ERROR_DISK_CORRUPT = 0x571,ERROR_NO_USER_SESSION_KEY = 0x572,ERROR_LICENSE_QUOTA_EXCEEDED = 0x573,ERROR_WRONG_TARGET_NAME = 0x574,ERROR_MUTUAL_AUTH_FAILED = 0x575,ERROR_TIME_SKEW = 0x576,ERROR_CURRENT_DOMAIN_NOT_ALLOWED = 0x577,ERROR_INVALID_WINDOW_HANDLE = 0x578,ERROR_INVALID_MENU_HANDLE = 0x579,ERROR_INVALID_CURSOR_HANDLE = 0x57A,ERROR_INVALID_ACCEL_HANDLE = 0x57B,ERROR_INVALID_HOOK_HANDLE = 0x57C,ERROR_INVALID_DWP_HANDLE = 0x57D,ERROR_TLW_WITH_WSCHILD = 0x57E,ERROR_CANNOT_FIND_WND_CLASS = 0x57F,ERROR_WINDOW_OF_OTHER_THREAD = 0x580,ERROR_HOTKEY_ALREADY_REGISTERED = 0x581,ERROR_CLASS_ALREADY_EXISTS = 0x582,ERROR_CLASS_DOES_NOT_EXIST = 0x583,ERROR_CLASS_HAS_WINDOWS = 0x584,ERROR_INVALID_INDEX = 0x585,ERROR_INVALID_ICON_HANDLE = 0x586,ERROR_PRIVATE_DIALOG_INDEX = 0x587,ERROR_LISTBOX_ID_NOT_FOUND = 0x588,ERROR_NO_WILDCARD_CHARACTERS = 0x589,ERROR_CLIPBOARD_NOT_OPEN = 0x58A,ERROR_HOTKEY_NOT_REGISTERED = 0x58B,ERROR_WINDOW_NOT_DIALOG = 0x58C,ERROR_CONTROL_ID_NOT_FOUND = 0x58D,ERROR_INVALID_COMBOBOX_MESSAGE = 0x58E,ERROR_WINDOW_NOT_COMBOBOX = 0x58F,ERROR_INVALID_EDIT_HEIGHT = 0x590,ERROR_DC_NOT_FOUND = 0x591,ERROR_INVALID_HOOK_FILTER = 0x592,ERROR_INVALID_FILTER_PROC = 0x593,ERROR_HOOK_NEEDS_HMOD = 0x594,ERROR_GLOBAL_ONLY_HOOK = 0x595,ERROR_JOURNAL_HOOK_SET = 0x596,ERROR_HOOK_NOT_INSTALLED = 0x597,ERROR_INVALID_LB_MESSAGE = 0x598,ERROR_SETCOUNT_ON_BAD_LB = 0x599,ERROR_LB_WITHOUT_TABSTOPS = 0x59A,ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = 0x59B,ERROR_CHILD_WINDOW_MENU = 0x59C,ERROR_NO_SYSTEM_MENU = 0x59D,ERROR_INVALID_MSGBOX_STYLE = 0x59E,ERROR_INVALID_SPI_VALUE = 0x59F,ERROR_SCREEN_ALREADY_LOCKED = 0x5A0,ERROR_HWNDS_HAVE_DIFF_PARENT = 0x5A1,ERROR_NOT_CHILD_WINDOW = 0x5A2,ERROR_INVALID_GW_COMMAND = 0x5A3,ERROR_INVALID_THREAD_ID = 0x5A4,ERROR_NON_MDICHILD_WINDOW = 0x5A5,ERROR_POPUP_ALREADY_ACTIVE = 0x5A6,ERROR_NO_SCROLLBARS = 0x5A7,ERROR_INVALID_SCROLLBAR_RANGE = 0x5A8,ERROR_INVALID_SHOWWIN_COMMAND = 0x5A9,ERROR_NO_SYSTEM_RESOURCES = 0x5AA,ERROR_NONPAGED_SYSTEM_RESOURCES = 0x5AB,ERROR_PAGED_SYSTEM_RESOURCES = 0x5AC,ERROR_WORKING_SET_QUOTA = 0x5AD,ERROR_PAGEFILE_QUOTA = 0x5AE,ERROR_COMMITMENT_LIMIT = 0x5AF,ERROR_MENU_ITEM_NOT_FOUND = 0x5B0,ERROR_INVALID_KEYBOARD_HANDLE = 0x5B1,ERROR_HOOK_TYPE_NOT_ALLOWED = 0x5B2,ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION = 0x5B3,ERROR_TIMEOUT = 0x5B4,ERROR_INVALID_MONITOR_HANDLE = 0x5B5,ERROR_INCORRECT_SIZE = 0x5B6,ERROR_SYMLINK_CLASS_DISABLED = 0x5B7,ERROR_SYMLINK_NOT_SUPPORTED = 0x5B8,ERROR_XML_PARSE_ERROR = 0x5B9,ERROR_XMLDSIG_ERROR = 0x5BA,ERROR_RESTART_APPLICATION = 0x5BB,ERROR_WRONG_COMPARTMENT = 0x5BC,ERROR_AUTHIP_FAILURE = 0x5BD,ERROR_NO_NVRAM_RESOURCES = 0x5BE,ERROR_NOT_GUI_PROCESS = 0x5BF,ERROR_EVENTLOG_FILE_CORRUPT = 0x5DC,ERROR_EVENTLOG_CANT_START = 0x5DD,ERROR_LOG_FILE_FULL = 0x5DE,ERROR_EVENTLOG_FILE_CHANGED = 0x5DF,ERROR_INVALID_TASK_NAME = 0x60E,ERROR_INVALID_TASK_INDEX = 0x60F,ERROR_THREAD_ALREADY_IN_TASK = 0x610,ERROR_INSTALL_SERVICE_FAILURE = 0x641,ERROR_INSTALL_USEREXIT = 0x642,ERROR_INSTALL_FAILURE = 0x643,ERROR_INSTALL_SUSPEND = 0x644,ERROR_UNKNOWN_PRODUCT = 0x645,ERROR_UNKNOWN_FEATURE = 0x646,ERROR_UNKNOWN_COMPONENT = 0x647,ERROR_UNKNOWN_PROPERTY = 0x648,ERROR_INVALID_HANDLE_STATE = 0x649,ERROR_BAD_CONFIGURATION = 0x64A,ERROR_INDEX_ABSENT = 0x64B,ERROR_INSTALL_SOURCE_ABSENT = 0x64C,ERROR_INSTALL_PACKAGE_VERSION = 0x64D,ERROR_PRODUCT_UNINSTALLED = 0x64E,ERROR_BAD_QUERY_SYNTAX = 0x64F,ERROR_INVALID_FIELD = 0x650,ERROR_DEVICE_REMOVED = 0x651,ERROR_INSTALL_ALREADY_RUNNING = 0x652,ERROR_INSTALL_PACKAGE_OPEN_FAILED = 0x653,ERROR_INSTALL_PACKAGE_INVALID = 0x654,ERROR_INSTALL_UI_FAILURE = 0x655,ERROR_INSTALL_LOG_FAILURE = 0x656,ERROR_INSTALL_LANGUAGE_UNSUPPORTED = 0x657,ERROR_INSTALL_TRANSFORM_FAILURE = 0x658,ERROR_INSTALL_PACKAGE_REJECTED = 0x659,ERROR_FUNCTION_NOT_CALLED = 0x65A,ERROR_FUNCTION_FAILED = 0x65B,ERROR_INVALID_TABLE = 0x65C,ERROR_DATATYPE_MISMATCH = 0x65D,ERROR_UNSUPPORTED_TYPE = 0x65E,ERROR_CREATE_FAILED = 0x65F,ERROR_INSTALL_TEMP_UNWRITABLE = 0x660,ERROR_INSTALL_PLATFORM_UNSUPPORTED = 0x661,ERROR_INSTALL_NOTUSED = 0x662,ERROR_PATCH_PACKAGE_OPEN_FAILED = 0x663,ERROR_PATCH_PACKAGE_INVALID = 0x664,ERROR_PATCH_PACKAGE_UNSUPPORTED = 0x665,ERROR_PRODUCT_VERSION = 0x666,ERROR_INVALID_COMMAND_LINE = 0x667,ERROR_INSTALL_REMOTE_DISALLOWED = 0x668,ERROR_SUCCESS_REBOOT_INITIATED = 0x669,ERROR_PATCH_TARGET_NOT_FOUND = 0x66A,ERROR_PATCH_PACKAGE_REJECTED = 0x66B,ERROR_INSTALL_TRANSFORM_REJECTED = 0x66C,ERROR_INSTALL_REMOTE_PROHIBITED = 0x66D,ERROR_PATCH_REMOVAL_UNSUPPORTED = 0x66E,ERROR_UNKNOWN_PATCH = 0x66F,ERROR_PATCH_NO_SEQUENCE = 0x670,ERROR_PATCH_REMOVAL_DISALLOWED = 0x671,ERROR_INVALID_PATCH_XML = 0x672,ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT = 0x673,ERROR_INSTALL_SERVICE_SAFEBOOT = 0x674,ERROR_FAIL_FAST_EXCEPTION = 0x675,ERROR_INSTALL_REJECTED = 0x676,RPC_S_INVALID_STRING_BINDING = 0x6A4,RPC_S_WRONG_KIND_OF_BINDING = 0x6A5,RPC_S_INVALID_BINDING = 0x6A6,RPC_S_PROTSEQ_NOT_SUPPORTED = 0x6A7,RPC_S_INVALID_RPC_PROTSEQ = 0x6A8,RPC_S_INVALID_STRING_UUID = 0x6A9,RPC_S_INVALID_ENDPOINT_FORMAT = 0x6AA,RPC_S_INVALID_NET_ADDR = 0x6AB,RPC_S_NO_ENDPOINT_FOUND = 0x6AC,RPC_S_INVALID_TIMEOUT = 0x6AD,RPC_S_OBJECT_NOT_FOUND = 0x6AE,RPC_S_ALREADY_REGISTERED = 0x6AF,RPC_S_TYPE_ALREADY_REGISTERED = 0x6B0,RPC_S_ALREADY_LISTENING = 0x6B1,RPC_S_NO_PROTSEQS_REGISTERED = 0x6B2,RPC_S_NOT_LISTENING = 0x6B3,RPC_S_UNKNOWN_MGR_TYPE = 0x6B4,RPC_S_UNKNOWN_IF = 0x6B5,RPC_S_NO_BINDINGS = 0x6B6,RPC_S_NO_PROTSEQS = 0x6B7,RPC_S_CANT_CREATE_ENDPOINT = 0x6B8,RPC_S_OUT_OF_RESOURCES = 0x6B9,RPC_S_SERVER_UNAVAILABLE = 0x6BA,RPC_S_SERVER_TOO_BUSY = 0x6BB,RPC_S_INVALID_NETWORK_OPTIONS = 0x6BC,RPC_S_NO_CALL_ACTIVE = 0x6BD,RPC_S_CALL_FAILED = 0x6BE,RPC_S_CALL_FAILED_DNE = 0x6BF,RPC_S_PROTOCOL_ERROR = 0x6C0,RPC_S_PROXY_ACCESS_DENIED = 0x6C1,RPC_S_UNSUPPORTED_TRANS_SYN = 0x6C2,RPC_S_UNSUPPORTED_TYPE = 0x6C4,RPC_S_INVALID_TAG = 0x6C5,RPC_S_INVALID_BOUND = 0x6C6,RPC_S_NO_ENTRY_NAME = 0x6C7,RPC_S_INVALID_NAME_SYNTAX = 0x6C8,RPC_S_UNSUPPORTED_NAME_SYNTAX = 0x6C9,RPC_S_UUID_NO_ADDRESS = 0x6CB,RPC_S_DUPLICATE_ENDPOINT = 0x6CC,RPC_S_UNKNOWN_AUTHN_TYPE = 0x6CD,RPC_S_MAX_CALLS_TOO_SMALL = 0x6CE,RPC_S_STRING_TOO_LONG = 0x6CF,RPC_S_PROTSEQ_NOT_FOUND = 0x6D0,RPC_S_PROCNUM_OUT_OF_RANGE = 0x6D1,RPC_S_BINDING_HAS_NO_AUTH = 0x6D2,RPC_S_UNKNOWN_AUTHN_SERVICE = 0x6D3,RPC_S_UNKNOWN_AUTHN_LEVEL = 0x6D4,RPC_S_INVALID_AUTH_IDENTITY = 0x6D5,RPC_S_UNKNOWN_AUTHZ_SERVICE = 0x6D6,EPT_S_INVALID_ENTRY = 0x6D7,EPT_S_CANT_PERFORM_OP = 0x6D8,EPT_S_NOT_REGISTERED = 0x6D9,RPC_S_NOTHING_TO_EXPORT = 0x6DA,RPC_S_INCOMPLETE_NAME = 0x6DB,RPC_S_INVALID_VERS_OPTION = 0x6DC,RPC_S_NO_MORE_MEMBERS = 0x6DD,RPC_S_NOT_ALL_OBJS_UNEXPORTED = 0x6DE,RPC_S_INTERFACE_NOT_FOUND = 0x6DF,RPC_S_ENTRY_ALREADY_EXISTS = 0x6E0,RPC_S_ENTRY_NOT_FOUND = 0x6E1,RPC_S_NAME_SERVICE_UNAVAILABLE = 0x6E2,RPC_S_INVALID_NAF_ID = 0x6E3,RPC_S_CANNOT_SUPPORT = 0x6E4,RPC_S_NO_CONTEXT_AVAILABLE = 0x6E5,RPC_S_INTERNAL_ERROR = 0x6E6,RPC_S_ZERO_DIVIDE = 0x6E7,RPC_S_ADDRESS_ERROR = 0x6E8,RPC_S_FP_DIV_ZERO = 0x6E9,RPC_S_FP_UNDERFLOW = 0x6EA,RPC_S_FP_OVERFLOW = 0x6EB,RPC_X_NO_MORE_ENTRIES = 0x6EC,RPC_X_SS_CHAR_TRANS_OPEN_FAIL = 0x6ED,RPC_X_SS_CHAR_TRANS_SHORT_FILE = 0x6EE,RPC_X_SS_IN_NULL_CONTEXT = 0x6EF,RPC_X_SS_CONTEXT_DAMAGED = 0x6F1,RPC_X_SS_HANDLES_MISMATCH = 0x6F2,RPC_X_SS_CANNOT_GET_CALL_HANDLE = 0x6F3,RPC_X_NULL_REF_POINTER = 0x6F4,RPC_X_ENUM_VALUE_OUT_OF_RANGE = 0x6F5,RPC_X_BYTE_COUNT_TOO_SMALL = 0x6F6,RPC_X_BAD_STUB_DATA = 0x6F7,ERROR_INVALID_USER_BUFFER = 0x6F8,ERROR_UNRECOGNIZED_MEDIA = 0x6F9,ERROR_NO_TRUST_LSA_SECRET = 0x6FA,ERROR_NO_TRUST_SAM_ACCOUNT = 0x6FB,ERROR_TRUSTED_DOMAIN_FAILURE = 0x6FC,ERROR_TRUSTED_RELATIONSHIP_FAILURE = 0x6FD,ERROR_TRUST_FAILURE = 0x6FE,RPC_S_CALL_IN_PROGRESS = 0x6FF,ERROR_NETLOGON_NOT_STARTED = 0x700,ERROR_ACCOUNT_EXPIRED = 0x701,ERROR_REDIRECTOR_HAS_OPEN_HANDLES = 0x702,ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = 0x703,ERROR_UNKNOWN_PORT = 0x704,ERROR_UNKNOWN_PRINTER_DRIVER = 0x705,ERROR_UNKNOWN_PRINTPROCESSOR = 0x706,ERROR_INVALID_SEPARATOR_FILE = 0x707,ERROR_INVALID_PRIORITY = 0x708,ERROR_INVALID_PRINTER_NAME = 0x709,ERROR_PRINTER_ALREADY_EXISTS = 0x70A,ERROR_INVALID_PRINTER_COMMAND = 0x70B,ERROR_INVALID_DATATYPE = 0x70C,ERROR_INVALID_ENVIRONMENT = 0x70D,RPC_S_NO_MORE_BINDINGS = 0x70E,ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 0x70F,ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 0x710,ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = 0x711,ERROR_DOMAIN_TRUST_INCONSISTENT = 0x712,ERROR_SERVER_HAS_OPEN_HANDLES = 0x713,ERROR_RESOURCE_DATA_NOT_FOUND = 0x714,ERROR_RESOURCE_TYPE_NOT_FOUND = 0x715,ERROR_RESOURCE_NAME_NOT_FOUND = 0x716,ERROR_RESOURCE_LANG_NOT_FOUND = 0x717,ERROR_NOT_ENOUGH_QUOTA = 0x718,RPC_S_NO_INTERFACES = 0x719,RPC_S_CALL_CANCELLED = 0x71A,RPC_S_BINDING_INCOMPLETE = 0x71B,RPC_S_COMM_FAILURE = 0x71C,RPC_S_UNSUPPORTED_AUTHN_LEVEL = 0x71D,RPC_S_NO_PRINC_NAME = 0x71E,RPC_S_NOT_RPC_ERROR = 0x71F,RPC_S_UUID_LOCAL_ONLY = 0x720,RPC_S_SEC_PKG_ERROR = 0x721,RPC_S_NOT_CANCELLED = 0x722,RPC_X_INVALID_ES_ACTION = 0x723,RPC_X_WRONG_ES_VERSION = 0x724,RPC_X_WRONG_STUB_VERSION = 0x725,RPC_X_INVALID_PIPE_OBJECT = 0x726,RPC_X_WRONG_PIPE_ORDER = 0x727,RPC_X_WRONG_PIPE_VERSION = 0x728,RPC_S_COOKIE_AUTH_FAILED = 0x729,RPC_S_GROUP_MEMBER_NOT_FOUND = 0x76A,EPT_S_CANT_CREATE = 0x76B,RPC_S_INVALID_OBJECT = 0x76C,ERROR_INVALID_TIME = 0x76D,ERROR_INVALID_FORM_NAME = 0x76E,ERROR_INVALID_FORM_SIZE = 0x76F,ERROR_ALREADY_WAITING = 0x770,ERROR_PRINTER_DELETED = 0x771,ERROR_INVALID_PRINTER_STATE = 0x772,ERROR_PASSWORD_MUST_CHANGE = 0x773,ERROR_DOMAIN_CONTROLLER_NOT_FOUND = 0x774,ERROR_ACCOUNT_LOCKED_OUT = 0x775,OR_INVALID_OXID = 0x776,OR_INVALID_OID = 0x777,OR_INVALID_SET = 0x778,RPC_S_SEND_INCOMPLETE = 0x779,RPC_S_INVALID_ASYNC_HANDLE = 0x77A,RPC_S_INVALID_ASYNC_CALL = 0x77B,RPC_X_PIPE_CLOSED = 0x77C,RPC_X_PIPE_DISCIPLINE_ERROR = 0x77D,RPC_X_PIPE_EMPTY = 0x77E,ERROR_NO_SITENAME = 0x77F,ERROR_CANT_ACCESS_FILE = 0x780,ERROR_CANT_RESOLVE_FILENAME = 0x781,RPC_S_ENTRY_TYPE_MISMATCH = 0x782,RPC_S_NOT_ALL_OBJS_EXPORTED = 0x783,RPC_S_INTERFACE_NOT_EXPORTED = 0x784,RPC_S_PROFILE_NOT_ADDED = 0x785,RPC_S_PRF_ELT_NOT_ADDED = 0x786,RPC_S_PRF_ELT_NOT_REMOVED = 0x787,RPC_S_GRP_ELT_NOT_ADDED = 0x788,RPC_S_GRP_ELT_NOT_REMOVED = 0x789,ERROR_KM_DRIVER_BLOCKED = 0x78A,ERROR_CONTEXT_EXPIRED = 0x78B,ERROR_PER_USER_TRUST_QUOTA_EXCEEDED = 0x78C,ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED = 0x78D,ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED = 0x78E,ERROR_AUTHENTICATION_FIREWALL_FAILED = 0x78F,ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED = 0x790,ERROR_NTLM_BLOCKED = 0x791,ERROR_PASSWORD_CHANGE_REQUIRED = 0x792,ERROR_INVALID_PIXEL_FORMAT = 0x7D0,ERROR_BAD_DRIVER = 0x7D1,ERROR_INVALID_WINDOW_STYLE = 0x7D2,ERROR_METAFILE_NOT_SUPPORTED = 0x7D3,ERROR_TRANSFORM_NOT_SUPPORTED = 0x7D4,ERROR_CLIPPING_NOT_SUPPORTED = 0x7D5,ERROR_INVALID_CMM = 0x7DA,ERROR_INVALID_PROFILE = 0x7DB,ERROR_TAG_NOT_FOUND = 0x7DC,ERROR_TAG_NOT_PRESENT = 0x7DD,ERROR_DUPLICATE_TAG = 0x7DE,ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE = 0x7DF,ERROR_PROFILE_NOT_FOUND = 0x7E0,ERROR_INVALID_COLORSPACE = 0x7E1,ERROR_ICM_NOT_ENABLED = 0x7E2,ERROR_DELETING_ICM_XFORM = 0x7E3,ERROR_INVALID_TRANSFORM = 0x7E4,ERROR_COLORSPACE_MISMATCH = 0x7E5,ERROR_INVALID_COLORINDEX = 0x7E6,ERROR_PROFILE_DOES_NOT_MATCH_DEVICE = 0x7E7,ERROR_CONNECTED_OTHER_PASSWORD = 0x83C,ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT = 0x83D,ERROR_BAD_USERNAME = 0x89A,ERROR_NOT_CONNECTED = 0x8CA,ERROR_OPEN_FILES = 0x961,ERROR_ACTIVE_CONNECTIONS = 0x962,ERROR_DEVICE_IN_USE = 0x964,ERROR_UNKNOWN_PRINT_MONITOR = 0xBB8,ERROR_PRINTER_DRIVER_IN_USE = 0xBB9,ERROR_SPOOL_FILE_NOT_FOUND = 0xBBA,ERROR_SPL_NO_STARTDOC = 0xBBB,ERROR_SPL_NO_ADDJOB = 0xBBC,ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED = 0xBBD,ERROR_PRINT_MONITOR_ALREADY_INSTALLED = 0xBBE,ERROR_INVALID_PRINT_MONITOR = 0xBBF,ERROR_PRINT_MONITOR_IN_USE = 0xBC0,ERROR_PRINTER_HAS_JOBS_QUEUED = 0xBC1,ERROR_SUCCESS_REBOOT_REQUIRED = 0xBC2,ERROR_SUCCESS_RESTART_REQUIRED = 0xBC3,ERROR_PRINTER_NOT_FOUND = 0xBC4,ERROR_PRINTER_DRIVER_WARNED = 0xBC5,ERROR_PRINTER_DRIVER_BLOCKED = 0xBC6,ERROR_PRINTER_DRIVER_PACKAGE_IN_USE = 0xBC7,ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND = 0xBC8,ERROR_FAIL_REBOOT_REQUIRED = 0xBC9,ERROR_FAIL_REBOOT_INITIATED = 0xBCA,ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED = 0xBCB,ERROR_PRINT_JOB_RESTART_REQUIRED = 0xBCC,ERROR_INVALID_PRINTER_DRIVER_MANIFEST = 0xBCD,ERROR_PRINTER_NOT_SHAREABLE = 0xBCE,ERROR_REQUEST_PAUSED = 0xBEA,ERROR_IO_REISSUE_AS_CACHED = 0xF6E,ERROR_WINS_INTERNAL = 0xFA0,ERROR_CAN_NOT_DEL_LOCAL_WINS = 0xFA1,ERROR_STATIC_INIT = 0xFA2,ERROR_INC_BACKUP = 0xFA3,ERROR_FULL_BACKUP = 0xFA4,ERROR_REC_NON_EXISTENT = 0xFA5,ERROR_RPL_NOT_ALLOWED = 0xFA6,PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED = 0xFD2,PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO = 0xFD3,PEERDIST_ERROR_MISSING_DATA = 0xFD4,PEERDIST_ERROR_NO_MORE = 0xFD5,PEERDIST_ERROR_NOT_INITIALIZED = 0xFD6,PEERDIST_ERROR_ALREADY_INITIALIZED = 0xFD7,PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS = 0xFD8,PEERDIST_ERROR_INVALIDATED = 0xFD9,PEERDIST_ERROR_ALREADY_EXISTS = 0xFDA,PEERDIST_ERROR_OPERATION_NOTFOUND = 0xFDB,PEERDIST_ERROR_ALREADY_COMPLETED = 0xFDC,PEERDIST_ERROR_OUT_OF_BOUNDS = 0xFDD,PEERDIST_ERROR_VERSION_UNSUPPORTED = 0xFDE,PEERDIST_ERROR_INVALID_CONFIGURATION = 0xFDF,PEERDIST_ERROR_NOT_LICENSED = 0xFE0,PEERDIST_ERROR_SERVICE_UNAVAILABLE = 0xFE1,PEERDIST_ERROR_TRUST_FAILURE = 0xFE2,ERROR_DHCP_ADDRESS_CONFLICT = 0x1004,ERROR_WMI_GUID_NOT_FOUND = 0x1068,ERROR_WMI_INSTANCE_NOT_FOUND = 0x1069,ERROR_WMI_ITEMID_NOT_FOUND = 0x106A,ERROR_WMI_TRY_AGAIN = 0x106B,ERROR_WMI_DP_NOT_FOUND = 0x106C,ERROR_WMI_UNRESOLVED_INSTANCE_REF = 0x106D,ERROR_WMI_ALREADY_ENABLED = 0x106E,ERROR_WMI_GUID_DISCONNECTED = 0x106F,ERROR_WMI_SERVER_UNAVAILABLE = 0x1070,ERROR_WMI_DP_FAILED = 0x1071,ERROR_WMI_INVALID_MOF = 0x1072,ERROR_WMI_INVALID_REGINFO = 0x1073,ERROR_WMI_ALREADY_DISABLED = 0x1074,ERROR_WMI_READ_ONLY = 0x1075,ERROR_WMI_SET_FAILURE = 0x1076,ERROR_NOT_APPCONTAINER = 0x109A,ERROR_APPCONTAINER_REQUIRED = 0x109B,ERROR_NOT_SUPPORTED_IN_APPCONTAINER = 0x109C,ERROR_INVALID_PACKAGE_SID_LENGTH = 0x109D,ERROR_INVALID_MEDIA = 0x10CC,ERROR_INVALID_LIBRARY = 0x10CD,ERROR_INVALID_MEDIA_POOL = 0x10CE,ERROR_DRIVE_MEDIA_MISMATCH = 0x10CF,ERROR_MEDIA_OFFLINE = 0x10D0,ERROR_LIBRARY_OFFLINE = 0x10D1,ERROR_EMPTY = 0x10D2,ERROR_NOT_EMPTY = 0x10D3,ERROR_MEDIA_UNAVAILABLE = 0x10D4,ERROR_RESOURCE_DISABLED = 0x10D5,ERROR_INVALID_CLEANER = 0x10D6,ERROR_UNABLE_TO_CLEAN = 0x10D7,ERROR_OBJECT_NOT_FOUND = 0x10D8,ERROR_DATABASE_FAILURE = 0x10D9,ERROR_DATABASE_FULL = 0x10DA,ERROR_MEDIA_INCOMPATIBLE = 0x10DB,ERROR_RESOURCE_NOT_PRESENT = 0x10DC,ERROR_INVALID_OPERATION = 0x10DD,ERROR_MEDIA_NOT_AVAILABLE = 0x10DE,ERROR_DEVICE_NOT_AVAILABLE = 0x10DF,ERROR_REQUEST_REFUSED = 0x10E0,ERROR_INVALID_DRIVE_OBJECT = 0x10E1,ERROR_LIBRARY_FULL = 0x10E2,ERROR_MEDIUM_NOT_ACCESSIBLE = 0x10E3,ERROR_UNABLE_TO_LOAD_MEDIUM = 0x10E4,ERROR_UNABLE_TO_INVENTORY_DRIVE = 0x10E5,ERROR_UNABLE_TO_INVENTORY_SLOT = 0x10E6,ERROR_UNABLE_TO_INVENTORY_TRANSPORT = 0x10E7,ERROR_TRANSPORT_FULL = 0x10E8,ERROR_CONTROLLING_IEPORT = 0x10E9,ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA = 0x10EA,ERROR_CLEANER_SLOT_SET = 0x10EB,ERROR_CLEANER_SLOT_NOT_SET = 0x10EC,ERROR_CLEANER_CARTRIDGE_SPENT = 0x10ED,ERROR_UNEXPECTED_OMID = 0x10EE,ERROR_CANT_DELETE_LAST_ITEM = 0x10EF,ERROR_MESSAGE_EXCEEDS_MAX_SIZE = 0x10F0,ERROR_VOLUME_CONTAINS_SYS_FILES = 0x10F1,ERROR_INDIGENOUS_TYPE = 0x10F2,ERROR_NO_SUPPORTING_DRIVES = 0x10F3,ERROR_CLEANER_CARTRIDGE_INSTALLED = 0x10F4,ERROR_IEPORT_FULL = 0x10F5,ERROR_FILE_OFFLINE = 0x10FE,ERROR_REMOTE_STORAGE_NOT_ACTIVE = 0x10FF,ERROR_REMOTE_STORAGE_MEDIA_ERROR = 0x1100,ERROR_NOT_A_REPARSE_POINT = 0x1126,ERROR_REPARSE_ATTRIBUTE_CONFLICT = 0x1127,ERROR_INVALID_REPARSE_DATA = 0x1128,ERROR_REPARSE_TAG_INVALID = 0x1129,ERROR_REPARSE_TAG_MISMATCH = 0x112A,ERROR_APP_DATA_NOT_FOUND = 0x1130,ERROR_APP_DATA_EXPIRED = 0x1131,ERROR_APP_DATA_CORRUPT = 0x1132,ERROR_APP_DATA_LIMIT_EXCEEDED = 0x1133,ERROR_APP_DATA_REBOOT_REQUIRED = 0x1134,ERROR_SECUREBOOT_ROLLBACK_DETECTED = 0x1144,ERROR_SECUREBOOT_POLICY_VIOLATION = 0x1145,ERROR_SECUREBOOT_INVALID_POLICY = 0x1146,ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND = 0x1147,ERROR_SECUREBOOT_POLICY_NOT_SIGNED = 0x1148,ERROR_SECUREBOOT_NOT_ENABLED = 0x1149,ERROR_SECUREBOOT_FILE_REPLACED = 0x114A,ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED = 0x1158,ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED = 0x1159,ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED = 0x115A,ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED = 0x115B,ERROR_VOLUME_NOT_SIS_ENABLED = 0x1194,ERROR_DEPENDENT_RESOURCE_EXISTS = 0x1389,ERROR_DEPENDENCY_NOT_FOUND = 0x138A,ERROR_DEPENDENCY_ALREADY_EXISTS = 0x138B,ERROR_RESOURCE_NOT_ONLINE = 0x138C,ERROR_HOST_NODE_NOT_AVAILABLE = 0x138D,ERROR_RESOURCE_NOT_AVAILABLE = 0x138E,ERROR_RESOURCE_NOT_FOUND = 0x138F,ERROR_SHUTDOWN_CLUSTER = 0x1390,ERROR_CANT_EVICT_ACTIVE_NODE = 0x1391,ERROR_OBJECT_ALREADY_EXISTS = 0x1392,ERROR_OBJECT_IN_LIST = 0x1393,ERROR_GROUP_NOT_AVAILABLE = 0x1394,ERROR_GROUP_NOT_FOUND = 0x1395,ERROR_GROUP_NOT_ONLINE = 0x1396,ERROR_HOST_NODE_NOT_RESOURCE_OWNER = 0x1397,ERROR_HOST_NODE_NOT_GROUP_OWNER = 0x1398,ERROR_RESMON_CREATE_FAILED = 0x1399,ERROR_RESMON_ONLINE_FAILED = 0x139A,ERROR_RESOURCE_ONLINE = 0x139B,ERROR_QUORUM_RESOURCE = 0x139C,ERROR_NOT_QUORUM_CAPABLE = 0x139D,ERROR_CLUSTER_SHUTTING_DOWN = 0x139E,ERROR_INVALID_STATE = 0x139F,ERROR_RESOURCE_PROPERTIES_STORED = 0x13A0,ERROR_NOT_QUORUM_CLASS = 0x13A1,ERROR_CORE_RESOURCE = 0x13A2,ERROR_QUORUM_RESOURCE_ONLINE_FAILED = 0x13A3,ERROR_QUORUMLOG_OPEN_FAILED = 0x13A4,ERROR_CLUSTERLOG_CORRUPT = 0x13A5,ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE = 0x13A6,ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE = 0x13A7,ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND = 0x13A8,ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE = 0x13A9,ERROR_QUORUM_OWNER_ALIVE = 0x13AA,ERROR_NETWORK_NOT_AVAILABLE = 0x13AB,ERROR_NODE_NOT_AVAILABLE = 0x13AC,ERROR_ALL_NODES_NOT_AVAILABLE = 0x13AD,ERROR_RESOURCE_FAILED = 0x13AE,ERROR_CLUSTER_INVALID_NODE = 0x13AF,ERROR_CLUSTER_NODE_EXISTS = 0x13B0,ERROR_CLUSTER_JOIN_IN_PROGRESS = 0x13B1,ERROR_CLUSTER_NODE_NOT_FOUND = 0x13B2,ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND = 0x13B3,ERROR_CLUSTER_NETWORK_EXISTS = 0x13B4,ERROR_CLUSTER_NETWORK_NOT_FOUND = 0x13B5,ERROR_CLUSTER_NETINTERFACE_EXISTS = 0x13B6,ERROR_CLUSTER_NETINTERFACE_NOT_FOUND = 0x13B7,ERROR_CLUSTER_INVALID_REQUEST = 0x13B8,ERROR_CLUSTER_INVALID_NETWORK_PROVIDER = 0x13B9,ERROR_CLUSTER_NODE_DOWN = 0x13BA,ERROR_CLUSTER_NODE_UNREACHABLE = 0x13BB,ERROR_CLUSTER_NODE_NOT_MEMBER = 0x13BC,ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS = 0x13BD,ERROR_CLUSTER_INVALID_NETWORK = 0x13BE,ERROR_CLUSTER_NODE_UP = 0x13C0,ERROR_CLUSTER_IPADDR_IN_USE = 0x13C1,ERROR_CLUSTER_NODE_NOT_PAUSED = 0x13C2,ERROR_CLUSTER_NO_SECURITY_CONTEXT = 0x13C3,ERROR_CLUSTER_NETWORK_NOT_INTERNAL = 0x13C4,ERROR_CLUSTER_NODE_ALREADY_UP = 0x13C5,ERROR_CLUSTER_NODE_ALREADY_DOWN = 0x13C6,ERROR_CLUSTER_NETWORK_ALREADY_ONLINE = 0x13C7,ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE = 0x13C8,ERROR_CLUSTER_NODE_ALREADY_MEMBER = 0x13C9,ERROR_CLUSTER_LAST_INTERNAL_NETWORK = 0x13CA,ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS = 0x13CB,ERROR_INVALID_OPERATION_ON_QUORUM = 0x13CC,ERROR_DEPENDENCY_NOT_ALLOWED = 0x13CD,ERROR_CLUSTER_NODE_PAUSED = 0x13CE,ERROR_NODE_CANT_HOST_RESOURCE = 0x13CF,ERROR_CLUSTER_NODE_NOT_READY = 0x13D0,ERROR_CLUSTER_NODE_SHUTTING_DOWN = 0x13D1,ERROR_CLUSTER_JOIN_ABORTED = 0x13D2,ERROR_CLUSTER_INCOMPATIBLE_VERSIONS = 0x13D3,ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED = 0x13D4,ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED = 0x13D5,ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND = 0x13D6,ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED = 0x13D7,ERROR_CLUSTER_RESNAME_NOT_FOUND = 0x13D8,ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED = 0x13D9,ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST = 0x13DA,ERROR_CLUSTER_DATABASE_SEQMISMATCH = 0x13DB,ERROR_RESMON_INVALID_STATE = 0x13DC,ERROR_CLUSTER_GUM_NOT_LOCKER = 0x13DD,ERROR_QUORUM_DISK_NOT_FOUND = 0x13DE,ERROR_DATABASE_BACKUP_CORRUPT = 0x13DF,ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT = 0x13E0,ERROR_RESOURCE_PROPERTY_UNCHANGEABLE = 0x13E1,ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE = 0x1702,ERROR_CLUSTER_QUORUMLOG_NOT_FOUND = 0x1703,ERROR_CLUSTER_MEMBERSHIP_HALT = 0x1704,ERROR_CLUSTER_INSTANCE_ID_MISMATCH = 0x1705,ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP = 0x1706,ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH = 0x1707,ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP = 0x1708,ERROR_CLUSTER_PARAMETER_MISMATCH = 0x1709,ERROR_NODE_CANNOT_BE_CLUSTERED = 0x170A,ERROR_CLUSTER_WRONG_OS_VERSION = 0x170B,ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME = 0x170C,ERROR_CLUSCFG_ALREADY_COMMITTED = 0x170D,ERROR_CLUSCFG_ROLLBACK_FAILED = 0x170E,ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT = 0x170F,ERROR_CLUSTER_OLD_VERSION = 0x1710,ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME = 0x1711,ERROR_CLUSTER_NO_NET_ADAPTERS = 0x1712,ERROR_CLUSTER_POISONED = 0x1713,ERROR_CLUSTER_GROUP_MOVING = 0x1714,ERROR_CLUSTER_RESOURCE_TYPE_BUSY = 0x1715,ERROR_RESOURCE_CALL_TIMED_OUT = 0x1716,ERROR_INVALID_CLUSTER_IPV6_ADDRESS = 0x1717,ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION = 0x1718,ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS = 0x1719,ERROR_CLUSTER_PARTIAL_SEND = 0x171A,ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION = 0x171B,ERROR_CLUSTER_INVALID_STRING_TERMINATION = 0x171C,ERROR_CLUSTER_INVALID_STRING_FORMAT = 0x171D,ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS = 0x171E,ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS = 0x171F,ERROR_CLUSTER_NULL_DATA = 0x1720,ERROR_CLUSTER_PARTIAL_READ = 0x1721,ERROR_CLUSTER_PARTIAL_WRITE = 0x1722,ERROR_CLUSTER_CANT_DESERIALIZE_DATA = 0x1723,ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT = 0x1724,ERROR_CLUSTER_NO_QUORUM = 0x1725,ERROR_CLUSTER_INVALID_IPV6_NETWORK = 0x1726,ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK = 0x1727,ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP = 0x1728,ERROR_DEPENDENCY_TREE_TOO_COMPLEX = 0x1729,ERROR_EXCEPTION_IN_RESOURCE_CALL = 0x172A,ERROR_CLUSTER_RHS_FAILED_INITIALIZATION = 0x172B,ERROR_CLUSTER_NOT_INSTALLED = 0x172C,ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE = 0x172D,ERROR_CLUSTER_MAX_NODES_IN_CLUSTER = 0x172E,ERROR_CLUSTER_TOO_MANY_NODES = 0x172F,ERROR_CLUSTER_OBJECT_ALREADY_USED = 0x1730,ERROR_NONCORE_GROUPS_FOUND = 0x1731,ERROR_FILE_SHARE_RESOURCE_CONFLICT = 0x1732,ERROR_CLUSTER_EVICT_INVALID_REQUEST = 0x1733,ERROR_CLUSTER_SINGLETON_RESOURCE = 0x1734,ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE = 0x1735,ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED = 0x1736,ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR = 0x1737,ERROR_CLUSTER_GROUP_BUSY = 0x1738,ERROR_CLUSTER_NOT_SHARED_VOLUME = 0x1739,ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR = 0x173A,ERROR_CLUSTER_SHARED_VOLUMES_IN_USE = 0x173B,ERROR_CLUSTER_USE_SHARED_VOLUMES_API = 0x173C,ERROR_CLUSTER_BACKUP_IN_PROGRESS = 0x173D,ERROR_NON_CSV_PATH = 0x173E,ERROR_CSV_VOLUME_NOT_LOCAL = 0x173F,ERROR_CLUSTER_WATCHDOG_TERMINATING = 0x1740,ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES = 0x1741,ERROR_CLUSTER_INVALID_NODE_WEIGHT = 0x1742,ERROR_CLUSTER_RESOURCE_VETOED_CALL = 0x1743,ERROR_RESMON_SYSTEM_RESOURCES_LACKING = 0x1744,ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION = 0x1745,ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE = 0x1746,ERROR_CLUSTER_GROUP_QUEUED = 0x1747,ERROR_CLUSTER_RESOURCE_LOCKED_STATUS = 0x1748,ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED = 0x1749,ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS = 0x174A,ERROR_CLUSTER_DISK_NOT_CONNECTED = 0x174B,ERROR_DISK_NOT_CSV_CAPABLE = 0x174C,ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE = 0x174D,ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED = 0x174E,ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED = 0x174F,ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES = 0x1750,ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES = 0x1751,ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE = 0x1752,ERROR_CLUSTER_AFFINITY_CONFLICT = 0x1753,ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE = 0x1754,ERROR_ENCRYPTION_FAILED = 0x1770,ERROR_DECRYPTION_FAILED = 0x1771,ERROR_FILE_ENCRYPTED = 0x1772,ERROR_NO_RECOVERY_POLICY = 0x1773,ERROR_NO_EFS = 0x1774,ERROR_WRONG_EFS = 0x1775,ERROR_NO_USER_KEYS = 0x1776,ERROR_FILE_NOT_ENCRYPTED = 0x1777,ERROR_NOT_EXPORT_FORMAT = 0x1778,ERROR_FILE_READ_ONLY = 0x1779,ERROR_DIR_EFS_DISALLOWED = 0x177A,ERROR_EFS_SERVER_NOT_TRUSTED = 0x177B,ERROR_BAD_RECOVERY_POLICY = 0x177C,ERROR_EFS_ALG_BLOB_TOO_BIG = 0x177D,ERROR_VOLUME_NOT_SUPPORT_EFS = 0x177E,ERROR_EFS_DISABLED = 0x177F,ERROR_EFS_VERSION_NOT_SUPPORT = 0x1780,ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE = 0x1781,ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER = 0x1782,ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE = 0x1783,ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE = 0x1784,ERROR_CS_ENCRYPTION_FILE_NOT_CSE = 0x1785,ERROR_ENCRYPTION_POLICY_DENIES_OPERATION = 0x1786,ERROR_NO_BROWSER_SERVERS_FOUND = 0x17E6,SCHED_E_SERVICE_NOT_LOCALSYSTEM = 0x1838,ERROR_LOG_SECTOR_INVALID = 0x19C8,ERROR_LOG_SECTOR_PARITY_INVALID = 0x19C9,ERROR_LOG_SECTOR_REMAPPED = 0x19CA,ERROR_LOG_BLOCK_INCOMPLETE = 0x19CB,ERROR_LOG_INVALID_RANGE = 0x19CC,ERROR_LOG_BLOCKS_EXHAUSTED = 0x19CD,ERROR_LOG_READ_CONTEXT_INVALID = 0x19CE,ERROR_LOG_RESTART_INVALID = 0x19CF,ERROR_LOG_BLOCK_VERSION = 0x19D0,ERROR_LOG_BLOCK_INVALID = 0x19D1,ERROR_LOG_READ_MODE_INVALID = 0x19D2,ERROR_LOG_NO_RESTART = 0x19D3,ERROR_LOG_METADATA_CORRUPT = 0x19D4,ERROR_LOG_METADATA_INVALID = 0x19D5,ERROR_LOG_METADATA_INCONSISTENT = 0x19D6,ERROR_LOG_RESERVATION_INVALID = 0x19D7,ERROR_LOG_CANT_DELETE = 0x19D8,ERROR_LOG_CONTAINER_LIMIT_EXCEEDED = 0x19D9,ERROR_LOG_START_OF_LOG = 0x19DA,ERROR_LOG_POLICY_ALREADY_INSTALLED = 0x19DB,ERROR_LOG_POLICY_NOT_INSTALLED = 0x19DC,ERROR_LOG_POLICY_INVALID = 0x19DD,ERROR_LOG_POLICY_CONFLICT = 0x19DE,ERROR_LOG_PINNED_ARCHIVE_TAIL = 0x19DF,ERROR_LOG_RECORD_NONEXISTENT = 0x19E0,ERROR_LOG_RECORDS_RESERVED_INVALID = 0x19E1,ERROR_LOG_SPACE_RESERVED_INVALID = 0x19E2,ERROR_LOG_TAIL_INVALID = 0x19E3,ERROR_LOG_FULL = 0x19E4,ERROR_COULD_NOT_RESIZE_LOG = 0x19E5,ERROR_LOG_MULTIPLEXED = 0x19E6,ERROR_LOG_DEDICATED = 0x19E7,ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS = 0x19E8,ERROR_LOG_ARCHIVE_IN_PROGRESS = 0x19E9,ERROR_LOG_EPHEMERAL = 0x19EA,ERROR_LOG_NOT_ENOUGH_CONTAINERS = 0x19EB,ERROR_LOG_CLIENT_ALREADY_REGISTERED = 0x19EC,ERROR_LOG_CLIENT_NOT_REGISTERED = 0x19ED,ERROR_LOG_FULL_HANDLER_IN_PROGRESS = 0x19EE,ERROR_LOG_CONTAINER_READ_FAILED = 0x19EF,ERROR_LOG_CONTAINER_WRITE_FAILED = 0x19F0,ERROR_LOG_CONTAINER_OPEN_FAILED = 0x19F1,ERROR_LOG_CONTAINER_STATE_INVALID = 0x19F2,ERROR_LOG_STATE_INVALID = 0x19F3,ERROR_LOG_PINNED = 0x19F4,ERROR_LOG_METADATA_FLUSH_FAILED = 0x19F5,ERROR_LOG_INCONSISTENT_SECURITY = 0x19F6,ERROR_LOG_APPENDED_FLUSH_FAILED = 0x19F7,ERROR_LOG_PINNED_RESERVATION = 0x19F8,ERROR_INVALID_TRANSACTION = 0x1A2C,ERROR_TRANSACTION_NOT_ACTIVE = 0x1A2D,ERROR_TRANSACTION_REQUEST_NOT_VALID = 0x1A2E,ERROR_TRANSACTION_NOT_REQUESTED = 0x1A2F,ERROR_TRANSACTION_ALREADY_ABORTED = 0x1A30,ERROR_TRANSACTION_ALREADY_COMMITTED = 0x1A31,ERROR_TM_INITIALIZATION_FAILED = 0x1A32,ERROR_RESOURCEMANAGER_READ_ONLY = 0x1A33,ERROR_TRANSACTION_NOT_JOINED = 0x1A34,ERROR_TRANSACTION_SUPERIOR_EXISTS = 0x1A35,ERROR_CRM_PROTOCOL_ALREADY_EXISTS = 0x1A36,ERROR_TRANSACTION_PROPAGATION_FAILED = 0x1A37,ERROR_CRM_PROTOCOL_NOT_FOUND = 0x1A38,ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER = 0x1A39,ERROR_CURRENT_TRANSACTION_NOT_VALID = 0x1A3A,ERROR_TRANSACTION_NOT_FOUND = 0x1A3B,ERROR_RESOURCEMANAGER_NOT_FOUND = 0x1A3C,ERROR_ENLISTMENT_NOT_FOUND = 0x1A3D,ERROR_TRANSACTIONMANAGER_NOT_FOUND = 0x1A3E,ERROR_TRANSACTIONMANAGER_NOT_ONLINE = 0x1A3F,ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION = 0x1A40,ERROR_TRANSACTION_NOT_ROOT = 0x1A41,ERROR_TRANSACTION_OBJECT_EXPIRED = 0x1A42,ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED = 0x1A43,ERROR_TRANSACTION_RECORD_TOO_LONG = 0x1A44,ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED = 0x1A45,ERROR_TRANSACTION_INTEGRITY_VIOLATED = 0x1A46,ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH = 0x1A47,ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT = 0x1A48,ERROR_TRANSACTION_MUST_WRITETHROUGH = 0x1A49,ERROR_TRANSACTION_NO_SUPERIOR = 0x1A4A,ERROR_HEURISTIC_DAMAGE_POSSIBLE = 0x1A4B,ERROR_TRANSACTIONAL_CONFLICT = 0x1A90,ERROR_RM_NOT_ACTIVE = 0x1A91,ERROR_RM_METADATA_CORRUPT = 0x1A92,ERROR_DIRECTORY_NOT_RM = 0x1A93,ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE = 0x1A95,ERROR_LOG_RESIZE_INVALID_SIZE = 0x1A96,ERROR_OBJECT_NO_LONGER_EXISTS = 0x1A97,ERROR_STREAM_MINIVERSION_NOT_FOUND = 0x1A98,ERROR_STREAM_MINIVERSION_NOT_VALID = 0x1A99,ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION = 0x1A9A,ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT = 0x1A9B,ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS = 0x1A9C,ERROR_REMOTE_FILE_VERSION_MISMATCH = 0x1A9E,ERROR_HANDLE_NO_LONGER_VALID = 0x1A9F,ERROR_NO_TXF_METADATA = 0x1AA0,ERROR_LOG_CORRUPTION_DETECTED = 0x1AA1,ERROR_CANT_RECOVER_WITH_HANDLE_OPEN = 0x1AA2,ERROR_RM_DISCONNECTED = 0x1AA3,ERROR_ENLISTMENT_NOT_SUPERIOR = 0x1AA4,ERROR_RECOVERY_NOT_NEEDED = 0x1AA5,ERROR_RM_ALREADY_STARTED = 0x1AA6,ERROR_FILE_IDENTITY_NOT_PERSISTENT = 0x1AA7,ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY = 0x1AA8,ERROR_CANT_CROSS_RM_BOUNDARY = 0x1AA9,ERROR_TXF_DIR_NOT_EMPTY = 0x1AAA,ERROR_INDOUBT_TRANSACTIONS_EXIST = 0x1AAB,ERROR_TM_VOLATILE = 0x1AAC,ERROR_ROLLBACK_TIMER_EXPIRED = 0x1AAD,ERROR_TXF_ATTRIBUTE_CORRUPT = 0x1AAE,ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION = 0x1AAF,ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED = 0x1AB0,ERROR_LOG_GROWTH_FAILED = 0x1AB1,ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE = 0x1AB2,ERROR_TXF_METADATA_ALREADY_PRESENT = 0x1AB3,ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET = 0x1AB4,ERROR_TRANSACTION_REQUIRED_PROMOTION = 0x1AB5,ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION = 0x1AB6,ERROR_TRANSACTIONS_NOT_FROZEN = 0x1AB7,ERROR_TRANSACTION_FREEZE_IN_PROGRESS = 0x1AB8,ERROR_NOT_SNAPSHOT_VOLUME = 0x1AB9,ERROR_NO_SAVEPOINT_WITH_OPEN_FILES = 0x1ABA,ERROR_DATA_LOST_REPAIR = 0x1ABB,ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION = 0x1ABC,ERROR_TM_IDENTITY_MISMATCH = 0x1ABD,ERROR_FLOATED_SECTION = 0x1ABE,ERROR_CANNOT_ACCEPT_TRANSACTED_WORK = 0x1ABF,ERROR_CANNOT_ABORT_TRANSACTIONS = 0x1AC0,ERROR_BAD_CLUSTERS = 0x1AC1,ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION = 0x1AC2,ERROR_VOLUME_DIRTY = 0x1AC3,ERROR_NO_LINK_TRACKING_IN_TRANSACTION = 0x1AC4,ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION = 0x1AC5,ERROR_EXPIRED_HANDLE = 0x1AC6,ERROR_TRANSACTION_NOT_ENLISTED = 0x1AC7,ERROR_CTX_WINSTATION_NAME_INVALID = 0x1B59,ERROR_CTX_INVALID_PD = 0x1B5A,ERROR_CTX_PD_NOT_FOUND = 0x1B5B,ERROR_CTX_WD_NOT_FOUND = 0x1B5C,ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY = 0x1B5D,ERROR_CTX_SERVICE_NAME_COLLISION = 0x1B5E,ERROR_CTX_CLOSE_PENDING = 0x1B5F,ERROR_CTX_NO_OUTBUF = 0x1B60,ERROR_CTX_MODEM_INF_NOT_FOUND = 0x1B61,ERROR_CTX_INVALID_MODEMNAME = 0x1B62,ERROR_CTX_MODEM_RESPONSE_ERROR = 0x1B63,ERROR_CTX_MODEM_RESPONSE_TIMEOUT = 0x1B64,ERROR_CTX_MODEM_RESPONSE_NO_CARRIER = 0x1B65,ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE = 0x1B66,ERROR_CTX_MODEM_RESPONSE_BUSY = 0x1B67,ERROR_CTX_MODEM_RESPONSE_VOICE = 0x1B68,ERROR_CTX_TD_ERROR = 0x1B69,ERROR_CTX_WINSTATION_NOT_FOUND = 0x1B6E,ERROR_CTX_WINSTATION_ALREADY_EXISTS = 0x1B6F,ERROR_CTX_WINSTATION_BUSY = 0x1B70,ERROR_CTX_BAD_VIDEO_MODE = 0x1B71,ERROR_CTX_GRAPHICS_INVALID = 0x1B7B,ERROR_CTX_LOGON_DISABLED = 0x1B7D,ERROR_CTX_NOT_CONSOLE = 0x1B7E,ERROR_CTX_CLIENT_QUERY_TIMEOUT = 0x1B80,ERROR_CTX_CONSOLE_DISCONNECT = 0x1B81,ERROR_CTX_CONSOLE_CONNECT = 0x1B82,ERROR_CTX_SHADOW_DENIED = 0x1B84,ERROR_CTX_WINSTATION_ACCESS_DENIED = 0x1B85,ERROR_CTX_INVALID_WD = 0x1B89,ERROR_CTX_SHADOW_INVALID = 0x1B8A,ERROR_CTX_SHADOW_DISABLED = 0x1B8B,ERROR_CTX_CLIENT_LICENSE_IN_USE = 0x1B8C,ERROR_CTX_CLIENT_LICENSE_NOT_SET = 0x1B8D,ERROR_CTX_LICENSE_NOT_AVAILABLE = 0x1B8E,ERROR_CTX_LICENSE_CLIENT_INVALID = 0x1B8F,ERROR_CTX_LICENSE_EXPIRED = 0x1B90,ERROR_CTX_SHADOW_NOT_RUNNING = 0x1B91,ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE = 0x1B92,ERROR_ACTIVATION_COUNT_EXCEEDED = 0x1B93,ERROR_CTX_WINSTATIONS_DISABLED = 0x1B94,ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED = 0x1B95,ERROR_CTX_SESSION_IN_USE = 0x1B96,ERROR_CTX_NO_FORCE_LOGOFF = 0x1B97,ERROR_CTX_ACCOUNT_RESTRICTION = 0x1B98,ERROR_RDP_PROTOCOL_ERROR = 0x1B99,ERROR_CTX_CDM_CONNECT = 0x1B9A,ERROR_CTX_CDM_DISCONNECT = 0x1B9B,ERROR_CTX_SECURITY_LAYER_ERROR = 0x1B9C,ERROR_TS_INCOMPATIBLE_SESSIONS = 0x1B9D,ERROR_TS_VIDEO_SUBSYSTEM_ERROR = 0x1B9E,FRS_ERR_INVALID_API_SEQUENCE = 0x1F41,FRS_ERR_STARTING_SERVICE = 0x1F42,FRS_ERR_STOPPING_SERVICE = 0x1F43,FRS_ERR_INTERNAL_API = 0x1F44,FRS_ERR_INTERNAL = 0x1F45,FRS_ERR_SERVICE_COMM = 0x1F46,FRS_ERR_INSUFFICIENT_PRIV = 0x1F47,FRS_ERR_AUTHENTICATION = 0x1F48,FRS_ERR_PARENT_INSUFFICIENT_PRIV = 0x1F49,FRS_ERR_PARENT_AUTHENTICATION = 0x1F4A,FRS_ERR_CHILD_TO_PARENT_COMM = 0x1F4B,FRS_ERR_PARENT_TO_CHILD_COMM = 0x1F4C,FRS_ERR_SYSVOL_POPULATE = 0x1F4D,FRS_ERR_SYSVOL_POPULATE_TIMEOUT = 0x1F4E,FRS_ERR_SYSVOL_IS_BUSY = 0x1F4F,FRS_ERR_SYSVOL_DEMOTE = 0x1F50,FRS_ERR_INVALID_SERVICE_PARAMETER = 0x1F51,DS_S_SUCCESS = 0x0,ERROR_DS_NOT_INSTALLED = 0x2008,ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = 0x2009,ERROR_DS_NO_ATTRIBUTE_OR_VALUE = 0x200A,ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = 0x200B,ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = 0x200C,ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = 0x200D,ERROR_DS_BUSY = 0x200E,ERROR_DS_UNAVAILABLE = 0x200F,ERROR_DS_NO_RIDS_ALLOCATED = 0x2010,ERROR_DS_NO_MORE_RIDS = 0x2011,ERROR_DS_INCORRECT_ROLE_OWNER = 0x2012,ERROR_DS_RIDMGR_INIT_ERROR = 0x2013,ERROR_DS_OBJ_CLASS_VIOLATION = 0x2014,ERROR_DS_CANT_ON_NON_LEAF = 0x2015,ERROR_DS_CANT_ON_RDN = 0x2016,ERROR_DS_CANT_MOD_OBJ_CLASS = 0x2017,ERROR_DS_CROSS_DOM_MOVE_ERROR = 0x2018,ERROR_DS_GC_NOT_AVAILABLE = 0x2019,ERROR_SHARED_POLICY = 0x201A,ERROR_POLICY_OBJECT_NOT_FOUND = 0x201B,ERROR_POLICY_ONLY_IN_DS = 0x201C,ERROR_PROMOTION_ACTIVE = 0x201D,ERROR_NO_PROMOTION_ACTIVE = 0x201E,ERROR_DS_OPERATIONS_ERROR = 0x2020,ERROR_DS_PROTOCOL_ERROR = 0x2021,ERROR_DS_TIMELIMIT_EXCEEDED = 0x2022,ERROR_DS_SIZELIMIT_EXCEEDED = 0x2023,ERROR_DS_ADMIN_LIMIT_EXCEEDED = 0x2024,ERROR_DS_COMPARE_FALSE = 0x2025,ERROR_DS_COMPARE_TRUE = 0x2026,ERROR_DS_AUTH_METHOD_NOT_SUPPORTED = 0x2027,ERROR_DS_STRONG_AUTH_REQUIRED = 0x2028,ERROR_DS_INAPPROPRIATE_AUTH = 0x2029,ERROR_DS_AUTH_UNKNOWN = 0x202A,ERROR_DS_REFERRAL = 0x202B,ERROR_DS_UNAVAILABLE_CRIT_EXTENSION = 0x202C,ERROR_DS_CONFIDENTIALITY_REQUIRED = 0x202D,ERROR_DS_INAPPROPRIATE_MATCHING = 0x202E,ERROR_DS_CONSTRAINT_VIOLATION = 0x202F,ERROR_DS_NO_SUCH_OBJECT = 0x2030,ERROR_DS_ALIAS_PROBLEM = 0x2031,ERROR_DS_INVALID_DN_SYNTAX = 0x2032,ERROR_DS_IS_LEAF = 0x2033,ERROR_DS_ALIAS_DEREF_PROBLEM = 0x2034,ERROR_DS_UNWILLING_TO_PERFORM = 0x2035,ERROR_DS_LOOP_DETECT = 0x2036,ERROR_DS_NAMING_VIOLATION = 0x2037,ERROR_DS_OBJECT_RESULTS_TOO_LARGE = 0x2038,ERROR_DS_AFFECTS_MULTIPLE_DSAS = 0x2039,ERROR_DS_SERVER_DOWN = 0x203A,ERROR_DS_LOCAL_ERROR = 0x203B,ERROR_DS_ENCODING_ERROR = 0x203C,ERROR_DS_DECODING_ERROR = 0x203D,ERROR_DS_FILTER_UNKNOWN = 0x203E,ERROR_DS_PARAM_ERROR = 0x203F,ERROR_DS_NOT_SUPPORTED = 0x2040,ERROR_DS_NO_RESULTS_RETURNED = 0x2041,ERROR_DS_CONTROL_NOT_FOUND = 0x2042,ERROR_DS_CLIENT_LOOP = 0x2043,ERROR_DS_REFERRAL_LIMIT_EXCEEDED = 0x2044,ERROR_DS_SORT_CONTROL_MISSING = 0x2045,ERROR_DS_OFFSET_RANGE_ERROR = 0x2046,ERROR_DS_RIDMGR_DISABLED = 0x2047,ERROR_DS_ROOT_MUST_BE_NC = 0x206D,ERROR_DS_ADD_REPLICA_INHIBITED = 0x206E,ERROR_DS_ATT_NOT_DEF_IN_SCHEMA = 0x206F,ERROR_DS_MAX_OBJ_SIZE_EXCEEDED = 0x2070,ERROR_DS_OBJ_STRING_NAME_EXISTS = 0x2071,ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA = 0x2072,ERROR_DS_RDN_DOESNT_MATCH_SCHEMA = 0x2073,ERROR_DS_NO_REQUESTED_ATTS_FOUND = 0x2074,ERROR_DS_USER_BUFFER_TO_SMALL = 0x2075,ERROR_DS_ATT_IS_NOT_ON_OBJ = 0x2076,ERROR_DS_ILLEGAL_MOD_OPERATION = 0x2077,ERROR_DS_OBJ_TOO_LARGE = 0x2078,ERROR_DS_BAD_INSTANCE_TYPE = 0x2079,ERROR_DS_MASTERDSA_REQUIRED = 0x207A,ERROR_DS_OBJECT_CLASS_REQUIRED = 0x207B,ERROR_DS_MISSING_REQUIRED_ATT = 0x207C,ERROR_DS_ATT_NOT_DEF_FOR_CLASS = 0x207D,ERROR_DS_ATT_ALREADY_EXISTS = 0x207E,ERROR_DS_CANT_ADD_ATT_VALUES = 0x2080,ERROR_DS_SINGLE_VALUE_CONSTRAINT = 0x2081,ERROR_DS_RANGE_CONSTRAINT = 0x2082,ERROR_DS_ATT_VAL_ALREADY_EXISTS = 0x2083,ERROR_DS_CANT_REM_MISSING_ATT = 0x2084,ERROR_DS_CANT_REM_MISSING_ATT_VAL = 0x2085,ERROR_DS_ROOT_CANT_BE_SUBREF = 0x2086,ERROR_DS_NO_CHAINING = 0x2087,ERROR_DS_NO_CHAINED_EVAL = 0x2088,ERROR_DS_NO_PARENT_OBJECT = 0x2089,ERROR_DS_PARENT_IS_AN_ALIAS = 0x208A,ERROR_DS_CANT_MIX_MASTER_AND_REPS = 0x208B,ERROR_DS_CHILDREN_EXIST = 0x208C,ERROR_DS_OBJ_NOT_FOUND = 0x208D,ERROR_DS_ALIASED_OBJ_MISSING = 0x208E,ERROR_DS_BAD_NAME_SYNTAX = 0x208F,ERROR_DS_ALIAS_POINTS_TO_ALIAS = 0x2090,ERROR_DS_CANT_DEREF_ALIAS = 0x2091,ERROR_DS_OUT_OF_SCOPE = 0x2092,ERROR_DS_OBJECT_BEING_REMOVED = 0x2093,ERROR_DS_CANT_DELETE_DSA_OBJ = 0x2094,ERROR_DS_GENERIC_ERROR = 0x2095,ERROR_DS_DSA_MUST_BE_INT_MASTER = 0x2096,ERROR_DS_CLASS_NOT_DSA = 0x2097,ERROR_DS_INSUFF_ACCESS_RIGHTS = 0x2098,ERROR_DS_ILLEGAL_SUPERIOR = 0x2099,ERROR_DS_ATTRIBUTE_OWNED_BY_SAM = 0x209A,ERROR_DS_NAME_TOO_MANY_PARTS = 0x209B,ERROR_DS_NAME_TOO_LONG = 0x209C,ERROR_DS_NAME_VALUE_TOO_LONG = 0x209D,ERROR_DS_NAME_UNPARSEABLE = 0x209E,ERROR_DS_NAME_TYPE_UNKNOWN = 0x209F,ERROR_DS_NOT_AN_OBJECT = 0x20A0,ERROR_DS_SEC_DESC_TOO_SHORT = 0x20A1,ERROR_DS_SEC_DESC_INVALID = 0x20A2,ERROR_DS_NO_DELETED_NAME = 0x20A3,ERROR_DS_SUBREF_MUST_HAVE_PARENT = 0x20A4,ERROR_DS_NCNAME_MUST_BE_NC = 0x20A5,ERROR_DS_CANT_ADD_SYSTEM_ONLY = 0x20A6,ERROR_DS_CLASS_MUST_BE_CONCRETE = 0x20A7,ERROR_DS_INVALID_DMD = 0x20A8,ERROR_DS_OBJ_GUID_EXISTS = 0x20A9,ERROR_DS_NOT_ON_BACKLINK = 0x20AA,ERROR_DS_NO_CROSSREF_FOR_NC = 0x20AB,ERROR_DS_SHUTTING_DOWN = 0x20AC,ERROR_DS_UNKNOWN_OPERATION = 0x20AD,ERROR_DS_INVALID_ROLE_OWNER = 0x20AE,ERROR_DS_COULDNT_CONTACT_FSMO = 0x20AF,ERROR_DS_CROSS_NC_DN_RENAME = 0x20B0,ERROR_DS_CANT_MOD_SYSTEM_ONLY = 0x20B1,ERROR_DS_REPLICATOR_ONLY = 0x20B2,ERROR_DS_OBJ_CLASS_NOT_DEFINED = 0x20B3,ERROR_DS_OBJ_CLASS_NOT_SUBCLASS = 0x20B4,ERROR_DS_NAME_REFERENCE_INVALID = 0x20B5,ERROR_DS_CROSS_REF_EXISTS = 0x20B6,ERROR_DS_CANT_DEL_MASTER_CROSSREF = 0x20B7,ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD = 0x20B8,ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX = 0x20B9,ERROR_DS_DUP_RDN = 0x20BA,ERROR_DS_DUP_OID = 0x20BB,ERROR_DS_DUP_MAPI_ID = 0x20BC,ERROR_DS_DUP_SCHEMA_ID_GUID = 0x20BD,ERROR_DS_DUP_LDAP_DISPLAY_NAME = 0x20BE,ERROR_DS_SEMANTIC_ATT_TEST = 0x20BF,ERROR_DS_SYNTAX_MISMATCH = 0x20C0,ERROR_DS_EXISTS_IN_MUST_HAVE = 0x20C1,ERROR_DS_EXISTS_IN_MAY_HAVE = 0x20C2,ERROR_DS_NONEXISTENT_MAY_HAVE = 0x20C3,ERROR_DS_NONEXISTENT_MUST_HAVE = 0x20C4,ERROR_DS_AUX_CLS_TEST_FAIL = 0x20C5,ERROR_DS_NONEXISTENT_POSS_SUP = 0x20C6,ERROR_DS_SUB_CLS_TEST_FAIL = 0x20C7,ERROR_DS_BAD_RDN_ATT_ID_SYNTAX = 0x20C8,ERROR_DS_EXISTS_IN_AUX_CLS = 0x20C9,ERROR_DS_EXISTS_IN_SUB_CLS = 0x20CA,ERROR_DS_EXISTS_IN_POSS_SUP = 0x20CB,ERROR_DS_RECALCSCHEMA_FAILED = 0x20CC,ERROR_DS_TREE_DELETE_NOT_FINISHED = 0x20CD,ERROR_DS_CANT_DELETE = 0x20CE,ERROR_DS_ATT_SCHEMA_REQ_ID = 0x20CF,ERROR_DS_BAD_ATT_SCHEMA_SYNTAX = 0x20D0,ERROR_DS_CANT_CACHE_ATT = 0x20D1,ERROR_DS_CANT_CACHE_CLASS = 0x20D2,ERROR_DS_CANT_REMOVE_ATT_CACHE = 0x20D3,ERROR_DS_CANT_REMOVE_CLASS_CACHE = 0x20D4,ERROR_DS_CANT_RETRIEVE_DN = 0x20D5,ERROR_DS_MISSING_SUPREF = 0x20D6,ERROR_DS_CANT_RETRIEVE_INSTANCE = 0x20D7,ERROR_DS_CODE_INCONSISTENCY = 0x20D8,ERROR_DS_DATABASE_ERROR = 0x20D9,ERROR_DS_GOVERNSID_MISSING = 0x20DA,ERROR_DS_MISSING_EXPECTED_ATT = 0x20DB,ERROR_DS_NCNAME_MISSING_CR_REF = 0x20DC,ERROR_DS_SECURITY_CHECKING_ERROR = 0x20DD,ERROR_DS_SCHEMA_NOT_LOADED = 0x20DE,ERROR_DS_SCHEMA_ALLOC_FAILED = 0x20DF,ERROR_DS_ATT_SCHEMA_REQ_SYNTAX = 0x20E0,ERROR_DS_GCVERIFY_ERROR = 0x20E1,ERROR_DS_DRA_SCHEMA_MISMATCH = 0x20E2,ERROR_DS_CANT_FIND_DSA_OBJ = 0x20E3,ERROR_DS_CANT_FIND_EXPECTED_NC = 0x20E4,ERROR_DS_CANT_FIND_NC_IN_CACHE = 0x20E5,ERROR_DS_CANT_RETRIEVE_CHILD = 0x20E6,ERROR_DS_SECURITY_ILLEGAL_MODIFY = 0x20E7,ERROR_DS_CANT_REPLACE_HIDDEN_REC = 0x20E8,ERROR_DS_BAD_HIERARCHY_FILE = 0x20E9,ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED = 0x20EA,ERROR_DS_CONFIG_PARAM_MISSING = 0x20EB,ERROR_DS_COUNTING_AB_INDICES_FAILED = 0x20EC,ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED = 0x20ED,ERROR_DS_INTERNAL_FAILURE = 0x20EE,ERROR_DS_UNKNOWN_ERROR = 0x20EF,ERROR_DS_ROOT_REQUIRES_CLASS_TOP = 0x20F0,ERROR_DS_REFUSING_FSMO_ROLES = 0x20F1,ERROR_DS_MISSING_FSMO_SETTINGS = 0x20F2,ERROR_DS_UNABLE_TO_SURRENDER_ROLES = 0x20F3,ERROR_DS_DRA_GENERIC = 0x20F4,ERROR_DS_DRA_INVALID_PARAMETER = 0x20F5,ERROR_DS_DRA_BUSY = 0x20F6,ERROR_DS_DRA_BAD_DN = 0x20F7,ERROR_DS_DRA_BAD_NC = 0x20F8,ERROR_DS_DRA_DN_EXISTS = 0x20F9,ERROR_DS_DRA_INTERNAL_ERROR = 0x20FA,ERROR_DS_DRA_INCONSISTENT_DIT = 0x20FB,ERROR_DS_DRA_CONNECTION_FAILED = 0x20FC,ERROR_DS_DRA_BAD_INSTANCE_TYPE = 0x20FD,ERROR_DS_DRA_OUT_OF_MEM = 0x20FE,ERROR_DS_DRA_MAIL_PROBLEM = 0x20FF,ERROR_DS_DRA_REF_ALREADY_EXISTS = 0x2100,ERROR_DS_DRA_REF_NOT_FOUND = 0x2101,ERROR_DS_DRA_OBJ_IS_REP_SOURCE = 0x2102,ERROR_DS_DRA_DB_ERROR = 0x2103,ERROR_DS_DRA_NO_REPLICA = 0x2104,ERROR_DS_DRA_ACCESS_DENIED = 0x2105,ERROR_DS_DRA_NOT_SUPPORTED = 0x2106,ERROR_DS_DRA_RPC_CANCELLED = 0x2107,ERROR_DS_DRA_SOURCE_DISABLED = 0x2108,ERROR_DS_DRA_SINK_DISABLED = 0x2109,ERROR_DS_DRA_NAME_COLLISION = 0x210A,ERROR_DS_DRA_SOURCE_REINSTALLED = 0x210B,ERROR_DS_DRA_MISSING_PARENT = 0x210C,ERROR_DS_DRA_PREEMPTED = 0x210D,ERROR_DS_DRA_ABANDON_SYNC = 0x210E,ERROR_DS_DRA_SHUTDOWN = 0x210F,ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET = 0x2110,ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA = 0x2111,ERROR_DS_DRA_EXTN_CONNECTION_FAILED = 0x2112,ERROR_DS_INSTALL_SCHEMA_MISMATCH = 0x2113,ERROR_DS_DUP_LINK_ID = 0x2114,ERROR_DS_NAME_ERROR_RESOLVING = 0x2115,ERROR_DS_NAME_ERROR_NOT_FOUND = 0x2116,ERROR_DS_NAME_ERROR_NOT_UNIQUE = 0x2117,ERROR_DS_NAME_ERROR_NO_MAPPING = 0x2118,ERROR_DS_NAME_ERROR_DOMAIN_ONLY = 0x2119,ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING = 0x211A,ERROR_DS_CONSTRUCTED_ATT_MOD = 0x211B,ERROR_DS_WRONG_OM_OBJ_CLASS = 0x211C,ERROR_DS_DRA_REPL_PENDING = 0x211D,ERROR_DS_DS_REQUIRED = 0x211E,ERROR_DS_INVALID_LDAP_DISPLAY_NAME = 0x211F,ERROR_DS_NON_BASE_SEARCH = 0x2120,ERROR_DS_CANT_RETRIEVE_ATTS = 0x2121,ERROR_DS_BACKLINK_WITHOUT_LINK = 0x2122,ERROR_DS_EPOCH_MISMATCH = 0x2123,ERROR_DS_SRC_NAME_MISMATCH = 0x2124,ERROR_DS_SRC_AND_DST_NC_IDENTICAL = 0x2125,ERROR_DS_DST_NC_MISMATCH = 0x2126,ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC = 0x2127,ERROR_DS_SRC_GUID_MISMATCH = 0x2128,ERROR_DS_CANT_MOVE_DELETED_OBJECT = 0x2129,ERROR_DS_PDC_OPERATION_IN_PROGRESS = 0x212A,ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD = 0x212B,ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION = 0x212C,ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS = 0x212D,ERROR_DS_NC_MUST_HAVE_NC_PARENT = 0x212E,ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE = 0x212F,ERROR_DS_DST_DOMAIN_NOT_NATIVE = 0x2130,ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER = 0x2131,ERROR_DS_CANT_MOVE_ACCOUNT_GROUP = 0x2132,ERROR_DS_CANT_MOVE_RESOURCE_GROUP = 0x2133,ERROR_DS_INVALID_SEARCH_FLAG = 0x2134,ERROR_DS_NO_TREE_DELETE_ABOVE_NC = 0x2135,ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE = 0x2136,ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE = 0x2137,ERROR_DS_SAM_INIT_FAILURE = 0x2138,ERROR_DS_SENSITIVE_GROUP_VIOLATION = 0x2139,ERROR_DS_CANT_MOD_PRIMARYGROUPID = 0x213A,ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD = 0x213B,ERROR_DS_NONSAFE_SCHEMA_CHANGE = 0x213C,ERROR_DS_SCHEMA_UPDATE_DISALLOWED = 0x213D,ERROR_DS_CANT_CREATE_UNDER_SCHEMA = 0x213E,ERROR_DS_INSTALL_NO_SRC_SCH_VERSION = 0x213F,ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE = 0x2140,ERROR_DS_INVALID_GROUP_TYPE = 0x2141,ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = 0x2142,ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = 0x2143,ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = 0x2144,ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = 0x2145,ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = 0x2146,ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = 0x2147,ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = 0x2148,ERROR_DS_HAVE_PRIMARY_MEMBERS = 0x2149,ERROR_DS_STRING_SD_CONVERSION_FAILED = 0x214A,ERROR_DS_NAMING_MASTER_GC = 0x214B,ERROR_DS_DNS_LOOKUP_FAILURE = 0x214C,ERROR_DS_COULDNT_UPDATE_SPNS = 0x214D,ERROR_DS_CANT_RETRIEVE_SD = 0x214E,ERROR_DS_KEY_NOT_UNIQUE = 0x214F,ERROR_DS_WRONG_LINKED_ATT_SYNTAX = 0x2150,ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD = 0x2151,ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY = 0x2152,ERROR_DS_CANT_START = 0x2153,ERROR_DS_INIT_FAILURE = 0x2154,ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION = 0x2155,ERROR_DS_SOURCE_DOMAIN_IN_FOREST = 0x2156,ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST = 0x2157,ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED = 0x2158,ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN = 0x2159,ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER = 0x215A,ERROR_DS_SRC_SID_EXISTS_IN_FOREST = 0x215B,ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH = 0x215C,ERROR_SAM_INIT_FAILURE = 0x215D,ERROR_DS_DRA_SCHEMA_INFO_SHIP = 0x215E,ERROR_DS_DRA_SCHEMA_CONFLICT = 0x215F,ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT = 0x2160,ERROR_DS_DRA_OBJ_NC_MISMATCH = 0x2161,ERROR_DS_NC_STILL_HAS_DSAS = 0x2162,ERROR_DS_GC_REQUIRED = 0x2163,ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = 0x2164,ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS = 0x2165,ERROR_DS_CANT_ADD_TO_GC = 0x2166,ERROR_DS_NO_CHECKPOINT_WITH_PDC = 0x2167,ERROR_DS_SOURCE_AUDITING_NOT_ENABLED = 0x2168,ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC = 0x2169,ERROR_DS_INVALID_NAME_FOR_SPN = 0x216A,ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS = 0x216B,ERROR_DS_UNICODEPWD_NOT_IN_QUOTES = 0x216C,ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = 0x216D,ERROR_DS_MUST_BE_RUN_ON_DST_DC = 0x216E,ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER = 0x216F,ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ = 0x2170,ERROR_DS_INIT_FAILURE_CONSOLE = 0x2171,ERROR_DS_SAM_INIT_FAILURE_CONSOLE = 0x2172,ERROR_DS_FOREST_VERSION_TOO_HIGH = 0x2173,ERROR_DS_DOMAIN_VERSION_TOO_HIGH = 0x2174,ERROR_DS_FOREST_VERSION_TOO_LOW = 0x2175,ERROR_DS_DOMAIN_VERSION_TOO_LOW = 0x2176,ERROR_DS_INCOMPATIBLE_VERSION = 0x2177,ERROR_DS_LOW_DSA_VERSION = 0x2178,ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN = 0x2179,ERROR_DS_NOT_SUPPORTED_SORT_ORDER = 0x217A,ERROR_DS_NAME_NOT_UNIQUE = 0x217B,ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 = 0x217C,ERROR_DS_OUT_OF_VERSION_STORE = 0x217D,ERROR_DS_INCOMPATIBLE_CONTROLS_USED = 0x217E,ERROR_DS_NO_REF_DOMAIN = 0x217F,ERROR_DS_RESERVED_LINK_ID = 0x2180,ERROR_DS_LINK_ID_NOT_AVAILABLE = 0x2181,ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = 0x2182,ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE = 0x2183,ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC = 0x2184,ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG = 0x2185,ERROR_DS_MODIFYDN_WRONG_GRANDPARENT = 0x2186,ERROR_DS_NAME_ERROR_TRUST_REFERRAL = 0x2187,ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER = 0x2188,ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD = 0x2189,ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 = 0x218A,ERROR_DS_THREAD_LIMIT_EXCEEDED = 0x218B,ERROR_DS_NOT_CLOSEST = 0x218C,ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF = 0x218D,ERROR_DS_SINGLE_USER_MODE_FAILED = 0x218E,ERROR_DS_NTDSCRIPT_SYNTAX_ERROR = 0x218F,ERROR_DS_NTDSCRIPT_PROCESS_ERROR = 0x2190,ERROR_DS_DIFFERENT_REPL_EPOCHS = 0x2191,ERROR_DS_DRS_EXTENSIONS_CHANGED = 0x2192,ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR = 0x2193,ERROR_DS_NO_MSDS_INTID = 0x2194,ERROR_DS_DUP_MSDS_INTID = 0x2195,ERROR_DS_EXISTS_IN_RDNATTID = 0x2196,ERROR_DS_AUTHORIZATION_FAILED = 0x2197,ERROR_DS_INVALID_SCRIPT = 0x2198,ERROR_DS_REMOTE_CROSSREF_OP_FAILED = 0x2199,ERROR_DS_CROSS_REF_BUSY = 0x219A,ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN = 0x219B,ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC = 0x219C,ERROR_DS_DUPLICATE_ID_FOUND = 0x219D,ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT = 0x219E,ERROR_DS_GROUP_CONVERSION_ERROR = 0x219F,ERROR_DS_CANT_MOVE_APP_BASIC_GROUP = 0x21A0,ERROR_DS_CANT_MOVE_APP_QUERY_GROUP = 0x21A1,ERROR_DS_ROLE_NOT_VERIFIED = 0x21A2,ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL = 0x21A3,ERROR_DS_DOMAIN_RENAME_IN_PROGRESS = 0x21A4,ERROR_DS_EXISTING_AD_CHILD_NC = 0x21A5,ERROR_DS_REPL_LIFETIME_EXCEEDED = 0x21A6,ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER = 0x21A7,ERROR_DS_LDAP_SEND_QUEUE_FULL = 0x21A8,ERROR_DS_DRA_OUT_SCHEDULE_WINDOW = 0x21A9,ERROR_DS_POLICY_NOT_KNOWN = 0x21AA,ERROR_NO_SITE_SETTINGS_OBJECT = 0x21AB,ERROR_NO_SECRETS = 0x21AC,ERROR_NO_WRITABLE_DC_FOUND = 0x21AD,ERROR_DS_NO_SERVER_OBJECT = 0x21AE,ERROR_DS_NO_NTDSA_OBJECT = 0x21AF,ERROR_DS_NON_ASQ_SEARCH = 0x21B0,ERROR_DS_AUDIT_FAILURE = 0x21B1,ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE = 0x21B2,ERROR_DS_INVALID_SEARCH_FLAG_TUPLE = 0x21B3,ERROR_DS_HIERARCHY_TABLE_TOO_DEEP = 0x21B4,ERROR_DS_DRA_CORRUPT_UTD_VECTOR = 0x21B5,ERROR_DS_DRA_SECRETS_DENIED = 0x21B6,ERROR_DS_RESERVED_MAPI_ID = 0x21B7,ERROR_DS_MAPI_ID_NOT_AVAILABLE = 0x21B8,ERROR_DS_DRA_MISSING_KRBTGT_SECRET = 0x21B9,ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST = 0x21BA,ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST = 0x21BB,ERROR_INVALID_USER_PRINCIPAL_NAME = 0x21BC,ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS = 0x21BD,ERROR_DS_OID_NOT_FOUND = 0x21BE,ERROR_DS_DRA_RECYCLED_TARGET = 0x21BF,ERROR_DS_DISALLOWED_NC_REDIRECT = 0x21C0,ERROR_DS_HIGH_ADLDS_FFL = 0x21C1,ERROR_DS_HIGH_DSA_VERSION = 0x21C2,ERROR_DS_LOW_ADLDS_FFL = 0x21C3,ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION = 0x21C4,ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED = 0x21C5,ERROR_INCORRECT_ACCOUNT_TYPE = 0x21C6,DNS_ERROR_RESPONSE_CODES_BASE = 0x2328,DNS_ERROR_RCODE_NO_ERROR = 0x0,DNS_ERROR_MASK = 0x2328,DNS_ERROR_RCODE_FORMAT_ERROR = 0x2329,DNS_ERROR_RCODE_SERVER_FAILURE = 0x232A,DNS_ERROR_RCODE_NAME_ERROR = 0x232B,DNS_ERROR_RCODE_NOT_IMPLEMENTED = 0x232C,DNS_ERROR_RCODE_REFUSED = 0x232D,DNS_ERROR_RCODE_YXDOMAIN = 0x232E,DNS_ERROR_RCODE_YXRRSET = 0x232F,DNS_ERROR_RCODE_NXRRSET = 0x2330,DNS_ERROR_RCODE_NOTAUTH = 0x2331,DNS_ERROR_RCODE_NOTZONE = 0x2332,DNS_ERROR_RCODE_BADSIG = 0x2338,DNS_ERROR_RCODE_BADKEY = 0x2339,DNS_ERROR_RCODE_BADTIME = 0x233A,DNS_ERROR_RCODE_LAST = 0x233A,DNS_ERROR_DNSSEC_BASE = 0x238C,DNS_ERROR_KEYMASTER_REQUIRED = 0x238D,DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE = 0x238E,DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 = 0x238F,DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS = 0x2390,DNS_ERROR_UNSUPPORTED_ALGORITHM = 0x2391,DNS_ERROR_INVALID_KEY_SIZE = 0x2392,DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE = 0x2393,DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION = 0x2394,DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR = 0x2395,DNS_ERROR_UNEXPECTED_CNG_ERROR = 0x2396,DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION = 0x2397,DNS_ERROR_KSP_NOT_ACCESSIBLE = 0x2398,DNS_ERROR_TOO_MANY_SKDS = 0x2399,DNS_ERROR_INVALID_ROLLOVER_PERIOD = 0x239A,DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET = 0x239B,DNS_ERROR_ROLLOVER_IN_PROGRESS = 0x239C,DNS_ERROR_STANDBY_KEY_NOT_PRESENT = 0x239D,DNS_ERROR_NOT_ALLOWED_ON_ZSK = 0x239E,DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD = 0x239F,DNS_ERROR_ROLLOVER_ALREADY_QUEUED = 0x23A0,DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE = 0x23A1,DNS_ERROR_BAD_KEYMASTER = 0x23A2,DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD = 0x23A3,DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT = 0x23A4,DNS_ERROR_DNSSEC_IS_DISABLED = 0x23A5,DNS_ERROR_INVALID_XML = 0x23A6,DNS_ERROR_NO_VALID_TRUST_ANCHORS = 0x23A7,DNS_ERROR_ROLLOVER_NOT_POKEABLE = 0x23A8,DNS_ERROR_NSEC3_NAME_COLLISION = 0x23A9,DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 = 0x23AA,DNS_ERROR_PACKET_FMT_BASE = 0x251C,DNS_INFO_NO_RECORDS = 0x251D,DNS_ERROR_BAD_PACKET = 0x251E,DNS_ERROR_NO_PACKET = 0x251F,DNS_ERROR_RCODE = 0x2520,DNS_ERROR_UNSECURE_PACKET = 0x2521,DNS_STATUS_PACKET_UNSECURE = 0x2521,DNS_REQUEST_PENDING = 0x2522,DNS_ERROR_NO_MEMORY = 0xE,DNS_ERROR_INVALID_NAME = 0x7B,DNS_ERROR_INVALID_DATA = 0xD,DNS_ERROR_GENERAL_API_BASE = 0x254E,DNS_ERROR_INVALID_TYPE = 0x254F,DNS_ERROR_INVALID_IP_ADDRESS = 0x2550,DNS_ERROR_INVALID_PROPERTY = 0x2551,DNS_ERROR_TRY_AGAIN_LATER = 0x2552,DNS_ERROR_NOT_UNIQUE = 0x2553,DNS_ERROR_NON_RFC_NAME = 0x2554,DNS_STATUS_FQDN = 0x2555,DNS_STATUS_DOTTED_NAME = 0x2556,DNS_STATUS_SINGLE_PART_NAME = 0x2557,DNS_ERROR_INVALID_NAME_CHAR = 0x2558,DNS_ERROR_NUMERIC_NAME = 0x2559,DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER = 0x255A,DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION = 0x255B,DNS_ERROR_CANNOT_FIND_ROOT_HINTS = 0x255C,DNS_ERROR_INCONSISTENT_ROOT_HINTS = 0x255D,DNS_ERROR_DWORD_VALUE_TOO_SMALL = 0x255E,DNS_ERROR_DWORD_VALUE_TOO_LARGE = 0x255F,DNS_ERROR_BACKGROUND_LOADING = 0x2560,DNS_ERROR_NOT_ALLOWED_ON_RODC = 0x2561,DNS_ERROR_NOT_ALLOWED_UNDER_DNAME = 0x2562,DNS_ERROR_DELEGATION_REQUIRED = 0x2563,DNS_ERROR_INVALID_POLICY_TABLE = 0x2564,DNS_ERROR_ZONE_BASE = 0x2580,DNS_ERROR_ZONE_DOES_NOT_EXIST = 0x2581,DNS_ERROR_NO_ZONE_INFO = 0x2582,DNS_ERROR_INVALID_ZONE_OPERATION = 0x2583,DNS_ERROR_ZONE_CONFIGURATION_ERROR = 0x2584,DNS_ERROR_ZONE_HAS_NO_SOA_RECORD = 0x2585,DNS_ERROR_ZONE_HAS_NO_NS_RECORDS = 0x2586,DNS_ERROR_ZONE_LOCKED = 0x2587,DNS_ERROR_ZONE_CREATION_FAILED = 0x2588,DNS_ERROR_ZONE_ALREADY_EXISTS = 0x2589,DNS_ERROR_AUTOZONE_ALREADY_EXISTS = 0x258A,DNS_ERROR_INVALID_ZONE_TYPE = 0x258B,DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP = 0x258C,DNS_ERROR_ZONE_NOT_SECONDARY = 0x258D,DNS_ERROR_NEED_SECONDARY_ADDRESSES = 0x258E,DNS_ERROR_WINS_INIT_FAILED = 0x258F,DNS_ERROR_NEED_WINS_SERVERS = 0x2590,DNS_ERROR_NBSTAT_INIT_FAILED = 0x2591,DNS_ERROR_SOA_DELETE_INVALID = 0x2592,DNS_ERROR_FORWARDER_ALREADY_EXISTS = 0x2593,DNS_ERROR_ZONE_REQUIRES_MASTER_IP = 0x2594,DNS_ERROR_ZONE_IS_SHUTDOWN = 0x2595,DNS_ERROR_ZONE_LOCKED_FOR_SIGNING = 0x2596,DNS_ERROR_DATAFILE_BASE = 0x25B2,DNS_ERROR_PRIMARY_REQUIRES_DATAFILE = 0x25B3,DNS_ERROR_INVALID_DATAFILE_NAME = 0x25B4,DNS_ERROR_DATAFILE_OPEN_FAILURE = 0x25B5,DNS_ERROR_FILE_WRITEBACK_FAILED = 0x25B6,DNS_ERROR_DATAFILE_PARSING = 0x25B7,DNS_ERROR_DATABASE_BASE = 0x25E4,DNS_ERROR_RECORD_DOES_NOT_EXIST = 0x25E5,DNS_ERROR_RECORD_FORMAT = 0x25E6,DNS_ERROR_NODE_CREATION_FAILED = 0x25E7,DNS_ERROR_UNKNOWN_RECORD_TYPE = 0x25E8,DNS_ERROR_RECORD_TIMED_OUT = 0x25E9,DNS_ERROR_NAME_NOT_IN_ZONE = 0x25EA,DNS_ERROR_CNAME_LOOP = 0x25EB,DNS_ERROR_NODE_IS_CNAME = 0x25EC,DNS_ERROR_CNAME_COLLISION = 0x25ED,DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT = 0x25EE,DNS_ERROR_RECORD_ALREADY_EXISTS = 0x25EF,DNS_ERROR_SECONDARY_DATA = 0x25F0,DNS_ERROR_NO_CREATE_CACHE_DATA = 0x25F1,DNS_ERROR_NAME_DOES_NOT_EXIST = 0x25F2,DNS_WARNING_PTR_CREATE_FAILED = 0x25F3,DNS_WARNING_DOMAIN_UNDELETED = 0x25F4,DNS_ERROR_DS_UNAVAILABLE = 0x25F5,DNS_ERROR_DS_ZONE_ALREADY_EXISTS = 0x25F6,DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE = 0x25F7,DNS_ERROR_NODE_IS_DNAME = 0x25F8,DNS_ERROR_DNAME_COLLISION = 0x25F9,DNS_ERROR_ALIAS_LOOP = 0x25FA,DNS_ERROR_OPERATION_BASE = 0x2616,DNS_INFO_AXFR_COMPLETE = 0x2617,DNS_ERROR_AXFR = 0x2618,DNS_INFO_ADDED_LOCAL_WINS = 0x2619,DNS_ERROR_SECURE_BASE = 0x2648,DNS_STATUS_CONTINUE_NEEDED = 0x2649,DNS_ERROR_SETUP_BASE = 0x267A,DNS_ERROR_NO_TCPIP = 0x267B,DNS_ERROR_NO_DNS_SERVERS = 0x267C,DNS_ERROR_DP_BASE = 0x26AC,DNS_ERROR_DP_DOES_NOT_EXIST = 0x26AD,DNS_ERROR_DP_ALREADY_EXISTS = 0x26AE,DNS_ERROR_DP_NOT_ENLISTED = 0x26AF,DNS_ERROR_DP_ALREADY_ENLISTED = 0x26B0,DNS_ERROR_DP_NOT_AVAILABLE = 0x26B1,DNS_ERROR_DP_FSMO_ERROR = 0x26B2,WSABASEERR = 0x2710,WSAEINTR = 0x2714,WSAEBADF = 0x2719,WSAEACCES = 0x271D,WSAEFAULT = 0x271E,WSAEINVAL = 0x2726,WSAEMFILE = 0x2728,WSAEWOULDBLOCK = 0x2733,WSAEINPROGRESS = 0x2734,WSAEALREADY = 0x2735,WSAENOTSOCK = 0x2736,WSAEDESTADDRREQ = 0x2737,WSAEMSGSIZE = 0x2738,WSAEPROTOTYPE = 0x2739,WSAENOPROTOOPT = 0x273A,WSAEPROTONOSUPPORT = 0x273B,WSAESOCKTNOSUPPORT = 0x273C,WSAEOPNOTSUPP = 0x273D,WSAEPFNOSUPPORT = 0x273E,WSAEAFNOSUPPORT = 0x273F,WSAEADDRINUSE = 0x2740,WSAEADDRNOTAVAIL = 0x2741,WSAENETDOWN = 0x2742,WSAENETUNREACH = 0x2743,WSAENETRESET = 0x2744,WSAECONNABORTED = 0x2745,WSAECONNRESET = 0x2746,WSAENOBUFS = 0x2747,WSAEISCONN = 0x2748,WSAENOTCONN = 0x2749,WSAESHUTDOWN = 0x274A,WSAETOOMANYREFS = 0x274B,WSAETIMEDOUT = 0x274C,WSAECONNREFUSED = 0x274D,WSAELOOP = 0x274E,WSAENAMETOOLONG = 0x274F,WSAEHOSTDOWN = 0x2750,WSAEHOSTUNREACH = 0x2751,WSAENOTEMPTY = 0x2752,WSAEPROCLIM = 0x2753,WSAEUSERS = 0x2754,WSAEDQUOT = 0x2755,WSAESTALE = 0x2756,WSAEREMOTE = 0x2757,WSASYSNOTREADY = 0x276B,WSAVERNOTSUPPORTED = 0x276C,WSANOTINITIALISED = 0x276D,WSAEDISCON = 0x2775,WSAENOMORE = 0x2776,WSAECANCELLED = 0x2777,WSAEINVALIDPROCTABLE = 0x2778,WSAEINVALIDPROVIDER = 0x2779,WSAEPROVIDERFAILEDINIT = 0x277A,WSASYSCALLFAILURE = 0x277B,WSASERVICE_NOT_FOUND = 0x277C,WSATYPE_NOT_FOUND = 0x277D,WSA_E_NO_MORE = 0x277E,WSA_E_CANCELLED = 0x277F,WSAEREFUSED = 0x2780,WSAHOST_NOT_FOUND = 0x2AF9,WSATRY_AGAIN = 0x2AFA,WSANO_RECOVERY = 0x2AFB,WSANO_DATA = 0x2AFC,WSA_QOS_RECEIVERS = 0x2AFD,WSA_QOS_SENDERS = 0x2AFE,WSA_QOS_NO_SENDERS = 0x2AFF,WSA_QOS_NO_RECEIVERS = 0x2B00,WSA_QOS_REQUEST_CONFIRMED = 0x2B01,WSA_QOS_ADMISSION_FAILURE = 0x2B02,WSA_QOS_POLICY_FAILURE = 0x2B03,WSA_QOS_BAD_STYLE = 0x2B04,WSA_QOS_BAD_OBJECT = 0x2B05,WSA_QOS_TRAFFIC_CTRL_ERROR = 0x2B06,WSA_QOS_GENERIC_ERROR = 0x2B07,WSA_QOS_ESERVICETYPE = 0x2B08,WSA_QOS_EFLOWSPEC = 0x2B09,WSA_QOS_EPROVSPECBUF = 0x2B0A,WSA_QOS_EFILTERSTYLE = 0x2B0B,WSA_QOS_EFILTERTYPE = 0x2B0C,WSA_QOS_EFILTERCOUNT = 0x2B0D,WSA_QOS_EOBJLENGTH = 0x2B0E,WSA_QOS_EFLOWCOUNT = 0x2B0F,WSA_QOS_EUNKOWNPSOBJ = 0x2B10,WSA_QOS_EPOLICYOBJ = 0x2B11,WSA_QOS_EFLOWDESC = 0x2B12,WSA_QOS_EPSFLOWSPEC = 0x2B13,WSA_QOS_EPSFILTERSPEC = 0x2B14,WSA_QOS_ESDMODEOBJ = 0x2B15,WSA_QOS_ESHAPERATEOBJ = 0x2B16,WSA_QOS_RESERVED_PETYPE = 0x2B17,WSA_SECURE_HOST_NOT_FOUND = 0x2B18,WSA_IPSEC_NAME_POLICY_ERROR = 0x2B19,ERROR_IPSEC_QM_POLICY_EXISTS = 0x32C8,ERROR_IPSEC_QM_POLICY_NOT_FOUND = 0x32C9,ERROR_IPSEC_QM_POLICY_IN_USE = 0x32CA,ERROR_IPSEC_MM_POLICY_EXISTS = 0x32CB,ERROR_IPSEC_MM_POLICY_NOT_FOUND = 0x32CC,ERROR_IPSEC_MM_POLICY_IN_USE = 0x32CD,ERROR_IPSEC_MM_FILTER_EXISTS = 0x32CE,ERROR_IPSEC_MM_FILTER_NOT_FOUND = 0x32CF,ERROR_IPSEC_TRANSPORT_FILTER_EXISTS = 0x32D0,ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND = 0x32D1,ERROR_IPSEC_MM_AUTH_EXISTS = 0x32D2,ERROR_IPSEC_MM_AUTH_NOT_FOUND = 0x32D3,ERROR_IPSEC_MM_AUTH_IN_USE = 0x32D4,ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND = 0x32D5,ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND = 0x32D6,ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND = 0x32D7,ERROR_IPSEC_TUNNEL_FILTER_EXISTS = 0x32D8,ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND = 0x32D9,ERROR_IPSEC_MM_FILTER_PENDING_DELETION = 0x32DA,ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION = 0x32DB,ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION = 0x32DC,ERROR_IPSEC_MM_POLICY_PENDING_DELETION = 0x32DD,ERROR_IPSEC_MM_AUTH_PENDING_DELETION = 0x32DE,ERROR_IPSEC_QM_POLICY_PENDING_DELETION = 0x32DF,WARNING_IPSEC_MM_POLICY_PRUNED = 0x32E0,WARNING_IPSEC_QM_POLICY_PRUNED = 0x32E1,ERROR_IPSEC_IKE_NEG_STATUS_BEGIN = 0x35E8,ERROR_IPSEC_IKE_AUTH_FAIL = 0x35E9,ERROR_IPSEC_IKE_ATTRIB_FAIL = 0x35EA,ERROR_IPSEC_IKE_NEGOTIATION_PENDING = 0x35EB,ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR = 0x35EC,ERROR_IPSEC_IKE_TIMED_OUT = 0x35ED,ERROR_IPSEC_IKE_NO_CERT = 0x35EE,ERROR_IPSEC_IKE_SA_DELETED = 0x35EF,ERROR_IPSEC_IKE_SA_REAPED = 0x35F0,ERROR_IPSEC_IKE_MM_ACQUIRE_DROP = 0x35F1,ERROR_IPSEC_IKE_QM_ACQUIRE_DROP = 0x35F2,ERROR_IPSEC_IKE_QUEUE_DROP_MM = 0x35F3,ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM = 0x35F4,ERROR_IPSEC_IKE_DROP_NO_RESPONSE = 0x35F5,ERROR_IPSEC_IKE_MM_DELAY_DROP = 0x35F6,ERROR_IPSEC_IKE_QM_DELAY_DROP = 0x35F7,ERROR_IPSEC_IKE_ERROR = 0x35F8,ERROR_IPSEC_IKE_CRL_FAILED = 0x35F9,ERROR_IPSEC_IKE_INVALID_KEY_USAGE = 0x35FA,ERROR_IPSEC_IKE_INVALID_CERT_TYPE = 0x35FB,ERROR_IPSEC_IKE_NO_PRIVATE_KEY = 0x35FC,ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY = 0x35FD,ERROR_IPSEC_IKE_DH_FAIL = 0x35FE,ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED = 0x35FF,ERROR_IPSEC_IKE_INVALID_HEADER = 0x3600,ERROR_IPSEC_IKE_NO_POLICY = 0x3601,ERROR_IPSEC_IKE_INVALID_SIGNATURE = 0x3602,ERROR_IPSEC_IKE_KERBEROS_ERROR = 0x3603,ERROR_IPSEC_IKE_NO_PUBLIC_KEY = 0x3604,ERROR_IPSEC_IKE_PROCESS_ERR = 0x3605,ERROR_IPSEC_IKE_PROCESS_ERR_SA = 0x3606,ERROR_IPSEC_IKE_PROCESS_ERR_PROP = 0x3607,ERROR_IPSEC_IKE_PROCESS_ERR_TRANS = 0x3608,ERROR_IPSEC_IKE_PROCESS_ERR_KE = 0x3609,ERROR_IPSEC_IKE_PROCESS_ERR_ID = 0x360A,ERROR_IPSEC_IKE_PROCESS_ERR_CERT = 0x360B,ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ = 0x360C,ERROR_IPSEC_IKE_PROCESS_ERR_HASH = 0x360D,ERROR_IPSEC_IKE_PROCESS_ERR_SIG = 0x360E,ERROR_IPSEC_IKE_PROCESS_ERR_NONCE = 0x360F,ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY = 0x3610,ERROR_IPSEC_IKE_PROCESS_ERR_DELETE = 0x3611,ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR = 0x3612,ERROR_IPSEC_IKE_INVALID_PAYLOAD = 0x3613,ERROR_IPSEC_IKE_LOAD_SOFT_SA = 0x3614,ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN = 0x3615,ERROR_IPSEC_IKE_INVALID_COOKIE = 0x3616,ERROR_IPSEC_IKE_NO_PEER_CERT = 0x3617,ERROR_IPSEC_IKE_PEER_CRL_FAILED = 0x3618,ERROR_IPSEC_IKE_POLICY_CHANGE = 0x3619,ERROR_IPSEC_IKE_NO_MM_POLICY = 0x361A,ERROR_IPSEC_IKE_NOTCBPRIV = 0x361B,ERROR_IPSEC_IKE_SECLOADFAIL = 0x361C,ERROR_IPSEC_IKE_FAILSSPINIT = 0x361D,ERROR_IPSEC_IKE_FAILQUERYSSP = 0x361E,ERROR_IPSEC_IKE_SRVACQFAIL = 0x361F,ERROR_IPSEC_IKE_SRVQUERYCRED = 0x3620,ERROR_IPSEC_IKE_GETSPIFAIL = 0x3621,ERROR_IPSEC_IKE_INVALID_FILTER = 0x3622,ERROR_IPSEC_IKE_OUT_OF_MEMORY = 0x3623,ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED = 0x3624,ERROR_IPSEC_IKE_INVALID_POLICY = 0x3625,ERROR_IPSEC_IKE_UNKNOWN_DOI = 0x3626,ERROR_IPSEC_IKE_INVALID_SITUATION = 0x3627,ERROR_IPSEC_IKE_DH_FAILURE = 0x3628,ERROR_IPSEC_IKE_INVALID_GROUP = 0x3629,ERROR_IPSEC_IKE_ENCRYPT = 0x362A,ERROR_IPSEC_IKE_DECRYPT = 0x362B,ERROR_IPSEC_IKE_POLICY_MATCH = 0x362C,ERROR_IPSEC_IKE_UNSUPPORTED_ID = 0x362D,ERROR_IPSEC_IKE_INVALID_HASH = 0x362E,ERROR_IPSEC_IKE_INVALID_HASH_ALG = 0x362F,ERROR_IPSEC_IKE_INVALID_HASH_SIZE = 0x3630,ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG = 0x3631,ERROR_IPSEC_IKE_INVALID_AUTH_ALG = 0x3632,ERROR_IPSEC_IKE_INVALID_SIG = 0x3633,ERROR_IPSEC_IKE_LOAD_FAILED = 0x3634,ERROR_IPSEC_IKE_RPC_DELETE = 0x3635,ERROR_IPSEC_IKE_BENIGN_REINIT = 0x3636,ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY = 0x3637,ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION = 0x3638,ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN = 0x3639,ERROR_IPSEC_IKE_MM_LIMIT = 0x363A,ERROR_IPSEC_IKE_NEGOTIATION_DISABLED = 0x363B,ERROR_IPSEC_IKE_QM_LIMIT = 0x363C,ERROR_IPSEC_IKE_MM_EXPIRED = 0x363D,ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID = 0x363E,ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH = 0x363F,ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID = 0x3640,ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD = 0x3641,ERROR_IPSEC_IKE_DOS_COOKIE_SENT = 0x3642,ERROR_IPSEC_IKE_SHUTTING_DOWN = 0x3643,ERROR_IPSEC_IKE_CGA_AUTH_FAILED = 0x3644,ERROR_IPSEC_IKE_PROCESS_ERR_NATOA = 0x3645,ERROR_IPSEC_IKE_INVALID_MM_FOR_QM = 0x3646,ERROR_IPSEC_IKE_QM_EXPIRED = 0x3647,ERROR_IPSEC_IKE_TOO_MANY_FILTERS = 0x3648,ERROR_IPSEC_IKE_NEG_STATUS_END = 0x3649,ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL = 0x364A,ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE = 0x364B,ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING = 0x364C,ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING = 0x364D,ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS = 0x364E,ERROR_IPSEC_IKE_RATELIMIT_DROP = 0x364F,ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE = 0x3650,ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE = 0x3651,ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE = 0x3652,ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY = 0x3653,ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE = 0x3654,ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END = 0x3655,ERROR_IPSEC_BAD_SPI = 0x3656,ERROR_IPSEC_SA_LIFETIME_EXPIRED = 0x3657,ERROR_IPSEC_WRONG_SA = 0x3658,ERROR_IPSEC_REPLAY_CHECK_FAILED = 0x3659,ERROR_IPSEC_INVALID_PACKET = 0x365A,ERROR_IPSEC_INTEGRITY_CHECK_FAILED = 0x365B,ERROR_IPSEC_CLEAR_TEXT_DROP = 0x365C,ERROR_IPSEC_AUTH_FIREWALL_DROP = 0x365D,ERROR_IPSEC_THROTTLE_DROP = 0x365E,ERROR_IPSEC_DOSP_BLOCK = 0x3665,ERROR_IPSEC_DOSP_RECEIVED_MULTICAST = 0x3666,ERROR_IPSEC_DOSP_INVALID_PACKET = 0x3667,ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED = 0x3668,ERROR_IPSEC_DOSP_MAX_ENTRIES = 0x3669,ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED = 0x366A,ERROR_IPSEC_DOSP_NOT_INSTALLED = 0x366B,ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES = 0x366C,ERROR_SXS_SECTION_NOT_FOUND = 0x36B0,ERROR_SXS_CANT_GEN_ACTCTX = 0x36B1,ERROR_SXS_INVALID_ACTCTXDATA_FORMAT = 0x36B2,ERROR_SXS_ASSEMBLY_NOT_FOUND = 0x36B3,ERROR_SXS_MANIFEST_FORMAT_ERROR = 0x36B4,ERROR_SXS_MANIFEST_PARSE_ERROR = 0x36B5,ERROR_SXS_ACTIVATION_CONTEXT_DISABLED = 0x36B6,ERROR_SXS_KEY_NOT_FOUND = 0x36B7,ERROR_SXS_VERSION_CONFLICT = 0x36B8,ERROR_SXS_WRONG_SECTION_TYPE = 0x36B9,ERROR_SXS_THREAD_QUERIES_DISABLED = 0x36BA,ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET = 0x36BB,ERROR_SXS_UNKNOWN_ENCODING_GROUP = 0x36BC,ERROR_SXS_UNKNOWN_ENCODING = 0x36BD,ERROR_SXS_INVALID_XML_NAMESPACE_URI = 0x36BE,ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED = 0x36BF,ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED = 0x36C0,ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE = 0x36C1,ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE = 0x36C2,ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE = 0x36C3,ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT = 0x36C4,ERROR_SXS_DUPLICATE_DLL_NAME = 0x36C5,ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME = 0x36C6,ERROR_SXS_DUPLICATE_CLSID = 0x36C7,ERROR_SXS_DUPLICATE_IID = 0x36C8,ERROR_SXS_DUPLICATE_TLBID = 0x36C9,ERROR_SXS_DUPLICATE_PROGID = 0x36CA,ERROR_SXS_DUPLICATE_ASSEMBLY_NAME = 0x36CB,ERROR_SXS_FILE_HASH_MISMATCH = 0x36CC,ERROR_SXS_POLICY_PARSE_ERROR = 0x36CD,ERROR_SXS_XML_E_MISSINGQUOTE = 0x36CE,ERROR_SXS_XML_E_COMMENTSYNTAX = 0x36CF,ERROR_SXS_XML_E_BADSTARTNAMECHAR = 0x36D0,ERROR_SXS_XML_E_BADNAMECHAR = 0x36D1,ERROR_SXS_XML_E_BADCHARINSTRING = 0x36D2,ERROR_SXS_XML_E_XMLDECLSYNTAX = 0x36D3,ERROR_SXS_XML_E_BADCHARDATA = 0x36D4,ERROR_SXS_XML_E_MISSINGWHITESPACE = 0x36D5,ERROR_SXS_XML_E_EXPECTINGTAGEND = 0x36D6,ERROR_SXS_XML_E_MISSINGSEMICOLON = 0x36D7,ERROR_SXS_XML_E_UNBALANCEDPAREN = 0x36D8,ERROR_SXS_XML_E_INTERNALERROR = 0x36D9,ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE = 0x36DA,ERROR_SXS_XML_E_INCOMPLETE_ENCODING = 0x36DB,ERROR_SXS_XML_E_MISSING_PAREN = 0x36DC,ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE = 0x36DD,ERROR_SXS_XML_E_MULTIPLE_COLONS = 0x36DE,ERROR_SXS_XML_E_INVALID_DECIMAL = 0x36DF,ERROR_SXS_XML_E_INVALID_HEXIDECIMAL = 0x36E0,ERROR_SXS_XML_E_INVALID_UNICODE = 0x36E1,ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK = 0x36E2,ERROR_SXS_XML_E_UNEXPECTEDENDTAG = 0x36E3,ERROR_SXS_XML_E_UNCLOSEDTAG = 0x36E4,ERROR_SXS_XML_E_DUPLICATEATTRIBUTE = 0x36E5,ERROR_SXS_XML_E_MULTIPLEROOTS = 0x36E6,ERROR_SXS_XML_E_INVALIDATROOTLEVEL = 0x36E7,ERROR_SXS_XML_E_BADXMLDECL = 0x36E8,ERROR_SXS_XML_E_MISSINGROOT = 0x36E9,ERROR_SXS_XML_E_UNEXPECTEDEOF = 0x36EA,ERROR_SXS_XML_E_BADPEREFINSUBSET = 0x36EB,ERROR_SXS_XML_E_UNCLOSEDSTARTTAG = 0x36EC,ERROR_SXS_XML_E_UNCLOSEDENDTAG = 0x36ED,ERROR_SXS_XML_E_UNCLOSEDSTRING = 0x36EE,ERROR_SXS_XML_E_UNCLOSEDCOMMENT = 0x36EF,ERROR_SXS_XML_E_UNCLOSEDDECL = 0x36F0,ERROR_SXS_XML_E_UNCLOSEDCDATA = 0x36F1,ERROR_SXS_XML_E_RESERVEDNAMESPACE = 0x36F2,ERROR_SXS_XML_E_INVALIDENCODING = 0x36F3,ERROR_SXS_XML_E_INVALIDSWITCH = 0x36F4,ERROR_SXS_XML_E_BADXMLCASE = 0x36F5,ERROR_SXS_XML_E_INVALID_STANDALONE = 0x36F6,ERROR_SXS_XML_E_UNEXPECTED_STANDALONE = 0x36F7,ERROR_SXS_XML_E_INVALID_VERSION = 0x36F8,ERROR_SXS_XML_E_MISSINGEQUALS = 0x36F9,ERROR_SXS_PROTECTION_RECOVERY_FAILED = 0x36FA,ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT = 0x36FB,ERROR_SXS_PROTECTION_CATALOG_NOT_VALID = 0x36FC,ERROR_SXS_UNTRANSLATABLE_HRESULT = 0x36FD,ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING = 0x36FE,ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE = 0x36FF,ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME = 0x3700,ERROR_SXS_ASSEMBLY_MISSING = 0x3701,ERROR_SXS_CORRUPT_ACTIVATION_STACK = 0x3702,ERROR_SXS_CORRUPTION = 0x3703,ERROR_SXS_EARLY_DEACTIVATION = 0x3704,ERROR_SXS_INVALID_DEACTIVATION = 0x3705,ERROR_SXS_MULTIPLE_DEACTIVATION = 0x3706,ERROR_SXS_PROCESS_TERMINATION_REQUESTED = 0x3707,ERROR_SXS_RELEASE_ACTIVATION_CONTEXT = 0x3708,ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = 0x3709,ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE = 0x370A,ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME = 0x370B,ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = 0x370C,ERROR_SXS_IDENTITY_PARSE_ERROR = 0x370D,ERROR_MALFORMED_SUBSTITUTION_STRING = 0x370E,ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN = 0x370F,ERROR_UNMAPPED_SUBSTITUTION_STRING = 0x3710,ERROR_SXS_ASSEMBLY_NOT_LOCKED = 0x3711,ERROR_SXS_COMPONENT_STORE_CORRUPT = 0x3712,ERROR_ADVANCED_INSTALLER_FAILED = 0x3713,ERROR_XML_ENCODING_MISMATCH = 0x3714,ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT = 0x3715,ERROR_SXS_IDENTITIES_DIFFERENT = 0x3716,ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = 0x3717,ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY = 0x3718,ERROR_SXS_MANIFEST_TOO_BIG = 0x3719,ERROR_SXS_SETTING_NOT_REGISTERED = 0x371A,ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE = 0x371B,ERROR_SMI_PRIMITIVE_INSTALLER_FAILED = 0x371C,ERROR_GENERIC_COMMAND_FAILED = 0x371D,ERROR_SXS_FILE_HASH_MISSING = 0x371E,ERROR_EVT_INVALID_CHANNEL_PATH = 0x3A98,ERROR_EVT_INVALID_QUERY = 0x3A99,ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND = 0x3A9A,ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND = 0x3A9B,ERROR_EVT_INVALID_PUBLISHER_NAME = 0x3A9C,ERROR_EVT_INVALID_EVENT_DATA = 0x3A9D,ERROR_EVT_CHANNEL_NOT_FOUND = 0x3A9F,ERROR_EVT_MALFORMED_XML_TEXT = 0x3AA0,ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL = 0x3AA1,ERROR_EVT_CONFIGURATION_ERROR = 0x3AA2,ERROR_EVT_QUERY_RESULT_STALE = 0x3AA3,ERROR_EVT_QUERY_RESULT_INVALID_POSITION = 0x3AA4,ERROR_EVT_NON_VALIDATING_MSXML = 0x3AA5,ERROR_EVT_FILTER_ALREADYSCOPED = 0x3AA6,ERROR_EVT_FILTER_NOTELTSET = 0x3AA7,ERROR_EVT_FILTER_INVARG = 0x3AA8,ERROR_EVT_FILTER_INVTEST = 0x3AA9,ERROR_EVT_FILTER_INVTYPE = 0x3AAA,ERROR_EVT_FILTER_PARSEERR = 0x3AAB,ERROR_EVT_FILTER_UNSUPPORTEDOP = 0x3AAC,ERROR_EVT_FILTER_UNEXPECTEDTOKEN = 0x3AAD,ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL = 0x3AAE,ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE = 0x3AAF,ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE = 0x3AB0,ERROR_EVT_CHANNEL_CANNOT_ACTIVATE = 0x3AB1,ERROR_EVT_FILTER_TOO_COMPLEX = 0x3AB2,ERROR_EVT_MESSAGE_NOT_FOUND = 0x3AB3,ERROR_EVT_MESSAGE_ID_NOT_FOUND = 0x3AB4,ERROR_EVT_UNRESOLVED_VALUE_INSERT = 0x3AB5,ERROR_EVT_UNRESOLVED_PARAMETER_INSERT = 0x3AB6,ERROR_EVT_MAX_INSERTS_REACHED = 0x3AB7,ERROR_EVT_EVENT_DEFINITION_NOT_FOUND = 0x3AB8,ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND = 0x3AB9,ERROR_EVT_VERSION_TOO_OLD = 0x3ABA,ERROR_EVT_VERSION_TOO_NEW = 0x3ABB,ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY = 0x3ABC,ERROR_EVT_PUBLISHER_DISABLED = 0x3ABD,ERROR_EVT_FILTER_OUT_OF_RANGE = 0x3ABE,ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE = 0x3AE8,ERROR_EC_LOG_DISABLED = 0x3AE9,ERROR_EC_CIRCULAR_FORWARDING = 0x3AEA,ERROR_EC_CREDSTORE_FULL = 0x3AEB,ERROR_EC_CRED_NOT_FOUND = 0x3AEC,ERROR_EC_NO_ACTIVE_CHANNEL = 0x3AED,ERROR_MUI_FILE_NOT_FOUND = 0x3AFC,ERROR_MUI_INVALID_FILE = 0x3AFD,ERROR_MUI_INVALID_RC_CONFIG = 0x3AFE,ERROR_MUI_INVALID_LOCALE_NAME = 0x3AFF,ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME = 0x3B00,ERROR_MUI_FILE_NOT_LOADED = 0x3B01,ERROR_RESOURCE_ENUM_USER_STOP = 0x3B02,ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED = 0x3B03,ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME = 0x3B04,ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE = 0x3B06,ERROR_MRM_INVALID_PRICONFIG = 0x3B07,ERROR_MRM_INVALID_FILE_TYPE = 0x3B08,ERROR_MRM_UNKNOWN_QUALIFIER = 0x3B09,ERROR_MRM_INVALID_QUALIFIER_VALUE = 0x3B0A,ERROR_MRM_NO_CANDIDATE = 0x3B0B,ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE = 0x3B0C,ERROR_MRM_RESOURCE_TYPE_MISMATCH = 0x3B0D,ERROR_MRM_DUPLICATE_MAP_NAME = 0x3B0E,ERROR_MRM_DUPLICATE_ENTRY = 0x3B0F,ERROR_MRM_INVALID_RESOURCE_IDENTIFIER = 0x3B10,ERROR_MRM_FILEPATH_TOO_LONG = 0x3B11,ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE = 0x3B12,ERROR_MRM_INVALID_PRI_FILE = 0x3B16,ERROR_MRM_NAMED_RESOURCE_NOT_FOUND = 0x3B17,ERROR_MRM_MAP_NOT_FOUND = 0x3B1F,ERROR_MRM_UNSUPPORTED_PROFILE_TYPE = 0x3B20,ERROR_MRM_INVALID_QUALIFIER_OPERATOR = 0x3B21,ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE = 0x3B22,ERROR_MRM_AUTOMERGE_ENABLED = 0x3B23,ERROR_MRM_TOO_MANY_RESOURCES = 0x3B24,ERROR_MCA_INVALID_CAPABILITIES_STRING = 0x3B60,ERROR_MCA_INVALID_VCP_VERSION = 0x3B61,ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = 0x3B62,ERROR_MCA_MCCS_VERSION_MISMATCH = 0x3B63,ERROR_MCA_UNSUPPORTED_MCCS_VERSION = 0x3B64,ERROR_MCA_INTERNAL_ERROR = 0x3B65,ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = 0x3B66,ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE = 0x3B67,ERROR_AMBIGUOUS_SYSTEM_DEVICE = 0x3B92,ERROR_SYSTEM_DEVICE_NOT_FOUND = 0x3BC3,ERROR_HASH_NOT_SUPPORTED = 0x3BC4,ERROR_HASH_NOT_PRESENT = 0x3BC5,ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED = 0x3BD9,ERROR_GPIO_CLIENT_INFORMATION_INVALID = 0x3BDA,ERROR_GPIO_VERSION_NOT_SUPPORTED = 0x3BDB,ERROR_GPIO_INVALID_REGISTRATION_PACKET = 0x3BDC,ERROR_GPIO_OPERATION_DENIED = 0x3BDD,ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE = 0x3BDE,ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED = 0x3BDF,ERROR_CANNOT_SWITCH_RUNLEVEL = 0x3C28,ERROR_INVALID_RUNLEVEL_SETTING = 0x3C29,ERROR_RUNLEVEL_SWITCH_TIMEOUT = 0x3C2A,ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT = 0x3C2B,ERROR_RUNLEVEL_SWITCH_IN_PROGRESS = 0x3C2C,ERROR_SERVICES_FAILED_AUTOSTART = 0x3C2D,ERROR_COM_TASK_STOP_PENDING = 0x3C8D,ERROR_INSTALL_OPEN_PACKAGE_FAILED = 0x3CF0,ERROR_INSTALL_PACKAGE_NOT_FOUND = 0x3CF1,ERROR_INSTALL_INVALID_PACKAGE = 0x3CF2,ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED = 0x3CF3,ERROR_INSTALL_OUT_OF_DISK_SPACE = 0x3CF4,ERROR_INSTALL_NETWORK_FAILURE = 0x3CF5,ERROR_INSTALL_REGISTRATION_FAILURE = 0x3CF6,ERROR_INSTALL_DEREGISTRATION_FAILURE = 0x3CF7,ERROR_INSTALL_CANCEL = 0x3CF8,ERROR_INSTALL_FAILED = 0x3CF9,ERROR_REMOVE_FAILED = 0x3CFA,ERROR_PACKAGE_ALREADY_EXISTS = 0x3CFB,ERROR_NEEDS_REMEDIATION = 0x3CFC,ERROR_INSTALL_PREREQUISITE_FAILED = 0x3CFD,ERROR_PACKAGE_REPOSITORY_CORRUPTED = 0x3CFE,ERROR_INSTALL_POLICY_FAILURE = 0x3CFF,ERROR_PACKAGE_UPDATING = 0x3D00,ERROR_DEPLOYMENT_BLOCKED_BY_POLICY = 0x3D01,ERROR_PACKAGES_IN_USE = 0x3D02,ERROR_RECOVERY_FILE_CORRUPT = 0x3D03,ERROR_INVALID_STAGED_SIGNATURE = 0x3D04,ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED = 0x3D05,ERROR_INSTALL_PACKAGE_DOWNGRADE = 0x3D06,ERROR_SYSTEM_NEEDS_REMEDIATION = 0x3D07,ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN = 0x3D08,ERROR_RESILIENCY_FILE_CORRUPT = 0x3D09,ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING = 0x3D0A,APPMODEL_ERROR_NO_PACKAGE = 0x3D54,APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT = 0x3D55,APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT = 0x3D56,APPMODEL_ERROR_NO_APPLICATION = 0x3D57,ERROR_STATE_LOAD_STORE_FAILED = 0x3DB8,ERROR_STATE_GET_VERSION_FAILED = 0x3DB9,ERROR_STATE_SET_VERSION_FAILED = 0x3DBA,ERROR_STATE_STRUCTURED_RESET_FAILED = 0x3DBB,ERROR_STATE_OPEN_CONTAINER_FAILED = 0x3DBC,ERROR_STATE_CREATE_CONTAINER_FAILED = 0x3DBD,ERROR_STATE_DELETE_CONTAINER_FAILED = 0x3DBE,ERROR_STATE_READ_SETTING_FAILED = 0x3DBF,ERROR_STATE_WRITE_SETTING_FAILED = 0x3DC0,ERROR_STATE_DELETE_SETTING_FAILED = 0x3DC1,ERROR_STATE_QUERY_SETTING_FAILED = 0x3DC2,ERROR_STATE_READ_COMPOSITE_SETTING_FAILED = 0x3DC3,ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED = 0x3DC4,ERROR_STATE_ENUMERATE_CONTAINER_FAILED = 0x3DC5,ERROR_STATE_ENUMERATE_SETTINGS_FAILED = 0x3DC6,ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = 0x3DC7,ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED = 0x3DC8,ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED = 0x3DC9,ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED = 0x3DCA,ERROR_API_UNAVAILABLE = 0x3DE1,STORE_ERROR_UNLICENSED = 0x3DF5,STORE_ERROR_UNLICENSED_USER = 0x3DF6,};
enum MACRO_EVENT {EVENT_TRACING_FATAL_ERROR = 0x11D,};
enum MACRO_EXFAT {EXFAT_FILE_SYSTEM = 0x12C,};
enum MACRO_EXTRA {EXTRA_EXIT_POINT_DELETED = 0xC00037E0,EXTRA_EXIT_POINT_NOT_DELETED = 0xC00037E1,};
enum MACRO_E_MBN {E_MBN_CONTEXT_NOT_ACTIVATED = 0x80548201,E_MBN_BAD_SIM = 0x80548202,E_MBN_DATA_CLASS_NOT_AVAILABLE = 0x80548203,E_MBN_INVALID_ACCESS_STRING = 0x80548204,E_MBN_MAX_ACTIVATED_CONTEXTS = 0x80548205,E_MBN_PACKET_SVC_DETACHED = 0x80548206,E_MBN_PROVIDER_NOT_VISIBLE = 0x80548207,E_MBN_RADIO_POWER_OFF = 0x80548208,E_MBN_SERVICE_NOT_ACTIVATED = 0x80548209,E_MBN_SIM_NOT_INSERTED = 0x8054820A,E_MBN_VOICE_CALL_IN_PROGRESS = 0x8054820B,E_MBN_INVALID_CACHE = 0x8054820C,E_MBN_NOT_REGISTERED = 0x8054820D,E_MBN_PROVIDERS_NOT_FOUND = 0x8054820E,E_MBN_PIN_NOT_SUPPORTED = 0x8054820F,E_MBN_PIN_REQUIRED = 0x80548210,E_MBN_PIN_DISABLED = 0x80548211,E_MBN_FAILURE = 0x80548212,E_MBN_INVALID_PROFILE = 0x80548218,E_MBN_DEFAULT_PROFILE_EXIST = 0x80548219,E_MBN_SMS_ENCODING_NOT_SUPPORTED = 0x80548220,E_MBN_SMS_FILTER_NOT_SUPPORTED = 0x80548221,E_MBN_SMS_INVALID_MEMORY_INDEX = 0x80548222,E_MBN_SMS_LANG_NOT_SUPPORTED = 0x80548223,E_MBN_SMS_MEMORY_FAILURE = 0x80548224,E_MBN_SMS_NETWORK_TIMEOUT = 0x80548225,E_MBN_SMS_UNKNOWN_SMSC_ADDRESS = 0x80548226,E_MBN_SMS_FORMAT_NOT_SUPPORTED = 0x80548227,E_MBN_SMS_OPERATION_NOT_ALLOWED = 0x80548228,E_MBN_SMS_MEMORY_FULL = 0x80548229,};
enum MACRO_FATAL {FATAL_ABNORMAL_RESET_ERROR = 0x14C,};
enum MACRO_FLTFL {FLTFL_AGGREGATE_INFO_IS_MINIFILTER = 0x1,FLTFL_AGGREGATE_INFO_IS_LEGACYFILTER = 0x2,FLTFL_ASI_IS_MINIFILTER = 0x1,FLTFL_ASI_IS_LEGACYFILTER = 0x2,FLTFL_VSI_DETACHED_VOLUME = 0x1,FLTFL_IASI_IS_MINIFILTER = 0x1,FLTFL_IASI_IS_LEGACYFILTER = 0x2,FLTFL_IASIM_DETACHED_VOLUME = 0x1,FLTFL_IASIL_DETACHED_VOLUME = 0x1,};
enum MACRO_FLUSH {FLUSH_FLAGS_FILE_DATA_ONLY = 0x1,FLUSH_FLAGS_NO_SYNC = 0x2,};
enum MACRO_FRAME {FRAME_FPO = 0,FRAME_TRAP = 1,FRAME_TSS = 2,FRAME_NONFPO = 3,};
enum MACRO_FSCTL {FSCTL_REQUEST_OPLOCK_LEVEL_1 = 589824,FSCTL_REQUEST_OPLOCK_LEVEL_2 = 589828,FSCTL_REQUEST_BATCH_OPLOCK = 589832,FSCTL_OPLOCK_BREAK_ACKNOWLEDGE = 589836,FSCTL_OPBATCH_ACK_CLOSE_PENDING = 589840,FSCTL_OPLOCK_BREAK_NOTIFY = 589844,FSCTL_LOCK_VOLUME = 589848,FSCTL_UNLOCK_VOLUME = 589852,FSCTL_DISMOUNT_VOLUME = 589856,FSCTL_IS_VOLUME_MOUNTED = 589864,FSCTL_IS_PATHNAME_VALID = 589868,FSCTL_MARK_VOLUME_DIRTY = 589872,FSCTL_QUERY_RETRIEVAL_POINTERS = 589883,FSCTL_GET_COMPRESSION = 589884,FSCTL_SET_COMPRESSION = 639040,FSCTL_SET_BOOTLOADER_ACCESSED = 589903,FSCTL_MARK_AS_SYSTEM_HIVE = 589903,FSCTL_OPLOCK_BREAK_ACK_NO_2 = 589904,FSCTL_INVALIDATE_VOLUMES = 589908,FSCTL_QUERY_FAT_BPB = 589912,FSCTL_REQUEST_FILTER_OPLOCK = 589916,FSCTL_FILESYSTEM_GET_STATISTICS = 589920,FSCTL_GET_NTFS_VOLUME_DATA = 589924,FSCTL_GET_NTFS_FILE_RECORD = 589928,FSCTL_GET_VOLUME_BITMAP = 589935,FSCTL_GET_RETRIEVAL_POINTERS = 589939,FSCTL_MOVE_FILE = 589940,FSCTL_IS_VOLUME_DIRTY = 589944,FSCTL_ALLOW_EXTENDED_DASD_IO = 589955,FSCTL_FIND_FILES_BY_SID = 589967,FSCTL_SET_OBJECT_ID = 589976,FSCTL_GET_OBJECT_ID = 589980,FSCTL_DELETE_OBJECT_ID = 589984,FSCTL_SET_REPARSE_POINT = 589988,FSCTL_GET_REPARSE_POINT = 589992,FSCTL_DELETE_REPARSE_POINT = 589996,FSCTL_ENUM_USN_DATA = 590003,FSCTL_SECURITY_ID_CHECK = 606391,FSCTL_READ_USN_JOURNAL = 590011,FSCTL_SET_OBJECT_ID_EXTENDED = 590012,FSCTL_CREATE_OR_GET_OBJECT_ID = 590016,FSCTL_SET_SPARSE = 590020,FSCTL_SET_ZERO_DATA = 622792,FSCTL_QUERY_ALLOCATED_RANGES = 606415,FSCTL_ENABLE_UPGRADE = 622800,FSCTL_SET_ENCRYPTION = 590039,FSCTL_ENCRYPTION_FSCTL_IO = 590043,FSCTL_WRITE_RAW_ENCRYPTED = 590047,FSCTL_READ_RAW_ENCRYPTED = 590051,FSCTL_CREATE_USN_JOURNAL = 590055,FSCTL_READ_FILE_USN_DATA = 590059,FSCTL_WRITE_USN_CLOSE_RECORD = 590063,FSCTL_EXTEND_VOLUME = 590064,FSCTL_QUERY_USN_JOURNAL = 590068,FSCTL_DELETE_USN_JOURNAL = 590072,FSCTL_MARK_HANDLE = 590076,FSCTL_SIS_COPYFILE = 590080,FSCTL_SIS_LINK_FILES = 639236,FSCTL_RECALL_FILE = 590103,FSCTL_READ_FROM_PLEX = 606494,FSCTL_FILE_PREFETCH = 590112,FSCTL_MAKE_MEDIA_COMPATIBLE = 622896,FSCTL_SET_DEFECT_MANAGEMENT = 622900,FSCTL_QUERY_SPARING_INFO = 590136,FSCTL_QUERY_ON_DISK_VOLUME_INFO = 590140,FSCTL_SET_VOLUME_COMPRESSION_STATE = 590144,FSCTL_TXFS_MODIFY_RM = 622916,FSCTL_TXFS_QUERY_RM_INFORMATION = 606536,FSCTL_TXFS_ROLLFORWARD_REDO = 622928,FSCTL_TXFS_ROLLFORWARD_UNDO = 622932,FSCTL_TXFS_START_RM = 622936,FSCTL_TXFS_SHUTDOWN_RM = 622940,FSCTL_TXFS_READ_BACKUP_INFORMATION = 606560,FSCTL_TXFS_WRITE_BACKUP_INFORMATION = 622948,FSCTL_TXFS_CREATE_SECONDARY_RM = 622952,FSCTL_TXFS_GET_METADATA_INFO = 606572,FSCTL_TXFS_GET_TRANSACTED_VERSION = 606576,FSCTL_TXFS_SAVEPOINT_INFORMATION = 622968,FSCTL_TXFS_CREATE_MINIVERSION = 622972,FSCTL_TXFS_TRANSACTION_ACTIVE = 606604,FSCTL_SET_ZERO_ON_DEALLOCATION = 590228,FSCTL_SET_REPAIR = 590232,FSCTL_GET_REPAIR = 590236,FSCTL_WAIT_FOR_REPAIR = 590240,FSCTL_INITIATE_REPAIR = 590248,FSCTL_CSC_INTERNAL = 590255,FSCTL_SHRINK_VOLUME = 590256,FSCTL_SET_SHORT_NAME_BEHAVIOR = 590260,FSCTL_DFSR_SET_GHOST_HANDLE_STATE = 590264,FSCTL_TXFS_LIST_TRANSACTION_LOCKED_FILES = 606688,FSCTL_TXFS_LIST_TRANSACTIONS = 606692,FSCTL_QUERY_PAGEFILE_ENCRYPTION = 590312,FSCTL_RESET_VOLUME_ALLOCATION_HINTS = 590316,FSCTL_QUERY_DEPENDENT_VOLUME = 590320,FSCTL_SD_GLOBAL_CHANGE = 590324,FSCTL_TXFS_READ_BACKUP_INFORMATION2 = 590328,FSCTL_LOOKUP_STREAM_FROM_CLUSTER = 590332,FSCTL_TXFS_WRITE_BACKUP_INFORMATION2 = 590336,FSCTL_FILE_TYPE_NOTIFICATION = 590340,FSCTL_FILE_LEVEL_TRIM = 623112,FSCTL_GET_BOOT_AREA_INFO = 590384,FSCTL_GET_RETRIEVAL_POINTER_BASE = 590388,FSCTL_SET_PERSISTENT_VOLUME_STATE = 590392,FSCTL_QUERY_PERSISTENT_VOLUME_STATE = 590396,FSCTL_REQUEST_OPLOCK = 590400,FSCTL_CSV_TUNNEL_REQUEST = 590404,FSCTL_IS_CSV_FILE = 590408,FSCTL_QUERY_FILE_SYSTEM_RECOGNITION = 590412,FSCTL_CSV_GET_VOLUME_PATH_NAME = 590416,FSCTL_CSV_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT = 590420,FSCTL_CSV_GET_VOLUME_PATH_NAMES_FOR_VOLUME_NAME = 590424,FSCTL_IS_FILE_ON_CSV_VOLUME = 590428,FSCTL_CORRUPTION_HANDLING = 590432,FSCTL_OFFLOAD_READ = 606820,FSCTL_OFFLOAD_WRITE = 623208,FSCTL_CSV_INTERNAL = 590444,FSCTL_SET_PURGE_FAILURE_MODE = 590448,FSCTL_QUERY_FILE_LAYOUT = 590455,FSCTL_IS_VOLUME_OWNED_BYCSVFS = 590456,FSCTL_GET_INTEGRITY_INFORMATION = 590460,FSCTL_SET_INTEGRITY_INFORMATION = 639616,FSCTL_QUERY_FILE_REGIONS = 590468,FSCTL_DEDUP_FILE = 590484,FSCTL_DEDUP_QUERY_FILE_HASHES = 606875,FSCTL_RKF_INTERNAL = 590511,FSCTL_SCRUB_DATA = 590512,FSCTL_REPAIR_COPIES = 639668,FSCTL_DISABLE_LOCAL_BUFFERING = 590520,FSCTL_CSV_MGMT_LOCK = 590524,FSCTL_CSV_QUERY_DOWN_LEVEL_FILE_SYSTEM_CHARACTERISTICS = 590528,FSCTL_ADVANCE_FILE_ID = 590532,FSCTL_CSV_SYNC_TUNNEL_REQUEST = 590536,FSCTL_CSV_QUERY_VETO_FILE_DIRECT_IO = 590540,FSCTL_WRITE_USN_REASON = 590544,FSCTL_CSV_CONTROL = 590548,FSCTL_GET_REFS_VOLUME_DATA = 590552,FSCTL_CSV_H_BREAKING_SYNC_TUNNEL_REQUEST = 590564,};
enum MACRO_FSRTL {FSRTL_FCB_HEADER_V0 = 0x0,FSRTL_FCB_HEADER_V1 = 0x1,FSRTL_FCB_HEADER_V2 = 0x2,FSRTL_FLAG_FILE_MODIFIED = 0x1,FSRTL_FLAG_FILE_LENGTH_CHANGED = 0x2,FSRTL_FLAG_LIMIT_MODIFIED_PAGES = 0x4,FSRTL_FLAG_ACQUIRE_MAIN_RSRC_EX = 0x8,FSRTL_FLAG_ACQUIRE_MAIN_RSRC_SH = 0x10,FSRTL_FLAG_USER_MAPPED_FILE = 0x20,FSRTL_FLAG_ADVANCED_HEADER = 0x40,FSRTL_FLAG_EOF_ADVANCE_ACTIVE = 0x80,FSRTL_FLAG2_DO_MODIFIED_WRITE = 0x1,FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS = 0x2,FSRTL_FLAG2_PURGE_WHEN_MAPPED = 0x4,FSRTL_FLAG2_IS_PAGING_FILE = 0x8,FSRTL_FSP_TOP_LEVEL_IRP = 0x1,FSRTL_CACHE_TOP_LEVEL_IRP = 0x2,FSRTL_MOD_WRITE_TOP_LEVEL_IRP = 0x3,FSRTL_FAST_IO_TOP_LEVEL_IRP = 0x4,FSRTL_NETWORK1_TOP_LEVEL_IRP = 0x5,FSRTL_NETWORK2_TOP_LEVEL_IRP = 0x6,FSRTL_MAX_TOP_LEVEL_IRP_FLAG = 0xFFFF,FSRTL_AUXILIARY_FLAG_DEALLOCATE = 0x1,FSRTL_FAT_LEGAL = 0x1,FSRTL_HPFS_LEGAL = 0x2,FSRTL_NTFS_LEGAL = 0x4,FSRTL_WILD_CHARACTER = 0x8,FSRTL_OLE_LEGAL = 0x10,FSRTL_NTFS_STREAM_LEGAL = 0x14,};
enum MACRO_HFILE {HFILE_ERROR = -1,};
enum MACRO_I8042 {I8042_BIT = 1,};
enum MACRO_ICMP6 {ICMP6_MIB_STATS_ID = 4,};
enum MACRO_IMAGE {IMAGE_ADDRESSING_MODE_32BIT = 3,};
enum MACRO_INPUT {INPUT_E_OUT_OF_ORDER = 0x80400000,INPUT_E_REENTRANCY = 0x80400001,INPUT_E_MULTIMODAL = 0x80400002,INPUT_E_PACKET = 0x80400003,INPUT_E_FRAME = 0x80400004,INPUT_E_HISTORY = 0x80400005,INPUT_E_DEVICE_INFO = 0x80400006,INPUT_E_TRANSFORM = 0x80400007,INPUT_E_DEVICE_PROPERTY = 0x80400008,};
enum MACRO_IOCTL {IOCTL_QUERY_DEVICE_POWER_STATE = 0x294000,IOCTL_SET_DEVICE_WAKE = 0x298004,IOCTL_CANCEL_DEVICE_WAKE = 0x298008,};
enum MACRO_IPSEC {IPSEC_OFFLOAD_V2_AUTHENTICATION_MD5 = 0x1,IPSEC_OFFLOAD_V2_AUTHENTICATION_SHA_1 = 0x2,IPSEC_OFFLOAD_V2_AUTHENTICATION_SHA_256 = 0x4,IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_128 = 0x8,IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_192 = 0x10,IPSEC_OFFLOAD_V2_AUTHENTICATION_AES_GCM_256 = 0x20,IPSEC_OFFLOAD_V2_ENCRYPTION_NONE = 0x1,IPSEC_OFFLOAD_V2_ENCRYPTION_DES_CBC = 0x2,IPSEC_OFFLOAD_V2_ENCRYPTION_3_DES_CBC = 0x4,IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_128 = 0x8,IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_192 = 0x10,IPSEC_OFFLOAD_V2_ENCRYPTION_AES_GCM_256 = 0x20,IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_128 = 0x40,IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_192 = 0x80,IPSEC_OFFLOAD_V2_ENCRYPTION_AES_CBC_256 = 0x100,};
enum MACRO_IRQEN {IRQEN_ENABLE = 1,IRQEN_DISABLE = 0,};
enum MACRO_ISCSI {ISCSI_SECURITY_FLAG_TUNNEL_MODE_PREFERRED = 0x40,ISCSI_SECURITY_FLAG_TRANSPORT_MODE_PREFERRED = 0x20,ISCSI_SECURITY_FLAG_PFS_ENABLED = 0x10,ISCSI_SECURITY_FLAG_AGGRESSIVE_MODE_ENABLED = 0x8,ISCSI_SECURITY_FLAG_MAIN_MODE_ENABLED = 0x4,ISCSI_SECURITY_FLAG_IKE_IPSEC_ENABLED = 0x2,ISCSI_SECURITY_FLAG_VALID = 0x1,ISCSI_IP_Address_Type_ID = 0x1,ISCSI_IP_Address_IpV4Address_ID = 0x2,ISCSI_IP_Address_IpV6Address_ID = 0x3,ISCSI_IP_Address_IpV6FlowInfo_ID = 0x4,ISCSI_IP_Address_IpV6ScopeId_ID = 0x5,ISCSI_IP_Address_TextAddress_ID = 0x6,ISCSI_TargetPortal_Address_ID = 0x1,ISCSI_TargetPortal_Reserved_ID = 0x2,ISCSI_TargetPortal_Socket_ID = 0x3,ISCSI_TargetPortalGroup_PortalCount_ID = 0x1,ISCSI_TargetPortalGroup_Portals_ID = 0x2,ISCSI_LOGIN_OPTIONS_HEADER_DIGEST = 0x1,ISCSI_LOGIN_OPTIONS_DATA_DIGEST = 0x2,ISCSI_LOGIN_OPTIONS_MAXIMUM_CONNECTIONS = 0x4,ISCSI_LOGIN_OPTIONS_DEFAULT_TIME_2_WAIT = 0x8,ISCSI_LOGIN_OPTIONS_DEFAULT_TIME_2_RETAIN = 0x10,ISCSI_LOGIN_OPTIONS_USERNAME = 0x20,ISCSI_LOGIN_OPTIONS_PASSWORD = 0x40,ISCSI_LOGIN_OPTIONS_AUTH_TYPE = 0x80,ISCSI_LoginOptions_InformationSpecified_ID = 0x1,ISCSI_LoginOptions_HeaderDigest_ID = 0x2,ISCSI_LoginOptions_DataDigest_ID = 0x3,ISCSI_LoginOptions_MaximumConnections_ID = 0x4,ISCSI_LoginOptions_DefaultTime2Wait_ID = 0x5,ISCSI_LoginOptions_DefaultTime2Retain_ID = 0x6,ISCSI_LOGIN_FLAG_REQUIRE_IPSEC = 0x1,ISCSI_LOGIN_FLAG_MULTIPATH_ENABLED = 0x2,ISCSI_LOGIN_FLAG_RESERVED1 = 0x4,ISCSI_LOGIN_FLAG_ALLOW_PORTAL_HOPPING = 0x8,ISCSI_LOGIN_FLAG_USE_RADIUS_RESPONSE = 0x10,ISCSI_LOGIN_FLAG_USE_RADIUS_VERIFICATION = 0x20,ISCSI_LoginOptions_LoginFlags_ID = 0x7,ISCSI_LoginOptions_AuthType_ID = 0x8,ISCSI_LUNList_TargetLUN_ID = 0x1,ISCSI_LUNList_OSLUN_ID = 0x2,ISCSI_LUNList_Reserved_ID = 0x3,ISCSI_TargetMapping_OSBus_ID = 0x1,ISCSI_TargetMapping_OSTarget_ID = 0x2,ISCSI_TargetMapping_UniqueSessionId_ID = 0x3,ISCSI_TargetMapping_LUNCount_ID = 0x4,ISCSI_TargetMapping_TargetName_ID = 0x5,ISCSI_TargetMapping_FromPersistentLogin_ID = 0x6,ISCSI_TargetMapping_Reserved_ID = 0x7,ISCSI_TargetMapping_LUNList_ID = 0x8,};
enum MACRO_ISOCH {ISOCH_PAYLOAD_100_RATE = 1024,ISOCH_PAYLOAD_200_RATE = 2048,ISOCH_PAYLOAD_400_RATE = 4096,ISOCH_PAYLOAD_800_RATE = 8192,ISOCH_PAYLOAD_1600_RATE = 16384,ISOCH_PAYLOAD_3200_RATE = 32768,};
enum MACRO_ISSUE {ISSUE_BUS_RESET_AFTER_MODIFY = 0x4,};
enum MACRO_JIFMK {JIFMK_SOF0 = 0xFFC0,JIFMK_SOF1 = 0xFFC1,JIFMK_SOF2 = 0xFFC2,JIFMK_SOF3 = 0xFFC3,JIFMK_SOF5 = 0xFFC5,JIFMK_SOF6 = 0xFFC6,JIFMK_SOF7 = 0xFFC7,JIFMK_JPG = 0xFFC8,JIFMK_SOF9 = 0xFFC9,JIFMK_SOF10 = 0xFFCA,JIFMK_SOF11 = 0xFFCB,JIFMK_SOF13 = 0xFFCD,JIFMK_SOF14 = 0xFFCE,JIFMK_SOF15 = 0xFFCF,JIFMK_DHT = 0xFFC4,JIFMK_DAC = 0xFFCC,JIFMK_RST0 = 0xFFD0,JIFMK_RST1 = 0xFFD1,JIFMK_RST2 = 0xFFD2,JIFMK_RST3 = 0xFFD3,JIFMK_RST4 = 0xFFD4,JIFMK_RST5 = 0xFFD5,JIFMK_RST6 = 0xFFD6,JIFMK_RST7 = 0xFFD7,JIFMK_SOI = 0xFFD8,JIFMK_EOI = 0xFFD9,JIFMK_SOS = 0xFFDA,JIFMK_DQT = 0xFFDB,JIFMK_DNL = 0xFFDC,JIFMK_DRI = 0xFFDD,JIFMK_DHP = 0xFFDE,JIFMK_EXP = 0xFFDF,JIFMK_APP0 = 0xFFE0,JIFMK_APP1 = 0xFFE1,JIFMK_APP2 = 0xFFE2,JIFMK_APP3 = 0xFFE3,JIFMK_APP4 = 0xFFE4,JIFMK_APP5 = 0xFFE5,JIFMK_APP6 = 0xFFE6,JIFMK_APP7 = 0xFFE7,JIFMK_JPG0 = 0xFFF0,JIFMK_JPG1 = 0xFFF1,JIFMK_JPG2 = 0xFFF2,JIFMK_JPG3 = 0xFFF3,JIFMK_JPG4 = 0xFFF4,JIFMK_JPG5 = 0xFFF5,JIFMK_JPG6 = 0xFFF6,JIFMK_JPG7 = 0xFFF7,JIFMK_JPG8 = 0xFFF8,JIFMK_JPG9 = 0xFFF9,JIFMK_JPG10 = 0xFFFA,JIFMK_JPG11 = 0xFFFB,JIFMK_JPG12 = 0xFFFC,JIFMK_JPG13 = 0xFFFD,JIFMK_COM = 0xFFFE,JIFMK_TEM = 0xFF01,JIFMK_RES = 0xFF02,JIFMK_00 = 0xFF00,JIFMK_FF = 0xFFFF,};
enum MACRO_KMODE {KMODE_EXCEPTION_NOT_HANDLED = 0x1E,};
enum MACRO_KSAC3 {KSAC3_ALTERNATE_AUDIO_1 = 1,KSAC3_ALTERNATE_AUDIO_2 = 2,KSAC3_ALTERNATE_AUDIO_BOTH = 3,KSAC3_SERVICE_MAIN_AUDIO = 0,KSAC3_SERVICE_NO_DIALOG = 1,KSAC3_SERVICE_VISUALLY_IMPAIRED = 2,KSAC3_SERVICE_HEARING_IMPAIRED = 3,KSAC3_SERVICE_DIALOG_ONLY = 4,KSAC3_SERVICE_COMMENTARY = 5,KSAC3_SERVICE_EMERGENCY_FLASH = 6,KSAC3_SERVICE_VOICE_OVER = 7,};
enum MACRO_KSALL {KSALL_NODES = 4294967295,};
enum MACRO_KSPIN {KSPIN_FLAG_DISPATCH_LEVEL_PROCESSING = 1,KSPIN_FLAG_CRITICAL_PROCESSING = 2,KSPIN_FLAG_HYPERCRITICAL_PROCESSING = 4,KSPIN_FLAG_ASYNCHRONOUS_PROCESSING = 8,KSPIN_FLAG_DO_NOT_INITIATE_PROCESSING = 16,KSPIN_FLAG_INITIATE_PROCESSING_ON_EVERY_ARRIVAL = 32,KSPIN_FLAG_FRAMES_NOT_REQUIRED_FOR_PROCESSING = 64,KSPIN_FLAG_ENFORCE_FIFO = 128,KSPIN_FLAG_GENERATE_MAPPINGS = 256,KSPIN_FLAG_DISTINCT_TRAILING_EDGE = 512,KSPIN_FLAG_PROCESS_IN_RUN_STATE_ONLY = 65536,KSPIN_FLAG_SPLITTER = 131072,KSPIN_FLAG_USE_STANDARD_TRANSPORT = 262144,KSPIN_FLAG_DO_NOT_USE_STANDARD_TRANSPORT = 524288,KSPIN_FLAG_FIXED_FORMAT = 1048576,KSPIN_FLAG_GENERATE_EOS_EVENTS = 2097152,KSPIN_FLAG_RENDERER = 2162688,KSPIN_FLAG_IMPLEMENT_CLOCK = 4194304,KSPIN_FLAG_SOME_FRAMES_REQUIRED_FOR_PROCESSING = 8388608,KSPIN_FLAG_PROCESS_IF_ANY_IN_RUN_STATE = 16777216,KSPIN_FLAG_DENY_USERMODE_ACCESS = -2147483648,};
enum MACRO_KS_AM {KS_AM_UseNewCSSKey = 0x1,};
enum MACRO_KS_CC {KS_CC_SUBSTREAM_ODD = 0x1,KS_CC_SUBSTREAM_EVEN = 0x2,KS_CC_SUBSTREAM_FIELD1_MASK = 0xF0,KS_CC_SUBSTREAM_SERVICE_CC1 = 0x10,KS_CC_SUBSTREAM_SERVICE_CC2 = 0x20,KS_CC_SUBSTREAM_SERVICE_T1 = 0x40,KS_CC_SUBSTREAM_SERVICE_T2 = 0x80,KS_CC_SUBSTREAM_FIELD2_MASK = 0x1F00,KS_CC_SUBSTREAM_SERVICE_CC3 = 0x100,KS_CC_SUBSTREAM_SERVICE_CC4 = 0x200,KS_CC_SUBSTREAM_SERVICE_T3 = 0x400,KS_CC_SUBSTREAM_SERVICE_T4 = 0x800,KS_CC_SUBSTREAM_SERVICE_XDS = 0x1000,};
enum MACRO_L2CAP {L2CAP_MIN_MTU = 48,L2CAP_MAX_MTU = 65535,L2CAP_DEFAULT_MTU = 672,};
enum MACRO_LEVEL {DISPATCH_LEVEL = 2,APC_LEVEL = 1,PASSIVE_LEVEL = 0,HIGH_LEVEL = 31,};
enum MACRO_LLONG {LLONG_MIN = -9223372036854775808,};
enum MACRO_LOCAL {LOCAL_BUS = 0x3FF,};
enum MACRO_LOGON {LOGON_GUEST = 0x1,LOGON_NOENCRYPTION = 0x2,LOGON_CACHED_ACCOUNT = 0x4,LOGON_USED_LM_PASSWORD = 0x8,LOGON_EXTRA_SIDS = 0x20,LOGON_SUBAUTH_SESSION_KEY = 0x40,LOGON_SERVER_TRUST_ACCOUNT = 0x80,LOGON_NTLMV2_ENABLED = 0x100,LOGON_RESOURCE_GROUPS = 0x200,LOGON_PROFILE_PATH_RETURNED = 0x400,LOGON_NT_V2 = 0x800,LOGON_LM_V2 = 0x1000,LOGON_NTLM_V2 = 0x2000,LOGON_OPTIMIZED = 0x4000,LOGON_WINLOGON = 0x8000,LOGON_PKINIT = 0x10000,LOGON_NO_OPTIMIZED = 0x20000,LOGON_NO_ELEVATION = 0x40000,};
enum MACRO_LOWIO {LOWIO_CONTEXT_FLAG_SYNCCALL = 0x1,LOWIO_CONTEXT_FLAG_SAVEUNLOCKS = 0x2,LOWIO_CONTEXT_FLAG_LOUDOPS = 0x4,LOWIO_CONTEXT_FLAG_CAN_COMPLETE_AT_DPC_LEVEL = 0x8,LOWIO_READWRITEFLAG_PAGING_IO = 0x1,LOWIO_READWRITEFLAG_EXTENDING_FILESIZE = 0x2,LOWIO_READWRITEFLAG_EXTENDING_VDL = 0x4,LOWIO_LOCKSFLAG_FAIL_IMMEDIATELY = 0x1,LOWIO_LOCKSFLAG_EXCLUSIVELOCK = 0x2,};
enum MACRO_MCAST {MCAST_JOIN_GROUP = 41,MCAST_LEAVE_GROUP = 42,MCAST_BLOCK_SOURCE = 43,MCAST_UNBLOCK_SOURCE = 44,MCAST_JOIN_SOURCE_GROUP = 45,MCAST_LEAVE_SOURCE_GROUP = 46,};
enum MACRO_MEDIA {MEDIA_ERASEABLE = 0x1,MEDIA_WRITE_ONCE = 0x2,MEDIA_READ_ONLY = 0x4,MEDIA_READ_WRITE = 0x8,MEDIA_WRITE_PROTECTED = 0x100,MEDIA_CURRENTLY_MOUNTED = 0x80000000,};
enum MACRO_MEM_E {MEM_E_INVALID_ROOT = 0x80080009,MEM_E_INVALID_LINK = 0x80080010,MEM_E_INVALID_SIZE = 0x80080011,};
enum MACRO_MOUSE {MOUSE_LEFT_BUTTON_DOWN = 0x1,MOUSE_LEFT_BUTTON_UP = 0x2,MOUSE_RIGHT_BUTTON_DOWN = 0x4,MOUSE_RIGHT_BUTTON_UP = 0x8,MOUSE_MIDDLE_BUTTON_DOWN = 0x10,MOUSE_MIDDLE_BUTTON_UP = 0x20,MOUSE_BUTTON_1_DOWN = 0x1,MOUSE_BUTTON_1_UP = 0x2,MOUSE_BUTTON_2_DOWN = 0x4,MOUSE_BUTTON_2_UP = 0x8,MOUSE_BUTTON_3_DOWN = 0x10,MOUSE_BUTTON_3_UP = 0x20,MOUSE_BUTTON_4_DOWN = 0x40,MOUSE_BUTTON_4_UP = 0x80,MOUSE_BUTTON_5_DOWN = 0x100,MOUSE_BUTTON_5_UP = 0x200,MOUSE_WHEEL = 0x400,MOUSE_HWHEEL = 0x800,MOUSE_MOVE_RELATIVE = 0x0,MOUSE_MOVE_ABSOLUTE = 0x1,MOUSE_VIRTUAL_DESKTOP = 0x2,MOUSE_ATTRIBUTES_CHANGED = 0x4,MOUSE_MOVE_NOCOALESCE = 0x8,MOUSE_TERMSRV_SRC_SHADOW = 0x100,MOUSE_INPORT_HARDWARE = 0x1,MOUSE_I8042_HARDWARE = 0x2,MOUSE_SERIAL_HARDWARE = 0x4,};
enum MACRO_MSDTC {MSDTC_E_DUPLICATE_RESOURCE = 0x80110701,};
enum MACRO_MSIde {MSIde_PortDeviceInfo_Bus_ID = 1,MSIde_PortDeviceInfo_Target_ID = 2,MSIde_PortDeviceInfo_Lun_ID = 3,};
enum MACRO_MSRPC {MSRPC_STATE_VIOLATION = 0x112,};
enum MACRO_MSWmi {MSWmi_MofData_Unused1_ID = 1,MSWmi_MofData_Unused2_ID = 2,MSWmi_MofData_Size_ID = 3,MSWmi_MofData_Unused4_ID = 4,MSWmi_MofData_BinaryMofData_ID = 5,MSWmi_PnPDeviceId_PnPDeviceId_ID = 1,MSWmi_PnPInstanceNames_Count_ID = 1,MSWmi_PnPInstanceNames_InstanceNameList_ID = 2,MSWmi_Guid_Guid_ID = 1,MSWmi_GuidRegistrationInfo_Operation_ID = 1,MSWmi_GuidRegistrationInfo_GuidCount_ID = 2,MSWmi_GuidRegistrationInfo_GuidList_ID = 3,};
enum MACRO_MS_OS {MS_OS_FLAGS_CONTAINERID = 0x2,};
enum MACRO_MUTEX {MUTEX_LEVEL_NUMBER_VIOLATION = 0xD,};
enum MACRO_MWDMA {MWDMA_MODE0 = 256,MWDMA_MODE1 = 512,MWDMA_MODE2 = 1024,};
enum MACRO_NABTS {NABTS_LINES_PER_BUNDLE = 16,NABTS_PAYLOAD_PER_LINE = 28,NABTS_BYTES_PER_LINE = 36,};
enum MACRO_NAP_E {NAP_E_INVALID_PACKET = 0x80270001,NAP_E_MISSING_SOH = 0x80270002,NAP_E_CONFLICTING_ID = 0x80270003,NAP_E_NO_CACHED_SOH = 0x80270004,NAP_E_STILL_BOUND = 0x80270005,NAP_E_NOT_REGISTERED = 0x80270006,NAP_E_NOT_INITIALIZED = 0x80270007,NAP_E_MISMATCHED_ID = 0x80270008,NAP_E_NOT_PENDING = 0x80270009,NAP_E_ID_NOT_FOUND = 0x8027000A,NAP_E_MAXSIZE_TOO_SMALL = 0x8027000B,NAP_E_SERVICE_NOT_RUNNING = 0x8027000C,NAP_S_CERT_ALREADY_PRESENT = 0x27000D,NAP_E_ENTITY_DISABLED = 0x8027000E,NAP_E_NETSH_GROUPPOLICY_ERROR = 0x8027000F,NAP_E_TOO_MANY_CALLS = 0x80270010,NAP_E_SHV_CONFIG_EXISTED = 0x80270011,NAP_E_SHV_CONFIG_NOT_FOUND = 0x80270012,NAP_E_SHV_TIMEOUT = 0x80270013,};
enum MACRO_NETIO {NETIO_INVALID_POOL_CALLER = 0x126,};
enum MACRO_NOT_A {NOT_A_DFS_PATH = 0x40003840,};
enum MACRO_NTDDI {NTDDI_WIN2K = 0x5000000,NTDDI_WIN2KSP1 = 0x5000100,NTDDI_WIN2KSP2 = 0x5000200,NTDDI_WIN2KSP3 = 0x5000300,NTDDI_WIN2KSP4 = 0x5000400,NTDDI_WINXP = 0x5010000,NTDDI_WINXPSP1 = 0x5010100,NTDDI_WINXPSP2 = 0x5010200,NTDDI_WINXPSP3 = 0x5010300,NTDDI_WINXPSP4 = 0x5010400,NTDDI_WS03 = 0x5020000,NTDDI_WS03SP1 = 0x5020100,NTDDI_WS03SP2 = 0x5020200,NTDDI_WS03SP3 = 0x5020300,NTDDI_WS03SP4 = 0x5020400,NTDDI_WIN6 = 0x6000000,NTDDI_WIN6SP1 = 0x6000100,NTDDI_WIN6SP2 = 0x6000200,NTDDI_WIN6SP3 = 0x6000300,NTDDI_WIN6SP4 = 0x6000400,NTDDI_VISTA = 0x6000000,NTDDI_VISTASP1 = 0x6000100,NTDDI_VISTASP2 = 0x6000200,NTDDI_VISTASP3 = 0x6000300,NTDDI_VISTASP4 = 0x6000400,NTDDI_LONGHORN = 0x6000000,NTDDI_WS08 = 0x6000100,NTDDI_WS08SP2 = 0x6000200,NTDDI_WS08SP3 = 0x6000300,NTDDI_WS08SP4 = 0x6000400,NTDDI_WIN7 = 0x6010000,NTDDI_WIN8 = 0x6020000,};
enum MACRO_NWSAP {NWSAP_EVENT_KEY_NOT_FOUND = 0xC0002134,NWSAP_EVENT_WSASTARTUP_FAILED = 0xC0002135,NWSAP_EVENT_SOCKET_FAILED = 0xC0002136,NWSAP_EVENT_SETOPTBCAST_FAILED = 0xC0002137,NWSAP_EVENT_BIND_FAILED = 0xC0002138,NWSAP_EVENT_GETSOCKNAME_FAILED = 0xC0002139,NWSAP_EVENT_OPTEXTENDEDADDR_FAILED = 0xC000213A,NWSAP_EVENT_OPTBCASTINADDR_FAILED = 0xC000213B,NWSAP_EVENT_CARDMALLOC_FAILED = 0xC000213C,NWSAP_EVENT_NOCARDS = 0xC000213D,NWSAP_EVENT_THREADEVENT_FAIL = 0xC000213E,NWSAP_EVENT_RECVSEM_FAIL = 0xC000213F,NWSAP_EVENT_SENDEVENT_FAIL = 0xC0002140,NWSAP_EVENT_STARTRECEIVE_ERROR = 0xC0002141,NWSAP_EVENT_STARTWORKER_ERROR = 0xC0002142,NWSAP_EVENT_TABLE_MALLOC_FAILED = 0xC0002143,NWSAP_EVENT_HASHTABLE_MALLOC_FAILED = 0xC0002144,NWSAP_EVENT_STARTLPCWORKER_ERROR = 0xC0002145,NWSAP_EVENT_CREATELPCPORT_ERROR = 0xC0002146,NWSAP_EVENT_CREATELPCEVENT_ERROR = 0xC0002147,NWSAP_EVENT_LPCLISTENMEMORY_ERROR = 0xC0002148,NWSAP_EVENT_LPCHANDLEMEMORY_ERROR = 0xC0002149,NWSAP_EVENT_BADWANFILTER_VALUE = 0xC000214A,NWSAP_EVENT_CARDLISTEVENT_FAIL = 0xC000214B,NWSAP_EVENT_SDMDEVENT_FAIL = 0xC000214C,NWSAP_EVENT_INVALID_FILTERNAME = 0x8000214D,NWSAP_EVENT_WANSEM_FAIL = 0xC000214E,NWSAP_EVENT_WANSOCKET_FAILED = 0xC000214F,NWSAP_EVENT_WANBIND_FAILED = 0xC0002150,NWSAP_EVENT_STARTWANWORKER_ERROR = 0xC0002151,NWSAP_EVENT_STARTWANCHECK_ERROR = 0xC0002152,NWSAP_EVENT_OPTMAXADAPTERNUM_ERROR = 0xC0002153,NWSAP_EVENT_WANHANDLEMEMORY_ERROR = 0xC0002154,NWSAP_EVENT_WANEVENT_ERROR = 0xC0002155,};
enum MACRO_OLE_S {OLE_S_USEREG = 0x40000,OLE_S_STATIC = 0x40001,OLE_S_MAC_CLIPFORMAT = 0x40002,};
enum MACRO_PANIC {PANIC_STACK_SWITCH = 0x2B,};
enum MACRO_PCLAN {PCLAN = 1,MSNT30 = 2,};
enum MACRO_PDCAP {PDCAP_D0_SUPPORTED = 0x1,PDCAP_D1_SUPPORTED = 0x2,PDCAP_D2_SUPPORTED = 0x4,PDCAP_D3_SUPPORTED = 0x8,PDCAP_WAKE_FROM_D0_SUPPORTED = 0x10,PDCAP_WAKE_FROM_D1_SUPPORTED = 0x20,PDCAP_WAKE_FROM_D2_SUPPORTED = 0x40,PDCAP_WAKE_FROM_D3_SUPPORTED = 0x80,PDCAP_WARM_EJECT_SUPPORTED = 0x100,};
enum MACRO_PLOSS {PLOSS = 6,};
enum MACRO_POWER {POWER_FAILURE_SIMULATE = 0xE5,};
enum MACRO_PURGE {PURGE_WITH_ACTIVE_VIEWS = 8,};
enum MACRO_QUERY {QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_HOST_VOLUMES = 0x1,QUERY_DEPENDENT_VOLUME_REQUEST_FLAG_GUEST_VOLUMES = 0x2,};
enum MACRO_QUOTA {QUOTA_UNDERFLOW = 0x21,};
enum MACRO_RCODE {RCODE_RESPONSE_COMPLETE = 0,RCODE_RESERVED1 = 1,RCODE_RESERVED2 = 2,RCODE_RESERVED3 = 3,RCODE_CONFLICT_ERROR = 4,RCODE_DATA_ERROR = 5,RCODE_TYPE_ERROR = 6,RCODE_ADDRESS_ERROR = 7,RCODE_TIMED_OUT = 15,RCODE_STATUS_MASK = -1072562048,};
enum MACRO_RDBSS {RDBSS_NTC_STORAGE_TYPE_UNKNOWN = 0xEC00,RDBSS_NTC_STORAGE_TYPE_DIRECTORY = 0xEC02,RDBSS_NTC_STORAGE_TYPE_FILE = 0xEC03,RDBSS_NTC_OPENTARGETDIR_FCB = 0xECFF,RDBSS_NTC_IPC_SHARE = 0xECFE,RDBSS_NTC_MAILSLOT = 0xECFD,RDBSS_NTC_SPOOLFILE = 0xECFC,RDBSS_NTC_SRVCALL = 0xEB10,RDBSS_NTC_NETROOT = 0xEB11,RDBSS_NTC_V_NETROOT = 0xEB12,RDBSS_NTC_VOLUME_FCB = 0xEB1F,RDBSS_NTC_SRVOPEN = 0xEB1C,RDBSS_NTC_INTERNAL_SRVOPEN = 0xEB1D,RDBSS_NTC_DEVICE_FCB = 0xEB9A,RDBSS_NTC_DATA_HEADER = 0xEB00,RDBSS_NTC_VCB = 0xEB01,RDBSS_NTC_FOBX = 0xEB07,RDBSS_NTC_RX_CONTEXT = 0xEB08,RDBSS_NTC_PREFIX_TABLE = 0xEB0D,RDBSS_NTC_PREFIX_ENTRY = 0xEB0E,RDBSS_NTC_FCB_TABLE = 0xEB09,RDBSS_NTC_FCB_TABLE_ENTRY = 0xEB0A,RDBSS_NTC_RXCE_TRANSPORT = 0xEB71,RDBSS_NTC_RXCE_ADDRESS = 0xEB72,RDBSS_NTC_RXCE_CONNECTION = 0xEB73,RDBSS_NTC_RXCE_VC = 0xEB74,RDBSS_NTC_NONPAGED_FCB = 0xEBFD,RDBSS_NTC_COMMON_DISPATCH = 0xEBFE,RDBSS_NTC_MINIRDR_DISPATCH = 0xEBFF,RDBSS_NTC_FCB = 0xEC03,};
enum MACRO_RECOM {RECOM_DRIVER = 0x84,};
enum MACRO_REGDB {REGDB_E_FIRST = 0x80040150,REGDB_E_LAST = 0x8004015F,REGDB_S_FIRST = 0x40150,REGDB_S_LAST = 0x4015F,REGDB_E_READREGDB = 0x80040150,REGDB_E_WRITEREGDB = 0x80040151,REGDB_E_KEYMISSING = 0x80040152,REGDB_E_INVALIDVALUE = 0x80040153,REGDB_E_CLASSNOTREG = 0x80040154,REGDB_E_IIDNOTREG = 0x80040155,REGDB_E_BADTHREADINGMODEL = 0x80040156,};
enum MACRO_RESET {RESET_CAP_BIT = 10,RESET_CAP = 1024,};
enum MACRO_ROUND {ROUND_DOWN_FLOW = 0x80,ROUND_UP_FLOW = 0x100,};
enum MACRO_RPC_E {RPC_E_CALL_REJECTED = 0x80010001,RPC_E_CALL_CANCELED = 0x80010002,RPC_E_CANTPOST_INSENDCALL = 0x80010003,RPC_E_CANTCALLOUT_INASYNCCALL = 0x80010004,RPC_E_CANTCALLOUT_INEXTERNALCALL = 0x80010005,RPC_E_CONNECTION_TERMINATED = 0x80010006,RPC_E_SERVER_DIED = 0x80010007,RPC_E_CLIENT_DIED = 0x80010008,RPC_E_INVALID_DATAPACKET = 0x80010009,RPC_E_CANTTRANSMIT_CALL = 0x8001000A,RPC_E_CLIENT_CANTMARSHAL_DATA = 0x8001000B,RPC_E_CLIENT_CANTUNMARSHAL_DATA = 0x8001000C,RPC_E_SERVER_CANTMARSHAL_DATA = 0x8001000D,RPC_E_SERVER_CANTUNMARSHAL_DATA = 0x8001000E,RPC_E_INVALID_DATA = 0x8001000F,RPC_E_INVALID_PARAMETER = 0x80010010,RPC_E_CANTCALLOUT_AGAIN = 0x80010011,RPC_E_SERVER_DIED_DNE = 0x80010012,RPC_E_SYS_CALL_FAILED = 0x80010100,RPC_E_OUT_OF_RESOURCES = 0x80010101,RPC_E_ATTEMPTED_MULTITHREAD = 0x80010102,RPC_E_NOT_REGISTERED = 0x80010103,RPC_E_FAULT = 0x80010104,RPC_E_SERVERFAULT = 0x80010105,RPC_E_CHANGED_MODE = 0x80010106,RPC_E_INVALIDMETHOD = 0x80010107,RPC_E_DISCONNECTED = 0x80010108,RPC_E_RETRY = 0x80010109,RPC_E_SERVERCALL_RETRYLATER = 0x8001010A,RPC_E_SERVERCALL_REJECTED = 0x8001010B,RPC_E_INVALID_CALLDATA = 0x8001010C,RPC_E_CANTCALLOUT_ININPUTSYNCCALL = 0x8001010D,RPC_E_WRONG_THREAD = 0x8001010E,RPC_E_THREAD_NOT_INIT = 0x8001010F,RPC_E_VERSION_MISMATCH = 0x80010110,RPC_E_INVALID_HEADER = 0x80010111,RPC_E_INVALID_EXTENSION = 0x80010112,RPC_E_INVALID_IPID = 0x80010113,RPC_E_INVALID_OBJECT = 0x80010114,RPC_S_CALLPENDING = 0x80010115,RPC_S_WAITONTIMER = 0x80010116,RPC_E_CALL_COMPLETE = 0x80010117,RPC_E_UNSECURE_CALL = 0x80010118,RPC_E_TOO_LATE = 0x80010119,RPC_E_NO_GOOD_SECURITY_PACKAGES = 0x8001011A,RPC_E_ACCESS_DENIED = 0x8001011B,RPC_E_REMOTE_DISABLED = 0x8001011C,RPC_E_INVALID_OBJREF = 0x8001011D,RPC_E_NO_CONTEXT = 0x8001011E,RPC_E_TIMEOUT = 0x8001011F,RPC_E_NO_SYNC = 0x80010120,RPC_E_FULLSIC_REQUIRED = 0x80010121,RPC_E_INVALID_STD_NAME = 0x80010122,};
enum MACRO_SAPIC {IO_SAPIC = 6,LOCAL_SAPIC = 7,};
enum MACRO_SCARD {SCARD_S_SUCCESS = 0,SCARD_F_INTERNAL_ERROR = -2146435071,SCARD_E_CANCELLED = -2146435070,SCARD_E_INVALID_HANDLE = -2146435069,SCARD_E_INVALID_PARAMETER = -2146435068,SCARD_E_INVALID_TARGET = -2146435067,SCARD_E_NO_MEMORY = -2146435066,SCARD_F_WAITED_TOO_LONG = -2146435065,SCARD_E_INSUFFICIENT_BUFFER = -2146435064,SCARD_E_UNKNOWN_READER = -2146435063,SCARD_E_TIMEOUT = -2146435062,SCARD_E_SHARING_VIOLATION = -2146435061,SCARD_E_NO_SMARTCARD = -2146435060,SCARD_E_UNKNOWN_CARD = -2146435059,SCARD_E_CANT_DISPOSE = -2146435058,SCARD_E_PROTO_MISMATCH = -2146435057,SCARD_E_NOT_READY = -2146435056,SCARD_E_INVALID_VALUE = -2146435055,SCARD_E_SYSTEM_CANCELLED = -2146435054,SCARD_F_COMM_ERROR = -2146435053,SCARD_F_UNKNOWN_ERROR = -2146435052,SCARD_E_INVALID_ATR = -2146435051,SCARD_E_NOT_TRANSACTED = -2146435050,SCARD_E_READER_UNAVAILABLE = -2146435049,SCARD_P_SHUTDOWN = -2146435048,SCARD_E_PCI_TOO_SMALL = -2146435047,SCARD_E_READER_UNSUPPORTED = -2146435046,SCARD_E_DUPLICATE_READER = -2146435045,SCARD_E_CARD_UNSUPPORTED = -2146435044,SCARD_E_NO_SERVICE = -2146435043,SCARD_E_SERVICE_STOPPED = -2146435042,SCARD_E_UNEXPECTED = -2146435041,SCARD_E_ICC_INSTALLATION = -2146435040,SCARD_E_ICC_CREATEORDER = -2146435039,SCARD_E_UNSUPPORTED_FEATURE = -2146435038,SCARD_E_DIR_NOT_FOUND = -2146435037,SCARD_E_FILE_NOT_FOUND = -2146435036,SCARD_E_NO_DIR = -2146435035,SCARD_E_NO_FILE = -2146435034,SCARD_E_NO_ACCESS = -2146435033,SCARD_E_WRITE_TOO_MANY = -2146435032,SCARD_E_BAD_SEEK = -2146435031,SCARD_E_INVALID_CHV = -2146435030,SCARD_E_UNKNOWN_RES_MNG = -2146435029,SCARD_E_NO_SUCH_CERTIFICATE = -2146435028,SCARD_E_CERTIFICATE_UNAVAILABLE = -2146435027,SCARD_E_NO_READERS_AVAILABLE = -2146435026,SCARD_E_COMM_DATA_LOST = -2146435025,SCARD_E_NO_KEY_CONTAINER = -2146435024,SCARD_E_SERVER_TOO_BUSY = -2146435023,SCARD_E_PIN_CACHE_EXPIRED = -2146435022,SCARD_E_NO_PIN_CACHE = -2146435021,SCARD_E_READ_ONLY_CARD = -2146435020,SCARD_W_UNSUPPORTED_CARD = -2146434971,SCARD_W_UNRESPONSIVE_CARD = -2146434970,SCARD_W_UNPOWERED_CARD = -2146434969,SCARD_W_RESET_CARD = -2146434968,SCARD_W_REMOVED_CARD = -2146434967,SCARD_W_SECURITY_VIOLATION = -2146434966,SCARD_W_WRONG_CHV = -2146434965,SCARD_W_CHV_BLOCKED = -2146434964,SCARD_W_EOF = -2146434963,SCARD_W_CANCELLED_BY_USER = -2146434962,SCARD_W_CARD_NOT_AUTHENTICATED = -2146434961,SCARD_W_CACHE_ITEM_NOT_FOUND = -2146434960,SCARD_W_CACHE_ITEM_STALE = -2146434959,SCARD_W_CACHE_ITEM_TOO_BIG = -2146434958,};
enum MACRO_SCHAR {SCHAR_MIN = -128,SCHAR_MAX = 127,};
enum MACRO_SCHED {SCHED_S_TASK_READY = 0x41300,SCHED_S_TASK_RUNNING = 0x41301,SCHED_S_TASK_DISABLED = 0x41302,SCHED_S_TASK_HAS_NOT_RUN = 0x41303,SCHED_S_TASK_NO_MORE_RUNS = 0x41304,SCHED_S_TASK_NOT_SCHEDULED = 0x41305,SCHED_S_TASK_TERMINATED = 0x41306,SCHED_S_TASK_NO_VALID_TRIGGERS = 0x41307,SCHED_S_EVENT_TRIGGER = 0x41308,SCHED_E_TRIGGER_NOT_FOUND = 0x80041309,SCHED_E_TASK_NOT_READY = 0x8004130A,SCHED_E_TASK_NOT_RUNNING = 0x8004130B,SCHED_E_SERVICE_NOT_INSTALLED = 0x8004130C,SCHED_E_CANNOT_OPEN_TASK = 0x8004130D,SCHED_E_INVALID_TASK = 0x8004130E,SCHED_E_ACCOUNT_INFORMATION_NOT_SET = 0x8004130F,SCHED_E_ACCOUNT_NAME_NOT_FOUND = 0x80041310,SCHED_E_ACCOUNT_DBASE_CORRUPT = 0x80041311,SCHED_E_NO_SECURITY_SERVICES = 0x80041312,SCHED_E_UNKNOWN_OBJECT_VERSION = 0x80041313,SCHED_E_UNSUPPORTED_ACCOUNT_OPTION = 0x80041314,SCHED_E_SERVICE_NOT_RUNNING = 0x80041315,SCHED_E_UNEXPECTEDNODE = 0x80041316,SCHED_E_NAMESPACE = 0x80041317,SCHED_E_INVALIDVALUE = 0x80041318,SCHED_E_MISSINGNODE = 0x80041319,SCHED_E_MALFORMEDXML = 0x8004131A,SCHED_S_SOME_TRIGGERS_FAILED = 0x4131B,SCHED_S_BATCH_LOGON_PROBLEM = 0x4131C,SCHED_E_TOO_MANY_NODES = 0x8004131D,SCHED_E_PAST_END_BOUNDARY = 0x8004131E,SCHED_E_ALREADY_RUNNING = 0x8004131F,SCHED_E_USER_NOT_LOGGED_ON = 0x80041320,SCHED_E_INVALID_TASK_HASH = 0x80041321,SCHED_E_SERVICE_NOT_AVAILABLE = 0x80041322,SCHED_E_SERVICE_TOO_BUSY = 0x80041323,SCHED_E_TASK_ATTEMPTED = 0x80041324,SCHED_S_TASK_QUEUED = 0x41325,SCHED_E_TASK_DISABLED = 0x80041326,SCHED_E_TASK_NOT_V1_COMPAT = 0x80041327,SCHED_E_START_ON_DEMAND = 0x80041328,SCHED_E_TASK_NOT_UBPM_COMPAT = 0x80041329,SCHED_E_DEPRECATED_FEATURE_USED = 0x80041330,};
enum MACRO_SCODE {SCODE_100_RATE = 0,SCODE_200_RATE = 1,SCODE_400_RATE = 2,SCODE_800_RATE = 3,SCODE_1600_RATE = 4,SCODE_3200_RATE = 5,};
enum MACRO_SCRUB {SCRUB_DATA_INPUT_FLAG_RESUME = 0x1,SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC = 0x2,SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA = 0x4,SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE = 0x1,SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE = 0x10000,};
enum MACRO_SDBUS {SDBUS_INTERFACE_VERSION = 0x101,SDBUS_INTTYPE_DEVICE = 0x0,};
enum MACRO_SDCMD {SDCMD_IO_RW_DIRECT = 52,SDCMD_IO_RW_EXTENDED = 53,};
enum MACRO_SDIAG {SDIAG_E_CANCELLED = 0x803C0100,SDIAG_E_SCRIPT = 0x803C0101,SDIAG_E_POWERSHELL = 0x803C0102,SDIAG_E_MANAGEDHOST = 0x803C0103,SDIAG_E_NOVERIFIER = 0x803C0104,SDIAG_S_CANNOTRUN = 0x3C0105,SDIAG_E_DISABLED = 0x803C0106,SDIAG_E_TRUST = 0x803C0107,SDIAG_E_CANNOTRUN = 0x803C0108,SDIAG_E_VERSION = 0x803C0109,SDIAG_E_RESOURCE = 0x803C010A,SDIAG_E_ROOTCAUSE = 0x803C010B,};
enum MACRO_SEC_E {SEC_E_INSUFFICIENT_MEMORY = 0x80090300,SEC_E_INVALID_HANDLE = 0x80090301,SEC_E_UNSUPPORTED_FUNCTION = 0x80090302,SEC_E_TARGET_UNKNOWN = 0x80090303,SEC_E_INTERNAL_ERROR = 0x80090304,SEC_E_SECPKG_NOT_FOUND = 0x80090305,SEC_E_NOT_OWNER = 0x80090306,SEC_E_CANNOT_INSTALL = 0x80090307,SEC_E_INVALID_TOKEN = 0x80090308,SEC_E_CANNOT_PACK = 0x80090309,SEC_E_QOP_NOT_SUPPORTED = 0x8009030A,SEC_E_NO_IMPERSONATION = 0x8009030B,SEC_E_LOGON_DENIED = 0x8009030C,SEC_E_UNKNOWN_CREDENTIALS = 0x8009030D,SEC_E_NO_CREDENTIALS = 0x8009030E,SEC_E_MESSAGE_ALTERED = 0x8009030F,SEC_E_OUT_OF_SEQUENCE = 0x80090310,SEC_E_NO_AUTHENTICATING_AUTHORITY = 0x80090311,SEC_I_CONTINUE_NEEDED = 0x90312,SEC_I_COMPLETE_NEEDED = 0x90313,SEC_I_COMPLETE_AND_CONTINUE = 0x90314,SEC_I_LOCAL_LOGON = 0x90315,SEC_E_BAD_PKGID = 0x80090316,SEC_E_CONTEXT_EXPIRED = 0x80090317,SEC_I_CONTEXT_EXPIRED = 0x90317,SEC_E_INCOMPLETE_MESSAGE = 0x80090318,SEC_E_INCOMPLETE_CREDENTIALS = 0x80090320,SEC_E_BUFFER_TOO_SMALL = 0x80090321,SEC_I_INCOMPLETE_CREDENTIALS = 0x90320,SEC_I_RENEGOTIATE = 0x90321,SEC_E_WRONG_PRINCIPAL = 0x80090322,SEC_I_NO_LSA_CONTEXT = 0x90323,SEC_E_TIME_SKEW = 0x80090324,SEC_E_UNTRUSTED_ROOT = 0x80090325,SEC_E_ILLEGAL_MESSAGE = 0x80090326,SEC_E_CERT_UNKNOWN = 0x80090327,SEC_E_CERT_EXPIRED = 0x80090328,SEC_E_ENCRYPT_FAILURE = 0x80090329,SEC_E_DECRYPT_FAILURE = 0x80090330,SEC_E_ALGORITHM_MISMATCH = 0x80090331,SEC_E_SECURITY_QOS_FAILED = 0x80090332,SEC_E_UNFINISHED_CONTEXT_DELETED = 0x80090333,SEC_E_NO_TGT_REPLY = 0x80090334,SEC_E_NO_IP_ADDRESSES = 0x80090335,SEC_E_WRONG_CREDENTIAL_HANDLE = 0x80090336,SEC_E_CRYPTO_SYSTEM_INVALID = 0x80090337,SEC_E_MAX_REFERRALS_EXCEEDED = 0x80090338,SEC_E_MUST_BE_KDC = 0x80090339,SEC_E_STRONG_CRYPTO_NOT_SUPPORTED = 0x8009033A,SEC_E_TOO_MANY_PRINCIPALS = 0x8009033B,SEC_E_NO_PA_DATA = 0x8009033C,SEC_E_PKINIT_NAME_MISMATCH = 0x8009033D,SEC_E_SMARTCARD_LOGON_REQUIRED = 0x8009033E,SEC_E_SHUTDOWN_IN_PROGRESS = 0x8009033F,SEC_E_KDC_INVALID_REQUEST = 0x80090340,SEC_E_KDC_UNABLE_TO_REFER = 0x80090341,SEC_E_KDC_UNKNOWN_ETYPE = 0x80090342,SEC_E_UNSUPPORTED_PREAUTH = 0x80090343,SEC_E_DELEGATION_REQUIRED = 0x80090345,SEC_E_BAD_BINDINGS = 0x80090346,SEC_E_MULTIPLE_ACCOUNTS = 0x80090347,SEC_E_NO_KERB_KEY = 0x80090348,SEC_E_CERT_WRONG_USAGE = 0x80090349,SEC_E_DOWNGRADE_DETECTED = 0x80090350,SEC_E_SMARTCARD_CERT_REVOKED = 0x80090351,SEC_E_ISSUING_CA_UNTRUSTED = 0x80090352,SEC_E_REVOCATION_OFFLINE_C = 0x80090353,SEC_E_PKINIT_CLIENT_FAILURE = 0x80090354,SEC_E_SMARTCARD_CERT_EXPIRED = 0x80090355,SEC_E_NO_S4U_PROT_SUPPORT = 0x80090356,SEC_E_CROSSREALM_DELEGATION_FAILURE = 0x80090357,SEC_E_REVOCATION_OFFLINE_KDC = 0x80090358,SEC_E_ISSUING_CA_UNTRUSTED_KDC = 0x80090359,SEC_E_KDC_CERT_EXPIRED = 0x8009035A,SEC_E_KDC_CERT_REVOKED = 0x8009035B,SEC_I_SIGNATURE_NEEDED = 0x9035C,SEC_E_INVALID_PARAMETER = 0x8009035D,SEC_E_DELEGATION_POLICY = 0x8009035E,SEC_E_POLICY_NLTM_ONLY = 0x8009035F,SEC_I_NO_RENEGOTIATION = 0x90360,SEC_E_NO_CONTEXT = 0x80090361,SEC_E_PKU2U_CERT_FAILURE = 0x80090362,SEC_E_MUTUAL_AUTH_FAILED = 0x80090363,SEC_I_MESSAGE_FRAGMENT = 0x90364,SEC_E_ONLY_HTTPS_ALLOWED = 0x80090365,SEC_I_CONTINUE_NEEDED_MESSAGE_OK = 0x90366,SEC_E_NO_SPM = 0x80090304,SEC_E_NOT_SUPPORTED = 0x80090302,};
enum MACRO_SENSE {SENSE_INFO_BUFFER_RETURN_TYPE_CDB = 0,SENSE_INFO_BUFFER_RETURN_TYPE_28BIT_TASKFILE = 1,SENSE_INFO_BUFFER_RETURN_TYPE_48BIT_TASKFILE = 2,SENSE_INFO_BUFFER_RETURN_TYPE_D2H_FIS = 3,};
enum MACRO_SETUP {SETUP_FAILURE = 0x85,AUDIT_FAILURE = 0x86,};
enum MACRO_SHIVA {SHIVA_FRAMING = 0x1000000,};
enum MACRO_SHORT {SHORT_LEAST_SIGNIFICANT_BIT = 0,SHORT_MOST_SIGNIFICANT_BIT = 1,};
enum MACRO_SLEEP {SLEEP_BUTTON_GENERIC_BIT = 5,SLEEP_BUTTON_GENERIC = 32,};
enum MACRO_SMART {SMART_GET_VERSION = 0x74080,SMART_SEND_DRIVE_COMMAND = 0x7C084,SMART_RCV_DRIVE_DATA = 0x7C088,};
enum MACRO_SMHBA {SMHBA_CAN_BIND_TO_WWPN = 0x1,SMHBA_CAN_BIND_TO_LUID = 0x2,SMHBA_CAN_BIND_ANY_LUNS = 0x400,SMHBA_CAN_BIND_AUTOMAP = 0x800,SMHBA_BIND_TO_WWPN = 0x1,SMHBA_BIND_TO_LUID = 0x2,};
enum MACRO_SPAPI {SPAPI_E_EXPECTED_SECTION_NAME = 0x800F0000,SPAPI_E_BAD_SECTION_NAME_LINE = 0x800F0001,SPAPI_E_SECTION_NAME_TOO_LONG = 0x800F0002,SPAPI_E_GENERAL_SYNTAX = 0x800F0003,SPAPI_E_WRONG_INF_STYLE = 0x800F0100,SPAPI_E_SECTION_NOT_FOUND = 0x800F0101,SPAPI_E_LINE_NOT_FOUND = 0x800F0102,SPAPI_E_NO_BACKUP = 0x800F0103,SPAPI_E_NO_ASSOCIATED_CLASS = 0x800F0200,SPAPI_E_CLASS_MISMATCH = 0x800F0201,SPAPI_E_DUPLICATE_FOUND = 0x800F0202,SPAPI_E_NO_DRIVER_SELECTED = 0x800F0203,SPAPI_E_KEY_DOES_NOT_EXIST = 0x800F0204,SPAPI_E_INVALID_DEVINST_NAME = 0x800F0205,SPAPI_E_INVALID_CLASS = 0x800F0206,SPAPI_E_DEVINST_ALREADY_EXISTS = 0x800F0207,SPAPI_E_DEVINFO_NOT_REGISTERED = 0x800F0208,SPAPI_E_INVALID_REG_PROPERTY = 0x800F0209,SPAPI_E_NO_INF = 0x800F020A,SPAPI_E_NO_SUCH_DEVINST = 0x800F020B,SPAPI_E_CANT_LOAD_CLASS_ICON = 0x800F020C,SPAPI_E_INVALID_CLASS_INSTALLER = 0x800F020D,SPAPI_E_DI_DO_DEFAULT = 0x800F020E,SPAPI_E_DI_NOFILECOPY = 0x800F020F,SPAPI_E_INVALID_HWPROFILE = 0x800F0210,SPAPI_E_NO_DEVICE_SELECTED = 0x800F0211,SPAPI_E_DEVINFO_LIST_LOCKED = 0x800F0212,SPAPI_E_DEVINFO_DATA_LOCKED = 0x800F0213,SPAPI_E_DI_BAD_PATH = 0x800F0214,SPAPI_E_NO_CLASSINSTALL_PARAMS = 0x800F0215,SPAPI_E_FILEQUEUE_LOCKED = 0x800F0216,SPAPI_E_BAD_SERVICE_INSTALLSECT = 0x800F0217,SPAPI_E_NO_CLASS_DRIVER_LIST = 0x800F0218,SPAPI_E_NO_ASSOCIATED_SERVICE = 0x800F0219,SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE = 0x800F021A,SPAPI_E_DEVICE_INTERFACE_ACTIVE = 0x800F021B,SPAPI_E_DEVICE_INTERFACE_REMOVED = 0x800F021C,SPAPI_E_BAD_INTERFACE_INSTALLSECT = 0x800F021D,SPAPI_E_NO_SUCH_INTERFACE_CLASS = 0x800F021E,SPAPI_E_INVALID_REFERENCE_STRING = 0x800F021F,SPAPI_E_INVALID_MACHINENAME = 0x800F0220,SPAPI_E_REMOTE_COMM_FAILURE = 0x800F0221,SPAPI_E_MACHINE_UNAVAILABLE = 0x800F0222,SPAPI_E_NO_CONFIGMGR_SERVICES = 0x800F0223,SPAPI_E_INVALID_PROPPAGE_PROVIDER = 0x800F0224,SPAPI_E_NO_SUCH_DEVICE_INTERFACE = 0x800F0225,SPAPI_E_DI_POSTPROCESSING_REQUIRED = 0x800F0226,SPAPI_E_INVALID_COINSTALLER = 0x800F0227,SPAPI_E_NO_COMPAT_DRIVERS = 0x800F0228,SPAPI_E_NO_DEVICE_ICON = 0x800F0229,SPAPI_E_INVALID_INF_LOGCONFIG = 0x800F022A,SPAPI_E_DI_DONT_INSTALL = 0x800F022B,SPAPI_E_INVALID_FILTER_DRIVER = 0x800F022C,SPAPI_E_NON_WINDOWS_NT_DRIVER = 0x800F022D,SPAPI_E_NON_WINDOWS_DRIVER = 0x800F022E,SPAPI_E_NO_CATALOG_FOR_OEM_INF = 0x800F022F,SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE = 0x800F0230,SPAPI_E_NOT_DISABLEABLE = 0x800F0231,SPAPI_E_CANT_REMOVE_DEVINST = 0x800F0232,SPAPI_E_INVALID_TARGET = 0x800F0233,SPAPI_E_DRIVER_NONNATIVE = 0x800F0234,SPAPI_E_IN_WOW64 = 0x800F0235,SPAPI_E_SET_SYSTEM_RESTORE_POINT = 0x800F0236,SPAPI_E_INCORRECTLY_COPIED_INF = 0x800F0237,SPAPI_E_SCE_DISABLED = 0x800F0238,SPAPI_E_UNKNOWN_EXCEPTION = 0x800F0239,SPAPI_E_PNP_REGISTRY_ERROR = 0x800F023A,SPAPI_E_REMOTE_REQUEST_UNSUPPORTED = 0x800F023B,SPAPI_E_NOT_AN_INSTALLED_OEM_INF = 0x800F023C,SPAPI_E_INF_IN_USE_BY_DEVICES = 0x800F023D,SPAPI_E_DI_FUNCTION_OBSOLETE = 0x800F023E,SPAPI_E_NO_AUTHENTICODE_CATALOG = 0x800F023F,SPAPI_E_AUTHENTICODE_DISALLOWED = 0x800F0240,SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER = 0x800F0241,SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED = 0x800F0242,SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED = 0x800F0243,SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH = 0x800F0244,SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE = 0x800F0245,SPAPI_E_DEVICE_INSTALLER_NOT_READY = 0x800F0246,SPAPI_E_DRIVER_STORE_ADD_FAILED = 0x800F0247,SPAPI_E_DEVICE_INSTALL_BLOCKED = 0x800F0248,SPAPI_E_DRIVER_INSTALL_BLOCKED = 0x800F0249,SPAPI_E_WRONG_INF_TYPE = 0x800F024A,SPAPI_E_FILE_HASH_NOT_IN_CATALOG = 0x800F024B,SPAPI_E_DRIVER_STORE_DELETE_FAILED = 0x800F024C,SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW = 0x800F0300,SPAPI_E_ERROR_NOT_INSTALLED = 0x800F1000,};
enum MACRO_SPEED {SPEED_FLAGS_100 = 0x1,SPEED_FLAGS_200 = 0x2,SPEED_FLAGS_400 = 0x4,SPEED_FLAGS_800 = 0x8,SPEED_FLAGS_1600 = 0x10,SPEED_FLAGS_3200 = 0x20,SPEED_FLAGS_FASTEST = 0x80000000,};
enum MACRO_SPTWB {SPTWB_SENSE_LENGTH = 32,SPTWB_DATA_LENGTH = 512,};
enum MACRO_SRBEV {SRBEV_BUS_RESET = 0x1,SRBEV_SCSI_ASYNC_NOTIFICATION = 0x2,};
enum MACRO_SRBEX {SRBEX_DATA_SCSI_CDB_VAR_LENGTH_MAX = -1,};
enum MACRO_START {START_UNIT_TIMEOUT = 240,};
enum MACRO_STATE {STATE_CLEAR_LOCATION = 0x0,STATE_SET_LOCATION = 0x4,};
enum MACRO_SWDMA {SWDMA_MODE0 = 32,SWDMA_MODE1 = 64,SWDMA_MODE2 = 128,};
enum MACRO_SYNCH {SYNCH_ON_SY = 1,SYNCH_ON_TAG = 2,SYNCH_ON_TIME = 4,};
enum MACRO_TCODE {TCODE_WRITE_REQUEST_QUADLET = 0,TCODE_WRITE_REQUEST_BLOCK = 1,TCODE_WRITE_RESPONSE = 2,TCODE_RESERVED1 = 3,TCODE_READ_REQUEST_QUADLET = 4,TCODE_READ_REQUEST_BLOCK = 5,TCODE_READ_RESPONSE_QUADLET = 6,TCODE_READ_RESPONSE_BLOCK = 7,TCODE_CYCLE_START = 8,TCODE_LOCK_REQUEST = 9,TCODE_ISOCH_DATA_BLOCK = 10,TCODE_LOCK_RESPONSE = 11,TCODE_RESERVED2 = 12,TCODE_RESERVED3 = 13,TCODE_PHY_PACKET = 14,TCODE_SELFID = 14,TCODE_RESERVED4 = 15,TCODE_REQUEST_BLOCK_MASK = 1,TCODE_RESPONSE_MASK = 2,};
enum MACRO_TCPIP {TCPIP_AOAC_NIC_ACTIVE_REFERENCE_LEAK = 0x150,};
enum MACRO_THIRD {THIRD_PARTY_FILE_SYSTEM_FAILURE = 0x108,};
enum MACRO_TICKS {TICKS_PER_SECOND = 10000000,TICKS_PER_MILLESECOND = 10000,};
enum MACRO_TIMER {TIMER_OR_DPC_INVALID = 0xC7,};
enum MACRO_TITLE {TITLE_SC_MESSAGE_BOX = 0xC0001B75,};
enum MACRO_TLOSS {TLOSS = 5,};
enum MACRO_TOKEN {TOKEN_ASSIGN_PRIMARY = 0x1,TOKEN_DUPLICATE = 0x2,TOKEN_IMPERSONATE = 0x4,TOKEN_QUERY = 0x8,TOKEN_QUERY_SOURCE = 0x10,TOKEN_ADJUST_PRIVILEGES = 0x20,TOKEN_ADJUST_GROUPS = 0x40,TOKEN_ADJUST_DEFAULT = 0x80,TOKEN_ADJUST_SESSIONID = 0x100,TOKEN_ALL_ACCESS_P = 0xF00FF,TOKEN_ALL_ACCESS = 0xF01FF,TOKEN_READ = 0x20008,TOKEN_WRITE = 0x200E0,TOKEN_EXECUTE = 0x20000,TOKEN_MANDATORY_POLICY_OFF = 0x0,TOKEN_MANDATORY_POLICY_NO_WRITE_UP = 0x1,TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN = 0x2,TOKEN_MANDATORY_POLICY_VALID_MASK = 0x3,};
enum MACRO_TPM20 {TPM20_TABLE_SIGNATURE = 843927636,};
enum MACRO_TPM_E {TPM_E_PPI_ACPI_FAILURE = 0x80290300,TPM_E_PPI_USER_ABORT = 0x80290301,TPM_E_PPI_BIOS_FAILURE = 0x80290302,TPM_E_PPI_NOT_SUPPORTED = 0x80290303,TPM_E_PPI_BLOCKED_IN_BIOS = 0x80290304,TPM_E_PCP_ERROR_MASK = 0x80290400,TPM_E_PCP_DEVICE_NOT_READY = 0x80290401,TPM_E_PCP_INVALID_HANDLE = 0x80290402,TPM_E_PCP_INVALID_PARAMETER = 0x80290403,TPM_E_PCP_FLAG_NOT_SUPPORTED = 0x80290404,TPM_E_PCP_NOT_SUPPORTED = 0x80290405,TPM_E_PCP_BUFFER_TOO_SMALL = 0x80290406,TPM_E_PCP_INTERNAL_ERROR = 0x80290407,TPM_E_PCP_AUTHENTICATION_FAILED = 0x80290408,TPM_E_PCP_AUTHENTICATION_IGNORED = 0x80290409,TPM_E_PCP_POLICY_NOT_FOUND = 0x8029040A,TPM_E_PCP_PROFILE_NOT_FOUND = 0x8029040B,TPM_E_PCP_VALIDATION_FAILED = 0x8029040C,};
enum MACRO_TRACE {TRACE_LEVEL_FATAL = 1,TRACE_LEVEL_ERROR = 2,TRACE_LEVEL_WARNING = 3,TRACE_LEVEL_INFORMATION = 4,TRACE_LEVEL_VERBOSE = 5,};
enum MACRO_TRANS {TRANS_SET_NMPIPE_STATE = 0x1,TRANS_RAW_READ_NMPIPE = 0x11,TRANS_QUERY_NMPIPE_STATE = 0x21,TRANS_QUERY_NMPIPE_INFO = 0x22,TRANS_PEEK_NMPIPE = 0x23,TRANS_TRANSACT_NMPIPE = 0x26,TRANS_RAW_WRITE_NMPIPE = 0x31,TRANS_READ_NMPIPE = 0x36,TRANS_WRITE_NMPIPE = 0x37,TRANS_WAIT_NMPIPE = 0x53,TRANS_CALL_NMPIPE = 0x54,TRANS_MAILSLOT_WRITE = 0x1,};
enum MACRO_TRUST {TRUST_E_SYSTEM_ERROR = 0x80096001,TRUST_E_NO_SIGNER_CERT = 0x80096002,TRUST_E_COUNTER_SIGNER = 0x80096003,TRUST_E_CERT_SIGNATURE = 0x80096004,TRUST_E_TIME_STAMP = 0x80096005,TRUST_E_BAD_DIGEST = 0x80096010,TRUST_E_BASIC_CONSTRAINTS = 0x80096019,TRUST_E_FINANCIAL_CRITERIA = 0x8009601E,};
enum MACRO_UCHAR {UCHAR_MAX = 0xFF,};
enum MACRO_UDMA0 {UDMA0 = 11,};
enum MACRO_USBDI {USBDI_VERSION = 0x600,};
enum MACRO_USHRT {USHRT_MAX = 0xFFFF,};
enum MACRO_VALID {VALID_INHERIT_FLAGS = 0x1F,};
enum MACRO_VIDEO {VIDEO_DRIVER_DEBUG_REPORT_REQUEST = 0x400000AD,};
enum MACRO_WCHAR {WCHAR_MIN = 0,WCHAR_MAX = 65535,};
enum MACRO_WNODE {WNODE_FLAG_ALL_DATA = 0x1,WNODE_FLAG_SINGLE_INSTANCE = 0x2,WNODE_FLAG_SINGLE_ITEM = 0x4,WNODE_FLAG_EVENT_ITEM = 0x8,WNODE_FLAG_FIXED_INSTANCE_SIZE = 0x10,WNODE_FLAG_TOO_SMALL = 0x20,WNODE_FLAG_INSTANCES_SAME = 0x40,WNODE_FLAG_STATIC_INSTANCE_NAMES = 0x80,WNODE_FLAG_INTERNAL = 0x100,WNODE_FLAG_USE_TIMESTAMP = 0x200,WNODE_FLAG_PERSIST_EVENT = 0x400,WNODE_FLAG_EVENT_REFERENCE = 0x2000,WNODE_FLAG_ANSI_INSTANCENAMES = 0x4000,WNODE_FLAG_METHOD_ITEM = 0x8000,WNODE_FLAG_PDO_INSTANCE_NAMES = 0x10000,WNODE_FLAG_TRACED_GUID = 0x20000,WNODE_FLAG_LOG_WNODE = 0x40000,WNODE_FLAG_USE_GUID_PTR = 0x80000,WNODE_FLAG_USE_MOF_PTR = 0x100000,WNODE_FLAG_NO_HEADER = 0x200000,WNODE_FLAG_SEND_DATA_BLOCK = 0x400000,WNODE_FLAG_SEVERITY_MASK = 0xFF000000,};
enum MACRO_WRITE {WRITE_DAC = 0x40000,WRITE_OWNER = 0x80000,};
enum MACRO__CALL {_CALL_REPORTFAULT = 0x2,};
enum MACRO__HEAP {_HEAP_MAXREQ = 0xFFFFFFE0,};
enum MACRO__HOOK {_HOOK_ALLOC = 1,_HOOK_REALLOC = 2,_HOOK_FREE = 3,};
enum MACRO__SIDD {_SIDD_UBYTE_OPS = 0x0,_SIDD_UWORD_OPS = 0x1,_SIDD_SBYTE_OPS = 0x2,_SIDD_SWORD_OPS = 0x3,_SIDD_CMP_EQUAL_ANY = 0x0,_SIDD_CMP_RANGES = 0x4,_SIDD_CMP_EQUAL_EACH = 0x8,_SIDD_CMP_EQUAL_ORDERED = 0xC,_SIDD_POSITIVE_POLARITY = 0x0,_SIDD_NEGATIVE_POLARITY = 0x10,_SIDD_MASKED_POSITIVE_POLARITY = 0x20,_SIDD_MASKED_NEGATIVE_POLARITY = 0x30,_SIDD_LEAST_SIGNIFICANT = 0x0,_SIDD_MOST_SIGNIFICANT = 0x40,_SIDD_BIT_MASK = 0x0,_SIDD_UNIT_MASK = 0x40,};
enum MACRO__UI32 {_UI32_MAX = 0xFFFFFFFF,};
enum MACRO__UI64 {_UI64_MAX = 0xFFFFFFFF,SIZE_MAX = 0xFFFFFFFF,RSIZE_MAX = 0xFFFFFFFF,};
enum MACRO__WAIT {_WAIT_CHILD = 0,_WAIT_GRANDCHILD = 1,};
enum MACRO___GOT {__GOT_SECURE_LIB__ = 200411,};
enum MACRO___SAL {__SAL_H_FULL_VER = 140050727,};
enum MACRO___drv {__drv_typeConst = 0,__drv_typeCond = 1,__drv_typeBitset = 2,__drv_typeExpr = 3,};
enum MACRO_fNDIS {fNDIS_GUID_TO_OID = 0x1,fNDIS_GUID_TO_STATUS = 0x2,fNDIS_GUID_ANSI_STRING = 0x4,fNDIS_GUID_UNICODE_STRING = 0x8,fNDIS_GUID_ARRAY = 0x10,fNDIS_GUID_ALLOW_READ = 0x20,fNDIS_GUID_ALLOW_WRITE = 0x40,fNDIS_GUID_METHOD = 0x80,fNDIS_GUID_NDIS_RESERVED = 0x100,fNDIS_GUID_SUPPORT_COMMON_HEADER = 0x200,};
enum MACRO_login {login = 0,full = 1,logout = 2,};
typedef struct _9E657745785F4F2083998F3B8B91C4CD MEDIUM_INFO;
typedef int NDIS_STATUS;
typedef struct _NDK_ADAPTER NDK_ADAPTER;
typedef struct _4165210F16C022CFBA13D08EABF6E295 NDK_VERSION;
typedef union _NET_LUID_LH NET_LUID_LH;
typedef struct _X_FILTER NULL_FILTER;
typedef struct _OS_DEP_DATA OS_DEP_DATA;
typedef struct _OWNER_ENTRY OWNER_ENTRY;
typedef struct _ARP_HEADER *PARP_HEADER;
typedef struct _ATM_RAW_IE *PATM_RAW_IE;
typedef struct _ATM_VPIVCI *PATM_VPIVCI;
typedef struct _AVC_PIN_ID *PAVC_PIN_ID;
typedef struct _AddPort_IN *PAddPort_IN;
typedef struct _BDA_BUFFER *PBDA_BUFFER;
typedef struct _BDA_STRING *PBDA_STRING;
typedef struct _BGRT_TABLE *PBGRT_TABLE;
typedef struct _BOOT_TABLE *PBOOT_TABLE;
typedef struct _BSSID_INFO *PBSSID_INFO;
typedef struct _CIP_LISTEN *PCIP_LISTEN;
typedef struct _CONFIG_ROM *PCONFIG_ROM;
typedef struct _CO_ADDRESS *PCO_ADDRESS;
typedef struct _CYCLE_TIME *PCYCLE_TIME;
typedef struct _DEVPROPKEY *PDEVPROPKEY;
typedef struct _DICTIONARY *PDICTIONARY;
typedef IDmaChannel *PDMACHANNEL;
typedef struct _DOT11_SSID *PDOT11_SSID;
typedef struct tagDRMFORWARD *PDRMFORWARD;
typedef struct _DS3DVECTOR *PDS3DVECTOR;
typedef struct _ECP_HEADER *PECP_HEADER;
typedef union _EIGHT_BYTE *PEIGHT_BYTE;
typedef struct _X_FILTER *PETH_FILTER;
typedef struct _FAST_MUTEX *PFAST_MUTEX;
typedef struct _FLT_FILTER *PFLT_FILTER;
typedef struct _FLT_VOLUME *PFLT_VOLUME;
typedef struct _FPDT_TABLE *PFPDT_TABLE;
typedef struct _FSALLOCATE *PFSALLOCATE;
typedef struct _GTDT_TABLE *PGTDT_TABLE;
typedef struct HBA_ScsiId *PHBA_SCSIID;
typedef struct _I2CControl *PI2CControl;
typedef struct _IMAGE_INFO *PIMAGE_INFO;
typedef struct in_pktinfo *PIN_PKTINFO;
typedef struct _IO_ADDRESS *PIO_ADDRESS;
typedef struct _IPPT_TABLE *PIPPT_TABLE;
typedef struct _ISCSI_Path *PISCSI_Path;
typedef struct _IVHD_BLOCK *PIVHD_BLOCK;
typedef struct _IVMD_BLOCK *PIVMD_BLOCK;
typedef struct _KAPC_STATE *PKAPC_STATE;
typedef struct _KINTERRUPT *PKINTERRUPT;
typedef struct _0237C65E8322975CE5980DC9C74E362C *PKSDPC_ITEM;
typedef struct _KSEMAPHORE *PKSEMAPHORE;
typedef struct _CA0DACF90AABDE33CADDF7416F0C17F2 *PKSINTERVAL;
typedef struct _D611436986C6FEF0F654B123D787805F *PKSPRIORITY;
typedef struct _D8768C71F24D405D4B7DEC8016730D6C *PKSTOPOLOGY;
typedef struct _KS_DVD_YUV *PKS_DVD_YUV;
typedef struct tagKS_RGBQUAD *PKS_RGBQUAD;
typedef struct _LIST_ENTRY *PLIST_ENTRY;
typedef struct _LOCK_STATE *PLOCK_STATE;
typedef struct _MCFG_TABLE *PMCFG_TABLE;
typedef union _MCG_STATUS *PMCG_STATUS;
typedef union _MCI_STATUS *PMCI_STATUS;
typedef struct _MLD_HEADER *PMLD_HEADER;
typedef struct _MSAcpiInfo *PMSAcpiInfo;
typedef struct _MSWmi_Guid *PMSWmi_Guid;
typedef struct _NAME_CACHE *PNAME_CACHE;
typedef struct _NDIS_EVENT *PNDIS_EVENT;
typedef struct _NDIS_TIMER *PNDIS_TIMER;
typedef struct _NET_BUFFER *PNET_BUFFER;
typedef struct _OEM0_TABLE *POEM0_TABLE;
typedef struct _PORT_OUTPUT PORT_OUTPUT;
typedef union _POWER_STATE POWER_STATE;
typedef struct _PCIBUSDATA *PPCIBUSDATA;
typedef struct _PCW_BUFFER *PPCW_BUFFER;
typedef IPortEvents *PPORTEVENTS;
typedef IPortWaveRT *PPORTWAVERT;
typedef struct _PUBLIC_BCB *PPUBLIC_BCB;
typedef struct _RDBSS_DATA *PRDBSS_DATA;
typedef struct _RX_CONTEXT *PRX_CONTEXT;
typedef struct _SENSE_DATA *PSENSE_DATA;
typedef struct _SE_EXPORTS *PSE_EXPORTS;
typedef struct SLIT_TABLE *PSLIT_TABLE;
typedef unsigned short *PSMB_USHORT;
typedef struct SMHBA_LUID *PSMHBA_LUID;
typedef union SMHBA_Port *PSMHBA_PORT;
typedef struct _SRBEX_DATA *PSRBEX_DATA;
typedef struct _SYSID_1394 *PSYSID_1394;
typedef struct _SYSID_UUID *PSYSID_UUID;
typedef struct _SendRLS_IN *PSendRLS_IN;
typedef struct _SendRPL_IN *PSendRPL_IN;
typedef struct _SendRPS_IN *PSendRPS_IN;
typedef struct _SendSRL_IN *PSendSRL_IN;
typedef struct _TAPE_ERASE *PTAPE_ERASE;
typedef struct _TA_ADDRESS *PTA_ADDRESS;
typedef struct _TOKEN_USER *PTOKEN_USER;
typedef struct _TRACK_DATA *PTRACK_DATA;
typedef struct _VAR_STRING *PVAR_STRING;
typedef struct _F686D1C2766FDD5B6EB9F09F9CA57BCC *PVIDEO_CLUT;
typedef struct _VIDEO_MODE *PVIDEO_MODE;
typedef struct _V_NET_ROOT *PV_NET_ROOT;
typedef struct cmsghdr *PWSACMSGHDR;
typedef struct _WSK_SOCKET *PWSK_SOCKET;
typedef struct _WST_BUFFER *PWST_BUFFER;
typedef struct _XSAVE_AREA *PXSAVE_AREA;
typedef struct _QOS_SD_MODE QOS_SD_MODE;
typedef struct _F903DA300906E5E06303D440D5AEF258 RATING_INFO;
typedef int SHANDLE_PTR;
typedef struct _SI_COPYFILE SI_COPYFILE;
typedef struct _SINGLE_LIST_ENTRY SLIST_ENTRY;
typedef struct _SNAP_HEADER SNAP_HEADER;
typedef struct sockaddr_dl SOCKADDR_DL;
typedef struct sockaddr_in SOCKADDR_IN;
typedef struct _SRB_HISTORY SRB_HISTORY;
typedef struct _SecPkgInfoW SecPkgInfoW;
typedef struct _SendLIRR_IN SendLIRR_IN;
typedef struct _SendRLS_OUT SendRLS_OUT;
typedef struct _SendRNID_IN SendRNID_IN;
typedef struct _SendRPL_OUT SendRPL_OUT;
typedef struct _SendRPS_OUT SendRPS_OUT;
typedef struct _SendSRL_OUT SendSRL_OUT;
typedef struct tcp_opt_mss TCP_OPT_MSS;
typedef struct _TDI_REQUEST TDI_REQUEST;
typedef struct _TDI_VERSION_ TDI_VERSION;
typedef struct _TIME_FIELDS TIME_FIELDS;
typedef struct _TOKEN_OWNER TOKEN_OWNER;
typedef struct _TPM20_TABLE TPM20_TABLE;
typedef struct USBD_HANDLE__ *USBD_HANDLE;
typedef struct _VENDOR_ATTR VENDOR_ATTR;
typedef struct _VM_COUNTERS VM_COUNTERS;
typedef struct _VOLUMELABEL VOLUMELABEL;
typedef struct _5A8D7CCD30F40712144BEFCDAC7E1929 WMIREGGUIDW;
typedef struct _E054F7F0B81E76E3D6D098531C7E763C WMIREGINFOW;
typedef struct _WSK_TDI_MAP WSK_TDI_MAP;
typedef struct _XSTATE_SAVE XSTATE_SAVE;
typedef struct _ZONE_HEADER ZONE_HEADER;
typedef struct _BA519187DB4FB038EDB1959BB4D2DF27 _CRT_DOUBLE;
struct _CYCLE_TIME {unsigned int CL_CycleOffset : 12;unsigned int CL_CycleCount : 13;unsigned int CL_SecondCount : 7;};
struct _ECP_HEADER;
enum _EVENT_TYPE {NotificationEvent = 0x0,SynchronizationEvent = 0x1,};
struct _LIST_ENTRY {struct _LIST_ENTRY *Flink;struct _LIST_ENTRY *Blink;};
enum _LLDP_SCOPE {LldpNearestNeighbor = 0x1,LldpNearestNonTpmrBridge = 0x2,LldpNearestCustomerBridge = 0x3,LldpDefaultScope = 0x1,};
typedef struct _2AE221845231FFCECC219BE7F7049133 _LONGDOUBLE;
enum _MEDIA_TYPE {Unknown = 0x0,F5_1Pt2_512 = 0x1,F3_1Pt44_512 = 0x2,F3_2Pt88_512 = 0x3,F3_20Pt8_512 = 0x4,F3_720_512 = 0x5,F5_360_512 = 0x6,F5_320_512 = 0x7,F5_320_1024 = 0x8,F5_180_512 = 0x9,F5_160_512 = 0xA,RemovableMedia = 0xB,FixedMedia = 0xC,F3_120M_512 = 0xD,F3_640_512 = 0xE,F5_640_512 = 0xF,F5_720_512 = 0x10,F3_1Pt2_512 = 0x11,F3_1Pt23_1024 = 0x12,F5_1Pt23_1024 = 0x13,F3_128Mb_512 = 0x14,F3_230Mb_512 = 0x15,F8_256_128 = 0x16,F3_200Mb_512 = 0x17,F3_240M_512 = 0x18,F3_32M_512 = 0x19,};
enum _SUITE_TYPE {SmallBusiness = 0x0,Enterprise = 0x1,BackOffice = 0x2,CommunicationServer = 0x3,TerminalServer = 0x4,SmallBusinessRestricted = 0x5,EmbeddedNT = 0x6,DataCenter = 0x7,SingleUserTS = 0x8,Personal = 0x9,Blade = 0xA,EmbeddedRestricted = 0xB,SecurityAppliance = 0xC,StorageServer = 0xD,ComputeServer = 0xE,WHServer = 0xF,PhoneNT = 0x10,MaxSuiteType = 0x11,};
enum _TIMER_TYPE {NotificationTimer = 0x0,SynchronizationTimer = 0x1,};
enum _TOKEN_TYPE {TokenPrimary = 0x1,TokenImpersonation = 0x2,};
struct _WSK_SOCKET { void *Dispatch;};
enum _WWAN_RADIO {WwanRadioOff = 0x0,WwanRadioOn = 0x1,};
struct _diskfree_t {unsigned int total_clusters;unsigned int avail_clusters;unsigned int sectors_per_cluster;unsigned int bytes_per_sector;};
typedef struct _ACE_HEADER ACE_HEADER;
typedef struct _ARP_HEADER ARP_HEADER;
typedef struct _ATM_RAW_IE ATM_RAW_IE;
typedef struct _ATM_VPIVCI ATM_VPIVCI;
typedef struct _AVC_PIN_ID AVC_PIN_ID;
typedef struct _AddPort_IN AddPort_IN;
typedef struct _BDA_BUFFER BDA_BUFFER;
typedef struct _BDA_STRING BDA_STRING;
typedef struct _BGRT_TABLE BGRT_TABLE;
typedef struct _BOOT_TABLE BOOT_TABLE;
typedef struct _BRB_HEADER BRB_HEADER;
typedef struct _BSSID_INFO BSSID_INFO;
typedef struct _CIP_LISTEN CIP_LISTEN;
typedef struct _CONFIG_ROM CONFIG_ROM;
typedef struct _CO_ADDRESS CO_ADDRESS;
typedef struct _CYCLE_TIME CYCLE_TIME;
typedef struct _D3DDDIRECT D3DDDIRECT;
typedef struct _DEVPROPKEY DEVPROPKEY;
typedef struct _DICTIONARY DICTIONARY;
enum DOT11_BAND {dot11_band_2p4g = 0x1,dot11_band_4p9g = 0x2,dot11_band_5g = 0x3,};
typedef struct _DOT11_SSID DOT11_SSID;
typedef struct _DPC_BUFFER DPC_BUFFER;
typedef struct tagDRMFORWARD DRMFORWARD;
typedef struct _DS3DVECTOR DS3DVECTOR;
typedef struct _ECP_HEADER ECP_HEADER;
typedef union _EIGHT_BYTE EIGHT_BYTE;
typedef struct _X_FILTER ETH_FILTER;
typedef struct _FAST_MUTEX FAST_MUTEX;
typedef struct _FPDT_TABLE FPDT_TABLE;
typedef struct _FSALLOCATE FSALLOCATE;
typedef struct _GTDT_TABLE GTDT_TABLE;
typedef unsigned int HANDLE_PTR;
typedef struct HBA_ScsiId HBA_SCSIID;
struct HMONITOR__ {int unused;};
struct HPALETTE__ {int unused;};
typedef struct _I2CControl I2CControl;
typedef struct _IMAGE_INFO IMAGE_INFO;
typedef struct in_pktinfo IN_PKTINFO;
typedef struct _IO_ADDRESS IO_ADDRESS;
typedef struct _IPPT_TABLE IPPT_TABLE;
typedef struct _ISA_VECTOR ISA_VECTOR;
typedef struct _ISCSI_Path ISCSI_Path;
typedef struct _IVHD_BLOCK IVHD_BLOCK;
typedef struct _IVMD_BLOCK IVMD_BLOCK;
typedef struct _KAPC_STATE KAPC_STATE;
typedef struct _0237C65E8322975CE5980DC9C74E362C KSDPC_ITEM;
typedef struct _KSEMAPHORE KSEMAPHORE;
typedef struct _CA0DACF90AABDE33CADDF7416F0C17F2 KSINTERVAL;
typedef struct _D611436986C6FEF0F654B123D787805F KSPRIORITY;
typedef struct _D8768C71F24D405D4B7DEC8016730D6C KSTOPOLOGY;
typedef struct _KS_DVD_YUV KS_DVD_YUV;
typedef struct tagKS_RGBQUAD KS_RGBQUAD;
typedef struct _LIST_ENTRY LIST_ENTRY;
enum LNB_Source {BDA_LNB_SOURCE_NOT_SET = 0xFFFFFFFF,BDA_LNB_SOURCE_NOT_DEFINED = 0x0,BDA_LNB_SOURCE_A = 0x1,BDA_LNB_SOURCE_B = 0x2,BDA_LNB_SOURCE_C = 0x3,BDA_LNB_SOURCE_D = 0x4,BDA_LNB_SOURCE_MAX = 0x5,};
typedef struct _LOCK_STATE LOCK_STATE;
typedef struct _FILETIME *LPFILETIME;
typedef struct _flowspec *LPFLOWSPEC;
typedef struct in6_addr *LPIN6_ADDR;
typedef struct sockaddr *LPSOCKADDR;
enum MACRO_AAL5 {AAL5_MODE_MESSAGE = 0x1,AAL5_MODE_STREAMING = 0x2,AAL5_SSCS_NULL = 0x0,AAL5_SSCS_SSCOP_ASSURED = 0x1,AAL5_SSCS_SSCOP_NON_ASSURED = 0x2,AAL5_SSCS_FRAME_RELAY = 0x4,};
enum MACRO_ACPI {ACPI_DRIVER_INTERNAL = 0xA3,};
enum MACRO_ALUA {ALUA_NOT_SUPPORTED = 0,ALUA_IMPLICIT_ONLY = 1,ALUA_EXPLICIT_ONLY = 2,ALUA_IMPLICIT_AND_EXPLICIT = 3,};
enum MACRO_ANSI {ANSI_NULL = 0,UNICODE_NULL = 0,};
enum MACRO_AOAC {AOAC_CAPABLE_PLATFORM_BIT = 21,AOAC_CAPABLE_PLATFORM = 2097152,};
enum MACRO_APIC {PROCESSOR_LOCAL_APIC = 0,IO_APIC = 1,};
enum MACRO_APPX {APPX_E_PACKAGING_INTERNAL = 0x80080200,APPX_E_INTERLEAVING_NOT_ALLOWED = 0x80080201,APPX_E_RELATIONSHIPS_NOT_ALLOWED = 0x80080202,APPX_E_MISSING_REQUIRED_FILE = 0x80080203,APPX_E_INVALID_MANIFEST = 0x80080204,APPX_E_INVALID_BLOCKMAP = 0x80080205,APPX_E_CORRUPT_CONTENT = 0x80080206,APPX_E_BLOCK_HASH_INVALID = 0x80080207,APPX_E_REQUESTED_RANGE_TOO_LARGE = 0x80080208,APPX_E_INVALID_SIP_CLIENT_DATA = 0x80080209,};
enum MACRO_ARAP {ARAP_V1_FRAMING = 0x4,ARAP_V2_FRAMING = 0x8,ARAP_FRAMING = 0xC,};
enum MACRO_ARIR {ARIR_SIOAPIC = 0x1,ARIR_PCI_ENUMERABLE = 0x2,};
enum MACRO_ASPM {ASPM_NOT_SUPPORTED_BIT = 4,ASPM_NOT_SUPPORTED = 16,};
enum MACRO_ATSR {ATSR_FLAG_ALL_PORTS = 1,};
enum MACRO_BASE {KADDRESS_BASE = 0,UADDRESS_BASE = 0,};
enum MACRO_BCOB {BCOB_A = 0x0,BCOB_C = 0x1,BCOB_X = 0x2,};
enum MACRO_BDCB {BDCB_IMAGEFLAGS_FAILED_CODE_INTEGRITY = 1,};
enum MACRO_BDIF {BDIF_ADDRESS = 0x1,BDIF_COD = 0x2,BDIF_NAME = 0x4,BDIF_PAIRED = 0x8,BDIF_PERSONAL = 0x10,BDIF_CONNECTED = 0x20,BDIF_SHORT_NAME = 0x40,BDIF_VISIBLE = 0x80,BDIF_SSP_SUPPORTED = 0x100,BDIF_SSP_PAIRED = 0x200,BDIF_SSP_MITM_PROTECTED = 0x400,BDIF_RSSI = 0x1000,BDIF_EIR = 0x2000,BDIF_BR = 0x4000,BDIF_LE = 0x8000,BDIF_LE_PAIRED = 0x10000,BDIF_LE_PERSONAL = 0x20000,BDIF_LE_MITM_PROTECTED = 0x40000,BDIF_LE_PRIVACY_ENABLED = 0x80000,BDIF_VALID_FLAGS = 0xFF6FF,};
enum MACRO_BGRT {BGRT_STATUS_IMAGE_VALID = 0x1,BGRT_SIGNATURE = 0x54524742,};
enum MACRO_BHLI {BHLI_ISO = 0x0,BHLI_UserSpecific = 0x1,BHLI_HighLayerProfile = 0x2,BHLI_VendorSpecificAppId = 0x3,};
enum MACRO_BLLI {BLLI_L2_ISO_1745 = 0x1,BLLI_L2_Q921 = 0x2,BLLI_L2_X25L = 0x6,BLLI_L2_X25M = 0x7,BLLI_L2_ELAPB = 0x8,BLLI_L2_HDLC_ARM = 0x9,BLLI_L2_HDLC_NRM = 0xA,BLLI_L2_HDLC_ABM = 0xB,BLLI_L2_LLC = 0xC,BLLI_L2_X75 = 0xD,BLLI_L2_Q922 = 0xE,BLLI_L2_USER_SPECIFIED = 0x10,BLLI_L2_ISO_7776 = 0x11,BLLI_L3_X25 = 0x6,BLLI_L3_ISO_8208 = 0x7,BLLI_L3_X223 = 0x8,BLLI_L3_SIO_8473 = 0x9,BLLI_L3_T70 = 0xA,BLLI_L3_ISO_TR9577 = 0xB,BLLI_L3_USER_SPECIFIED = 0x10,BLLI_L3_IPI_SNAP = 0x80,BLLI_L3_IPI_IP = 0xCC,};
enum MACRO_BOOL {FALSE = 0,TRUE = 1,};
enum MACRO_BOOT {BOOT_SIGNATURE = 0x544F4F42,};
enum MACRO_BTHX {BTHX_DDI_VERSION_1 = 0x1,BTHX_IOCTL_BASE = 0x0,};
enum MACRO_BYTE {BYTE_0_MASK = 0xFF,};
enum MACRO_CALL {CALL_PARAMETERS_CHANGED = 0x2,};
enum MACRO_CDDA {CDDA_CHANNEL_MUTED = 0x0,CDDA_CHANNEL_ZERO = 0x1,CDDA_CHANNEL_ONE = 0x2,CDDA_CHANNEL_TWO = 0x4,CDDA_CHANNEL_THREE = 0x8,};
enum MACRO_CDVD {CDVD_LMT_CADDY = 0,CDVD_LMT_TRAY = 1,CDVD_LMT_POPUP = 2,CDVD_LMT_RESERVED1 = 3,CDVD_LMT_CHANGER_INDIVIDUAL = 4,CDVD_LMT_CHANGER_CARTRIDGE = 5,CDVD_LMT_RESERVED2 = 6,CDVD_LMT_RESERVED3 = 7,};
enum MACRO_CERT {CERT_E_EXPIRED = 0x800B0101,CERT_E_VALIDITYPERIODNESTING = 0x800B0102,CERT_E_ROLE = 0x800B0103,CERT_E_PATHLENCONST = 0x800B0104,CERT_E_CRITICAL = 0x800B0105,CERT_E_PURPOSE = 0x800B0106,CERT_E_ISSUERCHAINING = 0x800B0107,CERT_E_MALFORMED = 0x800B0108,CERT_E_UNTRUSTEDROOT = 0x800B0109,CERT_E_CHAINING = 0x800B010A,};
enum MACRO_CHAR {CHAR_BIT = 8,};
enum MACRO_CLFS {CLFS_FLAG_NO_FLAGS = 0x0,CLFS_FLAG_FORCE_APPEND = 0x1,CLFS_FLAG_FORCE_FLUSH = 0x2,CLFS_FLAG_USE_RESERVATION = 0x4,CLFS_FLAG_REENTRANT_FILE_SYSTEM = 0x8,CLFS_FLAG_NON_REENTRANT_FILTER = 0x10,CLFS_FLAG_REENTRANT_FILTER = 0x20,CLFS_FLAG_IGNORE_SHARE_ACCESS = 0x40,CLFS_FLAG_READ_IN_PROGRESS = 0x80,CLFS_FLAG_MINIFILTER_LEVEL = 0x100,CLFS_FLAG_HIDDEN_SYSTEM_LOG = 0x200,CLFS_FLAG_FILTER_INTERMEDIATE_LEVEL = 0x10,CLFS_FLAG_FILTER_TOP_LEVEL = 0x20,};
enum MACRO_CLIP {CLIP_NOT = 0x0,CLIP_SUS = 0x20,};
enum MACRO_CMOS {CMOS_RTC_NOT_PRESENT_BIT = 5,CMOS_RTC_NOT_PRESENT = 32,};
enum MACRO_CNSS {CNSS_FILE_SYSTEM_FILTER = 0xA4,};
enum MACRO_CORE {CORE_PARKING_POLICY_CHANGE_IDEAL = 0,CORE_PARKING_POLICY_CHANGE_SINGLE = 1,CORE_PARKING_POLICY_CHANGE_ROCKET = 2,CORE_PARKING_POLICY_CHANGE_MULTISTEP = 3,CORE_PARKING_POLICY_CHANGE_MAX = 3,};
enum MACRO_CO_E {CO_E_INIT_TLS = 0x80004006,CO_E_INIT_SHARED_ALLOCATOR = 0x80004007,CO_E_INIT_MEMORY_ALLOCATOR = 0x80004008,CO_E_INIT_CLASS_CACHE = 0x80004009,CO_E_INIT_RPC_CHANNEL = 0x8000400A,CO_E_INIT_TLS_SET_CHANNEL_CONTROL = 0x8000400B,CO_E_INIT_TLS_CHANNEL_CONTROL = 0x8000400C,CO_E_INIT_UNACCEPTED_USER_ALLOCATOR = 0x8000400D,CO_E_INIT_SCM_MUTEX_EXISTS = 0x8000400E,CO_E_INIT_SCM_FILE_MAPPING_EXISTS = 0x8000400F,CO_E_INIT_SCM_MAP_VIEW_OF_FILE = 0x80004010,CO_E_INIT_SCM_EXEC_FAILURE = 0x80004011,CO_E_INIT_ONLY_SINGLE_THREADED = 0x80004012,CO_E_CANT_REMOTE = 0x80004013,CO_E_BAD_SERVER_NAME = 0x80004014,CO_E_WRONG_SERVER_IDENTITY = 0x80004015,CO_E_OLE1DDE_DISABLED = 0x80004016,CO_E_RUNAS_SYNTAX = 0x80004017,CO_E_CREATEPROCESS_FAILURE = 0x80004018,CO_E_RUNAS_CREATEPROCESS_FAILURE = 0x80004019,CO_E_RUNAS_LOGON_FAILURE = 0x8000401A,CO_E_LAUNCH_PERMSSION_DENIED = 0x8000401B,CO_E_START_SERVICE_FAILURE = 0x8000401C,CO_E_REMOTE_COMMUNICATION_FAILURE = 0x8000401D,CO_E_SERVER_START_TIMEOUT = 0x8000401E,CO_E_CLSREG_INCONSISTENT = 0x8000401F,CO_E_IIDREG_INCONSISTENT = 0x80004020,CO_E_NOT_SUPPORTED = 0x80004021,CO_E_RELOAD_DLL = 0x80004022,CO_E_MSI_ERROR = 0x80004023,CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT = 0x80004024,CO_E_SERVER_PAUSED = 0x80004025,CO_E_SERVER_NOT_PAUSED = 0x80004026,CO_E_CLASS_DISABLED = 0x80004027,CO_E_CLRNOTAVAILABLE = 0x80004028,CO_E_ASYNC_WORK_REJECTED = 0x80004029,CO_E_SERVER_INIT_TIMEOUT = 0x8000402A,CO_E_NO_SECCTX_IN_ACTIVATE = 0x8000402B,CO_E_TRACKER_CONFIG = 0x80004030,CO_E_THREADPOOL_CONFIG = 0x80004031,CO_E_SXS_CONFIG = 0x80004032,CO_E_MALFORMED_SPN = 0x80004033,};
enum MACRO_CO_S {CO_S_NOTALLINTERFACES = 0x80012,CO_S_MACHINENAMENOTFOUND = 0x80013,CO_E_MISSING_DISPLAYNAME = 0x80080015,CO_E_RUNAS_VALUE_MUST_BE_AAA = 0x80080016,CO_E_ELEVATION_DISABLED = 0x80080017,};
enum MACRO_CSRT {CSRT_REVISION = 0x0,CSRT_RD_TYPE_UNKNOWN = 0x0,CSRT_RD_SUBTYPE_UNKNOWN = 0x0,CSRT_RD_TYPE_ANY = 0xFFFF,CSRT_RD_SUBTYPE_ANY = 0xFFFF,CSRT_RD_TYPE_INTERRUPT = 0x1,CSRT_RD_SUBTYPE_INTERRUPT_LINES = 0x0,CSRT_RD_SUBTYPE_INTERRUPT_CONTROLLER = 0x1,CSRT_RD_TYPE_TIMER = 0x2,CSRT_RD_SUBTYPE_TIMER = 0x0,CSRT_RD_TYPE_DMA = 0x3,CSRT_RD_SUBTYPE_DMA_CHANNEL = 0x0,CSRT_RD_SUBTYPE_DMA_CONTROLLER = 0x1,CSRT_RD_TYPE_CACHE = 0x4,CSRT_RD_SUBTYPE_CACHE = 0x0,CSRT_RD_UID_ANY = 0xFFFF,};
enum MACRO_CTMF {CTMF_INCLUDE_APPCONTAINER = 0x1,CTMF_VALID_FLAGS = 0x1,};
enum MACRO_DATA {DATA_E_FIRST = 0x80040130,DATA_E_LAST = 0x8004013F,DATA_S_FIRST = 0x40130,DATA_S_LAST = 0x4013F,};
enum MACRO_DDPF {DDPF_FOURCC = 0x4,};
enum MACRO_DFSC {DFSC_FILE_SYSTEM = 0x10B,};
enum MACRO_DISC {DISC_BGFORMAT_STATE_NONE = 0x0,DISC_BGFORMAT_STATE_INCOMPLETE = 0x1,DISC_BGFORMAT_STATE_RUNNING = 0x2,DISC_BGFORMAT_STATE_COMPLETE = 0x3,};
enum MACRO_DISK {DISK_STATUS_EMPTY = 0x0,DISK_STATUS_INCOMPLETE = 0x1,DISK_STATUS_COMPLETE = 0x2,DISK_STATUS_OTHERS = 0x3,};
enum MACRO_DISP {DISP_E_UNKNOWNINTERFACE = 0x80020001,DISP_E_MEMBERNOTFOUND = 0x80020003,DISP_E_PARAMNOTFOUND = 0x80020004,DISP_E_TYPEMISMATCH = 0x80020005,DISP_E_UNKNOWNNAME = 0x80020006,DISP_E_NONAMEDARGS = 0x80020007,DISP_E_BADVARTYPE = 0x80020008,DISP_E_EXCEPTION = 0x80020009,DISP_E_OVERFLOW = 0x8002000A,DISP_E_BADINDEX = 0x8002000B,DISP_E_UNKNOWNLCID = 0x8002000C,DISP_E_ARRAYISLOCKED = 0x8002000D,DISP_E_BADPARAMCOUNT = 0x8002000E,DISP_E_PARAMNOTOPTIONAL = 0x8002000F,DISP_E_BADCALLEE = 0x80020010,DISP_E_NOTACOLLECTION = 0x80020011,DISP_E_DIVBYZERO = 0x80020012,DISP_E_BUFFERTOOSMALL = 0x80020013,};
enum MACRO_DMAR {DMAR_SIGNATURE = 0x52414D44,DMAR_DRHD = 0x0,DMAR_DRHD_MIN_SIZE = 0x10,DMAR_RMRR = 0x1,DMAR_ARIR = 0x2,DMAR_ATSR = 0x2,DMAR_RHSA = 0x3,DMAR_FLAG_INT_REMAPPING = 0x1,};
enum MACRO_DONT {DONT_CARE = 2,};
enum MACRO_DOT3 {DOT3_END_OF_CHAIN_ID = 4,DOT3_LEGACY_ZIP_ID = 5,};
enum MACRO_DOT4 {DOT4_MAX_CHANNELS = 128,};
enum MACRO_DRHD {DRHD_INCLUDE_ALL = 1,};
enum MACRO_DRVO {DRVO_UNLOAD_INVOKED = 0x1,DRVO_LEGACY_DRIVER = 0x2,DRVO_BUILTIN_DRIVER = 0x4,};
enum MACRO_DUID {DUID_VERSION_1 = 1,DUID_HARDWARE_IDS_ONLY = 0,DUID_INCLUDE_SOFTWARE_IDS = 1,};
enum MACRO_DUMP {DUMP_MODE_CRASH = 0x1,DUMP_MODE_HIBER = 0x2,DUMP_MODE_MARK_MEMORY = 0x3,DUMP_MODE_RESUME = 0x4,};
enum MACRO_DVRH {DVRH_USE_PARPORT_ECP_ADDR = 0,};
enum MACRO_DXGI {DXGI_STATUS_OCCLUDED = 0x87A0001,DXGI_STATUS_CLIPPED = 0x87A0002,DXGI_STATUS_NO_REDIRECTION = 0x87A0004,DXGI_STATUS_NO_DESKTOP_ACCESS = 0x87A0005,DXGI_STATUS_GRAPHICS_VIDPN_SOURCE_IN_USE = 0x87A0006,DXGI_STATUS_MODE_CHANGED = 0x87A0007,DXGI_STATUS_MODE_CHANGE_IN_PROGRESS = 0x87A0008,DXGI_ERROR_INVALID_CALL = 0x887A0001,DXGI_ERROR_NOT_FOUND = 0x887A0002,DXGI_ERROR_MORE_DATA = 0x887A0003,DXGI_ERROR_UNSUPPORTED = 0x887A0004,DXGI_ERROR_DEVICE_REMOVED = 0x887A0005,DXGI_ERROR_DEVICE_HUNG = 0x887A0006,DXGI_ERROR_DEVICE_RESET = 0x887A0007,DXGI_ERROR_WAS_STILL_DRAWING = 0x887A000A,DXGI_ERROR_FRAME_STATISTICS_DISJOINT = 0x887A000B,DXGI_ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE = 0x887A000C,DXGI_ERROR_DRIVER_INTERNAL_ERROR = 0x887A0020,DXGI_ERROR_NONEXCLUSIVE = 0x887A0021,DXGI_ERROR_NOT_CURRENTLY_AVAILABLE = 0x887A0022,DXGI_ERROR_REMOTE_CLIENT_DISCONNECTED = 0x887A0023,DXGI_ERROR_REMOTE_OUTOFMEMORY = 0x887A0024,DXGI_ERROR_ACCESS_LOST = 0x887A0026,DXGI_ERROR_WAIT_TIMEOUT = 0x887A0027,DXGI_ERROR_SESSION_DISCONNECTED = 0x887A0028,DXGI_ERROR_RESTRICT_TO_OUTPUT_STALE = 0x887A0029,DXGI_ERROR_CANNOT_PROTECT_CONTENT = 0x887A002A,DXGI_ERROR_ACCESS_DENIED = 0x887A002B,DXGI_ERROR_NAME_ALREADY_EXISTS = 0x887A002C,DXGI_STATUS_UNOCCLUDED = 0x87A0009,DXGI_STATUS_DDA_WAS_STILL_DRAWING = 0x87A000A,DXGI_ERROR_MODE_CHANGE_IN_PROGRESS = 0x887A0025,DXGI_DDI_ERR_WASSTILLDRAWING = 0x887B0001,DXGI_DDI_ERR_UNSUPPORTED = 0x887B0002,DXGI_DDI_ERR_NONEXCLUSIVE = 0x887B0003,};
enum MACRO_DXGK {DXGK_WIN32K_PARAM_FLAG_UPDATEREGISTRY = 1,DXGK_WIN32K_PARAM_FLAG_MODESWITCH = 2,DXGK_WIN32K_PARAM_FLAG_DISABLEVIEW = 4,};
enum MACRO_ECDT {ECDT_SIGNATURE = 0x54444345,RSDT_SIGNATURE = 0x54445352,XSDT_SIGNATURE = 0x54445358,APIC_SIGNATURE = 0x43495041,SPIC_SIGNATURE = 0x43495053,DSDT_SIGNATURE = 0x54445344,SSDT_SIGNATURE = 0x54445353,PSDT_SIGNATURE = 0x54445350,SBST_SIGNATURE = 0x54534253,DBG2_SIGNATURE = 0x32474244,DBGP_SIGNATURE = 0x50474244,WDTT_SIGNATURE = 0x54524457,SPCR_SIGNATURE = 0x52435053,WDAT_SIGNATURE = 0x54414457,RASF_SIGNATURE = 0x46534152,};
enum MACRO_ECHO {ECHO_CHANNEL = 6,FAX_SEND_CHANNEL = 7,FAX_RECV_CHANNEL = 8,DIAGNOSTIC_CHANNEL = 9,};
enum MACRO_EISA {EISA_FUNCTION_ENABLED = 0x80,EISA_FREE_FORM_DATA = 0x40,EISA_HAS_PORT_INIT_ENTRY = 0x20,EISA_HAS_PORT_RANGE = 0x10,EISA_HAS_DMA_ENTRY = 0x8,EISA_HAS_IRQ_ENTRY = 0x4,EISA_HAS_MEMORY_ENTRY = 0x2,EISA_HAS_TYPE_ENTRY = 0x1,EISA_HAS_INFORMATION = 0x1F,EISA_MORE_ENTRIES = 0x80,EISA_SYSTEM_MEMORY = 0x0,EISA_MEMORY_TYPE_RAM = 0x1,EISA_INVALID_SLOT = 0x80,EISA_INVALID_FUNCTION = 0x81,EISA_INVALID_CONFIGURATION = 0x82,EISA_EMPTY_SLOT = 0x83,EISA_INVALID_BIOS_CALL = 0x86,};
enum MACRO_EMMC {EMMC_USER_DATA_AREA = 0,EMMC_BOOT_PARTITION_1 = 1,EMMC_BOOT_PARTITION_2 = 2,EMMC_RPMB_PARTITION = 3,EMMC_GENERAL_PURPOSE_PARTITION_1 = 4,EMMC_GENERAL_PURPOSE_PARTITION_2 = 5,EMMC_GENERAL_PURPOSE_PARTITION_3 = 6,EMMC_GENERAL_PURPOSE_PARTITION_4 = 7,};
enum MACRO_ENUM {ENUM_CHILDREN_IMMEDIATE_ONLY = 0x1,ENUM_CHILDREN_MULTILEVEL = 0x2,ENUM_CHILDREN_NAME_IS_FILTER = 0x4,};
enum MACRO_EXIT {EXIT_SUCCESS = 0,EXIT_FAILURE = 1,};
enum MACRO_FACS {FACS_SIGNATURE = 0x53434146,};
enum MACRO_FADT {FADT_FORCE_CLUSTERED_APIC_MODE_BIT = 18,FADT_FORCE_CLUSTERED_APIC_MODE = 262144,FADT_FORCE_APIC_PHYSICAL_DESTINATION_MODE_BIT = 19,FADT_FORCE_APIC_PHYSICAL_DESTINATION_MODE = 524288,};
enum MACRO_FAST {FAST_FAIL_LEGACY_GS_VIOLATION = 0,FAST_FAIL_VTGUARD_CHECK_FAILURE = 1,FAST_FAIL_STACK_COOKIE_CHECK_FAILURE = 2,FAST_FAIL_CORRUPT_LIST_ENTRY = 3,FAST_FAIL_INCORRECT_STACK = 4,FAST_FAIL_INVALID_ARG = 5,FAST_FAIL_GS_COOKIE_INIT = 6,FAST_FAIL_FATAL_APP_EXIT = 7,FAST_FAIL_RANGE_CHECK_FAILURE = 8,FAST_FAIL_UNSAFE_REGISTRY_ACCESS = 9,FAST_FAIL_INVALID_FAST_FAIL_CODE = -1,};
enum MACRO_FIFO {FIFO_PWORD_8BIT = 1,FIFO_PWORD_16BIT = 0,FIFO_PWORD_32BIT = 2,};
enum MACRO_FILE {FILE_DEVICE_BEEP = 0x1,FILE_DEVICE_CD_ROM = 0x2,FILE_DEVICE_CD_ROM_FILE_SYSTEM = 0x3,FILE_DEVICE_CONTROLLER = 0x4,FILE_DEVICE_DATALINK = 0x5,FILE_DEVICE_DFS = 0x6,FILE_DEVICE_DISK = 0x7,FILE_DEVICE_DISK_FILE_SYSTEM = 0x8,FILE_DEVICE_FILE_SYSTEM = 0x9,FILE_DEVICE_INPORT_PORT = 0xA,FILE_DEVICE_KEYBOARD = 0xB,FILE_DEVICE_MAILSLOT = 0xC,FILE_DEVICE_MIDI_IN = 0xD,FILE_DEVICE_MIDI_OUT = 0xE,FILE_DEVICE_MOUSE = 0xF,FILE_DEVICE_MULTI_UNC_PROVIDER = 0x10,FILE_DEVICE_NAMED_PIPE = 0x11,FILE_DEVICE_NETWORK = 0x12,FILE_DEVICE_NETWORK_BROWSER = 0x13,FILE_DEVICE_NETWORK_FILE_SYSTEM = 0x14,FILE_DEVICE_NULL = 0x15,FILE_DEVICE_PARALLEL_PORT = 0x16,FILE_DEVICE_PHYSICAL_NETCARD = 0x17,FILE_DEVICE_PRINTER = 0x18,FILE_DEVICE_SCANNER = 0x19,FILE_DEVICE_SERIAL_MOUSE_PORT = 0x1A,FILE_DEVICE_SERIAL_PORT = 0x1B,FILE_DEVICE_SCREEN = 0x1C,FILE_DEVICE_SOUND = 0x1D,FILE_DEVICE_STREAMS = 0x1E,FILE_DEVICE_TAPE = 0x1F,FILE_DEVICE_TAPE_FILE_SYSTEM = 0x20,FILE_DEVICE_TRANSPORT = 0x21,FILE_DEVICE_UNKNOWN = 0x22,FILE_DEVICE_VIDEO = 0x23,FILE_DEVICE_VIRTUAL_DISK = 0x24,FILE_DEVICE_WAVE_IN = 0x25,FILE_DEVICE_WAVE_OUT = 0x26,FILE_DEVICE_8042_PORT = 0x27,FILE_DEVICE_NETWORK_REDIRECTOR = 0x28,FILE_DEVICE_BATTERY = 0x29,FILE_DEVICE_BUS_EXTENDER = 0x2A,FILE_DEVICE_MODEM = 0x2B,FILE_DEVICE_VDM = 0x2C,FILE_DEVICE_MASS_STORAGE = 0x2D,FILE_DEVICE_SMB = 0x2E,FILE_DEVICE_KS = 0x2F,FILE_DEVICE_CHANGER = 0x30,FILE_DEVICE_SMARTCARD = 0x31,FILE_DEVICE_ACPI = 0x32,FILE_DEVICE_DVD = 0x33,FILE_DEVICE_FULLSCREEN_VIDEO = 0x34,FILE_DEVICE_DFS_FILE_SYSTEM = 0x35,FILE_DEVICE_DFS_VOLUME = 0x36,FILE_DEVICE_SERENUM = 0x37,FILE_DEVICE_TERMSRV = 0x38,FILE_DEVICE_KSEC = 0x39,FILE_DEVICE_FIPS = 0x3A,FILE_DEVICE_INFINIBAND = 0x3B,FILE_DEVICE_VMBUS = 0x3E,FILE_DEVICE_CRYPT_PROVIDER = 0x3F,FILE_DEVICE_WPD = 0x40,FILE_DEVICE_BLUETOOTH = 0x41,FILE_DEVICE_MT_COMPOSITE = 0x42,FILE_DEVICE_MT_TRANSPORT = 0x43,FILE_DEVICE_BIOMETRIC = 0x44,FILE_DEVICE_PMI = 0x45,FILE_DEVICE_EHSTOR = 0x46,FILE_DEVICE_DEVAPI = 0x47,FILE_DEVICE_GPIO = 0x48,FILE_DEVICE_USBEX = 0x49,FILE_DEVICE_CONSOLE = 0x50,FILE_DEVICE_NFP = 0x51,FILE_DEVICE_SYSENV = 0x52,};
enum MACRO_FLAG {FLAG_OWNER_POINTER_IS_THREAD = 0x1,};
enum MACRO_FOBX {FOBX_FLAG_DFS_OPEN = 0x1,FOBX_FLAG_BAD_HANDLE = 0x2,FOBX_FLAG_BACKUP_INTENT = 0x4,FOBX_FLAG_NOT_USED = 0x8,FOBX_FLAG_FLUSH_EVEN_CACHED_READS = 0x10,FOBX_FLAG_DONT_ALLOW_PAGING_IO = 0x20,FOBX_FLAG_DONT_ALLOW_FASTIO_READ = 0x40,};
enum MACRO_GPIO {GPIO_CONTROLLER_DRIVER_ERROR = 0x138,};
enum MACRO_GTDT {GTDT_SIGNATURE = 0x54445447,GTDT_MEMORY_MAPPED = 0x1,GTDT_TIMER_EDGE_TRIGGERED = 0x1,GTDT_TIMER_ACTIVE_LOW = 0x2,};
enum MACRO_HARD {HARD_ERROR = 3,MEDIA_ERROR = 4,};
enum MACRO_HASH {HASH_STRING_ALGORITHM_DEFAULT = 0,HASH_STRING_ALGORITHM_X65599 = 1,HASH_STRING_ALGORITHM_INVALID = -1,};
enum MACRO_HEAP {HEAP_NO_SERIALIZE = 0x1,HEAP_GROWABLE = 0x2,HEAP_GENERATE_EXCEPTIONS = 0x4,HEAP_ZERO_MEMORY = 0x8,HEAP_REALLOC_IN_PLACE_ONLY = 0x10,HEAP_TAIL_CHECKING_ENABLED = 0x20,HEAP_FREE_CHECKING_ENABLED = 0x40,HEAP_DISABLE_COALESCE_ON_FREE = 0x80,HEAP_CREATE_ALIGN_16 = 0x10000,HEAP_CREATE_ENABLE_TRACING = 0x20000,HEAP_CREATE_ENABLE_EXECUTE = 0x40000,HEAP_SETTABLE_USER_VALUE = 0x100,HEAP_SETTABLE_USER_FLAG1 = 0x200,HEAP_SETTABLE_USER_FLAG2 = 0x400,HEAP_SETTABLE_USER_FLAG3 = 0x800,HEAP_SETTABLE_USER_FLAGS = 0xE00,HEAP_CLASS_0 = 0x0,HEAP_CLASS_1 = 0x1000,HEAP_CLASS_2 = 0x2000,HEAP_CLASS_3 = 0x3000,HEAP_CLASS_4 = 0x4000,HEAP_CLASS_5 = 0x5000,HEAP_CLASS_6 = 0x6000,HEAP_CLASS_7 = 0x7000,HEAP_CLASS_8 = 0x8000,HEAP_CLASS_MASK = 0xF000,HEAP_MAXIMUM_TAG = 0xFFF,HEAP_GLOBAL_TAG = 0x800,HEAP_PSEUDO_TAG_FLAG = 0x8000,HEAP_TAG_SHIFT = 0x12,HEAP_TAG_MASK = 0x3FFC0000,HEAP_CREATE_VALID_MASK = 0x7F0FF,};
enum MACRO_HIDP {HIDP_LINK_COLLECTION_ROOT = 65535,HIDP_LINK_COLLECTION_UNSPECIFIED = 0,HIDP_STATUS_SUCCESS = 1114112,HIDP_STATUS_NULL = -2146369535,HIDP_STATUS_INVALID_PREPARSED_DATA = -1072627711,HIDP_STATUS_INVALID_REPORT_TYPE = -1072627710,HIDP_STATUS_INVALID_REPORT_LENGTH = -1072627709,HIDP_STATUS_USAGE_NOT_FOUND = -1072627708,HIDP_STATUS_VALUE_OUT_OF_RANGE = -1072627707,HIDP_STATUS_BAD_LOG_PHY_VALUES = -1072627706,HIDP_STATUS_BUFFER_TOO_SMALL = -1072627705,HIDP_STATUS_INTERNAL_ERROR = -1072627704,HIDP_STATUS_I8042_TRANS_UNKNOWN = -1072627703,HIDP_STATUS_INCOMPATIBLE_REPORT_ID = -1072627702,HIDP_STATUS_NOT_VALUE_ARRAY = -1072627701,HIDP_STATUS_IS_VALUE_ARRAY = -1072627700,HIDP_STATUS_DATA_INDEX_NOT_FOUND = -1072627699,HIDP_STATUS_DATA_INDEX_OUT_OF_RANGE = -1072627698,HIDP_STATUS_BUTTON_NOT_PRESSED = -1072627697,HIDP_STATUS_REPORT_DOES_NOT_EXIST = -1072627696,HIDP_STATUS_NOT_IMPLEMENTED = -1072627680,HIDP_STATUS_I8242_TRANS_UNKNOWN = -1072627703,HIDP_GETCOLDESC_SUCCESS = 0,HIDP_GETCOLDESC_RESOURCES = 1,HIDP_GETCOLDESC_BUFFER = 2,HIDP_GETCOLDESC_LINK_RESOURCES = 3,HIDP_GETCOLDESC_UNEXP_END_COL = 4,HIDP_GETCOLDESC_PREPARSE_RESOURCES = 5,HIDP_GETCOLDESC_ONE_BYTE = 6,HIDP_GETCOLDESC_TWO_BYTE = 7,HIDP_GETCOLDESC_FOUR_BYTE = 8,HIDP_GETCOLDESC_BYTE_ALLIGN = 9,HIDP_GETCOLDESC_MAIN_ITEM_NO_USAGE = 10,HIDP_GETCOLDESC_TOP_COLLECTION_USAGE = 11,HIDP_GETCOLDESC_PUSH_RESOURCES = 16,HIDP_GETCOLDESC_ITEM_UNKNOWN = 18,HIDP_GETCOLDESC_REPORT_ID = 19,HIDP_GETCOLDESC_BAD_REPORT_ID = 20,HIDP_GETCOLDESC_NO_REPORT_ID = 21,HIDP_GETCOLDESC_DEFAULT_ID_ERROR = 22,HIDP_GETCOLDESC_NO_DATA = 26,HIDP_GETCOLDESC_INVALID_MAIN_ITEM = 27,HIDP_GETCOLDESC_NO_CLOSE_DELIMITER = 32,HIDP_GETCOLDESC_NOT_VALID_DELIMITER = 33,HIDP_GETCOLDESC_MISMATCH_OC_DELIMITER = 34,HIDP_GETCOLDESC_UNSUPPORTED = 64,};
enum MACRO_HIST {HIST_NO_OF_BUCKETS = 24,};
enum MACRO_HOOK {HOOK_IPv6_ADDRESS_NUM_FIELDS = 16,HOOK_IPv4_ADDRESS_NUM_FIELDS = 4,};
enum MACRO_HOST {HOST_INFO_PACKET_BASED = 0x1,HOST_INFO_STREAM_BASED = 0x2,HOST_INFO_SUPPORTS_ISOCH_STRIPPING = 0x4,HOST_INFO_SUPPORTS_START_ON_CYCLE = 0x8,HOST_INFO_SUPPORTS_RETURNING_ISO_HDR = 0x10,HOST_INFO_SUPPORTS_ISO_HDR_INSERTION = 0x20,HOST_INFO_SUPPORTS_ISO_DUAL_BUFFER_RX = 0x40,HOST_INFO_DMA_DOUBLE_BUFFERING_ENABLED = 0x80,};
enum MACRO_HTTP {HTTP_DRIVER_CORRUPTED = 0xFA,};
enum MACRO_ICMP {ICMP_MIB_STATS_ID = 1,AT_MIB_ADDRXLAT_INFO_ID = 1,AT_MIB_ADDRXLAT_ENTRY_ID = 257,IP_MIB_RTTABLE_ENTRY_ID = 257,IP_MIB_ADDRTABLE_ENTRY_ID = 258,};
enum MACRO_IDLE {IDLE_STATE_FLAGS_C1_HLT = 0x1,IDLE_STATE_FLAGS_C1_IO_HLT = 0x2,IDLE_STATE_FLAGS_IO = 0x4,IDLE_STATE_FLAGS_MWAIT = 0x8,};
enum MACRO_IEEE {IEEE_COMPATIBILITY = 0x2,};
enum MACRO_IGMP {IGMP_QUERY_TYPE = 0x11,IGMP_VERSION1_REPORT_TYPE = 0x12,IGMP_VERSION2_REPORT_TYPE = 0x16,IGMP_LEAVE_GROUP_TYPE = 0x17,IGMP_VERSION3_REPORT_TYPE = 0x22,};
enum MACRO_IMRE {IMRE_FLAG_DELETE_DEST = 0x1,};
enum MACRO_INET {INET_E_INVALID_URL = 0x800C0002,INET_E_NO_SESSION = 0x800C0003,INET_E_CANNOT_CONNECT = 0x800C0004,INET_E_RESOURCE_NOT_FOUND = 0x800C0005,INET_E_OBJECT_NOT_FOUND = 0x800C0006,INET_E_DATA_NOT_AVAILABLE = 0x800C0007,INET_E_DOWNLOAD_FAILURE = 0x800C0008,INET_E_AUTHENTICATION_REQUIRED = 0x800C0009,INET_E_NO_VALID_MEDIA = 0x800C000A,INET_E_CONNECTION_TIMEOUT = 0x800C000B,INET_E_INVALID_REQUEST = 0x800C000C,INET_E_UNKNOWN_PROTOCOL = 0x800C000D,INET_E_SECURITY_PROBLEM = 0x800C000E,INET_E_CANNOT_LOAD_DATA = 0x800C000F,INET_E_CANNOT_INSTANTIATE_OBJECT = 0x800C0010,INET_E_INVALID_CERTIFICATE = 0x800C0019,INET_E_REDIRECT_FAILED = 0x800C0014,INET_E_REDIRECT_TO_DIR = 0x800C0015,};
enum MACRO_IP6F {IP6F_OFF_MASK = 0xF8FF,IP6F_RESERVED_MASK = 0x600,IP6F_MORE_FRAG = 0x100,};
enum MACRO_IPPT {IPPT_DISABLE_WRITE_COMBINING = 0x1,IPPT_ENABLE_CROSS_PARTITION_IPI = 0x2,IPPT_DISABLE_PTCG_TB_FLUSH = 0x4,IPPT_DISABLE_UC_MAIN_MEMORY = 0x8,IPPT_ENABLE_PMTIMER_CLOCK = 0x10,IPPT_SIGNATURE = 0x54505049,};
enum MACRO_IPV4 {IPV4_VERSION = 4,IPV4_TOS_MASK = 252,};
enum MACRO_IPV6 {IPV6_HOPOPTS = 1,IPV6_HDRINCL = 2,IPV6_UNICAST_HOPS = 4,IPV6_MULTICAST_IF = 9,IPV6_MULTICAST_HOPS = 10,IPV6_MULTICAST_LOOP = 11,IPV6_ADD_MEMBERSHIP = 12,IPV6_JOIN_GROUP = 12,IPV6_DROP_MEMBERSHIP = 13,IPV6_LEAVE_GROUP = 13,IPV6_DONTFRAG = 14,IPV6_PKTINFO = 19,IPV6_HOPLIMIT = 21,IPV6_PROTECTION_LEVEL = 23,IPV6_RECVIF = 24,IPV6_RECVDSTADDR = 25,IPV6_CHECKSUM = 26,IPV6_V6ONLY = 27,IPV6_IFLIST = 28,IPV6_ADD_IFLIST = 29,IPV6_DEL_IFLIST = 30,IPV6_UNICAST_IF = 31,IPV6_RTHDR = 32,IPV6_RECVRTHDR = 38,IPV6_TCLASS = 39,IPV6_RECVTCLASS = 40,IPV6_ECN = 50,IPV6_PKTINFO_EX = 51,IPV6_WFP_REDIRECT_RECORDS = 60,IPV6_WFP_REDIRECT_CONTEXT = 70,};
enum MACRO_IRNO {IRNO_FLAG_ADD = 0x1,IRNO_FLAG_DELETE = 0x2,};
enum MACRO_IRQL {IRQL_NOT_DISPATCH_LEVEL = 0x8,IRQL_NOT_GREATER_OR_EQUAL = 0x9,IRQL_NOT_LESS_OR_EQUAL = 0xA,};
enum MACRO_ISSP {ISSP_LEVEL = 32,ISSP_MODE = 0,};
enum MACRO_IVRS {IVRS_SIGNATURE = 0x53525649,CSRT_SIGNATURE = 0x54525343,};
enum MACRO_JPEG {JPEG_PROCESS_BASELINE = 0,};
enum MACRO_LANG {LANG_NEUTRAL = 0x0,LANG_INVARIANT = 0x7F,LANG_AFRIKAANS = 0x36,LANG_ALBANIAN = 0x1C,LANG_ALSATIAN = 0x84,LANG_AMHARIC = 0x5E,LANG_ARABIC = 0x1,LANG_ARMENIAN = 0x2B,LANG_ASSAMESE = 0x4D,LANG_AZERI = 0x2C,LANG_AZERBAIJANI = 0x2C,LANG_BANGLA = 0x45,LANG_BASHKIR = 0x6D,LANG_BASQUE = 0x2D,LANG_BELARUSIAN = 0x23,LANG_BENGALI = 0x45,LANG_BRETON = 0x7E,LANG_BOSNIAN = 0x1A,LANG_BOSNIAN_NEUTRAL = 0x781A,LANG_BULGARIAN = 0x2,LANG_CATALAN = 0x3,LANG_CENTRAL_KURDISH = 0x92,LANG_CHEROKEE = 0x5C,LANG_CHINESE = 0x4,LANG_CHINESE_SIMPLIFIED = 0x4,LANG_CHINESE_TRADITIONAL = 0x7C04,LANG_CORSICAN = 0x83,LANG_CROATIAN = 0x1A,LANG_CZECH = 0x5,LANG_DANISH = 0x6,LANG_DARI = 0x8C,LANG_DIVEHI = 0x65,LANG_DUTCH = 0x13,LANG_ENGLISH = 0x9,LANG_ESTONIAN = 0x25,LANG_FAEROESE = 0x38,LANG_FARSI = 0x29,LANG_FILIPINO = 0x64,LANG_FINNISH = 0xB,LANG_FRENCH = 0xC,LANG_FRISIAN = 0x62,LANG_FULAH = 0x67,LANG_GALICIAN = 0x56,LANG_GEORGIAN = 0x37,LANG_GERMAN = 0x7,LANG_GREEK = 0x8,LANG_GREENLANDIC = 0x6F,LANG_GUJARATI = 0x47,LANG_HAUSA = 0x68,LANG_HAWAIIAN = 0x75,LANG_HEBREW = 0xD,LANG_HINDI = 0x39,LANG_HUNGARIAN = 0xE,LANG_ICELANDIC = 0xF,LANG_IGBO = 0x70,LANG_INDONESIAN = 0x21,LANG_INUKTITUT = 0x5D,LANG_IRISH = 0x3C,LANG_ITALIAN = 0x10,LANG_JAPANESE = 0x11,LANG_KANNADA = 0x4B,LANG_KASHMIRI = 0x60,LANG_KAZAK = 0x3F,LANG_KHMER = 0x53,LANG_KICHE = 0x86,LANG_KINYARWANDA = 0x87,LANG_KONKANI = 0x57,LANG_KOREAN = 0x12,LANG_KYRGYZ = 0x40,LANG_LAO = 0x54,LANG_LATVIAN = 0x26,LANG_LITHUANIAN = 0x27,LANG_LOWER_SORBIAN = 0x2E,LANG_LUXEMBOURGISH = 0x6E,LANG_MACEDONIAN = 0x2F,LANG_MALAY = 0x3E,LANG_MALAYALAM = 0x4C,LANG_MALTESE = 0x3A,LANG_MANIPURI = 0x58,LANG_MAORI = 0x81,LANG_MAPUDUNGUN = 0x7A,LANG_MARATHI = 0x4E,LANG_MOHAWK = 0x7C,LANG_MONGOLIAN = 0x50,LANG_NEPALI = 0x61,LANG_NORWEGIAN = 0x14,LANG_OCCITAN = 0x82,LANG_ODIA = 0x48,LANG_ORIYA = 0x48,LANG_PASHTO = 0x63,LANG_PERSIAN = 0x29,LANG_POLISH = 0x15,LANG_PORTUGUESE = 0x16,LANG_PULAR = 0x67,LANG_PUNJABI = 0x46,LANG_QUECHUA = 0x6B,LANG_ROMANIAN = 0x18,LANG_ROMANSH = 0x17,LANG_RUSSIAN = 0x19,LANG_SAKHA = 0x85,LANG_SAMI = 0x3B,LANG_SANSKRIT = 0x4F,LANG_SCOTTISH_GAELIC = 0x91,LANG_SERBIAN = 0x1A,LANG_SERBIAN_NEUTRAL = 0x7C1A,LANG_SINDHI = 0x59,LANG_SINHALESE = 0x5B,LANG_SLOVAK = 0x1B,LANG_SLOVENIAN = 0x24,LANG_SOTHO = 0x6C,LANG_SPANISH = 0xA,LANG_SWAHILI = 0x41,LANG_SWEDISH = 0x1D,LANG_SYRIAC = 0x5A,LANG_TAJIK = 0x28,LANG_TAMAZIGHT = 0x5F,LANG_TAMIL = 0x49,LANG_TATAR = 0x44,LANG_TELUGU = 0x4A,LANG_THAI = 0x1E,LANG_TIBETAN = 0x51,LANG_TIGRIGNA = 0x73,LANG_TIGRINYA = 0x73,LANG_TSWANA = 0x32,LANG_TURKISH = 0x1F,LANG_TURKMEN = 0x42,LANG_UIGHUR = 0x80,LANG_UKRAINIAN = 0x22,LANG_UPPER_SORBIAN = 0x2E,LANG_URDU = 0x20,LANG_UZBEK = 0x43,LANG_VALENCIAN = 0x3,LANG_VIETNAMESE = 0x2A,LANG_WELSH = 0x52,LANG_WOLOF = 0x88,LANG_XHOSA = 0x34,LANG_YAKUT = 0x85,LANG_YI = 0x78,LANG_YORUBA = 0x6A,LANG_ZULU = 0x35,};
enum MACRO_LAST {LAST_CHANCE_CALLED_FROM_KMODE = 0x15,};
enum MACRO_LDBL {LDBL_DIG = 15,LDBL_MANT_DIG = 53,LDBL_MAX_10_EXP = 308,LDBL_MAX_EXP = 1024,LDBL_MIN_10_EXP = -307,LDBL_MIN_EXP = -1021,};
enum MACRO_LINE {LINE_ADDRESSSTATE = 0,LINE_CALLINFO = 1,LINE_CALLSTATE = 2,LINE_CLOSE = 3,LINE_DEVSPECIFIC = 4,LINE_DEVSPECIFICFEATURE = 5,LINE_GATHERDIGITS = 6,LINE_GENERATE = 7,LINE_LINEDEVSTATE = 8,LINE_MONITORDIGITS = 9,LINE_MONITORMEDIA = 10,LINE_MONITORTONE = 11,LINE_REPLY = 12,LINE_REQUEST = 13,LINE_CREATE = 19,};
enum MACRO_LLDP {LLDP_TLV_TYPE_ORGANIZATIONALLY_SPECIFIC = 0x7F,};
enum MACRO_LM12 {LM12 = 5,};
enum MACRO_LOCK {LOCK_QUEUE_WAIT = 1,LOCK_QUEUE_WAIT_BIT = 0,LOCK_QUEUE_OWNER = 2,LOCK_QUEUE_OWNER_BIT = 1,};
enum MACRO_LONG {LONG_MIN = -2147483648,LONG_MAX = 2147483647,};
enum MACRO_LUN0 {LUN0_FORMAT_SAVING_DEFECT_LIST = 0,};
enum MACRO_MARK {MARK_HANDLE_PROTECT_CLUSTERS = 0x1,MARK_HANDLE_TXF_SYSTEM_LOG = 0x4,MARK_HANDLE_NOT_TXF_SYSTEM_LOG = 0x8,MARK_HANDLE_REALTIME = 0x20,MARK_HANDLE_NOT_REALTIME = 0x40,MARK_HANDLE_READ_COPY = 0x80,MARK_HANDLE_NOT_READ_COPY = 0x100,};
enum MACRO_MASK {OSVERSION_MASK = 0xFFFF0000,SPVERSION_MASK = 0xFF00,SUBVERSION_MASK = 0xFF,};
enum MACRO_MCFG {MCFG_TABLE_SIGNATURE = 0x4746434D,HPET_SIGNATURE = 0x54455048,SFI_TIMER_SIGNATURE = 0x524D544D,TCPA_SIGNATURE = 0x41504354,WAET_SIGNATURE = 0x54454157,};
enum MACRO_MK_E {MK_E_NO_NORMALIZED = 0x80080007,};
enum MACRO_MK_S {MK_S_REDUCED_TO_SELF = 0x401E2,MK_S_ME = 0x401E4,MK_S_HIM = 0x401E5,MK_S_US = 0x401E6,MK_S_MONIKERALREADYREGISTERED = 0x401E7,};
enum MACRO_MODE {MODE_PAGE_VENDOR_SPECIFIC = 0x0,MODE_PAGE_ERROR_RECOVERY = 0x1,MODE_PAGE_DISCONNECT = 0x2,MODE_PAGE_FORMAT_DEVICE = 0x3,MODE_PAGE_MRW = 0x3,MODE_PAGE_RIGID_GEOMETRY = 0x4,MODE_PAGE_FLEXIBILE = 0x5,MODE_PAGE_WRITE_PARAMETERS = 0x5,MODE_PAGE_VERIFY_ERROR = 0x7,MODE_PAGE_CACHING = 0x8,MODE_PAGE_PERIPHERAL = 0x9,MODE_PAGE_CONTROL = 0xA,MODE_PAGE_MEDIUM_TYPES = 0xB,MODE_PAGE_NOTCH_PARTITION = 0xC,MODE_PAGE_CD_AUDIO_CONTROL = 0xE,MODE_PAGE_DATA_COMPRESS = 0xF,MODE_PAGE_DEVICE_CONFIG = 0x10,MODE_PAGE_XOR_CONTROL = 0x10,MODE_PAGE_MEDIUM_PARTITION = 0x11,MODE_PAGE_ENCLOSURE_SERVICES_MANAGEMENT = 0x14,MODE_PAGE_EXTENDED = 0x15,MODE_PAGE_EXTENDED_DEVICE_SPECIFIC = 0x16,MODE_PAGE_CDVD_FEATURE_SET = 0x18,MODE_PAGE_PROTOCOL_SPECIFIC_LUN = 0x18,MODE_PAGE_PROTOCOL_SPECIFIC_PORT = 0x19,MODE_PAGE_POWER_CONDITION = 0x1A,MODE_PAGE_LUN_MAPPING = 0x1B,MODE_PAGE_FAULT_REPORTING = 0x1C,MODE_PAGE_CDVD_INACTIVITY = 0x1D,MODE_PAGE_ELEMENT_ADDRESS = 0x1D,MODE_PAGE_TRANSPORT_GEOMETRY = 0x1E,MODE_PAGE_DEVICE_CAPABILITIES = 0x1F,MODE_PAGE_CAPABILITIES = 0x2A,MODE_SENSE_RETURN_ALL = 0x3F,MODE_SENSE_CURRENT_VALUES = 0x0,MODE_SENSE_CHANGEABLE_VALUES = 0x40,MODE_SENSE_DEFAULT_VAULES = 0x80,MODE_SENSE_SAVED_VALUES = 0xC0,};
enum MACRO_MPIO {MPIO_IOCTL_FLAG_USE_PATHID = 1,MPIO_IOCTL_FLAG_USE_SCSIADDRESS = 2,MPIO_IOCTL_FLAG_INVOLVE_DSM = 4,};
enum MACRO_MS30 {MS30 = 3,MS103 = 4,};
enum MACRO_MSAP {MSAP_CONFIG_NO_CHANGE = 4294967295,};
enum MACRO_MSFC {MSFC_HBAPortStatistics_SecondsSinceLastReset_ID = 1,MSFC_HBAPortStatistics_TxFrames_ID = 2,MSFC_HBAPortStatistics_TxWords_ID = 3,MSFC_HBAPortStatistics_RxFrames_ID = 4,MSFC_HBAPortStatistics_RxWords_ID = 5,MSFC_HBAPortStatistics_LIPCount_ID = 6,MSFC_HBAPortStatistics_NOSCount_ID = 7,MSFC_HBAPortStatistics_ErrorFrames_ID = 8,MSFC_HBAPortStatistics_DumpedFrames_ID = 9,MSFC_HBAPortStatistics_LinkFailureCount_ID = 10,MSFC_HBAPortStatistics_LossOfSyncCount_ID = 11,MSFC_HBAPortStatistics_LossOfSignalCount_ID = 12,MSFC_HBAPortStatistics_PrimitiveSeqProtocolErrCount_ID = 13,MSFC_HBAPortStatistics_InvalidTxWordCount_ID = 14,MSFC_HBAPortStatistics_InvalidCRCCount_ID = 15,};
enum MACRO_MSV1 {MSV1_0_CLEARTEXT_PASSWORD_ALLOWED = 0x2,MSV1_0_UPDATE_LOGON_STATISTICS = 0x4,MSV1_0_RETURN_USER_PARAMETERS = 0x8,MSV1_0_DONT_TRY_GUEST_ACCOUNT = 0x10,MSV1_0_ALLOW_SERVER_TRUST_ACCOUNT = 0x20,MSV1_0_RETURN_PASSWORD_EXPIRY = 0x40,MSV1_0_USE_CLIENT_CHALLENGE = 0x80,MSV1_0_TRY_GUEST_ACCOUNT_ONLY = 0x100,MSV1_0_RETURN_PROFILE_PATH = 0x200,MSV1_0_TRY_SPECIFIED_DOMAIN_ONLY = 0x400,MSV1_0_ALLOW_WORKSTATION_TRUST_ACCOUNT = 0x800,MSV1_0_DISABLE_PERSONAL_FALLBACK = 0x1000,MSV1_0_ALLOW_FORCE_GUEST = 0x2000,MSV1_0_CLEARTEXT_PASSWORD_SUPPLIED = 0x4000,MSV1_0_USE_DOMAIN_FOR_ROUTING_ONLY = 0x8000,MSV1_0_SUBAUTHENTICATION_DLL_EX = 0x100000,MSV1_0_ALLOW_MSVCHAPV2 = 0x10000,MSV1_0_S4U2SELF = 0x20000,MSV1_0_CHECK_LOGONHOURS_FOR_S4U = 0x40000,MSV1_0_INTERNET_DOMAIN = 0x80000,MSV1_0_SUBAUTHENTICATION_DLL = 0xFF000000,MSV1_0_SUBAUTHENTICATION_DLL_SHIFT = 0x18,MSV1_0_MNS_LOGON = 0x1000000,MSV1_0_SUBAUTHENTICATION_DLL_RAS = 0x2,MSV1_0_SUBAUTHENTICATION_DLL_IIS = 0x84,MSV1_0_S4U_LOGON_FLAG_CHECK_LOGONHOURS = 0x2,};
enum MACRO_MUST {MUST_SUCCEED_POOL_EMPTY = 0x41,};
enum MACRO_NDIS {NDIS_INTERNAL_ERROR = 0x4F,};
enum MACRO_NIIF {NIIF_HARDWARE_INTERFACE = 0x1,NIIF_FILTER_INTERFACE = 0x2,NIIF_NDIS_RESERVED1 = 0x4,NIIF_NDIS_RESERVED2 = 0x8,NIIF_NDIS_RESERVED3 = 0x10,NIIF_NDIS_WDM_INTERFACE = 0x20,NIIF_NDIS_ENDPOINT_INTERFACE = 0x40,NIIF_NDIS_ISCSI_INTERFACE = 0x80,NIIF_NDIS_RESERVED4 = 0x100,NIIF_WAN_TUNNEL_TYPE_UNKNOWN = 0xFFFFFFFF,};
enum MACRO_NONE {NONE = 0x0,CENTRONICS = 0x1,};
enum MACRO_NSIG {NSIG = 23,};
enum MACRO_NTFT {VALID_NTFT = 0xC0,PARTITION_NTFT = 0x80,};
enum MACRO_NTHV {NTHV_GUEST_ERROR = 0x118,VIDEO_SCHEDULER_INTERNAL_ERROR = 0x119,EM_INITIALIZATION_ERROR = 0x11A,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_NUMA {NUMA_MAX_WEIGHT = 10,};
enum MACRO_None {None = 0,crc32c = 1,};
enum MACRO_OEM0 {OEM0_RANDOM_BYTES = 64,OEM0_SIGNATURE = 810370383,};
enum MACRO_PAGE {PAGE_FAULT_WITH_INTERRUPTS_OFF = 0x49,};
enum MACRO_PCAT {PCAT_COMPAT_BIT = 0,PCAT_COMPAT = 1,};
enum MACRO_PCCT {PCCT_SIGNATURE = 0x54434350,};
enum MACRO_PCIX {PCIX_MODE_CONVENTIONAL_PCI = 0x0,PCIX_MODE1_66MHZ = 0x1,PCIX_MODE1_100MHZ = 0x2,PCIX_MODE1_133MHZ = 0x3,PCIX_MODE2_266_66MHZ = 0x9,PCIX_MODE2_266_100MHZ = 0xA,PCIX_MODE2_266_133MHZ = 0xB,PCIX_MODE2_533_66MHZ = 0xD,PCIX_MODE2_533_100MHZ = 0xE,PCIX_MODE2_533_133MHZ = 0xF,PCIX_VERSION_MODE1_ONLY = 0x0,PCIX_VERSION_MODE2_ECC = 0x1,PCIX_VERSION_DUAL_MODE_ECC = 0x2,};
enum MACRO_PEER {PEER_E_IPV6_NOT_INSTALLED = 0x80630001,PEER_E_NOT_INITIALIZED = 0x80630002,PEER_E_CANNOT_START_SERVICE = 0x80630003,PEER_E_NOT_LICENSED = 0x80630004,PEER_E_INVALID_GRAPH = 0x80630010,PEER_E_DBNAME_CHANGED = 0x80630011,PEER_E_DUPLICATE_GRAPH = 0x80630012,PEER_E_GRAPH_NOT_READY = 0x80630013,PEER_E_GRAPH_SHUTTING_DOWN = 0x80630014,PEER_E_GRAPH_IN_USE = 0x80630015,PEER_E_INVALID_DATABASE = 0x80630016,PEER_E_TOO_MANY_ATTRIBUTES = 0x80630017,PEER_E_CONNECTION_NOT_FOUND = 0x80630103,PEER_E_CONNECT_SELF = 0x80630106,PEER_E_ALREADY_LISTENING = 0x80630107,PEER_E_NODE_NOT_FOUND = 0x80630108,PEER_E_CONNECTION_FAILED = 0x80630109,PEER_E_CONNECTION_NOT_AUTHENTICATED = 0x8063010A,PEER_E_CONNECTION_REFUSED = 0x8063010B,PEER_E_CLASSIFIER_TOO_LONG = 0x80630201,PEER_E_TOO_MANY_IDENTITIES = 0x80630202,PEER_E_NO_KEY_ACCESS = 0x80630203,PEER_E_GROUPS_EXIST = 0x80630204,PEER_E_RECORD_NOT_FOUND = 0x80630301,PEER_E_DATABASE_ACCESSDENIED = 0x80630302,PEER_E_DBINITIALIZATION_FAILED = 0x80630303,PEER_E_MAX_RECORD_SIZE_EXCEEDED = 0x80630304,PEER_E_DATABASE_ALREADY_PRESENT = 0x80630305,PEER_E_DATABASE_NOT_PRESENT = 0x80630306,PEER_E_IDENTITY_NOT_FOUND = 0x80630401,PEER_E_EVENT_HANDLE_NOT_FOUND = 0x80630501,PEER_E_INVALID_SEARCH = 0x80630601,PEER_E_INVALID_ATTRIBUTES = 0x80630602,PEER_E_INVITATION_NOT_TRUSTED = 0x80630701,PEER_E_CHAIN_TOO_LONG = 0x80630703,PEER_E_INVALID_TIME_PERIOD = 0x80630705,PEER_E_CIRCULAR_CHAIN_DETECTED = 0x80630706,PEER_E_CERT_STORE_CORRUPTED = 0x80630801,PEER_E_NO_CLOUD = 0x80631001,PEER_E_CLOUD_NAME_AMBIGUOUS = 0x80631005,PEER_E_INVALID_RECORD = 0x80632010,PEER_E_NOT_AUTHORIZED = 0x80632020,PEER_E_PASSWORD_DOES_NOT_MEET_POLICY = 0x80632021,PEER_E_DEFERRED_VALIDATION = 0x80632030,PEER_E_INVALID_GROUP_PROPERTIES = 0x80632040,PEER_E_INVALID_PEER_NAME = 0x80632050,PEER_E_INVALID_CLASSIFIER = 0x80632060,PEER_E_INVALID_FRIENDLY_NAME = 0x80632070,PEER_E_INVALID_ROLE_PROPERTY = 0x80632071,PEER_E_INVALID_CLASSIFIER_PROPERTY = 0x80632072,PEER_E_INVALID_RECORD_EXPIRATION = 0x80632080,PEER_E_INVALID_CREDENTIAL_INFO = 0x80632081,PEER_E_INVALID_CREDENTIAL = 0x80632082,PEER_E_INVALID_RECORD_SIZE = 0x80632083,PEER_E_UNSUPPORTED_VERSION = 0x80632090,PEER_E_GROUP_NOT_READY = 0x80632091,PEER_E_GROUP_IN_USE = 0x80632092,PEER_E_INVALID_GROUP = 0x80632093,PEER_E_NO_MEMBERS_FOUND = 0x80632094,PEER_E_NO_MEMBER_CONNECTIONS = 0x80632095,PEER_E_UNABLE_TO_LISTEN = 0x80632096,PEER_E_IDENTITY_DELETED = 0x806320A0,PEER_E_SERVICE_NOT_AVAILABLE = 0x806320A1,PEER_E_CONTACT_NOT_FOUND = 0x80636001,PEER_S_GRAPH_DATA_CREATED = 0x630001,PEER_S_NO_EVENT_DATA = 0x630002,PEER_S_ALREADY_CONNECTED = 0x632000,PEER_S_SUBSCRIPTION_EXISTS = 0x636000,PEER_S_NO_CONNECTIVITY = 0x630005,PEER_S_ALREADY_A_MEMBER = 0x630006,PEER_E_CANNOT_CONVERT_PEER_NAME = 0x80634001,PEER_E_INVALID_PEER_HOST_NAME = 0x80634002,PEER_E_NO_MORE = 0x80634003,PEER_E_PNRP_DUPLICATE_PEER_NAME = 0x80634005,PEER_E_INVITE_CANCELLED = 0x80637000,PEER_E_INVITE_RESPONSE_NOT_AVAILABLE = 0x80637001,PEER_E_NOT_SIGNED_IN = 0x80637003,PEER_E_PRIVACY_DECLINED = 0x80637004,PEER_E_TIMEOUT = 0x80637005,PEER_E_INVALID_ADDRESS = 0x80637007,PEER_E_FW_EXCEPTION_DISABLED = 0x80637008,PEER_E_FW_BLOCKED_BY_POLICY = 0x80637009,PEER_E_FW_BLOCKED_BY_SHIELDS_UP = 0x8063700A,PEER_E_FW_DECLINED = 0x8063700B,};
enum MACRO_PIO0 {PIO0 = 0,PIO1 = 1,PIO2 = 2,};
enum MACRO_PIO3 {PIO3 = 3,PIO4 = 4,};
enum MACRO_PIPE {PIPE_COMPLETION_MODE_BITS = 15,PIPE_PIPE_END_BITS = 14,PIPE_PIPE_TYPE_BITS = 10,PIPE_READ_MODE_BITS = 8,PIPE_MAXIMUM_INSTANCES_BITS = 0,PIPE_STATE_DISCONNECTED = 1,PIPE_STATE_LISTENING = 2,PIPE_STATE_CONNECTED = 3,PIPE_STATE_CLOSING = 4,};
enum MACRO_PLAF {PLAF_ENABLED_BIT = 0,PLAF_ENABLED = 1,};
enum MACRO_PLGF {PLGF_ENABLED_BIT = 0,PLGF_ENABLED = 1,PLGF_PERF_INTERRUPT_EDGE_TRIGGERED_BIT = 1,PLGF_PERF_INTERRUPT_EDGE_TRIGGERED = 2,};
enum MACRO_POOL {POOL_CORRUPTION_IN_FILE_AREA = 0xDE,};
enum MACRO_PORT {PORT_MAXIMUM_MESSAGE_LENGTH = 256,};
enum MACRO_PROC {PROC_IDLE_BUCKET_COUNT = 6,PROC_IDLE_BUCKET_COUNT_EX = 16,};
enum MACRO_RAID {RAID_MIN_TIMER_DELAY_IN_MSEC = 32,};
enum MACRO_RAND {RAND_MAX = 0x7FFF,};
enum MACRO_READ {READ_CONTROL = 0x20000,};
enum MACRO_REFS {REFS_FILE_SYSTEM = 0x149,};
enum MACRO_ROOT {ROOT_CMD_ENABLE_CORRECTABLE_ERROR_REPORTING = 0x1,ROOT_CMD_ENABLE_NONFATAL_ERROR_REPORTING = 0x2,ROOT_CMD_ENABLE_FATAL_ERROR_REPORTING = 0x4,ROOT_CMD_ERROR_REPORTING_ENABLE_MASK = 0x7,};
enum MACRO_RO_E {RO_E_MUST_BE_AGILE = 0x8000001C,RO_E_UNSUPPORTED_FROM_MTA = 0x8000001D,RO_E_COMMITTED = 0x8000001E,};
enum MACRO_RSDP {RSDP_SIGNATURE = 0x2052545020445352,RSDP_SEARCH_RANGE_BEGIN = 0xE0000,RSDP_SEARCH_RANGE_END = 0xFFFFF,RSDP_SEARCH_RANGE_LENGTH = 0x20000,RSDP_SEARCH_INTERVAL = 0x10,};
enum MACRO_RXCE {RXCE_TRANSPORT_POOLTAG = 1950578770,RXCE_ADDRESS_POOLTAG = 1631811666,RXCE_CONNECTION_POOLTAG = 1665366098,RXCE_VC_POOLTAG = 1984133202,RXCE_TDI_POOLTAG = 1682143314,};
enum MACRO_S3PT {S3PT_SIGNATURE = 0x54503353,FBPT_SIGNATURE = 0x54504246,FPDT_SIGNATURE = 0x54445046,WPBT_SIGNATURE = 0x54425057,};
enum MACRO_SAVE {SAVE_ATTRIBUTE_VALUES = 0xD3,};
enum MACRO_SCSI {SCSI_VERIFIER_DETECTED_VIOLATION = 0xF1,};
enum MACRO_SDIO {SDIO_FLAG_DO_NOT_MANAGE_IO_ENABLE = 0x1,};
enum MACRO_SEEK {SEEK_CUR = 1,SEEK_END = 2,SEEK_SET = 0,};
enum MACRO_SELF {SELF_ID_CONNECTED_TO_CHILD = 3,SELF_ID_CONNECTED_TO_PARENT = 2,SELF_ID_NOT_CONNECTED = 1,SELF_ID_NOT_PRESENT = 0,};
enum MACRO_SHRT {SHRT_MIN = -32768,SHRT_MAX = 32767,};
enum MACRO_SIZE {SIZE_OF_80387_REGISTERS = 80,};
enum MACRO_SLHP {SLHP_FLAG_ADD_CROM_DATA = 0x1,SLHP_FLAG_REMOVE_CROM_DATA = 0x2,};
enum MACRO_SLIP {SLIP_FRAMING = 0x1000,SLIP_VJ_COMPRESSION = 0x2000,SLIP_VJ_AUTODETECT = 0x4000,};
enum MACRO_SLIT {SLIT_SIGNATURE = 0x54494C53,SLIT_NORMALIZATION_VALUE = 0xA,};
enum MACRO_SNAP {SNAP_DSAP = 0xAA,SNAP_SSAP = 0xAA,SNAP_CONTROL = 0x3,SNAP_OUI = 0x0,};
enum MACRO_SOCK {SOCK_STREAM = 1,SOCK_DGRAM = 2,SOCK_RAW = 3,SOCK_RDM = 4,SOCK_SEQPACKET = 5,};
enum MACRO_SORT {SORT_DEFAULT = 0x0,SORT_INVARIANT_MATH = 0x1,SORT_JAPANESE_XJIS = 0x0,SORT_JAPANESE_UNICODE = 0x1,SORT_JAPANESE_RADICALSTROKE = 0x4,SORT_CHINESE_BIG5 = 0x0,SORT_CHINESE_PRCP = 0x0,SORT_CHINESE_UNICODE = 0x1,SORT_CHINESE_PRC = 0x2,SORT_CHINESE_BOPOMOFO = 0x3,SORT_CHINESE_RADICALSTROKE = 0x4,SORT_KOREAN_KSC = 0x0,SORT_KOREAN_UNICODE = 0x1,SORT_GERMAN_PHONE_BOOK = 0x1,SORT_HUNGARIAN_DEFAULT = 0x0,SORT_HUNGARIAN_TECHNICAL = 0x1,SORT_GEORGIAN_TRADITIONAL = 0x0,SORT_GEORGIAN_MODERN = 0x1,};
enum MACRO_SPAN {ECP_SPAN = 3,EPP_SPAN = 4,};
enum MACRO_SPIN {SPIN_LOCK_ALREADY_OWNED = 0xF,SPIN_LOCK_NOT_OWNED = 0x10,};
enum MACRO_SPSD {SPSD_REASON_NONE = 0x0,SPSD_REASON_NOBIOSSUPPORT = 0x1,SPSD_REASON_BIOSINCOMPATIBLE = 0x2,SPSD_REASON_NOOSPM = 0x3,SPSD_REASON_LEGACYDRIVER = 0x4,SPSD_REASON_HIBERSTACK = 0x5,SPSD_REASON_HIBERFILE = 0x6,SPSD_REASON_POINTERNAL = 0x7,SPSD_REASON_MEMORYLIMIT = 0x8,SPSD_REASON_MPOVERRIDE = 0x9,SPSD_REASON_DRIVERDOWNGRADE = 0xA,SPSD_REASON_PREVIOUSATTEMPTFAILED = 0xB,SPSD_REASON_UNKNOWN = 0xC,SPSD_REASON_INTERNALLYDISABLED = 0xD,SPSD_REASON_DISABLEDBYPOLICY = 0xE,SPSD_REASON_UPGRADEINPROGRESS = 0xF,SPSD_REASON_WINPEMODE = 0x10,SPSD_REASON_OSOVERRIDE = 0x11,SPSD_REASON_HYPERVISOR = 0x12,SPSD_REASON_AOAC_NOBIOSSUPPORT = 0x13,SPSD_REASON_AOAC_HARDWARECHECKS = 0x14,};
enum MACRO_STOR {STOR_DEVICE_CAPABILITIES_EX_VERSION_1 = 0x1,};
enum MACRO_S_OK {S_OK = 0,S_FALSE = 1,};
enum MACRO_TAPE {TAPE_RETURN_STATISTICS = 0,TAPE_RETURN_ENV_INFO = 1,TAPE_RESET_STATISTICS = 2,};
enum MACRO_TAPI {TAPI_PROVIDER = 0x80000000,};
enum MACRO_TIME {TIME_UPDATE_IN_PROGRESS = 1,};
enum MACRO_TRAP {TRAP_CAUSE_UNKNOWN = 0x12,};
enum MACRO_TSPI {TSPI_MESSAGE_BASE = 500,};
enum MACRO_TXFS {TXFS_RM_FLAG_LOGGING_MODE = 0x1,TXFS_RM_FLAG_RENAME_RM = 0x2,TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX = 0x4,TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN = 0x8,TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS = 0x10,TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT = 0x20,TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE = 0x40,TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX = 0x80,TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN = 0x100,TXFS_RM_FLAG_GROW_LOG = 0x400,TXFS_RM_FLAG_SHRINK_LOG = 0x800,TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE = 0x1000,TXFS_RM_FLAG_PRESERVE_CHANGES = 0x2000,TXFS_RM_FLAG_RESET_RM_AT_NEXT_START = 0x4000,TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START = 0x8000,TXFS_RM_FLAG_PREFER_CONSISTENCY = 0x10000,TXFS_RM_FLAG_PREFER_AVAILABILITY = 0x20000,TXFS_LOGGING_MODE_SIMPLE = 0x1,TXFS_LOGGING_MODE_FULL = 0x2,TXFS_TRANSACTION_STATE_NONE = 0x0,TXFS_TRANSACTION_STATE_ACTIVE = 0x1,TXFS_TRANSACTION_STATE_PREPARED = 0x2,TXFS_TRANSACTION_STATE_NOTACTIVE = 0x3,TXFS_MODIFY_RM_VALID_FLAGS = 0x3FDFF,TXFS_RM_STATE_NOT_STARTED = 0x0,TXFS_RM_STATE_STARTING = 0x1,TXFS_RM_STATE_ACTIVE = 0x2,TXFS_RM_STATE_SHUTTING_DOWN = 0x3,TXFS_QUERY_RM_INFORMATION_VALID_FLAGS = 0x3C1B0,TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN = 0x1,TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK = 0x2,TXFS_ROLLFORWARD_REDO_VALID_FLAGS = 0x3,TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX = 0x1,TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN = 0x2,TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE = 0x4,TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS = 0x8,TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT = 0x10,TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE = 0x20,TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX = 0x40,TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN = 0x80,TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT = 0x200,TXFS_START_RM_FLAG_LOGGING_MODE = 0x400,TXFS_START_RM_FLAG_PRESERVE_CHANGES = 0x800,TXFS_START_RM_FLAG_PREFER_CONSISTENCY = 0x1000,TXFS_START_RM_FLAG_PREFER_AVAILABILITY = 0x2000,TXFS_START_RM_VALID_FLAGS = 0x3E7F,TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED = 0x1,TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED = 0x2,TXFS_TRANSACTED_VERSION_NONTRANSACTED = 0xFFFFFFFE,TXFS_TRANSACTED_VERSION_UNCOMMITTED = 0xFFFFFFFF,TXFS_SAVEPOINT_SET = 0x1,TXFS_SAVEPOINT_ROLLBACK = 0x2,TXFS_SAVEPOINT_CLEAR = 0x4,TXFS_SAVEPOINT_CLEAR_ALL = 0x10,};
enum MACRO_TYPE {TYPE_E_BUFFERTOOSMALL = 0x80028016,TYPE_E_FIELDNOTFOUND = 0x80028017,TYPE_E_INVDATAREAD = 0x80028018,TYPE_E_UNSUPFORMAT = 0x80028019,TYPE_E_REGISTRYACCESS = 0x8002801C,TYPE_E_LIBNOTREGISTERED = 0x8002801D,TYPE_E_UNDEFINEDTYPE = 0x80028027,TYPE_E_QUALIFIEDNAMEDISALLOWED = 0x80028028,TYPE_E_INVALIDSTATE = 0x80028029,TYPE_E_WRONGTYPEKIND = 0x8002802A,TYPE_E_ELEMENTNOTFOUND = 0x8002802B,TYPE_E_AMBIGUOUSNAME = 0x8002802C,TYPE_E_NAMECONFLICT = 0x8002802D,TYPE_E_UNKNOWNLCID = 0x8002802E,TYPE_E_DLLFUNCTIONNOTFOUND = 0x8002802F,TYPE_E_BADMODULEKIND = 0x800288BD,TYPE_E_SIZETOOBIG = 0x800288C5,TYPE_E_DUPLICATEID = 0x800288C6,TYPE_E_INVALIDID = 0x800288CF,TYPE_E_TYPEMISMATCH = 0x80028CA0,TYPE_E_OUTOFBOUNDS = 0x80028CA1,TYPE_E_IOERROR = 0x80028CA2,TYPE_E_CANTCREATETMPFILE = 0x80028CA3,TYPE_E_CANTLOADLIBRARY = 0x80029C4A,TYPE_E_INCONSISTENTPROPFUNCS = 0x80029C83,TYPE_E_CIRCULARTYPE = 0x80029C84,};
enum MACRO_UDFS {UDFS_FILE_SYSTEM = 0x9B,};
enum MACRO_UDMA {UDMA_MODE0 = 2048,UDMA_MODE1 = 4096,UDMA_MODE2 = 8192,UDMA_MODE3 = 16384,UDMA_MODE4 = 32768,UDMA_MODE5 = 65536,};
enum MACRO_UINT {UINT_MAX = 0xFFFFFFFF,};
enum MACRO_USBC {USBC_FUNCTION_FLAG_APPEND_ID = 0x1,USBC_DEVICE_CONFIGURATION_INTERFACE_VERSION_1 = 0x1,};
enum MACRO_USBD {USBD_SHORT_TRANSFER_OK = 0x2,USBD_START_ISO_TRANSFER_ASAP = 0x4,USBD_DEFAULT_PIPE_TRANSFER = 0x8,USBD_TRANSFER_DIRECTION_OUT = 0x0,USBD_TRANSFER_DIRECTION_IN = 0x1,USBD_TRANSFER_DIRECTION = 0x1,};
enum MACRO_USER {USER_MODE_HEALTH_MONITOR = 0x9E,};
enum MACRO_VACB {VACB_MAPPING_GRANULARITY = 0x40000,VACB_OFFSET_SHIFT = 0x12,};
enum MACRO_VIEW {VIEW_E_FIRST = 0x80040140,VIEW_E_LAST = 0x8004014F,VIEW_S_FIRST = 0x40140,VIEW_S_LAST = 0x4014F,VIEW_E_DRAW = 0x80040140,};
enum MACRO_WAET {WAET_DEV_RTC_ENLIGHTENED_BIT = 0,WAET_DEV_RTC_ENLIGHTENED = 1,WAET_DEV_PMTMR_GOOD_BIT = 1,WAET_DEV_PMTMR_GOOD = 2,};
enum MACRO_WAIT {WAIT_CHILD = 0,WAIT_GRANDCHILD = 1,};
enum MACRO_WAKE {WAKE_KEY_POWER_TOGGLE = 0xC,WAKE_KEY_DISCRETE_ON = 0x29,WAKE_KEY_ALL_KEYS = 0xFFFF,};
enum MACRO_WAVE {WAVE_FORMAT_UNKNOWN = 0x0,WAVE_FORMAT_ADPCM = 0x2,WAVE_FORMAT_IEEE_FLOAT = 0x3,WAVE_FORMAT_VSELP = 0x4,WAVE_FORMAT_IBM_CVSD = 0x5,WAVE_FORMAT_ALAW = 0x6,WAVE_FORMAT_MULAW = 0x7,WAVE_FORMAT_DTS = 0x8,WAVE_FORMAT_DRM = 0x9,WAVE_FORMAT_WMAVOICE9 = 0xA,WAVE_FORMAT_WMAVOICE10 = 0xB,WAVE_FORMAT_OKI_ADPCM = 0x10,WAVE_FORMAT_DVI_ADPCM = 0x11,WAVE_FORMAT_IMA_ADPCM = 0x11,WAVE_FORMAT_MEDIASPACE_ADPCM = 0x12,WAVE_FORMAT_SIERRA_ADPCM = 0x13,WAVE_FORMAT_G723_ADPCM = 0x14,WAVE_FORMAT_DIGISTD = 0x15,WAVE_FORMAT_DIGIFIX = 0x16,WAVE_FORMAT_DIALOGIC_OKI_ADPCM = 0x17,WAVE_FORMAT_MEDIAVISION_ADPCM = 0x18,WAVE_FORMAT_CU_CODEC = 0x19,WAVE_FORMAT_HP_DYN_VOICE = 0x1A,WAVE_FORMAT_YAMAHA_ADPCM = 0x20,WAVE_FORMAT_SONARC = 0x21,WAVE_FORMAT_DSPGROUP_TRUESPEECH = 0x22,WAVE_FORMAT_ECHOSC1 = 0x23,WAVE_FORMAT_AUDIOFILE_AF36 = 0x24,WAVE_FORMAT_APTX = 0x25,WAVE_FORMAT_AUDIOFILE_AF10 = 0x26,WAVE_FORMAT_PROSODY_1612 = 0x27,WAVE_FORMAT_LRC = 0x28,WAVE_FORMAT_DOLBY_AC2 = 0x30,WAVE_FORMAT_GSM610 = 0x31,WAVE_FORMAT_MSNAUDIO = 0x32,WAVE_FORMAT_ANTEX_ADPCME = 0x33,WAVE_FORMAT_CONTROL_RES_VQLPC = 0x34,WAVE_FORMAT_DIGIREAL = 0x35,WAVE_FORMAT_DIGIADPCM = 0x36,WAVE_FORMAT_CONTROL_RES_CR10 = 0x37,WAVE_FORMAT_NMS_VBXADPCM = 0x38,WAVE_FORMAT_CS_IMAADPCM = 0x39,WAVE_FORMAT_ECHOSC3 = 0x3A,WAVE_FORMAT_ROCKWELL_ADPCM = 0x3B,WAVE_FORMAT_ROCKWELL_DIGITALK = 0x3C,WAVE_FORMAT_XEBEC = 0x3D,WAVE_FORMAT_G721_ADPCM = 0x40,WAVE_FORMAT_G728_CELP = 0x41,WAVE_FORMAT_MSG723 = 0x42,WAVE_FORMAT_INTEL_G723_1 = 0x43,WAVE_FORMAT_INTEL_G729 = 0x44,WAVE_FORMAT_SHARP_G726 = 0x45,WAVE_FORMAT_MPEG = 0x50,WAVE_FORMAT_RT24 = 0x52,WAVE_FORMAT_PAC = 0x53,WAVE_FORMAT_MPEGLAYER3 = 0x55,WAVE_FORMAT_LUCENT_G723 = 0x59,WAVE_FORMAT_CIRRUS = 0x60,WAVE_FORMAT_ESPCM = 0x61,WAVE_FORMAT_VOXWARE = 0x62,WAVE_FORMAT_CANOPUS_ATRAC = 0x63,WAVE_FORMAT_G726_ADPCM = 0x64,WAVE_FORMAT_G722_ADPCM = 0x65,WAVE_FORMAT_DSAT = 0x66,WAVE_FORMAT_DSAT_DISPLAY = 0x67,WAVE_FORMAT_VOXWARE_BYTE_ALIGNED = 0x69,WAVE_FORMAT_VOXWARE_AC8 = 0x70,WAVE_FORMAT_VOXWARE_AC10 = 0x71,WAVE_FORMAT_VOXWARE_AC16 = 0x72,WAVE_FORMAT_VOXWARE_AC20 = 0x73,WAVE_FORMAT_VOXWARE_RT24 = 0x74,WAVE_FORMAT_VOXWARE_RT29 = 0x75,WAVE_FORMAT_VOXWARE_RT29HW = 0x76,WAVE_FORMAT_VOXWARE_VR12 = 0x77,WAVE_FORMAT_VOXWARE_VR18 = 0x78,WAVE_FORMAT_VOXWARE_TQ40 = 0x79,WAVE_FORMAT_VOXWARE_SC3 = 0x7A,WAVE_FORMAT_VOXWARE_SC3_1 = 0x7B,WAVE_FORMAT_SOFTSOUND = 0x80,WAVE_FORMAT_VOXWARE_TQ60 = 0x81,WAVE_FORMAT_MSRT24 = 0x82,WAVE_FORMAT_G729A = 0x83,WAVE_FORMAT_MVI_MVI2 = 0x84,WAVE_FORMAT_DF_G726 = 0x85,WAVE_FORMAT_DF_GSM610 = 0x86,WAVE_FORMAT_ISIAUDIO = 0x88,WAVE_FORMAT_ONLIVE = 0x89,WAVE_FORMAT_MULTITUDE_FT_SX20 = 0x8A,WAVE_FORMAT_INFOCOM_ITS_G721_ADPCM = 0x8B,WAVE_FORMAT_CONVEDIA_G729 = 0x8C,WAVE_FORMAT_CONGRUENCY = 0x8D,WAVE_FORMAT_SBC24 = 0x91,WAVE_FORMAT_DOLBY_AC3_SPDIF = 0x92,WAVE_FORMAT_MEDIASONIC_G723 = 0x93,WAVE_FORMAT_PROSODY_8KBPS = 0x94,WAVE_FORMAT_ZYXEL_ADPCM = 0x97,WAVE_FORMAT_PHILIPS_LPCBB = 0x98,WAVE_FORMAT_PACKED = 0x99,WAVE_FORMAT_MALDEN_PHONYTALK = 0xA0,WAVE_FORMAT_RACAL_RECORDER_GSM = 0xA1,WAVE_FORMAT_RACAL_RECORDER_G720_A = 0xA2,WAVE_FORMAT_RACAL_RECORDER_G723_1 = 0xA3,WAVE_FORMAT_RACAL_RECORDER_TETRA_ACELP = 0xA4,WAVE_FORMAT_NEC_AAC = 0xB0,WAVE_FORMAT_RAW_AAC1 = 0xFF,WAVE_FORMAT_RHETOREX_ADPCM = 0x100,WAVE_FORMAT_IRAT = 0x101,WAVE_FORMAT_VIVO_G723 = 0x111,WAVE_FORMAT_VIVO_SIREN = 0x112,WAVE_FORMAT_PHILIPS_CELP = 0x120,WAVE_FORMAT_PHILIPS_GRUNDIG = 0x121,WAVE_FORMAT_DIGITAL_G723 = 0x123,WAVE_FORMAT_SANYO_LD_ADPCM = 0x125,WAVE_FORMAT_SIPROLAB_ACEPLNET = 0x130,WAVE_FORMAT_SIPROLAB_ACELP4800 = 0x131,WAVE_FORMAT_SIPROLAB_ACELP8V3 = 0x132,WAVE_FORMAT_SIPROLAB_G729 = 0x133,WAVE_FORMAT_SIPROLAB_G729A = 0x134,WAVE_FORMAT_SIPROLAB_KELVIN = 0x135,WAVE_FORMAT_VOICEAGE_AMR = 0x136,WAVE_FORMAT_G726ADPCM = 0x140,WAVE_FORMAT_DICTAPHONE_CELP68 = 0x141,WAVE_FORMAT_DICTAPHONE_CELP54 = 0x142,WAVE_FORMAT_QUALCOMM_PUREVOICE = 0x150,WAVE_FORMAT_QUALCOMM_HALFRATE = 0x151,WAVE_FORMAT_TUBGSM = 0x155,WAVE_FORMAT_MSAUDIO1 = 0x160,WAVE_FORMAT_WMAUDIO2 = 0x161,WAVE_FORMAT_WMAUDIO3 = 0x162,WAVE_FORMAT_WMAUDIO_LOSSLESS = 0x163,WAVE_FORMAT_WMASPDIF = 0x164,WAVE_FORMAT_UNISYS_NAP_ADPCM = 0x170,WAVE_FORMAT_UNISYS_NAP_ULAW = 0x171,WAVE_FORMAT_UNISYS_NAP_ALAW = 0x172,WAVE_FORMAT_UNISYS_NAP_16K = 0x173,WAVE_FORMAT_SYCOM_ACM_SYC008 = 0x174,WAVE_FORMAT_SYCOM_ACM_SYC701_G726L = 0x175,WAVE_FORMAT_SYCOM_ACM_SYC701_CELP54 = 0x176,WAVE_FORMAT_SYCOM_ACM_SYC701_CELP68 = 0x177,WAVE_FORMAT_KNOWLEDGE_ADVENTURE_ADPCM = 0x178,WAVE_FORMAT_FRAUNHOFER_IIS_MPEG2_AAC = 0x180,WAVE_FORMAT_DTS_DS = 0x190,WAVE_FORMAT_CREATIVE_ADPCM = 0x200,WAVE_FORMAT_CREATIVE_FASTSPEECH8 = 0x202,WAVE_FORMAT_CREATIVE_FASTSPEECH10 = 0x203,WAVE_FORMAT_UHER_ADPCM = 0x210,WAVE_FORMAT_ULEAD_DV_AUDIO = 0x215,WAVE_FORMAT_ULEAD_DV_AUDIO_1 = 0x216,WAVE_FORMAT_QUARTERDECK = 0x220,WAVE_FORMAT_ILINK_VC = 0x230,WAVE_FORMAT_RAW_SPORT = 0x240,WAVE_FORMAT_ESST_AC3 = 0x241,WAVE_FORMAT_GENERIC_PASSTHRU = 0x249,WAVE_FORMAT_IPI_HSX = 0x250,WAVE_FORMAT_IPI_RPELP = 0x251,WAVE_FORMAT_CS2 = 0x260,WAVE_FORMAT_SONY_SCX = 0x270,WAVE_FORMAT_SONY_SCY = 0x271,WAVE_FORMAT_SONY_ATRAC3 = 0x272,WAVE_FORMAT_SONY_SPC = 0x273,WAVE_FORMAT_TELUM_AUDIO = 0x280,WAVE_FORMAT_TELUM_IA_AUDIO = 0x281,WAVE_FORMAT_NORCOM_VOICE_SYSTEMS_ADPCM = 0x285,WAVE_FORMAT_FM_TOWNS_SND = 0x300,WAVE_FORMAT_MICRONAS = 0x350,WAVE_FORMAT_MICRONAS_CELP833 = 0x351,WAVE_FORMAT_BTV_DIGITAL = 0x400,WAVE_FORMAT_INTEL_MUSIC_CODER = 0x401,WAVE_FORMAT_INDEO_AUDIO = 0x402,WAVE_FORMAT_QDESIGN_MUSIC = 0x450,WAVE_FORMAT_ON2_VP7_AUDIO = 0x500,WAVE_FORMAT_ON2_VP6_AUDIO = 0x501,WAVE_FORMAT_VME_VMPCM = 0x680,WAVE_FORMAT_TPC = 0x681,WAVE_FORMAT_LIGHTWAVE_LOSSLESS = 0x8AE,WAVE_FORMAT_OLIGSM = 0x1000,WAVE_FORMAT_OLIADPCM = 0x1001,WAVE_FORMAT_OLICELP = 0x1002,WAVE_FORMAT_OLISBC = 0x1003,WAVE_FORMAT_OLIOPR = 0x1004,WAVE_FORMAT_LH_CODEC = 0x1100,WAVE_FORMAT_LH_CODEC_CELP = 0x1101,WAVE_FORMAT_LH_CODEC_SBC8 = 0x1102,WAVE_FORMAT_LH_CODEC_SBC12 = 0x1103,WAVE_FORMAT_LH_CODEC_SBC16 = 0x1104,WAVE_FORMAT_NORRIS = 0x1400,WAVE_FORMAT_ISIAUDIO_2 = 0x1401,WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS = 0x1500,WAVE_FORMAT_MPEG_ADTS_AAC = 0x1600,WAVE_FORMAT_MPEG_RAW_AAC = 0x1601,WAVE_FORMAT_MPEG_LOAS = 0x1602,WAVE_FORMAT_NOKIA_MPEG_ADTS_AAC = 0x1608,WAVE_FORMAT_NOKIA_MPEG_RAW_AAC = 0x1609,WAVE_FORMAT_VODAFONE_MPEG_ADTS_AAC = 0x160A,WAVE_FORMAT_VODAFONE_MPEG_RAW_AAC = 0x160B,WAVE_FORMAT_MPEG_HEAAC = 0x1610,WAVE_FORMAT_VOXWARE_RT24_SPEECH = 0x181C,WAVE_FORMAT_SONICFOUNDRY_LOSSLESS = 0x1971,WAVE_FORMAT_INNINGS_TELECOM_ADPCM = 0x1979,WAVE_FORMAT_LUCENT_SX8300P = 0x1C07,WAVE_FORMAT_LUCENT_SX5363S = 0x1C0C,WAVE_FORMAT_CUSEEME = 0x1F03,WAVE_FORMAT_NTCSOFT_ALF2CM_ACM = 0x1FC4,WAVE_FORMAT_DVM = 0x2000,WAVE_FORMAT_DTS2 = 0x2001,WAVE_FORMAT_MAKEAVIS = 0x3313,WAVE_FORMAT_DIVIO_MPEG4_AAC = 0x4143,WAVE_FORMAT_NOKIA_ADAPTIVE_MULTIRATE = 0x4201,WAVE_FORMAT_DIVIO_G726 = 0x4243,WAVE_FORMAT_LEAD_SPEECH = 0x434C,WAVE_FORMAT_LEAD_VORBIS = 0x564C,WAVE_FORMAT_WAVPACK_AUDIO = 0x5756,WAVE_FORMAT_OGG_VORBIS_MODE_1 = 0x674F,WAVE_FORMAT_OGG_VORBIS_MODE_2 = 0x6750,WAVE_FORMAT_OGG_VORBIS_MODE_3 = 0x6751,WAVE_FORMAT_OGG_VORBIS_MODE_1_PLUS = 0x676F,WAVE_FORMAT_OGG_VORBIS_MODE_2_PLUS = 0x6770,WAVE_FORMAT_OGG_VORBIS_MODE_3_PLUS = 0x6771,WAVE_FORMAT_3COM_NBX = 0x7000,WAVE_FORMAT_FAAD_AAC = 0x706D,WAVE_FORMAT_GSM_AMR_CBR = 0x7A21,WAVE_FORMAT_GSM_AMR_VBR_SID = 0x7A22,WAVE_FORMAT_COMVERSE_INFOSYS_G723_1 = 0xA100,WAVE_FORMAT_COMVERSE_INFOSYS_AVQSBC = 0xA101,WAVE_FORMAT_COMVERSE_INFOSYS_SBC = 0xA102,WAVE_FORMAT_SYMBOL_G729_A = 0xA103,WAVE_FORMAT_VOICEAGE_AMR_WB = 0xA104,WAVE_FORMAT_INGENIENT_G726 = 0xA105,WAVE_FORMAT_MPEG4_AAC = 0xA106,WAVE_FORMAT_ENCORE_G726 = 0xA107,WAVE_FORMAT_ZOLL_ASAO = 0xA108,WAVE_FORMAT_SPEEX_VOICE = 0xA109,WAVE_FORMAT_VIANIX_MASC = 0xA10A,WAVE_FORMAT_WM9_SPECTRUM_ANALYZER = 0xA10B,WAVE_FORMAT_WMF_SPECTRUM_ANAYZER = 0xA10C,WAVE_FORMAT_GSM_610 = 0xA10D,WAVE_FORMAT_GSM_620 = 0xA10E,WAVE_FORMAT_GSM_660 = 0xA10F,WAVE_FORMAT_GSM_690 = 0xA110,WAVE_FORMAT_GSM_ADAPTIVE_MULTIRATE_WB = 0xA111,WAVE_FORMAT_POLYCOM_G722 = 0xA112,WAVE_FORMAT_POLYCOM_G728 = 0xA113,WAVE_FORMAT_POLYCOM_SIREN = 0xA115,WAVE_FORMAT_GLOBAL_IP_ILBC = 0xA116,WAVE_FORMAT_RADIOTIME_TIME_SHIFT_RADIO = 0xA117,WAVE_FORMAT_NICE_ACA = 0xA118,WAVE_FORMAT_NICE_ADPCM = 0xA119,WAVE_FORMAT_VOCORD_G721 = 0xA11A,WAVE_FORMAT_VOCORD_G726 = 0xA11B,WAVE_FORMAT_VOCORD_G722_1 = 0xA11C,WAVE_FORMAT_VOCORD_G728 = 0xA11D,WAVE_FORMAT_VOCORD_G729 = 0xA11E,WAVE_FORMAT_VOCORD_G729_A = 0xA11F,WAVE_FORMAT_VOCORD_G723_1 = 0xA120,WAVE_FORMAT_VOCORD_LBC = 0xA121,WAVE_FORMAT_NICE_G728 = 0xA122,WAVE_FORMAT_FRACE_TELECOM_G729 = 0xA123,WAVE_FORMAT_CODIAN = 0xA124,WAVE_FORMAT_FLAC = 0xF1AC,WAVE_FORMAT_EXTENSIBLE = 0xFFFE,WAVE_FORMAT_DEVELOPMENT = 0xFFFF,WAVE_FORMAT_PCM = 0x1,};
enum MACRO_WEOF {WEOF = 0xFFFF,};
enum MACRO_WHEA {WHEA_INTERNAL_ERROR = 0x122,};
enum MACRO_WNNC {WNNC_NET_MSNET = 0x10000,WNNC_NET_SMB = 0x20000,WNNC_NET_NETWARE = 0x30000,WNNC_NET_VINES = 0x40000,WNNC_NET_10NET = 0x50000,WNNC_NET_LOCUS = 0x60000,WNNC_NET_SUN_PC_NFS = 0x70000,WNNC_NET_LANSTEP = 0x80000,WNNC_NET_9TILES = 0x90000,WNNC_NET_LANTASTIC = 0xA0000,WNNC_NET_AS400 = 0xB0000,WNNC_NET_FTP_NFS = 0xC0000,WNNC_NET_PATHWORKS = 0xD0000,WNNC_NET_LIFENET = 0xE0000,WNNC_NET_POWERLAN = 0xF0000,WNNC_NET_BWNFS = 0x100000,WNNC_NET_COGENT = 0x110000,WNNC_NET_FARALLON = 0x120000,WNNC_NET_APPLETALK = 0x130000,WNNC_NET_INTERGRAPH = 0x140000,WNNC_NET_SYMFONET = 0x150000,WNNC_NET_CLEARCASE = 0x160000,WNNC_NET_FRONTIER = 0x170000,WNNC_NET_BMC = 0x180000,WNNC_NET_DCE = 0x190000,WNNC_NET_AVID = 0x1A0000,WNNC_NET_DOCUSPACE = 0x1B0000,WNNC_NET_MANGOSOFT = 0x1C0000,WNNC_NET_SERNET = 0x1D0000,WNNC_NET_RIVERFRONT1 = 0x1E0000,WNNC_NET_RIVERFRONT2 = 0x1F0000,WNNC_NET_DECORB = 0x200000,WNNC_NET_PROTSTOR = 0x210000,WNNC_NET_FJ_REDIR = 0x220000,WNNC_NET_DISTINCT = 0x230000,WNNC_NET_TWINS = 0x240000,WNNC_NET_RDR2SAMPLE = 0x250000,WNNC_NET_CSC = 0x260000,WNNC_NET_3IN1 = 0x270000,WNNC_NET_EXTENDNET = 0x290000,WNNC_NET_STAC = 0x2A0000,WNNC_NET_FOXBAT = 0x2B0000,WNNC_NET_YAHOO = 0x2C0000,WNNC_NET_EXIFS = 0x2D0000,WNNC_NET_DAV = 0x2E0000,WNNC_NET_KNOWARE = 0x2F0000,WNNC_NET_OBJECT_DIRE = 0x300000,WNNC_NET_MASFAX = 0x310000,WNNC_NET_HOB_NFS = 0x320000,WNNC_NET_SHIVA = 0x330000,WNNC_NET_IBMAL = 0x340000,WNNC_NET_LOCK = 0x350000,WNNC_NET_TERMSRV = 0x360000,WNNC_NET_SRT = 0x370000,WNNC_NET_QUINCY = 0x380000,WNNC_NET_OPENAFS = 0x390000,WNNC_NET_AVID1 = 0x3A0000,WNNC_NET_DFS = 0x3B0000,WNNC_NET_KWNP = 0x3C0000,WNNC_NET_ZENWORKS = 0x3D0000,WNNC_NET_DRIVEONWEB = 0x3E0000,WNNC_NET_VMWARE = 0x3F0000,WNNC_NET_RSFX = 0x400000,WNNC_NET_MFILES = 0x410000,WNNC_NET_MS_NFS = 0x420000,WNNC_NET_GOOGLE = 0x430000,WNNC_NET_NDFS = 0x440000,WNNC_CRED_MANAGER = 0xFFFF0000,WNNC_NET_LANMAN = 0x20000,};
enum MACRO_WPBT {WPBT_MINIMUM_REVISION = 1,WPBT_MAXIMUM_REVISION = 1,WPBT_MIN_SIZE = 52,WPBT_BOOT_SEARCH_START = 4096,WPBT_BOOT_SEARCH_END = 655360,WPBT_BOOT_SEARCH_INCREMENT = 64,};
enum MACRO_WWAN {WWAN_ERROR_UNSUPPORTED_FIRMWARE = 0xF0F0F000,WWAN_ERROR_COM_PORT_CONFLICT = 0xF0F0F001,WWAN_ERROR_RESOURCE_CONFLICT_OTHER = 0xF0F0FFFF,WWAN_STATUS_SUCCESS = 0x0,WWAN_STATUS_BUSY = 0xC0040002,WWAN_STATUS_FAILURE = 0xC0040003,WWAN_STATUS_SIM_NOT_INSERTED = 0xC0040004,WWAN_STATUS_BAD_SIM = 0xC0040005,WWAN_STATUS_PIN_REQUIRED = 0xC0040006,WWAN_STATUS_PIN_DISABLED = 0x40040007,WWAN_STATUS_NOT_REGISTERED = 0x40040008,WWAN_STATUS_PROVIDERS_NOT_FOUND = 0x40040009,WWAN_STATUS_NO_DEVICE_SUPPORT = 0xC004000A,WWAN_STATUS_PROVIDER_NOT_VISIBLE = 0x4004000B,WWAN_STATUS_DATA_CLASS_NOT_AVAILABLE = 0x4004000C,WWAN_STATUS_PACKET_SVC_DETACHED = 0xC004000D,WWAN_STATUS_MAX_ACTIVATED_CONTEXTS = 0xC004000E,WWAN_STATUS_NOT_INITIALIZED = 0xC004000F,WWAN_STATUS_VOICE_CALL_IN_PROGRESS = 0x40040010,WWAN_STATUS_CONTEXT_NOT_ACTIVATED = 0xC0040011,WWAN_STATUS_SERVICE_NOT_ACTIVATED = 0xC0040012,WWAN_STATUS_INVALID_ACCESS_STRING = 0xC0040013,WWAN_STATUS_INVALID_USER_NAME_PWD = 0xC0040014,WWAN_STATUS_RADIO_POWER_OFF = 0xC0040015,WWAN_STATUS_INVALID_PARAMETERS = 0xC0040016,WWAN_STATUS_READ_FAILURE = 0xC0040017,WWAN_STATUS_WRITE_FAILURE = 0xC0040018,WWAN_STATUS_DENIED_POLICY = 0xC0040019,WWAN_STATUS_INVALID_DEVICE_SERVICE_OPERATION = 0xC004001A,WWAN_STATUS_MORE_DATA = 0xC004001B,WWAN_STATUS_SMS_OPERATION_NOT_ALLOWED = 0xC0040100,WWAN_STATUS_SMS_MEMORY_FAILURE = 0xC0040101,WWAN_STATUS_SMS_INVALID_MEMORY_INDEX = 0xC0040102,WWAN_STATUS_SMS_UNKNOWN_SMSC_ADDRESS = 0xC0040103,WWAN_STATUS_SMS_NETWORK_TIMEOUT = 0xC0040104,WWAN_STATUS_SMS_MEMORY_FULL = 0xC0040105,WWAN_STATUS_SMS_UNKNOWN_ERROR = 0xC0040106,WWAN_STATUS_SMS_FILTER_NOT_SUPPORTED = 0xC0040107,WWAN_STATUS_SMS_MORE_DATA = 0x40040108,WWAN_STATUS_SMS_LANG_NOT_SUPPORTED = 0xC0040109,WWAN_STATUS_SMS_ENCODING_NOT_SUPPORTED = 0xC004010A,WWAN_STATUS_SMS_FORMAT_NOT_SUPPORTED = 0xC004010B,WWAN_STATUS_AUTH_INCORRECT_AUTN = 0xC0040200,WWAN_STATUS_AUTH_SYNC_FAILURE = 0xC0040201,WWAN_STATUS_AUTH_AMF_NOT_SET = 0xC0040202,WWAN_MANUFACTURER_LEN = 0x20,WWAN_MODEL_LEN = 0x20,WWAN_FIRMWARE_LEN = 0x20,WWAN_DEVICEID_LEN = 0x12,WWAN_CUSTOM_DATA_CLASS_LEN = 0xC,WWAN_CUSTOM_BAND_CLASS_LEN = 0x14,WWAN_PROVIDERID_LEN = 0x7,WWAN_PROVIDERNAME_LEN = 0x15,WWAN_ROAMTEXT_LEN = 0x40,WWAN_ACCESSSTRING_LEN = 0x65,WWAN_USERNAME_LEN = 0x100,WWAN_PASSWORD_LEN = 0x100,WWAN_SUBSCRIBERID_LEN = 0x10,WWAN_PIN_LEN = 0x11,WWAN_SUBSCRIBERID_LEN_EX = 0x13,};
enum MACRO_XACT {XACT_E_FIRST = 0x8004D000,XACT_E_LAST = 0x8004D02B,XACT_S_FIRST = 0x4D000,XACT_S_LAST = 0x4D010,XACT_E_ALREADYOTHERSINGLEPHASE = 0x8004D000,XACT_E_CANTRETAIN = 0x8004D001,XACT_E_COMMITFAILED = 0x8004D002,XACT_E_COMMITPREVENTED = 0x8004D003,XACT_E_HEURISTICABORT = 0x8004D004,XACT_E_HEURISTICCOMMIT = 0x8004D005,XACT_E_HEURISTICDAMAGE = 0x8004D006,XACT_E_HEURISTICDANGER = 0x8004D007,XACT_E_ISOLATIONLEVEL = 0x8004D008,XACT_E_NOASYNC = 0x8004D009,XACT_E_NOENLIST = 0x8004D00A,XACT_E_NOISORETAIN = 0x8004D00B,XACT_E_NORESOURCE = 0x8004D00C,XACT_E_NOTCURRENT = 0x8004D00D,XACT_E_NOTRANSACTION = 0x8004D00E,XACT_E_NOTSUPPORTED = 0x8004D00F,XACT_E_UNKNOWNRMGRID = 0x8004D010,XACT_E_WRONGSTATE = 0x8004D011,XACT_E_WRONGUOW = 0x8004D012,XACT_E_XTIONEXISTS = 0x8004D013,XACT_E_NOIMPORTOBJECT = 0x8004D014,XACT_E_INVALIDCOOKIE = 0x8004D015,XACT_E_INDOUBT = 0x8004D016,XACT_E_NOTIMEOUT = 0x8004D017,XACT_E_ALREADYINPROGRESS = 0x8004D018,XACT_E_ABORTED = 0x8004D019,XACT_E_LOGFULL = 0x8004D01A,XACT_E_TMNOTAVAILABLE = 0x8004D01B,XACT_E_CONNECTION_DOWN = 0x8004D01C,XACT_E_CONNECTION_DENIED = 0x8004D01D,XACT_E_REENLISTTIMEOUT = 0x8004D01E,XACT_E_TIP_CONNECT_FAILED = 0x8004D01F,XACT_E_TIP_PROTOCOL_ERROR = 0x8004D020,XACT_E_TIP_PULL_FAILED = 0x8004D021,XACT_E_DEST_TMNOTAVAILABLE = 0x8004D022,XACT_E_TIP_DISABLED = 0x8004D023,XACT_E_NETWORK_TX_DISABLED = 0x8004D024,XACT_E_PARTNER_NETWORK_TX_DISABLED = 0x8004D025,XACT_E_XA_TX_DISABLED = 0x8004D026,XACT_E_UNABLE_TO_READ_DTC_CONFIG = 0x8004D027,XACT_E_UNABLE_TO_LOAD_DTC_PROXY = 0x8004D028,XACT_E_ABORTING = 0x8004D029,XACT_E_PUSH_COMM_FAILURE = 0x8004D02A,XACT_E_PULL_COMM_FAILURE = 0x8004D02B,XACT_E_LU_TX_DISABLED = 0x8004D02C,XACT_E_CLERKNOTFOUND = 0x8004D080,XACT_E_CLERKEXISTS = 0x8004D081,XACT_E_RECOVERYINPROGRESS = 0x8004D082,XACT_E_TRANSACTIONCLOSED = 0x8004D083,XACT_E_INVALIDLSN = 0x8004D084,XACT_E_REPLAYREQUEST = 0x8004D085,XACT_S_ASYNC = 0x4D000,XACT_S_DEFECT = 0x4D001,XACT_S_READONLY = 0x4D002,XACT_S_SOMENORETAIN = 0x4D003,XACT_S_OKINFORM = 0x4D004,XACT_S_MADECHANGESCONTENT = 0x4D005,XACT_S_MADECHANGESINFORM = 0x4D006,XACT_S_ALLNORETAIN = 0x4D007,XACT_S_ABORTING = 0x4D008,XACT_S_SINGLEPHASE = 0x4D009,XACT_S_LOCALLY_OK = 0x4D00A,XACT_S_LASTRESOURCEMANAGER = 0x4D010,};
enum MACRO_XBOX {XBOX_360_SYSTEM_CRASH = 0x360,XBOX_360_SYSTEM_CRASH_RESERVED = 0x420,};
enum MACRO_ZERO {ZERO_PF_IP_ADDR = 0,};
enum MACRO__CMP {_CMP_EQ_OQ = 0x0,_CMP_LT_OS = 0x1,_CMP_LE_OS = 0x2,_CMP_UNORD_Q = 0x3,_CMP_NEQ_UQ = 0x4,_CMP_NLT_US = 0x5,_CMP_NLE_US = 0x6,_CMP_ORD_Q = 0x7,_CMP_EQ_UQ = 0x8,_CMP_NGE_US = 0x9,_CMP_NGT_US = 0xA,_CMP_FALSE_OQ = 0xB,_CMP_NEQ_OQ = 0xC,_CMP_GE_OS = 0xD,_CMP_GT_OS = 0xE,_CMP_TRUE_UQ = 0xF,_CMP_EQ_OS = 0x10,_CMP_LT_OQ = 0x11,_CMP_LE_OQ = 0x12,_CMP_UNORD_S = 0x13,_CMP_NEQ_US = 0x14,_CMP_NLT_UQ = 0x15,_CMP_NLE_UQ = 0x16,_CMP_ORD_S = 0x17,_CMP_EQ_US = 0x18,_CMP_NGE_UQ = 0x19,_CMP_NGT_UQ = 0x1A,_CMP_FALSE_OS = 0x1B,_CMP_NEQ_OS = 0x1C,_CMP_GE_OQ = 0x1D,_CMP_GT_OQ = 0x1E,_CMP_TRUE_US = 0x1F,};
enum MACRO__CRT {_CRT_PACKING = 8,};
enum MACRO__DBL {_DBL_RADIX = 2,_DBL_ROUNDS = 1,};
enum MACRO__FPE {_FPE_INVALID = 0x81,_FPE_DENORMAL = 0x82,_FPE_ZERODIVIDE = 0x83,_FPE_OVERFLOW = 0x84,_FPE_UNDERFLOW = 0x85,_FPE_INEXACT = 0x86,_FPE_UNEMULATED = 0x87,_FPE_SQRTNEG = 0x88,_FPE_STACKOVERFLOW = 0x8A,_FPE_STACKUNDERFLOW = 0x8B,_FPE_EXPLICITGEN = 0x8C,};
enum MACRO__I32 {_I32_MIN = -2147483648,_I32_MAX = 2147483647,};
enum MACRO__I64 {_I64_MIN = -9223372036854775808,_I64_MAX = 9223372036854775807,};
enum MACRO__INC {_INC_MMREG = 158,};
enum MACRO__IOB {_IOB_ENTRIES = 20,};
enum MACRO__MAX {_MAX_BLOCKS = 5,};
enum MACRO__MBC {_MBC_SINGLE = 0,_MBC_LEAD = 1,_MBC_TRAIL = 2,_MBC_ILLEGAL = -1,};
enum MACRO__MCW {_MCW_EM = 0x8001F,};
enum MACRO__OLD {_OLD_P_OVERLAY = 2,};
enum MACRO__OUT {_OUT_TO_DEFAULT = 0,_OUT_TO_STDERR = 1,_OUT_TO_MSGBOX = 2,};
enum MACRO__RTC {_RTC_ERRTYPE_IGNORE = -1,_RTC_ERRTYPE_ASK = -2,};
enum MACRO__SAL {_SAL_VERSION = 20,};
enum MACRO__SYS {_SYS_OPEN = 20,};
enum MACRO__TMP {_TMP_MAX_S = 2147483647,};
enum MACRO__TWO {_TWO_DIGIT_EXPONENT = 0x1,};
enum MACRO__USE {_USE_DECLSPECS_FOR_SAL = 0,_USE_ATTRIBUTES_FOR_SAL = 0,};
enum MACRO__XCR {_XCR_XFEATURE_ENABLED_MASK = 0,};
enum MACRO_i386 {i386 = 1,};
enum MACRO_type {__string_type = 0,__guid_type = 0,__multiString_type = 0,};
typedef struct _MCFG_TABLE MCFG_TABLE;
typedef union _MCG_STATUS MCG_STATUS;
typedef union _MCI_STATUS MCI_STATUS;
typedef struct _MLD_HEADER MLD_HEADER;
typedef struct _MSAcpiInfo MSAcpiInfo;
typedef struct _MSWmi_Guid MSWmi_Guid;
typedef struct _NAME_CACHE NAME_CACHE;
typedef struct _NDIS_EVENT NDIS_EVENT;
typedef struct _NDIS_TIMER NDIS_TIMER;
typedef struct _NDK_RESULT NDK_RESULT;
typedef struct _NET_BUFFER NET_BUFFER;
typedef struct _OEM0_TABLE OEM0_TABLE;
typedef struct _ACPI_MPST *PACPI_MPST;
typedef struct _ACPI_MSCT *PACPI_MSCT;
typedef struct _ACPI_SRAT *PACPI_SRAT;
typedef struct addrinfo *PADDRINFOA;
typedef struct addrinfoW *PADDRINFOW;
typedef struct _BIN_COUNT *PBIN_COUNT;
typedef struct _BIN_RANGE *PBIN_RANGE;
typedef struct _CDROM_TOC *PCDROM_TOC;
typedef struct _CHAR_INFO *PCHAR_INFO;
typedef struct _PCIBUSDATA PCIBUSDATA;
typedef struct _CIP_FRAME *PCIP_FRAME;
typedef struct _DMARTABLE *PDMARTABLE;
typedef struct tagDRMRIGHTS *PDRMRIGHTS;
typedef struct _ENG_EVENT *PENG_EVENT;
typedef struct _ERESOURCE *PERESOURCE;
typedef struct _FCP_FRAME *PFCP_FRAME;
typedef struct _A9A577EE7A824FAC978D1F581F222FD5 *PFILTERDBS;
typedef union _FOUR_BYTE *PFOUR_BYTE;
typedef struct group_req *PGROUP_REQ;
typedef struct _HBAScsiID *PHBAScsiID;
typedef struct HBA_FcpId *PHBA_FCPID;
typedef struct _HIDP_CAPS *PHIDP_CAPS;
typedef struct _HIDP_DATA *PHIDP_DATA;
typedef struct _INTERFACE *PINTERFACE;
typedef struct ipv6_mreq *PIPV6_MREQ;
typedef struct _KSMAPPING *PKSMAPPING;
typedef struct _1C8C43135D010607C9E39DAEFBEEA658 *PKSQUALITY;
typedef struct _KS_COLCON *PKS_COLCON;
typedef struct _LLDP_MSAP *PLLDP_MSAP;
typedef union _MCI_STATS *PMCI_STATS;
typedef struct _NDIS_GUID *PNDIS_GUID;
typedef struct _NDIS_PORT *PNDIS_PORT;
struct POHANDLE__ {int unused;};
typedef struct _OS_STRING *POS_STRING;
typedef struct _PCC_TABLE *PPCC_TABLE;
typedef struct _PCI_PMCSR *PPCI_PMCSR;
typedef struct _PMI_EVENT *PPMI_EVENT;
typedef struct _2E9A7A0438C52FCD74FAAABDE54DD374 *PRCVALL_IF;
typedef struct _READ_LIST *PREAD_LIST;
typedef struct _REFERENCE *PREFERENCE;
typedef struct _RIORESULT *PRIORESULT;
typedef struct _KPROCESS *PRKPROCESS;
typedef struct _SCSI_ADDR *PSCSI_ADDR;
typedef struct _SFI_TIMER *PSFI_TIMER;
typedef unsigned int *PSMB_ULONG;
typedef struct _SPEED_MAP *PSPEED_MAP;
typedef struct _VIDEO_PORT_SPIN_LOCK *PSPIN_LOCK;
typedef struct _SecBuffer *PSecBuffer;
typedef struct _SecHandle *PSecHandle;
typedef struct _X_FILTER *PTR_FILTER;
typedef struct _PUBLIC_BCB PUBLIC_BCB;
typedef unsigned short *PUHALF_PTR;
typedef unsigned int *PULONG_PTR;
typedef struct _VIDEO_VDM *PVIDEO_VDM;
typedef struct _RDBSS_DATA RDBSS_DATA;
typedef struct _RTL_BITMAP RTL_BITMAP;
typedef struct _RX_CONTEXT RX_CONTEXT;
typedef struct _SENSE_DATA SENSE_DATA;
typedef struct _SE_EXPORTS SE_EXPORTS;
typedef struct _SMB_HEADER SMB_HEADER;
typedef struct _SMB_PARAMS SMB_PARAMS;
struct SMHBA_LUID {char buffer[256];};
typedef union SMHBA_Port SMHBA_PORT;
typedef struct _SRBEX_DATA SRBEX_DATA;
typedef struct _SYSID_1394 SYSID_1394;
typedef struct _SYSID_UUID SYSID_UUID;
typedef struct _SendRLS_IN SendRLS_IN;
typedef struct _SendRPL_IN SendRPL_IN;
typedef struct _SendRPS_IN SendRPS_IN;
typedef struct _SendSRL_IN SendSRL_IN;
typedef struct _TAPE_ERASE TAPE_ERASE;
typedef struct _TA_ADDRESS TA_ADDRESS;
typedef struct tcp_opt_ts TCP_OPT_TS;
typedef struct tcp_opt_ws TCP_OPT_WS;
typedef struct _TOKEN_USER TOKEN_USER;
typedef struct _TRACK_DATA TRACK_DATA;
typedef struct _VAR_STRING VAR_STRING;
typedef struct _F686D1C2766FDD5B6EB9F09F9CA57BCC VIDEO_CLUT;
typedef struct _VIDEO_MODE VIDEO_MODE;
typedef struct _V_NET_ROOT V_NET_ROOT;
typedef struct wavefilter_tag WAVEFILTER;
typedef struct waveformat_tag WAVEFORMAT;
typedef struct cmsghdr WSACMSGHDR;
typedef struct _WSK_SOCKET WSK_SOCKET;
typedef struct _WST_BUFFER WST_BUFFER;
typedef struct _XSAVE_AREA XSAVE_AREA;
enum _BIN_TYPES {RequestSize = 0x0,RequestLocation = 0x1,};
typedef struct _E6A349E6C594207448DC3F8A57F3A91C _CRT_FLOAT;
enum _DMA_SPEED {Compatible = 0x0,TypeA = 0x1,TypeB = 0x2,TypeC = 0x3,TypeF = 0x4,MaximumDmaSpeed = 0x5,};
enum _DMA_WIDTH {Width8Bits = 0x0,Width16Bits = 0x1,Width32Bits = 0x2,Width64Bits = 0x3,WidthNoWrap = 0x4,MaximumDmaWidth = 0x5,};
enum _FILE_TYPE {FileTypeDisk = 0x0,FileTypeByteModePipe = 0x1,FileTypeMessageModePipe = 0x2,FileTypePrinter = 0x3,FileTypeCommDevice = 0x4,FileTypeIPC = 0xFFFE,FileTypeUnknown = 0xFFFF,};
enum _KD_OPTION {KD_OPTION_SET_BLOCK_ENABLE = 0x0,};
struct _KS_COLCON {unsigned char emph1col : 4;unsigned char emph2col : 4;unsigned char backcol : 4;unsigned char patcol : 4;unsigned char emph1con : 4;unsigned char emph2con : 4;unsigned char backcon : 4;unsigned char patcon : 4;};
enum _LOWIO_OPS {LOWIO_OP_READ = 0x0,LOWIO_OP_WRITE = 0x1,LOWIO_OP_SHAREDLOCK = 0x2,LOWIO_OP_EXCLUSIVELOCK = 0x3,LOWIO_OP_UNLOCK = 0x4,LOWIO_OP_UNLOCK_MULTIPLE = 0x5,LOWIO_OP_FSCTL = 0x6,LOWIO_OP_IOCTL = 0x7,LOWIO_OP_NOTIFY_CHANGE_DIRECTORY = 0x8,LOWIO_OP_CLEAROUT = 0x9,LOWIO_OP_MAXIMUM = 0xA,};
struct _PCI_PMCSR {unsigned short PowerState : 2;unsigned short Rsvd1 : 6;unsigned short PMEEnable : 1;unsigned short DataSelect : 4;unsigned short DataScale : 2;unsigned short PMEStatus : 1;};
enum _PDO_STATE {PDO_STATE_UNDEFINED = 0x0,PDO_STATE_STARTED = 0x1,PDO_STATE_NOT_STARTED = 0x2,};
enum _POOL_TYPE {NonPagedPool = 0x0,NonPagedPoolExecute = 0x0,PagedPool = 0x1,NonPagedPoolMustSucceed = 0x2,DontUseThisType = 0x3,NonPagedPoolCacheAligned = 0x4,PagedPoolCacheAligned = 0x5,NonPagedPoolCacheAlignedMustS = 0x6,MaxPoolType = 0x7,NonPagedPoolBase = 0x0,NonPagedPoolBaseMustSucceed = 0x2,NonPagedPoolBaseCacheAligned = 0x4,NonPagedPoolBaseCacheAlignedMustS = 0x6,NonPagedPoolSession = 0x20,PagedPoolSession = 0x21,NonPagedPoolMustSucceedSession = 0x22,DontUseThisTypeSession = 0x23,NonPagedPoolCacheAlignedSession = 0x24,PagedPoolCacheAlignedSession = 0x25,NonPagedPoolCacheAlignedMustSSession = 0x26,NonPagedPoolNx = 0x200,NonPagedPoolNxCacheAligned = 0x204,NonPagedPoolSessionNx = 0x220,};
struct _SecBuffer {unsigned int cbBuffer;unsigned int BufferType;void *pvBuffer;};
enum _WAIT_TYPE {WaitAll = 0x0,WaitAny = 0x1,WaitNotification = 0x2,};
typedef int __time32_t;
typedef long long __time64_t;
struct _exception {int type;char *name;double arg1;double arg2;double retval;};
typedef struct _ACPI_MPST ACPI_MPST;
typedef struct _ACPI_MSCT ACPI_MSCT;
typedef struct _ACPI_SRAT ACPI_SRAT;
typedef struct addrinfo ADDRINFOA;
typedef struct addrinfoW ADDRINFOW;
typedef struct _APICTABLE APICTABLE;
enum BDA_Range {BDA_RANGE_NOT_SET = 0xFFFFFFFF,BDA_RANGE_NOT_DEFINED = 0x0,};
typedef struct _BIN_COUNT BIN_COUNT;
typedef struct _BIN_RANGE BIN_RANGE;
typedef struct _CDROM_TOC CDROM_TOC;
typedef struct _CHAR_INFO CHAR_INFO;
typedef struct _CIP_FRAME CIP_FRAME;
typedef struct _CLIENT_ID CLIENT_ID;
typedef struct _CO_HEADER CO_HEADER;
typedef struct _DMARTABLE DMARTABLE;
typedef struct tagDRMRIGHTS DRMRIGHTS;
typedef struct _ENG_EVENT ENG_EVENT;
typedef struct _ERESOURCE ERESOURCE;
typedef struct _FCP_FRAME FCP_FRAME;
enum FECMethod {BDA_FEC_METHOD_NOT_SET = 0xFFFFFFFF,BDA_FEC_METHOD_NOT_DEFINED = 0x0,BDA_FEC_VITERBI = 0x1,BDA_FEC_RS_204_188 = 0x2,BDA_FEC_LDPC = 0x3,BDA_FEC_BCH = 0x4,BDA_FEC_RS_147_130 = 0x5,BDA_FEC_MAX = 0x6,};
typedef struct _FILE_LOCK FILE_LOCK;
typedef struct _A9A577EE7A824FAC978D1F581F222FD5 FILTERDBS;
typedef union _FOUR_BYTE FOUR_BYTE;
typedef struct group_req GROUP_REQ;
typedef struct _HBAScsiID HBAScsiID;
typedef struct HBA_FcpId HBA_FCPID;
struct HBITMAP__ {int unused;};
typedef struct _HIDP_CAPS HIDP_CAPS;
typedef struct _HIDP_DATA HIDP_DATA;
typedef struct HINSTANCE__ *HINSTANCE;
typedef struct HMETAFILE__ *HMETAFILE;
struct HSPRITE__ {int unused;};
struct HWINSTA__ {int unused;};
struct IDrmPort2 {struct IDrmPort2Vtbl *lpVtbl;};
struct IMiniport {struct IMiniportVtbl *lpVtbl;};
typedef struct _INTERFACE INTERFACE;
typedef struct ipv6_mreq IPV6_MREQ;
struct IPinCount {struct IPinCountVtbl *lpVtbl;};
struct IPortMidi {struct IPortMidiVtbl *lpVtbl;};
typedef struct _KSMAPPING KSMAPPING;
typedef struct _1C8C43135D010607C9E39DAEFBEEA658 KSQUALITY;
typedef struct _KS_COLCON KS_COLCON;
typedef struct _LARGE_MCB LARGE_MCB;
typedef struct _LLDP_MSAP LLDP_MSAP;
typedef struct _IDEREGS *LPIDEREGS;
typedef struct in_addr *LPIN_ADDR;
enum MACRO_AAL {AAL_TYPE_AAL0 = 1,AAL_TYPE_AAL1 = 2,AAL_TYPE_AAL34 = 4,AAL_TYPE_AAL5 = 8,};
enum MACRO_ACE {OBJECT_INHERIT_ACE = 0x1,CONTAINER_INHERIT_ACE = 0x2,NO_PROPAGATE_INHERIT_ACE = 0x4,INHERIT_ONLY_ACE = 0x8,INHERITED_ACE = 0x10,};
enum MACRO_ACL {ACL_REVISION = 2,ACL_REVISION_DS = 4,ACL_REVISION1 = 1,ACL_REVISION2 = 2,ACL_REVISION3 = 3,ACL_REVISION4 = 4,};
enum MACRO_ACM {ACM_MPEG_LAYER1 = 0x1,ACM_MPEG_LAYER2 = 0x2,ACM_MPEG_LAYER3 = 0x4,ACM_MPEG_STEREO = 0x1,ACM_MPEG_JOINTSTEREO = 0x2,ACM_MPEG_DUALCHANNEL = 0x4,ACM_MPEG_SINGLECHANNEL = 0x8,ACM_MPEG_PRIVATEBIT = 0x1,ACM_MPEG_COPYRIGHT = 0x2,ACM_MPEG_ORIGINALHOME = 0x4,ACM_MPEG_PROTECTIONBIT = 0x8,ACM_MPEG_ID_MPEG1 = 0x10,};
enum MACRO_ADR {ADR_NO_MODE_INFORMATION = 0x0,ADR_ENCODES_CURRENT_POSITION = 0x1,ADR_ENCODES_MEDIA_CATALOG = 0x2,ADR_ENCODES_ISRC = 0x3,};
enum MACRO_AGP {AGP_INVALID_ACCESS = 0x104,AGP_GART_CORRUPTION = 0x105,AGP_ILLEGALLY_REPROGRAMMED = 0x106,};
enum MACRO_ALL {ALL_PROCESSOR_GROUPS = 0xFFFF,};
enum MACRO_APC {APC_INDEX_MISMATCH = 0x1,};
enum MACRO_API {API_SET_SCHEMA_VERSION = 0x2,API_SET_LOAD_SCHEMA_ORDINAL = 0x1,API_SET_LOOKUP_ORDINAL = 0x2,API_SET_RELEASE_SCHEMA_ORDINAL = 0x3,};
enum MACRO_APP {APP_TAGGING_INITIALIZATION_FAILED = 0x10A,};
enum MACRO_ASC {ASC_REQ_DELEGATE = 0x1,ASC_REQ_MUTUAL_AUTH = 0x2,ASC_REQ_REPLAY_DETECT = 0x4,ASC_REQ_SEQUENCE_DETECT = 0x8,ASC_REQ_CONFIDENTIALITY = 0x10,ASC_REQ_USE_SESSION_KEY = 0x20,ASC_REQ_ALLOCATE_MEMORY = 0x100,ASC_REQ_USE_DCE_STYLE = 0x200,ASC_REQ_DATAGRAM = 0x400,ASC_REQ_CONNECTION = 0x800,ASC_REQ_CALL_LEVEL = 0x1000,ASC_REQ_EXTENDED_ERROR = 0x8000,ASC_REQ_STREAM = 0x10000,ASC_REQ_INTEGRITY = 0x20000,ASC_REQ_LICENSING = 0x40000,ASC_REQ_IDENTIFY = 0x80000,ASC_REQ_ALLOW_NULL_SESSION = 0x100000,ASC_REQ_ALLOW_NON_USER_LOGONS = 0x200000,ASC_REQ_ALLOW_CONTEXT_REPLAY = 0x400000,ASC_REQ_FRAGMENT_TO_FIT = 0x800000,ASC_REQ_FRAGMENT_SUPPLIED = 0x2000,ASC_REQ_NO_TOKEN = 0x1000000,ASC_REQ_PROXY_BINDINGS = 0x4000000,ASC_REQ_ALLOW_MISSING_BINDINGS = 0x10000000,ASC_RET_DELEGATE = 0x1,ASC_RET_MUTUAL_AUTH = 0x2,ASC_RET_REPLAY_DETECT = 0x4,ASC_RET_SEQUENCE_DETECT = 0x8,ASC_RET_CONFIDENTIALITY = 0x10,ASC_RET_USE_SESSION_KEY = 0x20,ASC_RET_ALLOCATED_MEMORY = 0x100,ASC_RET_USED_DCE_STYLE = 0x200,ASC_RET_DATAGRAM = 0x400,ASC_RET_CONNECTION = 0x800,ASC_RET_CALL_LEVEL = 0x2000,ASC_RET_THIRD_LEG_FAILED = 0x4000,ASC_RET_EXTENDED_ERROR = 0x8000,ASC_RET_STREAM = 0x10000,ASC_RET_INTEGRITY = 0x20000,ASC_RET_LICENSING = 0x40000,ASC_RET_IDENTIFY = 0x80000,ASC_RET_NULL_SESSION = 0x100000,ASC_RET_ALLOW_NON_USER_LOGONS = 0x200000,ASC_RET_ALLOW_CONTEXT_REPLAY = 0x400000,ASC_RET_FRAGMENT_ONLY = 0x800000,ASC_RET_NO_TOKEN = 0x1000000,ASC_RET_NO_ADDITIONAL_TOKEN = 0x2000000,};
enum MACRO_ATA {ATA_DEVICE_SET_PASSWORD_MASTER = 0x1,ATA_DEVICE_SET_PASSWORD_USER = 0x0,};
enum MACRO_ATM {ATM_NSAP = 0,ATM_E164 = 1,ATM_MAC_ADDRESS_LENGTH = 6,ATM_ADDRESS_LENGTH = 20,ATM_ADDR_BLANK_CHAR = 32,ATM_ADDR_PUNCTUATION_CHAR = 46,ATM_ADDR_E164_START_CHAR = 43,};
enum MACRO_AUX {AUX_KLIB_MODULE_PATH_LEN = 256,};
enum MACRO_AVC {AVC_SUBUNITINFO_BYTES = 32,};
enum MACRO_BAD {BAD_POOL_HEADER = 0x19,};
enum MACRO_BDA {BDA_PLP_ID_NOT_SET = -1,};
enum MACRO_BGI {BGI_DETECTED_VIOLATION = 0xB1,};
enum MACRO_BIT {BIT_7 = 7,BIT_6 = 6,BIT_5 = 5,BIT_4 = 4,BIT_3 = 3,BIT_2 = 2,BIT_1 = 1,BIT_0 = 0,BIT_7_SET = 128,BIT_6_SET = 64,BIT_5_SET = 32,BIT_4_SET = 16,BIT_3_SET = 8,BIT_2_SET = 4,BIT_1_SET = 2,BIT_0_SET = 1,};
enum MACRO_BOT {NOT_FROM_BOT = 0,FROM_BOT = 1,};
enum MACRO_BTH {BTH_MAJORVERSION = 2,BTH_MINORVERSION = 1,};
enum MACRO_BUS {BUS_INTERFACE_REFERENCE_VERSION = 0x100,};
enum MACRO_CAP {CAP_RAW_MODE = 0x1,CAP_MPX_MODE = 0x2,CAP_UNICODE = 0x4,CAP_LARGE_FILES = 0x8,CAP_NT_SMBS = 0x10,CAP_RPC_REMOTE_APIS = 0x20,CAP_NT_STATUS = 0x40,CAP_LEVEL_II_OPLOCKS = 0x80,CAP_LOCK_AND_READ = 0x100,CAP_NT_FIND = 0x200,CAP_DFS = 0x1000,CAP_INFOLEVEL_PASSTHRU = 0x2000,CAP_LARGE_READX = 0x4000,CAP_LARGE_WRITEX = 0x8000,};
enum MACRO_CAT {CAT_E_FIRST = 0x80040160,CAT_E_LAST = 0x80040161,CAT_E_CATIDNOEXIST = 0x80040160,CAT_E_NODESCRIPTION = 0x80040161,};
enum MACRO_CDB {CDB_RETURN_ON_COMPLETION = 0,CDB_RETURN_IMMEDIATE = 1,CDB_FORCE_MEDIA_ACCESS = 8,};
enum MACRO_CDE {CDE_USE_SUBSYSTEM_IDS = 0x1,CDE_USE_REVISION = 0x2,};
enum MACRO_CDF {CDF_DVCR_525_60_BLOCK_PERIOD = 3280,CDF_DVCR_525_60_BLOCK_PERIOD_REMAINDER = 76800000,CDF_DVCR_625_50_BLOCK_PERIOD = 3276,CDF_DVCR_625_50_BLOCK_PERIOD_REMAINDER = 800000000,};
enum MACRO_CFG {CFG_MTU = 0x1,CFG_FLUSHTO = 0x2,CFG_QOS = 0x4,CFG_EXTRA = 0x8,CFG_LINKTO = 0x10,CFG_QOS_LOCAL = 0x20,CFG_ENHANCED = 0x40,CFG_FCS = 0x80,};
enum MACRO_CID {CID_HANDLE_CREATION = 0x16,CID_HANDLE_DELETION = 0x17,};
enum MACRO_CIP {CIP_VALIDATE_FIRST_SOURCE = 0x1,CIP_VALIDATE_ALL_SOURCE = 0x2,CIP_STRIP_SOURCE_HEADER = 0x4,CIP_USE_SOURCE_HEADER_TIMESTAMP = 0x8,CIP_DV_STYLE_SYT = 0x10,CIP_AUDIO_STYLE_SYT = 0x20,CIP_RESET_FRAME_ON_DISCONTINUITY = 0x40,CIP_DTCP_ISOCH_HEADER = 0x80,CIP_STATUS_SUCCESS = 0x0,CIP_STATUS_CORRUPT_FRAME = 0x1,CIP_STATUS_FIRST_FRAME = 0x2,CIP_STATUS_EVEN_BIT = 0x10,CIP_STATUS_ODD_BIT = 0x20,CIP_STATUS_EMI_COPY_FREE = 0x100,CIP_STATUS_EMI_NO_MORE_COPIES = 0x200,CIP_STATUS_EMI_COPY_ONE_GENERATION = 0x400,CIP_STATUS_EMI_COPY_NEVER = 0x800,CIP_TALK_USE_SPH_TIMESTAMP = 0x1,CIP_TALK_DOUBLE_BUFFER = 0x2,CIP_TALK_BLOCKING_MODE = 0x4,};
enum MACRO_CLK {CLK_TCK = 1000,};
enum MACRO_CMD {ATAPI_ID_CMD = 0xA1,ID_CMD = 0xEC,SMART_CMD = 0xB0,};
enum MACRO_CMP {CMP_PLUG_STATE_IDLE = 0,CMP_PLUG_STATE_READY = 1,CMP_PLUG_STATE_SUSPENDED = 2,CMP_PLUG_STATE_ACTIVE = 3,CMP_SPEED_S100 = 0,CMP_SPEED_S200 = 1,CMP_SPEED_S400 = 2,};
enum MACRO_COD {COD_FORMAT_MASK = 0x3,COD_MINOR_MASK = 0xFC,COD_MAJOR_MASK = 0x1F00,COD_SERVICE_MASK = 0xFFE000,COD_VERSION = 0x0,COD_SERVICE_LIMITED = 0x1,COD_SERVICE_POSITIONING = 0x8,COD_SERVICE_NETWORKING = 0x10,COD_SERVICE_RENDERING = 0x20,COD_SERVICE_CAPTURING = 0x40,COD_SERVICE_OBJECT_XFER = 0x80,COD_SERVICE_AUDIO = 0x100,COD_SERVICE_TELEPHONY = 0x200,COD_SERVICE_INFORMATION = 0x400,COD_SERVICE_VALID_MASK = 0x7F9,COD_SERVICE_MAX_COUNT = 0x9,COD_MAJOR_MISCELLANEOUS = 0x0,COD_MAJOR_COMPUTER = 0x1,COD_MAJOR_PHONE = 0x2,COD_MAJOR_LAN_ACCESS = 0x3,COD_MAJOR_AUDIO = 0x4,COD_MAJOR_PERIPHERAL = 0x5,COD_MAJOR_IMAGING = 0x6,COD_MAJOR_WEARABLE = 0x7,COD_MAJOR_TOY = 0x8,COD_MAJOR_HEALTH = 0x9,COD_MAJOR_UNCLASSIFIED = 0x1F,COD_COMPUTER_MINOR_UNCLASSIFIED = 0x0,COD_COMPUTER_MINOR_DESKTOP = 0x1,COD_COMPUTER_MINOR_SERVER = 0x2,COD_COMPUTER_MINOR_LAPTOP = 0x3,COD_COMPUTER_MINOR_HANDHELD = 0x4,COD_COMPUTER_MINOR_PALM = 0x5,COD_COMPUTER_MINOR_WEARABLE = 0x6,COD_PHONE_MINOR_UNCLASSIFIED = 0x0,COD_PHONE_MINOR_CELLULAR = 0x1,COD_PHONE_MINOR_CORDLESS = 0x2,COD_PHONE_MINOR_SMART = 0x3,COD_PHONE_MINOR_WIRED_MODEM = 0x4,COD_AUDIO_MINOR_UNCLASSIFIED = 0x0,COD_AUDIO_MINOR_HEADSET = 0x1,COD_AUDIO_MINOR_HANDS_FREE = 0x2,COD_AUDIO_MINOR_HEADSET_HANDS_FREE = 0x3,COD_AUDIO_MINOR_MICROPHONE = 0x4,COD_AUDIO_MINOR_LOUDSPEAKER = 0x5,COD_AUDIO_MINOR_HEADPHONES = 0x6,COD_AUDIO_MINOR_PORTABLE_AUDIO = 0x7,COD_AUDIO_MINOR_CAR_AUDIO = 0x8,COD_AUDIO_MINOR_SET_TOP_BOX = 0x9,COD_AUDIO_MINOR_HIFI_AUDIO = 0xA,COD_AUDIO_MINOR_VCR = 0xB,COD_AUDIO_MINOR_VIDEO_CAMERA = 0xC,COD_AUDIO_MINOR_CAMCORDER = 0xD,COD_AUDIO_MINOR_VIDEO_MONITOR = 0xE,COD_AUDIO_MINOR_VIDEO_DISPLAY_LOUDSPEAKER = 0xF,COD_AUDIO_MINOR_VIDEO_DISPLAY_CONFERENCING = 0x10,COD_AUDIO_MINOR_GAMING_TOY = 0x12,COD_PERIPHERAL_MINOR_KEYBOARD_MASK = 0x10,COD_PERIPHERAL_MINOR_POINTER_MASK = 0x20,COD_PERIPHERAL_MINOR_NO_CATEGORY = 0x0,COD_PERIPHERAL_MINOR_JOYSTICK = 0x1,COD_PERIPHERAL_MINOR_GAMEPAD = 0x2,COD_PERIPHERAL_MINOR_REMOTE_CONTROL = 0x3,COD_PERIPHERAL_MINOR_SENSING = 0x4,COD_IMAGING_MINOR_DISPLAY_MASK = 0x4,COD_IMAGING_MINOR_CAMERA_MASK = 0x8,COD_IMAGING_MINOR_SCANNER_MASK = 0x10,COD_IMAGING_MINOR_PRINTER_MASK = 0x20,COD_WEARABLE_MINOR_WRIST_WATCH = 0x1,COD_WEARABLE_MINOR_PAGER = 0x2,COD_WEARABLE_MINOR_JACKET = 0x3,COD_WEARABLE_MINOR_HELMET = 0x4,COD_WEARABLE_MINOR_GLASSES = 0x5,COD_TOY_MINOR_ROBOT = 0x1,COD_TOY_MINOR_VEHICLE = 0x2,COD_TOY_MINOR_DOLL_ACTION_FIGURE = 0x3,COD_TOY_MINOR_CONTROLLER = 0x4,COD_TOY_MINOR_GAME = 0x5,COD_HEALTH_MINOR_BLOOD_PRESSURE_MONITOR = 0x1,COD_HEALTH_MINOR_THERMOMETER = 0x2,COD_HEALTH_MINOR_WEIGHING_SCALE = 0x3,COD_HEALTH_MINOR_GLUCOSE_METER = 0x4,COD_HEALTH_MINOR_PULSE_OXIMETER = 0x5,COD_HEALTH_MINOR_HEART_PULSE_MONITOR = 0x6,COD_HEALTH_MINOR_HEALTH_DATA_DISPLAY = 0x7,COD_HEALTH_MINOR_STEP_COUNTER = 0x8,COD_LAN_ACCESS_BIT_OFFSET = 0x5,COD_LAN_MINOR_MASK = 0x1C,COD_LAN_ACCESS_MASK = 0xE0,COD_LAN_MINOR_UNCLASSIFIED = 0x0,COD_LAN_ACCESS_0_USED = 0x0,COD_LAN_ACCESS_17_USED = 0x1,COD_LAN_ACCESS_33_USED = 0x2,COD_LAN_ACCESS_50_USED = 0x3,COD_LAN_ACCESS_67_USED = 0x4,COD_LAN_ACCESS_83_USED = 0x5,COD_LAN_ACCESS_99_USED = 0x6,COD_LAN_ACCESS_FULL = 0x7,};
enum MACRO_CPP {CPP_ASSIGN_ADDR = 0x0,CPP_SELECT = 0xE0,CPP_DESELECT = 0x30,CPP_QUERY_INT = 0x8,CPP_DISABLE_INT = 0x40,CPP_ENABLE_INT = 0x48,CPP_CLEAR_INT_LAT = 0x50,CPP_SET_INT_LAT = 0x58,CPP_COMMAND_FILTER = 0xF8,};
enum MACRO_CPU {CPU_SW_SLP = 13,CPU_SW_SLP_CAP = 8192,};
enum MACRO_CRM {CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY = 0x1,CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO = 0x2,CRM_PROTOCOL_MAXIMUM_OPTION = 0x3,};
enum MACRO_CSV {CSV_MGMTLOCK_CHECK_VOLUME_REDIRECTED = 0x1,CSV_INVALID_DEVICE_NUMBER = 0xFFFFFFFF,};
enum MACRO_D3D {D3D_UMD_INTERFACE_VERSION_VISTA = 0xC,D3D_UMD_INTERFACE_VERSION_WIN7 = 0x2003,D3D_UMD_INTERFACE_VERSION_WIN8_M3 = 0x3001,D3D_UMD_INTERFACE_VERSION_WIN8_CP = 0x3002,D3D_UMD_INTERFACE_VERSION_WIN8_RC = 0x3003,D3D_UMD_INTERFACE_VERSION_WIN8 = 0x3004,D3D_UMD_INTERFACE_VERSION = 0x3004,};
enum MACRO_DBG {DBG_EXCEPTION_HANDLED = 0x10001,DBG_CONTINUE = 0x10002,};
enum MACRO_DBL {DBL_DIG = 15,DBL_MANT_DIG = 53,DBL_MAX_10_EXP = 308,DBL_MAX_EXP = 1024,DBL_MIN_10_EXP = -307,DBL_MIN_EXP = -1021,};
enum MACRO_DCK {DCK_CAP_BIT = 9,DCK_CAP = 512,};
enum MACRO_DCR {DCR_RESERVED = 0xC0,DCR_DIRECTION = 0x20,DCR_ACKINT_ENABLED = 0x10,DCR_SELECT_IN = 0x8,DCR_NOT_INIT = 0x4,DCR_AUTOFEED = 0x2,DCR_STROBE = 0x1,DCR_NOT_1284_ACTIVE = 0x8,DCR_ASTRB = 0x8,DCR_NOT_REVERSE_REQUEST = 0x4,DCR_NULL = 0x4,DCR_NOT_HOST_BUSY = 0x2,DCR_NOT_HOST_ACK = 0x2,DCR_DSTRB = 0x2,DCR_NOT_HOST_CLK = 0x1,DCR_WRITE = 0x1,};
enum MACRO_DEV {DEV_WRITE_CACHE = 0x1,DEV_USE_SCSI1 = 0x2,DEV_SAFE_START_UNIT = 0x4,DEV_NO_12BYTE_CDB = 0x8,DEV_POWER_PROTECTED = 0x10,DEV_USE_16BYTE_CDB = 0x20,};
enum MACRO_DFS {DFS_FILE_SYSTEM = 0x82,OFS_FILE_SYSTEM = 0x83,};
enum MACRO_DIR {DIR_READ = 1,DIR_WRITE = 0,};
enum MACRO_DMA {DMA_ADAPTER_INFO_VERSION1 = 1,DMA_TRANSFER_INFO_VERSION1 = 1,};
enum MACRO_DOS {DOS_STAR = 60,DOS_QM = 62,DOS_DOT = 34,};
enum MACRO_DPC {DPC_WATCHDOG_VIOLATION = 0x133,};
enum MACRO_DSM {DSM_CONTROLLER_ACTIVE = 0x1,DSM_CONTROLLER_STANDBY = 0x2,DSM_CONTROLLER_FAILED = 0x3,DSM_CONTROLLER_NO_CNTRL = 0x4,DSM_CNTRL_FLAGS_ALLOCATE = 0x1,DSM_CNTRL_FLAGS_CHECK_STATE = 0x2,DSM_CNTRL_FLAGS_RESERVED = 0xFFFFFFFC,DSM_FATAL_ERROR = 0x80000000,DSM_RETRY_DONT_DECREMENT = 0x8000,DSM_ADMIN_FO = 0x40000000,DSM_FATAL_ERROR_OEM_MASK = 0xFFFF,DSM_FATAL_ERROR_RESERVED = 0x3FFF0000,DSM_MOVE_PERMANENT = 0x1,DSM_MOVE_PENDING_REMOVAL = 0x2,DSM_MOVE_OEM_MASK = 0xFF00,DSM_MOVE_RESERVED = 0x7FFF0000,DSM_MOVE_ADMIN_REQUEST = 0x80000000,DSM_BROADCAST = 0x1,DSM_WILL_HANDLE = 0x2,DSM_PATH_SET = 0x3,DSM_ERROR = 0x4,};
enum MACRO_DSR {DSR_NOT_BUSY = 0x80,DSR_NOT_ACK = 0x40,DSR_PERROR = 0x20,DSR_SELECT = 0x10,DSR_NOT_FAULT = 0x8,DSR_NOT_PTR_BUSY = 0x80,DSR_NOT_PERIPH_ACK = 0x80,DSR_WAIT = 0x80,DSR_PTR_CLK = 0x40,DSR_PERIPH_CLK = 0x40,DSR_INTR = 0x40,DSR_ACK_DATA_REQ = 0x20,DSR_NOT_ACK_REVERSE = 0x20,DSR_XFLAG = 0x10,DSR_NOT_DATA_AVAIL = 0x8,DSR_NOT_PERIPH_REQUEST = 0x8,};
enum MACRO_DTV {DTV_CardStatus_Inserted = 0,DTV_CardStatus_Removed = 1,DTV_CardStatus_Error = 2,DTV_CardStatus_FirmwareDownload = 3,};
enum MACRO_DVD {DVD_FORMAT_LEAD_IN = 0x0,DVD_FORMAT_COPYRIGHT = 0x1,DVD_FORMAT_DISK_KEY = 0x2,DVD_FORMAT_BCA = 0x3,DVD_FORMAT_MANUFACTURING = 0x4,DVD_REPORT_AGID = 0x0,DVD_CHALLENGE_KEY = 0x1,DVD_KEY_1 = 0x2,DVD_KEY_2 = 0x3,DVD_TITLE_KEY = 0x4,DVD_REPORT_ASF = 0x5,DVD_INVALIDATE_AGID = 0x3F,};
enum MACRO_DWM {DWM_E_COMPOSITIONDISABLED = 0x80263001,DWM_E_REMOTING_NOT_SUPPORTED = 0x80263002,DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE = 0x80263003,DWM_E_NOT_QUEUING_PRESENTS = 0x80263004,DWM_E_ADAPTER_NOT_FOUND = 0x80263005,DWM_S_GDI_REDIRECTION_SURFACE = 0x263005,DWM_E_TEXTURE_TOO_LARGE = 0x80263007,};
enum MACRO_EAS {EAS_E_POLICY_NOT_MANAGED_BY_OS = 0x80550001,EAS_E_POLICY_COMPLIANT_WITH_ACTIONS = 0x80550002,EAS_E_REQUESTED_POLICY_NOT_ENFORCEABLE = 0x80550003,EAS_E_CURRENT_USER_HAS_BLANK_PASSWORD = 0x80550004,EAS_E_REQUESTED_POLICY_PASSWORD_EXPIRATION_INCOMPATIBLE = 0x80550005,EAS_E_USER_CANNOT_CHANGE_PASSWORD = 0x80550006,EAS_E_ADMINS_HAVE_BLANK_PASSWORD = 0x80550007,EAS_E_ADMINS_CANNOT_CHANGE_PASSWORD = 0x80550008,EAS_E_LOCAL_CONTROLLED_USERS_CANNOT_CHANGE_PASSWORD = 0x80550009,EAS_E_PASSWORD_POLICY_NOT_ENFORCEABLE_FOR_CONNECTED_ADMINS = 0x8055000A,EAS_E_CONNECTED_ADMINS_NEED_TO_CHANGE_PASSWORD = 0x8055000B,EAS_E_PASSWORD_POLICY_NOT_ENFORCEABLE_FOR_CURRENT_CONNECTED_USER = 0x8055000C,EAS_E_CURRENT_CONNECTED_USER_NEED_TO_CHANGE_PASSWORD = 0x8055000D,};
enum MACRO_ECP {ECP_HW_NOIRQ = 0x100,ECP_HW_IRQ = 0x200,ECP_SW = 0x400,ECP_ANY = 0x780,};
enum MACRO_ECR {ECR_ERRINT_DISABLED = 0x10,ECR_DMA_ENABLED = 0x8,ECR_SVC_INT_DISABLED = 0x4,ECR_MODE_MASK = 0x1F,ECR_SPP_MODE = 0x0,ECR_BYTE_MODE = 0x20,ECR_BYTE_PIO_MODE = 0x34,ECR_FASTCENT_MODE = 0x40,ECR_ECP_MODE = 0x60,ECR_ECP_PIO_MODE = 0x74,ECR_EPP_MODE = 0x80,ECR_EPP_PIO_MODE = 0x94,ECR_RESERVED_MODE = 0x10,ECR_TEST_MODE = 0xC0,ECR_CONFIG_MODE = 0xE0,};
enum MACRO_END {END_OF_NT_EVALUATION_PERIOD = 0x98,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_EPP {EPP_HW = 0x20,EPP_SW = 0x40,EPP_ANY = 0x60,};
enum MACRO_EPT {EPT_NT_INVALID_ENTRY = 0xC0020034,EPT_NT_CANT_PERFORM_OP = 0xC0020035,EPT_NT_NOT_REGISTERED = 0xC0020036,};
enum MACRO_ETH {ETH_LENGTH_OF_HEADER = 14,ETH_LENGTH_OF_VLAN_HEADER = 4,ETH_LENGTH_OF_SNAP_HEADER = 8,};
enum MACRO_EXT {EXT_TCODE_RESERVED0 = 0,EXT_TCODE_MASK_SWAP = 1,EXT_TCODE_COMPARE_SWAP = 2,EXT_TCODE_FETCH_ADD = 3,EXT_TCODE_LITTLE_ADD = 4,EXT_TCODE_BOUNDED_ADD = 5,EXT_TCODE_WRAP_ADD = 6,};
enum MACRO_FCB {FCB_STATE_SRVOPEN_USED = 0x80000000,FCB_STATE_FOBX_USED = 0x40000000,FCB_STATE_ADDEDBACKSLASH = 0x20000000,FCB_STATE_NAME_ALREADY_REMOVED = 0x10000000,FCB_STATE_WRITECACHING_ENABLED = 0x8000000,FCB_STATE_WRITEBUFFERING_ENABLED = 0x4000000,FCB_STATE_READCACHING_ENABLED = 0x2000000,FCB_STATE_READBUFFERING_ENABLED = 0x1000000,FCB_STATE_OPENSHARING_ENABLED = 0x800000,FCB_STATE_COLLAPSING_ENABLED = 0x400000,FCB_STATE_LOCK_BUFFERING_ENABLED = 0x200000,FCB_STATE_FILESIZECACHEING_ENABLED = 0x100000,FCB_STATE_FILETIMECACHEING_ENABLED = 0x80000,FCB_STATE_TIME_AND_SIZE_ALREADY_SET = 0x40000,FCB_STATE_SPECIAL_PATH = 0x20000,FCB_STATE_FILE_IS_SHADOWED = 0x10000,FCB_STATE_FILE_IS_DISK_COMPRESSED = 0x8000,FCB_STATE_FILE_IS_BUF_COMPRESSED = 0x4000,FCB_STATE_BUFFERSTATE_CHANGING = 0x2000,FCB_STATE_FAKEFCB = 0x1000,FCB_STATE_DELAY_CLOSE = 0x800,FCB_STATE_READAHEAD_DEFERRED = 0x100,FCB_STATE_ORPHANED = 0x80,FCB_STATE_BUFFERING_STATE_CHANGE_PENDING = 0x40,FCB_STATE_TEMPORARY = 0x20,FCB_STATE_DISABLE_LOCAL_BUFFERING = 0x10,FCB_STATE_LWIO_ENABLED = 0x8,FCB_STATE_PAGING_FILE = 0x4,FCB_STATE_TRUNCATE_ON_CLOSE = 0x2,FCB_STATE_DELETE_ON_CLOSE = 0x1,FCB_STATE_BUFFERING_STATE_MASK = 0xFF80000,};
enum MACRO_FEA {FEA_NEEDEA = 0x80,};
enum MACRO_FLT {FLT_DIG = 6,FLT_GUARD = 0,FLT_MANT_DIG = 24,FLT_MAX_10_EXP = 38,FLT_MAX_EXP = 128,FLT_MIN_10_EXP = -37,FLT_MIN_EXP = -125,FLT_NORMALIZE = 0,FLT_RADIX = 2,FLT_ROUNDS = 1,};
enum MACRO_FPE {FPE_INVALID = 129,FPE_DENORMAL = 130,FPE_ZERODIVIDE = 131,FPE_OVERFLOW = 132,FPE_UNDERFLOW = 133,FPE_INEXACT = 134,FPE_UNEMULATED = 135,FPE_SQRTNEG = 136,FPE_STACKOVERFLOW = 138,FPE_STACKUNDERFLOW = 139,FPE_EXPLICITGEN = 140,};
enum MACRO_FVE {FVE_E_LOCKED_VOLUME = 0x80310000,FVE_E_NOT_ENCRYPTED = 0x80310001,FVE_E_NO_TPM_BIOS = 0x80310002,FVE_E_NO_MBR_METRIC = 0x80310003,FVE_E_NO_BOOTSECTOR_METRIC = 0x80310004,FVE_E_NO_BOOTMGR_METRIC = 0x80310005,FVE_E_WRONG_BOOTMGR = 0x80310006,FVE_E_SECURE_KEY_REQUIRED = 0x80310007,FVE_E_NOT_ACTIVATED = 0x80310008,FVE_E_ACTION_NOT_ALLOWED = 0x80310009,FVE_E_AD_SCHEMA_NOT_INSTALLED = 0x8031000A,FVE_E_AD_INVALID_DATATYPE = 0x8031000B,FVE_E_AD_INVALID_DATASIZE = 0x8031000C,FVE_E_AD_NO_VALUES = 0x8031000D,FVE_E_AD_ATTR_NOT_SET = 0x8031000E,FVE_E_AD_GUID_NOT_FOUND = 0x8031000F,FVE_E_BAD_INFORMATION = 0x80310010,FVE_E_TOO_SMALL = 0x80310011,FVE_E_SYSTEM_VOLUME = 0x80310012,FVE_E_FAILED_WRONG_FS = 0x80310013,FVE_E_BAD_PARTITION_SIZE = 0x80310014,FVE_E_NOT_SUPPORTED = 0x80310015,FVE_E_BAD_DATA = 0x80310016,FVE_E_VOLUME_NOT_BOUND = 0x80310017,FVE_E_TPM_NOT_OWNED = 0x80310018,FVE_E_NOT_DATA_VOLUME = 0x80310019,FVE_E_AD_INSUFFICIENT_BUFFER = 0x8031001A,FVE_E_CONV_READ = 0x8031001B,FVE_E_CONV_WRITE = 0x8031001C,FVE_E_KEY_REQUIRED = 0x8031001D,FVE_E_CLUSTERING_NOT_SUPPORTED = 0x8031001E,FVE_E_VOLUME_BOUND_ALREADY = 0x8031001F,FVE_E_OS_NOT_PROTECTED = 0x80310020,FVE_E_PROTECTION_DISABLED = 0x80310021,FVE_E_RECOVERY_KEY_REQUIRED = 0x80310022,FVE_E_FOREIGN_VOLUME = 0x80310023,FVE_E_OVERLAPPED_UPDATE = 0x80310024,FVE_E_TPM_SRK_AUTH_NOT_ZERO = 0x80310025,FVE_E_FAILED_SECTOR_SIZE = 0x80310026,FVE_E_FAILED_AUTHENTICATION = 0x80310027,FVE_E_NOT_OS_VOLUME = 0x80310028,FVE_E_AUTOUNLOCK_ENABLED = 0x80310029,FVE_E_WRONG_BOOTSECTOR = 0x8031002A,FVE_E_WRONG_SYSTEM_FS = 0x8031002B,FVE_E_POLICY_PASSWORD_REQUIRED = 0x8031002C,FVE_E_CANNOT_SET_FVEK_ENCRYPTED = 0x8031002D,FVE_E_CANNOT_ENCRYPT_NO_KEY = 0x8031002E,FVE_E_BOOTABLE_CDDVD = 0x80310030,FVE_E_PROTECTOR_EXISTS = 0x80310031,FVE_E_RELATIVE_PATH = 0x80310032,FVE_E_PROTECTOR_NOT_FOUND = 0x80310033,FVE_E_INVALID_KEY_FORMAT = 0x80310034,FVE_E_INVALID_PASSWORD_FORMAT = 0x80310035,FVE_E_FIPS_RNG_CHECK_FAILED = 0x80310036,FVE_E_FIPS_PREVENTS_RECOVERY_PASSWORD = 0x80310037,FVE_E_FIPS_PREVENTS_EXTERNAL_KEY_EXPORT = 0x80310038,FVE_E_NOT_DECRYPTED = 0x80310039,FVE_E_INVALID_PROTECTOR_TYPE = 0x8031003A,FVE_E_NO_PROTECTORS_TO_TEST = 0x8031003B,FVE_E_KEYFILE_NOT_FOUND = 0x8031003C,FVE_E_KEYFILE_INVALID = 0x8031003D,FVE_E_KEYFILE_NO_VMK = 0x8031003E,FVE_E_TPM_DISABLED = 0x8031003F,FVE_E_NOT_ALLOWED_IN_SAFE_MODE = 0x80310040,FVE_E_TPM_INVALID_PCR = 0x80310041,FVE_E_TPM_NO_VMK = 0x80310042,FVE_E_PIN_INVALID = 0x80310043,FVE_E_AUTH_INVALID_APPLICATION = 0x80310044,FVE_E_AUTH_INVALID_CONFIG = 0x80310045,FVE_E_FIPS_DISABLE_PROTECTION_NOT_ALLOWED = 0x80310046,FVE_E_FS_NOT_EXTENDED = 0x80310047,FVE_E_FIRMWARE_TYPE_NOT_SUPPORTED = 0x80310048,FVE_E_NO_LICENSE = 0x80310049,FVE_E_NOT_ON_STACK = 0x8031004A,FVE_E_FS_MOUNTED = 0x8031004B,FVE_E_TOKEN_NOT_IMPERSONATED = 0x8031004C,FVE_E_DRY_RUN_FAILED = 0x8031004D,FVE_E_REBOOT_REQUIRED = 0x8031004E,FVE_E_DEBUGGER_ENABLED = 0x8031004F,FVE_E_RAW_ACCESS = 0x80310050,FVE_E_RAW_BLOCKED = 0x80310051,FVE_E_BCD_APPLICATIONS_PATH_INCORRECT = 0x80310052,FVE_E_NOT_ALLOWED_IN_VERSION = 0x80310053,FVE_E_NO_AUTOUNLOCK_MASTER_KEY = 0x80310054,FVE_E_MOR_FAILED = 0x80310055,FVE_E_HIDDEN_VOLUME = 0x80310056,FVE_E_TRANSIENT_STATE = 0x80310057,FVE_E_PUBKEY_NOT_ALLOWED = 0x80310058,FVE_E_VOLUME_HANDLE_OPEN = 0x80310059,FVE_E_NO_FEATURE_LICENSE = 0x8031005A,FVE_E_INVALID_STARTUP_OPTIONS = 0x8031005B,FVE_E_POLICY_RECOVERY_PASSWORD_NOT_ALLOWED = 0x8031005C,FVE_E_POLICY_RECOVERY_PASSWORD_REQUIRED = 0x8031005D,FVE_E_POLICY_RECOVERY_KEY_NOT_ALLOWED = 0x8031005E,FVE_E_POLICY_RECOVERY_KEY_REQUIRED = 0x8031005F,FVE_E_POLICY_STARTUP_PIN_NOT_ALLOWED = 0x80310060,FVE_E_POLICY_STARTUP_PIN_REQUIRED = 0x80310061,FVE_E_POLICY_STARTUP_KEY_NOT_ALLOWED = 0x80310062,FVE_E_POLICY_STARTUP_KEY_REQUIRED = 0x80310063,FVE_E_POLICY_STARTUP_PIN_KEY_NOT_ALLOWED = 0x80310064,FVE_E_POLICY_STARTUP_PIN_KEY_REQUIRED = 0x80310065,FVE_E_POLICY_STARTUP_TPM_NOT_ALLOWED = 0x80310066,FVE_E_POLICY_STARTUP_TPM_REQUIRED = 0x80310067,FVE_E_POLICY_INVALID_PIN_LENGTH = 0x80310068,FVE_E_KEY_PROTECTOR_NOT_SUPPORTED = 0x80310069,FVE_E_POLICY_PASSPHRASE_NOT_ALLOWED = 0x8031006A,FVE_E_POLICY_PASSPHRASE_REQUIRED = 0x8031006B,FVE_E_FIPS_PREVENTS_PASSPHRASE = 0x8031006C,FVE_E_OS_VOLUME_PASSPHRASE_NOT_ALLOWED = 0x8031006D,FVE_E_INVALID_BITLOCKER_OID = 0x8031006E,FVE_E_VOLUME_TOO_SMALL = 0x8031006F,FVE_E_DV_NOT_SUPPORTED_ON_FS = 0x80310070,FVE_E_DV_NOT_ALLOWED_BY_GP = 0x80310071,FVE_E_POLICY_USER_CERTIFICATE_NOT_ALLOWED = 0x80310072,FVE_E_POLICY_USER_CERTIFICATE_REQUIRED = 0x80310073,FVE_E_POLICY_USER_CERT_MUST_BE_HW = 0x80310074,FVE_E_POLICY_USER_CONFIGURE_FDV_AUTOUNLOCK_NOT_ALLOWED = 0x80310075,FVE_E_POLICY_USER_CONFIGURE_RDV_AUTOUNLOCK_NOT_ALLOWED = 0x80310076,FVE_E_POLICY_USER_CONFIGURE_RDV_NOT_ALLOWED = 0x80310077,FVE_E_POLICY_USER_ENABLE_RDV_NOT_ALLOWED = 0x80310078,FVE_E_POLICY_USER_DISABLE_RDV_NOT_ALLOWED = 0x80310079,FVE_E_POLICY_INVALID_PASSPHRASE_LENGTH = 0x80310080,FVE_E_POLICY_PASSPHRASE_TOO_SIMPLE = 0x80310081,FVE_E_RECOVERY_PARTITION = 0x80310082,FVE_E_POLICY_CONFLICT_FDV_RK_OFF_AUK_ON = 0x80310083,FVE_E_POLICY_CONFLICT_RDV_RK_OFF_AUK_ON = 0x80310084,FVE_E_NON_BITLOCKER_OID = 0x80310085,FVE_E_POLICY_PROHIBITS_SELFSIGNED = 0x80310086,FVE_E_POLICY_CONFLICT_RO_AND_STARTUP_KEY_REQUIRED = 0x80310087,FVE_E_CONV_RECOVERY_FAILED = 0x80310088,FVE_E_VIRTUALIZED_SPACE_TOO_BIG = 0x80310089,FVE_E_POLICY_CONFLICT_OSV_RP_OFF_ADB_ON = 0x80310090,FVE_E_POLICY_CONFLICT_FDV_RP_OFF_ADB_ON = 0x80310091,FVE_E_POLICY_CONFLICT_RDV_RP_OFF_ADB_ON = 0x80310092,FVE_E_NON_BITLOCKER_KU = 0x80310093,FVE_E_PRIVATEKEY_AUTH_FAILED = 0x80310094,FVE_E_REMOVAL_OF_DRA_FAILED = 0x80310095,FVE_E_OPERATION_NOT_SUPPORTED_ON_VISTA_VOLUME = 0x80310096,FVE_E_CANT_LOCK_AUTOUNLOCK_ENABLED_VOLUME = 0x80310097,FVE_E_FIPS_HASH_KDF_NOT_ALLOWED = 0x80310098,FVE_E_ENH_PIN_INVALID = 0x80310099,FVE_E_INVALID_PIN_CHARS = 0x8031009A,FVE_E_INVALID_DATUM_TYPE = 0x8031009B,FVE_E_EFI_ONLY = 0x8031009C,FVE_E_MULTIPLE_NKP_CERTS = 0x8031009D,FVE_E_REMOVAL_OF_NKP_FAILED = 0x8031009E,FVE_E_INVALID_NKP_CERT = 0x8031009F,FVE_E_NO_EXISTING_PIN = 0x803100A0,FVE_E_PROTECTOR_CHANGE_PIN_MISMATCH = 0x803100A1,FVE_E_PIN_PROTECTOR_CHANGE_BY_STD_USER_DISALLOWED = 0x803100A2,FVE_E_PROTECTOR_CHANGE_MAX_PIN_CHANGE_ATTEMPTS_REACHED = 0x803100A3,FVE_E_POLICY_PASSPHRASE_REQUIRES_ASCII = 0x803100A4,FVE_E_FULL_ENCRYPTION_NOT_ALLOWED_ON_TP_STORAGE = 0x803100A5,FVE_E_WIPE_NOT_ALLOWED_ON_TP_STORAGE = 0x803100A6,FVE_E_KEY_LENGTH_NOT_SUPPORTED_BY_EDRIVE = 0x803100A7,FVE_E_NO_EXISTING_PASSPHRASE = 0x803100A8,FVE_E_PROTECTOR_CHANGE_PASSPHRASE_MISMATCH = 0x803100A9,FVE_E_PASSPHRASE_TOO_LONG = 0x803100AA,FVE_E_NO_PASSPHRASE_WITH_TPM = 0x803100AB,FVE_E_NO_TPM_WITH_PASSPHRASE = 0x803100AC,FVE_E_NOT_ALLOWED_ON_CSV_STACK = 0x803100AD,FVE_E_NOT_ALLOWED_ON_CLUSTER = 0x803100AE,FVE_E_EDRIVE_NO_FAILOVER_TO_SW = 0x803100AF,FVE_E_EDRIVE_BAND_IN_USE = 0x803100B0,FVE_E_EDRIVE_DISALLOWED_BY_GP = 0x803100B1,FVE_E_EDRIVE_INCOMPATIBLE_VOLUME = 0x803100B2,FVE_E_NOT_ALLOWED_TO_UPGRADE_WHILE_CONVERTING = 0x803100B3,FVE_E_EDRIVE_DV_NOT_SUPPORTED = 0x803100B4,FVE_E_NO_PREBOOT_KEYBOARD_DETECTED = 0x803100B5,FVE_E_NO_PREBOOT_KEYBOARD_OR_WINRE_DETECTED = 0x803100B6,FVE_E_POLICY_REQUIRES_STARTUP_PIN_ON_TOUCH_DEVICE = 0x803100B7,FVE_E_POLICY_REQUIRES_RECOVERY_PASSWORD_ON_TOUCH_DEVICE = 0x803100B8,FVE_E_WIPE_CANCEL_NOT_APPLICABLE = 0x803100B9,FVE_E_SECUREBOOT_DISABLED = 0x803100BA,FVE_E_SECUREBOOT_CONFIGURATION_INVALID = 0x803100BB,FVE_E_EDRIVE_DRY_RUN_FAILED = 0x803100BC,FVE_E_SHADOW_COPY_PRESENT = 0x803100BD,FVE_E_POLICY_INVALID_ENHANCED_BCD_SETTINGS = 0x803100BE,FVE_E_EDRIVE_INCOMPATIBLE_FIRMWARE = 0x803100BF,FVE_E_PROTECTOR_CHANGE_MAX_PASSPHRASE_CHANGE_ATTEMPTS_REACHED = 0x803100C0,FVE_E_PASSPHRASE_PROTECTOR_CHANGE_BY_STD_USER_DISALLOWED = 0x803100C1,FVE_E_LIVEID_ACCOUNT_SUSPENDED = 0x803100C2,FVE_E_LIVEID_ACCOUNT_BLOCKED = 0x803100C3,FVE_E_NOT_PROVISIONED_ON_ALL_VOLUMES = 0x803100C4,FVE_E_DE_FIXED_DATA_NOT_SUPPORTED = 0x803100C5,FVE_E_DE_HARDWARE_NOT_COMPLIANT = 0x803100C6,FVE_E_DE_WINRE_NOT_CONFIGURED = 0x803100C7,FVE_E_DE_PROTECTION_SUSPENDED = 0x803100C8,FVE_E_DE_OS_VOLUME_NOT_PROTECTED = 0x803100C9,FVE_E_DE_DEVICE_LOCKEDOUT = 0x803100CA,FVE_E_DE_PROTECTION_NOT_YET_ENABLED = 0x803100CB,FVE_E_INVALID_PIN_CHARS_DETAILED = 0x803100CC,FVE_E_DEVICE_LOCKOUT_COUNTER_UNAVAILABLE = 0x803100CD,FVE_E_DEVICELOCKOUT_COUNTER_MISMATCH = 0x803100CE,FVE_E_BUFFER_TOO_LARGE = 0x803100CF,};
enum MACRO_FWP {FWP_E_CALLOUT_NOT_FOUND = 0x80320001,FWP_E_CONDITION_NOT_FOUND = 0x80320002,FWP_E_FILTER_NOT_FOUND = 0x80320003,FWP_E_LAYER_NOT_FOUND = 0x80320004,FWP_E_PROVIDER_NOT_FOUND = 0x80320005,FWP_E_PROVIDER_CONTEXT_NOT_FOUND = 0x80320006,FWP_E_SUBLAYER_NOT_FOUND = 0x80320007,FWP_E_NOT_FOUND = 0x80320008,FWP_E_ALREADY_EXISTS = 0x80320009,FWP_E_IN_USE = 0x8032000A,FWP_E_DYNAMIC_SESSION_IN_PROGRESS = 0x8032000B,FWP_E_WRONG_SESSION = 0x8032000C,FWP_E_NO_TXN_IN_PROGRESS = 0x8032000D,FWP_E_TXN_IN_PROGRESS = 0x8032000E,FWP_E_TXN_ABORTED = 0x8032000F,FWP_E_SESSION_ABORTED = 0x80320010,FWP_E_INCOMPATIBLE_TXN = 0x80320011,FWP_E_TIMEOUT = 0x80320012,FWP_E_NET_EVENTS_DISABLED = 0x80320013,FWP_E_INCOMPATIBLE_LAYER = 0x80320014,FWP_E_KM_CLIENTS_ONLY = 0x80320015,FWP_E_LIFETIME_MISMATCH = 0x80320016,FWP_E_BUILTIN_OBJECT = 0x80320017,FWP_E_TOO_MANY_CALLOUTS = 0x80320018,FWP_E_NOTIFICATION_DROPPED = 0x80320019,FWP_E_TRAFFIC_MISMATCH = 0x8032001A,FWP_E_INCOMPATIBLE_SA_STATE = 0x8032001B,FWP_E_NULL_POINTER = 0x8032001C,FWP_E_INVALID_ENUMERATOR = 0x8032001D,FWP_E_INVALID_FLAGS = 0x8032001E,FWP_E_INVALID_NET_MASK = 0x8032001F,FWP_E_INVALID_RANGE = 0x80320020,FWP_E_INVALID_INTERVAL = 0x80320021,FWP_E_ZERO_LENGTH_ARRAY = 0x80320022,FWP_E_NULL_DISPLAY_NAME = 0x80320023,FWP_E_INVALID_ACTION_TYPE = 0x80320024,FWP_E_INVALID_WEIGHT = 0x80320025,FWP_E_MATCH_TYPE_MISMATCH = 0x80320026,FWP_E_TYPE_MISMATCH = 0x80320027,FWP_E_OUT_OF_BOUNDS = 0x80320028,FWP_E_RESERVED = 0x80320029,FWP_E_DUPLICATE_CONDITION = 0x8032002A,FWP_E_DUPLICATE_KEYMOD = 0x8032002B,FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER = 0x8032002C,FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER = 0x8032002D,FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER = 0x8032002E,FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT = 0x8032002F,FWP_E_INCOMPATIBLE_AUTH_METHOD = 0x80320030,FWP_E_INCOMPATIBLE_DH_GROUP = 0x80320031,FWP_E_EM_NOT_SUPPORTED = 0x80320032,FWP_E_NEVER_MATCH = 0x80320033,FWP_E_PROVIDER_CONTEXT_MISMATCH = 0x80320034,FWP_E_INVALID_PARAMETER = 0x80320035,FWP_E_TOO_MANY_SUBLAYERS = 0x80320036,FWP_E_CALLOUT_NOTIFICATION_FAILED = 0x80320037,FWP_E_INVALID_AUTH_TRANSFORM = 0x80320038,FWP_E_INVALID_CIPHER_TRANSFORM = 0x80320039,FWP_E_INCOMPATIBLE_CIPHER_TRANSFORM = 0x8032003A,FWP_E_INVALID_TRANSFORM_COMBINATION = 0x8032003B,FWP_E_DUPLICATE_AUTH_METHOD = 0x8032003C,FWP_E_INVALID_TUNNEL_ENDPOINT = 0x8032003D,FWP_E_L2_DRIVER_NOT_READY = 0x8032003E,FWP_E_KEY_DICTATOR_ALREADY_REGISTERED = 0x8032003F,FWP_E_KEY_DICTATION_INVALID_KEYING_MATERIAL = 0x80320040,FWP_E_CONNECTIONS_DISABLED = 0x80320041,FWP_E_INVALID_DNS_NAME = 0x80320042,FWP_E_STILL_ON = 0x80320043,FWP_E_IKEEXT_NOT_RUNNING = 0x80320044,FWP_E_DROP_NOICMP = 0x80320104,};
enum MACRO_GCR {GCR_NTLM3_PARMS = 0x20,GCR_TARGET_INFO = 0x40,};
enum MACRO_GET {GET_HOST_UNIQUE_ID = 1,GET_HOST_CAPABILITIES = 2,GET_POWER_SUPPLIED = 3,GET_PHYS_ADDR_ROUTINE = 4,GET_HOST_CONFIG_ROM = 5,GET_HOST_CSR_CONTENTS = 6,GET_HOST_DMA_CAPABILITIES = 7,GET_HOST_DDI_VERSION = 8,};
enum MACRO_GPT {GPT_ATTRIBUTE_PLATFORM_REQUIRED = 0x1,GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER = 0x8000000000000000,GPT_BASIC_DATA_ATTRIBUTE_HIDDEN = 0x4000000000000000,GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY = 0x2000000000000000,GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY = 0x1000000000000000,};
enum MACRO_HAL {HAL_MEMORY_ALLOCATION = 0xAC,};
enum MACRO_HBA {HBA_VERSION = 2,HBA_STATUS_OK = 0,HBA_STATUS_ERROR = 1,HBA_STATUS_ERROR_NOT_SUPPORTED = 2,HBA_STATUS_ERROR_INVALID_HANDLE = 3,HBA_STATUS_ERROR_ARG = 4,HBA_STATUS_ERROR_ILLEGAL_WWN = 5,HBA_STATUS_ERROR_ILLEGAL_INDEX = 6,HBA_STATUS_ERROR_MORE_DATA = 7,HBA_STATUS_ERROR_STALE_DATA = 8,HBA_STATUS_SCSI_CHECK_CONDITION = 9,HBA_STATUS_ERROR_BUSY = 10,HBA_STATUS_ERROR_TRY_AGAIN = 11,HBA_STATUS_ERROR_UNAVAILABLE = 12,HBA_STATUS_ERROR_ELS_REJECT = 13,HBA_STATUS_ERROR_INVALID_LUN = 14,HBA_STATUS_ERROR_INCOMPATIBLE = 15,HBA_STATUS_ERROR_AMBIGUOUS_WWN = 16,HBA_STATUS_ERROR_LOCAL_BUS = 17,HBA_STATUS_ERROR_LOCAL_TARGET = 18,HBA_STATUS_ERROR_LOCAL_LUN = 19,HBA_STATUS_ERROR_LOCAL_SCSIID_BOUND = 20,HBA_STATUS_ERROR_TARGET_FCID = 21,HBA_STATUS_ERROR_TARGET_NODE_WWN = 22,HBA_STATUS_ERROR_TARGET_PORT_WWN = 23,HBA_STATUS_ERROR_TARGET_LUN = 24,HBA_STATUS_ERROR_TARGET_LUID = 25,HBA_STATUS_ERROR_NO_SUCH_BINDING = 26,HBA_STATUS_ERROR_NOT_A_TARGET = 27,HBA_STATUS_ERROR_UNSUPPORTED_FC4 = 28,HBA_STATUS_ERROR_INCAPABLE = 29,HBA_STATUS_ERROR_TARGET_BUSY = 30,HBA_STATUS_ERROR_NOT_LOADED = 31,HBA_STATUS_ERROR_ALREADY_LOADED = 32,HBA_STATUS_ERROR_ILLEGAL_FCID = 33,HBA_STATUS_ERROR_NOT_ASCSIDEVICE = 34,HBA_STATUS_ERROR_INVALID_PROTOCOL_TYPE = 35,HBA_STATUS_ERROR_BAD_EVENT_TYPE = 36,HBA_PORTTYPE_UNKNOWN = 1,HBA_PORTTYPE_OTHER = 2,HBA_PORTTYPE_NOTPRESENT = 3,HBA_PORTTYPE_NPORT = 5,HBA_PORTTYPE_NLPORT = 6,HBA_PORTTYPE_FLPORT = 7,HBA_PORTTYPE_FPORT = 8,HBA_PORTTYPE_EPORT = 9,HBA_PORTTYPE_GPORT = 10,HBA_PORTTYPE_LPORT = 20,HBA_PORTTYPE_PTP = 21,HBA_PORTTYPE_SASDEVICE = 30,HBA_PORTTYPE_SATADEVICE = 31,HBA_PORTTYPE_SASEXPANDER = 32,HBA_PORTSTATE_UNKNOWN = 1,HBA_PORTSTATE_ONLINE = 2,HBA_PORTSTATE_OFFLINE = 3,HBA_PORTSTATE_BYPASSED = 4,HBA_PORTSTATE_DIAGNOSTICS = 5,HBA_PORTSTATE_LINKDOWN = 6,HBA_PORTSTATE_ERROR = 7,HBA_PORTSTATE_LOOPBACK = 8,HBA_PORTSTATE_DEGRADED = 9,HBA_PORTSPEED_UNKNOWN = 0,HBA_PORTSPEED_1GBIT = 1,HBA_PORTSPEED_2GBIT = 2,HBA_PORTSPEED_10GBIT = 4,HBA_PORTSPEED_4GBIT = 8,HBA_FCSPEED_UNKNOWN = 0,HBA_FCPHYSPEED_8GBIT = 16,HBA_FCPHYSPEED_16GBIT = 32,HBA_PORTSPEED_NOT_NEGOTIATED = 32768,HBA_FCPHYTYPE_UNKNOWN = 1,HBA_FCPHYTYPE_OPTICAL = 2,HBA_FCPHYTYPE_COPPER = 4,HBA_SASSTATE_UNKNOWN = 0,HBA_SASSTATE_DISABLED = 1,HBA_SASSTATE_FAILED = 2,HBA_SASSTATE_SATASPINUP = 3,HBA_SASSTATE_SATAPORTSEL = 4,HBA_SASSPEED_1_5GBIT = 8,HBA_SASSPEED_3GBIT = 9,HBA_SASPORTPROTOCOL_SSP = 1,HBA_SASPORTPROTOCOL_STP = 2,HBA_SASPORTPROTOCOL_SMP = 4,HBA_SASPORTPROTOCOL_SATA = 8,HBA_CAN_BIND_TO_D_ID = 1,HBA_CAN_BIND_TO_WWPN = 2,HBA_CAN_BIND_TO_WWNN = 4,HBA_CAN_BIND_TO_LUID = 8,HBA_CAN_BIND_ANY_LUNS = 1024,HBA_CAN_BIND_TARGETS = 2048,HBA_CAN_BIND_AUTOMAP = 4096,HBA_CAN_BIND_CONFIGURED = 8192,HBA_BIND_TO_D_ID = 1,HBA_BIND_TO_WWPN = 2,HBA_BIND_TO_WWNN = 4,HBA_BIND_TO_LUID = 8,HBA_BIND_TARGETS = 2048,};
enum MACRO_HCD {HCD_GET_STATS_1 = 255,HCD_DIAGNOSTIC_MODE_ON = 256,HCD_DIAGNOSTIC_MODE_OFF = 257,HCD_GET_ROOT_HUB_NAME = 258,HCD_GET_DRIVERKEY_NAME = 265,HCD_GET_STATS_2 = 266,HCD_DISABLE_PORT = 268,HCD_ENABLE_PORT = 269,HCD_USER_REQUEST = 270,HCD_TRACE_READ_REQUEST = 275,};
enum MACRO_HCI {HCI_CONNECTION_TYPE_ACL = 1,HCI_CONNECTION_TYPE_SCO = 2,HCI_CONNECTION_TYPE_LE = 3,HCI_CONNNECTION_TYPE_ACL = 1,HCI_CONNNECTION_TYPE_SCO = 2,};
enum MACRO_HID {HID_USAGE_PAGE_UNDEFINED = 0x0,HID_USAGE_PAGE_GENERIC = 0x1,HID_USAGE_PAGE_SIMULATION = 0x2,HID_USAGE_PAGE_VR = 0x3,HID_USAGE_PAGE_SPORT = 0x4,HID_USAGE_PAGE_GAME = 0x5,HID_USAGE_PAGE_KEYBOARD = 0x7,HID_USAGE_PAGE_LED = 0x8,HID_USAGE_PAGE_BUTTON = 0x9,HID_USAGE_PAGE_ORDINAL = 0xA,HID_USAGE_PAGE_TELEPHONY = 0xB,HID_USAGE_PAGE_CONSUMER = 0xC,HID_USAGE_PAGE_DIGITIZER = 0xD,HID_USAGE_PAGE_UNICODE = 0x10,HID_USAGE_PAGE_ALPHANUMERIC = 0x14,HID_USAGE_PAGE_MICROSOFT_BLUETOOTH_HANDSFREE = 0xFFF3,HID_USAGE_GENERIC_POINTER = 0x1,HID_USAGE_GENERIC_MOUSE = 0x2,HID_USAGE_GENERIC_JOYSTICK = 0x4,HID_USAGE_GENERIC_GAMEPAD = 0x5,HID_USAGE_GENERIC_KEYBOARD = 0x6,HID_USAGE_GENERIC_KEYPAD = 0x7,HID_USAGE_GENERIC_SYSTEM_CTL = 0x80,HID_USAGE_GENERIC_X = 0x30,HID_USAGE_GENERIC_Y = 0x31,HID_USAGE_GENERIC_Z = 0x32,HID_USAGE_GENERIC_RX = 0x33,HID_USAGE_GENERIC_RY = 0x34,HID_USAGE_GENERIC_RZ = 0x35,HID_USAGE_GENERIC_SLIDER = 0x36,HID_USAGE_GENERIC_DIAL = 0x37,HID_USAGE_GENERIC_WHEEL = 0x38,HID_USAGE_GENERIC_HATSWITCH = 0x39,HID_USAGE_GENERIC_COUNTED_BUFFER = 0x3A,HID_USAGE_GENERIC_BYTE_COUNT = 0x3B,HID_USAGE_GENERIC_MOTION_WAKEUP = 0x3C,HID_USAGE_GENERIC_VX = 0x40,HID_USAGE_GENERIC_VY = 0x41,HID_USAGE_GENERIC_VZ = 0x42,HID_USAGE_GENERIC_VBRX = 0x43,HID_USAGE_GENERIC_VBRY = 0x44,HID_USAGE_GENERIC_VBRZ = 0x45,HID_USAGE_GENERIC_VNO = 0x46,HID_USAGE_GENERIC_SYSCTL_POWER = 0x81,HID_USAGE_GENERIC_SYSCTL_SLEEP = 0x82,HID_USAGE_GENERIC_SYSCTL_WAKE = 0x83,HID_USAGE_GENERIC_SYSCTL_CONTEXT_MENU = 0x84,HID_USAGE_GENERIC_SYSCTL_MAIN_MENU = 0x85,HID_USAGE_GENERIC_SYSCTL_APP_MENU = 0x86,HID_USAGE_GENERIC_SYSCTL_HELP_MENU = 0x87,HID_USAGE_GENERIC_SYSCTL_MENU_EXIT = 0x88,HID_USAGE_GENERIC_SYSCTL_MENU_SELECT = 0x89,HID_USAGE_GENERIC_SYSCTL_MENU_RIGHT = 0x8A,HID_USAGE_GENERIC_SYSCTL_MENU_LEFT = 0x8B,HID_USAGE_GENERIC_SYSCTL_MENU_UP = 0x8C,HID_USAGE_GENERIC_SYSCTL_MENU_DOWN = 0x8D,HID_USAGE_SIMULATION_RUDDER = 0xBA,HID_USAGE_SIMULATION_THROTTLE = 0xBB,HID_USAGE_KEYBOARD_NOEVENT = 0x0,HID_USAGE_KEYBOARD_ROLLOVER = 0x1,HID_USAGE_KEYBOARD_POSTFAIL = 0x2,HID_USAGE_KEYBOARD_UNDEFINED = 0x3,HID_USAGE_KEYBOARD_aA = 0x4,HID_USAGE_KEYBOARD_zZ = 0x1D,HID_USAGE_KEYBOARD_ONE = 0x1E,HID_USAGE_KEYBOARD_ZERO = 0x27,HID_USAGE_KEYBOARD_LCTRL = 0xE0,HID_USAGE_KEYBOARD_LSHFT = 0xE1,HID_USAGE_KEYBOARD_LALT = 0xE2,HID_USAGE_KEYBOARD_LGUI = 0xE3,HID_USAGE_KEYBOARD_RCTRL = 0xE4,HID_USAGE_KEYBOARD_RSHFT = 0xE5,HID_USAGE_KEYBOARD_RALT = 0xE6,HID_USAGE_KEYBOARD_RGUI = 0xE7,HID_USAGE_KEYBOARD_SCROLL_LOCK = 0x47,HID_USAGE_KEYBOARD_NUM_LOCK = 0x53,HID_USAGE_KEYBOARD_CAPS_LOCK = 0x39,HID_USAGE_KEYBOARD_F1 = 0x3A,HID_USAGE_KEYBOARD_F12 = 0x45,HID_USAGE_KEYBOARD_RETURN = 0x28,HID_USAGE_KEYBOARD_ESCAPE = 0x29,HID_USAGE_KEYBOARD_DELETE = 0x2A,HID_USAGE_KEYBOARD_PRINT_SCREEN = 0x46,HID_USAGE_LED_NUM_LOCK = 0x1,HID_USAGE_LED_CAPS_LOCK = 0x2,HID_USAGE_LED_SCROLL_LOCK = 0x3,HID_USAGE_LED_COMPOSE = 0x4,HID_USAGE_LED_KANA = 0x5,HID_USAGE_LED_POWER = 0x6,HID_USAGE_LED_SHIFT = 0x7,HID_USAGE_LED_DO_NOT_DISTURB = 0x8,HID_USAGE_LED_MUTE = 0x9,HID_USAGE_LED_TONE_ENABLE = 0xA,HID_USAGE_LED_HIGH_CUT_FILTER = 0xB,HID_USAGE_LED_LOW_CUT_FILTER = 0xC,HID_USAGE_LED_EQUALIZER_ENABLE = 0xD,HID_USAGE_LED_SOUND_FIELD_ON = 0xE,HID_USAGE_LED_SURROUND_FIELD_ON = 0xF,HID_USAGE_LED_REPEAT = 0x10,HID_USAGE_LED_STEREO = 0x11,HID_USAGE_LED_SAMPLING_RATE_DETECT = 0x12,HID_USAGE_LED_SPINNING = 0x13,HID_USAGE_LED_CAV = 0x14,HID_USAGE_LED_CLV = 0x15,HID_USAGE_LED_RECORDING_FORMAT_DET = 0x16,HID_USAGE_LED_OFF_HOOK = 0x17,HID_USAGE_LED_RING = 0x18,HID_USAGE_LED_MESSAGE_WAITING = 0x19,HID_USAGE_LED_DATA_MODE = 0x1A,HID_USAGE_LED_BATTERY_OPERATION = 0x1B,HID_USAGE_LED_BATTERY_OK = 0x1C,HID_USAGE_LED_BATTERY_LOW = 0x1D,HID_USAGE_LED_SPEAKER = 0x1E,HID_USAGE_LED_HEAD_SET = 0x1F,HID_USAGE_LED_HOLD = 0x20,HID_USAGE_LED_MICROPHONE = 0x21,HID_USAGE_LED_COVERAGE = 0x22,HID_USAGE_LED_NIGHT_MODE = 0x23,HID_USAGE_LED_SEND_CALLS = 0x24,HID_USAGE_LED_CALL_PICKUP = 0x25,HID_USAGE_LED_CONFERENCE = 0x26,HID_USAGE_LED_STAND_BY = 0x27,HID_USAGE_LED_CAMERA_ON = 0x28,HID_USAGE_LED_CAMERA_OFF = 0x29,HID_USAGE_LED_ON_LINE = 0x2A,HID_USAGE_LED_OFF_LINE = 0x2B,HID_USAGE_LED_BUSY = 0x2C,HID_USAGE_LED_READY = 0x2D,HID_USAGE_LED_PAPER_OUT = 0x2E,HID_USAGE_LED_PAPER_JAM = 0x2F,HID_USAGE_LED_REMOTE = 0x30,HID_USAGE_LED_FORWARD = 0x31,HID_USAGE_LED_REVERSE = 0x32,HID_USAGE_LED_STOP = 0x33,HID_USAGE_LED_REWIND = 0x34,HID_USAGE_LED_FAST_FORWARD = 0x35,HID_USAGE_LED_PLAY = 0x36,HID_USAGE_LED_PAUSE = 0x37,HID_USAGE_LED_RECORD = 0x38,HID_USAGE_LED_ERROR = 0x39,HID_USAGE_LED_SELECTED_INDICATOR = 0x3A,HID_USAGE_LED_IN_USE_INDICATOR = 0x3B,HID_USAGE_LED_MULTI_MODE_INDICATOR = 0x3C,HID_USAGE_LED_INDICATOR_ON = 0x3D,HID_USAGE_LED_INDICATOR_FLASH = 0x3E,HID_USAGE_LED_INDICATOR_SLOW_BLINK = 0x3F,HID_USAGE_LED_INDICATOR_FAST_BLINK = 0x40,HID_USAGE_LED_INDICATOR_OFF = 0x41,HID_USAGE_LED_FLASH_ON_TIME = 0x42,HID_USAGE_LED_SLOW_BLINK_ON_TIME = 0x43,HID_USAGE_LED_SLOW_BLINK_OFF_TIME = 0x44,HID_USAGE_LED_FAST_BLINK_ON_TIME = 0x45,HID_USAGE_LED_FAST_BLINK_OFF_TIME = 0x46,HID_USAGE_LED_INDICATOR_COLOR = 0x47,HID_USAGE_LED_RED = 0x48,HID_USAGE_LED_GREEN = 0x49,HID_USAGE_LED_AMBER = 0x4A,HID_USAGE_LED_GENERIC_INDICATOR = 0x4B,HID_USAGE_TELEPHONY_PHONE = 0x1,HID_USAGE_TELEPHONY_ANSWERING_MACHINE = 0x2,HID_USAGE_TELEPHONY_MESSAGE_CONTROLS = 0x3,HID_USAGE_TELEPHONY_HANDSET = 0x4,HID_USAGE_TELEPHONY_HEADSET = 0x5,HID_USAGE_TELEPHONY_KEYPAD = 0x6,HID_USAGE_TELEPHONY_PROGRAMMABLE_BUTTON = 0x7,HID_USAGE_TELEPHONY_REDIAL = 0x24,HID_USAGE_TELEPHONY_TRANSFER = 0x25,HID_USAGE_TELEPHONY_DROP = 0x26,HID_USAGE_TELEPHONY_LINE = 0x2A,HID_USAGE_TELEPHONY_RING_ENABLE = 0x2D,HID_USAGE_TELEPHONY_SEND = 0x31,HID_USAGE_TELEPHONY_KEYPAD_0 = 0xB0,HID_USAGE_TELEPHONY_KEYPAD_D = 0xBF,HID_USAGE_TELEPHONY_HOST_AVAILABLE = 0xF1,HID_USAGE_MS_BTH_HF_DIALNUMBER = 0x21,HID_USAGE_MS_BTH_HF_DIALMEMORY = 0x22,HID_USAGE_CONSUMERCTRL = 0x1,HID_USAGE_DIGITIZER_PEN = 0x2,HID_USAGE_DIGITIZER_IN_RANGE = 0x32,HID_USAGE_DIGITIZER_TIP_SWITCH = 0x42,HID_USAGE_DIGITIZER_BARREL_SWITCH = 0x44,};
enum MACRO_I2C {I2C_COMMAND_NULL = 0x0,I2C_COMMAND_READ = 0x1,I2C_COMMAND_WRITE = 0x2,I2C_COMMAND_STATUS = 0x4,I2C_COMMAND_RESET = 0x8,I2C_FLAGS_START = 0x1,I2C_FLAGS_STOP = 0x2,I2C_FLAGS_DATACHAINING = 0x4,I2C_FLAGS_ACK = 0x10,I2C_STATUS_NOERROR = 0x0,I2C_STATUS_BUSY = 0x1,I2C_STATUS_ERROR = 0x2,};
enum MACRO_IDE {IDE_LBA_MODE = 64,IDE_DC_DISABLE_INTERRUPTS = 2,IDE_DC_RESET_CONTROLLER = 4,IDE_DC_REENABLE_CONTROLLER = 0,IDE_STATUS_ERROR = 1,IDE_STATUS_INDEX = 2,IDE_STATUS_CORRECTED_ERROR = 4,IDE_STATUS_DRQ = 8,IDE_STATUS_DSC = 16,IDE_STATUS_DRDY = 64,IDE_STATUS_IDLE = 80,IDE_STATUS_BUSY = 128,IDE_ERROR_BAD_BLOCK = 128,IDE_ERROR_CRC_ERROR = 128,IDE_ERROR_DATA_ERROR = 64,IDE_ERROR_MEDIA_CHANGE = 32,IDE_ERROR_ID_NOT_FOUND = 16,IDE_ERROR_MEDIA_CHANGE_REQ = 8,IDE_ERROR_COMMAND_ABORTED = 4,IDE_ERROR_END_OF_MEDIA = 2,IDE_ERROR_ILLEGAL_LENGTH = 1,IDE_ERROR_ADDRESS_NOT_FOUND = 1,IDE_COMMAND_NOP = 0,IDE_COMMAND_DATA_SET_MANAGEMENT = 6,IDE_COMMAND_ATAPI_RESET = 8,IDE_COMMAND_READ = 32,IDE_COMMAND_READ_EXT = 36,IDE_COMMAND_READ_DMA_EXT = 37,IDE_COMMAND_READ_DMA_QUEUED_EXT = 38,IDE_COMMAND_READ_MULTIPLE_EXT = 41,IDE_COMMAND_READ_LOG_EXT = 47,IDE_COMMAND_WRITE = 48,IDE_COMMAND_WRITE_EXT = 52,IDE_COMMAND_WRITE_DMA_EXT = 53,IDE_COMMAND_WRITE_DMA_QUEUED_EXT = 54,IDE_COMMAND_WRITE_MULTIPLE_EXT = 57,IDE_COMMAND_WRITE_DMA_FUA_EXT = 61,IDE_COMMAND_WRITE_DMA_QUEUED_FUA_EXT = 62,IDE_COMMAND_WRITE_LOG_EXT = 63,IDE_COMMAND_VERIFY = 64,IDE_COMMAND_VERIFY_EXT = 66,IDE_COMMAND_WRITE_LOG_DMA_EXT = 87,IDE_COMMAND_TRUSTED_NON_DATA = 91,IDE_COMMAND_TRUSTED_RECEIVE = 92,IDE_COMMAND_TRUSTED_RECEIVE_DMA = 93,IDE_COMMAND_TRUSTED_SEND = 94,IDE_COMMAND_TRUSTED_SEND_DMA = 95,IDE_COMMAND_READ_FPDMA_QUEUED = 96,IDE_COMMAND_WRITE_FPDMA_QUEUED = 97,IDE_COMMAND_NCQ_NON_DATA = 99,IDE_COMMAND_SEND_FPDMA_QUEUED = 100,IDE_COMMAND_RECEIVE_FPDMA_QUEUED = 101,IDE_COMMAND_SET_DATE_AND_TIME = 119,IDE_COMMAND_EXECUTE_DEVICE_DIAGNOSTIC = 144,IDE_COMMAND_SET_DRIVE_PARAMETERS = 145,IDE_COMMAND_ATAPI_PACKET = 160,IDE_COMMAND_ATAPI_IDENTIFY = 161,IDE_COMMAND_SMART = 176,IDE_COMMAND_READ_LOG_DMA_EXT = 177,IDE_COMMAND_READ_MULTIPLE = 196,IDE_COMMAND_WRITE_MULTIPLE = 197,IDE_COMMAND_SET_MULTIPLE = 198,IDE_COMMAND_READ_DMA = 200,IDE_COMMAND_WRITE_DMA = 202,IDE_COMMAND_WRITE_DMA_QUEUED = 204,IDE_COMMAND_WRITE_MULTIPLE_FUA_EXT = 206,IDE_COMMAND_GET_MEDIA_STATUS = 218,IDE_COMMAND_DOOR_LOCK = 222,IDE_COMMAND_DOOR_UNLOCK = 223,IDE_COMMAND_STANDBY_IMMEDIATE = 224,IDE_COMMAND_IDLE_IMMEDIATE = 225,IDE_COMMAND_CHECK_POWER = 229,IDE_COMMAND_SLEEP = 230,IDE_COMMAND_FLUSH_CACHE = 231,IDE_COMMAND_FLUSH_CACHE_EXT = 234,IDE_COMMAND_IDENTIFY = 236,IDE_COMMAND_MEDIA_EJECT = 237,IDE_COMMAND_SET_FEATURE = 239,IDE_COMMAND_SECURITY_SET_PASSWORD = 241,IDE_COMMAND_SECURITY_UNLOCK = 242,IDE_COMMAND_SECURITY_ERASE_PREPARE = 243,IDE_COMMAND_SECURITY_ERASE_UNIT = 244,IDE_COMMAND_SECURITY_FREEZE_LOCK = 245,IDE_COMMAND_SECURITY_DISABLE_PASSWORD = 246,IDE_COMMAND_NOT_VALID = 255,IDE_FEATURE_ENABLE_WRITE_CACHE = 2,IDE_FEATURE_SET_TRANSFER_MODE = 3,IDE_FEATURE_ENABLE_SATA_FEATURE = 16,IDE_FEATURE_DISABLE_MSN = 49,IDE_FEATURE_DISABLE_REVERT_TO_POWER_ON = 102,IDE_FEATURE_DISABLE_WRITE_CACHE = 130,IDE_FEATURE_DISABLE_SATA_FEATURE = 144,IDE_FEATURE_ENABLE_MSN = 149,IDE_SATA_FEATURE_NON_ZERO_DMA_BUFFER_OFFSET = 1,IDE_SATA_FEATURE_DMA_SETUP_FIS_AUTO_ACTIVATE = 2,IDE_SATA_FEATURE_DEVICE_INITIATED_POWER_MANAGEMENT = 3,IDE_SATA_FEATURE_GUARANTEED_IN_ORDER_DELIVERY = 4,IDE_SATA_FEATURE_ASYNCHRONOUS_NOTIFICATION = 5,IDE_SATA_FEATURE_SOFTWARE_SETTINGS_PRESERVATION = 6,IDE_SATA_FEATURE_DEVICE_AUTO_PARTIAL_TO_SLUMBER = 7,IDE_SATA_FEATURE_ENABLE_HARDWARE_FEATURE_CONTROL = 8,IDE_SATA_FEATURE_DEVSLP = 9,IDE_SMART_READ_ATTRIBUTES = 208,IDE_SMART_READ_THRESHOLDS = 209,IDE_SMART_ENABLE_DISABLE_AUTOSAVE = 210,IDE_SMART_SAVE_ATTRIBUTE_VALUES = 211,IDE_SMART_EXECUTE_OFFLINE_DIAGS = 212,IDE_SMART_READ_LOG = 213,IDE_SMART_WRITE_LOG = 214,IDE_SMART_ENABLE = 216,IDE_SMART_DISABLE = 217,IDE_SMART_RETURN_STATUS = 218,IDE_SMART_ENABLE_DISABLE_AUTO_OFFLINE = 219,IDE_DSM_FEATURE_TRIM = 1,IDE_NCQ_NON_DATA_ABORT_NCQ_QUEUE = 0,IDE_NCQ_NON_DATA_DEADLINE_HANDLING = 1,IDE_NCQ_NON_DATA_HYBRID_CHANGE_BY_SIZE = 2,IDE_NCQ_NON_DATA_HYBRID_CHANGE_BY_LBA_RANGE = 3,IDE_NCQ_NON_DATA_HYBRID_CONTROL = 4,IDE_NCQ_SEND_DATA_SET_MANAGEMENT = 0,IDE_NCQ_SEND_HYBRID_EVICT = 1,};
enum MACRO_IFF {IFF_UP = 0x1,IFF_BROADCAST = 0x2,IFF_LOOPBACK = 0x4,IFF_POINTTOPOINT = 0x8,IFF_MULTICAST = 0x10,};
enum MACRO_IFI {IFI_UNSPECIFIED = 0,};
enum MACRO_IN6 {IN6_EMBEDDEDV4_UOCTET_POSITION = 8,IN6_EMBEDDEDV4_BITS_IN_BYTE = 8,};
enum MACRO_INT {INT_MIN = -2147483648,INT_MAX = 2147483647,};
enum MACRO_IOC {IOC_UNIX = 0x0,IOC_WS2 = 0x8000000,IOC_PROTOCOL = 0x10000000,IOC_VENDOR = 0x18000000,IOC_WSK = 0xF000000,};
enum MACRO_IP4 {IP4_OFF_MASK = 0xFF1F,};
enum MACRO_IP6 {IP6_MIB_STATS_ID = 1,IP6_GET_BEST_ROUTE_ID = 3,};
enum MACRO_IRB {IRB_BUS_RESERVED_SZ = 8,IRB_PORT_RESERVED_SZ = 8,IRB_FLAG_USE_PRE_CALCULATED_VALUE = 1,IRB_FLAG_ALLOW_REMOTE_FREE = 2,};
enum MACRO_IRE {IRE_TYPE_OTHER = 1,IRE_TYPE_INVALID = 2,IRE_TYPE_DIRECT = 3,IRE_TYPE_INDIRECT = 4,IRE_PROTO_OTHER = 1,IRE_PROTO_LOCAL = 2,IRE_PROTO_NETMGMT = 3,IRE_PROTO_ICMP = 4,IRE_PROTO_EGP = 5,IRE_PROTO_GGP = 6,IRE_PROTO_HELLO = 7,IRE_PROTO_RIP = 8,IRE_PROTO_IS_IS = 9,IRE_PROTO_ES_IS = 10,IRE_PROTO_CISCO = 11,IRE_PROTO_BBN = 12,IRE_PROTO_OSPF = 13,IRE_PROTO_BGP = 14,IRE_METRIC_UNUSED = -1,};
enum MACRO_IRP {IRP_MJ_CREATE = 0x0,IRP_MJ_CREATE_NAMED_PIPE = 0x1,IRP_MJ_CLOSE = 0x2,IRP_MJ_READ = 0x3,IRP_MJ_WRITE = 0x4,IRP_MJ_QUERY_INFORMATION = 0x5,IRP_MJ_SET_INFORMATION = 0x6,IRP_MJ_QUERY_EA = 0x7,IRP_MJ_SET_EA = 0x8,IRP_MJ_FLUSH_BUFFERS = 0x9,IRP_MJ_QUERY_VOLUME_INFORMATION = 0xA,IRP_MJ_SET_VOLUME_INFORMATION = 0xB,IRP_MJ_DIRECTORY_CONTROL = 0xC,IRP_MJ_FILE_SYSTEM_CONTROL = 0xD,IRP_MJ_DEVICE_CONTROL = 0xE,IRP_MJ_INTERNAL_DEVICE_CONTROL = 0xF,IRP_MJ_SHUTDOWN = 0x10,IRP_MJ_LOCK_CONTROL = 0x11,IRP_MJ_CLEANUP = 0x12,IRP_MJ_CREATE_MAILSLOT = 0x13,IRP_MJ_QUERY_SECURITY = 0x14,IRP_MJ_SET_SECURITY = 0x15,IRP_MJ_POWER = 0x16,IRP_MJ_SYSTEM_CONTROL = 0x17,IRP_MJ_DEVICE_CHANGE = 0x18,IRP_MJ_QUERY_QUOTA = 0x19,IRP_MJ_SET_QUOTA = 0x1A,IRP_MJ_PNP = 0x1B,IRP_MJ_PNP_POWER = 0x1B,IRP_MJ_MAXIMUM_FUNCTION = 0x1B,IRP_MJ_SCSI = 0xF,IRP_MN_SCSI_CLASS = 0x1,IRP_MN_START_DEVICE = 0x0,IRP_MN_QUERY_REMOVE_DEVICE = 0x1,IRP_MN_REMOVE_DEVICE = 0x2,IRP_MN_CANCEL_REMOVE_DEVICE = 0x3,IRP_MN_STOP_DEVICE = 0x4,IRP_MN_QUERY_STOP_DEVICE = 0x5,IRP_MN_CANCEL_STOP_DEVICE = 0x6,IRP_MN_QUERY_DEVICE_RELATIONS = 0x7,IRP_MN_QUERY_INTERFACE = 0x8,IRP_MN_QUERY_CAPABILITIES = 0x9,IRP_MN_QUERY_RESOURCES = 0xA,IRP_MN_QUERY_RESOURCE_REQUIREMENTS = 0xB,IRP_MN_QUERY_DEVICE_TEXT = 0xC,IRP_MN_FILTER_RESOURCE_REQUIREMENTS = 0xD,IRP_MN_READ_CONFIG = 0xF,IRP_MN_WRITE_CONFIG = 0x10,IRP_MN_EJECT = 0x11,IRP_MN_SET_LOCK = 0x12,IRP_MN_QUERY_ID = 0x13,IRP_MN_QUERY_PNP_DEVICE_STATE = 0x14,IRP_MN_QUERY_BUS_INFORMATION = 0x15,IRP_MN_DEVICE_USAGE_NOTIFICATION = 0x16,IRP_MN_SURPRISE_REMOVAL = 0x17,IRP_MN_DEVICE_ENUMERATED = 0x19,IRP_MN_WAIT_WAKE = 0x0,IRP_MN_POWER_SEQUENCE = 0x1,IRP_MN_SET_POWER = 0x2,IRP_MN_QUERY_POWER = 0x3,IRP_MN_QUERY_ALL_DATA = 0x0,IRP_MN_QUERY_SINGLE_INSTANCE = 0x1,IRP_MN_CHANGE_SINGLE_INSTANCE = 0x2,IRP_MN_CHANGE_SINGLE_ITEM = 0x3,IRP_MN_ENABLE_EVENTS = 0x4,IRP_MN_DISABLE_EVENTS = 0x5,IRP_MN_ENABLE_COLLECTION = 0x6,IRP_MN_DISABLE_COLLECTION = 0x7,IRP_MN_REGINFO = 0x8,IRP_MN_EXECUTE_METHOD = 0x9,IRP_MN_REGINFO_EX = 0xB,};
enum MACRO_ISA {ISA_VECTOR_OVERRIDE = 2,};
enum MACRO_ISC {ISC_REQ_DELEGATE = 0x1,ISC_REQ_MUTUAL_AUTH = 0x2,ISC_REQ_REPLAY_DETECT = 0x4,ISC_REQ_SEQUENCE_DETECT = 0x8,ISC_REQ_CONFIDENTIALITY = 0x10,ISC_REQ_USE_SESSION_KEY = 0x20,ISC_REQ_PROMPT_FOR_CREDS = 0x40,ISC_REQ_USE_SUPPLIED_CREDS = 0x80,ISC_REQ_ALLOCATE_MEMORY = 0x100,ISC_REQ_USE_DCE_STYLE = 0x200,ISC_REQ_DATAGRAM = 0x400,ISC_REQ_CONNECTION = 0x800,ISC_REQ_CALL_LEVEL = 0x1000,ISC_REQ_FRAGMENT_SUPPLIED = 0x2000,ISC_REQ_EXTENDED_ERROR = 0x4000,ISC_REQ_STREAM = 0x8000,ISC_REQ_INTEGRITY = 0x10000,ISC_REQ_IDENTIFY = 0x20000,ISC_REQ_NULL_SESSION = 0x40000,ISC_REQ_MANUAL_CRED_VALIDATION = 0x80000,ISC_REQ_RESERVED1 = 0x100000,ISC_REQ_FRAGMENT_TO_FIT = 0x200000,ISC_REQ_FORWARD_CREDENTIALS = 0x400000,ISC_REQ_NO_INTEGRITY = 0x800000,ISC_REQ_USE_HTTP_STYLE = 0x1000000,ISC_REQ_UNVERIFIED_TARGET_NAME = 0x20000000,ISC_REQ_CONFIDENTIALITY_ONLY = 0x40000000,ISC_RET_DELEGATE = 0x1,ISC_RET_MUTUAL_AUTH = 0x2,ISC_RET_REPLAY_DETECT = 0x4,ISC_RET_SEQUENCE_DETECT = 0x8,ISC_RET_CONFIDENTIALITY = 0x10,ISC_RET_USE_SESSION_KEY = 0x20,ISC_RET_USED_COLLECTED_CREDS = 0x40,ISC_RET_USED_SUPPLIED_CREDS = 0x80,ISC_RET_ALLOCATED_MEMORY = 0x100,ISC_RET_USED_DCE_STYLE = 0x200,ISC_RET_DATAGRAM = 0x400,ISC_RET_CONNECTION = 0x800,ISC_RET_INTERMEDIATE_RETURN = 0x1000,ISC_RET_CALL_LEVEL = 0x2000,ISC_RET_EXTENDED_ERROR = 0x4000,ISC_RET_STREAM = 0x8000,ISC_RET_INTEGRITY = 0x10000,ISC_RET_IDENTIFY = 0x20000,ISC_RET_NULL_SESSION = 0x40000,ISC_RET_MANUAL_CRED_VALIDATION = 0x80000,ISC_RET_RESERVED1 = 0x100000,ISC_RET_FRAGMENT_ONLY = 0x200000,ISC_RET_FORWARD_CREDENTIALS = 0x400000,ISC_RET_USED_HTTP_STYLE = 0x1000000,ISC_RET_NO_ADDITIONAL_TOKEN = 0x2000000,ISC_RET_REAUTHENTICATION = 0x8000000,ISC_RET_CONFIDENTIALITY_ONLY = 0x40000000,};
enum MACRO_ISO {ISO_MAX_ADDR_LENGTH = 64,ISO_HIERARCHICAL = 0,ISO_NON_HIERARCHICAL = 1,};
enum MACRO_KDC {KDC_PROXY_SETTINGS_V1 = 1,KDC_PROXY_SETTINGS_FLAGS_FORCEPROXY = 1,};
enum MACRO_KEY {KEY_QUERY_VALUE = 0x1,KEY_SET_VALUE = 0x2,KEY_CREATE_SUB_KEY = 0x4,KEY_ENUMERATE_SUB_KEYS = 0x8,KEY_NOTIFY = 0x10,KEY_CREATE_LINK = 0x20,KEY_WOW64_32KEY = 0x200,KEY_WOW64_64KEY = 0x100,KEY_WOW64_RES = 0x300,KEY_READ = 0x20019,KEY_WRITE = 0x20006,KEY_EXECUTE = 0x20019,KEY_ALL_ACCESS = 0xF003F,};
enum MACRO_KTM {KTM_MARSHAL_BLOB_VERSION_MAJOR = 1,KTM_MARSHAL_BLOB_VERSION_MINOR = 1,};
enum MACRO_LAP {LAP_GIAC_VALUE = 0x9E8B33,LAP_LIAC_VALUE = 0x9E8B00,};
enum MACRO_LBA {LBA_STATUS_MAPPED = 0x0,LBA_STATUS_DEALLOCATED = 0x1,LBA_STATUS_ANCHORED = 0x2,};
enum MACRO_LLC {LLC_ENCAPSULATION = 0x800000,};
enum MACRO_LOG {LOG_POLICY_OVERWRITE = 0x1,LOG_POLICY_PERSIST = 0x2,};
enum MACRO_LOW {LOW_LEVEL = 0,CMCI_LEVEL = 5,PROFILE_LEVEL = 27,CLOCK1_LEVEL = 28,CLOCK2_LEVEL = 28,IPI_LEVEL = 29,POWER_LEVEL = 30,CLOCK_LEVEL = 28,};
enum MACRO_LTP {LTP_PC_SMT = 0x1,};
enum MACRO_MAP {MAP_WAIT = 1,MAP_NO_READ = 16,MAP_HIGH_PRIORITY = 64,};
enum MACRO_MAX {ULONG_MAX = 0xFFFFFFFFFFFFFFFF,LLONG_MAX = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_MBR {MBR_CHECKSUM_MISMATCH = 0x8B,};
enum MACRO_MCA {MCA_WARNING_CACHE = 0x8005003C,MCA_ERROR_CACHE = 0xC005003D,MCA_WARNING_TLB = 0x8005003E,MCA_ERROR_TLB = 0xC005003F,MCA_WARNING_CPU_BUS = 0x80050040,MCA_ERROR_CPU_BUS = 0xC0050041,MCA_WARNING_REGISTER_FILE = 0x80050042,MCA_ERROR_REGISTER_FILE = 0xC0050043,MCA_WARNING_MAS = 0x80050044,MCA_ERROR_MAS = 0xC0050045,MCA_WARNING_MEM_UNKNOWN = 0x80050046,MCA_ERROR_MEM_UNKNOWN = 0xC0050047,MCA_WARNING_MEM_1_2 = 0x80050048,MCA_ERROR_MEM_1_2 = 0xC0050049,MCA_WARNING_MEM_1_2_5 = 0x8005004A,MCA_ERROR_MEM_1_2_5 = 0xC005004B,MCA_WARNING_MEM_1_2_5_4 = 0x8005004C,MCA_ERROR_MEM_1_2_5_4 = 0xC005004D,MCA_WARNING_SYSTEM_EVENT = 0x8005004E,MCA_ERROR_SYSTEM_EVENT = 0xC005004F,MCA_WARNING_PCI_BUS_PARITY = 0x80050050,MCA_ERROR_PCI_BUS_PARITY = 0xC0050051,MCA_WARNING_PCI_BUS_PARITY_NO_INFO = 0x80050052,MCA_ERROR_PCI_BUS_PARITY_NO_INFO = 0xC0050053,MCA_WARNING_PCI_BUS_SERR = 0x80050054,MCA_ERROR_PCI_BUS_SERR = 0xC0050055,MCA_WARNING_PCI_BUS_SERR_NO_INFO = 0x80050056,MCA_ERROR_PCI_BUS_SERR_NO_INFO = 0xC0050057,MCA_WARNING_PCI_BUS_MASTER_ABORT = 0x80050058,MCA_ERROR_PCI_BUS_MASTER_ABORT = 0xC0050059,MCA_WARNING_PCI_BUS_MASTER_ABORT_NO_INFO = 0x8005005A,MCA_ERROR_PCI_BUS_MASTER_ABORT_NO_INFO = 0xC005005B,MCA_WARNING_PCI_BUS_TIMEOUT = 0x8005005C,MCA_ERROR_PCI_BUS_TIMEOUT = 0xC005005D,MCA_WARNING_PCI_BUS_TIMEOUT_NO_INFO = 0x8005005E,MCA_ERROR_PCI_BUS_TIMEOUT_NO_INFO = 0xC005005F,MCA_WARNING_PCI_BUS_UNKNOWN = 0x80050060,MCA_ERROR_PCI_BUS_UNKNOWN = 0xC0050061,MCA_WARNING_PCI_DEVICE = 0x80050062,MCA_ERROR_PCI_DEVICE = 0xC0050063,MCA_WARNING_SMBIOS = 0x80050064,MCA_ERROR_SMBIOS = 0xC0050065,MCA_WARNING_PLATFORM_SPECIFIC = 0x80050066,MCA_ERROR_PLATFORM_SPECIFIC = 0xC0050067,MCA_WARNING_UNKNOWN = 0x80050068,MCA_ERROR_UNKNOWN = 0xC0050069,MCA_WARNING_UNKNOWN_NO_CPU = 0x8005006A,MCA_ERROR_UNKNOWN_NO_CPU = 0xC005006B,};
enum MACRO_MCB {MCB_FLAG_RAISE_ON_ALLOCATION_FAILURE = 1,};
enum MACRO_MCW {MCW_EM = 524319,};
enum MACRO_MDL {MDL_MAPPED_TO_SYSTEM_VA = 0x1,MDL_PAGES_LOCKED = 0x2,MDL_SOURCE_IS_NONPAGED_POOL = 0x4,MDL_ALLOCATED_FIXED_SIZE = 0x8,MDL_PARTIAL = 0x10,MDL_PARTIAL_HAS_BEEN_MAPPED = 0x20,MDL_IO_PAGE_READ = 0x40,MDL_WRITE_OPERATION = 0x80,MDL_LOCKED_PAGE_TABLES = 0x100,MDL_PARENT_MAPPED_SYSTEM_VA = 0x100,MDL_FREE_EXTRA_PTES = 0x200,MDL_DESCRIBES_AWE = 0x400,MDL_IO_SPACE = 0x800,MDL_NETWORK_HEADER = 0x1000,MDL_MAPPING_CAN_FAIL = 0x2000,MDL_PAGE_CONTENTS_INVARIANT = 0x4000,MDL_ALLOCATED_MUST_SUCCEED = 0x4000,MDL_INTERNAL = 0x8000,};
enum MACRO_MEM {MEM_COMMIT = 0x1000,MEM_RESERVE = 0x2000,MEM_DECOMMIT = 0x4000,MEM_RELEASE = 0x8000,MEM_FREE = 0x10000,MEM_PRIVATE = 0x20000,MEM_MAPPED = 0x40000,MEM_RESET = 0x80000,MEM_TOP_DOWN = 0x100000,MEM_RESET_UNDO = 0x1000000,MEM_LARGE_PAGES = 0x20000000,MEM_4MB_PAGES = 0x80000000,};
enum MACRO_MIB {MIB_IF_TYPE_OTHER = 1,MIB_IF_TYPE_ETHERNET = 6,MIB_IF_TYPE_TOKENRING = 9,MIB_IF_TYPE_FDDI = 15,MIB_IF_TYPE_PPP = 23,MIB_IF_TYPE_LOOPBACK = 24,MIB_IF_TYPE_SLIP = 28,MIB_IF_ADMIN_STATUS_UP = 1,MIB_IF_ADMIN_STATUS_DOWN = 2,MIB_IF_ADMIN_STATUS_TESTING = 3,};
enum MACRO_MIN {MIN_DEV_VER_FOR_QI = 0x100,};
enum MACRO_MIO {MIO_COMMAND_PROCESSOR = 5,};
enum MACRO_MRX {MRX_NET_ROOT_STATE_GOOD = 0,MRX_NET_ROOT_STATE_PAUSED = 1,MRX_NET_ROOT_STATE_DISCONNECTED = 2,MRX_NET_ROOT_STATE_ERROR = 3,MRX_NET_ROOT_STATE_CONNECTED = 4,MRX_NET_ROOT_STATE_RECONN = 5,MRX_PURGE_SAME_NETROOT = 0,MRX_PURGE_SAME_SRVCALL = 1,MRX_PURGE_SYNC_AT_NETROOT = 0,MRX_PURGE_SYNC_AT_SRVCALL = 1,};
enum MACRO_MSG {MSG_TRUNC = 0x100,MSG_CTRUNC = 0x200,MSG_BCAST = 0x400,MSG_MCAST = 0x800,};
enum MACRO_MSI {MSI_NOT_SUPPORTED_BIT = 3,MSI_NOT_SUPPORTED = 8,};
enum MACRO_MUI {MUI_NO_VALID_SYSTEM_LANGUAGE = 0x12A,};
enum MACRO_MUP {MUP_FILE_SYSTEM = 0x103,};
enum MACRO_NAP {NAP_MASK = 0xFFFF00000000,SAP_MASK = 0xFFFFFFFFFFFFFFFF,};
enum MACRO_NBF {NBF_PRESERVE_MAC_ADDRESS = 0x1000000,};
enum MACRO_NBL {NBL_FLAGS_PROTOCOL_RESERVED = 0xFFF00000,NBL_FLAGS_MINIPORT_RESERVED = 0xF000,NBL_FLAGS_SCRATCH = 0xF0000,NBL_FLAGS_NDIS_RESERVED = 0xFFF,NBL_PROT_RSVD_FLAGS = 0xFFF00000,};
enum MACRO_NDK {NDK_ADAPTER_FLAG_IN_ORDER_DMA_SUPPORTED = 0x1,NDK_ADAPTER_FLAG_RDMA_READ_SINK_NOT_REQUIRED = 0x2,NDK_ADAPTER_FLAG_CQ_INTERRUPT_MODERATION_SUPPORTED = 0x4,NDK_ADAPTER_FLAG_MULTI_ENGINE_SUPPORTED = 0x8,NDK_ADAPTER_FLAG_CQ_RESIZE_SUPPORTED = 0x100,NDK_ADAPTER_FLAG_LOOPBACK_CONNECTIONS_SUPPORTED = 0x10000,};
enum MACRO_NET {NET_ROOT_DISK = 0,NET_ROOT_PIPE = 1,NET_ROOT_COMM = 2,NET_ROOT_PRINT = 3,NET_ROOT_WILD = 4,NET_ROOT_MAILSLOT = 5,};
enum MACRO_NLB {NLB_NOTIFICATION_NONE = 0,NLB_NOTIFICATION_TCPIP = 1,NLB_NOTIFICATION_ALTERNATE = 2,NLB_TCPIP_PROTOCOL_TCP = 6,NLB_TCP_CLOSED = 1,NLB_TCP_SYN_SENT = 3,NLB_TCP_SYN_RCVD = 4,NLB_TCP_ESTAB = 5,NLB_IOCTL_REGISTER_HOOK = 3233841224,NLB_HOOK_IDENTIFIER_LENGTH = 39,NLB_HOOK_DEREGISTER_FLAGS_FORCED = 1,};
enum MACRO_NLS {NLS_VALID_LOCALE_MASK = 0xFFFFF,};
enum MACRO_NMR {NMR_INVALID_STATE = 0x125,};
enum MACRO_NON {NON_PAGED_DEBUG_SIGNATURE = 0x494E,};
enum MACRO_NOT {NOT_DATA_GRADE = 8,};
enum MACRO_NRB {NRB_FUNCTION_NVCACHE_INFO = 0xEC,NRB_FUNCTION_SPINDLE_STATUS = 0xE5,NRB_FUNCTION_NVCACHE_POWER_MODE_SET = 0x0,NRB_FUNCTION_NVCACHE_POWER_MODE_RETURN = 0x1,NRB_FUNCTION_FLUSH_NVCACHE = 0x14,NRB_FUNCTION_QUERY_PINNED_SET = 0x12,NRB_FUNCTION_QUERY_CACHE_MISS = 0x13,NRB_FUNCTION_ADD_LBAS_PINNED_SET = 0x10,NRB_FUNCTION_REMOVE_LBAS_PINNED_SET = 0x11,NRB_FUNCTION_QUERY_ASCENDER_STATUS = 0xD0,NRB_FUNCTION_QUERY_HYBRID_DISK_STATUS = 0xD1,NRB_FUNCTION_PASS_HINT_PAYLOAD = 0xE0,NRB_FUNCTION_NVSEPARATED_INFO = 0xC0,NRB_FUNCTION_NVSEPARATED_FLUSH = 0xC1,NRB_FUNCTION_NVSEPARATED_WB_DISABLE = 0xC2,NRB_FUNCTION_NVSEPARATED_WB_REVERT_DEFAULT = 0xC3,NRB_SUCCESS = 0x0,NRB_ILLEGAL_REQUEST = 0x1,NRB_INVALID_PARAMETER = 0x2,NRB_INPUT_DATA_OVERRUN = 0x3,NRB_INPUT_DATA_UNDERRUN = 0x4,NRB_OUTPUT_DATA_OVERRUN = 0x5,NRB_OUTPUT_DATA_UNDERRUN = 0x6,};
enum MACRO_NTC {NTC_UNDEFINED = 0x0,};
enum MACRO_NTE {NTE_BAD_UID = 0x80090001,NTE_BAD_HASH = 0x80090002,NTE_BAD_KEY = 0x80090003,NTE_BAD_LEN = 0x80090004,NTE_BAD_DATA = 0x80090005,NTE_BAD_SIGNATURE = 0x80090006,NTE_BAD_VER = 0x80090007,NTE_BAD_ALGID = 0x80090008,NTE_BAD_FLAGS = 0x80090009,NTE_BAD_TYPE = 0x8009000A,NTE_BAD_KEY_STATE = 0x8009000B,NTE_BAD_HASH_STATE = 0x8009000C,NTE_NO_KEY = 0x8009000D,NTE_NO_MEMORY = 0x8009000E,NTE_EXISTS = 0x8009000F,NTE_PERM = 0x80090010,NTE_NOT_FOUND = 0x80090011,NTE_DOUBLE_ENCRYPT = 0x80090012,NTE_BAD_PROVIDER = 0x80090013,NTE_BAD_PROV_TYPE = 0x80090014,NTE_BAD_PUBLIC_KEY = 0x80090015,NTE_BAD_KEYSET = 0x80090016,NTE_PROV_TYPE_NOT_DEF = 0x80090017,NTE_PROV_TYPE_ENTRY_BAD = 0x80090018,NTE_KEYSET_NOT_DEF = 0x80090019,NTE_KEYSET_ENTRY_BAD = 0x8009001A,NTE_PROV_TYPE_NO_MATCH = 0x8009001B,NTE_SIGNATURE_FILE_BAD = 0x8009001C,NTE_PROVIDER_DLL_FAIL = 0x8009001D,NTE_PROV_DLL_NOT_FOUND = 0x8009001E,NTE_BAD_KEYSET_PARAM = 0x8009001F,NTE_FAIL = 0x80090020,NTE_SYS_ERR = 0x80090021,NTE_SILENT_CONTEXT = 0x80090022,NTE_TOKEN_KEYSET_STORAGE_FULL = 0x80090023,NTE_TEMPORARY_PROFILE = 0x80090024,NTE_FIXEDPARAMETER = 0x80090025,NTE_INVALID_HANDLE = 0x80090026,NTE_INVALID_PARAMETER = 0x80090027,NTE_BUFFER_TOO_SMALL = 0x80090028,NTE_NOT_SUPPORTED = 0x80090029,NTE_NO_MORE_ITEMS = 0x8009002A,NTE_BUFFERS_OVERLAP = 0x8009002B,NTE_DECRYPTION_FAILURE = 0x8009002C,NTE_INTERNAL_ERROR = 0x8009002D,NTE_UI_REQUIRED = 0x8009002E,NTE_HMAC_NOT_SUPPORTED = 0x8009002F,NTE_DEVICE_NOT_READY = 0x80090030,NTE_AUTHENTICATION_IGNORED = 0x80090031,NTE_VALIDATION_FAILED = 0x80090032,NTE_INCORRECT_PASSWORD = 0x80090033,NTE_ENCRYPTION_FAILURE = 0x80090034,};
enum MACRO_NUM {NUM_DISCHARGE_POLICIES = 4,};
enum MACRO_NWF {NWF_MANDATORY_OID = 0x1,NWF_OPTIONAL_OID = 0x2,NWF_OPERATIONAL_OID = 0x1,NWF_STATISTICS_OID = 0x2,};
enum MACRO_OBJ {OBJ_HANDLE_TAGBITS = 0x3,};
enum MACRO_OID {OID_GEN_SUPPORTED_LIST = 0x10101,OID_GEN_HARDWARE_STATUS = 0x10102,OID_GEN_MEDIA_SUPPORTED = 0x10103,OID_GEN_MEDIA_IN_USE = 0x10104,OID_GEN_MAXIMUM_LOOKAHEAD = 0x10105,OID_GEN_MAXIMUM_FRAME_SIZE = 0x10106,OID_GEN_LINK_SPEED = 0x10107,OID_GEN_TRANSMIT_BUFFER_SPACE = 0x10108,OID_GEN_RECEIVE_BUFFER_SPACE = 0x10109,OID_GEN_TRANSMIT_BLOCK_SIZE = 0x1010A,OID_GEN_RECEIVE_BLOCK_SIZE = 0x1010B,OID_GEN_VENDOR_ID = 0x1010C,OID_GEN_VENDOR_DESCRIPTION = 0x1010D,OID_GEN_CURRENT_PACKET_FILTER = 0x1010E,OID_GEN_CURRENT_LOOKAHEAD = 0x1010F,OID_GEN_DRIVER_VERSION = 0x10110,OID_GEN_MAXIMUM_TOTAL_SIZE = 0x10111,OID_GEN_PROTOCOL_OPTIONS = 0x10112,OID_GEN_MAC_OPTIONS = 0x10113,OID_GEN_MEDIA_CONNECT_STATUS = 0x10114,OID_GEN_MAXIMUM_SEND_PACKETS = 0x10115,OID_GEN_VENDOR_DRIVER_VERSION = 0x10116,OID_GEN_SUPPORTED_GUIDS = 0x10117,OID_GEN_NETWORK_LAYER_ADDRESSES = 0x10118,OID_GEN_TRANSPORT_HEADER_OFFSET = 0x10119,OID_GEN_MEDIA_CAPABILITIES = 0x10201,OID_GEN_PHYSICAL_MEDIUM = 0x10202,OID_GEN_RECEIVE_SCALE_CAPABILITIES = 0x10203,OID_GEN_RECEIVE_SCALE_PARAMETERS = 0x10204,OID_GEN_MAC_ADDRESS = 0x10205,OID_GEN_MAX_LINK_SPEED = 0x10206,OID_GEN_LINK_STATE = 0x10207,OID_GEN_LINK_PARAMETERS = 0x10208,OID_GEN_INTERRUPT_MODERATION = 0x10209,OID_GEN_NDIS_RESERVED_3 = 0x1020A,OID_GEN_NDIS_RESERVED_4 = 0x1020B,OID_GEN_NDIS_RESERVED_5 = 0x1020C,OID_GEN_ENUMERATE_PORTS = 0x1020D,OID_GEN_PORT_STATE = 0x1020E,OID_GEN_PORT_AUTHENTICATION_PARAMETERS = 0x1020F,OID_GEN_TIMEOUT_DPC_REQUEST_CAPABILITIES = 0x10210,OID_GEN_PCI_DEVICE_CUSTOM_PROPERTIES = 0x10211,OID_GEN_NDIS_RESERVED_6 = 0x10212,OID_GEN_PHYSICAL_MEDIUM_EX = 0x10213,OID_GEN_MACHINE_NAME = 0x1021A,OID_GEN_RNDIS_CONFIG_PARAMETER = 0x1021B,OID_GEN_VLAN_ID = 0x1021C,OID_GEN_RECEIVE_HASH = 0x1021F,OID_GEN_MINIPORT_RESTART_ATTRIBUTES = 0x1021D,OID_GEN_HD_SPLIT_PARAMETERS = 0x1021E,OID_GEN_HD_SPLIT_CURRENT_CONFIG = 0x10220,OID_GEN_PROMISCUOUS_MODE = 0x10280,OID_GEN_LAST_CHANGE = 0x10281,OID_GEN_DISCONTINUITY_TIME = 0x10282,OID_GEN_OPERATIONAL_STATUS = 0x10283,OID_GEN_XMIT_LINK_SPEED = 0x10284,OID_GEN_RCV_LINK_SPEED = 0x10285,OID_GEN_UNKNOWN_PROTOS = 0x10286,OID_GEN_INTERFACE_INFO = 0x10287,OID_GEN_ADMIN_STATUS = 0x10288,OID_GEN_ALIAS = 0x10289,OID_GEN_MEDIA_CONNECT_STATUS_EX = 0x1028A,OID_GEN_LINK_SPEED_EX = 0x1028B,OID_GEN_MEDIA_DUPLEX_STATE = 0x1028C,OID_GEN_IP_OPER_STATUS = 0x1028D,OID_WWAN_DRIVER_CAPS = 0xE010100,OID_WWAN_DEVICE_CAPS = 0xE010101,OID_WWAN_READY_INFO = 0xE010102,OID_WWAN_RADIO_STATE = 0xE010103,OID_WWAN_PIN = 0xE010104,OID_WWAN_PIN_LIST = 0xE010105,OID_WWAN_HOME_PROVIDER = 0xE010106,OID_WWAN_PREFERRED_PROVIDERS = 0xE010107,OID_WWAN_VISIBLE_PROVIDERS = 0xE010108,OID_WWAN_REGISTER_STATE = 0xE010109,OID_WWAN_PACKET_SERVICE = 0xE01010A,OID_WWAN_SIGNAL_STATE = 0xE01010B,OID_WWAN_CONNECT = 0xE01010C,OID_WWAN_PROVISIONED_CONTEXTS = 0xE01010D,OID_WWAN_SERVICE_ACTIVATION = 0xE01010E,OID_WWAN_SMS_CONFIGURATION = 0xE01010F,OID_WWAN_SMS_READ = 0xE010110,OID_WWAN_SMS_SEND = 0xE010111,OID_WWAN_SMS_DELETE = 0xE010112,OID_WWAN_SMS_STATUS = 0xE010113,OID_WWAN_VENDOR_SPECIFIC = 0xE010114,OID_WWAN_AUTH_CHALLENGE = 0xE010115,OID_WWAN_ENUMERATE_DEVICE_SERVICES = 0xE010116,OID_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS = 0xE010117,OID_WWAN_DEVICE_SERVICE_COMMAND = 0xE010118,OID_WWAN_USSD = 0xE010119,OID_WWAN_PIN_EX = 0xE010121,OID_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS = 0xE010122,OID_WWAN_DEVICE_SERVICE_SESSION = 0xE010123,OID_WWAN_DEVICE_SERVICE_SESSION_WRITE = 0xE010124,OID_WWAN_PREFERRED_MULTICARRIER_PROVIDERS = 0xE010125,OID_GEN_XMIT_OK = 0x20101,OID_GEN_RCV_OK = 0x20102,OID_GEN_XMIT_ERROR = 0x20103,OID_GEN_RCV_ERROR = 0x20104,OID_GEN_RCV_NO_BUFFER = 0x20105,OID_GEN_STATISTICS = 0x20106,OID_GEN_DIRECTED_BYTES_XMIT = 0x20201,OID_GEN_DIRECTED_FRAMES_XMIT = 0x20202,OID_GEN_MULTICAST_BYTES_XMIT = 0x20203,OID_GEN_MULTICAST_FRAMES_XMIT = 0x20204,OID_GEN_BROADCAST_BYTES_XMIT = 0x20205,OID_GEN_BROADCAST_FRAMES_XMIT = 0x20206,OID_GEN_DIRECTED_BYTES_RCV = 0x20207,OID_GEN_DIRECTED_FRAMES_RCV = 0x20208,OID_GEN_MULTICAST_BYTES_RCV = 0x20209,OID_GEN_MULTICAST_FRAMES_RCV = 0x2020A,OID_GEN_BROADCAST_BYTES_RCV = 0x2020B,OID_GEN_BROADCAST_FRAMES_RCV = 0x2020C,OID_GEN_RCV_CRC_ERROR = 0x2020D,OID_GEN_TRANSMIT_QUEUE_LENGTH = 0x2020E,OID_GEN_GET_TIME_CAPS = 0x2020F,OID_GEN_GET_NETCARD_TIME = 0x20210,OID_GEN_NETCARD_LOAD = 0x20211,OID_GEN_DEVICE_PROFILE = 0x20212,OID_GEN_INIT_TIME_MS = 0x20213,OID_GEN_RESET_COUNTS = 0x20214,OID_GEN_MEDIA_SENSE_COUNTS = 0x20215,OID_GEN_FRIENDLY_NAME = 0x20216,OID_GEN_NDIS_RESERVED_1 = 0x20217,OID_GEN_NDIS_RESERVED_2 = 0x20218,OID_GEN_BYTES_RCV = 0x20219,OID_GEN_BYTES_XMIT = 0x2021A,OID_GEN_RCV_DISCARDS = 0x2021B,OID_GEN_XMIT_DISCARDS = 0x2021C,OID_TCP_RSC_STATISTICS = 0x2021D,OID_GEN_NDIS_RESERVED_7 = 0x2021E,OID_GEN_CO_SUPPORTED_LIST = 0x10101,OID_GEN_CO_HARDWARE_STATUS = 0x10102,OID_GEN_CO_MEDIA_SUPPORTED = 0x10103,OID_GEN_CO_MEDIA_IN_USE = 0x10104,OID_GEN_CO_LINK_SPEED = 0x10107,OID_GEN_CO_VENDOR_ID = 0x1010C,OID_GEN_CO_VENDOR_DESCRIPTION = 0x1010D,OID_GEN_CO_DRIVER_VERSION = 0x10110,OID_GEN_CO_PROTOCOL_OPTIONS = 0x10112,OID_GEN_CO_MAC_OPTIONS = 0x10113,OID_GEN_CO_MEDIA_CONNECT_STATUS = 0x10114,OID_GEN_CO_VENDOR_DRIVER_VERSION = 0x10116,OID_GEN_CO_SUPPORTED_GUIDS = 0x10117,OID_GEN_CO_GET_TIME_CAPS = 0x2020F,OID_GEN_CO_GET_NETCARD_TIME = 0x20210,OID_GEN_CO_MINIMUM_LINK_SPEED = 0x20120,OID_GEN_CO_XMIT_PDUS_OK = 0x20101,OID_GEN_CO_RCV_PDUS_OK = 0x20102,OID_GEN_CO_XMIT_PDUS_ERROR = 0x20103,OID_GEN_CO_RCV_PDUS_ERROR = 0x20104,OID_GEN_CO_RCV_PDUS_NO_BUFFER = 0x20105,OID_GEN_CO_RCV_CRC_ERROR = 0x2020D,OID_GEN_CO_TRANSMIT_QUEUE_LENGTH = 0x2020E,OID_GEN_CO_BYTES_XMIT = 0x20201,OID_GEN_CO_BYTES_RCV = 0x20207,OID_GEN_CO_NETCARD_LOAD = 0x20211,OID_GEN_CO_DEVICE_PROFILE = 0x20212,OID_GEN_CO_BYTES_XMIT_OUTSTANDING = 0x20221,OID_802_3_PERMANENT_ADDRESS = 0x1010101,OID_802_3_CURRENT_ADDRESS = 0x1010102,OID_802_3_MULTICAST_LIST = 0x1010103,OID_802_3_MAXIMUM_LIST_SIZE = 0x1010104,OID_802_3_MAC_OPTIONS = 0x1010105,};
enum MACRO_OLD {OLD_P_OVERLAY = 2,};
enum MACRO_OLE {OLE_E_FIRST = 0x80040000,OLE_E_LAST = 0x800400FF,OLE_S_FIRST = 0x40000,OLE_S_LAST = 0x400FF,OLE_E_OLEVERB = 0x80040000,OLE_E_ADVF = 0x80040001,OLE_E_ENUM_NOMORE = 0x80040002,OLE_E_ADVISENOTSUPPORTED = 0x80040003,OLE_E_NOCONNECTION = 0x80040004,OLE_E_NOTRUNNING = 0x80040005,OLE_E_NOCACHE = 0x80040006,OLE_E_BLANK = 0x80040007,OLE_E_CLASSDIFF = 0x80040008,OLE_E_CANT_GETMONIKER = 0x80040009,OLE_E_CANT_BINDTOSOURCE = 0x8004000A,OLE_E_STATIC = 0x8004000B,OLE_E_PROMPTSAVECANCELLED = 0x8004000C,OLE_E_INVALIDRECT = 0x8004000D,OLE_E_WRONGCOMPOBJ = 0x8004000E,OLE_E_INVALIDHWND = 0x8004000F,OLE_E_NOT_INPLACEACTIVE = 0x80040010,OLE_E_CANTCONVERT = 0x80040011,OLE_E_NOSTORAGE = 0x80040012,};
enum MACRO_ONL {ONL_E_INVALID_AUTHENTICATION_TARGET = 0x80860001,ONL_E_ACCESS_DENIED_BY_TOU = 0x80860002,ONL_E_INVALID_APPLICATION = 0x80860003,ONL_E_PASSWORD_UPDATE_REQUIRED = 0x80860004,ONL_E_ACCOUNT_UPDATE_REQUIRED = 0x80860005,ONL_E_FORCESIGNIN = 0x80860006,ONL_E_ACCOUNT_LOCKED = 0x80860007,ONL_E_PARENTAL_CONSENT_REQUIRED = 0x80860008,ONL_E_EMAIL_VERIFICATION_REQUIRED = 0x80860009,ONL_E_ACCOUNT_SUSPENDED_COMPROIMISE = 0x8086000A,ONL_E_ACCOUNT_SUSPENDED_ABUSE = 0x8086000B,ONL_E_ACTION_REQUIRED = 0x8086000C,ONL_CONNECTION_COUNT_LIMIT = 0x8086000D,ONL_E_CONNECTED_ACCOUNT_CAN_NOT_SIGNOUT = 0x8086000E,ONL_E_USER_AUTHENTICATION_REQUIRED = 0x8086000F,ONL_E_REQUEST_THROTTLED = 0x80860010,};
enum MACRO_OSC {OSC_FIRMWARE_FAILURE = 0x2,OSC_UNRECOGNIZED_UUID = 0x4,OSC_UNRECOGNIZED_REVISION = 0x8,OSC_CAPABILITIES_MASKED = 0x10,};
enum MACRO_OSS {OSS_MORE_BUF = 0x80093001,OSS_NEGATIVE_UINTEGER = 0x80093002,OSS_PDU_RANGE = 0x80093003,OSS_MORE_INPUT = 0x80093004,OSS_DATA_ERROR = 0x80093005,OSS_BAD_ARG = 0x80093006,OSS_BAD_VERSION = 0x80093007,OSS_OUT_MEMORY = 0x80093008,OSS_PDU_MISMATCH = 0x80093009,OSS_LIMITED = 0x8009300A,OSS_BAD_PTR = 0x8009300B,OSS_BAD_TIME = 0x8009300C,OSS_INDEFINITE_NOT_SUPPORTED = 0x8009300D,OSS_MEM_ERROR = 0x8009300E,OSS_BAD_TABLE = 0x8009300F,OSS_TOO_LONG = 0x80093010,OSS_CONSTRAINT_VIOLATED = 0x80093011,OSS_FATAL_ERROR = 0x80093012,OSS_ACCESS_SERIALIZATION_ERROR = 0x80093013,OSS_NULL_TBL = 0x80093014,OSS_NULL_FCN = 0x80093015,OSS_BAD_ENCRULES = 0x80093016,OSS_UNAVAIL_ENCRULES = 0x80093017,OSS_CANT_OPEN_TRACE_WINDOW = 0x80093018,OSS_UNIMPLEMENTED = 0x80093019,OSS_OID_DLL_NOT_LINKED = 0x8009301A,OSS_CANT_OPEN_TRACE_FILE = 0x8009301B,OSS_TRACE_FILE_ALREADY_OPEN = 0x8009301C,OSS_TABLE_MISMATCH = 0x8009301D,OSS_TYPE_NOT_SUPPORTED = 0x8009301E,OSS_REAL_DLL_NOT_LINKED = 0x8009301F,OSS_REAL_CODE_NOT_LINKED = 0x80093020,OSS_OUT_OF_RANGE = 0x80093021,OSS_COPIER_DLL_NOT_LINKED = 0x80093022,OSS_CONSTRAINT_DLL_NOT_LINKED = 0x80093023,OSS_COMPARATOR_DLL_NOT_LINKED = 0x80093024,OSS_COMPARATOR_CODE_NOT_LINKED = 0x80093025,OSS_MEM_MGR_DLL_NOT_LINKED = 0x80093026,OSS_PDV_DLL_NOT_LINKED = 0x80093027,OSS_PDV_CODE_NOT_LINKED = 0x80093028,OSS_API_DLL_NOT_LINKED = 0x80093029,OSS_BERDER_DLL_NOT_LINKED = 0x8009302A,OSS_PER_DLL_NOT_LINKED = 0x8009302B,OSS_OPEN_TYPE_ERROR = 0x8009302C,OSS_MUTEX_NOT_CREATED = 0x8009302D,OSS_CANT_CLOSE_TRACE_FILE = 0x8009302E,};
enum MACRO_PAR {PAR_END_OF_CHAIN_DEVICE = 0x1,PAR_HAVE_PORT_KEEP_PORT = 0x2,PAR_LEGACY_ZIP_DRIVE = 0x4,PAR_LEGACY_ZIP_DRIVE_STD_MODE = 0x10,PAR_LEGACY_ZIP_DRIVE_EPP_MODE = 0x20,};
enum MACRO_PC1 {PC1 = 0,PC2 = 1,LM1 = 2,};
enum MACRO_PCC {PCC_SUBSPACE_TYPE_GENERIC = 0,PCC_GENERIC_SHARED_REGION_SIGNATURE = 1346585344,};
enum MACRO_PCI {PCI_BUS_DRIVER_INTERNAL = 0xA1,};
enum MACRO_PCR {PCR_MINOR_VERSION = 1,PCR_MAJOR_VERSION = 1,};
enum MACRO_PCW {PCW_VERSION_1 = 0x100,PCW_CURRENT_VERSION = 0x100,};
enum MACRO_PDC {PDC_WATCHDOG_TIMEOUT = 0x14F,};
enum MACRO_PDI {PDI_SHIFT_X86 = 22,PDI_SHIFT_X86PAE = 21,PDI_SHIFT = 22,};
enum MACRO_PDO {PDO_INFORMATION_ScsiAddress_ID = 1,PDO_INFORMATION_DeviceState_ID = 2,PDO_INFORMATION_PathIdentifier_ID = 3,PDO_INFORMATION_IdentifierType_ID = 4,PDO_INFORMATION_IdentifierLength_ID = 5,PDO_INFORMATION_Identifier_ID = 6,PDO_INFORMATION_Pad_ID = 7,};
enum MACRO_PFN {PFN_SHARE_COUNT = 0x1B,PFN_REFERENCE_COUNT = 0x1C,};
enum MACRO_PHY {PHY_PACKET_ID_CONFIGURATION = 0,PHY_PACKET_ID_LINK_ON = 1,PHY_PACKET_ID_SELF_ID = 2,};
enum MACRO_PIN {PIN_WAIT = 1,PIN_EXCLUSIVE = 2,PIN_NO_READ = 4,PIN_IF_BCB = 8,PIN_CALLER_TRACKS_DIRTY_DATA = 32,PIN_HIGH_PRIORITY = 64,PIN_VERIFY_REQUIRED = 128,};
enum MACRO_PIO {PIO_MODE0 = 1,PIO_MODE1 = 2,PIO_MODE2 = 4,PIO_MODE3 = 8,PIO_MODE4 = 16,};
enum MACRO_PLA {PLA_E_DCS_NOT_FOUND = 0x80300002,PLA_E_DCS_IN_USE = 0x803000AA,PLA_E_TOO_MANY_FOLDERS = 0x80300045,PLA_E_NO_MIN_DISK = 0x80300070,PLA_E_DCS_ALREADY_EXISTS = 0x803000B7,PLA_S_PROPERTY_IGNORED = 0x300100,PLA_E_PROPERTY_CONFLICT = 0x80300101,PLA_E_DCS_SINGLETON_REQUIRED = 0x80300102,PLA_E_CREDENTIALS_REQUIRED = 0x80300103,PLA_E_DCS_NOT_RUNNING = 0x80300104,PLA_E_CONFLICT_INCL_EXCL_API = 0x80300105,PLA_E_NETWORK_EXE_NOT_VALID = 0x80300106,PLA_E_EXE_ALREADY_CONFIGURED = 0x80300107,PLA_E_EXE_PATH_NOT_VALID = 0x80300108,PLA_E_DC_ALREADY_EXISTS = 0x80300109,PLA_E_DCS_START_WAIT_TIMEOUT = 0x8030010A,PLA_E_DC_START_WAIT_TIMEOUT = 0x8030010B,PLA_E_REPORT_WAIT_TIMEOUT = 0x8030010C,PLA_E_NO_DUPLICATES = 0x8030010D,PLA_E_EXE_FULL_PATH_REQUIRED = 0x8030010E,PLA_E_INVALID_SESSION_NAME = 0x8030010F,PLA_E_PLA_CHANNEL_NOT_ENABLED = 0x80300110,PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED = 0x80300111,PLA_E_RULES_MANAGER_FAILED = 0x80300112,PLA_E_CABAPI_FAILURE = 0x80300113,};
enum MACRO_PMI {PMI_CAPABILITIES_SUPPORT_MEASUREMENT = 0x1,PMI_CAPABILITIES_SUPPORT_THRESHOLDS = 0x2,PMI_CAPABILITIES_SUPPORT_BUDGETING = 0x4,PMI_CAPABILITIES_SUPPORT_BUDGET_NOTIFY = 0x8,PMI_CAPABILITIES_DISCHARGE_ONLY = 0x100,PMI_NUM_THRESHOLDS = 0x2,PMI_NAME_MAX = 0x10,PMI_DEVICE_PATH_DELIMITER = 0x0,PMI_VERSION = 0x1,};
enum MACRO_PNP {PNP_INTERNAL_ERROR = 0x95,};
enum MACRO_PP0 {PP0_INITIALIZATION_FAILED = 0x8F,PP1_INITIALIZATION_FAILED = 0x90,};
enum MACRO_PPM {PPM_FIRMWARE_ACPI1C2 = 0x1,PPM_FIRMWARE_ACPI1C3 = 0x2,PPM_FIRMWARE_ACPI1TSTATES = 0x4,PPM_FIRMWARE_CST = 0x8,PPM_FIRMWARE_CSD = 0x10,PPM_FIRMWARE_PCT = 0x20,PPM_FIRMWARE_PSS = 0x40,PPM_FIRMWARE_XPSS = 0x80,PPM_FIRMWARE_PPC = 0x100,PPM_FIRMWARE_PSD = 0x200,PPM_FIRMWARE_PTC = 0x400,PPM_FIRMWARE_TSS = 0x800,PPM_FIRMWARE_TPC = 0x1000,PPM_FIRMWARE_TSD = 0x2000,PPM_FIRMWARE_PCCH = 0x4000,PPM_FIRMWARE_PCCP = 0x8000,PPM_FIRMWARE_OSC = 0x10000,PPM_FIRMWARE_PDC = 0x20000,PPM_FIRMWARE_CPC = 0x40000,PPM_PERFORMANCE_IMPLEMENTATION_NONE = 0x0,PPM_PERFORMANCE_IMPLEMENTATION_PSTATES = 0x1,PPM_PERFORMANCE_IMPLEMENTATION_PCCV1 = 0x2,PPM_PERFORMANCE_IMPLEMENTATION_CPPC = 0x3,PPM_PERFORMANCE_IMPLEMENTATION_PEP = 0x4,PPM_IDLE_IMPLEMENTATION_NONE = 0x0,PPM_IDLE_IMPLEMENTATION_CSTATES = 0x1,PPM_IDLE_IMPLEMENTATION_PEP = 0x2,};
enum MACRO_PPP {PPP_MULTILINK_FRAMING = 0x10,PPP_SHORT_SEQUENCE_HDR_FORMAT = 0x20,PPP_MC_MULTILINK_FRAMING = 0x40,PPP_FRAMING = 0x100,PPP_COMPRESS_ADDRESS_CONTROL = 0x200,PPP_COMPRESS_PROTOCOL_FIELD = 0x400,PPP_ACCM_SUPPORTED = 0x800,};
enum MACRO_PPT {PPT_NO_HARDWARE_PRESENT = 0x0,PPT_ECP_PRESENT = 0x1,PPT_EPP_PRESENT = 0x2,PPT_EPP_32_PRESENT = 0x4,PPT_BYTE_PRESENT = 0x8,PPT_BIDI_PRESENT = 0x8,PPT_1284_3_PRESENT = 0x10,};
enum MACRO_PSM {PSM_SDP = 0x1,PSM_RFCOMM = 0x3,PSM_TCS_BIN = 0x5,PSM_TCS_BIN_CORDLESS = 0x7,PSM_BNEP = 0xF,PSM_HID_CONTROL = 0x11,PSM_HID_INTERRUPT = 0x13,PSM_AVCTP = 0x17,PSM_AVDTP = 0x19,PSM_UDI_C_PLANE = 0x1D,};
enum MACRO_PTI {PTI_SHIFT = 12,};
enum MACRO_PTR {MAXUINT_PTR = -1,MAXINT_PTR = -1,MININT_PTR = 0,MAXULONG_PTR = -1,MAXLONG_PTR = -1,MINLONG_PTR = 0,MAXUHALF_PTR = 65535,MAXHALF_PTR = 32767,MINHALF_PTR = -32768,};
enum MACRO_PTS {PTS_TYPE_DEFAULT = 0x0,PTS_TYPE_OPTIMAL = 0x1,PTS_TYPE_USER = 0x2,};
enum MACRO_PWR {PWR_BUTTON_GENERIC_BIT = 4,PWR_BUTTON_GENERIC = 16,};
enum MACRO_QDI {QDI_SETDIBITS = 0x1,QDI_GETDIBITS = 0x2,QDI_DIBTOSCREEN = 0x4,QDI_STRETCHDIB = 0x8,};
enum MACRO_QIC {QIC_XX = 0,QIC_24 = 5,QIC_120 = 15,QIC_150 = 16,QIC_525 = 17,QIC_1350 = 18,QIC_1000 = 21,QIC_1000C = 30,QIC_2100 = 31,QIC_2GB = 34,QIC_5GB = 40,};
enum MACRO_QOS {QOS_CLASS0 = 0x0,QOS_CLASS1 = 0x1,QOS_CLASS2 = 0x2,QOS_CLASS3 = 0x3,QOS_CLASS4 = 0x4,};
enum MACRO_RAS {RAS_FRAMING = 0x1,RAS_COMPRESSION = 0x2,};
enum MACRO_RDF {RDF_CARD_POWER = 0,RDF_TRANSMIT = 1,RDF_CARD_EJECT = 2,RDF_READER_SWALLOW = 3,RDF_CARD_TRACKING = 4,RDF_SET_PROTOCOL = 5,RDF_DEBUG_LEVEL = 6,RDF_CARD_CONFISCATE = 7,RDF_IOCTL_VENDOR = 8,RDF_ATR_PARSE = 9,};
enum MACRO_REG {REG_OPTION_RESERVED = 0x0,REG_OPTION_NON_VOLATILE = 0x0,REG_OPTION_VOLATILE = 0x1,REG_OPTION_CREATE_LINK = 0x2,REG_OPTION_BACKUP_RESTORE = 0x4,REG_OPTION_OPEN_LINK = 0x8,REG_LEGAL_OPTION = 0xF,REG_OPEN_LEGAL_OPTION = 0xC,REG_CREATED_NEW_KEY = 0x1,REG_OPENED_EXISTING_KEY = 0x2,REG_STANDARD_FORMAT = 0x1,REG_LATEST_FORMAT = 0x2,REG_NO_COMPRESSION = 0x4,REG_WHOLE_HIVE_VOLATILE = 0x1,REG_REFRESH_HIVE = 0x2,REG_NO_LAZY_FLUSH = 0x4,REG_FORCE_RESTORE = 0x8,REG_APP_HIVE = 0x10,REG_PROCESS_PRIVATE = 0x20,REG_START_JOURNAL = 0x40,REG_HIVE_EXACT_FILE_GROWTH = 0x80,REG_HIVE_NO_RM = 0x100,REG_HIVE_SINGLE_LOG = 0x200,REG_BOOT_HIVE = 0x400,REG_FORCE_UNLOAD = 0x1,REG_NOTIFY_CHANGE_NAME = 0x1,REG_NOTIFY_CHANGE_ATTRIBUTES = 0x2,REG_NOTIFY_CHANGE_LAST_SET = 0x4,REG_NOTIFY_CHANGE_SECURITY = 0x8,REG_NOTIFY_THREAD_AGNOSTIC = 0x10000000,REG_LEGAL_CHANGE_FILTER = 0x1000000F,};
enum MACRO_RFC {RFC_1356_FRAMING = 0x100000,RFC_1483_FRAMING = 0x200000,RFC_1490_FRAMING = 0x400000,};
enum MACRO_RIO {RIO_MSG_DONT_NOTIFY = 0x1,RIO_MSG_DEFER = 0x2,RIO_MSG_WAITALL = 0x4,RIO_MSG_COMMIT_ONLY = 0x8,RIO_INVALID_BUFFERID = 0xFFFFFFFF,RIO_INVALID_CQ = 0x0,RIO_INVALID_RQ = 0x0,RIO_MAX_CQ_SIZE = 0x8000000,RIO_CORRUPT_CQ = 0xFFFFFFFF,};
enum MACRO_RPC {RPC_NT_INVALID_STRING_BINDING = 0xC0020001,RPC_NT_WRONG_KIND_OF_BINDING = 0xC0020002,RPC_NT_INVALID_BINDING = 0xC0020003,RPC_NT_PROTSEQ_NOT_SUPPORTED = 0xC0020004,RPC_NT_INVALID_RPC_PROTSEQ = 0xC0020005,RPC_NT_INVALID_STRING_UUID = 0xC0020006,RPC_NT_INVALID_ENDPOINT_FORMAT = 0xC0020007,RPC_NT_INVALID_NET_ADDR = 0xC0020008,RPC_NT_NO_ENDPOINT_FOUND = 0xC0020009,RPC_NT_INVALID_TIMEOUT = 0xC002000A,RPC_NT_OBJECT_NOT_FOUND = 0xC002000B,RPC_NT_ALREADY_REGISTERED = 0xC002000C,RPC_NT_TYPE_ALREADY_REGISTERED = 0xC002000D,RPC_NT_ALREADY_LISTENING = 0xC002000E,RPC_NT_NO_PROTSEQS_REGISTERED = 0xC002000F,RPC_NT_NOT_LISTENING = 0xC0020010,RPC_NT_UNKNOWN_MGR_TYPE = 0xC0020011,RPC_NT_UNKNOWN_IF = 0xC0020012,RPC_NT_NO_BINDINGS = 0xC0020013,RPC_NT_NO_PROTSEQS = 0xC0020014,RPC_NT_CANT_CREATE_ENDPOINT = 0xC0020015,RPC_NT_OUT_OF_RESOURCES = 0xC0020016,RPC_NT_SERVER_UNAVAILABLE = 0xC0020017,RPC_NT_SERVER_TOO_BUSY = 0xC0020018,RPC_NT_INVALID_NETWORK_OPTIONS = 0xC0020019,RPC_NT_NO_CALL_ACTIVE = 0xC002001A,RPC_NT_CALL_FAILED = 0xC002001B,RPC_NT_CALL_FAILED_DNE = 0xC002001C,RPC_NT_PROTOCOL_ERROR = 0xC002001D,RPC_NT_UNSUPPORTED_TRANS_SYN = 0xC002001F,RPC_NT_UNSUPPORTED_TYPE = 0xC0020021,RPC_NT_INVALID_TAG = 0xC0020022,RPC_NT_INVALID_BOUND = 0xC0020023,RPC_NT_NO_ENTRY_NAME = 0xC0020024,RPC_NT_INVALID_NAME_SYNTAX = 0xC0020025,RPC_NT_UNSUPPORTED_NAME_SYNTAX = 0xC0020026,RPC_NT_UUID_NO_ADDRESS = 0xC0020028,RPC_NT_DUPLICATE_ENDPOINT = 0xC0020029,RPC_NT_UNKNOWN_AUTHN_TYPE = 0xC002002A,RPC_NT_MAX_CALLS_TOO_SMALL = 0xC002002B,RPC_NT_STRING_TOO_LONG = 0xC002002C,RPC_NT_PROTSEQ_NOT_FOUND = 0xC002002D,RPC_NT_PROCNUM_OUT_OF_RANGE = 0xC002002E,RPC_NT_BINDING_HAS_NO_AUTH = 0xC002002F,RPC_NT_UNKNOWN_AUTHN_SERVICE = 0xC0020030,RPC_NT_UNKNOWN_AUTHN_LEVEL = 0xC0020031,RPC_NT_INVALID_AUTH_IDENTITY = 0xC0020032,RPC_NT_UNKNOWN_AUTHZ_SERVICE = 0xC0020033,};
enum MACRO_RPI {RPI_SMB2_SHARECAP_TIMEWARP = 0x2,RPI_SMB2_SHARECAP_DFS = 0x8,RPI_SMB2_SHARECAP_CONTINUOUS_AVAILABILITY = 0x10,RPI_SMB2_SHARECAP_SCALEOUT = 0x20,RPI_SMB2_SHARECAP_CLUSTER = 0x40,RPI_SMB2_SHARECAP_ENCRYPTED = 0x80,RPI_SMB2_SERVERCAP_DFS = 0x1,RPI_SMB2_SERVERCAP_LEASING = 0x2,RPI_SMB2_SERVERCAP_LARGEMTU = 0x4,RPI_SMB2_SERVERCAP_MULTICHANNEL = 0x8,RPI_SMB2_SERVERCAP_PERSISTENT_HANDLES = 0x10,RPI_SMB2_SERVERCAP_DIRECTORY_LEASING = 0x20,RPI_SMB2_SERVERCAP_ENCRYPTION_AWARE = 0x40,};
enum MACRO_RTC {RTC_WAKE_GENERIC_BIT = 6,RTC_WAKE_GENERIC = 64,RTC_WAKE_FROM_S4_BIT = 7,RTC_WAKE_FROM_S4 = 128,};
enum MACRO_RTL {RTL_BALANCED_NODE_RESERVED_PARENT_MASK = 3,};
enum MACRO_SAP {SAP_TYPE_NSAP = 0x1,SAP_TYPE_E164 = 0x2,};
enum MACRO_SBF {SBF_PNPOS_BIT = 0,SBF_PNPOS = 1,SBF_BOOTING_BIT = 1,SBF_BOOTING = 2,SBF_DIAG_BIT = 2,SBF_DIAG = 4,SBF_PARITY_BIT = 7,SBF_PARITY = 128,};
enum MACRO_SCO {SCO_VS_IN_CODING_MASK = 0x300,SCO_VS_IN_CODING_LINEAR = 0x0,SCO_VS_IN_CODING_MULAW = 0x100,SCO_VS_IN_CODING_ALAW = 0x200,SCO_VS_IN_DATA_FORMAT_MASK = 0xC0,SCO_VS_IN_DATA_FORMAT_1C = 0x0,SCO_VS_IN_DATA_FORMAT_2C = 0x40,SCO_VS_IN_DATA_FORMAT_SM = 0x80,SCO_VS_IN_DATA_FORMAT_US = 0xC0,SCO_VS_IN_SAMPLE_SIZE_MASK = 0x20,SCO_VS_IN_SAMPLE_SIZE_8BIT = 0x0,SCO_VS_IN_SAMPLE_SIZE_16BIT = 0x20,SCO_VS_PCM_BIT_POS_MASK = 0x1C,SCO_VS_AIR_CODING_FORMAT_MASK = 0x3,SCO_VS_AIR_CODING_FORMAT_CVSD = 0x0,SCO_VS_AIR_CODING_FORMAT_MULAW = 0x1,SCO_VS_AIR_CODING_FORMAT_ALAW = 0x2,SCO_VS_AIR_CODING_DATA = 0x3,SCO_VS_SETTING_DEFAULT = 0x60,SCO_HV1 = 0x1,SCO_HV2 = 0x2,SCO_HV3 = 0x4,SCO_EV3 = 0x8,SCO_EV4 = 0x10,SCO_EV5 = 0x20,SCO_PKT_ALL = 0x3F,SCO_CF_LINK_AUTHENTICATED = 0x20000,SCO_CF_LINK_ENCRYPTED = 0x40000,SCO_CF_LINK_SUPPRESS_PIN = 0x80000,SCO_CALLBACK_DISCONNECT = 0x1,SCO_VALID_CALLBACK_FLAGS = 0x1,SCO_INDICATION_SCO_REQUEST = 0x1,SCO_INDICATION_ESCO_REQUEST = 0x2,SCO_INDICATION_VALID_FLAGS = 0x3,SCO_CONNECT_RSP_RESPONSE_SUCCESS = 0x0,SCO_CONNECT_RSP_RESPONSE_NO_RESOURCES = 0xD,SCO_CONNECT_RSP_RESPONSE_SECURITY_BLOCK = 0xE,SCO_CONNECT_RSP_RESPONSE_BAD_BD_ADDR = 0xF,SCO_FLUSH_DIRECTION_OUT = 0x1,SCO_FLUSH_DIRECTION_IN = 0x2,SCO_INFO_BASEBAND_AVAILABLE = 0x1,SCO_TRANSFER_DIRECTION_OUT = 0x0,SCO_TRANSFER_DIRECTION_IN = 0x1,SCO_FEATURE_SCO_LINKS = 0x1,SCO_FEATURE_ESCO_LINKS = 0x2,SCO_FEATURE_STREAM_OFFSET_DATA_TAG = 0x10,SCO_DATA_FORMAT_MU_LAW_LOG = 0x1,SCO_DATA_FORMAT_A_LAW_LOG = 0x2,SCO_DATA_FORMAT_CVSD = 0x4,SCO_DATA_FORMAT_TRANSPARENT = 0x8,SCO_DATA_FORMAT_ALL = 0xF,};
enum MACRO_SDP {SDP_ERROR_INVALID_SDP_VERSION = 0x1,SDP_ERROR_INVALID_RECORD_HANDLE = 0x2,SDP_ERROR_INVALID_REQUEST_SYNTAX = 0x3,SDP_ERROR_INVALID_PDU_SIZE = 0x4,SDP_ERROR_INVALID_CONTINUATION_STATE = 0x5,SDP_ERROR_INSUFFICIENT_RESOURCES = 0x6,SDP_ERROR_SUCCESS = 0x0,SDP_ERROR_SERVER_INVALID_RESPONSE = 0x100,SDP_ERROR_SERVER_RESPONSE_DID_NOT_PARSE = 0x200,SDP_ERROR_SERVER_BAD_FORMAT = 0x300,SDP_ERROR_COULD_NOT_SEND_CONTINUE = 0x400,SDP_ERROR_RESPONSE_TOO_LARGE = 0x500,SDP_ATTRIB_RECORD_HANDLE = 0x0,SDP_ATTRIB_CLASS_ID_LIST = 0x1,SDP_ATTRIB_RECORD_STATE = 0x2,SDP_ATTRIB_SERVICE_ID = 0x3,SDP_ATTRIB_PROTOCOL_DESCRIPTOR_LIST = 0x4,SDP_ATTRIB_BROWSE_GROUP_LIST = 0x5,SDP_ATTRIB_LANG_BASE_ATTRIB_ID_LIST = 0x6,SDP_ATTRIB_INFO_TIME_TO_LIVE = 0x7,SDP_ATTRIB_AVAILABILITY = 0x8,SDP_ATTRIB_PROFILE_DESCRIPTOR_LIST = 0x9,SDP_ATTRIB_DOCUMENTATION_URL = 0xA,SDP_ATTRIB_CLIENT_EXECUTABLE_URL = 0xB,SDP_ATTRIB_ICON_URL = 0xC,SDP_ATTRIB_ADDITIONAL_PROTOCOL_DESCRIPTOR_LIST = 0xD,SDP_ATTRIB_PROFILE_SPECIFIC = 0x200,};
enum MACRO_SEC {SEC_FILE = 0x800000,SEC_RESERVE = 0x4000000,SEC_COMMIT = 0x8000000,SEC_LARGE_PAGES = 0x80000000,};
enum MACRO_SEH {SEH_VALIDATION_POLICY_ON = 0,SEH_VALIDATION_POLICY_OFF = 1,SEH_VALIDATION_POLICY_TELEMETRY = 2,SEH_VALIDATION_POLICY_DEFER = 3,};
enum MACRO_SES {SES_DIAGNOSTIC_PAGE_STATUS = 0x2,SES_DIAGNOSTIC_PAGE_CONTROL = 0x2,SES_DIAGNOSTIC_PAGE_ADDITIONAL_ELEMENT_STATUS = 0xA,SES_STATUS_UNSUPPORTED = 0x0,SES_STATUS_OK = 0x1,SES_STATUS_CRITICAL = 0x2,SES_STATUS_NONCRITICAL = 0x3,SES_STATUS_UNRECOVERABLE = 0x4,SES_STATUS_NOT_INSTALLED = 0x5,SES_STATUS_UNKNOWN = 0x6,SES_STATUS_NOT_AVAILABLE = 0x7,SES_STATUS_NO_ACCESS = 0x8,SES_SAS_PROTOCOL_IDENTIFIER = 0x6,};
enum MACRO_SET {SET_OF_INVALID_CONTEXT = 0x30,};
enum MACRO_SFF {SFF_PROTOCOL_INTERFACE_VERSION = 0x102,};
enum MACRO_SID {SID_REVISION = 1,SID_MAX_SUB_AUTHORITIES = 15,SID_RECOMMENDED_SUB_AUTHORITIES = 1,SID_HASH_SIZE = 32,};
enum MACRO_SIO {SIO_IDEAL_SEND_BACKLOG_CHANGE = 536900730,};
enum MACRO_SMB {SMB_NO_UNALIGNED = 0,SMB_USE_UNALIGNED = 1,};
enum MACRO_SOC {SOC_SUBSYSTEM_FAILURE = 0x14B,};
enum MACRO_SOL {SOL_SOCKET = 0xFFFF,};
enum MACRO_SRB {SRB_FUNCTION_EXECUTE_SCSI = 0x0,SRB_FUNCTION_CLAIM_DEVICE = 0x1,SRB_FUNCTION_IO_CONTROL = 0x2,SRB_FUNCTION_RECEIVE_EVENT = 0x3,SRB_FUNCTION_RELEASE_QUEUE = 0x4,SRB_FUNCTION_ATTACH_DEVICE = 0x5,SRB_FUNCTION_RELEASE_DEVICE = 0x6,SRB_FUNCTION_SHUTDOWN = 0x7,SRB_FUNCTION_FLUSH = 0x8,SRB_FUNCTION_ABORT_COMMAND = 0x10,SRB_FUNCTION_RELEASE_RECOVERY = 0x11,SRB_FUNCTION_RESET_BUS = 0x12,SRB_FUNCTION_RESET_DEVICE = 0x13,SRB_FUNCTION_TERMINATE_IO = 0x14,SRB_FUNCTION_FLUSH_QUEUE = 0x15,SRB_FUNCTION_REMOVE_DEVICE = 0x16,SRB_FUNCTION_WMI = 0x17,SRB_FUNCTION_LOCK_QUEUE = 0x18,SRB_FUNCTION_UNLOCK_QUEUE = 0x19,SRB_FUNCTION_QUIESCE_DEVICE = 0x1A,SRB_FUNCTION_RESET_LOGICAL_UNIT = 0x20,SRB_FUNCTION_SET_LINK_TIMEOUT = 0x21,SRB_FUNCTION_LINK_TIMEOUT_OCCURRED = 0x22,SRB_FUNCTION_LINK_TIMEOUT_COMPLETE = 0x23,SRB_FUNCTION_POWER = 0x24,SRB_FUNCTION_PNP = 0x25,SRB_FUNCTION_DUMP_POINTERS = 0x26,SRB_FUNCTION_FREE_DUMP_POINTERS = 0x27,SRB_FUNCTION_STORAGE_REQUEST_BLOCK = 0x28,SRB_STATUS_PENDING = 0x0,SRB_STATUS_SUCCESS = 0x1,SRB_STATUS_ABORTED = 0x2,SRB_STATUS_ABORT_FAILED = 0x3,SRB_STATUS_ERROR = 0x4,SRB_STATUS_BUSY = 0x5,SRB_STATUS_INVALID_REQUEST = 0x6,SRB_STATUS_INVALID_PATH_ID = 0x7,SRB_STATUS_NO_DEVICE = 0x8,SRB_STATUS_TIMEOUT = 0x9,SRB_STATUS_SELECTION_TIMEOUT = 0xA,SRB_STATUS_COMMAND_TIMEOUT = 0xB,SRB_STATUS_MESSAGE_REJECTED = 0xD,SRB_STATUS_BUS_RESET = 0xE,SRB_STATUS_PARITY_ERROR = 0xF,SRB_STATUS_REQUEST_SENSE_FAILED = 0x10,SRB_STATUS_NO_HBA = 0x11,SRB_STATUS_DATA_OVERRUN = 0x12,SRB_STATUS_UNEXPECTED_BUS_FREE = 0x13,SRB_STATUS_PHASE_SEQUENCE_FAILURE = 0x14,SRB_STATUS_BAD_SRB_BLOCK_LENGTH = 0x15,SRB_STATUS_REQUEST_FLUSHED = 0x16,SRB_STATUS_INVALID_LUN = 0x20,SRB_STATUS_INVALID_TARGET_ID = 0x21,SRB_STATUS_BAD_FUNCTION = 0x22,SRB_STATUS_ERROR_RECOVERY = 0x23,SRB_STATUS_NOT_POWERED = 0x24,SRB_STATUS_LINK_DOWN = 0x25,SRB_STATUS_INTERNAL_ERROR = 0x30,SRB_STATUS_QUEUE_FROZEN = 0x40,SRB_STATUS_AUTOSENSE_VALID = 0x80,SRB_FLAGS_QUEUE_ACTION_ENABLE = 0x2,SRB_FLAGS_DISABLE_DISCONNECT = 0x4,SRB_FLAGS_DISABLE_SYNCH_TRANSFER = 0x8,SRB_FLAGS_BYPASS_FROZEN_QUEUE = 0x10,SRB_FLAGS_DISABLE_AUTOSENSE = 0x20,SRB_FLAGS_DATA_IN = 0x40,SRB_FLAGS_DATA_OUT = 0x80,SRB_FLAGS_NO_DATA_TRANSFER = 0x0,SRB_FLAGS_UNSPECIFIED_DIRECTION = 0xC0,SRB_FLAGS_NO_QUEUE_FREEZE = 0x100,SRB_FLAGS_ADAPTER_CACHE_ENABLE = 0x200,SRB_FLAGS_FREE_SENSE_BUFFER = 0x400,SRB_FLAGS_D3_PROCESSING = 0x800,SRB_FLAGS_IS_ACTIVE = 0x10000,SRB_FLAGS_ALLOCATED_FROM_ZONE = 0x20000,SRB_FLAGS_SGLIST_FROM_POOL = 0x40000,SRB_FLAGS_BYPASS_LOCKED_QUEUE = 0x80000,SRB_FLAGS_NO_KEEP_AWAKE = 0x100000,SRB_FLAGS_PORT_DRIVER_ALLOCSENSE = 0x200000,SRB_FLAGS_PORT_DRIVER_SENSEHASPORT = 0x400000,SRB_FLAGS_DONT_START_NEXT_PACKET = 0x800000,SRB_FLAGS_PORT_DRIVER_RESERVED = 0xF000000,SRB_FLAGS_CLASS_DRIVER_RESERVED = 0xF0000000,SRB_SIMPLE_TAG_REQUEST = 0x20,SRB_HEAD_OF_QUEUE_TAG_REQUEST = 0x21,SRB_ORDERED_QUEUE_TAG_REQUEST = 0x22,SRB_WMI_FLAGS_ADAPTER_REQUEST = 0x1,SRB_POWER_FLAGS_ADAPTER_REQUEST = 0x1,SRB_PNP_FLAGS_ADAPTER_REQUEST = 0x1,};
enum MACRO_SRC {SRC_PACKETS_PER_NTSC_FRAME = 250,SRC_PACKETS_PER_PAL_FRAME = 300,};
enum MACRO_SRV {SRV_STATUS_FACILITY_CODE = 0x980000,SRV_SRV_STATUS = 0xC0980000,SRV_DOS_STATUS = 0xC0981000,SRV_SERVER_STATUS = 0xC0982000,SRV_HARDWARE_STATUS = 0xC0983000,SRV_WIN32_STATUS = 0xC098E000,SRV_OS2_STATUS = 0xC098F000,};
enum MACRO_STG {STG_E_INVALIDFUNCTION = 0x80030001,STG_E_FILENOTFOUND = 0x80030002,STG_E_PATHNOTFOUND = 0x80030003,STG_E_TOOMANYOPENFILES = 0x80030004,STG_E_ACCESSDENIED = 0x80030005,STG_E_INVALIDHANDLE = 0x80030006,STG_E_INSUFFICIENTMEMORY = 0x80030008,STG_E_INVALIDPOINTER = 0x80030009,STG_E_NOMOREFILES = 0x80030012,STG_E_DISKISWRITEPROTECTED = 0x80030013,STG_E_SEEKERROR = 0x80030019,STG_E_WRITEFAULT = 0x8003001D,STG_E_READFAULT = 0x8003001E,STG_E_SHAREVIOLATION = 0x80030020,STG_E_LOCKVIOLATION = 0x80030021,STG_E_FILEALREADYEXISTS = 0x80030050,STG_E_INVALIDPARAMETER = 0x80030057,STG_E_MEDIUMFULL = 0x80030070,STG_E_PROPSETMISMATCHED = 0x800300F0,STG_E_ABNORMALAPIEXIT = 0x800300FA,STG_E_INVALIDHEADER = 0x800300FB,STG_E_INVALIDNAME = 0x800300FC,STG_E_UNKNOWN = 0x800300FD,STG_E_UNIMPLEMENTEDFUNCTION = 0x800300FE,STG_E_INVALIDFLAG = 0x800300FF,STG_E_INUSE = 0x80030100,STG_E_NOTCURRENT = 0x80030101,STG_E_REVERTED = 0x80030102,STG_E_CANTSAVE = 0x80030103,STG_E_OLDFORMAT = 0x80030104,STG_E_OLDDLL = 0x80030105,STG_E_SHAREREQUIRED = 0x80030106,STG_E_NOTFILEBASEDSTORAGE = 0x80030107,STG_E_EXTANTMARSHALLINGS = 0x80030108,STG_E_DOCFILECORRUPT = 0x80030109,STG_E_BADBASEADDRESS = 0x80030110,STG_E_DOCFILETOOLARGE = 0x80030111,STG_E_NOTSIMPLEFORMAT = 0x80030112,STG_E_INCOMPLETE = 0x80030201,STG_E_TERMINATED = 0x80030202,STG_S_CONVERTED = 0x30200,STG_S_BLOCK = 0x30201,STG_S_RETRYNOW = 0x30202,STG_S_MONITORING = 0x30203,STG_S_MULTIPLEOPENS = 0x30204,STG_S_CONSOLIDATIONFAILED = 0x30205,STG_S_CANNOTCONSOLIDATE = 0x30206,STG_E_STATUS_COPY_PROTECTION_FAILURE = 0x80030305,STG_E_CSS_AUTHENTICATION_FAILURE = 0x80030306,STG_E_CSS_KEY_NOT_PRESENT = 0x80030307,STG_E_CSS_KEY_NOT_ESTABLISHED = 0x80030308,STG_E_CSS_SCRAMBLED_SECTOR = 0x80030309,STG_E_CSS_REGION_MISMATCH = 0x8003030A,STG_E_RESETS_EXHAUSTED = 0x8003030B,};
enum MACRO_SYS {SYS_OPEN = 20,};
enum MACRO_TAG {DEVICE_EXTENSION_TAG = 0xDEADBEEF,VIRTUAL_DEVICE_EXTENSION_TAG = 0xDEAFBEEF,PORT_EXTENSION_TAG = 0xDEAFCAFE,BUS_EXTENSION_TAG = 0xABACADAB,ISOCH_RESOURCE_TAG = 0xBABEFACE,BANDWIDTH_ALLOCATE_TAG = 0xFEEDBEAD,};
enum MACRO_TBS {TBS_E_INTERNAL_ERROR = 0x80284001,TBS_E_BAD_PARAMETER = 0x80284002,TBS_E_INVALID_OUTPUT_POINTER = 0x80284003,TBS_E_INVALID_CONTEXT = 0x80284004,TBS_E_INSUFFICIENT_BUFFER = 0x80284005,TBS_E_IOERROR = 0x80284006,TBS_E_INVALID_CONTEXT_PARAM = 0x80284007,TBS_E_SERVICE_NOT_RUNNING = 0x80284008,TBS_E_TOO_MANY_TBS_CONTEXTS = 0x80284009,TBS_E_TOO_MANY_RESOURCES = 0x8028400A,TBS_E_SERVICE_START_PENDING = 0x8028400B,TBS_E_PPI_NOT_SUPPORTED = 0x8028400C,TBS_E_COMMAND_CANCELED = 0x8028400D,TBS_E_BUFFER_TOO_LARGE = 0x8028400E,TBS_E_TPM_NOT_FOUND = 0x8028400F,TBS_E_SERVICE_DISABLED = 0x80284010,TBS_E_NO_EVENT_LOG = 0x80284011,TBS_E_ACCESS_DENIED = 0x80284012,TBS_E_PROVISIONING_NOT_ALLOWED = 0x80284013,TBS_E_PPI_FUNCTION_UNSUPPORTED = 0x80284014,TBS_E_OWNERAUTH_NOT_FOUND = 0x80284015,TBS_E_PROVISIONING_INCOMPLETE = 0x80284016,};
enum MACRO_TCP {TCP = 6,};
enum MACRO_TDI {TDI_ADDRESS_TYPE_UNSPEC = 0,TDI_ADDRESS_TYPE_UNIX = 1,TDI_ADDRESS_TYPE_IP = 2,TDI_ADDRESS_TYPE_IMPLINK = 3,TDI_ADDRESS_TYPE_PUP = 4,TDI_ADDRESS_TYPE_CHAOS = 5,TDI_ADDRESS_TYPE_NS = 6,TDI_ADDRESS_TYPE_IPX = 6,TDI_ADDRESS_TYPE_NBS = 7,TDI_ADDRESS_TYPE_ECMA = 8,TDI_ADDRESS_TYPE_DATAKIT = 9,TDI_ADDRESS_TYPE_CCITT = 10,TDI_ADDRESS_TYPE_SNA = 11,TDI_ADDRESS_TYPE_DECnet = 12,TDI_ADDRESS_TYPE_DLI = 13,TDI_ADDRESS_TYPE_LAT = 14,TDI_ADDRESS_TYPE_HYLINK = 15,TDI_ADDRESS_TYPE_APPLETALK = 16,TDI_ADDRESS_TYPE_NETBIOS = 17,TDI_ADDRESS_TYPE_8022 = 18,TDI_ADDRESS_TYPE_OSI_TSAP = 19,TDI_ADDRESS_TYPE_NETONE = 20,TDI_ADDRESS_TYPE_VNS = 21,TDI_ADDRESS_TYPE_NETBIOS_EX = 22,TDI_ADDRESS_TYPE_IP6 = 23,TDI_ADDRESS_TYPE_NETBIOS_UNICODE_EX = 24,TDI_ADDRESS_NETBIOS_TYPE_UNIQUE = 0,TDI_ADDRESS_NETBIOS_TYPE_GROUP = 1,TDI_ADDRESS_NETBIOS_TYPE_QUICK_UNIQUE = 2,TDI_ADDRESS_NETBIOS_TYPE_QUICK_GROUP = 3,TDI_ADDRESS_NETONE_TYPE_UNIQUE = 0,TDI_ADDRESS_NETONE_TYPE_ROTORED = 1,};
enum MACRO_TMP {TMP_MAX = 32767,};
enum MACRO_TMR {TMR_VAL_EXT_BIT = 8,TMR_VAL_EXT = 256,};
enum MACRO_TNS {TNS_TYPE_NATIONAL = 0x40,TNS_PLAN_CARRIER_ID_CODE = 0x1,};
enum MACRO_TOO {TOO_MANY_RECURSIVE_FAULTS = 0x11E,};
enum MACRO_TPC {TPC_E_INVALID_PROPERTY = 0x80040241,TPC_E_NO_DEFAULT_TABLET = 0x80040212,TPC_E_UNKNOWN_PROPERTY = 0x8004021B,TPC_E_INVALID_INPUT_RECT = 0x80040219,TPC_E_INVALID_STROKE = 0x80040222,TPC_E_INITIALIZE_FAIL = 0x80040223,TPC_E_NOT_RELEVANT = 0x80040232,TPC_E_INVALID_PACKET_DESCRIPTION = 0x80040233,TPC_E_RECOGNIZER_NOT_REGISTERED = 0x80040235,TPC_E_INVALID_RIGHTS = 0x80040236,TPC_E_OUT_OF_ORDER_CALL = 0x80040237,TPC_E_QUEUE_FULL = 0x80040238,TPC_E_INVALID_CONFIGURATION = 0x80040239,TPC_E_INVALID_DATA_FROM_RECOGNIZER = 0x8004023A,TPC_S_TRUNCATED = 0x40252,TPC_S_INTERRUPTED = 0x40253,TPC_S_NO_DATA_TO_PROCESS = 0x40254,};
enum MACRO_TPM {TPM_E_ERROR_MASK = 0x80280000,TPM_E_AUTHFAIL = 0x80280001,TPM_E_BADINDEX = 0x80280002,TPM_E_BAD_PARAMETER = 0x80280003,TPM_E_AUDITFAILURE = 0x80280004,TPM_E_CLEAR_DISABLED = 0x80280005,TPM_E_DEACTIVATED = 0x80280006,TPM_E_DISABLED = 0x80280007,TPM_E_DISABLED_CMD = 0x80280008,TPM_E_FAIL = 0x80280009,TPM_E_BAD_ORDINAL = 0x8028000A,TPM_E_INSTALL_DISABLED = 0x8028000B,TPM_E_INVALID_KEYHANDLE = 0x8028000C,TPM_E_KEYNOTFOUND = 0x8028000D,TPM_E_INAPPROPRIATE_ENC = 0x8028000E,TPM_E_MIGRATEFAIL = 0x8028000F,TPM_E_INVALID_PCR_INFO = 0x80280010,TPM_E_NOSPACE = 0x80280011,TPM_E_NOSRK = 0x80280012,TPM_E_NOTSEALED_BLOB = 0x80280013,TPM_E_OWNER_SET = 0x80280014,TPM_E_RESOURCES = 0x80280015,TPM_E_SHORTRANDOM = 0x80280016,TPM_E_SIZE = 0x80280017,TPM_E_WRONGPCRVAL = 0x80280018,TPM_E_BAD_PARAM_SIZE = 0x80280019,TPM_E_SHA_THREAD = 0x8028001A,TPM_E_SHA_ERROR = 0x8028001B,TPM_E_FAILEDSELFTEST = 0x8028001C,TPM_E_AUTH2FAIL = 0x8028001D,TPM_E_BADTAG = 0x8028001E,TPM_E_IOERROR = 0x8028001F,TPM_E_ENCRYPT_ERROR = 0x80280020,TPM_E_DECRYPT_ERROR = 0x80280021,TPM_E_INVALID_AUTHHANDLE = 0x80280022,TPM_E_NO_ENDORSEMENT = 0x80280023,TPM_E_INVALID_KEYUSAGE = 0x80280024,TPM_E_WRONG_ENTITYTYPE = 0x80280025,TPM_E_INVALID_POSTINIT = 0x80280026,TPM_E_INAPPROPRIATE_SIG = 0x80280027,TPM_E_BAD_KEY_PROPERTY = 0x80280028,TPM_E_BAD_MIGRATION = 0x80280029,TPM_E_BAD_SCHEME = 0x8028002A,TPM_E_BAD_DATASIZE = 0x8028002B,TPM_E_BAD_MODE = 0x8028002C,TPM_E_BAD_PRESENCE = 0x8028002D,TPM_E_BAD_VERSION = 0x8028002E,TPM_E_NO_WRAP_TRANSPORT = 0x8028002F,TPM_E_AUDITFAIL_UNSUCCESSFUL = 0x80280030,TPM_E_AUDITFAIL_SUCCESSFUL = 0x80280031,TPM_E_NOTRESETABLE = 0x80280032,TPM_E_NOTLOCAL = 0x80280033,TPM_E_BAD_TYPE = 0x80280034,TPM_E_INVALID_RESOURCE = 0x80280035,TPM_E_NOTFIPS = 0x80280036,TPM_E_INVALID_FAMILY = 0x80280037,TPM_E_NO_NV_PERMISSION = 0x80280038,TPM_E_REQUIRES_SIGN = 0x80280039,TPM_E_KEY_NOTSUPPORTED = 0x8028003A,TPM_E_AUTH_CONFLICT = 0x8028003B,TPM_E_AREA_LOCKED = 0x8028003C,TPM_E_BAD_LOCALITY = 0x8028003D,TPM_E_READ_ONLY = 0x8028003E,TPM_E_PER_NOWRITE = 0x8028003F,TPM_E_FAMILYCOUNT = 0x80280040,TPM_E_WRITE_LOCKED = 0x80280041,TPM_E_BAD_ATTRIBUTES = 0x80280042,TPM_E_INVALID_STRUCTURE = 0x80280043,TPM_E_KEY_OWNER_CONTROL = 0x80280044,TPM_E_BAD_COUNTER = 0x80280045,TPM_E_NOT_FULLWRITE = 0x80280046,TPM_E_CONTEXT_GAP = 0x80280047,TPM_E_MAXNVWRITES = 0x80280048,TPM_E_NOOPERATOR = 0x80280049,TPM_E_RESOURCEMISSING = 0x8028004A,TPM_E_DELEGATE_LOCK = 0x8028004B,TPM_E_DELEGATE_FAMILY = 0x8028004C,TPM_E_DELEGATE_ADMIN = 0x8028004D,TPM_E_TRANSPORT_NOTEXCLUSIVE = 0x8028004E,TPM_E_OWNER_CONTROL = 0x8028004F,TPM_E_DAA_RESOURCES = 0x80280050,TPM_E_DAA_INPUT_DATA0 = 0x80280051,TPM_E_DAA_INPUT_DATA1 = 0x80280052,TPM_E_DAA_ISSUER_SETTINGS = 0x80280053,TPM_E_DAA_TPM_SETTINGS = 0x80280054,TPM_E_DAA_STAGE = 0x80280055,TPM_E_DAA_ISSUER_VALIDITY = 0x80280056,TPM_E_DAA_WRONG_W = 0x80280057,TPM_E_BAD_HANDLE = 0x80280058,TPM_E_BAD_DELEGATE = 0x80280059,TPM_E_BADCONTEXT = 0x8028005A,TPM_E_TOOMANYCONTEXTS = 0x8028005B,TPM_E_MA_TICKET_SIGNATURE = 0x8028005C,TPM_E_MA_DESTINATION = 0x8028005D,TPM_E_MA_SOURCE = 0x8028005E,TPM_E_MA_AUTHORITY = 0x8028005F,TPM_E_PERMANENTEK = 0x80280061,TPM_E_BAD_SIGNATURE = 0x80280062,TPM_E_NOCONTEXTSPACE = 0x80280063,TPM_E_COMMAND_BLOCKED = 0x80280400,TPM_E_INVALID_HANDLE = 0x80280401,TPM_E_DUPLICATE_VHANDLE = 0x80280402,TPM_E_EMBEDDED_COMMAND_BLOCKED = 0x80280403,TPM_E_EMBEDDED_COMMAND_UNSUPPORTED = 0x80280404,TPM_E_RETRY = 0x80280800,TPM_E_NEEDS_SELFTEST = 0x80280801,TPM_E_DOING_SELFTEST = 0x80280802,TPM_E_DEFEND_LOCK_RUNNING = 0x80280803,};
enum MACRO_TWO {TWO_FOUR_CHANNEL_AUDIO = 0x8,};
enum MACRO_TXF {TXF_MINIVERSION_DEFAULT_VIEW = 0xFFFE,};
enum MACRO_URB {URB_FUNCTION_SELECT_CONFIGURATION = 0x0,URB_FUNCTION_SELECT_INTERFACE = 0x1,URB_FUNCTION_ABORT_PIPE = 0x2,URB_FUNCTION_TAKE_FRAME_LENGTH_CONTROL = 0x3,URB_FUNCTION_RELEASE_FRAME_LENGTH_CONTROL = 0x4,URB_FUNCTION_GET_FRAME_LENGTH = 0x5,URB_FUNCTION_SET_FRAME_LENGTH = 0x6,URB_FUNCTION_GET_CURRENT_FRAME_NUMBER = 0x7,URB_FUNCTION_CONTROL_TRANSFER = 0x8,URB_FUNCTION_BULK_OR_INTERRUPT_TRANSFER = 0x9,URB_FUNCTION_ISOCH_TRANSFER = 0xA,URB_FUNCTION_GET_DESCRIPTOR_FROM_DEVICE = 0xB,URB_FUNCTION_SET_DESCRIPTOR_TO_DEVICE = 0xC,URB_FUNCTION_SET_FEATURE_TO_DEVICE = 0xD,URB_FUNCTION_SET_FEATURE_TO_INTERFACE = 0xE,URB_FUNCTION_SET_FEATURE_TO_ENDPOINT = 0xF,URB_FUNCTION_CLEAR_FEATURE_TO_DEVICE = 0x10,URB_FUNCTION_CLEAR_FEATURE_TO_INTERFACE = 0x11,URB_FUNCTION_CLEAR_FEATURE_TO_ENDPOINT = 0x12,URB_FUNCTION_GET_STATUS_FROM_DEVICE = 0x13,URB_FUNCTION_GET_STATUS_FROM_INTERFACE = 0x14,URB_FUNCTION_GET_STATUS_FROM_ENDPOINT = 0x15,URB_FUNCTION_RESERVED_0X0016 = 0x16,URB_FUNCTION_VENDOR_DEVICE = 0x17,URB_FUNCTION_VENDOR_INTERFACE = 0x18,URB_FUNCTION_VENDOR_ENDPOINT = 0x19,URB_FUNCTION_CLASS_DEVICE = 0x1A,URB_FUNCTION_CLASS_INTERFACE = 0x1B,URB_FUNCTION_CLASS_ENDPOINT = 0x1C,URB_FUNCTION_RESERVE_0X001D = 0x1D,URB_FUNCTION_SYNC_RESET_PIPE_AND_CLEAR_STALL = 0x1E,URB_FUNCTION_CLASS_OTHER = 0x1F,URB_FUNCTION_VENDOR_OTHER = 0x20,URB_FUNCTION_GET_STATUS_FROM_OTHER = 0x21,URB_FUNCTION_CLEAR_FEATURE_TO_OTHER = 0x22,URB_FUNCTION_SET_FEATURE_TO_OTHER = 0x23,URB_FUNCTION_GET_DESCRIPTOR_FROM_ENDPOINT = 0x24,URB_FUNCTION_SET_DESCRIPTOR_TO_ENDPOINT = 0x25,URB_FUNCTION_GET_CONFIGURATION = 0x26,URB_FUNCTION_GET_INTERFACE = 0x27,URB_FUNCTION_GET_DESCRIPTOR_FROM_INTERFACE = 0x28,URB_FUNCTION_SET_DESCRIPTOR_TO_INTERFACE = 0x29,URB_FUNCTION_GET_MS_FEATURE_DESCRIPTOR = 0x2A,URB_FUNCTION_SYNC_RESET_PIPE = 0x30,URB_FUNCTION_SYNC_CLEAR_STALL = 0x31,URB_FUNCTION_CONTROL_TRANSFER_EX = 0x32,URB_FUNCTION_RESERVE_0X0033 = 0x33,URB_FUNCTION_RESERVE_0X0034 = 0x34,URB_FUNCTION_OPEN_STATIC_STREAMS = 0x35,URB_FUNCTION_CLOSE_STATIC_STREAMS = 0x36,URB_FUNCTION_BULK_OR_INTERRUPT_TRANSFER_USING_CHAINED_MDL = 0x37,URB_FUNCTION_ISOCH_TRANSFER_USING_CHAINED_MDL = 0x38,URB_FUNCTION_RESERVE_0X002B = 0x2B,URB_FUNCTION_RESERVE_0X002C = 0x2C,URB_FUNCTION_RESERVE_0X002D = 0x2D,URB_FUNCTION_RESERVE_0X002E = 0x2E,URB_FUNCTION_RESERVE_0X002F = 0x2F,URB_FUNCTION_RESET_PIPE = 0x1E,};
enum MACRO_USB {USB_REQUEST_GET_STATUS = 0x0,USB_REQUEST_CLEAR_FEATURE = 0x1,USB_REQUEST_SET_FEATURE = 0x3,USB_REQUEST_SET_ADDRESS = 0x5,USB_REQUEST_GET_DESCRIPTOR = 0x6,USB_REQUEST_SET_DESCRIPTOR = 0x7,USB_REQUEST_GET_CONFIGURATION = 0x8,USB_REQUEST_SET_CONFIGURATION = 0x9,USB_REQUEST_GET_INTERFACE = 0xA,USB_REQUEST_SET_INTERFACE = 0xB,USB_REQUEST_SYNC_FRAME = 0xC,USB_REQUEST_SET_SEL = 0x30,USB_REQUEST_ISOCH_DELAY = 0x31,USB_DEVICE_DESCRIPTOR_TYPE = 0x1,USB_CONFIGURATION_DESCRIPTOR_TYPE = 0x2,USB_STRING_DESCRIPTOR_TYPE = 0x3,USB_INTERFACE_DESCRIPTOR_TYPE = 0x4,USB_ENDPOINT_DESCRIPTOR_TYPE = 0x5,USB_DEVICE_QUALIFIER_DESCRIPTOR_TYPE = 0x6,USB_OTHER_SPEED_CONFIGURATION_DESCRIPTOR_TYPE = 0x7,USB_INTERFACE_POWER_DESCRIPTOR_TYPE = 0x8,USB_OTG_DESCRIPTOR_TYPE = 0x9,USB_DEBUG_DESCRIPTOR_TYPE = 0xA,USB_INTERFACE_ASSOCIATION_DESCRIPTOR_TYPE = 0xB,USB_BOS_DESCRIPTOR_TYPE = 0xF,USB_DEVICE_CAPABILITY_DESCRIPTOR_TYPE = 0x10,USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR_TYPE = 0x30,USB_RESERVED_DESCRIPTOR_TYPE = 0x6,USB_CONFIG_POWER_DESCRIPTOR_TYPE = 0x7,USB_FEATURE_ENDPOINT_STALL = 0x0,USB_FEATURE_REMOTE_WAKEUP = 0x1,USB_FEATURE_TEST_MODE = 0x2,USB_FEATURE_FUNCTION_SUSPEND = 0x0,USB_FEATURE_U1_ENABLE = 0x30,USB_FEATURE_U2_ENABLE = 0x31,USB_FEATURE_LTM_ENABLE = 0x32,USB_GETSTATUS_SELF_POWERED = 0x1,USB_GETSTATUS_REMOTE_WAKEUP_ENABLED = 0x2,USB_GETSTATUS_U1_ENABLE = 0x4,USB_GETSTATUS_U2_ENABLE = 0x8,USB_GETSTATUS_LTM_ENABLE = 0x10,USB_DEVICE_CLASS_RESERVED = 0x0,USB_DEVICE_CLASS_AUDIO = 0x1,USB_DEVICE_CLASS_COMMUNICATIONS = 0x2,USB_DEVICE_CLASS_HUMAN_INTERFACE = 0x3,USB_DEVICE_CLASS_MONITOR = 0x4,USB_DEVICE_CLASS_PHYSICAL_INTERFACE = 0x5,USB_DEVICE_CLASS_POWER = 0x6,USB_DEVICE_CLASS_IMAGE = 0x6,USB_DEVICE_CLASS_PRINTER = 0x7,USB_DEVICE_CLASS_STORAGE = 0x8,USB_DEVICE_CLASS_HUB = 0x9,USB_DEVICE_CLASS_CDC_DATA = 0xA,USB_DEVICE_CLASS_SMART_CARD = 0xB,USB_DEVICE_CLASS_CONTENT_SECURITY = 0xD,USB_DEVICE_CLASS_VIDEO = 0xE,USB_DEVICE_CLASS_PERSONAL_HEALTHCARE = 0xF,USB_DEVICE_CLASS_DIAGNOSTIC_DEVICE = 0xDC,USB_DEVICE_CLASS_WIRELESS_CONTROLLER = 0xE0,USB_DEVICE_CLASS_MISCELLANEOUS = 0xEF,USB_DEVICE_CLASS_APPLICATION_SPECIFIC = 0xFE,USB_DEVICE_CLASS_VENDOR_SPECIFIC = 0xFF,USB_DEVICE_CAPABILITY_WIRELESS_USB = 0x1,USB_DEVICE_CAPABILITY_USB20_EXTENSION = 0x2,USB_DEVICE_CAPABILITY_SUPERSPEED_USB = 0x3,USB_DEVICE_CAPABILITY_CONTAINER_ID = 0x4,USB_DEVICE_CAPABILITY_USB20_EXTENSION_BMATTRIBUTES_RESERVED_MASK = 0xFFFF00E1,USB_DEVICE_CAPABILITY_SUPERSPEED_BMATTRIBUTES_RESERVED_MASK = 0xFD,USB_DEVICE_CAPABILITY_SUPERSPEED_BMATTRIBUTES_LTM_CAPABLE = 0x2,USB_DEVICE_CAPABILITY_SUPERSPEED_SPEEDS_SUPPORTED_RESERVED_MASK = 0xFFF0,USB_DEVICE_CAPABILITY_SUPERSPEED_SPEEDS_SUPPORTED_LOW = 0x1,USB_DEVICE_CAPABILITY_SUPERSPEED_SPEEDS_SUPPORTED_FULL = 0x2,USB_DEVICE_CAPABILITY_SUPERSPEED_SPEEDS_SUPPORTED_HIGH = 0x4,USB_DEVICE_CAPABILITY_SUPERSPEED_SPEEDS_SUPPORTED_SUPER = 0x8,USB_DEVICE_CAPABILITY_SUPERSPEED_U1_DEVICE_EXIT_MAX_VALUE = 0xA,USB_DEVICE_CAPABILITY_SUPERSPEED_U2_DEVICE_EXIT_MAX_VALUE = 0x7FF,USB_DEVICE_CAPABILITY_MAX_U1_LATENCY = 0xA,USB_DEVICE_CAPABILITY_MAX_U2_LATENCY = 0x7FF,USB_CONFIG_POWERED_MASK = 0xC0,USB_CONFIG_BUS_POWERED = 0x80,USB_CONFIG_SELF_POWERED = 0x40,USB_CONFIG_REMOTE_WAKEUP = 0x20,USB_CONFIG_RESERVED = 0x1F,USB_ENDPOINT_DIRECTION_MASK = 0x80,USB_ENDPOINT_ADDRESS_MASK = 0xF,USB_ENDPOINT_TYPE_MASK = 0x3,USB_ENDPOINT_TYPE_CONTROL = 0x0,USB_ENDPOINT_TYPE_ISOCHRONOUS = 0x1,USB_ENDPOINT_TYPE_BULK = 0x2,USB_ENDPOINT_TYPE_INTERRUPT = 0x3,USB_ENDPOINT_TYPE_BULK_RESERVED_MASK = 0xFC,USB_ENDPOINT_TYPE_CONTROL_RESERVED_MASK = 0xFC,USB_20_ENDPOINT_TYPE_INTERRUPT_RESERVED_MASK = 0xFC,USB_30_ENDPOINT_TYPE_INTERRUPT_RESERVED_MASK = 0xCC,USB_ENDPOINT_TYPE_ISOCHRONOUS_RESERVED_MASK = 0xC0,USB_30_ENDPOINT_TYPE_INTERRUPT_USAGE_MASK = 0x30,USB_30_ENDPOINT_TYPE_INTERRUPT_USAGE_PERIODIC = 0x0,USB_30_ENDPOINT_TYPE_INTERRUPT_USAGE_NOTIFICATION = 0x10,USB_30_ENDPOINT_TYPE_INTERRUPT_USAGE_RESERVED10 = 0x20,USB_30_ENDPOINT_TYPE_INTERRUPT_USAGE_RESERVED11 = 0x30,USB_ENDPOINT_TYPE_ISOCHRONOUS_SYNCHRONIZATION_MASK = 0xC,USB_ENDPOINT_TYPE_ISOCHRONOUS_SYNCHRONIZATION_NO_SYNCHRONIZATION = 0x0,USB_ENDPOINT_TYPE_ISOCHRONOUS_SYNCHRONIZATION_ASYNCHRONOUS = 0x4,USB_ENDPOINT_TYPE_ISOCHRONOUS_SYNCHRONIZATION_ADAPTIVE = 0x8,USB_ENDPOINT_TYPE_ISOCHRONOUS_SYNCHRONIZATION_SYNCHRONOUS = 0xC,USB_ENDPOINT_TYPE_ISOCHRONOUS_USAGE_MASK = 0x30,USB_ENDPOINT_TYPE_ISOCHRONOUS_USAGE_DATA_ENDOINT = 0x0,USB_ENDPOINT_TYPE_ISOCHRONOUS_USAGE_FEEDBACK_ENDPOINT = 0x10,USB_ENDPOINT_TYPE_ISOCHRONOUS_USAGE_IMPLICIT_FEEDBACK_DATA_ENDPOINT = 0x20,USB_ENDPOINT_TYPE_ISOCHRONOUS_USAGE_RESERVED = 0x30,USB_ENDPOINT_SUPERSPEED_BULK_MAX_PACKET_SIZE = 0x400,USB_ENDPOINT_SUPERSPEED_CONTROL_MAX_PACKET_SIZE = 0x200,USB_ENDPOINT_SUPERSPEED_ISO_MAX_PACKET_SIZE = 0x400,USB_ENDPOINT_SUPERSPEED_INTERRUPT_MAX_PACKET_SIZE = 0x400,};
enum MACRO_USE {USE_PRIMARY_PASSWORD = 0x1,};
enum MACRO_USN {USN_PAGE_SIZE = 0x1000,USN_REASON_DATA_OVERWRITE = 0x1,USN_REASON_DATA_EXTEND = 0x2,USN_REASON_DATA_TRUNCATION = 0x4,USN_REASON_NAMED_DATA_OVERWRITE = 0x10,USN_REASON_NAMED_DATA_EXTEND = 0x20,USN_REASON_NAMED_DATA_TRUNCATION = 0x40,USN_REASON_FILE_CREATE = 0x100,USN_REASON_FILE_DELETE = 0x200,USN_REASON_EA_CHANGE = 0x400,USN_REASON_SECURITY_CHANGE = 0x800,USN_REASON_RENAME_OLD_NAME = 0x1000,USN_REASON_RENAME_NEW_NAME = 0x2000,USN_REASON_INDEXABLE_CHANGE = 0x4000,USN_REASON_BASIC_INFO_CHANGE = 0x8000,USN_REASON_HARD_LINK_CHANGE = 0x10000,USN_REASON_COMPRESSION_CHANGE = 0x20000,USN_REASON_ENCRYPTION_CHANGE = 0x40000,USN_REASON_OBJECT_ID_CHANGE = 0x80000,USN_REASON_REPARSE_POINT_CHANGE = 0x100000,USN_REASON_STREAM_CHANGE = 0x200000,USN_REASON_TRANSACTED_CHANGE = 0x400000,USN_REASON_INTEGRITY_CHANGE = 0x800000,USN_REASON_CLOSE = 0x80000000,USN_DELETE_FLAG_DELETE = 0x1,USN_DELETE_FLAG_NOTIFY = 0x2,USN_DELETE_VALID_FLAGS = 0x3,USN_SOURCE_DATA_MANAGEMENT = 0x1,USN_SOURCE_AUXILIARY_DATA = 0x2,USN_SOURCE_REPLICATION_MANAGEMENT = 0x4,};
enum MACRO_VER {VER_SERVER_NT = 0x80000000,VER_WORKSTATION_NT = 0x40000000,VER_SUITE_SMALLBUSINESS = 0x1,VER_SUITE_ENTERPRISE = 0x2,VER_SUITE_BACKOFFICE = 0x4,VER_SUITE_COMMUNICATIONS = 0x8,VER_SUITE_TERMINAL = 0x10,VER_SUITE_SMALLBUSINESS_RESTRICTED = 0x20,VER_SUITE_EMBEDDEDNT = 0x40,VER_SUITE_DATACENTER = 0x80,VER_SUITE_SINGLEUSERTS = 0x100,VER_SUITE_PERSONAL = 0x200,VER_SUITE_BLADE = 0x400,VER_SUITE_EMBEDDED_RESTRICTED = 0x800,VER_SUITE_SECURITY_APPLIANCE = 0x1000,VER_SUITE_STORAGE_SERVER = 0x2000,VER_SUITE_COMPUTE_SERVER = 0x4000,VER_SUITE_WH_SERVER = 0x8000,};
enum MACRO_VGA {VGA_NOT_PRESENT_BIT = 2,VGA_NOT_PRESENT = 4,};
enum MACRO_VHD {VHD_BOOT_INITIALIZATION_FAILED = 0x12F,};
enum MACRO_VPB {VPB_MOUNTED = 0x1,VPB_LOCKED = 0x2,VPB_PERSISTENT = 0x4,VPB_REMOVE_PENDING = 0x8,VPB_RAW_MOUNT = 0x10,VPB_DIRECT_WRITES_ALLOWED = 0x20,};
enum MACRO_VPD {VPD_MAX_BUFFER_SIZE = 0xFF,VPD_SUPPORTED_PAGES = 0x0,VPD_SERIAL_NUMBER = 0x80,VPD_DEVICE_IDENTIFIERS = 0x83,VPD_MEDIA_SERIAL_NUMBER = 0x84,VPD_SOFTWARE_INTERFACE_IDENTIFIERS = 0x84,VPD_NETWORK_MANAGEMENT_ADDRESSES = 0x85,VPD_EXTENDED_INQUIRY_DATA = 0x86,VPD_MODE_PAGE_POLICY = 0x87,VPD_SCSI_PORTS = 0x88,VPD_ATA_INFORMATION = 0x89,VPD_THIRD_PARTY_COPY = 0x8F,VPD_BLOCK_LIMITS = 0xB0,VPD_BLOCK_DEVICE_CHARACTERISTICS = 0xB1,VPD_LOGICAL_BLOCK_PROVISIONING = 0xB2,};
enum MACRO_VRL {VRL_PREDEFINED_CLASS_BEGIN = 1,VRL_CUSTOM_CLASS_BEGIN = 256,VRL_CLASS_CONSISTENCY = 1,VRL_ENABLE_KERNEL_BREAKS = 2147483648,};
enum MACRO_WAN {WAN_PROTOCOL_KEEPS_STATS = 0x1,};
enum MACRO_WDM {WDM_MAJORVERSION = 0x6,WDM_MINORVERSION = 0x0,};
enum MACRO_WEB {WEB_E_UNSUPPORTED_FORMAT = 0x83750001,WEB_E_INVALID_XML = 0x83750002,WEB_E_MISSING_REQUIRED_ELEMENT = 0x83750003,WEB_E_MISSING_REQUIRED_ATTRIBUTE = 0x83750004,WEB_E_UNEXPECTED_CONTENT = 0x83750005,WEB_E_RESOURCE_TOO_LARGE = 0x83750006,WEB_E_INVALID_JSON_STRING = 0x83750007,WEB_E_INVALID_JSON_NUMBER = 0x83750008,WEB_E_JSON_VALUE_NOT_FOUND = 0x83750009,};
enum MACRO_WER {WER_S_REPORT_DEBUG = 0x1B0000,WER_S_REPORT_UPLOADED = 0x1B0001,WER_S_REPORT_QUEUED = 0x1B0002,WER_S_DISABLED = 0x1B0003,WER_S_SUSPENDED_UPLOAD = 0x1B0004,WER_S_DISABLED_QUEUE = 0x1B0005,WER_S_DISABLED_ARCHIVE = 0x1B0006,WER_S_REPORT_ASYNC = 0x1B0007,WER_S_IGNORE_ASSERT_INSTANCE = 0x1B0008,WER_S_IGNORE_ALL_ASSERTS = 0x1B0009,WER_S_ASSERT_CONTINUE = 0x1B000A,WER_S_THROTTLED = 0x1B000B,WER_E_CRASH_FAILURE = 0x801B8000,WER_E_CANCELED = 0x801B8001,WER_E_NETWORK_FAILURE = 0x801B8002,WER_E_NOT_INITIALIZED = 0x801B8003,WER_E_ALREADY_REPORTING = 0x801B8004,};
enum MACRO_WMI {WMI_TAPE_DRIVE_PARAMETERS_MaximumBlockSize_ID = 1,WMI_TAPE_DRIVE_PARAMETERS_MinimumBlockSize_ID = 2,WMI_TAPE_DRIVE_PARAMETERS_DefaultBlockSize_ID = 3,WMI_TAPE_DRIVE_PARAMETERS_MaximumPartitionCount_ID = 4,WMI_TAPE_DRIVE_PARAMETERS_CompressionCapable_ID = 5,WMI_TAPE_DRIVE_PARAMETERS_CompressionEnabled_ID = 6,WMI_TAPE_DRIVE_PARAMETERS_ReportSetmarks_ID = 7,WMI_TAPE_DRIVE_PARAMETERS_HardwareErrorCorrection_ID = 8,WMI_TAPE_MEDIA_PARAMETERS_MaximumCapacity_ID = 1,WMI_TAPE_MEDIA_PARAMETERS_AvailableCapacity_ID = 2,WMI_TAPE_MEDIA_PARAMETERS_BlockSize_ID = 3,WMI_TAPE_MEDIA_PARAMETERS_PartitionCount_ID = 4,WMI_TAPE_MEDIA_PARAMETERS_MediaWriteProtected_ID = 5,WMI_TAPE_SYMBOLIC_NAME_TapeSymbolicName_ID = 1,WMI_TAPE_PROBLEM_WARNING_DriveProblemType_ID = 1,WMI_TAPE_PROBLEM_WARNING_TapeData_ID = 2,WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectedWithoutDelay_ID = 1,WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectedWithDelay_ID = 2,WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalErrors_ID = 3,WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalCorrectedErrors_ID = 4,WMI_TAPE_PROBLEM_IO_ERROR_ReadTotalUncorrectedErrors_ID = 5,WMI_TAPE_PROBLEM_IO_ERROR_ReadCorrectionAlgorithmProcessed_ID = 6,WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectedWithoutDelay_ID = 7,WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectedWithDelay_ID = 8,WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalErrors_ID = 9,WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalCorrectedErrors_ID = 10,WMI_TAPE_PROBLEM_IO_ERROR_WriteTotalUncorrectedErrors_ID = 11,WMI_TAPE_PROBLEM_IO_ERROR_WriteCorrectionAlgorithmProcessed_ID = 12,WMI_TAPE_PROBLEM_IO_ERROR_NonMediumErrors_ID = 13,WMI_TAPE_PROBLEM_DEVICE_ERROR_ReadWarning_ID = 1,WMI_TAPE_PROBLEM_DEVICE_ERROR_WriteWarning_ID = 2,WMI_TAPE_PROBLEM_DEVICE_ERROR_HardError_ID = 3,WMI_TAPE_PROBLEM_DEVICE_ERROR_ReadFailure_ID = 4,WMI_TAPE_PROBLEM_DEVICE_ERROR_WriteFailure_ID = 5,WMI_TAPE_PROBLEM_DEVICE_ERROR_UnsupportedFormat_ID = 6,WMI_TAPE_PROBLEM_DEVICE_ERROR_TapeSnapped_ID = 7,WMI_TAPE_PROBLEM_DEVICE_ERROR_DriveRequiresCleaning_ID = 8,WMI_TAPE_PROBLEM_DEVICE_ERROR_TimetoCleanDrive_ID = 9,WMI_TAPE_PROBLEM_DEVICE_ERROR_DriveHardwareError_ID = 10,WMI_TAPE_PROBLEM_DEVICE_ERROR_ScsiInterfaceError_ID = 11,WMI_TAPE_PROBLEM_DEVICE_ERROR_MediaLife_ID = 12,WMI_CHANGER_PARAMETERS_NumberOfSlots_ID = 1,WMI_CHANGER_PARAMETERS_NumberOfDrives_ID = 2,WMI_CHANGER_PARAMETERS_NumberOfIEPorts_ID = 3,WMI_CHANGER_PARAMETERS_NumberOfTransports_ID = 4,WMI_CHANGER_PARAMETERS_NumberOfDoors_ID = 5,WMI_CHANGER_PARAMETERS_NumberOfCleanerSlots_ID = 6,WMI_CHANGER_PARAMETERS_MagazineSize_ID = 7,WMI_CHANGER_PROBLEM_WARNING_ChangerProblemType_ID = 1,WMI_CHANGER_PROBLEM_WARNING_ChangerData_ID = 2,WMI_CHANGER_PROBLEM_DEVICE_ERROR_ChangerProblemType_ID = 1,};
enum MACRO_WPN {WPN_E_CHANNEL_CLOSED = 0x803E0100,WPN_E_CHANNEL_REQUEST_NOT_COMPLETE = 0x803E0101,WPN_E_INVALID_APP = 0x803E0102,WPN_E_OUTSTANDING_CHANNEL_REQUEST = 0x803E0103,WPN_E_DUPLICATE_CHANNEL = 0x803E0104,WPN_E_PLATFORM_UNAVAILABLE = 0x803E0105,WPN_E_NOTIFICATION_POSTED = 0x803E0106,WPN_E_NOTIFICATION_HIDDEN = 0x803E0107,WPN_E_NOTIFICATION_NOT_POSTED = 0x803E0108,WPN_E_CLOUD_DISABLED = 0x803E0109,WPN_E_CLOUD_INCAPABLE = 0x803E0110,WPN_E_CLOUD_AUTH_UNAVAILABLE = 0x803E011A,WPN_E_CLOUD_SERVICE_UNAVAILABLE = 0x803E011B,WPN_E_FAILED_LOCK_SCREEN_UPDATE_INTIALIZATION = 0x803E011C,WPN_E_NOTIFICATION_DISABLED = 0x803E0111,WPN_E_NOTIFICATION_INCAPABLE = 0x803E0112,WPN_E_INTERNET_INCAPABLE = 0x803E0113,WPN_E_NOTIFICATION_TYPE_DISABLED = 0x803E0114,WPN_E_NOTIFICATION_SIZE = 0x803E0115,WPN_E_TAG_SIZE = 0x803E0116,WPN_E_ACCESS_DENIED = 0x803E0117,WPN_E_DUPLICATE_REGISTRATION = 0x803E0118,WPN_E_PUSH_NOTIFICATION_INCAPABLE = 0x803E0119,WPN_E_DEV_ID_SIZE = 0x803E0120,WPN_E_TAG_ALPHANUMERIC = 0x803E012A,WPN_E_INVALID_HTTP_STATUS_CODE = 0x803E012B,WPN_E_OUT_OF_SESSION = 0x803E0200,WPN_E_POWER_SAVE = 0x803E0201,WPN_E_IMAGE_NOT_FOUND_IN_CACHE = 0x803E0202,WPN_E_ALL_URL_NOT_COMPLETED = 0x803E0203,WPN_E_INVALID_CLOUD_IMAGE = 0x803E0204,WPN_E_NOTIFICATION_ID_MATCHED = 0x803E0205,WPN_E_CALLBACK_ALREADY_REGISTERED = 0x803E0206,WPN_E_TOAST_NOTIFICATION_DROPPED = 0x803E0207,WPN_E_STORAGE_LOCKED = 0x803E0208,};
enum MACRO_WSK {WSK_SO_BASE = 0x4000,};
enum MACRO_WST {WST_TVTUNER_CHANGE_BEGIN_TUNE = 0x1000,WST_TVTUNER_CHANGE_END_TUNE = 0x2000,};
enum MACRO_XPF {XPF_CACHE_CHECK_TRANSACTIONTYPE_INSTRUCTION = 0,XPF_CACHE_CHECK_TRANSACTIONTYPE_DATAACCESS = 1,XPF_CACHE_CHECK_TRANSACTIONTYPE_GENERIC = 2,XPF_CACHE_CHECK_OPERATION_GENERIC = 0,XPF_CACHE_CHECK_OPERATION_GENREAD = 1,XPF_CACHE_CHECK_OPERATION_GENWRITE = 2,XPF_CACHE_CHECK_OPERATION_DATAREAD = 3,XPF_CACHE_CHECK_OPERATION_DATAWRITE = 4,XPF_CACHE_CHECK_OPERATION_INSTRUCTIONFETCH = 5,XPF_CACHE_CHECK_OPERATION_PREFETCH = 6,XPF_CACHE_CHECK_OPERATION_EVICTION = 7,XPF_CACHE_CHECK_OPERATION_SNOOP = 8,XPF_TLB_CHECK_TRANSACTIONTYPE_INSTRUCTION = 0,XPF_TLB_CHECK_TRANSACTIONTYPE_DATAACCESS = 1,XPF_TLB_CHECK_TRANSACTIONTYPE_GENERIC = 2,XPF_TLB_CHECK_OPERATION_GENERIC = 0,XPF_TLB_CHECK_OPERATION_GENREAD = 1,XPF_TLB_CHECK_OPERATION_GENWRITE = 2,XPF_TLB_CHECK_OPERATION_DATAREAD = 3,XPF_TLB_CHECK_OPERATION_DATAWRITE = 4,XPF_TLB_CHECK_OPERATION_INSTRUCTIONFETCH = 5,XPF_TLB_CHECK_OPERATION_PREFETCH = 6,XPF_BUS_CHECK_TRANSACTIONTYPE_INSTRUCTION = 0,XPF_BUS_CHECK_TRANSACTIONTYPE_DATAACCESS = 1,XPF_BUS_CHECK_TRANSACTIONTYPE_GENERIC = 2,XPF_BUS_CHECK_OPERATION_GENERIC = 0,XPF_BUS_CHECK_OPERATION_GENREAD = 1,XPF_BUS_CHECK_OPERATION_GENWRITE = 2,XPF_BUS_CHECK_OPERATION_DATAREAD = 3,XPF_BUS_CHECK_OPERATION_DATAWRITE = 4,XPF_BUS_CHECK_OPERATION_INSTRUCTIONFETCH = 5,XPF_BUS_CHECK_OPERATION_PREFETCH = 6,XPF_BUS_CHECK_PARTICIPATION_PROCORIGINATED = 0,XPF_BUS_CHECK_PARTICIPATION_PROCRESPONDED = 1,XPF_BUS_CHECK_PARTICIPATION_PROCOBSERVED = 2,XPF_BUS_CHECK_PARTICIPATION_GENERIC = 3,XPF_BUS_CHECK_ADDRESS_MEMORY = 0,XPF_BUS_CHECK_ADDRESS_RESERVED = 1,XPF_BUS_CHECK_ADDRESS_IO = 2,XPF_BUS_CHECK_ADDRESS_OTHER = 3,XPF_MS_CHECK_ERRORTYPE_NOERROR = 0,XPF_MS_CHECK_ERRORTYPE_UNCLASSIFIED = 1,XPF_MS_CHECK_ERRORTYPE_MCROMPARITY = 2,XPF_MS_CHECK_ERRORTYPE_EXTERNAL = 3,XPF_MS_CHECK_ERRORTYPE_FRC = 4,XPF_MS_CHECK_ERRORTYPE_INTERNALUNCLASSIFIED = 5,XPF_CONTEXT_INFO_UNCLASSIFIEDDATA = 0,XPF_CONTEXT_INFO_MSRREGISTERS = 1,XPF_CONTEXT_INFO_32BITCONTEXT = 2,XPF_CONTEXT_INFO_64BITCONTEXT = 3,XPF_CONTEXT_INFO_FXSAVE = 4,XPF_CONTEXT_INFO_32BITDEBUGREGS = 5,XPF_CONTEXT_INFO_64BITDEBUGREGS = 6,XPF_CONTEXT_INFO_MMREGISTERS = 7,};
enum MACRO__CW {_CW_DEFAULT = 589855,};
enum MACRO__DN {_DN_SAVE = 0x0,_DN_FLUSH = 0x1000000,_DN_FLUSH_OPERANDS_SAVE_RESULTS = 0x2000000,_DN_SAVE_OPERANDS_FLUSH_RESULTS = 0x3000000,};
enum MACRO__EM {_EM_AMBIGUIOUS = 0x80000000,_EM_AMBIGUOUS = 0x80000000,};
enum MACRO__IC {_IC_AFFINE = 0x40000,_IC_PROJECTIVE = 0x0,};
enum MACRO__LK {_LK_UNLCK = 0,_LK_LOCK = 1,_LK_NBLCK = 2,_LK_RLCK = 3,_LK_NBRLCK = 4,};
enum MACRO__MB {_MB_CP_SBCS = 0,_MB_CP_OEM = -2,_MB_CP_ANSI = -3,_MB_CP_LOCALE = -4,};
enum MACRO__MM {_MM_HINT_T0 = 1,_MM_HINT_T1 = 2,_MM_HINT_T2 = 3,_MM_HINT_NTA = 0,_MM_EXCEPT_MASK = 63,_MM_EXCEPT_INVALID = 1,_MM_EXCEPT_DENORM = 2,_MM_EXCEPT_DIV_ZERO = 4,_MM_EXCEPT_OVERFLOW = 8,_MM_EXCEPT_UNDERFLOW = 16,_MM_EXCEPT_INEXACT = 32,_MM_MASK_MASK = 8064,_MM_MASK_INVALID = 128,_MM_MASK_DENORM = 256,_MM_MASK_DIV_ZERO = 512,_MM_MASK_OVERFLOW = 1024,_MM_MASK_UNDERFLOW = 2048,_MM_MASK_INEXACT = 4096,_MM_ROUND_MASK = 24576,_MM_ROUND_NEAREST = 0,_MM_ROUND_DOWN = 8192,_MM_ROUND_UP = 16384,_MM_ROUND_TOWARD_ZERO = 24576,_MM_FLUSH_ZERO_MASK = 32768,_MM_FLUSH_ZERO_ON = 32768,_MM_FLUSH_ZERO_OFF = 0,};
enum MACRO__MS {_MS = 0x1,_M1 = 0x4,_M2 = 0x8,_SBUP = 0x10,_SBLOW = 0x20,};
enum MACRO__PC {_PC_64 = 0x0,_PC_53 = 0x10000,_PC_24 = 0x20000,};
enum MACRO__RC {_RC_NEAR = 0x0,_RC_DOWN = 0x100,_RC_UP = 0x200,_RC_CHOP = 0x300,};
enum MACRO__SH {_SH_DENYRW = 0x10,_SH_DENYWR = 0x20,_SH_DENYRD = 0x30,_SH_DENYNO = 0x40,_SH_SECURE = 0x80,};
enum MACRO__SS {_SS_MAXSIZE = 128,};
enum MACRO__SW {_SW_INEXACT = 0x1,_SW_UNDERFLOW = 0x2,_SW_OVERFLOW = 0x4,_SW_ZERODIVIDE = 0x8,_SW_INVALID = 0x10,_SW_DENORMAL = 0x80000,};
typedef union _MCI_STATS MCI_STATS;
typedef struct _NDIS_GUID NDIS_GUID;
typedef struct _NDIS_PORT NDIS_PORT;
typedef struct _OS_STRING OS_STRING;
typedef struct _DF566185D2A6E0088E9F136346A69B5D *PAGP_INFO;
typedef struct _PCC_TABLE PCC_TABLE;
typedef struct _CIP_HDR1 *PCIP_HDR1;
typedef struct _CIP_STOP *PCIP_STOP;
typedef struct _CIP_TALK *PCIP_TALK;
typedef struct _PCI_PMCSR PCI_PMCSR;
typedef union _DL_EUI48 *PDL_EUI48;
typedef union _DL_EUI64 *PDL_EUI64;
typedef IDrmPort2 *PDRMPORT2;
typedef struct _EA_RANGE *PEA_RANGE;
typedef struct _ECP_LIST *PECP_LIST;
typedef struct _KPROCESS *PEPROCESS;
typedef struct _FCB_LOCK *PFCB_LOCK;
typedef struct _FILETIME *PFILETIME;
typedef struct _flowspec *PFLOWSPEC;
typedef struct _FLT_PORT *PFLT_PORT;
typedef struct _FPO_DATA *PFPO_DATA;
typedef struct _GEN_ADDR *PGEN_ADDR;
typedef short *PHALF_PTR;
typedef struct _HBAFCPID *PHBAFCPID;
typedef struct HBA_LUID *PHBA_LUID;
typedef struct in6_addr *PIN6_ADDR;
typedef struct _IO_TIMER *PIO_TIMER;
typedef IPinName *PIPINNAME;
typedef struct _KPROCESS *PKPROCESS;
typedef struct _KSDEVICE *PKSDEVICE;
typedef struct _0D4D90B30C078E58E26CBA964C3C5A4B *PKSE_NODE;
typedef struct _KSFILTER *PKSFILTER;
typedef struct _99C6912CDB5C12269FDD73BE73429D8B *PKSM_NODE;
typedef struct _A4CC0F087DE00420119DAAB092DFFA3E *PKSP_NODE;
typedef struct _LLDP_TLV *PLLDP_TLV;
typedef struct _LOG_PAGE *PLOG_PAGE;
typedef int *PLONG_PTR;
typedef struct _LUN_LIST *PLUN_LIST;
typedef union _MCI_ADDR *PMCI_ADDR;
typedef IMiniport *PMINIPORT;
typedef struct _PMI_EVENT PMI_EVENT;
typedef struct _MRX_FOBX_ *PMRX_FOBX;
typedef struct _NET_ROOT *PNET_ROOT;
typedef struct _NT_TIB32 *PNT_TIB32;
typedef struct _NT_TIB64 *PNT_TIB64;
typedef struct _CLS_LSN **PPCLS_LSN;
typedef struct _PCW_DATA *PPCW_DATA;
typedef struct _PERF_BIN *PPERF_BIN;
typedef IPinCount *PPINCOUNT;
typedef IPortMidi *PPORTMIDI;
typedef struct _PTS_DATA *PPTS_DATA;
typedef struct _Q2931_IE *PQ2931_IE;
typedef struct _KMUTANT *PRKMUTANT;
typedef struct _KTHREAD *PRKTHREAD;
typedef struct _6D91A0F5ACE4E1ABC2608485BBBFEC12 *PSCOPE_ID;
typedef struct _SDP_NODE *PSDP_NODE;
typedef struct sockaddr *PSOCKADDR;
typedef struct _SRV_CALL *PSRV_CALL;
typedef struct _SRV_OPEN *PSRV_OPEN;
typedef struct _STOR_DPC *PSTOR_DPC;
typedef union _TWO_BYTE *PTWO_BYTE;
typedef unsigned int *PUINT_PTR;
typedef struct _VGA_CHAR *PVGA_CHAR;
typedef struct _WHEA128A *PWHEA128A;
typedef struct _2E9A7A0438C52FCD74FAAABDE54DD374 RCVALL_IF;
typedef struct _READ_LIST READ_LIST;
typedef struct _REFERENCE REFERENCE;
typedef struct _RIORESULT RIORESULT;
typedef struct _SCSI_ADDR SCSI_ADDR;
typedef struct _SFI_TIMER SFI_TIMER;
typedef struct _SPEED_MAP SPEED_MAP;
typedef struct _SecBuffer SecBuffer;
typedef struct _SecHandle SecHandle;
typedef struct _X_FILTER TR_FILTER;
typedef unsigned short UHALF_PTR;
typedef unsigned long long ULONGLONG;
typedef unsigned int ULONG_PTR;
typedef struct _VIDEO_VDM VIDEO_VDM;
enum _ACL_MODE {ACL_MODE_ACTIVE = 0x0,ACL_MODE_HOLD = 0x1,ACL_MODE_SNIFF = 0x2,ACL_MODE_PARK = 0x3,ACL_MODE_ENTER_ACTIVE = 0x4,ACL_MODE_ENTER_HOLD = 0x5,ACL_MODE_ENTER_SNIFF = 0x6,ACL_MODE_ENTER_PARK = 0x7,ACL_DISCONNECTED = 0x8,};
enum _BRB_TYPE {BRB_HCI_GET_LOCAL_BD_ADDR = 0x1,BRB_L2CA_REGISTER_SERVER = 0x100,BRB_L2CA_UNREGISTER_SERVER = 0x101,BRB_L2CA_OPEN_CHANNEL = 0x102,BRB_L2CA_OPEN_CHANNEL_RESPONSE = 0x103,BRB_L2CA_CLOSE_CHANNEL = 0x104,BRB_L2CA_ACL_TRANSFER = 0x105,BRB_L2CA_UPDATE_CHANNEL = 0x106,BRB_L2CA_PING = 0x107,BRB_L2CA_INFO_REQUEST = 0x108,BRB_REGISTER_PSM = 0x109,BRB_UNREGISTER_PSM = 0x10A,BRB_SCO_REGISTER_SERVER = 0x200,BRB_SCO_UNREGISTER_SERVER = 0x201,BRB_SCO_OPEN_CHANNEL = 0x202,BRB_SCO_OPEN_CHANNEL_RESPONSE = 0x203,BRB_SCO_CLOSE_CHANNEL = 0x204,BRB_SCO_TRANSFER = 0x205,BRB_SCO_GET_CHANNEL_INFO = 0x207,BRB_SCO_GET_SYSTEM_INFO = 0x209,BRB_SCO_FLUSH_CHANNEL = 0x20A,BRB_SCO_OPEN_UNMANAGED_CHANNEL = 0x210,BRB_SCO_OPEN_UNMANAGED_CHANNEL_RESPONSE = 0x211,BRB_L2CA_OPEN_ENHANCED_CHANNEL = 0x212,BRB_L2CA_OPEN_ENHANCED_CHANNEL_RESPONSE = 0x213,BRB_ACL_GET_MODE = 0x300,BRB_ACL_ENTER_ACTIVE_MODE = 0x301,BRB_STORED_LINK_KEY = 0x310,BRB_GET_DEVICE_INTERFACE_STRING = 0x320,};
enum _DSM_TYPE {DsmTypeUnknown = 0x0,DsmType1 = 0x1,DsmType2 = 0x2,DsmType3 = 0x3,DsmType4 = 0x4,DsmType5 = 0x5,DsmType6 = 0x6,DsmType7 = 0x7,};
struct _ECP_LIST;
struct _FLOAT128 {long long LowPart;long long HighPart;};
typedef struct _heapinfo _HEAPINFO;
enum _PDO_CAPS {PDO_CAPABILITY_UNDEFINED = 0x0,PDO_CAPABILITY_INC512_SET = 0x1,PDO_CAPABILITY_INC512_CLEAR = 0x2,};
enum _PDO_TYPE {PDO_TYPE_UNDEFINED = 0x0,PDO_TYPE_DISK = 0x1,PDO_TYPE_CONTROL = 0x2,PDO_TYPE_SILO = 0x3,PDO_TYPE_THIS = 0x100,};
struct _X_FILTER;
typedef struct localeinfo_struct *_locale_t;
typedef int (*_onexit_t)();
typedef int mbstate_t;
typedef int ptrdiff_t;
typedef unsigned int uintptr_t;
typedef struct _DF566185D2A6E0088E9F136346A69B5D AGP_INFO;
typedef struct _BASE_MCB BASE_MCB;
typedef struct _CIP_HDR1 CIP_HDR1;
typedef struct _CIP_STOP CIP_STOP;
typedef struct _CIP_TALK CIP_TALK;
typedef union _DL_EUI48 DL_EUI48;
typedef union _DL_EUI64 DL_EUI64;
typedef struct _DXGK_PDE DXGK_PDE;
typedef struct _DXGK_PTE DXGK_PTE;
typedef struct _ECP_LIST ECP_LIST;
typedef struct _FCB_LOCK FCB_LOCK;
typedef struct _FILETIME FILETIME;
typedef struct _FLOAT128 FLOAT128;
typedef struct _flowspec FLOWSPEC;
typedef struct _FPO_DATA FPO_DATA;
typedef struct _GEN_ADDR GEN_ADDR;
struct HACCEL__ {int unused;};
typedef short HALF_PTR;
typedef struct _HBAFCPID HBAFCPID;
typedef signed char HBA_INT8;
struct HBA_LUID {char buffer[256];};
struct HBRUSH__ {int unused;};
struct HLSURF__ {int unused;};
typedef struct HMONITOR__ *HMONITOR;
typedef struct HPALETTE__ *HPALETTE;
struct IDrmPort {struct IDrmPortVtbl *lpVtbl;};
typedef struct in6_addr IN6_ADDR;
struct IPinName {struct IPinNameVtbl *lpVtbl;};
struct IUnknown {struct IUnknownVtbl *lpVtbl;};
typedef struct _KSDEVICE KSDEVICE;
typedef struct _0D4D90B30C078E58E26CBA964C3C5A4B KSE_NODE;
typedef struct _KSFILTER KSFILTER;
typedef struct _99C6912CDB5C12269FDD73BE73429D8B KSM_NODE;
typedef struct _A4CC0F087DE00420119DAAB092DFFA3E KSP_NODE;
typedef struct _LLDP_TLV LLDP_TLV;
typedef struct _LOG_PAGE LOG_PAGE;
typedef long long LONGLONG;
typedef int LONG_PTR;
typedef struct tagPOINTS *LPPOINTS;
typedef struct _WSABUF *LPWSABUF;
typedef struct _WSAMSG *LPWSAMSG;
typedef struct _LUN_LIST LUN_LIST;
enum MACRO_AF {AF_UNSPEC = 0,AF_UNIX = 1,AF_INET = 2,AF_IMPLINK = 3,AF_PUP = 4,AF_CHAOS = 5,AF_NS = 6,AF_IPX = 6,AF_ISO = 7,AF_OSI = 7,AF_ECMA = 8,AF_DATAKIT = 9,AF_CCITT = 10,AF_SNA = 11,AF_DECnet = 12,AF_DLI = 13,AF_LAT = 14,AF_HYLINK = 15,AF_APPLETALK = 16,AF_NETBIOS = 17,AF_VOICEVIEW = 18,AF_FIREFOX = 19,AF_UNKNOWN1 = 20,AF_BAN = 21,AF_ATM = 22,AF_INET6 = 23,AF_CLUSTER = 24,AF_12844 = 25,AF_IRDA = 26,AF_NETDES = 28,AF_TCNPROCESS = 29,AF_TCNMESSAGE = 30,AF_ICLFXBM = 31,AF_BTH = 32,AF_LINK = 33,AF_MAX = 34,};
enum MACRO_AI {AI_PASSIVE = 0x1,AI_CANONNAME = 0x2,AI_NUMERICHOST = 0x4,AI_NUMERICSERV = 0x8,AI_ALL = 0x100,AI_ADDRCONFIG = 0x400,AI_V4MAPPED = 0x800,AI_NON_AUTHORITATIVE = 0x4000,AI_SECURE = 0x8000,AI_RETURN_PREFERRED_NAMES = 0x10000,AI_FQDN = 0x20000,AI_FILESERVER = 0x40000,AI_DISABLE_IDN_ENCODING = 0x80000,};
enum MACRO_AV {AV_HOST_DMA_DOUBLE_BUFFERING_ENABLED = 0x1,};
enum MACRO_BC {BC_BLUETOOTH_VERIFIER_FAULT = 0xBFE,BC_BTHMINI_VERIFIER_FAULT = 0xBFF,};
enum MACRO_BI {BI_BITFIELDS = 3,};
enum MACRO_CC {CC_FLUSH_AND_PURGE_NO_PURGE = 0x1,};
enum MACRO_CD {CD_EXPECTED_SECTOR_ANY = 0x0,CD_EXPECTED_SECTOR_CDDA = 0x1,CD_EXPECTED_SECTOR_MODE1 = 0x2,CD_EXPECTED_SECTOR_MODE2 = 0x3,CD_EXPECTED_SECTOR_MODE2_FORM1 = 0x4,CD_EXPECTED_SECTOR_MODE2_FORM2 = 0x5,};
enum MACRO_CF {CF_ROLE_EITHER = 0x0,CF_ROLE_SLAVE = 0x1,CF_ROLE_MASTER = 0x2,CF_ROLE_MASK = 0x3,CF_LINK_NOTHING = 0x10000,CF_LINK_AUTHENTICATED = 0x20000,CF_LINK_ENCRYPTED = 0x40000,CF_LINK_SUPPRESS_PIN = 0x80000,CF_QUEUE_KEEP_OLD = 0x20,CF_QUEUE_KEEP_NEW = 0x40,CF_QUEUE_MASK = 0x60,};
enum MACRO_CM {CM_SERVICE_NETWORK_BOOT_LOAD = 0x1,CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD = 0x2,CM_SERVICE_USB_DISK_BOOT_LOAD = 0x4,CM_SERVICE_SD_DISK_BOOT_LOAD = 0x8,CM_SERVICE_USB3_DISK_BOOT_LOAD = 0x10,CM_SERVICE_MEASURED_BOOT_LOAD = 0x20,CM_SERVICE_VERIFIER_BOOT_LOAD = 0x40,CM_SERVICE_WINPE_BOOT_LOAD = 0x80,CM_SERVICE_VALID_PROMOTION_MASK = 0xFF,};
enum MACRO_CO {CO_FLAG_SIGNALING_VC = 0x1,CO_FLAG_NO_DEST_SAP = 0x2,CO_FLAG_NO_LOCAL_SAP = 0x4,};
enum MACRO_CS {CS_E_FIRST = 0x80040164,CS_E_LAST = 0x8004016F,CS_E_PACKAGE_NOTFOUND = 0x80040164,CS_E_NOT_DELETABLE = 0x80040165,CS_E_CLASS_NOTFOUND = 0x80040166,CS_E_INVALID_VERSION = 0x80040167,CS_E_NO_CLASSSTORE = 0x80040168,CS_E_OBJECT_NOTFOUND = 0x80040169,CS_E_OBJECT_ALREADY_EXISTS = 0x8004016A,CS_E_INVALID_PATH = 0x8004016B,CS_E_NETWORK_ERROR = 0x8004016C,CS_E_ADMIN_LIMIT_EXCEEDED = 0x8004016D,CS_E_SCHEMA_MISMATCH = 0x8004016E,CS_E_INTERNAL_ERROR = 0x8004016F,};
enum MACRO_CW {CW_DEFAULT = 589855,};
enum MACRO_DC {DC_FIELDS = 1,DC_PAPERS = 2,DC_PAPERSIZE = 3,DC_MINEXTENT = 4,DC_MAXEXTENT = 5,DC_BINS = 6,DC_DUPLEX = 7,DC_SIZE = 8,DC_EXTRA = 9,DC_VERSION = 10,DC_DRIVER = 11,DC_BINNAMES = 12,DC_ENUMRESOLUTIONS = 13,DC_FILEDEPENDENCIES = 14,DC_TRUETYPE = 15,DC_PAPERNAMES = 16,DC_ORIENTATION = 17,DC_COPIES = 18,};
enum MACRO_DI {DI_VENDOR_ID_SOURCE_BLUETOOTH_SIG = 0x1,DI_VENDOR_ID_SOURCE_USB_IF = 0x2,};
enum MACRO_DL {DL_ADDRESS_LENGTH_MAXIMUM = 32,DL_HEADER_LENGTH_MAXIMUM = 64,};
enum MACRO_DM {DM_UPDATE = 1,DM_COPY = 2,DM_PROMPT = 4,DM_MODIFY = 8,DM_IN_BUFFER = 8,DM_IN_PROMPT = 4,DM_OUT_BUFFER = 2,DM_OUT_DEFAULT = 1,};
enum MACRO_DO {DO_VERIFY_VOLUME = 0x2,DO_BUFFERED_IO = 0x4,DO_EXCLUSIVE = 0x8,DO_DIRECT_IO = 0x10,DO_MAP_IO_BUFFER = 0x20,DO_DEVICE_INITIALIZING = 0x80,DO_SHUTDOWN_REGISTERED = 0x800,DO_BUS_ENUMERATED_DEVICE = 0x1000,DO_POWER_PAGABLE = 0x2000,DO_POWER_INRUSH = 0x4000,};
enum MACRO_DV {DV_E_FORMATETC = 0x80040064,DV_E_DVTARGETDEVICE = 0x80040065,DV_E_STGMEDIUM = 0x80040066,DV_E_STATDATA = 0x80040067,DV_E_LINDEX = 0x80040068,DV_E_TYMED = 0x80040069,DV_E_CLIPFORMAT = 0x8004006A,DV_E_DVASPECT = 0x8004006B,DV_E_DVTARGETDEVICE_SIZE = 0x8004006C,DV_E_NOIVIEWOBJECT = 0x8004006D,};
enum MACRO_EL {EL_BITS = 0xC,EL_BIT_SHIFT = 0x2,EL_EDGE_TRIGGERED = 0x4,EL_LEVEL_TRIGGERED = 0xC,EL_CONFORMS_WITH_BUS = 0x0,};
enum MACRO_EM {EM_AMBIGUIOUS = -2147483648,EM_AMBIGUOUS = -2147483648,};
enum MACRO_ES {ES_SYSTEM_REQUIRED = 0x1,ES_DISPLAY_REQUIRED = 0x2,ES_USER_PRESENT = 0x4,ES_AWAYMODE_REQUIRED = 0x40,ES_CONTINUOUS = 0x80000000,};
enum MACRO_EX {EX_LOOKASIDE_LIST_EX_FLAGS_RAISE_ON_FAIL = 0x1,EX_LOOKASIDE_LIST_EX_FLAGS_FAIL_NO_RAISE = 0x2,EX_MAXIMUM_LOOKASIDE_DEPTH_BASE = 0x100,EX_MAXIMUM_LOOKASIDE_DEPTH_LIMIT = 0x400,};
enum MACRO_FA {FA_E_MAX_PERSISTED_ITEMS_REACHED = 0x80270220,FA_E_HOMEGROUP_NOT_AVAILABLE = 0x80270222,};
enum MACRO_FM {FM_LOCK_BIT = 0x1,FM_LOCK_BIT_V = 0x0,};
enum MACRO_FO {FO_FILE_OPEN = 0x1,FO_SYNCHRONOUS_IO = 0x2,FO_ALERTABLE_IO = 0x4,FO_NO_INTERMEDIATE_BUFFERING = 0x8,FO_WRITE_THROUGH = 0x10,FO_SEQUENTIAL_ONLY = 0x20,FO_CACHE_SUPPORTED = 0x40,FO_NAMED_PIPE = 0x80,FO_STREAM_FILE = 0x100,FO_MAILSLOT = 0x200,FO_GENERATE_AUDIT_ON_CLOSE = 0x400,FO_QUEUE_IRP_TO_THREAD = 0x400,FO_DIRECT_DEVICE_OPEN = 0x800,FO_FILE_MODIFIED = 0x1000,FO_FILE_SIZE_CHANGED = 0x2000,FO_CLEANUP_COMPLETE = 0x4000,FO_TEMPORARY_FILE = 0x8000,FO_DELETE_ON_CLOSE = 0x10000,FO_OPENED_CASE_SENSITIVE = 0x20000,FO_HANDLE_CREATED = 0x40000,FO_FILE_FAST_IO_READ = 0x80000,FO_RANDOM_ACCESS = 0x100000,FO_FILE_OPEN_CANCELLED = 0x200000,FO_VOLUME_OPEN = 0x400000,FO_REMOTE_ORIGIN = 0x1000000,FO_DISALLOW_EXCLUSIVE = 0x2000000,FO_SKIP_COMPLETION_PORT = 0x2000000,FO_SKIP_SET_EVENT = 0x4000000,FO_SKIP_SET_FAST_IO = 0x8000000,FO_INDIRECT_WAIT_OBJECT = 0x10000000,FO_SECTION_MINSTORE_TREATMENT = 0x20000000,FO_FLAGS_VALID_ONLY_DURING_CREATE = 0x2000000,};
enum MACRO_FS {FS_FILTER_ACQUIRE_FOR_SECTION_SYNCHRONIZATION = 255,FS_FILTER_RELEASE_FOR_SECTION_SYNCHRONIZATION = 254,FS_FILTER_ACQUIRE_FOR_MOD_WRITE = 253,FS_FILTER_RELEASE_FOR_MOD_WRITE = 252,FS_FILTER_ACQUIRE_FOR_CC_FLUSH = 251,FS_FILTER_RELEASE_FOR_CC_FLUSH = 250,};
enum MACRO_FW {FW_ISSUEID_NO_ISSUE = 0x0,FW_ISSUEID_UNKNOWN = 0xFFFFFFFF,};
enum MACRO_GL {GL_PENDING_BIT = 0x0,GL_PENDING = 0x1,GL_OWNER_BIT = 0x1,GL_OWNER = 0x2,};
enum MACRO_HP {HP_MESSAGE_PROCESSOR = 1,};
enum MACRO_IC {IC_AFFINE = 262144,IC_PROJECTIVE = 0,};
enum MACRO_ID {DISPLAY_ADAPTER_HW_ID = 0xFFFFFFFF,VIDEO_INVALID_CHILD_ID = 0xFFFFFFFF,};
enum MACRO_IF {IF_MAX_STRING_SIZE = 256,IF_MAX_PHYS_ADDRESS_LENGTH = 32,};
enum MACRO_IN {IN_CLASSA_NET = 0xFF000000,IN_CLASSA_NSHIFT = 0x18,IN_CLASSA_HOST = 0xFFFFFF,IN_CLASSA_MAX = 0x80,IN_CLASSB_NET = 0xFFFF0000,IN_CLASSB_NSHIFT = 0x10,IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x10000,IN_CLASSC_NET = 0xFFFFFF00,IN_CLASSC_NSHIFT = 0x8,IN_CLASSC_HOST = 0xFF,IN_CLASSD_NET = 0xF0000000,IN_CLASSD_NSHIFT = 0x1C,IN_CLASSD_HOST = 0xFFFFFFF,};
enum MACRO_IO {IO_OBJECT_INVALID = 0x148,};
enum MACRO_IP {IP_FORWARDING = 1,IP_NOT_FORWARDING = 2,};
enum MACRO_KB {KB_SECONDARY_DATA_FLAG_ADDITIONAL_DATA = 0x1,KB_SECONDARY_DATA_FLAG_NO_DEVICE_ACCESS = 0x2,KB_ADD_PAGES_FLAG_VIRTUAL_ADDRESS = 0x1,KB_ADD_PAGES_FLAG_PHYSICAL_ADDRESS = 0x2,KB_ADD_PAGES_FLAG_ADDITIONAL_RANGES_EXIST = 0x80000000,};
enum MACRO_KE {KE_PROCESSOR_CHANGE_ADD_EXISTING = 1,};
enum MACRO_KI {KI_USER_SHARED_DATA = 0xFFDF0000,};
enum MACRO_KS {KS_DVD_CGMS_RESERVED_MASK = 0x78,KS_DVD_CGMS_COPY_PROTECT_MASK = 0x18,KS_DVD_CGMS_COPY_PERMITTED = 0x0,KS_DVD_CGMS_COPY_ONCE = 0x10,KS_DVD_CGMS_NO_COPY = 0x18,KS_DVD_COPYRIGHT_MASK = 0x40,KS_DVD_NOT_COPYRIGHTED = 0x0,KS_DVD_COPYRIGHTED = 0x40,KS_DVD_SECTOR_PROTECT_MASK = 0x20,KS_DVD_SECTOR_NOT_PROTECTED = 0x0,KS_DVD_SECTOR_PROTECTED = 0x20,KS_BI_RGB = 0x0,KS_BI_RLE8 = 0x1,KS_BI_RLE4 = 0x2,KS_BI_BITFIELDS = 0x3,KS_BI_JPEG = 0x4,KS_iPALETTE_COLORS = 0x100,KS_iEGA_COLORS = 0x10,KS_iMASK_COLORS = 0x3,KS_iTRUECOLOR = 0x10,KS_iRED = 0x0,KS_iGREEN = 0x1,KS_iBLUE = 0x2,KS_iPALETTE = 0x8,KS_iMAXBITS = 0x8,KS_VBIDATARATE_NABTS = 0x576428,KS_VBIDATARATE_CC = 0x7AEC5,KS_VBISAMPLINGRATE_4X_NABTS = 0x15D90A0,KS_VBISAMPLINGRATE_47X_NABTS = 0x19BFCC0,KS_VBISAMPLINGRATE_5X_NABTS = 0x1B4F4C8,KS_TVTUNER_CHANGE_BEGIN_TUNE = 0x1,KS_TVTUNER_CHANGE_END_TUNE = 0x2,KS_INTERLACE_IsInterlaced = 0x1,KS_INTERLACE_1FieldPerSample = 0x2,KS_INTERLACE_Field1First = 0x4,KS_INTERLACE_UNUSED = 0x8,KS_INTERLACE_FieldPatternMask = 0x30,KS_INTERLACE_FieldPatField1Only = 0x0,KS_INTERLACE_FieldPatField2Only = 0x10,KS_INTERLACE_FieldPatBothRegular = 0x20,KS_INTERLACE_FieldPatBothIrregular = 0x30,KS_INTERLACE_DisplayModeMask = 0xC0,KS_INTERLACE_DisplayModeBobOnly = 0x0,KS_INTERLACE_DisplayModeWeaveOnly = 0x40,KS_INTERLACE_DisplayModeBobOrWeave = 0x80,KS_COPYPROTECT_RestrictDuplication = 0x1,KS_MPEG2_DoPanScan = 0x1,KS_MPEG2_DVDLine21Field1 = 0x2,KS_MPEG2_DVDLine21Field2 = 0x4,KS_MPEG2_SourceIsLetterboxed = 0x8,KS_MPEG2_FilmCameraMode = 0x10,KS_MPEG2_LetterboxAnalogOut = 0x20,KS_MPEG2_DSS_UserData = 0x40,KS_MPEG2_DVB_UserData = 0x80,KS_MPEG2_27MhzTimebase = 0x100,KS_MPEG2_WidescreenAnalogOut = 0x200,KS_AMCONTROL_USED = 0x1,KS_AMCONTROL_PAD_TO_4x3 = 0x2,KS_AMCONTROL_PAD_TO_16x9 = 0x4,KS_AMCONTROL_COLORINFO_PRESENT = 0x80,KS_MAX_SIZE_MPEG1_SEQUENCE_INFO = 0x8C,KS_MPEGAUDIOINFO_27MhzTimebase = 0x1,KS_VIDEOSTREAM_PREVIEW = 0x1,KS_VIDEOSTREAM_CAPTURE = 0x2,KS_VIDEOSTREAM_VBI = 0x10,KS_VIDEOSTREAM_NABTS = 0x20,KS_VIDEOSTREAM_CC = 0x100,KS_VIDEOSTREAM_EDS = 0x200,KS_VIDEOSTREAM_TELETEXT = 0x400,KS_VIDEOSTREAM_STILL = 0x1000,KS_VIDEOSTREAM_IS_VPE = 0x8000,KS_VIDEO_ALLOC_VPE_SYSTEM = 0x1,KS_VIDEO_ALLOC_VPE_DISPLAY = 0x2,KS_VIDEO_ALLOC_VPE_AGP = 0x4,KS_VBICAP_PROTECTION_MV_PRESENT = 0x1,KS_VBICAP_PROTECTION_MV_HARDWARE = 0x2,KS_VBICAP_PROTECTION_MV_DETECTED = 0x4,KS_NABTS_GROUPID_ORIGINAL_CONTENT_BASE = 0x800,KS_NABTS_GROUPID_ORIGINAL_CONTENT_ADVERTISER_BASE = 0x810,KS_NABTS_GROUPID_PRODUCTION_COMPANY_CONTENT_BASE = 0x820,KS_NABTS_GROUPID_PRODUCTION_COMPANY_ADVERTISER_BASE = 0x830,KS_NABTS_GROUPID_SYNDICATED_SHOW_CONTENT_BASE = 0x840,KS_NABTS_GROUPID_SYNDICATED_SHOW_ADVERTISER_BASE = 0x850,KS_NABTS_GROUPID_NETWORK_WIDE_CONTENT_BASE = 0x860,KS_NABTS_GROUPID_NETWORK_WIDE_ADVERTISER_BASE = 0x870,KS_NABTS_GROUPID_TELEVISION_STATION_CONTENT_BASE = 0x880,KS_NABTS_GROUPID_TELEVISION_STATION_ADVERTISER_BASE = 0x890,KS_NABTS_GROUPID_LOCAL_CABLE_SYSTEM_CONTENT_BASE = 0x8A0,KS_NABTS_GROUPID_LOCAL_CABLE_SYSTEM_ADVERTISER_BASE = 0x8B0,KS_NABTS_GROUPID_MICROSOFT_RESERVED_TEST_DATA_BASE = 0x8F0,};
enum MACRO_LC {LC_ALL = 0,LC_COLLATE = 1,LC_CTYPE = 2,LC_MONETARY = 3,LC_NUMERIC = 4,LC_TIME = 5,LC_MIN = 0,LC_MAX = 5,};
enum MACRO_LK {LK_UNLCK = 0,LK_LOCK = 1,LK_NBLCK = 2,LK_RLCK = 3,LK_NBRLCK = 4,};
enum MACRO_LM {LM_SERVER_INTERNAL_ERROR = 0x54,};
enum MACRO_MB {MB_LEN_MAX = 5,};
enum MACRO_MF {MF_FLAGS_EVEN_IF_NO_RESOURCE = 0x1,MF_FLAGS_NO_CREATE_IF_NO_RESOURCE = 0x2,MF_FLAGS_FILL_IN_UNKNOWN_RESOURCE = 0x4,MF_FLAGS_CREATE_BUT_NO_SHOW_DISABLED = 0x8,};
enum MACRO_MK {MK_E_FIRST = 0x800401E0,MK_E_LAST = 0x800401EF,MK_S_FIRST = 0x401E0,MK_S_LAST = 0x401EF,MK_E_CONNECTMANUALLY = 0x800401E0,MK_E_EXCEEDEDDEADLINE = 0x800401E1,MK_E_NEEDGENERIC = 0x800401E2,MK_E_UNAVAILABLE = 0x800401E3,MK_E_SYNTAX = 0x800401E4,MK_E_NOOBJECT = 0x800401E5,MK_E_INVALIDEXTENSION = 0x800401E6,MK_E_INTERMEDIATEINTERFACENOTSUPPORTED = 0x800401E7,MK_E_NOTBINDABLE = 0x800401E8,MK_E_NOTBOUND = 0x800401E9,MK_E_CANTOPENFILE = 0x800401EA,MK_E_MUSTBOTHERUSER = 0x800401EB,MK_E_NOINVERSE = 0x800401EC,MK_E_NOSTORAGE = 0x800401ED,MK_E_NOPREFIX = 0x800401EE,MK_E_ENUMERATION_FAILED = 0x800401EF,};
enum MACRO_MM {MM_MAXIMUM_DISK_IO_SIZE = 0x10000,};
enum MACRO_MP {MP_UNINITIALIZED_VALUE = 4294967295,};
enum MACRO_MS {MS_WRITE_OPCODE = 1,};
enum MACRO_ND {ND_RA_FLAG_MANAGED = 0x80,ND_RA_FLAG_OTHER = 0x40,ND_RA_FLAG_HOME_AGENT = 0x20,ND_RA_FLAG_PREFERENCE = 0x18,ND_NA_FLAG_ROUTER = 0x80,ND_NA_FLAG_SOLICITED = 0x40,ND_NA_FLAG_OVERRIDE = 0x20,ND_OPT_PI_FLAG_ONLINK = 0x80,ND_OPT_PI_FLAG_AUTO = 0x40,ND_OPT_PI_FLAG_ROUTER_ADDR = 0x20,ND_OPT_PI_FLAG_SITE_PREFIX = 0x10,ND_OPT_PI_FLAG_ROUTE = 0x1,ND_OPT_RI_FLAG_PREFERENCE = 0x18,};
enum MACRO_NI {NI_NOFQDN = 0x1,NI_NUMERICHOST = 0x2,NI_NAMEREQD = 0x4,NI_NUMERICSERV = 0x8,NI_DGRAM = 0x10,NI_MAXHOST = 0x401,NI_MAXSERV = 0x20,};
enum MACRO_NL {NL_MAX_METRIC_COMPONENT = 2147483647,};
enum MACRO_NO {NO_EXCEPTION_HANDLING_SUPPORT = 0xB,};
enum MACRO_NS {NS_ALL = 0,NS_SAP = 1,NS_NDS = 2,NS_PEER_BROWSE = 3,NS_SLP = 5,NS_DHCP = 6,NS_TCPIP_LOCAL = 10,NS_TCPIP_HOSTS = 11,NS_DNS = 12,NS_NETBT = 13,NS_WINS = 14,NS_NLA = 15,NS_BTH = 16,NS_NBP = 20,NS_MS = 30,NS_STDA = 31,NS_NTDS = 32,NS_EMAIL = 37,NS_PNRPNAME = 38,NS_PNRPCLOUD = 39,NS_X500 = 40,NS_NIS = 41,NS_NISPLUS = 42,NS_WRQ = 50,NS_NETDES = 60,};
enum MACRO_NT {NT_CREATE_REQUEST_OPLOCK = 0x2,NT_CREATE_REQUEST_OPBATCH = 0x4,NT_CREATE_OPEN_TARGET_DIR = 0x8,};
enum MACRO_NV {NV_SEP_CACHE_PARAMETER_VERSION_1 = 1,NV_SEP_CACHE_PARAMETER_VERSION = 1,};
enum MACRO_NX {NX_SUPPORT_POLICY_ALWAYSOFF = 0,NX_SUPPORT_POLICY_ALWAYSON = 1,NX_SUPPORT_POLICY_OPTIN = 2,NX_SUPPORT_POLICY_OPTOUT = 3,};
enum MACRO_OB {OB_FLT_REGISTRATION_VERSION_0100 = 0x100,OB_FLT_REGISTRATION_VERSION = 0x100,OB_OPERATION_HANDLE_CREATE = 0x1,OB_OPERATION_HANDLE_DUPLICATE = 0x2,};
enum MACRO_PC {PC_24 = 131072,PC_53 = 65536,PC_64 = 0,};
enum MACRO_PF {PF_FLOATING_POINT_PRECISION_ERRATA = 0,PF_FLOATING_POINT_EMULATED = 1,PF_COMPARE_EXCHANGE_DOUBLE = 2,PF_MMX_INSTRUCTIONS_AVAILABLE = 3,PF_PPC_MOVEMEM_64BIT_OK = 4,PF_ALPHA_BYTE_INSTRUCTIONS = 5,PF_XMMI_INSTRUCTIONS_AVAILABLE = 6,PF_3DNOW_INSTRUCTIONS_AVAILABLE = 7,PF_RDTSC_INSTRUCTION_AVAILABLE = 8,PF_PAE_ENABLED = 9,PF_XMMI64_INSTRUCTIONS_AVAILABLE = 10,PF_SSE_DAZ_MODE_AVAILABLE = 11,PF_NX_ENABLED = 12,PF_SSE3_INSTRUCTIONS_AVAILABLE = 13,PF_COMPARE_EXCHANGE128 = 14,PF_COMPARE64_EXCHANGE128 = 15,PF_CHANNELS_ENABLED = 16,PF_XSAVE_ENABLED = 17,PF_ARM_VFP_32_REGISTERS_AVAILABLE = 18,PF_ARM_NEON_INSTRUCTIONS_AVAILABLE = 19,PF_SECOND_LEVEL_ADDRESS_TRANSLATION = 20,PF_VIRT_FIRMWARE_ENABLED = 21,PF_RDWRFSGSBASE_AVAILABLE = 22,PF_FASTFAIL_AVAILABLE = 23,PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE = 24,PF_ARM_64BIT_LOADSTORE_ATOMIC = 25,PF_ARM_EXTERNAL_CACHE_AVAILABLE = 26,PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE = 27,};
enum MACRO_PO {PO_MEM_PRESERVE = 0x1,PO_MEM_CLONE = 0x2,PO_MEM_CL_OR_NCHK = 0x4,PO_MEM_DISCARD = 0x8000,PO_MEM_PAGE_ADDRESS = 0x4000,PO_MEM_BOOT_PHASE = 0x10000,PO_CB_SYSTEM_POWER_POLICY = 0x0,PO_CB_AC_STATUS = 0x1,PO_CB_BUTTON_COLLISION = 0x2,PO_CB_SYSTEM_STATE_LOCK = 0x3,PO_CB_LID_SWITCH_STATE = 0x4,PO_CB_PROCESSOR_POWER_POLICY = 0x5,PO_FX_VERSION_V1 = 0x1,PO_FX_VERSION_V2 = 0x2,PO_FX_VERSION = 0x1,PO_FX_COMPONENT_FLAG_F0_ON_DX = 0x1,PO_FX_COMPONENT_FLAG_NO_DEBOUNCE = 0x2,PO_FX_UNKNOWN_POWER = 0xFFFFFFFF,PO_FX_UNKNOWN_TIME = 0xFFFFFFFF,PO_FX_FLAG_BLOCKING = 0x1,PO_FX_FLAG_ASYNC_ONLY = 0x2,};
enum MACRO_RC {RC_CHOP = 768,RC_UP = 512,RC_DOWN = 256,RC_NEAR = 0,};
enum MACRO_RO {RO_E_METADATA_NAME_NOT_FOUND = 0x8000000F,RO_E_METADATA_NAME_IS_NAMESPACE = 0x80000010,RO_E_METADATA_INVALID_TYPE_FORMAT = 0x80000011,RO_E_INVALID_METADATA_FILE = 0x80000012,RO_E_CLOSED = 0x80000013,RO_E_EXCLUSIVE_WRITE = 0x80000014,RO_E_CHANGE_NOTIFICATION_IN_PROGRESS = 0x80000015,RO_E_ERROR_STRING_NOT_FOUND = 0x80000016,};
enum MACRO_RT {RT_STRING = 6,RT_RCDATA = 10,};
enum MACRO_RX {RX_SCAVENGER_MASK = 0x1000,};
enum MACRO_SD {SD_GLOBAL_CHANGE_TYPE_MACHINE_SID = 1,SD_GLOBAL_CHANGE_TYPE_QUERY_STATS = 65536,SD_GLOBAL_CHANGE_TYPE_ENUM_SDS = 131072,};
enum MACRO_SE {SE_PRIVILEGE_ENABLED_BY_DEFAULT = 0x1,SE_PRIVILEGE_ENABLED = 0x2,SE_PRIVILEGE_REMOVED = 0x4,SE_PRIVILEGE_USED_FOR_ACCESS = 0x80000000,SE_PRIVILEGE_VALID_ATTRIBUTES = 0x80000007,};
enum MACRO_SH {SH_DENYRW = 16,SH_DENYWR = 32,SH_DENYRD = 48,SH_DENYNO = 64,};
enum MACRO_SL {SL_PENDING_RETURNED = 0x1,SL_ERROR_RETURNED = 0x2,SL_INVOKE_ON_CANCEL = 0x20,SL_INVOKE_ON_SUCCESS = 0x40,SL_INVOKE_ON_ERROR = 0x80,SL_FORCE_ACCESS_CHECK = 0x1,SL_OPEN_PAGING_FILE = 0x2,SL_OPEN_TARGET_DIRECTORY = 0x4,SL_STOP_ON_SYMLINK = 0x8,SL_CASE_SENSITIVE = 0x80,SL_KEY_SPECIFIED = 0x1,SL_OVERRIDE_VERIFY_VOLUME = 0x2,SL_WRITE_THROUGH = 0x4,SL_FT_SEQUENTIAL_WRITE = 0x8,SL_FORCE_DIRECT_WRITE = 0x10,SL_REALTIME_STREAM = 0x20,SL_READ_ACCESS_GRANTED = 0x1,SL_WRITE_ACCESS_GRANTED = 0x4,SL_FAIL_IMMEDIATELY = 0x1,SL_EXCLUSIVE_LOCK = 0x2,SL_RESTART_SCAN = 0x1,SL_RETURN_SINGLE_ENTRY = 0x2,SL_INDEX_SPECIFIED = 0x4,SL_WATCH_TREE = 0x1,SL_ALLOW_RAW_MOUNT = 0x1,SL_BYPASS_ACCESS_CHECK = 0x1,};
enum MACRO_SO {SO_DEBUG = 0x1,SO_ACCEPTCONN = 0x2,SO_REUSEADDR = 0x4,SO_KEEPALIVE = 0x8,SO_DONTROUTE = 0x10,SO_BROADCAST = 0x20,SO_USELOOPBACK = 0x40,SO_LINGER = 0x80,SO_OOBINLINE = 0x100,SO_DONTLINGER = 0xFFFFFF7F,SO_EXCLUSIVEADDRUSE = 0xFFFFFFFB,SO_SNDBUF = 0x1001,SO_RCVBUF = 0x1002,SO_SNDLOWAT = 0x1003,SO_RCVLOWAT = 0x1004,SO_SNDTIMEO = 0x1005,SO_RCVTIMEO = 0x1006,SO_ERROR = 0x1007,SO_TYPE = 0x1008,SO_BSP_STATE = 0x1009,SO_GROUP_ID = 0x2001,SO_GROUP_PRIORITY = 0x2002,SO_MAX_MSG_SIZE = 0x2003,SO_CONDITIONAL_ACCEPT = 0x3002,SO_PAUSE_ACCEPT = 0x3003,SO_COMPARTMENT_ID = 0x3004,SO_RANDOMIZE_PORT = 0x3005,SO_PORT_SCALABILITY = 0x3006,};
enum MACRO_SP {SP_UNINITIALIZED_VALUE = 4294967295,SP_UNTAGGED = 255,};
enum MACRO_SW {SW_INVALID = 16,SW_DENORMAL = 524288,SW_ZERODIVIDE = 8,SW_OVERFLOW = 4,SW_UNDERFLOW = 2,SW_INEXACT = 1,SW_UNEMULATED = 64,SW_SQRTNEG = 128,SW_STACKOVERFLOW = 512,SW_STACKUNDERFLOW = 1024,};
enum MACRO_SZ {PCNET1_SZ = 22,PCLAN1_SZ = 8,MSNET103_SZ = 23,MSNET30_SZ = 22,LANMAN10_SZ = 9,LANMAN12_SZ = 9,DOSLANMAN12_SZ = 13,};
enum MACRO_T1 {T1_INIT = 0,T1_START = 1,T1_I_BLOCK = 2,T1_R_BLOCK = 3,T1_RESTART = 4,T1_RESYNCH_REQUEST = 192,T1_RESYNCH_RESPONSE = 224,T1_IFS_REQUEST = 193,T1_IFS_RESPONSE = 225,T1_ABORT_REQUEST = 194,T1_ABORT_RESPONSE = 226,T1_WTX_REQUEST = 195,T1_WTX_RESPONSE = 227,T1_VPP_ERROR = 228,T1_IFSD = 254,T1_IFSD_DEFAULT = 32,T1_MAX_RETRIES = 2,T1_MORE_DATA = 32,T1_ERROR_CHKSUM = 1,T1_ERROR_OTHER = 2,T1_CRC_CHECK = 1,T1_CWI_DEFAULT = 13,T1_BWI_DEFAULT = 4,};
enum MACRO_TC {TC_PUBLIC_DEVICEDUMP_CONTENT_SMART = 0x1,TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG = 0x2,TC_PUBLIC_DEVICEDUMP_CONTENT_GPLOG_MAX = 0x10,TC_DEVICEDUMP_SUBSECTION_DESC_LENGTH = 0x10,};
enum MACRO_TH {TH_MAX_LEN = 0x3C,TH_FIN = 0x1,TH_SYN = 0x2,TH_RST = 0x4,TH_PSH = 0x8,TH_ACK = 0x10,TH_URG = 0x20,TH_ECE = 0x40,TH_CWR = 0x80,TH_ALL = 0xFF,TH_SYN_ALL = 0x17,TH_OPT_EOL = 0x0,TH_OPT_NOP = 0x1,TH_OPT_MSS = 0x2,TH_OPT_WS = 0x3,TH_OPT_SACK_PERMITTED = 0x4,TH_OPT_SACK = 0x5,TH_OPT_TS = 0x8,};
enum MACRO_TR {TR_NOIND = 0x0,TR_END_TO_END = 0x1,TR_NO_END_TO_END = 0x2,};
enum MACRO_TT {TT_NOIND = 0x0,TT_CBR = 0x4,TT_VBR = 0x8,};
enum MACRO_UI {UI_E_CREATE_FAILED = 0x802A0001,UI_E_SHUTDOWN_CALLED = 0x802A0002,UI_E_ILLEGAL_REENTRANCY = 0x802A0003,UI_E_OBJECT_SEALED = 0x802A0004,UI_E_VALUE_NOT_SET = 0x802A0005,UI_E_VALUE_NOT_DETERMINED = 0x802A0006,UI_E_INVALID_OUTPUT = 0x802A0007,UI_E_BOOLEAN_EXPECTED = 0x802A0008,UI_E_DIFFERENT_OWNER = 0x802A0009,UI_E_AMBIGUOUS_MATCH = 0x802A000A,UI_E_FP_OVERFLOW = 0x802A000B,UI_E_WRONG_THREAD = 0x802A000C,UI_E_STORYBOARD_ACTIVE = 0x802A0101,UI_E_STORYBOARD_NOT_PLAYING = 0x802A0102,UI_E_START_KEYFRAME_AFTER_END = 0x802A0103,UI_E_END_KEYFRAME_NOT_DETERMINED = 0x802A0104,UI_E_LOOPS_OVERLAP = 0x802A0105,UI_E_TRANSITION_ALREADY_USED = 0x802A0106,UI_E_TRANSITION_NOT_IN_STORYBOARD = 0x802A0107,UI_E_TRANSITION_ECLIPSED = 0x802A0108,UI_E_TIME_BEFORE_LAST_UPDATE = 0x802A0109,UI_E_TIMER_CLIENT_ALREADY_CONNECTED = 0x802A010A,UI_E_INVALID_DIMENSION = 0x802A010B,UI_E_PRIMITIVE_OUT_OF_BOUNDS = 0x802A010C,UI_E_WINDOW_CLOSED = 0x802A0201,};
enum MACRO_UP {UP_DRIVER_ON_MP_SYSTEM = 0x92,};
enum MACRO_V1 {V1_DEV_CAPS_VALID_BITS = 0xF,};
enum MACRO_V2 {V2_DEV_CAPS_SUPPORTS_WAKE = 0x10,V2_DEV_CAPS_MULTIPLE_WAKE = 0x20,V2_DEV_CAPS_PROGRAMMABLE_WAKE = 0x40,V2_DEV_CAPS_VOLATILE_WAKE_PATTERN = 0x80,V2_DEV_CAPS_LEARNING_ONLY = 0x100,V2_DEV_CAPS_NARROW_BPF = 0x200,V2_DEV_CAPS_NO_SWDECODE_INPUT = 0x400,V2_DEV_CAPS_HWDECODE_INPUT = 0x800,V2_DEV_CAPS_EMULATOR_V1 = 0x1000,V2_DEV_CAPS_EMULATOR_V2 = 0x2000,V2_DEV_CAPS_ATTACHED_TO_TUNER = 0x4000,V2_DEV_CAPS_VALID_BITS = 0x7FFF,V2_WAKE_PROTOCOL_RC6 = 0x1,V2_WAKE_PROTOCOL_QP = 0x2,V2_WAKE_PROTOCOL_SAMSUNG = 0x4,V2_WAKE_PROTOCOL_DONTCARE = 0x8,V2_VALID_WAKE_PROTOCOLS = 0xF,};
enum MACRO_VC {TRANSMIT_VC = 0x4,RECEIVE_VC = 0x8,};
enum MACRO_VP {VP_COMMAND_GET = 0x1,VP_COMMAND_SET = 0x2,VP_FLAGS_TV_MODE = 0x1,VP_FLAGS_TV_STANDARD = 0x2,VP_FLAGS_FLICKER = 0x4,VP_FLAGS_OVERSCAN = 0x8,VP_FLAGS_MAX_UNSCALED = 0x10,VP_FLAGS_POSITION = 0x20,VP_FLAGS_BRIGHTNESS = 0x40,VP_FLAGS_CONTRAST = 0x80,VP_FLAGS_COPYPROTECT = 0x100,VP_MODE_WIN_GRAPHICS = 0x1,VP_MODE_TV_PLAYBACK = 0x2,VP_TV_STANDARD_NTSC_M = 0x1,VP_TV_STANDARD_NTSC_M_J = 0x2,VP_TV_STANDARD_PAL_B = 0x4,VP_TV_STANDARD_PAL_D = 0x8,VP_TV_STANDARD_PAL_H = 0x10,VP_TV_STANDARD_PAL_I = 0x20,VP_TV_STANDARD_PAL_M = 0x40,VP_TV_STANDARD_PAL_N = 0x80,VP_TV_STANDARD_SECAM_B = 0x100,VP_TV_STANDARD_SECAM_D = 0x200,VP_TV_STANDARD_SECAM_G = 0x400,VP_TV_STANDARD_SECAM_H = 0x800,VP_TV_STANDARD_SECAM_K = 0x1000,VP_TV_STANDARD_SECAM_K1 = 0x2000,VP_TV_STANDARD_SECAM_L = 0x4000,VP_TV_STANDARD_WIN_VGA = 0x8000,VP_TV_STANDARD_NTSC_433 = 0x10000,VP_TV_STANDARD_PAL_G = 0x20000,VP_TV_STANDARD_PAL_60 = 0x40000,VP_TV_STANDARD_SECAM_L1 = 0x80000,VP_CP_TYPE_APS_TRIGGER = 0x1,VP_CP_TYPE_MACROVISION = 0x2,VP_CP_CMD_ACTIVATE = 0x1,VP_CP_CMD_DEACTIVATE = 0x2,VP_CP_CMD_CHANGE = 0x4,};
enum MACRO_WS {WS_S_ASYNC = 0x3D0000,WS_S_END = 0x3D0001,WS_E_INVALID_FORMAT = 0x803D0000,WS_E_OBJECT_FAULTED = 0x803D0001,WS_E_NUMERIC_OVERFLOW = 0x803D0002,WS_E_INVALID_OPERATION = 0x803D0003,WS_E_OPERATION_ABORTED = 0x803D0004,WS_E_ENDPOINT_ACCESS_DENIED = 0x803D0005,WS_E_OPERATION_TIMED_OUT = 0x803D0006,WS_E_OPERATION_ABANDONED = 0x803D0007,WS_E_QUOTA_EXCEEDED = 0x803D0008,WS_E_NO_TRANSLATION_AVAILABLE = 0x803D0009,WS_E_SECURITY_VERIFICATION_FAILURE = 0x803D000A,WS_E_ADDRESS_IN_USE = 0x803D000B,WS_E_ADDRESS_NOT_AVAILABLE = 0x803D000C,WS_E_ENDPOINT_NOT_FOUND = 0x803D000D,WS_E_ENDPOINT_NOT_AVAILABLE = 0x803D000E,WS_E_ENDPOINT_FAILURE = 0x803D000F,WS_E_ENDPOINT_UNREACHABLE = 0x803D0010,WS_E_ENDPOINT_ACTION_NOT_SUPPORTED = 0x803D0011,WS_E_ENDPOINT_TOO_BUSY = 0x803D0012,WS_E_ENDPOINT_FAULT_RECEIVED = 0x803D0013,WS_E_ENDPOINT_DISCONNECTED = 0x803D0014,WS_E_PROXY_FAILURE = 0x803D0015,WS_E_PROXY_ACCESS_DENIED = 0x803D0016,WS_E_NOT_SUPPORTED = 0x803D0017,WS_E_PROXY_REQUIRES_BASIC_AUTH = 0x803D0018,WS_E_PROXY_REQUIRES_DIGEST_AUTH = 0x803D0019,WS_E_PROXY_REQUIRES_NTLM_AUTH = 0x803D001A,WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH = 0x803D001B,WS_E_SERVER_REQUIRES_BASIC_AUTH = 0x803D001C,WS_E_SERVER_REQUIRES_DIGEST_AUTH = 0x803D001D,WS_E_SERVER_REQUIRES_NTLM_AUTH = 0x803D001E,WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH = 0x803D001F,WS_E_INVALID_ENDPOINT_URL = 0x803D0020,WS_E_OTHER = 0x803D0021,WS_E_SECURITY_TOKEN_EXPIRED = 0x803D0022,WS_E_SECURITY_SYSTEM_FAILURE = 0x803D0023,};
enum MACRO_X3 {X3_OPCODE_INST_WORD_X = 3,X3_OPCODE_SIZE_X = 4,X3_OPCODE_INST_WORD_POS_X = 28,X3_OPCODE_SIGN_VAL_POS_X = 0,X3_I_INST_WORD_X = 3,X3_I_SIZE_X = 1,X3_I_INST_WORD_POS_X = 27,X3_I_SIGN_VAL_POS_X = 59,X3_D_WH_INST_WORD_X = 3,X3_D_WH_SIZE_X = 3,X3_D_WH_INST_WORD_POS_X = 24,X3_D_WH_SIGN_VAL_POS_X = 0,X3_IMM20_INST_WORD_X = 3,X3_IMM20_SIZE_X = 20,X3_IMM20_INST_WORD_POS_X = 4,X3_IMM20_SIGN_VAL_POS_X = 0,X3_IMM39_1_INST_WORD_X = 2,X3_IMM39_1_SIZE_X = 23,X3_IMM39_1_INST_WORD_POS_X = 0,X3_IMM39_1_SIGN_VAL_POS_X = 36,X3_IMM39_2_INST_WORD_X = 1,X3_IMM39_2_SIZE_X = 16,X3_IMM39_2_INST_WORD_POS_X = 16,X3_IMM39_2_SIGN_VAL_POS_X = 20,X3_P_INST_WORD_X = 3,X3_P_SIZE_X = 4,X3_P_INST_WORD_POS_X = 0,X3_P_SIGN_VAL_POS_X = 0,X3_TMPLT_INST_WORD_X = 0,X3_TMPLT_SIZE_X = 4,X3_TMPLT_INST_WORD_POS_X = 0,X3_TMPLT_SIGN_VAL_POS_X = 0,X3_BTYPE_QP_INST_WORD_X = 2,X3_BTYPE_QP_SIZE_X = 9,X3_BTYPE_QP_INST_WORD_POS_X = 23,X3_BTYPE_QP_INST_VAL_POS_X = 0,X3_EMPTY_INST_WORD_X = 1,X3_EMPTY_SIZE_X = 2,X3_EMPTY_INST_WORD_POS_X = 14,X3_EMPTY_INST_VAL_POS_X = 0,};
enum MACRO__A {_A_NORMAL = 0x0,_A_RDONLY = 0x1,_A_HIDDEN = 0x2,_A_SYSTEM = 0x4,_A_SUBDIR = 0x10,_A_ARCH = 0x20,};
enum MACRO__O {_O_RDONLY = 0x0,_O_WRONLY = 0x1,_O_RDWR = 0x2,_O_APPEND = 0x8,_O_CREAT = 0x100,_O_TRUNC = 0x200,_O_EXCL = 0x400,_O_TEXT = 0x4000,_O_BINARY = 0x8000,_O_WTEXT = 0x10000,_O_U16TEXT = 0x20000,_O_U8TEXT = 0x40000,_O_RAW = 0x8000,_O_NOINHERIT = 0x80,_O_TEMPORARY = 0x40,_O_SHORT_LIVED = 0x1000,_O_SEQUENTIAL = 0x20,_O_RANDOM = 0x10,};
enum MACRO__P {_P_WAIT = 0,_P_NOWAIT = 1,};
enum MACRO__S {_S_IFMT = 0xF000,_S_IFDIR = 0x4000,_S_IFCHR = 0x2000,_S_IFIFO = 0x1000,_S_IFREG = 0x8000,_S_IREAD = 0x100,_S_IWRITE = 0x80,_S_IEXEC = 0x40,};
typedef union _MCI_ADDR MCI_ADDR;
typedef struct _MRX_FOBX_ MRX_FOBX;
typedef int ( *NEARPROC)();
typedef struct _NET_ROOT NET_ROOT;
typedef struct _NT_TIB32 NT_TIB32;
typedef struct _NT_TIB64 NT_TIB64;
typedef struct _OBJECTID OBJECTID;
typedef struct _ATM_SAP *PATM_SAP;
typedef struct _AVC_IRB *PAVC_IRB;
typedef struct _CLS_LSN *PCLS_LSN;
typedef struct _CONTEXT *PCONTEXT;
typedef struct _PCW_DATA PCW_DATA;
typedef struct tagDEVCAPS *PDEVCAPS;
typedef union _DL_EI48 *PDL_EI48;
typedef union _DL_EI64 *PDL_EI64;
typedef IDrmPort *PDRMPORT;
typedef struct _DSM_IDS *PDSM_IDS;
typedef unsigned int *PDWORD32;
typedef unsigned long long *PDWORD64;
typedef struct _PERF_BIN PERF_BIN;
typedef struct _KTHREAD *PETHREAD;
typedef struct HBA_wwn *PHBA_WWN;
typedef struct _IDEREGS *PIDEREGS;
typedef int *PINT_PTR;
typedef struct in_addr *PIN_ADDR;
typedef struct _IO_RUNS *PIO_RUNS;
typedef struct ip_mreq *PIP_MREQ;
typedef struct _KMUTANT *PKMUTANT;
typedef struct _686FDF1C0C03C3D9039AD8B14FB9C99A *PKSERROR;
typedef struct _237238CE6134F0577B32BA38B1011348 *PKSE_PIN;
typedef struct _KSM_PIN *PKSM_PIN;
typedef struct _69DAD432D0597BAB6A67398C913F94DB *PKSP_PIN;
typedef struct _KTHREAD *PKTHREAD;
typedef struct _MID_MAP_ *PMID_MAP;
typedef struct _MRX_FCB_ *PMRX_FCB;
typedef struct _MSFC_TM *PMSFC_TM;
typedef struct POHANDLE__ *POHANDLE;
typedef struct _PCI_PMC *PPCI_PMC;
typedef struct _RIO_BUF *PRIO_BUF;
typedef struct _KEVENT *PRKEVENT;
typedef struct _KMUTANT *PRKMUTEX;
typedef struct _KQUEUE *PRKQUEUE;
typedef struct _KTIMER *PRKTIMER;
typedef struct _RXCE_VC_ *PRXCE_VC;
typedef struct _SELF_ID *PSELF_ID;
typedef struct _T0_DATA *PT0_DATA;
typedef struct _T1_DATA *PT1_DATA;
typedef struct tcp_hdr *PTCP_HDR;
typedef struct _PTS_DATA PTS_DATA;
typedef unsigned int *PULONG32;
typedef unsigned long long *PULONG64;
typedef IUnknown *PUNKNOWN;
typedef struct _WSK_BUF *PWSK_BUF;
typedef struct _Q2931_IE Q2931_IE;
typedef signed long long RtlINT64;
typedef struct _6D91A0F5ACE4E1ABC2608485BBBFEC12 SCOPE_ID;
typedef struct _SDP_NODE SDP_NODE;
enum SDP_TYPE {SDP_TYPE_NIL = 0x0,SDP_TYPE_UINT = 0x1,SDP_TYPE_INT = 0x2,SDP_TYPE_UUID = 0x3,SDP_TYPE_STRING = 0x4,SDP_TYPE_BOOLEAN = 0x5,SDP_TYPE_SEQUENCE = 0x6,SDP_TYPE_ALTERNATIVE = 0x7,SDP_TYPE_URL = 0x8,SDP_TYPE_CONTAINER = 0x20,};
typedef union _SMB_DATE SMB_DATE;
typedef union _SMB_TIME SMB_TIME;
typedef struct sockaddr SOCKADDR;
typedef struct _SRV_CALL SRV_CALL;
typedef struct _SRV_OPEN SRV_OPEN;
typedef struct _STOR_DPC STOR_DPC;
typedef struct _STRING32 STRING32;
typedef struct _STRING64 STRING64;
typedef union _timecode TIMECODE;
typedef union _TWO_BYTE TWO_BYTE;
typedef unsigned int UINT_PTR;
typedef struct _VGA_CHAR VGA_CHAR;
typedef struct _VLAN_TAG VLAN_TAG;
typedef struct _WHEA128A WHEA128A;
typedef struct _AD8E08CFADC045292413D8E747DD5ED4 _LDOUBLE;
struct _SELF_ID {unsigned int SID_Phys_ID : 6;unsigned int SID_Packet_ID : 2;unsigned int SID_Gap_Count : 6;unsigned int SID_Link_Active : 1;unsigned int SID_Zero : 1;unsigned int SID_Power_Class : 3;unsigned int SID_Contender : 1;unsigned int SID_Delay : 2;unsigned int SID_Speed : 2;unsigned int SID_More_Packets : 1;unsigned int SID_Initiated_Rst : 1;unsigned int SID_Port3 : 2;unsigned int SID_Port2 : 2;unsigned int SID_Port1 : 2;};
struct _complex {double x;double y;};
typedef unsigned int _fsize_t;
typedef int intptr_t;
struct tagLC_ID {unsigned short wLanguage;unsigned short wCountry;unsigned short wCodePage;};
typedef unsigned short wctype_t;
typedef struct _ATM_SAP ATM_SAP;
typedef struct _AVC_IRB AVC_IRB;
typedef struct _CLS_LSN CLS_LSN;
typedef struct _CONTEXT CONTEXT;
typedef struct _CSTRING CSTRING;
typedef struct tagDEVCAPS DEVCAPS;
typedef union _DL_EI48 DL_EI48;
typedef union _DL_EI64 DL_EI64;
typedef struct _DSM_IDS DSM_IDS;
typedef unsigned int DWORD32;
typedef unsigned long long DWORD64;
typedef int ( *FARPROC)();
typedef struct _FEALIST FEALIST;
typedef struct _GEALIST GEALIST;
typedef struct HBA_wwn HBA_WWN;
typedef struct HBITMAP__ *HBITMAP;
struct HDESK__ {int unused;};
struct HFONT__ {int unused;};
typedef void *HGDIOBJ;
struct HGLRC__ {int unused;};
struct HHOOK__ {int unused;};
struct HICON__ {int unused;};
struct HMENU__ {int unused;};
struct HMSAP__ {int unused;};
typedef int HRESULT;
struct HRSRC__ {int unused;};
typedef struct HSPRITE__ *HSPRITE;
struct HTASK__ {int unused;};
struct HUMPD__ {int unused;};
typedef struct HWINSTA__ *HWINSTA;
typedef struct _IDEREGS IDEREGS;
typedef int INT_PTR;
typedef struct in_addr IN_ADDR;
typedef struct _IOSAPIC IOSAPIC;
typedef struct ip_mreq IP_MREQ;
typedef struct _KMUTANT KMUTANT;
typedef struct _686FDF1C0C03C3D9039AD8B14FB9C99A KSERROR;
typedef struct _237238CE6134F0577B32BA38B1011348 KSE_PIN;
typedef struct _KSM_PIN KSM_PIN;
typedef struct _69DAD432D0597BAB6A67398C913F94DB KSP_PIN;
typedef  void *LPCVOID;
typedef struct tagLC_ID *LPLC_ID;
typedef struct tagPOINT *LPPOINT;
typedef struct _RECTL *LPRECTL;
enum MACRO_E {E_UNEXPECTED = 0x8000FFFF,E_NOTIMPL = 0x80004001,E_OUTOFMEMORY = 0x8007000E,E_INVALIDARG = 0x80070057,E_NOINTERFACE = 0x80004002,E_POINTER = 0x80004003,E_HANDLE = 0x80070006,E_ABORT = 0x80004004,E_FAIL = 0x80004005,E_ACCESSDENIED = 0x80070005,E_PENDING = 0x8000000A,E_BOUNDS = 0x8000000B,E_CHANGED_STATE = 0x8000000C,E_ILLEGAL_STATE_CHANGE = 0x8000000D,E_ILLEGAL_METHOD_CALL = 0x8000000E,};
enum MACRO_N {N_BTMASK = 0xF,N_TMASK = 0x30,N_TMASK1 = 0xC0,N_TMASK2 = 0xF0,N_BTSHFT = 0x4,N_TSHIFT = 0x2,};
enum MACRO_O {O_RDONLY = 0,O_WRONLY = 1,O_RDWR = 2,O_APPEND = 8,O_CREAT = 256,O_TRUNC = 512,O_EXCL = 1024,O_TEXT = 16384,O_BINARY = 32768,O_RAW = 32768,O_TEMPORARY = 64,O_NOINHERIT = 128,O_SEQUENTIAL = 32,O_RANDOM = 16,};
enum MACRO_P {P_WAIT = 0,P_NOWAIT = 1,};
enum MACRO_S {S_IFMT = 61440,S_IFDIR = 16384,S_IFCHR = 8192,S_IFREG = 32768,S_IREAD = 256,S_IWRITE = 128,S_IEXEC = 64,};
typedef struct _MRX_FCB_ MRX_FCB;
typedef struct _MSFC_TM MSFC_TM;
typedef struct _NDK_SGE NDK_SGE;
typedef struct _NDK_SRQ NDK_SRQ;
typedef struct tagPOINT *NPPOINT;
typedef struct _AV_PCR *PAV_PCR;
typedef struct _PCI_PMC PCI_PMC;
typedef struct _CO_PVC *PCO_PVC;
typedef struct _82A92AD198AEB558BCF016A3DC6D0FC4 *PCO_SAP;
typedef union _DL_OUI *PDL_OUI;
typedef struct _DVINFO *PDVINFO;
typedef struct _FSINFO *PFSINFO;
typedef struct _E56F877AE116898CEBF188009740BA30 PID_MAP;
typedef struct _IO_CSQ *PIO_CSQ;
typedef struct _KEVENT *PKEVENT;
typedef struct _KMUTANT *PKMUTEX;
typedef struct _KQUEUE *PKQUEUE;
typedef struct _KSGATE *PKSGATE;
typedef struct _7DB559BE1DE343E17A8A94B6F2E38031 *PKSRATE;
typedef struct _E7BDCECB0924BC4C6E03B7EEA1B31BA1 *PKSTIME;
typedef struct _KTIMER *PKTIMER;
typedef union _LENGTH *PLENGTH;
typedef signed int *PLONG32;
typedef long long *PLONG64;
typedef struct _POINTL *PPOINTL;
typedef struct tagPOINTS *PPOINTS;
typedef struct RIO_CQ_t **PRIO_CQ;
typedef struct RIO_RQ_t **PRIO_RQ;
typedef struct RX_LOG *PRX_LOG;
typedef struct _1A4802CA8EE706B456CA9B76D6D132BC *PTUNNEL;
typedef union _UCHAR1 *PUCHAR1;
typedef union _UCHAR2 *PUCHAR2;
typedef union _UCHAR4 *PUCHAR4;
typedef unsigned short *PUINT16;
typedef unsigned int *PUINT32;
typedef unsigned long long *PUINT64;
typedef void *PVOID64;
typedef struct __VRB_SG *PVRB_SG;
typedef struct _WSAMSG *PWSAMSG;
typedef struct _RIO_BUF RIO_BUF;
typedef struct _RSDT_32 RSDT_32;
typedef struct _RSDT_64 RSDT_64;
typedef struct _RXCE_VC_ RXCE_VC;
enum RollOff {BDA_ROLL_OFF_NOT_SET = 0xFFFFFFFF,BDA_ROLL_OFF_NOT_DEFINED = 0x0,BDA_ROLL_OFF_20 = 0x1,BDA_ROLL_OFF_25 = 0x2,BDA_ROLL_OFF_35 = 0x3,BDA_ROLL_OFF_MAX = 0x4,};
typedef struct _SELF_ID SELF_ID;
typedef struct _T0_DATA T0_DATA;
typedef struct _T1_DATA T1_DATA;
typedef struct tcp_hdr TCP_HDR;
typedef unsigned int UCSCHAR;
typedef unsigned int ULONG32;
typedef unsigned long long ULONG64;
enum VARENUM {VT_EMPTY = 0x0,VT_NULL = 0x1,VT_I2 = 0x2,VT_I4 = 0x3,VT_R4 = 0x4,VT_R8 = 0x5,VT_CY = 0x6,VT_DATE = 0x7,VT_BSTR = 0x8,VT_DISPATCH = 0x9,VT_ERROR = 0xA,VT_BOOL = 0xB,VT_VARIANT = 0xC,VT_UNKNOWN = 0xD,VT_DECIMAL = 0xE,VT_I1 = 0x10,VT_UI1 = 0x11,VT_UI2 = 0x12,VT_UI4 = 0x13,VT_I8 = 0x14,VT_UI8 = 0x15,VT_INT = 0x16,VT_UINT = 0x17,VT_VOID = 0x18,VT_HRESULT = 0x19,VT_PTR = 0x1A,VT_SAFEARRAY = 0x1B,VT_CARRAY = 0x1C,VT_USERDEFINED = 0x1D,VT_LPSTR = 0x1E,VT_LPWSTR = 0x1F,VT_FILETIME = 0x40,VT_BLOB = 0x41,VT_STREAM = 0x42,VT_STORAGE = 0x43,VT_STREAMED_OBJECT = 0x44,VT_STORED_OBJECT = 0x45,VT_BLOB_OBJECT = 0x46,VT_CF = 0x47,VT_CLSID = 0x48,VT_VECTOR = 0x1000,VT_ARRAY = 0x2000,VT_BYREF = 0x4000,VT_RESERVED = 0x8000,VT_ILLEGAL = 0xFFFF,VT_ILLEGALMASKED = 0xFFF,VT_TYPEMASK = 0xFFF,};
typedef struct _WSK_BUF WSK_BUF;
typedef struct _6D7329FAD13C403F17A910B84CCFB7BF _LDBL12;
typedef signed char _TSCHAR;
typedef unsigned char _TUCHAR;
typedef char _TXCHAR;
struct __m128d {double m128d_f64[2];};
union __m128i {char m128i_i8[16];short m128i_i16[8];int m128i_i32[4];long long m128i_i64[2];unsigned char m128i_u8[16];unsigned short m128i_u16[8];unsigned int m128i_u32[4];unsigned long long m128i_u64[2];};
typedef struct _0D8B1FE4A186593EFC62C1490ACF7897 __m256d;
union __m256i {char m256i_i8[32];short m256i_i16[16];int m256i_i32[8];long long m256i_i64[4];unsigned char m256i_u8[32];unsigned short m256i_u16[16];unsigned int m256i_u32[8];unsigned long long m256i_u64[4];};
struct _ldiv_t {int quot;int rem;};
typedef int clock_t;
typedef int errcode;
typedef int errno_t;
typedef int jmp_buf[16];
/// #define wchar_t  unsigned __int16 ===DEFINED
typedef struct _AV_PCR AV_PCR;
typedef struct _CO_PVC CO_PVC;
typedef struct _82A92AD198AEB558BCF016A3DC6D0FC4 CO_SAP;
typedef short CSHORT;
typedef union _DL_OUI DL_OUI;
typedef double DOUBLE;
typedef struct _DVINFO DVINFO;
typedef struct _FSINFO FSINFO;
typedef struct HACCEL__ *HACCEL;
typedef void *HANDLE;
typedef struct HBRUSH__ *HBRUSH;
struct HKEY__ {int unused;};
typedef struct HLSURF__ *HLSURF;
struct HPEN__ {int unused;};
struct HRGN__ {int unused;};
struct HSTR__ {int unused;};
struct HWND__ {int unused;};
typedef struct _IOAPIC IOAPIC;
typedef struct _IO_CSQ IO_CSQ;
typedef struct _KEVENT KEVENT;
typedef struct _KMUTANT KMUTEX;
typedef struct _KQUEUE KQUEUE;
typedef struct _KSGATE KSGATE;
typedef struct _7DB559BE1DE343E17A8A94B6F2E38031 KSRATE;
typedef struct _E7BDCECB0924BC4C6E03B7EEA1B31BA1 KSTIME;
typedef struct _KTIMER KTIMER;
typedef union _LENGTH LENGTH;
typedef signed int LONG32;
typedef long long LONG64;
typedef int *LPLONG;
typedef struct tagRECT *LPRECT;
typedef struct tagSIZE *LPSIZE;
typedef void *LPVOID;
typedef struct _NDK_CQ NDK_CQ;
typedef struct _NDK_MR NDK_MR;
typedef struct _NDK_MW NDK_MW;
typedef struct _NDK_PD NDK_PD;
typedef struct _NDK_QP NDK_QP;
typedef struct tagRECT *NPRECT;
typedef struct _NT_TIB NT_TIB;
typedef union _CDB32 *PCDB32;
typedef struct _COORD *PCOORD;
typedef struct _ENG_EVENT *PEVENT;
typedef signed short *PINT16;
typedef signed int *PINT32;
typedef signed long long *PINT64;
typedef struct _KGATE *PKGATE;
typedef struct _KSPIN *PKSPIN;
typedef struct _M128A *PM128A;
typedef struct _POINTL POINTL;
typedef struct tagPOINTS POINTS;
typedef struct tagPOINT *PPOINT;
typedef struct _RECTL *PRECTL;
typedef struct _KAPC *PRKAPC;
typedef struct _KDPC *PRKDPC;
typedef unsigned char *PUINT8;
typedef struct RIO_CQ_t *RIO_CQ;
typedef struct RIO_RQ_t *RIO_RQ;
typedef struct _STRING STRING;
typedef struct _1A4802CA8EE706B456CA9B76D6D132BC TUNNEL;
typedef union _UCHAR1 UCHAR1;
typedef union _UCHAR2 UCHAR2;
typedef union _UCHAR4 UCHAR4;
typedef unsigned short UINT16;
typedef unsigned int UINT32;
typedef unsigned long long UINT64;
typedef unsigned short USHORT;
typedef struct __VRB_SG VRB_SG;
typedef struct _WSABUF WSABUF;
typedef struct _WSAMSG WSAMSG;
typedef struct _72295A7541EC936D47FC3642EE72298B _BCD80;
typedef struct _8E0937B200DCBA03D39E01164C2A4D0D _FP128;
typedef struct _7007A5D07675D2D320A62125AF136FB2 _FPQ64;
typedef void *_HFILE;
typedef char _TCHAR;
union __m128 {float m128_f32[4];unsigned long long m128_u64[2];char m128_i8[16];short m128_i16[8];int m128_i32[4];long long m128_i64[2];unsigned char m128_u8[16];unsigned short m128_u16[8];unsigned int m128_u32[4];};
union __m256 {float m256_f32[8];};
typedef unsigned int _dev_t;
struct _div_t {int quot;int rem;};
typedef unsigned short _ino_t;
struct _iobuf {char *_ptr;int _cnt;char *_base;int _flag;int _file;int _charbuf;int _bufsiz;char *_tmpfname;};
typedef int _off_t;
typedef long long fpos_t;
typedef struct _ldiv_t ldiv_t;
typedef unsigned int size_t;
typedef unsigned short ushort;
typedef unsigned short wint_t;
typedef char CCHAR;
typedef union _CDB32 CDB32;
typedef struct _COORD COORD;
typedef unsigned int DWORD;
typedef float FLOAT;
struct HDC__ {int unused;};
typedef struct HDESK__ *HDESK;
typedef int HFILE;
typedef struct HFONT__ *HFONT;
typedef struct HGLRC__ *HGLRC;
typedef struct HHOOK__ *HHOOK;
typedef struct HICON__ *HICON;
struct HKL__ {int unused;};
typedef struct HMENU__ *HMENU;
typedef struct HMSAP__ *HMSAP;
typedef struct HRSRC__ *HRSRC;
typedef struct HTASK__ *HTASK;
typedef struct HUMPD__ *HUMPD;
typedef signed short INT16;
typedef signed int INT32;
typedef signed long long INT64;
struct IPort {struct IPortVtbl *lpVtbl;};
typedef struct _KGATE KGATE;
typedef struct _KSPIN KSPIN;
typedef struct tagLC_ID LC_ID;
typedef int *LPINT;
typedef struct _M128A M128A;
typedef struct _MAPIC MAPIC;
typedef struct _ATSR *PATSR;
typedef struct _CROM *PCROM;
typedef struct _DMAR *PDMAR;
typedef struct _DRHD *PDRHD;
typedef struct _EF8244FDD6E56AA9E208EAF51AE7E8BA *PECDT;
typedef struct _FACS *PFACS;
typedef struct _FADT *PFADT;
typedef struct _FOBX *PFOBX;
typedef signed char *PINT8;
typedef struct _IPCR *PIPCR;
typedef struct _SID *PISID;
typedef struct _IVRS *PIVRS;
typedef struct _KAPC *PKAPC;
typedef struct _KDPC *PKDPC;
typedef struct _KPCR *PKPCR;
typedef struct _LUID *PLUID;
typedef struct tagPOINT POINT;
typedef struct _OPCR *POPCR;
typedef IPort *PPORT;
typedef struct tagRECT *PRECT;
typedef struct _RHSA *PRHSA;
typedef struct _KTM *PRKTM;
typedef struct _RMRR *PRMRR;
typedef struct _RSDP *PRSDP;
typedef struct tagSIZE *PSIZE;
typedef unsigned int *PUINT;
typedef void *PVOID;
typedef struct _XSDT *PXSDT;
enum Pilot {BDA_PILOT_NOT_SET = 0xFFFFFFFF,BDA_PILOT_NOT_DEFINED = 0x0,BDA_PILOT_OFF = 0x1,BDA_PILOT_ON = 0x2,BDA_PILOT_MAX = 0x3,};
typedef struct _RECTL RECTL;
typedef signed char SCHAR;
typedef short SHORT;
typedef char TCHAR;
typedef unsigned char UCHAR;
typedef unsigned char UINT8;
typedef unsigned int ULONG;
typedef float _FP32;
typedef double _FP64;
typedef struct _72295A7541EC936D47FC3642EE72298B _FP80;
struct _GUID {unsigned int Data1;unsigned short Data2;unsigned short Data3;unsigned char Data4[8];};
struct _IPCR {unsigned int Reserved0 : 16;unsigned int Channel : 6;unsigned int Reserved1 : 2;unsigned int PPCCounter : 6;unsigned int BCCCounter : 1;unsigned int OnLine : 1;};
enum _MODE {KernelMode = 0x0,UserMode = 0x1,MaximumMode = 0x2,};
struct _OPCR {unsigned int Payload : 10;unsigned int OverheadID : 4;unsigned int DataRate : 2;unsigned int Channel : 6;unsigned int Reserved : 2;unsigned int PPCCounter : 6;unsigned int BCCCounter : 1;unsigned int OnLine : 1;};
typedef int _TINT;
union __m64 {unsigned long long m64_u64;float m64_f32[2];char m64_i8[8];short m64_i16[4];int m64_i32[2];long long m64_i64;unsigned char m64_u8[8];unsigned short m64_u16[4];unsigned int m64_u32[2];};
typedef unsigned int dev_t;
typedef struct _div_t div_t;
typedef unsigned short ino_t;
typedef int off_t;
typedef unsigned char uchar;
typedef unsigned int ulong;
typedef struct _ATSR ATSR;
typedef int BOOL;
typedef unsigned char BYTE;
typedef char CHAR;
typedef struct _CROM CROM;
typedef struct _DMAR DMAR;
typedef struct _DRHD DRHD;
typedef struct _DSDT DSDT;
typedef struct _EAOP EAOP;
typedef struct _EF8244FDD6E56AA9E208EAF51AE7E8BA ECDT;
typedef struct _FACS FACS;
typedef struct _FADT FADT;
typedef struct _iobuf FILE;
typedef struct _FOBX FOBX;
typedef struct _GUID GUID;
typedef struct HKEY__ *HKEY;
typedef struct HPEN__ *HPEN;
typedef struct HRGN__ *HRGN;
typedef struct HSTR__ *HSTR;
typedef struct HWND__ *HWND;
typedef signed char INT8;
typedef struct _IPCR IPCR;
typedef struct _IVRS IVRS;
typedef struct _KAPC KAPC;
typedef struct _KDPC KDPC;
typedef struct _KPCR KPCR;
typedef int LONG;
typedef struct _LUID LUID;
typedef struct _OPCR OPCR;
typedef struct _BRB *PBRB;
typedef union _CDB *PCDB;
typedef  char *PCSZ;
typedef struct __DMA_PARAMETERS *PDMA;
typedef struct _FCB *PFCB;
typedef int *PINT;
typedef struct _IRB *PIRB;
typedef struct _KTM *PKTM;
typedef struct _MDL *PMDL;
typedef struct _PEB *PPEB;
typedef int ( *PROC)();
typedef struct _URB *PURB;
typedef struct _VCB *PVCB;
typedef struct _VPB *PVPB;
typedef struct _QUAD QUAD;
typedef struct tagRECT RECT;
typedef struct _RHSA RHSA;
typedef struct _RMRR RMRR;
typedef struct _RSDP RSDP;
typedef struct tagSIZE SIZE;
typedef unsigned int UINT;
typedef unsigned short WORD;
typedef struct _XSDT XSDT;
typedef short _I16;
typedef int _I32;
typedef struct _1CF8D236196540158D67A26DAC991F28 _I64;
struct _KTM;
typedef long long _Q64;
typedef unsigned short _U16;
typedef unsigned int _U32;
typedef struct _1CF8D236196540158D67A26DAC991F28 _U64;
typedef unsigned int uint;
typedef struct _ACL ACL;
typedef struct _BRB BRB;
typedef union _CDB CDB;
typedef struct _FCB FCB;
typedef struct _FEA FEA;
typedef struct _GEA GEA;
typedef struct HDC__ *HDC;
typedef struct HKL__ *HKL;
typedef int INT;
typedef struct _IRB IRB;
typedef struct _IRP IRP;
typedef struct _KTM KTM;
typedef struct _MCB MCB;
typedef struct _MDL MDL;
typedef struct _NPI NPI;
typedef struct _SID SID;
typedef struct _URB URB;
typedef struct _VPB VPB;
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;};
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___0C134FED9563613891FD8FE73D627A45 {ULONG SrbTag;};
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___79CD772B57A90B848A0BB4D03509C7A5 {ULONG dwReserved;};
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___BC35937926C6FBC613FD6B261B9AE84F {ULONG dwAtaPortSpecific;};
struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3___8BEB346562FAF5B62B3932DA3828A9F2 {unsigned short SaDeleteReq : 1;unsigned short CryptoDone : 1;unsigned short NextCryptoDone : 1;unsigned short Pad : 13;USHORT CryptoStatus;};
struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83___B906FBF57CF9FF7366BAF5FEA2701BCC {PVOID OffloadHandle;};
struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_MONITOR_REFRESH_DESC {UINT VidPnSourceID;};
struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR___7981EB885823FFAE046A8EBFAC9A705A___DD41CD652535E6B68DB16881A824C165 {ULONG Begin;ULONG End;};
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___577F46EA907A36E539BFA3B1AF421A80 {ULONG SizeInBytes;ULONG MaxReliableWriteSizeInBytes;};
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088___196EE06A2DB656739DF343240CCA5A2C {UCHAR Flags;};
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088___AB3E8D6F5DDFCC0505F425518AD8237E {ULONG NodeNumber;};
struct _FILE_REMOTE_PROTOCOL_INFORMATION______3AC68F171D171C587D8A80AB3E80154E___4024C6681B04613664DD05BB2C95A759 {ULONG Capabilities;ULONG CachingFlags;};
struct _FILE_REMOTE_PROTOCOL_INFORMATION______3AC68F171D171C587D8A80AB3E80154E___55E32AD925E5589114AECD9F8222A621 {ULONG Capabilities;};
struct _NDIS_NET_BUFFER_LIST_FILTERING_INFO___B48DC90554B964DE8C747D9B814BBB60___0013F1FA1361201B5291CFCA2EDFB635 {USHORT FilterId;USHORT QueueId;};
struct _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93___332EADD4F62035FD5633C7FF38BB14E6 {USHORT FilterNameLength;USHORT FilterNameBufferOffset;};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___24C0FA88E7D8683045143D2871F0ADEA {UINT MaxCount;UINT InitialCount;};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___3407DC9360180855067BCF2436BCF223 {UINT64 FenceValue;};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___62CC19C4D26368E1DB72E254C17C07C0 {HANDLE Event;};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___9FBE9EE09EFBE9DD3093DC43F2458B69 {BOOL InitialState;};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___C71B5FE49AE1E5B05636CDDD7D3DD727 {UINT64 Reserved[8];};
struct _INDICATION_PARAMETERS_ENHANCED______13E44387A1BA7056A332A8AC5EFA477D___2966B27BDD3BF7F486C2DA8CD7E6F64C {USHORT PSM;};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___019FC1BD90023EA502588D9EDB27A093 {UINT Reserved[16];};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___24C0FA88E7D8683045143D2871F0ADEA {UINT MaxCount;UINT InitialCount;};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___9FBE9EE09EFBE9DD3093DC43F2458B69 {BOOL InitialState;};
struct _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7___94C088134ED8F25DD6CC04D6DA40A0AF {HANDLE DirectoryHandle;};
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___019FC1BD90023EA502588D9EDB27A093 {UINT Reserved[16];};
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___2B5A11F81960A3C58CB02D6DFB7B4957 {UINT PreemptionFenceId;UINT LastCompletedFenceId;UINT NodeOrdinal;UINT EngineOrdinal;};
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___ECB8C2C044A0E440702FC598AC25079A {UINT SubmissionFenceId;UINT NodeOrdinal;UINT EngineOrdinal;};
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___F699C0DB98285CF9E5D39CB87B49A7E7___53B92DDCBF9996BF5092A8CE7C1BACE6 {USHORT Response;USHORT ResponseStatus;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___1F3D6AF14FC8FA95287DDF447D6BE47F {ULONG Channel;ULONG Port;ULONG Reserved1;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___6BF00F84A5C727E3B25245E9FBDFB278 {ULONG DataSize;ULONG Reserved1;ULONG Reserved2;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___812F79A5FC2BE6FE62CE9F41854F4845 {ULONG Data[3];};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___D2EE30319AFD96435F4334D8E12C7935 {ULONG Start;ULONG Length;ULONG Reserved;};
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___13E44387A1BA7056A332A8AC5EFA477D {struct _INDICATION_PARAMETERS_ENHANCED______13E44387A1BA7056A332A8AC5EFA477D___2966B27BDD3BF7F486C2DA8CD7E6F64C Request;};
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___A3A06E9BACE23A97764B611BD6F32578 {ULONG PacketLength;ULONG TotalQueueLength;};
struct _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762___94C088134ED8F25DD6CC04D6DA40A0AF {HANDLE DirectoryHandle;};
struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_MONITOR_DESC {UINT VidPnTargetID;};
struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___11081E9A81804B9809362466AC81245B {ULONG PollInterval;};
struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___884D48B70C161200DAEBFA67F1F31A50 {ULONG PollInterval;ULONG Vector;ULONG SwitchToPollingThreshold;ULONG SwitchToPollingWindow;ULONG ErrorThreshold;ULONG ErrorThresholdWindow;};
struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_ENGINE_DESC {UINT NodeIndex;};
struct _TDI20_CLIENT_INTERFACE_INFO___17090AB1AC76E3F51FDFECA895B54C88___883A693B07695AD4FA9EFBC99364FC4B {UCHAR MajorTdiVersion;UCHAR MinorTdiVersion;};
struct _VPD_BLOCK_LIMITS_PAGE_________48AE7A0C43572EBB1C54711BBCEF1E27___1171F22B554AE5456697F3AA7B60F002 {unsigned char UnmapGranularityAlignmentByte3 : 7;unsigned char UGAValid : 1;UCHAR UnmapGranularityAlignmentByte2;UCHAR UnmapGranularityAlignmentByte1;UCHAR UnmapGranularityAlignmentByte0;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___AC0F9210C306688B09ED71AB939B4173 {UINT Reserved[64];};
struct _FILE_OBJECTID_INFORMATION___A3F92533EDD69EF294B8F85C72EB0335___E1A7AD90C36323494F3E6BEAF74B95B5 {UCHAR BirthVolumeId[16];UCHAR BirthObjectId[16];UCHAR DomainId[16];};
struct _INDICATION_PARAMETERS______291A00F730A408470B9A239C0029CCE4___2966B27BDD3BF7F486C2DA8CD7E6F64C {USHORT PSM;};
struct _DEVICE_MEDIA_INFO_________D22BD4DC823953AE58E358A96C378F3D___13DAAE7CADC79513027175D5D6580D0B {UCHAR MediumType;UCHAR DensityCode;};
struct _DXGK_CHILD_CAPABILITIES___9DDE597FBE4C2FCE091CE12E5A13564E___8D7FC5F0568A79CE7E46B43252C96728 {UINT MustBeZero;};
struct _IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5___19ABAB2698FF067AB251F272D19344BF {UCHAR SrcAddr[16];UCHAR DestAddr[16];};
struct _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0___6A0DD04A155F7276D124AE510E11507E {ULONGLONG SuspendStart;ULONGLONG SuspendEnd;};
struct _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC___1985B6C0A98C70387841619C427FA5AC {USHORT Minimum;USHORT Maximum;USHORT MaximumBlocks;};
struct _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC___6F1145A126A17372ED69F96ECC75C774 {USHORT Minimum;USHORT Maximum;};
struct _HW_INITIALIZATION_DATA___629464E23AC53C7DCCC75BF07BD6EA4B___CDC7C98BFDDB2D5AE64DC8463D32D136 {USHORT SizeOfThisPacket;USHORT StreamClassVersion;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___17B187B8C3CC0C2C04D148A62457C1B5 {ULONG MinimumChannel;ULONG MaximumChannel;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___711A32C7DEC837C87D3D622B5D6CA547 {ULONG RequestLine;ULONG Reserved;ULONG Channel;ULONG TransferWidth;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___812F79A5FC2BE6FE62CE9F41854F4845 {ULONG Data[3];};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___CFEA0CDFCF8B31E537C8D44F49AF209A {ULONG Length;ULONG MinBusNumber;ULONG MaxBusNumber;ULONG Reserved;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___F28011FF41998B198A306197E74BFABD {ULONG Priority;ULONG Reserved1;ULONG Reserved2;};
struct _NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D___0E4ACC651B354EB7F71EE82734BE4E30 {UCHAR CompValues[32];};
struct _NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D___5AA99D45118A963659DD55ABCA110FDC {UCHAR CompOUI[3];UCHAR CompSubType;UCHAR CompValues[32];};
struct _BRB_L2CA_OPEN_CHANNEL___C3EA006E90E98BA18A832E0DDC1D8811___53B92DDCBF9996BF5092A8CE7C1BACE6 {USHORT Response;USHORT ResponseStatus;};
struct _IDE_DEVICE_PARAMETERS___DC002D496C8A250B8E7023CEEB6D0A52___1E318727270B7D90275212297693BBE0 {USHORT NumCylinders;USHORT NumHeads;USHORT NumSectorsPerTrack;USHORT Reserved;};
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___291A00F730A408470B9A239C0029CCE4 {struct _INDICATION_PARAMETERS______291A00F730A408470B9A239C0029CCE4___2966B27BDD3BF7F486C2DA8CD7E6F64C Request;};
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___A3A06E9BACE23A97764B611BD6F32578 {ULONG PacketLength;ULONG TotalQueueLength;};
struct _STORAGE_OFFLOAD_TOKEN___45C29CB8E6D02895655581947ABDA793___F76DCE325C2D5C7EAAA9288066DBE18F {UCHAR Reserved2[504];};
union _DEVICE_MEDIA_INFO______F3A2277F3846D5D09599391720F7D644___D22BD4DC823953AE58E358A96C378F3D {struct _DEVICE_MEDIA_INFO_________D22BD4DC823953AE58E358A96C378F3D___13DAAE7CADC79513027175D5D6580D0B ScsiInformation;};
struct _FILE_OBJECTID_BUFFER___8A2E0D068CCE16AC437AD7ECF5548605___E1A7AD90C36323494F3E6BEAF74B95B5 {UCHAR BirthVolumeId[16];UCHAR BirthObjectId[16];UCHAR DomainId[16];};
struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___28631FC908F7F9A5469B368DB2C2AB28 {ULONG Frequency;};
struct _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833___235585ADA1A6D4A89570F816D4F70F98 {ULONG Signature;ULONG CheckSum;};
struct _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833___BE6FFFE6B14D10E80BF326EA5B53821A {GUID DiskId;};
struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___E4726FB01B43180CB4D608E8FC40A3CF {UCHAR DataBuffer[1];};
struct _IMAGE_AUX_SYMBOL______DCE4F7C37BB8311C74F011B1C8562952___3E868562AB90F0B001BAD735FF84E5A3 {ULONG PointerToLinenumber;ULONG PointerToNextFunction;};
struct _IMAGE_AUX_SYMBOL______DCE4F7C37BB8311C74F011B1C8562952___50827E48B61BB1B6D5157F089F0837CE {USHORT Dimension[4];};
struct _IMAGE_AUX_SYMBOL______DE029D051A7479C614D66B3BC2EAA5D0___5BDCCE9CDA78802544222B2C68F4ACCC {USHORT Linenumber;USHORT Size;};
struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___E4726FB01B43180CB4D608E8FC40A3CF {UCHAR DataBuffer[1];};
struct _LLDP_TLV_TYPE_INFO___E487BBF590D175501C59AA3CB0A964A2___78C78507AFB44B529CF4FC0292F93BC8 {UCHAR Oui[3];UCHAR Subtype;};
struct _DATA_BLOCK_HEADER___BB186B0ECE516B444BF083DE287475ED___D5776D461B2025CBC9CD270DE2445408 {UCHAR Reserved;UCHAR M;UCHAR S;UCHAR F;};
union _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93___D43038B1DD00167268319662DF7D50CE {LONG Lock;LONG LockNV;};
struct _DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5___AEEBA1D7BAAC6A97757F743FD696B8E6 {UCHAR Angle;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___15881024B0F660B7398AF4B4249A3A24 {PVOID Argument1;PVOID Argument2;PVOID Argument3;PVOID Argument4;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___69C11E4E3904219D9A8207E8DBA8FECD {PCM_RESOURCE_LIST AllocatedResources;PCM_RESOURCE_LIST AllocatedResourcesTranslated;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___6B11BC409C8BDB4C1D2CF8E6F83B383D {PDEVICE_CAPABILITIES Capabilities;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A3F11F7237E1D19F6A2E9E54FFFFB312 {PPOWER_SEQUENCE PowerSequence;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A48AC67DA7BF2793E8D357C78FAF1030 {ULONG Length;ULONG CompletionFilter;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___AFA69771633799B8FB97339D76F53EAE {ULONG Length;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E3C1BD80419791D70DF0170630DDCD15 {PIO_RESOURCE_REQUIREMENTS_LIST IoResourceRequirementList;};
struct _KUSER_SHARED_DATA___2FE92813FF9B9B4E284DEDC0C06BCA1D___BD1B756ECC8CEE65EDC696B218E648A7 {ULONG ReservedTickCountOverlay[3];ULONG TickCountPad[1];};
struct nd_opt_prefix_info___B36C22119BA8D8A8DE4E1DF87B7DDAC4___4D31284C466138778A6C6027B2D52F0C {UINT8 nd_opt_pi_reserved3[3];UINT8 nd_opt_pi_site_prefix_len;};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___12FA867A59BECB21C674460992AF9488 {ULONG SizeInBytes;};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___1D6CDA7D5D0A584FC0764C46539EFAE1 {ULONG Percentage;};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___68DE96DE104288B6A6B76CEFD20DF3DC {ULONG MinimumAvailablePercentage;ULONG MinimumAvailableContainers;};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___88177A16B25AE2D7461AD53DB2DFFB78 {ULONG Enabled;};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___90296A97FAF2F188598986BCC8190F40 {ULONG AbsoluteGrowthInContainers;ULONG RelativeGrowthPercentage;};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___A77EFFD190B68F1C6D758123EB9F07C2 {ULONGLONG NextContainerSuffix;};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___BEBA4CAF75BBFCFE7350B961AFBB95A3 {ULONG Containers;};
struct _MOUSE_INPUT_DATA___C2F358CA55696375BBE6CFBE88407757___32D8C13BA161E9435E51482125023854 {USHORT ButtonFlags;USHORT ButtonData;};
struct _STOR_LOCK_HANDLE___DF05CED8E4E68472CFDF14CBD12862B2___D126D6E7BD455D2E3F3215E98A3F632A {PVOID Next;PVOID Lock;};
struct _IMAGE_SYMBOL_EX___F68D1BB612E723B85ECC44FD18D8129B___CEDF31EE281EF9B050A3F2DD4988342A {ULONG Short;ULONG Long;};
struct _DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995___235585ADA1A6D4A89570F816D4F70F98 {ULONG Signature;ULONG CheckSum;};
struct _DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995___BE6FFFE6B14D10E80BF326EA5B53821A {GUID DiskId;};
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___102A4CD179CF55A184E910E638146F66 {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG IoControlCode;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___69C11E4E3904219D9A8207E8DBA8FECD {PCM_RESOURCE_LIST AllocatedResources;PCM_RESOURCE_LIST AllocatedResourcesTranslated;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___6B11BC409C8BDB4C1D2CF8E6F83B383D {PDEVICE_CAPABILITIES Capabilities;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___E3C1BD80419791D70DF0170630DDCD15 {PIO_RESOURCE_REQUIREMENTS_LIST IoResourceRequirementList;};
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___33640225AA3D91F9671E4FD78DC671E9 {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG FsControlCode;};
struct _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68___3514090A4590A95A1DE583AEB66EEF9E {ULONGLONG Address;ULONGLONG Type;};
union _RX_CONTEXT______0E64B696EDD7DC71B6561395573F3971___79EB80B3C82106AE3D5E59FE1F3799E8 {LONG Length;LONG LengthRemaining;};
struct _ASYNC_PACKET___03C481F7A4752B31164DFBAFD3BDD779___1D6F3402F5C57A4CB8668FC1E7849EE4 {USHORT AP_Extended_tCode;USHORT AP_Data_Length;};
struct _IMAGE_SYMBOL___5E628A43DDB5BBBB85D75BCB8FDF7ACA___CEDF31EE281EF9B050A3F2DD4988342A {ULONG Short;ULONG Long;};
struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___EAPOL_REQUEST_ID_MESSAGE_WOL_PACKET_PARAMETERS {ULONG Flags;};
struct _TDI_VERSION____0CEFFAAA4EF78E9CFDB9937EFD46D598___883A693B07695AD4FA9EFBC99364FC4B {UCHAR MajorTdiVersion;UCHAR MinorTdiVersion;};
struct _WNODE_HEADER___F03C597F21C6A23CEEDB6A1B653FCCEC___0AFF34700F133A66677DA8590144B5D8 {ULONG Version;ULONG Linkage;};
struct _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE___686E5B55FC3238EAD7412FD5A5C4A093 {LONG lONID;LONG lTSID;LONG lSID;};
struct _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE___D8EDD8813E9D2C777B4C66E2AEE9CFF4 {LONG lProgNumber;};
struct _NAME_CACHE___7DD328E67B358AE0D444348E77BB2A06___B9369606FF1834C7F170102E1B88C818 {MRX_NORMAL_NODE_HEADER spacer;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___7BC758282EA7540BD9403E898486B59E {PMRX_V_NET_ROOT pVNetRoot;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___AFA69771633799B8FB97339D76F53EAE {ULONG Length;};
struct _ERESOURCE___0F9CA66D6BD1B66FB152E2AC5421C126___70F280A3DEE89B0F258B5EC8A3BE63AA {UCHAR ReservedLowFlags;UCHAR WaiterPriority;};
struct _IRP_________63BBF9CAFCFD23268916A053C4643290___D67882FDDE0993B795A398485751D997 {PVOID DriverContext[4];};
union _IRP_________665C8370128C04AB892B069E6FB086E8___8B5CD6CDFBAAB114E6B0B83ED2C2A4E9 {struct _IO_STACK_LOCATION *CurrentStackLocation;ULONG PacketType;};
struct _MRX_FOBX____383A86132F0018DAD323C741CB139F27___1AD73BDAAE097FB53141F860CE77F2CB {UNICODE_STRING UnicodeQueryTemplate;};
struct _SRV_CALL___0ACC7C61618F999A81F788F7C5AA38D2___B9369606FF1834C7F170102E1B88C818 {MRX_NORMAL_NODE_HEADER spacer;};
struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___1C732FDD310020FA7128495F79C8FC1D {UCHAR TransferPeriod;UCHAR ReqAckOffset;};
struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___6FF2EA7F93E3FC49E9FC7D42382D3B64 {UCHAR Modifier[4];};
struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___D7ABDBAACD9DB800E4D6CE155D0E9319 {UCHAR Width;};
struct in_addr___4F64C6817212FE4AF89030399F21EE2D___B9D7529FFD1842B2B059BD2E926FB2C5 {USHORT s_w1;USHORT s_w2;};
struct in_addr___4F64C6817212FE4AF89030399F21EE2D___F085A1F6735C7CEA9C650424FAF692B1 {UCHAR s_b1;UCHAR s_b2;UCHAR s_b3;UCHAR s_b4;};
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___THRESHOLD_RESOURCE_COUNT {UCHAR ResourceCount[4];unsigned char Scope : 2;unsigned char Reserved1 : 6;UCHAR Reserved2[3];};
union _NDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO___FBC3E3D200D1894498D4254511F52EC8 {PVOID MediaSpecificInfo;PVOID NativeWifiSpecificInfo;PVOID Value;};
struct _PCI_COMMON_HEADER______PCI_HEADER_TYPE_2___BF732D50E3BB202AC9DF9F724DDB36D4 {ULONG Base;ULONG Limit;};
union _DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS___E8833107248134010C284DCB80BEA478 {ULONG ulChannel;ULONG ulFrequency;};
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___BACKGROUND_SCAN_STATUS {UCHAR PowerOnMinutes[4];UCHAR Reserved;UCHAR ScanStatus;UCHAR ScansPerformed[2];UCHAR ScanProgress[2];UCHAR MediumScansPerformed[2];};
struct _USB_DEFAULT_PIPE_SETUP_PACKET___wIndex___C5207073352B9080466BBA41ADF73D00 {UCHAR LowByte;UCHAR HiByte;};
struct _USB_DEFAULT_PIPE_SETUP_PACKET___wValue___C5207073352B9080466BBA41ADF73D00 {UCHAR LowByte;UCHAR HiByte;};
union _CLAIM_SECURITY_ATTRIBUTES_INFORMATION___849AEB11D7805A845288B570A3606227 {PCLAIM_SECURITY_ATTRIBUTE_V1 pAttributeV1;};
struct _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS___9503091861CF4683EE1755DF66CD71EF {USHORT BridgeSecondaryStatus;USHORT BridgeControl;};
union _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1___F8600A37A74FD5E8A633BFFD12DED29B {ULONG pInt64[1];ULONG pUint64[1];ULONG ppString[1];ULONG pFqbn[1];ULONG pOctetString[1];};
struct ____7D59497C865DE6C98CEC474B1DC28F43___3F669E74CC6D42C10CB60EC7CCFC5702 {USHORT SpecialNameOffset;USHORT NumberOfExpandedNames;USHORT ExpandedNameOffset;};
struct ____EED1528C7EAD0409AD8D581383F39997___7DB82CB5BC08FF580B488AC7D1BB7838 {BYTE frame;BYTE second;BYTE minute;BYTE hour;};
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___DATE_OF_MANUFACTURE {UCHAR Year[4];UCHAR Week[2];};
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1___5E52735AD19ACB0310D2F12B8DD890CE {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;ULONG TcpOptions;ULONG IpOptions;};
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2___AAE8E5EF1AC450E09B5EEC83DD02498B {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;ULONG IpExtensionHeadersSupported;ULONG TcpOptionsSupported;};
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2___F6900041418FEA52CE0185D09FCBBC16 {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;};
struct _IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS___E626C5E7F1FDB3EA13C1C77C7D656CD4 {unsigned char Reserved1 : 5;unsigned char Override : 1;unsigned char Solicited : 1;unsigned char Router : 1;UINT8 Reserved2[3];};
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___SELF_TEST_RESULTS {unsigned char SelfTestResults : 4;unsigned char Reserved1 : 1;unsigned char SelfTestCode : 3;UCHAR SelfTestNumber;UCHAR PowerOnHours[2];UCHAR AddressOfFirstFailure[8];unsigned char SenseKey : 4;unsigned char Reserved2 : 4;UCHAR AdditionalSenseCode;UCHAR AdditionalSenseCodeQualifier;UCHAR VendorSpecific;};
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___SOLID_STATE_MEDIA {UCHAR Reserved[3];UCHAR PercentageUsed;};
union _1E1F3A8FE12995513A3555C52633C7C9___9BC4A883C75E3D7D69E68DB5928F8CDB {LONG Reset;LONG Resolution;};
union _24396BA7B1ABFC61208375C7C88D8B5F___DA7EE1E32CD45FB8635BE676609FC669 {ULONG OptionsFlags;ULONG RequirementsFlags;};
struct _407A2FFEB90671F2460E9DB49EB613D5___BFBB13DB58F1C35A5B00643EA83A5652 {UCHAR BatteryLevel;UCHAR Brightness;};
union _48F34F6E58318E719B3C17D5DF8D3416___BF32DB6F8F7ADBF71F90C18AFCE2FD9C {WORD wValidBitsPerSample;WORD wSamplesPerBlock;WORD wReserved;};
struct _49DE94CD170A783608C4A6CA5E13CF1F___445634E971F5AB42189D2AF4A82D7917 {ULONGLONG UnsignedMinimum;ULONGLONG UnsignedMaximum;};
struct _49DE94CD170A783608C4A6CA5E13CF1F___EEA291B95E2758FCA85357F8BCFF0FA8 {LONGLONG SignedMinimum;LONGLONG SignedMaximum;};
union _ADC8229B35D2FBAA1DBEA2E6CF74A72A___CC5A134094C1157C29EB10C0D9181A57 {ULONG UsnSourceInfo;ULONG CopyNumber;};
struct _C9F2A16A1B5FC998B91DA494984E0FDB___0559678CAE7576A37561112FDF9C20E6 {LONG SignedMinimum;LONG SignedMaximum;};
struct _C9F2A16A1B5FC998B91DA494984E0FDB___F7C05C0C56E55CB044DFD46C70BB2992 {ULONG UnsignedMinimum;ULONG UnsignedMaximum;};
union _EF62F39E220E1A59E4CABD7B09369D89___209F08508D464E0EBFB2D318B910257C {DFS_REFERRAL_V1 v1;};
struct DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO___FBCA4EB12BF1C0767298C36EFA7C0892 {ULONG uHopPattern;ULONG uHopSet;ULONG uDwellTime;};
struct _FILE_REMOTE_PROTOCOL_INFORMATION___865097E02C343FFD892BE5274F1384F8 {ULONG Reserved[8];};
struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD___85AE8A1C7DB2D3F8E7B70522EFF4A40E {ULONG Encapsulation;ULONG IpOptionsSupported;ULONG TcpOptionsSupported;ULONG TcpChecksum;ULONG UdpChecksum;ULONG IpChecksum;};
struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD___A5EADBA4742C6114AFE67D153539770B {ULONG Encapsulation;ULONG IpExtensionHeadersSupported;ULONG TcpOptionsSupported;ULONG TcpChecksum;ULONG UdpChecksum;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V1___B783A93C66F3958767B0FFA5BCA43F70 {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;unsigned int TcpOptions : 2;unsigned int IpOptions : 2;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2___7FB4AAE69F10985DCBD38DFCF9049415 {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;unsigned int IpExtensionHeadersSupported : 2;unsigned int TcpOptionsSupported : 2;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2___F6900041418FEA52CE0185D09FCBBC16 {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;};
union _VIRTUAL_HW_INITIALIZATION_DATA___0FF088419D5CE492B61F851A1D5DBD89 {USHORT ReservedUshort;USHORT PortVersionFlags;};
struct _VPD_BLOCK_LIMITS_PAGE____________1171F22B554AE5456697F3AA7B60F002 {unsigned char UnmapGranularityAlignmentByte3 : 7;unsigned char UGAValid : 1;UCHAR UnmapGranularityAlignmentByte2;UCHAR UnmapGranularityAlignmentByte1;UCHAR UnmapGranularityAlignmentByte0;};
struct _WHEA_PCIEXPRESS_COMMAND_STATUS___3F732B5E21BA338017FAD933910A3B51 {USHORT Command;USHORT Status;};
union _IMAGE_RUNTIME_FUNCTION_ENTRY___5CE347C3E3AA0FA9F4F8F0D1051C3C6A {ULONG UnwindInfoAddress;ULONG UnwindData;};
struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD___AB23E12DE29272C03DA85FFDA3AFB0C3 {ULONG Encapsulation;unsigned int IpExtensionHeadersSupported : 2;unsigned int TcpOptionsSupported : 2;unsigned int TcpChecksum : 2;unsigned int UdpChecksum : 2;};
struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD___BD1ABE3F7089330570815518DCEC2E2A {ULONG Encapsulation;unsigned int IpOptionsSupported : 2;unsigned int TcpOptionsSupported : 2;unsigned int TcpChecksum : 2;unsigned int UdpChecksum : 2;unsigned int IpChecksum : 2;};
struct _CLASS_FUNCTION_SUPPORT_INFO___C8451C2C65B56671EE6E9E14E6F6646E {unsigned int D3ColdSupported : 1;unsigned int DeviceWakeable : 1;unsigned int IdlePowerEnabled : 1;unsigned int D3IdleTimeoutOverridden : 1;unsigned int Reserved2 : 28;ULONG D3IdleTimeout;};
struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___TEMPERATURE {UCHAR Reserved;UCHAR Temperature;};
struct _DEVICE_MEDIA_INFO____________13DAAE7CADC79513027175D5D6580D0B {UCHAR MediumType;UCHAR DensityCode;};
struct _NDIS_OFFLOAD_ENCAPSULATION___B2822AC75AC4B94EB74A1441EE0BFACA {ULONG Enabled;ULONG EncapsulationType;ULONG HeaderSize;};
struct _TXFS_GET_METADATA_INFO_OUT___739594F3E437CE445B9757A30828364A {LONGLONG LowPart;LONGLONG HighPart;};
struct _WHEA_PROCESSOR_FAMILY_INFO___62A8DAF1CB19E49D91E3DACC630DA822 {unsigned int Stepping : 4;unsigned int Model : 4;unsigned int Family : 4;unsigned int ProcessorType : 2;unsigned int Reserved1 : 2;unsigned int ExtendedModel : 4;unsigned int ExtendedFamily : 8;unsigned int Reserved2 : 4;ULONG Reserved3;};
struct _NDIS_WMI_IPSEC_OFFLOAD_V1___04B785E902F554EE82AB5A3EF1E8BED0 {ULONG Md5;ULONG Sha_1;ULONG Transport;ULONG Tunnel;ULONG Send;ULONG Receive;};
struct _NDIS_WMI_IPSEC_OFFLOAD_V1___37618DCDF7B57DD82418D90E0A50FF53 {ULONG Des;ULONG Reserved;ULONG TripleDes;ULONG NullEsp;ULONG Transport;ULONG Tunnel;ULONG Send;ULONG Receive;};
struct _NDIS_WMI_IPSEC_OFFLOAD_V1___D8E07F18D96E070BC89A9372D5814F4D {ULONG Encapsulation;ULONG AhEspCombined;ULONG TransportTunnelCombined;ULONG IPv4Options;ULONG Flags;};
struct _SCARD_READER_CAPABILITIES___7FAA9F970C1886EDD50B9B3377DCDB8A {ULONG Default;ULONG Max;};
typedef  DXGKARG_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY *IN_CONST_PDXGKARG_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY;
struct RETRIEVAL_POINTERS_BUFFER___1BE95960A89AEFDDC7C143B6A7C3CEB0 {LARGE_INTEGER NextVcn;LARGE_INTEGER Lcn;};
union _HDAUDIO_CONVERTER_FORMAT___268651D303ED1FF2E9E207C3C058BF27 {_HDAUDIO_CONVERTER_FORMAT___268651D303ED1FF2E9E207C3C058BF27___52D101C152B9345B1B2B55DAFF1D826A __anonymous0;unsigned short ConverterFormat;};
struct _REPARSE_GUID_DATA_BUFFER___E4726FB01B43180CB4D608E8FC40A3CF {UCHAR DataBuffer[1];};
union _DEVICE_MEDIA_INFO_________D22BD4DC823953AE58E358A96C378F3D {struct _DEVICE_MEDIA_INFO_________D22BD4DC823953AE58E358A96C378F3D___13DAAE7CADC79513027175D5D6580D0B ScsiInformation;};
union _HW_STREAM_REQUEST_BLOCK___9AC406258F9759C0176992CA6A9257C0 {ULONG NumberOfBytesToTransfer;ULONG ActualBytesTransferred;};
union _IMAGE_IMPORT_DESCRIPTOR___32690C7EF5B9C640E059CDC11577DADC {ULONG Characteristics;ULONG OriginalFirstThunk;};
struct _SCARD_CARD_CAPABILITIES___04A56D5AE48DCA620FF532F490C27CBE {UCHAR Buffer[64];UCHAR Length;};
struct _SCARD_CARD_CAPABILITIES___67FC6CBD3288DA1B1063F1C083E8CBB8 {UCHAR Buffer[16];UCHAR Length;};
struct _SCARD_CARD_CAPABILITIES___6E3D9C38B005446A1B3A45462E2C50A9 {ULONG Supported;ULONG Selected;};
union _CDVD_CAPABILITIES_PAGE___254A78F1960B41FD07B3E9DD4326BCF4 {UCHAR ReadSpeedCurrent[2];UCHAR ObsoleteReserved2[2];};
union _CDVD_CAPABILITIES_PAGE___89C222D438D1A4E3002E695748367B56 {UCHAR ReadSpeedMaximum[2];UCHAR ObsoleteReserved[2];};
union _CDVD_CAPABILITIES_PAGE___C34E40A4E7ED3A9507928E231B2F2525 {UCHAR WriteSpeedMaximum[2];UCHAR ObsoleteReserved4[2];};
union _CDVD_CAPABILITIES_PAGE___D48E2D6B4C0C98BF5D603F20218AFD0F {UCHAR CopyManagementRevision[2];UCHAR Reserved10[2];};
union _CDVD_CAPABILITIES_PAGE___E47D562C812A0990AEEC54257C58558D {UCHAR WriteSpeedCurrent[2];UCHAR ObsoleteReserved11[2];};
union _GENERAL_LOOKASIDE_POOL___069B740C1857A11367A9BFE4C43AA2E8 {ULONG LastAllocateMisses;ULONG LastAllocateHits;};
union _GENERAL_LOOKASIDE_POOL___12DFDCE967313C3B7DB84D914C6D2312 {ULONG AllocateMisses;ULONG AllocateHits;};
union _GENERAL_LOOKASIDE_POOL___30CCD2649BDFA90F272B33B2D857C57A {ULONG FreeMisses;ULONG FreeHits;};
union _HW_INITIALIZATION_DATA___0FF088419D5CE492B61F851A1D5DBD89 {USHORT ReservedUshort;USHORT PortVersionFlags;};
union _IMAGE_FUNCTION_ENTRY64___20B872DD2F1538A436CF92B8294FA12B {ULONGLONG EndOfPrologue;ULONGLONG UnwindInfoAddress;};
typedef  DXGK_MONITORFREQUENCYRANGESET_INTERFACE **DEREF_OUT_CONST_PPDXGK_MONITORFREQUENCYRANGESET_INTERFACE;
union _DXGKARG_SUBMITCOMMAND___2BF1231023CCF326F9650EAE9AC3A0DD {HANDLE hDevice;HANDLE hContext;};
struct _NDIS_IPSEC_OFFLOAD_V1___D8E07F18D96E070BC89A9372D5814F4D {ULONG Encapsulation;ULONG AhEspCombined;ULONG TransportTunnelCombined;ULONG IPv4Options;ULONG Flags;};
union _XXCTL_LOWIO_COMPONENT___A5BF1F1DE168F2930E7B3CD36C2417E0 {ULONG FsControlCode;ULONG IoControlCode;};
union tagKS_VIDEOINFOHEADER2___01A44D9558BB1F61717C3B626DE377C9 {DWORD dwControlFlags;DWORD dwReserved1;};
struct threadlocaleinfostruct___F0551D0CB09E7A078CAEF7CAC43D74C7 {char *locale;unsigned short *wlocale;int *refcount;int *wrefcount;};
struct _DATA_BLOCK_HEADER______D5776D461B2025CBC9CD270DE2445408 {UCHAR Reserved;UCHAR M;UCHAR S;UCHAR F;};
struct _FS_FILTER_PARAMETERS___236B69F1384B32B472ACEC4C285A943A {PERESOURCE ResourceToRelease;};
struct _FS_FILTER_PARAMETERS___AA05E81392ACE825A6BBCE938D4EAD26 {PVOID Argument1;PVOID Argument2;PVOID Argument3;PVOID Argument4;PVOID Argument5;};
struct _IDENTIFY_DEVICE_DATA___5E4194840947852D208055E7E36F6DE0 {UCHAR NVCacheEstimatedTimeToSpinUpInSeconds;UCHAR Reserved;};
struct _IDENTIFY_DEVICE_DATA___7F7924F5455EF74EEF944BAF2D1B53E0 {unsigned char CurrentLongPhysicalSectorAlignment : 2;unsigned char ReservedByte49 : 6;unsigned char DmaSupported : 1;unsigned char LbaSupported : 1;unsigned char IordyDisable : 1;unsigned char IordySupported : 1;unsigned char Reserved1 : 1;unsigned char StandybyTimerSupport : 1;unsigned char Reserved2 : 2;USHORT ReservedWord50;};
union _IMAGE_SECTION_HEADER___4A6E593A9690750D94F7FA5A570333DC {ULONG PhysicalAddress;ULONG VirtualSize;};
union IMPORT_OBJECT_HEADER___8123182D7FCA810AFAD4545864718BF1 {USHORT Ordinal;USHORT Hint;};
struct _CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B___LBA {UCHAR StartingBlockAddress[4];UCHAR PlayLength[4];};
struct _CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B___MSF {UCHAR Reserved1;UCHAR StartingM;UCHAR StartingS;UCHAR StartingF;UCHAR EndingM;UCHAR EndingS;UCHAR EndingF;UCHAR Reserved2;};
struct _IMAGE_AUX_SYMBOL_EX___E4EB5173E13E498BE72EBAB3BCAF7D9F {UCHAR Name[20];};
struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___WOL_BITMAP_PATTERN {ULONG Flags;ULONG MaskOffset;ULONG MaskSize;ULONG PatternOffset;ULONG PatternSize;};
union _STOR_POFX_DEVICE_V2___0B5FC411B4C62088E1E17FEC8681629D {ULONG UnitMinIdleTimeoutInMS;ULONG AdapterIdleTimeoutInMS;};
struct IPRouteNotifyOutput___EEE9818F3F84ECAEFE37CF9D6ABE2C57 {ulong irno_dest;ulong irno_mask;ulong irno_nexthop;ulong irno_proto;ulong irno_ifindex;ulong irno_metric;ulong irno_flags;};
struct _DXGK_DMABUFFERCAPS___A59CDFCD4842FA309C91AA36896BAA4C {UINT Size;UINT PrivateDriverDataSize;UINT SegmentId;UINT AllocationGroup;UINT Reserved[16];};
union _IMAGE_THUNK_DATA32___73C2E9E4D5513E54CD9FEBC1C78BE69B {ULONG ForwarderString;ULONG Function;ULONG Ordinal;ULONG AddressOfData;};
union _IMAGE_THUNK_DATA64___F155400DC8E777EDFF51409B49416578 {ULONGLONG ForwarderString;ULONGLONG Function;ULONGLONG Ordinal;ULONGLONG AddressOfData;};
union _SCSI_REQUEST_BLOCK___881DB7056EA58ED002ED8DEAE86A2418 {ULONG InternalStatus;ULONG QueueSortKey;ULONG LinkTimeoutValue;};
typedef  DXGK_MONITORDESCRIPTORSET_INTERFACE **DEREF_OUT_CONST_PPDXGK_MONITORDESCRIPTORSET_INTERFACE;
typedef  DXGK_MONITORSOURCEMODESET_INTERFACE **DEREF_OUT_CONST_PPDXGK_MONITORSOURCEMODESET_INTERFACE;
union IMAGE_COR20_HEADER___32407F107936FCB17EEA014AB1E5DEE6 {ULONG EntryPointToken;ULONG EntryPointRVA;};
struct _AMD_L1_CACHE_INFO___7F3D7DC6DEE4929F3B22493DFA423641 {UCHAR LineSize;UCHAR LinesPerTag;UCHAR Associativity;UCHAR Size;};
struct _AMD_L3_CACHE_INFO___A61214777383D438D35F1F9A4ECBF3EC {UCHAR LineSize;unsigned char LinesPerTag : 4;unsigned char Associativity : 4;unsigned short Reserved : 2;unsigned short Size : 14;};
union _DMA_TRANSFER_INFO___1AC9C7FF0B634D00F8691EAF3EBE776A {DMA_TRANSFER_INFO_V1 V1;};
union _GENERAL_LOOKASIDE___069B740C1857A11367A9BFE4C43AA2E8 {ULONG LastAllocateMisses;ULONG LastAllocateHits;};
union _GENERAL_LOOKASIDE___12DFDCE967313C3B7DB84D914C6D2312 {ULONG AllocateMisses;ULONG AllocateHits;};
union _GENERAL_LOOKASIDE___30CCD2649BDFA90F272B33B2D857C57A {ULONG FreeMisses;ULONG FreeHits;};
union _RTL_BALANCED_NODE___6446A29996E22DA45E60A1EA14188AE9 {struct _RTL_BALANCED_NODE *Children[2];struct _RTL_BALANCED_NODE___6446A29996E22DA45E60A1EA14188AE9___86DF4A9FEBEFA77DC8EE1BF77C3EBDD5 s;};
union _RTL_BALANCED_NODE___9BF36C84E3411792BEB9166F3629864E {unsigned char Red : 1;unsigned char Balance : 2;ULONG_PTR ParentValue;};
typedef  DXGKARG_UPDATEACTIVEVIDPNPRESENTPATH * IN_CONST_PDXGKARG_UPDATEACTIVEVIDPNPRESENTPATH_CONST;
union _DMA_ADAPTER_INFO___30CB67B4FA26260D4DCF21117DBD827C {DMA_ADAPTER_INFO_V1 V1;};
struct _IMAGE_AUX_SYMBOL___79192DA83C94219CD7DBAD7FD0DDA1D7 {UCHAR Name[18];};
union _IMAGE_LINENUMBER___8F4018462B36FF5E08E7E47CD20461F4 {ULONG SymbolTableIndex;ULONG VirtualAddress;};
union _IMAGE_RELOCATION___B304133DF5C7CCD398D50216E2E397C0 {ULONG VirtualAddress;ULONG RelocCount;};
union _KSM_BDA_PIN_PAIR___54CD25B4E687557DB78A3697AAB04510 {ULONG OutputPinId;ULONG OutputPinType;};
union _KSM_BDA_PIN_PAIR___F2C15BE15B02E5D4E08CDF00E238673A {ULONG InputPinId;ULONG InputPinType;};
typedef  DXGK_VIDPNSOURCEMODESET_INTERFACE **DEREF_OUT_CONST_PPDXGK_VIDPNSOURCEMODESET_INTERFACE;
typedef  DXGK_VIDPNTARGETMODESET_INTERFACE **DEREF_OUT_CONST_PPDXGK_VIDPNTARGETMODESET_INTERFACE;
union _AVC_COMMAND_IRB___39C82A5B2A48A1A8E03C983BBE5BCCB4 {UCHAR CommandType;UCHAR ResponseCode;};
struct _DXGKMDT_OPM_SET_ACP_AND_CGMSA_SIGNALING_PARAMETERS {ULONG ulNewTVProtectionStandard;ULONG ulAspectRatioChangeMask1;ULONG ulAspectRatioData1;ULONG ulAspectRatioChangeMask2;ULONG ulAspectRatioData2;ULONG ulAspectRatioChangeMask3;ULONG ulAspectRatioData3;ULONG ulReserved[4];ULONG ulReserved2[4];ULONG ulReserved3;};
union _ETHERNET_HEADER___1556FB332F5E2F39B2A0C943D96D0976 {UINT16 Type;UINT16 Length;};
struct _MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive {ULONG Encapsulation;ULONG IpOptionsSupported;ULONG TcpOptionsSupported;ULONG TcpChecksum;ULONG UdpChecksum;ULONG IpChecksum;};
struct _MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive {ULONG Encapsulation;ULONG IpExtensionHeadersSupported;ULONG TcpOptionsSupported;ULONG TcpChecksum;ULONG UdpChecksum;};
struct _NTFS_STATISTICS___7571E070C889D08DB25D48A45EE92D71 {ULONG Calls;ULONG Clusters;ULONG Hints;ULONG RunsReturned;ULONG HintsHonored;ULONG HintsClusters;ULONG Cache;ULONG CacheClusters;ULONG CacheMiss;ULONG CacheMissClusters;};
struct _NTFS_STATISTICS___9384ABB0CC0EC9C0951E51F8FDAAF22F {USHORT Write;USHORT Create;USHORT SetInfo;USHORT Flush;};
struct _NTFS_STATISTICS___C26E01C8818FDA238FF8A90EE27DD2F8 {USHORT Write;USHORT Create;USHORT SetInfo;};
struct _WHEA_PCIXBUS_ID___92536E19E1A4E63488016EDB40D91DA1 {UCHAR BusNumber;UCHAR BusSegment;};
struct _BOOT_AREA_INFO___3839CBDF84A3CC2804B95051FB4D4A6B {LARGE_INTEGER Offset;};
struct _FLT_PARAMETERS___236B69F1384B32B472ACEC4C285A943A {PERESOURCE ResourceToRelease;};
struct _FLT_PARAMETERS___3622164DF61772CECDB513BD2EB7BD64 {ULONG DeviceType;};
struct _FLT_PARAMETERS___7CA8F3751773063710B131C149F5D66B {PMDL MdlChain;};
struct _ULARGE_INTEGER___A11EDDC93F80F43D83612CEB0708CAE5 {ULONG LowPart;ULONG HighPart;};
typedef  D3DKMDT_MONITOR_FREQUENCY_RANGE **DEREF_OUT_CONST_PPD3DKMDT_MONITOR_FREQUENCY_RANGE;
typedef enum _D17046D3F50DBE26C20AAD2627B176C2 KSPROPERTY_CAMERACONTROL_VIDEO_STABILIZATION_MODE;
union _DDPIXELFORMAT___0E0BD8DB15B3F2A790C062F781315157 {DWORD dwRBitMask;DWORD dwYBitMask;};
union _DDPIXELFORMAT___10AA641B3215541DB69A48A361AE0013 {DWORD dwRGBBitCount;DWORD dwYUVBitCount;DWORD dwZBufferBitDepth;DWORD dwAlphaBitDepth;};
union _DDPIXELFORMAT___3ED4EC923A768B2489A9D1155BD11968 {DWORD dwRGBAlphaBitMask;DWORD dwYUVAlphaBitMask;DWORD dwRGBZBitMask;DWORD dwYUVZBitMask;};
union _DDPIXELFORMAT___4C5EBD389D88C4C046794501FFF390F4 {DWORD dwBBitMask;DWORD dwVBitMask;};
union _DDPIXELFORMAT___DB4BDA43012B420E1DC9AEEACAA267A5 {DWORD dwGBitMask;DWORD dwUBitMask;};
union _DXGKARG_PATCH___2BF1231023CCF326F9650EAE9AC3A0DD {HANDLE hDevice;HANDLE hContext;};
struct _WHEA_REVISION___CA623CBB00D0468508E5ED0CE7B63B14 {UCHAR MinorRevision;UCHAR MajorRevision;};
typedef  DXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS *IN_CONST_PDXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS;
typedef  DXGKARG_RECOMMENDFUNCTIONALVIDPN * IN_CONST_PDXGKARG_RECOMMENDFUNCTIONALVIDPN_CONST;
struct _MSNdis_80211_ReceivedSignalStrengthEventTrigger {LONG Ndis80211ReceivedSignalStrengthTrigger;};
typedef enum _DEVICEDUMP_COLLECTION_TYPE DEVICEDUMP_COLLECTION_TYPEIDE_NOTIFICATION_TYPE;
typedef  D3DKMDT_MONITOR_FREQUENCY_RANGE * IN_CONST_PD3DKMDT_MONITOR_FREQUENCY_RANGE_CONST;
typedef  DXGKARG_ENUMVIDPNCOFUNCMODALITY * IN_CONST_PDXGKARG_ENUMVIDPNCOFUNCMODALITY_CONST;
typedef DXGKARG_SETDISPLAYPRIVATEDRIVERFORMAT *IN_CONST_PDXGKARG_SETDISPLAYPRIVATEDRIVERFORMAT;
struct _DEVICESCOPE___0E40B4712A51F81A51768366A691CE53 {UCHAR Device;UCHAR Function;};
union _IGMP_HEADER___3A21793F27C9FFFA7D1391D8CCC24F6D {UINT8 Reserved;UINT8 MaxRespTime;UINT8 Code;};
union _KSM_BDA_PIN___E33ABE1885360AB30BA4739A3C7D59A2 {ULONG PinId;ULONG PinType;};
struct _WmiQueryTcpConnectionOffloadHardwareConfig_OUT {MSNdis_WmiTcpConnectionOffload Offload;};
typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE;
typedef  DXGK_VIDPNTOPOLOGY_INTERFACE **DEREF_OUT_CONST_PPDXGK_VIDPNTOPOLOGY_INTERFACE;
typedef DXGKARG_GETSTANDARDALLOCATIONDRIVERDATA *INOUT_PDXGKARG_GETSTANDARDALLOCATIONDRIVERDATA;
typedef  DXGKARG_RECOMMENDVIDPNTOPOLOGY * IN_CONST_PDXGKARG_RECOMMENDVIDPNTOPOLOGY_CONST;
struct _DPC_BUFFER___DC140212850B4BBB5937385B736ED228 {PVOID F;PVOID B;};
union _DS3DVECTOR___1C324E33BC6F74D1A02BB1B088C4590A {FLOAT z;FLOAT dvZ;};
union _DS3DVECTOR___4C8BE1C25D9187060DF6575EC0B5A14F {FLOAT y;FLOAT dvY;};
union _DS3DVECTOR___C7D9B5A2358E86AF5EA4461ED5800501 {FLOAT x;FLOAT dvX;};
struct _EIGHT_BYTE___F1176AC26BBE1D3664185011CC8CE040 {UCHAR Byte0;UCHAR Byte1;UCHAR Byte2;UCHAR Byte3;UCHAR Byte4;UCHAR Byte5;UCHAR Byte6;UCHAR Byte7;};
union _IVMD_BLOCK___AB426EBBCAD19089742802B1D7435C2A {UINT16 DeviceId;UINT16 StartDeviceId;};
union _IVMD_BLOCK___DD07C6CB3A3C828A5F6EC3604DA4D352 {UINT16 AuxiliaryData;UINT16 EndDeviceId;};
struct _MCG_STATUS___65E0EF83A2317964BD9F5E638D1B3E1C {unsigned int RestartIpValid : 1;unsigned int ErrorIpValid : 1;unsigned int MachineCheckInProgress : 1;unsigned int Reserved1 : 29;ULONG Reserved2;};
struct _MCI_STATUS___1D31C29479B2395600399FA7C9D42D3F {USHORT McaErrorCode;USHORT ModelErrorCode;unsigned int OtherInformation : 23;unsigned int ActionRequired : 1;unsigned int Signalling : 1;unsigned int ContextCorrupt : 1;unsigned int AddressValid : 1;unsigned int MiscValid : 1;unsigned int ErrorEnabled : 1;unsigned int UncorrectedError : 1;unsigned int StatusOverFlow : 1;unsigned int Valid : 1;};
struct _USB_DEVICE_CAPABILITY_CONTAINER_ID_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bDevCapabilityType;UCHAR bReserved;UCHAR ContainerID[16];};
struct _WmiQueryReceiveFilterHardwareCapabilities_OUT {MSNdis_ReceiveFilterCapabilities ReceiveFilterHardwareCapabilities;};
struct _WmiQueryTcpConnectionOffloadCurrentConfig_OUT {MSNdis_WmiTcpConnectionOffload Offload;};
struct _WmiQueryTcpConnectionOffloadHardwareConfig_IN {MSNdis_WmiMethodHeader Header;};
typedef  D3DKMDT_MONITOR_SOURCE_MODE **DEREF_OUT_CONST_PPD3DKMDT_MONITOR_SOURCE_MODE;
typedef  DXGKARG_RECOMMENDMONITORMODES * IN_CONST_PDXGKARG_RECOMMENDMONITORMODES_CONST;
typedef enum _B3A25F3087310B7563986D73C0AD94C1 KSPROPERTY_CAMERACONTROL_IMAGE_PIN_CAPABILITY;
struct _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS {PCM_PARTIAL_RESOURCE_LIST *AllocatedResources;};
union _CIP_FRAME___2E16906FAA07C2FD0ECFFAB6F8122094 {PVOID Reserved;PVOID pNext;};
struct _FOUR_BYTE___052E3EAE3F81046A720753D4C5FCE875 {UCHAR Byte0;UCHAR Byte1;UCHAR Byte2;UCHAR Byte3;};
struct _MCI_STATS___C2A101EC7ECF14B971CBBE2E489A1AF6 {USHORT McaCod;USHORT MsCod;unsigned int OtherInfo : 25;unsigned int Damage : 1;unsigned int AddressValid : 1;unsigned int MiscValid : 1;unsigned int Enabled : 1;unsigned int UnCorrected : 1;unsigned int OverFlow : 1;unsigned int Valid : 1;};
union _OS_STRING___0FBC153B268A9F44C6FF20F5B96C7697 {UCHAR bPad;UCHAR bFlags;};
struct _WINDOWS_BLOCK_DEVICE_TOKEN_LIMITS_DESCRIPTOR {UCHAR DescriptorType[2];UCHAR DescriptorLength[2];UCHAR VendorSpecific[6];UCHAR MaximumRangeDescriptors[2];UCHAR MaximumInactivityTimer[4];UCHAR DefaultInactivityTimer[4];UCHAR MaximumTokenTransferSize[8];UCHAR OptimalTransferCount[8];};
struct _WmiQueryReceiveFilterCurrentCapabilities_OUT {MSNdis_ReceiveFilterCapabilities ReceiveFilterCurrentCapabilities;};
struct _WmiQueryReceiveFilterHardwareCapabilities_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiQueryTcpConnectionOffloadCurrentConfig_IN {MSNdis_WmiMethodHeader Header;};
typedef DXGK_TARGETMODE_DETAIL_TIMING **DEREF_ECOUNT_PPDXGK_TARGETMODE_DETAIL_TIMING;
typedef  D3DKMDT_MONITOR_DESCRIPTOR **DEREF_OUT_CONST_PPD3DKMDT_MONITOR_DESCRIPTOR;
typedef  D3DKMDT_VIDPN_PRESENT_PATH **DEREF_OUT_CONST_PPD3DKMDT_VIDPN_PRESENT_PATH;
struct _DXGKMDT_OPM_SET_PROTECTION_LEVEL_PARAMETERS {ULONG ulProtectionType;ULONG ulProtectionLevel;ULONG Reserved;ULONG Reserved2;};
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION {ULONG Flags;};
struct _LOG_PARAMETER______THRESHOLD_RESOURCE_COUNT {UCHAR ResourceCount[4];unsigned char Scope : 2;unsigned char Reserved1 : 6;UCHAR Reserved2[3];};
struct _MCI_ADDR___A76831D64C2EAE3852FBB9C70B9C2DA0 {ULONG Address;ULONG Reserved;};
struct _SUPPORTED_SECURITY_PROTOCOLS_PARAMETER_DATA {UCHAR Reserved1[6];UCHAR SupportedSecurityListLength[2];UCHAR SupportedSecurityProtocol[];};
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION {TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;};
struct _TWO_BYTE___A43753048E566B87C8933E4D36C3FCE6 {UCHAR Byte0;UCHAR Byte1;};
struct _WmiQueryReceiveFilterCurrentCapabilities_IN {MSNdis_WmiMethodHeader Header;};
typedef  D3DKMDT_VIDPN_SOURCE_MODE **DEREF_OUT_CONST_PPD3DKMDT_VIDPN_SOURCE_MODE;
typedef  D3DKMDT_VIDPN_TARGET_MODE **DEREF_OUT_CONST_PPD3DKMDT_VIDPN_TARGET_MODE;
typedef  D3DKMDT_MONITOR_SOURCE_MODE * IN_CONST_PD3DKMDT_MONITOR_SOURCE_MODE_CONST;
typedef enum _2AC2BDA32D2B45F40865B7F1C65FC03F KSPROPERTY_CAMERACONTROL_REGION_OF_INTEREST;
typedef enum _STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE *PSTREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE;
typedef enum _STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE *PSTREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE;
union _KSM_PIN___E33ABE1885360AB30BA4739A3C7D59A2 {ULONG PinId;ULONG PinType;};
typedef enum _D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT;
typedef enum _DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT;
typedef  D3DKMDT_HMONITORFREQUENCYRANGESET IN_CONST_D3DKMDT_HMONITORFREQUENCYRANGESET;
typedef  D3DKMDT_MONITOR_DESCRIPTOR * IN_CONST_PD3DKMDT_MONITOR_DESCRIPTOR_CONST;
typedef  D3DKMDT_VIDPN_PRESENT_PATH * IN_CONST_PD3DKMDT_VIDPN_PRESENT_PATH_CONST;
typedef  DXGKARG_SETVIDPNSOURCEVISIBILITY *IN_CONST_PDXGKARG_SETVIDPNSOURCEVISIBILITY;
typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT *PTRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT;
typedef enum _STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE STREAM_MINIDRIVER_DEVICE_NOTIFICATION_TYPE;
typedef enum _STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE STREAM_MINIDRIVER_STREAM_NOTIFICATION_TYPE;
struct _LENGTH___44C0F8F40373C59203C7FC1E796772D8 {UCHAR b0;UCHAR b1;UCHAR b2;UCHAR b3;};
struct _LENGTH___C09D2434E28C17F81CB8FDACD5F0366E {ULONG l0;};
struct _LOG_PARAMETER______BACKGROUND_SCAN_STATUS {UCHAR PowerOnMinutes[4];UCHAR Reserved;UCHAR ScanStatus;UCHAR ScansPerformed[2];UCHAR ScanProgress[2];UCHAR MediumScansPerformed[2];};
struct _VBICODECFILTERING_STATISTICS_TELETEXT_PIN {VBICODECFILTERING_STATISTICS_COMMON_PIN Common;};
struct _WmiQueryNICSwitchHardwareCapabilities_OUT {MSNdis_NicSwitchCapabilities NicSwitchHardwareCapabilities;};
struct _WmiQueryReceiveFilterGlobalParameters_OUT {MSNdis_ReceiveFilterGlobalParameters ReceiveFilterGlobalParameters;};
typedef  D3DKMDT_VIDPN_SOURCE_MODE * IN_CONST_PD3DKMDT_VIDPN_SOURCE_MODE_CONST;
typedef  D3DKMDT_VIDPN_TARGET_MODE * IN_CONST_PD3DKMDT_VIDPN_TARGET_MODE_CONST;
typedef  DXGKARGCB_NOTIFY_INTERRUPT_DATA *IN_CONST_PDXGKARGCB_NOTIFY_INTERRUPT_DATA;
typedef enum _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE;
typedef enum _4DC501E3A6D49DD0180B70CB55BC0E01 SignalAndServiceStatusSpanningEvent_State;
typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT TRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT;
struct _NDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO {_NDIS_NET_BUFFER_LIST_MEDIA_SPECIFIC_INFO___FBC3E3D200D1894498D4254511F52EC8 __anonymous0;};
struct _REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION {PVOID Object;PVOID ObjectContext;PVOID Reserved;};
struct _WmiQueryNICSwitchCurrentCapabilities_OUT {MSNdis_NicSwitchCapabilities NicSwitchCurrentCapabilities;};
struct _WmiQueryNICSwitchHardwareCapabilities_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiQueryReceiveFilterGlobalParameters_IN {MSNdis_WmiMethodHeader Header;};
typedef  DXGK_MONITOR_INTERFACE **DEREF_OUT_CONST_PPDXGK_MONITOR_INTERFACE;
typedef enum _DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_MODE DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_MODE;
typedef DXGKARGCB_CREATECONTEXTALLOCATION *INOUT_PDXGKARGCB_CREATECONTEXTALLOCATION;
typedef void PO_FX_DEVICE_POWER_NOT_REQUIRED_CALLBACK(PVOID Context);
struct _MSNdis_EthernetMaximumMulticastListSize {ULONG NdisEthernetMaximumMulticastListSize;};
struct _MSNdis_StatusExternalConnectivityChange {ULONG NdisMediaConnectStatus;};
struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION {UNICODE_STRING TargetDevicePath;};
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION {ULONGLONG LastRecoveredLsn;};
struct _VBICODECFILTERING_STATISTICS_COMMON_PIN {DWORD SRBsProcessed;DWORD SRBsIgnored;DWORD SRBsMissing;DWORD InternalErrors;DWORD ExternalErrors;DWORD Discontinuities;DWORD LineConfidenceAvg;DWORD BytesOutput;};
struct _WmiQueryNICSwitchCurrentCapabilities_IN {MSNdis_WmiMethodHeader Header;};
struct _______7DB82CB5BC08FF580B488AC7D1BB7838 {BYTE frame;BYTE second;BYTE minute;BYTE hour;};
typedef enum _D3DKMDT_GRAPHICS_PREEMPTION_GRANULARITY D3DKMDT_GRAPHICS_PREEMPTION_GRANULARITY;
typedef D3DKMDT_MONITOR_SOURCE_MODE **DEREF_OUT_PPD3DKMDT_MONITOR_SOURCE_MODE;
typedef enum _DXGKMDT_OPM_BUS_TYPE_AND_IMPLEMENTATION DXGKMDT_OPM_BUS_TYPE_AND_IMPLEMENTATION;
typedef enum _DXGKMDT_OPM_IMAGE_ASPECT_RATIO_EN300294 DXGKMDT_OPM_IMAGE_ASPECT_RATIO_EN300294;
typedef DXGKARG_QUERYDEPENDENTENGINEGROUP *INOUT_DXGKARG_QUERYDEPENDENTENGINEGROUP;
typedef  DXGKARG_RELEASESWIZZLINGRANGE *IN_CONST_PDXGKARG_RELEASESWIZZLINGRANGE;
typedef  DXGKARG_SETVIDPNSOURCEADDRESS *IN_CONST_PDXGKARG_SETVIDPNSOURCEADDRESS;
typedef  DXGK_TARGETMODE_DETAIL_TIMING *IN_CONST_PDXGK_TARGETMODE_DETAIL_TIMING;
typedef void  NPI_PROVIDER_CLEANUP_BINDING_CONTEXT_FN(PVOID ProviderBindingContext);
typedef enum _WWAN_DEVICE_SERVICE_SESSION_CAPABILITY *PWWAN_DEVICE_SERVICE_SESSION_CAPABILITY;
struct _CDROM_EXCEPTION_PERFORMANCE_DESCRIPTOR {UCHAR Lba[4];UCHAR Time[2];};
struct _IOCTL_IR_ENTER_PRIORITY_RECEIVE_PARAMS {ULONG_PTR Receiver;ULONG_PTR TimeOut;};
struct _IRB_REQ_ISOCH_QUERY_CURRENT_CYCLE_TIME {CYCLE_TIME CycleTime;};
struct _LOG_PARAMETER______DATE_OF_MANUFACTURE {UCHAR Year[4];UCHAR Week[2];};
struct _PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER {USHORT CapabilityID;unsigned short Version : 4;unsigned short Next : 12;};
struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST {ULONG RequestLevel;ULONG RequestFlags;};
struct _VBICODECFILTERING_STATISTICS_NABTS_PIN {VBICODECFILTERING_STATISTICS_COMMON_PIN Common;};
typedef enum _D3DKMDT_COMPUTE_PREEMPTION_GRANULARITY D3DKMDT_COMPUTE_PREEMPTION_GRANULARITY;
typedef  DXGK_VIDPN_INTERFACE **DEREF_OUT_CONST_PPDXGK_VIDPN_INTERFACE;
typedef D3DKMDT_VIDPN_PRESENT_PATH **DEREF_OUT_PPD3DKMDT_VIDPN_PRESENT_PATH;
typedef  D3DKMDT_HMONITORDESCRIPTORSET IN_CONST_D3DKMDT_HMONITORDESCRIPTORSET;
typedef  D3DKMDT_HMONITORSOURCEMODESET IN_CONST_D3DKMDT_HMONITORSOURCEMODESET;
typedef  DXGKARGCB_ENUMHANDLECHILDREN *IN_CONST_PDXGKARGCB_ENUMHANDLECHILDREN;
typedef D3DKMDT_HMONITORFREQUENCYRANGESET *OUT_PD3DKMDT_HMONITORFREQUENCYRANGESET;
typedef enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE *PFS_FILTER_STREAM_FO_NOTIFICATION_TYPE;
typedef enum _WWAN_DEVICE_SERVICE_SESSION_CAPABILITY WWAN_DEVICE_SERVICE_SESSION_CAPABILITY;
struct _DXGKMDT_OPM_HDCP_KEY_SELECTION_VECTOR {BYTE abKeySelectionVector[5];};
struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION {ULONG VolumeFlags;ULONG FlagMask;ULONG Version;ULONG Reserved;};
struct _IRB_REQ_SEND_PHY_CONFIGURATION_PACKET {PHY_CONFIGURATION_PACKET PhyConfigurationPacket;};
struct _MSNdis_80211_BaseServiceSetIdentifier {UCHAR Ndis80211MacAddress[6];};
struct _MSNdis_EthernetMoreTransmitCollisions {ULONG NdisEthernetMoreTransmitCollisions;};
struct _VBICODECFILTERING_STATISTICS_TELETEXT {VBICODECFILTERING_STATISTICS_COMMON Common;};
struct _VPD_BLOCK_DEVICE_CHARACTERISTICS_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR Reserved0;UCHAR PageLength;UCHAR MediumRotationRateMsb;UCHAR MediumRotationRateLsb;UCHAR Reserved1;unsigned char NominalFormFactor : 4;unsigned char Reserved2 : 4;UCHAR Reserved3[56];};
typedef enum _D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING;
typedef enum _D3DKMDT_ENUMCOFUNCMODALITY_PIVOT_TYPE D3DKMDT_ENUMCOFUNCMODALITY_PIVOT_TYPE;
typedef enum _D3DKMDT_MONITOR_ORIENTATION_AWARENESS D3DKMDT_MONITOR_ORIENTATION_AWARENESS;
typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE;
typedef D3DKMDT_VIDPN_SOURCE_MODE **DEREF_OUT_PPD3DKMDT_VIDPN_SOURCE_MODE;
typedef D3DKMDT_VIDPN_TARGET_MODE **DEREF_OUT_PPD3DKMDT_VIDPN_TARGET_MODE;
typedef enum _DXGK_ACTIVE_VIDPN_INVALIDATION_REASON DXGK_ACTIVE_VIDPN_INVALIDATION_REASON;
typedef enum _DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT;
typedef enum _DXGK_PRESENT_DISPLAY_ONLY_PROGRESS_ID DXGK_PRESENT_DISPLAY_ONLY_PROGRESS_ID;
typedef enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE FS_FILTER_STREAM_FO_NOTIFICATION_TYPE;
typedef DXGKARG_QUERYVIDPNHWCAPABILITY *INOUT_PDXGKARG_QUERYVIDPNHWCAPABILITY;
typedef  DXGKARG_PRESENT_DISPLAYONLY *IN_CONST_PDXGKARG_PRESENT_DISPLAYONLY;
typedef D3DKMDT_MONITOR_SOURCE_MODE * IN_PD3DKMDT_MONITOR_SOURCE_MODE_CONST;
typedef enum _34FBAA152A0E04FDD9415278111565D2 KSPROPERTY_MPEG4_MEDIATYPE_ATTRIBUTES;
typedef void (*NLBClearClientStickinessFilterHook_v3)(PCLEAR_CLIENT_STICKINESS_HOOK_INFO ClearClientStickinessHookInfoPtr);
typedef void  NPI_CLIENT_CLEANUP_BINDING_CONTEXT_FN(PVOID ClientBindingContext);
typedef enum _NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE *PNDIS_RECEIVE_QUEUE_OPERATIONAL_STATE;
typedef void (*PUNREGISTER_FOR_DEVICE_NOTIFICATIONS2)(PVOID Context);
struct _CDB___REQUEST_VOLUME_ELEMENT_ADDRESS {UCHAR OperationCode;unsigned char ElementType : 4;unsigned char VolTag : 1;unsigned char LogicalUnitNumber : 3;UCHAR StartingElementAddress[2];UCHAR NumberElements[2];UCHAR Reserved1;UCHAR AllocationLength[3];UCHAR Reserved2;UCHAR Control;};
struct _CDROM_NOMINAL_PERFORMANCE_DESCRIPTOR {UCHAR StartLba[4];UCHAR StartPerformance[4];UCHAR EndLba[4];UCHAR EndPerformance[4];};
struct _DXGKARG_UPDATEACTIVEVIDPNPRESENTPATH {D3DKMDT_VIDPN_PRESENT_PATH VidPnPresentPathInfo;};
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {ULONGLONG BeginAddress;ULONGLONG EndAddress;ULONGLONG ExceptionHandler;ULONGLONG HandlerData;ULONGLONG PrologEndAddress;};
struct _LOG_PARAMETER______SELF_TEST_RESULTS {unsigned char SelfTestResults : 4;unsigned char Reserved1 : 1;unsigned char SelfTestCode : 3;UCHAR SelfTestNumber;UCHAR PowerOnHours[2];UCHAR AddressOfFirstFailure[8];unsigned char SenseKey : 4;unsigned char Reserved2 : 4;UCHAR AdditionalSenseCode;UCHAR AdditionalSenseCodeQualifier;UCHAR VendorSpecific;};
struct _LOG_PARAMETER______SOLID_STATE_MEDIA {UCHAR Reserved[3];UCHAR PercentageUsed;};
struct _MECHANICAL_STATUS_INFORMATION_HEADER {unsigned char CurrentSlot : 5;unsigned char ChangerState : 2;unsigned char Fault : 1;unsigned char Reserved : 5;unsigned char MechanismState : 3;UCHAR CurrentLogicalBlockAddress[3];UCHAR NumberAvailableSlots;UCHAR SlotTableLength[2];};
struct _MSNdis_80211_TransmitAntennaSelected {ULONG Ndis80211TransmitAntennaSelected;};
struct _MSNdis_EthernetReceiveErrorAlignment {ULONG NdisEthernetReceiveErrorAlignment;};
struct _MSNdis_WmiTcpLargeSendOffloadV1_IPv4 {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;ULONG TcpOptions;ULONG IpOptions;};
struct _MSNdis_WmiTcpLargeSendOffloadV2_IPv4 {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;};
struct _MSNdis_WmiTcpLargeSendOffloadV2_IPv6 {ULONG Encapsulation;ULONG MaxOffLoadSize;ULONG MinSegmentCount;ULONG IpExtensionHeadersSupported;ULONG TcpOptionsSupported;};
struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR {ULONG Version;ULONG Size;ULONG NameOffset;ULONG NumberOfLogicalCopies;ULONG NumberOfPhysicalCopies;ULONG PhysicalDiskRedundancy;ULONG NumberOfColumns;ULONG Interleave;};
struct _USB_INTERFACE_ASSOCIATION_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bFirstInterface;UCHAR bInterfaceCount;UCHAR bFunctionClass;UCHAR bFunctionSubClass;UCHAR bFunctionProtocol;UCHAR iFunction;};
struct _WmiQueryReceiveScaleCapabilities_OUT {MSNdis_WmiReceiveScaleCapabilities RssCaps;};
typedef UINT D3DKMDT_VIDEO_PRESENT_SOURCE_MODE_ID;
typedef UINT D3DKMDT_VIDEO_PRESENT_TARGET_MODE_ID;
typedef enum _DXGK_RECOMMENDFUNCTIONALVIDPN_REASON DXGK_RECOMMENDFUNCTIONALVIDPN_REASON;
typedef DXGKARG_ACQUIRESWIZZLINGRANGE *INOUT_PDXGKARG_ACQUIRESWIZZLINGRANGE;
typedef  D3DKMDT_HVIDPNSOURCEMODESET IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET;
typedef  D3DKMDT_HVIDPNTARGETMODESET IN_CONST_D3DKMDT_HVIDPNTARGETMODESET;
typedef  D3DKMDT_VIDPN_PRESENT_PATH *IN_CONST_PD3DKMDT_VIDPN_PRESENT_PATH;
typedef  DXGKARG_SETPOINTERPOSITION *IN_CONST_PDXGKARG_SETPOINTERPOSITION;
typedef enum _NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE;
typedef DOT11_SUPPORTED_DATA_RATES_VALUE_V2 *PDOT11_SUPPORTED_DATA_RATES_VALUE_V1;
typedef enum _NL_INTERFACE_NETWORK_CATEGORY_STATE *PNL_INTERFACE_NETWORK_CATEGORY_STATE;
typedef void PO_FX_DEVICE_POWER_REQUIRED_CALLBACK(PVOID Context);
typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS TRANSACTIONMANAGER_INFORMATION_CLASS;
struct _CDB___GET_EVENT_STATUS_NOTIFICATION {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char Reserved : 4;unsigned char Lun : 3;UCHAR Reserved2[2];UCHAR NotificationClassRequest;UCHAR Reserved3[2];UCHAR EventListLength[2];UCHAR Control;};
struct _CSV_QUERY_FILE_REVISION_ECP_CONTEXT {LONGLONG FileId;LONGLONG FileRevision[3];};
struct _DOT11_SUPPORTED_DATA_RATES_VALUE_V2 {UCHAR ucSupportedTxDataRatesValue[255];UCHAR ucSupportedRxDataRatesValue[255];};
struct _DXGKMDT_OPM_SET_HDCP_SRM_PARAMETERS {ULONG ulSRMVersion;};
struct _FILE_SYSTEM_RECOGNITION_INFORMATION {CHAR FileSystem[9];};
struct _MSNdis_80211_FragmentationThreshold {ULONG Ndis80211FragmentationThreshold;};
struct _MSNdis_80211_ReceiveAntennaSelected {ULONG Ndis80211ReceiveAntennaSelected;};
struct _MSNdis_80211_ReceivedSignalStrength {LONG Ndis80211ReceivedSignalStrength;};
struct _MSNdis_EthernetOneTransmitCollision {ULONG NdisEthernetOneTransmitCollision;};
struct _PROCESS_KEEPALIVE_COUNT_INFORMATION {ULONG Count;};
struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR {ULONG Version;ULONG Size;ULONG BytesPerCacheLine;ULONG BytesOffsetForCacheAlignment;ULONG BytesPerLogicalSector;ULONG BytesPerPhysicalSector;ULONG BytesOffsetForSectorAlignment;};
struct _VBICODECFILTERING_STATISTICS_CC_PIN {VBICODECFILTERING_STATISTICS_COMMON_PIN Common;};
struct _VBICODECFILTERING_STATISTICS_COMMON {DWORD InputSRBsProcessed;DWORD OutputSRBsProcessed;DWORD SRBsIgnored;DWORD InputSRBsMissing;DWORD OutputSRBsMissing;DWORD OutputFailures;DWORD InternalErrors;DWORD ExternalErrors;DWORD InputDiscontinuities;DWORD DSPFailures;DWORD TvTunerChanges;DWORD VBIHeaderChanges;DWORD LineConfidenceAvg;DWORD BytesOutput;};
struct _VPD_LOGICAL_BLOCK_PROVISIONING_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR PageLength[2];UCHAR ThresholdExponent;unsigned char DP : 1;unsigned char ANC_SUP : 1;unsigned char LBPRZ : 1;unsigned char Reserved0 : 2;unsigned char LBPWS10 : 1;unsigned char LBPWS : 1;unsigned char LBPU : 1;unsigned char ProvisioningType : 3;unsigned char Reserved1 : 5;UCHAR Reserved2;UCHAR ProvisioningGroupDescr[];};
struct _WmiQueryPciDeviceCustomProperty_OUT {MSNdis_PciDeviceProperty PciDeviceProperty;};
struct _WmiQueryReceiveFilterParameters_OUT {MSNdis_ReceiveFilterParameters ReceiveFilterParameters;};
struct _WmiQueryReceiveScaleCapabilities_IN {MSNdis_WmiMethodHeader Header;};
typedef enum _D3DKMDT_MONITOR_CAPABILITIES_ORIGIN D3DKMDT_MONITOR_CAPABILITIES_ORIGIN;
typedef enum _D3DKMDT_MONITOR_CONNECTIVITY_CHECKS D3DKMDT_MONITOR_CONNECTIVITY_CHECKS;
typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_ROTATION D3DKMDT_VIDPN_PRESENT_PATH_ROTATION;
typedef DOT11_SUPPORTED_DATA_RATES_VALUE_V2 DOT11_SUPPORTED_DATA_RATES_VALUE_V1;
typedef enum _DXGK_MULTIPLANE_OVERLAY_FILTER_TYPE DXGK_MULTIPLANE_OVERLAY_FILTER_TYPE;
typedef  DXGKARG_COMMITVIDPN * IN_CONST_PDXGKARG_COMMITVIDPN_CONST;
typedef  DXGKARG_DESTROYALLOCATION *IN_CONST_PDXGKARG_DESTROYALLOCATION;
typedef D3DKMDT_VIDPN_SOURCE_MODE * IN_PD3DKMDT_VIDPN_SOURCE_MODE_CONST;
typedef D3DKMDT_VIDPN_TARGET_MODE * IN_PD3DKMDT_VIDPN_TARGET_MODE_CONST;
typedef enum _B14F48021D83543DB76D37697F0DBC63 KSEVENT_PINCAPS_CHANGENOTIFICATIONS;
typedef ULONG NDIS_802_11_FRAGMENTATION_THRESHOLD;
typedef enum _NL_INTERFACE_NETWORK_CATEGORY_STATE NL_INTERFACE_NETWORK_CATEGORY_STATE;
typedef enum DOT11_MANUFACTURING_SELF_TEST_TYPE *PDOT11_MANUFACTURING_SELF_TEST_TYPE;
typedef IO_CSQ_IRP_CONTEXT *PFLT_CALLBACK_DATA_QUEUE_IO_CONTEXT;
typedef enum _NDIS_802_11_NETWORK_INFRASTRUCTURE *PNDIS_802_11_NETWORK_INFRASTRUCTURE;
struct _ARBITER_BOOT_ALLOCATION_PARAMETERS {PLIST_ENTRY ArbitrationList;};
struct _ARBITER_QUERY_ARBITRATE_PARAMETERS {PLIST_ENTRY ArbitrationList;};
struct _ATM_BROADBAND_BEARER_CAPABILITY_IE {UCHAR BearerClass;UCHAR TrafficType;UCHAR TimingRequirements;UCHAR ClippingSusceptability;UCHAR UserPlaneConnectionConfig;};
struct _CreateVirtualPortExUsingDHCHAP_OUT {ULONG Status;};
struct _D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES {UINT FirstChannel;UINT SecondChannel;UINT ThirdChannel;UINT FourthChannel;};
struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS {ULONG Flags;ULONG TimeToLive;ULONG Reserved[2];};
struct _FILE_VALID_DATA_LENGTH_INFORMATION {LARGE_INTEGER ValidDataLength;};
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {ULONG BeginAddress;ULONG EndAddress;ULONG ExceptionHandler;ULONG HandlerData;ULONG PrologEndAddress;};
struct _IRB_REQ_SET_DEVICE_XMIT_PROPERTIES {ULONG fulSpeed;ULONG fulPriority;};
struct _MSNdis_80211_NetworkInfrastructure {ULONG Ndis80211NetworkInfrastructure;};
struct _MSNdis_AtmSupportedServiceCategory {ULONG NdisAtmSupportedServiceCategory;};
struct _MSNdis_WmiIPSecOffloadV1_Supported {ULONG Encapsulation;ULONG AhEspCombined;ULONG TransportTunnelCombined;ULONG IPv4Options;ULONG Flags;};
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 {struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1___5E52735AD19ACB0310D2F12B8DD890CE IPv4;};
struct _STORAGE_FAILURE_PREDICT_THRESHOLDS {UCHAR VendorSpecific[512];};
struct _TRANSACTIONMANAGER_LOG_INFORMATION {GUID LogIdentity;};
struct _VBICODECFILTERING_NABTS_SUBSTREAMS {DWORD SubstreamMask[128];};
struct _WmiQueryPciDeviceCustomProperty_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiQueryReceiveQueueParameters_OUT {MSNdis_ReceiveQueueParameters ReceiveQueueParameters;};
struct _tagKSAUDIOENGINE_BUFFER_SIZE_RANGE {ULONG MinBufferBytes;ULONG MaxBufferBytes;};
typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_CONTENT D3DKMDT_VIDPN_PRESENT_PATH_CONTENT;
typedef enum _D3DKMDT_VIDPN_PRESENT_PATH_SCALING D3DKMDT_VIDPN_PRESENT_PATH_SCALING;
typedef enum _DXGKMDT_OPM_VIDEO_OUTPUT_SEMANTICS DXGKMDT_OPM_VIDEO_OUTPUT_SEMANTICS;
typedef enum _DXGK_RECOMMENDVIDPNTOPOLOGY_REASON DXGK_RECOMMENDVIDPNTOPOLOGY_REASON;
typedef IO_CSQ_IRP_CONTEXT FLT_CALLBACK_DATA_QUEUE_IO_CONTEXT;
typedef DXGKARGCB_GETCAPTUREADDRESS *INOUT_PDXGKARGCB_GETCAPTUREADDRESS;
typedef DXGKARG_UPDATEPAGEDIRECTORY *INOUT_PDXGKARG_UPDATEPAGEDIRECTORY;
typedef  DXGKARG_QUERYADAPTERINFO *IN_CONST_PDXGKARG_QUERYADAPTERINFO;
typedef enum _BECB94647B58B04CC4161D86B675F294 KSPROPERTY_BDA_DIGITAL_DEMODULATOR;
typedef enum _179945923F574A37108B154726F97D56 KSPROPERTY_VIDCAP_VIDEOCOMPRESSION;
typedef enum _NDIS_802_11_NETWORK_INFRASTRUCTURE NDIS_802_11_NETWORK_INFRASTRUCTURE;
typedef NLBClearClientStickinessFilterHook_v3 NLBClearClientStickinessFilterHook;
typedef D3DKMDT_HMONITORDESCRIPTORSET *OUT_PD3DKMDT_HMONITORDESCRIPTORSET;
typedef D3DKMDT_HMONITORSOURCEMODESET *OUT_PD3DKMDT_HMONITORSOURCEMODESET;
typedef enum _DOT11_MANUFACTURING_CALLBACK_TYPE *PDOT11_MANUFACTURING_CALLBACK_TYPE;
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;
typedef enum _RXCE_CONNECTION_INFORMATION_CLASS_ *PRXCE_CONNECTION_INFORMATION_CLASS;
typedef enum _WWAN_DEVICE_SERVICE_SESSION_STATE *PWWAN_DEVICE_SERVICE_SESSION_STATE;
typedef enum _VIDEO_WIN32K_CALLBACKS_PARAMS_TYPE VIDEO_WIN32K_CALLBACKS_PARAMS_TYPE;
struct _ATM_BROADBAND_SENDING_COMPLETE_IE {UCHAR SendingComplete;};
struct _ClearDevInstanceHealthCounters_IN {ULONGLONG PathID;};
struct _DEVICE_DATA_SET_REPAIR_PARAMETERS {ULONG NumberOfRepairCopies;ULONG SourceCopy;ULONG RepairCopies[1];};
struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT {ULONG Offset;ULONG NumberOfMatches;ULONG BufferSizeRequired;};
struct _MODE_CDROM_WRITE_PARAMETERS_PAGE2 {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PageSavable : 1;UCHAR PageLength;unsigned char WriteType : 4;unsigned char TestWrite : 1;unsigned char LinkSizeValid : 1;unsigned char BufferUnderrunFreeEnabled : 1;unsigned char Reserved2 : 1;unsigned char TrackMode : 4;unsigned char Copy : 1;unsigned char FixedPacket : 1;unsigned char MultiSession : 2;unsigned char DataBlockType : 4;unsigned char Reserved3 : 4;UCHAR LinkSize;UCHAR Reserved4;unsigned char HostApplicationCode : 6;unsigned char Reserved5 : 2;UCHAR SessionFormat;UCHAR Reserved6;UCHAR PacketSize[4];UCHAR AudioPauseLength[2];UCHAR MediaCatalogNumber[16];UCHAR ISRC[16];UCHAR SubHeaderData[4];};
struct _MSNdis_80211_ServiceSetIdentifier {UCHAR Ndis80211SsId[33];};
struct _MSNdis_TokenRingCurrentFunctional {ULONG NdisTokenRingCurrentFunctional;};
struct _MSNdis_TokenRingCurrentRingStatus {ULONG NdisTokenRingCurrentRingStatus;};
struct _NPI_LLDP_PROVIDER_CHARACTERISTICS {USHORT Version;USHORT Length;};
struct _WWAN_DEVICE_SERVICE_SESSION_WRITE {ULONG uSessionID;ULONG uDataSize;};
struct _WmiQueryHardwareOffloadConfig_OUT {MSNdis_WmiOffload Offload;};
struct _004D1690B92AB6C871F002F03A8A3150 {USHORT Fid;};
struct _01091B9DEBEBC2354EBF1594EEF6BE89 {ULONG PossibleCount;ULONG CurrentCount;};
struct _060D6FD956D3EBF205D64C3CA4764571 {LARGE_INTEGER StartingLcn;};
struct _0CB766F7CF0963C13F728D1318E296EA {ULONG Flash;ULONG Capabilities;};
struct _0FCABF7018C994F9B8701EF83F726E07 {ULONG State;ULONG Status;ULONG Latency;ULONG Speed;ULONG Processor;};
struct _12065485545C98CF3EA596DDCCDF0ED5 {BOOL fLargeRoom;};
struct _204C6CB5B1CC0D35B371E5C594718A83 {LONGLONG Granularity;LONGLONG Error;};
struct _21360BCC3E7339C6666FC361A17309B6 {ULONG Mode;ULONG StandardsSupported;ULONG MinFrequency;ULONG MaxFrequency;ULONG TuningGranularity;ULONG SettlingTime;ULONG ScanSensingRange;ULONG FineTuneSensingRange;};
struct _299134A1587F81C88B1AF91D3DBFCA39 {ULONG DialogueLevel;};
struct _2AA7958816AF26AF0A1E54EEE587A92C {ULONG InterleavedCapPossible;};
struct _2AB63320416E6F865FE6CC3B86FCC505 {UCHAR LogicalBlockAddress[8];UCHAR TransferLength[4];UCHAR Reserved[4];};
struct _2FCB7B16F35A994219C907239F9496DC {BOOL fRepeatPreviousBlock;BOOL fErrorInCurrentBlock;};
struct _3990AA19D6F3231E9709B3F98F437D89 {ULONG RatioNumerator;ULONG RatioDenominator;ULONG RatioConstantMargin;};
struct _3E8BFD172CC0232DA5E7071EC2A0A89F {ULONG CreateFlags;ULONG Node;};
struct _4165210F16C022CFBA13D08EABF6E295 {USHORT Major;USHORT Minor;};
struct _436EEAB87169589F8FF54A3E6B966B58 {LONG LeftAttenuation;LONG RightAttenuation;};
struct _46F416DE933130F4FE917427A7A28C6B {ULONG AssignmentCount;ULONG OwningPid;};
struct _489123E2AD8EAE95455F5E3AE4E05067 {GUID Guid;};
struct _4BA00FD375EDE5DADBE8CAB814E48723 {UCHAR AvailableData[4];unsigned char ResponseToServiceAction : 5;unsigned char Reserved1 : 3;unsigned char OperationStatus : 7;unsigned char Reserved2 : 1;UCHAR OperationCounter[2];UCHAR EstimatedStatusUpdateDelay[4];UCHAR CompletionStatus;UCHAR SenseDataFieldLength;UCHAR SenseDataLength;UCHAR TransferCountUnits;UCHAR TransferCount[8];UCHAR SegmentsProcessed[2];UCHAR Reserved3[6];UCHAR SenseData[1];};
struct _50092E5B8D5585E25A36D2D7AA7D11CF {LARGE_INTEGER FileReferenceNumber;};
struct _52AD6460DAD19A3D48443005CDCF2412 {ULONG QuietCompression;ULONG LoudCompression;};
struct _61992E1E6DA7B91ECC7FA4A74B115A04 {LONGLONG Earliest;LONGLONG Latest;};
struct _66CF5E28886A6CE6C0E44A3DF6E2CD53 {BOOL fCopyrighted;BOOL fOriginal;};
struct _67AAAF7D3F21423E664B1BA9EE478FED {ULONG FifoSize;ULONG ChipsetDelay;ULONG CodecDelay;};
struct _6D0219E08C78C5ABE6BF34925E3CE89B {UCHAR PopulateTokenDataLength[2];unsigned char Immediate : 1;unsigned char Reserved1 : 7;UCHAR Reserved2;UCHAR InactivityTimeout[4];UCHAR Reserved3[6];UCHAR BlockDeviceRangeDescriptorListLength[2];UCHAR BlockDeviceRangeDescriptor[1];};
struct _6D40E8E2125A3BBCEB5B162FD51EF33B {DS3DVECTOR Front;DS3DVECTOR Top;};
struct _7007A5D07675D2D320A62125AF136FB2 {_Q64 W[2];};
struct _7069A3AF9C526B33740CA7D5809B477E {ULONG Granularity;ULONG Capacity;};
struct _707EC234ECD45402760253CA9174D40C {KSPROPERTY_MEMBERSHEADER MembersHeader; void *Members;};
struct _76743BAC06EF1EE4A95E434A18762A4D {DWORD rating_attribute_id;DWORD rating_attribute_value;};
struct _80E50DFA284ED4BC838B08AAD8EA99BA {LARGE_INTEGER StartingVcn;};
struct _816E3560EF21380C948191659F672DF0 {ULONG MaximumChannelsPerConnection;ULONG MinimumBitsPerSample;ULONG MaximumBitsPerSample;ULONG MinimumSampleFrequency;ULONG MaximumSampleFrequency;ULONG TotalConnections;ULONG ActiveConnections;};
struct _8B9777916333A4B8A3A60FA8F93F002E {SCARD_IO_REQUEST ioRequest;};
struct _8F18F53EFBEBE9496980818DD790123F {ULONGLONG PlayOffset;ULONGLONG WriteOffset;};
struct _8F1F2360283DF2289B54980815148EF3 {ULONG Frequency;ULONG Flags;ULONG PercentFrequency;};
struct _8FE9905039884FA12A33AF170E497D82 {ULONG InsideConeAngle;ULONG OutsideConeAngle;};
struct _9283D0FA6633E8568FC062864CF70F24 {ULONG InterleavedCapSupported;};
struct _97BF4F75CC2B13E4CD29FCADBEF14990 {LONG ActiveSpeakerPositions;};
struct _9ADD4811563784E97592213CBF8060F3 {LONG BitStreamMode;};
struct _9CC657B7E0AE245246966219C61A944E {ULONG CreateFlags;};
struct _9EB91D8C4EA5FEB95803C89041761FE9 {ULONGLONG MaximumSize;ULONGLONG AllocationDelta;};
struct _9FC3DA75389FEB436866F6884A7E4AB3 {UCHAR ReservationKey[8];UCHAR ScopeSpecificAddress[4];UCHAR Reserved;unsigned char Type : 4;unsigned char Scope : 4;UCHAR Obsolete[2];};
struct _A26E898CA2658C153BF5293169564991 {UCHAR bCla;UCHAR bIns;UCHAR bP1;UCHAR bP2;UCHAR bP3;};
struct _A5418207B8ACB2A177A7C8A16D784C3F {UINT64 u64PositionInBlocks;UINT64 u64QPCPosition;};
struct _A62BA18312609C33C34CD1E15FBCE3E3 {UCHAR ReservationKey[8];UCHAR ServiceActionReservationKey[8];UCHAR ScopeSpecificAddress[4];unsigned char ActivatePersistThroughPowerLoss : 1;unsigned char Reserved1 : 7;UCHAR Reserved2;UCHAR Obsolete[2];};
struct _A97809CBA93BE73DFF75CDF56246D798 {ULONG OffsetInstanceData;ULONG LengthInstanceData;};
struct _AAE9FC4E72E05402C2BAEC93236C31D9 {UCHAR TokenDescriptorsLength[4];UCHAR TokenDescriptor[1];};
struct _AFA69771633799B8FB97339D76F53EAE {ULONG Length;};
struct _B09E3BE94FE30150210BFD831422B212 {ULONG Mode;ULONG State;};
struct _B0BC4AADD5C9FF12157D028DEF0CCD6A {ULONG FromNode;ULONG FromNodePin;ULONG ToNode;ULONG ToNodePin;};
struct _B4A25942D193F2EAA86C395C02EC729E {ULONG CX;ULONG CY;};
struct _B62AAB724E8D7D841EB663A6FEE96A5E {ULONG MinFrameSize;ULONG MaxFrameSize;ULONG Stepping;};
struct _B772E343E2BFFCD16A4D25DD01A27975 {USHORT MinMajorVersion;USHORT MaxMajorVersion;};
struct _BC7A094E99B893F962A170A802EFE988 {ULONG MembersFlags;ULONG MembersSize;ULONG MembersCount;ULONG Flags;};
struct _BFD35443418CDCF1187E122E74A5B815 {DWORD dwPitch;DWORD dwXOrigin;DWORD dwYOrigin;};
struct _C96031E4DF2664011E796FDD2EAA04AE {ULONG Capabilities;ULONG Reserved0;};
struct _CA0DACF90AABDE33CADDF7416F0C17F2 {LONGLONG TimeBase;LONGLONG Interval;};
struct _D0C2582348DF16EE31650672742EA602 {ULONG Size;ULONG Count;};
struct _D55ED97765090EFE6FCBF66E3A8167D2 {UCHAR Generation[4];UCHAR AdditionalLength[4];UCHAR ReservationKeyList[][8];};
struct _D611436986C6FEF0F654B123D787805F {ULONG PriorityClass;ULONG PrioritySubClass;};
struct _D78C377FC65BA439C025401600215C2E {UCHAR TokenIdentifier[2];UCHAR Token[512];};
struct _DCCCDBDB2D2AC461237A75FB18C0449E {LONGLONG Time;LONGLONG SystemTime;};
struct _DE2D2125000B90024B7DD637FE0DF34E {ULONG TimeDeltaMs;ULONG ByteCount;};
struct _E4277B22BE8DDC98F66C5B49691234CA {ULONG64 Token;};
struct _E4F7CAB5B6B7D45C514D7552CCE8FB09 {BOOL fDownMix;BOOL fDolbySurround;};
struct _E79116A6AA0CFF653592F57D81FA8A4C {ULONG MaximumChannelsPerConnection;ULONG MinimumBitsPerSample;ULONG MaximumBitsPerSample;ULONG MinimumSampleFrequency;ULONG MaximumSampleFrequency;ULONG TotalConnections;ULONG StaticConnections;ULONG StreamingConnections;ULONG ActiveConnections;ULONG ActiveStaticConnections;ULONG ActiveStreamingConnections;ULONG Total3DConnections;ULONG Static3DConnections;ULONG Streaming3DConnections;ULONG Active3DConnections;ULONG ActiveStatic3DConnections;ULONG ActiveStreaming3DConnections;ULONG TotalSampleMemory;ULONG FreeSampleMemory;ULONG LargestFreeContiguousSampleMemory;};
struct _E7F5496ECA9568683CB70A9C1E22006D {UCHAR WriteUsingTokenDataLength[2];unsigned char Immediate : 1;unsigned char Reserved1 : 7;UCHAR Reserved2[5];UCHAR BlockOffsetIntoToken[8];UCHAR Token[512];UCHAR Reserved3[6];UCHAR BlockDeviceRangeDescriptorListLength[2];UCHAR BlockDeviceRangeDescriptor[1];};
struct _EC8EE2E9AF7D4EC32726A7FD632A186D {ULONG ObjectType;ULONG ObjectLength;};
struct _F0DE5EAC046D7D32AA534DC253D377C4 {ULONG ulDeviceType;};
struct _F9D4D1B8EC80C871C217333061A02293 {ULONG VideoStabilizationMode;ULONG Capabilities;};
typedef enum _D3DDDI_SYNCHRONIZATIONOBJECT_TYPE D3DDDI_SYNCHRONIZATIONOBJECT_TYPE;
typedef ULONG DEVICE_DATA_MANAGEMENT_SET_ACTION;
typedef enum _DOT11_MANUFACTURING_CALLBACK_TYPE DOT11_MANUFACTURING_CALLBACK_TYPE;
typedef enum _DXGKMDT_DPCP_PROTECTION_LEVEL DXGKMDT_OPM_DPCP_PROTECTION_LEVEL;
typedef enum _DXGKMDT_OPM_HDCP_PROTECTION_LEVEL DXGKMDT_OPM_HDCP_PROTECTION_LEVEL;
typedef enum _206E03DA3E63D1D496663A7F788871C5 DXGK_BACKLIGHT_OPTIMIZATION_LEVEL;
typedef ULONG FLT_INSTANCE_QUERY_TEARDOWN_FLAGS;
typedef DXGKARG_DESCRIBEALLOCATION *INOUT_PDXGKARG_DESCRIBEALLOCATION;
typedef  DXGKARGCB_GETHANDLEDATA *IN_CONST_PDXGKARGCB_GETHANDLEDATA;
typedef  DXGKARG_CLOSEALLOCATION *IN_CONST_PDXGKARG_CLOSEALLOCATION;
typedef  DXGKARG_SETPOINTERSHAPE *IN_CONST_PDXGKARG_SETPOINTERSHAPE;
typedef enum _02FAD7642A42DC49E4482F6F328202A2 KSMETHOD_BDA_DEVICE_CONFIGURATION;
typedef enum _126464B142E9F95B22C7078089269995 KSMETHOD_BDA_USERACTIVITY_SERVICE;
typedef ACPI_ENUM_CHILDREN_OUTPUT_BUFFER *PACPI_ENUM_CHILDREN_OUTPUT_BUFFER;
typedef enum _CDROM_PERFORMANCE_EXCEPTION_TYPE *PCDROM_PERFORMANCE_EXCEPTION_TYPE;
typedef enum _CDROM_PERFORMANCE_TOLERANCE_TYPE *PCDROM_PERFORMANCE_TOLERANCE_TYPE;
typedef enum _HAL_DMA_CRASH_DUMP_REGISTER_TYPE *PHAL_DMA_CRASH_DUMP_REGISTER_TYPE;
typedef void (*PPORT_ALLOC_COMPLETE_NOTIFICATION)(PVOID Context);
typedef enum _RESOURCEMANAGER_INFORMATION_CLASS RESOURCEMANAGER_INFORMATION_CLASS;
typedef enum _RXCE_CONNECTION_INFORMATION_CLASS_ RXCE_CONNECTION_INFORMATION_CLASS;
typedef PVOID  USB_BUSIFFN_GET_DEVICE_BUSCONTEXT(PVOID HubBusContext, PVOID DeviceHandle);
typedef enum _WWAN_DEVICE_SERVICE_SESSION_STATE WWAN_DEVICE_SERVICE_SESSION_STATE;
struct _ATM_TRANSIT_NETWORK_SELECTION_IE {UCHAR TypeOfNetworkId;UCHAR NetworkIdPlan;UCHAR NetworkIdLength;UCHAR NetworkId[1];};
struct _DEVICEDUMP_RESTRICTED_SUBSECTION {UCHAR bData[1];};
struct _DOT11_CURRENT_OFFLOAD_CAPABILITY {ULONG uReserved;ULONG uFlags;};
struct _DOT11_SUPPORTED_DATA_RATES_VALUE {UCHAR ucSupportedTxDataRatesValue[8];UCHAR ucSupportedRxDataRatesValue[8];};
struct _DXGKMDT_OPM_ENCRYPTED_PARAMETERS {BYTE abEncryptedParameters[256];};
struct _FILE_FS_VOLUME_FLAGS_INFORMATION {ULONG Flags;};
struct _IOCTL_IR_SET_WAKE_PATTERN_PARAMS {ULONG Protocol;ULONG Payload;ULONG Address;};
struct _MODE_CDROM_WRITE_PARAMETERS_PAGE {UCHAR PageLength;unsigned char WriteType : 4;unsigned char TestWrite : 1;unsigned char LinkSizeValid : 1;unsigned char BufferUnderrunFreeEnabled : 1;unsigned char Reserved2 : 1;unsigned char TrackMode : 4;unsigned char Copy : 1;unsigned char FixedPacket : 1;unsigned char MultiSession : 2;unsigned char DataBlockType : 4;unsigned char Reserved3 : 4;UCHAR LinkSize;UCHAR Reserved4;unsigned char HostApplicationCode : 6;unsigned char Reserved5 : 2;UCHAR SessionFormat;UCHAR Reserved6;UCHAR PacketSize[4];UCHAR AudioPauseLength[2];unsigned char Reserved7 : 7;unsigned char MediaCatalogNumberValid : 1;UCHAR MediaCatalogNumber[13];UCHAR MediaCatalogNumberZero;UCHAR MediaCatalogNumberAFrame;unsigned char Reserved8 : 7;unsigned char ISRCValid : 1;UCHAR ISRCCountry[2];UCHAR ISRCOwner[3];UCHAR ISRCRecordingYear[2];UCHAR ISRCSerialNumber[5];UCHAR ISRCZero;UCHAR ISRCAFrame;UCHAR ISRCReserved;UCHAR SubHeaderData[4];};
struct _MSFC_NPIVLUNMappingInformationEx {UCHAR WWPNVirtualPort[8];UCHAR WWPNPhysicalPort[8];UCHAR PortNumber;UCHAR OSBus;UCHAR OSTarget;UCHAR OSLUN;};
struct _MSNdis_AtmHardwareCurrentAddress {MSNdis_NetworkAddress NdisAtmHardwareCurrentAddress;};
struct _MSNdis_FddiShortPermanentAddress {MSNdis_NetworkShortAddress NdisPermanentAddress;};
struct _MSNdis_NetworkDirectCapabilities {MSNdis_NetworkDirectAdapterCapabilities NdCapabilities;};
struct _MSNdis_TokenRingCurrentRingState {ULONG NdisTokenRingCurrentRingState;};
struct _MSNdis_TokenRingPermanentAddress {MSNdis_NetworkAddress NdisPermanentAddress;};
struct _MSNdis_WmiIPSecOffloadV1_IPv4ESP {ULONG Des;ULONG Reserved;ULONG TripleDes;ULONG NullEsp;ULONG Transport;ULONG Tunnel;ULONG Send;ULONG Receive;};
struct _NDIS_RECEIVE_THROTTLE_PARAMETERS {ULONG MaxNblsToIndicate;unsigned int MoreNblsPending : 1;};
struct _NDK_OBJECT_HEADER_RESERVED_BLOCK {PVOID rf[4];};
struct _NOTIFICATION_EVENT_STATUS_HEADER {UCHAR EventDataLength[2];unsigned char NotificationClass : 3;unsigned char Reserved : 4;unsigned char NEA : 1;UCHAR SupportedEventClasses;UCHAR ClassEventData[];};
struct _PROCESS_HANDLE_TRACING_ENABLE_EX {ULONG Flags;ULONG TotalSlots;};
struct _REG_KEY_HANDLE_CLOSE_INFORMATION {PVOID Object;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _STORAGE_DEVICE_UNIQUE_IDENTIFIER {ULONG Version;ULONG Size;ULONG StorageDeviceIdOffset;ULONG StorageDeviceOffset;ULONG DriveLayoutSignatureOffset;};
struct _USB_DEVICE_CAPABILITY_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bDevCapabilityType;};
struct _WMI_CHANGER_PROBLEM_DEVICE_ERROR {ULONG ChangerProblemType;};
struct _WWAN_DEVICE_SERVICE_SESSION_READ {ULONG uSessionID;ULONG uDataSize;};
struct _WmiGetMonitorRawEEdidV1Block_OUT {UCHAR BlockType;UCHAR BlockContent[128];};
struct _WmiMonitorAnalogVideoInputParams {UCHAR SignalLevelStandard;UCHAR SetupExpected;UCHAR SeparateSyncsSupported;UCHAR CompositeSyncSupported;UCHAR SyncOnGreenVideoSupported;UCHAR SerrationOfVsyncRequired;};
struct _WmiQueryCurrentOffloadConfig_OUT {MSNdis_WmiOffload Offload;};
struct _WmiQueryHDSplitCurrentConfig_OUT {MSNdis_WmiHDSplitCurrentConfig HdSplitCurrentConfig;};
struct _WmiQueryHardwareOffloadConfig_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiQueryPhysicalMediumTypeEx_OUT {ULONG NdisPhysicalMediumTypeEx;};
typedef enum _CDROM_PERFORMANCE_EXCEPTION_TYPE CDROM_PERFORMANCE_EXCEPTION_TYPE;
typedef enum _CDROM_PERFORMANCE_TOLERANCE_TYPE CDROM_PERFORMANCE_TOLERANCE_TYPE;
typedef enum _8787F4302E3326DCF7673C839D45289E ChannelChangeSpanningEvent_State;
typedef enum _DXGKMDT_OPM_ACP_PROTECTION_LEVEL DXGKMDT_OPM_ACP_PROTECTION_LEVEL;
typedef enum _DXGK_BUILDPAGINGBUFFER_OPERATION DXGK_BUILDPAGINGBUFFER_OPERATION;
typedef ULONG FLT_ALLOCATE_CALLBACK_DATA_FLAGS;
typedef ULONG FLT_OPERATION_REGISTRATION_FLAGS;
typedef enum _HAL_DMA_CRASH_DUMP_REGISTER_TYPE HAL_DMA_CRASH_DUMP_REGISTER_TYPE;
typedef DXGKARG_CREATEALLOCATION2 *INOUT_PDXGKARG_CREATEALLOCATION2;
typedef DXGKARG_DESCRIBEPAGETABLE *INOUT_PDXGKARG_DESCRIBEPAGETABLE;
typedef DXGKARG_MOVEPAGEDIRECTORY *INOUT_PDXGKARG_MOVEPAGEDIRECTORY;
typedef DXGKARG_QUERYCURRENTFENCE *INOUT_PDXGKARG_QUERYCURRENTFENCE;
typedef DXGKARG_QUERYENGINESTATUS *INOUT_PDXGKARG_QUERYENGINESTATUS;
typedef  DXGKARG_COLLECTDBGINFO *IN_CONST_PDXGKARG_COLLECTDBGINFO;
typedef  DXGKARG_OPENALLOCATION *IN_CONST_PDXGKARG_OPENALLOCATION;
typedef  DXGKARG_PREEMPTCOMMAND *IN_CONST_PDXGKARG_PREEMPTCOMMAND;
typedef IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP IRB_REQ_ISOCH_ALLOCATE_RESOURCES;
typedef enum _FEF87262652661024D4D95B05F6AD345 KE_PROCESSOR_CHANGE_NOTIFY_STATE;
typedef enum _38DCB8AC08778B6D83885D33F45337CD KSPROPERTY_DIRECTSOUND3DLISTENER;
typedef CREATIVEFASTSPEECH10WAVEFORMAT *LPCREATIVEFASTSPEECH10WAVEFORMAT;
typedef void (*NDK_FN_DISCONNECT_EVENT_CALLBACK)(PVOID DisconnectEventContext);
typedef enum _29FE7A6908066E8FC2BBE0B126D9C91F NETWORK_OPEN_INTEGRITY_QUALIFIER;
typedef CREATIVEFASTSPEECH10WAVEFORMAT *NPCREATIVEFASTSPEECH10WAVEFORMAT;
typedef D3DKMDT_HVIDPNSOURCEMODESET *OUT_PD3DKMDT_HVIDPNSOURCEMODESET;
typedef D3DKMDT_HVIDPNTARGETMODESET *OUT_PD3DKMDT_HVIDPNTARGETMODESET;
typedef enum _0689FBDB5239F8144BB29647BD372423 *PCAPTURE_MEMORY_ALLOCATION_FLAGS;
typedef enum _DXGK_CHILD_DEVICE_HPD_AWARENESS *PDXGK_CHILD_DEVICE_HPD_AWARENESS;
typedef enum _FILTER_VOLUME_INFORMATION_CLASS *PFILTER_VOLUME_INFORMATION_CLASS;
typedef enum _NDIS_802_11_AUTHENTICATION_MODE *PNDIS_802_11_AUTHENTICATION_MODE;
typedef TDI_REQUEST_KERNEL *PTDI_REQUEST_KERNEL_DISASSOCIATE;
struct _ARBITER_ADD_RESERVED_PARAMETERS {PDEVICE_OBJECT ReserveDevice;};
struct _CDB___READ_FORMATTED_CAPACITIES {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char Lun : 3;UCHAR Reserved2[5];UCHAR AllocationLength[2];UCHAR Control;};
struct _CDB___RECEIVE_TOKEN_INFORMATION {UCHAR OperationCode;unsigned char ServiceAction : 5;unsigned char Reserved1 : 3;UCHAR ListIdentifier[4];UCHAR Reserved2[4];UCHAR AllocationLength[4];UCHAR Reserved3;UCHAR Control;};
struct _DOT11_OPERATION_MODE_CAPABILITY {ULONG uReserved;ULONG uMajorVersion;ULONG uMinorVersion;ULONG uNumOfTXBuffers;ULONG uNumOfRXBuffers;ULONG uOpModeCapability;};
struct _DOT11_WFD_CONFIGURATION_TIMEOUT {UCHAR GOTimeout;UCHAR ClientTimeout;};
struct _DsmSetLoadBalancePolicyALUA_OUT {ULONG Status;};
struct _FILE_FS_SECTOR_SIZE_INFORMATION {ULONG LogicalBytesPerSector;ULONG PhysicalBytesPerSectorForAtomicity;ULONG PhysicalBytesPerSectorForPerformance;ULONG FileSystemEffectivePhysicalBytesPerSectorForAtomicity;ULONG Flags;ULONG ByteOffsetForSectorAlignment;ULONG ByteOffsetForPartitionAlignment;};
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER {PVOID ClientSession;PVOID ClientProcess;};
struct _FIRMWARE_BOOT_PERFORMANCE_TABLE {ULONG Signature;ULONG Length;};
struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_1 {ULONG32 ProviderId;};
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {ULONG FuncStart;unsigned int PrologLen : 8;unsigned int FuncLen : 22;unsigned int ThirtyTwoBit : 1;unsigned int ExceptionFlag : 1;};
struct _IPSEC_OFFLOAD_V2_ALGORITHM_INFO {ULONG Identifier;ULONG KeyLength;ULONG KeyOffsetBytes;ULONG AdditionalInfo;};
struct _MSNdis_80211_AuthenticationMode {ULONG Ndis80211AuthenticationMode;};
struct _MSNdis_80211_InfrastructureMode {MSNdis_80211_NetworkInfrastructure Ndis80211InfrastructureMode;};
struct _MSNdis_80211_TransmitPowerLevel {ULONG Ndis80211TransmitPowerLevel;};
struct _MSNdis_EthernetPermanentAddress {MSNdis_NetworkAddress NdisPermanentAddress;};
struct _MSNdis_FddiLongPermanentAddress {MSNdis_NetworkAddress NdisPermanentAddress;};
struct _MSNdis_FddiShortMaximumListSize {ULONG NdisFddiShortMaximumListSize;};
struct _MSNdis_WmiIPSecOffloadV1_IPv4AH {ULONG Md5;ULONG Sha_1;ULONG Transport;ULONG Tunnel;ULONG Send;ULONG Receive;};
struct _MSNdis_WmiTcpLargeSendOffloadV1 {MSNdis_WmiTcpLargeSendOffloadV1_IPv4 WmiIPv4;};
struct _NDIS_TAPI_NEGOTIATE_EXT_VERSION {ULONG ulRequestID;ULONG ulDeviceID;ULONG ulLowVersion;ULONG ulHighVersion;ULONG ulExtVersion;};
struct _NOTIFICATION_OPERATIONAL_STATUS {unsigned char OperationalEvent : 4;unsigned char Reserved1 : 4;unsigned char OperationalStatus : 4;unsigned char Reserved2 : 3;unsigned char PersistentPrevented : 1;UCHAR Operation[2];};
struct _NPI_LLDP_CLIENT_CHARACTERISTICS {USHORT Version;USHORT Length;};
struct _RemoveConnectionFromSession_OUT {ULONG Status;};
struct _VBICODECFILTERING_CC_SUBSTREAMS {DWORD SubstreamMask;};
struct _VBICODECFILTERING_STATISTICS_CC {VBICODECFILTERING_STATISTICS_COMMON Common;};
struct _WmiGetMonitorRawEEdidV1Block_IN {UCHAR BlockId;};
struct _WmiQueryCurrentOffloadConfig_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiQueryHDSplitCurrentConfig_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiQueryInterruptModeration_OUT {MSNdis_InterruptModerationParameters InterruptModeration;};
struct _WmiQueryPhysicalMediumTypeEx_IN {MSNdis_WmiMethodHeader Header;};
typedef ATM_ADDRESS ATM_CALLING_PARTY_SUBADDRESS_IE;
typedef enum _0689FBDB5239F8144BB29647BD372423 CAPTURE_MEMORY_ALLOCATION_FLAGS;
typedef enum _D3DKMDT_MONITOR_DESCRIPTOR_TYPE D3DKMDT_MONITOR_DESCRIPTOR_TYPE;
typedef enum _D3DKMDT_PIXEL_VALUE_ACCESS_MODE D3DKMDT_PIXEL_VALUE_ACCESS_MODE;
typedef enum _D3DKMDT_STANDARDALLOCATION_TYPE D3DKMDT_STANDARDALLOCATION_TYPE;
typedef enum _D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY;
typedef void DEVICE_CHANGE_COMPLETE_CALLBACK(PVOID Context);
typedef enum _DXGKMDT_OPM_PROTECTION_STANDARD DXGKMDT_OPM_PROTECTION_STANDARD;
typedef enum _DXGK_CHILD_DEVICE_HPD_AWARENESS DXGK_CHILD_DEVICE_HPD_AWARENESS;
typedef enum _FILTER_VOLUME_INFORMATION_CLASS FILTER_VOLUME_INFORMATION_CLASS;
typedef DXGKARG_CREATEALLOCATION *INOUT_PDXGKARG_CREATEALLOCATION;
typedef DXGKARG_ISSUPPORTEDVIDPN *INOUT_PDXGKARG_ISSUPPORTEDVIDPN;
typedef  D3DKMDT_HVIDPNTOPOLOGY IN_CONST_D3DKMDT_HVIDPNTOPOLOGY;
typedef  DXGKARG_CANCELCOMMAND *IN_CONST_PDXGKARG_CANCELCOMMAND;
typedef  DXGKARG_SUBMITCOMMAND *IN_CONST_PDXGKARG_SUBMITCOMMAND;
typedef  DXGKARG_UPDATEOVERLAY *IN_CONST_PDXGKARG_UPDATEOVERLAY;
typedef enum _IO_CONTAINER_NOTIFICATION_CLASS IO_CONTAINER_NOTIFICATION_CLASS;
typedef enum _5F7CACEFCAE6D59CA4BCCF22EBF82FD5 KSPROPERTY_BDA_FREQUENCY_FILTER;
typedef enum _54C7D444FA208DC7013A9CDC0D1DFDA7 KSPROPERTY_VIDCAP_CAMERACONTROL;
typedef enum _9E0565FF8CB6288B094DEDB695088DFB KSPROPERTY_VIDCAP_DROPPEDFRAMES;
typedef CREATIVEFASTSPEECH8WAVEFORMAT *LPCREATIVEFASTSPEECH8WAVEFORMAT;
typedef enum _NDIS_802_11_AUTHENTICATION_MODE NDIS_802_11_AUTHENTICATION_MODE;
typedef enum _B59563CDA7089DFA1A43D1362D866F9E NETWORK_OPEN_LOCATION_QUALIFIER;
typedef CREATIVEFASTSPEECH8WAVEFORMAT *NPCREATIVEFASTSPEECH8WAVEFORMAT;
typedef void (*PADAPTER_RECEIVE_PACKET_ROUTINE)(PHW_STREAM_REQUEST_BLOCK Srb);
typedef enum _CDROM_PERFORMANCE_REQUEST_TYPE *PCDROM_PERFORMANCE_REQUEST_TYPE;
typedef  IMAGE_BOUND_IMPORT_DESCRIPTOR *PCIMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef enum _43FCAF11C616917BBA786E6D92BCE878 *PCONTROL_CHANNEL_TRIGGER_STATUS;
typedef CREATIVEFASTSPEECH10WAVEFORMAT *PCREATIVEFASTSPEECH10WAVEFORMAT;
typedef void ( *PFLT_COMPLETE_CANCELED_CALLBACK)(PFLT_CALLBACK_DATA CallbackData);
typedef enum _LINK_TRACKING_INFORMATION_TYPE *PLINK_TRACKING_INFORMATION_TYPE;
typedef CM_EISA_FUNCTION_INFORMATION *PNDIS_EISA_FUNCTION_INFORMATION;
typedef enum _NDIS_HYPERVISOR_PARTITION_TYPE *PNDIS_HYPERVISOR_PARTITION_TYPE;
typedef enum _NDIS_SUPPORTED_PAUSE_FUNCTIONS *PNDIS_SUPPORTED_PAUSE_FUNCTIONS;
typedef RESP_QUERY_SECURITY_DESCRIPTOR *PRESP_QUERY_SECURITY_DESCRIPTOR;
typedef enum _RXCE_CONNECTION_CREATE_OPTIONS_ *PRXCE_CONNECTION_CREATE_OPTIONS;
typedef PVOID PSEC_WINNT_AUTH_IDENTITY_OPAQUE;
typedef enum _STREAMING_CONTROL_REQUEST_TYPE *PSTREAMING_CONTROL_REQUEST_TYPE;
typedef void ( *PUSB_BUSIFFN_SET_MINIDUMP_FLAGS)(PVOID);
typedef TDI_REQUEST_KERNEL TDI_REQUEST_KERNEL_DISASSOCIATE;
struct _CDB___INITIALIZE_ELEMENT_RANGE {UCHAR OperationCode;unsigned char Range : 1;unsigned char Reserved1 : 4;unsigned char LogicalUnitNubmer : 3;UCHAR FirstElementAddress[2];UCHAR Reserved2[2];UCHAR NumberOfElements[2];UCHAR Reserved3;unsigned char Reserved4 : 7;unsigned char NoBarCode : 1;};
struct _ClearMpioDiskHealthCounters_IN {ULONG DiskOrdinal;};
struct _DOT11_SUPPORTED_OFDM_FREQUENCY {ULONG uCenterFrequency;};
struct _DsmSetLoadBalancePolicyALUA_IN {DSM_Load_Balance_Policy_V2 LoadBalancePolicy;};
struct _FILE_ATTRIBUTE_TAG_INFORMATION {ULONG FileAttributes;ULONG ReparseTag;};
struct _GET_INJECTION_CAPABILITIES_OUT {ULONG Status;ULONG Capabilities;};
struct _GetDiscoveredPortAttributes_IN {ULONG PortIndex;ULONG DiscoveredPortIndex;};
struct _LOG_PARAMETER______TEMPERATURE {UCHAR Reserved;UCHAR Temperature;};
struct _MODE_DEVICE_CONFIGURATION_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PS : 1;UCHAR PageLength;unsigned char ActiveFormat : 5;unsigned char CAFBit : 1;unsigned char CAPBit : 1;unsigned char Reserved2 : 1;UCHAR ActivePartition;UCHAR WriteBufferFullRatio;UCHAR ReadBufferEmptyRatio;UCHAR WriteDelayTime[2];unsigned char REW : 1;unsigned char RBO : 1;unsigned char SOCF : 2;unsigned char AVC : 1;unsigned char RSmk : 1;unsigned char BIS : 1;unsigned char DBR : 1;UCHAR GapSize;unsigned char Reserved3 : 3;unsigned char SEW : 1;unsigned char EEG : 1;unsigned char EODdefined : 3;UCHAR BufferSize[3];UCHAR DCAlgorithm;UCHAR Reserved4;};
struct _MSFC_NPIVLUNMappingInformation {UCHAR WWPNVirtualPort[8];UCHAR WWPNPhysicalPort[8];UCHAR OSBus;UCHAR OSTarget;UCHAR OSLUN;};
struct _MSNdis_FddiLongMaximumListSize {ULONG NdisFddiLongMaximumListSize;};
struct _MSNdis_FddiShortCurrentAddress {MSNdis_NetworkShortAddress NdisCurrentAddress;};
struct _MSNdis_TokenRingCurrentAddress {MSNdis_NetworkAddress NdisCurrentAddress;};
struct _MSNdis_TokenRingLastOpenStatus {ULONG NdisTokenRingLastOpenStatus;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V1 {struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V1___B783A93C66F3958767B0FFA5BCA43F70 IPv4;};
struct _NOTIFICATION_MULTI_HOST_STATUS {unsigned char MultiHostEvent : 4;unsigned char Reserved1 : 4;unsigned char MultiHostStatus : 4;unsigned char Reserved2 : 3;unsigned char PersistentPrevented : 1;UCHAR Priority[2];};
struct _OFFLOAD_IPSEC_DELETE_UDPESP_SA {HANDLE OffloadHandle;HANDLE EncapTypeEntryOffldHandle;};
struct _PAR_DEVICE_ID_SIZE_INFORMATION {ULONG DeviceIdSize;};
struct _RESP_QUERY_SECURITY_DESCRIPTOR {ULONG LengthNeeded;};
struct _RemoveConnectionFromSession_IN {ULONGLONG UniqueSessionId;ULONGLONG UniqueConnectionId;};
struct _SFFDISK_DEVICE_RPMB_DATA_FRAME {UCHAR Stuff[196];UCHAR KeyOrMAC[32];UCHAR Data[256];UCHAR Nonce[16];UCHAR WriteCounter[4];UCHAR Address[2];UCHAR BlockCount[2];UCHAR OperationResult[2];UCHAR RequestOrResponseType[2];};
struct _STARTIO_PERFORMANCE_PARAMETERS {ULONG Version;ULONG Size;ULONG MessageNumber;ULONG ChannelNumber;};
struct _SecPkgContext_NegotiationInfoW {PSecPkgInfoW PackageInfo;unsigned int NegotiationState;};
struct _WWAN_SERVICE_ACTIVATION_STATUS {ULONG uNwError;ULONG uVendorSpecificBufferSize;};
struct _WmiMonitorColorCharacteristics {WmiMonitorColorXYZinCIE Red;WmiMonitorColorXYZinCIE Blue;WmiMonitorColorXYZinCIE Green;WmiMonitorColorXYZinCIE DefaultWhite;};
struct _WmiQueryInterruptModeration_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiSetTcpOffloadParameters_OUT {MSNdis_WmiOutputInfo OutputInfo;};
typedef ATM_ADDRESS ATM_CALLED_PARTY_SUBADDRESS_IE;
typedef enum _CDROM_PERFORMANCE_REQUEST_TYPE CDROM_PERFORMANCE_REQUEST_TYPE;
typedef enum _43FCAF11C616917BBA786E6D92BCE878 CONTROL_CHANNEL_TRIGGER_STATUS;
typedef UINT D3DDDI_VIDEO_PRESENT_SOURCE_ID;
typedef UINT D3DDDI_VIDEO_PRESENT_TARGET_ID;
typedef UINT D3DKMDT_MONITOR_SOURCE_MODE_ID;
typedef enum _D3DKMDT_VIDPN_SOURCE_MODE_TYPE D3DKMDT_VIDPN_SOURCE_MODE_TYPE;
typedef enum _DEVICE_USAGE_NOTIFICATION_TYPE DEVICE_USAGE_NOTIFICATION_TYPE;
typedef UCHAR DOT11_COUNTRY_OR_REGION_STRING[3];
typedef enum _DXGKDT_OPM_DVI_CHARACTERISTICS DXGKDT_OPM_DVI_CHARACTERISTICS;
typedef enum _DXGK_MONITOR_INTERFACE_VERSION DXGK_MONITOR_INTERFACE_VERSION;
typedef USHORT FLT_CONTEXT_REGISTRATION_FLAGS;
typedef DXGKARG_UPDATEPAGETABLE *INOUT_PDXGKARG_UPDATEPAGETABLE;
typedef enum _INTERRUPT_SYNCHRONIZATION_MODE INTERRUPT_SYNCHRONIZATION_MODE;
typedef D3DKMDT_HVIDPNSOURCEMODESET IN_D3DKMDT_HVIDPNSOURCEMODESET;
typedef D3DKMDT_HVIDPNTARGETMODESET IN_D3DKMDT_HVIDPNTARGETMODESET;
typedef D3DKMDT_VIDPN_PRESENT_PATH *IN_PD3DKMDT_VIDPN_PRESENT_PATH;
typedef enum _IO_CONTAINER_INFORMATION_CLASS IO_CONTAINER_INFORMATION_CLASS;
typedef enum _IO_NOTIFICATION_EVENT_CATEGORY IO_NOTIFICATION_EVENT_CATEGORY;
typedef enum _6B870DC24D0C8AC4BA7D2C047999A6A3 KSPROPERTY_BDA_ETHERNET_FILTER;
typedef enum _78C1F328871321AF9E01CD1E713BC3BD KSPROPERTY_CAMERACONTROL_FLASH;
typedef enum _A5B4E8FAC21A27E9D836EC72E0E2550F KSPROPERTY_DIRECTSOUND3DBUFFER;
typedef enum _984DD30B3DA0FC7F55BB22873AC26968 KSPROPERTY_VIDCAP_VIDEOCONTROL;
typedef enum _1653C6230DF717019257E2169FA7FC6A KSPROPERTY_VIDCAP_VIDEODECODER;
typedef enum _49B4DF22A98C0153E90C1246F17F787B KSPROPERTY_VIDCAP_VIDEOENCODER;
typedef enum _5EA8F044749A3CD34677CB1E9E0E09A9 KSPROPERTY_VIDCAP_VIDEOPROCAMP;
typedef enum _BEB7D72EDB8960BEC5A4EFCCDB0EAE04 KS_CameraControlAsyncOperation;
typedef enum _LINK_TRACKING_INFORMATION_TYPE LINK_TRACKING_INFORMATION_TYPE;
typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP LOGICAL_PROCESSOR_RELATIONSHIP;
typedef CM_EISA_FUNCTION_INFORMATION NDIS_EISA_FUNCTION_INFORMATION;
typedef enum _NDIS_HYPERVISOR_PARTITION_TYPE NDIS_HYPERVISOR_PARTITION_TYPE;
typedef enum _NDIS_SUPPORTED_PAUSE_FUNCTIONS NDIS_SUPPORTED_PAUSE_FUNCTIONS;
typedef enum _NL_LINK_LOCAL_ADDRESS_BEHAVIOR NL_LINK_LOCAL_ADDRESS_BEHAVIOR;
typedef CREATIVEFASTSPEECH8WAVEFORMAT *PCREATIVEFASTSPEECH8WAVEFORMAT;
typedef enum _D3COLD_LAST_TRANSITION_STATUS *PD3COLD_LAST_TRANSITION_STATUS;
typedef enum _DOT11_MANUFACTURING_TEST_TYPE *PDOT11_MANUFACTURING_TEST_TYPE;
typedef EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD;
typedef enum _EXCLUSIVE_ACCESS_REQUEST_TYPE *PEXCLUSIVE_ACCESS_REQUEST_TYPE;
typedef void ( *PFLT_NORMALIZE_CONTEXT_CLEANUP)(PVOID *NormalizationContext);
typedef enum _NDIS_802_11_WEP_STATUS *PNDIS_802_11_ENCRYPTION_STATUS;
typedef enum _NDIS_802_11_MEDIA_STREAM_MODE *PNDIS_802_11_MEDIA_STREAM_MODE;
typedef enum _NDIS_PM_PROTOCOL_OFFLOAD_TYPE *PNDIS_PM_PROTOCOL_OFFLOAD_TYPE;
typedef enum _NDIS_PORT_AUTHORIZATION_STATE *PNDIS_PORT_AUTHORIZATION_STATE;
typedef enum _PO_CS_DEVICE_NOTIFICATION_TYPE PO_CS_DEVICE_NOTIFICATION_TYPE;
typedef REQ_QUERY_SECURITY_DESCRIPTOR *PREQ_QUERY_SECURITY_DESCRIPTOR;
typedef TDI_REQUEST_KERNEL *PTDI_REQUEST_KERNEL_DISCONNECT;
typedef enum _WHEA_ERROR_PACKET_DATA_FORMAT *PWHEA_ERROR_PACKET_DATA_FORMAT;
typedef enum _WSA_COMPATIBILITY_BEHAVIOR_ID *PWSA_COMPATIBILITY_BEHAVIOR_ID;
typedef enum _RESOURCE_TRANSLATION_DIRECTION RESOURCE_TRANSLATION_DIRECTION;
typedef enum _RXCE_CONNECTION_CREATE_OPTIONS_ RXCE_CONNECTION_CREATE_OPTIONS;
typedef enum _C49E60E1EED22F985503E6BE3D604AD6 SCSIWMI_ENABLE_DISABLE_CONTROL;
typedef enum _STREAMING_CONTROL_REQUEST_TYPE STREAMING_CONTROL_REQUEST_TYPE;
typedef TDI_ADDRESS_NETBIOS_UNICODE_EX_XP TDI_ADDRESS_NETBIOS_UNICODE_EX;
struct _BDA_TS_SELECTORINFO_ISDBS_EXT {BYTE bTMCC[48];};
struct _CDROM_TOC_FULL_TOC_DATA_BLOCK {UCHAR SessionNumber;unsigned char Control : 4;unsigned char Adr : 4;UCHAR Reserved1;UCHAR Point;UCHAR MsfExtra[3];UCHAR Zero;UCHAR Msf[3];};
struct _D3DDDI_GAMMA_RAMP_RGB256x3x16 {USHORT Red[256];USHORT Green[256];USHORT Blue[256];};
struct _DEVICEDUMP_SUBSECTION_POINTER {ULONG dwSize;ULONG dwFlags;ULONG dwOffset;};
struct _FILE_FS_DATA_COPY_INFORMATION {ULONG NumberOfCopies;};
struct _FIRMWARE_S3_PERFORMANCE_TABLE {ULONG Signature;ULONG Length;};
struct _FORMATTED_CAPACITY_DESCRIPTOR {UCHAR NumberOfBlocks[4];unsigned char Maximum : 1;unsigned char Valid : 1;unsigned char FormatType : 6;UCHAR BlockLength[3];};
struct _KEYBOARD_INDICATOR_PARAMETERS {USHORT UnitId;USHORT LedFlags;};
struct _KEYBOARD_TYPEMATIC_PARAMETERS {USHORT UnitId;USHORT Rate;USHORT Delay;};
struct _KEY_CONTROL_FLAGS_INFORMATION {ULONG ControlFlags;};
struct _MODE_DEVICE_CAPABILITIES_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PS : 1;UCHAR PageLength;unsigned char MediumTransport : 1;unsigned char StorageLocation : 1;unsigned char IEPort : 1;unsigned char DataXFer : 1;unsigned char Reserved2 : 4;UCHAR Reserved3;unsigned char MTtoMT : 1;unsigned char MTtoST : 1;unsigned char MTtoIE : 1;unsigned char MTtoDT : 1;unsigned char Reserved4 : 4;unsigned char STtoMT : 1;unsigned char STtoST : 1;unsigned char STtoIE : 1;unsigned char STtoDT : 1;unsigned char Reserved5 : 4;unsigned char IEtoMT : 1;unsigned char IEtoST : 1;unsigned char IEtoIE : 1;unsigned char IEtoDT : 1;unsigned char Reserved6 : 4;unsigned char DTtoMT : 1;unsigned char DTtoST : 1;unsigned char DTtoIE : 1;unsigned char DTtoDT : 1;unsigned char Reserved7 : 4;UCHAR Reserved8[4];unsigned char XMTtoMT : 1;unsigned char XMTtoST : 1;unsigned char XMTtoIE : 1;unsigned char XMTtoDT : 1;unsigned char Reserved9 : 4;unsigned char XSTtoMT : 1;unsigned char XSTtoST : 1;unsigned char XSTtoIE : 1;unsigned char XSTtoDT : 1;unsigned char Reserved10 : 4;unsigned char XIEtoMT : 1;unsigned char XIEtoST : 1;unsigned char XIEtoIE : 1;unsigned char XIEtoDT : 1;unsigned char Reserved11 : 4;unsigned char XDTtoMT : 1;unsigned char XDTtoST : 1;unsigned char XDTtoIE : 1;unsigned char XDTtoDT : 1;unsigned char Reserved12 : 4;};
struct _MODE_READ_WRITE_RECOVERY_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PSBit : 1;UCHAR PageLength;unsigned char DCRBit : 1;unsigned char DTEBit : 1;unsigned char PERBit : 1;unsigned char EERBit : 1;unsigned char RCBit : 1;unsigned char TBBit : 1;unsigned char ARRE : 1;unsigned char AWRE : 1;UCHAR ReadRetryCount;UCHAR Reserved4[4];UCHAR WriteRetryCount;UCHAR Reserved5[3];};
struct _MSAcpi_ThermalZoneTemperature {ULONG ThermalStamp;ULONG ThermalConstant1;ULONG ThermalConstant2;ULONG Reserved;ULONG SamplingPeriod;ULONG CurrentTemperature;ULONG PassiveTripPoint;ULONG CriticalTripPoint;ULONG ActiveTripPointCount;ULONG ActiveTripPoint[10];};
struct _MSNdis_80211_DesiredDataRates {UCHAR Ndis80211DesiredRate[8];};
struct _MSNdis_80211_NetworkTypeInUse {MSNdis_80211_NetworkType Ndis80211NetworkTypeInUse;};
struct _MSNdis_80211_NumberOfAntennas {ULONG Ndis80211NumberOfAntennas;};
struct _MSNdis_AtmReceiveCellsDropped {ULONGLONG NdisAtmReceiveCellsDropped;};
struct _MSNdis_EthernetCurrentAddress {MSNdis_NetworkAddress NdisCurrentAddress;};
struct _MSNdis_FddiDownstreamNodeLong {MSNdis_NetworkAddress NdisFddiDownstreamNodeLong;};
struct _MSNdis_FddiLongCurrentAddress {MSNdis_NetworkAddress NdisCurrentAddress;};
struct _MSNdis_FddiRingManagmentState {ULONG NdisFddiRingManagmentState;};
struct _MSNdis_StatusDevicePowerOffEx {CHAR VariableData[1];};
struct _NDIS_DRIVER_OPTIONAL_HANDLERS {NDIS_OBJECT_HEADER Header;};
struct _NETROOT_THROTTLING_PARAMETERS {ULONG Increment;ULONG MaximumDelay;};
struct _PARPORT_WMI_ALLOC_FREE_COUNTS {ULONG PortAllocates;ULONG PortFrees;};
struct _PMI_MEASUREMENT_CONFIGURATION {ULONG AveragingInterval;};
struct _PROCESS_HANDLE_TRACING_ENABLE {ULONG Flags;};
struct _RemoveChapForPhysicalPort_OUT {ULONG Status;};
struct _STORAGE_PRIORITY_HINT_SUPPORT {ULONG SupportFlags;};
struct _SetTunnelModeOuterAddress_OUT {ULONG Status;};
struct _TXFS_WRITE_BACKUP_INFORMATION {UCHAR Buffer[1];};
struct _USB_DEVICE_PERFORMANCE_INFO_0 {ULONG InformationLevel;ULONG ActualLength;ULONG BulkBytes;ULONG BulkUrbCount;ULONG ControlDataBytes;ULONG ControlUrbCount;ULONG IsoBytes;ULONG IsoUrbCount;ULONG InterruptBytes;ULONG InterruptUrbCount;ULONG AllocedInterrupt[6];ULONG AllocedIso;ULONG Total32secBandwidth;ULONG TotalTtBandwidth;ULONG TotalIsoLatency;ULONG DroppedIsoPackets;ULONG TransferErrors;};
struct _VPD_IDENTIFICATION_DESCRIPTOR {unsigned char CodeSet : 4;unsigned char Reserved : 4;unsigned char IdentifierType : 4;unsigned char Association : 2;unsigned char Reserved2 : 2;UCHAR Reserved3;UCHAR IdentifierLength;UCHAR Identifier[];};
struct _WmiSetInterruptModeration_OUT {MSNdis_WmiOutputInfo OutputInfo;};
typedef void (*pHalSetPciErrorHandlerCallback)(PCI_ERROR_HANDLER_CALLBACK Callback);
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE ALTERNATIVE_ARCHITECTURE_TYPE;
typedef enum _D3COLD_LAST_TRANSITION_STATUS D3COLD_LAST_TRANSITION_STATUS;
typedef UINT D3DKMDT_MONITOR_DESCRIPTOR_ID;
typedef enum _D3DKMDT_TEXT_RENDERING_FORMAT D3DKMDT_TEXT_RENDERING_FORMAT;
typedef enum _D3DKMDT_VIDEO_SIGNAL_STANDARD D3DKMDT_VIDEO_SIGNAL_STANDARD;
typedef enum _A98B79572840FDA381AA9CDCE69D1BC8 DISK_CACHE_RETENTION_PRIORITY;
typedef enum _DOT11_MANUFACTURING_TEST_TYPE DOT11_MANUFACTURING_TEST_TYPE;
typedef enum _DXGKMDT_OPM_INTERLEAVE_FORMAT DXGKMDT_OPM_INTERLEAVE_FORMAT;
typedef enum _EXCLUSIVE_ACCESS_REQUEST_TYPE EXCLUSIVE_ACCESS_REQUEST_TYPE;
typedef enum _FLT_CALLBACK_DATA_QUEUE_FLAGS FLT_CALLBACK_DATA_QUEUE_FLAGS;
typedef PDXGK_DEVICE_DESCRIPTOR INOUT_PDXGK_DEVICE_DESCRIPTOR;
typedef  DXGKARG_FLIPOVERLAY *IN_CONST_PDXGKARG_FLIPOVERLAY;
typedef  DXGKARG_STOPCAPTURE *IN_CONST_PDXGKARG_STOPCAPTURE;
typedef DXGKARG_BUILDPAGINGBUFFER *IN_PDXGKARG_BUILDPAGINGBUFFER;
typedef enum _337A456D7D632A4922EE6C9CE465DAB9 KSMETHOD_BDA_EVENTING_SERVICE;
typedef enum _3EB7CD5A2478AE20126886459846210D KSPROPERTY_BDA_AUTODEMODULATE;
typedef enum _F5BF111CB6DC433A136378229CB58F7F KSPROPERTY_BDA_DISEQC_COMMAND;
typedef enum _702932362B8608D728382EB01F6EA68B KSPROPERTY_BDA_NULL_TRANSFORM;
typedef enum _714E217E1FF07AEF9AC8D62CE7BB20D6 KSPROPERTY_BDA_VOID_TRANSFORM;
typedef enum _3F0E1F32807E838958D0814D130CFE59 KS_AM_PROPERTY_TS_RATE_CHANGE;
typedef enum _NDIS_802_11_WEP_STATUS NDIS_802_11_ENCRYPTION_STATUS;
typedef enum _NDIS_802_11_MEDIA_STREAM_MODE NDIS_802_11_MEDIA_STREAM_MODE;
typedef enum _NDIS_PM_PROTOCOL_OFFLOAD_TYPE NDIS_PM_PROTOCOL_OFFLOAD_TYPE;
typedef enum _NDIS_PORT_AUTHORIZATION_STATE NDIS_PORT_AUTHORIZATION_STATE;
typedef void (*PBUS_ISOCH_DESCRIPTOR_ROUTINE)(PVOID Context1, PVOID Context2);
typedef void PCI_PREPARE_MULTISTAGE_RESUME(PVOID Context);
typedef enum _DOT11_WPS_DEVICE_PASSWORD_ID *PDOT11_WPS_DEVICE_PASSWORD_ID;
typedef enum _HAL_DISPLAY_BIOS_INFORMATION *PHAL_DISPLAY_BIOS_INFORMATION;
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY;
typedef enum _IO_COMPLETION_ROUTINE_RESULT *PIO_COMPLETION_ROUTINE_RESULT;
typedef enum _MEDIA_CHANGE_DETECTION_STATE *PMEDIA_CHANGE_DETECTION_STATE;
typedef enum _MSV1_0_PROTOCOL_MESSAGE_TYPE *PMSV1_0_PROTOCOL_MESSAGE_TYPE;
typedef REQ_QUERY_FS_INFORMATION_FID *PREQ_QUERY_FS_INFORMATION_FID;
typedef REQ_REPORT_DFS_INCONSISTENCY *PREQ_REPORT_DFS_INCONSISTENCY;
typedef enum _SECURITY_IMPERSONATION_LEVEL *PSECURITY_IMPERSONATION_LEVEL;
typedef enum _QUERY_FILE_LAYOUT_FILTER_TYPE QUERY_FILE_LAYOUT_FILTER_TYPE;
typedef PARTITION_INFORMATION_GPT SET_PARTITION_INFORMATION_GPT;
typedef SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION_MBR;
typedef TA_NETBIOS_UNICODE_EX_ADDRESS_XP TA_NETBIOS_UNICODE_EX_ADDRESS;
typedef TDI_REQUEST_KERNEL TDI_REQUEST_KERNEL_DISCONNECT;
typedef enum _TRANSACTION_INFORMATION_CLASS TRANSACTION_INFORMATION_CLASS;
typedef void  USB_BUSIFFN_ACQUIRE_SEMAPHORE(PVOID BusContext);
typedef void  USB_BUSIFFN_RELEASE_SEMAPHORE(PVOID BusContext);
typedef enum _WHEA_ERROR_PACKET_DATA_FORMAT WHEA_ERROR_PACKET_DATA_FORMAT;
struct WHEA_PCIXDEVICE_REGISTER_PAIR {ULONGLONG Register;ULONGLONG Data;};
typedef enum _WSA_COMPATIBILITY_BEHAVIOR_ID WSA_COMPATIBILITY_BEHAVIOR_ID;
struct _BDA_DVBT2_L1_SIGNALLING_DATA {BYTE L1Pre_TYPE;BYTE L1Pre_BWT_S1_S2;BYTE L1Pre_REPETITION_GUARD_PAPR;BYTE L1Pre_MOD_COD_FEC;BYTE L1Pre_POSTSIZE_INFO_PILOT[5];BYTE L1Pre_TX_ID_AVAIL;BYTE L1Pre_CELL_ID[2];BYTE L1Pre_NETWORK_ID[2];BYTE L1Pre_T2SYSTEM_ID[2];BYTE L1Pre_NUM_T2_FRAMES;BYTE L1Pre_NUM_DATA_REGENFLAG_L1POSTEXT[2];BYTE L1Pre_NUMRF_CURRENTRF_RESERVED[2];BYTE L1Pre_CRC32[4];BYTE L1PostData[1];};
struct _CDB___PERSISTENT_RESERVE_OUT {UCHAR OperationCode;unsigned char ServiceAction : 5;unsigned char Reserved1 : 3;unsigned char Type : 4;unsigned char Scope : 4;UCHAR Reserved2[4];UCHAR ParameterListLength[2];UCHAR Control;};
struct _CDB___READ_TRACK_INFORMATION {UCHAR OperationCode;unsigned char Track : 2;unsigned char Reserved4 : 3;unsigned char Lun : 3;UCHAR BlockAddress[4];UCHAR Reserved3;UCHAR AllocationLength[2];UCHAR Control;};
struct _CDROM_WRITE_SPEED_DESCRIPTOR {unsigned char MixedReadWrite : 1;unsigned char Exact : 1;unsigned char Reserved1 : 1;unsigned char WriteRotationControl : 2;unsigned char Reserved2 : 3;UCHAR Reserved3[3];UCHAR EndLba[4];UCHAR ReadSpeed[4];UCHAR WriteSpeed[4];};
struct _CDVD_INACTIVITY_TIMEOUT_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PSBit : 1;UCHAR PageLength;UCHAR Reserved2[2];unsigned char SWPP : 1;unsigned char DISP : 1;unsigned char Reserved3 : 6;UCHAR Reserved4;UCHAR GroupOneMinimumTimeout[2];UCHAR GroupTwoMinimumTimeout[2];};
struct _CM_DISK_GEOMETRY_DEVICE_DATA {ULONG BytesPerSector;ULONG NumberOfCylinders;ULONG SectorsPerTrack;ULONG NumberOfHeads;};
struct _DEVICEDUMP_STRUCTURE_VERSION {ULONG dwSignature;ULONG dwVersion;ULONG dwSize;};
struct _DEVICE_DATA_SET_SCRUB_OUTPUT {ULONGLONG BytesProcessed;ULONGLONG BytesRepaired;ULONGLONG BytesFailed;};
struct _DOT11_CURRENT_OPERATION_MODE {ULONG uReserved;ULONG uCurrentOpMode;};
struct _DOT11_SUPPORTED_DSSS_CHANNEL {ULONG uChannel;};
struct _DOT11_SUPPORTED_POWER_LEVELS {ULONG uNumOfSupportedPowerLevels;ULONG uTxPowerLevelValues[8];};
struct _DRIVE_LAYOUT_INFORMATION_MBR {ULONG Signature;};
struct _ENLISTMENT_BASIC_INFORMATION {GUID EnlistmentId;GUID TransactionId;GUID ResourceManagerId;};
struct _EXTENDED_ENCRYPTED_DATA_INFO {ULONG ExtendedCode;ULONG Length;ULONG Flags;ULONG Reserved;};
struct _FILE_END_OF_FILE_INFORMATION {LARGE_INTEGER EndOfFile;};
struct _FILE_FS_OBJECTID_INFORMATION {UCHAR ObjectId[16];UCHAR ExtendedInfo[48];};
struct _FILE_SFIO_VOLUME_INFORMATION {ULONG MaximumRequestsPerPeriod;ULONG MinimumPeriod;ULONG MinimumTransferSize;};
struct _IRB_REQ_GET_GENERATION_COUNT {ULONG GenerationCount;};
struct _IRB_REQ_ISOCH_FREE_RESOURCES {HANDLE hResource;};
struct _MODE_TRANSPORT_GEOMETRY_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PS : 1;UCHAR PageLength;unsigned char Flip : 1;unsigned char Reserved2 : 7;UCHAR TransportElementNumber;};
struct _MSMCAEvent_MemoryPageRemoved {ULONGLONG PhysicalAddress;};
struct _MSNdis_80211_ConfigurationFH {ULONG FHLength;ULONG HopPattern;ULONG HopSet;ULONG DwellTime;};
struct _MSNdis_AtmMaxAal34PacketSize {ULONG NdisAtmMaxAal34PacketSize;};
struct _MSNdis_CoReceivePdusNoBuffer {ULONG NdisCoReceivePdusNoBuffer;};
struct _MSNdis_CoVendorDriverVersion {ULONG NdisCoVendorDriverVersion;};
struct _MSNdis_StatusDevicePowerOnEx {CHAR VariableData[1];};
struct _MSNdis_StatusLinkSpeedChange {MSNdis_NetworkLinkSpeed NdisStatusLinkSpeedChange;};
struct _MSNdis_TokenRingCurrentGroup {ULONG NdisTokenRingCurrentGroup;};
struct _NDIS_802_11_CONFIGURATION_FH {ULONG Length;ULONG HopPattern;ULONG HopSet;ULONG DwellTime;};
struct _NOTIFICATION_EXTERNAL_STATUS {unsigned char ExternalEvent : 4;unsigned char Reserved1 : 4;unsigned char ExternalStatus : 4;unsigned char Reserved2 : 3;unsigned char PersistentPrevented : 1;UCHAR Request[2];};
struct _PROCESS_WS_WATCH_INFORMATION {PVOID FaultingPc;PVOID FaultingVa;};
struct _REQ_QUERY_FS_INFORMATION_FID {USHORT InformationLevel;USHORT Fid;};
struct _SCSI_SENSE_DESCRIPTOR_HEADER {UCHAR DescriptorType;UCHAR AdditionalLength;};
struct _SD_CHANGE_MACHINE_SID_OUTPUT {ULONGLONG NumSDChangedSuccess;ULONGLONG NumSDChangedFail;ULONGLONG NumSDUnused;ULONGLONG NumSDTotal;ULONGLONG NumMftSDChangedSuccess;ULONGLONG NumMftSDChangedFail;ULONGLONG NumMftSDTotal;};
struct _SET_PURGE_FAILURE_MODE_INPUT {ULONG Flags;};
struct _TDI_REQUEST_KERNEL_ASSOCIATE {HANDLE AddressHandle;};
struct _TRANSACTION_BIND_INFORMATION {HANDLE TmHandle;};
struct _VPCI_INVALIDATE_BLOCK_OUTPUT {UINT64 BlockMask;};
struct _VPD_MEDIA_SERIAL_NUMBER_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR Reserved;UCHAR PageLength;UCHAR SerialNumber[];};
struct _WSK_PROVIDER_CHARACTERISTICS {USHORT HighestVersion;USHORT LowestVersion;};
struct creative_fastspeechformat_tag {WAVEFORMATEX ewf;};
typedef enum _DOT11_WPS_DEVICE_PASSWORD_ID DOT11_WPS_DEVICE_PASSWORD_ID;
typedef enum _DXGK_VIDPN_INTERFACE_VERSION DXGK_VIDPN_INTERFACE_VERSION;
typedef enum _ENLISTMENT_INFORMATION_CLASS ENLISTMENT_INFORMATION_CLASS;
typedef ULONG FSRTL_ALLOCATE_ECPLIST_FLAGS;
typedef enum _HAL_DISPLAY_BIOS_INFORMATION HAL_DISPLAY_BIOS_INFORMATION;
typedef DXGKARG_CREATECONTEXT *INOUT_PDXGKARG_CREATECONTEXT;
typedef DXGKARG_CREATEOVERLAY *INOUT_PDXGKARG_CREATEOVERLAY;
typedef PDXGK_CHILD_DESCRIPTOR INOUT_PDXGK_CHILD_DESCRIPTOR;
typedef  DXGKARG_SETPALETTE *IN_CONST_PDXGKARG_SETPALETTE;
typedef enum _IO_COMPLETION_ROUTINE_RESULT IO_COMPLETION_ROUTINE_RESULT;
typedef enum _8EE7F9EA7D1453B89425165DC84C8DAD KSEVENT_AUDIO_CONTROL_CHANGE;
typedef enum _2DEFE1B87100719F80278A026CBFF4D7 KSPROPERTY_ALLOCATOR_CONTROL;
typedef enum _CFCB2E1C2645813857E415DB4A5CF091 KSPROPERTY_VBICODECFILTERING;
typedef DIALOGICOKIADPCMWAVEFORMAT *LPDIALOGICOKIADPCMWAVEFORMAT;
typedef enum _MEDIA_CHANGE_DETECTION_STATE MEDIA_CHANGE_DETECTION_STATE;
typedef enum _MSV1_0_PROTOCOL_MESSAGE_TYPE MSV1_0_PROTOCOL_MESSAGE_TYPE;
typedef enum _NL_ROUTER_DISCOVERY_BEHAVIOR NL_ROUTER_DISCOVERY_BEHAVIOR;
typedef DIALOGICOKIADPCMWAVEFORMAT *NPDIALOGICOKIADPCMWAVEFORMAT;
typedef enum _CHANGER_DEVICE_PROBLEM_TYPE *PCHANGER_DEVICE_PROBLEM_TYPE;
typedef  IMAGE_DELAYLOAD_DESCRIPTOR *PCIMAGE_DELAYLOAD_DESCRIPTOR;
typedef enum _AE62E0A625C886191E9AB96384D4F84B PCI_EXPRESS_L0s_EXIT_LATENCY;
typedef enum _C310F8ABE5805F505DC81B500CFCD039 PCI_EXPRESS_MAX_PAYLOAD_SIZE;
typedef enum _CLFS_MGMT_NOTIFICATION_TYPE *PCLFS_MGMT_NOTIFICATION_TYPE;
typedef enum _FS_FILTER_SECTION_SYNC_TYPE *PFS_FILTER_SECTION_SYNC_TYPE;
typedef enum _HAL_QUERY_INFORMATION_CLASS *PHAL_QUERY_INFORMATION_CLASS;
typedef PIMAGE_LOAD_CONFIG_DIRECTORY32 PIMAGE_LOAD_CONFIG_DIRECTORY;
typedef enum _IO_QUERY_DEVICE_DATA_FORMAT *PIO_QUERY_DEVICE_DATA_FORMAT;
typedef enum _NDIS_802_11_RELOAD_DEFAULTS *PNDIS_802_11_RELOAD_DEFAULTS;
typedef enum _NDIS_FDDI_LCONNECTION_STATE *PNDIS_FDDI_LCONNECTION_STATE;
typedef ULONG *PNDIS_RECEIVE_QUEUE_GROUP_ID;
typedef enum _E868200BB43754926927BC830F38AC6F POWER_MONITOR_REQUEST_REASON;
typedef REQ_SET_SECURITY_DESCRIPTOR *PREQ_SET_SECURITY_DESCRIPTOR;
typedef enum _SCSI_ADAPTER_CONTROL_STATUS *PSCSI_ADAPTER_CONTROL_STATUS;
typedef USHORT *PSECURITY_DESCRIPTOR_CONTROL;
typedef enum _SHRINK_VOLUME_REQUEST_TYPES *PSHRINK_VOLUME_REQUEST_TYPES;
typedef enum _STORAGE_IDENTIFIER_CODE_SET *PSTORAGE_IDENTIFIER_CODE_SET;
typedef enum _STORAGE_POWERUP_REASON_TYPE *PSTORAGE_POWERUP_REASON_TYPE;
typedef PSecPkgContext_StreamSizes PSecPkgContext_DatagramSizes;
typedef TDI_REQUEST_QUERY_INFORMATION *PTDI_REQUEST_USER_QUERY_INFO;
typedef TDI_PROVIDER_INFO RXCE_TRANSPORT_PROVIDER_INFO;
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION SYSTEM_FIRMWARE_TABLE_ACTION;
struct _CDB___PERSISTENT_RESERVE_IN {UCHAR OperationCode;unsigned char ServiceAction : 5;unsigned char Reserved1 : 3;UCHAR Reserved2[5];UCHAR AllocationLength[2];UCHAR Control;};
struct _CDB___READ_DISK_INFORMATION {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char Lun : 3;UCHAR Reserved2[5];UCHAR AllocationLength[2];UCHAR Control;};
struct _CDB___REQUEST_BLOCK_ADDRESS {UCHAR OperationCode;UCHAR Reserved1[3];UCHAR AllocationLength;unsigned char Link : 1;unsigned char Flag : 1;unsigned char Reserved2 : 4;unsigned char VendorUnique : 2;};
struct _CDB___SECURITY_PROTOCOL_OUT {UCHAR OperationCode;UCHAR SecurityProtocol;UCHAR SecurityProtocolSpecific[2];unsigned char Reserved1 : 7;unsigned char INC_512 : 1;UCHAR Reserved2;UCHAR AllocationLength[4];UCHAR Reserved3;UCHAR Control;};
struct _DEVICE_UI_FIRMWARE_REVISION {CHAR VariableData[1];};
struct _DOT11_HOPPING_PATTERN_ENTRY {ULONG uHoppingPatternIndex;ULONG uRandomTableFieldNumber;};
struct _DeleteInitiatorNodeName_OUT {ULONG Status;};
struct _DsmSetLoadBalancePolicy_OUT {ULONG Status;};
struct _FILE_ALLOCATED_RANGE_BUFFER {LARGE_INTEGER FileOffset;LARGE_INTEGER Length;};
struct _FILE_ALLOCATION_INFORMATION {LARGE_INTEGER AllocationSize;};
struct _FILE_PIPE_LOCAL_INFORMATION {ULONG NamedPipeType;ULONG NamedPipeConfiguration;ULONG MaximumInstances;ULONG CurrentInstances;ULONG InboundQuota;ULONG ReadDataAvailable;ULONG OutboundQuota;ULONG WriteQuotaAvailable;ULONG NamedPipeState;ULONG NamedPipeEnd;};
struct _IMAGE_ARCHIVE_MEMBER_HEADER {UCHAR Name[16];UCHAR Date[12];UCHAR UserID[6];UCHAR GroupID[6];UCHAR Mode[8];UCHAR Size[10];UCHAR EndHeader[2];};
struct _KEY_WOW64_FLAGS_INFORMATION {ULONG UserFlags;};
struct _MOUNTMGR_CHANGE_NOTIFY_INFO {ULONG EpicNumber;};
struct _MOUNTMGR_CREATE_POINT_INPUT {USHORT SymbolicLinkNameOffset;USHORT SymbolicLinkNameLength;USHORT DeviceNameOffset;USHORT DeviceNameLength;};
struct _MOUNTMGR_VOLUME_MOUNT_POINT {USHORT SourceVolumeNameOffset;USHORT SourceVolumeNameLength;USHORT TargetVolumeNameOffset;USHORT TargetVolumeNameLength;};
struct _MRX_PIPE_HANDLE_INFORMATION {ULONG TypeOfPipe;ULONG ReadMode;ULONG CompletionMode;};
struct _MSKeyboard_ClassInformation {ULONGLONG DeviceId;};
struct _MSNdis_80211_ReloadDefaults {ULONG Ndis80211ReloadDefaults;};
struct _MSNdis_AtmMaxAal0PacketSize {ULONG NdisAtmMaxAal0PacketSize;};
struct _MSNdis_AtmMaxAal1PacketSize {ULONG NdisAtmMaxAal1PacketSize;};
struct _MSNdis_AtmMaxAal5PacketSize {ULONG NdisAtmMaxAal5PacketSize;};
struct _MSNdis_AtmSupportedAalTypes {ULONG NdisAtmSupportedAalTypes;};
struct _MSNdis_CoMediaConnectStatus {ULONG NdisCoMediaConnectStatus;};
struct _MSNdis_FddiLConnectionState {ULONG NdisFddiLConnectionState;};
struct _MSNdis_FddiUpstreamNodeLong {MSNdis_NetworkAddress NdisFddiUpstreamNodeLong;};
struct _MSNdis_NetworkDirectVersion {USHORT MajorVersionNumber;USHORT MinorVersionNumber;};
struct _MSNdis_NotifyAdapterArrival {CHAR VariableData[1];};
struct _MSNdis_NotifyAdapterRemoval {CHAR VariableData[1];};
struct _MSNdis_StatusDevicePowerOff {CHAR VariableData[1];};
struct _MSNdis_StatusProtocolUnbind {CHAR VariableData[1];};
struct _NDIS_TAPI_PROVIDER_SHUTDOWN {ULONG ulRequestID;};
struct _PMI_BUDGETING_CONFIGURATION {ULONG ConfiguredBudget;};
struct _PMI_THRESHOLD_CONFIGURATION {ULONG LowerThreshold;ULONG UpperThreshold;};
struct _PROCESSOR_POWER_INFORMATION {ULONG Number;ULONG MaxMhz;ULONG CurrentMhz;ULONG MhzLimit;ULONG MaxIdleState;ULONG CurrentIdleState;};
struct _PROCESS_SESSION_INFORMATION {ULONG SessionId;};
struct _SD_CHANGE_MACHINE_SID_INPUT {USHORT CurrentMachineSIDOffset;USHORT CurrentMachineSIDLength;USHORT NewMachineSIDOffset;USHORT NewMachineSIDLength;};
struct _TDI_PROVIDER_RESOURCE_STATS {ULONG ResourceId;ULONG MaximumResourceUsed;ULONG AverageResourceUsed;ULONG ResourceExhausted;};
struct _TRANSACTION_ENLISTMENT_PAIR {GUID EnlistmentId;GUID ResourceManagerId;};
struct _USB_BUS_INFORMATION_LEVEL_0 {ULONG TotalBandwidth;ULONG ConsumedBandwidth;};
struct _VBICODECFILTERING_SCANLINES {DWORD DwordBitArray[32];};
struct _VIDEO_DEVICE_SESSION_STATUS {ULONG bEnable;ULONG bSuccess;};
struct _WmiSetHDSplitParameters_OUT {MSNdis_WmiOutputInfo OutputInfo;};
struct _tagKSAUDIOENGINE_DESCRIPTOR {UINT nHostPinId;UINT nOffloadPinId;UINT nLoopbackPinId;};
struct audiofile_af10waveformat_tag {WAVEFORMATEX wfx;};
struct audiofile_af36waveformat_tag {WAVEFORMATEX wfx;};
typedef enum _AUTHENTICATION_REQUIREMENTS AUTHENTICATION_REQUIREMENTS;
typedef enum _CHANGER_DEVICE_PROBLEM_TYPE CHANGER_DEVICE_PROBLEM_TYPE;
typedef enum _CLFS_MGMT_NOTIFICATION_TYPE CLFS_MGMT_NOTIFICATION_TYPE;
typedef enum _D3DKMDT_MONITOR_ORIENTATION D3DKMDT_MONITOR_ORIENTATION;
typedef enum _D3DKMDT_MONITOR_TIMING_TYPE D3DKMDT_MONITOR_TIMING_TYPE;
typedef UCHAR DOT11_WFD_MINOR_REASON_CODE;
typedef enum _DXGKMDT_OPM_PROTECTION_TYPE DXGKMDT_OPM_PROTECTION_TYPE;
typedef USHORT FLT_CREATEFILE_TARGET_FLAGS;
typedef ULONG FLT_INSTANCE_TEARDOWN_FLAGS;
typedef enum _FS_FILTER_SECTION_SYNC_TYPE FS_FILTER_SECTION_SYNC_TYPE;
typedef enum _HAL_QUERY_INFORMATION_CLASS HAL_QUERY_INFORMATION_CLASS;
typedef IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY;
typedef DXGKARG_CREATEDEVICE *INOUT_PDXGKARG_CREATEDEVICE;
typedef DXGKARG_SUBMITRENDER *INOUT_PDXGKARG_SUBMITRENDER;
typedef enum _IO_QUERY_DEVICE_DATA_FORMAT IO_QUERY_DEVICE_DATA_FORMAT;
typedef enum _KBUGCHECK_BUFFER_DUMP_STATE KBUGCHECK_BUFFER_DUMP_STATE;
typedef enum _KEY_VALUE_INFORMATION_CLASS KEY_VALUE_INFORMATION_CLASS;
typedef enum _58D48C0FB5ECB9FA87F591A2A065325C KSPROPERTY_BDA_DISEQC_EVENT;
typedef enum _388C37F61299C64FD1DD68C2D8B2451D KSPROPERTY_BDA_SIGNAL_STATS;
typedef enum _3BB8E64E0619C4E48B005AB1DFF8B019 KSPROPERTY_VIDMEM_TRANSPORT;
typedef MEDIASPACEADPCMWAVEFORMAT *LPMEDIASPACEADPCMWAVEFORMAT;
typedef enum _NDIS_802_11_RELOAD_DEFAULTS NDIS_802_11_RELOAD_DEFAULTS;
typedef enum _NDIS_FDDI_LCONNECTION_STATE NDIS_FDDI_LCONNECTION_STATE;
typedef ULONG NDIS_RECEIVE_QUEUE_GROUP_ID;
typedef void (*NET_BUFFER_FREE_MDL_HANDLER)(PMDL Mdl);
typedef MEDIASPACEADPCMWAVEFORMAT *NPMEDIASPACEADPCMWAVEFORMAT;
typedef D3DKMDT_HVIDPNTOPOLOGY *OUT_PD3DKMDT_HVIDPNTOPOLOGY;
typedef void (*PBUS_BUS_RESET_NOTIFICATION)(PVOID Context);
typedef  enum _DRIVER_RUNTIME_INIT_FLAGS *PCDRIVER_RUNTIME_INIT_FLAGS;
typedef  IMAGE_BOUND_FORWARDER_REF *PCIMAGE_BOUND_FORWARDER_REF;
typedef enum _BBF977403BF9669DC8E813E1F1F17969 PCI_EXPRESS_INDICATOR_STATE;
typedef enum _C5C3968CA997F1F22C1FAF41804E06C0 PCI_EXPRESS_L1_EXIT_LATENCY;
typedef enum _DEVICEDUMP_COLLECTION_TYPE *PDEVICEDUMP_COLLECTION_TYPE;
typedef DIALOGICOKIADPCMWAVEFORMAT *PDIALOGICOKIADPCMWAVEFORMAT;
typedef enum _FLT_POSTOP_CALLBACK_STATUS *PFLT_POSTOP_CALLBACK_STATUS;
typedef void ( *PHW_REQUEST_TIMEOUT_HANDLER)(PHW_STREAM_REQUEST_BLOCK SRB);
typedef enum _INSTANCE_INFORMATION_CLASS *PINSTANCE_INFORMATION_CLASS;
typedef enum _IPSEC_OFFLOAD_V2_OPERATION *PIPSEC_OFFLOAD_V2_OPERATION;
typedef enum _49EE439E56BE34AE43E8DD7C2A7C5B0D *PKSPROPERTY_VIDCAP_SELECTOR;
typedef enum _MM_MDL_PAGE_CONTENTS_STATE PMM_MDL_PAGE_CONTENTS_STATE;
typedef enum _MSV1_0_PROFILE_BUFFER_TYPE *PMSV1_0_PROFILE_BUFFER_TYPE;
typedef enum _NDIS_802_11_PRIVACY_FILTER *PNDIS_802_11_PRIVACY_FILTER;
typedef CM_EISA_SLOT_INFORMATION *PNDIS_EISA_SLOT_INFORMATION;
typedef enum _NDIS_PM_ADMIN_CONFIG_STATE *PNDIS_PM_ADMIN_CONFIG_STATE;
typedef enum _NET_IF_MEDIA_CONNECT_STATE *PNET_IF_MEDIA_CONNECT_STATE;
typedef enum _CLS_LOG_INFORMATION_CLASS **PPCLS_LOG_INFORMATION_CLASS;
typedef void (*PStorPortCompleteServiceIrp)(PVOID HwDeviceExtension, PVOID Irp);
typedef TDI_REQUEST_KERNEL *PTDI_REQUEST_KERNEL_CONNECT;
typedef TDI_REQUEST_ASSOCIATE_ADDRESS *PTDI_REQUEST_USER_ASSOCIATE;
typedef UNICODE_PREFIX_TABLE_ENTRY *PUNICODE_PREFIX_TABLE_ENTRY;
typedef enum VIDEO_SYNCHRONIZE_PRIORITY *PVIDEO_SYNCHRONIZE_PRIORITY;
typedef enum _WWAN_PACKET_SERVICE_ACTION *PWWAN_PACKET_SERVICE_ACTION;
typedef enum _RTL_GENERIC_COMPARE_RESULTS RTL_GENERIC_COMPARE_RESULTS;
typedef TDI_CONNECTION_INFORMATION RXCE_CONNECTION_INFORMATION;
typedef enum _SCSI_ADAPTER_CONTROL_STATUS SCSI_ADAPTER_CONTROL_STATUS;
typedef USHORT SECURITY_DESCRIPTOR_CONTROL;
typedef enum _SHRINK_VOLUME_REQUEST_TYPES SHRINK_VOLUME_REQUEST_TYPES;
typedef enum _STORAGE_IDENTIFIER_CODE_SET STORAGE_IDENTIFIER_CODE_SET;
typedef enum _STORAGE_POWERUP_REASON_TYPE STORAGE_POWERUP_REASON_TYPE;
typedef enum _STOR_EVENT_ASSOCIATION_ENUM STOR_EVENT_ASSOCIATION_ENUM;
typedef SecPkgContext_StreamSizes SecPkgContext_DatagramSizes;
typedef TDI_REQUEST_QUERY_INFORMATION TDI_REQUEST_USER_QUERY_INFO;
typedef enum _TIMER_SET_INFORMATION_CLASS TIMER_SET_INFORMATION_CLASS;
typedef void  USB_BUSIFFN_FLUSH_TRANSFERS(PVOID BusContext, PVOID DeviceHandle);
typedef enum _WHEA_PCIEXPRESS_DEVICE_TYPE WHEA_PCIEXPRESS_DEVICE_TYPE;
struct _CDB___READ_BUFFER_CAPACITY {UCHAR OperationCode;unsigned char BlockInfo : 1;unsigned char Reserved1 : 7;UCHAR Reserved2[5];UCHAR AllocationLength[2];UCHAR Control;};
struct _CDB___SECURITY_PROTOCOL_IN {UCHAR OperationCode;UCHAR SecurityProtocol;UCHAR SecurityProtocolSpecific[2];unsigned char Reserved1 : 7;unsigned char INC_512 : 1;UCHAR Reserved2;UCHAR AllocationLength[4];UCHAR Reserved3;UCHAR Control;};
struct _CDB___SEND_OPC_INFORMATION {UCHAR OperationCode;unsigned char DoOpc : 1;unsigned char Reserved1 : 7;unsigned char Exclude0 : 1;unsigned char Exclude1 : 1;unsigned char Reserved2 : 6;UCHAR Reserved3[4];UCHAR ParameterListLength[2];UCHAR Reserved4;};
struct _CLASS_MEDIA_CHANGE_CONTEXT {ULONG MediaChangeCount;ULONG NewState;};
struct _CLFS_STREAM_ID_INFORMATION {UCHAR StreamIdentifier;};
struct _ClearPathHealthCounters_IN {ULONGLONG PathID;};
struct _D3DDDI_MULTISAMPLINGMETHOD {UINT NumSamples;UINT NumQualityLevels;};
struct _D3DKMDT_STAGINGSURFACEDATA {UINT Width;UINT Height;UINT Pitch;};
struct _DXGKARG_COLLECTDBGINFO_EXT {UINT BucketingKey;UINT CurrentDmaBufferOffset;UINT Reserved2;UINT Reserved3;UINT Reserved4;UINT Reserved5;UINT Reserved6;UINT Reserved7;};
struct _DsmSetLoadBalancePolicy_IN {DSM_Load_Balance_Policy LoadBalancePolicy;};
struct _ENLISTMENT_CRM_INFORMATION {GUID CrmTransactionManagerId;GUID CrmResourceManagerId;GUID CrmEnlistmentId;};
struct _ETW_TRACE_SESSION_SETTINGS {ULONG Version;ULONG BufferSize;ULONG MinimumBuffers;ULONG MaximumBuffers;ULONG LoggerMode;ULONG FlushTimer;ULONG FlushThreshold;ULONG ClockType;};
struct _FILE_ALIGNMENT_INFORMATION {ULONG AlignmentRequirement;};
struct _FILE_FS_DEVICE_INFORMATION {ULONG DeviceType;ULONG Characteristics;};
struct _FILE_NUMA_NODE_INFORMATION {USHORT NodeNumber;};
struct _FILE_ZERO_DATA_INFORMATION {LARGE_INTEGER FileOffset;LARGE_INTEGER BeyondFinalZero;};
struct _FSCTL_QUERY_FAT_BPB_BUFFER {UCHAR First0x24BytesOfBootSector[36];};
struct _FSVIDEO_SCREEN_INFORMATION {COORD ScreenSize;COORD FontSize;};
struct _GetFcpPersistentBinding_IN {ULONG InEntryCount;};
struct _IRB_REQ_ISOCH_FREE_CHANNEL {ULONG nChannel;};
struct _KEYBOARD_PORT_WMI_STD_DATA {ULONG ConnectorType;ULONG DataQueueSize;ULONG ErrorCount;ULONG FunctionKeys;ULONG Indicators;};
struct _KEYBOARD_UNIT_ID_PARAMETER {USHORT UnitId;};
struct _KEY_WRITE_TIME_INFORMATION {LARGE_INTEGER LastWriteTime;};
struct _MODE_DATA_COMPRESSION_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 2;UCHAR PageLength;unsigned char Reserved2 : 6;unsigned char DCC : 1;unsigned char DCE : 1;unsigned char Reserved3 : 5;unsigned char RED : 2;unsigned char DDE : 1;UCHAR CompressionAlgorithm[4];UCHAR DecompressionAlgorithm[4];UCHAR Reserved4[4];};
struct _MODE_MEDIUM_PARTITION_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PSBit : 1;UCHAR PageLength;UCHAR MaximumAdditionalPartitions;UCHAR AdditionalPartitionDefined;unsigned char Reserved2 : 3;unsigned char PSUMBit : 2;unsigned char IDPBit : 1;unsigned char SDPBit : 1;unsigned char FDPBit : 1;UCHAR MediumFormatRecognition;UCHAR Reserved3[2];UCHAR Partition0Size[2];UCHAR Partition1Size[2];};
struct _MSNdis_80211_BssIdListScan {ULONG UnusedParameter;};
struct _MSNdis_80211_Configuration {MSNdis_80211_ConfigurationInfo Ndis80211Config;};
struct _MSNdis_80211_PrivacyFilter {ULONG Ndis80211PrivacyFilter;};
struct _MSNdis_AtmMaxActiveVciBits {ULONG NdisAtmMaxActiveVciBits;};
struct _MSNdis_AtmMaxActiveVpiBits {ULONG NdisAtmMaxActiveVpiBits;};
struct _MSNdis_AtmSupportedVcRates {ULONG MinCellRate;ULONG MaxCellRate;};
struct _MSNdis_CoTransmitPduErrors {ULONG NdisCoTransmitPduErrors;};
struct _MSNdis_CoVendorDescription {CHAR VariableData[1];};
struct _MSNdis_CurrentPacketFilter {ULONG NdisCurrentPacketFilter;};
struct _MSNdis_NetworkShortAddress {UCHAR Address[2];};
struct _MSNdis_StatusDevicePowerOn {CHAR VariableData[1];};
struct _MSNdis_TokenRingLineErrors {ULONG NdisTokenRingLineErrors;};
struct _MSNdis_TokenRingLostFrames {ULONG NdisTokenRingLostFrames;};
struct _MSNdis_TransmitBufferSpace {ULONG NdisTransmitBufferSpace;};
struct _MSNdis_VendorDriverVersion {ULONG NdisVendorDriverVersion;};
struct _NDIS_WAN_CO_GET_STATS_INFO {ULONG BytesSent;ULONG BytesRcvd;ULONG FramesSent;ULONG FramesRcvd;ULONG CRCErrors;ULONG TimeoutErrors;ULONG AlignmentErrors;ULONG SerialOverrunErrors;ULONG FramingErrors;ULONG BufferOverrunErrors;ULONG BytesTransmittedUncompressed;ULONG BytesReceivedUncompressed;ULONG BytesTransmittedCompressed;ULONG BytesReceivedCompressed;ULONG TunnelPacketsRecieved;ULONG TunnelRecievePacketsPending;ULONG TunnelPacketsIndicatedUp;ULONG TunnelRecievePacketsRejected;ULONG TunnelPacketsSent;ULONG TunnelPacketsSentComplete;ULONG TunnelTransmitPacketsPending;ULONG TunnelPacketsTransmitError;ULONG TunnelPacketsSentError;ULONG TunnelTransmitPacketsRejected;ULONG TunnelAcksSent;ULONG TunnelAcksSentComplete;ULONG TunnelGeneric1;ULONG TunnelGeneric2;ULONG TunnelGeneric3;};
struct _READ_DVD_STRUCTURES_HEADER {UCHAR Length[2];UCHAR Reserved[2];UCHAR Data[];};
struct _REG_DELETE_KEY_INFORMATION {PVOID Object;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _REG_UNLOAD_KEY_INFORMATION {PVOID Object;PVOID UserEvent;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _SYSTEM_POWER_LOGGING_ENTRY {ULONG Reason;ULONG States;};
struct _SecPkgContext_PackageInfoW {PSecPkgInfoW PackageInfo;};
struct _SetChapForPhysicalPort_OUT {ULONG Status;};
struct _TDI_REQUEST_KERNEL_RECEIVE {ULONG ReceiveLength;ULONG ReceiveFlags;};
struct _VIDEO_POINTER_CAPABILITIES {ULONG Flags;ULONG MaxWidth;ULONG MaxHeight;ULONG HWPtrBitmapStart;ULONG HWPtrBitmapEnd;};
struct _WWAN_GET_VISIBLE_PROVIDERS {ULONG Action;};
struct _WWAN_SET_SIGNAL_INDICATION {ULONG RssiInterval;ULONG RssiThreshold;};
struct _WmiMonitorConnectionParams {ULONG VideoOutputTechnology;};
struct _WmiQueryStatisticsInfo_OUT {MSNdis_StatisticsInfo StatisticsInfo;};
struct tagKS_DATARANGE_BDA_ANTENNA {KSDATARANGE DataRange;};
typedef ATM_ADDRESS ATM_CALLED_PARTY_NUMBER_IE;
typedef enum _DA909687F2C7D951C543BFC25B77F519 CLASSENABLEDISABLEFUNCTION;
typedef CLS_CONTAINER_INFORMATION CLFS_CONTAINER_INFORMATION;
struct DOT11_MAC_FRAME_STATISTICS {ULONGLONG ullTransmittedFrameCount;ULONGLONG ullReceivedFrameCount;ULONGLONG ullTransmittedFailureFrameCount;ULONGLONG ullReceivedFailureFrameCount;ULONGLONG ullWEPExcludedCount;ULONGLONG ullTKIPLocalMICFailures;ULONGLONG ullTKIPReplays;ULONGLONG ullTKIPICVErrorCount;ULONGLONG ullCCMPReplays;ULONGLONG ullCCMPDecryptErrors;ULONGLONG ullWEPUndecryptableCount;ULONGLONG ullWEPICVErrorCount;ULONGLONG ullDecryptSuccessCount;ULONGLONG ullDecryptFailureCount;};
struct DOT11_PHY_FRAME_STATISTICS {ULONGLONG ullTransmittedFrameCount;ULONGLONG ullMulticastTransmittedFrameCount;ULONGLONG ullFailedCount;ULONGLONG ullRetryCount;ULONGLONG ullMultipleRetryCount;ULONGLONG ullMaxTXLifetimeExceededCount;ULONGLONG ullTransmittedFragmentCount;ULONGLONG ullRTSSuccessCount;ULONGLONG ullRTSFailureCount;ULONGLONG ullACKFailureCount;ULONGLONG ullReceivedFrameCount;ULONGLONG ullMulticastReceivedFrameCount;ULONGLONG ullPromiscuousReceivedFrameCount;ULONGLONG ullMaxRXLifetimeExceededCount;ULONGLONG ullFrameDuplicateCount;ULONGLONG ullReceivedFragmentCount;ULONGLONG ullPromiscuousReceivedFragmentCount;ULONGLONG ullFCSErrorCount;};
typedef UCHAR DOT11_WFD_GROUP_CAPABILITY;
typedef enum _DXGK_SURPRISE_REMOVAL_TYPE DXGK_SURPRISE_REMOVAL_TYPE;
typedef USHORT FLT_FILE_NAME_PARSED_FLAGS;
typedef enum _FLT_POSTOP_CALLBACK_STATUS FLT_POSTOP_CALLBACK_STATUS;
typedef void FWMI_NOTIFICATION_CALLBACK(PVOID Wnode, PVOID Context);
typedef void HW_PROCESS_SERVICE_REQUEST(PVOID DeviceExtension, PVOID Irp);
typedef DXGKARG_GETSCANLINE *INOUT_PDXGKARG_GETSCANLINE;
typedef DXGKARG_RESETENGINE *INOUT_PDXGKARG_RESETENGINE;
typedef enum _INSTANCE_INFORMATION_CLASS INSTANCE_INFORMATION_CLASS;
typedef enum _IPSEC_OFFLOAD_V2_OPERATION IPSEC_OFFLOAD_V2_OPERATION;
typedef enum _DD5FC77EC1374A734666B81823C28AFB KSDS3D_HRTF_FILTER_QUALITY;
typedef enum _FDE649CC57CE41CE85FECAF000FEEDF5 KSDS3D_HRTF_FILTER_VERSION;
typedef enum _7527A514AFDC53113B26312D726B42E0 KSJACK_SINK_CONNECTIONTYPE;
typedef enum _913F477DC939D6BCE5130F5803AE22C4 KSMETHOD_BDA_DEBUG_SERVICE;
typedef enum _5A3467F7F820039F54409F0D6697F58C KSMETHOD_BDA_TUNER_SERVICE;
typedef enum _D5CA3A18CB786C06D1FE5E26C4BBD8C9 KSPROPERTY_BDA_IPv4_FILTER;
typedef enum _6F6C2F72068A7A854C30F881415EDCB8 KSPROPERTY_BDA_IPv6_FILTER;
typedef enum _15EAB5DB270905D3ADC7E2FB667B7EB6 KSPROPERTY_BDA_PIN_CONTROL;
typedef enum _414881918899110C4C8585ADE11D74B4 KSPROPERTY_STREAMALLOCATOR;
typedef enum _E429D5BCA10BC7F1E46CF67F9B793820 KSPROPERTY_STREAMINTERFACE;
typedef enum _36ED128D68EAAF7F1CDD97218E1C5001 KSPROPERTY_VIDCAP_CROSSBAR;
typedef enum _49EE439E56BE34AE43E8DD7C2A7C5B0D KSPROPERTY_VIDCAP_SELECTOR;
typedef AUDIOFILE_AF10WAVEFORMAT *LPAUDIOFILE_AF10WAVEFORMAT;
typedef AUDIOFILE_AF36WAVEFORMAT *LPAUDIOFILE_AF36WAVEFORMAT;
typedef enum _MM_MDL_PAGE_CONTENTS_STATE MM_MDL_PAGE_CONTENTS_STATE;
typedef enum _MSV1_0_PROFILE_BUFFER_TYPE MSV1_0_PROFILE_BUFFER_TYPE;
typedef enum _NDIS_802_11_PRIVACY_FILTER NDIS_802_11_PRIVACY_FILTER;
typedef ULONG NDIS_802_11_TX_POWER_LEVEL;
typedef CM_EISA_SLOT_INFORMATION NDIS_EISA_SLOT_INFORMATION;
typedef enum _NDIS_PM_ADMIN_CONFIG_STATE NDIS_PM_ADMIN_CONFIG_STATE;
typedef enum _NET_IF_MEDIA_CONNECT_STATE NET_IF_MEDIA_CONNECT_STATE;
typedef AUDIOFILE_AF10WAVEFORMAT *NPAUDIOFILE_AF10WAVEFORMAT;
typedef AUDIOFILE_AF36WAVEFORMAT *NPAUDIOFILE_AF36WAVEFORMAT;
typedef enum _ACPI_GENERIC_ADDRESS_TYPE *PACPI_GENERIC_ADDRESS_TYPE;
typedef  FLT_CONTEXT_REGISTRATION *PCFLT_CONTEXT_REGISTRATION;
typedef enum _CLS_LOG_INFORMATION_CLASS *PCLS_LOG_INFORMATION_CLASS;
typedef enum _DRIVER_RUNTIME_INIT_FLAGS *PDRIVER_RUNTIME_INIT_FLAGS;
typedef enum _EMULATOR_PORT_ACCESS_TYPE *PEMULATOR_PORT_ACCESS_TYPE;
typedef enum _3F865298D7A39DB2D042C10B310808E8 *PFAILURE_PREDICTION_METHOD;
typedef enum _FLT_PREOP_CALLBACK_STATUS *PFLT_PREOP_CALLBACK_STATUS;
typedef enum _FLT_SET_CONTEXT_OPERATION *PFLT_SET_CONTEXT_OPERATION;
typedef void (*PFNDEREFERENCEDEVICEOBJECT)(PVOID Context);
typedef FSRTL_ADVANCED_FCB_HEADER *PFSRTL_ADVANCED_FCB_HEADER;
typedef enum _FSRTL_CHANGE_BACKING_TYPE *PFSRTL_CHANGE_BACKING_TYPE;
typedef enum _E1D7F57E2A49D0507BA8D33EFA899EEA *PHAL_APIC_DESTINATION_MODE;
typedef enum _HAL_SET_INFORMATION_CLASS *PHAL_SET_INFORMATION_CLASS;
typedef enum _HDAUDIO_CODEC_POWER_STATE *PHDAUDIO_CODEC_POWER_STATE;
typedef enum _11EC008DD3BC1FD2717C5AD6FBC7A4E2 *PKSPROPERTY_EXTENSION_UNIT;
typedef enum _AB84C8955069406F80CB719201B159DD *PKS_COPY_MACROVISION_LEVEL;
typedef MEDIASPACEADPCMWAVEFORMAT *PMEDIASPACEADPCMWAVEFORMAT;
typedef enum _NDIS_FDDI_ATTACHMENT_TYPE *PNDIS_FDDI_ATTACHMENT_TYPE;
typedef enum _NDIS_INTERRUPT_MODERATION *PNDIS_INTERRUPT_MODERATION;
typedef enum _NDIS_MSIX_TABLE_CONFIG *PNDIS_MSIX_TABLE_OPERATION;
typedef enum _NDIS_NET_BUFFER_LIST_INFO *PNDIS_NET_BUFFER_LIST_INFO;
typedef enum _NET_IF_MEDIA_DUPLEX_STATE *PNET_IF_MEDIA_DUPLEX_STATE;
typedef void (*PPARALLEL_DEFERRED_ROUTINE)(PVOID DeferredContext);
typedef enum _C650760535C8F8DBC377C44CC6C73C0B PPOWER_STATE_DISABLED_TYPE;
typedef enum _EFCC84E8C2A5CC38881F2196F9700629 *PPO_FIXED_WAKE_SOURCE_TYPE;
typedef enum _PROCESS_MITIGATION_POLICY *PPROCESS_MITIGATION_POLICY;
typedef enum _SCO_RETRANSMISSION_EFFORT *PSCO_RETRANSMISSION_EFFORT;
typedef enum _SCSI_ADAPTER_CONTROL_TYPE *PSCSI_ADAPTER_CONTROL_TYPE;
typedef enum _STORAGE_TRACE_NOTIFY_TYPE *PSTORAGE_TRACE_NOTIFY_TYPE;
typedef XVARIABLE_NAME_AND_VALUE *PSYSENV_VARIABLE_AND_VALUE;
typedef TDI_REQUEST_KERNEL *PTDI_REQUEST_KERNEL_LISTEN;
typedef enum _WWAN_PACKET_SERVICE_STATE *PWWAN_PACKET_SERVICE_STATE;
typedef enum _STOR_SYNCHRONIZATION_MODEL STOR_SYNCHRONIZATION_MODEL;
typedef TDI_REQUEST_KERNEL TDI_REQUEST_KERNEL_CONNECT;
typedef TDI_REQUEST_ASSOCIATE_ADDRESS TDI_REQUEST_USER_ASSOCIATE;
typedef PROTOCOL_UNINSTALL *UNINSTALL_PROTOCOL_HANDLER;
typedef enum _WWAN_PACKET_SERVICE_ACTION WWAN_PACKET_SERVICE_ACTION;
struct _CDB___INIT_ELEMENT_STATUS {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNubmer : 3;UCHAR Reserved2[3];unsigned char Reserved3 : 7;unsigned char NoBarCode : 1;};
struct _CDB___POSITION_TO_ELEMENT {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR TransportElementAddress[2];UCHAR DestinationElementAddress[2];UCHAR Reserved2[2];unsigned char Flip : 1;unsigned char Reserved3 : 7;UCHAR Control;};
struct _CDB___READ_ELEMENT_STATUS {UCHAR OperationCode;unsigned char ElementType : 4;unsigned char VolTag : 1;unsigned char LogicalUnitNumber : 3;UCHAR StartingElementAddress[2];UCHAR NumberOfElements[2];UCHAR Reserved1;UCHAR AllocationLength[3];UCHAR Reserved2;UCHAR Control;};
struct _CDB___RESERVE_TRACK_RZONE {UCHAR OperationCode;UCHAR Reserved1[4];UCHAR ReservationSize[4];UCHAR Control;};
struct _CDB___SYNCHRONIZE_CACHE10 {UCHAR OperationCode;unsigned char RelAddr : 1;unsigned char Immediate : 1;unsigned char Reserved : 3;unsigned char Lun : 3;UCHAR LogicalBlockAddress[4];UCHAR Reserved2;UCHAR BlockCount[2];UCHAR Control;};
struct _CDB___SYNCHRONIZE_CACHE16 {UCHAR OperationCode;unsigned char Reserved1 : 1;unsigned char Immediate : 1;unsigned char Reserved2 : 6;UCHAR LogicalBlock[8];UCHAR BlockCount[4];UCHAR Reserved3;UCHAR Control;};
struct _CDROM_TOC_ATIP_DATA_BLOCK {unsigned char CdrwReferenceSpeed : 3;unsigned char Reserved3 : 1;unsigned char WritePower : 3;unsigned char True1 : 1;unsigned char Reserved4 : 6;unsigned char UnrestrictedUse : 1;unsigned char Reserved5 : 1;unsigned char A3Valid : 1;unsigned char A2Valid : 1;unsigned char A1Valid : 1;unsigned char DiscSubType : 3;unsigned char IsCdrw : 1;unsigned char True2 : 1;UCHAR Reserved7;UCHAR LeadInMsf[3];UCHAR Reserved8;UCHAR LeadOutMsf[3];UCHAR Reserved9;UCHAR A1Values[3];UCHAR Reserved10;UCHAR A2Values[3];UCHAR Reserved11;UCHAR A3Values[3];UCHAR Reserved12;};
struct _CDROM_WRITE_SPEED_REQUEST {CDROM_PERFORMANCE_REQUEST_TYPE RequestType;};
struct _DOT11_FRAGMENT_DESCRIPTOR {ULONG uOffset;ULONG uLength;};
struct _DXGKARG_QUERYCURRENTFENCE {UINT CurrentFence;UINT NodeOrdinal;UINT EngineOrdinal;};
struct _DXGKMDT_OPM_RANDOM_NUMBER {BYTE abRandomNumber[16];};
struct _FILE_INTERNAL_INFORMATION {LARGE_INTEGER IndexNumber;};
struct _FILE_POSITION_INFORMATION {LARGE_INTEGER CurrentByteOffset;};
struct _FSVIDEO_COPY_FRAME_BUFFER {FSCNTL_SCREEN_INFO SrcScreen;FSCNTL_SCREEN_INFO DestScreen;};
struct _GetPortAttributesByWWN_IN {UCHAR wwn[8];};
struct _IMAGE_COFF_SYMBOLS_HEADER {ULONG NumberOfSymbols;ULONG LvaToFirstSymbol;ULONG NumberOfLinenumbers;ULONG LvaToFirstLinenumber;ULONG RvaToFirstByteOfCode;ULONG RvaToLastByteOfCode;ULONG RvaToFirstByteOfData;ULONG RvaToLastByteOfData;};
struct _IMAGE_RESOURCE_DATA_ENTRY {ULONG OffsetToData;ULONG Size;ULONG CodePage;ULONG Reserved;};
struct _INJECT_HARDWARE_ERROR_OUT {ULONG Status;};
struct _KDPC_WATCHDOG_INFORMATION {ULONG DpcTimeLimit;ULONG DpcTimeCount;ULONG DpcWatchdogLimit;ULONG DpcWatchdogCount;ULONG Reserved;};
struct _KS_DVDCOPY_SET_COPY_STATE {ULONG DVDCopyState;};
struct _MODE_ELEMENT_ADDRESS_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PS : 1;UCHAR PageLength;UCHAR MediumTransportElementAddress[2];UCHAR NumberTransportElements[2];UCHAR FirstStorageElementAddress[2];UCHAR NumberStorageElements[2];UCHAR FirstIEPortElementAddress[2];UCHAR NumberIEPortElements[2];UCHAR FirstDataXFerElementAddress[2];UCHAR NumberDataXFerElements[2];UCHAR Reserved2[2];};
struct _MSNdis_80211_Disassociate {ULONG UnusedParameter;};
struct _MSNdis_80211_RTSThreshold {ULONG Ndis80211RTSThreshold;};
struct _MSNdis_AtmTransmitCellsOk {ULONGLONG NdisAtmTransmitCellsOk;};
struct _MSNdis_CoMinimumLinkSpeed {MSNdis_NetworkLinkSpeed NdisCoMinimumLinkSpeed;};
struct _MSNdis_CoReceivePduErrors {ULONG NdisCoReceivePduErrors;};
struct _MSNdis_EnumerateAdapterEx {MSNdis_WmiEnumAdapter EnumerateAdapter;};
struct _MSNdis_EthernetMacOptions {ULONG NdisEthernetMacOptions;};
struct _MSNdis_FddiAttachmentType {ULONG NdisFddiAttachmentType;};
struct _MSNdis_MaximumSendPackets {ULONG NdisMaximumSendPackets;};
struct _MSNdis_MediaConnectStatus {ULONG NdisMediaConnectStatus;};
struct _MSNdis_PMAdminConfigState {ULONG NdisPMAdminConfigState;};
struct _MSNdis_PhysicalMediumType {ULONG NdisPhysicalMediumType;};
struct _MSNdis_ReceiveBufferSpace {ULONG NdisReceiveBufferSpace;};
struct _MSNdis_StatusProtocolBind {CHAR VariableData[1];};
struct _NDIS_WAN_CO_GET_COMP_INFO {NDIS_WAN_COMPRESS_INFO SendCapabilities;NDIS_WAN_COMPRESS_INFO RecvCapabilities;};
struct _NDIS_WAN_CO_GET_LINK_INFO {ULONG MaxSendFrameSize;ULONG MaxRecvFrameSize;ULONG SendFramingBits;ULONG RecvFramingBits;ULONG SendCompressionBits;ULONG RecvCompressionBits;ULONG SendACCM;ULONG RecvACCM;};
struct _NDIS_WAN_CO_SET_COMP_INFO {NDIS_WAN_COMPRESS_INFO SendCapabilities;NDIS_WAN_COMPRESS_INFO RecvCapabilities;};
struct _NDIS_WAN_CO_SET_LINK_INFO {ULONG MaxSendFrameSize;ULONG MaxRecvFrameSize;ULONG SendFramingBits;ULONG RecvFramingBits;ULONG SendCompressionBits;ULONG RecvCompressionBits;ULONG SendACCM;ULONG RecvACCM;};
struct _NOTIFICATION_POWER_STATUS {unsigned char PowerEvent : 4;unsigned char Reserved : 4;UCHAR PowerStatus;UCHAR Reserved2[2];};
struct _PAGE_PRIORITY_INFORMATION {ULONG PagePriority;};
struct _PARCLASS_NEGOTIATION_MASK {USHORT usReadMask;USHORT usWriteMask;};
struct _POINTER_PORT_WMI_STD_DATA {ULONG ConnectorType;ULONG DataQueueSize;ULONG ErrorCount;ULONG Buttons;ULONG HardwareType;};
struct _PREFETCH_OPEN_ECP_CONTEXT {PVOID Context;};
struct _READ_BUFFER_CAPACITY_DATA {UCHAR DataLength[2];UCHAR Reserved1;unsigned char BlockDataReturned : 1;unsigned char Reserved4 : 7;UCHAR TotalBufferSize[4];UCHAR AvailableBufferSize[4];};
struct _RX_WORK_QUEUE_DISPATCHER_ {RX_WORK_QUEUE WorkQueue[3];};
struct _RemovePersistentEntry_OUT {ULONG HBAStatus;};
struct _RemovePersistentLogin_OUT {ULONG Status;};
struct _SDBUS_ADAPTER_SOCKET_INFO {SD_SOCKET_DATA SocketData[1];};
struct _SET_ERROR_SOURCE_INFO_OUT {ULONG Status;};
struct _SET_PARTITION_INFORMATION {UCHAR PartitionType;};
struct _STORAGE_BUS_RESET_REQUEST {UCHAR PathId;};
struct _STORAGE_DESCRIPTOR_HEADER {ULONG Version;ULONG Size;};
struct _STOR_CLEANUP_TRACING_ARGS {PVOID TraceContext;};
struct _STOR_FREE_DIAG_EVENT_ARGS {PVOID TraceContext;PVOID EventRecord;};
struct _STOR_WRITE_EL_RECORD_ARGS {PVOID TraceContext;PVOID ErrorLogPacket;};
struct _SetChapForPhysicalPort_IN {MSFC_DH_Chap_Parameters CHAP;};
struct _SetRADIUSSharedSecret_OUT {ULONG Status;};
struct _TAPE_SET_MEDIA_PARAMETERS {ULONG BlockSize;};
struct _TDI_REQUEST_KERNEL_ACCEPT {PTDI_CONNECTION_INFORMATION RequestConnectionInformation;PTDI_CONNECTION_INFORMATION ReturnConnectionInformation;};
struct _VIDEO_PERFORMANCE_COUNTER {UINT64 NbOfAllocationEvicted[10];UINT64 NbOfAllocationMarked[10];UINT64 NbOfAllocationRestored[10];UINT64 KBytesEvicted[10];UINT64 KBytesMarked[10];UINT64 KBytesRestored[10];UINT64 NbProcessCommited;UINT64 NbAllocationCommited;UINT64 NbAllocationMarked;UINT64 KBytesAllocated;UINT64 KBytesAvailable;UINT64 KBytesCurMarked;UINT64 Reference;UINT64 Unreference;UINT64 TrueReference;UINT64 NbOfPageIn;UINT64 KBytesPageIn;UINT64 NbOfPageOut;UINT64 KBytesPageOut;UINT64 NbOfRotateOut;UINT64 KBytesRotateOut;};
struct _VPD_THIRD_PARTY_COPY_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR PageLength[2];UCHAR ThirdPartyCopyDescriptors[1];};
struct _WHEA_PCIEXPRESS_DEVICE_ID {USHORT VendorID;USHORT DeviceID;unsigned int ClassCode : 24;unsigned int FunctionNumber : 8;unsigned int DeviceNumber : 8;unsigned int Segment : 16;unsigned int PrimaryBusNumber : 8;unsigned int SecondaryBusNumber : 8;unsigned int Reserved1 : 3;unsigned int SlotNumber : 13;unsigned int Reserved2 : 8;};
struct _WMI_TAPE_PROBLEM_IO_ERROR {ULONG ReadCorrectedWithoutDelay;ULONG ReadCorrectedWithDelay;ULONG ReadTotalErrors;ULONG ReadTotalCorrectedErrors;ULONG ReadTotalUncorrectedErrors;ULONG ReadCorrectionAlgorithmProcessed;ULONG WriteCorrectedWithoutDelay;ULONG WriteCorrectedWithDelay;ULONG WriteTotalErrors;ULONG WriteTotalCorrectedErrors;ULONG WriteTotalUncorrectedErrors;ULONG WriteCorrectionAlgorithmProcessed;ULONG NonMediumErrors;};
struct _WSK_EXTENSION_CONTROL_OUT {PVOID ProviderContext; void *ProviderDispatch;};
struct _WmiEnumReceiveFilters_OUT {MSNdis_ReceiveFilterInfoArray ReceiveFilterInfoArray;};
struct _WmiMonitorBrightnessEvent {UCHAR Brightness;};
struct _WmiMonitorRawEEdidV1Block {UCHAR Id;UCHAR Type;UCHAR Content[128];};
struct _WmiQueryStatisticsInfo_IN {MSNdis_WmiMethodHeader Header;};
struct yamaha_adpmcwaveformat_tag {WAVEFORMATEX wfx;};
typedef enum _ACPI_GENERIC_ADDRESS_TYPE ACPI_GENERIC_ADDRESS_TYPE;
typedef ULONG ATM_SERVICE_REGISTRY_TYPE;
typedef enum _14400591F8E5BCF1B27F1E85FCD157AC BDA_DigitalSignalStandard;
typedef CLS_IO_STATISTICS_HEADER CLFS_IO_STATISTICS_HEADER;
typedef enum _CLS_LOG_INFORMATION_CLASS CLS_LOG_INFORMATION_CLASS;
struct DOT11_OFDM_PHY_ATTRIBUTES {ULONG uFrequencyBandsSupported;};
typedef enum _DRIVER_RUNTIME_INIT_FLAGS DRIVER_RUNTIME_INIT_FLAGS;
typedef enum _DXGK_POWER_COMPONENT_TYPE DXGK_POWER_COMPONENT_TYPE;
typedef enum _DXGK_QUERYADAPTERINFOTYPE DXGK_QUERYADAPTERINFOTYPE;
typedef enum _EMULATOR_PORT_ACCESS_TYPE EMULATOR_PORT_ACCESS_TYPE;
typedef enum _3F865298D7A39DB2D042C10B310808E8 FAILURE_PREDICTION_METHOD;
typedef enum _FLT_PREOP_CALLBACK_STATUS FLT_PREOP_CALLBACK_STATUS;
typedef enum _FLT_SET_CONTEXT_OPERATION FLT_SET_CONTEXT_OPERATION;
typedef enum _FSRTL_CHANGE_BACKING_TYPE FSRTL_CHANGE_BACKING_TYPE;
typedef ULONG FSRTL_ECP_LOOKASIDE_FLAGS;
typedef enum _E1D7F57E2A49D0507BA8D33EFA899EEA HAL_APIC_DESTINATION_MODE;
typedef enum _HAL_SET_INFORMATION_CLASS HAL_SET_INFORMATION_CLASS;
typedef enum _HDAUDIO_CODEC_POWER_STATE HDAUDIO_CODEC_POWER_STATE;
typedef void HW_FREE_ADAPTER_RESOURCES(PVOID DeviceExtension);
typedef PSecurityFunctionTableW ( *INIT_SECURITY_INTERFACE_W)();
typedef D3DKMDT_HVIDPNTOPOLOGY IN_D3DKMDT_HVIDPNTOPOLOGY;
typedef ULONG IPSEC_OFFLOAD_V2_SPI_TYPE;
typedef enum _BFA670D78B5850C2D3991209E6B67309 IP_OPTION_TIMESTAMP_FLAGS;
typedef enum _KBUGCHECK_CALLBACK_REASON KBUGCHECK_CALLBACK_REASON;
typedef enum _KEY_SET_INFORMATION_CLASS KEY_SET_INFORMATION_CLASS;
typedef enum _936EE475885E5E1972395CF18A9E441C KSDS3D_HRTF_FILTER_METHOD;
typedef enum _5E815F531691CADE0920F6FE7F05DC54 KSMETHOD_BDA_GDDS_SERVICE;
typedef enum _73E65E14982D93DAA2179242AF0E53FC KSMETHOD_BDA_GPNV_SERVICE;
typedef enum _DA0D5BB75CBDBE72A15ACBE1E5F6B74A KSMETHOD_BDA_SCAN_SERVICE;
typedef enum _A6BC26748E56DACD668315459CCF5D3F KSPROPERTY_DRMAUDIOSTREAM;
typedef enum _11EC008DD3BC1FD2717C5AD6FBC7A4E2 KSPROPERTY_EXTENSION_UNIT;
typedef enum _59F47961FEC953F20A64EC788B1D06EA KSPROPERTY_VIDCAP_TVAUDIO;
typedef enum _AB84C8955069406F80CB719201B159DD KS_COPY_MACROVISION_LEVEL;
typedef CREATIVEADPCMWAVEFORMAT *LPCREATIVEADPCMWAVEFORMAT;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];
typedef enum _MINIRDR_BUFSTATE_COMMANDS MINIRDR_BUFSTATE_COMMANDS;
typedef enum _MOUNTMGR_AUTO_MOUNT_STATE MOUNTMGR_AUTO_MOUNT_STATE;
typedef ULONG NDIS_802_11_RTS_THRESHOLD;
typedef enum _NDIS_FDDI_ATTACHMENT_TYPE NDIS_FDDI_ATTACHMENT_TYPE;
typedef enum _NDIS_INTERRUPT_MODERATION NDIS_INTERRUPT_MODERATION;
typedef enum _NDIS_MSIX_TABLE_CONFIG NDIS_MSIX_TABLE_OPERATION;
typedef enum _NDIS_NET_BUFFER_LIST_INFO NDIS_NET_BUFFER_LIST_INFO;
typedef enum _NET_IF_MEDIA_DUPLEX_STATE NET_IF_MEDIA_DUPLEX_STATE;
typedef enum _4B9A5D9798CAEECAF66471EC6A7BB50E NLB_FILTER_HOOK_DIRECTIVE;
typedef CREATIVEADPCMWAVEFORMAT *NPCREATIVEADPCMWAVEFORMAT;
typedef enum _ACPI_GENERIC_ACCESS_SIZE *PACPI_GENERIC_ACCESS_SIZE;
typedef AUDIOFILE_AF10WAVEFORMAT *PAUDIOFILE_AF10WAVEFORMAT;
typedef AUDIOFILE_AF36WAVEFORMAT *PAUDIOFILE_AF36WAVEFORMAT;
typedef  API_SET_NAMESPACE_ARRAY *PCAPI_SET_NAMESPACE_ARRAY;
typedef  API_SET_NAMESPACE_ENTRY *PCAPI_SET_NAMESPACE_ENTRY;
typedef  IMAGE_IMPORT_DESCRIPTOR *PCIMAGE_IMPORT_DESCRIPTOR;
typedef enum _CBE1DD2CAA455ED961B673E1E179B87C PCI_EXPRESS_CARD_PRESENCE;
typedef enum _FILTER_INFORMATION_CLASS *PFILTER_INFORMATION_CLASS;
typedef enum _AF13F99353F05C737A579C4443E690B4 *PISCSI_ADAPTER_EVENT_CODE;
typedef enum _MSV1_0_LOGON_SUBMIT_TYPE *PMSV1_0_LOGON_SUBMIT_TYPE;
typedef NAMED_PIPE_INFORMATION_1 *PNAMED_PIPE_INFORMATION_1;
typedef enum _NDIS_802_11_NETWORK_TYPE *PNDIS_802_11_NETWORK_TYPE;
typedef enum _NDIS_802_11_RADIO_STATUS *PNDIS_802_11_RADIO_STATUS;
typedef enum _NDIS_FDDI_RING_MGT_STATE *PNDIS_FDDI_RING_MGT_STATE;
typedef NET_IF_MEDIA_CONNECT_STATE *PNDIS_MEDIA_CONNECT_STATE;
typedef enum _NDIS_NETWORK_CHANGE_TYPE *PNDIS_NETWORK_CHANGE_TYPE;
typedef enum _NDIS_PM_CAPABILITY_STATE *PNDIS_PM_CAPABILITY_STATE;
typedef enum _NDIS_RECEIVE_FILTER_TEST *PNDIS_RECEIVE_FILTER_TEST;
typedef enum _NDIS_RECEIVE_FILTER_TYPE *PNDIS_RECEIVE_FILTER_TYPE;
typedef enum _NDIS_SHARED_MEMORY_USAGE *PNDIS_SHARED_MEMORY_USAGE;
typedef NDIS_STATISTICS_VALUE_EX *PNDIS_STATISTICS_VALUE_EX;
typedef enum _OB_PREOP_CALLBACK_STATUS *POB_PREOP_CALLBACK_STATUS;
typedef enum _C650760535C8F8DBC377C44CC6C73C0B POWER_STATE_DISABLED_TYPE;
typedef enum _EFCC84E8C2A5CC38881F2196F9700629 PO_FIXED_WAKE_SOURCE_TYPE;
typedef enum _90C5F04E0DCFA05FF87E9259EA488940 *PPOWER_STATE_HANDLER_TYPE;
typedef enum _51E2EEFCC61EF61BA570BB294F739445 *PPOWER_USER_PRESENCE_TYPE;
typedef enum _PROCESS_MITIGATION_POLICY PROCESS_MITIGATION_POLICY;
typedef enum _RX_SCAVENGER_ENTRY_STATE *PRX_SCAVENGER_ENTRY_STATE;
typedef enum _SCSI_UNIT_CONTROL_STATUS *PSCSI_UNIT_CONTROL_STATUS;
typedef void (*PSERVICE_CALLBACK_ROUTINE)(PVOID NormalContext, PVOID SystemArgument1, PVOID SystemArgument2, PVOID SystemArgument3);
typedef enum _STORAGE_ASSOCIATION_TYPE *PSTORAGE_ASSOCIATION_TYPE;
typedef TDI_REQUEST_CONNECT *PTDI_REQUEST_USER_CONNECT;
typedef enum _RX_NAME_CONJURING_METHODS RX_NAME_CONJURING_METHODS;
typedef enum _SCO_RETRANSMISSION_EFFORT SCO_RETRANSMISSION_EFFORT;
typedef enum _SCSI_ADAPTER_CONTROL_TYPE SCSI_ADAPTER_CONTROL_TYPE;
typedef enum _SCSI_UC_DEVICE_USAGE_TYPE SCSI_UC_DEVICE_USAGE_TYPE;
typedef enum _STORAGE_TRACE_NOTIFY_TYPE STORAGE_TRACE_NOTIFY_TYPE;
typedef XVARIABLE_NAME_AND_VALUE SYSENV_VARIABLE_AND_VALUE;
typedef TDI20_CLIENT_INTERFACE_INFO TDI_CLIENT_INTERFACE_INFO;
typedef TDI_REQUEST_KERNEL TDI_REQUEST_KERNEL_LISTEN;
typedef PVOID USBD_CONFIGURATION_HANDLE;
typedef enum _ACDD7173F686B0B8EEB5D0397954DC28 VIDEOENCODER_BITRATE_MODE;
typedef FWMI_NOTIFICATION_CALLBACK *WMI_NOTIFICATION_CALLBACK;
typedef enum _WWAN_PACKET_SERVICE_STATE WWAN_PACKET_SERVICE_STATE;
struct _CACHE_UNINITIALIZE_EVENT {struct _CACHE_UNINITIALIZE_EVENT *Next;KEVENT Event;};
struct _CDB___READ_DVD_STRUCTURE {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char Lun : 3;UCHAR RMDBlockNumber[4];UCHAR LayerNumber;UCHAR Format;UCHAR AllocationLength[2];unsigned char Reserved3 : 6;unsigned char AGID : 2;UCHAR Control;};
struct _CDB___SEND_DVD_STRUCTURE {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char Lun : 3;UCHAR Reserved2[5];UCHAR Format;UCHAR ParameterListLength[2];UCHAR Reserved3;UCHAR Control;};
struct _CDROM_PERFORMANCE_HEADER {UCHAR DataLength[4];unsigned char Except : 1;unsigned char Write : 1;unsigned char Reserved1 : 6;UCHAR Reserved2[3];UCHAR Data[];};
struct _D3DDDI_GAMMA_RAMP_DXGI_1 {D3DDDI_DXGI_RGB Scale;D3DDDI_DXGI_RGB Offset;D3DDDI_DXGI_RGB GammaCurve[1025];};
struct _DISABLE_ERROR_SOURCE_OUT {ULONG Status;};
struct _DOT11_OFFLOAD_CAPABILITY {ULONG uReserved;ULONG uFlags;ULONG uSupportedWEPAlgorithms;ULONG uNumOfReplayWindows;ULONG uMaxWEPKeyMappingLength;ULONG uSupportedAuthAlgorithms;ULONG uMaxAuthKeyMappingLength;};
struct _EHSTOR_DEVICE_PROPERTIES {ULONG StructSize;ULONG BytesPerSector;};
struct _GET_ERROR_SOURCE_INFO_IN {ULONG ErrorSourceId;};
struct _GetBindingCapability_OUT {ULONG HBAStatus;ULONG BindType;};
struct _HAL_PLATFORM_INFORMATION {ULONG PlatformFlags;};
struct _HAL_PROCESSOR_SPEED_INFO {ULONG ProcessorSpeed;};
struct _HDAUDIO_CONVERTER_FORMAT {_HDAUDIO_CONVERTER_FORMAT___268651D303ED1FF2E9E207C3C058BF27 __anonymous0;};
struct _L2CAP_CONFIG_VALUE_RANGE {USHORT Min;USHORT Preferred;USHORT Max;};
struct _MODE_RIGID_GEOMETRY_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PageSavable : 1;UCHAR PageLength;UCHAR NumberOfCylinders[3];UCHAR NumberOfHeads;UCHAR StartWritePrecom[3];UCHAR StartReducedCurrent[3];UCHAR DriveStepRate[2];UCHAR LandZoneCyclinder[3];unsigned char RotationalPositionLock : 2;unsigned char Reserved2 : 6;UCHAR RotationOffset;UCHAR Reserved3;UCHAR RoataionRate[2];UCHAR Reserved4[2];};
struct _MSMouse_ClassInformation {ULONGLONG DeviceId;};
struct _MSNdis_80211_NetworkType {ULONG Ndis80211NetworkType;};
struct _MSNdis_AtmReceiveCellsOk {ULONGLONG NdisAtmReceiveCellsOk;};
struct _MSNdis_PMCapabilityState {ULONG NdisPMCapabilityState;};
struct _MSNdis_TransmitBlockSize {ULONG NdisTransmitBlockSize;};
struct _MSNdis_VendorDescription {CHAR VariableData[1];};
struct _MSV1_0_ENUMUSERS_REQUEST {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;};
struct _NDIS_802_11_VARIABLE_IEs {UCHAR ElementID;UCHAR Length;UCHAR data[1];};
struct _NET_PHYSICAL_LOCATION_LH {ULONG BusNumber;ULONG SlotNumber;ULONG FunctionNumber;};
struct _NOTIFICATION_BUSY_STATUS {unsigned char DeviceBusyEvent : 4;unsigned char Reserved : 4;UCHAR DeviceBusyStatus;UCHAR Time[2];};
struct _PHY_CONFIGURATION_PACKET {unsigned int PCP_Phys_ID : 6;unsigned int PCP_Packet_ID : 2;unsigned int PCP_Gap_Count : 6;unsigned int PCP_Set_Gap_Count : 1;unsigned int PCP_Force_Root : 1;unsigned int PCP_Reserved1 : 8;unsigned int PCP_Reserved2 : 8;ULONG PCP_Inverse;};
struct _QUERY_FILE_LAYOUT_OUTPUT {ULONG FileEntryCount;ULONG FirstFileOffset;ULONG Flags;ULONG Reserved;};
union _SES_PROTOCOL_INFORMATION {SES_SAS_SLOT_INFORMATION SasSlot;};
struct _SID_IDENTIFIER_AUTHORITY {UCHAR Value[6];};
struct _SILO_DRIVER_CAPABILITIES {ULONG StructSize;ULONG Capabilities;ULONG MaxLbaFilterCount;ULONG RedirectedIoctlListCount;ULONG RedirectedIoctlListOffset;};
struct _STOR_DEVICE_CAPABILITIES {USHORT Version;unsigned int DeviceD1 : 1;unsigned int DeviceD2 : 1;unsigned int LockSupported : 1;unsigned int EjectSupported : 1;unsigned int Removable : 1;unsigned int DockDevice : 1;unsigned int UniqueID : 1;unsigned int SilentInstall : 1;unsigned int SurpriseRemovalOK : 1;unsigned int NoDisplayInUI : 1;};
struct _SetGroupPresharedKey_OUT {ULONG Status;};
struct _SetInitiatorNodeName_OUT {ULONG Status;};
struct _SetLoadBalancePolicy_OUT {ULONG Status;};
struct _SetPresharedKeyForId_OUT {ULONG Status;};
struct _USBD_VERSION_INFORMATION {ULONG USBDI_Version;ULONG Supported_USB_Version;};
union _USB_HIGH_SPEED_MAXPACKET {USHORT us;};
struct _USB_INTERFACE_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bInterfaceNumber;UCHAR bAlternateSetting;UCHAR bNumEndpoints;UCHAR bInterfaceClass;UCHAR bInterfaceSubClass;UCHAR bInterfaceProtocol;UCHAR iInterface;};
struct _VIDEO_X86_BIOS_ARGUMENTS {ULONG Eax;ULONG Ebx;ULONG Ecx;ULONG Edx;ULONG Esi;ULONG Edi;ULONG Ebp;};
struct _VPD_ATA_INFORMATION_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR PageLength[2];UCHAR Reserved0[4];UCHAR VendorId[8];UCHAR ProductId[16];UCHAR ProductRevisionLevel[4];UCHAR DeviceSignature[20];UCHAR CommandCode;UCHAR Reserved1[3];UCHAR IdentifyDeviceData[512];};
struct _VPD_SUPPORTED_PAGES_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR Reserved;UCHAR PageLength;UCHAR SupportedPageList[];};
struct _WmiEnumReceiveQueues_OUT {MSNdis_ReceiveQueueInfoArray ReceiveQueueInfoArray;};
struct _WmiSetLinkParameters_OUT {MSNdis_WmiOutputInfo OutputInfo;};
struct _WmiSetPortParameters_OUT {MSNdis_WmiOutputInfo OutputInfo;};
struct tagKS_TVTUNER_CHANGE_INFO {DWORD dwFlags;DWORD dwCountryCode;DWORD dwAnalogVideoStandard;DWORD dwChannel;};
typedef enum _ACPI_GENERIC_ACCESS_SIZE ACPI_GENERIC_ACCESS_SIZE;
typedef enum _ACPI_WPBT_CONTENT_LAYOUT ACPI_WPBT_CONTENT_LAYOUT;
typedef enum _CSV_DOWN_LEVEL_FILE_TYPE CSV_DOWN_LEVEL_FILE_TYPE;
typedef enum _28CB952E2786B5E8C33A5F294DD66395 DEVICE_REGISTRY_PROPERTY;
typedef enum _DXGKMDT_CERTIFICATE_TYPE DXGKMDT_CERTIFICATE_TYPE;
typedef enum _FILTER_INFORMATION_CLASS FILTER_INFORMATION_CLASS;
typedef ULONG FLT_INSTANCE_SETUP_FLAGS;
typedef ULONG FLT_NORMALIZE_NAME_FLAGS;
typedef ULONG FLT_POST_OPERATION_FLAGS;
typedef ULONG FSRTL_ALLOCATE_ECP_FLAGS;
typedef PDXGK_CHILD_STATUS INOUT_PDXGK_CHILD_STATUS;
typedef  D3DKMDT_ADAPTER IN_CONST_D3DKMDT_ADAPTER;
typedef  DXGKARG_ESCAPE *IN_CONST_PDXGKARG_ESCAPE;
typedef PVIDEO_REQUEST_PACKET IN_PVIDEO_REQUEST_PACKET;
typedef enum _AF13F99353F05C737A579C4443E690B4 ISCSI_ADAPTER_EVENT_CODE;
typedef enum _85B8D048AA221EC9AB61032617833AB7 KSDS3D_HRTF_COEFF_FORMAT;
typedef enum _8983102664F2E585A5C75546CC98BFE0 KSMETHOD_BDA_CAS_SERVICE;
typedef enum _8DE99528E372621AB370A19368014C30 KSMETHOD_BDA_CHANGE_SYNC;
typedef enum _8CEE03652AB23D42ED82ECA2E372F7E6 KSMETHOD_BDA_MUX_SERVICE;
typedef enum _D00284FE4FDF23C69D83117CE04F8BE4 KSMETHOD_BDA_TS_SELECTOR;
typedef enum _4033373E8B2FE00DB03F6BA8CD29F686 KSMETHOD_BDA_WMDRM_TUNER;
typedef enum _6DAD80B3977302E5EA3CDCFB6538A59F KSMETHOD_STREAMALLOCATOR;
typedef enum _0B804802F465170881F43A3A4D8457F6 KSPROPERTY_BDA_PIDFILTER;
typedef enum _DF42200E5C7644BA9EFD9248E6DB20BA KSPROPERTY_BDA_PIN_EVENT;
typedef enum _F83EBA9D0BD861E54A6698205AB72334 KSPROPERTY_BIBLIOGRAPHIC;
typedef enum _1737843133A6E4DC3631406BF92A2320 KSPROPERTY_IDS_BDA_TABLE;
typedef enum _F5E9AD53D969E47E21B14A1F6622DC98 KSPROPERTY_OVERLAYUPDATE;
typedef enum _8E304CD910907B07F66BA6A3540081CA KS_PhysicalConnectorType;
typedef CONTRESVQLPCWAVEFORMAT *LPCONTRESVQLPCWAVEFORMAT;
typedef FMTOWNS_SND_WAVEFORMAT *LPFMTOWNS_SND_WAVEFORMAT;
typedef NMS_VBXADPCMWAVEFORMAT *LPNMS_VBXADPCMWAVEFORMAT;
typedef YAMAHA_ADPCMWAVEFORMAT *LPYAMAHA_ADPCMWAVEFORMAT;
typedef enum _MEMORY_CACHING_TYPE_ORIG MEMORY_CACHING_TYPE_ORIG;
typedef enum _MSV1_0_LOGON_SUBMIT_TYPE MSV1_0_LOGON_SUBMIT_TYPE;
typedef enum _NDIS_802_11_NETWORK_TYPE NDIS_802_11_NETWORK_TYPE;
typedef enum _NDIS_802_11_RADIO_STATUS NDIS_802_11_RADIO_STATUS;
typedef enum _NDIS_FDDI_RING_MGT_STATE NDIS_FDDI_RING_MGT_STATE;
typedef NET_IF_MEDIA_CONNECT_STATE NDIS_MEDIA_CONNECT_STATE;
typedef enum _NDIS_NETWORK_CHANGE_TYPE NDIS_NETWORK_CHANGE_TYPE;
typedef enum _NDIS_PM_CAPABILITY_STATE NDIS_PM_CAPABILITY_STATE;
typedef enum _NDIS_RECEIVE_FILTER_TEST NDIS_RECEIVE_FILTER_TEST;
typedef enum _NDIS_RECEIVE_FILTER_TYPE NDIS_RECEIVE_FILTER_TYPE;
typedef enum _NDIS_SHARED_MEMORY_USAGE NDIS_SHARED_MEMORY_USAGE;
typedef enum _9C98972B03F60624FF7DDC28C537A0E5 NLB_PUBLIC_CALLBACK_CODE;
typedef CONTRESVQLPCWAVEFORMAT *NPCONTRESVQLPCWAVEFORMAT;
typedef FMTOWNS_SND_WAVEFORMAT *NPFMTOWNS_SND_WAVEFORMAT;
typedef NMS_VBXADPCMWAVEFORMAT *NPNMS_VBXADPCMWAVEFORMAT;
typedef YAMAHA_ADPCMWAVEFORMAT *NPYAMAHA_ADPCMWAVEFORMAT;
typedef enum _OBJECT_INFORMATION_CLASS OBJECT_INFORMATION_CLASS;
typedef enum _OB_PREOP_CALLBACK_STATUS OB_PREOP_CALLBACK_STATUS;
typedef ACPI_EVAL_OUTPUT_BUFFER *PACPI_EVAL_OUTPUT_BUFFER;
typedef enum _BDCB_STATUS_UPDATE_TYPE *PBDCB_STATUS_UPDATE_TYPE;
typedef  IMAGE_EXPORT_DIRECTORY *PCIMAGE_EXPORT_DIRECTORY;
typedef enum _B0DCED09D1949213E723E7E65C2CEA39 PCI_EXPRESS_ASPM_CONTROL;
typedef enum _A8757D06DED2CCF986301BEFE12C52F6 PCI_EXPRESS_ASPM_SUPPORT;
typedef USHORT *PCO_EXTENDED_WINDOW_SIZE;
typedef CREATIVEADPCMWAVEFORMAT *PCREATIVEADPCMWAVEFORMAT;
typedef enum _DOT11_ASSOCIATION_STATE *PDOT11_ASSOCIATION_STATE;
typedef enum _DOT11_DIVERSITY_SUPPORT *PDOT11_DIVERSITY_SUPPORT;
typedef enum _DOT11_WFD_DISCOVER_TYPE *PDOT11_WFD_DISCOVER_TYPE;
typedef enum _DOT11_WPS_CONFIG_METHOD *PDOT11_WPS_CONFIG_METHOD;
typedef void (*PFNREFERENCEDEVICEOBJECT)(PVOID Context);
typedef FSRTL_COMMON_FCB_HEADER *PFSRTL_COMMON_FCB_HEADER;
typedef enum _IF_ADMINISTRATIVE_STATE *PIF_ADMINISTRATIVE_STATE;
typedef IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;
typedef enum _KSPIN_LOCK_QUEUE_NUMBER *PKSPIN_LOCK_QUEUE_NUMBER;
typedef enum _NDIS_802_11_STATUS_TYPE *PNDIS_802_11_STATUS_TYPE;
typedef enum _NDIS_DEVICE_POWER_STATE *PNDIS_DEVICE_POWER_STATE;
typedef NET_IF_MEDIA_DUPLEX_STATE *PNDIS_MEDIA_DUPLEX_STATE;
typedef enum _NDIS_PORT_CONTROL_STATE *PNDIS_PORT_CONTROL_STATE;
typedef enum _NDIS_RECEIVE_QUEUE_TYPE *PNDIS_RECEIVE_QUEUE_TYPE;
typedef enum _NDIS_WAN_MEDIUM_SUBTYPE *PNDIS_WAN_MEDIUM_SUBTYPE;
typedef enum _NET_IF_RCV_ADDRESS_TYPE *PNET_IF_RCV_ADDRESS_TYPE;
typedef enum _90C5F04E0DCFA05FF87E9259EA488940 POWER_STATE_HANDLER_TYPE;
typedef enum _51E2EEFCC61EF61BA570BB294F739445 POWER_USER_PRESENCE_TYPE;
typedef KSTOPOLOGY_CONNECTION *PPCCONNECTION_DESCRIPTOR;
typedef enum _PCMCIA_CONTROLLER_CLASS *PPCMCIA_CONTROLLER_CLASS;
typedef POOLED_USAGE_AND_LIMITS *PPOOLED_USAGE_AND_LIMITS;
typedef enum _PO_SLEEP_DISABLE_REASON *PPO_SLEEP_DISABLE_REASON;
typedef void (*PRELEASE_FROM_LAZY_WRITE)(PVOID Context);
typedef void (*PRELEASE_FROM_READ_AHEAD)(PVOID Context);
typedef void ( *PRX_WORKERTHREAD_ROUTINE)(PVOID Context);
typedef SECTION_OBJECT_POINTERS *PSECTION_OBJECT_POINTERS;
typedef enum _SECURITY_OPERATION_CODE *PSECURITY_OPERATION_CODE;
typedef SMB_TRANSACT_NAMED_PIPE *PSMB_TRANSACT_NAMED_PIPE;
typedef enum _STORAGE_IDENTIFIER_TYPE *PSTORAGE_IDENTIFIER_TYPE;
typedef enum _STOR_DEVICE_POWER_STATE *PSTOR_DEVICE_POWER_STATE;
typedef TDI_REQUEST_SET_INFORMATION *PTDI_REQ_SET_INFORMATION;
typedef enum _TOKEN_INFORMATION_CLASS *PTOKEN_INFORMATION_CLASS;
typedef void (*PVIDEO_WAIT_VSYNC_ACTIVE)(PVOID HwDeviceExtension);
typedef enum _WHEA_ERROR_SOURCE_STATE *PWHEA_ERROR_SOURCE_STATE;
typedef enum _WMIENABLEDISABLECONTROL *PWMIENABLEDISABLECONTROL;
typedef enum _835A3F9810D32B04FEBEAA2BCD104598 *PWSK_CONTROL_SOCKET_TYPE;
typedef enum _WWAN_ACTIVATION_COMMAND *PWWAN_ACTIVATION_COMMAND;
typedef enum _WWAN_USSD_SESSION_STATE *PWWAN_USSD_SESSION_STATE;
typedef USHORT RDBSS_STORAGE_TYPE_CODES;
typedef void  RTL_GENERIC_FREE_ROUTINE(struct _RTL_GENERIC_TABLE *Table, PVOID Buffer);
typedef enum _RX_SCAVENGER_ENTRY_STATE RX_SCAVENGER_ENTRY_STATE;
typedef enum _SCSI_UNIT_CONTROL_STATUS SCSI_UNIT_CONTROL_STATUS;
typedef enum _106423C0A7104421C1086EAB95FB5639 SFFDISK_PARTITION_ACCESS;
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];
typedef enum _SOCKET_SECURITY_PROTOCOL SOCKET_SECURITY_PROTOCOL;
typedef enum _STORAGE_ASSOCIATION_TYPE STORAGE_ASSOCIATION_TYPE;
typedef TDI_REQUEST_CONNECT TDI_REQUEST_USER_CONNECT;
struct _API_SET_NAMESPACE_ENTRY {ULONG NameOffset;ULONG NameLength;ULONG DataOffset;};
struct _BDA_TEMPLATE_CONNECTION {ULONG FromNodeType;ULONG FromNodePinType;ULONG ToNodeType;ULONG ToNodePinType;};
struct _CDB___ATA_PASSTHROUGH12 {UCHAR OperationCode;unsigned char Reserved1 : 1;unsigned char Protocol : 4;unsigned char MultipleCount : 3;unsigned char TLength : 2;unsigned char ByteBlock : 1;unsigned char TDir : 1;unsigned char Reserved2 : 1;unsigned char CkCond : 1;unsigned char Offline : 2;UCHAR Features;UCHAR SectorCount;UCHAR LbaLow;UCHAR LbaMid;UCHAR LbaHigh;UCHAR Device;UCHAR Command;UCHAR Reserved3;UCHAR Control;};
struct _CDB___ATA_PASSTHROUGH16 {UCHAR OperationCode;unsigned char Extend : 1;unsigned char Protocol : 4;unsigned char MultipleCount : 3;unsigned char TLength : 2;unsigned char ByteBlock : 1;unsigned char TDir : 1;unsigned char Reserved1 : 1;unsigned char CkCond : 1;unsigned char Offline : 2;UCHAR Features15_8;UCHAR Features7_0;UCHAR SectorCount15_8;UCHAR SectorCount7_0;UCHAR LbaLow15_8;UCHAR LbaLow7_0;UCHAR LbaMid15_8;UCHAR LbaMid7_0;UCHAR LbaHigh15_8;UCHAR LbaHigh7_0;UCHAR Device;UCHAR Command;UCHAR Control;};
struct _CDB___CDB6READWRITETAPE {UCHAR OperationCode;unsigned char VendorSpecific : 5;unsigned char Reserved : 3;UCHAR TransferLenMSB;UCHAR TransferLen;UCHAR TransferLenLSB;unsigned char Link : 1;unsigned char Flag : 1;unsigned char Reserved1 : 4;unsigned char VendorUnique : 2;};
struct _CDB___GET_CONFIGURATION {UCHAR OperationCode;unsigned char RequestType : 2;unsigned char Reserved1 : 6;UCHAR StartingFeature[2];UCHAR Reserved2[3];UCHAR AllocationLength[2];UCHAR Control;};
struct _CDROM_STREAMING_CONTROL {STREAMING_CONTROL_REQUEST_TYPE RequestType;};
struct _CDROM_SUB_Q_DATA_FORMAT {UCHAR Format;UCHAR Track;};
struct _CDVD_CHALLENGE_KEY_DATA {UCHAR ChallengeKeyValue[10];UCHAR Reserved[2];};
struct _CSV_QUERY_FILE_REVISION {LONGLONG FileId;LONGLONG FileRevision[3];};
struct _CreateVirtualPortEx_OUT {ULONG Status;};
struct _D3DKMDT_FREQUENCY_RANGE {D3DDDI_RATIONAL MinVSyncFreq;D3DDDI_RATIONAL MaxVSyncFreq;D3DDDI_RATIONAL MinHSyncFreq;D3DDDI_RATIONAL MaxHSyncFreq;};
struct _D3DKMDT_GDISURFACEFLAGS {UINT Value;};
struct _DISABLE_ERROR_SOURCE_IN {ULONG ErrorSourceId;};
struct _DOT11_PER_MSDU_COUNTERS {ULONG uTransmittedFragmentCount;ULONG uRetryCount;ULONG uRTSSuccessCount;ULONG uRTSFailureCount;ULONG uACKFailureCount;};
struct _ENABLE_ERROR_SOURCE_OUT {ULONG Status;};
struct _GetBindingCapability_IN {UCHAR PortWWN[8];};
struct _GetPathConfiguration_IN {ULONGLONG PathID;};
struct _MODE_FLEXIBLE_DISK_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PageSavable : 1;UCHAR PageLength;UCHAR TransferRate[2];UCHAR NumberOfHeads;UCHAR SectorsPerTrack;UCHAR BytesPerSector[2];UCHAR NumberOfCylinders[2];UCHAR StartWritePrecom[2];UCHAR StartReducedCurrent[2];UCHAR StepRate[2];UCHAR StepPluseWidth;UCHAR HeadSettleDelay[2];UCHAR MotorOnDelay;UCHAR MotorOffDelay;unsigned char Reserved2 : 5;unsigned char MotorOnAsserted : 1;unsigned char StartSectorNumber : 1;unsigned char TrueReadySignal : 1;unsigned char StepPlusePerCyclynder : 4;unsigned char Reserved3 : 4;UCHAR WriteCompenstation;UCHAR HeadLoadDelay;UCHAR HeadUnloadDelay;unsigned char Pin2Usage : 4;unsigned char Pin34Usage : 4;unsigned char Pin1Usage : 4;unsigned char Pin4Usage : 4;UCHAR MediumRotationRate[2];UCHAR Reserved4[2];};
struct _MODE_PARAMETER_HEADER10 {UCHAR ModeDataLength[2];UCHAR MediumType;UCHAR DeviceSpecificParameter;UCHAR Reserved[2];UCHAR BlockDescriptorLength[2];};
struct _MODE_READ_RECOVERY_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PSBit : 1;UCHAR PageLength;unsigned char DCRBit : 1;unsigned char DTEBit : 1;unsigned char PERBit : 1;unsigned char Reserved2 : 1;unsigned char RCBit : 1;unsigned char TBBit : 1;unsigned char Reserved3 : 2;UCHAR ReadRetryCount;UCHAR Reserved4[4];};
struct _MOUNTMGR_SET_AUTO_MOUNT {MOUNTMGR_AUTO_MOUNT_STATE NewState;};
struct _MOUSE_UNIT_ID_PARAMETER {USHORT UnitId;};
struct _MSNdis_CoHardwareStatus {ULONG NdisCoHardwareStatus;};
struct _MSNdis_CoMediaSupported {ULONG NumberElements;ULONG NdisCoMediaSupported[1];};
struct _MSNdis_CoTransmitPdusOk {ULONGLONG NdisCoTransmitPdusOk;};
struct _MSNdis_CurrentLookahead {ULONG NdisCurrentLookahead;};
struct _MSNdis_EnumerateAdapter {CHAR VariableData[1];};
struct _MSNdis_MaximumFrameSize {ULONG NdisMaximumFrameSize;};
struct _MSNdis_MaximumLookahead {ULONG NdisMaximumLookahead;};
struct _MSNdis_MaximumTotalSize {ULONG NdisMaximumTotalSize;};
struct _MSNdis_NetworkLinkSpeed {ULONG Outbound;ULONG Inbound;};
struct _MSNdis_ReceiveBlockSize {ULONG NdisReceiveBlockSize;};
struct _OBJECT_NAME_INFORMATION {UNICODE_STRING Name;};
struct _OFFLOAD_IPSEC_DELETE_SA {HANDLE OffloadHandle;};
struct _PCI_CAPABILITIES_HEADER {UCHAR CapabilityID;UCHAR Next;};
struct _RemoveVirtualPortEx_OUT {ULONG Status;};
struct _SECTION_OBJECT_POINTERS {PVOID DataSectionObject;PVOID SharedCacheMap;PVOID ImageSectionObject;};
struct _SetCHAPSharedSecret_OUT {ULONG Status;};
struct _SetGenerationalGuid_OUT {ULONG Status;};
struct _SetLoadBalancePolicy_IN {ISCSI_Supported_LB_Policies LoadBalancePolicies;};
struct _TDI_REQUEST_KERNEL_SEND {ULONG SendLength;ULONG SendFlags;};
struct _TRANSPORT_HEADER_OFFSET {USHORT ProtocolType;USHORT HeaderOffset;};
struct _VPD_IDENTIFICATION_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR Reserved;UCHAR PageLength;UCHAR Descriptors[];};
struct _WWAN_AUTH_AKA_CHALLENGE {UCHAR Rand[16];UCHAR Autn[16];};
struct _WWAN_SERVICE_ACTIVATION {ULONG uVendorSpecificBufferSize;};
struct _WmiMonitorColorXYZinCIE {USHORT X;USHORT Y;};
struct csimaadpcmwaveformat_tag {WAVEFORMATEX wfx;};
typedef void ACPI_OP_REGION_CALLBACK(PVOID Context);
typedef enum _E04FEB4585E773A1798F0515E7916701 ATA_ADDRESS_TRANSLATION;
typedef enum _BDCB_STATUS_UPDATE_TYPE BDCB_STATUS_UPDATE_TYPE;
typedef enum _EC48461D6F8CB906345649547B79F0B9 CLASS_POWER_DOWN_STATE2;
typedef enum _2EA5FED34BB00BFE47ECF8AA0811C9A6 CLASS_POWER_DOWN_STATE3;
typedef CLS_ARCHIVE_DESCRIPTOR CLFS_ARCHIVE_DESCRIPTOR;
typedef void (*CLFS_BLOCK_DEALLOCATION)(PVOID pvBuffer, PVOID pvUserContext);
typedef USHORT CO_EXTENDED_WINDOW_SIZE;
typedef enum _D3DKMDT_MODE_PREFERENCE D3DKMDT_MODE_PREFERENCE;
typedef enum _DOT11_ASSOCIATION_STATE DOT11_ASSOCIATION_STATE;
typedef enum _DOT11_DIVERSITY_SUPPORT DOT11_DIVERSITY_SUPPORT;
typedef enum _DOT11_POWER_MODE_REASON DOT11_POWER_MODE_REASON;
struct DOT11_PRIVACY_EXEMPTION {USHORT usEtherType;USHORT usExemptionActionType;USHORT usExemptionPacketType;};
typedef enum _DOT11_WFD_DISCOVER_TYPE DOT11_WFD_DISCOVER_TYPE;
typedef enum _DOT11_WPS_CONFIG_METHOD DOT11_WPS_CONFIG_METHOD;
typedef enum _DXGK_RENDERKM_OPERATION DXGK_RENDERKM_OPERATION;
typedef ULONG FLT_CALLBACK_DATA_FLAGS;
typedef ULONG FLT_FILTER_UNLOAD_FLAGS;
typedef enum _FSRTL_COMPARISON_RESULT FSRTL_COMPARISON_RESULT;
typedef enum _HIDP_KEYBOARD_DIRECTION HIDP_KEYBOARD_DIRECTION;
typedef void HW_COMPLETE_SERVICE_IRP(PVOID DeviceExtension);
typedef enum _IF_ADMINISTRATIVE_STATE IF_ADMINISTRATIVE_STATE;
typedef enum _6E893538BC02018E8F19122424D609DA IGMP_MAX_RESP_CODE_TYPE;
typedef enum _INTERNAL_IF_OPER_STATUS INTERNAL_IF_OPER_STATUS;
typedef  D3DKMDT_HVIDPN IN_CONST_D3DKMDT_HVIDPN;
typedef  PDEVICE_OBJECT IN_CONST_PDEVICE_OBJECT;
typedef  DXGKARG_PATCH *IN_CONST_PDXGKARG_PATCH;
typedef enum _B3236B54C110CBB1085E590D1151299D KSCOMPLETION_INVOCATION;
typedef enum _6B2401DF69FC0CC161171E2CBCDDC1C6 KSEVENT_LOOPEDSTREAMING;
typedef enum _861DD39FC4CEDEF9FD3B0ECFEB4EA61F KSEVENT_STREAMALLOCATOR;
typedef enum _6A4F9FD289D1A939E2A70058613B4F06 KSIRP_REMOVAL_OPERATION;
typedef enum _D7E4C26A6426AEE0A09437799E727C87 KSMICARRAY_MICARRAYTYPE;
typedef enum _KSPIN_LOCK_QUEUE_NUMBER KSPIN_LOCK_QUEUE_NUMBER;
typedef enum _FA11D0DE19A9089B50BC241520DAD748 KSPROPERTY_BDA_CA_EVENT;
typedef enum _6F5958920F6A8F401B50E2A1B2D54572 KSPROPERTY_BDA_LNB_INFO;
typedef enum _FC23A50C1CCE287E75E010175501A7BF KSPROPERTY_BDA_TOPOLOGY;
typedef enum _0A77555B03865B677ABEDAD45C36FB86 KSPROPERTY_MEDIASEEKING;
typedef enum _B3A84405D78147E904BCCE08E14749CA KSPROPERTY_TOPOLOGYNODE;
typedef enum _32421077C2010E274338AC2C523E1512 KS_SEEKING_CAPABILITIES;
typedef enum _L2CAP_DISCONNECT_REASON L2CAP_DISCONNECT_REASON;
typedef CONTRESCR10WAVEFORMAT *LPCONTRESCR10WAVEFORMAT;
typedef SIERRAADPCMWAVEFORMAT *LPSIERRAADPCMWAVEFORMAT;
typedef UCHAR NDIS_802_11_MAC_ADDRESS[6];
typedef UCHAR NDIS_802_11_PMKID_VALUE[16];
typedef enum _NDIS_802_11_STATUS_TYPE NDIS_802_11_STATUS_TYPE;
typedef enum _NDIS_DEVICE_POWER_STATE NDIS_DEVICE_POWER_STATE;
typedef NET_IF_MEDIA_DUPLEX_STATE NDIS_MEDIA_DUPLEX_STATE;
typedef enum _NDIS_PORT_CONTROL_STATE NDIS_PORT_CONTROL_STATE;
typedef enum _NDIS_RECEIVE_QUEUE_TYPE NDIS_RECEIVE_QUEUE_TYPE;
typedef enum _NDIS_WAN_MEDIUM_SUBTYPE NDIS_WAN_MEDIUM_SUBTYPE;
typedef void (*NDK_FN_CLOSE_COMPLETION)(PVOID Context);
typedef enum _NET_IF_RCV_ADDRESS_TYPE NET_IF_RCV_ADDRESS_TYPE;
typedef CONTRESCR10WAVEFORMAT *NPCONTRESCR10WAVEFORMAT;
typedef SIERRAADPCMWAVEFORMAT *NPSIERRAADPCMWAVEFORMAT;
typedef KSTOPOLOGY_CONNECTION PCCONNECTION_DESCRIPTOR;
typedef void (*PCC_POST_DEFERRED_WRITE)(PVOID Context1, PVOID Context2);
typedef enum _CDROM_PERFORMANCE_TYPE *PCDROM_PERFORMANCE_TYPE;
typedef  IMAGE_TLS_DIRECTORY32 *PCIMAGE_TLS_DIRECTORY32;
typedef  IMAGE_TLS_DIRECTORY64 *PCIMAGE_TLS_DIRECTORY64;
typedef enum _C6D353107DE03E6ED1C3CE95F019C718 PCI_EXPRESS_DEVICE_TYPE;
typedef enum _1256F69D5966409158414A6E5C8CAF36 PCI_EXPRESS_POWER_STATE;
typedef enum _PCMCIA_CONTROLLER_CLASS PCMCIA_CONTROLLER_CLASS;
typedef CONTRESVQLPCWAVEFORMAT *PCONTRESVQLPCWAVEFORMAT;
typedef enum _DOT11_CIPHER_ALGORITHM *PDOT11_CIPHER_ALGORITHM;
typedef enum _DOT11_HOP_ALGO_ADOPTED *PDOT11_HOP_ALGO_ADOPTED;
typedef enum _DXGK_CHILD_DEVICE_TYPE *PDXGK_CHILD_DEVICE_TYPE;
typedef enum _DXGK_CHILD_STATUS_TYPE *PDXGK_CHILD_STATUS_TYPE;
typedef enum _FILE_INFORMATION_CLASS *PFILE_INFORMATION_CLASS;
typedef FMTOWNS_SND_WAVEFORMAT *PFMTOWNS_SND_WAVEFORMAT;
typedef FSRTL_AUXILIARY_BUFFER *PFSRTL_AUXILIARY_BUFFER;
typedef void ( *PHW_QUERY_CLOCK_ROUTINE)(PHW_TIME_CONTEXT TimeContext);
typedef enum _A929C63020887A483B35F70A5EFC96A1 *PICMP4_TIME_EXCEED_CODE;
typedef enum _37D474810C204F88D5E7D0AA3911B83F *PISCSI_ENCRYPTION_TYPES;
typedef BOOL *PKSPROPERTY_COMPOSIT_ON;
typedef LOCAL_X2APIC_NMISOURCE *PLOCAL_X2APIC_NMISOURCE;
typedef UCHAR *PMRX_PURGE_RELATIONSHIP;
typedef UCHAR *PMRX_PURGE_SYNCLOCATION;
typedef enum _NDIS_802_11_POWER_MODE *PNDIS_802_11_POWER_MODE;
typedef enum _NDIS_802_11_WEP_STATUS *PNDIS_802_11_WEP_STATUS;
typedef enum _NDIS_IPV4_HEADER_FIELD *PNDIS_IPV4_HEADER_FIELD;
typedef enum _NDIS_IPV6_HEADER_FIELD *PNDIS_IPV6_HEADER_FIELD;
typedef ULONG *PNDIS_RECEIVE_FILTER_ID;
typedef NDIS_WAN_COMPRESS_INFO *PNDIS_WAN_COMPRESS_INFO;
typedef enum _NDIS_WAN_HEADER_FORMAT *PNDIS_WAN_HEADER_FORMAT;
typedef enum _NET_DEVICE_POWER_STATE *PNET_DEVICE_POWER_STATE;
typedef enum _NET_IF_CONNECTION_TYPE *PNET_IF_CONNECTION_TYPE;
typedef NMS_VBXADPCMWAVEFORMAT *PNMS_VBXADPCMWAVEFORMAT;
typedef enum _DF9DC3CA715243000FDF1AF65F7091A6 POWER_INFORMATION_LEVEL;
typedef enum _PO_SLEEP_DISABLE_REASON PO_SLEEP_DISABLE_REASON;
typedef enum _PCI_HARDWARE_INTERFACE *PPCI_HARDWARE_INTERFACE;
typedef enum _SCSI_NOTIFICATION_TYPE *PSCSI_NOTIFICATION_TYPE;
typedef enum _SCSI_UNIT_CONTROL_TYPE *PSCSI_UNIT_CONTROL_TYPE;
typedef enum _STORPORT_FUNCTION_CODE *PSTORPORT_FUNCTION_CODE;
typedef enum _SYSCTL_IRP_DISPOSITION *PSYSCTL_IRP_DISPOSITION;
typedef enum _USER_ACTIVITY_PRESENCE *PUSER_ACTIVITY_PRESENCE;
typedef enum _VIDEO_DEVICE_DATA_TYPE *PVIDEO_DEVICE_DATA_TYPE;
typedef enum _WHEA_ERROR_SOURCE_TYPE *PWHEA_ERROR_SOURCE_TYPE;
typedef enum _WWAN_ASYNC_GETSET_TYPE *PWWAN_ASYNC_GETSET_TYPE;
typedef enum _WWAN_SMS_CDMA_ENCODING *PWWAN_SMS_CDMA_ENCODING;
typedef enum _WWAN_USSD_REQUEST_TYPE *PWWAN_USSD_REQUEST_TYPE;
typedef YAMAHA_ADPCMWAVEFORMAT *PYAMAHA_ADPCMWAVEFORMAT;
typedef void  RTL_FREE_STRING_ROUTINE(PVOID Buffer);
typedef enum _43CF01C67384A91F7B708EDE09A1C266 RX_CONTEXT_CREATE_FLAGS;
typedef enum _SECURITY_OPERATION_CODE SECURITY_OPERATION_CODE;
struct SMHBA_LibraryAttributes {char LibPath[256];char VName[256];char VVersion[256];struct SMHBA_LibraryAttributes___91D40CC418AE3D350413FD3CA2834C70 build_date;};
typedef enum _STORAGE_IDENTIFIER_TYPE STORAGE_IDENTIFIER_TYPE;
typedef enum _STOR_DEVICE_POWER_STATE STOR_DEVICE_POWER_STATE;
typedef enum _TAPE_DRIVE_PROBLEM_TYPE TAPE_DRIVE_PROBLEM_TYPE;
typedef void (*TDI_ADD_ADDRESS_HANDLER)(PTA_ADDRESS Address);
typedef void (*TDI_DEL_ADDRESS_HANDLER)(PTA_ADDRESS Address);
typedef TDI_REQUEST_SET_INFORMATION TDI_REQ_SET_INFORMATION;
typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;
typedef enum _TRACE_INFORMATION_CLASS TRACE_INFORMATION_CLASS;
typedef enum _C3305B6EE9A249E58E7AD6D1E51C81B9 USBCAMD_CamControlFlags;
typedef enum _USBPORT_CREATEDEV_ERROR USBPORT_CREATEDEV_ERROR;
typedef enum _WHEA_ERROR_SOURCE_STATE WHEA_ERROR_SOURCE_STATE;
typedef enum _WMIENABLEDISABLECONTROL WMIENABLEDISABLECONTROL;
typedef enum _835A3F9810D32B04FEBEAA2BCD104598 WSK_CONTROL_SOCKET_TYPE;
typedef enum _WWAN_ACTIVATION_COMMAND WWAN_ACTIVATION_COMMAND;
typedef enum _WWAN_USSD_SESSION_STATE WWAN_USSD_SESSION_STATE;
struct _ATM_VC_RATES_SUPPORTED {ULONG MinCellRate;ULONG MaxCellRate;};
struct _AVC_SUBUNIT_INFO_BLOCK {UCHAR Info[32];};
struct _BDA_TEMPLATE_PIN_JOINT {ULONG uliTemplateConnection;ULONG ulcInstancesMax;};
struct _CDB___PLAY_CD______LBA {UCHAR StartingBlockAddress[4];UCHAR PlayLength[4];};
struct _CDB___PLAY_CD______MSF {UCHAR Reserved1;UCHAR StartingM;UCHAR StartingS;UCHAR StartingF;UCHAR EndingM;UCHAR EndingS;UCHAR EndingF;UCHAR Reserved2;};
struct _CDB___WRITE_TAPE_MARKS {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char WriteSetMarks : 1;unsigned char Reserved : 3;unsigned char LogicalUnitNumber : 3;UCHAR TransferLength[3];UCHAR Control;};
struct _CM_MONITOR_DEVICE_DATA {USHORT Version;USHORT Revision;USHORT HorizontalScreenSize;USHORT VerticalScreenSize;USHORT HorizontalResolution;USHORT VerticalResolution;USHORT HorizontalDisplayTimeLow;USHORT HorizontalDisplayTime;USHORT HorizontalDisplayTimeHigh;USHORT HorizontalBackPorchLow;USHORT HorizontalBackPorch;USHORT HorizontalBackPorchHigh;USHORT HorizontalFrontPorchLow;USHORT HorizontalFrontPorch;USHORT HorizontalFrontPorchHigh;USHORT HorizontalSyncLow;USHORT HorizontalSync;USHORT HorizontalSyncHigh;USHORT VerticalBackPorchLow;USHORT VerticalBackPorch;USHORT VerticalBackPorchHigh;USHORT VerticalFrontPorchLow;USHORT VerticalFrontPorch;USHORT VerticalFrontPorchHigh;USHORT VerticalSyncLow;USHORT VerticalSync;USHORT VerticalSyncHigh;};
struct _DISK_CONTROLLER_NUMBER {ULONG ControllerNumber;ULONG DiskNumber;};
struct _DOT11_REG_DOMAIN_VALUE {ULONG uRegDomainsSupportIndex;ULONG uRegDomainsSupportValue;};
struct _DXGK_GPUENGINETOPOLOGY {UINT NbAsymetricProcessingNodes;UINT Reserved[64];};
struct _ENABLE_ERROR_SOURCE_IN {ULONG ErrorSourceId;};
struct _FILE_LEVEL_TRIM_OUTPUT {ULONG NumRangesProcessed;};
struct _FILE_PIPE_EVENT_BUFFER {ULONG NamedPipeState;ULONG EntryType;ULONG ByteCount;ULONG KeyValue;ULONG NumberRequests;};
struct _GET_LENGTH_INFORMATION {LARGE_INTEGER Length;};
struct _GP_LOG_PAGE_DESCRIPTOR {USHORT LogAddress;USHORT LogSectors;};
struct _ImageArchitectureEntry {ULONG FixupInstRVA;ULONG NewInst;};
struct _MODE_CAPABILITIES_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 2;UCHAR PageLength;UCHAR Reserved2[2];unsigned char RO : 1;unsigned char Reserved3 : 4;unsigned char SPREV : 1;unsigned char Reserved4 : 2;unsigned char Reserved5 : 3;unsigned char EFMT : 1;unsigned char Reserved6 : 1;unsigned char QFA : 1;unsigned char Reserved7 : 2;unsigned char LOCK : 1;unsigned char LOCKED : 1;unsigned char PREVENT : 1;unsigned char UNLOAD : 1;unsigned char Reserved8 : 2;unsigned char ECC : 1;unsigned char CMPRS : 1;unsigned char Reserved9 : 1;unsigned char BLK512 : 1;unsigned char BLK1024 : 1;unsigned char Reserved10 : 4;unsigned char SLOWB : 1;UCHAR MaximumSpeedSupported[2];UCHAR MaximumStoredDefectedListEntries[2];UCHAR ContinuousTransferLimit[2];UCHAR CurrentSpeedSelected[2];UCHAR BufferSize[2];UCHAR Reserved11[2];};
struct _MPEG2_TRANSPORT_STRIDE {DWORD dwOffset;DWORD dwPacketLength;DWORD dwStride;};
struct _MSFC_HBAPortStatistics {LONGLONG SecondsSinceLastReset;LONGLONG TxFrames;LONGLONG TxWords;LONGLONG RxFrames;LONGLONG RxWords;LONGLONG LIPCount;LONGLONG NOSCount;LONGLONG ErrorFrames;LONGLONG DumpedFrames;LONGLONG LinkFailureCount;LONGLONG LossOfSyncCount;LONGLONG LossOfSignalCount;LONGLONG PrimitiveSeqProtocolErrCount;LONGLONG InvalidTxWordCount;LONGLONG InvalidCRCCount;};
struct _MSNdis_80211_DataRates {UCHAR Ndis80211DataRate[8];};
struct _MSNdis_80211_PowerMode {ULONG Ndis80211PowerMode;};
struct _MSNdis_80211_RemoveWEP {ULONG Ndis80211KeyIndex;};
struct _MSNdis_80211_WEPStatus {ULONG Ndis80211WEPStatus;};
struct _MSNdis_AtmMaxActiveVcs {ULONG NdisAtmMaxActiveVcs;};
struct _MSNdis_CoDriverVersion {USHORT NdisCoDriverVersion;};
struct _MSNdis_CoReceivePdusOk {ULONGLONG NdisCoReceivePdusOk;};
struct _MSNdis_FddiFrameErrors {ULONG NdisFddiFrameErrors;};
struct _MSNdis_FddiLctFailures {ULONG NdisFddiLctFailures;};
struct _MSNdis_ReceiveNoBuffer {ULONG NdisReceiveNoBuffer;};
struct _MSiSCSI_NICPerformance {ULONG BytesTransmitted;ULONG BytesReceived;ULONG PDUTransmitted;ULONG PDUReceived;};
struct _NDIS_PM_PACKET_PATTERN {ULONG Priority;ULONG Reserved;ULONG MaskSize;ULONG PatternOffset;ULONG PatternSize;ULONG PatternFlags;};
struct _NDIS_WAN_PROTOCOL_CAPS {ULONG Flags;ULONG Reserved;};
struct _PCW_COUNTER_DESCRIPTOR {USHORT Id;USHORT StructIndex;USHORT Offset;USHORT Size;};
struct _PERFORMANCE_DESCRIPTOR {unsigned char RandomAccess : 1;unsigned char Exact : 1;unsigned char RestoreDefaults : 1;unsigned char WriteRotationControl : 2;unsigned char Reserved1 : 3;UCHAR Reserved[3];UCHAR StartLba[4];UCHAR EndLba[4];UCHAR ReadSize[4];UCHAR ReadTime[4];UCHAR WriteSize[4];UCHAR WriteTime[4];};
struct _POWER_SESSION_TIMEOUTS {ULONG InputTimeout;ULONG DisplayTimeout;};
struct _PO_WAKE_SOURCE_HISTORY {ULONG Count;ULONG Offsets[1];};
struct _RETRIEVAL_POINTER_BASE {LARGE_INTEGER FileAreaOffset;};
struct _RKF_BYPASS_ECP_CONTEXT {INT Reserved;INT Version;};
struct _RemoveRADIUSServer_OUT {ULONG Status;};
struct _RemoveVirtualPortEx_IN {UCHAR WWPN[8];};
struct _SES_CONTROL_DESCRIPTOR {unsigned char Reserved : 4;unsigned char ResetSwap : 1;unsigned char Disable : 1;unsigned char PredictFailure : 1;unsigned char Select : 1;UCHAR Reserved1;unsigned char Reserved2 : 1;unsigned char RequestIdentify : 1;unsigned char RequestRemove : 1;unsigned char RequestInsert : 1;unsigned char RequestMissing : 1;unsigned char Reserved3 : 1;unsigned char DoNotRemove : 1;unsigned char RequestActive : 1;unsigned char Reserved4 : 2;unsigned char EnableBypassB : 1;unsigned char EnableBypassA : 1;unsigned char DeviceOff : 1;unsigned char RequestFault : 1;unsigned char Reserved5 : 2;};
struct _SLOT_TABLE_INFORMATION {unsigned char DiscChanged : 1;unsigned char Reserved : 6;unsigned char DiscPresent : 1;UCHAR Reserved2[3];};
struct _SetGenerationalGuid_IN {UCHAR GenerationalGuid[16];};
struct _SetPersistentEntry_OUT {ULONG HBAStatus;};
struct _TOKEN_MANDATORY_POLICY {ULONG Policy;};
struct _TXFS_LIST_TRANSACTIONS {ULONGLONG NumberOfTransactions;ULONGLONG BufferSizeRequired;};
struct _UNMAP_BLOCK_DESCRIPTOR {UCHAR StartingLba[8];UCHAR LbaCount[4];UCHAR Reserved[4];};
struct _VIDEO_MODE_INFORMATION {ULONG Length;ULONG ModeIndex;ULONG VisScreenWidth;ULONG VisScreenHeight;ULONG ScreenStride;ULONG NumberOfPlanes;ULONG BitsPerPlane;ULONG Frequency;ULONG XMillimeter;ULONG YMillimeter;ULONG NumberRedBits;ULONG NumberGreenBits;ULONG NumberBlueBits;ULONG RedMask;ULONG GreenMask;ULONG BlueMask;ULONG AttributeFlags;ULONG VideoMemoryBitmapWidth;ULONG VideoMemoryBitmapHeight;ULONG DriverSpecificAttributeFlags;};
struct _VIDEO_POINTER_POSITION {SHORT Column;SHORT Row;};
struct _VIDEO_POWER_MANAGEMENT {ULONG Length;ULONG DPMSVersion;ULONG PowerState;};
struct _VPD_SERIAL_NUMBER_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR Reserved;UCHAR PageLength;UCHAR SerialNumber[];};
struct _WMI_CHANGER_PARAMETERS {ULONG NumberOfSlots;ULONG NumberOfDrives;ULONG NumberOfIEPorts;ULONG NumberOfTransports;ULONG NumberOfDoors;ULONG NumberOfCleanerSlots;ULONG MagazineSize;};
struct _WMI_TAPE_SYMBOLIC_NAME {CHAR VariableData[1];};
struct _WRITE_USN_REASON_INPUT {ULONG Flags;ULONG UsnReasonToWrite;};
struct _WmiSetALSBrightness_IN {UCHAR Brightness;};
struct _tagKSJACK_DESCRIPTION2 {DWORD DeviceStateInfo;DWORD JackCapabilities;};
typedef void ( *pHalReferenceBusHandler)(PBUS_HANDLER BusHandler);
typedef enum _ACPI_WPBT_CONTENT_TYPE ACPI_WPBT_CONTENT_TYPE;
typedef enum _ARBITER_REQUEST_SOURCE ARBITER_REQUEST_SOURCE;
typedef enum _CDROM_PERFORMANCE_TYPE CDROM_PERFORMANCE_TYPE;
typedef ULONG (*CHANGER_EXTENSION_SIZE)(void);
typedef enum _9EF483498AA047CA29C8FBCACF32A50A CLASS_FUNCTION_SUPPORT;
typedef enum _F3F03CD4671992E876D53816337456CB CLASS_POWER_DOWN_STATE;
typedef enum _D3DDDIMULTISAMPLE_TYPE D3DDDIMULTISAMPLE_TYPE;
typedef ULONGLONG D3DGPU_VIRTUAL_ADDRESS;
typedef enum _D3DKMDT_GDISURFACETYPE D3DKMDT_GDISURFACETYPE;
typedef enum _DOT11_CIPHER_ALGORITHM DOT11_CIPHER_ALGORITHM;
typedef enum _DOT11_HOP_ALGO_ADOPTED DOT11_HOP_ALGO_ADOPTED;
typedef enum _DXGK_CHILD_DEVICE_TYPE DXGK_CHILD_DEVICE_TYPE;
typedef enum _DXGK_CHILD_STATUS_TYPE DXGK_CHILD_STATUS_TYPE;
typedef enum _E77CB3051D9C8ED4930C18407A61777E EPcMiniportEngineEvent;
typedef enum _FILE_INFORMATION_CLASS FILE_INFORMATION_CLASS;
typedef ULONG FLT_IO_OPERATION_FLAGS;
typedef ULONG FLT_REGISTRATION_FLAGS;
typedef void (*HID_SEND_IDLE_CALLBACK)(PVOID Context);
typedef enum _A929C63020887A483B35F70A5EFC96A1 ICMP4_TIME_EXCEED_CODE;
typedef DXGKARG_PRESENT *INOUT_PDXGKARG_PRESENT;
struct IPRouteNextHopEntry_V1 {ulong ine_iretype;ulong ine_nexthop;ulong ine_ifindex;};
struct IPRouteNextHopEntry_V2 {ulong ine_iretype;ulong ine_nexthop;ulong ine_ifindex;};
typedef enum _37D474810C204F88D5E7D0AA3911B83F ISCSI_ENCRYPTION_TYPES;
typedef enum _KBUGCHECK_DUMP_IO_TYPE KBUGCHECK_DUMP_IO_TYPE;
typedef enum _429EB74962E87703A45DDC99578FCDEB KSEVENT_BDA_EVENT_TYPE;
typedef enum _6D08AF020E88675B59174822EC55B914 KSEVENT_CLOCK_POSITION;
typedef enum _F239DEADC25CACD7CAEE22C293522824 KSPROPERTY_AUDIOENGINE;
typedef BOOL KSPROPERTY_COMPOSIT_ON;
typedef enum _0B04060F21BCD959670CDC2C41862B4B KSPROPERTY_TUNER_MODES;
typedef enum _DD63D416C80B0B367D506EB1E8E34ADE KSSTREAM_POINTER_STATE;
typedef enum _0C48B1A02A365DA9EEBAB619832376BC KS_AMVP_SELECTFORMATBY;
typedef enum _658345D4A0AC297778ED4BE2EFA31AA1 KS_AnalogVideoStandard;
typedef enum _23E6C1A168AB0FE32A30B33B75B3E087 KS_VideoStreamingHints;
typedef CSIMAADPCMWAVEFORMAT *LPCSIMAADPCMWAVEFORMAT;
typedef G721_ADPCMWAVEFORMAT *LPG721_ADPCMWAVEFORMAT;
typedef G723_ADPCMWAVEFORMAT *LPG723_ADPCMWAVEFORMAT;
typedef MPEGLAYER3WAVEFORMAT *LPMPEGLAYER3WAVEFORMAT;
typedef TRUESPEECHWAVEFORMAT *LPTRUESPEECHWAVEFORMAT;
typedef enum _F82401D521EFC03EBC08D5EDB30820DF MLD_MAX_RESP_CODE_TYPE;
typedef UCHAR MRX_PURGE_RELATIONSHIP;
typedef UCHAR MRX_PURGE_SYNCLOCATION;
typedef enum _NDIS_802_11_POWER_MODE NDIS_802_11_POWER_MODE;
typedef enum _NDIS_802_11_WEP_STATUS NDIS_802_11_WEP_STATUS;
typedef enum _NDIS_IPV4_HEADER_FIELD NDIS_IPV4_HEADER_FIELD;
typedef enum _NDIS_IPV6_HEADER_FIELD NDIS_IPV6_HEADER_FIELD;
typedef ULONG NDIS_RECEIVE_FILTER_ID;
typedef enum _NDIS_WAN_HEADER_FORMAT NDIS_WAN_HEADER_FORMAT;
typedef enum _NET_DEVICE_POWER_STATE NET_DEVICE_POWER_STATE;
typedef enum _NET_IF_CONNECTION_TYPE NET_IF_CONNECTION_TYPE;
typedef CSIMAADPCMWAVEFORMAT *NPCSIMAADPCMWAVEFORMAT;
typedef G721_ADPCMWAVEFORMAT *NPG721_ADPCMWAVEFORMAT;
typedef G723_ADPCMWAVEFORMAT *NPG723_ADPCMWAVEFORMAT;
typedef MPEGLAYER3WAVEFORMAT *NPMPEGLAYER3WAVEFORMAT;
typedef TRUESPEECHWAVEFORMAT *NPTRUESPEECHWAVEFORMAT;
typedef enum _OFFLOAD_INTEGRITY_ALGO OFFLOAD_INTEGRITY_ALGO;
typedef void (*PCAM_NEW_FRAME_ROUTINE)(PVOID DeviceContext, PVOID FrameContext);
typedef  IMAGE_IMPORT_BY_NAME *PCIMAGE_IMPORT_BY_NAME;
typedef  IMAGE_SECTION_HEADER *PCIMAGE_SECTION_HEADER;
typedef enum _PCI_HARDWARE_INTERFACE PCI_HARDWARE_INTERFACE;
typedef enum _CLFS_LOG_ARCHIVE_MODE *PCLFS_LOG_ARCHIVE_MODE;
typedef enum _CLFS_MGMT_POLICY_TYPE *PCLFS_MGMT_POLICY_TYPE;
typedef CONTRESCR10WAVEFORMAT *PCONTRESCR10WAVEFORMAT;
typedef enum _DEVICE_REMOVAL_POLICY *PDEVICE_REMOVAL_POLICY;
typedef enum _DISK_PERFORMANCE_TYPE *PDISK_PERFORMANCE_TYPE;
typedef enum _DSM_NOTIFICATION_TYPE *PDSM_NOTIFICATION_TYPE;
typedef enum _EXTENDED_AGP_REGISTER *PEXTENDED_AGP_REGISTER;
typedef FAST_IO_DETACH_DEVICE *PFAST_IO_DETACH_DEVICE;
typedef void ( *PFLT_DISCONNECT_NOTIFY)(PVOID ConnectionCookie);
typedef GENERATE_NAME_CONTEXT *PGENERATE_NAME_CONTEXT;
typedef enum _HARDWARE_COUNTER_TYPE *PHARDWARE_COUNTER_TYPE;
typedef void ( *PHW_RECEIVE_DEVICE_SRB)(PHW_STREAM_REQUEST_BLOCK SRB);
typedef enum _IDE_NOTIFICATION_TYPE *PIDE_NOTIFICATION_TYPE;
typedef IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;
typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER;
typedef IMAGE_TLS_DIRECTORY32 *PIMAGE_TLS_DIRECTORY32;
typedef IMAGE_TLS_DIRECTORY64 *PIMAGE_TLS_DIRECTORY64;
typedef void (*PINTERFACE_DEREFERENCE)(PVOID Context);
typedef OBJECT_ATTRIBUTES *PLSA_OBJECT_ATTRIBUTES;
typedef enum _D28224BC9A9B8BD3505A505C1CAC1B65 PMI_CONFIGURATION_TYPE;
typedef enum _MONITOR_DISPLAY_STATE *PMONITOR_DISPLAY_STATE;
typedef void ( *PMRX_NEWSTATE_CALLDOWN)(PVOID Context);
typedef enum _NDIS_802_5_RING_STATE *PNDIS_802_5_RING_STATE;
typedef enum _NDIS_ARP_HEADER_FIELD *PNDIS_ARP_HEADER_FIELD;
typedef enum _NDIS_DEVICE_PNP_EVENT *PNDIS_DEVICE_PNP_EVENT;
typedef enum _NDIS_ENVIRONMENT_TYPE *PNDIS_ENVIRONMENT_TYPE;
typedef enum _NDIS_MAC_HEADER_FIELD *PNDIS_MAC_HEADER_FIELD;
typedef enum _NDIS_PROCESSOR_VENDOR *PNDIS_PROCESSOR_VENDOR;
typedef ULONG *PNDIS_RECEIVE_QUEUE_ID;
typedef NDIS_STATISTICS_VALUE *PNDIS_STATISTICS_VALUE;
typedef enum _NDIS_UDP_HEADER_FIELD *PNDIS_UDP_HEADER_FIELD;
typedef UINT32 *PNET_IF_COMPARTMENT_ID;
typedef enum _NET_IF_DIRECTION_TYPE *PNET_IF_DIRECTION_TYPE;
typedef void (*PPARALLEL_FREE_ROUTINE)(PVOID FreeContext);
typedef enum _RDBSS_SCAVENGER_STATE *PRDBSS_SCAVENGER_STATE;
typedef READ_USN_JOURNAL_DATA_V1 *PREAD_USN_JOURNAL_DATA;
typedef RESP_GET_DFS_REFERRAL *PRESP_GET_DFS_REFERRAL;
typedef enum _SCO_DISCONNECT_REASON *PSCO_DISCONNECT_REASON;
typedef enum _SE_ADT_PARAMETER_TYPE *PSE_ADT_PARAMETER_TYPE;
typedef SIERRAADPCMWAVEFORMAT *PSIERRAADPCMWAVEFORMAT;
typedef SMB_TRANSACT_MAILSLOT *PSMB_TRANSACT_MAILSLOT;
typedef HBA_PORTSTATISTICS *PSMHBA_FCPHYSTATISTICS;
typedef enum _STORAGE_ID_NAA_FORMAT *PSTORAGE_ID_NAA_FORMAT;
typedef enum _STORAGE_PORT_CODE_SET *PSTORAGE_PORT_CODE_SET;
typedef enum _STOR_IO_PRIORITY_HINT *PSTOR_IO_PRIORITY_HINT;
typedef enum _WWAN_ACTIVATION_STATE *PWWAN_ACTIVATION_STATE;
typedef enum _WWAN_VOICE_CALL_STATE *PWWAN_VOICE_CALL_STATE;
typedef USHORT RTL_STRING_LENGTH_TYPE;
typedef enum _SCSI_NOTIFICATION_TYPE SCSI_NOTIFICATION_TYPE;
typedef enum _SCSI_UNIT_CONTROL_TYPE SCSI_UNIT_CONTROL_TYPE;
typedef enum _STORPORT_FUNCTION_CODE STORPORT_FUNCTION_CODE;
typedef enum _SYSCTL_IRP_DISPOSITION SYSCTL_IRP_DISPOSITION;
typedef enum _0125F7DD214878EB629B8863199E19EA SYSTEM_POWER_CONDITION;
typedef enum _USER_ACTIVITY_PRESENCE USER_ACTIVITY_PRESENCE;
typedef enum _VIDEO_DEVICE_DATA_TYPE VIDEO_DEVICE_DATA_TYPE;
typedef enum _WHEA_ERROR_SOURCE_TYPE WHEA_ERROR_SOURCE_TYPE;
typedef enum _WWAN_ASYNC_GETSET_TYPE WWAN_ASYNC_GETSET_TYPE;
typedef enum _WWAN_SMS_CDMA_ENCODING WWAN_SMS_CDMA_ENCODING;
typedef enum _WWAN_USSD_REQUEST_TYPE WWAN_USSD_REQUEST_TYPE;
struct _AUX_MODULE_BASIC_INFO {PVOID ImageBase;};
struct _CDB___EXCHANGE_MEDIUM {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR TransportElementAddress[2];UCHAR SourceElementAddress[2];UCHAR Destination1ElementAddress[2];UCHAR Destination2ElementAddress[2];unsigned char Flip1 : 1;unsigned char Flip2 : 1;unsigned char Reserved3 : 6;UCHAR Control;};
struct _CDB___GET_PERFORMANCE {UCHAR OperationCode;unsigned char Except : 2;unsigned char Write : 1;unsigned char Tolerance : 2;unsigned char Reserved0 : 3;UCHAR StartingLBA[4];UCHAR Reserved1[2];UCHAR MaximumNumberOfDescriptors[2];UCHAR Type;UCHAR Control;};
struct _CDB___PLXTR_READ_CDDA {UCHAR OperationCode;unsigned char Reserved0 : 5;unsigned char LogicalUnitNumber : 3;UCHAR LogicalBlockByte0;UCHAR LogicalBlockByte1;UCHAR LogicalBlockByte2;UCHAR LogicalBlockByte3;UCHAR TransferBlockByte0;UCHAR TransferBlockByte1;UCHAR TransferBlockByte2;UCHAR TransferBlockByte3;UCHAR SubCode;UCHAR Control;};
struct _CDB___READ_CAPACITY16 {UCHAR OperationCode;unsigned char ServiceAction : 5;unsigned char Reserved1 : 3;UCHAR LogicalBlock[8];UCHAR AllocationLength[4];unsigned char PMI : 1;unsigned char Reserved2 : 7;UCHAR Control;};
struct _CDB___SEND_VOLUME_TAG {UCHAR OperationCode;unsigned char ElementType : 4;unsigned char Reserved1 : 1;unsigned char LogicalUnitNumber : 3;UCHAR StartingElementAddress[2];UCHAR Reserved2;unsigned char ActionCode : 5;unsigned char Reserved3 : 3;UCHAR Reserved4[2];UCHAR ParameterListLength[2];UCHAR Reserved5;UCHAR Control;};
struct _CDB___TOKEN_OPERATION {UCHAR OperationCode;unsigned char ServiceAction : 5;unsigned char Reserved1 : 3;UCHAR Reserved2[4];UCHAR ListIdentifier[4];UCHAR ParameterListLength[4];unsigned char GroupNumber : 5;unsigned char Reserved3 : 3;UCHAR Control;};
struct _CDVD_FEATURE_SET_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PSBit : 1;UCHAR PageLength;UCHAR CDAudio[2];UCHAR EmbeddedChanger[2];UCHAR PacketSMART[2];UCHAR PersistantPrevent[2];UCHAR EventStatusNotification[2];UCHAR DigitalOutput[2];UCHAR CDSequentialRecordable[2];UCHAR DVDSequentialRecordable[2];UCHAR RandomRecordable[2];UCHAR KeyExchange[2];UCHAR Reserved2[2];};
struct _CDVD_REPORT_AGID_DATA {UCHAR Reserved1[3];unsigned char Reserved2 : 6;unsigned char AGID : 2;};
struct _CLOCK_RATE_CONVERSION { ULONG F; ULONG fs;};
struct _CreateVirtualPort_OUT {ULONG Status;};
struct _DESCRIPTOR_SENSE_DATA {unsigned char ErrorCode : 7;unsigned char Reserved1 : 1;unsigned char SenseKey : 4;unsigned char Reserved2 : 4;UCHAR AdditionalSenseCode;UCHAR AdditionalSenseCodeQualifier;UCHAR Reserved3[3];UCHAR AdditionalSenseLength;UCHAR DescriptorBuffer[1];};
struct _DOT11_PEER_STATISTICS {ULONGLONG ullDecryptSuccessCount;ULONGLONG ullDecryptFailureCount;ULONGLONG ullTxPacketSuccessCount;ULONGLONG ullTxPacketFailureCount;ULONGLONG ullRxPacketSuccessCount;ULONGLONG ullRxPacketFailureCount;};
struct _DOT11_QOS_TX_DURATION {ULONG uNominalMSDUSize;ULONG uMinPHYRate;ULONG uDuration;};
struct _DUMP_POINTERS_VERSION {ULONG Version;ULONG Size;};
struct _DXGKARG_UPDATEOVERLAY {DXGK_OVERLAYINFO OverlayInfo;};
struct _ELEMENT_STATUS_HEADER {UCHAR FirstElementAddress[2];UCHAR NumberOfElements[2];UCHAR Reserved1;UCHAR ReportByteCount[3];};
struct _EXECUTE_SELF_TEST_OUT {ULONG ReturnCode;};
struct _FILE_LEVEL_TRIM_RANGE {ULONGLONG Offset;ULONGLONG Length;};
struct _FILE_MODE_INFORMATION {ULONG Mode;};
struct _FILE_PIPE_INFORMATION {ULONG ReadMode;ULONG CompletionMode;};
typedef enum _0C0D8E877CDAA32B9F529E7264818D98 _FPIEEE_COMPARE_RESULT;
struct _GET_FP_CAPABILITY_OUT {ULONG Capability;};
struct _GET_SINGLE_POLICY_OUT {ULONG Status;ULONG Value;};
struct _GET_UNIT_CAPABILITIES {ULONG NumOutputPlugs;ULONG NumInputPlugs;ULONG MaxDataRate;ULONG CTSFlags;ULONG HardwareFlags;};
struct _GetBindingSupport_OUT {ULONG HBAStatus;ULONG BindType;};
struct _HAL_POWER_INFORMATION {ULONG TBD;};
struct _HAL_PROCESSOR_FEATURE {ULONG UsableFeatureBits;};
struct _IMAGE_BASE_RELOCATION {ULONG VirtualAddress;ULONG SizeOfBlock;};
struct _IMAGE_TLS_DIRECTORY32 {ULONG StartAddressOfRawData;ULONG EndAddressOfRawData;ULONG AddressOfIndex;ULONG AddressOfCallBacks;ULONG SizeOfZeroFill;ULONG Characteristics;};
struct _IO_COMPLETION_CONTEXT {PVOID Port;PVOID Key;};
struct _IPV6_EXTENSION_HEADER {UINT8 NextHeader;UINT8 Length;};
struct _KernelPerfStateChange {ULONG State;ULONG Status;ULONG Latency;ULONG Speed;ULONG Processor;};
struct _MODE_PARAMETER_HEADER {UCHAR ModeDataLength;UCHAR MediumType;UCHAR DeviceSpecificParameter;UCHAR BlockDescriptorLength;};
struct _MSNdis_FddiFramesLost {ULONG NdisFddiFramesLost;};
struct _MSNdis_FddiLemRejects {ULONG NdisFddiLemRejects;};
struct _MSNdis_HardwareStatus {ULONG NdisHardwareStatus;};
struct _MSNdis_MediaSupported {ULONG NumberElements;ULONG NdisMediaSupported[1];};
struct _MSNdis_NetworkAddress {UCHAR Address[6];};
struct _MSNdis_PMCapabilities {MSNdis_PMCapabilitiesParam PMCapabilitiesParam;};
struct _MSNdis_TransmitsError {ULONG NdisTransmitsError;};
struct _MSNdis_VlanIdentifier {ULONG NdisVlanId;};
struct _NDIS_IRDA_PACKET_INFO {ULONG ExtraBOFs;ULONG MinTurnAroundTime;};
struct _PAR_QUERY_INFORMATION {UCHAR Status;};
struct _PCMCIA_SOCKET_REQUEST {USHORT Socket;};
struct _POWER_IDLE_RESILIENCY {ULONG CoalescingTimeout;ULONG IdleResiliencyPeriod;};
struct _ROOTHUB_PDO_EXTENSION {ULONG Signature;};
struct _RemoveRADIUSServer_IN {ISCSI_IP_Address RADIUSIPAddress;};
struct _RemoveVirtualPort_OUT {ULONG Status;};
struct _RescanVirtualPort_OUT {ULONG Status;};
struct _SD_QUERY_STATS_OUTPUT {ULONGLONG SdsStreamSize;ULONGLONG SdsAllocationSize;ULONGLONG SiiStreamSize;ULONGLONG SiiAllocationSize;ULONGLONG SdhStreamSize;ULONGLONG SdhAllocationSize;ULONGLONG NumSDTotal;ULONGLONG NumSDUnused;};
struct _SES_STATUS_DESCRIPTOR {unsigned char ElementStatus : 4;unsigned char Swap : 1;unsigned char Disabled : 1;unsigned char PredictedFailure : 1;unsigned char Reserved1 : 1;UCHAR SlotAddress;unsigned char Report : 1;unsigned char Identify : 1;unsigned char Remove : 1;unsigned char ReadyToInsert : 1;unsigned char EnclosureBypassedB : 1;unsigned char EnclosureBypassedA : 1;unsigned char DoNotRemove : 1;unsigned char AppBypassedA : 1;unsigned char DeviceBypassedB : 1;unsigned char DeviceBypassedA : 1;unsigned char BypassedB : 1;unsigned char BypassedA : 1;unsigned char DeviceOff : 1;unsigned char FaultRequested : 1;unsigned char FaultSensed : 1;unsigned char AppBypassedB : 1;};
struct _SET_LOCAL_HOST_PROPS1 {ULONG fulFlags;};
struct _SET_LOCAL_HOST_PROPS2 {ULONG GapCountLowerBound;};
struct _SET_LOCAL_HOST_PROPS4 {ULONG MaxAsyncPayloadRequested;ULONG MaxAsyncPayloadResult;};
struct _SET_LOCAL_HOST_PROPS5 {ULONG DebugAddress;};
struct _SET_SINGLE_POLICY_OUT {ULONG Status;};
struct _STORAGE_DEVICE_NUMBER {ULONG DeviceType;ULONG DeviceNumber;ULONG PartitionNumber;};
struct _SetBindingSupport_OUT {ULONG HBAStatus;};
struct _TAPE_CREATE_PARTITION {ULONG Method;ULONG Count;ULONG Size;};
struct _TDI_MAX_DATAGRAM_INFO {ULONG MaxDatagramSize;};
struct _TOKEN_MANDATORY_LABEL {SID_AND_ATTRIBUTES Label;};
struct _USB_COMMON_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;};
struct _USB_LEVEL_INFORMATION {ULONG InformationLevel;ULONG ActualLength;};
struct _VIDEO_CURSOR_POSITION {SHORT Column;SHORT Row;};
struct _VIDEO_LUT_RGB256WORDS {USHORT Red[256];USHORT Green[256];USHORT Blue[256];};
struct _VPCI_READ_BLOCK_INPUT {ULONG BlockId;ULONG BytesRequested;};
struct _WmiEnumeratePorts_OUT {MSNdis_PortArray Ports;};
struct _WmiQueryLinkState_OUT {MSNdis_LinkStateData LinkState;};
struct _WmiQueryPortState_OUT {MSNdis_PortStateData PortState;};
struct oliadpcmwaveformat_tag {WAVEFORMATEX wfx;};
struct tagTRANSPORTAUDIOPARMS {LONG EnableOutput;LONG EnableRecord;LONG EnableSelsync;LONG Input;LONG MonitorSource;};
struct tagTRANSPORTVIDEOPARMS {LONG OutputMode;LONG Input;};
struct tcp_opt_sack_permitted {UINT8 Kind;UINT8 Length;};
typedef enum _CLFS_LOG_ARCHIVE_MODE CLFS_LOG_ARCHIVE_MODE;
typedef enum _CLFS_MGMT_POLICY_TYPE CLFS_MGMT_POLICY_TYPE;
typedef enum _D3DDDI_GAMMARAMP_TYPE D3DDDI_GAMMARAMP_TYPE;
typedef enum _D3DDDI_OFFER_PRIORITY D3DDDI_OFFER_PRIORITY;
typedef enum _D3DKMDT_GTFCOMPLIANCE D3DKMDT_GTFCOMPLIANCE;
typedef enum _DEVICE_REMOVAL_POLICY DEVICE_REMOVAL_POLICY;
typedef enum _DISK_PERFORMANCE_TYPE DISK_PERFORMANCE_TYPE;
typedef enum _852A570504FBC560DED5BD6F9A7B3939 DMA_COMPLETION_STATUS;
typedef UCHAR DOT11_WFD_STATUS_CODE;
typedef enum _DSM_NOTIFICATION_TYPE DSM_NOTIFICATION_TYPE;
typedef enum _DXGKMDT_OPM_HDCP_FLAG DXGKMDT_OPM_HDCP_FLAG;
typedef enum _DXGK_GDIROP_COLORFILL DXGK_GDIROP_COLORFILL;
typedef enum _EXCEPTION_DISPOSITION EXCEPTION_DISPOSITION;
typedef enum _EXTENDED_AGP_REGISTER EXTENDED_AGP_REGISTER;
typedef ULONG FLT_FILE_NAME_OPTIONS;
typedef enum _HARDWARE_COUNTER_TYPE HARDWARE_COUNTER_TYPE;
typedef void HW_INITIALIZE_TRACING(PVOID Arg1, PVOID Arg2);
typedef enum _IDE_NOTIFICATION_TYPE IDE_NOTIFICATION_TYPE;
typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER;
typedef DXGKARG_RENDER *INOUT_PDXGKARG_RENDER;
typedef PDXGKRNL_INTERFACE IN_PDXGKRNL_INTERFACE;
typedef PDXGK_CHILD_STATUS IN_PDXGK_CHILD_STATUS;
typedef enum _KEY_INFORMATION_CLASS KEY_INFORMATION_CLASS;
typedef ULONG_PTR KIPI_BROADCAST_WORKER(ULONG_PTR Argument);
typedef enum _59DFCEDD58F1A9BB4DC4C26A675D2643 KSEVENT_CAMERACONTROL;
typedef enum _7CE1B7F1EC16E342EFF5A9F3696EB2C0 KSLIST_ENTRY_LOCATION;
typedef enum _3F93F90BCBFB2C679E78C94BA1DFCB18 KSMETHOD_BDA_ISDB_CAS;
typedef enum _5F4F90A626A6FDB67639732D9E3389D6 KSPROPERTY_CONNECTION;
typedef LONG KS_AM_MaxFullDataRate;
typedef enum _219D11F677061808D19E166038DCDF6D KS_TUNER_TUNING_FLAGS;
typedef enum _87F25CE704E45E1C4AD5F80E170A75FF KS_VIDEODECODER_FLAGS;
typedef DIGIADPCMWAVEFORMAT *LPDIGIADPCMWAVEFORMAT;
typedef OBJECT_ATTRIBUTES LSA_OBJECT_ATTRIBUTES;
typedef enum _MONITOR_DISPLAY_STATE MONITOR_DISPLAY_STATE;
typedef ULONG NDIS_802_11_KEY_INDEX;
typedef enum _NDIS_802_5_RING_STATE NDIS_802_5_RING_STATE;
typedef enum _NDIS_ARP_HEADER_FIELD NDIS_ARP_HEADER_FIELD;
typedef enum _NDIS_DEVICE_PNP_EVENT NDIS_DEVICE_PNP_EVENT;
typedef enum _NDIS_ENVIRONMENT_TYPE NDIS_ENVIRONMENT_TYPE;
typedef enum _NDIS_MAC_HEADER_FIELD NDIS_MAC_HEADER_FIELD;
typedef enum _NDIS_PROCESSOR_VENDOR NDIS_PROCESSOR_VENDOR;
typedef ULONG NDIS_RECEIVE_QUEUE_ID;
typedef enum _NDIS_UDP_HEADER_FIELD NDIS_UDP_HEADER_FIELD;
typedef UINT32 NET_IF_COMPARTMENT_ID;
typedef enum _NET_IF_DIRECTION_TYPE NET_IF_DIRECTION_TYPE;
typedef NET_PHYSICAL_LOCATION_LH NET_PHYSICAL_LOCATION;
typedef DIGIADPCMWAVEFORMAT *NPDIGIADPCMWAVEFORMAT;
typedef ACPI_METHOD_ARGUMENT *PACPI_METHOD_ARGUMENT;
typedef void ( *PAGP_RELEASE_PHYSICAL)(PVOID HwDeviceExtension, PVOID PhysicalReserveContext);
typedef ULONG *PATM_SERVICE_CATEGORY;
typedef  API_SET_VALUE_ARRAY *PCAPI_SET_VALUE_ARRAY;
typedef  API_SET_VALUE_ENTRY *PCAPI_SET_VALUE_ENTRY;
typedef enum _0613C7FBE46AC3A4EDE29E53E46716D3 PCI_EXPRESS_MRL_STATE;
typedef  OBJECT_ATTRIBUTES32 *PCOBJECT_ATTRIBUTES32;
typedef  OBJECT_ATTRIBUTES64 *PCOBJECT_ATTRIBUTES64;
typedef COMPRESSED_DATA_INFO *PCOMPRESSED_DATA_INFO;
typedef CSIMAADPCMWAVEFORMAT *PCSIMAADPCMWAVEFORMAT;
typedef enum _DEVICE_INSTALL_STATE *PDEVICE_INSTALL_STATE;
typedef enum _DEVICE_RELATION_TYPE *PDEVICE_RELATION_TYPE;
typedef enum _DOT11_AUTH_ALGORITHM *PDOT11_AUTH_ALGORITHM;
typedef FAST_IO_ACQUIRE_FILE *PFAST_IO_ACQUIRE_FILE;
typedef FAST_IO_RELEASE_FILE *PFAST_IO_RELEASE_FILE;
typedef void (*PFNKSITEMFREECALLBACK)(PKSOBJECT_CREATE_ITEM CreateItem);
typedef void (*PFREE_ADAPTER_CHANNEL)(PDMA_ADAPTER DmaAdapter);
typedef enum _FSINFOCLASS *PFS_INFORMATION_CLASS;
typedef G721_ADPCMWAVEFORMAT *PG721_ADPCMWAVEFORMAT;
typedef G723_ADPCMWAVEFORMAT *PG723_ADPCMWAVEFORMAT;
typedef GET_LOCAL_HOST_INFO7_WXP *PGET_LOCAL_HOST_INFO7;
typedef enum _HDAUDIO_STREAM_STATE *PHDAUDIO_STREAM_STATE;
typedef enum _IO_ALLOCATION_ACTION *PIO_ALLOCATION_ACTION;
typedef ULONG *PLSA_OPERATIONAL_MODE;
typedef void (*PMINIPORT_DPC_ROUTINE)(PVOID HwDeviceExtension, PVOID Context);
typedef enum _69ADA42DF3FC369FCB26E55906D6FF52 PMI_CAPABILITIES_TYPE;
typedef enum _MOUSE_RESET_SUBSTATE *PMOUSE_RESET_SUBSTATE;
typedef MPEGLAYER3WAVEFORMAT *PMPEGLAYER3WAVEFORMAT;
typedef void ( *PMRX_NETROOT_CALLBACK)(PMRX_CREATENETROOT_CONTEXT CreateContext);
typedef void ( *PMRX_SRVCALL_CALLBACK)(PMRX_SRVCALL_CALLBACK_CONTEXT Context);
typedef enum _NDIS_HARDWARE_STATUS *PNDIS_HARDWARE_STATUS;
typedef enum _NDIS_MAC_PACKET_TYPE *PNDIS_MAC_PACKET_TYPE;
typedef enum _NDIS_PER_PACKET_INFO *PNDIS_PER_PACKET_INFO;
typedef enum _NDIS_PHYSICAL_MEDIUM *PNDIS_PHYSICAL_MEDIUM;
typedef enum _NDIS_SHUTDOWN_ACTION PNDIS_SHUTDOWN_ACTION;
typedef UINT32 *PPCLS_CONTAINER_STATE;
typedef REQ_GET_DFS_REFERRAL *PREQ_GET_DFS_REFERRAL;
typedef ULONG *PSECURITY_INFORMATION;
typedef XVARIABLE_NAME *PSYSENV_VARIABLE_NAME;
typedef enum _TOKEN_ELEVATION_TYPE *PTOKEN_ELEVATION_TYPE;
typedef enum _TRANSFER_COUNT_UNITS *PTRANSFER_COUNT_UNITS;
typedef TRUESPEECHWAVEFORMAT *PTRUESPEECHWAVEFORMAT;
typedef UNICODE_PREFIX_TABLE *PUNICODE_PREFIX_TABLE;
typedef USBD_FUNCTION_HANDLE *PUSBD_FUNCTION_HANDLE;
typedef void (*PVIDEO_WIN32K_CALLOUT)(PVOID Params);
typedef enum _WHEA_RAW_DATA_FORMAT *PWHEA_RAW_DATA_FORMAT;
typedef enum _WWAN_REGISTER_ACTION *PWWAN_REGISTER_ACTION;
typedef enum _WWAN_USSD_EVENT_TYPE *PWWAN_USSD_EVENT_TYPE;
typedef enum _RDBSS_BUG_CHECK_CODES RDBSS_BUG_CHECK_CODES;
typedef enum _RDBSS_SCAVENGER_STATE RDBSS_SCAVENGER_STATE;
typedef READ_USN_JOURNAL_DATA_V1 READ_USN_JOURNAL_DATA;
typedef enum _SCO_DISCONNECT_REASON SCO_DISCONNECT_REASON;
typedef enum _BC3BBEDF262FFCCA226CBBAFD36E3C62 SDBUS_TRANSFER_METHOD;
struct SDP_ULARGE_INTEGER_16 {ULONGLONG LowPart;ULONGLONG HighPart;};
typedef enum _3ABDAF5754BA3A7227E79705F9B5F6D6 SD_TRANSFER_DIRECTION;
typedef enum _SE_ADT_PARAMETER_TYPE SE_ADT_PARAMETER_TYPE;
typedef HBA_PORTSTATISTICS SMHBA_FCPHYSTATISTICS;
typedef enum _STORAGE_ID_NAA_FORMAT STORAGE_ID_NAA_FORMAT;
typedef enum _STORAGE_PORT_CODE_SET STORAGE_PORT_CODE_SET;
typedef PVOID STORAGE_TRACE_CONTEXT;
typedef enum _STOR_IO_PRIORITY_HINT STOR_IO_PRIORITY_HINT;
typedef ULONG TR_FUNCTIONAL_ADDRESS;
typedef PVOID USBD_INTERFACE_HANDLE;
typedef enum _USBPORT_INITDEV_ERROR USBPORT_INITDEV_ERROR;
typedef enum _USB_CONTROLLER_FLAVOR USB_CONTROLLER_FLAVOR;
typedef enum _CD7784D22BC3CCBE883A680641608D54 VIDEO_PORT_CACHE_TYPE;
typedef WAVEFORMATEXTENSIBLE WAVEFORMATIEEEFLOATEX;
typedef void WORKER_THREAD_ROUTINE(PVOID Parameter);
typedef enum _WWAN_ACTIVATION_STATE WWAN_ACTIVATION_STATE;
typedef enum _WWAN_VOICE_CALL_STATE WWAN_VOICE_CALL_STATE;
struct _BDA_CAS_CLOSEMMIDATA {ULONG ulDialogNumber;};
struct _BDA_ETHERNET_ADDRESS {BYTE rgbAddress[6];};
struct _BDA_PROGRAM_PID_LIST {ULONG ulProgramNumber;ULONG ulcPIDs;ULONG ulPID[1];};
struct _CDB32___CDB32GENERIC {UCHAR OperationCode;UCHAR Control;UCHAR Reserved1[4];unsigned char Group : 5;unsigned char Reserved2 : 3;UCHAR AdditionalCDBLength;UCHAR ServiceAction[2];UCHAR Reserved3[2];UCHAR LogicalBlock[8];UCHAR Reserved4[8];UCHAR TransferLength[4];};
struct _CDB___GET_LBA_STATUS {UCHAR OperationCode;unsigned char ServiceAction : 5;unsigned char Reserved1 : 3;UCHAR StartingLBA[8];UCHAR AllocationLength[4];UCHAR Reserved2;UCHAR Control;};
struct _CDB___PLAY_AUDIO_MSF {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR Reserved2;UCHAR StartingM;UCHAR StartingS;UCHAR StartingF;UCHAR EndingM;UCHAR EndingS;UCHAR EndingF;UCHAR Control;};
struct _CDB___SEND_CUE_SHEET {UCHAR OperationCode;UCHAR Reserved[5];UCHAR CueSheetSize[3];UCHAR Control;};
struct _CDB___SET_READ_AHEAD {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char Lun : 3;UCHAR TriggerLBA[4];UCHAR ReadAheadLBA[4];UCHAR Reserved2;UCHAR Control;};
struct _CDB___STOP_PLAY_SCAN {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char Lun : 3;UCHAR Reserved2[7];UCHAR Control;};
struct _CDROM_PLAY_AUDIO_MSF {UCHAR StartingM;UCHAR StartingS;UCHAR StartingF;UCHAR EndingM;UCHAR EndingS;UCHAR EndingF;};
struct _CDROM_SEEK_AUDIO_MSF {UCHAR M;UCHAR S;UCHAR F;};
struct _CDVD_REPORT_ASF_DATA {UCHAR Reserved1[3];unsigned char Success : 1;unsigned char Reserved2 : 7;};
struct _CHANGER_PRODUCT_DATA {UCHAR VendorId[8];UCHAR ProductId[16];UCHAR Revision[4];UCHAR SerialNumber[32];UCHAR DeviceType;};
struct _DMA_TRANSFER_INFO_V1 {ULONG MapRegisterCount;ULONG ScatterGatherElementCount;ULONG ScatterGatherListSize;};
struct _DOT11_COUNTERS_ENTRY {ULONG uTransmittedFragmentCount;ULONG uMulticastTransmittedFrameCount;ULONG uFailedCount;ULONG uRetryCount;ULONG uMultipleRetryCount;ULONG uFrameDuplicateCount;ULONG uRTSSuccessCount;ULONG uRTSFailureCount;ULONG uACKFailureCount;ULONG uReceivedFragmentCount;ULONG uMulticastReceivedFrameCount;ULONG uFCSErrorCount;ULONG uTransmittedFrameCount;};
struct _DSM_QueryLBPolicy_V2 {DSM_Load_Balance_Policy_V2 LoadBalancePolicy;};
struct _EXECUTE_SELF_TEST_IN {UCHAR Subcommand;};
struct _FILE_REFERENCE_RANGE {ULONGLONG StartingFileReferenceNumber;ULONGLONG EndingFileReferenceNumber;};
typedef enum _0CDD13AED9949118DD70163834A3A235 _FPIEEE_ROUNDING_MODE;
struct _GEN_GET_NETCARD_TIME {ULONGLONG ReadTime;};
struct _GET_LOCAL_HOST_INFO1 {LARGE_INTEGER UniqueId;};
struct _GET_LOCAL_HOST_INFO2 {ULONG HostCapabilities;ULONG MaxAsyncReadRequest;ULONG MaxAsyncWriteRequest;};
struct _GET_LOCAL_HOST_INFO3 {ULONG deciWattsSupplied;ULONG Voltage;};
struct _GET_LOCAL_HOST_INFO8 {USHORT MajorVersion;USHORT MinorVersion;};
struct _GET_SINGLE_POLICY_IN {ULONG Type;};
struct _GetBindingSupport_IN {UCHAR PortWWN[8];};
struct _IMAGE_DATA_DIRECTORY {ULONG VirtualAddress;ULONG Size;};
struct _IMAGE_FUNCTION_ENTRY {ULONG StartingAddress;ULONG EndingAddress;ULONG EndOfPrologue;};
struct _LogoutFromTarget_OUT {ULONG Status;};
struct _MODE_DISCONNECT_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PageSavable : 1;UCHAR PageLength;UCHAR BufferFullRatio;UCHAR BufferEmptyRatio;UCHAR BusInactivityLimit[2];UCHAR BusDisconnectTime[2];UCHAR BusConnectTime[2];UCHAR MaximumBurstSize[2];unsigned char DataTransferDisconnect : 2;UCHAR Reserved2[3];};
struct _MODE_PARAMETER_BLOCK {UCHAR DensityCode;UCHAR NumberOfBlocks[3];UCHAR Reserved;UCHAR BlockLength[3];};
struct _MOUNTDEV_STABLE_GUID {GUID StableGuid;};
struct _MPIO_TIMERS_COUNTERS {ULONG PathVerifyEnabled;ULONG PathVerificationPeriod;ULONG PDORemovePeriod;ULONG RetryCount;ULONG RetryInterval;};
struct _MSIde_PortDeviceInfo {UCHAR Bus;UCHAR Target;UCHAR Lun;};
struct _MSNdis_DriverVersion {USHORT NdisDriverVersion;};
struct _MSNdis_PMAdminConfig {MSNdis_PMAdminConfigParam PMAdminConfigParam;};
struct _MSiSCSI_MMIPSECStats {ULONGLONG ActiveAcquire;ULONGLONG ActiveReceive;ULONGLONG AcquireFailures;ULONGLONG ReceiveFailures;ULONGLONG SendFailures;ULONGLONG AcquireHeapSize;ULONGLONG ReceiveHeapSize;ULONGLONG NegotiationFailures;ULONGLONG AuthenticationFailures;ULONGLONG InvalidCookiesReceived;ULONGLONG TotalGetSPI;ULONGLONG KeyAdditions;ULONGLONG KeyUpdates;ULONGLONG GetSPIFailures;ULONGLONG KeyAdditionFailures;ULONGLONG KeyUpdateFailures;ULONGLONG ConnectionListSize;ULONGLONG OakleyMainMode;ULONGLONG OakleyQuickMode;ULONGLONG InvalidPackets;ULONGLONG SoftAssociations;};
struct _MSiSCSI_QMIPSECStats {ULONGLONG ActiveSA;ULONGLONG PendingKeyOperations;ULONGLONG KeyAdditions;ULONGLONG KeyDeletions;ULONGLONG ReKeys;ULONGLONG ActiveTunnels;ULONGLONG BadSPIPackets;ULONGLONG PacketsNotDecrypted;ULONGLONG PacketsNotAuthenticated;ULONGLONG PacketsWithReplayDetection;ULONGLONG ConfidentialBytesSent;ULONGLONG ConfidentialBytesReceived;ULONGLONG AuthenticatedBytesSent;ULONGLONG AuthenticatedBytesReceived;ULONGLONG TransportBytesSent;ULONGLONG TransportBytesReceived;ULONGLONG TunnelBytesSent;ULONGLONG TunnelBytesReceived;};
struct _NDIS_802_11_AI_RESFI {USHORT Capabilities;USHORT StatusCode;USHORT AssociationId;};
struct _NDIS_WAN_CO_FRAGMENT {ULONG Errors;};
struct _NVCACHE_HINT_PAYLOAD {UCHAR Command;UCHAR Feature7_0;UCHAR Feature15_8;UCHAR Count15_8;UCHAR LBA7_0;UCHAR LBA15_8;UCHAR LBA23_16;UCHAR LBA31_24;UCHAR LBA39_32;UCHAR LBA47_40;UCHAR Auxiliary7_0;UCHAR Auxiliary23_16;UCHAR Reserved[4];};
struct _PMI_MEASUREMENT_DATA {ULONG Version;ULONG CurrentPower;};
struct _POWER_CONDITION_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PSBit : 1;UCHAR PageLength;UCHAR Reserved2;unsigned char Standby : 1;unsigned char Idle : 1;unsigned char Reserved3 : 6;UCHAR IdleTimer[4];UCHAR StandbyTimer[4];};
struct _PROCESS_ACCESS_TOKEN {HANDLE Token;HANDLE Thread;};
struct _ProcessorPerformance {ULONG frequency;ULONG power;ULONG percentage;};
struct _RemoveVirtualPort_IN {UCHAR WWPN[8];};
struct _RemoveiSNSServer_OUT {ULONG Status;};
struct _RescanVirtualPort_IN {UCHAR WWPN[8];};
struct _SD_QUERY_STATS_INPUT {ULONG Reserved;};
struct _SERIAL_WMI_PERF_DATA {ULONG ReceivedCount;ULONG TransmittedCount;ULONG FrameErrorCount;ULONG SerialOverrunErrorCount;ULONG BufferOverrunErrorCount;ULONG ParityErrorCount;};
struct _SET_CMP_ADDRESS_TYPE {ULONG Type;};
struct _SET_SINGLE_POLICY_IN {ULONG Type;ULONG Value;};
struct _SYSENV_VARIABLE_INFO {ULONGLONG MaximumVariableStorageSize;ULONGLONG RemainingVariableStorageSize;ULONGLONG MaximumVariableSize;};
struct _WAN_CO_MTULINKPARAMS {ULONG Version;ULONG TransmitSpeed;ULONG ReceiveSpeed;ULONG SendWindow;ULONG MTU;};
struct _WWAN_VENDOR_SPECIFIC {ULONG uVendorSpecificBufferSize;};
struct _WmiEnumeratePorts_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiQueryLinkState_IN {MSNdis_WmiMethodHeader Header;};
struct _WmiQueryPortState_IN {MSNdis_WmiMethodHeader Header;};
struct digifixwaveformat_tag {WAVEFORMATEX wfx;};
struct digistdwaveformat_tag {WAVEFORMATEX wfx;};
struct echosc1waveformat_tag {WAVEFORMATEX wfx;};
struct olicelpwaveformat_tag {WAVEFORMATEX wfx;};
typedef ULONG ATM_SERVICE_CATEGORY;
typedef enum _BTHX_HCI_PACKET_TYPE BTHX_HCI_PACKET_TYPE;
typedef enum _4CDE0135BF0DD65FF3AEA877B53731B2 CLASS_POWER_UP_STATE;
typedef enum _CM_SHARE_DISPOSITION CM_SHARE_DISPOSITION;
typedef enum _DEVICE_INSTALL_STATE DEVICE_INSTALL_STATE;
typedef enum _DEVICE_RELATION_TYPE DEVICE_RELATION_TYPE;
typedef enum _DOT11_AUTH_ALGORITHM DOT11_AUTH_ALGORITHM;
typedef void *( *DXGKCB_GETHANDLEDATA)(IN_CONST_PDXGKARGCB_GETHANDLEDATA);
typedef void  EXPAND_STACK_CALLOUT(PVOID Parameter);
typedef enum _FSINFOCLASS FS_INFORMATION_CLASS;
typedef GET_LOCAL_HOST_INFO7_WXP GET_LOCAL_HOST_INFO7;
typedef enum _HDAUDIO_STREAM_STATE HDAUDIO_STREAM_STATE;
typedef enum _F8DF59CE70524272C25A772B848902B7 HOOK_IP_ADDRESS_TYPE;
typedef PLINKED_DEVICE INOUT_PLINKED_DEVICE;
typedef enum _IO_ALLOCATION_ACTION IO_ALLOCATION_ACTION;
typedef enum _67063D379273ADCD5D91019DFED2E95F KSEVENT_VIDEODECODER;
typedef enum _ADC633718E981BBAA2F59FA41E3EE0B2 KSINTERFACE_STANDARD;
typedef enum _7772B546DBDF650B52C572BF7BB5BA92 KSPROPERTY_AUDDECOUT;
typedef enum _05DAA4B528850479245A9C123C494191 KSPROPERTY_DVDSUBPIC;
typedef enum _D2D7ADDD7CC8EBBAC27CC93F1D71BE3D KSPROPERTY_EXTDEVICE;
typedef enum _3C9ACFCDCE444EA19BF9C4916F527A0D KS_VideoControlFlags;
typedef PVOID L2CAP_CHANNEL_HANDLE;
typedef DIGIREALWAVEFORMAT *LPDIGIREALWAVEFORMAT;
typedef DVIADPCMWAVEFORMAT *LPDVIADPCMWAVEFORMAT;
typedef IMAADPCMWAVEFORMAT *LPIMAADPCMWAVEFORMAT;
typedef MSAUDIO1WAVEFORMAT *LPMSAUDIO1WAVEFORMAT;
typedef OLIADPCMWAVEFORMAT *LPOLIADPCMWAVEFORMAT;
typedef WMAUDIO2WAVEFORMAT *LPWMAUDIO2WAVEFORMAT;
typedef WMAUDIO3WAVEFORMAT *LPWMAUDIO3WAVEFORMAT;
typedef ULONG LSA_OPERATIONAL_MODE;
typedef enum _MOUSE_RESET_SUBSTATE MOUSE_RESET_SUBSTATE;
typedef UCHAR NDIS_802_11_RATES_EX[16];
typedef enum _NDIS_HARDWARE_STATUS NDIS_HARDWARE_STATUS;
typedef enum _NDIS_MAC_PACKET_TYPE NDIS_MAC_PACKET_TYPE;
typedef enum _NDIS_PER_PACKET_INFO NDIS_PER_PACKET_INFO;
typedef enum _NDIS_PHYSICAL_MEDIUM NDIS_PHYSICAL_MEDIUM;
typedef enum _NDIS_SHUTDOWN_ACTION NDIS_SHUTDOWN_ACTION;
typedef enum _03AEA90D0BBEF9102658D6C1846F75AB NLB_HOOK_API_VERSION;
typedef DIGIREALWAVEFORMAT *NPDIGIREALWAVEFORMAT;
typedef DVIADPCMWAVEFORMAT *NPDVIADPCMWAVEFORMAT;
typedef IMAADPCMWAVEFORMAT *NPIMAADPCMWAVEFORMAT;
typedef OLIADPCMWAVEFORMAT *NPOLIADPCMWAVEFORMAT;
typedef void ( *PAGP_RELEASE_VIRTUAL)(PVOID HwDeviceExtension, PVOID VirtualReserveContext);
typedef enum _BDCB_CLASSIFICATION *PBDCB_CLASSIFICATION;
typedef enum _CDROM_OPC_INFO_TYPE *PCDROM_OPC_INFO_TYPE;
typedef enum _CDROM_SPEED_REQUEST *PCDROM_SPEED_REQUEST;
typedef enum _CH_DESCRIPTION_TYPE *PCH_DESCRIPTION_TYPE;
typedef  IMAGE_THUNK_DATA32 *PCIMAGE_THUNK_DATA32;
typedef  IMAGE_THUNK_DATA64 *PCIMAGE_THUNK_DATA64;
typedef UINT32 *PCLS_CONTAINER_STATE;
typedef void (*PCMP_MONITOR_ROUTINE)(PCMP_MONITOR_INFO MonitorInfo);
typedef DIGIADPCMWAVEFORMAT *PDIGIADPCMWAVEFORMAT;
typedef enum _DISK_SNAPSHOT_STATE *PDISK_SNAPSHOT_STATE;
typedef enum _DOT11_KEY_DIRECTION *PDOT11_KEY_DIRECTION;
typedef enum _DOT11_WFD_SCAN_TYPE *PDOT11_WFD_SCAN_TYPE;
typedef enum _FLT_FILESYSTEM_TYPE *PFLT_FILESYSTEM_TYPE;
typedef PVOID (*PFNKSDEFAULTALLOCATE)(PVOID Context);
typedef void (*PFNKSDELETEALLOCATOR)(PVOID Context);
typedef enum _FPDT_RECORD_SUBTYPE *PFPDT_RECORD_SUBTYPE;
typedef void ( *PHW_PRIORITY_ROUTINE)(PVOID Context);
typedef IMAGE_AUX_SYMBOL_EX *PIMAGE_AUX_SYMBOL_EX;
typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY;
typedef void (*PINTERFACE_REFERENCE)(PVOID Context);
typedef enum _6BC93927B2FCDA47A41BC70D4867097B *PISCSI_NIC_LINKSTATE;
typedef enum _KEYBOARD_SCAN_STATE *PKEYBOARD_SCAN_STATE;
typedef enum _KINTERRUPT_POLARITY *PKINTERRUPT_POLARITY;
typedef enum _99797C396B1D447BBE63E5346EF4FE3A *PKSPIN_COMMUNICATION;
typedef enum _2A33936B3139EB9E66CA5E1EA8E4A87B PMI_MEASUREMENT_TYPE;
typedef enum _4BE57A986B4F72C371F36A34EB044977 PMI_MEASUREMENT_UNIT;
typedef enum _MM_ROTATE_DIRECTION *PMM_ROTATE_DIRECTION;
typedef enum _NDIS_INTERFACE_TYPE *PNDIS_INTERFACE_TYPE;
typedef enum _NDIS_INTERRUPT_TYPE *PNDIS_INTERRUPT_TYPE;
typedef enum _NDIS_PARAMETER_TYPE *PNDIS_PARAMETER_TYPE;
typedef enum _NDIS_PROCESSOR_TYPE *PNDIS_PROCESSOR_TYPE;
typedef enum _NET_IF_ADMIN_STATUS *PNET_IF_ADMIN_STATUS;
typedef GUID *PNET_IF_NETWORK_GUID;
typedef enum _NL_NETWORK_CATEGORY *PNL_NETWORK_CATEGORY;
typedef OBJECT_ATTRIBUTES32 *POBJECT_ATTRIBUTES32;
typedef OBJECT_ATTRIBUTES64 *POBJECT_ATTRIBUTES64;
typedef enum _CLFS_IOSTATS_CLASS **PPCLFS_IOSTATS_CLASS;
typedef enum _POWER_PLATFORM_ROLE *PPOWER_PLATFORM_ROLE;
typedef enum _B5A4B5A656201D85B4765723CAC74A95 *PPO_WAKE_SOURCE_TYPE;
typedef enum _PROCESSOR_CACHE_TYPE PROCESSOR_CACHE_TYPE;
typedef enum _RX_DISPATCHER_STATE_ *PRX_DISPATCHER_STATE;
typedef enum _RX_WORK_QUEUE_STATE_ *PRX_WORK_QUEUE_STATE;
typedef enum _SCO_INDICATION_CODE *PSCO_INDICATION_CODE;
typedef PVOID PSECURITY_DESCRIPTOR;
typedef enum _SECURITY_LOGON_TYPE *PSECURITY_LOGON_TYPE;
typedef enum _STORAGE_PROPERTY_ID *PSTORAGE_PROPERTY_ID;
typedef enum _VPD_IDENTIFIER_TYPE *PVPD_IDENTIFIER_TYPE;
typedef enum _WHEA_ERROR_SEVERITY *PWHEA_ERROR_SEVERITY;
typedef enum _WWAN_CELLULAR_CLASS *PWWAN_CELLULAR_CLASS;
typedef enum _WWAN_EMERGENCY_MODE *PWWAN_EMERGENCY_MODE;
typedef enum _WWAN_REGISTER_STATE *PWWAN_REGISTER_STATE;
typedef void  RTL_AVL_FREE_ROUTINE(struct _RTL_AVL_TABLE *Table, PVOID Buffer);
typedef TDI_CONNECTION_INFO RXCE_CONNECTION_INFO;
typedef ULONG SECURITY_INFORMATION;
typedef enum _66CFC4768C639F377503F8F40E82D750 SFFPROT_VERIFY_STATE;
typedef void (*STOR_CLEANUP_TRACING)(PVOID Arg1);
typedef XVARIABLE_NAME SYSENV_VARIABLE_NAME;
typedef enum _TAPE_ALERT_INFO_TYPE TAPE_ALERT_INFO_TYPE;
typedef enum _TOKEN_ELEVATION_TYPE TOKEN_ELEVATION_TYPE;
typedef enum _TRANSFER_COUNT_UNITS TRANSFER_COUNT_UNITS;
struct TRANSPORT_SETTING_ID {GUID Guid;};
typedef enum _WHEA_RAW_DATA_FORMAT WHEA_RAW_DATA_FORMAT;
typedef enum _WWAN_REGISTER_ACTION WWAN_REGISTER_ACTION;
typedef enum _WWAN_USSD_EVENT_TYPE WWAN_USSD_EVENT_TYPE;
struct _API_SET_VALUE_ENTRY {ULONG NameOffset;ULONG NameLength;ULONG ValueOffset;ULONG ValueLength;};
struct _AVC_EXT_PLUG_COUNTS {ULONG ExtInputs;ULONG ExtOutputs;};
struct _AddRADIUSServer_OUT {ULONG Status;};
struct _BDA_ISDBCAS_EMG_REQ {BYTE bCLA;BYTE bINS;BYTE bP1;BYTE bP2;BYTE bLC;BYTE bCardId[6];BYTE bProtocol;BYTE bCABroadcasterGroupId;BYTE bMessageControl;BYTE bMessageCode[1];};
struct _BDA_RATING_PINRESET {BYTE bPinLength;BYTE argbNewPin[1];};
struct _BDA_SIGNAL_TIMEOUTS {ULONG ulCarrierTimeoutMs;ULONG ulScanningTimeoutMs;ULONG ulTuningTimeoutMs;};
struct _BIT_RATE_ADJUSTMENT { ULONG DNumerator; ULONG DDivisor;};
struct _CDB___CDB6READWRITE {UCHAR OperationCode;unsigned char LogicalBlockMsb1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR LogicalBlockMsb0;UCHAR LogicalBlockLsb;UCHAR TransferBlocks;UCHAR Control;};
struct _CDB___MEDIA_REMOVAL {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR Reserved2[2];unsigned char Prevent : 1;unsigned char Persistant : 1;unsigned char Reserved3 : 6;UCHAR Control;};
struct _CDB___MODE_SELECT10 {UCHAR OperationCode;unsigned char SPBit : 1;unsigned char Reserved1 : 3;unsigned char PFBit : 1;unsigned char LogicalUnitNumber : 3;UCHAR Reserved2[5];UCHAR ParameterListLength[2];UCHAR Control;};
struct _CDB___NEC_READ_CDDA {UCHAR OperationCode;UCHAR Reserved0;UCHAR LogicalBlockByte0;UCHAR LogicalBlockByte1;UCHAR LogicalBlockByte2;UCHAR LogicalBlockByte3;UCHAR Reserved1;UCHAR TransferBlockByte0;UCHAR TransferBlockByte1;UCHAR Control;};
struct _CDB___READ_POSITION {UCHAR Operation;unsigned char BlockType : 1;unsigned char Reserved1 : 4;unsigned char Lun : 3;UCHAR Reserved2[7];UCHAR Control;};
struct _CDB___SET_STREAMING {UCHAR OperationCode;UCHAR Reserved[8];UCHAR ParameterListLength[2];UCHAR Control;};
struct _D3DKMDT_PALETTEDATA {BYTE Red;BYTE Green;BYTE Blue;BYTE Unused;};
struct _DMA_ADAPTER_INFO_V1 {ULONG ReadDmaCounterAvailable;ULONG ScatterGatherLimit;ULONG DmaAddressWidth;ULONG Flags;ULONG MinimumTransferUnit;};
struct _DXGKARG_RESETENGINE {UINT NodeOrdinal;UINT EngineOrdinal;UINT LastAbortedFenceId;};
struct _DXGKARG_STOPCAPTURE {HANDLE hAllocation;};
struct _ELEMENT_STATUS_PAGE {UCHAR ElementType;unsigned char Reserved1 : 6;unsigned char AVolTag : 1;unsigned char PVolTag : 1;UCHAR ElementDescriptorLength[2];UCHAR Reserved2;UCHAR DescriptorByteCount[3];};
struct _FILE_EA_INFORMATION {ULONG EaSize;};
struct _GetFC4Statistics_IN {UCHAR PortWWN[8];UCHAR FC4Type;};
struct _GetFCPStatistics_IN {HBAScsiID ScsiId;};
struct _HIDP_GETCOLDESC_DBG {ULONG BreakOffset;ULONG ErrorCode;ULONG Args[6];};
struct _IDE_ERROR_LOG_ENTRY {UCHAR IrbStatus;UCHAR Channel;UCHAR TargetId;UCHAR Lun;UCHAR UniqueId;UCHAR DumpDataSize;UCHAR DumpData[1];};
struct _IPV6_ROUTING_HEADER {UCHAR NextHeader;UCHAR Length;UCHAR RoutingType;UCHAR SegmentsLeft;UCHAR Reserved[4];};
struct _KCRM_MARSHAL_HEADER {ULONG VersionMajor;ULONG VersionMinor;ULONG NumProtocols;ULONG Unused;};
struct _KS_COPY_MACROVISION {ULONG MACROVISIONLevel;};
struct _LINE_ADDRESS_STATUS {ULONG ulTotalSize;ULONG ulNeededSize;ULONG ulUsedSize;ULONG ulNumInUse;ULONG ulNumActiveCalls;ULONG ulNumOnHoldCalls;ULONG ulNumOnHoldPendCalls;ULONG ulAddressFeatures;ULONG ulNumRingsNoAnswer;ULONG ulForwardNumEntries;ULONG ulForwardSize;ULONG ulForwardOffset;ULONG ulTerminalModesSize;ULONG ulTerminalModesOffset;ULONG ulDevSpecificSize;ULONG ulDevSpecificOffset;};
struct _LogoutFromTarget_IN {ULONGLONG UniqueSessionId;};
struct _MSNdis_CoMacOptions {ULONG NdisCoMacOptions;};
struct _MSNdis_CoMediaInUse {ULONG NumberElements;ULONG NdisCoMediaInUse[1];};
struct _MSNdis_ReceiveError {ULONG NdisReceiveError;};
struct _NDIS_PROCESSOR_INFO {ULONG CpuNumber;ULONG PhysicalPackageId;ULONG CoreId;ULONG HyperThreadID;};
struct _OBJECT_ATTRIBUTES32 {ULONG Length;ULONG RootDirectory;ULONG ObjectName;ULONG Attributes;ULONG SecurityDescriptor;ULONG SecurityQualityOfService;};
struct _PAR_SET_INFORMATION {UCHAR Init;};
struct _PCC_SUBSPACE_HEADER {UCHAR Type;UCHAR Length;};
struct _POWER_USER_PRESENCE {POWER_USER_PRESENCE_TYPE UserPresence;};
struct _PO_WAKE_SOURCE_INFO {ULONG Count;ULONG Offsets[1];};
struct _QUERY_PATH_RESPONSE {ULONG LengthAccepted;};
struct _READ_LOG_SECTORS_IN {UCHAR LogAddress;UCHAR SectorCount;};
struct _SINGLE_LIST_ENTRY32 {ULONG Next;};
struct _ScsiReadCapacity_IN {ULONGLONG UniqueSessionId;ULONGLONG Lun;};
struct _TAPE_GET_STATISTICS {ULONG Operation;};
struct _WSK_DATA_INDICATION {struct _WSK_DATA_INDICATION *Next;WSK_BUF Buffer;};
struct oligsmwaveformat_tag {WAVEFORMATEX wfx;};
struct olioprwaveformat_tag {WAVEFORMATEX wfx;};
struct olisbcwaveformat_tag {WAVEFORMATEX wfx;};
typedef enum _BDCB_CLASSIFICATION BDCB_CLASSIFICATION;
typedef enum _CDROM_OPC_INFO_TYPE CDROM_OPC_INFO_TYPE;
typedef enum _CDROM_SPEED_REQUEST CDROM_SPEED_REQUEST;
typedef enum _CH_DESCRIPTION_TYPE CH_DESCRIPTION_TYPE;
typedef UINT32 CLS_CONTAINER_STATE;
typedef enum _D3DKMDT_COLOR_BASIS D3DKMDT_COLOR_BASIS;
typedef enum _DISK_SNAPSHOT_STATE DISK_SNAPSHOT_STATE;
typedef enum _DOT11_KEY_DIRECTION DOT11_KEY_DIRECTION;
typedef enum _DOT11_WFD_SCAN_TYPE DOT11_WFD_SCAN_TYPE;
typedef enum _DXGK_INTERRUPT_TYPE DXGK_INTERRUPT_TYPE;
typedef enum _BEAB8038D4ED47FA577F0642A94E1F77 ENTROPY_SOURCE_TYPE;
typedef enum _FLT_FILESYSTEM_TYPE FLT_FILESYSTEM_TYPE;
typedef enum _FPDT_RECORD_SUBTYPE FPDT_RECORD_SUBTYPE;
typedef IF_PHYSICAL_ADDRESS_LH IF_PHYSICAL_ADDRESS;
typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;
typedef PDXGK_START_INFO IN_PDXGK_START_INFO;
typedef PQUERY_INTERFACE IN_PQUERY_INTERFACE;
typedef enum _6BC93927B2FCDA47A41BC70D4867097B ISCSI_NIC_LINKSTATE;
typedef enum _KEYBOARD_SCAN_STATE KEYBOARD_SCAN_STATE;
typedef enum _KINTERRUPT_POLARITY KINTERRUPT_POLARITY;
typedef enum _0D1125125EE6964C07B35C2F5E1C590A KSEVENT_VIDCAPTOSTI;
typedef enum _3A98730CE8FA5C41DCBE091A69EDD8A4 KSEVENT_VPVBINOTIFY;
typedef enum _99797C396B1D447BBE63E5346EF4FE3A KSPIN_COMMUNICATION;
typedef enum _CFDA6B458BFD5441F09F532A42BB2B66 KSPROPERTY_COPYPROT;
typedef enum _CE9CE3A0AB54AFEEDAB00D1A3DF6009E KSPROPERTY_EXTXPORT;
typedef enum _2D06E770D8F86C31A6EBC72A59D3B380 KSPROPERTY_MPEG2VID;
typedef enum _FF3C8108EE41D1B5391303520A7710DC KSPROPERTY_TIMECODE;
typedef enum _729DCE355D7523E6CA017E6077BAB356 KSPROPERTY_TOPOLOGY;
typedef enum _270C55D2D3E5E2B5C5E1C425B61D62C1 KSPROPERTY_VPCONFIG;
typedef enum _27AD37380C8900BF8828E9942DAD6F74 KS_AMPixAspectRatio;
typedef PVOID L2CAP_SERVER_HANDLE;
typedef  SCARD_IO_REQUEST *LPCSCARD_IO_REQUEST;
typedef DIGIFIXWAVEFORMAT *LPDIGIFIXWAVEFORMAT;
typedef DIGISTDWAVEFORMAT *LPDIGISTDWAVEFORMAT;
typedef ECHOSC1WAVEFORMAT *LPECHOSC1WAVEFORMAT;
typedef OLICELPWAVEFORMAT *LPOLICELPWAVEFORMAT;
typedef enum _MEMORY_CACHING_TYPE MEMORY_CACHING_TYPE;
typedef enum _MM_ROTATE_DIRECTION MM_ROTATE_DIRECTION;
typedef enum _80B40C51F983DF6470D1FE94B60AC2DA MULTICAST_MODE_TYPE;
typedef ULONG NDIS_802_11_ANTENNA;
typedef ULONGLONG NDIS_802_11_KEY_RSC;
typedef enum _NDIS_INTERFACE_TYPE NDIS_INTERFACE_TYPE;
typedef enum _NDIS_INTERRUPT_TYPE NDIS_INTERRUPT_TYPE;
typedef enum _NDIS_PARAMETER_TYPE NDIS_PARAMETER_TYPE;
typedef enum _NDIS_PROCESSOR_TYPE NDIS_PROCESSOR_TYPE;
typedef void NDIS_TIMER_FUNCTION(PVOID SystemSpecific1, PVOID FunctionContext, PVOID SystemSpecific2, PVOID SystemSpecific3);
typedef enum _NET_IF_ADMIN_STATUS NET_IF_ADMIN_STATUS;
typedef GUID NET_IF_NETWORK_GUID;
typedef enum _NL_NETWORK_CATEGORY NL_NETWORK_CATEGORY;
typedef DIGIFIXWAVEFORMAT *NPDIGIFIXWAVEFORMAT;
typedef DIGISTDWAVEFORMAT *NPDIGISTDWAVEFORMAT;
typedef ECHOSC1WAVEFORMAT *NPECHOSC1WAVEFORMAT;
typedef OLICELPWAVEFORMAT *NPOLICELPWAVEFORMAT;
typedef enum _OFFLOAD_OPERATION_E OFFLOAD_OPERATION_E;
typedef ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE;
typedef enum BDA_MULTICAST_MODE *PBDA_MULTICAST_MODE;
typedef ULONG *PBDA_TOPOLOGY_JOINT;
typedef enum _BDCB_CALLBACK_TYPE *PBDCB_CALLBACK_TYPE;
typedef enum _CLFS_IOSTATS_CLASS *PCLFS_IOSTATS_CLASS;
typedef void (*PCMP_NOTIFY_ROUTINE)(PCMP_NOTIFY_INFO NotifyInfo);
typedef  OBJECT_ATTRIBUTES *PCOBJECT_ATTRIBUTES;
typedef enum _CONFIGURATION_TYPE *PCONFIGURATION_TYPE;
typedef void (*PCONTEXT_DESTRUCTOR)(PVOID Context);
typedef enum _DEVICE_POWER_STATE *PDEVICE_POWER_STATE;
typedef DIGIREALWAVEFORMAT *PDIGIREALWAVEFORMAT;
typedef enum _DOT11_OFFLOAD_TYPE *PDOT11_OFFLOAD_TYPE;
typedef enum _DOT11_UPDATE_IE_OP *PDOT11_UPDATE_IE_OP;
typedef DVIADPCMWAVEFORMAT *PDVIADPCMWAVEFORMAT;
typedef FLOATING_SAVE_AREA *PFLOATING_SAVE_AREA;
typedef HBA_CALLBACKHANDLE *PHBA_CALLBACKHANDLE;
typedef void (*PI8042_QUEUE_PACKET)(PVOID Context);
typedef enum _7C36316A4B7BB52D1F56412D2D347D9B *PICMP4_UNREACH_CODE;
typedef enum _IDE_OPERATION_MODE *PIDE_OPERATION_MODE;
typedef IMAADPCMWAVEFORMAT *PIMAADPCMWAVEFORMAT;
typedef IMAGE_THUNK_DATA32 *PIMAGE_THUNK_DATA32;
typedef IMAGE_THUNK_DATA64 *PIMAGE_THUNK_DATA64;
typedef enum _5CBF14E525F8BDCEBA8D0763A604A116 *PISCSIIPADDRESSTYPE;
typedef enum _3C624B7E45B4A5C0CACC01D69E2B0D62 *PISCSI_DIGEST_TYPES;
typedef enum _5F41E4353E4B35443F0B47CBEC1499B3 *PKD_CALLBACK_ACTION;
typedef enum _LOCK_HOLDING_STATE *PLOCK_HOLDING_STATE;
typedef UNICODE_STRING *PLSA_UNICODE_STRING;
typedef UCHAR *PMRX_NET_ROOT_STATE;
typedef enum _NDIS_PM_WOL_PACKET *PNDIS_PM_WOL_PACKET;
typedef enum _NDIS_POWER_PROFILE *PNDIS_POWER_PROFILE;
typedef CM_PARTIAL_RESOURCE_LIST *PNDIS_RESOURCE_LIST;
typedef enum _NET_IF_ACCESS_TYPE *PNET_IF_ACCESS_TYPE;
typedef enum _NET_IF_OPER_STATUS *PNET_IF_OPER_STATUS;
typedef enum _NET_PNP_EVENT_CODE *PNET_PNP_EVENT_CODE;
typedef OLIADPCMWAVEFORMAT *POLIADPCMWAVEFORMAT;
typedef enum _POWER_PLATFORM_ROLE POWER_PLATFORM_ROLE;
typedef enum _B5A4B5A656201D85B4765723CAC74A95 PO_WAKE_SOURCE_TYPE;
typedef enum _CLFS_CONTEXT_MODE **PPCLFS_CONTEXT_MODE;
typedef enum _CLS_IOSTATS_CLASS **PPCLS_IOSTATS_CLASS;
typedef PLATFORM_INTERRUPT *PPLATFORM_INTERRUPT;
typedef enum _POWER_REQUEST_TYPE *PPOWER_REQUEST_TYPE;
typedef PREFIX_TABLE_ENTRY *PPREFIX_TABLE_ENTRY;
typedef RTL_BALANCED_LINKS *PRTL_BALANCED_LINKS;
typedef enum _RX_BLOCK_CONDITION *PRX_BLOCK_CONDITION;
typedef PVOID *PSCO_CHANNEL_HANDLE;
typedef enum _SE_AUDIT_OPERATION *PSE_AUDIT_OPERATION;
typedef enum _SOC_SUBSYSTEM_TYPE *PSOC_SUBSYSTEM_TYPE;
typedef enum _STORAGE_MEDIA_TYPE *PSTORAGE_MEDIA_TYPE;
typedef enum _STORAGE_QUERY_TYPE *PSTORAGE_QUERY_TYPE;
typedef enum _SYSTEM_POWER_STATE *PSYSTEM_POWER_STATE;
typedef enum _TPM20_START_METHOD *PTPM20_START_METHOD;
typedef USHORT *PVERSION_DESCRIPTOR;
typedef enum _0BF2F814A5A7EB58DFED44BB484B2203 *PWSK_INSPECT_ACTION;
typedef enum _WWAN_AUTH_PROTOCOL *PWWAN_AUTH_PROTOCOL;
typedef enum _WWAN_PIN_OPERATION *PWWAN_PIN_OPERATION;
typedef enum _WWAN_REGISTER_MODE *PWWAN_REGISTER_MODE;
typedef enum _WWAN_SMS_CDMA_LANG *PWWAN_SMS_CDMA_LANG;
typedef enum _RX_DISPATCHER_STATE_ RX_DISPATCHER_STATE;
typedef enum _RX_FCBTRACKER_CASES RX_FCBTRACKER_CASES;
typedef enum _RX_WORK_QUEUE_STATE_ RX_WORK_QUEUE_STATE;
typedef enum _SCO_INDICATION_CODE SCO_INDICATION_CODE;
typedef enum _FEFB4230E342442E5E029160A828198A SDBUS_FUNCTION_TYPE;
typedef enum _154E8F117D3015A595819B0DB5A6F7BC SD_REQUEST_FUNCTION;
typedef enum _SECURITY_LOGON_TYPE SECURITY_LOGON_TYPE;
typedef enum _C42D9FB212A9AC1E10AA532315005A0D SFFPROT_MEDIA_STATE;
typedef enum _STORAGE_PROPERTY_ID STORAGE_PROPERTY_ID;
typedef enum tagScanModulationTypes ScanModulationTypes;
typedef enum _TABLE_SEARCH_RESULT TABLE_SEARCH_RESULT;
typedef enum _TRANSACTION_OUTCOME TRANSACTION_OUTCOME;
typedef enum _4F70025E697681DF4138B78EC6988F16 VIDEO_PORT_SERVICES;
typedef enum _VPD_IDENTIFIER_TYPE VPD_IDENTIFIER_TYPE;
typedef enum _7F5D1BD59C89064E268CCC053C4C2B9C WELL_KNOWN_SID_TYPE;
typedef enum _WHEA_ERROR_SEVERITY WHEA_ERROR_SEVERITY;
typedef enum _WWAN_CELLULAR_CLASS WWAN_CELLULAR_CLASS;
typedef enum _WWAN_EMERGENCY_MODE WWAN_EMERGENCY_MODE;
typedef enum _WWAN_REGISTER_STATE WWAN_REGISTER_STATE;
struct _AALUSER_PARAMETERS {ULONG UserDefined;};
struct _AddRADIUSServer_IN {ISCSI_IP_Address RADIUSIPAddress;};
struct _CDB___CDB6INQUIRY3 {UCHAR OperationCode;unsigned char EnableVitalProductData : 1;unsigned char CommandSupportData : 1;unsigned char Reserved1 : 6;UCHAR PageCode;UCHAR Reserved2;UCHAR AllocationLength;UCHAR Control;};
struct _CDB___MODE_SENSE10 {UCHAR OperationCode;unsigned char Reserved1 : 3;unsigned char Dbd : 1;unsigned char LongLBAAccepted : 1;unsigned char Reserved2 : 3;unsigned char PageCode : 6;unsigned char Pc : 2;UCHAR SubPageCode;UCHAR Reserved3[3];UCHAR AllocationLength[2];UCHAR Control;};
struct _CDB___PAUSE_RESUME {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR Reserved2[6];UCHAR Action;UCHAR Control;};
struct _CDB___REPAIR_TRACK {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char Reserved1 : 7;UCHAR Reserved2[2];UCHAR TrackNumber[2];UCHAR Reserved3[3];UCHAR Control;};
struct _D3DDDI_SURFACEINFO {UINT Width;UINT Height;UINT Depth; void *pSysMem;UINT SysMemPitch;UINT SysMemSlicePitch;};
struct _DISPLAY_BRIGHTNESS {UCHAR ucDisplayPolicy;UCHAR ucACBrightness;UCHAR ucDCBrightness;};
struct _DXGK_DMABUFFERCAPS {struct _DXGK_DMABUFFERCAPS___A59CDFCD4842FA309C91AA36896BAA4C PresentDmaBuffer;struct _DXGK_DMABUFFERCAPS___A59CDFCD4842FA309C91AA36896BAA4C PagingDmaBuffer;};
struct _ELEMENT_DESCRIPTOR {UCHAR ElementAddress[2];unsigned char Full : 1;unsigned char Reserved1 : 1;unsigned char Exception : 1;unsigned char Accessible : 1;unsigned char Reserved2 : 4;UCHAR Reserved3;UCHAR AdditionalSenseCode;UCHAR AddSenseCodeQualifier;unsigned char Lun : 3;unsigned char Reserved4 : 1;unsigned char LunValid : 1;unsigned char IdValid : 1;unsigned char Reserved5 : 1;unsigned char NotThisBus : 1;UCHAR BusAddress;UCHAR Reserved6;unsigned char Reserved7 : 6;unsigned char Invert : 1;unsigned char SValid : 1;UCHAR SourceStorageElementAddress[2];};
struct _IMAGE_THUNK_DATA32 {union _IMAGE_THUNK_DATA32___73C2E9E4D5513E54CD9FEBC1C78BE69B u1;};
struct _IMAGE_THUNK_DATA64 {union _IMAGE_THUNK_DATA64___F155400DC8E777EDFF51409B49416578 u1;};
struct _IPV6_OPTION_HEADER {UINT8 Type;UINT8 DataLength;};
struct _IR_TRANSMIT_PARAMS {ULONG_PTR TransmitPortMask;ULONG_PTR CarrierPeriod;ULONG_PTR Flags;ULONG_PTR PulseSize;};
struct _ISCSI_LoginOptions {ULONG InformationSpecified;ULONG HeaderDigest;ULONG DataDigest;ULONG MaximumConnections;ULONG DefaultTime2Wait;ULONG DefaultTime2Retain;ULONG LoginFlags;ULONG AuthType;};
struct _KS_DVDCOPY_CHLGKEY {BYTE ChlgKey[10];BYTE Reserved[2];};
struct _KS_DVDCOPY_DISCKEY {BYTE DiscKey[2048];};
struct _L2CAP_CONFIG_RANGE {USHORT Min;USHORT Max;};
struct _LOWIO_PER_FCB_INFO {LIST_ENTRY PagingIoReadsOutstanding;LIST_ENTRY PagingIoWritesOutstanding;};
struct _MEMORY_POWER_STATE {UCHAR PowerStateValue;UCHAR PowerStateInformationIndex;};
struct _MSFC_FC4STATISTICS {ULONGLONG InputRequests;ULONGLONG OutputRequests;ULONGLONG ControlRequests;ULONGLONG InputMegabytes;ULONGLONG OutputMegabytes;};
struct _MSNdis_CoLinkSpeed {MSNdis_NetworkLinkSpeed NdisCoLinkSpeed;};
struct _MSNdis_TransmitsOk {ULONGLONG NdisTransmitsOk;};
struct _NDIS_CO_LINK_SPEED {ULONG Outbound;ULONG Inbound;};
struct _NDIS_WAN_LINE_DOWN {UCHAR RemoteAddress[6];UCHAR LocalAddress[6];};
struct _READ_CAPACITY_DATA {ULONG LogicalBlockAddress;ULONG BytesPerBlock;};
struct _SDP_TREE_ROOT_NODE {SDP_NODE RootNode;};
struct _SES_PHY_DESCRIPTOR {unsigned char Reserved1 : 4;unsigned char DeviceType : 3;unsigned char Reserved3 : 1;UCHAR Reserved4;unsigned char Reserved5 : 1;unsigned char SmpInitiatorPort : 1;unsigned char StpInitiatorPort : 1;unsigned char SspInitiatorPort : 1;unsigned char Reserved6 : 4;unsigned char SataDevice : 1;unsigned char SmpTargetPort : 1;unsigned char StpTargetPort : 1;unsigned char SspTargetPort : 1;unsigned char Reserved7 : 3;unsigned char SataPortSelector : 1;UCHAR AttachedSASAddress[8];UCHAR SASAddress[8];UCHAR PhyIdentifier;UCHAR Reserved2[7];};
struct _STORAGE_IDLE_POWER {ULONG Version;ULONG Size;unsigned int WakeCapableHint : 1;unsigned int D3ColdSupported : 1;unsigned int Reserved : 30;ULONG D3IdleTimeout;};
struct _SetFC3MgmtInfo_OUT {ULONG HBAStatus;};
struct _TAPE_PHYS_POSITION {ULONG SeekBlockAddress;ULONG SpaceBlockCount;};
struct _TOKEN_AUDIT_POLICY {UCHAR PerUserPolicy[29];};
struct _TOKEN_LINKED_TOKEN {HANDLE LinkedToken;};
struct _TRACK_INFORMATION2 {UCHAR Length[2];UCHAR TrackNumberLsb;UCHAR SessionNumberLsb;UCHAR Reserved4;unsigned char TrackMode : 4;unsigned char Copy : 1;unsigned char Damage : 1;unsigned char Reserved5 : 2;unsigned char DataMode : 4;unsigned char FixedPacket : 1;unsigned char Packet : 1;unsigned char Blank : 1;unsigned char ReservedTrack : 1;unsigned char NWA_V : 1;unsigned char LRA_V : 1;unsigned char Reserved6 : 6;UCHAR TrackStartAddress[4];UCHAR NextWritableAddress[4];UCHAR FreeBlocks[4];UCHAR FixedPacketSize[4];UCHAR TrackSize[4];UCHAR LastRecordedAddress[4];UCHAR TrackNumberMsb;UCHAR SessionNumberMsb;UCHAR Reserved7[2];};
struct _TRACK_INFORMATION3 {UCHAR Length[2];UCHAR TrackNumberLsb;UCHAR SessionNumberLsb;UCHAR Reserved4;unsigned char TrackMode : 4;unsigned char Copy : 1;unsigned char Damage : 1;unsigned char Reserved5 : 2;unsigned char DataMode : 4;unsigned char FixedPacket : 1;unsigned char Packet : 1;unsigned char Blank : 1;unsigned char ReservedTrack : 1;unsigned char NWA_V : 1;unsigned char LRA_V : 1;unsigned char Reserved6 : 6;UCHAR TrackStartAddress[4];UCHAR NextWritableAddress[4];UCHAR FreeBlocks[4];UCHAR FixedPacketSize[4];UCHAR TrackSize[4];UCHAR LastRecordedAddress[4];UCHAR TrackNumberMsb;UCHAR SessionNumberMsb;UCHAR Reserved7[2];UCHAR ReadCompatibilityLba[4];};
struct _VIDEO_PALETTE_DATA {USHORT NumEntries;USHORT FirstEntry;USHORT Colors[1];};
struct _VIDEO_REGISTER_VDM {ULONG MinimumStateSize;};
struct sockaddr_storage_xp {short ss_family;CHAR __ss_pad1[6];long long __ss_align;CHAR __ss_pad2[112];};
struct tagKS_VBIINFOHEADER {ULONG StartLine;ULONG EndLine;ULONG SamplingFrequency;ULONG MinLineStartTime;ULONG MaxLineStartTime;ULONG ActualLineStartTime;ULONG ActualLineEndTime;ULONG VideoStandard;ULONG SamplesPerLine;ULONG StrideInBytes;ULONG BufferSize;};
struct tag_s_RIFFWAVE_inst {BYTE bUnshiftedNote;char chFineTune;char chGain;BYTE bLowNote;BYTE bHighNote;BYTE bLowVelocity;BYTE bHighVelocity;};
typedef enum _ACCESS_REASON_TYPE ACCESS_REASON_TYPE;
typedef ULONG BDA_TOPOLOGY_JOINT;
typedef enum _BDCB_CALLBACK_TYPE BDCB_CALLBACK_TYPE;
typedef enum _CLFS_IOSTATS_CLASS CLFS_IOSTATS_CLASS;
typedef CLS_IO_STATISTICS CLFS_IO_STATISTICS;
typedef enum _CONFIGURATION_TYPE CONFIGURATION_TYPE;
typedef PVOID CONNECTION_CONTEXT;
typedef enum _59247D2B2540BDEE4F717D6204EAE13F CONSTRICTOR_OPTION;
typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;
typedef ULONG DOT11_ASSOC_STATUS;
typedef UCHAR DOT11_DIALOG_TOKEN;
typedef enum _DOT11_OFFLOAD_TYPE DOT11_OFFLOAD_TYPE;
typedef enum _DOT11_UPDATE_IE_OP DOT11_UPDATE_IE_OP;
typedef enum _DXGKMDT_OPM_STATUS DXGKMDT_OPM_STATUS;
typedef enum _DXGK_GDIROP_BITBLT DXGK_GDIROP_BITBLT;
typedef enum _588B79C44B661DAA89A4A63C076A83C8 EPcxConnectionType;
typedef enum _72AC7BAA1D78A7FE74CAD66443B09317 EPxcPortConnection;
typedef enum HBA_fcpbindingtype HBA_FCPBINDINGTYPE;
typedef UCHAR HOOK_IP_ADDRESS_V4[4];
typedef UCHAR HOOK_IP_ADDRESS_V6[16];
typedef void HW_CLEANUP_TRACING(PVOID Arg1);
typedef enum _7C36316A4B7BB52D1F56412D2D347D9B ICMP4_UNREACH_CODE;
typedef enum _0442A98CC757C235E625FFA017269499 IDE_CONTROL_ACTION;
typedef enum _IDE_OPERATION_MODE IDE_OPERATION_MODE;
typedef enum _INTERLOCKED_RESULT INTERLOCKED_RESULT;
typedef enum _IO_PAGING_PRIORITY IO_PAGING_PRIORITY;
typedef enum _5CBF14E525F8BDCEBA8D0763A604A116 ISCSIIPADDRESSTYPE;
typedef enum _3C624B7E45B4A5C0CACC01D69E2B0D62 ISCSI_DIGEST_TYPES;
typedef enum _APCI_IVHD_ENTRY_VARIETY IVHD_ENTRY_VARIETY;
typedef enum _5F41E4353E4B35443F0B47CBEC1499B3 KD_CALLBACK_ACTION;
typedef enum _4359A6DF66D6C0A2E03091CE4CF62226 KSDEGRADE_STANDARD;
typedef enum _CB3435FABEA0A3C4DEC3DC8A5EBD37B4 KSEVENT_CONNECTION;
typedef enum _62D95A1861CF901152B53DFA047F6B81 KSINTERFACE_FILEIO;
typedef enum _26ED6592DCB8847128015546CAE6B6BB KSMETHOD_BDA_WMDRM;
typedef enum _2CD358AE72CA35E88B6E5377F4286C0E KSMETHOD_WAVETABLE;
typedef enum _3A35E47CE092B3ED2AE8A1283BD096A7 KSMICARRAY_MICTYPE;
typedef enum _27EA88566304FD4A859B4EB0EE874253 KSPROPERTY_GENERAL;
typedef enum _2E38A7C1F534E42343A61A8545C8A30E KSPROPERTY_QUALITY;
typedef enum _56F286DAD20CDECB067008B7BD4809D6 KSPROPERTY_RTAUDIO;
typedef enum _67CB246AF4B587686CE10AFAD452B210 KSPROPERTY_SERVICE;
typedef enum _46FFE91252AC4BB1103ECF2E486A148F KS_CompressionCaps;
typedef enum _LOCK_HOLDING_STATE LOCK_HOLDING_STATE;
typedef ADPCMEWAVEFORMAT *LPADPCMEWAVEFORMAT;
typedef GSM610WAVEFORMAT *LPGSM610WAVEFORMAT;
typedef OLIGSMWAVEFORMAT *LPOLIGSMWAVEFORMAT;
typedef OLIOPRWAVEFORMAT *LPOLIOPRWAVEFORMAT;
typedef OLISBCWAVEFORMAT *LPOLISBCWAVEFORMAT;
typedef SCARD_T0_REQUEST *LPSCARD_T0_REQUEST;
typedef SCARD_T1_REQUEST *LPSCARD_T1_REQUEST;
typedef SONARCWAVEFORMAT *LPSONARCWAVEFORMAT;
typedef VOLUMEWAVEFILTER *LPVOLUMEWAVEFILTER;
typedef UNICODE_STRING LSA_UNICODE_STRING;
typedef enum _DF2051BCD5E4FC2C953B94B617C6FC67 MCA_EXCEPTION_TYPE;
typedef UCHAR MRX_NET_ROOT_STATE;
typedef enum _NDIS_PM_WOL_PACKET NDIS_PM_WOL_PACKET;
typedef enum _NDIS_POWER_PROFILE NDIS_POWER_PROFILE;
typedef void NDIS_PROC_CALLBACK(struct _NDIS_WORK_ITEM *WorkItem, PVOID Context);
typedef CM_PARTIAL_RESOURCE_LIST NDIS_RESOURCE_LIST;
typedef enum _NET_IF_ACCESS_TYPE NET_IF_ACCESS_TYPE;
typedef enum _NET_IF_OPER_STATUS NET_IF_OPER_STATUS;
typedef NET_IF_RCV_ADDRESS_LH NET_IF_RCV_ADDRESS;
typedef enum _NET_PNP_EVENT_CODE NET_PNP_EVENT_CODE;
typedef ADPCMEWAVEFORMAT *NPADPCMEWAVEFORMAT;
typedef GSM610WAVEFORMAT *NPGSM610WAVEFORMAT;
typedef OLIGSMWAVEFORMAT *NPOLIGSMWAVEFORMAT;
typedef OLIOPRWAVEFORMAT *NPOLIOPRWAVEFORMAT;
typedef OLISBCWAVEFORMAT *NPOLISBCWAVEFORMAT;
typedef SONARCWAVEFORMAT *NPSONARCWAVEFORMAT;
typedef VOLUMEWAVEFILTER *NPVOLUMEWAVEFILTER;
typedef ACCESS_DENIED_ACE *PACCESS_DENIED_ACE;
typedef enum _2A8472B1E6C2A8931738C92032F03B5A *PBUS_QUERY_ID_TYPE;
typedef  EVENT_DESCRIPTOR *PCEVENT_DESCRIPTOR;
typedef  KSPIN_DESCRIPTOR *PCKSPIN_DESCRIPTOR;
typedef enum _CLASS_DEBUG_LEVEL *PCLASS_DEBUG_LEVEL;
typedef enum _CLFS_CONTEXT_MODE *PCLFS_CONTEXT_MODE;
typedef enum _CLS_IOSTATS_CLASS *PCLS_IOSTATS_CLASS;
typedef USHORT *PCONNECTION_HANDLE;
typedef enum _DEVICE_WAKE_DEPTH *PDEVICE_WAKE_DEPTH;
typedef DIGIFIXWAVEFORMAT *PDIGIFIXWAVEFORMAT;
typedef DIGISTDWAVEFORMAT *PDIGISTDWAVEFORMAT;
typedef ECHOSC1WAVEFORMAT *PECHOSC1WAVEFORMAT;
typedef enum _ENUMERATOR_ACTION *PENUMERATOR_ACTION;
typedef void (*PFNKSSTREAMPOINTER)(PKSSTREAM_POINTER StreamPointer);
typedef GENERAL_LOOKASIDE *PGENERAL_LOOKASIDE;
typedef PVOID PHBA_ENTRYPOINTSV2;
typedef void ( *PHW_CLOCK_FUNCTION)(PHW_TIME_CONTEXT HwTimeContext);
typedef enum _IDE_CALLBACK_TYPE *PIDE_CALLBACK_TYPE;
typedef enum _IRQ_DEVICE_POLICY *PIRQ_DEVICE_POLICY;
typedef enum _450AB481C71E837C7D97DD5198D29691 *PKD_NAMESPACE_ENUM;
typedef KERNEL_USER_TIMES *PKERNEL_USER_TIMES;
typedef enum _LLDP_ADMIN_STATUS *PLLDP_ADMIN_STATUS;
typedef enum _NDIS_FRAME_HEADER *PNDIS_FRAME_HEADER;
typedef CM_MCA_POS_DATA *PNDIS_MCA_POS_DATA;
typedef enum _NDIS_REQUEST_TYPE *PNDIS_REQUEST_TYPE;
typedef enum _NL_BANDWIDTH_FLAG *PNL_BANDWIDTH_FLAG;
typedef enum _NL_NEIGHBOR_STATE *PNL_NEIGHBOR_STATE;
typedef enum _5DB038E67C93660546D046F3C51D1C54 *PNL_ROUTE_PROTOCOL;
typedef NOTIFICATION_INFO_WXP *PNOTIFICATION_INFO;
typedef OBJECT_ATTRIBUTES *POBJECT_ATTRIBUTES;
typedef OLICELPWAVEFORMAT *POLICELPWAVEFORMAT;
typedef enum _POWER_REQUEST_TYPE POWER_REQUEST_TYPE;
typedef enum _CLS_CONTEXT_MODE **PPCLS_CONTEXT_MODE;
typedef enum _PCW_CALLBACK_TYPE *PPCW_CALLBACK_TYPE;
typedef enum _RAID_SYSTEM_POWER *PRAID_SYSTEM_POWER;
typedef REQ_NOTIFY_CHANGE *PREQ_NOTIFY_CHANGE;
typedef REQ_NT_IO_CONTROL *PREQ_NT_IO_CONTROL;
typedef RTL_GENERIC_TABLE *PRTL_GENERIC_TABLE;
typedef enum _SECPKG_CRED_CLASS *PSECPKG_CRED_CLASS;
typedef PVOID PSMHBA_ENTRYPOINTS;
typedef enum _4CF302B10AC45D566291D4F82FF21449 *PSTOR_POWER_ACTION;
typedef IMAGE_OS2_HEADER *PUIMAGE_OS2_HEADER;
typedef PVOID PUSB_DEVICE_HANDLE;
typedef enum VIDEO_DEBUG_LEVEL *PVIDEO_DEBUG_LEVEL;
typedef enum _VIDEO_POWER_STATE *PVIDEO_POWER_STATE;
typedef enum _WWAN_CONTEXT_TYPE *PWWAN_CONTEXT_TYPE;
typedef enum _RX_BLOCK_CONDITION RX_BLOCK_CONDITION;
typedef enum _RX_NC_CHECK_STATUS RX_NC_CHECK_STATUS;
typedef PVOID SCO_CHANNEL_HANDLE;
typedef ULONG SCSI_SENSE_OPTIONS;
typedef enum _44DC41ACBBA2F30AE6B8641A443941EE SDPROP_MEDIA_STATE;
typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;
typedef enum _SE_AUDIT_OPERATION SE_AUDIT_OPERATION;
typedef enum _SOC_SUBSYSTEM_TYPE SOC_SUBSYSTEM_TYPE;
typedef enum _STORAGE_MEDIA_TYPE STORAGE_MEDIA_TYPE;
typedef enum _STORAGE_QUERY_TYPE STORAGE_QUERY_TYPE;
typedef enum _6482D7A0F8ECEE932DF178E2624E51B8 STREAM_BUFFER_TYPE;
typedef enum _EEDC202E1D6A59707A46C9F564CBCDC1 STREAM_DEBUG_LEVEL;
typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;
typedef enum _TPM20_START_METHOD TPM20_START_METHOD;
typedef USHORT VERSION_DESCRIPTOR;
typedef enum _WRITE_CACHE_CHANGE WRITE_CACHE_CHANGE;
typedef enum _WRITE_CACHE_ENABLE WRITE_CACHE_ENABLE;
typedef enum _0BF2F814A5A7EB58DFED44BB484B2203 WSK_INSPECT_ACTION;
typedef enum _WWAN_AUTH_PROTOCOL WWAN_AUTH_PROTOCOL;
typedef enum _WWAN_PIN_OPERATION WWAN_PIN_OPERATION;
typedef enum _WWAN_REGISTER_MODE WWAN_REGISTER_MODE;
typedef enum _WWAN_SMS_CDMA_LANG WWAN_SMS_CDMA_LANG;
struct _ATM_LIJ_CALLID_IE {ULONG Identifier;};
struct _AddiSNSServer_OUT {ULONG Status;};
struct _BDA_TABLE_SECTION {ULONG ulPrimarySectionId;ULONG ulSecondarySectionId;ULONG ulcbSectionLength;ULONG argbSectionData[1];};
struct _CDB___BLANK_MEDIA {UCHAR OperationCode;unsigned char BlankType : 3;unsigned char Reserved1 : 1;unsigned char Immediate : 1;unsigned char Reserved2 : 3;UCHAR AddressOrTrack[4];UCHAR Reserved3[5];UCHAR Control;};
struct _CDB___CDB6GENERIC {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char CommandUniqueBits : 4;unsigned char LogicalUnitNumber : 3;UCHAR CommandUniqueBytes[3];unsigned char Link : 1;unsigned char Flag : 1;unsigned char Reserved : 4;unsigned char VendorUnique : 2;};
struct _CDB___CDB6INQUIRY {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR PageCode;UCHAR IReserved;UCHAR AllocationLength;UCHAR Control;};
struct _CDB___CLOSE_TRACK {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char Reserved1 : 7;unsigned char Track : 1;unsigned char Session : 1;unsigned char Reserved2 : 6;UCHAR Reserved3;UCHAR TrackNumber[2];UCHAR Reserved4[3];UCHAR Control;};
struct _CDB___LOAD_UNLOAD {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char Reserved1 : 4;unsigned char Lun : 3;UCHAR Reserved2[2];unsigned char Start : 1;unsigned char LoadEject : 1;unsigned char Reserved3 : 6;UCHAR Reserved4[3];UCHAR Slot;UCHAR Reserved5[3];};
struct _CDB___MECH_STATUS {UCHAR OperationCode;unsigned char Reserved : 5;unsigned char Lun : 3;UCHAR Reserved1[6];UCHAR AllocationLength[2];UCHAR Reserved2[1];UCHAR Control;};
struct _CDB___MODE_SELECT {UCHAR OperationCode;unsigned char SPBit : 1;unsigned char Reserved1 : 3;unsigned char PFBit : 1;unsigned char LogicalUnitNumber : 3;UCHAR Reserved2[2];UCHAR ParameterListLength;UCHAR Control;};
struct _CDB___MOVE_MEDIUM {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR TransportElementAddress[2];UCHAR SourceElementAddress[2];UCHAR DestinationElementAddress[2];UCHAR Reserved2[2];unsigned char Flip : 1;unsigned char Reserved3 : 7;UCHAR Control;};
struct _CDB___READ_CD_MSF {UCHAR OperationCode;unsigned char RelativeAddress : 1;unsigned char Reserved1 : 1;unsigned char ExpectedSectorType : 3;unsigned char Lun : 3;UCHAR Reserved2;UCHAR StartingM;UCHAR StartingS;UCHAR StartingF;UCHAR EndingM;UCHAR EndingS;UCHAR EndingF;unsigned char Reserved4 : 1;unsigned char ErrorFlags : 2;unsigned char IncludeEDC : 1;unsigned char IncludeUserData : 1;unsigned char HeaderCode : 2;unsigned char IncludeSyncData : 1;unsigned char SubChannelSelection : 3;unsigned char Reserved5 : 5;UCHAR Control;};
struct _CDB___READ_HEADER {UCHAR OperationCode;unsigned char Reserved1 : 1;unsigned char Msf : 1;unsigned char Reserved2 : 3;unsigned char Lun : 3;UCHAR LogicalBlockAddress[4];UCHAR Reserved3;UCHAR AllocationLength[2];UCHAR Control;};
struct _CDB___REPORT_LUNS {UCHAR OperationCode;UCHAR Reserved1[5];UCHAR AllocationLength[4];UCHAR Reserved2[1];UCHAR Control;};
struct _CDROM_READ_TOC_EX {unsigned char Format : 4;unsigned char Reserved1 : 3;unsigned char Msf : 1;UCHAR SessionTrack;UCHAR Reserved2;UCHAR Reserved3;};
struct _CLASS_WORKING_SET {ULONG Size;ULONG XferPacketsWorkingSetMaximum;ULONG XferPacketsWorkingSetMinimum;};
struct _COMMIT_POLICY_OUT {ULONG Status;};
struct _CSRT_TABLE_HEADER {DESCRIPTION_HEADER Header;};
struct _DOT4_DC_OPEN_DATA {unsigned char bHsid;unsigned char fAddActivity;CHANNEL_HANDLE hChannelHandle;};
struct _DSM_QueryLBPolicy {DSM_Load_Balance_Policy LoadBalancePolicy;};
struct _DSM_QueryUniqueId {ULONGLONG DsmUniqueId;};
struct _FORMAT_DESCRIPTOR {UCHAR NumberOfBlocks[4];unsigned char FormatSubType : 2;unsigned char FormatType : 6;UCHAR BlockLength[3];};
typedef enum _D7F48ACA8F7E5F151D30CF090E11B572 _FP_OPERATION_CODE;
struct _GEN_GET_TIME_CAPS {ULONG Flags;ULONG ClockPrecision;};
struct _HID_DRIVER_CONFIG {ULONG Size;ULONG RingBufferSize;};
struct _IRB_REQ_BUS_RESET {ULONG fulFlags;};
struct _KERNEL_USER_TIMES {LARGE_INTEGER CreateTime;LARGE_INTEGER ExitTime;LARGE_INTEGER KernelTime;LARGE_INTEGER UserTime;};
struct _KS_DVDCOPY_BUSKEY {BYTE BusKey[5];BYTE Reserved[1];};
struct _KS_DVDCOPY_REGION {UCHAR Reserved;UCHAR RegionData;UCHAR Reserved2[2];};
struct _LINE_ADDRESS_CAPS {ULONG ulTotalSize;ULONG ulNeededSize;ULONG ulUsedSize;ULONG ulLineDeviceID;ULONG ulAddressSize;ULONG ulAddressOffset;ULONG ulDevSpecificSize;ULONG ulDevSpecificOffset;ULONG ulAddressSharing;ULONG ulAddressStates;ULONG ulCallInfoStates;ULONG ulCallerIDFlags;ULONG ulCalledIDFlags;ULONG ulConnectedIDFlags;ULONG ulRedirectionIDFlags;ULONG ulRedirectingIDFlags;ULONG ulCallStates;ULONG ulDialToneModes;ULONG ulBusyModes;ULONG ulSpecialInfo;ULONG ulDisconnectModes;ULONG ulMaxNumActiveCalls;ULONG ulMaxNumOnHoldCalls;ULONG ulMaxNumOnHoldPendingCalls;ULONG ulMaxNumConference;ULONG ulMaxNumTransConf;ULONG ulAddrCapFlags;ULONG ulCallFeatures;ULONG ulRemoveFromConfCaps;ULONG ulRemoveFromConfState;ULONG ulTransferModes;ULONG ulParkModes;ULONG ulForwardModes;ULONG ulMaxForwardEntries;ULONG ulMaxSpecificEntries;ULONG ulMinFwdNumRings;ULONG ulMaxFwdNumRings;ULONG ulMaxCallCompletions;ULONG ulCallCompletionConds;ULONG ulCallCompletionModes;ULONG ulNumCompletionMessages;ULONG ulCompletionMsgTextEntrySize;ULONG ulCompletionMsgTextSize;ULONG ulCompletionMsgTextOffset;};
struct _LINE_EXTENSION_ID {ULONG ulExtensionID0;ULONG ulExtensionID1;ULONG ulExtensionID2;ULONG ulExtensionID3;};
struct _LOOKASIDE_LIST_EX {GENERAL_LOOKASIDE_POOL L;};
struct _MODE_CACHING_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PageSavable : 1;UCHAR PageLength;unsigned char ReadDisableCache : 1;unsigned char MultiplicationFactor : 1;unsigned char WriteCacheEnable : 1;unsigned char Reserved2 : 5;unsigned char WriteRetensionPriority : 4;unsigned char ReadRetensionPriority : 4;UCHAR DisablePrefetchTransfer[2];UCHAR MinimumPrefetch[2];UCHAR MaximumPrefetch[2];UCHAR MaximumPrefetchCeiling[2];};
struct _MODE_CONTROL_PAGE {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PageSavable : 1;UCHAR PageLength;unsigned char RLEC : 1;unsigned char GLTSD : 1;unsigned char D_SENSE : 1;unsigned char DPICZ : 1;unsigned char TMF_ONLY : 1;unsigned char TST : 3;unsigned char Obsolete1 : 1;unsigned char QERR : 2;unsigned char NUAR : 1;unsigned char QueueAlgorithmModifier : 4;unsigned char Obsolete2 : 3;unsigned char SWP : 1;unsigned char UA_INTLCK_CTRL : 2;unsigned char RAC : 1;unsigned char VS : 1;unsigned char AutoloadMode : 3;unsigned char Reserved2 : 1;unsigned char RWWP : 1;unsigned char ATMPE : 1;unsigned char TAS : 1;unsigned char ATO : 1;UCHAR Obsolete3[2];UCHAR BusyTimeoutPeriod[2];UCHAR ExtendeSelfTestCompletionTime[2];};
struct _MPIO_VERSION_INFO {ULONG MajorVersion;ULONG MinorVersion;ULONG ProductBuild;ULONG QfeNumber;};
struct _MSNdis_CoVendorId {ULONG NdisCoVendorID;};
struct _MSNdis_MacOptions {ULONG NdisMacOptions;};
struct _MSNdis_MediaInUse {ULONG NumberElements;ULONG NdisMediaInUse[1];};
struct _MSNdis_ReceivesOk {ULONGLONG NdisReceivesOk;};
struct _MSSerial_PortName {CHAR VariableData[1];};
struct _MSWmi_PnPDeviceId {CHAR VariableData[1];};
struct _NABTS_BUFFER_LINE {BYTE Confidence;BYTE Bytes[36];};
struct _NDIS_WAN_FRAGMENT {UCHAR RemoteAddress[6];UCHAR LocalAddress[6];};
struct _OFFLOAD_ALGO_INFO {ULONG algoIdentifier;ULONG algoKeylen;ULONG algoRounds;};
struct _PingIPAddress_OUT {ULONG Status;ULONG ResponsesReceived;};
struct _READ_BLOCK_LIMITS {UCHAR Reserved;UCHAR BlockMaximumSize[3];UCHAR BlockMinimumSize[2];};
struct _SD_ENUM_SDS_INPUT {ULONGLONG StartingOffset;ULONGLONG MaxSDEntriesToReturn;};
struct _ScsiReportLuns_IN {ULONGLONG UniqueSessionId;};
struct _SdpAttributeRange {USHORT minAttribute;USHORT maxAttribute;};
struct _SetFC3MgmtInfo_IN {HBAFC3MgmtInfo MgmtInfo;};
struct _TDI_DATAGRAM_INFO {ULONG MaximumDatagramBytes;ULONG MaximumDatagramCount;};
struct _TDI_ENDPOINT_INFO {ULONG State;ULONG Event;ULONG TransmittedTsdus;ULONG ReceivedTsdus;ULONG TransmissionErrors;ULONG ReceiveErrors;ULONG MinimumLookaheadData;ULONG MaximumLookaheadData;ULONG PriorityLevel;ULONG SecurityLevel;ULONG SecurityCompartment;};
struct _TRACK_INFORMATION {UCHAR Length[2];UCHAR TrackNumber;UCHAR SessionNumber;UCHAR Reserved1;unsigned char TrackMode : 4;unsigned char Copy : 1;unsigned char Damage : 1;unsigned char Reserved2 : 2;unsigned char DataMode : 4;unsigned char FP : 1;unsigned char Packet : 1;unsigned char Blank : 1;unsigned char RT : 1;unsigned char NWA_V : 1;unsigned char Reserved3 : 7;UCHAR TrackStartAddress[4];UCHAR NextWritableAddress[4];UCHAR FreeBlocks[4];UCHAR FixedPacketSize[4];};
struct _UNIT_ISOCH_PARAMS {ULONG RX_NumPackets;ULONG RX_NumDescriptors;ULONG TX_NumPackets;ULONG TX_NumDescriptors;};
struct _VIDEO_BANK_SELECT {ULONG Length;ULONG Size;ULONG BankingFlags;ULONG BankingType;ULONG PlanarHCBankingType;ULONG BitmapWidthInBytes;ULONG BitmapSize;ULONG Granularity;ULONG PlanarHCGranularity;ULONG CodeOffset;ULONG PlanarHCBankCodeOffset;ULONG PlanarHCEnableCodeOffset;ULONG PlanarHCDisableCodeOffset;};
struct _VIDEO_CHILD_STATE {ULONG Id;ULONG State;};
struct _WAN_CO_LINKPARAMS {ULONG TransmitSpeed;ULONG ReceiveSpeed;ULONG SendWindow;};
struct _WWAN_SIGNAL_STATE {ULONG Rssi;ULONG ErrorRate;ULONG RssiInterval;ULONG RssiThreshold;};
struct _XSAVE_AREA_HEADER {ULONG64 Mask;ULONG64 Reserved[7];};
struct aptxwaveformat_tag {WAVEFORMATEX wfx;};
typedef enum _F5DB4F72D73D690AE94D963EB3A9BA06 eChannelTargetType;
struct tagKS_MPEAUDIOINFO {DWORD dwFlags;DWORD dwReserved1;DWORD dwReserved2;DWORD dwReserved3;};
struct tagTRANSPORTSTATUS {LONG Mode;LONG LastError;LONG RecordInhibit;LONG ServoLock;LONG MediaPresent;LONG MediaLength;LONG MediaSize;LONG MediaTrackCount;LONG MediaTrackLength;LONG MediaTrackSide;LONG MediaType;LONG LinkMode;LONG NotifyOn;};
typedef enum _C4D6B4788DF8F3B1BAEDB99C4EDC1075 ARP_HARDWARE_TYPE;
typedef enum _C6C2F99D2D8586669EAAB98FA7901354 ATA_CHANNEL_STATE;
typedef enum _2A8472B1E6C2A8931738C92032F03B5A BUS_QUERY_ID_TYPE;
typedef void CALLBACK_FUNCTION(PVOID CallbackContext, PVOID Argument1, PVOID Argument2);
typedef enum _CLASS_DEBUG_LEVEL CLASS_DEBUG_LEVEL;
typedef ULONG CLFS_CONTAINER_ID;
typedef enum _CLFS_CONTEXT_MODE CLFS_CONTEXT_MODE;
typedef CLS_SCAN_CONTEXT CLFS_SCAN_CONTEXT;
typedef enum _CLS_IOSTATS_CLASS CLS_IOSTATS_CLASS;
typedef enum _8142B63D1170E3CCF91671CCCC3193B7 CMP_PLUG_LOCATION;
typedef USHORT CONNECTION_HANDLE;
typedef enum _DEVICE_WAKE_DEPTH DEVICE_WAKE_DEPTH;
struct DOT11_ENCAP_ENTRY {USHORT usEtherType;USHORT usEncapType;};
typedef UCHAR DOT11_MAC_ADDRESS[6];
typedef UCHAR DOT11_PMKID_VALUE[16];
typedef enum _DUID_MATCH_STATUS DUID_MATCH_STATUS;
typedef enum _DXGKMDT_OPM_CGMSA DXGKMDT_OPM_CGMSA;
typedef enum _ENUMERATOR_ACTION ENUMERATOR_ACTION;
typedef enum _IDE_CALLBACK_TYPE IDE_CALLBACK_TYPE;
typedef IF_COUNTED_STRING_LH IF_COUNTED_STRING;
typedef enum _8D43FB820B033ED13008555ED0EFBEEB INTERRUPTSYNCMODE;
typedef D3DKMDT_HVIDPN IN_D3DKMDT_HVIDPN;
struct IPRouteLookupData {ulong Version;ulong DestAdd;ulong SrcAdd;char Info[1];};
typedef enum _IRQ_DEVICE_POLICY IRQ_DEVICE_POLICY;
typedef void KDEFERRED_ROUTINE(struct _KDPC *Dpc, PVOID DeferredContext, PVOID SystemArgument1, PVOID SystemArgument2);
typedef enum _450AB481C71E837C7D97DD5198D29691 KD_NAMESPACE_ENUM;
typedef enum _C8C95D1253099DC07F9D615EA2A8002A KSEVENTS_LOCKTYPE;
typedef enum _75702A0302E577557AFE6696B3A25395 KSEVENT_BDA_TUNER;
typedef enum _3A65399903FADBC05E4C10BA9E609C32 KSINTERFACE_MEDIA;
typedef enum _214B3FAB360CFC0FA4B19913ED3BE09A KSMETHOD_STREAMIO;
typedef enum _1FFC3954F3EEED4BA40483519ADC2C52 KSPROPERTY_BDA_CA;
typedef enum _5D45993B0684C89D7D9492DEAC222292 KSPROPERTY_CYCLIC;
typedef enum _222C5FE2FBB310101DEF802D75341780 KSPROPERTY_HRTF3D;
typedef enum _023C071F6B2DC664943C68B81541179C KSPROPERTY_STREAM;
typedef enum _E4F601CF8334073149F423AA599EAEAE KSPROPERTY_VBICAP;
typedef enum _A1E89C657E90049EA789DE2B75FA4D0B KS_TUNER_STRATEGY;
typedef enum _LLDP_ADMIN_STATUS LLDP_ADMIN_STATUS;
typedef ADPCMWAVEFORMAT *LPADPCMWAVEFORMAT;
typedef HEAACWAVEFORMAT *LPHEAACWAVEFORMAT;
typedef MPEG1WAVEFORMAT *LPMPEG1WAVEFORMAT;
typedef LPOSVERSIONINFOEXA LPOSVERSIONINFOEX;
typedef UCHAR NDIS_802_11_RATES[8];
typedef enum _NDIS_FRAME_HEADER NDIS_FRAME_HEADER;
typedef CM_MCA_POS_DATA NDIS_MCA_POS_DATA;
typedef enum _NDIS_REQUEST_TYPE NDIS_REQUEST_TYPE;
typedef enum _NL_BANDWIDTH_FLAG NL_BANDWIDTH_FLAG;
typedef enum _NL_NEIGHBOR_STATE NL_NEIGHBOR_STATE;
typedef enum _5DB038E67C93660546D046F3C51D1C54 NL_ROUTE_PROTOCOL;
typedef NOTIFICATION_INFO_WXP NOTIFICATION_INFO;
typedef ULONG NOTIFICATION_MASK;
typedef ADPCMWAVEFORMAT *NPADPCMWAVEFORMAT;
typedef HEAACWAVEFORMAT *NPHEAACWAVEFORMAT;
typedef enum _NPI_MODULEID_TYPE NPI_MODULEID_TYPE;
typedef MPEG1WAVEFORMAT *NPMPEG1WAVEFORMAT;
typedef  unsigned short *NTSTRSAFE_PCUWSTR;
typedef enum _OFFLOAD_CONF_ALGO OFFLOAD_CONF_ALGO;
typedef ADPCMEWAVEFORMAT *PADPCMEWAVEFORMAT;
typedef enum _AUDIT_EVENT_TYPE *PAUDIT_EVENT_TYPE;
typedef USHORT *PBAD_TRACK_NUMBER;
typedef enum BDA_CHANGE_STATE *PBDA_CHANGE_STATE;
typedef enum BDA_SIGNAL_STATE *PBDA_SIGNAL_STATE;
typedef enum _BTHX_SCO_SUPPORT *PBTHX_SCO_SUPPORT;
typedef PVOID *PCLFS_MGMT_CLIENT;
typedef enum _CLS_CONTEXT_MODE *PCLS_CONTEXT_MODE;
typedef enum _PCW_CALLBACK_TYPE PCW_CALLBACK_TYPE;
typedef enum _CD1AEEBAB641DEC86F01C12702A854EA *PDEVICE_TEXT_TYPE;
typedef enum _DISK_CACHE_STATE *PDISK_CACHE_STATE;
typedef enum _DOT11_ACK_POLICY *PDOT11_ACK_POLICY;
typedef enum _DOT11_POWER_MODE *PDOT11_POWER_MODE;
typedef enum _DOT11_RESET_TYPE *PDOT11_RESET_TYPE;
typedef EXCEPTION_RECORD *PEXCEPTION_RECORD;
typedef enum _FILTER_DUMP_TYPE *PFILTER_DUMP_TYPE;
typedef enum _FPDT_RECORD_TYPE *PFPDT_RECORD_TYPE;
typedef enum _PF_FORWARD_ACTION PF_FORWARD_ACTION;
typedef GSM610WAVEFORMAT *PGSM610WAVEFORMAT;
typedef void ( *PHW_TIMER_ROUTINE)(PVOID Context);
typedef IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;
typedef IMAGE_LINENUMBER *PIMAGE_LINENUMBER;
typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS;
typedef IMAGE_RELOCATION *PIMAGE_RELOCATION;
typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA;
typedef enum _IO_SESSION_EVENT *PIO_SESSION_EVENT;
typedef enum _IO_SESSION_STATE *PIO_SESSION_STATE;
typedef enum _2E638D538041F5F5768A2ABD3931C6AD *PIPV6_OPTION_TYPE;
typedef enum _IRQ_GROUP_POLICY *PIRQ_GROUP_POLICY;
typedef enum _E5E6E0D9FF0D91240836F1F7EEF0D725 *PISCSI_AUTH_TYPES;
typedef GUID *PKCRM_PROTOCOL_ID;
typedef enum _4BC7B6F7085B9AE96B4CD2F6C16EFA48 *PLOGINSESSIONTYPE;
typedef enum _MEDIA_BLANK_TYPE *PMEDIA_BLANK_TYPE;
typedef enum _NDIS_HALT_ACTION *PNDIS_HALT_ACTION;
typedef enum _NDIS_MEDIA_STATE *PNDIS_MEDIA_STATE;
typedef ULONG *PNDIS_PORT_NUMBER;
typedef enum _NDIS_WAN_QUALITY *PNDIS_WAN_QUALITY;
typedef ULONG32 *PNET_IF_OBJECT_ID;
typedef OLIGSMWAVEFORMAT *POLIGSMWAVEFORMAT;
typedef OLIOPRWAVEFORMAT *POLIOPRWAVEFORMAT;
typedef OLISBCWAVEFORMAT *POLISBCWAVEFORMAT;
typedef enum _OPERATION_STATUS *POPERATION_STATUS;
typedef UCHAR **PPCLS_RECORD_TYPE;
typedef LARGE_INTEGER *PPHYSICAL_ADDRESS;
typedef FILE_OBJECT **PPLOG_FILE_OBJECT;
typedef ULONG *PPNP_DEVICE_STATE;
typedef enum _POWER_STATE_TYPE *PPOWER_STATE_TYPE;
typedef void (*PREENUMERATE_SELF)(PVOID Context);
typedef RESP_PEEK_NMPIPE *PRESP_PEEK_NMPIPE;
typedef SCARD_T0_REQUEST *PSCARD_T0_REQUEST;
typedef SCARD_T1_REQUEST *PSCARD_T1_REQUEST;
typedef LARGE_INTEGER *PSECURITY_INTEGER;
typedef SMB_FIND_BUFFER2 *PSMB_FIND_BUFFER2;
typedef SONARCWAVEFORMAT *PSONARCWAVEFORMAT;
typedef enum _STORAGE_BUS_TYPE *PSTORAGE_BUS_TYPE;
typedef SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE;
typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE;
typedef SECURITY_USER_DATA *PSecurityUserData;
typedef void (*PStorPortFreePool)(PVOID PMemory, PVOID HwDeviceExtension, PVOID PMdl);
typedef USN_JOURNAL_DATA_V1 *PUSN_JOURNAL_DATA;
typedef enum _9D4A7C1CB213FEDF002D00B6A9073617 *PVIDEO_CHILD_TYPE;
typedef VOLUMEWAVEFILTER *PVOLUMEWAVEFILTER;
typedef enum _WWAN_AUTH_METHOD *PWWAN_AUTH_METHOD;
typedef enum _WWAN_COMPRESSION *PWWAN_COMPRESSION;
typedef enum _WWAN_DEVICE_TYPE *PWWAN_DEVICE_TYPE;
typedef enum _WWAN_READY_STATE *PWWAN_READY_STATE;
typedef enum _WWAN_STRUCT_TYPE *PWWAN_STRUCT_TYPE;
typedef enum _WWAN_VOICE_CLASS *PWWAN_VOICE_CLASS;
typedef enum _RAID_SYSTEM_POWER RAID_SYSTEM_POWER;
typedef PVOID SCO_SERVER_HANDLE;
typedef enum _SECPKG_CRED_CLASS SECPKG_CRED_CLASS;
typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;
typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;
typedef enum _SOCKET_USAGE_TYPE SOCKET_USAGE_TYPE;
typedef enum _4CF302B10AC45D566291D4F82FF21449 STOR_POWER_ACTION;
typedef enum _TRANSACTION_STATE TRANSACTION_STATE;
typedef void (*USB_IDLE_CALLBACK)(PVOID Context);
typedef enum _VIDEO_POWER_STATE VIDEO_POWER_STATE;
typedef enum _VP_LOCK_OPERATION VP_LOCK_OPERATION;
typedef enum _WWAN_CONTEXT_TYPE WWAN_CONTEXT_TYPE;
struct _ATM_QOS_CLASS_IE {UCHAR QOSClassForward;UCHAR QOSClassBackward;};
struct _BDA_CA_MODULE_UI {ULONG ulFormat;ULONG ulbcDesc;ULONG ulDesc[1];};
struct _BDA_IPv4_ADDRESS {BYTE rgbAddress[4];};
struct _BDA_IPv6_ADDRESS {BYTE rgbAddress[6];};
struct _CDB___CDB6FORMAT {UCHAR OperationCode;unsigned char FormatControl : 5;unsigned char LogicalUnitNumber : 3;UCHAR FReserved1;UCHAR InterleaveMsb;UCHAR InterleaveLsb;UCHAR FReserved2;};
struct _CDB___CDB6VERIFY {UCHAR OperationCode;unsigned char Fixed : 1;unsigned char ByteCompare : 1;unsigned char Immediate : 1;unsigned char Reserved : 2;unsigned char LogicalUnitNumber : 3;UCHAR VerificationLength[3];UCHAR Control;};
struct _CDB___MODE_SENSE {UCHAR OperationCode;unsigned char Reserved1 : 3;unsigned char Dbd : 1;unsigned char Reserved2 : 4;unsigned char PageCode : 6;unsigned char Pc : 2;UCHAR SubPageCode;UCHAR AllocationLength;UCHAR Control;};
struct _CDB___PLAY_AUDIO {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR StartingBlockAddress[4];UCHAR Reserved2;UCHAR PlayLength[2];UCHAR Control;};
struct _CDB___REPORT_KEY {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char Lun : 3;UCHAR LogicalBlockAddress[4];UCHAR Reserved2[2];UCHAR AllocationLength[2];unsigned char KeyFormat : 6;unsigned char AGID : 2;UCHAR Control;};
struct _CDB___SEEK_BLOCK {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char Reserved1 : 7;UCHAR BlockAddress[3];unsigned char Link : 1;unsigned char Flag : 1;unsigned char Reserved2 : 4;unsigned char VendorUnique : 2;};
struct _CDB___START_STOP {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char Reserved1 : 4;unsigned char LogicalUnitNumber : 3;UCHAR Reserved2[2];unsigned char Start : 1;unsigned char LoadEject : 1;unsigned char Reserved3 : 6;UCHAR Control;};
struct _CDB___SUBCHANNEL {UCHAR OperationCode;unsigned char Reserved0 : 1;unsigned char Msf : 1;unsigned char Reserved1 : 3;unsigned char LogicalUnitNumber : 3;unsigned char Reserved2 : 6;unsigned char SubQ : 1;unsigned char Reserved3 : 1;UCHAR Format;UCHAR Reserved4[2];UCHAR TrackNumber;UCHAR AllocationLength[2];UCHAR Control;};
struct _CDDA_OUTPUT_PORT {unsigned char ChannelSelection : 4;unsigned char Reserved : 4;UCHAR Volume;};
typedef int (*_CRT_REPORT_HOOKW)(int, unsigned short *, int *);
struct _D3DKMDT_2DREGION {UINT cx;UINT cy;};
struct _DSM_MPIO_CONTEXT {PVOID MPIOContext;};
struct _DSM_VERSION_INFO {ULONG MajorVersion;ULONG MinorVersion;ULONG ProductBuild;ULONG QfeNumber;};
struct _DXGKMDT_OPM_OMAC {BYTE abOMAC[16];};
struct _DXGK_CONTEXTINFO {UINT DmaBufferSize;UINT DmaBufferSegmentSet;UINT DmaBufferPrivateDataSize;UINT AllocationListSize;UINT PatchLocationListSize;UINT DmaBufferAllocationGroup;};
struct _EXFAT_STATISTICS {ULONG CreateHits;ULONG SuccessfulCreates;ULONG FailedCreates;ULONG NonCachedReads;ULONG NonCachedReadBytes;ULONG NonCachedWrites;ULONG NonCachedWriteBytes;ULONG NonCachedDiskReads;ULONG NonCachedDiskWrites;};
struct _FLT_NAME_CONTROL {UNICODE_STRING Name;};
typedef enum _EBF8251B43E7412EBBCF0A9FFEA6D7A7 _FPIEEE_PRECISION;
struct _HARDWARE_ADDRESS {UCHAR Address[6];};
struct _HISTOGRAM_BUCKET {ULONG Reads;ULONG Writes;};
struct _KSPROPERTY_SPPAL {KS_DVD_YUV sppal[16];};
struct _LINE_CALL_STATUS {ULONG ulTotalSize;ULONG ulNeededSize;ULONG ulUsedSize;ULONG ulCallState;ULONG ulCallStateMode;ULONG ulCallPrivilege;ULONG ulCallFeatures;ULONG ulDevSpecificSize;ULONG ulDevSpecificOffset;};
struct _LINE_DIAL_PARAMS {ULONG ulDialPause;ULONG ulDialSpeed;ULONG ulDigitDuration;ULONG ulWaitForDialtone;};
struct _MODE_FORMAT_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PageSavable : 1;UCHAR PageLength;UCHAR TracksPerZone[2];UCHAR AlternateSectorsPerZone[2];UCHAR AlternateTracksPerZone[2];UCHAR AlternateTracksPerLogicalUnit[2];UCHAR SectorsPerTrack[2];UCHAR BytesPerPhysicalSector[2];UCHAR Interleave[2];UCHAR TrackSkewFactor[2];UCHAR CylinderSkewFactor[2];unsigned char Reserved2 : 4;unsigned char SurfaceFirst : 1;unsigned char RemovableMedia : 1;unsigned char HardSectorFormating : 1;unsigned char SoftSectorFormating : 1;UCHAR Reserved3[3];};
struct _MSFC_EventBuffer {ULONG EventType;ULONG EventInfo[4];};
struct _MSNdis_LinkSpeed {ULONG NdisLinkSpeed;};
struct _NDIS_WAN_CO_INFO {ULONG MaxFrameSize;ULONG MaxSendWindow;ULONG FramingBits;ULONG DesiredACCM;};
struct _Q2931_DELETE_PVC {ATM_VPIVCI ConnectionId;};
struct _RESP_PEEK_NMPIPE {USHORT ReadDataAvailable;USHORT MessageLength;USHORT NamedPipeState;};
struct _RemoveTarget_OUT {ULONG HBAStatus;};
struct _SCARD_IO_REQUEST {ULONG dwProtocol;ULONG cbPciLength;};
typedef LARGE_INTEGER _SECURITY_INTEGER;
struct _TDI_ADDRESS_8022 {UCHAR MACAddress[6];};
struct _UNIT_DDI_VERSION {ULONG Version;};
struct _WWAN_DRIVER_CAPS {ULONG ulMajorVersion;ULONG ulMinorVersion;ULONG ulDriverCaps;};
struct _WWAN_USSD_STRING {UCHAR DataCodingScheme;UCHAR StringLength;UCHAR String[160];};
typedef enum _B7C7B2ED7EE1EDA005EE955C1E33527F eEngineFormatType;
struct tagJPEGINFOHEADER {DWORD JPEGSize;DWORD JPEGProcess;DWORD JPEGColorSpaceID;DWORD JPEGBitsPerSample;DWORD JPEGHSubSampling;DWORD JPEGVSubSampling;};
typedef enum _05EE2DFF740CFD0F1BF1AC89BD3D2E1D AUDIO_CURVE_TYPE;
typedef enum _AUDIT_EVENT_TYPE AUDIT_EVENT_TYPE;
typedef enum _AVCSTRM_FUNCTION AVCSTRM_FUNCTION;
typedef USHORT BAD_TRACK_NUMBER;
typedef enum _BTHX_SCO_SUPPORT BTHX_SCO_SUPPORT;
typedef CLS_INFORMATION CLFS_INFORMATION;
typedef PVOID CLFS_MGMT_CLIENT;
typedef CLS_WRITE_ENTRY CLFS_WRITE_ENTRY;
typedef enum _CLS_CONTEXT_MODE CLS_CONTEXT_MODE;
typedef enum _1CC95E689DB1A3C540445D2EA8FF4FA2 CMP_CONNECT_TYPE;
typedef enum _CREATE_FILE_TYPE CREATE_FILE_TYPE;
typedef D3DKMDT_2DREGION D3DKMDT_2DOFFSET;
typedef enum _CD1AEEBAB641DEC86F01C12702A854EA DEVICE_TEXT_TYPE;
typedef enum _DISK_CACHE_STATE DISK_CACHE_STATE;
typedef enum _DOT11_ACK_POLICY DOT11_ACK_POLICY;
typedef enum _DOT11_POWER_MODE DOT11_POWER_MODE;
typedef enum _DOT11_RESET_TYPE DOT11_RESET_TYPE;
typedef enum _DXGK_HANDLE_TYPE DXGK_HANDLE_TYPE;
typedef enum _DXGK_WDDMVERSION DXGK_WDDMVERSION;
typedef ULONG_PTR ERESOURCE_THREAD;
typedef enum _EX_POOL_PRIORITY EX_POOL_PRIORITY;
typedef enum _FAST_IO_POSSIBLE FAST_IO_POSSIBLE;
typedef enum _FILTER_DUMP_TYPE FILTER_DUMP_TYPE;
typedef USHORT FLT_CONTEXT_TYPE;
typedef enum _FPDT_RECORD_TYPE FPDT_RECORD_TYPE;
typedef HANDLE HFILTER_INSTANCE;
typedef enum _HIDP_REPORT_TYPE HIDP_REPORT_TYPE;
typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS;
typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;
typedef enum _INTEL_CACHE_TYPE INTEL_CACHE_TYPE;
typedef enum _IO_PRIORITY_HINT IO_PRIORITY_HINT;
typedef enum _IO_SESSION_EVENT IO_SESSION_EVENT;
typedef enum _IO_SESSION_STATE IO_SESSION_STATE;
typedef void IO_TIMER_ROUTINE(struct _DEVICE_OBJECT *DeviceObject, PVOID Context);
typedef enum _8B285748F7460E41F2A965D9020E3933 IPV4_OPTION_TYPE;
typedef enum _2E638D538041F5F5768A2ABD3931C6AD IPV6_OPTION_TYPE;
typedef enum _IRQ_GROUP_POLICY IRQ_GROUP_POLICY;
typedef enum _E5E6E0D9FF0D91240836F1F7EEF0D725 ISCSI_AUTH_TYPES;
typedef GUID KCRM_PROTOCOL_ID;
typedef enum _CAE561814972B63FC408CA74931D2863 KSEVENT_CROSSBAR;
typedef enum _AD2684E740CA89CFFCE63237D53FEB0F KSEVENT_VPNOTIFY;
typedef enum _647189E37124054D29E0D1AD2CCD51DF KSMETHOD_BDA_DRM;
typedef enum _4F0AA3E1E28506607394CF7C0CEBDCDC KSPROPERTY_AUDIO;
typedef enum _931B4160E02726FBC71D690B6D34D309 KSPROPERTY_CLOCK;
typedef enum _685D0097497CB64E18A21F243FD25622 KSPROPERTY_ITD3D;
typedef enum _ABCFC2A4415A1B92F689754BC7BBAC71 KSPROPERTY_TUNER;
typedef enum _6F9F41060DD80647953DB726CA7F25E7 KS_SEEKING_FLAGS;
typedef enum _4BC7B6F7085B9AE96B4CD2F6C16EFA48 LOGINSESSIONTYPE;
typedef APTXWAVEFORMAT *LPAPTXWAVEFORMAT;
typedef ECHOWAVEFILTER *LPECHOWAVEFILTER;
typedef enum _MEDIA_BLANK_TYPE MEDIA_BLANK_TYPE;
typedef enum _MM_PAGE_PRIORITY MM_PAGE_PRIORITY;
typedef LONG NDIS_802_11_RSSI;
typedef enum _NDIS_HALT_ACTION NDIS_HALT_ACTION;
typedef enum _NDIS_MEDIA_STATE NDIS_MEDIA_STATE;
typedef ULONG NDIS_PORT_NUMBER;
typedef enum _NDIS_WAN_QUALITY NDIS_WAN_QUALITY;
typedef ULONG32 NET_IF_OBJECT_ID;
typedef enum _81C96E3F196AC83D02B4522B31857D28 NL_PREFIX_ORIGIN;
typedef enum _4ADD18C59427D2D4505C2F6B781D5A2B NL_SUFFIX_ORIGIN;
typedef ULONG NODE_REQUIREMENT;
typedef APTXWAVEFORMAT *NPAPTXWAVEFORMAT;
typedef ECHOWAVEFILTER *NPECHOWAVEFILTER;
typedef  unsigned short *NTSTRSAFE_PCWSTR;
typedef enum _OPERATION_STATUS OPERATION_STATUS;
typedef ACPI_ENUM_CHILD *PACPI_ENUM_CHILD;
typedef ADPCMWAVEFORMAT *PADPCMWAVEFORMAT;
typedef enum _BGRT_IMAGE_TYPE *PBGRT_IMAGE_TYPE;
typedef void (*PBYTESWAPUINT128)(PSDP_ULARGE_INTEGER_16 pInUint128, PSDP_ULARGE_INTEGER_16 pOutUint128);
typedef void (*PBYTESWAPUUID128)(GUID *pUuidFrom, GUID *pUuiidTo);
typedef CIP_DATA_FORMAT_VER3 *PCIP_DATA_FORMAT;
typedef UCHAR *PCLS_RECORD_TYPE;
typedef GUID *PCRM_PROTOCOL_ID;
typedef  UNICODE_STRING *PCUNICODE_STRING;
typedef CHAR *PDEVPROP_BOOLEAN;
typedef DFS_REFERRAL_V1 *PDFS_REFERRAL_V1;
typedef DFS_REFERRAL_V2 *PDFS_REFERRAL_V2;
typedef DFS_REFERRAL_V3 *PDFS_REFERRAL_V3;
typedef enum _DISK_SAN_POLICY *PDISK_SAN_POLICY;
typedef enum _B0755FE71A01275B70F52874EF7AD4F8 *PDL_ADDRESS_TYPE;
typedef PVOID PDMACHANNELSLAVE;
typedef enum DOT11_DIRECTION *PDOT11_DIRECTION;
typedef enum _DOT11_SCAN_TYPE *PDOT11_SCAN_TYPE;
typedef enum _DOT11_TEMP_TYPE *PDOT11_TEMP_TYPE;
typedef enum _DXGK_EVENT_TYPE *PDXGK_EVENT_TYPE;
typedef enum _ENUMERATOR_TYPE *PENUMERATOR_TYPE;
typedef ULONG *PEXECUTION_STATE;
typedef enum _FILTER_CALLBACK *PFILTER_CALLBACK;
typedef void (*PFNKSDEFAULTFREE)(PVOID Context, PVOID Buffer);
typedef void (*PFNKSREMOVEEVENT)(PFILE_OBJECT FileObject, struct _KSEVENT_ENTRY *EventEntry);
typedef GENERIC_MAPPING *PGENERIC_MAPPING;
typedef GIC_DISTRIBUTOR *PGIC_DISTRIBUTOR;
typedef PVOID PHBA_ENTRYPOINTS;
typedef void (*PHDAUDIO_BDL_ISR)(void *Context, ULONG InterruptBitMask);
typedef HEAACWAVEFORMAT *PHEAACWAVEFORMAT;
typedef LARGE_INTEGER PHYSICAL_ADDRESS;
typedef IMAGE_SYMBOL_EX *PIMAGE_SYMBOL_EX;
typedef enum _INDICATION_CODE *PINDICATION_CODE;
typedef KSIDENTIFIER *PKSPIN_INTERFACE;
typedef LOCAL_NMISOURCE *PLOCAL_NMISOURCE;
typedef FILE_OBJECT *PLOG_FILE_OBJECT;
typedef enum _MANDATORY_LEVEL *PMANDATORY_LEVEL;
typedef MPEG1WAVEFORMAT *PMPEG1WAVEFORMAT;
typedef enum _A5F41F4A4CEB7AD1CC9DEF125B1934E9 *PNL_ADDRESS_TYPE;
typedef enum _NL_ROUTE_ORIGIN *PNL_ROUTE_ORIGIN;
typedef ULONG PNP_DEVICE_STATE;
typedef enum _NT_PRODUCT_TYPE *PNT_PRODUCT_TYPE;
typedef POSVERSIONINFOEXA POSVERSIONINFOEX;
typedef enum _POWER_STATE_TYPE POWER_STATE_TYPE;
typedef enum _PC_EXIT_LATENCY *PPC_EXIT_LATENCY;
typedef PO_FX_COMPONENT_V1 *PPO_FX_COMPONENT;
typedef PROCLOCALX2APIC *PPROCLOCALX2APIC;
typedef void (*PPUT_DMA_ADAPTER)(PDMA_ADAPTER DmaAdapter);
typedef enum _PROCESSINFOCLASS PROCESSINFOCLASS;
typedef RTL_SPLAY_LINKS *PRTL_SPLAY_LINKS;
typedef UNICODE_STRING *PSECURITY_STRING;
typedef SMB_FIND_BUFFER *PSMB_FIND_BUFFER;
typedef enum _90DB2C5D4601A6EE82DF6DF2E8E9E70F *PSTOR_PNP_ACTION;
typedef enum _STREAM_PRIORITY *PSTREAM_PRIORITY;
typedef TIMECODE_SAMPLE *PTIMECODE_SAMPLE;
typedef enum _TRACK_MODE_TYPE *PTRACK_MODE_TYPE;
typedef enum _TUNNEL_SUB_TYPE *PTUNNEL_SUB_TYPE;
typedef enum _VIDEO_BANK_TYPE *PVIDEO_BANK_TYPE;
typedef enum _VPD_ASSOCIATION *PVPD_ASSOCIATION;
typedef enum _WHEA_CPU_VENDOR *PWHEA_CPU_VENDOR;
typedef enum _WHEA_ERROR_TYPE *PWHEA_ERROR_TYPE;
typedef enum _WWAN_MSG_STATUS *PWWAN_MSG_STATUS;
typedef enum _WWAN_PIN_FORMAT *PWWAN_PIN_FORMAT;
typedef enum _WWAN_SMS_FORMAT *PWWAN_SMS_FORMAT;
typedef enum _REG_NOTIFY_CLASS REG_NOTIFY_CLASS;
typedef void  RH_INIT_CALLBACK(PVOID CallBackContext);
typedef enum _7FC356CE6E1C304E0791EFC61BF0E919 RX_CONTEXT_FLAGS;
typedef enum _4BAA0EF8FAE2F23162EFC47E7D43DBA8 RX_LOGGING_STATE;
typedef enum _7E5E2E9213D821482F3EC7CB6FD4B62E SDBUS_ERASE_TYPE;
typedef enum _764BEEFADD59ED26AD22E3DCEAD8707C SDBUS_SPEED_MODE;
typedef enum _E747D6D325A8056CFFE85C81BD62423F SD_COMMAND_CLASS;
typedef enum _FF45D4E2473FCC32F6B74B38D48F9318 SD_RESPONSE_TYPE;
typedef enum _3827BDD047F9694DA5A1AB4228D7528E SD_TRANSFER_TYPE;
typedef LARGE_INTEGER SECURITY_INTEGER;
typedef enum _14D0313F53F71FF0D9CAA5A76B4BCC94 SFFPROT_PROPERTY;
typedef enum _SILO_DRIVER_CAPS SILO_DRIVER_CAPS;
typedef SOCKADDR_STORAGE_LH SOCKADDR_STORAGE;
typedef enum _STORAGE_BUS_TYPE STORAGE_BUS_TYPE;
typedef  unsigned short *STRSAFE_PCUNZWCH;
typedef SECURITY_USER_DATA SecurityUserData;
typedef TDI_ROUTING_INFO_WS03 TDI_ROUTING_INFO;
typedef ULONG TR_GROUP_ADDRESS;
typedef STRING32 UNICODE_STRING32;
typedef STRING64 UNICODE_STRING64;
typedef PVOID USBD_PIPE_HANDLE;
typedef enum _USB_DEVICE_SPEED USB_DEVICE_SPEED;
typedef USN_JOURNAL_DATA_V1 USN_JOURNAL_DATA;
typedef enum _9D4A7C1CB213FEDF002D00B6A9073617 VIDEO_CHILD_TYPE;
typedef enum _590B73EBA2289426BF23338FF0AEEAF9 WMIDPREQUESTCODE;
typedef enum _WRITE_CACHE_TYPE WRITE_CACHE_TYPE;
typedef enum _WWAN_AUTH_METHOD WWAN_AUTH_METHOD;
typedef enum _WWAN_COMPRESSION WWAN_COMPRESSION;
typedef enum _WWAN_DEVICE_TYPE WWAN_DEVICE_TYPE;
typedef enum _WWAN_READY_STATE WWAN_READY_STATE;
typedef enum _WWAN_STRUCT_TYPE WWAN_STRUCT_TYPE;
typedef enum _WWAN_VOICE_CLASS WWAN_VOICE_CLASS;
struct _BDA_PIN_PAIRING {ULONG ulInputPin;ULONG ulOutputPin;ULONG ulcMaxInputsPerOutput;ULONG ulcMinInputsPerOutput;ULONG ulcMaxOutputsPerInput;ULONG ulcMinOutputsPerInput;ULONG ulcTopologyJoints; ULONG *pTopologyJoints;};
union _BM_REQUEST_TYPE {UCHAR B;};
struct _CDB___LOGSELECT {UCHAR OperationCode;unsigned char SPBit : 1;unsigned char PCRBit : 1;unsigned char Reserved1 : 3;unsigned char LogicalUnitNumber : 3;unsigned char Reserved : 6;unsigned char PCBit : 2;UCHAR Reserved2[4];UCHAR ParameterListLength[2];UCHAR Control;};
struct _CDB___PARTITION {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char Sel : 1;unsigned char PartitionSelect : 6;UCHAR Reserved1[3];UCHAR Control;};
struct _CDROM_DISK_DATA {ULONG DiskData;};
struct _CDVD_KEY_HEADER {UCHAR DataLength[2];UCHAR Reserved[2];UCHAR Data[];};
struct _CMP_DELETE_PLUG {HANDLE hPlug;};
struct _CO_TAPI_CM_CAPS {ULONG ulCoTapiVersion;ULONG ulNumLines;ULONG ulFlags;};
struct _CREATE_DISK_MBR {ULONG Signature;};
typedef void (*_CRT_DUMP_CLIENT)(void *, size_t);
struct _D3DDDI_RATIONAL {UINT Numerator;UINT Denominator;};
struct _INET_PORT_RANGE {USHORT StartPort;USHORT NumberOfPorts;};
struct _LINE_DEV_STATUS {ULONG ulTotalSize;ULONG ulNeededSize;ULONG ulUsedSize;ULONG ulNumOpens;ULONG ulOpenMediaModes;ULONG ulNumActiveCalls;ULONG ulNumOnHoldCalls;ULONG ulNumOnHoldPendCalls;ULONG ulLineFeatures;ULONG ulNumCallCompletions;ULONG ulRingMode;ULONG ulSignalLevel;ULONG ulBatteryLevel;ULONG ulRoamMode;ULONG ulDevStatusFlags;ULONG ulTerminalModesSize;ULONG ulTerminalModesOffset;ULONG ulDevSpecificSize;ULONG ulDevSpecificOffset;};
struct _MSNdis_VendorID {ULONG NdisVendorID;};
struct _NDIS_LINK_SPEED {ULONG64 XmitLinkSpeed;ULONG64 RcvLinkSpeed;};
struct _NET_IF_ALIAS_LH {USHORT ifAliasLength;USHORT ifAliasOffset;};
struct _OPC_TABLE_ENTRY {UCHAR Speed[2];UCHAR OPCValue[6];};
struct _RIO_CMSG_BUFFER {ULONG TotalLength;};
struct _RTC_ALLOCA_NODE {int guard1;struct _RTC_ALLOCA_NODE *next;int dummypad;size_t allocaSize;int dummypad2;int guard2[3];};
struct _TDI_ADDRESS_VNS {UCHAR net_address[4];UCHAR subnet_addr[2];UCHAR port[2];UCHAR hops;UCHAR filler[5];};
struct _TOKEN_ELEVATION {ULONG TokenIsElevated;};
struct _UNIT_DIAG_LEVEL {ULONG DiagLevel;};
struct _VIDEO_NUM_MODES {ULONG NumModes;ULONG ModeInformationLength;};
struct _WST_BUFFER_LINE {BYTE Confidence;BYTE Bytes[42];};
struct _WWAN_SMS_STATUS {ULONG uFlag;ULONG MessageIndex;};
struct _finddata32i64_t {unsigned int attrib;__time32_t time_create;__time32_t time_access;__time32_t time_write;long long size;char name[260];};
typedef ULONG ATM_ADDRESSTYPE;
typedef enum _tagAvcResponseCode AvcResponseCode;
typedef enum _BGRT_IMAGE_TYPE BGRT_IMAGE_TYPE;
typedef CIP_DATA_FORMAT_VER3 CIP_DATA_FORMAT;
typedef UCHAR CLS_RECORD_TYPE;
typedef GUID CRM_PROTOCOL_ID;
typedef enum _D3DDDI_ROTATION D3DDDI_ROTATION;
typedef CHAR DEVPROP_BOOLEAN;
typedef enum _DISK_SAN_POLICY DISK_SAN_POLICY;
typedef enum _B0755FE71A01275B70F52874EF7AD4F8 DL_ADDRESS_TYPE;
typedef ULONG DMA_EVENT_FLAGS;
typedef enum _DOT11_SCAN_TYPE DOT11_SCAN_TYPE;
typedef enum _DOT11_TEMP_TYPE DOT11_TEMP_TYPE;
typedef enum _DXGK_EVENT_TYPE DXGK_EVENT_TYPE;
typedef enum _ENUMERATOR_TYPE ENUMERATOR_TYPE;
typedef enum _66124419281F30CC163023F3CD17B7FF EPcxGenLocation;
typedef enum _62D33E18697CC8662AB20FA6FAD2C6ED EPcxGeoLocation;
typedef ULONG EXECUTION_STATE;
typedef enum _FILTER_CALLBACK FILTER_CALLBACK;
typedef enum _86DF3DCCF80712F6908D10FD67A625E2 IDE_DEVICE_TYPE;
typedef enum _AE38AF776BB1805CEA32DBCE744D31F5 IDE_POWER_STATE;
typedef enum _INDICATION_CODE INDICATION_CODE;
typedef  HANDLE IN_CONST_HANDLE;
typedef enum _A7ED9ADA4119276C5D56169B582520A6 IPNotifyVersion;
struct IPRouteEntry_V1 {ulong ire_dest;ulong ire_index;ulong ire_metric1;ulong ire_metric2;ulong ire_metric3;ulong ire_metric4;ulong ire_nexthop;ulong ire_type;ulong ire_proto;ulong ire_age;ulong ire_mask;ulong ire_metric5;void *ire_context;};
struct IPRouteEntry_V2 {ulong ire_dest;ulong ire_index;ulong ire_metric1;ulong ire_metric2;ulong ire_metric3;ulong ire_metric4;ulong ire_nexthop;ulong ire_type;ulong ire_proto;ulong ire_age;ulong ire_mask;ulong ire_metric5;};
struct IPRouteEntry_V3 {ulong ire_dest;ulong ire_index;ulong ire_metric1;ulong ire_metric2;ulong ire_metric3;ulong ire_metric4;ulong ire_nexthop;ulong ire_type;ulong ire_proto;ulong ire_age;ulong ire_mask;ulong ire_metric5;};
typedef enum _IVRS_BLOCK_TYPE IVRS_BLOCK_TYPE;
typedef enum _IVHD_ENTRY_TYPE IVRS_TABLE_TYPE;
typedef enum _KDPC_IMPORTANCE KDPC_IMPORTANCE;
typedef enum _KINTERRUPT_MODE KINTERRUPT_MODE;
typedef CCHAR KPROCESSOR_MODE;
typedef enum _KPROFILE_SOURCE KPROFILE_SOURCE;
typedef PVOID KSDEVICE_HEADER;
typedef enum _C43D2A6EFFDC6958F872464784E778EF KSEVENT_TVAUDIO;
typedef PVOID KSOBJECT_HEADER;
typedef KSIDENTIFIER KSPIN_INTERFACE;
typedef enum _3D3158304144A21DE6EE9D59FE667BA8 KSPROPERTY_JACK;
typedef enum _B4C4FC6252558A234733AE07E885CE6F KSPROPERTY_WAVE;
typedef enum _A82677F2D780EECC07262E494F367D1E KS_DVDCOPYSTATE;
typedef enum _0CCF2589EBE4C99CC2ECB8B07AE7CB21 KS_MPEG2Profile;
typedef void LLDP_CLOSE_MSAP(HMSAP MsapHandle);
typedef FILE_OBJECT LOG_FILE_OBJECT;
typedef DRMWAVEFORMAT *LPDRMWAVEFORMAT;
typedef HEAACWAVEINFO *LPHEAACWAVEINFO;
typedef LPOSVERSIONINFOA LPOSVERSIONINFO;
typedef PCMWAVEFORMAT *LPPCMWAVEFORMAT;
typedef enum _MANDATORY_LEVEL MANDATORY_LEVEL;
typedef void MINIPORT_UNLOAD(PDRIVER_OBJECT DriverObject);
typedef enum _NDK_OBJECT_TYPE NDK_OBJECT_TYPE;
typedef enum _A5F41F4A4CEB7AD1CC9DEF125B1934E9 NL_ADDRESS_TYPE;
typedef enum _NL_ROUTE_ORIGIN NL_ROUTE_ORIGIN;
typedef DRMWAVEFORMAT *NPDRMWAVEFORMAT;
typedef HEAACWAVEINFO *NPHEAACWAVEINFO;
typedef PCMWAVEFORMAT *NPPCMWAVEFORMAT;
typedef unsigned short *NTSTRSAFE_PWSTR;
typedef enum _NT_PRODUCT_TYPE NT_PRODUCT_TYPE;
typedef OSVERSIONINFOEXA OSVERSIONINFOEX;
typedef enum _3E73702E428A13B3EA4562EB2B59A625 P12843_DL_MODES;
typedef APTXWAVEFORMAT *PAPTXWAVEFORMAT;
typedef enum _76CFA367F19FC9C2CFDDA1F00B51634A PARALLEL_SAFETY;
typedef enum _ARBITER_ACTION *PARBITER_ACTION;
typedef enum _PARTITION_STYLE PARTITION_STYLE;
typedef ULONGLONG (*PBYTESWAPUINT64)(ULONGLONG uint64);
typedef CHANNEL_HANDLE *PCHANNEL_HANDLE;
typedef UCHAR *PCLFS_SCAN_MODE;
typedef enum _5FB4B89D89D7F3E9E930012D26E1CC5E *PCOMPARTMENT_ID;
typedef enum _CSV_CONTROL_OP *PCSV_CONTROL_OP;
typedef enum _PC_EXIT_LATENCY PC_EXIT_LATENCY;
typedef enum _DOT11_AC_PARAM *PDOT11_AC_PARAM;
typedef enum _DOT11_BSS_TYPE *PDOT11_BSS_TYPE;
typedef enum _DOT11_PHY_TYPE *PDOT11_PHY_TYPE;
typedef DRIVER_STARTIO *PDRIVER_STARTIO;
typedef DXGKDDI_UNLOAD *PDXGKDDI_UNLOAD;
typedef ECHOWAVEFILTER *PECHOWAVEFILTER;
typedef EOF_WAIT_BLOCK *PEOF_WAIT_BLOCK;
typedef FILE_LOCK_INFO *PFILE_LOCK_INFO;
typedef void (*PFNBTH_FREE_BRB)(PBRB pBrb);
typedef ICMP_MESSAGE *PICMPV4_MESSAGE;
typedef ICMP_MESSAGE *PICMPV6_MESSAGE;
typedef enum _INTERFACE_TYPE *PINTERFACE_TYPE;
typedef IR_DEV_CAPS *PIR_DEV_CAPS_V1;
typedef PVOID PKSDEFAULTCLOCK;
typedef enum _E5E05FC88E8385A5216FCD37A95BAA87 *PKSPIN_DATAFLOW;
typedef enum _KTMOBJECT_TYPE *PKTMOBJECT_TYPE;
typedef enum _NDIS_PORT_TYPE *PNDIS_PORT_TYPE;
typedef enum _F82217EAE416E44B66BEB74A12D4E69E *PND_OPTION_TYPE;
typedef USHORT *PNET_FRAME_TYPE;
typedef PO_FX_COMPONENT_V1 PO_FX_COMPONENT;
typedef PROCLOCALSAPIC *PPROCLOCALSAPIC;
typedef enum _REQUESTER_TYPE *PREQUESTER_TYPE;
typedef RESP_NT_CANCEL *PRESP_NT_CANCEL;
typedef RTL_BITMAP_RUN *PRTL_BITMAP_RUN;
typedef enum _RX_RDBSS_STATE_ *PRX_RDBSS_STATE;
typedef ULONG_PTR *PSID_HASH_ENTRY;
typedef SMARTBATTTABLE *PSMARTBATTTABLE;
typedef enum _UDP_ENCAP_TYPE *PUDP_ENCAP_TYPE;
typedef ULARGE_INTEGER *PULARGE_INTEGER;
typedef UNICODE_STRING *PUNICODE_STRING;
typedef void (*PVIDEO_HW_TIMER)(PVOID HwDeviceExtension);
typedef VM_COUNTERS_EX *PVM_COUNTERS_EX;
typedef enum _WRITE_ROTATION *PWRITE_ROTATION;
typedef enum _WWAN_ACE_STATE *PWWAN_ACE_STATE;
typedef enum _WWAN_PIN_STATE *PWWAN_PIN_STATE;
typedef enum _WWAN_SIM_CLASS *PWWAN_SIM_CLASS;
typedef UCHAR SD_COMMAND_CODE;
typedef enum _SECTION_INHERIT SECTION_INHERIT;
typedef UNICODE_STRING SECURITY_STRING;
typedef enum _9E04942AE70A085A678F430E656AB31C SRAT_ENTRY_TYPE;
typedef enum _90DB2C5D4601A6EE82DF6DF2E8E9E70F STOR_PNP_ACTION;
typedef enum _STREAM_PRIORITY STREAM_PRIORITY;
typedef  unsigned short *STRSAFE_PCNZWCH;
typedef TDI_ADDRESS_IP6_XP TDI_ADDRESS_IP6;
typedef TDI_PNP_CONTEXT_XP TDI_PNP_CONTEXT;
typedef enum _THREADINFOCLASS THREADINFOCLASS;
typedef enum _TRACK_MODE_TYPE TRACK_MODE_TYPE;
typedef enum _TUNNEL_SUB_TYPE TUNNEL_SUB_TYPE;
typedef enum _USB_DEVICE_TYPE USB_DEVICE_TYPE;
typedef enum _VIDEO_BANK_TYPE VIDEO_BANK_TYPE;
typedef enum _VPD_ASSOCIATION VPD_ASSOCIATION;
typedef WAVEFORMATEXTENSIBLE WAVEFORMATPCMEX;
typedef enum _WHEA_CPU_VENDOR WHEA_CPU_VENDOR;
typedef enum _WHEA_ERROR_TYPE WHEA_ERROR_TYPE;
typedef enum _WORK_QUEUE_TYPE WORK_QUEUE_TYPE;
typedef enum _WWAN_MSG_STATUS WWAN_MSG_STATUS;
typedef enum _WWAN_PIN_FORMAT WWAN_PIN_FORMAT;
typedef enum _WWAN_SMS_FORMAT WWAN_SMS_FORMAT;
struct _CDB___LOGSENSE {UCHAR OperationCode;unsigned char SPBit : 1;unsigned char PPCBit : 1;unsigned char Reserved1 : 3;unsigned char LogicalUnitNumber : 3;unsigned char PageCode : 6;unsigned char PCBit : 2;UCHAR Reserved2;UCHAR Reserved3;UCHAR ParameterPointer[2];UCHAR AllocationLength[2];UCHAR Control;};
struct _CDB___READ_TOC {UCHAR OperationCode;unsigned char Reserved0 : 1;unsigned char Msf : 1;unsigned char Reserved1 : 3;unsigned char LogicalUnitNumber : 3;unsigned char Format2 : 4;unsigned char Reserved2 : 4;UCHAR Reserved3[3];UCHAR StartingTrack;UCHAR AllocationLength[2];unsigned char Control : 6;unsigned char Format : 2;};
struct _CDB___SEND_KEY {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char Lun : 3;UCHAR Reserved2[6];UCHAR ParameterListLength[2];unsigned char KeyFormat : 6;unsigned char AGID : 2;UCHAR Control;};
struct _CDB___VERIFY16 {UCHAR OperationCode;unsigned char Reserved1 : 1;unsigned char ByteCheck : 1;unsigned char BlockVerify : 1;unsigned char Reserved2 : 1;unsigned char DisablePageOut : 1;unsigned char VerifyProtect : 3;UCHAR LogicalBlock[8];UCHAR VerificationLength[4];unsigned char Reserved3 : 7;unsigned char Streaming : 1;UCHAR Control;};
struct _CMP_DISCONNECT {HANDLE hConnect;};
struct _CO_AF_TAPI_SAP {ULONG ulLineID;ULONG ulAddressID;ULONG ulMediaModes;};
typedef int (*_CRT_ALLOC_HOOK)(int, void *, size_t, int, int,  unsigned char *, int);
struct _ClearCache_OUT {ULONG Status;};
struct _FAT_STATISTICS {ULONG CreateHits;ULONG SuccessfulCreates;ULONG FailedCreates;ULONG NonCachedReads;ULONG NonCachedReadBytes;ULONG NonCachedWrites;ULONG NonCachedWriteBytes;ULONG NonCachedDiskReads;ULONG NonCachedDiskWrites;};
struct _IDE_POWER_INFO {IDE_POWER_STATE CurrentPowerState;IDE_POWER_STATE DesiredPowerState;};
struct _INDICATOR_LIST {USHORT MakeCode;USHORT IndicatorFlags;};
struct _IO_REMOVE_LOCK {IO_REMOVE_LOCK_COMMON_BLOCK Common;};
struct _IPTLS_METADATA {ULONGLONG SequenceNumber;};
struct _KEYBOARD_ID_EX {ULONG Type;ULONG Subtype;};
struct _KFLOATING_SAVE {ULONG ControlWord;ULONG StatusWord;ULONG ErrorOffset;ULONG ErrorSelector;ULONG DataOffset;ULONG DataSelector;ULONG Cr0NpxState;ULONG Spare1;};
struct _KSMPEGVID_RECT {ULONG StartX;ULONG StartY;ULONG EndX;ULONG EndY;};
struct _MSV1_0_AV_PAIR {USHORT AvId;USHORT AvLen;};
struct _POWER_SEQUENCE {ULONG SequenceD1;ULONG SequenceD2;ULONG SequenceD3;};
struct _RTL_BITMAP_RUN {ULONG StartingIndex;ULONG NumberOfBits;};
struct _RemoveLink_OUT {ULONG HBAStatus;};
struct _RemovePort_OUT {ULONG HBAStatus;};
struct _VIDEO_CLUTDATA {UCHAR Red;UCHAR Green;UCHAR Blue;UCHAR Unused;};
struct _VOLUME_CONTROL {UCHAR PortVolume[4];};
struct _XSTATE_FEATURE {ULONG Offset;ULONG Size;};
struct tcp_opt_unknown {UINT8 Kind;UINT8 Length;};
typedef USHORT ADDRESS_FAMILY;
typedef enum _ARBITER_ACTION ARBITER_ACTION;
typedef enum _ARBITER_RESULT ARBITER_RESULT;
typedef enum _AVCSTRM_FORMAT AVCSTRM_FORMAT;
typedef enum _tagAvcCommandType AvcCommandType;
typedef enum _tagAvcSubunitType AvcSubunitType;
typedef enum _BdaSignalType BDA_SignalType;
typedef UCHAR CLFS_SCAN_MODE;
typedef enum _5FB4B89D89D7F3E9E930012D26E1CC5E COMPARTMENT_ID;
typedef enum _CSV_CONTROL_OP CSV_CONTROL_OP;
typedef enum _DETECTION_TYPE DETECTION_TYPE;
typedef enum _DOT11_AC_PARAM DOT11_AC_PARAM;
typedef enum _DOT11_BSS_TYPE DOT11_BSS_TYPE;
typedef enum _DOT11_PHY_TYPE DOT11_PHY_TYPE;
typedef HANDLE HFILTER_VOLUME;
typedef void HW_DMA_STARTED(PVOID DeviceExtension);
typedef ICMP_MESSAGE ICMPV4_MESSAGE;
typedef ICMP_MESSAGE ICMPV6_MESSAGE;
typedef enum _IF_ACCESS_TYPE IF_ACCESS_TYPE;
typedef enum _1D78DD8871C05E6FD7D3820402F49BC1 IF_OPER_STATUS;
typedef enum _INTERFACE_TYPE INTERFACE_TYPE;
typedef  PVOID IN_CONST_PVOID;
typedef enum _IO_ACCESS_MODE IO_ACCESS_MODE;
typedef enum _IO_ACCESS_TYPE IO_ACCESS_TYPE;
struct IPNotifyOutput {ulong ino_addr;ulong ino_mask;ulong ino_info[6];};
typedef IR_DEV_CAPS IR_DEV_CAPS_V1;
typedef enum _2EEB654D0A08F9A92362B5D58EAE2147 KSEVENT_DEVCMD;
typedef enum _8BA33F62695D5AFFC5CD1A5F9D35B8BA KSEVENT_DEVICE;
typedef enum _E5E05FC88E8385A5216FCD37A95BAA87 KSPIN_DATAFLOW;
typedef enum _KSPIN_FLAG_AVC KSPIN_FLAG_AVC;
typedef enum _2811190B5E8A43AD046E3AEC6C4B4077 KSPROPERTY_AC3;
typedef enum _6A58EEAD8E4C7DF4F80FA7C6A74A3704 KSPROPERTY_PIN;
typedef enum _D65DCBF02618B4971A14091F77C71942 KSTARGET_STATE;
typedef void KSTART_ROUTINE(PVOID StartContext);
typedef enum _KTMOBJECT_TYPE KTMOBJECT_TYPE;
typedef enum _LOCK_OPERATION LOCK_OPERATION;
typedef ADPCMCOEFSET *LPADPCMCOEFSET;
typedef SOCKADDR_IN6_LH *LPSOCKADDR_IN6;
typedef WAVEFORMATEX *LPWAVEFORMATEX;
typedef enum _NDIS_PORT_TYPE NDIS_PORT_TYPE;
typedef enum _F82217EAE416E44B66BEB74A12D4E69E ND_OPTION_TYPE;
typedef USHORT NET_FRAME_TYPE;
typedef CSHORT NODE_BYTE_SIZE;
typedef USHORT NODE_TYPE_CODE;
typedef ADPCMCOEFSET *NPADPCMCOEFSET;
typedef WAVEFORMATEX *NPWAVEFORMATEX;
typedef enum _BUS_DATA_TYPE *PBUS_DATA_TYPE;
typedef MCA_EXCEPTION *PCMC_EXCEPTION;
typedef MCA_EXCEPTION *PCPE_EXCEPTION;
typedef enum DOT11_DS_INFO *PDOT11_DS_INFO;
typedef DRIVER_CANCEL *PDRIVER_CANCEL;
typedef DRIVER_UNLOAD *PDRIVER_UNLOAD;
typedef DRMWAVEFORMAT *PDRMWAVEFORMAT;
typedef HEAACWAVEINFO *PHEAACWAVEINFO;
typedef void ( *PHW_CANCEL_SRB)(PHW_STREAM_REQUEST_BLOCK SRB);
typedef enum _HW_DMA_RETURN *PHW_DMA_RETURN;
typedef ICMP_HEADER *PICMPV4_HEADER;
typedef ICMP_HEADER *PICMPV6_HEADER;
typedef LARGE_INTEGER *PLARGE_INTEGER;
typedef enum _LLDP_MIB_TYPE *PLLDP_MIB_TYPE;
typedef MFT_ENUM_DATA_V1 *PMFT_ENUM_DATA;
typedef enum _D5E6F51AEB03C07F77C1A65CE86D0EDF PMI_EVENT_TYPE;
typedef UCHAR *PNET_ROOT_TYPE;
typedef NT_SMB_HEADER *PNT_SMB_HEADER;
typedef POSVERSIONINFOA POSVERSIONINFO;
typedef PCMWAVEFORMAT *PPCMWAVEFORMAT;
typedef PROCLOCALAPIC *PPROCLOCALAPIC;
typedef REQ_NT_CANCEL *PREQ_NT_CANCEL;
typedef REQ_NT_RENAME *PREQ_NT_RENAME;
typedef RTL_AVL_TABLE *PRTL_AVL_TABLE;
typedef enum _SCO_LINK_TYPE *PSCO_LINK_TYPE;
typedef enum _SRBEXDATATYPE *PSRBEXDATATYPE;
typedef enum _WWAN_PIN_MODE *PWWAN_PIN_MODE;
typedef enum _WWAN_PIN_TYPE *PWWAN_PIN_TYPE;
typedef enum _WWAN_SMS_FLAG *PWWAN_SMS_FLAG;
typedef ULONG Priority_802_3;
typedef LONGLONG REFERENCE_TIME;
typedef enum _REQUESTER_TYPE REQUESTER_TYPE;
typedef enum _RX_RDBSS_STATE_ RX_RDBSS_STATE;
typedef enum _3F668F976E8CEC135060DE8458EC67A0 SDBUS_PROPERTY;
typedef void ( *SEC_GET_KEY_FN)(void *Arg, void *Principal, unsigned int KeyVer, void **Key, SECURITY_STATUS *Status);
typedef enum _EDF8FA4BB7F3E419A3E1C09777E7A0AF SFFPROT_DCTYPE;
typedef ULONG_PTR SID_HASH_ENTRY;
typedef enum _TDI_PNP_OPCODE TDI_PNP_OPCODE;
typedef enum _TRANSMIT_STATE TRANSMIT_STATE;
typedef enum _UDP_ENCAP_TYPE UDP_ENCAP_TYPE;
typedef enum _USBD_PIPE_TYPE USBD_PIPE_TYPE;
typedef enum _WRITE_ROTATION WRITE_ROTATION;
typedef enum _WWAN_ACE_STATE WWAN_ACE_STATE;
typedef enum _WWAN_PIN_STATE WWAN_PIN_STATE;
typedef enum _WWAN_SIM_CLASS WWAN_SIM_CLASS;
struct _AVC_PIN_COUNT {ULONG PinCount;};
struct _AVC_UNIQUE_ID {GUID DeviceID;};
struct _AddTarget_OUT {ULONG HBAStatus;};
struct _BANK_POSITION {ULONG ReadBankPosition;ULONG WriteBankPosition;};
struct _BDA_PID_UNMAP {ULONG ulcPIDs;ULONG aulPIDs[1];};
struct _CC_FILE_SIZES {LARGE_INTEGER AllocationSize;LARGE_INTEGER FileSize;LARGE_INTEGER ValidDataLength;};
struct _CDB___READ_CD {UCHAR OperationCode;unsigned char RelativeAddress : 1;unsigned char Reserved0 : 1;unsigned char ExpectedSectorType : 3;unsigned char Lun : 3;UCHAR StartingLBA[4];UCHAR TransferBlocks[3];unsigned char Reserved2 : 1;unsigned char ErrorFlags : 2;unsigned char IncludeEDC : 1;unsigned char IncludeUserData : 1;unsigned char HeaderCode : 2;unsigned char IncludeSyncData : 1;unsigned char SubChannelSelection : 3;unsigned char Reserved3 : 5;UCHAR Control;};
struct _CDB___SCAN_CD {UCHAR OperationCode;unsigned char RelativeAddress : 1;unsigned char Reserved1 : 3;unsigned char Direct : 1;unsigned char Lun : 3;UCHAR StartingAddress[4];UCHAR Reserved2[3];unsigned char Reserved3 : 6;unsigned char Type : 2;UCHAR Reserved4;UCHAR Control;};
struct _CDB___WRITE12 {UCHAR OperationCode;unsigned char RelativeAddress : 1;unsigned char Reserved1 : 1;unsigned char EBP : 1;unsigned char ForceUnitAccess : 1;unsigned char DisablePageOut : 1;unsigned char LogicalUnitNumber : 3;UCHAR LogicalBlock[4];UCHAR TransferLength[4];unsigned char Reserved2 : 7;unsigned char Streaming : 1;UCHAR Control;};
struct _CDB___WRITE16 {UCHAR OperationCode;unsigned char Reserved1 : 3;unsigned char ForceUnitAccess : 1;unsigned char DisablePageOut : 1;unsigned char WriteProtect : 3;UCHAR LogicalBlock[8];UCHAR TransferLength[4];unsigned char Reserved2 : 7;unsigned char Streaming : 1;UCHAR Control;};
struct _CDVD_KEY_DATA {UCHAR Key[5];UCHAR Reserved[3];};
struct _CLUSTER_RANGE {LARGE_INTEGER StartingCluster;LARGE_INTEGER ClusterCount;};
struct _CSV_MGMT_LOCK {ULONG Flags;};
typedef enum _239F13ABFE0DEB25C9BEF2C1826A55A5 _FPIEEE_FORMAT;
struct _HAL_CALLBACKS {PCALLBACK_OBJECT SetSystemInformation;PCALLBACK_OBJECT BusCheck;};
struct _IDE_TASK_FILE {IDEREGISTERS Current;IDEREGISTERS Previous;};
struct _MODE_MRW_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PageSavable : 1;UCHAR PageLength;UCHAR Reserved1;unsigned char LbaSpace : 1;unsigned char Reserved2 : 7;UCHAR Reserved3[4];};
typedef int (*_RTC_error_fnW)(int,  unsigned short *, int,  unsigned short *,  unsigned short *, ...);
struct _RemovePort_IN {UCHAR PortWWN[8];};
struct _SecBufferDesc {unsigned int ulVersion;unsigned int cBuffers;PSecBuffer pBuffers;};
struct _TUPLE_REQUEST {USHORT Socket;};
struct _USB_PORT_PATH {ULONG PortPathDepth;ULONG PortPath[6];};
struct _WWAN_PIN_LIST {WWAN_PIN_DESC WwanPinDescPin1;WWAN_PIN_DESC WwanPinDescPin2;WWAN_PIN_DESC WwanPinDescDeviceSimPin;WWAN_PIN_DESC WwanPinDescDeviceFirstSimPin;WWAN_PIN_DESC WwanPinDescNetworkPin;WWAN_PIN_DESC WwanPinDescNetworkSubsetPin;WWAN_PIN_DESC WwanPinDescSvcProviderPin;WWAN_PIN_DESC WwanPinDescCorporatePin;WWAN_PIN_DESC WwanPinDescSubsidyLock;WWAN_PIN_DESC WwanPinDescCustom;};
struct __finddata64_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;long long size;char name[260];};
struct ip_mreq_source {IN_ADDR imr_multiaddr;IN_ADDR imr_sourceaddr;IN_ADDR imr_interface;};
struct tagKS_AMVPSIZE {DWORD dwWidth;DWORD dwHeight;};
struct wavefilter_tag {DWORD cbStruct;DWORD dwFilterTag;DWORD fdwFilter;DWORD dwReserved[5];};
typedef ULONG ACCESS_REASON;
typedef STRING32 ANSI_STRING32;
typedef STRING64 ANSI_STRING64;
typedef enum _BUS_DATA_TYPE BUS_DATA_TYPE;
typedef MCA_EXCEPTION CMC_EXCEPTION;
typedef enum _8C42F93EAAD4EBF2FF4C30FDE456EABE CMP_PLUG_TYPE;
typedef MCA_EXCEPTION CPE_EXCEPTION;
typedef UINT D3DKMT_HANDLE;
typedef enum _6C432552579635BAFB72E2DE7140253C DOCKING_STATE;
typedef enum _0D5B3907082C5F608CE93488DF313CD4 DXGK_SERVICES;
typedef enum _FCB_CONDITION FCB_CONDITION;
typedef void FREE_FUNCTION(PVOID Buffer);
struct HBA_ipaddress {int ipversion;union HBA_ipaddress___4EAECFF073648158AC6DFCBC0F70CF69 ipaddress;};
typedef enum _HW_DMA_RETURN HW_DMA_RETURN;
typedef ICMP_HEADER ICMPV4_HEADER;
typedef ICMP_HEADER ICMPV6_HEADER;
typedef enum _IO_CAPABILITY IO_CAPABILITY;
typedef enum _5D93CEBEF53306420EE1E70105404527 KSEVENT_TUNER;
typedef enum _4BE76D8A2D42FA48351D108905A477D8 KSPROPERTY_GM;
typedef enum _4B933B38561F3202E8B681F2D4CA4B1B KS_MPEG2Level;
typedef enum _LLDP_MIB_TYPE LLDP_MIB_TYPE;
typedef MFT_ENUM_DATA_V1 MFT_ENUM_DATA;
typedef enum _MM_SYSTEM_SIZE MM_SYSTEMSIZE;
typedef enum _NDIS_CLASS_ID NDIS_CLASS_ID;
typedef UCHAR NDIS_DMA_SIZE;
typedef UCHAR NET_ROOT_TYPE;
typedef OSVERSIONINFOA OSVERSIONINFO;
typedef enum _AFD2BA95F9F20215AEC85634F099FBF4 P1284_HW_MODE;
typedef PVOID PACCESS_TOKEN;
typedef ADPCMCOEFSET *PADPCMCOEFSET;
typedef ULONG *PATM_AAL_TYPE;
typedef enum BDA_EVENT_ID *PBDA_EVENT_ID;
typedef enum _80F0FAF9552DB3E28E865A8EDEC675E2 PCI_BUS_WIDTH;
typedef void (*PCLASS_UNLOAD)(PDRIVER_OBJECT DriverObject);
typedef PCUNICODE_STRING PCNDIS_STRING;
typedef enum _ELEMENT_TYPE *PELEMENT_TYPE;
typedef LONG *PEX_SPIN_LOCK;
typedef GENERIC_ANDX *PGENERIC_ANDX;
typedef enum _3ADF40B5A0EAA9D4D385C443F69C37B6 *PIDE_BUS_TYPE;
typedef IMAGE_SYMBOL *PIMAGE_SYMBOL;
typedef IO_NMISOURCE *PIO_NMISOURCE;
typedef enum _IRQ_PRIORITY *PIRQ_PRIORITY;
typedef KSIDENTIFIER *PKSPIN_MEDIUM;
typedef  NPI_MODULEID *PNPI_MODULEID;
typedef enum _0FC989869F227A36D749990E523E5F04 *PPOWER_ACTION;
typedef PO_FX_DEVICE_V1 *PPO_FX_DEVICE;
typedef PREFIX_TABLE *PPREFIX_TABLE;
typedef PROCLOCALGIC *PPROCLOCALGIC;
typedef enum _D3BDF6313D5C42682F258DB657F1A9EF *PRCVALL_VALUE;
typedef ULONG *PSAVEPOINT_ID;
typedef enum _SID_NAME_USE *PSID_NAME_USE;
typedef SOCKADDR_IN6_LH *PSOCKADDR_IN6;
typedef enum _VPD_CODE_SET *PVPD_CODE_SET;
typedef enum _VP_POOL_TYPE *PVP_POOL_TYPE;
typedef WAVEFORMATEX *PWAVEFORMATEX;
typedef enum _WWAN_IP_TYPE *PWWAN_IP_TYPE;
typedef enum _CC5E868E92D22FA173F3C556F0FC8F5F Q2931_IE_TYPE;
typedef enum _SCO_LINK_TYPE SCO_LINK_TYPE;
typedef PVOID SCUTIL_HANDLE;
typedef enum _CD46E8A9ECB90C60412C1D2343F6C90B SFFDISK_DPCMD;
typedef enum _SRBEXDATATYPE SRBEXDATATYPE;
typedef enum _STOR_SPINLOCK STOR_SPINLOCK;
typedef enum _676B88915C1B724692BC802D411C1179 TIME_FUNCTION;
typedef enum _TunerDecoderLockType TunerLockType;
typedef enum _WRITE_THROUGH WRITE_THROUGH;
typedef enum _WWAN_PIN_MODE WWAN_PIN_MODE;
typedef enum _WWAN_PIN_TYPE WWAN_PIN_TYPE;
typedef enum _WWAN_SMS_FLAG WWAN_SMS_FLAG;
struct _ATM_CAUSE_IE {UCHAR Location;UCHAR Cause;UCHAR DiagnosticsLength;UCHAR Diagnostics[4];};
struct _BTHX_VERSION {ULONG Version;};
struct _CDB___LOCATE {UCHAR OperationCode;unsigned char Immediate : 1;unsigned char CPBit : 1;unsigned char BTBit : 1;unsigned char Reserved1 : 2;unsigned char LogicalUnitNumber : 3;UCHAR Reserved3;UCHAR LogicalBlockAddress[4];UCHAR Reserved4;UCHAR Partition;UCHAR Control;};
struct _CDB___READ12 {UCHAR OperationCode;unsigned char RelativeAddress : 1;unsigned char Reserved1 : 2;unsigned char ForceUnitAccess : 1;unsigned char DisablePageOut : 1;unsigned char LogicalUnitNumber : 3;UCHAR LogicalBlock[4];UCHAR TransferLength[4];unsigned char Reserved2 : 7;unsigned char Streaming : 1;UCHAR Control;};
struct _CDB___READ16 {UCHAR OperationCode;unsigned char Reserved1 : 3;unsigned char ForceUnitAccess : 1;unsigned char DisablePageOut : 1;unsigned char ReadProtect : 3;UCHAR LogicalBlock[8];UCHAR TransferLength[4];unsigned char Reserved2 : 7;unsigned char Streaming : 1;UCHAR Control;};
struct _CLFS_NODE_ID {ULONG cType;ULONG cbNode;};
struct _CM_ROM_BLOCK {ULONG Address;ULONG Size;};
struct _IDEREGISTERS {UCHAR bFeaturesReg;UCHAR bSectorCountReg;UCHAR bSectorNumberReg;UCHAR bCylLowReg;UCHAR bCylHighReg;UCHAR bDriveHeadReg;UCHAR bCommandReg;UCHAR bReserved;};
struct _KS_DVD_YCrCb {UCHAR Reserved;UCHAR Y;UCHAR Cr;UCHAR Cb;};
struct _NETWORK_NAME {FLAT_STRING Name;};
struct _PDOSCSI_ADDR {UCHAR PortNumber;UCHAR ScsiPathId;UCHAR TargetId;UCHAR Lun;};
union _RTL_RUN_ONCE {PVOID Ptr;};
struct _SHARE_ACCESS {ULONG OpenCount;ULONG Readers;ULONG Writers;ULONG Deleters;ULONG SharedRead;ULONG SharedWrite;ULONG SharedDelete;};
struct _SUB_Q_HEADER {UCHAR Reserved;UCHAR AudioStatus;UCHAR DataLength[2];};
struct _TOKEN_ORIGIN {LUID OriginatingLogonSession;};
struct _URB_HCD_AREA {PVOID Reserved8[8];};
struct _VIDEO_MEMORY {PVOID RequestedVirtualAddress;};
struct _WSK_BUF_LIST {struct _WSK_BUF_LIST *Next;WSK_BUF Buffer;};
struct tagKS_RGBQUAD {BYTE rgbBlue;BYTE rgbGreen;BYTE rgbRed;BYTE rgbReserved;};
struct tcp_keepalive {ULONG onoff;ULONG keepalivetime;ULONG keepaliveinterval;};
typedef ULONG ATM_AAL_TYPE;
typedef enum _tagAVC_FUNCTION AVC_FUNCTION;
struct AddrXlatInfo {ulong axi_count;ulong axi_index;};
typedef enum _BdaLockType BDA_LockType;
typedef STRING CANSI_STRING;
typedef enum _D3DDDIFORMAT D3DDDIFORMAT;
typedef enum _ELEMENT_TYPE ELEMENT_TYPE;
typedef LONG EX_SPIN_LOCK;
typedef HANDLE GLOBALHANDLE;
typedef enum _3ADF40B5A0EAA9D4D385C443F69C37B6 IDE_BUS_TYPE;
struct IPNotifyData {ulong Version;ulong Add;char Info[1];};
typedef enum _IRQ_PRIORITY IRQ_PRIORITY;
typedef enum _9239C4646B2840F9E3B30EC525310BA9 KSOBJECTTYPE;
typedef PVOID KSOBJECT_BAG;
typedef KSIDENTIFIER KSPIN_MEDIUM;
typedef enum _B8842F298E38803458C077776FB4B251 KS_AMVP_MODE;
typedef enum _KWAIT_REASON KWAIT_REASON;
typedef enum _C9C41CE7F7AB140BE1C872069B92FC11 LATENCY_TIME;
struct LIST_ENTRY32 {ULONG Flink;ULONG Blink;};
struct LIST_ENTRY64 {ULONGLONG Flink;ULONGLONG Blink;};
typedef WAVEFILTER *LPWAVEFILTER;
typedef WAVEFORMAT *LPWAVEFORMAT;
typedef ULONG MEMORY_SPACE;
typedef enum _MMFLUSH_TYPE MMFLUSH_TYPE;
typedef ULONG NDIS_VLAN_ID;
typedef void (*NDK_FN_FLUSH)(NDK_QP *pNdkQp);
typedef NET_IF_ALIAS_LH NET_IF_ALIAS;
typedef enum _06D1ED250FD368380D92731A8809DBAC NL_DAD_STATE;
typedef WAVEFILTER *NPWAVEFILTER;
typedef WAVEFORMAT *NPWAVEFORMAT;
typedef ULONG OB_OPERATION;
typedef  DRMFORWARD *PCDRMFORWARD;
typedef PVOID PCLAIMS_BLOB;
typedef CMP_CONNECT_VER3 *PCMP_CONNECT;
typedef  STRING *PCOEM_STRING;
typedef GUID *PDEVPROPGUID;
typedef ULONG *PDEVPROPTYPE;
typedef PVOID PFLT_CONTEXT;
typedef void (*PFNKSPINVOID)(PKSPIN Pin);
typedef enum _GETSGSTATUS *PGETSGSTATUS;
typedef IO_COUNTERS *PIO_COUNTERS;
typedef enum _MOUSE_STATE *PMOUSE_STATE;
typedef MDL *PNDIS_BUFFER;
typedef PVOID *PNDIS_HANDLE;
typedef enum _NDIS_MEDIUM *PNDIS_MEDIUM;
typedef UNICODE_STRING *PNDIS_STRING;
typedef ULONG *PNET_IFINDEX;
typedef PVOID PNOTIFY_SYNC;
typedef enum _0FC989869F227A36D749990E523E5F04 POWER_ACTION;
typedef PO_FX_DEVICE_V1 PO_FX_DEVICE;
typedef enum _SMB_DIALECT *PSMB_DIALECT;
typedef LONG *PSPFN_NUMBER;
typedef enum _TAPE_STATUS *PTAPE_STATUS;
typedef TIME_FIELDS *PTIME_FIELDS;
typedef ULONG64 *PTRACEHANDLE;
typedef enum _E38CE7F1AC08E248910BE7D26668C82A *PTUNNEL_TYPE;
typedef VM_COUNTERS *PVM_COUNTERS;
typedef enum _D3BDF6313D5C42682F258DB657F1A9EF RCVALL_VALUE;
typedef enum _RX_FILE_TYPE RX_FILE_TYPE;
typedef ULONG SAVEPOINT_ID;
typedef enum _B2FEA4471B4E47BF670D2BF086DC1A6A SFFDISK_DCMD;
typedef enum _SID_NAME_USE SID_NAME_USE;
typedef SOCKADDR_IN6_LH SOCKADDR_IN6;
typedef NODE_TYPE_CODE TYPE_OF_OPEN;
typedef enum _VPD_CODE_SET VPD_CODE_SET;
typedef enum _VP_POOL_TYPE VP_POOL_TYPE;
typedef enum _WWAN_IP_TYPE WWAN_IP_TYPE;
typedef ULONG WWAN_VERSION;
struct _AUTHZ_STATE {ULONG AuthzState;};
struct _AddLink_OUT {ULONG HBAStatus;};
struct _AddPort_OUT {ULONG HBAStatus;};
struct _CDB___CDB10 {UCHAR OperationCode;unsigned char RelativeAddress : 1;unsigned char Reserved1 : 2;unsigned char ForceUnitAccess : 1;unsigned char DisablePageOut : 1;unsigned char LogicalUnitNumber : 3;UCHAR LogicalBlockByte0;UCHAR LogicalBlockByte1;UCHAR LogicalBlockByte2;UCHAR LogicalBlockByte3;UCHAR Reserved2;UCHAR TransferBlocksMsb;UCHAR TransferBlocksLsb;UCHAR Control;};
struct _CDB___CDB12 {UCHAR OperationCode;unsigned char RelativeAddress : 1;unsigned char Reserved1 : 2;unsigned char ForceUnitAccess : 1;unsigned char DisablePageOut : 1;unsigned char LogicalUnitNumber : 3;UCHAR LogicalBlock[4];UCHAR TransferLength[4];UCHAR Reserved2;UCHAR Control;};
struct _CDB___CDB16 {UCHAR OperationCode;unsigned char Reserved1 : 3;unsigned char ForceUnitAccess : 1;unsigned char DisablePageOut : 1;unsigned char Protection : 3;UCHAR LogicalBlock[8];UCHAR TransferLength[4];UCHAR Reserved2;UCHAR Control;};
struct _CDB___ERASE {UCHAR OperationCode;unsigned char Long : 1;unsigned char Immediate : 1;unsigned char Reserved1 : 3;unsigned char LogicalUnitNumber : 3;UCHAR Reserved2[3];UCHAR Control;};
struct _CDB___PRINT {UCHAR OperationCode;unsigned char Reserved : 5;unsigned char LogicalUnitNumber : 3;UCHAR TransferLength[3];UCHAR Control;};
struct _CDB___UNMAP {UCHAR OperationCode;unsigned char Anchor : 1;unsigned char Reserved1 : 7;UCHAR Reserved2[4];unsigned char GroupNumber : 5;unsigned char Reserved3 : 3;UCHAR AllocationLength[2];UCHAR Control;};
struct _CrtMemState {struct _CrtMemBlockHeader *pBlockHeader;size_t lCounts[5];size_t lSizes[5];size_t lHighWaterCount;size_t lTotalCount;};
struct _DSM_VERSION {ULONG MajorVersion;ULONG MinorVersion;ULONG ProductBuild;ULONG QfeNumber;};
struct _FILE_ID_128 {UCHAR Identifier[16];};
struct _FLAT_STRING {SHORT MaximumLength;SHORT Length;char Buffer[1];};
struct _IO_COUNTERS {ULONGLONG ReadOperationCount;ULONGLONG WriteOperationCount;ULONGLONG OtherOperationCount;ULONGLONG ReadTransferCount;ULONGLONG WriteTransferCount;ULONGLONG OtherTransferCount;};
struct _IR_DEV_CAPS {ULONG_PTR ProtocolVersion;ULONG_PTR NumTransmitPorts;ULONG_PTR NumReceivePorts;ULONG_PTR LearningReceiverMask;ULONG_PTR DevCapsFlags;};
struct _KEYBOARD_ID {UCHAR Type;UCHAR Subtype;};
struct _PORT_OUTPUT {UCHAR ChannelSelection;UCHAR Volume;};
struct _SendLIRR_IN {UCHAR SourceWWN[8];UCHAR DestWWN[8];UCHAR Function;UCHAR Type;};
struct _TIME_FIELDS {CSHORT Year;CSHORT Month;CSHORT Day;CSHORT Hour;CSHORT Minute;CSHORT Second;CSHORT Milliseconds;CSHORT Weekday;};
typedef ULONG ACCESS_MASK;
typedef STRING ANSI_STRING;
typedef enum _BRB_VERSION BRB_VERSION;
typedef GUID CLFS_LOG_ID;
typedef CMP_CONNECT_VER3 CMP_CONNECT;
typedef enum _4EB082DFE97E2478F2076624F2DA8794 ChannelType;
typedef enum _D3DDDI_POOL D3DDDI_POOL;
typedef enum _DEBUG_LEVEL DEBUG_LEVEL;
typedef GUID DEVPROPGUID;
typedef ULONG DEVPROPTYPE;
typedef enum _DPFLTR_TYPE DPFLTR_TYPE;
typedef enum _GETSGSTATUS GETSGSTATUS;
typedef enum HBA_wwntype HBA_WWNTYPE;
typedef void HW_TIMER_EX(PVOID DeviceExtension, PVOID Context);
typedef void HW_WORKITEM(PVOID HwDeviceExtension, PVOID Context, PVOID Worker);
struct ICMPv6Stats {ulong icmps_msgs;ulong icmps_errors;ulong icmps_typecount[256];};
typedef UINT *INOUT_PUINT;
typedef enum _B7D2D905F5EEADB8A12D41415E190E1C KSSTACK_USE;
typedef HANDLE LOCALHANDLE;
typedef enum _MOUSE_STATE MOUSE_STATE;
typedef enum _E30A00E4222EAF4A672E1227DA7CD141 MSV1_0_AVID;
typedef MDL NDIS_BUFFER;
typedef PVOID NDIS_HANDLE;
typedef enum _NDIS_MEDIUM NDIS_MEDIUM;
typedef UNICODE_STRING NDIS_STRING;
typedef ULONG NET_IFINDEX;
typedef enum _E248109EE30B8C00485013D3FC9AB4CA P1284_PHASE;
typedef ACE_HEADER *PACE_HEADER;
typedef  DRMRIGHTS *PCDRMRIGHTS;
typedef void (*PCLASS_TICK)(PDEVICE_OBJECT DeviceObject);
typedef USHORT *PCO_FLUSHTO;
typedef PSecHandle PCredHandle;
typedef PSecHandle PCtxtHandle;
typedef enum DOT11_BAND *PDOT11_BAND;
typedef ISA_VECTOR *PISA_VECTOR;
typedef KSIDENTIFIER *PKSPROPERTY;
typedef enum _LLDP_SCOPE *PLLDP_SCOPE;
typedef STRING *PLSA_STRING;
typedef enum _MEDIA_TYPE *PMEDIA_TYPE;
typedef KMUTEX *PNDIS_MUTEX;
typedef UINT16 *PNET_IFTYPE;
typedef ULONG *PPFN_NUMBER;
typedef RTL_BITMAP *PRTL_BITMAP;
typedef SMB_HEADER *PSMB_HEADER;
typedef SMB_PARAMS *PSMB_PARAMS;
typedef USN_RECORD_V2 *PUSN_RECORD;
typedef WAVEFILTER *PWAVEFILTER;
typedef WAVEFORMAT *PWAVEFORMAT;
typedef PWMIREGGUIDW PWMIREGGUID;
typedef PWMIREGINFOW PWMIREGINFO;
typedef PVOID PWSK_CLIENT;
typedef enum _WWAN_RADIO *PWWAN_RADIO;
typedef enum _CFDB0D303165423155BC335C42AADBEC SCOPE_LEVEL;
typedef UCHAR SDP_BOOLEAN;
typedef ULONG SERVICETYPE;
typedef enum _SMB_DIALECT SMB_DIALECT;
typedef LONG SPFN_NUMBER;
typedef enum _SRB_COMMAND SRB_COMMAND;
typedef enum _TAPE_STATUS TAPE_STATUS;
typedef TDI_CMSGHDR_XP TDI_CMSGHDR;
typedef ULONG64 TRACEHANDLE;
typedef enum _E38CE7F1AC08E248910BE7D26668C82A TUNNEL_TYPE;
typedef LONG USBD_STATUS;
typedef ULONG WWAN_STATUS;
struct _ATM_VPIVCI {ULONG Vpi;ULONG Vci;};
struct _AVC_PIN_ID {ULONG PinId;};
struct _AddPort_IN {UCHAR PortWWN[8];};
struct _CDB___SEEK {UCHAR OperationCode;unsigned char Reserved1 : 5;unsigned char LogicalUnitNumber : 3;UCHAR LogicalBlockAddress[4];UCHAR Reserved2[3];UCHAR Control;};
struct _CIP_LISTEN {HANDLE hConnect;};
struct _CONFIG_ROM {ULONG CR_Info;ULONG CR_Signiture;ULONG CR_BusInfoBlockCaps;ULONG CR_Node_UniqueID[2];ULONG CR_Root_Info;};
struct _D3DDDIRECT {LONG left;LONG top;LONG right;LONG bottom;};
struct _FPDT_TABLE {DESCRIPTION_HEADER Header;};
struct _KS_DVD_YUV {UCHAR Reserved;UCHAR Y;UCHAR V;UCHAR U;};
struct _MSAcpiInfo {ULONG BootArchitecture;ULONG PreferredProfile;ULONG Capabilities;};
struct _MSWmi_Guid {UCHAR Guid[16];};
struct _NDIS_EVENT {KEVENT Event;};
struct _SENSE_DATA {unsigned char ErrorCode : 7;unsigned char Valid : 1;UCHAR SegmentNumber;unsigned char SenseKey : 4;unsigned char Reserved : 1;unsigned char IncorrectLength : 1;unsigned char EndOfMedia : 1;unsigned char FileMark : 1;UCHAR Information[4];UCHAR AdditionalSenseLength;UCHAR CommandSpecificInformation[4];UCHAR AdditionalSenseCode;UCHAR AdditionalSenseCodeQualifier;UCHAR FieldReplaceableUnitCode;UCHAR SenseKeySpecific[3];};
struct _SYSID_1394 {UCHAR x1394[8];};
struct _SYSID_UUID {UCHAR Uuid[16];};
struct _SendRLS_IN {UCHAR PortWWN[8];UCHAR DestWWN[8];};
struct _TOKEN_USER {SID_AND_ATTRIBUTES User;};
struct _TRACK_DATA {UCHAR Reserved;unsigned char Control : 4;unsigned char Adr : 4;UCHAR TrackNumber;UCHAR Reserved1;UCHAR Address[4];};
struct _VAR_STRING {ULONG ulTotalSize;ULONG ulNeededSize;ULONG ulUsedSize;ULONG ulStringFormat;ULONG ulStringSize;ULONG ulStringOffset;};
struct _VIDEO_MODE {ULONG RequestedMode;};
struct __utimbuf32 {__time32_t actime;__time32_t modtime;};
struct __utimbuf64 {__time64_t actime;__time64_t modtime;};
typedef enum _430F34FDD05865024699A32F04EA8E7D ARP_OPCODE;
typedef USHORT CO_FLUSHTO;
typedef SecHandle CredHandle;
typedef SecHandle CtxtHandle;
typedef enum _EVENT_TYPE EVENT_TYPE;
typedef USHORT HBA_UINT16;
typedef ULONG HBA_UINT32;
typedef ULONGLONG HBA_UINT64;
typedef ULONG_PTR HTAPI_CALL;
typedef ULONG_PTR HTAPI_LINE;
typedef void (*IDE_HW_DPC)(PVOID ChannelExtension);
struct IPSNMPInfo {ulong ipsi_forwarding;ulong ipsi_defaultttl;ulong ipsi_inreceives;ulong ipsi_inhdrerrors;ulong ipsi_inaddrerrors;ulong ipsi_forwdatagrams;ulong ipsi_inunknownprotos;ulong ipsi_indiscards;ulong ipsi_indelivers;ulong ipsi_outrequests;ulong ipsi_routingdiscards;ulong ipsi_outdiscards;ulong ipsi_outnoroutes;ulong ipsi_reasmtimeout;ulong ipsi_reasmreqds;ulong ipsi_reasmoks;ulong ipsi_reasmfails;ulong ipsi_fragoks;ulong ipsi_fragfails;ulong ipsi_fragcreates;ulong ipsi_numif;ulong ipsi_numaddr;ulong ipsi_numroutes;};
typedef UCHAR IRB_STATUS;
typedef ULONG_PTR KSPIN_LOCK;
typedef KSIDENTIFIER KSPROPERTY;
typedef DWORD KS_AM_Step;
typedef enum _LLDP_SCOPE LLDP_SCOPE;
typedef DWORD *LPCOLORREF;
typedef STRING LSA_STRING;
typedef enum _MEDIA_TYPE MEDIA_TYPE;
typedef KMUTEX NDIS_MUTEX;
typedef UINT16 NET_IFTYPE;
typedef STRING OEM_STRING;
typedef PVOID *OUT_PPVOID;
typedef APICTABLE *PAPICTABLE;
typedef LONG PBDARESULT;
typedef UCHAR *PBTHSTATUS;
typedef CLIENT_ID *PCLIENT_ID;
typedef UCHAR *PCO_LENGTH;
typedef  UCSCHAR *PCUUCSCHAR;
typedef ULONG *PDEVPROPID;
typedef enum _DMA_SPEED *PDMA_SPEED;
typedef enum _DMA_WIDTH *PDMA_WIDTH;
typedef ULONG_PTR *PDWORD_PTR;
typedef FILE_LOCK *PFILE_LOCK;
typedef ULONG PFN_NUMBER;
typedef KSIDENTIFIER *PKSDEGRADE;
typedef LARGE_MCB *PLARGE_MCB;
typedef ULONGLONG *PREGHANDLE;
typedef PVOID *PRX_HANDLE;
typedef USHORT *PSDP_ERROR;
typedef SECURITY_INTEGER *PTimeStamp;
typedef ULONGLONG *PULONGLONG;
typedef enum _SUITE_TYPE SUITE_TYPE;
typedef LONG TDI_STATUS;
typedef enum _TIMER_TYPE TIMER_TYPE;
typedef enum _TOKEN_TYPE TOKEN_TYPE;
typedef USN_RECORD_V2 USN_RECORD;
typedef WMIREGGUIDW WMIREGGUID;
typedef WMIREGINFOW WMIREGINFO;
typedef enum _WWAN_RADIO WWAN_RADIO;
struct _APICTABLE {UCHAR Type;UCHAR Length;};
struct _BIN_RANGE {LARGE_INTEGER StartValue;LARGE_INTEGER Length;};
struct _CLIENT_ID {HANDLE UniqueProcess;HANDLE UniqueThread;};
struct _FCP_FRAME {unsigned char ctype : 4;unsigned char cts : 4;UCHAR payload[511];};
struct _SCSI_ADDR {UCHAR PortNumber;UCHAR ScsiPathId;UCHAR TargetId;UCHAR Lun;};
struct _SecHandle {ULONG_PTR dwLower;ULONG_PTR dwUpper;};
struct _VIDEO_VDM {HANDLE ProcessHandle;};
struct nd_opt_hdr {UINT8 nd_opt_type;UINT8 nd_opt_len;};
struct tagDEVCAPS {LONG CanRecord;LONG CanRecordStrobe;LONG HasAudio;LONG HasVideo;LONG UsesFiles;LONG CanSave;LONG DeviceType;LONG TCRead;LONG TCWrite;LONG CTLRead;LONG IndexRead;LONG Preroll;LONG Postroll;LONG SyncAcc;LONG NormRate;LONG CanPreview;LONG CanMonitorSrc;LONG CanTest;LONG VideoIn;LONG AudioIn;LONG Calibrate;LONG SeekType;LONG SimulatedHardware;};
struct tcp_opt_ws {UINT8 Kind;UINT8 Length;UINT8 ShiftCnt;};
typedef enum _BIN_TYPES BIN_TYPES;
typedef UCHAR BTHSTATUS;
typedef UCHAR CO_LENGTH;
typedef ULONG DEVPROPID;
typedef enum _B2EB8B93357D17BDFB6172EECC16498C DMA_FLAGS;
typedef enum _DMA_SPEED DMA_SPEED;
typedef enum _DMA_WIDTH DMA_WIDTH;
typedef ULONGLONG DWORDLONG;
typedef ULONG_PTR DWORD_PTR;
typedef enum _FILE_TYPE FILE_TYPE;
typedef LONGLONG HBA_INT64;
typedef UCHAR HBA_UINT8;
typedef ULONG_PTR HDRV_CALL;
typedef ULONG_PTR HDRV_LINE;
struct ICMPStats {ulong icmps_msgs;ulong icmps_errors;ulong icmps_destunreachs;ulong icmps_timeexcds;ulong icmps_parmprobs;ulong icmps_srcquenchs;ulong icmps_redirects;ulong icmps_echos;ulong icmps_echoreps;ulong icmps_timestamps;ulong icmps_timestampreps;ulong icmps_addrmasks;ulong icmps_addrmaskreps;};
typedef ULONG_PTR KAFFINITY;
typedef enum _KD_OPTION KD_OPTION;
typedef LONG KPRIORITY;
typedef KSIDENTIFIER KSDEGRADE;
typedef enum _LOWIO_OPS LOWIO_OPS;
typedef NDIS_PROC_CALLBACK *NDIS_PROC;
typedef UINT *OUT_PUINT;
typedef BASE_MCB *PBASE_MCB;
typedef ULONGLONG *PBTH_ADDR;
typedef  UCSCHAR *PCUCSCHAR;
typedef  UCSCHAR *PCUUCSSTR;
typedef enum _PDO_STATE PDO_STATE;
typedef enum _DSM_TYPE *PDSM_TYPE;
typedef FLOAT128 *PFLOAT128;
typedef void (*PFNKSFREE)(PVOID Data);
typedef ULONG PFN_COUNT;
typedef UINT16 *PHANDLE16;
typedef UINT32 *PHANDLE32;
typedef UINT64 *PHANDLE64;
typedef NET_IFINDEX *PIF_INDEX;
typedef KSIDENTIFIER *PKSMETHOD;
typedef PVOID PKSWORKER;
typedef LONGLONG *PLONGLONG;
typedef ULONG *PNDIS_OID;
typedef enum _POOL_TYPE POOL_TYPE;
typedef SMB_DATE *PSMB_DATE;
typedef SMB_TIME *PSMB_TIME;
typedef STRING32 *PSTRING32;
typedef STRING64 *PSTRING64;
typedef TIMECODE *PTIMECODE;
typedef UCSCHAR *PUUCSCHAR;
typedef ULONGLONG REGHANDLE;
typedef PVOID RX_HANDLE;
typedef USHORT SDP_ERROR;
typedef SECURITY_INTEGER TimeStamp;
typedef LONG VP_STATUS;
typedef enum _WAIT_TYPE WAIT_TYPE;
struct _CIP_HDR1 {unsigned int DBC : 8;unsigned int Rsv00 : 2;unsigned int SPH : 1;unsigned int QPC : 3;unsigned int FN : 2;unsigned int DBS : 8;unsigned int SID : 6;unsigned int Bit00 : 2;};
struct _CIP_STOP {HANDLE hConnect;};
struct _CIP_TALK {HANDLE hConnect;};
struct _FILETIME {DWORD dwLowDateTime;DWORD dwHighDateTime;};
struct _LUN_LIST {UCHAR LunListLength[4];UCHAR Reserved[4];UCHAR Lun[][8];};
struct _NT_TIB32 {ULONG ExceptionList;ULONG StackBase;ULONG StackLimit;ULONG SubSystemTib;ULONG FiberData;ULONG ArbitraryUserPointer;ULONG Self;};
struct _NT_TIB64 {ULONG64 ExceptionList;ULONG64 StackBase;ULONG64 StackLimit;ULONG64 SubSystemTib;ULONG64 FiberData;ULONG64 ArbitraryUserPointer;ULONG64 Self;};
struct _PCW_DATA { void *Data;ULONG Size;};
struct _VGA_CHAR {CHAR Char;CHAR Attributes;};
struct __timeb32 {__time32_t time;unsigned short millitm;short timezone;short dstflag;};
struct __timeb64 {__time64_t time;unsigned short millitm;short timezone;short dstflag;};
struct _heapinfo {int *_pentry;size_t _size;int _useflag;};
struct tagPOINTS {SHORT x;SHORT y;};
struct utimbuf32 {__time32_t actime;__time32_t modtime;};
typedef enum _ACL_MODE ACL_MODE;
typedef enum _BRB_TYPE BRB_TYPE;
typedef ULONGLONG BTH_ADDR;
typedef CLS_LSN CLFS_LSN;
typedef DWORD COLORREF;
typedef enum _DSM_TYPE DSM_TYPE;
typedef UINT16 HANDLE16;
typedef UINT32 HANDLE32;
typedef UINT64 HANDLE64;
typedef void HW_TIMER(PVOID DeviceExtension);
typedef NET_IFINDEX IF_INDEX;
typedef PVOID IN_PVOID;
typedef UCHAR IN_UCHAR;
typedef ULONG IN_ULONG;
typedef KSIDENTIFIER KSMETHOD;
typedef  RECTL *LPCRECTL;
typedef HANDLE *LPHANDLE;
typedef ULONG NDIS_OID;
typedef NET_LUID_LH NET_LUID;
typedef LONG NTSTATUS;
typedef ULONG *PBTH_COD;
typedef ULONG *PBTH_LAP;
typedef WSACMSGHDR *PCMSGHDR;
typedef UCHAR *PCO_TYPE;
typedef CSTRING *PCSTRING;
typedef  UCSCHAR *PCUCSSTR;
typedef  USHORT *PCUSHORT;
typedef enum _PDO_CAPS PDO_CAPS;
typedef enum _PDO_TYPE PDO_TYPE;
typedef FEALIST *PFEALIST;
typedef GEALIST *PGEALIST;
typedef UINT8 *PHANDLE8;
typedef NET_LUID *PIF_LUID;
typedef IOSAPIC *PIOSAPIC;
typedef KSIDENTIFIER *PKSEVENT;
typedef enum _B4EFCEC8C68CF8B596CEF68A8AD15C1A *PKSSTATE;
typedef ULONG *PLOGICAL;
typedef ULONG *PNDIS_AF;
typedef UINT32 *PSEQ_NUM;
typedef LONG_PTR *PSSIZE_T;
typedef UCSCHAR *PUCSCHAR;
typedef UCSCHAR *PUUCSSTR;
typedef CHAR SEC_CHAR;
typedef HANDLE *SPHANDLE;
typedef ULONG SPI_TYPE;
struct _AVC_IRB {AVC_FUNCTION Function;};
struct _CLS_LSN {ULONGLONG Internal;};
struct _CSTRING {USHORT Length;USHORT MaximumLength; char *Buffer;};
union _DL_EI48 {UINT8 Byte[3];};
union _DL_EI64 {UINT8 Byte[5];};
struct _IDEREGS {UCHAR bFeaturesReg;UCHAR bSectorCountReg;UCHAR bSectorNumberReg;UCHAR bCylLowReg;UCHAR bCylHighReg;UCHAR bDriveHeadReg;UCHAR bCommandReg;UCHAR bReserved;};
struct _MSFC_TM {ULONG tm_sec;ULONG tm_min;ULONG tm_hour;ULONG tm_mday;ULONG tm_mon;ULONG tm_year;ULONG tm_wday;ULONG tm_yday;ULONG tm_isdst;};
struct _PCI_PMC {unsigned char Version : 3;unsigned char PMEClock : 1;unsigned char Rsvd1 : 1;unsigned char DeviceSpecificInitialization : 1;unsigned char Rsvd2 : 2;struct _PCI_PMC___PM_SUPPORT Support;};
struct _T0_DATA {ULONG Lc;ULONG Le;};
struct __VRB_SG {long long PhysicalAddress;ULONG Length;};
struct addrinfo {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;size_t ai_addrlen;char *ai_canonname;struct sockaddr *ai_addr;struct addrinfo *ai_next;};
struct tagPOINT {LONG x;LONG y;};
typedef UCHAR BOOLEAN;
typedef ULONG BTH_COD;
typedef ULONG BTH_LAP;
typedef WSACMSGHDR CMSGHDR;
typedef UCHAR CO_TYPE;
typedef UINT8 HANDLE8;
typedef HBA_UINT32 HBA_COS;
struct HBA_wwn {HBA_UINT8 wwn[8];};
typedef HICON HCURSOR;
typedef HANDLE HFILTER;
typedef HANDLE HGLOBAL;
typedef HINSTANCE HMODULE;
typedef NET_LUID IF_LUID;
typedef enum _E230A553FC43DE80D792089E8D4F6A36 IPPROTO;
typedef KSIDENTIFIER KSEVENT;
typedef enum _D64CEF8F52066C406CD4BA6573420261 KSRESET;
typedef enum _B4EFCEC8C68CF8B596CEF68A8AD15C1A KSSTATE;
typedef ULONG LOGICAL;
typedef  GUID *LPCGUID;
typedef  RECT *LPCRECT;
typedef DWORD *LPDWORD;
typedef SIZE *LPSIZEL;
typedef LONG_PTR LRESULT;
typedef ULONG NDIS_AF;
typedef UCHAR *PCO_FCS;
typedef USHORT *PCO_MTU;
typedef  SCHAR *PCSCHAR;
typedef CSHORT *PCSHORT;
typedef  UCHAR *PCUCHAR;
typedef  ULONG *PCULONG;
typedef  CHAR *PCZZSTR;
typedef HANDLE *PHANDLE;
typedef IOAPIC *PIOAPIC;
typedef enum _E230A553FC43DE80D792089E8D4F6A36 *PIPROTO;
typedef NT_TIB *PNT_TIB;
typedef PVOID *POPLOCK;
typedef ULONG_PTR *PSIZE_T;
typedef STRING *PSTRING;
typedef UCSCHAR *PUCSSTR;
typedef USHORT *PUSHORT;
typedef UINT32 SEQ_NUM;
typedef LONG_PTR SSIZE_T;
struct _DVINFO {DWORD dwDVAAuxSrc;DWORD dwDVAAuxCtl;DWORD dwDVAAuxSrc1;DWORD dwDVAAuxCtl1;DWORD dwDVVAuxSrc;DWORD dwDVVAuxCtl;DWORD dwDVReserved[2];};
struct _KEVENT {DISPATCHER_HEADER Header;};
struct _NT_TIB {struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;PVOID StackBase;PVOID StackLimit;PVOID SubSystemTib;PVOID FiberData;PVOID ArbitraryUserPointer;struct _NT_TIB *Self;};
struct _POINTL {LONG x;LONG y;};
union _UCHAR1 {UCHAR Uchar[1];UCHAR ForceAlignment;};
typedef unsigned short _Wint_t;
struct ip_mreq {IN_ADDR imr_multiaddr;IN_ADDR imr_interface;};
typedef size_t rsize_t;
struct tagRECT {LONG left;LONG top;LONG right;LONG bottom;};
struct tagSIZE {LONG cx;LONG cy;};
typedef UCHAR CO_FCS;
typedef USHORT CO_MTU;
typedef ULONG FOURCC;
typedef USHORT FSHORT;
typedef HANDLE HLOCAL;
typedef ULONG IFTYPE;
typedef ULONG IPAddr;
typedef ULONG IPMask;
typedef USHORT LANGID;
typedef LONG_PTR LPARAM;
typedef BOOL *LPBOOL;
typedef BYTE *LPBYTE;
typedef  CHAR *LPCSTR;
typedef GUID *LPGUID;
typedef WORD *LPWORD;
typedef ULONG OFFSET;
typedef PVOID OPLOCK;
typedef PVOID ORHKEY;
typedef  UCHAR *PCBYTE;
typedef CCHAR *PCCHAR;
typedef  CHAR *PCNZCH;
typedef LPCSTR PCTSTR;
typedef DWORD *PDWORD;
typedef FLOAT *PFLOAT;
typedef MAPIC *PMAPIC;
typedef SCHAR *PSCHAR;
typedef SHORT *PSHORT;
typedef SIZE *PSIZEL;
typedef UCHAR *PUCHAR;
typedef ULONG *PULONG;
typedef USHORT *PUSAGE;
typedef CHAR *PZZSTR;
typedef ULONG_PTR SIZE_T;
typedef UINT_PTR WPARAM;
struct _COORD {SHORT X;SHORT Y;};
struct _KGATE {DISPATCHER_HEADER Header;};
struct _RECTL {LONG left;LONG top;LONG right;LONG bottom;};
typedef __time32_t time_t;
typedef ULONG CLONG;
typedef GUID CLSID;
typedef UCHAR FCHAR;
typedef ULONG FLONG;
typedef GUID FMTID;
typedef UCHAR KIRQL;
typedef  CHAR *LPCCH;
typedef CHAR *LPSTR;
typedef GUID NPIID;
typedef CHAR *NPSTR;
typedef BOOL *PBOOL;
typedef BYTE *PBYTE;
typedef CHAR *PCHAR;
typedef  CHAR *PCSTR;
typedef LPCCH PCTCH;
typedef DSDT *PDSDT;
typedef EAOP *PEAOP;
typedef GUID *PGUID;
typedef HKEY *PHKEY;
typedef PULONG PLCID;
typedef LONG *PLONG;
typedef MDL *PMDLX;
typedef CHAR *PNZCH;
typedef QUAD *PQUAD;
typedef LPSTR PTSTR;
typedef WORD *PWORD;
typedef LONGLONG RXVBO;
typedef SIZE SIZEL;
typedef QUAD UQUAD;
typedef USHORT USAGE;
typedef unsigned short WCHAR;
struct _QUAD {union _QUAD___563CC45C8CF107F9F4F62DBD7F648A58 u;};
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;unsigned short *_W_decimal_point;unsigned short *_W_thousands_sep;unsigned short *_W_int_curr_symbol;unsigned short *_W_currency_symbol;unsigned short *_W_mon_decimal_point;unsigned short *_W_mon_thousands_sep;unsigned short *_W_positive_sign;unsigned short *_W_negative_sign;};
struct timeb {time_t time;unsigned short millitm;short timezone;short dstflag;};
typedef WORD ATOM;
typedef ULONGLONG CLSN;
typedef ULONG LCID;
typedef CHAR *LPCH;
typedef enum _MODE MODE;
typedef ACL *PACL;
typedef  CHAR *PCCH;
typedef FEA *PFEA;
typedef GEA *PGEA;
typedef IRP *PIRP;
typedef MCB *PMCB;
typedef PVOID PSID;
typedef CHAR *PSTR;
typedef LPCH PTCH;
typedef GUID *PUOW;
typedef WCHAR *PWCH;
typedef RSDT_32 RSDT;
typedef GUID UUID;
struct _MCB {LARGE_MCB DummyFieldThatSizesThisStructureCorrectly;};
struct _NPI {HANDLE Handle; void *Dispatch;};
typedef GUID IID;
typedef ULONG LBN;
typedef CHAR *PCH;
typedef CHAR *PSZ;
typedef GUID UOW;
typedef LONGLONG USN;
typedef ULONG VBN;
struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711___3E1F33A4D6146CCFCE9EB881F18EEEC7 {ULONG Flags;USHORT AltitudeLength;USHORT AltitudeBufferOffset;USHORT VolumeNameLength;USHORT VolumeNameBufferOffset;USHORT FilterNameLength;USHORT FilterNameBufferOffset;ULONG SupportedFeatures;};
struct _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5___D80251304882AD479C33D66627E6BB6D {ULONG Flags;USHORT FilterNameLength;USHORT FilterNameBufferOffset;USHORT FilterAltitudeLength;USHORT FilterAltitudeBufferOffset;};
struct _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5___F53AFF6980E02C8263F2E1590A50DA7A {ULONG Flags;ULONG FrameID;ULONG NumberOfInstances;USHORT FilterNameLength;USHORT FilterNameBufferOffset;USHORT FilterAltitudeLength;USHORT FilterAltitudeBufferOffset;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR_________DE3CCB929DB832FEAC38EBA7195AFD95___BB7094CF39B58C60385FAAA7DFEE1197 {ULONG Level;ULONG Vector;KAFFINITY Affinity;};
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___0B910CEDC59248BCDC53AAAD9E906EAA {ULONG CountToRead;ULONG Reserved[3];SFFDISK_DEVICE_RPMB_DATA_FRAME AuthenticatedReadFrame;SFFDISK_DEVICE_RPMB_DATA_FRAME ReturnedFrameData[1];};
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___0FC824BA0302BE32D35D01F029B1AD05 {ULONG CountToWrite;ULONG Reserved[3];SFFDISK_DEVICE_RPMB_DATA_FRAME ResultFrame;SFFDISK_DEVICE_RPMB_DATA_FRAME FrameDataToWrite[1];};
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___581006640C95FBAB4BFA285C52463061 {ULONG Reserved[4];SFFDISK_DEVICE_RPMB_DATA_FRAME ResultFrame;SFFDISK_DEVICE_RPMB_DATA_FRAME ProgramAuthKeyFrame;};
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___60E89AF55FEDC62AB5124B8D3E3FE988 {ULONG Reserved[4];SFFDISK_DEVICE_RPMB_DATA_FRAME ResultFrame;SFFDISK_DEVICE_RPMB_DATA_FRAME QueryWriteCounterFrame;};
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___EA160FC66BC16F497CF08E0A7DD91C4D {ULONGLONG Gpp_1_SizeInBytes;ULONGLONG Gpp_2_SizeInBytes;ULONGLONG Gpp_3_SizeInBytes;ULONGLONG Gpp_4_SizeInBytes;ULONG GppBlockSize;};
struct _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93___2338CFC5105DF7E384B2C185C8FBCF5A {ULONG FrameID;ULONG NumberOfInstances;USHORT FilterNameLength;USHORT FilterNameBufferOffset;USHORT FilterAltitudeLength;USHORT FilterAltitudeBufferOffset;};
struct _FILE_REMOTE_PROTOCOL_INFORMATION___63A064FF7C4EF3DC6E958885DE390874___3AC68F171D171C587D8A80AB3E80154E {struct _FILE_REMOTE_PROTOCOL_INFORMATION______3AC68F171D171C587D8A80AB3E80154E___55E32AD925E5589114AECD9F8222A621 Server;struct _FILE_REMOTE_PROTOCOL_INFORMATION______3AC68F171D171C587D8A80AB3E80154E___4024C6681B04613664DD05BB2C95A759 Share;};
struct _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7___9B7144FD41D26DD547F4C3FA36F343DB {ULONG DriveMap;UCHAR DriveType[32];};
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___400A9E4FD04D5F129B6A6DD288D7BEF4 {UINT FaultedFenceId;NTSTATUS Status;UINT NodeOrdinal;UINT EngineOrdinal;};
union _DXGKARG_BUILDPAGINGBUFFER_________31A6E6E69D11548870F9DD66858D70C9___44EAA8E240A8DE9BFA1FE26FC8D5EF22 {LARGE_INTEGER SegmentAddress;MDL *pMdl;};
union _DXGKARG_BUILDPAGINGBUFFER_________C9D31DD41E1FADF97E70E45B8DDAE5D0___44EAA8E240A8DE9BFA1FE26FC8D5EF22 {LARGE_INTEGER SegmentAddress;MDL *pMdl;};
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA___92BCF8F8996F0A3CD2E63EB1EBBE61D8 {UCHAR ServiceType;ULONG Latency;};
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA___D3AE0C0A124DD0DE7B3E9AC1D2855E05 {ULONG Flags;L2CAP_RETRANSMISSION_AND_FLOW_CONTROL RetransmissionAndFlow;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___05881B79B3CAFBFC2EAF6FE4C8FAB51F {PHYSICAL_ADDRESS Start;ULONG Length64;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___08205AB7C2167E8C9C2BF0274334A928 {PHYSICAL_ADDRESS Start;ULONG Length48;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___0FE99879202BD133F2D64F545464A292 {ULONG Channel;ULONG RequestLine;UCHAR TransferWidth;UCHAR Reserved1;UCHAR Reserved2;UCHAR Reserved3;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___ACFC0B8B00258A4187B421B4FDF1B18A {UCHAR Class;UCHAR Type;UCHAR Reserved1;UCHAR Reserved2;ULONG IdLowPart;ULONG IdHighPart;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___BB7094CF39B58C60385FAAA7DFEE1197 {ULONG Level;ULONG Vector;KAFFINITY Affinity;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___BBBCA153A119060DF311607C16E36BB2 {PHYSICAL_ADDRESS Start;ULONG Length;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___EB36DC85652755C8EC8C69A205B736DB {PHYSICAL_ADDRESS Start;ULONG Length40;};
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___1D2285BA9AE7386B60F6E3B61C9FBCF3 {L2CAP_DISCONNECT_REASON Reason;BOOLEAN CloseNow;};
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___9E9E7C0E34D4E998220BB8024C1EC0F5 {CHANNEL_CONFIG_PARAMETERS_ENHANCED CurrentParams;CHANNEL_CONFIG_PARAMETERS_ENHANCED RequestedParams;CHANNEL_CONFIG_PARAMETERS_ENHANCED ResponseParams;USHORT Response;};
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___DDC57483DA80FA367A27C1F6944A9F5F {ULONG NumExtraOptions;PL2CAP_CONFIG_OPTION ExtraOptions;};
struct _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762___9B7144FD41D26DD547F4C3FA36F343DB {ULONG DriveMap;UCHAR DriveType[32];};
struct _DXGKARG_BUILDPAGINGBUFFER______3EB8CABE069EF4BB3B59E8B4E119E046___C9D31DD41E1FADF97E70E45B8DDAE5D0 {UINT SegmentId;_DXGKARG_BUILDPAGINGBUFFER_________31A6E6E69D11548870F9DD66858D70C9___44EAA8E240A8DE9BFA1FE26FC8D5EF22 __anonymous0;};
struct _DXGKARG_BUILDPAGINGBUFFER______B8543B8A5FA03AFF2CFE9331D405A718___34F45DEC358C162226AEB40EE1713239 {UINT SegmentId;LARGE_INTEGER SegmentAddress;};
struct _DXGKARG_BUILDPAGINGBUFFER______F96A1248A3A1B3EAF839ECFA87915C7E___C9D31DD41E1FADF97E70E45B8DDAE5D0 {UINT SegmentId;_DXGKARG_BUILDPAGINGBUFFER_________31A6E6E69D11548870F9DD66858D70C9___44EAA8E240A8DE9BFA1FE26FC8D5EF22 __anonymous0;};
struct _NLB_PUBLIC_IOCTL_INPUT_________0BF847604AFDCDBF1A158B1DB8767C47___EC338A43ABF6B75852E48F7D35CA5A68 {HOOK_IP_ADDRESS IP;USHORT Port;};
struct _FUNCTIONAL_DEVICE_EXTENSION___50C61D085A2F906BF66460A0C351E861___73D0177DA111EAE28DEBDBC67FA5AB79 {ULONG Version;PDEVICE_OBJECT DeviceObject;};
struct _NETWORK_OPEN_ECP_CONTEXT_V0___05ECC70A33AA78360CE5BAA96286B27B___A10C39190F0F2427004629954B88C2E8 {NETWORK_OPEN_LOCATION_QUALIFIER Location;NETWORK_OPEN_INTEGRITY_QUALIFIER Integrity;};
struct _TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529___DCDD09C3FB597D7805CC66AAC35A1C26 {TDI_ADD_ADDRESS_HANDLER AddAddressHandler;TDI_DEL_ADDRESS_HANDLER DelAddressHandler;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___E4F4861FB104718B686777235333E57B {UINT SegmentId;PHYSICAL_ADDRESS PhysicalAddress;};
union _HDAUDIO_CODEC_RESPONSE______EBA4BFB70B136AE598193DB3C50674E5___F7A0B89072390A37182FF8981BAE8E57 {struct _HDAUDIO_CODEC_RESPONSE_________F7A0B89072390A37182FF8981BAE8E57___41EFFB85977F698B0114BF219457EB7D Unsolicited;ULONG Response;};
union _NLB_PUBLIC_IOCTL_INPUT______DD4D914590692A0344DAA3E8E6A718EB___0BF847604AFDCDBF1A158B1DB8767C47 {ULONG PortIndex;struct _NLB_PUBLIC_IOCTL_INPUT_________0BF847604AFDCDBF1A158B1DB8767C47___EC338A43ABF6B75852E48F7D35CA5A68 ServerTuple;};
struct _PHYSICAL_DEVICE_EXTENSION___441C77CE4BDFA0084198F2EE5537E17E___73D0177DA111EAE28DEBDBC67FA5AB79 {ULONG Version;PDEVICE_OBJECT DeviceObject;};
struct _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12___A2D12BBF9FDE02488895E7FF9970C0E3 {SCO_DISCONNECT_REASON Reason;BOOLEAN CloseNow;};
union _VPD_BLOCK_LIMITS_PAGE______6D8344D7D2E60C771339A25A2275A935___48AE7A0C43572EBB1C54711BBCEF1E27 {_VPD_BLOCK_LIMITS_PAGE_________48AE7A0C43572EBB1C54711BBCEF1E27___1171F22B554AE5456697F3AA7B60F002 __anonymous0;UCHAR UnmapGranularityAlignment[4];};
union _DISPATCHER_HEADER_________122E4B3396C704A8B6A7CF97EAAF7D74___E0F499287B198740481681CBD6043B35 {UCHAR ThreadControlFlags;struct _DISPATCHER_HEADER____________E0F499287B198740481681CBD6043B35___A88D3AAC38BB26B7BA3A58BD453FEA82 s;};
union _DISPATCHER_HEADER_________2986B08B47BF9BFD72B43A2B98AB18CC___AAB494C8674620924F4E93AFE0F5B426 {UCHAR TimerControlFlags;struct _DISPATCHER_HEADER____________AAB494C8674620924F4E93AFE0F5B426___F32BA6C812E0F769F09938C2098D009F s;};
union _DISPATCHER_HEADER_________3D88FD3E473BDC33E8E9B3C9823BBBAC___9AEC1978167063A5A657752090B9C59F {UCHAR TimerMiscFlags;struct _DISPATCHER_HEADER____________9AEC1978167063A5A657752090B9C59F___2FBC6CFED9A28A64EC4EE027A1B73629 s;};
struct _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0___093282B89252D62DDE409211CEEEE04C {ULONG ResumeCount;ULONGLONG FullResume;ULONGLONG AverageResume;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___6F2DCCC140478981F4C84F12EF58F0E8 {ULONG Length;ULONG Alignment;PHYSICAL_ADDRESS MinimumAddress;PHYSICAL_ADDRESS MaximumAddress;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___90A8EEE83C9F91E29DD5F8EE42946559 {ULONG Length40;ULONG Alignment40;PHYSICAL_ADDRESS MinimumAddress;PHYSICAL_ADDRESS MaximumAddress;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___9B5808D9D572DC66358F5E90A8A74F4F {ULONG Length48;ULONG Alignment48;PHYSICAL_ADDRESS MinimumAddress;PHYSICAL_ADDRESS MaximumAddress;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___ACFC0B8B00258A4187B421B4FDF1B18A {UCHAR Class;UCHAR Type;UCHAR Reserved1;UCHAR Reserved2;ULONG IdLowPart;ULONG IdHighPart;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___DA030873C766E4C7B95104F99E17565C {ULONG Length64;ULONG Alignment64;PHYSICAL_ADDRESS MinimumAddress;PHYSICAL_ADDRESS MaximumAddress;};
struct _BRB_L2CA_OPEN_CHANNEL___2205ED29735D6185B7CC4245BA253E72___92BCF8F8996F0A3CD2E63EB1EBBE61D8 {UCHAR ServiceType;ULONG Latency;};
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___1D2285BA9AE7386B60F6E3B61C9FBCF3 {L2CAP_DISCONNECT_REASON Reason;BOOLEAN CloseNow;};
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___DDC57483DA80FA367A27C1F6944A9F5F {ULONG NumExtraOptions;PL2CAP_CONFIG_OPTION ExtraOptions;};
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___EA7A87208E3E8087220E134963950D88 {CHANNEL_CONFIG_PARAMETERS CurrentParams;CHANNEL_CONFIG_PARAMETERS RequestedParams;CHANNEL_CONFIG_PARAMETERS ResponseParams;USHORT Response;};
struct _VPD_BLOCK_LIMITS_PAGE___FA2E4E0823A0B10E6F7DCB7EE3FDAC7A___6D8344D7D2E60C771339A25A2275A935 {UCHAR Reserved0;UCHAR MaximumCompareAndWriteLength;UCHAR OptimalTransferLengthGranularity[2];UCHAR MaximumTransferLength[4];UCHAR OptimalTransferLength[4];UCHAR MaxPrefetchXDReadXDWriteTransferLength[4];UCHAR MaximumUnmapLBACount[4];UCHAR MaximumUnmapBlockDescriptorCount[4];UCHAR OptimalUnmapGranularity[4];_VPD_BLOCK_LIMITS_PAGE______6D8344D7D2E60C771339A25A2275A935___48AE7A0C43572EBB1C54711BBCEF1E27 __anonymous0;UCHAR Reserved1[28];};
union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___122E4B3396C704A8B6A7CF97EAAF7D74 {union _DISPATCHER_HEADER_________122E4B3396C704A8B6A7CF97EAAF7D74___E0F499287B198740481681CBD6043B35 u;UCHAR Hand;UCHAR Size;};
union _IO_STACK_LOCATION______0F8D78D040FF3560CA28CFD6A777B9AE___7E80610E1B9C691709D7734F8FEF924B {ULONG SystemContext;SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;};
struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___90DDF8997D261BEC455E3EBCF23FFD67 {SDBUS_ERASE_TYPE EraseType;ULONG StartBlock;ULONG EndBlock;};
struct _DISK_DETECTION_INFO___48876EDB82F731E03DD8D988B59F7EB8___C6895C4B5C301AAC9475EDA00CD39D51 {DISK_INT13_INFO Int13;DISK_EX_INT13_INFO ExInt13;};
struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___538BBEAAFB526DA55D87E8D9C61BE453 {USHORT SubstituteNameOffset;USHORT SubstituteNameLength;USHORT PrintNameOffset;USHORT PrintNameLength;WCHAR PathBuffer[1];};
struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___7F2A391463C85579B142CF8A59256159 {GUID TagGuid;UCHAR DataBuffer[1];};
struct _NT_SMB_HEADER_________4F8831D3A8722163D7D711A38E950EFF___D1702EC55EA39E7B8B84C855211D69BC {ULONG Key;USHORT Sid;USHORT SequenceNumber;USHORT Gid;};
struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___538BBEAAFB526DA55D87E8D9C61BE453 {USHORT SubstituteNameOffset;USHORT SubstituteNameLength;USHORT PrintNameOffset;USHORT PrintNameLength;WCHAR PathBuffer[1];};
struct _WAIT_CONTEXT_BLOCK___4501E438057B524022C881311375F7D8___AFA4B425CF8D1FD581BF88EDB4DB420B {LIST_ENTRY DmaWaitEntry;ULONG NumberOfChannels;unsigned int SyncCallback : 1;unsigned int DmaContext : 1;unsigned int Reserved : 30;};
struct _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6___61AC8A2B58CFD260593455E7BA36662D {SIZE_T ProcessImageNameOffset;ULONG ProcessId;ULONG ServiceTag;};
struct _FLT_CALLBACK_DATA___312C66EF40AEDAF2A3A5D4554FF51F28___AF593265884A231A5F64AB3E7AB0774C {LIST_ENTRY QueueLinks;PVOID QueueContext[2];};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___0B4B6594CAB5E465787267831231A11E {ULONG Length;FILE_INFORMATION_CLASS FileInformationClass;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___3EEFC530056981631A2136A7505B6E7C {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG IoControlCode;PVOID Type3InputBuffer;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___41591AB00568573FD23A44C44B36D401 {BOOLEAN InPath;BOOLEAN Reserved[3];DEVICE_USAGE_NOTIFICATION_TYPE Type;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___5886429FC15D5D9FBCD15B5B7E423A41 {ULONG WhichSpace;PVOID Buffer;ULONG Offset;ULONG Length;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___70BA97A5E111D15A65F2B5969B1432E5 {ULONG Length;PVOID EaList;ULONG EaListLength;ULONG EaIndex;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___7336F5CE809A28AD3CEF03AEB402B448 {DEVICE_TEXT_TYPE DeviceTextType;LCID LocaleId;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A0C1706FD51296A5870D577CA7F99003 {ULONG Length;FS_INFORMATION_CLASS FsInformationClass;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___D177823888D2499403AB088A16B8A5D6 {ULONG Length;ULONG Key;LARGE_INTEGER ByteOffset;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E1830675726AC350ADD284B511E01E52 {SECURITY_INFORMATION SecurityInformation;PSECURITY_DESCRIPTOR SecurityDescriptor;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E9AB88EACB9E2856AF9688A39BBEAD59 {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG FsControlCode;PVOID Type3InputBuffer;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___F0865C6FA226E0A715609B3D711D72E6 {SECURITY_INFORMATION SecurityInformation;ULONG Length;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___FA02ECF11A69AC1E6B191DC34CAEB912 {PVPB Vpb;PDEVICE_OBJECT DeviceObject;};
struct _IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2___13073B7CB035872C4D9FD7FB30B0281A {UINT8 Handle;UINT16 AliasDeviceId;UINT8 Variety;};
struct _KUSER_SHARED_DATA___E012BA1FCB959C5ACB245290F5960DFD___E80489C3E818F50385E1FFEB85439BB9 {BOOLEAN TscQpcEnabled;UCHAR TscQpcShift;};
struct DL_TEREDO_ADDRESS___90126361DB06D31AC779EF63186CE8C6___87CC70020A842B1AC26340D80EF2CD57 {USHORT Flags;USHORT MappedPort;IN_ADDR MappedAddress;};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___20347F80BDDE7CED824A1C3E12EB14E6 {USHORT PrefixLengthInBytes;WCHAR PrefixString[1];};
struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___A35BCFC4393A820CBA8699E45B0DC901 {USHORT ExtensionLengthInBytes;WCHAR ExtensionString[1];};
struct _HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893___83D0A1D806B42BB3CFEB24AD25988CD4 {USAGE UsageMin;USAGE UsageMax;USHORT StringMin;USHORT StringMax;USHORT DesignatorMin;USHORT DesignatorMax;USHORT DataIndexMin;USHORT DataIndexMax;};
struct _HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893___9A2DEDAE27CA526CD6B2E1277E119468 {USAGE Usage;USAGE Reserved1;USHORT StringIndex;USHORT Reserved2;USHORT DesignatorIndex;USHORT Reserved3;USHORT DataIndex;USHORT Reserved4;};
union _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA___DCE4F7C37BB8311C74F011B1C8562952 {struct _IMAGE_AUX_SYMBOL______DCE4F7C37BB8311C74F011B1C8562952___3E868562AB90F0B001BAD735FF84E5A3 Function;struct _IMAGE_AUX_SYMBOL______DCE4F7C37BB8311C74F011B1C8562952___50827E48B61BB1B6D5157F089F0837CE Array;};
union _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA___DE029D051A7479C614D66B3BC2EAA5D0 {struct _IMAGE_AUX_SYMBOL______DE029D051A7479C614D66B3BC2EAA5D0___5BDCCE9CDA78802544222B2C68F4ACCC LnSz;ULONG TotalSize;};
union _LOWIO_CONTEXT______3158FA256123766910623FA14A28078A___B6068E2419538643A346D908FDFDE457 {PLOWIO_LOCK_LIST LockList;LONGLONG Length;};
union _NT_SMB_HEADER______69A4AD5419EA3D4C8A0ABF1A7711CEED___4F8831D3A8722163D7D711A38E950EFF {_NT_SMB_HEADER_________4F8831D3A8722163D7D711A38E950EFF___D1702EC55EA39E7B8B84C855211D69BC __anonymous0;UCHAR SecuritySignature[8];};
struct _SMB_HEADER_________34C178CB18FCF9B52F82980C351547DB___D1702EC55EA39E7B8B84C855211D69BC {ULONG Key;USHORT Sid;USHORT SequenceNumber;USHORT Gid;};
struct _HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41___83D0A1D806B42BB3CFEB24AD25988CD4 {USAGE UsageMin;USAGE UsageMax;USHORT StringMin;USHORT StringMax;USHORT DesignatorMin;USHORT DesignatorMax;USHORT DataIndexMin;USHORT DataIndexMax;};
struct _HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41___9A2DEDAE27CA526CD6B2E1277E119468 {USAGE Usage;USAGE Reserved1;USHORT StringIndex;USHORT Reserved2;USHORT DesignatorIndex;USHORT Reserved3;USHORT DataIndex;USHORT Reserved4;};
struct _RXCE_SIGNATURE____133B17B9D3CB80B518FB5AF2A06254B1___D56F8B1863917927A478371C2B4391CD {USHORT Type;CSHORT Size;};
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___A8945491307EAC7B88D14EFBDDAC9963 {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG IoControlCode;PVOID InputBuffer;PVOID OutputBuffer;};
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___B2CAEB05560B1B5609C03D1D0C22322E {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG IoControlCode;PVOID SystemBuffer;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___41591AB00568573FD23A44C44B36D401 {BOOLEAN InPath;BOOLEAN Reserved[3];DEVICE_USAGE_NOTIFICATION_TYPE Type;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___5886429FC15D5D9FBCD15B5B7E423A41 {ULONG WhichSpace;PVOID Buffer;ULONG Offset;ULONG Length;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___7336F5CE809A28AD3CEF03AEB402B448 {DEVICE_TEXT_TYPE DeviceTextType;LCID LocaleId;};
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___11EA1119CC79FBA10791013D30AA59BE {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG FsControlCode;PVOID SystemBuffer;};
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___FA02ECF11A69AC1E6B191DC34CAEB912 {PVPB Vpb;PDEVICE_OBJECT DeviceObject;};
union _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23 {struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23___0516FB65A30BF30ED1CBCB9E0A080D81 Transmit;struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23___A160C96603A00ACF5A7C4A243294620B Receive;};
union _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY___2AA764CCAD4465B40EF2819DA8B429D2 {ULONG Flags;_PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY___2AA764CCAD4465B40EF2819DA8B429D2___19436C2F0C0C306A8BFD7B32BBC2825D __anonymous0;};
struct _MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC___62646870AE5B68D63F726DC7B906275E {ULONG DataCollectionSize;NETROOT_THROTTLING_PARAMETERS PipeReadThrottlingParameters;};
struct _NT_SMB_HEADER___1981ACDE232C6DE21F6ECE4E585F2227___69A4AD5419EA3D4C8A0ABF1A7711CEED {USHORT PidHigh;_NT_SMB_HEADER______69A4AD5419EA3D4C8A0ABF1A7711CEED___4F8831D3A8722163D7D711A38E950EFF __anonymous0;};
struct _NT_SMB_HEADER___EFB48DF9E93823741A1223EC6F9E871B___FC77E2F8670B2F58D81FC02676A7A797 {UCHAR ErrorClass;UCHAR Reserved;USHORT Error;};
union _RX_CONTEXT______0E64B696EDD7DC71B6561395573F3971___6FE7070A58AC6E12D42CE47521BA6502 {FS_INFORMATION_CLASS FsInformationClass;FILE_INFORMATION_CLASS FileInformationClass;};
union _RX_CONTEXT______86805C25ACFE1D5CF2EE68C1410C95AB___495EECD16AAD7612FB99F9950DB2D822 {NTSTATUS StoredStatus;PVOID StoredStatusAlignment;};
union _SMB_HEADER______4051A1DFD32F501AB1EB47AEE5569E00___34C178CB18FCF9B52F82980C351547DB {_NT_SMB_HEADER_________4F8831D3A8722163D7D711A38E950EFF___D1702EC55EA39E7B8B84C855211D69BC __anonymous0;UCHAR SecuritySignature[8];};
union _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR___31591524D764D3BBCEB254E6332A248B {ULONG AsUlong;_USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR___31591524D764D3BBCEB254E6332A248B___6F865FCB40142115B3FDCF5472778760 __anonymous0;};
struct _NDIS_RW_LOCK___8DA56E8A00A40642C2533108FF443746___A1347237DC898E262687A42C1AC243F2 {KSPIN_LOCK SpinLock;PVOID Context;};
struct _DL_EUI64______A9DCE9EB2C6B848E9C6868EF1C1A4D5A___AB4C09936D2B120E3DDD8B4D45A5D7FF {UINT8 Type;UINT8 Tse;DL_EI48 Ei48;};
union _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY___8220F45EC4CA30F4B7BEFF9D32D9F1CE {ULONG Flags;_PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY___8220F45EC4CA30F4B7BEFF9D32D9F1CE___E68E69178BF9C90E9AD3136A5DA83667 __anonymous0;};
union _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY___E355F55852CE4C01F070476D6F7C9BBB {ULONG Flags;_PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY___E355F55852CE4C01F070476D6F7C9BBB___1D6DC8237BA491DDA746AC6A0CA5DF74 __anonymous0;};
struct _RX_CONTEXT___6AFB99893DFF2673B7FC3EB4E39AD6BC___86805C25ACFE1D5CF2EE68C1410C95AB {_RX_CONTEXT______86805C25ACFE1D5CF2EE68C1410C95AB___495EECD16AAD7612FB99F9950DB2D822 __anonymous0;ULONG_PTR InformationToReturn;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___4C13AF031D06E093FE52B506E8E4A77C {ULONG FileIndex;BOOLEAN RestartScan;BOOLEAN ReturnSingleEntry;BOOLEAN IndexSpecified;BOOLEAN InitialQuery;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___E1830675726AC350ADD284B511E01E52 {SECURITY_INFORMATION SecurityInformation;PSECURITY_DESCRIPTOR SecurityDescriptor;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___E92C6DBFB4AF914E88BD4C5D248FCB7C {ULONG FlagsForLowIo;LOWIO_CONTEXT LowIoContext;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___F0865C6FA226E0A715609B3D711D72E6 {SECURITY_INFORMATION SecurityInformation;ULONG Length;};
struct _SMB_HEADER___9087A7F271D3D790A38473E0603644E5___4051A1DFD32F501AB1EB47AEE5569E00 {USHORT PidHigh;_NT_SMB_HEADER______69A4AD5419EA3D4C8A0ABF1A7711CEED___4F8831D3A8722163D7D711A38E950EFF __anonymous0;};
struct _V_NET_ROOT___67228D3E87097EDE9B472C5F8816F370___D3338666C09A8578FAD5206245EB6400 {MRX_NORMAL_NODE_HEADER spacer;PNET_ROOT NetRoot;};
union _DL_EUI64___111DC19AD74244695D2230B77DE8AE02___A9DCE9EB2C6B848E9C6868EF1C1A4D5A {DL_EI64 Ei64;_DL_EUI64______A9DCE9EB2C6B848E9C6868EF1C1A4D5A___AB4C09936D2B120E3DDD8B4D45A5D7FF __anonymous0;};
struct _NET_ROOT___340FAF2C1DA1218AC74455EBD02C5C0A___4CB3A38A6DD30C9447592C75F663798A {MRX_NORMAL_NODE_HEADER spacer;PSRV_CALL SrvCall;};
union _FOBX______ADD771FE9CD79D23D667359594276EB2___865247889A0C7AF3CF91917EA6941236 {_MRX_PIPE_HANDLE_INFORMATION __anonymous0;MRX_PIPE_HANDLE_INFORMATION PipeHandleInformation;};
union _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83 {struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83___B906FBF57CF9FF7366BAF5FEA2701BCC Transmit;struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83___CC46BAFA385FB9077FD080B9665E9ABA Receive;};
union _IRP______2AD798E65616C4F7304824DBFA27E419___63BBF9CAFCFD23268916A053C4643290 {KDEVICE_QUEUE_ENTRY DeviceQueueEntry;_IRP_________63BBF9CAFCFD23268916A053C4643290___D67882FDDE0993B795A398485751D997 __anonymous0;};
struct _IRP______2AD798E65616C4F7304824DBFA27E419___665C8370128C04AB892B069E6FB086E8 {LIST_ENTRY ListEntry;_IRP_________665C8370128C04AB892B069E6FB086E8___8B5CD6CDFBAAB114E6B0B83ED2C2A4E9 __anonymous0;};
struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___IPV4_ARP_PARAMETERS {ULONG Flags;UCHAR RemoteIPv4Address[4];UCHAR HostIPv4Address[4];UCHAR MacAddress[6];};
struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___IPV6_NS_PARAMETERS {ULONG Flags;UCHAR RemoteIPv6Address[16];UCHAR SolicitedNodeIPv6Address[16];UCHAR MacAddress[6];UCHAR TargetIPv6Addresses[2][16];};
struct _FOBX___B95E32BA05695D37ADEEDE609BEA19EE___154C6638EF194F9A81AE81169DF8572C {MRX_NORMAL_NODE_HEADER spacer;PSRV_OPEN SrvOpen;};
union _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE___1A0DE5E9D8917651411CC9599FC7DD6D {STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY Lev1Depends[];STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY Lev2Depends[];};
struct _FCB___50C0FDD650F19B09787FD38ED35AB87F___E4F32DF01258BB49EB743B84D1B370FA {FSRTL_ADVANCED_FCB_HEADER spacer;PNET_ROOT NetRoot;};
union _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER___CFC7B0DA028A7F4F3B52DE418131CED1 {UCHAR MethodName[4];ULONG MethodNameAsUlong;};
union _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5 {struct _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5___F53AFF6980E02C8263F2E1590A50DA7A MiniFilter;struct _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5___D80251304882AD479C33D66627E6BB6D LegacyFilter;};
union _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING___CFC7B0DA028A7F4F3B52DE418131CED1 {UCHAR MethodName[4];ULONG MethodNameAsUlong;};
union _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR___7981EB885823FFAE046A8EBFAC9A705A {ULONG CounterIndex;ULONG ExtendedRegisterAddress;struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR___7981EB885823FFAE046A8EBFAC9A705A___DD41CD652535E6B68DB16881A824C165 Range;};
struct ____1B15D34C184CB996FC269D8F9168C70F___2045542961514ACF8A05342E7D7A4BD3 {PVOID Unused;LONG_PTR Alignment[2];};
struct ____1B15D34C184CB996FC269D8F9168C70F___557E0A75632B2AB77ABA22F73346E46E {HANDLE Event;ULONG_PTR Reserved[2];};
struct ____7D59497C865DE6C98CEC474B1DC28F43___97C49605D0EAB7C21A896C4F2E74D2BC {USHORT DfsPathOffset;USHORT DfsAlternatePathOffset;USHORT NetworkAddressOffset;GUID ServiceSiteGuid;};
union ____99F8928C094CB2C20BF05591F5CB082D___FE8FDDC6ADACC1B4F7EC8CFC7CAEB9FF {UCHAR AsUCHAR;struct _______FE8FDDC6ADACC1B4F7EC8CFC7CAEB9FF___006192E8E41FD8F2EA1B27D51D7CA475 s;};
struct ____9EF2451CEFA2D95A0F2C171B14CF10A6___DEC6D8E934FC1F5324F6B18F87CE5851 {ULONG ConstrainedDataRangesCount;PKSDATARANGE *ConstrainedDataRanges;};
struct ____EED1528C7EAD0409AD8D581383F39997___38167C14DDD6FD68ECBEEF1BA5418F40 {ULONG PayloadSize;BYTE Payload[512];};
struct ____F044539147C377D1A0F579F3A4EAC6A7___8DB12206A787E12F5CB68E9C5F8D04FA {GUID Set;ULONG Id;ULONG Flags;};
union _DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS___CD4A4751E03E0E13D07F13C0897CF7F0 {_DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS___CD4A4751E03E0E13D07F13C0897CF7F0___345C9315266921A5615E194C0B7E8CDB __anonymous0;UINT Value;};
union _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS___0A21D9AE078C811356AA56F1AA8C2BF4 {_DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS___0A21D9AE078C811356AA56F1AA8C2BF4___DFB25419D061610BA88AF429AD796DE8 __anonymous0;UINT Value;};
union _NDIS_NET_BUFFER_LIST_FILTERING_INFO___B48DC90554B964DE8C747D9B814BBB60 {struct _NDIS_NET_BUFFER_LIST_FILTERING_INFO___B48DC90554B964DE8C747D9B814BBB60___0013F1FA1361201B5291CFCA2EDFB635 FilteringInfo;PVOID Value;};
union _D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS___A8B88D5BDB1228732AE547855E9ABDB5 {_D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS___A8B88D5BDB1228732AE547855E9ABDB5___4E1282F14A853ABC73F5BB5DDE693C4C __anonymous0;UINT Value;};
union _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS___034D7373B817C02422E4D62DA035E5FF {_DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS___034D7373B817C02422E4D62DA035E5FF___E2BAFAAC7C89847FEE3380BA63F38ACC __anonymous0;UINT Value;};
union _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93 {struct _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93___2338CFC5105DF7E384B2C185C8FBCF5A MiniFilter;struct _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93___332EADD4F62035FD5633C7FF38BB14E6 LegacyFilter;};
union _PROCESS_EXTENDED_BASIC_INFORMATION___E6BF994F87CD7E8E9F73233F6875B43D {ULONG Flags;struct _PROCESS_EXTENDED_BASIC_INFORMATION___E6BF994F87CD7E8E9F73233F6875B43D___93879C939F9799A7AEAC28A80CFADCC1 s;};
union _D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS___655BA7FA29CCB4E6E8B3A600E5702580 {_D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS___655BA7FA29CCB4E6E8B3A600E5702580___CDF29082CFF35E0EAA14A197F1DCF33C __anonymous0;UINT Value;};
union _DXGK_CREATECONTEXTALLOCATIONFLAGS___61A6213A88C057D16E4E0A395CF0FF00 {_DXGK_CREATECONTEXTALLOCATIONFLAGS___61A6213A88C057D16E4E0A395CF0FF00___7E05657BE3DFA69514CB298BBA2D5DDF __anonymous0;UINT Value;};
union _117E3A994AEBF040E18388CACE709509___F044539147C377D1A0F579F3A4EAC6A7 {____F044539147C377D1A0F579F3A4EAC6A7___8DB12206A787E12F5CB68E9C5F8D04FA __anonymous0;LONGLONG Alignment;};
union _1E49DD38FB2118FBA108586CF41E8D50___E178C36FC483474FC566940F4ECECCD0 {USHORT AsUSHORT;struct ____E178C36FC483474FC566940F4ECECCD0___12EDD93CAC4208332C3108DBB4839320 s;};
union _2319D0803FA8D60BE4B5925A7A9CB62F___6FF570DE39DD7AC51D2C8779583801A9 {struct ____6FF570DE39DD7AC51D2C8779583801A9___78C70DD6D6F7B4A2EF6C7EC5E1A96854 bits;USHORT AsUSHORT;};
union _2319D0803FA8D60BE4B5925A7A9CB62F___C0FDAA75702D310095668259A700B2EB {struct ____C0FDAA75702D310095668259A700B2EB___87BB28B1146A9074D2787F4C46A2017B bits;ULONG AsULONG;};
union _4C3688935B439E6B73B5D283DA0CA595___9EF2451CEFA2D95A0F2C171B14CF10A6 {LONGLONG Reserved;____9EF2451CEFA2D95A0F2C171B14CF10A6___DEC6D8E934FC1F5324F6B18F87CE5851 __anonymous0;};
union _5A8D7CCD30F40712144BEFCDAC7E1929___3D2B62F9915B44C4461260C3662DC358 {ULONG InstanceNameList;ULONG BaseNameOffset;ULONG_PTR Pdo;ULONG_PTR InstanceInfo;};
union _6D91A0F5ACE4E1ABC2608485BBBFEC12___38AB66A4EA7C49F20D686D738A108FEA {____38AB66A4EA7C49F20D686D738A108FEA___013671E5920392F7B68C675C97F9F7D8 __anonymous0;ULONG Value;};
union _742D342C7048E2C3902DF7570B72F6FC___1E7C0E17512837337D4DA69F160D7B1A {HANDLE ObjectHandle;PVOID ObjectPointer;};
union _81CBD782E1765289C4F89D039AD60F12___9F1A7E006C2BA3848AD5B824CC804FF9 {SCARD_T0_COMMAND CmdBytes;UCHAR rgbHeader[5];};
union _A2B9D6959A188CB660A127F9232FE650___99F8928C094CB2C20BF05591F5CB082D {UCHAR Spare;union ____99F8928C094CB2C20BF05591F5CB082D___FE8FDDC6ADACC1B4F7EC8CFC7CAEB9FF Flags;};
struct _A4FB595EF421231CAF150DDD3288A6D5___33A5881EA3D20175AF6F6CBC82269B7B {ULONG FormatSize;ULONG Flags;ULONG SampleSize;ULONG Reserved;GUID MajorFormat;GUID SubFormat;GUID Specifier;};
union _A9A577EE7A824FAC978D1F581F222FD5___5A61C97CDA6B159BFB90D97CD02CBE5B {PETH_FILTER EthDB;PNULL_FILTER NullDB;};
union _C62299E2FAA36942CDE27418DA4FF5CB___7D59497C865DE6C98CEC474B1DC28F43 {____7D59497C865DE6C98CEC474B1DC28F43___97C49605D0EAB7C21A896C4F2E74D2BC __anonymous0;____7D59497C865DE6C98CEC474B1DC28F43___3F669E74CC6D42C10CB60EC7CCFC5702 __anonymous1;};
union _F686D1C2766FDD5B6EB9F09F9CA57BCC___82DE14DB9EA53355F37C8BC9C4425BE7 {VIDEO_CLUTDATA RgbArray;ULONG RgbLong;};
struct _ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F___ATM_AAL0_INFO {BOOLEAN CellLossPriority;UCHAR PayLoadTypeIdentifier;};
struct _ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F___ATM_AAL5_INFO {BOOLEAN CellLossPriority;UCHAR UserToUserIndication;UCHAR CommonPartIndicator;};
union _DXGK_SETVIDPNSOURCEADDRESS_FLAGS___0DB8D2702BCADD830BEA3156E7D1B675 {_DXGK_SETVIDPNSOURCEADDRESS_FLAGS___0DB8D2702BCADD830BEA3156E7D1B675___BE2C2AF3484C88CA375E3E49ACA8104B __anonymous0;UINT Value;};
union _FILE_REMOTE_PROTOCOL_INFORMATION___63A064FF7C4EF3DC6E958885DE390874 {struct _FILE_REMOTE_PROTOCOL_INFORMATION___63A064FF7C4EF3DC6E958885DE390874___3AC68F171D171C587D8A80AB3E80154E Smb2;ULONG Reserved[16];};
union _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY___45A98C1F8CA82C31F92D6F2DB941F5BF {ULONG UnwindData;struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY___45A98C1F8CA82C31F92D6F2DB941F5BF___63C64F7D5703FAD7B76B7BD1AFA1ED4F s;};
union _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7 {struct _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7___94C088134ED8F25DD6CC04D6DA40A0AF Set;struct _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7___9B7144FD41D26DD547F4C3FA36F343DB Query;};
union _TXFS_READ_BACKUP_INFORMATION_OUT___C1F058836943135750608F5E6F329B74 {ULONG BufferLength;UCHAR Buffer[1];};
union _D3DKMDT_MONITOR_FREQUENCY_RANGE___5DFEF500743829CE0535851E9E30CA31 {D3DKMDT_2DREGION ActiveSize;SIZE_T MaxPixelRate;};
union _LOADER_PARTITION_INFORMATION_EX___86D3AC22214D8559AD53D7C151554AB3 {ULONG Signature;GUID DeviceId;};
union _STORAGE_DEVICE_LAYOUT_SIGNATURE___EAC3BE34E0D92A563AB4E2E6C3906A31 {ULONG MbrSignature;GUID GptDiskId;};
union _ACPI_EVAL_INPUT_BUFFER_COMPLEX___CFC7B0DA028A7F4F3B52DE418131CED1 {UCHAR MethodName[4];ULONG MethodNameAsUlong;};
union _BRB_L2CA_OPEN_ENHANCED_CHANNEL___F699C0DB98285CF9E5D39CB87B49A7E7 {_BRB_L2CA_OPEN_CHANNEL___C3EA006E90E98BA18A832E0DDC1D8811___53B92DDCBF9996BF5092A8CE7C1BACE6 __anonymous0;USHORT Psm;};
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___551B0CF679922063F379905F8C1D5CE8 {ULONG OffsetToData;struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___551B0CF679922063F379905F8C1D5CE8___B2E03ED94C06E2E681F8D03FF7FF5CB3 s2;};
union _PCI_ROOT_BUS_OSC_CONTROL_FIELD___0A44648A440ADCC9299E094591176B02 {struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD___0A44648A440ADCC9299E094591176B02___37464B1A6F609AC6C12E19D8BB9038F5 s;ULONG AsULONG;};
union _PCI_ROOT_BUS_OSC_SUPPORT_FIELD___12366B4554501CEE1BDEB101C5AF44CF {struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD___12366B4554501CEE1BDEB101C5AF44CF___E5C749320C6A4B994D255A206596AE24 s;ULONG AsULONG;};
union _PROCESS_MITIGATION_ASLR_POLICY___92EEC1AC3E0202E7FB93616558A78AB6 {ULONG Flags;_PROCESS_MITIGATION_ASLR_POLICY___92EEC1AC3E0202E7FB93616558A78AB6___5FDB0C128CAE6B510A580B0DF7449C28 __anonymous0;};
union _DXGK_MULTIPLANE_OVERLAY_BLEND___1E37BDD2558EEDD3B8B05F66E3722F95 {_DXGK_MULTIPLANE_OVERLAY_BLEND___1E37BDD2558EEDD3B8B05F66E3722F95___1D6D566DFEE76AA38DC565683F37F64C __anonymous0;UINT Value;};
union _DXGK_MULTIPLANE_OVERLAY_FLAGS___BA4570F1357798E6B2AAE11FBDFE711D {_DXGK_MULTIPLANE_OVERLAY_FLAGS___BA4570F1357798E6B2AAE11FBDFE711D___2E6AB168D1113E8CF440FBE7992D8305 __anonymous0;UINT Value;};
union _OB_POST_OPERATION_INFORMATION___9E26F4D194EE3F8ED97EC5420551EEA8 {ULONG Flags;_OB_POST_OPERATION_INFORMATION___9E26F4D194EE3F8ED97EC5420551EEA8___076C9C0F1A3FEA506D5A7AF627950FBD __anonymous0;};
union _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762 {struct _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762___94C088134ED8F25DD6CC04D6DA40A0AF Set;struct _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762___9B7144FD41D26DD547F4C3FA36F343DB Query;};
union _PROCESS_MITIGATION_DEP_POLICY___F116839C509786518B7C72B8B76ECE10 {ULONG Flags;_PROCESS_MITIGATION_DEP_POLICY___F116839C509786518B7C72B8B76ECE10___7C60618F8DDAB6C9415DCB902B86CBEA __anonymous0;};
union _CDROM_TOC_CD_TEXT_DATA_BLOCK___467EDB5D48A0B01833F2860D1359C73C {UCHAR Text[12];WCHAR WText[6];};
union _DXGKARG_UPDATEPAGETABLEFLAGS___050F7664A78ED8E1CD2034B3C2BB2C31 {_DXGKARG_UPDATEPAGETABLEFLAGS___050F7664A78ED8E1CD2034B3C2BB2C31___FFEA0779933AD6F1B13728E00B6E6752 __anonymous0;UINT Value;};
union _DXGK_DESCRIBEALLOCATIONFLAGS___2BE12FD22C72134B114850BA9D4E091D {_DXGK_DESCRIBEALLOCATIONFLAGS___2BE12FD22C72134B114850BA9D4E091D___E88790A9D38B7E0F112158D6B120A378 __anonymous0;UINT Value;};
union _DXGK_SETPOINTERPOSITIONFLAGS___EDB2CF8C2113AC57422ADD41F1F67284 {_DXGK_SETPOINTERPOSITIONFLAGS___EDB2CF8C2113AC57422ADD41F1F67284___DC9AFCC46158ADD751499DECE1101FF4 __anonymous0;UINT Value;};
union _HIDP_KEYBOARD_MODIFIER_STATE___09F65E3D8EC31FFE3E62B668D67CDD30 {_HIDP_KEYBOARD_MODIFIER_STATE___09F65E3D8EC31FFE3E62B668D67CDD30___CCD288663407EB3BCE693252A6740B18 __anonymous0;ULONG ul;};
union _OB_PRE_OPERATION_INFORMATION___27673A9B23E3827F846C9CF36744DA66 {ULONG Flags;_OB_POST_OPERATION_INFORMATION___9E26F4D194EE3F8ED97EC5420551EEA8___076C9C0F1A3FEA506D5A7AF627950FBD __anonymous0;};
union _SET_PARTITION_INFORMATION_EX___ECBF70424E32A71371BB3749E7C6F2EC {SET_PARTITION_INFORMATION_MBR Mbr;SET_PARTITION_INFORMATION_GPT Gpt;};
union _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D {struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___11081E9A81804B9809362466AC81245B Polled;struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___884D48B70C161200DAEBFA67F1F31A50 Interrupt;struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___884D48B70C161200DAEBFA67F1F31A50 LocalInterrupt;struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___884D48B70C161200DAEBFA67F1F31A50 Sci;struct _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D___884D48B70C161200DAEBFA67F1F31A50 Nmi;};
union _DOT11_RECV_SENSITIVITY_LIST___3E10F19293958D459085543E1DB0EE9F {DOT11_PHY_TYPE dot11PhyType;ULONG uPhyId;};
union _DRIVE_LAYOUT_INFORMATION_EX___E2E3D8483D032B54611BEB6ADCC46344 {DRIVE_LAYOUT_INFORMATION_MBR Mbr;DRIVE_LAYOUT_INFORMATION_GPT Gpt;};
union _DXGK_CREATEALLOCATIONFLAGS2___D1A97408460E1FEA85F44866C81053FF {_DXGK_CREATEALLOCATIONFLAGS2___D1A97408460E1FEA85F44866C81053FF___E01109843263E8591DC4620CD33ADE5E __anonymous0;UINT Value;};
union _DXGK_DESTROYALLOCATIONFLAGS___A1DA969D0BF462BE86DF3AAFED10CC89 {_DXGK_DESTROYALLOCATIONFLAGS___A1DA969D0BF462BE86DF3AAFED10CC89___C8C18221F12F9B6646A01B1C2F8CB3B2 __anonymous0;UINT Value;};
union _FUNCTIONAL_DEVICE_EXTENSION___50C61D085A2F906BF66460A0C351E861 {_FUNCTIONAL_DEVICE_EXTENSION___50C61D085A2F906BF66460A0C351E861___73D0177DA111EAE28DEBDBC67FA5AB79 __anonymous0;COMMON_DEVICE_EXTENSION CommonExtension;};
union _POWER_STATE_CHARACTERISTICS___3444A41F8A39DA3EB5A6D35169EAB189 {UINT8 AsUINT8;struct _POWER_STATE_CHARACTERISTICS___3444A41F8A39DA3EB5A6D35169EAB189___9EE6C19477BE1283A4921B5F7832FFB5 s;};
union _TDI20_CLIENT_INTERFACE_INFO___17090AB1AC76E3F51FDFECA895B54C88 {_TDI20_CLIENT_INTERFACE_INFO___17090AB1AC76E3F51FDFECA895B54C88___883A693B07695AD4FA9EFBC99364FC4B __anonymous0;USHORT TdiVersion;};
union _VPD_BLOCK_LIMITS_PAGE_________48AE7A0C43572EBB1C54711BBCEF1E27 {_VPD_BLOCK_LIMITS_PAGE_________48AE7A0C43572EBB1C54711BBCEF1E27___1171F22B554AE5456697F3AA7B60F002 __anonymous0;UCHAR UnmapGranularityAlignment[4];};
union _DXGK_CREATEALLOCATIONFLAGS___2C1DE17B3602DD7A1C3B69ADBEDBC48A {_DXGK_CREATEALLOCATIONFLAGS2___D1A97408460E1FEA85F44866C81053FF___E01109843263E8591DC4620CD33ADE5E __anonymous0;UINT Value;};
union _DXGK_POWER_COMPONENT_FLAGS___D180033327BF7FFFCDCE62B6821A55F9 {_DXGK_POWER_COMPONENT_FLAGS___D180033327BF7FFFCDCE62B6821A55F9___3F2E209B917263CF550E0B49950B9820 __anonymous0;UINT Value;};
union _DXGK_SEGMENTBANKPREFERENCE___C6C7745BB49F41DCAE1615122A006DD8 {_DXGK_SEGMENTBANKPREFERENCE___C6C7745BB49F41DCAE1615122A006DD8___0FD2D93B789A5FCF458225CD4A369FB3 __anonymous0;UINT Value;};
union _IMAGE_DELAYLOAD_DESCRIPTOR___24F6574E5593E2C842E103EF8265DC95 {ULONG AllAttributes;_IMAGE_DELAYLOAD_DESCRIPTOR___24F6574E5593E2C842E103EF8265DC95___CDB9B99D549B790D4C735D013865E181 __anonymous0;};
union _SYSTEM_POWER_STATE_CONTEXT___364D4FCA241438740838CF50D18006E2 {struct _SYSTEM_POWER_STATE_CONTEXT___364D4FCA241438740838CF50D18006E2___76514DB155979F88E47E6F460A9859AB s;ULONG ContextAsUlong;};
struct _USB_PORT_STATUS_AND_CHANGE___06D7F19183DD338F8D2AD97F0DBC7E2B {USB_PORT_STATUS PortStatus;USB_PORT_CHANGE PortChange;};
union _D3DDDI_CREATECONTEXTFLAGS___DEAF33FA41163E0FF876B6E6CC0834BA {_D3DDDI_CREATECONTEXTFLAGS___DEAF33FA41163E0FF876B6E6CC0834BA___A9A58C11A3F64E28737E050ADF9B46C1 __anonymous0;UINT Value;};
union _D3DKMDT_VIDPN_SOURCE_MODE___01EDAA54D3F2A7060C07B479CB91114F {D3DKMDT_GRAPHICS_RENDERING_FORMAT Graphics;D3DKMDT_TEXT_RENDERING_FORMAT Text;};
union _D3DKM_TRANSPARENTBLTFLAGS___70EB8777C082EFE4C602960A67FF671E {_D3DKM_TRANSPARENTBLTFLAGS___70EB8777C082EFE4C602960A67FF671E___24F29349B034DA5093C49395AAA12BF0 __anonymous0;UINT Value;};
union _DXGKCB_GETHANDLEDATAFLAGS___5572F66C59C9F3A90BDF1613B7A48E48 {_DXGKCB_GETHANDLEDATAFLAGS___5572F66C59C9F3A90BDF1613B7A48E48___42C27059EB34331C14506940C3DD3E8E __anonymous0;UINT Value;};
union _DXGK_ALLOCATIONINFOFLAGS2___98E3A45A4DBE36C032B4E4AC2E8B9F54 {_DXGK_ALLOCATIONINFOFLAGS2___98E3A45A4DBE36C032B4E4AC2E8B9F54___C427DD94C55A9E97BD86B465543B898E __anonymous0;UINT Value;};
union _DXGK_ALLOCATIONUSAGEINFO1___2A9579F41F778F14D996C4BC0A4DF902 {D3DDDIFORMAT Format;UINT PrivateFormat;};
union _DXGK_ALLOCATIONUSAGEINFO1___C317DE8A1589ADE636AC0CB74A84EADC {_DXGK_ALLOCATIONUSAGEINFO1___C317DE8A1589ADE636AC0CB74A84EADC___9F321F4B5FA7A669E9D040477F8E568E __anonymous0;UINT Value;};
union _FILE_OBJECTID_INFORMATION___A3F92533EDD69EF294B8F85C72EB0335 {struct _FILE_OBJECTID_INFORMATION___A3F92533EDD69EF294B8F85C72EB0335___E1A7AD90C36323494F3E6BEAF74B95B5 s;UCHAR ExtendedInfo[48];};
union _FSRTL_ADVANCED_FCB_HEADER___497FAF580C19703F3851D2AABA9676AF {OPLOCK Oplock;PVOID ReservedForRemote;};
union _NOTIFICATION_MEDIA_STATUS___7F016F2347F7A626442932B97010E935 {UCHAR PowerStatus;UCHAR MediaStatus;_NOTIFICATION_MEDIA_STATUS___7F016F2347F7A626442932B97010E935___A64B2677AFBFBDCEB30F044C30307B18 __anonymous0;};
union _PCC_GENREIC_SHARED_REGION___10E8DF4D696433E5BFD564CD1D883F8C {_PCC_GENREIC_SHARED_REGION___10E8DF4D696433E5BFD564CD1D883F8C___5D29C60EE4488AD58BAF5859C3F8BDA7 __anonymous0;USHORT AsUShort;};
union _PCC_GENREIC_SHARED_REGION___27BE20E7AAEF8A28D5A3593632264250 {_PCC_GENREIC_SHARED_REGION___27BE20E7AAEF8A28D5A3593632264250___90C390148895C12A0A32B55ABE6D8EAE __anonymous0;USHORT AsUShort;};
union _PHYSICAL_DEVICE_EXTENSION___441C77CE4BDFA0084198F2EE5537E17E {_FUNCTIONAL_DEVICE_EXTENSION___50C61D085A2F906BF66460A0C351E861___73D0177DA111EAE28DEBDBC67FA5AB79 __anonymous0;COMMON_DEVICE_EXTENSION CommonExtension;};
struct _USB_HUB_STATUS_AND_CHANGE___494A1A55370F7FD1FED812E5A3BD4DA2 {USB_HUB_STATUS HubStatus;USB_HUB_CHANGE HubChange;};
union _D3DDDI_PATCHLOCATIONLIST___0F98B9AEA6B883F69971393929BE9C10 {_D3DDDI_PATCHLOCATIONLIST___0F98B9AEA6B883F69971393929BE9C10___69927EDEEA6AC7340BCC2157C3B7C3D1 __anonymous0;UINT Value;};
union _DXGK_ALLOCATIONINFOFLAGS___9EBD3D271EAD7213A5F7051B20FA4555 {_DXGK_ALLOCATIONINFOFLAGS___9EBD3D271EAD7213A5F7051B20FA4555___950F9B92EEAE96A4D30B381EE96D24DD __anonymous0;UINT Value;};
union _DXGK_DISCARDCONTENTFLAGS___833EF5D1359128C4E733B4C6CE94D49D {_DXGK_DISCARDCONTENTFLAGS___833EF5D1359128C4E733B4C6CE94D49D___9D6029052F7B0E3E2C067326CF632F2F __anonymous0;UINT Value;};
union _DXGK_OPENALLOCATIONFLAGS___D8A898C3CC121BAA810A888BA7378A03 {_DXGK_OPENALLOCATIONFLAGS___D8A898C3CC121BAA810A888BA7378A03___2524EDBD7812635A3843940AD983396F __anonymous0;UINT Value;};
union _DXGK_PREEMPTCOMMANDFLAGS___0D5650F9498A6B37A04F693A28355D8E {_DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS___CD4A4751E03E0E13D07F13C0897CF7F0___345C9315266921A5615E194C0B7E8CDB __anonymous0;UINT Value;};
union _PARTITION_INFORMATION_EX___41520227951B374488E85ABED149FDD2 {PARTITION_INFORMATION_MBR Mbr;PARTITION_INFORMATION_GPT Gpt;};
struct _VPD_BLOCK_LIMITS_PAGE______6D8344D7D2E60C771339A25A2275A935 {UCHAR Reserved0;UCHAR MaximumCompareAndWriteLength;UCHAR OptimalTransferLengthGranularity[2];UCHAR MaximumTransferLength[4];UCHAR OptimalTransferLength[4];UCHAR MaxPrefetchXDReadXDWriteTransferLength[4];UCHAR MaximumUnmapLBACount[4];UCHAR MaximumUnmapBlockDescriptorCount[4];UCHAR OptimalUnmapGranularity[4];_VPD_BLOCK_LIMITS_PAGE______6D8344D7D2E60C771339A25A2275A935___48AE7A0C43572EBB1C54711BBCEF1E27 __anonymous0;UCHAR Reserved1[28];};
union _DEBUGGING_DEVICE_IN_USE___C97601570AE780F8A4008CD204CAAD4C {ACPI_DEBUGGING_DEVICE_IN_USE AcpiDevice;PCI_DEBUGGING_DEVICE_IN_USE PciDevice;};
union _DXGK_CHILD_CAPABILITIES___9DDE597FBE4C2FCE091CE12E5A13564E {DXGK_VIDEO_OUTPUT_CAPABILITIES VideoOutput;struct _DXGK_CHILD_CAPABILITIES___9DDE597FBE4C2FCE091CE12E5A13564E___8D7FC5F0568A79CE7E46B43252C96728 Other;};
struct _DXGK_CHILD_CONTAINER_ID___8F96A48BE5F5F140B50E0E2C33F50352 {ULONG64 PortId;USHORT ManufacturerName;USHORT ProductCode;};
union _DXGK_CREATECONTEXTFLAGS___DCE14139BF8D7994AEB61B9C12A1E22E {_DXGK_CREATECONTEXTFLAGS___DCE14139BF8D7994AEB61B9C12A1E22E___C8FF0F71D1DECFDFBC4298EE6EB8855C __anonymous0;UINT Value;};
union _DXGK_SUBMITCOMMANDFLAGS___6731932D94F59BD250F28E6270D01601 {_DXGK_SUBMITCOMMANDFLAGS___6731932D94F59BD250F28E6270D01601___E01BF2757404D736E57C9E3AA2534032 __anonymous0;UINT Value;};
union _DXGK_VIRTUALADDRESSCAPS___B92D749DF1DD3B9524F85FA541BF8C4B {_DXGK_VIRTUALADDRESSCAPS___B92D749DF1DD3B9524F85FA541BF8C4B___378DCE61C23BA3BD955527BB5BA03BB5 __anonymous0;UINT Value;};
union _KSSTREAM_POINTER_OFFSET___4CF715FE59791F9AF0BCA050DECE6C8F {PUCHAR Data;PKSMAPPING Mappings;};
struct _PNP_REPLACE_MEMORY_LIST___FC773AB9D769E51F1BAEF74ABBA2004B {PHYSICAL_ADDRESS Address;ULONGLONG Length;};
union _QUERY_FILE_LAYOUT_INPUT___BDB76599BE499DA67E74B7A8F967A7F4 {CLUSTER_RANGE ClusterRanges[1];FILE_REFERENCE_RANGE FileReferenceRanges[1];};
union _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0 {struct _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0___093282B89252D62DDE409211CEEEE04C ResumeRecord;struct _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0___6A0DD04A155F7276D124AE510E11507E SuspendRecord;};
struct _SCARD_CARD_CAPABILITIES___57DB11C5A919C9FFEA42ABD013F0F605 {UCHAR IFSC;UCHAR CWI;UCHAR BWI;UCHAR EDC;ULONG CWT;ULONG BWT;ULONG BGT;};
struct _SCARD_CARD_CAPABILITIES___6AC5016A1C89DDEA62C1DD2E494C2449 {UCHAR WI;ULONG WT;};
union _SD_RW_EXTENDED_ARGUMENT___C73E6A1E0D5770B9EB75E35F076E7DDA {struct _SD_RW_EXTENDED_ARGUMENT___C73E6A1E0D5770B9EB75E35F076E7DDA___2F9E36BBACC6AB85E16B14DB0738C6FC bits;ULONG AsULONG;};
struct _WHEA_PCIEXPRESS_VERSION___F373AF903B78102C712ED151F57F9067 {UCHAR MinorVersion;UCHAR MajorVersion;USHORT Reserved;};
union tagWNODE_EVENT_REFERENCE___35BDACE2D4BA78DD0D25FA8577D99EB2 {ULONG TargetInstanceIndex;WCHAR TargetInstanceName[];};
union _ACPI_EVAL_INPUT_BUFFER___CFC7B0DA028A7F4F3B52DE418131CED1 {UCHAR MethodName[4];ULONG MethodNameAsUlong;};
union _CDB___SPACE_TAPE_MARKS___452053D96BC8D647FEF06A172E57CD82 {UCHAR value;struct _CDB___SPACE_TAPE_MARKS___452053D96BC8D647FEF06A172E57CD82___723BA1E74126376B75E150C11F3E5EB8 Fields;};
union _D3DDDI_ALLOCATIONINFO2___C37602EC42612761CBD3C806D59105EF {_D3DDDI_ALLOCATIONINFO2___C37602EC42612761CBD3C806D59105EF___9C54106681C0543AF5CF76AF186F5814 __anonymous0;UINT Value;};
union _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC {struct _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC___1985B6C0A98C70387841619C427FA5AC ScalarPrefetch;struct _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC___6F1145A126A17372ED69F96ECC75C774 BlockPrefetch;};
union _DXGK_CREATEDEVICEFLAGS___2F67346E464C3CB5F4584001891B2DBB {_DXGK_CREATEDEVICEFLAGS___2F67346E464C3CB5F4584001891B2DBB___0116588DB9BEA0AA997CFE1F8AEDB2A9 __anonymous0;UINT Value;};
union _DXGK_GDIARG_STRETCHBLT___72D9C1E774232B238E507145974EF112 {_DXGK_GDIARG_STRETCHBLT___72D9C1E774232B238E507145974EF112___FCA50DB8B571C289B3C0AE05392B03C2 __anonymous0;UINT Flags;};
union _DXGK_SEGMENTPREFERENCE___5F0E46343C77D0D7B0B3DAC6467FFF79 {_DXGK_SEGMENTPREFERENCE___5F0E46343C77D0D7B0B3DAC6467FFF79___59FADADC9B5649AD99C3978E94186D1F __anonymous0;UINT Value;};
struct _FILE_LAYOUT_INFO_ENTRY___CB15603BAC5FC127CE80876F979A76A8 {LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;ULONG FileAttributes;};
union _GENERAL_LOOKASIDE_POOL___1DBA9DD087472369DDC11975A606CD44 {SLIST_HEADER ListHead;SINGLE_LIST_ENTRY SingleListHead;};
union _HW_INITIALIZATION_DATA___629464E23AC53C7DCCC75BF07BD6EA4B {ULONG HwInitializationDataSize;_HW_INITIALIZATION_DATA___629464E23AC53C7DCCC75BF07BD6EA4B___CDC7C98BFDDB2D5AE64DC8463D32D136 __anonymous0;};
union _NDIS_PACKET_8021Q_INFO___8882A3A36CF70686E2666AD9F1873AAF {struct _NDIS_PACKET_8021Q_INFO___8882A3A36CF70686E2666AD9F1873AAF___4902617F7B303E67E1AC49578C09A516 TagHeader;PVOID Value;};
union _NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D {struct _NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D___5AA99D45118A963659DD55ABCA110FDC Proprietary;struct _NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D___0E4ACC651B354EB7F71EE82734BE4E30 Public;};
union _NV_SEP_CACHE_PARAMETER___D6AAA6E512359887CA6B2F20090C3374 {struct _NV_SEP_CACHE_PARAMETER___D6AAA6E512359887CA6B2F20090C3374___E45BAA110AECCF8491FEADB615702004 CacheFlags;UCHAR CacheFlagsSet;};
union _PCIX_BRIDGE_CAPABILITY___0853D9480451221ACDFBE7118BCCBE8E {struct _PCIX_BRIDGE_CAPABILITY___0853D9480451221ACDFBE7118BCCBE8E___A5A2E6C5BBBC81C26B0C8B0B46C9ACE9 s;ULONG AsULONG;};
union _PCIX_BRIDGE_CAPABILITY___CA70B71BC10E862FDC7C78E196CAE6C9 {struct _PCIX_BRIDGE_CAPABILITY___CA70B71BC10E862FDC7C78E196CAE6C9___AC22FB39CB111AE2AB9424F0EC3161C0 s;USHORT AsUSHORT;};
union _PCIX_BRIDGE_CAPABILITY___EECBA3A91F5E25257CAAF226CCCFD303 {struct _PCIX_BRIDGE_CAPABILITY___EECBA3A91F5E25257CAAF226CCCFD303___4AE0EDF6FA0F41D2DD767ECA4BD149D4 s;ULONG AsULONG;};
union _RX_TOPLEVELIRP_CONTEXT___5130196CA7666B8823729A067CD25FC9 {_LIST_ENTRY __anonymous0;LIST_ENTRY ListEntry;};
union _BRB_L2CA_OPEN_CHANNEL___C3EA006E90E98BA18A832E0DDC1D8811 {_BRB_L2CA_OPEN_CHANNEL___C3EA006E90E98BA18A832E0DDC1D8811___53B92DDCBF9996BF5092A8CE7C1BACE6 __anonymous0;USHORT Psm;};
union _D3DDDI_ALLOCATIONINFO___9C237A8DCEB414086FDDD8CA87C44C50 {_D3DDDI_ALLOCATIONINFO2___C37602EC42612761CBD3C806D59105EF___9C54106681C0543AF5CF76AF186F5814 __anonymous0;UINT Value;};
union _D3DDDI_ALLOCATIONLIST___C80EEC70EA5C50DBE7190B67C99082D6 {_D3DDDI_ALLOCATIONLIST___C80EEC70EA5C50DBE7190B67C99082D6___397A5E6133528C3EDF71A6FF599DC983 __anonymous0;UINT Value;};
union _D3DDDI_RESOURCEFLAGS2___81001EC007C0C438D87887A3711AD82F {_D3DDDI_RESOURCEFLAGS2___81001EC007C0C438D87887A3711AD82F___4414E5F7522B3B16D586B912F1160829 __anonymous0;UINT Value;};
union _DXGK_BRIGHTNESS_STATE___66C590267A583B1EC093FE09AF2A9D94 {_DXGK_BRIGHTNESS_STATE___66C590267A583B1EC093FE09AF2A9D94___3896E537B3BD1A832A0D287DD3B20842 __anonymous0;UINT Value;};
union _DXGK_MAPAPERTUREFLAGS___D42F3BF489806A17BD1D237EC4E3FA1A {_DXGK_MAPAPERTUREFLAGS___D42F3BF489806A17BD1D237EC4E3FA1A___A5CB05A35B193C4D681B1357F34313FE __anonymous0;UINT Value;};
union _DXGK_PRESENTATIONCAPS___C11F8E6BC7C43C2BB3DD3E618E55E425 {_DXGK_PRESENTATIONCAPS___C11F8E6BC7C43C2BB3DD3E618E55E425___FDD1F284E5E2ED5A188B9EC3BD77B504 __anonymous0;UINT Value;};
union _IDE_DEVICE_PARAMETERS___DC002D496C8A250B8E7023CEEB6D0A52 {LARGE_INTEGER MaxLba;struct _IDE_DEVICE_PARAMETERS___DC002D496C8A250B8E7023CEEB6D0A52___1E318727270B7D90275212297693BBE0 Chs;};
union _IPV4_TIMESTAMP_OPTION___2E193DEAAB8F2BBFABCD47F30D0D12BC {UINT8 FlagsOverflow;_IPV4_TIMESTAMP_OPTION___2E193DEAAB8F2BBFABCD47F30D0D12BC___E0327DE6E6EA79E8CEF3B61154C13EF9 __anonymous0;};
union _PS_CREATE_NOTIFY_INFO___0573261C701E630EF5641D92A6F614F2 {ULONG Flags;_PS_CREATE_NOTIFY_INFO___0573261C701E630EF5641D92A6F614F2___AD7BFEB44AD5F82CA0E001337E494E2B __anonymous0;};
union _SD_RW_DIRECT_ARGUMENT___E799D1D7F4FD931B58035FED85E80D2B {struct _SD_RW_DIRECT_ARGUMENT___E799D1D7F4FD931B58035FED85E80D2B___82EB7C5FC3ECE867F722784A81E8B11E bits;ULONG AsULONG;};
union _STORAGE_OFFLOAD_TOKEN___45C29CB8E6D02895655581947ABDA793 {struct _STORAGE_OFFLOAD_TOKEN___45C29CB8E6D02895655581947ABDA793___F76DCE325C2D5C7EAAA9288066DBE18F StorageOffloadZeroDataToken;UCHAR Token[504];};
union _TCG_DESCRIPTION_TABLE___C7581E26A4D392CED2FF0026FAC3559E {TCG_DESCRIPTION_TABLE_CLIENT ClientTable;TCG_DESCRIPTION_TABLE_SERVER ServerTable;};
union _VPD_BLOCK_LIMITS_PAGE___FA2E4E0823A0B10E6F7DCB7EE3FDAC7A {_VPD_BLOCK_LIMITS_PAGE______6D8344D7D2E60C771339A25A2275A935 __anonymous0;UCHAR Descriptors[];};
union _ACPI_METHOD_ARGUMENT___0083E76AA1C365C25C9D682C0B227FF6 {ULONG Argument;UCHAR Data[1];};
union _D3DDDICB_SIGNALFLAGS___37DCD84A128AE20AFACAE49DED23B1AC {_D3DDDICB_SIGNALFLAGS___37DCD84A128AE20AFACAE49DED23B1AC___BF2510D441EE24298AE8E223747F3648 __anonymous0;UINT Value;};
union _D3DDDI_RESOURCEFLAGS___0A8E4AF2B4ABBA3F67396D587D70E98B {_D3DDDI_RESOURCEFLAGS___0A8E4AF2B4ABBA3F67396D587D70E98B___DFEDBB163B56A659C941E01AE40F0809 __anonymous0;UINT Value;};
union _D3DKMT_WDDM_1_2_CAPS___85A070F6A014979135EAC7792424D6A3 {_D3DKMT_WDDM_1_2_CAPS___85A070F6A014979135EAC7792424D6A3___0F5964AD7A466414866DCBA5BE62409C __anonymous0;UINT Value;};
union _DXGKARG_CREATEDEVICE___88C7CC88C3AEB67EED929825372DD737 {DXGK_CREATEDEVICEFLAGS Flags;DXGK_DEVICEINFO *pInfo;};
union _DXGK_BRIGHTNESS_CAPS___D9D36000DE1DD4D29BAB8D412DCDF7E1 {_DXGK_BRIGHTNESS_CAPS___D9D36000DE1DD4D29BAB8D412DCDF7E1___7EBDBF249FE68AB70FEBAF549ABFE596 __anonymous0;UINT Value;};
union _DXGK_DEVICEINFOFLAGS___313A06C1F8E7A72B04D91FC65245D0A6 {_DXGK_DEVICEINFOFLAGS___313A06C1F8E7A72B04D91FC65245D0A6___3A81826735823A7E4E2E7A28673642C0 __anonymous0;UINT Value;};
union _FILE_OBJECTID_BUFFER___8A2E0D068CCE16AC437AD7ECF5548605 {struct _FILE_OBJECTID_BUFFER___8A2E0D068CCE16AC437AD7ECF5548605___E1A7AD90C36323494F3E6BEAF74B95B5 s;UCHAR ExtendedInfo[48];};
struct _FS_FILTER_PARAMETERS___1BF1138F8D2DDD2E6462FEFA2C4F94BC {PLARGE_INTEGER EndingOffset;PERESOURCE *ResourceToRelease;};
struct _FS_FILTER_PARAMETERS___5B669461F49D34FCB51CE394BE9DE27D {FS_FILTER_STREAM_FO_NOTIFICATION_TYPE NotificationType;BOOLEAN SafeToRecurse;};
struct _FS_FILTER_PARAMETERS___B5EF3880B5460E4FA7339BA4EC64CC87 {FS_FILTER_SECTION_SYNC_TYPE SyncType;ULONG PageProtection;};
union _IPV6_FRAGMENT_HEADER___92C6B06247B11EB7CB56D4524B6C4DF2 {_IPV6_FRAGMENT_HEADER___92C6B06247B11EB7CB56D4524B6C4DF2___95524D7FF2E8E5CA171D244EABE3E9C8 __anonymous0;UINT16 OffsetAndFlags;};
union _LOG_PARAMETER_HEADER___78DA7D7ACDB40656AE4F463B7A904041 {UCHAR ControlByte;_LOG_PARAMETER_HEADER___78DA7D7ACDB40656AE4F463B7A904041___E905DA64F8277D89B8BF07FD43435193 __anonymous0;};
union _MODE_INFO_EXCEPTIONS___46486C1043A9BFDA7F1CD33DAB7A74FB {UCHAR Flags;_MODE_INFO_EXCEPTIONS___46486C1043A9BFDA7F1CD33DAB7A74FB___4093EAC1ED3453951EF80FAEAADF12E7 __anonymous0;};
union _WHEA_PCI_SLOT_NUMBER___B33AE7BF1FDC215AED0B88878C3A5E8F {struct _WHEA_PCI_SLOT_NUMBER___B33AE7BF1FDC215AED0B88878C3A5E8F___A9FC48894F8D14019CAF4D8F08A526D6 bits;ULONG AsULONG;};
union _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833 {struct _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833___235585ADA1A6D4A89570F816D4F70F98 Mbr;struct _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833___BE6FFFE6B14D10E80BF326EA5B53821A Gpt;};
union _DXGK_TRANSFERFLAGS2___4C244374FF25457F97E9B31CB89E7EBC {_DXGK_TRANSFERFLAGS2___4C244374FF25457F97E9B31CB89E7EBC___EAE165496D5BFDBDD95280214C6ACDC1 __anonymous0;UINT Value;};
union _IGMPV3_QUERY_HEADER___BADC5553DDFA9D11ED858F66D86D59FC {UINT8 QueriersQueryInterfaceCode;_IGMPV3_QUERY_HEADER___BADC5553DDFA9D11ED858F66D86D59FC___A4E2B1CD24A78BF513C2534CAC5D7D7B __anonymous0;};
union _IGMPV3_QUERY_HEADER___D8E78313C7C869914A98684B90C859EB {UINT8 MaxRespCode;_IGMPV3_QUERY_HEADER___D8E78313C7C869914A98684B90C859EB___A466432AB51F33C0F9566AC62E60D474 __anonymous0;};
struct _IMAGE_AUX_SYMBOL_EX___7DE2BBBE69FE3B9D9F705B9F266ED457 {ULONG crc;UCHAR rgbReserved[16];};
struct _IMAGE_AUX_SYMBOL_EX___F2683A71694251BD29D36860D2E756FD {ULONG WeakDefaultSymIndex;ULONG WeakSearchType;UCHAR rgbReserved[12];};
struct _RDBSS_DEVICE_OBJECT___8E5F2250B80FEA01BE2192B09BB2E785 {LARGE_INTEGER PagingReadBytesRequested;LARGE_INTEGER NonPagingReadBytesRequested;LARGE_INTEGER CacheReadBytesRequested;LARGE_INTEGER FastReadBytesRequested;LARGE_INTEGER NetworkReadBytesRequested;ULONG ReadOperations;ULONG FastReadOperations;ULONG RandomReadOperations;LARGE_INTEGER PagingWriteBytesRequested;LARGE_INTEGER NonPagingWriteBytesRequested;LARGE_INTEGER CacheWriteBytesRequested;LARGE_INTEGER FastWriteBytesRequested;LARGE_INTEGER NetworkWriteBytesRequested;ULONG WriteOperations;ULONG FastWriteOperations;ULONG RandomWriteOperations;};
union _CDB___SET_CD_SPEED___5042636D3EF4672BAA051A846CBFD7E7 {UCHAR Reserved1;_CDB___SET_CD_SPEED___5042636D3EF4672BAA051A846CBFD7E7___001D666376D0C4DBD36F80530E61A012 __anonymous0;};
union _D3DDDICB_LOCKFLAGS___ED792A498079A6342A08F53AEABA2A3A {_D3DDDICB_LOCKFLAGS___ED792A498079A6342A08F53AEABA2A3A___E5338CF7B743D9B09B49C7CF5F2B6ABC __anonymous0;UINT Value;};
union _D3DDDI_ESCAPEFLAGS___1E6467755CCFD5D3734D714B43840EC2 {_D3DDDI_ESCAPEFLAGS___1E6467755CCFD5D3734D714B43840EC2___B70A34BD02D6029B9E2448784158907E __anonymous0;UINT Value;};
union _D3DKMDT_GAMMA_RAMP___833D6B2DFF43FD3049AE5520F396FCC6 {D3DDDI_GAMMA_RAMP_RGB256x3x16 *pRgb256x3x16;D3DDDI_GAMMA_RAMP_DXGI_1 *pDxgi1;void *pRaw;};
union _DXGK_GAMMARAMPCAPS___01A74871349E05421D5F5860B0BC2732 {_DXGK_GAMMARAMPCAPS___01A74871349E05421D5F5860B0BC2732___3D587546F3918A3D6EE51008ED21D136 __anonymous0;UINT Value;};
union _DXGK_SEGMENTFLAGS2___781DFF8C386BAF2FD5859671E4CB1CCB {_DXGK_SEGMENTFLAGS2___781DFF8C386BAF2FD5859671E4CB1CCB___BD7871BA2F60B1D3BC722835D1DFB67B __anonymous0;UINT Value;};
union _DXGK_TRANSFERFLAGS___4D1486DD1E7506599394F0F2A8A65E0A {_DXGK_TRANSFERFLAGS___4D1486DD1E7506599394F0F2A8A65E0A___302D1026E10F578CC86103988839248E __anonymous0;UINT Value;};
union _IPV4_OPTION_HEADER___4C1C3CB250A3C2661892A36CD59164CA {UINT8 OptionType;_IPV4_OPTION_HEADER___4C1C3CB250A3C2661892A36CD59164CA___7C81DD1BFAD5C5D4BBD6B7BB13E2FDA0 __anonymous0;};
union _LLDP_TLV_TYPE_INFO___E487BBF590D175501C59AA3CB0A964A2 {struct _LLDP_TLV_TYPE_INFO___E487BBF590D175501C59AA3CB0A964A2___78C78507AFB44B529CF4FC0292F93BC8 s;ULONG OuiAndSubtype;};
union _MLDV2_QUERY_HEADER___05E330219958D4FF52893F61F28F917A {UINT16 MaxRespCode;_MLDV2_QUERY_HEADER___05E330219958D4FF52893F61F28F917A___7174B48358BF23E91701085D5C8B6951 __anonymous0;};
union _MLDV2_QUERY_HEADER___D24BA13BEDB45029026182C5769FF7FA {UINT8 QueriersQueryInterfaceCode;_IGMPV3_QUERY_HEADER___BADC5553DDFA9D11ED858F66D86D59FC___A4E2B1CD24A78BF513C2534CAC5D7D7B __anonymous0;};
struct _TA_ADDRESS_NETBIOS_UNICODE_EX_XP___AddrNetbiosWCharEx {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_NETBIOS_UNICODE_EX_XP Address[1];};
union _WAIT_CONTEXT_BLOCK___4501E438057B524022C881311375F7D8 {KDEVICE_QUEUE_ENTRY WaitQueueEntry;_WAIT_CONTEXT_BLOCK___4501E438057B524022C881311375F7D8___AFA4B425CF8D1FD581BF88EDB4DB420B __anonymous0;};
struct _AMD_L2_CACHE_INFO___93F2A660E4CD3E37717BAE33F33D55E9 {UCHAR LineSize;unsigned char LinesPerTag : 4;unsigned char Associativity : 4;USHORT Size;};
union _DATA_BLOCK_HEADER___BB186B0ECE516B444BF083DE287475ED {UCHAR LogicalBlockAddress[4];struct _DATA_BLOCK_HEADER___BB186B0ECE516B444BF083DE287475ED___D5776D461B2025CBC9CD270DE2445408 MSF;};
union _DXGK_ENGINESTATUS___71579A1E1FAD40681B38D2EFE6BBA1F6 {_DXGK_ENGINESTATUS___71579A1E1FAD40681B38D2EFE6BBA1F6___1958C0CE0F30652E7A53C351F5828294 __anonymous0;UINT Value;};
union _DXGK_POINTERFLAGS___C9573884F6BD666D6E4986CB772F7316 {_DXGK_POINTERFLAGS___C9573884F6BD666D6E4986CB772F7316___13E2B3CF36913A195C6C5551DFC7D75A __anonymous0;UINT Value;};
union _DXGK_PRESENTFLAGS___759923E5051464C6F2E56DEAB7A49BFF {_DXGK_PRESENTFLAGS___759923E5051464C6F2E56DEAB7A49BFF___46B339A188AE7A54CE96CD9934751C12 __anonymous0;UINT Value;};
union _DXGK_SEGMENTFLAGS___B3DE18E4A209DC1AB8FF5AECCB1010D4 {_DXGK_SEGMENTFLAGS___B3DE18E4A209DC1AB8FF5AECCB1010D4___D2A2F249D28235F8FFF1C866BFFB9624 __anonymous0;UINT Value;};
union _FLT_CALLBACK_DATA___312C66EF40AEDAF2A3A5D4554FF51F28 {_FLT_CALLBACK_DATA___312C66EF40AEDAF2A3A5D4554FF51F28___AF593265884A231A5F64AB3E7AB0774C __anonymous0;PVOID FilterContext[4];};
union _GENERAL_LOOKASIDE___1DBA9DD087472369DDC11975A606CD44 {SLIST_HEADER ListHead;SINGLE_LIST_ENTRY SingleListHead;};
union _IVHD_DEVICE_ENTRY___52C462F56CDF084018E3913BD4CBE19B {UINT8 AsUINT8;struct _IVHD_DEVICE_ENTRY___52C462F56CDF084018E3913BD4CBE19B___EF8F6BA37C2863099350BF038B629297 s;};
union _KUSER_SHARED_DATA___5E5F141A573F9B2433651B29934443B8 {UCHAR MitigationPolicies;_KUSER_SHARED_DATA___5E5F141A573F9B2433651B29934443B8___3D940D5D03EF7F98CEE6737EDE752E57 __anonymous0;};
union _KUSER_SHARED_DATA___CE0A0B9CF154763236C6E82AB829672B {ULONG SharedDataFlags;struct _KUSER_SHARED_DATA___CE0A0B9CF154763236C6E82AB829672B___061CAD105B6E501C96239533A98B33A9 s2;};
union _KUSER_SHARED_DATA___E012BA1FCB959C5ACB245290F5960DFD {USHORT TscQpcData;_KUSER_SHARED_DATA___E012BA1FCB959C5ACB245290F5960DFD___E80489C3E818F50385E1FFEB85439BB9 __anonymous0;};
struct _NLB_HOOK_IP_TUPLE___EC338A43ABF6B75852E48F7D35CA5A68 {HOOK_IP_ADDRESS IP;USHORT Port;};
union _PCI_PM_CAPABILITY___0CFAED28D81EDD84E3F5FE60E5E74408 {PCI_PMCSR_BSE BridgeSupport;UCHAR AsUCHAR;};
union _PCI_PM_CAPABILITY___C45C7236308434D5F24B7026BFA487E6 {PCI_PMCSR ControlStatus;USHORT AsUSHORT;};
union _PCI_PM_CAPABILITY___D88BA7F7712EFFD5A716339859759941 {PCI_PMC Capabilities;USHORT AsUSHORT;};
struct _STOR_SLIST_HEADER___873380EAC912F4CED96D83C084F02EE7 {STOR_SLIST_ENTRY Next;USHORT Depth;USHORT Sequence;};
union nd_opt_prefix_info___398BCD3A84C3D8595978A4C13A2CD80A {UINT8 nd_opt_pi_flags_reserved;struct nd_opt_prefix_info___398BCD3A84C3D8595978A4C13A2CD80A___D8228C77A2ABB3E84742704A357288DF Flags;};
union nd_opt_prefix_info___B36C22119BA8D8A8DE4E1DF87B7DDAC4 {UINT32 nd_opt_pi_reserved2;nd_opt_prefix_info___B36C22119BA8D8A8DE4E1DF87B7DDAC4___4D31284C466138778A6C6027B2D52F0C __anonymous0;};
union DL_TEREDO_ADDRESS___90126361DB06D31AC779EF63186CE8C6 {DL_EUI64 Eui64;DL_TEREDO_ADDRESS___90126361DB06D31AC779EF63186CE8C6___87CC70020A842B1AC26340D80EF2CD57 __anonymous0;};
union _ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F {struct _ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F___ATM_AAL5_INFO ATM_AAL5_INFO;struct _ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F___ATM_AAL0_INFO ATM_AAL0_INFO;};
union _HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893 {struct _HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893___83D0A1D806B42BB3CFEB24AD25988CD4 Range;struct _HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893___9A2DEDAE27CA526CD6B2E1277E119468 NotRange;};
struct _IMAGE_AUX_SYMBOL___0C431E7450878A23F5A2614033BB8283 {ULONG crc;UCHAR rgbReserved[14];};
union _MOUSE_INPUT_DATA___C2F358CA55696375BBE6CFBE88407757 {ULONG Buttons;_MOUSE_INPUT_DATA___C2F358CA55696375BBE6CFBE88407757___32D8C13BA161E9435E51482125023854 __anonymous0;};
union _NDIS_802_11_TEST___EA8AE02B4DE78A1E972BFE0FFA71A62F {NDIS_802_11_AUTHENTICATION_EVENT AuthenticationEvent;NDIS_802_11_RSSI RssiTrigger;};
union _PMI_CAPABILITIES___5717254535A888947B89412363774281 {PMI_REPORTED_CAPABILITIES ReportedCapabilities;PMI_METERED_HARDWARE_INFORMATION MeteredHardwareInformation;};
union _RX_CONNECTION_ID___B825E9A178883B67F543C89189176897 {ULONG SessionID;LUID Luid;};
struct _SCARD_READER_CAPABILITIES___CLKFrequenciesSupported {PULONG List;UCHAR Entries;};
struct _STOR_LOCK_HANDLE___DF05CED8E4E68472CFDF14CBD12862B2 {struct _STOR_LOCK_HANDLE___DF05CED8E4E68472CFDF14CBD12862B2___D126D6E7BD455D2E3F3215E98A3F632A LockQueue;KIRQL OldIrql;};
union nd_opt_route_info___DC5D226088DB1FA6D255C52DD8FCB908 {UINT8 nd_opt_ri_flags_reserved;struct nd_opt_route_info___DC5D226088DB1FA6D255C52DD8FCB908___9DCB88DEC110B99E01442782DF606EF3 Flags;};
union tagWNODE_ALL_DATA___2509F747D046B06D85040055D485D2C5 {ULONG FixedInstanceSize;OFFSETINSTANCEDATAANDLENGTH OffsetInstanceDataAndLength[];};
union _DXGK_PATCHFLAGS___3F44A29E3CF80453CA6C96B988F2597D {_DXGK_PATCHFLAGS___3F44A29E3CF80453CA6C96B988F2597D___DE1EC4FC577E58E9D57B2F58F10A0487 __anonymous0;UINT Value;};
union _DXGK_VIDSCHCAPS___5E74790812C969E3ACDA73D10C67000E {_DXGK_VIDSCHCAPS___5E74790812C969E3ACDA73D10C67000E___DE026473D05A702E3E1640570A42EE2C __anonymous0;UINT Value;};
union _HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41 {struct _HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41___83D0A1D806B42BB3CFEB24AD25988CD4 Range;struct _HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41___9A2DEDAE27CA526CD6B2E1277E119468 NotRange;};
union _IO_STATUS_BLOCK___77CEE0AF02806C16F943E6B3BF8ECA77 {NTSTATUS Status;PVOID Pointer;};
union _NET_BUFFER_LIST___CCB763B4739EE3E630364C68588BBC2A {NDIS_STATUS Status;ULONG NdisReserved2;};
union _PCI_SLOT_NUMBER___49AFFD3D7EC59F1BE207C4846B68BFFF {struct _PCI_SLOT_NUMBER___49AFFD3D7EC59F1BE207C4846B68BFFF___A9FC48894F8D14019CAF4D8F08A526D6 bits;ULONG AsULONG;};
union _RXCE_SIGNATURE____133B17B9D3CB80B518FB5AF2A06254B1 {_RXCE_SIGNATURE____133B17B9D3CB80B518FB5AF2A06254B1___D56F8B1863917927A478371C2B4391CD __anonymous0;ULONG Signature;};
union tagKS_FRAME_INFO___9558694AFE91A3DAB1DCB8FEE644E504 {LONG lSurfacePitch;DWORD Reserved1;};
union _DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995 {struct _DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995___235585ADA1A6D4A89570F816D4F70F98 Mbr;struct _DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995___BE6FFFE6B14D10E80BF326EA5B53821A Gpt;};
union _DXGK_VIDMMCAPS___0FC7972752449C7826273C22D7F8DC2B {_DXGK_VIDMMCAPS___0FC7972752449C7826273C22D7F8DC2B___74DF1CCC095029D3F7D5077FB687F323 __anonymous0;UINT Value;};
union _EX_RUNDOWN_REF___B53373035CFC48957629DB1D3A5A55C6 {ULONG_PTR Count;PVOID Ptr;};
struct _FLT_PARAMETERS___1BF1138F8D2DDD2E6462FEFA2C4F94BC {PLARGE_INTEGER EndingOffset;PERESOURCE *ResourceToRelease;};
struct _FLT_PARAMETERS___8B4F3F4C47B95A7D4CF340B7EF6275B0 {PVOID Argument1;PVOID Argument2;PVOID Argument3;PVOID Argument4;PVOID Argument5;LARGE_INTEGER Argument6;};
struct _FLT_PARAMETERS___A8B5303DDD6CF49B21EB229EB6671508 {PIRP Irp;PFILE_NETWORK_OPEN_INFORMATION NetworkInformation;};
struct _FLT_PARAMETERS___B5EF3880B5460E4FA7339BA4EC64CC87 {FS_FILTER_SECTION_SYNC_TYPE SyncType;ULONG PageProtection;};
struct _FLT_PARAMETERS___E1830675726AC350ADD284B511E01E52 {SECURITY_INFORMATION SecurityInformation;PSECURITY_DESCRIPTOR SecurityDescriptor;};
struct _FLT_PARAMETERS___F38300D51E9A4C5A1745047EEB093AA7 {LARGE_INTEGER FileOffset;PMDL MdlChain;};
union _IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT {_IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT___294F33E41A680E78D61DF2181BA4C646 __anonymous0;USHORT AsUshort;};
union _CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B {struct _CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B___LBA LBA;struct _CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B___MSF MSF;};
union _DEVICE_OBJECT___3ABEFC84562B0417329DFE2AD83813CB {LIST_ENTRY ListEntry;WAIT_CONTEXT_BLOCK Wcb;};
union _DXGK_FLIPCAPS___BB8BCFC6A76D53AA4E1798E1B22DE04B {_DXGK_FLIPCAPS___BB8BCFC6A76D53AA4E1798E1B22DE04B___AAB4171E51AEA23D82198A37E851F9C6 __anonymous0;UINT Value;};
union _KSEVENT_ENTRY___B26956EB948B1BB74D1F370DF846EB48 {PKSDPC_ITEM DpcItem;PKSBUFFER_ITEM BufferItem;};
struct _LARGE_INTEGER___824E624842C29B0A9DF85A636208834D {ULONG LowPart;LONG HighPart;};
union _NT_SMB_HEADER___EFB48DF9E93823741A1223EC6F9E871B {struct _NT_SMB_HEADER___EFB48DF9E93823741A1223EC6F9E871B___FC77E2F8670B2F58D81FC02676A7A797 DosError;ULONG NtStatus;};
struct _SDP_NODE_DATA___807436153354125C07D3815CF85E838D {PUCHAR stream;ULONG streamLength;};
struct _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bDevCapabilityType;union _USB_DEVICE_CAPABILITY_USB20_EXTENSION_DESCRIPTOR___31591524D764D3BBCEB254E6332A248B bmAttributes;};
union _WWAN_SMS_SEND___ECED145D5F818BC1186127ADF514A07D {WWAN_SMS_SEND_PDU Pdu;WWAN_SMS_SEND_CDMA Cdma;};
union _ACCESS_STATE___18D81C5C1A882E7A2AF410C6CD9261CD {INITIAL_PRIVILEGE_SET InitialPrivilegeSet;PRIVILEGE_SET PrivilegeSet;};
union _ASYNC_PACKET___03C481F7A4752B31164DFBAFD3BDD779 {struct _ASYNC_PACKET___03C481F7A4752B31164DFBAFD3BDD779___1D6F3402F5C57A4CB8668FC1E7849EE4 Block;ULONG AP_Quadlet_Data;};
union _ASYNC_PACKET___AB07F285586641EA5A3A0A6EB783C0F2 {struct _ASYNC_PACKET___AB07F285586641EA5A3A0A6EB783C0F2___5FED45C7A7070B3B92A06D6CE07E910F Response;USHORT AP_Offset_High;};
union _NDIS_RW_LOCK___8DA56E8A00A40642C2533108FF443746 {_NDIS_RW_LOCK___8DA56E8A00A40642C2533108FF443746___A1347237DC898E262687A42C1AC243F2 __anonymous0;UCHAR Reserved[16];};
struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE_COMPLETE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;};
union _NPI_MODULEID___CBDDAE44958519F00C94596B49D418BE {GUID Guid;LUID IfLuid;};
struct _SLIST_HEADER___D67E919714D5786AEADF401AEE8662CB {SLIST_ENTRY Next;USHORT Depth;USHORT Sequence;};
union _STATUS_BLOCK___176BD189C2C9FD33950A172BC44A9FB2 {VP_STATUS Status;PVOID Pointer;};
union _TDI_VERSION____0CEFFAAA4EF78E9CFDB9937EFD46D598 {_TDI20_CLIENT_INTERFACE_INFO___17090AB1AC76E3F51FDFECA895B54C88___883A693B07695AD4FA9EFBC99364FC4B __anonymous0;USHORT TdiVersion;};
struct _USB_DEVICE_CAPABILITY_SUPERSPEED_USB_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bDevCapabilityType;UCHAR bmAttributes;USHORT wSpeedsSupported;UCHAR bFunctionalitySupport;UCHAR bU1DevExitLat;USHORT wU2DevExitLat;};
union _WNODE_HEADER___F03C597F21C6A23CEEDB6A1B653FCCEC {ULONG64 HistoricalContext;struct _WNODE_HEADER___F03C597F21C6A23CEEDB6A1B653FCCEC___0AFF34700F133A66677DA8590144B5D8 s;};
union _CREATE_DISK___E6D8F73FA11FE79B0BBE7B30BDE20C7B {CREATE_DISK_MBR Mbr;CREATE_DISK_GPT Gpt;};
union _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE {struct _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE___686E5B55FC3238EAD7412FD5A5C4A093 DVB;struct _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE___D8EDD8813E9D2C777B4C66E2AEE9CFF4 DC;struct _ChannelInfo___A19F8CC3FA49014D8618ED22280592FE___D8EDD8813E9D2C777B4C66E2AEE9CFF4 ATSC;};
union _IGMP_HEADER___B9454631A37D51F61B5C2590DE4942DA {_IGMP_HEADER___B9454631A37D51F61B5C2590DE4942DA___9A52E82B89F3A3AE6B2F78E467664CEA __anonymous0;UINT8 VersionType;};
union _INQUIRYDATA___57A8C0293E1F2A67A1B3BE29EFC0DD2E {UCHAR Versions;_INQUIRYDATA___57A8C0293E1F2A67A1B3BE29EFC0DD2E___CB49C0207A42B6C7BC0ECE4108D7F7F8 __anonymous0;};
union _IPV4_HEADER___1102F78AC293BC76A5071660AA34A7CC {UINT16 FlagsAndOffset;_IPV4_HEADER___1102F78AC293BC76A5071660AA34A7CC___F11B15A51CFFCDAB5E9FFF0D1A58CBE8 __anonymous0;};
union _IPV4_HEADER___7294C6500B7E8E66DD9EAFF73AAE9420 {UINT8 VersionAndHeaderLength;_IPV4_HEADER___7294C6500B7E8E66DD9EAFF73AAE9420___F4C21EB835C5D4DFDE52800A9D198A9B __anonymous0;};
union _IPV4_HEADER___80DFA742D2097AD049AAE78FF03C750C {UINT8 TypeOfServiceAndEcnField;_IPV4_HEADER___80DFA742D2097AD049AAE78FF03C750C___37C47C346917A4DE3CC45FD35C6B5017 __anonymous0;};
struct _NDIS_WWAN_SET_PREFERRED_MULTICARRIER_PROVIDERS {NDIS_OBJECT_HEADER Header;WWAN_LIST_HEADER PreferredListHeader;};
union _OWNER_ENTRY___6B4978F9925CAA83AD6686635A513271 {_OWNER_ENTRY___6B4978F9925CAA83AD6686635A513271___658AD709826129357C3064DC5428D5B8 __anonymous0;ULONG TableSize;};
struct _SCARD_READER_CAPABILITIES___DataRatesSupported {PULONG List;UCHAR Entries;};
union _TDI_REQUEST___4EEE655D8D7CBB31716A34162394170F {HANDLE AddressHandle;CONNECTION_CONTEXT ConnectionContext;HANDLE ControlChannel;};
union _TPM20_TABLE___C10FB33E4CEA99E8ACC08E19EFF679EB {struct _TPM20_TABLE___C10FB33E4CEA99E8ACC08E19EFF679EB___3793DD88648FDB414F5AE82C07DFBD73 Flags;UINT32 FlagBits;};
struct _VENDOR_ATTR___2AE9AD3FAE8157A8CA711EA8B2DDE80C {USHORT BuildNumber;UCHAR VersionMinor;UCHAR VersionMajor;};
struct _VENDOR_ATTR___7FDDA7E13B97E7F637DB452F6613430E {USHORT Length;UCHAR Buffer[32];};
union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS {struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS___6811685E9C9CDE140128703EAAAFCDFF s;UCHAR AsUCHAR;};
union _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS {struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS___488C0DA93B204848A74B494FE302347F s;ULONGLONG ValidBits;};
union sockaddr_in6___478B75FEFC20993B5CDAB8E612A985FD {ULONG sin6_scope_id;SCOPE_ID sin6_scope_struct;};
typedef void (*PFSRTL_EXTRA_CREATE_PARAMETER_CLEANUP_CALLBACK)(PVOID EcpContext, LPCGUID EcpType);
union _IMAGE_INFO___750B9F7C657AA4459AFB3416A5571407 {ULONG Properties;_IMAGE_INFO___750B9F7C657AA4459AFB3416A5571407___EE88D46FA510EEFAF6F582DB353EFFEE __anonymous0;};
union _IVHD_BLOCK___CC2427FB4E5628166180EC8970FE14AA {UINT8 AsUINT8;struct _IVHD_BLOCK___CC2427FB4E5628166180EC8970FE14AA___755609061C13195953D9B1206A3A8D71 s;};
union _IVHD_BLOCK___FFAE79A01A0C522F1D9081A9AC9A1E79 {UINT16 AsUINT16;struct _IVHD_BLOCK___FFAE79A01A0C522F1D9081A9AC9A1E79___B2C21B5885346285C3C15A05A5EB04A0 s;};
union _IVMD_BLOCK___6CA5807B4C1D95CBC919D39BCB1B3D59 {UINT8 AsUINT8;struct _IVMD_BLOCK___6CA5807B4C1D95CBC919D39BCB1B3D59___8816CF2C331B62425571B12594BC19F9 s;};
union _NET_BUFFER___05113C3D100EAEBCDF9954E02D617F8E {PNET_BUFFER_SHARED_MEMORY SharedMemoryInfo;PSCATTER_GATHER_LIST ScatterGatherList;};
union _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER {struct _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER___00CEFFFBE39527BBEE12FB46571022EC s;ULONG AsULONG;};
union _RX_CONTEXT___026195C05D43F7BC9CC58BDC838286E9 {ULONGLONG ForceLonglongAligmentDummyField;PVOID MRxContext[4];};
union _RX_CONTEXT___6AFB99893DFF2673B7FC3EB4E39AD6BC {_RX_CONTEXT___6AFB99893DFF2673B7FC3EB4E39AD6BC___86805C25ACFE1D5CF2EE68C1410C95AB __anonymous0;IO_STATUS_BLOCK IoStatusBlock;};
struct _SES_ADDITIONAL_ELEMENT_STATUS_DIAGNOSTIC_PAGE {UCHAR PageCode;UCHAR Reserved;UCHAR PageLength[2];UCHAR GenerationCode[4];SES_ADDITIONAL_ELEMENT_STATUS_DESCRIPTOR Descriptors[1];};
union _SMB_HEADER___9087A7F271D3D790A38473E0603644E5 {USHORT Reserved2[6];_NT_SMB_HEADER___1981ACDE232C6DE21F6ECE4E585F2227___69A4AD5419EA3D4C8A0ABF1A7711CEED __anonymous0;};
typedef void ( *PFLT_CALLBACK_DATA_QUEUE_COMPLETE_CANCELED_IO)(PFLT_CALLBACK_DATA_QUEUE Cbdq, PFLT_CALLBACK_DATA Cbd);
union _CHAR_INFO___0E79EC4DAC98A4AB202537FA8C3F69FC {WCHAR UnicodeChar;CHAR AsciiChar;};
union _ERESOURCE___0F9CA66D6BD1B66FB152E2AC5421C126 {USHORT Flag;_ERESOURCE___0F9CA66D6BD1B66FB152E2AC5421C126___70F280A3DEE89B0F258B5EC8A3BE63AA __anonymous0;};
union _ERESOURCE___6485B31835FF66149107F3D6F17C6B98 {PVOID Address;ULONG_PTR CreatorBackTraceIndex;};
union _HIDP_DATA___054E66EBAEB900A97FB470AAB272100E {ULONG RawValue;BOOLEAN On;};
union _MRX_FOBX____383A86132F0018DAD323C741CB139F27 {_MRX_FOBX____383A86132F0018DAD323C741CB139F27___1AD73BDAAE097FB53141F860CE77F2CB __anonymous0;PMRX_PIPE_HANDLE_INFORMATION PipeHandleInformation;};
union _NDIS_GUID___AB53B9CEEC61ECDF1333D6EBB2604C4E {NDIS_OID Oid;NDIS_STATUS Status;};
struct _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_ARRAY {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG FirstElementOffset;ULONG NumElements;ULONG ElementSize;};
union _PCC_TABLE___83536B2122381EB1BF94D79CF0D5F89E {ULONG AsULong;struct _PCC_TABLE___83536B2122381EB1BF94D79CF0D5F89E___8A9F02FD7BC4DD12824BA4C68FE6B03F s;};
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY {struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY___C238245912B9C54C7D9DB158AAAEEA48 s;ULONG AsULONG;};
struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {PVOID pValue;ULONG ValueLength;};
struct _DL_EUI48___537D01AC81A8B528D810E8012560EBBE {DL_OUI Oui;DL_EI48 Ei48;};
struct _DL_EUI64___111DC19AD74244695D2230B77DE8AE02 {DL_OUI Oui;_DL_EUI64___111DC19AD74244695D2230B77DE8AE02___A9DCE9EB2C6B848E9C6868EF1C1A4D5A __anonymous0;};
union _DXGK_PDE___7E37419C9C4A9D7B990FC9CE94D534E4 {_DXGK_PDE___7E37419C9C4A9D7B990FC9CE94D534E4___5B6B5864B9D54C2E38FEBF61B894C1CF __anonymous0;ULONGLONG Value;};
union _DXGK_PTE___E0A8C8A05CB3CF7081FA3F36783E9131 {_DXGK_PTE___E0A8C8A05CB3CF7081FA3F36783E9131___B6F1E4DC78FE35545F3C2E803FCB1620 __anonymous0;ULONGLONG Value;};
struct _IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT {ULONG fulFlags;NODE_ADDRESS NodeAddress;};
struct _NDIS_WWAN_ENUMERATE_DEVICE_SERVICE_COMMANDS {NDIS_OBJECT_HEADER Header;GUID DeviceServiceGuid;};
union _SRV_OPEN___03B51F6B0294198AC1E02D34CA408274 {LIST_ENTRY SrvOpenKeyList;ULONG SequenceNumber;};
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT {ULONG PropagationCookie;GUID UOW;GUID TmIdentity;ULONG BufferLength;};
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT {GUID TmIdentity;ULONG Flags;};
union _VLAN_TAG___439FFFA6F528943BE2F423ED909F8DC1 {UINT16 Tag;_VLAN_TAG___439FFFA6F528943BE2F423ED909F8DC1___C4451011160A8F3572F11B1881C01209 __anonymous0;};
struct _timecode___6889D7C8638655C86F211076F8C624CB {WORD wFrameRate;WORD wFrameFract;DWORD dwFrames;};
struct _HID_SUBMIT_IDLE_NOTIFICATION_CALLBACK_INFO {HID_SEND_IDLE_CALLBACK IdleCallback;PVOID IdleContext;};
union _PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER {struct _PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER___5BA7C143CE7966D60CEDB6D7415F71DD s;ULONG AsULONG;};
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS {struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS___C238245912B9C54C7D9DB158AAAEEA48 s;ULONG AsULONG;};
union _PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER {struct _PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER___39C386DD28FDD484F36F0B7CA0059F21 s;ULONG AsULONG;};
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT {GUID EnlistmentId;UOW UOW;};
union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS {struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS___EBBD5017D96525D77178BA3E4B036D03 s;ULONG AsULONG;};
union _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS {struct _WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS___73DDC73F6A9FBC135E9914E62BF32308 s;ULONGLONG ValidBits;};
union in6_addr___6F0816B860EA11CA8E788AEE35731DB2 {UCHAR Byte[16];USHORT Word[8];};
struct _HID_DESCRIPTOR___HID_DESCRIPTOR_DESC_LIST {UCHAR bReportType;USHORT wReportLength;};
struct _NDIS_WWAN_SUBSCRIBE_DEVICE_SERVICE_EVENTS {NDIS_OBJECT_HEADER Header;WWAN_LIST_HEADER DeviceServiceListHeader;};
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY {ULONG EntryLength;ULONG DependencyTypeFlags;ULONG ProviderSpecificFlags;VIRTUAL_STORAGE_TYPE VirtualStorageType;};
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY {ULONG EntryLength;ULONG DependencyTypeFlags;ULONG ProviderSpecificFlags;VIRTUAL_STORAGE_TYPE VirtualStorageType;ULONG AncestorLevel;ULONG HostVolumeNameOffset;ULONG HostVolumeNameSize;ULONG DependentVolumeNameOffset;ULONG DependentVolumeNameSize;ULONG RelativePathOffset;ULONG RelativePathSize;ULONG DependentDeviceNameOffset;ULONG DependentDeviceNameSize;};
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT {ULONG MarshalCookie;GUID UOW;};
typedef void (*NDK_FN_GET_PRIVILEGED_MEMORY_REGION_TOKEN)(NDK_PD *pNdkPd, UINT32 *pToken);
typedef BOOLEAN (*PFN_RTL_IS_SERVICE_PACK_VERSION_INSTALLED)(ULONG Version);
typedef void PO_FX_COMPONENT_ACTIVE_CONDITION_CALLBACK(PVOID Context, ULONG Component);
typedef ULONG (*PPCI_EXPRESS_ROOT_PORT_WRITE_CONFIG_SPACE)(PVOID Context, PVOID Buffer, ULONG Offset, ULONG Length);
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT {ULONG Size;DEVICE_DATA_MANAGEMENT_SET_ACTION Action;ULONG Flags;ULONG OperationStatus;ULONG ExtendedError;ULONG TargetDetailedError;ULONG ReservedStatus;ULONG OutputBlockOffset;ULONG OutputBlockLength;};
union _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER {struct _PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER___733AE15B0C3BC85882D4F5FD4F4261B3 s;ULONG AsULONG;};
union _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK {struct _PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK___C238245912B9C54C7D9DB158AAAEEA48 s;ULONG AsULONG;};
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY {struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY___5CEDD6DE0469F7C458057B946BAEAEAC s;ULONG AsULONG;};
struct _SES_ADDITIONAL_ELEMENT_STATUS_DESCRIPTOR {unsigned char ProtocolIdentifier : 4;unsigned char EIP : 1;unsigned char Reserved1 : 2;unsigned char Invalid : 1;UCHAR Length;UCHAR Reserved2;UCHAR ElementIndex;SES_PROTOCOL_INFORMATION ProtocolInfo;};
typedef void (*PNTFS_DEREF_EXPORTED_SECURITY_DESCRIPTOR)(PVOID Vcb, PSECURITY_DESCRIPTOR SecurityDescriptor);
typedef ULONG (*PPCI_EXPRESS_ROOT_PORT_READ_CONFIG_SPACE)(PVOID Context, PVOID Buffer, ULONG Offset, ULONG Length);
struct _DOT11_INCOMING_ASSOC_STARTED_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerMacAddr;};
struct _DOT11_OFFLOAD_NETWORK_STATUS_PARAMETERS {NDIS_OBJECT_HEADER Header;NDIS_STATUS Status;};
struct _DOT11_POWER_MGMT_AUTO_MODE_ENABLED_INFO {NDIS_OBJECT_HEADER Header;BOOLEAN bEnabled;};
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION {ULONG NumberOfProcessIdsInList;ULONG_PTR ProcessIdList[1];};
struct _MSNdis_StatusDot11AssociationCompletion {ULONG NumberElements;UCHAR NdisStatusDot11AssociationCompletionIndication[1];};
union _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY {struct _PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY___B7574879703BF72EB610F2F1617FB9A2 s;ULONG AsULONG;};
struct _SCSI_SENSE_DESCRIPTOR_ATA_STATUS_RETURN {SCSI_SENSE_DESCRIPTOR_HEADER Header;unsigned char Extend : 1;unsigned char Reserved1 : 7;UCHAR Error;UCHAR SectorCount15_8;UCHAR SectorCount7_0;UCHAR LbaLow15_8;UCHAR LbaLow7_0;UCHAR LbaMid15_8;UCHAR LbaMid7_0;UCHAR LbaHigh15_8;UCHAR LbaHigh7_0;UCHAR Device;UCHAR Status;};
struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE {ULONG ResponseLevel;ULONG NumberEntries;_STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE___1A0DE5E9D8917651411CC9599FC7DD6D __anonymous0;};
union _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS {struct _WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS___7E0C474F883E1834B3C25CB8F2CF97DD s;ULONGLONG ValidBits;};
union _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS {struct _WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS___87F9BFB18513EDB3A7E0A3216175706F s;ULONGLONG ValidBits;};
struct _______38167C14DDD6FD68ECBEEF1BA5418F40 {ULONG PayloadSize;BYTE Payload[512];};
typedef void ( *PFLTOPLOCK_PREPOST_CALLBACKDATA_ROUTINE)(PFLT_CALLBACK_DATA CallbackData, PVOID Context);
typedef void PO_FX_COMPONENT_IDLE_CONDITION_CALLBACK(PVOID Context, ULONG Component);
struct _DXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;DXGK_PRESENT_DISPLAY_ONLY_PROGRESS_ID ProgressId;};
union _FCB___B8BC522CD9CB7EDB980D9EC7301387EB {_LOWIO_PER_FCB_INFO __anonymous0;LOWIO_PER_FCB_INFO LowIoPerFcbInfo;};
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION {ULONG FileNameLength;WCHAR FileName[1];};
struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER {USHORT ChecksumAlgorithm;USHORT Reserved;ULONG Flags;ULONG ChecksumChunkSizeInBytes;ULONG ClusterSizeInBytes;};
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER {USHORT ChecksumAlgorithm;USHORT Reserved;ULONG Flags;};
union _IRP___CBBBB9F4F0755A16DC8A369061485BEC {struct _IRP *MasterIrp;LONG IrpCount;PVOID SystemBuffer;};
struct _LOG_PARAMETER_THRESHOLD_RESOURCE_COUNT {LOG_PARAMETER_HEADER Header;UCHAR ResourceCount[4];unsigned char Scope : 2;unsigned char Reserved0 : 6;UCHAR Reserved1[3];};
struct _MSNdis_StatusDot11ConnectionCompletion {ULONG NumberElements;UCHAR NdisStatusDot11ConnectionCompletionIndication[1];};
struct _MSNdis_StatusMediaSpecificIndicationEx {ULONG NumberElements;UCHAR NdisStatusMediaSpecificIndication[1];};
struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_WRITE {NDIS_OBJECT_HEADER Header;WWAN_DEVICE_SERVICE_SESSION_WRITE WriteData;};
union _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER {struct _PCI_EXPRESS_LINK_CAPABILITIES_REGISTER___D9C74A38A870D0320034BBD65C683AD2 s;ULONG AsULONG;};
union _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER {struct _PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER___679760A62E4138D50BDF4FE2A647D3A1 s;USHORT AsUSHORT;};
union _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER {struct _PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER___59873FEB55F6600C99E31DE5AC76366D s;ULONG AsULONG;};
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS {struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS___5CEDD6DE0469F7C458057B946BAEAEAC s;ULONG AsULONG;};
struct _PCI_EXPRESS_VENDOR_SPECIFIC_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;USHORT VsecId;unsigned short VsecRev : 4;unsigned short VsecLength : 12;};
struct _RESOURCEMANAGER_COMPLETION_INFORMATION {HANDLE IoCompletionPortHandle;ULONG_PTR CompletionKey;};
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION {ULONG LogPathLength;WCHAR LogPath[1];};
union _USB_DEFAULT_PIPE_SETUP_PACKET___wIndex {_USB_DEFAULT_PIPE_SETUP_PACKET___wIndex___C5207073352B9080466BBA41ADF73D00 __anonymous0;USHORT W;};
union _USB_DEFAULT_PIPE_SETUP_PACKET___wValue {_USB_DEFAULT_PIPE_SETUP_PACKET___wIndex___C5207073352B9080466BBA41ADF73D00 __anonymous0;USHORT W;};
struct _WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS {GUID DeviceServiceGuid;WWAN_LIST_HEADER ListHeader;};
struct DOT11_CONNECTION_COMPLETION_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_ASSOC_STATUS uStatus;};
typedef void (*PHDAUDIO_UNSOLICITED_RESPONSE_CALLBACK)(HDAUDIO_CODEC_RESPONSE, PVOID);
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER {ULONG Signature;union _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER___CFC7B0DA028A7F4F3B52DE418131CED1 u;ULONG IntegerArgument;};
struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE {ULONG Size;ULONG Version;ULONGLONG SlabSizeInBytes;ULONG SlabOffsetDeltaInBytes;ULONG SlabAllocationBitMapBitCount;ULONG SlabAllocationBitMapLength;ULONG SlabAllocationBitMap[1];};
struct _FILTER_AGGREGATE_STANDARD_INFORMATION {ULONG NextEntryOffset;ULONG Flags;union _FILTER_AGGREGATE_STANDARD_INFORMATION___271486DDBD938780674424E91EC699E5 Type;};
struct _IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES {ULONG fulFlags;ULONG ulNumberOfDestinations;PDEVICE_OBJECT hDestinationDeviceObjects[64];ULONG fulSpeed;};
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 {ULONG Type;ULONG DataLength;UCHAR Data[1];};
struct _L2CAP_RETRANSMISSION_AND_FLOW_CONTROL {UCHAR Mode;UCHAR TxWindowSize;UCHAR MaxTransmit;USHORT RetransmissionTO;USHORT MonitorTO;USHORT MaxPDUSize;};
struct _MSNdis_StatusDot11MPDUMaxLengthChange {ULONG NumberElements;UCHAR NdisStatusDot11MPDUMaxLengthChangeIndication[1];};
struct _MSiSCSI_InitiatorInstanceFailureEvent {UCHAR FailureType;WCHAR RemoteNodeName[224];};
struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION {NDIS_802_11_AUTHENTICATION_MODE AuthModeSupported;NDIS_802_11_ENCRYPTION_STATUS EncryptStatusSupported;};
struct _NDIS_RECEIVE_FILTER_GLOBAL_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG EnabledFilterTypes;ULONG EnabledQueueTypes;};
struct _NDIS_TAPI_SET_DEFAULT_MEDIA_DETECTION {ULONG ulRequestID;HDRV_LINE hdLine;ULONG ulMediaModes;};
struct _NDIS_TIMEOUT_DPC_REQUEST_CAPABILITIES {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG TimeoutArrayLength;ULONG TimeoutArray[1];};
struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_READ {NDIS_OBJECT_HEADER Header;WWAN_DEVICE_SERVICE_SESSION_READ ReadData;};
union _PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER {struct _PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER___9BDE94C8FE1CF521A2B6D72B34D087CA s;USHORT AsUSHORT;};
struct _TA_ADDRESS_NETBIOS_EX___AddrNetbiosEx {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_NETBIOS_EX Address[1];};
union _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS {struct _WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS___9503091861CF4683EE1755DF66CD71EF s;ULONG AsULONG;};
typedef NTSTATUS (*pKdReleaseIntegratedDeviceForDebugging)(PDEBUG_DEVICE_DESCRIPTOR IntegratedDevice);
struct DOT11_PMKID_CANDIDATE_LIST_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG uCandidateListSize;ULONG uCandidateListOffset;};
typedef void LLDP_MSAP_CREATE_NOTIFICATION_HANDLER(PLLDP_MSAP Msap, PVOID ClientBindingContext);
typedef NTSTATUS PCI_EXPRESS_ENTER_LINK_QUIESCENT_MODE(PVOID Context);
typedef BOOLEAN (*PFNBTH_IS_BLUETOOTH_VERSION_AVAILABLE)(UCHAR MajorVersion, UCHAR MinorVersion);
struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT {ULONGLONG VetoedFromAltitudeIntegral;ULONGLONG VetoedFromAltitudeDecimal;WCHAR Reason[256];};
struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER {ULONG Version;ULONG QueryFlags;ULONG HashAlgorithm;LARGE_INTEGER RangeOffsetInFile;LARGE_INTEGER RangeLength;};
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION {PUCHAR IoStatusBlockRange;ULONG Length;};
struct _IRB_REQ_ISOCH_ALLOCATE_RESOURCES_W2K {ULONG fulSpeed;ULONG fulFlags;ULONG nChannel;ULONG nMaxBytesPerFrame;ULONG nNumberOfBuffers;ULONG nMaxBufferSize;ULONG nQuadletsToStrip;HANDLE hResource;};
struct _MSNdis_InterruptModerationParameters {MSNdis_ObjectHeader Header;ULONG Flags;ULONG InterruptModeration;};
struct _MSNdis_ReceiveFilterGlobalParameters {MSNdis_ObjectHeader Header;ULONG Flags;ULONG EnabledFilterTypes;ULONG EnabledQueueTypes;};
struct _MSNdis_StatusDot11PmkidCandidateList {ULONG NumberElements;UCHAR NdisStatusDot11PmkidCandidateListIndication[1];};
struct _MSNdis_StatusMediaSpecificIndication {ULONG NumberElements;UCHAR NdisStatusMediaSpecificIndication[1];};
struct _NDIS_WWAN_DEVICE_SET_SERVICE_SESSION {NDIS_OBJECT_HEADER Header;WWAN_DEVICE_SERVICE_SESSION Session;};
struct _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY {UDP_ENCAP_TYPE UdpEncapType;USHORT DstEncapPort;};
union _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS {struct _PCI_EXPRESS_CORRECTABLE_ERROR_STATUS___98D8E7E308266478D1D362C4BD74CF14 s;ULONG AsULONG;};
union _PCI_EXPRESS_DEVICE_STATUS_2_REGISTER {struct _PCI_EXPRESS_DEVICE_STATUS_2_REGISTER___AAB7521546E80192293BF045FBAEF5A5 s;USHORT AsUSHORT;};
union _PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER {struct _PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER___33B85A381B3FEB24A38E4197A9E1BED9 s;ULONG AsULONG;};
struct _PCI_EXPRESS_SERIAL_NUMBER_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;ULONG LowSerialNumber;ULONG HighSerialNumber;};
union _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK {struct _PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK___5CEDD6DE0469F7C458057B946BAEAEAC s;ULONG AsULONG;};
struct _REAL_TIME_NOTIFICATION_SETTING_INPUT {TRANSPORT_SETTING_ID TransportSettingId;GUID BrokerEventGuid;};
struct _SCSI_PASS_THROUGH_DIRECT_WITH_BUFFER {SCSI_PASS_THROUGH_DIRECT ScsiPassThroughDirect;UCHAR SenseInfoBuffer[32];};
struct _TRANSACTIONMANAGER_BASIC_INFORMATION {GUID TmIdentity;LARGE_INTEGER VirtualClock;};
struct _WHEA_FIRMWARE_ERROR_RECORD_REFERENCE {UCHAR Type;UCHAR Reserved[7];ULONGLONG FirmwareRecordId;};
union _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS {struct _WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS___F816CA965C8EB9964AAB88E39FD7C726 s;ULONGLONG ValidBits;};
struct _WmiMonitorListedSupportedSourceModes {USHORT NumOfMonitorSourceModes;USHORT PreferredMonitorSourceModeIndex;VideoModeDescriptor MonitorSourceModes[1];};
typedef NTSTATUS DRIVER_NOTIFICATION_CALLBACK_ROUTINE(PVOID NotificationStructure, PVOID Context);
typedef BOOLEAN FAST_IO_MDL_READ_COMPLETE_COMPRESSED(struct _FILE_OBJECT *FileObject, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);
typedef NTSTATUS PCI_EXPRESS_EXIT_LINK_QUIESCENT_MODE(PVOID Context);
typedef void PROTOCOL_CL_INCOMING_CALL_QOS_CHANGE(NDIS_HANDLE ProtocolVcContext, PCO_CALL_PARAMETERS CallParameters);
typedef void PROTOCOL_CM_NOTIFY_CLOSE_AF_COMPLETE(NDIS_HANDLE CallMgrAfContext, NDIS_STATUS Status);
typedef NTSTATUS (*PSE_LOGON_SESSION_TERMINATED_ROUTINE)(PLUID LogonId);
struct _CO_AF_TAPI_INCOMING_CALL_PARAMETERS {ULONG ulLineID;ULONG ulAddressID;ULONG ulFlags;NDIS_VAR_DATA_DESC LineCallInfo;};
struct _DEBUGGING_DEVICE_IN_USE_INFORMATION {ULONG DeviceCount;DEBUGGING_DEVICE_IN_USE Device[1];};
struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR {ULONG Version;ULONG Size;BOOLEAN BenefitsFromWriteAggregation;};
struct _DOT11_MANUFACTURING_TEST_QUERY_DATA {ULONG uKey;ULONG uOffset;ULONG uBufferLength;ULONG uBytesRead;UCHAR ucBufferOut[1];};
struct _DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY {ULONG uMultiDomainCapabilityIndex;ULONG uFirstChannelNumber;ULONG uNumberOfChannels;LONG lMaximumTransmitPowerLevel;};
struct _DOT11_SUPPORTED_OFDM_FREQUENCY_LIST {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_SUPPORTED_OFDM_FREQUENCY dot11SupportedOFDMFrequency[1];};
struct _DXGKMDT_OPM_ACP_AND_CGMSA_SIGNALING {DXGKMDT_OPM_RANDOM_NUMBER rnRandomNumber;ULONG ulStatusFlags;ULONG ulAvailableTVProtectionStandards;ULONG ulActiveTVProtectionStandard;ULONG ulReserved;ULONG ulAspectRatioValidMask1;ULONG ulAspectRatioData1;ULONG ulAspectRatioValidMask2;ULONG ulAspectRatioData2;ULONG ulAspectRatioValidMask3;ULONG ulAspectRatioData3;ULONG ulReserved2[4];ULONG ulReserved3[4];};
struct _IRB_REQ_ISOCH_SET_CHANNEL_BANDWIDTH {HANDLE hBandwidth;ULONG nMaxBytesPerFrame;ULONG nBandwidthUnitsRequired;};
struct _KSM_BDA_WMDRMTUNER_GETPIDPROTECTION {KSM_NODE NodeMethod;ULONG ulPID;};
struct _LOG_PAGE_LOGICAL_BLOCK_PROVISIONING {unsigned char PageCode : 6;unsigned char SPF : 1;unsigned char DS : 1;UCHAR SubPageCode;UCHAR PageLength[2];LOG_PARAMETER_HEADER Parameters[];};
struct _MSMCAInfo_RawCorrectedPlatformEvent {ULONG Count;MSMCAInfo_Entry Records[1];};
struct _MSNdis_StatusDot11RoamingCompletion {ULONG NumberElements;UCHAR NdisStatusDot11RoamingCompletionIndication[1];};
struct _MSiSCSI_InitiatorInstanceStatistics {ULONGLONG UniqueAdapterId;ULONG SessionDigestErrorCount;ULONG SessionConnectionTimeoutErrorCount;ULONG SessionFormatErrorCount;ULONG SessionFailureCount;};
struct _NODE_TYPE_CODE_AND_SIZE_NO_REFCOUNT {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;};
struct _OB_PRE_DUPLICATE_HANDLE_INFORMATION {ACCESS_MASK DesiredAccess;ACCESS_MASK OriginalDesiredAccess;PVOID SourceProcess;PVOID TargetProcess;};
union _PCI_EXPRESS_DEVICE_CONTROL_REGISTER {struct _PCI_EXPRESS_DEVICE_CONTROL_REGISTER___FF07EAD2A1FC4493A4326FA96B8509C3 s;USHORT AsUSHORT;};
struct _SCSI_SENSE_DESCRIPTOR_BLOCK_COMMAND {SCSI_SENSE_DESCRIPTOR_HEADER Header;UCHAR Reserved1;unsigned char Reserved2 : 5;unsigned char IncorrectLength : 1;unsigned char Reserved3 : 2;};
struct _SecPkgCredentials_KdcProxySettingsW {ULONG Version;ULONG Flags;USHORT ProxyServerOffset;USHORT ProxyServerLength;USHORT ClientTlsCredOffset;USHORT ClientTlsCredLength;};
struct _TRANSACTION_ENLISTMENTS_INFORMATION {ULONG NumberOfEnlistments;TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];};
union _WHEA_MEMORY_ERROR_SECTION_VALIDBITS {struct _WHEA_MEMORY_ERROR_SECTION_VALIDBITS___CA2549C9282E981BBD06140190CACED9 s;ULONGLONG ValidBits;};
struct DOT11_ROAMING_COMPLETION_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_ASSOC_STATUS uStatus;};
typedef void ( *DXGKCB_PRESENT_DISPLAYONLY_PROGRESS)(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS);
typedef void FILTER_CANCEL_SEND_NET_BUFFER_LISTS(NDIS_HANDLE FilterModuleContext, PVOID CancelId);
struct IKoInitializeParentDeviceObjectVtbl {HRESULT ( *SetParentDeviceObject)(IKoInitializeParentDeviceObject *This, PDEVICE_OBJECT ParentDeviceObject);};
typedef void (*PHDAUDIO_TRANSFER_COMPLETE_CALLBACK)(HDAUDIO_CODEC_TRANSFER *, PVOID);
typedef void PO_FX_COMPONENT_IDLE_STATE_CALLBACK(PVOID Context, ULONG Component, ULONG State);
typedef void PROTOCOL_CL_DEREGISTER_SAP_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolSapContext);
typedef NTSTATUS (*PRXCE_CONNECTION_COMPLETION_ROUTINE)(PRXCE_CONNECTION_COMPLETION_CONTEXT pCompletionContext);
struct _ACPI_MANIPULATE_GLOBAL_LOCK_BUFFER {ULONG Signature;PVOID LockObject;};
struct _DEVICE_DSM_NOTIFICATION_PARAMETERS {ULONG Size;ULONG Flags;ULONG NumFileTypeIDs;GUID FileTypeID[1];};
struct _FILTER_AGGREGATE_BASIC_INFORMATION {ULONG NextEntryOffset;ULONG Flags;union _FILTER_AGGREGATE_BASIC_INFORMATION___5444EE7C9E297301ED4C4ED6F4A90C93 Type;};
struct _IRB_REQ_GET_LOCAL_HOST_INFORMATION {ULONG nLevel;PVOID Information;};
struct _MSNdis_80211_NetworkTypesSupported {ULONG NumberOfItems;MSNdis_80211_NetworkType Ndis80211NetworkTypes[1];};
struct _MSNdis_StatusDot11AssociationStart {ULONG NumberElements;UCHAR NdisStatusDot11AssociationStartIndication[1];};
struct _MSNdis_WmiReceiveScaleCapabilities {MSNdis_ObjectHeader Header;ULONG CapabilitiesFlags;ULONG NumberOfInterruptMessages;ULONG NumberOfReceiveQueues;};
struct _NDIS_802_11_AUTHENTICATION_REQUEST {ULONG Length;NDIS_802_11_MAC_ADDRESS Bssid;ULONG Flags;};
struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 {struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2___F6900041418FEA52CE0185D09FCBBC16 IPv4;struct _NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2___AAE8E5EF1AC450E09B5EEC83DD02498B IPv6;};
union _PCI_EXPRESS_ACS_CAPABIITY_REGISTER {struct _PCI_EXPRESS_ACS_CAPABIITY_REGISTER___E2489E6D610F7CF0B3F6210AF02A76C7 s;USHORT AsUSHORT;};
union _PCI_EXPRESS_CORRECTABLE_ERROR_MASK {struct _PCI_EXPRESS_CORRECTABLE_ERROR_MASK___98D8E7E308266478D1D362C4BD74CF14 s;ULONG AsULONG;};
union _PCI_EXPRESS_DEVICE_STATUS_REGISTER {struct _PCI_EXPRESS_DEVICE_STATUS_REGISTER___8D16E2D3140029B99C59EF1414D8FA91 s;USHORT AsUSHORT;};
struct _SFFDISK_QUERY_DEVICE_PROTOCOL_DATA {USHORT Size;USHORT Reserved;GUID ProtocolGUID;};
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES {GUID KtmTransaction;ULONGLONG NumberOfFiles;ULONGLONG BufferSizeRequired;ULONGLONG Offset;};
struct _USB_CONFIGURATION_POWER_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR SelfPowerConsumedD0[3];UCHAR bPowerSummaryId;UCHAR bBusPowerSavingD1;UCHAR bSelfPowerSavingD1;UCHAR bBusPowerSavingD2;UCHAR bSelfPowerSavingD2;UCHAR bBusPowerSavingD3;UCHAR bSelfPowerSavingD3;USHORT TransitionTimeFromD1;USHORT TransitionTimeFromD2;USHORT TransitionTimeFromD3;};
struct _VBICODECFILTERING_STATISTICS_NABTS {VBICODECFILTERING_STATISTICS_COMMON Common;DWORD FECBundleBadLines;DWORD FECQueueOverflows;DWORD FECCorrectedLines;DWORD FECUncorrectableLines;DWORD BundlesProcessed;DWORD BundlesSent2IP;DWORD FilteredLines;};
union _WHEA_ERROR_RECORD_HEADER_VALIDBITS {struct _WHEA_ERROR_RECORD_HEADER_VALIDBITS___303239889594314C554CBA593C88201B s;ULONG AsULONG;};
struct _WmiMonitorSupportedDisplayFeatures {BOOLEAN StandbySupported;BOOLEAN SuspendSupported;BOOLEAN ActiveOffSupported;UCHAR DisplayType;BOOLEAN sRGBSupported;BOOLEAN HasPreferredTimingMode;BOOLEAN GTFSupported;};
struct _WmiQueryReceiveFilterParameters_IN {MSNdis_WmiMethodHeader Header;MSNdis_ReceiveFilterParameters ReceiveFilterParameters;};
typedef void MINIPORT_CANCEL_DIRECT_OID_REQUEST(NDIS_HANDLE MiniportAdapterContext, PVOID RequestId);
typedef void MINIPORT_DISABLE_MESSAGE_INTERRUPT(NDIS_HANDLE MiniportInterruptContext, ULONG MessageId);
typedef void (*PCLASS_COMPRESS_RETRY_HISTORY_DATA)(PDEVICE_OBJECT DeviceObject, PSRB_HISTORY RequestHistory);
typedef void (*PCLFS_CLIENT_LOG_UNPINNED_CALLBACK)(PLOG_FILE_OBJECT LogFile, PVOID ClientData);
typedef void ( *PFLT_CALLBACK_DATA_QUEUE_REMOVE_IO)(PFLT_CALLBACK_DATA_QUEUE Cbdq, PFLT_CALLBACK_DATA Cbd);
typedef BOOLEAN (*PFN_RTL_IS_NTDDI_VERSION_AVAILABLE)(ULONG Version);
typedef void PROTOCOL_CM_DEACTIVATE_VC_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE CallMgrVcContext);
struct _CHANGER_INITIALIZE_ELEMENT_STATUS {CHANGER_ELEMENT_LIST ElementList;BOOLEAN BarCodeScan;};
struct _CO_TAPI_TRANSLATE_NDIS_CALLPARAMS {ULONG ulFlags;NDIS_VAR_DATA_DESC NdisCallParams;NDIS_VAR_DATA_DESC LineCallInfo;};
struct _CO_TAPI_TRANSLATE_TAPI_CALLPARAMS {ULONG ulLineID;ULONG ulAddressID;ULONG ulFlags;NDIS_VAR_DATA_DESC DestAddress;NDIS_VAR_DATA_DESC LineCallParams;NDIS_VAR_DATA_DESC NdisCallParams;};
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES {ULONG Size;DEVICE_DATA_MANAGEMENT_SET_ACTION Action;ULONG Flags;ULONG ParameterBlockOffset;ULONG ParameterBlockLength;ULONG DataSetRangesOffset;ULONG DataSetRangesLength;};
struct _DOT11_CURRENT_OPTIONAL_CAPABILITY {ULONG uReserved;BOOLEAN bDot11CFPollable;BOOLEAN bDot11PCF;BOOLEAN bDot11PCFMPDUTransferToPC;BOOLEAN bStrictlyOrderedServiceClass;};
struct _DOT11_DIVERSITY_SELECTION_RX_LIST {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_DIVERSITY_SELECTION_RX dot11DiversitySelectionRx[1];};
struct _DOT11_MANUFACTURING_TEST_SET_DATA {ULONG uKey;ULONG uOffset;ULONG uBufferLength;UCHAR ucBufferIn[1];};
struct _DOT11_SUPPORTED_DSSS_CHANNEL_LIST {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_SUPPORTED_DSSS_CHANNEL dot11SupportedDSSSChannel[1];};
struct _DVBScramblingControlSpanningEvent {ULONG ulPID;BOOL fScrambled;};
struct _DXGKARG_QUERYDEPENDENTENGINEGROUP {UINT NodeOrdinal;UINT EngineOrdinal;ULONGLONG DependentNodeOrdinalMask;};
union _IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS {_IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS___E626C5E7F1FDB3EA13C1C77C7D656CD4 __anonymous0;UINT32 Value;};
struct _IRB_REQ_SET_LOCAL_HOST_PROPERTIES {ULONG nLevel;PVOID Information;};
struct _ISCSI_DiscoveredTargetPortalGroup {ULONG PortalCount;ISCSI_DiscoveredTargetPortal Portals[1];};
struct _MOUNTMGR_DRIVE_LETTER_INFORMATION {BOOLEAN DriveLetterWasAssigned;UCHAR CurrentDriveLetter;};
struct _MSNdis_StatusDot11ConnectionStart {ULONG NumberElements;UCHAR NdisStatusDot11ConnectionStartIndication[1];};
struct _MSNdis_StatusHDSplitCurrentConfig {ULONG NumberElements;UCHAR HDSplitCurrentConfig[1];};
struct _NDIS_PCI_DEVICE_CUSTOM_PROPERTIES {NDIS_OBJECT_HEADER Header;UINT32 DeviceType;UINT32 CurrentSpeedAndMode;UINT32 CurrentPayloadSize;UINT32 MaxPayloadSize;UINT32 MaxReadRequestSize;UINT32 CurrentLinkSpeed;UINT32 CurrentLinkWidth;UINT32 MaxLinkSpeed;UINT32 MaxLinkWidth;UINT32 PciExpressVersion;UINT32 InterruptType;UINT32 MaxInterruptMessages;};
struct _NDIS_WWAN_SET_PREFERRED_PROVIDERS {NDIS_OBJECT_HEADER Header;WWAN_LIST_HEADER PreferredListHeader;};
struct _NDIS_WWAN_SET_PROVISIONED_CONTEXT {NDIS_OBJECT_HEADER Header;WWAN_SET_CONTEXT ProvisionedContext;};
union _PCI_EXPRESS_CAPABILITIES_REGISTER {struct _PCI_EXPRESS_CAPABILITIES_REGISTER___D337D576951D723C09FB7F464F1ED801 s;USHORT AsUSHORT;};
union _PCI_EXPRESS_LINK_CONTROL_REGISTER {struct _PCI_EXPRESS_LINK_CONTROL_REGISTER___BE1F288DD5954ACB2B5DBA4752D8F166 s;USHORT AsUSHORT;};
union _PCI_EXPRESS_ROOT_CONTROL_REGISTER {struct _PCI_EXPRESS_ROOT_CONTROL_REGISTER___BCB46F1AB8E2650210485E57DA7EFF70 s;USHORT AsUSHORT;};
union _PCI_EXPRESS_SLOT_CONTROL_REGISTER {struct _PCI_EXPRESS_SLOT_CONTROL_REGISTER___7F355CBA7DE41F13E8F39C22E6505FBE s;USHORT AsUSHORT;};
struct _SCSI_SENSE_DESCRIPTOR_INFORMATION {SCSI_SENSE_DESCRIPTOR_HEADER Header;unsigned char Valid : 1;unsigned char Reserved1 : 7;UCHAR Reserved2;UCHAR Information[8];};
struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT {ULONGLONG RequestSize;ULONG NumOutStandingRequests;};
struct _SYSTEM_POWER_STATE_DISABLE_REASON {BOOLEAN AffectedState[8];ULONG PowerReasonCode;ULONG PowerReasonLength;};
union _WHEA_ERROR_INJECTION_CAPABILITIES {struct _WHEA_ERROR_INJECTION_CAPABILITIES___45331E6F0F3048A1678A6E0B376D3893 s;ULONG AsULONG;};
struct _WmiQueryReceiveQueueParameters_IN {MSNdis_WmiMethodHeader Header;MSNdis_ReceiveQueueParameters ReceiveQueueParameters;};
struct tagKS_DATAFORMAT_VIDEOINFO_PALETTE {KSDATAFORMAT DataFormat;KS_VIDEOINFO VideoInfo;};
struct _01DCE0ED23F464638BF845FBE919C7FC {KSP_NODE Property;ULONG EsPid;};
struct _0235C12200358EB80BD199E9E2C1E45C {UCHAR Generation[4];UCHAR AdditionalLength[4];PRI_RESERVATION_DESCRIPTOR Reservations[];};
struct _0563D17F902D53081481BDEBB46755BB {NDIS_AF AddressFamily;ULONG MajorVersion;ULONG MinorVersion;};
struct _060F75F85D33090A279ABE5EFCC5AB4A {KSPROPERTY Property;ULONG Standard;};
struct _062D643B57BB006C3005C5FAB86889C0 {ULONG TimeCheck;UCHAR DemotePercent;UCHAR PromotePercent;UCHAR Spare[2];};
struct _07B7FBDB71A394C363DCB969C30B9F57 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_COMMON Statistics;};
struct _097132A3DAC724C77C2462A4DC4AA652 {KSDATAFORMAT DataFormat;WAVEFORMATEX WaveFormatEx;};
struct _0D4D90B30C078E58E26CBA964C3C5A4B {KSEVENT Event;ULONG NodeId;ULONG Reserved;};
struct _0D8536C0635F0C9C2E983545F11C4AD1 {KSPROPERTY Property;ULONG BaseAddress;ULONG RequestedBufferSize;ULONG NotificationCount;};
struct _0E076CBD8F5A7ED08B697C5009EDFCFF {KSIDENTIFIER PropTypeSet;ULONG Id;ULONG PropertyLength;};
struct _113235CB38218359B65312E6A8B53D96 {LPCGUID Guid;ULONG InstanceCount;ULONG Flags;};
struct _120C91A26C0A2C69E1789355DF7D48EB {ULONG Register;ULONG Width;ULONGLONG Numerator;ULONGLONG Denominator;ULONG Accuracy;};
struct _1260C3F85D445CE832F2313B24AA992C {KSPROPERTY Property;ULONG BaseAddress;};
struct _12A419A691843E3FACBCDACF473D8E54 {BOOL Mute;LONG Level;};
struct _1501AF060343F1F91CA0D6153CF3A6C1 {KSEVENTDATA EventData;ULONG StartFrequency;ULONG EndFrequency;};
struct _155DA1A439C400442DF8DC3CA0B009F1 {ULONG AccessFlags;ULONG DescriptionSize;KSIDENTIFIER PropTypeSet;ULONG MembersListCount;ULONG Reserved;};
struct _1695112F83C2100BD6016AFE09814BB8 {ULONGLONG UsnJournalID;USN FirstUsn;USN NextUsn;USN LowestValidUsn;USN MaxUsn;ULONGLONG MaximumSize;ULONGLONG AllocationDelta;};
struct _1889F3BAB83DF1AC38A4E0627115688D {ULONG Size;ULONG Pin;WCHAR SymbolicLinkName[1];};
struct _190FAF90ED71AB17CA7DE27E94D1BCF3 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_NABTS Statistics;};
struct _1B63FBE2ECC383A1603E3615A504628D {KSPROPERTY Property;LONG lOcularFocalLength;LONG lObjectiveFocalLengthMin;LONG lObjectiveFocalLengthMax;};
struct _1CE0BD7852F87226759D0185D4AC1198 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_CC_PIN Statistics;};
struct _1F16BBD766B6BEFB723ABEAEF53457A3 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_COMMON_PIN Statistics;};
struct _1F616AD8AB927B39714EF11ABE14251C {ULONG Size;ULONG TimeDateStamp;USHORT MajorVersion;USHORT MinorVersion;ULONG GlobalFlagsClear;ULONG GlobalFlagsSet;ULONG CriticalSectionDefaultTimeout;ULONG DeCommitFreeBlockThreshold;ULONG DeCommitTotalFreeThreshold;ULONG LockPrefixTable;ULONG MaximumAllocationSize;ULONG VirtualMemoryThreshold;ULONG ProcessHeapFlags;ULONG ProcessAffinityMask;USHORT CSDVersion;USHORT Reserved1;ULONG EditList;ULONG SecurityCookie;ULONG SEHandlerTable;ULONG SEHandlerCount;};
struct _2313F5502F168B8A201E3DA7C3B8E19D {ULONG Latency;ULONG Power;ULONG TimeCheck;UCHAR PromotePercent;UCHAR DemotePercent;UCHAR StateType;UCHAR Reserved;ULONG StateFlags;ULONG Context;ULONG IdleHandler;ULONG Reserved1;};
struct _23496AA6B538BC04EA278D40B88E7395 {KSPROPERTY Property;KSPIN_MEDIUM IFMedium;};
struct _237238CE6134F0577B32BA38B1011348 {KSEVENT Event;ULONG PinId;ULONG Reserved;};
struct _26873349DB0A36B1F3161FA857CA70AC {KSPROPERTY Property;KSRATE Rate;};
struct _271E49C86C8EFA0B647D87A58CF03284 {unsigned int RoundingMode : 2;unsigned int Precision : 3;unsigned int Operation : 12;_FPIEEE_EXCEPTION_FLAGS Cause;_FPIEEE_EXCEPTION_FLAGS Enable;_FPIEEE_EXCEPTION_FLAGS Status;_FPIEEE_VALUE Operand1;_FPIEEE_VALUE Operand2;_FPIEEE_VALUE Result;};
struct _28A0AF738EE9756E1A9EEC68C6D23E3C {ULONG State;ULONG Latency;ULONG Speed;ULONG64 Processors;};
struct _28B3DD3F07F137DE885F9AB2BF32CB8A {KSPROPERTY Property;PVOID BaseAddress;};
struct _2BB1A5364724F142E07EC8BC0AB4A355 {USHORT usType;SHORT wXCoord;SHORT wYCoord;SHORT wZCoord;SHORT wVerticalAngle;SHORT wHorizontalAngle;};
struct _2E8FF8F0F30DAB89972BBD12E0BA3A8E {ULONG Attributes;ULONG BufferSize;PVOID BufferAddress;};
struct _2E9A7A0438C52FCD74FAAABDE54DD374 {RCVALL_VALUE Mode;ULONG Interface;};
struct _2F642FF65A2C0B5567E803A6696CABCC {USHORT Length;PVOID Buffer;};
struct _3128CFC3245060A29C7CC794B5D69F28 {KSPROPERTY Property;PVRAM_SURFACE_INFO pVramSurfaceInfo;};
struct _331B1DF8077172E73B1772E454860C5E {ULONG Restart;SID Sid;};
struct _34925C97D7FBDFE0BB6570642E2AD082 {ULONG NextEntryOffset;ULONG FileIndex;ULONG FileNameLength;WCHAR FileName[1];};
struct _358B21B769DBB67C3050F61FED658732 {KSPROPERTY Property;ULONG Mode;ULONG StandardsSupported;ULONG MinFrequency;ULONG MaxFrequency;ULONG TuningGranularity;ULONG NumberOfInputs;ULONG SettlingTime;ULONG Strategy;};
struct _364E147BBB652D1A6AD46ACECD93F8A9 {KSPROPERTY Property;ULONG IndexInputPin;ULONG Active;};
struct _3878B18F15C290CF7BC80116234DE41C {HANDLE QualityManager;PVOID Context;};
struct _39D33AF960C88F66DA4F36F84B0EC24C {KSNODEPROPERTY NodeProperty;LONG lOcularFocalLength;LONG lObjectiveFocalLengthMin;LONG lObjectiveFocalLengthMax;};
struct _3A744348A6C9F73853F568E19FD6B4F7 {REFERENCE_TIME StartTime;LONG Rate;};
struct _40B3E31023928B11E2A8685514812B52 {KSDATAFORMAT DataFormat;KSDSOUND_BUFFERDESC BufferDesc;};
struct _42F99BA4BF00EE2B1B9AFA99FBE7C8B1 {ULONG CreateItemsCount;PKSOBJECT_CREATE_ITEM CreateItemsList;};
struct _4424FFEAB304DE779362E708A77EF4CB {ULONG ByteCount;USHORT MajorVersion;USHORT MinorVersion;ULONG BytesPerPhysicalSector;USHORT LfsMajorVersion;USHORT LfsMinorVersion;};
struct _451777DAEA681FBE98F7EEED9576F1D3 {KSP_NODE Property;ULONG CurrentFrequency;ULONG FrequencyRangeMin;ULONG FrequencyRangeMax;ULONG MilliSecondsLeft;};
struct _4678A3289DA4711CDCEC5ACF3537B1AB {LARGE_INTEGER StartingLcn;LARGE_INTEGER BitmapSize;UCHAR Buffer[1];};
struct _47B9B8BEF06705D3AC5342748B9ED2E2 {KSP_NODE Property;BOOL AutoDetect;};
union _49DE94CD170A783608C4A6CA5E13CF1F {_49DE94CD170A783608C4A6CA5E13CF1F___EEA291B95E2758FCA85357F8BCFF0FA8 __anonymous0;_49DE94CD170A783608C4A6CA5E13CF1F___445634E971F5AB42189D2AF4A82D7917 __anonymous1;};
struct _4A08272B00433CD7EE8E1AF4F71BCC64 {ULONGLONG UsnJournalID;ULONG DeleteFlags;};
struct _4C19A7724930D5B111BE03D85B9BF8C9 {ULONG NewState;ULONG OldState;ULONG64 Processors;};
struct _4DD80126BF490D6FAEABA1D4740D8838 {KSPROPERTY Property;ULONG NotificationEvent;};
struct _5174F44B3769759428827427236E3006 {ULONG ByteCount;ULONG MajorVersion;ULONG MinorVersion;ULONG BytesPerPhysicalSector;LARGE_INTEGER VolumeSerialNumber;LARGE_INTEGER NumberSectors;LARGE_INTEGER TotalClusters;LARGE_INTEGER FreeClusters;LARGE_INTEGER TotalReserved;ULONG BytesPerSector;ULONG BytesPerCluster;LARGE_INTEGER MaximumSizeOfResidentFile;LARGE_INTEGER Reserved[10];};
struct _518AEB1FEE0990110D4FC7592EB5CC55 {DS3DVECTOR Position;DS3DVECTOR Velocity;DS3DVECTOR OrientFront;DS3DVECTOR OrientTop;FLOAT DistanceFactor;FLOAT RolloffFactor;FLOAT DopplerFactor;};
struct _52BD71AC0F61B53F3E44045ED088295E {LONGLONG Duration;ULONG FrameFlags;ULONG Reserved;};
struct _56FA1B9DDCE9D648FE900988960BAD6F {KSPROPERTY Property;ULONG StandardsSupported;ULONG Capabilities;ULONG SettlingTime;ULONG HSyncPerVSync;};
struct _57C5023E6D7E701595220C2F2C785C20 {ACCESS_MASK DesiredAccess;ULONG SecurityIds[1];};
struct _58C2A16435EA044F8AD69979A6836AA4 {KSDPC_ITEM DpcItem;LIST_ENTRY BufferList;};
struct _5AF83BE1E127935AA438E91D3D277054 {CHAR szCountryCode[4];BYTE bRating;};
struct _5B98A3A85E20DBA203FE93F0C6DC9B6B {KSPROPERTY Property;KS_AMVPSIZE Size;};
struct _5DB42174B48D54F5127552AD4BBA26D1 {ULONGLONG StartFileReferenceNumber;USN LowUsn;USN HighUsn;};
struct _5E92F866E5E5F01CD93A72BBF8C1999A {ULONG IdleTransitions;ULONG FailedTransitions;ULONG InvalidBucketIndex;ULONG64 TotalTime;ULONG IdleTimeBuckets[6];};
struct _631353BB22A3E1576EFF7DC760D2A07D {ULONGLONG SteppingDelta;KSPROPERTY_BOUNDS_LONGLONG Bounds;};
struct _686FDF1C0C03C3D9039AD8B14FB9C99A {PVOID Context;ULONG Status;};
struct _69DAD432D0597BAB6A67398C913F94DB {KSPROPERTY Property;ULONG PinId;ULONG Reserved;};
struct _6A5B75FE3CDFCD80FCDD67FCD1AED8F3 {LARGE_INTEGER VolumeSerialNumber;LARGE_INTEGER NumberSectors;LARGE_INTEGER TotalClusters;LARGE_INTEGER FreeClusters;LARGE_INTEGER TotalReserved;ULONG BytesPerSector;ULONG BytesPerCluster;ULONG BytesPerFileRecordSegment;ULONG ClustersPerFileRecordSegment;LARGE_INTEGER MftValidDataLength;LARGE_INTEGER MftStartLcn;LARGE_INTEGER Mft2StartLcn;LARGE_INTEGER MftZoneStart;LARGE_INTEGER MftZoneEnd;};
struct _6C32D841228ADC85BF22C8C3850F7AC4 {ULONG ContentId;DRMRIGHTS DrmRights;};
struct _6F08919EF02DAA05323F80511ECED656 {KSPROPERTY Property;ULONG NumberOfInputs;ULONG NumberOfOutputs;};
struct _726D8FC833E61F5DB3AAF636888074FD {KSPROPERTY Property;BOOL AutoDetect;};
struct _7445C9FCFCC2899651BCA0E341BC0369 {KSNODEPROPERTY NodeProperty;ULONG DevSpecificId;ULONG DeviceInfo;ULONG Length;};
struct _764676431BC78EE50306C71955FB365D {KSPROPERTY Property;ULONG Value;};
struct _76BBB8505EB675FEBBC29DD2F96B6E73 {ULONG BufferAddress;ULONG ActualBufferSize;BOOL CallMemoryBarrier;};
struct _799828DB081536A4670A0BD2D36EB2B0 {_INET_PORT_RANGE __anonymous0;_E4277B22BE8DDC98F66C5B49691234CA __anonymous1;};
struct _7A161162541E13AAF3E44563AE0B1752 {WAVEFORMATEXTENSIBLE FormatExt;DWORD dwEncodedSamplesPerSec;DWORD dwEncodedChannelCount;DWORD dwAverageBytesPerSec;};
struct _7D6AD1D4C0599A70ED2A75DF53A62D54 {LONGLONG Current;LONGLONG Stop;KS_SEEKING_FLAGS CurrentFlags;KS_SEEKING_FLAGS StopFlags;};
struct _81AC0294484DCEB16CBE342B679E5951 {ULONG ulNumParams;DvbParentalRatingParam pParams[1];};
struct _8276AF68B2084DDEC7235E96B5A3DDF6 {ULONG Size;ULONG Flags;GUID Attribute;};
struct _82A92AD198AEB558BCF016A3DC6D0FC4 {ULONG SapType;ULONG SapLength;UCHAR Sap[1];};
struct _85CBE24E9ED55DBB779718CA5D73A273 {KSPROPERTY Property;ULONG Mode;};
struct _8630A1F515F1D9088A894BA95A0F4D66 {KSPROPERTY Property;VBICODECFILTERING_SCANLINES Scanlines;};
struct _8734295609DAB040198410EB4CD6E51F {ULONG64 TotalTimeUs;ULONG MinTimeUs;ULONG MaxTimeUs;ULONG Count;};
struct _8765F39B1D4DEFD1F2F8643F85B5D457 {ULONG Flags;ULONG Control;WAVEFORMATEX WaveFormatEx;};
struct _8A300D195525B62B81F3FAC87DD6582B {KSP_NODE NodeProperty;TIMECODE_SAMPLE TimecodeSamp;};
struct _8F34270CB28A8FB9BC09363183528BFE {GUID Guid;ULONG InstanceCount;ULONG Flags;};
struct _91BD25BE856B91F4F94C146E39BAA29E {GUID Manufacturer;GUID Product;GUID Component;GUID Name;ULONG Version;ULONG Revision;};
struct _97739C7249C02ACEBAF17DFC34E3F72B {KSPROPERTY Property;KSMULTIPLE_ITEM MultipleItem;};
struct _98D21277AAAA3049664E864EBED0B60A {KS_FRAMING_RANGE Range;ULONG InPlaceWeight;ULONG NotInPlaceWeight;};
struct _99C6912CDB5C12269FDD73BE73429D8B {KSMETHOD Method;ULONG NodeId;ULONG Reserved;};
struct _9B0A4478CCC03CE069B62A821FAD8B21 {PHYSICAL_ADDRESS PhysicalAddress;ULONG Length;};
struct _9C12574F58AA2B5C1EBE7BBCF485E547 {KSPROPERTY Property;TIMECODE_SAMPLE TimecodeSamp;};
struct _9E657745785F4F2083998F3B8B91C4CD {BOOL MediaPresent;ULONG MediaType;BOOL RecordInhibit;};
struct _A032DB0F7E204543FB4FDFFDC60EE56A {POWER_ACTION Action;ULONG Flags;ULONG EventCode;};
struct _A07373D2A5755254DCD028456AB4EC3B {KSEVENTDATA EventData;LONGLONG MarkTime;};
struct _A156F3783D3AF89709906294AAADEE96 {KSDATARANGE DataRange;ULONG MaximumChannels;ULONG MinimumBitsPerSample;ULONG MaximumBitsPerSample;ULONG MinimumSampleFrequency;ULONG MaximumSampleFrequency;};
struct _A352DA0F15C73F1F5EAA2E36AD3C4FF0 {KSEVENTDATA KsEventData;ULONGLONG Position;};
struct _A4CC0F087DE00420119DAAB092DFFA3E {KSPROPERTY Property;ULONG NodeId;ULONG Reserved;};
union _A4FB595EF421231CAF150DDD3288A6D5 {_A4FB595EF421231CAF150DDD3288A6D5___33A5881EA3D20175AF6F6CBC82269B7B __anonymous0;LONGLONG Alignment;};
struct _AC9A5C69A2E8BFD7F981D24477498145 {LONG Channel;FLOAT VolSmoothScale;FLOAT TotalDryAttenuation;FLOAT TotalWetAttenuation;LONG SmoothFrequency;LONG Delay;};
struct _AE319F515EC2CAE237A98B55063CA2F4 {KSPROPERTY Property;HANDLE NotificationEvent;};
struct _B03639772012518ABC96BF05B41D5C12 {KSALLOCATOR_FRAMING_EX Framing;ULONG AllocatedFrames;ULONG Reserved;};
struct _B04A80E61A6C52E3FD4D22A5F125C77E {KSPROPERTY Property;ULONG StreamIndex;ULONG VideoControlCaps;};
struct _B479CD8F7541BC4BC8DADEB69DB970AF {KSPROPERTY Property;ULONG BaseAddress;ULONG RequestedBufferSize;};
struct _B62AAF3B70FEB5C8D5EF5D71926BC992 {KSPROPERTY Property;ULONG Frequency;ULONG LastFrequency;ULONG TuningFlags;ULONG VideoSubChannel;ULONG AudioSubChannel;ULONG Channel;ULONG Country;};
struct _B8B838046A6339950C48D4D07BD9D7BC {ULONG64 StartTime;ULONG64 EndTime;ULONG Reserved[4];};
struct _BA718A362089753A7EB60B21429558A7 {ULONG SteppingDelta;ULONG Reserved;KSPROPERTY_BOUNDS_LONG Bounds;};
struct _BD45DD415248BEAEE554FBC6AD56DBFA {LARGE_INTEGER TimerFrequency;LARGE_INTEGER TimeStamp1;KSAUDIO_POSITION Position;LARGE_INTEGER TimeStamp2;};
struct _BD86F746C2C01DD8A428D9C33DA8EFBD {ULONG ThermalConstraint;ULONG64 Processors;};
struct _BDE91A4D4766441856A2EB7036E539BD {KSEVENTDATA EventData;LONGLONG TimeBase;LONGLONG Interval;};
struct _BF6BFD8678B7E7ABDC56122D693BAF10 {ULONG InputChannels;ULONG OutputChannels;KSAUDIO_MIX_CAPS Capabilities[1];};
struct _C0C97988B2B1541C7D96E5C8ECD89FD1 {HANDLE FileHandle;LARGE_INTEGER SourceFileRecord;LARGE_INTEGER TargetFileRecord;};
struct _C18AA754B44D3B0CE088F6A6B0863744 {ULONG PelsWidth;ULONG PelsHeight;ULONG BitsPerPel;WCHAR DeviceID[1];};
union _C9F2A16A1B5FC998B91DA494984E0FDB {_C9F2A16A1B5FC998B91DA494984E0FDB___0559678CAE7576A37561112FDF9C20E6 __anonymous0;_C9F2A16A1B5FC998B91DA494984E0FDB___F7C05C0C56E55CB044DFD46C70BB2992 __anonymous1;};
struct _D4D0762896814197118ADD898ABBFE52 {KSP_NODE Property;ULONG Mode;ULONG AnalogStandardsSupported;ULONG DigitalStandardsSupported;ULONG MinFrequency;ULONG MaxFrequency;ULONG SettlingTime;ULONG AnalogSensingRange;ULONG DigitalSensingRange;ULONG MilliSecondsPerMHz;};
struct _D63E714A239F9C0D1FE2D222C2E0E7D5 {REFERENCE_TIME OutputZeroTime;LONG Rate;};
struct _D673094E3AD950F76728E160E7A2C382 {KSPROPERTY Property;ULONG NumberOfLines;ULONG SignalLocked;ULONG ChromaLock;};
struct _D74197C1B01F8299C3B95153261D4A94 {UCHAR Mode;ULONG64 Processors;};
struct _D86AEF8896DDE0BDF211E48E78F8BB6F {KSPROPERTY Property;ULONG NumberOfLines;ULONG SignalLocked;};
struct _DB6743270A05FF5B7AB17563AEBB3A96 {KSPROPERTY Property;VBICODECFILTERING_NABTS_SUBSTREAMS Substreams;};
struct _DF566185D2A6E0088E9F136346A69B5D {AGP_INFO_COMMON CommonInfo;AGP_INFO_DRIVER DriverInfo;};
struct _E054F7F0B81E76E3D6D098531C7E763C {ULONG BufferSize;ULONG NextWmiRegInfo;ULONG RegistryPath;ULONG MofResourceName;ULONG GuidCount;WMIREGGUIDW WmiRegGuid[];};
struct _E15D7B7CA61FF43DF93005DFD376A388 {KSPROPERTY Property;ULONG CurrentFrequency;ULONG PLLOffset;ULONG SignalStrength;ULONG Busy;};
struct _E1A151A2F6A6C209F977C1A4EAB9F7DF {GUID ProtocolId;PVOID Argument1;PVOID Argument2;};
struct _E21F85AFDEE9EAF37885ADBF8938BB0C {KSALLOCATOR_FRAMING Framing;ULONG AllocatedFrames;ULONG Reserved;};
struct _E4A6BAB3223452EC45F6B117A37FFCF9 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_NABTS_PIN Statistics;};
struct _E4D39CEDA60A9A842177218EB3078B88 {KSPROPERTY Property;ULONG InputIndex;};
struct _E56F877AE116898CEBF188009740BA30 {ULONG ulPID;MEDIA_SAMPLE_CONTENT MediaSampleContent;};
struct _E5C551D5220B94E855DFD2A46F971A3B {KSPROPERTY Property;VBICODECFILTERING_CC_SUBSTREAMS Substreams;};
struct _E7BDCECB0924BC4C6E03B7EEA1B31BA1 {LONGLONG Time;ULONG Numerator;ULONG Denominator;};
struct _EA4AC72E281160164D445E15D4425ADE {KS_AMVPSIZE Size;DWORD MaxPixelsPerSecond;DWORD Reserved;};
struct _ECC65BA02B08F93DE1D3AD2A06446B79 {ULONG Enabled;KSDS3D_ITD_PARAMS LeftParams;KSDS3D_ITD_PARAMS RightParams;ULONG Reserved;};
struct _ECD9D23603D8BADEE24156B8BE3276B4 {KSPROPERTY Property;ULONG IndexInputPin;ULONG IndexOutputPin;ULONG CanRoute;};
struct _EF62F39E220E1A59E4CABD7B09369D89 {UCHAR RequestFileName[1];union _EF62F39E220E1A59E4CABD7B09369D89___209F08508D464E0EBFB2D318B910257C Referral;};
struct _F1FF9EB17A5B0DC512AB60E4FE6215DC {GUID PropertySet;ULONG Count;};
struct _F2A265646FB33FDD4D1C81D3F589355E {KSDATAFORMAT DataFormat;WAVEFORMATEXTENSIBLE WaveFormatExt;};
struct _F2DB9C7A95CA6E7C489F89DFE01AE08F {USHORT MaxReferralLevel;UCHAR RequestFileName[1];};
struct _F686D1C2766FDD5B6EB9F09F9CA57BCC {USHORT NumEntries;USHORT FirstEntry;union _F686D1C2766FDD5B6EB9F09F9CA57BCC___82DE14DB9EA53355F37C8BC9C4425BE7 LookupTable[1];};
struct _F903DA300906E5E06303D440D5AEF258 {DWORD rating_system_count;RATING_SYSTEM *lpratingsystem;};
struct _FB17C9225429EF808B128BCE70FFD0DB {ULONG Size;ULONG Enabled;BOOL SwapChannels;BOOL ZeroAzimuth;BOOL CrossFadeOutput;ULONG FilterSize;};
struct _FB8A4E21AD43EDA8BFCCEEFE99FC59C9 {KSPROPERTY Property;VBICODECFILTERING_STATISTICS_CC Statistics;};
struct _FBE7179BAB40555F1A13AD3C5BC3BB71 {BOOL fStereo;ULONG DualMode;};
struct _FF5E69F4B253A5B06BAE6BEDF0A709ED {ULONG Count;PKSATTRIBUTE *Attributes;};
union DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO {ULONG uChCenterFrequency;struct DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO___FBCA4EB12BF1C0767298C36EFA7C0892 FHSS;};
typedef void GET_D3COLD_LAST_TRANSITION_STATUS(PVOID Context, PD3COLD_LAST_TRANSITION_STATUS LastTransitionStatus);
typedef void MINIPORT_ENABLE_MESSAGE_INTERRUPT(NDIS_HANDLE MiniportInterruptContext, ULONG MessageId);
typedef NTSTATUS (*PREPLACE_INITIATE_HARDWARE_MIRROR)(PVOID Context);
typedef void PROTOCOL_OPEN_ADAPTER_COMPLETE_EX(NDIS_HANDLE ProtocolBindingContext, NDIS_STATUS Status);
typedef BOOLEAN ( *PUSB_BUSIFFN_IS_DEVICE_HIGH_SPEED)(PVOID);
typedef SECURITY_STATUS ( *QUERY_CREDENTIALS_ATTRIBUTES_FN_W)(PCredHandle, unsigned int, void *);
struct STORAGE_BREAK_RESERVATION_REQUEST {ULONG Length;UCHAR _unused;UCHAR PathId;UCHAR TargetId;UCHAR Lun;};
typedef USHORT  USB_BUSIFFN_GET_DEBUG_PORT_NUMBER(PVOID BusContext);
struct _ACPI_ENUM_CHILDREN_OUTPUT_BUFFER {ULONG Signature;ULONG NumberOfChildren;ACPI_ENUM_CHILD Children[1];};
struct _DOT11_HOPPING_PATTERN_ENTRY_LIST {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_HOPPING_PATTERN_ENTRY dot11HoppingPatternEntry[1];};
struct _DOT11_WFD_GROUP_START_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_WFD_CHANNEL AdvertisedOperatingChannel;};
struct _DXGKARG_SETVIDPNSOURCEVISIBILITY {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;BOOLEAN Visible;};
struct _DXGKMDT_OPM_STANDARD_INFORMATION {DXGKMDT_OPM_RANDOM_NUMBER rnRandomNumber;ULONG ulStatusFlags;ULONG ulInformation;ULONG ulReserved;ULONG ulReserved2;};
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY {ULONG BeginAddress;union _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY___45A98C1F8CA82C31F92D6F2DB941F5BF u;};
struct _INTERNAL_I8042_START_INFORMATION {ULONG Size;PKINTERRUPT InterruptObject;ULONG Reserved[8];};
struct _IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH {ULONG nMaxBytesPerFrameRequested;ULONG fulSpeed;HANDLE hBandwidth;ULONG BytesPerFrameAvailable;ULONG SpeedSelected;ULONG nBandwidthUnitsRequired;};
struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT {ULONG Flags;ULONG NumberOfClusters;LARGE_INTEGER Cluster[1];};
struct _MRX_CALLDOWN_COMPLETION_CONTEXT_ {LONG WaitCount;KEVENT Event;};
struct _MSNdis_ReceiveFilterCapabilities {MSNdis_ObjectHeader Header;ULONG Flags;ULONG EnabledFilterTypes;ULONG EnabledQueueTypes;ULONG NumQueues;ULONG SupportedQueueProperties;ULONG SupportedFilterTests;ULONG SupportedHeaders;ULONG SupportedMacHeaderFields;ULONG MaxMacHeaderFilters;ULONG MaxQueueGroups;ULONG MaxQueuesPerQueueGroup;ULONG MinLookaheadSplitSize;ULONG MaxLookaheadSplitSize;};
struct _MSNdis_StatusDot11Disassociation {ULONG NumberElements;UCHAR NdisStatusDot11DisassociationIndication[1];};
struct _MSNdis_StatusDot11PhyStateChange {ULONG NumberElements;UCHAR NdisStatusDot11PhyStateChangeIndication[1];};
struct _MSNdis_StatusDot11TkipmicFailure {ULONG NumberElements;UCHAR NdisStatusDot11TkipmicFailureIndication[1];};
struct _MSiSCSI_InitiatorLoginStatistics {ULONGLONG UniqueAdapterId;ULONG LoginAcceptRsps;ULONG LoginOtherFailRsps;ULONG LoginRedirectRsps;ULONG LoginAuthFailRsps;ULONG LoginAuthenticateFails;ULONG LoginNegotiateFails;ULONG LogoutNormals;ULONG LogoutOtherCodes;ULONG LoginFailures;};
struct _NDIS_802_11_AUTHENTICATION_EVENT {NDIS_802_11_STATUS_INDICATION Status;NDIS_802_11_AUTHENTICATION_REQUEST Request[1];};
struct _NDIS_802_11_PMKID_CANDIDATE_LIST {ULONG Version;ULONG NumCandidates;PMKID_CANDIDATE CandidateList[1];};
struct _NDIS_RECEIVE_FILTER_CAPABILITIES {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG EnabledFilterTypes;ULONG EnabledQueueTypes;ULONG NumQueues;ULONG SupportedQueueProperties;ULONG SupportedFilterTests;ULONG SupportedHeaders;ULONG SupportedMacHeaderFields;ULONG MaxMacHeaderFilters;ULONG MaxQueueGroups;ULONG MaxQueuesPerQueueGroup;ULONG MinLookaheadSplitSize;ULONG MaxLookaheadSplitSize;};
struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD {struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD___85AE8A1C7DB2D3F8E7B70522EFF4A40E IPv4Transmit;struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD___85AE8A1C7DB2D3F8E7B70522EFF4A40E IPv4Receive;struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD___A5EADBA4742C6114AFE67D153539770B IPv6Transmit;struct _NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD___A5EADBA4742C6114AFE67D153539770B IPv6Receive;};
struct _NDIS_WWAN_DEVICE_SERVICE_COMMAND {NDIS_OBJECT_HEADER Header;WWAN_DEVICE_SERVICE_COMMAND Command;};
struct _NETWORK_APP_INSTANCE_ECP_CONTEXT {USHORT Size;USHORT Reserved;GUID AppInstanceID;};
union _PCI_EXPRESS_LINK_STATUS_REGISTER {struct _PCI_EXPRESS_LINK_STATUS_REGISTER___D69A6337DE42BA55564AE370D64BFAE3 s;USHORT AsUSHORT;};
union _PCI_EXPRESS_ROOT_STATUS_REGISTER {struct _PCI_EXPRESS_ROOT_STATUS_REGISTER___4F434F80AEC764354DD51998F5874A53 s;ULONG AsULONG;};
union _PCI_EXPRESS_SEC_AER_CAPABILITIES {struct _PCI_EXPRESS_SEC_AER_CAPABILITIES___CD69AB3F7AE1D8CF5FBE5824A8E3B866 s;ULONG AsULONG;};
union _PCI_EXPRESS_SLOT_STATUS_REGISTER {struct _PCI_EXPRESS_SLOT_STATUS_REGISTER___E4062700D507CBE17820A0562DC02DD8 s;USHORT AsUSHORT;};
struct _PMI_METERED_HARDWARE_INFORMATION {ULONG MeteredHardwareCount;WCHAR MeteredHardware[1];};
struct _PROCESS_DEVICEMAP_INFORMATION_EX {union _PROCESS_DEVICEMAP_INFORMATION_EX___86419AC45B298988A1DCFB17690E41F7 u;ULONG Flags;};
struct _REG_DELETE_VALUE_KEY_INFORMATION {PVOID Object;PUNICODE_STRING ValueName;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _SCSI_SUPPORTED_CONTROL_TYPE_LIST {ULONG MaxControlType;BOOLEAN SupportedTypeList[];};
struct _STORAGE_ALLOCATE_BC_STREAM_INPUT {ULONG Version;ULONG RequestsPerPeriod;ULONG Period;BOOLEAN RetryFailures;BOOLEAN Discardable;BOOLEAN Reserved1[2];ULONG AccessType;ULONG AccessMode;};
struct _STORAGE_GET_BC_PROPERTIES_OUTPUT {ULONG MaximumRequestsPerPeriod;ULONG MinimumPeriod;ULONGLONG MaximumRequestSize;ULONG EstimatedTimePerRequest;ULONG NumOutStandingRequests;ULONGLONG RequestSize;};
struct _STOR_POFX_POWER_REQUIRED_CONTEXT {STOR_POWER_CONTROL_HEADER Header;BOOLEAN PowerRequired;};
struct _TA_ADDRESS_NETBIOS_UNICODE_EX_XP {LONG TAAddressCount;struct _TA_ADDRESS_NETBIOS_UNICODE_EX_XP___AddrNetbiosWCharEx Address[1];};
union _USB_HUB_30_PORT_REMOTE_WAKE_MASK {UCHAR AsUchar8;_USB_HUB_30_PORT_REMOTE_WAKE_MASK___F4148C9CC9B661C03E82E006C8766DE5 __anonymous0;};
struct tagKS_DATAFORMAT_VIDEOINFOHEADER2 {KSDATAFORMAT DataFormat;KS_VIDEOINFOHEADER2 VideoInfoHeader2;};
struct DOT11_MPDU_MAX_LENGTH_INDICATION {NDIS_OBJECT_HEADER Header;ULONG uPhyId;ULONG uMPDUMaxLength;};
typedef SECURITY_STATUS ( *ENUMERATE_SECURITY_PACKAGES_FN_W)(unsigned int *, PSecPkgInfoW *);
typedef void FILTER_CANCEL_DIRECT_OID_REQUEST(NDIS_HANDLE FilterModuleContext, PVOID RequestId);
typedef void MINIPORT_DEVICE_PNP_EVENT_NOTIFY(NDIS_HANDLE MiniportAdapterContext, PNET_DEVICE_PNP_EVENT NetDevicePnPEvent);
typedef void (*NDK_FN_SRQ_NOTIFICATION_CALLBACK)(PVOID SrqNotificationContext, NTSTATUS SrqStatus);
typedef void ( *PFLTOPLOCK_WAIT_COMPLETE_ROUTINE)(PFLT_CALLBACK_DATA CallbackData, PVOID Context);
typedef void ( *PFLT_CALLBACK_DATA_QUEUE_RELEASE)(PFLT_CALLBACK_DATA_QUEUE Cbdq, KIRQL Irql);
typedef void ( *PFLT_COMPLETED_ASYNC_IO_CALLBACK)(PFLT_CALLBACK_DATA CallbackData, PFLT_CONTEXT Context);
struct _ACPI_ENUM_CHILDREN_INPUT_BUFFER {ULONG Signature;ULONG Flags;ULONG NameLength;CHAR Name[1];};
struct _APPLICATIONLAUNCH_SETTING_VALUE {LARGE_INTEGER ActivationTime;ULONG Flags;ULONG ButtonInstanceID;};
struct _CHANNEL_CONFIG_RESULTS_ENHANCED {CHANNEL_CONFIG_PARAMETERS_ENHANCED Params;ULONG ExtraOptionsBufferSize;};
struct _CO_AF_TAPI_MAKE_CALL_PARAMETERS {ULONG ulLineID;ULONG ulAddressID;ULONG ulFlags;NDIS_VAR_DATA_DESC DestAddress;NDIS_VAR_DATA_DESC LineCallParams;};
struct _CSRT_RESOURCE_DESCRIPTOR_HEADER {UINT32 Length;UINT16 Type;UINT16 Subtype;UINT32 Uid;};
struct _DOT11_CAN_SUSTAIN_AP_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG ulReason;};
struct _DOT11_REG_DOMAINS_SUPPORT_VALUE {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_REG_DOMAIN_VALUE dot11RegDomainValue[1];};
struct _DOT11_WFD_DEVICE_LISTEN_CHANNEL {NDIS_OBJECT_HEADER Header;UCHAR ChannelNumber;};
struct _DSM_QuerySupportedLBPolicies_V2 {ULONG SupportedLBPoliciesCount;ULONG Reserved;DSM_Load_Balance_Policy_V2 Supported_LB_Policies[1];};
struct _FILE_MAILSLOT_QUERY_INFORMATION {ULONG MaximumMessageSize;ULONG MailslotQuota;ULONG NextMessageSize;ULONG MessagesAvailable;LARGE_INTEGER ReadTimeout;};
struct _FILTER_VOLUME_BASIC_INFORMATION {USHORT FilterVolumeNameLength;WCHAR FilterVolumeName[1];};
struct _FSRTL_MUP_PROVIDER_INFO_LEVEL_2 {ULONG32 ProviderId;UNICODE_STRING ProviderName;};
struct _GetDiscoveredPortAttributes_OUT {ULONG HBAStatus;MSFC_HBAPortAttributesResults PortAttributes;};
struct _IMAGE_RESOURCE_DIRECTORY_STRING {USHORT Length;CHAR NameString[1];};
union _IPV6_ROUTER_ADVERTISEMENT_FLAGS {_IPV6_ROUTER_ADVERTISEMENT_FLAGS___0A9F88BE9FBAC81DEAEFC8E114D245E9 __anonymous0;UINT8 Value;};
struct _IRB_REQ_GET_SPEED_TOPOLOGY_MAPS {PSPEED_MAP SpeedMap;PTOPOLOGY_MAP TopologyMap;};
struct _LOADER_PARTITION_INFORMATION_EX {ULONG PartitionStyle;ULONG PartitionNumber;_LOADER_PARTITION_INFORMATION_EX___86D3AC22214D8559AD53D7C151554AB3 __anonymous0;ULONG Flags;};
struct _MSNdis_StatusPacketFilterChange {ULONG NumberElements;UCHAR NdisPacketFilterStatusIndication[1];};
struct _MSNdis_WmiTcpLargeSendOffloadV2 {MSNdis_WmiTcpLargeSendOffloadV2_IPv4 WmiIPv4;MSNdis_WmiTcpLargeSendOffloadV2_IPv6 WmiIPv6;};
struct _NDIS_802_11_NON_BCAST_SSID_LIST {ULONG NumberOfItems;NDIS_802_11_SSID Non_Bcast_Ssid[1];};
struct _NDIS_RECEIVE_SCALE_CAPABILITIES {NDIS_OBJECT_HEADER Header;ULONG CapabilitiesFlags;ULONG NumberOfInterruptMessages;ULONG NumberOfReceiveQueues;};
struct _NDIS_WMI_PM_ACTIVE_CAPABILITIES {NDIS_OBJECT_HEADER Header;NDIS_PM_CAPABILITY_STATE WakeOnPattern;NDIS_PM_CAPABILITY_STATE WakeOnMagicPacket;NDIS_PM_CAPABILITY_STATE DeviceSleepOnDisconnect;NDIS_PM_CAPABILITY_STATE PMARPOffload;NDIS_PM_CAPABILITY_STATE PMNSOffload;NDIS_PM_CAPABILITY_STATE PMWiFiRekeyOffload;};
struct _NDIS_WMI_TCP_CONNECTION_OFFLOAD {NDIS_OBJECT_HEADER Header;ULONG Encapsulation;ULONG SupportIPv4;ULONG SupportIPv6;ULONG SupportIPv6ExtensionHeaders;ULONG SupportSack;ULONG TcpConnectionOffloadCapacity;ULONG Flags;};
struct _NDIS_WWAN_GET_VISIBLE_PROVIDERS {NDIS_OBJECT_HEADER Header;WWAN_GET_VISIBLE_PROVIDERS VisibleProviders;};
struct _NDIS_WWAN_SET_SIGNAL_INDICATION {NDIS_OBJECT_HEADER Header;WWAN_SET_SIGNAL_INDICATION SignalIndication;};
struct _NDIS_WWAN_SET_SMS_CONFIGURATION {NDIS_OBJECT_HEADER Header;WWAN_SET_SMS_CONFIGURATION SetSmsConfiguration;};
struct _PUBLIC_OBJECT_BASIC_INFORMATION {ULONG Attributes;ACCESS_MASK GrantedAccess;ULONG HandleCount;ULONG PointerCount;ULONG Reserved[10];};
struct _USB_DEVICE_QUALIFIER_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT bcdUSB;UCHAR bDeviceClass;UCHAR bDeviceSubClass;UCHAR bDeviceProtocol;UCHAR bMaxPacketSize0;UCHAR bNumConfigurations;UCHAR bReserved;};
struct _VIDEO_CHILD_STATE_CONFIGURATION {ULONG Count;VIDEO_CHILD_STATE ChildStateArray[1];};
struct _VIDEO_QUERY_PERFORMANCE_COUNTER {ULONG BufferSize;PVIDEO_PERFORMANCE_COUNTER Buffer;};
struct _WmiMonitorListedFrequencyRanges {USHORT NumOfMonitorFreqRanges;FrequencyRangeDescriptor MonitorFreqRanges[1];};
struct __PUBLIC_OBJECT_TYPE_INFORMATION {UNICODE_STRING TypeName;ULONG Reserved[22];};
struct tagKS_DATAFORMAT_VIDEOINFOHEADER {KSDATAFORMAT DataFormat;KS_VIDEOINFOHEADER VideoInfoHeader;};
typedef void ( *DXGKCB_COMPLETEFSTATETRANSITION)(IN_CONST_HANDLE hAdapter, UINT ComponentIndex);
typedef NTSTATUS ( *DXGKCB_DESTROYCONTEXTALLOCATION)(IN_CONST_HANDLE hAdapter, IN_CONST_HANDLE hAllocation);
typedef SECURITY_STATUS ( *IMPERSONATE_SECURITY_CONTEXT_FN)(PCtxtHandle);
typedef void (*NDK_FN_CQ_NOTIFICATION_CALLBACK)(PVOID CqNotificationContext, NTSTATUS CqStatus);
typedef UINT32 (*NDK_FN_GET_REMOTE_TOKEN_FROM_MR)(NDK_MR *pNdkMr);
typedef UINT32 (*NDK_FN_GET_REMOTE_TOKEN_FROM_MW)(NDK_MW *pNdkMw);
typedef PMDL (*NET_BUFFER_ALLOCATE_MDL_HANDLER)(PULONG BufferSize);
typedef void (*PCLASS_SCAN_FOR_SPECIAL_HANDLER)(PFUNCTIONAL_DEVICE_EXTENSION FdoExtension, ULONG_PTR Data);
typedef void ( *PFLT_INSTANCE_TEARDOWN_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, FLT_INSTANCE_TEARDOWN_FLAGS Reason);
typedef ULONG (*PPARALLEL_QUERY_WAITERS_ROUTINE)(PVOID QueryAllocsContext);
typedef NTSTATUS (*PREPLACE_MIRROR_PLATFORM_MEMORY)(PVOID Context);
typedef void PROTOCOL_CL_CLOSE_CALL_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolVcContext, NDIS_HANDLE ProtocolPartyContext);
typedef void PROTOCOL_CL_DROP_PARTY_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolPartyContext);
typedef void PROTOCOL_CL_OPEN_AF_COMPLETE_EX(NDIS_HANDLE ProtocolAfContext, NDIS_HANDLE NdisAfHandle, NDIS_STATUS Status);
typedef SECURITY_STATUS ( *QUERY_SECURITY_CONTEXT_TOKEN_FN)(PCtxtHandle, void **);
typedef SECURITY_STATUS ( *SET_CREDENTIALS_ATTRIBUTES_FN_W)(PCredHandle, unsigned int, void *, unsigned int);
struct _BDA_CAS_CHECK_ENTITLEMENTTOKEN {PBDARESULT lResult;ULONG ulDescrambleStatus;};
struct _CLASSPNP_SCAN_FOR_SPECIAL_INFO {PCHAR VendorId;PCHAR ProductId;PCHAR ProductRevision;ULONG_PTR Data;};
struct _DEVICE_SEEK_PENALTY_DESCRIPTOR {ULONG Version;ULONG Size;BOOLEAN IncursSeekPenalty;};
struct _DOT11_AVAILABLE_FREQUENCY_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;ULONG uFrequencyValue[1];};
struct _DOT11_MANUFACTURING_TEST_SLEEP {ULONG uSleepTime;PVOID pvContext;};
struct _DOT11_MD_CAPABILITY_ENTRY_LIST {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_MULTI_DOMAIN_CAPABILITY_ENTRY dot11MDCapabilityEntry[1];};
struct _DSM_NOTIFICATION_REQUEST_BLOCK {ULONG Size;ULONG Version;ULONG NotifyFlags;ULONG DataSetProfile;ULONG Reserved[3];ULONG DataSetRangesCount;MP_DEVICE_DATA_SET_RANGE DataSetRanges[1];};
struct _FILE_REPARSE_POINT_INFORMATION {LONGLONG FileReference;ULONG Tag;};
struct _FILE_STANDARD_LINK_INFORMATION {ULONG NumberOfAccessibleLinks;ULONG TotalNumberOfLinks;BOOLEAN DeletePending;BOOLEAN Directory;};
struct _IEEE1394_SCATTER_GATHER_HEADER {USHORT HeaderLength;USHORT DataLength;UCHAR HeaderData;};
struct _IRB_REQ_ISOCH_ALLOCATE_CHANNEL {ULONG nRequestedChannel;ULONG Channel;LARGE_INTEGER ChannelsAvailable;};
struct _KEYBOARD_INDICATOR_TRANSLATION {USHORT NumberOfIndicatorKeys;INDICATOR_LIST IndicatorList[1];};
struct _KSM_BDA_USERACTIVITY_USEREASON {KSMETHOD Method;ULONG ulUseReason;};
struct _MSNdis_80211_ConfigurationInfo {ULONG ConfigLength;ULONG BeaconPeriod;ULONG ATIMWindow;ULONG DSConfig;MSNdis_80211_ConfigurationFH FHConfig;};
struct _MSNdis_StatusDot11RoamingStart {ULONG NumberElements;UCHAR NdisStatusDot11RoamingStartIndication[1];};
struct _MSNdis_StatusOperationalStatus {ULONG NumberElements;UCHAR NdisOperationalStatusStatusIndication[1];};
struct _MSNdis_StatusTaskOffloadChange {ULONG NumberElements;UCHAR TaskOffloadCapabilities[1];};
struct _MSNdis_WmiHDSplitCurrentConfig {MSNdis_ObjectHeader Header;ULONG HardwareCapabilities;ULONG CurrentCapabilities;ULONG HDSplitFlags;ULONG HDSplitCombineFlags;ULONG BackfillSize;ULONG MaxHeaderSize;};
struct _MSNdis_WmiTcpConnectionOffload {MSNdis_ObjectHeader Header;ULONG Encapsulation;ULONG SupportIp4;ULONG SupportIp6;ULONG SupportIp6ExtensionHeaders;ULONG SupportSack;ULONG TcpConnectionOffloadCapacity;ULONG Flags;};
struct _MSNdis_WmiTcpIpChecksumOffload {MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive IPv4Transmit;MSNdis_WmiTcpIpChecksumOffload_IPv4TransmitReceive IPv4Receive;MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive IPv6Transmit;MSNdis_WmiTcpIpChecksumOffload_IPv6TransmitReceive IPv6Receive;};
struct _MSV1_0_LM20_CHALLENGE_RESPONSE {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;UCHAR ChallengeToClient[8];};
struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL {ULONG Version;ULONG Flags;UCHAR LmPassword[16];UCHAR NtPassword[16];};
struct _NDIS_MINIPORT_PAUSE_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG PauseReason;};
struct _NDIS_PROTOCOL_PAUSE_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG PauseReason;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2 {struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2___F6900041418FEA52CE0185D09FCBBC16 IPv4;struct _NDIS_TCP_LARGE_SEND_OFFLOAD_V2___7FB4AAE69F10985DCBD38DFCF9049415 IPv6;};
struct _NDIS_WWAN_DEVICE_SERVICE_EVENT {NDIS_OBJECT_HEADER Header;WWAN_DEVICE_SERVICE_EVENT Event;};
union _PCI_EXPRESS_ROOT_ERROR_COMMAND {struct _PCI_EXPRESS_ROOT_ERROR_COMMAND___C9FDF6600CA518887781372DF821BFD8 s;ULONG AsULONG;};
union _PCI_EXPRESS_TPH_ST_TABLE_ENTRY {struct _PCI_EXPRESS_TPH_ST_TABLE_ENTRY___BF5EA3584C0C6633909A3F73F70152F1 s;USHORT AsUSHORT;};
struct _PHYSICAL_COUNTER_RESOURCE_LIST {ULONG Count;PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR Descriptors[1];};
struct _REG_POST_OPERATION_INFORMATION {PVOID Object;NTSTATUS Status;PVOID PreInformation;NTSTATUS ReturnStatus;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT {PLIST_ENTRY ChainHead;PLIST_ENTRY PrevLinkage;ULONG_PTR Signature;};
struct _SCSI_PASS_THROUGH_WITH_BUFFERS {SCSI_PASS_THROUGH ScsiPassThrough;UCHAR SenseInfoBuffer[32];UCHAR DataBuffer[512];};
struct _STORAGE_FAILURE_PREDICT_STATUS {ULONG Reason;BOOLEAN PredictFailure;};
struct _STOR_POFX_COMPONENT_IDLE_STATE {ULONG Version;ULONG Size;ULONGLONG TransitionLatency;ULONGLONG ResidencyRequirement;ULONG NominalPower;};
struct _USB_INTERFACE_POWER_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bmCapabilitiesFlags;UCHAR bBusPowerSavingD1;UCHAR bSelfPowerSavingD1;UCHAR bBusPowerSavingD2;UCHAR bSelfPowerSavingD2;UCHAR bBusPowerSavingD3;UCHAR bSelfPowerSavingD3;USHORT TransitionTimeFromD1;USHORT TransitionTimeFromD2;USHORT TransitionTimeFromD3;};
struct _VBICAP_PROPERTIES_PROTECTION_S {KSPROPERTY Property;ULONG StreamIndex;ULONG Status;};
struct _VIDEO_SHARE_MEMORY_INFORMATION {ULONG SharedViewOffset;ULONG SharedViewSize;PVOID VirtualAddress;};
union _WHEA_ERROR_RECORD_HEADER_FLAGS {struct _WHEA_ERROR_RECORD_HEADER_FLAGS___437784891AA9E873707BAF02F9C8B216 s;ULONG AsULONG;};
union _WHEA_GENERIC_ERROR_BLOCKSTATUS {struct _WHEA_GENERIC_ERROR_BLOCKSTATUS___8E748FF62B0DE0015AF471E0F7E6304E s;ULONG AsULONG;};
union _WHEA_PCIEXPRESS_COMMAND_STATUS {struct _WHEA_PCIEXPRESS_COMMAND_STATUS___3F732B5E21BA338017FAD933910A3B51 s;ULONG AsULONG;};
struct _WWAN_SUPPORTED_DEVICE_SERVICES {ULONG uMaxCommandDataSize;ULONG uMaxSessionDataSize;ULONG uMaxSessionCount;WWAN_LIST_HEADER ListHeader;};
struct creative_fastspeech10format_tag {WAVEFORMATEX wfx;WORD wRevision;};
typedef NTSTATUS (*pKdReleasePciDeviceForDebugging)(PDEBUG_DEVICE_DESCRIPTOR PciDevice);
struct tagKS_DATAFORMAT_MPEGVIDEOINFO2 {KSDATAFORMAT DataFormat;KS_MPEGVIDEOINFO2 MpegVideoInfoHeader2;};
typedef NTSTATUS ( *DXGKCB_CREATECONTEXTALLOCATION)(INOUT_PDXGKARGCB_CREATECONTEXTALLOCATION);
typedef void ( *DXGKCB_SETPOWERCOMPONENTACTIVE)(IN_CONST_HANDLE hAdapter, UINT ComponentIndex);
typedef void FILTER_DEVICE_PNP_EVENT_NOTIFY(NDIS_HANDLE FilterModuleContext, PNET_DEVICE_PNP_EVENT NetDevicePnPEvent);
typedef BOOLEAN MINIPORT_SYNCHRONIZE_INTERRUPT(NDIS_HANDLE SynchronizeContext);
typedef UINT32 (*NDK_FN_GET_LOCAL_TOKEN_FROM_MR)(NDK_MR *pNdkMr);
typedef void (*PCREATE_PROCESS_NOTIFY_ROUTINE)(HANDLE ParentId, HANDLE ProcessId, BOOLEAN Create);
typedef void (*PDRIVER_CMC_EXCEPTION_CALLBACK)(PVOID Context, PCMC_EXCEPTION CmcLog);
typedef void (*PDRIVER_CPE_EXCEPTION_CALLBACK)(PVOID Context, PCPE_EXCEPTION CmcLog);
typedef ULONG_PTR (*PDRIVER_VERIFIER_THUNK_ROUTINE)(PVOID Context);
typedef BOOLEAN (*PPARALLEL_TRY_ALLOCATE_ROUTINE)(PVOID TryAllocateContext);
typedef void PROTOCOL_CO_AF_REGISTER_NOTIFY(NDIS_HANDLE ProtocolBindingContext, PCO_ADDRESS_FAMILY AddressFamily);
typedef NTSTATUS (*PSDBUS_ACKNOWLEDGE_INT_ROUTINE)(PVOID Context);
typedef void  USB_BUSIFFN_SET_DEVHANDLE_DATA(PVOID BusContext, PVOID DeviceHandle, PDEVICE_OBJECT UsbDevicePdo);
typedef NTSTATUS  USB_BUSIFFN_WAIT_ASYNC_POWERUP(PVOID BusContext);
union _AER_ENDPOINT_DESCRIPTOR_FLAGS {struct _AER_ENDPOINT_DESCRIPTOR_FLAGS___644EF056A6BCD34BEB130C59ECDD245F s;USHORT AsUSHORT;};
union _AER_ROOTPORT_DESCRIPTOR_FLAGS {struct _AER_ROOTPORT_DESCRIPTOR_FLAGS___EFF43A9EAE4B7B62E532E338439EC9F9 s;USHORT AsUSHORT;};
struct _CLFS_PHYSICAL_LSN_INFORMATION {UCHAR StreamIdentifier;CLFS_LSN VirtualLsn;CLFS_LSN PhysicalLsn;};
struct _DXGKARG_RELEASESWIZZLINGRANGE {HANDLE hAllocation;UINT PrivateDriverData;UINT RangeId;};
struct _FILE_FS_FULL_SIZE_INFORMATION {LARGE_INTEGER TotalAllocationUnits;LARGE_INTEGER CallerAvailableAllocationUnits;LARGE_INTEGER ActualAvailableAllocationUnits;ULONG SectorsPerAllocationUnit;ULONG BytesPerSector;};
struct _FILE_NETWORK_OPEN_INFORMATION {LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER AllocationSize;LARGE_INTEGER EndOfFile;ULONG FileAttributes;};
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER {HANDLE EventHandle;ULONG KeyValue;};
struct _FILE_SFIO_RESERVE_INFORMATION {ULONG RequestsPerPeriod;ULONG Period;BOOLEAN RetryFailures;BOOLEAN Discardable;ULONG RequestSize;ULONG NumOutstandingRequests;};
struct _FSVIDEO_REVERSE_MOUSE_POINTER {FSCNTL_SCREEN_INFO Screen;ULONG dwType;};
struct _FSVIDEO_WRITE_TO_FRAME_BUFFER {PCHAR_IMAGE_INFO SrcBuffer;FSCNTL_SCREEN_INFO DestScreen;};
struct _HWPROFILE_CHANGE_NOTIFICATION {USHORT Version;USHORT Size;GUID Event;};
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {ULONG TimeDateStamp;USHORT OffsetModuleName;USHORT NumberOfModuleForwarderRefs;};
struct _IO_CREATE_STREAM_FILE_OPTIONS {USHORT Size;USHORT Flags;PDEVICE_OBJECT TargetDeviceObject;};
struct _IO_SESSION_STATE_NOTIFICATION {ULONG Size;ULONG Flags;PVOID IoObject;ULONG EventMask;PVOID Context;};
struct _IRB_REQ_ISOCH_QUERY_RESOURCES {ULONG fulSpeed;ULONG BytesPerFrameAvailable;LARGE_INTEGER ChannelsAvailable;};
struct _KEY_VALUE_PARTIAL_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG DataLength;UCHAR Data[1];};
struct _KernelThermalConstraintChange {ULONG ThermalConstraint;ULONGLONG Processors;};
struct _MPIO_CONTROLLER_CONFIGURATION {ULONG NumberControllers;MPIO_CONTROLLER_INFO ControllerInfo[1];};
struct _MSFC_HBAPortAttributesResults {UCHAR NodeWWN[8];UCHAR PortWWN[8];ULONG PortFcId;ULONG PortType;ULONG PortState;ULONG PortSupportedClassofService;UCHAR PortSupportedFc4Types[32];UCHAR PortActiveFc4Types[32];ULONG PortSupportedSpeed;ULONG PortSpeed;ULONG PortMaxFrameSize;UCHAR FabricName[8];ULONG NumberofDiscoveredPorts;};
struct _MSNdis_FddiShortMulticastList {ULONG NumberElements;MSNdis_NetworkShortAddress NdisMulticastList[1];};
struct _MSNdis_StatusDot11LinkQuality {ULONG NumberElements;UCHAR NdisStatusDot11LinkQualityIndication[1];};
struct _MSNdis_StatusDot11ScanConfirm {ULONG NumberElements;UCHAR NdisStatusDot11ScanConfirmIndication[1];};
struct _MSiSCSI_LUNMappingInformation {ULONGLONG UniqueAdapterId;ULONGLONG UniqueSessionId;ULONG OSBus;ULONG OSTarget;ULONG OSLUN;};
struct _NDIS_802_11_NETWORK_TYPE_LIST {ULONG NumberOfItems;NDIS_802_11_NETWORK_TYPE NetworkType[1];};
struct _NDIS_RECEIVE_QUEUE_INFO_ARRAY {NDIS_OBJECT_HEADER Header;ULONG FirstElementOffset;ULONG NumElements;ULONG ElementSize;};
struct _NDIS_TAPI_GET_CALL_ADDRESS_ID {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulAddressID;};
struct _NDIS_TAPI_PROVIDER_INITIALIZE {ULONG ulRequestID;ULONG ulDeviceIDBase;ULONG ulNumLineDevs;ULONG_PTR ulProviderID;};
struct _NDIS_TAPI_SET_STATUS_MESSAGES {ULONG ulRequestID;HDRV_LINE hdLine;ULONG ulLineStates;ULONG ulAddressStates;};
union _PCI_EXPRESS_ROOT_ERROR_STATUS {struct _PCI_EXPRESS_ROOT_ERROR_STATUS___63031A8666915B2575DB899C0AF35723 s;ULONG AsULONG;};
struct _PNP_REPLACE_PROCESSOR_LIST_V1 {KAFFINITY AffinityMask;ULONG AllocatedCount;ULONG Count;ULONG ApicIds[1];};
struct _PROCESS_MITIGATION_DEP_POLICY {_PROCESS_MITIGATION_DEP_POLICY___F116839C509786518B7C72B8B76ECE10 __anonymous0;BOOLEAN Permanent;};
struct _PURGE_SYNCHRONIZATION_CONTEXT {LIST_ENTRY ContextsAwaitingPurgeCompletion;BOOLEAN PurgeInProgress;};
struct _REQ_QUERY_SECURITY_DESCRIPTOR {USHORT Fid;USHORT Reserved;ULONG SecurityInformation;};
struct _STORAGE_FAILURE_PREDICT_EVENT {ULONG Length;UCHAR VendorSpecific[1];};
struct _TA_APPLETALK_ADDR___AddrAtalk {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_APPLETALK Address[1];};
struct _TDI_REQUEST_KERNEL_QUERY_INFO {LONG QueryType;PTDI_CONNECTION_INFORMATION RequestConnectionInformation;};
struct _TRANSACTION_BASIC_INFORMATION {GUID TransactionId;ULONG State;ULONG Outcome;};
struct _WmiSetTcpOffloadParameters_IN {MSNdis_WmiMethodHeader MethodHeader;MSNdis_TcpOffloadParameters TcpOffloadParameters;};
struct creative_fastspeech8format_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct mediaspace_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct tagKS_DATAFORMAT_H264VIDEOINFO {KSDATAFORMAT DataFormat;KS_H264VIDEOINFO H264VideoInfoHeader;};
struct tagKS_DATAFORMAT_VBIINFOHEADER {KSDATAFORMAT DataFormat;KS_VBIINFOHEADER VBIInfoHeader;};
struct DOT11_DATA_RATE_MAPPING_ENTRY {UCHAR ucDataRateIndex;UCHAR ucDataRateFlag;USHORT usDataRateValue;};
struct DOT11_LINK_QUALITY_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG uLinkQualityListSize;ULONG uLinkQualityListOffset;};
typedef NTSTATUS FAST_IO_ACQUIRE_FOR_MOD_WRITE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER EndingOffset, struct _ERESOURCE **ResourceToRelease, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN HW_PASSIVE_INITIALIZE_ROUTINE(PVOID DeviceExtension);
typedef void (*NDK_FN_CONNECT_EVENT_CALLBACK)(PVOID ConnectEventContext, NDK_CONNECTOR *pNdkConnector);
typedef void (*NDK_FN_CONTROL_CONNECT_EVENTS)(NDK_LISTENER *pNdkListener, BOOLEAN Pause);
typedef NTSTATUS  NPI_CLIENT_DETACH_PROVIDER_FN(PVOID ClientBindingContext);
typedef NTSTATUS  NPI_PROVIDER_DETACH_CLIENT_FN(PVOID ProviderBindingContext);
typedef void (*PCREATE_THREAD_NOTIFY_ROUTINE)(HANDLE ProcessId, HANDLE ThreadId, BOOLEAN Create);
typedef void ( *PFLT_CONTEXT_CLEANUP_CALLBACK)(PFLT_CONTEXT Context, FLT_CONTEXT_TYPE ContextType);
typedef void ( *PFLT_GENERIC_WORKITEM_ROUTINE)(PFLT_GENERIC_WORKITEM FltWorkItem, PVOID FltObject, PVOID Context);
typedef void (*PFSRTL_STACK_OVERFLOW_ROUTINE)(PVOID Context, PKEVENT Event);
typedef BOOLEAN (*PHAL_RESET_DISPLAY_PARAMETERS)(ULONG Columns, ULONG Rows);
typedef BOOLEAN (*PMINIPORT_SYNCHRONIZE_ROUTINE)(PVOID Context);
typedef void (*POPLOCK_WAIT_COMPLETE_ROUTINE)(PVOID Context, PIRP Irp);
typedef void PROTOCOL_CL_CLOSE_AF_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolAfContext);
typedef SECURITY_STATUS ( *QUERY_CONTEXT_ATTRIBUTES_FN_W)(PCtxtHandle, unsigned int, void *);
typedef PVOID  RTL_REALLOCATE_STRING_ROUTINE(SIZE_T NumberOfBytes, PVOID Buffer);
typedef void  USB_BUSIFFN_SET_BUS_WAKE_MODE(PVOID BusContext, ULONG Mode);
struct _ACPI_DEBUGGING_DEVICE_IN_USE {ULONG NameSpacePathLength;WCHAR NameSpacePath[1];};
struct _BDA_WMDRMTUNER_PIDPROTECTION {PBDARESULT lResult;GUID uuidKeyID;};
struct _CDROM_TOC_CD_TEXT_DATA_BLOCK {UCHAR PackType;unsigned char TrackNumber : 7;unsigned char ExtensionFlag : 1;UCHAR SequenceNumber;unsigned char CharacterPosition : 4;unsigned char BlockNumber : 3;unsigned char Unicode : 1;_CDROM_TOC_CD_TEXT_DATA_BLOCK___467EDB5D48A0B01833F2860D1359C73C __anonymous0;UCHAR CRC[2];};
struct _D3DKMDT_VIDEO_PRESENT_SOURCE {D3DDDI_VIDEO_PRESENT_SOURCE_ID Id;DWORD dwReserved;};
struct _DOT11_AVAILABLE_CHANNEL_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;ULONG uChannelNumber[1];};
struct _DOT11_DIVERSITY_SELECTION_RX {ULONG uAntennaListIndex;BOOLEAN bDiversitySelectionRX;};
struct _DOT11_NIC_SPECIFIC_EXTENSION {ULONG uBufferLength;ULONG uTotalBufferLength;UCHAR ucBuffer[1];};
struct _DOT11_SEND_EXTENSION_INFO_V2 {unsigned char ucQoSPriority : 4;unsigned char ucAckPolicy : 4;USHORT usExtendedTXDataRatesOffset;UCHAR ucNumOfExtendedTXDataRates;UCHAR ucBuffer[1];};
struct _DOT11_SUPPORTED_ANTENNA_LIST {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_SUPPORTED_ANTENNA dot11SupportedAntenna[1];};
struct _DSM_QuerySupportedLBPolicies {ULONG SupportedLBPoliciesCount;ULONG Reserved;DSM_Load_Balance_Policy Supported_LB_Policies[1];};
struct _DXGKARGCB_ENUMHANDLECHILDREN {D3DKMT_HANDLE hObject;UINT Index;};
struct _ENABLE_DISABLE_FP_POLLING_IN {ULONG Period;BOOLEAN Enable;};
struct _FILE_PIPE_REMOTE_INFORMATION {LARGE_INTEGER CollectDataTime;ULONG MaximumCollectionCount;};
struct _FILE_TYPE_NOTIFICATION_INPUT {ULONG Flags;ULONG NumFileTypeIDs;GUID FileTypeID[1];};
struct _FILE_VOLUME_NAME_INFORMATION {ULONG DeviceNameLength;WCHAR DeviceName[1];};
struct _FSRTL_PER_FILEOBJECT_CONTEXT {LIST_ENTRY Links;PVOID OwnerId;PVOID InstanceId;};
struct _IMAGE_RUNTIME_FUNCTION_ENTRY {ULONG BeginAddress;ULONG EndAddress;union _IMAGE_RUNTIME_FUNCTION_ENTRY___5CE347C3E3AA0FA9F4F8F0D1051C3C6A u;};
struct _INSTANCE_PARTIAL_INFORMATION {ULONG NextEntryOffset;USHORT InstanceNameLength;USHORT InstanceNameBufferOffset;USHORT AltitudeLength;USHORT AltitudeBufferOffset;};
struct _IRB_REQ_ISOCH_FREE_BANDWIDTH {HANDLE hBandwidth;ULONG nMaxBytesPerFrameRequested;ULONG fulSpeed;ULONG BytesPerFrameAvailable;ULONG SpeedSelected;ULONG nBandwidthUnitsRequired;};
struct _KSM_BDA_WMDRMTUNER_SYNCVALUE {KSM_NODE NodeMethod;ULONG ulSyncValue;};
struct _MOUNTMGR_DRIVE_LETTER_TARGET {USHORT DeviceNameLength;WCHAR DeviceName[1];};
struct _MPIO_DEVINSTANCE_HEALTH_INFO {ULONG NumberDevInstancePackets;ULONG Reserved;MPIO_DEVINSTANCE_HEALTH_CLASS DevInstanceHealthPackets[1];};
struct _MSNdis_EthernetMulticastList {ULONG NumberElements;MSNdis_NetworkAddress NdisMulticastList[1];};
struct _MSNdis_FddiLongMulticastList {ULONG NumberElements;MSNdis_NetworkAddress NdisMulticastList[1];};
struct _MSNdis_NicSwitchCapabilities {MSNdis_ObjectHeader Header;ULONG Flags;ULONG NdisReserved1;ULONG NumTotalMacAddresses;ULONG NumMacAddressesPerPort;ULONG NumVlansPerPort;ULONG NdisReserved2;ULONG NdisReserved3;};
struct _MSiSCSI_SecurityCapabilities {BOOLEAN ProtectiScsiTraffic;BOOLEAN ProtectiSNSTraffic;BOOLEAN CertificatesSupported;ULONG EncryptionAvailableCount;ULONG EncryptionAvailable[1];};
struct _NDIS_FILTER_PAUSE_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG PauseReason;};
struct _NDIS_HD_SPLIT_CURRENT_CONFIG {NDIS_OBJECT_HEADER Header;ULONG HardwareCapabilities;ULONG CurrentCapabilities;ULONG HDSplitFlags;ULONG HDSplitCombineFlags;ULONG BackfillSize;ULONG MaxHeaderSize;};
struct _NDIS_NIC_SWITCH_CAPABILITIES {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG NdisReserved1;ULONG NumTotalMacAddresses;ULONG NumMacAddressesPerPort;ULONG NumVlansPerPort;ULONG NdisReserved2;ULONG NdisReserved3;};
struct _NDIS_TAPI_SELECT_EXT_VERSION {ULONG ulRequestID;HDRV_LINE hdLine;ULONG ulExtVersion;};
struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD {struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD___BD1ABE3F7089330570815518DCEC2E2A IPv4Transmit;struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD___BD1ABE3F7089330570815518DCEC2E2A IPv4Receive;struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD___AB23E12DE29272C03DA85FFDA3AFB0C3 IPv6Transmit;struct _NDIS_TCP_IP_CHECKSUM_OFFLOAD___AB23E12DE29272C03DA85FFDA3AFB0C3 IPv6Receive;};
struct _NDIS_WWAN_SERVICE_ACTIVATION {NDIS_OBJECT_HEADER Header;WWAN_SERVICE_ACTIVATION ServiceActivation;};
struct _NDIS_WWAN_SET_PACKET_SERVICE {NDIS_OBJECT_HEADER Header;WWAN_PACKET_SERVICE_ACTION PacketServiceAction;};
struct _NDIS_WWAN_SET_REGISTER_STATE {NDIS_OBJECT_HEADER Header;WWAN_SET_REGISTER_STATE SetRegisterState;};
union _OB_POST_OPERATION_PARAMETERS {OB_POST_CREATE_HANDLE_INFORMATION CreateHandleInformation;OB_POST_DUPLICATE_HANDLE_INFORMATION DuplicateHandleInformation;};
union _PCI_EXPRESS_AER_CAPABILITIES {struct _PCI_EXPRESS_AER_CAPABILITIES___B122B60A73C0073EBE81EF7DAD0DD591 s;ULONG AsULONG;};
union _PCI_EXPRESS_PME_REQUESTOR_ID {struct _PCI_EXPRESS_PME_REQUESTOR_ID___2DC6C11806CCC5D8E8048E1ED5002165 s;USHORT AsUSHORT;};
struct _PCI_SUBSYSTEM_IDS_CAPABILITY {PCI_CAPABILITIES_HEADER Header;USHORT Reserved;USHORT SubVendorID;USHORT SubSystemID;};
struct _PLUGPLAY_NOTIFICATION_HEADER {USHORT Version;USHORT Size;GUID Event;};
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY {LIST_ENTRY Linkage;ULONG_PTR Signature;};
struct _ReportDiscoveredTargets2_OUT {ULONG Status;ULONG TargetCount;ISCSI_DiscoveredTarget2 Targets[1];};
struct _SET_PARTITION_INFORMATION_EX {PARTITION_STYLE PartitionStyle;union _SET_PARTITION_INFORMATION_EX___ECBF70424E32A71371BB3749E7C6F2EC u;};
struct _STORAGE_DEVICE_ID_DESCRIPTOR {ULONG Version;ULONG Size;ULONG NumberOfIdentifiers;UCHAR Identifiers[1];};
struct _STORAGE_FAILURE_PREDICT_DATA {ULONG Length;UCHAR VendorSpecific[512];};
struct _STORAGE_OFFLOAD_WRITE_OUTPUT {ULONG OffloadWriteFlags;ULONG Reserved;ULONGLONG LengthCopied;};
struct _STORAGE_REQUEST_BLOCK_HEADER {USHORT Length;UCHAR Function;UCHAR SrbStatus;};
struct _SYSTEM_HIBERFILE_INFORMATION {ULONG NumberOfMcbPairs;LARGE_INTEGER Mcb[1];};
struct _SetTunnelModeOuterAddress_IN {ULONG PortNumber;ISCSI_IP_Address DestinationAddress;ISCSI_IP_Address TunnelModeOuterAddress;};
struct _TDI_REQUEST_KERNEL_RECEIVEDG {ULONG ReceiveLength;PTDI_CONNECTION_INFORMATION ReceiveDatagramInformation;PTDI_CONNECTION_INFORMATION ReturnDatagramInformation;ULONG ReceiveFlags;};
struct _TDI_REQUEST_KERNEL_SET_EVENT {LONG EventType;PVOID EventHandler;PVOID EventContext;};
struct _TRANSACTION_LIST_INFORMATION {ULONG NumberOfTransactions;TRANSACTION_LIST_ENTRY TransactionInformation[1];};
struct _TXFS_CREATE_MINIVERSION_INFO {USHORT StructureVersion;USHORT StructureLength;ULONG BaseVersion;USHORT MiniVersion;};
struct _USB_CONFIGURATION_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT wTotalLength;UCHAR bNumInterfaces;UCHAR bConfigurationValue;UCHAR iConfiguration;UCHAR bmAttributes;UCHAR MaxPower;};
struct _USB_CONTROLLER_INFORMATION_0 {ULONG InformationLevel;ULONG ActualLength;BOOLEAN SelectiveSuspendEnabled;BOOLEAN IsHighSpeedController;};
struct _USB_CONTROLLER_INFORMATION_1 {ULONG InformationLevel;ULONG ActualLength;BOOLEAN SelectiveSuspendEnabled;BOOLEAN IsHighSpeedController;ULONG HcBusNumber;ULONG HcBusDevice;ULONG HcBusFunction;};
union _USB_FUNCTION_SUSPEND_OPTIONS {UCHAR AsUchar;_USB_FUNCTION_SUSPEND_OPTIONS___B9F42C73C99009482819DE74B79AF743 __anonymous0;};
union _WHEA_NMI_ERROR_SECTION_FLAGS {struct _WHEA_NMI_ERROR_SECTION_FLAGS___0A6B79CB4316EFFE316115F1C7AE6602 s;ULONG AsULONG;};
struct _WWAN_DEVICE_SERVICE_RESPONSE {GUID DeviceServiceGuid;ULONG ResponseID;ULONG uDataSize;};
struct _WmiMonitorBasicDisplayParams {UCHAR VideoInputType;UCHAR MaxHorizontalImageSize;UCHAR MaxVerticalImageSize;UCHAR DisplayTransferCharacteristic;WmiMonitorSupportedDisplayFeatures SupportedDisplayFeatures;};
struct _WmiSetInterruptModeration_IN {MSNdis_WmiMethodHeader MethodHeader;MSNdis_InterruptModerationParameters InterruptModeration;};
struct tagKS_DATARANGE_BDA_TRANSPORT {KSDATARANGE DataRange;BDA_TRANSPORT_INFO BdaTransportInfo;};
typedef void ( *DXGKCB_SETPOWERCOMPONENTIDLE)(IN_CONST_HANDLE hAdapter, UINT ComponentIndex);
typedef void DXGKDDI_SYSTEM_DISPLAY_WRITE(PVOID MiniportDeviceContext, PVOID Source, UINT SourceWidth, UINT SourceHeight, UINT SourceStride, UINT PositionX, UINT PositionY);
typedef void GET_VIRTUAL_DEVICE_RESOURCES(PVOID Context, PUINT8 CapturedBusNumbers);
typedef void IO_CSQ_COMPLETE_CANCELED_IRP(PIO_CSQ Csq, PIRP Irp);
typedef KD_CALLBACK_ACTION (*PDEBUG_DEVICE_FOUND_FUNCTION)(PDEBUG_DEVICE_DESCRIPTOR Device);
typedef NTSTATUS (*PPARALLEL_TRY_SELECT_ROUTINE)(PVOID TrySelectContext, PVOID TrySelectCommand);
typedef void PROTOCOL_CL_OPEN_AF_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolAfContext, NDIS_HANDLE NdisAfHandle);
typedef PVOID (*PVIDEO_PORT_GET_PROC_ADDRESS)(PVOID HwDeviceExtension, PUCHAR FunctionName);
typedef PVOID  RTL_GENERIC_ALLOCATE_ROUTINE(struct _RTL_GENERIC_TABLE *Table, CLONG ByteSize);
union _AER_BRIDGE_DESCRIPTOR_FLAGS {struct _AER_BRIDGE_DESCRIPTOR_FLAGS___DA323376D87A17572D4BAAC59ACA696A s;USHORT AsUSHORT;};
struct _ATM_CALLING_PARTY_NUMBER_IE {ATM_ADDRESS Number;UCHAR PresentationIndication;UCHAR ScreeningIndicator;};
struct _BTHX_HCI_READ_WRITE_CONTEXT {ULONG DataLen;UCHAR Type;UCHAR Data[1];};
struct _CHANGER_READ_ELEMENT_STATUS {CHANGER_ELEMENT_LIST ElementList;BOOLEAN VolumeTagInfo;};
struct _DEBUG_DEVICE_INFORMATION_V2 {UCHAR Revision;USHORT Length;UCHAR BaseAddressRegisterCount;USHORT NameSpaceStringLength;USHORT NameSpaceStringOffset;USHORT OemDataLength;USHORT OemDataOffset;USHORT PortType;USHORT PortSubtype;USHORT Reserved;USHORT BaseAddressRegisterOffset;USHORT AddressSizeOffset;};
struct _DISK_PERFORMANCE_PARAMETERS {ULONG Version;DISK_PERFORMANCE_TYPE Type;};
struct _DOT11_WME_AC_PARAMTERS_LIST {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_WME_AC_PARAMETERS dot11WMEACParameters[1];};
struct _DUAL_OPLOCK_KEY_ECP_CONTEXT {GUID ParentOplockKey;GUID TargetOplockKey;BOOLEAN ParentOplockKeySet;BOOLEAN TargetOplockKeySet;};
struct _FILE_COMPLETION_INFORMATION {HANDLE Port;PVOID Key;};
struct _FILE_FS_CONTROL_INFORMATION {LARGE_INTEGER FreeSpaceStartFiltering;LARGE_INTEGER FreeSpaceThreshold;LARGE_INTEGER FreeSpaceStopFiltering;LARGE_INTEGER DefaultQuotaThreshold;LARGE_INTEGER DefaultQuotaLimit;ULONG FileSystemControlFlags;};
struct _GetFcpPersistentBinding_OUT {ULONG HBAStatus;ULONG TotalEntryCount;ULONG OutEntryCount;HBAFCPBindingEntry Entry[1];};
struct _ICMPV4_ADDRESS_MASK_MESSAGE {ICMPV4_MESSAGE Header;UINT32 AddressMask;};
struct _IMAGE_RESOURCE_DIR_STRING_U {USHORT Length;WCHAR NameString[1];};
struct _IMAGE_SEPARATE_DEBUG_HEADER {USHORT Signature;USHORT Flags;USHORT Machine;USHORT Characteristics;ULONG TimeDateStamp;ULONG CheckSum;ULONG ImageBase;ULONG SizeOfImage;ULONG NumberOfSections;ULONG ExportedNamesSize;ULONG DebugDirectorySize;ULONG SectionAlignment;ULONG Reserved[2];};
struct _KEY_VALUE_BASIC_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG NameLength;WCHAR Name[1];};
struct _KSM_BDA_GDDS_TUNEXMLFROMIDX {KSMETHOD Method;ULONG64 ulIdx;};
struct _KSM_BDA_TS_SELECTOR_SETTSID {KSM_NODE NodeMethod;USHORT usTSID;};
struct _KernelPerfStateDomainChange {ULONG State;ULONG Latency;ULONG Speed;ULONGLONG Processors;};
struct _MSVerifierIrpLogInformation {ULONG DeviceType;ULONG EntryCount;MSVerifierIrpLogEntry Entries[1];};
struct _NDIS_TCP_CONNECTION_OFFLOAD {NDIS_OBJECT_HEADER Header;ULONG Encapsulation;unsigned int SupportIPv4 : 2;unsigned int SupportIPv6 : 2;unsigned int SupportIPv6ExtensionHeaders : 2;unsigned int SupportSack : 2;unsigned int CongestionAlgorithm : 4;ULONG TcpConnectionOffloadCapacity;ULONG Flags;};
struct _NDIS_WWAN_SET_CONTEXT_STATE {NDIS_OBJECT_HEADER Header;WWAN_SET_CONTEXT_STATE SetContextState;};
struct _NDIS_WWAN_SET_HOME_PROVIDER {NDIS_OBJECT_HEADER Header;WWAN_PROVIDER2 HomeProvider;};
struct _NDIS_WWAN_SMS_DELETE_STATUS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;};
union _OB_PRE_OPERATION_PARAMETERS {OB_PRE_CREATE_HANDLE_INFORMATION CreateHandleInformation;OB_PRE_DUPLICATE_HANDLE_INFORMATION DuplicateHandleInformation;};
struct _PCI_DEBUGGING_DEVICE_IN_USE {USHORT Segment;ULONG Bus;ULONG Slot;};
union _PCI_EXPRESS_ERROR_SOURCE_ID {struct _PCI_EXPRESS_ERROR_SOURCE_ID___DDA24732C4B871AD437034059C0FCEEF s;ULONG AsULONG;};
struct _PROCESSOR_POWER_POLICY_INFO {ULONG TimeCheck;ULONG DemoteLimit;ULONG PromoteLimit;UCHAR DemotePercent;UCHAR PromotePercent;UCHAR Spare[2];unsigned int AllowDemotion : 1;unsigned int AllowPromotion : 1;unsigned int Reserved : 30;};
struct _REG_REPLACE_KEY_INFORMATION {PVOID Object;PUNICODE_STRING OldFileName;PUNICODE_STRING NewFileName;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _REQUEST_OPLOCK_INPUT_BUFFER {USHORT StructureVersion;USHORT StructureLength;ULONG RequestedOplockLevel;ULONG Flags;};
struct _REQ_SET_SECURITY_DESCRIPTOR {USHORT Fid;USHORT Reserved;ULONG SecurityInformation;};
struct _ReportDiscoveredTargets_OUT {ULONG Status;ULONG TargetCount;ISCSI_DiscoveredTarget Targets[1];};
struct _SCSI_PASS_THROUGH_DIRECT_EX {ULONG Version;ULONG Length;ULONG CdbLength;ULONG StorAddressLength;UCHAR ScsiStatus;UCHAR SenseInfoLength;UCHAR DataDirection;UCHAR Reserved;ULONG TimeOutValue;ULONG StorAddressOffset;ULONG SenseInfoOffset;ULONG DataOutTransferLength;ULONG DataInTransferLength;void *DataOutBuffer;void *DataInBuffer;UCHAR Cdb[1];};
struct _SES_CONTROL_DIAGNOSTIC_PAGE {UCHAR PageCode;unsigned char Unrecoverable : 1;unsigned char Critical : 1;unsigned char NonCritical : 1;unsigned char Informational : 1;unsigned char Reserved : 4;UCHAR PageLength[2];UCHAR ExpectedGenerationCode[4];SES_CONTROL_DESCRIPTOR Descriptors[1];};
struct _SFI_TIMER_DESCRIPTION_TABLE {DESCRIPTION_HEADER Header;SFI_TIMER Timers[1];};
struct _STORAGE_IDLE_POWERUP_REASON {ULONG Version;ULONG Size;STORAGE_POWERUP_REASON_TYPE PowerupReason;};
struct _STOR_DEVICE_CAPABILITIES_EX {USHORT Version;USHORT Size;unsigned int DeviceD1 : 1;unsigned int DeviceD2 : 1;unsigned int LockSupported : 1;unsigned int EjectSupported : 1;unsigned int Removable : 1;unsigned int DockDevice : 1;unsigned int UniqueID : 1;unsigned int SilentInstall : 1;unsigned int RawDeviceOK : 1;unsigned int SurpriseRemovalOK : 1;unsigned int NoDisplayInUI : 1;unsigned int DefaultWriteCacheEnabled : 1;unsigned int Reserved0 : 20;ULONG Address;ULONG UINumber;ULONG Reserved1[2];};
struct _TDI_REQUEST_KERNEL_SET_INFO {LONG SetType;PTDI_CONNECTION_INFORMATION RequestConnectionInformation;};
struct _TXFS_GET_TRANSACTED_VERSION {ULONG ThisBaseVersion;ULONG LatestVersion;USHORT ThisMiniVersion;USHORT FirstMiniVersion;USHORT LatestMiniVersion;};
struct _USB_BUS_INFORMATION_LEVEL_1 {ULONG TotalBandwidth;ULONG ConsumedBandwidth;ULONG ControllerNameLength;WCHAR ControllerNameUnicodeString[1];};
union _WHEA_XPF_PROCINFO_VALIDBITS {struct _WHEA_XPF_PROCINFO_VALIDBITS___3C1F6002C2BC1C6104160BD0BB9BEBBC s;ULONGLONG ValidBits;};
struct _WMI_CHANGER_PROBLEM_WARNING {ULONG ChangerProblemType;UCHAR ChangerData[512];};
struct _WWAN_DEVICE_SERVICE_COMMAND {GUID DeviceServiceGuid;ULONG CommandID;ULONG uDataSize;};
struct creative_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct tagKS_DATAFORMAT_MPEG2TS_AVC {KSDATAFORMAT DataFormat;AVCCONNECTINFO ConnectInfo;};
struct DOT11_HRDSSS_PHY_ATTRIBUTES {BOOLEAN bShortPreambleOptionImplemented;BOOLEAN bPBCCOptionImplemented;BOOLEAN bChannelAgilityPresent;ULONG uHRCCAModeSupported;};
typedef void MINIPORT_CANCEL_OID_REQUEST(NDIS_HANDLE MiniportAdapterContext, PVOID RequestId);
typedef NTSTATUS ( *PFLT_FILTER_UNLOAD_CALLBACK)(FLT_FILTER_UNLOAD_FLAGS Flags);
typedef void (*POB_POST_OPERATION_CALLBACK)(PVOID RegistrationContext, POB_POST_OPERATION_INFORMATION OperationInformation);
typedef void POST_SCATTER_GATHER_EXECUTE(PVOID *DeviceObject, PVOID *Irp, PSTOR_SCATTER_GATHER_LIST ScatterGather, PVOID Context);
typedef NDIS_STATUS PROTOCOL_CL_NOTIFY_CLOSE_AF(NDIS_HANDLE ClientAfContext);
typedef ULONG (*PStorPortAcquireMSISpinLock)(PVOID HwDeviceExtension, ULONG MessageID);
typedef void (*PStorPortReleaseMSISpinLock)(PVOID HwDeviceExtension, ULONG MessageID, ULONG OldIrql);
typedef PVOID  RTL_ALLOCATE_STRING_ROUTINE(SIZE_T NumberOfBytes);
typedef RTL_GENERIC_COMPARE_RESULTS  RTL_GENERIC_COMPARE_ROUTINE(struct _RTL_GENERIC_TABLE *Table, PVOID FirstStruct, PVOID SecondStruct);
typedef SECURITY_STATUS ( *SET_CONTEXT_ATTRIBUTES_FN_W)(PCtxtHandle, unsigned int, void *, unsigned int);
struct _ADMINISTRATOR_POWER_POLICY {SYSTEM_POWER_STATE MinSleep;SYSTEM_POWER_STATE MaxSleep;ULONG MinVideoTimeout;ULONG MaxVideoTimeout;ULONG MinSpindownTimeout;ULONG MaxSpindownTimeout;};
struct _AddConnectionToSession_OUT {ULONG Status;ULONGLONG UniqueConnectionId;};
struct _CDROM_EXCLUSIVE_LOCK_STATE {BOOLEAN LockState;UCHAR CallerName[64];};
struct _CO_CALL_MANAGER_PARAMETERS {FLOWSPEC Transmit;FLOWSPEC Receive;CO_SPECIFIC_PARAMETERS CallMgrSpecific;};
struct _CSRT_RESOURCE_GROUP_HEADER {UINT32 Length;UINT32 VendorId;UINT32 SubvendorId;UINT16 DeviceId;UINT16 SubdeviceId;UINT16 Revision;UINT16 Instance;UINT32 SharedInfoLength;};
struct _DOT11_VWIFI_COMBINATION_V2 {NDIS_OBJECT_HEADER Header;ULONG uNumInfrastructure;ULONG uNumAdhoc;ULONG uNumSoftAP;ULONG uNumVirtualStation;};
struct _DOT11_VWIFI_COMBINATION_V3 {NDIS_OBJECT_HEADER Header;ULONG uNumInfrastructure;ULONG uNumAdhoc;ULONG uNumSoftAP;ULONG uNumVirtualStation;ULONG uNumWFDGroup;};
struct _DSM_Load_Balance_Policy_V2 {ULONG Version;ULONG LoadBalancePolicy;ULONG DSMPathCount;ULONG Reserved;MPIO_DSM_Path_V2 DSM_Paths[1];};
struct _FILE_GET_QUOTA_INFORMATION {ULONG NextEntryOffset;ULONG SidLength;SID Sid;};
struct _FSCTL_OFFLOAD_WRITE_OUTPUT {ULONG Size;ULONG Flags;ULONGLONG LengthWritten;};
struct _GetPortAttributesByWWN_OUT {ULONG HBAStatus;MSFC_HBAPortAttributesResults PortAttributes;};
struct _HDAUDIO_DEVICE_INFORMATION {USHORT Size;USHORT DeviceVersion;USHORT DriverVersion;USHORT CodecsDetected;BOOLEAN IsStripingSupported;};
struct _ICMPV4_ROUTER_ADVERT_ENTRY {IN_ADDR RouterAdvertAddr;LONG PreferenceLevel;};
struct _IMAGE_DELAYLOAD_DESCRIPTOR {union _IMAGE_DELAYLOAD_DESCRIPTOR___24F6574E5593E2C842E103EF8265DC95 Attributes;ULONG DllNameRVA;ULONG ModuleHandleRVA;ULONG ImportAddressTableRVA;ULONG ImportNameTableRVA;ULONG BoundImportAddressTableRVA;ULONG UnloadInformationTableRVA;ULONG TimeDateStamp;};
struct _INSTANCE_BASIC_INFORMATION {ULONG NextEntryOffset;USHORT InstanceNameLength;USHORT InstanceNameBufferOffset;};
struct _IO_DEVICE_HINT_ECP_CONTEXT {PDEVICE_OBJECT TargetDevice;UNICODE_STRING RemainingName;};
struct _IR_PRIORITY_RECEIVE_PARAMS {ULONG_PTR DataEnd;ULONG_PTR ByteCount;ULONG_PTR CarrierFrequency;LONG Data[1];};
struct _KEY_VALUE_FULL_INFORMATION {ULONG TitleIndex;ULONG Type;ULONG DataOffset;ULONG DataLength;ULONG NameLength;WCHAR Name[1];};
struct _MSNdis_PMCapabilitiesParam {MSNdis_ObjectHeader Header;MSNdis_PMCapabilityState WakeOnPattern;MSNdis_PMCapabilityState WakeOnMagicPacket;MSNdis_PMCapabilityState DeviceSleepOnDisconnect;MSNdis_PMCapabilityState PMARPOffload;MSNdis_PMCapabilityState PMNDOffload;MSNdis_PMCapabilityState PMWiFiRekeyOffload;};
struct _MSNdis_StatusNetworkChange {ULONG NumberElements;UCHAR NdisNetworkChangeStatusIndication[1];};
struct _MSV1_0_GETUSERINFO_REQUEST {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;LUID LogonId;};
struct _MSWmi_GuidRegistrationInfo {ULONG Operation;ULONG GuidCount;MSWmi_Guid GuidList[1];};
struct _NDIS_DRIVER_WRAPPER_HANDLE {NDIS_OBJECT_HEADER Header;NDIS_HANDLE NdisWrapperHandle;};
struct _NDIS_OFFLOAD_ENCAPSULATION {NDIS_OBJECT_HEADER Header;struct _NDIS_OFFLOAD_ENCAPSULATION___B2822AC75AC4B94EB74A1441EE0BFACA IPv4;struct _NDIS_OFFLOAD_ENCAPSULATION___B2822AC75AC4B94EB74A1441EE0BFACA IPv6;};
struct _NDIS_TAPI_GET_ADDRESS_CAPS {ULONG ulRequestID;ULONG ulDeviceID;ULONG ulAddressID;ULONG ulExtVersion;LINE_ADDRESS_CAPS LineAddressCaps;};
struct _NDIS_TAPI_GET_EXTENSION_ID {ULONG ulRequestID;ULONG ulDeviceID;LINE_EXTENSION_ID LineExtensionID;};
struct _NDIS_TAPI_SET_APP_SPECIFIC {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulAppSpecific;};
struct _NET_BUFFER_POOL_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG PoolTag;ULONG DataSize;};
struct _PCI_EXPRESS_LTR_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;PCI_EXPRESS_LTR_MAX_LATENCY_REGISTER Latency;};
struct _PO_FX_COMPONENT_IDLE_STATE {ULONGLONG TransitionLatency;ULONGLONG ResidencyRequirement;ULONG NominalPower;};
struct _REG_RENAME_KEY_INFORMATION {PVOID Object;PUNICODE_STRING NewName;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _REQUEST_RAW_ENCRYPTED_DATA {LONGLONG FileOffset;ULONG Length;};
struct _SES_STATUS_DIAGNOSTIC_PAGE {UCHAR PageCode;unsigned char Unrecoverable : 1;unsigned char Critical : 1;unsigned char NonCritical : 1;unsigned char Informational : 1;unsigned char InvalidOperation : 1;unsigned char Reserved : 3;UCHAR PageLength[2];UCHAR GenerationCode[4];SES_STATUS_DESCRIPTOR Descriptors[1];};
struct _STORAGE_EVENT_NOTIFICATION {ULONG Version;ULONG Size;ULONGLONG Events;};
struct _STOR_INITGLOBALLOGGER_ARGS {LPCGUID ControlGuid;PVOID Logger;PVOID Flags;PVOID Level;};
struct _SUB_Q_MEDIA_CATALOG_NUMBER {SUB_Q_HEADER Header;UCHAR FormatCode;UCHAR Reserved[3];unsigned char Reserved1 : 7;unsigned char Mcval : 1;UCHAR MediaCatalog[15];};
struct _TCP_INITIAL_RTO_PARAMETERS {USHORT Rtt;UCHAR MaxSynRetransmissions;};
struct _TDI_CONNECTION_INFORMATION {LONG UserDataLength;PVOID UserData;LONG OptionsLength;PVOID Options;LONG RemoteAddressLength;PVOID RemoteAddress;};
struct _TXFS_SAVEPOINT_INFORMATION {HANDLE KtmTransaction;ULONG ActionCode;ULONG SavepointId;};
struct _USBD_ISO_PACKET_DESCRIPTOR {ULONG Offset;ULONG Length;USBD_STATUS Status;};
union _USB_PORT_STATUS_AND_CHANGE {ULONG AsUlong32;_USB_PORT_STATUS_AND_CHANGE___06D7F19183DD338F8D2AD97F0DBC7E2B __anonymous0;};
struct _VIDEO_PUBLIC_ACCESS_RANGES {ULONG InIoSpace;ULONG MappedInIoSpace;PVOID VirtualAddress;};
union _WHEA_PROCESSOR_FAMILY_INFO {struct _WHEA_PROCESSOR_FAMILY_INFO___62A8DAF1CB19E49D91E3DACC630DA822 s;ULONGLONG AsULONGLONG;};
struct _WWAN_SET_SMS_CONFIGURATION {CHAR ScAddress[16];WWAN_SMS_FORMAT SmsFormat;};
struct _WmiSetHDSplitParameters_IN {MSNdis_WmiMethodHeader MethodHeader;MSNdis_HDSplitParameters HDSplitParameters;};
struct contres_vqlpcwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct nms_vbxadpcmmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct tagKS_DATARANGE_ANALOGVIDEO {KSDATARANGE DataRange;KS_ANALOGVIDEOINFO AnalogVideoInfo;};
struct tagKS_DATARANGE_MPEG2TS_AVC {KSDATARANGE DataRange;AVCPRECONNECTINFO ConnectInfo;};
struct tagVIDEO_MONITOR_DESCRIPTOR {ULONG DescriptorSize;UCHAR Descriptor[1];};
struct tag_video_stream_init_parms {ULONG dwMicroSecPerFrame;ULONG dwCallback;ULONG dwCallbackInst;ULONG dwFlags;HANDLE hVideo;};
typedef NTSTATUS  API_SET_RELEASE_SCHEMA_RTN(PVOID Context);
typedef SECURITY_STATUS ( *DELETE_SECURITY_CONTEXT_FN)(PCtxtHandle);
typedef void (*DXGKDDI_PROTECTED_CALLBACK)( PVOID MiniportDeviceContext, PVOID ProtectedCallbackContext, NTSTATUS ProtectionStatus);
typedef NTSTATUS  DXGKDDI_RESTARTFROMTIMEOUT(IN_CONST_HANDLE hAdapter);
typedef NTSTATUS ENTER_STATE_SYSTEM_HANDLER(PVOID SystemContext);
typedef SECURITY_STATUS ( *FREE_CREDENTIALS_HANDLE_FN)(PCredHandle);
struct IMAGE_AUX_SYMBOL_TOKEN_DEF {UCHAR bAuxType;UCHAR bReserved;ULONG SymbolTableIndex;UCHAR rgbReserved[12];};
typedef void KBUGCHECK_CALLBACK_ROUTINE(PVOID Buffer, ULONG Length);
typedef NTSTATUS (*PAPPENDNODETOCONTAINERNODE)(PSDP_NODE Container, PSDP_NODE Node);
typedef NTSTATUS (*PCOMMAND_COMPLETE_FUNCTION)(PVOID DeviceContext, PVOID CommandContext, NTSTATUS NtStatus);
typedef void ( *PFLT_CONTEXT_FREE_CALLBACK)(PVOID Pool, FLT_CONTEXT_TYPE ContextType);
typedef NTSTATUS (*PPARALLEL_DESELECT_ROUTINE)(PVOID DeselectContext, PVOID DeselectCommand);
typedef NDIS_STATUS PROTOCOL_CM_DEREGISTER_SAP(NDIS_HANDLE CallMgrSapContext);
typedef NDIS_STATUS PROTOCOL_UNBIND_ADAPTER_EX(NDIS_HANDLE UnbindContext, NDIS_HANDLE ProtocolBindingContext);
typedef SECURITY_STATUS ( *REVERT_SECURITY_CONTEXT_FN)(PCtxtHandle);
struct _ACPI_EVAL_INPUT_BUFFER_EX {ULONG Signature;CHAR MethodName[256];};
struct _ATM_TRAFFIC_DESCRIPTOR_IE {ATM_TRAFFIC_DESCRIPTOR ForwardTD;ATM_TRAFFIC_DESCRIPTOR BackwardTD;BOOLEAN BestEffort;};
struct _BDA_ETHERNET_ADDRESS_LIST {ULONG ulcAddresses;BDA_ETHERNET_ADDRESS rgAddressl[1];};
struct _BDA_ISDBCAS_REQUESTHEADER {BYTE bInstruction;BYTE bReserved[3];ULONG ulDataLength;BYTE argbIsdbCommand[1];};
struct _BDA_USERACTIVITY_INTERVAL {PBDARESULT lResult;ULONG ulActivityInterval;};
struct _BOOTDISK_INFORMATION_LITE {ULONG NumberEntries;LOADER_PARTITION_INFORMATION_EX Entries[1];};
struct _BRB_ACL_ENTER_ACTIVE_MODE {BRB_HEADER Hdr;BTH_ADDR BtAddress;};
struct _CLFS_LOG_NAME_INFORMATION {USHORT NameLengthInBytes;WCHAR Name[1];};
struct _CONFIGURATION_INFORMATION {ULONG DiskCount;ULONG FloppyCount;ULONG CdRomCount;ULONG TapeCount;ULONG ScsiPortCount;ULONG SerialCount;ULONG ParallelCount;BOOLEAN AtDiskPrimaryAddressClaimed;BOOLEAN AtDiskSecondaryAddressClaimed;ULONG Version;ULONG MediumChangerCount;};
struct _D3DDDI_OPENALLOCATIONINFO {D3DKMT_HANDLE hAllocation; void *pPrivateDriverData;UINT PrivateDriverDataSize;};
struct _D3DKMDT_SHADOWSURFACEDATA {UINT Width;UINT Height;D3DDDIFORMAT Format;UINT Pitch;};
struct _DISK_COPY_DATA_PARAMETERS {LARGE_INTEGER SourceOffset;LARGE_INTEGER DestinationOffset;LARGE_INTEGER CopyLength;ULONGLONG Reserved;};
struct _DOT11_OPTIONAL_CAPABILITY {ULONG uReserved;BOOLEAN bDot11PCF;BOOLEAN bDot11PCFMPDUTransferToPC;BOOLEAN bStrictlyOrderedServiceClass;};
struct _DOT11_SUPPORTED_PHY_TYPES {ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_PHY_TYPE dot11PHYType[1];};
struct _DXGKARG_DESCRIBEPAGETABLE {D3DGPU_VIRTUAL_ADDRESS CoverageStart;UINT CoverageSizeInBytes;UINT SizeInBytes;UINT SubtableOffset1;UINT SubtableOffset2;};
struct _DXGKARG_QUERYENGINESTATUS {UINT NodeOrdinal;UINT EngineOrdinal;DXGK_ENGINESTATUS EngineStatus;};
struct _FILE_FS_LABEL_INFORMATION {ULONG VolumeLabelLength;WCHAR VolumeLabel[1];};
struct _FILE_QUERY_SPARING_BUFFER {ULONG SparingUnitBytes;BOOLEAN SoftwareSparing;ULONG TotalSpareBlocks;ULONG FreeSpareBlocks;};
struct _GET_ALL_ERROR_SOURCES_OUT {ULONG Status;ULONG Count;ULONG Length;UCHAR ErrorSourceArray[1];};
struct _GET_ERROR_SOURCE_INFO_OUT {ULONG Status;ULONG Length;UCHAR ErrorSourceInfo[1];};
struct _GetPersistentBinding2_OUT {ULONG HBAStatus;ULONG TotalEntryCount;ULONG OutEntryCount;HBAFCPBindingEntry2 Bindings[1];};
struct _HDAUDIO_BUFFER_DESCRIPTOR {PHYSICAL_ADDRESS Address;ULONG Length;ULONG InterruptOnCompletion;};
struct _IMAGE_BOUND_FORWARDER_REF {ULONG TimeDateStamp;USHORT OffsetModuleName;USHORT Reserved;};
struct _INSTANCE_FULL_INFORMATION {ULONG NextEntryOffset;USHORT InstanceNameLength;USHORT InstanceNameBufferOffset;USHORT AltitudeLength;USHORT AltitudeBufferOffset;USHORT VolumeNameLength;USHORT VolumeNameBufferOffset;USHORT FilterNameLength;USHORT FilterNameBufferOffset;};
struct _KernelThermalPolicyChange {UCHAR CoolingMode;ULONGLONG Processors;};
struct _LINK_TRACKING_INFORMATION {LINK_TRACKING_INFORMATION_TYPE Type;UCHAR VolumeId[16];};
struct _MF_VARYING_RESOURCE_ENTRY {UCHAR ResourceIndex;UCHAR Reserved[3];ULONG Offset;ULONG Size;ULONG MaxCount;};
struct _MSNdis_PMAdminConfigParam {MSNdis_ObjectHeader Header;MSNdis_PMAdminConfigState WakeOnPattern;MSNdis_PMAdminConfigState WakeOnMagicPacket;MSNdis_PMAdminConfigState DeviceSleepOnDisconnect;MSNdis_PMAdminConfigState PMARPOffload;MSNdis_PMAdminConfigState PMNDOffload;MSNdis_PMAdminConfigState PMWiFiRekeyOffload;};
struct _MSNdis_PortAuthParameters {MSNdis_ObjectHeader Header;ULONG SendControlState;ULONG RcvControlState;ULONG SendAuthorizationState;ULONG RcvAuthorizationState;};
struct _MSiSCSI_SessionStatistics {WCHAR iSCSIName[224];ULONGLONG USID;ULONGLONG UniqueAdapterId;ULONGLONG BytesSent;ULONGLONG BytesReceived;ULONGLONG PDUCommandsSent;ULONGLONG PDUResponsesReceived;ULONGLONG DigestErrors;ULONGLONG ConnectionTimeoutErrors;ULONGLONG FormatErrors;};
struct _NDIS_802_11_BSSID_LIST_EX {ULONG NumberOfItems;NDIS_WLAN_BSSID_EX Bssid[1];};
struct _NDIS_802_11_CONFIGURATION {ULONG Length;ULONG BeaconPeriod;ULONG ATIMWindow;ULONG DSConfig;NDIS_802_11_CONFIGURATION_FH FHConfig;};
struct _NDIS_WWAN_SET_RADIO_STATE {NDIS_OBJECT_HEADER Header;WWAN_RADIO RadioAction;};
struct _NDIS_WWAN_VENDOR_SPECIFIC {NDIS_OBJECT_HEADER Header;WWAN_VENDOR_SPECIFIC VendorSpecificData;};
struct _NOTIFICATION_MEDIA_STATUS {unsigned char MediaEvent : 4;unsigned char Reserved : 4;_NOTIFICATION_MEDIA_STATUS___7F016F2347F7A626442932B97010E935 __anonymous0;UCHAR StartSlot;UCHAR EndSlot;};
struct _OBJECT_HANDLE_INFORMATION {ULONG HandleAttributes;ACCESS_MASK GrantedAccess;};
union _PCI_EXPRESS_SRIOV_CONTROL {struct _PCI_EXPRESS_SRIOV_CONTROL___62BBC5D0F36C540DD5E2F4B58FEF697D s;USHORT AsUSHORT;};
struct _READ_ELEMENT_ADDRESS_INFO {ULONG NumberOfElements;CHANGER_ELEMENT_STATUS ElementStatus[1];};
struct _RESOURCE_PERFORMANCE_DATA {ULONG ActiveResourceCount;ULONG TotalResourceCount;ULONG ExclusiveAcquire;ULONG SharedFirstLevel;ULONG SharedSecondLevel;ULONG StarveFirstLevel;ULONG StarveSecondLevel;ULONG WaitForExclusive;ULONG OwnerTableExpands;ULONG MaximumTableExpand;LIST_ENTRY HashTable[64];};
struct _SOCKET_PROCESSOR_AFFINITY {PROCESSOR_NUMBER Processor;USHORT NumaNodeId;USHORT Reserved;};
struct _STORAGE_DIAG_EVENT_RECORD {ULONG Size;ULONG Reserved;UCHAR Info[1];};
struct _STOR_POFX_UNIT_POWER_INFO {STOR_POWER_CONTROL_HEADER Header;BOOLEAN IdlePowerEnabled;};
struct _STOR_POWER_CONTROL_HEADER {ULONG Version;ULONG Size;PSTOR_ADDRESS Address;};
struct _TAPE_GET_DRIVE_PARAMETERS {BOOLEAN ECC;BOOLEAN Compression;BOOLEAN DataPadding;BOOLEAN ReportSetmarks;ULONG DefaultBlockSize;ULONG MaximumBlockSize;ULONG MinimumBlockSize;ULONG MaximumPartitionCount;ULONG FeaturesLow;ULONG FeaturesHigh;ULONG EOTWarningZoneSize;};
struct _TAPE_SET_DRIVE_PARAMETERS {BOOLEAN ECC;BOOLEAN Compression;BOOLEAN DataPadding;BOOLEAN ReportSetmarks;ULONG EOTWarningZoneSize;};
struct _TA_ADDRESS_NETBIOS___Addr {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_NETBIOS Address[1];};
struct _TDI_REQUEST_KERNEL_SENDDG {ULONG SendLength;PTDI_CONNECTION_INFORMATION SendDatagramInformation;};
struct _TDI_REQUEST_SEND_DATAGRAM {TDI_REQUEST Request;PTDI_CONNECTION_INFORMATION SendDatagramInformation;};
struct _USBD_INTERFACE_LIST_ENTRY {PUSB_INTERFACE_DESCRIPTOR InterfaceDescriptor;PUSBD_INTERFACE_INFORMATION Interface;};
struct _USB_EXTPORT_INFORMATION_0 {ULONG PhysicalPortNumber;ULONG PortLabelNumber;USHORT VidOverride;USHORT PidOverride;ULONG PortAttributes;};
union _USB_HUB_STATUS_AND_CHANGE {ULONG AsUlong32;_USB_HUB_STATUS_AND_CHANGE___494A1A55370F7FD1FED812E5A3BD4DA2 __anonymous0;};
struct _WMI_TAPE_DRIVE_PARAMETERS {ULONG MaximumBlockSize;ULONG MinimumBlockSize;ULONG DefaultBlockSize;ULONG MaximumPartitionCount;BOOLEAN CompressionCapable;BOOLEAN CompressionEnabled;BOOLEAN ReportSetmarks;BOOLEAN HardwareErrorCorrection;};
struct _WWAN_DEVICE_SERVICE_EVENT {GUID DeviceServiceGuid;ULONG EventID;ULONG uDataSize;};
struct contres_cr10waveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct fmtowns_snd_waveformat_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct sierra_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wRevision;};
struct tagKS_DATAFORMAT_IMAGEINFO {KSDATAFORMAT DataFormat;KS_BITMAPINFOHEADER ImageInfoHeader;};
typedef D3DKMT_HANDLE ( *DXGKCB_ENUMHANDLECHILDREN)(IN_CONST_PDXGKARGCB_ENUMHANDLECHILDREN);
typedef BOOLEAN FAST_IO_MDL_READ_COMPLETE(struct _FILE_OBJECT *FileObject, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);
typedef void FILTER_CANCEL_OID_REQUEST(NDIS_HANDLE FilterModuleContext, PVOID RequestId);
typedef NDIS_STATUS FILTER_SET_MODULE_OPTIONS(NDIS_HANDLE FilterModuleContext);
typedef NDIS_STATUS MINIPORT_CO_DEACTIVATE_VC(NDIS_HANDLE MiniportVcContext);
typedef void NDIS_IO_WORKITEM_FUNCTION(PVOID WorkItemContext, NDIS_HANDLE NdisIoWorkItemHandle);
typedef void (*NDK_FN_REQUEST_COMPLETION)(PVOID Context, NTSTATUS Status);
typedef NTSTATUS (*PAGP_FLUSH_CHIPSET_CACHES)(PVOID AgpContext);
typedef BOOLEAN PCMCIA_IS_WRITE_PROTECTED(PVOID Context);
typedef void ( *PFN_WSK_FREE_ADDRESS_INFO)(PWSK_CLIENT Client, PADDRINFOEXW AddrInfo);
typedef void (*PGET_RESOURCE_INFORMATION)(PVOID context, PUCHAR CodecAddress, PUCHAR FunctionGroupStartNode);
typedef void (*PIO_DEVICE_EJECT_CALLBACK)(NTSTATUS Status, PVOID Context);
typedef NTSTATUS ( *PLOWIO_COMPLETION_ROUTINE)(PRX_CONTEXT RxContext);
typedef void ( *PMRX_EXTRACT_NETROOT_NAME)(PUNICODE_STRING FilePathName, PMRX_SRV_CALL SrvCall, PUNICODE_STRING NetRootName, PUNICODE_STRING RestOfName);
typedef NTSTATUS ( *PMRX_FORCECLOSED_CALLDOWN)(PMRX_SRV_OPEN SrvOpen);
typedef NTSTATUS ( *PMRX_UPDATE_NETROOT_STATE)(PMRX_NET_ROOT NetRoot);
typedef NTSTATUS (*PPARALLEL_IEEE_FWD_TO_REV)(PVOID Context);
typedef NTSTATUS (*PPARALLEL_IEEE_REV_TO_FWD)(PVOID Context);
typedef PVOID (*PStorPortGetSystemAddress)(PSCSI_REQUEST_BLOCK Srb);
struct _BDA_CAS_REQUESTTUNERDATA {UCHAR ucRequestPriority;UCHAR ucRequestReason;UCHAR ucRequestConsequences;ULONG ulEstimatedTime;};
struct _CM_INT13_DRIVE_PARAMETER {USHORT DriveSelect;ULONG MaxCylinders;USHORT SectorsPerTrack;USHORT MaxHeads;USHORT NumberDrives;};
struct _CO_TAPI_CALL_DIAGNOSTICS {ULONG ulOrigin;ULONG ulReason;NDIS_VAR_DATA_DESC DiagInfo;};
struct _CSV_QUERY_REDIRECT_STATE {ULONG MdsNodeId;ULONG DsNodeId;BOOLEAN FileRedirected;};
struct _D3DDDI_PATCHLOCATIONLIST {UINT AllocationIndex;_D3DDDI_PATCHLOCATIONLIST___0F98B9AEA6B883F69971393929BE9C10 __anonymous0;UINT DriverId;UINT AllocationOffset;UINT PatchOffset;UINT SplitOffset;};
struct _DEBUG_TRACE_CONTROLPOINT {ULONG ControlPointNumber;PSZ Name;};
struct _DOT11_STOP_AP_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG ulReason;};
struct _DRIVE_LAYOUT_INFORMATION {ULONG PartitionCount;ULONG Signature;PARTITION_INFORMATION PartitionEntry[1];};
struct _DXGKARG_ISSUPPORTEDVIDPN {D3DKMDT_HVIDPN hDesiredVidPn;BOOLEAN IsVidPnSupported;};
struct _DXGKARG_QUERYADAPTERINFO {DXGK_QUERYADAPTERINFOTYPE Type;void *pInputData;UINT InputDataSize;void *pOutputData;UINT OutputDataSize;};
struct _DXGK_ALLOCATIONUSAGEHINT {UINT Version;DXGK_ALLOCATIONUSAGEINFO1 v1;};
struct _DXGK_POWER_RUNTIME_STATE {ULONGLONG TransitionLatency;ULONGLONG ResidencyRequirement;ULONG NominalPower;};
struct _FILE_FS_SIZE_INFORMATION {LARGE_INTEGER TotalAllocationUnits;LARGE_INTEGER AvailableAllocationUnits;ULONG SectorsPerAllocationUnit;ULONG BytesPerSector;};
struct _FSCTL_OFFLOAD_READ_INPUT {ULONG Size;ULONG Flags;ULONG TokenTimeToLive;ULONG Reserved;ULONGLONG FileOffset;ULONGLONG CopyLength;};
struct _FSVIDEO_MODE_INFORMATION {VIDEO_MODE_INFORMATION VideoMode;VIDEO_MEMORY_INFORMATION VideoMemory;};
struct _FrequencyRangeDescriptor {UCHAR Origin;ULONG MinVSyncNumerator;ULONG MinVSyncDenominator;ULONG MaxVSyncNumerator;ULONG MaxVSyncDenominator;ULONG MinHSyncNumerator;ULONG MinHSyncDenominator;ULONG MaxHSyncNumerator;ULONG MaxHSyncDenominator;ULONG ConstraintType;ULONG ActiveWidth;ULONG ActiveHeight;ULONG MaxPixelRate;};
struct _GET_LOCAL_HOST_INFO7_W2K {ULONG HostDmaCapabilities;ULARGE_INTEGER MaxDmaBufferSize;ULONG MaxOutstandingXmitRequests;ULONG MaxOutstandingXmitResponses;};
struct _GET_LOCAL_HOST_INFO7_WXP {ULONG HostDmaCapabilities;ULARGE_INTEGER MaxDmaBufferSize;};
struct _GET_PARTITION_ATTRIBUTES {ULONG Version;ULONG Reserved1;ULONGLONG Attributes;};
struct _GetPathConfiguration_OUT {ULONG EntryCount;SCSI_ADDR Address[1];};
struct _GetPersistentBinding2_IN {UCHAR PortWWN[8];ULONG InEntryCount;};
struct _GetPresharedKeyForId_OUT {ULONG Status;ULONGLONG SecurityFlags;};
struct _ICMPV4_TIMESTAMP_MESSAGE {ICMPV4_MESSAGE Header;UINT32 OriginateTimestamp;UINT32 ReceiveTimestamp;UINT32 TransmitTimestamp;};
struct _IDE_VENDOR_DEFINED_POWER {UCHAR ValidGuids;GUID Guid[3];};
struct _IMAGE_RESOURCE_DIRECTORY {ULONG Characteristics;ULONG TimeDateStamp;USHORT MajorVersion;USHORT MinorVersion;USHORT NumberOfNamedEntries;USHORT NumberOfIdEntries;};
struct _INJECT_HARDWARE_ERROR_IN {ULONG ErrorType;ULONGLONG Parameter1;ULONGLONG Parameter2;ULONGLONG Parameter3;ULONGLONG Parameter4;};
struct _IPV6_OPTION_ROUTER_ALERT {IPV6_OPTION_HEADER Header;UINT8 Value[2];};
struct _KSM_BDA_SCAN_CAPABILTIES {KSMETHOD Method;GUID uuidBroadcastStandard;};
struct _MM_PHYSICAL_ADDRESS_LIST {PHYSICAL_ADDRESS PhysicalAddress;SIZE_T NumberOfBytes;};
struct _MP_DEVICE_DATA_SET_RANGE {LONGLONG StartingOffset;ULONGLONG LengthInBytes;};
struct _MSDiskDriver_Performance {WMI_DISK_PERFORMANCE PerfData;CHAR VariableData[1];};
struct _MSNdis_HDSplitParameters {MSNdis_ObjectHeader Header;ULONG HDSplitCombineFlags;};
struct _MSNdis_PciDeviceProperty {MSNdis_ObjectHeader Header;ULONG DeviceType;ULONG CurrentSpeedAndMode;ULONG CurrentPayloadSize;ULONG MaxPayloadSize;ULONG MaxReadRequestSize;ULONG CurrentLinkSpeed;ULONG CurrentLinkWidth;ULONG MaxLinkSpeed;ULONG MaxLinkWidth;};
struct _MSNdis_ReceiveFilterInfo {MSNdis_ObjectHeader Header;ULONG Flags;ULONG FilterType;ULONG FilterId;};
struct _MSV1_0_INTERACTIVE_LOGON {MSV1_0_LOGON_SUBMIT_TYPE MessageType;UNICODE_STRING LogonDomainName;UNICODE_STRING UserName;UNICODE_STRING Password;};
struct _MSiSCSI_HBASessionConfig {BOOLEAN InitialR2T;BOOLEAN ImmediateData;ULONG MaxRecvDataSegmentLength;ULONG MaxBurstLength;ULONG FirstBurstLength;ULONG MaxOutstandingR2T;};
struct _MSiSCSI_PersistentLogins {ULONG PersistentLoginCount;ULONG Reserved;ISCSI_Persistent_Login PersistentLogins[1];};
struct _NAMED_PIPE_INFORMATION_1 {USHORT OutputBufferSize;USHORT InputBufferSize;UCHAR MaximumInstances;UCHAR CurrentInstances;UCHAR PipeNameLength;UCHAR PipeName[1];};
struct _NDIS_HD_SPLIT_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG HardwareCapabilities;ULONG CurrentCapabilities;ULONG HDSplitFlags;ULONG BackfillSize;ULONG MaxHeaderSize;};
struct _NDIS_HD_SPLIT_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG HDSplitCombineFlags;};
struct _NDIS_TAPI_GET_DEV_CONFIG {ULONG ulRequestID;ULONG ulDeviceID;ULONG ulDeviceClassSize;ULONG ulDeviceClassOffset;VAR_STRING DeviceConfig;};
struct _NDIS_TAPI_MONITOR_DIGITS {HDRV_CALL hdCall;ULONG ulDigitModes;};
struct _NDIS_TAPI_SET_DEV_CONFIG {ULONG ulRequestID;ULONG ulDeviceID;ULONG ulDeviceClassSize;ULONG ulDeviceClassOffset;ULONG ulDeviceConfigSize;UCHAR DeviceConfig[1];};
struct _NDIS_TAPI_SET_MEDIA_MODE {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulMediaMode;};
struct _NDIS_WMI_PM_ADMIN_CONFIG {NDIS_OBJECT_HEADER Header;NDIS_PM_ADMIN_CONFIG_STATE WakeOnPattern;NDIS_PM_ADMIN_CONFIG_STATE WakeOnMagicPacket;NDIS_PM_ADMIN_CONFIG_STATE DeviceSleepOnDisconnect;NDIS_PM_ADMIN_CONFIG_STATE PMARPOffload;NDIS_PM_ADMIN_CONFIG_STATE PMNSOffload;NDIS_PM_ADMIN_CONFIG_STATE PMWiFiRekeyOffload;};
struct _NDIS_WWAN_AUTH_CHALLENGE {NDIS_OBJECT_HEADER Header;WWAN_AUTH_CHALLENGE AuthChallenge;};
struct _NL_BANDWIDTH_INFORMATION {ULONG64 Bandwidth;ULONG64 Instability;BOOLEAN BandwidthPeaked;};
union _PCI_EXPRESS_SRIOV_STATUS {struct _PCI_EXPRESS_SRIOV_STATUS___230D8E9DD6D1B7B03EB5AF197C5956F1 s;USHORT AsUSHORT;};
union _PCW_CALLBACK_INFORMATION {PCW_COUNTER_INFORMATION AddCounter;PCW_COUNTER_INFORMATION RemoveCounter;PCW_MASK_INFORMATION EnumerateInstances;PCW_MASK_INFORMATION CollectData;};
struct _POWER_MONITOR_INVOCATION {BOOLEAN On;BOOLEAN Console;POWER_MONITOR_REQUEST_REASON RequestReason;};
struct _RemovePersistentEntry_IN {UCHAR PortWWN[8];HBAFCPBindingEntry2 Binding;};
struct _SES_SAS_SLOT_INFORMATION {UCHAR NumberOfPhyDescriptors;unsigned char NotAllPhys : 1;unsigned char Reserved1 : 5;unsigned char Type : 2;UCHAR Reserved2;UCHAR DeviceSlotNumber;SES_PHY_DESCRIPTOR PhyDescriptors[1];};
struct _SET_ERROR_SOURCE_INFO_IN {ULONG Length;UCHAR ErrorSourceInfo[1];};
struct _SOCKET_SECURITY_SETTINGS {SOCKET_SECURITY_PROTOCOL SecurityProtocol;ULONG SecurityFlags;};
struct _STOR_FREE_EL_RECORD_ARGS {PVOID TraceContext;PSTORAGE_ERRORLOG_PACKET ErrorLogPacket;};
struct _STOR_LOG_DIAG_EVENT_ARGS {PVOID TraceContext;PVOID ContextEvent;ULONG result;};
struct _STOR_POFX_FSTATE_CONTEXT {STOR_POWER_CONTROL_HEADER Header;ULONG ComponentIndex;ULONG FState;};
struct _STOR_WMI_REGCONTROL_ARGS {PVOID DeviceObject;ULONG Action;ULONG result;};
struct _SWENUM_INSTALL_INTERFACE {GUID DeviceId;GUID InterfaceId;WCHAR ReferenceString[1];};
struct _SYSTEM_POWER_INFORMATION {ULONG MaxIdlenessAllowed;ULONG Idleness;ULONG TimeRemaining;UCHAR CoolingMode;};
struct _SetRADIUSSharedSecret_IN {ULONG SharedSecretSize;UCHAR SharedSecret[1];};
struct _TA_ADDRESS_IP6___AddrIp6 {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_IP6 Address[1];};
struct _TA_ADDRESS_IPX___AddrIpx {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_IPX Address[1];};
struct _TA_ADDRESS_VNS___AddrVns {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_VNS Address[1];};
struct _USB_EXTHUB_INFORMATION_0 {ULONG InformationLevel;ULONG NumberOfPorts;USB_EXTPORT_INFORMATION_0 Port[255];};
struct _VIDEO_COLOR_CAPABILITIES {ULONG Length;ULONG AttributeFlags;LONG RedPhosphoreDecay;LONG GreenPhosphoreDecay;LONG BluePhosphoreDecay;LONG WhiteChromaticity_x;LONG WhiteChromaticity_y;LONG WhiteChromaticity_Y;LONG RedChromaticity_x;LONG RedChromaticity_y;LONG GreenChromaticity_x;LONG GreenChromaticity_y;LONG BlueChromaticity_x;LONG BlueChromaticity_y;LONG WhiteGamma;LONG RedGamma;LONG GreenGamma;LONG BlueGamma;};
struct _VIDEO_MEMORY_INFORMATION {PVOID VideoRamBase;ULONG VideoRamLength;PVOID FrameBufferBase;ULONG FrameBufferLength;};
struct _WMI_TAPE_PROBLEM_WARNING {ULONG DriveProblemType;UCHAR TapeData[512];};
struct _WWAN_AUTH_AKAP_CHALLENGE {UCHAR Rand[16];UCHAR Autn[16];UCHAR NetworkName[256];ULONG NetworkNameLength;};
struct _WmiEnumReceiveFilters_IN {MSNdis_WmiMethodHeader Header;MSNdis_ReceiveFilterInfoArray ReceiveFilterInfoArray;};
struct DOT11_ERP_PHY_ATTRIBUTES {DOT11_HRDSSS_PHY_ATTRIBUTES __anonymous0;BOOLEAN bERPPBCCOptionImplemented;BOOLEAN bDSSSOFDMOptionImplemented;BOOLEAN bShortSlotTimeOptionImplemented;};
struct DOT11_LINK_QUALITY_ENTRY {DOT11_MAC_ADDRESS PeerMacAddr;UCHAR ucLinkQuality;};
typedef PUCHAR (*DSM_DEVICE_SERIAL_NUMBER)(PVOID DsmContext, PVOID DsmId);
typedef NTSTATUS ( *DXGKCB_GETCAPTUREADDRESS)(INOUT_PDXGKARGCB_GETCAPTUREADDRESS);
typedef NTSTATUS  DXGKDDI_RESETFROMTIMEOUT(IN_CONST_HANDLE hAdapter);
typedef void PCI_EXPRESS_WAKE_CONTROL(PVOID Context, BOOLEAN EnableWake);
typedef void (*PDEVICE_NOTIFY_CALLBACK2)(PVOID NotificationContext, ULONG NotifyCode);
typedef void (*PGET_WALL_CLOCK_REGISTER)(PVOID context, PULONG *Wallclock);
typedef NTSTATUS ( *PMRX_DEALLOCATE_FOR_FOBX)(PMRX_FOBX Fobx);
typedef NTSTATUS (*PRXCE_IND_ENDPOINT_ERROR)(PVOID pRxCeEventContext, NTSTATUS Status);
typedef NTSTATUS ( *PUSB_BUSIFFN_SUSPEND_HUB)(PDEVICE_OBJECT Pdo);
typedef VP_STATUS (*PVIDEO_HW_CHILD_CALLBACK)(PVOID HwDeviceExtension, PVOID ChildDeviceExtension);
typedef PF_FORWARD_ACTION (*PacketFilterExtensionPtr)(unsigned char *PacketHeader, unsigned char *Packet, unsigned int PacketLength, unsigned int RecvInterfaceIndex, unsigned int SendInterfaceIndex, IPAddr RecvLinkNextHop, IPAddr SendLinkNextHop);
typedef void (*ProviderPnPPowerComplete)(PNET_PNP_EVENT NetEvent, NTSTATUS ProviderStatus);
typedef PVOID  RTL_AVL_ALLOCATE_ROUTINE(struct _RTL_AVL_TABLE *Table, CLONG ByteSize);
typedef BOOLEAN STOR_SYNCHRONIZED_ACCESS(PVOID HwDeviceExtension, PVOID Context);
struct _ACPI_EVAL_OUTPUT_BUFFER {ULONG Signature;ULONG Length;ULONG Count;ACPI_METHOD_ARGUMENT Argument[1];};
struct _API_SET_NAMESPACE_ARRAY {ULONG Version;ULONG Count;API_SET_NAMESPACE_ENTRY Array[1];};
struct _BDA_CAS_CLOSE_MMIDIALOG {PBDARESULT lResult;ULONG SessionResult;};
struct _CDROM_TOC_FULL_TOC_DATA {UCHAR Length[2];UCHAR FirstCompleteSession;UCHAR LastCompleteSession;CDROM_TOC_FULL_TOC_DATA_BLOCK Descriptors[];};
struct _CHANGER_EXCHANGE_MEDIUM {CHANGER_ELEMENT Transport;CHANGER_ELEMENT Source;CHANGER_ELEMENT Destination1;CHANGER_ELEMENT Destination2;BOOLEAN Flip1;BOOLEAN Flip2;};
struct _CM_KEYBOARD_DEVICE_DATA {USHORT Version;USHORT Revision;UCHAR Type;UCHAR Subtype;USHORT KeyboardFlags;};
struct _CO_GET_CALL_INFORMATION {ULONG CallInfoType;ULONG CallInfoLength;PVOID CallInfoBuffer;};
struct _D3DKMDT_PREEMPTION_CAPS {D3DKMDT_GRAPHICS_PREEMPTION_GRANULARITY GraphicsPreemptionGranularity;D3DKMDT_COMPUTE_PREEMPTION_GRANULARITY ComputePreemptionGranularity;};
struct _DOT11_STATUS_INDICATION {ULONG uStatusType;NDIS_STATUS ndisStatus;};
struct _DOT11_SUPPORTED_ANTENNA {ULONG uAntennaListIndex;BOOLEAN bSupportedAntenna;};
struct _DOT11_VWIFI_COMBINATION {NDIS_OBJECT_HEADER Header;ULONG uNumInfrastructure;ULONG uNumAdhoc;ULONG uNumSoftAP;};
struct _DOT11_WFD_ADDITIONAL_IE {NDIS_OBJECT_HEADER Header;ULONG uBeaconIEsOffset;ULONG uBeaconIEsLength;ULONG uProbeResponseIEsOffset;ULONG uProbeResponseIEsLength;ULONG uDefaultRequestIEsOffset;ULONG uDefaultRequestIEsLength;};
struct _DOT11_WME_AC_PARAMETERS {UCHAR ucAccessCategoryIndex;UCHAR ucAIFSN;UCHAR ucECWmin;UCHAR ucECWmax;USHORT usTXOPLimit;};
struct _DSM_Load_Balance_Policy {ULONG Version;ULONG LoadBalancePolicy;ULONG DSMPathCount;ULONG Reserved;MPIO_DSM_Path DSM_Paths[1];};
struct _DXGKARG_CLOSEALLOCATION {UINT NumAllocations; HANDLE *pOpenHandleList;};
struct _DXGK_ALLOCATIONGROUPOUT {UINT NbAllocationGroup;DXGK_ALLOCATIONGROUPDESCRIPTOR *pAllocationGroupDescriptor;};
struct _DXGK_CHILD_CAPABILITIES {union _DXGK_CHILD_CAPABILITIES___9DDE597FBE4C2FCE091CE12E5A13564E Type;DXGK_CHILD_DEVICE_HPD_AWARENESS HpdAwareness;};
struct _DXGK_CHILD_CONTAINER_ID {GUID ContainerId;struct _DXGK_CHILD_CONTAINER_ID___8F96A48BE5F5F140B50E0E2C33F50352 EldInfo;};
struct _DXGK_VIRTUALADDRESSCAPS {_DXGK_VIRTUALADDRESSCAPS___B92D749DF1DD3B9524F85FA541BF8C4B __anonymous0;UINT VirtualAddressBitCount;UINT PageTableCoverageBitCount;UINT PageDirectoryEntrySize;UINT PageDirectorySegment;UINT PageTableSegment;UINT IdealGPUPageSize;};
struct _EISA_PORT_CONFIGURATION {EISA_PORT_DESCRIPTOR Configuration;USHORT PortAddress;};
struct _EVENT_FILTER_DESCRIPTOR {ULONGLONG Ptr;ULONG Size;ULONG Type;};
struct _FILE_NOTIFY_INFORMATION {ULONG NextEntryOffset;ULONG Action;ULONG FileNameLength;WCHAR FileName[1];};
struct _FORMATTED_CAPACITY_LIST {UCHAR Reserved[3];UCHAR CapacityListLength;FORMATTED_CAPACITY_DESCRIPTOR Descriptors[];};
struct _FSVIDEO_CURSOR_POSITION {VIDEO_CURSOR_POSITION Coord;ULONG dwType;};
struct _GetFcpTargetMapping_OUT {ULONG HBAStatus;ULONG TotalEntryCount;ULONG OutEntryCount;HBAFCPScsiEntry Entry[1];};
struct _GetPresharedKeyForId_IN {ULONG PortNumber;UCHAR IdType;ULONG IdSize;UCHAR Id[1];};
struct _IMAGE_IMPORT_DESCRIPTOR {union _IMAGE_IMPORT_DESCRIPTOR___32690C7EF5B9C640E059CDC11577DADC u;ULONG TimeDateStamp;ULONG ForwarderChain;ULONG Name;ULONG FirstThunk;};
struct _IO_SESSION_CONNECT_INFO {ULONG SessionId;BOOLEAN LocalSession;};
struct _IRB_REQ_SEND_PHY_PACKET {ULONG Flags;ULONG GenerationCount;ULARGE_INTEGER PhyPacket;};
struct _ISCSI_TargetPortalGroup {ULONG PortalCount;ISCSI_TargetPortal Portals[1];};
struct _KSPROCESSPIN_INDEXENTRY {PKSPROCESSPIN *Pins;ULONG Count;};
struct _MF_VARYING_RESOURCE_MAP {ULONG Count;MF_VARYING_RESOURCE_ENTRY Resources[1];};
struct _MODE_DATA_COMPRESS_PAGE {MODE_PARAMETER_HEADER ParameterListHeader;MODE_DATA_COMPRESSION_PAGE DataCompressPage;};
struct _MODE_DEVICE_CONFIG_PAGE {MODE_PARAMETER_HEADER ParameterListHeader;MODE_DEVICE_CONFIGURATION_PAGE DeviceConfigPage;};
struct _MSFC_DH_Chap_Parameters {ULONG SharedSecretLength;UCHAR SecretEncoding;UCHAR SharedSecret[1];};
struct _MSNdis_80211_Statistics {ULONG StatisticsLength;ULONGLONG TransmittedFragmentCount;ULONGLONG MulticastTransmittedFrameCount;ULONGLONG FailedCount;ULONGLONG RetryCount;ULONGLONG MultipleRetryCount;ULONGLONG RTSSuccessCount;ULONGLONG RTSFailureCount;ULONGLONG ACKFailureCount;ULONGLONG FrameDuplicateCount;ULONGLONG ReceivedFragmentCount;ULONGLONG MulticastReceivedFrameCount;ULONGLONG FCSErrorCount;};
struct _MSiSCSI_BootInformation {UCHAR NodeName[223];ULONG SharedSecretLength;UCHAR SharedSecret[255];};
struct _MSiSCSI_PortalInfoClass {ULONG PortalInfoCount;ISCSI_PortalInfo PortalInformation[1];};
struct _NDIS_TAPI_CONFIG_DIALOG {ULONG ulRequestID;ULONG ulDeviceID;ULONG ulDeviceClassSize;ULONG ulDeviceClassOffset;ULONG ulLibraryNameTotalSize;ULONG ulLibraryNameNeededSize;CHAR szLibraryName[1];};
struct _NDIS_WAN_GET_STATS_INFO {NDIS_HANDLE NdisLinkHandle;ULONG BytesSent;ULONG BytesRcvd;ULONG FramesSent;ULONG FramesRcvd;ULONG CRCErrors;ULONG TimeoutErrors;ULONG AlignmentErrors;ULONG SerialOverrunErrors;ULONG FramingErrors;ULONG BufferOverrunErrors;ULONG BytesTransmittedUncompressed;ULONG BytesReceivedUncompressed;ULONG BytesTransmittedCompressed;ULONG BytesReceivedCompressed;ULONG TunnelPacketsRecieved;ULONG TunnelRecievePacketsPending;ULONG TunnelPacketsIndicatedUp;ULONG TunnelRecievePacketsRejected;ULONG TunnelPacketsSent;ULONG TunnelPacketsSentComplete;ULONG TunnelTransmitPacketsPending;ULONG TunnelPacketsTransmitError;ULONG TunnelPacketsSentError;ULONG TunnelTransmitPacketsRejected;ULONG TunnelAcksSent;ULONG TunnelAcksSentComplete;ULONG TunnelGeneric1;ULONG TunnelGeneric2;ULONG TunnelGeneric3;};
struct _NDIS_WMI_GROUP_AFFINITY {ULONG64 Mask;USHORT Group;USHORT Reserved[3];};
struct _NODE_TYPE_CODE_AND_SIZE {_NODE_TYPE_CODE_AND_SIZE_NO_REFCOUNT __anonymous0;ULONG NodeReferenceCount;};
union _PCI_EXPRESS_ACS_CONTROL {struct _PCI_EXPRESS_ACS_CONTROL___B4802C50A88B1C851D0BA896AA846108 s;USHORT AsUSHORT;};
struct _PCW_COUNTER_INFORMATION {ULONG64 CounterMask;PCUNICODE_STRING InstanceMask;};
struct _PERF_CONFIGURATION_DATA {ULONG Version;ULONG Size;ULONG Flags;ULONG ConcurrentChannels;ULONG FirstRedirectionMessageNumber;ULONG LastRedirectionMessageNumber;ULONG DeviceNode;ULONG Reserved;PGROUP_AFFINITY MessageTargets;};
struct _POWER_SESSION_RIT_STATE {BOOLEAN Active;ULONG LastInputTime;};
struct _S3PT_PERFORMANCE_RECORD {S3PT_RECORD_HEADER RecordHeader;union _S3PT_PERFORMANCE_RECORD___16C2A8189807F211EDAAD51AD750EDA0 u;};
struct _STORAGE_PREDICT_FAILURE {ULONG PredictFailure;UCHAR VendorSpecific[512];};
struct _STOR_SYSTEM_POWER_HINTS {ULONG Version;ULONG Size;RAID_SYSTEM_POWER SystemPower;ULONG ResumeLatencyMSec;};
struct _SetGroupPresharedKey_IN {ULONG KeySize;UCHAR Key[1];};
struct _SpanningEventDescriptor {WORD wDataLen;WORD wProgNumber;WORD wSID;BYTE bDescriptor[1];};
struct _USBD_STREAM_INFORMATION {USBD_PIPE_HANDLE PipeHandle;ULONG StreamID;ULONG MaximumTransferSize;ULONG PipeFlags;};
struct _USB_ENDPOINT_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bEndpointAddress;UCHAR bmAttributes;USHORT wMaxPacketSize;UCHAR bInterval;};
union _WHEA_ERROR_PACKET_FLAGS {struct _WHEA_ERROR_PACKET_FLAGS___C7D1ECE9C01D92286062F80E9BABF03D s;ULONG AsULONG;};
struct _WHEA_IPF_CMC_DESCRIPTOR {USHORT Type;UCHAR Enabled;UCHAR Reserved;};
struct _WHEA_IPF_CPE_DESCRIPTOR {USHORT Type;UCHAR Enabled;UCHAR Reserved;};
struct _WHEA_IPF_MCA_DESCRIPTOR {USHORT Type;UCHAR Enabled;UCHAR Reserved;};
union _WHEA_NOTIFICATION_FLAGS {struct _WHEA_NOTIFICATION_FLAGS___D9F8BA727F02FA7D5CD681B2EFB762AC s;USHORT AsUSHORT;};
union _WHEA_PCIEXPRESS_VERSION {struct _WHEA_PCIEXPRESS_VERSION___F373AF903B78102C712ED151F57F9067 s;ULONG AsULONG;};
struct _WHEA_XPF_NMI_DESCRIPTOR {USHORT Type;BOOLEAN Enabled;};
struct _WWAN_AUTH_AKAP_RESPONSE {UCHAR Res[16];ULONG ResLength;UCHAR IKP[16];UCHAR CKP[16];UCHAR Auts[14];};
struct _WWAN_AUTH_SIM_CHALLENGE {UCHAR Rand1[16];UCHAR Rand2[16];UCHAR Rand3[16];ULONG n;};
struct _WmiEnumReceiveQueues_IN {MSNdis_WmiMethodHeader Header;MSNdis_ReceiveQueueInfoArray ReceiveQueueInfoArray;};
struct _WmiSetLinkParameters_IN {MSNdis_WmiMethodHeader MethodHeader;MSNdis_LinkParameters LinkParameters;};
struct _WmiSetPortParameters_IN {MSNdis_WmiMethodHeader MethodHeader;MSNdis_PortAuthParameters PortParameters;};
struct digiadpcmmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct g721_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD nAuxBlockSize;};
struct g723_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD cbExtraSize;WORD nAuxBlockSize;};
struct DOT11_EXTSTA_CAPABILITY {NDIS_OBJECT_HEADER Header;ULONG uScanSSIDListSize;ULONG uDesiredBSSIDListSize;ULONG uDesiredSSIDListSize;ULONG uExcludedMacAddressListSize;ULONG uPrivacyExemptionListSize;ULONG uKeyMappingTableSize;ULONG uDefaultKeyTableSize;ULONG uWEPKeyValueMaxLength;ULONG uPMKIDCacheSize;ULONG uMaxNumPerSTADefaultKeyTables;};
struct DOT11_KEY_ALGO_TKIP_MIC {UCHAR ucIV48Counter[6];ULONG ulTKIPKeyLength;ULONG ulMICKeyLength;UCHAR ucTKIPMICKeys[1];};
typedef void ( *DXGKCB_NOTIFY_INTERRUPT)(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARGCB_NOTIFY_INTERRUPT_DATA);
typedef BOOLEAN MINIPORT_CHECK_FOR_HANG(NDIS_HANDLE MiniportAdapterContext);
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBReceiveFilterHook_v3)(PSEND_RECEIVE_HOOK_INFO SendReceiveInfoPtr);
typedef BOOLEAN (*PACQUIRE_FOR_LAZY_WRITE)(PVOID Context, BOOLEAN Wait);
typedef BOOLEAN (*PACQUIRE_FOR_READ_AHEAD)(PVOID Context, BOOLEAN Wait);
typedef NTSTATUS (*PAGP_BUS_RELEASE_MEMORY)(PVOID AgpContext, PVOID MapHandle);
typedef void (*PBANKED_SECTION_ROUTINE)(ULONG ReadBank, ULONG WriteBank, PVOID Context);
typedef void PCI_ROOT_BUS_CAPABILITY(PVOID Context, PPCI_ROOT_BUS_HARDWARE_CAPABILITY HardwareCapability);
typedef void (*PDEVICE_NOTIFY_CALLBACK)(PVOID, ULONG);
typedef void (*PDRIVER_EXCPTN_CALLBACK)(PVOID Context, PMCA_EXCEPTION BankLog);
typedef void (*PFNKSFILTERFACTORYPOWER)(PKSFILTERFACTORY FilterFactory, DEVICE_POWER_STATE State);
typedef NTSTATUS (*PGPE_DISCONNECT_VECTOR2)(PVOID Context, PVOID ObjectContext);
typedef NTSTATUS ( *PMRX_DEALLOCATE_FOR_FCB)(PMRX_FCB Fcb);
typedef NTSTATUS (*PRXCE_IND_SEND_COMPLETE)(PVOID pEventContext, PVOID pCompletionContext, NTSTATUS Status);
typedef PVOID (*PStorPortGetOriginalMdl)(PSCSI_REQUEST_BLOCK Srb);
typedef NTSTATUS ( *PUSB_BUSIFFN_RESUME_HUB)(PDEVICE_OBJECT Pdo);
typedef void (*PVIDEO_WRITE_CLOCK_LINE)(PVOID HwDeviceExtension, UCHAR Data);
typedef RTL_GENERIC_COMPARE_RESULTS  RTL_AVL_COMPARE_ROUTINE(struct _RTL_AVL_TABLE *Table, PVOID FirstStruct, PVOID SecondStruct);
struct _ACPI_EVAL_INPUT_BUFFER {ULONG Signature;union _ACPI_EVAL_INPUT_BUFFER___CFC7B0DA028A7F4F3B52DE418131CED1 u;};
struct _ATM_TRAFFIC_DESCRIPTOR {ULONG PeakCellRateCLP0;ULONG PeakCellRateCLP01;ULONG SustainableCellRateCLP0;ULONG SustainableCellRateCLP01;ULONG MaximumBurstSizeCLP0;ULONG MaximumBurstSizeCLP01;BOOLEAN Tagging;};
struct _CDB___SPACE_TAPE_MARKS {UCHAR OperationCode;unsigned char Code : 3;unsigned char Reserved : 2;unsigned char LogicalUnitNumber : 3;UCHAR NumMarksMSB;UCHAR NumMarks;UCHAR NumMarksLSB;union _CDB___SPACE_TAPE_MARKS___452053D96BC8D647FEF06A172E57CD82 Byte6;};
struct _CDROM_EXCLUSIVE_ACCESS {EXCLUSIVE_ACCESS_REQUEST_TYPE RequestType;ULONG Flags;};
struct _CDROM_TOC_CD_TEXT_DATA {UCHAR Length[2];UCHAR Reserved1;UCHAR Reserved2;CDROM_TOC_CD_TEXT_DATA_BLOCK Descriptors[];};
struct _CDROM_TOC_SESSION_DATA {UCHAR Length[2];UCHAR FirstCompleteSession;UCHAR LastCompleteSession;TRACK_DATA TrackData[1];};
struct _CHANNEL_CONFIG_RESULTS {CHANNEL_CONFIG_PARAMETERS Params;ULONG ExtraOptionsBufferSize;};
struct _CLS_ARCHIVE_DESCRIPTOR {ULONGLONG coffLow;ULONGLONG coffHigh;CLS_CONTAINER_INFORMATION infoContainer;};
struct _CO_SPECIFIC_PARAMETERS {ULONG ParamType;ULONG Length;UCHAR Parameters[1];};
struct _CreateVirtualPortEx_IN {UCHAR WWPN[8];UCHAR WWNN[8];UCHAR Tag[16];USHORT VirtualName[64];};
struct _DEVICE_TRIM_DESCRIPTOR {ULONG Version;ULONG Size;BOOLEAN TrimEnabled;};
struct _DOT11_RECV_SENSITIVITY {UCHAR ucDataRate;LONG lRSSIMin;LONG lRSSIMax;};
struct _DXGKARG_PREEMPTCOMMAND {UINT PreemptionFenceId;UINT NodeOrdinal;UINT EngineOrdinal;DXGK_PREEMPTCOMMANDFLAGS Flags;};
struct _DXGK_DEVICE_DESCRIPTOR {ULONG DescriptorOffset;ULONG DescriptorLength;PVOID DescriptorBuffer;};
struct _DXGK_WIN32K_PARAM_DATA {PVOID PathsArray;PVOID ModesArray;ULONG NumPathArrayElements;ULONG NumModeArrayElements;ULONG SDCFlags;};
struct _EISA_DMA_CONFIGURATION {DMA_CONFIGURATION_BYTE0 ConfigurationByte0;DMA_CONFIGURATION_BYTE1 ConfigurationByte1;};
struct _EISA_IRQ_CONFIGURATION {EISA_IRQ_DESCRIPTOR ConfigurationByte;UCHAR Reserved;};
struct _FILE_BASIC_INFORMATION {LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;ULONG FileAttributes;};
struct _FILE_LINKS_INFORMATION {ULONG BytesNeeded;ULONG EntriesReturned;FILE_LINK_ENTRY_INFORMATION Entry;};
struct _FILE_NAMES_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;ULONG FileNameLength;WCHAR FileName[1];};
struct _GetFcpTargetMapping_IN {UCHAR HbaPortWWN[8];ULONG InEntryCount;};
struct _HDAUDIO_CODEC_TRANSFER {HDAUDIO_CODEC_COMMAND Output;HDAUDIO_CODEC_RESPONSE Input;};
struct _IDE_MINIPORT_RESOURCES {ULONG NumberOfAccessRanges;PIDE_ACCESS_RANGE IdeAccessRange;};
struct _IF_PHYSICAL_ADDRESS_LH {USHORT Length;UCHAR Address[32];};
struct _IMAGE_EXPORT_DIRECTORY {ULONG Characteristics;ULONG TimeDateStamp;USHORT MajorVersion;USHORT MinorVersion;ULONG Name;ULONG Base;ULONG NumberOfFunctions;ULONG NumberOfNames;ULONG AddressOfFunctions;ULONG AddressOfNames;ULONG AddressOfNameOrdinals;};
struct _IMAGE_FUNCTION_ENTRY64 {ULONGLONG StartingAddress;ULONGLONG EndingAddress;union _IMAGE_FUNCTION_ENTRY64___20B872DD2F1538A436CF92B8294FA12B u;};
struct _IRB_REQ_GET_CONFIG_ROM {ULONG GenerationCount;PCROM ConfigRom;ULONG UnitDirectoryIndex;ULONG UnitDependentDirectoryIndex;ULONG VendorLeafIndex;ULONG ModelLeafIndex;};
struct _KEY_CACHED_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG SubKeys;ULONG MaxNameLen;ULONG Values;ULONG MaxValueNameLen;ULONG MaxValueDataLen;ULONG NameLength;};
struct _KSM_BDA_EVENT_COMPLETE {KSMETHOD Method;ULONG ulEventID;ULONG ulEventResult;};
struct _KSM_BDA_GPNV_NAMEINDEX {KSMETHOD Method;ULONG ulValueNameIndex;};
struct _LBA_FILTER_TABLE_ENTRY {ULARGE_INTEGER StartLba;ULARGE_INTEGER LbaCount;BOOLEAN ReadLock;BOOLEAN WriteLock;};
struct _LBA_STATUS_LIST_HEADER {ULONG ParameterLength;ULONG Reserved;LBA_STATUS_DESCRIPTOR Descriptors[];};
struct _MSNdis_StatusLinkState {ULONG NumberElements;UCHAR NdisLinkStateStatusIndication[1];};
struct _MSNdis_StatusPortState {ULONG NumberElements;UCHAR NdisPortStateStatusIndication[1];};
struct _MSSmBios_Sysid1394List {ULONG Count;SYSID_1394 List[1];};
struct _MSSmBios_SysidUUIDList {ULONG Count;SYSID_UUID List[1];};
struct _MSWmi_PnPInstanceNames {ULONG Count;WCHAR InstanceNameList[1];};
struct _NDIS_802_11_BSSID_LIST {ULONG NumberOfItems;NDIS_WLAN_BSSID Bssid[1];};
struct _NDIS_802_11_CAPABILITY {ULONG Length;ULONG Version;ULONG NoOfPMKIDs;ULONG NoOfAuthEncryptPairsSupported;NDIS_802_11_AUTHENTICATION_ENCRYPTION AuthenticationEncryptionSupported[1];};
struct _NDIS_802_11_REMOVE_KEY {ULONG Length;ULONG KeyIndex;NDIS_802_11_MAC_ADDRESS BSSID;};
struct _NDIS_802_11_STATISTICS {ULONG Length;LARGE_INTEGER TransmittedFragmentCount;LARGE_INTEGER MulticastTransmittedFrameCount;LARGE_INTEGER FailedCount;LARGE_INTEGER RetryCount;LARGE_INTEGER MultipleRetryCount;LARGE_INTEGER RTSSuccessCount;LARGE_INTEGER RTSFailureCount;LARGE_INTEGER ACKFailureCount;LARGE_INTEGER FrameDuplicateCount;LARGE_INTEGER ReceivedFragmentCount;LARGE_INTEGER MulticastReceivedFrameCount;LARGE_INTEGER FCSErrorCount;LARGE_INTEGER TKIPLocalMICFailures;LARGE_INTEGER TKIPICVErrorCount;LARGE_INTEGER TKIPCounterMeasuresInvoked;LARGE_INTEGER TKIPReplays;LARGE_INTEGER CCMPFormatErrors;LARGE_INTEGER CCMPReplays;LARGE_INTEGER CCMPDecryptErrors;LARGE_INTEGER FourWayHandshakeFailures;LARGE_INTEGER WEPUndecryptableCount;LARGE_INTEGER WEPICVErrorCount;LARGE_INTEGER DecryptSuccessCount;LARGE_INTEGER DecryptFailureCount;};
struct _NDIS_FILTER_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG Flags;};
struct _NDIS_PM_COUNTED_STRING {USHORT Length;WCHAR String[65];};
struct _NDIS_TAPI_GET_DEV_CAPS {ULONG ulRequestID;ULONG ulDeviceID;ULONG ulExtVersion;LINE_DEV_CAPS LineDevCaps;};
struct _NDIS_WAN_GET_COMP_INFO {NDIS_HANDLE NdisLinkHandle;NDIS_WAN_COMPRESS_INFO SendCapabilities;NDIS_WAN_COMPRESS_INFO RecvCapabilities;};
struct _NDIS_WAN_GET_LINK_INFO {NDIS_HANDLE NdisLinkHandle;ULONG MaxSendFrameSize;ULONG MaxRecvFrameSize;ULONG HeaderPadding;ULONG TailPadding;ULONG SendFramingBits;ULONG RecvFramingBits;ULONG SendCompressionBits;ULONG RecvCompressionBits;ULONG SendACCM;ULONG RecvACCM;};
struct _NDIS_WAN_SET_COMP_INFO {NDIS_HANDLE NdisLinkHandle;NDIS_WAN_COMPRESS_INFO SendCapabilities;NDIS_WAN_COMPRESS_INFO RecvCapabilities;};
struct _NDIS_WAN_SET_LINK_INFO {NDIS_HANDLE NdisLinkHandle;ULONG MaxSendFrameSize;ULONG MaxRecvFrameSize;ULONG HeaderPadding;ULONG TailPadding;ULONG SendFramingBits;ULONG RecvFramingBits;ULONG SendCompressionBits;ULONG RecvCompressionBits;ULONG SendACCM;ULONG RecvACCM;};
struct _NDIS_WWAN_USSD_REQUEST {NDIS_OBJECT_HEADER Header;WWAN_USSD_REQUEST UssdRequest;};
union _NET_BUFFER_DATA_LENGTH {ULONG DataLength;SIZE_T stDataLength;};
struct _OPLOCK_KEY_ECP_CONTEXT {GUID OplockKey;ULONG Reserved;};
union _PCI_EXPRESS_SRIOV_CAPS {struct _PCI_EXPRESS_SRIOV_CAPS___EEE46FBFC49F2EA055853CCCF568835B s;ULONG AsULONG;};
struct _PLEX_READ_DATA_REQUEST {LARGE_INTEGER ByteOffset;ULONG ByteLength;ULONG PlexNumber;};
struct _POWER_SESSION_WINLOGON {ULONG SessionId;BOOLEAN Console;BOOLEAN Locked;};
struct _PROCESS_EXCEPTION_PORT {HANDLE ExceptionPortHandle;ULONG StateFlags;};
struct _RTL_DYNAMIC_HASH_TABLE {ULONG Flags;ULONG Shift;ULONG TableSize;ULONG Pivot;ULONG DivisorMask;ULONG NumEntries;ULONG NonEmptyBuckets;ULONG NumEnumerators;PVOID Directory;};
struct _RX_DISPATCHER_CONTEXT_ {LONG NumberOfWorkerThreads;PKEVENT pTearDownEvent;};
struct _SE_SECURITY_DESCRIPTOR {ULONG Size;ULONG Flags;PSECURITY_DESCRIPTOR SecurityDescriptor;};
struct _STOR_INIT_TRACING_ARGS {PVOID InitInfo;ULONG Result;};
struct _SUB_Q_CURRENT_POSITION {SUB_Q_HEADER Header;UCHAR FormatCode;unsigned char Control : 4;unsigned char ADR : 4;UCHAR TrackNumber;UCHAR IndexNumber;UCHAR AbsoluteAddress[4];UCHAR TrackRelativeAddress[4];};
struct _SetCHAPSharedSecret_IN {ULONG SharedSecretSize;UCHAR SharedSecret[1];};
struct _TA_ADDRESS_IP___AddrIp {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_IP Address[1];};
struct _TA_ADDRESS_NS___AddrNs {USHORT AddressLength;USHORT AddressType;TDI_ADDRESS_NS Address[1];};
struct _TDI_ADDRESS_NETBIOS_EX {UCHAR EndpointName[16];TDI_ADDRESS_NETBIOS NetbiosAddress;};
struct _TDI_DISCONNECT_REQUEST {TDI_REQUEST Request;LARGE_INTEGER Timeout;};
struct _USB_IDLE_CALLBACK_INFO {USB_IDLE_CALLBACK IdleCallback;PVOID IdleContext;};
struct _VPCI_WRITE_BLOCK_INPUT {ULONG BlockId;ULONG DataLength;UCHAR Data[1];};
struct _WHEA_NMI_ERROR_SECTION {UCHAR Data[8];WHEA_NMI_ERROR_SECTION_FLAGS Flags;};
struct _WSA_COMPATIBILITY_MODE {WSA_COMPATIBILITY_BEHAVIOR_ID BehaviorId;ULONG TargetOsVersion;};
struct _WWAN_AUTH_AKA_RESPONSE {UCHAR Res[16];ULONG ResLength;UCHAR IK[16];UCHAR CK[16];UCHAR Auts[14];};
struct _WWAN_AUTH_SIM_RESPONSE {UCHAR Sres1[4];UCHAR Kc1[8];UCHAR Sres2[4];UCHAR Kc2[8];UCHAR Sres3[4];UCHAR Kc3[8];ULONG n;};
struct _pipe_config_descriptor {CHAR StreamAssociation;UCHAR PipeConfigFlags;};
struct dvi_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct ima_adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
typedef NTSTATUS (*pHalInitPowerManagement)(PPM_DISPATCH_TABLE PmDriverDispatchTable, PPM_DISPATCH_TABLE *PmHalDispatchTable);
struct tagKS_DATARANGE_DVVIDEO {KSDATARANGE DataRange;DVINFO DVVideoInfo;};
struct tagVIDEO_MONITOR_DEVICE {ULONG flag;ULONG HwID;BOOLEAN Internal;};
struct DOT11_AUTH_CIPHER_PAIR {DOT11_AUTH_ALGORITHM AuthAlgoId;DOT11_CIPHER_ALGORITHM CipherAlgoId;};
typedef NTSTATUS  DXGKDDI_DESTROYCONTEXT(IN_CONST_HANDLE hContext);
typedef NTSTATUS  DXGKDDI_DESTROYOVERLAY(IN_CONST_HANDLE hOverlay);
typedef SECURITY_STATUS ( *FREE_CONTEXT_BUFFER_FN)(PVOID);
struct HBA_FCPTargetMappingV2 {HBA_UINT32 NumberOfEntries;HBA_FCPSCSIENTRYV2 entry[1];};
typedef void IO_WORKITEM_ROUTINE_EX(PVOID IoObject, PVOID Context, PIO_WORKITEM IoWorkItem);
typedef void MINIPORT_INTERRUPT_DPC(NDIS_HANDLE MiniportInterruptContext, PVOID MiniportDpcContext, PVOID ReceiveThrottleParameters, PVOID NdisReserved2);
struct NDIS_CO_DEVICE_PROFILE {NDIS_VAR_DATA_DESC DeviceDescription;NDIS_VAR_DATA_DESC DevSpecificInfo;ULONG ulTAPISupplementaryPassThru;ULONG ulAddressModes;ULONG ulNumAddresses;ULONG ulBearerModes;ULONG ulMaxTxRate;ULONG ulMinTxRate;ULONG ulMaxRxRate;ULONG ulMinRxRate;ULONG ulMediaModes;ULONG ulGenerateToneModes;ULONG ulGenerateToneMaxNumFreq;ULONG ulGenerateDigitModes;ULONG ulMonitorToneMaxNumFreq;ULONG ulMonitorToneMaxNumEntries;ULONG ulMonitorDigitModes;ULONG ulGatherDigitsMinTimeout;ULONG ulGatherDigitsMaxTimeout;ULONG ulDevCapFlags;ULONG ulMaxNumActiveCalls;ULONG ulAnswerMode;ULONG ulUUIAcceptSize;ULONG ulUUIAnswerSize;ULONG ulUUIMakeCallSize;ULONG ulUUIDropSize;ULONG ulUUISendUserUserInfoSize;ULONG ulUUICallInfoSize;};
typedef PSDP_NODE (*PCREATENODEALTERNATIVE)(ULONG tag);
typedef void (*PFNALLOCATOR_FREEFRAME)(PFILE_OBJECT FileObject, PVOID Frame);
typedef NTSTATUS (*PFNKSFILTERFACTORYVOID)(PKSFILTERFACTORY FilterFactory);
typedef NTSTATUS (*PGPE_DISCONNECT_VECTOR)(PVOID);
typedef NTSTATUS ( *PMRX_CREATE_V_NET_ROOT)(PMRX_CREATENETROOT_CONTEXT Context);
typedef void (*POPLOCK_FS_PREPOST_IRP)(PVOID Context, PIRP Irp);
typedef NTSTATUS PROCESSOR_HALT_ROUTINE(PVOID Context);
typedef BOOLEAN (*PVIDEO_READ_CLOCK_LINE)(PVOID HwDeviceExtension);
typedef void (*PVIDEO_WRITE_DATA_LINE)(PVOID HwDeviceExtension, UCHAR Data);
typedef NTSTATUS  RTL_AVL_MATCH_FUNCTION(struct _RTL_AVL_TABLE *Table, PVOID UserData, PVOID MatchData);
typedef void SDBUS_CALLBACK_ROUTINE(PVOID CallbackRoutineContext, ULONG InterruptType);
struct _ARBITER_CONFLICT_INFO {PDEVICE_OBJECT OwningObject;ULONGLONG Start;ULONGLONG End;};
struct _AVC_SUBUNIT_ADDR_SPEC {ULONG Flags;UCHAR SubunitAddress[1];};
struct _BASEBAND_CHANNEL_INFO {UCHAR Transmission_Interval;UCHAR Retransmission_Window;UCHAR AirMode;USHORT Rx_Packet_Length;USHORT Tx_Packet_Length;};
struct _BDA_IPv4_ADDRESS_LIST {ULONG ulcAddresses;BDA_IPv4_ADDRESS rgAddressl[1];};
struct _BDA_IPv6_ADDRESS_LIST {ULONG ulcAddresses;BDA_IPv6_ADDRESS rgAddressl[1];};
struct _BDA_TUNER_DIAGNOSTICS {PBDARESULT lResult;ULONG ulSignalLevel;ULONG ulSignalLevelQuality;ULONG ulSignalNoiseRatio;};
struct _BRB_GET_LOCAL_BD_ADDR {BRB_HEADER Hdr;BTH_ADDR BtAddress;};
struct _CDROM_SIMPLE_OPC_INFO {CDROM_OPC_INFO_TYPE RequestType;BOOLEAN Exclude0;BOOLEAN Exclude1;};
struct _CDVD_TITLE_KEY_HEADER {UCHAR DataLength[2];UCHAR Reserved1[1];unsigned char Reserved2 : 3;unsigned char CGMS : 2;unsigned char CP_SEC : 1;unsigned char CPM : 1;unsigned char Zero : 1;CDVD_KEY_DATA TitleKey;};
struct _CM_SERIAL_DEVICE_DATA {USHORT Version;USHORT Revision;ULONG BaudClock;};
struct _CO_TAPI_TRANSLATE_SAP {ULONG ulLineID;ULONG ulAddressID;ULONG ulMediaModes;ULONG Reserved;ULONG NumberOfSaps;NDIS_VAR_DATA_DESC NdisSapParams[1];};
struct _D3DDDI_ALLOCATIONLIST {D3DKMT_HANDLE hAllocation;_D3DDDI_ALLOCATIONLIST___C80EEC70EA5C50DBE7190B67C99082D6 __anonymous0;};
struct _DEVICE_DATA_SET_RANGE {LONGLONG StartingOffset;ULONGLONG LengthInBytes;};
struct _DOT11_WFD_DEVICE_TYPE {USHORT CategoryID;USHORT SubCategoryID;UCHAR OUI[4];};
struct _DOT11_WPS_DEVICE_NAME {ULONG uDeviceNameLength;UCHAR ucDeviceName[32];};
struct _DXGK_QUERYSEGMENTOUT2 {UINT SegmentCount;DXGK_SEGMENTDESCRIPTOR2 *pSegmentDescriptor;};
struct _DXGK_QUERYSEGMENTOUT3 {UINT NbSegment;DXGK_SEGMENTDESCRIPTOR3 *pSegmentDescriptor;UINT PagingBufferSegmentId;UINT PagingBufferSize;UINT PagingBufferPrivateDataSize;};
struct _EVENT_DATA_DESCRIPTOR {ULONGLONG Ptr;ULONG Size;ULONG Reserved;};
struct _FILESYSTEM_STATISTICS {USHORT FileSystemType;USHORT Version;ULONG SizeOfCompleteStructure;ULONG UserFileReads;ULONG UserFileReadBytes;ULONG UserDiskReads;ULONG UserFileWrites;ULONG UserFileWriteBytes;ULONG UserDiskWrites;ULONG MetaDataReads;ULONG MetaDataReadBytes;ULONG MetaDataDiskReads;ULONG MetaDataWrites;ULONG MetaDataWriteBytes;ULONG MetaDataDiskWrites;};
struct _FILE_NAME_INFORMATION {ULONG FileNameLength;WCHAR FileName[1];};
struct _FILE_PIPE_PEEK_BUFFER {ULONG NamedPipeState;ULONG ReadDataAvailable;ULONG NumberOfMessages;ULONG MessageLength;CHAR Data[1];};
struct _FILTER_MESSAGE_HEADER {ULONG ReplyLength;ULONGLONG MessageId;};
struct _HDAUDIO_STREAM_FORMAT {ULONG SampleRate;USHORT ValidBitsPerSample;USHORT ContainerSize;USHORT NumberOfChannels;};
struct _HID_DEVICE_ATTRIBUTES {ULONG Size;USHORT VendorID;USHORT ProductID;USHORT VersionNumber;USHORT Reserved[11];};
struct _IGMPV3_REPORT_HEADER_ {UINT8 Type;UINT8 Reserved;UINT16 Checksum;UINT16 Reserved2;UINT16 RecordCount;};
struct _IMAGE_DEBUG_DIRECTORY {ULONG Characteristics;ULONG TimeDateStamp;USHORT MajorVersion;USHORT MinorVersion;ULONG Type;ULONG SizeOfData;ULONG AddressOfRawData;ULONG PointerToRawData;};
struct _IMAGE_TLS_DIRECTORY64 {ULONGLONG StartAddressOfRawData;ULONGLONG EndAddressOfRawData;ULONGLONG AddressOfIndex;ULONGLONG AddressOfCallBacks;ULONG SizeOfZeroFill;ULONG Characteristics;};
struct _INITIAL_PRIVILEGE_SET {ULONG PrivilegeCount;ULONG Control;LUID_AND_ATTRIBUTES Privilege[3];};
struct _IPV6_OPTION_JUMBOGRAM {IPV6_OPTION_HEADER Header;UINT8 JumbogramLength[4];};
struct _KernelIdleStateChange {ULONG NewState;ULONG OldState;ULONGLONG Processors;};
struct _MEMORY_COOLING_REGION {ULONG PowerCommandRegister;ULONG PowerStatusRegister;ULONG PowerStateId;ULONG MpnId;ULONGLONG EnergyConsumed;ULONGLONG ExpectedPowerConsumed;};
struct _MODE_MEDIUM_PART_PAGE {MODE_PARAMETER_HEADER ParameterListHeader;MODE_MEDIUM_PARTITION_PAGE MediumPartPage;};
struct _MOUNTMGR_MOUNT_POINTS {ULONG Size;ULONG NumberOfMountPoints;MOUNTMGR_MOUNT_POINT MountPoints[1];};
struct _MOUNTMGR_VOLUME_PATHS {ULONG MultiSzLength;WCHAR MultiSz[1];};
struct _MPIO_DISK_HEALTH_INFO {ULONG NumberDiskPackets;ULONG Reserved;MPIO_DISK_HEALTH_CLASS DiskHealthPackets[1];};
struct _MPIO_PATH_HEALTH_INFO {ULONG NumberPathPackets;ULONG Reserved;MPIO_PATH_HEALTH_CLASS PathHealthPackets[1];};
struct _MPIO_PATH_INFORMATION {ULONG NumberPaths;ULONG Pad;MPIO_ADAPTER_INFORMATION PathList[1];};
struct _MSFC_NPIVCapabilities {BOOLEAN DhChapAvailableOnPhysicalPort;BOOLEAN DhChapAvailableOnVirtualPorts;USHORT MaxVirtualPortCount;};
struct _MSMCAInfo_RawCMCEvent {ULONG Count;MSMCAInfo_Entry Records[1];};
struct _MSMCAInfo_RawMCAEvent {ULONG Count;MSMCAInfo_Entry Records[1];};
struct _MSNdis_80211_BSSIList {ULONG NumberOfItems;MSNdis_80211_WLanBssId Ndis80211BSSIList[1];};
struct _NDIS_802_11_FIXED_IEs {UCHAR Timestamp[8];USHORT BeaconInterval;USHORT Capabilities;};
struct _NDIS_IPSEC_OFFLOAD_V2 {ULONG Encapsulation;BOOLEAN IPv6Supported;BOOLEAN IPv4Options;BOOLEAN IPv6NonIPsecExtensionHeaders;BOOLEAN Ah;BOOLEAN Esp;BOOLEAN AhEspCombined;BOOLEAN Transport;BOOLEAN Tunnel;BOOLEAN TransportTunnelCombined;BOOLEAN LsoSupported;BOOLEAN ExtendedSequenceNumbers;ULONG UdpEsp;ULONG AuthenticationAlgorithms;ULONG EncryptionAlgorithms;ULONG SaOffloadCapacity;};
struct _NDIS_PNP_CAPABILITIES {ULONG Flags;NDIS_PM_WAKE_UP_CAPABILITIES WakeUpCapabilities;};
union _NDIS_RW_LOCK_REFCOUNT {ULONG RefCount;UCHAR cacheLine[16];};
struct _NDIS_TAPI_SECURE_CALL {ULONG ulRequestID;HDRV_CALL hdCall;};
struct _NDIS_WWAN_DRIVER_CAPS {NDIS_OBJECT_HEADER Header;WWAN_DRIVER_CAPS DriverCaps;};
struct _NET_IF_RCV_ADDRESS_LH {NET_IF_RCV_ADDRESS_TYPE ifRcvAddressType;USHORT ifRcvAddressLength;USHORT ifRcvAddressOffset;};
struct _NL_PATH_BANDWIDTH_ROD {ULONG64 Bandwidth;ULONG64 Instability;BOOLEAN BandwidthPeaked;};
struct _NPAGED_LOOKASIDE_LIST {GENERAL_LOOKASIDE L;KSPIN_LOCK Lock__ObsoleteButDoNotDelete;};
struct _PARALLEL_1284_COMMAND {UCHAR ID;UCHAR Port;ULONG CommandFlags;};
struct _PARALLEL_WMI_LOG_INFO {ULONG Flags1;ULONG Flags2;ULONG spare[2];LONGLONG SppWriteCount;LONGLONG NibbleReadCount;LONGLONG BoundedEcpWriteCount;LONGLONG BoundedEcpReadCount;LONGLONG HwEcpWriteCount;LONGLONG HwEcpReadCount;LONGLONG SwEcpWriteCount;LONGLONG SwEcpReadCount;LONGLONG HwEppWriteCount;LONGLONG HwEppReadCount;LONGLONG SwEppWriteCount;LONGLONG SwEppReadCount;LONGLONG ByteReadCount;LONGLONG ChannelNibbleReadCount;};
struct _PHYSICAL_MEMORY_RANGE {PHYSICAL_ADDRESS BaseAddress;LARGE_INTEGER NumberOfBytes;};
struct _PO_WAKE_SOURCE_DEVICE {PO_WAKE_SOURCE_HEADER Header;WCHAR InstancePath[1];};
struct _PO_WAKE_SOURCE_HEADER {PO_WAKE_SOURCE_TYPE Type;ULONG Size;};
struct _READ_AHEAD_PARAMETERS {CSHORT NodeByteSize;ULONG Granularity;ULONG PipelinedRequestSize;ULONG ReadAheadGrowthPercentage;};
struct _READ_CAPACITY_DATA_EX {LARGE_INTEGER LogicalBlockAddress;ULONG BytesPerBlock;};
struct _REDBOOK_WMI_PERF_DATA {LONGLONG TimeReadDelay;LONGLONG TimeReading;LONGLONG TimeStreamDelay;LONGLONG TimeStreaming;LONGLONG DataProcessed;ULONG StreamPausedCount;};
struct _SCSI_ADAPTER_BUS_INFO {UCHAR NumberOfBuses;SCSI_BUS_DATA BusData[1];};
struct _STORAGE_OFFLOAD_TOKEN {UCHAR TokenType[4];UCHAR Reserved[2];UCHAR TokenIdLength[2];_STORAGE_OFFLOAD_TOKEN___45C29CB8E6D02895655581947ABDA793 __anonymous0;};
struct _STORAGE_READ_CAPACITY {ULONG Version;ULONG Size;ULONG BlockLength;LARGE_INTEGER NumberOfBlocks;LARGE_INTEGER DiskLength;};
struct _SetPersistentEntry_IN {UCHAR PortWWN[8];HBAFCPBindingEntry2 Binding;};
struct _TA_ADDRESS_NETBIOS_EX {LONG TAAddressCount;struct _TA_ADDRESS_NETBIOS_EX___AddrNetbiosEx Address[1];};
struct _TDI_ADDRESS_APPLETALK {USHORT Network;UCHAR Node;UCHAR Socket;};
struct _TDI_PNP_CONTEXT_WIN2K {USHORT ContextSize;USHORT ContextType;UCHAR ContextData[1];};
struct _TDI_REQUEST_ASSOCIATE {TDI_REQUEST Request;HANDLE AddressHandle;};
struct _TDI_ROUTING_INFO_WS03 {ULONG Protocol;ULONG InterfaceId;ULONG LinkId;TRANSPORT_ADDRESS Address;};
struct _USB_30_HUB_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bNumberOfPorts;USHORT wHubCharacteristics;UCHAR bPowerOnToPowerGood;UCHAR bHubControlCurrent;UCHAR bHubHdrDecLat;USHORT wHubDelay;USHORT DeviceRemovable;};
struct _USB_DEVICE_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT bcdUSB;UCHAR bDeviceClass;UCHAR bDeviceSubClass;UCHAR bDeviceProtocol;UCHAR bMaxPacketSize0;USHORT idVendor;USHORT idProduct;USHORT bcdDevice;UCHAR iManufacturer;UCHAR iProduct;UCHAR iSerialNumber;UCHAR bNumConfigurations;};
struct _USB_STRING_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;WCHAR bString[1];};
struct _VIDEO_CHILD_ENUM_INFO {ULONG Size;ULONG ChildDescriptorSize;ULONG ChildIndex;ULONG ACPIHwId;PVOID ChildHwDeviceExtension;};
struct _VPD_BLOCK_LIMITS_PAGE {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;UCHAR PageCode;UCHAR PageLength[2];union {struct {UCHAR Reserved0;UCHAR MaximumCompareAndWriteLength;UCHAR OptimalTransferLengthGranularity[2];UCHAR MaximumTransferLength[4];UCHAR OptimalTransferLength[4];UCHAR MaxPrefetchXDReadXDWriteTransferLength[4];UCHAR MaximumUnmapLBACount[4];UCHAR MaximumUnmapBlockDescriptorCount[4];UCHAR OptimalUnmapGranularity[4];union {_VPD_BLOCK_LIMITS_PAGE______6D8344D7D2E60C771339A25A2275A935 __anonymous0;UCHAR UnmapGranularityAlignment[4];};UCHAR Reserved1[28];};UCHAR Descriptors[];};};
struct _VP_DEVICE_DESCRIPTION {BOOLEAN ScatterGather;BOOLEAN Dma32BitAddresses;BOOLEAN Dma64BitAddresses;ULONG MaximumLength;};
struct _WAE_DESCRIPTION_TABLE {DESCRIPTION_HEADER Header;ULONG EmulatedDeviceFlags;};
union _WHEA_PERSISTENCE_INFO {struct _WHEA_PERSISTENCE_INFO___7AB0461A727F28B9D4873A511C9F9EFB s;ULONGLONG AsULONGLONG;};
struct digirealwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct dolbyac2waveformat_tag {WAVEFORMATEX wfx;WORD nAuxBitsCode;};
struct msaudio1waveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;WORD wEncodeOptions;};
struct tagTRANSPORTBASICPARMS {LONG TimeFormat;LONG TimeReference;LONG Superimpose;LONG EndStopAction;LONG RecordFormat;LONG StepFrames;LONG SetpField;LONG Preroll;LONG RecPreroll;LONG Postroll;LONG EditDelay;LONG PlayTCDelay;LONG RecTCDelay;LONG EditField;LONG FrameServo;LONG ColorFrameServo;LONG ServoRef;LONG WarnGenlock;LONG SetTracking;TCHAR VolumeName[40];LONG Ballistic[20];LONG Speed;LONG CounterFormat;LONG TunerChannel;LONG TunerNumber;LONG TimerEvent;LONG TimerStartDay;LONG TimerStartTime;LONG TimerStopDay;LONG TimerStopTime;};
typedef PVOID (*CLFS_BLOCK_ALLOCATION)(ULONG cbBufferLength, PVOID pvUserContext);
struct DOT11_BSSID_CANDIDATE {DOT11_MAC_ADDRESS BSSID;ULONG uFlags;};
typedef NTSTATUS  DXGKDDI_DESTROYDEVICE(IN_CONST_HANDLE hDevice);
typedef NTSTATUS DXGKDDI_REMOVE_DEVICE(IN_CONST_PVOID MiniportDeviceContext);
struct HBA_AdapterAttributes {char Manufacturer[64];char SerialNumber[64];char Model[256];char ModelDescription[256];HBA_WWN NodeWWN;char NodeSymbolicName[256];char HardwareVersion[256];char DriverVersion[256];char OptionROMVersion[256];char FirmwareVersion[256];HBA_UINT32 VendorSpecificID;HBA_UINT32 NumberOfPorts;char DriverName[256];};
struct KSM_BDA_WMDRM_LICENSE {KSM_NODE NodeMethod;GUID uuidKeyID;};
typedef NDIS_STATUS MINIPORT_CO_DELETE_VC(NDIS_HANDLE MiniportVcContext);
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBQueryFilterHook_v3)(PQUERY_HOOK_INFO QueryHookInfoPtr);
typedef ULONG (*PCIP_VALIDATE_ROUTINE)(PCIP_VALIDATE_INFO ValidateInfo);
typedef ULONG PCI_READ_WRITE_CONFIG(PVOID Context, ULONG BusOffset, ULONG Slot, PVOID Buffer, ULONG Offset, ULONG Length);
typedef NTSTATUS (*PCPFNPROPERTY_HANDLER)(PPCPROPERTY_REQUEST PropertyRequest);
typedef void (*PDEBUG_PRINT_CALLBACK)(PSTRING Output, ULONG ComponentId, ULONG Level);
typedef USHORT (*PDETERMINE_IEEE_MODES)(PVOID Context);
typedef BOOLEAN (*PFILTER_REPORT_CHANGE)(PVOID NotifyContext, PVOID FilterContext);
typedef void (*PFNBTH_INITIALIZE_BRB)(PBRB pBrb, BRB_TYPE brbType);
typedef void (*PFNKSPINIRPCOMPLETION)(PKSPIN Pin, PIRP Irp);
typedef BOOLEAN (*PGPE_SERVICE_ROUTINE2)(PVOID ObjectContext, PVOID ServiceContext);
typedef void (*PI8042_ISR_WRITE_PORT)(PVOID Context, UCHAR Value);
typedef NTSTATUS (*PINTERRUPTSYNCROUTINE)(struct IInterruptSync *InterruptSync, PVOID DynamicContext);
typedef NTSTATUS ( *PMRX_CALLDOWN_ROUTINE)(PVOID CalldownParameter);
typedef NDIS_STATUS PROTOCOL_CO_DELETE_VC(NDIS_HANDLE ProtocolVcContext);
typedef void PROTOCOL_CO_STATUS_EX(NDIS_HANDLE ProtocolBindingContext, NDIS_HANDLE ProtocolVcContext, PNDIS_STATUS_INDICATION StatusIndication);
typedef PRX_PREFIX_ENTRY (*PRX_TABLE_INSERTENTRY)(PRX_PREFIX_TABLE ThisTable, PRX_PREFIX_ENTRY ThisEntry);
typedef void (*PRX_TABLE_REMOVEENTRY)(PRX_PREFIX_TABLE ThisTable, PRX_PREFIX_ENTRY Entry);
typedef PVOID (*PStorPortAllocatePool)(ULONG NumberOfBytes, ULONG Tag, PVOID HwDeviceExtension, PVOID *PMdl);
typedef BOOLEAN (*PVIDEO_READ_DATA_LINE)(PVOID HwDeviceExtension);
struct _ACPI_METHOD_ARGUMENT {USHORT Type;USHORT DataLength;union _ACPI_METHOD_ARGUMENT___0083E76AA1C365C25C9D682C0B227FF6 u;};
struct _BDA_SCAN_CAPABILTIES {PBDARESULT lResult;UINT64 ul64AnalogStandardsSupported;};
struct _BOOTDISK_INFORMATION {LONGLONG BootPartitionOffset;LONGLONG SystemPartitionOffset;ULONG BootDeviceSignature;ULONG SystemDeviceSignature;};
struct _CDAUDIO_CONTROL_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PSBit : 1;UCHAR PageLength;unsigned char Reserved2 : 1;unsigned char StopOnTrackCrossing : 1;unsigned char Immediate : 1;unsigned char Reserved3 : 5;UCHAR Reserved4[3];UCHAR Obsolete[2];CDDA_OUTPUT_PORT CDDAOutputPorts[4];};
struct _CDROM_EXCLUSIVE_LOCK {CDROM_EXCLUSIVE_ACCESS Access;UCHAR CallerName[64];};
struct _CHANGER_ELEMENT_LIST {CHANGER_ELEMENT Element;ULONG NumberOfElements;};
struct _CHANGER_SET_POSITION {CHANGER_ELEMENT Transport;CHANGER_ELEMENT Destination;BOOLEAN Flip;};
struct _CM_SONIC_DEVICE_DATA {USHORT Version;USHORT Revision;USHORT DataConfigurationRegister;UCHAR EthernetAddress[8];};
struct _CM_VIDEO_DEVICE_DATA {USHORT Version;USHORT Revision;ULONG VideoClock;};
struct _CO_TAPI_ADDRESS_CAPS {ULONG ulLineID;ULONG ulAddressID;ULONG ulFlags;LINE_ADDRESS_CAPS LineAddressCaps;};
struct _CreateVirtualPort_IN {UCHAR WWPN[8];UCHAR WWNN[8];UCHAR Tag[16];USHORT VirtualName[64];};
struct _D3DKMT_WDDM_1_2_CAPS {D3DKMDT_PREEMPTION_CAPS PreemptionCaps;_D3DKMT_WDDM_1_2_CAPS___85A070F6A014979135EAC7792424D6A3 __anonymous0;};
struct _DOT11_MAC_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG uOpmodeMask;};
struct _DXGKARG_CREATEDEVICE {HANDLE hDevice;_DXGKARG_CREATEDEVICE___88C7CC88C3AEB67EED929825372DD737 __anonymous0;};
struct _DXGKARG_SUBMITRENDER {void *pContextSaveArea;D3DGPU_VIRTUAL_ADDRESS DmaBuffer;UINT DmaSize;void *pPrivateDriverData;UINT PrivateDriverDataSize;void *pDmaBufferPrivateData;UINT DmaBufferPrivateDataSize;void *pDmaBuffer;};
struct _DXGK_QUERYSEGMENTOUT {UINT NbSegment;DXGK_SEGMENTDESCRIPTOR *pSegmentDescriptor;UINT PagingBufferSegmentId;UINT PagingBufferSize;UINT PagingBufferPrivateDataSize;};
struct _FILE_OBJECTID_BUFFER {UCHAR ObjectId[16];union _FILE_OBJECTID_BUFFER___8A2E0D068CCE16AC437AD7ECF5548605 u;};
union _FILE_SEGMENT_ELEMENT {PVOID64 Buffer;ULONGLONG Alignment;};
struct _GET_LOCAL_HOST_INFO5 {PVOID ConfigRom;ULONG ConfigRomLength;};
struct _GetFC4Statistics_OUT {ULONG HBAStatus;MSFC_FC4STATISTICS FC4Statistics;};
struct _GetFCPStatistics_OUT {ULONG HBAStatus;MSFC_FC4STATISTICS FC4Statistics;};
struct _HID_DEVICE_EXTENSION {PDEVICE_OBJECT PhysicalDeviceObject;PDEVICE_OBJECT NextDeviceObject;PVOID MiniDeviceExtension;};
struct _HW_STREAM_DESCRIPTOR {HW_STREAM_HEADER StreamHeader;HW_STREAM_INFORMATION StreamInfo;};
struct _IF_COUNTED_STRING_LH {USHORT Length;WCHAR String[257];};
struct _IMAGE_IMPORT_BY_NAME {USHORT Hint;CHAR Name[1];};
struct _INT10_BIOS_ARGUMENTS {ULONG Eax;ULONG Ebx;ULONG Ecx;ULONG Edx;ULONG Esi;ULONG Edi;ULONG Ebp;USHORT SegDs;USHORT SegEs;};
struct _IO_SCSI_CAPABILITIES {ULONG Length;ULONG MaximumTransferLength;ULONG MaximumPhysicalPages;ULONG SupportedAsynchronousEvents;ULONG AlignmentMask;BOOLEAN TaggedQueuing;BOOLEAN AdapterScansDown;BOOLEAN AdapterUsesPio;};
struct _KEY_NAME_INFORMATION {ULONG NameLength;WCHAR Name[1];};
struct _LOG_PARAMETER_HEADER {UCHAR ParameterCode[2];_LOG_PARAMETER_HEADER___78DA7D7ACDB40656AE4F463B7A904041 __anonymous0;UCHAR ParameterLength;};
struct _MODE_INFO_EXCEPTIONS {unsigned char PageCode : 6;unsigned char Reserved1 : 1;unsigned char PSBit : 1;UCHAR PageLength;_MODE_INFO_EXCEPTIONS___46486C1043A9BFDA7F1CD33DAB7A74FB __anonymous0;unsigned char ReportMethod : 4;unsigned char Reserved4 : 4;UCHAR IntervalTimer[4];UCHAR ReportCount[4];};
struct _MODE_PARM_READ_WRITE {MODE_PARAMETER_HEADER ParameterListHeader;MODE_PARAMETER_BLOCK ParameterListBlock;};
struct _MOUNTMGR_MOUNT_POINT {ULONG SymbolicLinkNameOffset;USHORT SymbolicLinkNameLength;ULONG UniqueIdOffset;USHORT UniqueIdLength;ULONG DeviceNameOffset;USHORT DeviceNameLength;};
struct _MOUNTMGR_TARGET_NAME {USHORT DeviceNameLength;WCHAR DeviceName[1];};
struct _MSMCAInfo_RawMCAData {ULONG Count;MSMCAInfo_Entry Records[1];};
struct _MSNdis_CountedString {USHORT Length;SHORT String[257];};
struct _MSNdis_GroupAffinity {ULONGLONG Mask;USHORT Group;USHORT Reserved[3];};
struct _MSiSCSI_AdapterEvent {ULONGLONG UniqueAdapterId;ULONG EventCode;};
struct _NDIS_802_11_AI_REQFI {USHORT Capabilities;USHORT ListenInterval;NDIS_802_11_MAC_ADDRESS CurrentAPAddress;};
struct _NDIS_TAPI_CLOSE_CALL {ULONG ulRequestID;HDRV_CALL hdCall;};
struct _NDIS_WWAN_READY_INFO {NDIS_OBJECT_HEADER Header;WWAN_READY_INFO ReadyInfo;};
struct _NDIS_WWAN_SET_PIN_EX {NDIS_OBJECT_HEADER Header;WWAN_PIN_ACTION PinAction;};
struct _NDIS_WWAN_SMS_DELETE {NDIS_OBJECT_HEADER Header;WWAN_SMS_FILTER SmsFilter;};
struct _NET_BUFFER_LIST_DATA {PNET_BUFFER_LIST Next;PNET_BUFFER FirstNetBuffer;};
struct _NFS_OPEN_ECP_CONTEXT {PUNICODE_STRING ExportAlias;PSOCKADDR_STORAGE_NFS ClientSocketAddress;};
struct _NV_FEATURE_PARAMETER {USHORT NVPowerModeEnabled;USHORT NVParameterReserv1;USHORT NVCmdEnabled;USHORT NVParameterReserv2;USHORT NVPowerModeVer;USHORT NVCmdVer;ULONG NVSize;USHORT NVReadSpeed;USHORT NVWrtSpeed;ULONG DeviceSpinUpTime;};
struct _PAGED_LOOKASIDE_LIST {GENERAL_LOOKASIDE L;FAST_MUTEX Lock__ObsoleteButDoNotDelete;};
struct _PIDListSpanningEvent {WORD wPIDCount;ULONG pulPIDs[1];};
struct _PO_WAKE_SOURCE_FIXED {PO_WAKE_SOURCE_HEADER Header;PO_FIXED_WAKE_SOURCE_TYPE FixedWakeSourceType;};
struct _PO_WAKE_SOURCE_TIMER {PO_WAKE_SOURCE_HEADER Header;DIAGNOSTIC_BUFFER Reason;};
struct _PROCESSOR_GROUP_INFO {UCHAR MaximumProcessorCount;UCHAR ActiveProcessorCount;UCHAR Reserved[38];KAFFINITY ActiveProcessorMask;};
struct _READ_LOG_SECTORS_OUT {ULONG Length;UCHAR LogSectors[1];};
struct _REDBOOK_WMI_STD_DATA {ULONG NumberOfBuffers;ULONG SectorsPerRead;ULONG SectorsPerReadMask;ULONG MaximumSectorsPerRead;BOOLEAN PlayEnabled;BOOLEAN CDDASupported;BOOLEAN CDDAAccurate;BOOLEAN Reserved1;};
struct _REPAIR_COPIES_OUTPUT {ULONG Size;ULONG Status;LARGE_INTEGER ResumeFileOffset;};
struct _SERIAL_WMI_COMM_DATA {ULONG BaudRate;ULONG BitsPerByte;ULONG Parity;BOOLEAN ParityCheckEnable;ULONG StopBits;ULONG XoffCharacter;ULONG XoffXmitThreshold;ULONG XonCharacter;ULONG XonXmitThreshold;ULONG MaximumBaudRate;ULONG MaximumOutputBufferSize;ULONG MaximumInputBufferSize;BOOLEAN Support16BitMode;BOOLEAN SupportDTRDSR;BOOLEAN SupportIntervalTimeouts;BOOLEAN SupportParityCheck;BOOLEAN SupportRTSCTS;BOOLEAN SupportXonXoff;BOOLEAN SettableBaudRate;BOOLEAN SettableDataBits;BOOLEAN SettableFlowControl;BOOLEAN SettableParity;BOOLEAN SettableParityCheck;BOOLEAN SettableStopBits;BOOLEAN IsBusy;};
struct _STORAGE_HOTPLUG_INFO {ULONG Size;BOOLEAN MediaRemovable;BOOLEAN MediaHotplug;BOOLEAN DeviceHotplug;BOOLEAN WriteCacheEnableOverride;};
struct _ScsiReadCapacity_OUT {ULONG Status;ULONG ResponseBufferSize;UCHAR ScsiStatus;UCHAR SenseBuffer[18];UCHAR ResponseBuffer[1];};
struct _SetBindingSupport_IN {UCHAR PortWWN[8];ULONG BindType;};
struct _TDI_ADDRESS_OSI_TSAP {USHORT tp_addr_type;USHORT tp_taddr_len;USHORT tp_tsel_len;UCHAR tp_addr[64];};
struct _UNICODE_PREFIX_TABLE {CSHORT NodeTypeCode;CSHORT NameLength;PUNICODE_PREFIX_TABLE_ENTRY NextPrefixTree;PUNICODE_PREFIX_TABLE_ENTRY LastNextEntry;};
union _USB_INTERFACE_STATUS {USHORT AsUshort16;_USB_INTERFACE_STATUS___D36DABEEA71DB85ACF17B8F77B3F5EA6 __anonymous0;};
struct _USB_TOPOLOGY_ADDRESS {ULONG PciBusNumber;ULONG PciDeviceNumber;ULONG PciFunctionNumber;ULONG Reserved;USHORT RootHubPortNumber;USHORT HubPortNumber[5];USHORT Reserved2;};
struct _VIDEO_COLOR_LUT_DATA {ULONG Length;ULONG LutDataFormat;UCHAR LutData[1];};
struct _VIDEO_HARDWARE_STATE {PVIDEO_HARDWARE_STATE_HEADER StateHeader;ULONG StateLength;};
struct _VIRTUAL_STORAGE_TYPE {ULONG DeviceId;GUID VendorId;};
union _WHEA_PCIXBUS_COMMAND {struct _WHEA_PCIXBUS_COMMAND___41F7F75BC920B1871F508779A190BAF9 s;ULONGLONG AsULONGLONG;};
union _WHEA_XPF_CACHE_CHECK {struct _WHEA_XPF_CACHE_CHECK___6099C0CCB946F741D0A0BD22CEEE4581 s;ULONGLONG XpfCacheCheck;};
struct _WRITE_LOG_SECTORS_IN {UCHAR LogAddress;UCHAR SectorCount;ULONG Length;UCHAR LogSectors[1];};
struct _WmiMonitorBrightness {UCHAR CurrentBrightness;ULONG Levels;UCHAR Level[1];};
typedef PVOID (*pKdGetAcpiTablePhase0)(struct _LOADER_PARAMETER_BLOCK *LoaderBlock, ULONG Signature);
typedef ULONG (*pKdGetPciDataByOffset)(ULONG BusNumber, ULONG SlotNumber, PVOID Buffer, ULONG Offset, ULONG Length);
typedef ULONG (*pKdSetPciDataByOffset)(ULONG BusNumber, ULONG SlotNumber, PVOID Buffer, ULONG Offset, ULONG Length);
struct tagBDA_TRANSPORT_INFO {ULONG ulcbPhyiscalPacket;ULONG ulcbPhyiscalFrame;ULONG ulcbPhyiscalFrameAlignment;REFERENCE_TIME AvgTimePerFrame;};
struct wavefilter_volume_tag {WAVEFILTER wfltr;DWORD dwVolume;};
typedef NTSTATUS EX_CALLBACK_FUNCTION(PVOID CallbackContext, PVOID Argument1, PVOID Argument2);
struct HBA_FCPTargetMapping {HBA_UINT32 NumberOfEntries;HBA_FCPSCSIENTRY entry[1];};
union INTEL_CACHE_INFO_EAX {ULONG Ulong;INTEL_CACHE_INFO_EAX___5AAA3FCCBBF8AC3BEF7CBEB634486771 __anonymous0;};
union INTEL_CACHE_INFO_EBX {ULONG Ulong;INTEL_CACHE_INFO_EBX___B2AB10EA6CDAB471D57E9F6288C6AB56 __anonymous0;};
typedef BOOLEAN KSYNCHRONIZE_ROUTINE(PVOID SynchronizeContext);
typedef void MINIPORT_CANCEL_SEND(NDIS_HANDLE MiniportAdapterContext, PVOID CancelId);
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBSendFilterHook_v3)(PSEND_RECEIVE_HOOK_INFO SendReceiveInfoPtr);
struct NLBTCPAddressInfo_v1 {ULONG RemoteIPAddress;ULONG LocalIPAddress;USHORT RemotePort;USHORT LocalPort;};
struct NLBTCPConnectionInfo {ULONG PreviousState;ULONG CurrentState;ULONG IPInterface;NLBTCPAddressInfo Address;};
typedef NTSTATUS (*PAGP_CHECK_INTEGRITY)(PVOID AgpContext);
typedef PVOID ( *PAGP_RESERVE_VIRTUAL)(PVOID HwDeviceExtension, HANDLE ProcessHandle, PVOID PhysicalReserveContext, PVOID *VirtualReserveContext);
typedef NTSTATUS ( *PFNDRMDESTROYCONTENT)(ULONG ContentId);
typedef void (*PFREE_ADAPTER_OBJECT)(PDMA_ADAPTER DmaAdapter, IO_ALLOCATION_ACTION AllocationAction);
typedef BOOLEAN (*PGPE_SERVICE_ROUTINE)(PVOID, PVOID);
typedef NTSTATUS ( *PMRX_CHKFCB_CALLDOWN)(PFCB Fcb1, PFCB Fcb2);
typedef NDIS_STATUS PROTOCOL_CM_CLOSE_AF(NDIS_HANDLE CallMgrAfContext);
typedef NTSTATUS (*PTERMINATE_IEEE_MODE)(PVOID Context);
typedef BOOLEAN (*PVIDEO_HW_INITIALIZE)(PVOID HwDeviceExtension);
struct SDP_LARGE_INTEGER_16 {ULONGLONG LowPart;LONGLONG HighPart;};
struct _API_SET_VALUE_ARRAY {ULONG Count;API_SET_VALUE_ENTRY Array[1];};
struct _AVC_PRECONNECT_INFO {ULONG PinId;AVCPRECONNECTINFO ConnectInfo;};
struct _AVC_SETCONNECT_INFO {ULONG PinId;AVCCONNECTINFO ConnectInfo;};
struct _BDA_DISEQC_RESPONSE {ULONG ulRequestId;ULONG ulPacketLength;BYTE argbPacketData[8];};
struct _BDA_MUX_PIDLISTITEM {USHORT usPIDNumber;USHORT usProgramNumber;MUX_PID_TYPE ePIDType;};
struct _BUS_GENERATION_NODE {ULONG GenerationCount;NODE_ADDRESS LocalNodeAddress;NODE_ADDRESS DeviceNodeAddress;};
struct _CDROM_TOC_ATIP_DATA {UCHAR Length[2];UCHAR Reserved1;UCHAR Reserved2;CDROM_TOC_ATIP_DATA_BLOCK Descriptors[];};
struct _CHANGER_MOVE_MEDIUM {CHANGER_ELEMENT Transport;CHANGER_ELEMENT Source;CHANGER_ELEMENT Destination;BOOLEAN Flip;};
struct _CM_SCSI_DEVICE_DATA {USHORT Version;USHORT Revision;UCHAR HostIdentifier;};
struct _CO_MEDIA_PARAMETERS {ULONG Flags;ULONG ReceivePriority;ULONG ReceiveSizeHint;CO_SPECIFIC_PARAMETERS MediaSpecific;};
struct _DEBUG_PORT_TABLE_V2 {DESCRIPTION_HEADER Header;ULONG OffsetDbgDevInfo;ULONG NumberDbgDevInfo;};
struct _DEVICE_SET_PASSWORD {struct _DEVICE_SET_PASSWORD___BC90B211B20C0B706D62BE1DAC65D53B ControlWord;USHORT Password[16];USHORT MasterPasswordIdentifier;USHORT Reserved[238];};
struct _DISK_GROW_PARTITION {ULONG PartitionNumber;LARGE_INTEGER BytesToGrow;};
struct _DOT11_ADDITIONAL_IE {NDIS_OBJECT_HEADER Header;ULONG uBeaconIEsOffset;ULONG uBeaconIEsLength;ULONG uResponseIEsOffset;ULONG uResponseIEsLength;};
struct _DOT11_WME_UPDATE_IE {ULONG uParamElemMinBeaconIntervals;ULONG uWMEInfoElemOffset;ULONG uWMEInfoElemLength;ULONG uWMEParamElemOffset;ULONG uWMEParamElemLength;UCHAR ucBuffer[1];};
struct _DXGK_BACKLIGHT_INFO {USHORT BacklightUsersetting;USHORT BacklightEffective;D3DDDI_GAMMA_RAMP_RGB256x3x16 GammaRamp;};
struct _FILE_ID_INFORMATION {ULONGLONG VolumeSerialNumber;FILE_ID_128 FileId;};
struct _FILTER_REPLY_HEADER {NTSTATUS Status;ULONGLONG MessageId;};
struct _GET_DISK_ATTRIBUTES {ULONG Version;ULONG Reserved1;ULONGLONG Attributes;};
struct _IdleStateAccounting {ULONG IdleTransitions;ULONG FailedTransitions;ULONG InvalidBucketIndex;ULONGLONG TotalTime;ULONG IdleTimeBuckets[6];};
struct _KEYBOARD_IME_STATUS {USHORT UnitId;ULONG ImeOpen;ULONG ImeConvMode;};
struct _KEYBOARD_INPUT_DATA {USHORT UnitId;USHORT MakeCode;USHORT Flags;USHORT Reserved;ULONG ExtraInformation;};
struct _KS_DVDCOPY_TITLEKEY {ULONG KeyFlags;ULONG ReservedNT[2];UCHAR TitleKey[6];UCHAR Reserved[2];};
struct _LUID_AND_ATTRIBUTES {LUID Luid;ULONG Attributes;};
struct _MLDV2_REPORT_HEADER {ICMPV6_HEADER IcmpHeader;UINT16 Reserved;UINT16 RecordCount;};
struct _MPIO_REGISTERED_DSM {ULONG NumberDSMs;DSM_PARAMETERS DsmParameters[1];};
struct _MSNdis_80211_AddWEP {ULONG Length;ULONG KeyIndex;ULONG KeyLength;UCHAR KeyMaterial[1];};
struct _MSNdis_ObjectHeader {UCHAR Type;UCHAR Revision;USHORT Size;};
struct _NDIS_IP_OPER_STATUS {ULONG AddressFamily;NET_IF_OPER_STATUS OperationalStatus;ULONG OperationalStatusFlags;};
struct _NDK_SHARED_ENDPOINT {NDK_OBJECT_HEADER Header; NDK_SHARED_ENDPOINT_DISPATCH *Dispatch;};
struct _OBJECT_ATTRIBUTES64 {ULONG Length;ULONG64 RootDirectory;ULONG64 ObjectName;ULONG Attributes;ULONG64 SecurityDescriptor;ULONG64 SecurityQualityOfService;};
struct _PBDAParentalControl {ULONG rating_system_count;RATING_SYSTEM *rating_systems;};
struct _REPAIR_COPIES_INPUT {ULONG Size;ULONG Flags;LARGE_INTEGER FileOffset;ULONG Length;ULONG SourceCopy;ULONG NumberOfRepairCopies;ULONG RepairCopies[1];};
struct _SOCKET_ADDRESS_LIST {INT iAddressCount;SOCKET_ADDRESS Address[1];};
struct _TAPE_WMI_OPERATIONS {ULONG Method;ULONG DataBufferSize;PVOID DataBuffer;};
struct _TDI_ADDRESS_NETBIOS {USHORT NetbiosNameType;UCHAR NetbiosName[16];};
struct _TDI_REQUEST_RECEIVE {TDI_REQUEST Request;USHORT ReceiveFlags;};
struct _TXN_PARAMETER_BLOCK {USHORT Length;USHORT TxFsContext;PVOID TransactionObject;};
union _USB_ENDPOINT_STATUS {USHORT AsUshort16;_USB_ENDPOINT_STATUS___C3CE524354F442F1B06A73CA63E663F1 __anonymous0;};
struct _WWAN_PACKET_SERVICE {ULONG uNwError;WWAN_PACKET_SERVICE_STATE PacketServiceState;ULONG AvailableDataClass;ULONG CurrentDataClass;};
struct _WmiSetBrightness_IN {ULONG Timeout;UCHAR Brightness;};
struct _ZONE_SEGMENT_HEADER {SINGLE_LIST_ENTRY SegmentList;PVOID Reserved;};
struct adpcmewaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
struct gsm610waveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;};
typedef UCHAR (*pHalVectorToIDTEntry)(ULONG Vector);
struct sonarcwaveformat_tag {WAVEFORMATEX wfx;WORD wCompType;};
typedef ULONG sp_DRIVER_INITIALIZE(PVOID DriverObject, PVOID RegistryPath);
struct tagKS_BDA_FRAME_INFO {ULONG ExtendedHeaderSize;DWORD dwFrameFlags;ULONG ulEvent;ULONG ulChannelNumber;ULONG ulSubchannelNumber;ULONG ulReason;};
struct tagKS_MPEGVIDEOINFO2 {KS_VIDEOINFOHEADER2 hdr;DWORD dwStartTimeCode;DWORD cbSequenceHeader;DWORD dwProfile;DWORD dwLevel;DWORD dwFlags;DWORD bSequenceHeader[1];};
struct tag_KS_TRUECOLORINFO {DWORD dwBitMasks[3];KS_RGBQUAD bmiColors[256];};
struct DOT11_KEY_ALGO_CCMP {UCHAR ucIV48Counter[6];ULONG ulCCMPKeyLength;UCHAR ucCCMPKey[1];};
typedef void DRIVER_LIST_CONTROL(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp, PSCATTER_GATHER_LIST ScatterGather, PVOID Context);
typedef void DRIVER_REINITIALIZE(struct _DRIVER_OBJECT *DriverObject, PVOID Context, ULONG Count);
typedef BOOLEAN (*DSM_COMPARE_DEVICES)(PVOID DsmContext, PVOID DsmId1, PVOID DsmId2);
typedef NTSTATUS (*DSM_DEVICE_NOT_USED)(PVOID DsmContext, PVOID DsmId);
typedef NTSTATUS DXGKDDI_STOP_DEVICE(IN_CONST_PVOID MiniportDeviceContext);
typedef ULONG GET_SET_DEVICE_DATA(PVOID Context, ULONG DataType, PVOID Buffer, ULONG Offset, ULONG Length);
typedef void IO_CSQ_RELEASE_LOCK(PIO_CSQ Csq, KIRQL Irql);
typedef void IO_WORKITEM_ROUTINE(PDEVICE_OBJECT DeviceObject, PVOID Context);
union IPRouteNotifyOutput {IPNotifyOutput irno_info;IPRouteNotifyOutput___EEE9818F3F84ECAEFE37CF9D6ABE2C57 __anonymous0;};
struct IPortClsVersionVtbl {ULONG ( *GetVersion)(INTERFACE *This);};
typedef NDIS_STATUS MINIPORT_ADD_DEVICE(NDIS_HANDLE NdisMiniportHandle, NDIS_HANDLE MiniportDriverContext);
typedef PVOID ( *PAGP_COMMIT_VIRTUAL)(PVOID HwDeviceExtension, PVOID VirtualReserveContext, ULONG Pages, ULONG Offset);
typedef NTSTATUS (*PAGP_FLUSH_GART_TLB)(PVOID AgpContext);
typedef ULONG (*PCIP_NOTIFY_ROUTINE)(PCIP_NOTIFY_INFO NotifyInfo);
typedef NTSTATUS (*PCLASS_START_DEVICE)(PDEVICE_OBJECT DeviceObject);
typedef NTSTATUS (*PCPFNMETHOD_HANDLER)(PPCMETHOD_REQUEST MethodRequest);
typedef PSDP_NODE (*PCREATENODESEQUENCE)(ULONG tag);
typedef PSDP_TREE_ROOT_NODE (*PCREATENODETREEROOT)(ULONG tag);
typedef NTSTATUS (*PGPE_DISABLE_EVENT2)(PVOID Context, PVOID ObjectContext);
typedef void ( *PIMAGE_TLS_CALLBACK)(PVOID DllHandle, ULONG Reason, PVOID Reserved);
typedef BOOLEAN (*PVIDEO_HW_INTERRUPT)(PVOID HwDeviceExtension);
union SMHBA_PhyStatistics {SMHBA_SASPHYSTATISTICS *SASPhyStatistics;SMHBA_FCPHYSTATISTICS *FCPhyStatistics;};
struct SMHBA_TargetMapping {HBA_UINT32 NumberOfEntries;SMHBA_SCSIENTRY entry[1];};
typedef BOOLEAN  USB_BUSIFFN_IS_ROOT(PVOID BusContext, PVOID DeviceObject);
struct _BDANODE_DESCRIPTOR {ULONG ulBdaNodeType;GUID guidFunction;GUID guidName;};
struct _BTH_HCI_EVENT_INFO {BTH_ADDR bthAddress;UCHAR connectionType;UCHAR connected;};
struct _BTH_RADIO_IN_RANGE {BTH_DEVICE_INFO deviceInfo;ULONG previousDeviceFlags;};
struct _CDB___SET_CD_SPEED {UCHAR OperationCode;_CDB___SET_CD_SPEED___5042636D3EF4672BAA051A846CBFD7E7 __anonymous0;UCHAR ReadSpeed[2];UCHAR WriteSpeed[2];UCHAR Reserved2[5];UCHAR Control;};
struct _CDROM_TOC_PMA_DATA {UCHAR Length[2];UCHAR Reserved1;UCHAR Reserved2;CDROM_TOC_FULL_TOC_DATA_BLOCK Descriptors[];};
struct _CHANGER_SET_ACCESS {CHANGER_ELEMENT Element;ULONG Control;};
struct _CMP_GET_PLUG_STATE {HANDLE hPlug;ULONG State;ULONG DataRate;ULONG Payload;ULONG BC_Connections;ULONG PP_Connections;};
struct _CSV_NAMESPACE_INFO {ULONG Version;ULONG DeviceNumber;LARGE_INTEGER StartingOffset;ULONG SectorSize;};
struct _CSV_QUERY_MDS_PATH {ULONG MdsNodeId;ULONG DsNodeId;ULONG PathLength;WCHAR Path[1];};
struct _DOT11_IV48_COUNTER {ULONG uIV32Counter;USHORT usIV16Counter;};
struct _DOT11_WFD_GROUP_ID {DOT11_MAC_ADDRESS DeviceAddress;DOT11_SSID SSID;};
struct _EXCEPTION_POINTERS {PEXCEPTION_RECORD ExceptionRecord;PCONTEXT ContextRecord;};
struct _EXCEPTION_RECORD32 {NTSTATUS ExceptionCode;ULONG ExceptionFlags;ULONG ExceptionRecord;ULONG ExceptionAddress;ULONG NumberParameters;ULONG ExceptionInformation[15];};
struct _FBPT_RECORD_HEADER {USHORT RecordSubtype;CHAR RecordLength;CHAR Revision;};
struct _FCB_BUFFERED_LOCKS {struct _FCB_LOCK *List;ULONG PendingLockOps;PERESOURCE Resource;};
struct _FILE_REGION_OUTPUT {ULONG Flags;ULONG TotalRegionEntryCount;ULONG RegionEntryCount;ULONG Reserved;FILE_REGION_INFO Region[1];};
struct _FLOATING_SAVE_AREA {ULONG ControlWord;ULONG StatusWord;ULONG TagWord;ULONG ErrorOffset;ULONG ErrorSelector;ULONG DataOffset;ULONG DataSelector;UCHAR RegisterArea[80];ULONG Cr0NpxState;};
struct _FORMAT_LIST_HEADER {UCHAR Reserved;unsigned char VendorSpecific : 1;unsigned char Immediate : 1;unsigned char TryOut : 1;unsigned char IP : 1;unsigned char STPF : 1;unsigned char DCRT : 1;unsigned char DPRY : 1;unsigned char FOV : 1;UCHAR FormatDescriptorLength[2];FORMAT_DESCRIPTOR Descriptors[];};
struct _FSCNTL_SCREEN_INFO {COORD Position;COORD ScreenSize;ULONG nNumberOfChars;};
struct _GETVERSIONINPARAMS {UCHAR bVersion;UCHAR bRevision;UCHAR bReserved;UCHAR bIDEDeviceMap;ULONG fCapabilities;ULONG dwReserved[4];};
struct _GET_ALL_POLICY_OUT {ULONG Status;ULONG Count;ULONG Length;UCHAR Values[1];};
struct _GetEventBuffer_OUT {ULONG HBAStatus;ULONG EventCount;MSFC_EventBuffer Events[1];};
struct _GetFC3MgmtInfo_OUT {ULONG HBAStatus;HBAFC3MgmtInfo MgmtInfo;};
struct _HIDP_UNKNOWN_TOKEN {UCHAR Token;UCHAR Reserved[3];ULONG BitField;};
struct _IPV4_OPTION_HEADER {_IPV4_OPTION_HEADER___4C1C3CB250A3C2661892A36CD59164CA __anonymous0;UINT8 OptionLength;};
struct _IRB_REQ_ISOCH_STOP {HANDLE hResource;ULONG fulFlags;};
struct _KCRM_PROTOCOL_BLOB {CRM_PROTOCOL_ID ProtocolId;ULONG StaticInfoLength;ULONG TransactionIdInfoLength;ULONG Unused1;ULONG Unused2;};
struct _KLOCK_QUEUE_HANDLE {KSPIN_LOCK_QUEUE LockQueue;KIRQL OldIrql;};
struct _KSM_BDA_DRM_SETDRM {KSM_NODE NodeMethod;GUID NewDRMuuid;};
struct _KSM_BDA_SCAN_START {KSMETHOD Method;ULONG LowerFrequency;ULONG HigherFrequency;};
struct _LLDP_TLV_TYPE_INFO {USHORT Type;union _LLDP_TLV_TYPE_INFO___E487BBF590D175501C59AA3CB0A964A2 u;};
struct _MAP_REGISTER_ENTRY {PVOID MapRegister;BOOLEAN WriteToDevice;};
struct _MOUNTDEV_UNIQUE_ID {USHORT UniqueIdLength;UCHAR UniqueId[1];};
struct _NDIS_OBJECT_HEADER {UCHAR Type;UCHAR Revision;USHORT Size;};
struct _NDIS_PM_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG EnabledWoLPacketPatterns;ULONG EnabledProtocolOffloads;ULONG WakeUpFlags;};
struct _NDIS_RSS_PROCESSOR {PROCESSOR_NUMBER ProcNum;USHORT PreferenceIndex;USHORT Reserved;};
struct _NDIS_VAR_DATA_DESC {USHORT Length;USHORT MaximumLength;ULONG_PTR Offset;};
struct _NDIS_WAN_GET_STATS {UCHAR LocalAddress[6];ULONG BytesSent;ULONG BytesRcvd;ULONG FramesSent;ULONG FramesRcvd;ULONG CRCErrors;ULONG TimeoutErrors;ULONG AlignmentErrors;ULONG SerialOverrunErrors;ULONG FramingErrors;ULONG BufferOverrunErrors;ULONG BytesTransmittedUncompressed;ULONG BytesReceivedUncompressed;ULONG BytesTransmittedCompressed;ULONG BytesReceivedCompressed;};
struct _NDIS_WWAN_SMS_READ {NDIS_OBJECT_HEADER Header;WWAN_SMS_READ SmsRead;};
struct _NDIS_WWAN_SMS_SEND {NDIS_OBJECT_HEADER Header;WWAN_SMS_SEND SmsSend;};
struct _PARALLEL_CHIP_MODE {UCHAR ModeFlags;BOOLEAN success;};
struct _REASSIGN_BLOCKS_EX {USHORT Reserved;USHORT Count;LARGE_INTEGER BlockNumber[1];};
struct _RESUME_PERFORMANCE {ULONG PostTimeMs;ULONGLONG TotalResumeTimeMs;ULONGLONG ResumeCompleteTimestamp;};
struct _RTL_BALANCED_LINKS {struct _RTL_BALANCED_LINKS *Parent;struct _RTL_BALANCED_LINKS *LeftChild;struct _RTL_BALANCED_LINKS *RightChild;CHAR Balance;UCHAR Reserved[3];};
struct _RX_SCAVENGER_ENTRY {LIST_ENTRY List;UCHAR Type;UCHAR Operation;UCHAR State;UCHAR Flags;struct _RX_SCAVENGER_ENTRY *pContinuationEntry;};
struct _S3PT_RECORD_HEADER {USHORT RecordSubtype;CHAR RecordLength;CHAR Revision;};
struct _SD_ENUM_SDS_OUTPUT {ULONGLONG NextOffset;ULONGLONG NumSDEntriesReturned;ULONGLONG NumSDBytesReturned;SD_ENUM_SDS_ENTRY SDEntry[1];};
struct _SECURITY_USER_DATA {SECURITY_STRING UserName;SECURITY_STRING LogonDomainName;SECURITY_STRING LogonServer;PSID pSid;};
struct _SERIAL_WMI_HW_DATA {ULONG IrqNumber;ULONG IrqVector;ULONG IrqLevel;ULONGLONG IrqAffinityMask;ULONG InterruptType;ULONGLONG BaseIOAddress;};
struct _SET_UNIT_DIRECTORY {ULONG Flags;ULONG UnitSpecId;ULONG UnitSwVersion;HANDLE hCromEntry;};
struct _SID_AND_ATTRIBUTES {PSID Sid;ULONG Attributes;};
union _SUPPORTED_ADVANCES {_SUPPORTED_ADVANCES___DA0C519E2D0E0B115FE28FF86470BB99 __anonymous0;USHORT AsUshort;};
struct _ScsiReportLuns_OUT {ULONG Status;ULONG ResponseBufferSize;UCHAR ScsiStatus;UCHAR SenseBuffer[18];UCHAR ResponseBuffer[1];};
struct _SendCTPassThru_OUT {ULONG HBAStatus;ULONG TotalResponseBufferCount;ULONG ActualResponseBufferCount;UCHAR ResponseBuffer[1];};
struct _TAPE_POSITION_DATA {unsigned char Reserved1 : 2;unsigned char BlockPositionUnsupported : 1;unsigned char Reserved2 : 3;unsigned char EndOfPartition : 1;unsigned char BeginningOfPartition : 1;UCHAR PartitionNumber;USHORT Reserved3;UCHAR FirstBlock[4];UCHAR LastBlock[4];UCHAR Reserved4;UCHAR NumberOfBlocks[3];UCHAR NumberOfBytes[4];};
struct _TA_ADDRESS_NETBIOS {LONG TAAddressCount;struct _TA_ADDRESS_NETBIOS___Addr Address[1];};
struct _TDI_ADDRESS_IP6_XP {USHORT sin6_port;ULONG sin6_flowinfo;USHORT sin6_addr[8];ULONG sin6_scope_id;};
struct _TDI_ADDRESS_NETONE {USHORT NetoneNameType;UCHAR NetoneName[20];};
struct _TDI_PNP_CONTEXT_XP {USHORT ContextSize;USHORT ContextType;UCHAR ContextData[1];};
struct _TDI_REQUEST_ACCEPT {TDI_REQUEST Request;PTDI_CONNECTION_INFORMATION RequestConnectionInformation;PTDI_CONNECTION_INFORMATION ReturnConnectionInformation;};
struct _USBRPM_DEVICE_LIST {ULONG NumberOfDevices;USBRPM_DEVICE_INFORMATION Device[];};
union _USB_20_PORT_CHANGE {USHORT AsUshort16;_USB_20_PORT_CHANGE___4591AA8E4CFF3B4B4BEE1BDCD73C24C3 __anonymous0;};
union _USB_20_PORT_STATUS {USHORT AsUshort16;_USB_20_PORT_STATUS___D84CE26E1ACA930E07E2FD4D78C39651 __anonymous0;};
union _USB_30_PORT_CHANGE {USHORT AsUshort16;_USB_30_PORT_CHANGE___1C3A8138BBE744CC2165C52FE2F0EEC2 __anonymous0;};
union _USB_30_PORT_STATUS {USHORT AsUshort16;_USB_30_PORT_STATUS___F68EB907A879B784CB9E4FCD94F166C5 __anonymous0;};
struct _USB_BOS_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT wTotalLength;UCHAR bNumDeviceCaps;};
struct _USB_HUB_DESCRIPTOR {UCHAR bDescriptorLength;UCHAR bDescriptorType;UCHAR bNumberOfPorts;USHORT wHubCharacteristics;UCHAR bPowerOnToPowerGood;UCHAR bHubControlCurrent;UCHAR bRemoveAndPowerMask[64];};
struct _VERIFY_INFORMATION {LARGE_INTEGER StartingOffset;ULONG Length;};
struct _WHEA_PCIXDEVICE_ID {USHORT VendorId;USHORT DeviceId;unsigned int ClassCode : 24;unsigned int FunctionNumber : 8;unsigned int DeviceNumber : 8;unsigned int BusNumber : 8;unsigned int SegmentNumber : 8;unsigned int Reserved1 : 8;ULONG Reserved2;};
union _WHEA_XPF_BUS_CHECK {struct _WHEA_XPF_BUS_CHECK___46942ADF216CDDF9A252DB6562D8145B s;ULONGLONG XpfBusCheck;};
union _WHEA_XPF_TLB_CHECK {struct _WHEA_XPF_TLB_CHECK___6099C0CCB946F741D0A0BD22CEEE4581 s;ULONGLONG XpfTLBCheck;};
struct heaacwaveformat_tag {HEAACWAVEINFO wfInfo;BYTE pbAudioSpecificConfig[1];};
struct nd_neighbor_solicit {ICMPV6_MESSAGE nd_ns_hdr;IN6_ADDR nd_ns_target;};
struct wavefilter_echo_tag {WAVEFILTER wfltr;DWORD dwVolume;DWORD dwDelay;};
typedef NTSTATUS (*CHANGER_INITIALIZE)(PDEVICE_OBJECT DeviceObject);
struct DOT11_CHANNEL_HINT {DOT11_PHY_TYPE Dot11PhyType;ULONG uChannelNumber;};
struct DOT11_KEY_ALGO_BIP {UCHAR ucIPN[6];ULONG ulBIPKeyLength;UCHAR ucBIPKey[1];};
typedef BOOLEAN (*DSM_IS_PATH_ACTIVE)(PVOID DsmContext, PVOID PathId, PVOID DsmId);
typedef NTSTATUS (*DSM_REMOVE_PENDING)(PVOID DsmContext, PVOID DsmId);
typedef BOOLEAN FAST_IO_QUERY_OPEN(struct _IRP *Irp, PFILE_NETWORK_OPEN_INFORMATION NetworkInformation, struct _DEVICE_OBJECT *DeviceObject);
typedef void HW_TRACING_ENABLED(PVOID HwDeviceExtension, BOOLEAN Enabled);
typedef void (*NDK_FN_RELEASE_LAM)(NDK_ADAPTER *pNdkAdapter, NDK_LOGICAL_ADDRESS_MAPPING *pNdkLAM);
typedef void ( *PAGP_FREE_PHYSICAL)(PVOID HwDeviceExtension, PVOID PhysicalReserveContext, ULONG Pages, ULONG Offset);
typedef void (*PBUS_RESET_ROUTINE)(PVOID Context, PBUS_GENERATION_NODE BusResetInfo);
typedef NTSTATUS (*PCLASS_ENUM_DEVICE)(PDEVICE_OBJECT DeviceObject);
typedef NTSTATUS (*PCLASS_INIT_DEVICE)(PDEVICE_OBJECT DeviceObject);
typedef NTSTATUS (*PCPFNEVENT_HANDLER)(PPCEVENT_REQUEST EventRequest);
typedef LONGLONG ( *PFNKSCLOCK_GETTIME)(PFILE_OBJECT FileObject);
typedef void (*PFNKSDEVICEIRPVOID)(PKSDEVICE Device, PIRP Irp);
typedef void (*PFNKSPINRESOLUTION)(PKSPIN Pin, PKSRESOLUTION Resolution);
typedef ULONG (*PGET_DMA_ALIGNMENT)(PDMA_ADAPTER DmaAdapter);
typedef NTSTATUS (*PGPE_CLEAR_STATUS2)(PVOID Context, PVOID ObjectContext);
typedef NTSTATUS (*PGPE_ENABLE_EVENT2)(PVOID Context, PVOID ObjectContext);
typedef void (*PHID_STATUS_CHANGE)(PVOID Context, enum DeviceObjectState State);
typedef NTSTATUS (*PMM_DLL_INITIALIZE)(PUNICODE_STRING RegistryPath);
typedef void PROTOCOL_STATUS_EX(NDIS_HANDLE ProtocolBindingContext, PNDIS_STATUS_INDICATION StatusIndication);
typedef void SET_D3COLD_SUPPORT(PVOID Context, BOOLEAN D3ColdSupport);
union _AMD_L1_CACHE_INFO {ULONG Ulong;_AMD_L1_CACHE_INFO___7F3D7DC6DEE4929F3B22493DFA423641 __anonymous0;};
union _AMD_L2_CACHE_INFO {ULONG Ulong;_AMD_L2_CACHE_INFO___93F2A660E4CD3E37717BAE33F33D55E9 __anonymous0;};
union _AMD_L3_CACHE_INFO {ULONG Ulong;_AMD_L3_CACHE_INFO___A61214777383D438D35F1F9A4ECBF3EC __anonymous0;};
struct _BDA_GDDS_DATATYPE {PBDARESULT lResult;GUID uuidDataType;};
struct _CLASS_VPD_B1_DATA {NTSTATUS CommandStatus;USHORT MediumRotationRate;USHORT Reserved;};
struct _CLS_IO_STATISTICS {CLS_IO_STATISTICS_HEADER hdrIoStats;ULONGLONG cFlush;ULONGLONG cbFlush;ULONGLONG cMetaFlush;ULONGLONG cbMetaFlush;};
struct _CO_TAPI_LINE_CAPS {ULONG ulLineID;ULONG ulFlags;LINE_DEV_CAPS LineDevCaps;};
struct _CSV_CONTROL_PARAM {CSV_CONTROL_OP Operation;LONGLONG Unused;};
struct _ChannelChangeInfo {ChannelChangeSpanningEvent_State state;ULONGLONG TimeStamp;};
struct _DATA_BLOCK_HEADER {UCHAR DataMode;UCHAR Reserved[4];_DATA_BLOCK_HEADER___BB186B0ECE516B444BF083DE287475ED __anonymous0;};
struct _DISK_SAN_SETTINGS {ULONG Version;DISK_SAN_POLICY SanPolicy;};
struct _DMA_TRANSFER_INFO {ULONG Version;_DMA_TRANSFER_INFO___1AC9C7FF0B634D00F8691EAF3EBE776A __anonymous0;};
struct _DOT11_WFD_CHANNEL {DOT11_COUNTRY_OR_REGION_STRING CountryRegionString;UCHAR OperatingClass;UCHAR ChannelNumber;};
struct _ENCRYPTION_BUFFER {ULONG EncryptionOperation;UCHAR Private[1];};
struct _FILE_LAYOUT_ENTRY {ULONG Version;ULONG NextFileOffset;ULONG Flags;ULONG FileAttributes;ULONGLONG FileReferenceNumber;ULONG FirstNameOffset;ULONG FirstStreamOffset;ULONG ExtraInfoOffset;ULONG Reserved;};
struct _FILE_REGION_INPUT {LONGLONG FileOffset;LONGLONG Length;ULONG DesiredUsage;};
struct _FORMAT_PARAMETERS {MEDIA_TYPE MediaType;ULONG StartCylinderNumber;ULONG EndCylinderNumber;ULONG StartHeadNumber;ULONG EndHeadNumber;};
struct _IMAGE_FILE_HEADER {USHORT Machine;USHORT NumberOfSections;ULONG TimeDateStamp;ULONG PointerToSymbolTable;ULONG NumberOfSymbols;USHORT SizeOfOptionalHeader;USHORT Characteristics;};
struct _IMAGE_ROM_HEADERS {IMAGE_FILE_HEADER FileHeader;IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;};
struct _INTERFACE_INFO_EX {ULONG iiFlags;SOCKET_ADDRESS iiAddress;SOCKET_ADDRESS iiBroadcastAddress;SOCKET_ADDRESS iiNetmask;};
struct _IR_RECEIVE_PARAMS {ULONG_PTR DataEnd;ULONG_PTR ByteCount;LONG Data[1];};
struct _IR_TRANSMIT_CHUNK {ULONG_PTR OffsetToNextChunk;ULONG_PTR RepeatCount;ULONG_PTR ByteCount;LONG Data[1];};
struct _IVRS_BLOCK_HEADER {UINT8 Type;UINT8 Flags;UINT16 Length;};
struct _IdleStateBucketEx {ULONGLONG TotalTimeUs;ULONG MinTimeUs;ULONG MaxTimeUs;ULONG Count;};
struct _LoginToTarget_OUT {ULONG Status;ULONGLONG UniqueSessionId;ULONGLONG UniqueConnectionId;};
struct _MECHANICAL_STATUS {MECHANICAL_STATUS_INFORMATION_HEADER MechanicalStatusHeader;SLOT_TABLE_INFORMATION SlotTableInfo[1];};
union _MM_PREFETCH_FLAGS {struct _MM_PREFETCH_FLAGS___F0C4C7D9B872C493007C4EE01995C4E0 Flags;ULONG AllFlags;};
struct _MPIOMoveDevice_IN {ULONG DiskOrdinal;ULONG Flags;ULONGLONG PathID;};
struct _MSFC_AdapterEvent {ULONG EventType;UCHAR PortWWN[8];};
struct _MSiSCSI_NICConfig {ULONG LinkSpeed;ULONG MaxLinkSpeed;ULONG LinkState;ULONG MaxFrameSize;UCHAR MacAddress[6];};
struct _NDIS_802_11_PMKID {ULONG Length;ULONG BSSIDInfoCount;BSSID_INFO BSSIDInfo[1];};
struct _NDIS_MAC_FRAGMENT {NDIS_HANDLE NdisLinkContext;ULONG Errors;};
struct _NDIS_WWAN_SET_PIN {NDIS_OBJECT_HEADER Header;WWAN_PIN_ACTION PinAction;};
struct _NLB_HOOK_IP_TUPLE {struct _NLB_HOOK_IP_TUPLE___EC338A43ABF6B75852E48F7D35CA5A68 Source;struct _NLB_HOOK_IP_TUPLE___EC338A43ABF6B75852E48F7D35CA5A68 Destination;ULONG Flags;};
struct _PCI_COMMON_CONFIG {PCI_COMMON_HEADER s;UCHAR DeviceSpecific[192];};
struct _PM_DISPATCH_TABLE {ULONG Signature;ULONG Version;PVOID Function[1];};
struct _REPARSE_INDEX_KEY {ULONG FileReparseTag;LARGE_INTEGER FileId;};
struct _RTL_BALANCED_NODE {union _RTL_BALANCED_NODE___6446A29996E22DA45E60A1EA14188AE9 u;union _RTL_BALANCED_NODE___9BF36C84E3411792BEB9166F3629864E u2;};
struct _SMARTCARD_REQUEST {PUCHAR Buffer;ULONG BufferSize;ULONG BufferLength;};
union _STOR_SLIST_HEADER {ULONGLONG Alignment;struct _STOR_SLIST_HEADER___873380EAC912F4CED96D83C084F02EE7 s;};
struct _SendCTPassThru_IN {UCHAR PortWWN[8];ULONG RequestBufferCount;UCHAR RequestBuffer[1];};
struct _SetDSMCounters_IN {ULONGLONG DsmContext;DSM_COUNTERS DsmCounters;};
struct _TAPE_GET_POSITION {ULONG Type;ULONG Partition;LARGE_INTEGER Offset;};
struct _TA_APPLETALK_ADDR {LONG TAAddressCount;struct _TA_APPLETALK_ADDR___AddrAtalk Address[1];};
struct _TDI_ACTION_HEADER {ULONG TransportId;USHORT ActionCode;USHORT Reserved;};
struct _TDI_PROVIDER_INFO {ULONG Version;ULONG MaxSendSize;ULONG MaxConnectionUserData;ULONG MaxDatagramSize;ULONG ServiceFlags;ULONG MinimumLookaheadData;ULONG MaximumLookaheadData;ULONG NumberOfResources;LARGE_INTEGER StartTime;};
struct _TRANSPORT_ADDRESS {LONG TAAddressCount;TA_ADDRESS Address[1];};
struct _UNMAP_LIST_HEADER {UCHAR DataLength[2];UCHAR BlockDescrDataLength[2];UCHAR Reserved[4];UNMAP_BLOCK_DESCRIPTOR Descriptors[];};
union _USB_DEVICE_STATUS {USHORT AsUshort16;_USB_DEVICE_STATUS___0B8A99F60B7FA7EDD835D7A15C0FC1AD __anonymous0;};
struct _WHEA_ERROR_RECORD {WHEA_ERROR_RECORD_HEADER Header;WHEA_ERROR_RECORD_SECTION_DESCRIPTOR SectionDescriptor[1];};
union _WHEA_ERROR_STATUS {ULONGLONG ErrorStatus;struct _WHEA_ERROR_STATUS___390C86F153586C246F7E5B624A004BCC s;};
union _WHEA_XPF_MS_CHECK {struct _WHEA_XPF_MS_CHECK___860AFE6EA3547F3F8363D000B0737353 s;ULONGLONG XpfMsCheck;};
struct _WMI_DISK_GEOMETRY {LONGLONG Cylinders;ULONG MediaType;ULONG TracksPerCylinder;ULONG SectorsPerTrack;ULONG BytesPerSector;};
struct _WWAN_SMS_SEND_PDU {UCHAR Size;CHAR PduData[366];};
struct _WWAN_USSD_REQUEST {WWAN_USSD_REQUEST_TYPE RequestType;WWAN_USSD_STRING UssdString;};
union _XPF_MC_BANK_FLAGS {struct _XPF_MC_BANK_FLAGS___DD3EFD26B55353E648024B9E0E8957B6 s;UCHAR AsUCHAR;};
struct nd_neighbor_advert {ICMPV6_MESSAGE nd_na_hdr;IN6_ADDR nd_na_target;};
struct tagACT_AUTHZ_STATE {UCHAR ACT;BOOLEAN fAuthorized;};
struct DL_TEREDO_ADDRESS {UINT8 Reserved[6];DL_TEREDO_ADDRESS___90126361DB06D31AC779EF63186CE8C6 __anonymous0;};
struct DOT11_PHY_ID_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;ULONG dot11PhyId[1];};
typedef NTSTATUS DRIVER_INITIALIZE(struct _DRIVER_OBJECT *DriverObject, PUNICODE_STRING RegistryPath);
typedef NTSTATUS (*DSM_REMOVE_DEVICE)(PVOID DsmContext, PVOID DsmId, PVOID PathId);
typedef EXCEPTION_DISPOSITION  EXCEPTION_ROUTINE(struct _EXCEPTION_RECORD *ExceptionRecord, PVOID EstablisherFrame, struct _CONTEXT *ContextRecord, PVOID DispatcherContext);
typedef void IO_CSQ_REMOVE_IRP(PIO_CSQ Csq, PIRP Irp);
typedef void MINIPORT_SHUTDOWN(NDIS_HANDLE MiniportAdapterContext, NDIS_SHUTDOWN_ACTION ShutdownAction);
struct NLBConnectionInfo {UCHAR Protocol;NLBConnectionInfo___E95D8C2B45558B13F22A96F6355E1CB1 __anonymous0;};
typedef void ( *PAGP_FREE_VIRTUAL)(PVOID HwDeviceExtension, PVOID VirtualReserveContext, ULONG Pages, ULONG Offset);
typedef PSDP_NODE (*PCREATENODEUINT32)(ULONG ulVal, ULONG tag);
typedef PSDP_NODE (*PCREATENODEUUID32)(ULONG ulVal, ULONG tag);
typedef NTSTATUS (*PFNKSDEVICECREATE)(PKSDEVICE Device);
typedef NTSTATUS ( *PHW_EVENT_ROUTINE)(PHW_EVENT_DESCRIPTOR EventDescriptor);
typedef BOOLEAN ( *PHW_RESET_ADAPTER)(PVOID DeviceExtension);
typedef ULONG (*PREAD_DMA_COUNTER)(PDMA_ADAPTER DmaAdapter);
typedef VP_STATUS (*PROTECT_WC_MEMORY)(PVOID Context, PVOID HwDeviceExtension);
typedef NTSTATUS (*PTDI_IND_ERROR_EX)(PVOID TdiEventContext, NTSTATUS Status, PVOID Buffer);
typedef VP_STATUS (*RESTORE_WC_MEMORY)(PVOID Context, PVOID HwDeviceExtension);
struct _AAL34_PARAMETERS {USHORT ForwardMaxCPCSSDUSize;USHORT BackwardMaxCPCSSDUSize;USHORT LowestMID;USHORT HighestMID;UCHAR SSCSType;};
struct _ATM_AAL_OOB_INFO {ATM_AAL_TYPE AalType;_ATM_AAL_OOB_INFO___AD4C16959E83F25F8F24F94D7F83266F __anonymous0;};
struct _AVC_PEER_DO_LIST {ULONG Count;PDEVICE_OBJECT *Objects;};
struct _CIP_CANCEL_FRAME {HANDLE hConnect;PCIP_FRAME Frame;};
struct _CM_RESOURCE_LIST {ULONG Count;CM_FULL_RESOURCE_DESCRIPTOR List[1];};
struct _D3DKMT_MOVE_RECT {POINT SourcePoint;RECT DestRect;};
struct _DEVICE_RELATIONS {ULONG Count;PDEVICE_OBJECT Objects[1];};
struct _DISC_INFORMATION {UCHAR Length[2];unsigned char DiscStatus : 2;unsigned char LastSessionStatus : 2;unsigned char Erasable : 1;unsigned char Reserved1 : 3;UCHAR FirstTrackNumber;UCHAR NumberOfSessionsLsb;UCHAR LastSessionFirstTrackLsb;UCHAR LastSessionLastTrackLsb;unsigned char MrwStatus : 2;unsigned char MrwDirtyBit : 1;unsigned char Reserved2 : 2;unsigned char URU : 1;unsigned char DBC_V : 1;unsigned char DID_V : 1;UCHAR DiscType;UCHAR NumberOfSessionsMsb;UCHAR LastSessionFirstTrackMsb;UCHAR LastSessionLastTrackMsb;UCHAR DiskIdentification[4];UCHAR LastSessionLeadIn[4];UCHAR LastPossibleLeadOutStartTime[4];UCHAR DiskBarCode[8];UCHAR Reserved4;UCHAR NumberOPCEntries;OPC_TABLE_ENTRY OPCTable[1];};
struct _DISK_INFORMATION {UCHAR Length[2];unsigned char DiskStatus : 2;unsigned char LastSessionStatus : 2;unsigned char Erasable : 1;unsigned char Reserved1 : 3;UCHAR FirstTrackNumber;UCHAR NumberOfSessions;UCHAR LastSessionFirstTrack;UCHAR LastSessionLastTrack;unsigned char Reserved2 : 5;unsigned char GEN : 1;unsigned char DBC_V : 1;unsigned char DID_V : 1;UCHAR DiskType;UCHAR Reserved3[3];UCHAR DiskIdentification[4];UCHAR LastSessionLeadIn[4];UCHAR LastPossibleStartTime[4];UCHAR DiskBarCode[8];UCHAR Reserved4;UCHAR NumberOPCEntries;OPC_TABLE_ENTRY OPCTable[];};
struct _DMA_ADAPTER_INFO {ULONG Version;_DMA_ADAPTER_INFO___30CB67B4FA26260D4DCF21117DBD827C __anonymous0;};
struct _DOT11_RSSI_RANGE {DOT11_PHY_TYPE dot11PhyType;ULONG uRSSIMin;ULONG uRSSIMax;};
struct _ENUM_PDO_RESULTS {ULONG cEntries;ENUM_PDO_ENTRY rgEntries[1];};
struct _FILE_REGION_INFO {LONGLONG FileOffset;LONGLONG Length;ULONG Usage;ULONG Reserved;};
struct _IMAGE_DOS_HEADER {USHORT e_magic;USHORT e_cblp;USHORT e_cp;USHORT e_crlc;USHORT e_cparhdr;USHORT e_minalloc;USHORT e_maxalloc;USHORT e_ss;USHORT e_sp;USHORT e_csum;USHORT e_ip;USHORT e_cs;USHORT e_lfarlc;USHORT e_ovno;USHORT e_res[4];USHORT e_oemid;USHORT e_oeminfo;USHORT e_res2[10];LONG e_lfanew;};
struct _IMAGE_LINENUMBER {union _IMAGE_LINENUMBER___8F4018462B36FF5E08E7E47CD20461F4 Type;USHORT Linenumber;};
struct _IO_PRIORITY_INFO {ULONG Size;ULONG ThreadPriority;ULONG PagePriority;IO_PRIORITY_HINT IoPriority;};
struct _KSP_BDA_NODE_PIN {KSPROPERTY Property;ULONG ulNodeType;ULONG ulInputPinId;ULONG ulOutputPinId;};
struct _KTMOBJECT_CURSOR {GUID LastQuery;ULONG ObjectIdCount;GUID ObjectIds[1];};
struct _LINE_CALL_PARAMS {ULONG ulTotalSize;ULONG ulBearerMode;ULONG ulMinRate;ULONG ulMaxRate;ULONG ulMediaMode;ULONG ulCallParamFlags;ULONG ulAddressMode;ULONG ulAddressID;LINE_DIAL_PARAMS DialParams;ULONG ulOrigAddressSize;ULONG ulOrigAddressOffset;ULONG ulDisplayableAddressSize;ULONG ulDisplayableAddressOffset;ULONG ulCalledPartySize;ULONG ulCalledPartyOffset;ULONG ulCommentSize;ULONG ulCommentOffset;ULONG ulUserUserInfoSize;ULONG ulUserUserInfoOffset;ULONG ulHighLevelCompSize;ULONG ulHighLevelCompOffset;ULONG ulLowLevelCompSize;ULONG ulLowLevelCompOffset;ULONG ulDevSpecificSize;ULONG ulDevSpecificOffset;};
struct _MOUSE_ATTRIBUTES {USHORT MouseIdentifier;USHORT NumberOfButtons;USHORT SampleRate;ULONG InputDataQueueLength;};
struct _MSFC_TargetEvent {ULONG EventType;UCHAR PortWWN[8];UCHAR DiscoveredPortWWN[8];};
struct _MSiSCSI_Eventlog {ULONG Type;ULONG LogToEventlog;ULONG Size;UCHAR AdditionalData[1];};
struct _NDIS_802_11_SSID {ULONG SsidLength;UCHAR Ssid[32];};
struct _NDIS_802_11_TEST {ULONG Length;ULONG Type;_NDIS_802_11_TEST___EA8AE02B4DE78A1E972BFE0FFA71A62F __anonymous0;};
struct _OBJECT_TYPE_LIST {USHORT Level;USHORT Sbz;GUID *ObjectType;};
struct _PROCESSOR_NUMBER {USHORT Group;UCHAR Number;UCHAR Reserved;};
struct _PingIPAddress_IN {ULONG RequestCount;ULONG RequestSize;ULONG Timeout;ISCSI_IP_Address Address;};
struct _QOS_SHAPING_RATE {QOS_OBJECT_HDR ObjectHdr;ULONG ShapingRate;};
union _RATE_QUOTA_LIMIT {ULONG RateData;struct _RATE_QUOTA_LIMIT___79FA692AF2D868318B7516C685A0638E s;};
struct _SCRUB_DATA_INPUT {ULONG Size;ULONG Flags;ULONG MaximumIos;ULONG Reserved[17];UCHAR ResumeContext[816];};
struct _STOR_LOCK_HANDLE {STOR_SPINLOCK Lock;struct _STOR_LOCK_HANDLE___DF05CED8E4E68472CFDF14CBD12862B2 Context;};
struct _STOR_POFX_DEVICE {ULONG Version;ULONG Size;ULONG ComponentCount;ULONG Flags;STOR_POFX_COMPONENT Components[1];};
struct _SUB_Q_TRACK_ISRC {SUB_Q_HEADER Header;UCHAR FormatCode;UCHAR Reserved0;UCHAR Track;UCHAR Reserved1;unsigned char Reserved2 : 7;unsigned char Tcval : 1;UCHAR TrackIsrc[15];};
struct _TAPE_WRITE_MARKS {ULONG Type;ULONG Count;BOOLEAN Immediate;};
struct _TDI_ADDRESS_INFO {ULONG ActivityCount;TRANSPORT_ADDRESS Address;};
struct _TDI_REQUEST_SEND {TDI_REQUEST Request;USHORT SendFlags;};
struct _THROTTLING_STATE {LARGE_INTEGER NextTime;ULONG CurrentIncrement;ULONG MaximumDelay;LARGE_INTEGER Increment;ULONG NumberOfQueries;};
struct _TOKEN_PRIVILEGES {ULONG PrivilegeCount;LUID_AND_ATTRIBUTES Privileges[1];};
struct _WSK_PROVIDER_NPI {PWSK_CLIENT Client; WSK_PROVIDER_DISPATCH *Dispatch;};
struct _WSK_TDI_MAP_INFO { ULONG ElementCount; WSK_TDI_MAP *Map;};
struct _WWAN_LIST_HEADER {WWAN_STRUCT_TYPE ElementType;ULONG ElementCount;};
struct _wfinddata32i64_t {unsigned int attrib;__time32_t time_create;__time32_t time_access;__time32_t time_write;long long size;unsigned short name[260];};
struct localeinfo_struct {pthreadlocinfo locinfo;pthreadmbcinfo mbcinfo;};
typedef struct _DMA_ADAPTER *(*pHalGetDmaAdapter)(PVOID Context, struct _DEVICE_DESCRIPTION *DeviceDescriptor, PULONG NumberOfMapRegisters);
struct pcmwaveformat_tag {WAVEFORMAT wf;WORD wBitsPerSample;};
struct tagKS_AMVPDIMINFO {DWORD dwFieldWidth;DWORD dwFieldHeight;DWORD dwVBIWidth;DWORD dwVBIHeight;RECT rcValidRegion;};
struct DOT11_QOS_PARAMS {NDIS_OBJECT_HEADER Header;UCHAR ucEnabledQoSProtocolFlags;};
typedef BOOLEAN ( *DXGKCB_QUEUE_DPC)(HANDLE DeviceHandle);
typedef void FREE_FUNCTION_EX(PVOID Buffer, PLOOKASIDE_LIST_EX Lookaside);
struct HBA_FcpScsiEntry {HBA_SCSIID ScsiId;HBA_FCPID FcpId;};
typedef BOOLEAN HW_ADAPTER_STATE(PVOID DeviceExtension, PVOID Context, BOOLEAN SaveState);
typedef BOOLEAN (*IDE_HW_INTERRUPT)(PVOID ChannelExtension);
typedef BOOLEAN KSERVICE_ROUTINE(struct _KINTERRUPT *Interrupt, PVOID ServiceContext);
typedef void (*PFNBTH_REUSE_BRB)(PBRB pBrb, BRB_TYPE brbType);
typedef void (*PFNKSFILTERPOWER)(PKSFILTER Filter, DEVICE_POWER_STATE State);
typedef void (*PQUERY_LOG_USAGE)(PVOID LogHandle, PUSHORT PercentageFull);
typedef void (*PRETRIEVEUINT128)(PUCHAR Stream, PSDP_ULARGE_INTEGER_16 pUint128);
typedef void (*PRETRIEVEUUID128)(PUCHAR Stream, GUID *uuid128);
struct _AAL1_PARAMETERS {UCHAR Subtype;UCHAR CBRRate;USHORT Multiplier;UCHAR SourceClockRecoveryMethod;UCHAR ErrorCorrectionMethod;USHORT StructuredDataTransferBlocksize;UCHAR PartiallyFilledCellsMethod;};
struct _AAL5_PARAMETERS {ULONG ForwardMaxCPCSSDUSize;ULONG BackwardMaxCPCSSDUSize;UCHAR Mode;UCHAR SSCSType;};
struct _ACPI_ENUM_CHILD {ULONG Flags;ULONG NameLength;CHAR Name[1];};
struct _AGP_INFO_DRIVER {ULONG AGPReg1;ULONG AGPReg2;PHYSICAL_ADDRESS ApertureStart;PHYSICAL_ADDRESS GartTranslationTable;ULONG ApertureLength;};
struct _BDA_DISEQC_SEND {ULONG ulRequestId;ULONG ulPacketLength;BYTE argbPacketData[8];};
struct _CHANGER_ELEMENT {ELEMENT_TYPE ElementType;ULONG ElementAddress;};
struct _CHAR_IMAGE_INFO {CHAR_INFO CharInfo;FONT_IMAGE_INFO FontImageInfo;};
struct _CLS_WRITE_ENTRY {PVOID Buffer;ULONG ByteLength;};
struct _CM_MCA_POS_DATA {USHORT AdapterId;UCHAR PosData1;UCHAR PosData2;UCHAR PosData3;UCHAR PosData4;};
struct _CO_ADDRESS_LIST {ULONG NumberOfAddressesAvailable;ULONG NumberOfAddresses;CO_ADDRESS AddressList;};
struct _CREATE_DISK_GPT {GUID DiskId;ULONG MaxPartitionCount;};
struct _ChannelTypeInfo {ChannelType channelType;ULONGLONG timeStamp;};
struct _DISK_INT13_INFO {USHORT DriveSelect;ULONG MaxCylinders;USHORT SectorsPerTrack;USHORT MaxHeads;USHORT NumberDrives;};
struct _DOT4_DRIVER_CMD {CHANNEL_HANDLE hChannelHandle;ULONG ulSize;ULONG ulOffset;ULONG ulTimeout;};
struct _DXGK_DEVICEINFO {UINT DmaBufferSize;UINT DmaBufferSegmentSet;UINT DmaBufferPrivateDataSize;UINT AllocationListSize;UINT PatchLocationListSize;DXGK_DEVICEINFOFLAGS Flags;};
struct _DXGK_ENUM_PIVOT {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId;};
struct _ETHERNET_HEADER {DL_EUI48 Destination;DL_EUI48 Source;_ETHERNET_HEADER___1556FB332F5E2F39B2A0C943D96D0976 __anonymous0;};
struct _FCB_INIT_PACKET {PULONG pAttributes;PULONG pNumLinks;PLARGE_INTEGER pCreationTime;PLARGE_INTEGER pLastAccessTime;PLARGE_INTEGER pLastWriteTime;PLARGE_INTEGER pLastChangeTime;PLARGE_INTEGER pAllocationSize;PLARGE_INTEGER pFileSize;PLARGE_INTEGER pValidDataLength;};
struct _FILE_LEVEL_TRIM {ULONG Key;ULONG NumRanges;FILE_LEVEL_TRIM_RANGE Ranges[1];};
struct _FONT_IMAGE_INFO {COORD FontSize;PUCHAR ImageBits;};
struct _GET_MEDIA_TYPES {ULONG DeviceType;ULONG MediaInfoCount;DEVICE_MEDIA_INFO MediaInfo[1];};
struct _HIDP_REPORT_IDS {UCHAR ReportID;UCHAR CollectionNumber;USHORT InputLength;USHORT OutputLength;USHORT FeatureLength;};
struct _HW_CLOCK_OBJECT {PHW_CLOCK_FUNCTION HwClockFunction;ULONG ClockSupportFlags;ULONG Reserved[2];};
struct _HW_TIME_CONTEXT {struct _HW_DEVICE_EXTENSION *HwDeviceExtension;struct _HW_STREAM_OBJECT *HwStreamObject;TIME_FUNCTION Function;ULONGLONG Time;ULONGLONG SystemTime;};
struct _IO_STATUS_BLOCK {union _IO_STATUS_BLOCK___77CEE0AF02806C16F943E6B3BF8ECA77 u;ULONG_PTR Information;};
struct _IRB_REQ_CONTROL {ULONG ulIoControlCode;PMDL pInBuffer;ULONG ulInBufferLength;PMDL pOutBuffer;ULONG ulOutBufferLength;ULONG BytesReturned;};
struct _KEY_VALUE_ENTRY {PUNICODE_STRING ValueName;ULONG DataLength;ULONG DataOffset;ULONG Type;};
struct _KernelIdleState {ULONG Latency;ULONG Power;ULONG TimeCheck;UCHAR PromotePercent;UCHAR DemotePercent;UCHAR StateType;UCHAR Reserved;ULONG StateFlags;ULONG Context;ULONG IdleHandler;ULONG Reserved1;};
struct _LLDP_STATISTICS {ULONG Revision;SIZE_T Size;ULONG StatsAgeoutsTotal;ULONG StatsFramesDiscardedTotal;ULONG StatsFramesInErrorsTotal;ULONG StatsFramesInTotal;ULONG StatsFramesOutTotal;};
struct _LOCAL_NMISOURCE {UCHAR Type;UCHAR Length;UCHAR ProcessorID;USHORT Flags;UCHAR LINTIN;};
struct _MF_RESOURCE_MAP {ULONG Count;UCHAR Resources[1];};
struct _MPIO_DRIVE_INFO {ULONG NumberPaths;WCHAR Name[64];WCHAR SerialNumber[64];WCHAR DsmName[64];};
struct _MSMCAInfo_Entry {ULONG Length;UCHAR Data[1];};
struct _NDIS_802_11_WEP {ULONG Length;ULONG KeyIndex;ULONG KeyLength;UCHAR KeyMaterial[1];};
struct _NDIS_TAPI_CLOSE {ULONG ulRequestID;HDRV_LINE hdLine;};
struct _NETWORK_ADDRESS {USHORT AddressLength;USHORT AddressType;UCHAR Address[1];};
struct _PATHNAME_BUFFER {ULONG PathNameLength;WCHAR Name[1];};
struct _PMKID_CANDIDATE {NDIS_802_11_MAC_ADDRESS BSSID;ULONG Flags;};
struct _REASSIGN_BLOCKS {USHORT Reserved;USHORT Count;ULONG BlockNumber[1];};
struct _RegisteredGuids {ULONG GuidType;ULONG LoggerId;ULONG EnableLevel;ULONG EnableFlags;BOOLEAN IsEnabled;};
struct _RemoveTarget_IN {UCHAR HbaPortWWN[8];UCHAR DiscoveredPortWWN[8];ULONG AllTargets;};
struct _SDP_NODE_HEADER {LIST_ENTRY Link;USHORT Type;USHORT SpecificType;};
struct _SMARTCARD_REPLY {PUCHAR Buffer;ULONG BufferSize;ULONG BufferLength;};
struct _ScsiInquiry_OUT {ULONG Status;ULONG ResponseBufferSize;UCHAR ScsiStatus;UCHAR SenseBuffer[18];UCHAR ResponseBuffer[1];};
struct _SendTargets_OUT {ULONG Status;ULONG ResponseSize;UCHAR Response[1];};
struct _VPOSVERSIONINFO {ULONG Size;ULONG MajorVersion;ULONG MinorVersion;ULONG BuildNumber;USHORT ServicePackMajor;USHORT ServicePackMinor;};
union _WHEA_PCIXBUS_ID {struct _WHEA_PCIXBUS_ID___92536E19E1A4E63488016EDB40D91DA1 s;USHORT AsUSHORT;};
struct _WWAN_SMS_FILTER {WWAN_SMS_FLAG Flag;ULONG MessageIndex;};
struct _finddata64i32_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;_fsize_t size;char name[260];};
struct group_source_req {ULONG gsr_interface;SOCKADDR_STORAGE gsr_group;SOCKADDR_STORAGE gsr_source;};
struct nd_router_advert {ICMPV6_MESSAGE nd_ra_hdr;UINT32 nd_ra_reachable;UINT32 nd_ra_retransmit;};
typedef NTSTATUS (*pHalEndMirroring)(ULONG PassNumber);
struct sockaddr_storage {ADDRESS_FAMILY ss_family;CHAR __ss_pad1[6];long long __ss_align;CHAR __ss_pad2[112];};
typedef NTSTATUS (*DSM_PATH_VERIFY)(PVOID DsmContext, PVOID DsmId, PVOID PathId);
typedef NTSTATUS (*DSM_REMOVE_PATH)(PVOID DsmContext, PVOID PathId);
typedef struct _DMA_ADAPTER *GET_DMA_ADAPTER(PVOID Context, struct _DEVICE_DESCRIPTION *DeviceDescriptor, PULONG NumberOfMapRegisters);
struct HBA_FCPBinding2 {HBA_UINT32 NumberOfEntries;HBA_FCPBINDINGENTRY2 entry[1];};
struct IPInterfaceInfo {ulong iii_flags;ulong iii_mtu;ulong iii_speed;ulong iii_addrlength;uchar iii_addr[1];};
typedef void PCI_LINE_TO_PIN(PVOID Context, PPCI_COMMON_CONFIG PciNewData, PPCI_COMMON_CONFIG PciOldData);
typedef void PCI_PIN_TO_LINE(PVOID Context, PPCI_COMMON_CONFIG PciData);
typedef NTSTATUS (*PFNKSFILTERVOID)(PKSFILTER Filter);
typedef void (*PRETRIEVEUINT64)(PUCHAR Stream, PULONGLONG pUint16);
typedef void (*PUNLOCK_ROUTINE)(PVOID Context, PFILE_LOCK_INFO FileLockInfo);
struct _ADDRESS_OFFSET {USHORT Off_High;ULONG Off_Low;};
struct _BDA_SCAN_START {PBDARESULT lResult;ULONG LowerFrequency;ULONG HigerFrequency;};
struct _BDA_SCAN_STATE {PBDARESULT lResult;ULONG ulSignalLock;ULONG ulSecondsLeft;ULONG ulCurrentFrequency;};
struct _BOOT_AREA_INFO {ULONG BootSectorCount;struct _BOOT_AREA_INFO___3839CBDF84A3CC2804B95051FB4D4A6B BootSectors[2];};
struct _DISK_SIGNATURE {ULONG PartitionStyle;_DISK_SIGNATURE___9D353A9A2948DD7B98BCBBCC4F8D6995 __anonymous0;};
struct _DOT11_RATE_SET {ULONG uRateSetLength;UCHAR ucRateSet[126];};
struct _DXGK_VIDMMCAPS {_DXGK_VIDMMCAPS___0FC7972752449C7826273C22D7F8DC2B __anonymous0;UINT PagingNode;};
struct _EOF_WAIT_BLOCK {LIST_ENTRY EofWaitLinks;KEVENT Event;};
struct _GROUP_AFFINITY {KAFFINITY Mask;USHORT Group;USHORT Reserved[3];};
struct _HAL_ERROR_INFO {ULONG Version;ULONG InitMaxSize;ULONG McaMaxSize;ULONG McaPreviousEventsCount;ULONG McaCorrectedEventsCount;ULONG McaKernelDeliveryFails;ULONG McaDriverDpcQueueFails;ULONG McaReserved;ULONG CmcMaxSize;ULONG CmcPollingInterval;ULONG CmcInterruptsCount;ULONG CmcKernelDeliveryFails;ULONG CmcDriverDpcQueueFails;ULONG CmcGetStateFails;ULONG CmcClearStateFails;ULONG CmcReserved;ULONGLONG CmcLogId;ULONG CpeMaxSize;ULONG CpePollingInterval;ULONG CpeInterruptsCount;ULONG CpeKernelDeliveryFails;ULONG CpeDriverDpcQueueFails;ULONG CpeGetStateFails;ULONG CpeClearStateFails;ULONG CpeInterruptSources;ULONGLONG CpeLogId;ULONGLONG KernelReserved[4];};
struct _IDE_IO_CONTROL {ULONG HeaderLength;UCHAR Signature[8];ULONG Timeout;ULONG ControlCode;ULONG ReturnStatus;ULONG DataLength;};
struct _KBUGCHECK_DATA {ULONG BugCheckDataSize;ULONG BugCheckCode;ULONG_PTR Parameter1;ULONG_PTR Parameter2;ULONG_PTR Parameter3;ULONG_PTR Parameter4;};
struct _L2CAP_FLOWSPEC {UCHAR Flags;UCHAR ServiceType;ULONG TokenRate;ULONG TokenBucketSize;ULONG PeakBandwidth;ULONG Latency;ULONG DelayVariation;};
struct _LINE_CALL_INFO {ULONG ulTotalSize;ULONG ulNeededSize;ULONG ulUsedSize;ULONG hLine;ULONG ulLineDeviceID;ULONG ulAddressID;ULONG ulBearerMode;ULONG ulRate;ULONG ulMediaMode;ULONG ulAppSpecific;ULONG ulCallID;ULONG ulRelatedCallID;ULONG ulCallParamFlags;ULONG ulCallStates;ULONG ulMonitorDigitModes;ULONG ulMonitorMediaModes;LINE_DIAL_PARAMS DialParams;ULONG ulOrigin;ULONG ulReason;ULONG ulCompletionID;ULONG ulNumOwners;ULONG ulNumMonitors;ULONG ulCountryCode;ULONG ulTrunk;ULONG ulCallerIDFlags;ULONG ulCallerIDSize;ULONG ulCallerIDOffset;ULONG ulCallerIDNameSize;ULONG ulCallerIDNameOffset;ULONG ulCalledIDFlags;ULONG ulCalledIDSize;ULONG ulCalledIDOffset;ULONG ulCalledIDNameSize;ULONG ulCalledIDNameOffset;ULONG ulConnectedIDFlags;ULONG ulConnectedIDSize;ULONG ulConnectedIDOffset;ULONG ulConnectedIDNameSize;ULONG ulConnectedIDNameOffset;ULONG ulRedirectionIDFlags;ULONG ulRedirectionIDSize;ULONG ulRedirectionIDOffset;ULONG ulRedirectionIDNameSize;ULONG ulRedirectionIDNameOffset;ULONG ulRedirectingIDFlags;ULONG ulRedirectingIDSize;ULONG ulRedirectingIDOffset;ULONG ulRedirectingIDNameSize;ULONG ulRedirectingIDNameOffset;ULONG ulAppNameSize;ULONG ulAppNameOffset;ULONG ulDisplayableAddressSize;ULONG ulDisplayableAddressOffset;ULONG ulCalledPartySize;ULONG ulCalledPartyOffset;ULONG ulCommentSize;ULONG ulCommentOffset;ULONG ulDisplaySize;ULONG ulDisplayOffset;ULONG ulUserUserInfoSize;ULONG ulUserUserInfoOffset;ULONG ulHighLevelCompSize;ULONG ulHighLevelCompOffset;ULONG ulLowLevelCompSize;ULONG ulLowLevelCompOffset;ULONG ulChargingInfoSize;ULONG ulChargingInfoOffset;ULONG ulTerminalModesSize;ULONG ulTerminalModesOffset;ULONG ulDevSpecificSize;ULONG ulDevSpecificOffset;};
struct _LLDP_TLV_ARRAY {ULONG NumEntries;LLDP_TLV Tlvs[1];};
struct _MPIO_DISK_INFO {ULONG NumberDrives;MPIO_DRIVE_INFO DriveInfo[1];};
struct _MSFC_LinkEvent {ULONG EventType;UCHAR AdapterWWN[8];ULONG RLIRBufferSize;UCHAR RLIRBuffer[1];};
struct _MSFC_PortEvent {ULONG EventType;ULONG FabricPortId;UCHAR PortWWN[8];};
struct _NDIS_SPIN_LOCK {KSPIN_LOCK SpinLock;KIRQL OldIrql;};
struct _OSVERSIONINFOA {ULONG dwOSVersionInfoSize;ULONG dwMajorVersion;ULONG dwMinorVersion;ULONG dwBuildNumber;ULONG dwPlatformId;CHAR szCSDVersion[128];};
struct _OSVERSIONINFOW {ULONG dwOSVersionInfoSize;ULONG dwMajorVersion;ULONG dwMinorVersion;ULONG dwBuildNumber;ULONG dwPlatformId;WCHAR szCSDVersion[128];};
struct _RESP_NT_CANCEL {UCHAR WordCount;USHORT ByteCount;UCHAR Buffer[1];};
struct _SET_FCP_NOTIFY {ULONG Flags;NODE_ADDRESS NodeAddress;};
struct _SMARTBATTTABLE {DESCRIPTION_HEADER Header;ULONG WarningEnergyLevel;ULONG LowEnergyLevel;ULONG CriticalEnergyLevel;};
struct _SOCKET_ADDRESS {LPSOCKADDR lpSockaddr;INT iSockaddrLength;};
struct _SRB_IO_CONTROL {ULONG HeaderLength;UCHAR Signature[8];ULONG Timeout;ULONG ControlCode;ULONG ReturnCode;ULONG Length;};
struct _ScsiInquiry_IN {ULONGLONG UniqueSessionId;ULONGLONG Lun;UCHAR InquiryFlags;UCHAR PageCode;};
struct _SendRNIDV2_OUT {ULONG HBAStatus;ULONG TotalRspBufferSize;ULONG ActualRspBufferSize;UCHAR RspBuffer[1];};
struct _SendTargets_IN {ULONGLONG UniqueSessionId;WCHAR SendTargetsText[224];};
struct _T1_BLOCK_FRAME {UCHAR Nad;UCHAR Pcb;UCHAR Len;PUCHAR Inf;};
struct _TA_ADDRESS_IP6 {LONG TAAddressCount;struct _TA_ADDRESS_IP6___AddrIp6 Address[1];};
struct _TA_ADDRESS_IPX {LONG TAAddressCount;struct _TA_ADDRESS_IPX___AddrIpx Address[1];};
struct _TA_ADDRESS_VNS {LONG TAAddressCount;struct _TA_ADDRESS_VNS___AddrVns Address[1];};
struct _TDI_CMSGHDR_XP {SIZE_T cmsg_len;LONG cmsg_level;LONG cmsg_type;};
union _ULARGE_INTEGER {struct _ULARGE_INTEGER___A11EDDC93F80F43D83612CEB0708CAE5 s;struct _ULARGE_INTEGER___A11EDDC93F80F43D83612CEB0708CAE5 u;ULONGLONG QuadPart;};
struct _UNICODE_STRING {USHORT Length;USHORT MaximumLength;PWCH Buffer;};
union _USB_HUB_CHANGE {USHORT AsUshort16;_USB_HUB_CHANGE___369110CA5D91C0E783CF3CC547869E9E __anonymous0;};
union _USB_HUB_STATUS {USHORT AsUshort16;_USB_HUB_STATUS___851A5CE610B0F5793D26DBBD007348A4 __anonymous0;};
struct _VM_COUNTERS_EX {SIZE_T PeakVirtualSize;SIZE_T VirtualSize;ULONG PageFaultCount;SIZE_T PeakWorkingSetSize;SIZE_T WorkingSetSize;SIZE_T QuotaPeakPagedPoolUsage;SIZE_T QuotaPagedPoolUsage;SIZE_T QuotaPeakNonPagedPoolUsage;SIZE_T QuotaNonPagedPoolUsage;SIZE_T PagefileUsage;SIZE_T PeakPagefileUsage;SIZE_T PrivateUsage;};
union _WHEA_TIMESTAMP {struct _WHEA_TIMESTAMP___0E69AD184FCFEB7998E3B897182A8ACD s;LARGE_INTEGER AsLARGE_INTEGER;};
struct _WMIGUIDREGINFO {LPCGUID Guid;ULONG InstanceCount;ULONG Flags;};
struct _WSK_CLIENT_NPI {PVOID ClientContext; WSK_CLIENT_DISPATCH *Dispatch;};
struct _WSK_INSPECT_ID {ULONG_PTR Key;ULONG SerialNumber;};
struct _wfinddatai64_t {unsigned int attrib;time_t time_create;time_t time_access;time_t time_write;long long size;unsigned short name[260];};
struct tagSILO_COMMAND {UCHAR SiloIndex;UCHAR Command;ULONG cbCommandBuffer;UCHAR rgbCommandBuffer[1];};
struct DOT11_MAC_INFO {ULONG uReserved;ULONG uNdisPortNumber;DOT11_MAC_ADDRESS MacAddr;};
typedef IO_ALLOCATION_ACTION DRIVER_CONTROL(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp, PVOID MapRegisterBase, PVOID Context);
struct HBA_FCPBinding {HBA_UINT32 NumberOfEntries;HBA_FCPBINDINGENTRY entry[1];};
typedef void HW_DPC_ROUTINE(PSTOR_DPC Dpc, PVOID HwDeviceExtension, PVOID SystemArgument1, PVOID SystemArgument2);
typedef void IO_DPC_ROUTINE(PKDPC Dpc, struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp, PVOID Context);
typedef PSDP_NODE (*PCREATENODENIL)(ULONG tag);
typedef NTSTATUS (*PTDI_IND_ERROR)(PVOID TdiEventContext, NTSTATUS Status);
struct _ADDRESS_RANGE {USHORT AR_Off_High;USHORT AR_Length;ULONG AR_Off_Low;};
struct _CDB___PLAY_CD {UCHAR OperationCode;unsigned char Reserved1 : 1;unsigned char CMSF : 1;unsigned char ExpectedSectorType : 3;unsigned char Lun : 3;_CDB___PLAY_CD___1BD002DA5DC5A60CE81BB38F6FFAF58B __anonymous0;unsigned char Audio : 1;unsigned char Composite : 1;unsigned char Port1 : 1;unsigned char Port2 : 1;unsigned char Reserved2 : 3;unsigned char Speed : 1;UCHAR Control;};
union _DMAR_GCMD_REG {ULONG AsULONG;struct _DMAR_GCMD_REG___5304890D6886F1BE734326F607D0FB5D s;};
union _DMAR_GSTS_REG {ULONG AsULONG;struct _DMAR_GSTS_REG___7659272750ECE9356F44E000EC473E45 s;};
struct _DOT4_ACTIVITY {ULONG ulMessage;ULONG ulByteCount;CHANNEL_HANDLE hChannel;};
struct _FILE_PREFETCH {ULONG Type;ULONG Count;ULONGLONG Prefetch[1];};
struct _GET_UNIT_INFO {ULONG nLevel;PVOID Information;};
struct _IMAGE_INFO_EX {SIZE_T Size;IMAGE_INFO ImageInfo;struct _FILE_OBJECT *FileObject;};
struct _ISCSI_LUNList {ULONGLONG TargetLUN;ULONG OSLUN;ULONG Reserved;};
union _LARGE_INTEGER {struct _LARGE_INTEGER___824E624842C29B0A9DF85A636208834D s;struct _LARGE_INTEGER___824E624842C29B0A9DF85A636208834D u;LONGLONG QuadPart;};
struct _LINE_DEV_CAPS {ULONG ulTotalSize;ULONG ulNeededSize;ULONG ulUsedSize;ULONG ulProviderInfoSize;ULONG ulProviderInfoOffset;ULONG ulSwitchInfoSize;ULONG ulSwitchInfoOffset;ULONG ulPermanentLineID;ULONG ulLineNameSize;ULONG ulLineNameOffset;ULONG ulStringFormat;ULONG ulAddressModes;ULONG ulNumAddresses;ULONG ulBearerModes;ULONG ulMaxRate;ULONG ulMediaModes;ULONG ulGenerateToneModes;ULONG ulGenerateToneMaxNumFreq;ULONG ulGenerateDigitModes;ULONG ulMonitorToneMaxNumFreq;ULONG ulMonitorToneMaxNumEntries;ULONG ulMonitorDigitModes;ULONG ulGatherDigitsMinTimeout;ULONG ulGatherDigitsMaxTimeout;ULONG ulMedCtlDigitMaxListSize;ULONG ulMedCtlMediaMaxListSize;ULONG ulMedCtlToneMaxListSize;ULONG ulMedCtlCallStateMaxListSize;ULONG ulDevCapFlags;ULONG ulMaxNumActiveCalls;ULONG ulAnswerMode;ULONG ulRingModes;ULONG ulLineStates;ULONG ulUUIAcceptSize;ULONG ulUUIAnswerSize;ULONG ulUUIMakeCallSize;ULONG ulUUIDropSize;ULONG ulUUISendUserUserInfoSize;ULONG ulUUICallInfoSize;LINE_DIAL_PARAMS MinDialParams;LINE_DIAL_PARAMS MaxDialParams;LINE_DIAL_PARAMS DefaultDialParams;ULONG ulNumTerminals;ULONG ulTerminalCapsSize;ULONG ulTerminalCapsOffset;ULONG ulTerminalTextEntrySize;ULONG ulTerminalTextSize;ULONG ulTerminalTextOffset;ULONG ulDevSpecificSize;ULONG ulDevSpecificOffset;};
struct _LINKED_DEVICE {ULONG ChainUid;ULONG NumberOfLinksInChain;BOOLEAN LeadLink;};
struct _LOCK_STATE_EX {KIRQL OldIrql;UCHAR LockState;UCHAR Flags;};
struct _MOUNTDEV_NAME {USHORT NameLength;WCHAR Name[1];};
struct _MPIO_DSM_Path {ULONGLONG DsmPathId;ULONGLONG Reserved;ULONG PathWeight;ULONG PrimaryPath;};
struct _MSWmi_MofData {ULONG Unused1;ULONG Unused2;ULONG Size;ULONG Unused4;UCHAR BinaryMofData[1];};
struct _NDK_CONNECTOR {NDK_OBJECT_HEADER Header; NDK_CONNECTOR_DISPATCH *Dispatch;};
struct _PRIVILEGE_SET {ULONG PrivilegeCount;ULONG Control;LUID_AND_ATTRIBUTES Privilege[1];};
struct _PROCLOCALAPIC {UCHAR Type;UCHAR Length;UCHAR ACPIProcessorID;UCHAR APICID;ULONG Flags;};
struct _REQ_NT_CANCEL {UCHAR WordCount;USHORT ByteCount;UCHAR Buffer[1];};
struct _REQ_NT_RENAME {USHORT Fid;USHORT RenameFlags;UCHAR NewName[];};
struct _RX_WORK_ITEM_ {RX_WORK_QUEUE_ITEM WorkQueueItem;ULONG LastTick;ULONG Options;};
struct _SCSI_BUS_DATA {UCHAR NumberOfLogicalUnits;UCHAR InitiatorBusId;ULONG InquiryDataOffset;};
union _SENSE_DATA_EX {FIXED_SENSE_DATA FixedData;DESCRIPTOR_SENSE_DATA DescriptorData;};
struct _SET_UNIT_INFO {ULONG nLevel;PVOID Information;};
struct _SE_ADT_CLAIMS {ULONG Length;PCLAIMS_BLOB Claims;};
struct _SendRNIDV2_IN {UCHAR PortWWN[8];UCHAR DestWWN[8];ULONG DestFCID;ULONG NodeIdDataFormat;};
struct _TA_ADDRESS_IP {LONG TAAddressCount;struct _TA_ADDRESS_IP___AddrIp Address[1];};
struct _TA_ADDRESS_NS {LONG TAAddressCount;struct _TA_ADDRESS_NS___AddrNs Address[1];};
struct _TOKEN_CONTROL {LUID TokenId;LUID AuthenticationId;LUID ModifiedId;TOKEN_SOURCE TokenSource;};
union _WHEA_REVISION {struct _WHEA_REVISION___CA623CBB00D0468508E5ED0CE7B63B14 s;USHORT AsUSHORT;};
struct _WWAN_PROVIDER {WCHAR ProviderId[7];ULONG ProviderState;WCHAR ProviderName[21];ULONG WwanDataClass;};
struct _WWAN_SMS_READ {WWAN_SMS_FORMAT SmsFormat;WWAN_SMS_FILTER ReadFilter;};
struct _WWAN_SMS_SEND {WWAN_SMS_FORMAT SmsFormat;union _WWAN_SMS_SEND___ECED145D5F818BC1186127ADF514A07D u;};
union _XPF_MCE_FLAGS {struct _XPF_MCE_FLAGS___BEDAFFCF8B2FE2B464F6E114319CEB5E s;ULONG AsULONG;};
struct _wfinddata64_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;long long size;unsigned short name[260];};
struct in6_pktinfo_ex {IN6_PKTINFO pkt_info;SCOPE_ID scope_id;};
struct waveformat_tag {WORD wFormatTag;WORD nChannels;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;};
typedef void FILTER_STATUS(NDIS_HANDLE FilterModuleContext, PNDIS_STATUS_INDICATION StatusIndication);
typedef BOOLEAN HW_INITIALIZE(PVOID DeviceExtension);
typedef void MINIPORT_HALT(NDIS_HANDLE MiniportAdapterContext, NDIS_HALT_ACTION HaltAction);
typedef void (*NDK_FN_ARM_CQ)(NDK_CQ *pNdkCq, ULONG Type);
typedef void (*PAGP_GET_INFO)(PVOID AgpContext, PAGP_INFO AgpInfo);
typedef void (*PFLUSH_TO_LSN)(PVOID LogHandle, LARGE_INTEGER Lsn);
typedef void (*PFNKSPINPOWER)(PKSPIN Pin, DEVICE_POWER_STATE State);
typedef NTSTATUS ( *PMRX_CALLDOWN)(PRX_CONTEXT RxContext);
typedef NTSTATUS (*PREPLACE_SWAP)(PVOID Context);
struct SMHBA_Binding {HBA_UINT32 NumberOfEntries;SMHBA_BINDINGENTRY entry[1];};
struct _ADDRESS_FIFO {SLIST_ENTRY FifoList;PMDL FifoMdl;};
struct _AGP_STD_DATA {ULONGLONG ApertureBase;ULONG ApertureLength;ULONG AgpStatus;ULONG AgpCommand;};
struct _AUDIO_OUTPUT {UCHAR CodePage;UCHAR ParameterLength;UCHAR Immediate;UCHAR Reserved[2];UCHAR LbaFormat;UCHAR LogicalBlocksPerSecond[2];PORT_OUTPUT PortOutput[4];};
struct _AddTarget_IN {UCHAR HbaPortWWN[8];UCHAR DiscoveredPortWWN[8];ULONG AllTargets;};
struct _CC_BYTE_PAIR {BYTE Decoded[2];USHORT Reserved;};
struct _CMP_SET_PLUG {HANDLE hPlug;AV_PCR Pcr;};
struct _CONNECT_DATA {PDEVICE_OBJECT ClassDeviceObject;PVOID ClassService;};
struct _DRIVERSTATUS {UCHAR bDriverError;UCHAR bIDEError;UCHAR bReserved[2];ULONG dwReserved[2];};
struct _DSM_COUNTERS {ULONG PathVerifyEnabled;ULONG PathVerificationPeriod;ULONG PDORemovePeriod;ULONG RetryCount;ULONG RetryInterval;ULONG Reserved32;ULONGLONG Reserved64;};
struct _DualMonoInfo {LANGID LangID1;LANGID LangID2;LONG lISOLangCode1;LONG lISOLangCode2;};
struct _GENERIC_ANDX {UCHAR WordCount;UCHAR AndXCommand;UCHAR AndXReserved;USHORT AndXOffset;};
struct _KSM_PIN_PAIR {KSMETHOD Method;ULONG InputPinId;ULONG OutputPinId;ULONG Reserved;};
struct _KSYSTEM_TIME {ULONG LowPart;LONG High1Time;LONG High2Time;};
struct _LanguageInfo {LANGID LangID;LONG lISOLangCode;};
struct _NDK_LISTENER {NDK_OBJECT_HEADER Header; NDK_LISTENER_DISPATCH *Dispatch;};
struct _NLSTABLEINFO {CPTABLEINFO OemTableInfo;CPTABLEINFO AnsiTableInfo;PUSHORT UpperCaseTable;PUSHORT LowerCaseTable;};
struct _PREFIX_TABLE {CSHORT NodeTypeCode;CSHORT NameLength;PPREFIX_TABLE_ENTRY NextPrefixTree;};
struct _QUOTA_LIMITS {SIZE_T PagedPoolLimit;SIZE_T NonPagedPoolLimit;SIZE_T MinimumWorkingSetSize;SIZE_T MaximumWorkingSetSize;SIZE_T PagefileLimit;LARGE_INTEGER TimeLimit;};
struct _REGISTER_FIS {UCHAR FisType;unsigned char Reserved0 : 7;unsigned char CmdReg : 1;UCHAR Command;UCHAR Features;UCHAR SectorNumber;UCHAR CylinderLow;UCHAR CylinderHigh;UCHAR DeviceHead;UCHAR SectorNumberExp;UCHAR CylinderLowExp;UCHAR CylinderHighExp;UCHAR FeaturesExp;UCHAR SectorCount;UCHAR SectorCountExp;UCHAR Reserved2;UCHAR Control;ULONG Reserved3;};
struct _SCSI_ADDRESS {ULONG Length;UCHAR PortNumber;UCHAR PathId;UCHAR TargetId;UCHAR Lun;};
union _SLIST_HEADER {ULONGLONG Alignment;struct _SLIST_HEADER___D67E919714D5786AEADF401AEE8662CB s;};
struct _STATUS_BLOCK {_STATUS_BLOCK___176BD189C2C9FD33950A172BC44A9FB2 __anonymous0;ULONG_PTR Information;};
struct _SYSENV_VALUE {ULONG Attributes;ULONG ValueLength;UCHAR ValueData[1];};
struct _SendLIRR_OUT {ULONG HBAStatus;ULONG TotalRspBufferSize;ULONG ActualRspBufferSize;UCHAR RspBuffer[1];};
struct _SendRNID_OUT {ULONG HBAStatus;ULONG ResponseBufferCount;UCHAR ResponseBuffer[1];};
struct _TAPE_PREPARE {ULONG Operation;BOOLEAN Immediate;};
struct _TOKEN_GROUPS {ULONG GroupCount;SID_AND_ATTRIBUTES Groups[1];};
struct _TOKEN_SOURCE {CHAR SourceName[8];LUID SourceIdentifier;};
struct _WmiMonitorID {USHORT ProductCodeID[16];USHORT SerialNumberID[16];USHORT ManufacturerName[16];UCHAR WeekOfManufacture;USHORT YearOfManufacture;USHORT UserFriendlyNameLength;USHORT UserFriendlyName[1];};
struct _finddata32_t {unsigned int attrib;__time32_t time_create;__time32_t time_access;__time32_t time_write;_fsize_t size;char name[260];};
struct in_pktinfo_ex {IN_PKTINFO pkt_info;SCOPE_ID scope_id;};
struct tWAVEFORMATEX {WORD wFormatTag;WORD nChannels;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;WORD wBitsPerSample;WORD cbSize;};
typedef BOOLEAN HW_INTERRUPT(PVOID DeviceExtension);
typedef BOOLEAN (*IDE_HW_RESET)(PVOID ChannelExtension);
struct IPRouteBlock {ulong numofroutes;IPRouteEntry route[1];};
typedef BOOLEAN NMI_CALLBACK(PVOID Context, BOOLEAN Handled);
typedef NTSTATUS (*PREPLACE_END)(PVOID Context);
struct _ATM_BHLI_IE {ULONG HighLayerInfoType;ULONG HighLayerInfoLength;UCHAR HighLayerInfo[8];};
struct _ATM_BLLI_IE {ULONG Layer2Protocol;UCHAR Layer2Mode;UCHAR Layer2WindowSize;ULONG Layer2UserSpecifiedProtocol;ULONG Layer3Protocol;UCHAR Layer3Mode;UCHAR Layer3DefaultPacketSize;UCHAR Layer3PacketWindowSize;ULONG Layer3UserSpecifiedProtocol;ULONG Layer3IPI;UCHAR SnapId[5];};
struct _ATM_PVC_SAP {ATM_BLLI_IE Blli;ATM_BHLI_IE Bhli;};
struct _BDA_PID_MAP {MEDIA_SAMPLE_CONTENT MediaSampleContent;ULONG ulcPIDs;ULONG aulPIDs[1];};
struct _BIN_RESULTS {ULONG NumberOfBins;BIN_COUNT BinCounts[1];};
struct _CREATE_DISK {PARTITION_STYLE PartitionStyle;union _CREATE_DISK___E6D8F73FA11FE79B0BBE7B30BDE20C7B u;};
struct _CSADDR_INFO {SOCKET_ADDRESS LocalAddr;SOCKET_ADDRESS RemoteAddr;INT iSocketType;INT iProtocol;};
struct _ChannelInfo {LONG lFrequency;_ChannelInfo___A19F8CC3FA49014D8618ED22280592FE __anonymous0;};
struct _DEVICESCOPE {UCHAR Type;UCHAR Length;UCHAR Reserved[2];UCHAR EnumerationId;UCHAR StartBusNumber;struct _DEVICESCOPE___0E40B4712A51F81A51768366A691CE53 PCIPath[1];};
struct _DMA_ADAPTER {USHORT Version;USHORT Size;PDMA_OPERATIONS DmaOperations;};
struct _DUMP_DRIVER {PVOID DumpDriverList;WCHAR DriverName[15];WCHAR BaseName[15];};
struct _ICMP_HEADER {UINT8 Type;UINT8 Code;UINT16 Checksum;};
union _IVRS_IVINFO {UINT32 AsUINT32;struct _IVRS_IVINFO___B647E9AE4D013B6F339A233AA25F8EF5 s;};
struct _NDK_ADAPTER {NDK_OBJECT_HEADER Header; NDK_ADAPTER_DISPATCH *Dispatch;};
union _NET_LUID_LH {ULONG64 Value;struct _NET_LUID_LH___0227A65EDE726BD8ABDBF310B0E65A75 Info;};
struct _OWNER_ENTRY {ERESOURCE_THREAD OwnerThread;_OWNER_ENTRY___6B4978F9925CAA83AD6686635A513271 __anonymous0;};
union _POWER_STATE {SYSTEM_POWER_STATE SystemState;DEVICE_POWER_STATE DeviceState;};
struct _QOS_SD_MODE {QOS_OBJECT_HDR ObjectHdr;ULONG ShapeDiscardMode;};
struct _SI_COPYFILE {ULONG SourceFileNameLength;ULONG DestinationFileNameLength;ULONG Flags;WCHAR FileNameBuffer[1];};
struct _SNAP_HEADER {UINT8 Dsap;UINT8 Ssap;UINT8 Control;UINT8 Oui[3];UINT16 Type;};
struct _SendRLS_OUT {ULONG HBAStatus;ULONG TotalRspBufferSize;ULONG ActualRspBufferSize;UCHAR RspBuffer[1];};
struct _SendRNID_IN {UCHAR wwn[8];ULONG wwntype;};
struct _SendRPL_OUT {ULONG HBAStatus;ULONG TotalRspBufferSize;ULONG ActualRspBufferSize;UCHAR RspBuffer[1];};
struct _SendRPS_OUT {ULONG HBAStatus;ULONG TotalRspBufferSize;ULONG ActualRspBufferSize;UCHAR RspBuffer[1];};
struct _SendSRL_OUT {ULONG HBAStatus;ULONG TotalRspBufferSize;ULONG ActualRspBufferSize;UCHAR RspBuffer[1];};
struct _VM_COUNTERS {SIZE_T PeakVirtualSize;SIZE_T VirtualSize;ULONG PageFaultCount;SIZE_T PeakWorkingSetSize;SIZE_T WorkingSetSize;SIZE_T QuotaPeakPagedPoolUsage;SIZE_T QuotaPagedPoolUsage;SIZE_T QuotaPeakNonPagedPoolUsage;SIZE_T QuotaNonPagedPoolUsage;SIZE_T PagefileUsage;SIZE_T PeakPagefileUsage;};
struct _VOLUMELABEL {UCHAR cch;CHAR szVolLabel[12];};
struct _ZONE_HEADER {SINGLE_LIST_ENTRY FreeList;SINGLE_LIST_ENTRY SegmentList;ULONG BlockSize;ULONG TotalSegmentSize;};
struct addrinfoex2A {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;size_t ai_addrlen;char *ai_canonname;struct sockaddr *ai_addr;void *ai_blob;size_t ai_bloblen;LPGUID ai_provider;struct addrinfoex2A *ai_next;int ai_version;char *ai_fqdn;};
struct tagDRMRIGHTS {BOOL CopyProtect;ULONG Reserved;BOOL DigitalOutputDisable;};
typedef NTSTATUS DUMP_FINISH(PFILTER_EXTENSION FilterExtension);
typedef NTSTATUS DUMP_UNLOAD(PFILTER_EXTENSION FilterExtension);
struct IPAddrEntry {ulong iae_addr;ulong iae_index;ulong iae_mask;ulong iae_bcastaddr;ulong iae_reasmsize;ushort iae_context;ushort iae_pad;};
typedef NTSTATUS (*PFNKSDEVICE)(PKSDEVICE Device);
typedef void (*PciLine2Pin)(struct _BUS_HANDLER *BusHandler, struct _BUS_HANDLER *RootHandler, PCI_SLOT_NUMBER SlotNumber, PPCI_COMMON_CONFIG PciNewData, PPCI_COMMON_CONFIG PciOldData);
typedef void (*PciPin2Line)(struct _BUS_HANDLER *BusHandler, struct _BUS_HANDLER *RootHandler, PCI_SLOT_NUMBER SlotNumber, PPCI_COMMON_CONFIG PciData);
typedef NDIS_STATUS SET_OPTIONS(NDIS_HANDLE NdisDriverHandle, NDIS_HANDLE DriverContext);
struct _ACE_HEADER {UCHAR AceType;UCHAR AceFlags;USHORT AceSize;};
struct _ARP_HEADER {USHORT HardwareAddressSpace;USHORT ProtocolAddressSpace;UCHAR HardwareAddressLength;UCHAR ProtocolAddressLength;USHORT Opcode;UCHAR SenderHardwareAddress[];};
struct _ATM_RAW_IE {ULONG RawIELength;ULONG RawIEType;UCHAR RawIEValue[1];};
struct _BOOT_TABLE {DESCRIPTION_HEADER Header;UCHAR CMOSIndex;UCHAR Reserved[3];};
struct _BSSID_INFO {NDIS_802_11_MAC_ADDRESS BSSID;NDIS_802_11_PMKID_VALUE PMKID;};
struct _CO_ADDRESS {ULONG AddressSize;UCHAR Address[1];};
struct _DEVPROPKEY {DEVPROPGUID fmtid;DEVPROPID pid;};
struct _DOT11_SSID {ULONG uSSIDLength;UCHAR ucSSID[32];};
union _EIGHT_BYTE {_EIGHT_BYTE___F1176AC26BBE1D3664185011CC8CE040 __anonymous0;ULONGLONG AsULongLong;};
struct _FSALLOCATE {ULONG idFileSystem;ULONG cSectorUnit;ULONG cUnit;ULONG cUnitAvail;USHORT cbSector;};
struct _I2CControl {ULONG Command;ULONG dwCookie;UCHAR Data;UCHAR Reserved[3];ULONG Flags;ULONG Status;ULONG ClockRate;};
struct _IO_ADDRESS {NODE_ADDRESS IA_Destination_ID;ADDRESS_OFFSET IA_Destination_Offset;};
struct _IPPT_TABLE {DESCRIPTION_HEADER Header;ULONG Flags;ULONG Reserved[3];};
struct _ISCSI_Path {ULONGLONG UniqueConnectionId;ULONGLONG EstimatedLinkSpeed;ULONG PathWeight;ULONG PrimaryPath;ULONG ConnectionStatus;ULONG TCPOffLoadAvailable;};
struct _KAPC_STATE {LIST_ENTRY ApcListHead[2];struct _KPROCESS *Process;BOOLEAN KernelApcInProgress;BOOLEAN KernelApcPending;BOOLEAN UserApcPending;};
struct _KSEMAPHORE {DISPATCHER_HEADER Header;LONG Limit;};
struct _LOCK_STATE {USHORT LockState;KIRQL OldIrql;};
union _MCG_STATUS {struct _MCG_STATUS___65E0EF83A2317964BD9F5E638D1B3E1C s;ULONGLONG QuadPart;};
union _MCI_STATUS {struct _MCI_STATUS___1D31C29479B2395600399FA7C9D42D3F s;ULONG64 QuadPart;};
struct _NDIS_TIMER {KTIMER Timer;KDPC Dpc;};
struct _OEM0_TABLE {DESCRIPTION_HEADER Header;UCHAR Data[64];};
struct _RTL_BITMAP {ULONG SizeOfBitMap;PULONG Buffer;};
struct _SE_EXPORTS {LUID SeCreateTokenPrivilege;LUID SeAssignPrimaryTokenPrivilege;LUID SeLockMemoryPrivilege;LUID SeIncreaseQuotaPrivilege;LUID SeUnsolicitedInputPrivilege;LUID SeTcbPrivilege;LUID SeSecurityPrivilege;LUID SeTakeOwnershipPrivilege;LUID SeLoadDriverPrivilege;LUID SeCreatePagefilePrivilege;LUID SeIncreaseBasePriorityPrivilege;LUID SeSystemProfilePrivilege;LUID SeSystemtimePrivilege;LUID SeProfileSingleProcessPrivilege;LUID SeCreatePermanentPrivilege;LUID SeBackupPrivilege;LUID SeRestorePrivilege;LUID SeShutdownPrivilege;LUID SeDebugPrivilege;LUID SeAuditPrivilege;LUID SeSystemEnvironmentPrivilege;LUID SeChangeNotifyPrivilege;LUID SeRemoteShutdownPrivilege;PSID SeNullSid;PSID SeWorldSid;PSID SeLocalSid;PSID SeCreatorOwnerSid;PSID SeCreatorGroupSid;PSID SeNtAuthoritySid;PSID SeDialupSid;PSID SeNetworkSid;PSID SeBatchSid;PSID SeInteractiveSid;PSID SeLocalSystemSid;PSID SeAliasAdminsSid;PSID SeAliasUsersSid;PSID SeAliasGuestsSid;PSID SeAliasPowerUsersSid;PSID SeAliasAccountOpsSid;PSID SeAliasSystemOpsSid;PSID SeAliasPrintOpsSid;PSID SeAliasBackupOpsSid;PSID SeAuthenticatedUsersSid;PSID SeRestrictedSid;PSID SeAnonymousLogonSid;LUID SeUndockPrivilege;LUID SeSyncAgentPrivilege;LUID SeEnableDelegationPrivilege;PSID SeLocalServiceSid;PSID SeNetworkServiceSid;LUID SeManageVolumePrivilege;LUID SeImpersonatePrivilege;LUID SeCreateGlobalPrivilege;LUID SeTrustedCredManAccessPrivilege;LUID SeRelabelPrivilege;LUID SeIncreaseWorkingSetPrivilege;LUID SeTimeZonePrivilege;LUID SeCreateSymbolicLinkPrivilege;PSID SeIUserSid;PSID SeUntrustedMandatorySid;PSID SeLowMandatorySid;PSID SeMediumMandatorySid;PSID SeHighMandatorySid;PSID SeSystemMandatorySid;PSID SeOwnerRightsSid;PSID SeAllAppPackagesSid;PSID SeUserModeDriversSid;PSID SeTrustedInstallerSid;};
struct _SMB_PARAMS {UCHAR WordCount;USHORT ByteCount;};
struct _SendRPL_IN {UCHAR PortWWN[8];UCHAR AgentWWN[8];ULONG agent_domain;ULONG portIndex;};
struct _SendRPS_IN {UCHAR PortWWN[8];UCHAR AgentWWN[8];UCHAR ObjectWWN[8];ULONG AgentDomain;ULONG ObjectPortNumber;};
struct _SendSRL_IN {UCHAR PortWWN[8];UCHAR WWN[8];ULONG Domain;};
struct _TAPE_ERASE {ULONG Type;BOOLEAN Immediate;};
struct _TA_ADDRESS {USHORT AddressLength;USHORT AddressType;UCHAR Address[1];};
struct _WST_BUFFER {VBICODECFILTERING_SCANLINES ScanlinesRequested;WST_BUFFER_LINE WstLines[17];};
struct _XSAVE_AREA {XSAVE_FORMAT LegacyState;XSAVE_AREA_HEADER Header;};
struct _finddata_t {unsigned int attrib;time_t time_create;time_t time_access;time_t time_write;_fsize_t size;char name[260];};
struct addrinfoexA {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;size_t ai_addrlen;char *ai_canonname;struct sockaddr *ai_addr;void *ai_blob;size_t ai_bloblen;LPGUID ai_provider;struct addrinfoexA *ai_next;};
struct in6_pktinfo {IN6_ADDR ipi6_addr;ULONG ipi6_ifindex;};
struct nd_redirect {ICMPV6_MESSAGE nd_rd_hdr;IN6_ADDR nd_rd_target;IN6_ADDR nd_rd_dst;};
struct sockaddr_dl {ADDRESS_FAMILY sdl_family;UCHAR sdl_data[8];UCHAR sdl_zero[4];};
struct tcp_opt_mss {UINT8 Kind;UINT8 Length;UINT16 Mss;};
typedef NTSTATUS (*DSM_UNLOAD)(PVOID DsmContext);
typedef NTSTATUS DUMP_START(PFILTER_EXTENSION FilterExtension);
struct SLIT_TABLE {DESCRIPTION_HEADER Header;ULONGLONG LocalityCount;};
union SMHBA_Port {SMHBA_FC_PORT *FCPort;SMHBA_SAS_PORT *SASPort;};
struct _ACPI_SRAT {DESCRIPTION_HEADER Header;ULONG TableRevision;ULONG Reserved[2];};
struct _BIN_COUNT {BIN_RANGE BinRange;ULONG BinCount;};
struct _CDROM_TOC {UCHAR Length[2];UCHAR FirstTrack;UCHAR LastTrack;TRACK_DATA TrackData[100];};
struct _CHAR_INFO {union _CHAR_INFO___0E79EC4DAC98A4AB202537FA8C3F69FC Char;USHORT Attributes;};
struct _CO_HEADER {CO_TYPE Type;CO_LENGTH Length;};
struct _ENG_EVENT {PVOID pKEvent;ULONG fFlags;};
union _FOUR_BYTE {_FOUR_BYTE___052E3EAE3F81046A720753D4C5FCE875 __anonymous0;ULONG AsULong;};
struct _HBAScsiID {ULONG ScsiBusNumber;ULONG ScsiTargetNumber;ULONG ScsiOSLun;USHORT OSDeviceName[257];};
struct _HIDP_CAPS {USAGE Usage;USAGE UsagePage;USHORT InputReportByteLength;USHORT OutputReportByteLength;USHORT FeatureReportByteLength;USHORT Reserved[17];USHORT NumberLinkCollectionNodes;USHORT NumberInputButtonCaps;USHORT NumberInputValueCaps;USHORT NumberInputDataIndices;USHORT NumberOutputButtonCaps;USHORT NumberOutputValueCaps;USHORT NumberOutputDataIndices;USHORT NumberFeatureButtonCaps;USHORT NumberFeatureValueCaps;USHORT NumberFeatureDataIndices;};
struct _HIDP_DATA {USHORT DataIndex;USHORT Reserved;_HIDP_DATA___054E66EBAEB900A97FB470AAB272100E __anonymous0;};
struct _KSMAPPING {PHYSICAL_ADDRESS PhysicalAddress;ULONG ByteCount;ULONG Alignment;};
struct _LARGE_MCB {PKGUARDED_MUTEX GuardedMutex;BASE_MCB BaseMcb;};
union _MCI_STATS {struct _MCI_STATS___C2A101EC7ECF14B971CBBE2E489A1AF6 MciStats;ULONGLONG QuadPart;};
struct _PMI_EVENT {ULONG Version;PMI_EVENT_TYPE EventType;};
struct _SFI_TIMER {GEN_ADDR Address;ULONG FemtosecondsPerTick;ULONG Gsi;};
struct in_pktinfo {IN_ADDR ipi_addr;ULONG ipi_ifindex;};
struct tcp_opt_ts {UINT8 Kind;UINT8 Length;UINT32 Val;UINT32 EcR;};
typedef NTSTATUS (*PFREETREE)(PSDP_TREE_ROOT_NODE Tree);
union _DL_EUI48 {UINT8 Byte[6];_DL_EUI48___537D01AC81A8B528D810E8012560EBBE __anonymous0;};
struct _DXGK_PDE {_DXGK_PDE___7E37419C9C4A9D7B990FC9CE94D534E4 __anonymous0;UINT PageTableSizeInPages;};
struct _FPO_DATA {ULONG ulOffStart;ULONG cbProcSize;ULONG cdwLocals;USHORT cdwParams;unsigned short cbProlog : 8;unsigned short cbRegs : 3;unsigned short fHasSEH : 1;unsigned short fUseBP : 1;unsigned short reserved : 1;unsigned short cbFrame : 2;};
struct _GEN_ADDR {UCHAR AddressSpaceID;UCHAR BitWidth;UCHAR BitOffset;UCHAR AccessSize;PHYSICAL_ADDRESS Address;};
struct _LOG_PAGE {unsigned char PageCode : 6;unsigned char SPF : 1;unsigned char DS : 1;UCHAR SubPageCode;UCHAR PageLength[2];LOG_PARAMETER Parameters[];};
union _MCI_ADDR {struct _MCI_ADDR___A76831D64C2EAE3852FBB9C70B9C2DA0 s;ULONGLONG QuadPart;};
struct _OBJECTID {GUID Lineage;ULONG Uniquifier;};
struct _PERF_BIN {ULONG NumberOfBins;ULONG TypeOfBin;BIN_RANGE BinsRanges[1];};
struct _PTS_DATA {UCHAR Type;UCHAR Fl;UCHAR Dl;ULONG CLKFrequency;ULONG DataRate;UCHAR StopBits;};
union _SMB_DATE {USHORT Ushort;struct _SMB_DATE___04CC96DF4805108A95FF2CDA81BBA394 Struct;};
union _SMB_TIME {USHORT Ushort;struct _SMB_TIME___0AFD35857EE7B930B2A5C166E7350CD8 Struct;};
struct _STOR_DPC {DPC_BUFFER Dpc;ULONG_PTR Lock;};
struct _STRING32 {USHORT Length;USHORT MaximumLength;ULONG Buffer;};
struct _STRING64 {USHORT Length;USHORT MaximumLength;ULONGLONG Buffer;};
union _TWO_BYTE {_TWO_BYTE___A43753048E566B87C8933E4D36C3FCE6 __anonymous0;USHORT AsUShort;};
struct _VLAN_TAG {_VLAN_TAG___439FFFA6F528943BE2F423ED909F8DC1 __anonymous0;UINT16 Type;};
struct _WHEA128A {ULONGLONG Low;LONGLONG High;};
struct _flowspec {ULONG TokenRate;ULONG TokenBucketSize;ULONG PeakBandwidth;ULONG Latency;ULONG DelayVariation;SERVICETYPE ServiceType;ULONG MaxSduSize;ULONG MinimumPolicedSize;};
union _timecode {_timecode___6889D7C8638655C86F211076F8C624CB __anonymous0;DWORDLONG qw;};
struct group_req {ULONG gr_interface;SOCKADDR_STORAGE gr_group;};
struct ipv6_mreq {IN6_ADDR ipv6mr_multiaddr;ULONG ipv6mr_interface;};
typedef NTSTATUS (*PFNKSPIN)(PKSPIN Pin);
struct _BRB_PSM {BRB_HEADER Hdr;USHORT Psm;};
struct _DSM_IDS {ULONG Count;PVOID IdList[1];};
struct _FEALIST {ULONG cbList;FEA list[1];};
struct _GEALIST {ULONG cbList;GEA list[1];};
struct _NDK_SRQ {NDK_OBJECT_HEADER Header; NDK_SRQ_DISPATCH *Dispatch;};
struct _RIO_BUF {RIO_BUFFERID BufferId;ULONG Offset;ULONG Length;};
struct _RSDT_32 {DESCRIPTION_HEADER Header;ULONG Tables[1];};
struct sockaddr {ADDRESS_FAMILY sa_family;CHAR sa_data[14];};
struct _CO_PVC {NDIS_HANDLE NdisAfHandle;CO_SPECIFIC_PARAMETERS PvcParameters;};
union _DL_OUI {UINT8 Byte[3];_DL_OUI___AD92321663AD4FB1F8CDF3CCCCCE05F2 __anonymous0;};
struct _FSINFO {ULONG ulVsn;VOLUMELABEL vol;};
struct _IOAPIC {UCHAR Type;UCHAR Length;UCHAR IOAPICID;UCHAR Reserved;ULONG IOAPICAddress;ULONG SystemVectorBase;};
struct _KSGATE {LONG Count;PKSGATE NextGate;};
union _LENGTH {struct _LENGTH___C09D2434E28C17F81CB8FDACD5F0366E l;struct _LENGTH___44C0F8F40373C59203C7FC1E796772D8 b;};
struct _NDK_CQ {NDK_OBJECT_HEADER Header; NDK_CQ_DISPATCH *Dispatch;};
struct _NDK_MR {NDK_OBJECT_HEADER Header; NDK_MR_DISPATCH *Dispatch;};
struct _NDK_MW {NDK_OBJECT_HEADER Header; NDK_MW_DISPATCH *Dispatch;};
struct _NDK_PD {NDK_OBJECT_HEADER Header; NDK_PD_DISPATCH *Dispatch;};
struct _NDK_QP {NDK_OBJECT_HEADER Header; NDK_QP_DISPATCH *Dispatch;};
struct _STRING {USHORT Length;USHORT MaximumLength;PCHAR Buffer;};
union _UCHAR2 {UCHAR Uchar[2];USHORT ForceAlignment;};
union _UCHAR4 {UCHAR Uchar[4];ULONG ForceAlignment;};
struct _WSABUF {ULONG len;CHAR *buf;};
struct cmsghdr {SIZE_T cmsg_len;INT cmsg_level;INT cmsg_type;};
typedef NTSTATUS (*PFNFTH)(PSYSTEM_FIRMWARE_TABLE_INFORMATION SystemFirmwareTableInfo);
struct _M128A {ULONGLONG Low;LONGLONG High;};
struct _MAPIC {DESCRIPTION_HEADER Header;ULONG LocalAPICAddress;ULONG Flags;ULONG APICTables[1];};
struct _DSDT {DESCRIPTION_HEADER Header;UCHAR DiffDefBlock[1];};
struct _LUID {ULONG LowPart;LONG HighPart;};
struct _XSDT {DESCRIPTION_HEADER Header;PHYSICAL_ADDRESS Tables[1];};
struct _ACL {UCHAR AclRevision;UCHAR Sbz1;USHORT AclSize;USHORT AceCount;USHORT Sbz2;};
struct _FEA {UCHAR fEA;UCHAR cbName;USHORT cbValue;};
struct _GEA {UCHAR cbName;CHAR szName[1];};
struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711___764ECECA7B0364BB3FF4D84547E713EE {ULONG Flags;ULONG FrameID;FLT_FILESYSTEM_TYPE VolumeFileSystemType;USHORT InstanceNameLength;USHORT InstanceNameBufferOffset;USHORT AltitudeLength;USHORT AltitudeBufferOffset;USHORT VolumeNameLength;USHORT VolumeNameBufferOffset;USHORT FilterNameLength;USHORT FilterNameBufferOffset;ULONG SupportedFeatures;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR_________DE3CCB929DB832FEAC38EBA7195AFD95___D155ACCA6E988C466DB4311FB52073D0 {USHORT Reserved;USHORT MessageCount;ULONG Vector;KAFFINITY Affinity;};
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___5361B51F0EE27E908DA5F02E9D475C54 {ULONG GppPartitionId;ULONG Length;ULONGLONG Offset;UCHAR Data[1024];};
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___54911E495599BDFB05E828710D67429F {D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId;PHYSICAL_ADDRESS PhysicalAddress;UINT PhysicalAdapterMask;};
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___D5430022CEFEEB8C97042C1E85AA2BC0 {D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId;UINT PhysicalAdapterMask;UINT MultiPlaneOverlayVsyncInfoCount;DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO *pMultiPlaneOverlayVsyncInfo;};
struct _DXGKARG_BUILDPAGINGBUFFER______AB1AD8C4B599AC16D84572F0ADA81B2A___31A6E6E69D11548870F9DD66858D70C9 {UINT SegmentId;_DXGKARG_BUILDPAGINGBUFFER_________31A6E6E69D11548870F9DD66858D70C9___44EAA8E240A8DE9BFA1FE26FC8D5EF22 __anonymous0;PVOID VirtualAddress;};
struct _NETWORK_OPEN_ECP_CONTEXT___4394467ED109257AE2A2394666F4A3B8___2FC93A188CFE60146508D166162219FF {NETWORK_OPEN_LOCATION_QUALIFIER Location;NETWORK_OPEN_INTEGRITY_QUALIFIER Integrity;ULONG Flags;};
union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___2986B08B47BF9BFD72B43A2B98AB18CC {union _DISPATCHER_HEADER_________2986B08B47BF9BFD72B43A2B98AB18CC___AAB494C8674620924F4E93AFE0F5B426 u;UCHAR Abandoned;BOOLEAN Signalling;};
struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___3474FE5EDFA452AAD9BE6166E926835A {SDCMD_DESCRIPTOR CmdDesc;ULONG Argument;PMDL Mdl;ULONG Length;};
struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___79DCBD39C0DB0D790BAE7BE236DF2C3A {SDBUS_PROPERTY Property;PVOID Buffer;ULONG Length;};
struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___27183FC11B178907B5D2BB34AFACE7F1 {USHORT SubstituteNameOffset;USHORT SubstituteNameLength;USHORT PrintNameOffset;USHORT PrintNameLength;ULONG Flags;WCHAR PathBuffer[1];};
struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___27183FC11B178907B5D2BB34AFACE7F1 {USHORT SubstituteNameOffset;USHORT SubstituteNameLength;USHORT PrintNameOffset;USHORT PrintNameLength;ULONG Flags;WCHAR PathBuffer[1];};
struct _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C___88882CC45E21AA3B08D6DD74C9D19C54 {LARGE_INTEGER Cylinders;STORAGE_MEDIA_TYPE MediaType;ULONG TracksPerCylinder;ULONG SectorsPerTrack;ULONG BytesPerSector;ULONG NumberMediaSides;ULONG MediaCharacteristics;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___525464D5DCAD8B8C6AA0F9E4B917EADA {ULONG Length;PSID StartSid;PFILE_GET_QUOTA_INFORMATION SidList;ULONG SidListLength;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___68F4161CE02EA63EA7D518C4FD2536A7 {PIO_SECURITY_CONTEXT SecurityContext;ULONG Options;USHORT FileAttributes;USHORT ShareAccess;ULONG EaLength;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___6B2C785D143F1FC8838B7561470E9FA8 {PLARGE_INTEGER Length;ULONG Key;LARGE_INTEGER ByteOffset;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A9C83915A7FBD780C6C13045BCED6336 {ULONG Length;PUNICODE_STRING FileName;FILE_INFORMATION_CLASS FileInformationClass;ULONG FileIndex;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___D24474CE3B68EBF89E5A61C71CBC75EE {ULONG_PTR ProviderId;PVOID DataPath;ULONG BufferSize;PVOID Buffer;};
struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___934BEDD351FC4B1D46DCE8BA1EC27DBF {UCHAR Reserved[2];ULONG ProximityDomain;ULONG ApicId;struct _ACPI_SRAT_ENTRY______934BEDD351FC4B1D46DCE8BA1EC27DBF___1196FF6CE8067B2B35B898660F75E27E Flags;ULONG ClockDomain;ULONG Reserved2;};
struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___B5E578257FBF3862337C2F1A8AD9935B {UCHAR ProximityDomainLow;UCHAR ApicId;struct _ACPI_SRAT_ENTRY______B5E578257FBF3862337C2F1A8AD9935B___1196FF6CE8067B2B35B898660F75E27E Flags;UCHAR SApicEid;UCHAR ProximityDomainHigh[3];ULONG ClockDomain;};
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___1F0DB25A8A5AFEBFBAFF1BECD093D0BD {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG IoControlCode;PVOID InputSystemBuffer;PVOID OutputBuffer;PMDL OutputMdlAddress;};
struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___AEAA07217ABEEB4DF41A305F13068EDC {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG IoControlCode;PVOID InputBuffer;PVOID OutputBuffer;PMDL OutputMdlAddress;};
struct _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398___51800FF9876E4DCE174B345C898F336F {ULONG Length;ULONG CompletionFilter;ULONG Spare1;ULONG Spare2;PVOID DirectoryBuffer;PMDL MdlAddress;};
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___54D27BE50E2EFCA540B5C2B9627E61E7 {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG FsControlCode;PVOID InputBuffer;PVOID OutputBuffer;PMDL OutputMdlAddress;};
struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___EFE0DB8369A33EF75497D4E3C4478735 {ULONG OutputBufferLength;ULONG InputBufferLength;ULONG FsControlCode;PVOID InputSystemBuffer;PVOID OutputBuffer;PMDL OutputMdlAddress;};
struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___3158FA256123766910623FA14A28078A {_LOWIO_CONTEXT______3158FA256123766910623FA14A28078A___B6068E2419538643A346D908FDFDE457 __anonymous0;ULONG Flags;RXVBO ByteOffset;ULONG Key;};
struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___5BC723C225445B2132FC8B685106C35B {BOOLEAN WatchTree;ULONG CompletionFilter;ULONG NotificationBufferLength;PVOID pNotificationBuffer;};
struct _MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC___63C342055F04C1546F1B3920ADC7D8C9 {ULONG ClusterSize;ULONG ReadAheadGranularity;NETROOT_THROTTLING_PARAMETERS LockThrottlingParameters;ULONG RenameInfoOverallocationSize;GUID VolumeId;};
struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___DOT11_RSN_REKEY_PARAMETERS {ULONG Flags;UCHAR KCK[16];UCHAR KEK[16];ULONGLONG KeyReplayCounter;};
struct _REASON_BUFFER___F74655129F2DFA9F1DDC40A17BAD0BC2___E2947B9388DB43752E355D35F1DCFC93 {SIZE_T ResourceFileNameOffset;USHORT ResourceReasonId;ULONG StringCount;SIZE_T SubstitutionStringsOffset;};
struct _NDIS_RW_LOCK___2850CBFD26D1AF5C4667709DD08EAAB9___66F9C77FB8E51BB73E770AD4F88FD05A {KSPIN_LOCK RefCountLock;ULONG SharedRefCount;BOOLEAN WriterWaiting;};
union _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS___9D9C737CB8CAAA408C0677004DFD02D8 {PVOID *Generic;PIO_INTERRUPT_MESSAGE_INFO *InterruptMessageTable;PKINTERRUPT *InterruptObject;};
struct _RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162___EE6CDB8E348AFDFD207852A1BBDDA4B5 {UNICODE_STRING SuppliedPathName;NET_ROOT_TYPE NetRootType;PIO_SECURITY_CONTEXT pSecurityContext;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___3468237E04E6C07F1A666998C04EBABE {PV_NET_ROOT VNetRoot;PSRV_CALL SrvCall;PNET_ROOT NetRoot;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___F6D510E582433D4D61984B32A02828F3 {PUCHAR UserEaList;ULONG UserEaListLength;ULONG UserEaIndex;BOOLEAN RestartScan;BOOLEAN ReturnSingleEntry;BOOLEAN IndexSpecified;};
union _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8 {UCHAR AsUchar;struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8___9953234E643C1BF94D82499C45A21BA5 Bulk;struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8___E412C98F24301A3F500510DCA8E67F3B Isochronous;};
union _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4 {struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___79CD772B57A90B848A0BB4D03509C7A5 ExternalStack;struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___BC35937926C6FBC613FD6B261B9AE84F AtaPort;struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4___0C134FED9563613891FD8FE73D627A45 StorPort;};
union _IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS___8EB445A79BB4AE80EB9672A9FB0D8476 {PVOID Generic;PKINTERRUPT InterruptObject;PIO_INTERRUPT_MESSAGE_INFO InterruptMessageTable;};
struct _SRV_OPEN___77A51EE1E80C64E222053A0C90FCC703___4A191DB403A6ECE0FF5004BC7D821FF6 {MRX_NORMAL_NODE_HEADER spacer;PFCB Fcb;PV_NET_ROOT VNetRoot;};
union _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A {struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A___7AB4B1C9EFBFAEDCB742AC6C2C0A9748 Transmit;struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A___8EB7A50067A0464F8BEB6BA6FAD84C81 Receive;PVOID Value;};
struct _FOBX___980A609D988DBD4CB131C399AACA181C___46B6635654A84F3F68986807E5ABC352 {RXVBO PredictedReadOffset;RXVBO PredictedWriteOffset;THROTTLING_STATE LockThrottlingState;LARGE_INTEGER LastLockOffset;LARGE_INTEGER LastLockRange;};
struct _KPCR___ECC1A0E65F841FBB98040378B25C100B___1652290D526860EA48CDE12F1525BEA4 {struct _EXCEPTION_REGISTRATION_RECORD *Used_ExceptionList;PVOID Used_StackBase;PVOID Spare2;PVOID TssCopy;ULONG ContextSwitches;KAFFINITY SetMemberCopy;PVOID Used_Self;};
struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_0 {ULONG BaseAddresses[6];ULONG CIS;USHORT SubVendorID;USHORT SubSystemID;ULONG ROMBaseAddress;UCHAR CapabilitiesPtr;UCHAR Reserved1[3];ULONG Reserved2;UCHAR InterruptLine;UCHAR InterruptPin;UCHAR MinimumGrant;UCHAR MaximumLatency;};
struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_1 {ULONG BaseAddresses[2];UCHAR PrimaryBus;UCHAR SecondaryBus;UCHAR SubordinateBus;UCHAR SecondaryLatency;UCHAR IOBase;UCHAR IOLimit;USHORT SecondaryStatus;USHORT MemoryBase;USHORT MemoryLimit;USHORT PrefetchBase;USHORT PrefetchLimit;ULONG PrefetchBaseUpper32;ULONG PrefetchLimitUpper32;USHORT IOBaseUpper16;USHORT IOLimitUpper16;UCHAR CapabilitiesPtr;UCHAR Reserved1[3];ULONG ROMBaseAddress;UCHAR InterruptLine;UCHAR InterruptPin;USHORT BridgeControl;};
struct ____1B15D34C184CB996FC269D8F9168C70F___40DF1D993F355996A89CD36C5B1ABF70 {PWORK_QUEUE_ITEM WorkQueueItem;PKSWORKER KsWorkerObject;ULONG_PTR Reserved;};
struct ____1B15D34C184CB996FC269D8F9168C70F___58C2C17DBEA3E5C4294F58D3F434B669 {PKDPC Dpc;ULONG ReferenceCount;ULONG_PTR Reserved;};
struct ____1B15D34C184CB996FC269D8F9168C70F___77A8D5BA7911BAC3E5E8672810CEE79A {HANDLE Semaphore;ULONG Reserved;LONG Adjustment;};
struct ____1B15D34C184CB996FC269D8F9168C70F___88E5B7AA2308BDD340E63FD79CED674D {PVOID Semaphore;KPRIORITY Increment;LONG Adjustment;};
struct ____1B15D34C184CB996FC269D8F9168C70F___F0EAB68459A9F767BF6487584D0432BE {PWORK_QUEUE_ITEM WorkQueueItem;WORK_QUEUE_TYPE WorkQueueType;ULONG_PTR Reserved;};
struct ____1B15D34C184CB996FC269D8F9168C70F___F60F9682E16A06CBF246055AD9379216 {PVOID Event;KPRIORITY Increment;ULONG_PTR Reserved;};
struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___IPV4_TCP_SYN_WOL_PACKET_PARAMETERS {ULONG Flags;UCHAR IPv4SourceAddress[4];UCHAR IPv4DestAddress[4];USHORT TCPSourcePortNumber;USHORT TCPDestPortNumber;};
struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___IPV6_TCP_SYN_WOL_PACKET_PARAMETERS {ULONG Flags;UCHAR IPv6SourceAddress[16];UCHAR IPv6DestAddress[16];USHORT TCPSourcePortNumber;USHORT TCPDestPortNumber;};
union _IO_DISCONNECT_INTERRUPT_PARAMETERS___8EB445A79BB4AE80EB9672A9FB0D8476 {PVOID Generic;PKINTERRUPT InterruptObject;PIO_INTERRUPT_MESSAGE_INFO InterruptMessageTable;};
union _15F35BF8B73635FE222DFD2153EC2695___817E162991BB60FEE8D3126C21A6C91C {DFS_REFERRAL_V1 v1;DFS_REFERRAL_V2 v2;DFS_REFERRAL_V3 v3;};
union _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB {struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___9FBE9EE09EFBE9DD3093DC43F2458B69 SynchronizationMutex;struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___24C0FA88E7D8683045143D2871F0ADEA Semaphore;struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB___019FC1BD90023EA502588D9EDB27A093 Reserved;};
union _NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755 {struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755___7FC436678155DFA8ADAC694F8425CDB1 Transmit;struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755___8D27D99A3565F20450334F9AF7D1743A Receive;ULONG Value;};
struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY___D2E2FD7B103617CDB3471F8365D365F6 {BOOLEAN BusCapabilitiesFound;ULONG CurrentSpeedAndMode;ULONG SupportedSpeedsAndModes;BOOLEAN DeviceIDMessagingCapable;PCI_BUS_WIDTH SecondaryBusWidth;};
union _IO_CONNECT_INTERRUPT_PARAMETERS___2E6CC9919A7A4E65C2869C27AF9F4E89 {IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS FullySpecified;IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS LineBased;IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS MessageBased;};
union _NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671 {struct _NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671___4902617F7B303E67E1AC49578C09A516 TagHeader;struct _NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671___EA4052A1E868B7B130C491D1B37AF88C WLanTagHeader;PVOID Value;};
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___C4C4F695C967872700C046BF7B6AB829 {ULONG Flags;L2CAP_CONFIG_VALUE_RANGE Mtu;L2CAP_CONFIG_RANGE FlushTO;};
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___B42F2B2B4BBA4E8DC819D947841EA255 {struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___B42F2B2B4BBA4E8DC819D947841EA255___6E35CCFC02D81E31BD4C6BEDD77CB20A s;ULONG Name;USHORT Id;};
union _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11 {struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_ENGINE_DESC EngineDesc;struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_MONITOR_REFRESH_DESC MonitorRefreshDesc;struct _DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11__DXGK_POWER_COMPONENT_MONITOR_DESC MonitorDesc;};
union _NDIS_CONFIGURATION_PARAMETER___CAEDC0C5BA1E496165C848BD75AE74FE {ULONG IntegerData;NDIS_STRING StringData;BINARY_DATA BinaryData;};
typedef NTSTATUS ( *DXGKDDI_MONITORFREQUENCYRANGESET_ACQUIREFIRSTFREQUENCYRANGEINFO)(IN_CONST_D3DKMDT_HMONITORFREQUENCYRANGESET hMonitorFrequencyRangeSet, DEREF_OUT_CONST_PPD3DKMDT_MONITOR_FREQUENCY_RANGE ppFirstMonitorFrequencyRangeInfo);
union _SD_GLOBAL_CHANGE_OUTPUT___8CE7FB804F1AFA92BB72A9A8C03B588F {SD_CHANGE_MACHINE_SID_OUTPUT SdChange;SD_QUERY_STATS_OUTPUT SdQueryStats;SD_ENUM_SDS_OUTPUT SdEnumSds;};
typedef NTSTATUS ( *DXGKDDI_MONITORFREQUENCYRANGESET_RELEASEFREQUENCYRANGEINFO)(IN_CONST_D3DKMDT_HMONITORFREQUENCYRANGESET hMonitorFrequencyRangeSet, IN_CONST_PD3DKMDT_MONITOR_FREQUENCY_RANGE_CONST pMonitorFrequencyRangeInfo);
union _SD_GLOBAL_CHANGE_INPUT___A0DBCB078D30EE13E6919343E3D34626 {SD_CHANGE_MACHINE_SID_INPUT SdChange;SD_QUERY_STATS_INPUT SdQueryStats;SD_ENUM_SDS_INPUT SdEnumSds;};
struct _BRB_L2CA_OPEN_CHANNEL___C4C4F695C967872700C046BF7B6AB829 {ULONG Flags;L2CAP_CONFIG_VALUE_RANGE Mtu;L2CAP_CONFIG_RANGE FlushTO;};
union _HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C {struct _HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C___18F6A2D84AEBEE4DBCB00498C19F6546 Verb8;struct _HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C___553B430681195D47D9945C050CB38E82 Verb16;ULONG Command;};
struct _DEVICE_MEDIA_INFO______88882CC45E21AA3B08D6DD74C9D19C54 {LARGE_INTEGER Cylinders;STORAGE_MEDIA_TYPE MediaType;ULONG TracksPerCylinder;ULONG SectorsPerTrack;ULONG BytesPerSector;ULONG NumberMediaSides;ULONG MediaCharacteristics;};
union _SDBUS_REQUEST_PACKET___1CA46CBE469C5BC31243B2E5E7689902 {UCHAR AsUCHAR[16];ULONG AsULONG[4];SDRESP_TYPE3 Type3;};
union DOT11_PHY_ATTRIBUTES___211D85AF04401B4C3AAB02FAE3102543 {DOT11_HRDSSS_PHY_ATTRIBUTES HRDSSSAttributes;DOT11_OFDM_PHY_ATTRIBUTES OFDMAttributes;DOT11_ERP_PHY_ATTRIBUTES ERPAttributes;};
typedef NTSTATUS ( *DXGKDDI_MONITORDESCRIPTORSET_ACQUIREFIRSTDESCRIPTORINFO)(IN_CONST_D3DKMDT_HMONITORDESCRIPTORSET hMonitorDescriptorSet, DEREF_OUT_CONST_PPD3DKMDT_MONITOR_DESCRIPTOR ppFirstMonitorDescriptorInfo);
union _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS {struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___IPV4_ARP_PARAMETERS IPv4ARPParameters;struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___IPV6_NS_PARAMETERS IPv6NSParameters;struct _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS___DOT11_RSN_REKEY_PARAMETERS Dot11RSNRekeyParameters;};
union _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8 {struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___27183FC11B178907B5D2BB34AFACE7F1 SymbolicLinkReparseBuffer;struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___538BBEAAFB526DA55D87E8D9C61BE453 MountPointReparseBuffer;struct _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8___E4726FB01B43180CB4D608E8FC40A3CF GenericReparseBuffer;};
struct _SMARTCARD_EXTENSION___9855578B9592CE4ADCB1D8D489F779A0 {PULONG Information;PUCHAR RequestBuffer;ULONG RequestBufferLength;PUCHAR ReplyBuffer;ULONG ReplyBufferLength;};
union _WWAN_AUTH_CHALLENGE___E6006800066CD04FA0133270A2878C2F {WWAN_AUTH_SIM_CHALLENGE AuthSim;WWAN_AUTH_AKA_CHALLENGE AuthAka;WWAN_AUTH_AKAP_CHALLENGE AuthAkap;};
union _COMPLETION_CONTEXT___A3035D131E712C9B8FDABD583C95013C {SCSI_REQUEST_BLOCK Srb;STORAGE_REQUEST_BLOCK SrbEx;UCHAR SrbExBuffer[144];};
union _WWAN_AUTH_RESPONSE___EDA7B12D2E325970687F251858520D25 {WWAN_AUTH_SIM_RESPONSE AuthSim;WWAN_AUTH_AKA_RESPONSE AuthAka;WWAN_AUTH_AKAP_RESPONSE AuthAkap;};
typedef NTSTATUS ( *DXGKDDI_MONITORSOURCEMODESET_ACQUIREPREFERREDMODEINFO)(IN_CONST_D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet, DEREF_OUT_CONST_PPD3DKMDT_MONITOR_SOURCE_MODE ppFirstMonitorSourceModeInfo);
union _IDE_REQUEST_BLOCK___6827F88AFC668996C2E61485C9C556E7 {IDE_TASK_FILE IdeTaskFile;UCHAR Cdb[16];IDE_POWER_INFO PowerChange;UCHAR AsUChar[16];};
union _IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2 {UINT32 AsUINT32;_IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2___13073B7CB035872C4D9FD7FB30B0281A __anonymous0;_IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2___9608B92844F0E5A0BDAB2DD9BFE04B43 __anonymous1;};
union _KUSER_SHARED_DATA___2FE92813FF9B9B4E284DEDC0C06BCA1D {KSYSTEM_TIME TickCount;ULONG64 TickCountQuad;struct _KUSER_SHARED_DATA___2FE92813FF9B9B4E284DEDC0C06BCA1D___BD1B756ECC8CEE65EDC696B218E648A7 s;};
union _PMI_CONFIGURATION___399906DC0E414BE6CAEA0950F1FB4247 {PMI_MEASUREMENT_CONFIGURATION MeasurementConfiguration;PMI_BUDGETING_CONFIGURATION BudgetingConfiguration;PMI_THRESHOLD_CONFIGURATION ThresholdConfiguration;};
union _DXGKARG_PRESENT___6C9CE20EBB898E736357E8F8761763A7 {DXGK_ALLOCATIONLIST *pAllocationList;DXGK_PRESENTALLOCATIONINFO *pAllocationInfo;DXGK_PRESENTMULTIPLANEOVERLAYINFO *pPresentMultiPlaneOverlayInfo;};
union _HOOK_IP_ADDRESS___E79D2EBADADA954EBAD234A2B8162860 {UCHAR Address;HOOK_IP_ADDRESS_V4 v4;HOOK_IP_ADDRESS_V6 v6;};
union _IMAGE_SYMBOL_EX___F68D1BB612E723B85ECC44FD18D8129B {UCHAR ShortName[8];struct _IMAGE_SYMBOL_EX___F68D1BB612E723B85ECC44FD18D8129B___CEDF31EE281EF9B050A3F2DD4988342A Name;ULONG LongName[2];};
typedef NTSTATUS ( *DXGKDDI_MONITORDESCRIPTORSET_RELEASEDESCRIPTORINFO)(IN_CONST_D3DKMDT_HMONITORDESCRIPTORSET hMonitorDescriptorSet, IN_CONST_PD3DKMDT_MONITOR_DESCRIPTOR_CONST pMonitorDescriptorInfo);
typedef NTSTATUS  DXGKDDI_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY pSetVidPnSourceAddressWithMultiPlaneOverlay);
struct _FLT_PARAMETERS___1668572F00F17AE5B41FB3467E028768 {LARGE_INTEGER FileOffset;ULONG Length;ULONG Key;PMDL *MdlChain;};
struct _FLT_PARAMETERS___19A603DC746060C8601748F5A450859F {ULONG Length;FS_INFORMATION_CLASS FsInformationClass;PVOID VolumeBuffer;};
struct _FLT_PARAMETERS___41B139D9CD7692782FB91B1F1DE88DB3 {LARGE_INTEGER FileOffset;ULONG Length;ULONG LockKey;BOOLEAN CheckForReadOperation;};
struct _FLT_PARAMETERS___5B587018489257566E3078D7CD7246AA {ULONG Length;PVOID QuotaBuffer;PMDL MdlAddress;};
struct _FLT_PARAMETERS___AFAE931016418FD1718C58C39C98E785 {ULONG Length;PVOID EaBuffer;PMDL MdlAddress;};
struct _FLT_PARAMETERS___D24474CE3B68EBF89E5A61C71CBC75EE {ULONG_PTR ProviderId;PVOID DataPath;ULONG BufferSize;PVOID Buffer;};
struct _FLT_PARAMETERS___E62B83C9A059D9549228C87BE00B0E32 {ULONG Length;FILE_INFORMATION_CLASS FileInformationClass;PVOID InfoBuffer;};
struct _FLT_PARAMETERS___F67E610FB32023731ED0EF1EC94F13C4 {ULONG Length;PVOID EaList;ULONG EaListLength;ULONG EaIndex;PVOID EaBuffer;PMDL MdlAddress;};
union tagKS_VIDEOINFO___F8BBADE88DA80D04A6A2CB02740F1E2F {KS_RGBQUAD bmiColors[256];DWORD dwBitMasks[3];KS_TRUECOLORINFO TrueColorInfo;};
typedef NTSTATUS ( *DXGKDDI_MONITORSOURCEMODESET_ACQUIREFIRSTMODEINFO)(IN_CONST_D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet, DEREF_OUT_CONST_PPD3DKMDT_MONITOR_SOURCE_MODE ppFirstMonitorSourceModeInfo);
struct _NDIS_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES {NDIS_OBJECT_HEADER Header;NDIS_HANDLE MiniportAddDeviceContext;ULONG Flags;};
union _NT_SMB_HEADER___1981ACDE232C6DE21F6ECE4E585F2227 {USHORT Reserved2[6];struct {USHORT PidHigh;union {_NT_SMB_HEADER___1981ACDE232C6DE21F6ECE4E585F2227___69A4AD5419EA3D4C8A0ABF1A7711CEED __anonymous0;UCHAR SecuritySignature[8];};};};
typedef NTSTATUS ( *DXGKDDI_VIDPNSOURCEMODESET_ACQUIREPINNEDMODEINFO)(IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_SOURCE_MODE ppPinnedVidPnSourceModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPNTARGETMODESET_ACQUIREPINNEDMODEINFO)(IN_CONST_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_TARGET_MODE ppPinnedVidPnTargetModeInfo);
union HBA_EventInfo___354F98172143542044A796E42E11C620 {HBA_LINK_EVENTINFO Link_EventInfo;HBA_RSCN_EVENTINFO RSCN_EventInfo;HBA_PTY_EVENTINFO Pty_EventInfo;};
union _ICMP_MESSAGE___C0C56E405763639CDB48E11DB99F029A {UINT32 Data32[1];UINT16 Data16[2];UINT8 Data8[4];};
union _IMAGE_SYMBOL___5E628A43DDB5BBBB85D75BCB8FDF7ACA {UCHAR ShortName[8];struct _IMAGE_SYMBOL___5E628A43DDB5BBBB85D75BCB8FDF7ACA___CEDF31EE281EF9B050A3F2DD4988342A Name;ULONG LongName[2];};
union _NDIS_RW_LOCK___2850CBFD26D1AF5C4667709DD08EAAB9 {NDIS_RW_LOCK_REFCOUNT RefCount[32];ULONG RefCountEx[128];_NDIS_RW_LOCK___2850CBFD26D1AF5C4667709DD08EAAB9___66F9C77FB8E51BB73E770AD4F88FD05A __anonymous0;};
union _WNODE_HEADER___94883EDDB53D73798B50E968A69A9EBB {ULONG CountLost;HANDLE KernelHandle;LARGE_INTEGER TimeStamp;};
typedef NTSTATUS ( *DXGKDDI_VIDPNSOURCEMODESET_ACQUIREFIRSTMODEINFO)(IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_SOURCE_MODE ppFirstVidPnSourceModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPNTARGETMODESET_ACQUIREFIRSTMODEINFO)(IN_CONST_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_TARGET_MODE ppFirstVidPnTargetModeInfo);
typedef NTSTATUS ( *DXGKDDI_MONITORSOURCEMODESET_CREATENEWMODEINFO)(IN_CONST_D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet, DEREF_OUT_PPD3DKMDT_MONITOR_SOURCE_MODE ppNewMonitorSourceModeInfo);
typedef ULONG  USB_BUSIFFN_SET_DEVICE_HANDLE_IDLE_READY_STATE(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, ULONG NewIdleReadyState);
struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_QUERY_ADC {DOT11_BAND Dot11Band;ULONG uChannel;LONG ADCPowerLevel;};
struct _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;UCHAR bMaxBurst;union _USB_SUPERSPEED_ENDPOINT_COMPANION_DESCRIPTOR___5B03EB15FE5F785605FA75684B5889C8 bmAttributes;USHORT wBytesPerInterval;};
typedef NTSTATUS ( *DXGKDDI_MONITORSOURCEMODESET_RELEASEMODEINFO)(IN_CONST_D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet, IN_CONST_PD3DKMDT_MONITOR_SOURCE_MODE_CONST pMonitorSourceModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPNSOURCEMODESET_CREATENEWMODEINFO)(IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet, DEREF_OUT_PPD3DKMDT_VIDPN_SOURCE_MODE ppNewVidPnSourceModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPNTARGETMODESET_CREATENEWMODEINFO)(IN_CONST_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet, DEREF_OUT_PPD3DKMDT_VIDPN_TARGET_MODE ppNewVidPnTargetModeInfo);
typedef void PO_FX_COMPONENT_CRITICAL_TRANSITION_CALLBACK(PVOID Context, ULONG Component, BOOLEAN Active);
struct _NDIS_WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_DEVICE_SERVICE_SUPPORTED_COMMANDS SupportedCommands;};
typedef NTSTATUS ( *DXGKDDI_MONITOR_RELEASEMONITORSOURCEMODESET)(IN_CONST_D3DKMDT_ADAPTER hAdapter, IN_CONST_D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet);
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_UPDATEPATHSUPPORTINFO)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY i_hVidPnTopology, IN_CONST_PD3DKMDT_VIDPN_PRESENT_PATH i_pVidPnPresentPathInfo);
struct _NDIS_WWAN_PREFERRED_MULTICARRIER_PROVIDERS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_LIST_HEADER PreferredListHeader;};
union _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS {struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___6FF2EA7F93E3FC49E9FC7D42382D3B64 Modify;struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___1C732FDD310020FA7128495F79C8FC1D Synchronous;struct _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS___D7ABDBAACD9DB800E4D6CE155D0E9319 Wide;};
typedef NTSTATUS ( *DXGKDDI_VIDPNSOURCEMODESET_RELEASEMODEINFO)(IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet, IN_CONST_PD3DKMDT_VIDPN_SOURCE_MODE_CONST pVidPnSourceModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPNTARGETMODESET_RELEASEMODEINFO)(IN_CONST_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet, IN_CONST_PD3DKMDT_VIDPN_TARGET_MODE_CONST pVidPnTargetModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_ACQUIREFIRSTPATHINFO)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_PRESENT_PATH ppFirstVidPnPresentPathInfo);
typedef NTSTATUS (*DXGK_BRIGHTNESS_SET_BACKLIGHT_OPTIMIZATION)(PVOID Context, DXGK_BACKLIGHT_OPTIMIZATION_LEVEL OptimizationLevel);
typedef void PROTOCOL_CO_SEND_NET_BUFFER_LISTS_COMPLETE(NDIS_HANDLE ProtocolVcContext, PNET_BUFFER_LIST NetBufferLists, ULONG SendCompleteFlags);
union _AVC_STREAM_REQUEST_BLOCK___tagCommandData {KSSTATE StreamState;AVCSTRM_OPEN_STRUCT OpenStruct;AVCSTRM_BUFFER_STRUCT BufferStruct;};
union _AV_PCR___396EF7A68396BFEFEEA92DFA7F5171E0 {OPCR oPCR;IPCR iPCR;ULONG ulongData;};
struct _NDIS_NBL_MEDIA_MEDIA_SPECIFIC_INFORMATION {PNDIS_NBL_MEDIA_SPECIFIC_INFORMATION NextEntry;ULONG Tag;UCHAR Data[1];};
union in_addr___4F64C6817212FE4AF89030399F21EE2D {struct in_addr___4F64C6817212FE4AF89030399F21EE2D___F085A1F6735C7CEA9C650424FAF692B1 S_un_b;struct in_addr___4F64C6817212FE4AF89030399F21EE2D___B9D7529FFD1842B2B059BD2E926FB2C5 S_un_w;ULONG S_addr;};
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_INTEGER_EX {ULONG Signature;CHAR MethodName[256];ULONG64 IntegerArgument;};
struct _NDIS_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES {NDIS_OBJECT_HEADER Header;PNDIS_OFFLOAD DefaultOffloadConfiguration;PNDIS_OFFLOAD HardwareOffloadCapabilities;PNDIS_TCP_CONNECTION_OFFLOAD DefaultTcpConnectionOffloadConfiguration;PNDIS_TCP_CONNECTION_OFFLOAD TcpConnectionOffloadHardwareCapabilities;};
typedef NTSTATUS (*PFLT_COMPLETE_LOCK_CALLBACK_DATA_ROUTINE)(PVOID Context, PFLT_CALLBACK_DATA CallbackData);
typedef NTSTATUS ( *PFN_WSK_RELEASE_DATAGRAM_INDICATION_LIST)(PWSK_SOCKET Socket, PWSK_DATAGRAM_INDICATION DatagramIndication);
typedef NTSTATUS (*PREPLACE_ENABLE_DISABLE_HARDWARE_QUIESCE)(PVOID Context, BOOLEAN Enable);
typedef NTSTATUS  USB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND(PVOID BusContext, BOOLEAN Enable);
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING_EX {ULONG Signature;CHAR MethodName[256];ULONG StringLength;UCHAR String[1];};
struct _DOT11_WFD_GROUP_OWNER_CAPABILITY_CONFIG {NDIS_OBJECT_HEADER Header;BOOLEAN bPersistentGroupEnabled;BOOLEAN bIntraBSSDistributionSupported;BOOLEAN bCrossConnectionSupported;BOOLEAN bPersistentReconnectSupported;BOOLEAN bGroupFormationEnabled;ULONG uMaximumGroupLimit;};
struct _MSNdis_NetworkDirectAdapterCapabilities {ULONG MaxQpCount;ULONG MaxCqCount;ULONG MaxMrCount;ULONG MaxPdCount;ULONG MaxInboundReadLimit;ULONG MaxOutboundReadLimit;ULONG MaxMwCount;ULONG MaxSrqCount;ULONGLONG MissingCounterMask;MSNdis_NetworkDirectAdapterInfo NdAdapterInfo;};
struct _NDIS_OID_REQUEST___REQUEST_DATA___QUERY {NDIS_OID Oid;PVOID InformationBuffer;UINT InformationBufferLength;UINT BytesWritten;UINT BytesNeeded;};
typedef NTSTATUS  DXGKDDI_GETSTANDARDALLOCATIONDRIVERDATA(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_GETSTANDARDALLOCATIONDRIVERDATA pGetStandardAllocationDriverData);
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_CREATENEWPATHINFO)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, DEREF_OUT_PPD3DKMDT_VIDPN_PRESENT_PATH ppNewVidPnPresentPathInfo);
typedef NTSTATUS (*DXGK_BRIGHTNESS_GET_BACKLIGHT_REDUCTION)(PVOID Context, DXGK_BACKLIGHT_INFO *BacklightInfo);
typedef void (*PFNBTHPORT_INDICATION_CALLBACK_ENHANCED)(PVOID Context, INDICATION_CODE Indication, PINDICATION_PARAMETERS_ENHANCED Parameters);
typedef void PROTOCOL_SEND_NET_BUFFER_LISTS_COMPLETE(NDIS_HANDLE ProtocolBindingContext, PNET_BUFFER_LIST NetBufferList, ULONG SendCompleteFlags);
struct _DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG ulPhyId;_DOT11_PHY_FREQUENCY_ADOPTED_PARAMETERS___E8833107248134010C284DCB80BEA478 __anonymous0;};
struct _DOT11_WFD_DISCOVER_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;NDIS_STATUS Status;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;ULONG uListOffset;ULONG uListLength;};
struct _IRB_REQ_ISOCH_MODIFY_STREAM_PROPERTIES {HANDLE hResource;ULARGE_INTEGER ChannelMask;ULONG fulSpeed;};
struct _NDIS_NBL_MEDIA_SPECIFIC_INFORMATION_EX {NDIS_OBJECT_HEADER Header;struct _NDIS_NBL_MEDIA_SPECIFIC_INFORMATION_EX *NextEntry;ULONG Tag;PVOID Data;};
typedef NTSTATUS (*NDK_FN_CONTROL_CQ_INTERRUPT_MODERATION)(NDK_CQ *pNdkCq, ULONG ModerationInterval, ULONG ModerationCount);
struct _ACPI_DEVICE_INFORMATION_OUTPUT_BUFFER {ULONG Signature;USHORT Size;UCHAR Revision;UCHAR Reserved0;USHORT VendorIdStringOffset;USHORT VendorStringLength;USHORT DeviceIdStringOffset;USHORT SubSystemIdStringOffset;USHORT SubSystemStringLength;USHORT SubDeviceIdStringOffset;USHORT InstanceIdLength;USHORT InstanceIdOffset;USHORT BaseClassCode;USHORT HardwareRevision;UCHAR ProgrammingInterface;UCHAR Reserved1;USHORT SubClassCode;};
struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION {USHORT Version;USHORT Reserved;ULONG AttributeCount;union _CLAIM_SECURITY_ATTRIBUTES_INFORMATION___849AEB11D7805A845288B570A3606227 Attribute;};
struct _DXGKARG_SETDISPLAYPRIVATEDRIVERFORMAT {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;HANDLE PrimaryAllocation;UINT PrivateDriverFormatAttribute;};
struct _NDIS_OID_REQUEST___REQUEST_DATA___SET {NDIS_OID Oid;PVOID InformationBuffer;UINT InformationBufferLength;UINT BytesRead;UINT BytesNeeded;};
struct _NDIS_TAPI_CONDITIONAL_MEDIA_DETECTION {ULONG ulRequestID;HDRV_LINE hdLine;ULONG ulMediaModes;LINE_CALL_PARAMS LineCallParams;};
struct _NDIS_WWAN_DEVICE_SERVICE_SESSION_INFO {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_DEVICE_SERVICE_SESSION Session;};
struct _NDIS_WWAN_DEVICE_SERVICE_SUBSCRIPTION {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_LIST_HEADER DeviceServiceListHeader;};
struct _SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2 {SOCKET_SECURITY_PROTOCOL SecurityProtocol;SOCKADDR_STORAGE PeerAddress;ULONG PeerTokenAccessMask;ULONG Flags;ULONG FieldMask;};
struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES {ULONG Size;ULONG Version;unsigned char AvailableMappingResourcesValid : 1;unsigned char UsedMappingResourcesValid : 1;unsigned char Reserved0 : 6;UCHAR Reserved1[3];unsigned char AvailableMappingResourcesScope : 2;unsigned char UsedMappingResourcesScope : 2;unsigned char Reserved2 : 4;UCHAR Reserved3[3];ULONGLONG AvailableMappingResources;ULONGLONG UsedMappingResources;};
struct _WHEA_PSHED_PLUGIN_REGISTRATION_PACKET {ULONG Length;ULONG Version;PVOID Context;ULONG FunctionalAreaMask;ULONG Reserved;WHEA_PSHED_PLUGIN_CALLBACKS Callbacks;};
typedef NTSTATUS ( *DXGKCB_ACQUIRE_POST_DISPLAY_OWNERSHIP)(HANDLE DeviceHandle, PDXGK_DISPLAY_INFORMATION DisplayInfo);
typedef NTSTATUS  DXGKDDI_SETDISPLAYPRIVATEDRIVERFORMAT(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_SETDISPLAYPRIVATEDRIVERFORMAT pSetDisplayPrivateDriverFormat);
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_RELEASEPATHINFO)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, IN_CONST_PD3DKMDT_VIDPN_PRESENT_PATH_CONST pVidPnPresentPathInfo);
typedef BOOLEAN FAST_IO_MDL_WRITE_COMPLETE_COMPRESSED(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);
typedef void FILTER_SEND_NET_BUFFER_LISTS_COMPLETE(NDIS_HANDLE FilterModuleContext, PNET_BUFFER_LIST NetBufferList, ULONG SendCompleteFlags);
typedef BOOLEAN HW_MESSAGE_SIGNALED_INTERRUPT_ROUTINE(PVOID HwDeviceExtension, ULONG MessageId);
typedef void LLDP_MSAP_CHANGE_NOTIFICATION_HANDLER(HMSAP Msap, ULONG Flags, PVOID ClientBindingContext, PVOID NotificationContext);
typedef PFLT_CALLBACK_DATA ( *PFLT_CALLBACK_DATA_QUEUE_PEEK_NEXT_IO)(PFLT_CALLBACK_DATA_QUEUE Cbdq, PFLT_CALLBACK_DATA Cbd, PVOID PeekContext);
typedef NTSTATUS ( *PFLT_INSTANCE_QUERY_TEARDOWN_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, FLT_INSTANCE_QUERY_TEARDOWN_FLAGS Flags);
typedef void  USB_BUSIFFN_SET_CONTAINER_ID_FOR_PORT(PVOID BusContext, USHORT PortNumber, LPGUID ContainerId);
struct _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING {ULONG Signature;union _ACPI_EVAL_INPUT_BUFFER_SIMPLE_STRING___CFC7B0DA028A7F4F3B52DE418131CED1 u;ULONG StringLength;UCHAR String[1];};
struct _ARBITER_RETEST_ALLOCATION_PARAMETERS {PLIST_ENTRY ArbitrationList;ULONG AllocateFromCount;PCM_PARTIAL_RESOURCE_DESCRIPTOR AllocateFrom;};
struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 {ULONG Name;USHORT ValueType;USHORT Reserved;ULONG Flags;ULONG ValueCount;union _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1___F8600A37A74FD5E8A633BFFD12DED29B Values;};
struct _DEVICE_INTERFACE_CHANGE_NOTIFICATION {USHORT Version;USHORT Size;GUID Event;GUID InterfaceClassGuid;PUNICODE_STRING SymbolicLinkName;};
struct _DOT11_WFD_SECONDARY_DEVICE_TYPE_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_WFD_DEVICE_TYPE SecondaryDeviceTypes[1];};
struct _IRB_REQ_ISOCH_ALLOCATE_RESOURCES_WXP {ULONG fulSpeed;ULONG fulFlags;ULONG nChannel;ULONG nMaxBytesPerFrame;ULONG nNumberOfBuffers;ULONG nMaxBufferSize;ULONG nQuadletsToStrip;HANDLE hResource;ULARGE_INTEGER ChannelMask;};
struct _NDIS_INTERRUPT_MODERATION_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_INTERRUPT_MODERATION InterruptModeration;};
struct _PCI_EXPRESS_TPH_REQUESTER_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;PCI_EXPRESS_TPH_REQUESTER_CAPABILITY_REGISTER RequesterCapability;PCI_EXPRESS_TPH_REQUESTER_CONTROL_REGISTER RequesterControl;};
struct _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR {PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR_TYPE Type;ULONG Flags;union _PHYSICAL_COUNTER_RESOURCE_DESCRIPTOR___7981EB885823FFAE046A8EBFAC9A705A u;};
typedef NTSTATUS ( *DXGKDDI_MONITORSOURCEMODESET_ADDMODE)(IN_CONST_D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet, IN_PD3DKMDT_MONITOR_SOURCE_MODE_CONST pMonitorSourceModeInfo);
typedef NTSTATUS (*DXGKDDI_OPM_DESTROY_PROTECTED_OUTPUT)(PVOID MiniportDeviceContext, HANDLE ProtectedOutputHandle);
typedef NTSTATUS  DXGKDDI_UPDATEACTIVEVIDPNPRESENTPATH(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_UPDATEACTIVEVIDPNPRESENTPATH_CONST pUpdateActiveVidPnPresentPath);
typedef void (*PCLFS_SET_LOG_SIZE_COMPLETE_CALLBACK)(PLOG_FILE_OBJECT LogFile, NTSTATUS OperationStatus, PVOID ClientData);
typedef NTSTATUS ( *PFN_WSK_RELEASE_DATA_INDICATION_LIST)(PWSK_SOCKET Socket, PWSK_DATA_INDICATION DataIndication);
typedef void PROTOCOL_CL_MODIFY_CALL_QOS_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolVcContext, PCO_CALL_PARAMETERS CallParameters);
typedef void PROTOCOL_CO_RECEIVE_NET_BUFFER_LISTS(NDIS_HANDLE ProtocolBindingContext, NDIS_HANDLE ProtocolVcContext, PNET_BUFFER_LIST NetBufferLists, ULONG NumberOfNetBufferLists, ULONG ReceiveFlags);
typedef void PROTOCOL_DIRECT_OID_REQUEST_COMPLETE(NDIS_HANDLE ProtocolBindingContext, PNDIS_OID_REQUEST OidRequest, NDIS_STATUS Status);
struct _CHANGER_SEND_VOLUME_TAG_INFORMATION {CHANGER_ELEMENT StartingElement;ULONG ActionCode;UCHAR VolumeIDTemplate[40];};
struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS {ULONG Flags;ULONG Reserved;ULONGLONG TokenOffset;STORAGE_OFFLOAD_TOKEN Token;};
struct _KSM_BDA_WMDRMTUNER_SETPIDPROTECTION {KSM_NODE NodeMethod;ULONG ulPID;GUID uuidKeyID;};
struct _MSNdis_ReceiveFilterFieldParameters {MSNdis_ObjectHeader Header;ULONG Flags;ULONG FrameHeader;ULONG ReceiveFilterTest;ULONG MacHeaderField;UCHAR FieldByteArrayValue[16];UCHAR ResultByteArrayValue[16];};
struct _NDIS_PORT_AUTHENTICATION_PARAMETERS {NDIS_OBJECT_HEADER Header;NDIS_PORT_CONTROL_STATE SendControlState;NDIS_PORT_CONTROL_STATE RcvControlState;NDIS_PORT_AUTHORIZATION_STATE SendAuthorizationState;NDIS_PORT_AUTHORIZATION_STATE RcvAuthorizationState;};
struct _NDIS_WWAN_SERVICE_ACTIVATION_STATUS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_SERVICE_ACTIVATION_STATUS ServiceActivationStatus;};
struct _NDIS_WWAN_SUPPORTED_DEVICE_SERVICES {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_SUPPORTED_DEVICE_SERVICES DeviceServices;};
struct _PCI_FIRMWARE_BUS_CAPS_RETURN_BUFFER {USHORT Version;USHORT Status;ULONG Length;PCI_FIRMWARE_BUS_CAPS Caps;};
struct _REG_SET_INFORMATION_KEY_INFORMATION {PVOID Object;KEY_SET_INFORMATION_CLASS KeySetInformationClass;PVOID KeySetInformation;ULONG KeySetInformationLength;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
typedef NTSTATUS (*pKdSetupIntegratedDeviceForDebugging)(PVOID LoaderBlock, PDEBUG_DEVICE_DESCRIPTOR IntegratedDevice);
struct DOT11_COUNTRY_OR_REGION_STRING_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_COUNTRY_OR_REGION_STRING CountryOrRegionStrings[1];};
typedef NTSTATUS (*PREGISTER_FOR_DEVICE_NOTIFICATIONS2)(PVOID Context, PDEVICE_NOTIFY_CALLBACK2 NotificationHandler, PVOID NotificationContext);
typedef NTSTATUS (*PRXCE_IND_CONNECTION_SEND_SUBMITTED)(PVOID pEventContext, PRXCE_VC pVc, PVOID pCompletionContext, NTSTATUS Status);
typedef NTSTATUS (*PSDBUS_INITIALIZE_INTERFACE_ROUTINE)(PVOID Context, PSDBUS_INTERFACE_PARAMETERS InterfaceParameters);
typedef NTSTATUS (*PSHED_PI_GET_INJECTION_CAPABILITIES)(PVOID PluginContext, PWHEA_ERROR_INJECTION_CAPABILITIES Capabilities);
struct _ARBITER_TEST_ALLOCATION_PARAMETERS {PLIST_ENTRY ArbitrationList;ULONG AllocateFromCount;PCM_PARTIAL_RESOURCE_DESCRIPTOR AllocateFrom;};
struct _BDA_WMDRMTUNER_PURCHASEENTITLEMENT {PBDARESULT lResult;ULONG ulDescrambleStatus;ULONG ulCaptureTokenLength;BYTE argbCaptureTokenBuffer[1];};
struct _DOT11_WFD_DEVICE_CAPABILITY_CONFIG {NDIS_OBJECT_HEADER Header;BOOLEAN bServiceDiscoveryEnabled;BOOLEAN bClientDiscoverabilityEnabled;BOOLEAN bConcurrentOperationSupported;BOOLEAN bInfrastructureManagementEnabled;BOOLEAN bDeviceLimitReached;BOOLEAN bInvitationProcedureEnabled;ULONG WPSVersionsEnabled;};
struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER {ULONGLONG Hint1;ULONGLONG Hint2;CLSN Clsn;NTSTATUS Status;};
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX {PVOID ClientSession;PVOID ClientProcess;USHORT ClientComputerNameLength;WCHAR ClientComputerBuffer[16];};
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER {LARGE_INTEGER DirectoryCount;LARGE_INTEGER FileCount;USHORT FsFormatMajVersion;USHORT FsFormatMinVersion;WCHAR FsFormatName[12];LARGE_INTEGER FormatTime;LARGE_INTEGER LastUpdateTime;WCHAR CopyrightInfo[34];WCHAR AbstractInfo[34];WCHAR FormattingImplementationInfo[34];WCHAR LastModifyingImplementationInfo[34];};
struct _IDE_ADVANCED_CHANNEL_CONFIGURATION {USHORT Length;IDE_ADVANCED_CHANNEL_CONFIGURATION_FIELDS_PRESENT Present;IDE_VENDOR_DEFINED_POWER VendorDefinedPower;};
struct _ISCSI_DiscoveredTargetPortalGroup2 {ULONG PortalCount;USHORT Tag;ISCSI_DiscoveredTargetPortal2 Portals[1];};
struct _NDIS_RECEIVE_QUEUE_FREE_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_ID QueueId;};
struct _PROCESS_EXTENDED_BASIC_INFORMATION {SIZE_T Size;PROCESS_BASIC_INFORMATION BasicInfo;union _PROCESS_EXTENDED_BASIC_INFORMATION___E6BF994F87CD7E8E9F73233F6875B43D u;};
struct _TARGET_DEVICE_REMOVAL_NOTIFICATION {USHORT Version;USHORT Size;GUID Event;PFILE_OBJECT FileObject;};
struct _TRANSACTION_PROPERTIES_INFORMATION {ULONG IsolationLevel;ULONG IsolationFlags;LARGE_INTEGER Timeout;ULONG Outcome;ULONG DescriptionLength;WCHAR Description[1];};
typedef NTSTATUS ( *DXGKDDI_VIDPNSOURCEMODESET_ADDMODE)(IN_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet, IN_PD3DKMDT_VIDPN_SOURCE_MODE_CONST pVidPnSourceModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPNTARGETMODESET_ADDMODE)(IN_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet, IN_PD3DKMDT_VIDPN_TARGET_MODE_CONST pVidPnTargetModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPN_RELEASESOURCEMODESET)(IN_CONST_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet);
typedef NTSTATUS ( *DXGKDDI_VIDPN_RELEASETARGETMODESET)(IN_CONST_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet);
typedef void FILTER_DIRECT_OID_REQUEST_COMPLETE(NDIS_HANDLE FilterModuleContext, PNDIS_OID_REQUEST OidRequest, NDIS_STATUS Status);
typedef void PROTOCOL_CM_INCOMING_CALL_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE CallMgrVcContext, PCO_CALL_PARAMETERS CallParameters);
typedef NTSTATUS (*PRXCE_IND_CONNECTION_SEND_COMPLETE)(PVOID pEventContext, PRXCE_VC pVc, PVOID pCompletionContext, NTSTATUS Status);
typedef NTSTATUS  USB_BUSIFFN_ABORT_ALL_DEVICE_PIPES(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle);
typedef void  USB_BUSIFFN_SET_DEVICE_ERRATA_FLAG(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, ULONG DeviceErrataFlag);
struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX_EX {ULONG Signature;CHAR MethodName[256];ULONG Size;ULONG ArgumentCount;ACPI_METHOD_ARGUMENT Argument[1];};
struct _CreateVirtualPortExUsingDHCHAP_IN {UCHAR WWPN[8];UCHAR WWNN[8];UCHAR Tag[16];USHORT VirtualName[64];MSFC_DH_Chap_Parameters CHAP;};
struct _DEVICE_LB_PROVISIONING_DESCRIPTOR {ULONG Version;ULONG Size;unsigned char ThinProvisioningEnabled : 1;unsigned char ThinProvisioningReadZeros : 1;unsigned char AnchorSupported : 3;unsigned char UnmapGranularityAlignmentValid : 1;unsigned char Reserved0 : 2;UCHAR Reserved1[7];ULONGLONG OptimalUnmapGranularity;ULONGLONG UnmapGranularityAlignment;};
struct _DXGKMDT_OPM_REQUESTED_INFORMATION {DXGKMDT_OPM_OMAC omac;ULONG cbRequestedInformationSize;BYTE abRequestedInformation[4076];};
struct _DXGK_PRESENTMULTIPLANEOVERLAYINFO {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;UINT PlaneListCount;DXGK_PRESENTMULTIPLANEOVERLAYLIST *pPlaneList;};
struct _NDIS_WWAN_DEVICE_SERVICE_RESPONSE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_DEVICE_SERVICE_RESPONSE Response;};
struct _REMOTE_LINK_TRACKING_INFORMATION_ {PVOID TargetFileObject;ULONG TargetLinkTrackingInformationLength;UCHAR TargetLinkTrackingInformationBuffer[1];};
struct _RESOURCEMANAGER_BASIC_INFORMATION {GUID ResourceManagerId;ULONG DescriptionLength;WCHAR Description[1];};
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR {RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;PLIST_ENTRY ChainHead;ULONG BucketIndex;};
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION {ULONG ProviderSignature;SYSTEM_FIRMWARE_TABLE_ACTION Action;ULONG TableID;ULONG TableBufferLength;UCHAR TableBuffer[1];};
struct _TXFS_ROLLFORWARD_REDO_INFORMATION {LARGE_INTEGER LastVirtualClock;ULONGLONG LastRedoLsn;ULONGLONG HighestRecoveryLsn;ULONG Flags;};
struct _VIDEO_HARDWARE_CONFIGURATION_DATA {INTERFACE_TYPE InterfaceType;ULONG BusNumber;USHORT Version;USHORT Revision;USHORT Irql;USHORT Vector;ULONG ControlBase;ULONG ControlSize;ULONG CursorBase;ULONG CursorSize;ULONG FrameBase;ULONG FrameSize;};
struct _0237C65E8322975CE5980DC9C74E362C {KDPC Dpc;ULONG ReferenceCount;KSPIN_LOCK AccessLock;};
struct _03760394881EE2760DEA592B594C7CB3 {RECT FocusRect;BOOL AutoFocusLock;BOOL AutoExposureLock;BOOL AutoWhitebalanceLock;ULONG Capabilities;};
struct _07D0DEFC473073A5B78BC3974C364183 {ULONG MaxGlobalInstanceCount;ULONG MaxFilterInstanceCount;ULONG MinFilterInstanceCount; PCAUTOMATION_TABLE *AutomationTable;KSPIN_DESCRIPTOR KsPinDescriptor;};
struct _0842067D4928A6ED06A0CF2C82B469EC {ULONG Size;ULONG TimeDateStamp;USHORT MajorVersion;USHORT MinorVersion;ULONG GlobalFlagsClear;ULONG GlobalFlagsSet;ULONG CriticalSectionDefaultTimeout;ULONGLONG DeCommitFreeBlockThreshold;ULONGLONG DeCommitTotalFreeThreshold;ULONGLONG LockPrefixTable;ULONGLONG MaximumAllocationSize;ULONGLONG VirtualMemoryThreshold;ULONGLONG ProcessAffinityMask;ULONG ProcessHeapFlags;USHORT CSDVersion;USHORT Reserved1;ULONGLONG EditList;ULONGLONG SecurityCookie;ULONGLONG SEHandlerTable;ULONGLONG SEHandlerCount;};
struct _0C4AC156F5CD9D086646B489056E0FB7 { GUID *Set;ULONG Id;ULONG Flags;PCPFNEVENT_HANDLER Handler;};
struct _138CFB88078211FD2A51624E09EC668F {ULONG StateCount;ULONG TotalTransitions;ULONG ResetCount;ULONG64 StartTime;PPM_IDLE_STATE_ACCOUNTING State[1];};
struct _15F35BF8B73635FE222DFD2153EC2695 {USHORT PathConsumed;USHORT NumberOfReferrals;_15F35BF8B73635FE222DFD2153EC2695___A566F97FD8A813538FFE7A14C974CE0A __anonymous0;union _15F35BF8B73635FE222DFD2153EC2695___817E162991BB60FEE8D3126C21A6C91C Referrals[1];};
struct _1C1547A44DB0B6456BF86742FC40B205 { GUID *Set;ULONG Id;ULONG Flags;PCPFNPROPERTY_HANDLER Handler;};
struct _1C8C43135D010607C9E39DAEFBEEA658 {PVOID Context;ULONG Proportion;LONGLONG DeltaTime;};
struct _1D3855BED4097B50524459F6573D9798 {KSP_NODE Property;BDA_SignalType SignalType;ULONG SignalStandard;};
struct _1E1F3A8FE12995513A3555C52633C7C9 {BOOL Mute;LONG Minimum;LONG Maximum;_1E1F3A8FE12995513A3555C52633C7C9___9BC4A883C75E3D7D69E68DB5928F8CDB __anonymous0;};
struct _1E8FB3C461BB5B132CC95A1A06B366AC {ULONGLONG UsnJournalID;USN FirstUsn;USN NextUsn;USN LowestValidUsn;USN MaxUsn;ULONGLONG MaximumSize;ULONGLONG AllocationDelta;USHORT MinSupportedMajorVersion;USHORT MaxSupportedMajorVersion;};
struct _1F0027E2ABF976FB8AD72E88DC9BB28B {KSPROPERTY Property;LONGLONG PictureNumber;LONGLONG DropCount;ULONG AverageFrameSize;};
struct _2319D0803FA8D60BE4B5925A7A9CB62F {PCI_CAPABILITIES_HEADER Header;union _2319D0803FA8D60BE4B5925A7A9CB62F___6FF570DE39DD7AC51D2C8779583801A9 Command;union _2319D0803FA8D60BE4B5925A7A9CB62F___C0FDAA75702D310095668259A700B2EB Status;};
struct _24396BA7B1ABFC61208375C7C88D8B5F {_24396BA7B1ABFC61208375C7C88D8B5F___DA7EE1E32CD45FB8635BE676609FC669 __anonymous0;POOL_TYPE PoolType;ULONG Frames;ULONG FrameSize;ULONG FileAlignment;ULONG Reserved;};
struct _2A16572F0F8FCFF7B23E4E39050175A8 {ULONG Type;ULONG Count;ULONG TargetState;ULONG OldState;ULONG64 TargetProcessors;PPM_WMI_IDLE_STATE State[1];};
struct _321B4BFFCE66D8FF56170997BB33071C {ULONG StateCount;ULONG TotalTransitions;ULONG ResetCount;ULONG AbortCount;ULONG64 StartTime;PPM_IDLE_STATE_ACCOUNTING_EX State[1];};
struct _363B0F3181141CB904AEE47E3AB77A0E {KSP_NODE NodeProperty;LONG Value;ULONG Flags;ULONG Capabilities;};
struct _38332C6D8513F636DCCBCCABE200BE7A {ULONG Size;KSDS3D_HRTF_FILTER_QUALITY Quality;FLOAT SampleRate;ULONG MaxFilterSize;ULONG FilterTransientMuteLength;ULONG FilterOverlapBufferLength;ULONG OutputOverlapBufferLength;ULONG Reserved;};
struct _383365F5B01CBBB641F2B03EBB603E45 {USN StartUsn;ULONG ReasonMask;ULONG ReturnOnlyOnClose;ULONGLONG Timeout;ULONGLONG BytesToWaitFor;ULONGLONG UsnJournalID;};
struct _3B5C203EDC3EAE75DCA18DA66E622E4F {PVOID Register;ULONG Width;ULONGLONG Numerator;ULONGLONG Denominator;ULONG Accuracy;};
struct _407A2FFEB90671F2460E9DB49EB613D5 {BOOLEAN DefaultToBiosPolicy;UCHAR LevelCount;struct _407A2FFEB90671F2460E9DB49EB613D5___BFBB13DB58F1C35A5B00643EA83A5652 Level[1];};
struct _441EBF211493C42D9642F77D873F68D1 {KSPROPERTY Property;ULONG StreamIndex;LONG DefaultKeyFrameRate;LONG DefaultPFrameRate;LONG DefaultQuality;LONG NumberOfQualitySettings;LONG Capabilities;};
struct _4436E3E3B2A9BAC50D793DBB422657C7 {KSNODEPROPERTY NodeProperty;PVOID AppContext;ULONG Length;ULONG Reserved;};
struct _48207AC35C517F533F0BE91ADB0B9FCA {KSPROPERTY Property;ULONG ModesSupported;KSPIN_MEDIUM VideoMedium;KSPIN_MEDIUM TVAudioMedium;KSPIN_MEDIUM RadioAudioMedium;};
struct _490AB8E779FD104DCCEC9F5E52960528 {KSPROPERTY Property;ULONG StreamIndex;LONG Value;ULONG Flags;};
struct _5A8D7CCD30F40712144BEFCDAC7E1929 {GUID Guid;ULONG Flags;ULONG InstanceCount;union _5A8D7CCD30F40712144BEFCDAC7E1929___3D2B62F9915B44C4461260C3662DC358 u;};
struct _64911FAA3782108E0493959C6B1F8F86 {BOOLEAN AcOnLine;BOOLEAN BatteryPresent;BOOLEAN Charging;BOOLEAN Discharging;BOOLEAN Spare1[3];UCHAR Tag;ULONG MaxCapacity;ULONG RemainingCapacity;ULONG Rate;ULONG EstimatedTime;ULONG DefaultAlert1;ULONG DefaultAlert2;};
struct _6957CE76948A33FD66E00469AB6817B0 {KSPROPERTY Property;ULONG StreamIndex;LONG Value;};
struct _69F844921B1DE9364EE161E0CBB12E4A {LARGE_INTEGER FileReferenceNumber;ULONG FileRecordLength;UCHAR FileRecordBuffer[1];};
struct _6A72E0E621DD38BDAEEB041E3C2A50BB {ULONG Type;ULONG Count;ULONG TargetState;ULONG OldState;PVOID TargetProcessors;PPM_WMI_IDLE_STATE State[1];};
struct _6B8E9FF8FB4DE59DE7DA4092DA92354D {KSNODEPROPERTY NodeProperty;PVOID ListenerId;ULONG Reserved;};
struct _717F7A89FCE81E507F2DE95312881168 {KSPROPERTY Property;PVOID BaseAddress;ULONG RequestedBufferSize;};
struct _7FACA56ADE6E3D8EA85378C4937BF6DD {USHORT usVersion;USHORT usMicArrayType;SHORT wVerticalAngleBegin;SHORT wVerticalAngleEnd;SHORT wHorizontalAngleBegin;SHORT wHorizontalAngleEnd;USHORT usFrequencyBandLo;USHORT usFrequencyBandHi;USHORT usNumberOfMicrophones;KSAUDIO_MICROPHONE_COORDINATES KsMicCoord[1];};
struct _81CBD782E1765289C4F89D039AD60F12 {SCARD_IO_REQUEST ioRequest;UCHAR bSw1;UCHAR bSw2;union _81CBD782E1765289C4F89D039AD60F12___9F1A7E006C2BA3848AD5B824CC804FF9 u;};
struct _8251F34BCF49AE1C266F7CD180791646 {KSNODEPROPERTY NodeProperty;LONG Channel;ULONG Reserved;};
struct _82A9949D9C93DB4693E05DBBCDD803A5 {PVOID BufferAddress;ULONG ActualBufferSize;BOOL CallMemoryBarrier;};
struct _872ED6AFBC09867EE86BBF274F8CE85A {KSOBJECT_HEADER Header;PKSIDEFAULTCLOCK DefaultClock;ULONG Reserved;};
struct _90FA911F5F1D4FE086DF5A0612D3E63E {USHORT VersionNumber;USHORT Size;USHORT ServerType;_90FA911F5F1D4FE086DF5A0612D3E63E___C647542A1E5DFD351C2D0807CB3F9E35 __anonymous0;WCHAR ShareName[1];};
struct _9A6BD7645A973A5ADF34F154404EC940 {KSPROPERTY Property;LONG Value;ULONG Flags;ULONG Capabilities;};
struct _9D2EE2D5E082F56CCDE737471FBF8D82 {KSEVENT Event;PKSEVENTDATA EventData;PVOID Reserved;};
struct _9DABE2D50638D6782800B54C16FE3B63 { GUID *Set;ULONG Id;ULONG Flags;PCPFNMETHOD_HANDLER Handler;};
struct _A2B9D6959A188CB660A127F9232FE650 {ULONG Revision;UCHAR MaxThrottle;UCHAR MinThrottle;UCHAR BusyAdjThreshold;union _A2B9D6959A188CB660A127F9232FE650___99F8928C094CB2C20BF05591F5CB082D u;ULONG TimeCheck;ULONG IncreaseTime;ULONG DecreaseTime;ULONG IncreasePercent;ULONG DecreasePercent;};
struct _A35330E71724D40A1BD15D9C53ABB072 { GUID *Set;ULONG EventsCount; KSEVENT_ITEM *EventItem;};
struct _A9A577EE7A824FAC978D1F581F222FD5 {_A9A577EE7A824FAC978D1F581F222FD5___5A61C97CDA6B159BFB90D97CD02CBE5B __anonymous0;PTR_FILTER TrDB;PVOID YYYDB;PVOID XXXDB;};
struct _AAD79452FC68247846A5E3B058A03BB4 {KSPROPERTY Property;ULONG Capabilities;KSPIN_MEDIUM InputMedium;KSPIN_MEDIUM OutputMedium;};
struct _ACFC21BFB5CC6BA65A81729B6E881FEB {KSPROPERTY Property;LONG Value1;ULONG Flags;ULONG Capabilities;LONG Value2;};
struct _ADC8229B35D2FBAA1DBEA2E6CF74A72A {_ADC8229B35D2FBAA1DBEA2E6CF74A72A___CC5A134094C1157C29EB10C0D9181A57 __anonymous0;HANDLE VolumeHandle;ULONG HandleInfo;};
struct _BA878B11B82B24305DD851662AD4DC24 {HANDLE FileHandle;LARGE_INTEGER StartingVcn;LARGE_INTEGER StartingLcn;ULONG ClusterCount;};
struct _BB313D54CF23017BA1FEE07E0A69AC13 {KSP_NODE NodeProperty;LONG Value1;ULONG Flags;ULONG Capabilities;LONG Value2;};
struct _BCFB24E8FFADAC88C53CD3CD50E1DFA4 {ULONG64 TotalTime;ULONG IdleTransitions;ULONG FailedTransitions;ULONG InvalidBucketIndex;ULONG MinTimeUs;ULONG MaxTimeUs;ULONG CancelledTransitions;PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];};
struct _CB16EFCEDA39FCD4D0BC1BDE67199271 {KSPROPERTY Property;ULONG StreamIndex;LONG Mode;};
struct _CF9BC9550FD422E0D8C3D585EC5FABC6 {KSPROPERTY Property;PVOID BaseAddress;ULONG RequestedBufferSize;ULONG NotificationCount;};
struct _D2D205A4E5DA2498F5010F3E3EADEEBB {KSPROPERTY Property;ULONG StreamIndex;ULONG RangeIndex;SIZE Dimensions;};
struct _D8768C71F24D405D4B7DEC8016730D6C {ULONG CategoriesCount; GUID *Categories;ULONG TopologyNodesCount; GUID *TopologyNodes;ULONG TopologyConnectionsCount; KSTOPOLOGY_CONNECTION *TopologyConnections; GUID *TopologyNodesNames;ULONG Reserved;};
struct _D96EA640170F725CA11FCBCFEE3FF36E {ULONG Flags; PCAUTOMATION_TABLE *AutomationTable; GUID *Type; GUID *Name;};
struct _DCA1691E12E502D611F5426518CFEFB5 {KSDATARANGE DataRange;GUID Technology;ULONG Channels;ULONG Notes;ULONG ChannelMask;};
struct _DCC11EC9B9FE9CEA4F12FF4EAD85BA21 {KSEVENTDATA EventData;ULONG StartFrequency;ULONG EndFrequency;BDA_LockType LockRequested;};
struct _E1D601DFB9F50A58CFF7A79389CE7A63 {ULONG CountItems;ULONG PinFlags;KS_COMPRESSION OutputCompression;ULONG PinWeight;KS_FRAMING_ITEM FramingItem[1];};
struct _E6A0A6AFD97C9603961F7D97D8E3F005 {ULONG Frequency;ULONG Power;UCHAR PercentFrequency;UCHAR IncreaseLevel;UCHAR DecreaseLevel;UCHAR Type;ULONG IncreaseTime;ULONG DecreaseTime;ULONG64 Control;ULONG64 Status;ULONG HitCount;ULONG Reserved1;ULONG64 Reserved2;ULONG64 Reserved3;};
struct _E7B7FA0D35363FDD22D2212ED4AF2596 {USHORT Fid;UCHAR ReturnSingleEntry;UCHAR RestartScan;ULONG SidListLength;ULONG StartSidLength;ULONG StartSidOffset;};
struct _EA389285BB7D2C99CE0D2AD282BB3F14 {KSPROPERTY Property;TunerLockType LockStatus;ULONG CurrentFrequency;};
struct _EDF2F1A5F1BE56D609AF1AF9494F3DFB {LONG PrintLevel;ULONG BreakMask;PSZ Name;};
struct _EE7A277138FF7ACF03A1E9A4C6095702 {KSIDENTIFIER PropTypeSet;ULONG MembersListCount; KSPROPERTY_MEMBERSLIST *MembersList;};
struct _EF98EE567420140E285BF0657F46953F {KSPROPERTY Property;GUID SourceFormat;GUID TargetFormat;LONGLONG Time;};
struct _F81C3DA38AA87E09A89CEC7FF6997E89 {ULONGLONG StartFileReferenceNumber;USN LowUsn;USN HighUsn;USHORT MinMajorVersion;USHORT MaxMajorVersion;};
struct _FAF6A73AFD9895CF3E56308E3C23E916 {USHORT VersionNumber;USHORT Size;USHORT ServerType;_90FA911F5F1D4FE086DF5A0612D3E63E___C647542A1E5DFD351C2D0807CB3F9E35 __anonymous0;ULONG Proximity;ULONG TimeToLive;USHORT DfsPathOffset;USHORT DfsAlternatePathOffset;USHORT NetworkAddressOffset;};
typedef void ( *DXGKCB_SETPOWERCOMPONENTRESIDENCY)(IN_CONST_HANDLE hAdapter, UINT ComponentIndex, ULONGLONG Residency);
typedef NTSTATUS  DXGKDDI_QUERYDEPENDENTENGINEGROUP(IN_CONST_HANDLE hAdapter, INOUT_DXGKARG_QUERYDEPENDENTENGINEGROUP pQueryDependentEngineGroup);
typedef void KBUGCHECK_REASON_CALLBACK_ROUTINE(KBUGCHECK_CALLBACK_REASON Reason, struct _KBUGCHECK_REASON_CALLBACK_RECORD *Record, PVOID ReasonSpecificData, ULONG ReasonSpecificDataLength);
typedef void MINIPORT_CO_SEND_NET_BUFFER_LISTS(NDIS_HANDLE MiniportVcContext, PNET_BUFFER_LIST NetBufferLists, ULONG SendFlags);
typedef void (*PCREATE_PROCESS_NOTIFY_ROUTINE_EX)(PEPROCESS Process, HANDLE ProcessId, PPS_CREATE_NOTIFY_INFO CreateInfo);
typedef NTSTATUS (*PENTROPY_SOURCE_CALLBACK_FUNCTION)(ENTROPY_SOURCE_HANDLE hEntropySource, PVOID context);
typedef void ( *PFLT_DEFERRED_IO_WORKITEM_ROUTINE)(PFLT_DEFERRED_IO_WORKITEM FltWorkItem, PFLT_CALLBACK_DATA CallbackData, PVOID Context);
typedef NTSTATUS (*PMM_ROTATE_COPY_CALLBACK_FUNCTION)(PMDL DestinationMdl, PMDL SourceMdl, PVOID Context);
typedef void PROTOCOL_CL_REGISTER_SAP_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolSapContext, PCO_SAP Sap, NDIS_HANDLE NdisSapHandle);
typedef NTSTATUS  USB_BUSIFFN_INITIALIZE_USB_DEVICE(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle);
struct _DOT11_WFD_DISCOVER_DEVICE_FILTER {DOT11_MAC_ADDRESS DeviceID;UCHAR ucBitmask;DOT11_SSID GroupSSID;};
struct _DXGKMDT_OPM_ACTUAL_OUTPUT_FORMAT {DXGKMDT_OPM_RANDOM_NUMBER rnRandomNumber;ULONG ulStatusFlags;ULONG ulDisplayWidth;ULONG ulDisplayHeight;DXGKMDT_OPM_INTERLEAVE_FORMAT ifInterleaveFormat;ULONG d3dFormat;ULONG ulFrequencyNumerator;ULONG ulFrequencyDenominator;};
struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY {ULONG OffsetToNext;ULONG Flags;LARGE_INTEGER Reserved;LARGE_INTEGER Cluster;WCHAR FileName[1];};
struct _MSMCAEvent_PlatformSpecificError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG PLATFORM_ERROR_STATUS;ULONGLONG PLATFORM_REQUESTOR_ID;ULONGLONG PLATFORM_RESPONDER_ID;ULONGLONG PLATFORM_TARGET_ID;ULONGLONG PLATFORM_BUS_SPECIFIC_DATA;UCHAR OEM_COMPONENT_ID[16];ULONG Size;UCHAR RawRecord[1];};
struct _NDIS_MINIPORT_RESTART_PARAMETERS {NDIS_OBJECT_HEADER Header;PNDIS_RESTART_ATTRIBUTES RestartAttributes;ULONG Flags;};
struct _REG_SET_KEY_SECURITY_INFORMATION {PVOID Object;PSECURITY_INFORMATION SecurityInformation;PSECURITY_DESCRIPTOR SecurityDescriptor;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _REQUEST_REMOTE_WAKE_NOTIFICATION {USHORT Version;USHORT Size;USBD_FUNCTION_HANDLE UsbdFunctionHandle;ULONG Interface;};
struct _SAVED_DEVICE_INTERNAL_STATUS_LOG {UCHAR LogAddress;UCHAR Reserved0[3];ULONG OrganizationID;USHORT Area1LastLogPage;USHORT Area2LastLogPage;USHORT Area3LastLogPage;UCHAR Reserved2[368];UCHAR SavedDataAvailable;UCHAR GenerationNumber;UCHAR ReasonIdentifier[128];};
struct _WATCHDOG_TIMER_INSTRUCTION_ENTRY {UCHAR WatchdogAction;UCHAR InstructionFlags;UCHAR Reserved[2];GEN_ADDR RegisterRegion;ULONG Value;ULONG Mask;};
struct _WHEA_XPF_PROCESSOR_ERROR_SECTION {WHEA_XPF_PROCESSOR_ERROR_SECTION_VALIDBITS ValidBits;ULONGLONG LocalAPICId;UCHAR CpuId[48];UCHAR VariableInfo[1];};
typedef NTSTATUS  DXGKDDI_RECOMMENDFUNCTIONALVIDPN(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_RECOMMENDFUNCTIONALVIDPN_CONST pRecommendFunctionalVidPn);
typedef NTSTATUS  DXGKDDI_SETVIDPNSOURCEVISIBILITY(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_SETVIDPNSOURCEVISIBILITY pSetVidPnSourceVisibility);
typedef NTSTATUS GET_VIRTUAL_FUNCTION_PROBED_BARS(PVOID Context, PULONG BaseRegisterValues);
typedef NTSTATUS IO_SESSION_NOTIFICATION_FUNCTION(PVOID SessionObject, PVOID IoObject, ULONG Event, PVOID Context, PVOID NotificationPayload, ULONG PayloadLength);
typedef void MINIPORT_RETURN_NET_BUFFER_LISTS(NDIS_HANDLE MiniportAdapterContext, PNET_BUFFER_LIST NetBufferLists, ULONG ReturnFlags);
typedef NTSTATUS ( *PFNDRMFORWARDCONTENTTOFILEOBJECT)(ULONG ContentId, PFILE_OBJECT FileObject);
typedef NTSTATUS (*PINITIALIZE_DMA_TRANSFER_CONTEXT)(PDMA_ADAPTER DmaAdapter, PVOID DmaTransferContext);
typedef void PROTOCOL_CM_ACTIVATE_VC_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE CallMgrVcContext, PCO_CALL_PARAMETERS CallParameters);
typedef void PROTOCOL_CO_OID_REQUEST_COMPLETE(NDIS_HANDLE ProtocolAfContext, NDIS_HANDLE ProtocolVcContext, NDIS_HANDLE ProtocolPartyContext, PNDIS_OID_REQUEST OidRequest, NDIS_STATUS Status);
typedef SECURITY_STATUS ( *QUERY_SECURITY_PACKAGE_INFO_FN_W)(PSECURITY_STRING, PSecPkgInfoW *);
struct _CSV_DOWN_LEVEL_OPEN_ECP_CONTEXT {ULONG Version;BOOLEAN IsResume;CSV_DOWN_LEVEL_FILE_TYPE FileType;ULONG SourceNodeId;ULONG DestinationNodeId;};
struct _DOT11_DISASSOCIATE_PEER_REQUEST {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerMacAddr;USHORT usReason;};
struct _DXGKARG_ENUMVIDPNCOFUNCMODALITY {D3DKMDT_HVIDPN hConstrainingVidPn;D3DKMDT_ENUMCOFUNCMODALITY_PIVOT_TYPE EnumPivotType;DXGK_ENUM_PIVOT EnumPivot;};
struct _FILE_FS_DRIVER_PATH_INFORMATION {BOOLEAN DriverInPath;ULONG DriverNameLength;WCHAR DriverName[1];};
struct _KSM_BDA_GDDS_SERVICEFROMTUNEXML {KSMETHOD Method;ULONG ulTuneXmlLength;BYTE argbTuneXml[1];};
struct _MSFC_VirtualFibrePortAttributes {ULONG Status;ULONG FCId;USHORT VirtualName[64];UCHAR Tag[16];UCHAR WWPN[8];UCHAR WWNN[8];UCHAR FabricWWN[8];};
struct _MSMCAEvent_MemoryHierarchyError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONG TransactionType;ULONG MemoryHierarchyLevel;ULONG RequestType;ULONGLONG Address;ULONG Size;UCHAR RawRecord[1];};
struct _MSiSCSI_RedirectPortalInfoClass {ULONGLONG UniqueAdapterId;ULONG SessionCount;ISCSI_RedirectSessionInfo RedirectSessionList[1];};
struct _REG_POST_CREATE_KEY_INFORMATION {PUNICODE_STRING CompleteName;PVOID Object;NTSTATUS Status;};
struct _STORAGE_DEVICE_LAYOUT_SIGNATURE {ULONG Version;ULONG Size;BOOLEAN Mbr;union _STORAGE_DEVICE_LAYOUT_SIGNATURE___EAC3BE34E0D92A563AB4E2E6C3906A31 DeviceSpecific;};
typedef void ( *DXGKCB_SETPOWERCOMPONENTLATENCY)(IN_CONST_HANDLE hAdapter, UINT ComponentIndex, ULONGLONG Latency);
typedef NTSTATUS  DXGKDDI_ENUMVIDPNCOFUNCMODALITY(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_ENUMVIDPNCOFUNCMODALITY_CONST pEnumCofuncModality);
typedef NTSTATUS DXGKDDI_NOTIFY_SURPRISE_REMOVAL(PVOID MiniportDeviceContext, DXGK_SURPRISE_REMOVAL_TYPE RemovalType);
typedef NTSTATUS ( *PFNDRMFORWARDCONTENTTOINTERFACE)(ULONG ContentId, PUNKNOWN pUnknown, ULONG NumMethods);
typedef NTSTATUS ( *PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB)(PVOID, PURB);
typedef void  USB_BUSIFFN_DEREF_DEVICE_HANDLE(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, PVOID Object, ULONG Tag);
typedef NTSTATUS  USB_BUSIFFN_GET_POTRTHACK_FLAGS(PVOID BusContext, PULONG Flags);
struct _ACPI_EVAL_INPUT_BUFFER_COMPLEX {ULONG Signature;union _ACPI_EVAL_INPUT_BUFFER_COMPLEX___CFC7B0DA028A7F4F3B52DE418131CED1 u;ULONG Size;ULONG ArgumentCount;ACPI_METHOD_ARGUMENT Argument[1];};
struct _CM_PNP_BIOS_INSTALLATION_CHECK {UCHAR Signature[4];UCHAR Revision;UCHAR Length;USHORT ControlField;UCHAR Checksum;ULONG EventFlagAddress;USHORT RealModeEntryOffset;USHORT RealModeEntrySegment;USHORT ProtectedModeEntryOffset;ULONG ProtectedModeCodeBaseAddress;ULONG OemDeviceId;USHORT RealModeDataBaseAddress;ULONG ProtectedModeDataBaseAddress;};
struct _DEDUP_CHUNK_INFORMATION_HASH32 {ULONG ChunkFlags;LONGLONG ChunkOffsetInFile;LONGLONG ChunkSize;UCHAR HashVal[32];};
struct _DXGK_MULITPLANE_OVERLAY_FILTER {DXGK_MULTIPLANE_OVERLAY_FILTER_TYPE FilterType;BOOL Enabled;INT Value;};
struct _DXGK_VIDEO_OUTPUT_CAPABILITIES {D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY InterfaceTechnology;D3DKMDT_MONITOR_ORIENTATION_AWARENESS MonitorOrientationAwareness;BOOLEAN SupportsSdtvModes;};
struct _IRB_REQ_BUS_RESET_NOTIFICATION {ULONG fulFlags;PBUS_BUS_RESET_NOTIFICATION ResetRoutine;PVOID ResetContext;};
struct _MSNdis_ReceiveFilterParameters {MSNdis_ObjectHeader Header;ULONG Flags;ULONG FilterType;ULONG QueueId;ULONG FilterId;ULONG FieldParametersArrayOffset;ULONG FieldParametersArrayNumElements;ULONG FieldParametersArrayElementSize;ULONG RequestedFilterIdBitCount;MSNdis_ReceiveFilterFieldParameters FieldParameters[1];};
struct _NDIS_RECEIVE_FILTER_INFO_ARRAY {NDIS_OBJECT_HEADER Header;NDIS_RECEIVE_QUEUE_ID QueueId;ULONG FirstElementOffset;ULONG NumElements;ULONG ElementSize;};
struct _NDIS_WWAN_PACKET_SERVICE_STATE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_PACKET_SERVICE PacketService;};
struct _NDIS_WWAN_PROVISIONED_CONTEXTS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_LIST_HEADER ContextListHeader;};
struct _PCI_DEVICE_PRESENCE_PARAMETERS {ULONG Size;ULONG Flags;USHORT VendorID;USHORT DeviceID;UCHAR RevisionID;USHORT SubVendorID;USHORT SubSystemID;UCHAR BaseClass;UCHAR SubClass;UCHAR ProgIf;};
struct _RX_WORK_QUEUE_RUNDOWN_CONTEXT_ {KEVENT RundownCompletionEvent;LONG NumberOfThreadsSpunDown;PETHREAD *ThreadPointers;};
struct _SOCKET_SECURITY_QUERY_TEMPLATE {SOCKET_SECURITY_PROTOCOL SecurityProtocol;SOCKADDR_STORAGE PeerAddress;ULONG PeerTokenAccessMask;};
typedef NTSTATUS  DXGKDDISETPOWERCOMPONENTFSTATE(IN_CONST_HANDLE DriverContext, UINT ComponentIndex, UINT FState);
typedef NTSTATUS  DXGKDDI_QUERYVIDPNHWCAPABILITY(IN_CONST_HANDLE i_hAdapter, INOUT_PDXGKARG_QUERYVIDPNHWCAPABILITY io_pVidPnHWCaps);
typedef NTSTATUS  DXGKDDI_RECOMMENDVIDPNTOPOLOGY(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_RECOMMENDVIDPNTOPOLOGY_CONST pRecommendVidPnTopology);
typedef void FILTER_RETURN_NET_BUFFER_LISTS(NDIS_HANDLE FilterModuleContext, PNET_BUFFER_LIST NetBufferLists, ULONG ReturnFlags);
typedef void MINIPORT_MESSAGE_INTERRUPT_DPC(NDIS_HANDLE MiniportInterruptContext, ULONG MessageId, PVOID MiniportDpcContext, PVOID ReceiveThrottleParameters, PVOID NdisReserved2);
typedef void (*PFNBTHPORT_INDICATION_CALLBACK)(PVOID Context, INDICATION_CODE Indication, PINDICATION_PARAMETERS Parameters);
typedef NTSTATUS (*PFNUSBCAMD_CancelBulkReadWrite)(PVOID DeviceContext, ULONG PipeIndex);
typedef void (*PFS_FILTER_COMPLETION_CALLBACK)(PFS_FILTER_CALLBACK_DATA Data, NTSTATUS OperationStatus, PVOID CompletionContext);
typedef NTSTATUS ( *PMRX_FINALIZE_SRVCALL_CALLDOWN)(PMRX_SRV_CALL SrvCall, BOOLEAN Force);
typedef void PROTOCOL_CL_ADD_PARTY_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolPartyContext, NDIS_HANDLE NdisPartyHandle, PCO_CALL_PARAMETERS CallParameters);
typedef void PROTOCOL_CL_MAKE_CALL_COMPLETE(NDIS_STATUS Status, NDIS_HANDLE ProtocolVcContext, NDIS_HANDLE NdisPartyHandle, PCO_CALL_PARAMETERS CallParameters);
typedef NTSTATUS (*PSHED_PI_GET_ERROR_SOURCE_INFO)(PVOID PluginContext, PWHEA_ERROR_SOURCE_DESCRIPTOR ErrorSource);
typedef NTSTATUS (*PSHED_PI_SET_ERROR_SOURCE_INFO)(PVOID PluginContext, PWHEA_ERROR_SOURCE_DESCRIPTOR ErrorSource);
typedef NTSTATUS ( *PUSB_BUSIFFN_QUERY_BUS_TIME_EX)(PVOID, PULONG);
struct _DEVICEDUMP_PRIVATE_SUBSECTION {ULONG dwFlags;GP_LOG_PAGE_DESCRIPTOR GPLogId;UCHAR bData[1];};
struct _DOT11_DATA_RATE_MAPPING_TABLE {NDIS_OBJECT_HEADER Header;ULONG uDataRateMappingLength;DOT11_DATA_RATE_MAPPING_ENTRY DataRateMappingEntries[126];};
struct _DXGKARG_RECOMMENDMONITORMODES {D3DDDI_VIDEO_PRESENT_TARGET_ID VideoPresentTargetId;D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet; DXGK_MONITORSOURCEMODESET_INTERFACE *pMonitorSourceModeSetInterface;};
struct _DXGK_TARGETMODE_DETAIL_TIMING {D3DKMDT_VIDEO_SIGNAL_STANDARD VideoStandard;UINT TimingId;DISPLAYID_DETAILED_TIMING_TYPE_I DetailTiming;};
struct _FILE_FS_ATTRIBUTE_INFORMATION {ULONG FileSystemAttributes;LONG MaximumComponentNameLength;ULONG FileSystemNameLength;WCHAR FileSystemName[1];};
struct _FILE_MOVE_CLUSTER_INFORMATION {ULONG ClusterCount;HANDLE RootDirectory;ULONG FileNameLength;WCHAR FileName[1];};
struct _IO_RESOURCE_REQUIREMENTS_LIST {ULONG ListSize;INTERFACE_TYPE InterfaceType;ULONG BusNumber;ULONG SlotNumber;ULONG Reserved[3];ULONG AlternativeLists;IO_RESOURCE_LIST List[1];};
struct _KBUGCHECK_SECONDARY_DUMP_DATA {PVOID InBuffer;ULONG InBufferLength;ULONG MaximumAllowed;GUID Guid;PVOID OutBuffer;ULONG OutBufferLength;};
struct _MPIO_DEVINSTANCE_HEALTH_CLASS {ULONGLONG PathId;ULONGLONG NumberReads;ULONGLONG NumberWrites;ULONGLONG NumberBytesRead;ULONGLONG NumberBytesWritten;ULONGLONG NumberRetries;ULONGLONG NumberIoErrors;ULONGLONG CreateTime;ULONGLONG FailTime;BOOLEAN DeviceOffline;UCHAR NumberReadsWrap;UCHAR NumberWritesWrap;UCHAR NumberBytesReadWrap;UCHAR NumberBytesWrittenWrap;UCHAR Pad[3];};
struct _MSNdis_ReceiveFilterInfoArray {MSNdis_ObjectHeader Header;ULONG QueueId;ULONG FirstElementOffset;ULONG NumElements;ULONG ElementSize;MSNdis_ReceiveFilterInfo Filter[1];};
struct _NDIS_RECEIVE_SCALE_PARAMETERS {NDIS_OBJECT_HEADER Header;USHORT Flags;USHORT BaseCpuNumber;ULONG HashInformation;USHORT IndirectionTableSize;ULONG IndirectionTableOffset;USHORT HashSecretKeySize;ULONG HashSecretKeyOffset;ULONG ProcessorMasksOffset;ULONG NumberOfProcessorMasks;ULONG ProcessorMasksEntrySize;};
struct _NDIS_SYSTEM_PROCESSOR_INFO_EX {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_PROCESSOR_VENDOR ProcessorVendor;ULONG NumSockets;ULONG NumCores;ULONG NumCoresPerSocket;ULONG MaxHyperThreadingProcsPerCore;ULONG ProcessorInfoOffset;ULONG NumberOfProcessors;ULONG ProcessorInfoEntrySize;};
struct _NDIS_TAPI_GET_LINE_DEV_STATUS {ULONG ulRequestID;HDRV_LINE hdLine;LINE_DEV_STATUS LineDevStatus;};
struct _NDIS_TAPI_SEND_USER_USER_INFO {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulUserUserInfoSize;UCHAR UserUserInfo[1];};
struct _NDIS_WWAN_PREFERRED_PROVIDERS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_LIST_HEADER PreferredListHeader;};
struct _REG_SET_VALUE_KEY_INFORMATION {PVOID Object;PUNICODE_STRING ValueName;ULONG TitleIndex;ULONG Type;PVOID Data;ULONG DataSize;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE {ACE_HEADER Header;ACCESS_MASK Mask;ULONG SidStart;};
struct _TDI_REQUEST_QUERY_INFORMATION {TDI_REQUEST Request;ULONG QueryType;PTDI_CONNECTION_INFORMATION RequestConnectionInformation;};
typedef void BOOT_DRIVER_CALLBACK_FUNCTION(PVOID CallbackContext, BDCB_CALLBACK_TYPE Classification, PBDCB_IMAGE_INFORMATION ImageInformation);
struct DOT11_PORT_STATE_NOTIFICATION {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerMac;BOOLEAN bOpen;};
typedef NTSTATUS ( *DXGKCB_GET_DEVICE_INFORMATION)(HANDLE DeviceHandle, PDXGK_DEVICE_INFO DeviceInfo);
typedef NTSTATUS  DXGKDDI_ACQUIRESWIZZLINGRANGE(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_ACQUIRESWIZZLINGRANGE pAcquireSwizzlingRange);
typedef NTSTATUS  DXGKDDI_RECOMMENDMONITORMODES(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_RECOMMENDMONITORMODES_CONST pRecommendMonitorModes);
typedef NTSTATUS  DXGKDDI_RELEASESWIZZLINGRANGE(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_RELEASESWIZZLINGRANGE pReleaseSwizzlingRange);
typedef NTSTATUS  DXGKDDI_SETVIDPNSOURCEADDRESS(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_SETVIDPNSOURCEADDRESS pSetVidPnSourceAddress);
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_ADDPATH)(IN_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, IN_PD3DKMDT_VIDPN_PRESENT_PATH pVidPnPresentPath);
typedef NTSTATUS (*PCLASS_QUERY_PNP_CAPABILITIES)(PDEVICE_OBJECT PhysicalDeviceObject, PDEVICE_CAPABILITIES Capabilities);
typedef void PROTOCOL_OID_REQUEST_COMPLETE(NDIS_HANDLE ProtocolBindingContext, PNDIS_OID_REQUEST OidRequest, NDIS_STATUS Status);
typedef NTSTATUS (*PSHED_PI_DISABLE_ERROR_SOURCE)(PVOID PluginContext, PWHEA_ERROR_SOURCE_DESCRIPTOR ErrorSource);
typedef void (*PStorPortPutScatterGatherList)(PVOID HwDeviceExtension, PSTOR_SCATTER_GATHER_LIST ScatterGatherList, BOOLEAN WriteToDevice);
typedef void ( *PUSB_BUSIFFN_GETUSBDI_VERSION)(PVOID, PUSBD_VERSION_INFORMATION, PULONG);
struct _DRIVE_LAYOUT_INFORMATION_GPT {GUID DiskId;LARGE_INTEGER StartingUsableOffset;LARGE_INTEGER UsableLength;ULONG MaxPartitionCount;};
struct _FILE_COMPRESSION_INFORMATION {LARGE_INTEGER CompressedFileSize;USHORT CompressionFormat;UCHAR CompressionUnitShift;UCHAR ChunkShift;UCHAR ClusterShift;UCHAR Reserved[3];};
struct _FILE_ID_FULL_DIR_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;ULONG EaSize;LARGE_INTEGER FileId;WCHAR FileName[1];};
struct _IO_SESSION_STATE_INFORMATION {ULONG SessionId;IO_SESSION_STATE SessionState;BOOLEAN LocalSession;};
struct _IRB_REQ_ISOCH_ATTACH_BUFFERS {HANDLE hResource;ULONG nNumberOfDescriptors;PISOCH_DESCRIPTOR pIsochDescriptor;};
struct _IRB_REQ_ISOCH_DETACH_BUFFERS {HANDLE hResource;ULONG nNumberOfDescriptors;PISOCH_DESCRIPTOR pIsochDescriptor;};
struct _ISCSI_DiscoveredTargetPortal {USHORT Socket;ISCSI_IP_Address Address;WCHAR SymbolicName[257];};
struct _KSM_BDA_CAS_OPENBROADCASTMMI {KSM_NODE NodeMethod;ULONG ulDialogRequest;CHAR cLanguage[12];ULONG ulEventId;};
struct _MODE_DATA_COMPRESS_PAGE_PLUS {MODE_PARAMETER_HEADER ParameterListHeader;MODE_PARAMETER_BLOCK ParameterListBlock;MODE_DATA_COMPRESSION_PAGE DataCompressPage;};
struct _MODE_DEVICE_CONFIG_PAGE_PLUS {MODE_PARAMETER_HEADER ParameterListHeader;MODE_PARAMETER_BLOCK ParameterListBlock;MODE_DEVICE_CONFIGURATION_PAGE DeviceConfigPage;};
struct _MOUNTDEV_SUGGESTED_LINK_NAME {BOOLEAN UseOnlyIfThereAreNoOtherLinks;USHORT NameLength;WCHAR Name[1];};
struct _MSFC_FibrePortNPIVAttributes {UCHAR WWPN[8];UCHAR WWNN[8];ULONG NumberVirtualPorts;MSFC_VirtualFibrePortAttributes VirtualPorts[1];};
struct _MSNdis_ReceiveQueueInfoArray {MSNdis_ObjectHeader Header;ULONG FirstElementOffset;ULONG NumElements;ULONG ElementSize;MSNdis_ReceiveQueueInfo Queue[1];};
struct _MSiSCSI_ConnectionStatistics {WCHAR iSCSIName[224];USHORT CID;ULONGLONG USID;ULONGLONG UniqueAdapterId;ULONGLONG BytesSent;ULONGLONG BytesReceived;ULONGLONG PDUCommandsSent;ULONGLONG PDUResponsesReceived;};
struct _MSiSCSI_InitiatorSessionInfo {ULONGLONG UniqueAdapterId;ULONG SessionCount;ISCSI_SessionStaticInfo SessionsList[1];};
struct _NAMED_PIPE_CREATE_PARAMETERS {ULONG NamedPipeType;ULONG ReadMode;ULONG CompletionMode;ULONG MaximumInstances;ULONG InboundQuota;ULONG OutboundQuota;LARGE_INTEGER DefaultTimeout;BOOLEAN TimeoutSpecified;};
struct _NDIS_RECEIVE_HASH_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG HashInformation;USHORT HashSecretKeySize;ULONG HashSecretKeyOffset;};
struct _NDIS_TAPI_GET_ADDRESS_STATUS {ULONG ulRequestID;HDRV_LINE hdLine;ULONG ulAddressID;LINE_ADDRESS_STATUS LineAddressStatus;};
struct _NDIS_WWAN_REGISTRATION_STATE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_REGISTRATION_STATE RegistrationState;};
struct _OFFLOAD_SECURITY_ASSOCIATION {OFFLOAD_OPERATION_E Operation;SPI_TYPE SPI;OFFLOAD_ALGO_INFO IntegrityAlgo;OFFLOAD_ALGO_INFO ConfAlgo;OFFLOAD_ALGO_INFO Reserved;};
struct _PROCESS_HANDLE_TRACING_QUERY {HANDLE Handle;ULONG TotalTraces;PROCESS_HANDLE_TRACING_ENTRY HandleTrace[1];};
struct _REQUEST_OPLOCK_OUTPUT_BUFFER {USHORT StructureVersion;USHORT StructureLength;ULONG OriginalOplockLevel;ULONG NewOplockLevel;ULONG Flags;ACCESS_MASK AccessMode;USHORT ShareMode;};
struct _SECURITY_DESCRIPTOR_RELATIVE {UCHAR Revision;UCHAR Sbz1;SECURITY_DESCRIPTOR_CONTROL Control;ULONG Owner;ULONG Group;ULONG Sacl;ULONG Dacl;};
struct _STORAGE_SCSI_INFO_EXCEPTIONS {BOOLEAN PageSavable;UCHAR Flags;UCHAR MRIE;UCHAR Padding;ULONG IntervalTimer;ULONG ReportCount;};
struct _STOR_WMI_QUERYTRACEINFO_ARGS {ULONG TraceInformationClass;PVOID TraceInformation;ULONG TraceInformationLength;PULONG RequiredLength;PVOID Buffer;ULONG result;};
struct _TDI_REQUEST_RECEIVE_DATAGRAM {TDI_REQUEST Request;PTDI_CONNECTION_INFORMATION ReceiveDatagramInformation;PTDI_CONNECTION_INFORMATION ReturnInformation;USHORT ReceiveFlags;};
struct _TXFS_LIST_TRANSACTIONS_ENTRY {GUID TransactionId;ULONG TransactionState;ULONG Reserved1;ULONG Reserved2;LONGLONG Reserved3;};
struct _WHEA_NOTIFICATION_DESCRIPTOR {UCHAR Type;UCHAR Length;WHEA_NOTIFICATION_FLAGS Flags;union _WHEA_NOTIFICATION_DESCRIPTOR___45710FB6A32CAAD0CB4A55E8C32CD04D u;};
struct _tagKSAUDIOENGINE_VOLUMELEVEL {LONG TargetVolume;AUDIO_CURVE_TYPE CurveType;ULONGLONG CurveDuration;};
typedef NTSTATUS ( *pHalIoSetPartitionInformation)(PDEVICE_OBJECT DeviceObject, ULONG SectorSize, ULONG PartitionNumber, ULONG PartitionType);
typedef NTSTATUS (*pKdSetupPciDeviceForDebugging)(PVOID LoaderBlock, PDEBUG_DEVICE_DESCRIPTOR PciDevice);
struct DOT11_PRIVACY_EXEMPTION_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_PRIVACY_EXEMPTION PrivacyExemptionEntries[1];};
typedef NTSTATUS ( *DXGKCB_INDICATE_CHILD_STATUS)(HANDLE DeviceHandle, PDXGK_CHILD_STATUS ChildStatus);
typedef void (*PBUS_PHY_PACKET_NOTIFICATION)(PVOID Context, ULONG GenerationCount, ULARGE_INTEGER PhyPacket);
typedef NTSTATUS (*PHALMCAINTERFACEREADREGISTER)(UCHAR BankNumber, PVOID Exception);
typedef NTSTATUS (*PSHED_PI_ENABLE_ERROR_SOURCE)(PVOID PluginContext, PWHEA_ERROR_SOURCE_DESCRIPTOR ErrorSource);
struct _CM_FULL_RESOURCE_DESCRIPTOR {INTERFACE_TYPE InterfaceType;ULONG BusNumber;CM_PARTIAL_RESOURCE_LIST PartialResourceList;};
struct _DOT11_RECV_SENSITIVITY_LIST {_DOT11_RECV_SENSITIVITY_LIST___3E10F19293958D459085543E1DB0EE9F __anonymous0;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_RECV_SENSITIVITY dot11RecvSensitivity[1];};
struct _DRIVE_LAYOUT_INFORMATION_EX {ULONG PartitionStyle;ULONG PartitionCount;union _DRIVE_LAYOUT_INFORMATION_EX___E2E3D8483D032B54611BEB6ADCC46344 u;PARTITION_INFORMATION_EX PartitionEntry[1];};
struct _DXGKARGCB_GETCAPTUREADDRESS {D3DKMT_HANDLE hAllocation;UINT SegmentId;PHYSICAL_ADDRESS PhysicalAddress;};
struct _DXGKARG_UPDATEPAGEDIRECTORY {PVOID pPageDirectory;UINT StartIndex;UINT PageTableCount; DXGK_PDE *PDEArray;};
struct _FILE_LINK_ENTRY_INFORMATION {ULONG NextEntryOffset;LONGLONG ParentFileId;ULONG FileNameLength;WCHAR FileName[1];};
struct _IGMPV3_REPORT_RECORD_HEADER {UINT8 Type;UINT8 AuxillaryDataLength;UINT16 SourceCount;IN_ADDR MulticastAddress;};
struct _IO_REMOVE_LOCK_COMMON_BLOCK {BOOLEAN Removed;BOOLEAN Reserved[3];LONG IoCount;KEVENT RemoveEvent;};
struct _ISCSI_Supported_LB_Policies {ULONGLONG UniqueSessionId;ULONG LoadBalancePolicy;ULONG iSCSI_PathCount;ISCSI_Path iSCSI_Paths[1];};
struct _MODE_TAPE_MEDIA_INFORMATION {MODE_PARAMETER_HEADER ParameterListHeader;MODE_PARAMETER_BLOCK ParameterListBlock;MODE_MEDIUM_PARTITION_PAGE MediumPartPage;};
struct _MSFC_FibrePortHBAAttributes {ULONGLONG UniquePortId;ULONG HBAStatus;MSFC_HBAPortAttributesResults Attributes;};
struct _MSFC_FibrePortHBAStatistics {ULONGLONG UniquePortId;ULONG HBAStatus;MSFC_HBAPortStatistics Statistics;};
struct _MSNdis_TcpOffloadParameters {MSNdis_ObjectHeader Header;UCHAR IPv4Checksum;UCHAR TCPIPv4Checksum;UCHAR UDPIPv4Checksum;UCHAR TCPIPv6Checksum;UCHAR UDPIPv6Checksum;UCHAR LsoV1;UCHAR IPsec;UCHAR LsoV2IPv4;UCHAR LsoV2IPv6;UCHAR TcpConnectionIPv4;UCHAR TcpConnectionIPv6;ULONG Flags;};
struct _NDIS_MSIX_CONFIG_PARAMETERS {NDIS_OBJECT_HEADER Header;NDIS_MSIX_TABLE_OPERATION ConfigOperation;ULONG TableEntry;ULONG MessageNumber;};
struct _NDIS_WWAN_SMS_CONFIGURATION {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_SMS_CONFIGURATION SmsConfiguration;};
struct _NDIS_WWAN_VISIBLE_PROVIDERS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_LIST_HEADER VisibleListHeader;};
struct _REG_RESTORE_KEY_INFORMATION {PVOID Object;HANDLE FileHandle;ULONG Flags;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _STORAGE_OFFLOAD_READ_OUTPUT {ULONG OffloadReadFlags;ULONG Reserved;ULONGLONG LengthProtected;ULONG TokenLength;STORAGE_OFFLOAD_TOKEN Token;};
struct _SYSTEM_SCOPED_POLICY_ID_ACE {ACE_HEADER Header;ACCESS_MASK Mask;ULONG SidStart;};
struct _TDI_REQUEST_SET_INFORMATION {TDI_REQUEST Request;ULONG SetType;PTDI_CONNECTION_INFORMATION RequestConnectionInformation;};
struct _VIDEO_HARDWARE_STATE_HEADER {ULONG Length;UCHAR PortValue[48];ULONG AttribIndexDataState;ULONG BasicSequencerOffset;ULONG BasicCrtContOffset;ULONG BasicGraphContOffset;ULONG BasicAttribContOffset;ULONG BasicDacOffset;ULONG BasicLatchesOffset;ULONG ExtendedSequencerOffset;ULONG ExtendedCrtContOffset;ULONG ExtendedGraphContOffset;ULONG ExtendedAttribContOffset;ULONG ExtendedDacOffset;ULONG ExtendedValidatorStateOffset;ULONG ExtendedMiscDataOffset;ULONG PlaneLength;ULONG Plane1Offset;ULONG Plane2Offset;ULONG Plane3Offset;ULONG Plane4Offset;ULONG VGAStateFlags;ULONG DIBOffset;ULONG DIBBitsPerPixel;ULONG DIBXResolution;ULONG DIBYResolution;ULONG DIBXlatOffset;ULONG DIBXlatLength;ULONG VesaInfoOffset;PVOID FrameBufferData;};
struct _VIDEO_LOAD_FONT_INFORMATION {USHORT WidthInPixels;USHORT HeightInPixels;ULONG FontSize;UCHAR Font[1];};
struct _WWAN_DEVICE_SERVICE_SESSION {GUID DeviceServiceGuid;WWAN_DEVICE_SERVICE_SESSION_STATE State;ULONG uSessionID;};
typedef NTSTATUS (*CHANGER_PERFORM_DIAGNOSTICS)(PDEVICE_OBJECT DeviceObject, PWMI_CHANGER_PROBLEM_DEVICE_ERROR changerDeviceError);
struct DOT11_ASSOCIATION_INFO_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_ASSOCIATION_INFO_EX dot11AssocInfo[1];};
struct DOT11_AUTH_CIPHER_PAIR_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_AUTH_CIPHER_PAIR AuthCipherPairs[1];};
struct DOT11_CIPHER_ALGORITHM_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_CIPHER_ALGORITHM AlgorithmIds[1];};
typedef NTSTATUS  DXGKDDI_UPDATEPAGEDIRECTORY(IN_CONST_HANDLE hDevice, INOUT_PDXGKARG_UPDATEPAGEDIRECTORY pUpdatePageDirectory);
typedef BOOLEAN FAST_IO_QUERY_STANDARD_INFO(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PFILE_STANDARD_INFORMATION Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef void FILTER_OID_REQUEST_COMPLETE(NDIS_HANDLE FilterModuleContext, PNDIS_OID_REQUEST OidRequest, NDIS_STATUS Status);
typedef NDIS_STATUS MINIPORT_DIRECT_OID_REQUEST(NDIS_HANDLE MiniportAdapterContext, PNDIS_OID_REQUEST OidRequest);
typedef NTSTATUS ( *PFN_NT_ROLLBACK_TRANSACTION)(HANDLE TransactionHandle, BOOLEAN Wait);
typedef NTSTATUS (*PFREE_CONTIGUOUS_DMA_BUFFER)(PVOID context, HANDLE Handle);
typedef NDIS_STATUS PROTOCOL_CM_MODIFY_QOS_CALL(NDIS_HANDLE CallMgrVcContext, PCO_CALL_PARAMETERS CallParameters);
typedef NTSTATUS ( *PUSB_BUSIFFN_ENUM_LOG_ENTRY)(PVOID, ULONG, ULONG, ULONG, ULONG);
typedef NTSTATUS ( *PUSB_BUSIFFN_QUERY_BUS_TIME)(PVOID, PULONG);
typedef void (*TAPE_EXTENSION_INIT_ROUTINE)(PVOID MinitapeExtension, PINQUIRYDATA InquiryData, PMODE_CAPABILITIES_PAGE ModeCapabilitiesPage);
typedef BOOLEAN (*TAPE_VERIFY_INQUIRY_ROUTINE)(PINQUIRYDATA InquiryData, PMODE_CAPABILITIES_PAGE ModeCapabilitiesPage);
typedef void  USB_BUSIFFN_SET_DEVICE_FLAG(PVOID BusContext, GUID *DeviceFlagGuid, PVOID ValueData, ULONG ValueLength);
struct _ATAPI_FAILURE_PREDICT_DATA {ULONG Length;UCHAR VendorSpecific[362];UCHAR OfflineCollectionStatus;UCHAR SelfTestStatus;USHORT TotalTime;UCHAR VendorSpecific2;UCHAR OfflineCollectCapability;USHORT SmartCapability;UCHAR ErrorLogCapability;UCHAR VendorSpecific3;UCHAR ShortPollTimeInMinutes;UCHAR ExtendedPollTimeInMinutes;UCHAR Reserved[12];UCHAR VendorSpecific4[125];UCHAR Checksum;};
struct _DXGKARG_SETPOINTERPOSITION {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;INT X;INT Y;DXGK_SETPOINTERPOSITIONFLAGS Flags;};
struct _DXGK_GDIARG_CLEARTYPEBLEND {RECT DstRect;UINT TmpSurfAllocationIndex;UINT GammaSurfAllocationIndex;UINT AlphaSurfAllocationIndex;UINT DstAllocationIndex;INT DstToAlphaOffsetX;INT DstToAlphaOffsetY;UINT Color;UINT Gamma;UINT NumSubRects;RECT *pSubRects;UINT AlphaSurfPitch;UINT Color2;};
struct _DXGK_GDIARG_TRANSPARENTBLT {RECT SrcRect;RECT DstRect;UINT SrcAllocationIndex;UINT DstAllocationIndex;UINT Color;UINT NumSubRects;RECT *pSubRects;D3DKM_TRANSPARENTBLTFLAGS Flags;UINT SrcPitch;};
struct _FILE_DIRECTORY_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;WCHAR FileName[1];};
struct _IPSEC_OFFLOAD_V2_DELETE_SA {NDIS_OBJECT_HEADER Header;PIPSEC_OFFLOAD_V2_DELETE_SA Next;NDIS_HANDLE OffloadHandle;};
struct _KSM_BDA_CAS_CLOSEMMIDIALOG {KSM_NODE NodeMethod;ULONG ulDialogRequest;CHAR cLanguage[12];ULONG ulDialogNumber;ULONG ulReason;};
struct _KSM_BDA_WMDRM_RENEWLICENSE {KSM_NODE NodeMethod;ULONG ulXMRLicenseLength;ULONG ulEntitlementTokenLength;BYTE argbDataBuffer[1];};
struct _MAILSLOT_CREATE_PARAMETERS {ULONG MailslotQuota;ULONG MaximumMessageSize;LARGE_INTEGER ReadTimeout;BOOLEAN TimeoutSpecified;};
struct _MEDIA_SPECIFIC_INFORMATION {UINT NextEntryOffset;NDIS_CLASS_ID ClassId;UINT Size;UCHAR ClassInformation[1];};
struct _MLDV2_REPORT_RECORD_HEADER {UINT8 Type;UINT8 AuxillaryDataLength;UINT16 SourceCount;IN6_ADDR MulticastAddress;};
struct _MODE_MEDIUM_PART_PAGE_PLUS {MODE_PARAMETER_HEADER ParameterListHeader;MODE_PARAMETER_BLOCK ParameterListBlock;MODE_MEDIUM_PARTITION_PAGE MediumPartPage;};
struct _PCI_EXPRESS_ARI_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;PCI_EXPRESS_ARI_CAPABILITY_REGISTER Capability;PCI_EXPRESS_ARI_CONTROL_REGISTER Control;};
struct _SOCKET_SECURITY_QUERY_INFO {SOCKET_SECURITY_PROTOCOL SecurityProtocol;ULONG Flags;UINT64 PeerApplicationAccessTokenHandle;UINT64 PeerMachineAccessTokenHandle;};
struct _STOR_ADAPTER_CONTROL_POWER {STOR_POWER_CONTROL_HEADER Header;STOR_POWER_ACTION PowerAction;STOR_DEVICE_POWER_STATE PowerState;};
struct _STOR_ALLOC_DIAG_EVENT_ARGS {PVOID TraceContext;ULONG UserDataSize;BOOLEAN Allocate;PVOID result;};
struct _STREAM_DATA_INTERSECT_INFO {ULONG StreamNumber;PKSDATARANGE DataRange;PVOID DataFormatBuffer;ULONG SizeOfDataFormatBuffer;};
struct _STREAM_PROPERTY_DESCRIPTOR {PKSPROPERTY Property;ULONG PropertySetID;PVOID PropertyInfo;ULONG PropertyInputSize;ULONG PropertyOutputSize;};
struct _SYSTEM_MANDATORY_LABEL_ACE {ACE_HEADER Header;ACCESS_MASK Mask;ULONG SidStart;};
struct _UNICODE_PREFIX_TABLE_ENTRY {CSHORT NodeTypeCode;CSHORT NameLength;struct _UNICODE_PREFIX_TABLE_ENTRY *NextPrefixTree;struct _UNICODE_PREFIX_TABLE_ENTRY *CaseMatch;RTL_SPLAY_LINKS Links;PUNICODE_STRING Prefix;};
struct DOT11_PHY_STATE_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG uPhyId;BOOLEAN bHardwarePhyState;BOOLEAN bSoftwarePhyState;};
typedef BOOLEAN (*DSM_ADDRESS_TYPE_SUPPORTED)(PVOID DsmContext, ULONG AddressType);
typedef NTSTATUS  DXGKDDI_DESCRIBEALLOCATION(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_DESCRIBEALLOCATION pDescribeAllocation);
typedef NTSTATUS  DXGKDDI_OPENALLOCATIONINFO(IN_CONST_HANDLE hDevice, IN_CONST_PDXGKARG_OPENALLOCATION pOpenAllocation);
typedef NTSTATUS  DXGKDDI_PRESENTDISPLAYONLY(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_PRESENT_DISPLAYONLY pPresentDisplayOnly);
typedef NTSTATUS  DXGKDDI_SETPOINTERPOSITION(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_SETPOINTERPOSITION pSetPointerPosition);
typedef BOOLEAN FAST_IO_MDL_WRITE_COMPLETE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);
typedef NTSTATUS (*PCAM_START_CAPTURE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef BOOLEAN (*PCHECK_FOR_TRAVERSE_ACCESS)(PVOID NotifyContext, PVOID TargetContext, PSECURITY_SUBJECT_CONTEXT SubjectContext);
typedef NTSTATUS (*PCOMPLETE_LOCK_IRP_ROUTINE)(PVOID Context, PIRP Irp);
typedef NTSTATUS (*PFNALLOCATOR_ALLOCATEFRAME)(PFILE_OBJECT FileObject, PVOID *Frame);
typedef BOOLEAN (*PFNKSGENERATEEVENTCALLBACK)(PVOID Context, PKSEVENT_ENTRY EventEntry);
typedef void (*PFNSCO_INDICATION_CALLBACK)(PVOID Context, SCO_INDICATION_CODE Indication, PSCO_INDICATION_PARAMETERS Parameters);
typedef NTSTATUS (*PFNUSBCAMD_SetIsoPipeState)(PVOID DeviceContext, ULONG PipeStateFlags);
typedef NTSTATUS ( *PFN_WSK_SEND_BACKLOG_EVENT)(PVOID SocketContext, SIZE_T IdealBacklogSize);
typedef void (*PLOAD_IMAGE_NOTIFY_ROUTINE)(PUNICODE_STRING FullImageName, HANDLE ProcessId, PIMAGE_INFO ImageInfo);
typedef OB_PREOP_CALLBACK_STATUS (*POB_PRE_OPERATION_CALLBACK)(PVOID RegistrationContext, POB_PRE_OPERATION_INFORMATION OperationInformation);
typedef NTSTATUS (*PPARALLEL_TRYSELECT_DEVICE)(PVOID Context, PARALLEL_1284_COMMAND Command);
typedef NTSTATUS (*PRXCE_IND_CONNECTION_ERROR)(PVOID pRxCeEventContext, PRXCE_VC pVc, NTSTATUS Status);
typedef NTSTATUS (*PUNREGISTER_EVENT_CALLBACK)(PVOID context, UCHAR Tag);
typedef NTSTATUS  USB_BUSIFFN_RESTORE_DEVICE(PVOID BusContext, PUSB_DEVICE_HANDLE OldDeviceHandle, PUSB_DEVICE_HANDLE NewDeviceHandle);
struct _BRB_SCO_UNREGISTER_SERVER {BRB_HEADER Hdr;BTH_ADDR BtAddress;PVOID ServerHandle;};
struct _D3DKMDT_VIDPN_SOURCE_MODE {D3DKMDT_VIDEO_PRESENT_SOURCE_MODE_ID Id;D3DKMDT_VIDPN_SOURCE_MODE_TYPE Type;union _D3DKMDT_VIDPN_SOURCE_MODE___01EDAA54D3F2A7060C07B479CB91114F Format;};
struct _D3DKMDT_VIDPN_TARGET_MODE {D3DKMDT_VIDEO_PRESENT_TARGET_MODE_ID Id;D3DKMDT_VIDEO_SIGNAL_INFO VideoSignalInfo;D3DKMDT_MODE_PREFERENCE Preference;};
struct _DEVICEDUMP_SECTION_HEADER {GUID guidDeviceDataId;UCHAR sOrganizationID[16];ULONG dwFirmwareRevision;UCHAR sModelNumber[32];UCHAR szDeviceManufacturingID[32];ULONG dwFlags;ULONG bRestrictedPrivateDataVersion;ULONG dwFirmwareIssueId;UCHAR szIssueDescriptionString[132];};
struct _DXGKARG_DESTROYALLOCATION {UINT NumAllocations; HANDLE *pAllocationList;HANDLE hResource;DXGK_DESTROYALLOCATIONFLAGS Flags;};
struct _DXGKARG_MOVEPAGEDIRECTORY {PVOID pPageDirectory;PHYSICAL_ADDRESS PhysicalAddress;UINT Segment;UINT SizeInPages;};
struct _DXGK_ALLOCATIONUSAGEINFO1 {union _DXGK_ALLOCATIONUSAGEINFO1___C317DE8A1589ADE636AC0CB74A84EADC Flags;_DXGK_ALLOCATIONUSAGEINFO1___2A9579F41F778F14D996C4BC0A4DF902 __anonymous0;UINT SwizzledFormat;UINT ByteOffset;UINT Width;UINT Height;UINT Pitch;UINT Depth;UINT SlicePitch;};
struct _EISA_MEMORY_CONFIGURATION {EISA_MEMORY_TYPE ConfigurationByte;UCHAR DataSize;USHORT AddressLowWord;UCHAR AddressHighByte;USHORT MemorySize;};
struct _FILE_FULL_DIR_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;ULONG EaSize;WCHAR FileName[1];};
struct _FILE_OBJECTID_INFORMATION {LONGLONG FileReference;UCHAR ObjectId[16];union _FILE_OBJECTID_INFORMATION___A3F92533EDD69EF294B8F85C72EB0335 u;};
struct _FILE_STANDARD_INFORMATION {LARGE_INTEGER AllocationSize;LARGE_INTEGER EndOfFile;ULONG NumberOfLinks;BOOLEAN DeletePending;BOOLEAN Directory;};
struct _FILE_TRACKING_INFORMATION {HANDLE DestinationFile;ULONG ObjectInformationLength;CHAR ObjectInformation[1];};
struct _FSCTL_OFFLOAD_READ_OUTPUT {ULONG Size;ULONG Flags;ULONGLONG TransferLength;UCHAR Token[512];};
struct _FSCTL_OFFLOAD_WRITE_INPUT {ULONG Size;ULONG Flags;ULONGLONG FileOffset;ULONGLONG CopyLength;ULONGLONG TransferOffset;UCHAR Token[512];};
struct _HIDP_LINK_COLLECTION_NODE {USAGE LinkUsage;USAGE LinkUsagePage;USHORT Parent;USHORT NumberOfChildren;USHORT NextSibling;USHORT FirstChild;unsigned int CollectionType : 8;unsigned int IsAlias : 1;unsigned int Reserved : 23;PVOID UserContext;};
struct _IMAGE_ROM_OPTIONAL_HEADER {USHORT Magic;UCHAR MajorLinkerVersion;UCHAR MinorLinkerVersion;ULONG SizeOfCode;ULONG SizeOfInitializedData;ULONG SizeOfUninitializedData;ULONG AddressOfEntryPoint;ULONG BaseOfCode;ULONG BaseOfData;ULONG BaseOfBss;ULONG GprMask;ULONG CprMask[4];ULONG GpValue;};
struct _IO_INTERRUPT_MESSAGE_INFO {KIRQL UnifiedIrql;ULONG MessageCount;IO_INTERRUPT_MESSAGE_INFO_ENTRY MessageInfo[1];};
struct _ISCSI_RedirectSessionInfo {ULONGLONG UniqueSessionId;ULONG TargetPortalGroupTag;ULONG ConnectionCount;ISCSI_RedirectPortalInfo RedirectPortalList[1];};
struct _KSM_BDA_TUNER_TUNEREQUEST {KSMETHOD Method;ULONG ulTuneLength;BYTE argbTuneData[1];};
struct _NDIS_CONFIGURATION_OBJECT {NDIS_OBJECT_HEADER Header;NDIS_HANDLE NdisHandle;ULONG Flags;};
struct _NDIS_TAPI_GET_CALL_STATUS {ULONG ulRequestID;HDRV_CALL hdCall;LINE_CALL_STATUS LineCallStatus;};
struct _NDIS_WMI_IPSEC_OFFLOAD_V1 {struct _NDIS_WMI_IPSEC_OFFLOAD_V1___D8E07F18D96E070BC89A9372D5814F4D Supported;struct _NDIS_WMI_IPSEC_OFFLOAD_V1___04B785E902F554EE82AB5A3EF1E8BED0 IPv4AH;struct _NDIS_WMI_IPSEC_OFFLOAD_V1___37618DCDF7B57DD82418D90E0A50FF53 IPv4ESP;};
struct _NDIS_WWAN_SMS_SEND_STATUS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;ULONG MessageReference;};
struct _PARPORT_REMOVAL_RELATIONS {PDEVICE_OBJECT DeviceObject;ULONG Flags;PUNICODE_STRING DeviceName;};
struct _PARTITION_INFORMATION_GPT {GUID PartitionType;GUID PartitionId;ULONG64 Attributes;WCHAR Name[36];};
struct _PARTITION_INFORMATION_MBR {UCHAR PartitionType;BOOLEAN BootIndicator;BOOLEAN RecognizedPartition;ULONG HiddenSectors;};
struct _PCMCIA_SOCKET_INFORMATION {USHORT Socket;USHORT TupleCrc;UCHAR Manufacturer[64];UCHAR Identifier[64];UCHAR DriverName[32];UCHAR DeviceFunctionId;UCHAR Reserved;UCHAR CardInSocket;UCHAR CardEnabled;ULONG ControllerType;};
struct _SHRINK_VOLUME_INFORMATION {SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;ULONGLONG Flags;LONGLONG NewNumberOfSectors;};
struct _STOR_ALLOC_EL_RECORD_ARGS {PVOID TraceContext;ULONG Size;PSTORAGE_ERRORLOG_PACKET Result;};
struct _TAPE_GET_MEDIA_PARAMETERS {LARGE_INTEGER Capacity;LARGE_INTEGER Remaining;ULONG BlockSize;ULONG PartitionCount;BOOLEAN WriteProtected;};
struct _VP_SCATTER_GATHER_ELEMENT {PHYSICAL_ADDRESS Address;ULONG Length;ULONG_PTR Reserved;};
struct _WMI_TAPE_MEDIA_PARAMETERS {ULONGLONG MaximumCapacity;ULONGLONG AvailableCapacity;ULONG BlockSize;ULONG PartitionCount;BOOLEAN MediaWriteProtected;};
struct _WWAN_DEVICE_SERVICE_ENTRY {GUID DeviceServiceGuid;WWAN_DEVICE_SERVICE_SESSION_CAPABILITY SessionCapability;ULONG uMaxSessionInstances;};
struct ANON_OBJECT_HEADER_BIGOBJ {USHORT Sig1;USHORT Sig2;USHORT Version;USHORT Machine;ULONG TimeDateStamp;CLSID ClassID;ULONG SizeOfData;ULONG Flags;ULONG MetaDataSize;ULONG MetaDataOffset;ULONG NumberOfSections;ULONG PointerToSymbolTable;ULONG NumberOfSymbols;};
struct DOT11_AUTH_ALGORITHM_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_AUTH_ALGORITHM AlgorithmIds[1];};
typedef NTSTATUS  DXGKDDI_BUILDPAGINGBUFFER(IN_CONST_HANDLE hAdapter, IN_PDXGKARG_BUILDPAGINGBUFFER pBuildPagingBuffer);
typedef NTSTATUS  DXGKDDI_CREATEALLOCATION2(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_CREATEALLOCATION2 pCreateAllocation);
typedef NTSTATUS  DXGKDDI_DESCRIBEPAGETABLE(IN_CONST_HANDLE hDevice, INOUT_PDXGKARG_DESCRIBEPAGETABLE pDescribePageTable);
typedef NTSTATUS  DXGKDDI_DESTROYALLOCATION(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_DESTROYALLOCATION pDestroyAllocation);
typedef BOOLEAN DXGKDDI_INTERRUPT_ROUTINE(IN_CONST_PVOID MiniportDeviceContext, IN_ULONG MessageNumber);
typedef NTSTATUS  DXGKDDI_MOVEPAGEDIRECTORY(IN_CONST_HANDLE hContext, INOUT_PDXGKARG_MOVEPAGEDIRECTORY pMovePageDirectory);
typedef NTSTATUS  DXGKDDI_QUERYCURRENTFENCE(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_QUERYCURRENTFENCE pCurrentFence);
typedef NTSTATUS  DXGKDDI_QUERYENGINESTATUS(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_QUERYENGINESTATUS pQueryEngineStatus);
typedef NTSTATUS (*DXGK_BRIGHTNESS_SET_STATE)(PVOID Context, DXGK_BRIGHTNESS_STATE *BrightnessState);
typedef NDIS_STATUS FILTER_DIRECT_OID_REQUEST(NDIS_HANDLE FilterModuleContext, PNDIS_OID_REQUEST OidRequest);
typedef void (*PCAM_NEW_FRAME_ROUTINE_EX)(PVOID DeviceContext, PVOID FrameContext, ULONG StreamNumber, PULONG FrameLength);
typedef NTSTATUS (*PCAM_STOP_CAPTURE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef NTSTATUS PCI_MSIX_MASKUNMASK_ENTRY(PVOID Context, ULONG TableEntry);
typedef LONGLONG ( *PFNKSCLOCK_CORRELATEDTIME)(PFILE_OBJECT FileObject, PLONGLONG SystemTime);
typedef NTSTATUS (*PFNUSBCAMD_SetVideoFormat)(PVOID DeviceContext, PHW_STREAM_REQUEST_BLOCK pSrb);
typedef NTSTATUS ( *PFN_NT_COMMIT_TRANSACTION)(HANDLE TransactionHandle, BOOLEAN Wait);
typedef NTSTATUS (*PPARALLEL_CLEAR_CHIP_MODE)(PVOID ClearChipContext, UCHAR ChipMode);
typedef NTSTATUS (*PPARALLEL_DESELECT_DEVICE)(PVOID Context, PARALLEL_1284_COMMAND Command);
typedef NDIS_STATUS PROTOCOL_CL_INCOMING_CALL(NDIS_HANDLE ProtocolSapContext, NDIS_HANDLE ProtocolVcContext, PCO_CALL_PARAMETERS CallParameters);
typedef void (*PVIDEO_HW_LEGACYRESOURCES)(ULONG VendorId, ULONG DeviceId, PVIDEO_ACCESS_RANGE *LegacyResourceList, PULONG LegacyResourceCount);
typedef VP_STATUS (*PVIDEO_HW_QUERY_INTERFACE)(PVOID HwDeviceExtension, PQUERY_INTERFACE QueryInterface);
struct RETRIEVAL_POINTERS_BUFFER {ULONG ExtentCount;LARGE_INTEGER StartingVcn;struct RETRIEVAL_POINTERS_BUFFER___1BE95960A89AEFDDC7C143B6A7C3CEB0 Extents[1];};
struct _ATM_SERVICE_ADDRESS_LIST {ATM_SERVICE_REGISTRY_TYPE ServiceRegistryType;ULONG NumberOfAddressesAvailable;ULONG NumberOfAddressesReturned;ATM_ADDRESS Address[1];};
struct _BDA_ISDBCAS_RESPONSEDATA {PBDARESULT lResult;ULONG ulRequestID;ULONG ulIsdbStatus;ULONG ulIsdbDataSize;BYTE argbIsdbCommandData[1];};
struct _CM_COMPONENT_INFORMATION {DEVICE_FLAGS Flags;ULONG Version;ULONG Key;KAFFINITY AffinityMask;};
struct _CM_EISA_SLOT_INFORMATION {UCHAR ReturnCode;UCHAR ReturnFlags;UCHAR MajorRevision;UCHAR MinorRevision;USHORT Checksum;UCHAR NumberFunctions;UCHAR FunctionInformation;ULONG CompressedId;};
struct _CM_PARTIAL_RESOURCE_LIST {USHORT Version;USHORT Revision;ULONG Count;CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];};
struct _D3DDDI_KERNELOVERLAYINFO {D3DKMT_HANDLE hAllocation;D3DDDIRECT DstRect;D3DDDIRECT SrcRect;void *pPrivateDriverData;UINT PrivateDriverDataSize;};
struct _DOT11_MANUFACTURING_TEST {DOT11_MANUFACTURING_TEST_TYPE dot11ManufacturingTestType;ULONG uBufferLength;UCHAR ucBuffer[1];};
struct _DOT11_QOS_TX_MEDIUM_TIME {DOT11_MAC_ADDRESS dot11PeerAddress;UCHAR ucQoSPriority;ULONG uMediumTimeAdmited;};
struct _HIDP_EXTENDED_ATTRIBUTES {UCHAR NumGlobalUnknowns;UCHAR Reserved[3];PHIDP_UNKNOWN_TOKEN GlobalUnknowns;ULONG Data[1];};
struct _IO_DRIVER_CREATE_CONTEXT {CSHORT Size;struct _ECP_LIST *ExtraCreateParameter;PVOID DeviceObjectHint;PTXN_PARAMETER_BLOCK TxnParameters;};
struct _KSM_BDA_CAS_CAPTURETOKEN {KSM_NODE NodeMethod;ULONG ulTokenLength;BYTE argbToken[1];};
struct _L2CAP_EXTENDED_FLOW_SPEC {UCHAR Identifier;UCHAR ServiceType;USHORT MaxSDUSize;ULONG SDUInterArrivalTime;ULONG AccessLatency;ULONG FlushTimeout;};
struct _MPIO_ADAPTER_INFORMATION {ULONGLONG PathId;UCHAR BusNumber;UCHAR DeviceNumber;UCHAR FunctionNumber;UCHAR Pad;WCHAR AdapterName[64];};
struct _MSNdis_WmiIPSecOffloadV1 {MSNdis_WmiIPSecOffloadV1_Supported WmiSupported;MSNdis_WmiIPSecOffloadV1_IPv4AH WmiIPv4AH;MSNdis_WmiIPSecOffloadV1_IPv4ESP WmiIPv4ESP;};
struct _MSSmBios_RawSMBiosTables {BOOLEAN Used20CallingMethod;UCHAR SmbiosMajorVersion;UCHAR SmbiosMinorVersion;UCHAR DmiRevision;ULONG Size;UCHAR SMBiosData[1];};
struct _NDISTAPI_CHARACTERISTICS {PVOID RequestProc;GUID Guid;NDIS_WAN_MEDIUM_SUBTYPE MediaType;};
struct _NDIS_IP_OPER_STATUS_INFO {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG NumberofAddressFamiliesReturned;NDIS_IP_OPER_STATUS IpOperationalStatus[32];};
struct _NDIS_STATISTICS_VALUE_EX {NDIS_OID Oid;ULONG DataLength;ULONG Length;UCHAR Data[1];};
struct _NDIS_TAPI_GET_ADDRESS_ID {ULONG ulRequestID;HDRV_LINE hdLine;ULONG ulAddressID;ULONG ulAddressMode;ULONG ulAddressSize;CHAR szAddress[1];};
struct _NDIS_WWAN_HOME_PROVIDER2 {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_PROVIDER2 Provider;};
struct _NET_BUFFER_SHARED_MEMORY {PNET_BUFFER_SHARED_MEMORY NextSharedMemorySegment;ULONG SharedMemoryFlags;NDIS_HANDLE SharedMemoryHandle;ULONG SharedMemoryOffset;ULONG SharedMemoryLength;};
struct _Q2931_CALLMGR_PARAMETERS {ATM_ADDRESS CalledParty;ATM_ADDRESS CallingParty;ULONG InfoElementCount;UCHAR InfoElements[1];};
struct _RDBSS_STARTSTOP_CONTEXT_ {RX_RDBSS_STATE State;ULONG Version;PRX_CONTEXT pStopContext;};
struct _REG_SAVE_KEY_INFORMATION {PVOID Object;HANDLE FileHandle;ULONG Format;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _RemovePersistentLogin_IN {ULONG PortNumber;WCHAR TargetName[224];ISCSI_TargetPortal TargetPortal;};
struct _SECURITY_SUBJECT_CONTEXT {PACCESS_TOKEN ClientToken;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;PACCESS_TOKEN PrimaryToken;PVOID ProcessAuditId;};
struct _SET_PARTITION_ATTRIBUTES {ULONG Version;BOOLEAN Persist;BOOLEAN Reserved1[3];ULONGLONG Attributes;ULONGLONG AttributesMask;};
struct _SRBEX_DATA_BIDIRECTIONAL {SRBEXDATATYPE Type;ULONG Length;ULONG DataInTransferLength;ULONG Reserved1;PVOID DataInBuffer;};
struct _STOR_POFX_ACTIVE_CONTEXT {STOR_POWER_CONTROL_HEADER Header;ULONG ComponentIndex;BOOLEAN Active;};
struct _STOR_SCATTER_GATHER_LIST {ULONG NumberOfElements;ULONG_PTR Reserved;STOR_SCATTER_GATHER_ELEMENT List[];};
struct _TRANSACTION_NOTIFICATION {PVOID TransactionKey;ULONG TransactionNotification;LARGE_INTEGER TmVirtualClock;ULONG ArgumentLength;};
struct _VIDEO_POINTER_ATTRIBUTES {ULONG Flags;ULONG Width;ULONG Height;ULONG WidthInBytes;ULONG Enable;SHORT Column;SHORT Row;UCHAR Pixels[1];};
struct _XVARIABLE_NAME_AND_VALUE {ULONG NextEntryOffset;ULONG ValueOffset;ULONG ValueLength;ULONG Attributes;GUID VendorGuid;WCHAR Name[1];};
typedef NTSTATUS ( *pHalIoWritePartitionTable)(PDEVICE_OBJECT DeviceObject, ULONG SectorSize, ULONG SectorsPerTrack, ULONG NumberOfHeads, struct _DRIVE_LAYOUT_INFORMATION *PartitionBuffer);
struct tag_video_configure_parms {LPDWORD lpdwReturn;LPVOID lpData1;ULONG dwSize1;LPVOID lpData2;ULONG dwSize2;};
struct DOT11_ASSOCIATION_PARAMS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS BSSID;ULONG uAssocRequestIEsOffset;ULONG uAssocRequestIEsLength;};
typedef NTSTATUS  DXGKDDI_CREATEALLOCATION(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_CREATEALLOCATION pCreateAllocation);
typedef NTSTATUS  DXGKDDI_ISSUPPORTEDVIDPN(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_ISSUPPORTEDVIDPN pIsSupportedVidPn);
typedef NTSTATUS  DXGKDDI_QUERYADAPTERINFO(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_QUERYADAPTERINFO pQueryAdapterInfo);
typedef NTSTATUS (*DXGK_BRIGHTNESS_GET_CAPS)(PVOID Context, DXGK_BRIGHTNESS_CAPS *BrightnessCaps);
typedef BOOLEAN FAST_IO_QUERY_BASIC_INFO(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PFILE_BASIC_INFORMATION Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN (*IDE_TRANSFER_MODE_SELECT)(PVOID ControllerExtension, PIDE_TRANSFER_MODE_PARAMETERS TransferModeSelect);
typedef BOOLEAN KMESSAGE_SERVICE_ROUTINE(struct _KINTERRUPT *Interrupt, PVOID ServiceContext, ULONG MessageID);
typedef void MINIPORT_PROCESS_SG_LIST(PDEVICE_OBJECT pDO, PVOID Reserved, PSCATTER_GATHER_LIST pSGL, PVOID Context);
typedef void (*NDK_FN_CREATE_COMPLETION)(PVOID Context, NTSTATUS Status, NDK_OBJECT_HEADER *pNdkObject);
typedef BOOLEAN PCI_IS_DEVICE_PRESENT_EX(PVOID Context, PPCI_DEVICE_PRESENCE_PARAMETERS Parameters);
typedef NTSTATUS ( *PFNDRMADDCONTENTHANDLERS)(ULONG ContentId, PVOID *paHandlers, ULONG NumHandlers);
typedef NTSTATUS ( *PFNDRMCREATECONTENTMIXED)(PULONG paContentId, ULONG cContentId, PULONG pMixedContentId);
typedef void (*PFNKSGRAPHMANAGER_NOTIFY)(PFILE_OBJECT GraphManager, ULONG EventId, PVOID Filter, PVOID Pin, PVOID Frame, ULONG Duration);
typedef NTSTATUS (*PFNKSINITIALIZEALLOCATOR)(PVOID InitialContext, PKSALLOCATOR_FRAMING AllocatorFraming, PVOID *Context);
typedef NTSTATUS ( *PFN_WSK_DISCONNECT_EVENT)(PVOID SocketContext, ULONG Flags);
typedef ULONG ( *PMRX_EXTENDFILE_CALLDOWN)(PRX_CONTEXT RxContext, PLARGE_INTEGER NewFileSize, PLARGE_INTEGER NewAllocationSize);
typedef NTSTATUS (*PPARCHIP_CLEAR_CHIP_MODE)(PVOID ClearChipContext, UCHAR ChipMode);
typedef void (*PPUT_SCATTER_GATHER_LIST)(PDMA_ADAPTER DmaAdapter, PSCATTER_GATHER_LIST ScatterGather, BOOLEAN WriteToDevice);
typedef NDIS_STATUS PROTOCOL_BIND_ADAPTER_EX(NDIS_HANDLE ProtocolDriverContext, NDIS_HANDLE BindContext, PNDIS_BIND_PARAMETERS BindParameters);
typedef void (*PVIDEO_BUGCHECK_CALLBACK)(PVOID HwDeviceExtension, ULONG BugcheckCode, PUCHAR Buffer, ULONG BufferSize);
struct _BRB_SCO_GET_SYSTEM_INFO {BRB_HEADER Hdr;ULONG Features;ULONG MaxChannels;ULONG TransferUnit;USHORT PacketTypes;USHORT DataFormats;ULONG Reserved;};
struct _CM_PNP_BIOS_DEVICE_NODE {USHORT Size;UCHAR Node;ULONG ProductId;UCHAR DeviceType[3];USHORT DeviceAttributes;};
struct _DEBUGGING_DEVICE_IN_USE {KD_NAMESPACE_ENUM NameSpace;ULONG StructureLength;_DEBUGGING_DEVICE_IN_USE___C97601570AE780F8A4008CD204CAAD4C __anonymous0;};
struct _DEVICE_POWER_DESCRIPTOR {ULONG Version;ULONG Size;BOOLEAN DeviceAttentionSupported;BOOLEAN AsynchronousNotificationSupported;BOOLEAN IdlePowerManagementEnabled;BOOLEAN D3ColdEnabled;BOOLEAN D3ColdSupported;BOOLEAN NoVerifyDuringIdlePower;UCHAR Reserved[2];ULONG IdleTimeoutInMS;};
struct _DXGKARGCB_GETHANDLEDATA {D3DKMT_HANDLE hObject;DXGK_HANDLE_TYPE Type;DXGKCB_GETHANDLEDATAFLAGS Flags;};
struct _DXGKARG_SETPOINTERSHAPE {DXGK_POINTERFLAGS Flags;UINT Width;UINT Height;UINT Pitch;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId; void *pPixels;UINT XHot;UINT YHot;};
struct _DXGK_OPENALLOCATIONINFO {D3DKMT_HANDLE hAllocation;void *pPrivateDriverData;UINT PrivateDriverDataSize;HANDLE hDeviceSpecificAllocation;};
struct _FILE_GET_EA_INFORMATION {ULONG NextEntryOffset;UCHAR EaNameLength;CHAR EaName[1];};
struct _FILE_STREAM_INFORMATION {ULONG NextEntryOffset;ULONG StreamNameLength;LARGE_INTEGER StreamSize;LARGE_INTEGER StreamAllocationSize;WCHAR StreamName[1];};
struct _FILTER_FULL_INFORMATION {ULONG NextEntryOffset;ULONG FrameID;ULONG NumberOfInstances;USHORT FilterNameLength;WCHAR FilterNameBuffer[1];};
struct _FS_FILTER_CALLBACK_DATA {ULONG SizeOfFsFilterCallbackData;UCHAR Operation;UCHAR Reserved;struct _DEVICE_OBJECT *DeviceObject;struct _FILE_OBJECT *FileObject;FS_FILTER_PARAMETERS Parameters;};
struct _IDE_SCATTER_GATHER_LIST {ULONG NumberOfElements;ULONG_PTR Reserved;IDE_SCATTER_GATHER_ELEMENT Elements[];};
struct _IRB_RECEIVE_PHY_PACKETS {ULONG Flags;PBUS_PHY_PACKET_NOTIFICATION PhyPacketRoutine;PVOID PhyPacketContext;};
struct _ISCSI_DiscoveredTarget2 {ULONG TargetPortalGroupCount;WCHAR TargetName[224];WCHAR TargetAlias[256];ISCSI_DiscoveredTargetPortalGroup2 TargetDiscoveredPortalGroups[1];};
struct _KSM_BDA_ISDBCAS_REQUEST {KSM_NODE NodeMethod;ULONG ulRequestID;ULONG ulIsdbCommandSize;BYTE argbIsdbCommandData[1];};
struct _KSSTREAM_POINTER_OFFSET {_KSSTREAM_POINTER_OFFSET___4CF715FE59791F9AF0BCA050DECE6C8F __anonymous0;PVOID Alignment;ULONG Count;ULONG Remaining;};
struct _MSMCAEvent_InvalidError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONG Size;UCHAR RawRecord[1];};
struct _MSiSCSI_DiscoveryConfig {BOOLEAN PerformiSNSDiscovery;BOOLEAN PerformSLPDiscovery;BOOLEAN AutomaticiSNSDiscovery;WCHAR InitiatorName[257];ISCSI_IP_Address iSNSServer;};
struct _NDIS_OFFLOAD_PARAMETERS {NDIS_OBJECT_HEADER Header;UCHAR IPv4Checksum;UCHAR TCPIPv4Checksum;UCHAR UDPIPv4Checksum;UCHAR TCPIPv6Checksum;UCHAR UDPIPv6Checksum;UCHAR LsoV1;UCHAR IPsecV1;UCHAR LsoV2IPv4;UCHAR LsoV2IPv6;UCHAR TcpConnectionIPv4;UCHAR TcpConnectionIPv6;ULONG Flags;UCHAR IPsecV2;UCHAR IPsecV2IPv4;};
struct _NDIS_TAPI_GET_CALL_INFO {ULONG ulRequestID;HDRV_CALL hdCall;LINE_CALL_INFO LineCallInfo;};
struct _NDIS_WWAN_AUTH_RESPONSE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_AUTH_RESPONSE AuthResponse;};
struct _NDIS_WWAN_CONTEXT_STATE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_CONTEXT_STATE ContextState;};
struct _NDIS_WWAN_HOME_PROVIDER {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_PROVIDER Provider;};
struct _NET_BUFFER_LIST_CONTEXT {PNET_BUFFER_LIST_CONTEXT Next;USHORT Size;USHORT Offset;UCHAR ContextData[];};
struct _PNP_REPLACE_MEMORY_LIST {ULONG AllocatedCount;ULONG Count;ULONGLONG TotalLength;struct _PNP_REPLACE_MEMORY_LIST___FC773AB9D769E51F1BAEF74ABBA2004B Ranges[1];};
struct _QUERY_FILE_LAYOUT_INPUT {ULONG NumberOfPairs;ULONG Flags;QUERY_FILE_LAYOUT_FILTER_TYPE FilterType;ULONG Reserved;union _QUERY_FILE_LAYOUT_INPUT___BDB76599BE499DA67E74B7A8F967A7F4 Filter;};
struct _SID_AND_ATTRIBUTES_HASH {ULONG SidCount;PSID_AND_ATTRIBUTES SidAttr;SID_HASH_ENTRY Hash[32];};
struct _SMB_TRANSACT_NAMED_PIPE {UCHAR WordCount;USHORT TotalParameterCount;USHORT TotalDataCount;USHORT MaxParameterCount;USHORT MaxDataCount;UCHAR MaxSetupCount;UCHAR Reserved;USHORT Flags;ULONG Timeout;USHORT Reserved1;USHORT ParameterCount;};
struct _STOR_POWER_SETTING_INFO {GUID PowerSettingGuid;PVOID Value;ULONG ValueLength;};
struct _STOR_UNIT_CONTROL_POWER {PSTOR_ADDRESS Address;STOR_POWER_ACTION PowerAction;STOR_DEVICE_POWER_STATE PowerState;};
struct _SetPresharedKeyForId_IN {ULONG PortNumber;ULONGLONG SecurityFlags;UCHAR IdType;ULONG IdSize;ULONG KeySize;UCHAR Id[1];};
struct _SpanningEventEmmMessage {BYTE bCAbroadcasterGroupId;BYTE bMessageControl;WORD wServiceId;WORD wTableIdExtension;BYTE bDeletionStatus;BYTE bDisplayingDuration1;BYTE bDisplayingDuration2;BYTE bDisplayingDuration3;BYTE bDisplayingCycle;BYTE bFormatVersion;BYTE bDisplayPosition;WORD wMessageLength;WCHAR szMessageArea[1];};
struct _TDI_PROVIDER_STATISTICS {ULONG Version;ULONG OpenConnections;ULONG ConnectionsAfterNoRetry;ULONG ConnectionsAfterRetry;ULONG LocalDisconnects;ULONG RemoteDisconnects;ULONG LinkFailures;ULONG AdapterFailures;ULONG SessionTimeouts;ULONG CancelledConnections;ULONG RemoteResourceFailures;ULONG LocalResourceFailures;ULONG NotFoundFailures;ULONG NoListenFailures;ULONG DatagramsSent;LARGE_INTEGER DatagramBytesSent;ULONG DatagramsReceived;LARGE_INTEGER DatagramBytesReceived;ULONG PacketsSent;ULONG PacketsReceived;ULONG DataFramesSent;LARGE_INTEGER DataFrameBytesSent;ULONG DataFramesReceived;LARGE_INTEGER DataFrameBytesReceived;ULONG DataFramesResent;LARGE_INTEGER DataFrameBytesResent;ULONG DataFramesRejected;LARGE_INTEGER DataFrameBytesRejected;ULONG ResponseTimerExpirations;ULONG AckTimerExpirations;ULONG MaximumSendWindow;ULONG AverageSendWindow;ULONG PiggybackAckQueued;ULONG PiggybackAckTimeouts;LARGE_INTEGER WastedPacketSpace;ULONG WastedSpacePackets;ULONG NumberOfResources;TDI_PROVIDER_RESOURCE_STATS ResourceStats[1];};
struct _USBD_DEVICE_INFORMATION {ULONG OffsetNext;PVOID UsbdDeviceHandle;USB_DEVICE_DESCRIPTOR DeviceDescriptor;};
struct _VIDEO_CURSOR_ATTRIBUTES {USHORT Width;USHORT Height;SHORT Column;SHORT Row;UCHAR Rate;UCHAR Enable;};
struct _WHEA_X86_REGISTER_STATE {ULONG Eax;ULONG Ebx;ULONG Ecx;ULONG Edx;ULONG Esi;ULONG Edi;ULONG Ebp;ULONG Esp;USHORT Cs;USHORT Ds;USHORT Ss;USHORT Es;USHORT Fs;USHORT Gs;ULONG Eflags;ULONG Eip;ULONG Cr0;ULONG Cr1;ULONG Cr2;ULONG Cr3;ULONG Cr4;ULONGLONG Gdtr;ULONGLONG Idtr;USHORT Ldtr;USHORT Tr;};
struct _WWAN_SET_REGISTER_STATE {WCHAR ProviderId[7];WWAN_REGISTER_ACTION RegisterAction;ULONG WwanDataClass;};
struct mpeglayer3waveformat_tag {WAVEFORMATEX wfx;WORD wID;DWORD fdwFlags;WORD nBlockSize;WORD nFramesPerBlock;WORD nCodecDelay;};
typedef NTSTATUS (*pHalMirrorPhysicalMemory)(PHYSICAL_ADDRESS PhysicalAddress, LARGE_INTEGER NumberOfBytes);
struct truespeechwaveformat_tag {WAVEFORMATEX wfx;WORD wRevision;WORD nSamplesPerBlock;BYTE abReserved[28];};
typedef NTSTATUS (*CHANGER_COMMAND_ROUTINE)(PDEVICE_OBJECT DeviceObject, PIRP Irp);
typedef NTSTATUS  DXGKDDI_CLOSEALLOCATION(IN_CONST_HANDLE hDevice, IN_CONST_PDXGKARG_CLOSEALLOCATION pCloseAllocation);
typedef NTSTATUS DXGKDDI_QUERY_INTERFACE(IN_CONST_PVOID MiniportDeviceContext, IN_PQUERY_INTERFACE QueryInterface);
typedef NTSTATUS  DXGKDDI_SETPOINTERSHAPE(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_SETPOINTERSHAPE pSetPointerShape);
typedef NTSTATUS  DXGKDDI_UPDATEPAGETABLE(IN_CONST_HANDLE hDevice, INOUT_PDXGKARG_UPDATEPAGETABLE pUpdatePageTable);
typedef ULONG GET_VIRTUAL_DEVICE_DATA(PVOID Context, USHORT VirtualFunction, PVOID Buffer, ULONG Offset, ULONG Length);
struct IPMultihopRouteEntry_V1 {ulong imre_numnexthops;IPRouteEntry imre_routeinfo;IPRouteNextHopEntry imre_morenexthops[1];};
struct IPMultihopRouteEntry_V2 {ulong imre_numnexthops;ulong imre_flags;IPRouteEntry imre_routeinfo;IPRouteNextHopEntry imre_morenexthops[1];};
typedef NDIS_STATUS MINIPORT_CO_ACTIVATE_VC(NDIS_HANDLE MiniportVcContext, PCO_CALL_PARAMETERS CallParameters);
typedef NDIS_STATUS MINIPORT_CO_OID_REQUEST(NDIS_HANDLE MiniportAdapterContext, NDIS_HANDLE MiniportVcContext, PNDIS_OID_REQUEST NdisRequest);
typedef NTSTATUS (*PCAM_INITIALIZE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef NTSTATUS (*PCANCEL_MAPPED_TRANSFER)(PDMA_ADAPTER DmaAdapter, PVOID DmaTransferContext);
typedef NTSTATUS PCI_MSIX_GET_TABLE_SIZE(PVOID Context, PULONG TableSize);
typedef NTSTATUS (*PGET_DEVICE_INFORMATION)(PVOID context, PHDAUDIO_DEVICE_INFORMATION DeviceInformation);
typedef NTSTATUS (*PPARALLEL_SET_CHIP_MODE)(PVOID SetChipContext, UCHAR ChipMode);
typedef NTSTATUS (*PPORT_PHYS_ADDR_ROUTINE)(PVOID Context, PIRB Irb);
typedef NDIS_STATUS PROTOCOL_CO_OID_REQUEST(NDIS_HANDLE ProtocolAfContext, NDIS_HANDLE ProtocolVcContext, NDIS_HANDLE ProtocolPartyContext, PNDIS_OID_REQUEST OidRequest);
typedef NTSTATUS  RTL_HEAP_COMMIT_ROUTINE(PVOID Base, PVOID *CommitAddress, PSIZE_T CommitSize);
typedef ULONG SET_VIRTUAL_DEVICE_DATA(PVOID Context, USHORT VirtualFunction, PVOID Buffer, ULONG Offset, ULONG Length);
struct _BDA_WMDRM_RENEWLICENSE {PBDARESULT lResult;ULONG ulDescrambleStatus;ULONG ulXmrLicenseOutputLength;BYTE argbXmrLicenceOutputBuffer[1];};
struct _BRB_L2CA_CLOSE_CHANNEL {BRB_HEADER Hdr;BTH_ADDR BtAddress;L2CAP_CHANNEL_HANDLE ChannelHandle;};
struct _CLFS_MGMT_NOTIFICATION {CLFS_MGMT_NOTIFICATION_TYPE Notification;CLFS_LSN Lsn;USHORT LogIsPinned;};
struct _DXGKARG_COLLECTDBGINFO {UINT Reason;void *pBuffer;SIZE_T BufferSize;DXGKARG_COLLECTDBGINFO_EXT *pExtension;};
struct _DXGK_GDIARG_STRETCHBLT {RECT SrcRect;RECT DstRect;UINT DstAllocationIndex;UINT SrcAllocationIndex;UINT NumSubRects;RECT *pSubRects;_DXGK_GDIARG_STRETCHBLT___72D9C1E774232B238E507145974EF112 __anonymous0;UINT SrcPitch;};
struct _FILE_LAYOUT_INFO_ENTRY {struct _FILE_LAYOUT_INFO_ENTRY___CB15603BAC5FC127CE80876F979A76A8 BasicInformation;ULONG OwnerId;ULONG SecurityId;USN Usn;};
struct _FILE_LAYOUT_NAME_ENTRY {ULONG NextNameOffset;ULONG Flags;ULONGLONG ParentFileReferenceNumber;ULONG FileNameLength;ULONG Reserved;WCHAR FileName[1];};
struct _FILE_QUOTA_INFORMATION {ULONG NextEntryOffset;ULONG SidLength;LARGE_INTEGER ChangeTime;LARGE_INTEGER QuotaUsed;LARGE_INTEGER QuotaThreshold;LARGE_INTEGER QuotaLimit;SID Sid;};
struct _FSRTL_AUXILIARY_BUFFER {PVOID Buffer;ULONG Length;ULONG Flags;PMDL Mdl;};
struct _GET_CHANGER_PARAMETERS {ULONG Size;USHORT NumberTransportElements;USHORT NumberStorageElements;USHORT NumberCleanerSlots;USHORT NumberIEElements;USHORT NumberDataTransferElements;USHORT NumberOfDoors;USHORT FirstSlotNumber;USHORT FirstDriveNumber;USHORT FirstTransportNumber;USHORT FirstIEPortNumber;USHORT FirstCleanerSlotAddress;USHORT MagazineSize;ULONG DriveCleanTimeout;ULONG Features0;ULONG Features1;UCHAR MoveFromTransport;UCHAR MoveFromSlot;UCHAR MoveFromIePort;UCHAR MoveFromDrive;UCHAR ExchangeFromTransport;UCHAR ExchangeFromSlot;UCHAR ExchangeFromIePort;UCHAR ExchangeFromDrive;UCHAR LockUnlockCapabilities;UCHAR PositionCapabilities;UCHAR Reserved1[2];ULONG Reserved2[2];};
struct _ISCSI_DiscoveredTarget {ULONG TargetPortalGroupCount;WCHAR TargetName[224];WCHAR TargetAlias[256];ISCSI_DiscoveredTargetPortalGroup TargetDiscoveredPortalGroups[1];};
struct _LEGACY_BUS_INFORMATION {GUID BusTypeGuid;INTERFACE_TYPE LegacyBusType;ULONG BusNumber;};
struct _LOCAL_X2APIC_NMISOURCE {UCHAR Type;UCHAR Length;USHORT Flags;ULONG ProcessorID;UCHAR LINTIN;UCHAR Reserved[3];};
struct _MPIO_PATH_HEALTH_CLASS {ULONGLONG PathId;ULONGLONG NumberReads;ULONGLONG NumberWrites;ULONGLONG NumberBytesRead;ULONGLONG NumberBytesWritten;ULONGLONG NumberRetries;ULONGLONG NumberIoErrors;ULONGLONG CreateTime;ULONGLONG FailTime;BOOLEAN PathOffline;UCHAR NumberReadsWrap;UCHAR NumberWritesWrap;UCHAR NumberBytesReadWrap;UCHAR NumberBytesWrittenWrap;UCHAR OutstandingRequests;UCHAR Pad[2];};
struct _MRX_NORMAL_NODE_HEADER {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;ULONG NodeReferenceCount;};
struct _MSMCAEvent_SMBIOSError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;UCHAR SMBIOS_EVENT_TYPE;ULONG Size;UCHAR RawRecord[1];};
struct _MSNdis_WmiMethodHeader {MSNdis_ObjectHeader Header;ULONG PortNumber;ULONGLONG NetLuid;ULONGLONG RequestId;ULONG Timeout;ULONG Padding;};
struct _MSiSCSI_TargetMappings {ULONGLONG UniqueAdapterId;ULONG TargetMappingCount;ULONG Reserved;ISCSI_TargetMapping TargetMappings[1];};
struct _NDIS_PROCESSOR_INFO_EX {PROCESSOR_NUMBER ProcNum;ULONG SocketId;ULONG CoreId;ULONG HyperThreadId;USHORT NodeId;USHORT NodeDistance;};
struct _NDIS_WWAN_SIGNAL_STATE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_SIGNAL_STATE SignalState;};
struct _NUMA_NODE_RELATIONSHIP {ULONG NodeNumber;UCHAR Reserved[20];GROUP_AFFINITY GroupMask;};
struct _NV_SEP_CACHE_PARAMETER {ULONG Version;ULONG Size;union _NV_SEP_CACHE_PARAMETER___D6AAA6E512359887CA6B2F20090C3374 Flags;UCHAR WriteCacheType;UCHAR WriteCacheTypeEffective;UCHAR ParameterReserve1[3];};
struct _PROCESSOR_POWER_POLICY {ULONG Revision;UCHAR DynamicThrottle;UCHAR Spare[3];unsigned int DisableCStates : 1;unsigned int Reserved : 31;ULONG PolicyCount;PROCESSOR_POWER_POLICY_INFO Policy[3];};
struct _PROCESSOR_RELATIONSHIP {UCHAR Flags;UCHAR Reserved[21];USHORT GroupCount;GROUP_AFFINITY GroupMask[1];};
struct _RX_FCBTRACKER_CALLINFO {ULONG AcquireRelease;USHORT SavedTrackerValue;USHORT LineNumber;PSZ FileName;ULONG Flags;};
struct _RX_WORK_DISPATCH_ITEM_ {RX_WORK_QUEUE_ITEM WorkQueueItem;PRX_WORKERTHREAD_ROUTINE DispatchRoutine;PVOID DispatchRoutineParameter;};
struct _SCATTER_GATHER_ELEMENT {PHYSICAL_ADDRESS Address;ULONG Length;ULONG_PTR Reserved;};
struct _SE_ADT_PARAMETER_ARRAY {ULONG CategoryId;ULONG AuditId;ULONG ParameterCount;ULONG Length;USHORT FlatSubCategoryId;USHORT Type;ULONG Flags;SE_ADT_PARAMETER_ARRAY_ENTRY Parameters[32];};
struct _SE_IMPERSONATION_STATE {PACCESS_TOKEN Token;BOOLEAN CopyOnOpen;BOOLEAN EffectiveOnly;SECURITY_IMPERSONATION_LEVEL Level;};
struct _STORAGE_PROPERTY_QUERY {STORAGE_PROPERTY_ID PropertyId;STORAGE_QUERY_TYPE QueryType;UCHAR AdditionalParameters[1];};
struct _STORAGE_TRACE_DPS_INFO {GUID EventId;ULONG Flags;ULONG Status;ULONG NumContexts;PVOID Contexts;ULONG UserDataSize;};
struct _USB_PIPE_INFORMATION_0 {USB_ENDPOINT_DESCRIPTOR EndpointDescriptor;UCHAR ED_Pad[1];ULONG ScheduleOffset;};
struct _VP_SCATTER_GATHER_LIST {ULONG NumberOfElements;ULONG_PTR Reserved;VP_SCATTER_GATHER_ELEMENT Elements[];};
struct _WWAN_SMS_CONFIGURATION {CHAR ScAddress[16];WWAN_SMS_FORMAT SmsFormat;ULONG ulMaxMessageIndex;};
struct tagKS_DATAFORMAT_DV_AVC {KSDATAFORMAT DataFormat;DVINFO DVVideoInfo;AVCCONNECTINFO ConnectInfo;};
typedef SECURITY_STATUS ( *APPLY_CONTROL_TOKEN_FN)(PCtxtHandle, PSecBufferDesc);
typedef SECURITY_STATUS ( *COMPLETE_AUTH_TOKEN_FN)(PCtxtHandle, PSecBufferDesc);
struct DOT11_MAC_ADDRESS_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_MAC_ADDRESS MacAddrs[1];};
struct DOT11_VWIFI_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG uTotalNumOfEntries;DOT11_VWIFI_COMBINATION Combinations[1];};
typedef void (*DSM_COMPLETION_ROUTINE)(PVOID DsmId, PIRP Irp, PSCSI_REQUEST_BLOCK Srb, PVOID DsmContext);
typedef NTSTATUS ( *DXGKCB_AGP_SET_COMMAND)(HANDLE Context, ULONG Command);
typedef NTSTATUS  DXGKDDI_COLLECTDBGINFO(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_COLLECTDBGINFO pCollectDbgInfo);
typedef NTSTATUS  DXGKDDI_PREEMPTCOMMAND(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_PREEMPTCOMMAND pPreemptCommand);
typedef NTSTATUS ( *PFNDRMGETCONTENTRIGHTS)(ULONG ContentId, PDRMRIGHTS DrmRights);
typedef LONGLONG ( *PFNKSPINCORRELATEDTIME)(PKSPIN Pin, PLONGLONG SystemTime);
typedef NTSTATUS (*PFNKSPINSETDEVICESTATE)(PKSPIN Pin, KSSTATE ToState, KSSTATE FromState);
typedef NTSTATUS ( *PMRX_GET_CONNECTION_ID)(PRX_CONTEXT RxContext, PRX_CONNECTION_ID UniqueId);
typedef NTSTATUS (*PPARCHIP_SET_CHIP_MODE)(PVOID SetChipContext, UCHAR ChipMode);
typedef NTSTATUS  PROCESSOR_IDLE_HANDLER(ULONG_PTR Context, PPROCESSOR_IDLE_TIMES IdleTimes);
typedef NDIS_STATUS PROTOCOL_NET_PNP_EVENT(NDIS_HANDLE ProtocolBindingContext, PNET_PNP_EVENT_NOTIFICATION NetPnPEventNotification);
typedef NTSTATUS (*PTDI_IND_SEND_POSSIBLE)(PVOID TdiEventContext, PVOID ConnectionContext, ULONG BytesAvailable);
typedef NTSTATUS  USB_BUSIFFN_TEST_POINT(PVOID BusContext, PVOID DeviceHandle, ULONG Opcode, PVOID TestData);
struct _BDA_WMDRM_KEYINFOLIST {PBDARESULT lResult;ULONG ulKeyuuidBufferLen;GUID argKeyuuidBuffer[1];};
struct _BRB_SCO_CLOSE_CHANNEL {BRB_HEADER Hdr;BTH_ADDR BtAddress;SCO_CHANNEL_HANDLE ChannelHandle;};
struct _CM_PCCARD_DEVICE_DATA {UCHAR Flags;UCHAR ErrorCode;USHORT Reserved;ULONG BusData;ULONG DeviceId;ULONG LegacyBaseAddress;UCHAR IRQMap[16];};
struct _DISK_PERFORMANCE_INFO {ULONG Version;DISK_PERFORMANCE_TYPE Type;LARGE_INTEGER QueryTime;LARGE_INTEGER BytesRead;LARGE_INTEGER BytesWritten;LARGE_INTEGER ReadTime;LARGE_INTEGER WriteTime;LARGE_INTEGER FlushTime;LARGE_INTEGER IdleTime;ULONG ReadCount;ULONG WriteCount;ULONG FlushCount;ULONG QueueDepth;ULONG SplitCount;};
struct _DOT11_AP_JOIN_REQUEST {ULONG uJoinFailureTimeout;DOT11_RATE_SET OperationalRateSet;ULONG uChCenterFrequency;DOT11_BSS_DESCRIPTION dot11BSSDescription;};
struct _DXGKARG_CREATEOVERLAY {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;DXGK_OVERLAYINFO OverlayInfo;HANDLE hOverlay;};
struct _DXGKMDT_OPM_OUTPUT_ID {DXGKMDT_OPM_RANDOM_NUMBER rnRandomNumber;ULONG ulStatusFlags;UINT64 OutputId;};
struct _DXGK_CHILD_DESCRIPTOR {DXGK_CHILD_DEVICE_TYPE ChildDeviceType;DXGK_CHILD_CAPABILITIES ChildCapabilities;ULONG AcpiUid;ULONG ChildUid;};
struct _DXGK_GDIARG_COLORFILL {RECT DstRect;UINT DstAllocationIndex;UINT NumSubRects;RECT *pSubRects;UINT Color;WORD Rop;WORD Rop3;};
struct _FILE_OBJECT_EXTENSION {PFILE_OBJECT FileObject;PDEVICE_OBJECT DeviceObject;ULONG LockCount;ULONG McnDisableCount;};
struct _FLT_VOLUME_PROPERTIES {ULONG DeviceType;ULONG DeviceCharacteristics;ULONG DeviceObjectFlags;ULONG AlignmentRequirement;USHORT SectorSize;USHORT Reserved0;UNICODE_STRING FileSystemDriverName;UNICODE_STRING FileSystemDeviceName;UNICODE_STRING RealDeviceName;};
struct _IPV4_TIMESTAMP_OPTION {_IPV4_OPTION_HEADER __anonymous0;UINT8 Pointer;union {UINT8 FlagsOverflow;_IPV4_TIMESTAMP_OPTION___2E193DEAAB8F2BBFABCD47F30D0D12BC___E0327DE6E6EA79E8CEF3B61154C13EF9 __anonymous1;};};
struct _IdleStateAccountingEx {ULONGLONG TotalTime;ULONG IdleTransitions;ULONG FailedTransitions;ULONG InvalidBucketIndex;ULONG MinTimeUs;ULONG MaxTimeUs;IdleStateBucketEx IdleTimeBuckets[16];};
struct _KEY_BASIC_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG NameLength;WCHAR Name[1];};
struct _LBA_STATUS_DESCRIPTOR {ULONGLONG StartingLBA;ULONG LogicalBlockCount;unsigned char ProvisioningStatus : 4;unsigned char Reserved1 : 4;UCHAR Reserved2[3];};
struct _MSNdis_LinkParameters {MSNdis_ObjectHeader Header;ULONG MediaDuplexState;ULONGLONG XmitLinkSpeed;ULONGLONG RcvLinkSpeed;ULONG PauseFunctions;ULONG AutoNegotiationFlags;};
struct _MSNdis_StatisticsInfo {MSNdis_ObjectHeader Header;ULONG SupportedStatistics;ULONGLONG ifInDiscards;ULONGLONG ifInErrors;ULONGLONG ifHCInOctets;ULONGLONG ifHCInUcastPkts;ULONGLONG ifHCInMulticastPkts;ULONGLONG ifHCInBroadcastPkts;ULONGLONG ifHCOutOctets;ULONGLONG ifHCOutUcastPkts;ULONGLONG ifHCOutMulticastPkts;ULONGLONG ifHCOutBroadcastPkts;ULONGLONG ifOutErrors;ULONGLONG ifOutDiscards;ULONGLONG ifHCInUcastOctets;ULONGLONG ifHCInMulticastOctets;ULONGLONG ifHCInBroadcastOctets;ULONGLONG ifHCOutUcastOctets;ULONGLONG ifHCOutMulticastOctets;ULONGLONG ifHCOutBroadcastOctets;};
struct _MSVerifierIrpLogEntry {ULONG Count;UCHAR Major;UCHAR Minor;UCHAR Flags;UCHAR Control;ULONGLONG Arg1;ULONGLONG Arg2;ULONGLONG Arg3;ULONGLONG Arg4;};
struct _MSiSCSI_QueryLBPolicy {ULONGLONG UniqueAdapterId;ULONG Reserved;ULONG SessionCount;ISCSI_Supported_LB_Policies LoadBalancePolicies[1];};
struct _NDIS_IPSEC_OFFLOAD_V1 {struct _NDIS_IPSEC_OFFLOAD_V1___D8E07F18D96E070BC89A9372D5814F4D Supported;struct _NDIS_IPSEC_OFFLOAD_V1___4E67E90746235B7144A86866915CDA2D IPv4AH;struct _NDIS_IPSEC_OFFLOAD_V1___2B28F3C4BF5C05EE63DD2874B5A956A7 IPv4ESP;};
struct _NDIS_STATISTICS_VALUE {NDIS_OID Oid;ULONG DataLength;UCHAR Data[1];};
struct _NDIS_WWAN_DEVICE_CAPS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_DEVICE_CAPS DeviceCaps;};
struct _NDIS_WWAN_RADIO_STATE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_RADIO_STATE RadioState;};
struct _NDIS_WWAN_SMS_RECEIVE {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_LIST_HEADER SmsListHeader;};
struct _NVCACHE_REQUEST_BLOCK {ULONG NRBSize;USHORT Function;ULONG NRBFlags;ULONG NRBStatus;ULONG Count;ULONGLONG LBA;ULONG DataBufSize;ULONG NVCacheStatus;ULONG NVCacheSubStatus;};
struct _PCI_FIRMWARE_BUS_CAPS {USHORT Type;USHORT Length;struct _PCI_FIRMWARE_BUS_CAPS___F717B6ED75AD40500CFEB48B9575FAA8 s;UCHAR CurrentSpeedAndMode;UCHAR SupportedSpeedsAndModesLowByte;UCHAR SupportedSpeedsAndModesHighByte;UCHAR Voltage;UCHAR Reserved2[7];};
struct _PROCESSOR_IDLE_STATES {ULONG Size;ULONG Revision;ULONG Count;ULONG Type;KAFFINITY TargetProcessors;PROCESSOR_IDLE_STATE State[1];};
struct _SET_LOCAL_HOST_PROPS3 {ULONG fulFlags;HANDLE hCromData;ULONG nLength;PMDL Mdl;};
struct _SMB_TRANSACT_MAILSLOT {UCHAR WordCount;USHORT TotalParameterCount;USHORT TotalDataCount;USHORT MaxParameterCount;USHORT MaxDataCount;UCHAR MaxSetupCount;UCHAR Reserved;USHORT Flags;ULONG Timeout;USHORT Reserved1;USHORT ParameterCount;USHORT ParameterOffset;USHORT DataCount;USHORT DataOffset;UCHAR SetupWordCount;UCHAR Reserved2;USHORT Opcode;USHORT Priority;USHORT Class;USHORT ByteCount;UCHAR Buffer[1];};
struct _STREAM_TIME_REFERENCE {STREAM_TIMESTAMP CurrentOnboardClockValue;LARGE_INTEGER OnboardClockFrequency;LARGE_INTEGER CurrentSystemTime;ULONG Reserved[2];};
struct _TDI_ADDRESS_IP6_WIN2K {USHORT sin6_port;ULONG sin6_flowinfo;UCHAR sin6_addr[16];};
struct _TDI_NCPA_BINDING_INFO {PUNICODE_STRING TdiClientName;PUNICODE_STRING TdiProviderName;PUNICODE_STRING BindList;PVOID ReconfigBuffer;unsigned int ReconfigBufferSize;TDI_PNP_OPCODE PnpOpcode;};
struct _TDI_REQUEST_SET_EVENT {TDI_REQUEST Request;LONG EventType;PVOID EventHandler;PVOID EventContext;};
struct _WHEA_XPF_CONTEXT_INFO {USHORT RegisterContextType;USHORT RegisterDataSize;ULONG MSRAddress;ULONGLONG MmRegisterAddress;};
typedef void (*pKdUnmapVirtualAddress)(PVOID VirtualAddress, ULONG NumberPages, BOOLEAN FlushCurrentTLB);
struct tagKS_BITMAPINFOHEADER {DWORD biSize;LONG biWidth;LONG biHeight;WORD biPlanes;WORD biBitCount;DWORD biCompression;DWORD biSizeImage;LONG biXPelsPerMeter;LONG biYPelsPerMeter;DWORD biClrUsed;DWORD biClrImportant;};
struct tagKS_DATARANGE_DV_AVC {KSDATARANGE DataRange;DVINFO DVVideoInfo;AVCPRECONNECTINFO ConnectInfo;};
struct threadlocaleinfostruct {int refcount;unsigned int lc_codepage;unsigned int lc_collate_cp;unsigned int lc_handle[6];LC_ID lc_id[6];struct threadlocaleinfostruct___F0551D0CB09E7A078CAEF7CAC43D74C7 lc_category[6];int lc_clike;int mb_cur_max;int *lconv_intl_refcount;int *lconv_num_refcount;int *lconv_mon_refcount;struct lconv *lconv;int *ctype1_refcount;unsigned short *ctype1; unsigned short *pctype; unsigned char *pclmap; unsigned char *pcumap;struct __lc_time_data *lc_time_curr;};
struct wmaudio2waveformat_tag {WAVEFORMATEX wfx;DWORD dwSamplesPerBlock;WORD wEncodeOptions;DWORD dwSuperBlockAlign;};
struct wmaudio3waveformat_tag {WAVEFORMATEX wfx;WORD wValidBitsPerSample;DWORD dwChannelMask;DWORD dwReserved1;DWORD dwReserved2;WORD wEncodeOptions;WORD wReserved3;};
struct ANON_OBJECT_HEADER_V2 {USHORT Sig1;USHORT Sig2;USHORT Version;USHORT Machine;ULONG TimeDateStamp;CLSID ClassID;ULONG SizeOfData;ULONG Flags;ULONG MetaDataSize;ULONG MetaDataOffset;};
typedef NTSTATUS  DXGKDDI_CANCELCOMMAND(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_CANCELCOMMAND pCancelCommand);
typedef NTSTATUS  DXGKDDI_CREATECONTEXT(IN_CONST_HANDLE hDevice, INOUT_PDXGKARG_CREATECONTEXT pCreateContext);
typedef NTSTATUS  DXGKDDI_CREATEOVERLAY(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_CREATEOVERLAY pCreateOverlay);
typedef NTSTATUS  DXGKDDI_SUBMITCOMMAND(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_SUBMITCOMMAND pSubmitCommand);
typedef NTSTATUS  DXGKDDI_UPDATEOVERLAY(IN_CONST_HANDLE hOverlay, IN_CONST_PDXGKARG_UPDATEOVERLAY pUpdateOverlay);
struct IPortClsEtwHelperVtbl {NTSTATUS ( *MiniportWriteEtwEvent)(EPcMiniportEngineEvent miniportEventType, ULONGLONG pvData1, ULONGLONG pvData2, ULONGLONG ulData3, ULONGLONG ulData4);};
typedef NTSTATUS (*KoCreateObjectHandler)( IID * ClassId, IUnknown *UnkOuter,  IID * InterfaceId, PVOID *Interface);
typedef NTSTATUS LLDP_QUERY_STATISTICS(HMSAP MsapHandle, PLLDP_STATISTICS Statistics);
typedef NDIS_STATUS MINIPORT_CO_CREATE_VC(NDIS_HANDLE MiniportAdapterContext, NDIS_HANDLE NdisVcHandle, PNDIS_HANDLE MiniportVcContext);
typedef ULONG (*NDK_FN_GET_CQ_RESULTS)(NDK_CQ *pNdkCq, NDK_RESULT  *    Results, ULONG nResults);
typedef NTSTATUS (*PAGP_CHECK_GUARD_PAGE)(PVOID AgpContext, ULONG Flags, ULONG ULongsToCheck);
typedef NTSTATUS (*PCLASS_DEVICE_CONTROL)(PDEVICE_OBJECT DeviceObject, PIRP Irp);
typedef NTSTATUS (*PCLASS_SHUTDOWN_FLUSH)(PDEVICE_OBJECT DeviceObject, PIRP Irp);
typedef NTSTATUS (*PFNKSCONTEXT_DISPATCH)(PVOID Context, PIRP Irp);
typedef NTSTATUS (*PGET_DMA_ADAPTER_INFO)(PDMA_ADAPTER DmaAdapter, PDMA_ADAPTER_INFO AdapterInfo);
typedef NDIS_STATUS PROTOCOL_CO_CREATE_VC(NDIS_HANDLE ProtocolAfContext, NDIS_HANDLE NdisVcHandle, PNDIS_HANDLE ProtocolVcContext);
typedef NTSTATUS (*PSHED_PI_INJECT_ERROR)(PVOID PluginContext, ULONGLONG ErrorType, ULONGLONG Parameter1, ULONGLONG Parameter2, ULONGLONG Parameter3, ULONGLONG Parameter4);
typedef NTSTATUS ( *PTM_PROPAGATE_ROUTINE)(PVOID PropagationCookie, PVOID CallbackData, NTSTATUS PropagationStatus, GUID TransactionGuid);
typedef NTSTATUS (*TDI_REGISTER_CALLBACK)(PUNICODE_STRING DeviceName, HANDLE *TdiHandle);
struct _BDA_TUNER_TUNERSTATE {PBDARESULT lResult;ULONG ulTuneLength;BYTE argbTuneData[1];};
struct _BTH_L2CAP_EVENT_INFO {BTH_ADDR bthAddress;USHORT psm;UCHAR connected;UCHAR initiated;};
struct _CIP_DATA_FORMAT_VER2 {UCHAR FMT;UCHAR FDF_hi;UCHAR FDF_mid;UCHAR FDF_lo;BOOLEAN bHeader;UCHAR Padding;UCHAR BlockSize;UCHAR Fraction;ULONG BlockPeriod;};
struct _CIP_DATA_FORMAT_VER3 {UCHAR FMT;UCHAR FDF_hi;UCHAR FDF_mid;UCHAR FDF_lo;BOOLEAN bHeader;UCHAR Padding;UCHAR BlockSize;UCHAR Fraction;ULONG BlockPeriod;ULONG BlockPeriodRemainder;ULONG BlocksPerPacket;};
struct _COMPRESSED_DATA_INFO {USHORT CompressionFormatAndEngine;UCHAR CompressionUnitShift;UCHAR ChunkShift;UCHAR ClusterShift;UCHAR Reserved;USHORT NumberOfChunks;ULONG CompressedChunkSizes[1];};
struct _DOT11_PEER_INFO_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_PEER_INFO PeerInfo[1];};
struct _FORMAT_EX_PARAMETERS {MEDIA_TYPE MediaType;ULONG StartCylinderNumber;ULONG EndCylinderNumber;ULONG StartHeadNumber;ULONG EndHeadNumber;USHORT FormatGapLength;USHORT SectorsPerTrack;USHORT SectorNumber[1];};
struct _GET_LOCAL_HOST_INFO6 {ADDRESS_OFFSET CsrBaseAddress;ULONG CsrDataLength;PVOID CsrDataBuffer;};
struct _IPV6_FRAGMENT_HEADER {UINT8 NextHeader;UINT8 Reserved;_IPV6_FRAGMENT_HEADER___92C6B06247B11EB7CB56D4524B6C4DF2 __anonymous0;UINT32 Id;};
struct _IRB_REQ_ASYNC_STREAM {ULONG nNumberOfBytesToStream;ULONG fulFlags;PMDL Mdl;ULONG ulTag;ULONG nChannel;ULONG ulSynch;ULONG Reserved;UCHAR nSpeed;};
struct _IRB_REQ_ISOCH_LISTEN {HANDLE hResource;ULONG fulFlags;CYCLE_TIME StartTime;};
struct _KEY_FULL_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG ClassOffset;ULONG ClassLength;ULONG SubKeys;ULONG MaxNameLen;ULONG MaxClassLen;ULONG Values;ULONG MaxValueNameLen;ULONG MaxValueDataLen;WCHAR Class[1];};
struct _KEY_NODE_INFORMATION {LARGE_INTEGER LastWriteTime;ULONG TitleIndex;ULONG ClassOffset;ULONG ClassLength;ULONG NameLength;WCHAR Name[1];};
struct _MPIO_CONTROLLER_INFO {ULONG IdentifierType;ULONG IdentifierLength;UCHAR Identifier[32];ULONG ControllerState;ULONG Pad;WCHAR AssociatedDsm[64];};
struct _MSNdis_LinkStateData {MSNdis_ObjectHeader Header;ULONG MediaConnectState;ULONG MediaDuplexState;ULONGLONG XmitLinkSpeed;ULONGLONG RcvLinkSpeed;ULONG PauseFunctions;ULONG AutoNegotiationFlags;};
struct _MSNdis_PortStateData {MSNdis_ObjectHeader Header;ULONG MediaConnectState;ULONGLONG XmitLinkSpeed;ULONGLONG RcvLinkSpeed;ULONG Direction;ULONG SendControlState;ULONG RcvControlState;ULONG SendAuthorizationState;ULONG RcvAuthorizationState;ULONG Flags;};
struct _NDIS_HYPERVISOR_INFO {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_HYPERVISOR_PARTITION_TYPE PartitionType;};
struct _NDIS_PM_CAPABILITIES {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG SupportedWoLPacketPatterns;ULONG NumTotalWoLPatterns;ULONG MaxWoLPatternSize;ULONG MaxWoLPatternOffset;ULONG MaxWoLPacketSaveBuffer;ULONG SupportedProtocolOffloads;ULONG NumArpOffloadIPv4Addresses;ULONG NumNSOffloadIPv6Addresses;NDIS_DEVICE_POWER_STATE MinMagicPacketWakeUp;NDIS_DEVICE_POWER_STATE MinPatternWakeUp;NDIS_DEVICE_POWER_STATE MinLinkChangeWakeUp;};
struct _NDIS_STATISTICS_INFO {NDIS_OBJECT_HEADER Header;ULONG SupportedStatistics;ULONG64 ifInDiscards;ULONG64 ifInErrors;ULONG64 ifHCInOctets;ULONG64 ifHCInUcastPkts;ULONG64 ifHCInMulticastPkts;ULONG64 ifHCInBroadcastPkts;ULONG64 ifHCOutOctets;ULONG64 ifHCOutUcastPkts;ULONG64 ifHCOutMulticastPkts;ULONG64 ifHCOutBroadcastPkts;ULONG64 ifOutErrors;ULONG64 ifOutDiscards;ULONG64 ifHCInUcastOctets;ULONG64 ifHCInMulticastOctets;ULONG64 ifHCInBroadcastOctets;ULONG64 ifHCOutUcastOctets;ULONG64 ifHCOutMulticastOctets;ULONG64 ifHCOutBroadcastOctets;};
struct _NDIS_WWAN_SMS_STATUS {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_SMS_STATUS SmsStatus;};
struct _NDIS_WWAN_USSD_EVENT {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_USSD_EVENT UssdEvent;};
struct _NETWORK_ADDRESS_LIST {LONG AddressCount;USHORT AddressType;NETWORK_ADDRESS Address[1];};
struct _NON_PAGED_DEBUG_INFO {USHORT Signature;USHORT Flags;ULONG Size;USHORT Machine;USHORT Characteristics;ULONG TimeDateStamp;ULONG CheckSum;ULONG SizeOfImage;ULONGLONG ImageBase;};
struct _READ_CAPACITY16_DATA {LARGE_INTEGER LogicalBlockAddress;ULONG BytesPerBlock;unsigned char ProtectionEnable : 1;unsigned char ProtectionType : 3;unsigned char Reserved : 4;unsigned char LogicalPerPhysicalExponent : 4;unsigned char Reserved1 : 4;unsigned char LowestAlignedBlock_MSB : 6;unsigned char LBPRZ : 1;unsigned char LBPME : 1;UCHAR LowestAlignedBlock_LSB;UCHAR Reserved3[16];};
struct _SCSI_PASS_THROUGH_EX {ULONG Version;ULONG Length;ULONG CdbLength;ULONG StorAddressLength;UCHAR ScsiStatus;UCHAR SenseInfoLength;UCHAR DataDirection;UCHAR Reserved;ULONG TimeOutValue;ULONG StorAddressOffset;ULONG SenseInfoOffset;ULONG DataOutTransferLength;ULONG DataInTransferLength;ULONG_PTR DataOutBufferOffset;ULONG_PTR DataInBufferOffset;UCHAR Cdb[1];};
struct _SE_ADT_ACCESS_REASON {ACCESS_MASK AccessMask;ULONG AccessReasons[32];ULONG ObjectTypeIndex;ULONG AccessGranted;PSECURITY_DESCRIPTOR SecurityDescriptor;};
struct _SRV_OPEN_ECP_CONTEXT {PUNICODE_STRING ShareName;PSOCKADDR_STORAGE_NFS SocketAddress;BOOLEAN OplockBlockState;BOOLEAN OplockAppState;BOOLEAN OplockFinalState;};
struct _STOR_UC_DEVICE_USAGE {PSTOR_ADDRESS Address;SCSI_UC_DEVICE_USAGE_TYPE UsageType;BOOLEAN InUse;};
struct _VIDEO_REQUEST_PACKET {ULONG IoControlCode;PSTATUS_BLOCK StatusBlock;PVOID InputBuffer;ULONG InputBufferLength;PVOID OutputBuffer;ULONG OutputBufferLength;};
struct _WMI_DISK_PERFORMANCE {LONGLONG BytesRead;LONGLONG BytesWritten;LONGLONG ReadTime;LONGLONG WriteTime;LONGLONG IdleTime;ULONG ReadCount;ULONG WriteCount;ULONG QueueDepth;ULONG SplitCount;LONGLONG QueryTime;ULONG StorageDeviceNumber;USHORT StorageManagerName[8];};
struct _XSTATE_CONFIGURATION {ULONG64 EnabledFeatures;ULONG64 EnabledVolatileFeatures;ULONG Size;unsigned int OptimizedSave : 1;XSTATE_FEATURE Features[64];};
struct tagKS_AnalogVideoInfo {RECT rcSource;RECT rcTarget;DWORD dwActiveWidth;DWORD dwActiveHeight;REFERENCE_TIME AvgTimePerFrame;};
struct tagKS_DATARANGE_IMAGE {KSDATARANGE DataRange;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_BITMAPINFOHEADER ImageInfoHeader;};
typedef NTSTATUS ( *DXGKCB_AGP_FREE_POOL)(HANDLE Context, PVOID VirtualAddress);
typedef NTSTATUS  DXGKDDI_CREATEDEVICE(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_CREATEDEVICE pCreateDevice);
typedef NTSTATUS  DXGKDDI_SUBMITRENDER(IN_CONST_HANDLE hContext, INOUT_PDXGKARG_SUBMITRENDER pSubmitRender);
typedef NDIS_STATUS FILTER_NET_PNP_EVENT(NDIS_HANDLE FilterModuleContext, PNET_PNP_EVENT_NOTIFICATION NetPnPEventNotification);
struct IMPORT_OBJECT_HEADER {USHORT Sig1;USHORT Sig2;USHORT Version;USHORT Machine;ULONG TimeDateStamp;ULONG SizeOfData;union IMPORT_OBJECT_HEADER___8123182D7FCA810AFAD4545864718BF1 u;unsigned short Type : 2;unsigned short NameType : 3;unsigned short Reserved : 11;};
typedef NTSTATUS IO_CSQ_INSERT_IRP_EX(struct _IO_CSQ *Csq, PIRP Irp, PVOID InsertContext);
typedef PIRP IO_CSQ_PEEK_NEXT_IRP(PIO_CSQ Csq, PIRP Irp, PVOID PeekContext);
typedef NDIS_STATUS MINIPORT_OID_REQUEST(NDIS_HANDLE MiniportAdapterContext, PNDIS_OID_REQUEST OidRequest);
typedef void NDIS_PROCESS_SG_LIST(PDEVICE_OBJECT DeviceObject, PVOID Reserved, PSCATTER_GATHER_LIST ScatterGatherListBuffer, PVOID Context);
struct NDIS_WMI_OUTPUT_INFO {NDIS_OBJECT_HEADER Header;ULONG Flags;UCHAR SupportedRevision;ULONG DataOffset;};
struct NLBTCPAddressInfo_v2 {ADDRESS_FAMILY AddressFamily; UCHAR *RemoteIPAddress; UCHAR *LocalIPAddress;USHORT RemotePort;USHORT LocalPort;};
typedef NTSTATUS (*PAGP_BUS_FREE_MEMORY)(PVOID AgpContext, PVOID MapHandle, ULONG NumberOfPages, ULONG OffsetInPages);
typedef BOOLEAN ( *PAGP_COMMIT_PHYSICAL)(PVOID HwDeviceExtension, PVOID PhysicalReserveContext, ULONG Pages, ULONG Offset);
typedef NTSTATUS (*PCAM_FREE_BW_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef NTSTATUS (*PCLASS_REMOVE_DEVICE)(PDEVICE_OBJECT DeviceObject, UCHAR Type);
typedef NTSTATUS (*PFNKSIRPLISTCALLBACK)(PIRP Irp, PVOID Context);
typedef NTSTATUS ( *PFN_WSK_CLOSE_SOCKET)(PWSK_SOCKET Socket, PIRP Irp);
typedef NTSTATUS ( *PMRX_CHKDIR_CALLDOWN)(PRX_CONTEXT RxContext, PUNICODE_STRING DirectoryName);
typedef NTSTATUS (*PREPLACE_DRIVER_INIT)(PPNP_REPLACE_DRIVER_INTERFACE Interface, PVOID Unused);
typedef PVOID (*PRX_TABLE_LOOKUPNAME)(PRX_PREFIX_TABLE ThisTable, PUNICODE_STRING CanonicalName, PUNICODE_STRING RemainingName);
typedef ULONG  RTL_RUN_ONCE_INIT_FN(PRTL_RUN_ONCE RunOnce, PVOID Parameter, PVOID *Context);
struct _AVC_PEER_DO_LOCATOR {NODE_ADDRESS NodeAddress;ULONG Generation;PDEVICE_OBJECT DeviceObject;};
struct _BDA_FILTER_TEMPLATE { KSFILTER_DESCRIPTOR *pFilterDescriptor;ULONG ulcPinPairs; BDA_PIN_PAIRING *pPinPairs;};
struct _BDA_TS_SELECTORINFO {BYTE bTSInfolength;BYTE bReserved[2];GUID guidNetworkType;BYTE bTSIDCount;USHORT usTSID[1];};
struct _CMP_GET_PLUG_HANDLE {ULONG PlugNum;CMP_PLUG_TYPE Type;HANDLE hPlug;};
struct _DISK_PARTITION_INFO {ULONG SizeOfPartitionInfo;PARTITION_STYLE PartitionStyle;union _DISK_PARTITION_INFO___1BA94293F24DA2E017ACE0D2C61C7833 u;};
struct _DOT11_RESET_REQUEST {DOT11_RESET_TYPE dot11ResetType;DOT11_MAC_ADDRESS dot11MacAddress;BOOLEAN bSetDefaultMIB;};
struct _DOT11_START_REQUEST {ULONG uStartFailureTimeout;DOT11_RATE_SET OperationalRateSet;ULONG uChCenterFrequency;DOT11_BSS_DESCRIPTION dot11BSSDescription;};
struct _DOT4_DC_CREATE_DATA {unsigned char bPsid;CHAR pServiceName[41];unsigned char bType;ULONG ulBufferSize;USHORT usMaxHtoPPacketSize;USHORT usMaxPtoHPacketSize;unsigned char bHsid;};
struct _DXGKARG_FLIPOVERLAY {HANDLE hSource;PHYSICAL_ADDRESS SrcPhysicalAddress;UINT SrcSegmentId;void *pPrivateDriverData;UINT PrivateDriverDataSize;};
struct _DXGKARG_GETSCANLINE {D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId;BOOLEAN InVerticalBlank;UINT ScanLine;};
struct _DXGK_ALLOCATIONLIST {HANDLE hDeviceSpecificAllocation;_DXGK_ALLOCATIONLIST___936A4FEA36CE3B7BC231B771E91D6CFF __anonymous0;PHYSICAL_ADDRESS PhysicalAddress;};
struct _DXGK_QUERYSEGMENTIN {PHYSICAL_ADDRESS AgpApertureBase;LARGE_INTEGER AgpApertureSize;DXGK_SEGMENTFLAGS AgpFlags;};
struct _HAL_BUS_INFORMATION {INTERFACE_TYPE BusType;BUS_DATA_TYPE ConfigurationType;ULONG BusNumber;ULONG Reserved;};
struct _KBUGCHECK_ADD_PAGES {PVOID Context;ULONG Flags;ULONG BugCheckCode;ULONG_PTR Address;ULONG_PTR Count;};
struct _KDEVICE_QUEUE_ENTRY {LIST_ENTRY DeviceListEntry;ULONG SortKey;BOOLEAN Inserted;};
struct _L2CAP_CONFIG_OPTION {CO_HEADER Header;void *DynamicBuffer;UCHAR FixedBuffer[4];USHORT Flags;};
struct _LLDP_CURRENT_STATUS {ULONG Revision;SIZE_T Size;unsigned char RemoteNeighborAvailable : 1;unsigned char TooManyNeighbors : 1;unsigned char NetworkStarted : 1;unsigned char NetworkMediaConnected : 1;unsigned char NetworkPowerActive : 1;unsigned char NetworkOperStatusUp : 1;UCHAR CurrentLocalMacAddress[6];UCHAR CurrentRemoteMacAddress[6];};
struct _MPIO_GET_DESCRIPTOR {ULONG NumberPdos;WCHAR DeviceName[64];PDO_INFORMATION PdoInformation[1];};
struct _MSMCAEvent_BusError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONG Participation;ULONG MemoryHierarchyLevel;ULONG RequestType;ULONG MemOrIo;ULONGLONG Address;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_CPUError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONG MajorErrorType;ULONG Level;ULONG CacheOp;ULONG CacheMesi;ULONG TLBOp;ULONG BusType;ULONG BusSev;ULONG RegFileId;ULONG RegFileOp;ULONG MSSid;ULONG MSOp;ULONG MSArrayId;ULONG MSIndex;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_TLBError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONG TransactionType;ULONG MemoryHierarchyLevel;ULONGLONG Address;ULONG Size;UCHAR RawRecord[1];};
struct _MSNdis_WmiSetHeader {MSNdis_ObjectHeader Header;ULONG PortNumber;ULONGLONG NetLuid;ULONGLONG RequestId;ULONG Timeout;ULONG Padding;};
struct _MSiSCSI_TCPIPConfig {BOOLEAN UseLinkLocalAddress;BOOLEAN EnableDHCP;BOOLEAN UseDHCPForDNS;ULONG IPVersions;ISCSI_IP_Address IpAddress;ISCSI_IP_Address DefaultGateway;ISCSI_IP_Address SubnetMask;ISCSI_IP_Address PreferredDNSServer;ISCSI_IP_Address AlternateDNSServer;};
struct _NAME_CACHE_CONTROL_ {FAST_MUTEX NameCacheLock;LIST_ENTRY ActiveList;LIST_ENTRY FreeList;ULONG EntryCount;ULONG MaximumEntries;ULONG MRxNameCacheSize;ULONG NumberActivates;ULONG NumberChecks;ULONG NumberNameHits;ULONG NumberNetOpsSaved;ULONG Spare[4];};
struct _NDIS_GENERIC_OBJECT {NDIS_OBJECT_HEADER Header;PVOID Caller;PVOID CallersCaller;PDRIVER_OBJECT DriverObject;};
struct _NETWORK_ADDRESS_IPX {ULONG NetworkAddress;UCHAR NodeAddress[6];USHORT Socket;};
struct _PNP_BUS_INFORMATION {GUID BusTypeGuid;INTERFACE_TYPE LegacyBusType;ULONG BusNumber;};
struct _PTP_VENDOR_DATA_OUT {WORD ResponseCode;ULONG SessionId;ULONG TransactionId;ULONG Params[5];UCHAR VendorReadData[1];};
struct _REPARSE_DATA_BUFFER {ULONG ReparseTag;USHORT ReparseDataLength;USHORT Reserved;union _REPARSE_DATA_BUFFER___EDE85F431271D6DB35F60DFE09C35EC8 u;};
struct _RESOURCE_HASH_ENTRY {LIST_ENTRY ListEntry;PVOID Address;ULONG ContentionCount;ULONG Number;};
struct _SERIAL_WMI_COMMPROP {USHORT wPacketLength;USHORT wPacketVersion;ULONG dwServiceMask;ULONG dwReserved1;ULONG dwMaxTxQueue;ULONG dwMaxRxQueue;ULONG dwMaxBaud;ULONG dwProvSubType;ULONG dwProvCapabilities;ULONG dwSettableParams;ULONG dwSettableBaud;USHORT wSettableData;USHORT wSettableStopParity;ULONG dwCurrentTxQueue;ULONG dwCurrentRxQueue;ULONG dwProvSpec1;ULONG dwProvSpec2;ULONG dwProvCharSize;UCHAR wcProvChar[1];};
struct _STOR_POFX_COMPONENT {ULONG Version;ULONG Size;ULONG FStateCount;ULONG DeepestWakeableFState;GUID Id;STOR_POFX_COMPONENT_IDLE_STATE FStates[1];};
struct _STOR_POFX_DEVICE_V2 {ULONG Version;ULONG Size;ULONG ComponentCount;ULONG Flags;_STOR_POFX_DEVICE_V2___0B5FC411B4C62088E1E17FEC8681629D __anonymous0;STOR_POFX_COMPONENT Components[1];};
struct _TDI_CONNECTION_INFO {ULONG State;ULONG Event;ULONG TransmittedTsdus;ULONG ReceivedTsdus;ULONG TransmissionErrors;ULONG ReceiveErrors;LARGE_INTEGER Throughput;LARGE_INTEGER Delay;ULONG SendBufferSize;ULONG ReceiveBufferSize;BOOLEAN Unreliable;};
struct _TDI_CONNECT_REQUEST {TDI_REQUEST Request;PTDI_CONNECTION_INFORMATION RequestConnectionInformation;PTDI_CONNECTION_INFORMATION ReturnConnectionInformation;LARGE_INTEGER Timeout;};
struct tagKS_MPEG1VIDEOINFO {KS_VIDEOINFOHEADER hdr;DWORD dwStartTimeCode;DWORD cbSequenceHeader;BYTE bSequenceHeader[1];};
struct tag_video_open_parms {ULONG dwSize;FOURCC fccType;FOURCC fccComp;ULONG dwVersion;ULONG dwFlags;ULONG dwError;LPVOID pV1Reserved;LPVOID pV2Reserved;ULONG dnDevNode;};
struct DOT11_PHY_TYPE_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_PHY_TYPE dot11PhyType[1];};
typedef NTSTATUS (*DSM_INVALIDATE_PATH)(PVOID DsmContext, ULONG ErrorMask, PVOID PathId, PVOID *NewPathId);
typedef NTSTATUS (*DSM_SET_DEVICE_INFO)(PVOID DsmContext, PDEVICE_OBJECT TargetObject, PVOID DsmId, PVOID *PathId);
typedef NTSTATUS ( *DXGKCB_UNMAP_MEMORY)(HANDLE DeviceHandle, PVOID VirtualAddress);
typedef NTSTATUS  DXGKDDI_COMMITVIDPN(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_COMMITVIDPN_CONST pCommitVidPn);
typedef NTSTATUS  DXGKDDI_FLIPOVERLAY(IN_CONST_HANDLE hOverlay, IN_CONST_PDXGKARG_FLIPOVERLAY pFlipOverlay);
typedef NTSTATUS  DXGKDDI_GETSCANLINE(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_GETSCANLINE pGetScanLine);
typedef NTSTATUS  DXGKDDI_RESETENGINE(IN_CONST_HANDLE hAdapter, INOUT_PDXGKARG_RESETENGINE pResetEngine);
typedef NTSTATUS  DXGKDDI_STOPCAPTURE(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_STOPCAPTURE pStopCapture);
typedef NTSTATUS (*DXGK_BRIGHTNESS_GET)(PVOID Context, PUCHAR Brightness);
typedef NTSTATUS (*DXGK_BRIGHTNESS_SET)(PVOID Context, UCHAR Brightness);
typedef BOOLEAN (*IDE_ADAPTER_CONTROL)(PVOID ControllerExtension, IDE_CONTROL_ACTION ControlAction, PVOID Parameters);
typedef ATA_CHANNEL_STATE (*IDE_CHANNEL_ENABLED)(PVOID ControllerExtension, ULONG Channel);
typedef NDIS_STATUS MINIPORT_INITIALIZE(NDIS_HANDLE NdisMiniportHandle, NDIS_HANDLE MiniportDriverContext, PNDIS_MINIPORT_INIT_PARAMETERS MiniportInitParameters);
typedef NTSTATUS (*PCLASS_CREATE_CLOSE)(PDEVICE_OBJECT DeviceObject, PIRP Irp);
typedef NTSTATUS (*PCLASS_POWER_DEVICE)(PDEVICE_OBJECT DeviceObject, PIRP Irp);
typedef ULONG PCMCIA_WRITE_CONFIG(PVOID Context, ULONG WhichSpace, PUCHAR Buffer, ULONG Offset, ULONG Length);
typedef PBRB (*PFNBTH_ALLOCATE_BRB)(BRB_TYPE brbType, ULONG tag);
typedef LONGLONG ( *PFNKSCORRELATEDTIME)(PVOID Context, PLONGLONG SystemTime);
typedef void (*PFNKSDEVICESETPOWER)(PKSDEVICE Device, PIRP Irp, DEVICE_POWER_STATE To, DEVICE_POWER_STATE From);
typedef BOOLEAN (*PFNKSPINCANCELTIMER)(PKSPIN Pin, PKTIMER Timer);
typedef NTSTATUS ( *PFN_WSK_ABORT_EVENT)(PVOID SocketContext, PWSK_INSPECT_ID InspectID);
typedef void (*PFREE_MAP_REGISTERS)(PDMA_ADAPTER DmaAdapter, PVOID MapRegisterBase, ULONG NumberOfMapRegisters);
typedef NTSTATUS (*PFS_FILTER_CALLBACK)(PFS_FILTER_CALLBACK_DATA Data, PVOID *CompletionContext);
typedef NTSTATUS ( *PMRX_CREATE_SRVCALL)(PMRX_SRV_CALL SrvCall, PMRX_SRVCALL_CALLBACK_CONTEXT SrvCallCallBackContext);
typedef HW_DMA_RETURN (*PVIDEO_HW_START_DMA)(PVOID HwDeviceExtension, PDMA pDma);
typedef SECURITY_STATUS ( *VERIFY_SIGNATURE_FN)(PCtxtHandle, PSecBufferDesc, unsigned int, unsigned int *);
struct _ACCESS_ALLOWED_ACE {ACE_HEADER Header;ACCESS_MASK Mask;ULONG SidStart;};
struct _CO_CALL_PARAMETERS {ULONG Flags;PCO_CALL_MANAGER_PARAMETERS CallMgrParameters;PCO_MEDIA_PARAMETERS MediaParameters;};
struct _D3DKMDT_GAMMA_RAMP {D3DDDI_GAMMARAMP_TYPE Type;SIZE_T DataSize;union _D3DKMDT_GAMMA_RAMP___833D6B2DFF43FD3049AE5520F396FCC6 Data;};
struct _DDVIDEOPORTCONNECT {DWORD dwSize;DWORD dwPortWidth;GUID guidTypeID;DWORD dwFlags;ULONG_PTR dwReserved1;};
struct _DESCRIPTION_HEADER {ULONG Signature;ULONG Length;UCHAR Revision;UCHAR Checksum;CHAR OEMID[6];CHAR OEMTableID[8];ULONG OEMRevision;CHAR CreatorID[4];ULONG CreatorRev;};
struct _DISK_CACHE_SETTING {ULONG Version;DISK_CACHE_STATE State;BOOLEAN IsPowerProtected;};
struct _DISK_EX_INT13_INFO {USHORT ExBufferSize;USHORT ExFlags;ULONG ExCylinders;ULONG ExHeads;ULONG ExSectorsPerTrack;ULONG64 ExSectorsPerDrive;USHORT ExSectorSize;USHORT ExReserved;};
struct _DOT11_JOIN_REQUEST {ULONG uJoinFailureTimeout;DOT11_RATE_SET OperationalRateSet;ULONG uChCenterFrequency;DOT11_BSS_DESCRIPTION dot11BSSDescription;};
struct _DXGKARG_SETPALETTE {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;UINT FirstEntry;UINT NumEntries;D3DKMDT_PALETTEDATA *pLookupTable;};
struct _DXGK_GDIARG_BITBLT {RECT SrcRect;RECT DstRect;UINT SrcAllocationIndex;UINT DstAllocationIndex;UINT NumSubRects;RECT *pSubRects;WORD Rop;WORD Rop3;UINT SrcPitch;UINT DstPitch;};
struct _EXCEPTION_RECORD64 {NTSTATUS ExceptionCode;ULONG ExceptionFlags;ULONG64 ExceptionRecord;ULONG64 ExceptionAddress;ULONG NumberParameters;ULONG __unusedAlignment;ULONG64 ExceptionInformation[15];};
struct _FPDT_RECORD_HEADER {USHORT RecordType;CHAR RecordLength;CHAR Revision;ULONG Reserved;};
struct _GROUP_RELATIONSHIP {USHORT MaximumGroupCount;USHORT ActiveGroupCount;UCHAR Reserved[20];PROCESSOR_GROUP_INFO GroupInfo[1];};
struct _HBAFCPBindingEntry {ULONG Type;HBAFCPID FCPId;HBAScsiID ScsiId;};
struct _IMAGE_NT_HEADERS64 {ULONG Signature;IMAGE_FILE_HEADER FileHeader;IMAGE_OPTIONAL_HEADER64 OptionalHeader;};
struct _IO_CSQ_IRP_CONTEXT {ULONG Type;PIRP Irp;PIO_CSQ Csq;};
struct _IRB_REQ_ISOCH_TALK {HANDLE hResource;ULONG fulFlags;CYCLE_TIME StartTime;};
struct _ISCSI_TargetPortal {ISCSI_IP_Address Address;ULONG Reserved;USHORT Socket;};
struct _NDIS_IP_OPER_STATE {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_IP_OPER_STATUS IpOperationalStatus;};
struct _NDIS_WWAN_PIN_INFO {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_PIN_INFO PinInfo;};
struct _NDIS_WWAN_PIN_LIST {NDIS_OBJECT_HEADER Header;WWAN_STATUS uStatus;WWAN_PIN_LIST PinList;};
struct _NETWORK_ADDRESS_IP {USHORT sin_port;ULONG in_addr;UCHAR sin_zero[8];};
struct _OPLOCK_KEY_CONTEXT {USHORT Version;USHORT Flags;GUID ParentOplockKey;GUID TargetOplockKey;ULONG Reserved;};
struct _PCI_AGP_CAPABILITY {PCI_CAPABILITIES_HEADER Header;unsigned short Minor : 4;unsigned short Major : 4;unsigned short Rsvd1 : 8;struct _PCI_AGP_CAPABILITY___PCI_AGP_STATUS AGPStatus;struct _PCI_AGP_CAPABILITY___PCI_AGP_COMMAND AGPCommand;};
struct _PLATFORM_INTERRUPT {UCHAR Type;UCHAR Length;USHORT Flags;UCHAR InterruptType;UCHAR APICID;UCHAR ACPIEID;UCHAR IOSAPICVector;ULONG GlobalVector;ULONG Reserved;};
struct _PO_FX_COMPONENT_V1 {GUID Id;ULONG IdleStateCount;ULONG DeepestWakeableIdleState;PPO_FX_COMPONENT_IDLE_STATE IdleStates;};
struct _PREFIX_TABLE_ENTRY {CSHORT NodeTypeCode;CSHORT NameLength;struct _PREFIX_TABLE_ENTRY *NextPrefixTree;RTL_SPLAY_LINKS Links;PSTRING Prefix;};
struct _PTP_VENDOR_DATA_IN {WORD OpCode;ULONG SessionId;ULONG TransactionId;ULONG Params[5];ULONG NumParams;ULONG NextPhase;UCHAR VendorWriteData[1];};
struct _QUERY_PATH_REQUEST {ULONG PathNameLength;PIO_SECURITY_CONTEXT SecurityContext;WCHAR FilePathName[1];};
struct _RX_BINDING_CONTEXT {PUNICODE_STRING pTransportName;ULONG QualityOfService;PRX_BINDING_HANDLE pBindHandle;};
struct _SE_ADT_OBJECT_TYPE {GUID ObjectType;USHORT Flags;USHORT Level;ACCESS_MASK AccessMask;};
union _SUB_Q_CHANNEL_DATA {SUB_Q_CURRENT_POSITION CurrentPosition;SUB_Q_MEDIA_CATALOG_NUMBER MediaCatalog;SUB_Q_TRACK_ISRC TrackIsrc;};
struct _TDI_REQUEST_KERNEL {ULONG_PTR RequestFlags;PTDI_CONNECTION_INFORMATION RequestConnectionInformation;PTDI_CONNECTION_INFORMATION ReturnConnectionInformation;PVOID RequestSpecific;};
struct _TDI_REQUEST_LISTEN {TDI_REQUEST Request;PTDI_CONNECTION_INFORMATION RequestConnectionInformation;PTDI_CONNECTION_INFORMATION ReturnConnectionInformation;USHORT ListenFlags;};
struct _TDI_REQUEST_STATUS {TDI_STATUS Status;PVOID RequestContext;ULONG BytesTransferred;};
struct _VIDEO_ACCESS_RANGE {PHYSICAL_ADDRESS RangeStart;ULONG RangeLength;UCHAR RangeInIoSpace;UCHAR RangeVisible;UCHAR RangeShareable;UCHAR RangePassive;};
struct _VIDEO_SHARE_MEMORY {HANDLE ProcessHandle;ULONG ViewOffset;ULONG ViewSize;PVOID RequestedVirtualAddress;};
struct adpcmwaveformat_tag {WAVEFORMATEX wfx;WORD wSamplesPerBlock;WORD wNumCoef;ADPCMCOEFSET aCoef[];};
struct mpeg1waveformat_tag {WAVEFORMATEX wfx;WORD fwHeadLayer;DWORD dwHeadBitrate;WORD fwHeadMode;WORD fwHeadModeExt;WORD wHeadEmphasis;WORD fwHeadFlags;DWORD dwPTSLow;DWORD dwPTSHigh;};
struct tagKS_H264VIDEOINFO {WORD wWidth;WORD wHeight;WORD wSARwidth;WORD wSARheight;WORD wProfile;BYTE bLevelIDC;WORD wConstrainedToolset;DWORD bmSupportedUsages;WORD bmCapabilities;DWORD bmSVCCapabilities;DWORD bmMVCCapabilities;DWORD dwFrameInterval;BYTE bMaxCodecConfigDelay;BYTE bmSupportedSliceModes;BYTE bmSupportedSyncFrameTypes;BYTE bResolutionScaling;BYTE bSimulcastSupport;BYTE bmSupportedRateControlModes;WORD wMaxMBperSecOneResolutionNoScalability;WORD wMaxMBperSecTwoResolutionsNoScalability;WORD wMaxMBperSecThreeResolutionsNoScalability;WORD wMaxMBperSecFourResolutionsNoScalability;WORD wMaxMBperSecOneResolutionTemporalScalability;WORD wMaxMBperSecTwoResolutionsTemporalScalablility;WORD wMaxMBperSecThreeResolutionsTemporalScalability;WORD wMaxMBperSecFourResolutionsTemporalScalability;WORD wMaxMBperSecOneResolutionTemporalQualityScalability;WORD wMaxMBperSecTwoResolutionsTemporalQualityScalability;WORD wMaxMBperSecThreeResolutionsTemporalQualityScalablity;WORD wMaxMBperSecFourResolutionsTemporalQualityScalability;WORD wMaxMBperSecOneResolutionTemporalSpatialScalability;WORD wMaxMBperSecTwoResolutionsTemporalSpatialScalability;WORD wMaxMBperSecThreeResolutionsTemporalSpatialScalablity;WORD wMaxMBperSecFourResolutionsTemporalSpatialScalability;WORD wMaxMBperSecOneResolutionFullScalability;WORD wMaxMBperSecTwoResolutionsFullScalability;WORD wMaxMBperSecThreeResolutionsFullScalability;WORD wMaxMBperSecFourResolutionsFullScalability;};
struct ANON_OBJECT_HEADER {USHORT Sig1;USHORT Sig2;USHORT Version;USHORT Machine;ULONG TimeDateStamp;CLSID ClassID;ULONG SizeOfData;};
typedef SECURITY_STATUS ( *DECRYPT_MESSAGE_FN)(PCtxtHandle, PSecBufferDesc, unsigned int, unsigned int *);
typedef NTSTATUS DXGKDDI_ADD_DEVICE(IN_CONST_PDEVICE_OBJECT PhysicalDeviceObject, OUT_PPVOID MiniportDeviceContext);
typedef NTSTATUS  DXGKDDI_SETPALETTE(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_SETPALETTE pSetPalette);
typedef SECURITY_STATUS ( *ENCRYPT_MESSAGE_FN)(PCtxtHandle, unsigned int, PSecBufferDesc, unsigned int);
typedef BOOLEAN FAST_IO_UNLOCK_ALL(struct _FILE_OBJECT *FileObject, PEPROCESS ProcessId, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef NDIS_STATUS FILTER_OID_REQUEST(NDIS_HANDLE FilterModuleContext, PNDIS_OID_REQUEST OidRequest);
struct HBA_FcpScsiEntryV2 {HBA_SCSIID ScsiId;HBA_FCPID FcpId;HBA_LUID LUID;};
typedef SCSI_ADAPTER_CONTROL_STATUS HW_ADAPTER_CONTROL(PVOID DeviceExtension, SCSI_ADAPTER_CONTROL_TYPE ControlType, PVOID Parameters);
typedef NTSTATUS (*PCAM_STATE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext);
typedef NTSTATUS PCI_MSIX_SET_ENTRY(PVOID Context, ULONG TableEntry, ULONG MessageNumber);
typedef NTSTATUS (*PCLASS_STOP_DEVICE)(PDEVICE_OBJECT DeviceObject, UCHAR Type);
typedef ULONG PCMCIA_READ_CONFIG(PVOID Context, ULONG WhichSpace, PUCHAR Buffer, ULONG Offset, ULONG Length);
typedef PSDP_NODE (*PCREATENODEBOOLEAN)(UCHAR bVal, ULONG tag);
typedef PSDP_NODE (*PCREATENODEUINT128)(PSDP_ULARGE_INTEGER_16 puli16Val, ULONG tag);
typedef PSDP_NODE (*PCREATENODEUUID128)( GUID *pUuidVal, ULONG tag);
typedef NTSTATUS (*PFNKSFILTERPROCESS)(PKSFILTER Filter, PKSPROCESSPIN_INDEXENTRY Index);
typedef NTSTATUS (*PGPE_DISABLE_EVENT)(PDEVICE_OBJECT, PVOID);
typedef VP_STATUS (*PINT10_FREE_BUFFER)(PVOID Context, USHORT Seg, USHORT Off);
typedef NTSTATUS ( *PMRX_PREPARSE_NAME)(PRX_CONTEXT RxContext, PUNICODE_STRING Name);
typedef void (*PTIMER_APC_ROUTINE)(PVOID TimerContext, ULONG TimerLowValue, LONG TimerHighValue);
typedef BOOLEAN (*PVIDEO_HW_RESET_HW)(PVOID HwDeviceExtension, ULONG Columns, ULONG Rows);
typedef BOOLEAN (*PVIDEO_HW_START_IO)(PVOID HwDeviceExtension, PVIDEO_REQUEST_PACKET RequestPacket);
typedef void (*PciReadWriteConfig)(struct _BUS_HANDLER *BusHandler, PCI_SLOT_NUMBER Slot, PVOID Buffer, ULONG Offset, ULONG Length);
typedef void (*TAPE_ERROR_ROUTINE)(PVOID MinitapeExtension, PSCSI_REQUEST_BLOCK Srb, PTAPE_STATUS TapeStatus);
struct _ACCESS_DENIED_ACE {ACE_HEADER Header;ACCESS_MASK Mask;ULONG SidStart;};
struct _BDA_DRM_DRMSTATUS {PBDARESULT lResult;GUID DRMuuid;ULONG ulDrmUuidListStringSize;GUID argbDrmUuidListString[1];};
struct _BTHX_CAPABILITIES {ULONG MaxAclTransferInSize;BTHX_SCO_SUPPORT ScoSupport;ULONG MaxScoChannels;BOOLEAN IsDeviceIdleCapable;BOOLEAN IsDeviceWakeCapable;};
struct _CLASS_VPD_B2_DATA {NTSTATUS CommandStatus;UCHAR ThresholdExponent;unsigned char DP : 1;unsigned char ANC_SUP : 1;unsigned char Reserved0 : 2;unsigned char LBPRZ : 1;unsigned char LBPWS10 : 1;unsigned char LBPWS : 1;unsigned char LBPU : 1;unsigned char ProvisioningType : 3;unsigned char Reserved1 : 5;ULONG SoftThresholdEventPending;};
struct _CMP_MONITOR_PLUGS {ULONG Flags;PCMP_MONITOR_ROUTINE pfnNotify;PVOID Context;};
struct _DISK_CLUSTER_INFO {ULONG Version;ULONGLONG Flags;ULONGLONG FlagsMask;BOOLEAN Notify;};
struct _FCP_SEND_RESPONSE {NODE_ADDRESS NodeAddress;ULONG Length;PFCP_FRAME Frame;};
struct _HAL_MCA_INTERFACE {PHALMCAINTERFACELOCK Lock;PHALMCAINTERFACEUNLOCK Unlock;PHALMCAINTERFACEREADREGISTER ReadRegister;};
struct _KSNODE_DESCRIPTOR { KSAUTOMATION_TABLE *AutomationTable; GUID *Type; GUID *Name;PVOID Alignment;};
struct _MINIPORT_MAPPINGS {USHORT Version;PVOID IBFTable;PVOID Nic0Map;PVOID Nic1Map;ULONG NumberOfAdditionalNic;PVOID NicMap[];};
struct _MSMCAEvent_Header {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;};
struct _NDIS_ENUM_FILTERS {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG NumberOfFilters;ULONG OffsetFirstFilter;NDIS_FILTER_INTERFACE Filter[1];};
struct _NDK_OBJECT_HEADER {NDK_VERSION Version;NDK_OBJECT_TYPE ObjectType;NDK_OBJECT_HEADER_RESERVED_BLOCK NdkReserved;};
struct _SCRUB_DATA_OUTPUT {ULONG Size;ULONG Flags;ULONG Status;ULONGLONG ErrorFileOffset;ULONGLONG ErrorLength;ULONGLONG NumberOfBytesRepaired;ULONGLONG NumberOfBytesFailed;ULONGLONG InternalFileReference;ULONG Reserved[6];UCHAR ResumeContext[816];};
struct _SCSI_INQUIRY_DATA {UCHAR PathId;UCHAR TargetId;UCHAR Lun;BOOLEAN DeviceClaimed;ULONG InquiryDataLength;ULONG NextInquiryDataOffset;UCHAR InquiryData[1];};
struct _SD_ENUM_SDS_ENTRY {ULONG Hash;ULONG SecurityId;ULONGLONG Offset;ULONG Length;UCHAR Descriptor[1];};
struct _TAPE_SET_POSITION {ULONG Method;ULONG Partition;LARGE_INTEGER Offset;BOOLEAN Immediate;};
struct tagTIMECODE_SAMPLE {LONGLONG qwTick;TIMECODE timecode;DWORD dwUser;DWORD dwFlags;};
struct DL_TUNNEL_ADDRESS {COMPARTMENT_ID CompartmentId;SCOPE_ID ScopeId;UCHAR IpAddress[];};
struct DOT11_IBSS_PARAMS {NDIS_OBJECT_HEADER Header;BOOLEAN bJoinOnly;ULONG uIEsOffset;ULONG uIEsLength;};
struct DOT11_PMKID_ENTRY {DOT11_MAC_ADDRESS BSSID;DOT11_PMKID_VALUE PMKID;ULONG uFlags;};
typedef NTSTATUS LLDP_QUERY_CONFIG(HMSAP MsapHandle, PLLDP_ADMIN_CONFIG Config);
typedef NTSTATUS LLDP_QUERY_STATUS(HMSAP MsapHandle, PLLDP_CURRENT_STATUS Status);
typedef SECURITY_STATUS ( *MAKE_SIGNATURE_FN)(PCtxtHandle, unsigned int, PSecBufferDesc, unsigned int);
typedef NTSTATUS (*PAGP_BUS_SET_RATE)(PVOID AgpContext, ULONG AgpRate);
typedef NTSTATUS (*PCLASS_ADD_DEVICE)(PDRIVER_OBJECT DriverObject, PDEVICE_OBJECT Pdo);
typedef NTSTATUS (*PCLASS_READ_WRITE)(PDEVICE_OBJECT DeviceObject, PIRP Irp);
typedef PSDP_NODE (*PCREATENODEINT128)(PSDP_LARGE_INTEGER_16 pul16Val, ULONG tag);
typedef PSDP_NODE (*PCREATENODESTRING)(PCHAR string, ULONG stringLength, ULONG tag);
typedef PSDP_NODE (*PCREATENODEUINT16)(USHORT usVal, ULONG tag);
typedef PSDP_NODE (*PCREATENODEUINT64)(ULONGLONG ullVal, ULONG tag);
typedef PSDP_NODE (*PCREATENODEUUID16)(USHORT usVal, ULONG tag);
typedef NTSTATUS (*PFNKSPINHANDSHAKE)(PKSPIN Pin, PKSHANDSHAKE In, PKSHANDSHAKE Out);
typedef NTSTATUS (*PGPE_CLEAR_STATUS)(PDEVICE_OBJECT, PVOID);
typedef NTSTATUS (*PGPE_ENABLE_EVENT)(PDEVICE_OBJECT, PVOID);
typedef NTSTATUS ( *PMRX_CALLDOWN_CTX)(PRX_CONTEXT RxContext, PRDBSS_DEVICE_OBJECT RxDeviceObject);
union SdpQueryUuidUnion {GUID uuid128;ULONG uuid32;USHORT uuid16;};
struct _BDA_WMDRM_STATUS {PBDARESULT lResult;ULONG ulMaxCaptureTokenSize;ULONG uMaxStreamingPid;ULONG ulMaxLicense;ULONG ulMinSecurityLevel;ULONG ulRevInfoSequenceNumber;ULONGLONG ulRevInfoIssuedTime;ULONG ulRevListVersion;ULONG ulRevInfoTTL;ULONG ulState;};
struct _BRB_ACL_GET_MODE {BRB_HEADER Hdr;BTH_ADDR BtAddress;ACL_MODE AclMode;};
struct _BUS_RESET_NOTIFY {ULONG Flags;PBUS_RESET_ROUTINE pfnNotify;PVOID Context;};
struct _CIP_ATTACH_FRAME {HANDLE hConnect;ULONG FrameLength;ULONG SourceLength;PCIP_FRAME Frame;};
struct _CMP_CONNECT_VER2 {HANDLE hOutputPlug;HANDLE hInputPlug;CMP_CONNECT_TYPE Type;CIP_DATA_FORMAT_VER2 Format;HANDLE hConnect;};
struct _CMP_CONNECT_VER3 {HANDLE hOutputPlug;HANDLE hInputPlug;CMP_CONNECT_TYPE Type;CIP_DATA_FORMAT_VER3 Format;HANDLE hConnect;};
struct _CMP_MONITOR_INFO {ULONG State;ULONG PlugNum;ULONG PlugType;AV_PCR Pcr;PVOID Context;};
struct _DISK_GEOMETRY_EX {DISK_GEOMETRY Geometry;LARGE_INTEGER DiskSize;UCHAR Data[1];};
struct _DISK_PERFORMANCE {LARGE_INTEGER BytesRead;LARGE_INTEGER BytesWritten;LARGE_INTEGER ReadTime;LARGE_INTEGER WriteTime;LARGE_INTEGER IdleTime;ULONG ReadCount;ULONG WriteCount;ULONG QueueDepth;ULONG SplitCount;LARGE_INTEGER QueryTime;ULONG StorageDeviceNumber;WCHAR StorageManagerName[8];};
struct _EVENT_DESCRIPTOR {USHORT Id;UCHAR Version;UCHAR Channel;UCHAR Level;UCHAR Opcode;USHORT Task;ULONGLONG Keyword;};
struct _FCP_GET_RESPONSE {NODE_ADDRESS NodeAddress;ULONG Length;PFCP_FRAME Frame;};
struct _FCP_SEND_REQUEST {NODE_ADDRESS NodeAddress;ULONG Length;PFCP_FRAME Frame;};
struct _FILE_PREFETCH_EX {ULONG Type;ULONG Count;PVOID Context;ULONGLONG Prefetch[1];};
struct _HARDWARE_COUNTER {HARDWARE_COUNTER_TYPE Type;ULONG Reserved;ULONG64 Index;};
struct _IMAGE_DEBUG_MISC {ULONG DataType;ULONG Length;BOOLEAN Unicode;UCHAR Reserved[3];UCHAR Data[1];};
struct _IMAGE_NT_HEADERS {ULONG Signature;IMAGE_FILE_HEADER FileHeader;IMAGE_OPTIONAL_HEADER32 OptionalHeader;};
struct _IMAGE_RELOCATION {union _IMAGE_RELOCATION___B304133DF5C7CCD398D50216E2E397C0 u;ULONG SymbolTableIndex;USHORT Type;};
struct _IMAGE_VXD_HEADER {USHORT e32_magic;UCHAR e32_border;UCHAR e32_worder;ULONG e32_level;USHORT e32_cpu;USHORT e32_os;ULONG e32_ver;ULONG e32_mflags;ULONG e32_mpages;ULONG e32_startobj;ULONG e32_eip;ULONG e32_stackobj;ULONG e32_esp;ULONG e32_pagesize;ULONG e32_lastpagesize;ULONG e32_fixupsize;ULONG e32_fixupsum;ULONG e32_ldrsize;ULONG e32_ldrsum;ULONG e32_objtab;ULONG e32_objcnt;ULONG e32_objmap;ULONG e32_itermap;ULONG e32_rsrctab;ULONG e32_rsrccnt;ULONG e32_restab;ULONG e32_enttab;ULONG e32_dirtab;ULONG e32_dircnt;ULONG e32_fpagetab;ULONG e32_frectab;ULONG e32_impmod;ULONG e32_impmodcnt;ULONG e32_impproc;ULONG e32_pagesum;ULONG e32_datapage;ULONG e32_preload;ULONG e32_nrestab;ULONG e32_cbnrestab;ULONG e32_nressum;ULONG e32_autodata;ULONG e32_debuginfo;ULONG e32_debuglen;ULONG e32_instpreload;ULONG e32_instdemand;ULONG e32_heapsize;UCHAR e32_res3[12];ULONG e32_winresoff;ULONG e32_winreslen;USHORT e32_devid;USHORT e32_ddkver;};
struct _IO_RESOURCE_LIST {USHORT Version;USHORT Revision;ULONG Count;IO_RESOURCE_DESCRIPTOR Descriptors[1];};
struct _ISCSI_IP_Address {ULONG Type;ULONG IpV4Address;UCHAR IpV6Address[16];ULONG IpV6FlowInfo;ULONG IpV6ScopeId;WCHAR TextAddress[257];};
struct _IdleAccountingEx {ULONG StateCount;ULONG TotalTransitions;ULONG ResetCount;ULONGLONG StartTime;IdleStateAccountingEx State[1];};
struct _KSM_BDA_PIN_PAIR {KSMETHOD Method;_KSM_BDA_PIN_PAIR___F2C15BE15B02E5D4E08CDF00E238673A __anonymous0;_KSM_BDA_PIN_PAIR___54CD25B4E687557DB78A3697AAB04510 __anonymous1;};
struct _KSPROPERTY_SPHLI {USHORT HLISS;USHORT Reserved;ULONG StartPTM;ULONG EndPTM;USHORT StartX;USHORT StartY;USHORT StopX;USHORT StopY;KS_COLCON ColCon;};
struct _KernelIdleStates {ULONG Type;ULONG Count;ULONG TargetState;ULONG OldState;ULONGLONG TargetProcessors;KernelIdleState State[1];};
struct _LBA_FILTER_TABLE {ULONG StructSize;BOOLEAN GlobalReadLock;LONG Reserved1;BOOLEAN GlobalWriteLock;LONG Reserved2;ULONG LbaFilterCount;ULONG LbaFilterSize;ULONG LbaFiltersOffset;};
struct _MSNdis_PortArray {MSNdis_ObjectHeader Header;ULONG NumberOfPorts;ULONG OffsetFirstPort;ULONG ElementSize;MSNdis_PortChar Port[1];};
struct _MSV1_0_S4U_LOGON {MSV1_0_LOGON_SUBMIT_TYPE MessageType;ULONG Flags;UNICODE_STRING UserPrincipalName;UNICODE_STRING DomainName;};
struct _NDIS_TAPI_ACCEPT {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulUserUserInfoSize;UCHAR UserUserInfo[1];};
struct _NDIS_TAPI_ANSWER {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulUserUserInfoSize;UCHAR UserUserInfo[1];};
struct _PCMETHOD_REQUEST {PUNKNOWN MajorTarget;PUNKNOWN MinorTarget;ULONG Node; PCMETHOD_ITEM *MethodItem;ULONG Verb;};
struct _PMI_CAPABILITIES {ULONG Version;ULONG Size;PMI_CAPABILITIES_TYPE CapabilityType;union _PMI_CAPABILITIES___5717254535A888947B89412363774281 Capabilities;};
struct _SENDCMDOUTPARAMS {ULONG cBufferSize;DRIVERSTATUS DriverStatus;UCHAR bBuffer[1];};
struct _SYSTEM_ALARM_ACE {ACE_HEADER Header;ACCESS_MASK Mask;ULONG SidStart;};
struct _SYSTEM_AUDIT_ACE {ACE_HEADER Header;ACCESS_MASK Mask;ULONG SidStart;};
struct _WSK_REGISTRATION {ULONGLONG ReservedRegistrationState;PVOID ReservedRegistrationContext;KSPIN_LOCK ReservedRegistrationLock;};
struct _wfinddata64i32_t {unsigned int attrib;__time64_t time_create;__time64_t time_access;__time64_t time_write;_fsize_t size;unsigned short name[260];};
struct drmwaveformat_tag {WAVEFORMATEX wfx;WORD wReserved;ULONG ulContentId;WAVEFORMATEX wfxSecure;};
struct heaacwaveinfo_tag {WAVEFORMATEX wfx;WORD wPayloadType;WORD wAudioProfileLevelIndication;WORD wStructType;WORD wReserved1;DWORD dwReserved2;};
typedef PBUS_HANDLER ( *pHalHandlerForBus)(INTERFACE_TYPE InterfaceType, ULONG BusNumber);
struct DOT11_BSSID_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_MAC_ADDRESS BSSIDs[1];};
struct DOT11_BYTE_ARRAY {NDIS_OBJECT_HEADER Header;ULONG uNumOfBytes;ULONG uTotalNumOfBytes;UCHAR ucBuffer[1];};
struct DOT11_PMKID_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_PMKID_ENTRY PMKIDs[1];};
typedef NTSTATUS  DXGKDDI_RENDERKM(IN_CONST_HANDLE hContext, INOUT_PDXGKARG_RENDER pRenderKmArgs);
typedef BOOLEAN (*IDE_CHANNEL_INIT)(PVOID ChannelExtension, PIDE_CHANNEL_INTERFACE ChannelInterface, PVOID InitContext);
typedef NDIS_STATUS MINIPORT_PNP_IRP(NDIS_HANDLE MiniportAddDeviceContext, PIRP Irp);
typedef NDIS_STATUS MINIPORT_RESTART(NDIS_HANDLE MiniportAdapterContext, PNDIS_MINIPORT_RESTART_PARAMETERS RestartParameters);
typedef PSDP_NODE (*PCREATENODEINT16)(SHORT sVal, ULONG tag);
typedef PSDP_NODE (*PCREATENODEINT32)(LONG lVal, ULONG tag);
typedef PSDP_NODE (*PCREATENODEINT64)(LONGLONG llVal, ULONG tag);
typedef PSDP_NODE (*PCREATENODEUINT8)(UCHAR ucVal, ULONG tag);
typedef BOOLEAN (*PFNKSCANCELTIMER)(PVOID Context, PKTIMER Timer);
typedef NTSTATUS (*PFREE_DMA_BUFFER)(PVOID context, HANDLE Handle);
typedef NTSTATUS (*PFREE_DMA_ENGINE)(PVOID context, HANDLE Handle);
typedef VP_STATUS (*PINT10_CALL_BIOS)(PVOID Context, PINT10_BIOS_ARGUMENTS BiosArguments);
typedef NTSTATUS VPCI_WRITE_BLOCK(PVOID Context, ULONG BlockId, PVOID Buffer, ULONG Length);
struct _ACPI_MSCT_ENTRY {UCHAR Revision;UCHAR Length;ULONG DomainIdRangeLow;ULONG DomainIdRangeHigh;ULONG ProcessorCapacity;ULONG64 MemoryCapacity;};
struct _CDROM_SET_SPEED {CDROM_SPEED_REQUEST RequestType;USHORT ReadSpeed;USHORT WriteSpeed;WRITE_ROTATION RotationControl;};
struct _CIP_NOTIFY_INFO {HANDLE hConnect;PVOID Context;PCIP_FRAME Frame;};
struct _CMP_NOTIFY_INFO {HANDLE hPlug;AV_PCR Pcr;PVOID Context;};
struct _CONTROLLER_INFO {PDEVICE_OBJECT DeviceObject;CONTROLLER_IDS Identifier;ULONG State;};
struct _DOT11_UPDATE_IE {DOT11_UPDATE_IE_OP dot11UpdateIEOp;ULONG uBufferLength;UCHAR ucBuffer[1];};
struct _DXGK_START_INFO {ULONG RequiredDmaQueueEntry;GUID AdapterGuid;LUID AdapterLuid;};
struct _FCP_GET_REQUEST {NODE_ADDRESS NodeAddress;ULONG Length;PFCP_FRAME Frame;};
struct _HBAFCPScsiEntry {HBAFCPID FCPId;UCHAR Luid[256];HBAScsiID ScsiId;};
struct _HID_XFER_PACKET {PUCHAR reportBuffer;ULONG reportBufferLen;UCHAR reportId;};
struct _KSFILTERFACTORY { KSFILTER_DESCRIPTOR *FilterDescriptor;KSOBJECT_BAG Bag;PVOID Context;};
struct _KernelPerfState {ULONG Frequency;ULONG Power;UCHAR PercentFrequency;UCHAR IncreaseLevel;UCHAR DecreaseLevel;UCHAR Type;ULONG IncreaseTime;ULONG DecreaseTime;ULONGLONG Control;ULONGLONG Status;ULONG HitCount;ULONG Reserved1;ULONGLONG Reserved2;ULONGLONG Reserved3;};
struct _MPIO_EventEntry {ULONGLONG TimeStamp;ULONG Severity;WCHAR Component[64];WCHAR EventDescription[64];};
struct _MSNdis_PortChar {MSNdis_ObjectHeader Header;ULONG PortNumber;ULONG Flags;ULONG Type;ULONG MediaConnectState;ULONGLONG XmitLinkSpeed;ULONGLONG RcvLinkSpeed;ULONG Direction;ULONG SendControlState;ULONG RcvControlState;ULONG SendAuthorizationState;ULONG RcvAuthorizationState;};
struct _NABTSFEC_BUFFER {ULONG dataSize;USHORT groupID;USHORT Reserved;UCHAR data[448];};
struct _NDIS_OPER_STATE {NDIS_OBJECT_HEADER Header;NET_IF_OPER_STATUS OperationalStatus;ULONG OperationalStatusFlags;};
struct _NDIS_PORT_ARRAY {NDIS_OBJECT_HEADER Header;ULONG NumberOfPorts;ULONG OffsetFirstPort;ULONG ElementSize;NDIS_PORT_CHARACTERISTICS Ports[1];};
struct _PROCLOCALX2APIC {UCHAR Type;UCHAR Length;USHORT Reserved;ULONG APICID;ULONG Flags;ULONG ACPIProcessorID;};
struct _SENDCMDINPARAMS {ULONG cBufferSize;IDEREGS irDriveRegs;UCHAR bDriveNumber;UCHAR bReserved[3];ULONG dwReserved[4];UCHAR bBuffer[1];};
struct _SYSENV_VARIABLE {GUID VendorGuid;ULONG VariableNameLength;WCHAR VariableName[1];};
struct _TAPE_STATISTICS {ULONG Version;ULONG Flags;LARGE_INTEGER RecoveredWrites;LARGE_INTEGER UnrecoveredWrites;LARGE_INTEGER RecoveredReads;LARGE_INTEGER UnrecoveredReads;UCHAR CompressionRatioReads;UCHAR CompressionRatioWrites;};
struct _TDI_ADDRESS_IPX {ULONG NetworkAddress;UCHAR NodeAddress[6];USHORT Socket;};
union _USB_PORT_CHANGE {USHORT AsUshort16;USB_20_PORT_CHANGE Usb20PortChange;USB_30_PORT_CHANGE Usb30PortChange;};
union _USB_PORT_STATUS {USHORT AsUshort16;USB_20_PORT_STATUS Usb20PortStatus;USB_30_PORT_STATUS Usb30PortStatus;};
struct _VIDEOPARAMETERS {GUID Guid;ULONG dwOffset;ULONG dwCommand;ULONG dwFlags;ULONG dwMode;ULONG dwTVStandard;ULONG dwAvailableModes;ULONG dwAvailableTVStandard;ULONG dwFlickerFilter;ULONG dwOverScanX;ULONG dwOverScanY;ULONG dwMaxUnscaledX;ULONG dwMaxUnscaledY;ULONG dwPositionX;ULONG dwPositionY;ULONG dwBrightness;ULONG dwContrast;ULONG dwCPType;ULONG dwCPCommand;ULONG dwCPStandard;ULONG dwCPKey;ULONG bCP_APSTriggerBits;UCHAR bOEMCopyProtection[256];};
struct _WWAN_PIN_ACTION {WWAN_PIN_TYPE PinType;WWAN_PIN_OPERATION PinOperation;WCHAR Pin[17];WCHAR NewPin[17];};
struct _WWAN_USSD_EVENT {WWAN_USSD_EVENT_TYPE EventType;WWAN_USSD_SESSION_STATE SessionState;WWAN_USSD_STRING UssdString;};
typedef PVOID (*pHalGetAcpiTable)(ULONG Signature, PCSTR OemId, PCSTR OemTableId);
typedef NTSTATUS (*pHalMirrorVerify)(PHYSICAL_ADDRESS PhysicalAddress, LARGE_INTEGER NumberOfBytes);
struct CM_Power_Data_s {ULONG PD_Size;DEVICE_POWER_STATE PD_MostRecentPowerState;ULONG PD_Capabilities;ULONG PD_D1Latency;ULONG PD_D2Latency;ULONG PD_D3Latency;DEVICE_POWER_STATE PD_PowerStateMapping[7];SYSTEM_POWER_STATE PD_DeepestSystemWake;};
struct DOT11_SSID_LIST {NDIS_OBJECT_HEADER Header;ULONG uNumOfEntries;ULONG uTotalNumOfEntries;DOT11_SSID SSIDs[1];};
typedef NTSTATUS  DXGKDDI_PRESENT(IN_CONST_HANDLE hContext, INOUT_PDXGKARG_PRESENT pPresent);
typedef void HW_STATE_CHANGE(PVOID HwDeviceExtension, PVOID Context, SHORT AddressType, PVOID Address, ULONG Status);
typedef SCSI_UNIT_CONTROL_STATUS HW_UNIT_CONTROL(PVOID DeviceExtension, SCSI_UNIT_CONTROL_TYPE ControlType, PVOID Parameters);
typedef NTSTATUS LLDP_SET_CONFIG(HMSAP MsapHandle, PLLDP_ADMIN_CONFIG Config);
typedef PSDP_NODE (*PCREATENODEINT8)(CHAR cVal, ULONG tag);
typedef void (*PGETNEXTELEMENT)(PUCHAR Stream, ULONG StreamSize, PUCHAR CurrentElement, PUCHAR *NextElement, PULONG NextElementSize);
typedef void ( *PIO_APC_ROUTINE)(PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG Reserved);
typedef NTSTATUS VPCI_READ_BLOCK(PVOID Context, ULONG BlockId, PVOID Buffer, ULONG Length);
struct _CONTROLLER_IDS {STORAGE_IDENTIFIER_CODE_SET Type;ULONG Length;UCHAR SerialNumber[32];};
struct _DISK_HISTOGRAM {LARGE_INTEGER DiskSize;LARGE_INTEGER Start;LARGE_INTEGER End;LARGE_INTEGER Average;LARGE_INTEGER AverageRead;LARGE_INTEGER AverageWrite;ULONG Granularity;ULONG Size;ULONG ReadCount;ULONG WriteCount;PHISTOGRAM_BUCKET Histogram;};
struct _DXGKARG_ESCAPE {HANDLE hDevice;D3DDDI_ESCAPEFLAGS Flags;void *pPrivateDriverData;UINT PrivateDriverDataSize;HANDLE hContext;};
struct _ENUM_PDO_ENTRY {UCHAR type;UCHAR state;UCHAR capabilities;ULONG ulSTID;UCHAR bSpecificationMajor;UCHAR bSpecificationMinor;UCHAR bImplementationMajor;UCHAR bImplementationMinor;WCHAR wszDeviceInstancePath[521];};
struct _HID_DESCRIPTOR {UCHAR bLength;UCHAR bDescriptorType;USHORT bcdHID;UCHAR bCountry;UCHAR bNumDescriptors;struct _HID_DESCRIPTOR___HID_DESCRIPTOR_DESC_LIST DescriptorList[1];};
struct _IR_DEV_CAPS_V2 {_IR_DEV_CAPS __anonymous0;ULONG_PTR WakeProtocols;WCHAR TunerPnpId[256];};
struct _IdleAccounting {ULONG StateCount;ULONG TotalTransitions;ULONG ResetCount;ULONGLONG StartTime;IdleStateAccounting State[1];};
struct _KSGOP_USERDATA {ULONG sc;ULONG reserved1;BYTE cFields;CHAR l21Data[3];};
struct _KSM_BDA_BUFFER {KSM_NODE NodeMethod;ULONG ulBufferSize;BYTE argbBuffer[1];};
struct _MAPPED_ADDRESS {struct _MAPPED_ADDRESS *NextMappedAddress;PVOID MappedAddress;ULONG NumberOfBytes;LARGE_INTEGER IoAddress;ULONG BusNumber;};
struct _NDIS_DMA_BLOCK {PVOID MapRegisterBase;KEVENT AllocationEvent;PVOID SystemAdapterObject;PVOID Miniport;BOOLEAN InProgress;};
struct _NDIS_TAPI_DIAL {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulDestAddressSize;CHAR szDestAddress[1];};
struct _NDIS_TAPI_DROP {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulUserUserInfoSize;UCHAR UserUserInfo[1];};
struct _NDIS_TAPI_OPEN {ULONG ulRequestID;ULONG ulDeviceID;HTAPI_LINE htLine;HDRV_LINE hdLine;};
struct _NDIS_WORK_ITEM {PVOID Context;NDIS_PROC Routine;UCHAR WrapperReserved[32];};
struct _PROCLOCALSAPIC {UCHAR Type;UCHAR Length;UCHAR ACPIProcessorID;UCHAR APICID;UCHAR APICEID;UCHAR Reserved[3];ULONG Flags;ULONG ACPIProcessorUIDInteger;CHAR ACPIProcessorUIDString[1];};
struct _STOR_ADDR_BTL8 {USHORT Type;USHORT Port;ULONG AddressLength;UCHAR Path;UCHAR Target;UCHAR Lun;UCHAR Reserved;};
struct _TDI_ADDRESS_IP {USHORT sin_port;ULONG in_addr;UCHAR sin_zero[8];};
struct _TDI_ADDRESS_NS {ULONG NetworkAddress;UCHAR NodeAddress[6];USHORT Socket;};
struct _TXFS_MODIFY_RM {ULONG Flags;ULONG LogContainerCountMax;ULONG LogContainerCountMin;ULONG LogContainerCount;ULONG LogGrowthIncrement;ULONG LogAutoShrinkPercentage;ULONGLONG Reserved;USHORT LoggingMode;};
struct _WWAN_PROVIDER2 {WWAN_PROVIDER Provider;WWAN_CELLULAR_CLASS WwanCellularClass;ULONG Rssi;ULONG ErrorRate;};
struct _XVARIABLE_NAME {ULONG NextEntryOffset;GUID VendorGuid;WCHAR Name[1];};
struct __RAW_READ_INFO {LARGE_INTEGER DiskOffset;ULONG SectorCount;TRACK_MODE_TYPE TrackMode;};
typedef NTSTATUS  DXGKDDI_ESCAPE(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_ESCAPE pEscape);
typedef NTSTATUS  DXGKDDI_RENDER(IN_CONST_HANDLE hContext, INOUT_PDXGKARG_RENDER pRender);
typedef NDIS_STATUS FILTER_RESTART(NDIS_HANDLE FilterModuleContext, PNDIS_FILTER_RESTART_PARAMETERS RestartParameters);
typedef BOOLEAN (*IDE_HW_BUILDIO)(PVOID ChannelExtension, PIDE_REQUEST_BLOCK Irb);
typedef BOOLEAN (*IDE_HW_CONTROL)(PVOID ChannelExtension, IDE_CONTROL_ACTION ControlAction, PVOID Parameters);
typedef BOOLEAN (*IDE_HW_STARTIO)(PVOID ChannelExtension, PIDE_REQUEST_BLOCK Irb);
typedef NDIS_STATUS MINIPORT_PAUSE(NDIS_HANDLE MiniportAdapterContext, PNDIS_MINIPORT_PAUSE_PARAMETERS PauseParameters);
typedef BOOLEAN PCMCIA_SET_VPP(PVOID Context, UCHAR VppLevel);
typedef PSDP_NODE (*PCREATENODEURL)(PCHAR url, ULONG urlLength, ULONG tag);
typedef NTSTATUS (*PFNKSDEVICEIRP)(PKSDEVICE Device, PIRP Irp);
typedef NTSTATUS (*PFNKSFILTERIRP)(PKSFILTER Filter, PIRP Irp);
typedef NTSTATUS (*PREPLACE_BEGIN)(PPNP_REPLACE_PARAMETERS Parameters, PVOID *Context);
struct _BDA_GDDS_DATA {PBDARESULT lResult;ULONG ulDataLength;ULONG ulPercentageProgress;BYTE argbData[1];};
struct _BRB_L2CA_PING {BRB_HEADER Hdr;BTH_ADDR BtAddress;UCHAR PingRequestLength;UCHAR PingRequestData[44];UCHAR PingResponseLength;UCHAR PingResponseData[44];};
struct _DISK_GEOMETRY {LARGE_INTEGER Cylinders;MEDIA_TYPE MediaType;ULONG TracksPerCylinder;ULONG SectorsPerTrack;ULONG BytesPerSector;};
struct _MEMORY_REGION {PUCHAR VirtualBase;PHYSICAL_ADDRESS PhysicalBase;ULONG Length;};
struct _MODE_CAP_PAGE {MODE_PARAMETER_HEADER ParameterListHeader;MODE_PARAMETER_BLOCK ParameterListBlock;MODE_CAPABILITIES_PAGE CapabilitiesPage;};
struct _OUTPUT_PACKET {PUCHAR Bytes;ULONG CurrentByte;ULONG ByteCount;TRANSMIT_STATE State;};
union _SOCKADDR_INET {SOCKADDR_IN Ipv4;SOCKADDR_IN6 Ipv6;ADDRESS_FAMILY si_family;};
struct _WWAN_PIN_DESC {WWAN_PIN_MODE PinMode;WWAN_PIN_FORMAT PinFormat;ULONG PinLengthMin;ULONG PinLengthMax;};
struct _WWAN_PIN_INFO {WWAN_PIN_TYPE PinType;WWAN_PIN_STATE PinState;ULONG AttemptsRemaining;};
struct _wfinddata32_t {unsigned int attrib;__time32_t time_create;__time32_t time_access;__time32_t time_write;_fsize_t size;unsigned short name[260];};
typedef void ( *pHalExamineMBR)(PDEVICE_OBJECT DeviceObject, ULONG SectorSize, ULONG MBRTypeIdentifier, PVOID *Buffer);
typedef NTSTATUS  DXGKDDI_PATCH(IN_CONST_HANDLE hAdapter, IN_CONST_PDXGKARG_PATCH pPatch);
typedef NDIS_STATUS FILTER_ATTACH(NDIS_HANDLE NdisFilterHandle, NDIS_HANDLE FilterDriverContext, PNDIS_FILTER_ATTACH_PARAMETERS AttachParameters);
typedef NTSTATUS LLDP_SET_TLVS(HMSAP MsapHandle, PLLDP_TLV_ARRAY Tlvs);
typedef BOOLEAN ( *PAGP_SET_RATE)(PVOID HwDeviceExtension, ULONG AgpRate);
typedef NTSTATUS (*PFNKSADDEVENT)(PIRP Irp, PKSEVENTDATA EventData, struct _KSEVENT_ENTRY *EventEntry);
typedef NTSTATUS ( *PHIDP_GETCAPS)(PHIDP_PREPARSED_DATA PreparsedData, PHIDP_CAPS Capabilities);
typedef NTSTATUS (*PSFFPROT_TRIM)(PVOID Context, PVOID DataSetRanges, ULONG DataSetRangesCount);
struct _DISK_LOGGING {UCHAR Function;PVOID BufferAddress;ULONG BufferSize;};
struct _IO_NMISOURCE {UCHAR Type;UCHAR Length;USHORT Flags;ULONG GlobalSystemInterruptVector;};
struct _NABTS_BUFFER {VBICODECFILTERING_SCANLINES ScanlinesRequested;LONGLONG PictureNumber;NABTS_BUFFER_LINE NabtsLines[11];};
struct _NPI_MODULEID {USHORT Length;NPI_MODULEID_TYPE Type;_NPI_MODULEID___CBDDAE44958519F00C94596B49D418BE __anonymous0;};
struct _STOR_ADDRESS {USHORT Type;USHORT Port;ULONG AddressLength;UCHAR AddressData[1];};
struct _TEXTUAL_LEAF {USHORT TL_CRC;USHORT TL_Length;ULONG TL_Spec_Id;ULONG TL_Language_Id;UCHAR TL_Data;};
struct _TOPOLOGY_MAP {USHORT TOP_Length;USHORT TOP_CRC;ULONG TOP_Generation;USHORT TOP_Node_Count;USHORT TOP_Self_ID_Count;SELF_ID TOP_Self_ID_Array[1];};
struct nd_opt_rd_hdr {UINT8 nd_opt_rh_type;UINT8 nd_opt_rh_len;UINT16 nd_opt_rh_reserved1;UINT32 nd_opt_rh_reserved2;};
typedef NDIS_STATUS FILTER_PAUSE(NDIS_HANDLE FilterModuleContext, PNDIS_FILTER_PAUSE_PARAMETERS PauseParameters);
typedef BOOLEAN HW_RESET_BUS(PVOID DeviceExtension, ULONG PathId);
typedef void (*PEXECUTE_DMA)(PVOID HwDeviceExtension, PVP_DMA_ADAPTER VpDmaAdapter, PVP_SCATTER_GATHER_LIST SGList, PVOID Context);
typedef NTSTATUS (*PNP_CALLBACK)(PDEVICE_OBJECT DeviceObject, PIRP Irp);
typedef NTSTATUS ( *PRX_DISPATCH)(PRX_CONTEXT RxContext, PIRP Irp);
struct _ATM_ADDRESS {ATM_ADDRESSTYPE AddressType;ULONG NumberOfDigits;UCHAR Address[20];};
struct _DDC_CONTROL {ULONG Size;I2C_CALLBACKS I2CCallbacks;UCHAR EdidSegment;};
struct _FBPT_RECORD {FBPT_RECORD_HEADER RecordHeader;ULONG Reserved;ULONGLONG ResetEnd;ULONGLONG LoadImageStart;ULONGLONG StartImageStart;ULONGLONG ExitBootServicesEntry;ULONGLONG ExitBootServicesExit;};
struct _GPIOControl {ULONG Command;ULONG Flags;ULONG dwCookie;ULONG Status;ULONG nBytes;ULONG nBufferSize;ULONG nPins;UCHAR *Pins;UCHAR *Buffer;void (*AsynchCompleteCallback)(UCHAR *Buffer);GUID PrivateInterfaceType;void (*PrivateInterface)();};
struct _INQUIRYDATA {unsigned char DeviceType : 5;unsigned char DeviceTypeQualifier : 3;unsigned char DeviceTypeModifier : 7;unsigned char RemovableMedia : 1;_INQUIRYDATA___57A8C0293E1F2A67A1B3BE29EFC0DD2E __anonymous0;unsigned char ResponseDataFormat : 4;unsigned char HiSupport : 1;unsigned char NormACA : 1;unsigned char TerminateTask : 1;unsigned char AERC : 1;UCHAR AdditionalLength;UCHAR Reserved;unsigned char Addr16 : 1;unsigned char Addr32 : 1;unsigned char AckReqQ : 1;unsigned char MediumChanger : 1;unsigned char MultiPort : 1;unsigned char ReservedBit2 : 1;unsigned char EnclosureServices : 1;unsigned char ReservedBit3 : 1;unsigned char SoftReset : 1;unsigned char CommandQueue : 1;unsigned char TransferDisable : 1;unsigned char LinkedCommands : 1;unsigned char Synchronous : 1;unsigned char Wide16Bit : 1;unsigned char Wide32Bit : 1;unsigned char RelativeAddressing : 1;UCHAR VendorId[8];UCHAR ProductId[16];UCHAR ProductRevisionLevel[4];UCHAR VendorSpecific[20];UCHAR Reserved3[2];VERSION_DESCRIPTOR VersionDescriptors[8];UCHAR Reserved4[30];};
struct _KSM_BDA_PIN {KSMETHOD Method;_KSM_BDA_PIN___E33ABE1885360AB30BA4739A3C7D59A2 __anonymous0;ULONG Reserved;};
struct _SRB_HISTORY {ULONG_PTR ClassDriverUse[4];ULONG TotalHistoryCount;ULONG UsedHistoryCount;SRB_HISTORY_ITEM History[1];};
struct _TDI_REQUEST {union _TDI_REQUEST___4EEE655D8D7CBB31716A34162394170F Handle;PVOID RequestNotifyObject;PVOID RequestContext;TDI_STATUS TdiStatus;};
struct _VENDOR_ATTR {struct _VENDOR_ATTR___7FDDA7E13B97E7F637DB452F6613430E VendorName;struct _VENDOR_ATTR___7FDDA7E13B97E7F637DB452F6613430E IfdType;ULONG UnitNo;struct _VENDOR_ATTR___2AE9AD3FAE8157A8CA711EA8B2DDE80C IfdVersion;struct _VENDOR_ATTR___7FDDA7E13B97E7F637DB452F6613430E IfdSerialNo;ULONG Reserved[25];};
struct _wfinddata_t {unsigned int attrib;time_t time_create;time_t time_access;time_t time_write;_fsize_t size;unsigned short name[260];};
struct group_filter {ULONG gf_interface;SOCKADDR_STORAGE gf_group;MULTICAST_MODE_TYPE gf_fmode;ULONG gf_numsrc;SOCKADDR_STORAGE gf_slist[1];};
typedef NTSTATUS (*PFNKSPINIRP)(PKSPIN Pin, PIRP Irp);
struct _BDA_BUFFER {PBDARESULT lResult;ULONG ulBufferSize;BYTE argbBuffer[1];};
struct _BDA_STRING {PBDARESULT lResult;ULONG ulStringSize;BYTE argbString[1];};
struct _DICTIONARY {ULONGLONG Signature;PDICTIONARY_HEADER List;KSPIN_LOCK SpinLock;};
struct _DS3DVECTOR {_DS3DVECTOR___C7D9B5A2358E86AF5EA4461ED5800501 __anonymous0;_DS3DVECTOR___4C8BE1C25D9187060DF6575EC0B5A14F __anonymous1;_DS3DVECTOR___1C324E33BC6F74D1A02BB1B088C4590A __anonymous2;};
struct _GTDT_TABLE {DESCRIPTION_HEADER Header;ULONGLONG MemoryMappedPhysicalAddress;ULONG GlobalFlags;ULONG SecurePhysicalTimerGsiv;ULONG SecurePhysicalTimerFlags;ULONG NonSecurePhysicalTimerGsiv;ULONG NonSecurePhysicalTimerFlags;ULONG VirtualTimerEventGsiv;ULONG VirtualTimerEventFlags;ULONG NonSecurePhysicalTimer2Gsiv;ULONG NonSecurePhysicalTimer2Flags;};
struct _ISA_VECTOR {UCHAR Type;UCHAR Length;UCHAR Bus;UCHAR Source;ULONG GlobalSystemInterruptVector;USHORT Flags;};
struct _MCFG_TABLE {DESCRIPTION_HEADER Header;ULONG Reserved[2];MCFG_TABLE_ENTRY TableEntry[1];};
struct _MLD_HEADER {ICMPV6_HEADER IcmpHeader;UINT16 MaxRespTime;UINT16 Reserved;IN6_ADDR MulticastAddress;};
struct _NDK_RESULT {NTSTATUS Status;ULONG BytesTransferred;PVOID QPContext;PVOID RequestContext;};
struct _PUBLIC_BCB {CSHORT NodeTypeCode;CSHORT NodeByteSize;ULONG MappedLength;LARGE_INTEGER MappedFileOffset;};
struct _SMB_HEADER {UCHAR Protocol[4];UCHAR Command;UCHAR ErrorClass;UCHAR Reserved;USHORT Error;UCHAR Flags;USHORT Flags2;_SMB_HEADER___9087A7F271D3D790A38473E0603644E5 __anonymous0;USHORT Tid;USHORT Pid;USHORT Uid;USHORT Mid;};
struct _SRBEX_DATA {SRBEXDATATYPE Type;ULONG Length;UCHAR Data[1];};
struct ip_msfilter {IN_ADDR imsf_multiaddr;IN_ADDR imsf_interface;MULTICAST_MODE_TYPE imsf_fmode;ULONG imsf_numsrc;IN_ADDR imsf_slist[1];};
typedef NTSTATUS ( *GPIOACCESS)(PDEVICE_OBJECT, PGPIOControl);
typedef BOOLEAN HW_BUILDIO(PVOID DeviceExtension, PSCSI_REQUEST_BLOCK Srb);
typedef BOOLEAN HW_STARTIO(PVOID DeviceExtension, PSCSI_REQUEST_BLOCK Srb);
typedef BOOLEAN (*PI2C_START)(PVOID HwDeviceExtension, PI2C_CALLBACKS I2CCallbacks);
struct _ACPI_MSCT {DESCRIPTION_HEADER Header;ULONG DomainInfoOffset;ULONG ProximityDomainCount;ULONG ClockDomainCount;PHYSICAL_ADDRESS MaximumPhysicalAddress;};
struct _LLDP_MSAP {NET_LUID NetLuid;LLDP_SCOPE Scope;ULONG Reserved;};
struct _NDIS_GUID {GUID Guid;_NDIS_GUID___AB53B9CEEC61ECDF1333D6EBB2604C4E __anonymous0;ULONG Size;ULONG Flags;};
struct _NDIS_PORT {PNDIS_PORT Next;PVOID NdisReserved;PVOID MiniportReserved;PVOID ProtocolReserved;NDIS_PORT_CHARACTERISTICS PortCharacteristics;};
struct _OS_STRING {UCHAR bLength;UCHAR bDescriptorType;WCHAR MicrosoftString[7];UCHAR bVendorCode;_OS_STRING___0FBC153B268A9F44C6FF20F5B96C7697 __anonymous0;};
struct _REFERENCE {KSPIN_LOCK SpinLock;USHORT ReferenceCount;BOOLEAN Closing;};
struct _RIORESULT {LONG Status;ULONG BytesTransferred;ULONGLONG SocketContext;ULONGLONG RequestContext;};
struct _SPEED_MAP {USHORT SPD_Length;USHORT SPD_CRC;ULONG SPD_Generation;UCHAR SPD_Speed_Code[4032];};
struct _stat32i64 {_dev_t st_dev;_ino_t st_ino;unsigned short st_mode;short st_nlink;short st_uid;short st_gid;_dev_t st_rdev;long long st_size;__time32_t st_atime;__time32_t st_mtime;__time32_t st_ctime;};
struct nd_opt_mtu {UINT8 nd_opt_mtu_type;UINT8 nd_opt_mtu_len;UINT16 nd_opt_mtu_reserved;UINT32 nd_opt_mtu_mtu;};
struct HBA_FcpId {HBA_UINT32 FcId;HBA_WWN NodeWWN;HBA_WWN PortWWN;HBA_UINT64 FcpLun;};
typedef NTSTATUS ( *I2CACCESS)(PDEVICE_OBJECT, PI2CControl);
typedef BOOLEAN (*PI2C_STOP)(PVOID HwDeviceExtension, PI2C_CALLBACKS I2CCallbacks);
struct _BASE_MCB {ULONG MaximumPairCount;ULONG PairCount;USHORT PoolType;USHORT Flags;PVOID Mapping;};
struct _FCB_LOCK {struct _FCB_LOCK *Next;LARGE_INTEGER Length;LARGE_INTEGER BytesOffset;ULONG Key;BOOLEAN ExclusiveLock;};
struct _HBAFCPID {ULONG Fcid;UCHAR NodeWWN[8];UCHAR PortWWN[8];ULONGLONG FcpLun;};
struct _KSFILTER { KSFILTER_DESCRIPTOR *Descriptor;KSOBJECT_BAG Bag;PVOID Context;};
struct _LLDP_TLV {LLDP_TLV_TYPE_INFO Type;USHORT Length;ULONG Offset;ULONG Reserved;};
struct _Q2931_IE {Q2931_IE_TYPE IEType;ULONG IELength;UCHAR IE[1];};
struct _CONTEXT {ULONG ContextFlags;ULONG Dr0;ULONG Dr1;ULONG Dr2;ULONG Dr3;ULONG Dr6;ULONG Dr7;FLOATING_SAVE_AREA FloatSave;ULONG SegGs;ULONG SegFs;ULONG SegEs;ULONG SegDs;ULONG Edi;ULONG Esi;ULONG Ebx;ULONG Edx;ULONG Ecx;ULONG Eax;ULONG Ebp;ULONG Eip;ULONG SegCs;ULONG EFlags;ULONG Esp;ULONG SegSs;UCHAR ExtendedRegisters[512];};
struct _IOSAPIC {UCHAR Type;UCHAR Length;UCHAR IOSAPICID;UCHAR Reserved;ULONG SystemVectorBase;ULONG_PTR IOSAPICAddress;};
struct _KSM_PIN {KSMETHOD Method;_KSM_BDA_PIN___E33ABE1885360AB30BA4739A3C7D59A2 __anonymous0;ULONG Reserved;};
struct _RSDT_64 {DESCRIPTION_HEADER Header;ULONG Reserved;ULONG_PTR Tables[1];};
struct _WSK_BUF {PMDL Mdl;ULONG Offset;SIZE_T Length;};
struct _stati64 {_dev_t st_dev;_ino_t st_ino;unsigned short st_mode;short st_nlink;short st_uid;short st_gid;_dev_t st_rdev;long long st_size;time_t st_atime;time_t st_mtime;time_t st_ctime;};
struct _KQUEUE {DISPATCHER_HEADER Header;LIST_ENTRY EntryListHead;ULONG CurrentCount;ULONG MaximumCount;LIST_ENTRY ThreadListHead;};
struct _stat64 {_dev_t st_dev;_ino_t st_ino;unsigned short st_mode;short st_nlink;short st_uid;short st_gid;_dev_t st_rdev;long long st_size;__time64_t st_atime;__time64_t st_mtime;__time64_t st_ctime;};
struct tcp_hdr {UINT16 th_sport;UINT16 th_dport;SEQ_NUM th_seq;SEQ_NUM th_ack;unsigned char th_x2 : 4;unsigned char th_len : 4;UINT8 th_flags;UINT16 th_win;UINT16 th_sum;UINT16 th_urp;};
union _CDB32 {struct _CDB32___CDB32GENERIC CDB32GENERIC;ULONG AsUlong[8];UCHAR AsByte[32];};
struct _ATSR {UCHAR Flags;UCHAR Reserved;USHORT SegmentNumber;DEVICESCOPE DeviceScope[1];};
struct _DMAR {DESCRIPTION_HEADER Header;UCHAR HostAddressWidth;UCHAR Flags;UCHAR Reserved[10];DMARTABLE DMARTables[1];};
struct _EAOP {PGEALIST fpGEAList;PFEALIST fpFEAList;ULONG oError;};
struct _FACS {ULONG Signature;ULONG Length;ULONG HardwareSignature;ULONG pFirmwareWakingVector;ULONG GlobalLock;ULONG Flags;PHYSICAL_ADDRESS x_FirmwareWakingVector;UCHAR version;UCHAR Reserved[31];};
struct _RHSA {USHORT Type;USHORT Length;ULONG ReservedZ;ULONGLONG RegisterBaseAddress;ULONG ProximityDomain;};
struct _MDL {struct _MDL *Next;CSHORT Size;CSHORT MdlFlags;struct _EPROCESS *Process;PVOID MappedSystemVa;PVOID StartVa;ULONG ByteCount;ULONG ByteOffset;};
struct _SID {UCHAR Revision;UCHAR SubAuthorityCount;SID_IDENTIFIER_AUTHORITY IdentifierAuthority;ULONG SubAuthority[1];};
struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___9A42D17D2996B040624A535ABD3DC7B0 {CHANNEL_CONFIG_PARAMETERS_ENHANCED CurrentParams;CHANNEL_CONFIG_PARAMETERS_ENHANCED RequestedParams;CHANNEL_CONFIG_PARAMETERS_ENHANCED RejectedParams;PCO_TYPE UnknownTypes;ULONG NumUnknownTypes;CHANNEL_CONFIG_PARAMETERS_ENHANCED NewRequestParams;USHORT Response;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___A4484C77F207812881C1E1418C2F7952 {HANDLE hAllocation;DXGK_DISCARDCONTENTFLAGS Flags;UINT SegmentId;PHYSICAL_ADDRESS SegmentAddress;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___B23455DF8066A3318DDF1E92BFD72172 {HANDLE hDevice;HANDLE hAllocation;UINT SegmentId;SIZE_T OffsetInPages;SIZE_T NumberOfPages;PHYSICAL_ADDRESS DummyPage;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___B8543B8A5FA03AFF2CFE9331D405A718 {HANDLE hAllocation;SIZE_T FillSize;UINT FillPattern;struct _DXGKARG_BUILDPAGINGBUFFER______B8543B8A5FA03AFF2CFE9331D405A718___34F45DEC358C162226AEB40EE1713239 Destination;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___E1F4249D1557DDD5F3F51CC54703FD4A {HANDLE hAllocation;SIZE_T AllocationOffsetInBytes;SIZE_T FillSizeInBytes;UINT FillPattern;D3DGPU_VIRTUAL_ADDRESS DestinationVirtualAddress;};
struct _COUNTED_REASON_CONTEXT___0169A8C3C5184AFD0045925CDBD9A996___48DC2BE0BFF23344CA7D314FCD6B972D {UNICODE_STRING ResourceFileName;USHORT ResourceReasonId;ULONG StringCount;PUNICODE_STRING ReasonStrings;};
struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___A5682085F38B4530410BC09C233C00C6 {ULONG MinimumVector;ULONG MaximumVector;IRQ_DEVICE_POLICY AffinityPolicy;IRQ_PRIORITY PriorityPolicy;KAFFINITY TargetedProcessors;};
struct _NLB_PUBLIC_IOCTL_INPUT___A898DB159985FE167F7F53788BA32DF7___DD4D914590692A0344DAA3E8E6A718EB {USHORT RequestType;HOOK_IP_ADDRESS ClientIPAddress;USHORT Protocol;BOOLEAN UsePortIndex;_NLB_PUBLIC_IOCTL_INPUT______DD4D914590692A0344DAA3E8E6A718EB___0BF847604AFDCDBF1A158B1DB8767C47 __anonymous0;};
struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___B2B0BA248C92E6A6BDACB67852B2EA97 {CHANNEL_CONFIG_PARAMETERS CurrentParams;CHANNEL_CONFIG_PARAMETERS RequestedParams;CHANNEL_CONFIG_PARAMETERS RejectedParams;PCO_TYPE UnknownTypes;ULONG NumUnknownTypes;CHANNEL_CONFIG_PARAMETERS NewRequestParams;USHORT Response;};
struct DL_TEREDO_ADDRESS_PRV___8AE4EEAF9BFB4C7125F7ADE378B0209F___75452F4916212336117570F081D85C4D {USHORT Flags;USHORT MappedPort;IN_ADDR MappedAddress;IN_ADDR LocalAddress;IF_INDEX InterfaceIndex;USHORT LocalPort;DL_EUI48 DlDestination;};
struct _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C___F3A2277F3846D5D09599391720F7D644 {STORAGE_MEDIA_TYPE MediaType;ULONG MediaCharacteristics;ULONG CurrentBlockSize;STORAGE_BUS_TYPE BusType;union _DEVICE_MEDIA_INFO______F3A2277F3846D5D09599391720F7D644___D22BD4DC823953AE58E358A96C378F3D BusSpecificData;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___0F8D78D040FF3560CA28CFD6A777B9AE {_IO_STACK_LOCATION______0F8D78D040FF3560CA28CFD6A777B9AE___7E80610E1B9C691709D7734F8FEF924B __anonymous0;POWER_STATE_TYPE Type;POWER_STATE State;POWER_ACTION ShutdownType;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___7995DA36ED0214F9D006DCD5B47162D4 { GUID *InterfaceType;USHORT Size;USHORT Version;PINTERFACE Interface;PVOID InterfaceSpecificData;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A966DB415F2680C4FACE19E6D9509309 {PIO_SECURITY_CONTEXT SecurityContext;ULONG Options;USHORT Reserved;USHORT ShareAccess;PMAILSLOT_CREATE_PARAMETERS Parameters;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___AB42F48A787DC1F7A85A7D9222F9ECCF {PIO_SECURITY_CONTEXT SecurityContext;ULONG Options;USHORT Reserved;USHORT ShareAccess;PNAMED_PIPE_CREATE_PARAMETERS Parameters;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___7995DA36ED0214F9D006DCD5B47162D4 { GUID *InterfaceType;USHORT Size;USHORT Version;PINTERFACE Interface;PVOID InterfaceSpecificData;};
struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___8294FE1E339237E736BFFDCB9C6C05F1 {ULONG Flags;PMDL Buffer;RXVBO ByteOffset;ULONG ByteCount;ULONG Key;PNON_PAGED_FCB NonPagedFcb;};
struct _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68___8B54ED8CB39CC03D44DD62F841F64493 {UCHAR BankNumber;UCHAR Reserved2[7];MCI_STATS Status;MCI_ADDR Address;ULONGLONG Misc;};
struct _RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162___0E64B696EDD7DC71B6561395573F3971 {_RX_CONTEXT______0E64B696EDD7DC71B6561395573F3971___6FE7070A58AC6E12D42CE47521BA6502 __anonymous0;PVOID Buffer;_RX_CONTEXT______0E64B696EDD7DC71B6561395573F3971___79EB80B3C82106AE3D5E59FE1F3799E8 __anonymous1;BOOLEAN ReplaceIfExists;BOOLEAN AdvanceOnly;};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___CFEAA99B9132A38F888FE454C8847D59 {ULONG Length;PSID StartSid;PFILE_GET_QUOTA_INFORMATION SidList;ULONG SidListLength;BOOLEAN RestartScan;BOOLEAN ReturnSingleEntry;BOOLEAN IndexSpecified;};
union _DXGKARG_GETSTANDARDALLOCATIONDRIVERDATA___4B54797CDD414360C77500AE5D81FC70 {D3DKMDT_SHAREDPRIMARYSURFACEDATA *pCreateSharedPrimarySurfaceData;D3DKMDT_SHADOWSURFACEDATA *pCreateShadowSurfaceData;D3DKMDT_STAGINGSURFACEDATA *pCreateStagingSurfaceData;D3DKMDT_GDISURFACEDATA *pCreateGdiSurfaceData;};
union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX___293D76B56AB4224063B0E84352A448B8 {PROCESSOR_RELATIONSHIP Processor;NUMA_NODE_RELATIONSHIP NumaNode;CACHE_RELATIONSHIP Cache;GROUP_RELATIONSHIP Group;};
struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_2 {ULONG SocketRegistersBaseAddress;UCHAR CapabilitiesPtr;UCHAR Reserved;USHORT SecondaryStatus;UCHAR PrimaryBus;UCHAR SecondaryBus;UCHAR SubordinateBus;UCHAR SecondaryLatency;struct _PCI_COMMON_HEADER______PCI_HEADER_TYPE_2___BF732D50E3BB202AC9DF9F724DDB36D4 Range[4];UCHAR InterruptLine;UCHAR InterruptPin;USHORT BridgeControl;};
union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088 {struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088___196EE06A2DB656739DF343240CCA5A2C ProcessorCore;struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088___AB3E8D6F5DDFCC0505F425518AD8237E NumaNode;CACHE_DESCRIPTOR Cache;ULONGLONG Reserved[2];};
union _057D959110EF5AD26CCA8DAEC04011D1___18711787946D537D259722AB27BFCBD3 {DEVCAPS Capabilities;ULONG DevPort;ULONG PowerState;WCHAR pawchString[260];DWORD NodeUniqueID[2];};
typedef NTSTATUS ( *DXGKDDI_MONITORFREQUENCYRANGESET_ACQUIRENEXTFREQUENCYRANGEINFO)(IN_CONST_D3DKMDT_HMONITORFREQUENCYRANGESET hMonitorFrequencyRangeSet, IN_CONST_PD3DKMDT_MONITOR_FREQUENCY_RANGE_CONST pMonitorFrequencyRangeInfo, DEREF_OUT_CONST_PPD3DKMDT_MONITOR_FREQUENCY_RANGE ppNextMonitorFrequencyRangeInfo);
struct _DEVICE_MEDIA_INFO______F3A2277F3846D5D09599391720F7D644 {STORAGE_MEDIA_TYPE MediaType;ULONG MediaCharacteristics;ULONG CurrentBlockSize;STORAGE_BUS_TYPE BusType;union _DEVICE_MEDIA_INFO______F3A2277F3846D5D09599391720F7D644___D22BD4DC823953AE58E358A96C378F3D BusSpecificData;};
union _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C {struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___79DCBD39C0DB0D790BAE7BE236DF2C3A GetSetProperty;struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___3474FE5EDFA452AAD9BE6166E926835A DeviceCommand;struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___90DDF8997D261BEC455E3EBCF23FFD67 EraseCommand;struct _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C___28631FC908F7F9A5469B368DB2C2AB28 MmcSoftReset;};
union _CLASS_POWER_CONTEXT___17E0FD5FF75A8E801AD8B6E16645E3EF {CLASS_POWER_DOWN_STATE PowerDown;CLASS_POWER_DOWN_STATE2 PowerDown2;CLASS_POWER_DOWN_STATE3 PowerDown3;CLASS_POWER_UP_STATE PowerUp;};
struct _DOT11_RECEIVED_PROVISION_DISCOVERY_RESPONSE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS TransmitterDeviceAddress;DOT11_MAC_ADDRESS BSSID;DOT11_DIALOG_TOKEN DialogToken;ULONG uIEsOffset;ULONG uIEsLength;};
union _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0 {struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___27183FC11B178907B5D2BB34AFACE7F1 SymbolicLinkReparseBuffer;struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___538BBEAAFB526DA55D87E8D9C61BE453 MountPointReparseBuffer;struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___E4726FB01B43180CB4D608E8FC40A3CF GenericReparseBuffer;struct _FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0___7F2A391463C85579B142CF8A59256159 GenericGUIDReparseBuffer;};
struct _IMAGE_AUX_SYMBOL_EX___0B38B08C56F10253A28FEC508E6080A1 {ULONG Length;USHORT NumberOfRelocations;USHORT NumberOfLinenumbers;ULONG CheckSum;SHORT Number;UCHAR Selection;UCHAR bReserved;SHORT HighNumber;UCHAR rgbReserved[2];};
typedef NTSTATUS ( *DXGKDDI_MONITORDESCRIPTORSET_ACQUIRENEXTDESCRIPTORINFO)(IN_CONST_D3DKMDT_HMONITORDESCRIPTORSET hMonitorDescriptorSet, IN_CONST_PD3DKMDT_MONITOR_DESCRIPTOR_CONST pMonitorDescriptorInfo, DEREF_OUT_CONST_PPD3DKMDT_MONITOR_DESCRIPTOR ppNextMonitorDescriptorInfo);
typedef NTSTATUS DXGKDDI_STOP_DEVICE_AND_RELEASE_POST_DISPLAY_OWNERSHIP(PVOID MiniportDeviceContext, D3DDDI_VIDEO_PRESENT_TARGET_ID TargetId, PDXGK_DISPLAY_INFORMATION DisplayInfo);
struct _DOT11_RECEIVED_GO_NEGOTIATION_CONFIRMATION_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;ULONG uIEsOffset;ULONG uIEsLength;};
union _AAL_PARAMETERS_IE___0FDB8D62C7DBB0B09ABD7E38350DE0B1 {AAL1_PARAMETERS AAL1Parameters;AAL34_PARAMETERS AAL34Parameters;AAL5_PARAMETERS AAL5Parameters;AALUSER_PARAMETERS AALUserParameters;};
struct _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA {ULONG TagIndex;union _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA___DE029D051A7479C614D66B3BC2EAA5D0 Misc;union _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA___DCE4F7C37BB8311C74F011B1C8562952 FcnAry;USHORT TvIndex;};
struct _IMAGE_AUX_SYMBOL___8635EE7233618CADAED4C714D8F85165 {ULONG Length;USHORT NumberOfRelocations;USHORT NumberOfLinenumbers;ULONG CheckSum;SHORT Number;UCHAR Selection;UCHAR bReserved;SHORT HighNumber;};
union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___RESULT_VALUE {UCHAR ResultByteValue;USHORT ResultShortValue;ULONG ResultLongValue;ULONG64 ResultLong64Value;UCHAR ResultByteArrayValue[16];};
union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___FIELD_VALUE {UCHAR FieldByteValue;USHORT FieldShortValue;ULONG FieldLongValue;ULONG64 FieldLong64Value;UCHAR FieldByteArrayValue[16];};
struct _FLT_PARAMETERS___3145899A9181DB98718ECB838F857ECE {PIO_SECURITY_CONTEXT SecurityContext;ULONG Options;USHORT Reserved;USHORT ShareAccess;PVOID Parameters;};
struct _FLT_PARAMETERS___4EA9DD3B1B7070BE9209D6B23D90C430 {SECURITY_INFORMATION SecurityInformation;ULONG Length;PVOID SecurityBuffer;PMDL MdlAddress;};
struct _FLT_PARAMETERS___546594058FF7FFDC9D8C0D4E10864DA8 {ULONG Length;ULONG Key;LARGE_INTEGER ByteOffset;PVOID WriteBuffer;PMDL MdlAddress;};
struct _FLT_PARAMETERS___7BF83C65B01BCAEC150BF48E3913102E {ULONG Length;ULONG Key;LARGE_INTEGER ByteOffset;PVOID ReadBuffer;PMDL MdlAddress;};
struct _NDIS_RECEIVE_QUEUE_ALLOCATION_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_STATUS CompletionStatus;};
struct _DOT11_INCOMING_ASSOC_REQUEST_RECEIVED_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerMacAddr;BOOLEAN bReAssocReq;ULONG uAssocReqOffset;ULONG uAssocReqSize;};
union _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307 {struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___8294FE1E339237E736BFFDCB9C6C05F1 ReadWrite;struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___3158FA256123766910623FA14A28078A Locks;XXCTL_LOWIO_COMPONENT FsCtl;XXCTL_LOWIO_COMPONENT IoCtl;struct _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307___5BC723C225445B2132FC8B685106C35B NotifyChangeDirectory;};
struct _NDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES {NDIS_OBJECT_HEADER Header;PNDIS_HD_SPLIT_ATTRIBUTES HDSplitAttributes;PNDIS_RECEIVE_FILTER_CAPABILITIES HardwareReceiveFilterCapabilities;PNDIS_RECEIVE_FILTER_CAPABILITIES CurrentReceiveFilterCapabilities;PNDIS_NIC_SWITCH_CAPABILITIES HardwareNicSwitchCapabilities;PNDIS_NIC_SWITCH_CAPABILITIES CurrentNicSwitchCapabilities;};
typedef NTSTATUS ( *DXGKDDI_MONITORSOURCEMODESET_ACQUIRENEXTMODEINFO)(IN_CONST_D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet, IN_CONST_PD3DKMDT_MONITOR_SOURCE_MODE_CONST pMonitorSourceModeInfo, DEREF_OUT_CONST_PPD3DKMDT_MONITOR_SOURCE_MODE ppNextMonitorSourceModeInfo);
typedef NTSTATUS (*DXGKDDI_OPM_SET_SIGNING_KEY_AND_SEQUENCE_NUMBERS)(PVOID MiniportDeviceContext, HANDLE ProtectedOutputHandle,  PDXGKMDT_OPM_ENCRYPTED_PARAMETERS EncryptedParameters);
struct _DXGKMDT_OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS {DXGKMDT_OPM_RANDOM_NUMBER rnRandomNumber;GUID guidInformation;ULONG ulSequenceNumber;ULONG cbParametersSize;BYTE abParameters[4056];};
struct _OS_DEP_DATA___950186A194D3C228919DADD735B465AC {BOOLEAN Removed;LONG RefCount;KEVENT RemoveEvent;LIST_ENTRY TagList;};
typedef NTSTATUS ( *DXGKDDI_VIDPNSOURCEMODESET_ACQUIRENEXTMODEINFO)(IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet, IN_CONST_PD3DKMDT_VIDPN_SOURCE_MODE_CONST pVidPnSourceModeInfo, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_SOURCE_MODE ppNextVidPnSourceModeInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPNTARGETMODESET_ACQUIRENEXTMODEINFO)(IN_CONST_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet, IN_CONST_PD3DKMDT_VIDPN_TARGET_MODE_CONST pVidPnTargetModeInfo, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_TARGET_MODE ppNextVidPnTargetModeInfo);
struct _DOT11_RECEIVED_INVITATION_RESPONSE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS TransmitterDeviceAddress;DOT11_MAC_ADDRESS BSSID;DOT11_DIALOG_TOKEN DialogToken;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DXGKMDT_OPM_CONNECTED_HDCP_DEVICE_INFORMATION {DXGKMDT_OPM_RANDOM_NUMBER rnRandomNumber;ULONG ulStatusFlags;ULONG ulHDCPFlags;DXGKMDT_OPM_HDCP_KEY_SELECTION_VECTOR ksvB;BYTE Reserved[11];BYTE Reserved2[16];BYTE Reserved3[16];};
union _DMARTABLE___AE0FC9D9EC7026AF279F43755B1DFE09 {DRHD Drhd;RMRR Rmrr;ATSR Atsr;RHSA Rhsa;};
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD {UCHAR Cdb[16];UCHAR Command[16];ULONGLONG StartTime;ULONGLONG EndTime;ULONG OperationStatus;ULONG OperationError;union _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD___22CA1251EFEEDF866E8610AFFE1B23C4 StackSpecific;};
typedef NTSTATUS ( *PFLT_SECTION_CONFLICT_NOTIFICATION_CALLBACK)(PFLT_INSTANCE Instance, PFLT_CONTEXT SectionContext, PFLT_CALLBACK_DATA Data);
typedef void (*PCLFS_CLIENT_LFF_HANDLER_COMPLETE_CALLBACK)(PLOG_FILE_OBJECT LogFile, NTSTATUS OperationStatus, BOOLEAN LogIsPinned, PVOID ClientData);
struct _D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION {D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_TYPE CopyProtectionType;UINT APSTriggerBits;BYTE OEMCopyProtection[256];D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION_SUPPORT CopyProtectionSupport;};
struct _D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION {D3DKMDT_VIDPN_PRESENT_PATH_SCALING Scaling;D3DKMDT_VIDPN_PRESENT_PATH_SCALING_SUPPORT ScalingSupport;D3DKMDT_VIDPN_PRESENT_PATH_ROTATION Rotation;D3DKMDT_VIDPN_PRESENT_PATH_ROTATION_SUPPORT RotationSupport;};
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_ACQUIRENEXTPATHINFO)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, IN_CONST_PD3DKMDT_VIDPN_PRESENT_PATH_CONST pVidPnPresentPathInfo, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_PRESENT_PATH ppNextVidPnPresentPathInfo);
struct _DOT11_MANUFACTURING_SELF_TEST_SET_PARAMS {DOT11_MANUFACTURING_SELF_TEST_TYPE SelfTestType;ULONG uTestID;ULONG uPinBitMask;PVOID pvContext;ULONG uBufferLength;UCHAR ucBufferIn[1];};
struct _NDIS_OID_REQUEST___REQUEST_DATA___METHOD {NDIS_OID Oid;PVOID InformationBuffer;ULONG InputBufferLength;ULONG OutputBufferLength;ULONG MethodId;UINT BytesWritten;UINT BytesRead;UINT BytesNeeded;};
struct _REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION {PVOID Object;PKEY_VALUE_ENTRY ValueEntries;ULONG EntryCount;PVOID ValueBuffer;PULONG BufferLength;PULONG RequiredBufferLength;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY {ULONGLONG Offset;ULONG NameFlags;LONGLONG FileId;ULONG Reserved1;ULONG Reserved2;LONGLONG Reserved3;WCHAR FileName[1];};
typedef NTSTATUS (*NDK_FN_GET_SHARED_ENDPOINT_LOCAL_ADDRESS)(NDK_SHARED_ENDPOINT *pNdkSharedEndpoint, PSOCKADDR pAddress, ULONG *pAddressLength);
struct DOT11_MANUFACTURING_CALLBACK_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MANUFACTURING_CALLBACK_TYPE dot11ManufacturingCallbackType;ULONG uStatus;PVOID pvContext;};
typedef BOOLEAN (*PStorPortGetMessageInterruptInformation)(PVOID HwDeviceExtension, ULONG MessageId, PMESSAGE_INTERRUPT_INFORMATION InterruptInfo);
struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_RX {BOOLEAN bEnabled;DOT11_BAND Dot11Band;ULONG uChannel;LONG PowerLevel;};
struct _DOT11_MANUFACTURING_FUNCTIONAL_TEST_TX {BOOLEAN bEnable;BOOLEAN bOpenLoop;DOT11_BAND Dot11Band;ULONG uChannel;ULONG uSetPowerLevel;LONG ADCPowerLevel;};
struct _KSM_BDA_WMDRMTUNER_PURCHASEENTITLEMENT {KSM_NODE NodeMethod;ULONG ulDialogRequest;CHAR cLanguage[12];ULONG ulPurchaseTokenLength;BYTE argbDataBuffer[1];};
typedef NTSTATUS ( *PFLT_TRANSACTION_NOTIFICATION_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, PFLT_CONTEXT TransactionContext, ULONG NotificationMask);
typedef NTSTATUS  USB_BUSIFFN_GET_CONTROLLER_INFORMATION(PVOID BusContext, PVOID ControllerInformationBuffer, ULONG ControllerInformationBufferLength, PULONG LengthOfDataCopied);
struct _IPSEC_OFFLOAD_V2_SECURITY_ASSOCIATION {ULONG Flags;IPSEC_OFFLOAD_V2_OPERATION Operation;IPSEC_OFFLOAD_V2_SPI_TYPE Spi;IPSEC_OFFLOAD_V2_ALGORITHM_INFO AuthenticationAlgorithm;IPSEC_OFFLOAD_V2_ALGORITHM_INFO EncryptionAlgorithm;ULONG SequenceNumberHighOrder;};
typedef NTSTATUS (*DXGKDDI_I2C_RECEIVE_DATA_FROM_DISPLAY)(PVOID MiniportDeviceContext, D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId, ULONG SevenBitI2CAddress, ULONG Flags, ULONG DataLength, PVOID Data);
typedef NTSTATUS  USB_BUSIFFN_GET_CONTAINER_ID_FOR_PORT(PVOID BusContext, USHORT PortNumber, LPGUID ContainerId);
struct _NDIS_RECEIVE_FILTER_CLEAR_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_RECEIVE_FILTER_ID FilterId;};
struct _WHEA_PROCESSOR_GENERIC_ERROR_SECTION {WHEA_PROCESSOR_GENERIC_ERROR_SECTION_VALIDBITS ValidBits;UCHAR ProcessorType;UCHAR InstructionSet;UCHAR ErrorType;UCHAR Operation;UCHAR Flags;UCHAR Level;USHORT Reserved;ULONGLONG CPUVersion;UCHAR CPUBrandString[128];ULONGLONG ProcessorId;ULONGLONG TargetAddress;ULONGLONG RequesterId;ULONGLONG ResponderId;ULONGLONG InstructionPointer;};
typedef NTSTATUS (*DXGKDDI_I2C_TRANSMIT_DATA_TO_DISPLAY)(PVOID MiniportDeviceContext, D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId, ULONG SevenBitI2CAddress, ULONG DataLength,  PVOID Data);
typedef NTSTATUS ( *PMRX_CHANGE_BUFFERING_STATE_CALLDOWN)(PRX_CONTEXT RxContext, PMRX_SRV_OPEN SrvOpen, PVOID MRxContext);
typedef NTSTATUS  USB_BUSIFFN_INITIALIZE_USB_DEVICE_EX(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, PUSB_ID_ERROR_INFORMATION IdErrInfo);
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP {DEVICEDUMP_STRUCTURE_VERSION Descriptor;ULONG dwReasonForCollection;UCHAR cDriverName[16];ULONG uiNumRecords;DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD RecordArray[1];};
struct _NDIS_802_11_ASSOCIATION_INFORMATION {ULONG Length;USHORT AvailableRequestFixedIEs;NDIS_802_11_AI_REQFI RequestFixedIEs;ULONG RequestIELength;ULONG OffsetRequestIEs;USHORT AvailableResponseFixedIEs;NDIS_802_11_AI_RESFI ResponseFixedIEs;ULONG ResponseIELength;ULONG OffsetResponseIEs;};
struct _REG_ENUMERATE_VALUE_KEY_INFORMATION {PVOID Object;ULONG Index;KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass;PVOID KeyValueInformation;ULONG Length;PULONG ResultLength;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
typedef NTSTATUS (*PBUILD_MDL_FROM_SCATTER_GATHER_LIST)(PDMA_ADAPTER DmaAdapter, PSCATTER_GATHER_LIST ScatterGather, PMDL OriginalMdl, PMDL *TargetMdl);
struct _DXGK_MULTIPLANE_OVERLAY_VSYNC_INFO {DWORD LayerIndex;BOOL Enabled;PHYSICAL_ADDRESS PhysicalAddress;DXGK_MULTIPLANE_OVERLAY_ATTRIBUTES PlaneAttributes;};
struct _FILTER_VOLUME_STANDARD_INFORMATION {ULONG NextEntryOffset;ULONG Flags;ULONG FrameID;FLT_FILESYSTEM_TYPE FileSystemType;USHORT FilterVolumeNameLength;WCHAR FilterVolumeName[1];};
struct _KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT {KE_PROCESSOR_CHANGE_NOTIFY_STATE State;ULONG NtNumber;NTSTATUS Status;PROCESSOR_NUMBER ProcNumber;};
struct _REG_QUERY_KEY_SECURITY_INFORMATION {PVOID Object;PSECURITY_INFORMATION SecurityInformation;PSECURITY_DESCRIPTOR SecurityDescriptor;PULONG Length;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct DOT11_ASSOCIATION_START_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS MacAddr;DOT11_SSID SSID;ULONG uIHVDataOffset;ULONG uIHVDataSize;};
typedef NTSTATUS ( *PFLT_CALLBACK_DATA_QUEUE_INSERT_IO)(PFLT_CALLBACK_DATA_QUEUE Cbdq, PFLT_CALLBACK_DATA Cbd, PVOID InsertContext);
typedef void ( *PFLT_GET_OPERATION_STATUS_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, PFLT_IO_PARAMETER_BLOCK IopbSnapshot, NTSTATUS OperationStatus, PVOID RequesterContext);
typedef NTSTATUS ( *PFNDRMFORWARDCONTENTTODEVICEOBJECT)(ULONG ContentId, PVOID Reserved, PCDRMFORWARD DrmForward);
typedef NTSTATUS (*PREGISTER_FOR_DEVICE_NOTIFICATIONS)(PDEVICE_OBJECT, PDEVICE_NOTIFY_CALLBACK, PVOID);
typedef NTSTATUS ( *PUSB_BUSIFFN_QUERY_BUS_INFORMATION)(PVOID, ULONG, PVOID, PULONG, PULONG);
struct _ARBITER_QUERY_CONFLICT_PARAMETERS {PDEVICE_OBJECT PhysicalDeviceObject;PIO_RESOURCE_DESCRIPTOR ConflictingResource;PULONG ConflictCount;PARBITER_CONFLICT_INFO *Conflicts;};
struct _CLEAR_CLIENT_STICKINESS_HOOK_INFO {NLB_HOOK_API_VERSION Version; WCHAR *pAdapter;ULONG PortRuleIndex;BOOLEAN BDATeaming;};
struct _DOT11_POWER_MGMT_MODE_STATUS_INFO {NDIS_OBJECT_HEADER Header;DOT11_POWER_MODE PowerSaveMode;ULONG uPowerSaveLevel;DOT11_POWER_MODE_REASON Reason;};
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;LARGE_INTEGER FileId;GUID LockingTransactionId;ULONG TxInfoFlags;WCHAR FileName[1];};
struct _FLT_CREATEFILE_TARGET_ECP_CONTEXT {PFLT_INSTANCE Instance;PFLT_VOLUME Volume;PFLT_FILE_NAME_INFORMATION FileNameInformation;FLT_CREATEFILE_TARGET_FLAGS Flags;};
struct _MSiSCSI_InitiatorNodeFailureEvent {ULONGLONG FailureTime;UCHAR FailureType;WCHAR TargetFailureName[224];ISCSI_IP_Address TargetFailureAddr;};
union _NDIS_PM_WOL_PATTERN___WOL_PATTERN {struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___IPV4_TCP_SYN_WOL_PACKET_PARAMETERS IPv4TcpSynParameters;struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___IPV6_TCP_SYN_WOL_PACKET_PARAMETERS IPv6TcpSynParameters;struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___EAPOL_REQUEST_ID_MESSAGE_WOL_PACKET_PARAMETERS EapolRequestIdMessageParameters;struct _NDIS_PM_WOL_PATTERN___WOL_PATTERN___WOL_BITMAP_PATTERN WoLBitMapPattern;};
struct _TDI_ADDRESS_NETBIOS_UNICODE_EX_XP {USHORT NetbiosNameType;enum eNameBufferType NameBufferType;UNICODE_STRING EndpointName;UNICODE_STRING RemoteName;WCHAR EndpointBuffer[17];WCHAR RemoteNameBuffer[1];};
struct _05B1F1BDA3A085B0ABA09A777878EB7C {KSPROPERTY Property;KSPIN_DATAFLOW Direction;ULONG Index;ULONG PinType;ULONG RelatedPinIndex;KSPIN_MEDIUM Medium;};
struct _0606DB5FE2099CCDC829F33B29607B55 {KSIDENTIFIER Identifier;ULONG Size;BOOL Looped;ULONG LoopPoint;BOOL InROM;KSDATAFORMAT Format;};
struct _1A4802CA8EE706B456CA9B76D6D132BC {FAST_MUTEX Mutex;PRTL_SPLAY_LINKS Cache;LIST_ENTRY TimerQueue;USHORT NumEntries;};
struct _1E49DD38FB2118FBA108586CF41E8D50 {USHORT Revision;union _1E49DD38FB2118FBA108586CF41E8D50___E178C36FC483474FC566940F4ECECCD0 Flags;ULONG PolicyCount;PROCESSOR_IDLESTATE_INFO Policy[3];};
struct _22CB949541BBA3A46A33E43835E46CAD {ULONG Version;GUID Guid;SYSTEM_POWER_CONDITION PowerCondition;ULONG DataLength;UCHAR Data[1];};
struct _349EB074D4E400CE7F81D3BDE9131585 {UCHAR Type;BOOLEAN Valid;UCHAR Reserved[2];PUCHAR TranslatedAddress;ULONG Length;};
struct _433BAB6AAAB02EEB6CF36ABDE1A4217C {KSDS3D_HRTF_FILTER_METHOD FilterMethod;KSDS3D_HRTF_COEFF_FORMAT CoeffFormat;KSDS3D_HRTF_FILTER_VERSION Version;ULONG Reserved;};
struct _48F34F6E58318E719B3C17D5DF8D3416 {WAVEFORMATEX Format;union _48F34F6E58318E719B3C17D5DF8D3416___BF32DB6F8F7ADBF71F90C18AFCE2FD9C Samples;DWORD dwChannelMask;GUID SubFormat;};
struct _5670F38347E174B4000DBD4C099C3F79 {KSPROPERTY Property;BOOL fSupportsHardwareAssistedScanning;ULONG SupportedBroadcastStandards;PVOID GUIDBucket;ULONG lengthofBucket;};
struct _595A1F057E8A453471581C9A3BFF13FD {GUID rating_system_id;unsigned char rating_system_is_age_type : 1;unsigned char reserved : 7;BYTE country_code[3];DWORD rating_attribute_count;RATING_ATTRIBUTE *lpratingattrib;};
struct _7624C08BB8F92FE59066142391459661 {KSPROPERTY Property;LONG Value;ULONG Flags;ULONG Capabilities;RECT FocusRect;};
struct _7DB559BE1DE343E17A8A94B6F2E38031 {LONGLONG PresentationStart;LONGLONG Duration;KSPIN_INTERFACE Interface;LONG Rate;ULONG Flags;};
struct _87CE1B284ED7C4D9787DE2C17B5E3229 {ULONG Size;ULONG TypeSpecificFlags;KSTIME PresentationTime;LONGLONG Duration;ULONG FrameExtent;ULONG DataUsed;PVOID Data;ULONG OptionsFlags;};
struct _9E1ED747B9CD39E7270D6384935529E0 {DS3DVECTOR Position;DS3DVECTOR Velocity;ULONG InsideConeAngle;ULONG OutsideConeAngle;DS3DVECTOR ConeOrientation;LONG ConeOutsideVolume;FLOAT MinDistance;FLOAT MaxDistance;ULONG Mode;};
struct _9FEB4B420E923D4204A687EB7CAB54F3 {BOOLEAN PowerButtonPresent;BOOLEAN SleepButtonPresent;BOOLEAN LidPresent;BOOLEAN SystemS1;BOOLEAN SystemS2;BOOLEAN SystemS3;BOOLEAN SystemS4;BOOLEAN SystemS5;BOOLEAN HiberFilePresent;BOOLEAN FullWake;BOOLEAN VideoDimPresent;BOOLEAN ApmPresent;BOOLEAN UpsPresent;BOOLEAN ThermalControl;BOOLEAN ProcessorThrottle;UCHAR ProcessorMinThrottle;UCHAR ProcessorMaxThrottle;BOOLEAN FastSystemS4;BOOLEAN Hiberboot;BOOLEAN WakeAlarmPresent;BOOLEAN AoAc;BOOLEAN DiskSpinDown;UCHAR spare3[8];BOOLEAN SystemBatteriesPresent;BOOLEAN BatteriesAreShortTerm;BATTERY_REPORTING_SCALE BatteryScale[3];SYSTEM_POWER_STATE AcOnLineWake;SYSTEM_POWER_STATE SoftLidWake;SYSTEM_POWER_STATE RtcWake;SYSTEM_POWER_STATE MinDeviceWakeState;SYSTEM_POWER_STATE DefaultLowLatencyWake;};
struct _AD455FBC572689F791F2277291BE97AE { GUID *Set;ULONG PropertiesCount; KSPROPERTY_ITEM *PropertyItem;ULONG FastIoCount; KSFASTPROPERTY_ITEM *FastIoTable;};
struct _B8CB9EEA0904F1CA6D6978D8DADC6932 {KSPROPERTY Property;GUID NetworkType;ULONG BufferSize;PVOID NetworkTunerCapabilities;};
struct _BC62D53B4BCE191E8F4EB4D4D278EB00 {ULONG Count;ULONG MaxFrequency;ULONG CurrentState;ULONG MaxPerfState;ULONG MinPerfState;ULONG LowestPerfState;ULONG ThermalConstraint;UCHAR BusyAdjThreshold;UCHAR PolicyType;UCHAR Type;UCHAR Reserved;ULONG TimerInterval;ULONG64 TargetProcessors;ULONG PStateHandler;ULONG PStateContext;ULONG TStateHandler;ULONG TStateContext;ULONG FeedbackHandler;ULONG Reserved1;ULONG64 Reserved2;PPM_WMI_PERF_STATE State[1];};
struct _C1C3EF408C46606406ABFE21B3E99DE8 {KSPROPERTY Property;ULONG StreamIndex;ULONG RangeIndex;SIZE Dimensions;LONGLONG CurrentActualFrameRate;LONGLONG CurrentMaxAvailableFrameRate;};
struct _CBA7ED455CF404F3CA70D8CDC7B47AD9 {PHYSICAL_ADDRESS Start;PHYSICAL_ADDRESS MaxEnd;PVOID VirtualAddress;ULONG Length;BOOLEAN Cached;BOOLEAN Aligned;};
struct _D7325426B7F06BB5A63E402FDFE43953 {USN StartUsn;ULONG ReasonMask;ULONG ReturnOnlyOnClose;ULONGLONG Timeout;ULONGLONG BytesToWaitFor;ULONGLONG UsnJournalID;USHORT MinMajorVersion;USHORT MaxMajorVersion;};
struct _D8D7C26B9FDE94F9B7E724B17C76CE36 {ULONG PropertyItemSize;ULONG PropertyCount; PCPROPERTY_ITEM *Properties;ULONG MethodItemSize;ULONG MethodCount; PCMETHOD_ITEM *Methods;ULONG EventItemSize;ULONG EventCount; PCEVENT_ITEM *Events;ULONG Reserved;};
struct _D9863DBF23EBBD7F74D85DDE027E035E { GUID *Set;ULONG MethodsCount; KSMETHOD_ITEM *MethodItem;ULONG FastIoCount; KSFASTMETHOD_ITEM *FastIoTable;};
struct _E6BAC8160F506AD645132E93AB36F89C {PVOID UserContext;ULONG BufferSize;PUCHAR Buffer;UCHAR MinorFunction;UCHAR ReturnStatus;ULONG ReturnSize;};
struct _EEDA301819F8EA8D15C0ADB3D7583498 {GUID MemoryType;GUID BusType;ULONG MemoryFlags;ULONG BusFlags;ULONG Flags;ULONG Frames;ULONG FileAlignment;ULONG MemoryTypeWeight;KS_FRAMING_RANGE PhysicalRange;KS_FRAMING_RANGE_WEIGHTED FramingRange;};
struct DOT11_CONNECTION_START_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_BSS_TYPE BSSType;DOT11_MAC_ADDRESS AdhocBSSID;DOT11_SSID AdhocSSID;};
typedef NTSTATUS (*NDK_FN_GET_LISTENER_LOCAL_ADDRESS)(NDK_LISTENER *pNdkListener, PSOCKADDR pAddress, ULONG *pAddressLength);
typedef void PROTOCOL_RECEIVE_NET_BUFFER_LISTS(NDIS_HANDLE ProtocolBindingContext, PNET_BUFFER_LIST NetBufferLists, NDIS_PORT_NUMBER PortNumber, ULONG NumberOfNetBufferLists, ULONG ReceiveFlags);
struct _D3DKMDT_SHAREDPRIMARYSURFACEDATA {UINT Width;UINT Height;D3DDDIFORMAT Format;D3DDDI_RATIONAL RefreshRate;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;};
struct _DISPLAYID_DETAILED_TIMING_TYPE_I {_DISPLAYID_DETAILED_TIMING_TYPE_I___9EE0A142F0F301DE9B45F63555A35675 __anonymous0;USHORT HorizontalActivePixels;USHORT HorizontalBlankPixels;_DISPLAYID_DETAILED_TIMING_TYPE_I___0B9E5C82A537FE04348FC016FB6647EB __anonymous1;USHORT HorizontalSyncWidth;USHORT VerticalActiveLines;USHORT VerticalBlankLines;_DISPLAYID_DETAILED_TIMING_TYPE_I___D79DFD3846F6A5C179FAD220967B78F0 __anonymous2;USHORT VerticalSyncWidth;};
struct _DXGKARG_RECOMMENDFUNCTIONALVIDPN {UINT NumberOfVidPnTargets; D3DDDI_VIDEO_PRESENT_TARGET_ID *pVidPnTargetPrioritizationVector;D3DKMDT_HVIDPN hRecommendedFunctionalVidPn;DXGK_RECOMMENDFUNCTIONALVIDPN_REASON RequestReason;void *pPrivateDriverData;UINT PrivateDriverDataSize;};
struct _DXGKMDT_OPM_CONFIGURE_PARAMETERS {DXGKMDT_OPM_OMAC omac;GUID guidSetting;ULONG ulSequenceNumber;ULONG cbParametersSize;BYTE abParameters[4056];};
struct _FILE_REMOTE_PROTOCOL_INFORMATION {USHORT StructureVersion;USHORT StructureSize;ULONG Protocol;USHORT ProtocolMajorVersion;USHORT ProtocolMinorVersion;USHORT ProtocolRevision;USHORT Reserved;ULONG Flags;struct _FILE_REMOTE_PROTOCOL_INFORMATION___865097E02C343FFD892BE5274F1384F8 GenericReserved;union _FILE_REMOTE_PROTOCOL_INFORMATION___63A064FF7C4EF3DC6E958885DE390874 ProtocolSpecific;};
struct _KBUGCHECK_SECONDARY_DUMP_DATA_EX {PVOID InBuffer;ULONG InBufferLength;ULONG MaximumAllowed;GUID Guid;PVOID OutBuffer;ULONG OutBufferLength;PVOID Context;ULONG Flags;ULONG DumpType;ULONG BugCheckCode;ULONG_PTR BugCheckParameter1;ULONG_PTR BugCheckParameter2;ULONG_PTR BugCheckParameter3;ULONG_PTR BugCheckParameter4;};
struct _MPIO_PASS_THROUGH_PATH_DIRECT_EX {ULONG PassThroughOffset;ULONG Version;USHORT Length;UCHAR Flags;UCHAR PortNumber;ULONGLONG MpioPathId;};
struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY {PCI_HARDWARE_INTERFACE SecondaryInterface;struct _PCI_ROOT_BUS_HARDWARE_CAPABILITY___D2E2FD7B103617CDB3471F8365D365F6 s;PCI_ROOT_BUS_OSC_SUPPORT_FIELD OscFeatureSupport;PCI_ROOT_BUS_OSC_CONTROL_FIELD OscControlRequest;PCI_ROOT_BUS_OSC_CONTROL_FIELD OscControlGranted;};
struct DOT11_TKIPMIC_FAILURE_PARAMETERS {NDIS_OBJECT_HEADER Header;BOOLEAN bDefaultKeyFailure;ULONG uKeyIndex;DOT11_MAC_ADDRESS PeerMac;};
typedef NTSTATUS (*DXGKDDI_OPM_GET_CERTIFICATE_SIZE)(PVOID MiniportDeviceContext, DXGKMDT_CERTIFICATE_TYPE CertificateType, PULONG CertificateSize);
typedef NTSTATUS ( *PMRX_COMPUTE_NEW_BUFFERING_STATE)(PMRX_SRV_OPEN SrvOpen, PVOID MRxContext, PULONG NewBufferingState);
typedef NTSTATUS  USB_BUSIFFN_GET_ROOTHUB_SYM_NAME(PVOID BusContext, PVOID HubSymNameBuffer, ULONG HubSymNameBufferLength, PULONG HubSymNameActualLength);
struct _CHANGE_BUFFERING_STATE_REQUEST_ {LIST_ENTRY ListEntry;ULONG Flags;PSRV_OPEN SrvOpen;PVOID SrvOpenKey;PVOID MRxContext;};
struct _D3DKMDT_MONITOR_FREQUENCY_RANGE {D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;D3DKMDT_FREQUENCY_RANGE RangeLimits;D3DKMDT_MONITOR_FREQUENCY_RANGE_CONSTRAINT ConstraintType;union _D3DKMDT_MONITOR_FREQUENCY_RANGE___5DFEF500743829CE0535851E9E30CA31 Constraint;};
struct _DOT11_WFD_GROUP_JOIN_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_WFD_CHANNEL GOOperatingChannel;ULONG GOConfigTime;BOOLEAN bInGroupFormation;BOOLEAN bWaitForWPSReady;};
struct _MSNdis_NetworkDirectAdapterInfo {MSNdis_NetworkDirectVersion Version;ULONG VendorId;ULONG DeviceId;ULONGLONG MaxRegistrationSize;ULONGLONG MaxWindowSize;ULONG FRMRPageCount;ULONG MaxInitiatorRequestSge;ULONG MaxReceiveRequestSge;ULONG MaxReadRequestSge;ULONG MaxTransferLength;ULONG MaxInlineDataSize;ULONG MaxInboundReadLimit;ULONG MaxOutboundReadLimit;ULONG MaxReceiveQueueDepth;ULONG MaxInitiatorQueueDepth;ULONG MaxSrqDepth;ULONG MaxCqDepth;ULONG LargeRequestThreshold;ULONG MaxCallerData;ULONG MaxCalleeData;BOOLEAN InOrderDMA;BOOLEAN SupportsCQResize;BOOLEAN SupportsLoopbackConnections;};
struct DOT11_DISASSOCIATION_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS MacAddr;DOT11_ASSOC_STATUS uReason;ULONG uIHVDataOffset;ULONG uIHVDataSize;};
typedef NTSTATUS DXGKDDI_QUERY_DEVICE_DESCRIPTOR(IN_CONST_PVOID MiniportDeviceContext, IN_ULONG ChildUid, INOUT_PDXGK_DEVICE_DESCRIPTOR DeviceDescriptor);
typedef void FILTER_RECEIVE_NET_BUFFER_LISTS(NDIS_HANDLE FilterModuleContext, PNET_BUFFER_LIST NetBufferLists, NDIS_PORT_NUMBER PortNumber, ULONG NumberOfNetBufferLists, ULONG ReceiveFlags);
typedef NTSTATUS (*PREPLACE_GET_MEMORY_DESTINATION)(PVOID Context, PHYSICAL_ADDRESS SourceAddress, PPHYSICAL_ADDRESS DestinationAddress);
typedef NTSTATUS (*PREPLACE_MIRROR_PHYSICAL_MEMORY)(PVOID Context, PHYSICAL_ADDRESS PhysicalAddress, LARGE_INTEGER ByteCount);
typedef void PROTOCOL_CL_INCOMING_CLOSE_CALL(NDIS_STATUS CloseStatus, NDIS_HANDLE ProtocolVcContext, PVOID CloseData, UINT Size);
typedef void PROTOCOL_CL_INCOMING_DROP_PARTY(NDIS_STATUS DropStatus, NDIS_HANDLE ProtocolPartyContext, PVOID CloseData, UINT Size);
typedef NTSTATUS (*PSHED_PI_ATTEMPT_ERROR_RECOVERY)(PVOID PluginContext, ULONG BufferLength, PWHEA_ERROR_RECORD ErrorRecord);
typedef ULONG  USB_BUSIFFN_CALC_PIPE_BANDWIDTH(PVOID BusContext, PUSBD_PIPE_INFORMATION PipeInfo, USB_DEVICE_SPEED DeviceSpeed);
struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR {ULONG Version;ULONG Size;ULONG MaximumTokenLifetime;ULONG DefaultTokenLifetime;ULONGLONG MaximumTransferSize;ULONGLONG OptimalTransferCount;ULONG MaximumDataDescriptors;ULONG MaximumTransferLengthPerDescriptor;ULONG OptimalTransferLengthPerDescriptor;USHORT OptimalTransferLengthGranularity;UCHAR Reserved[2];};
struct _DXGKARG_QUERYVIDPNHWCAPABILITY {D3DKMDT_HVIDPN hFunctionalVidPn;D3DDDI_VIDEO_PRESENT_SOURCE_ID SourceId;D3DDDI_VIDEO_PRESENT_TARGET_ID TargetId;D3DKMDT_VIDPN_HW_CAPABILITY VidPnHWCaps;};
struct _DXGKARG_RECOMMENDVIDPNTOPOLOGY {D3DKMDT_HVIDPN hVidPn;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;DXGK_RECOMMENDVIDPNTOPOLOGY_REASON RequestReason;D3DKMDT_HVIDPNTOPOLOGY hFallbackTopology;};
struct _MORE_PARALLEL_PORT_INFORMATION {INTERFACE_TYPE InterfaceType;ULONG BusNumber;ULONG InterruptLevel;ULONG InterruptVector;KAFFINITY InterruptAffinity;KINTERRUPT_MODE InterruptMode;};
struct _MSV1_0_GETCHALLENRESP_RESPONSE {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;STRING CaseSensitiveChallengeResponse;STRING CaseInsensitiveChallengeResponse;UNICODE_STRING UserName;UNICODE_STRING LogonDomainName;UCHAR UserSessionKey[16];UCHAR LanmanSessionKey[8];};
struct _PARALLEL_INTERRUPT_INFORMATION {PKINTERRUPT InterruptObject;PPARALLEL_TRY_ALLOCATE_ROUTINE TryAllocatePortAtInterruptLevel;PPARALLEL_FREE_ROUTINE FreePortFromInterruptLevel;PVOID Context;};
typedef NDIS_STATUS (*ALLOCATE_SHARED_MEMORY_HANDLER)(NDIS_HANDLE ProviderContext, PNDIS_SHARED_MEMORY_PARAMETERS SharedMemoryParameters, PNDIS_HANDLE pSharedMemoryProviderContext);
struct DOT11_ROAMING_START_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS AdhocBSSID;DOT11_SSID AdhocSSID;DOT11_ASSOC_STATUS uRoamingReason;};
typedef NTSTATUS DXGKDDI_GET_CHILD_CONTAINER_ID(PVOID MiniportDeviceContext, ULONG ChildUid, PDXGK_CHILD_CONTAINER_ID ContainerId);
typedef void MINIPORT_SEND_NET_BUFFER_LISTS(NDIS_HANDLE MiniportAdapterContext, PNET_BUFFER_LIST NetBufferList, NDIS_PORT_NUMBER PortNumber, ULONG SendFlags);
typedef PVOID ( *PFLT_CONTEXT_ALLOCATE_CALLBACK)(POOL_TYPE PoolType, SIZE_T Size, FLT_CONTEXT_TYPE ContextType);
typedef VP_STATUS (*PMINIPORT_QUERY_DEVICE_ROUTINE)(PVOID HwDeviceExtension, PVOID Context, VIDEO_DEVICE_DATA_TYPE DeviceDataType, PVOID Identifier, ULONG IdentiferLength, PVOID ConfigurationData, ULONG ConfigurationDataLength, PVOID ComponentInformation, ULONG ComponentInformationLength);
typedef NTSTATUS (*PSHED_PI_GET_ALL_ERROR_SOURCES)(PVOID PluginContext, PULONG Count, PWHEA_ERROR_SOURCE_DESCRIPTOR *ErrorSrcs, PULONG Length);
typedef NTSTATUS (*PUNREGISTER_NOTIFICATION_EVENT)(PVOID context, HANDLE Handle, PKEVENT NotificationEvent);
typedef NTSTATUS  USB_BUSIFFN_GET_DEVICE_ADDRESS(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, PUSHORT DeviceAddress);
struct _DEVICEDUMP_STORAGEDEVICE_DATA {DEVICEDUMP_STRUCTURE_VERSION Descriptor;DEVICEDUMP_SECTION_HEADER SectionHeader;ULONG dwBufferSize;ULONG dwReasonForCollection;DEVICEDUMP_SUBSECTION_POINTER PublicData;DEVICEDUMP_SUBSECTION_POINTER RestrictedData;DEVICEDUMP_SUBSECTION_POINTER PrivateData;};
struct _DXGKARG_ACQUIRESWIZZLINGRANGE {HANDLE hAllocation;UINT PrivateDriverData;UINT RangeId;UINT SegmentId;SIZE_T RangeSize;PHYSICAL_ADDRESS CPUTranslatedAddress;};
struct _IDE_VENDOR_DEFINED_POWER_INFO {UCHAR TargetId;GUID SettingGuid;PVOID Value;ULONG ValueLength;};
struct _ISCSI_DiscoveredTargetPortal2 {USHORT Socket;ISCSI_IP_Address Address;ULONG SecurityBitmap;ULONG KeySize;UCHAR Key[1];};
struct _MSNdis_ReceiveQueueParameters {MSNdis_ObjectHeader Header;ULONG Flags;ULONG QueueType;ULONG QueueId;ULONG QueueGroupId;MSNdis_GroupAffinity ProcessorAffinity;ULONG NumSuggestedReceiveBuffers;ULONG MSIXTableEntry;ULONG LookaheadSize;MSNdis_CountedString VmName;MSNdis_CountedString QueueName;};
struct _MSiSCSI_RequestTimeStatistics {WCHAR iSCSIName[224];USHORT CID;ULONGLONG USID;ULONGLONG UniqueAdapterId;ULONG MaximumProcessingTime;ULONG AverageProcessingTime;};
struct _REG_ENUMERATE_KEY_INFORMATION {PVOID Object;ULONG Index;KEY_INFORMATION_CLASS KeyInformationClass;PVOID KeyInformation;ULONG Length;PULONG ResultLength;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _SOC_SUBSYSTEM_FAILURE_DETAILS {SOC_SUBSYSTEM_TYPE SubsysType;ULONG64 FirmwareVersion;ULONG64 HardwareVersion;ULONG UnifiedFailureRegionSize;CHAR UnifiedFailureRegion[1];};
struct _SYSTEM_FIRMWARE_TABLE_HANDLER {ULONG ProviderSignature;BOOLEAN Register;PFNFTH FirmwareTableHandler;PVOID DriverObject;};
struct _VIDEO_WIN32K_CALLBACKS_PARAMS {VIDEO_WIN32K_CALLBACKS_PARAMS_TYPE CalloutType;PVOID PhysDisp;ULONG_PTR Param;LONG Status;};
struct _WATCHDOG_TIMER_RESOURCE_TABLE {DESCRIPTION_HEADER Header;GEN_ADDR ControlRegisterAddress;GEN_ADDR CountRegisterAddress;USHORT PciDeviceId;USHORT PciVendorId;UCHAR PciBusNumber;UCHAR PciSlotNumber;UCHAR PciFunctionNumber;UCHAR PciSegment;USHORT MaxCount;UCHAR Units;};
typedef NTSTATUS (*DXGKDDI_OPM_GET_RANDOM_NUMBER)(PVOID MiniportDeviceContext, HANDLE ProtectedOutputHandle, PDXGKMDT_OPM_RANDOM_NUMBER RandomNumber);
typedef NTSTATUS DXGKDDI_QUERY_CHILD_RELATIONS( PVOID MiniportDeviceContext, PDXGK_CHILD_DESCRIPTOR ChildRelations, ULONG ChildRelationsSize);
typedef NTSTATUS  NPI_CLIENT_ATTACH_PROVIDER_FN(HANDLE NmrBindingHandle, PVOID ClientContext, PNPI_REGISTRATION_INSTANCE ProviderRegistrationInstance);
typedef NTSTATUS  NPI_PROVIDER_ATTACH_CLIENT_FN(HANDLE NmrBindingHandle, PVOID ProviderContext, PNPI_REGISTRATION_INSTANCE ClientRegistrationInstance, PVOID ClientBindingContext,  void *ClientDispatch, PVOID *ProviderBindingContext,  void **ProviderDispatch);
typedef NTSTATUS (*PCAM_START_CAPTURE_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, ULONG StreamNumber);
typedef NTSTATUS  USB_BUSIFFN_CREATE_USB_DEVICE(PVOID BusContext, PUSB_DEVICE_HANDLE *NewDeviceHandle, PUSB_DEVICE_HANDLE HubDeviceHandle, USHORT PortStatus, USHORT PortNumber);
typedef NTSTATUS  USB_BUSIFFN_REF_DEVICE_HANDLE(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, PVOID Object, ULONG Tag);
typedef NTSTATUS  USB_BUSIFFN_REMOVE_USB_DEVICE(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, ULONG Flags);
struct _DEVICEDUMP_PUBLIC_SUBSECTION {ULONG dwFlags;GP_LOG_PAGE_DESCRIPTOR GPLogTable[16];CHAR szDescription[16];UCHAR bData[1];};
struct _FILE_ID_BOTH_DIR_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;ULONG EaSize;CCHAR ShortNameLength;WCHAR ShortName[12];LARGE_INTEGER FileId;WCHAR FileName[1];};
struct _FILE_ID_EXTD_DIR_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;ULONG EaSize;ULONG ReparsePointTag;FILE_ID_128 FileId;WCHAR FileName[1];};
struct _IDE_TRANSFER_MODE_PARAMETERS {UCHAR ChannelNumber;IDE_DEVICE_TYPE DeviceType[2];BOOLEAN IoReadySupported[2];ULONG DeviceTransferModeSupported[2];ULONG DeviceTransferModeCurrent[2];ULONG DeviceTransferModeSelected[2];};
struct _KSM_BDA_CAS_ENTITLEMENTTOKEN {KSM_NODE NodeMethod;ULONG ulDialogRequest;CHAR cLanguage[12];ULONG ulRequestType;ULONG ulEntitlementTokenLen;BYTE argbEntitlementToken[1];};
struct _MRX_SRVCALL_CALLBACK_CONTEXT {struct _MRX_SRVCALLDOWN_STRUCTURE *SrvCalldownStructure;ULONG CallbackContextOrdinal;PRDBSS_DEVICE_OBJECT RxDeviceObject;NTSTATUS Status;PVOID RecommunicateContext;};
struct _MSMCAEvent_PCIComponentError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG PCI_COMP_ERROR_STATUS;USHORT PCI_COMP_INFO_VendorId;USHORT PCI_COMP_INFO_DeviceId;UCHAR PCI_COMP_INFO_ClassCodeInterface;UCHAR PCI_COMP_INFO_ClassCodeSubClass;UCHAR PCI_COMP_INFO_ClassCodeBaseClass;UCHAR PCI_COMP_INFO_FunctionNumber;UCHAR PCI_COMP_INFO_DeviceNumber;UCHAR PCI_COMP_INFO_BusNumber;UCHAR PCI_COMP_INFO_SegmentNumber;ULONG Size;UCHAR RawRecord[1];};
struct _PROCESS_HANDLE_TRACING_ENTRY {HANDLE Handle;CLIENT_ID ClientId;ULONG Type;PVOID Stacks[16];};
struct _SE_ADT_PARAMETER_ARRAY_ENTRY {SE_ADT_PARAMETER_TYPE Type;ULONG Length;ULONG_PTR Data[2];PVOID Address;};
struct _SFFDISK_DEVICE_PASSWORD_DATA {USHORT Size;USHORT Reserved;SFFDISK_DPCMD Command;ULONG_PTR Information;UCHAR PasswordLength;UCHAR NewPasswordLength;UCHAR Data[];};
struct _TCG_DESCRIPTION_TABLE_CLIENT {DESCRIPTION_HEADER Header;USHORT PlatformClass;ULONG LAML;PHYSICAL_ADDRESS LASA;};
typedef NTSTATUS (*DXGK_BRIGHTNESS_GET_POSSIBLE)(PVOID Context, ULONG BufferSize, PUCHAR LevelCount, PUCHAR BrightnessLevels);
typedef void FILTER_SEND_NET_BUFFER_LISTS(NDIS_HANDLE FilterModuleContext, PNET_BUFFER_LIST NetBufferList, NDIS_PORT_NUMBER PortNumber, ULONG SendFlags);
typedef SECURITY_STATUS ( *IMPORT_SECURITY_CONTEXT_FN_W)(PSECURITY_STRING, PSecBuffer, void *, PCtxtHandle);
typedef NTSTATUS (*PCAM_STOP_CAPTURE_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, ULONG StreamNumber);
typedef NTSTATUS (*PFNKSDEVICEQUERYCAPABILITIES)(PKSDEVICE Device, PIRP Irp, PDEVICE_CAPABILITIES Capabilities);
typedef NTSTATUS (*PREGISTER_NOTIFICATION_EVENT)(PVOID context, HANDLE Handle, PKEVENT NotificationEvent);
typedef NTSTATUS  USB_BUSIFFN_INITIALIZE_20HUB(PVOID BusContext, PUSB_DEVICE_HANDLE HubDeviceHandle, ULONG TtCount);
struct _MSFC_FCAdapterHBAAttributes {ULONGLONG UniqueAdapterId;ULONG HBAStatus;UCHAR NodeWWN[8];ULONG VendorSpecificID;ULONG NumberOfPorts;WCHAR Manufacturer[65];WCHAR SerialNumber[65];WCHAR Model[257];WCHAR ModelDescription[257];WCHAR NodeSymbolicName[257];WCHAR HardwareVersion[257];WCHAR DriverVersion[257];WCHAR OptionROMVersion[257];WCHAR FirmwareVersion[257];WCHAR DriverName[257];WCHAR MfgDomain[257];};
struct _MSMCAEvent_SystemEventError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG SEL_TIME_STAMP;USHORT SEL_RECORD_ID;USHORT SEL_GENERATOR_ID;UCHAR SEL_RECORD_TYPE;UCHAR SEL_EVM_REV;UCHAR SEL_SENSOR_TYPE;UCHAR SEL_SENSOR_NUM;UCHAR SEL_EVENT_DIR_TYPE;UCHAR SEL_DATA1;UCHAR SEL_DATA2;UCHAR SEL_DATA3;ULONG Size;UCHAR RawRecord[1];};
struct _MSV1_0_GETUSERINFO_RESPONSE {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;PSID UserSid;UNICODE_STRING UserName;UNICODE_STRING LogonDomainName;UNICODE_STRING LogonServer;SECURITY_LOGON_TYPE LogonType;};
struct _STORAGE_MINIPORT_DESCRIPTOR {ULONG Version;ULONG Size;STORAGE_PORT_CODE_SET Portdriver;BOOLEAN LUNResetSupported;BOOLEAN TargetResetSupported;USHORT IoTimeoutValue;};
struct _STOR_WMI_TRACE_MESSAGE_ARGS {ULONG64 TraceHandle;ULONG MessageFlags;LPCGUID MessageGuid;USHORT MessageNumber;va_list Args;ULONG result;};
struct _TOKEN_GROUPS_AND_PRIVILEGES {ULONG SidCount;ULONG SidLength;PSID_AND_ATTRIBUTES Sids;ULONG RestrictedSidCount;ULONG RestrictedSidLength;PSID_AND_ATTRIBUTES RestrictedSids;ULONG PrivilegeCount;ULONG PrivilegeLength;PLUID_AND_ATTRIBUTES Privileges;LUID AuthenticationId;};
typedef NTSTATUS (*pKdEnumerateDebuggingDevices)(PVOID LoaderBlock, PDEBUG_DEVICE_DESCRIPTOR Device, PDEBUG_DEVICE_FOUND_FUNCTION Callback);
typedef NTSTATUS DXGKDDI_DISPATCH_IO_REQUEST(IN_CONST_PVOID MiniportDeviceContext, IN_ULONG VidPnSourceId, IN_PVIDEO_REQUEST_PACKET VideoRequestPacket);
typedef NTSTATUS (*DXGKDDI_OPM_GET_CERTIFICATE)(PVOID MiniportDeviceContext, DXGKMDT_CERTIFICATE_TYPE CertificateType, ULONG CertificateSize, PVOID CertificateBuffer);
typedef NTSTATUS (*PCLASS_QUERY_WMI_REGINFO_EX)(PDEVICE_OBJECT DeviceObject, ULONG *RegFlags, PUNICODE_STRING Name, PUNICODE_STRING MofResouceName);
typedef FLT_PREOP_CALLBACK_STATUS ( *PFLT_PRE_OPERATION_CALLBACK)(PFLT_CALLBACK_DATA Data, PCFLT_RELATED_OBJECTS FltObjects, PVOID *CompletionContext);
typedef NTSTATUS (*PFNKSPININITIALIZEALLOCATOR)(PKSPIN Pin, PKSALLOCATOR_FRAMING AllocatorFraming, PVOID *Context);
typedef NTSTATUS (*PGET_LINK_POSITION_REGISTER)(PVOID context, HANDLE Handle, PULONG *Position);
typedef NTSTATUS (*PSHED_PI_CLEAR_ERROR_RECORD)(PVOID PluginContext, ULONG Flags, ULONGLONG ErrorRecordId);
typedef NTSTATUS (*PSHED_PI_WRITE_ERROR_RECORD)(PVOID PluginContext, ULONG Flags, ULONG RecordLength, PWHEA_ERROR_RECORD ErrorRecord);
struct _BRB_L2CA_UNREGISTER_SERVER {BRB_HEADER Hdr;BTH_ADDR BtAddress;PVOID ServerHandle;USHORT Psm;};
struct _CLASS_READ_CAPACITY16_DATA {NTSTATUS CommandStatus;ULONG BytesPerLogicalSector;ULONG BytesPerPhysicalSector;ULONG BytesOffsetForSectorAlignment;BOOLEAN LBProvisioningEnabled;BOOLEAN LBProvisioningReadZeros;UCHAR Reserved0[2];ULONG Reserved1;};
struct _D3DDDI_OPENALLOCATIONINFO2 {D3DKMT_HANDLE hAllocation; void *pPrivateDriverData;UINT PrivateDriverDataSize;D3DGPU_VIRTUAL_ADDRESS GpuVirtualAddress;ULONG_PTR Reserved[6];};
struct _D3DKMDT_MONITOR_DESCRIPTOR {D3DKMDT_MONITOR_DESCRIPTOR_ID Id;D3DKMDT_MONITOR_DESCRIPTOR_TYPE Type;SIZE_T DataSize;void *pData;D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;};
struct _DXGK_PRESENTALLOCATIONINFO {HANDLE hDeviceSpecificAllocation;D3DGPU_VIRTUAL_ADDRESS AllocationVirtualAddress;PHYSICAL_ADDRESS PhysicalAddress;UINT SegmentId;};
struct _FILE_FS_VOLUME_INFORMATION {LARGE_INTEGER VolumeCreationTime;ULONG VolumeSerialNumber;ULONG VolumeLabelLength;BOOLEAN SupportsObjects;WCHAR VolumeLabel[1];};
struct _HID_COLLECTION_INFORMATION {ULONG DescriptorSize;BOOLEAN Polled;UCHAR Reserved1[1];USHORT VendorID;USHORT ProductID;USHORT VersionNumber;};
struct _IRB_REQ_FREE_ADDRESS_RANGE {ULONG nAddressesToFree;PADDRESS_RANGE p1394AddressRange;PHANDLE pAddressRange;PVOID DeviceExtension;};
struct _NET_PNP_EVENT_NOTIFICATION {NDIS_OBJECT_HEADER Header;NDIS_PORT_NUMBER PortNumber;NET_PNP_EVENT NetPnPEvent;ULONG Flags;};
struct _PCI_EXPRESS_ACS_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;PCI_EXPRESS_ACS_CAPABIITY_REGISTER Capability;PCI_EXPRESS_ACS_CONTROL Control;ULONG EgressControl[1];};
struct _STORAGE_ADAPTER_DESCRIPTOR {ULONG Version;ULONG Size;ULONG MaximumTransferLength;ULONG MaximumPhysicalPages;ULONG AlignmentMask;BOOLEAN AdapterUsesPio;BOOLEAN AdapterScansDown;BOOLEAN CommandQueueing;BOOLEAN AcceleratedTransfer;UCHAR BusType;USHORT BusMajorVersion;USHORT BusMinorVersion;UCHAR SrbType;UCHAR AddressType;};
struct _TXFS_GET_METADATA_INFO_OUT {struct _TXFS_GET_METADATA_INFO_OUT___739594F3E437CE445B9757A30828364A TxfFileId;GUID LockingTransaction;ULONGLONG LastLsn;ULONG TransactionState;};
typedef NTSTATUS ENTER_STATE_NOTIFY_HANDLER(POWER_STATE_HANDLER_TYPE State, PVOID Context, BOOLEAN Entering);
typedef SECURITY_STATUS ( *EXPORT_SECURITY_CONTEXT_FN)(PCtxtHandle, ULONG, PSecBuffer, void **);
typedef NTSTATUS (*NDK_FN_GET_CONNECTION_DATA)(NDK_CONNECTOR *pNdkConnector, ULONG *pInboundReadLimit, ULONG *pOutboundReadLimit, PVOID pPrivateData, ULONG *pPrivateDataLength);
typedef NTSTATUS (*PCONFIGURE_ADAPTER_CHANNEL)(PDMA_ADAPTER DmaAdapter, ULONG FunctionNumber, PVOID Context);
typedef NTSTATUS ( *PFN_WSK_GET_REMOTE_ADDRESS)(PWSK_SOCKET Socket, PSOCKADDR RemoteAddress, PIRP Irp);
typedef NTSTATUS ( *PFN_WSK_RECEIVE_FROM_EVENT)(PVOID SocketContext, ULONG Flags, PWSK_DATAGRAM_INDICATION DataIndication);
typedef NTSTATUS ( *PMRX_SRVCALL_WINNER_NOTIFY)(PMRX_SRV_CALL SrvCall, BOOLEAN ThisMinirdrIsTheWinner, PVOID RecommunicateContext);
typedef NTSTATUS WMI_QUERY_REGINFO_CALLBACK(PDEVICE_OBJECT DeviceObject, PULONG RegFlags, PUNICODE_STRING InstanceName, PUNICODE_STRING *RegistryPath, PUNICODE_STRING MofResourceName, PDEVICE_OBJECT *Pdo);
struct _CHANGER_ELEMENT_STATUS_EX {CHANGER_ELEMENT Element;CHANGER_ELEMENT SrcElementAddress;ULONG Flags;ULONG ExceptionCode;UCHAR TargetId;UCHAR Lun;USHORT Reserved;UCHAR PrimaryVolumeID[36];UCHAR AlternateVolumeID[36];UCHAR VendorIdentification[8];UCHAR ProductIdentification[16];UCHAR SerialNumber[32];};
struct _DXGKARG_CREATEALLOCATION2 { void *pPrivateDriverData;UINT PrivateDriverDataSize;UINT NumAllocations;DXGK_ALLOCATIONINFO2 *pAllocationInfo;HANDLE hResource;DXGK_CREATEALLOCATIONFLAGS2 Flags;};
struct _FILE_BOTH_DIR_INFORMATION {ULONG NextEntryOffset;ULONG FileIndex;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER ChangeTime;LARGE_INTEGER EndOfFile;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG FileNameLength;ULONG EaSize;CCHAR ShortNameLength;WCHAR ShortName[12];WCHAR FileName[1];};
struct _FILE_PIPE_WAIT_FOR_BUFFER {LARGE_INTEGER Timeout;ULONG NameLength;BOOLEAN TimeoutSpecified;WCHAR Name[1];};
struct _FLT_FILE_NAME_INFORMATION {USHORT Size;FLT_FILE_NAME_PARSED_FLAGS NamesParsed;FLT_FILE_NAME_OPTIONS Format;UNICODE_STRING Name;UNICODE_STRING Volume;UNICODE_STRING Share;UNICODE_STRING Extension;UNICODE_STRING Stream;UNICODE_STRING FinalComponent;UNICODE_STRING ParentDir;};
struct _MPIO_PASS_THROUGH_PATH_EX {ULONG PassThroughOffset;ULONG Version;USHORT Length;UCHAR Flags;UCHAR PortNumber;ULONGLONG MpioPathId;};
struct _MSV1_0_ENUMUSERS_RESPONSE {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;ULONG NumberOfLoggedOnUsers;PLUID LogonIds;PULONG EnumHandles;};
struct _NDIS_TAPI_SET_CALL_PARAMS {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulBearerMode;ULONG ulMinRate;ULONG ulMaxRate;BOOLEAN bSetLineDialParams;LINE_DIAL_PARAMS LineDialParams;};
struct _OB_OPERATION_REGISTRATION {POBJECT_TYPE *ObjectType;OB_OPERATION Operations;POB_PRE_OPERATION_CALLBACK PreOperation;POB_POST_OPERATION_CALLBACK PostOperation;};
struct _PCC_GENREIC_SHARED_REGION {ULONG Signature;union _PCC_GENREIC_SHARED_REGION___27BE20E7AAEF8A28D5A3593632264250 Command;union _PCC_GENREIC_SHARED_REGION___10E8DF4D696433E5BFD564CD1D883F8C Status;UCHAR CommunicationSpace[1];};
struct _PHYSICAL_DEVICE_EXTENSION {_FUNCTIONAL_DEVICE_EXTENSION___50C61D085A2F906BF66460A0C351E861 __anonymous0;BOOLEAN IsMissing;BOOLEAN IsEnumerated;PCLASS_PRIVATE_PDO_DATA PrivatePdoData;ULONG_PTR Reserved2;ULONG_PTR Reserved3;ULONG_PTR Reserved4;};
struct _PROCESS_BASIC_INFORMATION {NTSTATUS ExitStatus;PPEB PebBaseAddress;ULONG_PTR AffinityMask;KPRIORITY BasePriority;ULONG_PTR UniqueProcessId;ULONG_PTR InheritedFromUniqueProcessId;};
struct _REGISTER_COMPOSITE_DEVICE {USHORT Version;USHORT Size;USBDI_HANDLE Reserved;COMPOSITE_DEVICE_CAPABILITIES CapabilityFlags;ULONG FunctionCount;};
struct _REG_QUERY_KEY_INFORMATION {PVOID Object;KEY_INFORMATION_CLASS KeyInformationClass;PVOID KeyInformation;ULONG Length;PULONG ResultLength;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _STORAGE_DEVICE_DESCRIPTOR {ULONG Version;ULONG Size;UCHAR DeviceType;UCHAR DeviceTypeModifier;BOOLEAN RemovableMedia;BOOLEAN CommandQueueing;ULONG VendorIdOffset;ULONG ProductIdOffset;ULONG ProductRevisionOffset;ULONG SerialNumberOffset;STORAGE_BUS_TYPE BusType;ULONG RawPropertiesLength;UCHAR RawDeviceProperties[1];};
struct _TXFS_START_RM_INFORMATION {ULONG Flags;ULONGLONG LogContainerSize;ULONG LogContainerCountMin;ULONG LogContainerCountMax;ULONG LogGrowthIncrement;ULONG LogAutoShrinkPercentage;ULONG TmLogPathOffset;USHORT TmLogPathLength;USHORT LoggingMode;USHORT LogPathLength;USHORT Reserved;WCHAR LogPath[1];};
struct DOT11_EXTSTA_SEND_CONTEXT {NDIS_OBJECT_HEADER Header;USHORT usExemptionActionType;ULONG uPhyId;ULONG uDelayedSleepValue;PVOID pvMediaSpecificInfo;ULONG uSendFlags;};
typedef NTSTATUS ( *DXGKDDI_VIDPN_GETTOPOLOGY)(IN_CONST_D3DKMDT_HVIDPN hVidPn, OUT_PD3DKMDT_HVIDPNTOPOLOGY phVidPnTopology, DEREF_OUT_CONST_PPDXGK_VIDPNTOPOLOGY_INTERFACE ppVidPnTopologyInterface);
typedef BOOLEAN FAST_IO_CHECK_IF_POSSIBLE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, BOOLEAN CheckForReadOperation, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN FAST_IO_UNLOCK_ALL_BY_KEY(struct _FILE_OBJECT *FileObject, PVOID ProcessId, ULONG Key, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef NTSTATUS (*NDK_FN_QUERY_ADAPTER_INFO)(NDK_ADAPTER *pNdkAdapter, NDK_ADAPTER_INFO *pInfo, ULONG *pBufferSize);
typedef NTSTATUS ( *PFN_WSK_GET_LOCAL_ADDRESS)(PWSK_SOCKET Socket, PSOCKADDR LocalAddress, PIRP Irp);
typedef NTSTATUS (*PREPLACE_SET_PROCESSOR_ID)(PVOID Context, ULONG ApicId, BOOLEAN Target);
struct _AUX_MODULE_EXTENDED_INFO {AUX_MODULE_BASIC_INFO BasicInfo;ULONG ImageSize;USHORT FileNameOffset;UCHAR FullPathName[256];};
struct _CLS_IO_STATISTICS_HEADER {UCHAR ubMajorVersion;UCHAR ubMinorVersion;CLFS_IOSTATS_CLASS eStatsClass;USHORT cbLength;ULONG coffData;};
struct _DXGKARG_CREATEALLOCATION { void *pPrivateDriverData;UINT PrivateDriverDataSize;UINT NumAllocations;DXGK_ALLOCATIONINFO *pAllocationInfo;HANDLE hResource;DXGK_CREATEALLOCATIONFLAGS Flags;};
struct _FILE_FULL_EA_INFORMATION {ULONG NextEntryOffset;UCHAR Flags;UCHAR EaNameLength;USHORT EaValueLength;CHAR EaName[1];};
struct _ISCSI_RedirectPortalInfo {ULONGLONG UniqueConnectionId;ISCSI_IP_Address OriginalIPAddr;ULONG OriginalPort;ISCSI_IP_Address RedirectedIPAddr;ULONG RedirectedPort;UCHAR Redirected;UCHAR TemporaryRedirect;};
struct _NDIS_RECEIVE_FILTER_INFO {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_FILTER_TYPE FilterType;NDIS_RECEIVE_FILTER_ID FilterId;};
struct _NDIS_RECEIVE_QUEUE_STATE {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE QueueState;};
struct _NDIS_WAN_GET_BRIDGE_INFO {NDIS_HANDLE NdisLinkHandle;USHORT LanSegmentNumber;UCHAR BridgeNumber;UCHAR BridgingOptions;ULONG BridgingCapabilities;UCHAR BridgingType;UCHAR MacBytes[6];};
struct _NDIS_WAN_SET_BRIDGE_INFO {NDIS_HANDLE NdisLinkHandle;USHORT LanSegmentNumber;UCHAR BridgeNumber;UCHAR BridgingOptions;ULONG BridgingCapabilities;UCHAR BridgingType;UCHAR MacBytes[6];};
struct _OB_CALLBACK_REGISTRATION {USHORT Version;USHORT OperationRegistrationCount;UNICODE_STRING Altitude;PVOID RegistrationContext;OB_OPERATION_REGISTRATION *OperationRegistration;};
struct _REPARSE_GUID_DATA_BUFFER {ULONG ReparseTag;USHORT ReparseDataLength;USHORT Reserved;GUID ReparseGuid;struct _REPARSE_GUID_DATA_BUFFER___E4726FB01B43180CB4D608E8FC40A3CF GenericReparseBuffer;};
struct _SCSI_PASS_THROUGH_DIRECT {USHORT Length;UCHAR ScsiStatus;UCHAR PathId;UCHAR TargetId;UCHAR Lun;UCHAR CdbLength;UCHAR SenseInfoLength;UCHAR DataIn;ULONG DataTransferLength;ULONG TimeOutValue;PVOID DataBuffer;ULONG SenseInfoOffset;UCHAR Cdb[16];};
struct _STREAM_METHOD_DESCRIPTOR {ULONG MethodSetID;PKSMETHOD Method;PVOID MethodInfo;LONG MethodInputSize;LONG MethodOutputSize;};
struct _USB_BUS_INTERFACE_HUB_V0 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;};
struct _USB_CD_ERROR_INFORMATION {ULONG Version;USBPORT_CREATEDEV_ERROR PathError;ULONG UlongArg1;ULONG UlongArg2;NTSTATUS NtStatus;UCHAR XtraInfo[64];};
struct INonDelegatedUnknownVtbl {HRESULT ( *NonDelegatedQueryInterface)(INonDelegatedUnknown *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *NonDelegatedAddRef)(INonDelegatedUnknown *This);ULONG ( *NonDelegatedRelease)(INonDelegatedUnknown *This);};
typedef NTSTATUS (*NDK_FN_GET_LOCAL_ADDRESS)(NDK_CONNECTOR *pNdkConnector, PSOCKADDR pAddress, ULONG *pAddressLength);
typedef NTSTATUS (*PCAM_ALLOCATE_BW_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PULONG RawFrameLength, PVOID Format);
typedef NTSTATUS (*PCLASS_QUERY_WMI_REGINFO)(PDEVICE_OBJECT DeviceObject, ULONG *RegFlags, PUNICODE_STRING Name);
typedef NTSTATUS (*PREGISTER_EVENT_CALLBACK)(PVOID context, PHDAUDIO_UNSOLICITED_RESPONSE_CALLBACK Routine, PVOID Context, PUCHAR Tag);
typedef BOOLEAN ( *USBC_PDO_ENABLE_CALLBACK)(PVOID Context, USHORT FirstInterfaceNumber, USHORT NumberOfInterfaces, UCHAR FunctionClass, UCHAR FunctionSubClass, UCHAR FunctionProtocol);
struct _ATA_PASS_THROUGH_DIRECT {USHORT Length;USHORT AtaFlags;UCHAR PathId;UCHAR TargetId;UCHAR Lun;UCHAR ReservedAsUchar;ULONG DataTransferLength;ULONG TimeOutValue;ULONG ReservedAsUlong;PVOID DataBuffer;UCHAR PreviousTaskFile[8];UCHAR CurrentTaskFile[8];};
struct _BOOTDISK_INFORMATION_EX {LONGLONG BootPartitionOffset;LONGLONG SystemPartitionOffset;ULONG BootDeviceSignature;ULONG SystemDeviceSignature;GUID BootDeviceGuid;GUID SystemDeviceGuid;BOOLEAN BootDeviceIsGpt;BOOLEAN SystemDeviceIsGpt;};
struct _BRB_L2CA_UPDATE_CHANNEL {BRB_HEADER Hdr;BTH_ADDR BtAddress;L2CAP_CHANNEL_HANDLE ChannelHandle;ULONG NewChannelFlags;ULONG FailedChannelFlags;};
struct _CACHE_MANAGER_CALLBACKS {PACQUIRE_FOR_LAZY_WRITE AcquireForLazyWrite;PRELEASE_FROM_LAZY_WRITE ReleaseFromLazyWrite;PACQUIRE_FOR_READ_AHEAD AcquireForReadAhead;PRELEASE_FROM_READ_AHEAD ReleaseFromReadAhead;};
struct _DXGK_SEGMENTDESCRIPTOR2 {DXGK_SEGMENTFLAGS2 Flags;SIZE_T Size;PMDL pMdl;PHYSICAL_ADDRESS BaseAddress;PHYSICAL_ADDRESS CpuTranslatedAddress;};
struct _DXGK_SEGMENTDESCRIPTOR3 {DXGK_SEGMENTFLAGS Flags;PHYSICAL_ADDRESS BaseAddress;PHYSICAL_ADDRESS CpuTranslatedAddress;SIZE_T Size;UINT NbOfBanks;SIZE_T *pBankRangeTable;SIZE_T CommitLimit;SIZE_T SystemMemoryEndAddress;SIZE_T Reserved;};
struct _FILE_RENAME_INFORMATION {BOOLEAN ReplaceIfExists;HANDLE RootDirectory;ULONG FileNameLength;WCHAR FileName[1];};
struct _FSRTL_COMMON_FCB_HEADER {CSHORT NodeTypeCode;CSHORT NodeByteSize;UCHAR Flags;UCHAR IsFastIoPossible;UCHAR Flags2;unsigned char Reserved : 4;unsigned char Version : 4;PERESOURCE Resource;PERESOURCE PagingIoResource;LARGE_INTEGER AllocationSize;LARGE_INTEGER FileSize;LARGE_INTEGER ValidDataLength;};
struct _MSNdis_ReceiveQueueInfo {MSNdis_ObjectHeader Header;ULONG Flags;ULONG QueueType;ULONG QueueId;ULONG QueueGroupId;ULONG QueueState;MSNdis_GroupAffinity ProcessorAffinity;ULONG NumSuggestedReceiveBuffers;ULONG MSIXTableEntry;ULONG LookaheadSize;MSNdis_CountedString VmName;MSNdis_CountedString QueueName;};
struct _NDIS_RESTART_ATTRIBUTES {PNDIS_RESTART_ATTRIBUTES Next;NDIS_OID Oid;ULONG DataLength;UCHAR Data[1];};
struct _NDIS_RSS_PROCESSOR_INFO {NDIS_OBJECT_HEADER Header;ULONG Flags;PROCESSOR_NUMBER RssBaseProcessor;ULONG MaxNumRssProcessors;USHORT PreferredNumaNode;ULONG RssProcessorArrayOffset;ULONG RssProcessorCount;ULONG RssProcessorEntrySize;};
struct _SECURITY_CLIENT_CONTEXT {SECURITY_QUALITY_OF_SERVICE SecurityQos;PACCESS_TOKEN ClientToken;BOOLEAN DirectlyAccessClientToken;BOOLEAN DirectAccessEffectiveOnly;BOOLEAN ServerIsRemote;TOKEN_CONTROL ClientTokenControl;};
struct _SOCKET_PEER_TARGET_NAME {SOCKET_SECURITY_PROTOCOL SecurityProtocol;SOCKADDR_STORAGE PeerAddress;ULONG PeerTargetNameStringLen;unsigned short AllStrings[];};
struct _SRBEX_DATA_SCSI_CDB_VAR {SRBEXDATATYPE Type;ULONG Length;UCHAR ScsiStatus;UCHAR SenseInfoBufferLength;UCHAR Reserved[2];ULONG CdbLength;ULONG Reserved1[2];PVOID SenseInfoBuffer;UCHAR Cdb[1];};
struct _STORAGE_ERRORLOG_PACKET {UCHAR MajorFunctionCode;UCHAR RetryCount;USHORT DumpDataSize;USHORT NumberOfStrings;USHORT StringOffset;USHORT EventCategory;ULONG ErrorCode;ULONG UniqueErrorValue;ULONG FinalStatus;ULONG SequenceNumber;ULONG IoControlCode;LARGE_INTEGER DeviceOffset;ULONG DumpData[1];};
struct _STORAGE_TRACE_INIT_INFO {ULONG Size;ULONG NumDiagEventRecords;ULONG DiagEventRecordUserDataSize;ULONG NumErrorLogRecords;GUID TraceGuid;STOR_CLEANUP_TRACING TraceCleanupRoutine;PVOID DriverObject;PVOID TraceContext;};
struct _WHEA_X64_REGISTER_STATE {ULONGLONG Rax;ULONGLONG Rbx;ULONGLONG Rcx;ULONGLONG Rdx;ULONGLONG Rsi;ULONGLONG Rdi;ULONGLONG Rbp;ULONGLONG Rsp;ULONGLONG R8;ULONGLONG R9;ULONGLONG R10;ULONGLONG R11;ULONGLONG R12;ULONGLONG R13;ULONGLONG R14;ULONGLONG R15;USHORT Cs;USHORT Ds;USHORT Ss;USHORT Es;USHORT Fs;USHORT Gs;ULONG Reserved;ULONGLONG Rflags;ULONGLONG Eip;ULONGLONG Cr0;ULONGLONG Cr1;ULONGLONG Cr2;ULONGLONG Cr3;ULONGLONG Cr4;ULONGLONG Cr8;WHEA128A Gdtr;WHEA128A Idtr;USHORT Ldtr;USHORT Tr;};
struct _WSK_DATAGRAM_INDICATION {struct _WSK_DATAGRAM_INDICATION *Next;WSK_BUF Buffer;PCMSGHDR ControlInfo;ULONG ControlInfoLength;PSOCKADDR RemoteAddress;};
typedef NTSTATUS ( *pHalIoReadPartitionTable)(PDEVICE_OBJECT DeviceObject, ULONG SectorSize, BOOLEAN ReturnRecognizedPartitions, struct _DRIVE_LAYOUT_INFORMATION **PartitionBuffer);
typedef NTSTATUS (*pHalSetSystemInformation)(HAL_SET_INFORMATION_CLASS InformationClass, ULONG BufferSize, PVOID Buffer);
typedef NTSTATUS  API_SET_LOAD_SCHEMA_RTN(PCSTR SchemaPath, PCAPI_SET_NAMESPACE_ARRAY *Schema, PVOID *Context);
typedef NTSTATUS (*DSM_GET_CONTROLLER_INFO)(PVOID DsmContext, PVOID DsmId, ULONG Flags, PCONTROLLER_INFO *ControllerInfo);
typedef NTSTATUS (*NDK_FN_GET_PEER_ADDRESS)(NDK_CONNECTOR *pNdkConnector, PSOCKADDR pAddress, ULONG *pAddressLength);
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBReceiveFilterHook_v1)( WCHAR *pAdapter,  void *pPacket,  UCHAR *pMediaHeader, ULONG cMediaHeaderLength,  UCHAR *pPayload, ULONG cPayloadLength, ULONG Flags);
typedef NTSTATUS (*PCAM_FREE_BW_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, ULONG STreamNumber);
typedef BOOLEAN (*PCANCEL_ADAPTER_CHANNEL)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PVOID DmaTransferContext);
typedef NTSTATUS (*PI8042_SYNCH_WRITE_PORT)(PVOID Context, UCHAR Value, BOOLEAN WaitForACK);
typedef NTSTATUS ( *PMRX_IS_LOCK_REALIZABLE)(PMRX_FCB Fcb, PLARGE_INTEGER ByteOffset, PLARGE_INTEGER Length, ULONG LowIoLockFlags);
typedef NTSTATUS (*PRXCE_IND_SEND_POSSIBLE)(PVOID pRxCeEventContext, PRXCE_VC pVc, ULONG BytesAvailable);
struct _BDCB_IMAGE_INFORMATION {BDCB_CLASSIFICATION Classification;ULONG ImageFlags;UNICODE_STRING ImageName;UNICODE_STRING RegistryPath;UNICODE_STRING CertificatePublisher;UNICODE_STRING CertificateIssuer;PVOID ImageHash;PVOID CertificateThumbprint;ULONG ImageHashAlgorithm;ULONG ThumbprintHashAlgorithm;ULONG ImageHashLength;ULONG CertificateThumbprintLength;};
struct _CHANGER_ELEMENT_STATUS {CHANGER_ELEMENT Element;CHANGER_ELEMENT SrcElementAddress;ULONG Flags;ULONG ExceptionCode;UCHAR TargetId;UCHAR Lun;USHORT Reserved;UCHAR PrimaryVolumeID[36];UCHAR AlternateVolumeID[36];};
struct _D3DKMDT_GDISURFACEDATA {UINT Width;UINT Height;D3DDDIFORMAT Format;D3DKMDT_GDISURFACETYPE Type;D3DKMDT_GDISURFACEFLAGS Flags;UINT Pitch;};
struct _DISK_CACHE_INFORMATION {BOOLEAN ParametersSavable;BOOLEAN ReadCacheEnabled;BOOLEAN WriteCacheEnabled;DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority;DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority;USHORT DisablePrefetchTransferLength;BOOLEAN PrefetchScalar;union _DISK_CACHE_INFORMATION___207A8F522A0F340CF581A92609804DAC u;};
struct _DXGKARG_OPENALLOCATION {UINT NumAllocations;DXGK_OPENALLOCATIONINFO *pOpenAllocation;void *pPrivateDriverData;UINT PrivateDriverSize;DXGK_OPENALLOCATIONFLAGS Flags;UINT SubresourceIndex;SIZE_T SubresourceOffset;UINT Pitch;};
struct _DXGK_GDIARG_ALPHABLEND {RECT SrcRect;RECT DstRect;UINT SrcAllocationIndex;UINT DstAllocationIndex;UINT NumSubRects;RECT *pSubRects;BYTE SourceConstantAlpha;BOOLEAN SourceHasAlpha;UINT SrcPitch;};
struct _DXGK_SEGMENTDESCRIPTOR {PHYSICAL_ADDRESS BaseAddress;PHYSICAL_ADDRESS CpuTranslatedAddress;SIZE_T Size;UINT NbOfBanks;SIZE_T *pBankRangeTable;SIZE_T CommitLimit;DXGK_SEGMENTFLAGS Flags;};
struct _MPIO_DISK_HEALTH_CLASS {WCHAR Name[64];ULONGLONG NumberReads;ULONGLONG NumberWrites;ULONGLONG NumberBytesRead;ULONGLONG NumberBytesWritten;ULONGLONG NumberRetries;ULONGLONG NumberIoErrors;ULONGLONG CreateTime;ULONGLONG PathFailures;ULONGLONG FailTime;BOOLEAN DeviceOffline;UCHAR NumberReadsWrap;UCHAR NumberWritesWrap;UCHAR NumberBytesReadWrap;UCHAR NumberBytesWrittenWrap;UCHAR Pad[3];};
struct _MSMCAEvent_MemoryError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG MEM_ERROR_STATUS;ULONGLONG MEM_PHYSICAL_ADDR;ULONGLONG MEM_PHYSICAL_MASK;ULONGLONG RESPONDER_ID;ULONGLONG TARGET_ID;ULONGLONG REQUESTOR_ID;ULONGLONG BUS_SPECIFIC_DATA;USHORT MEM_NODE;USHORT MEM_CARD;USHORT MEM_BANK;USHORT xMEM_DEVICE;USHORT MEM_MODULE;USHORT MEM_ROW;USHORT MEM_COLUMN;USHORT MEM_BIT_POSITION;ULONG Size;UCHAR RawRecord[1];};
struct _MSMCAEvent_PCIBusError {ULONGLONG RecordId;UCHAR ErrorSeverity;ULONG Type;ULONG Cpu;ULONG AdditionalErrors;ULONG LogToEventlog;ULONGLONG VALIDATION_BITS;ULONGLONG PCI_BUS_ERROR_STATUS;ULONGLONG PCI_BUS_ADDRESS;ULONGLONG PCI_BUS_DATA;ULONGLONG PCI_BUS_CMD;ULONGLONG PCI_BUS_REQUESTOR_ID;ULONGLONG PCI_BUS_RESPONDER_ID;ULONGLONG PCI_BUS_TARGET_ID;USHORT PCI_BUS_ERROR_TYPE;UCHAR PCI_BUS_ID_BusNumber;UCHAR PCI_BUS_ID_SegmentNumber;ULONG Size;UCHAR RawRecord[1];};
struct _NDIS_TAPI_DEV_SPECIFIC {ULONG ulRequestID;HDRV_LINE hdLine;ULONG ulAddressID;HDRV_CALL hdCall;ULONG ulParamsSize;UCHAR Params[1];};
struct _NDIS_WAN_COMPRESS_INFO {UCHAR SessionKey[8];ULONG MSCompType;UCHAR CompType;USHORT CompLength;_NDIS_WAN_COMPRESS_INFO___D1F0A6CD8C62CCC4B6A91273A74DDA9D __anonymous0;};
struct _SCSI_WMI_REQUEST_BLOCK {USHORT Length;UCHAR Function;UCHAR SrbStatus;UCHAR WMISubFunction;UCHAR PathId;UCHAR TargetId;UCHAR Lun;UCHAR Reserved1;UCHAR WMIFlags;UCHAR Reserved2[2];ULONG SrbFlags;ULONG DataTransferLength;ULONG TimeOutValue;PVOID DataBuffer;PVOID DataPath;PVOID Reserved3;PVOID OriginalRequest;PVOID SrbExtension;ULONG Reserved4;UCHAR Reserved5[16];};
struct _VIDEO_WIN32K_CALLBACKS {PVOID PhysDisp;PVIDEO_WIN32K_CALLOUT Callout;ULONG bACPI;HANDLE pPhysDeviceObject;ULONG DualviewFlags;};
typedef void DMA_COMPLETION_ROUTINE(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PVOID CompletionContext, DMA_COMPLETION_STATUS Status);
typedef BOOLEAN FAST_IO_DEVICE_CONTROL(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength, ULONG IoControlCode, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
struct IIndirectedUnknownVtbl {HRESULT ( *IndirectedQueryInterface)(IIndirectedUnknown *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *IndirectedAddRef)(IIndirectedUnknown *This);ULONG ( *IndirectedRelease)(IIndirectedUnknown *This);};
typedef NTSTATUS (*PHALIOREADWRITEHANDLER)(BOOLEAN fRead, ULONG dwAddr, ULONG dwSize, PULONG pdwData);
typedef BOOLEAN (*PHIDP_INSERT_SCANCODES)(PVOID Context, PCHAR NewScanCodes, ULONG Length);
typedef NTSTATUS (*PI8042_SYNCH_READ_PORT)(PVOID Context, PUCHAR Value, BOOLEAN WaitForACK);
typedef VP_STATUS (*PINT10_ALLOCATE_BUFFER)(PVOID Context, PUSHORT Seg, PUSHORT Off, PULONG Length);
typedef NTSTATUS POWER_SETTING_CALLBACK(LPCGUID SettingGuid, PVOID Value, ULONG ValueLength, PVOID Context);
typedef NDIS_STATUS PROTOCOL_CM_CLOSE_CALL(NDIS_HANDLE CallMgrVcContext, NDIS_HANDLE CallMgrPartyContext, PVOID CloseData, UINT Size);
typedef NDIS_STATUS PROTOCOL_CM_DROP_PARTY(NDIS_HANDLE CallMgrPartyContext, PVOID CloseData, UINT Size);
struct _AVCSTRM_BUFFER_STRUCT {BOOL ClockProvider;HANDLE ClockHandle;PKSSTREAM_HEADER StreamHeader;PVOID FrameBuffer;PVOID Context;};
struct _BRB_SCO_FLUSH_CHANNEL {BRB_HEADER Hdr;BTH_ADDR BtAddress;SCO_CHANNEL_HANDLE ChannelHandle;ULONG FlushFlags;};
struct _CM_FLOPPY_DEVICE_DATA {USHORT Version;USHORT Revision;CHAR Size[8];ULONG MaxDensity;ULONG MountDensity;UCHAR StepRateHeadUnloadTime;UCHAR HeadLoadTime;UCHAR MotorOffTime;UCHAR SectorLengthCode;UCHAR SectorPerTrack;UCHAR ReadWriteGapLength;UCHAR DataTransferLength;UCHAR FormatGapLength;UCHAR FormatFillCharacter;UCHAR HeadSettleTime;UCHAR MotorSettleTime;UCHAR MaximumTrackValue;UCHAR DataTransferRate;};
struct _D3DDDI_ALLOCATIONINFO {D3DKMT_HANDLE hAllocation; void *pSystemMem;void *pPrivateDriverData;UINT PrivateDriverDataSize;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;union _D3DDDI_ALLOCATIONINFO___9C237A8DCEB414086FDDD8CA87C44C50 Flags;};
struct _DOT11_POWER_MGMT_MODE {DOT11_POWER_MODE dot11PowerMode;ULONG uPowerSaveLevel;USHORT usListenInterval;USHORT usAID;BOOLEAN bReceiveDTIMs;};
struct _DXGKARG_CANCELCOMMAND {HANDLE hContext;void *pDmaBuffer;UINT DmaBufferSize;UINT DmaBufferSubmissionStartOffset;UINT DmaBufferSubmissionEndOffset;void *pDmaBufferPrivateData;UINT DmaBufferPrivateDataSize;UINT DmaBufferPrivateDataSubmissionStartOffset;UINT DmaBufferPrivateDataSubmissionEndOffset; DXGK_ALLOCATIONLIST *pAllocationList;UINT AllocationListSize; D3DDDI_PATCHLOCATIONLIST *pPatchLocationList;UINT PatchLocationListSize;UINT PatchLocationListSubmissionStart;UINT PatchLocationListSubmissionLength;};
struct _DXGKARG_CREATECONTEXT {HANDLE hContext;UINT NodeOrdinal;UINT EngineAffinity;DXGK_CREATECONTEXTFLAGS Flags;void *pPrivateDriverData;UINT PrivateDriverDataSize;DXGK_CONTEXTINFO ContextInfo;};
struct _EMULATOR_ACCESS_ENTRY {ULONG BasePort;ULONG NumConsecutivePorts;EMULATOR_PORT_ACCESS_TYPE AccessType;UCHAR AccessMode;UCHAR StringSupport;PVOID Routine;};
struct _FILE_LINK_INFORMATION {BOOLEAN ReplaceIfExists;HANDLE RootDirectory;ULONG FileNameLength;WCHAR FileName[1];};
struct _IMAGE_OPTIONAL_HEADER {USHORT Magic;UCHAR MajorLinkerVersion;UCHAR MinorLinkerVersion;ULONG SizeOfCode;ULONG SizeOfInitializedData;ULONG SizeOfUninitializedData;ULONG AddressOfEntryPoint;ULONG BaseOfCode;ULONG BaseOfData;ULONG ImageBase;ULONG SectionAlignment;ULONG FileAlignment;USHORT MajorOperatingSystemVersion;USHORT MinorOperatingSystemVersion;USHORT MajorImageVersion;USHORT MinorImageVersion;USHORT MajorSubsystemVersion;USHORT MinorSubsystemVersion;ULONG Win32VersionValue;ULONG SizeOfImage;ULONG SizeOfHeaders;ULONG CheckSum;USHORT Subsystem;USHORT DllCharacteristics;ULONG SizeOfStackReserve;ULONG SizeOfStackCommit;ULONG SizeOfHeapReserve;ULONG SizeOfHeapCommit;ULONG LoaderFlags;ULONG NumberOfRvaAndSizes;IMAGE_DATA_DIRECTORY DataDirectory[16];};
struct _KCRM_TRANSACTION_BLOB {UOW UOW;GUID TmIdentity;ULONG IsolationLevel;ULONG IsolationFlags;ULONG Timeout;WCHAR Description[64];};
struct _KSM_BDA_GPNV_GETVALUE {KSMETHOD Method;ULONG ulNameLength;CHAR cLanguage[12];BYTE argbData[1];};
struct _KSM_BDA_GPNV_SETVALUE {KSMETHOD Method;ULONG ulDialogRequest;CHAR cLanguage[12];ULONG ulNameLength;ULONG ulValueLength;BYTE argbName[1];};
struct _MSNdis_WmiEnumAdapter {MSNdis_ObjectHeader Header;ULONG IfIndex;ULONGLONG NetLuid;CHAR VariableData[1];};
struct _MSV1_0_NTLM3_RESPONSE {UCHAR Response[16];UCHAR RespType;UCHAR HiRespType;USHORT Flags;ULONG MsgWord;ULONGLONG TimeStamp;UCHAR ChallengeFromClient[8];ULONG AvPairsOff;UCHAR Buffer[1];};
struct _PARTITION_INFORMATION {LARGE_INTEGER StartingOffset;LARGE_INTEGER PartitionLength;ULONG HiddenSectors;ULONG PartitionNumber;UCHAR PartitionType;BOOLEAN BootIndicator;BOOLEAN RecognizedPartition;BOOLEAN RewritePartition;};
struct _SRBEX_DATA_SCSI_CDB16 {SRBEXDATATYPE Type;ULONG Length;UCHAR ScsiStatus;UCHAR SenseInfoBufferLength;UCHAR CdbLength;UCHAR Reserved;ULONG Reserved1;PVOID SenseInfoBuffer;UCHAR Cdb[16];};
struct _SRBEX_DATA_SCSI_CDB32 {SRBEXDATATYPE Type;ULONG Length;UCHAR ScsiStatus;UCHAR SenseInfoBufferLength;UCHAR CdbLength;UCHAR Reserved;ULONG Reserved1;PVOID SenseInfoBuffer;UCHAR Cdb[32];};
struct _STORAGE_REQUEST_BLOCK {USHORT Length;UCHAR Function;UCHAR SrbStatus;UCHAR ReservedUchar[4];ULONG Signature;ULONG Version;ULONG SrbLength;ULONG SrbFunction;ULONG SrbFlags;ULONG ReservedUlong;ULONG RequestTag;USHORT RequestPriority;USHORT RequestAttribute;ULONG TimeOutValue;ULONG SystemStatus;ULONG ZeroGuard1;ULONG AddressOffset;ULONG NumSrbExData;ULONG DataTransferLength;PVOID DataBuffer;PVOID ZeroGuard2;PVOID OriginalRequest;PVOID ClassContext;PVOID PortContext;PVOID MiniportContext;struct _STORAGE_REQUEST_BLOCK *NextSrb;ULONG SrbExDataOffset[1];};
struct _XXCTL_LOWIO_COMPONENT {ULONG Flags;_XXCTL_LOWIO_COMPONENT___A5BF1F1DE168F2930E7B3CD36C2417E0 __anonymous0;ULONG InputBufferLength;PVOID pInputBuffer;ULONG OutputBufferLength;PVOID pOutputBuffer;UCHAR MinorFunction;};
typedef PVOID (*pKdMapPhysicalMemory64)(PHYSICAL_ADDRESS PhysicalAddress, ULONG NumberPages, BOOLEAN FlushCurrentTLB);
typedef void (*CHANGER_ERROR_ROUTINE)(PDEVICE_OBJECT DeviceObject, PSCSI_REQUEST_BLOCK Srb, NTSTATUS *Status, BOOLEAN *Retry);
struct DOT11_OFFLOAD_NETWORK {DOT11_SSID Ssid;DOT11_CIPHER_ALGORITHM UnicastCipher;DOT11_AUTH_ALGORITHM AuthAlgo;DOT11_CHANNEL_HINT Dot11ChannelHints[4];};
typedef NTSTATUS ( *DXGKCB_QUERY_SERVICES)(HANDLE DeviceHandle, DXGK_SERVICES ServicesType, PINTERFACE Interface);
typedef NTSTATUS ENABLE_VIRTUALIZATION(PVOID Context, UINT16 NumVFs, BOOLEAN EnableVfMigration, BOOLEAN EnableMigrationInterrupt, BOOLEAN EnableVirtualization);
typedef NTSTATUS IO_COMPLETION_ROUTINE(PDEVICE_OBJECT DeviceObject, PIRP Irp, PVOID Context);
typedef NTSTATUS (*PAGP_GET_MAPPED_PAGES)(PVOID AgpContext, PVOID MapHandle, ULONG NumberOfPages, ULONG OffsetInPages, PMDL Mld);
typedef PHYSICAL_ADDRESS ( *PAGP_RESERVE_PHYSICAL)(PVOID HwDeviceExtension, ULONG Pages, VIDEO_PORT_CACHE_TYPE Caching, PVOID *PhysicalReserveContext);
typedef BOOLEAN PCI_IS_DEVICE_PRESENT(USHORT VendorID, USHORT DeviceID, UCHAR RevisionID, USHORT SubVendorID, USHORT SubSystemID, ULONG Flags);
typedef WSK_INSPECT_ACTION ( *PFN_WSK_INSPECT_EVENT)(PVOID SocketContext, PSOCKADDR LocalAddress, PSOCKADDR RemoteAddress, PWSK_INSPECT_ID InspectID);
typedef NDIS_STATUS PROTOCOL_CM_ADD_PARTY(NDIS_HANDLE CallMgrVcContext, PCO_CALL_PARAMETERS CallParameters, NDIS_HANDLE NdisPartyHandle, PNDIS_HANDLE CallMgrPartyContext);
typedef NDIS_STATUS PROTOCOL_CM_MAKE_CALL(NDIS_HANDLE CallMgrVcContext, PCO_CALL_PARAMETERS CallParameters, NDIS_HANDLE NdisPartyHandle, PNDIS_HANDLE CallMgrPartyContext);
typedef NTSTATUS (*PSFFPROT_SET_PROPERTY)(PVOID Context, SFFPROT_PROPERTY Property, ULONG BufferLength, PVOID PropertyBuffer);
struct _ATM_MEDIA_PARAMETERS {ATM_VPIVCI ConnectionId;ATM_AAL_TYPE AALType;ULONG CellDelayVariationCLP0;ULONG CellDelayVariationCLP1;ULONG CellLossRatioCLP0;ULONG CellLossRatioCLP1;ULONG CellTransferDelayCLP0;ULONG CellTransferDelayCLP1;ULONG DefaultCLP;ATM_FLOW_PARAMETERS Transmit;ATM_FLOW_PARAMETERS Receive;};
struct _BANDWIDTH_ALLOCATION {LIST_ENTRY AllocationList;ULONG Tag;ULONG OwnedUnits;ULONG fulSpeed;BOOLEAN bRemoteAllocation;ULONG Generation;PNODE_DEVICE_EXTENSION DeviceExtension;};
struct _DXGK_TIMED_OPERATION {USHORT Size;ULONG_PTR OwnerTag;BOOLEAN OsHandled;BOOLEAN TimeoutTriggered;LARGE_INTEGER Timeout;LARGE_INTEGER StartTick;};
struct _HIDP_COLLECTION_DESC {USAGE UsagePage;USAGE Usage;UCHAR CollectionNumber;UCHAR Reserved[15];USHORT InputLength;USHORT OutputLength;USHORT FeatureLength;USHORT PreparsedDataLength;PHIDP_PREPARSED_DATA PreparsedData;};
struct _IMAGE_SECTION_HEADER {UCHAR Name[8];union _IMAGE_SECTION_HEADER___4A6E593A9690750D94F7FA5A570333DC Misc;ULONG VirtualAddress;ULONG SizeOfRawData;ULONG PointerToRawData;ULONG PointerToRelocations;ULONG PointerToLinenumbers;USHORT NumberOfRelocations;USHORT NumberOfLinenumbers;ULONG Characteristics;};
struct _IO_ERROR_LOG_MESSAGE {USHORT Type;USHORT Size;USHORT DriverNameLength;LARGE_INTEGER TimeStamp;ULONG DriverNameOffset;IO_ERROR_LOG_PACKET EntryData;};
struct _KSALLOCATOR_DISPATCH {PFNKSPININITIALIZEALLOCATOR InitializeAllocator;PFNKSDELETEALLOCATOR DeleteAllocator;PFNKSDEFAULTALLOCATE Allocate;PFNKSDEFAULTFREE Free;};
struct _MSNdis_WmiOutputInfo {MSNdis_ObjectHeader Header;ULONG Flags;UCHAR SupportedRevision;UCHAR Padding1;USHORT Padding2;ULONG DataOffset;};
struct _MSiSCSI_RADIUSConfig {BOOLEAN UseRADIUSForCHAP;ULONG SharedSecretSizeInBytes;ISCSI_IP_Address RADIUSServer;ISCSI_IP_Address BackupRADIUSServer;ULONG Reserved;UCHAR SharedSecret[1];};
struct _NDIS_DMA_DESCRIPTION {BOOLEAN DemandMode;BOOLEAN AutoInitialize;BOOLEAN DmaChannelSpecified;DMA_WIDTH DmaWidth;DMA_SPEED DmaSpeed;ULONG DmaPort;ULONG DmaChannel;};
struct tagKS_VIDEOINFOHEADER {RECT rcSource;RECT rcTarget;DWORD dwBitRate;DWORD dwBitErrorRate;REFERENCE_TIME AvgTimePerFrame;KS_BITMAPINFOHEADER bmiHeader;};
typedef void ( *DXGKCB_LOG_ETW_EVENT)( LPCGUID EventGuid, UCHAR Type, USHORT EventBufferSize, PVOID EventBuffer);
typedef NTSTATUS LLDP_ENUMERATE_MSAPS(PVOID ClientBindingContext, PLLDP_MSAP MsapArray, SIZE_T BufferSize, SIZE_T *MsapCount);
typedef NTSTATUS (*NDK_FN_DEREGISTER_MR)(NDK_MR *pNdkMr, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBSendFilterHook_v1)( WCHAR *pAdapter,  void *pPacket,  UCHAR *pMediaHeader, ULONG cMediaHeaderLength,  UCHAR *pPayload, ULONG cPayloadLength, ULONG Flags);
typedef NTSTATUS (*PAGP_UNMAP_MEMORY_EX)(PVOID AgpContext, PVOID MapHandle, ULONG NumberOfPages, ULONG OffsetInPages, PMDL Mdl);
typedef NTSTATUS (*PCONVERTSTREAMTOTREE)(PUCHAR Stream, ULONG Size, PSDP_TREE_ROOT_NODE *Node, ULONG tag);
typedef NTSTATUS (*PFINDATTRIBUTEINTREE)(PSDP_TREE_ROOT_NODE Tree, USHORT AttribId, PSDP_NODE *AttribValue);
typedef NTSTATUS ( *PFN_WSK_CLIENT_EVENT)(PVOID ClientContext, ULONG EventType, PVOID Information, SIZE_T InformationLength);
typedef NTSTATUS (*PRXCE_IND_DATA_READY)(PVOID pEventContext, PMDL pBuffer, ULONG CopiedDataSize, NTSTATUS CopyDataStatus);
typedef NTSTATUS (*PRXCE_IND_DISCONNECT)(PVOID pRxCeEventContext, PRXCE_VC pVc, int DisconnectDataLength, PVOID DisconnectData, int DisconnectInformationLength, PVOID DisconnectInformation, ULONG DisconnectFlags);
struct _ATA_PASS_THROUGH_EX {USHORT Length;USHORT AtaFlags;UCHAR PathId;UCHAR TargetId;UCHAR Lun;UCHAR ReservedAsUchar;ULONG DataTransferLength;ULONG TimeOutValue;ULONG ReservedAsUlong;ULONG_PTR DataBufferOffset;UCHAR PreviousTaskFile[8];UCHAR CurrentTaskFile[8];};
struct _ATM_FLOW_PARAMETERS {ATM_SERVICE_CATEGORY ServiceCategory;ULONG AverageCellRate;ULONG PeakCellRate;ULONG MinimumCellRate;ULONG InitialCellRate;ULONG BurstLengthCells;ULONG MaxSduSize;ULONG TransientBufferExposure;ULONG CumulativeRMFixedRTT;UCHAR RateIncreaseFactor;UCHAR RateDecreaseFactor;USHORT ACRDecreaseTimeFactor;UCHAR MaximumCellsPerForwardRMCell;UCHAR MaximumForwardRMCellInterval;UCHAR CutoffDecreaseFactor;UCHAR Reserved1;ULONG MissingRMCellCount;ULONG Reserved2;ULONG Reserved3;};
struct _AVCSTRM_OPEN_STRUCT {KSPIN_DATAFLOW DataFlow;PAVCSTRM_FORMAT_INFO AVCFormatInfo;PVOID AVCStreamContext;HANDLE hPlugLocal;};
struct _BDA_CAS_OPENMMIDATA {ULONG ulDialogNumber;ULONG ulDialogRequest;GUID uuidDialogType;USHORT usDialogDataLength;BYTE argbDialogData[1];};
struct _CDROM_SET_STREAMING {CDROM_SPEED_REQUEST RequestType;ULONG ReadSize;ULONG ReadTime;ULONG WriteSize;ULONG WriteTime;ULONG StartLba;ULONG EndLba;WRITE_ROTATION RotationControl;BOOLEAN RestoreDefaults;BOOLEAN SetExact;BOOLEAN RandomAccess;BOOLEAN Persistent;};
struct _DEVICE_CAPABILITIES {USHORT Size;USHORT Version;unsigned int DeviceD1 : 1;unsigned int DeviceD2 : 1;unsigned int LockSupported : 1;unsigned int EjectSupported : 1;unsigned int Removable : 1;unsigned int DockDevice : 1;unsigned int UniqueID : 1;unsigned int SilentInstall : 1;unsigned int RawDeviceOK : 1;unsigned int SurpriseRemovalOK : 1;unsigned int WakeFromD0 : 1;unsigned int WakeFromD1 : 1;unsigned int WakeFromD2 : 1;unsigned int WakeFromD3 : 1;unsigned int HardwareDisabled : 1;unsigned int NonDynamic : 1;unsigned int WarmEjectSupported : 1;unsigned int NoDisplayInUI : 1;unsigned int Reserved1 : 1;unsigned int Reserved : 13;ULONG Address;ULONG UINumber;DEVICE_POWER_STATE DeviceState[7];SYSTEM_POWER_STATE SystemWake;DEVICE_POWER_STATE DeviceWake;ULONG D1Latency;ULONG D2Latency;ULONG D3Latency;};
struct _DSM_DEREGISTER_DATA {ULONG DeregisterDataSize;PVOID DsmContext;PDRIVER_OBJECT DriverObject;PDSM_MPIO_CONTEXT MpioContext;};
struct _ENCRYPTED_DATA_INFO {ULONGLONG StartingFileOffset;ULONG OutputBufferOffset;ULONG BytesWithinFileSize;ULONG BytesWithinValidDataLength;USHORT CompressionFormat;UCHAR DataUnitShift;UCHAR ChunkShift;UCHAR ClusterShift;UCHAR EncryptionFormat;USHORT NumberOfDataBlocks;ULONG DataBlockSize[1];};
struct _EVENT_FILTER_HEADER {USHORT Id;UCHAR Version;UCHAR Reserved[5];ULONGLONG InstanceId;ULONG Size;ULONG NextOffset;};
struct _HBAFCPBindingEntry2 {ULONG Type;HBAFCPID FCPId;UCHAR Luid[256];HBAScsiID ScsiId;};
struct _IO_SECURITY_CONTEXT {PSECURITY_QUALITY_OF_SERVICE SecurityQos;PACCESS_STATE AccessState;ACCESS_MASK DesiredAccess;ULONG FullCreateOptions;};
struct _IRB_REQ_ASYNC_WRITE {IO_ADDRESS DestinationAddress;ULONG nNumberOfBytesToWrite;ULONG nBlockSize;ULONG fulFlags;PMDL Mdl;ULONG ulGeneration;UCHAR chPriority;UCHAR nSpeed;UCHAR tCode;UCHAR Reserved;ULONG ElapsedTime;};
struct _KEYBOARD_ATTRIBUTES {KEYBOARD_ID KeyboardIdentifier;USHORT KeyboardMode;USHORT NumberOfFunctionKeys;USHORT NumberOfIndicators;USHORT NumberOfKeysTotal;ULONG InputDataQueueLength;KEYBOARD_TYPEMATIC_PARAMETERS KeyRepeatMinimum;KEYBOARD_TYPEMATIC_PARAMETERS KeyRepeatMaximum;};
struct _KSDEVICE_DESCRIPTOR { KSDEVICE_DISPATCH *Dispatch;ULONG FilterDescriptorsCount; KSFILTER_DESCRIPTOR * *FilterDescriptors;ULONG Version;ULONG Flags;PVOID Alignment;};
struct _KSM_BDA_DEBUG_LEVEL {KSMETHOD Method;UCHAR ucDebugLevel;ULONG ulDebugStringSize;BYTE argbDebugString[1];};
struct _KSM_BDA_SCAN_FILTER {KSMETHOD Method;ULONG ulScanModulationTypeSize;ULONG64 AnalogVideoStandards;BYTE argbScanModulationTypes[1];};
struct _SECURITY_DESCRIPTOR {UCHAR Revision;UCHAR Sbz1;SECURITY_DESCRIPTOR_CONTROL Control;PSID Owner;PSID Group;PACL Sacl;PACL Dacl;};
struct _SET_DISK_ATTRIBUTES {ULONG Version;BOOLEAN Persist;BOOLEAN RelinquishOwnership;BOOLEAN Reserved1[2];ULONGLONG Attributes;ULONGLONG AttributesMask;GUID Owner;};
struct _STREAM_LAYOUT_ENTRY {ULONG Version;ULONG NextStreamOffset;ULONG Flags;ULONG ExtentInformationOffset;LARGE_INTEGER AllocationSize;LARGE_INTEGER EndOfFile;ULONGLONG Reserved;ULONG AttributeFlags;ULONG StreamIdentifierLength;WCHAR StreamIdentifier[1];};
struct _VideoModeDescriptor {ULONG PixelClockRate;ULONG VerticalRefreshRateNumerator;ULONG VerticalRefreshRateDenominator;ULONG HorizontalRefreshRateNumerator;ULONG HorizontalRefreshRateDenominator;USHORT HorizontalActivePixels;USHORT VerticalActivePixels;USHORT HorizontalBlankingPixels;USHORT VerticalBlankingPixels;USHORT HorizontalSyncOffset;USHORT VerticalSyncOffset;USHORT HorizontalSyncPulseWidth;USHORT VerticalSyncPulseWidth;USHORT HorizontalImageSize;USHORT VerticalImageSize;USHORT HorizontalBorder;USHORT VerticalBorder;BOOLEAN IsInterlaced;UCHAR StereoModeType;UCHAR SyncSignalType;UCHAR IsSerrationRequired;UCHAR IsSyncOnRGB;UCHAR CompositePolarityType;UCHAR VerticalPolarityType;UCHAR HorizontalPolarityType;UCHAR VideoStandardType;UCHAR Origin;UCHAR TimingType;};
struct _WWAN_SMS_PDU_RECORD {ULONG MessageIndex;WWAN_MSG_STATUS MsgStatus;UCHAR Size;CHAR PduData[366];};
typedef NTSTATUS DXGKDDI_LINK_DEVICE(IN_CONST_PDEVICE_OBJECT PhysicalDeviceObject, IN_CONST_PVOID MiniportDeviceContext, INOUT_PLINKED_DEVICE LinkedDevice);
struct HBA_FCPBindingEntry {HBA_FCPBINDINGTYPE type;HBA_SCSIID ScsiId;HBA_FCPID FcpId;HBA_UINT32 FcId;};
typedef NTSTATUS (*NDK_FN_CLOSE_OBJECT)(NDK_OBJECT_HEADER *pNdkObject, NDK_FN_CLOSE_COMPLETION CloseCompletion, PVOID RequestContext);
typedef void (*PDIRTY_PAGE_ROUTINE)(PFILE_OBJECT FileObject, PLARGE_INTEGER FileOffset, ULONG Length, PLARGE_INTEGER OldestLsn, PLARGE_INTEGER NewestLsn, PVOID Context1, PVOID Context2);
typedef NTSTATUS ( *PFLT_CONNECT_NOTIFY)(PFLT_PORT ClientPort, PVOID ServerPortCookie, PVOID ConnectionContext, ULONG SizeOfContext, PVOID *ConnectionPortCookie);
typedef NTSTATUS ( *PFLT_MESSAGE_NOTIFY)(PVOID PortCookie, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength, PULONG ReturnOutputBufferLength);
typedef NTSTATUS (*PFNKSDEVICEPNPSTART)(PKSDEVICE Device, PIRP Irp, PCM_RESOURCE_LIST TranslatedResourceList, PCM_RESOURCE_LIST UntranslatedResourceList);
typedef NTSTATUS (*PFNQUERYMEDIUMSLIST)(PVOID Context, ULONG *MediumsCount, PKSPIN_MEDIUM *MediumList);
typedef VP_STATUS (*PINT10_WRITE_MEMORY)(PVOID Context, USHORT Seg, USHORT Off, PVOID Buffer, ULONG Length);
typedef NTSTATUS (*PREPLACE_MAP_MEMORY)(PHYSICAL_ADDRESS TargetPhysicalAddress, PHYSICAL_ADDRESS SparePhysicalAddress, PLARGE_INTEGER NumberOfBytes, PVOID *TargetAddress, PVOID *SpareAddress);
typedef NDIS_STATUS PROTOCOL_CM_OPEN_AF(NDIS_HANDLE CallMgrBindingContext, PCO_ADDRESS_FAMILY AddressFamily, NDIS_HANDLE NdisAfHandle, PNDIS_HANDLE CallMgrAfContext);
typedef NDIS_STATUS PROTOCOL_CM_REG_SAP(NDIS_HANDLE CallMgrAfContext, PCO_SAP Sap, NDIS_HANDLE NdisSapHandle, PNDIS_HANDLE CallMgrSapContext);
typedef NTSTATUS ( *PRTAUDIOGETPOSITION)(PFILE_OBJECT PinFileObject, PUCHAR *ppPlayPosition, PLONG plOffset);
typedef VP_STATUS (*PVIDEO_HW_POWER_GET)(PVOID HwDeviceExtension, ULONG HwId, PVIDEO_POWER_MANAGEMENT VideoPowerControl);
typedef VP_STATUS (*PVIDEO_HW_POWER_SET)(PVOID HwDeviceExtension, ULONG HwId, PVIDEO_POWER_MANAGEMENT VideoPowerControl);
struct _IRB_REQ_ASYNC_LOCK {IO_ADDRESS DestinationAddress;ULONG nNumberOfArgBytes;ULONG nNumberOfDataBytes;ULONG fulTransactionType;ULONG fulFlags;ULONG Arguments[2];ULONG DataValues[2];PVOID pBuffer;ULONG ulGeneration;UCHAR chPriority;UCHAR nSpeed;UCHAR tCode;UCHAR Reserved;};
struct _IRB_REQ_ASYNC_READ {IO_ADDRESS DestinationAddress;ULONG nNumberOfBytesToRead;ULONG nBlockSize;ULONG fulFlags;PMDL Mdl;ULONG ulGeneration;UCHAR chPriority;UCHAR nSpeed;UCHAR tCode;UCHAR Reserved;ULONG ElapsedTime;};
struct _SRBEX_DATA_IO_INFO {SRBEXDATATYPE Type;ULONG Length;ULONG Flags;ULONG Key;ULONG RWLength;BOOLEAN IsWriteRequest;UCHAR Reserved[3];};
struct _STREAMS_TDI_ACTION {TDI_ACTION_HEADER Header;BOOLEAN DatagramOption;ULONG BufferLength;CHAR Buffer[1];};
struct _WHEA_GENERIC_ERROR {WHEA_GENERIC_ERROR_BLOCKSTATUS BlockStatus;ULONG RawDataOffset;ULONG RawDataLength;ULONG DataLength;WHEA_ERROR_SEVERITY ErrorSeverity;UCHAR Data[1];};
struct _WWAN_CONTEXT_STATE {ULONG uNwError;ULONG ConnectionId;WWAN_ACTIVATION_STATE ActivationState;WWAN_VOICE_CALL_STATE VoiceCallState;WWAN_IP_TYPE IPType;};
typedef void (*DSM_SET_COMPLETION)(PVOID DsmContext, PVOID DsmId, PIRP Irp, PSCSI_REQUEST_BLOCK Srb, PDSM_COMPLETION_INFO DsmCompletion);
typedef NTSTATUS GET_IDLE_WAKE_INFO(PVOID Context, SYSTEM_POWER_STATE SystemPowerState, PDEVICE_WAKE_DEPTH DeepestWakeableDstate);
struct IMAGE_COR20_HEADER {ULONG cb;USHORT MajorRuntimeVersion;USHORT MinorRuntimeVersion;IMAGE_DATA_DIRECTORY MetaData;ULONG Flags;union IMAGE_COR20_HEADER___32407F107936FCB17EEA014AB1E5DEE6 u;IMAGE_DATA_DIRECTORY Resources;IMAGE_DATA_DIRECTORY StrongNameSignature;IMAGE_DATA_DIRECTORY CodeManagerTable;IMAGE_DATA_DIRECTORY VTableFixups;IMAGE_DATA_DIRECTORY ExportAddressTableJumps;IMAGE_DATA_DIRECTORY ManagedNativeHeader;};
typedef NTSTATUS MF_ENUMERATE_CHILD(PVOID Context, ULONG Index, PMF_DEVICE_INFO ChildInfo);
typedef VP_STATUS (*PINT10_READ_MEMORY)(PVOID Context, USHORT Seg, USHORT Off, PVOID Buffer, ULONG Length);
struct _AVCPRECONNECTINFO {GUID DeviceID;UCHAR SubunitAddress[32];ULONG SubunitPlugNumber;KSPIN_DATAFLOW DataFlow;ULONG Flags;ULONG UnitPlugNumber;};
struct _BTHHFP_DESCRIPTOR {GUID InputPinCategory;GUID OutputPinCategory;GUID ContainerId;BOOL SupportsVolume;ULONG VolumePropertyValuesSize;UNICODE_STRING FriendlyName;};
struct _CIP_VALIDATE_INFO {HANDLE hConnect;PVOID Context;CYCLE_TIME TimeStamp;PUCHAR Packet;};
struct _IVHD_DEVICE_ENTRY {UINT8 Type;UINT16 DeviceId;union _IVHD_DEVICE_ENTRY___52C462F56CDF084018E3913BD4CBE19B DataSetting;union _IVHD_DEVICE_ENTRY___9A2FB2F2823ECB191F71F289DA475EC2 ExtendedDataSetting;};
struct _KBUGCHECK_DUMP_IO {ULONG64 Offset;PVOID Buffer;ULONG BufferLength;KBUGCHECK_DUMP_IO_TYPE Type;};
struct _LLDP_ADMIN_CONFIG {ULONG Revision;SIZE_T Size;LLDP_ADMIN_STATUS AdminStatus;ULONG MsgTxHold;ULONG MsgTxInterval;ULONG ReinitDelay;ULONG TxCreditMax;ULONG MsgFastTx;ULONG TxFastInit;BOOLEAN Persistent;};
struct _MEMORY_POWER_NODE {UCHAR Flag;UCHAR Reserved1;USHORT MpnId;ULONG Length;ULONG BaseAddressLow;ULONG BaseAddressHigh;ULONG LengthLow;ULONG LengthHigh;ULONG PowerStateCount;ULONG PhysicalComponentCount;MEMORY_POWER_STATE MpState;};
struct _OBJECT_ATTRIBUTES {ULONG Length;HANDLE RootDirectory;PUNICODE_STRING ObjectName;ULONG Attributes;PVOID SecurityDescriptor;PVOID SecurityQualityOfService;};
struct _PMI_CONFIGURATION {ULONG Version;USHORT Size;PMI_CONFIGURATION_TYPE ConfigurationType;union _PMI_CONFIGURATION___399906DC0E414BE6CAEA0950F1FB4247 Configuration;};
struct _REQ_NOTIFY_CHANGE {ULONG CompletionFilter;USHORT Fid;BOOLEAN WatchTree;UCHAR Reserved;};
struct _REQ_NT_IO_CONTROL {ULONG FunctionCode;USHORT Fid;BOOLEAN IsFsctl;UCHAR IsFlags;};
struct _SCSI_PASS_THROUGH {USHORT Length;UCHAR ScsiStatus;UCHAR PathId;UCHAR TargetId;UCHAR Lun;UCHAR CdbLength;UCHAR SenseInfoLength;UCHAR DataIn;ULONG DataTransferLength;ULONG TimeOutValue;ULONG_PTR DataBufferOffset;ULONG SenseInfoOffset;UCHAR Cdb[16];};
struct tagKS_AMVPDATAINFO {DWORD dwSize;DWORD dwMicrosecondsPerField;KS_AMVPDIMINFO amvpDimInfo;DWORD dwPictAspectRatioX;DWORD dwPictAspectRatioY;BOOL bEnableDoubleClock;BOOL bEnableVACT;BOOL bDataIsInterlaced;LONG lHalfLinesOdd;BOOL bFieldPolarityInverted;DWORD dwNumLinesInVREF;LONG lHalfLinesEven;DWORD dwReserved1;};
typedef PVOID ALLOCATE_FUNCTION(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag);
typedef BOOLEAN (*IDE_HW_INITIALIZE)(PVOID ChannelExtension, PIDE_DEVICE_PARAMETERS DeviceParameters, PIDENTIFY_DEVICE_DATA IdentifyData);
struct IPortClsPowerVtbl {NTSTATUS ( *RegisterAdapterPowerManagement)(PUNKNOWN pUnknown, PDEVICE_OBJECT DeviceObject);NTSTATUS ( *UnregisterAdapterPowerManagement)(PDEVICE_OBJECT DeviceObject);NTSTATUS ( *SetIdlePowerManagement)(PDEVICE_OBJECT DeviceObject, BOOLEAN bEnabled);};
typedef NTSTATUS (*NDK_FN_DISCONNECT)(NDK_CONNECTOR *pNdkConnector, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
typedef NTSTATUS (*PAGP_UNMAP_MEMORY)(PVOID AgpContext, PVOID MapHandle, ULONG NumberOfPages, ULONG OffsetInPages, PMDL Mdl);
typedef HRESULT (*PFNCREATEINSTANCE)(PUNKNOWN *Unknown,  IID * ClassId, PUNKNOWN OuterUnknown, POOL_TYPE PoolType);
struct _CACHE_DESCRIPTOR {UCHAR Level;UCHAR Associativity;USHORT LineSize;ULONG Size;PROCESSOR_CACHE_TYPE Type;};
struct _DEBUG_PORT_TABLE {DESCRIPTION_HEADER Header;UCHAR InterfaceType;UCHAR Reserved0[3];GEN_ADDR BaseAddress;ULONG OffsetDbgDevInfo;ULONG NumberDbgDevInfo;};
struct _DXGK_OVERLAYINFO {HANDLE hAllocation;PHYSICAL_ADDRESS PhysicalAddress;UINT SegmentId;RECT DstRect;RECT SrcRect;void *pPrivateDriverData;UINT PrivateDriverDataSize;};
struct _EXCEPTION_RECORD {NTSTATUS ExceptionCode;ULONG ExceptionFlags;struct _EXCEPTION_RECORD *ExceptionRecord;PVOID ExceptionAddress;ULONG NumberParameters;ULONG_PTR ExceptionInformation[15];};
struct _HIDP_DEVICE_DESC {PHIDP_COLLECTION_DESC CollectionDesc;ULONG CollectionDescLength;PHIDP_REPORT_IDS ReportIDs;ULONG ReportIDsLength;HIDP_GETCOLDESC_DBG Dbg;};
struct _IMAGE_OS2_HEADER {USHORT ne_magic;CHAR ne_ver;CHAR ne_rev;USHORT ne_enttab;USHORT ne_cbenttab;LONG ne_crc;USHORT ne_flags;USHORT ne_autodata;USHORT ne_heap;USHORT ne_stack;LONG ne_csip;LONG ne_sssp;USHORT ne_cseg;USHORT ne_cmod;USHORT ne_cbnrestab;USHORT ne_segtab;USHORT ne_rsrctab;USHORT ne_restab;USHORT ne_modtab;USHORT ne_imptab;LONG ne_nrestab;USHORT ne_cmovent;USHORT ne_align;USHORT ne_cres;UCHAR ne_exetyp;UCHAR ne_flagsothers;USHORT ne_pretthunks;USHORT ne_psegrefbytes;USHORT ne_swaparea;USHORT ne_expver;};
struct _ISCSI_PortalInfo {ULONG Index;UCHAR PortalType;UCHAR Protocol;UCHAR Reserved1;UCHAR Reserved2;ISCSI_IP_Address IPAddr;ULONG Port;USHORT PortalTag;};
struct _KernelPerfStates {ULONG Count;ULONG MaxFrequency;ULONG CurrentState;ULONG MaxPerfState;ULONG MinPerfState;ULONG LowestPerfState;ULONG ThermalConstraint;UCHAR BusyAdjThreshold;UCHAR PolicyType;UCHAR Type;UCHAR Reserved;ULONG TimerInterval;ULONGLONG TargetProcessors;ULONG PStateHandler;ULONG PStateContext;ULONG TStateHandler;ULONG TStateContext;ULONG FeedbackHandler;ULONG Reserved1;ULONGLONG Reserved2;KernelPerfState State[1];};
struct _MCFG_TABLE_ENTRY {ULONGLONG BaseAddress;USHORT SegmentNumber;UCHAR StartBusNumber;UCHAR EndBusNumber;ULONG Reserved;};
struct _MOUSE_INPUT_DATA {USHORT UnitId;USHORT Flags;_MOUSE_INPUT_DATA___C2F358CA55696375BBE6CFBE88407757 __anonymous0;ULONG RawButtons;LONG LastX;LONG LastY;ULONG ExtraInformation;};
struct _MPIO_DSM_Path_V2 {ULONGLONG DsmPathId;ULONGLONG Reserved;ULONG PathWeight;ULONG PrimaryPath;ULONG OptimizedPath;ULONG PreferredPath;ULONG FailedPath;ULONG TargetPortGroup_State;ULONG ALUASupport;UCHAR SymmetricLUA;UCHAR TargetPortGroup_Preferred;USHORT TargetPortGroup_Identifier;ULONG TargetPort_Identifier;ULONG Reserved32;ULONGLONG Reserved64;};
struct _NDIS_MAC_LINE_UP {ULONG LinkSpeed;NDIS_WAN_QUALITY Quality;USHORT SendWindow;NDIS_HANDLE ConnectionWrapperID;NDIS_HANDLE NdisLinkHandle;NDIS_HANDLE NdisLinkContext;};
struct _NDIS_TAPI_GET_ID {ULONG ulRequestID;HDRV_LINE hdLine;ULONG ulAddressID;HDRV_CALL hdCall;ULONG ulSelect;ULONG ulDeviceClassSize;ULONG ulDeviceClassOffset;VAR_STRING DeviceID;};
struct _NDK_ADAPTER_INFO {NDK_VERSION Version;UINT32 VendorId;UINT32 DeviceId;SIZE_T MaxRegistrationSize;SIZE_T MaxWindowSize;ULONG FRMRPageCount;ULONG MaxInitiatorRequestSge;ULONG MaxReceiveRequestSge;ULONG MaxReadRequestSge;ULONG MaxTransferLength;ULONG MaxInlineDataSize;ULONG MaxInboundReadLimit;ULONG MaxOutboundReadLimit;ULONG MaxReceiveQueueDepth;ULONG MaxInitiatorQueueDepth;ULONG MaxSrqDepth;ULONG MaxCqDepth;ULONG LargeRequestThreshold;ULONG MaxCallerData;ULONG MaxCalleeData;ULONG AdapterFlags;};
struct _OSVERSIONINFOEXA {ULONG dwOSVersionInfoSize;ULONG dwMajorVersion;ULONG dwMinorVersion;ULONG dwBuildNumber;ULONG dwPlatformId;CHAR szCSDVersion[128];USHORT wServicePackMajor;USHORT wServicePackMinor;USHORT wSuiteMask;UCHAR wProductType;UCHAR wReserved;};
struct _OSVERSIONINFOEXW {ULONG dwOSVersionInfoSize;ULONG dwMajorVersion;ULONG dwMinorVersion;ULONG dwBuildNumber;ULONG dwPlatformId;WCHAR szCSDVersion[128];USHORT wServicePackMajor;USHORT wServicePackMinor;USHORT wSuiteMask;UCHAR wProductType;UCHAR wReserved;};
struct _RX_IRP_LIST_ITEM {LIST_ENTRY IrpsList;PIRP pIrp;PMDL CopyDataBuffer;ULONG Completed;};
struct _SRB_HISTORY_ITEM {LARGE_INTEGER TickCountSent;LARGE_INTEGER TickCountCompleted;ULONG MillisecondsDelayOnRetry;SENSE_DATA NormalizedSenseData;UCHAR SrbStatus;UCHAR ClassDriverUse;};
struct nd_opt_route_info {UINT8 nd_opt_ri_type;UINT8 nd_opt_ri_len;UINT8 nd_opt_ri_prefix_len;nd_opt_route_info___DC5D226088DB1FA6D255C52DD8FCB908 __anonymous0;UINT32 nd_opt_ri_route_lifetime;IN6_ADDR nd_opt_ri_prefix;};
typedef NTSTATUS (*pHalQueryBusSlots)(PBUS_HANDLER BusHandler, ULONG BufferSize, PULONG SlotNumbers, PULONG ReturnedLength);
struct DOT11_STATISTICS {NDIS_OBJECT_HEADER Header;ULONGLONG ullFourWayHandshakeFailures;ULONGLONG ullTKIPCounterMeasuresInvoked;ULONGLONG ullReserved;DOT11_MAC_FRAME_STATISTICS MacUcastCounters;DOT11_MAC_FRAME_STATISTICS MacMcastCounters;DOT11_PHY_FRAME_STATISTICS PhyCounters[1];};
typedef NTSTATUS (*PARBITER_HANDLER)(PVOID Context, ARBITER_ACTION Action, PARBITER_PARAMETERS Parameters);
typedef NTSTATUS (*PCPFNSTARTDEVICE)(PDEVICE_OBJECT DeviceObject, PIRP Irp, PRESOURCELIST ResourceList);
struct _BTH_DEVICE_INFO {ULONG flags;BTH_ADDR address;BTH_COD classOfDevice;CHAR name[248];};
struct _GIC_DISTRIBUTOR {UCHAR Type;UCHAR Length;USHORT Reserved1;ULONG Identifier;ULONGLONG ControllerPhysicalAddress;ULONG GsivBase;ULONG Reserved;};
struct _LOWIO_LOCK_LIST {struct _LOWIO_LOCK_LIST *Next;ULONG LockNumber;RXVBO ByteOffset;LONGLONG Length;BOOLEAN ExclusiveLock;ULONG Key;};
struct _NDIS_802_11_KEY {ULONG Length;ULONG KeyIndex;ULONG KeyLength;NDIS_802_11_MAC_ADDRESS BSSID;NDIS_802_11_KEY_RSC KeyRSC;UCHAR KeyMaterial[1];};
struct _NDIS_TAPI_EVENT {HTAPI_LINE htLine;HTAPI_CALL htCall;ULONG ulMsg;ULONG_PTR ulParam1;ULONG_PTR ulParam2;ULONG_PTR ulParam3;};
struct _NET_BUFFER_DATA {PNET_BUFFER Next;PMDL CurrentMdl;ULONG CurrentMdlOffset;_NET_BUFFER_DATA_LENGTH __anonymous0;PMDL MdlChain;ULONG DataOffset;};
struct _PDO_INFORMATION {PDOSCSI_ADDR ScsiAddress;ULONG DeviceState;ULONGLONG PathIdentifier;ULONG IdentifierType;ULONG IdentifierLength;UCHAR Identifier[32];UCHAR Pad[4];};
struct _QUERY_INTERFACE { GUID *InterfaceType;USHORT Size;USHORT Version;PINTERFACE Interface;PVOID InterfaceSpecificData;};
struct _QUOTA_LIMITS_EX {SIZE_T PagedPoolLimit;SIZE_T NonPagedPoolLimit;SIZE_T MinimumWorkingSetSize;SIZE_T MaximumWorkingSetSize;SIZE_T PagefileLimit;LARGE_INTEGER TimeLimit;SIZE_T WorkingSetLimit;SIZE_T Reserved2;SIZE_T Reserved3;SIZE_T Reserved4;ULONG Flags;RATE_QUOTA_LIMIT CpuRateLimit;};
struct _WAKE_TIMER_INFO {SIZE_T OffsetToNext;ULARGE_INTEGER DueTime;ULONG Period;DIAGNOSTIC_BUFFER ReasonContext;};
struct sockaddr_in6_old {SHORT sin6_family;USHORT sin6_port;ULONG sin6_flowinfo;IN6_ADDR sin6_addr;};
typedef PVOID (*DSM_LB_GET_PATH)(PVOID DsmContext, PSCSI_REQUEST_BLOCK Srb, PDSM_IDS DsmList, PVOID CurrentPath, NTSTATUS *Status);
typedef NTSTATUS (*DSM_MOVE_DEVICE)(PVOID DsmContext, PDSM_IDS DsmIds, PVOID MPIOPath, PVOID SuggestedPath, ULONG Flags);
typedef NTSTATUS (*PCLASS_QUERY_ID)(PDEVICE_OBJECT DeviceObject, BUS_QUERY_ID_TYPE IdType, PUNICODE_STRING IdString);
typedef NTSTATUS (*PVALIDATESTREAM)(PUCHAR Stream, ULONG Size, PULONG_PTR ErrorByte);
typedef NTSTATUS (*TDI_PNP_HANDLER)(PUNICODE_STRING UpperComponent, PUNICODE_STRING LowerComponent, PUNICODE_STRING BindList, PVOID ReconfigBuffer, UINT ReconfigBufferSize, UINT Operation);
struct _BDA_DEBUG_DATA {PBDARESULT lResult;GUID uuidDebugDataType;ULONG ulDataSize;BYTE argbDebugData[1];};
struct _BDA_EVENT_DATA {PBDARESULT lResult;ULONG ulEventID;GUID uuidEventType;ULONG ulEventDataLength;BYTE argbEventData[1];};
struct _BUS_RESET_DATA {PVOID ResetContext;ULONG GenerationCount;NODE_ADDRESS DeviceNodeId;NODE_ADDRESS LocalNodeId;UCHAR SpeedToNode;};
struct _DSM_PARAMETERS {WCHAR DsmName[64];ULONGLONG DsmContext;DSM_VERSION DsmVersion;DSM_COUNTERS DsmCounters;};
struct _DXGKARG_RENDER { void * pCommand; UINT CommandLength;void *pDmaBuffer;UINT DmaSize;void *pDmaBufferPrivateData;UINT DmaBufferPrivateDataSize;DXGK_ALLOCATIONLIST *pAllocationList;UINT AllocationListSize;D3DDDI_PATCHLOCATIONLIST *pPatchLocationListIn;UINT PatchLocationListInSize;D3DDDI_PATCHLOCATIONLIST *pPatchLocationListOut;UINT PatchLocationListOutSize;UINT MultipassOffset;UINT DmaBufferSegmentId;PHYSICAL_ADDRESS DmaBufferPhysicalAddress;};
struct _HBAFC3MgmtInfo {ULONGLONG UniqueAdapterId;UCHAR wwn[8];ULONG unittype;ULONG PortId;ULONG NumberOfAttachedNodes;USHORT IPVersion;USHORT UDPPort;UCHAR IPAddress[16];USHORT reserved;USHORT TopologyDiscoveryFlags;ULONG reserved1;};
struct _MF_DEVICE_INFO {UNICODE_STRING Name;UNICODE_STRING HardwareID;UNICODE_STRING CompatibleID;PMF_RESOURCE_MAP ResourceMap;PMF_VARYING_RESOURCE_MAP VaryingResourceMap;ULONG MfFlags;};
struct _SD_SOCKET_DATA {SDBUS_TRANSFER_METHOD TransferMethod;SDBUS_SPEED_MODE SpeedMode;ULONG BusClock;BOOLEAN NonremovableDevice;};
struct _SRBEX_DATA_PNP {SRBEXDATATYPE Type;ULONG Length;UCHAR PnPSubFunction;UCHAR Reserved[3];STOR_PNP_ACTION PnPAction;ULONG SrbPnPFlags;ULONG Reserved1;};
struct _SRBEX_DATA_WMI {SRBEXDATATYPE Type;ULONG Length;UCHAR WMISubFunction;UCHAR WMIFlags;UCHAR Reserved[2];ULONG Reserved1;PVOID DataPath;};
struct _XSTATE_CONTEXT {ULONG64 Mask;ULONG Length;ULONG Reserved1;PXSAVE_AREA Area;ULONG Reserved2;PVOID Buffer;ULONG Reserved3;};
typedef NTSTATUS LLDP_OPEN_MSAP(PVOID ClientBindingContext, PLLDP_MSAP Msap, PVOID NotificationContext, HMSAP *MsapHandle);
typedef NTSTATUS (*PFNKSALLOCATOR)(PIRP Irp, ULONG BufferSize, BOOLEAN InputOperation);
struct _DOT11_WPA_TSC {ULONG uReserved;DOT11_OFFLOAD_TYPE dot11OffloadType;HANDLE hOffload;DOT11_IV48_COUNTER dot11IV48Counter;};
struct _I2C_CALLBACKS {PVIDEO_WRITE_CLOCK_LINE WriteClockLine;PVIDEO_WRITE_DATA_LINE WriteDataLine;PVIDEO_READ_CLOCK_LINE ReadClockLine;PVIDEO_READ_DATA_LINE ReadDataLine;};
struct _KDEVICE_QUEUE {CSHORT Type;CSHORT Size;LIST_ENTRY DeviceListHead;KSPIN_LOCK Lock;BOOLEAN Busy;};
struct _NET_PNP_EVENT {NET_PNP_EVENT_CODE NetEvent;PVOID Buffer;ULONG BufferLength;ULONG_PTR NdisReserved[4];ULONG_PTR TransportReserved[4];ULONG_PTR TdiReserved[4];ULONG_PTR TdiClientReserved[4];};
struct _NT_SMB_HEADER {UCHAR Protocol[4];UCHAR Command;union _NT_SMB_HEADER___EFB48DF9E93823741A1223EC6F9E871B Status;UCHAR Flags;USHORT Flags2;union {USHORT Reserved2[6];struct {USHORT PidHigh;_NT_SMB_HEADER___1981ACDE232C6DE21F6ECE4E585F2227 __anonymous0;};};USHORT Tid;USHORT Pid;USHORT Uid;USHORT Mid;};
struct _WSK_TRANSPORT {USHORT Version;USHORT SocketType;ULONG Protocol;ADDRESS_FAMILY AddressFamily;GUID ProviderId;};
typedef NTSTATUS (*NDK_FN_REJECT)(NDK_CONNECTOR *pNdkConnector,  PVOID pPrivateData, ULONG PrivateDataLength);
struct _ASYNC_PACKET {unsigned short AP_Priority : 4;unsigned short AP_tCode : 4;unsigned short AP_rt : 2;unsigned short AP_tLabel : 6;NODE_ADDRESS AP_Destination_ID;union _ASYNC_PACKET___AB07F285586641EA5A3A0A6EB783C0F2 u;NODE_ADDRESS AP_Source_ID;ULONG AP_Offset_Low;union _ASYNC_PACKET___03C481F7A4752B31164DFBAFD3BDD779 u1;};
struct _NDIS_RW_LOCK {_NDIS_RW_LOCK___8DA56E8A00A40642C2533108FF443746 __anonymous0;union {NDIS_RW_LOCK_REFCOUNT RefCount[32];ULONG RefCountEx[128];_NDIS_RW_LOCK___2850CBFD26D1AF5C4667709DD08EAAB9___66F9C77FB8E51BB73E770AD4F88FD05A __anonymous1;};};
struct _PROCLOCALGIC {UCHAR Type;UCHAR Length;USHORT Reserved;ULONG Identifier;ULONG AcpiProcessorId;ULONG Flags;ULONG ParkingProtocolVersion;ULONG PerformanceInterruptGsi;ULONGLONG ParkedPhysicalAddress;ULONGLONG ControllerPhysicalAddress;};
struct _RX_MID_ATLAS {USHORT MaximumNumberOfMids;USHORT MidsAllocated;USHORT NumberOfMidsInUse;USHORT NumberOfMidsDiscarded;USHORT MaximumMidFieldWidth;USHORT Reserved;USHORT MidQuantum;UCHAR MidQuantumFieldWidth;UCHAR NumberOfLevels;LIST_ENTRY MidMapFreeList;LIST_ENTRY MidMapExpansionList;PMID_MAP pRootMidMap;};
struct _WNODE_HEADER {ULONG BufferSize;ULONG ProviderId;union _WNODE_HEADER___F03C597F21C6A23CEEDB6A1B653FCCEC u;union _WNODE_HEADER___94883EDDB53D73798B50E968A69A9EBB u2;GUID Guid;ULONG ClientContext;ULONG Flags;};
struct _XSAVE_FORMAT {USHORT ControlWord;USHORT StatusWord;UCHAR TagWord;UCHAR Reserved1;USHORT ErrorOpcode;ULONG ErrorOffset;USHORT ErrorSelector;USHORT Reserved2;ULONG DataOffset;USHORT DataSelector;USHORT Reserved3;ULONG MxCsr;ULONG MxCsr_Mask;M128A FloatRegisters[8];M128A XmmRegisters[8];UCHAR Reserved4[220];ULONG Cr0NpxState;};
struct tagDRMFORWARD {ULONG Flags;PDEVICE_OBJECT DeviceObject;PFILE_OBJECT FileObject;PVOID Context;};
struct HBA_MgmtInfo {HBA_WWN wwn;HBA_UINT32 unittype;HBA_UINT32 PortId;HBA_UINT32 NumberOfAttachedNodes;HBA_UINT16 IPVersion;HBA_UINT16 UDPPort;HBA_UINT8 IPAddress[16];HBA_UINT16 reserved;HBA_UINT16 TopologyDiscoveryFlags;};
struct IUnknownVtbl {NTSTATUS ( *QueryInterface)(IUnknown *This,  IID *, PVOID *);ULONG ( *AddRef)(IUnknown *This);ULONG ( *Release)(IUnknown *This);};
typedef void (*PCLASS_ERROR)(PDEVICE_OBJECT DeviceObject, PSCSI_REQUEST_BLOCK Srb, NTSTATUS *Status, BOOLEAN *Retry);
typedef NTSTATUS  PCW_CALLBACK(PCW_CALLBACK_TYPE Type, PPCW_CALLBACK_INFORMATION Info, PVOID Context);
typedef NTSTATUS (*PFNKSHANDLER)(PIRP Irp, PKSIDENTIFIER Request, PVOID Data);
typedef BOOLEAN (*PI2C_START_2)(PVOID HwDeviceExtension, PVIDEO_I2C_CONTROL I2CControl);
struct _CC_HW_FIELD {VBICODECFILTERING_SCANLINES ScanlinesRequested;ULONG fieldFlags;LONGLONG PictureNumber;CC_BYTE_PAIR Lines[12];};
struct _CPTABLEINFO {USHORT CodePage;USHORT MaximumCharacterSize;USHORT DefaultChar;USHORT UniDefaultChar;USHORT TransDefaultChar;USHORT TransUniDefaultChar;USHORT DBCSCodePage;UCHAR LeadByte[12];PUSHORT MultiByteTable;PVOID WideCharTable;PUSHORT DBCSRanges;PUSHORT DBCSOffsets;};
struct _IGMP_HEADER {_IGMP_HEADER___B9454631A37D51F61B5C2590DE4942DA __anonymous0;_IGMP_HEADER___3A21793F27C9FFFA7D1391D8CCC24F6D __anonymous1;UINT16 Checksum;IN_ADDR MulticastAddress;};
struct _IPV6_HEADER {UINT32 VersionClassFlow;UINT16 PayloadLength;UINT8 NextHeader;UINT8 HopLimit;IN6_ADDR SourceAddress;IN6_ADDR DestinationAddress;};
struct _TPM20_TABLE {DESCRIPTION_HEADER Header;union _TPM20_TABLE___C10FB33E4CEA99E8ACC08E19EFF679EB u;UINT64 ControlAreaPA;UINT32 StartMethod;UINT32 PlatformParameters[8];};
typedef BOOLEAN (*PI2C_STOP_2)(PVOID HwDeviceExtension, PVIDEO_I2C_CONTROL I2CControl);
struct _DPC_BUFFER {CSHORT Type;UCHAR Number;UCHAR Importance;_DPC_BUFFER___DC140212850B4BBB5937385B736ED228 __anonymous0;PVOID DeferredRoutine;PVOID DeferredContext;PVOID SystemArgument1;PVOID SystemArgument2;PVOID DpcData;};
struct _FAST_MUTEX {LONG Count;PVOID Owner;ULONG Contention;KEVENT Event;ULONG OldIrql;};
struct _IMAGE_INFO {_IMAGE_INFO___750B9F7C657AA4459AFB3416A5571407 __anonymous0;PVOID ImageBase;ULONG ImageSelector;SIZE_T ImageSize;ULONG ImageSectionNumber;};
struct _URB_HEADER {USHORT Length;USHORT Function;USBD_STATUS Status;PVOID UsbdDeviceHandle;ULONG UsbdFlags;};
struct sockaddr_in {ADDRESS_FAMILY sin_family;USHORT sin_port;IN_ADDR sin_addr;CHAR sin_zero[8];};
typedef NTSTATUS DUMP_WRITE(PFILTER_EXTENSION FilterExtension, PLARGE_INTEGER DiskByteOffset, PMDL Mdl);
struct _ACPI_MPST {DESCRIPTION_HEADER Header;UCHAR SubspaceId;UCHAR Reserved2[3];USHORT MpnCount;UCHAR Reserved[2];MEMORY_POWER_NODE Mpn;};
struct _INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;};
struct _PCC_TABLE {DESCRIPTION_HEADER Header;union _PCC_TABLE___83536B2122381EB1BF94D79CF0D5F89E Flags;ULONG64 Reserved;PCC_SUBSPACE_HEADER Subspaces;};
struct _READ_LIST {PFILE_OBJECT FileObject;ULONG NumberOfEntries;LOGICAL IsImage;FILE_SEGMENT_ELEMENT List[1];};
struct _stat64i32 {_dev_t st_dev;_ino_t st_ino;unsigned short st_mode;short st_nlink;short st_uid;short st_gid;_dev_t st_rdev;_off_t st_size;__time64_t st_atime;__time64_t st_mtime;__time64_t st_ctime;};
typedef NTSTATUS DUMP_READ(PFILTER_EXTENSION FilterExtension, PLARGE_INTEGER DiskByteOffset, PMDL Mdl);
struct _SDP_NODE {SDP_NODE_HEADER hdr;ULONG DataSize;SDP_NODE_DATA u;PVOID Reserved;};
typedef NTSTATUS ( *GPIOOPEN)(PDEVICE_OBJECT, ULONG, PGPIOControl);
struct _ATM_SAP {ATM_BLLI_IE Blli;ATM_BHLI_IE Bhli;ULONG NumberOfAddresses;UCHAR Addresses[1];};
struct _KMUTANT {DISPATCHER_HEADER Header;LIST_ENTRY MutantListEntry;struct _KTHREAD *OwnerThread;BOOLEAN Abandoned;UCHAR ApcDisable;};
struct _T1_DATA {UCHAR IFSC;UCHAR IFSD;ULONG BytesReceived;ULONG BytesSent;ULONG BytesToSend;UCHAR LastError;BOOLEAN MoreData;UCHAR NAD;ULONG OriginalState;UCHAR Resend;UCHAR Resynch;UCHAR RSN;UCHAR SSN;ULONG State;UCHAR Wtx;PUCHAR ReplyData;BOOLEAN WaitForReply;UCHAR InfBytesSent;UCHAR Reserved[4];};
typedef NTSTATUS ( *I2COPEN)(PDEVICE_OBJECT, ULONG, PI2CControl);
struct _KTIMER {DISPATCHER_HEADER Header;ULARGE_INTEGER DueTime;LIST_ENTRY TimerListEntry;struct _KDPC *Dpc;ULONG Period;};
struct _stat32 {_dev_t st_dev;_ino_t st_ino;unsigned short st_mode;short st_nlink;short st_uid;short st_gid;_dev_t st_rdev;_off_t st_size;__time32_t st_atime;__time32_t st_mtime;__time32_t st_ctime;};
struct _DRHD {UCHAR Flags;UCHAR Reserved;USHORT SegmentNumber;ULONGLONG BaseAddress;DEVICESCOPE DeviceScope[1];};
struct _IVRS {DESCRIPTION_HEADER Header;IVRS_IVINFO IVInfo;UINT64 Reserved;UINT8 DefinitionBlocks[1];};
struct _RMRR {UCHAR Reserved[2];USHORT SegmentNumber;ULONGLONG RegionBaseAddress;ULONGLONG RegionLimitAddress;DEVICESCOPE DeviceScope[1];};
struct _RSDP {ULONGLONG Signature;UCHAR Checksum;UCHAR OEMID[6];UCHAR Revision;ULONG RsdtAddress;ULONG Length;PHYSICAL_ADDRESS XsdtAddress;UCHAR XChecksum;UCHAR Reserved[3];};
struct _stat {_dev_t st_dev;_ino_t st_ino;unsigned short st_mode;short st_nlink;short st_uid;short st_gid;_dev_t st_rdev;_off_t st_size;time_t st_atime;time_t st_mtime;time_t st_ctime;};
struct _VPB {CSHORT Type;CSHORT Size;USHORT Flags;USHORT VolumeLabelLength;struct _DEVICE_OBJECT *DeviceObject;struct _DEVICE_OBJECT *RealDevice;ULONG SerialNumber;ULONG ReferenceCount;WCHAR VolumeLabel[32];};
struct stat {_dev_t st_dev;_ino_t st_ino;unsigned short st_mode;short st_nlink;short st_uid;short st_gid;_dev_t st_rdev;_off_t st_size;time_t st_atime;time_t st_mtime;time_t st_ctime;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___3EB8CABE069EF4BB3B59E8B4E119E046 {HANDLE hAllocation;UINT TransferOffset;SIZE_T TransferSize;struct _DXGKARG_BUILDPAGINGBUFFER______3EB8CABE069EF4BB3B59E8B4E119E046___C9D31DD41E1FADF97E70E45B8DDAE5D0 Source;struct _DXGKARG_BUILDPAGINGBUFFER______3EB8CABE069EF4BB3B59E8B4E119E046___C9D31DD41E1FADF97E70E45B8DDAE5D0 Destination;DXGK_TRANSFERFLAGS Flags;UINT MdlOffset;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___F7EE40DE4E716B260B779FE59F440645 {HANDLE hAllocation;SIZE_T AllocationOffsetInBytes;SIZE_T TransferOffsetInBytes;SIZE_T TransferSizeInBytes;D3DGPU_VIRTUAL_ADDRESS SourceVirtualAddress;D3DGPU_VIRTUAL_ADDRESS DestinationVirtualAddress;DXGK_TRANSFERFLAGS2 Flags;UINT SwizzlingRangeId;UINT SwizzlingRangeData;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___F96A1248A3A1B3EAF839ECFA87915C7E {HANDLE hAllocation;UINT TransferOffset;SIZE_T TransferSize;struct _DXGKARG_BUILDPAGINGBUFFER______F96A1248A3A1B3EAF839ECFA87915C7E___C9D31DD41E1FADF97E70E45B8DDAE5D0 Source;struct _DXGKARG_BUILDPAGINGBUFFER______F96A1248A3A1B3EAF839ECFA87915C7E___C9D31DD41E1FADF97E70E45B8DDAE5D0 Destination;DXGK_TRANSFERFLAGS Flags;UINT SwizzlingRangeId;UINT SwizzlingRangeData;};
struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___F283BDF483E96915173589B9951F87CD {ULONG ProximityDomain;UCHAR Reserved[2];PHYSICAL_ADDRESS Base;ULONGLONG Length;ULONG Reserved2;struct _ACPI_SRAT_ENTRY______F283BDF483E96915173589B9951F87CD___DC8F39E2CA406A36842771D96FE8E578 Flags;UCHAR Reserved3[8];};
struct _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398___1F8B7C21C9C3E44248E9C6F91974E44C {ULONG Length;PUNICODE_STRING FileName;FILE_INFORMATION_CLASS FileInformationClass;ULONG FileIndex;PVOID DirectoryBuffer;PMDL MdlAddress;};
struct _XSTATE_SAVE___18201E4AFA8D7B47D67A178F8DC66E77___AAB77B42D6DB5CE2906BF76243B5486F {LONG64 Reserved1;ULONG Reserved2;struct _XSTATE_SAVE *Prev;PXSAVE_AREA Reserved3;struct _KTHREAD *Thread;PVOID Reserved4;UCHAR Level;};
struct _FOBX___980A609D988DBD4CB131C399AACA181C___ADD771FE9CD79D23D667359594276EB2 {_FOBX______ADD771FE9CD79D23D667359594276EB2___865247889A0C7AF3CF91917EA6941236 __anonymous0;LARGE_INTEGER CollectDataTime;ULONG CollectDataSize;THROTTLING_STATE ThrottlingState;LIST_ENTRY ReadSerializationQueue;LIST_ENTRY WriteSerializationQueue;};
union _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F {struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___9FBE9EE09EFBE9DD3093DC43F2458B69 SynchronizationMutex;struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___24C0FA88E7D8683045143D2871F0ADEA Semaphore;struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___3407DC9360180855067BCF2436BCF223 Fence;struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___62CC19C4D26368E1DB72E254C17C07C0 CPUNotification;struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F___C71B5FE49AE1E5B05636CDDD7D3DD727 Reserved;};
struct _DOT11_PROVISION_DISCOVERY_RESPONSE_SEND_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS ReceiverDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;NDIS_STATUS Status;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_GO_NEGOTIATION_CONFIRMATION_SEND_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;NDIS_STATUS Status;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_PROVISION_DISCOVERY_REQUEST_SEND_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_MAC_ADDRESS ReceiverAddress;DOT11_DIALOG_TOKEN DialogToken;NDIS_STATUS Status;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_GO_NEGOTIATION_RESPONSE_SEND_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;NDIS_STATUS Status;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_GO_NEGOTIATION_REQUEST_SEND_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;NDIS_STATUS Status;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_RECEIVED_PROVISION_DISCOVERY_REQUEST_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS TransmitterDeviceAddress;DOT11_MAC_ADDRESS BSSID;DOT11_DIALOG_TOKEN DialogToken;PVOID RequestContext;ULONG uIEsOffset;ULONG uIEsLength;};
union _WHEA_XPF_PROCINFO___951C8B8409E073FB6F291BFA9F780EC0 {WHEA_XPF_CACHE_CHECK CacheCheck;WHEA_XPF_TLB_CHECK TlbCheck;WHEA_XPF_BUS_CHECK BusCheck;WHEA_XPF_MS_CHECK MsCheck;ULONGLONG AsULONGLONG;};
union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___HEADER_FIELD {NDIS_MAC_HEADER_FIELD MacHeaderField;NDIS_ARP_HEADER_FIELD ArpHeaderField;NDIS_IPV4_HEADER_FIELD IPv4HeaderField;NDIS_IPV6_HEADER_FIELD IPv6HeaderField;NDIS_UDP_HEADER_FIELD UdpHeaderField;};
struct _DOT11_INVITATION_RESPONSE_SEND_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS ReceiverDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;NDIS_STATUS Status;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_SEND_PROVISION_DISCOVERY_RESPONSE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS ReceiverDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;PVOID RequestContext;ULONG uSendTimeout;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DXGKARG_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY {UINT ContextCount;HANDLE Context[65];DXGK_SETVIDPNSOURCEADDRESS_FLAGS Flags;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;UINT PlaneCount;DXGK_MULTIPLANE_OVERLAY_PLANE *pPlanes;};
struct _DOT11_INVITATION_REQUEST_SEND_COMPLETE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_MAC_ADDRESS ReceiverAddress;DOT11_DIALOG_TOKEN DialogToken;NDIS_STATUS Status;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_RECEIVED_GO_NEGOTIATION_RESPONSE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;PVOID ResponseContext;ULONG uIEsOffset;ULONG uIEsLength;};
union _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917 {struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___102A4CD179CF55A184E910E638146F66 Common;struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___AEAA07217ABEEB4DF41A305F13068EDC Neither;struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___B2CAEB05560B1B5609C03D1D0C22322E Buffered;struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___1F0DB25A8A5AFEBFBAFF1BECD093D0BD Direct;struct _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917___A8945491307EAC7B88D14EFBDDAC9963 FastIo;};
struct _FLT_PARAMETERS___683C3EE208A9575EF36144430C7EF9B0 {ULONG Length;PSID StartSid;PFILE_GET_QUOTA_INFORMATION SidList;ULONG SidListLength;PVOID QuotaBuffer;PMDL MdlAddress;};
struct _FLT_PARAMETERS___68BF592B97A76A0B8F7EC116AE55EF21 {PLARGE_INTEGER Length;ULONG Key;LARGE_INTEGER ByteOffset;PEPROCESS ProcessId;BOOLEAN FailImmediately;BOOLEAN ExclusiveLock;};
struct _FLT_PARAMETERS___7563D854AF0F8A29D547365163A901D2 {PIO_SECURITY_CONTEXT SecurityContext;ULONG Options;USHORT FileAttributes;USHORT ShareAccess;ULONG EaLength;PVOID EaBuffer;LARGE_INTEGER AllocationSize;};
union _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678 {struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___FA02ECF11A69AC1E6B191DC34CAEB912 VerifyVolume;struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___33640225AA3D91F9671E4FD78DC671E9 Common;struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___54D27BE50E2EFCA540B5C2B9627E61E7 Neither;struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___11EA1119CC79FBA10791013D30AA59BE Buffered;struct _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678___EFE0DB8369A33EF75497D4E3C4478735 Direct;};
struct _DOT11_RECEIVED_GO_NEGOTIATION_REQUEST_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;PVOID RequestContext;ULONG uIEsOffset;ULONG uIEsLength;};
struct _NDIS_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES {NDIS_OBJECT_HEADER Header;NDIS_HANDLE MiniportAdapterContext;ULONG AttributeFlags;UINT CheckForHangTimeInSeconds;NDIS_INTERFACE_TYPE InterfaceType;};
struct _DOT11_RECEIVED_INVITATION_REQUEST_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS TransmitterDeviceAddress;DOT11_MAC_ADDRESS BSSID;DOT11_DIALOG_TOKEN DialogToken;PVOID RequestContext;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_MANUFACTURING_SELF_TEST_QUERY_RESULTS {DOT11_MANUFACTURING_SELF_TEST_TYPE SelfTestType;ULONG uTestID;BOOLEAN bResult;ULONG uPinFailedBitMask;PVOID pvContext;ULONG uBytesWrittenOut;UCHAR ucBufferOut[1];};
typedef NTSTATUS (*DXGKDDI_OPM_GET_COPP_COMPATIBLE_INFORMATION)(PVOID MiniportDeviceContext, HANDLE ProtectedOutputHandle,  PDXGKMDT_OPM_COPP_COMPATIBLE_GET_INFO_PARAMETERS Parameters, PDXGKMDT_OPM_REQUESTED_INFORMATION RequestedInformation);
typedef NTSTATUS (*PTRANSLATE_RESOURCE_REQUIREMENTS_HANDLER)(PVOID Context, PIO_RESOURCE_DESCRIPTOR Source, PDEVICE_OBJECT PhysicalDeviceObject, PULONG TargetCount, PIO_RESOURCE_DESCRIPTOR *Target);
typedef NTSTATUS  USB_BUSIFFN_GET_DEVICE_PERFORMANCE_INFO(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, PVOID DeviceInformationBuffer, ULONG DeviceInformationBufferLength, PULONG LengthOfDataCopied);
struct _CLASS_VPD_ECOP_BLOCK_DEVICE_ROD_LIMITS {NTSTATUS CommandStatus;USHORT MaximumRangeDescriptors;UCHAR Restricted;UCHAR Reserved;ULONG MaximumInactivityTimer;ULONG DefaultInactivityTimer;ULONGLONG MaximumTokenTransferSize;ULONGLONG OptimalTransferCount;};
typedef NTSTATUS (*DXGKDDI_OPM_CONFIGURE_PROTECTED_OUTPUT)(PVOID MiniportDeviceContext, HANDLE ProtectedOutputHandle,  PDXGKMDT_OPM_CONFIGURE_PARAMETERS Parameters, ULONG AdditionalParametersSize,  PVOID AdditionalParameters);
struct _IRB_REQ_GET_CONFIGURATION_INFORMATION {PCONFIG_ROM ConfigRom;ULONG UnitDirectoryBufferSize;PVOID UnitDirectory;IO_ADDRESS UnitDirectoryLocation;ULONG UnitDependentDirectoryBufferSize;PVOID UnitDependentDirectory;IO_ADDRESS UnitDependentDirectoryLocation;ULONG VendorLeafBufferSize;PTEXTUAL_LEAF VendorLeaf;ULONG ModelLeafBufferSize;PTEXTUAL_LEAF ModelLeaf;};
struct _REENUMERATE_SELF_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PREENUMERATE_SELF SurpriseRemoveAndReenumerateSelf;};
typedef NTSTATUS (*DXGKDDI_OPM_CREATE_PROTECTED_OUTPUT)(PVOID MiniportDeviceContext, D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId, DXGKMDT_OPM_VIDEO_OUTPUT_SEMANTICS NewVideoOutputSemantics, PHANDLE NewProtectedOutputHandle);
typedef NTSTATUS (*PCPFNRUNTIME_POWER_CONTROL_CALLBACK)(LPCGUID PowerControlCode, PVOID InBuffer, SIZE_T InBufferSize, PVOID OutBuffer, SIZE_T OutBufferSize, PSIZE_T BytesReturned, PVOID Context);
typedef NTSTATUS ( *PFN_NT_SET_INFORMATION_TRANSACTION)(HANDLE TransactionHandle, TRANSACTION_INFORMATION_CLASS TransactionInformationClass, PVOID TransactionInformation, ULONG TransactionInformationLength);
typedef NTSTATUS (*PFREE_DMA_BUFFER_WITH_NOTIFICATION)(PVOID context, HANDLE Handle, PMDL BufferMdl, SIZE_T BufferSize);
typedef NTSTATUS (*PTDI_IND_CHAINED_RECEIVE_EXPEDITED)(PVOID TdiEventContext, CONNECTION_CONTEXT ConnectionContext, ULONG ReceiveFlags, ULONG ReceiveLength, ULONG StartingOffset, PMDL Tsdu, PVOID TsduDescriptor);
typedef NTSTATUS ( *PUSB_BUSIFFN_QUERY_CONTROLLER_TYPE)(PVOID, PULONG, PUSHORT, PUSHORT, PUCHAR, PUCHAR, PUCHAR, PUCHAR);
typedef NTSTATUS  USB_BUSIFFN_GET_DEVICE_INFORMATION(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, PVOID DeviceInformationBuffer, ULONG DeviceInformationBufferLength, PULONG LengthOfDataCopied);
struct _D3DKMDT_GRAPHICS_RENDERING_FORMAT {D3DKMDT_2DREGION PrimSurfSize;D3DKMDT_2DREGION VisibleRegionSize;DWORD Stride;D3DDDIFORMAT PixelFormat;D3DKMDT_COLOR_BASIS ColorBasis;D3DKMDT_PIXEL_VALUE_ACCESS_MODE PixelValueAccessMode;};
struct _DXGK_PRESENTMULTIPLANEOVERLAYLIST {UINT LayerIndex;BOOL Enabled;HANDLE hDeviceSpecificAllocation;_DXGK_PRESENTMULTIPLANEOVERLAYLIST___9E15F1C4ADB895F7C878D486221D8304 __anonymous0;PHYSICAL_ADDRESS PhysicalAddress;};
struct _SOCKET_SECURITY_QUERY_INFO_IPSEC2 {SOCKET_SECURITY_PROTOCOL SecurityProtocol;ULONG Flags;UINT64 PeerApplicationAccessTokenHandle;UINT64 PeerMachineAccessTokenHandle;UINT64 MmSaId;UINT64 QmSaId;UINT32 NegotiationWinerr;GUID SaLookupContext;};
struct _TARGET_DEVICE_CUSTOM_NOTIFICATION {USHORT Version;USHORT Size;GUID Event;PFILE_OBJECT FileObject;LONG NameBufferOffset;UCHAR CustomDataBuffer[1];};
struct _58C2C1BF6568EE28BD9B872E6BA03976 {KSPIN_INTERFACE Interface;KSPIN_MEDIUM Medium;ULONG PinId;HANDLE PinToHandle;KSPRIORITY Priority;};
struct _5E9BD264646644ED8CAA43D9E3AB2E3D {BOOLEAN Enable;UCHAR Spare[3];ULONG BatteryLevel;POWER_ACTION_POLICY PowerPolicy;SYSTEM_POWER_STATE MinSystemState;};
struct _5EE71717BA15F45B49C3B1BDFE65804E {UINT_PTR hSurface;LONGLONG VramPhysicalAddress;DWORD cbCaptured;DWORD dwWidth;DWORD dwHeight;DWORD dwLinearSize;LONG lPitch;ULONGLONG ullReserved[16];};
struct _64810CDFD77AB08FD39653CA0460DA11 {ULONG Count;ULONG MaxFrequency;ULONG CurrentState;ULONG MaxPerfState;ULONG MinPerfState;ULONG LowestPerfState;ULONG ThermalConstraint;UCHAR BusyAdjThreshold;UCHAR PolicyType;UCHAR Type;UCHAR Reserved;ULONG TimerInterval;PVOID TargetProcessors;ULONG PStateHandler;ULONG PStateContext;ULONG TStateHandler;ULONG TStateContext;ULONG FeedbackHandler;ULONG Reserved1;ULONG64 Reserved2;PPM_WMI_PERF_STATE State[1];};
struct _742D342C7048E2C3902DF7570B72F6FC {ULONG Size;ULONG Flags;_742D342C7048E2C3902DF7570B72F6FC___1E7C0E17512837337D4DA69F160D7B1A __anonymous0;PVOID Reserved;KSEVENT Event;KSEVENTDATA EventData;};
struct _C62299E2FAA36942CDE27418DA4FF5CB {USHORT VersionNumber;USHORT Size;USHORT ServerType;_C62299E2FAA36942CDE27418DA4FF5CB___5DF234520AB1AC2CADFED3B4B74AA075 __anonymous0;ULONG TimeToLive;union {____7D59497C865DE6C98CEC474B1DC28F43___97C49605D0EAB7C21A896C4F2E74D2BC __anonymous1;____7D59497C865DE6C98CEC474B1DC28F43___3F669E74CC6D42C10CB60EC7CCFC5702 __anonymous2;};};
struct _EF8244FDD6E56AA9E208EAF51AE7E8BA {DESCRIPTION_HEADER Header;GEN_ADDR Control;GEN_ADDR Data;ULONG Uid;UCHAR GpeBit;CHAR Id[1];};
typedef NTSTATUS (*PCAM_PROCESS_RAW_FRAME_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PVOID FrameContext, PVOID FrameBuffer, ULONG FrameLength, PVOID RawFrameBuffer, ULONG RawFrameLength, ULONG NumberOfPackets, PULONG BytesReturned, ULONG ActualRawFrameLength, ULONG StreamNumber);
typedef NTSTATUS (*PTDI_IND_CHAINED_RECEIVE_DATAGRAM)(PVOID TdiEventContext, LONG SourceAddressLength, PVOID SourceAddress, LONG OptionsLength, PVOID Options, ULONG ReceiveDatagramFlags, ULONG ReceiveDatagramLength, ULONG StartingOffset, PMDL Tsdu, PVOID TsduDescriptor);
typedef NTSTATUS  USB_BUSIFFN_GET_EXTENDED_HUB_INFO(PVOID BusContext, PDEVICE_OBJECT HubPhysicalDeviceObject, PVOID HubInformationBuffer, ULONG HubInformationBufferLength, PULONG LengthOfDataCopied);
struct _MSV1_0_GETCHALLENRESP_REQUEST_V1 {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;ULONG ParameterControl;LUID LogonId;UNICODE_STRING Password;UCHAR ChallengeToClient[8];};
typedef NTSTATUS (*NDK_FN_QUERY_EXTENSION_INTERFACE)(NDK_OBJECT_HEADER *pNdkObject, GUID *ExtensionInterfaceID, NDK_VERSION ExtensionInterfaceVersion, NDK_EXTENSION_INTERFACE *pExtensionInterface);
typedef NTSTATUS  USB_BUSIFFN_CREATE_USB_DEVICE_EX(PVOID BusContext, PUSB_DEVICE_HANDLE *NewDeviceHandle, PUSB_DEVICE_HANDLE HsHubDeviceHandle, USHORT PortStatus, USHORT PortNumber, PUSB_CD_ERROR_INFORMATION CdErrorInfo, USHORT TtPortNumber);
struct _DXGKMDT_OPM_GET_INFO_PARAMETERS {DXGKMDT_OPM_OMAC omac;DXGKMDT_OPM_RANDOM_NUMBER rnRandomNumber;GUID guidInformation;ULONG ulSequenceNumber;ULONG cbParametersSize;BYTE abParameters[4056];};
struct _NET_BUFFER_LIST_POOL_PARAMETERS {NDIS_OBJECT_HEADER Header;UCHAR ProtocolId;BOOLEAN fAllocateNetBuffer;USHORT ContextSize;ULONG PoolTag;ULONG DataSize;};
struct _REG_QUERY_VALUE_KEY_INFORMATION {PVOID Object;PUNICODE_STRING ValueName;KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass;PVOID KeyValueInformation;ULONG Length;PULONG ResultLength;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
typedef SECURITY_STATUS ( *ACQUIRE_CREDENTIALS_HANDLE_FN_W)(PSECURITY_STRING, PSECURITY_STRING, unsigned int, void *, void *, SEC_GET_KEY_FN, void *, PCredHandle, PTimeStamp);
typedef NTSTATUS (*PALLOCATE_CONTIGUOUS_DMA_BUFFER)(PVOID context, HANDLE Handle, ULONG RequestedBufferSize, PVOID *DataBuffer, PHDAUDIO_BUFFER_DESCRIPTOR *BdlBuffer);
typedef NTSTATUS  USB_BUSIFFN_GET_USB_DESCRIPTORS(PVOID BusContext, PUSB_DEVICE_HANDLE DeviceHandle, PUCHAR DeviceDescriptorBuffer, PULONG DeviceDescriptorBufferLength, PUCHAR ConfigDescriptorBuffer, PULONG ConfigDescriptorBufferLength);
struct _NDIS_RECEIVE_FILTER_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_FILTER_TYPE FilterType;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_RECEIVE_FILTER_ID FilterId;ULONG FieldParametersArrayOffset;ULONG FieldParametersArrayNumElements;ULONG FieldParametersArrayElementSize;ULONG RequestedFilterIdBitCount;};
struct _SOCKET_SECURITY_SETTINGS_IPSEC {SOCKET_SECURITY_PROTOCOL SecurityProtocol;ULONG SecurityFlags;ULONG IpsecFlags;GUID AuthipMMPolicyKey;GUID AuthipQMPolicyKey;GUID Reserved;UINT64 Reserved2;ULONG UserNameStringLen;ULONG DomainNameStringLen;ULONG PasswordStringLen;unsigned short AllStrings[];};
struct _USB_BUS_INTERFACE_HUB_MINIDUMP {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_SET_MINIDUMP_FLAGS SetUsbPortMiniDumpFlags;};
typedef NTSTATUS (*PCAM_PROCESS_RAW_FRAME_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PVOID FrameContext, PVOID FrameBuffer, ULONG FrameLength, PVOID RawFrameBuffer, ULONG RawFrameLength, ULONG NumberOfPackets, PULONG BytesReturned);
typedef NTSTATUS (*PSHED_PI_FINALIZE_ERROR_RECORD)(PVOID PluginContext, PWHEA_ERROR_SOURCE_DESCRIPTOR ErrorSource, ULONG BufferLength, PWHEA_ERROR_RECORD ErrorRecord);
struct _DOT11_INCOMING_ASSOC_DECISION {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerMacAddr;BOOLEAN bAccept;USHORT usReasonCode;ULONG uAssocResponseIEsOffset;ULONG uAssocResponseIEsLength;};
struct _DXGKARG_SETVIDPNSOURCEADDRESS {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;UINT PrimarySegment;PHYSICAL_ADDRESS PrimaryAddress;HANDLE hAllocation;UINT ContextCount;HANDLE Context[65];DXGK_SETVIDPNSOURCEADDRESS_FLAGS Flags;};
struct _DXGK_MULTIPLANE_OVERLAY_PLANE {UINT LayerIndex;BOOL Enabled;UINT AllocationSegment;PHYSICAL_ADDRESS AllocationAddress;HANDLE hAllocation;DXGK_MULTIPLANE_OVERLAY_ATTRIBUTES PlaneAttributes;};
struct _MPIO_PASS_THROUGH_PATH_DIRECT {SCSI_PASS_THROUGH_DIRECT PassThrough;ULONG Version;USHORT Length;UCHAR Flags;UCHAR PortNumber;ULONGLONG MpioPathId;};
struct _MSV1_0_GETCHALLENRESP_REQUEST {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;ULONG ParameterControl;LUID LogonId;UNICODE_STRING Password;UCHAR ChallengeToClient[8];UNICODE_STRING UserName;UNICODE_STRING LogonDomainName;UNICODE_STRING ServerName;};
struct _SERIAL_PORT_REDIRECTION_TABLE {DESCRIPTION_HEADER Header;UCHAR InterfaceType;UCHAR Reserved0[3];GEN_ADDR BaseAddress;UCHAR InterruptType;UCHAR Irq;ULONG GlobalSystemInterruptVector;UCHAR BaudRate;UCHAR Parity;UCHAR StopBits;UCHAR FlowControl;UCHAR TerminalType;UCHAR Language;USHORT PciDeviceId;USHORT PciVendorId;UCHAR PciBusNumber;UCHAR PciSlotNumber;UCHAR PciFunctionNumber;ULONG PciFlags;UCHAR PciSegment;UCHAR Reserved1[4];};
struct _USB_DEFAULT_PIPE_SETUP_PACKET {BM_REQUEST_TYPE bmRequestType;UCHAR bRequest;union _USB_DEFAULT_PIPE_SETUP_PACKET___wValue wValue;union _USB_DEFAULT_PIPE_SETUP_PACKET___wIndex wIndex;USHORT wLength;};
struct _WHEA_GENERIC_ERROR_DATA_ENTRY {GUID SectionType;WHEA_ERROR_SEVERITY ErrorSeverity;WHEA_REVISION Revision;UCHAR ValidBits;UCHAR Flags;ULONG ErrorDataLength;GUID FRUId;UCHAR FRUText[20];UCHAR Data[1];};
struct _WHEA_GENERIC_ERROR_DESCRIPTOR {USHORT Type;UCHAR Reserved;UCHAR Enabled;ULONG ErrStatusBlockLength;ULONG RelatedErrorSourceId;UCHAR ErrStatusAddressSpaceID;UCHAR ErrStatusAddressBitWidth;UCHAR ErrStatusAddressBitOffset;UCHAR ErrStatusAddressAccessSize;LARGE_INTEGER ErrStatusAddress;WHEA_NOTIFICATION_DESCRIPTOR Notify;};
struct _WHEA_PCIXDEVICE_ERROR_SECTION {WHEA_PCIXDEVICE_ERROR_SECTION_VALIDBITS ValidBits;WHEA_ERROR_STATUS ErrorStatus;WHEA_PCIXDEVICE_ID IdInfo;ULONG MemoryNumber;ULONG IoNumber;WHEA_PCIXDEVICE_REGISTER_PAIR RegisterDataPairs[1];};
typedef NTSTATUS ( *DXGKCB_EXCLUDE_ADAPTER_ACCESS)(HANDLE DeviceHandle, ULONG Attributes, DXGKDDI_PROTECTED_CALLBACK DxgkProtectedCallback, PVOID ProtectedCallbackContext);
typedef VP_STATUS (*PDRIVER_IO_PORT_USHORT_STRING)(ULONG_PTR Context, ULONG Port, UCHAR AccessMode, PUSHORT Data, ULONG DataLength);
struct _D3DKMDT_VIDEO_PRESENT_TARGET {D3DDDI_VIDEO_PRESENT_TARGET_ID Id;D3DKMDT_VIDEO_OUTPUT_TECHNOLOGY VideoOutputTechnology;DXGK_CHILD_DEVICE_HPD_AWARENESS VideoOutputHpdAwareness;D3DKMDT_MONITOR_ORIENTATION_AWARENESS MonitorOrientationAwareness;BOOLEAN SupportsSdtvModes;};
struct _OB_PRE_OPERATION_INFORMATION {OB_OPERATION Operation;_OB_POST_OPERATION_INFORMATION___9E26F4D194EE3F8ED97EC5420551EEA8 __anonymous0;PVOID Object;POBJECT_TYPE ObjectType;PVOID CallContext;POB_PRE_OPERATION_PARAMETERS Parameters;};
typedef BOOLEAN (*pHalFindBusAddressTranslation)(PHYSICAL_ADDRESS BusAddress, PULONG AddressSpace, PPHYSICAL_ADDRESS TranslatedAddress, PULONG_PTR Context, BOOLEAN NextBus);
struct tagKS_DATARANGE_VIDEO_PALETTE {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_VIDEOINFO VideoInfo;};
typedef NTSTATUS (*PCHANGE_BANDWIDTH_ALLOCATION)(PVOID context, HANDLE Handle, PHDAUDIO_STREAM_FORMAT StreamFormat, PHDAUDIO_CONVERTER_FORMAT ConverterFormat);
typedef VP_STATUS (*PDRIVER_IO_PORT_UCHAR_STRING)(ULONG_PTR Context, ULONG Port, UCHAR AccessMode, PUCHAR Data, ULONG DataLength);
typedef VP_STATUS (*PDRIVER_IO_PORT_ULONG_STRING)(ULONG_PTR Context, ULONG Port, UCHAR AccessMode, PULONG Data, ULONG DataLength);
typedef NTSTATUS ( *PFLT_INSTANCE_SETUP_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, FLT_INSTANCE_SETUP_FLAGS Flags, ULONG VolumeDeviceType, FLT_FILESYSTEM_TYPE VolumeFilesystemType);
typedef FLT_POSTOP_CALLBACK_STATUS ( *PFLT_POST_OPERATION_CALLBACK)(PFLT_CALLBACK_DATA Data, PCFLT_RELATED_OBJECTS FltObjects, PVOID CompletionContext, FLT_POST_OPERATION_FLAGS Flags);
typedef NTSTATUS (*PFNUSBCAMD_WaitOnDeviceEvent)(PVOID DeviceContext, ULONG PipeIndex, PVOID Buffer, ULONG BufferLength, PCOMMAND_COMPLETE_FUNCTION EventComplete, PVOID EventContext, BOOLEAN LoopBack);
typedef NTSTATUS PO_FX_POWER_CONTROL_CALLBACK(PVOID DeviceContext, LPCGUID PowerControlCode, PVOID InBuffer, SIZE_T InBufferSize, PVOID OutBuffer, SIZE_T OutBufferSize, PSIZE_T BytesReturned);
typedef NTSTATUS (*PSHED_PI_RETRIEVE_ERROR_INFO)(PVOID PluginContext, PWHEA_ERROR_SOURCE_DESCRIPTOR ErrorSource, ULONGLONG BufferLength, PWHEA_ERROR_PACKET Packet);
typedef TAPE_STATUS (*TAPE_PROCESS_COMMAND_ROUTINE)(PVOID MinitapeExtension, PVOID CommandExtension, PVOID CommandParameters, PSCSI_REQUEST_BLOCK Srb, ULONG CallNumber, TAPE_STATUS StatusOfLastCommand, PULONG RetryFlags);
struct _HID_MINIDRIVER_REGISTRATION {ULONG Revision;PDRIVER_OBJECT DriverObject;PUNICODE_STRING RegistryPath;ULONG DeviceExtensionSize;BOOLEAN DevicesArePolled;UCHAR Reserved[3];};
struct _KS_VIDEO_STREAM_CONFIG_CAPS {GUID guid;ULONG VideoStandard;SIZE InputSize;SIZE MinCroppingSize;SIZE MaxCroppingSize;int CropGranularityX;int CropGranularityY;int CropAlignX;int CropAlignY;SIZE MinOutputSize;SIZE MaxOutputSize;int OutputGranularityX;int OutputGranularityY;int StretchTapsX;int StretchTapsY;int ShrinkTapsX;int ShrinkTapsY;LONGLONG MinFrameInterval;LONGLONG MaxFrameInterval;LONG MinBitsPerSecond;LONG MaxBitsPerSecond;};
struct _SFFDISK_DEVICE_COMMAND_DATA {USHORT HeaderSize;USHORT Reserved;SFFDISK_DCMD Command;USHORT ProtocolArgumentSize;ULONG DeviceDataBufferSize;ULONG_PTR Information;UCHAR Data[];};
struct _WATCHDOG_TIMER_ACTION_TABLE {DESCRIPTION_HEADER Header;ULONG WatchdogHeaderLength;USHORT PciSegment;UCHAR PciBusNumber;UCHAR PciDeviceNumber;UCHAR PciFunctionNumber;UCHAR Reserved1[3];ULONG TimerPeriod;ULONG MaximumCount;ULONG MinimumCount;UCHAR WatchdogFlags;UCHAR Reserved2[3];ULONG InstructionCount;WATCHDOG_TIMER_INSTRUCTION_ENTRY InstructionEntry[1];};
struct _WHEA_XPF_MC_BANK_DESCRIPTOR {UCHAR BankNumber;BOOLEAN ClearOnInitialization;UCHAR StatusDataFormat;XPF_MC_BANK_FLAGS Flags;ULONG ControlMsr;ULONG StatusMsr;ULONG AddressMsr;ULONG MiscMsr;ULONGLONG ControlData;};
typedef NTSTATUS (*DXGKDDI_OPM_GET_INFORMATION)(PVOID MiniportDeviceContext, HANDLE ProtectedOutputHandle,  PDXGKMDT_OPM_GET_INFO_PARAMETERS Parameters, PDXGKMDT_OPM_REQUESTED_INFORMATION RequestedInformation);
typedef NTSTATUS GET_VIRTUAL_DEVICE_LOCATION(PVOID Context, USHORT VirtualFunction, PUINT16 SegmentNumber, PUINT8 BusNumber, PUINT8 FunctionNumber);
typedef NTSTATUS (*PCAM_ALLOCATE_BW_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PULONG RawFrameLength, PVOID Format, ULONG StreamNumber);
typedef BOOLEAN PCMCIA_MODIFY_MEMORY_WINDOW(PVOID Context, ULONGLONG HostBase, ULONGLONG CardBase, BOOLEAN Enable, ULONG WindowSize, UCHAR AccessSpeed, UCHAR BusWidth, BOOLEAN IsAttributeMemory);
typedef NTSTATUS (*PSHED_PI_CLEAR_ERROR_STATUS)(PVOID PluginContext, PWHEA_ERROR_SOURCE_DESCRIPTOR ErrorSource, ULONG BufferLength, PWHEA_ERROR_RECORD ErrorRecord);
typedef NTSTATUS WMI_EXECUTE_METHOD_CALLBACK(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG MethodId, ULONG InBufferSize, ULONG OutBufferSize, PUCHAR Buffer);
struct _DOT11_WFD_DISCOVER_REQUEST {NDIS_OBJECT_HEADER Header;DOT11_WFD_DISCOVER_TYPE DiscoverType;DOT11_WFD_SCAN_TYPE ScanType;ULONG uDiscoverTimeout;ULONG uDeviceFilterListOffset;ULONG uNumDeviceFilters;ULONG uIEsOffset;ULONG uIEsLength;BOOLEAN bForceScanLegacyNetworks;};
struct _FLT_OPERATION_REGISTRATION {UCHAR MajorFunction;FLT_OPERATION_REGISTRATION_FLAGS Flags;PFLT_PRE_OPERATION_CALLBACK PreOperation;PFLT_POST_OPERATION_CALLBACK PostOperation;PVOID Reserved1;};
struct _IPSEC_OFFLOAD_V2_UPDATE_SA {NDIS_OBJECT_HEADER Header;NDIS_HANDLE OffloadHandle;IPSEC_OFFLOAD_V2_OPERATION Operation;IPSEC_OFFLOAD_V2_SPI_TYPE Spi;ULONG SequenceNumberHighOrder;};
struct _ISCSI_ConnectionStaticInfo {ULONGLONG UniqueConnectionId;USHORT CID;UCHAR State;UCHAR Protocol;UCHAR HeaderIntegrity;UCHAR DataIntegrity;USHORT Reserved;ULONG MaxRecvDataSegmentLength;ULONG AuthType;ISCSI_IP_Address LocalAddr;ULONG LocalPort;ISCSI_IP_Address RemoteAddr;ULONG RemotePort;ULONGLONG EstimatedThroughput;ULONG MaxDatagramSize;};
struct _MSV1_0_INTERACTIVE_PROFILE {MSV1_0_PROFILE_BUFFER_TYPE MessageType;USHORT LogonCount;USHORT BadPasswordCount;LARGE_INTEGER LogonTime;LARGE_INTEGER LogoffTime;LARGE_INTEGER KickOffTime;LARGE_INTEGER PasswordLastSet;LARGE_INTEGER PasswordCanChange;LARGE_INTEGER PasswordMustChange;UNICODE_STRING LogonScript;UNICODE_STRING HomeDirectory;UNICODE_STRING FullName;UNICODE_STRING ProfilePath;UNICODE_STRING HomeDirectoryDrive;UNICODE_STRING LogonServer;ULONG UserFlags;};
struct _NDIS_SYSTEM_PROCESSOR_INFO {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_PROCESSOR_VENDOR ProcessorVendor;ULONG NumPhysicalPackages;ULONG NumCores;ULONG NumCoresPerPhysicalPackage;ULONG MaxHyperThreadingCpusPerCore;ULONG RssBaseCpu;ULONG RssCpuCount;PUCHAR RssProcessors;NDIS_PROCESSOR_INFO CpuInfo[32];};
struct _REG_CREATE_KEY_INFORMATION {PUNICODE_STRING CompleteName;PVOID RootObject;PVOID ObjectType;ULONG CreateOptions;PUNICODE_STRING Class;PVOID SecurityDescriptor;PVOID SecurityQualityOfService;ACCESS_MASK DesiredAccess;ACCESS_MASK GrantedAccess;PULONG Disposition;PVOID *ResultObject;PVOID CallContext;PVOID RootObjectContext;PVOID Transaction;PVOID Reserved;};
struct _USBD_INTERFACE_INFORMATION {USHORT Length;UCHAR InterfaceNumber;UCHAR AlternateSetting;UCHAR Class;UCHAR SubClass;UCHAR Protocol;UCHAR Reserved;USBD_INTERFACE_HANDLE InterfaceHandle;ULONG NumberOfPipes;USBD_PIPE_INFORMATION Pipes[1];};
struct tagKS_DATARANGE_MPEG1_VIDEO {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_MPEG1VIDEOINFO VideoInfoHeader;};
struct tagKS_DATARANGE_MPEG2_VIDEO {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_MPEGVIDEOINFO2 VideoInfoHeader;};
typedef SECURITY_STATUS ( *ACCEPT_SECURITY_CONTEXT_FN)(PCredHandle, PCtxtHandle, PSecBufferDesc, unsigned int, unsigned int, PCtxtHandle, PSecBufferDesc, unsigned int *, PTimeStamp);
typedef NTSTATUS (*PCLASS_QUERY_WMI_DATABLOCK)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG BufferAvail, PUCHAR Buffer);
typedef NTSTATUS (*PRXCE_IND_RECEIVE_DATAGRAM)(PVOID pRxCeEventContext, int SourceAddressLength, PVOID SourceAddress, int OptionsLength, PVOID Options, ULONG ReceiveDatagramFlags, ULONG BytesIndicated, ULONG BytesAvailable, ULONG *BytesTaken, PVOID Tsdu, PMDL *pDataBufferPointer, PULONG pDataBufferSize);
typedef NTSTATUS (*PTDI_IND_RECEIVE_EXPEDITED)(PVOID TdiEventContext, CONNECTION_CONTEXT ConnectionContext, ULONG ReceiveFlags, ULONG BytesIndicated, ULONG BytesAvailable, ULONG *BytesTaken, PVOID Tsdu, PIRP *IoRequestPacket);
typedef NTSTATUS WMI_SET_DATABLOCK_CALLBACK(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG BufferSize, PUCHAR Buffer);
struct _AddConnectionToSession_IN {ULONGLONG UniqueAdapterId;ULONGLONG UniqueSessionId;ULONGLONG SecurityFlags;ULONG PortNumber;ISCSI_LoginOptions LoginOptions;ISCSI_TargetPortal TargetPortal;ULONG UsernameSize;ULONG PasswordSize;ULONG KeySize;UCHAR Key[1];};
struct _CDROM_PERFORMANCE_REQUEST {CDROM_PERFORMANCE_REQUEST_TYPE RequestType;CDROM_PERFORMANCE_TYPE PerformanceType;CDROM_PERFORMANCE_EXCEPTION_TYPE Exceptions;CDROM_PERFORMANCE_TOLERANCE_TYPE Tolerance;ULONG StaringLba;};
struct _CHANNEL_CONFIG_PARAMETERS {ULONG Flags;CO_MTU Mtu;CO_FLUSHTO FlushTO;ULONG NumExtraOptions;PL2CAP_CONFIG_OPTION ExtraOptions;L2CAP_FLOWSPEC Flow;};
struct _D3DKMDT_VIDEO_SIGNAL_INFO {D3DKMDT_VIDEO_SIGNAL_STANDARD VideoStandard;D3DKMDT_2DREGION TotalSize;D3DKMDT_2DREGION ActiveSize;D3DDDI_RATIONAL VSyncFreq;D3DDDI_RATIONAL HSyncFreq;SIZE_T PixelRate;D3DDDI_VIDEO_SIGNAL_SCANLINE_ORDERING ScanLineOrdering;};
struct _MSV1_0_LM20_LOGON_PROFILE {MSV1_0_PROFILE_BUFFER_TYPE MessageType;LARGE_INTEGER KickOffTime;LARGE_INTEGER LogoffTime;ULONG UserFlags;UCHAR UserSessionKey[16];UNICODE_STRING LogonDomainName;UCHAR LanmanSessionKey[8];UNICODE_STRING LogonServer;UNICODE_STRING UserParameters;};
struct _PMI_REPORTED_CAPABILITIES {ULONG Flags;PMI_MEASUREMENT_UNIT MeasurementUnit;PMI_MEASUREMENT_TYPE MeasurementType;ULONG Accuracy;ULONG SamplingPeriod;ULONG MinimumAverageInterval;ULONG MaximumAverageInterval;ULONG Hysteresis;BOOLEAN Writeable;ULONG MinBudget;ULONG MaxBudget;WCHAR ModelNumber[16];WCHAR SerialNumber[16];WCHAR OEMInformation[16];};
struct _SCARD_READER_CAPABILITIES {ULONG SupportedProtocols;ULONG Reserved;ULONG ReaderType;ULONG MechProperties;ULONG CurrentState;ULONG Channel;struct _SCARD_READER_CAPABILITIES___7FAA9F970C1886EDD50B9B3377DCDB8A CLKFrequency;struct _SCARD_READER_CAPABILITIES___7FAA9F970C1886EDD50B9B3377DCDB8A DataRate;ULONG MaxIFSD;ULONG PowerMgmtSupport;ULONG CardConfiscated;struct _SCARD_READER_CAPABILITIES___DataRatesSupported DataRatesSupported;struct _SCARD_READER_CAPABILITIES___CLKFrequenciesSupported CLKFrequenciesSupported;UCHAR Reserved1[80];};
struct _TXFS_QUERY_RM_INFORMATION {ULONG BytesRequired;ULONGLONG TailLsn;ULONGLONG CurrentLsn;ULONGLONG ArchiveTailLsn;ULONGLONG LogContainerSize;LARGE_INTEGER HighestVirtualClock;ULONG LogContainerCount;ULONG LogContainerCountMax;ULONG LogContainerCountMin;ULONG LogGrowthIncrement;ULONG LogAutoShrinkPercentage;ULONG Flags;USHORT LoggingMode;USHORT Reserved;ULONG RmState;ULONGLONG LogCapacity;ULONGLONG LogFree;ULONGLONG TopsSize;ULONGLONG TopsUsed;ULONGLONG TransactionCount;ULONGLONG OnePCCount;ULONGLONG TwoPCCount;ULONGLONG NumberLogFileFull;ULONGLONG OldestTransactionAge;GUID RMName;ULONG TmLogPathOffset;};
struct _USBRPM_DEVICE_INFORMATION {ULONG64 HubId;ULONG ConnectionIndex;UCHAR DeviceClass;USHORT VendorId;USHORT ProductId;WCHAR ManufacturerString[255];WCHAR ProductString[255];WCHAR HubSymbolicLinkName[260];};
struct _WHEA_MEMORY_ERROR_SECTION {WHEA_MEMORY_ERROR_SECTION_VALIDBITS ValidBits;WHEA_ERROR_STATUS ErrorStatus;ULONGLONG PhysicalAddress;ULONGLONG PhysicalAddressMask;USHORT Node;USHORT Card;USHORT Module;USHORT Bank;USHORT Device;USHORT Row;USHORT Column;USHORT BitPosition;ULONGLONG RequesterId;ULONGLONG ResponderId;ULONGLONG TargetId;UCHAR ErrorType;};
typedef NTSTATUS (*pHalQuerySystemInformation)(HAL_QUERY_INFORMATION_CLASS InformationClass, ULONG BufferSize, PVOID Buffer, PULONG ReturnedLength);
struct tagKS_DATARANGE_H264_VIDEO {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_H264VIDEOINFO VideoInfoHeader;};
typedef NTSTATUS ( *DXGKCB_WRITE_DEVICE_SPACE)(HANDLE DeviceHandle, ULONG DataType, PVOID Buffer, ULONG Offset, ULONG Length, PULONG BytesWritten);
typedef BOOLEAN FAST_IO_PREPARE_MDL_WRITE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef NTSTATUS (*PCLASS_EXECUTE_WMI_METHOD)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG MethodId, ULONG InBufferSize, ULONG OutBufferSize, PUCHAR Buffer);
typedef BOOLEAN (*PSCSIWMI_FUNCTION_CONTROL)(PVOID DeviceContext, PSCSIWMI_REQUEST_CONTEXT RequestContext, ULONG GuidIndex, SCSIWMI_ENABLE_DISABLE_CONTROL Function, BOOLEAN Enable);
typedef NTSTATUS (*PTDI_IND_RECEIVE_DATAGRAM)(PVOID TdiEventContext, LONG SourceAddressLength, PVOID SourceAddress, LONG OptionsLength, PVOID Options, ULONG ReceiveDatagramFlags, ULONG BytesIndicated, ULONG BytesAvailable, ULONG *BytesTaken, PVOID Tsdu, PIRP *IoRequestPacket);
typedef NTSTATUS WMI_SET_DATAITEM_CALLBACK(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG DataItemId, ULONG BufferSize, PUCHAR Buffer);
struct _AVC_STREAM_REQUEST_BLOCK {ULONG SizeOfThisBlock;ULONG Version;AVCSTRM_FUNCTION Function;ULONG Flags;NTSTATUS Status;PVOID AVCStreamContext;PVOID Context1;PVOID Context2;PVOID Context3;PVOID Context4;ULONG Reserved[4];union _AVC_STREAM_REQUEST_BLOCK___tagCommandData CommandData;};
struct _DEBUG_DEVICE_INFORMATION {UCHAR Revision;UCHAR Length;USHORT InterfaceType;ULONG InterfaceSubType;GEN_ADDR DeviceAddress;ULONG64 AddressSize;};
struct _DOT11_DEFAULT_WEP_UPLOAD {ULONG uReserved;DOT11_OFFLOAD_TYPE dot11OffloadType;HANDLE hOffload;ULONG uNumOfRWsUsed;DOT11_IV48_COUNTER dot11IV48Counters[16];USHORT usDot11RWBitMaps[16];};
struct _DXGK_DISPLAY_INFORMATION {UINT Width;UINT Height;UINT Pitch;D3DDDIFORMAT ColorFormat;PHYSICAL_ADDRESS PhysicAddress;D3DDDI_VIDEO_PRESENT_TARGET_ID TargetId;ULONG AcpiId;};
struct _NDIS_PM_PROTOCOL_OFFLOAD {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG Priority;NDIS_PM_PROTOCOL_OFFLOAD_TYPE ProtocolOffloadType;NDIS_PM_COUNTED_STRING FriendlyName;ULONG ProtocolOffloadId;ULONG NextProtocolOffloadOffset;union _NDIS_PM_PROTOCOL_OFFLOAD___PROTOCOL_OFFLOAD_PARAMETERS ProtocolOffloadParameters;};
struct _PARTITION_INFORMATION_EX {PARTITION_STYLE PartitionStyle;LARGE_INTEGER StartingOffset;LARGE_INTEGER PartitionLength;ULONG PartitionNumber;BOOLEAN RewritePartition;union _PARTITION_INFORMATION_EX___41520227951B374488E85ABED149FDD2 u;};
struct _REG_LOAD_KEY_INFORMATION {PVOID Object;PUNICODE_STRING KeyName;PUNICODE_STRING SourceFile;ULONG Flags;PVOID TrustClassObject;PVOID UserEvent;ACCESS_MASK DesiredAccess;PHANDLE RootHandle;PVOID CallContext;PVOID ObjectContext;PVOID Reserved;};
struct _USBC_FUNCTION_DESCRIPTOR {UCHAR FunctionNumber;UCHAR NumberOfInterfaces;PUSB_INTERFACE_DESCRIPTOR *InterfaceDescriptorList;UNICODE_STRING HardwareId;UNICODE_STRING CompatibleId;UNICODE_STRING FunctionDescription;ULONG FunctionFlags;PVOID Reserved;};
struct _USB_ID_ERROR_INFORMATION {ULONG Version;USBPORT_INITDEV_ERROR PathError;ULONG Arg1;ULONG UsbAddress;NTSTATUS NtStatus;USBD_STATUS UsbdStatus;UCHAR XtraInfo[64];};
struct tagKS_DATARANGE_VIDEO_VBI {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_VBIINFOHEADER VBIInfoHeader;};
typedef NTSTATUS ( *DXGKCB_READ_DEVICE_SPACE)(HANDLE DeviceHandle, ULONG DataType, PVOID Buffer, ULONG Offset, ULONG Length, PULONG BytesRead);
typedef NTSTATUS (*PCLASS_SET_WMI_DATABLOCK)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG BufferSize, PUCHAR Buffer);
typedef NTSTATUS (*PFNUSBCAMD_BulkReadWrite)(PVOID DeviceContext, USHORT PipeIndex, PVOID Buffer, ULONG BufferLength, PCOMMAND_COMPLETE_FUNCTION CommandComplete, PVOID CommandContext);
typedef NTSTATUS ( *PFN_WSK_INSPECT_COMPLETE)(PWSK_SOCKET ListenSocket, PWSK_INSPECT_ID InspectID, WSK_INSPECT_ACTION Action, PIRP Irp);
typedef NTSTATUS (*PTDI_IND_CHAINED_RECEIVE)(PVOID TdiEventContext, CONNECTION_CONTEXT ConnectionContext, ULONG ReceiveFlags, ULONG ReceiveLength, ULONG StartingOffset, PMDL Tsdu, PVOID TsduDescriptor);
struct _DXGKARG_UPDATEPAGETABLE {PVOID pPageTable;UINT SizeOfPageTableInPages;UINT StartIndex;UINT PageCount; DXGK_PTE *PTEArray;HANDLE hAllocation;UINT PageOffset;DXGKARG_UPDATEPAGETABLEFLAGS Flags;};
struct _IMAGE_OPTIONAL_HEADER64 {USHORT Magic;UCHAR MajorLinkerVersion;UCHAR MinorLinkerVersion;ULONG SizeOfCode;ULONG SizeOfInitializedData;ULONG SizeOfUninitializedData;ULONG AddressOfEntryPoint;ULONG BaseOfCode;ULONGLONG ImageBase;ULONG SectionAlignment;ULONG FileAlignment;USHORT MajorOperatingSystemVersion;USHORT MinorOperatingSystemVersion;USHORT MajorImageVersion;USHORT MinorImageVersion;USHORT MajorSubsystemVersion;USHORT MinorSubsystemVersion;ULONG Win32VersionValue;ULONG SizeOfImage;ULONG SizeOfHeaders;ULONG CheckSum;USHORT Subsystem;USHORT DllCharacteristics;ULONGLONG SizeOfStackReserve;ULONGLONG SizeOfStackCommit;ULONGLONG SizeOfHeapReserve;ULONGLONG SizeOfHeapCommit;ULONG LoaderFlags;ULONG NumberOfRvaAndSizes;IMAGE_DATA_DIRECTORY DataDirectory[16];};
struct _STOR_POFX_POWER_CONTROL {STOR_POWER_CONTROL_HEADER Header;LPCGUID PowerControlCode;SIZE_T InBufferSize;SIZE_T OutBufferSize;PVOID InBuffer;PVOID OutBuffer;PSIZE_T BytesReturned;};
struct _URB_OPEN_STATIC_STREAMS {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG NumberOfStreams;USHORT StreamInfoVersion;USHORT StreamInfoSize;PUSBD_STREAM_INFORMATION Streams;};
struct _WHEA_XPF_MCE_DESCRIPTOR {USHORT Type;UCHAR Enabled;UCHAR NumberOfBanks;XPF_MCE_FLAGS Flags;ULONGLONG MCG_Capability;ULONGLONG MCG_GlobalControl;WHEA_XPF_MC_BANK_DESCRIPTOR Banks[32];};
struct _WWAN_REGISTRATION_STATE {ULONG uNwError;WWAN_REGISTER_STATE RegisterState;WWAN_REGISTER_MODE RegisterMode;WCHAR ProviderId[7];WCHAR ProviderName[21];WCHAR RoamingText[64];ULONG WwanRegFlags;WWAN_CELLULAR_CLASS CurrentCellularClass;};
typedef NTSTATUS ( *DXGKCB_EVAL_ACPI_METHOD)(HANDLE DeviceHandle, ULONG DeviceUid, PACPI_EVAL_INPUT_BUFFER_COMPLEX AcpiInputBuffer, ULONG AcpiInputSize, PACPI_EVAL_OUTPUT_BUFFER AcpiOutputBuffer, ULONG AcpiOutputSize);
typedef NTSTATUS (*NDK_FN_COMPLETE_CONNECT)(NDK_CONNECTOR *pNdkConnector, NDK_FN_DISCONNECT_EVENT_CALLBACK DisconnectEvent, PVOID DisconnectEventContext, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
typedef NTSTATUS (*NDK_FN_CREATE_CONNECTOR)(NDK_ADAPTER *pNdkAdapter, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_CONNECTOR **ppNdkConnector);
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBReceiveFilterHook_v2)( WCHAR *pAdapter,  NET_BUFFER *pPacket,  UCHAR *pMediaHeader, ULONG cMediaHeaderLength,  UCHAR *pPayload, ULONG cPayloadLength, ULONG Flags);
typedef NTSTATUS (*PAGP_BUS_RESERVE_MEMORY)(PVOID AgpContext, ULONG NumberOfPages, MEMORY_CACHING_TYPE MemoryType, PVOID *MapHandle, PHYSICAL_ADDRESS *PhysicalAddress);
typedef PVOID (*PALLOCATE_COMMON_BUFFER)(PDMA_ADAPTER DmaAdapter, ULONG Length, PPHYSICAL_ADDRESS LogicalAddress, BOOLEAN CacheEnabled);
typedef NTSTATUS (*PCLASS_SET_WMI_DATAITEM)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG DataItemId, ULONG BufferSize, PUCHAR Buffer);
typedef BOOLEAN (*PSCSIWMI_EXECUTE_METHOD)(PVOID DeviceContext, PSCSIWMI_REQUEST_CONTEXT RequestContext, ULONG GuidIndex, ULONG InstanceIndex, ULONG MethodId, ULONG InBufferSize, ULONG OutBufferSize, PUCHAR Buffer);
typedef NTSTATUS (*PSFFPROT_DEVICE_CONTROL)(PVOID Context, SFFPROT_DCTYPE Type, PVOID Buffer, ULONG Length, PULONG LengthReturned);
struct _FLT_IO_PARAMETER_BLOCK {ULONG IrpFlags;UCHAR MajorFunction;UCHAR MinorFunction;UCHAR OperationFlags;UCHAR Reserved;PFILE_OBJECT TargetFileObject;PFLT_INSTANCE TargetInstance;FLT_PARAMETERS Parameters;};
struct _HPET_DESCRIPTION_TABLE {DESCRIPTION_HEADER Header;ULONG EventTimerBlockId;GEN_ADDR Address;UCHAR HpetNumber;USHORT MinimumPeriodicTickCount;UCHAR PageProtection;};
struct _MPIO_PASS_THROUGH_PATH {SCSI_PASS_THROUGH PassThrough;ULONG Version;USHORT Length;UCHAR Flags;UCHAR PortNumber;ULONGLONG MpioPathId;};
struct _MSiSCSI_HBAInformation {ULONGLONG UniqueAdapterId;BOOLEAN IntegratedTCPIP;BOOLEAN RequiresBinaryIpAddresses;UCHAR VersionMin;UCHAR VersionMax;BOOLEAN MultifunctionDevice;BOOLEAN CacheValid;ULONG NumberOfPorts;ULONG Status;ULONG FunctionalitySupported;UCHAR GenerationalGuid[16];ULONG MaxCDBLength;BOOLEAN BiDiScsiCommands;WCHAR VendorID[256];WCHAR VendorModel[256];WCHAR VendorVersion[256];WCHAR FirmwareVersion[256];WCHAR AsicVersion[256];WCHAR OptionRomVersion[256];WCHAR SerialNumber[256];WCHAR DriverName[256];};
struct _PNP_REPLACE_PARAMETERS {ULONG Size;ULONG Version;ULONG64 Target;ULONG64 Spare;PPNP_REPLACE_PROCESSOR_LIST TargetProcessors;PPNP_REPLACE_PROCESSOR_LIST SpareProcessors;PPNP_REPLACE_MEMORY_LIST TargetMemory;PPNP_REPLACE_MEMORY_LIST SpareMemory;PREPLACE_MAP_MEMORY MapMemory;};
struct _SCSI_PNP_REQUEST_BLOCK {USHORT Length;UCHAR Function;UCHAR SrbStatus;UCHAR PnPSubFunction;UCHAR PathId;UCHAR TargetId;UCHAR Lun;STOR_PNP_ACTION PnPAction;ULONG SrbFlags;ULONG DataTransferLength;ULONG TimeOutValue;PVOID DataBuffer;PVOID SenseInfoBuffer;struct _SCSI_REQUEST_BLOCK *NextSrb;PVOID OriginalRequest;PVOID SrbExtension;ULONG SrbPnPFlags;UCHAR Reserved4[16];};
typedef NTSTATUS (*PAGP_BUS_COMMIT_MEMORY)(PVOID AgpContext, PVOID MapHandle, ULONG NumberOfPages, ULONG OffsetInPages, PMDL Mdl, PHYSICAL_ADDRESS *MemoryBase);
typedef VP_STATUS (*PDRIVER_IO_PORT_USHORT)(ULONG_PTR Context, ULONG Port, UCHAR AccessMode, PUSHORT Data);
typedef BOOLEAN (*PFLUSH_ADAPTER_BUFFERS)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID MapRegisterBase, PVOID CurrentVa, ULONG Length, BOOLEAN WriteToDevice);
typedef NTSTATUS (*PFNAVCINTERSECTHANDLER)(PVOID Context, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG DataBufferSize, PVOID Data, PULONG DataSize);
typedef BOOLEAN (*PSCSIWMI_SET_DATABLOCK)(PVOID DeviceContext, PSCSIWMI_REQUEST_CONTEXT RequestContext, ULONG GuidIndex, ULONG InstanceIndex, ULONG BufferSize, PUCHAR Buffer);
typedef void REQUEST_POWER_COMPLETE(PDEVICE_OBJECT DeviceObject, UCHAR MinorFunction, POWER_STATE PowerState, PVOID Context, PIO_STATUS_BLOCK IoStatus);
struct _DOT11_WFD_DEVICE_INFO {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS DeviceAddress;USHORT ConfigMethods;DOT11_WFD_DEVICE_TYPE PrimaryDeviceType;DOT11_WPS_DEVICE_NAME DeviceName;};
struct _GENERATE_NAME_CONTEXT {USHORT Checksum;BOOLEAN ChecksumInserted;UCHAR NameLength;WCHAR NameBuffer[8];ULONG ExtensionLength;WCHAR ExtensionBuffer[4];ULONG LastIndexValue;};
struct _NDIS_FILTER_INTERFACE {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG FilterType;ULONG FilterRunType;NET_IFINDEX IfIndex;NET_LUID NetLuid;NDIS_STRING FilterClass;NDIS_STRING FilterInstanceName;};
struct _NDIS_WMI_ENUM_ADAPTER {NDIS_OBJECT_HEADER Header;NET_IFINDEX IfIndex;NET_LUID NetLuid;USHORT DeviceNameLength;CHAR DeviceName[1];};
struct _QUERY_PATH_REQUEST_EX {PIO_SECURITY_CONTEXT pSecurityContext;ULONG EaLength;PVOID pEaBuffer;UNICODE_STRING PathName;UNICODE_STRING DomainServiceName;ULONG_PTR Reserved[3];};
struct _USBD_PIPE_INFORMATION {USHORT MaximumPacketSize;UCHAR EndpointAddress;UCHAR Interval;USBD_PIPE_TYPE PipeType;USBD_PIPE_HANDLE PipeHandle;ULONG MaximumTransferSize;ULONG PipeFlags;};
struct tagKS_DATARANGE_VIDEO2 {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_VIDEOINFOHEADER2 VideoInfoHeader;};
struct tagKS_VIDEOINFOHEADER2 {RECT rcSource;RECT rcTarget;DWORD dwBitRate;DWORD dwBitErrorRate;REFERENCE_TIME AvgTimePerFrame;DWORD dwInterlaceFlags;DWORD dwCopyProtectFlags;DWORD dwPictAspectRatioX;DWORD dwPictAspectRatioY;tagKS_VIDEOINFOHEADER2___01A44D9558BB1F61717C3B626DE377C9 __anonymous0;DWORD dwReserved2;KS_BITMAPINFOHEADER bmiHeader;};
typedef BOOLEAN FAST_IO_UNLOCK_SINGLE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PLARGE_INTEGER Length, PEPROCESS ProcessId, ULONG Key, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef VP_STATUS (*PDRIVER_IO_PORT_UCHAR)(ULONG_PTR Context, ULONG Port, UCHAR AccessMode, PUCHAR Data);
typedef VP_STATUS (*PDRIVER_IO_PORT_ULONG)(ULONG_PTR Context, ULONG Port, UCHAR AccessMode, PULONG Data);
typedef NTSTATUS (*PFNKSINTERSECTHANDLER)(PIRP Irp, PKSP_PIN Pin, PKSDATARANGE DataRange, PVOID Data);
typedef NTSTATUS ( *PFN_WSK_RECEIVE_EVENT)(PVOID SocketContext, ULONG Flags, PWSK_DATA_INDICATION DataIndication, SIZE_T BytesIndicated, SIZE_T *BytesAccepted);
typedef BOOLEAN (*PSCSIWMI_SET_DATAITEM)(PVOID DeviceContext, PSCSIWMI_REQUEST_CONTEXT RequestContext, ULONG GuidIndex, ULONG InstanceIndex, ULONG DataItemId, ULONG BufferSize, PUCHAR Buffer);
typedef NTSTATUS (*PSET_DMA_ENGINE_STATE)(PVOID context, HDAUDIO_STREAM_STATE StreamState, ULONG NumberOfHandles, PHANDLE Handles);
typedef NTSTATUS (*PSFFPROT_GET_PROPERTY)(PVOID Context, SFFPROT_PROPERTY Property, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);
typedef NTSTATUS (*PTRANSFER_CODEC_VERBS)(PVOID context, ULONG Count, PHDAUDIO_CODEC_TRANSFER CodecTransfer, PHDAUDIO_TRANSFER_COMPLETE_CALLBACK Callback, PVOID Context);
union _FS_FILTER_PARAMETERS {struct _FS_FILTER_PARAMETERS___1BF1138F8D2DDD2E6462FEFA2C4F94BC AcquireForModifiedPageWriter;struct _FS_FILTER_PARAMETERS___236B69F1384B32B472ACEC4C285A943A ReleaseForModifiedPageWriter;struct _FS_FILTER_PARAMETERS___B5EF3880B5460E4FA7339BA4EC64CC87 AcquireForSectionSynchronization;struct _FS_FILTER_PARAMETERS___5B669461F49D34FCB51CE394BE9DE27D NotifyStreamFileObject;struct _FS_FILTER_PARAMETERS___AA05E81392ACE825A6BBCE938D4EAD26 Others;};
struct _MSV1_0_SUBAUTH_LOGON {MSV1_0_LOGON_SUBMIT_TYPE MessageType;UNICODE_STRING LogonDomainName;UNICODE_STRING UserName;UNICODE_STRING Workstation;UCHAR ChallengeToClient[8];STRING AuthenticationInfo1;STRING AuthenticationInfo2;ULONG ParameterControl;ULONG SubAuthPackageId;};
struct _NDIS_LINK_PARAMETERS {NDIS_OBJECT_HEADER Header;NDIS_MEDIA_DUPLEX_STATE MediaDuplexState;ULONG64 XmitLinkSpeed;ULONG64 RcvLinkSpeed;NDIS_SUPPORTED_PAUSE_FUNCTIONS PauseFunctions;ULONG AutoNegotiationFlags;};
struct tagKS_DATARANGE_VIDEO {KSDATARANGE DataRange;BOOL bFixedSizeSamples;BOOL bTemporalCompression;DWORD StreamDescriptionFlags;DWORD MemoryAllocationFlags;KS_VIDEO_STREAM_CONFIG_CAPS ConfigCaps;KS_VIDEOINFOHEADER VideoInfoHeader;};
typedef SECURITY_STATUS ( *ADD_CREDENTIALS_FN_A)(PCredHandle, SEC_CHAR *, SEC_CHAR *, unsigned int, void *, SEC_GET_KEY_FN, void *, PTimeStamp);
typedef SECURITY_STATUS ( *ADD_CREDENTIALS_FN_W)(PCredHandle, PSECURITY_STRING, PSECURITY_STRING, unsigned int, void *, SEC_GET_KEY_FN, void *, PTimeStamp);
typedef PVOID ALLOCATE_FUNCTION_EX(POOL_TYPE PoolType, SIZE_T NumberOfBytes, ULONG Tag, PLOOKASIDE_LIST_EX Lookaside);
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBSendFilterHook_v2)( WCHAR *pAdapter,  NET_BUFFER *pPacket,  UCHAR *pMediaHeader, ULONG cMediaHeaderLength,  UCHAR *pPayload, ULONG cPayloadLength, ULONG Flags);
typedef NTSTATUS (*PADDATTRIBUTETOTREEE)(PSDP_TREE_ROOT_NODE Root, USHORT AttribId, PSDP_NODE AttribValueNode, ULONG tag);
typedef NTSTATUS (*PCONVERTTREETOSTREAM)(PSDP_TREE_ROOT_NODE Root, PUCHAR *Stream, PULONG Size, ULONG tag);
typedef NTSTATUS (*PNEGOTIATE_IEEE_MODE)(PVOID Context, USHORT ModeMaskFwd, USHORT ModeMaskRev, PARALLEL_SAFETY ModeSafety, BOOLEAN IsForward);
struct _AVCSTRM_FORMAT_INFO {ULONG SizeOfThisBlock;AVCSTRM_FORMAT AVCStrmFormat;CIP_HDR1 cipHdr1;CIP_HDR2_SYT cipHdr2;ULONG SrcPacketsPerFrame;ULONG FrameSize;ULONG NumOfRcvBuffers;ULONG NumOfXmtBuffers;DWORD OptionFlags;ULONG AvgTimePerFrame;ULONG BlockPeriod;ULONG Reserved[4];};
struct _DOT11_PHY_TYPE_INFO {DOT11_PHY_TYPE dot11PhyType;BOOLEAN bUseParameters;ULONG uProbeDelay;ULONG uMinChannelTime;ULONG uMaxChannelTime;CH_DESCRIPTION_TYPE ChDescriptionType;ULONG uChannelListSize;UCHAR ucChannelListBuffer[1];};
struct _DXGKARG_COMMITVIDPN {D3DKMDT_HVIDPN hFunctionalVidPn;D3DDDI_VIDEO_PRESENT_SOURCE_ID AffectedVidPnSourceId;D3DKMDT_MONITOR_CONNECTIVITY_CHECKS MonitorConnectivityChecks;HANDLE hPrimaryAllocation;DXGKARG_COMMITVIDPN_FLAGS Flags;};
struct _IGMPV3_QUERY_HEADER {UINT8 Type;_IGMPV3_QUERY_HEADER___D8E78313C7C869914A98684B90C859EB __anonymous0;UINT16 Checksum;IN_ADDR MulticastAddress;unsigned char QuerierRobustnessVariable : 3;unsigned char SuppressRouterSideProcessing : 1;unsigned char Reserved : 4;union {UINT8 QueriersQueryInterfaceCode;_IGMPV3_QUERY_HEADER___BADC5553DDFA9D11ED858F66D86D59FC___A4E2B1CD24A78BF513C2534CAC5D7D7B __anonymous1;};UINT16 SourceCount;};
struct _IO_ERROR_LOG_PACKET {UCHAR MajorFunctionCode;UCHAR RetryCount;USHORT DumpDataSize;USHORT NumberOfStrings;USHORT StringOffset;USHORT EventCategory;NTSTATUS ErrorCode;ULONG UniqueErrorValue;NTSTATUS FinalStatus;ULONG SequenceNumber;ULONG IoControlCode;LARGE_INTEGER DeviceOffset;ULONG DumpData[1];};
struct _ISCSI_TargetMapping {ULONG OSBus;ULONG OSTarget;ULONGLONG UniqueSessionId;ULONG LUNCount;WCHAR TargetName[224];BOOLEAN FromPersistentLogin;ULONGLONG Reserved;ISCSI_LUNList LUNList[1];};
struct _NDIS_PM_WOL_PATTERN {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG Priority;NDIS_PM_WOL_PACKET WoLPacketType;NDIS_PM_COUNTED_STRING FriendlyName;ULONG PatternId;ULONG NextWoLPatternOffset;union _NDIS_PM_WOL_PATTERN___WOL_PATTERN WoLPattern;};
struct tagKS_VBI_FRAME_INFO {ULONG ExtendedHeaderSize;DWORD dwFrameFlags;LONGLONG PictureNumber;LONGLONG DropCount;DWORD dwSamplingFrequency;KS_TVTUNER_CHANGE_INFO TvTunerChangeInfo;KS_VBIINFOHEADER VBIInfoHeader;};
struct IPreFetchOffsetVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *SetPreFetchOffset)(INTERFACE *This, ULONG PreFetchOffset);};
struct KSAUTOMATION_TABLE_ {ULONG PropertySetsCount;ULONG PropertyItemSize; KSPROPERTY_SET *PropertySets;ULONG MethodSetsCount;ULONG MethodItemSize; KSMETHOD_SET *MethodSets;ULONG EventSetsCount;ULONG EventItemSize; KSEVENT_SET *EventSets;PVOID Alignment;};
typedef void (*PFNKSPINFRAMERETURN)(PKSPIN Pin, PVOID Data, ULONG Size, PMDL Mdl, PVOID Context, NTSTATUS Status);
typedef void (*PFREE_COMMON_BUFFER)(PDMA_ADAPTER DmaAdapter, ULONG Length, PHYSICAL_ADDRESS LogicalAddress, PVOID VirtualAddress, BOOLEAN CacheEnabled);
typedef NTSTATUS (*PTDI_IND_DISCONNECT)(PVOID TdiEventContext, CONNECTION_CONTEXT ConnectionContext, LONG DisconnectDataLength, PVOID DisconnectData, LONG DisconnectInformationLength, PVOID DisconnectInformation, ULONG DisconnectFlags);
typedef NTSTATUS ( *PTM_RM_NOTIFICATION)(PKENLISTMENT EnlistmentObject, PVOID RMContext, PVOID TransactionContext, ULONG TransactionNotification, PLARGE_INTEGER TmVirtualClock, ULONG ArgumentLength, PVOID Argument);
struct _CACHE_RELATIONSHIP {UCHAR Level;UCHAR Associativity;USHORT LineSize;ULONG CacheSize;PROCESSOR_CACHE_TYPE Type;UCHAR Reserved[20];GROUP_AFFINITY GroupMask;};
struct _DISK_SNAPSHOT_INFO {ULONG Version;DISK_SNAPSHOT_STATE State;GUID SnapshotSetId;GUID SnapshotId;GUID LunId;LARGE_INTEGER CreationTimeStamp;ULONG ImportCount;ULONG Flags;ULONG AdditionalDataSize;UCHAR AdditionalData[1];};
struct _PCPROPERTY_REQUEST {PUNKNOWN MajorTarget;PUNKNOWN MinorTarget;ULONG Node; PCPROPERTY_ITEM *PropertyItem;ULONG Verb;ULONG InstanceSize;PVOID Instance;ULONG ValueSize;PVOID Value;PIRP Irp;};
struct _PO_FX_COMPONENT_V2 {GUID Id;ULONGLONG Flags;ULONG DeepestWakeableIdleState;ULONG IdleStateCount;PPO_FX_COMPONENT_IDLE_STATE IdleStates;ULONG ProviderCount;PULONG Providers;};
struct _SCSI_REQUEST_BLOCK {USHORT Length;UCHAR Function;UCHAR SrbStatus;UCHAR ScsiStatus;UCHAR PathId;UCHAR TargetId;UCHAR Lun;UCHAR QueueTag;UCHAR QueueAction;UCHAR CdbLength;UCHAR SenseInfoBufferLength;ULONG SrbFlags;ULONG DataTransferLength;ULONG TimeOutValue;PVOID DataBuffer;PVOID SenseInfoBuffer;struct _SCSI_REQUEST_BLOCK *NextSrb;PVOID OriginalRequest;PVOID SrbExtension;_SCSI_REQUEST_BLOCK___881DB7056EA58ED002ED8DEAE86A2418 __anonymous0;UCHAR Cdb[16];};
struct _STORAGE_IDENTIFIER {STORAGE_IDENTIFIER_CODE_SET CodeSet;STORAGE_IDENTIFIER_TYPE Type;USHORT IdentifierSize;USHORT NextOffset;STORAGE_ASSOCIATION_TYPE Association;UCHAR Identifier[1];};
struct _WWAN_SMS_SEND_CDMA {WWAN_SMS_CDMA_ENCODING EncodingId;WWAN_SMS_CDMA_LANG LanguageId;CHAR Address[50];USHORT SizeInBytes;UCHAR SizeInCharacters;UCHAR EncodedMsg[160];};
typedef NTSTATUS (*DSM_INQUIRE_DRIVER)(PVOID DsmContext, PDEVICE_OBJECT TargetDevice, PDEVICE_OBJECT PortFdo, PSTORAGE_DEVICE_DESCRIPTOR Descriptor, PSTORAGE_DEVICE_ID_DESCRIPTOR DeviceIdList, PVOID *DsmIdentifier);
typedef NTSTATUS (*NDK_FN_SRQ_RECEIVE)(NDK_SRQ *pNdkSrq, PVOID RequestContext,  NDK_SGE *pSgl, ULONG nSge);
typedef NTSTATUS ( *PFN_WSK_DISCONNECT)(PWSK_SOCKET Socket, PWSK_BUF Buffer, ULONG Flags, PIRP Irp);
struct _CLASS_VPD_B0_DATA {NTSTATUS CommandStatus;ULONG MaxUnmapLbaCount;ULONG MaxUnmapBlockDescrCount;ULONG OptimalUnmapGranularity;ULONG UnmapGranularityAlignment;BOOLEAN UGAVALID;UCHAR Reserved0;USHORT OptimalTransferLengthGranularity;ULONG MaximumTransferLength;ULONG OptimalTransferLength;};
struct _CONTROLLER_OBJECT {CSHORT Type;CSHORT Size;PVOID ControllerExtension;KDEVICE_QUEUE DeviceWaitQueue;ULONG Spare1;LARGE_INTEGER Spare2;};
union _DIRECTORY_ENTRIES {ULONG Quadlet;DIRECTORY_HEADER Header;DIRECTORY_ENTRY Entry;LEAF_FORMAT LeafFormat;TEXTUAL_LEAF_FORMAT TextualLeafFormat;};
struct _IDE_REQUEST_BLOCK {USHORT Function;UCHAR IrbStatus;UCHAR AtaStatus;UCHAR AtaError;UCHAR Channel;UCHAR TargetId;UCHAR Lun;UCHAR CdbLength;UCHAR SenseInfoBufferLength;UCHAR SenseInfoBufferType;UCHAR QueueTag;ULONG ReservedAsUlong;ULONG IrbFlags;ULONG TimeOutValue;ULONG DataTransferLength;PVOID IrbExtension;PVOID DataBuffer;PVOID SenseInfoBuffer;PVOID NextIrb;PVOID Reserved;_IDE_REQUEST_BLOCK___6827F88AFC668996C2E61485C9C556E7 __anonymous0;};
struct _MSV1_0_LM20_LOGON {MSV1_0_LOGON_SUBMIT_TYPE MessageType;UNICODE_STRING LogonDomainName;UNICODE_STRING UserName;UNICODE_STRING Workstation;UCHAR ChallengeToClient[8];STRING CaseSensitiveChallengeResponse;STRING CaseInsensitiveChallengeResponse;ULONG ParameterControl;};
struct _PCI_PM_CAPABILITY {PCI_CAPABILITIES_HEADER Header;union _PCI_PM_CAPABILITY___D88BA7F7712EFFD5A716339859759941 PMC;union _PCI_PM_CAPABILITY___C45C7236308434D5F24B7026BFA487E6 PMCSR;union _PCI_PM_CAPABILITY___0CFAED28D81EDD84E3F5FE60E5E74408 PMCSR_BSE;UCHAR Data;};
struct _STOR_REQUEST_INFO {USHORT Version;USHORT Size;STOR_IO_PRIORITY_HINT PriorityHint;ULONG Flags;ULONG Key;ULONG Length;BOOLEAN IsWriteRequest;UCHAR Reserved[3];};
struct _VIDEO_I2C_CONTROL {PVIDEO_WRITE_CLOCK_LINE WriteClockLine;PVIDEO_WRITE_DATA_LINE WriteDataLine;PVIDEO_READ_CLOCK_LINE ReadClockLine;PVIDEO_READ_DATA_LINE ReadDataLine;ULONG I2CDelay;};
struct nd_opt_prefix_info {UINT8 nd_opt_pi_type;UINT8 nd_opt_pi_len;UINT8 nd_opt_pi_prefix_len;nd_opt_prefix_info___398BCD3A84C3D8595978A4C13A2CD80A __anonymous0;UINT32 nd_opt_pi_valid_time;UINT32 nd_opt_pi_preferred_time;union {UINT32 nd_opt_pi_reserved2;nd_opt_prefix_info___B36C22119BA8D8A8DE4E1DF87B7DDAC4___4D31284C466138778A6C6027B2D52F0C __anonymous1;};IN6_ADDR nd_opt_pi_prefix;};
typedef NTSTATUS (*DSM_SET_DATABLOCK)(PVOID DsmContext, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG BufferSize, PUCHAR Buffer);
typedef NTSTATUS (*NDK_FN_INVALIDATE)(NDK_QP *pNdkQp, PVOID RequestContext, NDK_OBJECT_HEADER *pNdkMrOrMw, ULONG Flags);
typedef NTSTATUS (*NDK_FN_MODIFY_SRQ)(NDK_SRQ *pNdkSrq, ULONG SrqDepth, ULONG NotifyThreshold, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
struct _CLS_SCAN_CONTEXT {CLFS_NODE_ID cidNode;PLOG_FILE_OBJECT plfoLog;ULONG cIndex;ULONG cContainers;ULONG cContainersReturned;CLFS_SCAN_MODE eScanMode;PCLS_CONTAINER_INFORMATION pinfoContainer;};
struct _DOT11_WEP_UPLOAD {ULONG uReserved;DOT11_OFFLOAD_TYPE dot11OffloadType;HANDLE hOffload;ULONG uNumOfRWsUsed;DOT11_IV48_COUNTER dot11IV48Counters[16];USHORT usDot11RWBitMaps[16];};
union _IMAGE_AUX_SYMBOL {struct _IMAGE_AUX_SYMBOL___4DD287C70A9B6B0BD59B52A2C78FC5AA Sym;struct _IMAGE_AUX_SYMBOL___79192DA83C94219CD7DBAD7FD0DDA1D7 File;struct _IMAGE_AUX_SYMBOL___8635EE7233618CADAED4C714D8F85165 Section;IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;struct _IMAGE_AUX_SYMBOL___0C431E7450878A23F5A2614033BB8283 CRC;};
struct _KSSTREAM_POINTER {PVOID Context;PKSPIN Pin;PKSSTREAM_HEADER StreamHeader;PKSSTREAM_POINTER_OFFSET Offset;KSSTREAM_POINTER_OFFSET OffsetIn;KSSTREAM_POINTER_OFFSET OffsetOut;};
struct _SDCMD_DESCRIPTOR {SD_COMMAND_CODE Cmd;SD_COMMAND_CLASS CmdClass;SD_TRANSFER_DIRECTION TransferDirection;SD_TRANSFER_TYPE TransferType;SD_RESPONSE_TYPE ResponseType;};
struct _SRBEX_DATA_POWER {SRBEXDATATYPE Type;ULONG Length;UCHAR SrbPowerFlags;UCHAR Reserved[3];STOR_DEVICE_POWER_STATE DevicePowerState;STOR_POWER_ACTION PowerAction;};
struct _TOKEN_STATISTICS {LUID TokenId;LUID AuthenticationId;LARGE_INTEGER ExpirationTime;TOKEN_TYPE TokenType;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;ULONG DynamicCharged;ULONG DynamicAvailable;ULONG GroupCount;ULONG PrivilegeCount;LUID ModifiedId;};
struct _WWAN_SET_CONTEXT {ULONG ContextId;WWAN_CONTEXT_TYPE ContextType;WCHAR AccessString[101];WCHAR UserName[256];WCHAR Password[256];WWAN_COMPRESSION Compression;WWAN_AUTH_PROTOCOL AuthType;WCHAR ProviderId[7];};
typedef BOOLEAN FAST_IO_MDL_READ(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
struct IServiceSinkVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *RequestService)(INTERFACE *This);};
typedef NTSTATUS (*NDK_FN_CREATE_MW)(NDK_PD *pNdkPd, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_MW **ppNdkMw);
typedef NTSTATUS (*NDK_FN_CREATE_PD)(NDK_ADAPTER *pNdkAdapter, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_PD **ppNdkPd);
typedef NTSTATUS (*NDK_FN_RESIZE_CQ)(NDK_CQ *pNdkCq, ULONG CqDepth, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
typedef BOOLEAN (*PFNKSPINSETTIMER)(PKSPIN Pin, PKTIMER Timer, LARGE_INTEGER DueTime, PKDPC Dpc);
typedef NTSTATUS (*PTDI_IND_CONNECT)(PVOID TdiEventContext, LONG RemoteAddressLength, PVOID RemoteAddress, LONG UserDataLength, PVOID UserData, LONG OptionsLength, PVOID Options, CONNECTION_CONTEXT *ConnectionContext, PIRP *AcceptIrp);
typedef NTSTATUS (*PTDI_IND_RECEIVE)(PVOID TdiEventContext, CONNECTION_CONTEXT ConnectionContext, ULONG ReceiveFlags, ULONG BytesIndicated, ULONG BytesAvailable, ULONG *BytesTaken, PVOID Tsdu, PIRP *IoRequestPacket);
struct _AGP_INFO_COMMON {PCI_AGP_CAPABILITY MasterCap;PCI_AGP_CAPABILITY TargetCap;USHORT DeviceId;USHORT VendorId;USHORT SubVendorId;USHORT SubSystemId;UCHAR HwRevisionId;ULONG VerifierFlags;BOOLEAN GuardPageCorruption;};
struct _CLS_INFORMATION {LONGLONG TotalAvailable;LONGLONG CurrentAvailable;LONGLONG TotalReservation;ULONGLONG BaseFileSize;ULONGLONG ContainerSize;ULONG TotalContainers;ULONG FreeContainers;ULONG TotalClients;ULONG Attributes;ULONG FlushThreshold;ULONG SectorSize;CLS_LSN MinArchiveTailLsn;CLS_LSN BaseLsn;CLS_LSN LastFlushedLsn;CLS_LSN LastLsn;CLS_LSN RestartLsn;GUID Identity;};
struct _IMAGE_SYMBOL_EX {union _IMAGE_SYMBOL_EX___F68D1BB612E723B85ECC44FD18D8129B N;ULONG Value;LONG SectionNumber;USHORT Type;UCHAR StorageClass;UCHAR NumberOfAuxSymbols;};
struct _NTFS_STATISTICS {ULONG LogFileFullExceptions;ULONG OtherExceptions;ULONG MftReads;ULONG MftReadBytes;ULONG MftWrites;ULONG MftWriteBytes;struct _NTFS_STATISTICS___9384ABB0CC0EC9C0951E51F8FDAAF22F MftWritesUserLevel;USHORT MftWritesFlushForLogFileFull;USHORT MftWritesLazyWriter;USHORT MftWritesUserRequest;ULONG Mft2Writes;ULONG Mft2WriteBytes;struct _NTFS_STATISTICS___9384ABB0CC0EC9C0951E51F8FDAAF22F Mft2WritesUserLevel;USHORT Mft2WritesFlushForLogFileFull;USHORT Mft2WritesLazyWriter;USHORT Mft2WritesUserRequest;ULONG RootIndexReads;ULONG RootIndexReadBytes;ULONG RootIndexWrites;ULONG RootIndexWriteBytes;ULONG BitmapReads;ULONG BitmapReadBytes;ULONG BitmapWrites;ULONG BitmapWriteBytes;USHORT BitmapWritesFlushForLogFileFull;USHORT BitmapWritesLazyWriter;USHORT BitmapWritesUserRequest;struct _NTFS_STATISTICS___C26E01C8818FDA238FF8A90EE27DD2F8 BitmapWritesUserLevel;ULONG MftBitmapReads;ULONG MftBitmapReadBytes;ULONG MftBitmapWrites;ULONG MftBitmapWriteBytes;USHORT MftBitmapWritesFlushForLogFileFull;USHORT MftBitmapWritesLazyWriter;USHORT MftBitmapWritesUserRequest;struct _NTFS_STATISTICS___9384ABB0CC0EC9C0951E51F8FDAAF22F MftBitmapWritesUserLevel;ULONG UserIndexReads;ULONG UserIndexReadBytes;ULONG UserIndexWrites;ULONG UserIndexWriteBytes;ULONG LogFileReads;ULONG LogFileReadBytes;ULONG LogFileWrites;ULONG LogFileWriteBytes;struct _NTFS_STATISTICS___7571E070C889D08DB25D48A45EE92D71 Allocate;};
struct _PCEVENT_REQUEST {PUNKNOWN MajorTarget;PUNKNOWN MinorTarget;ULONG Node; PCEVENT_ITEM *EventItem;PKSEVENT_ENTRY EventEntry;ULONG Verb;PIRP Irp;};
struct _WWAN_READY_INFO {WWAN_READY_STATE ReadyState;WWAN_EMERGENCY_MODE EmergencyMode;WCHAR SubscriberId[16];WCHAR SimIccId[21];UCHAR CdmaShortMsgSize;WWAN_LIST_HEADER TNListHeader;};
typedef NDIS_STATUS IF_QUERY_OBJECT(NDIS_HANDLE ProviderIfContext, NET_IF_OBJECT_ID ObjectId, PULONG pOutputBufferLength, PVOID pOutputBuffer);
typedef NTSTATUS (*PAGP_MAP_MEMORY)(PVOID AgpContext, PVOID MapHandle, ULONG NumberOfPages, ULONG OffsetInPages, PMDL Mdl, PHYSICAL_ADDRESS *MemoryBase);
typedef NTSTATUS ( *PFN_WSK_CONNECT)(PWSK_SOCKET Socket, PSOCKADDR RemoteAddress, ULONG Flags, PIRP Irp);
typedef NTSTATUS ( *PFN_WSK_RECEIVE)(PWSK_SOCKET Socket, PWSK_BUF Buffer, ULONG Flags, PIRP Irp);
typedef NTSTATUS (*PPARALLEL_WRITE)(PVOID Context, PVOID Buffer, ULONG NumBytesToWrite, PULONG NumBytesWritten, UCHAR Channel);
struct _AVCCONNECTINFO {GUID DeviceID;UCHAR SubunitAddress[32];ULONG SubunitPlugNumber;KSPIN_DATAFLOW DataFlow;HANDLE hPlug;ULONG UnitPlugNumber;};
struct _FILE_LOCK_INFO {LARGE_INTEGER StartingByte;LARGE_INTEGER Length;BOOLEAN ExclusiveLock;ULONG Key;PFILE_OBJECT FileObject;PVOID ProcessId;LARGE_INTEGER EndingByte;};
struct tagKS_VIDEOINFO {RECT rcSource;RECT rcTarget;DWORD dwBitRate;DWORD dwBitErrorRate;REFERENCE_TIME AvgTimePerFrame;KS_BITMAPINFOHEADER bmiHeader;tagKS_VIDEOINFO___F8BBADE88DA80D04A6A2CB02740F1E2F __anonymous0;};
typedef NTSTATUS (*NDK_FN_RECEIVE)(NDK_QP *pNdkQp, PVOID RequestContext,  NDK_SGE *pSgl, ULONG nSge);
typedef NTSTATUS (*PPARALLEL_READ)(PVOID Context, PVOID Buffer, ULONG NumBytesToRead, PULONG NumBytesRead, UCHAR Channel);
struct _DUMP_POINTERS {struct _ADAPTER_OBJECT *AdapterObject;PVOID MappedRegisterBase;PVOID DumpData;PVOID CommonBufferVa;LARGE_INTEGER CommonBufferPa;ULONG CommonBufferSize;BOOLEAN AllocateCommonBuffers;BOOLEAN UseDiskDump;UCHAR Spare1[2];PVOID DeviceObject;};
struct _LOWIO_CONTEXT {USHORT Operation;USHORT Flags;PLOWIO_COMPLETION_ROUTINE CompletionRoutine;PERESOURCE Resource;ERESOURCE_THREAD ResourceThreadId;union _LOWIO_CONTEXT___3DCB1B44CCD368DD9FB1FA402C7DB307 ParamsFor;};
typedef BOOLEAN FAST_IO_WRITE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, PVOID Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef NDIS_STATUS IF_SET_OBJECT(NDIS_HANDLE ProviderIfContext, NET_IF_OBJECT_ID ObjectId, ULONG InputBufferLength, PVOID pInputBuffer);
typedef BOOLEAN (*PFNKSSETTIMER)(PVOID Context, PKTIMER Timer, LARGE_INTEGER DueTime, PKDPC Dpc);
struct SMHBA_FC_Port {HBA_WWN NodeWWN;HBA_WWN PortWWN;HBA_UINT32 FcId;HBA_COS PortSupportedClassofService;HBA_FC4TYPES PortSupportedFc4Types;HBA_FC4TYPES PortActiveFc4Types;HBA_WWN FabricName;char PortSymbolicName[256];HBA_UINT32 NumberofDiscoveredPorts;HBA_UINT8 NumberofPhys;};
struct _IMAGE_SYMBOL {union _IMAGE_SYMBOL___5E628A43DDB5BBBB85D75BCB8FDF7ACA N;ULONG Value;SHORT SectionNumber;USHORT Type;UCHAR StorageClass;UCHAR NumberOfAuxSymbols;};
struct _WWAN_CONTEXT {ULONG ContextId;WWAN_CONTEXT_TYPE ContextType;WCHAR AccessString[101];WCHAR UserName[256];WCHAR Password[256];WWAN_COMPRESSION Compression;WWAN_AUTH_PROTOCOL AuthType;};
typedef BOOLEAN FAST_IO_LOCK(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PLARGE_INTEGER Length, PEPROCESS ProcessId, ULONG Key, BOOLEAN FailImmediately, BOOLEAN ExclusiveLock, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef BOOLEAN FAST_IO_READ(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, PVOID Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef NTSTATUS ( *PFN_WSK_BIND)(PWSK_SOCKET Socket, PSOCKADDR LocalAddress, ULONG Flags, PIRP Irp);
typedef NTSTATUS ( *PFN_WSK_SEND)(PWSK_SOCKET Socket, PWSK_BUF Buffer, ULONG Flags, PIRP Irp);
struct _DISK_RECORD {LARGE_INTEGER ByteOffset;LARGE_INTEGER StartTime;LARGE_INTEGER EndTime;PVOID VirtualAddress;ULONG NumberOfBytes;UCHAR DeviceNumber;BOOLEAN ReadRequest;};
struct _KWAIT_BLOCK {LIST_ENTRY WaitListEntry;UCHAR WaitType;UCHAR BlockState;USHORT WaitKey;_KWAIT_BLOCK___2ACC67C642B9E501E8652DFF4606A234 __anonymous0;PVOID Object;PVOID SparePtr;};
struct _OS_DEP_DATA {PDEVICE_OBJECT DeviceObject;PIRP CurrentIrp;PIRP NotificationIrp;KMUTANT Mutex;KSPIN_LOCK SpinLock;struct _OS_DEP_DATA___950186A194D3C228919DADD735B465AC RemoveLock;};
struct sockaddr_in6 {ADDRESS_FAMILY sin6_family;USHORT sin6_port;ULONG sin6_flowinfo;IN6_ADDR sin6_addr;sockaddr_in6___478B75FEFC20993B5CDAB8E612A985FD __anonymous0;};
typedef NTSTATUS (*NDK_FN_SEND)(NDK_QP *pNdkQp, PVOID RequestContext,  NDK_SGE *pSgl, ULONG nSge, ULONG Flags);
struct _BGRT_TABLE {DESCRIPTION_HEADER Header;USHORT Version;UCHAR Status;UCHAR ImageType;ULONGLONG LogoAddress;ULONG OffsetX;ULONG OffsetY;};
typedef BOOLEAN (*PI2C_WRITE)(PVOID HwDeviceExtension, PI2C_CALLBACKS I2CCallbacks, PUCHAR Buffer, ULONG Length);
typedef BOOLEAN (*PI2C_READ)(PVOID HwDeviceExtension, PI2C_CALLBACKS I2CCallbacks, PUCHAR Buffer, ULONG Length);
union _DL_EUI64 {UINT8 Byte[8];UINT64 Value;struct {DL_OUI Oui;union {DL_EI64 Ei64;_DL_EUI64___111DC19AD74244695D2230B77DE8AE02 __anonymous0;};};};
struct _WSAMSG {LPSOCKADDR name;INT namelen;LPWSABUF lpBuffers;ULONG dwBufferCount;WSABUF Control;ULONG dwFlags;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___9727AC4DDD1719C8C8FC560327A49CAA {HANDLE hDevice;HANDLE hAllocation;UINT SegmentId;SIZE_T OffsetInPages;SIZE_T NumberOfPages;PMDL pMdl;DXGK_MAPAPERTUREFLAGS Flags;ULONG MdlOffset;};
union _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86 {struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___D27B19D2597F90E0BBF2A289F6F401BB Transmit;struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___0260175AB369BB076E5DF9D52C499CDD LsoV1Transmit;struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___D9FABD0107FA781F545DDC567DED4A6C LsoV1TransmitComplete;struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___66F6FAC6CA82FDCEBF26995791DDFFA4 LsoV2Transmit;struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86___03284708F4EE9EB7399C911CFB45E6EF LsoV2TransmitComplete;PVOID Value;};
struct _IRP___66699B8BF83DC91F51A70E4C6E3F33A6___2AD798E65616C4F7304824DBFA27E419 {_IRP______2AD798E65616C4F7304824DBFA27E419___63BBF9CAFCFD23268916A053C4643290 __anonymous0;PETHREAD Thread;PCHAR AuxiliaryBuffer;struct {LIST_ENTRY ListEntry;_IRP_________665C8370128C04AB892B069E6FB086E8___8B5CD6CDFBAAB114E6B0B83ED2C2A4E9 __anonymous1;};PFILE_OBJECT OriginalFileObject;};
union _6659DDBE55020196BB0156953601526A___EED1528C7EAD0409AD8D581383F39997 {ULONG Capabilities;ULONG SignalMode;ULONG LoadMedium;MEDIUM_INFO MediumInfo;TRANSPORT_STATE XPrtState;struct ____EED1528C7EAD0409AD8D581383F39997___7DB82CB5BC08FF580B488AC7D1BB7838 Timecode;DWORD dwTimecode;DWORD dwAbsTrackNumber;struct ____EED1528C7EAD0409AD8D581383F39997___38167C14DDD6FD68ECBEEF1BA5418F40 RawAVC;};
union _79EFEDCEBD127DAA6245792B357A1A48___EED1528C7EAD0409AD8D581383F39997 {ULONG Capabilities;ULONG SignalMode;ULONG LoadMedium;MEDIUM_INFO MediumInfo;TRANSPORT_STATE XPrtState;struct ____EED1528C7EAD0409AD8D581383F39997___7DB82CB5BC08FF580B488AC7D1BB7838 Timecode;DWORD dwTimecode;DWORD dwAbsTrackNumber;struct ____EED1528C7EAD0409AD8D581383F39997___38167C14DDD6FD68ECBEEF1BA5418F40 RawAVC;};
struct _BRB_L2CA_OPEN_CHANNEL___2205ED29735D6185B7CC4245BA253E72 {ULONG Flags;L2CAP_CONFIG_VALUE_RANGE Mtu;L2CAP_CONFIG_VALUE_RANGE FlushTO;L2CAP_FLOWSPEC Flow;USHORT LinkTO;ULONG NumExtraOptions;PL2CAP_CONFIG_OPTION ExtraOptions;struct _BRB_L2CA_OPEN_CHANNEL___2205ED29735D6185B7CC4245BA253E72___92BCF8F8996F0A3CD2E63EB1EBBE61D8 LocalQos;};
union _DXGK_RENDERKM_COMMAND___20FB83705FDF1C2BBDC788448CA29830 {DXGK_GDIARG_BITBLT BitBlt;DXGK_GDIARG_COLORFILL ColorFill;DXGK_GDIARG_ALPHABLEND AlphaBlend;DXGK_GDIARG_STRETCHBLT StretchBlt;DXGK_GDIARG_TRANSPARENTBLT TransparentBlt;DXGK_GDIARG_CLEARTYPEBLEND ClearTypeBlend;};
union _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1 {struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___291A00F730A408470B9A239C0029CCE4 Connect;struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___EA7A87208E3E8087220E134963950D88 ConfigRequest;struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___B2B0BA248C92E6A6BDACB67852B2EA97 ConfigResponse;struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___DDC57483DA80FA367A27C1F6944A9F5F FreeExtraOptions;struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___1D2285BA9AE7386B60F6E3B61C9FBCF3 Disconnect;struct _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1___A3A06E9BACE23A97764B611BD6F32578 RecvPacket;};
union _WHEA_ERROR_PACKET_V1___1E4CB6DF892A3CDE8BB341BD02892B91 {WHEA_PROCESSOR_GENERIC_ERROR_SECTION ProcessorError;WHEA_MEMORY_ERROR_SECTION MemoryError;WHEA_NMI_ERROR_SECTION NmiError;WHEA_PCIEXPRESS_ERROR_SECTION PciExpressError;WHEA_PCIXBUS_ERROR_SECTION PciXBusError;WHEA_PCIXDEVICE_ERROR_SECTION PciXDeviceError;};
struct _USB_BUS_INTERFACE_HUB_SELECTIVE_SUSPEND {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_SUSPEND_HUB SuspendHub;PUSB_BUSIFFN_RESUME_HUB ResumeHub;};
struct _VIDEO_PORT_WCMEMORYPROTECTION_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PROTECT_WC_MEMORY VideoPortProtectWCMemory;RESTORE_WC_MEMORY VideoPortRestoreWCMemory;};
struct _URB_CONTROL_GET_CONFIGURATION_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR Reserved1[8];};
typedef NTSTATUS ( *PFN_NT_QUERY_INFORMATION_TRANSACTION)(HANDLE TransactionHandle, TRANSACTION_INFORMATION_CLASS TransactionInformationClass, PVOID TransactionInformation, ULONG TransactionInformationLength, PULONG ReturnLength);
typedef NTSTATUS (*PCALCULATE_SCATTER_GATHER_LIST_SIZE)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID CurrentVa, ULONG Length, PULONG ScatterGatherListSize, PULONG pNumberOfMapRegisters);
struct DOT11_CIPHER_KEY_MAPPING_KEY_VALUE {DOT11_MAC_ADDRESS PeerMacAddr;DOT11_CIPHER_ALGORITHM AlgorithmId;DOT11_DIRECTION Direction;BOOLEAN bDelete;BOOLEAN bStatic;USHORT usKeyLength;UCHAR ucKey[1];};
typedef NTSTATUS (*NDK_FN_INITIALIZE_FAST_REGISTER_MR)(NDK_MR *pNdkMr, ULONG AdapterPageCount, BOOLEAN RemoteAccess, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
struct _00F974B505468747ECE960C8A578057F {ULONG RecordLength;USHORT MajorVersion;USHORT MinorVersion;FILE_ID_128 FileReferenceNumber;FILE_ID_128 ParentFileReferenceNumber;USN Usn;LARGE_INTEGER TimeStamp;ULONG Reason;ULONG SourceInfo;ULONG SecurityId;ULONG FileAttributes;USHORT FileNameLength;USHORT FileNameOffset;WCHAR FileName[1];};
struct _2361741245AFF1C51192B59F7339350B {INTERFACE Interface;PFNUSBCAMD_WaitOnDeviceEvent USBCAMD_WaitOnDeviceEvent;PFNUSBCAMD_BulkReadWrite USBCAMD_BulkReadWrite;PFNUSBCAMD_SetVideoFormat USBCAMD_SetVideoFormat;PFNUSBCAMD_SetIsoPipeState USBCAMD_SetIsoPipeState;PFNUSBCAMD_CancelBulkReadWrite USBCAMD_CancelBulkReadWrite;};
struct _34AF5E86DC3341832991CC8A37B0F3B6 {ULONG RecordLength;USHORT MajorVersion;USHORT MinorVersion;ULONGLONG FileReferenceNumber;ULONGLONG ParentFileReferenceNumber;USN Usn;LARGE_INTEGER TimeStamp;ULONG Reason;ULONG SourceInfo;ULONG SecurityId;ULONG FileAttributes;USHORT FileNameLength;USHORT FileNameOffset;WCHAR FileName[1];};
struct _53BCF8451FB1BBF1B3D3F15C66D0D1DB {ULONG Version; PCAUTOMATION_TABLE *AutomationTable;ULONG PinSize;ULONG PinCount; PCPIN_DESCRIPTOR *Pins;ULONG NodeSize;ULONG NodeCount; PCNODE_DESCRIPTOR *Nodes;ULONG ConnectionCount; PCCONNECTION_DESCRIPTOR *Connections;ULONG CategoryCount; GUID *Categories;};
struct _93436C1F0A8D6F6AE253292F43F7C270 {DWORD ChannelMapping;DWORD Color;EPcxConnectionType ConnectionType;EPcxGeoLocation GeoLocation;EPcxGenLocation GenLocation;EPxcPortConnection PortConnection;BOOL IsConnected;};
typedef NTSTATUS ( *DXGKCB_POWERRUNTIMECONTROLREQUEST)(IN_CONST_HANDLE hAdapter, LPCGUID PowerControlCode, PVOID InBuffer, SIZE_T InBufferSize, PVOID OutBuffer, SIZE_T OutBufferSize, PSIZE_T BytesReturned);
typedef NTSTATUS  DXGKDDIPOWERRUNTIMECONTROLREQUEST(IN_CONST_HANDLE DriverContext, LPCGUID PowerControlCode, PVOID InBuffer, SIZE_T InBufferSize, PVOID OutBuffer, SIZE_T OutBufferSize, PSIZE_T BytesReturned);
struct _DOT11_INCOMING_ASSOC_DECISION_V2 {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerMacAddr;BOOLEAN bAccept;USHORT usReasonCode;ULONG uAssocResponseIEsOffset;ULONG uAssocResponseIEsLength;DOT11_WFD_STATUS_CODE WFDStatus;};
struct _NDIS_PROTOCOL_RESTART_PARAMETERS {NDIS_OBJECT_HEADER Header;PUCHAR FilterModuleNameBuffer;ULONG FilterModuleNameBufferLength;PNDIS_RESTART_ATTRIBUTES RestartAttributes;NET_IFINDEX BoundIfIndex;NET_LUID BoundIfNetluid;ULONG Flags;};
typedef SECURITY_STATUS ( *INITIALIZE_SECURITY_CONTEXT_FN_W)(PCredHandle, PCtxtHandle, PSECURITY_STRING, unsigned int, unsigned int, unsigned int, PSecBufferDesc, unsigned int, PCtxtHandle, PSecBufferDesc, unsigned int *, PTimeStamp);
struct _PCI_EXPRESS_ROOT_PORT_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PPCI_EXPRESS_ROOT_PORT_READ_CONFIG_SPACE ReadConfigSpace;PPCI_EXPRESS_ROOT_PORT_WRITE_CONFIG_SPACE WriteConfigSpace;};
struct _URB_BULK_OR_INTERRUPT_TRANSFER {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;};
typedef VP_STATUS (*PVIDEO_HW_GET_CHILD_DESCRIPTOR)(PVOID HwDeviceExtension, PVIDEO_CHILD_ENUM_INFO ChildEnumInfo, PVIDEO_CHILD_TYPE VideoChildType, PUCHAR pChildDescriptor, PULONG UId, PULONG pUnused);
struct _DXGK_FIRMWARE_TABLE_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;NTSTATUS (*EnumSystemFirmwareTables)(void *Context, ULONG ProviderSignature, ULONG BufferSize, void *Buffer, ULONG *RequiredSize);NTSTATUS (*ReadSystemFirmwareTable)(void *Context, ULONG ProviderSignature, ULONG TableId, ULONG BufferSize, void *Buffer, ULONG *RequiredSize);};
struct _OB_POST_OPERATION_INFORMATION {OB_OPERATION Operation;_OB_POST_OPERATION_INFORMATION___9E26F4D194EE3F8ED97EC5420551EEA8 __anonymous0;PVOID Object;POBJECT_TYPE ObjectType;PVOID CallContext;NTSTATUS ReturnStatus;POB_POST_OPERATION_PARAMETERS Parameters;};
typedef NTSTATUS DXGKDDI_SYSTEM_DISPLAY_ENABLE(PVOID MiniportDeviceContext, D3DDDI_VIDEO_PRESENT_TARGET_ID TargetId, PDXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS Flags, UINT *Width, UINT *Height, D3DDDIFORMAT *ColorFormat);
typedef NTSTATUS WMI_FUNCTION_CONTROL_CALLBACK(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, WMIENABLEDISABLECONTROL Function, BOOLEAN Enable);
struct _BTH_PROFILE_DRIVER_INTERFACE {INTERFACE Interface;PFNBTH_ALLOCATE_BRB BthAllocateBrb;PFNBTH_FREE_BRB BthFreeBrb;PFNBTH_INITIALIZE_BRB BthInitializeBrb;PFNBTH_REUSE_BRB BthReuseBrb;PFNBTH_IS_BLUETOOTH_VERSION_AVAILABLE IsBluetoothVersionAvailable;};
struct _CM_EISA_FUNCTION_INFORMATION {ULONG CompressedId;UCHAR IdSlotFlags1;UCHAR IdSlotFlags2;UCHAR MinorRevision;UCHAR MajorRevision;UCHAR Selections[26];UCHAR FunctionFlags;UCHAR TypeString[80];EISA_MEMORY_CONFIGURATION EisaMemory[9];EISA_IRQ_CONFIGURATION EisaIrq[7];EISA_DMA_CONFIGURATION EisaDma[4];EISA_PORT_CONFIGURATION EisaPort[20];UCHAR InitializationData[60];};
struct _DXGK_POWER_RUNTIME_COMPONENT {ULONG StateCount;DXGK_POWER_RUNTIME_STATE States[8];DXGK_POWER_COMPONENT_MAPPING ComponentMapping;DXGK_POWER_COMPONENT_FLAGS Flags;GUID ComponentGuid;UCHAR ComponentName[40];ULONG ProviderCount;ULONG Providers[16];};
struct _STORAGE_WRITE_CACHE_PROPERTY {ULONG Version;ULONG Size;WRITE_CACHE_TYPE WriteCacheType;WRITE_CACHE_ENABLE WriteCacheEnabled;WRITE_CACHE_CHANGE WriteCacheChangeable;WRITE_THROUGH WriteThroughSupported;BOOLEAN FlushCacheSupported;BOOLEAN UserDefinedPowerProtection;BOOLEAN NVCacheEnabled;};
struct _WHEA_AER_ENDPOINT_DESCRIPTOR {USHORT Type;BOOLEAN Enabled;UCHAR Reserved;ULONG BusNumber;WHEA_PCI_SLOT_NUMBER Slot;USHORT DeviceControl;AER_ENDPOINT_DESCRIPTOR_FLAGS Flags;ULONG UncorrectableErrorMask;ULONG UncorrectableErrorSeverity;ULONG CorrectableErrorMask;ULONG AdvancedCapsAndControl;};
struct _WHEA_AER_ROOTPORT_DESCRIPTOR {USHORT Type;BOOLEAN Enabled;UCHAR Reserved;ULONG BusNumber;WHEA_PCI_SLOT_NUMBER Slot;USHORT DeviceControl;AER_ROOTPORT_DESCRIPTOR_FLAGS Flags;ULONG UncorrectableErrorMask;ULONG UncorrectableErrorSeverity;ULONG CorrectableErrorMask;ULONG AdvancedCapsAndControl;ULONG RootErrorCommand;};
typedef NTSTATUS (*PALLOCATE_CAPTURE_DMA_ENGINE)(PVOID context, UCHAR CodecAddress, PHDAUDIO_STREAM_FORMAT StreamFormat, PHANDLE Handle, PHDAUDIO_CONVERTER_FORMAT ConverterFormat);
typedef NTSTATUS WMI_QUERY_DATABLOCK_CALLBACK(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG InstanceCount, PULONG InstanceLengthArray, ULONG BufferAvail, PUCHAR Buffer);
struct _D3DKMDT_MONITOR_SOURCE_MODE {D3DKMDT_MONITOR_SOURCE_MODE_ID Id;D3DKMDT_VIDEO_SIGNAL_INFO VideoSignalInfo;D3DKMDT_COLOR_BASIS ColorBasis;D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES ColorCoeffDynamicRanges;D3DKMDT_MONITOR_CAPABILITIES_ORIGIN Origin;D3DKMDT_MODE_PREFERENCE Preference;};
struct _POWER_STATE_CHARACTERISTICS {union _POWER_STATE_CHARACTERISTICS___3444A41F8A39DA3EB5A6D35169EAB189 ID;UINT8 Flag;USHORT Reserved1;ULONG PowerInMPS0;ULONG PowerSavingToMPS0;ULONGLONG ExitLatencyNs;UCHAR Reserved2[8];};
struct _URB_CONTROL_FEATURE_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved2;ULONG Reserved3;PVOID Reserved4;PMDL Reserved5;struct _URB *UrbLink;struct _URB_HCD_AREA hca;USHORT Reserved0;USHORT FeatureSelector;USHORT Index;USHORT Reserved1;};
typedef NTSTATUS HVL_WHEA_ERROR_NOTIFICATION(PFN_NUMBER Pfn, BOOLEAN PlatformDirected, BOOLEAN Poisoned, BOOLEAN Consumed, UINT64 PartitionId, UINT32 VpIndex, UINT16 ErrorCode);
typedef NTSTATUS (*PALLOCATE_RENDER_DMA_ENGINE)(PVOID context, PHDAUDIO_STREAM_FORMAT StreamFormat, BOOLEAN Stripe, PHANDLE Handle, PHDAUDIO_CONVERTER_FORMAT ConverterFormat);
struct PCI_AGP_EXTENDED_CAPABILITY {PCI_AGP_ISOCH_STATUS IsochStatus;PCI_AGP_CONTROL AgpControl;USHORT ApertureSize;PCI_AGP_APERTURE_PAGE_SIZE AperturePageSize;ULONG GartLow;ULONG GartHigh;PCI_AGP_ISOCH_COMMAND IsochCommand;};
typedef NTSTATUS (*PCLASS_WMI_FUNCTION_CONTROL)(PDEVICE_OBJECT DeviceObject, PIRP Irp, ULONG GuidIndex, CLASSENABLEDISABLEFUNCTION Function, BOOLEAN Enable);
typedef NTSTATUS (*PRXCE_IND_RECEIVE_EXPEDITED)(PVOID pRxCeEventContext, PRXCE_VC pVc, ULONG ReceiveFlags, ULONG BytesIndicated, ULONG BytesAvailable, ULONG *BytesTaken, PVOID Tsdu, PMDL *pDataBufferPointer, PULONG pDataBufferSize);
struct _WHEA_AER_BRIDGE_DESCRIPTOR {USHORT Type;BOOLEAN Enabled;UCHAR Reserved;ULONG BusNumber;WHEA_PCI_SLOT_NUMBER Slot;USHORT DeviceControl;AER_BRIDGE_DESCRIPTOR_FLAGS Flags;ULONG UncorrectableErrorMask;ULONG UncorrectableErrorSeverity;ULONG CorrectableErrorMask;ULONG AdvancedCapsAndControl;ULONG SecondaryUncorrectableErrorMask;ULONG SecondaryUncorrectableErrorSev;ULONG SecondaryCapsAndControl;};
struct _tagKSJACK_SINK_INFORMATION {KSJACK_SINK_CONNECTIONTYPE ConnType;WORD ManufacturerId;WORD ProductId;WORD AudioLatency;BOOL HDCPCapable;BOOL AICapable;UCHAR SinkDescriptionLength;WCHAR SinkDescription[32];LUID PortId;};
typedef PVOID (*PALLOCATE_COMMON_BUFFER_EX)(PDMA_ADAPTER DmaAdapter, PPHYSICAL_ADDRESS MaximumAddress, ULONG Length, PPHYSICAL_ADDRESS LogicalAddress, BOOLEAN CacheEnabled, NODE_REQUIREMENT PreferredNode);
typedef NTSTATUS ( *USBC_START_DEVICE_CALLBACK)(PUSB_DEVICE_DESCRIPTOR DeviceDescriptor, PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, PUSBC_FUNCTION_DESCRIPTOR *FunctionDescriptorBuffer, PULONG FunctionDescriptorBufferLength, PDEVICE_OBJECT FdoDeviceObject, PDEVICE_OBJECT PdoDeviceObject);
struct _FSRTL_ADVANCED_FCB_HEADER {FSRTL_COMMON_FCB_HEADER s;PFAST_MUTEX FastMutex;LIST_ENTRY FilterContexts;ULONG_PTR PushLock;PVOID *FileContextSupportPointer;_FSRTL_ADVANCED_FCB_HEADER___497FAF580C19703F3851D2AABA9676AF __anonymous0;};
struct _MRX_CREATENETROOT_CONTEXT {PRX_CONTEXT RxContext;PV_NET_ROOT pVNetRoot;KEVENT FinishEvent;NTSTATUS VirtualNetRootStatus;NTSTATUS NetRootStatus;RX_WORK_QUEUE_ITEM WorkQueueItem;PMRX_NETROOT_CALLBACK Callback;};
typedef NTSTATUS (*pHalGetInterruptTranslator)(INTERFACE_TYPE ParentInterfaceType, ULONG ParentBusNumber, INTERFACE_TYPE BridgeInterfaceType, USHORT Size, USHORT Version, PTRANSLATOR_INTERFACE Translator, PULONG BridgeBusNumber);
struct _IDE_CONTROLLER_INTERFACE {USHORT Version;USHORT Reserved;ULONG ControllerExtensionSize;ULONG ChannelExtensionSize;ULONG AlignmentMask;IDE_CHANNEL_INIT AtaChannelInitRoutine;IDE_CHANNEL_ENABLED AtaControllerChannelEnabled;IDE_TRANSFER_MODE_SELECT AtaControllerTransferModeSelect;IDE_ADAPTER_CONTROL AtaAdapterControl;};
struct _SCSI_POWER_REQUEST_BLOCK {USHORT Length;UCHAR Function;UCHAR SrbStatus;UCHAR SrbPowerFlags;UCHAR PathId;UCHAR TargetId;UCHAR Lun;STOR_DEVICE_POWER_STATE DevicePowerState;ULONG SrbFlags;ULONG DataTransferLength;ULONG TimeOutValue;PVOID DataBuffer;PVOID SenseInfoBuffer;struct _SCSI_REQUEST_BLOCK *NextSrb;PVOID OriginalRequest;PVOID SrbExtension;STOR_POWER_ACTION PowerAction;UCHAR Reserved5[16];};
struct _SDBUS_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PSDBUS_INITIALIZE_INTERFACE_ROUTINE InitializeInterface;PSDBUS_ACKNOWLEDGE_INT_ROUTINE AcknowledgeInterrupt;};
typedef NTSTATUS ( *DXGKCB_AGP_ALLOCATE_POOL)(HANDLE Context, ULONG AllocationSize, MEMORY_CACHING_TYPE CacheType, PPHYSICAL_ADDRESS PhysicalAddress, PVOID *VirtualAddress);
typedef BOOLEAN FAST_IO_WRITE_COMPRESSED(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PVOID Buffer, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _COMPRESSED_DATA_INFO *CompressedDataInfo, ULONG CompressedDataInfoLength, struct _DEVICE_OBJECT *DeviceObject);
struct IPortWMIRegistrationVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *RegisterWMIProvider)(INTERFACE *This, PDEVICE_OBJECT, PVOID);NTSTATUS ( *UnregisterWMIProvider)(INTERFACE *This, PDEVICE_OBJECT);};
typedef BOOLEAN (*PSCSIWMI_QUERY_DATABLOCK)(PVOID Context, PSCSIWMI_REQUEST_CONTEXT DispatchContext, ULONG GuidIndex, ULONG InstanceIndex, ULONG InstanceCount, PULONG InstanceLengthArray, ULONG BufferAvail, PUCHAR Buffer);
struct _BRB_SCO_REGISTER_SERVER {BRB_HEADER Hdr;BTH_ADDR BtAddress;ULONG Reserved;ULONG IndicationFlags;PFNSCO_INDICATION_CALLBACK IndicationCallback;PVOID IndicationCallbackContext;PVOID ReferenceObject;SCO_SERVER_HANDLE ServerHandle;};
struct _WHEA_XPF_CMC_DESCRIPTOR {USHORT Type;BOOLEAN Enabled;UCHAR NumberOfBanks;ULONG Reserved;WHEA_NOTIFICATION_DESCRIPTOR Notify;WHEA_XPF_MC_BANK_DESCRIPTOR Banks[32];};
typedef BOOLEAN FAST_IO_READ_COMPRESSED(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PVOID Buffer, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _COMPRESSED_DATA_INFO *CompressedDataInfo, ULONG CompressedDataInfoLength, struct _DEVICE_OBJECT *DeviceObject);
struct IPortClsSubdeviceExVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *UpdatePinDescriptor)(ULONG ulPinId, ULONG ulFlags, PPCPIN_DESCRIPTOR pPinDescriptor);};
typedef NTSTATUS ( *PFN_NT_OPEN_TRANSACTION)(PHANDLE TransactionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, LPGUID Uow, HANDLE TmHandle);
struct _CDVD_CAPABILITIES_PAGE {unsigned char PageCode : 6;unsigned char Reserved : 1;unsigned char PSBit : 1;UCHAR PageLength;unsigned char CDRRead : 1;unsigned char CDERead : 1;unsigned char Method2 : 1;unsigned char DVDROMRead : 1;unsigned char DVDRRead : 1;unsigned char DVDRAMRead : 1;unsigned char Reserved2 : 2;unsigned char CDRWrite : 1;unsigned char CDEWrite : 1;unsigned char TestWrite : 1;unsigned char Reserved3 : 1;unsigned char DVDRWrite : 1;unsigned char DVDRAMWrite : 1;unsigned char Reserved4 : 2;unsigned char AudioPlay : 1;unsigned char Composite : 1;unsigned char DigitalPortOne : 1;unsigned char DigitalPortTwo : 1;unsigned char Mode2Form1 : 1;unsigned char Mode2Form2 : 1;unsigned char MultiSession : 1;unsigned char BufferUnderrunFree : 1;unsigned char CDDA : 1;unsigned char CDDAAccurate : 1;unsigned char RWSupported : 1;unsigned char RWDeinterleaved : 1;unsigned char C2Pointers : 1;unsigned char ISRC : 1;unsigned char UPC : 1;unsigned char ReadBarCodeCapable : 1;unsigned char Lock : 1;unsigned char LockState : 1;unsigned char PreventJumper : 1;unsigned char Eject : 1;unsigned char Reserved6 : 1;unsigned char LoadingMechanismType : 3;unsigned char SeparateVolume : 1;unsigned char SeperateChannelMute : 1;unsigned char SupportsDiskPresent : 1;unsigned char SWSlotSelection : 1;unsigned char SideChangeCapable : 1;unsigned char RWInLeadInReadable : 1;unsigned char Reserved7 : 2;_CDVD_CAPABILITIES_PAGE___89C222D438D1A4E3002E695748367B56 __anonymous0;UCHAR NumberVolumeLevels[2];UCHAR BufferSize[2];_CDVD_CAPABILITIES_PAGE___254A78F1960B41FD07B3E9DD4326BCF4 __anonymous1;UCHAR ObsoleteReserved3;unsigned char Reserved8 : 1;unsigned char BCK : 1;unsigned char RCK : 1;unsigned char LSBF : 1;unsigned char Length : 2;unsigned char Reserved9 : 2;_CDVD_CAPABILITIES_PAGE___C34E40A4E7ED3A9507928E231B2F2525 __anonymous2;_CDVD_CAPABILITIES_PAGE___E47D562C812A0990AEEC54257C58558D __anonymous3;_CDVD_CAPABILITIES_PAGE___D48E2D6B4C0C98BF5D603F20218AFD0F __anonymous4;};
struct _D3DDDI_ALLOCATIONINFO2 {D3DKMT_HANDLE hAllocation; void *pSystemMem;void *pPrivateDriverData;UINT PrivateDriverDataSize;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;union _D3DDDI_ALLOCATIONINFO2___C37602EC42612761CBD3C806D59105EF Flags;D3DGPU_VIRTUAL_ADDRESS GpuVirtualAddress;ULONG_PTR Reserved[6];};
struct _MSNdis_80211_WLanBssId {ULONG Ndis80211WLanBssIdLength;UCHAR Ndis80211MacAddress[6];USHORT Reserved;ULONG Ndis80211SsIdLength;UCHAR Ndis80211SsId[32];ULONG Ndis80211Privacy;ULONG Ndis80211Rssi;MSNdis_80211_NetworkType Ndis80211NetworkTypeInUse;MSNdis_80211_ConfigurationInfo Ndis80211Configuration;MSNdis_80211_NetworkInfrastructure Ndis80211InfrastructureMode;UCHAR Ndis80211SupportedRate[8];};
struct _NDIS_WMI_METHOD_HEADER {NDIS_OBJECT_HEADER Header;NDIS_PORT_NUMBER PortNumber;NET_LUID NetLuid;ULONG64 RequestId;ULONG Timeout;UCHAR Padding[4];};
struct _PCIX_BRIDGE_CAPABILITY {PCI_CAPABILITIES_HEADER Header;union _PCIX_BRIDGE_CAPABILITY___CA70B71BC10E862FDC7C78E196CAE6C9 SecondaryStatus;union _PCIX_BRIDGE_CAPABILITY___EECBA3A91F5E25257CAAF226CCCFD303 BridgeStatus;USHORT UpstreamSplitTransactionCapacity;USHORT UpstreamSplitTransactionLimit;USHORT DownstreamSplitTransactionCapacity;USHORT DownstreamSplitTransactionLimit;union _PCIX_BRIDGE_CAPABILITY___0853D9480451221ACDFBE7118BCCBE8E EccControlStatus;ULONG EccFirstAddress;ULONG EccSecondAddress;ULONG EccAttribute;};
struct _WWAN_SET_CONTEXT_STATE {ULONG ConnectionId;WWAN_ACTIVATION_COMMAND ActivationCommand;WCHAR AccessString[101];WCHAR UserName[256];WCHAR Password[256];WWAN_COMPRESSION Compression;WWAN_AUTH_PROTOCOL AuthType;WWAN_IP_TYPE IPType;};
typedef BOOLEAN (*pHalTranslateBusAddress)(INTERFACE_TYPE InterfaceType, ULONG BusNumber, PHYSICAL_ADDRESS BusAddress, PULONG AddressSpace, PPHYSICAL_ADDRESS TranslatedAddress);
typedef ULONG (*DSM_CATEGORIZE_REQUEST)(PVOID DsmContext, PDSM_IDS DsmIds, PIRP Irp, PSCSI_REQUEST_BLOCK Srb, PVOID CurrentPath, PVOID *PathId, NTSTATUS *Status);
typedef NTSTATUS (*DSM_SRB_DEVICE_CONTROL)(PVOID DsmContext, PDSM_IDS DsmIds, PIRP Irp, PSCSI_REQUEST_BLOCK Srb, PKEVENT Event);
typedef NTSTATUS (*NDK_FN_CREATE_LISTENER)(NDK_ADAPTER *pNdkAdapter, NDK_FN_CONNECT_EVENT_CALLBACK ConnectEvent, PVOID ConnectEventContext, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_LISTENER **ppNdkListener);
typedef NTSTATUS (*PCAM_CONFIGURE_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PUSBD_INTERFACE_INFORMATION Interface, PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, PLONG DataPipeIndex, PLONG SyncPipeIndex);
typedef NTSTATUS ( *PFN_WSK_CONTROL_CLIENT)(PWSK_CLIENT Client, ULONG ControlCode, SIZE_T InputSize, PVOID InputBuffer, SIZE_T OutputSize, PVOID OutputBuffer, SIZE_T *OutputSizeReturned, PIRP Irp);
struct _DOT11_BSS_DESCRIPTION {ULONG uReserved;DOT11_MAC_ADDRESS dot11BSSID;DOT11_BSS_TYPE dot11BSSType;USHORT usBeaconPeriod;ULONGLONG ullTimestamp;USHORT usCapabilityInformation;ULONG uBufferLength;UCHAR ucBuffer[1];};
struct _DOT11_SCAN_REQUEST_V2 {DOT11_BSS_TYPE dot11BSSType;DOT11_MAC_ADDRESS dot11BSSID;DOT11_SCAN_TYPE dot11ScanType;BOOLEAN bRestrictedScan;ULONG udot11SSIDsOffset;ULONG uNumOfdot11SSIDs;BOOLEAN bUseRequestIE;ULONG uRequestIDsOffset;ULONG uNumOfRequestIDs;ULONG uPhyTypeInfosOffset;ULONG uNumOfPhyTypeInfos;ULONG uIEsOffset;ULONG uIEsLength;UCHAR ucBuffer[1];};
struct _IDE_DEVICE_PARAMETERS {USHORT Version;IDE_DEVICE_TYPE IdeDeviceType;UCHAR TargetId;UCHAR MaximumLun;UCHAR NumberOfOverlappedRequests;UCHAR MaxBlockXfer;USHORT DeviceCharacteristics;ATA_ADDRESS_TRANSLATION AddressTranslation;_IDE_DEVICE_PARAMETERS___DC002D496C8A250B8E7023CEEB6D0A52 __anonymous0;ULONG BytesPerLogicalSector;ULONG BytesPerPhysicalSector;ULONG BytesOffsetForSectorAlignment;ULONG TransferModeSupported;ULONG TransferModeSelected;};
struct _MRX_CALLDOWN_CONTEXT_ {RX_WORK_QUEUE_ITEM WorkQueueItem;PRDBSS_DEVICE_OBJECT pMRxDeviceObject;PMRX_CALLDOWN_COMPLETION_CONTEXT pCompletionContext;PMRX_CALLDOWN_ROUTINE pRoutine;NTSTATUS CompletionStatus;PVOID pParameter;};
struct _NOTIFICATION_INFO_W2K {PMDL Mdl;ULONG ulOffset;ULONG nLength;ULONG fulNotificationOptions;PVOID Context;PADDRESS_FIFO Fifo;PVOID RequestPacket;PMDL ResponseMdl;PVOID *ResponsePacket;PULONG ResponseLength;PKEVENT *ResponseEvent;};
struct _NOTIFICATION_INFO_WXP {PMDL Mdl;ULONG ulOffset;ULONG nLength;ULONG fulNotificationOptions;PVOID Context;PADDRESS_FIFO Fifo;PVOID RequestPacket;PMDL ResponseMdl;PVOID *ResponsePacket;PULONG ResponseLength;PKEVENT *ResponseEvent;ULONG ResponseCode;};
struct _PARALLEL_PARCHIP_INFO {PUCHAR Controller;PUCHAR EcrController;ULONG HardwareModes;PPARCHIP_SET_CHIP_MODE ParChipSetMode;PPARCHIP_CLEAR_CHIP_MODE ParChipClearMode;PVOID Context;BOOLEAN success;};
struct _PS_CREATE_NOTIFY_INFO {SIZE_T Size;_PS_CREATE_NOTIFY_INFO___0573261C701E630EF5641D92A6F614F2 __anonymous0;HANDLE ParentProcessId;CLIENT_ID CreatingThreadId;struct _FILE_OBJECT *FileObject;PCUNICODE_STRING ImageFileName;PCUNICODE_STRING CommandLine;NTSTATUS CreationStatus;};
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBQueryFilterHook_v1)( WCHAR *pAdapter, ULONG ServerIPAddress, USHORT ServerPort, ULONG ClientIPAddress, USHORT ClientPort, UCHAR Protocol, BOOLEAN bReceiveContext, ULONG Flags);
typedef NTSTATUS (*PFNKSDEVICEQUERYPOWER)(PKSDEVICE Device, PIRP Irp, DEVICE_POWER_STATE DeviceTo, DEVICE_POWER_STATE DeviceFrom, SYSTEM_POWER_STATE SystemTo, SYSTEM_POWER_STATE SystemFrom, POWER_ACTION Action);
typedef NTSTATUS (*PFNKSPINSETDATAFORMAT)(PKSPIN Pin, PKSDATAFORMAT OldFormat, PKSMULTIPLE_ITEM OldAttributeList,  KSDATARANGE *DataRange,  KSATTRIBUTE_LIST *AttributeRange);
typedef BOOLEAN TRANSLATE_BUS_ADDRESS(PVOID Context, PHYSICAL_ADDRESS BusAddress, ULONG Length, PULONG AddressSpace, PPHYSICAL_ADDRESS TranslatedAddress);
struct _DXGK_ALLOCATIONINFO2 {void *pPrivateDriverData;UINT PrivateDriverDataSize;UINT Alignment;SIZE_T Size;DXGK_SEGMENTPREFERENCE PreferredSegment;UINT SupportedSegmentSet;UINT MaximumRenamingListLength;HANDLE hAllocation;DXGK_ALLOCATIONINFOFLAGS2 Flags;DXGK_ALLOCATIONUSAGEHINT *pAllocationUsageHint;UINT AllocationPriority;UINT AllocationGroup;UINT SwizzlingInvariantBlockSize;UINT Reserved[6];};
struct _NDIS_OPEN_PARAMETERS {NDIS_OBJECT_HEADER Header;PNDIS_STRING AdapterName;PNDIS_MEDIUM MediumArray;UINT MediumArraySize;PUINT SelectedMediumIndex;PNET_FRAME_TYPE FrameTypeArray;UINT FrameTypeArraySize;};
struct _NET_DEVICE_PNP_EVENT {NDIS_OBJECT_HEADER Header;NDIS_PORT_NUMBER PortNumber;NDIS_DEVICE_PNP_EVENT DevicePnPEvent;PVOID InformationBuffer;ULONG InformationBufferLength;UCHAR NdisReserved[8];};
struct _PCC_GENERIC_SUBSPACE {PCC_SUBSPACE_HEADER Header;USHORT Reserved1;ULONG Reserved2;PHYSICAL_ADDRESS BaseAddress;ULONGLONG Length;GEN_ADDR DoorbellRegister;ULONGLONG DoorbellPreserve;ULONGLONG DoorbellWrite;ULONG NominalLatency;ULONG MaximumPeriodicAccessRate;USHORT MinimumRequestTurnaroundTime;};
struct _PCW_MASK_INFORMATION {ULONG64 CounterMask;PCUNICODE_STRING InstanceMask;ULONG InstanceId;BOOLEAN CollectMultiple;PPCW_BUFFER Buffer;PKEVENT CancelEvent;};
struct _SDBUS_REQUEST_PACKET {SD_REQUEST_FUNCTION RequestFunction;PVOID UserContext[3];ULONG_PTR Information;union _SDBUS_REQUEST_PACKET___1CA46CBE469C5BC31243B2E5E7689902 ResponseData;UCHAR ResponseLength;union _SDBUS_REQUEST_PACKET___B888B40C8223C34658F754EC83B41D3C Parameters;};
struct _WHEA_XPF_MCA_SECTION {ULONG VersionNumber;WHEA_CPU_VENDOR CpuVendor;LARGE_INTEGER Timestamp;ULONG ProcessorNumber;MCG_STATUS GlobalStatus;ULONGLONG InstructionPointer;ULONG BankNumber;MCI_STATUS Status;ULONGLONG Address;ULONGLONG Misc;ULONG ExtendedRegisterCount;ULONG Reserved2;ULONGLONG ExtendedRegisters[24];};
typedef NTSTATUS (*DSM_FUNCTION_CONTROL)(PVOID DsmContext, PIRP Irp, ULONG GuidIndex, WMIENABLEDISABLECONTROL Function, BOOLEAN Enable);
typedef NTSTATUS (*DSM_SET_DATABLOCK_EX)(PVOID DsmContext, PDSM_IDS DsmIds, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG BufferSize, PUCHAR Buffer, ...);
struct IMusicTechnologyVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *SetTechnology)(INTERFACE *This,  GUID *Technology);};
typedef NTSTATUS ( *PFN_WSK_ACCEPT_EVENT)(PVOID SocketContext, ULONG Flags, PSOCKADDR LocalAddress, PSOCKADDR RemoteAddress, PWSK_SOCKET AcceptSocket, PVOID *AcceptSocketContext,  WSK_CLIENT_CONNECTION_DISPATCH **AcceptSocketDispatch);
typedef NTSTATUS (*PGPE_CONNECT_VECTOR2)(PVOID Context, ULONG GpeNumber, KINTERRUPT_MODE Mode, BOOLEAN Shareable, PGPE_SERVICE_ROUTINE ServiceRoutine, PVOID ServiceContext, PVOID *ObjectContext);
struct _FLT_RELATED_OBJECTS { USHORT Size; USHORT TransactionContext; PFLT_FILTER Filter; PFLT_VOLUME Volume; PFLT_INSTANCE Instance; PFILE_OBJECT FileObject; PKTRANSACTION Transaction;};
struct _HW_EVENT_DESCRIPTOR {BOOLEAN Enable;PKSEVENT_ENTRY EventEntry;PKSEVENTDATA EventData;_HW_EVENT_DESCRIPTOR___5566F62EE5BDFEA92488954C24E62452 __anonymous0;ULONG EnableEventSetIndex;PVOID HwInstanceExtension;ULONG Reserved;};
struct _NDIS_TAPI_MAKE_CALL {ULONG ulRequestID;HDRV_LINE hdLine;HTAPI_CALL htCall;HDRV_CALL hdCall;ULONG ulDestAddressSize;ULONG ulDestAddressOffset;BOOLEAN bUseDefaultLineCallParams;LINE_CALL_PARAMS LineCallParams;};
struct _NDIS_WMI_SET_HEADER {NDIS_OBJECT_HEADER Header;NDIS_PORT_NUMBER PortNumber;NET_LUID NetLuid;ULONG64 RequestId;ULONG Timeout;UCHAR Padding[4];};
struct _SYSTEM_POWER_POLICY {ULONG Revision;POWER_ACTION_POLICY PowerButton;POWER_ACTION_POLICY SleepButton;POWER_ACTION_POLICY LidClose;SYSTEM_POWER_STATE LidOpenWake;ULONG Reserved;POWER_ACTION_POLICY Idle;ULONG IdleTimeout;UCHAR IdleSensitivity;UCHAR DynamicThrottle;UCHAR Spare2[2];SYSTEM_POWER_STATE MinSleep;SYSTEM_POWER_STATE MaxSleep;SYSTEM_POWER_STATE ReducedLatencySleep;ULONG WinLogonFlags;ULONG Spare3;ULONG DozeS4Timeout;ULONG BroadcastCapacityResolution;SYSTEM_POWER_LEVEL DischargePolicy[4];ULONG VideoTimeout;BOOLEAN VideoDimDisplay;ULONG VideoReserved[3];ULONG SpindownTimeout;BOOLEAN OptimizeForPower;UCHAR FanThrottleTolerance;UCHAR ForcedThrottle;UCHAR MinThrottle;POWER_ACTION_POLICY OverThrottled;};
typedef NTSTATUS (*DSM_QUERY_DATABLOCK)(PVOID DsmContext, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG InstanceCount, PULONG InstanceLengthArray, ULONG BufferAvail, PUCHAR Buffer, PULONG DsmDataLength);
struct IDrmAudioStreamVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *SetContentId)(INTERFACE *This, ULONG ContentId, PCDRMRIGHTS DrmRights);};
struct _DEVICE_DESCRIPTION {ULONG Version;BOOLEAN Master;BOOLEAN ScatterGather;BOOLEAN DemandMode;BOOLEAN AutoInitialize;BOOLEAN Dma32BitAddresses;BOOLEAN IgnoreCount;BOOLEAN Reserved1;BOOLEAN Dma64BitAddresses;ULONG BusNumber;ULONG DmaChannel;INTERFACE_TYPE InterfaceType;DMA_WIDTH DmaWidth;DMA_SPEED DmaSpeed;ULONG MaximumLength;ULONG DmaPort;ULONG DmaAddressWidth;ULONG DmaControllerInstance;ULONG DmaRequestLine;PHYSICAL_ADDRESS DeviceAddress;};
struct _DXGK_I2C_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;DXGKDDI_I2C_TRANSMIT_DATA_TO_DISPLAY DxgkDdiI2CTransmitDataToDisplay;DXGKDDI_I2C_RECEIVE_DATA_FROM_DISPLAY DxgkDdiI2CReceiveDataFromDisplay;};
struct _MLDV2_QUERY_HEADER {ICMPV6_HEADER IcmpHeader;_MLDV2_QUERY_HEADER___05E330219958D4FF52893F61F28F917A __anonymous0;UINT16 Reserved;IN6_ADDR MulticastAddress;unsigned char QuerierRobustnessVariable : 3;unsigned char SuppressRouterSideProcessing : 1;unsigned char QueryReserved : 4;union {UINT8 QueriersQueryInterfaceCode;_IGMPV3_QUERY_HEADER___BADC5553DDFA9D11ED858F66D86D59FC___A4E2B1CD24A78BF513C2534CAC5D7D7B __anonymous1;};UINT16 SourceCount;};
struct _RX_FCB_TABLE_ENTRY {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;ULONG HashValue;UNICODE_STRING Path;LIST_ENTRY HashLinks;LONG Lookups;};
typedef NTSTATUS (*DSM_EXECUTE_METHOD)(PVOID DsmContext, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG MethodId, ULONG InBufferSize, PULONG OutBufferSize, PUCHAR Buffer);
typedef NTSTATUS (*PAGP_MAP_MEMORY_EX)(PVOID AgpContext, PVOID MapHandle, ULONG NumberOfPages, ULONG OffsetInPages, PMDL Mdl, MEMORY_CACHING_TYPE *CacheTypeOverride, PHYSICAL_ADDRESS *MemoryBase);
typedef void ( *PETWENABLECALLBACK)(LPCGUID SourceId, ULONG ControlCode, UCHAR Level, ULONGLONG MatchAnyKeyword, ULONGLONG MatchAllKeyword, PEVENT_FILTER_DESCRIPTOR FilterData, PVOID CallbackContext);
struct _ARBITER_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PARBITER_HANDLER ArbiterHandler;ULONG Flags;};
struct _FLT_CALLBACK_DATA {FLT_CALLBACK_DATA_FLAGS Flags; PETHREAD Thread; PFLT_IO_PARAMETER_BLOCK Iopb;IO_STATUS_BLOCK IoStatus;struct _FLT_TAG_DATA_BUFFER *TagData;_FLT_CALLBACK_DATA___312C66EF40AEDAF2A3A5D4554FF51F28 __anonymous0;KPROCESSOR_MODE RequestorMode;};
struct _MSNdis_WmiOffload {MSNdis_ObjectHeader Header;MSNdis_WmiTcpIpChecksumOffload Checksum;MSNdis_WmiTcpLargeSendOffloadV1 LsoV1;MSNdis_WmiIPSecOffloadV1 IPsecV1;MSNdis_WmiTcpLargeSendOffloadV2 LsoV2;ULONG Flags;};
struct _SE_ACCESS_REQUEST {ULONG Size;PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor;ACCESS_MASK DesiredAccess;ACCESS_MASK PreviouslyGrantedAccess;PSID PrincipalSelfSid;PGENERIC_MAPPING GenericMapping;ULONG ObjectTypeListCount;POBJECT_TYPE_LIST ObjectTypeList;};
struct _TAPE_INIT_DATA_EX {ULONG InitDataSize;TAPE_VERIFY_INQUIRY_ROUTINE VerifyInquiry;BOOLEAN QueryModeCapabilitiesPage;ULONG MinitapeExtensionSize;TAPE_EXTENSION_INIT_ROUTINE ExtensionInit;ULONG DefaultTimeOutValue;TAPE_ERROR_ROUTINE TapeError;ULONG CommandExtensionSize;TAPE_PROCESS_COMMAND_ROUTINE CreatePartition;TAPE_PROCESS_COMMAND_ROUTINE Erase;TAPE_PROCESS_COMMAND_ROUTINE GetDriveParameters;TAPE_PROCESS_COMMAND_ROUTINE GetMediaParameters;TAPE_PROCESS_COMMAND_ROUTINE GetPosition;TAPE_PROCESS_COMMAND_ROUTINE GetStatus;TAPE_PROCESS_COMMAND_ROUTINE Prepare;TAPE_PROCESS_COMMAND_ROUTINE SetDriveParameters;TAPE_PROCESS_COMMAND_ROUTINE SetMediaParameters;TAPE_PROCESS_COMMAND_ROUTINE SetPosition;TAPE_PROCESS_COMMAND_ROUTINE WriteMarks;TAPE_PROCESS_COMMAND_ROUTINE PreProcessReadWrite;TAPE_PROCESS_COMMAND_ROUTINE TapeGetMediaTypes;ULONG MediaTypesSupported;TAPE_PROCESS_COMMAND_ROUTINE TapeWMIOperations;ULONG Reserved[2];};
typedef NTSTATUS (*DSM_BROADCAST_SRB)(PVOID DsmContext, PDSM_IDS DsmIds, PIRP Irp, PSCSI_REQUEST_BLOCK Srb, PKEVENT Event);
typedef NTSTATUS (*PRXCE_IND_RECEIVE)(PVOID pRxCeEventContext, PRXCE_VC pVc, ULONG ReceiveFlags, ULONG BytesIndicated, ULONG BytesAvailable, ULONG *BytesTaken, PVOID Tsdu, PMDL *pDataBufferPointer, PULONG pDataBufferSize);
struct _HIDP_BUTTON_CAPS {USAGE UsagePage;UCHAR ReportID;BOOLEAN IsAlias;USHORT BitField;USHORT LinkCollection;USAGE LinkUsage;USAGE LinkUsagePage;BOOLEAN IsRange;BOOLEAN IsStringRange;BOOLEAN IsDesignatorRange;BOOLEAN IsAbsolute;ULONG Reserved[10];_HIDP_BUTTON_CAPS___EECF18E811B231775A73F932F7651893 __anonymous0;};
struct _NDIS_WAN_LINE_UP {ULONG LinkSpeed;ULONG MaximumTotalSize;NDIS_WAN_QUALITY Quality;USHORT SendWindow;UCHAR RemoteAddress[6];UCHAR LocalAddress[6];ULONG ProtocolBufferLength;PUCHAR ProtocolBuffer;USHORT ProtocolType;NDIS_STRING DeviceName;};
struct _SMB_FIND_BUFFER2 {SMB_DATE CreationDate;SMB_TIME CreationTime;SMB_DATE LastAccessDate;SMB_TIME LastAccessTime;SMB_DATE LastWriteDate;SMB_TIME LastWriteTime;ULONG DataSize;ULONG AllocationSize;USHORT Attributes;ULONG EaSize;UCHAR FileNameLength;CHAR FileName[1];};
struct IPowerNotifyVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *PowerChangeNotify)(INTERFACE *This, POWER_STATE PowerState);};
typedef NTSTATUS (*NDK_FN_CREATE_MR)(NDK_PD *pNdkPd, BOOLEAN FastRegister, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_MR **ppNdkMr);
typedef BOOLEAN (*PFNKSFASTHANDLER)(PFILE_OBJECT FileObject, PKSIDENTIFIER Request, ULONG RequestLength, PVOID Data, ULONG DataLength, PIO_STATUS_BLOCK IoStatus);
struct _ACPI_WPBT_TABLE {DESCRIPTION_HEADER Header;ULONG HandoffMemorySize;ULONG64 HandoffMemoryLocation;UCHAR ContentLayout;UCHAR ContentType;USHORT CommandLineArgumentsLength;WCHAR CommandLineArguments[1];};
struct _CMP_CREATE_PLUG {CMP_PLUG_TYPE PlugType;AV_PCR Pcr;PCMP_NOTIFY_ROUTINE pfnNotify;PVOID Context;ULONG PlugNum;HANDLE hPlug;};
struct _NDIS_LINK_STATE {NDIS_OBJECT_HEADER Header;NDIS_MEDIA_CONNECT_STATE MediaConnectState;NDIS_MEDIA_DUPLEX_STATE MediaDuplexState;ULONG64 XmitLinkSpeed;ULONG64 RcvLinkSpeed;NDIS_SUPPORTED_PAUSE_FUNCTIONS PauseFunctions;ULONG AutoNegotiationFlags;};
struct _NDK_CQ_DISPATCH {NDK_FN_CLOSE_OBJECT NdkCloseCq;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_RESIZE_CQ NdkResizeCq;NDK_FN_ARM_CQ NdkArmCq;NDK_FN_GET_CQ_RESULTS NdkGetCqResults;NDK_FN_CONTROL_CQ_INTERRUPT_MODERATION NdkControlCqInterruptModeration;};
struct _SMB_FIND_BUFFER {SMB_DATE CreationDate;SMB_TIME CreationTime;SMB_DATE LastAccessDate;SMB_TIME LastAccessTime;SMB_DATE LastWriteDate;SMB_TIME LastWriteTime;ULONG DataSize;ULONG AllocationSize;USHORT Attributes;UCHAR FileNameLength;CHAR FileName[1];};
struct tagKS_FRAME_INFO {ULONG ExtendedHeaderSize;DWORD dwFrameFlags;LONGLONG PictureNumber;LONGLONG DropCount;HANDLE hDirectDraw;HANDLE hSurfaceHandle;RECT DirectDrawRect;tagKS_FRAME_INFO___9558694AFE91A3DAB1DCB8FEE644E504 __anonymous0;DWORD Reserved2;DWORD Reserved3;DWORD Reserved4;};
typedef NTSTATUS LLDP_QUERY_TLVS(HMSAP MsapHandle, LLDP_MIB_TYPE MibType, SIZE_T EntryCount, PLLDP_TLV_TYPE_INFO EntryTypes, SIZE_T BufferSize, SIZE_T *BytesNeeded, PLLDP_TLV_ARRAY Buffer);
struct _TAPE_INIT_DATA {TAPE_VERIFY_INQUIRY_ROUTINE VerifyInquiry;BOOLEAN QueryModeCapabilitiesPage;ULONG MinitapeExtensionSize;TAPE_EXTENSION_INIT_ROUTINE ExtensionInit;ULONG DefaultTimeOutValue;TAPE_ERROR_ROUTINE TapeError;ULONG CommandExtensionSize;TAPE_PROCESS_COMMAND_ROUTINE CreatePartition;TAPE_PROCESS_COMMAND_ROUTINE Erase;TAPE_PROCESS_COMMAND_ROUTINE GetDriveParameters;TAPE_PROCESS_COMMAND_ROUTINE GetMediaParameters;TAPE_PROCESS_COMMAND_ROUTINE GetPosition;TAPE_PROCESS_COMMAND_ROUTINE GetStatus;TAPE_PROCESS_COMMAND_ROUTINE Prepare;TAPE_PROCESS_COMMAND_ROUTINE SetDriveParameters;TAPE_PROCESS_COMMAND_ROUTINE SetMediaParameters;TAPE_PROCESS_COMMAND_ROUTINE SetPosition;TAPE_PROCESS_COMMAND_ROUTINE WriteMarks;TAPE_PROCESS_COMMAND_ROUTINE PreProcessReadWrite;};
typedef NTSTATUS (*PSFFPROT_WRITE)(PVOID Context, PMDL Mdl, ULONGLONG Offset, ULONG Length, PULONG LengthReturned);
struct _DDPIXELFORMAT {DWORD dwSize;DWORD dwFlags;DWORD dwFourCC;_DDPIXELFORMAT___10AA641B3215541DB69A48A361AE0013 __anonymous0;_DDPIXELFORMAT___0E0BD8DB15B3F2A790C062F781315157 __anonymous1;_DDPIXELFORMAT___DB4BDA43012B420E1DC9AEEACAA267A5 __anonymous2;_DDPIXELFORMAT___4C5EBD389D88C4C046794501FFF390F4 __anonymous3;_DDPIXELFORMAT___3ED4EC923A768B2489A9D1155BD11968 __anonymous4;};
struct _DXGKARG_PATCH {_DXGKARG_PATCH___2BF1231023CCF326F9650EAE9AC3A0DD __anonymous0;UINT DmaBufferSegmentId;PHYSICAL_ADDRESS DmaBufferPhysicalAddress;void *pDmaBuffer;UINT DmaBufferSize;UINT DmaBufferSubmissionStartOffset;UINT DmaBufferSubmissionEndOffset;void *pDmaBufferPrivateData;UINT DmaBufferPrivateDataSize;UINT DmaBufferPrivateDataSubmissionStartOffset;UINT DmaBufferPrivateDataSubmissionEndOffset; DXGK_ALLOCATIONLIST *pAllocationList;UINT AllocationListSize; D3DDDI_PATCHLOCATIONLIST *pPatchLocationList;UINT PatchLocationListSize;UINT PatchLocationListSubmissionStart;UINT PatchLocationListSubmissionLength;UINT SubmissionFenceId;DXGK_PATCHFLAGS Flags;UINT EngineOrdinal;};
struct _MCD_INIT_DATA {ULONG InitDataSize;CHANGER_EXTENSION_SIZE ChangerAdditionalExtensionSize;CHANGER_INITIALIZE ChangerInitialize;CHANGER_ERROR_ROUTINE ChangerError;CHANGER_PERFORM_DIAGNOSTICS ChangerPerformDiagnostics;CHANGER_COMMAND_ROUTINE ChangerGetParameters;CHANGER_COMMAND_ROUTINE ChangerGetStatus;CHANGER_COMMAND_ROUTINE ChangerGetProductData;CHANGER_COMMAND_ROUTINE ChangerSetAccess;CHANGER_COMMAND_ROUTINE ChangerGetElementStatus;CHANGER_COMMAND_ROUTINE ChangerInitializeElementStatus;CHANGER_COMMAND_ROUTINE ChangerSetPosition;CHANGER_COMMAND_ROUTINE ChangerExchangeMedium;CHANGER_COMMAND_ROUTINE ChangerMoveMedium;CHANGER_COMMAND_ROUTINE ChangerReinitializeUnit;CHANGER_COMMAND_ROUTINE ChangerQueryVolumeTags;};
struct IPinCountVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *PinCount)(INTERFACE *This, ULONG PinId, PULONG FilterNecessary, PULONG FilterCurrent, PULONG FilterPossible, PULONG GlobalCurrent, PULONG GlobalPossible);};
typedef NTSTATUS (*NDK_FN_LISTEN)(NDK_LISTENER *pNdkListener,  PSOCKADDR pAddress, ULONG AddressLength, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
typedef PHYSICAL_ADDRESS (*PMAP_TRANSFER)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID MapRegisterBase, PVOID CurrentVa, PULONG Length, BOOLEAN WriteToDevice);
typedef NTSTATUS (*PSFFPROT_READ)(PVOID Context, PMDL Mdl, ULONGLONG Offset, ULONG Length, PULONG LengthReturned);
struct _KSPROCESSPIN {PKSPIN Pin;PKSSTREAM_POINTER StreamPointer;PKSPROCESSPIN InPlaceCounterpart;PKSPROCESSPIN DelegateBranch;PKSPROCESSPIN CopySource;PVOID Data;ULONG BytesAvailable;ULONG BytesUsed;ULONG Flags;BOOLEAN Terminate;};
typedef BOOLEAN (*PI2C_WRITE_2)(PVOID HwDeviceExtension, PVIDEO_I2C_CONTROL I2CControl, PUCHAR Buffer, ULONG Length);
struct _IPV4_HEADER {_IPV4_HEADER___7294C6500B7E8E66DD9EAFF73AAE9420 __anonymous0;union {UINT8 TypeOfServiceAndEcnField;_IPV4_HEADER___80DFA742D2097AD049AAE78FF03C750C___37C47C346917A4DE3CC45FD35C6B5017 __anonymous1;};UINT16 TotalLength;UINT16 Identification;union {UINT16 FlagsAndOffset;_IPV4_HEADER___1102F78AC293BC76A5071660AA34A7CC___F11B15A51CFFCDAB5E9FFF0D1A58CBE8 __anonymous2;};UINT8 TimeToLive;UINT8 Protocol;UINT16 HeaderChecksum;IN_ADDR SourceAddress;IN_ADDR DestinationAddress;};
typedef BOOLEAN (*PI2C_READ_2)(PVOID HwDeviceExtension, PVIDEO_I2C_CONTROL I2CControl, PUCHAR Buffer, ULONG Length, BOOLEAN EndOfRead);
struct _BRB_HEADER {LIST_ENTRY ListEntry;ULONG Length;USHORT Version;USHORT Type;ULONG BthportFlags;NTSTATUS Status;BTHSTATUS BtStatus;PVOID Context[4];PVOID ClientContext[4];ULONG Reserved[2];};
struct _IVHD_BLOCK {UINT8 Type;union _IVHD_BLOCK___CC2427FB4E5628166180EC8970FE14AA Flags;UINT16 Length;UINT16 DeviceId;UINT16 CapabilityOffset;UINT64 IommuBaseAddress;UINT16 PciSegment;union _IVHD_BLOCK___FFAE79A01A0C522F1D9081A9AC9A1E79 IommuInfo;UINT32 ReservedZ0;UINT8 DeviceEntries[1];};
struct _IVMD_BLOCK {UINT8 Type;union _IVMD_BLOCK___6CA5807B4C1D95CBC919D39BCB1B3D59 Flags;UINT16 Length;union _IVMD_BLOCK___AB426EBBCAD19089742802B1D7435C2A u1;union _IVMD_BLOCK___DD07C6CB3A3C828A5F6EC3604DA4D352 u2;UINT64 ReservedZ0;UINT64 StartAddress;UINT64 MemoryBlockLength;};
struct _PCIBUSDATA {ULONG Tag;ULONG Version;PciReadWriteConfig ReadConfig;PciReadWriteConfig WriteConfig;PciPin2Line Pin2Line;PciLine2Pin Line2Pin;PCI_SLOT_NUMBER ParentSlot;PVOID Reserved[4];};
struct _FILE_LOCK {PCOMPLETE_LOCK_IRP_ROUTINE CompleteLockIrpRoutine;PUNLOCK_ROUTINE UnlockRoutine;BOOLEAN FastIoIsQuestionable;BOOLEAN SpareC[3];PVOID LockInformation;FILE_LOCK_INFO LastReturnedLockInfo;PVOID LastReturnedLock;LONG LockRequestsInProgress;};
struct _CROM {CONFIG_ROM_HEADER ConfigRomHeader;ULONG Signature;BUS_INFO_CAPABILITIES BusInfoCaps;BUS_INFO_IDS BusInfoIds;ULONG ChipIdLow;DIRECTORY_HEADER RootDirectoryHeader;DIRECTORY_ENTRIES Entries[250];};
struct _FADT {DESCRIPTION_HEADER Header;ULONG facs;ULONG dsdt;UCHAR int_model;UCHAR pm_profile;USHORT sci_int_vector;ULONG smi_cmd_io_port;UCHAR acpi_on_value;UCHAR acpi_off_value;UCHAR s4bios_req;UCHAR pstate_control;ULONG pm1a_evt_blk_io_port;ULONG pm1b_evt_blk_io_port;ULONG pm1a_ctrl_blk_io_port;ULONG pm1b_ctrl_blk_io_port;ULONG pm2_ctrl_blk_io_port;ULONG pm_tmr_blk_io_port;ULONG gp0_blk_io_port;ULONG gp1_blk_io_port;UCHAR pm1_evt_len;UCHAR pm1_ctrl_len;UCHAR pm2_ctrl_len;UCHAR pm_tmr_len;UCHAR gp0_blk_len;UCHAR gp1_blk_len;UCHAR gp1_base;UCHAR cstate_control;USHORT lvl2_latency;USHORT lvl3_latency;USHORT flush_size;USHORT flush_stride;UCHAR duty_offset;UCHAR duty_width;UCHAR day_alarm_index;UCHAR month_alarm_index;UCHAR century_alarm_index;USHORT boot_arch;UCHAR reserved3[1];ULONG flags;GEN_ADDR reset_reg;UCHAR reset_val;UCHAR reserved4[3];PHYSICAL_ADDRESS x_firmware_ctrl;PHYSICAL_ADDRESS x_dsdt;GEN_ADDR x_pm1a_evt_blk;GEN_ADDR x_pm1b_evt_blk;GEN_ADDR x_pm1a_ctrl_blk;GEN_ADDR x_pm1b_ctrl_blk;GEN_ADDR x_pm2_ctrl_blk;GEN_ADDR x_pm_tmr_blk;GEN_ADDR x_gp0_blk;GEN_ADDR x_gp1_blk;GEN_ADDR sleep_control_reg;GEN_ADDR sleep_status_reg;};
union _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6 {struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___577F46EA907A36E539BFA3B1AF421A80 RpmbIsSupported;struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___581006640C95FBAB4BFA285C52463061 RpmbProgramAuthKey;struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___60E89AF55FEDC62AB5124B8D3E3FE988 RpmbQueryWriteCounter;struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___0FC824BA0302BE32D35D01F029B1AD05 RpmbAuthenticatedWrite;struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___0B910CEDC59248BCDC53AAAD9E906EAA RpmbAuthenticatedRead;struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___EA160FC66BC16F497CF08E0A7DD91C4D GppIsSupported;struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6___5361B51F0EE27E908DA5F02E9D475C54 GppReadWrite;};
union _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D {struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___13E44387A1BA7056A332A8AC5EFA477D Connect;struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___9E9E7C0E34D4E998220BB8024C1EC0F5 ConfigRequest;struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___9A42D17D2996B040624A535ABD3DC7B0 ConfigResponse;struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___DDC57483DA80FA367A27C1F6944A9F5F FreeExtraOptions;struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___1D2285BA9AE7386B60F6E3B61C9FBCF3 Disconnect;struct _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D___A3A06E9BACE23A97764B611BD6F32578 RecvPacket;PVOID Reserved;};
union _ARBITER_PARAMETERS___3A7A23006A6D0BBB6E18B2FA6F877FDD {ARBITER_TEST_ALLOCATION_PARAMETERS TestAllocation;ARBITER_RETEST_ALLOCATION_PARAMETERS RetestAllocation;ARBITER_BOOT_ALLOCATION_PARAMETERS BootAllocation;ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS QueryAllocatedResources;ARBITER_QUERY_CONFLICT_PARAMETERS QueryConflict;ARBITER_QUERY_ARBITRATE_PARAMETERS QueryArbitrate;ARBITER_ADD_RESERVED_PARAMETERS AddReserved;};
struct _DOT11_SEND_PROVISION_DISCOVERY_REQUEST_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_DIALOG_TOKEN DialogToken;DOT11_MAC_ADDRESS PeerDeviceAddress;ULONG uSendTimeout;DOT11_WFD_GROUP_CAPABILITY GroupCapability;DOT11_WFD_GROUP_ID GroupID;BOOLEAN bUseGroupID;ULONG uIEsOffset;ULONG uIEsLength;};
union _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4 {UCHAR AsByte[];struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___THRESHOLD_RESOURCE_COUNT THRESHOLD_RESOURCE_COUNT;struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___TEMPERATURE TEMPERATURE;struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___DATE_OF_MANUFACTURE DATE_OF_MANUFACTURE;struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___SELF_TEST_RESULTS SELF_TEST_RESULTS;struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___SOLID_STATE_MEDIA SOLID_STATE_MEDIA;struct _LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4___BACKGROUND_SCAN_STATUS BACKGROUND_SCAN_STATUS;};
struct _NDIS_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG OpModeCapability;ULONG NumOfTXBuffers;ULONG NumOfRXBuffers;BOOLEAN MultiDomainCapabilityImplemented;ULONG NumSupportedPhys;PDOT11_PHY_ATTRIBUTES SupportedPhyAttributes;PDOT11_EXTSTA_ATTRIBUTES ExtSTAAttributes;PDOT11_VWIFI_ATTRIBUTES VWiFiAttributes;PDOT11_EXTAP_ATTRIBUTES ExtAPAttributes;};
struct _DOT11_SEND_GO_NEGOTIATION_REQUEST_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;ULONG uSendTimeout;DOT11_WFD_GO_INTENT GroupOwnerIntent;DOT11_WFD_CONFIGURATION_TIMEOUT MinimumConfigTimeout;DOT11_MAC_ADDRESS IntendedInterfaceAddress;DOT11_WFD_GROUP_CAPABILITY GroupCapability;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_INCOMING_ASSOC_COMPLETION_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerMacAddr;ULONG uStatus;UCHAR ucErrorSource;BOOLEAN bReAssocReq;BOOLEAN bReAssocResp;ULONG uAssocReqOffset;ULONG uAssocReqSize;ULONG uAssocRespOffset;ULONG uAssocRespSize;DOT11_AUTH_ALGORITHM AuthAlgo;DOT11_CIPHER_ALGORITHM UnicastCipher;DOT11_CIPHER_ALGORITHM MulticastCipher;ULONG uActivePhyListOffset;ULONG uActivePhyListSize;ULONG uBeaconOffset;ULONG uBeaconSize;};
struct _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_FRAME_HEADER FrameHeader;NDIS_RECEIVE_FILTER_TEST ReceiveFilterTest;union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___HEADER_FIELD HeaderField;union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___FIELD_VALUE FieldValue;union _NDIS_RECEIVE_FILTER_FIELD_PARAMETERS___RESULT_VALUE ResultValue;};
struct _URB_CONTROL_VENDOR_OR_CLASS_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR RequestTypeReservedBits;UCHAR Request;USHORT Value;USHORT Index;USHORT Reserved1;};
struct _DXGKARGCB_CREATECONTEXTALLOCATION {DXGK_CREATECONTEXTALLOCATIONFLAGS ContextAllocationFlags;HANDLE hAdapter;HANDLE hDevice;HANDLE hContext;HANDLE hDriverAllocation;SIZE_T Size;UINT Alignment;UINT SupportedSegmentSet;UINT EvictionSegmentSet;DXGK_SEGMENTPREFERENCE PreferredSegment;DXGK_SEGMENTBANKPREFERENCE HintedBank;DXGK_ALLOCATIONINFOFLAGS Flags;HANDLE hAllocation;};
struct _URB_CONTROL_GET_INTERFACE_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR Reserved1[4];USHORT Interface;USHORT Reserved2;};
struct _URB_OS_FEATURE_DESCRIPTOR_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;unsigned char Recipient : 5;unsigned char Reserved1 : 3;UCHAR Reserved2;UCHAR InterfaceNumber;UCHAR MS_PageIndex;USHORT MS_FeatureDescriptorIndex;USHORT Reserved3;};
struct _AAB530BE51B826E42B40424AF03CA80A {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;DXGK_BRIGHTNESS_GET_POSSIBLE GetPossibleBrightness;DXGK_BRIGHTNESS_SET SetBrightness;DXGK_BRIGHTNESS_GET GetBrightness;};
union _NDIS_MINIPORT_ADAPTER_ATTRIBUTES {NDIS_OBJECT_HEADER Header;NDIS_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES AddDeviceRegistrationAttributes;NDIS_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES RegistrationAttributes;NDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES GeneralAttributes;NDIS_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES OffloadAttributes;NDIS_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES Native_802_11_Attributes;NDIS_MINIPORT_ADAPTER_HARDWARE_ASSIST_ATTRIBUTES HardwareAssistAttributes;};
struct _IO_INTERRUPT_MESSAGE_INFO_ENTRY {PHYSICAL_ADDRESS MessageAddress;KAFFINITY TargetProcessorSet;PKINTERRUPT InterruptObject;ULONG MessageData;ULONG Vector;KIRQL Irql;KINTERRUPT_MODE Mode;KINTERRUPT_POLARITY Polarity;};
struct _NDIS_RESTART_GENERAL_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG MtuSize;ULONG64 MaxXmitLinkSpeed;ULONG64 MaxRcvLinkSpeed;ULONG LookaheadSize;ULONG MacOptions;ULONG SupportedPacketFilters;ULONG MaxMulticastListSize;PNDIS_RECEIVE_SCALE_CAPABILITIES RecvScaleCapabilities;NET_IF_ACCESS_TYPE AccessType;ULONG Flags;NET_IF_CONNECTION_TYPE ConnectionType;ULONG SupportedStatistics;ULONG DataBackFillSize;ULONG ContextBackFillSize;PNDIS_OID SupportedOidList;ULONG SupportedOidListLength;ULONG MaxLookaheadSizeAccessed;};
struct _NDIS_FILTER_RESTART_PARAMETERS {NDIS_OBJECT_HEADER Header;NDIS_MEDIUM MiniportMediaType;NDIS_PHYSICAL_MEDIUM MiniportPhysicalMediaType;PNDIS_RESTART_ATTRIBUTES RestartAttributes;NET_IFINDEX LowerIfIndex;NET_LUID LowerIfNetLuid;ULONG Flags;};
struct _URB_CONTROL_DESCRIPTOR_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;USHORT Reserved1;UCHAR Index;UCHAR DescriptorType;USHORT LanguageId;USHORT Reserved2;};
struct _URB_CONTROL_GET_STATUS_REQUEST {struct _URB_HEADER Hdr;PVOID Reserved;ULONG Reserved0;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR Reserved1[4];USHORT Index;USHORT Reserved2;};
struct DOT11_CIPHER_DEFAULT_KEY_VALUE {NDIS_OBJECT_HEADER Header;ULONG uKeyIndex;DOT11_CIPHER_ALGORITHM AlgorithmId;DOT11_MAC_ADDRESS MacAddr;BOOLEAN bDelete;BOOLEAN bStatic;USHORT usKeyLength;UCHAR ucKey[1];};
struct _REG_CREATE_KEY_INFORMATION_V1 {PUNICODE_STRING CompleteName;PVOID RootObject;PVOID ObjectType;ULONG Options;PUNICODE_STRING Class;PVOID SecurityDescriptor;PVOID SecurityQualityOfService;ACCESS_MASK DesiredAccess;ACCESS_MASK GrantedAccess;PULONG Disposition;PVOID *ResultObject;PVOID CallContext;PVOID RootObjectContext;PVOID Transaction;ULONG_PTR Version;PUNICODE_STRING RemainingName;ULONG Wow64Flags;ULONG Attributes;KPROCESSOR_MODE CheckAccessMode;};
typedef NTSTATUS (*NDK_FN_CREATE_SHARED_ENDPOINT)(NDK_ADAPTER *pNdkAdapter,  PSOCKADDR pAddress, ULONG AddressLength, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_SHARED_ENDPOINT **ppNdkSharedEndpoint);
struct _IDE_CONTROLLER_CONFIGURATION {USHORT Version;UCHAR NumberOfChannels;IDE_OPERATION_MODE ControllerMode;UCHAR NumberOfPhysicalBreaks;ULONG MaximumTransferLength;BOOLEAN Reserved;BOOLEAN NativeModeEnabled;BOOLEAN Dma64BitAddress;BOOLEAN BusMaster;IDE_BUS_TYPE AtaBusType;PIDE_MINIPORT_RESOURCES ControllerResources;};
struct _TCG_DESCRIPTION_TABLE_SERVER {DESCRIPTION_HEADER Header;USHORT PlatformClass;USHORT Reserved1;ULONGLONG LAML;PHYSICAL_ADDRESS LASA;USHORT SpecificationRevision;UCHAR DeviceFlags;UCHAR InterruptFlags;UCHAR GPE;UCHAR Reserved2[3];ULONG GlobalSystemInterupt;GEN_ADDR BaseAddress;ULONG Reserved3;GEN_ADDR ConfigurationAddress;UCHAR PCISegmentGroupNumber;UCHAR PCIBusNumber;UCHAR PCIDeviceNumber;UCHAR PCIFunctionNumber;};
struct _DXGKARG_PRESENT_DISPLAYONLY {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;void *pSource;ULONG BytesPerPixel;LONG Pitch;D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS Flags;ULONG NumMoves;D3DKMT_MOVE_RECT *pMoves;ULONG NumDirtyRects;RECT *pDirtyRect;DXGKCB_PRESENT_DISPLAYONLY_PROGRESS pfnPresentDisplayOnlyProgress;};
struct IAdapterPowerManagementVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *PowerChangeState)(INTERFACE *This, POWER_STATE NewState);NTSTATUS ( *QueryPowerChangeState)(INTERFACE *This, POWER_STATE NewStateQuery);NTSTATUS ( *QueryDeviceCapabilities)(INTERFACE *This, PDEVICE_CAPABILITIES PowerDeviceCaps);};
typedef NTSTATUS (*PTRANSLATE_RESOURCE_HANDLER)(PVOID Context, PCM_PARTIAL_RESOURCE_DESCRIPTOR Source, RESOURCE_TRANSLATION_DIRECTION Direction, ULONG AlternativesCount, IO_RESOURCE_DESCRIPTOR  *    Alternatives, PDEVICE_OBJECT PhysicalDeviceObject, PCM_PARTIAL_RESOURCE_DESCRIPTOR Target);
struct _DXGKARG_DESCRIBEALLOCATION {HANDLE hAllocation;UINT Width;UINT Height;D3DDDIFORMAT Format;D3DDDI_MULTISAMPLINGMETHOD MultisampleMethod;D3DDDI_RATIONAL RefreshRate;UINT PrivateDriverFormatAttribute;DXGK_DESCRIBEALLOCATIONFLAGS Flags;D3DDDI_ROTATION Rotation;};
struct _NDIS_INTERFACE_INFORMATION {NET_IF_OPER_STATUS ifOperStatus;ULONG ifOperStatusFlags;NET_IF_MEDIA_CONNECT_STATE MediaConnectState;NET_IF_MEDIA_DUPLEX_STATE MediaDuplexState;ULONG ifMtu;BOOLEAN ifPromiscuousMode;BOOLEAN ifDeviceWakeUpEnable;ULONG64 XmitLinkSpeed;ULONG64 RcvLinkSpeed;ULONG64 ifLastChange;ULONG64 ifCounterDiscontinuityTime;ULONG64 ifInUnknownProtos;ULONG64 ifInDiscards;ULONG64 ifInErrors;ULONG64 ifHCInOctets;ULONG64 ifHCInUcastPkts;ULONG64 ifHCInMulticastPkts;ULONG64 ifHCInBroadcastPkts;ULONG64 ifHCOutOctets;ULONG64 ifHCOutUcastPkts;ULONG64 ifHCOutMulticastPkts;ULONG64 ifHCOutBroadcastPkts;ULONG64 ifOutErrors;ULONG64 ifOutDiscards;ULONG64 ifHCInUcastOctets;ULONG64 ifHCInMulticastOctets;ULONG64 ifHCInBroadcastOctets;ULONG64 ifHCOutUcastOctets;ULONG64 ifHCOutMulticastOctets;ULONG64 ifHCOutBroadcastOctets;NET_IF_COMPARTMENT_ID CompartmentId;ULONG SupportedStatistics;};
struct _WHEA_PCIXBUS_ERROR_SECTION {WHEA_PCIXBUS_ERROR_SECTION_VALIDBITS ValidBits;WHEA_ERROR_STATUS ErrorStatus;USHORT ErrorType;WHEA_PCIXBUS_ID BusId;ULONG Reserved;ULONGLONG BusAddress;ULONGLONG BusData;WHEA_PCIXBUS_COMMAND BusCommand;ULONGLONG RequesterId;ULONGLONG CompleterId;ULONGLONG TargetId;};
typedef NTSTATUS (*PSETUP_DMA_ENGINE_WITH_BDL)(PVOID context, HANDLE Handle, ULONG BufferLength, ULONG Lvi, PHDAUDIO_BDL_ISR Isr, PVOID Context, PUCHAR StreamId, PULONG FifoSize);
typedef NTSTATUS (*PSHED_PI_READ_ERROR_RECORD)(PVOID PluginContext, ULONG Flags, ULONGLONG ErrorRecordId, PULONGLONG NextErrorRecordId, PULONG RecordLength, PWHEA_ERROR_RECORD ErrorRecord);
struct _DOT11_ASSOCIATION_INFO_EX {DOT11_MAC_ADDRESS PeerMacAddress;DOT11_MAC_ADDRESS BSSID;USHORT usCapabilityInformation;USHORT usListenInterval;UCHAR ucPeerSupportedRates[255];USHORT usAssociationID;DOT11_ASSOCIATION_STATE dot11AssociationState;DOT11_POWER_MODE dot11PowerMode;LARGE_INTEGER liAssociationUpTime;ULONGLONG ullNumOfTxPacketSuccesses;ULONGLONG ullNumOfTxPacketFailures;ULONGLONG ullNumOfRxPacketSuccesses;ULONGLONG ullNumOfRxPacketFailures;};
struct _DOT11_DEFAULT_WEP_OFFLOAD {ULONG uReserved;HANDLE hOffloadContext;HANDLE hOffload;ULONG dwIndex;DOT11_OFFLOAD_TYPE dot11OffloadType;ULONG dwAlgorithm;ULONG uFlags;DOT11_KEY_DIRECTION dot11KeyDirection;UCHAR ucMacAddress[6];ULONG uNumOfRWsOnMe;DOT11_IV48_COUNTER dot11IV48Counters[16];USHORT usDot11RWBitMaps[16];USHORT usKeyLength;UCHAR ucKey[1];};
struct _IDE_CHANNEL_CONFIGURATION {USHORT Version;UCHAR ChannelNumber;SUPPORTED_ADVANCES SupportedAdvances;IDE_OPERATION_MODE ChannelMode;PIDE_MINIPORT_RESOURCES ChannelResources;UCHAR NumberOfOverlappedRequests;UCHAR MaxTargetId;BOOLEAN SyncWithIsr;BOOLEAN SupportsWmi;PIDE_ADVANCED_CHANNEL_CONFIGURATION AdvancedChannelConfiguration;};
struct _MSiSCSI_BootConfiguration {ULONGLONG LUN;ULONGLONG SecurityFlags;ULONG UsernameSize;ULONG PasswordSize;BOOLEAN DiscoverBootDevice;WCHAR InitiatorNode[224];WCHAR TargetName[224];ISCSI_TargetPortal TargetPortal;ISCSI_LoginOptions LoginOptions;UCHAR Username[1];};
struct _PARALLEL_PORT_INFORMATION {PHYSICAL_ADDRESS OriginalController;PUCHAR Controller;ULONG SpanOfController;PPARALLEL_TRY_ALLOCATE_ROUTINE TryAllocatePort;PPARALLEL_FREE_ROUTINE FreePort;PPARALLEL_QUERY_WAITERS_ROUTINE QueryNumWaiters;PVOID Context;};
struct DOT11_EXTSTA_RECV_CONTEXT {NDIS_OBJECT_HEADER Header;ULONG uReceiveFlags;ULONG uPhyId;ULONG uChCenterFrequency;USHORT usNumberOfMPDUsReceived;LONG lRSSI;UCHAR ucDataRate;ULONG uSizeMediaSpecificInfo;PVOID pvMediaSpecificInfo;ULONGLONG ullTimestamp;};
typedef NTSTATUS (*PFLUSH_ADAPTER_BUFFERS_EX)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID MapRegisterBase, ULONGLONG Offset, ULONG Length, BOOLEAN WriteToDevice);
struct _BRB_L2CA_REGISTER_SERVER {BRB_HEADER Hdr;BTH_ADDR BtAddress;USHORT PSM;ULONG IndicationFlags;PFNBTHPORT_INDICATION_CALLBACK IndicationCallback;PVOID IndicationCallbackContext;PVOID ReferenceObject;L2CAP_SERVER_HANDLE ServerHandle;};
struct _IO_REMOVE_LOCK_DBG_BLOCK {LONG Signature;ULONG HighWatermark;LONGLONG MaxLockedTicks;LONG AllocateTag;LIST_ENTRY LockList;KSPIN_LOCK Spin;LONG LowMemoryCount;ULONG Reserved1[4];PVOID Reserved2;PIO_REMOVE_LOCK_TRACKING_BLOCK Blocks;};
struct _USB_DEVICE_INFORMATION_0 {ULONG InformationLevel;ULONG ActualLength;ULONG PortNumber;USB_DEVICE_DESCRIPTOR DeviceDescriptor;UCHAR DD_pad[2];UCHAR CurrentConfigurationValue;UCHAR ReservedMBZ;USHORT DeviceAddress;ULONG HubAddress;USB_DEVICE_SPEED DeviceSpeed;USB_DEVICE_TYPE DeviceType;ULONG NumberOfOpenPipes;USB_PIPE_INFORMATION_0 PipeList[1];};
struct IPortClsRuntimePowerVtbl {NTSTATUS ( *SendPowerControl)(PDEVICE_OBJECT DeviceObject, LPCGUID PowerControlCode, PVOID InBuffer, SIZE_T InBufferSize, PVOID OutBuffer, SIZE_T OutBufferSize, PSIZE_T BytesReturned);NTSTATUS ( *RegisterPowerControlCallback)(PDEVICE_OBJECT DeviceObject, PCPFNRUNTIME_POWER_CONTROL_CALLBACK Callback, PVOID Context);NTSTATUS ( *UnregisterPowerControlCallback)(PDEVICE_OBJECT DeviceObject);};
struct IUnregisterSubdeviceVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *UnregisterSubdevice)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PUNKNOWN Unknown);};
typedef NTSTATUS (*PIO_QUERY_DEVICE_ROUTINE)(PVOID Context, PUNICODE_STRING PathName, INTERFACE_TYPE BusType, ULONG BusNumber, PKEY_VALUE_FULL_INFORMATION *BusInformation, CONFIGURATION_TYPE ControllerType, ULONG ControllerNumber, PKEY_VALUE_FULL_INFORMATION *ControllerInformation, CONFIGURATION_TYPE PeripheralType, ULONG PeripheralNumber, PKEY_VALUE_FULL_INFORMATION *PeripheralInformation);
struct _ISCSI_SessionStaticInfo {ULONGLONG UniqueSessionId;WCHAR InitiatoriSCSIName[224];WCHAR TargetiSCSIName[224];USHORT TSID;UCHAR ISID[6];BOOLEAN InitialR2t;BOOLEAN ImmediateData;UCHAR Type;BOOLEAN DataSequenceInOrder;BOOLEAN DataPduInOrder;UCHAR ErrorRecoveryLevel;ULONG MaxOutstandingR2t;ULONG FirstBurstLength;ULONG MaxBurstLength;ULONG MaxConnections;USHORT ConnectionCount;ISCSI_ConnectionStaticInfo ConnectionsList[1];};
struct _URB_CONTROL_TRANSFER_EX {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;ULONG Timeout;struct _URB_HCD_AREA hca;UCHAR SetupPacket[8];};
typedef NTSTATUS (*DSM_FUNCTION_CONTROL_EX)(PVOID DsmContext, PDSM_IDS DsmIds, PIRP Irp, ULONG GuidIndex, WMIENABLEDISABLECONTROL Function, BOOLEAN Enable, ...);
typedef NTSTATUS (*PFNKSINTERSECTHANDLEREX)(PVOID Context, PIRP Irp, PKSP_PIN Pin, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG DataBufferSize, PVOID Data, PULONG DataSize);
struct _DOT11_WFD_DEVICE_ENTRY {ULONG uPhyId;DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO PhySpecificInfo;DOT11_MAC_ADDRESS dot11BSSID;DOT11_BSS_TYPE dot11BSSType;DOT11_MAC_ADDRESS TransmitterAddress;LONG lRSSI;ULONG uLinkQuality;USHORT usBeaconPeriod;ULONGLONG ullTimestamp;ULONGLONG ullBeaconHostTimestamp;ULONGLONG ullProbeResponseHostTimestamp;USHORT usCapabilityInformation;ULONG uBeaconIEsOffset;ULONG uBeaconIEsLength;ULONG uProbeResponseIEsOffset;ULONG uProbeResponseIEsLength;};
struct _NDIS_STATUS_INDICATION {NDIS_OBJECT_HEADER Header;NDIS_HANDLE SourceHandle;NDIS_PORT_NUMBER PortNumber;NDIS_STATUS StatusCode;ULONG Flags;NDIS_HANDLE DestinationHandle;PVOID RequestId;PVOID StatusBuffer;ULONG StatusBufferSize;GUID Guid;PVOID NdisReserved[4];};
struct _RX_TOPLEVELIRP_CONTEXT {_RX_TOPLEVELIRP_CONTEXT___5130196CA7666B8823729A067CD25FC9 __anonymous0;ULONG Signature;PRDBSS_DEVICE_OBJECT RxDeviceObject;PRX_CONTEXT RxContext;PIRP Irp;ULONG Flags;PVOID Previous;PETHREAD Thread;};
struct _SEND_RECEIVE_HOOK_INFO {NLB_HOOK_API_VERSION Version; WCHAR *pAdapter;IF_INDEX IFIndex; NET_BUFFER *pPacket; UCHAR *pMediaHeader;ULONG cMediaHeaderLength; UCHAR *pPayload;ULONG cPayloadLength;ULONG Flags;void *Reserved;NLB_HOOK_IP_TUPLE NewTuple;};
typedef NTSTATUS (*pHalAssignSlotResources)(PUNICODE_STRING RegistryPath, PUNICODE_STRING DriverClassName, PDRIVER_OBJECT DriverObject, PDEVICE_OBJECT DeviceObject, INTERFACE_TYPE BusType, ULONG BusNumber, ULONG SlotNumber, PCM_RESOURCE_LIST *AllocatedResources);
typedef NTSTATUS (*DSM_QUERY_DATABLOCK_EX)(PVOID DsmContext, PDSM_IDS DsmIds, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG InstanceCount, PULONG InstanceLengthArray, ULONG BufferAvail, PUCHAR Buffer, PULONG DsmDataLength, ...);
struct IPortWavePciStreamVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetMapping)(INTERFACE *This, PVOID Tag, PPHYSICAL_ADDRESS PhysicalAddress, PVOID *VirtualAddress, PULONG ByteCount, PULONG Flags);NTSTATUS ( *ReleaseMapping)(INTERFACE *This, PVOID Tag);NTSTATUS ( *TerminatePacket)(INTERFACE *This);};
typedef NTSTATUS ( *PFN_WSK_CONTROL_SOCKET)(PWSK_SOCKET Socket, WSK_CONTROL_SOCKET_TYPE RequestType, ULONG ControlCode, ULONG Level, SIZE_T InputSize, PVOID InputBuffer, SIZE_T OutputSize, PVOID OutputBuffer, SIZE_T *OutputSizeReturned, PIRP Irp);
typedef NTSTATUS (*PGET_DMA_TRANSFER_INFO)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, ULONGLONG Offset, ULONG Length, BOOLEAN WriteOnly, PDMA_TRANSFER_INFO TransferInfo);
struct _BRB_L2CA_ACL_TRANSFER {BRB_HEADER Hdr;BTH_ADDR BtAddress;L2CAP_CHANNEL_HANDLE ChannelHandle;ULONG TransferFlags;ULONG BufferSize;PVOID Buffer;PMDL BufferMDL;LONGLONG Timeout;ULONG RemainingBufferSize;};
struct _DXGKARG_SUBMITCOMMAND {_DXGKARG_PATCH___2BF1231023CCF326F9650EAE9AC3A0DD __anonymous0;UINT DmaBufferSegmentId;PHYSICAL_ADDRESS DmaBufferPhysicalAddress;UINT DmaBufferSize;UINT DmaBufferSubmissionStartOffset;UINT DmaBufferSubmissionEndOffset;void *pDmaBufferPrivateData;UINT DmaBufferPrivateDataSize;UINT DmaBufferPrivateDataSubmissionStartOffset;UINT DmaBufferPrivateDataSubmissionEndOffset;UINT SubmissionFenceId;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;D3DDDI_FLIPINTERVAL_TYPE FlipInterval;DXGK_SUBMITCOMMANDFLAGS Flags;UINT EngineOrdinal;D3DGPU_VIRTUAL_ADDRESS DmaBufferVirtualAddress;UINT NodeOrdinal;};
struct _NDIS_WMI_EVENT_HEADER {NDIS_OBJECT_HEADER Header;NET_IFINDEX IfIndex;NET_LUID NetLuid;ULONG64 RequestId;NDIS_PORT_NUMBER PortNumber;ULONG DeviceNameLength;ULONG DeviceNameOffset;UCHAR Padding[4];};
struct _RX_BUFFERING_MANAGER_ {BOOLEAN DispatcherActive;BOOLEAN HandlerInactive;BOOLEAN LastChanceHandlerActive;UCHAR Pad;KSPIN_LOCK SpinLock;LONG CumulativeNumberOfBufferingChangeRequests;LONG NumberOfUnhandledRequests;LONG NumberOfUndispatchedRequests;LONG NumberOfOutstandingOpens;LIST_ENTRY DispatcherList;LIST_ENTRY HandlerList;LIST_ENTRY LastChanceHandlerList;RX_WORK_QUEUE_ITEM DispatcherWorkItem;RX_WORK_QUEUE_ITEM HandlerWorkItem;RX_WORK_QUEUE_ITEM LastChanceHandlerWorkItem;FAST_MUTEX Mutex;LIST_ENTRY SrvOpenLists[1];};
typedef NTSTATUS (*DSM_EXECUTE_METHOD_EX)(PVOID DsmContext, PDSM_IDS DsmIds, PIRP Irp, ULONG GuidIndex, ULONG InstanceIndex, ULONG MethodId, ULONG InBufferSize, PULONG OutBufferSize, PUCHAR Buffer, ...);
typedef NLB_FILTER_HOOK_DIRECTIVE (*NLBQueryFilterHook_v2)( WCHAR *pAdapter, ADDRESS_FAMILY AddressFamily,  UCHAR *ServerIPAddress, USHORT ServerPort,  UCHAR *ClientIPAddress, USHORT ClientPort, UCHAR Protocol, BOOLEAN bReceiveContext, ULONG Flags);
typedef NTSTATUS ( *PFN_WSK_SEND_MESSAGES)(PWSK_SOCKET Socket, PWSK_BUF_LIST BufferList, ULONG Flags, PSOCKADDR RemoteAddress, ULONG ControlInfoLength, PCMSGHDR ControlInfo, PIRP Irp);
struct _NT_CREATE_PARAMETERS {ACCESS_MASK DesiredAccess;LARGE_INTEGER AllocationSize;ULONG FileAttributes;ULONG ShareAccess;ULONG Disposition;ULONG CreateOptions;PIO_SECURITY_CONTEXT SecurityContext;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;PVOID DfsContext;PDFS_NAME_CONTEXT DfsNameContext;};
struct _URB_CONTROL_TRANSFER {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;UCHAR SetupPacket[8];};
struct _WWAN_SMS_CDMA_RECORD {ULONG MessageIndex;WWAN_MSG_STATUS MsgStatus;CHAR Address[50];CHAR ScTimeStamp[20];WWAN_SMS_CDMA_ENCODING EncodingId;WWAN_SMS_CDMA_LANG LanguageId;USHORT SizeInBytes;UCHAR SizeInCharacters;UCHAR EncodedMsg[160];};
struct _BTH_ENUMERATOR_INFO {ENUMERATOR_TYPE EnumeratorType;ENUMERATOR_ACTION Action;ULONG Port;ULONG Flags;GUID Guid;ULONG InstanceId;WCHAR InstanceIdStr[256];USHORT Vid;USHORT Pid;USHORT Mfg;USHORT LocalMfg;USHORT VidType;WCHAR ServiceName[256];CHAR SdpPriLangServiceName[256];WCHAR DeviceString[256];};
struct _DXGK_ALLOCATIONINFO {void *pPrivateDriverData;UINT PrivateDriverDataSize;UINT Alignment;SIZE_T Size;SIZE_T PitchAlignedSize;DXGK_SEGMENTBANKPREFERENCE HintedBank;DXGK_SEGMENTPREFERENCE PreferredSegment;UINT SupportedReadSegmentSet;UINT SupportedWriteSegmentSet;UINT EvictionSegmentSet;UINT MaximumRenamingListLength;HANDLE hAllocation;DXGK_ALLOCATIONINFOFLAGS Flags;DXGK_ALLOCATIONUSAGEHINT *pAllocationUsageHint;UINT AllocationPriority;};
typedef NTSTATUS (*PGPE_CONNECT_VECTOR)(PDEVICE_OBJECT, ULONG, KINTERRUPT_MODE, BOOLEAN, PGPE_SERVICE_ROUTINE, PVOID, PVOID);
struct _DOT11_SCAN_REQUEST {DOT11_BSS_TYPE dot11BSSType;DOT11_MAC_ADDRESS dot11BSSID;DOT11_SSID dot11SSID;DOT11_SCAN_TYPE dot11ScanType;BOOLEAN bRestrictedScan;BOOLEAN bUseRequestIE;ULONG uRequestIDsOffset;ULONG uNumOfRequestIDs;ULONG uPhyTypesOffset;ULONG uNumOfPhyTypes;ULONG uIEsOffset;ULONG uIEsLength;UCHAR ucBuffer[1];};
struct _DXGK_AGP_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;DXGKCB_AGP_ALLOCATE_POOL AgpAllocatePool;DXGKCB_AGP_FREE_POOL AgpFreePool;DXGKCB_AGP_SET_COMMAND AgpSetCommand;};
struct _URB_ISOCH_TRANSFER {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG TransferFlags;ULONG TransferBufferLength;PVOID TransferBuffer;PMDL TransferBufferMDL;struct _URB *UrbLink;struct _URB_HCD_AREA hca;ULONG StartFrame;ULONG NumberOfPackets;ULONG ErrorCount;USBD_ISO_PACKET_DESCRIPTOR IsoPacket[1];};
typedef NTSTATUS (*NDK_FN_REGISTER_MR)(NDK_MR *pNdkMr, MDL *Mdl, SIZE_T Length, ULONG Flags, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
struct _DOT11_WEP_OFFLOAD {ULONG uReserved;HANDLE hOffloadContext;HANDLE hOffload;DOT11_OFFLOAD_TYPE dot11OffloadType;ULONG dwAlgorithm;BOOLEAN bRowIsOutbound;BOOLEAN bUseDefault;ULONG uFlags;UCHAR ucMacAddress[6];ULONG uNumOfRWsOnPeer;ULONG uNumOfRWsOnMe;DOT11_IV48_COUNTER dot11IV48Counters[16];USHORT usDot11RWBitMaps[16];USHORT usKeyLength;UCHAR ucKey[1];};
typedef NTSTATUS ( *DXGKCB_MAP_MEMORY)(HANDLE DeviceHandle, PHYSICAL_ADDRESS TranslatedAddress, ULONG Length, BOOLEAN InIoSpace, BOOLEAN MapToUserMode, MEMORY_CACHING_TYPE CacheType, PVOID *VirtualAddress);
struct IServiceGroupVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *RequestService)(INTERFACE *This);NTSTATUS ( *AddMember)(INTERFACE *This, PSERVICESINK pServiceSink);void ( *RemoveMember)(INTERFACE *This, PSERVICESINK pServiceSink);void ( *SupportDelayedService)(INTERFACE *This);void ( *RequestDelayedService)(INTERFACE *This, ULONGLONG ullDelay);void ( *CancelDelayedService)(INTERFACE *This);};
struct _BRB_SCO_TRANSFER {BRB_HEADER Hdr;BTH_ADDR BtAddress;SCO_CHANNEL_HANDLE ChannelHandle;ULONG TransferFlags;ULONG BufferSize;PVOID Buffer;PMDL BufferMDL;ULONGLONG DataTag;};
struct _FILTER_EXTENSION {FILTER_DUMP_TYPE DumpType;PDEVICE_OBJECT DeviceObject;DISK_GEOMETRY Geometry;LARGE_INTEGER DiskSize;DISK_PARTITION_INFO PartitionInfo;PVOID DumpData;ULONG Size;ULONG Flags;};
struct _HW_STREAM_HEADER {ULONG NumberOfStreams;ULONG SizeOfHwStreamInformation;ULONG NumDevPropArrayEntries;PKSPROPERTY_SET DevicePropertiesArray;ULONG NumDevEventArrayEntries;PKSEVENT_SET DeviceEventsArray;PKSTOPOLOGY Topology;PHW_EVENT_ROUTINE DeviceEventRoutine;LONG NumDevMethodArrayEntries;PKSMETHOD_SET DeviceMethodsArray;};
struct _HW_STREAM_OBJECT {ULONG SizeOfThisPacket;ULONG StreamNumber;PVOID HwStreamExtension;PHW_RECEIVE_STREAM_DATA_SRB ReceiveDataPacket;PHW_RECEIVE_STREAM_CONTROL_SRB ReceiveControlPacket;HW_CLOCK_OBJECT HwClockObject;BOOLEAN Dma;BOOLEAN Pio;PVOID HwDeviceExtension;ULONG StreamHeaderMediaSpecific;ULONG StreamHeaderWorkspace;BOOLEAN Allocator;PHW_EVENT_ROUTINE HwEventRoutine;ULONG Reserved[2];};
struct _ISOCH_DESCRIPTOR {ULONG fulFlags;PMDL Mdl;ULONG ulLength;ULONG nMaxBytesPerFrame;ULONG ulSynch;ULONG ulTag;CYCLE_TIME CycleTime;PBUS_ISOCH_DESCRIPTOR_ROUTINE Callback;PVOID Context1;PVOID Context2;NTSTATUS status;ULONG_PTR DeviceReserved[8];ULONG_PTR BusReserved[8];ULONG_PTR PortReserved[16];};
struct _NDIS_WMI_OFFLOAD {NDIS_OBJECT_HEADER Header;NDIS_WMI_TCP_IP_CHECKSUM_OFFLOAD Checksum;NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V1 LsoV1;NDIS_WMI_IPSEC_OFFLOAD_V1 IPsecV1;NDIS_WMI_TCP_LARGE_SEND_OFFLOAD_V2 LsoV2;ULONG Flags;NDIS_IPSEC_OFFLOAD_V2 IPsecV2;};
struct _WWAN_DEVICE_CAPS {WWAN_DEVICE_TYPE WwanDeviceType;WWAN_CELLULAR_CLASS WwanCellularClass;WWAN_VOICE_CLASS WwanVoiceClass;WWAN_SIM_CLASS WwanSimClass;ULONG WwanDataClass;WCHAR CustomDataClass[12];ULONG WwanGsmBandClass;ULONG WwanCdmaBandClass;WCHAR CustomBandClass[20];ULONG WwanSmsCaps;ULONG WwanControlCaps;WCHAR DeviceId[18];WCHAR Manufacturer[32];WCHAR Model[32];WCHAR FirmwareInfo[32];ULONG MaxActivatedContexts;ULONG WwanAuthAlgoCaps;WWAN_LIST_HEADER CellularClassListHeader;};
typedef NTSTATUS (*NDK_FN_CREATE_QP)(NDK_PD *pNdkPd, NDK_CQ *pReceiveCq, NDK_CQ *pInitiatorCq, PVOID QPContext, ULONG ReceiveQueueDepth, ULONG InitiatorQueueDepth, ULONG MaxReceiveRequestSge, ULONG MaxInitiatorRequestSge, ULONG InlineDataSize, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_QP **ppNdkQp);
struct _AVC_COMMAND_IRB {_AVC_IRB __anonymous0;unsigned char SubunitAddrFlag : 1;unsigned char AlternateOpcodesFlag : 1;unsigned char TimeoutFlag : 1;unsigned char RetryFlag : 1;_AVC_COMMAND_IRB___39C82A5B2A48A1A8E03C983BBE5BCCB4 __anonymous2;PUCHAR SubunitAddr;PUCHAR AlternateOpcodes;LARGE_INTEGER Timeout;UCHAR Retries;UCHAR Opcode;ULONG OperandLength;UCHAR Operands[509];NODE_ADDRESS NodeAddress;ULONG Generation;};
struct _DXGKARG_PRESENT {void *pDmaBuffer;UINT DmaSize;void *pDmaBufferPrivateData;UINT DmaBufferPrivateDataSize;_DXGKARG_PRESENT___6C9CE20EBB898E736357E8F8761763A7 __anonymous0;D3DDDI_PATCHLOCATIONLIST *pPatchLocationListOut;UINT PatchLocationListOutSize;UINT MultipassOffset;UINT Color;RECT DstRect;RECT SrcRect;UINT SubRectCnt; RECT *pDstSubRects;D3DDDI_FLIPINTERVAL_TYPE FlipInterval;DXGK_PRESENTFLAGS Flags;UINT DmaBufferSegmentId;PHYSICAL_ADDRESS DmaBufferPhysicalAddress;};
struct _HIDP_VALUE_CAPS {USAGE UsagePage;UCHAR ReportID;BOOLEAN IsAlias;USHORT BitField;USHORT LinkCollection;USAGE LinkUsage;USAGE LinkUsagePage;BOOLEAN IsRange;BOOLEAN IsStringRange;BOOLEAN IsDesignatorRange;BOOLEAN IsAbsolute;BOOLEAN HasNull;UCHAR Reserved;USHORT BitSize;USHORT ReportCount;USHORT Reserved2[5];ULONG UnitsExp;ULONG Units;LONG LogicalMin;LONG LogicalMax;LONG PhysicalMin;LONG PhysicalMax;_HIDP_VALUE_CAPS___D10B5F657B465D66794202428CB38B41 __anonymous0;};
struct _NDIS_PORT_STATE {NDIS_OBJECT_HEADER Header;NDIS_MEDIA_CONNECT_STATE MediaConnectState;ULONG64 XmitLinkSpeed;ULONG64 RcvLinkSpeed;NET_IF_DIRECTION_TYPE Direction;NDIS_PORT_CONTROL_STATE SendControlState;NDIS_PORT_CONTROL_STATE RcvControlState;NDIS_PORT_AUTHORIZATION_STATE SendAuthorizationState;NDIS_PORT_AUTHORIZATION_STATE RcvAuthorizationState;ULONG Flags;};
struct _NDK_MR_DISPATCH {NDK_FN_CLOSE_OBJECT NdkCloseMr;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_REGISTER_MR NdkRegisterMr;NDK_FN_DEREGISTER_MR NdkDeregisterMr;NDK_FN_INITIALIZE_FAST_REGISTER_MR NdkInitializeFastRegisterMr;NDK_FN_GET_REMOTE_TOKEN_FROM_MR NdkGetRemoteTokenFromMr;NDK_FN_GET_LOCAL_TOKEN_FROM_MR NdkGetLocalTokenFromMr;};
struct _RX_PREFIX_TABLE {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;ULONG Version;LIST_ENTRY MemberQueue;ERESOURCE TableLock;PRX_PREFIX_ENTRY TableEntryForNull;BOOLEAN CaseInsensitiveMatch;BOOLEAN IsNetNameTable;ULONG TableSize;LIST_ENTRY HashBuckets[32];};
typedef NTSTATUS ( *PFN_WSK_SEND_TO)(PWSK_SOCKET Socket, PWSK_BUF Buffer, ULONG Flags, PSOCKADDR RemoteAddress, ULONG ControlInfoLength, PCMSGHDR ControlInfo, PIRP Irp);
struct _KSPIN_DISPATCH {PFNKSPINIRP Create;PFNKSPINIRP Close;PFNKSPIN Process;PFNKSPINVOID Reset;PFNKSPINSETDATAFORMAT SetDataFormat;PFNKSPINSETDEVICESTATE SetDeviceState;PFNKSPIN Connect;PFNKSPINVOID Disconnect; KSCLOCK_DISPATCH *Clock; KSALLOCATOR_DISPATCH *Allocator;};
struct _RX_DISPATCHER_ {LONG NumberOfProcessors;PEPROCESS OwnerProcess;PRX_WORK_QUEUE_DISPATCHER pWorkQueueDispatcher;RX_DISPATCHER_STATE State;LIST_ENTRY SpinUpRequests;KSPIN_LOCK SpinUpRequestsLock;KEVENT SpinUpRequestsEvent;KEVENT SpinUpRequestsTearDownEvent;};
typedef NTSTATUS (*NDK_FN_CONNECT)(NDK_CONNECTOR *pNdkConnector, NDK_QP *pNdkQp,  PSOCKADDR pSrcAddress, ULONG SrcAddressLength,  PSOCKADDR pDestAddress, ULONG DestAddressLength, ULONG InboundReadLimit, ULONG OutboundReadLimit,  PVOID pPrivateData, ULONG PrivateDataLength, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
typedef NTSTATUS ( *PFN_WSK_ACCEPT)(PWSK_SOCKET ListenSocket, ULONG Flags, PVOID AcceptSocketContext,  WSK_CLIENT_CONNECTION_DISPATCH *AcceptSocketDispatch, PSOCKADDR LocalAddress, PSOCKADDR RemoteAddress, PIRP Irp);
struct _I2C_FNC_TABLE {ULONG Size;PVIDEO_WRITE_CLOCK_LINE WriteClockLine;PVIDEO_WRITE_DATA_LINE WriteDataLine;PVIDEO_READ_CLOCK_LINE ReadClockLine;PVIDEO_READ_DATA_LINE ReadDataLine;PVIDEO_WAIT_VSYNC_ACTIVE WaitVsync;PVOID Reserved;};
struct _MRX_SRV_CALL_ {_MRX_NORMAL_NODE_HEADER __anonymous0;PVOID Context;PVOID Context2;PRDBSS_DEVICE_OBJECT RxDeviceObject;PUNICODE_STRING pSrvCallName;PUNICODE_STRING pPrincipalName;PUNICODE_STRING pDomainName;ULONG Flags;LONG MaximumNumberOfCloseDelayedFiles;NTSTATUS Status;};
typedef NTSTATUS (*NDK_FN_ACCEPT)(NDK_CONNECTOR *pNdkConnector, NDK_QP *pNdkQp, ULONG InboundReadLimit, ULONG OutboundReadLimit,  PVOID pPrivateData, ULONG PrivateDataLength, NDK_FN_DISCONNECT_EVENT_CALLBACK DisconnectEvent, PVOID DisconnectEventContext, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
struct _NDIS_OFFLOAD {NDIS_OBJECT_HEADER Header;NDIS_TCP_IP_CHECKSUM_OFFLOAD Checksum;NDIS_TCP_LARGE_SEND_OFFLOAD_V1 LsoV1;NDIS_IPSEC_OFFLOAD_V1 IPsecV1;NDIS_TCP_LARGE_SEND_OFFLOAD_V2 LsoV2;ULONG Flags;NDIS_IPSEC_OFFLOAD_V2 IPsecV2;};
struct IPinNameVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetPinName)(INTERFACE *This, PIRP Irp, PKSP_PIN Pin, PVOID Data);};
typedef NTSTATUS (*NDK_FN_WRITE)(NDK_QP *pNdkQp, PVOID RequestContext,  NDK_SGE *pSgl, ULONG nSge, UINT64 RemoteAddress, UINT32 RemoteToken, ULONG Flags);
typedef NTSTATUS (*NDK_FN_BIND)(NDK_QP *pNdkQp, PVOID RequestContext, NDK_MR *pMr, NDK_MW *pMw, PVOID VirtualAddress, SIZE_T Length, ULONG Flags);
typedef NTSTATUS (*NDK_FN_READ)(NDK_QP *pNdkQp, PVOID RequestContext,  NDK_SGE *pSgl, ULONG nSge, UINT64 RemoteAddress, UINT32 RemoteToken, ULONG Flags);
struct _CIP_FRAME {_CIP_FRAME___2E16906FAA07C2FD0ECFFAB6F8122094 __anonymous0;ULONG Flags;PCIP_VALIDATE_ROUTINE pfnValidate;PVOID ValidateContext;PCIP_NOTIFY_ROUTINE pfnNotify;PVOID NotifyContext;CYCLE_TIME Timestamp;ULONG Status;PUCHAR Packet;ULONG CompletedBytes;};
struct _KSDEVICE { KSDEVICE_DESCRIPTOR *Descriptor;KSOBJECT_BAG Bag;PVOID Context;PDEVICE_OBJECT FunctionalDeviceObject;PDEVICE_OBJECT PhysicalDeviceObject;PDEVICE_OBJECT NextDeviceObject;BOOLEAN Started;SYSTEM_POWER_STATE SystemPowerState;DEVICE_POWER_STATE DevicePowerState;};
struct _KAPC {UCHAR Type;UCHAR SpareByte0;UCHAR Size;UCHAR SpareByte1;ULONG SpareLong0;struct _KTHREAD *Thread;LIST_ENTRY ApcListEntry;PVOID Reserved[3];PVOID NormalContext;PVOID SystemArgument1;PVOID SystemArgument2;CCHAR ApcStateIndex;KPROCESSOR_MODE ApcMode;BOOLEAN Inserted;};
union _37B8E770EA172EE03D1653C7B692D623___1B15D34C184CB996FC269D8F9168C70F {struct ____1B15D34C184CB996FC269D8F9168C70F___557E0A75632B2AB77ABA22F73346E46E EventHandle;struct ____1B15D34C184CB996FC269D8F9168C70F___77A8D5BA7911BAC3E5E8672810CEE79A SemaphoreHandle;struct ____1B15D34C184CB996FC269D8F9168C70F___F60F9682E16A06CBF246055AD9379216 EventObject;struct ____1B15D34C184CB996FC269D8F9168C70F___88E5B7AA2308BDD340E63FD79CED674D SemaphoreObject;struct ____1B15D34C184CB996FC269D8F9168C70F___58C2C17DBEA3E5C4294F58D3F434B669 Dpc;struct ____1B15D34C184CB996FC269D8F9168C70F___F0EAB68459A9F767BF6487584D0432BE WorkItem;struct ____1B15D34C184CB996FC269D8F9168C70F___40DF1D993F355996A89CD36C5B1ABF70 KsWorkItem;struct ____1B15D34C184CB996FC269D8F9168C70F___2045542961514ACF8A05342E7D7A4BD3 Alignment;};
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA {ULONG Flags;L2CAP_CONFIG_VALUE_RANGE Mtu;L2CAP_CONFIG_VALUE_RANGE FlushTO;L2CAP_FLOWSPEC Flow;USHORT LinkTO;ULONG NumExtraOptions;PL2CAP_CONFIG_OPTION ExtraOptions;struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA___92BCF8F8996F0A3CD2E63EB1EBBE61D8 LocalQos;struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA___D3AE0C0A124DD0DE7B3E9AC1D2855E05 ModeConfig;USHORT Fcs;L2CAP_EXTENDED_FLOW_SPEC ExtendedFlowSpec;USHORT ExtendedWindowSize;};
struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR {ULONG SectionOffset;ULONG SectionLength;WHEA_REVISION Revision;WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS ValidBits;UCHAR Reserved;WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS Flags;GUID SectionType;GUID FRUId;WHEA_ERROR_SEVERITY SectionSeverity;CCHAR FRUText[20];};
typedef NTSTATUS (*NDK_FN_CONNECT_WITH_SHARED_ENDPOINT)(NDK_CONNECTOR *pNdkConnector, NDK_QP *pNdkQp, NDK_SHARED_ENDPOINT *pNdkSharedEndpoint,  PSOCKADDR pDestAddress, ULONG DestAddressLength, ULONG InboundReadLimit, ULONG OutboundReadLimit,  PVOID pPrivateData, ULONG PrivateDataLength, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext);
struct _VIDEO_PORT_DEBUG_REPORT_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PVIDEO_DEBUG_REPORT (*DbgReportCreate)(PVOID HwDeviceExtension, ULONG ulCode, ULONG_PTR ulpArg1, ULONG_PTR ulpArg2, ULONG_PTR ulpArg3, ULONG_PTR ulpArg4);BOOLEAN (*DbgReportSecondaryData)(PVIDEO_DEBUG_REPORT pReport, PVOID pvData, ULONG ulDataSize);void (*DbgReportComplete)(PVIDEO_DEBUG_REPORT pReport);};
struct _4C3688935B439E6B73B5D283DA0CA595 {ULONG InterfacesCount; KSPIN_INTERFACE *Interfaces;ULONG MediumsCount; KSPIN_MEDIUM *Mediums;ULONG DataRangesCount; PKSDATARANGE *DataRanges;KSPIN_DATAFLOW DataFlow;KSPIN_COMMUNICATION Communication; GUID *Category; GUID *Name;_4C3688935B439E6B73B5D283DA0CA595___9EF2451CEFA2D95A0F2C171B14CF10A6 __anonymous0;};
struct _F3B7485C952161763EA52E3754EBFEF6 {ULONG Bus;ULONG Slot;USHORT Segment;USHORT VendorID;USHORT DeviceID;UCHAR BaseClass;UCHAR SubClass;UCHAR ProgIf;UCHAR Flags;BOOLEAN Initialized;BOOLEAN Configured;DEBUG_DEVICE_ADDRESS BaseAddress[6];DEBUG_MEMORY_REQUIREMENTS Memory;USHORT PortType;USHORT PortSubtype;PVOID OemData;ULONG OemDataLength;KD_NAMESPACE_ENUM NameSpace;PVOID NameSpacePath;ULONG NameSpacePathLength;};
struct IUnregisterPhysicalConnectionVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *UnregisterPhysicalConnection)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PUNKNOWN FromUnknown, ULONG FromPin, PUNKNOWN ToUnknown, ULONG ToPin);NTSTATUS ( *UnregisterPhysicalConnectionToExternal)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PUNKNOWN FromUnknown, ULONG FromPin, PUNICODE_STRING ToString, ULONG ToPin);NTSTATUS ( *UnregisterPhysicalConnectionFromExternal)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PUNICODE_STRING FromString, ULONG FromPin, PUNKNOWN ToUnknown, ULONG ToPin);};
typedef NTSTATUS  USB_BUSIFFN_CREATE_USB_DEVICE_V7(PVOID BusContext, PUSB_DEVICE_HANDLE *NewDeviceHandle, PUSB_DEVICE_HANDLE HsHubDeviceHandle, USHORT PortStatus, PUSB_PORT_PATH PortPath, PUSB_CD_ERROR_INFORMATION CdErrorInfo, USHORT TtPortNumber, PDEVICE_OBJECT PdoDeviceObject, PUNICODE_STRING PhysicalDeviceObjectName);
struct _NDIS_MINIPORT_INIT_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;PNDIS_RESOURCE_LIST AllocatedResources;NDIS_HANDLE IMDeviceInstanceContext;NDIS_HANDLE MiniportAddDeviceContext;NET_IFINDEX IfIndex;NET_LUID NetLuid;PNDIS_PORT_AUTHENTICATION_PARAMETERS DefaultPortAuthStates;PNDIS_PCI_DEVICE_CUSTOM_PROPERTIES PciDeviceCustomProperties;};
struct _NDIS_SHARED_MEMORY_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_HANDLE SharedMemoryHandle;NODE_REQUIREMENT PreferredNode;NDIS_SHARED_MEMORY_USAGE Usage;ULONG Length;PVOID VirtualAddress;ULONG SGListBufferLength;PSCATTER_GATHER_LIST SGListBuffer;};
typedef NTSTATUS ( *PFLT_NORMALIZE_NAME_COMPONENT)(PFLT_INSTANCE Instance, PCUNICODE_STRING ParentDirectory, USHORT VolumeNameLength, PCUNICODE_STRING Component, PFILE_NAMES_INFORMATION ExpandComponentName, ULONG ExpandComponentNameLength, FLT_NORMALIZE_NAME_FLAGS Flags, PVOID *NormalizationContext);
struct _PCI_EXPRESS_SRIOV_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;PCI_EXPRESS_SRIOV_CAPS SRIOVCapabilities;PCI_EXPRESS_SRIOV_CONTROL SRIOVControl;PCI_EXPRESS_SRIOV_STATUS SRIOVStatus;USHORT InitialVFs;USHORT TotalVFs;USHORT NumVFs;UCHAR FunctionDependencyLink;UCHAR RsvdP1;USHORT FirstVFOffset;USHORT VFStride;USHORT RsvdP2;USHORT VFDeviceId;ULONG SupportedPageSizes;ULONG SystemPageSize;ULONG BaseAddresses[6];PCI_EXPRESS_SRIOV_MIGRATION_STATE_ARRAY VFMigrationStateArrayOffset;};
struct _USB_BUS_INTERFACE_USBDI_V0 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_GETUSBDI_VERSION GetUSBDIVersion;PUSB_BUSIFFN_QUERY_BUS_TIME QueryBusTime;PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB SubmitIsoOutUrb;PUSB_BUSIFFN_QUERY_BUS_INFORMATION QueryBusInformation;};
struct _VIDEO_PORT_I2C_INTERFACE_2 {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PI2C_START_2 I2CStart;PI2C_STOP_2 I2CStop;PI2C_WRITE_2 I2CWrite;PI2C_READ_2 I2CRead;};
typedef NTSTATUS (*NDK_FN_CREATE_QP_WITH_SRQ)(NDK_PD *pNdkPd, NDK_CQ *pReceiveCq, NDK_CQ *pInitiatorCq, NDK_SRQ *pSrq, PVOID QPContext, ULONG InitiatorQueueDepth, ULONG MaxInitiatorRequestSge, ULONG InlineDataSize, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_QP **ppNdkQp);
typedef NTSTATUS (*PCAM_CONFIGURE_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PUSBD_INTERFACE_INFORMATION Interface, PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor, ULONG PipeConfigListSize, PUSBCAMD_Pipe_Config_Descriptor PipeConfig, PUSB_DEVICE_DESCRIPTOR DeviceDescriptor);
struct _FLT_CONTEXT_REGISTRATION {FLT_CONTEXT_TYPE ContextType;FLT_CONTEXT_REGISTRATION_FLAGS Flags;PFLT_CONTEXT_CLEANUP_CALLBACK ContextCleanupCallback;SIZE_T Size;ULONG PoolTag;PFLT_CONTEXT_ALLOCATE_CALLBACK ContextAllocateCallback;PFLT_CONTEXT_FREE_CALLBACK ContextFreeCallback;PVOID Reserved1;};
struct _TOKEN_ACCESS_INFORMATION {PSID_AND_ATTRIBUTES_HASH SidHash;PSID_AND_ATTRIBUTES_HASH RestrictedSidHash;PTOKEN_PRIVILEGES Privileges;LUID AuthenticationId;TOKEN_TYPE TokenType;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;TOKEN_MANDATORY_POLICY MandatoryPolicy;ULONG Flags;ULONG AppContainerNumber;PSID PackageSid;PSID_AND_ATTRIBUTES_HASH CapabilitiesHash;};
struct _VIDEO_PORT_I2C_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PI2C_START I2CStart;PI2C_STOP I2CStop;PI2C_WRITE I2CWrite;PI2C_READ I2CRead;};
struct IMiniportMidiStreamVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *SetFormat)(INTERFACE *This, PKSDATAFORMAT DataFormat);NTSTATUS ( *SetState)(INTERFACE *This, KSSTATE State);NTSTATUS ( *Read)(INTERFACE *This, PVOID BufferAddress, ULONG BufferLength, PULONG BytesRead);NTSTATUS ( *Write)(INTERFACE *This, PVOID BufferAddress, ULONG BytesToWrite, PULONG BytesWritten);};
struct _MINIPORT_DUMP_POINTERS {USHORT Version;USHORT Size;WCHAR DriverName[15];struct _ADAPTER_OBJECT *AdapterObject;PVOID MappedRegisterBase;ULONG CommonBufferSize;PVOID MiniportPrivateDumpData;ULONG SystemIoBusNumber;INTERFACE_TYPE AdapterInterfaceType;ULONG MaximumTransferLength;ULONG NumberOfPhysicalBreaks;ULONG AlignmentMask;ULONG NumberOfAccessRanges;ACCESS_RANGE (*AccessRanges)[];UCHAR NumberOfBuses;BOOLEAN Master;BOOLEAN MapBuffers;UCHAR MaximumNumberOfTargets;};
typedef NTSTATUS ( *PFN_WSK_GET_NAME_INFO)(PWSK_CLIENT Client, PSOCKADDR SockAddr, ULONG SockAddrLength, PUNICODE_STRING NodeName, PUNICODE_STRING ServiceName, ULONG Flags, PEPROCESS OwningProcess, PETHREAD OwningThread, PIRP Irp);
struct _OFFLOAD_IPSEC_ADD_SA {IPAddr SrcAddr;IPMask SrcMask;IPAddr DestAddr;IPMask DestMask;ULONG Protocol;USHORT SrcPort;USHORT DestPort;IPAddr SrcTunnelAddr;IPAddr DestTunnelAddr;USHORT Flags;SHORT NumSAs;OFFLOAD_SECURITY_ASSOCIATION SecAssoc[3];HANDLE OffloadHandle;ULONG KeyLen;UCHAR KeyMat[1];};
struct _WHEA_ERROR_PACKET_V2 {ULONG Signature;ULONG Version;ULONG Length;WHEA_ERROR_PACKET_FLAGS Flags;WHEA_ERROR_TYPE ErrorType;WHEA_ERROR_SEVERITY ErrorSeverity;ULONG ErrorSourceId;WHEA_ERROR_SOURCE_TYPE ErrorSourceType;GUID NotifyType;ULONGLONG Context;WHEA_ERROR_PACKET_DATA_FORMAT DataFormat;ULONG Reserved1;ULONG DataOffset;ULONG DataLength;ULONG PshedDataOffset;ULONG PshedDataLength;};
typedef NTSTATUS (*PALLOCATE_DMA_BUFFER)(PVOID context, HANDLE Handle, SIZE_T RequestedBufferSize, PMDL *BufferMdl, PSIZE_T AllocatedBufferSize, PUCHAR StreamId, PULONG FifoSize);
typedef NTSTATUS ( *PFN_WSK_RECEIVE_FROM)(PWSK_SOCKET Socket, PWSK_BUF Buffer, ULONG Flags, PSOCKADDR RemoteAddress, PULONG ControlLength, PCMSGHDR ControlInfo, PULONG ControlFlags, PIRP Irp);
struct _KSFILTER_DESCRIPTOR { KSFILTER_DISPATCH *Dispatch; KSAUTOMATION_TABLE *AutomationTable;ULONG Version;ULONG Flags; GUID *ReferenceGuid;ULONG PinDescriptorsCount;ULONG PinDescriptorSize; KSPIN_DESCRIPTOR_EX *PinDescriptors;ULONG CategoriesCount; GUID *Categories;ULONG NodeDescriptorsCount;ULONG NodeDescriptorSize; KSNODE_DESCRIPTOR *NodeDescriptors;ULONG ConnectionsCount; KSTOPOLOGY_CONNECTION *Connections; KSCOMPONENTID *ComponentId;};
struct _DOT11_SEND_CONTEXT {NDIS_OBJECT_HEADER Header;PVOID pvReserved;ULONG uFlags;ULONG uPSLifetime;ULONG uDelayedSleepValue;UCHAR ucTXDataRates[8];BOOLEAN bIndicateAssociatedACKs;BOOLEAN bIndicateTXStatus;UCHAR ucPriority;BOOLEAN bDontFragment;ULONG dwExtendedStatus;HANDLE hIntegrityOffload;HANDLE hWEPOffload;UCHAR ucWPAMSDUPriority;UCHAR ucNumOfRWsOnPeer;USHORT usAID;PDOT11_PER_MSDU_COUNTERS pDot11PerMSDUCounters;};
struct IInterruptSyncVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *CallSynchronizedRoutine)(INTERFACE *This, PINTERRUPTSYNCROUTINE Routine, PVOID DynamicContext);PKINTERRUPT ( *GetKInterrupt)(INTERFACE *This);NTSTATUS ( *Connect)(INTERFACE *This);void ( *Disconnect)(INTERFACE *This);NTSTATUS ( *RegisterServiceRoutine)(INTERFACE *This, PINTERRUPTSYNCROUTINE Routine, PVOID DynamicContext, BOOLEAN First);};
struct _KSDEVICE_DISPATCH {PFNKSDEVICECREATE Add;PFNKSDEVICEPNPSTART Start;PFNKSDEVICE PostStart;PFNKSDEVICEIRP QueryStop;PFNKSDEVICEIRPVOID CancelStop;PFNKSDEVICEIRPVOID Stop;PFNKSDEVICEIRP QueryRemove;PFNKSDEVICEIRPVOID CancelRemove;PFNKSDEVICEIRPVOID Remove;PFNKSDEVICEQUERYCAPABILITIES QueryCapabilities;PFNKSDEVICEIRPVOID SurpriseRemoval;PFNKSDEVICEQUERYPOWER QueryPower;PFNKSDEVICESETPOWER SetPower;PFNKSDEVICEIRP QueryInterface;};
struct IResourceListVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);ULONG ( *NumberOfEntries)(INTERFACE *This);ULONG ( *NumberOfEntriesOfType)(INTERFACE *This, CM_RESOURCE_TYPE Type);PCM_PARTIAL_RESOURCE_DESCRIPTOR ( *FindTranslatedEntry)(INTERFACE *This, CM_RESOURCE_TYPE Type, ULONG Index);PCM_PARTIAL_RESOURCE_DESCRIPTOR ( *FindUntranslatedEntry)(INTERFACE *This, CM_RESOURCE_TYPE Type, ULONG Index);NTSTATUS ( *AddEntry)(INTERFACE *This, PCM_PARTIAL_RESOURCE_DESCRIPTOR Translated, PCM_PARTIAL_RESOURCE_DESCRIPTOR Untranslated);NTSTATUS ( *AddEntryFromParent)(INTERFACE *This, struct IResourceList *Parent, CM_RESOURCE_TYPE Type, ULONG Index);PCM_RESOURCE_LIST ( *TranslatedList)(INTERFACE *This);PCM_RESOURCE_LIST ( *UntranslatedList)(INTERFACE *This);};
typedef NTSTATUS (*NDK_FN_CREATE_SRQ)(NDK_PD *pNdkPd, ULONG SrqDepth, ULONG MaxReceiveRequestSge, ULONG NotifyThreshold, NDK_FN_SRQ_NOTIFICATION_CALLBACK SrqNotification, PVOID SrqNotificationContext, GROUP_AFFINITY *Affinity, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_SRQ **ppNdkSrq);
struct _DEVOBJ_EXTENSION {CSHORT Type;USHORT Size;PDEVICE_OBJECT DeviceObject;ULONG PowerFlags;struct _DEVICE_OBJECT_POWER_EXTENSION *Dope;ULONG ExtensionFlags;PVOID DeviceNode;PDEVICE_OBJECT AttachedTo;LONG StartIoKey;ULONG StartIoFlags;PVPB Vpb;LIST_ENTRY DependentList;LIST_ENTRY ProviderList;};
struct _DXGK_DEVICE_INFO {PVOID MiniportDeviceContext;PDEVICE_OBJECT PhysicalDeviceObject;UNICODE_STRING DeviceRegistryPath;PCM_RESOURCE_LIST TranslatedResourceList;LARGE_INTEGER SystemMemorySize;PHYSICAL_ADDRESS HighestPhysicalAddress;PHYSICAL_ADDRESS AgpApertureBase;SIZE_T AgpApertureSize;DOCKING_STATE DockingState;};
typedef NTSTATUS (*NDK_FN_BUILD_LAM)(NDK_ADAPTER *pNdkAdapter, MDL *Mdl, SIZE_T Length, NDK_FN_REQUEST_COMPLETION RequestCompletion, PVOID RequestContext, NDK_LOGICAL_ADDRESS_MAPPING *pNdkLAM, ULONG *pLAMSize, ULONG *pFBO);
typedef NTSTATUS (*NDK_FN_CREATE_CQ)(NDK_ADAPTER *pNdkAdapter, ULONG CqDepth, NDK_FN_CQ_NOTIFICATION_CALLBACK CqNotification, PVOID CqNotificationContext, GROUP_AFFINITY *Affinity, NDK_FN_CREATE_COMPLETION CreateCompletion, PVOID RequestContext, NDK_CQ **ppNdkCq);
struct _CLASS_INIT_DATA {ULONG InitializationDataSize;CLASS_DEV_INFO FdoData;CLASS_DEV_INFO PdoData;PCLASS_ADD_DEVICE ClassAddDevice;PCLASS_ENUM_DEVICE ClassEnumerateDevice;PCLASS_QUERY_ID ClassQueryId;PDRIVER_STARTIO ClassStartIo;PCLASS_UNLOAD ClassUnload;PCLASS_TICK ClassTick;};
struct _MRX_V_NET_ROOT_ {_MRX_NORMAL_NODE_HEADER __anonymous0;PMRX_NET_ROOT pNetRoot;PVOID Context;PVOID Context2;ULONG Flags;ULONG NumberOfOpens;ULONG NumberOfFobxs;LUID LogonId;PUNICODE_STRING pUserDomainName;PUNICODE_STRING pUserName;PUNICODE_STRING pPassword;ULONG SessionId;NTSTATUS ConstructionStatus;BOOLEAN IsExplicitConnection;};
struct _NDK_PD_DISPATCH {NDK_FN_CLOSE_OBJECT NdkClosePd;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_CREATE_MR NdkCreateMr;NDK_FN_CREATE_MW NdkCreateMw;NDK_FN_CREATE_SRQ NdkCreateSrq;NDK_FN_CREATE_QP NdkCreateQp;NDK_FN_CREATE_QP_WITH_SRQ NdkCreateQpWithSrq;NDK_FN_GET_PRIVILEGED_MEMORY_REGION_TOKEN NdkGetPrivilegedMemoryRegionToken;};
struct IDmaChannelVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *AllocateBuffer)(INTERFACE *This, ULONG BufferSize, PPHYSICAL_ADDRESS PhysicalAddressConstraint);void ( *FreeBuffer)(INTERFACE *This);ULONG ( *TransferCount)(INTERFACE *This);ULONG ( *MaximumBufferSize)(INTERFACE *This);ULONG ( *AllocatedBufferSize)(INTERFACE *This);ULONG ( *BufferSize)(INTERFACE *This);void ( *SetBufferSize)(INTERFACE *This, ULONG BufferSize);PVOID ( *SystemAddress)(INTERFACE *This);PHYSICAL_ADDRESS ( *PhysicalAddress)(INTERFACE *This);PADAPTER_OBJECT ( *GetAdapterObject)(INTERFACE *This);void ( *CopyTo)(INTERFACE *This, PVOID Destination, PVOID Source, ULONG ByteCount);void ( *CopyFrom)(INTERFACE *This, PVOID Destination, PVOID Source, ULONG ByteCount);};
struct IPortEventsVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *AddEventToEventList)(INTERFACE *This, PKSEVENT_ENTRY EventEntry);void ( *GenerateEventList)(INTERFACE *This, GUID *Set, ULONG EventId, BOOL PinEvent, ULONG PinId, BOOL NodeEvent, ULONG NodeId);};
struct _CLASS_WMI_INFO {ULONG GuidCount;PGUIDREGINFO GuidRegInfo;PCLASS_QUERY_WMI_REGINFO ClassQueryWmiRegInfo;PCLASS_QUERY_WMI_DATABLOCK ClassQueryWmiDataBlock;PCLASS_SET_WMI_DATABLOCK ClassSetWmiDataBlock;PCLASS_SET_WMI_DATAITEM ClassSetWmiDataItem;PCLASS_EXECUTE_WMI_METHOD ClassExecuteWmiMethod;PCLASS_WMI_FUNCTION_CONTROL ClassWmiFunctionControl;};
struct _KSEVENT_ENTRY {LIST_ENTRY ListEntry;PVOID Object;_KSEVENT_ENTRY___B26956EB948B1BB74D1F370DF846EB48 __anonymous0;PKSEVENTDATA EventData;ULONG NotificationType; KSEVENT_SET *EventSet; KSEVENT_ITEM *EventItem;PFILE_OBJECT FileObject;ULONG SemaphoreAdjustment;ULONG Reserved;ULONG Flags;};
struct _Q2931_ADD_PVC {ATM_ADDRESS CalledParty;ATM_ADDRESS CallingParty;ATM_VPIVCI ConnectionId;ATM_AAL_TYPE AALType;ATM_FLOW_PARAMETERS ForwardFP;ATM_FLOW_PARAMETERS BackwardFP;ULONG Flags;ATM_PVC_SAP LocalSap;ATM_PVC_SAP DestinationSap;BOOLEAN LIJIdPresent;ATM_LIJ_CALLID_IE LIJId;};
struct _SE_AUDIT_INFO {ULONG Size;AUDIT_EVENT_TYPE AuditType;SE_AUDIT_OPERATION AuditOperation;ULONG AuditFlags;UNICODE_STRING SubsystemName;UNICODE_STRING ObjectTypeName;UNICODE_STRING ObjectName;PVOID HandleId;GUID *TransactionId;LUID *OperationId;BOOLEAN ObjectCreation;BOOLEAN GenerateOnClose;};
struct IMiniportVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS ( *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);};
union _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339 {struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___BEBA4CAF75BBFCFE7350B961AFBB95A3 MaximumSize;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___BEBA4CAF75BBFCFE7350B961AFBB95A3 MinimumSize;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___12FA867A59BECB21C674460992AF9488 NewContainerSize;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___90296A97FAF2F188598986BCC8190F40 GrowthRate;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___68DE96DE104288B6A6B76CEFD20DF3DC LogTail;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___1D6CDA7D5D0A584FC0764C46539EFAE1 AutoShrink;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___88177A16B25AE2D7461AD53DB2DFFB78 AutoGrow;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___20347F80BDDE7CED824A1C3E12EB14E6 NewContainerPrefix;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___A77EFFD190B68F1C6D758123EB9F07C2 NewContainerSuffix;struct _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339___A35BCFC4393A820CBA8699E45B0DC901 NewContainerExtension;};
struct _DOT11_SEND_GO_NEGOTIATION_CONFIRMATION_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;PVOID ResponseContext;ULONG uSendTimeout;DOT11_WFD_STATUS_CODE Status;DOT11_WFD_GROUP_CAPABILITY GroupCapability;DOT11_WFD_GROUP_ID GroupID;BOOLEAN bUseGroupID;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_SEND_INVITATION_RESPONSE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS ReceiverDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;PVOID RequestContext;ULONG uSendTimeout;DOT11_WFD_STATUS_CODE Status;DOT11_WFD_CONFIGURATION_TIMEOUT MinimumConfigTimeout;DOT11_MAC_ADDRESS GroupBSSID;BOOLEAN bUseGroupBSSID;DOT11_WFD_CHANNEL OperatingChannel;BOOLEAN bUseSpecifiedOperatingChannel;ULONG uIEsOffset;ULONG uIEsLength;};
struct _DOT11_SEND_INVITATION_REQUEST_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_DIALOG_TOKEN DialogToken;DOT11_MAC_ADDRESS PeerDeviceAddress;ULONG uSendTimeout;DOT11_WFD_CONFIGURATION_TIMEOUT MinimumConfigTimeout;DOT11_WFD_INVITATION_FLAGS InvitationFlags;DOT11_MAC_ADDRESS GroupBSSID;BOOLEAN bUseGroupBSSID;DOT11_WFD_CHANNEL OperatingChannel;BOOLEAN bUseSpecifiedOperatingChannel;DOT11_WFD_GROUP_ID GroupID;BOOLEAN bLocalGO;ULONG uIEsOffset;ULONG uIEsLength;};
struct DOT11_ASSOCIATION_COMPLETION_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS MacAddr;DOT11_ASSOC_STATUS uStatus;BOOLEAN bReAssocReq;BOOLEAN bReAssocResp;ULONG uAssocReqOffset;ULONG uAssocReqSize;ULONG uAssocRespOffset;ULONG uAssocRespSize;ULONG uBeaconOffset;ULONG uBeaconSize;ULONG uIHVDataOffset;ULONG uIHVDataSize;DOT11_AUTH_ALGORITHM AuthAlgo;DOT11_CIPHER_ALGORITHM UnicastCipher;DOT11_CIPHER_ALGORITHM MulticastCipher;ULONG uActivePhyListOffset;ULONG uActivePhyListSize;BOOLEAN bFourAddressSupported;BOOLEAN bPortAuthorized;UCHAR ucActiveQoSProtocol;DOT11_DS_INFO DSInfo;ULONG uEncapTableOffset;ULONG uEncapTableSize;DOT11_CIPHER_ALGORITHM MulticastMgmtCipher;ULONG uAssocComebackTime;};
typedef NTSTATUS (*PALLOCATE_DMA_BUFFER_WITH_NOTIFICATION)(PVOID context, HANDLE Handle, ULONG NotificationCount, SIZE_T RequestedBufferSize, PMDL *BufferMdl, PSIZE_T AllocatedBufferSize, PSIZE_T OffsetFromFirstPage, PUCHAR StreamId, PULONG FifoSize);
struct _CHANNEL_CONFIG_PARAMETERS_ENHANCED {ULONG Flags;CO_MTU Mtu;CO_FLUSHTO FlushTO;ULONG NumExtraOptions;PL2CAP_CONFIG_OPTION ExtraOptions;L2CAP_FLOWSPEC Flow;L2CAP_RETRANSMISSION_AND_FLOW_CONTROL RetransmissionAndFlow;CO_FCS Fcs;L2CAP_EXTENDED_FLOW_SPEC ExtendedFlowSpec;CO_EXTENDED_WINDOW_SIZE ExtendedWindowSize;};
struct _7DA6CEE7E211DED2F61B14AB99948ADC {KSPROPERTY Property;PVOID Context;PFNDRMADDCONTENTHANDLERS DrmAddContentHandlers;PFNDRMCREATECONTENTMIXED DrmCreateContentMixed;PFNDRMDESTROYCONTENT DrmDestroyContent;PFNDRMFORWARDCONTENTTODEVICEOBJECT DrmForwardContentToDeviceObject;PFNDRMFORWARDCONTENTTOFILEOBJECT DrmForwardContentToFileObject;PFNDRMFORWARDCONTENTTOINTERFACE DrmForwardContentToInterface;PFNDRMGETCONTENTRIGHTS DrmGetContentRights;};
typedef NTSTATUS ( *PFLT_NORMALIZE_NAME_COMPONENT_EX)(PFLT_INSTANCE Instance, PFILE_OBJECT FileObject, PCUNICODE_STRING ParentDirectory, USHORT VolumeNameLength, PCUNICODE_STRING Component, PFILE_NAMES_INFORMATION ExpandComponentName, ULONG ExpandComponentNameLength, FLT_NORMALIZE_NAME_FLAGS Flags, PVOID *NormalizationContext);
struct _PORT_CONFIGURATION_INFORMATION {ULONG SizeOfThisPacket;PVOID HwDeviceExtension;PDEVICE_OBJECT ClassDeviceObject;PDEVICE_OBJECT PhysicalDeviceObject;ULONG SystemIoBusNumber;INTERFACE_TYPE AdapterInterfaceType;ULONG BusInterruptLevel;ULONG BusInterruptVector;KINTERRUPT_MODE InterruptMode;ULONG DmaChannel;ULONG NumberOfAccessRanges;PACCESS_RANGE AccessRanges;ULONG StreamDescriptorSize;PIRP Irp;PKINTERRUPT InterruptObject;PADAPTER_OBJECT DmaAdapterObject;PDEVICE_OBJECT RealPhysicalDeviceObject;ULONG Reserved[1];};
struct _RXCE_CONNECTION_EVENT_HANDLER_ {PRXCE_IND_DISCONNECT RxCeDisconnectEventHandler;PRXCE_IND_CONNECTION_ERROR RxCeErrorEventHandler;PRXCE_IND_RECEIVE RxCeReceiveEventHandler;PRXCE_IND_RECEIVE_DATAGRAM RxCeReceiveDatagramEventHandler;PRXCE_IND_RECEIVE_EXPEDITED RxCeReceiveExpeditedEventHandler;PRXCE_IND_SEND_POSSIBLE RxCeSendPossibleEventHandler;PRXCE_IND_DATA_READY RxCeDataReadyEventHandler;PRXCE_IND_CONNECTION_SEND_COMPLETE RxCeSendCompleteEventHandler;PRXCE_IND_CONNECTION_SEND_SUBMITTED RxCeSendSubmittedEventHandler;};
struct _WHEA_PCIEXPRESS_ERROR_SECTION {WHEA_PCIEXPRESS_ERROR_SECTION_VALIDBITS ValidBits;WHEA_PCIEXPRESS_DEVICE_TYPE PortType;WHEA_PCIEXPRESS_VERSION Version;WHEA_PCIEXPRESS_COMMAND_STATUS CommandStatus;ULONG Reserved;WHEA_PCIEXPRESS_DEVICE_ID DeviceId;ULONGLONG DeviceSerialNumber;WHEA_PCIEXPRESS_BRIDGE_CONTROL_STATUS BridgeControlStatus;UCHAR ExpressCapability[60];UCHAR AerInfo[96];};
struct IMiniportWaveCyclicStreamVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *SetFormat)(INTERFACE *This, PKSDATAFORMAT DataFormat);ULONG ( *SetNotificationFreq)(INTERFACE *This, ULONG Interval, PULONG FrameSize);NTSTATUS ( *SetState)(INTERFACE *This, KSSTATE State);NTSTATUS ( *GetPosition)(INTERFACE *This, PULONG Position);NTSTATUS ( *NormalizePhysicalPosition)(INTERFACE *This, PLONGLONG PhysicalPosition);void ( *Silence)(INTERFACE *This, PVOID Buffer, ULONG ByteCount);};
struct IAdapterPowerManagement2Vtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *PowerChangeState)(INTERFACE *This, POWER_STATE NewState);NTSTATUS ( *QueryPowerChangeState)(INTERFACE *This, POWER_STATE NewStateQuery);NTSTATUS ( *QueryDeviceCapabilities)(INTERFACE *This, PDEVICE_CAPABILITIES PowerDeviceCaps);void ( *PowerChangeState2)(INTERFACE *This, DEVICE_POWER_STATE NewDeviceState, SYSTEM_POWER_STATE NewSystemState);};
struct _DXGK_DEBUG_REPORT_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;DXGK_DEBUG_REPORT_HANDLE (*DbgReportCreate)(HANDLE DeviceHandle, ULONG ulCode, ULONG_PTR ulpArg1, ULONG_PTR ulpArg2, ULONG_PTR ulpArg3, ULONG_PTR ulpArg4);BOOLEAN (*DbgReportSecondaryData)(DXGK_DEBUG_REPORT_HANDLE hReport, PVOID pvData, ULONG ulDataSize);void (*DbgReportComplete)(DXGK_DEBUG_REPORT_HANDLE hReport);};
struct _OFFLOAD_IPSEC_ADD_UDPESP_SA {IPAddr SrcAddr;IPMask SrcMask;IPAddr DstAddr;IPMask DstMask;ULONG Protocol;USHORT SrcPort;USHORT DstPort;IPAddr SrcTunnelAddr;IPAddr DstTunnelAddr;USHORT Flags;SHORT NumSAs;OFFLOAD_SECURITY_ASSOCIATION SecAssoc[3];HANDLE OffloadHandle;OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY EncapTypeEntry;HANDLE EncapTypeEntryOffldHandle;ULONG KeyLen;UCHAR KeyMat[1];};
typedef BOOLEAN (*PCLASS_INTERPRET_SENSE_INFO)(PDEVICE_OBJECT Fdo, PIRP OriginalRequest, PSCSI_REQUEST_BLOCK Srb, UCHAR MajorFunctionCode, ULONG IoDeviceCode, ULONG PreviousRetryCount, SRB_HISTORY *RequestHistory, NTSTATUS *Status, LONGLONG *RetryIn100nsUnits);
struct _USB_BUS_INTERFACE_USBDI_V1 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_GETUSBDI_VERSION GetUSBDIVersion;PUSB_BUSIFFN_QUERY_BUS_TIME QueryBusTime;PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB SubmitIsoOutUrb;PUSB_BUSIFFN_QUERY_BUS_INFORMATION QueryBusInformation;PUSB_BUSIFFN_IS_DEVICE_HIGH_SPEED IsDeviceHighSpeed;};
struct _VIDEO_PORT_INT10_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PINT10_ALLOCATE_BUFFER Int10AllocateBuffer;PINT10_FREE_BUFFER Int10FreeBuffer;PINT10_READ_MEMORY Int10ReadMemory;PINT10_WRITE_MEMORY Int10WriteMemory;PINT10_CALL_BIOS Int10CallBios;};
struct _DOT11_SEND_EXTENSION_INFO {ULONG uVersion;NDIS_OBJECT_HEADER Header;PVOID pvReserved;ULONG uFlags;ULONG uPSLifetime;ULONG uDelayedSleepValue;UCHAR ucTXDataRates[8];BOOLEAN bIndicateAssociatedACKs;BOOLEAN bIndicateTXStatus;UCHAR ucPriority;BOOLEAN bDontFragment;ULONG dwExtendedStatus;HANDLE hIntegrityOffload;HANDLE hWEPOffload;UCHAR ucWPAMSDUPriority;UCHAR ucNumOfRWsOnPeer;USHORT usAID;PDOT11_PER_MSDU_COUNTERS pDot11PerMSDUCounters;USHORT usNumberOfFragments;DOT11_FRAGMENT_DESCRIPTOR Dot11FragmentDescriptors[1];};
struct _MRX_SRVCALLDOWN_STRUCTURE {KEVENT FinishEvent;LIST_ENTRY SrvCalldownList;PRX_CONTEXT RxContext;PMRX_SRV_CALL SrvCall;PMRX_SRVCALL_CALLBACK CallBack;BOOLEAN CalldownCancelled;ULONG NumberRemaining;ULONG NumberToWait;ULONG BestFinisherOrdinal;PRDBSS_DEVICE_OBJECT BestFinisher;MRX_SRVCALL_CALLBACK_CONTEXT CallbackContexts[1];};
struct _NDIS_PORT_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;NDIS_PORT_NUMBER PortNumber;ULONG Flags;NDIS_PORT_TYPE Type;NDIS_MEDIA_CONNECT_STATE MediaConnectState;ULONG64 XmitLinkSpeed;ULONG64 RcvLinkSpeed;NET_IF_DIRECTION_TYPE Direction;NDIS_PORT_CONTROL_STATE SendControlState;NDIS_PORT_CONTROL_STATE RcvControlState;NDIS_PORT_AUTHORIZATION_STATE SendAuthorizationState;NDIS_PORT_AUTHORIZATION_STATE RcvAuthorizationState;};
typedef NTSTATUS ( *PFN_NT_CREATE_TRANSACTION)(PHANDLE TransactionHandle, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, LPGUID Uow, HANDLE TmHandle, ULONG CreateOptions, ULONG IsolationLevel, ULONG IsolationFlags, PLARGE_INTEGER Timeout, PUNICODE_STRING Description);
struct _BRB_SCO_GET_CHANNEL_INFO {BRB_HEADER Hdr;BTH_ADDR BtAddress;SCO_CHANNEL_HANDLE ChannelHandle;ULONG InfoFlags;ULONG TransmitBandwidth;ULONG ReceiveBandwidth;USHORT MaxLatency;USHORT PacketType;USHORT ContentFormat;USHORT Reserved;SCO_RETRANSMISSION_EFFORT RetransmissionEffort;ULONG ChannelFlags;CONNECTION_HANDLE HciConnectionHandle;SCO_LINK_TYPE LinkType;BASEBAND_CHANNEL_INFO BasebandInfo;};
typedef NTSTATUS ( *PFN_WSK_GET_ADDRESS_INFO)(PWSK_CLIENT Client, PUNICODE_STRING NodeName, PUNICODE_STRING ServiceName, ULONG NameSpace, GUID *Provider, PADDRINFOEXW Hints, PADDRINFOEXW *Result, PEPROCESS OwningProcess, PETHREAD OwningThread, PIRP Irp);
struct _VIDEO_PORT_AGP_SERVICES {PAGP_RESERVE_PHYSICAL AgpReservePhysical;PAGP_RELEASE_PHYSICAL AgpReleasePhysical;PAGP_COMMIT_PHYSICAL AgpCommitPhysical;PAGP_FREE_PHYSICAL AgpFreePhysical;PAGP_RESERVE_VIRTUAL AgpReserveVirtual;PAGP_RELEASE_VIRTUAL AgpReleaseVirtual;PAGP_COMMIT_VIRTUAL AgpCommitVirtual;PAGP_FREE_VIRTUAL AgpFreeVirtual;ULONGLONG AllocationLimit;};
struct _ISCSI_Persistent_Login {WCHAR TargetName[224];ULONGLONG SecurityFlags;ULONG InitiatorPortNumber;ULONG UsernameSize;BOOLEAN IsInformationalSession;USHORT UniqueIdForISID;ISCSI_TargetPortal TargetPortal;ISCSI_LoginOptions LoginOptions;ISCSI_TargetMapping TargetMapping;UCHAR Username[1];};
struct _HW_STREAM_INFORMATION {ULONG NumberOfPossibleInstances;KSPIN_DATAFLOW DataFlow;BOOLEAN DataAccessible;ULONG NumberOfFormatArrayEntries;PKSDATAFORMAT *StreamFormatsArray;PVOID ClassReserved[4];ULONG NumStreamPropArrayEntries;PKSPROPERTY_SET StreamPropertiesArray;ULONG NumStreamEventArrayEntries;PKSEVENT_SET StreamEventsArray;GUID *Category;GUID *Name;ULONG MediumsCount; KSPIN_MEDIUM *Mediums;BOOLEAN BridgeStream;ULONG Reserved[2];};
struct _IDE_CHANNEL_INTERFACE {USHORT Version;UCHAR ChannelNumber;UCHAR Reserved;ULONG ReservedUlong;IDE_HW_INITIALIZE IdeHwInitialize;IDE_HW_BUILDIO IdeHwBuildIo;IDE_HW_STARTIO IdeHwStartIo;IDE_HW_INTERRUPT IdeHwInterrupt;IDE_HW_RESET IdeHwReset;IDE_HW_CONTROL IdeHwControl;};
struct IPortWaveRTStreamVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);PMDL ( *AllocatePagesForMdl)(INTERFACE *This, PHYSICAL_ADDRESS HighAddress, SIZE_T TotalBytes);PMDL ( *AllocateContiguousPagesForMdl)(INTERFACE *This, PHYSICAL_ADDRESS LowAddress, PHYSICAL_ADDRESS HighAddress, SIZE_T TotalBytes);PVOID ( *MapAllocatedPages)(INTERFACE *This, PMDL MemoryDescriptorList, MEMORY_CACHING_TYPE CacheType);void ( *UnmapAllocatedPages)(INTERFACE *This, PVOID BaseAddress, PMDL MemoryDescriptorList);void ( *FreePagesFromMdl)(INTERFACE *This, PMDL MemoryDescriptorList);ULONG ( *GetPhysicalPagesCount)(INTERFACE *This, PMDL MemoryDescriptorList);PHYSICAL_ADDRESS ( *GetPhysicalPageAddress)(INTERFACE *This, PMDL MemoryDescriptorList, ULONG Index);};
struct _BRB_SCO_OPEN_CHANNEL {BRB_HEADER Hdr;BTH_ADDR BtAddress;ULONG TransmitBandwidth;ULONG ReceiveBandwidth;USHORT MaxLatency;USHORT PacketType;USHORT ContentFormat;USHORT Reserved;SCO_RETRANSMISSION_EFFORT RetransmissionEffort;ULONG ChannelFlags;ULONG CallbackFlags;PFNSCO_INDICATION_CALLBACK Callback;PVOID CallbackContext;PVOID ReferenceObject;SCO_CHANNEL_HANDLE ChannelHandle;UCHAR Response;};
struct _FILE_ALL_INFORMATION {FILE_BASIC_INFORMATION BasicInformation;FILE_STANDARD_INFORMATION StandardInformation;FILE_INTERNAL_INFORMATION InternalInformation;FILE_EA_INFORMATION EaInformation;FILE_ACCESS_INFORMATION AccessInformation;FILE_POSITION_INFORMATION PositionInformation;FILE_MODE_INFORMATION ModeInformation;FILE_ALIGNMENT_INFORMATION AlignmentInformation;FILE_NAME_INFORMATION NameInformation;};
struct _NDK_ADAPTER_DISPATCH {NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_QUERY_ADAPTER_INFO NdkQueryAdapterInfo;NDK_FN_CREATE_CQ NdkCreateCq;NDK_FN_CREATE_PD NdkCreatePd;NDK_FN_CREATE_SHARED_ENDPOINT NdkCreateSharedEndpoint;NDK_FN_CREATE_CONNECTOR NdkCreateConnector;NDK_FN_CREATE_LISTENER NdkCreateListener;NDK_FN_BUILD_LAM NdkBuildLAM;NDK_FN_RELEASE_LAM NdkReleaseLAM;};
struct _WHEA_ERROR_PACKET_V1 {ULONG Signature;WHEA_ERROR_PACKET_FLAGS Flags;ULONG Size;ULONG RawDataLength;ULONGLONG Reserved1;ULONGLONG Context;WHEA_ERROR_TYPE ErrorType;WHEA_ERROR_SEVERITY ErrorSeverity;ULONG ErrorSourceId;WHEA_ERROR_SOURCE_TYPE ErrorSourceType;ULONG Reserved2;ULONG Version;ULONGLONG Cpu;union _WHEA_ERROR_PACKET_V1___1E4CB6DF892A3CDE8BB341BD02892B91 u;WHEA_RAW_DATA_FORMAT RawDataFormat;ULONG RawDataOffset;UCHAR RawData[1];};
struct DOT11_PHY_ATTRIBUTES {NDIS_OBJECT_HEADER Header;DOT11_PHY_TYPE PhyType;BOOLEAN bHardwarePhyState;BOOLEAN bSoftwarePhyState;BOOLEAN bCFPollable;ULONG uMPDUMaxLength;DOT11_TEMP_TYPE TempType;DOT11_DIVERSITY_SUPPORT DiversitySupport;DOT11_PHY_ATTRIBUTES___211D85AF04401B4C3AAB02FAE3102543 __anonymous0;ULONG uNumberSupportedPowerLevels;ULONG TxPowerLevels[8];ULONG uNumDataRateMappingEntries;DOT11_DATA_RATE_MAPPING_ENTRY DataRateMappingEntries[126];DOT11_SUPPORTED_DATA_RATES_VALUE_V2 SupportedDataRatesValue;};
struct _ARBITER_LIST_ENTRY {LIST_ENTRY ListEntry;ULONG AlternativeCount;PIO_RESOURCE_DESCRIPTOR Alternatives;PDEVICE_OBJECT PhysicalDeviceObject;ARBITER_REQUEST_SOURCE RequestSource;ULONG Flags;LONG_PTR WorkSpace;INTERFACE_TYPE InterfaceType;ULONG SlotNumber;ULONG BusNumber;PCM_PARTIAL_RESOURCE_DESCRIPTOR Assignment;PIO_RESOURCE_DESCRIPTOR SelectedAlternative;ARBITER_RESULT Result;};
struct _DOT11_RECV_CONTEXT {NDIS_OBJECT_HEADER Header;PVOID pvReserved;DOT11_PHY_TYPE dot11PhyType;ULONG uChCenterFrequency;LONG lRSSI;ULONG uRSSI;UCHAR ucPriority;UCHAR ucDataRate;UCHAR ucPeerMacAddress[6];ULONG dwExtendedStatus;HANDLE hWEPOffloadContext;HANDLE hAuthOffloadContext;USHORT usWEPAppliedMask;USHORT usWPAMSDUPriority;DOT11_IV48_COUNTER dot11LowestIV48Counter;USHORT usDot11LeftRWBitMap;DOT11_IV48_COUNTER dot11HighestIV48Counter;USHORT usDot11RightRWBitMap;USHORT usNumberOfMPDUsReceived;};
struct _NDIS_WLAN_BSSID_EX {ULONG Length;NDIS_802_11_MAC_ADDRESS MacAddress;UCHAR Reserved[2];NDIS_802_11_SSID Ssid;ULONG Privacy;NDIS_802_11_RSSI Rssi;NDIS_802_11_NETWORK_TYPE NetworkTypeInUse;NDIS_802_11_CONFIGURATION Configuration;NDIS_802_11_NETWORK_INFRASTRUCTURE InfrastructureMode;NDIS_802_11_RATES_EX SupportedRates;ULONG IELength;UCHAR IEs[1];};
struct _LoginToTarget_IN {ULONG PortNumber;ISCSI_LoginOptions LoginOptions;ULONG SessionType;ULONGLONG SecurityFlags;ISCSI_TargetPortal TargetPortal;ULONG UsernameSize;ULONG PasswordSize;ULONG KeySize;USHORT UniqueIdForISID;BOOLEAN PersistentLogin;WCHAR InitiatorNode[224];WCHAR InitiatorAlias[256];WCHAR TargetName[224];ISCSI_TargetMapping Mappings;UCHAR Key[1];};
struct _NDIS_WLAN_BSSID {ULONG Length;NDIS_802_11_MAC_ADDRESS MacAddress;UCHAR Reserved[2];NDIS_802_11_SSID Ssid;ULONG Privacy;NDIS_802_11_RSSI Rssi;NDIS_802_11_NETWORK_TYPE NetworkTypeInUse;NDIS_802_11_CONFIGURATION Configuration;NDIS_802_11_NETWORK_INFRASTRUCTURE InfrastructureMode;NDIS_802_11_RATES SupportedRates;};
struct _QUERY_HOOK_INFO {NLB_HOOK_API_VERSION Version; WCHAR *pAdapter;IF_INDEX IFIndex;ADDRESS_FAMILY AddressFamily; UCHAR *ServerIPAddress;USHORT ServerPort; UCHAR *ClientIPAddress;USHORT ClientPort;USHORT Protocol;BOOLEAN bReceiveContext;ULONG Flags;void *Reserved;NLB_HOOK_IP_TUPLE NewTuple;};
struct _RX_PREFIX_ENTRY {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;USHORT CaseInsensitiveLength;USHORT Spare1;ULONG SavedHashValue;LIST_ENTRY HashLinks;LIST_ENTRY MemberQLinks;UNICODE_STRING Prefix;PULONG ContainerRefCount;PVOID ContainingRecord;PVOID Context;RX_CONNECTION_ID ConnectionId;};
struct DOT11_BSS_ENTRY {ULONG uPhyId;DOT11_BSS_ENTRY_PHY_SPECIFIC_INFO PhySpecificInfo;DOT11_MAC_ADDRESS dot11BSSID;DOT11_BSS_TYPE dot11BSSType;LONG lRSSI;ULONG uLinkQuality;BOOLEAN bInRegDomain;USHORT usBeaconPeriod;ULONGLONG ullTimestamp;ULONGLONG ullHostTimestamp;USHORT usCapabilityInformation;ULONG uBufferLength;UCHAR ucBuffer[1];};
struct _RX_WORK_QUEUE_ {USHORT State;BOOLEAN SpinUpRequestPending;UCHAR Type;KSPIN_LOCK SpinLock;PRX_WORK_QUEUE_RUNDOWN_CONTEXT pRundownContext;LONG NumberOfWorkItemsDispatched;LONG NumberOfWorkItemsToBeDispatched;LONG CumulativeQueueLength;LONG NumberOfSpinUpRequests;LONG MaximumNumberOfWorkerThreads;LONG MinimumNumberOfWorkerThreads;LONG NumberOfActiveWorkerThreads;LONG NumberOfIdleWorkerThreads;LONG NumberOfFailedSpinUpRequests;LONG WorkQueueItemForSpinUpWorkerThreadInUse;RX_WORK_QUEUE_ITEM WorkQueueItemForTearDownWorkQueue;RX_WORK_QUEUE_ITEM WorkQueueItemForSpinUpWorkerThread;RX_WORK_QUEUE_ITEM WorkQueueItemForSpinDownWorkerThread;KQUEUE Queue;PETHREAD *ThreadPointers;};
struct _ACCESS_STATE {LUID OperationID;BOOLEAN SecurityEvaluated;BOOLEAN GenerateAudit;BOOLEAN GenerateOnClose;BOOLEAN PrivilegesAllocated;ULONG Flags;ACCESS_MASK RemainingDesiredAccess;ACCESS_MASK PreviouslyGrantedAccess;ACCESS_MASK OriginalDesiredAccess;SECURITY_SUBJECT_CONTEXT SubjectSecurityContext;PSECURITY_DESCRIPTOR SecurityDescriptor;PVOID AuxData;union _ACCESS_STATE___18D81C5C1A882E7A2AF410C6CD9261CD Privileges;BOOLEAN AuditPrivileges;UNICODE_STRING ObjectName;UNICODE_STRING ObjectTypeName;};
struct _RX_FCB_TABLE {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;ULONG Version;BOOLEAN CaseInsensitiveMatch;USHORT NumberOfBuckets;LONG Lookups;LONG FailedLookups;LONG Compares;ERESOURCE TableLock;PRX_FCB_TABLE_ENTRY TableEntryForNull;LIST_ENTRY HashBuckets[32];};
struct IDrmPortVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *CreateContentMixed)(INTERFACE *This, PULONG paContentId, ULONG cContentId, PULONG pMixedContentId);NTSTATUS ( *DestroyContent)(INTERFACE *This, ULONG ContentId);NTSTATUS ( *ForwardContentToFileObject)(INTERFACE *This, ULONG ContentId, PFILE_OBJECT FileObject);NTSTATUS ( *ForwardContentToInterface)(INTERFACE *This, ULONG ContentId, PUNKNOWN pUnknown, ULONG NumMethods);NTSTATUS ( *GetContentRights)(INTERFACE *This, ULONG ContentId, PDRMRIGHTS DrmRights);};
struct _NAME_CACHE {union {struct {_MRX_NORMAL_NODE_HEADER __anonymous0;ULONG Context;PVOID ContextExtension;NTSTATUS PriorStatus;};_NAME_CACHE___7DD328E67B358AE0D444348E77BB2A06___B9369606FF1834C7F170102E1B88C818 __anonymous5;};LARGE_INTEGER ExpireTime;LIST_ENTRY Link;UNICODE_STRING Name;ULONG HashValue;BOOLEAN CaseInsensitive;};
struct _RDBSS_DATA {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;PDRIVER_OBJECT DriverObject;LONG NumberOfMinirdrsStarted;FAST_MUTEX MinirdrRegistrationMutex;LIST_ENTRY RegisteredMiniRdrs;LONG NumberOfMinirdrsRegistered;PEPROCESS OurProcess;CACHE_MANAGER_CALLBACKS CacheManagerCallbacks;ERESOURCE Resource;};
struct _MRX_FCB_ {FSRTL_ADVANCED_FCB_HEADER Header;PMRX_NET_ROOT pNetRoot;PVOID Context;PVOID Context2;ULONG NodeReferenceCount;ULONG FcbState;CLONG UncleanCount;CLONG UncachedUncleanCount;CLONG OpenCount;ULONG OutstandingLockOperationsCount;ULONGLONG ActualAllocationLength;ULONG Attributes;BOOLEAN IsFileWritten;BOOLEAN fShouldBeOrphaned;BOOLEAN fMiniInited;UCHAR CachedNetRootType;LIST_ENTRY SrvOpenList;ULONG SrvOpenListVersion;};
union _WHEA_ERROR_SOURCE_DESCRIPTOR___56ED19DD1B595419A3CAA61DD61D8112 {WHEA_XPF_MCE_DESCRIPTOR XpfMceDescriptor;WHEA_XPF_CMC_DESCRIPTOR XpfCmcDescriptor;WHEA_XPF_NMI_DESCRIPTOR XpfNmiDescriptor;WHEA_IPF_MCA_DESCRIPTOR IpfMcaDescriptor;WHEA_IPF_CMC_DESCRIPTOR IpfCmcDescriptor;WHEA_IPF_CPE_DESCRIPTOR IpfCpeDescriptor;WHEA_AER_ROOTPORT_DESCRIPTOR AerRootportDescriptor;WHEA_AER_ENDPOINT_DESCRIPTOR AerEndpointDescriptor;WHEA_AER_BRIDGE_DESCRIPTOR AerBridgeDescriptor;WHEA_GENERIC_ERROR_DESCRIPTOR GenErrDescriptor;};
union _AVC_MULTIFUNC_IRB___19B143002B6E29BFBBF92C7766CBAC0D {AVC_PIN_COUNT PinCount;AVC_PIN_DESCRIPTOR PinDescriptor;AVC_PRECONNECT_INFO PreConnectInfo;AVC_SETCONNECT_INFO SetConnectInfo;AVC_PIN_ID PinId;AVC_EXT_PLUG_COUNTS ExtPlugCounts;AVC_UNIQUE_ID UniqueID;AVC_PEER_DO_LOCATOR PeerLocator;AVC_PEER_DO_LIST PeerList;AVC_SUBUNIT_INFO_BLOCK Subunits;};
struct _SFF_PROTOCOL_INTERFACE_STANDARD {USHORT Size;USHORT Version;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PVOID Context;PSFFPROT_GET_PROPERTY GetProperty;PSFFPROT_SET_PROPERTY SetProperty;PSFFPROT_READ Read;PSFFPROT_WRITE Write;PSFFPROT_DEVICE_CONTROL DeviceControl;PSFFPROT_TRIM Trim;};
struct _DXGK_TIMED_OPERATION_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;NTSTATUS (*TimedOperationStart)(DXGK_TIMED_OPERATION *Op,  LARGE_INTEGER *Timeout, BOOLEAN OsHandled);NTSTATUS (*TimedOperationDelay)(DXGK_TIMED_OPERATION *Op, KPROCESSOR_MODE WaitMode, BOOLEAN Alertable,  LARGE_INTEGER *Interval);NTSTATUS (*TimedOperationWaitForSingleObject)(DXGK_TIMED_OPERATION *Op, PVOID Object, KWAIT_REASON WaitReason, KPROCESSOR_MODE WaitMode, BOOLEAN Alertable,  LARGE_INTEGER *Timeout);};
struct IAdapterPowerManagement3Vtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);void ( *PowerChangeState)(INTERFACE *This, POWER_STATE NewState);NTSTATUS ( *QueryPowerChangeState)(INTERFACE *This, POWER_STATE NewStateQuery);NTSTATUS ( *QueryDeviceCapabilities)(INTERFACE *This, PDEVICE_CAPABILITIES PowerDeviceCaps);void ( *PowerChangeState2)(INTERFACE *This, DEVICE_POWER_STATE NewDeviceState, SYSTEM_POWER_STATE NewSystemState);void ( *PowerChangeState3)(INTERFACE *This, DEVICE_POWER_STATE NewDeviceState, SYSTEM_POWER_STATE NewSystemState, PC_EXIT_LATENCY D3ExitLatency);NTSTATUS ( *D3ExitLatencyChanged)(INTERFACE *This, PC_EXIT_LATENCY NewD3ExitLatency);};
struct _D3DKMDT_VIDPN_PRESENT_PATH {D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId;D3DKMDT_VIDPN_PRESENT_PATH_IMPORTANCE ImportanceOrdinal;D3DKMDT_VIDPN_PRESENT_PATH_TRANSFORMATION ContentTransformation;D3DKMDT_2DOFFSET VisibleFromActiveTLOffset;D3DKMDT_2DOFFSET VisibleFromActiveBROffset;D3DKMDT_COLOR_BASIS VidPnTargetColorBasis;D3DKMDT_COLOR_COEFF_DYNAMIC_RANGES VidPnTargetColorCoeffDynamicRanges;D3DKMDT_VIDPN_PRESENT_PATH_CONTENT Content;D3DKMDT_VIDPN_PRESENT_PATH_COPYPROTECTION CopyProtection;D3DKMDT_GAMMA_RAMP GammaRamp;};
struct _USB_BUS_INTERFACE_USBDI_V2 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_GETUSBDI_VERSION GetUSBDIVersion;PUSB_BUSIFFN_QUERY_BUS_TIME QueryBusTime;PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB SubmitIsoOutUrb;PUSB_BUSIFFN_QUERY_BUS_INFORMATION QueryBusInformation;PUSB_BUSIFFN_IS_DEVICE_HIGH_SPEED IsDeviceHighSpeed;PUSB_BUSIFFN_ENUM_LOG_ENTRY EnumLogEntry;};
struct _D3DDDIARG_CREATERESOURCE {D3DDDIFORMAT Format;D3DDDI_POOL Pool;D3DDDIMULTISAMPLE_TYPE MultisampleType;UINT MultisampleQuality; D3DDDI_SURFACEINFO *pSurfList;UINT SurfCount;UINT MipLevels;UINT Fvf;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;D3DDDI_RATIONAL RefreshRate;HANDLE hResource;D3DDDI_RESOURCEFLAGS Flags;D3DDDI_ROTATION Rotation;};
struct _DOT11_PEER_INFO {DOT11_MAC_ADDRESS MacAddress;USHORT usCapabilityInformation;DOT11_AUTH_ALGORITHM AuthAlgo;DOT11_CIPHER_ALGORITHM UnicastCipherAlgo;DOT11_CIPHER_ALGORITHM MulticastCipherAlgo;BOOLEAN bWpsEnabled;USHORT usListenInterval;UCHAR ucSupportedRates[255];USHORT usAssociationID;DOT11_ASSOCIATION_STATE AssociationState;DOT11_POWER_MODE PowerMode;LARGE_INTEGER liAssociationUpTime;DOT11_PEER_STATISTICS Statistics;};
struct _RDBSS_SCAVENGER {RDBSS_SCAVENGER_STATE State;LONG MaximumNumberOfDormantFiles;LONG NumberOfDormantFiles;LARGE_INTEGER TimeLimit;ULONG SrvCallsToBeFinalized;ULONG NetRootsToBeFinalized;ULONG VNetRootsToBeFinalized;ULONG FcbsToBeFinalized;ULONG SrvOpensToBeFinalized;ULONG FobxsToBeFinalized;LIST_ENTRY SrvCallFinalizationList;LIST_ENTRY NetRootFinalizationList;LIST_ENTRY VNetRootFinalizationList;LIST_ENTRY FcbFinalizationList;LIST_ENTRY SrvOpenFinalizationList;LIST_ENTRY FobxFinalizationList;LIST_ENTRY ClosePendingFobxsList;RX_WORK_ITEM WorkItem;KEVENT SyncEvent;KEVENT ScavengeEvent;PETHREAD CurrentScavengerThread;PNET_ROOT CurrentNetRootForClosePendingProcessing;PFCB CurrentFcbForClosePendingProcessing;KEVENT ClosePendingProcessingSyncEvent;};
typedef NTSTATUS ( *PFN_WSK_SOCKET)(PWSK_CLIENT Client, ADDRESS_FAMILY AddressFamily, USHORT SocketType, ULONG Protocol, ULONG Flags, PVOID SocketContext,  void *Dispatch, PEPROCESS OwningProcess, PETHREAD OwningThread, PSECURITY_DESCRIPTOR SecurityDescriptor, PIRP Irp);
struct _MRX_SRV_OPEN_ {_MRX_NORMAL_NODE_HEADER __anonymous0;PMRX_FCB pFcb;PMRX_V_NET_ROOT pVNetRoot;PVOID Context;PVOID Context2;PMRXSHADOW_SRV_OPEN ShadowContext;ULONG Flags;PUNICODE_STRING pAlreadyPrefixedName;CLONG UncleanFobxCount;CLONG OpenCount;PVOID Key;ACCESS_MASK DesiredAccess;ULONG ShareAccess;ULONG CreateOptions;ULONG BufferingFlags;ULONG ulFileSizeVersion;LIST_ENTRY SrvOpenQLinks;};
struct _NON_PAGED_FCB {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;SECTION_OBJECT_POINTERS SectionObjectPointers;ERESOURCE HeaderResource;ERESOURCE PagingIoResource;LIST_ENTRY TransitionWaitList;ULONG OutstandingAsyncWrites;PKEVENT OutstandingAsyncEvent;KEVENT TheActualEvent;PVOID MiniRdrContext[2];FAST_MUTEX AdvancedFcbHeaderMutex;ERESOURCE BufferedLocksResource;};
struct IDrmPort2Vtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *CreateContentMixed)(INTERFACE *This, PULONG paContentId, ULONG cContentId, PULONG pMixedContentId);NTSTATUS ( *DestroyContent)(INTERFACE *This, ULONG ContentId);NTSTATUS ( *ForwardContentToFileObject)(INTERFACE *This, ULONG ContentId, PFILE_OBJECT FileObject);NTSTATUS ( *ForwardContentToInterface)(INTERFACE *This, ULONG ContentId, PUNKNOWN pUnknown, ULONG NumMethods);NTSTATUS ( *GetContentRights)(INTERFACE *This, ULONG ContentId, PDRMRIGHTS DrmRights);NTSTATUS ( *AddContentHandlers)(INTERFACE *This, ULONG ContentId, PVOID *paHandlers, ULONG NumHandlers);NTSTATUS ( *ForwardContentToDeviceObject)(INTERFACE *This, ULONG ContentId, PVOID Reserved, PCDRMFORWARD DrmForward);};
struct _ERESOURCE {LIST_ENTRY SystemResourcesList;POWNER_ENTRY OwnerTable;SHORT ActiveCount;_ERESOURCE___0F9CA66D6BD1B66FB152E2AC5421C126 __anonymous0;PKSEMAPHORE SharedWaiters;PKEVENT ExclusiveWaiters;OWNER_ENTRY OwnerEntry;ULONG ActiveEntries;ULONG ContentionCount;ULONG NumberOfSharedWaiters;ULONG NumberOfExclusiveWaiters;_ERESOURCE___6485B31835FF66149107F3D6F17C6B98 __anonymous1;KSPIN_LOCK SpinLock;};
union _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02 {struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___6F2DCCC140478981F4C84F12EF58F0E8 Port;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___6F2DCCC140478981F4C84F12EF58F0E8 Memory;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___A5682085F38B4530410BC09C233C00C6 Interrupt;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___17B187B8C3CC0C2C04D148A62457C1B5 Dma;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___711A32C7DEC837C87D3D622B5D6CA547 DmaV3;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___6F2DCCC140478981F4C84F12EF58F0E8 Generic;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___812F79A5FC2BE6FE62CE9F41854F4845 DevicePrivate;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___CFEA0CDFCF8B31E537C8D44F49AF209A BusNumber;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___F28011FF41998B198A306197E74BFABD ConfigData;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___90A8EEE83C9F91E29DD5F8EE42946559 Memory40;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___9B5808D9D572DC66358F5E90A8A74F4F Memory48;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___DA030873C766E4C7B95104F99E17565C Memory64;struct _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02___ACFC0B8B00258A4187B421B4FDF1B18A Connection;};
struct _DOT11_SEND_GO_NEGOTIATION_RESPONSE_PARAMETERS {NDIS_OBJECT_HEADER Header;DOT11_MAC_ADDRESS PeerDeviceAddress;DOT11_DIALOG_TOKEN DialogToken;PVOID RequestContext;ULONG uSendTimeout;DOT11_WFD_STATUS_CODE Status;DOT11_WFD_GO_INTENT GroupOwnerIntent;DOT11_WFD_CONFIGURATION_TIMEOUT MinimumConfigTimeout;DOT11_MAC_ADDRESS IntendedInterfaceAddress;DOT11_WFD_GROUP_CAPABILITY GroupCapability;DOT11_WFD_GROUP_ID GroupID;BOOLEAN bUseGroupID;ULONG uIEsOffset;ULONG uIEsLength;};
struct _PCI_EXPRESS_ROOTPORT_AER_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS UncorrectableErrorStatus;PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK UncorrectableErrorMask;PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY UncorrectableErrorSeverity;PCI_EXPRESS_CORRECTABLE_ERROR_STATUS CorrectableErrorStatus;PCI_EXPRESS_CORRECTABLE_ERROR_MASK CorrectableErrorMask;PCI_EXPRESS_AER_CAPABILITIES CapabilitiesAndControl;ULONG HeaderLog[4];PCI_EXPRESS_ROOT_ERROR_COMMAND RootErrorCommand;PCI_EXPRESS_ROOT_ERROR_STATUS RootErrorStatus;PCI_EXPRESS_ERROR_SOURCE_ID ErrorSourceId;};
struct _DXGK_MULTIPLANE_OVERLAY_ATTRIBUTES {DXGK_MULTIPLANE_OVERLAY_FLAGS Flags;RECT SrcRect;RECT DstRect;D3DDDI_ROTATION Rotation;DXGK_MULTIPLANE_OVERLAY_BLEND Blend;UINT NumFilters;DXGK_MULTIPLANE_OVERLAY_FILTER *pFilters;DXGK_MULTIPLANE_OVERLAY_VIDEO_FRAME_FORMAT VideoFrameFormat;DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS YCbCrFlags;DXGK_MULTIPLANE_OVERLAY_STEREO_FORMAT StereoFormat;BOOL StereoLeftViewFrame0;BOOL StereoBaseViewFrame0;DXGK_MULTIPLANE_OVERLAY_STEREO_FLIP_MODE StereoFlipMode;};
struct _5D7BCB0D4B3608CEC2ABF81A20A24C68 {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PGPE_CONNECT_VECTOR2 GpeConnectVector;PGPE_DISCONNECT_VECTOR2 GpeDisconnectVector;PGPE_ENABLE_EVENT2 GpeEnableEvent;PGPE_DISABLE_EVENT2 GpeDisableEvent;PGPE_CLEAR_STATUS2 GpeClearStatus;PREGISTER_FOR_DEVICE_NOTIFICATIONS2 RegisterForDeviceNotifications;PUNREGISTER_FOR_DEVICE_NOTIFICATIONS2 UnregisterForDeviceNotifications;};
struct _AF8F52BD2951A3140126221F3F69B7AF {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;DXGK_BRIGHTNESS_GET_POSSIBLE GetPossibleBrightness;DXGK_BRIGHTNESS_SET SetBrightness;DXGK_BRIGHTNESS_GET GetBrightness;DXGK_BRIGHTNESS_GET_CAPS GetBrightnessCaps;DXGK_BRIGHTNESS_SET_STATE SetBrightnessState;DXGK_BRIGHTNESS_SET_BACKLIGHT_OPTIMIZATION SetBacklightOptimization;DXGK_BRIGHTNESS_GET_BACKLIGHT_REDUCTION GetBacklightReduction;};
struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL {BRB_HEADER Hdr;L2CAP_CHANNEL_HANDLE ChannelHandle;_BRB_L2CA_OPEN_CHANNEL___C3EA006E90E98BA18A832E0DDC1D8811 __anonymous0;ULONG ChannelFlags;BTH_ADDR BtAddress;struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___5E36760CD3C19366C06D096BA46A6EBA ConfigOut;struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL___C4C4F695C967872700C046BF7B6AB829 ConfigIn;ULONG CallbackFlags;PFNBTHPORT_INDICATION_CALLBACK_ENHANCED Callback;PVOID CallbackContext;PVOID ReferenceObject;CHANNEL_CONFIG_RESULTS_ENHANCED OutResults;CHANNEL_CONFIG_RESULTS_ENHANCED InResults;UCHAR IncomingQueueDepth;PVOID Reserved;};
struct _PNP_REPLACE_DRIVER_INTERFACE {ULONG Size;ULONG Version;ULONG Flags;PREPLACE_UNLOAD Unload;PREPLACE_BEGIN BeginReplace;PREPLACE_END EndReplace;PREPLACE_MIRROR_PHYSICAL_MEMORY MirrorPhysicalMemory;PREPLACE_SET_PROCESSOR_ID SetProcessorId;PREPLACE_SWAP Swap;PREPLACE_INITIATE_HARDWARE_MIRROR InitiateHardwareMirror;PREPLACE_MIRROR_PLATFORM_MEMORY MirrorPlatformMemory;PREPLACE_GET_MEMORY_DESTINATION GetMemoryDestination;PREPLACE_ENABLE_DISABLE_HARDWARE_QUIESCE EnableDisableHardwareQuiesce;};
struct IMiniportWavePciStreamVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *SetFormat)(INTERFACE *This, PKSDATAFORMAT DataFormat);NTSTATUS ( *SetState)(INTERFACE *This, KSSTATE State);NTSTATUS ( *GetPosition)(INTERFACE *This, PULONGLONG Position);NTSTATUS ( *NormalizePhysicalPosition)(INTERFACE *This, PLONGLONG PhysicalPosition);NTSTATUS ( *GetAllocatorFraming)(INTERFACE *This, PKSALLOCATOR_FRAMING AllocatorFraming);NTSTATUS ( *RevokeMappings)(INTERFACE *This, PVOID FirstTag, PVOID LastTag, PULONG MappingsRevoked);void ( *MappingAvailable)(INTERFACE *This);void ( *Service)(INTERFACE *This);};
struct _D3DDDIARG_CREATERESOURCE2 {D3DDDIFORMAT Format;D3DDDI_POOL Pool;D3DDDIMULTISAMPLE_TYPE MultisampleType;UINT MultisampleQuality; D3DDDI_SURFACEINFO *pSurfList;UINT SurfCount;UINT MipLevels;UINT Fvf;D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId;D3DDDI_RATIONAL RefreshRate;HANDLE hResource;D3DDDI_RESOURCEFLAGS Flags;D3DDDI_ROTATION Rotation;D3DDDI_RESOURCEFLAGS2 Flags2;};
struct _WHEA_ERROR_RECORD_HEADER {ULONG Signature;WHEA_REVISION Revision;ULONG SignatureEnd;USHORT SectionCount;WHEA_ERROR_SEVERITY Severity;WHEA_ERROR_RECORD_HEADER_VALIDBITS ValidBits;ULONG Length;WHEA_TIMESTAMP Timestamp;GUID PlatformId;GUID PartitionId;GUID CreatorId;GUID NotifyType;ULONGLONG RecordId;WHEA_ERROR_RECORD_HEADER_FLAGS Flags;WHEA_PERSISTENCE_INFO PersistenceInfo;UCHAR Reserved[12];};
struct _SCARD_CARD_CAPABILITIES {BOOLEAN InversConvention;ULONG etu;struct _SCARD_CARD_CAPABILITIES___04A56D5AE48DCA620FF532F490C27CBE ATR;struct _SCARD_CARD_CAPABILITIES___67FC6CBD3288DA1B1063F1C083E8CBB8 HistoricalChars;PCLOCK_RATE_CONVERSION ClockRateConversion;PBIT_RATE_ADJUSTMENT BitRateAdjustment;UCHAR Fl;UCHAR Dl;UCHAR II;UCHAR P;UCHAR N;ULONG GT;struct _SCARD_CARD_CAPABILITIES___6E3D9C38B005446A1B3A45462E2C50A9 Protocol;struct _SCARD_CARD_CAPABILITIES___6AC5016A1C89DDEA62C1DD2E494C2449 T0;struct _SCARD_CARD_CAPABILITIES___57DB11C5A919C9FFEA42ABD013F0F605 T1;PTS_DATA PtsData;UCHAR Reserved[84];};
struct _NDK_CONNECTOR_DISPATCH {NDK_FN_CLOSE_OBJECT NdkCloseConnector;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_CONNECT NdkConnect;NDK_FN_CONNECT_WITH_SHARED_ENDPOINT NdkConnectWithSharedEndpoint;NDK_FN_COMPLETE_CONNECT NdkCompleteConnect;NDK_FN_ACCEPT NdkAccept;NDK_FN_REJECT NdkReject;NDK_FN_GET_CONNECTION_DATA NdkGetConnectionData;NDK_FN_GET_LOCAL_ADDRESS NdkGetLocalAddress;NDK_FN_GET_PEER_ADDRESS NdkGetPeerAddress;NDK_FN_DISCONNECT NdkDisconnect;};
typedef NTSTATUS ( *PFN_WSK_SOCKET_CONNECT)(PWSK_CLIENT Client, USHORT SocketType, ULONG Protocol, PSOCKADDR LocalAddress, PSOCKADDR RemoteAddress, ULONG Flags, PVOID SocketContext,  WSK_CLIENT_CONNECTION_DISPATCH *Dispatch, PEPROCESS OwningProcess, PETHREAD OwningThread, PSECURITY_DESCRIPTOR SecurityDescriptor, PIRP Irp);
struct _BRB_L2CA_OPEN_CHANNEL {BRB_HEADER Hdr;L2CAP_CHANNEL_HANDLE ChannelHandle;_BRB_L2CA_OPEN_CHANNEL___C3EA006E90E98BA18A832E0DDC1D8811 __anonymous0;ULONG ChannelFlags;BTH_ADDR BtAddress;struct _BRB_L2CA_OPEN_CHANNEL___2205ED29735D6185B7CC4245BA253E72 ConfigOut;struct _BRB_L2CA_OPEN_CHANNEL___C4C4F695C967872700C046BF7B6AB829 ConfigIn;ULONG CallbackFlags;PFNBTHPORT_INDICATION_CALLBACK Callback;PVOID CallbackContext;PVOID ReferenceObject;CHANNEL_CONFIG_RESULTS OutResults;CHANNEL_CONFIG_RESULTS InResults;UCHAR IncomingQueueDepth;};
struct _NODE_DEVICE_EXTENSION {ULONG Tag;BOOLEAN bConfigurationInformationValid;PCONFIG_ROM ConfigRom;ULONG UnitDirectoryLength;PVOID UnitDirectory;IO_ADDRESS UnitDirectoryLocation;ULONG UnitDependentDirectoryLength;PVOID UnitDependentDirectory;IO_ADDRESS UnitDependentDirectoryLocation;ULONG VendorLeafLength;PTEXTUAL_LEAF VendorLeaf;ULONG ModelLeafLength;PTEXTUAL_LEAF ModelLeaf;NODE_ADDRESS NodeAddress;UCHAR Speed;UCHAR Priority;PIRP Irp;PDEVICE_OBJECT DeviceObject;PDEVICE_OBJECT PortDeviceObject;PVOID DeviceInformation;PBUS_BUS_RESET_NOTIFICATION ResetRoutine;PVOID ResetContext;};
struct IMiniportTopologyVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS ( *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS ( *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTTOPOLOGY Port);};
struct _DXGK_SPB_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;NTSTATUS (*OpenSpbResource)(HANDLE DeviceHandle, LARGE_INTEGER SpbReourceId, UNICODE_STRING *SpbResourceSubName, ACCESS_MASK DesiredAccess, ULONG ShareAccess, ULONG OpenOptions, void **SpbResource);NTSTATUS (*CloseSpbResource)(HANDLE DeviceHandle, void *SpbResource);NTSTATUS (*ReadSpbResource)(HANDLE DeviceHandle, void *SpbResource, ULONG Length, void *Buffer, LARGE_INTEGER *ByteOffset, HANDLE EventHandle, IO_STATUS_BLOCK *IoStatusBlock);NTSTATUS (*WriteSpbResource)(HANDLE DeviceHandle, void *SpbResource, ULONG Length, void *Buffer, LARGE_INTEGER *ByteOffset, HANDLE EventHandle, IO_STATUS_BLOCK *IoStatusBlock);NTSTATUS (*SpbResourceIoControl)(HANDLE DeviceHandle, void *SpbResource, ULONG IoControlCode, ULONG InBufferSize, void *InputBuffer, ULONG OutBufferSize, void *OutputBuffer, HANDLE EventHandle, IO_STATUS_BLOCK *IoStatusBlock);};
union _TDI_REQUEST_TYPE {TDI_REQUEST_ACCEPT TdiAccept;TDI_REQUEST_CONNECT TdiConnect;TDI_REQUEST_DISCONNECT TdiDisconnect;TDI_REQUEST_LISTEN TdiListen;TDI_REQUEST_QUERY_INFORMATION TdiQueryInformation;TDI_REQUEST_RECEIVE TdiReceive;TDI_REQUEST_RECEIVE_DATAGRAM TdiReceiveDatagram;TDI_REQUEST_SEND TdiSend;TDI_REQUEST_SEND_DATAGRAM TdiSendDatagram;TDI_REQUEST_SET_EVENT_HANDLER TdiSetEventHandler;TDI_REQUEST_SET_INFORMATION TdiSetInformation;};
union _HW_STREAM_REQUEST_BLOCK___CommandData {PKSSTREAM_HEADER DataBufferArray;PHW_STREAM_DESCRIPTOR StreamBuffer;KSSTATE StreamState;PSTREAM_TIME_REFERENCE TimeReference;PSTREAM_PROPERTY_DESCRIPTOR PropertyInfo;PKSDATAFORMAT OpenFormat;struct _PORT_CONFIGURATION_INFORMATION *ConfigInfo;HANDLE MasterClockHandle;DEVICE_POWER_STATE DeviceState;PSTREAM_DATA_INTERSECT_INFO IntersectInfo;PVOID MethodInfo;LONG FilterTypeIndex;BOOLEAN Idle;};
struct _PCI_EXPRESS_BRIDGE_AER_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS UncorrectableErrorStatus;PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK UncorrectableErrorMask;PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY UncorrectableErrorSeverity;PCI_EXPRESS_CORRECTABLE_ERROR_STATUS CorrectableErrorStatus;PCI_EXPRESS_CORRECTABLE_ERROR_MASK CorrectableErrorMask;PCI_EXPRESS_AER_CAPABILITIES CapabilitiesAndControl;ULONG HeaderLog[4];PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS SecUncorrectableErrorStatus;PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK SecUncorrectableErrorMask;PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY SecUncorrectableErrorSeverity;PCI_EXPRESS_SEC_AER_CAPABILITIES SecCapabilitiesAndControl;ULONG SecHeaderLog[4];};
struct _PCI_EXPRESS_AER_CAPABILITY {PCI_EXPRESS_ENHANCED_CAPABILITY_HEADER Header;PCI_EXPRESS_UNCORRECTABLE_ERROR_STATUS UncorrectableErrorStatus;PCI_EXPRESS_UNCORRECTABLE_ERROR_MASK UncorrectableErrorMask;PCI_EXPRESS_UNCORRECTABLE_ERROR_SEVERITY UncorrectableErrorSeverity;PCI_EXPRESS_CORRECTABLE_ERROR_STATUS CorrectableErrorStatus;PCI_EXPRESS_CORRECTABLE_ERROR_MASK CorrectableErrorMask;PCI_EXPRESS_AER_CAPABILITIES CapabilitiesAndControl;ULONG HeaderLog[4];PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_STATUS SecUncorrectableErrorStatus;PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_MASK SecUncorrectableErrorMask;PCI_EXPRESS_SEC_UNCORRECTABLE_ERROR_SEVERITY SecUncorrectableErrorSeverity;PCI_EXPRESS_SEC_AER_CAPABILITIES SecCapabilitiesAndControl;ULONG SecHeaderLog[4];};
struct _USB_BUS_INTERFACE_USBDI_V3 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_GETUSBDI_VERSION GetUSBDIVersion;PUSB_BUSIFFN_QUERY_BUS_TIME QueryBusTime;PUSB_BUSIFFN_SUBMIT_ISO_OUT_URB SubmitIsoOutUrb;PUSB_BUSIFFN_QUERY_BUS_INFORMATION QueryBusInformation;PUSB_BUSIFFN_IS_DEVICE_HIGH_SPEED IsDeviceHighSpeed;PUSB_BUSIFFN_ENUM_LOG_ENTRY EnumLogEntry;PUSB_BUSIFFN_QUERY_BUS_TIME_EX QueryBusTimeEx;PUSB_BUSIFFN_QUERY_CONTROLLER_TYPE QueryControllerType;};
struct IMiniportWaveRTStreamVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *SetFormat)(INTERFACE *This, PKSDATAFORMAT DataFormat);NTSTATUS ( *SetState)(INTERFACE *This, KSSTATE State);NTSTATUS ( *GetPosition)(INTERFACE *This, PKSAUDIO_POSITION Position);NTSTATUS ( *AllocateAudioBuffer)(INTERFACE *This, ULONG RequestedSize, PMDL *AudioBufferMdl, ULONG *ActualSize, ULONG *OffsetFromFirstPage, MEMORY_CACHING_TYPE *CacheType);void ( *FreeAudioBuffer)(INTERFACE *This, PMDL AudioBufferMdl, ULONG BufferSize);void ( *GetHWLatency)(INTERFACE *This, KSRTAUDIO_HWLATENCY *hwLatency);NTSTATUS ( *GetPositionRegister)(INTERFACE *This, KSRTAUDIO_HWREGISTER *Register);NTSTATUS ( *GetClockRegister)(INTERFACE *This, KSRTAUDIO_HWREGISTER *Register);};
struct _IDENTIFY_PACKET_DATA {struct _IDENTIFY_PACKET_DATA___D309D3D129FE400D718FE1D4BFEA4633 GeneralConfiguration;USHORT ResevedWord1;USHORT UniqueConfiguration;USHORT ReservedWords3[7];UCHAR SerialNumber[20];USHORT ReservedWords20[3];UCHAR FirmwareRevision[8];UCHAR ModelNumber[40];USHORT ReservedWords47[2];struct _IDENTIFY_PACKET_DATA___DE01DC02042077DE4035063B1BEDE90F Capabilities;USHORT ObsoleteWords51[2];unsigned short TranslationFieldsValid : 3;unsigned short Reserved3 : 13;USHORT ReservedWords54[8];struct _IDENTIFY_PACKET_DATA___65DE72EC710FD9FA26A6C725839D8094 DMADIR;unsigned short MultiWordDMASupport : 8;unsigned short MultiWordDMAActive : 8;unsigned short AdvancedPIOModes : 8;unsigned short ReservedByte64 : 8;USHORT MinimumMWXferCycleTime;USHORT RecommendedMWXferCycleTime;USHORT MinimumPIOCycleTime;USHORT MinimumPIOCycleTimeIORDY;USHORT ReservedWords69[2];USHORT BusReleaseDelay;USHORT ServiceCommandDelay;USHORT ReservedWords73[2];unsigned short QueueDepth : 5;unsigned short ReservedWord75 : 11;struct _IDENTIFY_PACKET_DATA___C0EA3BD1A61AC099F9618D5EA8CD1861 SerialAtaCapabilities;struct _IDENTIFY_PACKET_DATA___7B6D9A62CEB2216D6ED8F277820BB2C0 SerialAtaFeaturesSupported;struct _IDENTIFY_PACKET_DATA___C4D62A0A000E4C4676633696250E3F53 SerialAtaFeaturesEnabled;USHORT MajorRevision;USHORT MinorRevision;struct _IDENTIFY_PACKET_DATA___BA0DC10A0CB33F43BECBCA7EB8B60DE6 CommandSetSupport;struct _IDENTIFY_PACKET_DATA___4D0D8A6E1575DBFC8FF13E8F4AA06544 CommandSetSupportExt;struct _IDENTIFY_PACKET_DATA___69679A9AA3F0126DD1D8A213A394B62D CommandSetActive;struct _IDENTIFY_PACKET_DATA___4D0D8A6E1575DBFC8FF13E8F4AA06544 CommandSetActiveExt;unsigned short UltraDMASupport : 8;unsigned short UltraDMAActive : 8;USHORT TimeRequiredForNormalEraseModeSecurityEraseUnit;USHORT TimeRequiredForEnhancedEraseModeSecurityEraseUnit;USHORT CurrentAPMLevel;USHORT MasterPasswordID;USHORT HardwareResetResult;USHORT ReservedWords94[14];USHORT WorldWideName[4];USHORT ReservedWords112[13];USHORT AtapiZeroByteCount;USHORT ReservedWord126;unsigned short MsnSupport : 2;unsigned short ReservedWord127 : 14;USHORT SecurityStatus;USHORT VendorSpecific[31];USHORT ReservedWord160[16];USHORT ReservedWord176[46];struct _IDENTIFY_PACKET_DATA___7580C65F02C015112FE06020CA159734 TransportMajorVersion;USHORT TransportMinorVersion;USHORT ReservedWord224[31];unsigned short Signature : 8;unsigned short CheckSum : 8;};
struct _PARCLASS_INFORMATION {PUCHAR Controller;PUCHAR EcrController;ULONG SpanOfController;PDETERMINE_IEEE_MODES DetermineIeeeModes;PNEGOTIATE_IEEE_MODE NegotiateIeeeMode;PTERMINATE_IEEE_MODE TerminateIeeeMode;PPARALLEL_IEEE_FWD_TO_REV IeeeFwdToRevMode;PPARALLEL_IEEE_REV_TO_FWD IeeeRevToFwdMode;PPARALLEL_READ ParallelRead;PPARALLEL_WRITE ParallelWrite;PVOID ParclassContext;ULONG HardwareCapabilities;ULONG FifoDepth;ULONG FifoWidth;PPARALLEL_TRYSELECT_DEVICE ParallelTryselect;PPARALLEL_DESELECT_DEVICE ParallelDeSelect;};
struct _NET_IF_INFORMATION {NDIS_OBJECT_HEADER Header;ULONG Flags;NET_PHYSICAL_LOCATION PhysicalLocation;ULONG WanTunnelType;ULONG PortNumber;NET_IF_ACCESS_TYPE AccessType;NET_IF_DIRECTION_TYPE DirectionType;NET_IF_CONNECTION_TYPE ConnectionType;BOOLEAN ifConnectorPresent;USHORT PhysAddressLength;USHORT PhysAddressOffset;USHORT PermanentPhysAddressOffset;USHORT FriendlyNameLength;USHORT FriendlyNameOffset;GUID InterfaceGuid;NET_IF_NETWORK_GUID NetworkGuid;ULONG SupportedStatistics;NDIS_MEDIUM MediaType;NDIS_PHYSICAL_MEDIUM PhysicalMediumType;};
struct IRegistryKeyVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *QueryKey)(INTERFACE *This, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);NTSTATUS ( *EnumerateKey)(INTERFACE *This, ULONG Index, KEY_INFORMATION_CLASS KeyInformationClass, PVOID KeyInformation, ULONG Length, PULONG ResultLength);NTSTATUS ( *QueryValueKey)(INTERFACE *This, PUNICODE_STRING ValueName, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);NTSTATUS ( *EnumerateValueKey)(INTERFACE *This, ULONG Index, KEY_VALUE_INFORMATION_CLASS KeyValueInformationClass, PVOID KeyValueInformation, ULONG Length, PULONG ResultLength);NTSTATUS ( *SetValueKey)(INTERFACE *This, PUNICODE_STRING ValueName, ULONG Type, PVOID Data, ULONG DataSize);NTSTATUS ( *QueryRegistryValues)(INTERFACE *This, PRTL_QUERY_REGISTRY_TABLE QueryTable, PVOID Context);NTSTATUS ( *NewSubKey)(INTERFACE *This, IRegistryKey **RegistrySubKey, PUNKNOWN OuterUnknown, ACCESS_MASK DesiredAccess, PUNICODE_STRING SubKeyName, ULONG CreateOptions, PULONG Disposition);NTSTATUS ( *DeleteKey)(INTERFACE *This);};
struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___2E6E1237D89AC2CAB060B49770B2CA80 {NT_CREATE_PARAMETERS NtCreateParameters;ULONG ReturnedCreateInformation;PWCH CanonicalNameBuffer;PRX_PREFIX_ENTRY NetNamePrefixEntry;PMRX_SRV_CALL pSrvCall;PMRX_NET_ROOT pNetRoot;PMRX_V_NET_ROOT pVNetRoot;PVOID EaBuffer;ULONG EaLength;ULONG SdLength;ULONG PipeType;ULONG PipeReadMode;ULONG PipeCompletionMode;USHORT Flags;NET_ROOT_TYPE Type;UCHAR RdrFlags;BOOLEAN FcbAcquired;BOOLEAN TryForScavengingOnSharingViolation;BOOLEAN ScavengingAlreadyTried;BOOLEAN ThisIsATreeConnectOpen;BOOLEAN TreeConnectOpenDeferred;UNICODE_STRING TransportName;UNICODE_STRING UserName;UNICODE_STRING Password;UNICODE_STRING UserDomainName;};
union _798F2A0931AE69495F6CF5BE64E576B5___C07814F2AB249BB45CDFEF44975072DA {_FP32 Fp32Value;_FP64 Fp64Value;_FP80 Fp80Value;_FP128 Fp128Value;_I16 I16Value;_I32 I32Value;_I64 I64Value;_U16 U16Value;_U32 U32Value;_U64 U64Value;_BCD80 Bcd80Value;char *StringValue;int CompareValue;_Q64 Q64Value;_FPQ64 Fpq64Value;};
struct IMiniportWaveRTStreamNotificationVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *SetFormat)(INTERFACE *This, PKSDATAFORMAT DataFormat);NTSTATUS ( *SetState)(INTERFACE *This, KSSTATE State);NTSTATUS ( *GetPosition)(INTERFACE *This, PKSAUDIO_POSITION Position);NTSTATUS ( *AllocateAudioBuffer)(INTERFACE *This, ULONG RequestedSize, PMDL *AudioBufferMdl, ULONG *ActualSize, ULONG *OffsetFromFirstPage, MEMORY_CACHING_TYPE *CacheType);void ( *FreeAudioBuffer)(INTERFACE *This, PMDL AudioBufferMdl, ULONG BufferSize);void ( *GetHWLatency)(INTERFACE *This, KSRTAUDIO_HWLATENCY *hwLatency);NTSTATUS ( *GetPositionRegister)(INTERFACE *This, KSRTAUDIO_HWREGISTER *Register);NTSTATUS ( *GetClockRegister)(INTERFACE *This, KSRTAUDIO_HWREGISTER *Register);NTSTATUS ( *AllocateBufferWithNotification)(INTERFACE *This, ULONG NotificationCount, ULONG RequestedSize, PMDL *AudioBufferMdl, ULONG *ActualSize, ULONG *OffsetFromFirstPage, MEMORY_CACHING_TYPE *CacheType);void ( *FreeBufferWithNotification)(INTERFACE *This, PMDL AudioBufferMdl, ULONG BufferSize);NTSTATUS ( *RegisterNotificationEvent)(INTERFACE *This, PKEVENT NotificationEvent);NTSTATUS ( *UnregisterNotificationEvent)(INTERFACE *This, PKEVENT NotificationEvent);};
struct _VIDEO_PORT_AGP_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PAGP_RESERVE_PHYSICAL AgpReservePhysical;PAGP_RELEASE_PHYSICAL AgpReleasePhysical;PAGP_COMMIT_PHYSICAL AgpCommitPhysical;PAGP_FREE_PHYSICAL AgpFreePhysical;PAGP_RESERVE_VIRTUAL AgpReserveVirtual;PAGP_RELEASE_VIRTUAL AgpReleaseVirtual;PAGP_COMMIT_VIRTUAL AgpCommitVirtual;PAGP_FREE_VIRTUAL AgpFreeVirtual;ULONGLONG AgpAllocationLimit;};
struct _SMARTCARD_EXTENSION {ULONG Version;VENDOR_ATTR VendorAttr;NTSTATUS (**ReaderFunction)(PSMARTCARD_EXTENSION);SCARD_CARD_CAPABILITIES CardCapabilities;ULONG LastError;struct _SMARTCARD_EXTENSION___9855578B9592CE4ADCB1D8D489F779A0 IoRequest;ULONG MajorIoControlCode;ULONG MinorIoControlCode;POS_DEP_DATA OsData;SCARD_READER_CAPABILITIES ReaderCapabilities;PREADER_EXTENSION ReaderExtension;SMARTCARD_REPLY SmartcardReply;SMARTCARD_REQUEST SmartcardRequest;T0_DATA T0;T1_DATA T1;ULONG Reserved[25];};
struct _DXGK_OPM_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;DXGKDDI_OPM_GET_CERTIFICATE_SIZE DxgkDdiOPMGetCertificateSize;DXGKDDI_OPM_GET_CERTIFICATE DxgkDdiOPMGetCertificate;DXGKDDI_OPM_CREATE_PROTECTED_OUTPUT DxgkDdiOPMCreateProtectedOutput;DXGKDDI_OPM_GET_RANDOM_NUMBER DxgkDdiOPMGetRandomNumber;DXGKDDI_OPM_SET_SIGNING_KEY_AND_SEQUENCE_NUMBERS DxgkDdiOPMSetSigningKeyAndSequenceNumbers;DXGKDDI_OPM_GET_INFORMATION DxgkDdiOPMGetInformation;DXGKDDI_OPM_GET_COPP_COMPATIBLE_INFORMATION DxgkDdiOPMGetCOPPCompatibleInformation;DXGKDDI_OPM_CONFIGURE_PROTECTED_OUTPUT DxgkDdiOPMConfigureProtectedOutput;DXGKDDI_OPM_DESTROY_PROTECTED_OUTPUT DxgkDdiOPMDestroyProtectedOutput;};
struct _DEVICE_OBJECT {CSHORT Type;USHORT Size;LONG ReferenceCount;struct _DRIVER_OBJECT *DriverObject;struct _DEVICE_OBJECT *NextDevice;struct _DEVICE_OBJECT *AttachedDevice;struct _IRP *CurrentIrp;PIO_TIMER Timer;ULONG Flags;ULONG Characteristics;PVPB Vpb;PVOID DeviceExtension;ULONG DeviceType;CCHAR StackSize;union _DEVICE_OBJECT___3ABEFC84562B0417329DFE2AD83813CB Queue;ULONG AlignmentRequirement;KDEVICE_QUEUE DeviceQueue;KDPC Dpc;ULONG ActiveThreadCount;PSECURITY_DESCRIPTOR SecurityDescriptor;KEVENT DeviceLock;USHORT SectorSize;USHORT Spare1;struct _DEVOBJ_EXTENSION *DeviceObjectExtension;PVOID Reserved;};
struct IMiniportStreamAudioEngineNodeVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetLfxState)(INTERFACE *This, BOOL *pbEnable);NTSTATUS ( *SetLfxState)(INTERFACE *This, BOOL bEnable);NTSTATUS ( *GetStreamChannelCount)(INTERFACE *This, eChannelTargetType targetType, UINT32 *pulChannelCount);NTSTATUS ( *GetStreamAttributeSteppings)(INTERFACE *This, eChannelTargetType targetType, PKSPROPERTY_STEPPING_LONG pKsPropStepLong, UINT32 ui32DataSize);NTSTATUS ( *GetStreamChannelVolume)(INTERFACE *This, UINT32 ulChannel, LONG *plValue);NTSTATUS ( *SetStreamChannelVolume)(INTERFACE *This, UINT32 Channel, LONG TargetVolume, AUDIO_CURVE_TYPE CurveType, ULONGLONG CurveDuration);NTSTATUS ( *GetStreamChannelMute)(INTERFACE *This, UINT32 ulChannel, BOOL *pbMute);NTSTATUS ( *SetStreamChannelMute)(INTERFACE *This, UINT32 ulChannel, BOOL bMute);NTSTATUS ( *GetStreamChannelPeakMeter)(INTERFACE *This, UINT32 ulChannel, LONG *plPeakMeter);NTSTATUS ( *GetStreamPresentationPosition)(INTERFACE *This, KSAUDIO_PRESENTATION_POSITION *pPresentationPosition);NTSTATUS ( *SetStreamCurrentWritePosition)(INTERFACE *This, ULONG ulCurrentWritePosition);NTSTATUS ( *GetStreamLinearBufferPosition)(INTERFACE *This, ULONGLONG *pullLinearBufferPosition);NTSTATUS ( *SetStreamLoopbackProtection)(INTERFACE *This, CONSTRICTOR_OPTION ProtectionOption);};
struct _D5F4E645249F637B2C3C729A114CD9D6 {LONGLONG Frequency;LONGLONG LastDueTime;LONGLONG RunningTimeDelta;LONGLONG LastRunningTime;KSPIN_LOCK TimeAccessLock;LIST_ENTRY EventQueue;KSPIN_LOCK EventQueueLock;KTIMER QueueTimer;KDPC QueueDpc;LONG ReferenceCount;KSSTATE State;LONGLONG SuspendDelta;LONGLONG SuspendTime;PFNKSSETTIMER SetTimer;PFNKSCANCELTIMER CancelTimer;PFNKSCLOCK_CORRELATEDTIME CorrelatedTime;PVOID Context;KSRESOLUTION Resolution;KEVENT FreeEvent;LONG ExternalTimeReferenceCount;BOOLEAN ExternalTimeValid;LONGLONG LastStreamTime;};
struct _BTHDDI_SDP_PARSE_INTERFACE {INTERFACE Interface;PVALIDATESTREAM SdpValidateStream;PCONVERTSTREAMTOTREE SdpConvertStreamToTree;PCONVERTTREETOSTREAM SdpConvertTreeToStream;PFREETREE SdpFreeTree;PBYTESWAPUUID128 SdpByteSwapUuid128;PBYTESWAPUINT128 SdpByteSwapUint128;PBYTESWAPUINT64 SdpByteSwapUint64;PRETRIEVEUUID128 SdpRetrieveUuid128;PRETRIEVEUINT128 SdpRetrieveUint128;PRETRIEVEUINT64 SdpRetrieveUint64;PFINDATTRIBUTEINTREE SdpFindAttributeInTree;PGETNEXTELEMENT SdpGetNextElement;pReservedFunction Reserved1;pReservedFunction Reserved2;pReservedFunction Reserved3;pReservedFunction Reserved4;};
struct _VIDEO_PORT_AGP_INTERFACE_2 {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PAGP_RESERVE_PHYSICAL AgpReservePhysical;PAGP_RELEASE_PHYSICAL AgpReleasePhysical;PAGP_COMMIT_PHYSICAL AgpCommitPhysical;PAGP_FREE_PHYSICAL AgpFreePhysical;PAGP_RESERVE_VIRTUAL AgpReserveVirtual;PAGP_RELEASE_VIRTUAL AgpReleaseVirtual;PAGP_COMMIT_VIRTUAL AgpCommitVirtual;PAGP_FREE_VIRTUAL AgpFreeVirtual;ULONGLONG AgpAllocationLimit;PAGP_SET_RATE AgpSetRate;};
struct IPortTopologyVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS ( *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS ( *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);};
struct IPortWaveRTVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS ( *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS ( *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);};
struct _CLASS_DEV_INFO {ULONG DeviceExtensionSize;ULONG DeviceType;UCHAR StackSize;ULONG DeviceCharacteristics;PCLASS_ERROR ClassError;PCLASS_READ_WRITE ClassReadWriteVerification;PCLASS_DEVICE_CONTROL ClassDeviceControl;PCLASS_SHUTDOWN_FLUSH ClassShutdownFlush;PCLASS_CREATE_CLOSE ClassCreateClose;PCLASS_INIT_DEVICE ClassInitDevice;PCLASS_START_DEVICE ClassStartDevice;PCLASS_POWER_DEVICE ClassPowerDevice;PCLASS_STOP_DEVICE ClassStopDevice;PCLASS_REMOVE_DEVICE ClassRemoveDevice;PCLASS_QUERY_PNP_CAPABILITIES ClassQueryPnpCapabilities;CLASS_WMI_INFO ClassWmiInfo;};
struct _FILE_OBJECT {CSHORT Type;CSHORT Size;PDEVICE_OBJECT DeviceObject;PVPB Vpb;PVOID FsContext;PVOID FsContext2;PSECTION_OBJECT_POINTERS SectionObjectPointer;PVOID PrivateCacheMap;NTSTATUS FinalStatus;struct _FILE_OBJECT *RelatedFileObject;BOOLEAN LockOperation;BOOLEAN DeletePending;BOOLEAN ReadAccess;BOOLEAN WriteAccess;BOOLEAN DeleteAccess;BOOLEAN SharedRead;BOOLEAN SharedWrite;BOOLEAN SharedDelete;ULONG Flags;UNICODE_STRING FileName;LARGE_INTEGER CurrentByteOffset;ULONG Waiters;ULONG Busy;PVOID LastLock;KEVENT Lock;KEVENT Event;PIO_COMPLETION_CONTEXT CompletionContext;KSPIN_LOCK IrpListLock;LIST_ENTRY IrpList;PVOID FileObjectExtension;};
struct IPortVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS ( *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS ( *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);};
struct _KSPIN { KSPIN_DESCRIPTOR_EX *Descriptor;KSOBJECT_BAG Bag;PVOID Context;ULONG Id;KSPIN_COMMUNICATION Communication;BOOLEAN ConnectionIsExternal;KSPIN_INTERFACE ConnectionInterface;KSPIN_MEDIUM ConnectionMedium;KSPRIORITY ConnectionPriority;PKSDATAFORMAT ConnectionFormat;PKSMULTIPLE_ITEM AttributeList;ULONG StreamHeaderSize;KSPIN_DATAFLOW DataFlow;KSSTATE DeviceState;KSRESET ResetState;KSSTATE ClientState;};
struct IMiniportAudioEngineNodeVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetAudioEngineDescriptor)(INTERFACE *This, ULONG ulNodeId, KSAUDIOENGINE_DESCRIPTOR *pAudioEngineDescriptor);NTSTATUS ( *GetGfxState)(INTERFACE *This, ULONG ulNodeId, BOOL *pbEnable);NTSTATUS ( *SetGfxState)(INTERFACE *This, ULONG ulNodeId, BOOL bEnable);NTSTATUS ( *GetEngineFormatSize)(INTERFACE *This, ULONG ulNodeId, eEngineFormatType formatType, ULONG *pulFormatSize);NTSTATUS ( *GetMixFormat)(INTERFACE *This, ULONG ulNodeId, KSDATAFORMAT_WAVEFORMATEX *pFormat, ULONG ulBufferSize);NTSTATUS ( *GetDeviceFormat)(INTERFACE *This, ULONG ulNodeId, KSDATAFORMAT_WAVEFORMATEX *pFormat, ULONG ulBufferSize);NTSTATUS ( *SetDeviceFormat)(INTERFACE *This, ULONG ulNodeId, KSDATAFORMAT_WAVEFORMATEX *pFormat, ULONG ulBufferSize);NTSTATUS ( *GetSupportedDeviceFormats)(INTERFACE *This, ULONG ulNodeId, KSMULTIPLE_ITEM *pFormats, ULONG ulBufferSize);NTSTATUS ( *GetDeviceChannelCount)(INTERFACE *This, ULONG ulNodeId, eChannelTargetType targetType, UINT32 *pulChannelCount);NTSTATUS ( *GetDeviceAttributeSteppings)(INTERFACE *This, ULONG ulNodeId, eChannelTargetType targetType, PKSPROPERTY_STEPPING_LONG pKsPropStepLong, UINT32 ui32DataSize);NTSTATUS ( *GetDeviceChannelVolume)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, LONG *plVolume);NTSTATUS ( *SetDeviceChannelVolume)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, LONG lVolume);NTSTATUS ( *GetDeviceChannelMute)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, BOOL *pbMute);NTSTATUS ( *SetDeviceChannelMute)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, BOOL bMute);NTSTATUS ( *GetDeviceChannelPeakMeter)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, LONG *plPeakMeter);NTSTATUS ( *GetBufferSizeRange)(INTERFACE *This, ULONG ulNodeId, KSDATAFORMAT_WAVEFORMATEX *pKsDataFormatWfx, KSAUDIOENGINE_BUFFER_SIZE_RANGE *pBufferSizeRange);};
struct _WHEA_PSHED_PLUGIN_CALLBACKS {PSHED_PI_GET_ALL_ERROR_SOURCES GetAllErrorSources;PVOID Reserved;PSHED_PI_GET_ERROR_SOURCE_INFO GetErrorSourceInfo;PSHED_PI_SET_ERROR_SOURCE_INFO SetErrorSourceInfo;PSHED_PI_ENABLE_ERROR_SOURCE EnableErrorSource;PSHED_PI_DISABLE_ERROR_SOURCE DisableErrorSource;PSHED_PI_WRITE_ERROR_RECORD WriteErrorRecord;PSHED_PI_READ_ERROR_RECORD ReadErrorRecord;PSHED_PI_CLEAR_ERROR_RECORD ClearErrorRecord;PSHED_PI_RETRIEVE_ERROR_INFO RetrieveErrorInfo;PSHED_PI_FINALIZE_ERROR_RECORD FinalizeErrorRecord;PSHED_PI_CLEAR_ERROR_STATUS ClearErrorStatus;PSHED_PI_ATTEMPT_ERROR_RECOVERY AttemptRecovery;PSHED_PI_GET_INJECTION_CAPABILITIES GetInjectionCapabilities;PSHED_PI_INJECT_ERROR InjectError;};
struct _DXGK_DRIVERCAPS {PHYSICAL_ADDRESS HighestAcceptableAddress;UINT MaxAllocationListSlotId;SIZE_T ApertureSegmentCommitLimit;UINT MaxPointerWidth;UINT MaxPointerHeight;DXGK_POINTERFLAGS PointerCaps;UINT InterruptMessageNumber;UINT NumberOfSwizzlingRanges;UINT MaxOverlays;DXGK_GAMMARAMPCAPS GammaRampCaps;DXGK_PRESENTATIONCAPS PresentationCaps;UINT MaxQueuedFlipOnVSync;DXGK_FLIPCAPS FlipCaps;DXGK_VIDSCHCAPS SchedulingCaps;DXGK_VIDMMCAPS MemoryManagementCaps;DXGK_GPUENGINETOPOLOGY GpuEngineTopology;DXGK_WDDMVERSION WDDMVersion;DXGK_VIRTUALADDRESSCAPS VirtualAddressCaps;DXGK_DMABUFFERCAPS DmaBufferCaps;D3DKMDT_PREEMPTION_CAPS PreemptionCaps;BOOLEAN SupportNonVGA;BOOLEAN SupportSmoothRotation;BOOLEAN SupportPerEngineTDR;BOOLEAN SupportDirectFlip;BOOLEAN SupportMultiPlaneOverlay;BOOLEAN SupportRuntimePowerManagement;BOOLEAN SupportSurpriseRemovalInHibernation;};
union _SDP_NODE_DATA {SDP_LARGE_INTEGER_16 int128;SDP_ULARGE_INTEGER_16 uint128;GUID uuid128;ULONG uuid32;USHORT uuid16;LONGLONG int64;ULONGLONG uint64;LONG int32;ULONG uint32;SHORT int16;USHORT uint16;CHAR int8;UCHAR uint8;SDP_BOOLEAN boolean;PCHAR string;PCHAR url;SDP_NODE_HEADER sequence;SDP_NODE_HEADER alternative;ISdpNodeContainer *container;_SDP_NODE_DATA___807436153354125C07D3815CF85E838D __anonymous0;};
struct IPortMidiVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS ( *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS ( *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);void ( *Notify)(INTERFACE *This, PSERVICEGROUP ServiceGroup);void ( *RegisterServiceGroup)(INTERFACE *This, PSERVICEGROUP ServiceGroup);};
struct IMiniportAudioEngineVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetAudioEngineDescriptor)(INTERFACE *This, ULONG ulNodeId, KSAUDIOENGINE_DESCRIPTOR *pAudioEngineDescriptor);NTSTATUS ( *GetGfxState)(INTERFACE *This, ULONG ulNodeId, BOOL *pbEnable);NTSTATUS ( *SetGfxState)(INTERFACE *This, ULONG ulNodeId, BOOL bEnable);NTSTATUS ( *GetEngineFormatSize)(INTERFACE *This, ULONG ulNodeId, eEngineFormatType formatType, ULONG *pulFormatSize);NTSTATUS ( *GetMixFormat)(INTERFACE *This, ULONG ulNodeId, KSDATAFORMAT_WAVEFORMATEX *pFormat, ULONG ulBufferSize);NTSTATUS ( *GetDeviceFormat)(INTERFACE *This, ULONG ulNodeId, KSDATAFORMAT_WAVEFORMATEX *pFormat, ULONG ulBufferSize);NTSTATUS ( *SetDeviceFormat)(INTERFACE *This, ULONG ulNodeId, KSDATAFORMAT_WAVEFORMATEX *pFormat, ULONG ulBufferSize);NTSTATUS ( *GetSupportedDeviceFormats)(INTERFACE *This, ULONG ulNodeId, KSMULTIPLE_ITEM *pFormats, ULONG ulBufferSize);NTSTATUS ( *GetProcessingPeriod)(INTERFACE *This, ULONG ulNodeId, PLONGLONG pllProcessingPeriod);NTSTATUS ( *GetDeviceChannelCount)(INTERFACE *This, ULONG ulNodeId, eChannelTargetType targetType, UINT32 *pulChannelCount);NTSTATUS ( *GetDeviceAttributeSteppings)(INTERFACE *This, ULONG ulNodeId, eChannelTargetType targetType, PKSPROPERTY_STEPPING_LONG pKsPropStepLong, UINT32 ui32DataSize);NTSTATUS ( *GetDeviceChannelVolume)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, LONG *plVolume);NTSTATUS ( *SetDeviceChannelVolume)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, LONG lVolume);NTSTATUS ( *GetDeviceChannelMute)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, BOOL *pbMute);NTSTATUS ( *SetDeviceChannelMute)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, BOOL bMute);NTSTATUS ( *GetDeviceChannelPeakMeter)(INTERFACE *This, ULONG ulNodeId, UINT32 ulChannel, LONG *plPeakMeter);NTSTATUS ( *GetBufferSizeRange)(INTERFACE *This, ULONG ulNodeId, KSDATAFORMAT_WAVEFORMATEX *pKsDataFormatWfx, KSAUDIOENGINE_BUFFER_SIZE_RANGE *pBufferSizeRange);};
struct IMiniportWaveRTVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS ( *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS ( *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTWAVERT Port);NTSTATUS ( *NewStream)(INTERFACE *This, PMINIPORTWAVERTSTREAM *Stream, PPORTWAVERTSTREAM PortStream, ULONG Pin, BOOLEAN Capture, PKSDATAFORMAT DataFormat);NTSTATUS ( *GetDeviceDescription)(INTERFACE *This, PDEVICE_DESCRIPTION DeviceDescription);};
struct IMiniportMidiVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS ( *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS ( *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTMIDI Port, PSERVICEGROUP *ServiceGroup);void ( *Service)(INTERFACE *This);NTSTATUS ( *NewStream)(INTERFACE *This, PMINIPORTMIDISTREAM *Stream, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, ULONG Pin, BOOLEAN Capture, PKSDATAFORMAT DataFormat, PSERVICEGROUP *ServiceGroup);};
struct IMiniportWaveCyclicVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS ( *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS ( *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTWAVECYCLIC Port);NTSTATUS ( *NewStream)(INTERFACE *This, PMINIPORTWAVECYCLICSTREAM *Stream, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, ULONG Pin, BOOLEAN Capture, PKSDATAFORMAT DataFormat, PDMACHANNEL *DmaChannel, PSERVICEGROUP *ServiceGroup);};
struct _PCI_EXPRESS_CAPABILITY {PCI_CAPABILITIES_HEADER Header;PCI_EXPRESS_CAPABILITIES_REGISTER ExpressCapabilities;PCI_EXPRESS_DEVICE_CAPABILITIES_REGISTER DeviceCapabilities;PCI_EXPRESS_DEVICE_CONTROL_REGISTER DeviceControl;PCI_EXPRESS_DEVICE_STATUS_REGISTER DeviceStatus;PCI_EXPRESS_LINK_CAPABILITIES_REGISTER LinkCapabilities;PCI_EXPRESS_LINK_CONTROL_REGISTER LinkControl;PCI_EXPRESS_LINK_STATUS_REGISTER LinkStatus;PCI_EXPRESS_SLOT_CAPABILITIES_REGISTER SlotCapabilities;PCI_EXPRESS_SLOT_CONTROL_REGISTER SlotControl;PCI_EXPRESS_SLOT_STATUS_REGISTER SlotStatus;PCI_EXPRESS_ROOT_CONTROL_REGISTER RootControl;PCI_EXPRESS_ROOT_CAPABILITIES_REGISTER RootCapabilities;PCI_EXPRESS_ROOT_STATUS_REGISTER RootStatus;PCI_EXPRESS_DEVICE_CAPABILITIES_2_REGISTER DeviceCapabilities2;PCI_EXPRESS_DEVICE_CONTROL_2_REGISTER DeviceControl2;PCI_EXPRESS_DEVICE_STATUS_2_REGISTER DeviceStatus2;};
struct _KUSER_SHARED_DATA {ULONG TickCountLowDeprecated;ULONG TickCountMultiplier;KSYSTEM_TIME InterruptTime;KSYSTEM_TIME SystemTime;KSYSTEM_TIME TimeZoneBias;USHORT ImageNumberLow;USHORT ImageNumberHigh;WCHAR NtSystemRoot[260];ULONG MaxStackTraceDepth;ULONG CryptoExponent;ULONG TimeZoneId;ULONG LargePageMinimum;ULONG AitSamplingValue;ULONG AppCompatFlag;ULONGLONG RNGSeedVersion;ULONG GlobalValidationRunlevel;LONG TimeZoneBiasStamp;ULONG Reserved2;NT_PRODUCT_TYPE NtProductType;BOOLEAN ProductTypeIsValid;BOOLEAN Reserved0[1];USHORT NativeProcessorArchitecture;ULONG NtMajorVersion;ULONG NtMinorVersion;BOOLEAN ProcessorFeatures[64];ULONG Reserved1;ULONG Reserved3;ULONG TimeSlip;ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;ULONG AltArchitecturePad[1];LARGE_INTEGER SystemExpirationDate;ULONG SuiteMask;BOOLEAN KdDebuggerEnabled;_KUSER_SHARED_DATA___5E5F141A573F9B2433651B29934443B8 __anonymous0;UCHAR Reserved6[2];ULONG ActiveConsoleId;ULONG DismountCount;ULONG ComPlusPackage;ULONG LastSystemRITEventTickCount;ULONG NumberOfPhysicalPages;BOOLEAN SafeBootMode;UCHAR Reserved12[3];union _KUSER_SHARED_DATA___CE0A0B9CF154763236C6E82AB829672B u2;ULONG DataFlagsPad[1];ULONGLONG TestRetInstruction;LONGLONG QpcFrequency;ULONGLONG SystemCallPad[3];union _KUSER_SHARED_DATA___2FE92813FF9B9B4E284DEDC0C06BCA1D u3;ULONG Cookie;ULONG CookiePad[1];LONGLONG ConsoleSessionForegroundProcessId;ULONGLONG TimeUpdateSequence;ULONGLONG BaselineSystemTimeQpc;ULONGLONG BaselineInterruptTimeQpc;ULONGLONG QpcSystemTimeIncrement;ULONGLONG QpcInterruptTimeIncrement;ULONG QpcSystemTimeIncrement32;ULONG QpcInterruptTimeIncrement32;UCHAR QpcSystemTimeIncrementShift;UCHAR QpcInterruptTimeIncrementShift;UCHAR Reserved8[14];USHORT UserModeGlobalLogger[16];ULONG ImageFileExecutionOptions;ULONG LangGenerationCount;ULONGLONG Reserved4;ULONGLONG InterruptTimeBias;ULONGLONG TscQpcBias;ULONG ActiveProcessorCount;UCHAR ActiveGroupCount;UCHAR Reserved9;union {USHORT TscQpcData;_KUSER_SHARED_DATA___E012BA1FCB959C5ACB245290F5960DFD___E80489C3E818F50385E1FFEB85439BB9 __anonymous1;};LARGE_INTEGER TimeZoneBiasEffectiveStart;LARGE_INTEGER TimeZoneBiasEffectiveEnd;XSTATE_CONFIGURATION XState;};
struct _NDIS_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_MEDIUM MediaType;NDIS_PHYSICAL_MEDIUM PhysicalMediumType;ULONG MtuSize;ULONG64 MaxXmitLinkSpeed;ULONG64 XmitLinkSpeed;ULONG64 MaxRcvLinkSpeed;ULONG64 RcvLinkSpeed;NDIS_MEDIA_CONNECT_STATE MediaConnectState;NDIS_MEDIA_DUPLEX_STATE MediaDuplexState;ULONG LookaheadSize;PNDIS_PNP_CAPABILITIES PowerManagementCapabilities;ULONG MacOptions;ULONG SupportedPacketFilters;ULONG MaxMulticastListSize;USHORT MacAddressLength;UCHAR PermanentMacAddress[32];UCHAR CurrentMacAddress[32];PNDIS_RECEIVE_SCALE_CAPABILITIES RecvScaleCapabilities;NET_IF_ACCESS_TYPE AccessType;NET_IF_DIRECTION_TYPE DirectionType;NET_IF_CONNECTION_TYPE ConnectionType;NET_IFTYPE IfType;BOOLEAN IfConnectorPresent;ULONG SupportedStatistics;ULONG SupportedPauseFunctions;ULONG DataBackFillSize;ULONG ContextBackFillSize;PNDIS_OID SupportedOidList;ULONG SupportedOidListLength;ULONG AutoNegotiationFlags;PNDIS_PM_CAPABILITIES PowerManagementCapabilitiesEx;};
struct _NDIS_FILTER_ATTACH_PARAMETERS {NDIS_OBJECT_HEADER Header;NET_IFINDEX IfIndex;NET_LUID NetLuid;PNDIS_STRING FilterModuleGuidName;NET_IFINDEX BaseMiniportIfIndex;PNDIS_STRING BaseMiniportInstanceName;PNDIS_STRING BaseMiniportName;NDIS_MEDIA_CONNECT_STATE MediaConnectState;NET_IF_MEDIA_DUPLEX_STATE MediaDuplexState;ULONG64 XmitLinkSpeed;ULONG64 RcvLinkSpeed;NDIS_MEDIUM MiniportMediaType;NDIS_PHYSICAL_MEDIUM MiniportPhysicalMediaType;NDIS_HANDLE MiniportMediaSpecificAttributes;PNDIS_OFFLOAD DefaultOffloadConfiguration;USHORT MacAddressLength;UCHAR CurrentMacAddress[32];NET_LUID BaseMiniportNetLuid;NET_IFINDEX LowerIfIndex;NET_LUID LowerIfNetLuid;ULONG Flags;PNDIS_HD_SPLIT_CURRENT_CONFIG HDSplitCurrentConfig;PNDIS_RECEIVE_FILTER_CAPABILITIES ReceiveFilterCapabilities;PDEVICE_OBJECT MiniportPhysicalDeviceObject;PNDIS_NIC_SWITCH_CAPABILITIES NicSwitchCapabilities;};
struct _HDAUDIO_BUS_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PTRANSFER_CODEC_VERBS TransferCodecVerbs;PALLOCATE_CAPTURE_DMA_ENGINE AllocateCaptureDmaEngine;PALLOCATE_RENDER_DMA_ENGINE AllocateRenderDmaEngine;PCHANGE_BANDWIDTH_ALLOCATION ChangeBandwidthAllocation;PALLOCATE_DMA_BUFFER AllocateDmaBuffer;PFREE_DMA_BUFFER FreeDmaBuffer;PFREE_DMA_ENGINE FreeDmaEngine;PSET_DMA_ENGINE_STATE SetDmaEngineState;PGET_WALL_CLOCK_REGISTER GetWallClockRegister;PGET_LINK_POSITION_REGISTER GetLinkPositionRegister;PREGISTER_EVENT_CALLBACK RegisterEventCallback;PUNREGISTER_EVENT_CALLBACK UnregisterEventCallback;PGET_DEVICE_INFORMATION GetDeviceInformation;PGET_RESOURCE_INFORMATION GetResourceInformation;};
struct IMiniportWavePciVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *GetDescription)(INTERFACE *This, PPCFILTER_DESCRIPTOR *Description);NTSTATUS ( *DataRangeIntersection)(INTERFACE *This, ULONG PinId, PKSDATARANGE DataRange, PKSDATARANGE MatchingDataRange, ULONG OutputBufferLength, PVOID ResultantFormat, PULONG ResultantFormatLength);NTSTATUS ( *Init)(INTERFACE *This, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList, PPORTWAVEPCI Port, PSERVICEGROUP *ServiceGroup);NTSTATUS ( *NewStream)(INTERFACE *This, PMINIPORTWAVEPCISTREAM *Stream, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, PPORTWAVEPCISTREAM PortStream, ULONG Pin, BOOLEAN Capture, PKSDATAFORMAT DataFormat, PDMACHANNEL *DmaChannel, PSERVICEGROUP *ServiceGroup);void ( *Service)(INTERFACE *This);};
struct _HDAUDIO_BUS_INTERFACE_BDL {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PTRANSFER_CODEC_VERBS TransferCodecVerbs;PALLOCATE_CAPTURE_DMA_ENGINE AllocateCaptureDmaEngine;PALLOCATE_RENDER_DMA_ENGINE AllocateRenderDmaEngine;PCHANGE_BANDWIDTH_ALLOCATION ChangeBandwidthAllocation;PALLOCATE_CONTIGUOUS_DMA_BUFFER AllocateContiguousDmaBuffer;PSETUP_DMA_ENGINE_WITH_BDL SetupDmaEngineWithBdl;PFREE_CONTIGUOUS_DMA_BUFFER FreeContiguousDmaBuffer;PFREE_DMA_ENGINE FreeDmaEngine;PSET_DMA_ENGINE_STATE SetDmaEngineState;PGET_WALL_CLOCK_REGISTER GetWallClockRegister;PGET_LINK_POSITION_REGISTER GetLinkPositionRegister;PREGISTER_EVENT_CALLBACK RegisterEventCallback;PUNREGISTER_EVENT_CALLBACK UnregisterEventCallback;PGET_DEVICE_INFORMATION GetDeviceInformation;PGET_RESOURCE_INFORMATION GetResourceInformation;};
struct IPortWaveCyclicVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS ( *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS ( *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);void ( *Notify)(INTERFACE *This, PSERVICEGROUP ServiceGroup);NTSTATUS ( *NewSlaveDmaChannel)(INTERFACE *This, PDMACHANNELSLAVE *DmaChannel, PUNKNOWN OuterUnknown, PRESOURCELIST ResourceList, ULONG DmaIndex, ULONG MaximumLength, BOOLEAN DemandMode, DMA_SPEED DmaSpeed);NTSTATUS ( *NewMasterDmaChannel)(INTERFACE *This, PDMACHANNEL *DmaChannel, PUNKNOWN OuterUnknown, PRESOURCELIST ResourceList, ULONG MaximumLength, BOOLEAN Dma32BitAddresses, BOOLEAN Dma64BitAddresses, DMA_WIDTH DmaWidth, DMA_SPEED DmaSpeed);};
struct IPortWavePciVtbl {NTSTATUS ( *QueryInterface)(INTERFACE *This,  IID * InterfaceId, PVOID *Interface);ULONG ( *AddRef)(INTERFACE *This);ULONG ( *Release)(INTERFACE *This);NTSTATUS ( *Init)(INTERFACE *This, PDEVICE_OBJECT DeviceObject, PIRP Irp, PUNKNOWN UnknownMiniport, PUNKNOWN UnknownAdapter, PRESOURCELIST ResourceList);NTSTATUS ( *GetDeviceProperty)(INTERFACE *This, DEVICE_REGISTRY_PROPERTY DeviceProperty, ULONG BufferLength, PVOID PropertyBuffer, PULONG ResultLength);NTSTATUS ( *NewRegistryKey)(INTERFACE *This, PREGISTRYKEY *OutRegistryKey, PUNKNOWN OuterUnknown, ULONG RegistryKeyType, ACCESS_MASK DesiredAccess, POBJECT_ATTRIBUTES ObjectAttributes, ULONG CreateOptions, PULONG Disposition);void ( *Notify)(INTERFACE *This, PSERVICEGROUP ServiceGroup);NTSTATUS ( *NewMasterDmaChannel)(INTERFACE *This, PDMACHANNEL *OutDmaChannel, PUNKNOWN OuterUnknown, POOL_TYPE PoolType, PRESOURCELIST ResourceList, BOOLEAN ScatterGather, BOOLEAN Dma32BitAddresses, BOOLEAN Dma64BitAddresses, BOOLEAN IgnoreCount, DMA_WIDTH DmaWidth, DMA_SPEED DmaSpeed, ULONG MaximumLength, ULONG DmaPort);};
struct _AGP_BUS_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID AgpContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;ULONG Capabilities;PAGP_BUS_RESERVE_MEMORY ReserveMemory;PAGP_BUS_RELEASE_MEMORY ReleaseMemory;PAGP_BUS_COMMIT_MEMORY CommitMemory;PAGP_BUS_FREE_MEMORY FreeMemory;PAGP_GET_MAPPED_PAGES GetMappedPages;PAGP_BUS_SET_RATE SetRate;SIZE_T AgpSize;PHYSICAL_ADDRESS AgpBase;PHYSICAL_ADDRESS MaxPhysicalAddress;PAGP_MAP_MEMORY MapMemory;PAGP_UNMAP_MEMORY UnMapMemory;PAGP_FLUSH_CHIPSET_CACHES FlushChipsetCaches;PAGP_CHECK_INTEGRITY CheckIntegrity;PAGP_MAP_MEMORY_EX MapMemoryEx;PAGP_UNMAP_MEMORY_EX UnMapMemoryEx;PAGP_FLUSH_GART_TLB FlushGartTLB;PAGP_CHECK_GUARD_PAGE CheckGuardPage;PAGP_GET_INFO GetAgpInfo;};
struct _HDAUDIO_BUS_INTERFACE_V2 {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PTRANSFER_CODEC_VERBS TransferCodecVerbs;PALLOCATE_CAPTURE_DMA_ENGINE AllocateCaptureDmaEngine;PALLOCATE_RENDER_DMA_ENGINE AllocateRenderDmaEngine;PCHANGE_BANDWIDTH_ALLOCATION ChangeBandwidthAllocation;PALLOCATE_DMA_BUFFER AllocateDmaBuffer;PFREE_DMA_BUFFER FreeDmaBuffer;PFREE_DMA_ENGINE FreeDmaEngine;PSET_DMA_ENGINE_STATE SetDmaEngineState;PGET_WALL_CLOCK_REGISTER GetWallClockRegister;PGET_LINK_POSITION_REGISTER GetLinkPositionRegister;PREGISTER_EVENT_CALLBACK RegisterEventCallback;PUNREGISTER_EVENT_CALLBACK UnregisterEventCallback;PGET_DEVICE_INFORMATION GetDeviceInformation;PGET_RESOURCE_INFORMATION GetResourceInformation;PALLOCATE_DMA_BUFFER_WITH_NOTIFICATION AllocateDmaBufferWithNotification;PFREE_DMA_BUFFER_WITH_NOTIFICATION FreeDmaBufferWithNotification;PREGISTER_NOTIFICATION_EVENT RegisterNotificationEvent;PUNREGISTER_NOTIFICATION_EVENT UnregisterNotificationEvent;};
union _AV_61883_REQUEST___F219298361C97389521033D921298EFE {GET_UNIT_INFO GetUnitInfo;SET_UNIT_INFO SetUnitInfo;CMP_GET_PLUG_HANDLE GetPlugHandle;CMP_GET_PLUG_STATE GetPlugState;CMP_CONNECT Connect;CMP_DISCONNECT Disconnect;CIP_ATTACH_FRAME AttachFrame;CIP_CANCEL_FRAME CancelFrame;CIP_TALK Talk;CIP_LISTEN Listen;CIP_STOP Stop;FCP_REQUEST Request;FCP_RESPONSE Response;FCP_SEND_REQUEST SendRequest;FCP_GET_RESPONSE GetResponse;FCP_GET_REQUEST GetRequest;FCP_SEND_RESPONSE SendResponse;SET_FCP_NOTIFY SetFcpNotify;CMP_CREATE_PLUG CreatePlug;CMP_DELETE_PLUG DeletePlug;CMP_SET_PLUG SetPlug;BUS_RESET_NOTIFY BusResetNotify;SET_UNIT_DIRECTORY SetUnitDirectory;CMP_MONITOR_PLUGS MonitorPlugs;};
struct _BTHDDI_SDP_NODE_INTERFACE {INTERFACE Interface;PCREATENODETREEROOT SdpCreateNodeTree;PFREETREE SdpFreeTree;PCREATENODENIL SdpCreateNodeNil;PCREATENODEBOOLEAN SdpCreateNodeBoolean;PCREATENODEUINT8 SdpCreateNodeUint8;PCREATENODEUINT16 SdpCreateNodeUint16;PCREATENODEUINT32 SdpCreateNodeUint32;PCREATENODEUINT64 SdpCreateNodeUint64;PCREATENODEUINT128 SdpCreateNodeUint128;PCREATENODEINT8 SdpCreateNodeInt8;PCREATENODEINT16 SdpCreateNodeInt16;PCREATENODEINT32 SdpCreateNodeInt32;PCREATENODEINT64 SdpCreateNodeInt64;PCREATENODEINT128 SdpCreateNodeInt128;PCREATENODEUUID16 SdpCreateNodeUuid16;PCREATENODEUUID32 SdpCreateNodeUuid32;PCREATENODEUUID128 SdpCreateNodeUuid128;PCREATENODESTRING SdpCreateNodeString;PCREATENODEURL SdpCreateNodeUrl;PCREATENODEALTERNATIVE SdpCreateNodeAlternative;PCREATENODESEQUENCE SdpCreateNodeSequence;PADDATTRIBUTETOTREEE SdpAddAttributeToTree;PAPPENDNODETOCONTAINERNODE SdpAppendNodeToContainerNode;};
struct _SECURITY_FUNCTION_TABLE_W {unsigned int dwVersion;ENUMERATE_SECURITY_PACKAGES_FN_W EnumerateSecurityPackagesW;QUERY_CREDENTIALS_ATTRIBUTES_FN_W QueryCredentialsAttributesW;ACQUIRE_CREDENTIALS_HANDLE_FN_W AcquireCredentialsHandleW;FREE_CREDENTIALS_HANDLE_FN FreeCredentialsHandle;void *Reserved2;INITIALIZE_SECURITY_CONTEXT_FN_W InitializeSecurityContextW;ACCEPT_SECURITY_CONTEXT_FN AcceptSecurityContext;COMPLETE_AUTH_TOKEN_FN CompleteAuthToken;DELETE_SECURITY_CONTEXT_FN DeleteSecurityContext;APPLY_CONTROL_TOKEN_FN ApplyControlToken;QUERY_CONTEXT_ATTRIBUTES_FN_W QueryContextAttributesW;IMPERSONATE_SECURITY_CONTEXT_FN ImpersonateSecurityContext;REVERT_SECURITY_CONTEXT_FN RevertSecurityContext;MAKE_SIGNATURE_FN MakeSignature;VERIFY_SIGNATURE_FN VerifySignature;FREE_CONTEXT_BUFFER_FN FreeContextBuffer;QUERY_SECURITY_PACKAGE_INFO_FN_W QuerySecurityPackageInfoW;void *Reserved3;void *Reserved4;EXPORT_SECURITY_CONTEXT_FN ExportSecurityContext;IMPORT_SECURITY_CONTEXT_FN_W ImportSecurityContextW;ADD_CREDENTIALS_FN_W AddCredentialsW;void *Reserved8;QUERY_SECURITY_CONTEXT_TOKEN_FN QuerySecurityContextToken;ENCRYPT_MESSAGE_FN EncryptMessage;DECRYPT_MESSAGE_FN DecryptMessage;SET_CONTEXT_ATTRIBUTES_FN_W SetContextAttributesW;SET_CREDENTIALS_ATTRIBUTES_FN_W SetCredentialsAttributesW;void *Reserved9;};
struct _IDENTIFY_DEVICE_DATA {struct _IDENTIFY_DEVICE_DATA___225B350560ECC59032D39E74312893EB GeneralConfiguration;USHORT NumCylinders;USHORT SpecificConfiguration;USHORT NumHeads;USHORT Retired1[2];USHORT NumSectorsPerTrack;USHORT VendorUnique1[3];UCHAR SerialNumber[20];USHORT Retired2[2];USHORT Obsolete1;UCHAR FirmwareRevision[8];UCHAR ModelNumber[40];UCHAR MaximumBlockTransfer;UCHAR VendorUnique2;struct _IDENTIFY_DEVICE_DATA___203C4FAE0BDA73D274908785397D9C03 TrustedComputing;struct _IDENTIFY_DEVICE_DATA___7F7924F5455EF74EEF944BAF2D1B53E0 Capabilities;USHORT ObsoleteWords51[2];unsigned short TranslationFieldsValid : 3;unsigned short Reserved3 : 5;unsigned short FreeFallControlSensitivity : 8;USHORT NumberOfCurrentCylinders;USHORT NumberOfCurrentHeads;USHORT CurrentSectorsPerTrack;ULONG CurrentSectorCapacity;UCHAR CurrentMultiSectorSetting;unsigned char MultiSectorSettingValid : 1;unsigned char ReservedByte59 : 3;unsigned char SanitizeFeatureSupported : 1;unsigned char CryptoScrambleExtCommandSupported : 1;unsigned char OverwriteExtCommandSupported : 1;unsigned char BlockEraseExtCommandSupported : 1;ULONG UserAddressableSectors;USHORT ObsoleteWord62;unsigned short MultiWordDMASupport : 8;unsigned short MultiWordDMAActive : 8;unsigned short AdvancedPIOModes : 8;unsigned short ReservedByte64 : 8;USHORT MinimumMWXferCycleTime;USHORT RecommendedMWXferCycleTime;USHORT MinimumPIOCycleTime;USHORT MinimumPIOCycleTimeIORDY;struct _IDENTIFY_DEVICE_DATA___AE3BDDA92CBEF5805BC8903A20EBBF23 AdditionalSupported;USHORT ReservedWords70[5];unsigned short QueueDepth : 5;unsigned short ReservedWord75 : 11;struct _IDENTIFY_DEVICE_DATA___12A4342928D94AECC3A43EA0575FBAB8 SerialAtaCapabilities;struct _IDENTIFY_DEVICE_DATA___C42486ED998A28B0E7112D29F2C90329 SerialAtaFeaturesSupported;struct _IDENTIFY_DEVICE_DATA___14E40EC7098BD326031AA650FE1DB3FE SerialAtaFeaturesEnabled;USHORT MajorRevision;USHORT MinorRevision;struct _IDENTIFY_DEVICE_DATA___87ABCA1EF46434BB0666B0A3893466BC CommandSetSupport;struct _IDENTIFY_DEVICE_DATA___8AC509BE06BC544968FA4DB93AEBE278 CommandSetActive;unsigned short UltraDMASupport : 8;unsigned short UltraDMAActive : 8;struct _IDENTIFY_DEVICE_DATA___7ADADD728B0146E8D9DFD8DADFF2A168 NormalSecurityEraseUnit;struct _IDENTIFY_DEVICE_DATA___7ADADD728B0146E8D9DFD8DADFF2A168 EnhancedSecurityEraseUnit;unsigned short CurrentAPMLevel : 8;unsigned short ReservedWord91 : 8;USHORT MasterPasswordID;USHORT HardwareResetResult;unsigned short CurrentAcousticValue : 8;unsigned short RecommendedAcousticValue : 8;USHORT StreamMinRequestSize;USHORT StreamingTransferTimeDMA;USHORT StreamingAccessLatencyDMAPIO;ULONG StreamingPerfGranularity;ULONG Max48BitLBA[2];USHORT StreamingTransferTime;USHORT DsmCap;struct _IDENTIFY_DEVICE_DATA___08E70F6BE1BD6D9A212D4A1690DDFD0C PhysicalLogicalSectorSize;USHORT InterSeekDelay;USHORT WorldWideName[4];USHORT ReservedForWorldWideName128[4];USHORT ReservedForTlcTechnicalReport;USHORT WordsPerLogicalSector[2];struct _IDENTIFY_DEVICE_DATA___192FB275A46403967D21DE7FA554A203 CommandSetSupportExt;struct _IDENTIFY_DEVICE_DATA___AF56F38A6D7AB42A96A48238551AF768 CommandSetActiveExt;USHORT ReservedForExpandedSupportandActive[6];unsigned short MsnSupport : 2;unsigned short ReservedWord127 : 14;struct _IDENTIFY_DEVICE_DATA___8AD45ED998F239B9E15610B6B0046E61 SecurityStatus;USHORT ReservedWord129[31];struct _IDENTIFY_DEVICE_DATA___D62E39E1BA2C739F9147BD3FDBA79656 CfaPowerMode1;USHORT ReservedForCfaWord161[7];unsigned short NominalFormFactor : 4;unsigned short ReservedWord168 : 12;struct _IDENTIFY_DEVICE_DATA___73BF718C0A16827ACF4BCCDC8FE0AB80 DataSetManagementFeature;USHORT AdditionalProductID[4];USHORT ReservedForCfaWord174[2];USHORT CurrentMediaSerialNumber[30];struct _IDENTIFY_DEVICE_DATA___70D97C1CA81047AA3A5C5FF02FCAA482 SCTCommandTransport;USHORT ReservedWord207[2];struct _IDENTIFY_DEVICE_DATA___1BE366EA36C6384A30F12CF34356AF9F BlockAlignment;USHORT WriteReadVerifySectorCountMode3Only[2];USHORT WriteReadVerifySectorCountMode2Only[2];struct _IDENTIFY_DEVICE_DATA___AF4503D6E1C5D8B2587D3FEE3C5AA5B3 NVCacheCapabilities;USHORT NVCacheSizeLSW;USHORT NVCacheSizeMSW;USHORT NominalMediaRotationRate;USHORT ReservedWord218;struct _IDENTIFY_DEVICE_DATA___5E4194840947852D208055E7E36F6DE0 NVCacheOptions;unsigned short WriteReadVerifySectorCountMode : 8;unsigned short ReservedWord220 : 8;USHORT ReservedWord221;struct _IDENTIFY_DEVICE_DATA___7580C65F02C015112FE06020CA159734 TransportMajorVersion;USHORT TransportMinorVersion;USHORT ReservedWord224[6];ULONG ExtendedNumberOfUserAddressableSectors[2];USHORT MinBlocksPerDownloadMicrocodeMode03;USHORT MaxBlocksPerDownloadMicrocodeMode03;USHORT ReservedWord236[19];unsigned short Signature : 8;unsigned short CheckSum : 8;};
struct _NDIS_BIND_PARAMETERS {NDIS_OBJECT_HEADER Header;PNDIS_STRING ProtocolSection;PNDIS_STRING AdapterName;PDEVICE_OBJECT PhysicalDeviceObject;NDIS_MEDIUM MediaType;ULONG MtuSize;ULONG64 MaxXmitLinkSpeed;ULONG64 XmitLinkSpeed;ULONG64 MaxRcvLinkSpeed;ULONG64 RcvLinkSpeed;NDIS_MEDIA_CONNECT_STATE MediaConnectState;NDIS_MEDIA_DUPLEX_STATE MediaDuplexState;ULONG LookaheadSize;PNDIS_PNP_CAPABILITIES PowerManagementCapabilities;ULONG SupportedPacketFilters;ULONG MaxMulticastListSize;USHORT MacAddressLength;UCHAR CurrentMacAddress[32];NDIS_PHYSICAL_MEDIUM PhysicalMediumType;PNDIS_RECEIVE_SCALE_CAPABILITIES RcvScaleCapabilities;NET_LUID BoundIfNetluid;NET_IFINDEX BoundIfIndex;NET_LUID LowestIfNetluid;NET_IFINDEX LowestIfIndex;NET_IF_ACCESS_TYPE AccessType;NET_IF_DIRECTION_TYPE DirectionType;NET_IF_CONNECTION_TYPE ConnectionType;NET_IFTYPE IfType;BOOLEAN IfConnectorPresent;PNDIS_PORT ActivePorts;ULONG DataBackFillSize;ULONG ContextBackFillSize;ULONG MacOptions;NET_IF_COMPARTMENT_ID CompartmentId;PNDIS_OFFLOAD DefaultOffloadConfiguration;PNDIS_TCP_CONNECTION_OFFLOAD TcpConnectionOffloadCapabilities;PNDIS_STRING BoundAdapterName;PNDIS_HD_SPLIT_CURRENT_CONFIG HDSplitCurrentConfig;PNDIS_RECEIVE_FILTER_CAPABILITIES ReceiveFilterCapabilities;PNDIS_PM_CAPABILITIES PowerManagementCapabilitiesEx;PNDIS_NIC_SWITCH_CAPABILITIES NicSwitchCapabilities;};
struct _FUNCTIONAL_DEVICE_EXTENSION {_FUNCTIONAL_DEVICE_EXTENSION___50C61D085A2F906BF66460A0C351E861 __anonymous0;PDEVICE_OBJECT LowerPdo;PSTORAGE_DEVICE_DESCRIPTOR DeviceDescriptor;PSTORAGE_ADAPTER_DESCRIPTOR AdapterDescriptor;DEVICE_POWER_STATE DevicePowerState;ULONG DMByteSkew;ULONG DMSkew;BOOLEAN DMActive;UCHAR SenseDataLength;UCHAR Reserved0[2];DISK_GEOMETRY DiskGeometry;PSENSE_DATA SenseData;ULONG TimeOutValue;ULONG DeviceNumber;ULONG SrbFlags;ULONG ErrorCount;LONG LockCount;LONG ProtectedLockCount;LONG InternalLockCount;KEVENT EjectSynchronizationEvent;USHORT DeviceFlags;UCHAR SectorShift;UCHAR CdbForceUnitAccess;PMEDIA_CHANGE_DETECTION_INFO MediaChangeDetectionInfo;PKEVENT Unused1;HANDLE Unused2;FILE_OBJECT_EXTENSION KernelModeMcnContext;ULONG MediaChangeCount;HANDLE DeviceDirectory;KSPIN_LOCK ReleaseQueueSpinLock;PIRP ReleaseQueueIrp;SCSI_REQUEST_BLOCK ReleaseQueueSrb;BOOLEAN ReleaseQueueNeeded;BOOLEAN ReleaseQueueInProgress;BOOLEAN ReleaseQueueIrpFromPool;BOOLEAN FailurePredicted;ULONG FailureReason;PFAILURE_PREDICTION_INFO FailurePredictionInfo;BOOLEAN PowerDownInProgress;ULONG EnumerationInterlock;KEVENT ChildLock;PKTHREAD ChildLockOwner;ULONG ChildLockAcquisitionCount;ULONG ScanForSpecialFlags;KDPC PowerRetryDpc;KTIMER PowerRetryTimer;CLASS_POWER_CONTEXT PowerContext;PCLASS_PRIVATE_FDO_DATA PrivateFdoData;PCLASS_FUNCTION_SUPPORT_INFO FunctionSupportInfo;PSTORAGE_MINIPORT_DESCRIPTOR MiniportDescriptor;ULONG_PTR Reserved4;};
union _IRB___09A81769302A491E6411F5F4C2220811 {IRB_REQ_ASYNC_READ AsyncRead;IRB_REQ_ASYNC_WRITE AsyncWrite;IRB_REQ_ASYNC_LOCK AsyncLock;IRB_REQ_ISOCH_ALLOCATE_BANDWIDTH IsochAllocateBandwidth;IRB_REQ_ISOCH_ALLOCATE_CHANNEL IsochAllocateChannel;IRB_REQ_ISOCH_ALLOCATE_RESOURCES IsochAllocateResources;IRB_REQ_ISOCH_ATTACH_BUFFERS IsochAttachBuffers;IRB_REQ_ISOCH_DETACH_BUFFERS IsochDetachBuffers;IRB_REQ_ISOCH_FREE_BANDWIDTH IsochFreeBandwidth;IRB_REQ_ISOCH_FREE_CHANNEL IsochFreeChannel;IRB_REQ_ISOCH_FREE_RESOURCES IsochFreeResources;IRB_REQ_ISOCH_LISTEN IsochListen;IRB_REQ_ISOCH_QUERY_CURRENT_CYCLE_TIME IsochQueryCurrentCycleTime;IRB_REQ_ISOCH_QUERY_RESOURCES IsochQueryResources;IRB_REQ_ISOCH_SET_CHANNEL_BANDWIDTH IsochSetChannelBandwidth;IRB_REQ_ISOCH_STOP IsochStop;IRB_REQ_ISOCH_TALK IsochTalk;IRB_REQ_ISOCH_MODIFY_STREAM_PROPERTIES IsochModifyStreamProperties;IRB_REQ_ALLOCATE_ADDRESS_RANGE AllocateAddressRange;IRB_REQ_FREE_ADDRESS_RANGE FreeAddressRange;IRB_REQ_GET_LOCAL_HOST_INFORMATION GetLocalHostInformation;IRB_REQ_GET_1394_ADDRESS_FROM_DEVICE_OBJECT Get1394AddressFromDeviceObject;IRB_REQ_CONTROL Control;IRB_REQ_GET_MAX_SPEED_BETWEEN_DEVICES GetMaxSpeedBetweenDevices;IRB_REQ_SET_DEVICE_XMIT_PROPERTIES SetDeviceXmitProperties;IRB_REQ_SET_LOCAL_HOST_PROPERTIES SetLocalHostProperties;IRB_REQ_GET_CONFIGURATION_INFORMATION GetConfigurationInformation;IRB_REQ_GET_CONFIG_ROM GetConfigRom;IRB_REQ_BUS_RESET BusReset;IRB_REQ_GET_GENERATION_COUNT GetGenerationCount;IRB_REQ_SEND_PHY_CONFIGURATION_PACKET SendPhyConfigurationPacket;IRB_REQ_SEND_PHY_PACKET SendPhyPacket;IRB_REQ_RECEIVE_PHY_PACKETS ReceivePhyPackets;IRB_REQ_GET_SPEED_TOPOLOGY_MAPS GetSpeedTopologyMaps;IRB_REQ_BUS_RESET_NOTIFICATION BusResetNotification;IRB_REQ_ASYNC_STREAM AsyncStream;};
union _CDB {struct _CDB___CDB6GENERIC CDB6GENERIC;struct _CDB___CDB6READWRITE CDB6READWRITE;struct _CDB___CDB6INQUIRY CDB6INQUIRY;struct _CDB___CDB6INQUIRY3 CDB6INQUIRY3;struct _CDB___CDB6VERIFY CDB6VERIFY;struct _CDB___CDB6FORMAT CDB6FORMAT;struct _CDB___CDB10 CDB10;struct _CDB___CDB12 CDB12;struct _CDB___CDB16 CDB16;struct _CDB___SECURITY_PROTOCOL_IN SECURITY_PROTOCOL_IN;struct _CDB___SECURITY_PROTOCOL_OUT SECURITY_PROTOCOL_OUT;struct _CDB___UNMAP UNMAP;struct _CDB___PAUSE_RESUME PAUSE_RESUME;struct _CDB___READ_TOC READ_TOC;struct _CDB___READ_DISK_INFORMATION READ_DISK_INFORMATION;struct _CDB___READ_DISK_INFORMATION READ_DISC_INFORMATION;struct _CDB___READ_TRACK_INFORMATION READ_TRACK_INFORMATION;struct _CDB___RESERVE_TRACK_RZONE RESERVE_TRACK_RZONE;struct _CDB___SEND_OPC_INFORMATION SEND_OPC_INFORMATION;struct _CDB___REPAIR_TRACK REPAIR_TRACK;struct _CDB___CLOSE_TRACK CLOSE_TRACK;struct _CDB___READ_BUFFER_CAPACITY READ_BUFFER_CAPACITY;struct _CDB___SEND_CUE_SHEET SEND_CUE_SHEET;struct _CDB___READ_HEADER READ_HEADER;struct _CDB___PLAY_AUDIO PLAY_AUDIO;struct _CDB___PLAY_AUDIO_MSF PLAY_AUDIO_MSF;struct _CDB___BLANK_MEDIA BLANK_MEDIA;struct _CDB___PLAY_CD PLAY_CD;struct _CDB___SCAN_CD SCAN_CD;struct _CDB___STOP_PLAY_SCAN STOP_PLAY_SCAN;struct _CDB___SUBCHANNEL SUBCHANNEL;struct _CDB___READ_CD READ_CD;struct _CDB___READ_CD_MSF READ_CD_MSF;struct _CDB___PLXTR_READ_CDDA PLXTR_READ_CDDA;struct _CDB___NEC_READ_CDDA NEC_READ_CDDA;struct _CDB___MODE_SENSE MODE_SENSE;struct _CDB___MODE_SENSE10 MODE_SENSE10;struct _CDB___MODE_SELECT MODE_SELECT;struct _CDB___MODE_SELECT10 MODE_SELECT10;struct _CDB___LOCATE LOCATE;struct _CDB___LOGSENSE LOGSENSE;struct _CDB___LOGSELECT LOGSELECT;struct _CDB___PRINT PRINT;struct _CDB___SEEK SEEK;struct _CDB___ERASE ERASE;struct _CDB___START_STOP START_STOP;struct _CDB___MEDIA_REMOVAL MEDIA_REMOVAL;struct _CDB___SEEK_BLOCK SEEK_BLOCK;struct _CDB___REQUEST_BLOCK_ADDRESS REQUEST_BLOCK_ADDRESS;struct _CDB___PARTITION PARTITION;struct _CDB___WRITE_TAPE_MARKS WRITE_TAPE_MARKS;struct _CDB___SPACE_TAPE_MARKS SPACE_TAPE_MARKS;struct _CDB___READ_POSITION READ_POSITION;struct _CDB___CDB6READWRITETAPE CDB6READWRITETAPE;struct _CDB___INIT_ELEMENT_STATUS INIT_ELEMENT_STATUS;struct _CDB___INITIALIZE_ELEMENT_RANGE INITIALIZE_ELEMENT_RANGE;struct _CDB___POSITION_TO_ELEMENT POSITION_TO_ELEMENT;struct _CDB___MOVE_MEDIUM MOVE_MEDIUM;struct _CDB___EXCHANGE_MEDIUM EXCHANGE_MEDIUM;struct _CDB___READ_ELEMENT_STATUS READ_ELEMENT_STATUS;struct _CDB___SEND_VOLUME_TAG SEND_VOLUME_TAG;struct _CDB___REQUEST_VOLUME_ELEMENT_ADDRESS REQUEST_VOLUME_ELEMENT_ADDRESS;struct _CDB___LOAD_UNLOAD LOAD_UNLOAD;struct _CDB___MECH_STATUS MECH_STATUS;struct _CDB___SYNCHRONIZE_CACHE10 SYNCHRONIZE_CACHE10;struct _CDB___GET_EVENT_STATUS_NOTIFICATION GET_EVENT_STATUS_NOTIFICATION;struct _CDB___GET_PERFORMANCE GET_PERFORMANCE;struct _CDB___READ_DVD_STRUCTURE READ_DVD_STRUCTURE;struct _CDB___SET_STREAMING SET_STREAMING;struct _CDB___SEND_DVD_STRUCTURE SEND_DVD_STRUCTURE;struct _CDB___SEND_KEY SEND_KEY;struct _CDB___REPORT_KEY REPORT_KEY;struct _CDB___SET_READ_AHEAD SET_READ_AHEAD;struct _CDB___READ_FORMATTED_CAPACITIES READ_FORMATTED_CAPACITIES;struct _CDB___REPORT_LUNS REPORT_LUNS;struct _CDB___PERSISTENT_RESERVE_IN PERSISTENT_RESERVE_IN;struct _CDB___PERSISTENT_RESERVE_OUT PERSISTENT_RESERVE_OUT;struct _CDB___GET_CONFIGURATION GET_CONFIGURATION;struct _CDB___SET_CD_SPEED SET_CD_SPEED;struct _CDB___READ12 READ12;struct _CDB___WRITE12 WRITE12;struct _CDB___ATA_PASSTHROUGH12 ATA_PASSTHROUGH12;struct _CDB___READ16 READ16;struct _CDB___WRITE16 WRITE16;struct _CDB___VERIFY16 VERIFY16;struct _CDB___SYNCHRONIZE_CACHE16 SYNCHRONIZE_CACHE16;struct _CDB___READ_CAPACITY16 READ_CAPACITY16;struct _CDB___ATA_PASSTHROUGH16 ATA_PASSTHROUGH16;struct _CDB___GET_LBA_STATUS GET_LBA_STATUS;struct _CDB___TOKEN_OPERATION TOKEN_OPERATION;struct _CDB___RECEIVE_TOKEN_INFORMATION RECEIVE_TOKEN_INFORMATION;ULONG AsUlong[4];UCHAR AsByte[16];};
struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3___A449343E09C4C1546A59A24613FBC6AB {NDIS_HANDLE OffloadHandle;};
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___84F77B99EDFEAF462CCE796A4BAA8009 {D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId;};
struct _SCO_INDICATION_PARAMETERS______8C090F53DC32F6BA76ECAD738E355805___EC8174D427A0F5D70404B11229FCD192 {SCO_LINK_TYPE LinkType;};
struct _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12___8C090F53DC32F6BA76ECAD738E355805 {struct _SCO_INDICATION_PARAMETERS______8C090F53DC32F6BA76ECAD738E355805___EC8174D427A0F5D70404B11229FCD192 Request;};
union _DISPATCHER_HEADER_________3D88FD3E473BDC33E8E9B3C9823BBBAC___0721FA4078DC4A6AFEE1EA98BF9F2861 {BOOLEAN DebugActive;};
struct _IO_STACK_LOCATION_________A1B04431FB6E59C2D561338119C8AE61___5395532E35CA13A919E63C6E41FE24BB {BOOLEAN ReplaceIfExists;BOOLEAN AdvanceOnly;};
struct _IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5___D73A842DF02ECD359F5D4E8396DDC93E {IPAddr SrcAddr;IPAddr DestAddr;};
struct _HDAUDIO_CODEC_RESPONSE___C3E611620E2F089E1A23F35E3CB26325___EBA4BFB70B136AE598193DB3C50674E5 {_HDAUDIO_CODEC_RESPONSE______EBA4BFB70B136AE598193DB3C50674E5___F7A0B89072390A37182FF8981BAE8E57 __anonymous0;unsigned int SDataIn : 4;unsigned int IsUnsolicitedResponse : 1;unsigned int : 25;unsigned int HasFifoOverrun : 1;unsigned int IsValid : 1;};
struct _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6___A0285CA1D5BF0E1F2165CAF9E52CE46B {SIZE_T DeviceDescriptionOffset;SIZE_T DevicePathOffset;};
struct _DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5___C3F3147D4FCD8A6B6E889D916E43EB90 {BOOLEAN Connected;};
struct _FLT_PARAMETERS______5EC0DA9471CFCB1EC49AD6D2337964D2___5395532E35CA13A919E63C6E41FE24BB {BOOLEAN ReplaceIfExists;BOOLEAN AdvanceOnly;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___03E399533941020534C84F7B69BA6C0D {BUS_QUERY_ID_TYPE IdType;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___670710264263D47AAED285B3D8DDF250 {DEVICE_RELATION_TYPE Type;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___B225BF4DA8BD0649341E73B822EE9BDC {SYSTEM_POWER_STATE PowerState;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___CAFA629F92AFE900ACAC7E5B47418F4C {BOOLEAN Lock;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___03E399533941020534C84F7B69BA6C0D {BUS_QUERY_ID_TYPE IdType;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___670710264263D47AAED285B3D8DDF250 {DEVICE_RELATION_TYPE Type;};
struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___CAFA629F92AFE900ACAC7E5B47418F4C {BOOLEAN Lock;};
struct _NDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO___ACF360C69B9384F89E0440749D787BB1 {NDIS_HANDLE TunnelHandle;};
struct _FPDT_RECORD___0CC1B4B8637A0854707BAFDC0DDB0B75___28C7BCA5FED5513FD0BCEA9828806A17 {PHYSICAL_ADDRESS PhysicalAddress;};
struct _CLASS_FUNCTION_SUPPORT_INFO___CA87E02B5CCB4A8C12E403EBDC16A39C {CLASS_FUNCTION_SUPPORT SeekPenaltyProperty;CLASS_FUNCTION_SUPPORT AccessAlignmentProperty;CLASS_FUNCTION_SUPPORT TrimProperty;CLASS_FUNCTION_SUPPORT TrimProcess;};
struct _NETWORK_OPEN_ECP_CONTEXT_V0___05ECC70A33AA78360CE5BAA96286B27B {struct _NETWORK_OPEN_ECP_CONTEXT_V0___05ECC70A33AA78360CE5BAA96286B27B___A10C39190F0F2427004629954B88C2E8 in;struct _NETWORK_OPEN_ECP_CONTEXT_V0___05ECC70A33AA78360CE5BAA96286B27B___A10C39190F0F2427004629954B88C2E8 out;};
struct _GP_LOG_GENERAL_STATISTICS___1350F65D8D90970E4E3E116C40691EBE {unsigned long long TimeStamp : 48;unsigned long long Reserved : 8;unsigned long long ReservedFlags : 5;unsigned long long Normalized : 1;unsigned long long ValidValue : 1;unsigned long long Supported : 1;};
struct _NETWORK_OPEN_ECP_CONTEXT___4394467ED109257AE2A2394666F4A3B8 {struct _NETWORK_OPEN_ECP_CONTEXT___4394467ED109257AE2A2394666F4A3B8___2FC93A188CFE60146508D166162219FF in;struct _NETWORK_OPEN_ECP_CONTEXT___4394467ED109257AE2A2394666F4A3B8___2FC93A188CFE60146508D166162219FF out;};
union _HDAUDIO_CODEC_RESPONSE___C3E611620E2F089E1A23F35E3CB26325 {_HDAUDIO_CODEC_RESPONSE___C3E611620E2F089E1A23F35E3CB26325___EBA4BFB70B136AE598193DB3C50674E5 __anonymous0;unsigned long long CompleteResponse;};
union _NLB_PUBLIC_IOCTL_INPUT___A898DB159985FE167F7F53788BA32DF7 {struct _NLB_PUBLIC_IOCTL_INPUT___A898DB159985FE167F7F53788BA32DF7___DD4D914590692A0344DAA3E8E6A718EB ClientStickinessNotify;};
typedef DXGKDDI_STOP_DEVICE_AND_RELEASE_POST_DISPLAY_OWNERSHIP *PDXGKDDI_STOP_DEVICE_AND_RELEASE_POST_DISPLAY_OWNERSHIP;
union _DISK_DETECTION_INFO___48876EDB82F731E03DD8D988B59F7EB8 {struct _DISK_DETECTION_INFO___48876EDB82F731E03DD8D988B59F7EB8___C6895C4B5C301AAC9475EDA00CD39D51 s;};
union _STREAM_EXTENT_ENTRY___72E4D09D488BEF968C138C69BDFB0892 {RETRIEVAL_POINTERS_BUFFER RetrievalPointers;};
typedef DXGKDDI_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY *PDXGKDDI_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY;
union _IDE_REGISTERS_1___20B55380DF4C8B3DCEB19895FEFF6C05 {PUCHAR BlockCount;PUCHAR InterruptReason;};
union _IDE_REGISTERS_1___5BE01C1C87DC18EA931D2A1A4B00E24D {PUCHAR CylinderLow;PUCHAR ByteCountLow;};
union _IDE_REGISTERS_1___66A4CEBCA41C7F2F44834B6315F8F025 {PUCHAR Error;PUCHAR Features;};
union _IDE_REGISTERS_1___E03BE7A8061D78A453A4655D3BC8D71A {PUCHAR CylinderHigh;PUCHAR ByteCountHigh;};
struct _NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO {_NDIS_IPSEC_OFFLOAD_V2_HEADER_NET_BUFFER_LIST_INFO___B9297DBB8CF5CBA266019ABC33351B23 __anonymous0;};
struct _NDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO {struct _NDIS_IPSEC_OFFLOAD_V2_TUNNEL_NET_BUFFER_LIST_INFO___ACF360C69B9384F89E0440749D787BB1 Transmit;};
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {_PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY___2AA764CCAD4465B40EF2819DA8B429D2 __anonymous0;};
struct _NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO {_NDIS_TCP_LARGE_SEND_OFFLOAD_NET_BUFFER_LIST_INFO___D03E9B5F2DE4807C75B1852488C21F86 __anonymous0;};
typedef USB_BUSIFFN_SET_DEVICE_HANDLE_IDLE_READY_STATE *PUSB_BUSIFFN_SET_DEVICE_HANDLE_IDLE_READY_STATE;
union _FPDT_RECORD___0CC1B4B8637A0854707BAFDC0DDB0B75 {struct _FPDT_RECORD___0CC1B4B8637A0854707BAFDC0DDB0B75___28C7BCA5FED5513FD0BCEA9828806A17 S3TablePointer;struct _FPDT_RECORD___0CC1B4B8637A0854707BAFDC0DDB0B75___28C7BCA5FED5513FD0BCEA9828806A17 BasicBootPointer;};
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY {_PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY___8220F45EC4CA30F4B7BEFF9D32D9F1CE __anonymous0;};
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {_PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY___E355F55852CE4C01F070476D6F7C9BBB __anonymous0;};
typedef FILTER_SEND_NET_BUFFER_LISTS_COMPLETE *FILTER_SEND_NET_BUFFER_LISTS_COMPLETE_HANDLER;
typedef  D3DKMDT_VIDEO_PRESENT_SOURCE_MODE_ID IN_CONST_D3DKMDT_VIDEO_PRESENT_SOURCE_MODE_ID;
typedef  D3DKMDT_VIDEO_PRESENT_TARGET_MODE_ID IN_CONST_D3DKMDT_VIDEO_PRESENT_TARGET_MODE_ID;
typedef MINIPORT_PNP_IRP *MINIPORT_FILTER_RESOURCE_REQUIREMENTS_HANDLER;
typedef PO_FX_COMPONENT_CRITICAL_TRANSITION_CALLBACK *PPO_FX_COMPONENT_CRITICAL_TRANSITION_CALLBACK;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT {SAVEPOINT_ID SavepointId;};
struct _NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO {_NDIS_IPSEC_OFFLOAD_V2_NET_BUFFER_LIST_INFO___1A2784B2EDC77B2AC23B978311732A83 __anonymous0;};
typedef FILTER_DIRECT_OID_REQUEST_COMPLETE *FILTER_DIRECT_OID_REQUEST_COMPLETE_HANDLER;
typedef MINIPORT_CANCEL_DIRECT_OID_REQUEST *MINIPORT_CANCEL_DIRECT_OID_REQUEST_HANDLER;
typedef PO_FX_COMPONENT_ACTIVE_CONDITION_CALLBACK *PPO_FX_COMPONENT_ACTIVE_CONDITION_CALLBACK;
struct _NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO {_NDIS_TCP_IP_CHECKSUM_NET_BUFFER_LIST_INFO___BFBEF8C8E3C9C94D68724FF23376072A __anonymous0;};
typedef PROTOCOL_CO_SEND_NET_BUFFER_LISTS_COMPLETE *CO_SEND_NET_BUFFER_LISTS_COMPLETE_HANDLER;
typedef PO_FX_DEVICE_POWER_NOT_REQUIRED_CALLBACK *PPO_FX_DEVICE_POWER_NOT_REQUIRED_CALLBACK;
typedef USB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND *PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND;
typedef FILTER_CANCEL_DIRECT_OID_REQUEST *FILTER_CANCEL_DIRECT_OID_REQUEST_HANDLER;
typedef FILTER_SET_MODULE_OPTIONS *FILTER_SET_FILTER_MODULE_OPTIONS_HANDLER;
typedef MINIPORT_DEVICE_PNP_EVENT_NOTIFY *MINIPORT_DEVICE_PNP_EVENT_NOTIFY_HANDLER;
typedef MINIPORT_RETURN_NET_BUFFER_LISTS *MINIPORT_RETURN_NET_BUFFER_LISTS_HANDLER;
typedef DXGKDDI_GETSTANDARDALLOCATIONDRIVERDATA *PDXGKDDI_GETSTANDARDALLOCATIONDRIVERDATA;
typedef NPI_PROVIDER_CLEANUP_BINDING_CONTEXT_FN *PNPI_PROVIDER_CLEANUP_BINDING_CONTEXT_FN;
typedef PO_FX_COMPONENT_IDLE_CONDITION_CALLBACK *PPO_FX_COMPONENT_IDLE_CONDITION_CALLBACK;
typedef USB_BUSIFFN_GET_DEVICE_PERFORMANCE_INFO *PUSB_BUSIFFN_GET_DEVICE_PERFORMANCE_INFO;
typedef FILTER_RECEIVE_NET_BUFFER_LISTS *FILTER_RECEIVE_NET_BUFFER_LISTS_HANDLER;
typedef  D3DDDI_VIDEO_PRESENT_SOURCE_ID IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID;
typedef  D3DDDI_VIDEO_PRESENT_TARGET_ID IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID;
typedef  DXGK_MONITOR_INTERFACE_VERSION IN_CONST_DXGK_MONITOR_INTERFACE_VERSION;
typedef USB_BUSIFFN_GET_CONTROLLER_INFORMATION *PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION;
typedef FILTER_DEVICE_PNP_EVENT_NOTIFY *FILTER_DEVICE_PNP_EVENT_NOTIFY_HANDLER;
typedef FILTER_RETURN_NET_BUFFER_LISTS *FILTER_RETURN_NET_BUFFER_LISTS_HANDLER;
typedef MINIPORT_DISABLE_MESSAGE_INTERRUPT *MINIPORT_DISABLE_MSI_INTERRUPT_HANDLER;
typedef MINIPORT_SEND_NET_BUFFER_LISTS *MINIPORT_SEND_NET_BUFFER_LISTS_HANDLER;
typedef MINIPORT_SYNCHRONIZE_INTERRUPT *MINIPORT_SYNCHRONIZE_INTERRUPT_HANDLER;
typedef MINIPORT_SYNCHRONIZE_INTERRUPT MINIPORT_SYNCHRONIZE_MESSAGE_INTERRUPT;
typedef DXGKDDI_SETDISPLAYPRIVATEDRIVERFORMAT *PDXGKDDI_SETDISPLAYPRIVATEDRIVERFORMAT;
typedef FAST_IO_MDL_WRITE_COMPLETE_COMPRESSED *PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED;
typedef HW_MESSAGE_SIGNALED_INTERRUPT_ROUTINE *PHW_MESSAGE_SIGNALED_INTERRUPT_ROUTINE;
typedef LLDP_MSAP_CHANGE_NOTIFICATION_HANDLER *PLLDP_MSAP_CHANGE_NOTIFICATION_HANDLER;
typedef LLDP_MSAP_CREATE_NOTIFICATION_HANDLER *PLLDP_MSAP_CREATE_NOTIFICATION_HANDLER;
typedef NPI_CLIENT_CLEANUP_BINDING_CONTEXT_FN *PNPI_CLIENT_CLEANUP_BINDING_CONTEXT_FN;
typedef PCI_EXPRESS_ENTER_LINK_QUIESCENT_MODE *PPCI_EXPRESS_ENTER_LINK_QUIESCENT_MODE;
typedef USB_BUSIFFN_GET_CONTAINER_ID_FOR_PORT *PUSB_BUSIFFN_GET_CONTAINER_ID_FOR_PORT;
typedef USB_BUSIFFN_SET_CONTAINER_ID_FOR_PORT *PUSB_BUSIFFN_SET_CONTAINER_ID_FOR_PORT;
typedef PROTOCOL_SEND_NET_BUFFER_LISTS_COMPLETE *SEND_NET_BUFFER_LISTS_COMPLETE_HANDLER;
struct _REAL_TIME_NOTIFICATION_SETTING_OUTPUT {CONTROL_CHANNEL_TRIGGER_STATUS ChannelStatus;};
typedef  DXGK_VIDPN_INTERFACE_VERSION IN_CONST_DXGK_VIDPN_INTERFACE_VERSION;
typedef MINIPORT_ENABLE_MESSAGE_INTERRUPT *MINIPORT_ENABLE_MSI_INTERRUPT_HANDLER;
typedef MINIPORT_PNP_IRP MINIPORT_FILTER_RESOURCE_REQUIREMENTS;
typedef DRIVER_NOTIFICATION_CALLBACK_ROUTINE *PDRIVER_NOTIFICATION_CALLBACK_ROUTINE;
typedef DXGKDDI_UPDATEACTIVEVIDPNPRESENTPATH *PDXGKDDI_UPDATEACTIVEVIDPNPRESENTPATH;
typedef FAST_IO_MDL_READ_COMPLETE_COMPRESSED *PFAST_IO_MDL_READ_COMPLETE_COMPRESSED;
typedef PCI_EXPRESS_EXIT_LINK_QUIESCENT_MODE *PPCI_EXPRESS_EXIT_LINK_QUIESCENT_MODE;
typedef PO_FX_DEVICE_POWER_REQUIRED_CALLBACK *PPO_FX_DEVICE_POWER_REQUIRED_CALLBACK;
typedef USB_BUSIFFN_INITIALIZE_USB_DEVICE_EX *PUSB_BUSIFFN_INITIALIZE_USB_DEVICE_EX;
struct _OB_POST_DUPLICATE_HANDLE_INFORMATION {ACCESS_MASK GrantedAccess;};
typedef FILTER_SEND_NET_BUFFER_LISTS *FILTER_SEND_NET_BUFFER_LISTS_HANDLER;
typedef PO_FX_COMPONENT_IDLE_STATE_CALLBACK *PPO_FX_COMPONENT_IDLE_STATE_CALLBACK;
struct _DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS {_DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS___CD4A4751E03E0E13D07F13C0897CF7F0 __anonymous0;};
struct _DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS {_DXGK_MULTIPLANE_OVERLAY_YCbCr_FLAGS___0A21D9AE078C811356AA56F1AA8C2BF4 __anonymous0;};
struct _NDIS_NET_BUFFER_LIST_FILTERING_INFO {_NDIS_NET_BUFFER_LIST_FILTERING_INFO___B48DC90554B964DE8C747D9B814BBB60 __anonymous0;};
typedef PROTOCOL_CL_INCOMING_CALL_QOS_CHANGE *CL_INCOMING_CALL_QOS_CHANGE_HANDLER;
typedef PROTOCOL_CL_MODIFY_CALL_QOS_COMPLETE *CL_MODIFY_CALL_QOS_COMPLETE_HANDLER;
typedef PROTOCOL_CM_NOTIFY_CLOSE_AF_COMPLETE *CM_NOTIFY_CLOSE_AF_COMPLETE_HANDLER;
typedef PROTOCOL_CO_RECEIVE_NET_BUFFER_LISTS *CO_RECEIVE_NET_BUFFER_LISTS_HANDLER;
typedef PROTOCOL_DIRECT_OID_REQUEST_COMPLETE *DIRECT_OID_REQUEST_COMPLETE_HANDLER;
typedef FILTER_OID_REQUEST_COMPLETE *FILTER_OID_REQUEST_COMPLETE_HANDLER;
typedef MINIPORT_CANCEL_OID_REQUEST *MINIPORT_CANCEL_OID_REQUEST_HANDLER;
typedef MINIPORT_DIRECT_OID_REQUEST *MINIPORT_DIRECT_OID_REQUEST_HANDLER;
typedef D3DDDI_VIDEO_PRESENT_SOURCE_ID *OUT_PD3DDDI_VIDEO_PRESENT_SOURCE_ID;
typedef D3DDDI_VIDEO_PRESENT_TARGET_ID *OUT_PD3DDDI_VIDEO_PRESENT_TARGET_ID;
typedef NTSTATUS (*PIO_CONTAINER_NOTIFICATION_FUNCTION)();
typedef USB_BUSIFFN_ABORT_ALL_DEVICE_PIPES *PUSB_BUSIFFN_ABORT_ALL_DEVICE_PIPES;
typedef USB_BUSIFFN_GET_DEVICE_INFORMATION *PUSB_BUSIFFN_GET_DEVICE_INFORMATION;
typedef USB_BUSIFFN_SET_DEVICE_ERRATA_FLAG *PUSB_BUSIFFN_SET_DEVICE_ERRATA_FLAG;
struct _D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS {_D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS___A8B88D5BDB1228732AE547855E9ABDB5 __anonymous0;};
struct _DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS {_DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS___034D7373B817C02422E4D62DA035E5FF __anonymous0;};
struct _MSNdis_DeviceWakeOnMagicPacketOnly {BOOLEAN EnableWakeOnMagicPacketOnly;};
typedef MINIPORT_MESSAGE_INTERRUPT_DPC *MINIPORT_MSI_INTERRUPT_DPC_HANDLER;
typedef DXGKCB_POWERRUNTIMECONTROLREQUEST *PDXGKCB_POWERRUNTIMECONTROLREQUEST;
typedef DXGKCB_SETPOWERCOMPONENTRESIDENCY *PDXGKCB_SETPOWERCOMPONENTRESIDENCY;
typedef DXGKDDIPOWERRUNTIMECONTROLREQUEST *PDXGKDDIPOWERRUNTIMECONTROLREQUEST;
typedef DXGKDDI_QUERYDEPENDENTENGINEGROUP *PDXGKDDI_QUERYDEPENDENTENGINEGROUP;
typedef void (*PFN_FSRTLTEARDOWNPERSTREAMCONTEXTS)(PFSRTL_ADVANCED_FCB_HEADER AdvancedHeader);
typedef GET_D3COLD_LAST_TRANSITION_STATUS *PGET_D3COLD_LAST_TRANSITION_STATUS;
typedef KBUGCHECK_REASON_CALLBACK_ROUTINE *PKBUGCHECK_REASON_CALLBACK_ROUTINE;
typedef void PROTOCOL_CLOSE_ADAPTER_COMPLETE_EX(NDIS_HANDLE ProtocolBindingContext);
typedef USB_BUSIFFN_GET_DEBUG_PORT_NUMBER *PUSB_BUSIFFN_GET_DEBUG_PORT_NUMBER;
typedef USB_BUSIFFN_GET_DEVICE_BUSCONTEXT *PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT;
typedef USB_BUSIFFN_GET_EXTENDED_HUB_INFO *PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO;
typedef USB_BUSIFFN_INITIALIZE_USB_DEVICE *PUSB_BUSIFFN_INITIALIZE_USB_DEVICE;
typedef MINIPORT_CO_SEND_NET_BUFFER_LISTS *W_CO_SEND_NET_BUFFER_LISTS_HANDLER;
struct _D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS {_D3DKMT_PRESENT_DISPLAY_ONLY_FLAGS___655BA7FA29CCB4E6E8B3A600E5702580 __anonymous0;};
struct _DXGK_CREATECONTEXTALLOCATIONFLAGS {_DXGK_CREATECONTEXTALLOCATIONFLAGS___61A6213A88C057D16E4E0A395CF0FF00 __anonymous0;};
struct _FILE_IO_PRIORITY_HINT_INFORMATION {IO_PRIORITY_HINT PriorityHint;};
struct _FILE_IS_REMOTE_DEVICE_INFORMATION {BOOLEAN IsRemote;};
struct _OB_POST_CREATE_HANDLE_INFORMATION {ACCESS_MASK GrantedAccess;};
struct _WmiMonitorDigitalVideoInputParams {BOOLEAN IsDFP1xCompatible;};
struct _117E3A994AEBF040E18388CACE709509 {_117E3A994AEBF040E18388CACE709509___F044539147C377D1A0F579F3A4EAC6A7 __anonymous0;};
struct _6D91A0F5ACE4E1ABC2608485BBBFEC12 {_6D91A0F5ACE4E1ABC2608485BBBFEC12___38AB66A4EA7C49F20D686D738A108FEA __anonymous0;};
struct _798F2A0931AE69495F6CF5BE64E576B5 {union _798F2A0931AE69495F6CF5BE64E576B5___C07814F2AB249BB45CDFEF44975072DA Value;unsigned int OperandValid : 1;unsigned int Format : 4;};
typedef PROTOCOL_CLOSE_ADAPTER_COMPLETE_EX *CLOSE_ADAPTER_COMPLETE_HANDLER_EX;
typedef PROTOCOL_CM_DEACTIVATE_VC_COMPLETE *CM_DEACTIVATE_VC_COMPLETE_HANDLER;
typedef PROTOCOL_CM_INCOMING_CALL_COMPLETE *CM_INCOMING_CALL_COMPLETE_HANDLER;
typedef FILTER_CANCEL_OID_REQUEST *FILTER_CANCEL_OID_REQUEST_HANDLER;
typedef FILTER_DIRECT_OID_REQUEST *FILTER_DIRECT_OID_REQUEST_HANDLER;
typedef DXGKDDI_RECOMMENDFUNCTIONALVIDPN *PDXGKDDI_RECOMMENDFUNCTIONALVIDPN;
typedef DXGKDDI_SETVIDPNSOURCEVISIBILITY *PDXGKDDI_SETVIDPNSOURCEVISIBILITY;
typedef GET_VIRTUAL_FUNCTION_PROBED_BARS *PGET_VIRTUAL_FUNCTION_PROBED_BARS;
typedef IO_SESSION_NOTIFICATION_FUNCTION *PIO_SESSION_NOTIFICATION_FUNCTION;
typedef USB_BUSIFFN_CREATE_USB_DEVICE_EX *PUSB_BUSIFFN_CREATE_USB_DEVICE_EX;
typedef USB_BUSIFFN_CREATE_USB_DEVICE_V7 *PUSB_BUSIFFN_CREATE_USB_DEVICE_V7;
typedef USB_BUSIFFN_GET_ROOTHUB_SYM_NAME *PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME;
struct _DXGK_SETVIDPNSOURCEADDRESS_FLAGS {_DXGK_SETVIDPNSOURCEADDRESS_FLAGS___0DB8D2702BCADD830BEA3156E7D1B675 __anonymous0;};
struct _NDIS_TCP_IP_CHECKSUM_PACKET_INFO {_NDIS_TCP_IP_CHECKSUM_PACKET_INFO___9C7D7E375B64039BC618388B5B080755 __anonymous0;};
struct _OB_PRE_CREATE_HANDLE_INFORMATION {ACCESS_MASK DesiredAccess;ACCESS_MASK OriginalDesiredAccess;};
struct _TXFS_READ_BACKUP_INFORMATION_OUT {union _TXFS_READ_BACKUP_INFORMATION_OUT___C1F058836943135750608F5E6F329B74 u;};
typedef SIZE_T D3DKMDT_VIDPN_PRESENT_PATH_INDEX;
typedef MINIPORT_PROCESS_SG_LIST *MINIPORT_PROCESS_SG_LIST_HANDLER;
typedef PROTOCOL_OPEN_ADAPTER_COMPLETE_EX *OPEN_ADAPTER_COMPLETE_HANDLER_EX;
typedef DEVICE_CHANGE_COMPLETE_CALLBACK *PDEVICE_CHANGE_COMPLETE_CALLBACK;
typedef DXGKCB_COMPLETEFSTATETRANSITION *PDXGKCB_COMPLETEFSTATETRANSITION;
typedef DXGKCB_SETPOWERCOMPONENTLATENCY *PDXGKCB_SETPOWERCOMPONENTLATENCY;
typedef DXGKDDI_ENUMVIDPNCOFUNCMODALITY *PDXGKDDI_ENUMVIDPNCOFUNCMODALITY;
typedef DXGKDDI_NOTIFY_SURPRISE_REMOVAL *PDXGKDDI_NOTIFY_SURPRISE_REMOVAL;
typedef DXGKDDI_QUERY_DEVICE_DESCRIPTOR *PDXGKDDI_QUERY_DEVICE_DESCRIPTOR;
typedef USB_BUSIFFN_CALC_PIPE_BANDWIDTH *PUSB_BUSIFFN_CALC_PIPE_BANDWIDTH;
typedef USB_BUSIFFN_DEREF_DEVICE_HANDLE *PUSB_BUSIFFN_DEREF_DEVICE_HANDLE;
typedef USB_BUSIFFN_GET_POTRTHACK_FLAGS *PUSB_BUSIFFN_GET_POTRTHACK_FLAGS;
typedef USB_BUSIFFN_GET_USB_DESCRIPTORS *PUSB_BUSIFFN_GET_USB_DESCRIPTORS;
typedef PROTOCOL_RECEIVE_NET_BUFFER_LISTS *RECEIVE_NET_BUFFER_LISTS_HANDLER;
struct _NDIS_NET_BUFFER_LIST_8021Q_INFO {_NDIS_NET_BUFFER_LIST_8021Q_INFO___D2DB3AED453DBC592ACDCEB618DF0671 __anonymous0;};
struct tcp_opt_sack__tcp_opt_sack_block {SEQ_NUM Left;SEQ_NUM Right;};
typedef PROTOCOL_CM_ACTIVATE_VC_COMPLETE *CM_ACTIVATE_VC_COMPLETE_HANDLER;
typedef PROTOCOL_CO_OID_REQUEST_COMPLETE *CO_OID_REQUEST_COMPLETE_HANDLER;
typedef BOOLEAN FAST_IO_QUERY_NETWORK_OPEN_INFO(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, struct _FILE_NETWORK_OPEN_INFORMATION *Buffer, struct _IO_STATUS_BLOCK *IoStatus, struct _DEVICE_OBJECT *DeviceObject);
typedef MINIPORT_CHECK_FOR_HANG *MINIPORT_CHECK_FOR_HANG_HANDLER;
typedef DOT11_COUNTRY_OR_REGION_STRING *PDOT11_COUNTRY_OR_REGION_STRING;
typedef DXGKCB_SETPOWERCOMPONENTACTIVE *PDXGKCB_SETPOWERCOMPONENTACTIVE;
typedef DXGKDDISETPOWERCOMPONENTFSTATE *PDXGKDDISETPOWERCOMPONENTFSTATE;
typedef DXGKDDI_GET_CHILD_CONTAINER_ID *PDXGKDDI_GET_CHILD_CONTAINER_ID;
typedef DXGKDDI_QUERYVIDPNHWCAPABILITY *PDXGKDDI_QUERYVIDPNHWCAPABILITY;
typedef DXGKDDI_RECOMMENDVIDPNTOPOLOGY *PDXGKDDI_RECOMMENDVIDPNTOPOLOGY;
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;
typedef TDI_ADDRESS_NETBIOS_UNICODE_EX *PTDI_ADDRESS_NETBIOS_UNICODE_EX;
typedef USB_BUSIFFN_GET_DEVICE_ADDRESS *PUSB_BUSIFFN_GET_DEVICE_ADDRESS;
typedef USB_BUSIFFN_SET_DEVHANDLE_DATA *PUSB_BUSIFFN_SET_DEVHANDLE_DATA;
typedef USB_BUSIFFN_WAIT_ASYNC_POWERUP *PUSB_BUSIFFN_WAIT_ASYNC_POWERUP;
struct _DXGK_ALLOCATIONGROUPDESCRIPTOR {D3DGPU_VIRTUAL_ADDRESS MinimumVirtualAddress;D3DGPU_VIRTUAL_ADDRESS MaximumVirtualAddress;};
struct _PCI_ROOT_BUS_OSC_CONTROL_FIELD {union _PCI_ROOT_BUS_OSC_CONTROL_FIELD___0A44648A440ADCC9299E094591176B02 u;};
struct _PCI_ROOT_BUS_OSC_SUPPORT_FIELD {union _PCI_ROOT_BUS_OSC_SUPPORT_FIELD___12366B4554501CEE1BDEB101C5AF44CF u;};
struct _PROCESS_MITIGATION_ASLR_POLICY {_PROCESS_MITIGATION_ASLR_POLICY___92EEC1AC3E0202E7FB93616558A78AB6 __anonymous0;};
struct _REG_PRE_CREATE_KEY_INFORMATION {PUNICODE_STRING CompleteName;};
struct _TOKEN_APPCONTAINER_INFORMATION {PSID TokenAppContainer;};
typedef PROTOCOL_CL_CLOSE_CALL_COMPLETE *CL_CLOSE_CALL_COMPLETE_HANDLER;
typedef PROTOCOL_CL_DROP_PARTY_COMPLETE *CL_DROP_PARTY_COMPLETE_HANDLER;
typedef PROTOCOL_CL_INCOMING_CLOSE_CALL *CL_INCOMING_CLOSE_CALL_HANDLER;
typedef PROTOCOL_CL_INCOMING_DROP_PARTY *CL_INCOMING_DROP_PARTY_HANDLER;
typedef PROTOCOL_CL_OPEN_AF_COMPLETE_EX *CL_OPEN_AF_COMPLETE_HANDLER_EX;
typedef MINIPORT_INTERRUPT_DPC *MINIPORT_INTERRUPT_DPC_HANDLER;
typedef BOOT_DRIVER_CALLBACK_FUNCTION *PBOOT_DRIVER_CALLBACK_FUNCTION;
typedef PDRIVER_EXCPTN_CALLBACK PDRIVER_MCA_EXCEPTION_CALLBACK;
typedef DXGKDDI_ACQUIRESWIZZLINGRANGE *PDXGKDDI_ACQUIRESWIZZLINGRANGE;
typedef DXGKDDI_QUERY_CHILD_RELATIONS *PDXGKDDI_QUERY_CHILD_RELATIONS;
typedef DXGKDDI_RECOMMENDMONITORMODES *PDXGKDDI_RECOMMENDMONITORMODES;
typedef DXGKDDI_RELEASESWIZZLINGRANGE *PDXGKDDI_RELEASESWIZZLINGRANGE;
typedef DXGKDDI_SETVIDPNSOURCEADDRESS *PDXGKDDI_SETVIDPNSOURCEADDRESS;
typedef DXGKDDI_SYSTEM_DISPLAY_ENABLE *PDXGKDDI_SYSTEM_DISPLAY_ENABLE;
typedef FAST_IO_ACQUIRE_FOR_MOD_WRITE *PFAST_IO_ACQUIRE_FOR_MOD_WRITE;
typedef HW_PASSIVE_INITIALIZE_ROUTINE *PHW_PASSIVE_INITIALIZE_ROUTINE;
typedef NPI_CLIENT_ATTACH_PROVIDER_FN *PNPI_CLIENT_ATTACH_PROVIDER_FN;
typedef NPI_CLIENT_DETACH_PROVIDER_FN *PNPI_CLIENT_DETACH_PROVIDER_FN;
typedef NPI_PROVIDER_ATTACH_CLIENT_FN *PNPI_PROVIDER_ATTACH_CLIENT_FN;
typedef NPI_PROVIDER_DETACH_CLIENT_FN *PNPI_PROVIDER_DETACH_CLIENT_FN;
typedef PCI_PREPARE_MULTISTAGE_RESUME *PPCI_PREPARE_MULTISTAGE_RESUME;
typedef RTL_REALLOCATE_STRING_ROUTINE *PRTL_REALLOCATE_STRING_ROUTINE;
typedef TA_NETBIOS_UNICODE_EX_ADDRESS *PTA_NETBIOS_UNICODE_EX_ADDRESS;
typedef USB_BUSIFFN_ACQUIRE_SEMAPHORE *PUSB_BUSIFFN_ACQUIRE_SEMAPHORE;
typedef USB_BUSIFFN_CREATE_USB_DEVICE *PUSB_BUSIFFN_CREATE_USB_DEVICE;
typedef USB_BUSIFFN_REF_DEVICE_HANDLE *PUSB_BUSIFFN_REF_DEVICE_HANDLE;
typedef USB_BUSIFFN_RELEASE_SEMAPHORE *PUSB_BUSIFFN_RELEASE_SEMAPHORE;
typedef USB_BUSIFFN_REMOVE_USB_DEVICE *PUSB_BUSIFFN_REMOVE_USB_DEVICE;
typedef USB_BUSIFFN_SET_BUS_WAKE_MODE *PUSB_BUSIFFN_SET_BUS_WAKE_MODE;
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;
struct _DXGK_MULTIPLANE_OVERLAY_BLEND {_DXGK_MULTIPLANE_OVERLAY_BLEND___1E37BDD2558EEDD3B8B05F66E3722F95 __anonymous0;};
struct _DXGK_MULTIPLANE_OVERLAY_FLAGS {_DXGK_MULTIPLANE_OVERLAY_FLAGS___BA4570F1357798E6B2AAE11FBDFE711D __anonymous0;};
struct _FILE_MAILSLOT_SET_INFORMATION {PLARGE_INTEGER ReadTimeout;};
struct _MSV1_0_LM20_CHALLENGE_REQUEST {MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;};
struct _NDIS_802_11_STATUS_INDICATION {NDIS_802_11_STATUS_TYPE StatusType;};
struct _PROCESS_DEVICEMAP_INFORMATION {union _PROCESS_DEVICEMAP_INFORMATION___2315F45B6FDDBBFF951CC6233B0B9762 u;};
struct _WMI_TAPE_PROBLEM_DEVICE_ERROR {BOOLEAN ReadWarning;BOOLEAN WriteWarning;BOOLEAN HardError;BOOLEAN ReadFailure;BOOLEAN WriteFailure;BOOLEAN UnsupportedFormat;BOOLEAN TapeSnapped;BOOLEAN DriveRequiresCleaning;BOOLEAN TimetoCleanDrive;BOOLEAN DriveHardwareError;BOOLEAN ScsiInterfaceError;BOOLEAN MediaLife;};
typedef PROTOCOL_CL_ADD_PARTY_COMPLETE *CL_ADD_PARTY_COMPLETE_HANDLER;
typedef PROTOCOL_CL_DEREGISTER_SAP_COMPLETE *CL_DEREG_SAP_COMPLETE_HANDLER;
typedef PROTOCOL_CL_MAKE_CALL_COMPLETE *CL_MAKE_CALL_COMPLETE_HANDLER;
typedef PROTOCOL_CO_AF_REGISTER_NOTIFY *CO_AF_REGISTER_NOTIFY_HANDLER;
typedef NTSTATUS FAST_IO_RELEASE_FOR_MOD_WRITE(struct _FILE_OBJECT *FileObject, struct _ERESOURCE *ResourceToRelease, struct _DEVICE_OBJECT *DeviceObject);
typedef MINIPORT_PNP_IRP *MINIPORT_START_DEVICE_HANDLER;
typedef DXGKCB_SETPOWERCOMPONENTIDLE *PDXGKCB_SETPOWERCOMPONENTIDLE;
typedef DXGKDDI_SYSTEM_DISPLAY_WRITE *PDXGKDDI_SYSTEM_DISPLAY_WRITE;
typedef GET_VIRTUAL_DEVICE_RESOURCES *PGET_VIRTUAL_DEVICE_RESOURCES;
typedef IO_CSQ_COMPLETE_CANCELED_IRP *PIO_CSQ_COMPLETE_CANCELED_IRP;
typedef PO_FX_POWER_CONTROL_CALLBACK *PPO_FX_POWER_CONTROL_CALLBACK;
typedef PROTOCOL_CO_AF_REGISTER_NOTIFY PROTCOL_CO_AF_REGISTER_NOTIFY;
typedef RTL_GENERIC_ALLOCATE_ROUTINE *PRTL_GENERIC_ALLOCATE_ROUTINE;
typedef RXCE_TRANSPORT_PROVIDER_INFO *PRXCE_TRANSPORT_PROVIDER_INFO;
typedef USB_BUSIFFN_INITIALIZE_20HUB *PUSB_BUSIFFN_INITIALIZE_20HUB;
struct _DXGKARG_UPDATEPAGETABLEFLAGS {_DXGKARG_UPDATEPAGETABLEFLAGS___050F7664A78ED8E1CD2034B3C2BB2C31 __anonymous0;};
struct _DXGK_DESCRIBEALLOCATIONFLAGS {_DXGK_DESCRIBEALLOCATIONFLAGS___2BE12FD22C72134B114850BA9D4E091D __anonymous0;};
struct _DXGK_SETPOINTERPOSITIONFLAGS {_DXGK_SETPOINTERPOSITIONFLAGS___EDB2CF8C2113AC57422ADD41F1F67284 __anonymous0;};
struct _FILE_DISPOSITION_INFORMATION {BOOLEAN DeleteFile;};
struct _HIDP_KEYBOARD_MODIFIER_STATE {_HIDP_KEYBOARD_MODIFIER_STATE___09F65E3D8EC31FFE3E62B668D67CDD30 __anonymous0;};
struct _NDIS_PM_WAKE_UP_CAPABILITIES {NDIS_DEVICE_POWER_STATE MinMagicPacketWakeUp;NDIS_DEVICE_POWER_STATE MinPatternWakeUp;NDIS_DEVICE_POWER_STATE MinLinkChangeWakeUp;};
struct _SecPkgContext_PasswordExpiry {TimeStamp tsPasswordExpires;};
struct _TXFS_TRANSACTION_ACTIVE_INFO {BOOLEAN TransactionsActiveAtSnapshot;};
struct _WSK_CLIENT_DATAGRAM_DISPATCH {PFN_WSK_RECEIVE_FROM_EVENT WskReceiveFromEvent;};
typedef PROTOCOL_CL_CLOSE_AF_COMPLETE *CL_CLOSE_AF_COMPLETE_HANDLER;
typedef FILTER_NET_PNP_EVENT *FILTER_NET_PNP_EVENT_HANDLER;
typedef  DXGK_INTERRUPT_TYPE IN_CONST_DXGK_INTERRUPT_TYPE;
struct KSGRAPHMANAGER_FUNCTIONTABLE {PFNKSGRAPHMANAGER_NOTIFY NotifyEvent;};
typedef MINIPORT_CANCEL_SEND *MINIPORT_CANCEL_SEND_HANDLER;
typedef MINIPORT_OID_REQUEST *MINIPORT_OID_REQUEST_HANDLER;
typedef NDIS_PROCESS_SG_LIST *NDIS_PROCESS_SG_LIST_HANDLER;
typedef PROTOCOL_OID_REQUEST_COMPLETE *OID_REQUEST_COMPLETE_HANDLER;
typedef DXGKDDI_DISPATCH_IO_REQUEST *PDXGKDDI_DISPATCH_IO_REQUEST;
typedef DXGKDDI_UPDATEPAGEDIRECTORY *PDXGKDDI_UPDATEPAGEDIRECTORY;
typedef FAST_IO_QUERY_STANDARD_INFO *PFAST_IO_QUERY_STANDARD_INFO;
typedef GET_VIRTUAL_DEVICE_LOCATION *PGET_VIRTUAL_DEVICE_LOCATION;
typedef HVL_WHEA_ERROR_NOTIFICATION *PHVL_WHEA_ERROR_NOTIFICATION;
typedef CLFS_CONTAINER_INFORMATION **PPCLFS_CONTAINER_INFORMATION;
typedef PCMCIA_MODIFY_MEMORY_WINDOW *PPCMCIA_MODIFY_MEMORY_WINDOW;
typedef POST_SCATTER_GATHER_EXECUTE *PPOST_SCATTER_GATHER_EXECUTE;
typedef RTL_ALLOCATE_STRING_ROUTINE *PRTL_ALLOCATE_STRING_ROUTINE;
typedef RTL_GENERIC_COMPARE_ROUTINE *PRTL_GENERIC_COMPARE_ROUTINE;
typedef RXCE_CONNECTION_INFORMATION *PRXCE_CONNECTION_INFORMATION;
typedef USB_BUSIFFN_FLUSH_TRANSFERS *PUSB_BUSIFFN_FLUSH_TRANSFERS;
typedef USB_BUSIFFN_SET_DEVICE_FLAG *PUSB_BUSIFFN_SET_DEVICE_FLAG;
struct _DRIVER_VERIFIER_THUNK_PAIRS {PDRIVER_VERIFIER_THUNK_ROUTINE PristineRoutine;PDRIVER_VERIFIER_THUNK_ROUTINE NewRoutine;};
struct _DXGK_CREATEALLOCATIONFLAGS2 {_DXGK_CREATEALLOCATIONFLAGS2___D1A97408460E1FEA85F44866C81053FF __anonymous0;};
struct _DXGK_DESTROYALLOCATIONFLAGS {_DXGK_DESTROYALLOCATIONFLAGS___A1DA969D0BF462BE86DF3AAFED10CC89 __anonymous0;};
struct _FILE_MAKE_COMPATIBLE_BUFFER {BOOLEAN CloseDisc;};
struct _FILE_SET_DEFECT_MGMT_BUFFER {BOOLEAN Disable;};
struct _ICMPV4_ROUTER_ADVERT_HEADER {ICMPV4_MESSAGE RaHeader;};
struct _WmiSetALSBrightnessState_IN {BOOLEAN State;};
typedef PROTOCOL_CL_OPEN_AF_COMPLETE *CL_OPEN_AF_COMPLETE_HANDLER;
typedef PROTOCOL_CL_REGISTER_SAP_COMPLETE *CL_REG_SAP_COMPLETE_HANDLER;
typedef NTSTATUS FAST_IO_ACQUIRE_FOR_CCFLUSH(struct _FILE_OBJECT *FileObject, struct _DEVICE_OBJECT *DeviceObject);
typedef NTSTATUS FAST_IO_RELEASE_FOR_CCFLUSH(struct _FILE_OBJECT *FileObject, struct _DEVICE_OBJECT *DeviceObject);
typedef MINIPORT_ADD_DEVICE *MINIPORT_ADD_DEVICE_HANDLER;
typedef MINIPORT_INITIALIZE *MINIPORT_INITIALIZE_HANDLER;
typedef API_SET_RELEASE_SCHEMA_RTN *PAPI_SET_RELEASE_SCHEMA_RTN;
typedef CLFS_CONTAINER_INFORMATION *PCLFS_CONTAINER_INFORMATION;
typedef DXGKDDI_DESCRIBEALLOCATION *PDXGKDDI_DESCRIBEALLOCATION;
typedef DXGKDDI_OPENALLOCATIONINFO *PDXGKDDI_OPENALLOCATIONINFO;
typedef DXGKDDI_PRESENTDISPLAYONLY *PDXGKDDI_PRESENTDISPLAYONLY;
typedef DXGKDDI_RESTARTFROMTIMEOUT *PDXGKDDI_RESTARTFROMTIMEOUT;
typedef DXGKDDI_SETPOINTERPOSITION *PDXGKDDI_SETPOINTERPOSITION;
typedef ENTER_STATE_NOTIFY_HANDLER *PENTER_STATE_NOTIFY_HANDLER;
typedef ENTER_STATE_SYSTEM_HANDLER *PENTER_STATE_SYSTEM_HANDLER;
typedef FAST_IO_MDL_WRITE_COMPLETE *PFAST_IO_MDL_WRITE_COMPLETE;
typedef HW_PROCESS_SERVICE_REQUEST *PHW_PROCESS_SERVICE_REQUEST;
typedef KBUGCHECK_CALLBACK_ROUTINE *PKBUGCHECK_CALLBACK_ROUTINE;
typedef CLFS_IO_STATISTICS_HEADER **PPCLFS_IO_STATISTICS_HEADER;
typedef USB_BUSIFFN_RESTORE_DEVICE *PUSB_BUSIFFN_RESTORE_DEVICE;
struct _BDCB_STATUS_UPDATE_CONTEXT {BDCB_STATUS_UPDATE_TYPE StatusType;};
struct _DXGK_POWER_COMPONENT_FLAGS {_DXGK_POWER_COMPONENT_FLAGS___D180033327BF7FFFCDCE62B6821A55F9 __anonymous0;};
struct _DXGK_SEGMENTBANKPREFERENCE {_DXGK_SEGMENTBANKPREFERENCE___C6C7745BB49F41DCAE1615122A006DD8 __anonymous0;};
struct _DeleteInitiatorNodeName_IN {WCHAR DeletedInitiatorName[224];};
struct _PF_SET_EXTENSION_HOOK_INFO {PacketFilterExtensionPtr ExtensionPointer;};
struct _POWER_PLATFORM_INFORMATION {BOOLEAN AoAc;};
struct _SYSTEM_POWER_STATE_CONTEXT {union _SYSTEM_POWER_STATE_CONTEXT___364D4FCA241438740838CF50D18006E2 u;};
typedef CLS_LOG_INFORMATION_CLASS CLFS_LOG_INFORMATION_CLASS;
typedef PROTOCOL_CL_NOTIFY_CLOSE_AF *CL_NOTIFY_CLOSE_AF_HANDLER;
typedef PROTOCOL_CM_MODIFY_QOS_CALL *CM_MODIFY_CALL_QOS_HANDLER;
typedef FILTER_CANCEL_SEND_NET_BUFFER_LISTS *FILTER_CANCEL_SEND_HANDLER;
typedef FILTER_OID_REQUEST *FILTER_OID_REQUEST_HANDLER;
typedef void (*FREE_SHARED_MEMORY_HANDLER)(NDIS_HANDLE ProviderContext, NDIS_HANDLE SharedMemoryProviderContext);
typedef void MINIPORT_DISABLE_INTERRUPT(NDIS_HANDLE MiniportInterruptContext);
typedef CLFS_IO_STATISTICS_HEADER *PCLFS_IO_STATISTICS_HEADER;
typedef DXGKDDI_BUILDPAGINGBUFFER *PDXGKDDI_BUILDPAGINGBUFFER;
typedef DXGKDDI_CREATEALLOCATION2 *PDXGKDDI_CREATEALLOCATION2;
typedef DXGKDDI_DESCRIBEPAGETABLE *PDXGKDDI_DESCRIBEPAGETABLE;
typedef DXGKDDI_DESTROYALLOCATION *PDXGKDDI_DESTROYALLOCATION;
typedef DXGKDDI_INTERRUPT_ROUTINE *PDXGKDDI_INTERRUPT_ROUTINE;
typedef DXGKDDI_MOVEPAGEDIRECTORY *PDXGKDDI_MOVEPAGEDIRECTORY;
typedef DXGKDDI_QUERYCURRENTFENCE *PDXGKDDI_QUERYCURRENTFENCE;
typedef DXGKDDI_QUERYENGINESTATUS *PDXGKDDI_QUERYENGINESTATUS;
typedef FAST_IO_CHECK_IF_POSSIBLE *PFAST_IO_CHECK_IF_POSSIBLE;
typedef FAST_IO_MDL_READ_COMPLETE *PFAST_IO_MDL_READ_COMPLETE;
typedef FAST_IO_PREPARE_MDL_WRITE *PFAST_IO_PREPARE_MDL_WRITE;
typedef FAST_IO_UNLOCK_ALL_BY_KEY *PFAST_IO_UNLOCK_ALL_BY_KEY;
typedef HW_FREE_ADAPTER_RESOURCES *PHW_FREE_ADAPTER_RESOURCES;
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
typedef PCI_MSIX_MASKUNMASK_ENTRY *PPCI_MSIX_MASKUNMASK_ENTRY;
typedef PCMCIA_IS_WRITE_PROTECTED *PPCMCIA_IS_WRITE_PROTECTED;
typedef void PROTOCOL_CL_CALL_CONNECTED(NDIS_HANDLE ProtocolVcContext);
typedef TDI_CLIENT_INTERFACE_INFO *PTDI_CLIENT_INTERFACE_INFO;
typedef MINIPORT_CO_DEACTIVATE_VC *W_CO_DEACTIVATE_VC_HANDLER;
struct _D3DDDI_CREATECONTEXTFLAGS {_D3DDDI_CREATECONTEXTFLAGS___DEAF33FA41163E0FF876B6E6CC0834BA __anonymous0;};
struct _D3DKM_TRANSPARENTBLTFLAGS {_D3DKM_TRANSPARENTBLTFLAGS___70EB8777C082EFE4C602960A67FF671E __anonymous0;};
struct _DXGKCB_GETHANDLEDATAFLAGS {_DXGKCB_GETHANDLEDATAFLAGS___5572F66C59C9F3A90BDF1613B7A48E48 __anonymous0;};
struct _DXGK_ALLOCATIONINFOFLAGS2 {_DXGK_ALLOCATIONINFOFLAGS2___98E3A45A4DBE36C032B4E4AC2E8B9F54 __anonymous0;};
struct _MOUNTMGR_QUERY_AUTO_MOUNT {MOUNTMGR_AUTO_MOUNT_STATE CurrentState;};
struct _MSNdis_NetworkDirectState {BOOLEAN Enabled;};
typedef PROTOCOL_CL_CALL_CONNECTED *CL_CALL_CONNECTED_HANDLER;
typedef void MINIPORT_ENABLE_INTERRUPT(NDIS_HANDLE MiniportInterruptContext);
typedef MINIPORT_SHUTDOWN *MINIPORT_SHUTDOWN_HANDLER;
typedef void (*PBUS_NOTIFICATION_ROUTINE)(PNOTIFICATION_INFO NotificationInfo);
typedef DXGKDDI_CREATEALLOCATION *PDXGKDDI_CREATEALLOCATION;
typedef DXGKDDI_ISSUPPORTEDVIDPN *PDXGKDDI_ISSUPPORTEDVIDPN;
typedef DXGKDDI_QUERYADAPTERINFO *PDXGKDDI_QUERYADAPTERINFO;
typedef DXGKDDI_RESETFROMTIMEOUT *PDXGKDDI_RESETFROMTIMEOUT;
typedef FAST_IO_QUERY_BASIC_INFO *PFAST_IO_QUERY_BASIC_INFO;
typedef FAST_IO_WRITE_COMPRESSED *PFAST_IO_WRITE_COMPRESSED;
typedef KMESSAGE_SERVICE_ROUTINE *PKMESSAGE_SERVICE_ROUTINE;
typedef IF_PHYSICAL_ADDRESS *PNDIS_IF_PHYSICAL_ADDRESS;
typedef PNDIS_PORT_CONTROL_STATE PNDIS_PORT_CONTROLL_STATE;
typedef PCI_EXPRESS_WAKE_CONTROL *PPCI_EXPRESS_WAKE_CONTROL;
typedef PCI_IS_DEVICE_PRESENT_EX *PPCI_IS_DEVICE_PRESENT_EX;
typedef CLFS_ARCHIVE_DESCRIPTOR **PPCLFS_ARCHIVE_DESCRIPTOR;
typedef RTL_AVL_ALLOCATE_ROUTINE *PRTL_AVL_ALLOCATE_ROUTINE;
typedef RTL_GENERIC_FREE_ROUTINE *PRTL_GENERIC_FREE_ROUTINE;
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;
typedef STOR_SYNCHRONIZED_ACCESS *PSTOR_SYNCHRONIZED_ACCESS;
struct _ALLOW_PERFORMANCE_HIT_IN {BOOLEAN Allow;};
struct _DECRYPTION_STATUS_BUFFER {BOOLEAN NoEncryptedStreams;};
struct _DXGK_ALLOCATIONINFOFLAGS {_DXGK_ALLOCATIONINFOFLAGS___9EBD3D271EAD7213A5F7051B20FA4555 __anonymous0;};
struct _DXGK_DISCARDCONTENTFLAGS {_DXGK_DISCARDCONTENTFLAGS___833EF5D1359128C4E733B4C6CE94D49D __anonymous0;};
struct _DXGK_OPENALLOCATIONFLAGS {_DXGK_OPENALLOCATIONFLAGS___D8A898C3CC121BAA810A888BA7378A03 __anonymous0;};
struct _DXGK_PREEMPTCOMMANDFLAGS {_DXGKARG_SYSTEM_DISPLAY_ENABLE_FLAGS___CD4A4751E03E0E13D07F13C0897CF7F0 __anonymous0;};
struct _ENABLE_OFFLINE_DIAGS_OUT {BOOLEAN Success;};
struct _MSPower_DeviceWakeEnable {BOOLEAN Enable;};
struct _SecPkgContext_LogoffTime {TimeStamp tsLogoffTime;};
struct _URB_FRAME_LENGTH_CONTROL {struct _URB_HEADER Hdr;};
typedef PROTOCOL_CL_INCOMING_CALL *CL_INCOMING_CALL_HANDLER;
typedef MINIPORT_PNP_IRP *MINIPORT_PNP_IRP_HANDLER;
typedef MINIPORT_RESTART *MINIPORT_RESTART_HANDLER;
typedef IF_PHYSICAL_ADDRESS NDIS_IF_PHYSICAL_ADDRESS;
typedef NDIS_IO_WORKITEM_FUNCTION *NDIS_IO_WORKITEM_ROUTINE;
typedef NDIS_PORT_CONTROL_STATE NDIS_PORT_CONTROLL_STATE;
typedef ACPI_OP_REGION_CALLBACK *PACPI_OP_REGION_CALLBACK;
typedef API_SET_LOAD_SCHEMA_RTN *PAPI_SET_LOAD_SCHEMA_RTN;
typedef CLFS_ARCHIVE_DESCRIPTOR *PCLFS_ARCHIVE_DESCRIPTOR;
typedef DXGKDDI_CLOSEALLOCATION *PDXGKDDI_CLOSEALLOCATION;
typedef DXGKDDI_QUERY_INTERFACE *PDXGKDDI_QUERY_INTERFACE;
typedef DXGKDDI_SETPOINTERSHAPE *PDXGKDDI_SETPOINTERSHAPE;
typedef DXGKDDI_UPDATEPAGETABLE *PDXGKDDI_UPDATEPAGETABLE;
typedef FAST_IO_READ_COMPRESSED *PFAST_IO_READ_COMPRESSED;
typedef GET_VIRTUAL_DEVICE_DATA *PGET_VIRTUAL_DEVICE_DATA;
typedef HW_COMPLETE_SERVICE_IRP *PHW_COMPLETE_SERVICE_IRP;
typedef PCI_MSIX_GET_TABLE_SIZE *PPCI_MSIX_GET_TABLE_SIZE;
typedef PCI_ROOT_BUS_CAPABILITY *PPCI_ROOT_BUS_CAPABILITY;
typedef RTL_AVL_COMPARE_ROUTINE *PRTL_AVL_COMPARE_ROUTINE;
typedef RTL_FREE_STRING_ROUTINE *PRTL_FREE_STRING_ROUTINE;
typedef RTL_HEAP_COMMIT_ROUTINE *PRTL_HEAP_COMMIT_ROUTINE;
typedef SET_VIRTUAL_DEVICE_DATA *PSET_VIRTUAL_DEVICE_DATA;
typedef PHYSICAL_ADDRESS *PSTREAM_PHYSICAL_ADDRESS;
struct SMHBA_ProtocolStatistics {HBA_INT64 SecondsSinceLastReset;HBA_INT64 InputRequests;HBA_INT64 OutputRequests;HBA_INT64 ControlRequests;HBA_INT64 InputMegabytes;HBA_INT64 OutputMegabytes;};
typedef MINIPORT_CO_ACTIVATE_VC *W_CO_ACTIVATE_VC_HANDLER;
typedef MINIPORT_CO_OID_REQUEST *W_CO_OID_REQUEST_HANDLER;
struct _DXGK_CREATECONTEXTFLAGS {_DXGK_CREATECONTEXTFLAGS___DCE14139BF8D7994AEB61B9C12A1E22E __anonymous0;};
struct _DXGK_GENERIC_DESCRIPTOR {WCHAR HardwareId[51];WCHAR InstanceId[51];WCHAR CompatibleId[51];WCHAR DeviceText[51];};
struct _DXGK_SUBMITCOMMANDFLAGS {_DXGK_SUBMITCOMMANDFLAGS___6731932D94F59BD250F28E6270D01601 __anonymous0;};
struct _FILE_ACCESS_INFORMATION {ACCESS_MASK AccessFlags;};
struct _FLT_RELATED_CONTEXTS_EX {PFLT_CONTEXT VolumeContext;PFLT_CONTEXT InstanceContext;PFLT_CONTEXT FileContext;PFLT_CONTEXT StreamContext;PFLT_CONTEXT StreamHandleContext;PFLT_CONTEXT TransactionContext;PFLT_CONTEXT SectionContext;};
struct _POOLED_USAGE_AND_LIMITS {SIZE_T PeakPagedPoolUsage;SIZE_T PagedPoolUsage;SIZE_T PagedPoolLimit;SIZE_T PeakNonPagedPoolUsage;SIZE_T NonPagedPoolUsage;SIZE_T NonPagedPoolLimit;SIZE_T PeakPagefileUsage;SIZE_T PagefileUsage;SIZE_T PagefileLimit;};
struct _SD_RW_EXTENDED_ARGUMENT {union _SD_RW_EXTENDED_ARGUMENT___C73E6A1E0D5770B9EB75E35F076E7DDA u;};
struct _SetInitiatorNodeName_IN {WCHAR CreatedInitiatorName[224];};
typedef WAVEFORMATIEEEFLOATEX *LPWAVEFORMATIEEEFLOATEX;
typedef WAVEFORMATIEEEFLOATEX *NPWAVEFORMATIEEEFLOATEX;
typedef DMA_COMPLETION_ROUTINE *PDMA_COMPLETION_ROUTINE;
typedef DXGKDDI_COLLECTDBGINFO *PDXGKDDI_COLLECTDBGINFO;
typedef DXGKDDI_DESTROYCONTEXT *PDXGKDDI_DESTROYCONTEXT;
typedef DXGKDDI_DESTROYOVERLAY *PDXGKDDI_DESTROYOVERLAY;
typedef DXGKDDI_PREEMPTCOMMAND *PDXGKDDI_PREEMPTCOMMAND;
typedef FAST_IO_DEVICE_CONTROL *PFAST_IO_DEVICE_CONTROL;
typedef PUCHAR PHIDP_REPORT_DESCRIPTOR;
typedef IO_WORKITEM_ROUTINE_EX *PIO_WORKITEM_ROUTINE_EX;
typedef IF_COUNTED_STRING *PNDIS_IF_COUNTED_STRING;
typedef POWER_SETTING_CALLBACK *PPOWER_SETTING_CALLBACK;
typedef PROCESSOR_HALT_ROUTINE *PPROCESSOR_HALT_ROUTINE;
typedef PROCESSOR_IDLE_HANDLER *PPROCESSOR_IDLE_HANDLER;
typedef REQUEST_POWER_COMPLETE *PREQUEST_POWER_COMPLETE;
typedef RTL_AVL_MATCH_FUNCTION *PRTL_AVL_MATCH_FUNCTION;
typedef SDBUS_CALLBACK_ROUTINE *PSDBUS_CALLBACK_ROUTINE;
typedef USB_BUSIFFN_TEST_POINT *PUSB_BUSIFFN_TEST_POINT;
struct SMHBA_AdapterAttributes {char Manufacturer[64];char SerialNumber[64];char Model[256];char ModelDescription[256];char HardwareVersion[256];char DriverVersion[256];char OptionROMVersion[256];char FirmwareVersion[256];HBA_UINT32 VendorSpecificID;char DriverName[256];char HBASymbolicName[256];char RedundantOptionROMVersion[256];char RedundantFirmwareVersion[256];};
typedef PHYSICAL_ADDRESS STREAM_PHYSICAL_ADDRESS;
struct _DXGK_CREATEDEVICEFLAGS {_DXGK_CREATEDEVICEFLAGS___2F67346E464C3CB5F4584001891B2DBB __anonymous0;};
struct _DXGK_SEGMENTPREFERENCE {_DXGK_SEGMENTPREFERENCE___5F0E46343C77D0D7B0B3DAC6467FFF79 __anonymous0;};
struct _FILE_SET_SPARSE_BUFFER {BOOLEAN SetSparse;};
struct _HDAUDIO_CODEC_RESPONSE {_HDAUDIO_CODEC_RESPONSE___C3E611620E2F089E1A23F35E3CB26325 __anonymous0;};
struct _NDIS_PACKET_8021Q_INFO {_NDIS_PACKET_8021Q_INFO___8882A3A36CF70686E2666AD9F1873AAF __anonymous0;};
struct _SecPkgContext_CredInfo {SECPKG_CRED_CLASS CredClass;unsigned int IsPromptingNeeded;};
struct _SecPkgContext_Lifespan {TimeStamp tsStart;TimeStamp tsExpiry;};
struct _TRANSACTION_LIST_ENTRY {UOW UOW;};
typedef PROTOCOL_CO_OID_REQUEST *CO_OID_REQUEST_HANDLER;
typedef void DRIVER_FS_NOTIFICATION(struct _DEVICE_OBJECT *DeviceObject, BOOLEAN FsActive);
typedef FILTER_RESTART *FILTER_RESTART_HANDLER;
typedef MINIPORT_UNLOAD *MINIPORT_DRIVER_UNLOAD;
typedef MINIPORT_PAUSE *MINIPORT_PAUSE_HANDLER;
typedef void MINIPORT_REMOVE_DEVICE(NDIS_HANDLE MiniportAddDeviceContext);
typedef IF_COUNTED_STRING NDIS_IF_COUNTED_STRING;
typedef DXGKDDI_CANCELCOMMAND *PDXGKDDI_CANCELCOMMAND;
typedef DXGKDDI_CREATECONTEXT *PDXGKDDI_CREATECONTEXT;
typedef DXGKDDI_CREATEOVERLAY *PDXGKDDI_CREATEOVERLAY;
typedef DXGKDDI_DESTROYDEVICE *PDXGKDDI_DESTROYDEVICE;
typedef DXGKDDI_REMOVE_DEVICE *PDXGKDDI_REMOVE_DEVICE;
typedef DXGKDDI_SUBMITCOMMAND *PDXGKDDI_SUBMITCOMMAND;
typedef DXGKDDI_UPDATEOVERLAY *PDXGKDDI_UPDATEOVERLAY;
typedef ENABLE_VIRTUALIZATION *PENABLE_VIRTUALIZATION;
typedef FAST_IO_UNLOCK_SINGLE *PFAST_IO_UNLOCK_SINGLE;
typedef HW_INITIALIZE_TRACING *PHW_INITIALIZE_TRACING;
typedef IO_COMPLETION_ROUTINE *PIO_COMPLETION_ROUTINE;
typedef KIPI_BROADCAST_WORKER *PKIPI_BROADCAST_WORKER;
typedef LLDP_QUERY_STATISTICS *PLLDP_QUERY_STATISTICS;
typedef PHYSICAL_ADDRESS *PNDIS_PHYSICAL_ADDRESS;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_PORT_NAME;
typedef NET_PHYSICAL_LOCATION *PNET_PHYSICAL_LOCATION;
typedef PCI_IS_DEVICE_PRESENT *PPCI_IS_DEVICE_PRESENT;
typedef PCI_READ_WRITE_CONFIG *PPCI_READ_WRITE_CONFIG;
typedef CLS_CONTAINER_STATE *PPCLFS_CONTAINER_STATE;
typedef PHYSICAL_ADDRESS *PSCSI_PHYSICAL_ADDRESS;
typedef PHYSICAL_ADDRESS *PSTOR_PHYSICAL_ADDRESS;
typedef TRANSLATE_BUS_ADDRESS *PTRANSLATE_BUS_ADDRESS;
typedef WAVEFORMATIEEEFLOATEX *PWAVEFORMATIEEEFLOATEX;
typedef WORKER_THREAD_ROUTINE *PWORKER_THREAD_ROUTINE;
struct SMHBA_SASPhyStatistics {HBA_INT64 SecondsSinceLastReset;HBA_INT64 TxFrames;HBA_INT64 TxWords;HBA_INT64 RxFrames;HBA_INT64 RxWords;HBA_INT64 InvalidDwordCount;HBA_INT64 RunningDisparityErrorCount;HBA_INT64 LossofDwordSyncCount;HBA_INT64 PhyResetProblemCount;};
typedef MINIPORT_CO_CREATE_VC *W_CO_CREATE_VC_HANDLER;
typedef MINIPORT_CO_DELETE_VC *W_CO_DELETE_VC_HANDLER;
struct _CSV_IS_OWNED_BY_CSVFS {BOOLEAN OwnedByCSVFS;};
struct _D3DDDI_RESOURCEFLAGS2 {_D3DDDI_RESOURCEFLAGS2___81001EC007C0C438D87887A3711AD82F __anonymous0;};
struct _DXGK_BRIGHTNESS_STATE {_DXGK_BRIGHTNESS_STATE___66C590267A583B1EC093FE09AF2A9D94 __anonymous0;};
struct _DXGK_MAPAPERTUREFLAGS {_DXGK_MAPAPERTUREFLAGS___D42F3BF489806A17BD1D237EC4E3FA1A __anonymous0;};
struct _DXGK_PRESENTATIONCAPS {_DXGK_PRESENTATIONCAPS___C11F8E6BC7C43C2BB3DD3E618E55E425 __anonymous0;};
struct _HDAUDIO_CODEC_COMMAND {_HDAUDIO_CODEC_COMMAND___2E6D594E2499CEB88B4541EFB16B6E6C __anonymous0;};
struct _ICMPV4_ROUTER_SOLICIT {ICMPV4_MESSAGE RsHeader;};
struct _POWER_SESSION_CONNECT {BOOLEAN Connected;BOOLEAN Console;};
struct _PREVENT_MEDIA_REMOVAL {BOOLEAN PreventMediaRemoval;};
struct _SD_RW_DIRECT_ARGUMENT {union _SD_RW_DIRECT_ARGUMENT___E799D1D7F4FD931B58035FED85E80D2B u;};
struct _TCG_DESCRIPTION_TABLE {union _TCG_DESCRIPTION_TABLE___C7581E26A4D392CED2FF0026FAC3559E u;};
struct _WRITE_LOG_SECTORS_OUT {BOOLEAN Success;};
typedef PROTOCOL_CM_CLOSE_CALL *CM_CLOSE_CALL_HANDLER;
typedef PROTOCOL_CM_DROP_PARTY *CM_DROP_PARTY_HANDLER;
typedef FILTER_ATTACH *FILTER_ATTACH_HANDLER;
typedef FILTER_STATUS *FILTER_STATUS_HANDLER;
typedef DEVICE_POWER_STATE IN_DEVICE_POWER_STATE;
typedef MINIPORT_HALT *MINIPORT_HALT_HANDLER;
typedef MINIPORT_PNP_IRP MINIPORT_START_DEVICE;
typedef PHYSICAL_ADDRESS NDIS_PHYSICAL_ADDRESS;
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_PORT_NAME;
typedef PROTOCOL_NET_PNP_EVENT *NET_PNP_EVENT_HANDLER;
typedef ALLOCATE_FUNCTION_EX *PALLOCATE_FUNCTION_EX;
typedef  IMAGE_TLS_DIRECTORY *PCIMAGE_TLS_DIRECTORY;
typedef CLS_CONTAINER_STATE *PCLFS_CONTAINER_STATE;
typedef DXGKDDI_CREATEDEVICE *PDXGKDDI_CREATEDEVICE;
typedef DXGKDDI_SUBMITRENDER *PDXGKDDI_SUBMITRENDER;
typedef EXPAND_STACK_CALLOUT *PEXPAND_STACK_CALLOUT;
typedef EX_CALLBACK_FUNCTION *PEX_CALLBACK_FUNCTION;
typedef PHYSICAL_ADDRESS *PIDE_PHYSICAL_ADDRESS;
typedef IO_CSQ_INSERT_IRP_EX *PIO_CSQ_INSERT_IRP_EX;
typedef IO_CSQ_PEEK_NEXT_IRP *PIO_CSQ_PEEK_NEXT_IRP;
typedef KSYNCHRONIZE_ROUTINE *PKSYNCHRONIZE_ROUTINE;
typedef LLDP_ENUMERATE_MSAPS *PLLDP_ENUMERATE_MSAPS;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_NIC_NAME;
typedef NDIS_IF_COUNTED_STRING *PNDIS_VM_FRIENDLYNAME;
typedef RTL_AVL_FREE_ROUTINE *PRTL_AVL_FREE_ROUTINE;
typedef RTL_RUN_ONCE_INIT_FN *PRTL_RUN_ONCE_INIT_FN;
typedef RXCE_CONNECTION_INFO *PRXCE_CONNECTION_INFO;
typedef WMI_FUNCTION_CONTROL_CALLBACK *PWMI_FUNCTION_CONTROL;
typedef PHYSICAL_ADDRESS SCSI_PHYSICAL_ADDRESS;
typedef HBA_UINT32 SMHBA_BIND_CAPABILITY;
typedef PHYSICAL_ADDRESS STOR_PHYSICAL_ADDRESS;
typedef void (*TDI_NET_READY_HANDLER)(NTSTATUS ProviderStatus);
struct _D3DDDICB_SIGNALFLAGS {_D3DDDICB_SIGNALFLAGS___37DCD84A128AE20AFACAE49DED23B1AC __anonymous0;};
struct _D3DDDI_RESOURCEFLAGS {_D3DDDI_RESOURCEFLAGS___0A8E4AF2B4ABBA3F67396D587D70E98B __anonymous0;};
struct _DXGK_BRIGHTNESS_CAPS {_DXGK_BRIGHTNESS_CAPS___D9D36000DE1DD4D29BAB8D412DCDF7E1 __anonymous0;};
struct _DXGK_DEVICEINFOFLAGS {_DXGK_DEVICEINFOFLAGS___313A06C1F8E7A72B04D91FC65245D0A6 __anonymous0;};
struct _ENABLE_DISABLE_FP_IN {BOOLEAN Enable;};
struct _FLT_RELATED_CONTEXTS {PFLT_CONTEXT VolumeContext;PFLT_CONTEXT InstanceContext;PFLT_CONTEXT FileContext;PFLT_CONTEXT StreamContext;PFLT_CONTEXT StreamHandleContext;PFLT_CONTEXT TransactionContext;};
struct _MSPower_DeviceEnable {BOOLEAN Enable;};
struct _RSS_SCALABILITY_INFO {BOOLEAN RssEnabled;};
struct _STOR_DEBUGPRINT_ARGS {PCHAR Message;va_list ArgList;};
struct _WHEA_PCI_SLOT_NUMBER {union _WHEA_PCI_SLOT_NUMBER___B33AE7BF1FDC215AED0B88878C3A5E8F u;};
typedef sp_DRIVER_INITIALIZE *sp_PDRIVER_INITIALIZE;
typedef CLS_CONTAINER_STATE CLFS_CONTAINER_STATE;
typedef PROTOCOL_CM_ADD_PARTY *CM_ADD_PARTY_HANDLER;
typedef PROTOCOL_CM_DEREGISTER_SAP *CM_DEREG_SAP_HANDLER;
typedef PROTOCOL_CM_MAKE_CALL *CM_MAKE_CALL_HANDLER;
typedef PROTOCOL_CO_CREATE_VC *CO_CREATE_VC_HANDLER;
typedef PROTOCOL_CO_DELETE_VC *CO_DELETE_VC_HANDLER;
typedef PROTOCOL_CO_STATUS_EX *CO_STATUS_HANDLER_EX;
typedef void DXGKDDI_RESET_DEVICE(IN_CONST_PVOID MiniportDeviceContext);
typedef FILTER_PAUSE *FILTER_PAUSE_HANDLER;
typedef PHYSICAL_ADDRESS IDE_PHYSICAL_ADDRESS;
typedef SET_OPTIONS MINIPORT_SET_OPTIONS;
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_NIC_NAME;
typedef NDIS_IF_COUNTED_STRING NDIS_VM_FRIENDLYNAME;
typedef NLBReceiveFilterHook_v3 NLBReceiveFilterHook;
typedef DRIVER_LIST_CONTROL *PDRIVER_LIST_CONTROL;
typedef DRIVER_REINITIALIZE *PDRIVER_REINITIALIZE;
typedef DXGKDDI_COMMITVIDPN *PDXGKDDI_COMMITVIDPN;
typedef DXGKDDI_FLIPOVERLAY *PDXGKDDI_FLIPOVERLAY;
typedef DXGKDDI_GETSCANLINE *PDXGKDDI_GETSCANLINE;
typedef DXGKDDI_LINK_DEVICE *PDXGKDDI_LINK_DEVICE;
typedef DXGKDDI_RESETENGINE *PDXGKDDI_RESETENGINE;
typedef DXGKDDI_STOPCAPTURE *PDXGKDDI_STOPCAPTURE;
typedef DXGKDDI_STOP_DEVICE *PDXGKDDI_STOP_DEVICE;
typedef GET_SET_DEVICE_DATA *PGET_SET_DEVICE_DATA;
typedef IF_PHYSICAL_ADDRESS *PIF_PHYSICAL_ADDRESS;
typedef IO_CSQ_RELEASE_LOCK *PIO_CSQ_RELEASE_LOCK;
typedef IO_WORKITEM_ROUTINE *PIO_WORKITEM_ROUTINE;
typedef NTSTATUS ( *PMRX_SHADOW_CALLDOWN)(struct _RX_CONTEXT *RxContext);
typedef KINTERRUPT_MODE *PNDIS_INTERRUPT_MODE;
typedef NDIS_TIMER_FUNCTION *PNDIS_TIMER_FUNCTION;
typedef CLFS_IO_STATISTICS **PPCLFS_IO_STATISTICS;
typedef PCMCIA_WRITE_CONFIG *PPCMCIA_WRITE_CONFIG;
typedef SET_OPTIONS PROTOCOL_SET_OPTIONS;
typedef USB_BUSIFFN_IS_ROOT *PUSB_BUSIFFN_IS_ROOT;
typedef WMI_QUERY_DATABLOCK_CALLBACK *PWMI_QUERY_DATABLOCK;
struct _DXGK_TRANSFERFLAGS2 {_DXGK_TRANSFERFLAGS2___4C244374FF25457F97E9B31CB89E7EBC __anonymous0;};
struct _RemoveiSNSServer_IN {WCHAR iSNSServerName[224];};
struct _TOKEN_DEVICE_CLAIMS {PCLAIMS_BLOB DeviceClaims;};
struct _TOKEN_PRIMARY_GROUP {PSID PrimaryGroup;};
typedef PROTOCOL_CM_CLOSE_AF *CM_CLOSE_AF_HANDLER;
typedef void DXGKDDI_DPC_ROUTINE(IN_CONST_PVOID MiniportDeviceContext);
typedef HBA_UINT32 HBA_BIND_CAPABILITY;
typedef HBA_UINT32 HBA_SASPORTPROTOCOL;
typedef KINTERRUPT_MODE NDIS_INTERRUPT_MODE;
typedef PHYSICAL_ADDRESS NDK_LOGICAL_ADDRESS;
typedef CLFS_IO_STATISTICS *PCLFS_IO_STATISTICS;
typedef DXGKDDI_ADD_DEVICE *PDXGKDDI_ADD_DEVICE;
typedef DXGKDDI_SETPALETTE *PDXGKDDI_SETPALETTE;
typedef FAST_IO_QUERY_OPEN *PFAST_IO_QUERY_OPEN;
typedef FAST_IO_UNLOCK_ALL *PFAST_IO_UNLOCK_ALL;
typedef GET_IDLE_WAKE_INFO *PGET_IDLE_WAKE_INFO;
typedef HW_ADAPTER_CONTROL *PHW_ADAPTER_CONTROL;
typedef HW_CLEANUP_TRACING *PHW_CLEANUP_TRACING;
typedef HW_TRACING_ENABLED *PHW_TRACING_ENABLED;
typedef MF_ENUMERATE_CHILD *PMF_ENUMERATE_CHILD;
typedef NET_IF_RCV_ADDRESS *PNET_IF_RCV_ADDRESS;
typedef PCI_MSIX_SET_ENTRY *PPCI_MSIX_SET_ENTRY;
typedef CLFS_CONTAINER_ID **PPCLFS_CONTAINER_ID;
typedef CLFS_SCAN_CONTEXT **PPCLFS_SCAN_CONTEXT;
typedef PCMCIA_READ_CONFIG *PPCMCIA_READ_CONFIG;
typedef SET_D3COLD_SUPPORT *PSET_D3COLD_SUPPORT;
typedef WMI_EXECUTE_METHOD_CALLBACK *PWMI_EXECUTE_METHOD;
struct RX_LOG_ENTRY_HEADER {PCHAR Buffer;};
typedef SET_OPTIONS *SET_OPTIONS_HANDLER;
struct _ARBITER_PARAMETERS {union _ARBITER_PARAMETERS___3A7A23006A6D0BBB6E18B2FA6F877FDD Parameters;};
struct _D3DDDICB_LOCKFLAGS {_D3DDDICB_LOCKFLAGS___ED792A498079A6342A08F53AEABA2A3A __anonymous0;};
struct _D3DDDI_ESCAPEFLAGS {_D3DDDI_ESCAPEFLAGS___1E6467755CCFD5D3734D714B43840EC2 __anonymous0;};
struct _DXGK_GAMMARAMPCAPS {_DXGK_GAMMARAMPCAPS___01A74871349E05421D5F5860B0BC2732 __anonymous0;};
struct _DXGK_SEGMENTFLAGS2 {_DXGK_SEGMENTFLAGS2___781DFF8C386BAF2FD5859671E4CB1CCB __anonymous0;};
struct _DXGK_TRANSFERFLAGS {_DXGK_TRANSFERFLAGS___4D1486DD1E7506599394F0F2A8A65E0A __anonymous0;};
struct _NDIS_MAC_LINE_DOWN {NDIS_HANDLE NdisLinkContext;};
struct _TOKEN_DEFAULT_DACL {PACL DefaultDacl;};
struct tagWNODE_EVENT_ITEM {struct _WNODE_HEADER WnodeHeader;};
typedef PROTOCOL_CM_OPEN_AF *CM_OPEN_AF_HANDLER;
typedef PROTOCOL_CM_REG_SAP *CM_REG_SAP_HANDLER;
typedef SET_OPTIONS FILTER_SET_OPTIONS;
struct HBA_Link_EventInfo {HBA_UINT32 PortFcId;HBA_UINT32 Reserved[3];};
struct HBA_PortStatistics {HBA_INT64 SecondsSinceLastReset;HBA_INT64 TxFrames;HBA_INT64 TxWords;HBA_INT64 RxFrames;HBA_INT64 RxWords;HBA_INT64 LIPCount;HBA_INT64 NOSCount;HBA_INT64 ErrorFrames;HBA_INT64 DumpedFrames;HBA_INT64 LinkFailureCount;HBA_INT64 LossOfSyncCount;HBA_INT64 LossOfSignalCount;HBA_INT64 PrimitiveSeqProtocolErrCount;HBA_INT64 InvalidTxWordCount;HBA_INT64 InvalidCRCCount;};
struct HBA_RSCN_EventInfo {HBA_UINT32 PortFcId;HBA_UINT32 NPortPage;HBA_UINT32 Reserved[2];};
typedef DXGK_EVENT_TYPE IN_DXGK_EVENT_TYPE;
typedef SOCKADDR_STORAGE *LPSOCKADDR_STORAGE;
typedef NLBQueryFilterHook_v3 NLBQueryFilterHook;
typedef ALLOCATE_FUNCTION *PALLOCATE_FUNCTION;
typedef CALLBACK_FUNCTION *PCALLBACK_FUNCTION;
typedef  IMAGE_THUNK_DATA *PCIMAGE_THUNK_DATA;
typedef CLFS_CONTAINER_ID *PCLFS_CONTAINER_ID;
typedef CLFS_SCAN_CONTEXT *PCLFS_SCAN_CONTEXT;
typedef DOT11_MAC_ADDRESS *PDOT11_MAC_ADDRESS;
typedef DRIVER_INITIALIZE *PDRIVER_INITIALIZE;
typedef EXCEPTION_ROUTINE *PEXCEPTION_ROUTINE;
typedef IF_COUNTED_STRING *PIF_COUNTED_STRING;
typedef IO_CSQ_REMOVE_IRP *PIO_CSQ_REMOVE_IRP;
typedef KDEFERRED_ROUTINE *PKDEFERRED_ROUTINE;
typedef LLDP_QUERY_CONFIG *PLLDP_QUERY_CONFIG;
typedef LLDP_QUERY_STATUS *PLLDP_QUERY_STATUS;
typedef CLFS_INFORMATION *PPCLFS_INFORMATION;
typedef CLS_RECORD_TYPE **PPCLFS_RECORD_TYPE;
typedef CLFS_WRITE_ENTRY **PPCLFS_WRITE_ENTRY;
typedef WMI_QUERY_REGINFO_CALLBACK *PWMI_QUERY_REGINFO;
typedef WMI_SET_DATABLOCK_CALLBACK *PWMI_SET_DATABLOCK;
typedef void (*TDI_UNBIND_HANDLER)(PUNICODE_STRING DeviceName);
struct _DXGK_ENGINESTATUS {_DXGK_ENGINESTATUS___71579A1E1FAD40681B38D2EFE6BBA1F6 __anonymous0;};
struct _DXGK_POINTERFLAGS {_DXGK_POINTERFLAGS___C9573884F6BD666D6E4986CB772F7316 __anonymous0;};
struct _DXGK_PRESENTFLAGS {_DXGK_PRESENTFLAGS___759923E5051464C6F2E56DEAB7A49BFF __anonymous0;};
struct _DXGK_SEGMENTFLAGS {_DXGK_SEGMENTFLAGS___B3DE18E4A209DC1AB8FF5AECCB1010D4 __anonymous0;};
struct _MSNdis_RSSEnabled {BOOLEAN RSSEnabled;};
struct _TOKEN_USER_CLAIMS {PCLAIMS_BLOB UserClaims;};
struct _sockaddr_in6_pair {PSOCKADDR_IN6 SourceAddress;PSOCKADDR_IN6 DestinationAddress;};
typedef NTSTATUS (*pHalStartMirroring)(void);
struct tagACT_QUEUE_STATE {BOOLEAN fFrozen;};
typedef NTSTATUS DRIVER_ADD_DEVICE(struct _DRIVER_OBJECT *DriverObject, struct _DEVICE_OBJECT *PhysicalDeviceObject);
typedef void ( *DXGKCB_NOTIFY_DPC)(IN_CONST_HANDLE hAdapter);
struct HBA_FC4Statistics {HBA_INT64 InputRequests;HBA_INT64 OutputRequests;HBA_INT64 ControlRequests;HBA_INT64 InputMegabytes;HBA_INT64 OutputMegabytes;};
struct HBA_Pty_EventInfo {HBA_UINT32 PtyData[4];};
typedef void IO_CSQ_INSERT_IRP(struct _IO_CSQ *Csq, PIRP Irp);
typedef WAVEFORMATPCMEX *LPWAVEFORMATPCMEX;
typedef NLBSendFilterHook_v3 NLBSendFilterHook;
typedef WAVEFORMATPCMEX *NPWAVEFORMATPCMEX;
typedef SIZE_T * OUT_PSIZE_T_CONST;
typedef CLFS_INFORMATION *PCLFS_INFORMATION;
typedef CLS_RECORD_TYPE *PCLFS_RECORD_TYPE;
typedef CLFS_WRITE_ENTRY *PCLFS_WRITE_ENTRY;
typedef DXGKDDI_RENDERKM *PDXGKDDI_RENDERKM;
typedef ERESOURCE_THREAD *PERESOURCE_THREAD;
typedef FAST_IO_MDL_READ *PFAST_IO_MDL_READ;
typedef FREE_FUNCTION_EX *PFREE_FUNCTION_EX;
typedef HW_ADAPTER_STATE *PHW_ADAPTER_STATE;
typedef IO_TIMER_ROUTINE *PIO_TIMER_ROUTINE;
typedef KSERVICE_ROUTINE *PKSERVICE_ROUTINE;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_NAME;
typedef NDIS_IF_COUNTED_STRING *PNDIS_VENDOR_NAME;
typedef RH_INIT_CALLBACK *PRH_INIT_CALLBACK;
typedef SOCKADDR_STORAGE *PSOCKADDR_STORAGE;
typedef TDI_ROUTING_INFO *PTDI_ROUTING_INFO;
typedef UNICODE_STRING32 *PUNICODE_STRING32;
typedef UNICODE_STRING64 *PUNICODE_STRING64;
typedef VPCI_WRITE_BLOCK *PVPCI_WRITE_BLOCK;
typedef WMI_SET_DATAITEM_CALLBACK *PWMI_SET_DATAITEM;
typedef PROTOCOL_STATUS_EX *STATUS_HANDLER_EX;
typedef PROTOCOL_UNBIND_ADAPTER_EX *UNBIND_HANDLER_EX;
struct _AddiSNSServer_IN {WCHAR iSNSServerName[224];};
struct _RX_CONNECTION_ID {_RX_CONNECTION_ID___B825E9A178883B67F543C89189176897 __anonymous0;};
struct _WWAN_RADIO_STATE {WWAN_RADIO HwRadioState;WWAN_RADIO SwRadioState;};
struct nd_router_solicit {ICMPV6_MESSAGE nd_rs_hdr;};
typedef NTSTATUS (*pHalInitPnpDriver)(void);
typedef CLS_RECORD_TYPE CLFS_RECORD_TYPE;
typedef IF_QUERY_OBJECT *IFP_QUERY_OBJECT;
typedef D3DKMT_HANDLE IN_D3DKMT_HANDLE;
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_NAME;
typedef NDIS_IF_COUNTED_STRING NDIS_VENDOR_NAME;
typedef DXGKDDI_PRESENT *PDXGKDDI_PRESENT;
typedef GET_DMA_ADAPTER *PGET_DMA_ADAPTER;
typedef HW_STATE_CHANGE *PHW_STATE_CHANGE;
typedef HW_UNIT_CONTROL *PHW_UNIT_CONTROL;
typedef LLDP_CLOSE_MSAP *PLLDP_CLOSE_MSAP;
typedef LLDP_QUERY_TLVS *PLLDP_QUERY_TLVS;
typedef LLDP_SET_CONFIG *PLLDP_SET_CONFIG;
typedef NDIS_IF_COUNTED_STRING *PNDIS_QUEUE_NAME;
typedef PCI_LINE_TO_PIN *PPCI_LINE_TO_PIN;
typedef PCI_PIN_TO_LINE *PPCI_PIN_TO_LINE;
typedef TDI_ADDRESS_IP6 *PTDI_ADDRESS_IP6;
typedef TDI_PNP_CONTEXT *PTDI_PNP_CONTEXT;
typedef VPCI_READ_BLOCK *PVPCI_READ_BLOCK;
typedef WAVEFORMATPCMEX *PWAVEFORMATPCMEX;
typedef void (*TDI_BIND_HANDLER)(PUNICODE_STRING DeviceName);
struct _DXGK_PATCHFLAGS {_DXGK_PATCHFLAGS___3F44A29E3CF80453CA6C96B988F2597D __anonymous0;};
struct _DXGK_VIDSCHCAPS {_DXGK_VIDSCHCAPS___5E74790812C969E3ACDA73D10C67000E __anonymous0;};
struct _GENERIC_MAPPING {ACCESS_MASK GenericRead;ACCESS_MASK GenericWrite;ACCESS_MASK GenericExecute;ACCESS_MASK GenericAll;};
struct _IDE_REGISTERS_2 {PUCHAR RegistersBaseAddress;PUCHAR DeviceControl;PUCHAR DriveAddress;};
struct _PCI_SLOT_NUMBER {union _PCI_SLOT_NUMBER___49AFFD3D7EC59F1BE207C4846B68BFFF u;};
struct _RXCE_SIGNATURE_ {_RXCE_SIGNATURE____133B17B9D3CB80B518FB5AF2A06254B1 __anonymous0;};
typedef BOOLEAN (*pHalResetDisplay)(void);
typedef PROTOCOL_BIND_ADAPTER_EX *BIND_HANDLER_EX;
typedef NTSTATUS DRIVER_DISPATCH(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);
typedef HBA_UINT32 HBA_SASPHYSPEED;
typedef  SIZE_T IN_CONST_SIZE_T;
typedef POWER_ACTION IN_POWER_ACTION;
typedef NDIS_IF_COUNTED_STRING NDIS_QUEUE_NAME;
typedef DRIVER_CONTROL *PDRIVER_CONTROL;
typedef DXGKDDI_ESCAPE *PDXGKDDI_ESCAPE;
typedef DXGKDDI_RENDER *PDXGKDDI_RENDER;
typedef HW_DMA_STARTED *PHW_DMA_STARTED;
typedef HW_DPC_ROUTINE *PHW_DPC_ROUTINE;
typedef IO_DPC_ROUTINE *PIO_DPC_ROUTINE;
typedef KSTART_ROUTINE *PKSTART_ROUTINE;
typedef LLDP_OPEN_MSAP *PLLDP_OPEN_MSAP;
typedef NODE_TYPE_CODE *PNODE_TYPE_CODE;
typedef PCMCIA_SET_VPP *PPCMCIA_SET_VPP;
typedef HBA_UINT32 SMHBA_BIND_TYPE;
struct _ACCESS_REASONS {ACCESS_REASON Data[32];};
struct _BINDING_HANDLE {RX_HANDLE pTdiEmulationContext;RX_HANDLE pTransportInformation;};
struct _EX_RUNDOWN_REF {_EX_RUNDOWN_REF___B53373035CFC48957629DB1D3A5A55C6 __anonymous0;};
struct _USAGE_AND_PAGE {USAGE Usage;USAGE UsagePage;};
typedef HBA_UINT32 HBA_FCPHYSPEED;
struct ICMPv6SNMPInfo {ICMPv6Stats icsi_instats;ICMPv6Stats icsi_outstats;};
typedef IF_SET_OBJECT *IFP_SET_OBJECT;
typedef ANSI_STRING32 *PANSI_STRING32;
typedef ANSI_STRING64 *PANSI_STRING64;
typedef DXGKDDI_PATCH *PDXGKDDI_PATCH;
typedef FAST_IO_WRITE *PFAST_IO_WRITE;
typedef FREE_FUNCTION *PFREE_FUNCTION;
typedef HW_INITIALIZE *PHW_INITIALIZE;
typedef LLDP_SET_TLVS *PLLDP_SET_TLVS;
typedef NTSTATUS (*PMM_DLL_UNLOAD)(void);
struct _DXGK_FLIPCAPS {_DXGK_FLIPCAPS___BB8BCFC6A76D53AA4E1798E1B22DE04B __anonymous0;};
struct _finddatai64_t {unsigned int attrib;time_t time_create;time_t time_access;time_t time_write;long long size;char name[260];};
typedef void FILTER_DETACH(NDIS_HANDLE FilterModuleContext);
typedef HBA_UINT32 HBA_BIND_TYPE;
typedef HBA_UINT8 HBA_FCPHYTYPE;
typedef HBA_UINT32 HBA_PORTSPEED;
typedef HBA_UINT32 HBA_PORTSTATE;
typedef PSTRING PCANSI_STRING;
typedef FAST_IO_LOCK *PFAST_IO_LOCK;
typedef FAST_IO_READ *PFAST_IO_READ;
typedef HW_INTERRUPT *PHW_INTERRUPT;
typedef HW_RESET_BUS *PHW_RESET_BUS;
typedef NDIS_IF_COUNTED_STRING *PNDIS_VM_NAME;
typedef NET_IF_ALIAS *PNET_IF_ALIAS;
typedef NMI_CALLBACK *PNMI_CALLBACK;
typedef PCW_CALLBACK *PPCW_CALLBACK;
struct SMHBA_SCSILUN {HBA_UINT8 lun[8];};
struct _TDI_VERSION_ {_TDI20_CLIENT_INTERFACE_INFO___17090AB1AC76E3F51FDFECA895B54C88 __anonymous0;};
typedef HBA_UINT32 HBA_PHYSPEED;
typedef HBA_UINT32 HBA_PORTTYPE;
struct HBA_fc4types {HBA_UINT8 bits[32];};
struct ICMPSNMPInfo {ICMPStats icsi_instats;ICMPStats icsi_outstats;};
typedef NDIS_IF_COUNTED_STRING NDIS_VM_NAME;
typedef ACCESS_MASK *PACCESS_MASK;
typedef PSTRING PANSI_STRING;
typedef DUMP_FINISH *PDUMP_FINISH;
typedef DUMP_UNLOAD *PDUMP_UNLOAD;
typedef HW_TIMER_EX *PHW_TIMER_EX;
typedef HW_WORKITEM *PHW_WORKITEM;
typedef TDI_CMSGHDR *PTDI_CMSGHDR;
typedef KSPIN_LOCK RX_SPIN_LOCK;
struct SMHBA_ScsiId {char OSDeviceName[256];HBA_UINT32 ScsiBusNumber;HBA_UINT32 ScsiTargetNumber;HBA_UINT32 ScsiOSLun;};
struct _TOKEN_OWNER {PSID Owner;};
typedef HBA_UINT8 HBA_BOOLEAN;
typedef HBA_UINT64 HBA_SCSILUN;
typedef SIZE_T *OUT_PSIZE_T;
typedef DUMP_START *PDUMP_START;
typedef DUMP_WRITE *PDUMP_WRITE;
typedef HW_BUILDIO *PHW_BUILDIO;
typedef HW_STARTIO *PHW_STARTIO;
typedef KSPIN_LOCK *PKSPIN_LOCK;
typedef PSTRING POEM_STRING;
typedef TOKEN_TYPE *PTOKEN_TYPE;
typedef HBA_UINT32 HBA_HANDLE;
typedef HBA_UINT32 HBA_STATUS;
struct HBA_ScsiId {char OSDeviceName[256];HBA_UINT32 ScsiBusNumber;HBA_UINT32 ScsiTargetNumber;HBA_UINT32 ScsiOSLun;};
typedef BOOLEAN IN_BOOLEAN;
typedef PULONG OUT_PULONG;
typedef DUMP_READ *PDUMP_READ;
typedef DWORDLONG *PDWORDLONG;
typedef KAFFINITY *PKAFFINITY;
typedef CLFS_LSN **PPCLFS_LSN;
typedef VP_STATUS *PVP_STATUS;
typedef  WCHAR *LPCUWCHAR;
typedef CLFS_LSN *PCLFS_LSN;
typedef PCZZSTR PCUZZTSTR;
typedef  WCHAR *PCUZZWSTR;
typedef HW_TIMER *PHW_TIMER;
typedef NET_LUID *PNET_LUID;
typedef NTSTATUS *PNTSTATUS;
typedef WCHAR SEC_WCHAR;
struct _DXGK_PTE {_DXGK_PTE___E0A8C8A05CB3CF7081FA3F36783E9131 __anonymous0;};
typedef LPCSTR LPCUTSTR;
typedef  WCHAR *LPCUWSTR;
typedef  WCHAR *LPCWCHAR;
typedef BOOLEAN *PBOOLEAN;
typedef PCNZCH PCUNZTCH;
typedef  WCHAR *PCUNZWCH;
typedef  WCHAR *PCUWCHAR;
typedef PCZZSTR PCZZTSTR;
typedef  WCHAR *PCZZWSTR;
typedef PZZSTR PUZZTSTR;
typedef WCHAR *PUZZWSTR;
struct _utimbuf {time_t actime;time_t modtime;};
struct in6_addr {union in6_addr___6F0816B860EA11CA8E788AEE35731DB2 u;};
typedef CLSID *LPCLSID;
typedef LPCSTR LPCTSTR;
typedef  WCHAR *LPCWSTR;
typedef FMTID *LPFMTID;
typedef LPSTR LPUTSTR;
typedef WCHAR *LPUWSTR;
typedef PCNZCH PCNZTCH;
typedef  WCHAR *PCNZWCH;
typedef  UQUAD *PCUQUAD;
typedef LPCSTR PCUTSTR;
typedef  WCHAR *PCUWSTR;
typedef  WCHAR *PCWCHAR;
typedef  PSTR *PCZPSTR;
typedef ORHKEY *PORHKEY;
typedef PNZCH PUNZTCH;
typedef WCHAR *PUNZWCH;
typedef PCSTR *PZPCSTR;
typedef PZZSTR PZZTSTR;
typedef WCHAR *PZZWSTR;
struct _AV_PCR {_AV_PCR___396EF7A68396BFEFEEA92DFA7F5171E0 __anonymous0;};
struct in_addr {union in_addr___4F64C6817212FE4AF89030399F21EE2D S_un;};
struct utimbuf {time_t actime;time_t modtime;};
typedef LPCCH LPCTCH;
typedef  WCHAR *LPCWCH;
typedef LPSTR LPTSTR;
typedef WCHAR *LPWSTR;
typedef WCHAR *NWPSTR;
typedef CLONG *PCLONG;
typedef  WCHAR *PCWSTR;
typedef KIRQL *PKIRQL;
typedef  NPIID *PNPIID;
typedef PNZCH PNZTCH;
typedef WCHAR *PNZWCH;
typedef UQUAD *PUQUAD;
typedef LPSTR PUTSTR;
typedef WCHAR *PUWSTR;
typedef WCHAR *PWCHAR;
typedef PSTR *PZPSTR;
struct _timeb {time_t time;unsigned short millitm;short timezone;short dstflag;};
typedef IID *LPIID;
typedef LPCH LPTCH;
typedef WCHAR *LPWCH;
typedef  WCHAR *PCWCH;
typedef RSDT *PRSDT;
typedef WCHAR *PWSTR;
typedef LBN *PLBN;
typedef VBN *PVBN;
union _CM_PARTIAL_RESOURCE_DESCRIPTOR______CBF9A9E0C6D93C7BA38845A49CC9788E___DE3CCB929DB832FEAC38EBA7195AFD95 {struct _CM_PARTIAL_RESOURCE_DESCRIPTOR_________DE3CCB929DB832FEAC38EBA7195AFD95___D155ACCA6E988C466DB4311FB52073D0 Raw;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR_________DE3CCB929DB832FEAC38EBA7195AFD95___BB7094CF39B58C60385FAAA7DFEE1197 Translated;};
struct _TDI20_CLIENT_INTERFACE_INFO___DBFFC609AC9C9DF31CC2C895F8D48A3C___9BA10B872D58EA52358D8BF594A45CC2 {TDI_BIND_HANDLER BindHandler;TDI_UNBIND_HANDLER UnBindHandler;};
struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___AB1AD8C4B599AC16D84572F0ADA81B2A {HANDLE hAllocation;struct _DXGKARG_BUILDPAGINGBUFFER______AB1AD8C4B599AC16D84572F0ADA81B2A___31A6E6E69D11548870F9DD66858D70C9 Destination;};
union _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3 {struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3___A449343E09C4C1546A59A24613FBC6AB Transmit;struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3___8BEB346562FAF5B62B3932DA3828A9F2 Receive;};
union _IRP______1DDC8106121C6C57578C3B7B583E783E___72AAA2734763A5172362D9A41AF08CB4 {PIO_APC_ROUTINE UserApcRoutine;PVOID IssuingProcess;};
union _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711 {struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711___764ECECA7B0364BB3FF4D84547E713EE MiniFilter;struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711___3E1F33A4D6146CCFCE9EB881F18EEEC7 LegacyFilter;};
struct _IRP___6B96A96ED958C92F2CB4B83EAB343043___1DDC8106121C6C57578C3B7B583E783E {_IRP______1DDC8106121C6C57578C3B7B583E783E___72AAA2734763A5172362D9A41AF08CB4 __anonymous0;PVOID UserApcContext;};
union _2CC32A13BC47B0ADD425440A5881DEFA___F1120EB057508E4EB018F6F06D0FF063 {PFNKSFASTHANDLER MethodHandler;BOOLEAN MethodSupported;};
union _33D5B48BFB25F68EBEA0D059F2171BBA___32A657B5357991FC951178A7ED233F2B {PFNKSHANDLER SetPropertyHandler;BOOLEAN SetSupported;};
union _33D5B48BFB25F68EBEA0D059F2171BBA___58FB3E9EF9061AAB6CC24D01751A314D {PFNKSHANDLER GetPropertyHandler;BOOLEAN GetSupported;};
union _C0F7BB227D2914979DE22500D0E4A4BA___0CCE2AE982A077A8E6346F069E293B38 {PFNKSFASTHANDLER GetPropertyHandler;BOOLEAN GetSupported;};
union _C0F7BB227D2914979DE22500D0E4A4BA___AC534CA50395027A7F697CBC885BBBC2 {PFNKSFASTHANDLER SetPropertyHandler;BOOLEAN SetSupported;};
union _DE8F492EE455543594962797C1392B09___5BDBA56DE03A5015F28D8AA8E2E4ED3B {PFNKSHANDLER MethodHandler;BOOLEAN MethodSupported;};
union _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12 {struct _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12___8C090F53DC32F6BA76ECAD738E355805 Connect;struct _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12___A2D12BBF9FDE02488895E7FF9970C0E3 Disconnect;};
union _IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5 {struct _IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5___D73A842DF02ECD359F5D4E8396DDC93E IPv4Endpoints;struct _IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5___19ABAB2698FF067AB251F272D19344BF IPv6Endpoints;};
union _COUNTED_REASON_CONTEXT___0169A8C3C5184AFD0045925CDBD9A996 {struct _COUNTED_REASON_CONTEXT___0169A8C3C5184AFD0045925CDBD9A996___48DC2BE0BFF23344CA7D314FCD6B972D s;UNICODE_STRING SimpleString;};
union _GENERAL_LOOKASIDE_POOL___15E753D7C02A960DCE39CA1D248AD77A {PALLOCATE_FUNCTION_EX AllocateEx;PALLOCATE_FUNCTION Allocate;};
union _GENERAL_LOOKASIDE_POOL___FB106391A1988A396D89C68A33D7E06D {PFREE_FUNCTION_EX FreeEx;PFREE_FUNCTION Free;};
union DL_TEREDO_ADDRESS_PRV___8AE4EEAF9BFB4C7125F7ADE378B0209F {DL_EUI64 Eui64;DL_TEREDO_ADDRESS_PRV___8AE4EEAF9BFB4C7125F7ADE378B0209F___75452F4916212336117570F081D85C4D __anonymous0;};
struct _IMAGE_AUX_SYMBOL_EX___AF9309B91FE05EB19F86BDA86FAB5DEE {IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;UCHAR rgbReserved[2];};
union _RDBSS_DEVICE_OBJECT___10CA472531081661EFDEFAD42E260FC9 {DEVICE_OBJECT DeviceObject;_DEVICE_OBJECT __anonymous0;};
union _DSM_WMILIB_CONTEXT___7BAC0EB42F04039DCC0E6CEEB0AA7162 {DSM_EXECUTE_METHOD ExecuteWmiMethod;DSM_EXECUTE_METHOD_EX ExecuteWmiMethodEx;};
union _DSM_WMILIB_CONTEXT___9AA77EDF1265EA30C6E769CD24F15228 {DSM_FUNCTION_CONTROL WmiFunctionControl;DSM_FUNCTION_CONTROL_EX WmiFunctionControlEx;};
union _DSM_WMILIB_CONTEXT___EA4A8BBD62C3B7ACB1B0449CF31EABE3 {DSM_SET_DATABLOCK SetWmiDataBlock;DSM_SET_DATABLOCK_EX SetWmiDataBlockEx;};
union _DSM_WMILIB_CONTEXT___F28A93AD97002CA7E7D2FE1135B08147 {DSM_QUERY_DATABLOCK QueryWmiDataBlock;DSM_QUERY_DATABLOCK_EX QueryWmiDataBlockEx;};
union _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C {struct _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C___88882CC45E21AA3B08D6DD74C9D19C54 DiskInfo;struct _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C___88882CC45E21AA3B08D6DD74C9D19C54 RemovableDiskInfo;struct _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C___F3A2277F3846D5D09599391720F7D644 TapeInfo;};
union _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6 {struct _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6___61AC8A2B58CFD260593455E7BA36662D s;struct _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6___A0285CA1D5BF0E1F2165CAF9E52CE46B s2;};
union _DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5 {struct _DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5___C3F3147D4FCD8A6B6E889D916E43EB90 HotPlug;struct _DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5___AEEBA1D7BAAC6A97757F743FD696B8E6 Rotation;};
union _GENERAL_LOOKASIDE___15E753D7C02A960DCE39CA1D248AD77A {PALLOCATE_FUNCTION_EX AllocateEx;PALLOCATE_FUNCTION Allocate;};
union _GENERAL_LOOKASIDE___FB106391A1988A396D89C68A33D7E06D {PFREE_FUNCTION_EX FreeEx;PFREE_FUNCTION Free;};
union _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398 {struct _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398___1F8B7C21C9C3E44248E9C6F91974E44C QueryDirectory;struct _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398___51800FF9876E4DCE174B345C898F336F NotifyDirectory;};
union _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68 {struct _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68___8B54ED8CB39CC03D44DD62F841F64493 Mca;struct _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68___3514090A4590A95A1DE583AEB66EEF9E Mce;};
union _MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC {struct _MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC___62646870AE5B68D63F726DC7B906275E NamedPipeParameters;struct _MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC___63C342055F04C1546F1B3920ADC7D8C9 DiskParameters;};
union _REASON_BUFFER___F74655129F2DFA9F1DDC40A17BAD0BC2 {struct _REASON_BUFFER___F74655129F2DFA9F1DDC40A17BAD0BC2___E2947B9388DB43752E355D35F1DCFC93 s;SIZE_T SimpleStringOffset;};
union _XSTATE_SAVE___18201E4AFA8D7B47D67A178F8DC66E77 {_XSTATE_SAVE___18201E4AFA8D7B47D67A178F8DC66E77___AAB77B42D6DB5CE2906BF76243B5486F __anonymous0;XSTATE_CONTEXT XStateContext;};
union _NAME_CACHE___7DD328E67B358AE0D444348E77BB2A06 {_NAME_CACHE __anonymous0;_NAME_CACHE___7DD328E67B358AE0D444348E77BB2A06___B9369606FF1834C7F170102E1B88C818 __anonymous5;};
union _RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162 {struct _RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162___0E64B696EDD7DC71B6561395573F3971 Info;struct _RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162___EE6CDB8E348AFDFD207852A1BBDDA4B5 PrefixClaim;};
union _V_NET_ROOT___67228D3E87097EDE9B472C5F8816F370 {_MRX_V_NET_ROOT_ __anonymous0;_V_NET_ROOT___67228D3E87097EDE9B472C5F8816F370___D3338666C09A8578FAD5206245EB6400 __anonymous1;};
struct _IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS {ULONG Version;union _IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS___8EB445A79BB4AE80EB9672A9FB0D8476 ConnectionContext;};
union _SRV_CALL___0ACC7C61618F999A81F788F7C5AA38D2 {_MRX_SRV_CALL_ __anonymous0;_NAME_CACHE___7DD328E67B358AE0D444348E77BB2A06___B9369606FF1834C7F170102E1B88C818 __anonymous3;};
union _SRV_OPEN___77A51EE1E80C64E222053A0C90FCC703 {_MRX_SRV_OPEN_ __anonymous0;_SRV_OPEN___77A51EE1E80C64E222053A0C90FCC703___4A191DB403A6ECE0FF5004BC7D821FF6 __anonymous2;};
union _NDK_SGE___D19CDDEA9BCFEEE1770C08F9285617BC {PVOID VirtualAddress;NDK_LOGICAL_ADDRESS LogicalAddress;};
union _FOBX___980A609D988DBD4CB131C399AACA181C {struct _FOBX___980A609D988DBD4CB131C399AACA181C___ADD771FE9CD79D23D667359594276EB2 NamedPipe;struct _FOBX___980A609D988DBD4CB131C399AACA181C___46B6635654A84F3F68986807E5ABC352 DiskFile;};
struct _INSTANCE_AGGREGATE_STANDARD_INFORMATION {ULONG NextEntryOffset;ULONG Flags;union _INSTANCE_AGGREGATE_STANDARD_INFORMATION___89B86B545DC0E9E5C9A260F4FB0E6711 Type;};
union _KPCR___ECC1A0E65F841FBB98040378B25C100B {NT_TIB NtTib;_KPCR___ECC1A0E65F841FBB98040378B25C100B___1652290D526860EA48CDE12F1525BEA4 __anonymous0;};
union _FCB___50C0FDD650F19B09787FD38ED35AB87F {_MRX_FCB_ __anonymous0;_FCB___50C0FDD650F19B09787FD38ED35AB87F___E4F32DF01258BB49EB743B84D1B370FA __anonymous1;};
union _IRP___6B96A96ED958C92F2CB4B83EAB343043 {struct _IRP___6B96A96ED958C92F2CB4B83EAB343043___1DDC8106121C6C57578C3B7B583E783E AsynchronousParameters;LARGE_INTEGER AllocationSize;};
typedef void (*PUNREGISTER_FOR_DEVICE_NOTIFICATIONS)(PDEVICE_OBJECT, PDEVICE_NOTIFY_CALLBACK);
struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {ULONG64 Version;PWSTR Name;};
struct _IO_DISCONNECT_INTERRUPT_PARAMETERS {ULONG Version;union _IO_DISCONNECT_INTERRUPT_PARAMETERS___8EB445A79BB4AE80EB9672A9FB0D8476 ConnectionContext;};
struct _KSPROPERTY_GRAPHMANAGER_INTERFACE {PFILE_OBJECT GraphManager;KSGRAPHMANAGER_FUNCTIONTABLE FunctionTable;};
struct _057D959110EF5AD26CCA8DAEC04011D1 {KSPROPERTY Property;union _057D959110EF5AD26CCA8DAEC04011D1___18711787946D537D259722AB27BFCBD3 u;};
struct _1C72DF34A2E997094BDDFB37C83896FB {PFNALLOCATOR_ALLOCATEFRAME AllocateFrame;PFNALLOCATOR_FREEFRAME FreeFrame;};
struct _2CC32A13BC47B0ADD425440A5881DEFA {ULONG MethodId;_2CC32A13BC47B0ADD425440A5881DEFA___F1120EB057508E4EB018F6F06D0FF063 __anonymous0;};
struct _37B8E770EA172EE03D1653C7B692D623 {ULONG NotificationType;_37B8E770EA172EE03D1653C7B692D623___1B15D34C184CB996FC269D8F9168C70F __anonymous0;};
struct _40A6D5622BA75F270314126148B7B4DB {INTERFACE Interface;PFNQUERYMEDIUMSLIST QueryMediumsList;};
struct _6659DDBE55020196BB0156953601526A {KSPROPERTY Property;union _6659DDBE55020196BB0156953601526A___EED1528C7EAD0409AD8D581383F39997 u;};
struct _79EFEDCEBD127DAA6245792B357A1A48 {KSP_NODE NodeProperty;union _79EFEDCEBD127DAA6245792B357A1A48___EED1528C7EAD0409AD8D581383F39997 u;};
struct _B0B71E7A52FD9A7B3B7D3722060F0E86 {PENTER_STATE_NOTIFY_HANDLER Handler;PVOID Context;};
struct _F0AD97B4DA1FA55F31FC7FE8AE7CC03A {PFNKSCLOCK_GETTIME GetTime;PFNKSCLOCK_GETTIME GetPhysicalTime;PFNKSCLOCK_CORRELATEDTIME GetCorrelatedTime;PFNKSCLOCK_CORRELATEDTIME GetCorrelatedPhysicalTime;};
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO {D3DDDI_SYNCHRONIZATIONOBJECT_TYPE Type;_D3DDDI_SYNCHRONIZATIONOBJECTINFO___472973EB593A73C3D9E2CF787418C0BB __anonymous0;};
typedef void ( *PFLT_CALLBACK_DATA_QUEUE_ACQUIRE)(PFLT_CALLBACK_DATA_QUEUE Cbdq, PKIRQL Irql);
struct _CLASS_QUERY_WMI_REGINFO_EX_LIST {ULONG Size;PCLASS_QUERY_WMI_REGINFO_EX ClassFdoQueryWmiRegInfoEx;PCLASS_QUERY_WMI_REGINFO_EX ClassPdoQueryWmiRegInfoEx;};
struct _IO_CONNECT_INTERRUPT_PARAMETERS {ULONG Version;_IO_CONNECT_INTERRUPT_PARAMETERS___2E6CC9919A7A4E65C2869C27AF9F4E89 __anonymous0;};
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {union _IMAGE_RESOURCE_DIRECTORY_ENTRY___B42F2B2B4BBA4E8DC819D947841EA255 u;union _IMAGE_RESOURCE_DIRECTORY_ENTRY___551B0CF679922063F379905F8C1D5CE8 u2;};
struct _STOR_INIT_UNICODE_STRING_ARGS {PVOID DestinationString;PCWSTR SourceString;};
struct _DXGK_POWER_COMPONENT_MAPPING {DXGK_POWER_COMPONENT_TYPE ComponentType;_DXGK_POWER_COMPONENT_MAPPING___4D3604193DE19EDC2B8BB053B2F74F11 __anonymous0;};
struct _HAL_AMLI_BAD_IO_ADDRESS_LIST {ULONG BadAddrBegin;ULONG BadAddrSize;ULONG OSVersionTrigger;PHALIOREADWRITEHANDLER IOHandler;};
struct _NDIS_CONFIGURATION_PARAMETER {NDIS_PARAMETER_TYPE ParameterType;union _NDIS_CONFIGURATION_PARAMETER___CAEDC0C5BA1E496165C848BD75AE74FE ParameterData;};
struct _URB_GET_CURRENT_FRAME_NUMBER {struct _URB_HEADER Hdr;ULONG FrameNumber;};
struct _NETWORK_OPEN_ECP_CONTEXT_V0 {USHORT Size;USHORT Reserved;struct _NETWORK_OPEN_ECP_CONTEXT_V0___05ECC70A33AA78360CE5BAA96286B27B s;};
struct _RXCE_TRANSPORT_INFORMATION_ {_TDI_PROVIDER_INFO __anonymous0;ULONG ConnectionCount;ULONG QualityOfService;};
struct _WSK_PROVIDER_BASIC_DISPATCH {PFN_WSK_CONTROL_SOCKET WskControlSocket;PFN_WSK_CLOSE_SOCKET WskCloseSocket;};
struct tag_video_geterrortext_parms {ULONG dwError;LPWSTR lpText;ULONG dwLength;};
struct _DXGK_CREATEALLOCATIONFLAGS {union {_DXGK_CREATEALLOCATIONFLAGS2 __anonymous0;UINT Value;};};
struct _NDIS_PHYSICAL_ADDRESS_UNIT {NDIS_PHYSICAL_ADDRESS PhysicalAddress;UINT Length;};
struct _PNP_REPLACE_PROCESSOR_LIST {PKAFFINITY Affinity;ULONG GroupCount;ULONG AllocatedCount;ULONG Count;ULONG ApicIds[1];};
struct _WSK_EVENT_CALLBACK_CONTROL {PNPIID NpiId;ULONG EventMask;};
struct _NETWORK_OPEN_ECP_CONTEXT {USHORT Size;USHORT Reserved;struct _NETWORK_OPEN_ECP_CONTEXT___4394467ED109257AE2A2394666F4A3B8 s;};
struct _WSK_EXTENSION_CONTROL_IN {PNPIID NpiId;PVOID ClientContext; void *ClientDispatch;};
struct _SD_GLOBAL_CHANGE_OUTPUT {ULONG Flags;ULONG ChangeType;_SD_GLOBAL_CHANGE_OUTPUT___8CE7FB804F1AFA92BB72A9A8C03B588F __anonymous0;};
struct _COUNTED_REASON_CONTEXT {ULONG Version;ULONG Flags;union _COUNTED_REASON_CONTEXT___0169A8C3C5184AFD0045925CDBD9A996 u;};
union _NET_BUFFER_LIST_HEADER {_NET_BUFFER_LIST_DATA __anonymous0;SLIST_HEADER Link;};
struct _NLB_PUBLIC_IOCTL_INPUT {WCHAR MiniportName[48];_NLB_PUBLIC_IOCTL_INPUT___A898DB159985FE167F7F53788BA32DF7 __anonymous0;};
struct _SD_GLOBAL_CHANGE_INPUT {ULONG Flags;ULONG ChangeType;_SD_GLOBAL_CHANGE_INPUT___A0DBCB078D30EE13E6919343E3D34626 __anonymous0;};
typedef D3DKMT_HANDLE ( *DXGKCB_GETHANDLEPARENT)(IN_D3DKMT_HANDLE hAllocation);
typedef void (*PSTREAM_RECEIVE_PACKET)(PVOID Srb, PVOID DeviceContext, PBOOLEAN Completed);
struct _SCSI_EXTENDED_MESSAGE {UCHAR InitialMessageCode;UCHAR MessageLength;UCHAR MessageType;union _SCSI_EXTENDED_MESSAGE___EXTENDED_ARGUMENTS ExtendedArguments;};
struct DL_TEREDO_ADDRESS_PRV {UINT8 Reserved[6];DL_TEREDO_ADDRESS_PRV___8AE4EEAF9BFB4C7125F7ADE378B0209F __anonymous0;};
struct HBA_LibraryAttributes {HBA_BOOLEAN final;char LibPath[256];char VName[256];char VVersion[256];struct tm build_date;};
struct _GET_LOCAL_HOST_INFO4 {PPORT_PHYS_ADDR_ROUTINE PhysAddrMappingRoutine;PVOID Context;};
struct _LLDP_CLIENT_DISPATCH {PLLDP_MSAP_CHANGE_NOTIFICATION_HANDLER MsapNotifyChange;PLLDP_MSAP_CREATE_NOTIFICATION_HANDLER MsapNotifyCreate;};
struct _URB_GET_FRAME_LENGTH {struct _URB_HEADER Hdr;ULONG FrameLength;ULONG FrameNumber;};
struct _URB_SET_FRAME_LENGTH {struct _URB_HEADER Hdr;LONG FrameLengthDelta;};
struct _DSM_COMPLETION_INFO {DSM_COMPLETION_ROUTINE DsmCompletionRoutine;PVOID DsmContext;};
struct _IPV4_ROUTING_HEADER {_IPV4_OPTION_HEADER __anonymous0;UINT8 Pointer;};
struct _STREAM_EXTENT_ENTRY {ULONG Flags;union _STREAM_EXTENT_ENTRY___72E4D09D488BEF968C138C69BDFB0892 ExtentInformation;};
struct _WSK_CLIENT_DISPATCH {USHORT Version;USHORT Reserved;PFN_WSK_CLIENT_EVENT WskClientEvent;};
struct _WWAN_AUTH_CHALLENGE {WWAN_AUTH_METHOD AuthMethod;union _WWAN_AUTH_CHALLENGE___E6006800066CD04FA0133270A2878C2F u;};
typedef void IO_CSQ_ACQUIRE_LOCK(PIO_CSQ Csq, PKIRQL Irql);
struct _COMPLETION_CONTEXT {PDEVICE_OBJECT DeviceObject;union _COMPLETION_CONTEXT___A3035D131E712C9B8FDABD583C95013C Srb;};
struct _WWAN_AUTH_RESPONSE {WWAN_AUTH_METHOD AuthMethod;union _WWAN_AUTH_RESPONSE___EDA7B12D2E325970687F251858520D25 u;};
struct _AAL_PARAMETERS_IE {ATM_AAL_TYPE AALType;union _AAL_PARAMETERS_IE___0FDB8D62C7DBB0B09ABD7E38350DE0B1 AALSpecificParameters;};
struct _AVC_MULTIFUNC_IRB {_AVC_IRB __anonymous0;_AVC_MULTIFUNC_IRB___19B143002B6E29BFBBF92C7766CBAC0D __anonymous1;};
union _NET_BUFFER_HEADER {_NET_BUFFER_DATA __anonymous0;SLIST_HEADER Link;};
struct tagWNODE_TOO_SMALL {struct _WNODE_HEADER WnodeHeader;ULONG SizeNeeded;};
struct _AV_61883_REQUEST {ULONG Function;ULONG Version;ULONG Flags;_AV_61883_REQUEST___F219298361C97389521033D921298EFE __anonymous0;};
struct IP6RouteEntry_V1 {ulong ire_Length;struct in6_addr ire_Source;ulong ire_ScopeId;ulong ire_IfIndex;};
struct IP6RouteEntry_V2 {ulong ire_Length;ulong ire_Type;ulong ire_IfIndex;ulong ire_SourceScopeId;ulong ire_NextHopScopeId;struct in6_addr ire_Source;struct in6_addr ire_NextHop;};
struct _HOOK_IP_ADDRESS {HOOK_IP_ADDRESS_TYPE Type;_HOOK_IP_ADDRESS___E79D2EBADADA954EBAD234A2B8162860 __anonymous0;};
struct _LOG_PARAMETER {LOG_PARAMETER_HEADER Header;_LOG_PARAMETER___9EEBBB1A64808B0635EB31C525C9DFB4 __anonymous0;};
struct _REASON_BUFFER {ULONG Flags;union _REASON_BUFFER___F74655129F2DFA9F1DDC40A17BAD0BC2 u;};
struct HBA_EventInfo {HBA_UINT32 EventCode;union HBA_EventInfo___354F98172143542044A796E42E11C620 Event;};
struct SMHBA_PORTLUN {HBA_WWN PortWWN;HBA_WWN domainPortWWN;HBA_SCSILUN TargetLun;};
struct _ICMP_MESSAGE {ICMP_HEADER Header;union _ICMP_MESSAGE___C0C56E405763639CDB48E11DB99F029A Data;};
struct _SdpQueryUuid {SdpQueryUuidUnion u;USHORT uuidType;};
struct _FPDT_RECORD {FPDT_RECORD_HEADER RecordHeader;union _FPDT_RECORD___0CC1B4B8637A0854707BAFDC0DDB0B75 u;};
struct tcp_opt_sack {UINT8 Kind;UINT8 Length;struct tcp_opt_sack__tcp_opt_sack_block Block[];};
struct _DMARTABLE {USHORT Type;USHORT Length;union _DMARTABLE___AE0FC9D9EC7026AF279F43755B1DFE09 u;};
struct addrinfoW {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;size_t ai_addrlen;PWSTR ai_canonname;struct sockaddr *ai_addr;struct addrinfoW *ai_next;};
union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___3D88FD3E473BDC33E8E9B3C9823BBBAC {union _DISPATCHER_HEADER_________3D88FD3E473BDC33E8E9B3C9823BBBAC___9AEC1978167063A5A657752090B9C59F u;union _DISPATCHER_HEADER_________3D88FD3E473BDC33E8E9B3C9823BBBAC___0721FA4078DC4A6AFEE1EA98BF9F2861 u2;BOOLEAN DpcActive;};
union _IO_STACK_LOCATION______01D776BE44431130AB476CFB6102BAD9___A1B04431FB6E59C2D561338119C8AE61 {_FLT_PARAMETERS______5EC0DA9471CFCB1EC49AD6D2337964D2___5395532E35CA13A919E63C6E41FE24BB __anonymous0;ULONG ClusterCount;HANDLE DeleteHandle;};
union _FLT_PARAMETERS___28FCA4D722CF4A97784C865BFD6B2B2D___5EC0DA9471CFCB1EC49AD6D2337964D2 {_FLT_PARAMETERS______5EC0DA9471CFCB1EC49AD6D2337964D2___5395532E35CA13A919E63C6E41FE24BB __anonymous0;ULONG ClusterCount;HANDLE DeleteHandle;};
typedef NTSTATUS ( *DXGKDDI_MONITORFREQUENCYRANGESET_GETNUMFREQUENCYRANGES)(IN_CONST_D3DKMDT_HMONITORFREQUENCYRANGESET hMonitorFrequencyRangeSet, OUT_PSIZE_T_CONST pNumMonitorFrequencyRanges);
union _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC {struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_0 type0;struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_1 type1;struct _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC___PCI_HEADER_TYPE_2 type2;};
union _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE {struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___B5E578257FBF3862337C2F1A8AD9935B ApicAffinity;struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___F283BDF483E96915173589B9951F87CD MemoryAffinity;struct _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE___934BEDD351FC4B1D46DCE8BA1EC27DBF X2ApicAffinity;};
typedef NTSTATUS ( *DXGKDDI_MONITORDESCRIPTORSET_GETNUMDESCRIPTORS)(IN_CONST_D3DKMDT_HMONITORDESCRIPTORSET hMonitorDescriptorSet, OUT_PSIZE_T_CONST pNumMonitorDescriptors);
typedef NTSTATUS ( *DXGKDDI_MONITORSOURCEMODESET_GETNUMMODES)(IN_CONST_D3DKMDT_HMONITORSOURCEMODESET hMonitorSourceModeSet, OUT_PSIZE_T_CONST pNumMonitorSourceModes);
struct _DXGKARG_GETSTANDARDALLOCATIONDRIVERDATA {D3DKMDT_STANDARDALLOCATION_TYPE StandardAllocationType;_DXGKARG_GETSTANDARDALLOCATIONDRIVERDATA___4B54797CDD414360C77500AE5D81FC70 __anonymous0;void *pAllocationPrivateDriverData;UINT AllocationPrivateDriverDataSize;void *pResourcePrivateDriverData;UINT ResourcePrivateDriverDataSize;};
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX {LOGICAL_PROCESSOR_RELATIONSHIP Relationship;ULONG Size;union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX___293D76B56AB4224063B0E84352A448B8 u;};
union _IRP___66699B8BF83DC91F51A70E4C6E3F33A6 {struct _IRP___66699B8BF83DC91F51A70E4C6E3F33A6___2AD798E65616C4F7304824DBFA27E419 Overlay;KAPC Apc;PVOID CompletionKey;};
typedef NTSTATUS ( *DXGKDDI_VIDPNSOURCEMODESET_GETNUMMODES)(IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet, OUT_PSIZE_T_CONST pNumSourceModes);
typedef NTSTATUS ( *DXGKDDI_VIDPNTARGETMODESET_GETNUMMODES)(IN_CONST_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet, OUT_PSIZE_T_CONST pNumTargetModes);
struct _SFFDISK_DEVICE_PARTITION_ACCESS_DATA {ULONG Size;SFFDISK_PARTITION_ACCESS Command;ULONG Reserved[2];union _SFFDISK_DEVICE_PARTITION_ACCESS_DATA___FE9A7D2760B9FD53E9BA88DB4AA27BB6 Parameters;};
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {ULONG_PTR ProcessorMask;LOGICAL_PROCESSOR_RELATIONSHIP Relationship;union _SYSTEM_LOGICAL_PROCESSOR_INFORMATION___9AE09388705FAA889F2B471E64FEF088 u;};
struct _PARALLEL_INTERRUPT_SERVICE_ROUTINE {PKSERVICE_ROUTINE InterruptServiceRoutine;PVOID InterruptServiceContext;PPARALLEL_DEFERRED_ROUTINE DeferredPortCheckRoutine;PVOID DeferredPortCheckContext;};
typedef NTSTATUS ( *DXGKDDI_VIDPNSOURCEMODESET_PINMODE)(IN_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet, IN_CONST_D3DKMDT_VIDEO_PRESENT_SOURCE_MODE_ID VidPnSourceModeId);
typedef NTSTATUS ( *DXGKDDI_VIDPNTARGETMODESET_PINMODE)(IN_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet, IN_CONST_D3DKMDT_VIDEO_PRESENT_TARGET_MODE_ID VidPnTargetModeId);
struct _2BE75473CF3D1F712ED4D05E7A3C1140 {INTERFACE _vddInterface;GPIOOPEN gpioOpen;GPIOACCESS gpioAccess;};
struct _C0F7BB227D2914979DE22500D0E4A4BA {ULONG PropertyId;_C0F7BB227D2914979DE22500D0E4A4BA___0CCE2AE982A077A8E6346F069E293B38 __anonymous0;_C0F7BB227D2914979DE22500D0E4A4BA___AC534CA50395027A7F697CBC885BBBC2 __anonymous1;ULONG Reserved;};
struct _DDC9888807A9735D7BAE133B998CF89F {INTERFACE _vddInterface;I2COPEN i2cOpen;I2CACCESS i2cAccess;};
struct _DE8F492EE455543594962797C1392B09 {ULONG MethodId;_DE8F492EE455543594962797C1392B09___5BDBA56DE03A5015F28D8AA8E2E4ED3B __anonymous0;ULONG MinMethod;ULONG MinData;PFNKSHANDLER SupportHandler;ULONG Flags;};
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_GETNUMPATHS)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, OUT_PSIZE_T pNumPaths);
typedef NTSTATUS ( *PMRX_FINALIZE_V_NET_ROOT_CALLDOWN)(PMRX_V_NET_ROOT VirtualNetRoot, PBOOLEAN Force);
struct _BRB_GET_DEVICE_INTERFACE_STRING {BRB_HEADER Hdr;PWCHAR DeviceInterfaceString;ULONG DeviceInterfaceStringCbLength;};
struct _DOT11_OFFLOAD_NETWORK_LIST_INFO {NDIS_OBJECT_HEADER Header;ULONG ulFlags;ULONG FastScanPeriod;ULONG FastScanIterations;ULONG SlowScanPeriod;ULONG uNumOfEntries;DOT11_OFFLOAD_NETWORK offloadNetworkList[1];};
union _NDIS_OID_REQUEST___REQUEST_DATA {struct _NDIS_OID_REQUEST___REQUEST_DATA___QUERY QUERY_INFORMATION;struct _NDIS_OID_REQUEST___REQUEST_DATA___SET SET_INFORMATION;struct _NDIS_OID_REQUEST___REQUEST_DATA___METHOD METHOD_INFORMATION;};
typedef NTSTATUS ( *PMRX_FINALIZE_NET_ROOT_CALLDOWN)(PMRX_NET_ROOT NetRoot, PBOOLEAN Force);
typedef NTSTATUS  USB_BUSIFFN_ROOTHUB_INIT_NOTIFY(PVOID BusContext, PVOID CallbackContext, PRH_INIT_CALLBACK CallbackRoutine);
struct _INDICATION_PARAMETERS_ENHANCED {L2CAP_CHANNEL_HANDLE ConnectionHandle;BTH_ADDR BtAddress;union _INDICATION_PARAMETERS_ENHANCED___7794D0867AF4770B977B75C0DF01259D Parameters;};
struct _WSK_CLIENT_CONNECTION_DISPATCH {PFN_WSK_RECEIVE_EVENT WskReceiveEvent;PFN_WSK_DISCONNECT_EVENT WskDisconnectEvent;PFN_WSK_SEND_BACKLOG_EVENT WskSendBacklogEvent;};
struct _MESSAGE_INTERRUPT_INFORMATION {ULONG MessageId;ULONG MessageData;STOR_PHYSICAL_ADDRESS MessageAddress;ULONG InterruptVector;ULONG InterruptLevel;KINTERRUPT_MODE InterruptMode;};
struct _NDK_SHARED_ENDPOINT_DISPATCH {NDK_FN_CLOSE_OBJECT NdkCloseSharedEndpoint;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_GET_SHARED_ENDPOINT_LOCAL_ADDRESS NdkGetLocalAddress;};
struct _CLASS_INTERPRET_SENSE_INFO2 {ULONG Size;ULONG HistoryCount;PCLASS_COMPRESS_RETRY_HISTORY_DATA Compress;PCLASS_INTERPRET_SENSE_INFO Interpret;};
struct _NDK_LOGICAL_ADDRESS_MAPPING {PVOID AdapterContext;ULONG AdapterPageCount;NDK_LOGICAL_ADDRESS AdapterPageArray[1];};
struct _STOR_SCATTER_GATHER_ELEMENT {STOR_PHYSICAL_ADDRESS PhysicalAddress;ULONG Length;ULONG_PTR Reserved;};
typedef void DXGKDDI_CONTROL_ETW_LOGGING(IN_BOOLEAN Enable, IN_ULONG Flags, IN_UCHAR Level);
typedef void PROCESSOR_CALLBACK_FUNCTION(PVOID CallbackContext, PKE_PROCESSOR_CHANGE_NOTIFY_CONTEXT ChangeContext, PNTSTATUS OperationStatus);
struct _IDE_SCATTER_GATHER_ELEMENT {IDE_PHYSICAL_ADDRESS Address;ULONG Length;ULONG_PTR Reserved;};
struct _WSK_CLIENT_LISTEN_DISPATCH {PFN_WSK_ACCEPT_EVENT WskAcceptEvent;PFN_WSK_INSPECT_EVENT WskInspectEvent;PFN_WSK_ABORT_EVENT WskAbortEvent;};
typedef void (*TDI_ADD_ADDRESS_HANDLER_V2)(PTA_ADDRESS Address, PUNICODE_STRING DeviceName, PTDI_PNP_CONTEXT Context);
typedef void (*TDI_DEL_ADDRESS_HANDLER_V2)(PTA_ADDRESS Address, PUNICODE_STRING DeviceName, PTDI_PNP_CONTEXT Context);
struct _SCO_INDICATION_PARAMETERS {SCO_CHANNEL_HANDLE ConnectionHandle;BTH_ADDR BtAddress;union _SCO_INDICATION_PARAMETERS___D4E28F4081F1F076F9F0C13A2A308A12 Parameters;};
struct _FSRTL_PER_STREAM_CONTEXT {LIST_ENTRY Links;PVOID OwnerId;PVOID InstanceId;PFREE_FUNCTION FreeCallback;};
struct _HID_INTERFACE_NOTIFY_PNP {_INTERFACE __anonymous0;PHID_STATUS_CHANGE StatusChangeFn;PVOID CallbackContext;};
struct _NDIS_TAPI_GATHER_DIGITS {ULONG ulRequestID;HDRV_CALL hdCall;ULONG ulEndToEndID;ULONG ulDigitModes;LPWSTR lpsOrigDigitsBuffer;ULONG ulDigitsBufferOffset;ULONG ulNumDigitsNeeded;ULONG ulNumDigitsRead;ULONG ulTickCount;ULONG ulTerminationReason;ULONG ulTerminationDigitsMask;ULONG ulFirstDigitTimeout;ULONG ulInterDigitTimeout;};
struct tagWNODE_SINGLE_INSTANCE {struct _WNODE_HEADER WnodeHeader;ULONG OffsetInstanceName;ULONG InstanceIndex;ULONG DataBlockOffset;ULONG SizeDataBlock;UCHAR VariableData[];};
typedef NTSTATUS (*PFNQUERYREFERENCESTRING)(PVOID Context, PWCHAR *String);
struct _FSRTL_PER_FILE_CONTEXT {LIST_ENTRY Links;PVOID OwnerId;PVOID InstanceId;PFREE_FUNCTION FreeCallback;};
struct _IO_RESOURCE_DESCRIPTOR {UCHAR Option;UCHAR Type;UCHAR ShareDisposition;UCHAR Spare1;USHORT Flags;USHORT Spare2;union _IO_RESOURCE_DESCRIPTOR___E0BCE46F03EEBF143E8289580A8E6C02 u;};
struct _DXGK_RENDERKM_COMMAND {DXGK_RENDERKM_OPERATION OpCode;UINT CommandSize;union _DXGK_RENDERKM_COMMAND___20FB83705FDF1C2BBDC788448CA29830 Command;};
struct _INDICATION_PARAMETERS {L2CAP_CHANNEL_HANDLE ConnectionHandle;BTH_ADDR BtAddress;union _INDICATION_PARAMETERS___49422E54869234B26F6D19741FBAAAC1 Parameters;};
typedef NTSTATUS GET_D3COLD_CAPABILITY(PVOID Context, PBOOLEAN D3ColdSupported);
struct _URB_SELECT_INTERFACE {struct _URB_HEADER Hdr;USBD_CONFIGURATION_HANDLE ConfigurationHandle;USBD_INTERFACE_INFORMATION Interface;};
typedef NTSTATUS (*PGET_LOCATION_STRING)(PVOID Context, PZZWSTR *LocationStrings);
struct SMHBA_PortAttributes {HBA_PORTTYPE PortType;HBA_PORTSTATE PortState;char OSDeviceName[256];SMHBA_PORT PortSpecificAttribute;};
struct _DISK_DETECTION_INFO {ULONG SizeOfDetectInfo;DETECTION_TYPE DetectionType;union _DISK_DETECTION_INFO___48876EDB82F731E03DD8D988B59F7EB8 u;};
struct _FLT_TAG_DATA_BUFFER {ULONG FileTag;USHORT TagDataLength;USHORT UnparsedNameLength;_FLT_TAG_DATA_BUFFER___DCEC59C943A34D005E5CC5FDD2A7B5E0 __anonymous0;};
struct _FS_FILTER_CALLBACKS {ULONG SizeOfFsFilterCallbacks;ULONG Reserved;PFS_FILTER_CALLBACK PreAcquireForSectionSynchronization;PFS_FILTER_COMPLETION_CALLBACK PostAcquireForSectionSynchronization;PFS_FILTER_CALLBACK PreReleaseForSectionSynchronization;PFS_FILTER_COMPLETION_CALLBACK PostReleaseForSectionSynchronization;PFS_FILTER_CALLBACK PreAcquireForCcFlush;PFS_FILTER_COMPLETION_CALLBACK PostAcquireForCcFlush;PFS_FILTER_CALLBACK PreReleaseForCcFlush;PFS_FILTER_COMPLETION_CALLBACK PostReleaseForCcFlush;PFS_FILTER_CALLBACK PreAcquireForModifiedPageWriter;PFS_FILTER_COMPLETION_CALLBACK PostAcquireForModifiedPageWriter;PFS_FILTER_CALLBACK PreReleaseForModifiedPageWriter;PFS_FILTER_COMPLETION_CALLBACK PostReleaseForModifiedPageWriter;};
struct _RTL_HEAP_PARAMETERS {ULONG Length;SIZE_T SegmentReserve;SIZE_T SegmentCommit;SIZE_T DeCommitFreeBlockThreshold;SIZE_T DeCommitTotalFreeThreshold;SIZE_T MaximumAllocationSize;SIZE_T VirtualMemoryThreshold;SIZE_T InitialCommit;SIZE_T InitialReserve;PRTL_HEAP_COMMIT_ROUTINE CommitRoutine;SIZE_T Reserved[2];};
struct tagWNODE_METHOD_ITEM {struct _WNODE_HEADER WnodeHeader;ULONG OffsetInstanceName;ULONG InstanceIndex;ULONG MethodId;ULONG DataBlockOffset;ULONG SizeDataBlock;UCHAR VariableData[];};
struct tagWNODE_SINGLE_ITEM {struct _WNODE_HEADER WnodeHeader;ULONG OffsetInstanceName;ULONG InstanceIndex;ULONG ItemId;ULONG DataBlockOffset;ULONG SizeDataItem;UCHAR VariableData[];};
typedef void (*TDI_BINDING_HANDLER)(TDI_PNP_OPCODE PnPOpcode, PUNICODE_STRING DeviceName, PWSTR MultiSZBindList);
struct sockaddr_in6_w2ksp1 {short sin6_family;USHORT sin6_port;ULONG sin6_flowinfo;struct in6_addr sin6_addr;ULONG sin6_scope_id;};
struct _DIAGNOSTIC_BUFFER {SIZE_T Size;REQUESTER_TYPE CallerType;union _DIAGNOSTIC_BUFFER___4E29E94F515127A20013144D2AA07CD6 u;SIZE_T ReasonOffset;};
struct _DXGK_CHILD_STATUS {DXGK_CHILD_STATUS_TYPE Type;ULONG ChildUid;_DXGK_CHILD_STATUS___405E8B681A819E3DCAD6FCCC24D036D5 __anonymous0;};
struct _KSFILTER_DISPATCH {PFNKSFILTERIRP Create;PFNKSFILTERIRP Close;PFNKSFILTERPROCESS Process;PFNKSFILTERVOID Reset;};
struct _PCI_COMMON_HEADER {USHORT VendorID;USHORT DeviceID;USHORT Command;USHORT Status;UCHAR RevisionID;UCHAR ProgIf;UCHAR SubClass;UCHAR BaseClass;UCHAR CacheLineSize;UCHAR LatencyTimer;UCHAR HeaderType;UCHAR BIST;union _PCI_COMMON_HEADER___7E4CCF46A79164E1B9D28A73871123CC u;};
typedef void (*NLBHookDeregister)( PWCHAR pHookIdentifier, HANDLE RegisteringEntity, ULONG Flags);
struct _CLFS_MGMT_POLICY {ULONG Version;ULONG LengthInBytes;ULONG PolicyFlags;CLFS_MGMT_POLICY_TYPE PolicyType;union _CLFS_MGMT_POLICY___6E9F8984096FC4F0F3A618149F37A339 PolicyParameters;};
struct _URB_PIPE_REQUEST {struct _URB_HEADER Hdr;USBD_PIPE_HANDLE PipeHandle;ULONG Reserved;};
struct tagWNODE_ALL_DATA {struct _WNODE_HEADER WnodeHeader;ULONG DataBlockOffset;ULONG InstanceCount;ULONG OffsetInstanceNameOffsets;union tagWNODE_ALL_DATA___2509F747D046B06D85040055D485D2C5 u;};
struct _CMC_DRIVER_INFO {PDRIVER_CMC_EXCEPTION_CALLBACK ExceptionCallback;PKDEFERRED_ROUTINE DpcCallback;PVOID DeviceContext;};
struct _CPE_DRIVER_INFO {PDRIVER_CPE_EXCEPTION_CALLBACK ExceptionCallback;PKDEFERRED_ROUTINE DpcCallback;PVOID DeviceContext;};
struct _MCA_DRIVER_INFO {PDRIVER_MCA_EXCEPTION_CALLBACK ExceptionCallback;PKDEFERRED_ROUTINE DpcCallback;PVOID DeviceContext;};
struct _NDK_MW_DISPATCH {NDK_FN_CLOSE_OBJECT NdkCloseMw;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_GET_REMOTE_TOKEN_FROM_MW NdkGetRemoteTokenFromMw;};
struct _WORK_QUEUE_ITEM {LIST_ENTRY List;PWORKER_THREAD_ROUTINE WorkerRoutine;PVOID Parameter;};
struct SMHBA_ScsiEntry {SMHBA_SCSIID ScsiId;SMHBA_PORTLUN PortLun;SMHBA_LUID LUID;};
typedef NDIS_STATUS MINIPORT_RESET(NDIS_HANDLE MiniportAdapterContext, PBOOLEAN AddressingReset);
struct SMHBA_SAS_Port {HBA_SASPORTPROTOCOL PortProtocol;HBA_WWN LocalSASAddress;HBA_WWN AttachedSASAddress;HBA_UINT32 NumberofDiscoveredPorts;HBA_UINT32 NumberofPhys;};
struct _NDIS_WAN_INFO {ULONG MaxFrameSize;ULONG MaxTransmit;ULONG HeaderPadding;ULONG TailPadding;ULONG Endpoints;UINT MemoryFlags;NDIS_PHYSICAL_ADDRESS HighestAcceptableAddress;ULONG FramingBits;ULONG DesiredACCM;};
struct SMHBA_SAS_Phy {HBA_UINT8 PhyIdentifier;HBA_SASPHYSPEED NegotiatedLinkRate;HBA_SASPHYSPEED ProgrammedMinLinkRate;HBA_SASPHYSPEED HardwareMinLinkRate;HBA_SASPHYSPEED ProgrammedMaxLinkRate;HBA_SASPHYSPEED HardwareMaxLinkRate;HBA_WWN domainPortWWN;};
struct _ACCESS_RANGE {STREAM_PHYSICAL_ADDRESS RangeStart;ULONG RangeLength;BOOLEAN RangeInMemory;ULONG Reserved;};
struct _GET_UNIT_IDS {LARGE_INTEGER UniqueID;ULONG VendorID;ULONG ModelID;ULONG ulVendorLength;PWSTR VendorText;ULONG ulModelLength;PWSTR ModelText;ULONG UnitModelID;ULONG ulUnitModelLength;PWSTR UnitModelText;};
struct SMHBA_FC_Phy {HBA_FCPHYSPEED PhySupportSpeed;HBA_FCPHYSPEED PhySpeed;HBA_FCPHYTYPE PhyType;HBA_UINT32 MaxFrameSize;};
struct addrinfoex2W {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;size_t ai_addrlen;PWSTR ai_canonname;struct sockaddr *ai_addr;void *ai_blob;size_t ai_bloblen;LPGUID ai_provider;struct addrinfoex2W *ai_next;int ai_version;PWSTR ai_fqdn;};
union sockaddr_gen {struct sockaddr Address;struct sockaddr_in AddressIn;struct sockaddr_in6_old AddressIn6;};
struct addrinfoexW {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;size_t ai_addrlen;PWSTR ai_canonname;struct sockaddr *ai_addr;void *ai_blob;size_t ai_bloblen;LPGUID ai_provider;struct addrinfoexW *ai_next;};
struct _NDK_SGE {_NDK_SGE___D19CDDEA9BCFEEE1770C08F9285617BC __anonymous0;ULONG Length;UINT32 MemoryRegionToken;};
struct _IRB {ULONG FunctionNumber;ULONG Flags;ULONG_PTR BusReserved[8];ULONG_PTR PortReserved[8];union _IRB___09A81769302A491E6411F5F4C2220811 u;};
struct _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93___AFF04DDE3F02527F7CD33F31B475CA02 {UCHAR Type;union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___2986B08B47BF9BFD72B43A2B98AB18CC u;union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___122E4B3396C704A8B6A7CF97EAAF7D74 u2;union _DISPATCHER_HEADER______AFF04DDE3F02527F7CD33F31B475CA02___3D88FD3E473BDC33E8E9B3C9823BBBAC u3;};
struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___01D776BE44431130AB476CFB6102BAD9 {ULONG Length;FILE_INFORMATION_CLASS FileInformationClass;PFILE_OBJECT FileObject;_FLT_PARAMETERS___28FCA4D722CF4A97784C865BFD6B2B2D___5EC0DA9471CFCB1EC49AD6D2337964D2 __anonymous0;};
typedef NTSTATUS ( *DXGKDDI_MONITOR_RELEASEADDITIONALMONITORMODESET)(IN_CONST_D3DKMDT_ADAPTER hAdapter, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VideoPresentTargetId, IN_CONST_PDXGK_TARGETMODE_DETAIL_TIMING pAdditionalModesSet);
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_GETPATHSOURCEFROMTARGET)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidTopology, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId, OUT_PD3DDDI_VIDEO_PRESENT_SOURCE_ID pVidPnSourceId);
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_GETNUMPATHSFROMSOURCE)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, OUT_PSIZE_T pNumPathsFromSource);
struct _DXGK_MONITORFREQUENCYRANGESET_INTERFACE {DXGKDDI_MONITORFREQUENCYRANGESET_GETNUMFREQUENCYRANGES pfnGetNumFrequencyRanges;DXGKDDI_MONITORFREQUENCYRANGESET_ACQUIREFIRSTFREQUENCYRANGEINFO pfnAcquireFirstFrequencyRangeInfo;DXGKDDI_MONITORFREQUENCYRANGESET_ACQUIRENEXTFREQUENCYRANGEINFO pfnAcquireNextFrequencyRangeInfo;DXGKDDI_MONITORFREQUENCYRANGESET_RELEASEFREQUENCYRANGEINFO pfnReleaseFrequencyRangeInfo;};
typedef void MINIPORT_ALLOCATE_SHARED_MEM_COMPLETE(NDIS_HANDLE MiniportAdapterContext, PVOID VirtualAddress, PNDIS_PHYSICAL_ADDRESS PhysicalAddress, ULONG Length, PVOID Context);
struct _DXGK_MONITORDESCRIPTORSET_INTERFACE {DXGKDDI_MONITORDESCRIPTORSET_GETNUMDESCRIPTORS pfnGetNumDescriptors;DXGKDDI_MONITORDESCRIPTORSET_ACQUIREFIRSTDESCRIPTORINFO pfnAcquireFirstDescriptorInfo;DXGKDDI_MONITORDESCRIPTORSET_ACQUIRENEXTDESCRIPTORINFO pfnAcquireNextDescriptorInfo;DXGKDDI_MONITORDESCRIPTORSET_RELEASEDESCRIPTORINFO pfnReleaseDescriptorInfo;};
typedef NTSTATUS (*PCLFS_CLIENT_ADVANCE_TAIL_CALLBACK)(PLOG_FILE_OBJECT LogFile, PCLFS_LSN TargetLsn, PVOID ClientData);
struct _D3DDDI_SYNCHRONIZATIONOBJECTINFO2 {D3DDDI_SYNCHRONIZATIONOBJECT_TYPE Type;D3DDDI_SYNCHRONIZATIONOBJECT_FLAGS Flags;_D3DDDI_SYNCHRONIZATIONOBJECTINFO2___FD6C6867497A0B5F8C810796FB2C026F __anonymous0;D3DKMT_HANDLE SharedHandle;};
struct _549F68C5033A6E8C170A3B5760D9B241 {WCHAR HookIdentifier[39];HANDLE RegisteringEntity;PVOID HookTable;NLBHookDeregister DeregisterCallback;};
struct _9452773C7C9658DF0A7C90A31311AC2C {INTERFACE Interface;PFNREFERENCEDEVICEOBJECT ReferenceDeviceObject;PFNDEREFERENCEDEVICEOBJECT DereferenceDeviceObject;PFNQUERYREFERENCESTRING QueryReferenceString;};
struct _BBE51AA07033B60919BF464EA8FAB770 {ULONG EventId;ULONG DataInput;ULONG ExtraEntryData;PFNKSADDEVENT AddHandler;PFNKSREMOVEEVENT RemoveHandler;PFNKSHANDLER SupportHandler;};
typedef NTSTATUS ( *DXGKDDI_VIDPN_ASSIGNSOURCEMODESET)(IN_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, IN_CONST_D3DKMDT_HVIDPNSOURCEMODESET hVidPnSourceModeSet);
typedef NTSTATUS ( *DXGKDDI_VIDPN_ASSIGNTARGETMODESET)(IN_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId, IN_CONST_D3DKMDT_HVIDPNTARGETMODESET hVidPnTargetModeSet);
struct _NDIS_IF_PROVIDER_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;IFP_QUERY_OBJECT QueryObjectHandler;IFP_SET_OBJECT SetObjectHandler;PVOID Reserved1;PVOID Reserved2;};
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_REMOVEPATH)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId);
typedef VP_STATUS (*PMINIPORT_GET_REGISTRY_ROUTINE)(PVOID HwDeviceExtension, PVOID Context, PWSTR ValueName, PVOID ValueData, ULONG ValueLength);
struct _WHEA_ERROR_SOURCE_DESCRIPTOR {ULONG Length;ULONG Version;WHEA_ERROR_SOURCE_TYPE Type;WHEA_ERROR_SOURCE_STATE State;ULONG MaxRawDataLength;ULONG NumRecordsToPreallocate;ULONG MaxSectionsPerRecord;ULONG ErrorSourceId;ULONG PlatformErrorSourceId;ULONG Flags;union _WHEA_ERROR_SOURCE_DESCRIPTOR___56ED19DD1B595419A3CAA61DD61D8112 Info;};
typedef NTSTATUS ( *DXGKCB_QUERYMONITORINTERFACE)(IN_CONST_HANDLE hAdapter, IN_CONST_DXGK_MONITOR_INTERFACE_VERSION MonitorInterfaceVersion, DEREF_OUT_CONST_PPDXGK_MONITOR_INTERFACE ppMonitorInterface);
struct _SECURITY_QUALITY_OF_SERVICE {ULONG Length;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;BOOLEAN EffectiveOnly;};
struct _NDIS_TIMER_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;ULONG AllocationTag;PNDIS_TIMER_FUNCTION TimerFunction;PVOID FunctionContext;};
typedef NTSTATUS ( *DXGKCB_QUERYVIDPNINTERFACE)(IN_CONST_D3DKMDT_HVIDPN hVidPn, IN_CONST_DXGK_VIDPN_INTERFACE_VERSION VidPnInterfaceVersion, DEREF_OUT_CONST_PPDXGK_VIDPN_INTERFACE ppVidPnInterface);
typedef NTSTATUS DXGKDDI_QUERY_CHILD_STATUS(IN_CONST_PVOID MiniportDeviceContext, INOUT_PDXGK_CHILD_STATUS ChildStatus, IN_BOOLEAN NonDestructiveOnly);
typedef NTSTATUS  RTL_QUERY_REGISTRY_ROUTINE(PWSTR ValueName, ULONG ValueType, PVOID ValueData, ULONG ValueLength, PVOID Context, PVOID EntryContext);
struct _NPI_REGISTRATION_INSTANCE {USHORT Version;USHORT Size;PNPIID NpiId;PNPI_MODULEID ModuleId;ULONG Number; void *NpiSpecificCharacteristics;};
struct _URB_SELECT_CONFIGURATION {struct _URB_HEADER Hdr;PUSB_CONFIGURATION_DESCRIPTOR ConfigurationDescriptor;USBD_CONFIGURATION_HANDLE ConfigurationHandle;USBD_INTERFACE_INFORMATION Interface;};
typedef NTSTATUS ( *DXGKCB_IS_DEVICE_PRESENT)(HANDLE DeviceHandle, PPCI_DEVICE_PRESENCE_PARAMETERS DevicePresenceParameters, PBOOLEAN DevicePresent);
typedef NTSTATUS  DXGKDDI_CONTROLINTERRUPT(IN_CONST_HANDLE hAdapter, IN_CONST_DXGK_INTERRUPT_TYPE InterruptType, IN_BOOLEAN EnableInterrupt);
struct tagWNODE_EVENT_REFERENCE {struct _WNODE_HEADER WnodeHeader;GUID TargetGuid;ULONG TargetDataBlockSize;union tagWNODE_EVENT_REFERENCE___35BDACE2D4BA78DD0D25FA8577D99EB2 u;};
typedef UCHAR (*PSCSIWMI_QUERY_REGINFO)(PVOID DeviceContext, PSCSIWMI_REQUEST_CONTEXT RequestContext, PWSTR *MofResourceName);
typedef NTSTATUS (*TDI_PNP_POWER_HANDLER)(PUNICODE_STRING DeviceName, PNET_PNP_EVENT PowerEvent, PTDI_PNP_CONTEXT Context1, PTDI_PNP_CONTEXT Context2);
struct _BUS_INTERFACE_SWENUM {INTERFACE Interface;PFNREFERENCEDEVICEOBJECT ReferenceDeviceObject;PFNDEREFERENCEDEVICEOBJECT DereferenceDeviceObject;PFNQUERYREFERENCESTRING QueryReferenceString;};
struct _PROCESSOR_IDLE_STATE {UCHAR StateType;ULONG StateFlags;ULONG HardwareLatency;ULONG Power;ULONG_PTR Context;PPROCESSOR_IDLE_HANDLER Handler;};
typedef NTSTATUS ENTER_STATE_HANDLER(PVOID Context, PENTER_STATE_SYSTEM_HANDLER SystemHandler, PVOID SystemContext, LONG NumberProcessors, LONG *Number);
struct _AVC_PIN_DESCRIPTOR {ULONG PinId;KSPIN_DESCRIPTOR PinDescriptor;PFNAVCINTERSECTHANDLER IntersectHandler;PVOID Context;};
struct _WHEA_XPF_PROCINFO {GUID CheckInfoId;WHEA_XPF_PROCINFO_VALIDBITS ValidBits;union _WHEA_XPF_PROCINFO___951C8B8409E073FB6F291BFA9F780EC0 CheckInfo;ULONGLONG TargetId;ULONGLONG RequesterId;ULONGLONG ResponderId;ULONGLONG InstructionPointer;};
struct _IDE_ACCESS_RANGE {IDE_PHYSICAL_ADDRESS RangeStart;IDE_PHYSICAL_ADDRESS PhysicalRangeStart;ULONG RangeLength;BOOLEAN InMemory;UCHAR Bar;};
struct _KSCLOCK_DISPATCH {PFNKSPINSETTIMER SetTimer;PFNKSPINCANCELTIMER CancelTimer;PFNKSPINCORRELATEDTIME CorrelatedTime;PFNKSPINRESOLUTION Resolution;};
struct _NDK_SRQ_DISPATCH {NDK_FN_CLOSE_OBJECT NdkCloseSrq;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_MODIFY_SRQ NdkModifySrq;NDK_FN_SRQ_RECEIVE NdkSrqReceive;};
typedef NTSTATUS (*POWER_CALLBACK)(PDEVICE_OBJECT DeviceObject, DEVICE_POWER_STATE DeviceState, PBOOLEAN PostWaitWake);
typedef BOOLEAN MINIPORT_ISR(NDIS_HANDLE MiniportInterruptContext, PBOOLEAN QueueDefaultInterruptDpc, PULONG TargetProcessors);
struct _WSK_TDI_MAP {USHORT SocketType;ADDRESS_FAMILY AddressFamily;ULONG Protocol;PCWSTR TdiDeviceName;};
struct RX_LOG {RX_SPIN_LOCK SpinLock;RX_LOGGING_STATE State;PRX_LOG_ENTRY_HEADER CurrentEntry;PRX_LOG_ENTRY_HEADER BaseEntry;PRX_LOG_ENTRY_HEADER EntryLimit;ULONG LogBufferSizeInEntries;ULONG NumberOfEntriesIgnored;ULONG NumberOfLogWriteAttempts;ULONG NumberOfLogWraps;};
union _CLAIM_SECURITY_ATTRIBUTE_V1___250FC43820722680DFCAB37A6DA5659E {PLONG64 pInt64;PULONG64 pUint64;PWSTR *ppString;PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn;PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString;};
struct _FLT_PARAMETERS___28FCA4D722CF4A97784C865BFD6B2B2D {ULONG Length;FILE_INFORMATION_CLASS FileInformationClass;PFILE_OBJECT ParentOfTarget;_FLT_PARAMETERS___28FCA4D722CF4A97784C865BFD6B2B2D___5EC0DA9471CFCB1EC49AD6D2337964D2 __anonymous0;PVOID InfoBuffer;};
struct _NDIS_SHARED_MEMORY_PROVIDER_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_HANDLE ProviderContext;ALLOCATE_SHARED_MEMORY_HANDLER AllocateSharedMemoryHandler;FREE_SHARED_MEMORY_HANDLER FreeSharedMemoryHandler;};
typedef NTSTATUS ( *DXGKDDI_MONITOR_ACQUIREMONITORSOURCEMODESET)(IN_CONST_D3DKMDT_ADAPTER hAdapter, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VideoPresentTargetId, OUT_PD3DKMDT_HMONITORSOURCEMODESET phMonitorSourceModeSet, DEREF_OUT_CONST_PPDXGK_MONITORSOURCEMODESET_INTERFACE ppMonitorSourceModeSetInterface);
typedef NTSTATUS ( *DXGKDDI_MONITOR_GETADDITIONALMONITORMODESET)(IN_CONST_D3DKMDT_ADAPTER hAdapter, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VideoPresentTargetId, OUT_PUINT pNumberModes, DEREF_ECOUNT_PPDXGK_TARGETMODE_DETAIL_TIMING ppAdditionalModesSet);
typedef NTSTATUS ( *DXGKDDI_MONITOR_GETMONITORFREQUENCYRANGESET)(IN_CONST_D3DKMDT_ADAPTER hAdapter, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VideoPresentTargetId, OUT_PD3DKMDT_HMONITORFREQUENCYRANGESET phMonitorFrequencyRangeSet, DEREF_OUT_CONST_PPDXGK_MONITORFREQUENCYRANGESET_INTERFACE ppMonitorFrequencyRangeSetInterface);
typedef NTSTATUS ( *DXGKDDI_VIDPN_ASSIGNMULTISAMPLINGMETHODSET)(IN_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, IN_CONST_SIZE_T NumMethods,  D3DDDI_MULTISAMPLINGMETHOD *pSupportedMethodSet);
typedef NTSTATUS ( *DXGKDDI_MONITOR_GETMONITORDESCRIPTORSET)(IN_CONST_D3DKMDT_ADAPTER hAdapter, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VideoPresentTargetId, OUT_PD3DKMDT_HMONITORDESCRIPTORSET phMonitorDescriptorSet, DEREF_OUT_CONST_PPDXGK_MONITORDESCRIPTORSET_INTERFACE ppMonitorDescriptorSetInterface);
typedef NTSTATUS (*PI8042_KEYBOARD_INITIALIZATION_ROUTINE)(PVOID InitializationContext, PVOID SynchFuncContext, PI8042_SYNCH_READ_PORT ReadPort, PI8042_SYNCH_WRITE_PORT WritePort, PBOOLEAN TurnTranslationOn);
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_ACQUIREPATHINFO)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId, DEREF_OUT_CONST_PPD3DKMDT_VIDPN_PRESENT_PATH ppVidPnPresentPathInfo);
typedef NTSTATUS ( *DXGKDDI_VIDPN_CREATENEWSOURCEMODESET)(IN_CONST_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, OUT_PD3DKMDT_HVIDPNSOURCEMODESET phNewVidPnSourceModeSet, DEREF_OUT_CONST_PPDXGK_VIDPNSOURCEMODESET_INTERFACE ppVidPnSourceModeSetInterface);
typedef NTSTATUS ( *DXGKDDI_VIDPN_CREATENEWTARGETMODESET)(IN_CONST_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId, OUT_PD3DKMDT_HVIDPNTARGETMODESET phNewVidPnTargetModeSet, DEREF_OUT_CONST_PPDXGK_VIDPNTARGETMODESET_INTERFACE ppVidPnTargetModeSetInterace);
typedef NTSTATUS ( *DXGKDDI_VIDPN_ACQUIRESOURCEMODESET)(IN_CONST_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, OUT_PD3DKMDT_HVIDPNSOURCEMODESET phVidPnSourceModeSet, DEREF_OUT_CONST_PPDXGK_VIDPNSOURCEMODESET_INTERFACE ppVidPnSourceModeSetInterface);
typedef NTSTATUS ( *DXGKDDI_VIDPN_ACQUIRETARGETMODESET)(IN_CONST_D3DKMDT_HVIDPN hVidPn, IN_CONST_D3DDDI_VIDEO_PRESENT_TARGET_ID VidPnTargetId, OUT_PD3DKMDT_HVIDPNTARGETMODESET phVidPnTargetModeSet, DEREF_OUT_CONST_PPDXGK_VIDPNTARGETMODESET_INTERFACE ppVidPnTargetModeSetInterface);
struct _TIMER_SET_COALESCABLE_TIMER_INFO {LARGE_INTEGER DueTime;PTIMER_APC_ROUTINE TimerApcRoutine;PVOID TimerContext;struct _COUNTED_REASON_CONTEXT *WakeContext;ULONG Period;ULONG TolerableDelay;PBOOLEAN PreviousState;};
typedef GETSGSTATUS (*PStorPortBuildScatterGatherList)(PVOID HwDeviceExtension, PVOID Mdl, PVOID CurrentVa, ULONG Length, PPOST_SCATTER_GATHER_EXECUTE ExecutionRoutine, PVOID Context, BOOLEAN WriteToDevice, PVOID ScatterGatherBuffer, ULONG ScatterGatherBufferLength);
struct _CLFS_MGMT_CLIENT_REGISTRATION {ULONG Version;PCLFS_CLIENT_ADVANCE_TAIL_CALLBACK AdvanceTailCallback;PVOID AdvanceTailCallbackData;PCLFS_CLIENT_LFF_HANDLER_COMPLETE_CALLBACK LogGrowthCompleteCallback;PVOID LogGrowthCompleteCallbackData;PCLFS_CLIENT_LOG_UNPINNED_CALLBACK LogUnpinnedCallback;PVOID LogUnpinnedCallbackData;};
struct _NPI_PROVIDER_CHARACTERISTICS {USHORT Version;USHORT Length;PNPI_PROVIDER_ATTACH_CLIENT_FN ProviderAttachClient;PNPI_PROVIDER_DETACH_CLIENT_FN ProviderDetachClient;PNPI_PROVIDER_CLEANUP_BINDING_CONTEXT_FN ProviderCleanupBindingContext;NPI_REGISTRATION_INSTANCE ProviderRegistrationInstance;};
struct _PCW_REGISTRATION_INFORMATION {ULONG Version;PCUNICODE_STRING Name;ULONG CounterCount;PPCW_COUNTER_DESCRIPTOR Counters;PPCW_CALLBACK Callback;PVOID CallbackContext;};
struct _WSK_PROVIDER_LISTEN_DISPATCH {_WSK_PROVIDER_BASIC_DISPATCH __anonymous0;PFN_WSK_BIND WskBind;PFN_WSK_ACCEPT WskAccept;PFN_WSK_INSPECT_COMPLETE WskInspectComplete;PFN_WSK_GET_LOCAL_ADDRESS WskGetLocalAddress;};
struct _RXCE_ADDRESS_EVENT_HANDLER_ {PRXCE_IND_ENDPOINT_ERROR RxCeErrorEventHandler;PRXCE_IND_RECEIVE_DATAGRAM RxCeReceiveDatagramEventHandler;PRXCE_IND_DATA_READY RxCeDataReadyEventHandler;PRXCE_IND_SEND_POSSIBLE RxCeSendPossibleEventHandler;PRXCE_IND_SEND_COMPLETE RxCeSendCompleteEventHandler;};
typedef ULONG (*PCAM_PROCESS_PACKET_ROUTINE)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PVOID CurrentFrameContext, PUSBD_ISO_PACKET_DESCRIPTOR SyncPacket, PVOID SyncBuffer, PUSBD_ISO_PACKET_DESCRIPTOR DataPacket, PVOID DataBuffer, PBOOLEAN FrameComplete, PBOOLEAN NextFrameIsStill);
struct _NPI_CLIENT_CHARACTERISTICS {USHORT Version;USHORT Length;PNPI_CLIENT_ATTACH_PROVIDER_FN ClientAttachProvider;PNPI_CLIENT_DETACH_PROVIDER_FN ClientDetachProvider;PNPI_CLIENT_CLEANUP_BINDING_CONTEXT_FN ClientCleanupBindingContext;NPI_REGISTRATION_INSTANCE ClientRegistrationInstance;};
struct _SDBUS_INTERFACE_PARAMETERS {USHORT Size;USHORT SdioFlags;PDEVICE_OBJECT TargetObject;BOOLEAN DeviceGeneratesInterrupts;BOOLEAN CallbackAtDpcLevel;PSDBUS_CALLBACK_ROUTINE CallbackRoutine;PVOID CallbackRoutineContext;};
typedef BOOLEAN MINIPORT_MESSAGE_INTERRUPT(NDIS_HANDLE MiniportInterruptContext, ULONG MessageId, PBOOLEAN QueueDefaultInterruptDpc, PULONG TargetProcessors);
struct _MF_ENUMERATION_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PMF_ENUMERATE_CHILD EnumerateChild;};
typedef NTSTATUS DXGKDDI_SET_POWER_STATE(IN_CONST_PVOID MiniportDeviceContext, IN_ULONG DeviceUid, IN_DEVICE_POWER_STATE DevicePowerState, IN_POWER_ACTION ActionType);
typedef ULONG VIRTUAL_HW_FIND_ADAPTER(PVOID DeviceExtension, PVOID HwContext, PVOID BusInformation, PVOID LowerDevice, PCHAR ArgumentString, PPORT_CONFIGURATION_INFORMATION ConfigInfo, PBOOLEAN Again);
struct _DOT11_EXTAP_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG uScanSSIDListSize;ULONG uDesiredSSIDListSize;ULONG uPrivacyExemptionListSize;ULONG uAssociationTableSize;ULONG uDefaultKeyTableSize;ULONG uWEPKeyValueMaxLength;BOOLEAN bStrictlyOrderedServiceClassImplemented;ULONG uNumSupportedCountryOrRegionStrings;PDOT11_COUNTRY_OR_REGION_STRING pSupportedCountryOrRegionStrings;ULONG uInfraNumSupportedUcastAlgoPairs;PDOT11_AUTH_CIPHER_PAIR pInfraSupportedUcastAlgoPairs;ULONG uInfraNumSupportedMcastAlgoPairs;PDOT11_AUTH_CIPHER_PAIR pInfraSupportedMcastAlgoPairs;};
struct _DXGK_MONITOR_INTERFACE {DXGK_MONITOR_INTERFACE_VERSION Version;DXGKDDI_MONITOR_ACQUIREMONITORSOURCEMODESET pfnAcquireMonitorSourceModeSet;DXGKDDI_MONITOR_RELEASEMONITORSOURCEMODESET pfnReleaseMonitorSourceModeSet;DXGKDDI_MONITOR_GETMONITORFREQUENCYRANGESET pfnGetMonitorFrequencyRangeSet;DXGKDDI_MONITOR_GETMONITORDESCRIPTORSET pfnGetMonitorDescriptorSet;};
struct _PNP_LOCATION_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PGET_LOCATION_STRING GetLocationString;};
struct _STOR_LOG_EVENT_DETAILS {ULONG InterfaceRevision;ULONG Size;ULONG Flags;STOR_EVENT_ASSOCIATION_ENUM EventAssociation;ULONG PathId;ULONG TargetId;ULONG LunId;BOOLEAN StorportSpecificErrorCode;ULONG ErrorCode;ULONG UniqueId;ULONG DumpDataSize;PVOID DumpData;ULONG StringCount;PWSTR *StringList;};
typedef VP_STATUS (*PVIDEO_HW_FIND_ADAPTER)(PVOID HwDeviceExtension, PVOID HwContext, PWSTR ArgumentString, PVIDEO_PORT_CONFIG_INFO ConfigInfo, PUCHAR Again);
struct _NDK_LISTENER_DISPATCH {NDK_FN_CLOSE_OBJECT NdkCloseListener;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_LISTEN NdkListen;NDK_FN_GET_LISTENER_LOCAL_ADDRESS NdkGetLocalAddress;NDK_FN_CONTROL_CONNECT_EVENTS NdkControlConnectEvents;};
typedef NTSTATUS DXGKDDI_START_DEVICE(IN_CONST_PVOID MiniportDeviceContext, IN_PDXGK_START_INFO DxgkStartInfo, IN_PDXGKRNL_INTERFACE DxgkInterface, OUT_PULONG NumberOfVideoPresentSources, OUT_PULONG NumberOfChildren);
struct HBA_FCPBindingEntry2 {HBA_BIND_TYPE type;HBA_SCSIID ScsiId;HBA_FCPID FcpId;HBA_LUID LUID;HBA_STATUS Status;};
union _IMAGE_AUX_SYMBOL_EX {struct _IMAGE_AUX_SYMBOL_EX___F2683A71694251BD29D36860D2E756FD Sym;struct _IMAGE_AUX_SYMBOL_EX___E4EB5173E13E498BE72EBAB3BCAF7D9F File;struct _IMAGE_AUX_SYMBOL_EX___0B38B08C56F10253A28FEC508E6080A1 Section;_IMAGE_AUX_SYMBOL_EX___AF9309B91FE05EB19F86BDA86FAB5DEE __anonymous0;struct _IMAGE_AUX_SYMBOL_EX___7DE2BBBE69FE3B9D9F705B9F266ED457 CRC;};
struct _NDIS_MINIPORT_TIMER {KTIMER Timer;KDPC Dpc;PNDIS_TIMER_FUNCTION MiniportTimerFunction;PVOID MiniportTimerContext;PNDIS_MINIPORT_BLOCK Miniport;struct _NDIS_MINIPORT_TIMER *NextTimer;};
typedef ULONG (*DSM_INTERPRET_ERROR)(PVOID DsmContext, PVOID DsmId, PSCSI_REQUEST_BLOCK Srb, PNTSTATUS Status, PBOOLEAN Retry);
typedef BOOLEAN (*PRX_LOCK_ENUMERATOR)(PMRX_SRV_OPEN SrvOpen, PVOID *ContinuationHandle, PLARGE_INTEGER FileOffset, PLARGE_INTEGER LockRange, PBOOLEAN IsLockExclusive);
struct _WAIT_CONTEXT_BLOCK {_WAIT_CONTEXT_BLOCK___4501E438057B524022C881311375F7D8 __anonymous0;PDRIVER_CONTROL DeviceRoutine;PVOID DeviceContext;ULONG NumberOfMapRegisters;PVOID DeviceObject;PVOID CurrentIrp;PKDPC BufferChainingDpc;};
typedef NTSTATUS PCI_MSIX_GET_ENTRY(PVOID Context, ULONG TableEntry, PULONG MessageNumber, PBOOLEAN Masked);
struct SMHBA_BindingEntry {SMHBA_BIND_TYPE type;SMHBA_SCSIID ScsiId;SMHBA_PORTLUN PortLun;SMHBA_LUID LUID;HBA_STATUS Status;};
struct _DUMP_POINTERS_EX {DUMP_POINTERS_VERSION Header;PVOID DumpData;PVOID CommonBufferVa;ULONG CommonBufferSize;BOOLEAN AllocateCommonBuffers;PVOID DeviceObject;PVOID DriverList;ULONG dwPortFlags;ULONG MaxDeviceDumpSectionSize;ULONG MaxDeviceDumpLevel;ULONG MaxTransferSize;PVOID AdapterObject;PVOID MappedRegisterBase;PBOOLEAN DeviceReady;};
struct _SE_ACCESS_REPLY {ULONG Size;ULONG ResultListCount;PACCESS_MASK GrantedAccess;PNTSTATUS AccessStatus;PACCESS_REASONS AccessReason;PPRIVILEGE_SET *Privileges;};
typedef ULONG HW_FIND_ADAPTER(PVOID DeviceExtension, PVOID HwContext, PVOID BusInformation, PCHAR ArgumentString, PPORT_CONFIGURATION_INFORMATION ConfigInfo, PBOOLEAN Reserved3);
struct _MCA_EXCEPTION {ULONG VersionNumber;MCA_EXCEPTION_TYPE ExceptionType;LARGE_INTEGER TimeStamp;ULONG ProcessorNumber;ULONG Reserved1;union _MCA_EXCEPTION___778E3D9E82734009103A1940AB270D68 u;ULONG ExtCnt;ULONG Reserved3;ULONGLONG ExtReg[24];};
struct _KDPC {UCHAR Type;UCHAR Importance;USHORT Number;LIST_ENTRY DpcListEntry;PKDEFERRED_ROUTINE DeferredRoutine;PVOID DeferredContext;PVOID SystemArgument1;PVOID SystemArgument2;PVOID DpcData;};
struct _USBC_DEVICE_CONFIGURATION_INTERFACE_V1 {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;USBC_START_DEVICE_CALLBACK StartDeviceCallback;USBC_PDO_ENABLE_CALLBACK PdoEnableCallback;PVOID Reserved[7];};
struct _PCI_EXPRESS_LINK_QUIESCENT_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PPCI_EXPRESS_ENTER_LINK_QUIESCENT_MODE PciExpressEnterLinkQuiescentMode;PPCI_EXPRESS_EXIT_LINK_QUIESCENT_MODE PciExpressExitLinkQuiescentMode;};
struct _RXCE_CONNECTION_COMPLETION_CONTEXT_ {NTSTATUS Status;ULONG AddressIndex;PRXCE_CONNECTION pConnection;PRXCE_VC pVc;RX_WORK_QUEUE_ITEM WorkQueueItem;PRXCE_CONNECTION_INFORMATION pConnectionInformation;};
struct _AGP_TARGET_BUS_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PGET_SET_DEVICE_DATA SetBusData;PGET_SET_DEVICE_DATA GetBusData;UCHAR CapabilityID;};
struct _0D819AFF13E0F3A45F15772F26E3677A {PFILE_OBJECT UnderlyingFileObject;PDEVICE_OBJECT UnderlyingDeviceObject;ULONG LockKey;PFAST_IO_READ FastIoRead;PFAST_IO_WRITE FastIoWrite;PMRX_SHADOW_CALLDOWN DispatchRoutine;};
struct _33D5B48BFB25F68EBEA0D059F2171BBA {ULONG PropertyId;_33D5B48BFB25F68EBEA0D059F2171BBA___58FB3E9EF9061AAB6CC24D01751A314D __anonymous0;ULONG MinProperty;ULONG MinData;_33D5B48BFB25F68EBEA0D059F2171BBA___32A657B5357991FC951178A7ED233F2B __anonymous1; KSPROPERTY_VALUES *Values;ULONG RelationsCount; KSPROPERTY *Relations;PFNKSHANDLER SupportHandler;ULONG SerializedSize;};
struct _4B3A6E5AEDB605283F91028F6AB24B20 {ULONG Reserved;NLB_HOOK_API_VERSION Version;NLBSendFilterHook SendHook;NLBQueryFilterHook QueryHook;NLBReceiveFilterHook ReceiveHook;NLBClearClientStickinessFilterHook ClearClientStickinessHook;};
struct _KBUGCHECK_REASON_CALLBACK_RECORD {LIST_ENTRY Entry;PKBUGCHECK_REASON_CALLBACK_ROUTINE CallbackRoutine;PUCHAR Component;ULONG_PTR Checksum;KBUGCHECK_CALLBACK_REASON Reason;UCHAR State;};
struct _NDIS_PROTOCOL_CO_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;ULONG Flags;CO_STATUS_HANDLER_EX CoStatusHandlerEx;CO_AF_REGISTER_NOTIFY_HANDLER CoAfRegisterNotifyHandler;CO_RECEIVE_NET_BUFFER_LISTS_HANDLER CoReceiveNetBufferListsHandler;CO_SEND_NET_BUFFER_LISTS_COMPLETE_HANDLER CoSendNetBufferListsCompleteHandler;};
typedef ULONG (*PCAM_PROCESS_PACKET_ROUTINE_EX)(PDEVICE_OBJECT BusDeviceObject, PVOID DeviceContext, PVOID CurrentFrameContext, PUSBD_ISO_PACKET_DESCRIPTOR SyncPacket, PVOID SyncBuffer, PUSBD_ISO_PACKET_DESCRIPTOR DataPacket, PVOID DataBuffer, PBOOLEAN FrameComplete, PULONG PacketFlag, PULONG ValidDataOffset);
struct _PCMCIA_BUS_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PPCMCIA_READ_CONFIG ReadConfig;PPCMCIA_WRITE_CONFIG WriteConfig;};
struct _PCI_DEVICE_PRESENT_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PPCI_IS_DEVICE_PRESENT IsDevicePresent;PPCI_IS_DEVICE_PRESENT_EX IsDevicePresentEx;};
typedef NTSTATUS ( *DXGKCB_SYNCHRONIZE_EXECUTION)(HANDLE DeviceHandle, PKSYNCHRONIZE_ROUTINE SynchronizeRoutine, PVOID Context, ULONG MessageNumber, PBOOLEAN ReturnValue);
typedef NTSTATUS (*PALLOCATE_ADAPTER_CHANNEL_EX)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PVOID DmaTransferContext, ULONG NumberOfMapRegisters, ULONG Flags, PDRIVER_CONTROL ExecutionRoutine, PVOID ExecutionContext, PVOID *MapRegisterBase);
struct _CLS_CONTAINER_INFORMATION {ULONG FileAttributes;ULONGLONG CreationTime;ULONGLONG LastAccessTime;ULONGLONG LastWriteTime;LONGLONG ContainerSize;ULONG FileNameActualLength;ULONG FileNameLength;WCHAR FileName[256];CLFS_CONTAINER_STATE State;CLFS_CONTAINER_ID PhysicalContainerId;CLFS_CONTAINER_ID LogicalContainerId;};
struct _GP_LOG_GENERAL_STATISTICS {struct _GP_LOG_GENERAL_STATISTICS___B9451235FC33A6343B7364266B17A909 Header;struct _GP_LOG_GENERAL_STATISTICS___F7D30742C50C0EA5208BC15FB67D657A LifeTimePoweronResets;struct _GP_LOG_GENERAL_STATISTICS___AC9A22C2F9C10B348A85CE2CC0A55F94 PoweronHours;struct _GP_LOG_GENERAL_STATISTICS___8FC98EEE0DC2E70BC55E2F60E42B37BA LogicalSectorsWritten;struct _GP_LOG_GENERAL_STATISTICS___8FC98EEE0DC2E70BC55E2F60E42B37BA WriteCommandCount;struct _GP_LOG_GENERAL_STATISTICS___8FC98EEE0DC2E70BC55E2F60E42B37BA LogicalSectorsRead;struct _GP_LOG_GENERAL_STATISTICS___8FC98EEE0DC2E70BC55E2F60E42B37BA ReadCommandCount;struct _GP_LOG_GENERAL_STATISTICS___1350F65D8D90970E4E3E116C40691EBE DateAndTime;UCHAR Reserved[448];};
typedef NTSTATUS  API_SET_LOOKUP_HELPER_RTN(PCAPI_SET_NAMESPACE_ARRAY Schema, PCSTR FileName, PCSTR ParentName, PBOOLEAN Resolved, PSTR ResolvedName, ULONG Length);
typedef NTSTATUS DXGKDDI_NOTIFY_ACPI_EVENT(IN_CONST_PVOID MiniportDeviceContext, IN_DXGK_EVENT_TYPE EventType, IN_ULONG Event, IN_PVOID Argument, OUT_PULONG AcpiFlags);
typedef NTSTATUS (*PALLOCATE_ADAPTER_CHANNEL)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, ULONG NumberOfMapRegisters, PDRIVER_CONTROL ExecutionRoutine, PVOID Context);
struct DOT11_EXTSTA_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG uScanSSIDListSize;ULONG uDesiredBSSIDListSize;ULONG uDesiredSSIDListSize;ULONG uExcludedMacAddressListSize;ULONG uPrivacyExemptionListSize;ULONG uKeyMappingTableSize;ULONG uDefaultKeyTableSize;ULONG uWEPKeyValueMaxLength;ULONG uPMKIDCacheSize;ULONG uMaxNumPerSTADefaultKeyTables;BOOLEAN bStrictlyOrderedServiceClassImplemented;UCHAR ucSupportedQoSProtocolFlags;BOOLEAN bSafeModeImplemented;ULONG uNumSupportedCountryOrRegionStrings;PDOT11_COUNTRY_OR_REGION_STRING pSupportedCountryOrRegionStrings;ULONG uInfraNumSupportedUcastAlgoPairs;PDOT11_AUTH_CIPHER_PAIR pInfraSupportedUcastAlgoPairs;ULONG uInfraNumSupportedMcastAlgoPairs;PDOT11_AUTH_CIPHER_PAIR pInfraSupportedMcastAlgoPairs;ULONG uAdhocNumSupportedUcastAlgoPairs;PDOT11_AUTH_CIPHER_PAIR pAdhocSupportedUcastAlgoPairs;ULONG uAdhocNumSupportedMcastAlgoPairs;PDOT11_AUTH_CIPHER_PAIR pAdhocSupportedMcastAlgoPairs;BOOLEAN bAutoPowerSaveMode;ULONG uMaxNetworkOffloadListSize;BOOLEAN bMFPCapable;ULONG uInfraNumSupportedMcastMgmtAlgoPairs;PDOT11_AUTH_CIPHER_PAIR pInfraSupportedMcastMgmtAlgoPairs;};
typedef NTSTATUS ACPI_OP_REGION_HANDLER(ULONG AccessType, PVOID OperationRegionObject, ULONG Address, ULONG Size, PULONG Data, ULONG_PTR Context, PACPI_OP_REGION_CALLBACK CompletionHandler, PVOID CompletionContext);
typedef ULONG (*DSM_INTERPRET_ERROR_EX)(PVOID DsmContext, PVOID DsmId, PSCSI_REQUEST_BLOCK Srb, PNTSTATUS Status, PBOOLEAN Retry, PLONG RetryInterval, ...);
struct _DOT11_WFD_ATTRIBUTES {NDIS_OBJECT_HEADER Header;ULONG uNumConcurrentGORole;ULONG uNumConcurrentClientRole;ULONG WPSVersionsSupported;BOOLEAN bServiceDiscoverySupported;BOOLEAN bClientDiscoverabilitySupported;BOOLEAN bInfrastructureManagementSupported;ULONG uMaxSecondaryDeviceTypeListSize;DOT11_MAC_ADDRESS DeviceAddress;ULONG uInterfaceAddressListCount;PDOT11_MAC_ADDRESS pInterfaceAddressList;ULONG uNumSupportedCountryOrRegionStrings;PDOT11_COUNTRY_OR_REGION_STRING pSupportedCountryOrRegionStrings;ULONG uDiscoveryFilterListSize;ULONG uGORoleClientTableSize;};
struct _TRANSLATOR_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PTRANSLATE_RESOURCE_HANDLER TranslateResources;PTRANSLATE_RESOURCE_REQUIREMENTS_HANDLER TranslateResourceRequirements;};
struct _KSPIN_DESCRIPTOR_EX { KSPIN_DISPATCH *Dispatch; KSAUTOMATION_TABLE *AutomationTable;KSPIN_DESCRIPTOR PinDescriptor;ULONG Flags;ULONG InstancesPossible;ULONG InstancesNecessary; KSALLOCATOR_FRAMING_EX *AllocatorFraming;PFNKSINTERSECTHANDLEREX IntersectHandler;};
struct _RXCE_CONNECTION_ {struct {union {_RXCE_SIGNATURE_ __anonymous0;ULONG Signature;};};PRXCE_ADDRESS pAddress;ULONG VirtualCircuitCount;PVOID pContext;PRXCE_CONNECTION_EVENT_HANDLER pHandler;PRXCE_CONNECTION_INFORMATION pConnectionInformation;};
struct _IDE_REGISTERS_1 {PUCHAR RegistersBaseAddress;PUSHORT Data;_IDE_REGISTERS_1___66A4CEBCA41C7F2F44834B6315F8F025 __anonymous0;_IDE_REGISTERS_1___20B55380DF4C8B3DCEB19895FEFF6C05 __anonymous1;PUCHAR BlockNumber;_IDE_REGISTERS_1___5BE01C1C87DC18EA931D2A1A4B00E24D __anonymous2;_IDE_REGISTERS_1___E03BE7A8061D78A453A4655D3BC8D71A __anonymous3;PUCHAR DriveSelect;PUCHAR Command;};
struct _NET_BUFFER {_NET_BUFFER_HEADER __anonymous0;USHORT ChecksumBias;USHORT Reserved;NDIS_HANDLE NdisPoolHandle;PVOID NdisReserved[2];PVOID ProtocolReserved[6];PVOID MiniportReserved[4];NDIS_PHYSICAL_ADDRESS DataPhysicalAddress;_NET_BUFFER___05113C3D100EAEBCDF9954E02D617F8E __anonymous2;};
struct _IO_CONNECT_INTERRUPT_LINE_BASED_PARAMETERS {PDEVICE_OBJECT PhysicalDeviceObject;PKINTERRUPT *InterruptObject;PKSERVICE_ROUTINE ServiceRoutine;PVOID ServiceContext;PKSPIN_LOCK SpinLock;KIRQL SynchronizeIrql;BOOLEAN FloatingSave;};
struct _DXGK_MONITORSOURCEMODESET_INTERFACE {DXGKDDI_MONITORSOURCEMODESET_GETNUMMODES pfnGetNumModes;DXGKDDI_MONITORSOURCEMODESET_ACQUIREPREFERREDMODEINFO pfnAcquirePreferredModeInfo;DXGKDDI_MONITORSOURCEMODESET_ACQUIREFIRSTMODEINFO pfnAcquireFirstModeInfo;DXGKDDI_MONITORSOURCEMODESET_ACQUIRENEXTMODEINFO pfnAcquireNextModeInfo;DXGKDDI_MONITORSOURCEMODESET_CREATENEWMODEINFO pfnCreateNewModeInfo;DXGKDDI_MONITORSOURCEMODESET_ADDMODE pfnAddMode;DXGKDDI_MONITORSOURCEMODESET_RELEASEMODEINFO pfnReleaseModeInfo;};
struct _NDIS_FILTER_PARTIAL_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;ULONG Flags;FILTER_SEND_NET_BUFFER_LISTS_HANDLER SendNetBufferListsHandler;FILTER_SEND_NET_BUFFER_LISTS_COMPLETE_HANDLER SendNetBufferListsCompleteHandler;FILTER_CANCEL_SEND_HANDLER CancelSendNetBufferListsHandler;FILTER_RECEIVE_NET_BUFFER_LISTS_HANDLER ReceiveNetBufferListsHandler;FILTER_RETURN_NET_BUFFER_LISTS_HANDLER ReturnNetBufferListsHandler;};
struct _WSK_PROVIDER_DATAGRAM_DISPATCH {_WSK_PROVIDER_BASIC_DISPATCH __anonymous0;PFN_WSK_BIND WskBind;PFN_WSK_SEND_TO WskSendTo;PFN_WSK_RECEIVE_FROM WskReceiveFrom;PFN_WSK_RELEASE_DATAGRAM_INDICATION_LIST WskRelease;PFN_WSK_GET_LOCAL_ADDRESS WskGetLocalAddress;PFN_WSK_SEND_MESSAGES WskSendMessages;};
struct _FILTER_INITIALIZATION_DATA {ULONG MajorVersion;ULONG MinorVersion;PDUMP_START DumpStart;PDUMP_WRITE DumpWrite;PDUMP_FINISH DumpFinish;PDUMP_UNLOAD DumpUnload;PVOID DumpData;ULONG MaxPagesPerWrite;ULONG Flags;PDUMP_READ DumpRead;};
struct _DXGK_MONITOR_INTERFACE_V2 {DXGK_MONITOR_INTERFACE_VERSION Version;DXGKDDI_MONITOR_ACQUIREMONITORSOURCEMODESET pfnAcquireMonitorSourceModeSet;DXGKDDI_MONITOR_RELEASEMONITORSOURCEMODESET pfnReleaseMonitorSourceModeSet;DXGKDDI_MONITOR_GETMONITORFREQUENCYRANGESET pfnGetMonitorFrequencyRangeSet;DXGKDDI_MONITOR_GETMONITORDESCRIPTORSET pfnGetMonitorDescriptorSet;DXGKDDI_MONITOR_GETADDITIONALMONITORMODESET pfnGetAdditionalMonitorModeSet;DXGKDDI_MONITOR_RELEASEADDITIONALMONITORMODESET pfnReleaseAdditionalMonitorModeSet;};
struct _KBUGCHECK_CALLBACK_RECORD {LIST_ENTRY Entry;PKBUGCHECK_CALLBACK_ROUTINE CallbackRoutine;PVOID Buffer;ULONG Length;PUCHAR Component;ULONG_PTR Checksum;UCHAR State;};
struct _PCMCIA_INTERFACE_STANDARD {USHORT Size;USHORT Version;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PVOID Context;PPCMCIA_MODIFY_MEMORY_WINDOW ModifyMemoryWindow;PPCMCIA_SET_VPP SetVpp;PPCMCIA_IS_WRITE_PROTECTED IsWriteProtected;};
struct _IPSEC_OFFLOAD_V2_ADD_SA {NDIS_OBJECT_HEADER Header;PIPSEC_OFFLOAD_V2_ADD_SA Next;ULONG NumExtHdrs;ULONG Flags;_IPSEC_OFFLOAD_V2_ADD_SA___B57E788F88841657717E9618A2D812A5 __anonymous0;NDIS_HANDLE OffloadHandle;ULONG UdpEspEncapsulation;IPSEC_OFFLOAD_V2_SECURITY_ASSOCIATION SecAssoc[2];ULONG KeyLength;UCHAR KeyData[1];};
struct _VPCI_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PVPCI_WRITE_BLOCK WriteVfConfigBlock;PVPCI_READ_BLOCK ReadVfConfigBlock;UINT32 SerialNumber;};
typedef NTSTATUS ( *PFLT_GENERATE_FILE_NAME)(PFLT_INSTANCE Instance, PFILE_OBJECT FileObject, PFLT_CALLBACK_DATA CallbackData, FLT_FILE_NAME_OPTIONS NameOptions, PBOOLEAN CacheFileNameInformation, PFLT_NAME_CONTROL FileName);
struct _BUS_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PTRANSLATE_BUS_ADDRESS TranslateBusAddress;PGET_DMA_ADAPTER GetDmaAdapter;PGET_SET_DEVICE_DATA SetBusData;PGET_SET_DEVICE_DATA GetBusData;};
struct _WSK_PROVIDER_DISPATCH {USHORT Version;USHORT Reserved;PFN_WSK_SOCKET WskSocket;PFN_WSK_SOCKET_CONNECT WskSocketConnect;PFN_WSK_CONTROL_CLIENT WskControlClient;PFN_WSK_GET_ADDRESS_INFO WskGetAddressInfo;PFN_WSK_FREE_ADDRESS_INFO WskFreeAddressInfo;PFN_WSK_GET_NAME_INFO WskGetNameInfo;};
typedef NTSTATUS (*NDK_FN_FAST_REGISTER)(NDK_QP *pNdkQp, PVOID RequestContext, NDK_MR *pMr, ULONG AdapterPageCount,  NDK_LOGICAL_ADDRESS *AdapterPageArray, ULONG FBO, SIZE_T Length, PVOID BaseVirtualAddress, ULONG Flags);
struct _DSM_WMILIB_CONTEXT {ULONG GuidCount;PWMIGUIDREGINFO GuidList;UNICODE_STRING RegistryPath;UNICODE_STRING MofResourceName;_DSM_WMILIB_CONTEXT___F28A93AD97002CA7E7D2FE1135B08147 __anonymous0;_DSM_WMILIB_CONTEXT___EA4A8BBD62C3B7ACB1B0449CF31EABE3 __anonymous1;_DSM_WMILIB_CONTEXT___7BAC0EB42F04039DCC0E6CEEB0AA7162 __anonymous2;_DSM_WMILIB_CONTEXT___9AA77EDF1265EA30C6E769CD24F15228 __anonymous3;};
struct HBA_PortAttributes {HBA_WWN NodeWWN;HBA_WWN PortWWN;HBA_UINT32 PortFcId;HBA_PORTTYPE PortType;HBA_PORTSTATE PortState;HBA_COS PortSupportedClassofService;HBA_FC4TYPES PortSupportedFc4Types;HBA_FC4TYPES PortActiveFc4Types;char PortSymbolicName[256];char OSDeviceName[256];HBA_PORTSPEED PortSupportedSpeed;HBA_PORTSPEED PortSpeed;HBA_UINT32 PortMaxFrameSize;HBA_WWN FabricName;HBA_UINT32 NumberofDiscoveredPorts;};
struct _RTL_AVL_TABLE {RTL_BALANCED_LINKS BalancedRoot;PVOID OrderedPointer;ULONG WhichOrderedElement;ULONG NumberGenericTableElements;ULONG DepthOfTree;PRTL_BALANCED_LINKS RestartKey;ULONG DeleteCount;PRTL_AVL_COMPARE_ROUTINE CompareRoutine;PRTL_AVL_ALLOCATE_ROUTINE AllocateRoutine;PRTL_AVL_FREE_ROUTINE FreeRoutine;PVOID TableContext;};
struct _KPCR {_KPCR___ECC1A0E65F841FBB98040378B25C100B __anonymous0;struct _KPCR *SelfPcr;struct _KPRCB *Prcb;KIRQL Irql;ULONG IRR;ULONG IrrActive;ULONG IDR;PVOID KdVersionBlock;struct _KIDTENTRY *IDT;struct _KGDTENTRY *GDT;struct _KTSS *TSS;USHORT MajorVersion;USHORT MinorVersion;KAFFINITY SetMember;ULONG StallScaleFactor;UCHAR SpareUnused;UCHAR Number;UCHAR Spare0;UCHAR SecondLevelCacheAssociativity;ULONG VdmAlert;ULONG KernelReserved[14];ULONG SecondLevelCacheSize;ULONG HalReserved[16];};
union _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2 {struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___ECB8C2C044A0E440702FC598AC25079A DmaCompleted;struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___2B5A11F81960A3C58CB02D6DFB7B4957 DmaPreempted;struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___400A9E4FD04D5F129B6A6DD288D7BEF4 DmaFaulted;struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___54911E495599BDFB05E828710D67429F CrtcVsync;struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___84F77B99EDFEAF462CCE796A4BAA8009 DisplayOnlyVsync;struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___D5430022CEFEEB8C97042C1E85AA2BC0 CrtcVsyncWithMultiPlaneOverlay;DXGKARGCB_PRESENT_DISPLAYONLY_PROGRESS DisplayOnlyPresentProgress;struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2___019FC1BD90023EA502588D9EDB27A093 Reserved;};
struct _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS {PDEVICE_OBJECT PhysicalDeviceObject;union _IO_CONNECT_INTERRUPT_MESSAGE_BASED_PARAMETERS___9D9C737CB8CAAA408C0677004DFD02D8 ConnectionContext;PKMESSAGE_SERVICE_ROUTINE MessageServiceRoutine;PVOID ServiceContext;PKSPIN_LOCK SpinLock;KIRQL SynchronizeIrql;BOOLEAN FloatingSave;PKSERVICE_ROUTINE FallBackServiceRoutine;};
struct _NDIS_SCATTER_GATHER_LIST_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_SHARED_MEMORY_USAGE SharedMemoryUsage;PMDL Mdl;PVOID CurrentVa;ULONG Length;NDIS_PROCESS_SG_LIST_HANDLER ProcessSGListHandler;PVOID Context;PSCATTER_GATHER_LIST ScatterGatherListBuffer;ULONG ScatterGatherListBufferSize;ULONG ScatterGatherListBufferSizeNeeded;};
struct _DXGK_VIDPNSOURCEMODESET_INTERFACE {DXGKDDI_VIDPNSOURCEMODESET_GETNUMMODES pfnGetNumModes;DXGKDDI_VIDPNSOURCEMODESET_ACQUIREFIRSTMODEINFO pfnAcquireFirstModeInfo;DXGKDDI_VIDPNSOURCEMODESET_ACQUIRENEXTMODEINFO pfnAcquireNextModeInfo;DXGKDDI_VIDPNSOURCEMODESET_ACQUIREPINNEDMODEINFO pfnAcquirePinnedModeInfo;DXGKDDI_VIDPNSOURCEMODESET_RELEASEMODEINFO pfnReleaseModeInfo;DXGKDDI_VIDPNSOURCEMODESET_CREATENEWMODEINFO pfnCreateNewModeInfo;DXGKDDI_VIDPNSOURCEMODESET_ADDMODE pfnAddMode;DXGKDDI_VIDPNSOURCEMODESET_PINMODE pfnPinMode;};
struct _DXGK_VIDPNTARGETMODESET_INTERFACE {DXGKDDI_VIDPNTARGETMODESET_GETNUMMODES pfnGetNumModes;DXGKDDI_VIDPNTARGETMODESET_ACQUIREFIRSTMODEINFO pfnAcquireFirstModeInfo;DXGKDDI_VIDPNTARGETMODESET_ACQUIRENEXTMODEINFO pfnAcquireNextModeInfo;DXGKDDI_VIDPNTARGETMODESET_ACQUIREPINNEDMODEINFO pfnAcquirePinnedModeInfo;DXGKDDI_VIDPNTARGETMODESET_RELEASEMODEINFO pfnReleaseModeInfo;DXGKDDI_VIDPNTARGETMODESET_CREATENEWMODEINFO pfnCreateNewModeInfo;DXGKDDI_VIDPNTARGETMODESET_ADDMODE pfnAddMode;DXGKDDI_VIDPNTARGETMODESET_PINMODE pfnPinMode;};
struct _NDIS_WMI_RECEIVE_QUEUE_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_TYPE QueueType;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_RECEIVE_QUEUE_GROUP_ID QueueGroupId;NDIS_WMI_GROUP_AFFINITY ProcessorAffinity;ULONG NumSuggestedReceiveBuffers;ULONG MSIXTableEntry;ULONG LookaheadSize;NDIS_VM_NAME VmName;NDIS_QUEUE_NAME QueueName;};
struct _NDIS_MINIPORT_CO_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;ULONG Flags;W_CO_CREATE_VC_HANDLER CoCreateVcHandler;W_CO_DELETE_VC_HANDLER CoDeleteVcHandler;W_CO_ACTIVATE_VC_HANDLER CoActivateVcHandler;W_CO_DEACTIVATE_VC_HANDLER CoDeactivateVcHandler;W_CO_SEND_NET_BUFFER_LISTS_HANDLER CoSendNetBufferListsHandler;W_CO_OID_REQUEST_HANDLER CoOidRequestHandler;};
struct _IRB_REQ_ALLOCATE_ADDRESS_RANGE {PMDL Mdl;ULONG fulFlags;ULONG nLength;ULONG MaxSegmentSize;ULONG fulAccessType;ULONG fulNotificationOptions;PVOID Callback;PVOID Context;ADDRESS_OFFSET Required1394Offset;PSLIST_HEADER FifoSListHead;PKSPIN_LOCK FifoSpinLock;ULONG AddressesReturned;PADDRESS_RANGE p1394AddressRange;HANDLE hAddressRange;PVOID DeviceExtension;};
struct _NDIS_RECEIVE_QUEUE_PARAMETERS {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_TYPE QueueType;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_RECEIVE_QUEUE_GROUP_ID QueueGroupId;GROUP_AFFINITY ProcessorAffinity;ULONG NumSuggestedReceiveBuffers;ULONG MSIXTableEntry;ULONG LookaheadSize;NDIS_VM_NAME VmName;NDIS_QUEUE_NAME QueueName;};
struct _DXGK_INTERFACESPECIFICDATA {HANDLE hAdapter;DXGKCB_GETHANDLEDATA pfnGetHandleDataCb;DXGKCB_GETHANDLEPARENT pfnGetHandleParentCb;DXGKCB_ENUMHANDLECHILDREN pfnEnumHandleChildrenCb;DXGKCB_NOTIFY_INTERRUPT pfnNotifyInterruptCb;DXGKCB_NOTIFY_DPC pfnNotifyDpcCb;DXGKCB_QUERYVIDPNINTERFACE pfnQueryVidPnInterfaceCb;DXGKCB_GETCAPTUREADDRESS pfnGetCaptureAddressCb;};
typedef NTSTATUS (*PBUILD_SCATTER_GATHER_LIST)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PMDL Mdl, PVOID CurrentVa, ULONG Length, PDRIVER_LIST_CONTROL ExecutionRoutine, PVOID Context, BOOLEAN WriteToDevice, PVOID ScatterGatherBuffer, ULONG ScatterGatherLength);
typedef NTSTATUS (*PGET_SCATTER_GATHER_LIST)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PMDL Mdl, PVOID CurrentVa, ULONG Length, PDRIVER_LIST_CONTROL ExecutionRoutine, PVOID Context, BOOLEAN WriteToDevice);
struct _HW_INITIALIZATION_DATA {_HW_INITIALIZATION_DATA___629464E23AC53C7DCCC75BF07BD6EA4B __anonymous0;PHW_INTERRUPT HwInterrupt;PHW_RECEIVE_DEVICE_SRB HwReceivePacket;PHW_CANCEL_SRB HwCancelPacket;PHW_REQUEST_TIMEOUT_HANDLER HwRequestTimeoutHandler;ULONG DeviceExtensionSize;ULONG PerRequestExtensionSize;ULONG PerStreamExtensionSize;ULONG FilterInstanceExtensionSize;BOOLEAN BusMasterDMA;BOOLEAN Dma24BitAddresses;ULONG BufferAlignment;BOOLEAN TurnOffSynchronization;ULONG DmaBufferSize;ULONG NumNameExtensions;PWCHAR *NameExtensionArray;};
typedef BOOLEAN (*PI8042_KEYBOARD_ISR)(PVOID IsrContext, PKEYBOARD_INPUT_DATA CurrentInput, POUTPUT_PACKET CurrentOutput, UCHAR StatusByte, PUCHAR Byte, PBOOLEAN ContinueProcessing, PKEYBOARD_SCAN_STATE ScanState);
struct _SCSIWMILIB_CONTEXT {ULONG GuidCount;PSCSIWMIGUIDREGINFO GuidList;PSCSIWMI_QUERY_REGINFO QueryWmiRegInfo;PSCSIWMI_QUERY_DATABLOCK QueryWmiDataBlock;PSCSIWMI_SET_DATABLOCK SetWmiDataBlock;PSCSIWMI_SET_DATAITEM SetWmiDataItem;PSCSIWMI_EXECUTE_METHOD ExecuteWmiMethod;PSCSIWMI_FUNCTION_CONTROL WmiFunctionControl;};
struct _RTL_GENERIC_TABLE {PRTL_SPLAY_LINKS TableRoot;LIST_ENTRY InsertOrderList;PLIST_ENTRY OrderedPointer;ULONG WhichOrderedElement;ULONG NumberGenericTableElements;PRTL_GENERIC_COMPARE_ROUTINE CompareRoutine;PRTL_GENERIC_ALLOCATE_ROUTINE AllocateRoutine;PRTL_GENERIC_FREE_ROUTINE FreeRoutine;PVOID TableContext;};
struct _NET_BUFFER_LIST {_NET_BUFFER_LIST_HEADER __anonymous0;PNET_BUFFER_LIST_CONTEXT Context;PNET_BUFFER_LIST ParentNetBufferList;NDIS_HANDLE NdisPoolHandle;PVOID NdisReserved[2];PVOID ProtocolReserved[4];PVOID MiniportReserved[2];PVOID Scratch;NDIS_HANDLE SourceHandle;ULONG NblFlags;LONG ChildRefCount;ULONG Flags;_NET_BUFFER_LIST___CCB763B4739EE3E630364C68588BBC2A __anonymous1;PVOID NetBufferListInfo[18];};
struct _RXCE_TRANSPORT_ {_RXCE_SIGNATURE_ __anonymous0;UNICODE_STRING Name;PDEVICE_OBJECT pDeviceObject;HANDLE ControlChannel;PFILE_OBJECT pControlChannelFileObject;PRXCE_TRANSPORT_PROVIDER_INFO pProviderInfo;LONG ConnectionCount;LONG VirtualCircuitCount;ULONG QualityOfService;};
struct _WMILIB_CONTEXT {ULONG GuidCount;PWMIGUIDREGINFO GuidList;PWMI_QUERY_REGINFO QueryWmiRegInfo;PWMI_QUERY_DATABLOCK QueryWmiDataBlock;PWMI_SET_DATABLOCK SetWmiDataBlock;PWMI_SET_DATAITEM SetWmiDataItem;PWMI_EXECUTE_METHOD ExecuteWmiMethod;PWMI_FUNCTION_CONTROL WmiFunctionControl;};
struct _V_NET_ROOT {_V_NET_ROOT___67228D3E87097EDE9B472C5F8816F370 __anonymous0;BOOLEAN UpperFinalizationDone;BOOLEAN ConnectionFinalizationDone;RX_BLOCK_CONDITION Condition;LONG AdditionalReferenceForDeleteFsctlTaken;RX_PREFIX_ENTRY PrefixEntry;UNICODE_STRING NamePrefix;ULONG PrefixOffsetInBytes;LIST_ENTRY NetRootListEntry;ULONG SerialNumberForEnum;LIST_ENTRY TransitionWaitList;LIST_ENTRY ScavengerFinalizationList;};
struct _RXCE_VC_ {_RXCE_SIGNATURE_ __anonymous0;PRXCE_CONNECTION pConnection;HANDLE hEndpoint;PFILE_OBJECT pEndpointFileObject;LONG State;CONNECTION_CONTEXT ConnectionId;PMDL pReceiveMdl;PKEVENT pCleanUpEvent;};
struct _SRV_OPEN {_SRV_OPEN___77A51EE1E80C64E222053A0C90FCC703 __anonymous0;BOOLEAN UpperFinalizationDone;RX_BLOCK_CONDITION Condition;LONG BufferingToken;LIST_ENTRY ScavengerFinalizationList;LIST_ENTRY TransitionWaitList;LIST_ENTRY FobxList;PFOBX InternalFobx;_SRV_OPEN___03B51F6B0294198AC1E02D34CA408274 __anonymous3;NTSTATUS OpenStatus;};
struct _WSK_PROVIDER_CONNECTION_DISPATCH {_WSK_PROVIDER_BASIC_DISPATCH __anonymous0;PFN_WSK_BIND WskBind;PFN_WSK_CONNECT WskConnect;PFN_WSK_GET_LOCAL_ADDRESS WskGetLocalAddress;PFN_WSK_GET_REMOTE_ADDRESS WskGetRemoteAddress;PFN_WSK_SEND WskSend;PFN_WSK_RECEIVE WskReceive;PFN_WSK_DISCONNECT WskDisconnect;PFN_WSK_RELEASE_DATA_INDICATION_LIST WskRelease;};
struct _NDIS_WMI_RECEIVE_QUEUE_INFO {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_TYPE QueueType;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_RECEIVE_QUEUE_GROUP_ID QueueGroupId;NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE QueueState;NDIS_WMI_GROUP_AFFINITY ProcessorAffinity;ULONG NumSuggestedReceiveBuffers;ULONG MSIXTableEntry;ULONG LookaheadSize;NDIS_VM_NAME VmName;NDIS_QUEUE_NAME QueueName;};
struct _PARALLEL_PNP_INFORMATION {PHYSICAL_ADDRESS OriginalEcpController;PUCHAR EcpController;ULONG SpanOfEcpController;ULONG PortNumber;ULONG HardwareCapabilities;PPARALLEL_SET_CHIP_MODE TrySetChipMode;PPARALLEL_CLEAR_CHIP_MODE ClearChipMode;ULONG FifoDepth;ULONG FifoWidth;PHYSICAL_ADDRESS EppControllerPhysicalAddress;ULONG SpanOfEppController;ULONG Ieee1284_3DeviceCount;PPARALLEL_TRY_SELECT_ROUTINE TrySelectDevice;PPARALLEL_DESELECT_ROUTINE DeselectDevice;PVOID Context;ULONG CurrentMode;PWSTR PortName;};
struct _FLT_CALLBACK_DATA_QUEUE {IO_CSQ Csq;FLT_CALLBACK_DATA_QUEUE_FLAGS Flags;PFLT_INSTANCE Instance;PFLT_CALLBACK_DATA_QUEUE_INSERT_IO InsertIo;PFLT_CALLBACK_DATA_QUEUE_REMOVE_IO RemoveIo;PFLT_CALLBACK_DATA_QUEUE_PEEK_NEXT_IO PeekNextIo;PFLT_CALLBACK_DATA_QUEUE_ACQUIRE Acquire;PFLT_CALLBACK_DATA_QUEUE_RELEASE Release;PFLT_CALLBACK_DATA_QUEUE_COMPLETE_CANCELED_IO CompleteCanceledIo;};
struct _HW_STREAM_REQUEST_BLOCK {ULONG SizeOfThisPacket;SRB_COMMAND Command;NTSTATUS Status;PHW_STREAM_OBJECT StreamObject;PVOID HwDeviceExtension;PVOID SRBExtension;union _HW_STREAM_REQUEST_BLOCK___CommandData CommandData;ULONG NumberOfBuffers;ULONG TimeoutCounter;ULONG TimeoutOriginal;struct _HW_STREAM_REQUEST_BLOCK *NextSRB;PIRP Irp;ULONG Flags;PVOID HwInstanceExtension;_HW_STREAM_REQUEST_BLOCK___9AC406258F9759C0176992CA6A9257C0 __anonymous0;PKSSCATTER_GATHER ScatterGatherBuffer;ULONG NumberOfPhysicalPages;ULONG NumberOfScatterGatherElements;ULONG Reserved[1];};
struct _NDIS_RECEIVE_QUEUE_INFO {NDIS_OBJECT_HEADER Header;ULONG Flags;NDIS_RECEIVE_QUEUE_TYPE QueueType;NDIS_RECEIVE_QUEUE_ID QueueId;NDIS_RECEIVE_QUEUE_GROUP_ID QueueGroupId;NDIS_RECEIVE_QUEUE_OPERATIONAL_STATE QueueState;GROUP_AFFINITY ProcessorAffinity;ULONG NumSuggestedReceiveBuffers;ULONG MSIXTableEntry;ULONG LookaheadSize;NDIS_VM_NAME VmName;NDIS_QUEUE_NAME QueueName;};
struct _LLDP_PROVIDER_DISPATCH {PLLDP_ENUMERATE_MSAPS MsapEnumerate;PLLDP_OPEN_MSAP MsapOpen;PLLDP_CLOSE_MSAP MsapClose;PLLDP_QUERY_CONFIG MsapQueryConfig;PLLDP_SET_CONFIG MsapSetConfig;PLLDP_QUERY_STATUS MsapQueryStatus;PLLDP_QUERY_STATISTICS MsapQueryStatistics;PLLDP_QUERY_TLVS QueryMultipleTlvs;PLLDP_SET_TLVS SetMultipleTlvs;};
struct _CLASS_POWER_CONTEXT {union _CLASS_POWER_CONTEXT___17E0FD5FF75A8E801AD8B6E16645E3EF PowerChangeState;CLASS_POWER_OPTIONS Options;BOOLEAN InUse;BOOLEAN QueueLocked;NTSTATUS FinalStatus;ULONG RetryCount;ULONG RetryInterval;PIO_COMPLETION_ROUTINE CompletionRoutine;PDEVICE_OBJECT DeviceObject;PIRP Irp;SCSI_REQUEST_BLOCK Srb;};
struct _NDIS_OID_REQUEST {NDIS_OBJECT_HEADER Header;NDIS_REQUEST_TYPE RequestType;NDIS_PORT_NUMBER PortNumber;UINT Timeout;PVOID RequestId;NDIS_HANDLE RequestHandle;union _NDIS_OID_REQUEST___REQUEST_DATA DATA;UCHAR NdisReserved[64];UCHAR MiniportReserved[8];UCHAR SourceReserved[8];UCHAR SupportedRevision;UCHAR Reserved1;USHORT Reserved2;};
typedef BOOLEAN (*PI8042_MOUSE_ISR)(PVOID IsrContext, PMOUSE_INPUT_DATA CurrentInput, POUTPUT_PACKET CurrentOutput, UCHAR StatusByte, PUCHAR Byte, PBOOLEAN ContinueProcessing, PMOUSE_STATE MouseState, PMOUSE_RESET_SUBSTATE ResetSubState);
struct _PO_FX_DEVICE_V1 {ULONG Version;ULONG ComponentCount;PPO_FX_COMPONENT_ACTIVE_CONDITION_CALLBACK ComponentActiveConditionCallback;PPO_FX_COMPONENT_IDLE_CONDITION_CALLBACK ComponentIdleConditionCallback;PPO_FX_COMPONENT_IDLE_STATE_CALLBACK ComponentIdleStateCallback;PPO_FX_DEVICE_POWER_REQUIRED_CALLBACK DevicePowerRequiredCallback;PPO_FX_DEVICE_POWER_NOT_REQUIRED_CALLBACK DevicePowerNotRequiredCallback;PPO_FX_POWER_CONTROL_CALLBACK PowerControlCallback;PVOID DeviceContext;PO_FX_COMPONENT_V1 Components[1];};
struct _SRV_CALL {_SRV_CALL___0ACC7C61618F999A81F788F7C5AA38D2 __anonymous0;BOOLEAN UpperFinalizationDone;RX_PREFIX_ENTRY PrefixEntry;RX_BLOCK_CONDITION Condition;ULONG SerialNumberForEnum;LONG NumberOfCloseDelayedFiles;LIST_ENTRY TransitionWaitList;LIST_ENTRY ScavengerFinalizationList;PURGE_SYNCHRONIZATION_CONTEXT PurgeSyncronizationContext;RX_BUFFERING_MANAGER BufferingManager;};
union _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D {struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___69C11E4E3904219D9A8207E8DBA8FECD StartDevice;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___670710264263D47AAED285B3D8DDF250 QueryDeviceRelations;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___7995DA36ED0214F9D006DCD5B47162D4 QueryInterface;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___6B11BC409C8BDB4C1D2CF8E6F83B383D DeviceCapabilities;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___E3C1BD80419791D70DF0170630DDCD15 FilterResourceRequirements;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___5886429FC15D5D9FBCD15B5B7E423A41 ReadWriteConfig;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___CAFA629F92AFE900ACAC7E5B47418F4C SetLock;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___03E399533941020534C84F7B69BA6C0D QueryId;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___7336F5CE809A28AD3CEF03AEB402B448 QueryDeviceText;struct _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D___41591AB00568573FD23A44C44B36D401 UsageNotification;};
typedef NTSTATUS (*PBUILD_SCATTER_GATHER_LIST_EX)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PVOID DmaTransferContext, PMDL Mdl, ULONGLONG Offset, ULONG Length, ULONG Flags, PDRIVER_LIST_CONTROL ExecutionRoutine, PVOID Context, BOOLEAN WriteToDevice, PVOID ScatterGatherBuffer, ULONG ScatterGatherLength, PDMA_COMPLETION_ROUTINE DmaCompletionRoutine, PVOID CompletionContext, PVOID ScatterGatherList);
struct _PCI_VIRTUALIZATION_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PSET_VIRTUAL_DEVICE_DATA SetVirtualFunctionData;PGET_VIRTUAL_DEVICE_DATA GetVirtualFunctionData;PGET_VIRTUAL_DEVICE_LOCATION GetLocation;PGET_VIRTUAL_DEVICE_RESOURCES GetResources;PENABLE_VIRTUALIZATION EnableVirtualization;PGET_VIRTUAL_FUNCTION_PROBED_BARS GetVirtualFunctionProbedBars;};
struct _PCI_BUS_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PPCI_READ_WRITE_CONFIG ReadConfig;PPCI_READ_WRITE_CONFIG WriteConfig;PPCI_PIN_TO_LINE PinToLine;PPCI_LINE_TO_PIN LineToPin;PPCI_ROOT_BUS_CAPABILITY RootBusCapability;PPCI_EXPRESS_WAKE_CONTROL ExpressWakeControl;PPCI_PREPARE_MULTISTAGE_RESUME PrepareMultistageResume;};
struct _GENERAL_LOOKASIDE_POOL {union _GENERAL_LOOKASIDE_POOL___1DBA9DD087472369DDC11975A606CD44 u;USHORT Depth;USHORT MaximumDepth;ULONG TotalAllocates;union _GENERAL_LOOKASIDE_POOL___12DFDCE967313C3B7DB84D914C6D2312 u2;ULONG TotalFrees;union _GENERAL_LOOKASIDE_POOL___30CCD2649BDFA90F272B33B2D857C57A u3;POOL_TYPE Type;ULONG Tag;ULONG Size;union _GENERAL_LOOKASIDE_POOL___15E753D7C02A960DCE39CA1D248AD77A u4;union _GENERAL_LOOKASIDE_POOL___FB106391A1988A396D89C68A33D7E06D u5;LIST_ENTRY ListEntry;ULONG LastTotalAllocates;union _GENERAL_LOOKASIDE_POOL___069B740C1857A11367A9BFE4C43AA2E8 u6;ULONG Future[2];};
struct _GENERAL_LOOKASIDE {union _GENERAL_LOOKASIDE___1DBA9DD087472369DDC11975A606CD44 u;USHORT Depth;USHORT MaximumDepth;ULONG TotalAllocates;union _GENERAL_LOOKASIDE___12DFDCE967313C3B7DB84D914C6D2312 u2;ULONG TotalFrees;union _GENERAL_LOOKASIDE___30CCD2649BDFA90F272B33B2D857C57A u3;POOL_TYPE Type;ULONG Tag;ULONG Size;union _GENERAL_LOOKASIDE___15E753D7C02A960DCE39CA1D248AD77A u4;union _GENERAL_LOOKASIDE___FB106391A1988A396D89C68A33D7E06D u5;LIST_ENTRY ListEntry;ULONG LastTotalAllocates;union _GENERAL_LOOKASIDE___069B740C1857A11367A9BFE4C43AA2E8 u6;ULONG Future[2];};
typedef NTSTATUS (*PMAP_TRANSFER_EX)(PDMA_ADAPTER DmaAdapter, PMDL Mdl, PVOID MapRegisterBase, ULONGLONG Offset, ULONG DeviceOffset, PULONG Length, BOOLEAN WriteToDevice, PSCATTER_GATHER_LIST ScatterGatherBuffer, ULONG ScatterGatherBufferLength, PDMA_COMPLETION_ROUTINE DmaCompletionRoutine, PVOID CompletionContext);
struct _NDK_QP_DISPATCH {NDK_FN_CLOSE_OBJECT NdkCloseQp;NDK_FN_QUERY_EXTENSION_INTERFACE NdkQueryExtension;NDK_FN_FLUSH NdkFlush;NDK_FN_SEND NdkSend;NDK_FN_RECEIVE NdkReceive;NDK_FN_BIND NdkBind;NDK_FN_FAST_REGISTER NdkFastRegister;NDK_FN_INVALIDATE NdkInvalidate;NDK_FN_READ NdkRead;NDK_FN_WRITE NdkWrite;};
struct _PO_FX_DEVICE_V2 {ULONG Version;ULONGLONG Flags;PPO_FX_COMPONENT_ACTIVE_CONDITION_CALLBACK ComponentActiveConditionCallback;PPO_FX_COMPONENT_IDLE_CONDITION_CALLBACK ComponentIdleConditionCallback;PPO_FX_COMPONENT_IDLE_STATE_CALLBACK ComponentIdleStateCallback;PPO_FX_DEVICE_POWER_REQUIRED_CALLBACK DevicePowerRequiredCallback;PPO_FX_DEVICE_POWER_NOT_REQUIRED_CALLBACK DevicePowerNotRequiredCallback;PPO_FX_POWER_CONTROL_CALLBACK PowerControlCallback;PVOID DeviceContext;ULONG ComponentCount;PO_FX_COMPONENT_V2 Components[1];};
struct _RXCE_ADDRESS_ {struct {union {_RXCE_CONNECTION_ __anonymous0;ULONG Signature;};};PRXCE_TRANSPORT pTransport;PTRANSPORT_ADDRESS pTransportAddress;PVOID pContext;PRXCE_ADDRESS_EVENT_HANDLER pHandler;PMDL pReceiveMdl;HANDLE hAddress;PFILE_OBJECT pFileObject;LONG ConnectionCount;LONG VirtualCircuitCount;};
union _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A {struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___3EB8CABE069EF4BB3B59E8B4E119E046 Transfer;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___B8543B8A5FA03AFF2CFE9331D405A718 Fill;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___A4484C77F207812881C1E1418C2F7952 DiscardContent;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___E4F4861FB104718B686777235333E57B ReadPhysical;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___E4F4861FB104718B686777235333E57B WritePhysical;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___9727AC4DDD1719C8C8FC560327A49CAA MapApertureSegment;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___B23455DF8066A3318DDF1E92BFD72172 UnmapApertureSegment;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___F96A1248A3A1B3EAF839ECFA87915C7E SpecialLockTransfer;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___F7EE40DE4E716B260B779FE59F440645 TransferVirtual;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___E1F4249D1557DDD5F3F51CC54703FD4A FillVirtual;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___AB1AD8C4B599AC16D84572F0ADA81B2A InitContextResource;struct _DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A___AC0F9210C306688B09ED71AB939B4173 Reserved;};
struct _IO_CONNECT_INTERRUPT_FULLY_SPECIFIED_PARAMETERS {PDEVICE_OBJECT PhysicalDeviceObject;PKINTERRUPT *InterruptObject;PKSERVICE_ROUTINE ServiceRoutine;PVOID ServiceContext;PKSPIN_LOCK SpinLock;KIRQL SynchronizeIrql;BOOLEAN FloatingSave;BOOLEAN ShareVector;ULONG Vector;KIRQL Irql;KINTERRUPT_MODE InterruptMode;KAFFINITY ProcessorEnableMask;USHORT Group;};
union _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3 {struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___2E6E1237D89AC2CAB060B49770B2CA80 Create;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___4C13AF031D06E093FE52B506E8E4A77C QueryDirectory;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___7BC758282EA7540BD9403E898486B59E NotifyChangeDirectory;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___F6D510E582433D4D61984B32A02828F3 QueryEa;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___F0865C6FA226E0A715609B3D711D72E6 QuerySecurity;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___E1830675726AC350ADD284B511E01E52 SetSecurity;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___CFEAA99B9132A38F888FE454C8847D59 QueryQuota;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___AFA69771633799B8FB97339D76F53EAE SetQuota;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___3468237E04E6C07F1A666998C04EBABE DosVolumeFunction;_RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___E92C6DBFB4AF914E88BD4C5D248FCB7C __anonymous0;LUID FsdUid;};
struct _STORPORT_EXTENDED_FUNCTIONS {ULONG Version;PStorPortGetMessageInterruptInformation GetMessageInterruptInformation;PStorPortPutScatterGatherList PutScatterGatherList;PStorPortBuildScatterGatherList BuildScatterGatherList;PStorPortFreePool FreePool;PStorPortAllocatePool AllocatePool;PStorPortGetSystemAddress GetSystemAddress;PStorPortAcquireMSISpinLock AcquireMSISpinLock;PStorPortReleaseMSISpinLock ReleaseMSISpinLock;PStorPortCompleteServiceIrp CompleteServiceIrp;PStorPortGetOriginalMdl GetOriginalMdl;};
typedef NTSTATUS (*PGET_SCATTER_GATHER_LIST_EX)(PDMA_ADAPTER DmaAdapter, PDEVICE_OBJECT DeviceObject, PVOID DmaTransferContext, PMDL Mdl, ULONGLONG Offset, ULONG Length, ULONG Flags, PDRIVER_LIST_CONTROL ExecutionRoutine, PVOID Context, BOOLEAN WriteToDevice, PDMA_COMPLETION_ROUTINE DmaCompletionRoutine, PVOID CompletionContext, PSCATTER_GATHER_LIST *ScatterGatherList);
struct _USB_BUS_INTERFACE_HUB_V1 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;};
struct _ACPI_INTERFACE_STANDARD {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PGPE_CONNECT_VECTOR GpeConnectVector;PGPE_DISCONNECT_VECTOR GpeDisconnectVector;PGPE_ENABLE_EVENT GpeEnableEvent;PGPE_DISABLE_EVENT GpeDisableEvent;PGPE_CLEAR_STATUS GpeClearStatus;PREGISTER_FOR_DEVICE_NOTIFICATIONS RegisterForDeviceNotifications;PUNREGISTER_FOR_DEVICE_NOTIFICATIONS UnregisterForDeviceNotifications;};
struct _DXGK_VIDPN_INTERFACE {DXGK_VIDPN_INTERFACE_VERSION Version;DXGKDDI_VIDPN_GETTOPOLOGY pfnGetTopology;DXGKDDI_VIDPN_ACQUIRESOURCEMODESET pfnAcquireSourceModeSet;DXGKDDI_VIDPN_RELEASESOURCEMODESET pfnReleaseSourceModeSet;DXGKDDI_VIDPN_CREATENEWSOURCEMODESET pfnCreateNewSourceModeSet;DXGKDDI_VIDPN_ASSIGNSOURCEMODESET pfnAssignSourceModeSet;DXGKDDI_VIDPN_ASSIGNMULTISAMPLINGMETHODSET pfnAssignMultisamplingMethodSet;DXGKDDI_VIDPN_ACQUIRETARGETMODESET pfnAcquireTargetModeSet;DXGKDDI_VIDPN_RELEASETARGETMODESET pfnReleaseTargetModeSet;DXGKDDI_VIDPN_CREATENEWTARGETMODESET pfnCreateNewTargetModeSet;DXGKDDI_VIDPN_ASSIGNTARGETMODESET pfnAssignTargetModeSet;};
struct _USBCAMD_DEVICE_DATA2 {ULONG Sig;PCAM_INITIALIZE_ROUTINE CamInitialize;PCAM_INITIALIZE_ROUTINE CamUnInitialize;PCAM_PROCESS_PACKET_ROUTINE_EX CamProcessUSBPacketEx;PCAM_NEW_FRAME_ROUTINE_EX CamNewVideoFrameEx;PCAM_PROCESS_RAW_FRAME_ROUTINE_EX CamProcessRawVideoFrameEx;PCAM_START_CAPTURE_ROUTINE_EX CamStartCaptureEx;PCAM_STOP_CAPTURE_ROUTINE_EX CamStopCaptureEx;PCAM_CONFIGURE_ROUTINE_EX CamConfigureEx;PCAM_STATE_ROUTINE CamSaveState;PCAM_STATE_ROUTINE CamRestoreState;PCAM_ALLOCATE_BW_ROUTINE_EX CamAllocateBandwidthEx;PCAM_FREE_BW_ROUTINE_EX CamFreeBandwidthEx;};
struct _USBCAMD_DEVICE_DATA {ULONG Sig;PCAM_INITIALIZE_ROUTINE CamInitialize;PCAM_INITIALIZE_ROUTINE CamUnInitialize;PCAM_PROCESS_PACKET_ROUTINE CamProcessUSBPacket;PCAM_NEW_FRAME_ROUTINE CamNewVideoFrame;PCAM_PROCESS_RAW_FRAME_ROUTINE CamProcessRawVideoFrame;PCAM_START_CAPTURE_ROUTINE CamStartCapture;PCAM_STOP_CAPTURE_ROUTINE CamStopCapture;PCAM_CONFIGURE_ROUTINE CamConfigure;PCAM_STATE_ROUTINE CamSaveState;PCAM_STATE_ROUTINE CamRestoreState;PCAM_ALLOCATE_BW_ROUTINE CamAllocateBandwidth;PCAM_FREE_BW_ROUTINE CamFreeBandwidth;};
struct _MRX_NET_ROOT_ {_MRX_NORMAL_NODE_HEADER __anonymous0;PMRX_SRV_CALL pSrvCall;PVOID Context;PVOID Context2;ULONG Flags;ULONG NumberOfFcbs;ULONG NumberOfSrvOpens;MRX_NET_ROOT_STATE MRxNetRootState;NET_ROOT_TYPE Type;MRX_PURGE_RELATIONSHIP PurgeRelationship;MRX_PURGE_SYNCLOCATION PurgeSyncLocation;ULONG DeviceType;PUNICODE_STRING pNetRootName;UNICODE_STRING InnerNamePrefix;ULONG ParameterValidationStamp;_MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC __anonymous9;};
struct _CLASS_FUNCTION_SUPPORT_INFO {KSPIN_LOCK SyncLock;ULONG GenerationCount;ULONG ChangeRequestCount;struct _CLASS_FUNCTION_SUPPORT_INFO___BC31D02BDFED8E48EFF79C7269298751 ValidInquiryPages;struct _CLASS_FUNCTION_SUPPORT_INFO___CA87E02B5CCB4A8C12E403EBDC16A39C LowerLayerSupport;BOOLEAN RegAccessAlignmentQueryNotSupported;BOOLEAN AsynchronousNotificationSupported;UCHAR Reserved[2];CLASS_VPD_B0_DATA BlockLimitsData;CLASS_VPD_B1_DATA DeviceCharacteristicsData;CLASS_VPD_B2_DATA LBProvisioningData;CLASS_READ_CAPACITY16_DATA ReadCapacity16Data;CLASS_VPD_ECOP_BLOCK_DEVICE_ROD_LIMITS BlockDeviceRODLimitsData;struct _CLASS_FUNCTION_SUPPORT_INFO___C8451C2C65B56671EE6E9E14E6F6646E IdlePower;};
struct _VIDEO_PORT_CONFIG_INFO {ULONG Length;ULONG SystemIoBusNumber;INTERFACE_TYPE AdapterInterfaceType;ULONG BusInterruptLevel;ULONG BusInterruptVector;KINTERRUPT_MODE InterruptMode;ULONG NumEmulatorAccessEntries;PEMULATOR_ACCESS_ENTRY EmulatorAccessEntries;ULONG_PTR EmulatorAccessEntriesContext;PHYSICAL_ADDRESS VdmPhysicalVideoMemoryAddress;ULONG VdmPhysicalVideoMemoryLength;ULONG HardwareStateSize;ULONG DmaChannel;ULONG DmaPort;UCHAR DmaShareable;UCHAR InterruptShareable;BOOLEAN Master;DMA_WIDTH DmaWidth;DMA_SPEED DmaSpeed;BOOLEAN bMapBuffers;BOOLEAN NeedPhysicalAddresses;BOOLEAN DemandMode;ULONG MaximumTransferLength;ULONG NumberOfPhysicalBreaks;BOOLEAN ScatterGather;ULONG MaximumScatterGatherChunkSize;PVIDEO_PORT_GET_PROC_ADDRESS VideoPortGetProcAddress;PWSTR DriverRegistryPath;ULONGLONG SystemMemorySize;};
struct _FLT_REGISTRATION {USHORT Size;USHORT Version;FLT_REGISTRATION_FLAGS Flags; FLT_CONTEXT_REGISTRATION *ContextRegistration; FLT_OPERATION_REGISTRATION *OperationRegistration;PFLT_FILTER_UNLOAD_CALLBACK FilterUnloadCallback;PFLT_INSTANCE_SETUP_CALLBACK InstanceSetupCallback;PFLT_INSTANCE_QUERY_TEARDOWN_CALLBACK InstanceQueryTeardownCallback;PFLT_INSTANCE_TEARDOWN_CALLBACK InstanceTeardownStartCallback;PFLT_INSTANCE_TEARDOWN_CALLBACK InstanceTeardownCompleteCallback;PFLT_GENERATE_FILE_NAME GenerateFileNameCallback;PFLT_NORMALIZE_NAME_COMPONENT NormalizeNameComponentCallback;PFLT_NORMALIZE_CONTEXT_CLEANUP NormalizeContextCleanupCallback;PFLT_TRANSACTION_NOTIFICATION_CALLBACK TransactionNotificationCallback;PFLT_NORMALIZE_NAME_COMPONENT_EX NormalizeNameComponentExCallback;PFLT_SECTION_CONFLICT_NOTIFICATION_CALLBACK SectionNotificationCallback;};
struct _NDIS_PROTOCOL_DRIVER_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;UCHAR MajorNdisVersion;UCHAR MinorNdisVersion;UCHAR MajorDriverVersion;UCHAR MinorDriverVersion;ULONG Flags;NDIS_STRING Name;SET_OPTIONS_HANDLER SetOptionsHandler;BIND_HANDLER_EX BindAdapterHandlerEx;UNBIND_HANDLER_EX UnbindAdapterHandlerEx;OPEN_ADAPTER_COMPLETE_HANDLER_EX OpenAdapterCompleteHandlerEx;CLOSE_ADAPTER_COMPLETE_HANDLER_EX CloseAdapterCompleteHandlerEx;NET_PNP_EVENT_HANDLER NetPnPEventHandler;UNINSTALL_PROTOCOL_HANDLER UninstallHandler;OID_REQUEST_COMPLETE_HANDLER OidRequestCompleteHandler;STATUS_HANDLER_EX StatusHandlerEx;RECEIVE_NET_BUFFER_LISTS_HANDLER ReceiveNetBufferListsHandler;SEND_NET_BUFFER_LISTS_COMPLETE_HANDLER SendNetBufferListsCompleteHandler;DIRECT_OID_REQUEST_COMPLETE_HANDLER DirectOidRequestCompleteHandler;};
struct _VIDEO_HW_INITIALIZATION_DATA {ULONG HwInitDataSize;INTERFACE_TYPE AdapterInterfaceType;PVIDEO_HW_FIND_ADAPTER HwFindAdapter;PVIDEO_HW_INITIALIZE HwInitialize;PVIDEO_HW_INTERRUPT HwInterrupt;PVIDEO_HW_START_IO HwStartIO;ULONG HwDeviceExtensionSize;ULONG StartingDeviceNumber;PVIDEO_HW_RESET_HW HwResetHw;PVIDEO_HW_TIMER HwTimer;PVIDEO_HW_START_DMA HwStartDma;PVIDEO_HW_POWER_SET HwSetPowerState;PVIDEO_HW_POWER_GET HwGetPowerState;PVIDEO_HW_GET_CHILD_DESCRIPTOR HwGetVideoChildDescriptor;PVIDEO_HW_QUERY_INTERFACE HwQueryInterface;ULONG HwChildDeviceExtensionSize;PVIDEO_ACCESS_RANGE HwLegacyResourceList;ULONG HwLegacyResourceCount;PVIDEO_HW_LEGACYRESOURCES HwGetLegacyResources;BOOLEAN AllowEarlyEnumeration;ULONG Reserved;};
struct _USB_BUS_INTERFACE_HUB_V2 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;};
struct _NDIS_CO_CALL_MANAGER_OPTIONAL_HANDLERS {NDIS_OBJECT_HEADER Header;ULONG Reserved;CO_CREATE_VC_HANDLER CmCreateVcHandler;CO_DELETE_VC_HANDLER CmDeleteVcHandler;CM_OPEN_AF_HANDLER CmOpenAfHandler;CM_CLOSE_AF_HANDLER CmCloseAfHandler;CM_REG_SAP_HANDLER CmRegisterSapHandler;CM_DEREG_SAP_HANDLER CmDeregisterSapHandler;CM_MAKE_CALL_HANDLER CmMakeCallHandler;CM_CLOSE_CALL_HANDLER CmCloseCallHandler;CM_INCOMING_CALL_COMPLETE_HANDLER CmIncomingCallCompleteHandler;CM_ADD_PARTY_HANDLER CmAddPartyHandler;CM_DROP_PARTY_HANDLER CmDropPartyHandler;CM_ACTIVATE_VC_COMPLETE_HANDLER CmActivateVcCompleteHandler;CM_DEACTIVATE_VC_COMPLETE_HANDLER CmDeactivateVcCompleteHandler;CM_MODIFY_CALL_QOS_HANDLER CmModifyCallQoSHandler;CO_OID_REQUEST_HANDLER CmOidRequestHandler;CO_OID_REQUEST_COMPLETE_HANDLER CmOidRequestCompleteHandler;CM_NOTIFY_CLOSE_AF_COMPLETE_HANDLER CmNotifyCloseAfCompleteHandler;};
struct _RDBSS_DEVICE_OBJECT {_RDBSS_DEVICE_OBJECT___10CA472531081661EFDEFAD42E260FC9 __anonymous0;ULONG RegistrationControls;PRDBSS_EXPORTS RdbssExports;PDEVICE_OBJECT RDBSSDeviceObject;PMINIRDR_DISPATCH Dispatch;UNICODE_STRING DeviceName;ULONG NetworkProviderPriority;HANDLE MupHandle;BOOLEAN RegisterUncProvider;BOOLEAN RegisterMailSlotProvider;BOOLEAN RegisteredAsFileSystem;BOOLEAN Unused;LIST_ENTRY MiniRdrListLinks;ULONG NumberOfActiveFcbs;ULONG NumberOfActiveContexts;_RDBSS_DEVICE_OBJECT___8E5F2250B80FEA01BE2192B09BB2E785 __anonymous1;LONG PostedRequestCount[3];LONG OverflowQueueCount[3];LIST_ENTRY OverflowQueue[3];RX_SPIN_LOCK OverflowQueueSpinLock;LONG AsynchronousRequestsPending;PKEVENT pAsynchronousRequestsCompletionEvent;RDBSS_STARTSTOP_CONTEXT StartStopContext;RX_DISPATCHER_CONTEXT DispatcherContext;PRX_PREFIX_TABLE pRxNetNameTable;RX_PREFIX_TABLE RxNetNameTableInDeviceObject;PRDBSS_SCAVENGER pRdbssScavenger;RDBSS_SCAVENGER RdbssScavengerInDeviceObject;};
struct _NET_ROOT {union {struct {_MRX_NORMAL_NODE_HEADER __anonymous0;PMRX_SRV_CALL pSrvCall;PVOID Context;PVOID Context2;ULONG Flags;ULONG NumberOfFcbs;ULONG NumberOfSrvOpens;MRX_NET_ROOT_STATE MRxNetRootState;NET_ROOT_TYPE Type;MRX_PURGE_RELATIONSHIP PurgeRelationship;MRX_PURGE_SYNCLOCATION PurgeSyncLocation;ULONG DeviceType;PUNICODE_STRING pNetRootName;UNICODE_STRING InnerNamePrefix;ULONG ParameterValidationStamp;_MRX_NET_ROOT____D6BD9D1D4BCBD081A3A2043AB4B5D5FC __anonymous4;};_NET_ROOT___340FAF2C1DA1218AC74455EBD02C5C0A___4CB3A38A6DD30C9447592C75F663798A __anonymous6;};BOOLEAN UpperFinalizationDone;RX_BLOCK_CONDITION Condition;LIST_ENTRY TransitionWaitList;LIST_ENTRY ScavengerFinalizationList;PURGE_SYNCHRONIZATION_CONTEXT PurgeSyncronizationContext;PV_NET_ROOT DefaultVNetRoot;LIST_ENTRY VirtualNetRoots;ULONG NumberOfVirtualNetRoots;ULONG SerialNumberForEnum;RX_PREFIX_ENTRY PrefixEntry;RX_FCB_TABLE FcbTable;};
struct _IRP {CSHORT Type;USHORT Size;PMDL MdlAddress;ULONG Flags;union _IRP___CBBBB9F4F0755A16DC8A369061485BEC AssociatedIrp;LIST_ENTRY ThreadListEntry;IO_STATUS_BLOCK IoStatus;KPROCESSOR_MODE RequestorMode;BOOLEAN PendingReturned;CHAR StackCount;CHAR CurrentLocation;BOOLEAN Cancel;KIRQL CancelIrql;CCHAR ApcEnvironment;UCHAR AllocationFlags;PIO_STATUS_BLOCK UserIosb;PKEVENT UserEvent;union _IRP___6B96A96ED958C92F2CB4B83EAB343043 Overlay;PDRIVER_CANCEL CancelRoutine;PVOID UserBuffer;union _IRP___66699B8BF83DC91F51A70E4C6E3F33A6 Tail;};
union _URB___9B418D10B4EEB83522B3D8F0EA3C0682 {struct _URB_HEADER UrbHeader;struct _URB_SELECT_INTERFACE UrbSelectInterface;struct _URB_SELECT_CONFIGURATION UrbSelectConfiguration;struct _URB_PIPE_REQUEST UrbPipeRequest;struct _URB_FRAME_LENGTH_CONTROL UrbFrameLengthControl;struct _URB_GET_FRAME_LENGTH UrbGetFrameLength;struct _URB_SET_FRAME_LENGTH UrbSetFrameLength;struct _URB_GET_CURRENT_FRAME_NUMBER UrbGetCurrentFrameNumber;struct _URB_CONTROL_TRANSFER UrbControlTransfer;struct _URB_CONTROL_TRANSFER_EX UrbControlTransferEx;struct _URB_BULK_OR_INTERRUPT_TRANSFER UrbBulkOrInterruptTransfer;struct _URB_ISOCH_TRANSFER UrbIsochronousTransfer;struct _URB_CONTROL_DESCRIPTOR_REQUEST UrbControlDescriptorRequest;struct _URB_CONTROL_GET_STATUS_REQUEST UrbControlGetStatusRequest;struct _URB_CONTROL_FEATURE_REQUEST UrbControlFeatureRequest;struct _URB_CONTROL_VENDOR_OR_CLASS_REQUEST UrbControlVendorClassRequest;struct _URB_CONTROL_GET_INTERFACE_REQUEST UrbControlGetInterfaceRequest;struct _URB_CONTROL_GET_CONFIGURATION_REQUEST UrbControlGetConfigurationRequest;struct _URB_OS_FEATURE_DESCRIPTOR_REQUEST UrbOSFeatureDescriptorRequest;struct _URB_OPEN_STATIC_STREAMS UrbOpenStaticStreams;};
struct _93B241075AB814F9677BDB457CD6BECF {ULONG Version;pHalQuerySystemInformation HalQuerySystemInformation;pHalSetSystemInformation HalSetSystemInformation;pHalQueryBusSlots HalQueryBusSlots;ULONG Spare1;pHalExamineMBR HalExamineMBR;pHalIoReadPartitionTable HalIoReadPartitionTable;pHalIoSetPartitionInformation HalIoSetPartitionInformation;pHalIoWritePartitionTable HalIoWritePartitionTable;pHalHandlerForBus HalReferenceHandlerForBus;pHalReferenceBusHandler HalReferenceBusHandler;pHalReferenceBusHandler HalDereferenceBusHandler;pHalInitPnpDriver HalInitPnpDriver;pHalInitPowerManagement HalInitPowerManagement;pHalGetDmaAdapter HalGetDmaAdapter;pHalGetInterruptTranslator HalGetInterruptTranslator;pHalStartMirroring HalStartMirroring;pHalEndMirroring HalEndMirroring;pHalMirrorPhysicalMemory HalMirrorPhysicalMemory;pHalEndOfBoot HalEndOfBoot;pHalMirrorVerify HalMirrorVerify;pHalGetAcpiTable HalGetCachedAcpiTable;pHalSetPciErrorHandlerCallback HalSetPciErrorHandlerCallback;};
struct _NDIS_CO_CLIENT_OPTIONAL_HANDLERS {NDIS_OBJECT_HEADER Header;ULONG Reserved;CO_CREATE_VC_HANDLER ClCreateVcHandler;CO_DELETE_VC_HANDLER ClDeleteVcHandler;CO_OID_REQUEST_HANDLER ClOidRequestHandler;CO_OID_REQUEST_COMPLETE_HANDLER ClOidRequestCompleteHandler;CL_OPEN_AF_COMPLETE_HANDLER_EX ClOpenAfCompleteHandlerEx;CL_CLOSE_AF_COMPLETE_HANDLER ClCloseAfCompleteHandler;CL_REG_SAP_COMPLETE_HANDLER ClRegisterSapCompleteHandler;CL_DEREG_SAP_COMPLETE_HANDLER ClDeregisterSapCompleteHandler;CL_MAKE_CALL_COMPLETE_HANDLER ClMakeCallCompleteHandler;CL_MODIFY_CALL_QOS_COMPLETE_HANDLER ClModifyCallQoSCompleteHandler;CL_CLOSE_CALL_COMPLETE_HANDLER ClCloseCallCompleteHandler;CL_ADD_PARTY_COMPLETE_HANDLER ClAddPartyCompleteHandler;CL_DROP_PARTY_COMPLETE_HANDLER ClDropPartyCompleteHandler;CL_INCOMING_CALL_HANDLER ClIncomingCallHandler;CL_INCOMING_CALL_QOS_CHANGE_HANDLER ClIncomingCallQoSChangeHandler;CL_INCOMING_CLOSE_CALL_HANDLER ClIncomingCloseCallHandler;CL_INCOMING_DROP_PARTY_HANDLER ClIncomingDropPartyHandler;CL_CALL_CONNECTED_HANDLER ClCallConnectedHandler;CL_NOTIFY_CLOSE_AF_HANDLER ClNotifyCloseAfHandler;};
union _BRB___B3989489D001C29E299AADF382160F96 {struct _BRB_HEADER BrbHeader;struct _BRB_GET_DEVICE_INTERFACE_STRING BrbGetDeviceInterfaceString;struct _BRB_L2CA_REGISTER_SERVER BrbL2caRegisterServer;struct _BRB_L2CA_UNREGISTER_SERVER BrbL2caUnregisterServer;struct _BRB_L2CA_OPEN_CHANNEL BrbL2caOpenChannel;struct _BRB_L2CA_CLOSE_CHANNEL BrbL2caCloseChannel;struct _BRB_L2CA_PING BrbL2caPing;struct _BRB_L2CA_ACL_TRANSFER BrbL2caAclTransfer;struct _BRB_GET_LOCAL_BD_ADDR BrbGetLocalBdAddress;struct _BRB_PSM BrbPsm;struct _BRB_L2CA_UPDATE_CHANNEL BrbL2caUpdateChannel;struct _BRB_SCO_REGISTER_SERVER BrbScoRegisterServer;struct _BRB_SCO_UNREGISTER_SERVER BrbScoUnregisterServer;struct _BRB_SCO_OPEN_CHANNEL BrbScoOpenChannel;struct _BRB_SCO_CLOSE_CHANNEL BrbScoCloseChannel;struct _BRB_SCO_FLUSH_CHANNEL BrbScoFlushChannel;struct _BRB_SCO_TRANSFER BrbScoTransfer;struct _BRB_SCO_GET_CHANNEL_INFO BrbScoGetChannelInfo;struct _BRB_SCO_GET_SYSTEM_INFO BrbScoGetSystemInfo;struct _BRB_ACL_GET_MODE BrbAclGetMode;struct _BRB_ACL_ENTER_ACTIVE_MODE BrbAclEnterActiveMode;struct _BRB_L2CA_OPEN_ENHANCED_CHANNEL BrbL2caOpenEnhancedChannel;};
struct _MINIRDR_DISPATCH {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;ULONG MRxFlags;ULONG MRxSrvCallSize;ULONG MRxNetRootSize;ULONG MRxVNetRootSize;ULONG MRxFcbSize;ULONG MRxSrvOpenSize;ULONG MRxFobxSize;PMRX_CALLDOWN_CTX MRxStart;PMRX_CALLDOWN_CTX MRxStop;PMRX_CALLDOWN MRxCancel;PMRX_CALLDOWN MRxCreate;PMRX_CALLDOWN MRxCollapseOpen;PMRX_CALLDOWN MRxShouldTryToCollapseThisOpen;PMRX_CALLDOWN MRxFlush;PMRX_CALLDOWN MRxZeroExtend;PMRX_CALLDOWN MRxTruncate;PMRX_CALLDOWN MRxCleanupFobx;PMRX_CALLDOWN MRxCloseSrvOpen;PMRX_DEALLOCATE_FOR_FCB MRxDeallocateForFcb;PMRX_DEALLOCATE_FOR_FOBX MRxDeallocateForFobx;PMRX_IS_LOCK_REALIZABLE MRxIsLockRealizable;PMRX_FORCECLOSED_CALLDOWN MRxForceClosed;PMRX_CHKFCB_CALLDOWN MRxAreFilesAliased;PMRX_CALLDOWN MRxOpenPrintFile;PMRX_CALLDOWN MRxClosePrintFile;PMRX_CALLDOWN MRxWritePrintFile;PMRX_CALLDOWN MRxEnumeratePrintQueue;PMRX_CALLDOWN MRxClosedSrvOpenTimeOut;PMRX_CALLDOWN MRxClosedFcbTimeOut;PMRX_CALLDOWN MRxQueryDirectory;PMRX_CALLDOWN MRxQueryFileInfo;PMRX_CALLDOWN MRxSetFileInfo;PMRX_CALLDOWN MRxSetFileInfoAtCleanup;PMRX_CALLDOWN MRxQueryEaInfo;PMRX_CALLDOWN MRxSetEaInfo;PMRX_CALLDOWN MRxQuerySdInfo;PMRX_CALLDOWN MRxSetSdInfo;PMRX_CALLDOWN MRxQueryQuotaInfo;PMRX_CALLDOWN MRxSetQuotaInfo;PMRX_CALLDOWN MRxQueryVolumeInfo;PMRX_CALLDOWN MRxSetVolumeInfo;PMRX_CHKDIR_CALLDOWN MRxIsValidDirectory;PMRX_COMPUTE_NEW_BUFFERING_STATE MRxComputeNewBufferingState;PMRX_CALLDOWN MRxLowIOSubmit[11];PMRX_EXTENDFILE_CALLDOWN MRxExtendForCache;PMRX_EXTENDFILE_CALLDOWN MRxExtendForNonCache;PMRX_CHANGE_BUFFERING_STATE_CALLDOWN MRxCompleteBufferingStateChangeRequest;PMRX_CREATE_V_NET_ROOT MRxCreateVNetRoot;PMRX_FINALIZE_V_NET_ROOT_CALLDOWN MRxFinalizeVNetRoot;PMRX_FINALIZE_NET_ROOT_CALLDOWN MRxFinalizeNetRoot;PMRX_UPDATE_NETROOT_STATE MRxUpdateNetRootState;PMRX_EXTRACT_NETROOT_NAME MRxExtractNetRootName;PMRX_CREATE_SRVCALL MRxCreateSrvCall;PMRX_CREATE_SRVCALL MRxCancelCreateSrvCall;PMRX_SRVCALL_WINNER_NOTIFY MRxSrvCallWinnerNotify;PMRX_FINALIZE_SRVCALL_CALLDOWN MRxFinalizeSrvCall;PMRX_CALLDOWN MRxDevFcbXXXControlFile;PMRX_PREPARSE_NAME MRxPreparseName;PMRX_GET_CONNECTION_ID MRxGetConnectionId;ULONG ScavengerTimeout;};
struct _FCB {_FCB___50C0FDD650F19B09787FD38ED35AB87F __anonymous0;PV_NET_ROOT VNetRoot;PNON_PAGED_FCB NonPaged;LIST_ENTRY ScavengerFinalizationList;PKEVENT pBufferingStateChangeCompletedEvent;LONG NumberOfBufferingStateChangeWaiters;RX_FCB_TABLE_ENTRY FcbTableEntry;UNICODE_STRING PrivateAlreadyPrefixedName;BOOLEAN UpperFinalizationDone;RX_BLOCK_CONDITION Condition;PRX_FSD_DISPATCH_VECTOR PrivateDispatchVector;PRDBSS_DEVICE_OBJECT RxDeviceObject;PMINIRDR_DISPATCH MRxDispatch;PFAST_IO_DISPATCH MRxFastIoDispatch;PSRV_OPEN InternalSrvOpen;PFOBX InternalFobx;SHARE_ACCESS ShareAccess;SHARE_ACCESS ShareAccessPerSrvOpens;ULONG NumberOfLinks;LARGE_INTEGER CreationTime;LARGE_INTEGER LastAccessTime;LARGE_INTEGER LastWriteTime;LARGE_INTEGER LastChangeTime;ULONG ulFileSizeVersion;FILE_LOCK FileLock;union {_LOWIO_PER_FCB_INFO __anonymous2;LOWIO_PER_FCB_INFO LowIoPerFcbInfo;};ULONG EaModificationCount;FCB_BUFFERED_LOCKS BufferedLocks;ULONG FcbAcquires[4];ULONG FcbReleases[4];PCHAR PagingIoResourceFile;ULONG PagingIoResourceLine;};
struct _DMA_OPERATIONS {ULONG Size;PPUT_DMA_ADAPTER PutDmaAdapter;PALLOCATE_COMMON_BUFFER AllocateCommonBuffer;PFREE_COMMON_BUFFER FreeCommonBuffer;PALLOCATE_ADAPTER_CHANNEL AllocateAdapterChannel;PFLUSH_ADAPTER_BUFFERS FlushAdapterBuffers;PFREE_ADAPTER_CHANNEL FreeAdapterChannel;PFREE_MAP_REGISTERS FreeMapRegisters;PMAP_TRANSFER MapTransfer;PGET_DMA_ALIGNMENT GetDmaAlignment;PREAD_DMA_COUNTER ReadDmaCounter;PGET_SCATTER_GATHER_LIST GetScatterGatherList;PPUT_SCATTER_GATHER_LIST PutScatterGatherList;PCALCULATE_SCATTER_GATHER_LIST_SIZE CalculateScatterGatherList;PBUILD_SCATTER_GATHER_LIST BuildScatterGatherList;PBUILD_MDL_FROM_SCATTER_GATHER_LIST BuildMdlFromScatterGatherList;PGET_DMA_ADAPTER_INFO GetDmaAdapterInfo;PGET_DMA_TRANSFER_INFO GetDmaTransferInfo;PINITIALIZE_DMA_TRANSFER_CONTEXT InitializeDmaTransferContext;PALLOCATE_COMMON_BUFFER_EX AllocateCommonBufferEx;PALLOCATE_ADAPTER_CHANNEL_EX AllocateAdapterChannelEx;PCONFIGURE_ADAPTER_CHANNEL ConfigureAdapterChannel;PCANCEL_ADAPTER_CHANNEL CancelAdapterChannel;PMAP_TRANSFER_EX MapTransferEx;PGET_SCATTER_GATHER_LIST_EX GetScatterGatherListEx;PBUILD_SCATTER_GATHER_LIST_EX BuildScatterGatherListEx;PFLUSH_ADAPTER_BUFFERS_EX FlushAdapterBuffersEx;PFREE_ADAPTER_OBJECT FreeAdapterObject;PCANCEL_MAPPED_TRANSFER CancelMappedTransfer;};
union _FLT_PARAMETERS {struct _FLT_PARAMETERS___7563D854AF0F8A29D547365163A901D2 Create;struct _FLT_PARAMETERS___3145899A9181DB98718ECB838F857ECE CreatePipe;struct _FLT_PARAMETERS___3145899A9181DB98718ECB838F857ECE CreateMailslot;struct _FLT_PARAMETERS___7BF83C65B01BCAEC150BF48E3913102E Read;struct _FLT_PARAMETERS___546594058FF7FFDC9D8C0D4E10864DA8 Write;struct _FLT_PARAMETERS___E62B83C9A059D9549228C87BE00B0E32 QueryFileInformation;struct _FLT_PARAMETERS___28FCA4D722CF4A97784C865BFD6B2B2D SetFileInformation;struct _FLT_PARAMETERS___F67E610FB32023731ED0EF1EC94F13C4 QueryEa;struct _FLT_PARAMETERS___AFAE931016418FD1718C58C39C98E785 SetEa;struct _FLT_PARAMETERS___19A603DC746060C8601748F5A450859F QueryVolumeInformation;struct _FLT_PARAMETERS___19A603DC746060C8601748F5A450859F SetVolumeInformation;union _FLT_PARAMETERS___62F7EA28BB98819E316BAB5058F18398 DirectoryControl;union _FLT_PARAMETERS___A607A611BC889567BEB7AD75B1874678 FileSystemControl;union _FLT_PARAMETERS___0CA7E0B4359B9476800F739247DCC917 DeviceIoControl;struct _FLT_PARAMETERS___68BF592B97A76A0B8F7EC116AE55EF21 LockControl;struct _FLT_PARAMETERS___4EA9DD3B1B7070BE9209D6B23D90C430 QuerySecurity;struct _FLT_PARAMETERS___E1830675726AC350ADD284B511E01E52 SetSecurity;struct _FLT_PARAMETERS___D24474CE3B68EBF89E5A61C71CBC75EE WMI;struct _FLT_PARAMETERS___683C3EE208A9575EF36144430C7EF9B0 QueryQuota;struct _FLT_PARAMETERS___5B587018489257566E3078D7CD7246AA SetQuota;union _FLT_PARAMETERS___2C3CC663FF6496AB86BFCF088E0D3E4D Pnp;struct _FLT_PARAMETERS___B5EF3880B5460E4FA7339BA4EC64CC87 AcquireForSectionSynchronization;struct _FLT_PARAMETERS___1BF1138F8D2DDD2E6462FEFA2C4F94BC AcquireForModifiedPageWriter;struct _FLT_PARAMETERS___236B69F1384B32B472ACEC4C285A943A ReleaseForModifiedPageWriter;struct _FLT_PARAMETERS___41B139D9CD7692782FB91B1F1DE88DB3 FastIoCheckIfPossible;struct _FLT_PARAMETERS___A8B5303DDD6CF49B21EB229EB6671508 NetworkQueryOpen;struct _FLT_PARAMETERS___1668572F00F17AE5B41FB3467E028768 MdlRead;struct _FLT_PARAMETERS___7CA8F3751773063710B131C149F5D66B MdlReadComplete;struct _FLT_PARAMETERS___1668572F00F17AE5B41FB3467E028768 PrepareMdlWrite;struct _FLT_PARAMETERS___F38300D51E9A4C5A1745047EEB093AA7 MdlWriteComplete;struct _FLT_PARAMETERS___3622164DF61772CECDB513BD2EB7BD64 MountVolume;struct _FLT_PARAMETERS___8B4F3F4C47B95A7D4CF340B7EF6275B0 Others;};
struct _DXGKRNL_INTERFACE {ULONG Size;ULONG Version;HANDLE DeviceHandle;DXGKCB_EVAL_ACPI_METHOD DxgkCbEvalAcpiMethod;DXGKCB_GET_DEVICE_INFORMATION DxgkCbGetDeviceInformation;DXGKCB_INDICATE_CHILD_STATUS DxgkCbIndicateChildStatus;DXGKCB_MAP_MEMORY DxgkCbMapMemory;DXGKCB_QUEUE_DPC DxgkCbQueueDpc;DXGKCB_QUERY_SERVICES DxgkCbQueryServices;DXGKCB_READ_DEVICE_SPACE DxgkCbReadDeviceSpace;DXGKCB_SYNCHRONIZE_EXECUTION DxgkCbSynchronizeExecution;DXGKCB_UNMAP_MEMORY DxgkCbUnmapMemory;DXGKCB_WRITE_DEVICE_SPACE DxgkCbWriteDeviceSpace;DXGKCB_IS_DEVICE_PRESENT DxgkCbIsDevicePresent;DXGKCB_GETHANDLEDATA DxgkCbGetHandleData;DXGKCB_GETHANDLEPARENT DxgkCbGetHandleParent;DXGKCB_ENUMHANDLECHILDREN DxgkCbEnumHandleChildren;DXGKCB_NOTIFY_INTERRUPT DxgkCbNotifyInterrupt;DXGKCB_NOTIFY_DPC DxgkCbNotifyDpc;DXGKCB_QUERYVIDPNINTERFACE DxgkCbQueryVidPnInterface;DXGKCB_QUERYMONITORINTERFACE DxgkCbQueryMonitorInterface;DXGKCB_GETCAPTUREADDRESS DxgkCbGetCaptureAddress;DXGKCB_LOG_ETW_EVENT DxgkCbLogEtwEvent;DXGKCB_EXCLUDE_ADAPTER_ACCESS DxgkCbExcludeAdapterAccess;DXGKCB_CREATECONTEXTALLOCATION DxgkCbCreateContextAllocation;DXGKCB_DESTROYCONTEXTALLOCATION DxgkCbDestroyContextAllocation;DXGKCB_SETPOWERCOMPONENTACTIVE DxgkCbSetPowerComponentActive;DXGKCB_SETPOWERCOMPONENTIDLE DxgkCbSetPowerComponentIdle;DXGKCB_ACQUIRE_POST_DISPLAY_OWNERSHIP DxgkCbAcquirePostDisplayOwnership;DXGKCB_POWERRUNTIMECONTROLREQUEST DxgkCbPowerRuntimeControlRequest;DXGKCB_SETPOWERCOMPONENTLATENCY DxgkCbSetPowerComponentLatency;DXGKCB_SETPOWERCOMPONENTRESIDENCY DxgkCbSetPowerComponentResidency;DXGKCB_COMPLETEFSTATETRANSITION DxgkCbCompleteFStateTransition;};
union _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E {struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___68F4161CE02EA63EA7D518C4FD2536A7 Create;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___AB42F48A787DC1F7A85A7D9222F9ECCF CreatePipe;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A966DB415F2680C4FACE19E6D9509309 CreateMailslot;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___D177823888D2499403AB088A16B8A5D6 Read;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___D177823888D2499403AB088A16B8A5D6 Write;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A9C83915A7FBD780C6C13045BCED6336 QueryDirectory;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A48AC67DA7BF2793E8D357C78FAF1030 NotifyDirectory;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___0B4B6594CAB5E465787267831231A11E QueryFile;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___01D776BE44431130AB476CFB6102BAD9 SetFile;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___70BA97A5E111D15A65F2B5969B1432E5 QueryEa;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___AFA69771633799B8FB97339D76F53EAE SetEa;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A0C1706FD51296A5870D577CA7F99003 QueryVolume;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A0C1706FD51296A5870D577CA7F99003 SetVolume;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E9AB88EACB9E2856AF9688A39BBEAD59 FileSystemControl;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___6B2C785D143F1FC8838B7561470E9FA8 LockControl;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___3EEFC530056981631A2136A7505B6E7C DeviceIoControl;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___F0865C6FA226E0A715609B3D711D72E6 QuerySecurity;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E1830675726AC350ADD284B511E01E52 SetSecurity;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___FA02ECF11A69AC1E6B191DC34CAEB912 MountVolume;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___FA02ECF11A69AC1E6B191DC34CAEB912 VerifyVolume;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___B2B4984C7002DD41520623255E2F9497 Scsi;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___525464D5DCAD8B8C6AA0F9E4B917EADA QueryQuota;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___AFA69771633799B8FB97339D76F53EAE SetQuota;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___670710264263D47AAED285B3D8DDF250 QueryDeviceRelations;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___7995DA36ED0214F9D006DCD5B47162D4 QueryInterface;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___6B11BC409C8BDB4C1D2CF8E6F83B383D DeviceCapabilities;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___E3C1BD80419791D70DF0170630DDCD15 FilterResourceRequirements;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___5886429FC15D5D9FBCD15B5B7E423A41 ReadWriteConfig;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___CAFA629F92AFE900ACAC7E5B47418F4C SetLock;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___03E399533941020534C84F7B69BA6C0D QueryId;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___7336F5CE809A28AD3CEF03AEB402B448 QueryDeviceText;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___41591AB00568573FD23A44C44B36D401 UsageNotification;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___B225BF4DA8BD0649341E73B822EE9BDC WaitWake;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___A3F11F7237E1D19F6A2E9E54FFFFB312 PowerSequence;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___0F8D78D040FF3560CA28CFD6A777B9AE Power;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___69C11E4E3904219D9A8207E8DBA8FECD StartDevice;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___D24474CE3B68EBF89E5A61C71CBC75EE WMI;struct _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E___15881024B0F660B7398AF4B4249A3A24 Others;};
struct _RX_CONTEXT {NODE_TYPE_CODE NodeTypeCode;NODE_BYTE_SIZE NodeByteSize;ULONG ReferenceCount;LIST_ENTRY ContextListEntry;UCHAR MajorFunction;UCHAR MinorFunction;BOOLEAN PendingReturned;BOOLEAN PostRequest;PDEVICE_OBJECT RealDevice;PIRP CurrentIrp;PIO_STACK_LOCATION CurrentIrpSp;PMRX_FCB pFcb;PMRX_FOBX pFobx;PMRX_SRV_OPEN pRelevantSrvOpen;PNON_PAGED_FCB NonPagedFcb;PRDBSS_DEVICE_OBJECT RxDeviceObject;PETHREAD OriginalThread;PETHREAD LastExecutionThread;PVOID LockManagerContext;PVOID RdbssDbgExtension;RX_SCAVENGER_ENTRY ScavengerEntry;ULONG SerialNumber;ULONG FobxSerialNumber;ULONG Flags;BOOLEAN FcbResourceAcquired;BOOLEAN FcbPagingIoResourceAcquired;UCHAR MustSucceedDescriptorNumber;union {struct {_RX_CONTEXT___6AFB99893DFF2673B7FC3EB4E39AD6BC __anonymous0;ULONG_PTR InformationToReturn;};IO_STATUS_BLOCK IoStatusBlock;};_RX_CONTEXT___026195C05D43F7BC9CC58BDC838286E9 __anonymous2;PVOID WriteOnlyOpenRetryContext;PMRX_CALLDOWN MRxCancelRoutine;PRX_DISPATCH ResumeRoutine;RX_WORK_QUEUE_ITEM WorkQueueItem;LIST_ENTRY OverflowListEntry;KEVENT SyncEvent;LIST_ENTRY BlockedOperations;PFAST_MUTEX BlockedOpsMutex;LIST_ENTRY RxContextSerializationQLinks;_RX_CONTEXT___5B7AEA49E590911F8F12743B7A0B9162 __anonymous3;union {struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___2E6E1237D89AC2CAB060B49770B2CA80 Create;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___4C13AF031D06E093FE52B506E8E4A77C QueryDirectory;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___7BC758282EA7540BD9403E898486B59E NotifyChangeDirectory;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___F6D510E582433D4D61984B32A02828F3 QueryEa;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___F0865C6FA226E0A715609B3D711D72E6 QuerySecurity;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___E1830675726AC350ADD284B511E01E52 SetSecurity;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___CFEAA99B9132A38F888FE454C8847D59 QueryQuota;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___AFA69771633799B8FB97339D76F53EAE SetQuota;struct _RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___3468237E04E6C07F1A666998C04EBABE DosVolumeFunction;_RX_CONTEXT___8823074617B4AF974D01AFC1FBE4CAC3___E92C6DBFB4AF914E88BD4C5D248FCB7C __anonymous4;LUID FsdUid;};PWCH AlsoCanonicalNameBuffer;PUNICODE_STRING LoudCompletionString;LONG AcquireReleaseFcbTrackerX;ULONG TrackerHistoryPointer;RX_FCBTRACKER_CALLINFO TrackerHistory[32];};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___CBF9A9E0C6D93C7BA38845A49CC9788E {union _CM_PARTIAL_RESOURCE_DESCRIPTOR______CBF9A9E0C6D93C7BA38845A49CC9788E___DE3CCB929DB832FEAC38EBA7195AFD95 u;};
typedef MINIPORT_ALLOCATE_SHARED_MEM_COMPLETE *MINIPORT_ALLOCATE_SHARED_MEM_COMPLETE_HANDLER;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_PORT_PROPERTY_PROFILE_CDN_LABEL;
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_PORT_PROPERTY_PROFILE_CDN_LABEL;
struct _NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO {_NDIS_IPSEC_OFFLOAD_V1_NET_BUFFER_LIST_INFO___0EF1D09A4F397BE02D46B23B93F431E3 __anonymous0;};
typedef MINIPORT_SYNCHRONIZE_MESSAGE_INTERRUPT *MINIPORT_SYNCHRONIZE_MSI_INTERRUPT_HANDLER;
typedef  D3DKMDT_VIDPN_PRESENT_PATH_INDEX IN_CONST_D3DKMDT_VIDPN_PRESENT_PATH_INDEX;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_PORT_PROPERTY_PROFILE_NAME;
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_PORT_PROPERTY_PROFILE_NAME;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_EXTENSION_FRIENDLYNAME;
typedef MINIPORT_DISABLE_INTERRUPT *MINIPORT_DISABLE_INTERRUPT_HANDLER;
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_EXTENSION_FRIENDLYNAME;
typedef MINIPORT_ENABLE_INTERRUPT *MINIPORT_ENABLE_INTERRUPT_HANDLER;
typedef FAST_IO_QUERY_NETWORK_OPEN_INFO *PFAST_IO_QUERY_NETWORK_OPEN_INFO;
typedef USB_BUSIFFN_ROOTHUB_INIT_NOTIFY *PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY;
struct _SecPkgCredentials_SSIProviderW {SEC_WCHAR *sProviderName;unsigned int ProviderInfoLength;char *ProviderInfo;};
typedef MINIPORT_REMOVE_DEVICE *MINIPORT_REMOVE_DEVICE_HANDLER;
typedef FAST_IO_RELEASE_FOR_MOD_WRITE *PFAST_IO_RELEASE_FOR_MOD_WRITE;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_PORT_FRIENDLYNAME;
struct _EXCEPTION_REGISTRATION_RECORD {struct _EXCEPTION_REGISTRATION_RECORD *Next;PEXCEPTION_ROUTINE Handler;};
struct _SecPkgContext_CredentialNameW {unsigned int CredentialType;SEC_WCHAR *sCredentialName;};
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_PORT_FRIENDLYNAME;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_NIC_FRIENDLYNAME;
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_NIC_FRIENDLYNAME;
typedef DXGKDDI_CONTROL_ETW_LOGGING *PDXGKDDI_CONTROL_ETW_LOGGING;
typedef FAST_IO_ACQUIRE_FOR_CCFLUSH *PFAST_IO_ACQUIRE_FOR_CCFLUSH;
typedef FAST_IO_RELEASE_FOR_CCFLUSH *PFAST_IO_RELEASE_FOR_CCFLUSH;
typedef CLFS_LOG_INFORMATION_CLASS **PPCLFS_LOG_INFORMATION_CLASS;
typedef PROCESSOR_CALLBACK_FUNCTION *PPROCESSOR_CALLBACK_FUNCTION;
typedef CLFS_LOG_INFORMATION_CLASS *PCLFS_LOG_INFORMATION_CLASS;
typedef DXGKDDI_QUERY_CHILD_STATUS *PDXGKDDI_QUERY_CHILD_STATUS;
typedef RTL_QUERY_REGISTRY_ROUTINE *PRTL_QUERY_REGISTRY_ROUTINE;
typedef API_SET_LOOKUP_HELPER_RTN *PAPI_SET_LOOKUP_HELPER_RTN;
typedef DXGKDDI_NOTIFY_ACPI_EVENT *PDXGKDDI_NOTIFY_ACPI_EVENT;
typedef DXGKDDI_CONTROLINTERRUPT *PDXGKDDI_CONTROLINTERRUPT;
typedef NDIS_IF_COUNTED_STRING *PNDIS_SWITCH_FRIENDLYNAME;
struct _SecPkgContext_AuthorityW {SEC_WCHAR *sAuthorityName;};
struct _SecPkgContext_ProtoInfoW {SEC_WCHAR *sProtocolName;unsigned int majorVersion;unsigned int minorVersion;};
struct _SecPkgCredentials_NamesW {SEC_WCHAR *sUserName;};
typedef MINIPORT_MESSAGE_INTERRUPT *MINIPORT_MSI_ISR_HANDLER;
typedef NDIS_IF_COUNTED_STRING NDIS_SWITCH_FRIENDLYNAME;
typedef DXGKDDI_SET_POWER_STATE *PDXGKDDI_SET_POWER_STATE;
typedef VIRTUAL_HW_FIND_ADAPTER *PVIRTUAL_HW_FIND_ADAPTER;
typedef ACPI_OP_REGION_HANDLER *PACPI_OP_REGION_HANDLER;
typedef DRIVER_FS_NOTIFICATION *PDRIVER_FS_NOTIFICATION;
struct _SecPkgContext_KeyInfoW {SEC_WCHAR *sSignatureAlgorithmName;SEC_WCHAR *sEncryptAlgorithmName;unsigned int KeySize;unsigned int SignatureAlgorithm;unsigned int EncryptAlgorithm;};
typedef MINIPORT_RESET *MINIPORT_RESET_HANDLER;
typedef GET_D3COLD_CAPABILITY *PGET_D3COLD_CAPABILITY;
typedef FILTER_DETACH *FILTER_DETACH_HANDLER;
typedef DXGKDDI_RESET_DEVICE *PDXGKDDI_RESET_DEVICE;
typedef DXGKDDI_START_DEVICE *PDXGKDDI_START_DEVICE;
struct _SEC_NEGOTIATION_INFO {unsigned int Size;unsigned int NameLength;SEC_WCHAR *Name;void *Reserved;};
struct _SecPkgContext_NamesW {SEC_WCHAR *sUserName;};
typedef MINIPORT_ISR *MINIPORT_ISR_HANDLER;
typedef DXGKDDI_DPC_ROUTINE *PDXGKDDI_DPC_ROUTINE;
typedef ENTER_STATE_HANDLER *PENTER_STATE_HANDLER;
typedef IO_CSQ_ACQUIRE_LOCK *PIO_CSQ_ACQUIRE_LOCK;
typedef PCI_MSIX_GET_ENTRY *PPCI_MSIX_GET_ENTRY;
typedef DRIVER_ADD_DEVICE *PDRIVER_ADD_DEVICE;
typedef IO_CSQ_INSERT_IRP *PIO_CSQ_INSERT_IRP;
struct _DEVICE_MEDIA_INFO {union _DEVICE_MEDIA_INFO___07A2EEBD6335B5E7167E9536B64D372C DeviceSpecific;};
struct _KSPIN_LOCK_QUEUE {struct _KSPIN_LOCK_QUEUE *Next;PKSPIN_LOCK Lock;};
typedef DRIVER_DISPATCH *PDRIVER_DISPATCH;
typedef HW_FIND_ADAPTER *PHW_FIND_ADAPTER;
typedef PKSPIN_LOCK PRX_SPIN_LOCK;
struct _SecPkgInfoW {unsigned int fCapabilities;unsigned short wVersion;unsigned short wRPCID;unsigned int cbMaxToken;SEC_WCHAR *Name;SEC_WCHAR *Comment;};
struct _XSTATE_SAVE {_XSTATE_SAVE___18201E4AFA8D7B47D67A178F8DC66E77 __anonymous0;};
typedef  PWSTR *PCZPWSTR;
typedef PCWSTR *PZPCWSTR;
typedef PZPSTR PZPTSTR;
typedef PWSTR *PZPWSTR;
struct _BRB {_BRB___B3989489D001C29E299AADF382160F96 __anonymous0;};
struct _URB {_URB___9B418D10B4EEB83522B3D8F0EA3C0682 __anonymous0;};
struct _TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529___C026F1E43655E7E3D6874DD97C3C1DD0 {TDI_ADD_ADDRESS_HANDLER_V2 AddAddressHandlerV2;TDI_DEL_ADDRESS_HANDLER_V2 DelAddressHandlerV2;};
union _TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529 {_TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529___C026F1E43655E7E3D6874DD97C3C1DD0 __anonymous0;_TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529___DCDD09C3FB597D7805CC66AAC35A1C26 __anonymous1;};
union _TDI20_CLIENT_INTERFACE_INFO___DBFFC609AC9C9DF31CC2C895F8D48A3C {TDI_BINDING_HANDLER BindingHandler;_TDI20_CLIENT_INTERFACE_INFO___DBFFC609AC9C9DF31CC2C895F8D48A3C___9BA10B872D58EA52358D8BF594A45CC2 __anonymous0;};
union _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93 {struct _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93___AFF04DDE3F02527F7CD33F31B475CA02 s;union _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93___D43038B1DD00167268319662DF7D50CE u4;};
union _DSM_INIT_DATA___7B796C68D8CF5529D47BAB86970BEFFB {DSM_INTERPRET_ERROR DsmInterpretError;DSM_INTERPRET_ERROR_EX DsmInterpretErrorEx;};
union _NET_ROOT___340FAF2C1DA1218AC74455EBD02C5C0A {_NET_ROOT __anonymous0;_NET_ROOT___340FAF2C1DA1218AC74455EBD02C5C0A___4CB3A38A6DD30C9447592C75F663798A __anonymous5;};
struct _HID_INTERFACE_HIDPARSE {_HID_INTERFACE_NOTIFY_PNP __anonymous0;PHIDP_GETCAPS HidpGetCaps;};
struct _RX_WORK_QUEUE_ITEM_ {_WORK_QUEUE_ITEM __anonymous0;PRDBSS_DEVICE_OBJECT pDeviceObject;};
struct _ACPI_SRAT_ENTRY {UCHAR Type;UCHAR Length;union _ACPI_SRAT_ENTRY___24362B61B9286B6507278CC4397EC2AE u;};
struct _INTERFACE_INFO {ULONG iiFlags;sockaddr_gen iiAddress;sockaddr_gen iiBroadcastAddress;sockaddr_gen iiNetmask;};
struct _RDBSS_EXPORTS {PRX_SPIN_LOCK pRxStrucSupSpinLock;PLONG pRxDebugTraceIndent;};
struct _DXGKARGCB_NOTIFY_INTERRUPT_DATA {DXGK_INTERRUPT_TYPE InterruptType;_DXGKARGCB_NOTIFY_INTERRUPT_DATA___DC1111E3840B8894B88F6A2E5A7B95B2 __anonymous0;DXGKCB_NOTIFY_INTERRUPT_DATA_FLAGS Flags;};
struct _DISPATCHER_HEADER {union _DISPATCHER_HEADER___E00C5AF890A73B184CAC0211BA629F93 u;LONG SignalState;LIST_ENTRY WaitListHead;};
struct _DRIVER_EXTENSION {struct _DRIVER_OBJECT *DriverObject;PDRIVER_ADD_DEVICE AddDevice;ULONG Count;UNICODE_STRING ServiceKeyName;};
struct _0B037F2534779A05E9AEAE9A3A29D997 {PDRIVER_DISPATCH DeviceIoControl;PDRIVER_DISPATCH Read;PDRIVER_DISPATCH Write;PDRIVER_DISPATCH Flush;PDRIVER_DISPATCH Close;PDRIVER_DISPATCH QuerySecurity;PDRIVER_DISPATCH SetSecurity;PFAST_IO_DEVICE_CONTROL FastDeviceIoControl;PFAST_IO_READ FastRead;PFAST_IO_WRITE FastWrite;};
struct _CLAIM_SECURITY_ATTRIBUTE_V1 {PWSTR Name;USHORT ValueType;USHORT Reserved;ULONG Flags;ULONG ValueCount;union _CLAIM_SECURITY_ATTRIBUTE_V1___250FC43820722680DFCAB37A6DA5659E Values;};
struct _DXGKARG_BUILDPAGINGBUFFER {void *pDmaBuffer;UINT DmaSize;void *pDmaBufferPrivateData;UINT DmaBufferPrivateDataSize;DXGK_BUILDPAGINGBUFFER_OPERATION Operation;UINT MultipassOffset;_DXGKARG_BUILDPAGINGBUFFER___B7C2F0CDF2812B7388C3512D41B3BD7A __anonymous0;HANDLE hSystemContext;};
struct _INTERNAL_I8042_HOOK_MOUSE {PVOID Context;PI8042_MOUSE_ISR IsrRoutine;PI8042_ISR_WRITE_PORT IsrWritePort;PI8042_QUEUE_PACKET QueueMousePacket;PVOID CallContext;};
struct _RTL_QUERY_REGISTRY_TABLE {PRTL_QUERY_REGISTRY_ROUTINE QueryRoutine;ULONG Flags;PWSTR Name;PVOID EntryContext;ULONG DefaultType;PVOID DefaultData;ULONG DefaultLength;};
struct _NDIS_SG_DMA_DESCRIPTION {NDIS_OBJECT_HEADER Header;ULONG Flags;ULONG MaximumPhysicalMapping;MINIPORT_PROCESS_SG_LIST_HANDLER ProcessSGListHandler;MINIPORT_ALLOCATE_SHARED_MEM_COMPLETE_HANDLER SharedMemAllocateCompleteHandler;ULONG ScatterGatherListSize;};
struct _MRX_NAME_CACHE_ {_MRX_NET_ROOT_ __anonymous0;ULONG Context;PVOID ContextExtension;NTSTATUS PriorStatus;};
typedef NTSTATUS ( *DXGKDDI_VIDPNTOPOLOGY_ENUMPATHTARGETSFROMSOURCE)(IN_CONST_D3DKMDT_HVIDPNTOPOLOGY hVidPnTopology, IN_CONST_D3DDDI_VIDEO_PRESENT_SOURCE_ID VidPnSourceId, IN_CONST_D3DKMDT_VIDPN_PRESENT_PATH_INDEX VidPnPresentPathIndex, OUT_PD3DDDI_VIDEO_PRESENT_TARGET_ID pVidPnTargetId);
struct _4B6917C7FECE298C62988A6425F6625F {POWER_STATE_HANDLER_TYPE Type;BOOLEAN RtcWake;UCHAR Spare[3];PENTER_STATE_HANDLER Handler;PVOID Context;};
struct _8F4AC9317002A11552A6341450417F12 {PDRIVER_DISPATCH Create;PVOID Context;UNICODE_STRING ObjectClass;PSECURITY_DESCRIPTOR SecurityDescriptor;ULONG Flags;};
struct _INTERNAL_I8042_HOOK_KEYBOARD {PVOID Context;PI8042_KEYBOARD_INITIALIZATION_ROUTINE InitializationRoutine;PI8042_KEYBOARD_ISR IsrRoutine;PI8042_ISR_WRITE_PORT IsrWritePort;PI8042_QUEUE_PACKET QueueKeyboardPacket;PVOID CallContext;};
struct _NDIS_MINIPORT_PNP_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;MINIPORT_ADD_DEVICE_HANDLER MiniportAddDeviceHandler;MINIPORT_REMOVE_DEVICE_HANDLER MiniportRemoveDeviceHandler;MINIPORT_FILTER_RESOURCE_REQUIREMENTS_HANDLER MiniportFilterResourceRequirementsHandler;MINIPORT_START_DEVICE_HANDLER MiniportStartDeviceHandler;ULONG Flags;};
struct _NDIS_DEVICE_OBJECT_ATTRIBUTES {NDIS_OBJECT_HEADER Header;PNDIS_STRING DeviceName;PNDIS_STRING SymbolicName;PDRIVER_DISPATCH *MajorFunctions;ULONG ExtensionSize;PCUNICODE_STRING DefaultSDDLString;LPCGUID DeviceClassGuid;};
struct _IO_STACK_LOCATION {UCHAR MajorFunction;UCHAR MinorFunction;UCHAR Flags;UCHAR Control;union _IO_STACK_LOCATION___74091E8F4A51C5033A65A05F854BC95E Parameters;PDEVICE_OBJECT DeviceObject;PFILE_OBJECT FileObject;PIO_COMPLETION_ROUTINE CompletionRoutine;PVOID Context;};
struct _MRX_FOBX_ {_MRX_NAME_CACHE_ __anonymous0;PMRX_SRV_OPEN pSrvOpen;PFILE_OBJECT AssociatedFileObject;PVOID Context;PVOID Context2;ULONG Flags;union {_MRX_FOBX____383A86132F0018DAD323C741CB139F27___1AD73BDAAE097FB53141F860CE77F2CB __anonymous11;PMRX_PIPE_HANDLE_INFORMATION PipeHandleInformation;};ULONG OffsetOfNextEaToReturn;};
struct _PCI_MSIX_TABLE_CONFIG_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PPCI_MSIX_SET_ENTRY SetTableEntry;PPCI_MSIX_MASKUNMASK_ENTRY MaskTableEntry;PPCI_MSIX_MASKUNMASK_ENTRY UnmaskTableEntry;PPCI_MSIX_GET_ENTRY GetTableEntry;PPCI_MSIX_GET_TABLE_SIZE GetTableSize;};
struct _TDI20_CLIENT_INTERFACE_INFO {_TDI20_CLIENT_INTERFACE_INFO___17090AB1AC76E3F51FDFECA895B54C88 __anonymous0;USHORT Unused;PUNICODE_STRING ClientName;TDI_PNP_POWER_HANDLER PnPPowerHandler;union {TDI_BINDING_HANDLER BindingHandler;_TDI20_CLIENT_INTERFACE_INFO___DBFFC609AC9C9DF31CC2C895F8D48A3C___9BA10B872D58EA52358D8BF594A45CC2 __anonymous3;};union {_TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529___C026F1E43655E7E3D6874DD97C3C1DD0 __anonymous4;_TDI20_CLIENT_INTERFACE_INFO___2AAC85EA3FAFF8406DE500BB1FA54529___DCDD09C3FB597D7805CC66AAC35A1C26 __anonymous5;};};
struct _D3COLD_SUPPORT_INTERFACE {USHORT Size;USHORT Version;PVOID Context;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PSET_D3COLD_SUPPORT SetD3ColdSupport;PGET_IDLE_WAKE_INFO GetIdleWakeInfo;PGET_D3COLD_CAPABILITY GetD3ColdCapability;PGET_D3COLD_CAPABILITY GetBusDriverD3ColdSupport;PGET_D3COLD_LAST_TRANSITION_STATUS GetLastTransitionStatus;};
struct _CLASS_DRIVER_EXTENSION {UNICODE_STRING RegistryPath;CLASS_INIT_DATA InitData;ULONG DeviceCount;PCLASS_QUERY_WMI_REGINFO_EX ClassFdoQueryWmiRegInfoEx;PCLASS_QUERY_WMI_REGINFO_EX ClassPdoQueryWmiRegInfoEx;REGHANDLE EtwHandle;PDRIVER_DISPATCH DeviceMajorFunctionTable[28];PDRIVER_DISPATCH MpDeviceMajorFunctionTable[28];PCLASS_INTERPRET_SENSE_INFO2 InterpretSenseInfo;PCLASS_WORKING_SET WorkingSet;ULONG SrbSupport;};
struct _IO_CSQ {ULONG Type;PIO_CSQ_INSERT_IRP CsqInsertIrp;PIO_CSQ_REMOVE_IRP CsqRemoveIrp;PIO_CSQ_PEEK_NEXT_IRP CsqPeekNextIrp;PIO_CSQ_ACQUIRE_LOCK CsqAcquireLock;PIO_CSQ_RELEASE_LOCK CsqReleaseLock;PIO_CSQ_COMPLETE_CANCELED_IRP CsqCompleteCanceledIrp;PVOID ReservePointer;};
union _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16 {struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___BBBCA153A119060DF311607C16E36BB2 Generic;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___BBBCA153A119060DF311607C16E36BB2 Port;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___BB7094CF39B58C60385FAAA7DFEE1197 Interrupt;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___CBF9A9E0C6D93C7BA38845A49CC9788E MessageInterrupt;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___BBBCA153A119060DF311607C16E36BB2 Memory;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___1F3D6AF14FC8FA95287DDF447D6BE47F Dma;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___0FE99879202BD133F2D64F545464A292 DmaV3;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___812F79A5FC2BE6FE62CE9F41854F4845 DevicePrivate;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___D2EE30319AFD96435F4334D8E12C7935 BusNumber;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___6BF00F84A5C727E3B25245E9FBDFB278 DeviceSpecificData;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___EB36DC85652755C8EC8C69A205B736DB Memory40;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___08205AB7C2167E8C9C2BF0274334A928 Memory48;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___05881B79B3CAFBFC2EAF6FE4C8FAB51F Memory64;struct _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16___ACFC0B8B00258A4187B421B4FDF1B18A Connection;};
struct _NDIS_MINIPORT_INTERRUPT_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;MINIPORT_ISR_HANDLER InterruptHandler;MINIPORT_INTERRUPT_DPC_HANDLER InterruptDpcHandler;MINIPORT_DISABLE_INTERRUPT_HANDLER DisableInterruptHandler;MINIPORT_ENABLE_INTERRUPT_HANDLER EnableInterruptHandler;BOOLEAN MsiSupported;BOOLEAN MsiSyncWithAllMessages;MINIPORT_MSI_ISR_HANDLER MessageInterruptHandler;MINIPORT_MSI_INTERRUPT_DPC_HANDLER MessageInterruptDpcHandler;MINIPORT_DISABLE_MSI_INTERRUPT_HANDLER DisableMessageInterruptHandler;MINIPORT_ENABLE_MSI_INTERRUPT_HANDLER EnableMessageInterruptHandler;NDIS_INTERRUPT_TYPE InterruptType;PIO_INTERRUPT_MESSAGE_INFO MessageInfoTable;};
struct _DXGK_VIDPNTOPOLOGY_INTERFACE {DXGKDDI_VIDPNTOPOLOGY_GETNUMPATHS pfnGetNumPaths;DXGKDDI_VIDPNTOPOLOGY_GETNUMPATHSFROMSOURCE pfnGetNumPathsFromSource;DXGKDDI_VIDPNTOPOLOGY_ENUMPATHTARGETSFROMSOURCE pfnEnumPathTargetsFromSource;DXGKDDI_VIDPNTOPOLOGY_GETPATHSOURCEFROMTARGET pfnGetPathSourceFromTarget;DXGKDDI_VIDPNTOPOLOGY_ACQUIREPATHINFO pfnAcquirePathInfo;DXGKDDI_VIDPNTOPOLOGY_ACQUIREFIRSTPATHINFO pfnAcquireFirstPathInfo;DXGKDDI_VIDPNTOPOLOGY_ACQUIRENEXTPATHINFO pfnAcquireNextPathInfo;DXGKDDI_VIDPNTOPOLOGY_UPDATEPATHSUPPORTINFO pfnUpdatePathSupportInfo;DXGKDDI_VIDPNTOPOLOGY_RELEASEPATHINFO pfnReleasePathInfo;DXGKDDI_VIDPNTOPOLOGY_CREATENEWPATHINFO pfnCreateNewPathInfo;DXGKDDI_VIDPNTOPOLOGY_ADDPATH pfnAddPath;DXGKDDI_VIDPNTOPOLOGY_REMOVEPATH pfnRemovePath;};
struct _DRIVER_OBJECT {CSHORT Type;CSHORT Size;PDEVICE_OBJECT DeviceObject;ULONG Flags;PVOID DriverStart;ULONG DriverSize;PVOID DriverSection;PDRIVER_EXTENSION DriverExtension;UNICODE_STRING DriverName;PUNICODE_STRING HardwareDatabase;PFAST_IO_DISPATCH FastIoDispatch;PDRIVER_INITIALIZE DriverInit;PDRIVER_STARTIO DriverStartIo;PDRIVER_UNLOAD DriverUnload;PDRIVER_DISPATCH MajorFunction[28];};
struct _USB_BUS_INTERFACE_HUB_V3 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;};
struct _USB_BUS_INTERFACE_HUB_V4 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;PUSB_BUSIFFN_FLUSH_TRANSFERS FlushTransfers;};
struct _NDIS_MINIPORT_DRIVER_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;UCHAR MajorNdisVersion;UCHAR MinorNdisVersion;UCHAR MajorDriverVersion;UCHAR MinorDriverVersion;ULONG Flags;SET_OPTIONS_HANDLER SetOptionsHandler;MINIPORT_INITIALIZE_HANDLER InitializeHandlerEx;MINIPORT_HALT_HANDLER HaltHandlerEx;MINIPORT_DRIVER_UNLOAD UnloadHandler;MINIPORT_PAUSE_HANDLER PauseHandler;MINIPORT_RESTART_HANDLER RestartHandler;MINIPORT_OID_REQUEST_HANDLER OidRequestHandler;MINIPORT_SEND_NET_BUFFER_LISTS_HANDLER SendNetBufferListsHandler;MINIPORT_RETURN_NET_BUFFER_LISTS_HANDLER ReturnNetBufferListsHandler;MINIPORT_CANCEL_SEND_HANDLER CancelSendHandler;MINIPORT_CHECK_FOR_HANG_HANDLER CheckForHangHandlerEx;MINIPORT_RESET_HANDLER ResetHandlerEx;MINIPORT_DEVICE_PNP_EVENT_NOTIFY_HANDLER DevicePnPEventNotifyHandler;MINIPORT_SHUTDOWN_HANDLER ShutdownHandlerEx;MINIPORT_CANCEL_OID_REQUEST_HANDLER CancelOidRequestHandler;MINIPORT_DIRECT_OID_REQUEST_HANDLER DirectOidRequestHandler;MINIPORT_CANCEL_DIRECT_OID_REQUEST_HANDLER CancelDirectOidRequestHandler;};
struct _USB_BUS_INTERFACE_HUB_V5 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;PUSB_BUSIFFN_FLUSH_TRANSFERS FlushTransfers;PUSB_BUSIFFN_SET_DEVHANDLE_DATA SetDeviceHandleData;};
struct _COMMON_DEVICE_EXTENSION {ULONG Version;PDEVICE_OBJECT DeviceObject;PDEVICE_OBJECT LowerDeviceObject;PFUNCTIONAL_DEVICE_EXTENSION PartitionZeroExtension;PCLASS_DRIVER_EXTENSION DriverExtension;LONG RemoveLock;KEVENT RemoveEvent;KSPIN_LOCK RemoveTrackingSpinlock;PVOID RemoveTrackingList;LONG RemoveTrackingUntrackedCount;PVOID DriverData;_COMMON_DEVICE_EXTENSION___CB28ED112FDC3525E02BE69D95E78DC7 __anonymous0;UCHAR PreviousState;UCHAR CurrentState;ULONG IsRemoved;UNICODE_STRING DeviceName;PPHYSICAL_DEVICE_EXTENSION ChildList;ULONG PartitionNumber;LARGE_INTEGER PartitionLength;LARGE_INTEGER StartingOffset;PCLASS_DEV_INFO DevInfo;ULONG PagingPathCount;ULONG DumpPathCount;ULONG HibernationPathCount;KEVENT PathCountEvent;NPAGED_LOOKASIDE_LIST SrbLookasideList;UNICODE_STRING MountedDeviceInterfaceName;ULONG GuidCount;PGUIDREGINFO GuidRegInfo;DICTIONARY FileObjectDictionary;PCLASS_PRIVATE_COMMON_DATA PrivateCommonData;PDRIVER_DISPATCH *DispatchTable;ULONG_PTR Reserved3;ULONG_PTR Reserved4;};
struct _VIRTUAL_HW_INITIALIZATION_DATA {ULONG HwInitializationDataSize;INTERFACE_TYPE AdapterInterfaceType;PHW_INITIALIZE HwInitialize;PHW_STARTIO HwStartIo;PHW_INTERRUPT HwInterrupt;PVIRTUAL_HW_FIND_ADAPTER HwFindAdapter;PHW_RESET_BUS HwResetBus;PHW_DMA_STARTED HwDmaStarted;PHW_ADAPTER_STATE HwAdapterState;ULONG DeviceExtensionSize;ULONG SpecificLuExtensionSize;ULONG SrbExtensionSize;ULONG NumberOfAccessRanges;PVOID Reserved;UCHAR MapBuffers;BOOLEAN NeedPhysicalAddresses;BOOLEAN TaggedQueuing;BOOLEAN AutoRequestSense;BOOLEAN MultipleRequestPerLu;BOOLEAN ReceiveEvent;USHORT VendorIdLength;PVOID VendorId;_HW_INITIALIZATION_DATA___0FF088419D5CE492B61F851A1D5DBD89 __anonymous0;USHORT DeviceIdLength;PVOID DeviceId;PHW_ADAPTER_CONTROL HwAdapterControl;PHW_BUILDIO HwBuildIo;PHW_FREE_ADAPTER_RESOURCES HwFreeAdapterResources;PHW_PROCESS_SERVICE_REQUEST HwProcessServiceRequest;PHW_COMPLETE_SERVICE_IRP HwCompleteServiceIrp;PHW_INITIALIZE_TRACING HwInitializeTracing;PHW_CLEANUP_TRACING HwCleanupTracing;};
struct _NDIS_FILTER_DRIVER_CHARACTERISTICS {NDIS_OBJECT_HEADER Header;UCHAR MajorNdisVersion;UCHAR MinorNdisVersion;UCHAR MajorDriverVersion;UCHAR MinorDriverVersion;ULONG Flags;NDIS_STRING FriendlyName;NDIS_STRING UniqueName;NDIS_STRING ServiceName;SET_OPTIONS_HANDLER SetOptionsHandler;FILTER_SET_FILTER_MODULE_OPTIONS_HANDLER SetFilterModuleOptionsHandler;FILTER_ATTACH_HANDLER AttachHandler;FILTER_DETACH_HANDLER DetachHandler;FILTER_RESTART_HANDLER RestartHandler;FILTER_PAUSE_HANDLER PauseHandler;FILTER_SEND_NET_BUFFER_LISTS_HANDLER SendNetBufferListsHandler;FILTER_SEND_NET_BUFFER_LISTS_COMPLETE_HANDLER SendNetBufferListsCompleteHandler;FILTER_CANCEL_SEND_HANDLER CancelSendNetBufferListsHandler;FILTER_RECEIVE_NET_BUFFER_LISTS_HANDLER ReceiveNetBufferListsHandler;FILTER_RETURN_NET_BUFFER_LISTS_HANDLER ReturnNetBufferListsHandler;FILTER_OID_REQUEST_HANDLER OidRequestHandler;FILTER_OID_REQUEST_COMPLETE_HANDLER OidRequestCompleteHandler;FILTER_CANCEL_OID_REQUEST_HANDLER CancelOidRequestHandler;FILTER_DEVICE_PNP_EVENT_NOTIFY_HANDLER DevicePnPEventNotifyHandler;FILTER_NET_PNP_EVENT_HANDLER NetPnPEventHandler;FILTER_STATUS_HANDLER StatusHandler;FILTER_DIRECT_OID_REQUEST_HANDLER DirectOidRequestHandler;FILTER_DIRECT_OID_REQUEST_COMPLETE_HANDLER DirectOidRequestCompleteHandler;FILTER_CANCEL_DIRECT_OID_REQUEST_HANDLER CancelDirectOidRequestHandler;};
struct _FAST_IO_DISPATCH {ULONG SizeOfFastIoDispatch;PFAST_IO_CHECK_IF_POSSIBLE FastIoCheckIfPossible;PFAST_IO_READ FastIoRead;PFAST_IO_WRITE FastIoWrite;PFAST_IO_QUERY_BASIC_INFO FastIoQueryBasicInfo;PFAST_IO_QUERY_STANDARD_INFO FastIoQueryStandardInfo;PFAST_IO_LOCK FastIoLock;PFAST_IO_UNLOCK_SINGLE FastIoUnlockSingle;PFAST_IO_UNLOCK_ALL FastIoUnlockAll;PFAST_IO_UNLOCK_ALL_BY_KEY FastIoUnlockAllByKey;PFAST_IO_DEVICE_CONTROL FastIoDeviceControl;PFAST_IO_ACQUIRE_FILE AcquireFileForNtCreateSection;PFAST_IO_RELEASE_FILE ReleaseFileForNtCreateSection;PFAST_IO_DETACH_DEVICE FastIoDetachDevice;PFAST_IO_QUERY_NETWORK_OPEN_INFO FastIoQueryNetworkOpenInfo;PFAST_IO_ACQUIRE_FOR_MOD_WRITE AcquireForModWrite;PFAST_IO_MDL_READ MdlRead;PFAST_IO_MDL_READ_COMPLETE MdlReadComplete;PFAST_IO_PREPARE_MDL_WRITE PrepareMdlWrite;PFAST_IO_MDL_WRITE_COMPLETE MdlWriteComplete;PFAST_IO_READ_COMPRESSED FastIoReadCompressed;PFAST_IO_WRITE_COMPRESSED FastIoWriteCompressed;PFAST_IO_MDL_READ_COMPLETE_COMPRESSED MdlReadCompleteCompressed;PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED MdlWriteCompleteCompressed;PFAST_IO_QUERY_OPEN FastIoQueryOpen;PFAST_IO_RELEASE_FOR_MOD_WRITE ReleaseForModWrite;PFAST_IO_ACQUIRE_FOR_CCFLUSH AcquireForCcFlush;PFAST_IO_RELEASE_FOR_CCFLUSH ReleaseForCcFlush;};
struct _DSM_INIT_DATA {ULONG InitDataSize;DSM_INQUIRE_DRIVER DsmInquireDriver;DSM_COMPARE_DEVICES DsmCompareDevices;DSM_DEVICE_SERIAL_NUMBER DsmDeviceSerialNumber;DSM_GET_CONTROLLER_INFO DsmGetControllerInfo;DSM_SET_DEVICE_INFO DsmSetDeviceInfo;DSM_IS_PATH_ACTIVE DsmIsPathActive;DSM_PATH_VERIFY DsmPathVerify;DSM_INVALIDATE_PATH DsmInvalidatePath;DSM_MOVE_DEVICE DsmMoveDevice;DSM_REMOVE_PENDING DsmRemovePending;DSM_REMOVE_DEVICE DsmRemoveDevice;DSM_REMOVE_PATH DsmRemovePath;DSM_SRB_DEVICE_CONTROL DsmSrbDeviceControl;DSM_LB_GET_PATH DsmLBGetPath;_DSM_INIT_DATA___7B796C68D8CF5529D47BAB86970BEFFB __anonymous0;DSM_UNLOAD DsmUnload;DSM_SET_COMPLETION DsmSetCompletion;DSM_CATEGORIZE_REQUEST DsmCategorizeRequest;DSM_BROADCAST_SRB DsmBroadcastSrb;DSM_WMILIB_CONTEXT DsmWmiInfo;PVOID DsmContext;PDRIVER_OBJECT DriverObject;UNICODE_STRING DisplayName;ULONG Reserved;DSM_TYPE DsmType;DSM_VERSION_INFO DsmVersion;DSM_WMILIB_CONTEXT DsmWmiGlobalInfo;DSM_ADDRESS_TYPE_SUPPORTED DsmIsAddressTypeSupported;DSM_DEVICE_NOT_USED DsmDeviceNotUsed;};
struct _USB_BUS_INTERFACE_HUB_V6 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE_EX CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE_EX InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;PUSB_BUSIFFN_FLUSH_TRANSFERS FlushTransfers;PUSB_BUSIFFN_SET_DEVHANDLE_DATA SetDeviceHandleData;PUSB_BUSIFFN_IS_ROOT HubIsRoot;PUSB_BUSIFFN_ACQUIRE_SEMAPHORE AcquireBusSemaphore;PUSB_BUSIFFN_RELEASE_SEMAPHORE ReleaseBusSemaphore;PUSB_BUSIFFN_CALC_PIPE_BANDWIDTH CaculatePipeBandwidth;PUSB_BUSIFFN_SET_BUS_WAKE_MODE SetBusSystemWakeMode;PUSB_BUSIFFN_SET_DEVICE_FLAG SetDeviceFlag;PUSB_BUSIFFN_TEST_POINT HubTestPoint;PUSB_BUSIFFN_GET_DEVICE_PERFORMANCE_INFO GetDevicePerformanceInfo;PUSB_BUSIFFN_WAIT_ASYNC_POWERUP WaitAsyncPowerUp;PUSB_BUSIFFN_GET_DEVICE_ADDRESS GetDeviceAddress;PUSB_BUSIFFN_REF_DEVICE_HANDLE RefDeviceHandle;PUSB_BUSIFFN_DEREF_DEVICE_HANDLE DerefDeviceHandle;PUSB_BUSIFFN_SET_DEVICE_HANDLE_IDLE_READY_STATE SetDeviceHandleIdleReadyState;};
struct _USB_BUS_INTERFACE_HUB_V7 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE_EX CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE_EX InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;PUSB_BUSIFFN_FLUSH_TRANSFERS FlushTransfers;PUSB_BUSIFFN_SET_DEVHANDLE_DATA SetDeviceHandleData;PUSB_BUSIFFN_IS_ROOT HubIsRoot;PUSB_BUSIFFN_ACQUIRE_SEMAPHORE AcquireBusSemaphore;PUSB_BUSIFFN_RELEASE_SEMAPHORE ReleaseBusSemaphore;PUSB_BUSIFFN_CALC_PIPE_BANDWIDTH CaculatePipeBandwidth;PUSB_BUSIFFN_SET_BUS_WAKE_MODE SetBusSystemWakeMode;PUSB_BUSIFFN_SET_DEVICE_FLAG SetDeviceFlag;PUSB_BUSIFFN_TEST_POINT HubTestPoint;PUSB_BUSIFFN_GET_DEVICE_PERFORMANCE_INFO GetDevicePerformanceInfo;PUSB_BUSIFFN_WAIT_ASYNC_POWERUP WaitAsyncPowerUp;PUSB_BUSIFFN_GET_DEVICE_ADDRESS GetDeviceAddress;PUSB_BUSIFFN_REF_DEVICE_HANDLE RefDeviceHandle;PUSB_BUSIFFN_DEREF_DEVICE_HANDLE DerefDeviceHandle;PUSB_BUSIFFN_SET_DEVICE_HANDLE_IDLE_READY_STATE SetDeviceHandleIdleReadyState;PUSB_BUSIFFN_CREATE_USB_DEVICE_V7 CreateUsbDeviceV7;PUSB_BUSIFFN_GET_CONTAINER_ID_FOR_PORT GetContainerIdForPort;PUSB_BUSIFFN_SET_CONTAINER_ID_FOR_PORT SetContainerIdForPort;PUSB_BUSIFFN_ABORT_ALL_DEVICE_PIPES AbortAllDevicePipes;PUSB_BUSIFFN_SET_DEVICE_ERRATA_FLAG SetDeviceErrataFlag;};
struct _USB_BUS_INTERFACE_HUB_V8 {USHORT Size;USHORT Version;PVOID BusContext;PINTERFACE_REFERENCE InterfaceReference;PINTERFACE_DEREFERENCE InterfaceDereference;PUSB_BUSIFFN_CREATE_USB_DEVICE_EX CreateUsbDevice;PUSB_BUSIFFN_INITIALIZE_USB_DEVICE_EX InitializeUsbDevice;PUSB_BUSIFFN_GET_USB_DESCRIPTORS GetUsbDescriptors;PUSB_BUSIFFN_REMOVE_USB_DEVICE RemoveUsbDevice;PUSB_BUSIFFN_RESTORE_DEVICE RestoreUsbDevice;PUSB_BUSIFFN_GET_POTRTHACK_FLAGS GetPortHackFlags;PUSB_BUSIFFN_GET_DEVICE_INFORMATION QueryDeviceInformation;PUSB_BUSIFFN_GET_CONTROLLER_INFORMATION GetControllerInformation;PUSB_BUSIFFN_CONTROLLER_SELECTIVE_SUSPEND ControllerSelectiveSuspend;PUSB_BUSIFFN_GET_EXTENDED_HUB_INFO GetExtendedHubInformation;PUSB_BUSIFFN_GET_ROOTHUB_SYM_NAME GetRootHubSymbolicName;PUSB_BUSIFFN_GET_DEVICE_BUSCONTEXT GetDeviceBusContext;PUSB_BUSIFFN_INITIALIZE_20HUB Initialize20Hub;PUSB_BUSIFFN_ROOTHUB_INIT_NOTIFY RootHubInitNotification;PUSB_BUSIFFN_FLUSH_TRANSFERS FlushTransfers;PUSB_BUSIFFN_SET_DEVHANDLE_DATA SetDeviceHandleData;PUSB_BUSIFFN_IS_ROOT HubIsRoot;PUSB_BUSIFFN_ACQUIRE_SEMAPHORE AcquireBusSemaphore;PUSB_BUSIFFN_RELEASE_SEMAPHORE ReleaseBusSemaphore;PUSB_BUSIFFN_CALC_PIPE_BANDWIDTH CaculatePipeBandwidth;PUSB_BUSIFFN_SET_BUS_WAKE_MODE SetBusSystemWakeMode;PUSB_BUSIFFN_SET_DEVICE_FLAG SetDeviceFlag;PUSB_BUSIFFN_TEST_POINT HubTestPoint;PUSB_BUSIFFN_GET_DEVICE_PERFORMANCE_INFO GetDevicePerformanceInfo;PUSB_BUSIFFN_WAIT_ASYNC_POWERUP WaitAsyncPowerUp;PUSB_BUSIFFN_GET_DEVICE_ADDRESS GetDeviceAddress;PUSB_BUSIFFN_REF_DEVICE_HANDLE RefDeviceHandle;PUSB_BUSIFFN_DEREF_DEVICE_HANDLE DerefDeviceHandle;PUSB_BUSIFFN_SET_DEVICE_HANDLE_IDLE_READY_STATE SetDeviceHandleIdleReadyState;PUSB_BUSIFFN_CREATE_USB_DEVICE_V7 CreateUsbDeviceV7;PUSB_BUSIFFN_GET_CONTAINER_ID_FOR_PORT GetContainerIdForPort;PUSB_BUSIFFN_SET_CONTAINER_ID_FOR_PORT SetContainerIdForPort;PUSB_BUSIFFN_ABORT_ALL_DEVICE_PIPES AbortAllDevicePipes;PUSB_BUSIFFN_SET_DEVICE_ERRATA_FLAG SetDeviceErrataFlag;PUSB_BUSIFFN_GET_DEBUG_PORT_NUMBER GetDebugPortNumber;};
struct _KMDDOD_INITIALIZATION_DATA {ULONG Version;PDXGKDDI_ADD_DEVICE DxgkDdiAddDevice;PDXGKDDI_START_DEVICE DxgkDdiStartDevice;PDXGKDDI_STOP_DEVICE DxgkDdiStopDevice;PDXGKDDI_REMOVE_DEVICE DxgkDdiRemoveDevice;PDXGKDDI_DISPATCH_IO_REQUEST DxgkDdiDispatchIoRequest;PDXGKDDI_INTERRUPT_ROUTINE DxgkDdiInterruptRoutine;PDXGKDDI_DPC_ROUTINE DxgkDdiDpcRoutine;PDXGKDDI_QUERY_CHILD_RELATIONS DxgkDdiQueryChildRelations;PDXGKDDI_QUERY_CHILD_STATUS DxgkDdiQueryChildStatus;PDXGKDDI_QUERY_DEVICE_DESCRIPTOR DxgkDdiQueryDeviceDescriptor;PDXGKDDI_SET_POWER_STATE DxgkDdiSetPowerState;PDXGKDDI_NOTIFY_ACPI_EVENT DxgkDdiNotifyAcpiEvent;PDXGKDDI_RESET_DEVICE DxgkDdiResetDevice;PDXGKDDI_UNLOAD DxgkDdiUnload;PDXGKDDI_QUERY_INTERFACE DxgkDdiQueryInterface;PDXGKDDI_CONTROL_ETW_LOGGING DxgkDdiControlEtwLogging;PDXGKDDI_QUERYADAPTERINFO DxgkDdiQueryAdapterInfo;PDXGKDDI_SETPALETTE DxgkDdiSetPalette;PDXGKDDI_SETPOINTERPOSITION DxgkDdiSetPointerPosition;PDXGKDDI_SETPOINTERSHAPE DxgkDdiSetPointerShape;PDXGKDDI_ESCAPE DxgkDdiEscape;PDXGKDDI_COLLECTDBGINFO DxgkDdiCollectDbgInfo;PDXGKDDI_ISSUPPORTEDVIDPN DxgkDdiIsSupportedVidPn;PDXGKDDI_RECOMMENDFUNCTIONALVIDPN DxgkDdiRecommendFunctionalVidPn;PDXGKDDI_ENUMVIDPNCOFUNCMODALITY DxgkDdiEnumVidPnCofuncModality;PDXGKDDI_SETVIDPNSOURCEVISIBILITY DxgkDdiSetVidPnSourceVisibility;PDXGKDDI_COMMITVIDPN DxgkDdiCommitVidPn;PDXGKDDI_UPDATEACTIVEVIDPNPRESENTPATH DxgkDdiUpdateActiveVidPnPresentPath;PDXGKDDI_RECOMMENDMONITORMODES DxgkDdiRecommendMonitorModes;PDXGKDDI_GETSCANLINE DxgkDdiGetScanLine;PDXGKDDI_QUERYVIDPNHWCAPABILITY DxgkDdiQueryVidPnHWCapability;PDXGKDDI_PRESENTDISPLAYONLY DxgkDdiPresentDisplayOnly;PDXGKDDI_STOP_DEVICE_AND_RELEASE_POST_DISPLAY_OWNERSHIP DxgkDdiStopDeviceAndReleasePostDisplayOwnership;PDXGKDDI_SYSTEM_DISPLAY_ENABLE DxgkDdiSystemDisplayEnable;PDXGKDDI_SYSTEM_DISPLAY_WRITE DxgkDdiSystemDisplayWrite;PDXGKDDI_GET_CHILD_CONTAINER_ID DxgkDdiGetChildContainerId;PDXGKDDI_CONTROLINTERRUPT DxgkDdiControlInterrupt;PDXGKDDISETPOWERCOMPONENTFSTATE DxgkDdiSetPowerComponentFState;PDXGKDDIPOWERRUNTIMECONTROLREQUEST DxgkDdiPowerRuntimeControlRequest;PDXGKDDI_NOTIFY_SURPRISE_REMOVAL DxgkDdiNotifySurpriseRemoval;};
struct _DRIVER_INITIALIZATION_DATA {ULONG Version;PDXGKDDI_ADD_DEVICE DxgkDdiAddDevice;PDXGKDDI_START_DEVICE DxgkDdiStartDevice;PDXGKDDI_STOP_DEVICE DxgkDdiStopDevice;PDXGKDDI_REMOVE_DEVICE DxgkDdiRemoveDevice;PDXGKDDI_DISPATCH_IO_REQUEST DxgkDdiDispatchIoRequest;PDXGKDDI_INTERRUPT_ROUTINE DxgkDdiInterruptRoutine;PDXGKDDI_DPC_ROUTINE DxgkDdiDpcRoutine;PDXGKDDI_QUERY_CHILD_RELATIONS DxgkDdiQueryChildRelations;PDXGKDDI_QUERY_CHILD_STATUS DxgkDdiQueryChildStatus;PDXGKDDI_QUERY_DEVICE_DESCRIPTOR DxgkDdiQueryDeviceDescriptor;PDXGKDDI_SET_POWER_STATE DxgkDdiSetPowerState;PDXGKDDI_NOTIFY_ACPI_EVENT DxgkDdiNotifyAcpiEvent;PDXGKDDI_RESET_DEVICE DxgkDdiResetDevice;PDXGKDDI_UNLOAD DxgkDdiUnload;PDXGKDDI_QUERY_INTERFACE DxgkDdiQueryInterface;PDXGKDDI_CONTROL_ETW_LOGGING DxgkDdiControlEtwLogging;PDXGKDDI_QUERYADAPTERINFO DxgkDdiQueryAdapterInfo;PDXGKDDI_CREATEDEVICE DxgkDdiCreateDevice;PDXGKDDI_CREATEALLOCATION DxgkDdiCreateAllocation;PDXGKDDI_DESTROYALLOCATION DxgkDdiDestroyAllocation;PDXGKDDI_DESCRIBEALLOCATION DxgkDdiDescribeAllocation;PDXGKDDI_GETSTANDARDALLOCATIONDRIVERDATA DxgkDdiGetStandardAllocationDriverData;PDXGKDDI_ACQUIRESWIZZLINGRANGE DxgkDdiAcquireSwizzlingRange;PDXGKDDI_RELEASESWIZZLINGRANGE DxgkDdiReleaseSwizzlingRange;PDXGKDDI_PATCH DxgkDdiPatch;PDXGKDDI_SUBMITCOMMAND DxgkDdiSubmitCommand;PDXGKDDI_PREEMPTCOMMAND DxgkDdiPreemptCommand;PDXGKDDI_BUILDPAGINGBUFFER DxgkDdiBuildPagingBuffer;PDXGKDDI_SETPALETTE DxgkDdiSetPalette;PDXGKDDI_SETPOINTERPOSITION DxgkDdiSetPointerPosition;PDXGKDDI_SETPOINTERSHAPE DxgkDdiSetPointerShape;PDXGKDDI_RESETFROMTIMEOUT DxgkDdiResetFromTimeout;PDXGKDDI_RESTARTFROMTIMEOUT DxgkDdiRestartFromTimeout;PDXGKDDI_ESCAPE DxgkDdiEscape;PDXGKDDI_COLLECTDBGINFO DxgkDdiCollectDbgInfo;PDXGKDDI_QUERYCURRENTFENCE DxgkDdiQueryCurrentFence;PDXGKDDI_ISSUPPORTEDVIDPN DxgkDdiIsSupportedVidPn;PDXGKDDI_RECOMMENDFUNCTIONALVIDPN DxgkDdiRecommendFunctionalVidPn;PDXGKDDI_ENUMVIDPNCOFUNCMODALITY DxgkDdiEnumVidPnCofuncModality;PDXGKDDI_SETVIDPNSOURCEADDRESS DxgkDdiSetVidPnSourceAddress;PDXGKDDI_SETVIDPNSOURCEVISIBILITY DxgkDdiSetVidPnSourceVisibility;PDXGKDDI_COMMITVIDPN DxgkDdiCommitVidPn;PDXGKDDI_UPDATEACTIVEVIDPNPRESENTPATH DxgkDdiUpdateActiveVidPnPresentPath;PDXGKDDI_RECOMMENDMONITORMODES DxgkDdiRecommendMonitorModes;PDXGKDDI_RECOMMENDVIDPNTOPOLOGY DxgkDdiRecommendVidPnTopology;PDXGKDDI_GETSCANLINE DxgkDdiGetScanLine;PDXGKDDI_STOPCAPTURE DxgkDdiStopCapture;PDXGKDDI_CONTROLINTERRUPT DxgkDdiControlInterrupt;PDXGKDDI_CREATEOVERLAY DxgkDdiCreateOverlay;PDXGKDDI_DESTROYDEVICE DxgkDdiDestroyDevice;PDXGKDDI_OPENALLOCATIONINFO DxgkDdiOpenAllocation;PDXGKDDI_CLOSEALLOCATION DxgkDdiCloseAllocation;PDXGKDDI_RENDER DxgkDdiRender;PDXGKDDI_PRESENT DxgkDdiPresent;PDXGKDDI_UPDATEOVERLAY DxgkDdiUpdateOverlay;PDXGKDDI_FLIPOVERLAY DxgkDdiFlipOverlay;PDXGKDDI_DESTROYOVERLAY DxgkDdiDestroyOverlay;PDXGKDDI_CREATECONTEXT DxgkDdiCreateContext;PDXGKDDI_DESTROYCONTEXT DxgkDdiDestroyContext;PDXGKDDI_LINK_DEVICE DxgkDdiLinkDevice;PDXGKDDI_SETDISPLAYPRIVATEDRIVERFORMAT DxgkDdiSetDisplayPrivateDriverFormat;PDXGKDDI_DESCRIBEPAGETABLE DxgkDdiDescribePageTable;PDXGKDDI_UPDATEPAGETABLE DxgkDdiUpdatePageTable;PDXGKDDI_UPDATEPAGEDIRECTORY DxgkDdiUpdatePageDirectory;PDXGKDDI_MOVEPAGEDIRECTORY DxgkDdiMovePageDirectory;PDXGKDDI_SUBMITRENDER DxgkDdiSubmitRender;PDXGKDDI_CREATEALLOCATION2 DxgkDdiCreateAllocation2;PDXGKDDI_RENDER DxgkDdiRenderKm;void *Reserved;PDXGKDDI_QUERYVIDPNHWCAPABILITY DxgkDdiQueryVidPnHWCapability;PDXGKDDISETPOWERCOMPONENTFSTATE DxgkDdiSetPowerComponentFState;PDXGKDDI_QUERYDEPENDENTENGINEGROUP DxgkDdiQueryDependentEngineGroup;PDXGKDDI_QUERYENGINESTATUS DxgkDdiQueryEngineStatus;PDXGKDDI_RESETENGINE DxgkDdiResetEngine;PDXGKDDI_STOP_DEVICE_AND_RELEASE_POST_DISPLAY_OWNERSHIP DxgkDdiStopDeviceAndReleasePostDisplayOwnership;PDXGKDDI_SYSTEM_DISPLAY_ENABLE DxgkDdiSystemDisplayEnable;PDXGKDDI_SYSTEM_DISPLAY_WRITE DxgkDdiSystemDisplayWrite;PDXGKDDI_CANCELCOMMAND DxgkDdiCancelCommand;PDXGKDDI_GET_CHILD_CONTAINER_ID DxgkDdiGetChildContainerId;PDXGKDDIPOWERRUNTIMECONTROLREQUEST DxgkDdiPowerRuntimeControlRequest;PDXGKDDI_SETVIDPNSOURCEADDRESSWITHMULTIPLANEOVERLAY DxgkDdiSetVidPnSourceAddressWithMultiPlaneOverlay;PDXGKDDI_NOTIFY_SURPRISE_REMOVAL DxgkDdiNotifySurpriseRemoval;};
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR {UCHAR Type;UCHAR ShareDisposition;USHORT Flags;union _CM_PARTIAL_RESOURCE_DESCRIPTOR___B9D0A44E18AF3770CA35E1257C7AAC16 u;};
union _FOBX___B95E32BA05695D37ADEEDE609BEA19EE {struct {_MRX_FOBX_ __anonymous0;PMRX_SRV_OPEN pSrvOpen;PFILE_OBJECT AssociatedFileObject;PVOID Context;PVOID Context2;ULONG Flags;union {_MRX_FOBX_ __anonymous12;PMRX_PIPE_HANDLE_INFORMATION PipeHandleInformation;};ULONG OffsetOfNextEaToReturn;};_FOBX___B95E32BA05695D37ADEEDE609BEA19EE___154C6638EF194F9A81AE81169DF8572C __anonymous14;};
struct _FOBX {union {struct {_MRX_FOBX_ __anonymous0;PMRX_SRV_OPEN pSrvOpen;PFILE_OBJECT AssociatedFileObject;PVOID Context;PVOID Context2;ULONG Flags;_FOBX___B95E32BA05695D37ADEEDE609BEA19EE __anonymous0;ULONG OffsetOfNextEaToReturn;};_FOBX___B95E32BA05695D37ADEEDE609BEA19EE___154C6638EF194F9A81AE81169DF8572C __anonymous14;};ULONG FobxSerialNumber;LIST_ENTRY FobxQLinks;LIST_ENTRY ScavengerFinalizationList;LIST_ENTRY ClosePendingList;LARGE_INTEGER CloseTime;BOOLEAN UpperFinalizationDone;BOOLEAN ContainsWildCards;BOOLEAN fOpenCountDecremented;union _FOBX___980A609D988DBD4CB131C399AACA181C Specific;PRDBSS_DEVICE_OBJECT RxDeviceObject;};



/// #endif ===true


