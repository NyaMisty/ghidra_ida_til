
#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\pc\gnuwin.til.h"
/// #define GHIDRA ===DEFINED

/// #ifndef INCLUDE_GUARD_gnuwin_til ===true

/// #define INCLUDE_GUARD_gnuwin_til ===DEFINED


#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\5_gengdt\pc\.\..\..\..\..\IDAPlugins\idatil2c\common.h"


/// #define __int64  long long ===DEFINED
/// #define __int32  int ===DEFINED
/// #define __int16  short ===DEFINED
/// #define __int8  char ===DEFINED

/// #ifdef GHIDRA ===true

typedef struct {
    long long u1;
    long long u2;
} __int128;
typedef struct {
    unsigned long long u1;
    unsigned long long u2;
} __uint128;
/// #endif ===true


typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;

/// #define _BYTE  uint8_t ===DEFINED
/// #define _WORD  uint16_t ===DEFINED
/// #define _QWORD  uint64_t ===DEFINED
/// #define _DWORD  uint32_t ===DEFINED



/// #ifndef HAVETYPE_bool ===true

/// #define bool  char ===DEFINED
/// #endif ===true


/// #ifndef HAVETYPE___u32 ===true

typedef uint32_t __u32;
/// #endif ===true

/// #ifndef HAVETYPE___u16 ===true

typedef uint16_t __u16;
/// #endif ===true

/// #ifndef HAVETYPE___u64 ===true

typedef uint64_t __u64;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_uid32_t ===true

typedef unsigned int __kernel_uid32_t;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_mqd_t ===true

typedef int __kernel_mqd_t;
/// #endif ===true



/// #define __fastcall ===DEFINED

/// #define __unaligned ===DEFINED

/// #define __stdcall ===DEFINED

/// #define __cppobj ===DEFINED

/// #define __declspec([x])   ===DEFINED
/// #define __hidden ===DEFINED

/// #define __cdecl ===DEFINED

/// #define __noreturn ===DEFINED


/// #define const ===DEFINED

/// #define this  _this ===DEFINED

typedef char _Mbstatet;

typedef void **va_list;





























 
#line 4: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\pc\gnuwin.til.h"




struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___2D36EF4657A2B130C0422CAF150A0160___B2E03ED94C06E2E681F8D03FF7FF5CB3;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___444826C0724C63C16186AAF04EE0E133___6E35CCFC02D81E31BD4C6BEDD77CB20A;
struct _PRINTER_NOTIFY_INFO_DATA___A5F36D98BBED04EAE24984DD3A8F63FF___C71B2353A63E8F14652F0A887FC4AC21;
struct _IMAGE_AUX_SYMBOL______16A1A8FB0340C07B06C110366CF85D46___A6589E1685AD051AED20409BF2544643;
struct _IMAGE_AUX_SYMBOL______16A1A8FB0340C07B06C110366CF85D46___D7CED02C5EE110FFB81CA02005CB2264;
struct _IMAGE_AUX_SYMBOL______7BA673E1ED5771089D188D89EB9BDF46___3C0209E125597A11F89742EEA0270158;
struct _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07___6F5D3132B0673F7F54FA2B910BE5C5E0;
struct _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07___E5DDA9A585AE137D0E5F8881F3AC492F;
union _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C___16A1A8FB0340C07B06C110366CF85D46;
union _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C___7BA673E1ED5771089D188D89EB9BDF46;
struct tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88___A8262751543F154F80C41ED2519FD13B;
struct tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88___A9226EEFE738F03A3F7D52221D0941CC;
struct tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05___A8262751543F154F80C41ED2519FD13B;
struct tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05___A9226EEFE738F03A3F7D52221D0941CC;
struct tagVARIANT_________3FCBCE0E1D38ED64A5F05F924A43CE06___3D6F035A95DCF735295BE71D0E642E57;
struct _IMAGE_SYMBOL___D31D1BC08928B4879C9F93D88486FFF4___DE8E098676ACAC74F2956A2D7B83DF3B;
union tagVARIANT______8917340B7A8DB9BEA85031381048F94D___3FCBCE0E1D38ED64A5F05F924A43CE06;
struct _SYSTEM_INFO___058745E319A46827965CDE7F37238831___AA04DEB0C6383F89F13D312A174572A9;
struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___02D247D6A486D56C73DBF439481983E7;
struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___0715B07ED6754B0F0C1844052E8836F8;
struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___309D668730615BAF74518D141CF67858;
struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___425444B63999EAF57D64386882606692;
struct _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097___81408237330B83BB46845513C42A27AE;
struct _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097___A3BAC9569453E46653D4C53B8339026E;
struct mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514___2498AB4F57B5A5935D3AAA9956C218FB;
struct mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514___B7A2B1CE967584EBB3840978181CF21D;
struct tagVARIANT___752DA0FEA6ABD422DEEA1D52ECA193AD___8917340B7A8DB9BEA85031381048F94D;
struct in_addr___C13EC994467D6E67044F092615EC7EA9___01C175C1F0716DCA00314EDD79DBC0A0;
struct in_addr___C13EC994467D6E67044F092615EC7EA9___4DE764E669F663DACA3CBFDE73714CB5;
struct tagDEC___69538C3DD9098B71FCE9E10A032568F6___674876891A86A76F12C10005982BCA56;
struct tagDEC___88AE3BEC867F36A22A2957540062A42D___7F8459940C2B08BD5D82B0F27239141B;
union _1A16B277A945B8F62DE8883A2D91AFD9___0740F39446D5E828B16B7363880DB674;
struct _1C4035FDEAFFF0FCE26E66A96F6BBEB4___20EFCB5FAA72B851457C6BAA266EC02E;
union _1CF5A01E195BE25BEDA13B6A0EE28B07___CA6E005D0CEB4AD2B9A93DDD4A619B56;
struct _738A8E8AC168E5B4B1A53622C9D7048F___D6587128ED4C013AF36DCCA432989BD5;
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___2D36EF4657A2B130C0422CAF150A0160;
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___444826C0724C63C16186AAF04EE0E133;
union _PRINTER_NOTIFY_INFO_DATA___A5F36D98BBED04EAE24984DD3A8F63FF;
union _IMAGE_IMPORT_DESCRIPTOR___CCDB7E5AE55A3EBF5ADB4AABA889E6CB;
struct _FULL_PTR_XLAT_TABLES___5B5EF811252786EBFBAAA3889BB4C68D;
struct _FULL_PTR_XLAT_TABLES___CFFA09E862963CB530A7E2871127FDA7;
union _IMAGE_SECTION_HEADER___39DFBA39B6D121CDFC1ACE66C995549C;
union tagMIXERLINECONTROLSA___DC43C2837E8C20184C3137B308FBE3E1;
union tagMIXERLINECONTROLSW___DC43C2837E8C20184C3137B308FBE3E1;
union _____pthread_mutex_s___30DFB618E49C377A3D62C6584A4CBE95;
union _wireSAFEARRAY_UNION___872DEB83A733539900946FC069853D23;
union tMIXERCONTROLDETAILS___6A354DB64043DD4C59D209C2C03EE69F;
union _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07;
struct _F85E194B51CBDC38F209555F4162D10C____pthread_mutex_s;
struct _IMAGE_AUX_SYMBOL___0ECF6FFE4CB91F7643C274EBA09FDD11;
struct _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C;
struct _IMAGE_AUX_SYMBOL___C84595816809DB9D1AC5ADB82092AE34;
union _IMAGE_LINENUMBER___323A99206959B5083BD9C46482D6FCE5;
union _IMAGE_RELOCATION___1E7C1E46FA531EE3105A5918E7864FED;
union _IMAGE_THUNK_DATA___0FC9A8C55E35B7004611A96ACAD7866D;
union _KEY_EVENT_RECORD___0E79EC4DAC98A4AB202537FA8C3F69FC;
union _PROPSHEETHEADERA___B2BC7FD01B1A93973E79FDE746C43987;
union _PROPSHEETHEADERA___E1AF9326B92748E8DAFEF2F13D81386D;
union _PROPSHEETHEADERA___FF46AEFBA3346A074103206F902E6DF5;
union _PROPSHEETHEADERW___0FB566F30614F599529D00140F4CD87D;
union _PROPSHEETHEADERW___6475730AE6DAD1B8D6E46E57DCE1E457;
union _PROPSHEETHEADERW___C62D413765EFFC4667F5A15937CA2710;
union tagMIXERCONTROLA___AFA1D3B62FF5E28583F9FD43B125895E;
union tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88;
union tagMIXERCONTROLW___AFA1D3B62FF5E28583F9FD43B125895E;
union tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05;
union _MIDL_STUB_DESC___5BCB627D3738D8B5DEACC268C24AE672;
union _PROPSHEETPAGEA___55841DA2EA6EA673F6C61AA531495E56;
union _PROPSHEETPAGEA___E1AF9326B92748E8DAFEF2F13D81386D;
union _PROPSHEETPAGEW___0FB566F30614F599529D00140F4CD87D;
union _PROPSHEETPAGEW___516F7AC5631E67C03EDCA9BDA4E87AED;
struct _ULARGE_INTEGER___0354AA9C204208F00D0965D07BBE7FAC;
struct _LARGE_INTEGER___837407842DC9087486FDFA5FEB63B74E;
union tagPROPVARIANT___35FA5FC55477E54363241AFA3482EE1E;
union _IMAGE_SYMBOL___D31D1BC08928B4879C9F93D88486FFF4;
union _INPUT_RECORD___56C9F45CD5AB058B1B4FD5A9AB9216C4;
struct tagMIXERLINEA___3F59E0B102B49F482C4A8B1440A7891E;
struct tagMIXERLINEW___9A19AF7771B1B870F9962D397CED60DA;
union _DEBUG_EVENT___1CA59A7E570F154F98F56770E4FE79B4;
union _SYSTEM_INFO___058745E319A46827965CDE7F37238831;
union _wireVARIANT___3390C37F64321D49999A8BAD1DE75787;
union tagSTGMEDIUM___796099C3E9457CEE546F4B82888134E5;
union tagELEMDESC___7C8F4CED1424251743D09680A1A0B07D;
union tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D;
union tagPROPSPEC___401F44F296029ABDCCA300255B1FD5D2;
union tagTYPEDESC___AC700B6542D8071E244CADABF8A32897;
union _CHAR_INFO___0E79EC4DAC98A4AB202537FA8C3F69FC;
union _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097;
union mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514;
union tagVARDESC___E6274BD6A7149C9CC2413444FF769F0B;
union tagVARIANT___752DA0FEA6ABD422DEEA1D52ECA193AD;
union _NT_TIB___0349ADB4452EC09BEC08E2292695FBBA;
union _STRRET___CBA4CBE4EE73FCDBDFD08B2527F2F26D;
union in_addr___C13EC994467D6E67044F092615EC7EA9;
union tagDEC___69538C3DD9098B71FCE9E10A032568F6;
union tagDEC___88AE3BEC867F36A22A2957540062A42D;
struct tagCY___983F061E0B702DD8AE0B4B955735A6A3;
struct _03B47C5F41869B4DA4566C38D2C89E1D;
struct _098CCDCB9074DBE2AEBC1B4026CD72FD;
struct _12220BD7577024BDCE09342FCD2824E0;
struct _17CA7839736B8F73357CD165DBE52F18;
struct _1A16B277A945B8F62DE8883A2D91AFD9;
union _1C4035FDEAFFF0FCE26E66A96F6BBEB4;
struct _1C9ED8E2FE494C714F8336D090291E50;
struct _1CF5A01E195BE25BEDA13B6A0EE28B07;
struct _21B90258E17C8B6D2BC61A88DF74B5FB;
struct _2217024DFB55A6F4C8452C0D2E818FB7;
struct _22BDD2D628B0B561C5A9CA42290FE551;
struct _27240A871129E8C5EF2505ED059D4BC8;
struct _2B4FDC4BF487E67F052937EE78FAE255;
struct _30741344DFEF5D024CAA9E725B3C6F5B;
struct _30CC7D53408649846FD423BE19D3AD21;
struct _30CDF2DE7DC7B55457111E3E79D8AE18;
struct _3EC5757393EE7828D79CED73ACE876F0;
struct _3FA64165D15A4602C29B2D9B0DA4A5E9;
struct _3FBC325AC5E1830BAC7DB9619C6C90C8;
struct _44840292B0FD4432816E14C2BB6B9957;
struct _4532F7D10C15B8B11D529D53ECAF8C30;
struct _46B8CD9DF897759D0306203A2121EA8B;
struct _49EEBB44BCC2D3FA72837E5FE8CADC02;
struct _58C398469581E4FCDD5ADAF6870FB0ED;
struct _5FD78A464707AEFBBDC321B5598A6452;
struct _60326525EFFC6265B33A0784E3C361D7;
struct _61B889227CECAFED4E8A477D21B34BC9;
struct _62EC1DAD6DB92F8723AD0A50B2259449;
struct _6950E4854C03824D44DF624674A695D1;
struct _6ECA53571B8FCC125A3088582131FB6E;
struct _6F0F0D71FED89E7A00C3574FDC894A08;
union _738A8E8AC168E5B4B1A53622C9D7048F;
struct _7644B9603AEA08EBF4DF4A983BB6B237;
union _781B27F37A2DA3C5D0084E69F313DC7D;
struct _7909BF26B031C365F3B32F82E7366E93;
struct _793203A904263AF632B64217160A3CD4;
struct _7ADE47B00230EF5EBD78FEDFCEB95499;
union _7B6D3CF7C92E6402FF2DDB4E46F022F4;
struct _7F09F6AD7173E0292471C155D2885AEF;
struct _7F42DEB2BB5D0DE64733A8884285C23D;
struct _86C0719967FA1585F934A358B3D4F44D;
struct _89E88C10B84B492504101A13E5F7DD9F;
struct _923DA7BE11DCB482D02B0566D8DB27AB;
struct _947C6FA139885FA2B0DE7F2A3FDD942C;
struct _9722585E737591D9DBBFC1CA80083F53;
struct _979FA3DE6ECCF956231BFC297C4278E6;
struct _9EEC6D4C8F692379AA2A6356D0C3C3FC;
struct _A1943A29AA7C7E1878261AF6E5FA7A66;
struct _A2F74AF90EE3AACE3322F4FF0CBF4977;
struct _AD47B7B6770F26FF00FF8EF46A9765CE;
struct _B3B9922EB7092B419B9B91CCE29DC8AC;
struct _B6447483CA6EC2EDA955C4C8EEAE802B;
struct _B8380904D5E4DBEF1FA17159C4574D89;
struct _BC2FB811D417144E831EE3AEA4A279C8;
struct _BC4A2AE7528CDE26EA3193F07B7FB715;
struct _C0A2C8317C92AEC6C65405BB0D08D817;
struct _C25693052C43ED6AA003F87DB66344AA;
struct _C3D536761911E1B34BFF5DAB2CC3A2E9;
struct _CC81E267BD8B32E89ADB7AE662C05BFA;
union _D1779CA5851A61401DD36BCDAF347214;
union _D1D0F511BF997F52624AFB2B0CE27B40;
struct _D68E04ECC07D7D43C298BEA99D7BA7F2;
struct _D692CA7460863103343173F071E8F66B;
struct _DD2E0983FBF83F36606C69DABA2BC276;
struct _DE8A226FBF6958721EC6E17746E96A38;
struct _E1FC672EFA0154DDDEED24E20FAA5FC7;
struct _E3900F4E8C66B34C84E740787FDB0DE9;
struct _E42E7BED0EE5193A4D0BC9D45E2008A3;
struct _E9995694CC4D0702CA77AA1397DA2E55;
struct _EE72D852D5A93ABA9CA530FC9E659A18;
struct _F4E2A3B3EF6C4FAA4EC9C87B4A54D83E;
union _F85E194B51CBDC38F209555F4162D10C;
struct _FB1D2264C317C52716420591CB70B7FC;
struct _FEF45AADF86B3C581868F0239CC1F2BD;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct tagMIXERCONTROLDETAILS_LISTTEXTA;
struct tagMIXERCONTROLDETAILS_LISTTEXTW;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct IConnectionPointContainerVtbl;
struct _GENERIC_BINDING_ROUTINE_PAIR;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct tMIXERCONTROLDETAILS_UNSIGNED;
struct tagEMRCREATEDIBPATTERNBRUSHPT;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
struct _IMAGE_LOAD_CONFIG_DIRECTORY;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct _SECURITY_QUALITY_OF_SERVICE;
struct tMIXERCONTROLDETAILS_BOOLEAN;
struct tagEMREXTCREATEFONTINDIRECTW;
struct IOleInPlaceActiveObjectVtbl;
struct IUniformResourceLocatorVtbl;
struct _BY_HANDLE_FILE_INFORMATION;
struct _CONSOLE_SCREEN_BUFFER_INFO;
struct _INTERNET_CACHE_ENTRY_INFOA;
struct _INTERNET_CACHE_ENTRY_INFOW;
struct _PSAPI_WS_WATCH_INFORMATION;
struct _QUERY_SERVICE_LOCK_STATUSA;
struct _QUERY_SERVICE_LOCK_STATUSW;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct tMIXERCONTROLDETAILS_SIGNED;
struct _CREATE_PROCESS_DEBUG_INFO;
struct _DEV_BROADCAST_USERDEFINED;
struct _FULL_PTR_TO_REFID_ELEMENT;
struct _IMAGEHLP_DUPLICATE_SYMBOL;
struct _IMAGE_BOUND_FORWARDER_REF;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct _IMAGE_RESOURCE_DATA_ENTRY;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _LOCALGROUP_MEMBERS_INFO_0;
struct _LOCALGROUP_MEMBERS_INFO_1;
struct _LOCALGROUP_MEMBERS_INFO_2;
struct _LOCALGROUP_MEMBERS_INFO_3;
struct _SEC_WINNT_AUTH_IDENTITY_A;
struct _SEC_WINNT_AUTH_IDENTITY_W;
struct _SET_PARTITION_INFORMATION;
struct _TAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS;
struct _WIN32_FILE_ATTRIBUTE_DATA;
struct _WINDOW_BUFFER_SIZE_RECORD;
struct tagEMRMODIFYWORLDTRANSFORM;
struct IConnectionPointContainer;
struct IEnumConnectionPointsVtbl;
struct ISpecifyPropertyPagesVtbl;
struct _ACL_REVISION_INFORMATION;
struct _CREATE_THREAD_DEBUG_INFO;
struct _DRIVE_LAYOUT_INFORMATION;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _MEMORY_BASIC_INFORMATION;
struct _MIDL_STUBLESS_PROXY_INFO;
struct _OUTPUT_DEBUG_STRING_INFO;
struct _PERF_INSTANCE_DEFINITION;
struct _PRINTER_NOTIFY_INFO_DATA;
struct _SID_IDENTIFIER_AUTHORITY;
struct tagEMRCREATEBRUSHINDIRECT;
struct tagMCI_ANIM_WINDOW_PARMSA;
struct tagMCI_ANIM_WINDOW_PARMSW;
struct tagMCI_OVLY_WINDOW_PARMSA;
struct tagMCI_OVLY_WINDOW_PARMSW;
struct IOleUILinkContainerAVtbl;
struct IOleUILinkContainerWVtbl;
struct IPerPropertyBrowsingVtbl;
struct IRichEditOleCallbackVtbl;
struct _EXIT_PROCESS_DEBUG_INFO;
struct _EXTENSION_CONTROL_BLOCK;
struct _FILE_NOTIFY_INFORMATION;
struct _IMAGE_DEBUG_INFORMATION;
struct _IMAGE_IMPORT_DESCRIPTOR;
struct _LOCALGROUP_USERS_INFO_0;
struct _PERF_COUNTER_DEFINITION;
struct _PROCESS_MEMORY_COUNTERS;
struct _SERVER_TRANSPORT_INFO_0;
struct __pthread_internal_slist;
struct tagCInterfaceProxyHeader;
struct tagEMRSCALEVIEWPORTEXTEX;
struct tagEMRSETCOLORADJUSTMENT;
struct tagMCI_ANIM_UPDATE_PARMS;
struct tagMCI_WAVE_DELETE_PARMS;
struct tagPIXELFORMATDESCRIPTOR;
struct IEnumSTATPROPSETSTGVtbl;
struct IExternalConnectionVtbl;
struct IOleInPlaceActiveObject;
struct IOleInPlaceUIWindowVtbl;
struct IPersistPropertyBagVtbl;
struct IPropertyNotifySinkVtbl;
struct IPropertySetStorageVtbl;
struct IRunningObjectTableVtbl;
struct IUniformResourceLocator;
struct _BROWSER_STATISTICS_100;
struct _BROWSER_STATISTICS_101;
struct _CRITICAL_SECTION_DEBUG;
struct _EXIT_THREAD_DEBUG_INFO;
struct _IMAGE_EXPORT_DIRECTORY;
struct _MESSAGE_RESOURCE_BLOCK;
struct _MESSAGE_RESOURCE_ENTRY;
struct _PRINTPROCESSOR_INFO_1A;
struct _PRINTPROCESSOR_INFO_1W;
struct _SE_IMPERSONATION_STATE;
struct _WKSTA_TRANSPORT_INFO_0;
struct _XMIT_ROUTINE_QUINTUPLE;
struct tagCInterfaceStubHeader;
struct tagEMRSETDIBITSTODEVICE;
struct tagEMRSETPALETTEENTRIES;
struct tagEMRSETWORLDTRANSFORM;
struct tagINITCOMMONCONTROLSEX;
struct tagLAYERPLANEDESCRIPTOR;
struct tagMCI_ANIM_OPEN_PARMSA;
struct tagMCI_ANIM_OPEN_PARMSW;
struct tagMCI_GETDEVCAPS_PARMS;
struct tagMCI_OVLY_LOAD_PARMSA;
struct tagMCI_OVLY_LOAD_PARMSW;
struct tagMCI_OVLY_OPEN_PARMSA;
struct tagMCI_OVLY_OPEN_PARMSW;
struct tagMCI_OVLY_SAVE_PARMSA;
struct tagMCI_OVLY_SAVE_PARMSW;
struct tagMCI_VD_ESCAPE_PARMSA;
struct tagMCI_VD_ESCAPE_PARMSW;
struct tagMCI_WAVE_OPEN_PARMSA;
struct tagMCI_WAVE_OPEN_PARMSW;
struct IPersistStreamInitVtbl;
struct IProvideClassInfo2Vtbl;
struct IShellExecuteHookAVtbl;
struct IShellExecuteHookWVtbl;
struct IShellPropSheetExtVtbl;
struct _IMAGE_BASE_RELOCATION;
struct _IMAGE_DEBUG_DIRECTORY;
struct _IMAGE_OPTIONAL_HEADER;
struct _MESSAGE_RESOURCE_DATA;
struct _PARTITION_INFORMATION;
struct _PREVENT_MEDIA_REMOVAL;
struct _QUERY_SERVICE_CONFIGA;
struct _QUERY_SERVICE_CONFIGW;
struct _RPC_SYNTAX_IDENTIFIER;
struct _TAPE_CREATE_PARTITION;
struct _TIME_ZONE_INFORMATION;
struct _TRANSMIT_FILE_BUFFERS;
struct _UNLOAD_DLL_DEBUG_INFO;
struct _USER_MODALS_INFO_1001;
struct _USER_MODALS_INFO_1002;
struct _USER_MODALS_INFO_1003;
struct _USER_MODALS_INFO_1004;
struct _USER_MODALS_INFO_1005;
struct _USER_MODALS_INFO_1006;
struct _USER_MODALS_INFO_1007;
struct __GENERIC_BINDING_INFO;
struct tagCInterfaceProxyVtbl;
struct tagCStdPSFactoryBuffer;
struct tagDDEML_MSG_HOOK_DATA;
struct tagEMRCREATECOLORSPACE;
struct tagEMREXTSELECTCLIPRGN;
struct tagEMRSELECTCOLORSPACE;
struct tagEMRSETVIEWPORTEXTEX;
struct tagEMRSETVIEWPORTORGEX;
struct tagMCI_ANIM_PLAY_PARMS;
struct tagMCI_ANIM_RECT_PARMS;
struct tagMCI_ANIM_STEP_PARMS;
struct tagMCI_OVLY_RECT_PARMS;
struct IDataAdviseHolderVtbl;
struct IEnumConnectionPoints;
struct IParseDisplayNameVtbl;
struct IPropertyPageSiteVtbl;
struct IProvideClassInfoVtbl;
struct IRpcChannelBufferVtbl;
struct ISequentialStreamVtbl;
struct ISpecifyPropertyPages;
struct ISupportErrorInfoVtbl;
struct _ACL_SIZE_INFORMATION;
struct _DEV_BROADCAST_VOLUME;
struct _ENUM_SERVICE_STATUSA;
struct _ENUM_SERVICE_STATUSW;
struct _EXCEPTION_DEBUG_INFO;
struct _FORMAT_EX_PARAMETERS;
struct _FULL_PTR_XLAT_TABLES;
struct _IMAGE_DATA_DIRECTORY;
struct _IMAGE_FUNCTION_ENTRY;
struct _IMAGE_IMPORT_BY_NAME;
struct _IMAGE_SECTION_HEADER;
struct _LOCALGROUP_INFO_1002;
struct _NETCONNECTINFOSTRUCT;
struct _RPC_CLIENT_INTERFACE;
struct _RPC_PROTSEQ_ENDPOINT;
struct _RPC_SERVER_INTERFACE;
struct _RTL_CRITICAL_SECTION;
struct _SERVICE_TABLE_ENTRYA;
struct _SERVICE_TABLE_ENTRYW;
struct _UNIVERSAL_NAME_INFOA;
struct _UNIVERSAL_NAME_INFOW;
struct _WKSTA_USER_INFO_1101;
struct _WSAServiceClassInfoA;
struct _WSAServiceClassInfoW;
struct _wireSAFEARR_DISPATCH;
struct tagCInterfaceStubVtbl;
struct tagCLIENTCREATESTRUCT;
struct tagEMRCREATEMONOBRUSH;
struct tagEMREXCLUDECLIPRECT;
struct tagEMRSETARCDIRECTION;
struct tagMCI_SYSINFO_PARMSA;
struct tagMCI_SYSINFO_PARMSW;
struct tagMCI_WAVE_SET_PARMS;
struct tagMIXERLINECONTROLSA;
struct tagMIXERLINECONTROLSW;
struct tagOLEUICHANGESOURCEA;
struct tagOLEUICHANGESOURCEW;
struct tagOLEUIINSERTOBJECTA;
struct tagOLEUIINSERTOBJECTW;
struct tagOLEUIPASTESPECIALA;
struct tagOLEUIPASTESPECIALW;
struct tagOleMenuGroupWidths;
struct IConnectionPointVtbl;
struct IEnumConnectionsVtbl;
struct IEnumSTATPROPSTGVtbl;
struct IOleAdviseHolderVtbl;
struct IOleInPlaceFrameVtbl;
struct IOleUILinkContainerA;
struct IOleUILinkContainerW;
struct IPSFactoryBufferVtbl;
struct IPerPropertyBrowsing;
struct IPropertyStorageVtbl;
struct IRichEditOleCallback;
struct ISimpleFrameSiteVtbl;
struct _CMInvokeCommandInfo;
struct _CONSOLE_CURSOR_INFO;
struct _FILEGROUPDESCRIPTOR;
struct _IMAGE_TLS_DIRECTORY;
struct _LOAD_DLL_DEBUG_INFO;
struct _LUID_AND_ATTRIBUTES;
struct _NET_DISPLAY_MACHINE;
struct _PRINTER_NOTIFY_INFO;
struct _PROCESS_INFORMATION;
struct _REPL_EDIR_INFO_1000;
struct _REPL_EDIR_INFO_1001;
struct _RPC_PROTSEQ_VECTORA;
struct _RPC_PROTSEQ_VECTORW;
struct _RPC_TRANSFER_SYNTAX;
struct _SECURITY_ATTRIBUTES;
struct _SECURITY_DESCRIPTOR;
struct _SYSTEM_POWER_STATUS;
struct _TOKEN_PRIMARY_GROUP;
struct _wireSAFEARRAY_UNION;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_VARIANT;
struct tMIXERCONTROLDETAILS;
struct tagCBTACTIVATESTRUCT;
struct tagCLEANLOCALSTORAGE;
struct tagCOMPAREITEMSTRUCT;
struct tagEMRPOLYPOLYLINE16;
struct tagEMRSELECTCLIPPATH;
struct tagEMRSETMAPPERFLAGS;
struct tagMCI_GENERIC_PARMS;
struct tagMCI_SEQ_SET_PARMS;
struct tagMCI_VD_PLAY_PARMS;
struct tagMCI_VD_STEP_PARMS;
struct tagMEASUREITEMSTRUCT;
struct tagNONCLIENTMETRICSA;
struct tagNONCLIENTMETRICSW;
struct tagOLEUIOBJECTPROPSA;
struct tagOLEUIOBJECTPROPSW;
struct urlinvokecommandinfo;
struct IClassActivatorVtbl;
struct IClientSecurityVtbl;
struct ICommDlgBrowserVtbl;
struct IEnumSTATPROPSETSTG;
struct IExternalConnection;
struct IFileViewerSiteVtbl;
struct IOleControlSiteVtbl;
struct IOleInPlaceUIWindow;
struct IOleUILinkInfoAVtbl;
struct IOleUILinkInfoWVtbl;
struct IPersistPropertyBag;
struct IPersistStorageVtbl;
struct IProgressNotifyVtbl;
struct IPropertyNotifySink;
struct IPropertySetStorage;
struct IRpcProxyBufferVtbl;
struct IRunnableObjectVtbl;
struct IRunningObjectTable;
struct IServerSecurityVtbl;
struct IStdMarshalInfoVtbl;
struct _ACCESS_ALLOWED_ACE;
struct _BROWSER_STATISTICS;
struct _CHARDEVQ_INFO_1002;
struct _CHARDEVQ_INFO_1003;
union _CLIENT_CALL_RETURN;
struct _COMM_FAULT_OFFSETS;
struct _DEV_BROADCAST_PORT;
struct _EXCEPTION_POINTERS;
struct _FLOATING_SAVE_AREA;
struct _FOCUS_EVENT_RECORD;
struct _GROUP_USERS_INFO_0;
struct _GROUP_USERS_INFO_1;
struct _MALLOC_FREE_STRUCT;
struct _MIDL_FORMAT_STRING;
struct _MOUSE_EVENT_RECORD;
struct _OUTLINETEXTMETRICA;
struct _OUTLINETEXTMETRICW;
struct _PERF_COUNTER_BLOCK;
struct _PROCESS_HEAP_ENTRY;
struct _RPC_BINDING_VECTOR;
struct _SID_AND_ATTRIBUTES;
struct _STAT_WORKSTATION_0;
struct _TOKEN_DEFAULT_DACL;
struct _USER_MODALS_INFO_0;
struct _USER_MODALS_INFO_1;
struct _USER_MODALS_INFO_2;
struct _USER_MODALS_INFO_3;
struct _VERIFY_INFORMATION;
struct _WSANAMESPACE_INFOA;
struct _WSANAMESPACE_INFOW;
struct midiproptimediv_tag;
struct midistrmbuffver_tag;
struct tagBITMAPCOREHEADER;
struct tagBITMAPFILEHEADER;
struct tagBITMAPINFOHEADER;
struct tagDELETEITEMSTRUCT;
struct tagEMRCREATEPALETTE;
struct tagEMROFFSETCLIPRGN;
struct tagEMRRESIZEPALETTE;
struct tagEMRSELECTPALETTE;
struct tagEMRSETMITERLIMIT;
struct tagEMRSTRETCHDIBITS;
struct tagHW_PROFILE_INFOA;
struct tagHW_PROFILE_INFOW;
struct tagIMEMENUITEMINFOA;
struct tagIMEMENUITEMINFOW;
struct tagMCI_RECORD_PARMS;
struct tagMCI_STATUS_PARMS;
struct tagMDICREATESTRUCTA;
struct tagMDICREATESTRUCTW;
struct tagMINIMIZEDMETRICS;
struct tagNEWTEXTMETRICEXA;
struct tagNEWTEXTMETRICEXW;
struct tagOLEUICHANGEICONA;
struct tagOLEUICHANGEICONW;
struct tagOLEUIPASTEENTRYA;
struct tagOLEUIPASTEENTRYW;
struct tagVS_FIXEDFILEINFO;
struct IClassFactory2Vtbl;
struct IEnumFORMATETCVtbl;
struct IFillLockBytesVtbl;
struct ILayoutStorageVtbl;
struct IMessageFilterVtbl;
struct IOleClientSiteVtbl;
struct IOleUIObjInfoAVtbl;
struct IOleUIObjInfoWVtbl;
struct IPersistFolderVtbl;
struct IPersistMemoryVtbl;
struct IPersistStreamInit;
struct IPersistStreamVtbl;
struct IPropertyPage2Vtbl;
struct IProvideClassInfo2;
struct IRpcStubBufferVtbl;
struct IShellExecuteHookA;
struct IShellExecuteHookW;
struct IShellPropSheetExt;
struct _ACCESS_DENIED_ACE;
struct _CONNECTDLGSTRUCTA;
struct _CONNECTDLGSTRUCTW;
struct _CONNECTION_INFO_0;
struct _CONNECTION_INFO_1;
struct _DATATYPES_INFO_1A;
struct _DATATYPES_INFO_1W;
struct _DEV_BROADCAST_HDR;
struct _DEV_BROADCAST_OEM;
struct _ERRLOG_OTHER_INFO;
struct _FLAGGED_WORD_BLOB;
struct _FORMAT_PARAMETERS;
struct _GLYPHMETRICSFLOAT;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_ROM_HEADERS;
struct _INTERNET_BUFFERSA;
struct _INTERNET_BUFFERSW;
struct _LOCALGROUP_INFO_0;
struct _LOCALGROUP_INFO_1;
struct _MENU_EVENT_RECORD;
struct _MIDL_SERVER_INFO_;
struct _MIDL_STUB_MESSAGE;
struct _NET_DISPLAY_GROUP;
struct _PRINTER_DEFAULTSA;
struct _PRINTER_DEFAULTSW;
struct _RASTERIZER_STATUS;
struct _REMOTE_NAME_INFOA;
struct _REMOTE_NAME_INFOW;
struct _SHELLEXECUTEINFOA;
struct _SHELLEXECUTEINFOW;
struct _TAPE_GET_POSITION;
struct _TAPE_SET_POSITION;
struct _WKSTA_USER_INFO_0;
struct _WKSTA_USER_INFO_1;
struct _WSAPROTOCOL_INFOA;
struct _WSAPROTOCOL_INFOW;
struct tagCOLORADJUSTMENT;
struct tagCOMPOSITIONFORM;
struct tagEMREXTCREATEPEN;
struct tagEMREXTFLOODFILL;
struct tagEMRPOLYPOLYLINE;
struct tagEMRPOLYTEXTOUTA;
struct tagEMRSELECTOBJECT;
struct tagEMRSETTEXTCOLOR;
struct tagLOCALESIGNATURE;
struct tagMCI_BREAK_PARMS;
struct tagMCI_INFO_PARMSA;
struct tagMCI_INFO_PARMSW;
struct tagMCI_LOAD_PARMSA;
struct tagMCI_LOAD_PARMSW;
struct tagMCI_OPEN_PARMSA;
struct tagMCI_OPEN_PARMSW;
struct tagMCI_SAVE_PARMSA;
struct tagMCI_SAVE_PARMSW;
struct tagOLEUIEDITLINKSA;
struct tagOLEUIEDITLINKSW;
struct tagOLEUIGNRLPROPSA;
struct tagOLEUIGNRLPROPSW;
struct tagOLEUILINKPROPSA;
struct tagOLEUILINKPROPSW;
struct tagOLEUIVIEWPROPSA;
struct tagOLEUIVIEWPROPSW;
struct tagPROCESSENTRY32W;
struct tagTRACKMOUSEEVENT;
struct tagTTPOLYGONHEADER;
struct tagUSEROBJECTFLAGS;
struct IClassFactoryVtbl;
struct IContextMenu2Vtbl;
struct IDataAdviseHolder;
struct IEnumSTATDATAVtbl;
struct IOleContainerVtbl;
struct IParseDisplayName;
struct IPropertyPageSite;
struct IPropertyPageVtbl;
struct IProvideClassInfo;
struct IRpcChannelBuffer;
struct ISequentialStream;
struct IShellBrowserVtbl;
struct IShellExtInitVtbl;
struct ISupportErrorInfo;
struct NDdeShareInfo_tag;
struct _ACCESS_INFO_1002;
struct _ADMIN_OTHER_INFO;
struct _CRITICAL_SECTION;
struct _DISK_PERFORMANCE;
struct _EXCEPTION_RECORD;
struct _FIND_NAME_BUFFER;
struct _FIND_NAME_HEADER;
struct _HISTOGRAM_BUCKET;
struct _HSE_VERSION_INFO;
union _IMAGE_AUX_SYMBOL;
struct _IMAGE_DEBUG_MISC;
struct _IMAGE_DOS_HEADER;
struct _IMAGE_LINENUMBER;
struct _IMAGE_NT_HEADERS;
struct _IMAGE_OS2_HEADER;
struct _IMAGE_RELOCATION;
struct _IMAGE_THUNK_DATA;
struct _IMAGE_VXD_HEADER;
struct _KEY_EVENT_RECORD;
struct _NET_DISPLAY_USER;
struct _PERF_OBJECT_TYPE;
struct _PRINT_OTHER_INFO;
struct _PROPSHEETHEADERA;
struct _PROPSHEETHEADERW;
struct _QualityOfService;
struct _REPL_EDIR_INFO_0;
struct _REPL_EDIR_INFO_1;
struct _REPL_EDIR_INFO_2;
struct _REPL_IDIR_INFO_0;
struct _REPL_IDIR_INFO_1;
struct _RPC_SECURITY_QOS;
struct _SERVER_INFO_1005;
struct _SERVER_INFO_1010;
struct _SERVER_INFO_1016;
struct _SERVER_INFO_1017;
struct _SERVER_INFO_1018;
struct _SERVER_INFO_1107;
struct _SERVER_INFO_1501;
struct _SERVER_INFO_1502;
struct _SERVER_INFO_1503;
struct _SERVER_INFO_1506;
struct _SERVER_INFO_1509;
struct _SERVER_INFO_1510;
struct _SERVER_INFO_1511;
struct _SERVER_INFO_1512;
struct _SERVER_INFO_1513;
struct _SERVER_INFO_1514;
struct _SERVER_INFO_1515;
struct _SERVER_INFO_1516;
struct _SERVER_INFO_1518;
struct _SERVER_INFO_1520;
struct _SERVER_INFO_1521;
struct _SERVER_INFO_1522;
struct _SERVER_INFO_1523;
struct _SERVER_INFO_1524;
struct _SERVER_INFO_1525;
struct _SERVER_INFO_1528;
struct _SERVER_INFO_1529;
struct _SERVER_INFO_1530;
struct _SERVER_INFO_1533;
struct _SERVER_INFO_1534;
struct _SERVER_INFO_1535;
struct _SERVER_INFO_1536;
struct _SERVER_INFO_1537;
struct _SERVER_INFO_1538;
struct _SERVER_INFO_1539;
struct _SERVER_INFO_1540;
struct _SERVER_INFO_1541;
struct _SERVER_INFO_1542;
struct _SERVER_INFO_1543;
struct _SERVER_INFO_1544;
struct _SERVER_INFO_1545;
struct _SERVER_INFO_1546;
struct _SERVER_INFO_1547;
struct _SERVER_INFO_1548;
struct _SERVER_INFO_1549;
struct _SERVER_INFO_1550;
struct _SERVER_INFO_1552;
struct _SERVER_INFO_1553;
struct _SERVER_INFO_1554;
struct _SERVER_INFO_1555;
struct _SERVER_INFO_1556;
struct _SERVER_INFO_1557;
struct _SERVER_INFO_1560;
struct _SERVER_INFO_1561;
struct _SERVER_INFO_1562;
struct _SERVER_INFO_1563;
struct _SERVER_INFO_1564;
struct _SERVER_INFO_1565;
struct _SERVER_INFO_1566;
struct _SERVER_INFO_1567;
struct _SERVER_INFO_1568;
struct _SERVER_INFO_1569;
struct _SERVER_INFO_1570;
struct _SERVER_INFO_1571;
struct _SERVER_INFO_1572;
struct _SERVER_INFO_1573;
struct _SERVER_INFO_1574;
struct _SERVER_INFO_1575;
struct _SERVER_INFO_1576;
struct _SERVER_INFO_1577;
struct _SERVER_INFO_1578;
struct _SERVER_INFO_1579;
struct _SERVER_INFO_1580;
struct _SERVER_INFO_1581;
struct _SERVER_INFO_1582;
struct _SERVER_INFO_1583;
struct _SERVER_INFO_1584;
struct _SERVER_INFO_1585;
struct _SERVER_INFO_1586;
struct _SESSION_INFO_502;
struct _TAPE_WRITE_MARKS;
struct _TIME_OF_DAY_INFO;
struct _TOKEN_PRIVILEGES;
struct _TOKEN_STATISTICS;
struct _TV_INSERTSTRUCTA;
struct _TV_INSERTSTRUCTW;
struct _WIN32_FIND_DATAA;
struct _WIN32_FIND_DATAW;
struct _WSANETWORKEVENTS;
struct _WSAPROTOCOLCHAIN;
struct _wireSAFEARR_BSTR;
struct midiproptempo_tag;
struct pcmwaveformat_tag;
struct tagCOPYDATASTRUCT;
struct tagCStdStubBuffer;
struct tagDRAWITEMSTRUCT;
struct tagDVTARGETDEVICE;
struct tagEMREXTTEXTOUTA;
struct tagENUMLOGFONTEXA;
struct tagENUMLOGFONTEXW;
struct tagLOGCOLORSPACEA;
struct tagLOGCOLORSPACEW;
struct tagMCI_PLAY_PARMS;
struct tagMCI_SEEK_PARMS;
struct tagMODULEENTRY32W;
struct tagNEWTEXTMETRICA;
struct tagNEWTEXTMETRICW;
struct tagPROCESSENTRY32;
struct tagREBARBANDINFOA;
struct tagREBARBANDINFOW;
struct tagSAFEARRAYBOUND;
struct tagSTATPROPSETSTG;
struct HPROPSHEETPAGE__;
struct IAdviseSink2Vtbl;
struct IChannelHookVtbl;
struct IConnectionPoint;
struct IContextMenuVtbl;
struct IEnumConnections;
struct IEnumMonikerVtbl;
struct IEnumOLEVERBVtbl;
struct IEnumSTATPROPSTG;
struct IEnumSTATSTGVtbl;
struct IEnumUnknownVtbl;
struct IEnumVARIANTVtbl;
struct IExtractIconVtbl;
struct IOleAdviseHolder;
struct IOleInPlaceFrame;
struct IPSFactoryBuffer;
struct IPersistFileVtbl;
struct IPictureDispVtbl;
struct IPropertyBagVtbl;
struct IPropertyStorage;
struct IRichEditOleVtbl;
struct IRootStorageVtbl;
struct IShellFolderVtbl;
struct ISimpleFrameSite;
struct IViewObject2Vtbl;
struct _AE_RESACCESSREJ;
struct _CHARDEVQ_INFO_0;
struct _CHARDEVQ_INFO_1;
struct _DSKTLSYSTEMTIME;
struct _GENERIC_MAPPING;
struct _GROUP_INFO_1002;
struct _GROUP_INFO_1005;
struct _IMAGEHLP_MODULE;
struct _IMAGEHLP_SYMBOL;
struct _MONITOR_INFO_1A;
struct _MONITOR_INFO_1W;
struct _MONITOR_INFO_2A;
struct _MONITOR_INFO_2W;
struct _NETLOGON_INFO_1;
struct _NETLOGON_INFO_2;
struct _NETLOGON_INFO_3;
struct _NOTIFYICONDATAA;
struct _NOTIFYICONDATAW;
struct _PERF_DATA_BLOCK;
struct _PRINTER_INFO_1A;
struct _PRINTER_INFO_1W;
struct _PRINTER_INFO_2A;
struct _PRINTER_INFO_2W;
struct _PRINTER_INFO_4A;
struct _PRINTER_INFO_4W;
struct _PRINTER_INFO_5A;
struct _PRINTER_INFO_5W;
struct _REASSIGN_BLOCKS;
struct _SERVER_INFO_100;
struct _SERVER_INFO_101;
struct _SERVER_INFO_102;
struct _SERVER_INFO_402;
struct _SERVER_INFO_403;
struct _SERVER_INFO_502;
struct _SERVER_INFO_503;
struct _SERVER_INFO_598;
struct _SERVER_INFO_599;
struct _SESSION_INFO_10;
struct _SHARE_INFO_1004;
struct _SHARE_INFO_1006;
struct _SHARE_INFO_1501;
struct _SHFILEOPSTRUCTA;
struct _SHFILEOPSTRUCTW;
struct _TT_HITTESTINFOA;
struct _TT_HITTESTINFOW;
struct _USER_OTHER_INFO;
struct _VTableProvStruc;
struct _WIN32_STREAM_ID;
struct _WINDOWPLACEMENT;
struct _WIN_CERTIFICATE;
struct _WKSTA_INFO_1010;
struct _WKSTA_INFO_1011;
struct _WKSTA_INFO_1012;
struct _WKSTA_INFO_1013;
struct _WKSTA_INFO_1018;
struct _WKSTA_INFO_1023;
struct _WKSTA_INFO_1027;
struct _WKSTA_INFO_1028;
struct _WKSTA_INFO_1032;
struct _WKSTA_INFO_1033;
struct _WKSTA_INFO_1041;
struct _WKSTA_INFO_1042;
struct _WKSTA_INFO_1043;
struct _WKSTA_INFO_1044;
struct _WKSTA_INFO_1045;
struct _WKSTA_INFO_1046;
struct _WKSTA_INFO_1047;
struct _WKSTA_INFO_1048;
struct _WKSTA_INFO_1049;
struct _WKSTA_INFO_1050;
struct _WKSTA_INFO_1051;
struct _WKSTA_INFO_1052;
struct _WKSTA_INFO_1053;
struct _WKSTA_INFO_1054;
struct _WKSTA_INFO_1055;
struct _WKSTA_INFO_1056;
struct _WKSTA_INFO_1057;
struct _WKSTA_INFO_1058;
struct _WKSTA_INFO_1059;
struct _WKSTA_INFO_1060;
struct _WKSTA_INFO_1061;
struct _WKSTA_INFO_1062;
struct _WSANSClassInfoA;
struct _WSANSClassInfoW;
struct _ensaveclipboard;
struct tagACCESSTIMEOUT;
struct tagANIMATIONINFO;
struct tagCANDIDATEFORM;
struct tagCANDIDATELIST;
struct tagCAPROPVARIANT;
struct tagCBT_CREATEWND;
struct tagDEBUGHOOKINFO;
struct tagDRVCONFIGINFO;
struct tagEMRGDICOMMENT;
struct tagEMRPOLYDRAW16;
struct tagEMRPOLYLINE16;
struct tagEMRSTRETCHBLT;
struct tagENHMETAHEADER;
struct tagENHMETARECORD;
struct tagFONTSIGNATURE;
struct tagHIGHCONTRASTA;
struct tagHIGHCONTRASTW;
struct tagINTERFACEDATA;
struct tagINTERFACEINFO;
struct tagMCHITTESTINFO;
struct tagMCI_SET_PARMS;
struct tagMENUITEMINFOA;
struct tagMENUITEMINFOW;
struct tagMIXERCONTROLA;
struct tagMIXERCONTROLW;
struct tagMODULEENTRY32;
struct tagMULTIKEYHELPA;
struct tagMULTIKEYHELPW;
struct tagOLEUICONVERTA;
struct tagOLEUICONVERTW;
struct tagProxyFileInfo;
struct tagREGISTERWORDA;
struct tagREGISTERWORDW;
struct tagRPCOLEMESSAGE;
struct tagSTORAGELAYOUT;
struct tagTBSAVEPARAMSA;
struct tagTBSAVEPARAMSW;
struct tagTHREADENTRY32;
struct DRVCONFIGINFOEX;
struct HWINEVENTHOOK__;
struct IAdviseSinkVtbl;
struct IClassActivator;
struct IClientSecurity;
struct ICommDlgBrowser;
struct IDataObjectVtbl;
struct IDropSourceVtbl;
struct IDropTargetVtbl;
struct IEnumHLITEMVtbl;
struct IEnumIDListVtbl;
struct IEnumStringVtbl;
struct IFileViewerSite;
struct IFileViewerVtbl;
struct IOleControlSite;
struct IOleControlVtbl;
struct IOleUILinkInfoA;
struct IOleUILinkInfoW;
struct IPersistStorage;
struct IProgressNotify;
struct IRAPIStreamVtbl;
struct IRpcProxyBuffer;
struct IRunnableObject;
struct IServerSecurity;
struct IShellLinkAVtbl;
struct IShellLinkWVtbl;
struct IShellView2Vtbl;
struct IStdMarshalInfo;
struct IViewObjectVtbl;
struct _ADAPTER_STATUS;
struct _ADDJOB_INFO_1A;
struct _ADDJOB_INFO_1W;
struct _AE_SERVICESTAT;
struct _BITMAPCOREINFO;
struct _CHARDEV_INFO_0;
struct _CHARDEV_INFO_1;
struct _DISCDLGSTRUCTA;
struct _DISCDLGSTRUCTW;
struct _DISK_HISTOGRAM;
struct _DRIVER_INFO_1A;
struct _DRIVER_INFO_1W;
struct _DRIVER_INFO_2A;
struct _DRIVER_INFO_2W;
struct _DRIVER_INFO_3A;
struct _DRIVER_INFO_3W;
struct _EVENTLOGRECORD;
struct _FILEDESCRIPTOR;
struct _HD_HITTESTINFO;
struct _HYPER_SIZEDARR;
struct _LV_HITTESTINFO;
struct _MIDL_STUB_DESC;
struct _OSVERSIONINFOA;
struct _OSVERSIONINFOW;
struct _PRINTER_INFO_3;
struct _PROPSHEETPAGEA;
struct _PROPSHEETPAGEW;
struct _PUBLICKEYSTRUC;
struct _REPL_INFO_1000;
struct _REPL_INFO_1001;
struct _REPL_INFO_1002;
struct _REPL_INFO_1003;
struct _SCONTEXT_QUEUE;
struct _SERVICE_INFO_0;
struct _SERVICE_INFO_1;
struct _SERVICE_INFO_2;
struct _SERVICE_STATUS;
struct _SESSION_BUFFER;
struct _SESSION_HEADER;
struct _SESSION_INFO_0;
struct _SESSION_INFO_1;
struct _SESSION_INFO_2;
struct _SHARE_INFO_502;
struct _SHORT_SIZEDARR;
struct _SOCKET_ADDRESS;
struct _SV2CVW2_PARAMS;
struct _TC_HITTESTINFO;
struct _TC_ITEMHEADERA;
struct _TC_ITEMHEADERW;
struct _TV_HITTESTINFO;
union _ULARGE_INTEGER;
struct _USER_INFO_1003;
struct _USER_INFO_1005;
struct _USER_INFO_1006;
struct _USER_INFO_1007;
struct _USER_INFO_1008;
struct _USER_INFO_1009;
struct _USER_INFO_1010;
struct _USER_INFO_1011;
struct _USER_INFO_1012;
struct _USER_INFO_1013;
struct _USER_INFO_1014;
struct _USER_INFO_1017;
struct _USER_INFO_1018;
struct _USER_INFO_1020;
struct _USER_INFO_1023;
struct _USER_INFO_1024;
struct _USER_INFO_1025;
struct _USER_INFO_1051;
struct _USER_INFO_1052;
struct _USER_INFO_1053;
struct _WKSTA_INFO_100;
struct _WKSTA_INFO_101;
struct _WKSTA_INFO_102;
struct _WKSTA_INFO_302;
struct _WKSTA_INFO_402;
struct _WKSTA_INFO_502;
struct _exception_list;
struct _repastespecial;
struct tagCCSTYLEFLAGA;
struct tagCCSTYLEFLAGW;
struct tagCHOOSECOLORA;
struct tagCHOOSECOLORW;
struct tagCIEXYZTRIPLE;
struct tagCREATESTRUCT;
struct tagCUSTDATAITEM;
struct tagCWPRETSTRUCT;
struct tagEMRCREATEPEN;
struct tagEMRINVERTRGN;
struct tagEMRRESTOREDC;
struct tagEMRROUNDRECT;
struct tagEMRSETPIXELV;
struct tagENUMLOGFONTA;
struct tagENUMLOGFONTW;
struct tagGCP_RESULTSA;
struct tagGCP_RESULTSW;
struct tagHELPWININFOA;
struct tagHELPWININFOW;
struct tagICONMETRICSA;
struct tagICONMETRICSW;
struct tagMETAFILEPICT;
struct tagMIDIOUTCAPSA;
struct tagMIDIOUTCAPSW;
struct tagPALETTEENTRY;
struct tagPROPPAGEINFO;
struct tagRemSTGMEDIUM;
struct tagSOUNDSENTRYA;
struct tagSOUNDSENTRYW;
struct tagTOOLTIPTEXTA;
struct tagTOOLTIPTEXTW;
struct tagWAVEOUTCAPSA;
struct tagWAVEOUTCAPSW;
struct HENHMETAFILE__;
struct IClassFactory2;
struct IEnumFORMATETC;
struct IErrorInfoVtbl;
struct IFillLockBytes;
struct ILayoutStorage;
struct ILockBytesVtbl;
struct IMallocSpyVtbl;
struct IMessageFilter;
struct IOleClientSite;
struct IOleObjectVtbl;
struct IOleUIObjInfoA;
struct IOleUIObjInfoW;
struct IOleWindowVtbl;
struct IPersistFolder;
struct IPersistMemory;
struct IPersistStream;
struct IPropertyPage2;
struct IRpcStubBuffer;
struct IShellIconVtbl;
struct IShellViewVtbl;
struct _ACCESS_INFO_0;
struct _ACCESS_INFO_1;
struct _ACTION_HEADER;
struct _AE_SESSLOGOFF;
struct _AUTH_IDENTITY;
struct _BYTE_SIZEDARR;
struct _CONFIG_INFO_0;
struct _DISK_GEOMETRY;
struct _HANDLE_INFO_1;
struct _IMAGEHLP_LINE;
union _LARGE_INTEGER;
struct _LONG_SIZEDARR;
struct _MODEMSETTINGS;
struct _NETINFOSTRUCT;
struct _OLESTREAMVTBL;
struct _PRIVILEGE_SET;
struct _PROV_ENUMALGS;
struct _RGNDATAHEADER;
struct _STAT_SERVER_0;
struct _TOKEN_CONTROL;
struct _encorrecttext;
struct _tagSTACKFRAME;
struct _wireSAFEARRAY;
struct external_pinfo;
struct tagCHOOSEFONTA;
struct tagCHOOSEFONTW;
struct tagCOLORSCHEME;
struct tagCONNECTDATA;
struct tagCONTROLINFO;
struct tagCONVCONTEXT;
struct tagCURSORSHAPE;
struct tagEMRANGLEARC;
struct tagEMRFILLPATH;
struct tagEMRFRAMERGN;
struct tagEMRPOLYDRAW;
struct tagEMRPOLYLINE;
struct tagEXTLOGFONTA;
struct tagEXTLOGFONTW;
struct tagHANDLETABLE;
struct tagHEAPENTRY32;
struct tagKERNINGPAIR;
struct tagMDINEXTMENU;
struct tagMIDIINCAPSA;
struct tagMIDIINCAPSW;
struct tagNEWCPLINFOA;
struct tagNEWCPLINFOW;
struct tagOCPFIPARAMS;
struct tagPAINTSTRUCT;
struct tagPARAMDESCEX;
struct tagPROPVARIANT;
struct tagSERIALKEYSA;
struct tagSERIALKEYSW;
struct tagSTATPROPSTG;
struct tagSTYLESTRUCT;
struct tagTBADDBITMAP;
struct tagTEXTMETRICA;
struct tagTEXTMETRICW;
struct tagTTPOLYCURVE;
struct tagWAVEINCAPSA;
struct tagWAVEINCAPSW;
struct waveformat_tag;
struct HCOLORSPACE__;
struct IClassFactory;
struct IContextMenu2;
struct ICopyHookVtbl;
struct IDispatchVtbl;
struct IEnumSTATDATA;
struct IErrorLogVtbl;
struct IFontDispVtbl;
struct IOleContainer;
struct IPropertyPage;
struct IShellBrowser;
struct IShellExtInit;
struct ITypeCompVtbl;
struct ITypeInfoVtbl;
struct _AE_CLOSEFILE;
struct _AE_CONNSTART;
struct _AE_NETLOGOFF;
struct _AE_RESACCESS;
struct _AE_SESSLOGON;
struct _AE_SESSPWERR;
struct _AE_SRVSTATUS;
struct _COMMTIMEOUTS;
struct _COSERVERINFO;
struct _DISK_LOGGING;
struct _FORM_INFO_1A;
struct _FORM_INFO_1W;
struct _GLYPHMETRICS;
struct _GROUP_INFO_0;
struct _GROUP_INFO_1;
struct _GROUP_INFO_2;
struct _IMAGE_SYMBOL;
struct _INPUT_RECORD;
struct _LOADED_IMAGE;
struct _LV_DISPINFOA;
struct _LV_DISPINFOW;
struct _LV_FINDINFOA;
struct _LV_FINDINFOW;
struct _MEMORYSTATUS;
struct _MODEMDEVCAPS;
struct _NETRESOURCEA;
struct _NETRESOURCEW;
struct _NM_TREEVIEWA;
struct _NM_TREEVIEWW;
struct _PORT_INFO_1A;
struct _PORT_INFO_1W;
struct _PORT_INFO_2A;
struct _PORT_INFO_2W;
struct _PORT_INFO_3A;
struct _PORT_INFO_3W;
struct _SHARE_INFO_0;
struct _SHARE_INFO_1;
struct _SHARE_INFO_2;
struct _STARTUPINFOA;
struct _STARTUPINFOW;
struct _TAPE_PREPARE;
struct _TOKEN_GROUPS;
struct _TOKEN_SOURCE;
struct _TV_DISPINFOA;
struct _TV_DISPINFOW;
struct _USER_INFO_10;
struct _USER_INFO_11;
struct _USER_INFO_20;
struct _USER_INFO_21;
struct _USER_INFO_22;
struct _WSAQuerySetA;
struct _WSAQuerySetW;
struct _charformat2a;
struct _charformat2w;
struct _currencyfmtA;
struct _currencyfmtW;
struct joyinfoex_tag;
struct midievent_tag;
struct tWAVEFORMATEX;
struct tagBIND_OPTS2;
struct tagBITMAPINFO;
struct tagCABSTRBLOB;
struct tagCACLIPDATA;
struct tagCAFILETIME;
struct tagCALPOLESTR;
struct tagDIBSECTION;
struct tagDISPPARAMS;
struct tagDROPSTRUCT;
struct tagEMRELLIPSE;
struct tagEMRFILLRGN;
struct tagEMRMASKBLT;
struct tagFILTERKEYS;
struct tagHEAPLIST32;
struct tagLOGPALETTE;
struct tagMETAHEADER;
struct tagMETARECORD;
struct tagMETHODDATA;
struct tagMINMAXINFO;
struct tagMIXERCAPSA;
struct tagMIXERCAPSW;
struct tagMIXERLINEA;
struct tagMIXERLINEW;
struct tagNMDAYSTATE;
struct tagOLEUIBUSYA;
struct tagOLEUIBUSYW;
struct tagSCROLLINFO;
struct tagSTICKYKEYS;
struct tagTOGGLEKEYS;
struct HIMAGELIST__;
struct IAdviseSink2;
struct IBindCtxVtbl;
struct IChannelHook;
struct IContextMenu;
struct IEnumMoniker;
struct IEnumOLEVERB;
struct IEnumSTATSTG;
struct IEnumUnknown;
struct IEnumVARIANT;
struct IExtractIcon;
struct IMarshalVtbl;
struct IMonikerVtbl;
struct IPersistFile;
struct IPersistVtbl;
struct IPictureDisp;
struct IPictureVtbl;
struct IPropertyBag;
struct IROTDataVtbl;
struct IRichEditOle;
struct IRootStorage;
struct IShellFolder;
struct IStorageVtbl;
struct ITypeLibVtbl;
struct IUnknownVtbl;
struct IViewObject2;
struct _ACCESS_LIST;
struct _AE_CONNSTOP;
struct _AE_NETLOGON;
struct _AFPROTOCOLS;
struct _AUDIT_ENTRY;
struct _BIN_RESULTS;
struct _COMM_CONFIG;
struct _CSADDR_INFO;
struct _DEBUG_EVENT;
struct _DISK_RECORD;
struct _DOC_INFO_1A;
struct _DOC_INFO_1W;
struct _DOC_INFO_2A;
struct _DOC_INFO_2W;
struct _FILE_INFO_2;
struct _FILE_INFO_3;
struct _HSE_TF_INFO;
struct _JOB_INFO_1A;
struct _JOB_INFO_1W;
struct _JOB_INFO_2A;
struct _JOB_INFO_2W;
struct _NAME_BUFFER;
struct _NM_LISTVIEW;
struct _REPL_INFO_0;
struct _RPC_MESSAGE;
struct _RPC_VERSION;
struct _SHFILEINFOA;
struct _SHFILEINFOW;
struct _SYSTEM_INFO;
struct _TOKEN_OWNER;
struct _USER_INFO_0;
struct _USER_INFO_1;
struct _USER_INFO_2;
struct _USER_INFO_3;
struct _UUID_VECTOR;
struct _WNDCLASSEXA;
struct _WNDCLASSEXW;
struct _charformatw;
struct _devicemodeA;
struct _devicemodeW;
struct _endropfiles;
struct _enprotected;
struct _findtextexA;
struct _findtextexW;
struct _formatrange;
struct _punctuation;
struct _wireVARIANT;
struct drand48_data;
struct tagABORTPATH;
struct tagARRAYDESC;
struct tagBIND_OPTS;
struct tagCWPSTRUCT;
struct tagEMRBITBLT;
struct tagEMRFORMAT;
struct tagEMRLINETO;
struct tagEMRPLGBLT;
struct tagEXCEPINFO;
struct tagEXTLOGPEN;
struct tagFORMATETC;
struct tagPARAMDATA;
struct tagPARAMDESC;
struct tagREBARINFO;
struct tagRGBTRIPLE;
struct tagSAFEARRAY;
struct tagSTGMEDIUM;
struct tagSTYLEBUFA;
struct tagSTYLEBUFW;
struct tagTBNOTIFYA;
struct tagTBNOTIFYW;
struct tagTOOLINFOA;
struct tagTOOLINFOW;
struct tagTPMPARAMS;
struct timecaps_tag;
struct API_VERSION;
struct HCONVLIST__;
struct HINSTANCE__;
struct HMETAFILE__;
struct HMIDISTRM__;
struct HMIXEROBJ__;
struct HTERMINAL__;
struct HTREEITEM__;
struct IAdviseSink;
struct IDataObject;
struct IDropSource;
struct IDropTarget;
struct IEnumHLITEM;
struct IEnumIDList;
struct IEnumString;
struct IFileViewer;
struct IMallocVtbl;
struct IOleControl;
struct IRAPIStream;
struct IShellLinkA;
struct IShellLinkW;
struct IShellView2;
struct IStreamVtbl;
struct IViewObject;
struct SC_HANDLE__;
struct _ACE_HEADER;
struct _AE_CONNREJ;
struct _AE_GENERIC;
struct _AE_LOCKOUT;
struct _AppBarData;
struct _COAUTHINFO;
struct _HD_NOTIFYA;
struct _HD_NOTIFYW;
struct _ITEMIDLIST;
struct _LIST_ENTRY;
struct _LV_COLUMNA;
struct _LV_COLUMNW;
struct _LV_KEYDOWN;
struct _MODULEINFO;
struct _MSG_INFO_0;
struct _MSG_INFO_1;
struct _OVERLAPPED;
struct _POINTFLOAT;
struct _RPC_POLICY;
struct _SMALL_RECT;
struct _SYSTEMTIME;
struct _TAPE_ERASE;
struct _TC_KEYDOWN;
struct _TOKEN_USER;
struct _TV_KEYDOWN;
struct _USE_INFO_0;
struct _USE_INFO_1;
struct _USE_INFO_2;
struct _WSAVersion;
struct _browseinfo;
struct _charformat;
struct _editstream;
struct _numberfmtA;
struct _numberfmtW;
struct _paraformat;
struct _tagADDRESS;
struct _textrangew;
struct joyinfo_tag;
struct midihdr_tag;
struct random_data;
struct sockaddr_in;
struct tagAUXCAPSA;
struct tagAUXCAPSW;
struct tagBSTRBLOB;
struct tagCALPWSTR;
struct tagCCSTYLEA;
struct tagCCSTYLEW;
struct tagCLIPDATA;
struct tagCONVINFO;
struct tagCUSTDATA;
struct tagDEVNAMES;
struct tagELEMDESC;
struct tagEVENTMSG;
struct tagFONTDESC;
struct tagFUNCDESC;
struct tagHELPINFO;
struct tagJOYCAPSA;
struct tagJOYCAPSW;
struct tagLOGBRUSH;
struct tagLOGFONTA;
struct tagLOGFONTW;
struct tagMULTI_QI;
struct tagPELARRAY;
struct tagPICTDESC;
struct tagPROPSPEC;
struct tagSTATDATA;
struct tagTLIBATTR;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct wavehdr_tag;
struct HDDEDATA__;
struct HMIDIOUT__;
struct HMONITOR__;
struct HPALETTE__;
struct HWAVEOUT__;
struct IErrorInfo;
struct ILockBytes;
struct IMallocSpy;
struct IOleObject;
struct IOleWindow;
struct IShellIcon;
struct IShellView;
struct _AE_ACCLIM;
struct _AE_ACLMOD;
struct _AE_UASMOD;
struct _BIN_COUNT;
struct _BIN_RANGE;
struct _CHAR_INFO;
struct _DROPFILES;
struct _ERROR_LOG;
struct _HD_LAYOUT;
struct _IMAGEINFO;
struct _LANA_ENUM;
struct _LDT_ENTRY;
struct _NMHEADERA;
struct _NMHEADERW;
struct _NM_UPDOWN;
struct _NRESARRAY;
struct _OFNOTIFYA;
struct _OFNOTIFYW;
struct _OLESTREAM;
struct _POLYTEXTA;
struct _POLYTEXTW;
struct _PSHNOTIFY;
struct _RPC_IF_ID;
struct _RSAPUBKEY;
struct _STD_ALERT;
struct _TV_SORTCB;
struct _WINDOWPOS;
struct _WNDCLASSA;
struct _WNDCLASSW;
struct _charrange;
struct _compcolor;
struct _findtextA;
struct _findtextW;
struct _msgfilter;
struct _reqresize;
struct _selchange;
struct _textrange;
struct mmtime_tag;
union tagBINDPTR;
struct tagCACLSID;
struct tagCADWORD;
struct tagCALPSTR;
struct tagCASCODE;
struct tagCCINFOA;
struct tagCCINFOW;
struct tagCPLINFO;
struct tagEMRTEXT;
struct tagHSZPAIR;
struct tagIDLDESC;
struct tagLICINFO;
struct tagOLEVERB;
struct tagPBRANGE;
struct tagPOINTFX;
struct tagRGBQUAD;
struct tagSTATSTG;
struct tagVARDESC;
struct tagVARIANT;
struct value_entA;
struct value_entW;
struct HBITMAP__;
struct HMIDIIN__;
struct HWAVEIN__;
struct HWINSTA__;
struct ICopyHook;
struct IDispatch;
struct IErrorLog;
struct IFontDisp;
struct IFontVtbl;
struct ITypeComp;
struct ITypeInfo;
struct _ABCFLOAT;
struct _COLORMAP;
struct _COMMPROP;
struct _FILETIME;
struct _FPO_DATA;
struct _HD_ITEMA;
struct _HD_ITEMW;
struct _ICONINFO;
struct _LV_ITEMA;
struct _LV_ITEMW;
struct _MMCKINFO;
struct _MMIOINFO;
struct _OFSTRUCT;
struct _PERF_BIN;
struct _RAPIINIT;
struct _RIP_INFO;
struct _SHITEMID;
struct _TBBUTTON;
struct _TC_ITEMA;
struct _TC_ITEMW;
struct _TV_ITEMA;
struct _TV_ITEMW;
struct _flowspec;
struct _reobject;
struct sockproto;
struct tagBITMAP;
struct tagCABOOL;
struct tagCABSTR;
struct tagCADATE;
struct tagCAUUID;
struct tagCIEXYZ;
struct tagEMRARC;
struct tagEMREOF;
struct tagHLITEM;
struct tagLOGPEN;
struct tagPANOSE;
struct tagPOINTF;
struct tagPOINTS;
struct tagRemSNB;
struct tagTCITEM;
struct HACCEL__;
struct HBRUSH__;
struct HMIXER__;
struct IBindCtx;
struct IMarshal;
struct IMoniker;
struct IPersist;
struct IPicture;
struct IROTData;
struct IStorage;
struct ITypeLib;
struct IUnknown;
struct _AT_ENUM;
struct _AT_INFO;
struct _COMSTAT;
struct _CONTEXT;
struct _IO_FILE;
struct _RGNDATA;
struct _UDACCEL;
struct protoent;
struct sockaddr;
struct tagACCEL;
struct tagCADBL;
struct tagCAFLT;
struct tagNMHDR;
struct tagPOINT;
struct tagRECTL;
struct timespec;
struct HCONV__;
struct HDESK__;
struct HDROP__;
struct HDRVR__;
struct HFONT__;
struct HGLRC__;
struct HHOOK__;
struct HICON__;
struct HMENU__;
struct HMIDI__;
struct HMMIO__;
struct HRSRC__;
struct HTASK__;
struct HWAVE__;
struct IMalloc;
struct IStream;
struct WSAData;
struct _KDHELP;
struct _NT_TIB;
struct _STRRET;
struct _WSABUF;
struct _cpinfo;
struct hostent;
struct in_addr;
struct ip_mreq;
struct servent;
struct tagCACY;
struct tagCAUB;
struct tagCAUH;
struct tagCAUI;
struct tagCAUL;
struct tagCRGB;
struct tagOFNA;
struct tagOFNW;
struct tagOIFI;
struct tagPSDA;
struct tagPSDW;
struct tagRECT;
struct tagSIZE;
struct timeval;
struct HDWP__;
struct HKEY__;
struct HPEN__;
struct HRGN__;
struct HSTR__;
struct HWND__;
struct _COORD;
struct _FIXED;
struct _XFORM;
struct fd_set;
struct linger;
struct netent;
struct rlimit;
struct rusage;
struct tagCAH;
struct tagCAI;
struct tagCAL;
struct tagDEC;
struct tagEMR;
struct tagMSG;
struct tagPDA;
struct tagPDW;
struct HDC__;
struct HKL__;
struct HSZ__;
struct IFont;
struct _BLOB;
struct _GUID;
struct _HLOG;
struct _MAT2;
struct rdget;
union tagCY;
struct _ABC;
struct _ACL;
struct _DCB;
struct _IDA;
struct _NCB;
struct _SID;
struct rdop;
struct stat;
struct acl;
struct tm;

struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___2D36EF4657A2B130C0422CAF150A0160___B2E03ED94C06E2E681F8D03FF7FF5CB3 {unsigned int OffsetToDirectory : 31;unsigned int DataIsDirectory : 1;};
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___444826C0724C63C16186AAF04EE0E133___6E35CCFC02D81E31BD4C6BEDD77CB20A {unsigned int NameOffset : 31;unsigned int NameIsString : 1;};
struct _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097___A3BAC9569453E46653D4C53B8339026E {unsigned int BaseMid : 8;unsigned int Type : 5;unsigned int Dpl : 2;unsigned int Pres : 1;unsigned int LimitHi : 4;unsigned int Sys : 1;unsigned int Reserved_0 : 1;unsigned int Default_Big : 1;unsigned int Granularity : 1;unsigned int BaseHi : 8;};
struct _1C4035FDEAFFF0FCE26E66A96F6BBEB4___20EFCB5FAA72B851457C6BAA266EC02E {int __lock;unsigned int __futex;unsigned long long __total_seq;unsigned long long __wakeup_seq;unsigned long long __woken_seq;void *__mutex;unsigned int __nwaiters;unsigned int __broadcast_seq;};
struct _738A8E8AC168E5B4B1A53622C9D7048F___D6587128ED4C013AF36DCCA432989BD5 {int __lock;unsigned int __nr_readers;unsigned int __readers_wakeup;unsigned int __writer_wakeup;unsigned int __nr_readers_queued;unsigned int __nr_writers_queued;unsigned int __flags;int __writer;};
struct _FULL_PTR_XLAT_TABLES___CFFA09E862963CB530A7E2871127FDA7 {void **XlatTable;unsigned char *StateTable;unsigned int NumberOfEntries;};
typedef struct _E3900F4E8C66B34C84E740787FDB0DE9 *LPGOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE;
typedef struct _E3900F4E8C66B34C84E740787FDB0DE9 GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE;
struct tagCY___983F061E0B702DD8AE0B4B955735A6A3 {unsigned int Lo;int Hi;};
enum MACRO_OLEUI_IOERR_SRCDATAOBJECTINVALID {OLEUI_IOERR_SRCDATAOBJECTINVALID = 116,OLEUI_IOERR_ARRPASTEENTRIESINVALID = 117,OLEUI_IOERR_ARRLINKTYPESINVALID = 118,OLEUI_PSERR_CLIPBOARDCHANGED = 119,OLEUI_PSERR_GETCLIPBOARDFAILED = 120,OLEUI_ELERR_LINKCNTRNULL = 116,OLEUI_ELERR_LINKCNTRINVALID = 117,};
typedef struct _C25693052C43ED6AA003F87DB66344AA *LPGOPHER_ORGANIZATION_ATTRIBUTE_TYPE;
typedef struct _7909BF26B031C365F3B32F82E7366E93 *LPGOPHER_SCORE_RANGE_ATTRIBUTE_TYPE;
typedef struct _C25693052C43ED6AA003F87DB66344AA GOPHER_ORGANIZATION_ATTRIBUTE_TYPE;
enum _0AEECC1A63E1B2F73D11FBA74082B60B {PROXY_CALCSIZE = 0x0,PROXY_GETBUFFER = 0x1,PROXY_MARSHAL = 0x2,PROXY_SENDRECEIVE = 0x3,PROXY_UNMARSHAL = 0x4,};
enum _1C680F58C637127EDD3418D9E8DB9708 {SLGP_SHORTPATH = 0x1,SLGP_UNCPRIORITY = 0x2,};
enum _25D95637D5496764A31AF6B682C31248 {SVUIA_DEACTIVATE = 0x0,SVUIA_ACTIVATE_NOFOCUS = 0x1,SVUIA_ACTIVATE_FOCUS = 0x2,SVUIA_INPLACEACTIVATE = 0x3,};
enum _2740A388F0F98F16D48918246162BF66 {PID_NOT_IN_USE = 0x0,PID_IN_USE = 0x1,PID_ZOMBIE = 0x2,PID_STOPPED = 0x4,PID_TTYIN = 0x8,PID_TTYOU = 0x10,PID_ORPHANED = 0x20,PID_ACTIVE = 0x40,PID_CYGPARENT = 0x80,PID_SPLIT_HEAP = 0x100,PID_CLEAR = 0x200,PID_SOCKETS_USED = 0x400,PID_INITIALIZING = 0x800,PID_USETTY = 0x1000,PID_REPARENT = 0x2000,};
enum _2A6324B8E10DEE2666A6A5498DFC667B {XLAT_SERVER = 0x1,XLAT_CLIENT = 0x2,};
enum _2B1CE62DD563DAD7D14A60B8BDAD5F2C {CW_LOCK_PINFO = 0x0,CW_UNLOCK_PINFO = 0x1,CW_GETTHREADNAME = 0x2,CW_GETPINFO = 0x3,CW_SETPINFO = 0x4,CW_SETTHREADNAME = 0x5,CW_GETVERSIONINFO = 0x6,CW_READ_V1_MOUNT_TABLES = 0x7,};
enum _2C151496C3DA8CBF879EB97ABE7952AE {BestEffortService = 0x0,ControlledLoadService = 0x1,PredictiveService = 0x2,GuaranteedDelayService = 0x3,GuaranteedService = 0x4,};
struct _3FA64165D15A4602C29B2D9B0DA4A5E9 {void *pad[2];void *userContext;};
struct _44840292B0FD4432816E14C2BB6B9957 {unsigned int __val[32];};
struct _61B889227CECAFED4E8A477D21B34BC9 {unsigned short reserved : 14;unsigned short fDeferUpd : 1;unsigned short fAckReq : 1;short cfFormat;};
struct _62EC1DAD6DB92F8723AD0A50B2259449 {unsigned char *UserName;unsigned char *ComputerName;unsigned short Privilege;unsigned int AuthFlags;};
enum _76850748ECCAC6C51C363E520FD73CC6 {SLR_NO_UI = 0x1,SLR_ANY_MATCH = 0x2,SLR_UPDATE = 0x4,};
union _781B27F37A2DA3C5D0084E69F313DC7D {char __size[36];int __align;};
struct _7ADE47B00230EF5EBD78FEDFCEB95499 {unsigned short unused : 13;unsigned short fRelease : 1;unsigned short fDeferUpd : 1;unsigned short fAckReq : 1;short cfFormat;};
union _7B6D3CF7C92E6402FF2DDB4E46F022F4 {char __size[8];int __align;};
enum _8C57D1DDA788D6050A7C554DBD1EB1AC {AddrMode1616 = 0x0,AddrMode1632 = 0x1,AddrModeReal = 0x2,AddrModeFlat = 0x3,};
struct _923DA7BE11DCB482D02B0566D8DB27AB {unsigned short bAppReturnCode : 8;unsigned short reserved : 6;unsigned short fBusy : 1;unsigned short fAck : 1;};
enum _92E343B9497C79C1DA0A7F8171886153 {INTERNET_SCHEME_PARTIAL = 0xFFFFFFFE,INTERNET_SCHEME_UNKNOWN = 0xFFFFFFFF,INTERNET_SCHEME_DEFAULT = 0x0,INTERNET_SCHEME_FTP = 0x1,INTERNET_SCHEME_GOPHER = 0x2,INTERNET_SCHEME_HTTP = 0x3,INTERNET_SCHEME_HTTPS = 0x4,INTERNET_SCHEME_FILE = 0x5,INTERNET_SCHEME_NEWS = 0x6,INTERNET_SCHEME_MAILTO = 0x7,INTERNET_SCHEME_SOCKS = 0x8,INTERNET_SCHEME_FIRST = 0x1,INTERNET_SCHEME_LAST = 0x8,};
struct _9722585E737591D9DBBFC1CA80083F53 {int __val[2];};
struct _979FA3DE6ECCF956231BFC297C4278E6 {int quot;int rem;};
enum _A236D2AFA7C04579BAEAA81A8822D685 {FWF_AUTOARRANGE = 0x1,FWF_ABBREVIATEDNAMES = 0x2,FWF_SNAPTOGRID = 0x4,FWF_OWNERDATA = 0x8,FWF_BESTFITWINDOW = 0x10,FWF_DESKTOP = 0x20,FWF_SINGLESEL = 0x40,FWF_NOSUBFOLDERS = 0x80,FWF_TRANSPARENT = 0x100,FWF_NOCLIENTEDGE = 0x200,FWF_NOSCROLL = 0x400,FWF_ALIGNLEFT = 0x800,FWF_SINGLECLICKACTIVATE = 0x8000,};
enum _A53018422640A123E20F3CC4D8AD31A0 {FD_CLSID = 0x1,FD_SIZEPOINT = 0x2,FD_ATTRIBUTES = 0x4,FD_CREATETIME = 0x8,FD_ACCESSTIME = 0x10,FD_WRITESTIME = 0x20,FD_FILESIZE = 0x40,FD_LINKUI = 0x8000,};
struct _AD47B7B6770F26FF00FF8EF46A9765CE {unsigned int Count;unsigned int Stats[1];};
enum _B2CD58BB5E151C37D855099D3E2FDD5A {STUB_UNMARSHAL = 0x0,STUB_CALL_SERVER = 0x1,STUB_MARSHAL = 0x2,STUB_CALL_SERVER_NO_HRESULT = 0x3,};
enum _B7D1CDF80B7CC72DADF079F75B7264FC {SymNone = 0x0,SymCoff = 0x1,SymCv = 0x2,SymPdb = 0x3,SymExport = 0x4,SymDeferred = 0x5,SymSym = 0x6,};
enum _BF0F4415E1602A9FE3AFCAFCA10811A9 {FVM_ICON = 0x1,FVM_SMALLICON = 0x2,FVM_LIST = 0x3,FVM_DETAILS = 0x4,};
enum _CB602EA373DB1726843BBB2BC56002E4 {SBCMDID_ENABLESHOWTREE = 0x0,SBCMDID_SHOWCONTROL = 0x1,SBCMDID_CANCELNAVIGATION = 0x2,SBCMDID_MAYSAVECHANGES = 0x3,SBCMDID_SETHLINKFRAME = 0x4,SBCMDID_ENABLESTOP = 0x5,SBCMDID_OPTIONS = 0x6,};
struct _CC81E267BD8B32E89ADB7AE662C05BFA {int Dimension;unsigned int *BufferConformanceMark;unsigned int *BufferVarianceMark;unsigned int *MaxCountArray;unsigned int *OffsetArray;unsigned int *ActualCountArray;};
union _D1779CA5851A61401DD36BCDAF347214 {char __size[20];int __align;};
union _D1D0F511BF997F52624AFB2B0CE27B40 {char __size[4];int __align;};
enum _DD0F6943692FAA00BE15EC6A36A016BC {triUnchecked = 0x0,triChecked1 = 0x1,triGray = 0x2,};
enum _F5DE883C21C00D044D40D05491204D19 {SBSC_HIDE = 0x0,SBSC_SHOW = 0x1,SBSC_TOGGLE = 0x2,SBSC_QUERY = 0x3,};
typedef struct _7909BF26B031C365F3B32F82E7366E93 GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE;
typedef struct _B8380904D5E4DBEF1FA17159C4574D89 *LPGOPHER_ABSTRACT_ATTRIBUTE_TYPE;
typedef struct _DE8A226FBF6958721EC6E17746E96A38 *LPGOPHER_LOCATION_ATTRIBUTE_TYPE;
typedef struct _7F09F6AD7173E0292471C155D2885AEF *LPGOPHER_MOD_DATE_ATTRIBUTE_TYPE;
typedef struct _9EEC6D4C8F692379AA2A6356D0C3C3FC *LPGOPHER_PROVIDER_ATTRIBUTE_TYPE;
typedef struct _C0A2C8317C92AEC6C65405BB0D08D817 *LPGOPHER_TIMEZONE_ATTRIBUTE_TYPE;
typedef struct _793203A904263AF632B64217160A3CD4 *LPGOPHER_VERONICA_ATTRIBUTE_TYPE;
enum MACRO_TRANSPORT_QUALITYOFSERVICE {TRANSPORT_QUALITYOFSERVICE_PARMNUM = 201,TRANSPORT_NAME_PARMNUM = 202,};
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING *PIMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING IMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _60326525EFFC6265B33A0784E3C361D7 *LPGOPHER_UNKNOWN_ATTRIBUTE_TYPE;
typedef struct _098CCDCB9074DBE2AEBC1B4026CD72FD *LPGOPHER_VERSION_ATTRIBUTE_TYPE;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA *LPMIXERCONTROLDETAILS_LISTTEXTA;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW *LPMIXERCONTROLDETAILS_LISTTEXTW;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _B8380904D5E4DBEF1FA17159C4574D89 GOPHER_ABSTRACT_ATTRIBUTE_TYPE;
typedef struct _DE8A226FBF6958721EC6E17746E96A38 GOPHER_LOCATION_ATTRIBUTE_TYPE;
typedef struct _7F09F6AD7173E0292471C155D2885AEF GOPHER_MOD_DATE_ATTRIBUTE_TYPE;
typedef struct _9EEC6D4C8F692379AA2A6356D0C3C3FC GOPHER_PROVIDER_ATTRIBUTE_TYPE;
typedef struct _C0A2C8317C92AEC6C65405BB0D08D817 GOPHER_TIMEZONE_ATTRIBUTE_TYPE;
typedef struct _793203A904263AF632B64217160A3CD4 GOPHER_VERONICA_ATTRIBUTE_TYPE;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct tMIXERCONTROLDETAILS_UNSIGNED *LPMIXERCONTROLDETAILS_UNSIGNED;
typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD *PIMAGEHLP_DEFERRED_SYMBOL_LOAD;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR *PIMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA *PMIXERCONTROLDETAILS_LISTTEXTA;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW *PMIXERCONTROLDETAILS_LISTTEXTW;
enum mimeassociationdialog_in_flags {MIMEASSOCDLG_FL_REGISTER_ASSOC = 0x1,ALL_MIMEASSOCDLG_FLAGS = 0x1,};
typedef struct _60326525EFFC6265B33A0784E3C361D7 GOPHER_UNKNOWN_ATTRIBUTE_TYPE;
typedef struct _098CCDCB9074DBE2AEBC1B4026CD72FD GOPHER_VERSION_ATTRIBUTE_TYPE;
typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD IMAGEHLP_DEFERRED_SYMBOL_LOAD;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR IMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _E42E7BED0EE5193A4D0BC9D45E2008A3 *LPGOPHER_ADMIN_ATTRIBUTE_TYPE;
typedef struct _3FBC325AC5E1830BAC7DB9619C6C90C8 *LPGOPHER_SCORE_ATTRIBUTE_TYPE;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN *LPMIXERCONTROLDETAILS_BOOLEAN;
enum MACRO_TIME_NOMINUTESORSECONDS {TIME_NOMINUTESORSECONDS = 1,TIME_NOSECONDS = 2,TIME_NOTIMEMARKER = 4,TIME_FORCE24HOURFORMAT = 8,};
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXTA;
typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW MIXERCONTROLDETAILS_LISTTEXTW;
typedef struct _GENERIC_BINDING_ROUTINE_PAIR *PGENERIC_BINDING_ROUTINE_PAIR;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY *PIMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct tMIXERCONTROLDETAILS_UNSIGNED *PMIXERCONTROLDETAILS_UNSIGNED;
enum _SECURITY_IMPERSONATION_LEVEL {SecurityAnonymous = 0x0,SecurityIdentification = 0x1,SecurityImpersonation = 0x2,SecurityDelegation = 0x3,};
enum urlassociationdialog_in_flags {URLASSOCDLG_FL_USE_DEFAULT_NAME = 0x1,URLASSOCDLG_FL_REGISTER_ASSOC = 0x2,ALL_URLASSOCDLG_FLAGS = 0x3,};
typedef struct _GENERIC_BINDING_ROUTINE_PAIR GENERIC_BINDING_ROUTINE_PAIR;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _BY_HANDLE_FILE_INFORMATION *LPBY_HANDLE_FILE_INFORMATION;
typedef struct _21B90258E17C8B6D2BC61A88DF74B5FB *LPGOPHER_SITE_ATTRIBUTE_TYPE;
typedef struct _6950E4854C03824D44DF624674A695D1 *LPGOPHER_VIEW_ATTRIBUTE_TYPE;
typedef struct _INTERNET_CACHE_ENTRY_INFOA *LPINTERNET_CACHE_ENTRY_INFOA;
typedef struct _INTERNET_CACHE_ENTRY_INFOW *LPINTERNET_CACHE_ENTRY_INFOW;
typedef struct tMIXERCONTROLDETAILS_SIGNED *LPMIXERCONTROLDETAILS_SIGNED;
typedef struct _QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUSA;
typedef struct _QUERY_SERVICE_LOCK_STATUSW *LPQUERY_SERVICE_LOCK_STATUSW;
enum MACRO_MAX_JOYSTICKOEMVXDNAME {MAX_JOYSTICKOEMVXDNAME = 260,};
enum MACRO_MIXER_GETLINECONTROLSF {MIXER_GETLINECONTROLSF_ALL = 0,MIXER_GETLINECONTROLSF_ONEBYID = 1,MIXER_GETLINECONTROLSF_ONEBYTYPE = 2,MIXER_GETLINECONTROLSF_QUERYMASK = 15,MIXER_GETCONTROLDETAILSF_VALUE = 0,MIXER_GETCONTROLDETAILSF_LISTTEXT = 1,MIXER_GETCONTROLDETAILSF_QUERYMASK = 15,MIXER_SETCONTROLDETAILSF_VALUE = 0,MIXER_SETCONTROLDETAILSF_CUSTOM = 1,MIXER_SETCONTROLDETAILSF_QUERYMASK = 15,};
enum MACRO_PAGE_EXECUTE_WRITECOPY {PAGE_EXECUTE_WRITECOPY = 128,};
enum MACRO_POSTSCRIPT_PASSTHROUGH {POSTSCRIPT_PASSTHROUGH = 4115,};
enum MACRO_WSAEPROVIDERFAILEDINIT {WSAEPROVIDERFAILEDINIT = 10106,};
typedef struct tMIXERCONTROLDETAILS_UNSIGNED MIXERCONTROLDETAILS_UNSIGNED;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER *PIMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY *PIMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U *PIMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER *PIMAGE_SEPARATE_DEBUG_HEADER;
typedef struct tMIXERCONTROLDETAILS_BOOLEAN *PMIXERCONTROLDETAILS_BOOLEAN;
typedef struct _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;
typedef struct _E42E7BED0EE5193A4D0BC9D45E2008A3 GOPHER_ADMIN_ATTRIBUTE_TYPE;
typedef struct _3FBC325AC5E1830BAC7DB9619C6C90C8 GOPHER_SCORE_ATTRIBUTE_TYPE;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER IMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY IMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U IMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER IMAGE_SEPARATE_DEBUG_HEADER;
typedef struct _CREATE_PROCESS_DEBUG_INFO *LPCREATE_PROCESS_DEBUG_INFO;
typedef struct _30CC7D53408649846FD423BE19D3AD21 *LPGOPHER_ASK_ATTRIBUTE_TYPE;
typedef struct _FEF45AADF86B3C581868F0239CC1F2BD *LPGOPHER_TTL_ATTRIBUTE_TYPE;
typedef struct _FB1D2264C317C52716420591CB70B7FC *LPINTERNET_CERTIFICATE_INFO;
typedef struct _LOCALGROUP_MEMBERS_INFO_0 *LPLOCALGROUP_MEMBERS_INFO_0;
typedef struct _LOCALGROUP_MEMBERS_INFO_1 *LPLOCALGROUP_MEMBERS_INFO_1;
typedef struct _LOCALGROUP_MEMBERS_INFO_2 *LPLOCALGROUP_MEMBERS_INFO_2;
typedef struct _LOCALGROUP_MEMBERS_INFO_3 *LPLOCALGROUP_MEMBERS_INFO_3;
typedef struct _WIN32_FILE_ATTRIBUTE_DATA *LPWIN32_FILE_ATTRIBUTE_DATA;
enum MACRO_LOCALE_NOUSEROVERRIDE {LOCALE_NOUSEROVERRIDE = 0x80000000,LOCALE_USE_CP_ACP = 0x40000000,LOCALE_ILANGUAGE = 0x1,LOCALE_SLANGUAGE = 0x2,LOCALE_SENGLANGUAGE = 0x1001,LOCALE_SABBREVLANGNAME = 0x3,LOCALE_SNATIVELANGNAME = 0x4,LOCALE_ICOUNTRY = 0x5,LOCALE_SCOUNTRY = 0x6,LOCALE_SENGCOUNTRY = 0x1002,LOCALE_SABBREVCTRYNAME = 0x7,LOCALE_SNATIVECTRYNAME = 0x8,LOCALE_IDEFAULTLANGUAGE = 0x9,LOCALE_IDEFAULTCOUNTRY = 0xA,LOCALE_IDEFAULTCODEPAGE = 0xB,LOCALE_IDEFAULTANSICODEPAGE = 0x1004,LOCALE_SLIST = 0xC,LOCALE_IMEASURE = 0xD,LOCALE_SDECIMAL = 0xE,LOCALE_STHOUSAND = 0xF,LOCALE_SGROUPING = 0x10,LOCALE_IDIGITS = 0x11,LOCALE_ILZERO = 0x12,LOCALE_INEGNUMBER = 0x1010,LOCALE_SNATIVEDIGITS = 0x13,LOCALE_SCURRENCY = 0x14,LOCALE_SINTLSYMBOL = 0x15,LOCALE_SMONDECIMALSEP = 0x16,LOCALE_SMONTHOUSANDSEP = 0x17,LOCALE_SMONGROUPING = 0x18,LOCALE_ICURRDIGITS = 0x19,LOCALE_IINTLCURRDIGITS = 0x1A,LOCALE_ICURRENCY = 0x1B,LOCALE_INEGCURR = 0x1C,LOCALE_SDATE = 0x1D,LOCALE_STIME = 0x1E,LOCALE_SSHORTDATE = 0x1F,LOCALE_SLONGDATE = 0x20,LOCALE_STIMEFORMAT = 0x1003,LOCALE_IDATE = 0x21,LOCALE_ILDATE = 0x22,LOCALE_ITIME = 0x23,LOCALE_ITIMEMARKPOSN = 0x1005,LOCALE_ICENTURY = 0x24,LOCALE_ITLZERO = 0x25,LOCALE_IDAYLZERO = 0x26,LOCALE_IMONLZERO = 0x27,LOCALE_S1159 = 0x28,LOCALE_S2359 = 0x29,LOCALE_ICALENDARTYPE = 0x1009,LOCALE_IOPTIONALCALENDAR = 0x100B,LOCALE_IFIRSTDAYOFWEEK = 0x100C,LOCALE_IFIRSTWEEKOFYEAR = 0x100D,LOCALE_SDAYNAME1 = 0x2A,LOCALE_SDAYNAME2 = 0x2B,LOCALE_SDAYNAME3 = 0x2C,LOCALE_SDAYNAME4 = 0x2D,LOCALE_SDAYNAME5 = 0x2E,LOCALE_SDAYNAME6 = 0x2F,LOCALE_SDAYNAME7 = 0x30,LOCALE_SABBREVDAYNAME1 = 0x31,LOCALE_SABBREVDAYNAME2 = 0x32,LOCALE_SABBREVDAYNAME3 = 0x33,LOCALE_SABBREVDAYNAME4 = 0x34,LOCALE_SABBREVDAYNAME5 = 0x35,LOCALE_SABBREVDAYNAME6 = 0x36,LOCALE_SABBREVDAYNAME7 = 0x37,LOCALE_SMONTHNAME1 = 0x38,LOCALE_SMONTHNAME2 = 0x39,LOCALE_SMONTHNAME3 = 0x3A,LOCALE_SMONTHNAME4 = 0x3B,LOCALE_SMONTHNAME5 = 0x3C,LOCALE_SMONTHNAME6 = 0x3D,LOCALE_SMONTHNAME7 = 0x3E,LOCALE_SMONTHNAME8 = 0x3F,LOCALE_SMONTHNAME9 = 0x40,LOCALE_SMONTHNAME10 = 0x41,LOCALE_SMONTHNAME11 = 0x42,LOCALE_SMONTHNAME12 = 0x43,LOCALE_SMONTHNAME13 = 0x100E,LOCALE_SABBREVMONTHNAME1 = 0x44,LOCALE_SABBREVMONTHNAME2 = 0x45,LOCALE_SABBREVMONTHNAME3 = 0x46,LOCALE_SABBREVMONTHNAME4 = 0x47,LOCALE_SABBREVMONTHNAME5 = 0x48,LOCALE_SABBREVMONTHNAME6 = 0x49,LOCALE_SABBREVMONTHNAME7 = 0x4A,LOCALE_SABBREVMONTHNAME8 = 0x4B,LOCALE_SABBREVMONTHNAME9 = 0x4C,LOCALE_SABBREVMONTHNAME10 = 0x4D,LOCALE_SABBREVMONTHNAME11 = 0x4E,LOCALE_SABBREVMONTHNAME12 = 0x4F,LOCALE_SABBREVMONTHNAME13 = 0x100F,LOCALE_SPOSITIVESIGN = 0x50,LOCALE_SNEGATIVESIGN = 0x51,LOCALE_IPOSSIGNPOSN = 0x52,LOCALE_INEGSIGNPOSN = 0x53,LOCALE_IPOSSYMPRECEDES = 0x54,LOCALE_IPOSSEPBYSPACE = 0x55,LOCALE_INEGSYMPRECEDES = 0x56,LOCALE_INEGSEPBYSPACE = 0x57,LOCALE_FONTSIGNATURE = 0x58,LOCALE_SYSTEM_DEFAULT = 0x800,LOCALE_USER_DEFAULT = 0x400,};
typedef struct tMIXERCONTROLDETAILS_BOOLEAN MIXERCONTROLDETAILS_BOOLEAN;
typedef struct _CONSOLE_SCREEN_BUFFER_INFO *PCONSOLE_SCREEN_BUFFER_INFO;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT *PEMRCREATEDIBPATTERNBRUSHPT;
typedef struct tMIXERCONTROLDETAILS_SIGNED *PMIXERCONTROLDETAILS_SIGNED;
typedef struct _PSAPI_WS_WATCH_INFORMATION *PPSAPI_WS_WATCH_INFORMATION;
typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;
typedef struct _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;
typedef struct _BY_HANDLE_FILE_INFORMATION BY_HANDLE_FILE_INFORMATION;
typedef struct _CONSOLE_SCREEN_BUFFER_INFO CONSOLE_SCREEN_BUFFER_INFO;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT EMRCREATEDIBPATTERNBRUSHPT;
typedef struct _21B90258E17C8B6D2BC61A88DF74B5FB GOPHER_SITE_ATTRIBUTE_TYPE;
typedef struct _6950E4854C03824D44DF624674A695D1 GOPHER_VIEW_ATTRIBUTE_TYPE;
typedef struct _INTERNET_CACHE_ENTRY_INFOA INTERNET_CACHE_ENTRY_INFOA;
typedef struct _INTERNET_CACHE_ENTRY_INFOW INTERNET_CACHE_ENTRY_INFOW;
typedef struct IConnectionPointContainer *LPCONNECTIONPOINTCONTAINER;
typedef struct _CREATE_THREAD_DEBUG_INFO *LPCREATE_THREAD_DEBUG_INFO;
typedef struct _B3B9922EB7092B419B9B91CCE29DC8AC *LPINTERNET_PREFETCH_STATUS;
typedef struct _OUTPUT_DEBUG_STRING_INFO *LPOUTPUT_DEBUG_STRING_INFO;
typedef struct _PRINTER_NOTIFY_INFO_DATA *LPPRINTER_NOTIFY_INFO_DATA;
typedef struct _SID_IDENTIFIER_AUTHORITY *LPSID_IDENTIFIER_AUTHORITY;
enum MACRO_ENABLERELATIVEWIDTHS {ENABLERELATIVEWIDTHS = 768,};
enum MACRO_NETLOGON_REPLICATION {NETLOGON_REPLICATION_NEEDED = 1,NETLOGON_REPLICATION_IN_PROGRESS = 2,NETLOGON_FULL_SYNC_REPLICATION = 4,NETLOGON_REDO_NEEDED = 8,};
enum MACRO_SECURITY_INFORMATION {OWNER_SECURITY_INFORMATION = 1,GROUP_SECURITY_INFORMATION = 2,DACL_SECURITY_INFORMATION = 4,SACL_SECURITY_INFORMATION = 8,};
enum MACRO_WSAEINVALIDPROCTABLE {WSAEINVALIDPROCTABLE = 10104,};
typedef struct tMIXERCONTROLDETAILS_SIGNED MIXERCONTROLDETAILS_SIGNED;
typedef struct tagEMREXTCREATEFONTINDIRECTW *PEMREXTCREATEFONTINDIRECTW;
typedef struct _FULL_PTR_TO_REFID_ELEMENT *PFULL_PTR_TO_REFID_ELEMENT;
typedef struct _IMAGEHLP_DUPLICATE_SYMBOL *PIMAGEHLP_DUPLICATE_SYMBOL;
typedef struct _IMAGE_BOUND_FORWARDER_REF *PIMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER *PIMAGE_COFF_SYMBOLS_HEADER;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY *PIMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER *PIMAGE_ROM_OPTIONAL_HEADER;
typedef struct _LOCALGROUP_MEMBERS_INFO_0 *PLOCALGROUP_MEMBERS_INFO_0;
typedef struct _LOCALGROUP_MEMBERS_INFO_1 *PLOCALGROUP_MEMBERS_INFO_1;
typedef struct _LOCALGROUP_MEMBERS_INFO_2 *PLOCALGROUP_MEMBERS_INFO_2;
typedef struct _LOCALGROUP_MEMBERS_INFO_3 *PLOCALGROUP_MEMBERS_INFO_3;
typedef struct _PSAPI_WS_WATCH_INFORMATION PSAPI_WS_WATCH_INFORMATION;
typedef struct _SEC_WINNT_AUTH_IDENTITY_A *PSEC_WINNT_AUTH_IDENTITY_A;
typedef struct _SEC_WINNT_AUTH_IDENTITY_W *PSEC_WINNT_AUTH_IDENTITY_W;
typedef struct _SET_PARTITION_INFORMATION *PSET_PARTITION_INFORMATION;
typedef struct _TAPE_GET_DRIVE_PARAMETERS *PTAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS *PTAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_DRIVE_PARAMETERS *PTAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS *PTAPE_SET_MEDIA_PARAMETERS;
typedef struct _QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUSA;
typedef struct _QUERY_SERVICE_LOCK_STATUSW QUERY_SERVICE_LOCK_STATUSW;
typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_CRITICAL_SECTION_DEBUG;
struct _FULL_PTR_TO_REFID_ELEMENT {struct _FULL_PTR_TO_REFID_ELEMENT *Next;void *Pointer;unsigned int RefId;unsigned char State;};
struct _SEC_WINNT_AUTH_IDENTITY_A {unsigned char *User;unsigned int UserLength;unsigned char *Domain;unsigned int DomainLength;unsigned char *Password;unsigned int PasswordLength;unsigned int Flags;};
struct _SEC_WINNT_AUTH_IDENTITY_W {unsigned short *User;unsigned int UserLength;unsigned short *Domain;unsigned int DomainLength;unsigned short *Password;unsigned int PasswordLength;unsigned int Flags;};
typedef struct _CREATE_PROCESS_DEBUG_INFO CREATE_PROCESS_DEBUG_INFO;
typedef struct _DEV_BROADCAST_USERDEFINED DEV_BROADCAST_USERDEFINED;
typedef struct tagEMREXTCREATEFONTINDIRECTW EMREXTCREATEFONTINDIRECTW;
typedef struct _FULL_PTR_TO_REFID_ELEMENT FULL_PTR_TO_REFID_ELEMENT;
typedef struct _30CC7D53408649846FD423BE19D3AD21 GOPHER_ASK_ATTRIBUTE_TYPE;
typedef struct _FEF45AADF86B3C581868F0239CC1F2BD GOPHER_TTL_ATTRIBUTE_TYPE;
struct IConnectionPointContainer {struct IConnectionPointContainerVtbl *lpVtbl;};
typedef struct _IMAGEHLP_DUPLICATE_SYMBOL IMAGEHLP_DUPLICATE_SYMBOL;
typedef struct _IMAGE_BOUND_FORWARDER_REF IMAGE_BOUND_FORWARDER_REF;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER IMAGE_COFF_SYMBOLS_HEADER;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_ROM_OPTIONAL_HEADER IMAGE_ROM_OPTIONAL_HEADER;
typedef struct _FB1D2264C317C52716420591CB70B7FC INTERNET_CERTIFICATE_INFO;
typedef struct _LOCALGROUP_MEMBERS_INFO_0 LOCALGROUP_MEMBERS_INFO_0;
typedef struct _LOCALGROUP_MEMBERS_INFO_1 LOCALGROUP_MEMBERS_INFO_1;
typedef struct _LOCALGROUP_MEMBERS_INFO_2 LOCALGROUP_MEMBERS_INFO_2;
typedef struct _LOCALGROUP_MEMBERS_INFO_3 LOCALGROUP_MEMBERS_INFO_3;
typedef struct _EXIT_PROCESS_DEBUG_INFO *LPEXIT_PROCESS_DEBUG_INFO;
typedef struct _EXTENSION_CONTROL_BLOCK *LPEXTENSION_CONTROL_BLOCK;
typedef struct _LOCALGROUP_USERS_INFO_0 *LPLOCALGROUP_USERS_INFO_0;
typedef struct _SERVER_TRANSPORT_INFO_0 *LPSERVER_TRANSPORT_INFO_0;
enum MACRO_ID_PSRESTARTWINDOWS {ID_PSRESTARTWINDOWS = 2,ID_PSREBOOTSYSTEM = 3,};
enum MACRO_INTERNET_ERROR_LAST {INTERNET_ERROR_LAST = 12159,};
enum MACRO_MAX_GOPHER_CATEGORY {MAX_GOPHER_CATEGORY_NAME = 128,MAX_GOPHER_ATTRIBUTE_NAME = 128,};
enum MACRO_OLEIVERB_PROPERTIES {OLEIVERB_PROPERTIES = -7,};
enum MACRO_RESOURCEDISPLAYTYPE {RESOURCEDISPLAYTYPE_GENERIC = 0,RESOURCEDISPLAYTYPE_DOMAIN = 1,RESOURCEDISPLAYTYPE_SERVER = 2,RESOURCEDISPLAYTYPE_SHARE = 3,RESOURCEDISPLAYTYPE_FILE = 4,RESOURCEDISPLAYTYPE_GROUP = 5,RESOURCEDISPLAYTYPE_NETWORK = 6,RESOURCEDISPLAYTYPE_ROOT = 7,RESOURCEDISPLAYTYPE_SHAREADMIN = 8,RESOURCEDISPLAYTYPE_DIRECTORY = 9,RESOURCEDISPLAYTYPE_TREE = 10,};
enum MACRO_SC_GROUP_IDENTIFIER {SC_GROUP_IDENTIFIER = 43,};
enum MACRO_SECURITY_DESCRIPTOR {SECURITY_DESCRIPTOR_MIN_LENGTH = 20,SECURITY_DESCRIPTOR_REVISION = 1,SECURITY_DESCRIPTOR_REVISION1 = 1,};
enum MACRO_SERVICE_UNINSTALLED {SERVICE_UNINSTALLED = 0,SERVICE_INSTALL_PENDING = 1,SERVICE_UNINSTALL_PENDING = 2,SERVICE_INSTALLED = 3,SERVICE_INSTALL_STATE = 3,SERVICE_PAUSE_STATE = 18,};
enum MACRO_VARIANT_NOVALUEPROP {VARIANT_NOVALUEPROP = 1,};
enum MACRO_WM_CONVERTREQUESTEX {WM_CONVERTREQUESTEX = 0x108,};
enum MACRO_WSAEINVALIDPROVIDER {WSAEINVALIDPROVIDER = 10105,};
typedef  IUniformResourceLocator *PCIUniformResourceLocator;
typedef struct _IMAGE_RESOURCE_DIRECTORY *PIMAGE_RESOURCE_DIRECTORY;
typedef struct _MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;
typedef struct _PERF_INSTANCE_DEFINITION *PPERF_INSTANCE_DEFINITION;
typedef struct _PRINTER_NOTIFY_INFO_DATA *PPRINTER_NOTIFY_INFO_DATA;
typedef struct _SID_IDENTIFIER_AUTHORITY *PSID_IDENTIFIER_AUTHORITY;
typedef struct _SEC_WINNT_AUTH_IDENTITY_A SEC_WINNT_AUTH_IDENTITY_A;
typedef struct _SEC_WINNT_AUTH_IDENTITY_W SEC_WINNT_AUTH_IDENTITY_W;
typedef struct _SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION;
typedef struct _TAPE_GET_DRIVE_PARAMETERS TAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS TAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_DRIVE_PARAMETERS TAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS TAPE_SET_MEDIA_PARAMETERS;
typedef struct _WIN32_FILE_ATTRIBUTE_DATA WIN32_FILE_ATTRIBUTE_DATA;
typedef struct _WINDOW_BUFFER_SIZE_RECORD WINDOW_BUFFER_SIZE_RECORD;
typedef struct _ACL_REVISION_INFORMATION ACL_REVISION_INFORMATION;
typedef  IUniformResourceLocator CIUniformResourceLocator;
typedef struct _CREATE_THREAD_DEBUG_INFO CREATE_THREAD_DEBUG_INFO;
typedef struct _DRIVE_LAYOUT_INFORMATION DRIVE_LAYOUT_INFORMATION;
typedef struct _IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY;
typedef struct _B3B9922EB7092B419B9B91CCE29DC8AC INTERNET_PREFETCH_STATUS;
typedef struct _EXIT_THREAD_DEBUG_INFO *LPEXIT_THREAD_DEBUG_INFO;
typedef struct tagMCI_ANIM_WINDOW_PARMSA *LPMCI_ANIM_WINDOW_PARMSA;
typedef struct tagMCI_ANIM_WINDOW_PARMSW *LPMCI_ANIM_WINDOW_PARMSW;
typedef struct tagMCI_OVLY_WINDOW_PARMSA *LPMCI_OVLY_WINDOW_PARMSA;
typedef struct tagMCI_OVLY_WINDOW_PARMSW *LPMCI_OVLY_WINDOW_PARMSW;
typedef struct IOleInPlaceActiveObject *LPOLEINPLACEACTIVEOBJECT;
typedef struct _PRINTPROCESSOR_INFO_1A *LPPRINTPROCESSOR_INFO_1A;
typedef struct _PRINTPROCESSOR_INFO_1W *LPPRINTPROCESSOR_INFO_1W;
typedef struct _WKSTA_TRANSPORT_INFO_0 *LPWKSTA_TRANSPORT_INFO_0;
enum MACRO_CHARDEV_STAT_ERROR {CHARDEV_STAT_ERROR = 4,};
enum MACRO_CREATE_NEW_PROCESS {CREATE_NEW_PROCESS_GROUP = 512,CREATE_UNICODE_ENVIRONMENT = 1024,CREATE_SEPARATE_WOW_VDM = 2048,CREATE_SHARED_WOW_VDM = 4096,CREATE_FORCEDOS = 8192,CREATE_NO_WINDOW = 134217728,};
enum MACRO_ES_DISABLENOSCROLL {ES_DISABLENOSCROLL = 8192,ES_EX_NOCALLOLEINIT = 16777216,ES_NOIME = 524288,ES_SAVESEL = 32768,ES_SELFIME = 262144,ES_SUNKEN = 16384,ES_VERTICAL = 4194304,ES_SELECTIONBAR = 16777216,};
enum MACRO_GETSETPAPERMETRICS {GETSETPAPERMETRICS = 35,};
enum MACRO_GETSETSCREENPARAMS {GETSETSCREENPARAMS = 3072,};
enum MACRO_GETVECTORBRUSHSIZE {GETVECTORBRUSHSIZE = 27,};
enum MACRO_I_CHILDRENCALLBACK {I_CHILDRENCALLBACK = -1,};
enum MACRO_LPSTR_TEXTCALLBACK {LPSTR_TEXTCALLBACK = -1,};
enum MACRO_LVM_SETCOLUMNWIDTH {LVM_SETCOLUMNWIDTH = 4126,LVM_CREATEDRAGIMAGE = 4129,LVM_GETVIEWRECT = 4130,LVM_GETTEXTCOLOR = 4131,LVM_SETTEXTCOLOR = 4132,LVM_GETTEXTBKCOLOR = 4133,LVM_SETTEXTBKCOLOR = 4134,LVM_GETTOPINDEX = 4135,LVM_GETCOUNTPERPAGE = 4136,LVM_GETORIGIN = 4137,LVM_UPDATE = 4138,LVM_SETITEMSTATE = 4139,LVM_GETITEMSTATE = 4140,LVM_GETITEMTEXTA = 4141,LVM_GETITEMTEXTW = 4211,LVM_SETITEMTEXTA = 4142,LVM_SETITEMTEXTW = 4212,LVM_SETITEMCOUNT = 4143,LVM_SORTITEMS = 4144,LVM_SETITEMPOSITION32 = 4145,LVM_GETSELECTEDCOUNT = 4146,LVM_GETITEMSPACING = 4147,LVM_GETISEARCHSTRINGA = 4148,LVM_GETISEARCHSTRINGW = 4213,};
enum MACRO_LVN_BEGINLABELEDIT {LVN_BEGINLABELEDIT = -105,LVN_ENDLABELEDIT = -106,LVN_GETDISPINFO = -150,LVN_SETDISPINFO = -151,};
enum MACRO_MAXIMUM_PROCESSORS {MAXIMUM_PROCESSORS = 32,};
enum MACRO_MIXER_GETLINEINFOF {MIXER_GETLINEINFOF_DESTINATION = 0,MIXER_GETLINEINFOF_SOURCE = 1,MIXER_GETLINEINFOF_LINEID = 2,MIXER_GETLINEINFOF_COMPONENTTYPE = 3,MIXER_GETLINEINFOF_TARGETTYPE = 4,MIXER_GETLINEINFOF_QUERYMASK = 15,};
enum MACRO_MMIO_DEFAULTBUFFER {MMIO_DEFAULTBUFFER = 8192,};
enum MACRO_TBN_GETBUTTONINFOA {TBN_GETBUTTONINFOA = -700,TBN_GETBUTTONINFOW = -720,TBN_BEGINDRAG = -701,TBN_ENDDRAG = -702,TBN_BEGINADJUST = -703,TBN_ENDADJUST = -704,TBN_RESET = -705,TBN_QUERYINSERT = -706,TBN_QUERYDELETE = -707,TBN_TOOLBARCHANGE = -708,TBN_CUSTHELP = -709,};
enum MACRO_WAVE_INVALIDFORMAT {WAVE_INVALIDFORMAT = 0,WAVE_FORMAT_1M08 = 1,WAVE_FORMAT_1S08 = 2,WAVE_FORMAT_1M16 = 4,WAVE_FORMAT_1S16 = 8,WAVE_FORMAT_2M08 = 16,WAVE_FORMAT_2S08 = 32,WAVE_FORMAT_2M16 = 64,WAVE_FORMAT_2S16 = 128,WAVE_FORMAT_4M08 = 256,WAVE_FORMAT_4S08 = 512,WAVE_FORMAT_4M16 = 1024,WAVE_FORMAT_4S16 = 2048,WAVE_FORMAT_PCM = 1,};
enum MACRO_WSAEPROTONOSUPPORT {WSAEPROTONOSUPPORT = 10043,};
enum MACRO_WSAESOCKTNOSUPPORT {WSAESOCKTNOSUPPORT = 10044,};
enum MACRO_WSAVERNOTSUPPORTED {WSAVERNOTSUPPORTED = 10092,};
enum MACRO_yHeightCharPtsMost {yHeightCharPtsMost = 1638,};
typedef struct _MEMORY_BASIC_INFORMATION MEMORY_BASIC_INFORMATION;
typedef struct _MIDL_STUBLESS_PROXY_INFO MIDL_STUBLESS_PROXY_INFO;
typedef struct _OUTPUT_DEBUG_STRING_INFO OUTPUT_DEBUG_STRING_INFO;
typedef struct tagCInterfaceProxyVtbl *PCInterfaceProxyVtblList;
typedef struct tagEMRMODIFYWORLDTRANSFORM *PEMRMODIFYWORLDTRANSFORM;
typedef struct _PERF_INSTANCE_DEFINITION PERF_INSTANCE_DEFINITION;
typedef struct _FILE_NOTIFY_INFORMATION *PFILE_NOTIFY_INFORMATION;
typedef struct _IMAGE_DEBUG_INFORMATION *PIMAGE_DEBUG_INFORMATION;
typedef struct _IMAGE_IMPORT_DESCRIPTOR *PIMAGE_IMPORT_DESCRIPTOR;
typedef IUniformResourceLocator *PIUniformResourceLocator;
typedef struct _LOCALGROUP_USERS_INFO_0 *PLOCALGROUP_USERS_INFO_0;
typedef struct _PERF_COUNTER_DEFINITION *PPERF_COUNTER_DEFINITION;
typedef struct _PROCESS_MEMORY_COUNTERS *PPROCESS_MEMORY_COUNTERS;
typedef struct _PRINTER_NOTIFY_INFO_DATA PRINTER_NOTIFY_INFO_DATA;
typedef struct _62EC1DAD6DB92F8723AD0A50B2259449 *PRPC_CLIENT_INFORMATION1;
typedef struct _SERVER_TRANSPORT_INFO_0 *PSERVER_TRANSPORT_INFO_0;
typedef void *RPC_AUTH_IDENTITY_HANDLE;
typedef struct _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;
enum _TOKEN_INFORMATION_CLASS {TokenUser = 0x1,TokenGroups = 0x2,TokenPrivileges = 0x3,TokenOwner = 0x4,TokenPrimaryGroup = 0x5,TokenDefaultDacl = 0x6,TokenSource = 0x7,TokenType = 0x8,TokenImpersonationLevel = 0x9,TokenStatistics = 0xA,};
struct __pthread_internal_slist {struct __pthread_internal_slist *__next;};
enum iurl_invokecommand_flags {IURL_INVOKECOMMAND_FL_ALLOW_UI = 0x1,IURL_INVOKECOMMAND_FL_USE_DEFAULT_VERB = 0x2,ALL_IURL_INVOKECOMMAND_FLAGS = 0x3,};
typedef struct tagEMRMODIFYWORLDTRANSFORM EMRMODIFYWORLDTRANSFORM;
typedef struct _EXIT_PROCESS_DEBUG_INFO EXIT_PROCESS_DEBUG_INFO;
typedef struct _EXTENSION_CONTROL_BLOCK EXTENSION_CONTROL_BLOCK;
typedef struct _FILE_NOTIFY_INFORMATION FILE_NOTIFY_INFORMATION;
typedef void *(*GENERIC_BINDING_ROUTINE)(void *);
typedef struct _IMAGE_DEBUG_INFORMATION IMAGE_DEBUG_INFORMATION;
typedef struct _IMAGE_IMPORT_DESCRIPTOR IMAGE_IMPORT_DESCRIPTOR;
struct IOleInPlaceActiveObject {struct IOleInPlaceActiveObjectVtbl *lpVtbl;};
struct IUniformResourceLocator {struct IUniformResourceLocatorVtbl *lpVtbl;};
typedef struct _LOCALGROUP_USERS_INFO_0 LOCALGROUP_USERS_INFO_0;
typedef struct _1CF5A01E195BE25BEDA13B6A0EE28B07 *LPGOPHER_ATTRIBUTE_TYPE;
typedef struct _2217024DFB55A6F4C8452C0D2E818FB7 *LPINTERNET_ASYNC_RESULT;
typedef struct _D692CA7460863103343173F071E8F66B *LPINTERNET_VERSION_INFO;
typedef struct tagMCI_ANIM_UPDATE_PARMS *LPMCI_ANIM_UPDATE_PARMS;
typedef struct tagMCI_WAVE_DELETE_PARMS *LPMCI_WAVE_DELETE_PARMS;
typedef struct tagPIXELFORMATDESCRIPTOR *LPPIXELFORMATDESCRIPTOR;
typedef struct _QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIGA;
typedef struct _QUERY_SERVICE_CONFIGW *LPQUERY_SERVICE_CONFIGW;
typedef struct _TIME_ZONE_INFORMATION *LPTIME_ZONE_INFORMATION;
typedef struct _TRANSMIT_FILE_BUFFERS *LPTRANSMIT_FILE_BUFFERS;
typedef struct _UNLOAD_DLL_DEBUG_INFO *LPUNLOAD_DLL_DEBUG_INFO;
typedef struct _USER_MODALS_INFO_1001 *LPUSER_MODALS_INFO_1001;
typedef struct _USER_MODALS_INFO_1002 *LPUSER_MODALS_INFO_1002;
typedef struct _USER_MODALS_INFO_1003 *LPUSER_MODALS_INFO_1003;
typedef struct _USER_MODALS_INFO_1004 *LPUSER_MODALS_INFO_1004;
typedef struct _USER_MODALS_INFO_1005 *LPUSER_MODALS_INFO_1005;
typedef struct _USER_MODALS_INFO_1006 *LPUSER_MODALS_INFO_1006;
typedef struct _USER_MODALS_INFO_1007 *LPUSER_MODALS_INFO_1007;
enum MACRO_CALLBACK_TYPEMASK {CALLBACK_TYPEMASK = 0x70000,CALLBACK_NULL = 0x0,CALLBACK_WINDOW = 0x10000,CALLBACK_TASK = 0x20000,CALLBACK_FUNCTION = 0x30000,CALLBACK_THREAD = 0x20000,CALLBACK_EVENT = 0x50000,};
enum MACRO_CF_SHOWHELPBUTTON {CF_SHOWHELPBUTTON = 1,CF_SETCONVERTDEFAULT = 2,CF_SETACTIVATEDEFAULT = 4,CF_SELECTCONVERTTO = 8,CF_SELECTACTIVATEAS = 16,CF_DISABLEDISPLAYASICON = 32,CF_DISABLEACTIVATEAS = 64,CF_HIDECHANGEICON = 128,CF_CONVERTONLY = 256,};
enum MACRO_CHARDEVQ_NUMUSERS {CHARDEVQ_NUMUSERS_PARMNUM = 4,CHARDEVQ_NUMAHEAD_PARMNUM = 5,CHARDEVQ_DEF_PRIORITY = 5,CHARDEVQ_PRIORITY_INFOLEVEL = 1002,CHARDEVQ_DEVS_INFOLEVEL = 1003,CHARDEVQ_MIN_PRIORITY = 9,};
enum MACRO_CHARDEVQ_PRIORITY {CHARDEVQ_PRIORITY_PARMNUM = 2,CHARDEVQ_DEVS_PARMNUM = 3,};
enum MACRO_ENABLEPAIRKERNING {ENABLEPAIRKERNING = 769,};
enum MACRO_EXCEPTION_EXECUTE {EXCEPTION_EXECUTE_HANDLER = 1,EXCEPTION_CONTINUE_EXECUTION = -1,EXCEPTION_CONTINUE_SEARCH = 0,};
enum MACRO_GETPRINTINGOFFSET {GETPRINTINGOFFSET = 13,};
enum MACRO_GETSETPRINTORIENT {GETSETPRINTORIENT = 30,};
enum MACRO_GETTRACKKERNTABLE {GETTRACKKERNTABLE = 259,EXTTEXTOUT = 512,};
enum MACRO_HDN_ITEMCHANGINGA {HDN_ITEMCHANGINGA = -300,HDN_ITEMCHANGINGW = -320,HDN_ITEMCHANGEDA = -301,HDN_ITEMCHANGEDW = -321,HDN_ITEMCLICKA = -302,HDN_ITEMCLICKW = -322,HDN_ITEMDBLCLICKA = -303,HDN_ITEMDBLCLICKW = -323,HDN_DIVIDERDBLCLICKA = -305,HDN_DIVIDERDBLCLICKW = -325,HDN_BEGINTRACKA = -306,HDN_BEGINTRACKW = -326,HDN_ENDTRACKA = -307,HDN_ENDTRACKW = -327,HDN_TRACKA = -308,HDN_TRACKW = -328,};
enum MACRO_INTERNET_PREFETCH {INTERNET_PREFETCH_PROGRESS = 0,INTERNET_PREFETCH_COMPLETE = 1,INTERNET_PREFETCH_ABORTED = 2,};
enum MACRO_LM20_MAXCOMMENTSZ {LM20_MAXCOMMENTSZ = 48,};
enum MACRO_MAXSTRETCHBLTMODE {MAXSTRETCHBLTMODE = 4,};
enum MACRO_MAX_NDDESHARENAME {MAX_NDDESHARENAME = 256,MAX_DOMAINNAME = 15,MAX_USERNAME = 15,MAX_APPNAME = 255,MAX_TOPICNAME = 255,MAX_ITEMNAME = 255,};
enum MACRO_PBT_APMBATTERYLOW {PBT_APMBATTERYLOW = 9,PBT_APMPOWERSTATUSCHANGE = 10,PBT_APMOEMEVENT = 11,};
enum MACRO_PSM_GETTABCONTROL {PSM_GETTABCONTROL = 1140,PSM_GETCURRENTPAGEHWND = 1142,PSM_ISDIALOGMESSAGE = 1141,PSM_PRESSBUTTON = 1137,PSM_SETCURSELID = 1138,PSM_SETFINISHTEXTW = 1145,PSM_SETFINISHTEXTA = 1139,};
enum MACRO_PSM_SETWIZBUTTONS {PSM_SETWIZBUTTONS = 1136,PSM_APPLY = 1134,PSM_UNCHANGED = 1133,PSM_QUERYSIBLINGS = 1132,PSM_CANCELTOCLOSE = 1131,PSM_REBOOTSYSTEM = 1130,PSM_RESTARTWINDOWS = 1129,PSM_CHANGED = 1128,PSM_ADDPAGE = 1127,PSM_REMOVEPAGE = 1126,PSM_SETCURSEL = 1125,PSM_SETTITLEA = 1135,PSM_SETTITLEW = 1144,PSM_SETTITLE = 1135,PSM_SETFINISHTEXT = 1139,};
enum MACRO_SECURITY_INTERNET {SECURITY_INTERNET_MASK = 61440,SECURITY_SET_MASK = 61440,};
enum MACRO_SECURITY_PROTOCOL {SECURITY_PROTOCOL_NONE = 0x0,};
enum MACRO_SELECTPAPERSOURCE {SELECTPAPERSOURCE = 18,};
enum MACRO_SW_SCROLLCHILDREN {SW_SCROLLCHILDREN = 1,SW_INVALIDATE = 2,SW_ERASE = 4,};
enum MACRO_TBN_GETBUTTONINFO {TBN_GETBUTTONINFO = -700,};
enum MACRO_TB_GETBITMAPFLAGS {TB_GETBITMAPFLAGS = 1065,};
enum MACRO_WC_COMPOSITECHECK {WC_COMPOSITECHECK = 512,WC_DISCARDNS = 16,WC_SEPCHARS = 32,WC_DEFAULTCHAR = 64,};
enum MACRO_WSANOTINITIALISED {WSANOTINITIALISED = 10093,};
enum MACRO_WSASYSCALLFAILURE {WSASYSCALLFAILURE = 10107,};
typedef struct _BROWSER_STATISTICS_100 *PBROWSER_STATISTICS_100;
typedef struct _BROWSER_STATISTICS_101 *PBROWSER_STATISTICS_101;
typedef struct tagCInterfaceStubVtbl *PCInterfaceStubVtblList;
typedef struct _CRITICAL_SECTION_DEBUG *PCRITICAL_SECTION_DEBUG;
typedef struct tagEMRCREATEBRUSHINDIRECT *PEMRCREATEBRUSHINDIRECT;
typedef struct _PERF_COUNTER_DEFINITION PERF_COUNTER_DEFINITION;
typedef struct _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;
typedef struct tagMCI_ANIM_WINDOW_PARMSA *PMCI_ANIM_WINDOW_PARMSA;
typedef struct tagMCI_ANIM_WINDOW_PARMSW *PMCI_ANIM_WINDOW_PARMSW;
typedef struct tagMCI_OVLY_WINDOW_PARMSA *PMCI_OVLY_WINDOW_PARMSA;
typedef struct tagMCI_OVLY_WINDOW_PARMSW *PMCI_OVLY_WINDOW_PARMSW;
typedef struct _MESSAGE_RESOURCE_BLOCK *PMESSAGE_RESOURCE_BLOCK;
typedef struct _MESSAGE_RESOURCE_ENTRY *PMESSAGE_RESOURCE_ENTRY;
typedef struct _PRINTPROCESSOR_INFO_1A *PPRINTPROCESSOR_INFO_1A;
typedef struct _PRINTPROCESSOR_INFO_1W *PPRINTPROCESSOR_INFO_1W;
typedef struct _PROCESS_MEMORY_COUNTERS PROCESS_MEMORY_COUNTERS;
typedef struct _SE_IMPERSONATION_STATE *PSE_IMPERSONATION_STATE;
typedef struct _WKSTA_TRANSPORT_INFO_0 *PWKSTA_TRANSPORT_INFO_0;
typedef struct _XMIT_ROUTINE_QUINTUPLE *PXMIT_ROUTINE_QUINTUPLE;
typedef struct _62EC1DAD6DB92F8723AD0A50B2259449 RPC_CLIENT_INFORMATION1;
typedef struct _SERVER_TRANSPORT_INFO_0 SERVER_TRANSPORT_INFO_0;
enum _GET_FILEEX_INFO_LEVELS {GetFileExInfoStandard = 0x0,GetFileExMaxInfoLevel = 0x1,};
enum _IMAGEHLP_STATUS_REASON {BindOutOfMemory = 0x0,BindRvaToVaFailed = 0x1,BindNoRoomInImage = 0x2,BindImportModuleFailed = 0x3,BindImportProcedureFailed = 0x4,BindImportModule = 0x5,BindImportProcedure = 0x6,BindForwarder = 0x7,BindForwarderNOT = 0x8,BindImageModified = 0x9,BindExpandFileHeaders = 0xA,BindImageComplete = 0xB,BindMismatchedSymbols = 0xC,BindSymbolsNotUpdated = 0xD,};
typedef struct _BROWSER_STATISTICS_100 BROWSER_STATISTICS_100;
typedef struct _BROWSER_STATISTICS_101 BROWSER_STATISTICS_101;
typedef struct _CRITICAL_SECTION_DEBUG CRITICAL_SECTION_DEBUG;
typedef struct tagEMRCREATEBRUSHINDIRECT EMRCREATEBRUSHINDIRECT;
typedef struct _EXIT_THREAD_DEBUG_INFO EXIT_THREAD_DEBUG_INFO;
typedef void (*GENERIC_UNBIND_ROUTINE)(void *, unsigned char *);
typedef struct _IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY;
typedef struct IEnumConnectionPoints *LPENUMCONNECTIONPOINTS;
typedef struct IEnumOleDocumentViews *LPENUMOLEDOCUMENTVIEWS;
typedef struct _ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUSA;
typedef struct _ENUM_SERVICE_STATUSW *LPENUM_SERVICE_STATUSW;
typedef struct _EXCEPTION_DEBUG_INFO *LPEXCEPTION_DEBUG_INFO;
typedef struct tagINITCOMMONCONTROLSEX *LPINITCOMMONCONTROLSEX;
typedef struct tagLAYERPLANEDESCRIPTOR *LPLAYERPLANEDESCRIPTOR;
typedef struct _LOCALGROUP_INFO_1002 *LPLOCALGROUP_INFO_1002;
typedef struct tagMCI_ANIM_OPEN_PARMSA *LPMCI_ANIM_OPEN_PARMSA;
typedef struct tagMCI_ANIM_OPEN_PARMSW *LPMCI_ANIM_OPEN_PARMSW;
typedef struct tagMCI_GETDEVCAPS_PARMS *LPMCI_GETDEVCAPS_PARMS;
typedef struct tagMCI_OVLY_LOAD_PARMSA *LPMCI_OVLY_LOAD_PARMSA;
typedef struct tagMCI_OVLY_LOAD_PARMSW *LPMCI_OVLY_LOAD_PARMSW;
typedef struct tagMCI_OVLY_OPEN_PARMSA *LPMCI_OVLY_OPEN_PARMSA;
typedef struct tagMCI_OVLY_OPEN_PARMSW *LPMCI_OVLY_OPEN_PARMSW;
typedef struct tagMCI_OVLY_SAVE_PARMSA *LPMCI_OVLY_SAVE_PARMSA;
typedef struct tagMCI_OVLY_SAVE_PARMSW *LPMCI_OVLY_SAVE_PARMSW;
typedef struct tagMCI_VD_ESCAPE_PARMSA *LPMCI_VD_ESCAPE_PARMSA;
typedef struct tagMCI_VD_ESCAPE_PARMSW *LPMCI_VD_ESCAPE_PARMSW;
typedef struct tagMCI_WAVE_OPEN_PARMSA *LPMCI_WAVE_OPEN_PARMSA;
typedef struct tagMCI_WAVE_OPEN_PARMSW *LPMCI_WAVE_OPEN_PARMSW;
typedef struct _NETCONNECTINFOSTRUCT *LPNETCONNECTINFOSTRUCT;
typedef struct _SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRYA;
typedef struct _SERVICE_TABLE_ENTRYW *LPSERVICE_TABLE_ENTRYW;
typedef struct ISpecifyPropertyPages *LPSPECIFYPROPERTYPAGES;
typedef struct _UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFOA;
typedef struct _UNIVERSAL_NAME_INFOW *LPUNIVERSAL_NAME_INFOW;
typedef struct _WKSTA_USER_INFO_1101 *LPWKSTA_USER_INFO_1101;
typedef struct _WSAServiceClassInfoA *LPWSASERVICECLASSINFOA;
typedef struct _WSAServiceClassInfoW *LPWSASERVICECLASSINFOW;
enum MACRO_APPNAMEBUFFERLEN {APPNAMEBUFFERLEN = 40,};
enum MACRO_BSF_MSGSRV32ISOK {BSF_MSGSRV32ISOK_BIT = 31,BSF_MSGSRV32ISOK = -2147483648,};
enum MACRO_COLOR_3DDKSHADOW {COLOR_3DDKSHADOW = 21,COLOR_3DFACE = 15,COLOR_3DHILIGHT = 20,COLOR_3DHIGHLIGHT = 20,COLOR_3DLIGHT = 22,COLOR_BTNHILIGHT = 20,COLOR_3DSHADOW = 16,COLOR_ACTIVEBORDER = 10,COLOR_ACTIVECAPTION = 2,COLOR_APPWORKSPACE = 12,COLOR_BACKGROUND = 1,COLOR_DESKTOP = 1,COLOR_BTNFACE = 15,COLOR_BTNHIGHLIGHT = 20,COLOR_BTNSHADOW = 16,COLOR_BTNTEXT = 18,COLOR_CAPTIONTEXT = 9,COLOR_GRAYTEXT = 17,COLOR_HIGHLIGHT = 13,COLOR_HIGHLIGHTTEXT = 14,COLOR_INACTIVEBORDER = 11,COLOR_INACTIVECAPTION = 3,COLOR_INACTIVECAPTIONTEXT = 19,COLOR_INFOBK = 24,COLOR_INFOTEXT = 23,COLOR_MENU = 4,COLOR_MENUTEXT = 7,COLOR_SCROLLBAR = 0,COLOR_WINDOW = 5,COLOR_WINDOWFRAME = 6,COLOR_WINDOWTEXT = 8,};
enum MACRO_CREATE_SUSPENDED {CREATE_SUSPENDED = 4,};
enum MACRO_ENUMPAPERMETRICS {ENUMPAPERMETRICS = 34,};
enum MACRO_EXCEPTION_ACCESS {EXCEPTION_ACCESS_VIOLATION = -1073741819,EXCEPTION_DATATYPE_MISALIGNMENT = -2147483646,EXCEPTION_BREAKPOINT = -2147483645,EXCEPTION_SINGLE_STEP = -2147483644,EXCEPTION_ARRAY_BOUNDS_EXCEEDED = -1073741684,EXCEPTION_FLT_DENORMAL_OPERAND = -1073741683,EXCEPTION_FLT_DIVIDE_BY_ZERO = -1073741682,EXCEPTION_FLT_INEXACT_RESULT = -1073741681,EXCEPTION_FLT_INVALID_OPERATION = -1073741680,EXCEPTION_FLT_OVERFLOW = -1073741679,EXCEPTION_FLT_STACK_CHECK = -1073741678,EXCEPTION_FLT_UNDERFLOW = -1073741677,EXCEPTION_INT_DIVIDE_BY_ZERO = -1073741676,EXCEPTION_INT_OVERFLOW = -1073741675,EXCEPTION_PRIV_INSTRUCTION = -1073741674,EXCEPTION_IN_PAGE_ERROR = -1073741818,EXCEPTION_ILLEGAL_INSTRUCTION = -1073741795,EXCEPTION_NONCONTINUABLE_EXCEPTION = -1073741787,EXCEPTION_STACK_OVERFLOW = -1073741571,EXCEPTION_INVALID_DISPOSITION = -1073741786,EXCEPTION_GUARD_PAGE = -2147483647,EXCEPTION_INVALID_HANDLE = -1073741816,};
enum MACRO_GETPAIRKERNTABLE {GETPAIRKERNTABLE = 258,};
enum MACRO_GETSCALINGFACTOR {GETSCALINGFACTOR = 14,};
enum MACRO_GETVECTORPENSIZE {GETVECTORPENSIZE = 26,};
enum MACRO_GOPHER_ATTRIBUTE {GOPHER_ATTRIBUTE_ID_BASE = 0xABCCCC00,GOPHER_CATEGORY_ID_ALL = 0xABCCCC01,GOPHER_CATEGORY_ID_INFO = 0xABCCCC02,GOPHER_CATEGORY_ID_ADMIN = 0xABCCCC03,GOPHER_CATEGORY_ID_VIEWS = 0xABCCCC04,GOPHER_CATEGORY_ID_ABSTRACT = 0xABCCCC05,GOPHER_CATEGORY_ID_VERONICA = 0xABCCCC06,GOPHER_CATEGORY_ID_ASK = 0xABCCCC07,GOPHER_CATEGORY_ID_UNKNOWN = 0xABCCCC08,GOPHER_ATTRIBUTE_ID_ALL = 0xABCCCC09,GOPHER_ATTRIBUTE_ID_ADMIN = 0xABCCCC0A,GOPHER_ATTRIBUTE_ID_MOD_DATE = 0xABCCCC0B,GOPHER_ATTRIBUTE_ID_TTL = 0xABCCCC0C,GOPHER_ATTRIBUTE_ID_SCORE = 0xABCCCC0D,GOPHER_ATTRIBUTE_ID_RANGE = 0xABCCCC0E,GOPHER_ATTRIBUTE_ID_SITE = 0xABCCCC0F,GOPHER_ATTRIBUTE_ID_ORG = 0xABCCCC10,GOPHER_ATTRIBUTE_ID_LOCATION = 0xABCCCC11,GOPHER_ATTRIBUTE_ID_GEOG = 0xABCCCC12,GOPHER_ATTRIBUTE_ID_TIMEZONE = 0xABCCCC13,GOPHER_ATTRIBUTE_ID_PROVIDER = 0xABCCCC14,GOPHER_ATTRIBUTE_ID_VERSION = 0xABCCCC15,GOPHER_ATTRIBUTE_ID_ABSTRACT = 0xABCCCC16,GOPHER_ATTRIBUTE_ID_VIEW = 0xABCCCC17,GOPHER_ATTRIBUTE_ID_TREEWALK = 0xABCCCC18,GOPHER_ATTRIBUTE_ID_UNKNOWN = 0xABCCCC19,};
enum MACRO_HDN_ITEMCHANGING {HDN_ITEMCHANGING = -300,HDN_ITEMCHANGED = -301,HDN_ITEMCLICK = -302,HDN_ITEMDBLCLICK = -303,HDN_DIVIDERDBLCLICK = -305,HDN_BEGINTRACK = -306,HDN_ENDTRACK = -307,HDN_TRACK = -308,};
enum MACRO_IDD_SERVERNOTREG {IDD_SERVERNOTREG = 1025,IDD_LINKTYPECHANGED = 1026,};
enum MACRO_IMAGE_SEPARATION {IMAGE_SEPARATION = 65536,};
enum MACRO_INTERNET_SERVICE {INTERNET_SERVICE_FTP = 1,INTERNET_SERVICE_GOPHER = 2,INTERNET_SERVICE_HTTP = 3,INTERNET_STATUS_RESOLVING_NAME = 10,INTERNET_STATUS_NAME_RESOLVED = 11,INTERNET_STATUS_CONNECTING_TO_SERVER = 20,INTERNET_STATUS_CONNECTED_TO_SERVER = 21,INTERNET_STATUS_SENDING_REQUEST = 30,INTERNET_STATUS_REQUEST_SENT = 31,INTERNET_STATUS_RECEIVING_RESPONSE = 40,INTERNET_STATUS_RESPONSE_RECEIVED = 41,INTERNET_STATUS_CTL_RESPONSE_RECEIVED = 42,INTERNET_STATUS_PREFETCH = 43,INTERNET_STATUS_CLOSING_CONNECTION = 50,INTERNET_STATUS_CONNECTION_CLOSED = 51,INTERNET_STATUS_HANDLE_CREATED = 60,INTERNET_STATUS_HANDLE_CLOSING = 70,INTERNET_STATUS_REQUEST_COMPLETE = 100,INTERNET_STATUS_REDIRECT = 110,};
enum MACRO_LVN_ITEMCHANGING {LVN_ITEMCHANGING = -100,LVN_ITEMCHANGED = -101,LVN_INSERTITEM = -102,LVN_DELETEITEM = -103,LVN_DELETEALLITEMS = -104,LVN_BEGINLABELEDITA = -105,LVN_BEGINLABELEDITW = -175,LVN_ENDLABELEDITA = -106,LVN_ENDLABELEDITW = -176,LVN_COLUMNCLICK = -108,LVN_BEGINDRAG = -109,LVN_BEGINRDRAG = -111,LVN_GETDISPINFOA = -150,LVN_GETDISPINFOW = -177,LVN_SETDISPINFOA = -151,LVN_SETDISPINFOW = -178,LVN_KEYDOWN = -155,};
enum MACRO_MARSHALINTERFACE {MARSHALINTERFACE_MIN = 500,};
enum MACRO_MAXGETHOSTSTRUCT {MAXGETHOSTSTRUCT = 1024,};
enum MACRO_MAX_COMPUTERNAME {MAX_COMPUTERNAME_LENGTH = 15,};
enum MACRO_MULTIFILEOPENORD {MULTIFILEOPENORD = 1537,};
enum MACRO_SECURITY_CONTEXT {SECURITY_CONTEXT_TRACKING = 0x40000,SECURITY_EFFECTIVE_ONLY = 0x80000,SECURITY_SQOS_PRESENT = 0x100000,SECURITY_VALID_SQOS_FLAGS = 0x1F0000,};
enum MACRO_SECURITY_DYNAMIC {SECURITY_DYNAMIC_TRACKING = 1,SECURITY_STATIC_TRACKING = 0,};
enum MACRO_SETALLJUSTVALUES {SETALLJUSTVALUES = 771,};
enum MACRO_SW_PARENTCLOSING {SW_PARENTCLOSING = 1,SW_OTHERZOOM = 2,SW_PARENTOPENING = 3,SW_OTHERUNZOOM = 4,};
enum MACRO_TB_GETBUTTONTEXT {TB_GETBUTTONTEXT = 1069,TB_SAVERESTORE = 1050,TB_ADDSTRING = 1052,};
enum MACRO_TVN_SELCHANGINGA {TVN_SELCHANGINGA = -401,TVN_SELCHANGINGW = -450,TVN_SELCHANGEDA = -402,TVN_SELCHANGEDW = -451,TVN_GETDISPINFOA = -403,TVN_GETDISPINFOW = -452,TVN_SETDISPINFOA = -404,TVN_SETDISPINFOW = -453,TVN_ITEMEXPANDINGA = -405,TVN_ITEMEXPANDINGW = -454,TVN_ITEMEXPANDEDA = -406,TVN_ITEMEXPANDEDW = -455,TVN_BEGINDRAGA = -407,TVN_BEGINDRAGW = -456,TVN_BEGINRDRAGA = -408,TVN_BEGINRDRAGW = -457,TVN_DELETEITEMA = -409,TVN_DELETEITEMW = -458,TVN_BEGINLABELEDITA = -410,TVN_BEGINLABELEDITW = -459,TVN_ENDLABELEDITA = -411,TVN_ENDLABELEDITW = -460,TVN_KEYDOWN = -412,};
enum MACRO_WSAEADDRNOTAVAIL {WSAEADDRNOTAVAIL = 10049,};
enum MACRO_internal_defined {__strtol_internal_defined = 1,__strtoul_internal_defined = 1,__strtoll_internal_defined = 1,__strtoull_internal_defined = 1,};
typedef struct tagMCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMSA;
typedef struct tagMCI_ANIM_WINDOW_PARMSW MCI_ANIM_WINDOW_PARMSW;
typedef struct tagMCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMSA;
typedef struct tagMCI_OVLY_WINDOW_PARMSW MCI_OVLY_WINDOW_PARMSW;
typedef struct _E1FC672EFA0154DDDEED24E20FAA5FC7 MENUITEMTEMPLATEHEADER;
typedef struct _MESSAGE_RESOURCE_BLOCK MESSAGE_RESOURCE_BLOCK;
typedef struct _MESSAGE_RESOURCE_ENTRY MESSAGE_RESOURCE_ENTRY;
typedef struct tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSETCOLORADJUSTMENT *PEMRSETCOLORADJUSTMENT;
typedef struct _IMAGE_BASE_RELOCATION *PIMAGE_BASE_RELOCATION;
typedef struct _IMAGE_DEBUG_DIRECTORY *PIMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_OPTIONAL_HEADER *PIMAGE_OPTIONAL_HEADER;
typedef struct tagMCI_ANIM_UPDATE_PARMS *PMCI_ANIM_UPDATE_PARMS;
typedef struct tagMCI_WAVE_DELETE_PARMS *PMCI_WAVE_DELETE_PARMS;
typedef struct _MESSAGE_RESOURCE_DATA *PMESSAGE_RESOURCE_DATA;
typedef struct _PARTITION_INFORMATION *PPARTITION_INFORMATION;
typedef struct tagPIXELFORMATDESCRIPTOR *PPIXELFORMATDESCRIPTOR;
typedef struct _PREVENT_MEDIA_REMOVAL *PPREVENT_MEDIA_REMOVAL;
typedef struct _PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1A;
typedef struct _PRINTPROCESSOR_INFO_1W PRINTPROCESSOR_INFO_1W;
typedef struct _RPC_SYNTAX_IDENTIFIER *PRPC_SYNTAX_IDENTIFIER;
typedef struct _TAPE_CREATE_PARTITION *PTAPE_CREATE_PARTITION;
typedef struct _TRANSMIT_FILE_BUFFERS *PTRANSMIT_FILE_BUFFERS;
typedef struct _USER_MODALS_INFO_1001 *PUSER_MODALS_INFO_1001;
typedef struct _USER_MODALS_INFO_1002 *PUSER_MODALS_INFO_1002;
typedef struct _USER_MODALS_INFO_1003 *PUSER_MODALS_INFO_1003;
typedef struct _USER_MODALS_INFO_1004 *PUSER_MODALS_INFO_1004;
typedef struct _USER_MODALS_INFO_1005 *PUSER_MODALS_INFO_1005;
typedef struct _USER_MODALS_INFO_1006 *PUSER_MODALS_INFO_1006;
typedef struct _USER_MODALS_INFO_1007 *PUSER_MODALS_INFO_1007;
typedef struct _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;
typedef struct _WKSTA_TRANSPORT_INFO_0 WKSTA_TRANSPORT_INFO_0;
typedef struct _XMIT_ROUTINE_QUINTUPLE XMIT_ROUTINE_QUINTUPLE;
enum _ACL_INFORMATION_CLASS {AclRevisionInformation = 0x1,AclSizeInformation = 0x2,};
enum _CM_ERROR_CONTROL_TYPE {IgnoreError = 0x0,NormalError = 0x1,SevereError = 0x2,CriticalError = 0x3,};
typedef struct tagCInterfaceProxyHeader CInterfaceProxyHeader;
typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEVIEWPORTEXTEX;
typedef struct tagEMRSETCOLORADJUSTMENT EMRSETCOLORADJUSTMENT;
typedef struct _1CF5A01E195BE25BEDA13B6A0EE28B07 GOPHER_ATTRIBUTE_TYPE;
struct IEnumConnectionPoints {struct IEnumConnectionPointsVtbl *lpVtbl;};
typedef struct _IMAGE_BASE_RELOCATION IMAGE_BASE_RELOCATION;
typedef struct _IMAGE_DEBUG_DIRECTORY IMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_OPTIONAL_HEADER IMAGE_OPTIONAL_HEADER;
typedef struct _2217024DFB55A6F4C8452C0D2E818FB7 INTERNET_ASYNC_RESULT;
typedef struct _D692CA7460863103343173F071E8F66B INTERNET_VERSION_INFO;
struct ISpecifyPropertyPages {struct ISpecifyPropertyPagesVtbl *lpVtbl;};
typedef struct _CMInvokeCommandInfo *LPCMINVOKECOMMANDINFO;
typedef struct _FILEGROUPDESCRIPTOR *LPFILEGROUPDESCRIPTOR;
typedef struct _C3D536761911E1B34BFF5DAB2CC3A2E9 *LPINTERNET_PROXY_INFO;
typedef struct _LOAD_DLL_DEBUG_INFO *LPLOAD_DLL_DEBUG_INFO;
typedef struct tagMCI_ANIM_PLAY_PARMS *LPMCI_ANIM_PLAY_PARMS;
typedef struct tagMCI_ANIM_RECT_PARMS *LPMCI_ANIM_RECT_PARMS;
typedef struct tagMCI_ANIM_STEP_PARMS *LPMCI_ANIM_STEP_PARMS;
typedef struct tagMCI_OVLY_RECT_PARMS *LPMCI_OVLY_RECT_PARMS;
typedef struct tMIXERCONTROLDETAILS *LPMIXERCONTROLDETAILS;
typedef struct tagOIFI *LPOLEINPLACEFRAMEINFO;
typedef IOleUILinkContainerA *LPOLEUILINKCONTAINERA;
typedef IOleUILinkContainerW *LPOLEUILINKCONTAINERW;
typedef struct IPerPropertyBrowsing *LPPERPROPERTYBROWSING;
typedef struct _PRINTER_NOTIFY_INFO *LPPRINTER_NOTIFY_INFO;
typedef struct _PROCESS_INFORMATION *LPPROCESS_INFORMATION;
typedef struct _REPL_EDIR_INFO_1000 *LPREPL_EDIR_INFO_1000;
typedef struct _REPL_EDIR_INFO_1001 *LPREPL_EDIR_INFO_1001;
typedef IRichEditOleCallback *LPRICHEDITOLECALLBACK;
typedef struct _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;
typedef struct _SYSTEM_POWER_STATUS *LPSYSTEM_POWER_STATUS;
enum MACRO_ACCESS_ACE_FLAG {SUCCESSFUL_ACCESS_ACE_FLAG = 64,FAILED_ACCESS_ACE_FLAG = 128,};
enum MACRO_DISPID_AUTOSIZE {DISPID_AUTOSIZE = -500,DISPID_BACKCOLOR = -501,DISPID_BACKSTYLE = -502,DISPID_BORDERCOLOR = -503,DISPID_BORDERSTYLE = -504,DISPID_BORDERWIDTH = -505,DISPID_DRAWMODE = -507,DISPID_DRAWSTYLE = -508,DISPID_DRAWWIDTH = -509,DISPID_FILLCOLOR = -510,DISPID_FILLSTYLE = -511,DISPID_FONT = -512,DISPID_FORECOLOR = -513,DISPID_ENABLED = -514,DISPID_HWND = -515,DISPID_TABSTOP = -516,DISPID_TEXT = -517,DISPID_CAPTION = -518,DISPID_BORDERVISIBLE = -519,DISPID_APPEARANCE = -520,DISPID_REFRESH = -550,DISPID_DOCLICK = -551,DISPID_ABOUTBOX = -552,DISPID_CLICK = -600,DISPID_DBLCLICK = -601,DISPID_KEYDOWN = -602,DISPID_KEYPRESS = -603,DISPID_KEYUP = -604,DISPID_MOUSEDOWN = -605,DISPID_MOUSEMOVE = -606,DISPID_MOUSEUP = -607,DISPID_ERROREVENT = -608,DISPID_AMBIENT_BACKCOLOR = -701,DISPID_AMBIENT_DISPLAYNAME = -702,DISPID_AMBIENT_FONT = -703,DISPID_AMBIENT_FORECOLOR = -704,DISPID_AMBIENT_LOCALEID = -705,DISPID_AMBIENT_MESSAGEREFLECT = -706,DISPID_AMBIENT_SCALEUNITS = -707,DISPID_AMBIENT_TEXTALIGN = -708,DISPID_AMBIENT_USERMODE = -709,DISPID_AMBIENT_UIDEAD = -710,DISPID_AMBIENT_SHOWGRABHANDLES = -711,DISPID_AMBIENT_SHOWHATCHING = -712,DISPID_AMBIENT_DISPLAYASDEFAULT = -713,DISPID_AMBIENT_SUPPORTSMNEMONICS = -714,DISPID_AMBIENT_AUTOCLIP = -715,DISPID_AMBIENT_APPEARANCE = -716,DISPID_FONT_NAME = 0,DISPID_FONT_SIZE = 2,DISPID_FONT_BOLD = 3,DISPID_FONT_ITALIC = 4,DISPID_FONT_UNDER = 5,DISPID_FONT_STRIKE = 6,DISPID_FONT_WEIGHT = 7,DISPID_FONT_CHARSET = 8,DISPID_PICT_HANDLE = 0,DISPID_PICT_HPAL = 2,DISPID_PICT_TYPE = 3,DISPID_PICT_WIDTH = 4,DISPID_PICT_HEIGHT = 5,DISPID_PICT_RENDER = 6,};
enum MACRO_DRAWPATTERNRECT {DRAWPATTERNRECT = 25,};
enum MACRO_DUPLICATE_DEREG {DUPLICATE_DEREG = 0x7,};
enum MACRO_FLOODFILLBORDER {FLOODFILLBORDER = 0,FLOODFILLSURFACE = 1,};
enum MACRO_GETPHYSPAGESIZE {GETPHYSPAGESIZE = 12,};
enum MACRO_GETSETPAPERBINS {GETSETPAPERBINS = 29,};
enum MACRO_IMAGE_SUBSYSTEM {IMAGE_SUBSYSTEM_UNKNOWN = 0,IMAGE_SUBSYSTEM_NATIVE = 1,IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,IMAGE_SUBSYSTEM_OS2_CUI = 5,IMAGE_SUBSYSTEM_POSIX_CUI = 7,IMAGE_DIRECTORY_ENTRY_EXPORT = 0,IMAGE_DIRECTORY_ENTRY_IMPORT = 1,IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,IMAGE_DIRECTORY_ENTRY_SECURITY = 4,IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,IMAGE_DIRECTORY_ENTRY_DEBUG = 6,IMAGE_DIRECTORY_ENTRY_COPYRIGHT = 7,IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,IMAGE_DIRECTORY_ENTRY_TLS = 9,IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,IMAGE_DIRECTORY_ENTRY_IAT = 12,IMAGE_SCN_TYPE_NO_PAD = 8,IMAGE_SCN_CNT_CODE = 32,IMAGE_SCN_CNT_INITIALIZED_DATA = 64,IMAGE_SCN_CNT_UNINITIALIZED_DATA = 128,IMAGE_SCN_LNK_OTHER = 256,IMAGE_SCN_LNK_INFO = 512,IMAGE_SCN_LNK_REMOVE = 2048,IMAGE_SCN_LNK_COMDAT = 4096,IMAGE_SCN_MEM_FARDATA = 32768,IMAGE_SCN_MEM_PURGEABLE = 131072,IMAGE_SCN_MEM_16BIT = 131072,IMAGE_SCN_MEM_LOCKED = 262144,IMAGE_SCN_MEM_PRELOAD = 524288,IMAGE_SCN_ALIGN_1BYTES = 1048576,IMAGE_SCN_ALIGN_2BYTES = 2097152,IMAGE_SCN_ALIGN_4BYTES = 3145728,IMAGE_SCN_ALIGN_8BYTES = 4194304,IMAGE_SCN_ALIGN_16BYTES = 5242880,IMAGE_SCN_ALIGN_32BYTES = 6291456,IMAGE_SCN_ALIGN_64BYTES = 7340032,IMAGE_SCN_LNK_NRELOC_OVFL = 16777216,IMAGE_SCN_MEM_DISCARDABLE = 33554432,IMAGE_SCN_MEM_NOT_CACHED = 67108864,IMAGE_SCN_MEM_NOT_PAGED = 134217728,IMAGE_SCN_MEM_SHARED = 268435456,IMAGE_SCN_MEM_EXECUTE = 536870912,IMAGE_SCN_MEM_READ = 1073741824,IMAGE_SCN_MEM_WRITE = -2147483648,IMAGE_SYM_UNDEFINED = 0,IMAGE_SYM_ABSOLUTE = -1,IMAGE_SYM_DEBUG = -2,IMAGE_SYM_TYPE_NULL = 0,IMAGE_SYM_TYPE_VOID = 1,IMAGE_SYM_TYPE_CHAR = 2,IMAGE_SYM_TYPE_SHORT = 3,IMAGE_SYM_TYPE_INT = 4,IMAGE_SYM_TYPE_LONG = 5,IMAGE_SYM_TYPE_FLOAT = 6,IMAGE_SYM_TYPE_DOUBLE = 7,IMAGE_SYM_TYPE_STRUCT = 8,IMAGE_SYM_TYPE_UNION = 9,IMAGE_SYM_TYPE_ENUM = 10,IMAGE_SYM_TYPE_MOE = 11,IMAGE_SYM_TYPE_BYTE = 12,IMAGE_SYM_TYPE_WORD = 13,IMAGE_SYM_TYPE_UINT = 14,IMAGE_SYM_TYPE_DWORD = 15,IMAGE_SYM_TYPE_PCODE = 32768,IMAGE_SYM_DTYPE_NULL = 0,IMAGE_SYM_DTYPE_POINTER = 1,IMAGE_SYM_DTYPE_FUNCTION = 2,IMAGE_SYM_DTYPE_ARRAY = 3,IMAGE_SYM_CLASS_END_OF_FUNCTION = -1,IMAGE_SYM_CLASS_NULL = 0,IMAGE_SYM_CLASS_AUTOMATIC = 1,IMAGE_SYM_CLASS_EXTERNAL = 2,IMAGE_SYM_CLASS_STATIC = 3,IMAGE_SYM_CLASS_REGISTER = 4,IMAGE_SYM_CLASS_EXTERNAL_DEF = 5,IMAGE_SYM_CLASS_LABEL = 6,IMAGE_SYM_CLASS_UNDEFINED_LABEL = 7,IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = 8,IMAGE_SYM_CLASS_ARGUMENT = 9,IMAGE_SYM_CLASS_STRUCT_TAG = 10,IMAGE_SYM_CLASS_MEMBER_OF_UNION = 11,IMAGE_SYM_CLASS_UNION_TAG = 12,IMAGE_SYM_CLASS_TYPE_DEFINITION = 13,IMAGE_SYM_CLASS_UNDEFINED_STATIC = 14,IMAGE_SYM_CLASS_ENUM_TAG = 15,IMAGE_SYM_CLASS_MEMBER_OF_ENUM = 16,IMAGE_SYM_CLASS_REGISTER_PARAM = 17,IMAGE_SYM_CLASS_BIT_FIELD = 18,IMAGE_SYM_CLASS_FAR_EXTERNAL = 68,IMAGE_SYM_CLASS_BLOCK = 100,IMAGE_SYM_CLASS_FUNCTION = 101,IMAGE_SYM_CLASS_END_OF_STRUCT = 102,IMAGE_SYM_CLASS_FILE = 103,IMAGE_SYM_CLASS_SECTION = 104,IMAGE_SYM_CLASS_WEAK_EXTERNAL = 105,IMAGE_COMDAT_SELECT_NODUPLICATES = 1,IMAGE_COMDAT_SELECT_ANY = 2,IMAGE_COMDAT_SELECT_SAME_SIZE = 3,IMAGE_COMDAT_SELECT_EXACT_MATCH = 4,IMAGE_COMDAT_SELECT_ASSOCIATIVE = 5,IMAGE_COMDAT_SELECT_LARGEST = 6,IMAGE_COMDAT_SELECT_NEWEST = 7,IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 1,IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 2,IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 3,IMAGE_REL_I386_ABSOLUTE = 0,IMAGE_REL_I386_DIR16 = 1,IMAGE_REL_I386_REL16 = 2,IMAGE_REL_I386_DIR32 = 6,IMAGE_REL_I386_DIR32NB = 7,IMAGE_REL_I386_SEG12 = 9,IMAGE_REL_I386_SECTION = 10,IMAGE_REL_I386_SECREL = 11,IMAGE_REL_I386_REL32 = 20,IMAGE_REL_MIPS_ABSOLUTE = 0,IMAGE_REL_MIPS_REFHALF = 1,IMAGE_REL_MIPS_REFWORD = 2,IMAGE_REL_MIPS_JMPADDR = 3,IMAGE_REL_MIPS_REFHI = 4,IMAGE_REL_MIPS_REFLO = 5,IMAGE_REL_MIPS_GPREL = 6,IMAGE_REL_MIPS_LITERAL = 7,IMAGE_REL_MIPS_SECTION = 10,IMAGE_REL_MIPS_SECREL = 11,IMAGE_REL_MIPS_SECRELLO = 12,IMAGE_REL_MIPS_SECRELHI = 13,IMAGE_REL_MIPS_REFWORDNB = 34,IMAGE_REL_MIPS_PAIR = 35,IMAGE_REL_ALPHA_ABSOLUTE = 0,IMAGE_REL_ALPHA_REFLONG = 1,IMAGE_REL_ALPHA_REFQUAD = 2,IMAGE_REL_ALPHA_GPREL32 = 3,IMAGE_REL_ALPHA_LITERAL = 4,IMAGE_REL_ALPHA_LITUSE = 5,IMAGE_REL_ALPHA_GPDISP = 6,IMAGE_REL_ALPHA_BRADDR = 7,IMAGE_REL_ALPHA_HINT = 8,IMAGE_REL_ALPHA_INLINE_REFLONG = 9,IMAGE_REL_ALPHA_REFHI = 10,IMAGE_REL_ALPHA_REFLO = 11,IMAGE_REL_ALPHA_PAIR = 12,IMAGE_REL_ALPHA_MATCH = 13,IMAGE_REL_ALPHA_SECTION = 14,IMAGE_REL_ALPHA_SECREL = 15,IMAGE_REL_ALPHA_REFLONGNB = 16,IMAGE_REL_ALPHA_SECRELLO = 17,IMAGE_REL_ALPHA_SECRELHI = 18,IMAGE_REL_PPC_ABSOLUTE = 0,IMAGE_REL_PPC_ADDR64 = 1,IMAGE_REL_PPC_ADDR32 = 2,IMAGE_REL_PPC_ADDR24 = 3,IMAGE_REL_PPC_ADDR16 = 4,IMAGE_REL_PPC_ADDR14 = 5,IMAGE_REL_PPC_REL24 = 6,IMAGE_REL_PPC_REL14 = 7,IMAGE_REL_PPC_TOCREL16 = 8,IMAGE_REL_PPC_TOCREL14 = 9,IMAGE_REL_PPC_ADDR32NB = 10,IMAGE_REL_PPC_SECREL = 11,IMAGE_REL_PPC_SECTION = 12,IMAGE_REL_PPC_IFGLUE = 13,IMAGE_REL_PPC_IMGLUE = 14,IMAGE_REL_PPC_SECREL16 = 15,IMAGE_REL_PPC_REFHI = 16,IMAGE_REL_PPC_REFLO = 17,IMAGE_REL_PPC_PAIR = 18,IMAGE_REL_PPC_TYPEMASK = 255,IMAGE_REL_PPC_NEG = 256,IMAGE_REL_PPC_BRTAKEN = 512,IMAGE_REL_PPC_BRNTAKEN = 1024,IMAGE_REL_PPC_TOCDEFN = 2048,IMAGE_REL_BASED_ABSOLUTE = 0,IMAGE_REL_BASED_HIGH = 1,IMAGE_REL_BASED_LOW = 2,IMAGE_REL_BASED_HIGHLOW = 3,IMAGE_REL_BASED_HIGHADJ = 4,IMAGE_REL_BASED_MIPS_JMPADDR = 5,IMAGE_ARCHIVE_START_SIZE = 8,IMAGE_ORDINAL_FLAG = -2147483648,IMAGE_RESOURCE_NAME_IS_STRING = -2147483648,IMAGE_RESOURCE_DATA_IS_DIRECTORY = -2147483648,IMAGE_DEBUG_TYPE_UNKNOWN = 0,IMAGE_DEBUG_TYPE_COFF = 1,IMAGE_DEBUG_TYPE_CODEVIEW = 2,IMAGE_DEBUG_TYPE_FPO = 3,IMAGE_DEBUG_TYPE_MISC = 4,IMAGE_DEBUG_TYPE_EXCEPTION = 5,IMAGE_DEBUG_TYPE_FIXUP = 6,IMAGE_DEBUG_TYPE_OMAP_TO_SRC = 7,IMAGE_DEBUG_TYPE_OMAP_FROM_SRC = 8,};
enum MACRO_INTERNET_ACCESS {PRE_CONFIG_INTERNET_ACCESS = 0,LOCAL_INTERNET_ACCESS = 1,GATEWAY_INTERNET_ACCESS = 2,CERN_PROXY_INTERNET_ACCESS = 3,};
enum MACRO_INTERNET_OPTION {INTERNET_OPTION_CALLBACK = 1,INTERNET_OPTION_CONNECT_TIMEOUT = 2,INTERNET_OPTION_CONNECT_RETRIES = 3,INTERNET_OPTION_CONNECT_BACKOFF = 4,INTERNET_OPTION_SEND_TIMEOUT = 5,INTERNET_OPTION_CONTROL_SEND_TIMEOUT = 5,INTERNET_OPTION_RECEIVE_TIMEOUT = 6,INTERNET_OPTION_CONTROL_RECEIVE_TIMEOUT = 6,INTERNET_OPTION_DATA_SEND_TIMEOUT = 7,INTERNET_OPTION_DATA_RECEIVE_TIMEOUT = 8,INTERNET_OPTION_HANDLE_TYPE = 9,INTERNET_OPTION_CONTEXT_VALUE = 10,INTERNET_OPTION_LISTEN_TIMEOUT = 11,INTERNET_OPTION_READ_BUFFER_SIZE = 12,INTERNET_OPTION_WRITE_BUFFER_SIZE = 13,INTERNET_OPTION_ASYNC_ID = 15,INTERNET_OPTION_ASYNC_PRIORITY = 16,INTERNET_OPTION_PARENT_HANDLE = 21,INTERNET_OPTION_KEEP_CONNECTION = 22,INTERNET_OPTION_REQUEST_FLAGS = 23,INTERNET_OPTION_EXTENDED_ERROR = 24,INTERNET_OPTION_OFFLINE_MODE = 26,INTERNET_OPTION_CACHE_STREAM_HANDLE = 27,INTERNET_OPTION_USERNAME = 28,INTERNET_OPTION_PASSWORD = 29,INTERNET_OPTION_ASYNC = 30,INTERNET_OPTION_SECURITY_FLAGS = 31,INTERNET_OPTION_SECURITY_CERTIFICATE_STRUCT = 32,INTERNET_OPTION_DATAFILE_NAME = 33,INTERNET_OPTION_URL = 34,INTERNET_OPTION_SECURITY_CERTIFICATE = 35,INTERNET_OPTION_SECURITY_KEY_BITNESS = 36,INTERNET_OPTION_REFRESH = 37,INTERNET_OPTION_PROXY = 38,INTERNET_OPTION_SETTINGS_CHANGED = 39,INTERNET_OPTION_VERSION = 40,INTERNET_OPTION_USER_AGENT = 41,INTERNET_OPTION_END_BROWSER_SESSION = 42,INTERNET_OPTION_PROXY_USERNAME = 43,INTERNET_OPTION_PROXY_PASSWORD = 44,INTERNET_FIRST_OPTION = 1,INTERNET_LAST_OPTION = 41,INTERNET_PRIORITY_FOREGROUND = 1000,INTERNET_HANDLE_TYPE_INTERNET = 1,INTERNET_HANDLE_TYPE_CONNECT_FTP = 2,INTERNET_HANDLE_TYPE_CONNECT_GOPHER = 3,INTERNET_HANDLE_TYPE_CONNECT_HTTP = 4,INTERNET_HANDLE_TYPE_FTP_FIND = 5,INTERNET_HANDLE_TYPE_FTP_FIND_HTML = 6,INTERNET_HANDLE_TYPE_FTP_FILE = 7,INTERNET_HANDLE_TYPE_FTP_FILE_HTML = 8,INTERNET_HANDLE_TYPE_GOPHER_FIND = 9,INTERNET_HANDLE_TYPE_GOPHER_FIND_HTML = 10,INTERNET_HANDLE_TYPE_GOPHER_FILE = 11,INTERNET_HANDLE_TYPE_GOPHER_FILE_HTML = 12,INTERNET_HANDLE_TYPE_HTTP_REQUEST = 13,};
enum MACRO_LR_DEFAULTCOLOR {LR_DEFAULTCOLOR = 0,LR_MONOCHROME = 1,LR_COLOR = 2,LR_COPYRETURNORG = 4,LR_COPYDELETEORG = 8,LR_LOADFROMFILE = 16,LR_LOADTRANSPARENT = 32,LR_LOADREALSIZE = 128,LR_LOADMAP3DCOLORS = 4096,LR_CREATEDIBSECTION = 8192,LR_COPYFROMRESOURCE = 16384,LR_SHARED = 32768,};
enum MACRO_LVM_GETITEMRECT {LVM_GETITEMRECT = 4110,LVM_SETITEMPOSITION = 4111,LVM_GETITEMPOSITION = 4112,LVM_GETSTRINGWIDTHA = 4113,LVM_GETSTRINGWIDTHW = 4183,};
enum MACRO_LVM_GETNEXTITEM {LVM_GETNEXTITEM = 4108,};
enum MACRO_NAME_INFO_LEVEL {UNIVERSAL_NAME_INFO_LEVEL = 1,REMOTE_NAME_INFO_LEVEL = 2,};
enum MACRO_PAGESETUPDLGORD {PAGESETUPDLGORD = 1546,};
enum MACRO_PHYSICALOFFSETX {PHYSICALOFFSETX = 112,};
enum MACRO_PHYSICALOFFSETY {PHYSICALOFFSETY = 113,};
enum MACRO_PS_MAXLINKTYPES {PS_MAXLINKTYPES = 8,};
enum MACRO_QUERYDIBSUPPORT {QUERYDIBSUPPORT = 3073,};
enum MACRO_SESSION_ABORTED {SESSION_ABORTED = 0x6,};
enum MACRO_SORT_STRINGSORT {SORT_STRINGSORT = 4096,};
enum MACRO_THREAD_PRIORITY {THREAD_PRIORITY_ABOVE_NORMAL = 1,THREAD_PRIORITY_BELOW_NORMAL = -1,THREAD_PRIORITY_HIGHEST = 2,THREAD_PRIORITY_IDLE = -15,THREAD_PRIORITY_LOWEST = -2,THREAD_PRIORITY_NORMAL = 0,THREAD_PRIORITY_TIME_CRITICAL = 15,THREAD_PRIORITY_ERROR_RETURN = 2147483647,};
enum MACRO_TITLEBARNAMELEN {TITLEBARNAMELEN = 40,};
enum MACRO_TVN_SELCHANGING {TVN_SELCHANGING = -401,TVN_SELCHANGED = -402,TVN_GETDISPINFO = -403,TVN_SETDISPINFO = -404,TVN_ITEMEXPANDING = -405,TVN_ITEMEXPANDED = -406,TVN_BEGINDRAG = -407,TVN_BEGINRDRAG = -408,TVN_DELETEITEM = -409,TVN_BEGINLABELEDIT = -410,TVN_ENDLABELEDIT = -411,};
enum MACRO_USER_MAXSTORAGE {USER_MAXSTORAGE_UNLIMITED = 4294967295,USER_NO_LOGOFF = 4294967295,};
enum MACRO_WSAEAFNOSUPPORT {WSAEAFNOSUPPORT = 10047,};
enum MACRO_WSAECONNABORTED {WSAECONNABORTED = 10053,};
enum MACRO_WSAECONNREFUSED {WSAECONNREFUSED = 10061,};
enum MACRO_WSAEDESTADDRREQ {WSAEDESTADDRREQ = 10039,};
enum MACRO_WSAEHOSTUNREACH {WSAEHOSTUNREACH = 10065,};
enum MACRO_WSAENAMETOOLONG {WSAENAMETOOLONG = 10063,};
enum MACRO_WSAEPFNOSUPPORT {WSAEPFNOSUPPORT = 10046,};
enum MACRO_WSAETOOMANYREFS {WSAETOOMANYREFS = 10059,};
enum MACRO_idsNoHelpMemory {idsNoHelpMemory = 1008,};
typedef struct tagMCI_ANIM_UPDATE_PARMS MCI_ANIM_UPDATE_PARMS;
typedef struct tagMCI_WAVE_DELETE_PARMS MCI_WAVE_DELETE_PARMS;
typedef struct _MESSAGE_RESOURCE_DATA MESSAGE_RESOURCE_DATA;
typedef struct _PARTITION_INFORMATION PARTITION_INFORMATION;
typedef struct _DEV_BROADCAST_VOLUME *PDEV_BROADCAST_VOLUME;
typedef struct tagEMREXCLUDECLIPRECT *PEMRINTERSECTCLIPRECT;
typedef struct tagEMRSETDIBITSTODEVICE *PEMRSETDIBITSTODEVICE;
typedef struct tagEMRSETPALETTEENTRIES *PEMRSETPALETTEENTRIES;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETSTRETCHBLTMODE;
typedef struct tagEMRSETWORLDTRANSFORM *PEMRSETWORLDTRANSFORM;
typedef struct tagEMRFILLPATH *PEMRSTROKEANDFILLPATH;
typedef struct _FORMAT_EX_PARAMETERS *PFORMAT_EX_PARAMETERS;
typedef struct _FULL_PTR_XLAT_TABLES *PFULL_PTR_XLAT_TABLES;
typedef struct __GENERIC_BINDING_INFO *PGENERIC_BINDING_INFO;
typedef struct _IMAGE_DATA_DIRECTORY *PIMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_FUNCTION_ENTRY *PIMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_IMPORT_BY_NAME *PIMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_SECTION_HEADER *PIMAGE_SECTION_HEADER;
typedef struct _SECURITY_DESCRIPTOR *PISECURITY_DESCRIPTOR;
typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;
typedef struct tagLAYERPLANEDESCRIPTOR *PLAYERPLANEDESCRIPTOR;
typedef struct _LOCALGROUP_INFO_1002 *PLOCALGROUP_INFO_1002;
typedef struct tagMCI_ANIM_OPEN_PARMSA *PMCI_ANIM_OPEN_PARMSA;
typedef struct tagMCI_ANIM_OPEN_PARMSW *PMCI_ANIM_OPEN_PARMSW;
typedef struct tagMCI_GETDEVCAPS_PARMS *PMCI_GETDEVCAPS_PARMS;
typedef struct tagMCI_OVLY_LOAD_PARMSA *PMCI_OVLY_LOAD_PARMSA;
typedef struct tagMCI_OVLY_LOAD_PARMSW *PMCI_OVLY_LOAD_PARMSW;
typedef struct tagMCI_OVLY_OPEN_PARMSA *PMCI_OVLY_OPEN_PARMSA;
typedef struct tagMCI_OVLY_OPEN_PARMSW *PMCI_OVLY_OPEN_PARMSW;
typedef struct tagMCI_OVLY_SAVE_PARMSA *PMCI_OVLY_SAVE_PARMSA;
typedef struct tagMCI_OVLY_SAVE_PARMSW *PMCI_OVLY_SAVE_PARMSW;
typedef struct tagMCI_VD_ESCAPE_PARMSA *PMCI_VD_ESCAPE_PARMSA;
typedef struct tagMCI_VD_ESCAPE_PARMSW *PMCI_VD_ESCAPE_PARMSW;
typedef struct tagMCI_WAVE_OPEN_PARMSA *PMCI_WAVE_OPEN_PARMSA;
typedef struct tagMCI_WAVE_OPEN_PARMSW *PMCI_WAVE_OPEN_PARMSW;
typedef struct _PREVENT_MEDIA_REMOVAL PREVENT_MEDIA_REMOVAL;
typedef struct _RPC_CLIENT_INTERFACE *PRPC_CLIENT_INTERFACE;
typedef struct _7F42DEB2BB5D0DE64733A8884285C23D *PRPC_IMPORT_CONTEXT_P;
typedef struct _RPC_PROTSEQ_ENDPOINT *PRPC_PROTSEQ_ENDPOINT;
typedef struct _RPC_SERVER_INTERFACE *PRPC_SERVER_INTERFACE;
typedef struct _RTL_CRITICAL_SECTION *PRTL_CRITICAL_SECTION;
typedef struct urlinvokecommandinfo *PURLINVOKECOMMANDINFO;
typedef struct _WKSTA_USER_INFO_1101 *PWKSTA_USER_INFO_1101;
typedef struct _WSAServiceClassInfoA *PWSASERVICECLASSINFOA;
typedef struct _WSAServiceClassInfoW *PWSASERVICECLASSINFOW;
typedef struct _QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIGA;
typedef struct _QUERY_SERVICE_CONFIGW QUERY_SERVICE_CONFIGW;
typedef int (*RPC_BLOCKING_FUNCTION)(void *, void *);
typedef struct _RPC_SYNTAX_IDENTIFIER RPC_SYNTAX_IDENTIFIER;
typedef struct _TAPE_CREATE_PARTITION TAPE_CREATE_PARTITION;
typedef struct _TIME_ZONE_INFORMATION TIME_ZONE_INFORMATION;
typedef struct _TRANSMIT_FILE_BUFFERS TRANSMIT_FILE_BUFFERS;
typedef struct _UNLOAD_DLL_DEBUG_INFO UNLOAD_DLL_DEBUG_INFO;
typedef struct _USER_MODALS_INFO_1001 USER_MODALS_INFO_1001;
typedef struct _USER_MODALS_INFO_1002 USER_MODALS_INFO_1002;
typedef struct _USER_MODALS_INFO_1003 USER_MODALS_INFO_1003;
typedef struct _USER_MODALS_INFO_1004 USER_MODALS_INFO_1004;
typedef struct _USER_MODALS_INFO_1005 USER_MODALS_INFO_1005;
typedef struct _USER_MODALS_INFO_1006 USER_MODALS_INFO_1006;
typedef struct _USER_MODALS_INFO_1007 USER_MODALS_INFO_1007;
enum _CM_SERVICE_LOAD_TYPE {BootLoad = 0x0,SystemLoad = 0x1,AutoLoad = 0x2,DemandLoad = 0x3,DisableLoad = 0x4,};
enum _CM_SERVICE_NODE_TYPE {DriverType = 0x1,FileSystemType = 0x2,Win32ServiceOwnProcess = 0x10,Win32ServiceShareProcess = 0x20,AdapterType = 0x4,RecognizerType = 0x8,};
struct _RPC_PROTSEQ_ENDPOINT {unsigned char *RpcProtocolSequence;unsigned char *Endpoint;};
typedef union _D1D0F511BF997F52624AFB2B0CE27B40 pthread_barrierattr_t;
enum translateurl_in_flags {TRANSLATEURL_FL_GUESS_PROTOCOL = 0x1,TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL = 0x2,ALL_TRANSLATEURL_FLAGS = 0x3,};
typedef struct _ACL_SIZE_INFORMATION ACL_SIZE_INFORMATION;
typedef struct tagCInterfaceStubHeader CInterfaceStubHeader;
typedef struct _DEV_BROADCAST_VOLUME DEV_BROADCAST_VOLUME;
typedef struct tagEMREXCLUDECLIPRECT EMRINTERSECTCLIPRECT;
typedef struct tagEMRSETDIBITSTODEVICE EMRSETDIBITSTODEVICE;
typedef struct tagEMRSETPALETTEENTRIES EMRSETPALETTEENTRIES;
typedef struct tagEMRSELECTCLIPPATH EMRSETSTRETCHBLTMODE;
typedef struct tagEMRSETWORLDTRANSFORM EMRSETWORLDTRANSFORM;
typedef struct tagEMRFILLPATH EMRSTROKEANDFILLPATH;
typedef struct _ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUSA;
typedef struct _ENUM_SERVICE_STATUSW ENUM_SERVICE_STATUSW;
typedef struct _EXCEPTION_DEBUG_INFO EXCEPTION_DEBUG_INFO;
typedef struct _FORMAT_EX_PARAMETERS FORMAT_EX_PARAMETERS;
typedef struct _FULL_PTR_XLAT_TABLES FULL_PTR_XLAT_TABLES;
typedef struct __GENERIC_BINDING_INFO GENERIC_BINDING_INFO;
typedef struct _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_FUNCTION_ENTRY IMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_IMPORT_BY_NAME IMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER;
typedef struct tagINITCOMMONCONTROLSEX INITCOMMONCONTROLSEX;
struct IOleUILinkContainerA {struct IOleUILinkContainerAVtbl *lpVtbl;};
struct IOleUILinkContainerW {struct IOleUILinkContainerWVtbl *lpVtbl;};
struct IPerPropertyBrowsing {struct IPerPropertyBrowsingVtbl *lpVtbl;};
struct IRichEditOleCallback {struct IRichEditOleCallbackVtbl *lpVtbl;};
typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR;
typedef struct _LOCALGROUP_INFO_1002 LOCALGROUP_INFO_1002;
typedef struct _BROWSER_STATISTICS *LPBROWSER_STATISTICS;
typedef struct _CHARDEVQ_INFO_1002 *LPCHARDEVQ_INFO_1002;
typedef struct _CHARDEVQ_INFO_1003 *LPCHARDEVQ_INFO_1003;
typedef struct tagCLIENTCREATESTRUCT *LPCLIENTCREATESTRUCT;
typedef struct IEnumSTATPROPSETSTG *LPENUMSTATPROPSETSTG;
typedef struct _EXCEPTION_POINTERS *LPEXCEPTION_POINTERS;
typedef struct IExternalConnection *LPEXTERNALCONNECTION;
typedef struct _GROUP_USERS_INFO_0 *LPGROUP_USERS_INFO_0;
typedef struct _GROUP_USERS_INFO_1 *LPGROUP_USERS_INFO_1;
typedef struct tagMCI_SYSINFO_PARMSA *LPMCI_SYSINFO_PARMSA;
typedef struct tagMCI_SYSINFO_PARMSW *LPMCI_SYSINFO_PARMSW;
typedef struct tagMCI_WAVE_SET_PARMS *LPMCI_WAVE_SET_PARMS;
typedef struct tagMIXERLINECONTROLSA *LPMIXERLINECONTROLSA;
typedef struct tagMIXERLINECONTROLSW *LPMIXERLINECONTROLSW;
typedef struct IOleInPlaceUIWindow *LPOLEINPLACEUIWINDOW;
typedef struct tagOleMenuGroupWidths *LPOLEMENUGROUPWIDTHS;
typedef struct tagOLEUICHANGESOURCEA *LPOLEUICHANGESOURCEA;
typedef struct tagOLEUICHANGESOURCEW *LPOLEUICHANGESOURCEW;
typedef struct tagOLEUIINSERTOBJECTA *LPOLEUIINSERTOBJECTA;
typedef struct tagOLEUIINSERTOBJECTW *LPOLEUIINSERTOBJECTW;
typedef struct tagOLEUIPASTESPECIALA *LPOLEUIPASTESPECIALA;
typedef struct tagOLEUIPASTESPECIALW *LPOLEUIPASTESPECIALW;
typedef struct _OUTLINETEXTMETRICA *LPOUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;
typedef struct IPersistPropertyBag *LPPERSISTPROPERTYBAG;
typedef struct _PROCESS_HEAP_ENTRY *LPPROCESS_HEAP_ENTRY;
typedef struct IPropertyNotifySink *LPPROPERTYNOTIFYSINK;
typedef struct IPropertySetStorage *LPPROPERTYSETSTORAGE;
typedef struct IRunningObjectTable *LPRUNNINGOBJECTTABLE;
typedef struct _STAT_WORKSTATION_0 *LPSTAT_WORKSTATION_0;
typedef struct _USER_MODALS_INFO_0 *LPUSER_MODALS_INFO_0;
typedef struct _USER_MODALS_INFO_1 *LPUSER_MODALS_INFO_1;
typedef struct _USER_MODALS_INFO_2 *LPUSER_MODALS_INFO_2;
typedef struct _USER_MODALS_INFO_3 *LPUSER_MODALS_INFO_3;
typedef struct _WSANAMESPACE_INFOA *LPWSANAMESPACE_INFOA;
typedef struct _WSANAMESPACE_INFOW *LPWSANAMESPACE_INFOW;
enum MACRO_APMMENUSUSPEND {APMMENUSUSPEND_DISABLED = 0,APMMENUSUSPEND_ENABLED = 1,APMMENUSUSPEND_UNDOCKED = 2,APMMENUSUSPEND_NOCHANGE = 128,};
enum MACRO_BUTTON_PRESSED {FROM_LEFT_1ST_BUTTON_PRESSED = 1,RIGHTMOST_BUTTON_PRESSED = 2,FROM_LEFT_2ND_BUTTON_PRESSED = 4,FROM_LEFT_3RD_BUTTON_PRESSED = 8,FROM_LEFT_4TH_BUTTON_PRESSED = 16,};
enum MACRO_C1_TRANSPARENT {C1_TRANSPARENT = 1,};
enum MACRO_CF_SCREENFONTS {CF_SCREENFONTS = 1,CF_PRINTERFONTS = 2,CF_BOTH = 3,CF_SHOWHELP = 4,CF_ENABLEHOOK = 8,CF_ENABLETEMPLATE = 16,CF_ENABLETEMPLATEHANDLE = 32,CF_INITTOLOGFONTSTRUCT = 64,CF_USESTYLE = 128,CF_EFFECTS = 256,CF_APPLY = 512,CF_ANSIONLY = 1024,CF_SCRIPTSONLY = 1024,CF_NOVECTORFONTS = 2048,CF_NOOEMFONTS = 2048,CF_NOSIMULATIONS = 4096,CF_LIMITSIZE = 8192,CF_FIXEDPITCHONLY = 16384,CF_WYSIWYG = 32768,CF_FORCEFONTEXIST = 65536,CF_SCALABLEONLY = 131072,CF_TTONLY = 262144,CF_NOFACESEL = 524288,CF_NOSTYLESEL = 1048576,CF_NOSIZESEL = 2097152,CF_SELECTSCRIPT = 4194304,CF_NOSCRIPTSEL = 8388608,CF_NOVERTFONTS = 16777216,};
enum MACRO_CRYPT_USERDATA {CRYPT_USERDATA = 1,};
enum MACRO_CWCSTORAGENAME {CWCSTORAGENAME = 32,};
enum MACRO_DESKTOPHORZRES {DESKTOPHORZRES = 118,};
enum MACRO_DESKTOPVERTRES {DESKTOPVERTRES = 117,};
enum MACRO_DLGWINDOWEXTRA {DLGWINDOWEXTRA = 30,};
enum MACRO_DOWNLOADHEADER {DOWNLOADHEADER = 4111,};
enum MACRO_DTN_USERSTRING {DTN_USERSTRING = -758,DTN_WMKEYDOWN = -757,DTN_FORMAT = -756,DTN_FORMATQUERY = -755,};
enum MACRO_EN_CORRECTTEXT {EN_CORRECTTEXT = 1797,EN_DROPFILES = 1795,EN_IMECHANGE = 1799,EN_MSGFILTER = 1792,EN_OLEOPFAILED = 1801,EN_PROTECTED = 1796,EN_REQUESTRESIZE = 1793,EN_SAVECLIPBOARD = 1800,EN_SELCHANGE = 1794,EN_STOPNOUNDO = 1798,};
enum MACRO_ERROR_INTERNET {ERROR_INTERNET_OUT_OF_HANDLES = 12001,ERROR_INTERNET_TIMEOUT = 12002,ERROR_INTERNET_EXTENDED_ERROR = 12003,ERROR_INTERNET_INTERNAL_ERROR = 12004,ERROR_INTERNET_INVALID_URL = 12005,ERROR_INTERNET_UNRECOGNIZED_SCHEME = 12006,ERROR_INTERNET_NAME_NOT_RESOLVED = 12007,ERROR_INTERNET_PROTOCOL_NOT_FOUND = 12008,ERROR_INTERNET_INVALID_OPTION = 12009,ERROR_INTERNET_BAD_OPTION_LENGTH = 12010,ERROR_INTERNET_OPTION_NOT_SETTABLE = 12011,ERROR_INTERNET_SHUTDOWN = 12012,ERROR_INTERNET_INCORRECT_USER_NAME = 12013,ERROR_INTERNET_INCORRECT_PASSWORD = 12014,ERROR_INTERNET_LOGIN_FAILURE = 12015,ERROR_INTERNET_INVALID_OPERATION = 12016,ERROR_INTERNET_OPERATION_CANCELLED = 12017,ERROR_INTERNET_INCORRECT_HANDLE_TYPE = 12018,ERROR_INTERNET_INCORRECT_HANDLE_STATE = 12019,ERROR_INTERNET_NOT_PROXY_REQUEST = 12020,ERROR_INTERNET_REGISTRY_VALUE_NOT_FOUND = 12021,ERROR_INTERNET_BAD_REGISTRY_PARAMETER = 12022,ERROR_INTERNET_NO_DIRECT_ACCESS = 12023,ERROR_INTERNET_NO_CONTEXT = 12024,ERROR_INTERNET_NO_CALLBACK = 12025,ERROR_INTERNET_REQUEST_PENDING = 12026,ERROR_INTERNET_INCORRECT_FORMAT = 12027,ERROR_INTERNET_ITEM_NOT_FOUND = 12028,ERROR_INTERNET_CANNOT_CONNECT = 12029,ERROR_INTERNET_CONNECTION_ABORTED = 12030,ERROR_INTERNET_CONNECTION_RESET = 12031,ERROR_INTERNET_FORCE_RETRY = 12032,ERROR_INTERNET_INVALID_PROXY_REQUEST = 12033,ERROR_INTERNET_NEED_UI = 12034,ERROR_INTERNET_HANDLE_EXISTS = 12036,ERROR_INTERNET_SEC_CERT_DATE_INVALID = 12037,ERROR_INTERNET_SEC_CERT_CN_INVALID = 12038,ERROR_INTERNET_HTTP_TO_HTTPS_ON_REDIR = 12039,ERROR_INTERNET_HTTPS_TO_HTTP_ON_REDIR = 12040,ERROR_INTERNET_MIXED_SECURITY = 12041,ERROR_INTERNET_CHG_POST_IS_NON_SECURE = 12042,ERROR_INTERNET_POST_IS_NON_SECURE = 12043,ERROR_INTERNET_CLIENT_AUTH_CERT_NEEDED = 12044,ERROR_INTERNET_INVALID_CA = 12045,ERROR_INTERNET_CLIENT_AUTH_NOT_SETUP = 12046,ERROR_INTERNET_ASYNC_THREAD_FAILED = 12047,ERROR_INTERNET_REDIRECT_SCHEME_CHANGE = 12048,ERROR_FTP_TRANSFER_IN_PROGRESS = 12110,ERROR_FTP_DROPPED = 12111,ERROR_GOPHER_PROTOCOL_ERROR = 12130,ERROR_GOPHER_NOT_FILE = 12131,ERROR_GOPHER_DATA_ERROR = 12132,ERROR_GOPHER_END_OF_DATA = 12133,ERROR_GOPHER_INVALID_LOCATOR = 12134,ERROR_GOPHER_INCORRECT_LOCATOR_TYPE = 12135,ERROR_GOPHER_NOT_GOPHER_PLUS = 12136,ERROR_GOPHER_ATTRIBUTE_NOT_FOUND = 12137,ERROR_GOPHER_UNKNOWN_LOCATOR = 12138,ERROR_HTTP_HEADER_NOT_FOUND = 12150,ERROR_HTTP_DOWNLEVEL_SERVER = 12151,ERROR_HTTP_INVALID_SERVER_RESPONSE = 12152,ERROR_HTTP_INVALID_HEADER = 12153,ERROR_HTTP_INVALID_QUERY_REQUEST = 12154,ERROR_HTTP_HEADER_ALREADY_EXISTS = 12155,ERROR_HTTP_REDIRECT_FAILED = 12156,ERROR_HTTP_NOT_REDIRECTED = 12160,ERROR_INTERNET_SECURITY_CHANNEL_ERROR = 12157,ERROR_INTERNET_UNABLE_TO_CACHE_FILE = 12158,ERROR_INTERNET_TCPIP_NOT_INSTALLED = 12159,};
enum MACRO_ERROR_SEVERITY {ERROR_SEVERITY_SUCCESS = 0x0,ERROR_SEVERITY_INFORMATIONAL = 0x40000000,ERROR_SEVERITY_WARNING = 0x80000000,ERROR_SEVERITY_ERROR = 0xC0000000,};
enum MACRO_FORMATDLGORD30 {FORMATDLGORD30 = 1544,};
enum MACRO_FORMATDLGORD31 {FORMATDLGORD31 = 1543,};
enum MACRO_GCL_CONVERSION {GCL_CONVERSION = 1,GCL_REVERSECONVERSION = 2,GCL_REVERSE_LENGTH = 3,};
enum MACRO_GETDEVICEUNITS {GETDEVICEUNITS = 42,GETEXTENDEDTEXTMETRICS = 256,};
enum MACRO_GETEXTENTTABLE {GETEXTENTTABLE = 257,};
enum MACRO_HDM_INSERTITEM {HDM_INSERTITEM = 4609,HDM_GETITEM = 4611,HDM_SETITEM = 4612,};
enum MACRO_INTERNET_ERROR {INTERNET_ERROR_BASE = 12000,};
enum MACRO_INVALID_SOCKET {INVALID_SOCKET = 4294967295,};
enum MACRO_LVM_GETCOLUMNA {LVM_GETCOLUMNA = 4121,LVM_GETCOLUMNW = 4191,LVM_SETCOLUMNA = 4122,LVM_SETCOLUMNW = 4192,LVM_INSERTCOLUMNA = 4123,LVM_INSERTCOLUMNW = 4193,LVM_DELETECOLUMN = 4124,LVM_GETCOLUMNWIDTH = 4125,};
enum MACRO_MAXPERMENTRIES {MAXPERMENTRIES = 64,};
enum MACRO_MB_PRECOMPOSED {MB_PRECOMPOSED = 1,MB_COMPOSITE = 2,MB_ERR_INVALID_CHARS = 8,MB_USEGLYPHCHARS = 4,};
enum MACRO_MOM_POSITIONCB {MOM_POSITIONCB = 970,};
enum MACRO_NCBCHAINSENDNA {NCBCHAINSENDNA = 0x72,};
enum MACRO_NEWTRANSPARENT {NEWTRANSPARENT = 3,QUERYROPSUPPORT = 40,};
enum MACRO_NM_OUTOFMEMORY {NM_OUTOFMEMORY = -1,NM_CLICK = -2,NM_DBLCLK = -3,NM_RETURN = -4,NM_RCLICK = -5,NM_RDBLCLK = -6,NM_SETFOCUS = -7,NM_KILLFOCUS = -8,NM_CUSTOMDRAW = -12,NM_HOVER = -13,NM_NCHITTEST = -14,NM_KEYDOWN = -15,NM_RELEASEDCAPTURE = -16,NM_SETCURSOR = -17,NM_CHAR = -18,};
enum MACRO_PHYSICALHEIGHT {PHYSICALHEIGHT = 111,};
enum MACRO_PRIORITY_CLASS {NORMAL_PRIORITY_CLASS = 32,IDLE_PRIORITY_CLASS = 64,HIGH_PRIORITY_CLASS = 128,REALTIME_PRIORITY_CLASS = 256,};
enum MACRO_PRNSETUPDLGORD {PRNSETUPDLGORD = 1539,};
enum MACRO_PROPPAGESTATUS {PROPPAGESTATUS_DIRTY = 1,PROPPAGESTATUS_VALIDATE = 2,};
enum MACRO_RB_INSERTBANDA {RB_INSERTBANDA = 1025,RB_INSERTBANDW = 1034,RB_DELETEBAND = 1026,RB_GETBARINFO = 1027,RB_SETBARINFO = 1028,RB_GETBANDCOUNT = 1036,RB_GETROWCOUNT = 1037,RB_GETROWHEIGHT = 1038,RB_SETBANDINFOA = 1030,RB_SETBANDINFOW = 1035,RB_SETPARENT = 1031,RB_GETBANDINFO = 1029,};
enum MACRO_SCALINGFACTORX {SCALINGFACTORX = 114,};
enum MACRO_SCALINGFACTORY {SCALINGFACTORY = 115,};
enum MACRO_SP_NOTREPORTED {SP_NOTREPORTED = 0x4000,};
enum MACRO_TVM_INSERTITEM {TVM_INSERTITEM = 4352,TVM_GETITEM = 4364,TVM_SETITEM = 4365,TVM_EDITLABEL = 4366,TVM_GETISEARCHSTRING = 4375,};
enum MACRO_WSAEINPROGRESS {WSAEINPROGRESS = 10036,};
enum MACRO_WSAENETUNREACH {WSAENETUNREACH = 10051,};
enum MACRO_WSAENOPROTOOPT {WSAENOPROTOOPT = 10042,};
enum MACRO_WSAEWOULDBLOCK {WSAEWOULDBLOCK = 10035,};
enum MACRO_WSASYSNOTREADY {WSASYSNOTREADY = 10091,};
enum MACRO__SYS_SYSMACROS {_SYS_SYSMACROS_H = 1,_BITS_PTHREADTYPES_H = 1,};
enum MACRO_idsDifferentPW {idsDifferentPW = 1004,};
enum MACRO_idsScreenSaver {idsScreenSaver = 1002,};
typedef struct tagMCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMSA;
typedef struct tagMCI_ANIM_OPEN_PARMSW MCI_ANIM_OPEN_PARMSW;
typedef struct tagMCI_GETDEVCAPS_PARMS MCI_GETDEVCAPS_PARMS;
typedef struct tagMCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMSA;
typedef struct tagMCI_OVLY_LOAD_PARMSW MCI_OVLY_LOAD_PARMSW;
typedef struct tagMCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMSA;
typedef struct tagMCI_OVLY_OPEN_PARMSW MCI_OVLY_OPEN_PARMSW;
typedef struct tagMCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMSA;
typedef struct tagMCI_OVLY_SAVE_PARMSW MCI_OVLY_SAVE_PARMSW;
typedef struct tagMCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMSA;
typedef struct tagMCI_VD_ESCAPE_PARMSW MCI_VD_ESCAPE_PARMSW;
typedef struct tagMCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMSA;
typedef struct tagMCI_WAVE_OPEN_PARMSW MCI_WAVE_OPEN_PARMSW;
typedef struct _NETCONNECTINFOSTRUCT NETCONNECTINFOSTRUCT;
typedef struct _CONSOLE_CURSOR_INFO *PCONSOLE_CURSOR_INFO;
typedef struct tagEMRCREATECOLORSPACE *PEMRCREATECOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE *PEMRDELETECOLORSPACE;
typedef struct tagEMREXTSELECTCLIPRGN *PEMREXTSELECTCLIPRGN;
typedef struct tagEMRSCALEVIEWPORTEXTEX *PEMRSCALEWINDOWEXTEX;
typedef struct tagEMRSELECTCOLORSPACE *PEMRSELECTCOLORSPACE;
typedef struct tagEMRSETVIEWPORTEXTEX *PEMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETVIEWPORTORGEX;
typedef struct _IMAGE_TLS_DIRECTORY *PIMAGE_TLS_DIRECTORY;
typedef struct tagMCI_ANIM_PLAY_PARMS *PMCI_ANIM_PLAY_PARMS;
typedef struct tagMCI_ANIM_RECT_PARMS *PMCI_ANIM_RECT_PARMS;
typedef struct tagMCI_ANIM_STEP_PARMS *PMCI_ANIM_STEP_PARMS;
typedef struct tagMCI_OVLY_RECT_PARMS *PMCI_OVLY_RECT_PARMS;
typedef struct tMIXERCONTROLDETAILS *PMIXERCONTROLDETAILS;
typedef struct _NET_DISPLAY_MACHINE *PNET_DISPLAY_MACHINE;
typedef struct _PRINTER_NOTIFY_INFO *PPRINTER_NOTIFY_INFO;
typedef struct _REPL_EDIR_INFO_1000 *PREPL_EDIR_INFO_1000;
typedef struct _REPL_EDIR_INFO_1001 *PREPL_EDIR_INFO_1001;
typedef struct _SECURITY_ATTRIBUTES *PSECURITY_ATTRIBUTES;
typedef struct _SECURITY_DESCRIPTOR *PSECURITY_DESCRIPTOR;
typedef struct _RPC_CLIENT_INTERFACE RPC_CLIENT_INTERFACE;
typedef struct _7F42DEB2BB5D0DE64733A8884285C23D RPC_IMPORT_CONTEXT_P;
typedef struct _RPC_PROTSEQ_ENDPOINT RPC_PROTSEQ_ENDPOINT;
typedef struct _RPC_SERVER_INTERFACE RPC_SERVER_INTERFACE;
typedef void *RPC_SS_THREAD_HANDLE;
typedef struct _RTL_CRITICAL_SECTION RTL_CRITICAL_SECTION;
typedef struct _SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRYA;
typedef struct _SERVICE_TABLE_ENTRYW SERVICE_TABLE_ENTRYW;
typedef struct _UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFOA;
typedef struct _UNIVERSAL_NAME_INFOW UNIVERSAL_NAME_INFOW;
typedef struct urlinvokecommandinfo URLINVOKECOMMANDINFO;
typedef struct _WKSTA_USER_INFO_1101 WKSTA_USER_INFO_1101;
typedef struct _WSAServiceClassInfoA WSASERVICECLASSINFOA;
typedef struct _WSAServiceClassInfoW WSASERVICECLASSINFOW;
struct _RPC_PROTSEQ_VECTORA {unsigned int Count;unsigned char *Protseq[1];};
struct _RPC_PROTSEQ_VECTORW {unsigned int Count;unsigned short *Protseq[1];};
typedef union _7B6D3CF7C92E6402FF2DDB4E46F022F4 pthread_rwlockattr_t;
typedef struct tagCInterfaceProxyVtbl CInterfaceProxyVtbl;
typedef struct _CMInvokeCommandInfo CMINVOKECOMMANDINFO;
typedef struct _CONSOLE_CURSOR_INFO CONSOLE_CURSOR_INFO;
typedef struct tagCStdPSFactoryBuffer CStdPSFactoryBuffer;
typedef struct tagDDEML_MSG_HOOK_DATA DDEML_MSG_HOOK_DATA;
typedef struct tagEMRCREATECOLORSPACE EMRCREATECOLORSPACE;
typedef struct tagEMRSELECTCOLORSPACE EMRDELETECOLORSPACE;
typedef struct tagEMREXTSELECTCLIPRGN EMREXTSELECTCLIPRGN;
typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEWINDOWEXTEX;
typedef struct tagEMRSELECTCOLORSPACE EMRSELECTCOLORSPACE;
typedef struct tagEMRSETVIEWPORTEXTEX EMRSETVIEWPORTEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETVIEWPORTORGEX;
typedef struct _FILEGROUPDESCRIPTOR FILEGROUPDESCRIPTOR;
struct IEnumSTATPROPSETSTG {struct IEnumSTATPROPSETSTGVtbl *lpVtbl;};
struct IExternalConnection {struct IExternalConnectionVtbl *lpVtbl;};
typedef struct _IMAGE_TLS_DIRECTORY IMAGE_TLS_DIRECTORY;
typedef struct _C3D536761911E1B34BFF5DAB2CC3A2E9 INTERNET_PROXY_INFO;
struct IOleInPlaceUIWindow {struct IOleInPlaceUIWindowVtbl *lpVtbl;};
struct IPersistPropertyBag {struct IPersistPropertyBagVtbl *lpVtbl;};
struct IPropertyNotifySink {struct IPropertyNotifySinkVtbl *lpVtbl;};
struct IPropertySetStorage {struct IPropertySetStorageVtbl *lpVtbl;};
struct IRunningObjectTable {struct IRunningObjectTableVtbl *lpVtbl;};
typedef struct _LOAD_DLL_DEBUG_INFO LOAD_DLL_DEBUG_INFO;
typedef struct tagCBTACTIVATESTRUCT *LPCBTACTIVATESTRUCT;
typedef struct tagCOMPAREITEMSTRUCT *LPCOMPAREITEMSTRUCT;
typedef struct _CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCTA;
typedef struct _CONNECTDLGSTRUCTW *LPCONNECTDLGSTRUCTW;
typedef struct _CONNECTION_INFO_0 *LPCONNECTION_INFO_0;
typedef struct _CONNECTION_INFO_1 *LPCONNECTION_INFO_1;
typedef struct _DATATYPES_INFO_1A *LPDATATYPES_INFO_1A;
typedef struct _DATATYPES_INFO_1W *LPDATATYPES_INFO_1W;
typedef struct _ERRLOG_OTHER_INFO *LPERRLOG_OTHER_INFO;
typedef struct _GLYPHMETRICSFLOAT *LPGLYPHMETRICSFLOAT;
typedef struct _7644B9603AEA08EBF4DF4A983BB6B237 *LPGOPHER_FIND_DATAA;
typedef struct _17CA7839736B8F73357CD165DBE52F18 *LPGOPHER_FIND_DATAW;
typedef struct _INTERNET_BUFFERSA *LPINTERNET_BUFFERSA;
typedef struct _INTERNET_BUFFERSW *LPINTERNET_BUFFERSW;
typedef struct _LOCALGROUP_INFO_0 *LPLOCALGROUP_INFO_0;
typedef struct _LOCALGROUP_INFO_1 *LPLOCALGROUP_INFO_1;
typedef struct tagMCI_GENERIC_PARMS *LPMCI_GENERIC_PARMS;
typedef struct tagMCI_SEQ_SET_PARMS *LPMCI_SEQ_SET_PARMS;
typedef struct tagMCI_VD_PLAY_PARMS *LPMCI_VD_PLAY_PARMS;
typedef struct tagMCI_VD_STEP_PARMS *LPMCI_VD_STEP_PARMS;
typedef struct tagMEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT;
typedef struct tagNONCLIENTMETRICSA *LPNONCLIENTMETRICSA;
typedef struct tagNONCLIENTMETRICSW *LPNONCLIENTMETRICSW;
typedef struct tagOLEUIOBJECTPROPSA *LPOLEUIOBJECTPROPSA;
typedef struct tagOLEUIOBJECTPROPSW *LPOLEUIOBJECTPROPSW;
typedef struct IPersistStreamInit *LPPERSISTSTREAMINIT;
typedef struct _PRINTER_DEFAULTSA *LPPRINTER_DEFAULTSA;
typedef struct _PRINTER_DEFAULTSW *LPPRINTER_DEFAULTSW;
typedef struct IProvideClassInfo2 *LPPROVIDECLASSINFO2;
typedef struct _RASTERIZER_STATUS *LPRASTERIZER_STATUS;
typedef struct _REMOTE_NAME_INFOA *LPREMOTE_NAME_INFOA;
typedef struct _REMOTE_NAME_INFOW *LPREMOTE_NAME_INFOW;
typedef struct _SHELLEXECUTEINFOA *LPSHELLEXECUTEINFOA;
typedef struct _SHELLEXECUTEINFOW *LPSHELLEXECUTEINFOW;
typedef IShellPropSheetExt *LPSHELLPROPSHEETEXT;
typedef struct _WKSTA_USER_INFO_0 *LPWKSTA_USER_INFO_0;
typedef struct _WKSTA_USER_INFO_1 *LPWKSTA_USER_INFO_1;
typedef struct _WSAPROTOCOL_INFOA *LPWSAPROTOCOL_INFOA;
typedef struct _WSAPROTOCOL_INFOW *LPWSAPROTOCOL_INFOW;
typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;
enum MACRO_ACCESS_SYSTEM {ACCESS_SYSTEM_SECURITY = 0x1000000,};
enum MACRO_CCHDEVICENAME {CCHDEVICENAME = 32,};
enum MACRO_COMPLEXREGION {COMPLEXREGION = 3,};
enum MACRO_CS_INSERTCHAR {CS_INSERTCHAR = 0x2000,CS_NOMOVECARET = 0x4000,};
enum MACRO_DRIVERVERSION {DRIVERVERSION = 0,TECHNOLOGY = 2,};
enum MACRO_DTM_SETFORMAT {DTM_SETFORMAT = 4101,};
enum MACRO_ENUMPAPERBINS {ENUMPAPERBINS = 31,SETDIBSCALING = 32,};
enum MACRO_GETCOLORTABLE {GETCOLORTABLE = 5,};
enum MACRO_GETTECHNOLOGY {GETTECHNOLOGY = 20,};
enum MACRO_GMEM_DDESHARE {GMEM_DDESHARE = 8192,GMEM_DISCARDABLE = 256,GMEM_LOWER = 4096,GMEM_NOCOMPACT = 16,GMEM_NODISCARD = 32,GMEM_NOT_BANKED = 4096,GMEM_NOTIFY = 16384,GMEM_SHARE = 8192,GMEM_ZEROINIT = 64,GMEM_DISCARDED = 16384,GMEM_INVALID_HANDLE = 32768,GMEM_LOCKCOUNT = 255,};
enum MACRO_HTBOTTOMRIGHT {HTBOTTOMRIGHT = 17,};
enum MACRO_HTTRANSPARENT {HTTRANSPARENT = -1,};
enum MACRO_INTERNET_OPEN {INTERNET_OPEN_TYPE_PRECONFIG = 0,INTERNET_OPEN_TYPE_DIRECT = 1,INTERNET_OPEN_TYPE_PROXY = 3,};
enum MACRO_LVM_FINDITEMA {LVM_FINDITEMA = 4109,LVM_FINDITEMW = 4179,};
enum MACRO_LVS_OWNERDATA {LVS_OWNERDATA = 4096,};
enum MACRO_MAX_LEADBYTES {MAX_LEADBYTES = 12,MAX_DEFAULTCHAR = 2,};
enum MACRO_MAX_PREFERRED {MAX_PREFERRED_LENGTH = 4294967295,};
enum MACRO_MIDIPATCHSIZE {MIDIPATCHSIZE = 128,};
enum MACRO_MINSYSCOMMAND {MINSYSCOMMAND = 61440,};
enum MACRO_MIXER_OBJECTF {MIXER_OBJECTF_HANDLE = 0x80000000,MIXER_OBJECTF_MIXER = 0x0,MIXER_OBJECTF_HMIXER = 0x80000000,MIXER_OBJECTF_WAVEOUT = 0x10000000,MIXER_OBJECTF_HWAVEOUT = 0x90000000,MIXER_OBJECTF_WAVEIN = 0x20000000,MIXER_OBJECTF_HWAVEIN = 0xA0000000,MIXER_OBJECTF_MIDIOUT = 0x30000000,MIXER_OBJECTF_HMIDIOUT = 0xB0000000,MIXER_OBJECTF_MIDIIN = 0x40000000,MIXER_OBJECTF_HMIDIIN = 0xC0000000,MIXER_OBJECTF_AUX = 0x50000000,};
enum MACRO_MOUSE_WHEELED {MOUSE_WHEELED = 4,};
enum MACRO_MSGF_COMMCTRL {MSGF_COMMCTRL_BEGINDRAG = 0x4200,MSGF_COMMCTRL_SIZEHEADER = 0x4201,MSGF_COMMCTRL_DRAGSELECT = 0x4202,MSGF_COMMCTRL_TOOLBARCUST = 0x4203,};
enum MACRO_MSG_INTERRUPT {MSG_INTERRUPT = 0x10,};
enum MACRO_NCBLANSTALERT {NCBLANSTALERT = 0x73,};
enum MACRO_NO_PERMISSION {NO_PERMISSION_REQUIRED = 1,};
enum MACRO_PHYSICALWIDTH {PHYSICALWIDTH = 110,};
enum MACRO_POLYGONALCAPS {POLYGONALCAPS = 32,};
enum MACRO_RB_INSERTBAND {RB_INSERTBAND = 1025,RB_SETBANDINFO = 1030,};
enum MACRO_REPLACEDLGORD {REPLACEDLGORD = 1541,};
enum MACRO_RESOURCEUSAGE {RESOURCEUSAGE_CONNECTABLE = 1,RESOURCEUSAGE_CONTAINER = 2,RESOURCEUSAGE_NOLOCALDEVICE = 4,RESOURCEUSAGE_SIBLING = 8,RESOURCEUSAGE_ALL = 3,RESOURCEUSAGE_RESERVED = -2147483648,};
enum MACRO_SB_SETBKCOLOR {SB_SETBKCOLOR = 0x2001,};
enum MACRO_SECURITY_FLAG {SECURITY_FLAG_SECURE = 1,SECURITY_FLAG_SSL = 2,SECURITY_FLAG_SSL3 = 4,SECURITY_FLAG_PCT = 8,SECURITY_FLAG_PCT4 = 16,SECURITY_FLAG_IETFSSL4 = 32,SECURITY_FLAG_40BIT = 268435456,SECURITY_FLAG_128BIT = 536870912,SECURITY_FLAG_56BIT = 1073741824,SECURITY_FLAG_UNKNOWNBIT = -2147483648,SECURITY_FLAG_NORMALBITNESS = 268435456,SECURITY_FLAG_IGNORE_CERT_CN_INVALID = 4096,SECURITY_FLAG_IGNORE_CERT_DATE_INVALID = 8192,SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTPS = 16384,SECURITY_FLAG_IGNORE_REDIRECT_TO_HTTP = 32768,};
enum MACRO_SESSION_CRYPT {SESSION_CRYPT_KLEN = 21,};
enum MACRO_SETMITERLIMIT {SETMITERLIMIT = 23,};
enum MACRO_SIZE_RESTORED {SIZE_RESTORED = 0,SIZE_MINIMIZED = 1,SIZE_MAXIMIZED = 2,SIZE_MAXSHOW = 3,SIZE_MAXHIDE = 4,};
enum MACRO_TB_ADDBUTTONS {TB_ADDBUTTONS = 1044,TB_INSERTBUTTON = 1045,TB_DELETEBUTTON = 1046,TB_GETBUTTON = 1047,TB_BUTTONCOUNT = 1048,TB_COMMANDTOINDEX = 1049,TB_SAVERESTOREA = 1050,TB_SAVERESTOREW = 1100,TB_CUSTOMIZE = 1051,TB_ADDSTRINGA = 1052,TB_ADDSTRINGW = 1101,TB_GETITEMRECT = 1053,TB_BUTTONSTRUCTSIZE = 1054,TB_SETBUTTONSIZE = 1055,TB_SETBITMAPSIZE = 1056,TB_AUTOSIZE = 1057,TB_GETTOOLTIPS = 1059,TB_SETTOOLTIPS = 1060,TB_SETPARENT = 1061,TB_SETROWS = 1063,TB_GETROWS = 1064,TB_SETCMDID = 1066,TB_CHANGEBITMAP = 1067,TB_GETBITMAP = 1068,TB_GETBUTTONTEXTA = 1069,TB_GETBUTTONTEXTW = 1099,TB_REPLACEBITMAP = 1070,};
enum MACRO_TTN_NEEDTEXTA {TTN_NEEDTEXTA = -520,TTN_NEEDTEXTW = -530,TTN_SHOW = -521,TTN_POP = -522,};
enum MACRO_WM_CHOOSEFONT {WM_CHOOSEFONT_GETLOGFONT = 1025,WM_CHOOSEFONT_SETLOGFONT = 1125,WM_CHOOSEFONT_SETFLAGS = 1126,};
enum MACRO_WSAEADDRINUSE {WSAEADDRINUSE = 10048,};
enum MACRO_WSAECANCELLED {WSAECANCELLED = 10103,};
enum MACRO_WSAECONNRESET {WSAECONNRESET = 10054,};
enum MACRO_WSAEOPNOTSUPP {WSAEOPNOTSUPP = 10045,};
enum MACRO_WSAEPROTOTYPE {WSAEPROTOTYPE = 10041,};
enum MACRO__SYS_RESOURCE {_SYS_RESOURCE_H = 1,};
enum MACRO_idsDefKeyword {idsDefKeyword = 1010,};
enum MACRO_idsIsPassword {idsIsPassword = 1000,};
typedef struct tagMCI_ANIM_PLAY_PARMS MCI_ANIM_PLAY_PARMS;
typedef struct tagMCI_ANIM_RECT_PARMS MCI_ANIM_RECT_PARMS;
typedef struct tagMCI_ANIM_STEP_PARMS MCI_ANIM_STEP_PARMS;
typedef struct tagMCI_OVLY_RECT_PARMS MCI_OVLY_RECT_PARMS;
typedef struct tMIXERCONTROLDETAILS MIXERCONTROLDETAILS;
typedef struct _NET_DISPLAY_MACHINE NET_DISPLAY_MACHINE;
typedef struct tagOIFI OLEINPLACEFRAMEINFO;
typedef float OLE_XSIZE_CONTAINER;
typedef float OLE_YSIZE_CONTAINER;
typedef struct _BROWSER_STATISTICS *PBROWSER_STATISTICS;
typedef struct _CHARDEVQ_INFO_1002 *PCHARDEVQ_INFO_1002;
typedef struct _CHARDEVQ_INFO_1003 *PCHARDEVQ_INFO_1003;
typedef struct _DEV_BROADCAST_PORT *PDEV_BROADCAST_PORT;
typedef struct tagEMRCREATEMONOBRUSH *PEMRCREATEMONOBRUSH;
typedef struct tagEMREXCLUDECLIPRECT *PEMREXCLUDECLIPRECT;
typedef struct tagEMRSETARCDIRECTION *PEMRSETARCDIRECTION;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETPOLYFILLMODE;
typedef struct _EXCEPTION_POINTERS *PEXCEPTION_POINTERS;
typedef struct _GROUP_USERS_INFO_0 *PGROUP_USERS_INFO_0;
typedef struct _GROUP_USERS_INFO_1 *PGROUP_USERS_INFO_1;
typedef struct tagMCI_SYSINFO_PARMSA *PMCI_SYSINFO_PARMSA;
typedef struct tagMCI_SYSINFO_PARMSW *PMCI_SYSINFO_PARMSW;
typedef struct tagMCI_WAVE_SET_PARMS *PMCI_WAVE_SET_PARMS;
typedef struct tagMIXERLINECONTROLSA *PMIXERLINECONTROLSA;
typedef struct tagMIXERLINECONTROLSW *PMIXERLINECONTROLSW;
typedef struct tagOLEUICHANGESOURCEA *POLEUICHANGESOURCEA;
typedef struct tagOLEUICHANGESOURCEW *POLEUICHANGESOURCEW;
typedef struct tagOLEUIINSERTOBJECTA *POLEUIINSERTOBJECTA;
typedef struct tagOLEUIINSERTOBJECTW *POLEUIINSERTOBJECTW;
typedef struct tagOLEUIPASTESPECIALA *POLEUIPASTESPECIALA;
typedef struct tagOLEUIPASTESPECIALW *POLEUIPASTESPECIALW;
typedef struct _OUTLINETEXTMETRICA *POUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICW *POUTLINETEXTMETRICW;
typedef struct _PERF_COUNTER_BLOCK *PPERF_COUNTER_BLOCK;
typedef struct _PRINTER_NOTIFY_INFO PRINTER_NOTIFY_INFO;
typedef struct _PROCESS_INFORMATION PROCESS_INFORMATION;
typedef struct _27240A871129E8C5EF2505ED059D4BC8 *PRPC_DISPATCH_TABLE;
typedef struct _STAT_WORKSTATION_0 *PSTAT_WORKSTATION_0;
typedef struct _USER_MODALS_INFO_0 *PUSER_MODALS_INFO_0;
typedef struct _USER_MODALS_INFO_1 *PUSER_MODALS_INFO_1;
typedef struct _USER_MODALS_INFO_2 *PUSER_MODALS_INFO_2;
typedef struct _USER_MODALS_INFO_3 *PUSER_MODALS_INFO_3;
typedef struct _VERIFY_INFORMATION *PVERIFY_INFORMATION;
typedef struct _WSANAMESPACE_INFOA *PWSANAMESPACE_INFOA;
typedef struct _WSANAMESPACE_INFOW *PWSANAMESPACE_INFOW;
typedef struct _REPL_EDIR_INFO_1000 REPL_EDIR_INFO_1000;
typedef struct _REPL_EDIR_INFO_1001 REPL_EDIR_INFO_1001;
typedef struct _RPC_PROTSEQ_VECTORA RPC_PROTSEQ_VECTORA;
typedef struct _RPC_PROTSEQ_VECTORW RPC_PROTSEQ_VECTORW;
typedef struct _RPC_TRANSFER_SYNTAX RPC_TRANSFER_SYNTAX;
typedef struct _SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES;
typedef struct _SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR;
typedef struct _SYSTEM_POWER_STATUS SYSTEM_POWER_STATUS;
typedef struct _TOKEN_PRIMARY_GROUP TOKEN_PRIMARY_GROUP;
union _CLIENT_CALL_RETURN {void *Pointer;int Simple;};
struct _COMM_FAULT_OFFSETS {short CommOffset;short FaultOffset;};
enum _FINDEX_INFO_LEVELS {FindExInfoStandard = 0x0,FindExInfoMaxInfoLevel = 0x1,};
struct _MALLOC_FREE_STRUCT {void *(*pfnAllocate)(unsigned int);void (*pfnFree)(void *);};
struct _MIDL_FORMAT_STRING {short Pad;unsigned char Format[1];};
typedef int __rlimit_resource_t;
typedef union _D1D0F511BF997F52624AFB2B0CE27B40 pthread_mutexattr_t;
typedef struct _ACCESS_ALLOWED_ACE ACCESS_ALLOWED_ACE;
typedef struct _BROWSER_STATISTICS BROWSER_STATISTICS;
typedef struct _CHARDEVQ_INFO_1002 CHARDEVQ_INFO_1002;
typedef struct _CHARDEVQ_INFO_1003 CHARDEVQ_INFO_1003;
typedef struct tagCInterfaceStubVtbl CInterfaceStubVtbl;
typedef struct tagCLIENTCREATESTRUCT CLIENTCREATESTRUCT;
typedef union _CLIENT_CALL_RETURN CLIENT_CALL_RETURN;
typedef struct _COMM_FAULT_OFFSETS COMM_FAULT_OFFSETS;
typedef struct _DEV_BROADCAST_PORT DEV_BROADCAST_PORT;
typedef struct tagEMRCREATEMONOBRUSH EMRCREATEMONOBRUSH;
typedef struct tagEMREXCLUDECLIPRECT EMREXCLUDECLIPRECT;
typedef struct tagEMRSETARCDIRECTION EMRSETARCDIRECTION;
typedef struct tagEMRSELECTCLIPPATH EMRSETPOLYFILLMODE;
typedef struct _EXCEPTION_POINTERS EXCEPTION_POINTERS;
typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;
typedef struct _FOCUS_EVENT_RECORD FOCUS_EVENT_RECORD;
typedef struct _GROUP_USERS_INFO_0 GROUP_USERS_INFO_0;
typedef struct _GROUP_USERS_INFO_1 GROUP_USERS_INFO_1;
struct IPersistStreamInit {struct IPersistStreamInitVtbl *lpVtbl;};
struct IProvideClassInfo2 {struct IProvideClassInfo2Vtbl *lpVtbl;};
struct IShellExecuteHookA {struct IShellExecuteHookAVtbl *lpVtbl;};
struct IShellExecuteHookW {struct IShellExecuteHookWVtbl *lpVtbl;};
struct IShellPropSheetExt {struct IShellPropSheetExtVtbl *lpVtbl;};
typedef struct _ACCESS_INFO_1002 *LPACCESS_INFO_1002;
typedef struct _ADMIN_OTHER_INFO *LPADMIN_OTHER_INFO;
typedef struct tagBITMAPCOREHEADER *LPBITMAPCOREHEADER;
typedef struct tagBITMAPFILEHEADER *LPBITMAPFILEHEADER;
typedef struct tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;
typedef struct _CRITICAL_SECTION *LPCRITICAL_SECTION;
typedef struct IDataAdviseHolder *LPDATAADVISEHOLDER;
typedef struct tagDELETEITEMSTRUCT *LPDELETEITEMSTRUCT;
typedef struct IEnumOleUndoUnits *LPENUMOLEUNDOUNITS;
typedef struct _HSE_VERSION_INFO *LPHSE_VERSION_INFO;
typedef struct tagHW_PROFILE_INFOA *LPHW_PROFILE_INFOA;
typedef struct tagHW_PROFILE_INFOW *LPHW_PROFILE_INFOW;
typedef struct tagIMEMENUITEMINFOA *LPIMEMENUITEMINFOA;
typedef struct tagIMEMENUITEMINFOW *LPIMEMENUITEMINFOW;
typedef struct tagMCI_RECORD_PARMS *LPMCI_RECORD_PARMS;
typedef struct tagMCI_STATUS_PARMS *LPMCI_STATUS_PARMS;
typedef struct tagMDICREATESTRUCTA *LPMDICREATESTRUCTA;
typedef struct tagMDICREATESTRUCTW *LPMDICREATESTRUCTW;
typedef struct tagMINIMIZEDMETRICS *LPMINIMIZEDMETRICS;
typedef struct tagOLEUICHANGEICONA *LPOLEUICHANGEICONA;
typedef struct tagOLEUICHANGEICONW *LPOLEUICHANGEICONW;
typedef struct tagOLEUIPASTEENTRYA *LPOLEUIPASTEENTRYA;
typedef struct tagOLEUIPASTEENTRYW *LPOLEUIPASTEENTRYW;
typedef struct IParseDisplayname *LPPARSEDISPLAYNAME;
typedef struct _PRINT_OTHER_INFO *LPPRINT_OTHER_INFO;
typedef struct IPropertyPageSite *LPPROPERTYPAGESITE;
typedef struct _PROPSHEETHEADERA *LPPROPSHEETHEADERA;
typedef struct _PROPSHEETHEADERW *LPPROPSHEETHEADERW;
typedef struct IProvideClassInfo *LPPROVIDECLASSINFO;
typedef struct _REPL_EDIR_INFO_0 *LPREPL_EDIR_INFO_0;
typedef struct _REPL_EDIR_INFO_1 *LPREPL_EDIR_INFO_1;
typedef struct _REPL_EDIR_INFO_2 *LPREPL_EDIR_INFO_2;
typedef struct _REPL_IDIR_INFO_0 *LPREPL_IDIR_INFO_0;
typedef struct _REPL_IDIR_INFO_1 *LPREPL_IDIR_INFO_1;
typedef struct IRpcChannelBuffer *LPRPCCHANNELBUFFER;
typedef struct _SERVER_INFO_1005 *LPSERVER_INFO_1005;
typedef struct _SERVER_INFO_1010 *LPSERVER_INFO_1010;
typedef struct _SERVER_INFO_1016 *LPSERVER_INFO_1016;
typedef struct _SERVER_INFO_1017 *LPSERVER_INFO_1017;
typedef struct _SERVER_INFO_1018 *LPSERVER_INFO_1018;
typedef struct _SERVER_INFO_1107 *LPSERVER_INFO_1107;
typedef struct _SERVER_INFO_1501 *LPSERVER_INFO_1501;
typedef struct _SERVER_INFO_1502 *LPSERVER_INFO_1502;
typedef struct _SERVER_INFO_1503 *LPSERVER_INFO_1503;
typedef struct _SERVER_INFO_1506 *LPSERVER_INFO_1506;
typedef struct _SERVER_INFO_1509 *LPSERVER_INFO_1509;
typedef struct _SERVER_INFO_1510 *LPSERVER_INFO_1510;
typedef struct _SERVER_INFO_1511 *LPSERVER_INFO_1511;
typedef struct _SERVER_INFO_1512 *LPSERVER_INFO_1512;
typedef struct _SERVER_INFO_1513 *LPSERVER_INFO_1513;
typedef struct _SERVER_INFO_1514 *LPSERVER_INFO_1514;
typedef struct _SERVER_INFO_1515 *LPSERVER_INFO_1515;
typedef struct _SERVER_INFO_1516 *LPSERVER_INFO_1516;
typedef struct _SERVER_INFO_1518 *LPSERVER_INFO_1518;
typedef struct _SERVER_INFO_1520 *LPSERVER_INFO_1520;
typedef struct _SERVER_INFO_1521 *LPSERVER_INFO_1521;
typedef struct _SERVER_INFO_1522 *LPSERVER_INFO_1522;
typedef struct _SERVER_INFO_1523 *LPSERVER_INFO_1523;
typedef struct _SERVER_INFO_1524 *LPSERVER_INFO_1524;
typedef struct _SERVER_INFO_1525 *LPSERVER_INFO_1525;
typedef struct _SERVER_INFO_1528 *LPSERVER_INFO_1528;
typedef struct _SERVER_INFO_1529 *LPSERVER_INFO_1529;
typedef struct _SERVER_INFO_1530 *LPSERVER_INFO_1530;
typedef struct _SERVER_INFO_1533 *LPSERVER_INFO_1533;
typedef struct _SERVER_INFO_1534 *LPSERVER_INFO_1534;
typedef struct _SERVER_INFO_1535 *LPSERVER_INFO_1535;
typedef struct _SERVER_INFO_1536 *LPSERVER_INFO_1536;
typedef struct _SERVER_INFO_1537 *LPSERVER_INFO_1537;
typedef struct _SERVER_INFO_1538 *LPSERVER_INFO_1538;
typedef struct _SERVER_INFO_1539 *LPSERVER_INFO_1539;
typedef struct _SERVER_INFO_1540 *LPSERVER_INFO_1540;
typedef struct _SERVER_INFO_1541 *LPSERVER_INFO_1541;
typedef struct _SERVER_INFO_1542 *LPSERVER_INFO_1542;
typedef struct _SERVER_INFO_1543 *LPSERVER_INFO_1543;
typedef struct _SERVER_INFO_1544 *LPSERVER_INFO_1544;
typedef struct _SERVER_INFO_1545 *LPSERVER_INFO_1545;
typedef struct _SERVER_INFO_1546 *LPSERVER_INFO_1546;
typedef struct _SERVER_INFO_1547 *LPSERVER_INFO_1547;
typedef struct _SERVER_INFO_1548 *LPSERVER_INFO_1548;
typedef struct _SERVER_INFO_1549 *LPSERVER_INFO_1549;
typedef struct _SERVER_INFO_1550 *LPSERVER_INFO_1550;
typedef struct _SERVER_INFO_1552 *LPSERVER_INFO_1552;
typedef struct _SERVER_INFO_1553 *LPSERVER_INFO_1553;
typedef struct _SERVER_INFO_1554 *LPSERVER_INFO_1554;
typedef struct _SERVER_INFO_1555 *LPSERVER_INFO_1555;
typedef struct _SERVER_INFO_1556 *LPSERVER_INFO_1556;
typedef struct _SERVER_INFO_1557 *LPSERVER_INFO_1557;
typedef struct _SERVER_INFO_1560 *LPSERVER_INFO_1560;
typedef struct _SERVER_INFO_1561 *LPSERVER_INFO_1561;
typedef struct _SERVER_INFO_1562 *LPSERVER_INFO_1562;
typedef struct _SERVER_INFO_1563 *LPSERVER_INFO_1563;
typedef struct _SERVER_INFO_1564 *LPSERVER_INFO_1564;
typedef struct _SERVER_INFO_1565 *LPSERVER_INFO_1565;
typedef struct _SERVER_INFO_1566 *LPSERVER_INFO_1566;
typedef struct _SERVER_INFO_1567 *LPSERVER_INFO_1567;
typedef struct _SERVER_INFO_1568 *LPSERVER_INFO_1568;
typedef struct _SERVER_INFO_1569 *LPSERVER_INFO_1569;
typedef struct _SERVER_INFO_1570 *LPSERVER_INFO_1570;
typedef struct _SERVER_INFO_1571 *LPSERVER_INFO_1571;
typedef struct _SERVER_INFO_1572 *LPSERVER_INFO_1572;
typedef struct _SERVER_INFO_1573 *LPSERVER_INFO_1573;
typedef struct _SERVER_INFO_1574 *LPSERVER_INFO_1574;
typedef struct _SERVER_INFO_1575 *LPSERVER_INFO_1575;
typedef struct _SERVER_INFO_1576 *LPSERVER_INFO_1576;
typedef struct _SERVER_INFO_1577 *LPSERVER_INFO_1577;
typedef struct _SERVER_INFO_1578 *LPSERVER_INFO_1578;
typedef struct _SERVER_INFO_1579 *LPSERVER_INFO_1579;
typedef struct _SERVER_INFO_1580 *LPSERVER_INFO_1580;
typedef struct _SERVER_INFO_1581 *LPSERVER_INFO_1581;
typedef struct _SERVER_INFO_1582 *LPSERVER_INFO_1582;
typedef struct _SERVER_INFO_1583 *LPSERVER_INFO_1583;
typedef struct _SERVER_INFO_1584 *LPSERVER_INFO_1584;
typedef struct _SERVER_INFO_1585 *LPSERVER_INFO_1585;
typedef struct _SERVER_INFO_1586 *LPSERVER_INFO_1586;
typedef struct _SESSION_INFO_502 *LPSESSION_INFO_502;
typedef struct _TIME_OF_DAY_INFO *LPTIME_OF_DAY_INFO;
typedef struct _TOKEN_PRIVILEGES *LPTOKEN_PRIVILEGES;
typedef struct _TV_INSERTSTRUCTA *LPTV_INSERTSTRUCTA;
typedef struct _TV_INSERTSTRUCTW *LPTV_INSERTSTRUCTW;
typedef struct _WIN32_FIND_DATAA *LPWIN32_FIND_DATAA;
typedef struct _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;
typedef struct _WSANETWORKEVENTS *LPWSANETWORKEVENTS;
typedef struct _WSAPROTOCOLCHAIN *LPWSAPROTOCOLCHAIN;
enum MACRO_ACL_REVISION {MIN_ACL_REVISION = 2,MAX_ACL_REVISION = 4,};
enum MACRO_ACTIVEOBJECT {ACTIVEOBJECT_STRONG = 0,ACTIVEOBJECT_WEAK = 1,};
enum MACRO_AE_SRVSTATUS {AE_SRVSTATUS = 0,AE_SESSLOGON = 1,AE_SESSLOGOFF = 2,AE_SESSPWERR = 3,AE_CONNSTART = 4,AE_CONNSTOP = 5,AE_CONNREJ = 6,AE_RESACCESS = 7,AE_RESACCESSREJ = 8,AE_CLOSEFILE = 9,AE_SERVICESTAT = 11,AE_ACLMOD = 12,AE_UASMOD = 13,AE_NETLOGON = 14,AE_NETLOGOFF = 15,AE_NETLOGDENIED = 16,AE_ACCLIMITEXCD = 17,AE_RESACCESS2 = 18,AE_ACLMODFAIL = 19,AE_LOCKOUT = 20,AE_GENERIC_TYPE = 21,AE_SRVSTART = 0,AE_SRVPAUSED = 1,AE_SRVCONT = 2,AE_SRVSTOP = 3,};
enum MACRO_BLACKONWHITE {BLACKONWHITE = 1,WHITEONBLACK = 2,};
enum MACRO_BLTALIGNMENT {BLTALIGNMENT = 119,};
enum MACRO_CHARDEVQ_MAX {CHARDEVQ_MAX_PRIORITY = 1,CHARDEVQ_DEV_PARMNUM = 1,};
enum MACRO_CHARDEV_STAT {CHARDEV_STAT_OPENED = 2,};
enum MACRO_CLOSECHANNEL {CLOSECHANNEL = 4112,};
enum MACRO_COLORONCOLOR {COLORONCOLOR = 3,HALFTONE = 4,};
enum MACRO_CREATE_NEW_0 {CREATE_NEW = 1,CREATE_ALWAYS = 2,};
enum MACRO_CRYPT_FAILED {CRYPT_FAILED = 0,CRYPT_SUCCEED = 1,};
enum MACRO_CSCONFIGFLAG {CSCONFIGFLAG_BITS = 7,CSCONFIGFLAG_DISABLED = 1,CSCONFIGFLAG_DO_NOT_CREATE = 2,CSCONFIGFLAG_DO_NOT_START = 4,};
enum MACRO_DEREGISTERED {DEREGISTERED = 0x5,};
enum MACRO_DOWNLOADFACE {DOWNLOADFACE = 514,};
enum MACRO_DTRESULTPART {DTRESULTPART = 3,};
enum MACRO_EC_ENABLEALL {EC_ENABLEALL = 0,EC_ENABLEONE = 128,EC_DISABLE = 8,EC_QUERYWAITING = 2,};
enum MACRO_ELF_SHOWHELP {ELF_SHOWHELP = 1,ELF_DISABLEUPDATENOW = 2,ELF_DISABLEOPENSOURCE = 4,ELF_DISABLECHANGESOURCE = 8,ELF_DISABLECANCELLINK = 16,};
enum MACRO_ENABLEDUPLEX {ENABLEDUPLEX = 28,};
enum MACRO_ENCAPSULATED {ENCAPSULATED_POSTSCRIPT = 4116,};
enum MACRO_GETTECHNOLGY {GETTECHNOLGY = 20,};
enum MACRO_IMAGE_BITMAP {IMAGE_BITMAP = 0,IMAGE_ICON = 1,IMAGE_CURSOR = 2,IMAGE_ENHMETAFILE = 3,};
enum MACRO_IMPLTYPEFLAG {IMPLTYPEFLAG_FDEFAULT = 1,IMPLTYPEFLAG_FSOURCE = 2,IMPLTYPEFLAG_FRESTRICTED = 4,IMPLTYPEFLAG_FDEFAULTVTABLE = 8,};
enum MACRO_INTERNET_MAX {INTERNET_MAX_HOST_NAME_LENGTH = 256,INTERNET_MAX_USER_NAME_LENGTH = 128,INTERNET_MAX_PASSWORD_LENGTH = 128,INTERNET_MAX_PORT_NUMBER_LENGTH = 5,INTERNET_MAX_PORT_NUMBER_VALUE = 65535,INTERNET_MAX_PATH_LENGTH = 2048,INTERNET_MAX_SCHEME_LENGTH = 32,INTERNET_KEEP_ALIVE_UNKNOWN = 4294967295,INTERNET_KEEP_ALIVE_ENABLED = 1,INTERNET_KEEP_ALIVE_DISABLED = 0,INTERNET_REQFLAG_FROM_CACHE = 1,INTERNET_REQFLAG_ASYNC = 2,INTERNET_FLAG_RELOAD = -2147483648,INTERNET_FLAG_RAW_DATA = 1073741824,INTERNET_FLAG_EXISTING_CONNECT = 536870912,INTERNET_FLAG_ASYNC = 268435456,INTERNET_FLAG_PASSIVE = 134217728,INTERNET_FLAG_NO_CACHE_WRITE = 67108864,INTERNET_FLAG_DONT_CACHE = 67108864,INTERNET_FLAG_MAKE_PERSISTENT = 33554432,INTERNET_FLAG_OFFLINE = 16777216,INTERNET_FLAG_SECURE = 8388608,INTERNET_FLAG_KEEP_CONNECTION = 4194304,INTERNET_FLAG_NO_AUTO_REDIRECT = 2097152,INTERNET_FLAG_READ_PREFETCH = 1048576,INTERNET_FLAG_NO_COOKIES = 524288,INTERNET_FLAG_NO_AUTH = 262144,INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP = 32768,INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS = 16384,INTERNET_FLAG_IGNORE_CERT_DATE_INVALID = 8192,INTERNET_FLAG_IGNORE_CERT_CN_INVALID = 4096,INTERNET_FLAG_MUST_CACHE_REQUEST = 16,INTERNET_FLAG_RESYNCHRONIZE = 2048,INTERNET_FLAG_HYPERLINK = 1024,INTERNET_FLAG_NO_UI = 512,INTERNET_FLAG_PRAGMA_NOCACHE = 256,};
enum MACRO_INVALID_ATOM {INVALID_ATOM = 0,};
enum MACRO_INVALID_FILE {INVALID_FILE_SIZE = 0xFFFFFFFF,};
enum MACRO_IP_MULTICAST {IP_MULTICAST_IF = 2,IP_MULTICAST_TTL = 3,IP_MULTICAST_LOOP = 4,IP_ADD_MEMBERSHIP = 5,IP_DROP_MEMBERSHIP = 6,IP_DEFAULT_MULTICAST_TTL = 1,IP_DEFAULT_MULTICAST_LOOP = 1,IP_MAX_MEMBERSHIPS = 20,};
enum MACRO_LM20_PATHLEN {LM20_PATHLEN = 256,};
enum MACRO_LM20_SERVICE {LM20_SERVICE_ACTIVE = 0,LM20_SERVICE_CONTINUE_PENDING = 4,LM20_SERVICE_PAUSE_PENDING = 8,LM20_SERVICE_PAUSED = 18,};
enum MACRO_LVM_GETITEMA {LVM_GETITEMA = 4101,LVM_GETITEMW = 4171,LVM_SETITEMA = 4102,LVM_SETITEMW = 4172,LVM_INSERTITEMA = 4103,LVM_INSERTITEMW = 4173,LVM_DELETEITEM = 4104,LVM_DELETEALLITEMS = 4105,LVM_GETCALLBACKMASK = 4106,LVM_SETCALLBACKMASK = 4107,};
enum MACRO_MAXCOMMENTSZ {MAXCOMMENTSZ = 256,};
enum MACRO_MAXIMUM_WAIT {MAXIMUM_WAIT_OBJECTS = 64,MAXIMUM_SUSPEND_COUNT = 127,};
enum MACRO_MAXPROPPAGES {MAXPROPPAGES = 100,};
enum MACRO_MAX_MONITORS {MAX_MONITORS = 4,};
enum MACRO_MAX_PROTOCOL {MAX_PROTOCOL_CHAIN = 7,};
enum MACRO_MF_BYCOMMAND {MF_BYCOMMAND = 0,MF_BYPOSITION = 1024,};
enum MACRO_MIM_MOREDATA {MIM_MOREDATA = 972,};
enum MACRO_MIXERCONTROL {MIXERCONTROL_CONTROLF_UNIFORM = 1,MIXERCONTROL_CONTROLF_MULTIPLE = 1,MIXERCONTROL_CONTROLF_DISABLED = -2147483648,MIXERCONTROL_CT_CLASS_MASK = -268435456,MIXERCONTROL_CT_CLASS_CUSTOM = 0,MIXERCONTROL_CT_CLASS_METER = 268435456,MIXERCONTROL_CT_CLASS_SWITCH = 536870912,MIXERCONTROL_CT_CLASS_NUMBER = 805306368,MIXERCONTROL_CT_CLASS_SLIDER = 1073741824,MIXERCONTROL_CT_CLASS_FADER = 1342177280,MIXERCONTROL_CT_CLASS_TIME = 1610612736,MIXERCONTROL_CT_CLASS_LIST = 1879048192,MIXERCONTROL_CT_SUBCLASS_MASK = 251658240,MIXERCONTROL_CT_SC_SWITCH_BOOLEAN = 0,MIXERCONTROL_CT_SC_SWITCH_BUTTON = 16777216,MIXERCONTROL_CT_SC_METER_POLLED = 0,MIXERCONTROL_CT_SC_TIME_MICROSECS = 0,MIXERCONTROL_CT_SC_TIME_MILLISECS = 16777216,MIXERCONTROL_CT_SC_LIST_SINGLE = 0,MIXERCONTROL_CT_SC_LIST_MULTIPLE = 16777216,MIXERCONTROL_CT_UNITS_MASK = 16711680,MIXERCONTROL_CT_UNITS_CUSTOM = 0,MIXERCONTROL_CT_UNITS_BOOLEAN = 65536,MIXERCONTROL_CT_UNITS_SIGNED = 131072,MIXERCONTROL_CT_UNITS_UNSIGNED = 196608,MIXERCONTROL_CT_UNITS_DECIBELS = 262144,MIXERCONTROL_CT_UNITS_PERCENT = 327680,MIXERCONTROL_CONTROLTYPE_CUSTOM = 0,MIXERCONTROL_CONTROLTYPE_BOOLEANMETER = 268500992,MIXERCONTROL_CONTROLTYPE_SIGNEDMETER = 268566528,MIXERCONTROL_CONTROLTYPE_PEAKMETER = 268566529,MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER = 268632064,MIXERCONTROL_CONTROLTYPE_BOOLEAN = 536936448,MIXERCONTROL_CONTROLTYPE_ONOFF = 536936449,MIXERCONTROL_CONTROLTYPE_MUTE = 536936450,MIXERCONTROL_CONTROLTYPE_MONO = 536936451,MIXERCONTROL_CONTROLTYPE_LOUDNESS = 536936452,MIXERCONTROL_CONTROLTYPE_STEREOENH = 536936453,MIXERCONTROL_CONTROLTYPE_BUTTON = 553713664,MIXERCONTROL_CONTROLTYPE_DECIBELS = 805568512,MIXERCONTROL_CONTROLTYPE_SIGNED = 805437440,MIXERCONTROL_CONTROLTYPE_UNSIGNED = 805502976,MIXERCONTROL_CONTROLTYPE_PERCENT = 805634048,MIXERCONTROL_CONTROLTYPE_SLIDER = 1073872896,MIXERCONTROL_CONTROLTYPE_PAN = 1073872897,MIXERCONTROL_CONTROLTYPE_QSOUNDPAN = 1073872898,MIXERCONTROL_CONTROLTYPE_FADER = 1342373888,MIXERCONTROL_CONTROLTYPE_VOLUME = 1342373889,MIXERCONTROL_CONTROLTYPE_BASS = 1342373890,MIXERCONTROL_CONTROLTYPE_TREBLE = 1342373891,MIXERCONTROL_CONTROLTYPE_EQUALIZER = 1342373892,MIXERCONTROL_CONTROLTYPE_SINGLESELECT = 1879113728,MIXERCONTROL_CONTROLTYPE_MUX = 1879113729,MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT = 1895890944,MIXERCONTROL_CONTROLTYPE_MIXER = 1895890945,MIXERCONTROL_CONTROLTYPE_MICROTIME = 1610809344,MIXERCONTROL_CONTROLTYPE_MILLITIME = 1627586560,};
enum MACRO_MOD_MIDIPORT {MOD_MIDIPORT = 1,MOD_SYNTH = 2,MOD_SQSYNTH = 3,MOD_FMSYNTH = 4,MOD_MAPPER = 5,};
enum MACRO_NCBADDGRNAME {NCBADDGRNAME = 0x36,};
enum MACRO_NCBCHAINSEND {NCBCHAINSEND = 0x17,NCBDGSEND = 0x20,};
enum MACRO_NUM_ELEMENTS {SHI1_NUM_ELEMENTS = 4,SHI2_NUM_ELEMENTS = 10,};
enum MACRO_PAGE_EXECUTE {PAGE_EXECUTE = 16,PAGE_EXECUTE_READ = 32,PAGE_EXECUTE_READWRITE = 64,PAGE_GUARD = 256,PAGE_NOACCESS = 1,PAGE_NOCACHE = 512,};
enum MACRO_PARMNUM_BASE {PARMNUM_BASE_INFOLEVEL = 1000,};
enum MACRO_PROCESS_HEAP {PROCESS_HEAP_REGION = 1,PROCESS_HEAP_UNCOMMITTED_RANGE = 2,PROCESS_HEAP_ENTRY_BUSY = 4,PROCESS_HEAP_ENTRY_MOVEABLE = 16,PROCESS_HEAP_ENTRY_DDESHARE = 32,};
enum MACRO_RESOURCETYPE {RESOURCETYPE_ANY = 0,RESOURCETYPE_DISK = 1,RESOURCETYPE_PRINT = 2,RESOURCETYPE_RESERVED = 8,RESOURCETYPE_UNKNOWN = -1,};
enum MACRO_SETABORTPROC {SETABORTPROC = 9,};
enum MACRO_SETCOPYCOUNT {SETCOPYCOUNT = 17,};
enum MACRO_SETKERNTRACK {SETKERNTRACK = 770,};
enum MACRO_SE_PRIVILEGE {SE_PRIVILEGE_ENABLED_BY_DEFAULT = 1,SE_PRIVILEGE_ENABLED = 2,SE_PRIVILEGE_USED_FOR_ACCESS = -2147483648,};
enum MACRO_SIZEZOOMSHOW {SIZEZOOMSHOW = 3,SIZEZOOMHIDE = 4,};
enum MACRO_SM_CLEANBOOT {SM_CLEANBOOT = 67,SM_CXDRAG = 68,SM_CYDRAG = 69,SM_SHOWSOUNDS = 70,SM_CXMENUCHECK = 71,SM_CYMENUCHECK = 72,SM_SLOWMACHINE = 73,SM_MIDEASTENABLED = 74,SM_MOUSEWHEELPRESENT = 75,SM_XVIRTUALSCREEN = 76,SM_YVIRTUALSCREEN = 77,SM_CXVIRTUALSCREEN = 78,SM_CYVIRTUALSCREEN = 79,SM_CMONITORS = 80,SM_SAMEDISPLAYFORMAT = 81,SM_CMETRICS = 83,};
enum MACRO_SOFTKEYBOARD {SOFTKEYBOARD_TYPE_T1 = 1,SOFTKEYBOARD_TYPE_C1 = 2,};
enum MACRO_TIME_ONESHOT {TIME_ONESHOT = 0,TIME_PERIODIC = 1,TIME_CALLBACK_FUNCTION = 0,TIME_CALLBACK_EVENT_SET = 16,TIME_CALLBACK_EVENT_PULSE = 32,};
enum MACRO_TTN_NEEDTEXT {TTN_NEEDTEXT = -520,};
enum MACRO_UDN_DELTAPOS {UDN_DELTAPOS = -722,};
enum MACRO_VALID_LOGOFF {VALID_LOGOFF = 1,};
enum MACRO_WSAEHOSTDOWN {WSAEHOSTDOWN = 10064,};
enum MACRO_WSAENETRESET {WSAENETRESET = 10052,};
enum MACRO_WSAENOTEMPTY {WSAENOTEMPTY = 10066,};
enum MACRO_WSAESHUTDOWN {WSAESHUTDOWN = 10058,};
enum MACRO_WSAETIMEDOUT {WSAETIMEDOUT = 10060,};
enum MACRO_cbNDRContext {cbNDRContext = 20,};
typedef struct _MALLOC_FREE_STRUCT MALLOC_FREE_STRUCT;
typedef struct tagMCI_SYSINFO_PARMSA MCI_SYSINFO_PARMSA;
typedef struct tagMCI_SYSINFO_PARMSW MCI_SYSINFO_PARMSW;
typedef struct tagMCI_WAVE_SET_PARMS MCI_WAVE_SET_PARMS;
typedef struct _MIDL_FORMAT_STRING MIDL_FORMAT_STRING;
typedef struct tagMIXERLINECONTROLSA MIXERLINECONTROLSA;
typedef struct tagMIXERLINECONTROLSW MIXERLINECONTROLSW;
typedef struct _MOUSE_EVENT_RECORD MOUSE_EVENT_RECORD;
typedef struct tagOleMenuGroupWidths OLEMENUGROUPWIDTHS;
typedef struct tagOLEUICHANGESOURCEA OLEUICHANGESOURCEA;
typedef struct tagOLEUICHANGESOURCEW OLEUICHANGESOURCEW;
typedef struct tagOLEUIINSERTOBJECTA OLEUIINSERTOBJECTA;
typedef struct tagOLEUIINSERTOBJECTW OLEUIINSERTOBJECTW;
typedef struct tagOLEUIPASTESPECIALA OLEUIPASTESPECIALA;
typedef struct tagOLEUIPASTESPECIALW OLEUIPASTESPECIALW;
typedef float OLE_XPOS_CONTAINER;
typedef int OLE_XSIZE_HIMETRIC;
typedef float OLE_YPOS_CONTAINER;
typedef int OLE_YSIZE_HIMETRIC;
typedef struct _OUTLINETEXTMETRICA OUTLINETEXTMETRICA;
typedef struct _OUTLINETEXTMETRICW OUTLINETEXTMETRICW;
typedef struct _CONNECTION_INFO_0 *PCONNECTION_INFO_0;
typedef struct _CONNECTION_INFO_1 *PCONNECTION_INFO_1;
typedef struct _DATATYPES_INFO_1A *PDATATYPES_INFO_1A;
typedef struct _DATATYPES_INFO_1W *PDATATYPES_INFO_1W;
typedef struct _DEV_BROADCAST_HDR *PDEV_BROADCAST_HDR;
typedef struct _DEV_BROADCAST_OEM *PDEV_BROADCAST_OEM;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYLINE16;
typedef struct tagABORTPATH *PEMRREALIZEPALETTE;
typedef struct tagEMRSELECTCLIPPATH *PEMRSELECTCLIPPATH;
typedef struct tagEMRSETMAPPERFLAGS *PEMRSETMAPPERFLAGS;
typedef struct tagEMRSETVIEWPORTEXTEX *PEMRSETWINDOWEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETWINDOWORGEX;
typedef struct _PERF_COUNTER_BLOCK PERF_COUNTER_BLOCK;
typedef struct _ERRLOG_OTHER_INFO *PERRLOG_OTHER_INFO;
typedef struct _FORMAT_PARAMETERS *PFORMAT_PARAMETERS;
typedef struct _GLYPHMETRICSFLOAT *PGLYPHMETRICSFLOAT;
typedef struct _IMAGE_FILE_HEADER *PIMAGE_FILE_HEADER;
typedef struct _IMAGE_ROM_HEADERS *PIMAGE_ROM_HEADERS;
typedef struct _LOCALGROUP_INFO_0 *PLOCALGROUP_INFO_0;
typedef struct _LOCALGROUP_INFO_1 *PLOCALGROUP_INFO_1;
typedef struct tagMCI_GENERIC_PARMS *PMCI_GENERIC_PARMS;
typedef struct tagMCI_SEQ_SET_PARMS *PMCI_SEQ_SET_PARMS;
typedef struct tagMCI_VD_PLAY_PARMS *PMCI_VD_PLAY_PARMS;
typedef struct tagMCI_VD_STEP_PARMS *PMCI_VD_STEP_PARMS;
typedef struct tagMEASUREITEMSTRUCT *PMEASUREITEMSTRUCT;
typedef struct _MENU_EVENT_RECORD *PMENU_EVENT_RECORD;
typedef struct _MIDL_STUB_MESSAGE *PMIDL_STUB_MESSAGE;
typedef struct _NET_DISPLAY_GROUP *PNET_DISPLAY_GROUP;
typedef struct tagOLEUIOBJECTPROPSA *POLEUIOBJECTPROPSA;
typedef struct tagOLEUIOBJECTPROPSW *POLEUIOBJECTPROPSW;
typedef struct _PRINTER_DEFAULTSA *PPRINTER_DEFAULTSA;
typedef struct _PRINTER_DEFAULTSW *PPRINTER_DEFAULTSW;
typedef struct _PROCESS_HEAP_ENTRY PROCESS_HEAP_ENTRY;
typedef struct _TAPE_GET_POSITION *PTAPE_GET_POSITION;
typedef struct _TAPE_SET_POSITION *PTAPE_SET_POSITION;
typedef struct _WKSTA_USER_INFO_0 *PWKSTA_USER_INFO_0;
typedef struct _WKSTA_USER_INFO_1 *PWKSTA_USER_INFO_1;
typedef struct _RPC_BINDING_VECTOR RPC_BINDING_VECTOR;
typedef struct _27240A871129E8C5EF2505ED059D4BC8 RPC_DISPATCH_TABLE;
typedef struct _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES;
typedef struct _STAT_WORKSTATION_0 STAT_WORKSTATION_0;
typedef struct _TOKEN_DEFAULT_DACL TOKEN_DEFAULT_DACL;
typedef struct _USER_MODALS_INFO_0 USER_MODALS_INFO_0;
typedef struct _USER_MODALS_INFO_1 USER_MODALS_INFO_1;
typedef struct _USER_MODALS_INFO_2 USER_MODALS_INFO_2;
typedef struct _USER_MODALS_INFO_3 USER_MODALS_INFO_3;
typedef struct _VERIFY_INFORMATION VERIFY_INFORMATION;
typedef struct _WSANAMESPACE_INFOA WSANAMESPACE_INFOA;
typedef struct _WSANAMESPACE_INFOW WSANAMESPACE_INFOW;
enum _FINDEX_SEARCH_OPS {FindExSearchNameMatch = 0x0,FindExSearchLimitToDirectories = 0x1,FindExSearchLimitToDevices = 0x2,FindExSearchMaxSearchOp = 0x3,};
struct _FLAGGED_WORD_BLOB {unsigned int fFlags;unsigned int clSize;unsigned short asData[1];};
struct _RASTERIZER_STATUS {short nSize;short wFlags;short nLanguageID;};
typedef unsigned int __builtin_offsetof;
typedef int __priority_which_t;
typedef union _D1D0F511BF997F52624AFB2B0CE27B40 pthread_condattr_t;
typedef int pthread_spinlock_t;
typedef struct _ACCESS_DENIED_ACE ACCESS_DENIED_ACE;
typedef struct tagCBTACTIVATESTRUCT CBTACTIVATESTRUCT;
typedef struct tagCLEANLOCALSTORAGE CLEANLOCALSTORAGE;
typedef struct tagCOMPAREITEMSTRUCT COMPAREITEMSTRUCT;
typedef struct _CONNECTDLGSTRUCTA CONNECTDLGSTRUCTA;
typedef struct _CONNECTDLGSTRUCTW CONNECTDLGSTRUCTW;
typedef struct _CONNECTION_INFO_0 CONNECTION_INFO_0;
typedef struct _CONNECTION_INFO_1 CONNECTION_INFO_1;
typedef struct _DATATYPES_INFO_1A DATATYPES_INFO_1A;
typedef struct _DATATYPES_INFO_1W DATATYPES_INFO_1W;
typedef struct _DEV_BROADCAST_HDR DEV_BROADCAST_HDR;
typedef struct _DEV_BROADCAST_OEM DEV_BROADCAST_OEM;
typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIERTO16;
typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYLINE16;
typedef struct tagABORTPATH EMRREALIZEPALETTE;
typedef struct tagEMRSELECTCLIPPATH EMRSELECTCLIPPATH;
typedef struct tagEMRSETMAPPERFLAGS EMRSETMAPPERFLAGS;
typedef struct tagEMRSETVIEWPORTEXTEX EMRSETWINDOWEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETWINDOWORGEX;
typedef struct _ERRLOG_OTHER_INFO ERRLOG_OTHER_INFO;
typedef struct _FLAGGED_WORD_BLOB FLAGGED_WORD_BLOB;
typedef struct _FORMAT_PARAMETERS FORMAT_PARAMETERS;
typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT;
typedef struct _7644B9603AEA08EBF4DF4A983BB6B237 GOPHER_FIND_DATAA;
typedef struct _17CA7839736B8F73357CD165DBE52F18 GOPHER_FIND_DATAW;
struct IDataAdviseHolder {struct IDataAdviseHolderVtbl *lpVtbl;};
typedef struct _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;
typedef struct _IMAGE_ROM_HEADERS IMAGE_ROM_HEADERS;
typedef struct _INTERNET_BUFFERSA INTERNET_BUFFERSA;
typedef struct _INTERNET_BUFFERSW INTERNET_BUFFERSW;
struct IParseDisplayName {struct IParseDisplayNameVtbl *lpVtbl;};
struct IPropertyPageSite {struct IPropertyPageSiteVtbl *lpVtbl;};
struct IProvideClassInfo {struct IProvideClassInfoVtbl *lpVtbl;};
struct IRpcChannelBuffer {struct IRpcChannelBufferVtbl *lpVtbl;};
struct ISequentialStream {struct ISequentialStreamVtbl *lpVtbl;};
typedef IShellExecuteHookA IShellExecuteHook;
struct ISupportErrorInfo {struct ISupportErrorInfoVtbl *lpVtbl;};
typedef struct _LOCALGROUP_INFO_0 LOCALGROUP_INFO_0;
typedef struct _LOCALGROUP_INFO_1 LOCALGROUP_INFO_1;
typedef struct _AE_RESACCESSREJ *LPAE_RESACCESSREJ;
typedef struct _CHARDEVQ_INFO_0 *LPCHARDEVQ_INFO_0;
typedef struct _CHARDEVQ_INFO_1 *LPCHARDEVQ_INFO_1;
typedef struct tagCOLORADJUSTMENT *LPCOLORADJUSTMENT;
typedef struct tagCOMPOSITIONFORM *LPCOMPOSITIONFORM;
typedef struct IConnectionPoint *LPCONNECTIONPOINT;
typedef struct ICreateErrorInfo *LPCREATEERRORINFO;
typedef struct ICreateTypeInfo2 *LPCREATETYPEINFO2;
typedef struct _947C6FA139885FA2B0DE7F2A3FDD942C *LPDLGITEMTEMPLATE;
typedef struct DRVCONFIGINFOEX *LPDRVCONFIGINFOEX;
typedef struct _DSKTLSYSTEMTIME *LPDSKTLSYSTEMTIME;
typedef struct IEnumConnections *LPENUMCONNECTIONS;
typedef struct IEnumSTATPROPSTG LPENUMSTATPROPSTG;
typedef struct _GROUP_INFO_1002 *LPGROUP_INFO_1002;
typedef struct _GROUP_INFO_1005 *LPGROUP_INFO_1005;
typedef struct tagLOCALESIGNATURE *LPLOCALESIGNATURE;
typedef struct tagMCI_BREAK_PARMS *LPMCI_BREAK_PARMS;
typedef struct tagMCI_INFO_PARMSA *LPMCI_INFO_PARMSA;
typedef struct tagMCI_INFO_PARMSW *LPMCI_INFO_PARMSW;
typedef struct tagMCI_LOAD_PARMSA *LPMCI_LOAD_PARMSA;
typedef struct tagMCI_LOAD_PARMSW *LPMCI_LOAD_PARMSW;
typedef struct tagMCI_OPEN_PARMSA *LPMCI_OPEN_PARMSA;
typedef struct tagMCI_OPEN_PARMSW *LPMCI_OPEN_PARMSW;
typedef struct tagMCI_SAVE_PARMSA *LPMCI_SAVE_PARMSA;
typedef struct tagMCI_SAVE_PARMSW *LPMCI_SAVE_PARMSW;
typedef struct midiproptimediv_tag *LPMIDIPROPTIMEDIV;
typedef struct _MONITOR_INFO_1A *LPMONITOR_INFO_1A;
typedef struct _MONITOR_INFO_1W *LPMONITOR_INFO_1W;
typedef struct _MONITOR_INFO_2A *LPMONITOR_INFO_2A;
typedef struct _MONITOR_INFO_2W *LPMONITOR_INFO_2W;
typedef struct IOleAdviseHolder *LPOLEADVISEHOLDER;
typedef struct IOleInPlaceFrame *LPOLEINPLACEFRAME;
typedef struct tagOLEUIEDITLINKSA *LPOLEUIEDITLINKSA;
typedef struct tagOLEUIEDITLINKSW *LPOLEUIEDITLINKSW;
typedef struct tagOLEUIGNRLPROPSA *LPOLEUIGNRLPROPSA;
typedef struct tagOLEUIGNRLPROPSW *LPOLEUIGNRLPROPSW;
typedef struct tagOLEUILINKPROPSA *LPOLEUILINKPROPSA;
typedef struct tagOLEUILINKPROPSW *LPOLEUILINKPROPSW;
typedef struct tagOLEUIVIEWPROPSA *LPOLEUIVIEWPROPSA;
typedef struct tagOLEUIVIEWPROPSW *LPOLEUIVIEWPROPSW;
typedef struct _PRINTER_INFO_1A *LPPRINTER_INFO_1A;
typedef struct _PRINTER_INFO_1W *LPPRINTER_INFO_1W;
typedef struct _PRINTER_INFO_2A *LPPRINTER_INFO_2A;
typedef struct _PRINTER_INFO_2W *LPPRINTER_INFO_2W;
typedef struct _PRINTER_INFO_4A *LPPRINTER_INFO_4A;
typedef struct _PRINTER_INFO_4W *LPPRINTER_INFO_4W;
typedef struct _PRINTER_INFO_5A *LPPRINTER_INFO_5A;
typedef struct _PRINTER_INFO_5W *LPPRINTER_INFO_5W;
typedef struct tagPROCESSENTRY32W *LPPROCESSENTRY32W;
typedef struct IPropertyStorage *LPPROPERTYSTORAGE;
typedef struct _SERVER_INFO_100 *LPSERVER_INFO_100;
typedef struct _SERVER_INFO_101 *LPSERVER_INFO_101;
typedef struct _SERVER_INFO_102 *LPSERVER_INFO_102;
typedef struct _SERVER_INFO_402 *LPSERVER_INFO_402;
typedef struct _SERVER_INFO_403 *LPSERVER_INFO_403;
typedef struct _SERVER_INFO_502 *LPSERVER_INFO_502;
typedef struct _SERVER_INFO_503 *LPSERVER_INFO_503;
typedef struct _SERVER_INFO_598 *LPSERVER_INFO_598;
typedef struct _SERVER_INFO_599 *LPSERVER_INFO_599;
typedef struct _SESSION_INFO_10 *LPSESSION_INFO_10;
typedef struct _SHARE_INFO_1004 *LPSHARE_INFO_1004;
typedef struct _SHARE_INFO_1006 *LPSHARE_INFO_1006;
typedef struct _SHARE_INFO_1501 *LPSHARE_INFO_1501;
typedef struct _SHFILEOPSTRUCTA *LPSHFILEOPSTRUCTA;
typedef struct _SHFILEOPSTRUCTW *LPSHFILEOPSTRUCTW;
typedef struct ISimpleFrameSite *LPSIMPLEFRAMESITE;
typedef struct _DD2E0983FBF83F36606C69DABA2BC276 *LPTBREPLACEBITMAP;
typedef struct tagTRACKMOUSEEVENT *LPTRACKMOUSEEVENT;
typedef struct tagTTPOLYGONHEADER *LPTTPOLYGONHEADER;
typedef struct _BC2FB811D417144E831EE3AEA4A279C8 *LPURL_COMPONENTSA;
typedef struct _2B4FDC4BF487E67F052937EE78FAE255 *LPURL_COMPONENTSW;
typedef struct _USER_OTHER_INFO *LPUSER_OTHER_INFO;
typedef struct _WINDOWPLACEMENT *LPWINDOWPLACEMENT;
typedef struct _WIN_CERTIFICATE *LPWIN_CERTIFICATE;
typedef struct _WKSTA_INFO_1010 *LPWKSTA_INFO_1010;
typedef struct _WKSTA_INFO_1011 *LPWKSTA_INFO_1011;
typedef struct _WKSTA_INFO_1012 *LPWKSTA_INFO_1012;
typedef struct _WKSTA_INFO_1013 *LPWKSTA_INFO_1013;
typedef struct _WKSTA_INFO_1018 *LPWKSTA_INFO_1018;
typedef struct _WKSTA_INFO_1023 *LPWKSTA_INFO_1023;
typedef struct _WKSTA_INFO_1027 *LPWKSTA_INFO_1027;
typedef struct _WKSTA_INFO_1028 *LPWKSTA_INFO_1028;
typedef struct _WKSTA_INFO_1032 *LPWKSTA_INFO_1032;
typedef struct _WKSTA_INFO_1033 *LPWKSTA_INFO_1033;
typedef struct _WKSTA_INFO_1041 *LPWKSTA_INFO_1041;
typedef struct _WKSTA_INFO_1042 *LPWKSTA_INFO_1042;
typedef struct _WKSTA_INFO_1043 *LPWKSTA_INFO_1043;
typedef struct _WKSTA_INFO_1044 *LPWKSTA_INFO_1044;
typedef struct _WKSTA_INFO_1045 *LPWKSTA_INFO_1045;
typedef struct _WKSTA_INFO_1046 *LPWKSTA_INFO_1046;
typedef struct _WKSTA_INFO_1047 *LPWKSTA_INFO_1047;
typedef struct _WKSTA_INFO_1048 *LPWKSTA_INFO_1048;
typedef struct _WKSTA_INFO_1049 *LPWKSTA_INFO_1049;
typedef struct _WKSTA_INFO_1050 *LPWKSTA_INFO_1050;
typedef struct _WKSTA_INFO_1051 *LPWKSTA_INFO_1051;
typedef struct _WKSTA_INFO_1052 *LPWKSTA_INFO_1052;
typedef struct _WKSTA_INFO_1053 *LPWKSTA_INFO_1053;
typedef struct _WKSTA_INFO_1054 *LPWKSTA_INFO_1054;
typedef struct _WKSTA_INFO_1055 *LPWKSTA_INFO_1055;
typedef struct _WKSTA_INFO_1056 *LPWKSTA_INFO_1056;
typedef struct _WKSTA_INFO_1057 *LPWKSTA_INFO_1057;
typedef struct _WKSTA_INFO_1058 *LPWKSTA_INFO_1058;
typedef struct _WKSTA_INFO_1059 *LPWKSTA_INFO_1059;
typedef struct _WKSTA_INFO_1060 *LPWKSTA_INFO_1060;
typedef struct _WKSTA_INFO_1061 *LPWKSTA_INFO_1061;
typedef struct _WKSTA_INFO_1062 *LPWKSTA_INFO_1062;
typedef struct _WSANSClassInfoA *LPWSANSCLASSINFOA;
typedef struct _WSANSClassInfoW *LPWSANSCLASSINFOW;
enum MACRO_ACCESSPERMS {ACCESSPERMS = 511,};
enum MACRO_ACCESS_NONE {ACCESS_NONE = 0,ACCESS_READ = 1,ACCESS_WRITE = 2,ACCESS_CREATE = 4,ACCESS_EXEC = 8,ACCESS_DELETE = 16,ACCESS_ATRIB = 32,ACCESS_PERM = 64,ACCESS_GROUP = 32768,ACCESS_AUDIT = 1,ACCESS_SUCCESS_OPEN = 16,ACCESS_SUCCESS_WRITE = 32,ACCESS_SUCCESS_DELETE = 64,ACCESS_SUCCESS_ACL = 128,ACCESS_SUCCESS_MASK = 240,ACCESS_FAIL_OPEN = 256,ACCESS_FAIL_WRITE = 512,ACCESS_FAIL_DELETE = 1024,ACCESS_FAIL_ACL = 2048,ACCESS_FAIL_MASK = 3840,ACCESS_FAIL_SHIFT = 4,ACCESS_RESOURCE_NAME_PARMNUM = 1,ACCESS_ATTR_PARMNUM = 2,ACCESS_COUNT_PARMNUM = 3,ACCESS_ACCESS_LIST_PARMNUM = 4,ACCESS_RESOURCE_NAME_INFOLEVEL = 1001,ACCESS_ATTR_INFOLEVEL = 1002,ACCESS_COUNT_INFOLEVEL = 1003,ACCESS_ACCESS_LIST_INFOLEVEL = 1004,};
enum MACRO_ACL_DEFAULT {ACL_DEFAULT = 0x1000,};
enum MACRO_ACL_ENTRIES {MIN_ACL_ENTRIES = 4,MAX_ACL_ENTRIES = 256,};
enum MACRO_APPLICATION {APPLICATION_ERROR_MASK = 0x20000000,};
enum MACRO_CACHE_ENTRY {NORMAL_CACHE_ENTRY = 1,STABLE_CACHE_ENTRY = 2,STICKY_CACHE_ENTRY = 4,SPARSE_CACHE_ENTRY = 65536,OCX_CACHE_ENTRY = 131072,COOKIE_CACHE_ENTRY = 1048576,URLHISTORY_CACHE_ENTRY = 2097152,};
enum MACRO_CCHFORMNAME {CCHFORMNAME = 32,};
enum MACRO_COMPRESSION {COMPRESSION_FORMAT_NONE = 0,COMPRESSION_FORMAT_DEFAULT = 1,COMPRESSION_FORMAT_LZNT1 = 2,COMPRESSION_ENGINE_STANDARD = 0,COMPRESSION_ENGINE_MAXIMUM = 256,};
enum MACRO_CRYPT_FIRST {CRYPT_FIRST = 1,CRYPT_NEXT = 2,CRYPT_IMPL_HARDWARE = 1,CRYPT_IMPL_SOFTWARE = 2,CRYPT_IMPL_MIXED = 3,CRYPT_IMPL_UNKNOWN = 4,};
enum MACRO_DC_HASDEFID {DC_HASDEFID = 0x534B,};
enum MACRO_DEBUG_EVENT {EXCEPTION_DEBUG_EVENT = 1,CREATE_THREAD_DEBUG_EVENT = 2,CREATE_PROCESS_DEBUG_EVENT = 3,EXIT_THREAD_DEBUG_EVENT = 4,EXIT_PROCESS_DEBUG_EVENT = 5,LOAD_DLL_DEBUG_EVENT = 6,UNLOAD_DLL_DEBUG_EVENT = 7,OUTPUT_DEBUG_STRING_EVENT = 8,RIP_EVENT = 9,};
enum MACRO_DEFFILEMODE {DEFFILEMODE = 438,};
enum MACRO_DMICMMETHOD {DMICMMETHOD_NONE = 1,DMICMMETHOD_SYSTEM = 2,DMICMMETHOD_DRIVER = 3,DMICMMETHOD_DEVICE = 4,DMICMMETHOD_USER = 256,};
enum MACRO_DMSTATEFLAG {DMSTATEFLAG_APPLYTOALL = 1,};
enum MACRO_DM_GETDEFID {DM_GETDEFID = 1024,DM_SETDEFID = 1025,DM_REPOSITION = 1026,};
enum MACRO_DUPLICATE_0 {DUPLICATE = 0x6,};
enum MACRO_EM_CANPASTE {EM_CANPASTE = 1074,EM_DISPLAYBAND = 1075,EM_EXGETSEL = 1076,EM_EXLIMITTEXT = 1077,EM_EXLINEFROMCHAR = 1078,EM_EXSETSEL = 1079,EM_FINDTEXT = 1080,EM_FORMATRANGE = 1081,EM_GETCHARFORMAT = 1082,EM_GETEVENTMASK = 1083,EM_GETOLEINTERFACE = 1084,EM_GETPARAFORMAT = 1085,EM_GETSELTEXT = 1086,EM_HIDESELECTION = 1087,EM_PASTESPECIAL = 1088,EM_REQUESTRESIZE = 1089,EM_SELECTIONTYPE = 1090,EM_SETBKGNDCOLOR = 1091,EM_SETCHARFORMAT = 1092,EM_SETEVENTMASK = 1093,EM_SETOLECALLBACK = 1094,EM_SETPARAFORMAT = 1095,EM_SETTARGETDEVICE = 1096,EM_STREAMIN = 1097,EM_STREAMOUT = 1098,EM_GETTEXTRANGE = 1099,EM_FINDWORDBREAK = 1100,EM_SETOPTIONS = 1101,EM_GETOPTIONS = 1102,EM_FINDTEXTEX = 1103,EM_GETWORDBREAKPROCEX = 1104,EM_SETWORDBREAKPROCEX = 1105,};
enum MACRO_EPSPRINTING {EPSPRINTING = 33,};
enum MACRO_FILEOPENORD {FILEOPENORD = 1536,};
enum MACRO_FILE_ACTION {FILE_ACTION_ADDED = 1,FILE_ACTION_REMOVED = 2,FILE_ACTION_MODIFIED = 3,FILE_ACTION_RENAMED_OLD_NAME = 4,FILE_ACTION_RENAMED_NEW_NAME = 5,};
enum MACRO_FILE_DEVICE {FILE_DEVICE_BEEP = 1,FILE_DEVICE_CD_ROM = 2,FILE_DEVICE_CD_ROM_FILE_SYSTEM = 3,FILE_DEVICE_CONTROLLER = 4,FILE_DEVICE_DATALINK = 5,FILE_DEVICE_DFS = 6,FILE_DEVICE_DISK = 7,FILE_DEVICE_DISK_FILE_SYSTEM = 8,FILE_DEVICE_FILE_SYSTEM = 9,FILE_DEVICE_INPORT_PORT = 10,FILE_DEVICE_KEYBOARD = 11,FILE_DEVICE_MAILSLOT = 12,FILE_DEVICE_MIDI_IN = 13,FILE_DEVICE_MIDI_OUT = 14,FILE_DEVICE_MOUSE = 15,FILE_DEVICE_MULTI_UNC_PROVIDER = 16,FILE_DEVICE_NAMED_PIPE = 17,FILE_DEVICE_NETWORK = 18,FILE_DEVICE_NETWORK_BROWSER = 19,FILE_DEVICE_NETWORK_FILE_SYSTEM = 20,FILE_DEVICE_NULL = 21,FILE_DEVICE_PARALLEL_PORT = 22,FILE_DEVICE_PHYSICAL_NETCARD = 23,FILE_DEVICE_PRINTER = 24,FILE_DEVICE_SCANNER = 25,FILE_DEVICE_SERIAL_MOUSE_PORT = 26,FILE_DEVICE_SERIAL_PORT = 27,FILE_DEVICE_SCREEN = 28,FILE_DEVICE_SOUND = 29,FILE_DEVICE_STREAMS = 30,FILE_DEVICE_TAPE = 31,FILE_DEVICE_TAPE_FILE_SYSTEM = 32,FILE_DEVICE_TRANSPORT = 33,FILE_DEVICE_UNKNOWN = 34,FILE_DEVICE_VIDEO = 35,FILE_DEVICE_VIRTUAL_DISK = 36,FILE_DEVICE_WAVE_IN = 37,FILE_DEVICE_WAVE_OUT = 38,FILE_DEVICE_8042_PORT = 39,FILE_DEVICE_NETWORK_REDIRECTOR = 40,FILE_DEVICE_BATTERY = 41,FILE_DEVICE_BUS_EXTENDER = 41,};
enum MACRO_FLUSHOUTPUT {FLUSHOUTPUT = 6,};
enum MACRO_GETFACENAME {GETFACENAME = 513,};
enum MACRO_GROUPIDMASK {GROUPIDMASK = 0x8000,};
enum MACRO_HANDLE_INFO {HANDLE_INFO_LEVEL_1 = 1,HANDLE_CHARTIME_PARMNUM = 1,HANDLE_CHARCOUNT_PARMNUM = 2,};
enum MACRO_HDM_HITTEST {HDM_HITTEST = 4614,};
enum MACRO_HTMAXBUTTON {HTMAXBUTTON = 9,};
enum MACRO_HTSIZEFIRST {HTSIZEFIRST = 10,};
enum MACRO_HTTP_ADDREQ {HTTP_ADDREQ_INDEX_MASK = 0xFFFF,HTTP_ADDREQ_FLAGS_MASK = 0xFFFF0000,HTTP_ADDREQ_FLAG_ADD_IF_NEW = 0x10000000,HTTP_ADDREQ_FLAG_ADD = 0x20000000,HTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA = 0x40000000,HTTP_ADDREQ_FLAG_COALESCE_WITH_SEMICOLON = 0x1000000,HTTP_ADDREQ_FLAG_COALESCE = 0x40000000,HTTP_ADDREQ_FLAG_REPLACE = 0x80000000,};
enum MACRO_IMAGE_DEBUG {IMAGE_DEBUG_MISC_EXENAME = 1,};
enum MACRO_IMEMENUITEM {IMEMENUITEM_STRING_SIZE = 80,};
enum MACRO_INTERNET_NO {INTERNET_NO_CALLBACK = 0,INTERNET_RFC1123_FORMAT = 0,INTERNET_RFC1123_BUFSIZE = 30,};
enum MACRO_JOYSTICKID1 {JOYSTICKID1 = 0,JOYSTICKID2 = 1,};
enum MACRO_LANG_SYSTEM {LANG_SYSTEM_DEFAULT = 2048,LANG_USER_DEFAULT = 1024,};
enum MACRO_LM20_DEVLEN {LM20_DEVLEN = 8,};
enum MACRO_LVM_ARRANGE {LVM_ARRANGE = 4118,LVM_EDITLABELA = 4119,LVM_EDITLABELW = 4214,LVM_GETEDITCONTROL = 4120,};
enum MACRO_LVM_GETITEM {LVM_GETITEM = 4101,LVM_SETITEM = 4102,LVM_INSERTITEM = 4103,LVM_FINDITEM = 4109,LVM_GETSTRINGWIDTH = 4113,LVM_EDITLABEL = 4119,LVM_GETCOLUMN = 4121,LVM_SETCOLUMN = 4122,LVM_INSERTCOLUMN = 4123,LVM_GETITEMTEXT = 4141,LVM_SETITEMTEXT = 4142,LVM_GETISEARCHSTRING = 4148,};
enum MACRO_LVM_HITTEST {LVM_HITTEST = 4114,LVM_ENSUREVISIBLE = 4115,LVM_SCROLL = 4116,LVM_REDRAWITEMS = 4117,};
enum MACRO_MAXPNAMELEN {MAXPNAMELEN = 32,MAXERRORLENGTH = 256,};
enum MACRO_MAX_PROFILE {MAX_PROFILE_LEN = 80,};
enum MACRO_MDMSPKRFLAG {MDMSPKRFLAG_OFF = 1,MDMSPKRFLAG_DIAL = 2,MDMSPKRFLAG_ON = 4,MDMSPKRFLAG_CALLSETUP = 8,};
enum MACRO_MM_JOY1MOVE {MM_JOY1MOVE = 0x3A0,MM_JOY2MOVE = 0x3A1,MM_JOY1ZMOVE = 0x3A2,MM_JOY2ZMOVE = 0x3A3,MM_JOY1BUTTONDOWN = 0x3B5,MM_JOY2BUTTONDOWN = 0x3B6,MM_JOY1BUTTONUP = 0x3B7,MM_JOY2BUTTONUP = 0x3B8,MM_MCINOTIFY = 0x3B9,MM_WOM_OPEN = 0x3BB,MM_WOM_CLOSE = 0x3BC,MM_WOM_DONE = 0x3BD,MM_WIM_OPEN = 0x3BE,MM_WIM_CLOSE = 0x3BF,MM_WIM_DATA = 0x3C0,MM_MIM_OPEN = 0x3C1,MM_MIM_CLOSE = 0x3C2,MM_MIM_DATA = 0x3C3,MM_MIM_LONGDATA = 0x3C4,MM_MIM_ERROR = 0x3C5,MM_MIM_LONGERROR = 0x3C6,MM_MOM_OPEN = 0x3C7,MM_MOM_CLOSE = 0x3C8,MM_MOM_DONE = 0x3C9,MM_DRVM_OPEN = 0x3D0,MM_DRVM_CLOSE = 0x3D1,MM_DRVM_DATA = 0x3D2,MM_DRVM_ERROR = 0x3D3,MM_STREAM_OPEN = 0x3D4,MM_STREAM_CLOSE = 0x3D5,MM_STREAM_DONE = 0x3D6,MM_STREAM_ERROR = 0x3D7,MM_MOM_POSITIONCB = 0x3CA,MM_MCISIGNAL = 0x3CB,MM_MIM_MOREDATA = 0x3CC,MM_MIXM_LINE_CHANGE = 0x3D0,MM_MIXM_CONTROL_CHANGE = 0x3D1,};
enum MACRO_MOUSEEVENTF {MOUSEEVENTF_MOVE = 1,MOUSEEVENTF_LEFTDOWN = 2,MOUSEEVENTF_LEFTUP = 4,MOUSEEVENTF_RIGHTDOWN = 8,MOUSEEVENTF_RIGHTUP = 16,MOUSEEVENTF_MIDDLEDOWN = 32,MOUSEEVENTF_MIDDLEUP = 64,MOUSEEVENTF_ABSOLUTE = 32768,};
enum MACRO_MOUSETRAILS {MOUSETRAILS = 39,};
enum MACRO_MSGF_DDEMGR {MSGF_DDEMGR = 0x8001,};
enum MACRO_NCBDGRECVBC {NCBDGRECVBC = 0x23,};
enum MACRO_NCBDGSENDBC {NCBDGSENDBC = 0x22,};
enum MACRO_NCBFINDNAME {NCBFINDNAME = 0x78,};
enum MACRO_NETPROPERTY {NETPROPERTY_PERSISTENT = 1,};
enum MACRO_NONZEROLHND {NONZEROLHND = 2,};
enum MACRO_NONZEROLPTR {NONZEROLPTR = 0,};
enum MACRO_NOTSRCERASE {NOTSRCERASE = 0x1100A6,};
enum MACRO_NUMRESERVED {NUMRESERVED = 106,};
enum MACRO_OLEUI_BZERR {OLEUI_BZERR_HTASKINVALID = 116,OLEUI_BZ_SWITCHTOSELECTED = 117,OLEUI_BZ_RETRYSELECTED = 118,OLEUI_BZ_CALLUNBLOCKED = 119,};
enum MACRO_OLEUI_CIERR {OLEUI_CIERR_MUSTHAVECLSID = 116,OLEUI_CIERR_MUSTHAVECURRENTMETAFILE = 117,OLEUI_CIERR_SZICONEXEINVALID = 118,};
enum MACRO_OLEUI_CSERR {OLEUI_CSERR_LINKCNTRNULL = 116,OLEUI_CSERR_LINKCNTRINVALID = 117,OLEUI_CSERR_FROMNOTNULL = 118,OLEUI_CSERR_TONOTNULL = 119,OLEUI_CSERR_SOURCENULL = 120,OLEUI_CSERR_SOURCEINVALID = 121,OLEUI_CSERR_SOURCEPARSERROR = 122,OLEUI_CSERR_SOURCEPARSEERROR = 123,};
enum MACRO_OLEUI_CTERR {OLEUI_CTERR_CLASSIDINVALID = 117,OLEUI_CTERR_DVASPECTINVALID = 118,OLEUI_CTERR_CBFORMATINVALID = 119,OLEUI_CTERR_HMETAPICTINVALID = 120,OLEUI_CTERR_STRINGINVALID = 121,};
enum MACRO_OLEUI_IOERR {OLEUI_IOERR_LPSZFILEINVALID = 116,OLEUI_IOERR_LPSZLABELINVALID = 117,OLEUI_IOERR_HICONINVALID = 118,OLEUI_IOERR_LPFORMATETCINVALID = 119,OLEUI_IOERR_PPVOBJINVALID = 120,OLEUI_IOERR_LPIOLECLIENTSITEINVALID = 121,OLEUI_IOERR_LPISTORAGEINVALID = 122,OLEUI_IOERR_SCODEHASERROR = 123,OLEUI_IOERR_LPCLSIDEXCLUDEINVALID = 124,OLEUI_IOERR_CCHFILEINVALID = 125,};
enum MACRO_OLEUI_OPERR {OLEUI_OPERR_SUBPROPNULL = 116,OLEUI_OPERR_SUBPROPINVALID = 117,OLEUI_OPERR_PROPSHEETNULL = 118,OLEUI_OPERR_PROPSHEETINVALID = 119,OLEUI_OPERR_SUPPROP = 120,OLEUI_OPERR_PROPSINVALID = 121,OLEUI_OPERR_PAGESINCORRECT = 122,OLEUI_OPERR_INVALIDPAGES = 123,OLEUI_OPERR_NOTSUPPORTED = 124,OLEUI_OPERR_DLGPROCNOTNULL = 125,OLEUI_OPERR_LPARAMNOTZERO = 126,OLEUI_GPERR_STRINGINVALID = 127,OLEUI_GPERR_CLASSIDINVALID = 128,OLEUI_GPERR_LPCLSIDEXCLUDEINVALID = 129,OLEUI_GPERR_CBFORMATINVALID = 130,OLEUI_VPERR_METAPICTINVALID = 131,OLEUI_VPERR_DVASPECTINVALID = 132,OLEUI_LPERR_LINKCNTRNULL = 133,OLEUI_LPERR_LINKCNTRINVALID = 134,OLEUI_OPERR_PROPERTYSHEET = 135,OLEUI_OPERR_OBJINFOINVALID = 136,OLEUI_OPERR_LINKINFOINVALID = 137,OLEUI_QUERY_GETCLASSID = 65280,OLEUI_QUERY_LINKBROKEN = 65281,};
enum MACRO_OPENCHANNEL {OPENCHANNEL = 4110,};
enum MACRO_PASSTHROUGH {PASSTHROUGH = 19,};
enum MACRO_PC_EXPLICIT {PC_EXPLICIT = 2,PC_NOCOLLAPSE = 4,PC_RESERVED = 1,};
enum MACRO_PDEVICESIZE {PDEVICESIZE = 26,CLIPCAPS = 36,};
enum MACRO_PORT_STATUS {PORT_STATUS_TYPE_ERROR = 1,PORT_STATUS_TYPE_WARNING = 2,PORT_STATUS_TYPE_INFO = 3,PORT_STATUS_OFFLINE = 1,PORT_STATUS_PAPER_JAM = 2,PORT_STATUS_PAPER_OUT = 3,PORT_STATUS_OUTPUT_BIN_FULL = 4,PORT_STATUS_PAPER_PROBLEM = 5,PORT_STATUS_NO_TONER = 6,PORT_STATUS_DOOR_OPEN = 7,PORT_STATUS_USER_INTERVENTION = 8,PORT_STATUS_OUT_OF_MEMORY = 9,PORT_STATUS_TONER_LOW = 10,PORT_STATUS_WARMING_UP = 11,PORT_STATUS_POWER_SAVE = 12,};
enum MACRO_PP_ENUMALGS {PP_ENUMALGS = 1,PP_ENUMCONTAINERS = 2,PP_IMPTYPE = 3,PP_NAME = 4,PP_VERSION = 5,PP_CONTAINER = 6,};
enum MACRO_PRINTDLGORD {PRINTDLGORD = 1538,};
enum MACRO_REGISTERING {REGISTERING = 0x0,REGISTERED = 0x4,};
enum MACRO_REG_CREATED {REG_CREATED_NEW_KEY = 1,REG_OPENED_EXISTING_KEY = 2,REG_NONE = 0,REG_SZ = 1,REG_EXPAND_SZ = 2,REG_BINARY = 3,REG_DWORD = 4,REG_DWORD_BIG_ENDIAN = 5,REG_DWORD_LITTLE_ENDIAN = 4,REG_LINK = 6,REG_MULTI_SZ = 7,REG_RESOURCE_LIST = 8,REG_FULL_RESOURCE_DESCRIPTOR = 9,REG_RESOURCE_REQUIREMENTS_LIST = 10,REG_NOTIFY_CHANGE_NAME = 1,REG_NOTIFY_CHANGE_ATTRIBUTES = 2,REG_NOTIFY_CHANGE_LAST_SET = 4,REG_NOTIFY_CHANGE_SECURITY = 8,};
enum MACRO_RPC_C_AUTHZ {RPC_C_AUTHZ_NONE = 0,RPC_C_AUTHZ_NAME = 1,RPC_C_AUTHZ_DCE = 2,RPC_NCA_FLAGS_DEFAULT = 0,RPC_NCA_FLAGS_IDEMPOTENT = 1,RPC_NCA_FLAGS_BROADCAST = 2,RPC_NCA_FLAGS_MAYBE = 4,};
enum MACRO_SB_SETTEXTA {SB_SETTEXTA = 1025,SB_SETTEXTW = 1035,SB_GETTEXTA = 1026,SB_GETTEXTW = 1037,SB_GETTEXTLENGTHA = 1027,SB_GETTEXTLENGTHW = 1036,SB_SETPARTS = 1028,SB_GETPARTS = 1030,SB_GETBORDERS = 1031,SB_SETMINHEIGHT = 1032,SB_SIMPLE = 1033,SB_GETRECT = 1034,};
enum MACRO_SERVICE_NOT {SERVICE_NOT_UNINSTALLABLE = 0,SERVICE_UNINSTALLABLE = 16,SERVICE_NOT_PAUSABLE = 0,SERVICE_PAUSABLE = 32,SERVICE_REDIR_PAUSED = 1792,SERVICE_REDIR_DISK_PAUSED = 256,SERVICE_REDIR_PRINT_PAUSED = 512,SERVICE_REDIR_COMM_PAUSED = 1024,SERVICE_CTRL_INTERROGATE = 0,SERVICE_CTRL_PAUSE = 1,SERVICE_CTRL_CONTINUE = 2,SERVICE_CTRL_UNINSTALL = 3,SERVICE_CTRL_REDIR_DISK = 1,SERVICE_CTRL_REDIR_PRINT = 2,SERVICE_CTRL_REDIR_COMM = 4,SERVICE_IP_NO_HINT = 0,SERVICE_CCP_NO_HINT = 0,SERVICE_IP_QUERY_HINT = 65536,SERVICE_CCP_QUERY_HINT = 65536,SERVICE_IP_CHKPT_NUM = 255,SERVICE_CCP_CHKPT_NUM = 255,SERVICE_IP_WAIT_TIME = 65280,SERVICE_CCP_WAIT_TIME = 65280,SERVICE_IP_WAITTIME_SHIFT = 8,SERVICE_NTIP_WAITTIME_SHIFT = 12,};
enum MACRO_SERVICE_UIC {SERVICE_UIC_M_NETLOGON_MPATH = 5600,SERVICE_UIC_M_LSA_MACHINE_ACCT = 5601,SERVICE_UIC_M_DATABASE_ERROR = 5602,};
enum MACRO_SETLINEJOIN {SETLINEJOIN = 22,};
enum MACRO_SIZEPALETTE {SIZEPALETTE = 104,};
enum MACRO_SW_AUTOPROF {SW_AUTOPROF_LOAD_MASK = 1,SW_AUTOPROF_SAVE_MASK = 2,};
enum MACRO_SYNCHRONIZE {SYNCHRONIZE = 0x100000,};
enum MACRO_TCM_GETITEM {TCM_GETITEM = 4869,TCM_SETITEM = 4870,TCM_INSERTITEM = 4871,};
enum MACRO_TCN_KEYDOWN {TCN_KEYDOWN = -550,TCN_SELCHANGE = -551,TCN_SELCHANGING = -552,};
enum MACRO_TRANSPARENT {TRANSPARENT = 1,};
enum MACRO_TTM_ADDTOOL {TTM_ADDTOOL = 1028,TTM_DELTOOL = 1029,TTM_NEWTOOLRECT = 1030,TTM_GETTOOLINFO = 1032,TTM_SETTOOLINFO = 1033,TTM_HITTEST = 1034,TTM_GETTEXT = 1035,TTM_UPDATETIPTEXT = 1036,TTM_ENUMTOOLS = 1038,TTM_GETCURRENTTOOL = 1039,};
enum MACRO_USE_NOFORCE {USE_NOFORCE = 0,USE_FORCE = 1,USE_LOTS_OF_FORCE = 2,USE_LOCAL_PARMNUM = 1,USE_REMOTE_PARMNUM = 2,USE_PASSWORD_PARMNUM = 3,USE_ASGTYPE_PARMNUM = 4,USE_USERNAME_PARMNUM = 5,USE_DOMAINNAME_PARMNUM = 6,USE_OK = 0,USE_PAUSED = 1,USE_SESSLOST = 2,USE_DISCONN = 2,USE_NETERR = 3,USE_CONN = 4,USE_RECONN = 5,USE_WILDCARD = 4294967295,USE_DISKDEV = 0,USE_SPOOLDEV = 1,USE_CHARDEV = 2,USE_IPC = 3,};
enum MACRO_WB_CLASSIFY {WB_CLASSIFY = 3,WB_MOVEWORDLEFT = 4,WB_MOVEWORDRIGHT = 5,WB_LEFTBREAK = 6,WB_RIGHTBREAK = 7,WB_MOVEWORDPREV = 4,WB_MOVEWORDNEXT = 5,WB_PREVBREAK = 6,WB_NEXTBREAK = 7,};
enum MACRO_WM_CTLCOLOR {WM_CTLCOLOR = 25,};
enum MACRO_WSAEALREADY {WSAEALREADY = 10037,};
enum MACRO_WSAEMSGSIZE {WSAEMSGSIZE = 10040,};
enum MACRO_WSAENETDOWN {WSAENETDOWN = 10050,};
enum MACRO_WSAENOTCONN {WSAENOTCONN = 10057,};
enum MACRO_WSAENOTSOCK {WSAENOTSOCK = 10038,};
enum MACRO_WSAEPROCLIM {WSAEPROCLIM = 10067,};
enum MACRO_WSAEREFUSED {WSAEREFUSED = 10112,};
enum MACRO_WSAPROTOCOL {WSAPROTOCOL_LEN = 255,};
enum MACRO_XFORMCOORDS {XFORMCOORDS_POSITION = 1,XFORMCOORDS_SIZE = 2,XFORMCOORDS_HIMETRICTOCONTAINER = 4,XFORMCOORDS_CONTAINERTOHIMETRIC = 8,};
enum MACRO__SYS_SELECT {_SYS_SELECT_H = 1,};
enum MACRO___USE_POSIX {__USE_POSIX = 1,__USE_POSIX2 = 1,__USE_POSIX199309 = 1,__USE_POSIX199506 = 1,__USE_XOPEN2K = 1,__USE_MISC = 1,__USE_BSD = 1,__USE_SVID = 1,__USE_FORTIFY_LEVEL = 0,};
enum MACRO_idsBadOldPW {idsBadOldPW = 1006,};
enum MACRO_idsChangePW {idsChangePW = 1005,};
enum MACRO_idsHelpFile {idsHelpFile = 1009,};
enum MACRO_idsPassword {idsPassword = 1003,};
enum MACRO_lDefaultTab {lDefaultTab = 720,};
typedef struct tagMCI_GENERIC_PARMS MCI_GENERIC_PARMS;
typedef struct tagMCI_SEQ_SET_PARMS MCI_SEQ_SET_PARMS;
typedef struct tagMCI_VD_PLAY_PARMS MCI_VD_PLAY_PARMS;
typedef struct tagMCI_VD_STEP_PARMS MCI_VD_STEP_PARMS;
typedef struct tagMEASUREITEMSTRUCT MEASUREITEMSTRUCT;
typedef struct _MENU_EVENT_RECORD MENU_EVENT_RECORD;
typedef struct _MIDL_STUB_MESSAGE MIDL_STUB_MESSAGE;
typedef struct _NET_DISPLAY_GROUP NET_DISPLAY_GROUP;
typedef struct tagNONCLIENTMETRICSA NONCLIENTMETRICSA;
typedef struct tagNONCLIENTMETRICSW NONCLIENTMETRICSW;
typedef struct tagOLEUIOBJECTPROPSA OLEUIOBJECTPROPSA;
typedef struct tagOLEUIOBJECTPROPSW OLEUIOBJECTPROPSW;
typedef int OLE_XPOS_HIMETRIC;
typedef int OLE_YPOS_HIMETRIC;
typedef struct _ACCESS_INFO_1002 *PACCESS_INFO_1002;
typedef struct _ADMIN_OTHER_INFO *PADMIN_OTHER_INFO;
typedef struct tagBITMAPCOREHEADER *PBITMAPCOREHEADER;
typedef struct tagBITMAPFILEHEADER *PBITMAPFILEHEADER;
typedef struct tagBITMAPINFOHEADER *PBITMAPINFOHEADER;
typedef struct _CRITICAL_SECTION *PCRITICAL_SECTION;
typedef struct tagDELETEITEMSTRUCT *PDELETEITEMSTRUCT;
typedef struct tagEMRCREATEPALETTE *PEMRCREATEPALETTE;
typedef struct tagEMROFFSETCLIPRGN *PEMROFFSETCLIPRGN;
typedef struct tagEMRPOLYPOLYLINE16 *PEMRPOLYPOLYGON16;
typedef struct tagEMRRESIZEPALETTE *PEMRRESIZEPALETTE;
typedef struct tagEMRSELECTPALETTE *PEMRSELECTPALETTE;
typedef struct tagEMRSETVIEWPORTORGEX *PEMRSETBRUSHORGEX;
typedef struct tagEMRSETMITERLIMIT *PEMRSETMITERLIMIT;
typedef struct tagEMRSTRETCHDIBITS *PEMRSTRETCHDIBITS;
typedef struct _EXCEPTION_RECORD *PEXCEPTION_RECORD;
typedef struct _FIND_NAME_BUFFER *PFIND_NAME_BUFFER;
typedef struct _FIND_NAME_HEADER *PFIND_NAME_HEADER;
typedef struct _HISTOGRAM_BUCKET *PHISTOGRAM_BUCKET;
typedef union _IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;
typedef struct _IMAGE_DEBUG_MISC *PIMAGE_DEBUG_MISC;
typedef struct _IMAGE_DOS_HEADER *PIMAGE_DOS_HEADER;
typedef struct _IMAGE_LINENUMBER *PIMAGE_LINENUMBER;
typedef struct _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;
typedef struct _IMAGE_OS2_HEADER *PIMAGE_OS2_HEADER;
typedef struct _IMAGE_RELOCATION *PIMAGE_RELOCATION;
typedef struct _IMAGE_THUNK_DATA *PIMAGE_THUNK_DATA;
typedef struct _IMAGE_VXD_HEADER *PIMAGE_VXD_HEADER;
typedef struct tagIMEMENUITEMINFOA *PIMEMENUITEMINFOA;
typedef struct tagIMEMENUITEMINFOW *PIMEMENUITEMINFOW;
typedef struct tagMCI_STATUS_PARMS *PMCI_STATUS_PARMS;
typedef struct _MIDL_SERVER_INFO_ *PMIDL_SERVER_INFO;
typedef struct _NET_DISPLAY_USER *PNET_DISPLAY_USER;
typedef struct tagOLEUICHANGEICONA *POLEUICHANGEICONA;
typedef struct tagOLEUICHANGEICONW *POLEUICHANGEICONW;
typedef struct tagOLEUIPASTEENTRYA *POLEUIPASTEENTRYA;
typedef struct tagOLEUIPASTEENTRYW *POLEUIPASTEENTRYW;
typedef struct _PERF_OBJECT_TYPE *PPERF_OBJECT_TYPE;
typedef struct _PRINT_OTHER_INFO *PPRINT_OTHER_INFO;
typedef struct _REPL_EDIR_INFO_0 *PREPL_EDIR_INFO_0;
typedef struct _REPL_EDIR_INFO_1 *PREPL_EDIR_INFO_1;
typedef struct _REPL_EDIR_INFO_2 *PREPL_EDIR_INFO_2;
typedef struct _REPL_IDIR_INFO_0 *PREPL_IDIR_INFO_0;
typedef struct _REPL_IDIR_INFO_1 *PREPL_IDIR_INFO_1;
typedef struct _PRINTER_DEFAULTSA PRINTER_DEFAULTSA;
typedef struct _PRINTER_DEFAULTSW PRINTER_DEFAULTSW;
typedef struct _RPC_SECURITY_QOS *PRPC_SECURITY_QOS;
typedef struct _SERVER_INFO_1005 *PSERVER_INFO_1005;
typedef struct _SERVER_INFO_1010 *PSERVER_INFO_1010;
typedef struct _SERVER_INFO_1016 *PSERVER_INFO_1016;
typedef struct _SERVER_INFO_1017 *PSERVER_INFO_1017;
typedef struct _SERVER_INFO_1018 *PSERVER_INFO_1018;
typedef struct _SERVER_INFO_1107 *PSERVER_INFO_1107;
typedef struct _SERVER_INFO_1501 *PSERVER_INFO_1501;
typedef struct _SERVER_INFO_1502 *PSERVER_INFO_1502;
typedef struct _SERVER_INFO_1503 *PSERVER_INFO_1503;
typedef struct _SERVER_INFO_1506 *PSERVER_INFO_1506;
typedef struct _SERVER_INFO_1509 *PSERVER_INFO_1509;
typedef struct _SERVER_INFO_1510 *PSERVER_INFO_1510;
typedef struct _SERVER_INFO_1511 *PSERVER_INFO_1511;
typedef struct _SERVER_INFO_1512 *PSERVER_INFO_1512;
typedef struct _SERVER_INFO_1513 *PSERVER_INFO_1513;
typedef struct _SERVER_INFO_1514 *PSERVER_INFO_1514;
typedef struct _SERVER_INFO_1515 *PSERVER_INFO_1515;
typedef struct _SERVER_INFO_1516 *PSERVER_INFO_1516;
typedef struct _SERVER_INFO_1518 *PSERVER_INFO_1518;
typedef struct _SERVER_INFO_1520 *PSERVER_INFO_1520;
typedef struct _SERVER_INFO_1521 *PSERVER_INFO_1521;
typedef struct _SERVER_INFO_1522 *PSERVER_INFO_1522;
typedef struct _SERVER_INFO_1523 *PSERVER_INFO_1523;
typedef struct _SERVER_INFO_1524 *PSERVER_INFO_1524;
typedef struct _SERVER_INFO_1525 *PSERVER_INFO_1525;
typedef struct _SERVER_INFO_1528 *PSERVER_INFO_1528;
typedef struct _SERVER_INFO_1529 *PSERVER_INFO_1529;
typedef struct _SERVER_INFO_1530 *PSERVER_INFO_1530;
typedef struct _SERVER_INFO_1533 *PSERVER_INFO_1533;
typedef struct _SERVER_INFO_1534 *PSERVER_INFO_1534;
typedef struct _SERVER_INFO_1535 *PSERVER_INFO_1535;
typedef struct _SERVER_INFO_1536 *PSERVER_INFO_1536;
typedef struct _SERVER_INFO_1537 *PSERVER_INFO_1537;
typedef struct _SERVER_INFO_1538 *PSERVER_INFO_1538;
typedef struct _SERVER_INFO_1539 *PSERVER_INFO_1539;
typedef struct _SERVER_INFO_1540 *PSERVER_INFO_1540;
typedef struct _SERVER_INFO_1541 *PSERVER_INFO_1541;
typedef struct _SERVER_INFO_1542 *PSERVER_INFO_1542;
typedef struct _SERVER_INFO_1543 *PSERVER_INFO_1543;
typedef struct _SERVER_INFO_1544 *PSERVER_INFO_1544;
typedef struct _SERVER_INFO_1545 *PSERVER_INFO_1545;
typedef struct _SERVER_INFO_1546 *PSERVER_INFO_1546;
typedef struct _SERVER_INFO_1547 *PSERVER_INFO_1547;
typedef struct _SERVER_INFO_1548 *PSERVER_INFO_1548;
typedef struct _SERVER_INFO_1549 *PSERVER_INFO_1549;
typedef struct _SERVER_INFO_1550 *PSERVER_INFO_1550;
typedef struct _SERVER_INFO_1552 *PSERVER_INFO_1552;
typedef struct _SERVER_INFO_1553 *PSERVER_INFO_1553;
typedef struct _SERVER_INFO_1554 *PSERVER_INFO_1554;
typedef struct _SERVER_INFO_1555 *PSERVER_INFO_1555;
typedef struct _SERVER_INFO_1556 *PSERVER_INFO_1556;
typedef struct _SERVER_INFO_1557 *PSERVER_INFO_1557;
typedef struct _SERVER_INFO_1560 *PSERVER_INFO_1560;
typedef struct _SERVER_INFO_1561 *PSERVER_INFO_1561;
typedef struct _SERVER_INFO_1562 *PSERVER_INFO_1562;
typedef struct _SERVER_INFO_1563 *PSERVER_INFO_1563;
typedef struct _SERVER_INFO_1564 *PSERVER_INFO_1564;
typedef struct _SERVER_INFO_1565 *PSERVER_INFO_1565;
typedef struct _SERVER_INFO_1566 *PSERVER_INFO_1566;
typedef struct _SERVER_INFO_1567 *PSERVER_INFO_1567;
typedef struct _SERVER_INFO_1568 *PSERVER_INFO_1568;
typedef struct _SERVER_INFO_1569 *PSERVER_INFO_1569;
typedef struct _SERVER_INFO_1570 *PSERVER_INFO_1570;
typedef struct _SERVER_INFO_1571 *PSERVER_INFO_1571;
typedef struct _SERVER_INFO_1572 *PSERVER_INFO_1572;
typedef struct _SERVER_INFO_1573 *PSERVER_INFO_1573;
typedef struct _SERVER_INFO_1574 *PSERVER_INFO_1574;
typedef struct _SERVER_INFO_1575 *PSERVER_INFO_1575;
typedef struct _SERVER_INFO_1576 *PSERVER_INFO_1576;
typedef struct _SERVER_INFO_1577 *PSERVER_INFO_1577;
typedef struct _SERVER_INFO_1578 *PSERVER_INFO_1578;
typedef struct _SERVER_INFO_1579 *PSERVER_INFO_1579;
typedef struct _SERVER_INFO_1580 *PSERVER_INFO_1580;
typedef struct _SERVER_INFO_1581 *PSERVER_INFO_1581;
typedef struct _SERVER_INFO_1582 *PSERVER_INFO_1582;
typedef struct _SERVER_INFO_1583 *PSERVER_INFO_1583;
typedef struct _SERVER_INFO_1584 *PSERVER_INFO_1584;
typedef struct _SERVER_INFO_1585 *PSERVER_INFO_1585;
typedef struct _SERVER_INFO_1586 *PSERVER_INFO_1586;
typedef struct _SESSION_INFO_502 *PSESSION_INFO_502;
typedef struct _TAPE_WRITE_MARKS *PTAPE_WRITE_MARKS;
typedef struct _TIME_OF_DAY_INFO *PTIME_OF_DAY_INFO;
typedef struct _TOKEN_PRIVILEGES *PTOKEN_PRIVILEGES;
typedef struct _RASTERIZER_STATUS RASTERIZER_STATUS;
typedef struct _REMOTE_NAME_INFOA REMOTE_NAME_INFOA;
typedef struct _REMOTE_NAME_INFOW REMOTE_NAME_INFOW;
typedef struct _SHELLEXECUTEINFOA SHELLEXECUTEINFOA;
typedef struct _SHELLEXECUTEINFOW SHELLEXECUTEINFOW;
typedef struct _TAPE_GET_POSITION TAPE_GET_POSITION;
typedef struct _TAPE_SET_POSITION TAPE_SET_POSITION;
typedef struct _WKSTA_USER_INFO_0 WKSTA_USER_INFO_0;
typedef struct _WKSTA_USER_INFO_1 WKSTA_USER_INFO_1;
typedef struct _WSAPROTOCOL_INFOA WSAPROTOCOL_INFOA;
typedef struct _WSAPROTOCOL_INFOW WSAPROTOCOL_INFOW;
struct _RPC_SECURITY_QOS {unsigned int Version;unsigned int Capabilities;unsigned int IdentityTracking;unsigned int ImpersonationType;};
enum _WSAESETSERVICEOP {RNRSERVICE_REGISTER = 0x0,RNRSERVICE_DEREGISTER = 0x1,RNRSERVICE_DELETE = 0x2,};
struct _WSANETWORKEVENTS {int lNetworkEvents;int iErrorCode[8];};
typedef void *__builtin_va_list;
typedef struct __pthread_internal_slist __pthread_slist_t;
enum __rlimit_resource {RLIMIT_CPU = 0x0,RLIMIT_FSIZE = 0x1,RLIMIT_DATA = 0x2,RLIMIT_STACK = 0x3,RLIMIT_CORE = 0x4,__RLIMIT_RSS = 0x5,RLIMIT_NOFILE = 0x7,__RLIMIT_OFILE = 0x7,RLIMIT_AS = 0x9,__RLIMIT_NPROC = 0x6,__RLIMIT_MEMLOCK = 0x8,__RLIMIT_LOCKS = 0xA,__RLIMIT_SIGPENDING = 0xB,__RLIMIT_MSGQUEUE = 0xC,__RLIMIT_NICE = 0xD,__RLIMIT_RTPRIO = 0xE,__RLIMIT_NLIMITS = 0xF,__RLIM_NLIMITS = 0xF,};
enum iurl_seturl_flags {IURL_SETURL_FL_GUESS_PROTOCOL = 0x1,IURL_SETURL_FL_USE_DEFAULT_PROTOCOL = 0x2,ALL_IURL_SETURL_FLAGS = 0x3,};
typedef union _D1779CA5851A61401DD36BCDAF347214 pthread_barrier_t;
struct tagCStdStubBuffer { struct IRpcStubBufferVtbl *lpVtbl;int RefCount;struct IUnknown *pvServerObject;};
enum tagOLEUIPASTEFLAG {OLEUIPASTE_PASTEONLY = 0x0,OLEUIPASTE_LINKTYPE1 = 0x1,OLEUIPASTE_LINKTYPE2 = 0x2,OLEUIPASTE_LINKTYPE3 = 0x4,OLEUIPASTE_LINKTYPE4 = 0x8,OLEUIPASTE_LINKTYPE5 = 0x10,OLEUIPASTE_LINKTYPE6 = 0x20,OLEUIPASTE_LINKTYPE7 = 0x40,OLEUIPASTE_LINKTYPE8 = 0x80,OLEUIPASTE_PASTE = 0x200,OLEUIPASTE_LINKANYTYPE = 0x400,OLEUIPASTE_ENABLEICON = 0x800,};
enum tagRAPISTREAMFLAG {STREAM_TIMEOUT_READ = 0x0,};
typedef struct _ACCESS_INFO_1002 ACCESS_INFO_1002;
typedef struct _ADMIN_OTHER_INFO ADMIN_OTHER_INFO;
typedef struct tagBITMAPCOREHEADER BITMAPCOREHEADER;
typedef struct tagBITMAPFILEHEADER BITMAPFILEHEADER;
typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;
typedef struct _CRITICAL_SECTION CRITICAL_SECTION;
typedef struct tagDELETEITEMSTRUCT DELETEITEMSTRUCT;
typedef struct _DISK_PERFORMANCE DISK_PERFORMANCE;
typedef struct tagEMRCREATEPALETTE EMRCREATEPALETTE;
typedef struct tagEMROFFSETCLIPRGN EMROFFSETCLIPRGN;
typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYGON16;
typedef struct tagEMRRESIZEPALETTE EMRRESIZEPALETTE;
typedef struct tagEMRSELECTPALETTE EMRSELECTPALETTE;
typedef struct tagEMRSETVIEWPORTORGEX EMRSETBRUSHORGEX;
typedef struct tagEMRSETMITERLIMIT EMRSETMITERLIMIT;
typedef struct tagEMRSTRETCHDIBITS EMRSTRETCHDIBITS;
typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;
typedef struct _FIND_NAME_BUFFER FIND_NAME_BUFFER;
typedef struct _FIND_NAME_HEADER FIND_NAME_HEADER;
typedef struct _HISTOGRAM_BUCKET HISTOGRAM_BUCKET;
struct HPROPSHEETPAGE__ {int i;};
typedef struct _HSE_VERSION_INFO HSE_VERSION_INFO;
typedef struct tagHW_PROFILE_INFOA HW_PROFILE_INFOA;
typedef struct tagHW_PROFILE_INFOW HW_PROFILE_INFOW;
struct IConnectionPoint {struct IConnectionPointVtbl *lpVtbl;};
struct IEnumConnections {struct IEnumConnectionsVtbl *lpVtbl;};
struct IEnumSTATPROPSTG {struct IEnumSTATPROPSTGVtbl *lpVtbl;};
typedef union _IMAGE_AUX_SYMBOL IMAGE_AUX_SYMBOL;
typedef struct _IMAGE_DEBUG_MISC IMAGE_DEBUG_MISC;
typedef struct _IMAGE_DOS_HEADER IMAGE_DOS_HEADER;
typedef struct _IMAGE_LINENUMBER IMAGE_LINENUMBER;
typedef struct _IMAGE_NT_HEADERS IMAGE_NT_HEADERS;
typedef struct _IMAGE_OS2_HEADER IMAGE_OS2_HEADER;
typedef struct _IMAGE_RELOCATION IMAGE_RELOCATION;
typedef struct _IMAGE_THUNK_DATA IMAGE_THUNK_DATA;
typedef struct _IMAGE_VXD_HEADER IMAGE_VXD_HEADER;
typedef struct tagIMEMENUITEMINFOA IMEMENUITEMINFOA;
typedef struct tagIMEMENUITEMINFOW IMEMENUITEMINFOW;
struct IOleAdviseHolder {struct IOleAdviseHolderVtbl *lpVtbl;};
struct IOleInPlaceFrame {struct IOleInPlaceFrameVtbl *lpVtbl;};
struct IPSFactoryBuffer {struct IPSFactoryBufferVtbl *lpVtbl;};
struct IPropertyStorage {struct IPropertyStorageVtbl *lpVtbl;};
struct ISimpleFrameSite {struct ISimpleFrameSiteVtbl *lpVtbl;};
typedef struct _KEY_EVENT_RECORD KEY_EVENT_RECORD;
typedef struct _ADDJOB_INFO_1A *LPADDJOB_INFO_1A;
typedef struct _ADDJOB_INFO_1W *LPADDJOB_INFO_1W;
typedef struct _AE_SERVICESTAT *LPAE_SERVICESTAT;
typedef struct _BITMAPCOREINFO *LPBITMAPCOREINFO;
typedef struct _22BDD2D628B0B561C5A9CA42290FE551 *LPBITMAPV4HEADER;
typedef struct _CHARDEV_INFO_0 *LPCHARDEV_INFO_0;
typedef struct _CHARDEV_INFO_1 *LPCHARDEV_INFO_1;
typedef struct IClassActivator *LPCLASSACTIVATOR;
typedef struct IClientSecurity *LPCLIENTSECURITY;
typedef ICommDlgBrowser *LPCOMMDLGBROWSER;
typedef struct ICreateTypeInfo *LPCREATETYPEINFO;
typedef struct ICreateTypeLib2 *LPCREATETYPELIB2;
typedef struct _DISCDLGSTRUCTA *LPDISCDLGSTRUCTA;
typedef struct _DISCDLGSTRUCTW *LPDISCDLGSTRUCTW;
typedef struct tagDRAWITEMSTRUCT *LPDRAWITEMSTRUCT;
typedef struct _B6447483CA6EC2EDA955C4C8EEAE802B *LPDRAWTEXTPARAMS;
typedef struct _DRIVER_INFO_1A *LPDRIVER_INFO_1A;
typedef struct _DRIVER_INFO_1W *LPDRIVER_INFO_1W;
typedef struct _DRIVER_INFO_2A *LPDRIVER_INFO_2A;
typedef struct _DRIVER_INFO_2W *LPDRIVER_INFO_2W;
typedef struct _DRIVER_INFO_3A *LPDRIVER_INFO_3A;
typedef struct _DRIVER_INFO_3W *LPDRIVER_INFO_3W;
typedef struct tagENUMLOGFONTEXA *LPENUMLOGFONTEXA;
typedef struct tagENUMLOGFONTEXW *LPENUMLOGFONTEXW;
typedef struct _FILEDESCRIPTOR *LPFILEDESCRIPTOR;
typedef IFileViewerSite *LPFILEVIEWERSITE;
typedef struct _58C398469581E4FCDD5ADAF6870FB0ED *LPFOLDERSETTINGS;
typedef struct tagLOGCOLORSPACEA *LPLOGCOLORSPACEA;
typedef struct tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;
typedef struct tagMCI_PLAY_PARMS *LPMCI_PLAY_PARMS;
typedef struct tagMCI_SEEK_PARMS *LPMCI_SEEK_PARMS;
typedef struct tagMODULEENTRY32W *LPMODULEENTRY32W;
typedef struct tagNEWTEXTMETRICA *LPNEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICW *LPNEWTEXTMETRICW;
typedef struct IOleControlSite *LPOLECONTROLSITE;
typedef IOleUILinkInfoA *LPOLEUILINKINFOA;
typedef IOleUILinkInfoW *LPOLEUILINKINFOW;
typedef struct _OSVERSIONINFOA *LPOSVERSIONINFOA;
typedef struct _OSVERSIONINFOW *LPOSVERSIONINFOW;
typedef struct IPersistStorage *LPPERSISTSTORAGE;
typedef struct _PRINTER_INFO_3 *LPPRINTER_INFO_3;
typedef struct tagPROCESSENTRY32 *LPPROCESSENTRY32;
typedef struct IProgressNotify *LPPROGRESSNOTIFY;
typedef struct _PROPSHEETPAGEA *LPPROPSHEETPAGEA;
typedef struct _PROPSHEETPAGEW *LPPROPSHEETPAGEW;
typedef struct tagREBARBANDINFOA *LPREBARBANDINFOA;
typedef struct tagREBARBANDINFOW *LPREBARBANDINFOW;
typedef struct _REPL_INFO_1000 *LPREPL_INFO_1000;
typedef struct _REPL_INFO_1001 *LPREPL_INFO_1001;
typedef struct _REPL_INFO_1002 *LPREPL_INFO_1002;
typedef struct _REPL_INFO_1003 *LPREPL_INFO_1003;
typedef struct IRpcProxyBuffer *LPRPCPROXYBUFFER;
typedef struct IRunnableObject *LPRUNNABLEOBJECT;
typedef struct tagSAFEARRAYBOUND *LPSAFEARRAYBOUND;
typedef struct IServerSecurity *LPSERVERSECURITY;
typedef struct _SERVICE_INFO_0 *LPSERVICE_INFO_0;
typedef struct _SERVICE_INFO_1 *LPSERVICE_INFO_1;
typedef struct _SERVICE_INFO_2 *LPSERVICE_INFO_2;
typedef struct _SERVICE_STATUS *LPSERVICE_STATUS;
typedef struct _SESSION_INFO_0 *LPSESSION_INFO_0;
typedef struct _SESSION_INFO_1 *LPSESSION_INFO_1;
typedef struct _SESSION_INFO_2 *LPSESSION_INFO_2;
typedef struct _SHARE_INFO_502 *LPSHARE_INFO_502;
typedef struct _SOCKET_ADDRESS *LPSOCKET_ADDRESS;
typedef struct IStdMarshalInfo *LPSTDMARSHALINFO;
typedef struct _SV2CVW2_PARAMS *LPSV2CVW2_PARAMS;
typedef struct _TC_HITTESTINFO *LPTC_HITTESTINFO;
typedef struct _TV_HITTESTINFO *LPTV_HITTESTINFO;
typedef struct _USER_INFO_1003 *LPUSER_INFO_1003;
typedef struct _USER_INFO_1005 *LPUSER_INFO_1005;
typedef struct _USER_INFO_1006 *LPUSER_INFO_1006;
typedef struct _USER_INFO_1007 *LPUSER_INFO_1007;
typedef struct _USER_INFO_1008 *LPUSER_INFO_1008;
typedef struct _USER_INFO_1009 *LPUSER_INFO_1009;
typedef struct _USER_INFO_1010 *LPUSER_INFO_1010;
typedef struct _USER_INFO_1011 *LPUSER_INFO_1011;
typedef struct _USER_INFO_1012 *LPUSER_INFO_1012;
typedef struct _USER_INFO_1013 *LPUSER_INFO_1013;
typedef struct _USER_INFO_1014 *LPUSER_INFO_1014;
typedef struct _USER_INFO_1017 *LPUSER_INFO_1017;
typedef struct _USER_INFO_1018 *LPUSER_INFO_1018;
typedef struct _USER_INFO_1020 *LPUSER_INFO_1020;
typedef struct _USER_INFO_1023 *LPUSER_INFO_1023;
typedef struct _USER_INFO_1024 *LPUSER_INFO_1024;
typedef struct _USER_INFO_1025 *LPUSER_INFO_1025;
typedef struct _USER_INFO_1051 *LPUSER_INFO_1051;
typedef struct _USER_INFO_1052 *LPUSER_INFO_1052;
typedef struct _USER_INFO_1053 *LPUSER_INFO_1053;
typedef struct _WKSTA_INFO_100 *LPWKSTA_INFO_100;
typedef struct _WKSTA_INFO_101 *LPWKSTA_INFO_101;
typedef struct _WKSTA_INFO_102 *LPWKSTA_INFO_102;
typedef struct _WKSTA_INFO_302 *LPWKSTA_INFO_302;
typedef struct _WKSTA_INFO_402 *LPWKSTA_INFO_402;
typedef struct _WKSTA_INFO_502 *LPWKSTA_INFO_502;
enum MACRO_ANSI_FIXED {ANSI_FIXED_FONT = 11,ANSI_VAR_FONT = 12,};
enum MACRO_BACKGROUND {BACKGROUND_BLUE = 16,BACKGROUND_GREEN = 32,BACKGROUND_RED = 64,BACKGROUND_INTENSITY = 128,};
enum MACRO_CCHCCCLASS {CCHCCCLASS = 32,};
enum MACRO_CC_RGBINIT {CC_RGBINIT = 1,CC_FULLOPEN = 2,CC_PREVENTFULLOPEN = 4,CC_SHOWHELP = 8,CC_ENABLEHOOK = 16,CC_ENABLETEMPLATE = 32,CC_ENABLETEMPLATEHANDLE = 64,CC_SOLIDCOLOR = 128,CC_ANYCOLOR = 256,};
enum MACRO_CONFIGFLAG {CONFIGFLAG_DISABLED = 1,CONFIGFLAG_REMOVED = 2,CONFIGFLAG_MANUAL_INSTALL = 4,CONFIGFLAG_IGNORE_BOOT_LC = 8,CONFIGFLAG_NET_BOOT = 16,CONFIGFLAG_REINSTALL = 32,CONFIGFLAG_FAILEDINSTALL = 64,CONFIGFLAG_CANTSTOPACHILD = 128,CONFIGFLAG_OKREMOVEROM = 256,CONFIGFLAG_NOREMOVEEXIT = 512,};
enum MACRO_CP_WINANSI {CP_WINANSI = 1004,CP_WINUNICODE = 1200,};
enum MACRO_CREATE_NEW {CREATE_NEW_CONSOLE = 16,};
enum MACRO_CRYPT_MODE {CRYPT_MODE_CBC = 1,CRYPT_MODE_ECB = 2,CRYPT_MODE_OFB = 3,CRYPT_MODE_CFB = 4,CRYPT_MODE_CTS = 5,CRYPT_ENCRYPT = 1,CRYPT_DECRYPT = 2,CRYPT_EXPORT = 4,CRYPT_READ = 8,CRYPT_WRITE = 16,CRYPT_MAC = 32,};
enum MACRO_CW_NEXTPID {CW_NEXTPID = 0x80000000,};
enum MACRO_DC_VERSION {DC_VERSION = 10,DC_BINADJUST = 19,DC_MANUFACTURER = 23,DC_MODEL = 24,};
enum MACRO_DEVICEDATA {DEVICEDATA = 19,};
enum MACRO_DIALOPTION {DIALOPTION_BILLING = 64,DIALOPTION_QUIET = 128,DIALOPTION_DIALTONE = 256,};
enum MACRO_DIFFERENCE {DIFFERENCE = 11,};
enum MACRO_DI_CHANNEL {DI_CHANNEL = 1,DI_CHANNEL_WRITE = 2,DI_READ_SPOOL_JOB = 3,};
enum MACRO_DRV_CANCEL {DRV_CANCEL = 0,DRV_OK = 1,DRV_RESTART = 2,DRV_MCI_FIRST = 2048,DRV_MCI_LAST = 6143,};
enum MACRO_DTRESULTOK {DTRESULTOK = 0,DTRESULTFIX = 1,DTRESULTPROB = 2,};
enum MACRO_FD_SETSIZE {FD_SETSIZE = 0x400,};
enum MACRO_FILE_BEGIN {FILE_BEGIN = 0,FILE_CURRENT = 1,FILE_END = 2,};
enum MACRO_FINDDLGORD {FINDDLGORD = 1540,};
enum MACRO_FONTDLGORD {FONTDLGORD = 1542,};
enum MACRO_FONTMAPPER {FONTMAPPER_MAX = 10,};
enum MACRO_FOREGROUND {FOREGROUND_BLUE = 1,FOREGROUND_GREEN = 2,FOREGROUND_RED = 4,FOREGROUND_INTENSITY = 8,};
enum MACRO_GDICOMMENT {GDICOMMENT_WINDOWS_METAFILE = -2147483647,GDICOMMENT_BEGINGROUP = 2,GDICOMMENT_ENDGROUP = 3,GDICOMMENT_MULTIFORMATS = 1073741828,GDICOMMENT_IDENTIFIER = 1128875079,};
enum MACRO_HTSIZELAST {HTSIZELAST = 17,};
enum MACRO_HTTOPRIGHT {HTTOPRIGHT = 14,};
enum MACRO_ILLUMINANT {ILLUMINANT_DEVICE_DEFAULT = 0,ILLUMINANT_A = 1,ILLUMINANT_B = 2,ILLUMINANT_C = 3,ILLUMINANT_D50 = 4,ILLUMINANT_D55 = 5,ILLUMINANT_D65 = 6,ILLUMINANT_D75 = 7,ILLUMINANT_F2 = 8,ILLUMINANT_MAX_INDEX = 8,ILLUMINANT_TUNGSTEN = 1,ILLUMINANT_DAYLIGHT = 3,ILLUMINANT_FLUORESCENT = 8,ILLUMINANT_NTSC = 3,};
enum MACRO_IME_CONFIG {IME_CONFIG_GENERAL = 1,IME_CONFIG_REGISTERWORD = 2,IME_CONFIG_SELECTDICTIONARY = 3,IME_ESC_QUERY_SUPPORT = 3,IME_ESC_RESERVED_FIRST = 4,IME_ESC_RESERVED_LAST = 2047,IME_ESC_PRIVATE_FIRST = 2048,IME_ESC_PRIVATE_LAST = 4095,IME_ESC_SEQUENCE_TO_INTERNAL = 4097,IME_ESC_GET_EUDC_DICTIONARY = 4099,IME_ESC_SET_EUDC_DICTIONARY = 4100,IME_ESC_MAX_KEY = 4101,IME_ESC_IME_NAME = 4102,IME_ESC_SYNC_HOTKEY = 4103,IME_ESC_HANJA_MODE = 4104,IME_ESC_AUTOMATA = 4105,IME_REGWORD_STYLE_EUDC = 1,IME_REGWORD_STYLE_USER_FIRST = -2147483648,IME_REGWORD_STYLE_USER_LAST = -1,};
enum MACRO_LB_CTLCODE {LB_CTLCODE = 0,LB_OKAY = 0,LB_ERR = -1,LB_ERRSPACE = -2,};
enum MACRO_LM20_GNLEN {LM20_GNLEN = 20,};
enum MACRO_LM20_PWLEN {LM20_PWLEN = 14,};
enum MACRO_LM20_QNLEN {LM20_QNLEN = 12,};
enum MACRO_LM20_UNLEN {LM20_UNLEN = 20,};
enum MACRO_LOCALGROUP {LOCALGROUP_NAME_PARMNUM = 1,LOCALGROUP_COMMENT_PARMNUM = 2,};
enum MACRO_LOGPIXELSX {LOGPIXELSX = 88,};
enum MACRO_LOGPIXELSY {LOGPIXELSY = 90,};
enum MACRO_MARKPARITY {MARKPARITY = 3,SPACEPARITY = 4,};
enum MACRO_MAXFILELEN {MAXFILELEN = 13,};
enum MACRO_MAXINTATOM {MAXINTATOM = 0xC000,};
enum MACRO_MAX_GOPHER {MAX_GOPHER_DISPLAY_TEXT = 128,MAX_GOPHER_SELECTOR_TEXT = 256,MAX_GOPHER_HOST_NAME = 256,MAX_GOPHER_LOCATOR_LENGTH = 653,};
enum MACRO_MAX_LANMAN {MAX_LANMAN_MESSAGE_ID = 5799,};
enum MACRO_MAX_MODULE {MAX_MODULE_NAME32 = 255,};
enum MACRO_MAX_PASSWD {MAX_PASSWD_LEN = 256,};
enum MACRO_MCIERR_AVI {MCIERR_AVI_OLDAVIFORMAT = 612,MCIERR_AVI_NOTINTERLEAVED = 613,MCIERR_AVI_NODISPDIB = 614,MCIERR_AVI_CANTPLAYFULLSCREEN = 615,MCIERR_AVI_TOOBIGFORVGA = 616,MCIERR_AVI_NOCOMPRESSOR = 617,MCIERR_AVI_DISPLAYERROR = 618,MCIERR_AVI_AUDIOERROR = 619,MCIERR_AVI_BADPALETTE = 620,};
enum MACRO_MCI_MCIAVI {MCI_MCIAVI_PLAY_WINDOW = 0x1000000,MCI_MCIAVI_PLAY_FULLSCREEN = 0x2000000,MCI_MCIAVI_PLAY_FULLBY2 = 0x4000000,MCI_AVI_STATUS_FRAMES_SKIPPED = 0x8001,MCI_AVI_STATUS_LAST_PLAY_SPEED = 0x8002,MCI_AVI_STATUS_AUDIO_BREAKS = 0x8003,MCI_AVI_SETVIDEO_DRAW_PROCEDURE = 0x8000,MCI_AVI_SETVIDEO_PALETTE_COLOR = 0x8100,MCI_AVI_SETVIDEO_PALETTE_HALFTONE = 0xFFFF,};
enum MACRO_MDMVOLFLAG {MDMVOLFLAG_LOW = 1,MDMVOLFLAG_MEDIUM = 2,MDMVOLFLAG_HIGH = 4,};
enum MACRO_MERGEPAINT {MERGEPAINT = 0xBB0226,};
enum MACRO_MIDIMAPPER {MIDIMAPPER = 4294967295,};
enum MACRO_NCBADDNAME {NCBADDNAME = 0x30,};
enum MACRO_NCBDELNAME {NCBDELNAME = 0x31,};
enum MACRO_NCBRECVANY {NCBRECVANY = 0x16,};
enum MACRO_NDDE_TRUST {NDDE_TRUST_SHARE_START = 0x80000000,NDDE_TRUST_SHARE_INIT = 0x40000000,NDDE_TRUST_SHARE_DEL = 0x20000000,NDDE_TRUST_CMD_SHOW = 0x10000000,NDDE_CMD_SHOW_MASK = 0xFFFF,};
enum MACRO_NOTSRCCOPY {NOTSRCCOPY = 0x330008,};
enum MACRO_NULLREGION {NULLREGION = 1,SIMPLEREGION = 2,};
enum MACRO_NUMMARKERS {NUMMARKERS = 20,ASPECTX = 40,};
enum MACRO_ODT_HEADER {ODT_HEADER = 100,ODT_TAB = 101,};
enum MACRO_ONESTOPBIT {ONESTOPBIT = 0,ONE5STOPBITS = 1,TWOSTOPBITS = 2,};
enum MACRO_POSTSCRIPT {POSTSCRIPT_DATA = 37,POSTSCRIPT_IGNORE = 38,};
enum MACRO_RASTERCAPS {RASTERCAPS = 38,};
enum MACRO_RC_BIGFONT {RC_BIGFONT = 1024,RC_GDI20_STATE = 32,RC_NONE = 0,RC_SAVEBITMAP = 64,};
enum MACRO_REGSTR_VAL {REGSTR_VAL_MAX_HCID_LEN = 1024,};
enum MACRO_SB_GETTEXT {SB_GETTEXT = 1026,SB_SETTEXT = 1025,SB_GETTEXTLENGTH = 1027,};
enum MACRO_SCS_SETSTR {SCS_SETSTR = 9,SCS_CHANGEATTR = 18,SCS_CHANGECLAUSE = 36,};
enum MACRO_SERVICE_NO {SERVICE_NO_CHANGE = -1,SERVICE_STOPPED = 1,SERVICE_START_PENDING = 2,SERVICE_STOP_PENDING = 3,SERVICE_RUNNING = 4,SERVICE_CONTINUE_PENDING = 5,SERVICE_PAUSE_PENDING = 6,SERVICE_PAUSED = 7,SERVICE_ACCEPT_STOP = 1,SERVICE_ACCEPT_PAUSE_CONTINUE = 2,SERVICE_ACCEPT_SHUTDOWN = 4,SERVICE_CONTROL_STOP = 1,SERVICE_CONTROL_PAUSE = 2,SERVICE_CONTROL_CONTINUE = 3,SERVICE_CONTROL_INTERROGATE = 4,SERVICE_CONTROL_SHUTDOWN = 5,SERVICE_ACTIVE = 1,SERVICE_INACTIVE = 2,SERVICE_STATE_ALL = 3,SERVICE_QUERY_CONFIG = 1,SERVICE_CHANGE_CONFIG = 2,SERVICE_QUERY_STATUS = 4,SERVICE_ENUMERATE_DEPENDENTS = 8,SERVICE_START = 16,SERVICE_STOP = 32,SERVICE_PAUSE_CONTINUE = 64,SERVICE_INTERROGATE = 128,SERVICE_USER_DEFINED_CONTROL = 256,SERVICE_ALL_ACCESS = 983551,};
enum MACRO_SERVICE_NT {SERVICE_NT_MAXTIME = 0xFFFF,SERVICE_RESRV_MASK = 0x1FFFF,SERVICE_MAXTIME = 0xFF,SERVICE_BASE = 0xBEA,SERVICE_UIC_NORMAL = 0x0,SERVICE_UIC_BADPARMVAL = 0xBEB,SERVICE_UIC_MISSPARM = 0xBEC,SERVICE_UIC_UNKPARM = 0xBED,SERVICE_UIC_RESOURCE = 0xBEE,SERVICE_UIC_CONFIG = 0xBEF,SERVICE_UIC_SYSTEM = 0xBF0,SERVICE_UIC_INTERNAL = 0xBF1,SERVICE_UIC_AMBIGPARM = 0xBF2,SERVICE_UIC_DUPPARM = 0xBF3,SERVICE_UIC_KILL = 0xBF4,SERVICE_UIC_EXEC = 0xBF5,SERVICE_UIC_SUBSERV = 0xBF6,SERVICE_UIC_CONFLPARM = 0xBF7,SERVICE_UIC_FILE = 0xBF8,SERVICE_UIC_M_NULL = 0x0,SERVICE_UIC_M_MEMORY = 0xBFE,SERVICE_UIC_M_DISK = 0xBFF,SERVICE_UIC_M_THREADS = 0xC00,SERVICE_UIC_M_PROCESSES = 0xC01,SERVICE_UIC_M_SECURITY = 0xC02,SERVICE_UIC_M_LANROOT = 0xC03,SERVICE_UIC_M_REDIR = 0xC04,SERVICE_UIC_M_SERVER = 0xC05,SERVICE_UIC_M_SEC_FILE_ERR = 0xC06,SERVICE_UIC_M_FILES = 0xC07,SERVICE_UIC_M_LOGS = 0xC08,SERVICE_UIC_M_LANGROUP = 0xC09,SERVICE_UIC_M_MSGNAME = 0xC0A,SERVICE_UIC_M_ANNOUNCE = 0xC0B,SERVICE_UIC_M_UAS = 0xC0C,SERVICE_UIC_M_SERVER_SEC_ERR = 0xC0D,SERVICE_UIC_M_WKSTA = 0xC0F,SERVICE_UIC_M_ERRLOG = 0xC10,SERVICE_UIC_M_FILE_UW = 0xC11,SERVICE_UIC_M_ADDPAK = 0xC12,SERVICE_UIC_M_LAZY = 0xC13,SERVICE_UIC_M_UAS_MACHINE_ACCT = 0xC14,SERVICE_UIC_M_UAS_SERVERS_NMEMB = 0xC15,SERVICE_UIC_M_UAS_SERVERS_NOGRP = 0xC16,SERVICE_UIC_M_UAS_INVALID_ROLE = 0xC17,SERVICE_UIC_M_NETLOGON_NO_DC = 0xC18,SERVICE_UIC_M_NETLOGON_DC_CFLCT = 0xC19,SERVICE_UIC_M_NETLOGON_AUTH = 0xC1A,SERVICE_UIC_M_UAS_PROLOG = 0xC1B,};
enum MACRO_SETCHARSET {SETCHARSET = 772,STRETCHBLT = 2048,};
enum MACRO_SETLINECAP {SETLINECAP = 21,};
enum MACRO_SHARE_TYPE {SHARE_TYPE_OLD = 0x1,SHARE_TYPE_NEW = 0x2,SHARE_TYPE_STATIC = 0x4,};
enum MACRO_SIMPLEBLOB {SIMPLEBLOB = 1,PUBLICKEYBLOB = 6,};
enum MACRO_SIZENORMAL {SIZENORMAL = 0,SIZEICONIC = 1,SIZEFULLSCREEN = 2,};
enum MACRO_TT_POLYGON {TT_POLYGON_TYPE = 24,TT_PRIM_LINE = 1,TT_PRIM_QSPLINE = 2,};
enum MACRO_VALID_NTFT {VALID_NTFT = 0xC0,};
enum MACRO_WSABASEERR {WSABASEERR = 10000,};
enum MACRO_WSAEDISCON {WSAEDISCON = 10101,};
enum MACRO_WSAEISCONN {WSAEISCONN = 10056,};
enum MACRO_WSAENOBUFS {WSAENOBUFS = 10055,};
enum MACRO_WSAENOMORE {WSAENOMORE = 10102,};
enum MACRO_WSAEREMOTE {WSAEREMOTE = 10071,};
enum MACRO___WORDSIZE {__WORDSIZE = 32,};
enum MACRO___timespec {__timespec_defined = 1,};
enum MACRO_idsAppName {idsAppName = 1007,};
enum MACRO_idsIniFile {idsIniFile = 1001,};
typedef struct tagMCI_RECORD_PARMS MCI_RECORD_PARMS;
typedef struct tagMCI_STATUS_PARMS MCI_STATUS_PARMS;
typedef struct tagMDICREATESTRUCTA MDICREATESTRUCTA;
typedef struct tagMDICREATESTRUCTW MDICREATESTRUCTW;
typedef struct _46B8CD9DF897759D0306203A2121EA8B MENUITEMTEMPLATE;
typedef struct _MIDL_SERVER_INFO_ MIDL_SERVER_INFO;
typedef struct tagMINIMIZEDMETRICS MINIMIZEDMETRICS;
typedef struct _NET_DISPLAY_USER NET_DISPLAY_USER;
typedef struct tagNEWTEXTMETRICEXA NEWTEXTMETRICEXA;
typedef struct tagNEWTEXTMETRICEXW NEWTEXTMETRICEXW;
typedef struct tagOLEUICHANGEICONA OLEUICHANGEICONA;
typedef struct tagOLEUICHANGEICONW OLEUICHANGEICONW;
typedef struct tagOLEUIPASTEENTRYA OLEUIPASTEENTRYA;
typedef struct tagOLEUIPASTEENTRYW OLEUIPASTEENTRYW;
typedef int OLE_XSIZE_PIXELS;
typedef int OLE_YSIZE_PIXELS;
typedef struct _AE_RESACCESSREJ *PAE_RESACCESSREJ;
typedef struct _CHARDEVQ_INFO_0 *PCHARDEVQ_INFO_0;
typedef struct _CHARDEVQ_INFO_1 *PCHARDEVQ_INFO_1;
typedef struct tagCOMPOSITIONFORM *PCOMPOSITIONFORM;
typedef struct DRVCONFIGINFOEX *PDRVCONFIGINFOEX;
typedef struct _DSKTLSYSTEMTIME *PDSKTLSYSTEMTIME;
typedef struct tagEMRSELECTOBJECT *PEMRDELETEOBJECT;
typedef struct tagEMREXTCREATEPEN *PEMREXTCREATEPEN;
typedef struct tagEMREXTFLOODFILL *PEMREXTFLOODFILL;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE *PEMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYLINETO16;
typedef struct tagEMRPOLYPOLYLINE *PEMRPOLYPOLYLINE;
typedef struct tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA *PEMRPOLYTEXTOUTW;
typedef struct tagEMRSELECTOBJECT *PEMRSELECTOBJECT;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETTEXTALIGN;
typedef struct tagEMRSETTEXTCOLOR *PEMRSETTEXTCOLOR;
typedef struct _PERF_OBJECT_TYPE PERF_OBJECT_TYPE;
typedef struct _GENERIC_MAPPING *PGENERIC_MAPPING;
typedef struct _GROUP_INFO_1002 *PGROUP_INFO_1002;
typedef struct _GROUP_INFO_1005 *PGROUP_INFO_1005;
typedef struct _IMAGEHLP_MODULE *PIMAGEHLP_MODULE;
typedef struct _IMAGEHLP_SYMBOL *PIMAGEHLP_SYMBOL;
typedef struct tagLOCALESIGNATURE *PLOCALESIGNATURE;
typedef struct tagMCI_BREAK_PARMS *PMCI_BREAK_PARMS;
typedef struct tagMCI_LOAD_PARMSA *PMCI_LOAD_PARMSA;
typedef struct tagMCI_LOAD_PARMSW *PMCI_LOAD_PARMSW;
typedef struct tagMCI_OPEN_PARMSA *PMCI_OPEN_PARMSA;
typedef struct tagMCI_OPEN_PARMSW *PMCI_OPEN_PARMSW;
typedef struct tagMCI_SAVE_PARMSA *PMCI_SAVE_PARMSA;
typedef struct tagMCI_SAVE_PARMSW *PMCI_SAVE_PARMSW;
typedef struct _MONITOR_INFO_1A *PMONITOR_INFO_1A;
typedef struct _MONITOR_INFO_1W *PMONITOR_INFO_1W;
typedef struct _MONITOR_INFO_2A *PMONITOR_INFO_2A;
typedef struct _MONITOR_INFO_2W *PMONITOR_INFO_2W;
typedef struct _NETLOGON_INFO_1 *PNETLOGON_INFO_1;
typedef struct _NETLOGON_INFO_2 *PNETLOGON_INFO_2;
typedef struct _NETLOGON_INFO_3 *PNETLOGON_INFO_3;
typedef struct _NOTIFYICONDATAA *PNOTIFYICONDATAA;
typedef struct _NOTIFYICONDATAW *PNOTIFYICONDATAW;
typedef struct tagOLEUIEDITLINKSA *POLEUIEDITLINKSA;
typedef struct tagOLEUIEDITLINKSW *POLEUIEDITLINKSW;
typedef struct tagOLEUIGNRLPROPSA *POLEUIGNRLPROPSA;
typedef struct tagOLEUIGNRLPROPSW *POLEUIGNRLPROPSW;
typedef struct tagOLEUILINKPROPSA *POLEUILINKPROPSA;
typedef struct tagOLEUILINKPROPSW *POLEUILINKPROPSW;
typedef struct tagOLEUIVIEWPROPSA *POLEUIVIEWPROPSA;
typedef struct tagOLEUIVIEWPROPSW *POLEUIVIEWPROPSW;
typedef struct _PERF_DATA_BLOCK *PPERF_DATA_BLOCK;
typedef struct _PRINTER_INFO_1A *PPRINTER_INFO_1A;
typedef struct _PRINTER_INFO_1W *PPRINTER_INFO_1W;
typedef struct _PRINTER_INFO_2A *PPRINTER_INFO_2A;
typedef struct _PRINTER_INFO_2W *PPRINTER_INFO_2W;
typedef struct _PRINTER_INFO_4A *PPRINTER_INFO_4A;
typedef struct _PRINTER_INFO_4W *PPRINTER_INFO_4W;
typedef struct _PRINTER_INFO_5A *PPRINTER_INFO_5A;
typedef struct _PRINTER_INFO_5W *PPRINTER_INFO_5W;
typedef struct tagPROCESSENTRY32W *PPROCESSENTRY32W;
typedef struct _REASSIGN_BLOCKS *PREASSIGN_BLOCKS;
typedef struct _PRINT_OTHER_INFO PRINT_OTHER_INFO;
typedef struct _PROPSHEETHEADERA PROPSHEETHEADERA;
typedef struct _PROPSHEETHEADERW PROPSHEETHEADERW;
typedef struct _SERVER_INFO_100 *PSERVER_INFO_100;
typedef struct _SERVER_INFO_101 *PSERVER_INFO_101;
typedef struct _SERVER_INFO_102 *PSERVER_INFO_102;
typedef struct _SERVER_INFO_402 *PSERVER_INFO_402;
typedef struct _SERVER_INFO_403 *PSERVER_INFO_403;
typedef struct _SERVER_INFO_502 *PSERVER_INFO_502;
typedef struct _SERVER_INFO_503 *PSERVER_INFO_503;
typedef struct _SERVER_INFO_598 *PSERVER_INFO_598;
typedef struct _SERVER_INFO_599 *PSERVER_INFO_599;
typedef struct _SESSION_INFO_10 *PSESSION_INFO_10;
typedef struct _SHARE_INFO_1004 *PSHARE_INFO_1004;
typedef struct _SHARE_INFO_1006 *PSHARE_INFO_1006;
typedef struct _SHARE_INFO_1501 *PSHARE_INFO_1501;
typedef struct _USER_OTHER_INFO *PUSER_OTHER_INFO;
typedef struct _VTableProvStruc *PVTableProvStruc;
typedef struct _WINDOWPLACEMENT *PWINDOWPLACEMENT;
typedef struct _WKSTA_INFO_1010 *PWKSTA_INFO_1010;
typedef struct _WKSTA_INFO_1011 *PWKSTA_INFO_1011;
typedef struct _WKSTA_INFO_1012 *PWKSTA_INFO_1012;
typedef struct _WKSTA_INFO_1013 *PWKSTA_INFO_1013;
typedef struct _WKSTA_INFO_1018 *PWKSTA_INFO_1018;
typedef struct _WKSTA_INFO_1023 *PWKSTA_INFO_1023;
typedef struct _WKSTA_INFO_1027 *PWKSTA_INFO_1027;
typedef struct _WKSTA_INFO_1028 *PWKSTA_INFO_1028;
typedef struct _WKSTA_INFO_1032 *PWKSTA_INFO_1032;
typedef struct _WKSTA_INFO_1033 *PWKSTA_INFO_1033;
typedef struct _WKSTA_INFO_1041 *PWKSTA_INFO_1041;
typedef struct _WKSTA_INFO_1042 *PWKSTA_INFO_1042;
typedef struct _WKSTA_INFO_1043 *PWKSTA_INFO_1043;
typedef struct _WKSTA_INFO_1044 *PWKSTA_INFO_1044;
typedef struct _WKSTA_INFO_1045 *PWKSTA_INFO_1045;
typedef struct _WKSTA_INFO_1046 *PWKSTA_INFO_1046;
typedef struct _WKSTA_INFO_1047 *PWKSTA_INFO_1047;
typedef struct _WKSTA_INFO_1048 *PWKSTA_INFO_1048;
typedef struct _WKSTA_INFO_1049 *PWKSTA_INFO_1049;
typedef struct _WKSTA_INFO_1050 *PWKSTA_INFO_1050;
typedef struct _WKSTA_INFO_1051 *PWKSTA_INFO_1051;
typedef struct _WKSTA_INFO_1052 *PWKSTA_INFO_1052;
typedef struct _WKSTA_INFO_1053 *PWKSTA_INFO_1053;
typedef struct _WKSTA_INFO_1054 *PWKSTA_INFO_1054;
typedef struct _WKSTA_INFO_1055 *PWKSTA_INFO_1055;
typedef struct _WKSTA_INFO_1056 *PWKSTA_INFO_1056;
typedef struct _WKSTA_INFO_1057 *PWKSTA_INFO_1057;
typedef struct _WKSTA_INFO_1058 *PWKSTA_INFO_1058;
typedef struct _WKSTA_INFO_1059 *PWKSTA_INFO_1059;
typedef struct _WKSTA_INFO_1060 *PWKSTA_INFO_1060;
typedef struct _WKSTA_INFO_1061 *PWKSTA_INFO_1061;
typedef struct _WKSTA_INFO_1062 *PWKSTA_INFO_1062;
typedef struct _WSANSClassInfoA *PWSANSCLASSINFOA;
typedef struct _WSANSClassInfoW *PWSANSCLASSINFOW;
typedef struct _REPL_EDIR_INFO_0 REPL_EDIR_INFO_0;
typedef struct _REPL_EDIR_INFO_1 REPL_EDIR_INFO_1;
typedef struct _REPL_EDIR_INFO_2 REPL_EDIR_INFO_2;
typedef struct _REPL_IDIR_INFO_0 REPL_IDIR_INFO_0;
typedef struct _REPL_IDIR_INFO_1 REPL_IDIR_INFO_1;
typedef void *RPC_AUTHZ_HANDLE;
typedef void *RPC_CLIENT_ALLOC(unsigned int);
typedef struct _3EC5757393EE7828D79CED73ACE876F0 RPC_IF_ID_VECTOR;
typedef struct _RPC_SECURITY_QOS RPC_SECURITY_QOS;
typedef struct _AD47B7B6770F26FF00FF8EF46A9765CE RPC_STATS_VECTOR;
typedef struct _wireSAFEARR_DISPATCH SAFEARR_DISPATCH;
typedef struct _SERVER_INFO_1005 SERVER_INFO_1005;
typedef struct _SERVER_INFO_1010 SERVER_INFO_1010;
typedef struct _SERVER_INFO_1016 SERVER_INFO_1016;
typedef struct _SERVER_INFO_1017 SERVER_INFO_1017;
typedef struct _SERVER_INFO_1018 SERVER_INFO_1018;
typedef struct _SERVER_INFO_1107 SERVER_INFO_1107;
typedef struct _SERVER_INFO_1501 SERVER_INFO_1501;
typedef struct _SERVER_INFO_1502 SERVER_INFO_1502;
typedef struct _SERVER_INFO_1503 SERVER_INFO_1503;
typedef struct _SERVER_INFO_1506 SERVER_INFO_1506;
typedef struct _SERVER_INFO_1509 SERVER_INFO_1509;
typedef struct _SERVER_INFO_1510 SERVER_INFO_1510;
typedef struct _SERVER_INFO_1511 SERVER_INFO_1511;
typedef struct _SERVER_INFO_1512 SERVER_INFO_1512;
typedef struct _SERVER_INFO_1513 SERVER_INFO_1513;
typedef struct _SERVER_INFO_1514 SERVER_INFO_1514;
typedef struct _SERVER_INFO_1515 SERVER_INFO_1515;
typedef struct _SERVER_INFO_1516 SERVER_INFO_1516;
typedef struct _SERVER_INFO_1518 SERVER_INFO_1518;
typedef struct _SERVER_INFO_1520 SERVER_INFO_1520;
typedef struct _SERVER_INFO_1521 SERVER_INFO_1521;
typedef struct _SERVER_INFO_1522 SERVER_INFO_1522;
typedef struct _SERVER_INFO_1523 SERVER_INFO_1523;
typedef struct _SERVER_INFO_1524 SERVER_INFO_1524;
typedef struct _SERVER_INFO_1525 SERVER_INFO_1525;
typedef struct _SERVER_INFO_1528 SERVER_INFO_1528;
typedef struct _SERVER_INFO_1529 SERVER_INFO_1529;
typedef struct _SERVER_INFO_1530 SERVER_INFO_1530;
typedef struct _SERVER_INFO_1533 SERVER_INFO_1533;
typedef struct _SERVER_INFO_1534 SERVER_INFO_1534;
typedef struct _SERVER_INFO_1535 SERVER_INFO_1535;
typedef struct _SERVER_INFO_1536 SERVER_INFO_1536;
typedef struct _SERVER_INFO_1537 SERVER_INFO_1537;
typedef struct _SERVER_INFO_1538 SERVER_INFO_1538;
typedef struct _SERVER_INFO_1539 SERVER_INFO_1539;
typedef struct _SERVER_INFO_1540 SERVER_INFO_1540;
typedef struct _SERVER_INFO_1541 SERVER_INFO_1541;
typedef struct _SERVER_INFO_1542 SERVER_INFO_1542;
typedef struct _SERVER_INFO_1543 SERVER_INFO_1543;
typedef struct _SERVER_INFO_1544 SERVER_INFO_1544;
typedef struct _SERVER_INFO_1545 SERVER_INFO_1545;
typedef struct _SERVER_INFO_1546 SERVER_INFO_1546;
typedef struct _SERVER_INFO_1547 SERVER_INFO_1547;
typedef struct _SERVER_INFO_1548 SERVER_INFO_1548;
typedef struct _SERVER_INFO_1549 SERVER_INFO_1549;
typedef struct _SERVER_INFO_1550 SERVER_INFO_1550;
typedef struct _SERVER_INFO_1552 SERVER_INFO_1552;
typedef struct _SERVER_INFO_1553 SERVER_INFO_1553;
typedef struct _SERVER_INFO_1554 SERVER_INFO_1554;
typedef struct _SERVER_INFO_1555 SERVER_INFO_1555;
typedef struct _SERVER_INFO_1556 SERVER_INFO_1556;
typedef struct _SERVER_INFO_1557 SERVER_INFO_1557;
typedef struct _SERVER_INFO_1560 SERVER_INFO_1560;
typedef struct _SERVER_INFO_1561 SERVER_INFO_1561;
typedef struct _SERVER_INFO_1562 SERVER_INFO_1562;
typedef struct _SERVER_INFO_1563 SERVER_INFO_1563;
typedef struct _SERVER_INFO_1564 SERVER_INFO_1564;
typedef struct _SERVER_INFO_1565 SERVER_INFO_1565;
typedef struct _SERVER_INFO_1566 SERVER_INFO_1566;
typedef struct _SERVER_INFO_1567 SERVER_INFO_1567;
typedef struct _SERVER_INFO_1568 SERVER_INFO_1568;
typedef struct _SERVER_INFO_1569 SERVER_INFO_1569;
typedef struct _SERVER_INFO_1570 SERVER_INFO_1570;
typedef struct _SERVER_INFO_1571 SERVER_INFO_1571;
typedef struct _SERVER_INFO_1572 SERVER_INFO_1572;
typedef struct _SERVER_INFO_1573 SERVER_INFO_1573;
typedef struct _SERVER_INFO_1574 SERVER_INFO_1574;
typedef struct _SERVER_INFO_1575 SERVER_INFO_1575;
typedef struct _SERVER_INFO_1576 SERVER_INFO_1576;
typedef struct _SERVER_INFO_1577 SERVER_INFO_1577;
typedef struct _SERVER_INFO_1578 SERVER_INFO_1578;
typedef struct _SERVER_INFO_1579 SERVER_INFO_1579;
typedef struct _SERVER_INFO_1580 SERVER_INFO_1580;
typedef struct _SERVER_INFO_1581 SERVER_INFO_1581;
typedef struct _SERVER_INFO_1582 SERVER_INFO_1582;
typedef struct _SERVER_INFO_1583 SERVER_INFO_1583;
typedef struct _SERVER_INFO_1584 SERVER_INFO_1584;
typedef struct _SERVER_INFO_1585 SERVER_INFO_1585;
typedef struct _SERVER_INFO_1586 SERVER_INFO_1586;
typedef struct _SESSION_INFO_502 SESSION_INFO_502;
typedef struct _TAPE_WRITE_MARKS TAPE_WRITE_MARKS;
typedef struct _TIME_OF_DAY_INFO TIME_OF_DAY_INFO;
typedef struct _TOKEN_PRIVILEGES TOKEN_PRIVILEGES;
typedef struct _TOKEN_STATISTICS TOKEN_STATISTICS;
typedef struct _TV_INSERTSTRUCTA TV_INSERTSTRUCTA;
typedef struct _TV_INSERTSTRUCTW TV_INSERTSTRUCTW;
typedef struct tagVS_FIXEDFILEINFO VS_FIXEDFILEINFO;
typedef struct _WIN32_FIND_DATAA WIN32_FIND_DATAA;
typedef struct _WIN32_FIND_DATAW WIN32_FIND_DATAW;
typedef struct _WSANETWORKEVENTS WSANETWORKEVENTS;
typedef struct _WSAPROTOCOLCHAIN WSAPROTOCOLCHAIN;
enum __priority_which {PRIO_PROCESS = 0x0,PRIO_PGRP = 0x1,PRIO_USER = 0x2,};
typedef union _738A8E8AC168E5B4B1A53622C9D7048F pthread_rwlock_t;
enum tagOLEGETMONIKER {OLEGETMONIKER_ONLYIFTHERE = 0x1,OLEGETMONIKER_FORCEASSIGN = 0x2,OLEGETMONIKER_UNASSIGN = 0x3,OLEGETMONIKER_TEMPFORUSER = 0x4,};
typedef struct _AE_RESACCESSREJ AE_RESACCESSREJ;
typedef struct _CHARDEVQ_INFO_0 CHARDEVQ_INFO_0;
typedef struct _CHARDEVQ_INFO_1 CHARDEVQ_INFO_1;
typedef struct tagCOLORADJUSTMENT COLORADJUSTMENT;
typedef struct tagCOMPOSITIONFORM COMPOSITIONFORM;
typedef struct _947C6FA139885FA2B0DE7F2A3FDD942C DLGITEMTEMPLATE;
typedef struct _DSKTLSYSTEMTIME DSKTLSYSTEMTIME;
typedef struct tagEMRSELECTOBJECT EMRDELETEOBJECT;
typedef struct tagEMREXTCREATEPEN EMREXTCREATEPEN;
typedef struct tagEMREXTFLOODFILL EMREXTFLOODFILL;
typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIER16;
typedef struct tagEMRPOLYLINE EMRPOLYBEZIERTO;
typedef struct tagEMRPOLYLINE16 EMRPOLYLINETO16;
typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYLINE;
typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTA;
typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTW;
typedef struct tagEMRSELECTOBJECT EMRSELECTOBJECT;
typedef struct tagEMRSELECTCLIPPATH EMRSETTEXTALIGN;
typedef struct tagEMRSETTEXTCOLOR EMRSETTEXTCOLOR;
typedef struct _ensaveclipboard ENSAVECLIPBOARD;
typedef struct _GENERIC_MAPPING GENERIC_MAPPING;
typedef struct _GROUP_INFO_1002 GROUP_INFO_1002;
typedef struct _GROUP_INFO_1005 GROUP_INFO_1005;
struct HWINEVENTHOOK__ {int i;};
struct IClassActivator {struct IClassActivatorVtbl *lpVtbl;};
struct IClientSecurity {struct IClientSecurityVtbl *lpVtbl;};
struct ICommDlgBrowser {struct ICommDlgBrowserVtbl *lpVtbl;};
struct IFileViewerSite {struct IFileViewerSiteVtbl *lpVtbl;};
typedef struct _IMAGEHLP_MODULE IMAGEHLP_MODULE;
typedef struct _IMAGEHLP_SYMBOL IMAGEHLP_SYMBOL;
struct IOleControlSite {struct IOleControlSiteVtbl *lpVtbl;};
struct IOleUILinkInfoA {struct IOleUILinkInfoAVtbl *lpVtbl;};
struct IOleUILinkInfoW {struct IOleUILinkInfoWVtbl *lpVtbl;};
struct IPersistStorage {struct IPersistStorageVtbl *lpVtbl;};
struct IProgressNotify {struct IProgressNotifyVtbl *lpVtbl;};
struct IRpcProxyBuffer {struct IRpcProxyBufferVtbl *lpVtbl;};
struct IRunnableObject {struct IRunnableObjectVtbl *lpVtbl;};
struct IServerSecurity {struct IServerSecurityVtbl *lpVtbl;};
struct IStdMarshalInfo {struct IStdMarshalInfoVtbl *lpVtbl;};
typedef struct tagLOCALESIGNATURE LOCALESIGNATURE;
typedef struct _ACCESS_INFO_0 *LPACCESS_INFO_0;
typedef struct _ACCESS_INFO_1 *LPACCESS_INFO_1;
typedef struct _AE_SESSLOGOFF *LPAE_SESSLOGOFF;
typedef struct tagANIMATIONINFO *LPANIMATIONINFO;
typedef struct tagCANDIDATEFORM *LPCANDIDATEFORM;
typedef struct tagCANDIDATELIST *LPCANDIDATELIST;
typedef struct IClassFactory2 *LPCLASSFACTORY2;
typedef struct _CONFIG_INFO_0 *LPCONFIG_INFO_0;
typedef struct ICreateTypeLib *LPCREATETYPELIB;
typedef struct tagDEBUGHOOKINFO *LPDEBUGHOOKINFO;
typedef struct tagDRVCONFIGINFO *LPDRVCONFIGINFO;
typedef struct tagENHMETAHEADER *LPENHMETAHEADER;
typedef struct tagENHMETARECORD *LPENHMETARECORD;
typedef struct IEnumFORMATETC *LPENUMFORMATETC;
typedef struct IFillLockBytes *LPFILLLOCKBYTES;
typedef struct tagFONTSIGNATURE *LPFONTSIGNATURE;
typedef struct _HANDLE_INFO_1 *LPHANDLE_INFO_1;
typedef struct tagHIGHCONTRASTA *LPHIGHCONTRASTA;
typedef struct tagHIGHCONTRASTW *LPHIGHCONTRASTW;
typedef struct tagINTERFACEDATA *LPINTERFACEDATA;
typedef struct tagINTERFACEINFO *LPINTERFACEINFO;
typedef struct ILayoutStorage *LPLAYOUTSTORAGE;
typedef struct tagMCI_SET_PARMS *LPMCI_SET_PARMS;
typedef struct tagMENUITEMINFOA *LPMENUITEMINFOA;
typedef struct tagMENUITEMINFOW *LPMENUITEMINFOW;
typedef void *LPMENUTEMPLATEA;
typedef void *LPMENUTEMPLATEW;
typedef struct IMessageFilter *LPMESSAGEFILTER;
typedef struct midiproptempo_tag *LPMIDIPROPTEMPO;
typedef struct tagMIXERCONTROLA *LPMIXERCONTROLA;
typedef struct tagMIXERCONTROLW *LPMIXERCONTROLW;
typedef struct _MODEMSETTINGS *LPMODEMSETTINGS;
typedef struct tagMODULEENTRY32 *LPMODULEENTRY32;
typedef struct _BC4A2AE7528CDE26EA3193F07B7FB715 *LPMSGBOXPARAMSA;
typedef struct _86C0719967FA1585F934A358B3D4F44D *LPMSGBOXPARAMSW;
typedef struct tagMULTIKEYHELPA *LPMULTIKEYHELPA;
typedef struct tagMULTIKEYHELPW *LPMULTIKEYHELPW;
typedef struct _NETINFOSTRUCT *LPNETINFOSTRUCT;
typedef struct IOleClientSite *LPOLECLIENTSITE;
typedef struct _OLESTREAMVTBL *LPOLESTREAMVTBL;
typedef struct tagOLEUICONVERTA *LPOLEUICONVERTA;
typedef struct tagOLEUICONVERTW *LPOLEUICONVERTW;
typedef IOleUIObjInfoA *LPOLEUIOBJINFOA;
typedef IOleUIObjInfoW *LPOLEUIOBJINFOW;
typedef struct tagOFNA *LPOPENFILENAMEA;
typedef struct tagOFNW *LPOPENFILENAMEW;
typedef struct tagPSDA *LPPAGESETUPDLGA;
typedef struct tagPSDW *LPPAGESETUPDLGW;
typedef struct pcmwaveformat_tag *LPPCMWAVEFORMAT;
typedef IPersistFolder *LPPERSISTFOLDER;
typedef struct IPersistMemory *LPPERSISTMEMORY;
typedef struct IPersistStream *LPPERSISTSTREAM;
typedef struct IPropertyPage2 *LPPROPERTYPAGE2;
typedef struct tagREGISTERWORDA *LPREGISTERWORDA;
typedef struct tagREGISTERWORDW *LPREGISTERWORDW;
typedef struct IRpcStubBuffer *LPRPCSTUBBUFFER;
typedef struct _STAT_SERVER_0 *LPSTAT_SERVER_0;
typedef struct tagTHREADENTRY32 *LPTHREADENTRY32;
typedef struct _OVERLAPPED *LPWSAOVERLAPPED;
enum MACRO_ALTERNATE {ALTERNATE = 1,WINDING = 2,};
enum MACRO_BIGENDIAN {BIGENDIAN = 0x0,LITTLEENDIAN = 0x1,};
enum MACRO_BITSPIXEL {BITSPIXEL = 12,};
enum MACRO_BLACKNESS {BLACKNESS = 0x42,};
enum MACRO_BROADCAST {BROADCAST_QUERY_DENY = 1112363332,};
enum MACRO_BS_3STATE {BS_3STATE = 5,BS_AUTO3STATE = 6,BS_AUTOCHECKBOX = 3,BS_AUTORADIOBUTTON = 9,BS_BITMAP = 128,BS_BOTTOM = 2048,BS_CENTER = 768,BS_CHECKBOX = 2,BS_DEFPUSHBUTTON = 1,BS_GROUPBOX = 7,BS_ICON = 64,BS_LEFT = 256,BS_LEFTTEXT = 32,BS_MULTILINE = 8192,BS_NOTIFY = 16384,BS_OWNERDRAW = 11,BS_PUSHBUTTON = 0,BS_PUSHLIKE = 4096,BS_RADIOBUTTON = 4,BS_RIGHT = 512,BS_RIGHTBUTTON = 32,BS_TEXT = 0,BS_TOP = 1024,BS_USERBUTTON = 8,BS_VCENTER = 3072,BS_FLAT = 32768,};
enum MACRO_CCHCCDESC {CCHCCDESC = 32,CCHCCTEXT = 256,};
enum MACRO_CFSEPCHAR {CFSEPCHAR = 43,};
enum MACRO_CF_ACCEPT {CF_ACCEPT = 0x0,CF_REJECT = 0x1,CF_DEFER = 0x2,};
enum MACRO_CMIC_MASK {CMIC_MASK_MODAL = 0x80000000,};
enum MACRO_CONNECT_E {CONNECT_E_FIRST = 0x80040200,CONNECT_E_LAST = 0x8004020F,CONNECT_S_FIRST = 0x40200,CONNECT_S_LAST = 0x4020F,CONNECT_E_NOCONNECTION = 0x80040200,CONNECT_E_ADVISELIMIT = 0x80040201,CONNECT_E_CANNOTCONNECT = 0x80040202,CONNECT_E_OVERRIDDEN = 0x80040203,};
enum MACRO_CRYPT_KEY {CRYPT_KEY_LEN = 7,CRYPT_TXT_LEN = 8,};
enum MACRO_CURVECAPS {CURVECAPS = 28,};
enum MACRO_DC_ACTIVE {DC_ACTIVE = 1,DC_SMALLCAP = 2,DC_ICON = 4,DC_TEXT = 8,DC_INBUTTON = 16,};
enum MACRO_DMCOLLATE {DMCOLLATE_FALSE = 0,DMCOLLATE_TRUE = 1,};
enum MACRO_DRAFTMODE {DRAFTMODE = 7,QUERYESCSUPPORT = 8,};
enum MACRO_DSTINVERT {DSTINVERT = 0x550009,};
enum MACRO_DT_BOTTOM {DT_BOTTOM = 8,DT_CALCRECT = 1024,DT_CENTER = 1,DT_EDITCONTROL = 8192,DT_END_ELLIPSIS = 32768,DT_PATH_ELLIPSIS = 16384,DT_WORD_ELLIPSIS = 262144,DT_EXPANDTABS = 64,DT_EXTERNALLEADING = 512,DT_LEFT = 0,DT_MODIFYSTRING = 65536,DT_NOCLIP = 256,DT_NOPREFIX = 2048,DT_RIGHT = 2,DT_RTLREADING = 131072,DT_SINGLELINE = 32,DT_TABSTOP = 128,DT_TOP = 0,DT_VCENTER = 4,DT_WORDBREAK = 16,DT_INTERNAL = 4096,};
enum MACRO_DUPLICATE {DUPLICATE_CLOSE_SOURCE = 1,DUPLICATE_SAME_ACCESS = 2,};
enum MACRO_ENCRYPTED {ENCRYPTED_PWLEN = 16,SESSION_PWLEN = 24,};
enum MACRO_EVENT_ALL {EVENT_ALL_ACCESS = 0x1F0003,EVENT_MODIFY_STATE = 0x2,};
enum MACRO_EXCEPTION {EXCEPTION_NONCONTINUABLE = 1,EXCEPTION_MAXIMUM_PARAMETERS = 15,};
enum MACRO_FILE_CASE {FILE_CASE_SENSITIVE_SEARCH = 1,FILE_CASE_PRESERVED_NAMES = 2,FILE_UNICODE_ON_DISK = 4,FILE_PERSISTENT_ACLS = 8,FILE_FILE_COMPRESSION = 16,FILE_VOLUME_IS_COMPRESSED = 32768,};
enum MACRO_FILE_FLAG {FILE_FLAG_WRITE_THROUGH = 0x80000000,FILE_FLAG_OVERLAPPED = 0x40000000,FILE_FLAG_NO_BUFFERING = 0x20000000,FILE_FLAG_RANDOM_ACCESS = 0x10000000,FILE_FLAG_SEQUENTIAL_SCAN = 0x8000000,FILE_FLAG_DELETE_ON_CLOSE = 0x4000000,FILE_FLAG_BACKUP_SEMANTICS = 0x2000000,FILE_FLAG_POSIX_SEMANTICS = 0x1000000,};
enum MACRO_FILE_TYPE {FILE_TYPE_UNKNOWN = 0,FILE_TYPE_DISK = 1,FILE_TYPE_CHAR = 2,FILE_TYPE_PIPE = 3,FILE_TYPE_REMOTE = 32768,};
enum MACRO_FNOINVERT {FNOINVERT = 2,FSHIFT = 4,};
enum MACRO_FS_LATIN1 {FS_LATIN1 = 1,FS_LATIN2 = 2,FS_CYRILLIC = 4,FS_GREEK = 8,FS_TURKISH = 16,FS_HEBREW = 32,FS_ARABIC = 64,FS_BALTIC = 128,FS_THAI = 65536,FS_JISJAPAN = 131072,FS_CHINESESIMP = 262144,FS_WANSUNG = 524288,FS_CHINESETRAD = 1048576,FS_JOHAB = 2097152,FS_SYMBOL = -2147483648,};
enum MACRO_GROUP_ALL {GROUP_ALL_PARMNUM = 0,GROUP_NAME_PARMNUM = 1,GROUP_COMMENT_PARMNUM = 2,GROUP_ATTRIBUTES_PARMNUM = 3,GROUP_ALL_INFOLEVEL = 1000,GROUP_NAME_INFOLEVEL = 1001,GROUP_COMMENT_INFOLEVEL = 1002,GROUP_ATTRIBUTES_INFOLEVEL = 1003,};
enum MACRO_GROUP_OBJ {GROUP_OBJ = 0x4,};
enum MACRO_HINSTANCE {HINSTANCE_ERROR = 32,};
enum MACRO_HINT_MASK {UPPER_HINT_MASK = 0xFF00,LOWER_HINT_MASK = 0xFF,UPPER_GET_HINT_MASK = 0xFF00000,LOWER_GET_HINT_MASK = 0xFF00,};
enum MACRO_HTHSCROLL {HTHSCROLL = 6,};
enum MACRO_HTNOWHERE {HTNOWHERE = 0,HTCLIENT = 1,HTCAPTION = 2,};
enum MACRO_HTSYSMENU {HTSYSMENU = 3,HTGROWBOX = 4,};
enum MACRO_HTTOPLEFT {HTTOPLEFT = 13,};
enum MACRO_HTVSCROLL {HTVSCROLL = 7,HTMINBUTTON = 8,};
enum MACRO_ID_BROWSE {ID_BROWSE_CHANGEICON = 1,ID_BROWSE_INSERTFILE = 2,ID_BROWSE_ADDCONTROL = 3,ID_BROWSE_CHANGESOURCE = 4,};
enum MACRO_IME_CMODE {IME_CMODE_ALPHANUMERIC = 0,IME_CMODE_NATIVE = 1,IME_CMODE_CHINESE = 1,IME_CMODE_HANGEUL = 1,IME_CMODE_HANGUL = 1,IME_CMODE_JAPANESE = 1,IME_CMODE_KATAKANA = 2,IME_CMODE_LANGUAGE = 3,IME_CMODE_FULLSHAPE = 8,IME_CMODE_ROMAN = 16,IME_CMODE_CHARCODE = 32,IME_CMODE_HANJACONVERT = 64,IME_CMODE_SOFTKBD = 128,IME_CMODE_NOCONVERSION = 256,IME_CMODE_EUDC = 512,IME_CMODE_SYMBOL = 1024,IME_CMODE_FIXED = 2048,IME_SMODE_NONE = 0,IME_SMODE_PLAURALCLAUSE = 1,IME_SMODE_SINGLECONVERT = 2,IME_SMODE_AUTOMATIC = 4,IME_SMODE_PHRASEPREDICT = 8,IME_CAND_UNKNOWN = 0,IME_CAND_READ = 1,IME_CAND_CODE = 2,IME_CAND_MEANING = 3,IME_CAND_RADICAL = 4,IME_CAND_STROKE = 5,};
enum MACRO_IN_CLASSD {IN_CLASSD_NET = 0xF0000000,IN_CLASSD_NSHIFT = 0x1C,IN_CLASSD_HOST = 0xFFFFFFF,};
enum MACRO_KEYEVENTF {KEYEVENTF_EXTENDEDKEY = 1,KEYEVENTF_KEYUP = 2,};
enum MACRO_MAXUIDLEN {MAXUIDLEN = 64,};
enum MACRO_MAX_CACHE {MAX_CACHE_ENTRY_INFO_SIZE = 4096,};
enum MACRO_MCI_FIRST {MCI_FIRST = 2048,MCI_OPEN = 2051,MCI_CLOSE = 2052,MCI_ESCAPE = 2053,MCI_PLAY = 2054,MCI_SEEK = 2055,MCI_STOP = 2056,MCI_PAUSE = 2057,MCI_INFO = 2058,MCI_GETDEVCAPS = 2059,MCI_SPIN = 2060,MCI_SET = 2061,MCI_STEP = 2062,MCI_RECORD = 2063,MCI_SYSINFO = 2064,MCI_BREAK = 2065,MCI_SAVE = 2067,MCI_STATUS = 2068,MCI_CUE = 2096,MCI_REALIZE = 2112,MCI_WINDOW = 2113,MCI_PUT = 2114,MCI_WHERE = 2115,MCI_FREEZE = 2116,MCI_UNFREEZE = 2117,MCI_LOAD = 2128,MCI_CUT = 2129,MCI_COPY = 2130,MCI_PASTE = 2131,MCI_UPDATE = 2132,MCI_RESUME = 2133,MCI_DELETE = 2134,MCI_USER_MESSAGES = 3072,MCI_LAST = 4095,MCI_DEVTYPE_VCR = 513,MCI_DEVTYPE_VIDEODISC = 514,MCI_DEVTYPE_OVERLAY = 515,MCI_DEVTYPE_CD_AUDIO = 516,MCI_DEVTYPE_DAT = 517,MCI_DEVTYPE_SCANNER = 518,MCI_DEVTYPE_ANIMATION = 519,MCI_DEVTYPE_DIGITAL_VIDEO = 520,MCI_DEVTYPE_OTHER = 521,MCI_DEVTYPE_WAVEFORM_AUDIO = 522,MCI_DEVTYPE_SEQUENCER = 523,MCI_DEVTYPE_FIRST = 513,MCI_DEVTYPE_LAST = 523,MCI_DEVTYPE_FIRST_USER = 4096,MCI_MODE_NOT_READY = 524,MCI_MODE_STOP = 525,MCI_MODE_PLAY = 526,MCI_MODE_RECORD = 527,MCI_MODE_SEEK = 528,MCI_MODE_PAUSE = 529,MCI_MODE_OPEN = 530,MCI_FORMAT_MILLISECONDS = 0,MCI_FORMAT_HMS = 1,MCI_FORMAT_MSF = 2,MCI_FORMAT_FRAMES = 3,MCI_FORMAT_SMPTE_24 = 4,MCI_FORMAT_SMPTE_25 = 5,MCI_FORMAT_SMPTE_30 = 6,MCI_FORMAT_SMPTE_30DROP = 7,MCI_FORMAT_BYTES = 8,MCI_FORMAT_SAMPLES = 9,MCI_FORMAT_TMSF = 10,MCI_NOTIFY_SUCCESSFUL = 1,MCI_NOTIFY_SUPERSEDED = 2,MCI_NOTIFY_ABORTED = 4,MCI_NOTIFY_FAILURE = 8,MCI_NOTIFY = 1,MCI_WAIT = 2,MCI_FROM = 4,MCI_TO = 8,MCI_TRACK = 16,MCI_OPEN_SHAREABLE = 256,MCI_OPEN_ELEMENT = 512,MCI_OPEN_ALIAS = 1024,MCI_OPEN_ELEMENT_ID = 2048,MCI_OPEN_TYPE_ID = 4096,MCI_OPEN_TYPE = 8192,MCI_SEEK_TO_START = 256,MCI_SEEK_TO_END = 512,MCI_STATUS_ITEM = 256,MCI_STATUS_START = 512,MCI_STATUS_LENGTH = 1,MCI_STATUS_POSITION = 2,MCI_STATUS_NUMBER_OF_TRACKS = 3,MCI_STATUS_MODE = 4,MCI_STATUS_MEDIA_PRESENT = 5,MCI_STATUS_TIME_FORMAT = 6,MCI_STATUS_READY = 7,MCI_STATUS_CURRENT_TRACK = 8,MCI_INFO_PRODUCT = 256,MCI_INFO_FILE = 512,MCI_INFO_MEDIA_UPC = 1024,MCI_INFO_MEDIA_IDENTITY = 2048,MCI_INFO_NAME = 4096,MCI_INFO_COPYRIGHT = 8192,MCI_GETDEVCAPS_ITEM = 256,MCI_GETDEVCAPS_CAN_RECORD = 1,MCI_GETDEVCAPS_HAS_AUDIO = 2,MCI_GETDEVCAPS_HAS_VIDEO = 3,MCI_GETDEVCAPS_DEVICE_TYPE = 4,MCI_GETDEVCAPS_USES_FILES = 5,MCI_GETDEVCAPS_COMPOUND_DEVICE = 6,MCI_GETDEVCAPS_CAN_EJECT = 7,MCI_GETDEVCAPS_CAN_PLAY = 8,MCI_GETDEVCAPS_CAN_SAVE = 9,MCI_SYSINFO_QUANTITY = 256,MCI_SYSINFO_OPEN = 512,MCI_SYSINFO_NAME = 1024,MCI_SYSINFO_INSTALLNAME = 2048,MCI_SET_DOOR_OPEN = 256,MCI_SET_DOOR_CLOSED = 512,MCI_SET_TIME_FORMAT = 1024,MCI_SET_AUDIO = 2048,MCI_SET_VIDEO = 4096,MCI_SET_ON = 8192,MCI_SET_OFF = 16384,MCI_SET_AUDIO_ALL = 0,MCI_SET_AUDIO_LEFT = 1,MCI_SET_AUDIO_RIGHT = 2,MCI_BREAK_KEY = 256,MCI_BREAK_HWND = 512,MCI_BREAK_OFF = 1024,MCI_RECORD_INSERT = 256,MCI_RECORD_OVERWRITE = 512,MCI_SAVE_FILE = 256,MCI_LOAD_FILE = 256,MCI_VD_MODE_PARK = 1025,MCI_VD_MEDIA_CLV = 1026,MCI_VD_MEDIA_CAV = 1027,MCI_VD_MEDIA_OTHER = 1028,MCI_VD_FORMAT_TRACK = 16385,MCI_VD_PLAY_REVERSE = 65536,MCI_VD_PLAY_FAST = 131072,MCI_VD_PLAY_SPEED = 262144,MCI_VD_PLAY_SCAN = 524288,MCI_VD_PLAY_SLOW = 1048576,MCI_VD_SEEK_REVERSE = 65536,MCI_VD_STATUS_SPEED = 16386,MCI_VD_STATUS_FORWARD = 16387,MCI_VD_STATUS_MEDIA_TYPE = 16388,MCI_VD_STATUS_SIDE = 16389,MCI_VD_STATUS_DISC_SIZE = 16390,MCI_VD_GETDEVCAPS_CLV = 65536,MCI_VD_GETDEVCAPS_CAV = 131072,MCI_VD_SPIN_UP = 65536,MCI_VD_SPIN_DOWN = 131072,MCI_VD_GETDEVCAPS_CAN_REVERSE = 16386,MCI_VD_GETDEVCAPS_FAST_RATE = 16387,MCI_VD_GETDEVCAPS_SLOW_RATE = 16388,MCI_VD_GETDEVCAPS_NORMAL_RATE = 16389,MCI_VD_STEP_FRAMES = 65536,MCI_VD_STEP_REVERSE = 131072,MCI_VD_ESCAPE_STRING = 256,MCI_CDA_STATUS_TYPE_TRACK = 16385,MCI_CDA_TRACK_AUDIO = 1088,MCI_CDA_TRACK_OTHER = 1089,MCI_WAVE_PCM = 1152,MCI_WAVE_MAPPER = 1153,MCI_WAVE_OPEN_BUFFER = 65536,MCI_WAVE_SET_FORMATTAG = 65536,MCI_WAVE_SET_CHANNELS = 131072,MCI_WAVE_SET_SAMPLESPERSEC = 262144,MCI_WAVE_SET_AVGBYTESPERSEC = 524288,MCI_WAVE_SET_BLOCKALIGN = 1048576,MCI_WAVE_SET_BITSPERSAMPLE = 2097152,MCI_WAVE_INPUT = 4194304,MCI_WAVE_OUTPUT = 8388608,MCI_WAVE_STATUS_FORMATTAG = 16385,MCI_WAVE_STATUS_CHANNELS = 16386,MCI_WAVE_STATUS_SAMPLESPERSEC = 16387,MCI_WAVE_STATUS_AVGBYTESPERSEC = 16388,MCI_WAVE_STATUS_BLOCKALIGN = 16389,MCI_WAVE_STATUS_BITSPERSAMPLE = 16390,MCI_WAVE_STATUS_LEVEL = 16391,MCI_WAVE_SET_ANYINPUT = 67108864,MCI_WAVE_SET_ANYOUTPUT = 134217728,MCI_WAVE_GETDEVCAPS_INPUTS = 16385,MCI_WAVE_GETDEVCAPS_OUTPUTS = 16386,MCI_SEQ_DIV_PPQN = 1216,MCI_SEQ_DIV_SMPTE_24 = 1217,MCI_SEQ_DIV_SMPTE_25 = 1218,MCI_SEQ_DIV_SMPTE_30DROP = 1219,MCI_SEQ_DIV_SMPTE_30 = 1220,MCI_SEQ_FORMAT_SONGPTR = 16385,MCI_SEQ_FILE = 16386,MCI_SEQ_MIDI = 16387,MCI_SEQ_SMPTE = 16388,MCI_SEQ_NONE = 65533,MCI_SEQ_MAPPER = 65535,MCI_SEQ_STATUS_TEMPO = 16386,MCI_SEQ_STATUS_PORT = 16387,MCI_SEQ_STATUS_SLAVE = 16391,MCI_SEQ_STATUS_MASTER = 16392,MCI_SEQ_STATUS_OFFSET = 16393,MCI_SEQ_STATUS_DIVTYPE = 16394,MCI_SEQ_STATUS_NAME = 16395,MCI_SEQ_STATUS_COPYRIGHT = 16396,MCI_SEQ_SET_TEMPO = 65536,MCI_SEQ_SET_PORT = 131072,MCI_SEQ_SET_SLAVE = 262144,MCI_SEQ_SET_MASTER = 524288,MCI_SEQ_SET_OFFSET = 16777216,MCI_ANIM_OPEN_WS = 65536,MCI_ANIM_OPEN_PARENT = 131072,MCI_ANIM_OPEN_NOSTATIC = 262144,MCI_ANIM_PLAY_SPEED = 65536,MCI_ANIM_PLAY_REVERSE = 131072,MCI_ANIM_PLAY_FAST = 262144,MCI_ANIM_PLAY_SLOW = 524288,MCI_ANIM_PLAY_SCAN = 1048576,MCI_ANIM_STEP_REVERSE = 65536,MCI_ANIM_STEP_FRAMES = 131072,MCI_ANIM_STATUS_SPEED = 16385,MCI_ANIM_STATUS_FORWARD = 16386,MCI_ANIM_STATUS_HWND = 16387,MCI_ANIM_STATUS_HPAL = 16388,MCI_ANIM_STATUS_STRETCH = 16389,MCI_ANIM_INFO_TEXT = 65536,MCI_ANIM_GETDEVCAPS_CAN_REVERSE = 16385,MCI_ANIM_GETDEVCAPS_FAST_RATE = 16386,MCI_ANIM_GETDEVCAPS_SLOW_RATE = 16387,MCI_ANIM_GETDEVCAPS_NORMAL_RATE = 16388,MCI_ANIM_GETDEVCAPS_PALETTES = 16390,MCI_ANIM_GETDEVCAPS_CAN_STRETCH = 16391,MCI_ANIM_GETDEVCAPS_MAX_WINDOWS = 16392,MCI_ANIM_REALIZE_NORM = 65536,MCI_ANIM_REALIZE_BKGD = 131072,MCI_ANIM_WINDOW_HWND = 65536,MCI_ANIM_WINDOW_STATE = 262144,MCI_ANIM_WINDOW_TEXT = 524288,MCI_ANIM_WINDOW_ENABLE_STRETCH = 1048576,MCI_ANIM_WINDOW_DISABLE_STRETCH = 2097152,MCI_ANIM_RECT = 65536,MCI_ANIM_PUT_SOURCE = 131072,MCI_ANIM_PUT_DESTINATION = 262144,MCI_ANIM_WHERE_SOURCE = 131072,MCI_ANIM_WHERE_DESTINATION = 262144,MCI_ANIM_UPDATE_HDC = 131072,MCI_OVLY_OPEN_WS = 65536,MCI_OVLY_OPEN_PARENT = 131072,MCI_OVLY_STATUS_HWND = 16385,MCI_OVLY_STATUS_STRETCH = 16386,MCI_OVLY_INFO_TEXT = 65536,MCI_OVLY_GETDEVCAPS_CAN_STRETCH = 16385,MCI_OVLY_GETDEVCAPS_CAN_FREEZE = 16386,MCI_OVLY_GETDEVCAPS_MAX_WINDOWS = 16387,MCI_OVLY_WINDOW_HWND = 65536,MCI_OVLY_WINDOW_STATE = 262144,MCI_OVLY_WINDOW_TEXT = 524288,MCI_OVLY_WINDOW_ENABLE_STRETCH = 1048576,MCI_OVLY_WINDOW_DISABLE_STRETCH = 2097152,MCI_OVLY_RECT = 65536,MCI_OVLY_PUT_SOURCE = 131072,MCI_OVLY_PUT_DESTINATION = 262144,MCI_OVLY_PUT_FRAME = 524288,MCI_OVLY_PUT_VIDEO = 1048576,MCI_OVLY_WHERE_SOURCE = 131072,MCI_OVLY_WHERE_DESTINATION = 262144,MCI_OVLY_WHERE_FRAME = 524288,MCI_OVLY_WHERE_VIDEO = 1048576,};
enum MACRO_MERGECOPY {MERGECOPY = 0xC000CA,};
enum MACRO_MFCOMMENT {MFCOMMENT = 15,GETPENWIDTH = 16,};
enum MACRO_MIXERLINE {MIXERLINE_LINEF_ACTIVE = 1,MIXERLINE_LINEF_DISCONNECTED = 32768,MIXERLINE_LINEF_SOURCE = -2147483648,MIXERLINE_COMPONENTTYPE_DST_FIRST = 0,MIXERLINE_COMPONENTTYPE_DST_UNDEFINED = 0,MIXERLINE_COMPONENTTYPE_DST_DIGITAL = 1,MIXERLINE_COMPONENTTYPE_DST_LINE = 2,MIXERLINE_COMPONENTTYPE_DST_MONITOR = 3,MIXERLINE_COMPONENTTYPE_DST_SPEAKERS = 4,MIXERLINE_COMPONENTTYPE_DST_HEADPHONES = 5,MIXERLINE_COMPONENTTYPE_DST_TELEPHONE = 6,MIXERLINE_COMPONENTTYPE_DST_WAVEIN = 7,MIXERLINE_COMPONENTTYPE_DST_VOICEIN = 8,MIXERLINE_COMPONENTTYPE_DST_LAST = 8,MIXERLINE_COMPONENTTYPE_SRC_FIRST = 4096,MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED = 4096,MIXERLINE_COMPONENTTYPE_SRC_DIGITAL = 4097,MIXERLINE_COMPONENTTYPE_SRC_LINE = 4098,MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE = 4099,MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER = 4100,MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC = 4101,MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE = 4102,MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER = 4103,MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT = 4104,MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY = 4105,MIXERLINE_COMPONENTTYPE_SRC_ANALOG = 4106,MIXERLINE_COMPONENTTYPE_SRC_LAST = 4106,MIXERLINE_TARGETTYPE_UNDEFINED = 0,MIXERLINE_TARGETTYPE_WAVEOUT = 1,MIXERLINE_TARGETTYPE_WAVEIN = 2,MIXERLINE_TARGETTYPE_MIDIOUT = 3,MIXERLINE_TARGETTYPE_MIDIIN = 4,MIXERLINE_TARGETTYPE_AUX = 5,};
enum MACRO_NCBACTION {NCBACTION = 0x77,};
enum MACRO_NCBCANCEL {NCBCANCEL = 0x35,};
enum MACRO_NCBDGRECV {NCBDGRECV = 0x21,};
enum MACRO_NCBHANGUP {NCBHANGUP = 0x12,};
enum MACRO_NCBLISTEN {NCBLISTEN = 0x11,};
enum MACRO_NCBSENDNA {NCBSENDNA = 0x71,};
enum MACRO_NCBUNLINK {NCBUNLINK = 0x70,};
enum MACRO_NOT_FOUND {WSASERVICE_NOT_FOUND = 10108,WSATYPE_NOT_FOUND = 10109,};
enum MACRO_NUMCOLORS {NUMCOLORS = 24,};
enum MACRO_PARAMFLAG {PARAMFLAG_NONE = 0,PARAMFLAG_FIN = 1,PARAMFLAG_FOUT = 2,PARAMFLAG_FLCID = 4,PARAMFLAG_FRETVAL = 8,PARAMFLAG_FOPT = 16,PARAMFLAG_FHASDEFAULT = 32,};
enum MACRO_PARTITION {PARTITION_ENTRY_UNUSED = 0,PARTITION_FAT_12 = 1,PARTITION_XENIX_1 = 2,PARTITION_XENIX_2 = 3,PARTITION_FAT_16 = 4,PARTITION_EXTENDED = 5,PARTITION_HUGE = 6,PARTITION_IFS = 7,PARTITION_PREP = 65,PARTITION_UNIX = 99,PARTITION_NTFT = 128,};
enum MACRO_PATINVERT {PATINVERT = 0x5A0049,};
enum MACRO_PRIVILEGE {PRIVILEGE_SET_ALL_NECESSARY = 1,};
enum MACRO_PROCESSOR {PROCESSOR_INTEL_386 = 386,PROCESSOR_INTEL_486 = 486,PROCESSOR_INTEL_PENTIUM = 586,PROCESSOR_MIPS_R4000 = 4000,PROCESSOR_ALPHA_21064 = 21064,PROCESSOR_ARCHITECTURE_INTEL = 0,PROCESSOR_ARCHITECTURE_MIPS = 1,PROCESSOR_ARCHITECTURE_ALPHA = 2,PROCESSOR_ARCHITECTURE_PPC = 3,PROCESSOR_ARCHITECTURE_UNKNOWN = 65535,};
enum MACRO_REFERENCE {REFERENCE_WHITE_MIN = 6000,REFERENCE_WHITE_MAX = 10000,REFERENCE_BLACK_MIN = 0,REFERENCE_BLACK_MAX = 4000,};
enum MACRO_RPC_FLAGS {RPC_FLAGS_VALID_BIT = 0x8000,};
enum MACRO_SB_LINEUP {SB_LINEUP = 0,SB_LINEDOWN = 1,SB_LINELEFT = 0,SB_LINERIGHT = 1,SB_PAGEUP = 2,SB_PAGEDOWN = 3,SB_PAGELEFT = 2,SB_PAGERIGHT = 3,SB_THUMBPOSITION = 4,SB_THUMBTRACK = 5,SB_ENDSCROLL = 8,SB_LEFT = 6,SB_RIGHT = 7,SB_BOTTOM = 7,SB_TOP = 6,};
enum MACRO_SEC_WINNT {SEC_WINNT_AUTH_IDENTITY_ANSI = 0x1,SEC_WINNT_AUTH_IDENTITY_UNICODE = 0x2,};
enum MACRO_SELECTDIB {SELECTDIB = 41,};
enum MACRO_SEMAPHORE {SEMAPHORE_ALL_ACCESS = 0x1F0003,SEMAPHORE_MODIFY_STATE = 0x2,};
enum MACRO_SIGNATURE {ENHMETA_SIGNATURE = 1179469088,EPS_SIGNATURE = 1179865157,};
enum MACRO_SIMULATED {SIMULATED_FONTTYPE = 0x8000,PRINTER_FONTTYPE = 0x4000,SCREEN_FONTTYPE = 0x2000,BOLD_FONTTYPE = 0x100,ITALIC_FONTTYPE = 0x200,REGULAR_FONTTYPE = 0x400,};
enum MACRO_SOMAXCONN {SOMAXCONN = 0x7FFFFFFF,};
enum MACRO_SP_PARITY {SP_PARITY = 1,SP_BAUD = 2,SP_DATABITS = 4,SP_STOPBITS = 8,SP_HANDSHAKING = 16,SP_PARITY_CHECK = 32,SP_RLSD = 64,};
enum MACRO_SRCINVERT {SRCINVERT = 0x660046,};
enum MACRO_S_BLKSIZE {S_BLKSIZE = 512,};
enum MACRO_TB_LINEUP {TB_LINEUP = 0,TB_LINEDOWN = 1,TB_PAGEUP = 2,TB_PAGEDOWN = 3,TB_THUMBPOSITION = 4,TB_THUMBTRACK = 5,TB_TOP = 6,TB_BOTTOM = 7,TB_ENDTRACK = 8,};
enum MACRO_TRANSFORM {TRANSFORM_CTM = 4107,};
enum MACRO_TRANSPORT {TRANSPORT_TYPE_CN = 1,TRANSPORT_TYPE_DG = 2,TRANSPORT_TYPE_LPC = 4,TRANSPORT_TYPE_WMSG = 8,};
enum MACRO_USER_NAME {USER_NAME_PARMNUM = 1,USER_PASSWORD_PARMNUM = 3,USER_PASSWORD_AGE_PARMNUM = 4,USER_PRIV_PARMNUM = 5,USER_HOME_DIR_PARMNUM = 6,USER_COMMENT_PARMNUM = 7,USER_FLAGS_PARMNUM = 8,USER_SCRIPT_PATH_PARMNUM = 9,USER_AUTH_FLAGS_PARMNUM = 10,USER_FULL_NAME_PARMNUM = 11,USER_USR_COMMENT_PARMNUM = 12,USER_PARMS_PARMNUM = 13,USER_WORKSTATIONS_PARMNUM = 14,USER_LAST_LOGON_PARMNUM = 15,USER_LAST_LOGOFF_PARMNUM = 16,USER_ACCT_EXPIRES_PARMNUM = 17,USER_MAX_STORAGE_PARMNUM = 18,USER_UNITS_PER_WEEK_PARMNUM = 19,USER_LOGON_HOURS_PARMNUM = 20,USER_PAD_PW_COUNT_PARMNUM = 21,USER_NUM_LOGONS_PARMNUM = 22,USER_LOGON_SERVER_PARMNUM = 23,USER_COUNTRY_CODE_PARMNUM = 24,USER_CODE_PAGE_PARMNUM = 25,USER_PRIMARY_GROUP_PARMNUM = 51,USER_PROFILE = 52,USER_PROFILE_PARMNUM = 52,USER_HOME_DIR_DRIVE_PARMNUM = 53,USER_NAME_INFOLEVEL = 1001,USER_PASSWORD_INFOLEVEL = 1003,USER_PASSWORD_AGE_INFOLEVEL = 1004,USER_PRIV_INFOLEVEL = 1005,USER_HOME_DIR_INFOLEVEL = 1006,USER_COMMENT_INFOLEVEL = 1007,USER_FLAGS_INFOLEVEL = 1008,USER_SCRIPT_PATH_INFOLEVEL = 1009,USER_AUTH_FLAGS_INFOLEVEL = 1010,USER_FULL_NAME_INFOLEVEL = 1011,USER_USR_COMMENT_INFOLEVEL = 1012,USER_PARMS_INFOLEVEL = 1013,USER_WORKSTATIONS_INFOLEVEL = 1014,USER_LAST_LOGON_INFOLEVEL = 1015,USER_LAST_LOGOFF_INFOLEVEL = 1016,USER_ACCT_EXPIRES_INFOLEVEL = 1017,USER_MAX_STORAGE_INFOLEVEL = 1018,USER_UNITS_PER_WEEK_INFOLEVEL = 1019,USER_LOGON_HOURS_INFOLEVEL = 1020,USER_PAD_PW_COUNT_INFOLEVEL = 1021,USER_NUM_LOGONS_INFOLEVEL = 1022,USER_LOGON_SERVER_INFOLEVEL = 1023,USER_COUNTRY_CODE_INFOLEVEL = 1024,USER_CODE_PAGE_INFOLEVEL = 1025,USER_PRIMARY_GROUP_INFOLEVEL = 1051,USER_HOME_DIR_DRIVE_INFOLEVEL = 1053,};
enum MACRO_USER_PRIV {USER_PRIV_MASK = 3,USER_PRIV_GUEST = 0,USER_PRIV_USER = 1,USER_PRIV_ADMIN = 2,};
enum MACRO_VALIDATED {VALIDATED_LOGON = 0,};
enum MACRO_WHITENESS {WHITENESS = 0xFF0062,};
enum MACRO_WSAEACCES {WSAEACCES = 10013,};
enum MACRO_WSAEDQUOT {WSAEDQUOT = 10069,};
enum MACRO_WSAEFAULT {WSAEFAULT = 10014,};
enum MACRO_WSAEINVAL {WSAEINVAL = 10022,};
enum MACRO_WSAEMFILE {WSAEMFILE = 10024,};
enum MACRO_WSAESTALE {WSAESTALE = 10070,};
enum MACRO_WSAEUSERS {WSAEUSERS = 10068,};
enum MACRO__INTEGRAL {_INTEGRAL_MAX_BITS = 64,};
enum MACRO__SYS_STAT {_SYS_STAT_H = 1,};
enum MACRO___mbstate {__mbstate_t_defined = 1,};
enum MACRO_t_defined {__time_t_defined = 1,__clockid_t_defined = 1,__timer_t_defined = 1,};
typedef struct tagMCI_BREAK_PARMS MCI_BREAK_PARMS;
typedef struct tagMCI_INFO_PARMSA MCI_INFO_PARMSA;
typedef struct tagMCI_INFO_PARMSW MCI_INFO_PARMSW;
typedef struct tagMCI_LOAD_PARMSA MCI_LOAD_PARMSA;
typedef struct tagMCI_LOAD_PARMSW MCI_LOAD_PARMSW;
typedef struct tagMCI_OPEN_PARMSA MCI_OPEN_PARMSA;
typedef struct tagMCI_OPEN_PARMSW MCI_OPEN_PARMSW;
typedef struct tagMCI_SAVE_PARMSA MCI_SAVE_PARMSA;
typedef struct tagMCI_SAVE_PARMSW MCI_SAVE_PARMSW;
typedef struct midiproptimediv_tag MIDIPROPTIMEDIV;
typedef struct midistrmbuffver_tag MIDISTRMBUFFVER;
typedef struct _MONITOR_INFO_1A MONITOR_INFO_1A;
typedef struct _MONITOR_INFO_1W MONITOR_INFO_1W;
typedef struct _MONITOR_INFO_2A MONITOR_INFO_2A;
typedef struct _MONITOR_INFO_2W MONITOR_INFO_2W;
typedef struct _NETLOGON_INFO_1 NETLOGON_INFO_1;
typedef struct _NETLOGON_INFO_2 NETLOGON_INFO_2;
typedef struct _NETLOGON_INFO_3 NETLOGON_INFO_3;
typedef struct _NOTIFYICONDATAA NOTIFYICONDATAA;
typedef struct _NOTIFYICONDATAW NOTIFYICONDATAW;
typedef struct tagOLEUIEDITLINKSA OLEUIEDITLINKSA;
typedef struct tagOLEUIEDITLINKSW OLEUIEDITLINKSW;
typedef struct tagOLEUIGNRLPROPSA OLEUIGNRLPROPSA;
typedef struct tagOLEUIGNRLPROPSW OLEUIGNRLPROPSW;
typedef struct tagOLEUILINKPROPSA OLEUILINKPROPSA;
typedef struct tagOLEUILINKPROPSW OLEUILINKPROPSW;
typedef struct tagOLEUIVIEWPROPSA OLEUIVIEWPROPSA;
typedef struct tagOLEUIVIEWPROPSW OLEUIVIEWPROPSW;
typedef int OLE_XPOS_PIXELS;
typedef int OLE_YPOS_PIXELS;
typedef struct _ADAPTER_STATUS *PADAPTER_STATUS;
typedef struct _ADDJOB_INFO_1A *PADDJOB_INFO_1A;
typedef struct _ADDJOB_INFO_1W *PADDJOB_INFO_1W;
typedef struct _AE_SERVICESTAT *PAE_SERVICESTAT;
typedef struct _BITMAPCOREINFO *PBITMAPCOREINFO;
typedef struct _22BDD2D628B0B561C5A9CA42290FE551 *PBITMAPV4HEADER;
typedef struct _CHARDEV_INFO_0 *PCHARDEV_INFO_0;
typedef struct _CHARDEV_INFO_1 *PCHARDEV_INFO_1;
typedef  char *PCInterfaceName;
typedef struct tagCOPYDATASTRUCT *PCOPYDATASTRUCT;
typedef struct _DISK_HISTOGRAM *PDISK_HISTOGRAM;
typedef struct tagDRAWITEMSTRUCT *PDRAWITEMSTRUCT;
typedef struct _DRIVER_INFO_1A *PDRIVER_INFO_1A;
typedef struct _DRIVER_INFO_1W *PDRIVER_INFO_1W;
typedef struct _DRIVER_INFO_2A *PDRIVER_INFO_2A;
typedef struct _DRIVER_INFO_2W *PDRIVER_INFO_2W;
typedef struct _DRIVER_INFO_3A *PDRIVER_INFO_3A;
typedef struct _DRIVER_INFO_3W *PDRIVER_INFO_3W;
typedef struct tagABORTPATH *PEMRCLOSEFIGURE;
typedef struct tagEMREXTTEXTOUTA *PEMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA *PEMREXTTEXTOUTW;
typedef struct tagABORTPATH *PEMRFLATTENPATH;
typedef struct tagEMRPOLYPOLYLINE *PEMRPOLYPOLYGON;
typedef struct _PERF_DATA_BLOCK PERF_DATA_BLOCK;
typedef struct _EVENTLOGRECORD *PEVENTLOGRECORD;
typedef struct tagMCI_PLAY_PARMS *PMCI_PLAY_PARMS;
typedef struct tagMCI_SEEK_PARMS *PMCI_SEEK_PARMS;
typedef void *PMIDL_XMIT_TYPE;
typedef struct tagMODULEENTRY32W *PMODULEENTRY32W;
typedef struct tagNEWTEXTMETRICA *PNEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICW *PNEWTEXTMETRICW;
typedef struct _OSVERSIONINFOA *POSVERSIONINFOA;
typedef struct _OSVERSIONINFOW *POSVERSIONINFOW;
typedef struct _PRINTER_INFO_3 *PPRINTER_INFO_3;
typedef struct tagPROCESSENTRY32 *PPROCESSENTRY32;
typedef struct _REPL_INFO_1000 *PREPL_INFO_1000;
typedef struct _REPL_INFO_1001 *PREPL_INFO_1001;
typedef struct _REPL_INFO_1002 *PREPL_INFO_1002;
typedef struct _REPL_INFO_1003 *PREPL_INFO_1003;
typedef struct _PRINTER_INFO_1A PRINTER_INFO_1A;
typedef struct _PRINTER_INFO_1W PRINTER_INFO_1W;
typedef struct _PRINTER_INFO_2A PRINTER_INFO_2A;
typedef struct _PRINTER_INFO_2W PRINTER_INFO_2W;
typedef struct _PRINTER_INFO_4A PRINTER_INFO_4A;
typedef struct _PRINTER_INFO_4W PRINTER_INFO_4W;
typedef struct _PRINTER_INFO_5A PRINTER_INFO_5A;
typedef struct _PRINTER_INFO_5W PRINTER_INFO_5W;
typedef struct tagPROCESSENTRY32W PROCESSENTRY32W;
typedef struct _SCONTEXT_QUEUE *PSCONTEXT_QUEUE;
typedef struct _SERVICE_INFO_0 *PSERVICE_INFO_0;
typedef struct _SERVICE_INFO_1 *PSERVICE_INFO_1;
typedef struct _SERVICE_INFO_2 *PSERVICE_INFO_2;
typedef struct _SESSION_BUFFER *PSESSION_BUFFER;
typedef struct _SESSION_HEADER *PSESSION_HEADER;
typedef struct _SESSION_INFO_0 *PSESSION_INFO_0;
typedef struct _SESSION_INFO_1 *PSESSION_INFO_1;
typedef struct _SESSION_INFO_2 *PSESSION_INFO_2;
typedef struct _SHARE_INFO_502 *PSHARE_INFO_502;
typedef struct _SOCKET_ADDRESS *PSOCKET_ADDRESS;
typedef struct _USER_INFO_1003 *PUSER_INFO_1003;
typedef struct _USER_INFO_1005 *PUSER_INFO_1005;
typedef struct _USER_INFO_1006 *PUSER_INFO_1006;
typedef struct _USER_INFO_1007 *PUSER_INFO_1007;
typedef struct _USER_INFO_1008 *PUSER_INFO_1008;
typedef struct _USER_INFO_1009 *PUSER_INFO_1009;
typedef struct _USER_INFO_1010 *PUSER_INFO_1010;
typedef struct _USER_INFO_1011 *PUSER_INFO_1011;
typedef struct _USER_INFO_1012 *PUSER_INFO_1012;
typedef struct _USER_INFO_1013 *PUSER_INFO_1013;
typedef struct _USER_INFO_1014 *PUSER_INFO_1014;
typedef struct _USER_INFO_1017 *PUSER_INFO_1017;
typedef struct _USER_INFO_1018 *PUSER_INFO_1018;
typedef struct _USER_INFO_1020 *PUSER_INFO_1020;
typedef struct _USER_INFO_1023 *PUSER_INFO_1023;
typedef struct _USER_INFO_1024 *PUSER_INFO_1024;
typedef struct _USER_INFO_1025 *PUSER_INFO_1025;
typedef struct _USER_INFO_1051 *PUSER_INFO_1051;
typedef struct _USER_INFO_1052 *PUSER_INFO_1052;
typedef struct _USER_INFO_1053 *PUSER_INFO_1053;
typedef struct _WKSTA_INFO_100 *PWKSTA_INFO_100;
typedef struct _WKSTA_INFO_101 *PWKSTA_INFO_101;
typedef struct _WKSTA_INFO_102 *PWKSTA_INFO_102;
typedef struct _WKSTA_INFO_302 *PWKSTA_INFO_302;
typedef struct _WKSTA_INFO_402 *PWKSTA_INFO_402;
typedef struct _WKSTA_INFO_502 *PWKSTA_INFO_502;
typedef struct _REASSIGN_BLOCKS REASSIGN_BLOCKS;
typedef void RPC_CLIENT_FREE(void *);
typedef struct _wireSAFEARR_UNKNOWN SAFEARR_UNKNOWN;
typedef struct _wireSAFEARR_VARIANT SAFEARR_VARIANT;
typedef struct _SERVER_INFO_100 SERVER_INFO_100;
typedef struct _SERVER_INFO_101 SERVER_INFO_101;
typedef struct _SERVER_INFO_102 SERVER_INFO_102;
typedef struct _SERVER_INFO_402 SERVER_INFO_402;
typedef struct _SERVER_INFO_403 SERVER_INFO_403;
typedef struct _SERVER_INFO_502 SERVER_INFO_502;
typedef struct _SERVER_INFO_503 SERVER_INFO_503;
typedef struct _SERVER_INFO_598 SERVER_INFO_598;
typedef struct _SERVER_INFO_599 SERVER_INFO_599;
typedef struct _SESSION_INFO_10 SESSION_INFO_10;
typedef struct _SHARE_INFO_1004 SHARE_INFO_1004;
typedef struct _SHARE_INFO_1006 SHARE_INFO_1006;
typedef struct _SHARE_INFO_1501 SHARE_INFO_1501;
typedef struct _SHFILEOPSTRUCTA SHFILEOPSTRUCTA;
typedef struct _SHFILEOPSTRUCTW SHFILEOPSTRUCTW;
typedef struct _DD2E0983FBF83F36606C69DABA2BC276 TBREPLACEBITMAP;
typedef struct tagTRACKMOUSEEVENT TRACKMOUSEEVENT;
typedef struct tagTTPOLYGONHEADER TTPOLYGONHEADER;
typedef struct _BC2FB811D417144E831EE3AEA4A279C8 URL_COMPONENTSA;
typedef struct _2B4FDC4BF487E67F052937EE78FAE255 URL_COMPONENTSW;
typedef struct tagUSEROBJECTFLAGS USEROBJECTFLAGS;
typedef struct _USER_OTHER_INFO USER_OTHER_INFO;
typedef struct _VTableProvStruc VTableProvStruc;
typedef struct _WIN32_STREAM_ID WIN32_STREAM_ID;
typedef struct _WINDOWPLACEMENT WINDOWPLACEMENT;
typedef struct _WIN_CERTIFICATE WIN_CERTIFICATE;
typedef struct _WKSTA_INFO_1010 WKSTA_INFO_1010;
typedef struct _WKSTA_INFO_1011 WKSTA_INFO_1011;
typedef struct _WKSTA_INFO_1012 WKSTA_INFO_1012;
typedef struct _WKSTA_INFO_1013 WKSTA_INFO_1013;
typedef struct _WKSTA_INFO_1018 WKSTA_INFO_1018;
typedef struct _WKSTA_INFO_1023 WKSTA_INFO_1023;
typedef struct _WKSTA_INFO_1027 WKSTA_INFO_1027;
typedef struct _WKSTA_INFO_1028 WKSTA_INFO_1028;
typedef struct _WKSTA_INFO_1032 WKSTA_INFO_1032;
typedef struct _WKSTA_INFO_1033 WKSTA_INFO_1033;
typedef struct _WKSTA_INFO_1041 WKSTA_INFO_1041;
typedef struct _WKSTA_INFO_1042 WKSTA_INFO_1042;
typedef struct _WKSTA_INFO_1043 WKSTA_INFO_1043;
typedef struct _WKSTA_INFO_1044 WKSTA_INFO_1044;
typedef struct _WKSTA_INFO_1045 WKSTA_INFO_1045;
typedef struct _WKSTA_INFO_1046 WKSTA_INFO_1046;
typedef struct _WKSTA_INFO_1047 WKSTA_INFO_1047;
typedef struct _WKSTA_INFO_1048 WKSTA_INFO_1048;
typedef struct _WKSTA_INFO_1049 WKSTA_INFO_1049;
typedef struct _WKSTA_INFO_1050 WKSTA_INFO_1050;
typedef struct _WKSTA_INFO_1051 WKSTA_INFO_1051;
typedef struct _WKSTA_INFO_1052 WKSTA_INFO_1052;
typedef struct _WKSTA_INFO_1053 WKSTA_INFO_1053;
typedef struct _WKSTA_INFO_1054 WKSTA_INFO_1054;
typedef struct _WKSTA_INFO_1055 WKSTA_INFO_1055;
typedef struct _WKSTA_INFO_1056 WKSTA_INFO_1056;
typedef struct _WKSTA_INFO_1057 WKSTA_INFO_1057;
typedef struct _WKSTA_INFO_1058 WKSTA_INFO_1058;
typedef struct _WKSTA_INFO_1059 WKSTA_INFO_1059;
typedef struct _WKSTA_INFO_1060 WKSTA_INFO_1060;
typedef struct _WKSTA_INFO_1061 WKSTA_INFO_1061;
typedef struct _WKSTA_INFO_1062 WKSTA_INFO_1062;
typedef struct _WSANSClassInfoA WSANSCLASSINFOA;
typedef struct _WSANSClassInfoW WSANSCLASSINFOW;
struct _HYPER_SIZEDARR {unsigned int clSize;long long *pData;};
struct _SHORT_SIZEDARR {unsigned int clSize;unsigned short *pData;};
enum _WSAEcomparator {COMP_EQUAL = 0x0,COMP_NOTLESS = 0x1,};
typedef struct _A1943A29AA7C7E1878261AF6E5FA7A66 *lpMapiRecipDesc;
typedef union _F85E194B51CBDC38F209555F4162D10C pthread_mutex_t;
typedef struct _ADAPTER_STATUS ADAPTER_STATUS;
typedef struct _ADDJOB_INFO_1A ADDJOB_INFO_1A;
typedef struct _ADDJOB_INFO_1W ADDJOB_INFO_1W;
typedef struct _AE_SERVICESTAT AE_SERVICESTAT;
typedef struct _BITMAPCOREINFO BITMAPCOREINFO;
typedef struct _22BDD2D628B0B561C5A9CA42290FE551 BITMAPV4HEADER;
typedef struct _CHARDEV_INFO_0 CHARDEV_INFO_0;
typedef struct _CHARDEV_INFO_1 CHARDEV_INFO_1;
typedef struct tagCOPYDATASTRUCT COPYDATASTRUCT;
typedef struct tagCStdStubBuffer CStdStubBuffer;
typedef struct _DISCDLGSTRUCTA DISCDLGSTRUCTA;
typedef struct _DISCDLGSTRUCTW DISCDLGSTRUCTW;
typedef struct _DISK_HISTOGRAM DISK_HISTOGRAM;
typedef struct tagDRAWITEMSTRUCT DRAWITEMSTRUCT;
typedef struct _B6447483CA6EC2EDA955C4C8EEAE802B DRAWTEXTPARAMS;
typedef struct _DRIVER_INFO_1A DRIVER_INFO_1A;
typedef struct _DRIVER_INFO_1W DRIVER_INFO_1W;
typedef struct _DRIVER_INFO_2A DRIVER_INFO_2A;
typedef struct _DRIVER_INFO_2W DRIVER_INFO_2W;
typedef struct _DRIVER_INFO_3A DRIVER_INFO_3A;
typedef struct _DRIVER_INFO_3W DRIVER_INFO_3W;
typedef struct tagDVTARGETDEVICE DVTARGETDEVICE;
typedef struct _LONG_SIZEDARR DWORD_SIZEDARR;
typedef struct tagABORTPATH EMRCLOSEFIGURE;
typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTA;
typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTW;
typedef struct tagABORTPATH EMRFLATTENPATH;
typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYGON;
typedef struct tagENUMLOGFONTEXA ENUMLOGFONTEXA;
typedef struct tagENUMLOGFONTEXW ENUMLOGFONTEXW;
typedef struct _EVENTLOGRECORD EVENTLOGRECORD;
typedef struct _FILEDESCRIPTOR FILEDESCRIPTOR;
typedef struct _58C398469581E4FCDD5ADAF6870FB0ED FOLDERSETTINGS;
typedef struct _HD_HITTESTINFO HD_HITTESTINFO;
struct HENHMETAFILE__ {int i;};
typedef struct HPROPSHEETPAGE__ *HPROPSHEETPAGE;
typedef struct _HYPER_SIZEDARR HYPER_SIZEDARR;
struct IClassFactory2 {struct IClassFactory2Vtbl *lpVtbl;};
struct IEnumFORMATETC {struct IEnumFORMATETCVtbl *lpVtbl;};
struct IFillLockBytes {struct IFillLockBytesVtbl *lpVtbl;};
struct ILayoutStorage {struct ILayoutStorageVtbl *lpVtbl;};
struct IMessageFilter {struct IMessageFilterVtbl *lpVtbl;};
struct IOleClientSite {struct IOleClientSiteVtbl *lpVtbl;};
struct IOleUIObjInfoA {struct IOleUIObjInfoAVtbl *lpVtbl;};
struct IOleUIObjInfoW {struct IOleUIObjInfoWVtbl *lpVtbl;};
struct IPersistFolder {struct IPersistFolderVtbl *lpVtbl;};
struct IPersistMemory {struct IPersistMemoryVtbl *lpVtbl;};
struct IPersistStream {struct IPersistStreamVtbl *lpVtbl;};
struct IPropertyPage2 {struct IPropertyPage2Vtbl *lpVtbl;};
struct IRpcStubBuffer {struct IRpcStubBufferVtbl *lpVtbl;};
typedef struct tagLOGCOLORSPACEA LOGCOLORSPACEA;
typedef struct tagLOGCOLORSPACEW LOGCOLORSPACEW;
typedef struct _AE_CLOSEFILE *LPAE_CLOSEFILE;
typedef struct _AE_CONNSTART *LPAE_CONNSTART;
typedef struct _AE_NETLOGOFF *LPAE_NETLOGOFF;
typedef struct _AE_RESACCESS *LPAE_RESACCESS;
typedef struct _AE_SESSLOGON *LPAE_SESSLOGON;
typedef struct _AE_SESSPWERR *LPAE_SESSPWERR;
typedef struct _AE_SRVSTATUS *LPAE_SRVSTATUS;
typedef struct tagCCSTYLEFLAGA *LPCCSTYLEFLAGA;
typedef struct tagCCSTYLEFLAGW *LPCCSTYLEFLAGW;
typedef struct tagCHOOSECOLORA *LPCHOOSECOLORA;
typedef struct tagCHOOSECOLORW *LPCHOOSECOLORW;
typedef struct tagCIEXYZTRIPLE *LPCIEXYZTRIPLE;
typedef IClassFactory *LPCLASSFACTORY;
typedef struct _COMMTIMEOUTS *LPCOMMTIMEOUTS;
typedef IContextMenu2 *LPCONTEXTMENU2;
typedef struct tagCREATESTRUCT *LPCREATESTRUCT;
typedef struct tagCUSTDATAITEM *LPCUSTDATAITEM;
typedef struct _30741344DFEF5D024CAA9E725B3C6F5B *LPDRAGLISTINFO;
typedef struct tagENUMLOGFONTA *LPENUMLOGFONTA;
typedef struct tagENUMLOGFONTW *LPENUMLOGFONTW;
typedef struct IEnumSTATDATA *LPENUMSTATDATA;
typedef struct _6F0F0D71FED89E7A00C3574FDC894A08 *LPFINDREPLACEA;
typedef struct _03B47C5F41869B4DA4566C38D2C89E1D *LPFINDREPLACEW;
typedef struct _FORM_INFO_1A *LPFORM_INFO_1A;
typedef struct _FORM_INFO_1W *LPFORM_INFO_1W;
typedef struct tagGCP_RESULTSA *LPGCP_RESULTSA;
typedef struct tagGCP_RESULTSW *LPGCP_RESULTSW;
typedef struct _GLYPHMETRICS *LPGLYPHMETRICS;
typedef struct _GROUP_INFO_0 *LPGROUP_INFO_0;
typedef struct _GROUP_INFO_1 *LPGROUP_INFO_1;
typedef struct tagHELPWININFOA *LPHELPWININFOA;
typedef struct tagHELPWININFOW *LPHELPWININFOW;
typedef struct _TT_HITTESTINFOA *LPHITTESTINFOA;
typedef struct _TT_HITTESTINFOW *LPHITTESTINFOW;
typedef struct tagICONMETRICSA *LPICONMETRICSA;
typedef struct tagICONMETRICSW *LPICONMETRICSW;
typedef struct _MEMORYSTATUS *LPMEMORYSTATUS;
typedef void *LPMENUTEMPLATE;
typedef struct tagMETAFILEPICT *LPMETAFILEPICT;
typedef struct tagMIDIOUTCAPSA *LPMIDIOUTCAPSA;
typedef struct tagMIDIOUTCAPSW *LPMIDIOUTCAPSW;
typedef struct _MODEMDEVCAPS *LPMODEMDEVCAPS;
typedef struct _NETRESOURCEA *LPNETRESOURCEA;
typedef struct _NETRESOURCEW *LPNETRESOURCEW;
typedef struct _NM_TREEVIEWA *LPNM_TREEVIEWA;
typedef struct _NM_TREEVIEWW *LPNM_TREEVIEWW;
typedef struct IOleContainer *LPOLECONTAINER;
typedef struct tagPALETTEENTRY *LPPALETTEENTRY;
typedef struct _PORT_INFO_1A *LPPORT_INFO_1A;
typedef struct _PORT_INFO_1W *LPPORT_INFO_1W;
typedef struct _PORT_INFO_2A *LPPORT_INFO_2A;
typedef struct _PORT_INFO_2W *LPPORT_INFO_2W;
typedef struct _PORT_INFO_3A *LPPORT_INFO_3A;
typedef struct _PORT_INFO_3W *LPPORT_INFO_3W;
typedef struct IPropertyPage *LPPROPERTYPAGE;
typedef struct tagPROPPAGEINFO *LPPROPPAGEINFO;
typedef struct _SHARE_INFO_0 *LPSHARE_INFO_0;
typedef struct _SHARE_INFO_1 *LPSHARE_INFO_1;
typedef struct _SHARE_INFO_2 *LPSHARE_INFO_2;
typedef struct IShellBrowser *LPSHELLBROWSER;
typedef IShellExtInit *LPSHELLEXTINIT;
typedef struct tagSOUNDSENTRYA *LPSOUNDSENTRYA;
typedef struct tagSOUNDSENTRYW *LPSOUNDSENTRYW;
typedef struct _STARTUPINFOA *LPSTARTUPINFOA;
typedef struct _STARTUPINFOW *LPSTARTUPINFOW;
typedef struct _TOKEN_GROUPS *LPTOKEN_GROUPS;
typedef struct tagTOOLTIPTEXTA *LPTOOLTIPTEXTA;
typedef struct tagTOOLTIPTEXTW *LPTOOLTIPTEXTW;
typedef struct _USER_INFO_10 *LPUSER_INFO_10;
typedef struct _USER_INFO_11 *LPUSER_INFO_11;
typedef struct _USER_INFO_20 *LPUSER_INFO_20;
typedef struct _USER_INFO_21 *LPUSER_INFO_21;
typedef struct _USER_INFO_22 *LPUSER_INFO_22;
typedef struct tWAVEFORMATEX *LPWAVEFORMATEX;
typedef struct tagWAVEOUTCAPSA *LPWAVEOUTCAPSA;
typedef struct tagWAVEOUTCAPSW *LPWAVEOUTCAPSW;
typedef struct _WSAQuerySetA *LPWSAQUERYSETA;
typedef struct _WSAQuerySetW *LPWSAQUERYSETW;
typedef struct _LV_HITTESTINFO LV_HITTESTINFO;
enum MACRO_ABSOLUTE {ABSOLUTE = 1,RELATIVE = 2,};
enum MACRO_ACM_OPEN {ACM_OPEN = 1124,};
enum MACRO_ALLOCATE {ALLOCATE_RESPONSE = 2,};
enum MACRO_ALLPERMS {ALLPERMS = 4095,};
enum MACRO_APPCLASS {APPCLASS_STANDARD = 0,APPCLASS_MASK = 15,};
enum MACRO_ASPECTXY {ASPECTXY = 44,};
enum MACRO_BANDINFO {BANDINFO = 24,};
enum MACRO_CALLBACK {CALLBACK_CHUNK_FINISHED = 0,CALLBACK_STREAM_SWITCH = 1,};
enum MACRO_CAPSLOCK {CAPSLOCK_ON = 128,};
enum MACRO_CHARDEVQ {CHARDEVQ_NO_REQUESTS = -1,};
enum MACRO_CHECKSUM {CHECKSUM_SUCCESS = 0,CHECKSUM_OPEN_FAILURE = 1,CHECKSUM_MAP_FAILURE = 2,CHECKSUM_MAPVIEW_FAILURE = 3,CHECKSUM_UNICODE_FAILURE = 4,};
enum MACRO_CLRBREAK {CLRBREAK = 9,};
enum MACRO_COLORRES {COLORRES = 108,};
enum MACRO_CTLCOLOR {CTLCOLOR_MSGBOX = 0,CTLCOLOR_EDIT = 1,CTLCOLOR_LISTBOX = 2,CTLCOLOR_BTN = 3,CTLCOLOR_DLG = 4,CTLCOLOR_SCROLLBAR = 5,CTLCOLOR_STATIC = 6,CTLCOLOR_MAX = 7,};
enum MACRO_CTRLINFO {CTRLINFO_EATS_RETURN = 1,CTRLINFO_EATS_ESCAPE = 2,};
enum MACRO_DATABITS {DATABITS_5 = 1,DATABITS_6 = 2,DATABITS_7 = 4,DATABITS_8 = 8,DATABITS_16 = 16,DATABITS_16X = 32,};
enum MACRO_DETACHED {DETACHED_PROCESS = 8,};
enum MACRO_DISPATCH {DISPATCH_METHOD = 1,DISPATCH_PROPERTYGET = 2,DISPATCH_PROPERTYPUT = 4,DISPATCH_PROPERTYPUTREF = 8,};
enum MACRO_DMDITHER {DMDITHER_NONE = 1,DMDITHER_COARSE = 2,DMDITHER_FINE = 3,DMDITHER_LINEART = 4,DMDITHER_ERRORDIFFUSION = 5,DMDITHER_RESERVED6 = 6,DMDITHER_RESERVED7 = 7,DMDITHER_RESERVED8 = 8,DMDITHER_RESERVED9 = 9,DMDITHER_GRAYSCALE = 10,DMDITHER_USER = 256,};
enum MACRO_DMORIENT {DMORIENT_PORTRAIT = 1,DMORIENT_LANDSCAPE = 2,};
enum MACRO_DOCKINFO {DOCKINFO_UNDOCKED = 1,DOCKINFO_DOCKED = 2,DOCKINFO_USER_SUPPLIED = 4,DOCKINFO_USER_UNDOCKED = 5,DOCKINFO_USER_DOCKED = 6,};
enum MACRO_DOSOPTGF {DOSOPTGF_DEFCLEAN = 1,};
enum MACRO_DVASPECT {DVASPECT_SHORTNAME = 2,};
enum MACRO_EISAFLAG {EISAFLAG_NO_IO_MERGE = 1,EISAFLAG_SLOT_IO_FIRST = 2,};
enum MACRO_ELEMENTS {SESI1_NUM_ELEMENTS = 8,SESI2_NUM_ELEMENTS = 9,};
enum MACRO_ENHANCED {ENHANCED_KEY = 256,};
enum MACRO_EVENTLOG {EVENTLOG_FORWARDS_READ = 4,EVENTLOG_BACKWARDS_READ = 8,EVENTLOG_SEEK_READ = 2,EVENTLOG_SEQUENTIAL_READ = 1,EVENTLOG_ERROR_TYPE = 1,EVENTLOG_WARNING_TYPE = 2,EVENTLOG_INFORMATION_TYPE = 4,EVENTLOG_AUDIT_SUCCESS = 8,EVENTLOG_AUDIT_FAILURE = 16,};
enum MACRO_FACILITY {FACILITY_WINDOWS = 8,FACILITY_STORAGE = 3,FACILITY_RPC = 1,FACILITY_WIN32 = 7,FACILITY_CONTROL = 10,FACILITY_NULL = 0,FACILITY_ITF = 4,FACILITY_DISPATCH = 2,};
enum MACRO_FCONTROL {FCONTROL = 8,};
enum MACRO_FILE_ANY {FILE_ANY_ACCESS = 0,FILE_READ_ACCESS = 1,FILE_WRITE_ACCESS = 2,};
enum MACRO_FILE_MAP {FILE_MAP_ALL_ACCESS = 0xF001F,FILE_MAP_READ = 0x4,FILE_MAP_WRITE = 0x2,FILE_MAP_COPY = 0x1,};
enum MACRO_FONTTYPE {RASTER_FONTTYPE = 1,DEVICE_FONTTYPE = 2,TRUETYPE_FONTTYPE = 4,};
enum MACRO_FVIRTKEY {FVIRTKEY = 1,};
enum MACRO_GCPCLASS {GCPCLASS_LATIN = 1,GCPCLASS_HEBREW = 2,GCPCLASS_ARABIC = 2,GCPCLASS_NEUTRAL = 3,GCPCLASS_LOCALNUMBER = 4,GCPCLASS_LATINNUMBER = 5,GCPCLASS_LATINNUMERICTERMINATOR = 6,GCPCLASS_LATINNUMERICSEPARATOR = 7,GCPCLASS_NUMERICSEPARATOR = 8,GCPCLASS_PREBOUNDLTR = 128,GCPCLASS_PREBOUNDRTL = 64,GCPCLASS_POSTBOUNDLTR = 32,GCPCLASS_POSTBOUNDRTL = 16,};
enum MACRO_GCPGLYPH {GCPGLYPH_LINKBEFORE = 0x8000,GCPGLYPH_LINKAFTER = 0x4000,};
enum MACRO_GCS_VERB {GCS_VERB = 0,GCS_HELPTEXT = 1,GCS_VALIDATE = 2,};
enum MACRO_GUIDKIND {GUIDKIND_DEFAULT_SOURCE_DISP_IID = 1,};
enum MACRO_HELPINFO {HELPINFO_MENUITEM = 2,HELPINFO_WINDOW = 1,};
enum MACRO_HORZSIZE {HORZSIZE = 4,};
enum MACRO_HTBORDER {HTBORDER = 18,};
enum MACRO_HTBOTTOM {HTBOTTOM = 15,HTBOTTOMLEFT = 16,};
enum MACRO_HTOBJECT {HTOBJECT = 19,};
enum MACRO_HTREDUCE {HTREDUCE = 8,};
enum MACRO_IDCANCEL {IDCANCEL = 2,IDCLOSE = 8,};
enum MACRO_IDIGNORE {IDIGNORE = 5,};
enum MACRO_IME_PROP {IME_PROP_AT_CARET = 0x10000,IME_PROP_SPECIAL_UI = 0x20000,IME_PROP_CANDLIST_START_FROM_1 = 0x40000,IME_PROP_UNICODE = 0x80000,};
enum MACRO_INTERNET {INTERNET_INVALID_PORT_NUMBER = 0,INTERNET_DEFAULT_FTP_PORT = 21,INTERNET_DEFAULT_GOPHER_PORT = 70,INTERNET_DEFAULT_HTTP_PORT = 80,INTERNET_DEFAULT_HTTPS_PORT = 443,INTERNET_DEFAULT_SOCKS_PORT = 1080,};
enum MACRO_IOC_UNIX {IOC_UNIX = 0x0,IOC_WS2 = 0x8000000,IOC_PROTOCOL = 0x10000000,IOC_VENDOR = 0x18000000,};
enum MACRO_LINECAPS {LINECAPS = 30,};
enum MACRO_LOCKFILE {LOCKFILE_FAIL_IMMEDIATELY = 1,LOCKFILE_EXCLUSIVE_LOCK = 2,};
enum MACRO_LOGFLAGS {LOGFLAGS_FORWARD = 0,LOGFLAGS_BACKWARD = 1,LOGFLAGS_SEEK = 2,};
enum MACRO_MAILSLOT {MAILSLOT_NO_MESSAGE = 4294967295,MAILSLOT_WAIT_FOREVER = 4294967295,};
enum MACRO_MAXDWORD {MAXDWORD = 0xFFFFFFFF,};
enum MACRO_MAXSHORT {MAXSHORT = 0x7FFF,MINLONG = 0x80000000,};
enum MACRO_MAX_LANA {MAX_LANA = 254,};
enum MACRO_MAX_NERR {MAX_NERR = 2999,};
enum MACRO_MENULOOP {MENULOOP_WINDOW = 0,MENULOOP_POPUP = 1,};
enum MACRO_MF_FLAGS {MF_FLAGS_EVEN_IF_NO_RESOURCE = 1,MF_FLAGS_NO_CREATE_IF_NO_RESOURCE = 2,MF_FLAGS_FILL_IN_UNKNOWN_RESOURCE = 4,MF_FLAGS_CREATE_BUT_NO_SHOW_DISABLED = 8,};
enum MACRO_MIDICAPS {MIDICAPS_VOLUME = 1,MIDICAPS_LRVOLUME = 2,MIDICAPS_CACHE = 4,MIDICAPS_STREAM = 8,};
enum MACRO_MIDIPROP {MIDIPROP_SET = 0x80000000,MIDIPROP_GET = 0x40000000,MIDIPROP_TIMEDIV = 0x1,MIDIPROP_TEMPO = 0x2,};
enum MACRO_MIDISTRM {MIDISTRM_ERROR = -2,};
enum MACRO_MMSYSERR {MMSYSERR_NOERROR = 0,MMSYSERR_ERROR = 1,MMSYSERR_BADDEVICEID = 2,MMSYSERR_NOTENABLED = 3,MMSYSERR_ALLOCATED = 4,MMSYSERR_INVALHANDLE = 5,MMSYSERR_NODRIVER = 6,MMSYSERR_NOMEM = 7,MMSYSERR_NOTSUPPORTED = 8,MMSYSERR_BADERRNUM = 9,MMSYSERR_INVALFLAG = 10,MMSYSERR_INVALPARAM = 11,MMSYSERR_HANDLEBUSY = 12,MMSYSERR_INVALIDALIAS = 13,MMSYSERR_BADDB = 14,MMSYSERR_KEYNOTFOUND = 15,MMSYSERR_READERROR = 16,MMSYSERR_WRITEERROR = 17,MMSYSERR_DELETEERROR = 18,MMSYSERR_VALNOTFOUND = 19,MMSYSERR_NODRIVERCB = 20,MMSYSERR_LASTERROR = 20,};
enum MACRO_MOVEFILE {MOVEFILE_REPLACE_EXISTING = 1,MOVEFILE_COPY_ALLOWED = 2,MOVEFILE_DELAY_UNTIL_REBOOT = 4,MOVEFILE_WRITE_THROUGH = 8,};
enum MACRO_NCBASTAT {NCBASTAT = 0x33,};
enum MACRO_NCBNAMSZ {NCBNAMSZ = 16,};
enum MACRO_NCBRESET {NCBRESET = 0x32,};
enum MACRO_NCBSSTAT {NCBSSTAT = 0x34,};
enum MACRO_NCBTRACE {NCBTRACE = 0x79,ASYNCH = 0x80,};
enum MACRO_NETLOGON {NETLOGON_CONTROL_QUERY = 1,NETLOGON_CONTROL_REPLICATE = 2,NETLOGON_CONTROL_SYNCHRONIZE = 3,NETLOGON_CONTROL_PDC_REPLICATE = 4,NETLOGON_CONTROL_REDISCOVER = 5,NETLOGON_CONTROL_TC_QUERY = 6,NETLOGON_CONTROL_BACKUP_CHANGE_LOG = 65532,NETLOGON_CONTROL_TRUNCATE_LOG = 65533,NETLOGON_CONTROL_SET_DBFLAG = 65534,NETLOGON_CONTROL_BREAKPOINT = 65535,};
enum MACRO_NEWFRAME {NEWFRAME = 1,ABORTDOC = 2,};
enum MACRO_NEXTBAND {NEXTBAND = 3,SETCOLORTABLE = 4,};
enum MACRO_NOPARITY {NOPARITY = 0,ODDPARITY = 1,EVENPARITY = 2,};
enum MACRO_NUMFONTS {NUMFONTS = 22,};
enum MACRO_NUM_EISA {NUM_EISA_RANGES = 4,};
enum MACRO_OLEIVERB {OLEIVERB_PRIMARY = 0,OLEIVERB_SHOW = -1,OLEIVERB_OPEN = -2,OLEIVERB_HIDE = -3,OLEIVERB_UIACTIVATE = -4,OLEIVERB_INPLACEACTIVATE = -5,OLEIVERB_DISCARDUNDOSTATE = -6,};
enum MACRO_PASSWORD {PASSWORD_EXPIRED = 2,};
enum MACRO_PATPAINT {PATPAINT = 0xFB0A09,};
enum MACRO_PLATFORM {PLATFORM_ID_DOS = 300,PLATFORM_ID_OS2 = 400,PLATFORM_ID_NT = 500,PLATFORM_ID_OSF = 600,PLATFORM_ID_VMS = 700,};
enum MACRO_PRIORITY {NO_PRIORITY = 0,MAX_PRIORITY = 99,MIN_PRIORITY = 1,DEF_PRIORITY = 1,};
enum MACRO_PROGRESS {PROGRESS_CONTINUE = 0,PROGRESS_CANCEL = 1,PROGRESS_STOP = 2,PROGRESS_QUIET = 3,};
enum MACRO_PROTOCOL {BASE_PROTOCOL = 1,LAYERED_PROTOCOL = 0,};
enum MACRO_RDSETBLK {RDSETBLK = 1,};
enum MACRO_RESOURCE {RESOURCE_CONNECTED = 1,RESOURCE_GLOBALNET = 2,RESOURCE_REMEMBERED = 3,RESOURCE_RECENT = 4,RESOURCE_CONTEXT = 5,};
enum MACRO_RPC_C_NS {RPC_C_NS_SYNTAX_DEFAULT = 0,RPC_C_NS_SYNTAX_DCE = 3,RPC_C_PROFILE_DEFAULT_ELT = 0,RPC_C_PROFILE_ALL_ELT = 1,RPC_C_PROFILE_MATCH_BY_IF = 2,RPC_C_PROFILE_MATCH_BY_MBR = 3,RPC_C_PROFILE_MATCH_BY_BOTH = 4,RPC_C_NS_DEFAULT_EXP_AGE = -1,RPC_S_OK = 0,RPC_S_INVALID_ARG = 87,RPC_S_OUT_OF_MEMORY = 14,RPC_S_OUT_OF_THREADS = 164,RPC_S_INVALID_LEVEL = 87,RPC_S_BUFFER_TOO_SMALL = 122,RPC_S_INVALID_SECURITY_DESC = 1338,RPC_S_ACCESS_DENIED = 5,RPC_S_SERVER_OUT_OF_MEMORY = 1130,RPC_X_NO_MEMORY = 14,RPC_X_INVALID_BOUND = 1734,RPC_X_INVALID_TAG = 1733,RPC_X_ENUM_VALUE_TOO_LARGE = 1781,RPC_X_SS_CONTEXT_MISMATCH = 6,RPC_X_INVALID_BUFFER = 1784,};
enum MACRO_SC_GROUP {SC_GROUP_IDENTIFIERA = 43,SC_GROUP_IDENTIFIERW = 43,SC_MANAGER_ALL_ACCESS = 983103,SC_MANAGER_CONNECT = 1,SC_MANAGER_CREATE_SERVICE = 2,SC_MANAGER_ENUMERATE_SERVICE = 4,SC_MANAGER_LOCK = 8,SC_MANAGER_QUERY_LOCK_STATUS = 16,SC_MANAGER_MODIFY_BOOT_CONFIG = 32,};
enum MACRO_SECURITY {SECURITY_NULL_RID = 0,SECURITY_WORLD_RID = 0,SECURITY_LOCAL_RID = 0,SECURITY_CREATOR_OWNER_RID = 0,SECURITY_CREATOR_GROUP_RID = 1,SECURITY_DIALUP_RID = 1,SECURITY_NETWORK_RID = 2,SECURITY_BATCH_RID = 3,SECURITY_INTERACTIVE_RID = 4,SECURITY_LOGON_IDS_RID = 5,SECURITY_SERVICE_RID = 6,SECURITY_LOCAL_SYSTEM_RID = 18,SECURITY_BUILTIN_DOMAIN_RID = 32,SECURITY_PRINCIPAL_SELF_RID = 10,};
enum MACRO_SERVICE2 {SERVICE2_BASE = 5600,};
enum MACRO_SET_CLIP {SET_CLIP_BOX = 4108,SET_BOUNDS = 4109,SET_MIRROR_MODE = 4110,};
enum MACRO_SHUTDOWN {SHUTDOWN_NORETRY = 1,};
enum MACRO_SO_GROUP {SO_GROUP_ID = 0x2001,SO_GROUP_PRIORITY = 0x2002,};
enum MACRO_SPECIFIC {SPECIFIC_RIGHTS_ALL = 0xFFFF,};
enum MACRO_SPLITSYM {SPLITSYM_REMOVE_PRIVATE = 1,SPLITSYM_EXTRACT_ALL = 2,SPLITSYM_SYMBOLPATH_IS_SRC = 4,};
enum MACRO_SP_ERROR {SP_ERROR = -1,SP_OUTOFDISK = -4,SP_OUTOFMEMORY = -5,SP_USERABORT = -3,SP_APPABORT = -2,};
enum MACRO_SRCERASE {SRCERASE = 0x440328,};
enum MACRO_SRCPAINT {SRCPAINT = 0xEE0086,};
enum MACRO_STANDARD {STANDARD_RIGHTS_REQUIRED = 0xF0000,STANDARD_RIGHTS_READ = 0x20000,STANDARD_RIGHTS_WRITE = 0x20000,STANDARD_RIGHTS_EXECUTE = 0x20000,STANDARD_RIGHTS_ALL = 0x1F0000,};
enum MACRO_STARTDOC {STARTDOC = 10,};
enum MACRO_STATSOPT {STATSOPT_CLR = 1,};
enum MACRO_STOPBITS {STOPBITS_10 = 1,STOPBITS_15 = 2,STOPBITS_20 = 4,};
enum MACRO_SUPPORTS {SUPPORTS_REMOTE_ADMIN_PROTOCOL = 2,SUPPORTS_RPC = 4,SUPPORTS_SAM_PROTOCOL = 8,SUPPORTS_UNICODE = 16,SUPPORTS_LOCAL = 32,SUPPORTS_ANY = -1,};
enum MACRO_TEXTCAPS {TEXTCAPS = 34,};
enum MACRO_TRUNCATE {TRUNCATE_EXISTING = 5,};
enum MACRO_VERTSIZE {VERTSIZE = 6,HORZRES = 8,};
enum MACRO_VREFRESH {VREFRESH = 116,};
enum MACRO_WAVECAPS {WAVECAPS_PITCH = 1,WAVECAPS_PLAYBACKRATE = 2,WAVECAPS_VOLUME = 4,WAVECAPS_LRVOLUME = 8,WAVECAPS_SYNC = 16,WAVECAPS_SAMPLEACCURATE = 32,WAVECAPS_DIRECTSOUND = 64,};
enum MACRO_WGL_SWAP {WGL_SWAP_MAIN_PLANE = 1,WGL_SWAP_OVERLAY1 = 2,WGL_SWAP_OVERLAY2 = 4,WGL_SWAP_OVERLAY3 = 8,WGL_SWAP_OVERLAY4 = 16,WGL_SWAP_OVERLAY5 = 32,WGL_SWAP_OVERLAY6 = 64,WGL_SWAP_OVERLAY7 = 128,WGL_SWAP_OVERLAY8 = 256,WGL_SWAP_OVERLAY9 = 512,WGL_SWAP_OVERLAY10 = 1024,WGL_SWAP_OVERLAY11 = 2048,WGL_SWAP_OVERLAY12 = 4096,WGL_SWAP_OVERLAY13 = 8192,WGL_SWAP_OVERLAY14 = 16384,WGL_SWAP_OVERLAY15 = 32768,WGL_SWAP_UNDERLAY1 = 65536,WGL_SWAP_UNDERLAY2 = 131072,WGL_SWAP_UNDERLAY3 = 262144,WGL_SWAP_UNDERLAY4 = 524288,WGL_SWAP_UNDERLAY5 = 1048576,WGL_SWAP_UNDERLAY6 = 2097152,WGL_SWAP_UNDERLAY7 = 4194304,WGL_SWAP_UNDERLAY8 = 8388608,WGL_SWAP_UNDERLAY9 = 16777216,WGL_SWAP_UNDERLAY10 = 33554432,WGL_SWAP_UNDERLAY11 = 67108864,WGL_SWAP_UNDERLAY12 = 134217728,WGL_SWAP_UNDERLAY13 = 268435456,WGL_SWAP_UNDERLAY14 = 536870912,WGL_SWAP_UNDERLAY15 = 1073741824,};
enum MACRO_WSAEBADF {WSAEBADF = 10009,};
enum MACRO_WSAEINTR {WSAEINTR = 10004,};
enum MACRO_WSAELOOP {WSAELOOP = 10062,};
enum MACRO_WSA_FLAG {WSA_FLAG_OVERLAPPED = 0x1,WSA_FLAG_MULTIPOINT_C_ROOT = 0x2,WSA_FLAG_MULTIPOINT_C_LEAF = 0x4,WSA_FLAG_MULTIPOINT_D_ROOT = 0x8,WSA_FLAG_MULTIPOINT_D_LEAF = 0x10,};
enum MACRO___SIZEOF {__SIZEOF_PTHREAD_ATTR_T = 36,__SIZEOF_PTHREAD_MUTEX_T = 24,__SIZEOF_PTHREAD_MUTEXATTR_T = 4,__SIZEOF_PTHREAD_COND_T = 48,__SIZEOF_PTHREAD_COND_COMPAT_T = 12,__SIZEOF_PTHREAD_CONDATTR_T = 4,__SIZEOF_PTHREAD_RWLOCK_T = 32,__SIZEOF_PTHREAD_RWLOCKATTR_T = 8,__SIZEOF_PTHREAD_BARRIER_T = 20,__SIZEOF_PTHREAD_BARRIERATTR_T = 4,};
enum MACRO_____FILE {____FILE_defined = 1,};
enum MACRO_ctlFirst {ctlFirst = 0x400,};
typedef struct tagMCI_PLAY_PARMS MCI_PLAY_PARMS;
typedef struct tagMCI_SEEK_PARMS MCI_SEEK_PARMS;
typedef struct _MIDL_STUB_DESC MIDL_STUB_DESC;
typedef struct tagMODULEENTRY32W MODULEENTRY32W;
typedef struct tagNEWTEXTMETRICA NEWTEXTMETRICA;
typedef struct tagNEWTEXTMETRICW NEWTEXTMETRICW;
typedef struct _OSVERSIONINFOA OSVERSIONINFOA;
typedef struct _OSVERSIONINFOW OSVERSIONINFOW;
typedef struct _ACCESS_INFO_0 *PACCESS_INFO_0;
typedef struct _ACCESS_INFO_1 *PACCESS_INFO_1;
typedef struct _ACTION_HEADER *PACTION_HEADER;
typedef struct _AE_SESSLOGOFF *PAE_SESSLOGOFF;
typedef struct tagCANDIDATEFORM *PCANDIDATEFORM;
typedef struct tagCANDIDATELIST *PCANDIDATELIST;
typedef struct _CONFIG_INFO_0 *PCONFIG_INFO_0;
typedef struct tagDEBUGHOOKINFO *PDEBUGHOOKINFO;
typedef struct tagDRVCONFIGINFO *PDRVCONFIGINFO;
typedef struct tagEMRGDICOMMENT *PEMRGDICOMMENT;
typedef struct tagEMRPOLYLINE *PEMRPOLYBEZIER;
typedef struct tagEMRPOLYDRAW16 *PEMRPOLYDRAW16;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYLINE16;
typedef struct tagEMRPOLYLINE *PEMRPOLYLINETO;
typedef struct tagEMRSETTEXTCOLOR *PEMRSETBKCOLOR;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETMAPMODE;
typedef struct tagABORTPATH *PEMRSETMETARGN;
typedef struct tagEMRSTRETCHBLT *PEMRSTRETCHBLT;
typedef struct tagEMRFILLPATH *PEMRSTROKEPATH;
typedef  unsigned char *PFORMAT_STRING;
typedef struct _HANDLE_INFO_1 *PHANDLE_INFO_1;
typedef struct _IMAGEHLP_LINE *PIMAGEHLP_LINE;
typedef struct tagMCHITTESTINFO *PMCHITTESTINFO;
typedef struct tagMCI_SET_PARMS *PMCI_SET_PARMS;
typedef struct tagMIXERCONTROLA *PMIXERCONTROLA;
typedef struct tagMIXERCONTROLW *PMIXERCONTROLW;
typedef struct _MODEMSETTINGS *PMODEMSETTINGS;
typedef struct tagMODULEENTRY32 *PMODULEENTRY32;
typedef struct _BC4A2AE7528CDE26EA3193F07B7FB715 *PMSGBOXPARAMSA;
typedef struct _86C0719967FA1585F934A358B3D4F44D *PMSGBOXPARAMSW;
typedef struct tagMULTIKEYHELPA *PMULTIKEYHELPA;
typedef struct tagMULTIKEYHELPW *PMULTIKEYHELPW;
typedef struct tagOLEUICONVERTA *POLEUICONVERTA;
typedef struct tagOLEUICONVERTW *POLEUICONVERTW;
typedef struct pcmwaveformat_tag *PPCMWAVEFORMAT;
typedef struct _PRIVILEGE_SET *PPRIVILEGE_SET;
typedef struct tagREGISTERWORDA *PREGISTERWORDA;
typedef struct tagREGISTERWORDW *PREGISTERWORDW;
typedef struct _PRINTER_INFO_3 PRINTER_INFO_3;
typedef struct tagPROCESSENTRY32 PROCESSENTRY32;
typedef struct _PROPSHEETPAGEA PROPSHEETPAGEA;
typedef struct _PROPSHEETPAGEW PROPSHEETPAGEW;
typedef struct _STAT_SERVER_0 *PSTAT_SERVER_0;
typedef struct tagTHREADENTRY32 *PTHREADENTRY32;
typedef struct _PUBLICKEYSTRUC PUBLICKEYSTRUC;
typedef struct tagREBARBANDINFOA REBARBANDINFOA;
typedef struct tagREBARBANDINFOW REBARBANDINFOW;
typedef struct _repastespecial REPASTESPECIAL;
typedef struct _REPL_INFO_1000 REPL_INFO_1000;
typedef struct _REPL_INFO_1001 REPL_INFO_1001;
typedef struct _REPL_INFO_1002 REPL_INFO_1002;
typedef struct _REPL_INFO_1003 REPL_INFO_1003;
typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;
typedef struct _wireSAFEARRAY_UNION SAFEARRAYUNION;
typedef struct _SCONTEXT_QUEUE SCONTEXT_QUEUE;
typedef int (*SERVER_ROUTINE)();
typedef struct _SERVICE_INFO_0 SERVICE_INFO_0;
typedef struct _SERVICE_INFO_1 SERVICE_INFO_1;
typedef struct _SERVICE_INFO_2 SERVICE_INFO_2;
typedef struct _SERVICE_STATUS SERVICE_STATUS;
typedef struct _SESSION_BUFFER SESSION_BUFFER;
typedef struct _SESSION_HEADER SESSION_HEADER;
typedef struct _SESSION_INFO_0 SESSION_INFO_0;
typedef struct _SESSION_INFO_1 SESSION_INFO_1;
typedef struct _SESSION_INFO_2 SESSION_INFO_2;
typedef struct _SHARE_INFO_502 SHARE_INFO_502;
typedef struct _SOCKET_ADDRESS SOCKET_ADDRESS;
typedef struct tagSTATPROPSETSTG STATPROPSETSTG;
typedef struct _SV2CVW2_PARAMS SV2CVW2_PARAMS;
typedef struct _TC_HITTESTINFO TC_HITTESTINFO;
typedef struct _TC_ITEMHEADERA TC_ITEMHEADERA;
typedef struct _TC_ITEMHEADERW TC_ITEMHEADERW;
typedef struct _TT_HITTESTINFOA TTHITTESTINFOA;
typedef struct _TT_HITTESTINFOW TTHITTESTINFOW;
typedef struct _TV_HITTESTINFO TV_HITTESTINFO;
typedef union _ULARGE_INTEGER ULARGE_INTEGER;
typedef struct _USER_INFO_1003 USER_INFO_1003;
typedef struct _USER_INFO_1005 USER_INFO_1005;
typedef struct _USER_INFO_1006 USER_INFO_1006;
typedef struct _USER_INFO_1007 USER_INFO_1007;
typedef struct _USER_INFO_1008 USER_INFO_1008;
typedef struct _USER_INFO_1009 USER_INFO_1009;
typedef struct _USER_INFO_1010 USER_INFO_1010;
typedef struct _USER_INFO_1011 USER_INFO_1011;
typedef struct _USER_INFO_1012 USER_INFO_1012;
typedef struct _USER_INFO_1013 USER_INFO_1013;
typedef struct _USER_INFO_1014 USER_INFO_1014;
typedef struct _USER_INFO_1017 USER_INFO_1017;
typedef struct _USER_INFO_1018 USER_INFO_1018;
typedef struct _USER_INFO_1020 USER_INFO_1020;
typedef struct _USER_INFO_1023 USER_INFO_1023;
typedef struct _USER_INFO_1024 USER_INFO_1024;
typedef struct _USER_INFO_1025 USER_INFO_1025;
typedef struct _USER_INFO_1051 USER_INFO_1051;
typedef struct _USER_INFO_1052 USER_INFO_1052;
typedef struct _USER_INFO_1053 USER_INFO_1053;
typedef struct _WKSTA_INFO_100 WKSTA_INFO_100;
typedef struct _WKSTA_INFO_101 WKSTA_INFO_101;
typedef struct _WKSTA_INFO_102 WKSTA_INFO_102;
typedef struct _WKSTA_INFO_302 WKSTA_INFO_302;
typedef struct _WKSTA_INFO_402 WKSTA_INFO_402;
typedef struct _WKSTA_INFO_502 WKSTA_INFO_502;
struct _LONG_SIZEDARR {unsigned int clSize;unsigned int *pData;};
typedef int __rusage_who_t;
typedef int __sig_atomic_t;
typedef unsigned int error_status_t;
typedef struct _exception_list exception_list;
typedef struct _EE72D852D5A93ABA9CA530FC9E659A18 *lpMapiFileDesc;
typedef union _781B27F37A2DA3C5D0084E69F313DC7D pthread_attr_t;
typedef union _1C4035FDEAFFF0FCE26E66A96F6BBEB4 pthread_cond_t;
typedef int pthread_once_t;
enum tagPENDINGTYPE {PENDINGTYPE_TOPLEVEL = 0x1,PENDINGTYPE_NESTED = 0x2,};
enum tagSTREAM_SEEK {STREAM_SEEK_SET = 0x0,STREAM_SEEK_CUR = 0x1,STREAM_SEEK_END = 0x2,};
typedef struct tagACCESSTIMEOUT ACCESSTIMEOUT;
typedef struct _ACCESS_INFO_0 ACCESS_INFO_0;
typedef struct _ACCESS_INFO_1 ACCESS_INFO_1;
typedef struct _ACTION_HEADER ACTION_HEADER;
typedef struct _AE_SESSLOGOFF AE_SESSLOGOFF;
typedef struct tagANIMATIONINFO ANIMATIONINFO;
typedef struct _AUTH_IDENTITY AUTH_IDENTITY;
typedef struct _BYTE_SIZEDARR BYTE_SIZEDARR;
typedef struct tagCANDIDATEFORM CANDIDATEFORM;
typedef struct tagCANDIDATELIST CANDIDATELIST;
typedef struct tagCAPROPVARIANT CAPROPVARIANT;
typedef struct tagCBT_CREATEWND CBT_CREATEWND;
typedef struct _CONFIG_INFO_0 CONFIG_INFO_0;
typedef struct tagDEBUGHOOKINFO DEBUGHOOKINFO;
typedef struct _DISK_GEOMETRY DISK_GEOMETRY;
typedef struct tagDRVCONFIGINFO DRVCONFIGINFO;
typedef struct tagEMRGDICOMMENT EMRGDICOMMENT;
typedef struct tagEMRPOLYLINE EMRPOLYBEZIER;
typedef struct tagEMRPOLYDRAW16 EMRPOLYDRAW16;
typedef struct tagEMRPOLYLINE16 EMRPOLYLINE16;
typedef struct tagEMRPOLYLINE EMRPOLYLINETO;
typedef struct tagEMRSETTEXTCOLOR EMRSETBKCOLOR;
typedef struct tagEMRSELECTCLIPPATH EMRSETMAPMODE;
typedef struct tagABORTPATH EMRSETMETARGN;
typedef struct tagEMRSTRETCHBLT EMRSTRETCHBLT;
typedef struct tagEMRFILLPATH EMRSTROKEPATH;
typedef struct _encorrecttext ENCORRECTTEXT;
typedef struct tagENHMETAHEADER ENHMETAHEADER;
typedef struct tagENHMETARECORD ENHMETARECORD;
typedef struct _49EEBB44BCC2D3FA72837E5FE8CADC02 ENOLEOPFAILED;
typedef struct tagFONTSIGNATURE FONTSIGNATURE;
typedef struct _HANDLE_INFO_1 HANDLE_INFO_1;
struct HCOLORSPACE__ {int i;};
typedef struct tagHIGHCONTRASTA HIGHCONTRASTA;
typedef struct tagHIGHCONTRASTW HIGHCONTRASTW;
typedef struct HWINEVENTHOOK__ *HWINEVENTHOOK;
struct IClassFactory {struct IClassFactoryVtbl *lpVtbl;};
struct IContextMenu2 {struct IContextMenu2Vtbl *lpVtbl;};
struct IEnumSTATDATA {struct IEnumSTATDATAVtbl *lpVtbl;};
typedef struct _IMAGEHLP_LINE IMAGEHLP_LINE;
typedef struct tagINTERFACEDATA INTERFACEDATA;
typedef struct tagINTERFACEINFO INTERFACEINFO;
struct IOleContainer {struct IOleContainerVtbl *lpVtbl;};
struct IPropertyPage {struct IPropertyPageVtbl *lpVtbl;};
struct IShellBrowser {struct IShellBrowserVtbl *lpVtbl;};
struct IShellExtInit {struct IShellExtInitVtbl *lpVtbl;};
typedef union _LARGE_INTEGER LARGE_INTEGER;
typedef struct _ACCESS_LIST *LPACCESS_LIST;
typedef struct IAdviseSink2 *LPADVISESINK2;
typedef struct _AE_CONNSTOP *LPAE_CONNSTOP;
typedef struct _AE_NETLOGON *LPAE_NETLOGON;
typedef struct _AFPROTOCOLS *LPAFPROTOCOLS;
typedef struct API_VERSION *LPAPI_VERSION;
typedef struct _AUDIT_ENTRY *LPAUDIT_ENTRY;
typedef struct _4532F7D10C15B8B11D529D53ECAF8C30 *LPCHARSETINFO;
typedef struct tagCHOOSEFONTA *LPCHOOSEFONTA;
typedef struct tagCHOOSEFONTW *LPCHOOSEFONTW;
typedef struct tagCOLORSCHEME *LPCOLORSCHEME;
typedef struct tagCONNECTDATA *LPCONNECTDATA;
typedef IContextMenu *LPCONTEXTMENU;
typedef struct tagCONTROLINFO *LPCONTROLINFO;
typedef struct _CSADDR_INFO *LPCSADDR_INFO;
typedef struct tagCURSORSHAPE *LPCURSORSHAPE;
typedef struct _DEBUG_EVENT *LPDEBUG_EVENT;
typedef struct _1C9ED8E2FE494C714F8336D090291E50 *LPDLGTEMPLATE;
typedef struct _DOC_INFO_1A *LPDOC_INFO_1A;
typedef struct _DOC_INFO_1W *LPDOC_INFO_1W;
typedef struct _DOC_INFO_2A *LPDOC_INFO_2A;
typedef struct _DOC_INFO_2W *LPDOC_INFO_2W;
typedef struct _enprotected *LPENPROTECTED;
typedef struct IEnumMoniker *LPENUMMONIKER;
typedef struct IEnumOLEVERB *LPENUMOLEVERB;
typedef struct IEnumSTATSTG *LPENUMSTATSTG;
typedef struct IEnumUnknown *LPENUMUNKNOWN;
typedef struct IEnumVARIANT *LPENUMVARIANT;
typedef struct tagEVENTMSG *LPEVENTMSGMSG;
typedef struct tagEXTLOGFONTA *LPEXTLOGFONTA;
typedef struct tagEXTLOGFONTW *LPEXTLOGFONTW;
typedef IExtractIcon *LPEXTRACTICON;
typedef struct _FILE_INFO_2 *LPFILE_INFO_2;
typedef struct _FILE_INFO_3 *LPFILE_INFO_3;
typedef int *LPFXPT16DOT16;
typedef struct tagHANDLETABLE *LPHANDLETABLE;
typedef struct tagHEAPENTRY32 *LPHEAPENTRY32;
typedef struct _HSE_TF_INFO *LPHSE_TF_INFO;
typedef struct _JOB_INFO_1A *LPJOB_INFO_1A;
typedef struct _JOB_INFO_1W *LPJOB_INFO_1W;
typedef struct _JOB_INFO_2A *LPJOB_INFO_2A;
typedef struct _JOB_INFO_2W *LPJOB_INFO_2W;
typedef struct tagKERNINGPAIR *LPKERNINGPAIR;
typedef struct tagMDINEXTMENU *LPMDINEXTMENU;
typedef struct tagMIDIINCAPSA *LPMIDIINCAPSA;
typedef struct tagMIDIINCAPSW *LPMIDIINCAPSW;
typedef struct tagNEWCPLINFOA *LPNEWCPLINFOA;
typedef struct tagNEWCPLINFOW *LPNEWCPLINFOW;
typedef struct _NM_LISTVIEW *LPNM_LISTVIEW;
typedef struct tagOCPFIPARAMS *LPOCPFIPARAMS;
typedef struct tagPAINTSTRUCT *LPPAINTSTRUCT;
typedef struct tagPARAMDESCEX *LPPARAMDESCEX;
typedef struct IPersistFile *LPPERSISTFILE;
typedef struct IPictureDisp *LPPICTUREDISP;
typedef struct IPropertyBag *LPPROPERTYBAG;
typedef struct tagPROPVARIANT *LPPROPVARIANT;
typedef struct _REPL_INFO_0 *LPREPL_INFO_0;
typedef IRichEditOle *LPRICHEDITOLE;
typedef struct IRootStorage *LPROOTSTORAGE;
typedef struct tagSERIALKEYSA *LPSERIALKEYSA;
typedef struct tagSERIALKEYSW *LPSERIALKEYSW;
typedef IShellFolder *LPSHELLFOLDER;
typedef struct sockaddr_in *LPSOCKADDR_IN;
typedef struct tagSTYLESTRUCT *LPSTYLESTRUCT;
typedef struct _SYSTEM_INFO *LPSYSTEM_INFO;
typedef struct tagTBADDBITMAP *LPTBADDBITMAP;
typedef struct tagTEXTMETRICA *LPTEXTMETRICA;
typedef struct tagTEXTMETRICW *LPTEXTMETRICW;
typedef struct tagTTPOLYCURVE *LPTTPOLYCURVE;
typedef struct _USER_INFO_0 *LPUSER_INFO_0;
typedef struct _USER_INFO_1 *LPUSER_INFO_1;
typedef struct _USER_INFO_2 *LPUSER_INFO_2;
typedef struct _USER_INFO_3 *LPUSER_INFO_3;
typedef struct IViewObject2 *LPVIEWOBJECT2;
typedef struct tagWAVEINCAPSA *LPWAVEINCAPSA;
typedef struct tagWAVEINCAPSW *LPWAVEINCAPSW;
typedef struct _WNDCLASSEXA *LPWNDCLASSEXA;
typedef struct _WNDCLASSEXW *LPWNDCLASSEXW;
enum MACRO_ALERTSZ {ALERTSZ = 128,};
enum MACRO_ANYSIZE {ANYSIZE_ARRAY = 1,};
enum MACRO_ASPECTY {ASPECTY = 42,};
enum MACRO_AUXCAPS {AUXCAPS_CDAUDIO = 1,AUXCAPS_AUXIN = 2,AUXCAPS_VOLUME = 1,AUXCAPS_LRVOLUME = 2,};
enum MACRO_BATTERY {BATTERY_FLAG_HIGH = 1,BATTERY_FLAG_LOW = 2,BATTERY_FLAG_CRITICAL = 4,BATTERY_FLAG_CHARGING = 8,BATTERY_FLAG_NO_BATTERY = 128,BATTERY_FLAG_UNKNOWN = 255,BATTERY_PERCENTAGE_UNKNOWN = 255,BATTERY_LIFE_UNKNOWN = -1,};
enum MACRO_BROWSER {BROWSER_ROLE_PDC = 1,BROWSER_ROLE_BDC = 2,};
enum MACRO_BUFFLEN {BUFFLEN = 255,};
enum MACRO_CB_OKAY {CB_OKAY = 0,CB_ERR = -1,CB_ERRSPACE = -2,};
enum MACRO_CHARDEV {CHARDEV_CLOSE = 0,};
enum MACRO_CHARSET {ANSI_CHARSET = 0,DEFAULT_CHARSET = 1,SYMBOL_CHARSET = 2,SHIFTJIS_CHARSET = 128,HANGEUL_CHARSET = 129,GB2312_CHARSET = 134,CHINESEBIG5_CHARSET = 136,GREEK_CHARSET = 161,TURKISH_CHARSET = 162,HEBREW_CHARSET = 177,ARABIC_CHARSET = 178,BALTIC_CHARSET = 186,RUSSIAN_CHARSET = 204,THAI_CHARSET = 222,EASTEUROPE_CHARSET = 238,OEM_CHARSET = 255,JOHAB_CHARSET = 130,VIETNAMESE_CHARSET = 163,MAC_CHARSET = 77,};
enum MACRO_CLASS_E {CLASS_E_NOTLICENSED = -2147221230,};
enum MACRO_CONNDLG {CONNDLG_RO_PATH = 1,CONNDLG_CONN_POINT = 2,CONNDLG_USE_MRU = 4,CONNDLG_HIDE_BOX = 8,CONNDLG_PERSIST = 16,CONNDLG_NOT_PERSIST = 32,};
enum MACRO_CONNECT {CONNECT_UPDATE_PROFILE = 1,CONNECT_UPDATE_RECENT = 2,CONNECT_TEMPORARY = 4,CONNECT_INTERACTIVE = 8,CONNECT_PROMPT = 16,CONNECT_NEED_DRIVE = 32,CONNECT_REFCOUNT = 64,CONNECT_REDIRECT = 128,CONNECT_LOCALDRIVE = 256,CONNECT_CURRENT_MEDIA = 512,};
enum MACRO_CONSOLE {CONSOLE_TEXTMODE_BUFFER = 1,};
enum MACRO_CONTEXT {CONTEXT_i386 = 0x10000,CONTEXT_i486 = 0x10000,CONTEXT_CONTROL = 0x10001,CONTEXT_INTEGER = 0x10002,CONTEXT_SEGMENTS = 0x10004,CONTEXT_FLOATING_POINT = 0x10008,CONTEXT_DEBUG_REGISTERS = 0x10010,CONTEXT_FULL = 0x10007,};
enum MACRO_CONTROL {CONTROL_C_EXIT = -1073741510,};
enum MACRO_CPLPAGE {CPLPAGE_MOUSE_BUTTONS = 1,CPLPAGE_MOUSE_PTRMOTION = 2,CPLPAGE_KEYBOARD_SPEED = 1,};
enum MACRO_DECIMAL {DECIMAL_NEG = 0x80,};
enum MACRO_DEFAULT {DEFAULT_PALETTE = 15,};
enum MACRO_DEF_MIN {DEF_MIN_PWLEN = 6,DEF_PWUNIQUENESS = 5,DEF_MAX_PWHIST = 8,DEF_MAX_PWAGE = 4294967295,DEF_MIN_PWAGE = 0,DEF_FORCE_LOGOFF = 4294967295,DEF_MAX_BADPW = 0,};
enum MACRO_DESKTOP {DESKTOP_CREATEMENU = 4,DESKTOP_CREATEWINDOW = 2,DESKTOP_ENUMERATE = 64,DESKTOP_HOOKCONTROL = 8,DESKTOP_JOURNALPLAYBACK = 32,DESKTOP_JOURNALRECORD = 16,DESKTOP_READOBJECTS = 1,DESKTOP_SWITCHDESKTOP = 256,DESKTOP_WRITEOBJECTS = 128,};
enum MACRO_DMCOLOR {DMCOLOR_MONOCHROME = 1,DMCOLOR_COLOR = 2,};
enum MACRO_DMMEDIA {DMMEDIA_STANDARD = 1,DMMEDIA_TRANSPARENCY = 2,DMMEDIA_GLOSSY = 3,DMMEDIA_USER = 256,};
enum MACRO_DMPAPER {DMPAPER_FIRST = 1,DMPAPER_LETTER = 1,DMPAPER_LETTERSMALL = 2,DMPAPER_TABLOID = 3,DMPAPER_LEDGER = 4,DMPAPER_LEGAL = 5,DMPAPER_STATEMENT = 6,DMPAPER_EXECUTIVE = 7,DMPAPER_A3 = 8,DMPAPER_A4 = 9,DMPAPER_A4SMALL = 10,DMPAPER_A5 = 11,DMPAPER_B4 = 12,DMPAPER_B5 = 13,DMPAPER_FOLIO = 14,DMPAPER_QUARTO = 15,DMPAPER_10X14 = 16,DMPAPER_11X17 = 17,DMPAPER_NOTE = 18,DMPAPER_ENV_9 = 19,DMPAPER_ENV_10 = 20,DMPAPER_ENV_11 = 21,DMPAPER_ENV_12 = 22,DMPAPER_ENV_14 = 23,DMPAPER_CSHEET = 24,DMPAPER_DSHEET = 25,DMPAPER_ESHEET = 26,DMPAPER_ENV_DL = 27,DMPAPER_ENV_C5 = 28,DMPAPER_ENV_C3 = 29,DMPAPER_ENV_C4 = 30,DMPAPER_ENV_C6 = 31,DMPAPER_ENV_C65 = 32,DMPAPER_ENV_B4 = 33,DMPAPER_ENV_B5 = 34,DMPAPER_ENV_B6 = 35,DMPAPER_ENV_ITALY = 36,DMPAPER_ENV_MONARCH = 37,DMPAPER_ENV_PERSONAL = 38,DMPAPER_FANFOLD_US = 39,DMPAPER_FANFOLD_STD_GERMAN = 40,DMPAPER_FANFOLD_LGL_GERMAN = 41,DMPAPER_ISO_B4 = 42,DMPAPER_JAPANESE_POSTCARD = 43,DMPAPER_9X11 = 44,DMPAPER_10X11 = 45,DMPAPER_15X11 = 46,DMPAPER_ENV_INVITE = 47,DMPAPER_RESERVED_48 = 48,DMPAPER_RESERVED_49 = 49,DMPAPER_LETTER_EXTRA = 50,DMPAPER_LEGAL_EXTRA = 51,DMPAPER_TABLOID_EXTRA = 52,DMPAPER_A4_EXTRA = 53,DMPAPER_LETTER_TRANSVERSE = 54,DMPAPER_A4_TRANSVERSE = 55,DMPAPER_LETTER_EXTRA_TRANSVERSE = 56,DMPAPER_A_PLUS = 57,DMPAPER_B_PLUS = 58,DMPAPER_LETTER_PLUS = 59,DMPAPER_A4_PLUS = 60,DMPAPER_A5_TRANSVERSE = 61,DMPAPER_B5_TRANSVERSE = 62,DMPAPER_A3_EXTRA = 63,DMPAPER_A5_EXTRA = 64,DMPAPER_B5_EXTRA = 65,DMPAPER_A2 = 66,DMPAPER_A3_TRANSVERSE = 67,DMPAPER_A3_EXTRA_TRANSVERSE = 68,DMPAPER_LAST = 68,DMPAPER_USER = 256,};
enum MACRO_DOSOPTF {DOSOPTF_DEFAULT = 1,DOSOPTF_SUPPORTED = 2,DOSOPTF_ALWAYSUSE = 4,DOSOPTF_USESPMODE = 8,DOSOPTF_PROVIDESUMB = 16,DOSOPTF_NEEDSETUP = 32,DOSOPTF_INDOSSTART = 64,DOSOPTF_MULTIPLE = 128,};
enum MACRO_EMBDHLP {EMBDHLP_INPROC_HANDLER = 0x0,EMBDHLP_INPROC_SERVER = 0x1,EMBDHLP_CREATENOW = 0x0,EMBDHLP_DELAYCREATE = 0x10000,};
enum MACRO_ENHMETA {ENHMETA_STOCK_OBJECT = 0x80000000,};
enum MACRO_ERROR_0 {ERROR = 0,};
enum MACRO_E_FLAGS {E_FLAGS = 0x80041000,};
enum MACRO_FD_READ {FD_READ_BIT = 0,FD_WRITE_BIT = 1,FD_OOB_BIT = 2,FD_ACCEPT_BIT = 3,FD_CONNECT_BIT = 4,FD_CLOSE_BIT = 5,FD_QOS_BIT = 6,FD_GROUP_QOS_BIT = 7,FD_MAX_EVENTS = 8,FD_ALL_EVENTS = 255,};
enum MACRO_GENERIC {GENERIC_READ = 0x80000000,GENERIC_WRITE = 0x40000000,GENERIC_EXECUTE = 0x20000000,GENERIC_ALL = 0x10000000,};
enum MACRO_HBMMENU {HBMMENU_CALLBACK = -1,HBMMENU_SYSTEM = 1,HBMMENU_MBAR_RESTORE = 2,HBMMENU_MBAR_MINIMIZE = 3,HBMMENU_MBAR_CLOSE = 5,HBMMENU_MBAR_CLOSE_D = 6,HBMMENU_MBAR_MINIMIZE_D = 7,HBMMENU_POPUP_CLOSE = 8,HBMMENU_POPUP_RESTORE = 9,HBMMENU_POPUP_MAXIMIZE = 10,HBMMENU_POPUP_MINIMIZE = 11,};
enum MACRO_HOTKEYF {HOTKEYF_SHIFT = 1,HOTKEYF_CONTROL = 2,HOTKEYF_ALT = 4,HOTKEYF_EXT = 8,};
enum MACRO_HRESULT {E_UNEXPECTED = 0x8000FFFF,E_NOTIMPL = 0x80004001,E_OUTOFMEMORY = 0x8007000E,E_INVALIDARG = 0x80070057,E_NOINTERFACE = 0x80004002,E_POINTER = 0x80004003,E_HANDLE = 0x80070006,E_ABORT = 0x80004004,E_FAIL = 0x80004005,E_ACCESSDENIED = 0x80070005,CO_E_INIT_TLS = 0x80004006,CO_E_INIT_SHARED_ALLOCATOR = 0x80004007,CO_E_INIT_MEMORY_ALLOCATOR = 0x80004008,CO_E_INIT_CLASS_CACHE = 0x80004009,CO_E_INIT_RPC_CHANNEL = 0x8000400A,CO_E_INIT_TLS_SET_CHANNEL_CONTROL = 0x8000400B,CO_E_INIT_TLS_CHANNEL_CONTROL = 0x8000400C,CO_E_INIT_UNACCEPTED_USER_ALLOCATOR = 0x8000400D,CO_E_INIT_SCM_MUTEX_EXISTS = 0x8000400E,CO_E_INIT_SCM_FILE_MAPPING_EXISTS = 0x8000400F,CO_E_INIT_SCM_MAP_VIEW_OF_FILE = 0x80004010,CO_E_INIT_SCM_EXEC_FAILURE = 0x80004011,CO_E_INIT_ONLY_SINGLE_THREADED = 0x80004012,S_OK = 0x0,S_FALSE = 0x1,OLE_E_FIRST = 0x80040000,OLE_E_LAST = 0x800400FF,OLE_S_FIRST = 0x40000,OLE_S_LAST = 0x400FF,OLE_E_OLEVERB = 0x80040000,OLE_E_ADVF = 0x80040001,OLE_E_ENUM_NOMORE = 0x80040002,OLE_E_ADVISENOTSUPPORTED = 0x80040003,OLE_E_NOCONNECTION = 0x80040004,OLE_E_NOTRUNNING = 0x80040005,OLE_E_NOCACHE = 0x80040006,OLE_E_BLANK = 0x80040007,OLE_E_CLASSDIFF = 0x80040008,OLE_E_CANT_GETMONIKER = 0x80040009,OLE_E_CANT_BINDTOSOURCE = 0x8004000A,OLE_E_STATIC = 0x8004000B,OLE_E_PROMPTSAVECANCELLED = 0x8004000C,OLE_E_INVALIDRECT = 0x8004000D,OLE_E_WRONGCOMPOBJ = 0x8004000E,OLE_E_INVALIDHWND = 0x8004000F,OLE_E_NOT_INPLACEACTIVE = 0x80040010,OLE_E_CANTCONVERT = 0x80040011,OLE_E_NOSTORAGE = 0x80040012,DV_E_FORMATETC = 0x80040064,DV_E_DVTARGETDEVICE = 0x80040065,DV_E_STGMEDIUM = 0x80040066,DV_E_STATDATA = 0x80040067,DV_E_LINDEX = 0x80040068,DV_E_TYMED = 0x80040069,DV_E_CLIPFORMAT = 0x8004006A,DV_E_DVASPECT = 0x8004006B,DV_E_DVTARGETDEVICE_SIZE = 0x8004006C,DV_E_NOIVIEWOBJECT = 0x8004006D,DRAGDROP_E_FIRST = 0x80040100,DRAGDROP_E_LAST = 0x8004010F,DRAGDROP_S_FIRST = 0x40100,DRAGDROP_S_LAST = 0x4010F,DRAGDROP_E_NOTREGISTERED = 0x80040100,DRAGDROP_E_ALREADYREGISTERED = 0x80040101,DRAGDROP_E_INVALIDHWND = 0x80040102,CLASSFACTORY_E_FIRST = 0x80040110,CLASSFACTORY_E_LAST = 0x8004011F,CLASSFACTORY_S_FIRST = 0x40110,CLASSFACTORY_S_LAST = 0x4011F,CLASS_E_NOAGGREGATION = 0x80040110,CLASS_E_CLASSNOTAVAILABLE = 0x80040111,MARSHAL_E_FIRST = 0x80040120,MARSHAL_E_LAST = 0x8004012F,MARSHAL_S_FIRST = 0x40120,MARSHAL_S_LAST = 0x4012F,DATA_E_FIRST = 0x80040130,DATA_E_LAST = 0x8004013F,DATA_S_FIRST = 0x40130,DATA_S_LAST = 0x4013F,VIEW_E_FIRST = 0x80040140,VIEW_E_LAST = 0x8004014F,VIEW_S_FIRST = 0x40140,VIEW_S_LAST = 0x4014F,VIEW_E_DRAW = 0x80040140,REGDB_E_FIRST = 0x80040150,REGDB_E_LAST = 0x8004015F,REGDB_S_FIRST = 0x40150,REGDB_S_LAST = 0x4015F,REGDB_E_READREGDB = 0x80040150,REGDB_E_WRITEREGDB = 0x80040151,REGDB_E_KEYMISSING = 0x80040152,REGDB_E_INVALIDVALUE = 0x80040153,REGDB_E_CLASSNOTREG = 0x80040154,REGDB_E_IIDNOTREG = 0x80040155,CACHE_E_FIRST = 0x80040170,CACHE_E_LAST = 0x8004017F,CACHE_S_FIRST = 0x40170,CACHE_S_LAST = 0x4017F,CACHE_E_NOCACHE_UPDATED = 0x80040170,OLEOBJ_E_FIRST = 0x80040180,OLEOBJ_E_LAST = 0x8004018F,OLEOBJ_S_FIRST = 0x40180,OLEOBJ_S_LAST = 0x4018F,OLEOBJ_E_NOVERBS = 0x80040180,OLEOBJ_E_INVALIDVERB = 0x80040181,CLIENTSITE_E_FIRST = 0x80040190,CLIENTSITE_E_LAST = 0x8004019F,CLIENTSITE_S_FIRST = 0x40190,CLIENTSITE_S_LAST = 0x4019F,INPLACE_E_NOTUNDOABLE = 0x800401A0,INPLACE_E_NOTOOLSPACE = 0x800401A1,INPLACE_E_FIRST = 0x800401A0,INPLACE_E_LAST = 0x800401AF,INPLACE_S_FIRST = 0x401A0,INPLACE_S_LAST = 0x401AF,ENUM_E_FIRST = 0x800401B0,ENUM_E_LAST = 0x800401BF,ENUM_S_FIRST = 0x401B0,ENUM_S_LAST = 0x401BF,CONVERT10_E_FIRST = 0x800401C0,CONVERT10_E_LAST = 0x800401CF,CONVERT10_S_FIRST = 0x401C0,CONVERT10_S_LAST = 0x401CF,CONVERT10_E_OLESTREAM_GET = 0x800401C0,CONVERT10_E_OLESTREAM_PUT = 0x800401C1,CONVERT10_E_OLESTREAM_FMT = 0x800401C2,CONVERT10_E_OLESTREAM_BITMAP_TO_DIB = 0x800401C3,CONVERT10_E_STG_FMT = 0x800401C4,CONVERT10_E_STG_NO_STD_STREAM = 0x800401C5,CONVERT10_E_STG_DIB_TO_BITMAP = 0x800401C6,CLIPBRD_E_FIRST = 0x800401D0,CLIPBRD_E_LAST = 0x800401DF,CLIPBRD_S_FIRST = 0x401D0,CLIPBRD_S_LAST = 0x401DF,CLIPBRD_E_CANT_OPEN = 0x800401D0,CLIPBRD_E_CANT_EMPTY = 0x800401D1,CLIPBRD_E_CANT_SET = 0x800401D2,CLIPBRD_E_BAD_DATA = 0x800401D3,CLIPBRD_E_CANT_CLOSE = 0x800401D4,MK_E_FIRST = 0x800401E0,MK_E_LAST = 0x800401EF,MK_S_FIRST = 0x401E0,MK_S_LAST = 0x401EF,MK_E_CONNECTMANUALLY = 0x800401E0,MK_E_EXCEEDEDDEADLINE = 0x800401E1,MK_E_NEEDGENERIC = 0x800401E2,MK_E_UNAVAILABLE = 0x800401E3,MK_E_SYNTAX = 0x800401E4,MK_E_NOOBJECT = 0x800401E5,MK_E_INVALIDEXTENSION = 0x800401E6,MK_E_INTERMEDIATEINTERFACENOTSUPPORTED = 0x800401E7,MK_E_NOTBINDABLE = 0x800401E8,MK_E_NOTBOUND = 0x800401E9,MK_E_CANTOPENFILE = 0x800401EA,MK_E_MUSTBOTHERUSER = 0x800401EB,MK_E_NOINVERSE = 0x800401EC,MK_E_NOSTORAGE = 0x800401ED,MK_E_NOPREFIX = 0x800401EE,MK_E_ENUMERATION_FAILED = 0x800401EF,CO_E_FIRST = 0x800401F0,CO_E_LAST = 0x800401FF,CO_S_FIRST = 0x401F0,CO_S_LAST = 0x401FF,CO_E_NOTINITIALIZED = 0x800401F0,CO_E_ALREADYINITIALIZED = 0x800401F1,CO_E_CANTDETERMINECLASS = 0x800401F2,CO_E_CLASSSTRING = 0x800401F3,CO_E_IIDSTRING = 0x800401F4,CO_E_APPNOTFOUND = 0x800401F5,CO_E_APPSINGLEUSE = 0x800401F6,CO_E_ERRORINAPP = 0x800401F7,CO_E_DLLNOTFOUND = 0x800401F8,CO_E_ERRORINDLL = 0x800401F9,CO_E_WRONGOSFORAPP = 0x800401FA,CO_E_OBJNOTREG = 0x800401FB,CO_E_OBJISREG = 0x800401FC,CO_E_OBJNOTCONNECTED = 0x800401FD,CO_E_APPDIDNTREG = 0x800401FE,CO_E_RELEASED = 0x800401FF,OLE_S_USEREG = 0x40000,OLE_S_STATIC = 0x40001,OLE_S_MAC_CLIPFORMAT = 0x40002,DRAGDROP_S_DROP = 0x40100,DRAGDROP_S_CANCEL = 0x40101,DRAGDROP_S_USEDEFAULTCURSORS = 0x40102,DATA_S_SAMEFORMATETC = 0x40130,VIEW_S_ALREADY_FROZEN = 0x40140,CACHE_S_FORMATETC_NOTSUPPORTED = 0x40170,CACHE_S_SAMECACHE = 0x40171,CACHE_S_SOMECACHES_NOTUPDATED = 0x40172,OLEOBJ_S_INVALIDVERB = 0x40180,OLEOBJ_S_CANNOT_DOVERB_NOW = 0x40181,OLEOBJ_S_INVALIDHWND = 0x40182,INPLACE_S_TRUNCATED = 0x401A0,CONVERT10_S_NO_PRESENTATION = 0x401C0,MK_S_REDUCED_TO_SELF = 0x401E2,MK_S_ME = 0x401E4,MK_S_HIM = 0x401E5,MK_S_US = 0x401E6,MK_S_MONIKERALREADYREGISTERED = 0x401E7,CO_E_CLASS_CREATE_FAILED = 0x80080001,CO_E_SCM_ERROR = 0x80080002,CO_E_SCM_RPC_FAILURE = 0x80080003,CO_E_BAD_PATH = 0x80080004,CO_E_SERVER_EXEC_FAILURE = 0x80080005,CO_E_OBJSRV_RPC_FAILURE = 0x80080006,MK_E_NO_NORMALIZED = 0x80080007,CO_E_SERVER_STOPPING = 0x80080008,MEM_E_INVALID_ROOT = 0x80080009,MEM_E_INVALID_LINK = 0x80080010,MEM_E_INVALID_SIZE = 0x80080011,DISP_E_UNKNOWNINTERFACE = 0x80020001,DISP_E_MEMBERNOTFOUND = 0x80020003,DISP_E_PARAMNOTFOUND = 0x80020004,DISP_E_TYPEMISMATCH = 0x80020005,DISP_E_UNKNOWNNAME = 0x80020006,DISP_E_NONAMEDARGS = 0x80020007,DISP_E_BADVARTYPE = 0x80020008,DISP_E_EXCEPTION = 0x80020009,DISP_E_OVERFLOW = 0x8002000A,DISP_E_BADINDEX = 0x8002000B,DISP_E_UNKNOWNLCID = 0x8002000C,DISP_E_ARRAYISLOCKED = 0x8002000D,DISP_E_BADPARAMCOUNT = 0x8002000E,DISP_E_PARAMNOTOPTIONAL = 0x8002000F,DISP_E_BADCALLEE = 0x80020010,DISP_E_NOTACOLLECTION = 0x80020011,TYPE_E_BUFFERTOOSMALL = 0x80028016,TYPE_E_INVDATAREAD = 0x80028018,TYPE_E_UNSUPFORMAT = 0x80028019,TYPE_E_REGISTRYACCESS = 0x8002801C,TYPE_E_LIBNOTREGISTERED = 0x8002801D,TYPE_E_UNDEFINEDTYPE = 0x80028027,TYPE_E_QUALIFIEDNAMEDISALLOWED = 0x80028028,TYPE_E_INVALIDSTATE = 0x80028029,TYPE_E_WRONGTYPEKIND = 0x8002802A,TYPE_E_ELEMENTNOTFOUND = 0x8002802B,TYPE_E_AMBIGUOUSNAME = 0x8002802C,TYPE_E_NAMECONFLICT = 0x8002802D,TYPE_E_UNKNOWNLCID = 0x8002802E,TYPE_E_DLLFUNCTIONNOTFOUND = 0x8002802F,TYPE_E_BADMODULEKIND = 0x800288BD,TYPE_E_SIZETOOBIG = 0x800288C5,TYPE_E_DUPLICATEID = 0x800288C6,TYPE_E_INVALIDID = 0x800288CF,TYPE_E_TYPEMISMATCH = 0x80028CA0,TYPE_E_OUTOFBOUNDS = 0x80028CA1,TYPE_E_IOERROR = 0x80028CA2,TYPE_E_CANTCREATETMPFILE = 0x80028CA3,TYPE_E_CANTLOADLIBRARY = 0x80029C4A,TYPE_E_INCONSISTENTPROPFUNCS = 0x80029C83,TYPE_E_CIRCULARTYPE = 0x80029C84,STG_E_INVALIDFUNCTION = 0x80030001,STG_E_FILENOTFOUND = 0x80030002,STG_E_PATHNOTFOUND = 0x80030003,STG_E_TOOMANYOPENFILES = 0x80030004,STG_E_ACCESSDENIED = 0x80030005,STG_E_INVALIDHANDLE = 0x80030006,STG_E_INSUFFICIENTMEMORY = 0x80030008,STG_E_INVALIDPOINTER = 0x80030009,STG_E_NOMOREFILES = 0x80030012,STG_E_DISKISWRITEPROTECTED = 0x80030013,STG_E_SEEKERROR = 0x80030019,STG_E_WRITEFAULT = 0x8003001D,STG_E_READFAULT = 0x8003001E,STG_E_SHAREVIOLATION = 0x80030020,STG_E_LOCKVIOLATION = 0x80030021,STG_E_FILEALREADYEXISTS = 0x80030050,STG_E_INVALIDPARAMETER = 0x80030057,STG_E_MEDIUMFULL = 0x80030070,STG_E_ABNORMALAPIEXIT = 0x800300FA,STG_E_INVALIDHEADER = 0x800300FB,STG_E_INVALIDNAME = 0x800300FC,STG_E_UNKNOWN = 0x800300FD,STG_E_UNIMPLEMENTEDFUNCTION = 0x800300FE,STG_E_INVALIDFLAG = 0x800300FF,STG_E_INUSE = 0x80030100,STG_E_NOTCURRENT = 0x80030101,STG_E_REVERTED = 0x80030102,STG_E_CANTSAVE = 0x80030103,STG_E_OLDFORMAT = 0x80030104,STG_E_OLDDLL = 0x80030105,STG_E_SHAREREQUIRED = 0x80030106,STG_E_NOTFILEBASEDSTORAGE = 0x80030107,STG_E_EXTANTMARSHALLINGS = 0x80030108,STG_S_CONVERTED = 0x30200,RPC_E_CALL_REJECTED = 0x80010001,RPC_E_CALL_CANCELED = 0x80010002,RPC_E_CANTPOST_INSENDCALL = 0x80010003,RPC_E_CANTCALLOUT_INASYNCCALL = 0x80010004,RPC_E_CANTCALLOUT_INEXTERNALCALL = 0x80010005,RPC_E_CONNECTION_TERMINATED = 0x80010006,RPC_E_SERVER_DIED = 0x80010007,RPC_E_CLIENT_DIED = 0x80010008,RPC_E_INVALID_DATAPACKET = 0x80010009,RPC_E_CANTTRANSMIT_CALL = 0x8001000A,RPC_E_CLIENT_CANTMARSHAL_DATA = 0x8001000B,RPC_E_CLIENT_CANTUNMARSHAL_DATA = 0x8001000C,RPC_E_SERVER_CANTMARSHAL_DATA = 0x8001000D,RPC_E_SERVER_CANTUNMARSHAL_DATA = 0x8001000E,RPC_E_INVALID_DATA = 0x8001000F,RPC_E_INVALID_PARAMETER = 0x80010010,RPC_E_CANTCALLOUT_AGAIN = 0x80010011,RPC_E_SERVER_DIED_DNE = 0x80010012,RPC_E_SYS_CALL_FAILED = 0x80010100,RPC_E_OUT_OF_RESOURCES = 0x80010101,RPC_E_ATTEMPTED_MULTITHREAD = 0x80010102,RPC_E_NOT_REGISTERED = 0x80010103,RPC_E_FAULT = 0x80010104,RPC_E_SERVERFAULT = 0x80010105,RPC_E_CHANGED_MODE = 0x80010106,RPC_E_INVALIDMETHOD = 0x80010107,RPC_E_DISCONNECTED = 0x80010108,RPC_E_RETRY = 0x80010109,RPC_E_SERVERCALL_RETRYLATER = 0x8001010A,RPC_E_SERVERCALL_REJECTED = 0x8001010B,RPC_E_INVALID_CALLDATA = 0x8001010C,RPC_E_CANTCALLOUT_ININPUTSYNCCALL = 0x8001010D,RPC_E_WRONG_THREAD = 0x8001010E,RPC_E_THREAD_NOT_INIT = 0x8001010F,RPC_E_UNEXPECTED = 0x8001FFFF,};
enum MACRO_HTCLOSE {HTCLOSE = 20,};
enum MACRO_HTERROR {HTERROR = -2,};
enum MACRO_HTRIGHT {HTRIGHT = 11,};
enum MACRO_IDABORT {IDABORT = 3,};
enum MACRO_IDLFLAG {IDLFLAG_NONE = 0,IDLFLAG_FIN = 1,IDLFLAG_FOUT = 2,IDLFLAG_FLCID = 4,IDLFLAG_FRETVAL = 8,};
enum MACRO_IMPLINK {IMPLINK_IP = 155,IMPLINK_LOWEXPER = 156,IMPLINK_HIGHEXPER = 158,};
enum MACRO_INVALID {INVALID_HANDLE_VALUE = -1,};
enum MACRO_IOCPARM {IOCPARM_MASK = 0x7F,};
enum MACRO_IPPROTO {IPPROTO_IP = 0,IPPROTO_ICMP = 1,IPPROTO_GGP = 2,IPPROTO_TCP = 6,IPPROTO_PUP = 12,IPPROTO_UDP = 17,IPPROTO_IDP = 22,IPPROTO_ND = 77,IPPROTO_RAW = 255,IPPROTO_MAX = 256,};
enum MACRO_JOB_RUN {JOB_RUN_PERIODICALLY = 1,JOB_EXEC_ERROR = 2,JOB_RUNS_TODAY = 4,JOB_ADD_CURRENT_DATE = 8,JOB_NONINTERACTIVE = 16,JOB_INPUT_FLAGS = 25,JOB_OUTPUT_FLAGS = 23,};
enum MACRO_JOYCAPS {JOYCAPS_HASZ = 1,JOYCAPS_HASR = 2,JOYCAPS_HASU = 4,JOYCAPS_HASV = 8,JOYCAPS_HASPOV = 16,JOYCAPS_POV4DIR = 32,JOYCAPS_POVCTS = 64,};
enum MACRO_LOGON32 {LOGON32_PROVIDER_DEFAULT = 0,LOGON32_PROVIDER_WINNT35 = 1,LOGON32_LOGON_INTERACTIVE = 2,LOGON32_LOGON_BATCH = 4,LOGON32_LOGON_SERVICE = 5,};
enum MACRO_LVIF_DI {LVIF_DI_SETITEM = 0x1000,};
enum MACRO_LZERROR {LZERROR_BADINHANDLE = -1,LZERROR_BADOUTHANDLE = -2,LZERROR_READ = -3,LZERROR_WRITE = -4,LZERROR_GLOBALLOC = -5,LZERROR_GLOBLOCK = -6,LZERROR_BADVALUE = -7,LZERROR_UNKNOWNALG = -8,};
enum MACRO_MAXBYTE {MAXBYTE = 0xFF,};
enum MACRO_MAXCHAR {MAXCHAR = 0x7F,MINSHORT = 0x8000,};
enum MACRO_MAXIMUM {MAXIMUM_ALLOWED = 0x2000000,};
enum MACRO_MAXLONG {MAXLONG = 0x7FFFFFFF,};
enum MACRO_MAXWORD {MAXWORD = 0xFFFF,};
enum MACRO_MAX_TAB {MAX_TAB_STOPS = 32,};
enum MACRO_MDITILE {MDITILE_SKIPDISABLED = 2,MDITILE_HORIZONTAL = 1,MDITILE_VERTICAL = 0,};
enum MACRO_MDMSPKR {MDMSPKR_OFF = 0,MDMSPKR_DIAL = 1,MDMSPKR_ON = 2,MDMSPKR_CALLSETUP = 3,};
enum MACRO_MESSAGE {MESSAGE_RESOURCE_UNICODE = 1,};
enum MACRO_MIDIERR {MIDIERR_UNPREPARED = 64,MIDIERR_STILLPLAYING = 65,MIDIERR_NOMAP = 66,MIDIERR_NOTREADY = 67,MIDIERR_NODEVICE = 68,MIDIERR_INVALIDSETUP = 69,MIDIERR_BADOPENMODE = 70,MIDIERR_DONT_CONTINUE = 71,MIDIERR_LASTERROR = 71,};
enum MACRO_MINCHAR {MINCHAR = 0x80,};
enum MACRO_MMIOERR {MMIOERR_BASE = 256,MMIOERR_FILENOTFOUND = 257,MMIOERR_OUTOFMEMORY = 258,MMIOERR_CANNOTOPEN = 259,MMIOERR_CANNOTCLOSE = 260,MMIOERR_CANNOTREAD = 261,MMIOERR_CANNOTWRITE = 262,MMIOERR_CANNOTSEEK = 263,MMIOERR_CANNOTEXPAND = 264,MMIOERR_CHUNKNOTFOUND = 265,MMIOERR_UNBUFFERED = 266,MMIOERR_PATHNOTFOUND = 267,MMIOERR_ACCESSDENIED = 268,MMIOERR_SHARINGVIOLATION = 269,MMIOERR_NETWORKERROR = 270,MMIOERR_TOOMANYOPENFILES = 271,MMIOERR_INVALIDFILE = 272,};
enum MACRO_MONITOR {APPCLASS_MONITOR = 1,XTYP_MONITOR = 33010,};
enum MACRO_MSGNAME {MSGNAME_NOT_FORWARDED = 0,MSGNAME_FORWARDED_TO = 4,MSGNAME_FORWARDED_FROM = 16,};
enum MACRO_NCBCALL {NCBCALL = 0x10,};
enum MACRO_NCBENUM {NCBENUM = 0x37,};
enum MACRO_NCBRECV {NCBRECV = 0x15,};
enum MACRO_NCBSEND {NCBSEND = 0x14,};
enum MACRO_NETBIOS {NETBIOS_NAME_LEN = 16,};
enum MACRO_NETINFO {NETINFO_DLL16 = 1,NETINFO_DISKRED = 4,NETINFO_PRINTERRED = 8,};
enum MACRO_NMPWAIT {NMPWAIT_NOWAIT = 1,NMPWAIT_WAIT_FOREVER = -1,NMPWAIT_USE_DEFAULT_WAIT = 0,};
enum MACRO_NUMPENS {NUMPENS = 18,};
enum MACRO_OLEMISC {OLEMISC_RECOMPOSEONRESIZE = 0x1,OLEMISC_ONLYICONIC = 0x2,OLEMISC_INSERTNOTREPLACE = 0x4,OLEMISC_STATIC = 0x8,OLEMISC_CANTLINKINSIDE = 0x10,OLEMISC_CANLINKBYOLE1 = 0x20,OLEMISC_ISLINKOBJECT = 0x40,OLEMISC_INSIDEOUT = 0x80,OLEMISC_ACTIVATEWHENVISIBLE = 0x100,OLEMISC_RENDERINGISDEVICEINDEPENDENT = 0x200,OLEMISC_INVISIBLEATRUNTIME = 0x400,OLEMISC_ALWAYSRUN = 0x800,OLEMISC_ACTSLIKEBUTTON = 0x1000,OLEMISC_ACTSLIKELABEL = 0x2000,OLEMISC_NOUIACTIVATE = 0x4000,OLEMISC_ALIGNABLE = 0x8000,OLEMISC_SIMPLEFRAME = 0x10000,OLEMISC_SETCLIENTSITEFIRST = 0x20000,OLEMISC_IMEMODE = 0x40000,OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,OLEMISC_WANTSTOMENUMERGE = 0x100000,OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000,};
enum MACRO_PARMNUM {PARMNUM_ALL = 0,};
enum MACRO_PATCOPY {PATCOPY = 0xF00021,};
enum MACRO_PATHLEN {PATHLEN = 256,};
enum MACRO_PERPROP {PERPROP_E_FIRST = 0x80040200,PERPROP_E_LAST = 0x8004020F,PERPROP_S_FIRST = 0x40200,PERPROP_S_LAST = 0x4020F,PERPROP_E_NOPAGEAVAILABLE = 0x80040200,};
enum MACRO_PICTURE {PICTURE_SCALABLE = 1,PICTURE_TRANSPARENT = 2,};
enum MACRO_PICTYPE {PICTYPE_UNINITIALIZED = -1,PICTYPE_NONE = 0,PICTYPE_BITMAP = 1,PICTYPE_METAFILE = 2,PICTYPE_ICON = 3,PICTYPE_ENHMETAFILE = 4,};
enum MACRO_PRESSED {RIGHT_ALT_PRESSED = 1,LEFT_ALT_PRESSED = 2,RIGHT_CTRL_PRESSED = 4,LEFT_CTRL_PRESSED = 8,SHIFT_PRESSED = 16,};
enum MACRO_PRINTER {PRINTER_NOTIFY_OPTIONS_REFRESH = 1,PRINTER_ACCESS_ADMINISTER = 4,PRINTER_ACCESS_USE = 8,PRINTER_ERROR_INFORMATION = -2147483648,PRINTER_ERROR_WARNING = 1073741824,PRINTER_ERROR_SEVERE = 536870912,PRINTER_ERROR_OUTOFPAPER = 1,PRINTER_ERROR_JAM = 2,PRINTER_ERROR_OUTOFTONER = 4,PRINTER_CONTROL_PAUSE = 1,PRINTER_CONTROL_RESUME = 2,PRINTER_CONTROL_PURGE = 3,PRINTER_CONTROL_SET_STATUS = 4,PRINTER_STATUS_PAUSED = 1,PRINTER_STATUS_ERROR = 2,PRINTER_STATUS_PENDING_DELETION = 4,PRINTER_STATUS_PAPER_JAM = 8,PRINTER_STATUS_PAPER_OUT = 16,PRINTER_STATUS_MANUAL_FEED = 32,PRINTER_STATUS_PAPER_PROBLEM = 64,PRINTER_STATUS_OFFLINE = 128,PRINTER_STATUS_IO_ACTIVE = 256,PRINTER_STATUS_BUSY = 512,PRINTER_STATUS_PRINTING = 1024,PRINTER_STATUS_OUTPUT_BIN_FULL = 2048,PRINTER_STATUS_NOT_AVAILABLE = 4096,PRINTER_STATUS_WAITING = 8192,PRINTER_STATUS_PROCESSING = 16384,PRINTER_STATUS_INITIALIZING = 32768,PRINTER_STATUS_WARMING_UP = 65536,PRINTER_STATUS_TONER_LOW = 131072,PRINTER_STATUS_NO_TONER = 262144,PRINTER_STATUS_PAGE_PUNT = 524288,PRINTER_STATUS_USER_INTERVENTION = 1048576,PRINTER_STATUS_OUT_OF_MEMORY = 2097152,PRINTER_STATUS_DOOR_OPEN = 4194304,PRINTER_STATUS_SERVER_UNKNOWN = 8388608,PRINTER_STATUS_POWER_SAVE = 16777216,PRINTER_ATTRIBUTE_QUEUED = 1,PRINTER_ATTRIBUTE_DIRECT = 2,PRINTER_ATTRIBUTE_DEFAULT = 4,PRINTER_ATTRIBUTE_SHARED = 8,PRINTER_ATTRIBUTE_NETWORK = 16,PRINTER_ATTRIBUTE_HIDDEN = 32,PRINTER_ATTRIBUTE_LOCAL = 64,PRINTER_ATTRIBUTE_ENABLE_DEVQ = 128,PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS = 256,PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST = 512,PRINTER_ATTRIBUTE_WORK_OFFLINE = 1024,PRINTER_ATTRIBUTE_ENABLE_BIDI = 2048,PRINTER_ATTRIBUTE_RAW_ONLY = 4096,PRINTER_ATTRIBUTE_PUBLISHED = 8192,PRINTER_ENUM_DEFAULT = 1,PRINTER_ENUM_LOCAL = 2,PRINTER_ENUM_CONNECTIONS = 4,PRINTER_ENUM_FAVORITE = 4,PRINTER_ENUM_NAME = 8,PRINTER_ENUM_REMOTE = 16,PRINTER_ENUM_SHARED = 32,PRINTER_ENUM_NETWORK = 64,PRINTER_ENUM_EXPAND = 16384,PRINTER_ENUM_CONTAINER = 32768,PRINTER_ENUM_ICONMASK = 16711680,PRINTER_ENUM_ICON1 = 65536,PRINTER_ENUM_ICON2 = 131072,PRINTER_ENUM_ICON3 = 262144,PRINTER_ENUM_ICON4 = 524288,PRINTER_ENUM_ICON5 = 1048576,PRINTER_ENUM_ICON6 = 2097152,PRINTER_ENUM_ICON7 = 4194304,PRINTER_ENUM_ICON8 = 8388608,PRINTER_NOTIFY_TYPE = 0,PRINTER_NOTIFY_FIELD_SERVER_NAME = 0,PRINTER_NOTIFY_FIELD_PRINTER_NAME = 1,PRINTER_NOTIFY_FIELD_SHARE_NAME = 2,PRINTER_NOTIFY_FIELD_PORT_NAME = 3,PRINTER_NOTIFY_FIELD_DRIVER_NAME = 4,PRINTER_NOTIFY_FIELD_COMMENT = 5,PRINTER_NOTIFY_FIELD_LOCATION = 6,PRINTER_NOTIFY_FIELD_DEVMODE = 7,PRINTER_NOTIFY_FIELD_SEPFILE = 8,PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR = 9,PRINTER_NOTIFY_FIELD_PARAMETERS = 10,PRINTER_NOTIFY_FIELD_DATATYPE = 11,PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR = 12,PRINTER_NOTIFY_FIELD_ATTRIBUTES = 13,PRINTER_NOTIFY_FIELD_PRIORITY = 14,PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY = 15,PRINTER_NOTIFY_FIELD_START_TIME = 16,PRINTER_NOTIFY_FIELD_UNTIL_TIME = 17,PRINTER_NOTIFY_FIELD_STATUS = 18,PRINTER_NOTIFY_FIELD_STATUS_STRING = 19,PRINTER_NOTIFY_FIELD_CJOBS = 20,PRINTER_NOTIFY_FIELD_AVERAGE_PPM = 21,PRINTER_NOTIFY_FIELD_TOTAL_PAGES = 22,PRINTER_NOTIFY_FIELD_PAGES_PRINTED = 23,PRINTER_NOTIFY_FIELD_TOTAL_BYTES = 24,PRINTER_NOTIFY_FIELD_BYTES_PRINTED = 25,PRINTER_CHANGE_ADD_PRINTER = 1,PRINTER_CHANGE_SET_PRINTER = 2,PRINTER_CHANGE_DELETE_PRINTER = 4,PRINTER_CHANGE_FAILED_CONNECTION_PRINTER = 8,PRINTER_CHANGE_PRINTER = 255,PRINTER_CHANGE_ADD_JOB = 256,PRINTER_CHANGE_SET_JOB = 512,PRINTER_CHANGE_DELETE_JOB = 1024,PRINTER_CHANGE_WRITE_JOB = 2048,PRINTER_CHANGE_JOB = 65280,PRINTER_CHANGE_ADD_FORM = 65536,PRINTER_CHANGE_SET_FORM = 131072,PRINTER_CHANGE_DELETE_FORM = 262144,PRINTER_CHANGE_FORM = 458752,PRINTER_CHANGE_ADD_PORT = 1048576,PRINTER_CHANGE_CONFIGURE_PORT = 2097152,PRINTER_CHANGE_DELETE_PORT = 4194304,PRINTER_CHANGE_PORT = 7340032,PRINTER_CHANGE_ADD_PRINT_PROCESSOR = 16777216,PRINTER_CHANGE_DELETE_PRINT_PROCESSOR = 67108864,PRINTER_CHANGE_PRINT_PROCESSOR = 117440512,PRINTER_CHANGE_ADD_PRINTER_DRIVER = 268435456,PRINTER_CHANGE_SET_PRINTER_DRIVER = 536870912,PRINTER_CHANGE_DELETE_PRINTER_DRIVER = 1073741824,PRINTER_CHANGE_PRINTER_DRIVER = 1879048192,PRINTER_CHANGE_TIMEOUT = -2147483648,PRINTER_CHANGE_ALL = 2004353023,PRINTER_NOTIFY_INFO_DISCARDED = 1,PRINTER_ALL_ACCESS = 983052,PRINTER_READ = 131080,PRINTER_WRITE = 131080,PRINTER_EXECUTE = 131080,};
enum MACRO_PROCESS {PROCESS_TERMINATE = 1,PROCESS_CREATE_THREAD = 2,PROCESS_VM_OPERATION = 8,PROCESS_VM_READ = 16,PROCESS_VM_WRITE = 32,PROCESS_DUP_HANDLE = 64,PROCESS_CREATE_PROCESS = 128,PROCESS_SET_QUOTA = 256,PROCESS_SET_INFORMATION = 512,PROCESS_QUERY_INFORMATION = 1024,PROCESS_ALL_ACCESS = 2035711,};
enum MACRO_PROFILE {PROFILE_USER = 0x10000000,PROFILE_KERNEL = 0x20000000,PROFILE_SERVER = 0x40000000,};
enum MACRO_QUALITY {DEFAULT_QUALITY = 0,DRAFT_QUALITY = 1,PROOF_QUALITY = 2,NONANTIALIASED_QUALITY = 3,ANTIALIASED_QUALITY = 4,};
enum MACRO_SCS_CAP {SCS_CAP_COMPSTR = 1,SCS_CAP_MAKEREAD = 2,};
enum MACRO_SECTION {SECTION_EXTEND_SIZE = 16,SECTION_MAP_READ = 4,SECTION_MAP_WRITE = 2,SECTION_QUERY = 1,SECTION_ALL_ACCESS = 983071,};
enum MACRO_SELFREG {SELFREG_E_FIRST = 0x80040200,SELFREG_E_LAST = 0x8004020F,SELFREG_S_FIRST = 0x40200,SELFREG_S_LAST = 0x4020F,SELFREG_E_TYPELIB = 0x80040200,SELFREG_E_CLASS = 0x80040201,};
enum MACRO_SERVICE {SERVICE_KERNEL_DRIVER = 1,SERVICE_FILE_SYSTEM_DRIVER = 2,SERVICE_ADAPTER = 4,SERVICE_RECOGNIZER_DRIVER = 8,SERVICE_DRIVER = 11,SERVICE_WIN32_OWN_PROCESS = 16,SERVICE_WIN32_SHARE_PROCESS = 32,SERVICE_WIN32 = 48,SERVICE_INTERACTIVE_PROCESS = 256,SERVICE_TYPE_ALL = 319,SERVICE_BOOT_START = 0,SERVICE_SYSTEM_START = 1,SERVICE_AUTO_START = 2,SERVICE_DEMAND_START = 3,SERVICE_DISABLED = 4,SERVICE_ERROR_IGNORE = 0,SERVICE_ERROR_NORMAL = 1,SERVICE_ERROR_SEVERE = 2,SERVICE_ERROR_CRITICAL = 3,};
enum MACRO_SESSION {SESSION_ESTABLISHED = 0x3,};
enum MACRO_SETXOFF {SETXOFF = 1,SETXON = 2,SETBREAK = 8,};
enum MACRO_SET_ARC {SET_ARC_DIRECTION = 4102,SET_BACKGROUND_COLOR = 4103,SET_POLY_MODE = 4104,SET_SCREEN_ANGLE = 4105,SET_SPREAD = 4106,};
enum MACRO_SHGDFIL {SHGDFIL_FINDDATA = 1,SHGDFIL_NETRESOURCE = 2,SHGDFIL_DESCRIPTIONID = 3,};
enum MACRO_SHPWLEN {SHPWLEN = 8,};
enum MACRO_SRCCOPY {SRCCOPY = 0xCC0020,};
enum MACRO_STD_CUT {STD_CUT = 0,STD_COPY = 1,STD_PASTE = 2,STD_UNDO = 3,STD_REDOW = 4,STD_DELETE = 5,STD_FILENEW = 6,STD_FILEOPEN = 7,STD_FILESAVE = 8,STD_PRINTPRE = 9,STD_PROPERTIES = 10,STD_HELP = 11,STD_FIND = 12,STD_REPLACE = 13,STD_PRINT = 14,};
enum MACRO_STRETCH {STRETCH_ANDSCANS = 1,STRETCH_DELETESCANS = 3,STRETCH_HALFTONE = 4,STRETCH_ORSCANS = 2,};
enum MACRO_SUBLANG {SUBLANG_CHINESE_SIMPLIFIED = 2,SUBLANG_CHINESE_TRADITIONAL = 1,SUBLANG_CHINESE_HONGKONG = 3,SUBLANG_CHINESE_SINGAPORE = 4,SUBLANG_DEFAULT = 1,SUBLANG_DUTCH = 1,SUBLANG_DUTCH_BELGIAN = 2,SUBLANG_ENGLISH_AUS = 3,SUBLANG_ENGLISH_CAN = 4,SUBLANG_ENGLISH_EIRE = 6,SUBLANG_ENGLISH_NZ = 5,SUBLANG_ENGLISH_UK = 2,SUBLANG_ENGLISH_US = 1,SUBLANG_FRENCH = 1,SUBLANG_FRENCH_BELGIAN = 2,SUBLANG_FRENCH_CANADIAN = 3,SUBLANG_FRENCH_SWISS = 4,SUBLANG_GERMAN = 1,SUBLANG_GERMAN_AUSTRIAN = 3,SUBLANG_GERMAN_SWISS = 2,SUBLANG_ITALIAN = 1,SUBLANG_ITALIAN_SWISS = 2,SUBLANG_NEUTRAL = 0,SUBLANG_NORWEGIAN_BOKMAL = 1,SUBLANG_NORWEGIAN_NYNORSK = 2,SUBLANG_PORTUGUESE = 2,SUBLANG_PORTUGUESE_BRAZILIAN = 1,SUBLANG_SPANISH = 1,SUBLANG_SPANISH_MEXICAN = 2,SUBLANG_SPANISH_MODERN = 3,SUBLANG_SYS_DEFAULT = 2,};
enum MACRO_SUCCESS {SUCCESS_SUCCESS = 0,};
enum MACRO_SV_TYPE {SV_TYPE_WORKSTATION = 1,SV_TYPE_SERVER = 2,SV_TYPE_SQLSERVER = 4,SV_TYPE_DOMAIN_CTRL = 8,SV_TYPE_DOMAIN_BAKCTRL = 16,SV_TYPE_TIME_SOURCE = 32,SV_TYPE_AFP = 64,SV_TYPE_NOVELL = 128,SV_TYPE_DOMAIN_MEMBER = 256,SV_TYPE_PRINTQ_SERVER = 512,SV_TYPE_DIALIN_SERVER = 1024,SV_TYPE_XENIX_SERVER = 2048,SV_TYPE_SERVER_UNIX = 2048,SV_TYPE_NT = 4096,SV_TYPE_WFW = 8192,SV_TYPE_SERVER_MFPN = 16384,SV_TYPE_SERVER_NT = 32768,SV_TYPE_POTENTIAL_BROWSER = 65536,SV_TYPE_BACKUP_BROWSER = 131072,SV_TYPE_MASTER_BROWSER = 262144,SV_TYPE_DOMAIN_MASTER = 524288,SV_TYPE_SERVER_OSF = 1048576,SV_TYPE_SERVER_VMS = 2097152,SV_TYPE_WINDOWS = 4194304,SV_TYPE_ALTERNATE_XPORT = 536870912,SV_TYPE_LOCAL_LIST_ONLY = 1073741824,SV_TYPE_DOMAIN_ENUM = -2147483648,SV_TYPE_ALL = -1,SV_NODISC = -1,SV_USERSECURITY = 1,SV_SHARESECURITY = 0,SV_HIDDEN = 1,SV_VISIBLE = 0,SV_PLATFORM_ID_PARMNUM = 101,SV_NAME_PARMNUM = 102,SV_VERSION_MAJOR_PARMNUM = 103,SV_VERSION_MINOR_PARMNUM = 104,SV_TYPE_PARMNUM = 105,SV_COMMENT_PARMNUM = 5,SV_USERS_PARMNUM = 107,SV_DISC_PARMNUM = 10,SV_HIDDEN_PARMNUM = 16,SV_ANNOUNCE_PARMNUM = 17,SV_ANNDELTA_PARMNUM = 18,SV_USERPATH_PARMNUM = 112,SV_ULIST_MTIME_PARMNUM = 401,SV_GLIST_MTIME_PARMNUM = 402,SV_ALIST_MTIME_PARMNUM = 403,SV_ALERTS_PARMNUM = 11,SV_SECURITY_PARMNUM = 405,SV_NUMADMIN_PARMNUM = 406,SV_LANMASK_PARMNUM = 407,SV_GUESTACC_PARMNUM = 408,SV_CHDEVQ_PARMNUM = 410,SV_CHDEVJOBS_PARMNUM = 411,SV_CONNECTIONS_PARMNUM = 412,SV_SHARES_PARMNUM = 413,SV_OPENFILES_PARMNUM = 414,SV_SESSREQS_PARMNUM = 417,SV_ACTIVELOCKS_PARMNUM = 419,SV_NUMREQBUF_PARMNUM = 420,SV_NUMBIGBUF_PARMNUM = 422,SV_NUMFILETASKS_PARMNUM = 423,SV_ALERTSCHED_PARMNUM = 37,SV_ERRORALERT_PARMNUM = 38,SV_LOGONALERT_PARMNUM = 39,SV_ACCESSALERT_PARMNUM = 40,SV_DISKALERT_PARMNUM = 41,SV_NETIOALERT_PARMNUM = 42,SV_MAXAUDITSZ_PARMNUM = 43,SV_SRVHEURISTICS_PARMNUM = 431,SV_SESSOPENS_PARMNUM = 501,SV_SESSVCS_PARMNUM = 502,SV_OPENSEARCH_PARMNUM = 503,SV_SIZREQBUF_PARMNUM = 504,SV_INITWORKITEMS_PARMNUM = 505,SV_MAXWORKITEMS_PARMNUM = 506,SV_RAWWORKITEMS_PARMNUM = 507,SV_IRPSTACKSIZE_PARMNUM = 508,SV_MAXRAWBUFLEN_PARMNUM = 509,SV_SESSUSERS_PARMNUM = 510,SV_SESSCONNS_PARMNUM = 511,SV_MAXNONPAGEDMEMORYUSAGE_PARMNUM = 512,SV_MAXPAGEDMEMORYUSAGE_PARMNUM = 513,SV_ENABLESOFTCOMPAT_PARMNUM = 514,SV_ENABLEFORCEDLOGOFF_PARMNUM = 515,SV_TIMESOURCE_PARMNUM = 516,SV_ACCEPTDOWNLEVELAPIS_PARMNUM = 517,SV_LMANNOUNCE_PARMNUM = 518,SV_DOMAIN_PARMNUM = 519,SV_MAXCOPYREADLEN_PARMNUM = 520,SV_MAXCOPYWRITELEN_PARMNUM = 521,SV_MINKEEPSEARCH_PARMNUM = 522,SV_MAXKEEPSEARCH_PARMNUM = 523,SV_MINKEEPCOMPLSEARCH_PARMNUM = 524,SV_MAXKEEPCOMPLSEARCH_PARMNUM = 525,SV_THREADCOUNTADD_PARMNUM = 526,SV_NUMBLOCKTHREADS_PARMNUM = 527,SV_SCAVTIMEOUT_PARMNUM = 528,SV_MINRCVQUEUE_PARMNUM = 529,SV_MINFREEWORKITEMS_PARMNUM = 530,SV_XACTMEMSIZE_PARMNUM = 531,SV_THREADPRIORITY_PARMNUM = 532,SV_MAXMPXCT_PARMNUM = 533,SV_OPLOCKBREAKWAIT_PARMNUM = 534,SV_OPLOCKBREAKRESPONSEWAIT_PARMNUM = 535,SV_ENABLEOPLOCKS_PARMNUM = 536,SV_ENABLEOPLOCKFORCECLOSE_PARMNUM = 537,SV_ENABLEFCBOPENS_PARMNUM = 538,SV_ENABLERAW_PARMNUM = 539,SV_ENABLESHAREDNETDRIVES_PARMNUM = 540,SV_MINFREECONNECTIONS_PARMNUM = 541,SV_MAXFREECONNECTIONS_PARMNUM = 542,SV_INITSESSTABLE_PARMNUM = 543,SV_INITCONNTABLE_PARMNUM = 544,SV_INITFILETABLE_PARMNUM = 545,SV_INITSEARCHTABLE_PARMNUM = 546,SV_ALERTSCHEDULE_PARMNUM = 547,SV_ERRORTHRESHOLD_PARMNUM = 548,SV_NETWORKERRORTHRESHOLD_PARMNUM = 549,SV_DISKSPACETHRESHOLD_PARMNUM = 550,SV_MAXLINKDELAY_PARMNUM = 552,SV_MINLINKTHROUGHPUT_PARMNUM = 553,SV_LINKINFOVALIDTIME_PARMNUM = 554,SV_SCAVQOSINFOUPDATETIME_PARMNUM = 555,SV_MAXWORKITEMIDLETIME_PARMNUM = 556,SV_MAXRAWWORKITEMS_PARMNUM = 557,SV_PRODUCTTYPE_PARMNUM = 560,SV_SERVERSIZE_PARMNUM = 561,SV_CONNECTIONLESSAUTODISC_PARMNUM = 562,SV_SHARINGVIOLATIONRETRIES_PARMNUM = 563,SV_SHARINGVIOLATIONDELAY_PARMNUM = 564,SV_MAXGLOBALOPENSEARCH_PARMNUM = 565,SV_REMOVEDUPLICATESEARCHES_PARMNUM = 566,SV_LOCKVIOLATIONRETRIES_PARMNUM = 567,SV_LOCKVIOLATIONOFFSET_PARMNUM = 568,SV_LOCKVIOLATIONDELAY_PARMNUM = 569,SV_MDLREADSWITCHOVER_PARMNUM = 570,SV_CACHEDOPENLIMIT_PARMNUM = 571,SV_CRITICALTHREADS_PARMNUM = 572,SV_RESTRICTNULLSESSACCESS_PARMNUM = 573,SV_ENABLEWFW311DIRECTIPX_PARMNUM = 574,SV_OTHERQUEUEAFFINITY_PARMNUM = 575,SV_QUEUESAMPLESECS_PARMNUM = 576,SV_BALANCECOUNT_PARMNUM = 577,SV_PREFERREDAFFINITY_PARMNUM = 578,SV_MAXFREERFCBS_PARMNUM = 579,SV_MAXFREEMFCBS_PARMNUM = 580,SV_MAXFREELFCBS_PARMNUM = 581,SV_MAXFREEPAGEDPOOLCHUNKS_PARMNUM = 582,SV_MINPAGEDPOOLCHUNKSIZE_PARMNUM = 583,SV_MAXPAGEDPOOLCHUNKSIZE_PARMNUM = 584,SV_SENDSFROMPREFERREDPROCESSOR_PARMNUM = 585,SV_MAXTHREADSPERQUEUE_PARMNUM = 586,SV_COMMENT_INFOLEVEL = 1005,SV_USERS_INFOLEVEL = 1107,SV_DISC_INFOLEVEL = 1010,SV_HIDDEN_INFOLEVEL = 1016,SV_ANNOUNCE_INFOLEVEL = 1017,SV_ANNDELTA_INFOLEVEL = 1018,SV_SESSOPENS_INFOLEVEL = 1501,SV_SESSVCS_INFOLEVEL = 1502,SV_OPENSEARCH_INFOLEVEL = 1503,SV_MAXWORKITEMS_INFOLEVEL = 1506,SV_MAXRAWBUFLEN_INFOLEVEL = 1509,SV_SESSUSERS_INFOLEVEL = 1510,SV_SESSCONNS_INFOLEVEL = 1511,SV_MAXNONPAGEDMEMORYUSAGE_INFOLEVEL = 1512,SV_MAXPAGEDMEMORYUSAGE_INFOLEVEL = 1513,SV_ENABLESOFTCOMPAT_INFOLEVEL = 1514,SV_ENABLEFORCEDLOGOFF_INFOLEVEL = 1515,SV_TIMESOURCE_INFOLEVEL = 1516,SV_LMANNOUNCE_INFOLEVEL = 1518,SV_MAXCOPYREADLEN_INFOLEVEL = 1520,SV_MAXCOPYWRITELEN_INFOLEVEL = 1521,SV_MINKEEPSEARCH_INFOLEVEL = 1522,SV_MAXKEEPSEARCH_INFOLEVEL = 1523,SV_MINKEEPCOMPLSEARCH_INFOLEVEL = 1524,SV_MAXKEEPCOMPLSEARCH_INFOLEVEL = 1525,SV_SCAVTIMEOUT_INFOLEVEL = 1528,SV_MINRCVQUEUE_INFOLEVEL = 1529,SV_MINFREEWORKITEMS_INFOLEVEL = 1530,SV_MAXMPXCT_INFOLEVEL = 1533,SV_OPLOCKBREAKWAIT_INFOLEVEL = 1534,SV_OPLOCKBREAKRESPONSEWAIT_INFOLEVEL = 1535,SV_ENABLEOPLOCKS_INFOLEVEL = 1536,SV_ENABLEOPLOCKFORCECLOSE_INFOLEVEL = 1537,SV_ENABLEFCBOPENS_INFOLEVEL = 1538,SV_ENABLERAW_INFOLEVEL = 1539,SV_ENABLESHAREDNETDRIVES_INFOLEVEL = 1540,SV_MINFREECONNECTIONS_INFOLEVEL = 1541,SV_MAXFREECONNECTIONS_INFOLEVEL = 1542,SV_INITSESSTABLE_INFOLEVEL = 1543,SV_INITCONNTABLE_INFOLEVEL = 1544,SV_INITFILETABLE_INFOLEVEL = 1545,SV_INITSEARCHTABLE_INFOLEVEL = 1546,SV_ALERTSCHEDULE_INFOLEVEL = 1547,SV_ERRORTHRESHOLD_INFOLEVEL = 1548,SV_NETWORKERRORTHRESHOLD_INFOLEVEL = 1549,SV_DISKSPACETHRESHOLD_INFOLEVEL = 1550,SV_MAXLINKDELAY_INFOLEVEL = 1552,SV_MINLINKTHROUGHPUT_INFOLEVEL = 1553,SV_LINKINFOVALIDTIME_INFOLEVEL = 1554,SV_SCAVQOSINFOUPDATETIME_INFOLEVEL = 1555,SV_MAXWORKITEMIDLETIME_INFOLEVEL = 1556,SV_MAXRAWWORKITEMS_INFOLOEVEL = 1557,SV_PRODUCTTYPE_INFOLOEVEL = 1560,SV_SERVERSIZE_INFOLOEVEL = 1561,SV_CONNECTIONLESSAUTODISC_INFOLOEVEL = 1562,SV_SHARINGVIOLATIONRETRIES_INFOLOEVEL = 1563,SV_SHARINGVIOLATIONDELAY_INFOLOEVEL = 1564,SV_MAXGLOBALOPENSEARCH_INFOLOEVEL = 1565,SV_REMOVEDUPLICATESEARCHES_INFOLOEVEL = 1566,SV_LOCKVIOLATIONRETRIES_INFOLOEVEL = 1567,SV_LOCKVIOLATIONOFFSET_INFOLOEVEL = 1568,SV_LOCKVIOLATIONDELAY_INFOLOEVEL = 1569,SV_MDLREADSWITCHOVER_INFOLOEVEL = 1570,SV_CACHEDOPENLIMIT_INFOLOEVEL = 1571,SV_CRITICALTHREADS_INFOLOEVEL = 1572,SV_RESTRICTNULLSESSACCESS_INFOLOEVEL = 1573,SV_ENABLEWFW311DIRECTIPX_INFOLOEVEL = 1574,SV_OTHERQUEUEAFFINITY_INFOLEVEL = 1575,SV_QUEUESAMPLESECS_INFOLEVEL = 1576,SV_BALANCECOUNT_INFOLEVEL = 1577,SV_PREFERREDAFFINITY_INFOLEVEL = 1578,SV_MAXFREERFCBS_INFOLEVEL = 1579,SV_MAXFREEMFCBS_INFOLEVEL = 1580,SV_MAXFREELFCBS_INFOLEVEL = 1581,SV_MAXFREEPAGEDPOOLCHUNKS_INFOLEVEL = 1582,SV_MINPAGEDPOOLCHUNKSIZE_INFOLEVEL = 1583,SV_MAXPAGEDPOOLCHUNKSIZE_INFOLEVEL = 1584,SV_SENDSFROMPREFERREDPROCESSOR_INFOLEVEL = 1585,SV_MAXTHREADSPERQUEUE_INFOLEVEL = 1586,};
enum MACRO_TBSTATE {TBSTATE_CHECKED = 1,TBSTATE_PRESSED = 2,TBSTATE_ENABLED = 4,TBSTATE_HIDDEN = 8,TBSTATE_INDETERMINATE = 16,TBSTATE_WRAP = 32,};
enum MACRO_TBSTYLE {TBSTYLE_BUTTON = 0,TBSTYLE_SEP = 1,TBSTYLE_CHECK = 2,TBSTYLE_GROUP = 4,TBSTYLE_CHECKGROUP = 6,TBSTYLE_TOOLTIPS = 256,TBSTYLE_WRAPABLE = 512,TBSTYLE_ALTDRAG = 1024,};
enum MACRO_TIMEOUT {TIMEOUT_ASYNC = 0xFFFFFFFF,};
enum MACRO_TIME_MS {TIME_MS = 1,TIME_SAMPLES = 2,TIME_BYTES = 4,TIME_SMPTE = 8,TIME_MIDI = 16,TIME_TICKS = 32,};
enum MACRO_TLS_OUT {TLS_OUT_OF_INDEXES = 0xFFFFFFFF,};
enum MACRO_TVIF_DI {TVIF_DI_SETITEM = 0x1000,};
enum MACRO_TYPES_H {_SYS_TYPES_H = 1,_BITS_TYPES_H = 1,_BITS_TYPESIZES_H = 1,};
enum MACRO_UNDNAME {UNDNAME_COMPLETE = 0,UNDNAME_NO_LEADING_UNDERSCORES = 1,UNDNAME_NO_MS_KEYWORDS = 2,UNDNAME_NO_FUNCTION_RETURNS = 4,UNDNAME_NO_ALLOCATION_MODEL = 8,UNDNAME_NO_ALLOCATION_LANGUAGE = 16,UNDNAME_NO_MS_THISTYPE = 32,UNDNAME_NO_CV_THISTYPE = 64,UNDNAME_NO_THISTYPE = 96,UNDNAME_NO_ACCESS_SPECIFIERS = 128,UNDNAME_NO_THROW_SIGNATURES = 256,UNDNAME_NO_MEMBER_TYPE = 512,UNDNAME_NO_RETURN_UDT_MODEL = 1024,UNDNAME_32_BIT_DECODE = 2048,UNDNAME_NAME_ONLY = 4096,UNDNAME_NO_ARGUMENTS = 8192,UNDNAME_NO_SPECIAL_SYMS = 16384,};
enum MACRO_VARIANT {VARIANT_TRUE = 0xFFFFFFFF,VARIANT_FALSE = 0x0,};
enum MACRO_VERTRES {VERTRES = 10,};
enum MACRO_WSAHOST {WSAHOST_NOT_FOUND = 11001,};
enum MACRO__ALLOCA {_ALLOCA_H = 1,};
enum MACRO__ENDIAN {_ENDIAN_H = 1,};
enum MACRO__SIGSET {_SIGSET_H_types = 1,};
enum MACRO__STDLIB {_STDLIB_H = 1,};
enum MACRO__STRUCT {_STRUCT_TIMEVAL = 1,};
enum MACRO___GLIBC {__GLIBC__ = 2,__GLIBC_MINOR__ = 5,__GLIBC_HAVE_LONG_LONG = 1,};
enum MACRO___WCHAR {__WCHAR_MIN = -2147483648,__WCHAR_MAX = 2147483647,};
enum MACRO_ctlLast {ctlLast = 0x4FF,};
enum MACRO_pshHelp {pshHelp = 0x40E,};
typedef struct tagMCHITTESTINFO MCHITTESTINFO;
typedef struct tagMCI_SET_PARMS MCI_SET_PARMS;
typedef struct tagMENUITEMINFOA MENUITEMINFOA;
typedef struct tagMENUITEMINFOW MENUITEMINFOW;
typedef void MENUTEMPLATEA;
typedef void MENUTEMPLATEW;
typedef struct midiproptempo_tag MIDIPROPTEMPO;
typedef struct tagMIXERCONTROLA MIXERCONTROLA;
typedef struct tagMIXERCONTROLW MIXERCONTROLW;
typedef struct _MODEMSETTINGS MODEMSETTINGS;
typedef struct tagMODULEENTRY32 MODULEENTRY32;
typedef struct _BC4A2AE7528CDE26EA3193F07B7FB715 MSGBOXPARAMSA;
typedef struct _86C0719967FA1585F934A358B3D4F44D MSGBOXPARAMSW;
typedef struct tagMULTIKEYHELPA MULTIKEYHELPA;
typedef struct tagMULTIKEYHELPW MULTIKEYHELPW;
typedef struct _A1943A29AA7C7E1878261AF6E5FA7A66 MapiRecipDesc;
typedef struct _NETINFOSTRUCT NETINFOSTRUCT;
typedef struct tagMIDIINCAPSW *NPMIDIINCAPSW;
typedef struct _OLESTREAMVTBL OLESTREAMVTBL;
typedef struct tagOLEUICONVERTA OLEUICONVERTA;
typedef struct tagOLEUICONVERTW OLEUICONVERTW;
typedef struct tagOFNA OPENFILENAMEA;
typedef struct tagOFNW OPENFILENAMEW;
typedef struct _AE_CLOSEFILE *PAE_CLOSEFILE;
typedef struct _AE_CONNSTART *PAE_CONNSTART;
typedef struct _AE_NETLOGOFF *PAE_NETLOGOFF;
typedef struct _AE_RESACCESS *PAE_RESACCESS;
typedef struct _AE_SESSLOGON *PAE_SESSLOGON;
typedef struct _AE_SESSPWERR *PAE_SESSPWERR;
typedef struct _AE_SRVSTATUS *PAE_SRVSTATUS;
typedef struct tagPSDA PAGESETUPDLGA;
typedef struct tagPSDW PAGESETUPDLGW;
typedef struct pcmwaveformat_tag PCMWAVEFORMAT;
typedef struct _DISK_LOGGING *PDISK_LOGGING;
typedef struct tagABORTPATH *PEMRABORTPATH;
typedef struct tagABORTPATH *PEMRBEGINPATH;
typedef struct tagEMRCREATEPEN *PEMRCREATEPEN;
typedef struct tagEMRSELECTCLIPPATH *PEMRENABLEICM;
typedef struct tagEMRINVERTRGN *PEMRINVERTRGN;
typedef struct tagEMRPOLYLINE16 *PEMRPOLYGON16;
typedef struct tagEMRELLIPSE *PEMRRECTANGLE;
typedef struct tagEMRRESTOREDC *PEMRRESTOREDC;
typedef struct tagEMRROUNDRECT *PEMRROUNDRECT;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETBKMODE;
typedef struct tagEMRSETPIXELV *PEMRSETPIXELV;
typedef struct tagABORTPATH *PEMRWIDENPATH;
typedef struct _FORM_INFO_1A *PFORM_INFO_1A;
typedef struct _FORM_INFO_1W *PFORM_INFO_1W;
typedef struct _GROUP_INFO_0 *PGROUP_INFO_0;
typedef struct _GROUP_INFO_1 *PGROUP_INFO_1;
typedef struct _GROUP_INFO_2 *PGROUP_INFO_2;
typedef struct tagHELPWININFOA *PHELPWININFOA;
typedef struct tagHELPWININFOW *PHELPWININFOW;
typedef struct _IMAGE_SYMBOL *PIMAGE_SYMBOL;
typedef struct _INPUT_RECORD *PINPUT_RECORD;
typedef struct _LOADED_IMAGE *PLOADED_IMAGE;
typedef struct tagMIDIOUTCAPSA *PMIDIOUTCAPSA;
typedef struct tagMIDIOUTCAPSW *PMIDIOUTCAPSW;
typedef struct _MODEMDEVCAPS *PMODEMDEVCAPS;
typedef struct tagPALETTEENTRY *PPALETTEENTRY;
typedef struct _PORT_INFO_1A *PPORT_INFO_1A;
typedef struct _PORT_INFO_1W *PPORT_INFO_1W;
typedef struct _PORT_INFO_2A *PPORT_INFO_2A;
typedef struct _PORT_INFO_2W *PPORT_INFO_2W;
typedef struct _PORT_INFO_3A *PPORT_INFO_3A;
typedef struct _PORT_INFO_3W *PPORT_INFO_3W;
typedef struct _PRIVILEGE_SET PRIVILEGE_SET;
typedef struct _PROV_ENUMALGS PROV_ENUMALGS;
typedef struct _SHARE_INFO_0 *PSHARE_INFO_0;
typedef struct _SHARE_INFO_1 *PSHARE_INFO_1;
typedef struct _SHARE_INFO_2 *PSHARE_INFO_2;
typedef struct _TAPE_PREPARE *PTAPE_PREPARE;
typedef struct _TOKEN_GROUPS *PTOKEN_GROUPS;
typedef struct _USER_INFO_10 *PUSER_INFO_10;
typedef struct _USER_INFO_11 *PUSER_INFO_11;
typedef struct _USER_INFO_20 *PUSER_INFO_20;
typedef struct _USER_INFO_21 *PUSER_INFO_21;
typedef struct _USER_INFO_22 *PUSER_INFO_22;
typedef struct tWAVEFORMATEX *PWAVEFORMATEX;
typedef struct tagWAVEOUTCAPSA *PWAVEOUTCAPSA;
typedef struct tagWAVEOUTCAPSW *PWAVEOUTCAPSW;
typedef struct _WSAQuerySetA *PWSAQUERYSETA;
typedef struct _WSAQuerySetW *PWSAQUERYSETW;
typedef struct tagProxyFileInfo ProxyFileInfo;
typedef struct tagREGISTERWORDA REGISTERWORDA;
typedef struct tagREGISTERWORDW REGISTERWORDW;
typedef struct _RGNDATAHEADER RGNDATAHEADER;
typedef unsigned int RPCOLEDATAREP;
typedef struct tagRPCOLEMESSAGE RPCOLEMESSAGE;
typedef void *RPC_IF_HANDLE;
typedef void *RPC_NS_HANDLE;
typedef struct _STAT_SERVER_0 STAT_SERVER_0;
typedef struct tagSTORAGELAYOUT STORAGELAYOUT;
typedef struct tagTBSAVEPARAMSA TBSAVEPARAMSA;
typedef struct tagTBSAVEPARAMSW TBSAVEPARAMSW;
typedef struct tagTHREADENTRY32 THREADENTRY32;
typedef struct _TOKEN_CONTROL TOKEN_CONTROL;
typedef struct _SHORT_SIZEDARR WORD_SIZEDARR;
enum _SID_NAME_USE {SidTypeUser = 0x1,SidTypeGroup = 0x2,SidTypeDomain = 0x3,SidTypeAlias = 0x4,SidTypeWellKnownGroup = 0x5,SidTypeDeletedAccount = 0x6,SidTypeInvalid = 0x7,SidTypeUnknown = 0x8,};
typedef int (*__compar_fn_t)( void *,  void *);
typedef int __suseconds_t;
typedef struct _D68E04ECC07D7D43C298BEA99D7BA7F2 *lpMapiMessage;
typedef unsigned int pthread_key_t;
enum tagBIND_FLAGS {BIND_MAYBOTHERUSER = 0x1,BIND_JUSTTESTEXISTENCE = 0x2,};
enum tagDROPEFFECT {DROPEFFECT_NONE = 0x0,DROPEFFECT_COPY = 0x1,DROPEFFECT_MOVE = 0x2,DROPEFFECT_LINK = 0x4,DROPEFFECT_SCROLL = 0x80000000,};
enum tagINVOKEKIND {INVOKE_FUNC = 0x1,INVOKE_PROPERTYGET = 0x2,INVOKE_PROPERTYPUT = 0x4,INVOKE_PROPERTYPUTREF = 0x8,};
enum tagOLEWHICHMK {OLEWHICHMK_CONTAINER = 0x1,OLEWHICHMK_OBJREL = 0x2,OLEWHICHMK_OBJFULL = 0x3,};
enum tagPENDINGMSG {PENDINGMSG_CANCELCALL = 0x0,PENDINGMSG_WAITNOPROCESS = 0x1,PENDINGMSG_WAITDEFPROCESS = 0x2,};
enum tagSERVERCALL {SERVERCALL_ISHANDLED = 0x0,SERVERCALL_REJECTED = 0x1,SERVERCALL_RETRYLATER = 0x2,};
enum tagTOKEN_TYPE {TokenPrimary = 0x1,TokenImpersonation = 0x2,};
typedef struct _wireSAFEARRAY *wireSAFEARRAY;
typedef struct _AE_CLOSEFILE AE_CLOSEFILE;
typedef struct _AE_CONNSTART AE_CONNSTART;
typedef struct _AE_NETLOGOFF AE_NETLOGOFF;
typedef struct _AE_RESACCESS AE_RESACCESS;
typedef struct _AE_SESSLOGON AE_SESSLOGON;
typedef struct _AE_SESSPWERR AE_SESSPWERR;
typedef struct _AE_SRVSTATUS AE_SRVSTATUS;
typedef struct tagCCSTYLEFLAGA CCSTYLEFLAGA;
typedef struct tagCCSTYLEFLAGW CCSTYLEFLAGW;
typedef struct _charformat2a CHARFORMAT2A;
typedef struct _charformat2w CHARFORMAT2W;
typedef struct tagCHOOSECOLORA CHOOSECOLORA;
typedef struct tagCHOOSECOLORW CHOOSECOLORW;
typedef struct tagCIEXYZTRIPLE CIEXYZTRIPLE;
typedef struct _COMMTIMEOUTS COMMTIMEOUTS;
typedef struct _COSERVERINFO COSERVERINFO;
typedef struct tagCREATESTRUCT CREATESTRUCT;
typedef struct _currencyfmtA CURRENCYFMTA;
typedef struct _currencyfmtW CURRENCYFMTW;
typedef struct tagCUSTDATAITEM CUSTDATAITEM;
typedef struct tagCWPRETSTRUCT CWPRETSTRUCT;
typedef struct _DISK_LOGGING DISK_LOGGING;
typedef struct _30741344DFEF5D024CAA9E725B3C6F5B DRAGLISTINFO;
typedef struct tagABORTPATH EMRABORTPATH;
typedef struct tagABORTPATH EMRBEGINPATH;
typedef struct tagEMRCREATEPEN EMRCREATEPEN;
typedef struct tagEMRSELECTCLIPPATH EMRENABLEICM;
typedef struct tagEMRINVERTRGN EMRINVERTRGN;
typedef struct tagEMRPOLYLINE16 EMRPOLYGON16;
typedef struct tagEMRELLIPSE EMRRECTANGLE;
typedef struct tagEMRRESTOREDC EMRRESTOREDC;
typedef struct tagEMRROUNDRECT EMRROUNDRECT;
typedef struct tagEMRSELECTCLIPPATH EMRSETBKMODE;
typedef struct tagEMRSETPIXELV EMRSETPIXELV;
typedef struct tagABORTPATH EMRWIDENPATH;
typedef struct tagENUMLOGFONTA ENUMLOGFONTA;
typedef struct tagENUMLOGFONTW ENUMLOGFONTW;
typedef struct _6F0F0D71FED89E7A00C3574FDC894A08 FINDREPLACEA;
typedef struct _03B47C5F41869B4DA4566C38D2C89E1D FINDREPLACEW;
typedef struct _FORM_INFO_1A FORM_INFO_1A;
typedef struct _FORM_INFO_1W FORM_INFO_1W;
typedef struct tagGCP_RESULTSA GCP_RESULTSA;
typedef struct tagGCP_RESULTSW GCP_RESULTSW;
typedef struct _GLYPHMETRICS GLYPHMETRICS;
typedef struct _GROUP_INFO_0 GROUP_INFO_0;
typedef struct _GROUP_INFO_1 GROUP_INFO_1;
typedef struct _GROUP_INFO_2 GROUP_INFO_2;
typedef struct tagHELPWININFOA HELPWININFOA;
typedef struct tagHELPWININFOW HELPWININFOW;
typedef struct HENHMETAFILE__ *HENHMETAFILE;
struct HIMAGELIST__ {int i;};
struct IAdviseSink2 {struct IAdviseSink2Vtbl *lpVtbl;};
typedef struct tagICONMETRICSA ICONMETRICSA;
typedef struct tagICONMETRICSW ICONMETRICSW;
struct IChannelHook {struct IChannelHookVtbl *lpVtbl;};
struct IContextMenu {struct IContextMenuVtbl *lpVtbl;};
struct IEnumMoniker {struct IEnumMonikerVtbl *lpVtbl;};
struct IEnumOLEVERB {struct IEnumOLEVERBVtbl *lpVtbl;};
typedef IEnumOLEVERB IEnumOleVerb;
struct IEnumSTATSTG {struct IEnumSTATSTGVtbl *lpVtbl;};
struct IEnumUnknown {struct IEnumUnknownVtbl *lpVtbl;};
struct IEnumVARIANT {struct IEnumVARIANTVtbl *lpVtbl;};
struct IExtractIcon {struct IExtractIconVtbl *lpVtbl;};
typedef struct _IMAGE_SYMBOL IMAGE_SYMBOL;
typedef struct _INPUT_RECORD INPUT_RECORD;
struct IPersistFile {struct IPersistFileVtbl *lpVtbl;};
struct IPictureDisp {struct IPictureDispVtbl *lpVtbl;};
struct IPropertyBag {struct IPropertyBagVtbl *lpVtbl;};
struct IRichEditOle {struct IRichEditOleVtbl *lpVtbl;};
struct IRootStorage {struct IRootStorageVtbl *lpVtbl;};
struct IShellFolder {struct IShellFolderVtbl *lpVtbl;};
struct IViewObject2 {struct IViewObject2Vtbl *lpVtbl;};
typedef void *I_RPC_HANDLE;
typedef struct _LOADED_IMAGE LOADED_IMAGE;
typedef struct IAdviseSink *LPADVISESINK;
typedef struct _AE_CONNREJ *LPAE_CONNREJ;
typedef struct _AE_GENERIC *LPAE_GENERIC;
typedef struct _AE_LOCKOUT *LPAE_LOCKOUT;
typedef struct tagBIND_OPTS2 *LPBIND_OPTS2;
typedef struct tagBITMAPINFO *LPBITMAPINFO;
typedef struct _browseinfo *LPBROWSEINFO;
typedef struct tagCALPOLESTR *LPCALPOLESTR;
typedef struct _COMM_CONFIG *LPCOMMCONFIG;
typedef struct IDataObject *LPDATAOBJECT;
typedef struct IDropSource *LPDROPSOURCE;
typedef struct tagDROPSTRUCT *LPDROPSTRUCT;
typedef struct IDropTarget *LPDROPTARGET;
typedef IEnumIDList *LPENUMIDLIST;
typedef struct IEnumString *LPENUMSTRING;
typedef IFileViewer *LPFILEVIEWER;
typedef struct _F4E2A3B3EF6C4FAA4EC9C87B4A54D83E *LPFVSHOWINFO;
typedef int *LPFXPT2DOT30;
typedef struct tagHEAPLIST32 *LPHEAPLIST32;
typedef struct _ITEMIDLIST *LPITEMIDLIST;
typedef struct tagLOGPALETTE *LPLOGPALETTE;
typedef struct tagMETAHEADER *LPMETAHEADER;
typedef struct tagMETARECORD *LPMETARECORD;
typedef struct tagMETHODDATA *LPMETHODDATA;
typedef struct tagMINMAXINFO *LPMINMAXINFO;
typedef struct tagMIXERCAPSA *LPMIXERCAPSA;
typedef struct tagMIXERCAPSW *LPMIXERCAPSW;
typedef struct tagMIXERLINEA *LPMIXERLINEA;
typedef struct tagMIXERLINEW *LPMIXERLINEW;
typedef struct _MODULEINFO *LPMODULEINFO;
typedef struct _MSG_INFO_0 *LPMSG_INFO_0;
typedef struct _MSG_INFO_1 *LPMSG_INFO_1;
typedef struct tagNMDAYSTATE *LPNMDAYSTATE;
typedef struct IOleControl *LPOLECONTROL;
typedef struct tagOLEUIBUSYA *LPOLEUIBUSYA;
typedef struct tagOLEUIBUSYW *LPOLEUIBUSYW;
typedef struct _OVERLAPPED *LPOVERLAPPED;
typedef struct tagSCROLLINFO *LPSCROLLINFO;
typedef struct _tagSTACKFRAME *LPSTACKFRAME;
typedef struct tagSTICKYKEYS *LPSTICKYKEYS;
typedef struct _SYSTEMTIME *LPSYSTEMTIME;
typedef struct _USE_INFO_0 *LPUSE_INFO_0;
typedef struct _USE_INFO_1 *LPUSE_INFO_1;
typedef struct _USE_INFO_2 *LPUSE_INFO_2;
typedef struct IViewObject *LPVIEWOBJECT;
typedef struct waveformat_tag *LPWAVEFORMAT;
typedef struct _WSAVersion *LPWSAVERSION;
typedef struct _LV_DISPINFOA LV_DISPINFOA;
typedef struct _LV_DISPINFOW LV_DISPINFOW;
typedef struct _LV_FINDINFOA LV_FINDINFOA;
typedef struct _LV_FINDINFOW LV_FINDINFOW;
enum MACRO_ACCESS {ACCESS_ALLOWED_ACE_TYPE = 0,ACCESS_DENIED_ACE_TYPE = 1,};
enum MACRO_ACTION {ACTION_LOCKOUT = 0,ACTION_ADMINUNLOCK = 1,};
enum MACRO_APPCMD {APPCMD_CLIENTONLY = 0x10,APPCMD_FILTERINITS = 0x20,APPCMD_MASK = 0xFF0,};
enum MACRO_ASPECT {ASPECT_FILTERING = 1,};
enum MACRO_BACKUP {BACKUP_INVALID = 0,BACKUP_DATA = 1,BACKUP_EA_DATA = 2,BACKUP_SECURITY_DATA = 3,BACKUP_ALTERNATE_DATA = 4,BACKUP_LINK = 5,BACKUP_PROPERTY_DATA = 6,};
enum MACRO_CDBOSC {CDBOSC_SETFOCUS = 0,CDBOSC_KILLFOCUS = 1,CDBOSC_SELCHANGE = 2,CDBOSC_RENAME = 3,};
enum MACRO_CLRDTR {CLRDTR = 6,};
enum MACRO_CLRRTS {CLRRTS = 4,};
enum MACRO_CLTYPE {CLTYPE_LEN = 12,};
enum MACRO_CP_ACP {CP_ACP = 0,CP_OEMCP = 1,CP_MACCP = 2,CP_THREAD_ACP = 3,CP_SYMBOL = 42,CP_UTF7 = 65000,CP_UTF8 = 65001,};
enum MACRO_CREATE {CREATE_DEFAULT_ERROR_MODE = 67108864,};
enum MACRO_CYGWIN {CYGWIN_VERSION_DLL_MAJOR = 1001,CYGWIN_VERSION_DLL_MINOR = 2,CYGWIN_VERSION_DLL_EPOCH = 19,CYGWIN_VERSION_DLL_BAD_SIGNAL_MASK = 19005,CYGWIN_VERSION_DLL_OLD_TERMIOS = 5,CYGWIN_VERSION_API_MAJOR = 0,CYGWIN_VERSION_API_MINOR = 21,CYGWIN_VERSION_SHARED_DATA = 3,CYGWIN_VERSION_MOUNT_REGISTRY = 2,};
enum MACRO_DELETE {DELETE = 0x10000,};
enum MACRO_DEVLEN {DEVLEN = 80,};
enum MACRO_DISPID {DISPID_UNKNOWN = -1,DISPID_VALUE = 0,DISPID_PROPERTYPUT = -3,DISPID_NEWENUM = -4,DISPID_EVALUATE = -5,DISPID_CONSTRUCTOR = -6,DISPID_DESTRUCTOR = -7,DISPID_COLLECT = -8,};
enum MACRO_DMLERR {DMLERR_NO_ERROR = 0,DMLERR_FIRST = 16384,DMLERR_ADVACKTIMEOUT = 16384,DMLERR_BUSY = 16385,DMLERR_DATAACKTIMEOUT = 16386,DMLERR_DLL_NOT_INITIALIZED = 16387,DMLERR_DLL_USAGE = 16388,DMLERR_EXECACKTIMEOUT = 16389,DMLERR_INVALIDPARAMETER = 16390,DMLERR_LOW_MEMORY = 16391,DMLERR_MEMORY_ERROR = 16392,DMLERR_NOTPROCESSED = 16393,DMLERR_NO_CONV_ESTABLISHED = 16394,DMLERR_POKEACKTIMEOUT = 16395,DMLERR_POSTMSG_FAILED = 16396,DMLERR_REENTRANCY = 16397,DMLERR_SERVER_DIED = 16398,DMLERR_SYS_ERROR = 16399,DMLERR_UNADVACKTIMEOUT = 16400,DMLERR_UNFOUND_QUEUE_ID = 16401,DMLERR_LAST = 16401,};
enum MACRO_DOMAIN {DOMAIN_USER_RID_ADMIN = 0x1F4,DOMAIN_USER_RID_GUEST = 0x1F5,DOMAIN_GROUP_RID_ADMINS = 0x200,DOMAIN_GROUP_RID_USERS = 0x201,DOMAIN_ALIAS_RID_ADMINS = 0x220,DOMAIN_ALIAS_RID_USERS = 0x221,DOMAIN_ALIAS_RID_GUESTS = 0x222,DOMAIN_ALIAS_RID_POWER_USERS = 0x223,DOMAIN_ALIAS_RID_ACCOUNT_OPS = 0x224,DOMAIN_ALIAS_RID_SYSTEM_OPS = 0x225,DOMAIN_ALIAS_RID_PRINT_OPS = 0x226,DOMAIN_ALIAS_RID_BACKUP_OPS = 0x227,DOMAIN_ALIAS_RID_REPLICATOR = 0x228,};
enum MACRO_DOUBLE {DOUBLE_CLICK = 2,};
enum MACRO_DRVCNF {DRVCNF_CANCEL = 0,DRVCNF_OK = 1,DRVCNF_RESTART = 2,};
enum MACRO_ENABLE {ENABLE_LINE_INPUT = 2,ENABLE_ECHO_INPUT = 4,ENABLE_PROCESSED_INPUT = 1,ENABLE_WINDOW_INPUT = 8,ENABLE_MOUSE_INPUT = 16,ENABLE_PROCESSED_OUTPUT = 1,ENABLE_WRAP_AT_EOL_OUTPUT = 2,};
enum MACRO_ENDDOC {ENDDOC = 11,};
enum MACRO_ENDIAN {__LITTLE_ENDIAN = 1234,__BIG_ENDIAN = 4321,__PDP_ENDIAN = 3412,};
enum MACRO_ERRLOG {ERRLOG_BASE = 3100,ERRLOG2_BASE = 5700,};
enum MACRO_FILTER {FILTER_TEMP_DUPLICATE_ACCOUNT = 1,FILTER_NORMAL_ACCOUNT = 2,FILTER_INTERDOMAIN_TRUST_ACCOUNT = 8,FILTER_WORKSTATION_TRUST_ACCOUNT = 16,FILTER_SERVER_TRUST_ACCOUNT = 32,};
enum MACRO_FORMAT {FORMAT_MESSAGE_ALLOCATE_BUFFER = 256,FORMAT_MESSAGE_IGNORE_INSERTS = 512,FORMAT_MESSAGE_FROM_STRING = 1024,FORMAT_MESSAGE_FROM_HMODULE = 2048,FORMAT_MESSAGE_FROM_SYSTEM = 4096,FORMAT_MESSAGE_ARGUMENT_ARRAY = 8192,FORMAT_MESSAGE_MAX_WIDTH_MASK = 255,};
enum MACRO_GOPHER {GOPHER_TYPE_TEXT_FILE = 1,GOPHER_TYPE_DIRECTORY = 2,GOPHER_TYPE_CSO = 4,GOPHER_TYPE_ERROR = 8,GOPHER_TYPE_MAC_BINHEX = 16,GOPHER_TYPE_DOS_ARCHIVE = 32,GOPHER_TYPE_UNIX_UUENCODED = 64,GOPHER_TYPE_INDEX_SERVER = 128,GOPHER_TYPE_TELNET = 256,GOPHER_TYPE_BINARY = 512,GOPHER_TYPE_REDUNDANT = 1024,GOPHER_TYPE_TN3270 = 2048,GOPHER_TYPE_GIF = 4096,GOPHER_TYPE_IMAGE = 8192,GOPHER_TYPE_BITMAP = 16384,GOPHER_TYPE_MOVIE = 32768,GOPHER_TYPE_SOUND = 65536,GOPHER_TYPE_HTML = 131072,GOPHER_TYPE_PDF = 262144,GOPHER_TYPE_CALENDAR = 524288,GOPHER_TYPE_INLINE = 1048576,GOPHER_TYPE_UNKNOWN = 536870912,GOPHER_TYPE_ASK = 1073741824,GOPHER_TYPE_GOPHER_PLUS = -2147483648,GOPHER_TYPE_FILE_MASK = 2093681,};
enum MACRO_HANDLE {HANDLE_FLAG_INHERIT = 1,HANDLE_FLAG_PROTECT_FROM_CLOSE = 2,};
enum MACRO_HANGUP {HANGUP_PENDING = 0x4,HANGUP_COMPLETE = 0x5,};
enum MACRO_HKCOMB {HKCOMB_NONE = 1,HKCOMB_S = 2,HKCOMB_C = 4,HKCOMB_A = 8,HKCOMB_SC = 16,HKCOMB_SA = 32,HKCOMB_CA = 64,HKCOMB_SCA = 128,};
enum MACRO_HSHELL {HSHELL_ACTIVATESHELLWINDOW = 3,HSHELL_GETMINRECT = 5,HSHELL_LANGUAGE = 8,HSHELL_REDRAW = 6,HSHELL_TASKMAN = 7,HSHELL_WINDOWACTIVATED = 4,HSHELL_WINDOWCREATED = 1,HSHELL_WINDOWDESTROYED = 2,};
enum MACRO_HTHELP {HTHELP = 21,};
enum MACRO_HTLEFT {HTLEFT = 10,};
enum MACRO_HTMENU {HTMENU = 5,};
enum MACRO_HTSIZE {HTSIZE = 4,};
enum MACRO_HTZOOM {HTZOOM = 9,};
enum MACRO_IDHELP {IDHELP = 9,};
enum MACRO_ID_APP {ID_APP = 100,};
enum MACRO_IGIMIF {IGIMIF_RIGHTMENU = 1,};
enum MACRO_IGIMII {IGIMII_CMODE = 1,IGIMII_SMODE = 2,IGIMII_CONFIGURE = 4,IGIMII_TOOLS = 8,IGIMII_HELP = 16,IGIMII_OTHER = 32,IGIMII_INPUTTOOLS = 64,};
enum MACRO_IGNORE {IGNORE = 0,INFINITE = -1,};
enum MACRO_IMEVER {IMEVER_0310 = 0x3000A,IMEVER_0400 = 0x40000,};
enum MACRO_INADDR {INADDR_ANY = 0,INADDR_LOOPBACK = 2130706433,INADDR_BROADCAST = 4294967295,INADDR_NONE = -1,};
enum MACRO_IPPORT {IPPORT_ECHO = 7,IPPORT_DISCARD = 9,IPPORT_SYSTAT = 11,IPPORT_DAYTIME = 13,IPPORT_NETSTAT = 15,IPPORT_FTP = 21,IPPORT_TELNET = 23,IPPORT_SMTP = 25,IPPORT_TIMESERVER = 37,IPPORT_NAMESERVER = 42,IPPORT_WHOIS = 43,IPPORT_MTP = 57,IPPORT_TFTP = 69,IPPORT_RJE = 77,IPPORT_FINGER = 79,IPPORT_TTYLINK = 87,IPPORT_SUPDUP = 95,IPPORT_EXECSERVER = 512,IPPORT_LOGINSERVER = 513,IPPORT_CMDSERVER = 514,IPPORT_EFSSERVER = 520,IPPORT_BIFFUDP = 512,IPPORT_WHOSERVER = 513,IPPORT_ROUTESERVER = 520,IPPORT_RESERVED = 1024,};
enum MACRO_JOYERR {JOYERR_NOERROR = 0,JOYERR_PARMS = 165,JOYERR_NOCANDO = 166,JOYERR_UNPLUGGED = 167,};
enum MACRO_LISTEN {LISTEN_OUTSTANDING = 0x1,};
enum MACRO_LITTLE {LITTLE_ENDIAN = 1234,BIG_ENDIAN = 4321,PDP_ENDIAN = 3412,};
enum MACRO_LOCALE {LOCALE_NEUTRAL = 0,};
enum MACRO_LVCFMT {LVCFMT_LEFT = 0,LVCFMT_RIGHT = 1,LVCFMT_CENTER = 2,LVCFMT_JUSTIFYMASK = 3,};
enum MACRO_MCIERR {MCIERR_INVALID_DEVICE_ID = 257,MCIERR_UNRECOGNIZED_KEYWORD = 259,MCIERR_UNRECOGNIZED_COMMAND = 261,MCIERR_HARDWARE = 262,MCIERR_INVALID_DEVICE_NAME = 263,MCIERR_OUT_OF_MEMORY = 264,MCIERR_DEVICE_OPEN = 265,MCIERR_CANNOT_LOAD_DRIVER = 266,MCIERR_MISSING_COMMAND_STRING = 267,MCIERR_PARAM_OVERFLOW = 268,MCIERR_MISSING_STRING_ARGUMENT = 269,MCIERR_BAD_INTEGER = 270,MCIERR_PARSER_INTERNAL = 271,MCIERR_DRIVER_INTERNAL = 272,MCIERR_MISSING_PARAMETER = 273,MCIERR_UNSUPPORTED_FUNCTION = 274,MCIERR_FILE_NOT_FOUND = 275,MCIERR_DEVICE_NOT_READY = 276,MCIERR_INTERNAL = 277,MCIERR_DRIVER = 278,MCIERR_CANNOT_USE_ALL = 279,MCIERR_MULTIPLE = 280,MCIERR_EXTENSION_NOT_FOUND = 281,MCIERR_OUTOFRANGE = 282,MCIERR_FLAGS_NOT_COMPATIBLE = 284,MCIERR_FILE_NOT_SAVED = 286,MCIERR_DEVICE_TYPE_REQUIRED = 287,MCIERR_DEVICE_LOCKED = 288,MCIERR_DUPLICATE_ALIAS = 289,MCIERR_BAD_CONSTANT = 290,MCIERR_MUST_USE_SHAREABLE = 291,MCIERR_MISSING_DEVICE_NAME = 292,MCIERR_BAD_TIME_FORMAT = 293,MCIERR_NO_CLOSING_QUOTE = 294,MCIERR_DUPLICATE_FLAGS = 295,MCIERR_INVALID_FILE = 296,MCIERR_NULL_PARAMETER_BLOCK = 297,MCIERR_UNNAMED_RESOURCE = 298,MCIERR_NEW_REQUIRES_ALIAS = 299,MCIERR_NOTIFY_ON_AUTO_OPEN = 300,MCIERR_NO_ELEMENT_ALLOWED = 301,MCIERR_NONAPPLICABLE_FUNCTION = 302,MCIERR_ILLEGAL_FOR_AUTO_OPEN = 303,MCIERR_FILENAME_REQUIRED = 304,MCIERR_EXTRA_CHARACTERS = 305,MCIERR_DEVICE_NOT_INSTALLED = 306,MCIERR_GET_CD = 307,MCIERR_SET_CD = 308,MCIERR_SET_DRIVE = 309,MCIERR_DEVICE_LENGTH = 310,MCIERR_DEVICE_ORD_LENGTH = 311,MCIERR_NO_INTEGER = 312,MCIERR_WAVE_OUTPUTSINUSE = 320,MCIERR_WAVE_SETOUTPUTINUSE = 321,MCIERR_WAVE_INPUTSINUSE = 322,MCIERR_WAVE_SETINPUTINUSE = 323,MCIERR_WAVE_OUTPUTUNSPECIFIED = 324,MCIERR_WAVE_INPUTUNSPECIFIED = 325,MCIERR_WAVE_OUTPUTSUNSUITABLE = 326,MCIERR_WAVE_SETOUTPUTUNSUITABLE = 327,MCIERR_WAVE_INPUTSUNSUITABLE = 328,MCIERR_WAVE_SETINPUTUNSUITABLE = 329,MCIERR_SEQ_DIV_INCOMPATIBLE = 336,MCIERR_SEQ_PORT_INUSE = 337,MCIERR_SEQ_PORT_NONEXISTENT = 338,MCIERR_SEQ_PORT_MAPNODEVICE = 339,MCIERR_SEQ_PORT_MISCERROR = 340,MCIERR_SEQ_TIMER = 341,MCIERR_SEQ_PORTUNSPECIFIED = 342,MCIERR_SEQ_NOMIDIPRESENT = 343,MCIERR_NO_WINDOW = 346,MCIERR_CREATEWINDOW = 347,MCIERR_FILE_READ = 348,MCIERR_FILE_WRITE = 349,MCIERR_NO_IDENTITY = 350,MCIERR_CUSTOM_DRIVER_BASE = 512,};
enum MACRO_MDMVOL {MDMVOL_LOW = 0,MDMVOL_MEDIUM = 1,MDMVOL_HIGH = 2,};
enum MACRO_METHOD {METHOD_BUFFERED = 0,METHOD_IN_DIRECT = 1,METHOD_OUT_DIRECT = 2,METHOD_NEITHER = 3,};
enum MACRO_MF_HSZ {MF_HSZ_INFO = 0x1000000,MF_SENDMSGS = 0x2000000,MF_POSTMSGS = 0x4000000,MF_CALLBACKS = 0x8000000,MF_ERRORS = 0x10000000,MF_LINKS = 0x20000000,MF_CONV = 0x40000000,MF_MASK = 0xFF000000,};
enum MACRO_MIXERR {MIXERR_INVALLINE = 1024,MIXERR_INVALCONTROL = 1025,MIXERR_INVALVALUE = 1026,MIXERR_LASTERROR = 1026,};
enum MACRO_MODALS {MODALS_MIN_PASSWD_LEN_PARMNUM = 1,MODALS_MAX_PASSWD_AGE_PARMNUM = 2,MODALS_MIN_PASSWD_AGE_PARMNUM = 3,MODALS_FORCE_LOGOFF_PARMNUM = 4,MODALS_PASSWD_HIST_LEN_PARMNUM = 5,MODALS_ROLE_PARMNUM = 6,MODALS_PRIMARY_PARMNUM = 7,MODALS_DOMAIN_NAME_PARMNUM = 8,MODALS_DOMAIN_ID_PARMNUM = 9,MODALS_LOCKOUT_DURATION_PARMNUM = 10,MODALS_LOCKOUT_OBSERVATION_WINDOW_PARMNUM = 11,MODALS_LOCKOUT_THRESHOLD_PARMNUM = 12,MODALS_MIN_PASSWD_LEN_INFOLEVEL = 1001,MODALS_MAX_PASSWD_AGE_INFOLEVEL = 1002,MODALS_MIN_PASSWD_AGE_INFOLEVEL = 1003,MODALS_FORCE_LOGOFF_INFOLEVEL = 1004,MODALS_PASSWD_HIST_LEN_INFOLEVEL = 1005,MODALS_ROLE_INFOLEVEL = 1006,MODALS_PRIMARY_INFOLEVEL = 1007,MODALS_DOMAIN_NAME_INFOLEVEL = 1008,MODALS_DOMAIN_ID_INFOLEVEL = 1009,};
enum MACRO_OPAQUE {OPAQUE = 2,};
enum MACRO_PANOSE {PANOSE_COUNT = 10,};
enum MACRO_PARITY {PARITY_NONE = 256,PARITY_ODD = 512,PARITY_EVEN = 1024,PARITY_MARK = 2048,PARITY_SPACE = 4096,};
enum MACRO_PCMCIA {PCMCIA_OPT_HAVE_SOCKET = 1,PCMCIA_OPT_AUTOMEM = 4,PCMCIA_OPT_NO_SOUND = 8,PCMCIA_OPT_NO_AUDIO = 16,PCMCIA_OPT_NO_APMREMOVE = 32,PCMCIA_DEF_MEMBEGIN = 786432,PCMCIA_DEF_MEMEND = 16777215,PCMCIA_DEF_MEMLEN = 4096,PCMCIA_DEF_MIN_REGION = 65536,};
enum MACRO_PLANES {PLANES = 14,NUMBRUSHES = 16,};
enum MACRO_PRJOB_ {PRJOB_ = 16,PRJOB_DESTOFFLINE = 32,PRJOB_DESTPAUSED = 64,PRJOB_NOTIFY = 128,PRJOB_DESTNOPAPER = 256,PRJOB_DELETED = 32768,PRJOB_QS_QUEUED = 0,PRJOB_QS_PAUSED = 1,PRJOB_QS_SPOOLING = 2,PRJOB_QS_PRINTING = 3,};
enum MACRO_PSNRET {PSNRET_NOERROR = 0,PSNRET_INVALID = 1,PSNRET_INVALID_NOCHANGEPAGE = 2,};
enum MACRO_PSWIZB {PSWIZB_BACK = 1,PSWIZB_NEXT = 2,PSWIZB_FINISH = 4,PSWIZB_DISABLEDFINISH = 8,};
enum MACRO_REGSTR {REGSTR_MAX_VALUE_LENGTH = 256,};
enum MACRO_RPCFLG {RPCFLG_ASYNCHRONOUS = 0x40000000,RPCFLG_INPUT_SYNCHRONOUS = 0x20000000,};
enum MACRO_SELECT {SELECT_CAP_CONVERSION = 1,SELECT_CAP_SENTENCE = 2,};
enum MACRO_SERIAL {SERIAL_LSRMST_ESCAPE = 0,SERIAL_LSRMST_LSR_DATA = 1,SERIAL_LSRMST_LSR_NODATA = 2,SERIAL_LSRMST_MST = 3,};
enum MACRO_SERVER {SERVER_ACCESS_ADMINISTER = 1,SERVER_ACCESS_ENUMERATE = 2,SERVER_ALL_ACCESS = 983043,SERVER_READ = 131074,SERVER_WRITE = 131075,SERVER_EXECUTE = 131074,};
enum MACRO_SETACL {SETACL = 0x0,GETACL = 0x1,GETACLCNT = 0x2,};
enum MACRO_SETDTR {SETDTR = 5,};
enum MACRO_SETRTS {SETRTS = 3,};
enum MACRO_SE_ERR {SE_ERR_FNF = 2,SE_ERR_PNF = 3,SE_ERR_ACCESSDENIED = 5,SE_ERR_OOM = 8,SE_ERR_DLLNOTFOUND = 32,SE_ERR_SHARE = 26,SE_ERR_ASSOCINCOMPLETE = 27,SE_ERR_DDETIMEOUT = 28,SE_ERR_DDEFAIL = 29,SE_ERR_DDEBUSY = 30,SE_ERR_NOASSOC = 31,};
enum MACRO_SIZEOF {SIZEOF_RFPO_DATA = 16,};
enum MACRO_SOCKET {SOCKET_ERROR = -1,};
enum MACRO_SOURCE {_BSD_SOURCE = 1,_SVID_SOURCE = 1,_POSIX_SOURCE = 1,_POSIX_C_SOURCE = 200112,};
enum MACRO_SO_MAX {SO_MAX_MSG_SIZE = 0x2003,SO_PROTOCOL_INFOA = 0x2004,SO_PROTOCOL_INFOW = 0x2005,SO_PROTOCOL_INFO = 0x2004,};
enum MACRO_SRCAND {SRCAND = 0x8800C6,};
enum MACRO_STARTF {STARTF_USESHOWWINDOW = 1,STARTF_USESIZE = 2,STARTF_USEPOSITION = 4,STARTF_USECOUNTCHARS = 8,STARTF_USEFILLATTRIBUTE = 16,STARTF_RUNFULLSCREEN = 32,STARTF_FORCEONFEEDBACK = 64,STARTF_FORCEOFFFEEDBACK = 128,STARTF_USESTDHANDLES = 256,STARTF_USEHOTKEY = 512,};
enum MACRO_STATUS {STATUS_WAIT_0 = 0,STATUS_ABANDONED_WAIT_0 = 128,STATUS_USER_APC = 192,STATUS_TIMEOUT = 258,STATUS_PENDING = 259,STATUS_SEGMENT_NOTIFICATION = 1073741829,STATUS_GUARD_PAGE_VIOLATION = -2147483647,STATUS_DATATYPE_MISALIGNMENT = -2147483646,STATUS_BREAKPOINT = -2147483645,STATUS_SINGLE_STEP = -2147483644,STATUS_ACCESS_VIOLATION = -1073741819,STATUS_IN_PAGE_ERROR = -1073741818,STATUS_INVALID_HANDLE = -1073741816,STATUS_NO_MEMORY = -1073741801,STATUS_ILLEGAL_INSTRUCTION = -1073741795,STATUS_NONCONTINUABLE_EXCEPTION = -1073741787,STATUS_INVALID_DISPOSITION = -1073741786,STATUS_ARRAY_BOUNDS_EXCEEDED = -1073741684,STATUS_FLOAT_DENORMAL_OPERAND = -1073741683,STATUS_FLOAT_DIVIDE_BY_ZERO = -1073741682,STATUS_FLOAT_INEXACT_RESULT = -1073741681,STATUS_FLOAT_INVALID_OPERATION = -1073741680,STATUS_FLOAT_OVERFLOW = -1073741679,STATUS_FLOAT_STACK_CHECK = -1073741678,STATUS_FLOAT_UNDERFLOW = -1073741677,STATUS_INTEGER_DIVIDE_BY_ZERO = -1073741676,STATUS_INTEGER_OVERFLOW = -1073741675,STATUS_PRIVILEGED_INSTRUCTION = -1073741674,STATUS_STACK_OVERFLOW = -1073741571,STATUS_CONTROL_C_EXIT = -1073741510,};
enum MACRO_STDOLE {STDOLE_MAJORVERNUM = 1,STDOLE_MINORVERNUM = 0,STDOLE_LCID = 0,};
enum MACRO_STREAM {STREAM_NORMAL_ATTRIBUTE = 0,STREAM_MODIFIED_WHEN_READ = 1,STREAM_CONTAINS_SECURITY = 2,STREAM_CONTAINS_PROPERTIES = 4,};
enum MACRO_STRICT {STRICT = 1,};
enum MACRO_STRRET {STRRET_WSTR = 0,STRRET_OFFSET = 1,STRRET_CSTR = 2,};
enum MACRO_SV_MAX {SV_MAX_SRV_HEUR_LEN = 32,SV_USERS_PER_LICENSE = 5,SV_PLATFORM_ID_OS2 = 400,SV_PLATFORM_ID_NT = 500,};
enum MACRO_SYMOPT {SYMOPT_CASE_INSENSITIVE = 1,SYMOPT_UNDNAME = 2,SYMOPT_DEFERRED_LOADS = 4,SYMOPT_NO_CPP = 8,SYMOPT_LOAD_LINES = 16,SYMOPT_OMAP_FIND_NEAREST = 32,};
enum MACRO_SYSPAL {SYSPAL_NOSTATIC = 2,SYSPAL_STATIC = 1,SYSPAL_ERROR = 0,};
enum MACRO_SYSTEM {SYSTEM_AUDIT_ACE_TYPE = 2,SYSTEM_ALARM_ACE_TYPE = 3,};
enum MACRO_TH32CS {TH32CS_SNAPHEAPLIST = 0x1,TH32CS_SNAPPROCESS = 0x2,TH32CS_SNAPTHREAD = 0x4,TH32CS_SNAPMODULE = 0x8,TH32CS_SNAPALL = 0xF,TH32CS_INHERIT = 0x80000000,};
enum MACRO_THREAD {THREAD_TERMINATE = 1,THREAD_SUSPEND_RESUME = 2,THREAD_GET_CONTEXT = 8,THREAD_SET_CONTEXT = 16,THREAD_SET_INFORMATION = 32,THREAD_QUERY_INFORMATION = 64,THREAD_SET_THREAD_TOKEN = 128,THREAD_IMPERSONATE = 256,THREAD_DIRECT_IMPERSONATION = 512,THREAD_ALL_ACCESS = 2032639,};
enum MACRO_TIMERR {TIMERR_NOERROR = 0,TIMERR_NOCANDO = 97,TIMERR_STRUCT = 129,};
enum MACRO_UNCLEN {UNCLEN = 17,};
enum MACRO_USER_0 {USER = 0x2,};
enum MACRO_WAVERR {WAVERR_BADFORMAT = 32,WAVERR_STILLPLAYING = 33,WAVERR_UNPREPARED = 34,WAVERR_SYNC = 35,WAVERR_LASTERROR = 35,};
enum MACRO_WINSTA {WINSTA_ACCESSCLIPBOARD = 4,WINSTA_ACCESSGLOBALATOMS = 32,WINSTA_CREATEDESKTOP = 8,WINSTA_ENUMDESKTOPS = 1,WINSTA_ENUMERATE = 256,WINSTA_EXITWINDOWS = 64,WINSTA_READATTRIBUTES = 2,WINSTA_READSCREEN = 512,WINSTA_WRITEATTRIBUTES = 16,};
enum MACRO_WINVER {WINVER = 0x400,};
enum MACRO_WM_CPL {WM_CPL_LAUNCH = 2024,WM_CPL_LAUNCHED = 2025,};
enum MACRO_WM_DDE {WM_DDE_FIRST = 0x3E0,WM_DDE_INITIATE = 0x3E0,WM_DDE_TERMINATE = 0x3E1,WM_DDE_ADVISE = 0x3E2,WM_DDE_UNADVISE = 0x3E3,WM_DDE_ACK = 0x3E4,WM_DDE_DATA = 0x3E5,WM_DDE_REQUEST = 0x3E6,WM_DDE_POKE = 0x3E7,WM_DDE_EXECUTE = 0x3E8,WM_DDE_LAST = 0x3E8,};
enum MACRO_WM_PSD {WM_PSD_PAGESETUPDLG = 1024,WM_PSD_FULLPAGERECT = 1025,WM_PSD_MINMARGINRECT = 1026,WM_PSD_MARGINRECT = 1027,WM_PSD_GREEKTEXTRECT = 1028,WM_PSD_ENVSTAMPRECT = 1029,WM_PSD_YAFULLPAGERECT = 1030,};
enum MACRO_WSATRY {WSATRY_AGAIN = 11002,};
enum MACRO_WSA_IO {WSA_IO_PENDING = 997,WSA_IO_INCOMPLETE = 996,WSA_INVALID_HANDLE = 6,WSA_INVALID_PARAMETER = 87,WSA_NOT_ENOUGH_MEMORY = 8,WSA_OPERATION_ABORTED = 995,WSA_INVALID_EVENT = 0,WSA_MAXIMUM_WAIT_EVENTS = 64,WSA_WAIT_FAILED = 4294967295,WSA_WAIT_EVENT_0 = 0,WSA_WAIT_IO_COMPLETION = 192,WSA_WAIT_TIMEOUT = 258,WSA_INFINITE = -1,};
enum MACRO_XCLASS {XCLASS_MASK = 0xFC00,XCLASS_BOOL = 0x1000,XCLASS_DATA = 0x2000,XCLASS_FLAGS = 0x4000,XCLASS_NOTIFICATION = 0x8000,};
enum MACRO__MKNOD {_MKNOD_VER_LINUX = 1,_MKNOD_VER_SVR4 = 2,_MKNOD_VER = 1,};
enum MACRO__WCHAR {_WCHAR_H = 1,};
enum MACRO__WIN32 {_WIN32_WINNT = 1024,};
enum MACRO___STDC {__STDC_IEC_559__ = 1,__STDC_IEC_559_COMPLEX__ = 1,__STDC_ISO_10646__ = 200009,};
enum MACRO___ldiv {__ldiv_t_defined = 1,};
typedef struct _MEMORYSTATUS MEMORYSTATUS;
typedef void MENUTEMPLATE;
typedef struct tagMETAFILEPICT METAFILEPICT;
typedef struct tagMIDIOUTCAPSA MIDIOUTCAPSA;
typedef struct tagMIDIOUTCAPSW MIDIOUTCAPSW;
typedef struct _MODEMDEVCAPS MODEMDEVCAPS;
typedef struct _EE72D852D5A93ABA9CA530FC9E659A18 MapiFileDesc;
typedef void *NDR_CCONTEXT;
typedef struct _3FA64165D15A4602C29B2D9B0DA4A5E9 *NDR_SCONTEXT;
typedef struct _NETRESOURCEA NETRESOURCEA;
typedef struct _NETRESOURCEW NETRESOURCEW;
typedef struct _NM_TREEVIEWA NM_TREEVIEWA;
typedef struct _NM_TREEVIEWW NM_TREEVIEWW;
typedef struct tagLOGPALETTE *NPLOGPALETTE;
typedef struct _ACCESS_LIST *PACCESS_LIST;
typedef struct _AE_CONNSTOP *PAE_CONNSTOP;
typedef struct _AE_NETLOGON *PAE_NETLOGON;
typedef struct _AFPROTOCOLS *PAFPROTOCOLS;
typedef struct tagPALETTEENTRY PALETTEENTRY;
typedef struct _AUDIT_ENTRY *PAUDIT_ENTRY;
typedef struct _BIN_RESULTS *PBIN_RESULTS;
typedef struct tagCONVCONTEXT *PCONVCONTEXT;
typedef struct _CSADDR_INFO *PCSADDR_INFO;
typedef struct _DISK_RECORD *PDISK_RECORD;
typedef struct _DOC_INFO_1A *PDOC_INFO_1A;
typedef struct _DOC_INFO_1W *PDOC_INFO_1W;
typedef struct _DOC_INFO_2A *PDOC_INFO_2A;
typedef struct _DOC_INFO_2W *PDOC_INFO_2W;
typedef struct tagEMRANGLEARC *PEMRANGLEARC;
typedef struct tagEMRFILLPATH *PEMRFILLPATH;
typedef struct tagEMRFRAMERGN *PEMRFRAMERGN;
typedef struct tagEMRLINETO *PEMRMOVETOEX;
typedef struct tagEMRINVERTRGN *PEMRPAINTRGN;
typedef struct tagEMRPOLYDRAW *PEMRPOLYDRAW;
typedef struct tagEMRPOLYLINE *PEMRPOLYLINE;
typedef struct tagEVENTMSG *PEVENTMSGMSG;
typedef struct tagEXTLOGFONTA *PEXTLOGFONTA;
typedef struct tagEXTLOGFONTW *PEXTLOGFONTW;
typedef struct _FILE_INFO_2 *PFILE_INFO_2;
typedef struct _FILE_INFO_3 *PFILE_INFO_3;
typedef struct tagHEAPENTRY32 *PHEAPENTRY32;
typedef struct _JOB_INFO_1A *PJOB_INFO_1A;
typedef struct _JOB_INFO_1W *PJOB_INFO_1W;
typedef struct _JOB_INFO_2A *PJOB_INFO_2A;
typedef struct _JOB_INFO_2W *PJOB_INFO_2W;
typedef struct tagMDINEXTMENU *PMDINEXTMENU;
typedef struct tagMIDIINCAPSA *PMIDIINCAPSA;
typedef struct tagMIDIINCAPSW *PMIDIINCAPSW;
typedef struct _NAME_BUFFER *PNAME_BUFFER;
typedef struct _PORT_INFO_1A PORT_INFO_1A;
typedef struct _PORT_INFO_1W PORT_INFO_1W;
typedef struct _PORT_INFO_2A PORT_INFO_2A;
typedef struct _PORT_INFO_2W PORT_INFO_2W;
typedef struct _PORT_INFO_3A PORT_INFO_3A;
typedef struct _PORT_INFO_3W PORT_INFO_3W;
typedef struct _REPL_INFO_0 *PREPL_INFO_0;
typedef struct tagPROPPAGEINFO PROPPAGEINFO;
typedef struct _RPC_MESSAGE *PRPC_MESSAGE;
typedef void (*PRPC_RUNDOWN)(void *);
typedef struct sockaddr_in *PSOCKADDR_IN;
typedef struct tagTEXTMETRICA *PTEXTMETRICA;
typedef struct tagTEXTMETRICW *PTEXTMETRICW;
typedef struct _USER_INFO_0 *PUSER_INFO_0;
typedef struct _USER_INFO_1 *PUSER_INFO_1;
typedef struct _USER_INFO_2 *PUSER_INFO_2;
typedef struct _USER_INFO_3 *PUSER_INFO_3;
typedef struct tagWAVEINCAPSA *PWAVEINCAPSA;
typedef struct tagWAVEINCAPSW *PWAVEINCAPSW;
typedef struct _WNDCLASSEXA *PWNDCLASSEXA;
typedef struct _WNDCLASSEXW *PWNDCLASSEXW;
typedef struct tagRemSTGMEDIUM RemSTGMEDIUM;
typedef struct _wireSAFEARR_BSTR SAFEARR_BSTR;
typedef struct _SHARE_INFO_0 SHARE_INFO_0;
typedef struct _SHARE_INFO_1 SHARE_INFO_1;
typedef struct _SHARE_INFO_2 SHARE_INFO_2;
typedef struct tagSOUNDSENTRYA SOUNDSENTRYA;
typedef struct tagSOUNDSENTRYW SOUNDSENTRYW;
typedef struct _STARTUPINFOA STARTUPINFOA;
typedef struct _STARTUPINFOW STARTUPINFOW;
typedef struct _TAPE_PREPARE TAPE_PREPARE;
typedef struct _E9995694CC4D0702CA77AA1397DA2E55 TBSAVEPARAMS;
typedef struct _TOKEN_GROUPS TOKEN_GROUPS;
typedef struct _TOKEN_SOURCE TOKEN_SOURCE;
typedef struct tagTOOLTIPTEXTA TOOLTIPTEXTA;
typedef struct tagTOOLTIPTEXTW TOOLTIPTEXTW;
typedef struct _TV_DISPINFOA TV_DISPINFOA;
typedef struct _TV_DISPINFOW TV_DISPINFOW;
typedef struct _USER_INFO_10 USER_INFO_10;
typedef struct _USER_INFO_11 USER_INFO_11;
typedef struct _USER_INFO_20 USER_INFO_20;
typedef struct _USER_INFO_21 USER_INFO_21;
typedef struct _USER_INFO_22 USER_INFO_22;
typedef short VARIANT_BOOL;
typedef struct tWAVEFORMATEX WAVEFORMATEX;
typedef struct tagWAVEOUTCAPSA WAVEOUTCAPSA;
typedef struct tagWAVEOUTCAPSW WAVEOUTCAPSW;
typedef struct _WSAQuerySetA WSAQUERYSETA;
typedef struct _WSAQuerySetW WSAQUERYSETW;
struct _RPC_VERSION {unsigned short MajorVersion;unsigned short MinorVersion;};
typedef unsigned int __fsblkcnt_t;
typedef unsigned int __fsfilcnt_t;
enum __rusage_who {RUSAGE_SELF = 0x0,RUSAGE_CHILDREN = 0xFFFFFFFF,};
typedef unsigned int __useconds_t;
struct drand48_data {unsigned short __x[3];unsigned short __old_x[3];unsigned short __c;unsigned short __init;unsigned long long __a;};
enum tagDVASPECT2 {DVASPECT_OPAQUE = 0x10,DVASPECT_TRANSPARENT = 0x20,};
enum tagFUNCFLAGS {FUNCFLAG_FRESTRICTED = 0x1,FUNCFLAG_FSOURCE = 0x2,FUNCFLAG_FBINDABLE = 0x4,FUNCFLAG_FREQUESTEDIT = 0x8,FUNCFLAG_FDISPLAYBIND = 0x10,FUNCFLAG_FDEFAULTBIND = 0x20,FUNCFLAG_FHIDDEN = 0x40,FUNCFLAG_FUSESGETLASTERROR = 0x80,FUNCFLAG_FDEFAULTCOLLELEM = 0x100,FUNCFLAG_FUIDEFAULT = 0x200,FUNCFLAG_FNONBROWSABLE = 0x400,FUNCFLAG_FREPLACEABLE = 0x800,FUNCFLAG_FIMMEDIATEBIND = 0x1000,};
enum tagMSHLFLAGS {MSHLFLAGS_NORMAL = 0x0,MSHLFLAGS_TABLESTRONG = 0x1,MSHLFLAGS_TABLEWEAK = 0x2,};
enum tagTYPEFLAGS {TYPEFLAG_FAPPOBJECT = 0x1,TYPEFLAG_FCANCREATE = 0x2,TYPEFLAG_FLICENSED = 0x4,TYPEFLAG_FPREDECLID = 0x8,TYPEFLAG_FHIDDEN = 0x10,TYPEFLAG_FCONTROL = 0x20,TYPEFLAG_FDUAL = 0x40,TYPEFLAG_FNONEXTENSIBLE = 0x80,TYPEFLAG_FOLEAUTOMATION = 0x100,TYPEFLAG_FRESTRICTED = 0x200,TYPEFLAG_FAGGREGATABLE = 0x400,TYPEFLAG_FREPLACEABLE = 0x800,TYPEFLAG_FDISPATCHABLE = 0x1000,TYPEFLAG_FREVERSEBIND = 0x2000,};
typedef struct _ACCESS_LIST ACCESS_LIST;
typedef struct _AE_CONNSTOP AE_CONNSTOP;
typedef struct _AE_NETLOGON AE_NETLOGON;
typedef struct _AFPROTOCOLS AFPROTOCOLS;
typedef struct _AUDIT_ENTRY AUDIT_ENTRY;
typedef struct _BIN_RESULTS BIN_RESULTS;
typedef struct _charformat CHARFORMATA;
typedef struct _charformatw CHARFORMATW;
typedef struct _4532F7D10C15B8B11D529D53ECAF8C30 CHARSETINFO;
typedef struct tagCHOOSEFONTA CHOOSEFONTA;
typedef struct tagCHOOSEFONTW CHOOSEFONTW;
typedef struct tagCOLORSCHEME COLORSCHEME;
typedef struct tagCONNECTDATA CONNECTDATA;
typedef struct tagCONTROLINFO CONTROLINFO;
typedef struct tagCONVCONTEXT CONVCONTEXT;
typedef struct _CSADDR_INFO CSADDR_INFO;
typedef struct tagCURSORSHAPE CURSORSHAPE;
typedef struct _DEBUG_EVENT DEBUG_EVENT;
typedef struct _DISK_RECORD DISK_RECORD;
typedef struct _1C9ED8E2FE494C714F8336D090291E50 DLGTEMPLATE;
typedef struct _DOC_INFO_1A DOC_INFO_1A;
typedef struct _DOC_INFO_1W DOC_INFO_1W;
typedef struct _DOC_INFO_2A DOC_INFO_2A;
typedef struct _DOC_INFO_2W DOC_INFO_2W;
typedef struct tagEMRANGLEARC EMRANGLEARC;
typedef struct tagEMRFILLPATH EMRFILLPATH;
typedef struct tagEMRFRAMERGN EMRFRAMERGN;
typedef struct tagEMRLINETO EMRMOVETOEX;
typedef struct tagEMRINVERTRGN EMRPAINTRGN;
typedef struct tagEMRPOLYDRAW EMRPOLYDRAW;
typedef struct tagEMRPOLYLINE EMRPOLYLINE;
typedef struct _endropfiles ENDROPFILES;
typedef struct _enprotected ENPROTECTED;
typedef struct tagEXTLOGFONTA EXTLOGFONTA;
typedef struct tagEXTLOGFONTW EXTLOGFONTW;
typedef struct _FILE_INFO_2 FILE_INFO_2;
typedef struct _FILE_INFO_3 FILE_INFO_3;
typedef struct _findtextexA FINDTEXTEXA;
typedef struct _findtextexW FINDTEXTEXW;
typedef struct _formatrange FORMATRANGE;
typedef int FXPT16DOT16;
typedef struct tagHANDLETABLE HANDLETABLE;
typedef struct HCOLORSPACE__ *HCOLORSPACE;
struct HCONVLIST__ {int i;};
typedef struct tagHEAPENTRY32 HEAPENTRY32;
struct HINSTANCE__ {int i;};
struct HMETAFILE__ {int i;};
struct HMIDISTRM__ {int i;};
struct HMIXEROBJ__ {int i;};
typedef struct _HSE_TF_INFO HSE_TF_INFO;
struct HTERMINAL__ {int i;};
struct HTREEITEM__ {int i;};
struct IAdviseSink {struct IAdviseSinkVtbl *lpVtbl;};
struct IDataObject {struct IDataObjectVtbl *lpVtbl;};
struct IDropSource {struct IDropSourceVtbl *lpVtbl;};
struct IDropTarget {struct IDropTargetVtbl *lpVtbl;};
struct IEnumHLITEM {struct IEnumHLITEMVtbl *lpVtbl;};
struct IEnumIDList {struct IEnumIDListVtbl *lpVtbl;};
struct IEnumString {struct IEnumStringVtbl *lpVtbl;};
struct IFileViewer {struct IFileViewerVtbl *lpVtbl;};
struct IOleControl {struct IOleControlVtbl *lpVtbl;};
struct IRAPIStream {struct IRAPIStreamVtbl *lpVtbl;};
struct IShellLinkA {struct IShellLinkAVtbl *lpVtbl;};
struct IShellLinkW {struct IShellLinkWVtbl *lpVtbl;};
struct IShellView2 {struct IShellView2Vtbl *lpVtbl;};
struct IViewObject {struct IViewObjectVtbl *lpVtbl;};
typedef void *I_RPC_MUTEX;
typedef struct _JOB_INFO_1A JOB_INFO_1A;
typedef struct _JOB_INFO_1W JOB_INFO_1W;
typedef struct _JOB_INFO_2A JOB_INFO_2A;
typedef struct _JOB_INFO_2W JOB_INFO_2W;
typedef struct tagKERNINGPAIR KERNINGPAIR;
typedef struct _AE_ACCLIM *LPAE_ACCLIM;
typedef struct _AE_ACLMOD *LPAE_ACLMOD;
typedef struct _AE_UASMOD *LPAE_UASMOD;
typedef struct tagBIND_OPTS *LPBIND_OPTS;
typedef struct _DROPFILES *LPDROPFILES;
typedef struct IErrorInfo *LPERRORINFO;
typedef struct _ERROR_LOG *LPERROR_LOG;
typedef struct tagEXCEPINFO *LPEXCEPINFO;
typedef struct tagEXTLOGPEN *LPEXTLOGPEN;
typedef struct tagFORMATETC *LPFORMATETC;
typedef struct joyinfoex_tag *LPJOYINFOEX;
typedef struct _LDT_ENTRY *LPLDT_ENTRY;
typedef struct ILockBytes *LPLOCKBYTES;
typedef struct IMallocSpy *LPMALLOCSPY;
typedef struct _NMHEADERA *LPNMHEADERA;
typedef struct _NMHEADERW *LPNMHEADERW;
typedef struct _NM_UPDOWN *LPNM_UPDOWN;
typedef struct _NRESARRAY *LPNRESARRAY;
typedef struct _OFNOTIFYA *LPOFNOTIFYA;
typedef struct _OFNOTIFYW *LPOFNOTIFYW;
typedef struct IOleObject *LPOLEOBJECT;
typedef struct _OLESTREAM *LPOLESTREAM;
typedef struct IOleWindow *LPOLEWINDOW;
typedef struct tagPARAMDATA *LPPARAMDATA;
typedef struct tagPARAMDESC *LPPARAMDESC;
typedef struct tagPDA *LPPRINTDLGA;
typedef struct tagPDW *LPPRINTDLGW;
typedef struct _PSHNOTIFY *LPPSHNOTIFY;
typedef struct tagREBARINFO *LPREBARINFO;
typedef struct tagSAFEARRAY *LPSAFEARRAY;
typedef IShellIcon *LPSHELLICON;
typedef struct IShellView *LPSHELLVIEW;
typedef struct _STD_ALERT *LPSTD_ALERT;
typedef struct tagSTGMEDIUM *LPSTGMEDIUM;
typedef struct tagSTYLEBUFA *LPSTYLEBUFA;
typedef struct tagSTYLEBUFW *LPSTYLEBUFW;
typedef struct tagTBNOTIFYA *LPTBNOTIFYA;
typedef struct tagTBNOTIFYW *LPTBNOTIFYW;
typedef struct tagTOOLINFOA *LPTOOLINFOA;
typedef struct tagTOOLINFOW *LPTOOLINFOW;
typedef struct tagTPMPARAMS *LPTPMPARAMS;
typedef struct _TV_SORTCB *LPTV_SORTCB;
typedef struct _WINDOWPOS *LPWINDOWPOS;
typedef struct _WNDCLASSA *LPWNDCLASSA;
typedef struct _WNDCLASSW *LPWNDCLASSW;
enum MACRO_AF_OP {AF_OP_PRINT = 1,AF_OP_COMM = 2,AF_OP_SERVER = 4,AF_OP_ACCOUNTS = 8,AF_SETTABLE_BITS = 15,};
enum MACRO_ASYNC {ASYNC_MODE_COMPATIBILITY = 1,ASYNC_MODE_DEFAULT = 0,};
enum MACRO_BRUSH {BLACK_BRUSH = 4,DKGRAY_BRUSH = 3,GRAY_BRUSH = 2,HOLLOW_BRUSH = 5,LTGRAY_BRUSH = 1,NULL_BRUSH = 5,WHITE_BRUSH = 0,};
enum MACRO_CACHE {CACHE_ENTRY_ATTRIBUTE_FC = 4,CACHE_ENTRY_HITRATE_FC = 16,CACHE_ENTRY_MODTIME_FC = 64,CACHE_ENTRY_EXPTIME_FC = 128,CACHE_ENTRY_ACCTIME_FC = 256,CACHE_ENTRY_SYNCTIME_FC = 512,CACHE_ENTRY_HEADERINFO_FC = 1024,};
enum MACRO_CAPS1 {CAPS1 = 94,};
enum MACRO_CCERR {CCERR_CHOOSECOLORCODES = 0x5000,};
enum MACRO_CDERR {CDERR_DIALOGFAILURE = 0xFFFF,CDERR_GENERALCODES = 0x0,CDERR_STRUCTSIZE = 0x1,CDERR_INITIALIZATION = 0x2,CDERR_NOTEMPLATE = 0x3,CDERR_NOHINSTANCE = 0x4,CDERR_LOADSTRFAILURE = 0x5,CDERR_FINDRESFAILURE = 0x6,CDERR_LOADRESFAILURE = 0x7,CDERR_LOCKRESFAILURE = 0x8,CDERR_MEMALLOCFAILURE = 0x9,CDERR_MEMLOCKFAILURE = 0xA,CDERR_NOHOOK = 0xB,CDERR_REGISTERMSGFAIL = 0xC,};
enum MACRO_CFERR {CFERR_CHOOSEFONTCODES = 0x2000,CFERR_NOFONTS = 0x2001,CFERR_MAXLESSTHANMIN = 0x2002,};
enum MACRO_CLASS {CLASS_OBJ = 0x10,OTHER_OBJ = 0x20,};
enum MACRO_CNLEN {CNLEN = 15,};
enum MACRO_COLOR {COLOR_ADJ_MIN = -100,COLOR_ADJ_MAX = 100,};
enum MACRO_CRYPT {CRYPT_VERIFYCONTEXT = 0xF0000000,CRYPT_NEWKEYSET = 0x8,CRYPT_DELETEKEYSET = 0x10,CRYPT_MACHINE_KEYSET = 0x20,CRYPT_EXPORTABLE = 0x1,CRYPT_USER_PROTECTED = 0x2,CRYPT_CREATE_SALT = 0x4,CRYPT_UPDATE_KEY = 0x8,};
enum MACRO_CSIDL {CSIDL_DESKTOP = 0,CSIDL_PROGRAMS = 2,CSIDL_CONTROLS = 3,CSIDL_PRINTERS = 4,CSIDL_PERSONAL = 5,CSIDL_FAVORITES = 6,CSIDL_STARTUP = 7,CSIDL_RECENT = 8,CSIDL_SENDTO = 9,CSIDL_BITBUCKET = 10,CSIDL_STARTMENU = 11,CSIDL_DESKTOPDIRECTORY = 16,CSIDL_DRIVES = 17,CSIDL_NETWORK = 18,CSIDL_NETHOOD = 19,CSIDL_FONTS = 20,CSIDL_TEMPLATES = 21,};
enum MACRO_DEBUG {DEBUG_PROCESS = 1,DEBUG_ONLY_THIS_PROCESS = 2,};
enum MACRO_DMBIN {DMBIN_FIRST = 1,DMBIN_UPPER = 1,DMBIN_ONLYONE = 1,DMBIN_LOWER = 2,DMBIN_MIDDLE = 3,DMBIN_MANUAL = 4,DMBIN_ENVELOPE = 5,DMBIN_ENVMANUAL = 6,DMBIN_AUTO = 7,DMBIN_TRACTOR = 8,DMBIN_SMALLFMT = 9,DMBIN_LARGEFMT = 10,DMBIN_LARGECAPACITY = 11,DMBIN_CASSETTE = 14,DMBIN_FORMSOURCE = 15,DMBIN_LAST = 15,DMBIN_USER = 256,};
enum MACRO_DMDUP {DMDUP_SIMPLEX = 1,DMDUP_VERTICAL = 2,DMDUP_HORIZONTAL = 3,};
enum MACRO_DMICM {DMICM_SATURATE = 1,DMICM_CONTRAST = 2,DMICM_COLORMETRIC = 3,DMICM_USER = 256,};
enum MACRO_DMRES {DMRES_DRAFT = -1,DMRES_LOW = -2,DMRES_MEDIUM = -3,DMRES_HIGH = -4,};
enum MACRO_DNLEN {DNLEN = 15,};
enum MACRO_DRIVE {DRIVE_REMOVABLE = 2,DRIVE_FIXED = 3,DRIVE_REMOTE = 4,DRIVE_CDROM = 5,DRIVE_RAMDISK = 6,DRIVE_UNKNOWN = 0,DRIVE_NO_ROOT_DIR = 1,};
enum MACRO_ECOOP {ECOOP_SET = 1,ECOOP_OR = 2,ECOOP_AND = 3,ECOOP_XOR = 4,};
enum MACRO_ERROR {ERROR_SUCCESS = 0,NO_ERROR = 0,ERROR_INVALID_FUNCTION = 1,ERROR_FILE_NOT_FOUND = 2,ERROR_PATH_NOT_FOUND = 3,ERROR_TOO_MANY_OPEN_FILES = 4,ERROR_ACCESS_DENIED = 5,ERROR_INVALID_HANDLE = 6,ERROR_ARENA_TRASHED = 7,ERROR_NOT_ENOUGH_MEMORY = 8,ERROR_INVALID_BLOCK = 9,ERROR_BAD_ENVIRONMENT = 10,ERROR_BAD_FORMAT = 11,ERROR_INVALID_ACCESS = 12,ERROR_INVALID_DATA = 13,ERROR_OUTOFMEMORY = 14,ERROR_INVALID_DRIVE = 15,ERROR_CURRENT_DIRECTORY = 16,ERROR_NOT_SAME_DEVICE = 17,ERROR_NO_MORE_FILES = 18,ERROR_WRITE_PROTECT = 19,ERROR_BAD_UNIT = 20,ERROR_NOT_READY = 21,ERROR_BAD_COMMAND = 22,ERROR_CRC = 23,ERROR_BAD_LENGTH = 24,ERROR_SEEK = 25,ERROR_NOT_DOS_DISK = 26,ERROR_SECTOR_NOT_FOUND = 27,ERROR_OUT_OF_PAPER = 28,ERROR_WRITE_FAULT = 29,ERROR_READ_FAULT = 30,ERROR_GEN_FAILURE = 31,ERROR_SHARING_VIOLATION = 32,ERROR_LOCK_VIOLATION = 33,ERROR_WRONG_DISK = 34,ERROR_SHARING_BUFFER_EXCEEDED = 36,ERROR_HANDLE_EOF = 38,ERROR_HANDLE_DISK_FULL = 39,ERROR_NOT_SUPPORTED = 50,ERROR_REM_NOT_LIST = 51,ERROR_DUP_NAME = 52,ERROR_BAD_NETPATH = 53,ERROR_NETWORK_BUSY = 54,ERROR_DEV_NOT_EXIST = 55,ERROR_TOO_MANY_CMDS = 56,ERROR_ADAP_HDW_ERR = 57,ERROR_BAD_NET_RESP = 58,ERROR_UNEXP_NET_ERR = 59,ERROR_BAD_REM_ADAP = 60,ERROR_PRINTQ_FULL = 61,ERROR_NO_SPOOL_SPACE = 62,ERROR_PRINT_CANCELLED = 63,ERROR_NETNAME_DELETED = 64,ERROR_NETWORK_ACCESS_DENIED = 65,ERROR_BAD_DEV_TYPE = 66,ERROR_BAD_NET_NAME = 67,ERROR_TOO_MANY_NAMES = 68,ERROR_TOO_MANY_SESS = 69,ERROR_SHARING_PAUSED = 70,ERROR_REQ_NOT_ACCEP = 71,ERROR_REDIR_PAUSED = 72,ERROR_FILE_EXISTS = 80,ERROR_CANNOT_MAKE = 82,ERROR_FAIL_I24 = 83,ERROR_OUT_OF_STRUCTURES = 84,ERROR_ALREADY_ASSIGNED = 85,ERROR_INVALID_PASSWORD = 86,ERROR_INVALID_PARAMETER = 87,ERROR_NET_WRITE_FAULT = 88,ERROR_NO_PROC_SLOTS = 89,ERROR_TOO_MANY_SEMAPHORES = 100,ERROR_EXCL_SEM_ALREADY_OWNED = 101,ERROR_SEM_IS_SET = 102,ERROR_TOO_MANY_SEM_REQUESTS = 103,ERROR_INVALID_AT_INTERRUPT_TIME = 104,ERROR_SEM_OWNER_DIED = 105,ERROR_SEM_USER_LIMIT = 106,ERROR_DISK_CHANGE = 107,ERROR_DRIVE_LOCKED = 108,ERROR_BROKEN_PIPE = 109,ERROR_OPEN_FAILED = 110,ERROR_BUFFER_OVERFLOW = 111,ERROR_DISK_FULL = 112,ERROR_NO_MORE_SEARCH_HANDLES = 113,ERROR_INVALID_TARGET_HANDLE = 114,ERROR_INVALID_CATEGORY = 117,ERROR_INVALID_VERIFY_SWITCH = 118,ERROR_BAD_DRIVER_LEVEL = 119,ERROR_CALL_NOT_IMPLEMENTED = 120,ERROR_SEM_TIMEOUT = 121,ERROR_INSUFFICIENT_BUFFER = 122,ERROR_INVALID_NAME = 123,ERROR_INVALID_LEVEL = 124,ERROR_NO_VOLUME_LABEL = 125,ERROR_MOD_NOT_FOUND = 126,ERROR_PROC_NOT_FOUND = 127,ERROR_WAIT_NO_CHILDREN = 128,ERROR_CHILD_NOT_COMPLETE = 129,ERROR_DIRECT_ACCESS_HANDLE = 130,ERROR_NEGATIVE_SEEK = 131,ERROR_SEEK_ON_DEVICE = 132,ERROR_IS_JOIN_TARGET = 133,ERROR_IS_JOINED = 134,ERROR_IS_SUBSTED = 135,ERROR_NOT_JOINED = 136,ERROR_NOT_SUBSTED = 137,ERROR_JOIN_TO_JOIN = 138,ERROR_SUBST_TO_SUBST = 139,ERROR_JOIN_TO_SUBST = 140,ERROR_SUBST_TO_JOIN = 141,ERROR_BUSY_DRIVE = 142,ERROR_SAME_DRIVE = 143,ERROR_DIR_NOT_ROOT = 144,ERROR_DIR_NOT_EMPTY = 145,ERROR_IS_SUBST_PATH = 146,ERROR_IS_JOIN_PATH = 147,ERROR_PATH_BUSY = 148,ERROR_IS_SUBST_TARGET = 149,ERROR_SYSTEM_TRACE = 150,ERROR_INVALID_EVENT_COUNT = 151,ERROR_TOO_MANY_MUXWAITERS = 152,ERROR_INVALID_LIST_FORMAT = 153,ERROR_LABEL_TOO_LONG = 154,ERROR_TOO_MANY_TCBS = 155,ERROR_SIGNAL_REFUSED = 156,ERROR_DISCARDED = 157,ERROR_NOT_LOCKED = 158,ERROR_BAD_THREADID_ADDR = 159,ERROR_BAD_ARGUMENTS = 160,ERROR_BAD_PATHNAME = 161,ERROR_SIGNAL_PENDING = 162,ERROR_MAX_THRDS_REACHED = 164,ERROR_LOCK_FAILED = 167,ERROR_BUSY = 170,ERROR_CANCEL_VIOLATION = 173,ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 174,ERROR_INVALID_SEGMENT_NUMBER = 180,ERROR_INVALID_ORDINAL = 182,ERROR_ALREADY_EXISTS = 183,ERROR_INVALID_FLAG_NUMBER = 186,ERROR_SEM_NOT_FOUND = 187,ERROR_INVALID_STARTING_CODESEG = 188,ERROR_INVALID_STACKSEG = 189,ERROR_INVALID_MODULETYPE = 190,ERROR_INVALID_EXE_SIGNATURE = 191,ERROR_EXE_MARKED_INVALID = 192,ERROR_BAD_EXE_FORMAT = 193,ERROR_ITERATED_DATA_EXCEEDS_64k = 194,ERROR_INVALID_MINALLOCSIZE = 195,ERROR_DYNLINK_FROM_INVALID_RING = 196,ERROR_IOPL_NOT_ENABLED = 197,ERROR_INVALID_SEGDPL = 198,ERROR_AUTODATASEG_EXCEEDS_64k = 199,ERROR_RING2SEG_MUST_BE_MOVABLE = 200,ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 201,ERROR_INFLOOP_IN_RELOC_CHAIN = 202,ERROR_ENVVAR_NOT_FOUND = 203,ERROR_NO_SIGNAL_SENT = 205,ERROR_FILENAME_EXCED_RANGE = 206,ERROR_RING2_STACK_IN_USE = 207,ERROR_META_EXPANSION_TOO_LONG = 208,ERROR_INVALID_SIGNAL_NUMBER = 209,ERROR_THREAD_1_INACTIVE = 210,ERROR_LOCKED = 212,ERROR_TOO_MANY_MODULES = 214,ERROR_NESTING_NOT_ALLOWED = 215,ERROR_BAD_PIPE = 230,ERROR_PIPE_BUSY = 231,ERROR_NO_DATA = 232,ERROR_PIPE_NOT_CONNECTED = 233,ERROR_MORE_DATA = 234,ERROR_VC_DISCONNECTED = 240,ERROR_INVALID_EA_NAME = 254,ERROR_EA_LIST_INCONSISTENT = 255,ERROR_NO_MORE_ITEMS = 259,ERROR_CANNOT_COPY = 266,ERROR_DIRECTORY = 267,ERROR_EAS_DIDNT_FIT = 275,ERROR_EA_FILE_CORRUPT = 276,ERROR_EA_TABLE_FULL = 277,ERROR_INVALID_EA_HANDLE = 278,ERROR_EAS_NOT_SUPPORTED = 282,ERROR_NOT_OWNER = 288,ERROR_TOO_MANY_POSTS = 298,ERROR_PARTIAL_COPY = 299,ERROR_MR_MID_NOT_FOUND = 317,ERROR_INVALID_ADDRESS = 487,ERROR_ARITHMETIC_OVERFLOW = 534,ERROR_PIPE_CONNECTED = 535,ERROR_PIPE_LISTENING = 536,ERROR_EA_ACCESS_DENIED = 994,ERROR_OPERATION_ABORTED = 995,ERROR_IO_INCOMPLETE = 996,ERROR_IO_PENDING = 997,ERROR_NOACCESS = 998,ERROR_SWAPERROR = 999,ERROR_STACK_OVERFLOW = 1001,ERROR_INVALID_MESSAGE = 1002,ERROR_CAN_NOT_COMPLETE = 1003,ERROR_INVALID_FLAGS = 1004,ERROR_UNRECOGNIZED_VOLUME = 1005,ERROR_FILE_INVALID = 1006,ERROR_FULLSCREEN_MODE = 1007,ERROR_NO_TOKEN = 1008,ERROR_BADDB = 1009,ERROR_BADKEY = 1010,ERROR_CANTOPEN = 1011,ERROR_CANTREAD = 1012,ERROR_CANTWRITE = 1013,ERROR_REGISTRY_RECOVERED = 1014,ERROR_REGISTRY_CORRUPT = 1015,ERROR_REGISTRY_IO_FAILED = 1016,ERROR_NOT_REGISTRY_FILE = 1017,ERROR_KEY_DELETED = 1018,ERROR_NO_LOG_SPACE = 1019,ERROR_KEY_HAS_CHILDREN = 1020,ERROR_CHILD_MUST_BE_VOLATILE = 1021,ERROR_NOTIFY_ENUM_DIR = 1022,ERROR_DEPENDENT_SERVICES_RUNNING = 1051,ERROR_INVALID_SERVICE_CONTROL = 1052,ERROR_SERVICE_REQUEST_TIMEOUT = 1053,ERROR_SERVICE_NO_THREAD = 1054,ERROR_SERVICE_DATABASE_LOCKED = 1055,ERROR_SERVICE_ALREADY_RUNNING = 1056,ERROR_INVALID_SERVICE_ACCOUNT = 1057,ERROR_SERVICE_DISABLED = 1058,ERROR_CIRCULAR_DEPENDENCY = 1059,ERROR_SERVICE_DOES_NOT_EXIST = 1060,ERROR_SERVICE_CANNOT_ACCEPT_CTRL = 1061,ERROR_SERVICE_NOT_ACTIVE = 1062,ERROR_FAILED_SERVICE_CONTROLLER_CONNECT = 1063,ERROR_EXCEPTION_IN_SERVICE = 1064,ERROR_DATABASE_DOES_NOT_EXIST = 1065,ERROR_SERVICE_SPECIFIC_ERROR = 1066,ERROR_PROCESS_ABORTED = 1067,ERROR_SERVICE_DEPENDENCY_FAIL = 1068,ERROR_SERVICE_LOGON_FAILED = 1069,ERROR_SERVICE_START_HANG = 1070,ERROR_INVALID_SERVICE_LOCK = 1071,ERROR_SERVICE_MARKED_FOR_DELETE = 1072,ERROR_SERVICE_EXISTS = 1073,ERROR_ALREADY_RUNNING_LKG = 1074,ERROR_SERVICE_DEPENDENCY_DELETED = 1075,ERROR_BOOT_ALREADY_ACCEPTED = 1076,ERROR_SERVICE_NEVER_STARTED = 1077,ERROR_DUPLICATE_SERVICE_NAME = 1078,ERROR_END_OF_MEDIA = 1100,ERROR_FILEMARK_DETECTED = 1101,ERROR_BEGINNING_OF_MEDIA = 1102,ERROR_SETMARK_DETECTED = 1103,ERROR_NO_DATA_DETECTED = 1104,ERROR_PARTITION_FAILURE = 1105,ERROR_INVALID_BLOCK_LENGTH = 1106,ERROR_DEVICE_NOT_PARTITIONED = 1107,ERROR_UNABLE_TO_LOCK_MEDIA = 1108,ERROR_UNABLE_TO_UNLOAD_MEDIA = 1109,ERROR_MEDIA_CHANGED = 1110,ERROR_BUS_RESET = 1111,ERROR_NO_MEDIA_IN_DRIVE = 1112,ERROR_NO_UNICODE_TRANSLATION = 1113,ERROR_DLL_INIT_FAILED = 1114,ERROR_SHUTDOWN_IN_PROGRESS = 1115,ERROR_NO_SHUTDOWN_IN_PROGRESS = 1116,ERROR_IO_DEVICE = 1117,ERROR_SERIAL_NO_DEVICE = 1118,ERROR_IRQ_BUSY = 1119,ERROR_MORE_WRITES = 1120,ERROR_COUNTER_TIMEOUT = 1121,ERROR_FLOPPY_ID_MARK_NOT_FOUND = 1122,ERROR_FLOPPY_WRONG_CYLINDER = 1123,ERROR_FLOPPY_UNKNOWN_ERROR = 1124,ERROR_FLOPPY_BAD_REGISTERS = 1125,ERROR_DISK_RECALIBRATE_FAILED = 1126,ERROR_DISK_OPERATION_FAILED = 1127,ERROR_DISK_RESET_FAILED = 1128,ERROR_EOM_OVERFLOW = 1129,ERROR_NOT_ENOUGH_SERVER_MEMORY = 1130,ERROR_POSSIBLE_DEADLOCK = 1131,ERROR_MAPPED_ALIGNMENT = 1132,ERROR_SET_POWER_STATE_VETOED = 1140,ERROR_SET_POWER_STATE_FAILED = 1141,ERROR_TOO_MANY_LINKS = 1142,ERROR_OLD_WIN_VERSION = 1150,ERROR_APP_WRONG_OS = 1151,ERROR_SINGLE_INSTANCE_APP = 1152,ERROR_RMODE_APP = 1153,ERROR_INVALID_DLL = 1154,ERROR_NO_ASSOCIATION = 1155,ERROR_DDE_FAIL = 1156,ERROR_DLL_NOT_FOUND = 1157,ERROR_BAD_USERNAME = 2202,ERROR_NOT_CONNECTED = 2250,ERROR_OPEN_FILES = 2401,ERROR_ACTIVE_CONNECTIONS = 2402,ERROR_DEVICE_IN_USE = 2404,ERROR_BAD_DEVICE = 1200,ERROR_CONNECTION_UNAVAIL = 1201,ERROR_DEVICE_ALREADY_REMEMBERED = 1202,ERROR_NO_NET_OR_BAD_PATH = 1203,ERROR_BAD_PROVIDER = 1204,ERROR_CANNOT_OPEN_PROFILE = 1205,ERROR_BAD_PROFILE = 1206,ERROR_NOT_CONTAINER = 1207,ERROR_EXTENDED_ERROR = 1208,ERROR_INVALID_GROUPNAME = 1209,ERROR_INVALID_COMPUTERNAME = 1210,ERROR_INVALID_EVENTNAME = 1211,ERROR_INVALID_DOMAINNAME = 1212,ERROR_INVALID_SERVICENAME = 1213,ERROR_INVALID_NETNAME = 1214,ERROR_INVALID_SHARENAME = 1215,ERROR_INVALID_PASSWORDNAME = 1216,ERROR_INVALID_MESSAGENAME = 1217,ERROR_INVALID_MESSAGEDEST = 1218,ERROR_SESSION_CREDENTIAL_CONFLICT = 1219,ERROR_REMOTE_SESSION_LIMIT_EXCEEDED = 1220,ERROR_DUP_DOMAINNAME = 1221,ERROR_NO_NETWORK = 1222,ERROR_CANCELLED = 1223,ERROR_USER_MAPPED_FILE = 1224,ERROR_CONNECTION_REFUSED = 1225,ERROR_GRACEFUL_DISCONNECT = 1226,ERROR_ADDRESS_ALREADY_ASSOCIATED = 1227,ERROR_ADDRESS_NOT_ASSOCIATED = 1228,ERROR_CONNECTION_INVALID = 1229,ERROR_CONNECTION_ACTIVE = 1230,ERROR_NETWORK_UNREACHABLE = 1231,ERROR_HOST_UNREACHABLE = 1232,ERROR_PROTOCOL_UNREACHABLE = 1233,ERROR_PORT_UNREACHABLE = 1234,ERROR_REQUEST_ABORTED = 1235,ERROR_CONNECTION_ABORTED = 1236,ERROR_RETRY = 1237,ERROR_CONNECTION_COUNT_LIMIT = 1238,ERROR_LOGIN_TIME_RESTRICTION = 1239,ERROR_LOGIN_WKSTA_RESTRICTION = 1240,ERROR_INCORRECT_ADDRESS = 1241,ERROR_ALREADY_REGISTERED = 1242,ERROR_SERVICE_NOT_FOUND = 1243,ERROR_NOT_AUTHENTICATED = 1244,ERROR_NOT_LOGGED_ON = 1245,ERROR_CONTINUE = 1246,ERROR_ALREADY_INITIALIZED = 1247,ERROR_NO_MORE_DEVICES = 1248,ERROR_NOT_ALL_ASSIGNED = 1300,ERROR_SOME_NOT_MAPPED = 1301,ERROR_NO_QUOTAS_FOR_ACCOUNT = 1302,ERROR_LOCAL_USER_SESSION_KEY = 1303,ERROR_NULL_LM_PASSWORD = 1304,ERROR_UNKNOWN_REVISION = 1305,ERROR_REVISION_MISMATCH = 1306,ERROR_INVALID_OWNER = 1307,ERROR_INVALID_PRIMARY_GROUP = 1308,ERROR_NO_IMPERSONATION_TOKEN = 1309,ERROR_CANT_DISABLE_MANDATORY = 1310,ERROR_NO_LOGON_SERVERS = 1311,ERROR_NO_SUCH_LOGON_SESSION = 1312,ERROR_NO_SUCH_PRIVILEGE = 1313,ERROR_PRIVILEGE_NOT_HELD = 1314,ERROR_INVALID_ACCOUNT_NAME = 1315,ERROR_USER_EXISTS = 1316,ERROR_NO_SUCH_USER = 1317,ERROR_GROUP_EXISTS = 1318,ERROR_NO_SUCH_GROUP = 1319,ERROR_MEMBER_IN_GROUP = 1320,ERROR_MEMBER_NOT_IN_GROUP = 1321,ERROR_LAST_ADMIN = 1322,ERROR_WRONG_PASSWORD = 1323,ERROR_ILL_FORMED_PASSWORD = 1324,ERROR_PASSWORD_RESTRICTION = 1325,ERROR_LOGON_FAILURE = 1326,ERROR_ACCOUNT_RESTRICTION = 1327,ERROR_INVALID_LOGON_HOURS = 1328,ERROR_INVALID_WORKSTATION = 1329,ERROR_PASSWORD_EXPIRED = 1330,ERROR_ACCOUNT_DISABLED = 1331,ERROR_NONE_MAPPED = 1332,ERROR_TOO_MANY_LUIDS_REQUESTED = 1333,ERROR_LUIDS_EXHAUSTED = 1334,ERROR_INVALID_SUB_AUTHORITY = 1335,ERROR_INVALID_ACL = 1336,ERROR_INVALID_SID = 1337,ERROR_INVALID_SECURITY_DESCR = 1338,ERROR_BAD_INHERITANCE_ACL = 1340,ERROR_SERVER_DISABLED = 1341,ERROR_SERVER_NOT_DISABLED = 1342,ERROR_INVALID_ID_AUTHORITY = 1343,ERROR_ALLOTTED_SPACE_EXCEEDED = 1344,ERROR_INVALID_GROUP_ATTRIBUTES = 1345,ERROR_BAD_IMPERSONATION_LEVEL = 1346,ERROR_CANT_OPEN_ANONYMOUS = 1347,ERROR_BAD_VALIDATION_CLASS = 1348,ERROR_BAD_TOKEN_TYPE = 1349,ERROR_NO_SECURITY_ON_OBJECT = 1350,ERROR_CANT_ACCESS_DOMAIN_INFO = 1351,ERROR_INVALID_SERVER_STATE = 1352,ERROR_INVALID_DOMAIN_STATE = 1353,ERROR_INVALID_DOMAIN_ROLE = 1354,ERROR_NO_SUCH_DOMAIN = 1355,ERROR_DOMAIN_EXISTS = 1356,ERROR_DOMAIN_LIMIT_EXCEEDED = 1357,ERROR_INTERNAL_DB_CORRUPTION = 1358,ERROR_INTERNAL_ERROR = 1359,ERROR_GENERIC_NOT_MAPPED = 1360,ERROR_BAD_DESCRIPTOR_FORMAT = 1361,ERROR_NOT_LOGON_PROCESS = 1362,ERROR_LOGON_SESSION_EXISTS = 1363,ERROR_NO_SUCH_PACKAGE = 1364,ERROR_BAD_LOGON_SESSION_STATE = 1365,ERROR_LOGON_SESSION_COLLISION = 1366,ERROR_INVALID_LOGON_TYPE = 1367,ERROR_CANNOT_IMPERSONATE = 1368,ERROR_RXACT_INVALID_STATE = 1369,ERROR_RXACT_COMMIT_FAILURE = 1370,ERROR_SPECIAL_ACCOUNT = 1371,ERROR_SPECIAL_GROUP = 1372,ERROR_SPECIAL_USER = 1373,ERROR_MEMBERS_PRIMARY_GROUP = 1374,ERROR_TOKEN_ALREADY_IN_USE = 1375,ERROR_NO_SUCH_ALIAS = 1376,ERROR_MEMBER_NOT_IN_ALIAS = 1377,ERROR_MEMBER_IN_ALIAS = 1378,ERROR_ALIAS_EXISTS = 1379,ERROR_LOGON_NOT_GRANTED = 1380,ERROR_TOO_MANY_SECRETS = 1381,ERROR_SECRET_TOO_LONG = 1382,ERROR_INTERNAL_DB_ERROR = 1383,ERROR_TOO_MANY_CONTEXT_IDS = 1384,ERROR_LOGON_TYPE_NOT_GRANTED = 1385,ERROR_NT_CROSS_ENCRYPTION_REQUIRED = 1386,ERROR_NO_SUCH_MEMBER = 1387,ERROR_INVALID_MEMBER = 1388,ERROR_TOO_MANY_SIDS = 1389,ERROR_LM_CROSS_ENCRYPTION_REQUIRED = 1390,ERROR_NO_INHERITANCE = 1391,ERROR_FILE_CORRUPT = 1392,ERROR_DISK_CORRUPT = 1393,ERROR_NO_USER_SESSION_KEY = 1394,ERROR_LICENSE_QUOTA_EXCEEDED = 1395,ERROR_INVALID_WINDOW_HANDLE = 1400,ERROR_INVALID_MENU_HANDLE = 1401,ERROR_INVALID_CURSOR_HANDLE = 1402,ERROR_INVALID_ACCEL_HANDLE = 1403,ERROR_INVALID_HOOK_HANDLE = 1404,ERROR_INVALID_DWP_HANDLE = 1405,ERROR_TLW_WITH_WSCHILD = 1406,ERROR_CANNOT_FIND_WND_CLASS = 1407,ERROR_WINDOW_OF_OTHER_THREAD = 1408,ERROR_HOTKEY_ALREADY_REGISTERED = 1409,ERROR_CLASS_ALREADY_EXISTS = 1410,ERROR_CLASS_DOES_NOT_EXIST = 1411,ERROR_CLASS_HAS_WINDOWS = 1412,ERROR_INVALID_INDEX = 1413,ERROR_INVALID_ICON_HANDLE = 1414,ERROR_PRIVATE_DIALOG_INDEX = 1415,ERROR_LISTBOX_ID_NOT_FOUND = 1416,ERROR_NO_WILDCARD_CHARACTERS = 1417,ERROR_CLIPBOARD_NOT_OPEN = 1418,ERROR_HOTKEY_NOT_REGISTERED = 1419,ERROR_WINDOW_NOT_DIALOG = 1420,ERROR_CONTROL_ID_NOT_FOUND = 1421,ERROR_INVALID_COMBOBOX_MESSAGE = 1422,ERROR_WINDOW_NOT_COMBOBOX = 1423,ERROR_INVALID_EDIT_HEIGHT = 1424,ERROR_DC_NOT_FOUND = 1425,ERROR_INVALID_HOOK_FILTER = 1426,ERROR_INVALID_FILTER_PROC = 1427,ERROR_HOOK_NEEDS_HMOD = 1428,ERROR_GLOBAL_ONLY_HOOK = 1429,ERROR_JOURNAL_HOOK_SET = 1430,ERROR_HOOK_NOT_INSTALLED = 1431,ERROR_INVALID_LB_MESSAGE = 1432,ERROR_SETCOUNT_ON_BAD_LB = 1433,ERROR_LB_WITHOUT_TABSTOPS = 1434,ERROR_DESTROY_OBJECT_OF_OTHER_THREAD = 1435,ERROR_CHILD_WINDOW_MENU = 1436,ERROR_NO_SYSTEM_MENU = 1437,ERROR_INVALID_MSGBOX_STYLE = 1438,ERROR_INVALID_SPI_VALUE = 1439,ERROR_SCREEN_ALREADY_LOCKED = 1440,ERROR_HWNDS_HAVE_DIFF_PARENT = 1441,ERROR_NOT_CHILD_WINDOW = 1442,ERROR_INVALID_GW_COMMAND = 1443,ERROR_INVALID_THREAD_ID = 1444,ERROR_NON_MDICHILD_WINDOW = 1445,ERROR_POPUP_ALREADY_ACTIVE = 1446,ERROR_NO_SCROLLBARS = 1447,ERROR_INVALID_SCROLLBAR_RANGE = 1448,ERROR_INVALID_SHOWWIN_COMMAND = 1449,ERROR_NO_SYSTEM_RESOURCES = 1450,ERROR_NONPAGED_SYSTEM_RESOURCES = 1451,ERROR_PAGED_SYSTEM_RESOURCES = 1452,ERROR_WORKING_SET_QUOTA = 1453,ERROR_PAGEFILE_QUOTA = 1454,ERROR_COMMITMENT_LIMIT = 1455,ERROR_MENU_ITEM_NOT_FOUND = 1456,ERROR_EVENTLOG_FILE_CORRUPT = 1500,ERROR_EVENTLOG_CANT_START = 1501,ERROR_LOG_FILE_FULL = 1502,ERROR_EVENTLOG_FILE_CHANGED = 1503,RPC_S_INVALID_STRING_BINDING = 1700,RPC_S_WRONG_KIND_OF_BINDING = 1701,RPC_S_INVALID_BINDING = 1702,RPC_S_PROTSEQ_NOT_SUPPORTED = 1703,RPC_S_INVALID_RPC_PROTSEQ = 1704,RPC_S_INVALID_STRING_UUID = 1705,RPC_S_INVALID_ENDPOINT_FORMAT = 1706,RPC_S_INVALID_NET_ADDR = 1707,RPC_S_NO_ENDPOINT_FOUND = 1708,RPC_S_INVALID_TIMEOUT = 1709,RPC_S_OBJECT_NOT_FOUND = 1710,RPC_S_ALREADY_REGISTERED = 1711,RPC_S_TYPE_ALREADY_REGISTERED = 1712,RPC_S_ALREADY_LISTENING = 1713,RPC_S_NO_PROTSEQS_REGISTERED = 1714,RPC_S_NOT_LISTENING = 1715,RPC_S_UNKNOWN_MGR_TYPE = 1716,RPC_S_UNKNOWN_IF = 1717,RPC_S_NO_BINDINGS = 1718,RPC_S_NO_PROTSEQS = 1719,RPC_S_CANT_CREATE_ENDPOINT = 1720,RPC_S_OUT_OF_RESOURCES = 1721,RPC_S_SERVER_UNAVAILABLE = 1722,RPC_S_SERVER_TOO_BUSY = 1723,RPC_S_INVALID_NETWORK_OPTIONS = 1724,RPC_S_NO_CALL_ACTIVE = 1725,RPC_S_CALL_FAILED = 1726,RPC_S_CALL_FAILED_DNE = 1727,RPC_S_PROTOCOL_ERROR = 1728,RPC_S_UNSUPPORTED_TRANS_SYN = 1730,RPC_S_UNSUPPORTED_TYPE = 1732,RPC_S_INVALID_TAG = 1733,RPC_S_INVALID_BOUND = 1734,RPC_S_NO_ENTRY_NAME = 1735,RPC_S_INVALID_NAME_SYNTAX = 1736,RPC_S_UNSUPPORTED_NAME_SYNTAX = 1737,RPC_S_UUID_NO_ADDRESS = 1739,RPC_S_DUPLICATE_ENDPOINT = 1740,RPC_S_UNKNOWN_AUTHN_TYPE = 1741,RPC_S_MAX_CALLS_TOO_SMALL = 1742,RPC_S_STRING_TOO_LONG = 1743,RPC_S_PROTSEQ_NOT_FOUND = 1744,RPC_S_PROCNUM_OUT_OF_RANGE = 1745,RPC_S_BINDING_HAS_NO_AUTH = 1746,RPC_S_UNKNOWN_AUTHN_SERVICE = 1747,RPC_S_UNKNOWN_AUTHN_LEVEL = 1748,RPC_S_INVALID_AUTH_IDENTITY = 1749,RPC_S_UNKNOWN_AUTHZ_SERVICE = 1750,EPT_S_INVALID_ENTRY = 1751,EPT_S_CANT_PERFORM_OP = 1752,EPT_S_NOT_REGISTERED = 1753,RPC_S_NOTHING_TO_EXPORT = 1754,RPC_S_INCOMPLETE_NAME = 1755,RPC_S_INVALID_VERS_OPTION = 1756,RPC_S_NO_MORE_MEMBERS = 1757,RPC_S_NOT_ALL_OBJS_UNEXPORTED = 1758,RPC_S_INTERFACE_NOT_FOUND = 1759,RPC_S_ENTRY_ALREADY_EXISTS = 1760,RPC_S_ENTRY_NOT_FOUND = 1761,RPC_S_NAME_SERVICE_UNAVAILABLE = 1762,RPC_S_INVALID_NAF_ID = 1763,RPC_S_CANNOT_SUPPORT = 1764,RPC_S_NO_CONTEXT_AVAILABLE = 1765,RPC_S_INTERNAL_ERROR = 1766,RPC_S_ZERO_DIVIDE = 1767,RPC_S_ADDRESS_ERROR = 1768,RPC_S_FP_DIV_ZERO = 1769,RPC_S_FP_UNDERFLOW = 1770,RPC_S_FP_OVERFLOW = 1771,RPC_X_NO_MORE_ENTRIES = 1772,RPC_X_SS_CHAR_TRANS_OPEN_FAIL = 1773,RPC_X_SS_CHAR_TRANS_SHORT_FILE = 1774,RPC_X_SS_IN_NULL_CONTEXT = 1775,RPC_X_SS_CONTEXT_DAMAGED = 1777,RPC_X_SS_HANDLES_MISMATCH = 1778,RPC_X_SS_CANNOT_GET_CALL_HANDLE = 1779,RPC_X_NULL_REF_POINTER = 1780,RPC_X_ENUM_VALUE_OUT_OF_RANGE = 1781,RPC_X_BYTE_COUNT_TOO_SMALL = 1782,RPC_X_BAD_STUB_DATA = 1783,ERROR_INVALID_USER_BUFFER = 1784,ERROR_UNRECOGNIZED_MEDIA = 1785,ERROR_NO_TRUST_LSA_SECRET = 1786,ERROR_NO_TRUST_SAM_ACCOUNT = 1787,ERROR_TRUSTED_DOMAIN_FAILURE = 1788,ERROR_TRUSTED_RELATIONSHIP_FAILURE = 1789,ERROR_TRUST_FAILURE = 1790,RPC_S_CALL_IN_PROGRESS = 1791,ERROR_NETLOGON_NOT_STARTED = 1792,ERROR_ACCOUNT_EXPIRED = 1793,ERROR_REDIRECTOR_HAS_OPEN_HANDLES = 1794,ERROR_PRINTER_DRIVER_ALREADY_INSTALLED = 1795,ERROR_UNKNOWN_PORT = 1796,ERROR_UNKNOWN_PRINTER_DRIVER = 1797,ERROR_UNKNOWN_PRINTPROCESSOR = 1798,ERROR_INVALID_SEPARATOR_FILE = 1799,ERROR_INVALID_PRIORITY = 1800,ERROR_INVALID_PRINTER_NAME = 1801,ERROR_PRINTER_ALREADY_EXISTS = 1802,ERROR_INVALID_PRINTER_COMMAND = 1803,ERROR_INVALID_DATATYPE = 1804,ERROR_INVALID_ENVIRONMENT = 1805,RPC_S_NO_MORE_BINDINGS = 1806,ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT = 1807,ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT = 1808,ERROR_NOLOGON_SERVER_TRUST_ACCOUNT = 1809,ERROR_DOMAIN_TRUST_INCONSISTENT = 1810,ERROR_SERVER_HAS_OPEN_HANDLES = 1811,ERROR_RESOURCE_DATA_NOT_FOUND = 1812,ERROR_RESOURCE_TYPE_NOT_FOUND = 1813,ERROR_RESOURCE_NAME_NOT_FOUND = 1814,ERROR_RESOURCE_LANG_NOT_FOUND = 1815,ERROR_NOT_ENOUGH_QUOTA = 1816,RPC_S_NO_INTERFACES = 1817,RPC_S_CALL_CANCELLED = 1818,RPC_S_BINDING_INCOMPLETE = 1819,RPC_S_COMM_FAILURE = 1820,RPC_S_UNSUPPORTED_AUTHN_LEVEL = 1821,RPC_S_NO_PRINC_NAME = 1822,RPC_S_NOT_RPC_ERROR = 1823,RPC_S_UUID_LOCAL_ONLY = 1824,RPC_S_SEC_PKG_ERROR = 1825,RPC_S_NOT_CANCELLED = 1826,RPC_X_INVALID_ES_ACTION = 1827,RPC_X_WRONG_ES_VERSION = 1828,RPC_X_WRONG_STUB_VERSION = 1829,RPC_S_GROUP_MEMBER_NOT_FOUND = 1898,EPT_S_CANT_CREATE = 1899,RPC_S_INVALID_OBJECT = 1900,ERROR_INVALID_TIME = 1901,ERROR_INVALID_FORM_NAME = 1902,ERROR_INVALID_FORM_SIZE = 1903,ERROR_ALREADY_WAITING = 1904,ERROR_PRINTER_DELETED = 1905,ERROR_INVALID_PRINTER_STATE = 1906,ERROR_PASSWORD_MUST_CHANGE = 1907,ERROR_DOMAIN_CONTROLLER_NOT_FOUND = 1908,ERROR_ACCOUNT_LOCKED_OUT = 1909,ERROR_NO_BROWSER_SERVERS_FOUND = 6118,ERROR_INVALID_PIXEL_FORMAT = 2000,ERROR_BAD_DRIVER = 2001,ERROR_INVALID_WINDOW_STYLE = 2002,ERROR_METAFILE_NOT_SUPPORTED = 2003,ERROR_TRANSFORM_NOT_SUPPORTED = 2004,ERROR_CLIPPING_NOT_SUPPORTED = 2005,ERROR_UNKNOWN_PRINT_MONITOR = 3000,ERROR_PRINTER_DRIVER_IN_USE = 3001,ERROR_SPOOL_FILE_NOT_FOUND = 3002,ERROR_SPL_NO_STARTDOC = 3003,ERROR_SPL_NO_ADDJOB = 3004,ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED = 3005,ERROR_PRINT_MONITOR_ALREADY_INSTALLED = 3006,ERROR_WINS_INTERNAL = 4000,ERROR_CAN_NOT_DEL_LOCAL_WINS = 4001,ERROR_STATIC_INIT = 4002,ERROR_INC_BACKUP = 4003,ERROR_FULL_BACKUP = 4004,ERROR_REC_NON_EXISTENT = 4005,ERROR_RPL_NOT_ALLOWED = 4006,SEVERITY_SUCCESS = 0,SEVERITY_ERROR = 1,FACILITY_NT_BIT = 268435456,};
enum MACRO_EVENT {KEY_EVENT = 1,MOUSE_EVENT = 2,WINDOW_BUFFER_SIZE_EVENT = 4,MENU_EVENT = 8,FOCUS_EVENT = 16,};
enum MACRO_EVLEN {EVLEN = 16,UNLEN = 256,};
enum MACRO_FCIDM {FCIDM_SHVIEWFIRST = 0,FCIDM_SHVIEWLAST = 32767,FCIDM_BROWSERFIRST = 40960,FCIDM_BROWSERLAST = 48896,FCIDM_GLOBALFIRST = 32768,FCIDM_GLOBALLAST = 40959,FCIDM_MENU_FILE = 32768,FCIDM_MENU_EDIT = 32832,FCIDM_MENU_VIEW = 32896,FCIDM_MENU_VIEW_SEP_OPTIONS = 32897,FCIDM_MENU_TOOLS = 32960,FCIDM_MENU_TOOLS_SEP_GOTO = 32961,FCIDM_MENU_HELP = 33024,FCIDM_MENU_FIND = 33088,FCIDM_MENU_EXPLORE = 33104,FCIDM_TOOLBAR = 40960,FCIDM_STATUS = 40961,};
enum MACRO_FIRST {LVM_FIRST = 0x1000,TV_FIRST = 0x1100,HDM_FIRST = 0x1200,};
enum MACRO_FLAGS {FLAGS_ERROR_UI_FILTER_FOR_ERRORS = 0x1,FLAGS_ERROR_UI_FLAGS_CHANGE_OPTIONS = 0x2,FLAGS_ERROR_UI_FLAGS_GENERATE_DATA = 0x4,FLAGS_ERROR_UI_FLAGS_NO_UI = 0x8,};
enum MACRO_FNERR {FNERR_FILENAMECODES = 0x3000,FNERR_SUBCLASSFAILURE = 0x3001,FNERR_INVALIDFILENAME = 0x3002,FNERR_BUFFERTOOSMALL = 0x3003,};
enum MACRO_FRAME {FRAME_FPO = 0,FRAME_TRAP = 1,FRAME_TSS = 2,FRAME_NONFPO = 3,};
enum MACRO_FRERR {FRERR_FINDREPLACECODES = 0x4000,FRERR_BUFFERLENGTHZERO = 0x4001,};
enum MACRO_FSCTL {FSCTL_LOCK_VOLUME = 589848,FSCTL_UNLOCK_VOLUME = 589852,FSCTL_DISMOUNT_VOLUME = 589856,FSCTL_MOUNT_DBLS_VOLUME = 589876,FSCTL_GET_COMPRESSION = 589884,FSCTL_SET_COMPRESSION = 639040,FSCTL_READ_COMPRESSION = 606279,FSCTL_WRITE_COMPRESSION = 622667,};
enum MACRO_FVSIF {FVSIF_RECT = 1,FVSIF_PINNED = 2,FVSIF_NEWFAILED = 134217728,FVSIF_NEWFILE = -2147483648,FVSIF_CANVIEWIT = 1073741824,};
enum MACRO_GNLEN {GNLEN = 256,};
enum MACRO_GROUP {GROUP_NAME = 0x80,UNIQUE_NAME = 0x0,};
enum MACRO_HDATA {HDATA_APPOWNED = 1,};
enum MACRO_HFILE {HFILE_ERROR = -1,};
enum MACRO_HINST {HINST_COMMCTRL = -1,};
enum MACRO_HOVER {HOVER_DEFAULT = 0xFFFFFFFF,};
enum MACRO_HTTOP {HTTOP = 12,};
enum MACRO_IDANI {IDANI_OPEN = 1,IDANI_CLOSE = 2,IDANI_CAPTION = 3,};
enum MACRO_IDHOT {IDHOT_SNAPWINDOW = -1,IDHOT_SNAPDESKTOP = -2,};
enum MACRO_IDYES {IDYES = 6,};
enum MACRO_IMAGE {IMAGE_SIZEOF_FILE_HEADER = 20,IMAGE_FILE_RELOCS_STRIPPED = 1,IMAGE_FILE_EXECUTABLE_IMAGE = 2,IMAGE_FILE_LINE_NUMS_STRIPPED = 4,IMAGE_FILE_LOCAL_SYMS_STRIPPED = 8,IMAGE_FILE_BYTES_REVERSED_LO = 128,IMAGE_FILE_32BIT_MACHINE = 256,IMAGE_FILE_DEBUG_STRIPPED = 512,IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 1024,IMAGE_FILE_NET_RUN_FROM_SWAP = 2048,IMAGE_FILE_SYSTEM = 4096,IMAGE_FILE_DLL = 8192,IMAGE_FILE_UP_SYSTEM_ONLY = 16384,IMAGE_FILE_BYTES_REVERSED_HI = 32768,IMAGE_FILE_MACHINE_UNKNOWN = 0,IMAGE_FILE_MACHINE_I386 = 332,IMAGE_FILE_MACHINE_R3000 = 354,IMAGE_FILE_MACHINE_R4000 = 358,IMAGE_FILE_MACHINE_R10000 = 360,IMAGE_FILE_MACHINE_ALPHA = 388,IMAGE_FILE_MACHINE_POWERPC = 496,IMAGE_DOS_SIGNATURE = 23117,IMAGE_OS2_SIGNATURE = 17742,IMAGE_OS2_SIGNATURE_LE = 17740,IMAGE_VXD_SIGNATURE = 17740,IMAGE_NT_SIGNATURE = 17744,IMAGE_NT_OPTIONAL_HDR_MAGIC = 267,IMAGE_ROM_OPTIONAL_HDR_MAGIC = 263,IMAGE_SEPARATE_DEBUG_SIGNATURE = 18756,IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16,IMAGE_SIZEOF_ROM_OPTIONAL_HEADER = 56,IMAGE_SIZEOF_STD_OPTIONAL_HEADER = 28,IMAGE_SIZEOF_NT_OPTIONAL_HEADER = 224,IMAGE_SIZEOF_SHORT_NAME = 8,IMAGE_SIZEOF_SECTION_HEADER = 40,IMAGE_SIZEOF_SYMBOL = 18,IMAGE_SIZEOF_AUX_SYMBOL = 18,IMAGE_SIZEOF_RELOCATION = 10,IMAGE_SIZEOF_BASE_RELOCATION = 8,IMAGE_SIZEOF_LINENUMBER = 6,IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR = 60,};
enum MACRO_LCMAP {LCMAP_BYTEREV = 2048,LCMAP_FULLWIDTH = 8388608,LCMAP_HALFWIDTH = 4194304,LCMAP_HIRAGANA = 1048576,LCMAP_KATAKANA = 2097152,LCMAP_LOWERCASE = 256,LCMAP_SORTKEY = 1024,LCMAP_UPPERCASE = 512,};
enum MACRO_LPSTR {LPSTR_TEXTCALLBACKW = -1,LPSTR_TEXTCALLBACKA = -1,};
enum MACRO_LVSCW {LVSCW_AUTOSIZE = -1,LVSCW_AUTOSIZE_USEHEADER = -2,};
enum MACRO_LVSIL {LVSIL_NORMAL = 0,LVSIL_SMALL = 1,LVSIL_STATE = 2,};
enum MACRO_MAJOR {MAJOR_VERSION_MASK = 15,};
enum MACRO_MIXER {MIXER_SHORT_NAME_CHARS = 16,MIXER_LONG_NAME_CHARS = 64,};
enum MACRO_MMIOM {MMIOM_READ = 0,MMIOM_WRITE = 1,MMIOM_SEEK = 2,MMIOM_OPEN = 3,MMIOM_CLOSE = 4,MMIOM_WRITEFLUSH = 5,MMIOM_RENAME = 6,MMIOM_USER = 32768,};
enum MACRO_MOUSE {MOUSE_MOVED = 1,};
enum MACRO_MUTEX {MUTEX_ALL_ACCESS = 0x1F0001,MUTEX_MODIFY_STATE = 0x1,};
enum MACRO_NDDEF {NDDEF_NOPASSWORDPROMPT = 0x1,NDDEF_NOCACHELOOKUP = 0x2,NDDEF_STRIP_NDDE = 0x4,};
enum MACRO_NELOG {NELOG_Internal_Error = 3100,NELOG_Resource_Shortage = 3101,NELOG_Unable_To_Lock_Segment = 3102,NELOG_Unable_To_Unlock_Segment = 3103,NELOG_Uninstall_Service = 3104,NELOG_Init_Exec_Fail = 3105,NELOG_Ncb_Error = 3106,NELOG_Net_Not_Started = 3107,NELOG_Ioctl_Error = 3108,NELOG_System_Semaphore = 3109,NELOG_Init_OpenCreate_Err = 3110,NELOG_NetBios = 3111,NELOG_SMB_Illegal = 3112,NELOG_Service_Fail = 3113,NELOG_Entries_Lost = 3114,NELOG_Init_Seg_Overflow = 3120,NELOG_Srv_No_Mem_Grow = 3121,NELOG_Access_File_Bad = 3122,NELOG_Srvnet_Not_Started = 3123,NELOG_Init_Chardev_Err = 3124,NELOG_Remote_API = 3125,NELOG_Ncb_TooManyErr = 3126,NELOG_Mailslot_err = 3127,NELOG_ReleaseMem_Alert = 3128,NELOG_AT_cannot_write = 3129,NELOG_Cant_Make_Msg_File = 3130,NELOG_Exec_Netservr_NoMem = 3131,NELOG_Server_Lock_Failure = 3132,NELOG_Msg_Shutdown = 3140,NELOG_Msg_Sem_Shutdown = 3141,NELOG_Msg_Log_Err = 3150,NELOG_VIO_POPUP_ERR = 3151,NELOG_Msg_Unexpected_SMB_Type = 3152,NELOG_Wksta_Infoseg = 3160,NELOG_Wksta_Compname = 3161,NELOG_Wksta_BiosThreadFailure = 3162,NELOG_Wksta_IniSeg = 3163,NELOG_Wksta_HostTab_Full = 3164,NELOG_Wksta_Bad_Mailslot_SMB = 3165,NELOG_Wksta_UASInit = 3166,NELOG_Wksta_SSIRelogon = 3167,NELOG_Build_Name = 3170,NELOG_Name_Expansion = 3171,NELOG_Message_Send = 3172,NELOG_Mail_Slt_Err = 3173,NELOG_AT_cannot_read = 3174,NELOG_AT_sched_err = 3175,NELOG_AT_schedule_file_created = 3176,NELOG_Srvnet_NB_Open = 3177,NELOG_AT_Exec_Err = 3178,NELOG_Lazy_Write_Err = 3180,NELOG_HotFix = 3181,NELOG_HardErr_From_Server = 3182,NELOG_LocalSecFail1 = 3183,NELOG_LocalSecFail2 = 3184,NELOG_LocalSecFail3 = 3185,NELOG_LocalSecGeneralFail = 3186,NELOG_NetWkSta_Internal_Error = 3190,NELOG_NetWkSta_No_Resource = 3191,NELOG_NetWkSta_SMB_Err = 3192,NELOG_NetWkSta_VC_Err = 3193,NELOG_NetWkSta_Stuck_VC_Err = 3194,NELOG_NetWkSta_NCB_Err = 3195,NELOG_NetWkSta_Write_Behind_Err = 3196,NELOG_NetWkSta_Reset_Err = 3197,NELOG_NetWkSta_Too_Many = 3198,NELOG_Srv_Thread_Failure = 3204,NELOG_Srv_Close_Failure = 3205,NELOG_ReplUserCurDir = 3206,NELOG_ReplCannotMasterDir = 3207,NELOG_ReplUpdateError = 3208,NELOG_ReplLostMaster = 3209,NELOG_NetlogonAuthDCFail = 3210,NELOG_ReplLogonFailed = 3211,NELOG_ReplNetErr = 3212,NELOG_ReplMaxFiles = 3213,NELOG_ReplMaxTreeDepth = 3214,NELOG_ReplBadMsg = 3215,NELOG_ReplSysErr = 3216,NELOG_ReplUserLoged = 3217,NELOG_ReplBadImport = 3218,NELOG_ReplBadExport = 3219,NELOG_ReplSignalFileErr = 3220,NELOG_DiskFT = 3221,NELOG_ReplAccessDenied = 3222,NELOG_NetlogonFailedPrimary = 3223,NELOG_NetlogonPasswdSetFailed = 3224,NELOG_NetlogonTrackingError = 3225,NELOG_NetlogonSyncError = 3226,NELOG_UPS_PowerOut = 3230,NELOG_UPS_Shutdown = 3231,NELOG_UPS_CmdFileError = 3232,NELOG_UPS_CannotOpenDriver = 3233,NELOG_UPS_PowerBack = 3234,NELOG_UPS_CmdFileConfig = 3235,NELOG_UPS_CmdFileExec = 3236,NELOG_Missing_Parameter = 3250,NELOG_Invalid_Config_Line = 3251,NELOG_Invalid_Config_File = 3252,NELOG_File_Changed = 3253,NELOG_Files_Dont_Fit = 3254,NELOG_Wrong_DLL_Version = 3255,NELOG_Error_in_DLL = 3256,NELOG_System_Error = 3257,NELOG_FT_ErrLog_Too_Large = 3258,NELOG_FT_Update_In_Progress = 3259,NELOG_OEM_Code = 3299,NELOG_NetlogonSSIInitError = 5700,NELOG_NetlogonFailedToUpdateTrustList = 5701,NELOG_NetlogonFailedToAddRpcInterface = 5702,NELOG_NetlogonFailedToReadMailslot = 5703,NELOG_NetlogonFailedToRegisterSC = 5704,NELOG_NetlogonChangeLogCorrupt = 5705,NELOG_NetlogonFailedToCreateShare = 5706,NELOG_NetlogonDownLevelLogonFailed = 5707,NELOG_NetlogonDownLevelLogoffFailed = 5708,NELOG_NetlogonNTLogonFailed = 5709,NELOG_NetlogonNTLogoffFailed = 5710,NELOG_NetlogonPartialSyncCallSuccess = 5711,NELOG_NetlogonPartialSyncCallFailed = 5712,NELOG_NetlogonFullSyncCallSuccess = 5713,NELOG_NetlogonFullSyncCallFailed = 5714,NELOG_NetlogonPartialSyncSuccess = 5715,NELOG_NetlogonPartialSyncFailed = 5716,NELOG_NetlogonFullSyncSuccess = 5717,NELOG_NetlogonFullSyncFailed = 5718,NELOG_NetlogonAuthNoDomainController = 5719,NELOG_NetlogonAuthNoTrustLsaSecret = 5720,NELOG_NetlogonAuthNoTrustSamAccount = 5721,NELOG_NetlogonServerAuthFailed = 5722,NELOG_NetlogonServerAuthNoTrustSamAccount = 5723,NELOG_FailedToRegisterSC = 5724,NELOG_FailedToSetServiceStatus = 5725,NELOG_FailedToGetComputerName = 5726,NELOG_DriverNotLoaded = 5727,NELOG_NoTranportLoaded = 5728,NELOG_NetlogonFailedDomainDelta = 5729,NELOG_NetlogonFailedGlobalGroupDelta = 5730,NELOG_NetlogonFailedLocalGroupDelta = 5731,NELOG_NetlogonFailedUserDelta = 5732,NELOG_NetlogonFailedPolicyDelta = 5733,NELOG_NetlogonFailedTrustedDomainDelta = 5734,NELOG_NetlogonFailedAccountDelta = 5735,NELOG_NetlogonFailedSecretDelta = 5736,NELOG_NetlogonSystemError = 5737,NELOG_NetlogonDuplicateMachineAccounts = 5738,NELOG_NetlogonTooManyGlobalGroups = 5739,NELOG_NetlogonBrowserDriver = 5740,NELOG_NetlogonAddNameFailure = 5741,NELOG_RplMessages = 5742,NELOG_RplXnsBoot = 5743,NELOG_RplSystem = 5744,NELOG_RplWkstaTimeout = 5745,NELOG_RplWkstaFileOpen = 5746,NELOG_RplWkstaFileRead = 5747,NELOG_RplWkstaMemory = 5748,NELOG_RplWkstaFileChecksum = 5749,NELOG_RplWkstaFileLineCount = 5750,NELOG_RplWkstaBbcFile = 5751,NELOG_RplWkstaFileSize = 5752,NELOG_RplWkstaInternal = 5753,NELOG_RplWkstaWrongVersion = 5754,NELOG_RplWkstaNetwork = 5755,NELOG_RplAdapterResource = 5756,NELOG_RplFileCopy = 5757,NELOG_RplFileDelete = 5758,NELOG_RplFilePerms = 5759,NELOG_RplCheckConfigs = 5760,NELOG_RplCreateProfiles = 5761,NELOG_RplRegistry = 5762,NELOG_RplReplaceRPLDISK = 5763,NELOG_RplCheckSecurity = 5764,NELOG_RplBackupDatabase = 5765,NELOG_RplInitDatabase = 5766,NELOG_RplRestoreDatabaseFailure = 5767,NELOG_RplRestoreDatabaseSuccess = 5768,NELOG_RplInitRestoredDatabase = 5769,NELOG_NetlogonSessionTypeWrong = 5770,};
enum MACRO_NNLEN {NNLEN = 80,};
enum MACRO_OLEUI {OLEUI_FALSE = 0,OLEUI_SUCCESS = 1,OLEUI_OK = 1,OLEUI_CANCEL = 2,OLEUI_ERR_STANDARDMIN = 100,OLEUI_ERR_STRUCTURENULL = 101,OLEUI_ERR_STRUCTUREINVALID = 102,OLEUI_ERR_CBSTRUCTINCORRECT = 103,OLEUI_ERR_HWNDOWNERINVALID = 104,OLEUI_ERR_LPSZCAPTIONINVALID = 105,OLEUI_ERR_LPFNHOOKINVALID = 106,OLEUI_ERR_HINSTANCEINVALID = 107,OLEUI_ERR_LPSZTEMPLATEINVALID = 108,OLEUI_ERR_HRESOURCEINVALID = 109,OLEUI_ERR_FINDTEMPLATEFAILURE = 110,OLEUI_ERR_LOADTEMPLATEFAILURE = 111,OLEUI_ERR_DIALOGFAILURE = 112,OLEUI_ERR_LOCALMEMALLOC = 113,OLEUI_ERR_GLOBALMEMALLOC = 114,OLEUI_ERR_LOADSTRING = 115,OLEUI_ERR_OLEMEMALLOC = 116,OLEUI_ERR_STANDARDMAX = 116,};
enum MACRO_ORDER {__BYTE_ORDER = 1234,__FLOAT_WORD_ORDER = 1234,};
enum MACRO_OWNER {USER_OWNER = 1,GROUP_OWNER = 4,};
enum MACRO_PDERR {PDERR_PRINTERCODES = 0x1000,PDERR_SETUPFAILURE = 0x1001,PDERR_PARSEFAILURE = 0x1002,PDERR_RETDEFFAILURE = 0x1003,PDERR_LOADDRVFAILURE = 0x1004,PDERR_GETDEVMODEFAIL = 0x1005,PDERR_INITFAILURE = 0x1006,PDERR_NODEVICES = 0x1007,PDERR_NODEFAULTPRN = 0x1008,PDERR_DNDMMISMATCH = 0x1009,PDERR_CREATEICFAILURE = 0x100A,PDERR_PRINTERNOTFOUND = 0x100B,PDERR_DEFAULTDIFFERENT = 0x100C,};
enum MACRO_PITCH {DEFAULT_PITCH = 0,FIXED_PITCH = 1,VARIABLE_PITCH = 2,};
enum MACRO_PKCS5 {PKCS5_PADDING = 1,};
enum MACRO_PRJOB {PRJOB_QSTATUS = 3,PRJOB_DEVSTATUS = 508,PRJOB_COMPLETE = 4,PRJOB_INTERV = 8,};
enum MACRO_PSBTN {PSBTN_MAX = 6,PSBTN_BACK = 0,PSBTN_NEXT = 1,PSBTN_FINISH = 2,PSBTN_OK = 3,PSBTN_APPLYNOW = 4,PSBTN_CANCEL = 5,PSBTN_HELP = 6,};
enum MACRO_PSPCB {PSPCB_RELEASE = 1,PSPCB_CREATE = 2,};
enum MACRO_PURGE {PURGE_TXABORT = 1,PURGE_RXABORT = 2,PURGE_TXCLEAR = 4,PURGE_RXCLEAR = 8,};
enum MACRO_PWLEN {PWLEN = 256,};
enum MACRO_QNLEN {QNLEN = 80,};
enum MACRO_RBBIM {RBBIM_STYLE = 1,RBBIM_COLORS = 2,RBBIM_TEXT = 4,RBBIM_IMAGE = 8,RBBIM_CHILD = 16,RBBIM_CHILDSIZE = 32,RBBIM_SIZE = 64,RBBIM_BACKGROUND = 128,RBBIM_ID = 256,};
enum MACRO_REGDF {REGDF_NOTDETIO = 1,REGDF_NOTDETMEM = 2,REGDF_NOTDETIRQ = 4,REGDF_NOTDETDMA = 8,REGDF_NOTDETALL = 15,REGDF_NEEDFULLCONFIG = 16,REGDF_GENFORCEDCONFIG = 32,REGDF_NODETCONFIG = 32768,REGDF_CONFLICTIO = 65536,REGDF_CONFLICTMEM = 131072,REGDF_CONFLICTIRQ = 262144,REGDF_CONFLICTDMA = 524288,REGDF_CONFLICTALL = 983040,REGDF_MAPIRQ2TO9 = 1048576,REGDF_NOTVERIFIED = -2147483648,};
enum MACRO_RMLEN {RMLEN = 98,};
enum MACRO_RPC_C {RPC_C_PARM_MAX_PACKET_LENGTH = 1,RPC_C_PARM_BUFFER_LENGTH = 2,RPC_C_AUTHN_LEVEL_DEFAULT = 0,RPC_C_AUTHN_LEVEL_NONE = 1,RPC_C_AUTHN_LEVEL_CONNECT = 2,RPC_C_AUTHN_LEVEL_CALL = 3,RPC_C_AUTHN_LEVEL_PKT = 4,RPC_C_AUTHN_LEVEL_PKT_INTEGRITY = 5,RPC_C_AUTHN_LEVEL_PKT_PRIVACY = 6,RPC_C_IMP_LEVEL_ANONYMOUS = 1,RPC_C_IMP_LEVEL_IDENTIFY = 2,RPC_C_IMP_LEVEL_IMPERSONATE = 3,RPC_C_IMP_LEVEL_DELEGATE = 4,RPC_C_QOS_IDENTITY_STATIC = 0,RPC_C_QOS_IDENTITY_DYNAMIC = 1,RPC_C_QOS_CAPABILITIES_DEFAULT = 0,RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH = 1,RPC_C_AUTHN_NONE = 0,RPC_C_AUTHN_DCE_PRIVATE = 1,RPC_C_AUTHN_DCE_PUBLIC = 2,RPC_C_AUTHN_DEC_PUBLIC = 4,RPC_C_AUTHN_WINNT = 10,RPC_C_AUTHN_DEFAULT = -1,};
enum MACRO_SBARS {SBARS_SIZEGRIP = 256,};
enum MACRO_SERKF {SERKF_AVAILABLE = 2,SERKF_INDICATOR = 4,SERKF_SERIALKEYSON = 1,};
enum MACRO_SFGAO {SFGAO_CANRENAME = 0x10,SFGAO_CANDELETE = 0x20,SFGAO_HASPROPSHEET = 0x40,SFGAO_DROPTARGET = 0x100,SFGAO_CAPABILITYMASK = 0x177,SFGAO_LINK = 0x10000,SFGAO_SHARE = 0x20000,SFGAO_READONLY = 0x40000,SFGAO_GHOSTED = 0x80000,SFGAO_DISPLAYATTRMASK = 0xF0000,SFGAO_FILESYSANCESTOR = 0x10000000,SFGAO_FOLDER = 0x20000000,SFGAO_FILESYSTEM = 0x40000000,SFGAO_HASSUBFOLDER = 0x80000000,SFGAO_CONTENTSMASK = 0x80000000,SFGAO_VALIDATE = 0x1000000,SFGAO_REMOVABLE = 0x2000000,};
enum MACRO_SHARD {SHARD_PIDL = 1,SHARD_PATH = 2,};
enum MACRO_SHARE {SHARE_NETNAME_PARMNUM = 1,SHARE_TYPE_PARMNUM = 3,SHARE_REMARK_PARMNUM = 4,SHARE_PERMISSIONS_PARMNUM = 5,SHARE_MAX_USES_PARMNUM = 6,SHARE_CURRENT_USES_PARMNUM = 7,SHARE_PATH_PARMNUM = 8,SHARE_PASSWD_PARMNUM = 9,SHARE_FILE_SD_PARMNUM = 501,SHARE_REMARK_INFOLEVEL = 1004,SHARE_MAX_USES_INFOLEVEL = 1006,SHARE_FILE_SD_INFOLEVEL = 1501,};
enum MACRO_SHCNE {SHCNE_RENAMEITEM = 1,SHCNE_CREATE = 2,SHCNE_DELETE = 4,SHCNE_MKDIR = 8,SHCNE_RMDIR = 16,SHCNE_MEDIAINSERTED = 32,SHCNE_MEDIAREMOVED = 64,SHCNE_DRIVEREMOVED = 128,SHCNE_DRIVEADD = 256,SHCNE_NETSHARE = 512,SHCNE_NETUNSHARE = 1024,SHCNE_ATTRIBUTES = 2048,SHCNE_UPDATEDIR = 4096,SHCNE_UPDATEITEM = 8192,SHCNE_SERVERDISCONNECT = 16384,SHCNE_UPDATEIMAGE = 32768,SHCNE_DRIVEADDGUI = 65536,SHCNE_RENAMEFOLDER = 131072,SHCNE_FREESPACE = 262144,SHCNE_ASSOCCHANGED = 134217728,SHCNE_DISKEVENTS = 145439,SHCNE_GLOBALEVENTS = 201687520,SHCNE_ALLEVENTS = 2147483647,SHCNE_INTERRUPT = -2147483648,};
enum MACRO_SHCNF {SHCNF_IDLIST = 0,SHCNF_PATH = 1,SHCNF_PRINTER = 2,SHCNF_DWORD = 3,SHCNF_TYPE = 255,SHCNF_FLUSH = 4096,SHCNF_FLUSHNOWAIT = 8192,};
enum MACRO_SHDID {SHDID_ROOT_REGITEM = 1,SHDID_FS_FILE = 2,SHDID_FS_DIRECTORY = 3,SHDID_FS_OTHER = 4,SHDID_COMPUTER_DRIVE35 = 5,SHDID_COMPUTER_DRIVE525 = 6,SHDID_COMPUTER_REMOVABLE = 7,SHDID_COMPUTER_FIXED = 8,SHDID_COMPUTER_NETDRIVE = 9,SHDID_COMPUTER_CDROM = 10,SHDID_COMPUTER_RAMDISK = 11,SHDID_COMPUTER_OTHER = 12,SHDID_NET_DOMAIN = 13,SHDID_NET_SERVER = 14,SHDID_NET_SHARE = 15,SHDID_NET_RESTOFNET = 16,SHDID_NET_OTHER = 17,};
enum MACRO_SHGFI {SHGFI_ICON = 256,SHGFI_DISPLAYNAME = 512,SHGFI_TYPENAME = 1024,SHGFI_ATTRIBUTES = 2048,SHGFI_ICONLOCATION = 4096,SHGFI_EXETYPE = 8192,SHGFI_SYSICONINDEX = 16384,SHGFI_LINKOVERLAY = 32768,SHGFI_SELECTED = 65536,SHGFI_LARGEICON = 0,SHGFI_SMALLICON = 1,SHGFI_OPENICON = 2,SHGFI_SHELLICONSIZE = 4,SHGFI_PIDL = 8,SHGFI_USEFILEATTRIBUTES = 16,};
enum MACRO_SNLEN {SNLEN = 80,STXTLEN = 256,};
enum MACRO_STATS {STATS_NO_VALUE = 4294967295,STATS_OVERFLOW = 4294967294,};
enum MACRO_STGTY {STGTY_REPEAT = 256,};
enum MACRO_STILL {STILL_ACTIVE = 0x103,};
enum MACRO_STYLE {STYLE_DESCRIPTION_SIZE = 32,};
enum MACRO_STYPE {STYPE_DISKTREE = 0,STYPE_PRINTQ = 1,STYPE_DEVICE = 2,STYPE_IPC = 3,STYPE_DFS = 100,STYPE_SPECIAL = -2147483648,};
enum MACRO_SV2GV {SV2GV_CURRENTVIEW = 4294967295,SV2GV_DEFAULTVIEW = 4294967294,};
enum MACRO_SVAUD {SVAUD_SERVICE = 1,SVAUD_GOODSESSLOGON = 6,SVAUD_BADSESSLOGON = 24,SVAUD_SESSLOGON = 30,SVAUD_GOODNETLOGON = 96,SVAUD_BADNETLOGON = 384,SVAUD_NETLOGON = 480,SVAUD_LOGON = 510,SVAUD_GOODUSE = 1536,SVAUD_BADUSE = 6144,SVAUD_USE = 7680,SVAUD_USERLIST = 8192,SVAUD_PERMISSIONS = 16384,SVAUD_RESOURCE = 32768,SVAUD_LOGONLIM = 65536,};
enum MACRO_SVGIO {SVGIO_BACKGROUND = 0,SVGIO_SELECTION = 1,SVGIO_ALLVIEW = 2,};
enum MACRO_TC_OP {TC_OP_CHARACTER = 1,TC_OP_STROKE = 2,TC_CP_STROKE = 4,TC_CR_90 = 8,TC_CR_ANY = 16,TC_SF_X_YINDEP = 32,TC_SA_DOUBLE = 64,TC_SA_INTEGER = 128,TC_SA_CONTIN = 256,TC_EA_DOUBLE = 512,TC_IA_ABLE = 1024,TC_UA_ABLE = 2048,TC_SO_ABLE = 4096,TC_RA_ABLE = 8192,TC_VA_ABLE = 16384,TC_RESERVED = 32768,TC_SCROLLBLT = 65536,};
enum MACRO_TIMEQ {TIMEQ_FOREVER = 4294967295,};
enum MACRO_TOKEN {TOKEN_SOURCE_LENGTH = 8,TOKEN_ADJUST_DEFAULT = 128,TOKEN_ADJUST_GROUPS = 64,TOKEN_ADJUST_PRIVILEGES = 32,TOKEN_ALL_ACCESS = 983295,TOKEN_ASSIGN_PRIMARY = 1,TOKEN_DUPLICATE = 2,TOKEN_EXECUTE = 131072,TOKEN_IMPERSONATE = 4,TOKEN_QUERY = 8,TOKEN_QUERY_SOURCE = 16,TOKEN_READ = 131080,TOKEN_WRITE = 131296,};
enum MACRO_TVSIL {TVSIL_NORMAL = 0,TVSIL_STATE = 2,};
enum MACRO_UNITS {UNITS_PER_DAY = 24,UNITS_PER_WEEK = 168,};
enum MACRO_VALID {VALID_INHERIT_FLAGS = 16,};
enum MACRO_WCHAR {WCHAR_MIN = -2147483648,WCHAR_MAX = 2147483647,};
enum MACRO_WHEEL {WHEEL_DELTA = 120,};
enum MACRO_WKSTA {WKSTA_PLATFORM_ID_PARMNUM = 100,WKSTA_COMPUTERNAME_PARMNUM = 1,WKSTA_LANGROUP_PARMNUM = 2,WKSTA_VER_MAJOR_PARMNUM = 4,WKSTA_VER_MINOR_PARMNUM = 5,WKSTA_LOGGED_ON_USERS_PARMNUM = 6,WKSTA_LANROOT_PARMNUM = 7,WKSTA_LOGON_DOMAIN_PARMNUM = 8,WKSTA_LOGON_SERVER_PARMNUM = 9,WKSTA_CHARWAIT_PARMNUM = 10,WKSTA_CHARTIME_PARMNUM = 11,WKSTA_CHARCOUNT_PARMNUM = 12,WKSTA_KEEPCONN_PARMNUM = 13,WKSTA_KEEPSEARCH_PARMNUM = 14,WKSTA_MAXCMDS_PARMNUM = 15,WKSTA_NUMWORKBUF_PARMNUM = 16,WKSTA_MAXWRKCACHE_PARMNUM = 17,WKSTA_SESSTIMEOUT_PARMNUM = 18,WKSTA_SIZERROR_PARMNUM = 19,WKSTA_NUMALERTS_PARMNUM = 20,WKSTA_NUMSERVICES_PARMNUM = 21,WKSTA_NUMCHARBUF_PARMNUM = 22,WKSTA_SIZCHARBUF_PARMNUM = 23,WKSTA_ERRLOGSZ_PARMNUM = 27,WKSTA_PRINTBUFTIME_PARMNUM = 28,WKSTA_SIZWORKBUF_PARMNUM = 29,WKSTA_MAILSLOTS_PARMNUM = 30,WKSTA_NUMDGRAMBUF_PARMNUM = 31,WKSTA_WRKHEURISTICS_PARMNUM = 32,WKSTA_MAXTHREADS_PARMNUM = 33,WKSTA_LOCKQUOTA_PARMNUM = 41,WKSTA_LOCKINCREMENT_PARMNUM = 42,WKSTA_LOCKMAXIMUM_PARMNUM = 43,WKSTA_PIPEINCREMENT_PARMNUM = 44,WKSTA_PIPEMAXIMUM_PARMNUM = 45,WKSTA_DORMANTFILELIMIT_PARMNUM = 46,WKSTA_CACHEFILETIMEOUT_PARMNUM = 47,WKSTA_USEOPPORTUNISTICLOCKING_PARMNUM = 48,WKSTA_USEUNLOCKBEHIND_PARMNUM = 49,WKSTA_USECLOSEBEHIND_PARMNUM = 50,WKSTA_BUFFERNAMEDPIPES_PARMNUM = 51,WKSTA_USELOCKANDREADANDUNLOCK_PARMNUM = 52,WKSTA_UTILIZENTCACHING_PARMNUM = 53,WKSTA_USERAWREAD_PARMNUM = 54,WKSTA_USERAWWRITE_PARMNUM = 55,WKSTA_USEWRITERAWWITHDATA_PARMNUM = 56,WKSTA_USEENCRYPTION_PARMNUM = 57,WKSTA_BUFFILESWITHDENYWRITE_PARMNUM = 58,WKSTA_BUFFERREADONLYFILES_PARMNUM = 59,WKSTA_FORCECORECREATEMODE_PARMNUM = 60,WKSTA_USE512BYTESMAXTRANSFER_PARMNUM = 61,WKSTA_READAHEADTHRUPUT_PARMNUM = 62,WKSTA_OTH_DOMAINS_PARMNUM = 101,};
enum MACRO_WNCON {WNCON_FORNETCARD = 1,WNCON_NOTROUTED = 2,WNCON_SLOWLINK = 4,WNCON_DYNAMIC = 8,};
enum MACRO_WNFMT {WNFMT_MULTILINE = 1,WNFMT_ABBREVIATED = 2,WNFMT_INENUM = 16,WNFMT_CONNECTION = 32,};
enum MACRO_WRITE {WRITE_DAC = 0x40000,WRITE_OWNER = 0x80000,};
enum MACRO_WSANO {WSANO_RECOVERY = 11003,WSANO_DATA = 11004,WSANO_ADDRESS = 11004,};
enum MACRO_WS_EX {WS_EX_ACCEPTFILES = 16,WS_EX_APPWINDOW = 262144,WS_EX_CLIENTEDGE = 512,WS_EX_CONTEXTHELP = 1024,WS_EX_CONTROLPARENT = 65536,WS_EX_DLGMODALFRAME = 1,WS_EX_LEFT = 0,WS_EX_LEFTSCROLLBAR = 16384,WS_EX_LTRREADING = 0,WS_EX_MDICHILD = 64,WS_EX_NOPARENTNOTIFY = 4,WS_EX_OVERLAPPEDWINDOW = 768,WS_EX_PALETTEWINDOW = 392,WS_EX_RIGHT = 4096,WS_EX_RIGHTSCROLLBAR = 0,WS_EX_RTLREADING = 8192,WS_EX_STATICEDGE = 131072,WS_EX_TOOLWINDOW = 128,WS_EX_TOPMOST = 8,WS_EX_TRANSPARENT = 32,WS_EX_WINDOWEDGE = 256,};
enum MACRO_WS_GT {WS_GT = 196608,};
enum MACRO_XTYPF {XTYPF_NOBLOCK = 2,XTYPF_NODATA = 4,XTYPF_ACKREQ = 8,};
enum MACRO__BITS {_BITS_WCHAR_H = 1,};
enum MACRO__STAT {_STAT_VER_LINUX_OLD = 1,_STAT_VER_KERNEL = 1,_STAT_VER_SVR4 = 2,_STAT_VER_LINUX = 3,_STAT_VER = 3,};
enum MACRO___BIT {__BIT_TYPES_DEFINED__ = 1,};
enum MACRO___GNU {__GNU_LIBRARY__ = 6,};
enum MACRO___USE {__USE_ANSI = 1,};
enum MACRO_chx10 {chx10 = 0x419,};
enum MACRO_chx11 {chx11 = 0x41A,};
enum MACRO_chx12 {chx12 = 0x41B,};
enum MACRO_chx13 {chx13 = 0x41C,};
enum MACRO_chx14 {chx14 = 0x41D,};
enum MACRO_chx15 {chx15 = 0x41E,};
enum MACRO_chx16 {chx16 = 0x41F,};
enum MACRO_cmb10 {cmb10 = 0x479,};
enum MACRO_cmb11 {cmb11 = 0x47A,};
enum MACRO_cmb12 {cmb12 = 0x47B,};
enum MACRO_cmb13 {cmb13 = 0x47C,};
enum MACRO_cmb14 {cmb14 = 0x47D,};
enum MACRO_cmb15 {cmb15 = 0x47E,};
enum MACRO_cmb16 {cmb16 = 0x47F,};
enum MACRO_edt10 {edt10 = 0x489,};
enum MACRO_edt11 {edt11 = 0x48A,};
enum MACRO_edt12 {edt12 = 0x48B,};
enum MACRO_edt13 {edt13 = 0x48C,};
enum MACRO_edt14 {edt14 = 0x48D,};
enum MACRO_edt15 {edt15 = 0x48E,};
enum MACRO_edt16 {edt16 = 0x48F,};
enum MACRO_lst10 {lst10 = 0x469,};
enum MACRO_lst11 {lst11 = 0x46A,};
enum MACRO_lst12 {lst12 = 0x46B,};
enum MACRO_lst13 {lst13 = 0x46C,};
enum MACRO_lst14 {lst14 = 0x46D,};
enum MACRO_lst15 {lst15 = 0x46E,};
enum MACRO_lst16 {lst16 = 0x46F,};
enum MACRO_psh10 {psh10 = 0x409,};
enum MACRO_psh11 {psh11 = 0x40A,};
enum MACRO_psh12 {psh12 = 0x40B,};
enum MACRO_psh13 {psh13 = 0x40C,};
enum MACRO_psh14 {psh14 = 0x40D,};
enum MACRO_psh15 {psh15 = 0x40E,};
enum MACRO_psh16 {psh16 = 0x40F,};
enum MACRO_rad10 {rad10 = 0x429,};
enum MACRO_rad11 {rad11 = 0x42A,};
enum MACRO_rad12 {rad12 = 0x42B,};
enum MACRO_rad13 {rad13 = 0x42C,};
enum MACRO_rad14 {rad14 = 0x42D,};
enum MACRO_rad15 {rad15 = 0x42E,};
enum MACRO_rad16 {rad16 = 0x42F,};
enum MACRO_stc10 {stc10 = 0x449,};
enum MACRO_stc11 {stc11 = 0x44A,};
enum MACRO_stc12 {stc12 = 0x44B,};
enum MACRO_stc13 {stc13 = 0x44C,};
enum MACRO_stc14 {stc14 = 0x44D,};
enum MACRO_stc15 {stc15 = 0x44E,};
enum MACRO_stc16 {stc16 = 0x44F,};
enum MACRO_stc17 {stc17 = 0x450,};
enum MACRO_stc18 {stc18 = 0x451,};
enum MACRO_stc19 {stc19 = 0x452,};
enum MACRO_stc20 {stc20 = 0x453,};
enum MACRO_stc21 {stc21 = 0x454,};
enum MACRO_stc22 {stc22 = 0x455,};
enum MACRO_stc23 {stc23 = 0x456,};
enum MACRO_stc24 {stc24 = 0x457,};
enum MACRO_stc25 {stc25 = 0x458,};
enum MACRO_stc26 {stc26 = 0x459,};
enum MACRO_stc27 {stc27 = 0x45A,};
enum MACRO_stc28 {stc28 = 0x45B,};
enum MACRO_stc29 {stc29 = 0x45C,};
enum MACRO_stc30 {stc30 = 0x45D,};
enum MACRO_stc31 {stc31 = 0x45E,};
enum MACRO_stc32 {stc32 = 0x45F,};
typedef struct tagMDINEXTMENU MDINEXTMENU;
typedef struct tagMIDIINCAPSA MIDIINCAPSA;
typedef struct tagMIDIINCAPSW MIDIINCAPSW;
typedef struct _D68E04ECC07D7D43C298BEA99D7BA7F2 MapiMessage;
typedef struct _NAME_BUFFER NAME_BUFFER;
typedef void (*NDR_RUNDOWN)(void *);
typedef struct tagNEWCPLINFOA NEWCPLINFOA;
typedef struct tagNEWCPLINFOW NEWCPLINFOW;
typedef struct _NM_LISTVIEW NM_LISTVIEW;
typedef struct tagOCPFIPARAMS OCPFIPARAMS;
typedef struct _AE_CONNREJ *PAE_CONNREJ;
typedef struct _AE_GENERIC *PAE_GENERIC;
typedef struct _AE_LOCKOUT *PAE_LOCKOUT;
typedef struct tagPAINTSTRUCT PAINTSTRUCT;
typedef struct _AppBarData *PAPPBARDATA;
typedef struct tagPARAMDESCEX PARAMDESCEX;
typedef struct _CC81E267BD8B32E89ADB7AE662C05BFA *PARRAY_INFO;
typedef struct tagBITMAPINFO *PBITMAPINFO;
typedef struct _browseinfo *PBROWSEINFO;
typedef struct tagDROPSTRUCT *PDROPSTRUCT;
typedef struct tagEMRELLIPSE *PEMRELLIPSE;
typedef struct tagABORTPATH *PEMRENDPATH;
typedef struct tagEMRFILLRGN *PEMRFILLRGN;
typedef struct tagEMRMASKBLT *PEMRMASKBLT;
typedef struct tagEMRPOLYLINE *PEMRPOLYGON;
typedef struct tagEMRSELECTCLIPPATH *PEMRSETROP2;
typedef struct tagHEAPLIST32 *PHEAPLIST32;
typedef struct _LIST_ENTRY *PLIST_ENTRY;
typedef struct tagLOGPALETTE *PLOGPALETTE;
typedef struct tagMETAHEADER *PMETAHEADER;
typedef struct tagMETARECORD *PMETARECORD;
typedef struct tagMINMAXINFO *PMINMAXINFO;
typedef struct tagMIXERCAPSA *PMIXERCAPSA;
typedef struct tagMIXERCAPSW *PMIXERCAPSW;
typedef struct tagMIXERLINEA *PMIXERLINEA;
typedef struct tagMIXERLINEW *PMIXERLINEW;
typedef struct _MSG_INFO_0 *PMSG_INFO_0;
typedef struct _MSG_INFO_1 *PMSG_INFO_1;
typedef struct tagOLEUIBUSYA *POLEUIBUSYA;
typedef struct tagOLEUIBUSYW *POLEUIBUSYW;
typedef struct _OVERLAPPED *POVERLAPPED;
typedef struct _POINTFLOAT *PPOINTFLOAT;
enum PROPSETFLAG {PROPSETFLAG_DEFAULT = 0x0,PROPSETFLAG_NONSIMPLE = 0x1,PROPSETFLAG_ANSI = 0x2,PROPSETFLAG_UNBUFFERED = 0x4,};
typedef struct tagPROPVARIANT PROPVARIANT;
typedef struct _RPC_POLICY *PRPC_POLICY;
typedef struct _SMALL_RECT *PSMALL_RECT;
typedef struct _TAPE_ERASE *PTAPE_ERASE;
typedef struct _punctuation PUNCTUATION;
typedef struct _USE_INFO_0 *PUSE_INFO_0;
typedef struct _USE_INFO_1 *PUSE_INFO_1;
typedef struct _USE_INFO_2 *PUSE_INFO_2;
typedef struct waveformat_tag *PWAVEFORMAT;
typedef struct tagCWPSTRUCT *PWCWPSTRUCT;
typedef struct _WSAVersion *PWSAVERSION;
typedef struct _REPL_INFO_0 REPL_INFO_0;
typedef struct _RPC_MESSAGE RPC_MESSAGE;
typedef struct _RPC_VERSION RPC_VERSION;
struct SC_HANDLE__ {int i;};
typedef struct tagSERIALKEYSA SERIALKEYSA;
typedef struct tagSERIALKEYSW SERIALKEYSW;
typedef struct _SHFILEINFOA SHFILEINFOA;
typedef struct _SHFILEINFOW SHFILEINFOW;
typedef struct sockaddr_in SOCKADDR_IN;
typedef struct tagSTATPROPSTG STATPROPSTG;
typedef struct tagSTYLESTRUCT STYLESTRUCT;
typedef struct _SYSTEM_INFO SYSTEM_INFO;
typedef struct tagTBADDBITMAP TBADDBITMAP;
typedef struct tagTEXTMETRICA TEXTMETRICA;
typedef struct tagTEXTMETRICW TEXTMETRICW;
typedef struct _TOKEN_OWNER TOKEN_OWNER;
typedef struct tagTTPOLYCURVE TTPOLYCURVE;
typedef struct _USER_INFO_0 USER_INFO_0;
typedef struct _USER_INFO_1 USER_INFO_1;
typedef struct _USER_INFO_2 USER_INFO_2;
typedef struct _USER_INFO_3 USER_INFO_3;
typedef struct _UUID_VECTOR UUID_VECTOR;
typedef struct tagWAVEINCAPSA WAVEINCAPSA;
typedef struct tagWAVEINCAPSW WAVEINCAPSW;
typedef struct _WNDCLASSEXA WNDCLASSEXA;
typedef struct _WNDCLASSEXW WNDCLASSEXW;
struct _LIST_ENTRY {struct _LIST_ENTRY *Flink;struct _LIST_ENTRY *Blink;};
enum _MEDIA_TYPE {Unknown = 0x0,F5_1Pt2_512 = 0x1,F3_1Pt44_512 = 0x2,F3_2Pt88_512 = 0x3,F3_20Pt8_512 = 0x4,F3_720_512 = 0x5,F5_360_512 = 0x6,F5_320_512 = 0x7,F5_320_1024 = 0x8,F5_180_512 = 0x9,F5_160_512 = 0xA,RemovableMedia = 0xB,FixedMedia = 0xC,};
struct _RPC_POLICY {unsigned int Length;unsigned int EndpointFlags;unsigned int NICFlags;};
typedef int __blksize_t;
typedef int __clockid_t;
typedef struct _1A16B277A945B8F62DE8883A2D91AFD9 __mbstate_t;
typedef unsigned int __socklen_t;
enum tagCALLCONV {CC_FASTCALL = 0x0,CC_CDECL = 0x1,CC_MSCPASCAL = 0x2,CC_PASCAL = 0x2,CC_MACPASCAL = 0x3,CC_STDCALL = 0x4,CC_FPFASTCALL = 0x5,CC_SYSCALL = 0x6,CC_MPWCDECL = 0x7,CC_MPWPASCAL = 0x8,CC_MAX = 0x8,};
enum tagCALLTYPE {CALLTYPE_TOPLEVEL = 0x1,CALLTYPE_NESTED = 0x2,CALLTYPE_ASYNC = 0x3,CALLTYPE_TOPLEVEL_CALLPENDING = 0x4,CALLTYPE_ASYNC_CALLPENDING = 0x5,};
enum tagDESCKIND {DESCKIND_NONE = 0x0,DESCKIND_FUNCDESC = 0x1,DESCKIND_VARDESC = 0x2,DESCKIND_TYPECOMP = 0x3,DESCKIND_IMPLICITAPPOBJ = 0x4,DESCKIND_MAX = 0x5,};
enum tagDVASPECT {DVASPECT_CONTENT = 0x1,DVASPECT_THUMBNAIL = 0x2,DVASPECT_ICON = 0x4,DVASPECT_DOCPRINT = 0x8,};
enum tagFUNCKIND {FUNC_VIRTUAL = 0x0,FUNC_PUREVIRTUAL = 0x1,FUNC_NONVIRTUAL = 0x2,FUNC_STATIC = 0x3,FUNC_DISPATCH = 0x4,};
enum tagLIBFLAGS {LIBFLAG_FRESTRICTED = 0x1,LIBFLAG_FCONTROL = 0x2,LIBFLAG_FHIDDEN = 0x4,LIBFLAG_FHASDISKIMAGE = 0x8,};
enum tagLOCKTYPE {LOCK_WRITE = 0x1,LOCK_EXCLUSIVE = 0x2,LOCK_ONLYONCE = 0x4,};
enum tagMKREDUCE {MKRREDUCE_ALL = 0x0,MKRREDUCE_ONE = 0x30000,MKRREDUCE_TOUSER = 0x20000,MKRREDUCE_THROUGHUSER = 0x10000,};
enum tagOLECLOSE {OLECLOSE_SAVEIFDIRTY = 0x0,OLECLOSE_NOSAVE = 0x1,OLECLOSE_PROMPTSAVE = 0x2,};
enum tagSTATFLAG {STATFLAG_DEFAULT = 0x0,STATFLAG_NONAME = 0x1,};
enum tagTYPEKIND {TKIND_ENUM = 0x0,TKIND_RECORD = 0x1,TKIND_MODULE = 0x2,TKIND_INTERFACE = 0x3,TKIND_DISPATCH = 0x4,TKIND_COCLASS = 0x5,TKIND_ALIAS = 0x6,TKIND_UNION = 0x7,TKIND_MAX = 0x8,};
enum tagVARFLAGS {VARFLAG_FREADONLY = 0x1,VARFLAG_FSOURCE = 0x2,VARFLAG_FBINDABLE = 0x4,VARFLAG_FREQUESTEDIT = 0x8,VARFLAG_FDISPLAYBIND = 0x10,VARFLAG_FDEFAULTBIND = 0x20,VARFLAG_FHIDDEN = 0x40,VARFLAG_FRESTRICTED = 0x80,VARFLAG_FDEFAULTCOLLELEM = 0x100,VARFLAG_FUIDEFAULT = 0x200,VARFLAG_FNONBROWSABLE = 0x400,VARFLAG_FREPLACEABLE = 0x800,VARFLAG_FIMMEDIATEBIND = 0x1000,};
typedef struct _wireVARIANT wireVARIANT;
typedef struct _ACE_HEADER ACE_HEADER;
typedef struct _AE_CONNREJ AE_CONNREJ;
typedef struct _AE_GENERIC AE_GENERIC;
typedef struct _AE_LOCKOUT AE_LOCKOUT;
typedef struct _AppBarData APPBARDATA;
typedef struct _CC81E267BD8B32E89ADB7AE662C05BFA ARRAY_INFO;
typedef struct tagBIND_OPTS2 BIND_OPTS2;
typedef struct tagBITMAPINFO BITMAPINFO;
typedef struct _browseinfo BROWSEINFO;
typedef struct tagCABSTRBLOB CABSTRBLOB;
typedef struct tagCACLIPDATA CACLIPDATA;
typedef struct tagCAFILETIME CAFILETIME;
typedef struct tagCALPOLESTR CALPOLESTR;
typedef struct _COAUTHINFO COAUTHINFO;
typedef struct _COMM_CONFIG COMMCONFIG;
typedef struct tagDIBSECTION DIBSECTION;
typedef struct tagDISPPARAMS DISPPARAMS;
typedef struct tagDROPSTRUCT DROPSTRUCT;
typedef struct _editstream EDITSTREAM;
typedef struct tagEMRELLIPSE EMRELLIPSE;
typedef struct tagABORTPATH EMRENDPATH;
typedef struct tagEMRFILLRGN EMRFILLRGN;
typedef struct tagEMRMASKBLT EMRMASKBLT;
typedef struct tagEMRPOLYLINE EMRPOLYGON;
typedef struct tagEMRSELECTCLIPPATH EMRSETROP2;
typedef struct tagFILTERKEYS FILTERKEYS;
typedef struct _F4E2A3B3EF6C4FAA4EC9C87B4A54D83E FVSHOWINFO;
typedef int FXPT2DOT30;
struct HDDEDATA__ {int i;};
typedef struct _HD_NOTIFYA HD_NOTIFYA;
typedef struct _HD_NOTIFYW HD_NOTIFYW;
typedef struct tagHEAPLIST32 HEAPLIST32;
typedef struct HIMAGELIST__ *HIMAGELIST;
struct HMIDIOUT__ {int i;};
struct HMONITOR__ {int i;};
struct HPALETTE__ {int i;};
struct HWAVEOUT__ {int i;};
struct IErrorInfo {struct IErrorInfoVtbl *lpVtbl;};
struct ILockBytes {struct ILockBytesVtbl *lpVtbl;};
struct IMallocSpy {struct IMallocSpyVtbl *lpVtbl;};
struct IOleObject {struct IOleObjectVtbl *lpVtbl;};
struct IOleWindow {struct IOleWindowVtbl *lpVtbl;};
struct IShellIcon {struct IShellIconVtbl *lpVtbl;};
typedef IShellLinkA IShellLink;
struct IShellView {struct IShellViewVtbl *lpVtbl;};
typedef struct _ITEMIDLIST ITEMIDLIST;
typedef struct _LIST_ENTRY LIST_ENTRY;
typedef struct tagLOGPALETTE LOGPALETTE;
typedef struct _ABCFLOAT *LPABCFLOAT;
typedef struct tagAUXCAPSA *LPAUXCAPSA;
typedef struct tagAUXCAPSW *LPAUXCAPSW;
typedef struct tagBSTRBLOB *LPBSTRBLOB;
typedef struct tagCCSTYLEA *LPCCSTYLEA;
typedef struct tagCCSTYLEW *LPCCSTYLEW;
typedef struct _COLORMAP *LPCOLORMAP;
typedef struct _COMMPROP *LPCOMMPROP;
typedef ICopyHook *LPCOPYHOOK;
typedef struct tagCUSTDATA *LPCUSTDATA;
typedef struct _devicemodeA *LPDEVMODEA;
typedef struct _devicemodeW *LPDEVMODEW;
typedef struct tagDEVNAMES *LPDEVNAMES;
typedef struct IDispatch *LPDISPATCH;
typedef struct tagELEMDESC *LPELEMDESC;
typedef struct IErrorLog *LPERRORLOG;
typedef struct tagEVENTMSG *LPEVENTMSG;
typedef struct _FILETIME *LPFILETIME;
typedef struct _flowspec *LPFLOWSPEC;
typedef struct tagFONTDESC *LPFONTDESC;
typedef struct IFontDisp *LPFONTDISP;
typedef struct tagFUNCDESC *LPFUNCDESC;
typedef struct tagHELPINFO *LPHELPINFO;
typedef struct tagJOYCAPSA *LPJOYCAPSA;
typedef struct tagJOYCAPSW *LPJOYCAPSW;
typedef struct tagLOGBRUSH *LPLOGBRUSH;
typedef struct tagLOGFONTA *LPLOGFONTA;
typedef struct tagLOGFONTW *LPLOGFONTW;
typedef struct _MMCKINFO *LPMMCKINFO;
typedef struct _MMIOINFO *LPMMIOINFO;
typedef struct _OFSTRUCT *LPOFSTRUCT;
typedef struct tagPELARRAY *LPPELARRAY;
typedef struct tagPICTDESC *LPPICTDESC;
typedef struct protoent *LPPROTOENT;
typedef struct _RIP_INFO *LPRIP_INFO;
typedef struct _SHITEMID *LPSHITEMID;
typedef struct sockaddr *LPSOCKADDR;
typedef struct _TBBUTTON *LPTBBUTTON;
typedef struct _5FD78A464707AEFBBDC321B5598A6452 *LPTBNOTIFY;
typedef struct timecaps_tag *LPTIMECAPS;
typedef struct tagTLIBATTR *LPTLIBATTR;
typedef struct _TV_ITEMA *LPTV_ITEMA;
typedef struct _TV_ITEMW *LPTV_ITEMW;
typedef struct tagTYPEATTR *LPTYPEATTR;
typedef struct ITypeComp *LPTYPECOMP;
typedef struct ITypeInfo *LPTYPEINFO;
typedef struct _LV_COLUMNA LV_COLUMNA;
typedef struct _LV_COLUMNW LV_COLUMNW;
typedef struct _LV_KEYDOWN LV_KEYDOWN;
enum MACRO_ADDR {ADDR_ANY = 0,};
enum MACRO_ANSI {ANSI_NULL = 0,UNICODE_NULL = 0,};
enum MACRO_ATTR {ATTR_INPUT = 0,ATTR_TARGET_CONVERTED = 1,ATTR_CONVERTED = 2,ATTR_TARGET_NOTCONVERTED = 3,ATTR_INPUT_ERROR = 4,ATTR_FIXEDCONVERTED = 5,};
enum MACRO_BASE {MMSYSERR_BASE = 0,WAVERR_BASE = 32,MIDIERR_BASE = 64,TIMERR_BASE = 96,JOYERR_BASE = 160,MCIERR_BASE = 256,MIXERR_BASE = 1024,};
enum MACRO_BAUD {BAUD_075 = 1,BAUD_110 = 2,BAUD_134_5 = 4,BAUD_150 = 8,BAUD_300 = 16,BAUD_600 = 32,BAUD_1200 = 64,BAUD_1800 = 128,BAUD_2400 = 256,BAUD_4800 = 512,BAUD_7200 = 1024,BAUD_9600 = 2048,BAUD_14400 = 4096,BAUD_19200 = 8192,BAUD_38400 = 16384,BAUD_56K = 32768,BAUD_128K = 65536,BAUD_115200 = 131072,BAUD_57600 = 262144,BAUD_USER = 268435456,};
enum MACRO_BFFM {BFFM_INITIALIZED = 1,BFFM_SELCHANGED = 2,BFFM_SETSTATUSTEXT = 1124,BFFM_ENABLEOK = 1125,BFFM_SETSELECTION = 1126,};
enum MACRO_BIND {BIND_NO_BOUND_IMPORTS = 0x1,BIND_NO_UPDATE = 0x2,BIND_ALL_IMAGES = 0x4,BIND_CACHE_IMPORT_DLLS = 0x8,};
enum MACRO_BOOL {FALSE = 0,TRUE = 1,};
enum MACRO_BYTE {BYTE_ORDER = 1234,};
enum MACRO_CADV {CADV_LATEACK = 0xFFFF,};
enum MACRO_CALG {CALG_MD2 = 32769,CALG_MD4 = 32770,CALG_MD5 = 32771,CALG_SHA = 32772,CALG_MAC = 32773,CALG_RSA_SIGN = 9216,CALG_DSS_SIGN = 8704,CALG_RSA_KEYX = 41984,CALG_DES = 26113,CALG_RC2 = 26114,CALG_RC4 = 26625,CALG_SEAL = 26626,};
enum MACRO_CALL {CALL_PENDING = 0x2,};
enum MACRO_CERT {CERT_PE_IMAGE_DIGEST_DEBUG_INFO = 1,CERT_PE_IMAGE_DIGEST_RESOURCES = 2,CERT_PE_IMAGE_DIGEST_ALL_IMPORT_INFO = 4,CERT_PE_IMAGE_DIGEST_NON_PE_INFO = 8,CERT_SECTION_TYPE_ANY = 255,};
enum MACRO_CLIP {CLIP_DEFAULT_PRECIS = 0,CLIP_CHARACTER_PRECIS = 1,CLIP_STROKE_PRECIS = 2,CLIP_MASK = 15,CLIP_LH_ANGLES = 16,CLIP_TT_ALWAYS = 32,CLIP_EMBEDDED = 128,};
enum MACRO_CMIC {CMIC_MASK_HOTKEY = 32,CMIC_MASK_ICON = 16,CMIC_MASK_FLAG_NO_UI = 1024,};
enum MACRO_COPY {COPY_FILE_FAIL_IF_EXISTS = 1,COPY_FILE_RESTARTABLE = 2,};
enum MACRO_CTRL {CTRL_C_EVENT = 0,CTRL_BREAK_EVENT = 1,CTRL_CLOSE_EVENT = 2,CTRL_LOGOFF_EVENT = 5,CTRL_SHUTDOWN_EVENT = 6,};
enum MACRO_CTRY {CTRY_DEFAULT = 0,CTRY_AUSTRALIA = 61,CTRY_AUSTRIA = 43,CTRY_BELGIUM = 32,CTRY_BRAZIL = 55,CTRY_BULGARIA = 359,CTRY_CANADA = 2,CTRY_CROATIA = 385,CTRY_CZECH = 42,CTRY_DENMARK = 45,CTRY_FINLAND = 358,CTRY_FRANCE = 33,CTRY_GERMANY = 49,CTRY_GREECE = 30,CTRY_HONG_KONG = 852,CTRY_HUNGARY = 36,CTRY_ICELAND = 354,CTRY_IRELAND = 353,CTRY_ITALY = 39,CTRY_JAPAN = 81,CTRY_MEXICO = 52,CTRY_NETHERLANDS = 31,CTRY_NEW_ZEALAND = 64,CTRY_NORWAY = 47,CTRY_POLAND = 48,CTRY_PORTUGAL = 351,CTRY_PRCHINA = 86,CTRY_ROMANIA = 40,CTRY_RUSSIA = 7,CTRY_SINGAPORE = 65,CTRY_SLOVAK = 42,CTRY_SLOVENIA = 386,CTRY_SOUTH_KOREA = 82,CTRY_SPAIN = 34,CTRY_SWEDEN = 46,CTRY_SWITZERLAND = 41,CTRY_TAIWAN = 886,CTRY_TURKEY = 90,CTRY_UNITED_KINGDOM = 44,CTRY_UNITED_STATES = 1,};
enum MACRO_DATA {DATA_E_FORMATETC = -2147221404,};
enum MACRO_DATE {DATE_SHORTDATE = 1,DATE_LONGDATE = 2,DATE_USE_ALT_CALENDAR = 4,};
enum MACRO_DBTF {DBTF_MEDIA = 1,DBTF_NET = 2,};
enum MACRO_DBWF {DBWF_LPARAMPOINTER = 0x8000,};
enum MACRO_DCBA {DCBA_FACEUPNONE = 0,DCBA_FACEUPCENTER = 1,DCBA_FACEUPLEFT = 2,DCBA_FACEUPRIGHT = 3,DCBA_FACEDOWNNONE = 256,DCBA_FACEDOWNCENTER = 257,DCBA_FACEDOWNLEFT = 258,DCBA_FACEDOWNRIGHT = 259,};
enum MACRO_DCTT {DCTT_BITMAP = 1,DCTT_DOWNLOAD = 2,DCTT_SUBDEV = 4,DCTT_DOWNLOAD_OUTLINE = 8,};
enum MACRO_DFCS {DFCS_CAPTIONCLOSE = 0,DFCS_CAPTIONMIN = 1,DFCS_CAPTIONMAX = 2,DFCS_CAPTIONRESTORE = 3,DFCS_CAPTIONHELP = 4,DFCS_MENUARROW = 0,DFCS_MENUCHECK = 1,DFCS_MENUBULLET = 2,DFCS_MENUARROWRIGHT = 4,DFCS_SCROLLUP = 0,DFCS_SCROLLDOWN = 1,DFCS_SCROLLLEFT = 2,DFCS_SCROLLRIGHT = 3,DFCS_SCROLLCOMBOBOX = 5,DFCS_SCROLLSIZEGRIP = 8,DFCS_SCROLLSIZEGRIPRIGHT = 16,DFCS_BUTTONCHECK = 0,DFCS_BUTTONRADIOIMAGE = 1,DFCS_BUTTONRADIOMASK = 2,DFCS_BUTTONRADIO = 4,DFCS_BUTTON3STATE = 8,DFCS_BUTTONPUSH = 16,DFCS_INACTIVE = 256,DFCS_PUSHED = 512,DFCS_CHECKED = 1024,DFCS_ADJUSTRECT = 8192,DFCS_FLAT = 16384,DFCS_MONO = 32768,};
enum MACRO_DISC {DISC_UPDATE_PROFILE = 1,DISC_NO_FORCE = 64,};
enum MACRO_DISK {DISK_LOGGING_START = 0,DISK_LOGGING_STOP = 1,DISK_LOGGING_DUMP = 2,DISK_BINNING = 3,};
enum MACRO_DISP {DISP_CHANGE_SUCCESSFUL = 0,DISP_CHANGE_RESTART = 1,DISP_CHANGE_BADFLAGS = -4,DISP_CHANGE_BADPARAM = -5,DISP_CHANGE_FAILED = -1,DISP_CHANGE_BADMODE = -2,DISP_CHANGE_NOTUPDATED = -3,};
enum MACRO_DLGC {DLGC_WANTARROWS = 1,DLGC_WANTTAB = 2,DLGC_WANTALLKEYS = 4,DLGC_WANTMESSAGE = 4,DLGC_HASSETSEL = 8,DLGC_DEFPUSHBUTTON = 16,DLGC_UNDEFPUSHBUTTON = 32,DLGC_RADIOBUTTON = 64,DLGC_WANTCHARS = 128,DLGC_STATIC = 256,DLGC_BUTTON = 8192,};
enum MACRO_DMTT {DMTT_BITMAP = 1,DMTT_DOWNLOAD = 2,DMTT_SUBDEV = 3,DMTT_DOWNLOAD_OUTLINE = 4,};
enum MACRO_DONT {DONT_RESOLVE_DLL_REFERENCES = 1,};
enum MACRO_EDGE {EDGE_RAISED = 5,EDGE_SUNKEN = 10,EDGE_ETCHED = 6,EDGE_BUMP = 9,};
enum MACRO_EISA {EISA_NO_MAX_FUNCTION = 0xFF,};
enum MACRO_ENUM {ENUM_ALL_CALENDARS = -1,};
enum MACRO_EXIT {EXIT_FAILURE = 1,EXIT_SUCCESS = 0,};
enum MACRO_FADF {FADF_AUTO = 1,FADF_STATIC = 2,FADF_EMBEDDED = 4,FADF_FIXEDSIZE = 16,FADF_BSTR = 256,FADF_UNKNOWN = 512,FADF_DISPATCH = 1024,FADF_VARIANT = 2048,FADF_RESERVED = 61672,};
enum MACRO_FALT {FALT = 16,};
enum MACRO_FILE {FILE_READ_DATA = 1,FILE_LIST_DIRECTORY = 1,FILE_WRITE_DATA = 2,FILE_ADD_FILE = 2,FILE_APPEND_DATA = 4,FILE_ADD_SUBDIRECTORY = 4,FILE_CREATE_PIPE_INSTANCE = 4,FILE_READ_EA = 8,FILE_READ_PROPERTIES = 8,FILE_WRITE_EA = 16,FILE_WRITE_PROPERTIES = 16,FILE_EXECUTE = 32,FILE_TRAVERSE = 32,FILE_DELETE_CHILD = 64,FILE_READ_ATTRIBUTES = 128,FILE_WRITE_ATTRIBUTES = 256,FILE_ALL_ACCESS = 2032127,FILE_GENERIC_READ = 1179785,FILE_GENERIC_WRITE = 1179926,FILE_GENERIC_EXECUTE = 1179808,FILE_SHARE_READ = 1,FILE_SHARE_WRITE = 2,FILE_SHARE_DELETE = 4,FILE_ATTRIBUTE_READONLY = 1,FILE_ATTRIBUTE_HIDDEN = 2,FILE_ATTRIBUTE_SYSTEM = 4,FILE_ATTRIBUTE_DIRECTORY = 16,FILE_ATTRIBUTE_ARCHIVE = 32,FILE_ATTRIBUTE_NORMAL = 128,FILE_ATTRIBUTE_TEMPORARY = 256,FILE_ATTRIBUTE_COMPRESSED = 2048,FILE_ATTRIBUTE_OFFLINE = 4096,FILE_NOTIFY_CHANGE_FILE_NAME = 1,FILE_NOTIFY_CHANGE_DIR_NAME = 2,FILE_NOTIFY_CHANGE_ATTRIBUTES = 4,FILE_NOTIFY_CHANGE_SIZE = 8,FILE_NOTIFY_CHANGE_LAST_WRITE = 16,FILE_NOTIFY_CHANGE_LAST_ACCESS = 32,FILE_NOTIFY_CHANGE_CREATION = 64,FILE_NOTIFY_CHANGE_SECURITY = 256,};
enum MACRO_FIND {FIND_FIRST_EX_CASE_SENSITIVE = 1,};
enum MACRO_FONT {DEVICE_DEFAULT_FONT = 14,DEFAULT_GUI_FONT = 17,OEM_FIXED_FONT = 10,SYSTEM_FONT = 13,SYSTEM_FIXED_FONT = 16,};
enum MACRO_FORM {FORM_BUILTIN = 1,};
enum MACRO_FROM {FROM_PROTOCOL_INFO = -1,};
enum MACRO_GDTR {GDTR_MIN = 1,GDTR_MAX = 2,};
enum MACRO_GHND {GHND = 66,};
enum MACRO_GMDI {GMDI_GOINTOPOPUPS = 2,GMDI_USEDISABLED = 1,};
enum MACRO_GMEM {GMEM_FIXED = 0,GMEM_MOVEABLE = 2,GMEM_MODIFY = 128,};
enum MACRO_GPTR {GPTR = 64,};
enum MACRO_HCBT {HCBT_MOVESIZE = 0,HCBT_MINMAX = 1,HCBT_QS = 2,HCBT_CREATEWND = 3,HCBT_DESTROYWND = 4,HCBT_ACTIVATE = 5,HCBT_CLICKSKIPPED = 6,HCBT_KEYSKIPPED = 7,HCBT_SYSCOMMAND = 8,HCBT_SETFOCUS = 9,};
enum MACRO_HEAP {HEAP_NO_SERIALIZE = 1,HEAP_GROWABLE = 2,HEAP_GENERATE_EXCEPTIONS = 4,HEAP_ZERO_MEMORY = 8,HEAP_REALLOC_IN_PLACE_ONLY = 16,HEAP_TAIL_CHECKING_ENABLED = 32,HEAP_FREE_CHECKING_ENABLED = 64,HEAP_DISABLE_COALESCE_ON_FREE = 128,HEAP_CREATE_ALIGN_16 = 0,HEAP_CREATE_ENABLE_TRACING = 131072,HEAP_MAXIMUM_TAG = 4095,HEAP_PSEUDO_TAG_FLAG = 32768,HEAP_TAG_SHIFT = 16,};
enum MACRO_HELP {HELP_COMMAND = 0x102,HELP_CONTENTS = 0x3,HELP_CONTEXT = 0x1,HELP_CONTEXTPOPUP = 0x8,HELP_FORCEFILE = 0x9,HELP_HELPONHELP = 0x4,HELP_INDEX = 0x3,HELP_KEY = 0x101,HELP_MULTIKEY = 0x201,HELP_PARTIALKEY = 0x105,HELP_QUIT = 0x2,HELP_SETCONTENTS = 0x5,HELP_SETINDEX = 0x5,HELP_CONTEXTMENU = 0xA,HELP_FINDER = 0xB,HELP_WM_HELP = 0xC,HELP_TCARD = 0x8000,HELP_TCARD_DATA = 0x10,HELP_TCARD_OTHER_CALLER = 0x11,};
enum MACRO_HF32 {HF32_DEFAULT = 1,HF32_SHARED = 2,};
enum MACRO_HIDE {HIDE_WINDOW = 0,};
enum MACRO_HIST {HIST_NO_OF_BUCKETS = 24,};
enum MACRO_HKEY {HKEY_CLASSES_ROOT = 0x80000000,HKEY_CURRENT_USER = 0x80000001,HKEY_LOCAL_MACHINE = 0x80000002,HKEY_USERS = 0x80000003,HKEY_PERFORMANCE_DATA = 0x80000004,HKEY_CURRENT_CONFIG = 0x80000005,HKEY_DYN_DATA = 0x80000006,};
enum MACRO_HOST {HOST_NOT_FOUND = 11001,};
enum MACRO_HTTP {HTTP_MAJOR_VERSION = 1,HTTP_MINOR_VERSION = 0,HTTP_QUERY_MIME_VERSION = 0,HTTP_QUERY_CONTENT_TYPE = 1,HTTP_QUERY_CONTENT_TRANSFER_ENCODING = 2,HTTP_QUERY_CONTENT_ID = 3,HTTP_QUERY_CONTENT_DESCRIPTION = 4,HTTP_QUERY_CONTENT_LENGTH = 5,HTTP_QUERY_CONTENT_LANGUAGE = 6,HTTP_QUERY_ALLOW = 7,HTTP_QUERY_PUBLIC = 8,HTTP_QUERY_DATE = 9,HTTP_QUERY_EXPIRES = 10,HTTP_QUERY_LAST_MODIFIED = 11,HTTP_QUERY_MESSAGE_ID = 12,HTTP_QUERY_URI = 13,HTTP_QUERY_DERIVED_FROM = 14,HTTP_QUERY_COST = 15,HTTP_QUERY_LINK = 16,HTTP_QUERY_PRAGMA = 17,HTTP_QUERY_VERSION = 18,HTTP_QUERY_STATUS_CODE = 19,HTTP_QUERY_STATUS_TEXT = 20,HTTP_QUERY_RAW_HEADERS = 21,HTTP_QUERY_RAW_HEADERS_CRLF = 22,HTTP_QUERY_CONNECTION = 23,HTTP_QUERY_ACCEPT = 24,HTTP_QUERY_ACCEPT_CHARSET = 25,HTTP_QUERY_ACCEPT_ENCODING = 26,HTTP_QUERY_ACCEPT_LANGUAGE = 27,HTTP_QUERY_AUTHORIZATION = 28,HTTP_QUERY_CONTENT_ENCODING = 29,HTTP_QUERY_FORWARDED = 30,HTTP_QUERY_FROM = 31,HTTP_QUERY_IF_MODIFIED_SINCE = 32,HTTP_QUERY_LOCATION = 33,HTTP_QUERY_ORIG_URI = 34,HTTP_QUERY_REFERER = 35,HTTP_QUERY_RETRY_AFTER = 36,HTTP_QUERY_SERVER = 37,HTTP_QUERY_TITLE = 38,HTTP_QUERY_USER_AGENT = 39,HTTP_QUERY_WWW_AUTHENTICATE = 40,HTTP_QUERY_PROXY_AUTHENTICATE = 41,HTTP_QUERY_ACCEPT_RANGES = 42,HTTP_QUERY_SET_COOKIE = 43,HTTP_QUERY_COOKIE = 44,HTTP_QUERY_REQUEST_METHOD = 45,HTTP_QUERY_MAX = 45,HTTP_QUERY_CUSTOM = 65535,HTTP_QUERY_FLAG_REQUEST_HEADERS = -2147483648,HTTP_QUERY_FLAG_SYSTEMTIME = 1073741824,HTTP_QUERY_FLAG_NUMBER = 536870912,HTTP_QUERY_FLAG_COALESCE = 268435456,HTTP_QUERY_MODIFIER_FLAGS_MASK = -268435456,HTTP_QUERY_HEADER_MASK = 268435455,HTTP_STATUS_OK = 200,HTTP_STATUS_CREATED = 201,HTTP_STATUS_ACCEPTED = 202,HTTP_STATUS_PARTIAL = 203,HTTP_STATUS_NO_CONTENT = 204,HTTP_STATUS_AMBIGUOUS = 300,HTTP_STATUS_MOVED = 301,HTTP_STATUS_REDIRECT = 302,HTTP_STATUS_REDIRECT_METHOD = 303,HTTP_STATUS_NOT_MODIFIED = 304,HTTP_STATUS_BAD_REQUEST = 400,HTTP_STATUS_DENIED = 401,HTTP_STATUS_PAYMENT_REQ = 402,HTTP_STATUS_FORBIDDEN = 403,HTTP_STATUS_NOT_FOUND = 404,HTTP_STATUS_BAD_METHOD = 405,HTTP_STATUS_NONE_ACCEPTABLE = 406,HTTP_STATUS_PROXY_AUTH_REQ = 407,HTTP_STATUS_REQUEST_TIMEOUT = 408,HTTP_STATUS_CONFLICT = 409,HTTP_STATUS_GONE = 410,HTTP_STATUS_AUTH_REFUSED = 411,HTTP_STATUS_SERVER_ERROR = 500,HTTP_STATUS_NOT_SUPPORTED = 501,HTTP_STATUS_BAD_GATEWAY = 502,HTTP_STATUS_SERVICE_UNAVAIL = 503,HTTP_STATUS_GATEWAY_TIMEOUT = 504,};
enum MACRO_HWND {HWND_BROADCAST = 0xFFFF,HWND_BOTTOM = 0x1,HWND_NOTOPMOST = 0xFFFFFFFE,HWND_TOP = 0x0,HWND_TOPMOST = 0xFFFFFFFF,HWND_DESKTOP = 0x0,};
enum MACRO_IACE {IACE_CHILDREN = 1,IACE_DEFAULT = 16,IACE_IGNORENOCONTEXT = 32,};
enum MACRO_ICON {ICON_SMALL = 0,ICON_BIG = 1,};
enum MACRO_IDNO {IDNO = 7,};
enum MACRO_IDOK {IDOK = 1,IDRETRY = 4,};
enum MACRO_IMFS {IMFS_GRAYED = 3,IMFS_DISABLED = 3,IMFS_CHECKED = 8,IMFS_HILITE = 128,IMFS_ENABLED = 0,IMFS_UNCHECKED = 0,IMFS_UNHILITE = 0,IMFS_DEFAULT = 4096,};
enum MACRO_IMFT {IMFT_RADIOCHECK = 1,IMFT_SEPARATOR = 2,IMFT_SUBMENU = 4,};
enum MACRO_IS_E {IS_E_EXEC_FAILED = 0x80042002,};
enum MACRO_LANG {LANG_BULGARIAN = 2,LANG_CHINESE = 4,LANG_CROATIAN = 26,LANG_CZECH = 5,LANG_DANISH = 6,LANG_DUTCH = 19,LANG_ENGLISH = 9,LANG_FINNISH = 11,LANG_FRENCH = 12,LANG_GERMAN = 7,LANG_GREEK = 8,LANG_HUNGARIAN = 14,LANG_ICELANDIC = 15,LANG_ITALIAN = 16,LANG_JAPANESE = 17,LANG_KOREAN = 18,LANG_NEUTRAL = 0,LANG_NORWEGIAN = 20,LANG_POLISH = 21,LANG_PORTUGUESE = 22,LANG_ROMANIAN = 24,LANG_RUSSIAN = 25,LANG_SLOVAK = 27,LANG_SLOVENIAN = 36,LANG_SPANISH = 10,LANG_SWEDISH = 29,LANG_TURKISH = 31,};
enum MACRO_LCID {LCID_INSTALLED = 1,LCID_SUPPORTED = 2,};
enum MACRO_LF32 {LF32_FIXED = 0x1,LF32_FREE = 0x2,LF32_MOVEABLE = 0x4,};
enum MACRO_LHND {LHND = 66,};
enum MACRO_LM20 {LM20_CNLEN = 15,LM20_DNLEN = 15,LM20_SNLEN = 15,LM20_STXTLEN = 63,LM20_UNCLEN = 17,LM20_NNLEN = 12,LM20_RMLEN = 30,};
enum MACRO_LMEM {LMEM_FIXED = 0,LMEM_MOVEABLE = 2,LMEM_NONZEROLHND = 2,LMEM_NONZEROLPTR = 0,LMEM_DISCARDABLE = 3840,LMEM_NOCOMPACT = 16,LMEM_NODISCARD = 32,LMEM_ZEROINIT = 64,LMEM_DISCARDED = 16384,LMEM_MODIFY = 128,LMEM_INVALID_HANDLE = 32768,LMEM_LOCKCOUNT = 255,};
enum MACRO_LOAD {LOAD_LIBRARY_AS_DATAFILE = 2,LOAD_WITH_ALTERED_SEARCH_PATH = 8,};
enum MACRO_LPTR {LPTR = 64,};
enum MACRO_LVCF {LVCF_FMT = 1,LVCF_WIDTH = 2,LVCF_TEXT = 4,LVCF_SUBITEM = 8,};
enum MACRO_LVFI {LVFI_PARAM = 1,LVFI_STRING = 2,LVFI_PARTIAL = 8,LVFI_WRAP = 32,LVFI_NEARESTXY = 64,};
enum MACRO_LVHT {LVHT_NOWHERE = 1,LVHT_ONITEMICON = 2,LVHT_ONITEMLABEL = 4,LVHT_ONITEMSTATEICON = 8,LVHT_ONITEM = 14,LVHT_ABOVE = 8,LVHT_BELOW = 16,LVHT_TORIGHT = 32,LVHT_TOLEFT = 64,};
enum MACRO_LVIF {LVIF_TEXT = 1,LVIF_IMAGE = 2,LVIF_PARAM = 4,LVIF_STATE = 8,};
enum MACRO_LVIR {LVIR_BOUNDS = 0,LVIR_ICON = 1,LVIR_LABEL = 2,LVIR_SELECTBOUNDS = 3,};
enum MACRO_LVIS {LVIS_FOCUSED = 1,LVIS_SELECTED = 2,LVIS_CUT = 4,LVIS_DROPHILITED = 8,LVIS_OVERLAYMASK = 3840,LVIS_STATEIMAGEMASK = 61440,};
enum MACRO_LVNI {LVNI_ALL = 0,LVNI_FOCUSED = 1,LVNI_SELECTED = 2,LVNI_CUT = 4,LVNI_DROPHILITED = 8,LVNI_ABOVE = 256,LVNI_BELOW = 512,LVNI_TOLEFT = 1024,LVNI_TORIGHT = 2048,};
enum MACRO_MAPI {MAPI_E_AMBIGUOUS_RECIPIENT = 0x15,MAPI_E_ATTACHMENT_NOT_FOUND = 0xB,MAPI_E_ATTACHMENT_OPEN_FAILURE = 0xC,MAPI_E_BAD_RECIPTYPE = 0xF,MAPI_E_FAILURE = 0x2,MAPI_E_INSUFFICIENT_MEMORY = 0x5,MAPI_E_INVALID_RECIPS = 0x19,MAPI_E_LOGIN_FAILURE = 0x3,MAPI_E_TEXT_TOO_LARGE = 0x12,MAPI_E_TOO_MANY_FILES = 0x9,MAPI_E_TOO_MANY_RECIPIENTS = 0xA,MAPI_E_UNKNOWN_RECIPIENT = 0xE,MAPI_E_USER_ABORT = 0x1,MAPI_DIALOG = 0x8,MAPI_NEW_SESSION = 0x2,MAPI_LOGON_UI = 0x1,MAPI_RECEIPT_REQUESTED = 0x2,MAPI_SENT = 0x4,MAPI_UNREAD = 0x1,MAPI_OLE = 0x1,MAPI_OLE_STATIC = 0x2,MAPI_ORIG = 0x0,MAPI_TO = 0x1,MAPI_CC = 0x2,MAPI_BCC = 0x3,};
enum MACRO_MASK {MASK = 16,OTHER = 32,};
enum MACRO_MDIS {MDIS_ALLCHILDSTYLES = 1,};
enum MACRO_META {META_SETBKCOLOR = 0x201,META_SETBKMODE = 0x102,META_SETMAPMODE = 0x103,META_SETROP2 = 0x104,META_SETRELABS = 0x105,META_SETPOLYFILLMODE = 0x106,META_SETSTRETCHBLTMODE = 0x107,META_SETTEXTCHAREXTRA = 0x108,META_SETTEXTCOLOR = 0x209,META_SETTEXTJUSTIFICATION = 0x20A,META_SETWINDOWORG = 0x20B,META_SETWINDOWEXT = 0x20C,META_SETVIEWPORTORG = 0x20D,META_SETVIEWPORTEXT = 0x20E,META_OFFSETWINDOWORG = 0x20F,META_SCALEWINDOWEXT = 0x410,META_OFFSETVIEWPORTORG = 0x211,META_SCALEVIEWPORTEXT = 0x412,META_LINETO = 0x213,META_MOVETO = 0x214,META_EXCLUDECLIPRECT = 0x415,META_INTERSECTCLIPRECT = 0x416,META_ARC = 0x817,META_ELLIPSE = 0x418,META_FLOODFILL = 0x419,META_PIE = 0x81A,META_RECTANGLE = 0x41B,META_ROUNDRECT = 0x61C,META_PATBLT = 0x61D,META_SAVEDC = 0x1E,META_SETPIXEL = 0x41F,META_OFFSETCLIPRGN = 0x220,META_TEXTOUT = 0x521,META_BITBLT = 0x922,META_STRETCHBLT = 0xB23,META_POLYGON = 0x324,META_POLYLINE = 0x325,META_ESCAPE = 0x626,META_RESTOREDC = 0x127,META_FILLREGION = 0x228,META_FRAMEREGION = 0x429,META_INVERTREGION = 0x12A,META_PAINTREGION = 0x12B,META_SELECTCLIPREGION = 0x12C,META_SELECTOBJECT = 0x12D,META_SETTEXTALIGN = 0x12E,META_CHORD = 0x830,META_SETMAPPERFLAGS = 0x231,META_EXTTEXTOUT = 0xA32,META_SETDIBTODEV = 0xD33,META_SELECTPALETTE = 0x234,META_REALIZEPALETTE = 0x35,META_ANIMATEPALETTE = 0x436,META_SETPALENTRIES = 0x37,META_POLYPOLYGON = 0x538,META_RESIZEPALETTE = 0x139,META_DIBBITBLT = 0x940,META_DIBSTRETCHBLT = 0xB41,META_DIBCREATEPATTERNBRUSH = 0x142,META_STRETCHDIB = 0xF43,META_EXTFLOODFILL = 0x548,META_DELETEOBJECT = 0x1F0,META_CREATEPALETTE = 0xF7,META_CREATEPATTERNBRUSH = 0x1F9,META_CREATEPENINDIRECT = 0x2FA,META_CREATEFONTINDIRECT = 0x2FB,META_CREATEBRUSHINDIRECT = 0x2FC,META_CREATEREGION = 0x6FF,};
enum MACRO_MEVT {MEVT_F_SHORT = 0,MEVT_F_LONG = -2147483648,MEVT_F_CALLBACK = 1073741824,MEVT_SHORTMSG = 0,MEVT_TEMPO = 1,MEVT_NOP = 2,MEVT_LONGMSG = 128,MEVT_COMMENT = 130,MEVT_VERSION = 132,};
enum MACRO_MHDR {MHDR_DONE = 1,MHDR_PREPARED = 2,MHDR_INQUEUE = 4,MHDR_ISSTRM = 8,};
enum MACRO_MIDI {MIDI_MAPPER = 4294967295,MIDI_IO_STATUS = 32,MIDI_CACHE_ALL = 1,MIDI_CACHE_BESTFIT = 2,MIDI_CACHE_QUERY = 3,MIDI_UNCACHE = 4,};
enum MACRO_MIIM {MIIM_STATE = 1,MIIM_ID = 2,MIIM_SUBMENU = 4,MIIM_CHECKMARKS = 8,MIIM_TYPE = 16,MIIM_DATA = 32,MIIM_STRING = 64,MIIM_BITMAP = 128,MIIM_FTYPE = 256,};
enum MACRO_MMIO {MMIO_RWMODE = 3,MMIO_SHAREMODE = 112,MMIO_CREATE = 4096,MMIO_PARSE = 256,MMIO_DELETE = 512,MMIO_EXIST = 16384,MMIO_ALLOCBUF = 65536,MMIO_GETTEMP = 131072,MMIO_DIRTY = 268435456,MMIO_READ = 0,MMIO_WRITE = 1,MMIO_READWRITE = 2,MMIO_COMPAT = 0,MMIO_EXCLUSIVE = 16,MMIO_DENYWRITE = 32,MMIO_DENYREAD = 48,MMIO_DENYNONE = 64,MMIO_FHOPEN = 16,MMIO_EMPTYBUF = 16,MMIO_TOUPPER = 16,MMIO_INSTALLPROC = 65536,MMIO_GLOBALPROC = 268435456,MMIO_REMOVEPROC = 131072,MMIO_UNICODEPROC = 16777216,MMIO_FINDPROC = 262144,MMIO_FINDCHUNK = 16,MMIO_FINDRIFF = 32,MMIO_FINDLIST = 64,MMIO_CREATERIFF = 32,MMIO_CREATELIST = 64,};
enum MACRO_MONO {MONO_FONT = 8,};
enum MACRO_MSGF {MSGF_DIALOGBOX = 0,MSGF_MESSAGEBOX = 1,MSGF_MENU = 2,MSGF_MOVE = 3,MSGF_SIZE = 4,MSGF_SCROLLBAR = 5,MSGF_NEXTWINDOW = 6,MSGF_MAINLOOP = 8,MSGF_USER = 4096,};
enum MACRO_NAME {NAME_FLAGS_MASK = 0x87,};
enum MACRO_NDDE {NDDE_NO_ERROR = 0,NDDE_ACCESS_DENIED = 1,NDDE_BUF_TOO_SMALL = 2,NDDE_ERROR_MORE_DATA = 3,NDDE_INVALID_SERVER = 4,NDDE_INVALID_SHARE = 5,NDDE_INVALID_PARAMETER = 6,NDDE_INVALID_LEVEL = 7,NDDE_INVALID_PASSWORD = 8,NDDE_INVALID_ITEMNAME = 9,NDDE_INVALID_TOPIC = 10,NDDE_INTERNAL_ERROR = 11,NDDE_OUT_OF_MEMORY = 12,NDDE_INVALID_APPNAME = 13,NDDE_NOT_IMPLEMENTED = 14,NDDE_SHARE_ALREADY_EXIST = 15,NDDE_SHARE_NOT_EXIST = 16,NDDE_INVALID_FILENAME = 17,NDDE_NOT_RUNNING = 18,NDDE_INVALID_WINDOW = 19,NDDE_INVALID_SESSION = 20,NDDE_INVALID_ITEM_LIST = 21,NDDE_SHARE_DATA_CORRUPTED = 22,NDDE_REGISTRY_ERROR = 23,NDDE_CANT_ACCESS_SERVER = 24,NDDE_INVALID_SPECIAL_COMMAND = 25,NDDE_INVALID_SECURITY_DESC = 26,NDDE_TRUST_SHARE_FAIL = 27,};
enum MACRO_NERR {NERR_Success = 0,NERR_BASE = 2100,NERR_NetNotStarted = 2102,NERR_UnknownServer = 2103,NERR_ShareMem = 2104,NERR_NoNetworkResource = 2105,NERR_RemoteOnly = 2106,NERR_DevNotRedirected = 2107,NERR_ServerNotStarted = 2114,NERR_ItemNotFound = 2115,NERR_UnknownDevDir = 2116,NERR_RedirectedPath = 2117,NERR_DuplicateShare = 2118,NERR_NoRoom = 2119,NERR_TooManyItems = 2121,NERR_InvalidMaxUsers = 2122,NERR_BufTooSmall = 2123,NERR_RemoteErr = 2127,NERR_LanmanIniError = 2131,NERR_NetworkError = 2136,NERR_WkstaInconsistentState = 2137,NERR_WkstaNotStarted = 2138,NERR_BrowserNotStarted = 2139,NERR_InternalError = 2140,NERR_BadTransactConfig = 2141,NERR_InvalidAPI = 2142,NERR_BadEventName = 2143,NERR_DupNameReboot = 2144,NERR_CfgCompNotFound = 2146,NERR_CfgParamNotFound = 2147,NERR_LineTooLong = 2149,NERR_QNotFound = 2150,NERR_JobNotFound = 2151,NERR_DestNotFound = 2152,NERR_DestExists = 2153,NERR_QExists = 2154,NERR_QNoRoom = 2155,NERR_JobNoRoom = 2156,NERR_DestNoRoom = 2157,NERR_DestIdle = 2158,NERR_DestInvalidOp = 2159,NERR_ProcNoRespond = 2160,NERR_SpoolerNotLoaded = 2161,NERR_DestInvalidState = 2162,NERR_QInvalidState = 2163,NERR_JobInvalidState = 2164,NERR_SpoolNoMemory = 2165,NERR_DriverNotFound = 2166,NERR_DataTypeInvalid = 2167,NERR_ProcNotFound = 2168,NERR_ServiceTableLocked = 2180,NERR_ServiceTableFull = 2181,NERR_ServiceInstalled = 2182,NERR_ServiceEntryLocked = 2183,NERR_ServiceNotInstalled = 2184,NERR_BadServiceName = 2185,NERR_ServiceCtlTimeout = 2186,NERR_ServiceCtlBusy = 2187,NERR_BadServiceProgName = 2188,NERR_ServiceNotCtrl = 2189,NERR_ServiceKillProc = 2190,NERR_ServiceCtlNotValid = 2191,NERR_NotInDispatchTbl = 2192,NERR_BadControlRecv = 2193,NERR_ServiceNotStarting = 2194,NERR_AlreadyLoggedOn = 2200,NERR_NotLoggedOn = 2201,NERR_BadUsername = 2202,NERR_BadPassword = 2203,NERR_UnableToAddName_W = 2204,NERR_UnableToAddName_F = 2205,NERR_UnableToDelName_W = 2206,NERR_UnableToDelName_F = 2207,NERR_LogonsPaused = 2209,NERR_LogonServerConflict = 2210,NERR_LogonNoUserPath = 2211,NERR_LogonScriptError = 2212,NERR_StandaloneLogon = 2214,NERR_LogonServerNotFound = 2215,NERR_LogonDomainExists = 2216,NERR_NonValidatedLogon = 2217,NERR_ACFNotFound = 2219,NERR_GroupNotFound = 2220,NERR_UserNotFound = 2221,NERR_ResourceNotFound = 2222,NERR_GroupExists = 2223,NERR_UserExists = 2224,NERR_ResourceExists = 2225,NERR_NotPrimary = 2226,NERR_ACFNotLoaded = 2227,NERR_ACFNoRoom = 2228,NERR_ACFFileIOFail = 2229,NERR_ACFTooManyLists = 2230,NERR_UserLogon = 2231,NERR_ACFNoParent = 2232,NERR_CanNotGrowSegment = 2233,NERR_SpeGroupOp = 2234,NERR_NotInCache = 2235,NERR_UserInGroup = 2236,NERR_UserNotInGroup = 2237,NERR_AccountUndefined = 2238,NERR_AccountExpired = 2239,NERR_InvalidWorkstation = 2240,NERR_InvalidLogonHours = 2241,NERR_PasswordExpired = 2242,NERR_PasswordCantChange = 2243,NERR_PasswordHistConflict = 2244,NERR_PasswordTooShort = 2245,NERR_PasswordTooRecent = 2246,NERR_InvalidDatabase = 2247,NERR_DatabaseUpToDate = 2248,NERR_SyncRequired = 2249,NERR_UseNotFound = 2250,NERR_BadAsgType = 2251,NERR_DeviceIsShared = 2252,NERR_NoComputerName = 2270,NERR_MsgAlreadyStarted = 2271,NERR_MsgInitFailed = 2272,NERR_NameNotFound = 2273,NERR_AlreadyForwarded = 2274,NERR_AddForwarded = 2275,NERR_AlreadyExists = 2276,NERR_TooManyNames = 2277,NERR_DelComputerName = 2278,NERR_LocalForward = 2279,NERR_GrpMsgProcessor = 2280,NERR_PausedRemote = 2281,NERR_BadReceive = 2282,NERR_NameInUse = 2283,NERR_MsgNotStarted = 2284,NERR_NotLocalName = 2285,NERR_NoForwardName = 2286,NERR_RemoteFull = 2287,NERR_NameNotForwarded = 2288,NERR_TruncatedBroadcast = 2289,NERR_InvalidDevice = 2294,NERR_WriteFault = 2295,NERR_DuplicateName = 2297,NERR_DeleteLater = 2298,NERR_IncompleteDel = 2299,NERR_MultipleNets = 2300,NERR_NetNameNotFound = 2310,NERR_DeviceNotShared = 2311,NERR_ClientNameNotFound = 2312,NERR_FileIdNotFound = 2314,NERR_ExecFailure = 2315,NERR_TmpFile = 2316,NERR_TooMuchData = 2317,NERR_DeviceShareConflict = 2318,NERR_BrowserTableIncomplete = 2319,NERR_NotLocalDomain = 2320,NERR_DevInvalidOpCode = 2331,NERR_DevNotFound = 2332,NERR_DevNotOpen = 2333,NERR_BadQueueDevString = 2334,NERR_BadQueuePriority = 2335,NERR_NoCommDevs = 2337,NERR_QueueNotFound = 2338,NERR_BadDevString = 2340,NERR_BadDev = 2341,NERR_InUseBySpooler = 2342,NERR_CommDevInUse = 2343,NERR_InvalidComputer = 2351,NERR_MaxLenExceeded = 2354,NERR_BadComponent = 2356,NERR_CantType = 2357,NERR_TooManyEntries = 2362,NERR_ProfileFileTooBig = 2370,NERR_ProfileOffset = 2371,NERR_ProfileCleanup = 2372,NERR_ProfileUnknownCmd = 2373,NERR_ProfileLoadErr = 2374,NERR_ProfileSaveErr = 2375,NERR_LogOverflow = 2377,NERR_LogFileChanged = 2378,NERR_LogFileCorrupt = 2379,NERR_SourceIsDir = 2380,NERR_BadSource = 2381,NERR_BadDest = 2382,NERR_DifferentServers = 2383,NERR_RunSrvPaused = 2385,NERR_ErrCommRunSrv = 2389,NERR_ErrorExecingGhost = 2391,NERR_ShareNotFound = 2392,NERR_InvalidLana = 2400,NERR_OpenFiles = 2401,NERR_ActiveConns = 2402,NERR_BadPasswordCore = 2403,NERR_DevInUse = 2404,NERR_LocalDrive = 2405,NERR_AlertExists = 2430,NERR_TooManyAlerts = 2431,NERR_NoSuchAlert = 2432,NERR_BadRecipient = 2433,NERR_AcctLimitExceeded = 2434,NERR_InvalidLogSeek = 2440,NERR_BadUasConfig = 2450,NERR_InvalidUASOp = 2451,NERR_LastAdmin = 2452,NERR_DCNotFound = 2453,NERR_LogonTrackingError = 2454,NERR_NetlogonNotStarted = 2455,NERR_CanNotGrowUASFile = 2456,NERR_TimeDiffAtDC = 2457,NERR_PasswordMismatch = 2458,NERR_NoSuchServer = 2460,NERR_NoSuchSession = 2461,NERR_NoSuchConnection = 2462,NERR_TooManyServers = 2463,NERR_TooManySessions = 2464,NERR_TooManyConnections = 2465,NERR_TooManyFiles = 2466,NERR_NoAlternateServers = 2467,NERR_TryDownLevel = 2470,NERR_UPSDriverNotStarted = 2480,NERR_UPSInvalidConfig = 2481,NERR_UPSInvalidCommPort = 2482,NERR_UPSSignalAsserted = 2483,NERR_UPSShutdownFailed = 2484,NERR_BadDosRetCode = 2500,NERR_ProgNeedsExtraMem = 2501,NERR_BadDosFunction = 2502,NERR_RemoteBootFailed = 2503,NERR_BadFileCheckSum = 2504,NERR_NoRplBootSystem = 2505,NERR_RplLoadrNetBiosErr = 2506,NERR_RplLoadrDiskErr = 2507,NERR_ImageParamErr = 2508,NERR_TooManyImageParams = 2509,NERR_NonDosFloppyUsed = 2510,NERR_RplBootRestart = 2511,NERR_RplSrvrCallFailed = 2512,NERR_CantConnectRplSrvr = 2513,NERR_CantOpenImageFile = 2514,NERR_CallingRplSrvr = 2515,NERR_StartingRplBoot = 2516,NERR_RplBootServiceTerm = 2517,NERR_RplBootStartFailed = 2518,NERR_RPL_CONNECTED = 2519,NERR_BrowserConfiguredToNotRun = 2550,NERR_RplNoAdaptersStarted = 2610,NERR_RplBadRegistry = 2611,NERR_RplBadDatabase = 2612,NERR_RplRplfilesShare = 2613,NERR_RplNotRplServer = 2614,NERR_RplCannotEnum = 2615,NERR_RplWkstaInfoCorrupted = 2616,NERR_RplWkstaNotFound = 2617,NERR_RplWkstaNameUnavailable = 2618,NERR_RplProfileInfoCorrupted = 2619,NERR_RplProfileNotFound = 2620,NERR_RplProfileNameUnavailable = 2621,NERR_RplProfileNotEmpty = 2622,NERR_RplConfigInfoCorrupted = 2623,NERR_RplConfigNotFound = 2624,NERR_RplAdapterInfoCorrupted = 2625,NERR_RplInternal = 2626,NERR_RplVendorInfoCorrupted = 2627,NERR_RplBootInfoCorrupted = 2628,NERR_RplWkstaNeedsUserAcct = 2629,NERR_RplNeedsRPLUSERAcct = 2630,NERR_RplBootNotFound = 2631,NERR_RplIncompatibleProfile = 2632,NERR_RplAdapterNameUnavailable = 2633,NERR_RplConfigNotEmpty = 2634,NERR_RplBootInUse = 2635,NERR_RplBackupDatabase = 2636,NERR_RplAdapterNotFound = 2637,NERR_RplVendorNotFound = 2638,NERR_RplVendorNameUnavailable = 2639,NERR_RplBootNameUnavailable = 2640,NERR_RplConfigNameUnavailable = 2641,};
enum MACRO_NORM {NORM_IGNORECASE = 1,NORM_IGNOREKANATYPE = 65536,NORM_IGNORENONSPACE = 2,NORM_IGNORESYMBOLS = 4,NORM_IGNOREWIDTH = 131072,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_OPEN {OPEN_EXISTING = 3,OPEN_ALWAYS = 4,};
enum MACRO_PAGE {PAGE_READONLY = 2,PAGE_READWRITE = 4,PAGE_WRITECOPY = 8,};
enum MACRO_PARM {PARM_ERROR_UNKNOWN = 4294967295,PARM_ERROR_NONE = 0,};
enum MACRO_PATH {BEGIN_PATH = 4096,CLIP_TO_PATH = 4097,END_PATH = 4098,};
enum MACRO_PBTF {PBTF_APMRESUMEFROMFAILURE = 1,};
enum MACRO_PCIC {PCIC_DEFAULT_IRQMASK = 0x4EB8,PCIC_DEFAULT_NUMSOCKETS = 0x0,};
enum MACRO_PERF {PERF_DATA_VERSION = 1,PERF_DATA_REVISION = 1,PERF_NO_INSTANCES = -1,PERF_SIZE_DWORD = 0,PERF_SIZE_LARGE = 256,PERF_SIZE_ZERO = 512,PERF_SIZE_VARIABLE_LEN = 768,PERF_TYPE_NUMBER = 0,PERF_TYPE_COUNTER = 1024,PERF_TYPE_TEXT = 2048,PERF_TYPE_ZERO = 3072,PERF_NUMBER_HEX = 0,PERF_NUMBER_DECIMAL = 65536,PERF_NUMBER_DEC_1000 = 131072,PERF_COUNTER_VALUE = 0,PERF_COUNTER_RATE = 65536,PERF_COUNTER_FRACTION = 131072,PERF_COUNTER_BASE = 196608,PERF_COUNTER_ELAPSED = 262144,PERF_COUNTER_QUEUELEN = 327680,PERF_COUNTER_HISTOGRAM = 393216,PERF_TEXT_UNICODE = 0,PERF_TEXT_ASCII = 65536,PERF_TIMER_TICK = 0,PERF_TIMER_100NS = 1048576,PERF_OBJECT_TIMER = 2097152,PERF_DELTA_COUNTER = 4194304,PERF_DELTA_BASE = 8388608,PERF_INVERSE_COUNTER = 16777216,PERF_MULTI_COUNTER = 33554432,PERF_DISPLAY_NO_SUFFIX = 0,PERF_DISPLAY_PER_SEC = 268435456,PERF_DISPLAY_PERCENT = 536870912,PERF_DISPLAY_SECONDS = 805306368,PERF_DISPLAY_NOSHOW = 1073741824,PERF_COUNTER_HISTOGRAM_TYPE = -2147483648,PERF_NO_UNIQUE_ID = -1,PERF_DETAIL_NOVICE = 100,PERF_DETAIL_ADVANCED = 200,PERF_DETAIL_EXPERT = 300,PERF_DETAIL_WIZARD = 400,PERF_COUNTER_COUNTER = 272696320,PERF_COUNTER_TIMER = 541132032,PERF_COUNTER_QUEUELEN_TYPE = 4523008,PERF_COUNTER_BULK_COUNT = 272696576,PERF_COUNTER_TEXT = 2816,PERF_COUNTER_RAWCOUNT = 65536,PERF_COUNTER_LARGE_RAWCOUNT = 65792,PERF_COUNTER_RAWCOUNT_HEX = 0,PERF_COUNTER_LARGE_RAWCOUNT_HEX = 256,PERF_SAMPLE_FRACTION = 549585920,PERF_SAMPLE_COUNTER = 4260864,PERF_COUNTER_NODATA = 1073742336,PERF_COUNTER_TIMER_INV = 557909248,PERF_SAMPLE_BASE = 1073939457,PERF_AVERAGE_TIMER = 805438464,PERF_AVERAGE_BASE = 1073939458,PERF_AVERAGE_BULK = 1073874176,PERF_100NSEC_TIMER = 542180608,PERF_100NSEC_TIMER_INV = 558957824,PERF_COUNTER_MULTI_TIMER = 574686464,PERF_COUNTER_MULTI_TIMER_INV = 591463680,PERF_COUNTER_MULTI_BASE = 1107494144,PERF_100NSEC_MULTI_TIMER = 575735040,PERF_100NSEC_MULTI_TIMER_INV = 592512256,PERF_RAW_FRACTION = 537003008,PERF_RAW_BASE = 1073939459,PERF_ELAPSED_TIME = 807666944,};
enum MACRO_PERM {PERM_FILE_READ = 1,PERM_FILE_WRITE = 2,PERM_FILE_CREATE = 4,};
enum MACRO_PIPE {PIPE_ACCESS_DUPLEX = 3,PIPE_ACCESS_INBOUND = 1,PIPE_ACCESS_OUTBOUND = 2,PIPE_TYPE_BYTE = 0,PIPE_TYPE_MESSAGE = 4,PIPE_READMODE_BYTE = 0,PIPE_READMODE_MESSAGE = 2,PIPE_WAIT = 0,PIPE_NOWAIT = 1,PIPE_CLIENT_END = 0,PIPE_SERVER_END = 1,PIPE_UNLIMITED_INSTANCES = 255,};
enum MACRO_PORT {PORT_TYPE_WRITE = 1,PORT_TYPE_READ = 2,PORT_TYPE_REDIRECTED = 4,PORT_TYPE_NET_ATTACHED = 8,};
enum MACRO_PRIO {PRIO_MIN = -20,PRIO_MAX = 20,};
enum MACRO_PROP {PROP_SM_CXDLG = 212,PROP_SM_CYDLG = 188,PROP_MED_CXDLG = 227,PROP_MED_CYDLG = 215,PROP_LG_CXDLG = 252,PROP_LG_CYDLG = 218,};
enum MACRO_PROV {PROV_RSA_FULL = 1,PROV_RSA_SIG = 2,PROV_DSS = 3,PROV_FORTEZZA = 4,PROV_MS_MAIL = 5,PROV_SSL = 6,PROV_STT_MER = 7,PROV_STT_ACQ = 8,PROV_STT_BRND = 9,PROV_STT_ROOT = 10,PROV_STT_ISS = 11,};
enum MACRO_PSCB {PSCB_INITIALIZED = 1,PSCB_PRECREATE = 2,};
enum MACRO_RAND {RAND_MAX = 2147483647,};
enum MACRO_RBBS {RBBS_BREAK = 1,RBBS_FIXEDSIZE = 2,RBBS_CHILDEDGE = 4,RBBS_HIDDEN = 8,RBBS_NOVERT = 16,RBBS_FIXEDBMP = 32,};
enum MACRO_RBIM {RBIM_IMAGELIST = 1,};
enum MACRO_READ {READ_CONTROL = 0x20000,};
enum MACRO_RECO {RECO_PASTE = 0,RECO_DROP = 1,RECO_COPY = 2,RECO_CUT = 3,RECO_DRAG = 4,};
enum MACRO_REPL {REPL_ROLE_EXPORT = 1,REPL_ROLE_IMPORT = 2,REPL_ROLE_BOTH = 3,REPL_INTERVAL_INFOLEVEL = 1000,REPL_PULSE_INFOLEVEL = 1001,REPL_GUARDTIME_INFOLEVEL = 1002,REPL_RANDOM_INFOLEVEL = 1003,REPL_UNLOCK_NOFORCE = 0,REPL_UNLOCK_FORCE = 1,REPL_STATE_OK = 0,REPL_STATE_NO_MASTER = 1,REPL_STATE_NO_SYNC = 2,REPL_STATE_NEVER_REPLICATED = 3,REPL_INTEGRITY_FILE = 1,REPL_INTEGRITY_TREE = 2,REPL_EXTENT_FILE = 1,REPL_EXTENT_TREE = 2,REPL_EXPORT_INTEGRITY_INFOLEVEL = 1000,REPL_EXPORT_EXTENT_INFOLEVEL = 1001,};
enum MACRO_SBSP {SBSP_DEFBROWSER = 0,SBSP_SAMEBROWSER = 1,SBSP_NEWBROWSER = 2,SBSP_DEFMODE = 0,SBSP_OPENMODE = 16,SBSP_EXPLOREMODE = 32,SBSP_ABSOLUTE = 0,SBSP_RELATIVE = 4096,SBSP_PARENT = 8192,SBSP_INITIATEDBYHLINKFRAME = -2147483648,SBSP_REDIRECT = 1073741824,};
enum MACRO_SCRM {SCRM_VERIFYPW = 32768,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,};
enum MACRO_SESS {SESS_GUEST = 1,SESS_NOENCRYPTION = 2,};
enum MACRO_SHOW {SHOW_OPENWINDOW = 1,SHOW_ICONWINDOW = 2,SHOW_FULLSCREEN = 3,SHOW_OPENNOACTIVATE = 4,};
enum MACRO_SIZE {SIZE_OF_80387_REGISTERS = 80,};
enum MACRO_SMTO {SMTO_ABORTIFHUNG = 2,SMTO_BLOCK = 1,SMTO_NORMAL = 0,};
enum MACRO_SOCK {SOCK_STREAM = 1,SOCK_DGRAM = 2,SOCK_RAW = 3,SOCK_RDM = 4,SOCK_SEQPACKET = 5,};
enum MACRO_SORT {SORT_DEFAULT = 0,SORT_JAPANESE_XJIS = 0,SORT_JAPANESE_UNICODE = 1,SORT_CHINESE_BIG5 = 0,SORT_CHINESE_UNICODE = 1,SORT_KOREAN_KSC = 0,SORT_KOREAN_UNICODE = 1,};
enum MACRO_SPIF {SPIF_UPDATEINIFILE = 1,SPIF_SENDWININICHANGE = 2,SPIF_SENDCHANGE = 2,};
enum MACRO_SSGF {SSGF_DISPLAY = 3,SSGF_NONE = 0,};
enum MACRO_SSTF {SSTF_BORDER = 2,SSTF_CHARS = 1,SSTF_DISPLAY = 3,SSTF_NONE = 0,};
enum MACRO_SSWF {SSWF_CUSTOM = 4,SSWF_DISPLAY = 3,SSWF_NONE = 0,SSWF_TITLE = 1,SSWF_WINDOW = 2,};
enum MACRO_STGM {STGM_DIRECT = 0,STGM_TRANSACTED = 65536,STGM_SIMPLE = 134217728,STGM_READ = 0,STGM_WRITE = 1,STGM_READWRITE = 2,STGM_SHARE_DENY_NONE = 64,STGM_SHARE_DENY_READ = 48,STGM_SHARE_DENY_WRITE = 32,STGM_SHARE_EXCLUSIVE = 16,STGM_PRIORITY = 262144,STGM_DELETEONRELEASE = 67108864,STGM_NOSCRATCH = 1048576,STGM_CREATE = 4096,STGM_CONVERT = 131072,STGM_FAILIFTHERE = 0,};
enum MACRO_SVI1 {SVI1_NUM_ELEMENTS = 5,SVI2_NUM_ELEMENTS = 40,SVI3_NUM_ELEMENTS = 44,};
enum MACRO_SVSI {SVSI_DESELECT = 0,SVSI_SELECT = 1,SVSI_EDIT = 3,SVSI_DESELECTOTHERS = 4,SVSI_ENSUREVISIBLE = 8,SVSI_FOCUSED = 16,};
enum MACRO_SYMF {SYMF_OMAP_GENERATED = 1,SYMF_OMAP_MODIFIED = 2,};
enum MACRO_TAPE {TAPE_ABSOLUTE_POSITION = 0,TAPE_LOGICAL_POSITION = 1,TAPE_PSEUDO_LOGICAL_POSITION = 2,TAPE_REWIND = 0,TAPE_ABSOLUTE_BLOCK = 1,TAPE_LOGICAL_BLOCK = 2,TAPE_PSEUDO_LOGICAL_BLOCK = 3,TAPE_SPACE_END_OF_DATA = 4,TAPE_SPACE_RELATIVE_BLOCKS = 5,TAPE_SPACE_FILEMARKS = 6,TAPE_SPACE_SEQUENTIAL_FMKS = 7,TAPE_SPACE_SETMARKS = 8,TAPE_SPACE_SEQUENTIAL_SMKS = 9,TAPE_DRIVE_FIXED = 1,TAPE_DRIVE_SELECT = 2,TAPE_DRIVE_INITIATOR = 4,TAPE_DRIVE_ERASE_SHORT = 16,TAPE_DRIVE_ERASE_LONG = 32,TAPE_DRIVE_ERASE_BOP_ONLY = 64,TAPE_DRIVE_ERASE_IMMEDIATE = 128,TAPE_DRIVE_TAPE_CAPACITY = 256,TAPE_DRIVE_TAPE_REMAINING = 512,TAPE_DRIVE_FIXED_BLOCK = 1024,TAPE_DRIVE_VARIABLE_BLOCK = 2048,TAPE_DRIVE_WRITE_PROTECT = 4096,TAPE_DRIVE_EOT_WZ_SIZE = 8192,TAPE_DRIVE_ECC = 65536,TAPE_DRIVE_COMPRESSION = 131072,TAPE_DRIVE_PADDING = 262144,TAPE_DRIVE_REPORT_SMKS = 524288,TAPE_DRIVE_GET_ABSOLUTE_BLK = 1048576,TAPE_DRIVE_GET_LOGICAL_BLK = 2097152,TAPE_DRIVE_SET_EOT_WZ_SIZE = 4194304,TAPE_DRIVE_EJECT_MEDIA = 16777216,TAPE_DRIVE_CLEAN_REQUESTS = 33554432,TAPE_DRIVE_SET_CMP_BOP_ONLY = 67108864,TAPE_DRIVE_RESERVED_BIT = -2147483648,TAPE_DRIVE_LOAD_UNLOAD = -2147483647,TAPE_DRIVE_TENSION = -2147483646,TAPE_DRIVE_LOCK_UNLOCK = -2147483644,TAPE_DRIVE_REWIND_IMMEDIATE = -2147483640,TAPE_DRIVE_SET_BLOCK_SIZE = -2147483632,TAPE_DRIVE_LOAD_UNLD_IMMED = -2147483616,TAPE_DRIVE_TENSION_IMMED = -2147483584,TAPE_DRIVE_LOCK_UNLK_IMMED = -2147483520,TAPE_DRIVE_SET_ECC = -2147483392,TAPE_DRIVE_SET_COMPRESSION = -2147483136,TAPE_DRIVE_SET_PADDING = -2147482624,TAPE_DRIVE_SET_REPORT_SMKS = -2147481600,TAPE_DRIVE_ABSOLUTE_BLK = -2147479552,TAPE_DRIVE_ABS_BLK_IMMED = -2147475456,TAPE_DRIVE_LOGICAL_BLK = -2147467264,TAPE_DRIVE_LOG_BLK_IMMED = -2147450880,TAPE_DRIVE_END_OF_DATA = -2147418112,TAPE_DRIVE_RELATIVE_BLKS = -2147352576,TAPE_DRIVE_FILEMARKS = -2147221504,TAPE_DRIVE_SEQUENTIAL_FMKS = -2146959360,TAPE_DRIVE_SETMARKS = -2146435072,TAPE_DRIVE_SEQUENTIAL_SMKS = -2145386496,TAPE_DRIVE_REVERSE_POSITION = -2143289344,TAPE_DRIVE_SPACE_IMMEDIATE = -2139095040,TAPE_DRIVE_WRITE_SETMARKS = -2130706432,TAPE_DRIVE_WRITE_FILEMARKS = -2113929216,TAPE_DRIVE_WRITE_SHORT_FMKS = -2080374784,TAPE_DRIVE_WRITE_LONG_FMKS = -2013265920,TAPE_DRIVE_WRITE_MARK_IMMED = -1879048192,TAPE_DRIVE_FORMAT = -1610612736,TAPE_DRIVE_FORMAT_IMMEDIATE = -1073741824,TAPE_DRIVE_HIGH_FEATURES = -2147483648,TAPE_FIXED_PARTITIONS = 0,TAPE_INITIATOR_PARTITIONS = 2,TAPE_SELECT_PARTITIONS = 1,TAPE_FILEMARKS = 1,TAPE_LONG_FILEMARKS = 3,TAPE_SETMARKS = 0,TAPE_SHORT_FILEMARKS = 2,TAPE_ERASE_LONG = 1,TAPE_ERASE_SHORT = 0,TAPE_LOAD = 0,TAPE_UNLOAD = 1,TAPE_TENSION = 2,TAPE_LOCK = 3,TAPE_UNLOCK = 4,TAPE_FORMAT = 5,};
enum MACRO_TBBF {TBBF_LARGE = 1,};
enum MACRO_TCHT {TCHT_NOWHERE = 1,TCHT_ONITEMICON = 2,TCHT_ONITEMLABEL = 4,TCHT_ONITEM = 6,};
enum MACRO_TCIF {TCIF_TEXT = 1,TCIF_IMAGE = 2,TCIF_RTLREADING = 4,TCIF_PARAM = 8,};
enum MACRO_TIME {TIME_ZONE_ID_UNKNOWN = 0,TIME_ZONE_ID_STANDARD = 1,TIME_ZONE_ID_DAYLIGHT = 2,TIME_ZONE_ID_INVALID = -1,};
enum MACRO_TMPF {TMPF_FIXED_PITCH = 1,TMPF_VECTOR = 2,TMPF_TRUETYPE = 4,TMPF_DEVICE = 8,};
enum MACRO_TTDT {TTDT_AUTOMATIC = 0,TTDT_RESHOW = 1,TTDT_AUTOPOP = 2,TTDT_INITIAL = 3,};
enum MACRO_TVGN {TVGN_ROOT = 0,TVGN_NEXT = 1,TVGN_PREVIOUS = 2,TVGN_PARENT = 3,TVGN_CHILD = 4,TVGN_FIRSTVISIBLE = 5,TVGN_NEXTVISIBLE = 6,TVGN_PREVIOUSVISIBLE = 7,TVGN_DROPHILITE = 8,TVGN_CARET = 9,};
enum MACRO_TVHT {TVHT_NOWHERE = 1,TVHT_ONITEMICON = 2,TVHT_ONITEMLABEL = 4,TVHT_ONITEMINDENT = 8,TVHT_ONITEMBUTTON = 16,TVHT_ONITEMRIGHT = 32,TVHT_ONITEMSTATEICON = 64,TVHT_ABOVE = 256,TVHT_BELOW = 512,TVHT_TORIGHT = 1024,TVHT_TOLEFT = 2048,};
enum MACRO_TVIF {TVIF_TEXT = 1,TVIF_IMAGE = 2,TVIF_PARAM = 4,TVIF_STATE = 8,TVIF_HANDLE = 16,TVIF_SELECTEDIMAGE = 32,TVIF_CHILDREN = 64,};
enum MACRO_TVIS {TVIS_FOCUSED = 1,TVIS_SELECTED = 2,TVIS_CUT = 4,TVIS_DROPHILITED = 8,TVIS_BOLD = 16,TVIS_EXPANDED = 32,TVIS_EXPANDEDONCE = 64,TVIS_OVERLAYMASK = 3840,TVIS_STATEIMAGEMASK = 61440,TVIS_USERMASK = 61440,};
enum MACRO_USER {USER_OBJ = 0x1,};
enum MACRO_VFFF {VFFF_ISSHAREDFILE = 1,};
enum MACRO_VFT2 {VFT2_UNKNOWN = 0,VFT2_DRV_PRINTER = 1,VFT2_DRV_KEYBOARD = 2,VFT2_DRV_LANGUAGE = 3,VFT2_DRV_DISPLAY = 4,VFT2_DRV_MOUSE = 5,VFT2_DRV_NETWORK = 6,VFT2_DRV_SYSTEM = 7,VFT2_DRV_INSTALLABLE = 8,VFT2_DRV_SOUND = 9,VFT2_DRV_COMM = 10,VFT2_DRV_INPUTMETHOD = 11,VFT2_FONT_RASTER = 1,VFT2_FONT_VECTOR = 2,VFT2_FONT_TRUETYPE = 3,};
enum MACRO_VIEW {VIEW_LARGEICONS = 0,VIEW_SMALLICONS = 1,VIEW_LIST = 2,VIEW_DETAILS = 3,VIEW_SORTNAME = 4,VIEW_SORTSIZE = 5,VIEW_SORTDATE = 6,VIEW_SORTTYPE = 7,VIEW_PARENTFOLDER = 8,VIEW_NETCONNECT = 9,VIEW_NETDISCONNECT = 10,VIEW_NEWFOLDER = 11,};
enum MACRO_VIFF {VIFF_FORCEINSTALL = 1,VIFF_DONTDELETEOLD = 2,};
enum MACRO_VPDF {VPDF_DISABLEPWRMGMT = 1,VPDF_FORCEAPM10MODE = 2,VPDF_SKIPINTELSLCHECK = 4,VPDF_DISABLEPWRSTATUSPOLL = 8,};
enum MACRO_WAIT {WAIT_OBJECT_0 = 0,WAIT_ABANDONED_0 = 128,WAIT_TIMEOUT = 258,WAIT_IO_COMPLETION = 192,WAIT_ABANDONED = 128,WAIT_FAILED = -1,};
enum MACRO_WAVE {WAVE_MAPPER = 4294967295,WAVE_FORMAT_QUERY = 1,WAVE_ALLOWSYNC = 2,WAVE_MAPPED = 4,WAVE_FORMAT_DIRECT = 8,WAVE_FORMAT_DIRECT_QUERY = 9,};
enum MACRO_WEOF {WEOF = 0xFFFFFFFF,};
enum MACRO_WHDR {WHDR_DONE = 1,WHDR_PREPARED = 2,WHDR_BEGINLOOP = 4,WHDR_ENDLOOP = 8,WHDR_INQUEUE = 16,};
enum MACRO_WMSZ {WMSZ_LEFT = 1,WMSZ_RIGHT = 2,WMSZ_TOP = 3,WMSZ_TOPLEFT = 4,WMSZ_TOPRIGHT = 5,WMSZ_BOTTOM = 6,WMSZ_BOTTOMLEFT = 7,WMSZ_BOTTOMRIGHT = 8,};
enum MACRO_WNNC {WNNC_NET_MSNET = 0x10000,WNNC_NET_LANMAN = 0x20000,WNNC_NET_NETWARE = 0x30000,WNNC_NET_VINES = 0x40000,WNNC_NET_10NET = 0x50000,WNNC_NET_LOCUS = 0x60000,WNNC_NET_SUN_PC_NFS = 0x70000,WNNC_NET_LANSTEP = 0x80000,WNNC_NET_9TILES = 0x90000,WNNC_NET_LANTASTIC = 0xA0000,WNNC_NET_AS400 = 0xB0000,WNNC_NET_FTP_NFS = 0xC0000,WNNC_NET_PATHWORKS = 0xD0000,WNNC_NET_LIFENET = 0xE0000,WNNC_NET_POWERLAN = 0xF0000,WNNC_NET_BWNFS = 0x100000,WNNC_NET_COGENT = 0x110000,WNNC_NET_FARALLON = 0x120000,WNNC_NET_APPLETALK = 0x130000,WNNC_NET_INTERGRAPH = 0x140000,};
enum MACRO_XTYP {XTYP_ERROR = 32770,XTYP_ADVDATA = 16400,XTYP_ADVREQ = 8226,XTYP_ADVSTART = 4144,XTYP_ADVSTOP = 32832,XTYP_EXECUTE = 16464,XTYP_CONNECT = 4194,XTYP_CONNECT_CONFIRM = 32882,XTYP_XACT_COMPLETE = 32896,XTYP_POKE = 16528,XTYP_REGISTER = 32930,XTYP_REQUEST = 8368,XTYP_DISCONNECT = 32962,XTYP_UNREGISTER = 32978,XTYP_WILDCONNECT = 8418,XTYP_MASK = 240,XTYP_SHIFT = 4,};
enum MACRO__SYS {_SYS_CDEFS_H = 1,};
enum MACRO___FD {__FD_SETSIZE = 1024,};
enum MACRO_chx1 {chx1 = 0x410,};
enum MACRO_chx2 {chx2 = 0x411,};
enum MACRO_chx3 {chx3 = 0x412,};
enum MACRO_chx4 {chx4 = 0x413,};
enum MACRO_chx5 {chx5 = 0x414,};
enum MACRO_chx6 {chx6 = 0x415,};
enum MACRO_chx7 {chx7 = 0x416,};
enum MACRO_chx8 {chx8 = 0x417,};
enum MACRO_chx9 {chx9 = 0x418,};
enum MACRO_cmb1 {cmb1 = 0x470,};
enum MACRO_cmb2 {cmb2 = 0x471,};
enum MACRO_cmb3 {cmb3 = 0x472,};
enum MACRO_cmb4 {cmb4 = 0x473,};
enum MACRO_cmb5 {cmb5 = 0x474,};
enum MACRO_cmb6 {cmb6 = 0x475,};
enum MACRO_cmb7 {cmb7 = 0x476,};
enum MACRO_cmb8 {cmb8 = 0x477,};
enum MACRO_cmb9 {cmb9 = 0x478,};
enum MACRO_edt1 {edt1 = 0x480,};
enum MACRO_edt2 {edt2 = 0x481,};
enum MACRO_edt3 {edt3 = 0x482,};
enum MACRO_edt4 {edt4 = 0x483,};
enum MACRO_edt5 {edt5 = 0x484,};
enum MACRO_edt6 {edt6 = 0x485,};
enum MACRO_edt7 {edt7 = 0x486,};
enum MACRO_edt8 {edt8 = 0x487,};
enum MACRO_edt9 {edt9 = 0x488,};
enum MACRO_frm1 {frm1 = 0x434,};
enum MACRO_frm2 {frm2 = 0x435,};
enum MACRO_frm3 {frm3 = 0x436,};
enum MACRO_frm4 {frm4 = 0x437,};
enum MACRO_grp1 {grp1 = 0x430,};
enum MACRO_grp2 {grp2 = 0x431,};
enum MACRO_grp3 {grp3 = 0x432,};
enum MACRO_grp4 {grp4 = 0x433,};
enum MACRO_ico1 {ico1 = 0x43C,};
enum MACRO_ico2 {ico2 = 0x43D,};
enum MACRO_ico3 {ico3 = 0x43E,};
enum MACRO_ico4 {ico4 = 0x43F,};
enum MACRO_lst1 {lst1 = 0x460,};
enum MACRO_lst2 {lst2 = 0x461,};
enum MACRO_lst3 {lst3 = 0x462,};
enum MACRO_lst4 {lst4 = 0x463,};
enum MACRO_lst5 {lst5 = 0x464,};
enum MACRO_lst6 {lst6 = 0x465,};
enum MACRO_lst7 {lst7 = 0x466,};
enum MACRO_lst8 {lst8 = 0x467,};
enum MACRO_lst9 {lst9 = 0x468,};
enum MACRO_psh1 {psh1 = 0x400,};
enum MACRO_psh2 {psh2 = 0x401,};
enum MACRO_psh3 {psh3 = 0x402,};
enum MACRO_psh4 {psh4 = 0x403,};
enum MACRO_psh5 {psh5 = 0x404,};
enum MACRO_psh6 {psh6 = 0x405,};
enum MACRO_psh7 {psh7 = 0x406,};
enum MACRO_psh8 {psh8 = 0x407,};
enum MACRO_psh9 {psh9 = 0x408,};
enum MACRO_rad1 {rad1 = 0x420,};
enum MACRO_rad2 {rad2 = 0x421,};
enum MACRO_rad3 {rad3 = 0x422,};
enum MACRO_rad4 {rad4 = 0x423,};
enum MACRO_rad5 {rad5 = 0x424,};
enum MACRO_rad6 {rad6 = 0x425,};
enum MACRO_rad7 {rad7 = 0x426,};
enum MACRO_rad8 {rad8 = 0x427,};
enum MACRO_rad9 {rad9 = 0x428,};
enum MACRO_rct1 {rct1 = 0x438,};
enum MACRO_rct2 {rct2 = 0x439,};
enum MACRO_rct3 {rct3 = 0x43A,};
enum MACRO_rct4 {rct4 = 0x43B,};
enum MACRO_scr1 {scr1 = 0x490,};
enum MACRO_scr2 {scr2 = 0x491,};
enum MACRO_scr3 {scr3 = 0x492,};
enum MACRO_scr4 {scr4 = 0x493,};
enum MACRO_scr5 {scr5 = 0x494,};
enum MACRO_scr6 {scr6 = 0x495,};
enum MACRO_scr7 {scr7 = 0x496,};
enum MACRO_scr8 {scr8 = 0x497,};
enum MACRO_stc1 {stc1 = 0x440,};
enum MACRO_stc2 {stc2 = 0x441,};
enum MACRO_stc3 {stc3 = 0x442,};
enum MACRO_stc4 {stc4 = 0x443,};
enum MACRO_stc5 {stc5 = 0x444,};
enum MACRO_stc6 {stc6 = 0x445,};
enum MACRO_stc7 {stc7 = 0x446,};
enum MACRO_stc8 {stc8 = 0x447,};
enum MACRO_stc9 {stc9 = 0x448,};
typedef struct tagMETAHEADER METAHEADER;
typedef struct tagMETARECORD METARECORD;
typedef struct tagMETHODDATA METHODDATA;
typedef struct tagMINMAXINFO MINMAXINFO;
typedef struct tagMIXERCAPSA MIXERCAPSA;
typedef struct tagMIXERCAPSW MIXERCAPSW;
typedef struct tagMIXERLINEA MIXERLINEA;
typedef struct tagMIXERLINEW MIXERLINEW;
typedef struct _MODULEINFO MODULEINFO;
typedef struct _MSG_INFO_0 MSG_INFO_0;
typedef struct _MSG_INFO_1 MSG_INFO_1;
typedef struct tagNMDAYSTATE NMDAYSTATE;
typedef struct _numberfmtA NUMBERFMTA;
typedef struct _numberfmtW NUMBERFMTW;
typedef struct tagOLEUIBUSYA OLEUIBUSYA;
typedef struct tagOLEUIBUSYW OLEUIBUSYW;
typedef struct _OVERLAPPED OVERLAPPED;
typedef struct _AE_ACCLIM *PAE_ACCLIM;
typedef struct _AE_ACLMOD *PAE_ACLMOD;
typedef struct _AE_UASMOD *PAE_UASMOD;
typedef struct _paraformat PARAFORMAT;
typedef struct _BIN_COUNT *PBIN_COUNT;
typedef struct _BIN_RANGE *PBIN_RANGE;
typedef struct _CHAR_INFO *PCHAR_INFO;
typedef struct tagEMRBITBLT *PEMRBITBLT;
typedef struct tagEMRLINETO *PEMRLINETO;
typedef struct tagEMRPLGBLT *PEMRPLGBLT;
typedef struct tagABORTPATH *PEMRSAVEDC;
typedef struct _ERROR_LOG *PERROR_LOG;
typedef struct tagEXTLOGPEN *PEXTLOGPEN;
typedef struct joyinfoex_tag *PJOYINFOEX;
typedef struct _LANA_ENUM *PLANA_ENUM;
typedef struct _LDT_ENTRY *PLDT_ENTRY;
typedef struct _POINTFLOAT POINTFLOAT;
typedef struct _STD_ALERT *PSTD_ALERT;
typedef struct tagSTYLEBUFA *PSTYLEBUFA;
typedef struct tagSTYLEBUFW *PSTYLEBUFW;
typedef struct tagTOOLINFOA *PTOOLINFOA;
typedef struct tagTOOLINFOW *PTOOLINFOW;
typedef struct _WINDOWPOS *PWINDOWPOS;
typedef struct _WNDCLASSA *PWNDCLASSA;
typedef struct _WNDCLASSW *PWNDCLASSW;
typedef unsigned char *RPC_BUFPTR;
typedef unsigned int RPC_LENGTH;
typedef struct _RPC_POLICY RPC_POLICY;
typedef int RPC_STATUS;
typedef struct tagSCROLLINFO SCROLLINFO;
typedef struct _SMALL_RECT SMALL_RECT;
typedef struct _tagSTACKFRAME STACKFRAME;
typedef struct tagSTICKYKEYS STICKYKEYS;
typedef struct _SYSTEMTIME SYSTEMTIME;
typedef struct _TAPE_ERASE TAPE_ERASE;
typedef struct _TC_KEYDOWN TC_KEYDOWN;
typedef struct _textrange TEXTRANGEA;
typedef struct _textrangew TEXTRANGEW;
typedef struct tagTOGGLEKEYS TOGGLEKEYS;
typedef struct _TOKEN_USER TOKEN_USER;
typedef struct _TV_KEYDOWN TV_KEYDOWN;
typedef struct _USE_INFO_0 USE_INFO_0;
typedef struct _USE_INFO_1 USE_INFO_1;
typedef struct _USE_INFO_2 USE_INFO_2;
typedef struct waveformat_tag WAVEFORMAT;
typedef struct _WSAVersion WSAVERSION;
enum _BIN_TYPES {RequestSize = 0x0,RequestLocation = 0x1,};
typedef int __blkcnt_t;
typedef int __intptr_t;
typedef struct _44840292B0FD4432816E14C2BB6B9957 __sigset_t;
typedef unsigned long long __u_quad_t;
typedef unsigned short __uint16_t;
typedef unsigned int __uint32_t;
typedef unsigned long long __uint64_t;
typedef int register_t;
enum tagDATADIR {DATADIR_GET = 0x1,DATADIR_SET = 0x2,};
enum tagEXTCONN {EXTCONN_STRONG = 0x1,EXTCONN_WEAK = 0x2,EXTCONN_CALLABLE = 0x4,};
struct tagPBRANGE {int iLow;int iHigh;};
enum tagREGKIND {REGKIND_DEFAULT = 0x0,REGKIND_REGISTER = 0x1,REGKIND_NONE = 0x2,};
enum tagSF_TYPE {SF_ERROR = 0xA,SF_I1 = 0x10,SF_I2 = 0x2,SF_I4 = 0x3,SF_I8 = 0x14,SF_BSTR = 0x8,SF_UNKNOWN = 0xD,SF_DISPATCH = 0x9,SF_VARIANT = 0xC,};
enum tagSHCONTF {SHCONTF_FOLDERS = 0x20,SHCONTF_NONFOLDERS = 0x40,SHCONTF_INCLUDEHIDDEN = 0x80,};
enum tagSTGMOVE {STGMOVE_MOVE = 0x0,STGMOVE_COPY = 0x1,STGMOVE_SHALLOWCOPY = 0x2,};
enum tagSYSKIND {SYS_WIN16 = 0x0,SYS_WIN32 = 0x1,SYS_MAC = 0x2,};
enum tagVARKIND {VAR_PERINSTANCE = 0x0,VAR_STATIC = 0x1,VAR_CONST = 0x2,VAR_DISPATCH = 0x3,};
typedef struct _AE_ACCLIM AE_ACCLIM;
typedef struct _AE_ACLMOD AE_ACLMOD;
typedef struct _AE_UASMOD AE_UASMOD;
typedef struct tagARRAYDESC ARRAYDESC;
typedef struct tagBIND_OPTS BIND_OPTS;
typedef struct _BIN_COUNT BIN_COUNT;
typedef struct _BIN_RANGE BIN_RANGE;
typedef struct _charrange CHARRANGE;
typedef struct _CHAR_INFO CHAR_INFO;
typedef struct _compcolor COMPCOLOR;
typedef struct tagCWPSTRUCT CWPSTRUCT;
typedef struct _61B889227CECAFED4E8A477D21B34BC9 DDEADVISE;
typedef struct _DROPFILES DROPFILES;
typedef unsigned long long DWORDLONG;
typedef struct tagEMRBITBLT EMRBITBLT;
typedef struct tagEMRFORMAT EMRFORMAT;
typedef struct tagEMRLINETO EMRLINETO;
typedef struct tagEMRPLGBLT EMRPLGBLT;
typedef struct tagABORTPATH EMRSAVEDC;
typedef struct _ERROR_LOG ERROR_LOG;
typedef struct tagEXCEPINFO EXCEPINFO;
typedef void (*EXPR_EVAL)(struct _MIDL_STUB_MESSAGE *);
typedef struct tagEXTLOGPEN EXTLOGPEN;
typedef struct _findtextA FINDTEXTA;
typedef struct _findtextW FINDTEXTW;
typedef struct tagFORMATETC FORMATETC;
struct HBITMAP__ {int i;};
typedef struct HCONVLIST__ *HCONVLIST;
typedef struct _HD_LAYOUT HD_LAYOUT;
typedef struct HINSTANCE__ *HINSTANCE;
typedef struct HMETAFILE__ *HMETAFILE;
struct HMIDIIN__ {int i;};
typedef struct HMIDISTRM__ *HMIDISTRM;
typedef struct HMIXEROBJ__ *HMIXEROBJ;
typedef struct HTERMINAL__ *HTERMINAL;
typedef struct HTREEITEM__ *HTREEITEM;
struct HWAVEIN__ {int i;};
struct HWINSTA__ {int i;};
struct ICopyHook {struct ICopyHookVtbl *lpVtbl;};
struct IDispatch {struct IDispatchVtbl *lpVtbl;};
struct IErrorLog {struct IErrorLogVtbl *lpVtbl;};
struct IFontDisp {struct IFontDispVtbl *lpVtbl;};
typedef struct _IMAGEINFO IMAGEINFO;
struct ITypeComp {struct ITypeCompVtbl *lpVtbl;};
struct ITypeInfo {struct ITypeInfoVtbl *lpVtbl;};
typedef struct joyinfoex_tag JOYINFOEX;
typedef struct _LANA_ENUM LANA_ENUM;
typedef struct _LDT_ENTRY LDT_ENTRY;
typedef struct _tagADDRESS *LPADDRESS;
typedef struct _AT_ENUM *LPAT_ENUM;
typedef struct _AT_INFO *LPAT_INFO;
typedef struct IBindCtx *LPBINDCTX;
typedef union tagBINDPTR *LPBINDPTR;
typedef struct tagCADWORD *LPCADWORD;
typedef struct tagCCINFOA *LPCCINFOA;
typedef struct tagCCINFOW *LPCCINFOW;
typedef struct _COMSTAT *LPCOMSTAT;
typedef struct tagCPLINFO *LPCPLINFO;
typedef struct _89E88C10B84B492504101A13E5F7DD9F *LPDOCINFO;
typedef struct hostent *LPHOSTENT;
typedef struct tagIDLDESC *LPIDLDESC;
typedef struct in_addr *LPIN_ADDR;
typedef struct joyinfo_tag *LPJOYINFO;
typedef unsigned int *LPLHANDLE;
typedef struct tagLICINFO *LPLICINFO;
typedef struct IMarshal *LPMARSHAL;
typedef struct midihdr_tag *LPMIDIHDR;
typedef struct IMoniker *LPMONIKER;
typedef struct tagOLEVERB *LPOLEVERB;
typedef struct IPersist *LPPERSIST;
typedef struct IPicture *LPPICTURE;
typedef struct tagPOINTFX *LPPOINTFX;
typedef struct _RGNDATA *LPRGNDATA;
typedef struct IROTData *LPROTDATA;
typedef struct servent *LPSERVENT;
typedef struct IStorage *LPSTORAGE;
typedef struct timeval *LPTIMEVAL;
typedef struct ITypeLib *LPTYPELIB;
typedef struct _UDACCEL *LPUDACCEL;
typedef IUnknown *LPUNKNOWN;
typedef struct tagVARDESC *LPVARDESC;
typedef struct tagVARIANT *LPVARIANT;
typedef struct wavehdr_tag *LPWAVEHDR;
typedef int *LPWINBOOL;
enum MACRO_ABE {ABE_LEFT = 0,ABE_TOP = 1,ABE_RIGHT = 2,ABE_BOTTOM = 3,};
enum MACRO_ABM {ABM_NEW = 0,ABM_REMOVE = 1,ABM_QUERYPOS = 2,ABM_SETPOS = 3,ABM_GETSTATE = 4,ABM_GETTASKBARPOS = 5,ABM_ACTIVATE = 6,ABM_GETAUTOHIDEBAR = 7,ABM_SETAUTOHIDEBAR = 8,ABM_WINDOWPOSCHANGED = 9,};
enum MACRO_ABN {ABN_STATECHANGE = 0,ABN_POSCHANGED = 1,ABN_FULLSCREENAPP = 2,ABN_WINDOWARRANGE = 3,};
enum MACRO_ACE {OBJECT_INHERIT_ACE = 1,CONTAINER_INHERIT_ACE = 2,NO_PROPAGATE_INHERIT_ACE = 4,INHERIT_ONLY_ACE = 8,};
enum MACRO_ACL {ACL_REVISION = 2,ACL_REVISION_DS = 4,ACL_REVISION1 = 1,ACL_REVISION2 = 2,ACL_REVISION3 = 3,ACL_REVISION4 = 4,};
enum MACRO_ACM {ACM_OPENA = 1124,ACM_PLAY = 1125,ACM_STOP = 1126,ACM_OPENW = 1127,};
enum MACRO_ACN {ACN_START = 1,ACN_STOP = 2,};
enum MACRO_ALG {ALG_CLASS_ANY = 0,ALG_CLASS_SIGNATURE = 8192,ALG_CLASS_MSG_ENCRYPT = 16384,ALG_CLASS_DATA_ENCRYPT = 24576,ALG_CLASS_HASH = 32768,ALG_CLASS_KEY_EXCHANGE = 40960,ALG_TYPE_ANY = 0,ALG_TYPE_DSS = 512,ALG_TYPE_RSA = 1024,ALG_TYPE_BLOCK = 1536,ALG_TYPE_STREAM = 2048,ALG_SID_ANY = 0,ALG_SID_RSA_ANY = 0,ALG_SID_RSA_PKCS = 1,ALG_SID_RSA_MSATWORK = 2,ALG_SID_RSA_ENTRUST = 3,ALG_SID_RSA_PGP = 4,ALG_SID_DSS_ANY = 0,ALG_SID_DSS_PKCS = 1,ALG_SID_DSS_DMS = 2,ALG_SID_DES = 1,ALG_SID_RC2 = 2,ALG_SID_RC4 = 1,ALG_SID_SEAL = 2,ALG_SID_MD2 = 1,ALG_SID_MD4 = 2,ALG_SID_MD5 = 3,ALG_SID_SHA = 4,ALG_SID_MAC = 5,ALG_SID_EXAMPLE = 80,};
enum MACRO_API {API_VERSION_NUMBER = 7,};
enum MACRO_ARW {ARW_BOTTOMLEFT = 0,ARW_BOTTOMRIGHT = 1,ARW_HIDE = 8,ARW_TOPLEFT = 2,ARW_TOPRIGHT = 3,ARW_DOWN = 4,ARW_LEFT = 0,ARW_RIGHT = 0,ARW_UP = 4,};
enum MACRO_ATF {ATF_TIMEOUTON = 1,ATF_ONOFFFEEDBACK = 2,};
enum MACRO_AUX {AUX_MAPPER = 4294967295,};
enum MACRO_BDR {BDR_RAISEDOUTER = 1,BDR_SUNKENOUTER = 2,BDR_RAISEDINNER = 4,BDR_SUNKENINNER = 8,BDR_OUTER = 3,BDR_INNER = 12,BDR_RAISED = 5,BDR_SUNKEN = 10,};
enum MACRO_BIF {BIF_RETURNONLYFSDIRS = 1,BIF_DONTGOBELOWDOMAIN = 2,BIF_STATUSTEXT = 4,BIF_RETURNFSANCESTORS = 8,BIF_BROWSEFORCOMPUTER = 4096,BIF_BROWSEFORPRINTER = 8192,};
enum MACRO_BSF {BSF_IGNORECURRENTTASK = 2,BSF_QUERY = 1,BSF_FLUSHDISK = 4,BSF_NOHANG = 8,BSF_POSTMESSAGE = 16,BSF_FORCEIFHUNG = 32,BSF_NOTIMEOUTIFNOTHUNG = 64,};
enum MACRO_BSM {BSM_ALLCOMPONENTS = 0,BSM_APPLICATIONS = 8,BSM_ALLDESKTOPS = 16,BSM_INSTALLABLEDRIVERS = 4,BSM_NETDRIVER = 2,BSM_VXDS = 1,};
enum MACRO_BST {BST_CHECKED = 1,BST_INDETERMINATE = 2,BST_UNCHECKED = 0,BST_FOCUS = 8,BST_PUSHED = 4,};
enum MACRO_CAL {CAL_ICALINTVALUE = 1,CAL_SCALNAME = 2,CAL_IYEAROFFSETRANGE = 3,CAL_SERASTRING = 4,CAL_SSHORTDATE = 5,CAL_SLONGDATE = 6,CAL_SDAYNAME1 = 7,CAL_SDAYNAME2 = 8,CAL_SDAYNAME3 = 9,CAL_SDAYNAME4 = 10,CAL_SDAYNAME5 = 11,CAL_SDAYNAME6 = 12,CAL_SDAYNAME7 = 13,CAL_SABBREVDAYNAME1 = 14,CAL_SABBREVDAYNAME2 = 15,CAL_SABBREVDAYNAME3 = 16,CAL_SABBREVDAYNAME4 = 17,CAL_SABBREVDAYNAME5 = 18,CAL_SABBREVDAYNAME6 = 19,CAL_SABBREVDAYNAME7 = 20,CAL_SMONTHNAME1 = 21,CAL_SMONTHNAME2 = 22,CAL_SMONTHNAME3 = 23,CAL_SMONTHNAME4 = 24,CAL_SMONTHNAME5 = 25,CAL_SMONTHNAME6 = 26,CAL_SMONTHNAME7 = 27,CAL_SMONTHNAME8 = 28,CAL_SMONTHNAME9 = 29,CAL_SMONTHNAME10 = 30,CAL_SMONTHNAME11 = 31,CAL_SMONTHNAME12 = 32,CAL_SMONTHNAME13 = 33,CAL_SABBREVMONTHNAME1 = 34,CAL_SABBREVMONTHNAME2 = 35,CAL_SABBREVMONTHNAME3 = 36,CAL_SABBREVMONTHNAME4 = 37,CAL_SABBREVMONTHNAME5 = 38,CAL_SABBREVMONTHNAME6 = 39,CAL_SABBREVMONTHNAME7 = 40,CAL_SABBREVMONTHNAME8 = 41,CAL_SABBREVMONTHNAME9 = 42,CAL_SABBREVMONTHNAME10 = 43,CAL_SABBREVMONTHNAME11 = 44,CAL_SABBREVMONTHNAME12 = 45,CAL_SABBREVMONTHNAME13 = 46,CAL_GREGORIAN = 1,CAL_GREGORIAN_US = 2,CAL_JAPAN = 3,CAL_TAIWAN = 4,CAL_KOREA = 5,};
enum MACRO_CBA {CBA_DEFERRED_SYMBOL_LOAD_START = 1,CBA_DEFERRED_SYMBOL_LOAD_COMPLETE = 2,CBA_DEFERRED_SYMBOL_LOAD_FAILURE = 3,CBA_SYMBOLS_UNLOADED = 4,CBA_DUPLICATE_SYMBOL = 5,};
enum MACRO_CBF {CBF_FAIL_SELFCONNECTIONS = 0x1000,CBF_FAIL_CONNECTIONS = 0x2000,CBF_FAIL_ADVISES = 0x4000,CBF_FAIL_EXECUTES = 0x8000,CBF_FAIL_POKES = 0x10000,CBF_FAIL_REQUESTS = 0x20000,CBF_FAIL_ALLSVRXACTIONS = 0x3F000,CBF_SKIP_CONNECT_CONFIRMS = 0x40000,CBF_SKIP_REGISTRATIONS = 0x80000,CBF_SKIP_UNREGISTRATIONS = 0x100000,CBF_SKIP_DISCONNECTS = 0x200000,CBF_SKIP_ALLNOTIFICATIONS = 0x3C0000,};
enum MACRO_CBM {CBM_INIT = 4,};
enum MACRO_CBN {CBN_CLOSEUP = 8,CBN_DBLCLK = 2,CBN_DROPDOWN = 7,CBN_EDITCHANGE = 5,CBN_EDITUPDATE = 6,CBN_ERRSPACE = -1,CBN_KILLFOCUS = 4,CBN_SELCHANGE = 1,CBN_SELENDCANCEL = 10,CBN_SELENDOK = 9,CBN_SETFOCUS = 3,};
enum MACRO_CBR {CBR_110 = 110,CBR_300 = 300,CBR_600 = 600,CBR_1200 = 1200,CBR_2400 = 2400,CBR_4800 = 4800,CBR_9600 = 9600,CBR_14400 = 14400,CBR_19200 = 19200,CBR_38400 = 38400,CBR_56000 = 56000,CBR_57600 = 57600,CBR_115200 = 115200,CBR_128000 = 128000,CBR_256000 = 256000,};
enum MACRO_CBS {CBS_AUTOHSCROLL = 64,CBS_DISABLENOSCROLL = 2048,CBS_DROPDOWN = 2,CBS_DROPDOWNLIST = 3,CBS_HASSTRINGS = 512,CBS_LOWERCASE = 16384,CBS_NOINTEGRALHEIGHT = 1024,CBS_OEMCONVERT = 128,CBS_OWNERDRAWFIXED = 16,CBS_OWNERDRAWVARIABLE = 32,CBS_SIMPLE = 1,CBS_SORT = 256,CBS_UPPERCASE = 8192,};
enum MACRO_CCF {CCF_NOTEXT = 1,};
enum MACRO_CCM {CCM_SETBKCOLOR = 8193,CCM_SETCOLORSCHEME = 8194,CCM_GETCOLORSCHEME = 8195,CCM_GETDROPTARGET = 8196,CCM_SETUNICODEFORMAT = 8197,CCM_GETUNICODEFORMAT = 8198,};
enum MACRO_CCS {CCS_TOP = 1,CCS_NOMOVEY = 2,CCS_BOTTOM = 3,CCS_NORESIZE = 4,CCS_NOPARENTALIGN = 8,CCS_ADJUSTABLE = 32,CCS_NODIVIDER = 64,};
enum MACRO_CDM {CDM_FIRST = 1124,CDM_LAST = 1224,CDM_GETSPEC = 1124,CDM_GETFILEPATH = 1125,CDM_GETFOLDERPATH = 1126,CDM_GETFOLDERIDLIST = 1127,CDM_SETCONTROLTEXT = 1128,CDM_HIDECONTROL = 1129,CDM_SETDEFEXT = 1130,};
enum MACRO_CDN {CDN_FIRST = -601,CDN_LAST = -699,CDN_INITDONE = -601,CDN_SELCHANGE = -602,CDN_FOLDERCHANGE = -603,CDN_SHAREVIOLATION = -604,CDN_HELP = -605,CDN_FILEOK = -606,CDN_TYPECHANGE = -607,};
enum MACRO_CDS {CDS_UPDATEREGISTRY = 1,CDS_TEST = 2,CDS_FULLSCREEN = 4,CDS_GLOBAL = 8,CDS_SET_PRIMARY = 16,CDS_RESET = 1073741824,CDS_SETRECT = 536870912,CDS_NORESET = 268435456,};
enum MACRO_CFE {CFE_BOLD = 1,CFE_ITALIC = 2,CFE_UNDERLINE = 4,CFE_STRIKEOUT = 8,CFE_PROTECTED = 16,CFE_AUTOCOLOR = 1073741824,};
enum MACRO_CFM {CFM_BOLD = 1,CFM_ITALIC = 2,CFM_UNDERLINE = 4,CFM_STRIKEOUT = 8,CFM_PROTECTED = 16,CFM_SIZE = -2147483648,CFM_COLOR = 1073741824,CFM_FACE = 536870912,CFM_OFFSET = 268435456,CFM_CHARSET = 134217728,};
enum MACRO_CFS {CFS_DEFAULT = 0,CFS_RECT = 1,CFS_POINT = 2,CFS_SCREEN = 4,CFS_FORCE_POSITION = 32,CFS_CANDIDATEPOS = 64,CFS_EXCLUDE = 128,};
enum MACRO_CIF {CIF_SHOWHELP = 1,CIF_SELECTCURRENT = 2,CIF_SELECTDEFAULT = 4,CIF_SELECTFROMFILE = 8,CIF_USEICONEXE = 16,};
enum MACRO_CLR {CLR_NONE = 0xFFFFFFFF,CLR_INVALID = 0xFFFFFFFF,CLR_DEFAULT = 0xFF000000,};
enum MACRO_CMB {CMB_MASKED = 2,};
enum MACRO_CMF {CMF_NORMAL = 0,CMF_DEFAULTONLY = 1,CMF_VERBSONLY = 2,CMF_EXPLORE = 4,CMF_RESERVED = -65536,};
enum MACRO_CPL {CPL_DYNAMIC_RES = 0,CPL_INIT = 1,CPL_GETCOUNT = 2,CPL_INQUIRE = 3,CPL_SELECT = 4,CPL_DBLCLK = 5,CPL_STOP = 6,CPL_EXIT = 7,CPL_NEWINQUIRE = 8,CPL_STARTWPARMS = 9,CPL_SETUP = 200,};
enum MACRO_CPS {CPS_COMPLETE = 1,CPS_CONVERT = 2,CPS_REVERT = 3,CPS_CANCEL = 4,};
enum MACRO_CSF {CSF_SHOWHELP = 1,CSF_VALIDSOURCE = 2,CSF_ONLYGETSOURCE = 4,CSF_EXPLORER = 8,};
enum MACRO_CTL {CTL_E_ILLEGALFUNCTIONCALL = -2146828283,CTL_E_OVERFLOW = -2146828282,CTL_E_OUTOFMEMORY = -2146828281,CTL_E_DIVISIONBYZERO = -2146828277,CTL_E_OUTOFSTRINGSPACE = -2146828274,CTL_E_OUTOFSTACKSPACE = -2146828260,CTL_E_BADFILENAMEORNUMBER = -2146828236,CTL_E_FILENOTFOUND = -2146828235,CTL_E_BADFILEMODE = -2146828234,CTL_E_FILEALREADYOPEN = -2146828233,CTL_E_DEVICEIOERROR = -2146828231,CTL_E_FILEALREADYEXISTS = -2146828230,CTL_E_BADRECORDLENGTH = -2146828229,CTL_E_DISKFULL = -2146828227,CTL_E_BADRECORDNUMBER = -2146828225,CTL_E_BADFILENAME = -2146828224,CTL_E_TOOMANYFILES = -2146828221,CTL_E_DEVICEUNAVAILABLE = -2146828220,CTL_E_PERMISSIONDENIED = -2146828218,CTL_E_DISKNOTREADY = -2146828217,CTL_E_PATHFILEACCESSERROR = -2146828213,CTL_E_PATHNOTFOUND = -2146828212,CTL_E_INVALIDPATTERNSTRING = -2146828195,CTL_E_INVALIDUSEOFNULL = -2146828194,CTL_E_INVALIDFILEFORMAT = -2146827967,CTL_E_INVALIDPROPERTYVALUE = -2146827908,CTL_E_INVALIDPROPERTYARRAYINDEX = -2146827907,CTL_E_SETNOTSUPPORTEDATRUNTIME = -2146827906,CTL_E_SETNOTSUPPORTED = -2146827905,CTL_E_NEEDPROPERTYARRAYINDEX = -2146827903,CTL_E_SETNOTPERMITTED = -2146827901,CTL_E_GETNOTSUPPORTEDATRUNTIME = -2146827895,CTL_E_GETNOTSUPPORTED = -2146827894,CTL_E_PROPERTYNOTFOUND = -2146827866,CTL_E_INVALIDCLIPBOARDFORMAT = -2146827828,CTL_E_INVALIDPICTURE = -2146827807,CTL_E_PRINTERERROR = -2146827806,CTL_E_CANTSAVEFILETOTEMP = -2146827553,CTL_E_SEARCHTEXTNOTFOUND = -2146827544,CTL_E_REPLACEMENTSTOOLONG = -2146827542,CTL_E_CUSTOM_FIRST = -2146827688,};
enum MACRO_CTM {RESTORE_CTM = 4100,SAVE_CTM = 4101,};
enum MACRO_CUR {CUR_BLOB_VERSION = 2,};
enum MACRO_CWP {CWP_ALL = 0,CWP_SKIPINVISIBLE = 1,CWP_SKIPDISABLED = 2,CWP_SKIPTRANSPARENT = 4,};
enum MACRO_DBG {DBG_CONTINUE = 0x10002,DBG_TERMINATE_THREAD = 0x40010003,DBG_TERMINATE_PROCESS = 0x40010004,DBG_CONTROL_C = 0x40010005,DBG_CONTROL_BREAK = 0x40010008,DBG_EXCEPTION_NOT_HANDLED = 0x80010001,};
enum MACRO_DBT {DBT_NO_DISK_SPACE = 0x47,DBT_CONFIGMGPRIVATE = 0x7FFF,DBT_DEVICEARRIVAL = 0x8000,DBT_DEVICEQUERYREMOVE = 0x8001,DBT_DEVICEQUERYREMOVEFAILED = 0x8002,DBT_DEVICEREMOVEPENDING = 0x8003,DBT_DEVICEREMOVECOMPLETE = 0x8004,DBT_DEVICETYPESPECIFIC = 0x8005,DBT_DEVTYP_OEM = 0x0,DBT_DEVTYP_DEVNODE = 0x1,DBT_DEVTYP_VOLUME = 0x2,DBT_DEVTYP_PORT = 0x3,DBT_DEVTYP_NET = 0x4,DBT_APPYBEGIN = 0x0,DBT_APPYEND = 0x1,DBT_DEVNODES_CHANGED = 0x7,DBT_QUERYCHANGECONFIG = 0x17,DBT_CONFIGCHANGED = 0x18,DBT_CONFIGCHANGECANCELED = 0x19,DBT_MONITORCHANGE = 0x1B,DBT_SHELLLOGGEDON = 0x20,DBT_CONFIGMGAPI32 = 0x22,DBT_VXDINITCOMPLETE = 0x23,DBT_VOLLOCKQUERYLOCK = 0x8041,DBT_VOLLOCKLOCKTAKEN = 0x8042,DBT_VOLLOCKLOCKFAILED = 0x8043,DBT_VOLLOCKQUERYUNLOCK = 0x8044,DBT_VOLLOCKLOCKRELEASED = 0x8045,DBT_VOLLOCKUNLOCKFAILED = 0x8046,DBT_USERDEFINED = 0xFFFF,};
enum MACRO_DCB {DCB_DISABLE = 8,DCB_ENABLE = 4,DCB_RESET = 1,DCB_SET = 3,DCB_ACCUMULATE = 2,DCB_DIRTY = 2,};
enum MACRO_DCE {DCE_C_ERROR_STRING_LEN = 256,};
enum MACRO_DCX {DCX_WINDOW = 1,DCX_CACHE = 2,DCX_PARENTCLIP = 32,DCX_CLIPSIBLINGS = 16,DCX_CLIPCHILDREN = 8,DCX_NORESETATTRS = 4,DCX_LOCKWINDOWUPDATE = 1024,DCX_EXCLUDERGN = 64,DCX_INTERSECTRGN = 128,DCX_VALIDATE = 2097152,};
enum MACRO_DDD {DDD_RAW_TARGET_PATH = 1,DDD_REMOVE_DEFINITION = 2,DDD_EXACT_MATCH_ON_REMOVE = 4,};
enum MACRO_DDE {DDE_FACK = 0x8000,DDE_FBUSY = 0x4000,DDE_FDEFERUPD = 0x4000,DDE_FACKREQ = 0x8000,DDE_FRELEASE = 0x2000,DDE_FREQUESTED = 0x1000,DDE_FAPPSTATUS = 0xFF,DDE_FNOTPROCESSED = 0x0,DDE_FACKRESERVED = 0xFFFF3F00,DDE_FADVRESERVED = 0xFFFF3FFF,DDE_FDATRESERVED = 0xFFFF4FFF,DDE_FPOKRESERVED = 0xFFFFDFFF,};
enum MACRO_DDL {DDL_READWRITE = 0,DDL_READONLY = 1,DDL_HIDDEN = 2,DDL_SYSTEM = 4,DDL_DIRECTORY = 16,DDL_ARCHIVE = 32,DDL_POSTMSGS = 8192,DDL_DRIVES = 16384,DDL_EXCLUSIVE = 32768,};
enum MACRO_DEF {DEF_USER_OBJ = 4097,DEF_USER = 4098,DEF_GROUP_OBJ = 4100,DEF_GROUP = 4104,DEF_CLASS_OBJ = 4112,DEF_OTHER_OBJ = 4128,};
enum MACRO_DFC {DFC_CAPTION = 1,DFC_MENU = 2,DFC_SCROLL = 3,DFC_BUTTON = 4,};
enum MACRO_DIB {DIB_PAL_COLORS = 1,DIB_RGB_COLORS = 0,};
enum MACRO_DLG {DLG_SCRNSAVECONFIGURE = 2003,};
enum MACRO_DLL {DLL_PROCESS_DETACH = 0,DLL_PROCESS_ATTACH = 1,DLL_THREAD_ATTACH = 2,DLL_THREAD_DETACH = 3,};
enum MACRO_DNS {DNS_REGISTER = 1,DNS_UNREGISTER = 2,DNS_FILTERON = 4,DNS_FILTEROFF = 8,};
enum MACRO_DOF {DOF_EXECUTABLE = 0x8001,DOF_DOCUMENT = 0x8002,DOF_DIRECTORY = 0x8003,DOF_MULTIPLE = 0x8004,DOF_PROGMAN = 0x1,DOF_SHELLDATA = 0x2,};
enum MACRO_DRV {DRV_LOAD = 1,DRV_ENABLE = 2,DRV_OPEN = 3,DRV_CLOSE = 4,DRV_DISABLE = 5,DRV_FREE = 6,DRV_CONFIGURE = 7,DRV_QUERYCONFIGURE = 8,DRV_INSTALL = 9,DRV_REMOVE = 10,DRV_EXITSESSION = 11,DRV_POWER = 15,DRV_RESERVED = 2048,DRV_USER = 16384,};
enum MACRO_DSS {DSS_NORMAL = 0,DSS_UNION = 16,DSS_DISABLED = 32,DSS_MONO = 128,DSS_RIGHT = 32768,};
enum MACRO_DST {DST_COMPLEX = 0,DST_TEXT = 1,DST_PREFIXTEXT = 2,DST_ICON = 3,DST_BITMAP = 4,};
enum MACRO_DTM {DTM_GETSYSTEMTIME = 0x1001,DTM_SETSYSTEMTIME = 0x1002,DTM_GETRANGE = 0x1003,DTM_SETRANGE = 0x1004,DTM_SETFORMATA = 0x1005,DTM_SETFORMATW = 0x1050,DTM_SETMCCOLOR = 0x1006,DTM_GETMCCOLOR = 0x1007,DTM_GETMONTHCAL = 0x1008,DTM_SETMCFONT = 0x1009,DTM_GETMCFONT = 0x100A,};
enum MACRO_DTN {DTN_USERSTRINGA = -758,DTN_USERSTRINGW = -745,DTN_WMKEYDOWNA = -757,DTN_WMKEYDOWNW = -744,DTN_FORMATA = -756,DTN_FORMATW = -743,DTN_FORMATQUERYA = -755,DTN_FORMATQUERYW = -742,DTN_DROPDOWN = -754,DTN_CLOSEUP = -753,DTN_DATETIMECHANGE = -759,};
enum MACRO_DTR {DTR_CONTROL_DISABLE = 0,DTR_CONTROL_ENABLE = 1,DTR_CONTROL_HANDSHAKE = 2,};
enum MACRO_DTS {DTS_UPDOWN = 1,DTS_SHOWNONE = 2,DTS_SHORTDATEFORMAT = 0,DTS_LONGDATEFORMAT = 4,DTS_TIMEFORMAT = 9,DTS_APPCANPARSE = 16,DTS_RIGHTALIGN = 32,};
enum MACRO_DWL {DWL_DLGPROC = 4,DWL_MSGRESULT = 0,DWL_USER = 8,};
enum MACRO_ECO {ECO_AUTOWORDSELECTION = 1,ECO_AUTOVSCROLL = 64,ECO_AUTOHSCROLL = 128,ECO_NOHIDESEL = 256,ECO_READONLY = 2048,ECO_WANTRETURN = 4096,ECO_SAVESEL = 32768,ECO_SELECTIONBAR = 16777216,ECO_VERTICAL = 4194304,};
enum MACRO_ELF {ELF_VENDOR_SIZE = 4,ELF_VERSION = 0,ELF_CULTURE_LATIN = 0,};
enum MACRO_EMR {EMR_HEADER = 1,EMR_POLYBEZIER = 2,EMR_POLYGON = 3,EMR_POLYLINE = 4,EMR_POLYBEZIERTO = 5,EMR_POLYLINETO = 6,EMR_POLYPOLYLINE = 7,EMR_POLYPOLYGON = 8,EMR_SETWINDOWEXTEX = 9,EMR_SETWINDOWORGEX = 10,EMR_SETVIEWPORTEXTEX = 11,EMR_SETVIEWPORTORGEX = 12,EMR_SETBRUSHORGEX = 13,EMR_EOF = 14,EMR_SETPIXELV = 15,EMR_SETMAPPERFLAGS = 16,EMR_SETMAPMODE = 17,EMR_SETBKMODE = 18,EMR_SETPOLYFILLMODE = 19,EMR_SETROP2 = 20,EMR_SETSTRETCHBLTMODE = 21,EMR_SETTEXTALIGN = 22,EMR_SETCOLORADJUSTMENT = 23,EMR_SETTEXTCOLOR = 24,EMR_SETBKCOLOR = 25,EMR_OFFSETCLIPRGN = 26,EMR_MOVETOEX = 27,EMR_SETMETARGN = 28,EMR_EXCLUDECLIPRECT = 29,EMR_INTERSECTCLIPRECT = 30,EMR_SCALEVIEWPORTEXTEX = 31,EMR_SCALEWINDOWEXTEX = 32,EMR_SAVEDC = 33,EMR_RESTOREDC = 34,EMR_SETWORLDTRANSFORM = 35,EMR_MODIFYWORLDTRANSFORM = 36,EMR_SELECTOBJECT = 37,EMR_CREATEPEN = 38,EMR_CREATEBRUSHINDIRECT = 39,EMR_DELETEOBJECT = 40,EMR_ANGLEARC = 41,EMR_ELLIPSE = 42,EMR_RECTANGLE = 43,EMR_ROUNDRECT = 44,EMR_ARC = 45,EMR_CHORD = 46,EMR_PIE = 47,EMR_SELECTPALETTE = 48,EMR_CREATEPALETTE = 49,EMR_SETPALETTEENTRIES = 50,EMR_RESIZEPALETTE = 51,EMR_REALIZEPALETTE = 52,EMR_EXTFLOODFILL = 53,EMR_LINETO = 54,EMR_ARCTO = 55,EMR_POLYDRAW = 56,EMR_SETARCDIRECTION = 57,EMR_SETMITERLIMIT = 58,EMR_BEGINPATH = 59,EMR_ENDPATH = 60,EMR_CLOSEFIGURE = 61,EMR_FILLPATH = 62,EMR_STROKEANDFILLPATH = 63,EMR_STROKEPATH = 64,EMR_FLATTENPATH = 65,EMR_WIDENPATH = 66,EMR_SELECTCLIPPATH = 67,EMR_ABORTPATH = 68,EMR_GDICOMMENT = 70,EMR_FILLRGN = 71,EMR_FRAMERGN = 72,EMR_INVERTRGN = 73,EMR_PAINTRGN = 74,EMR_EXTSELECTCLIPRGN = 75,EMR_BITBLT = 76,EMR_STRETCHBLT = 77,EMR_MASKBLT = 78,EMR_PLGBLT = 79,EMR_SETDIBITSTODEVICE = 80,EMR_STRETCHDIBITS = 81,EMR_EXTCREATEFONTINDIRECTW = 82,EMR_EXTTEXTOUTA = 83,EMR_EXTTEXTOUTW = 84,EMR_POLYBEZIER16 = 85,EMR_POLYGON16 = 86,EMR_POLYLINE16 = 87,EMR_POLYBEZIERTO16 = 88,EMR_POLYLINETO16 = 89,EMR_POLYPOLYLINE16 = 90,EMR_POLYPOLYGON16 = 91,EMR_POLYDRAW16 = 92,EMR_CREATEMONOBRUSH = 93,EMR_CREATEDIBPATTERNBRUSHPT = 94,EMR_EXTCREATEPEN = 95,EMR_POLYTEXTOUTA = 96,EMR_POLYTEXTOUTW = 97,EMR_SETICMMODE = 98,EMR_CREATECOLORSPACE = 99,EMR_SETCOLORSPACE = 100,EMR_DELETECOLORSPACE = 101,EMR_GLSRECORD = 102,EMR_GLSBOUNDEDRECORD = 103,EMR_PIXELFORMAT = 104,};
enum MACRO_ENM {ENM_NONE = 0,ENM_CHANGE = 1,ENM_CORRECTTEXT = 4194304,ENM_DROPFILES = 1048576,ENM_KEYEVENTS = 65536,ENM_MOUSEEVENTS = 131072,ENM_PROTECTED = 2097152,ENM_REQUESTRESIZE = 262144,ENM_SCROLL = 4,ENM_SELCHANGE = 524288,ENM_UPDATE = 2,};
enum MACRO_ESB {ESB_DISABLE_BOTH = 3,ESB_DISABLE_DOWN = 2,ESB_DISABLE_LEFT = 1,ESB_DISABLE_LTUP = 1,ESB_DISABLE_RIGHT = 2,ESB_DISABLE_RTDN = 2,ESB_DISABLE_UP = 1,ESB_ENABLE_BOTH = 0,};
enum MACRO_ETO {ETO_CLIPPED = 4,ETO_GLYPH_INDEX = 16,ETO_OPAQUE = 2,ETO_RTLREADING = 128,};
enum MACRO_EWX {EWX_FORCE = 4,EWX_LOGOFF = 0,EWX_POWEROFF = 8,EWX_REBOOT = 2,EWX_SHUTDOWN = 1,};
enum MACRO_EXT {EXT_DEVICE_CAPS = 4099,};
enum MACRO_FCT {FCT_MERGE = 1,FCT_CONFIGABLE = 2,FCT_ADDTOEND = 4,};
enum MACRO_FCW {FCW_STATUS = 1,FCW_TOOLBAR = 2,FCW_TREE = 3,};
enum MACRO_FKF {FKF_AVAILABLE = 2,FKF_CLICKON = 64,FKF_FILTERKEYSON = 1,FKF_HOTKEYACTIVE = 4,FKF_HOTKEYSOUND = 16,FKF_CONFIRMHOTKEY = 8,FKF_INDICATOR = 32,};
enum MACRO_FLI {FLI_GLYPHS = 0x40000,FLI_MASK = 0x103B,};
enum MACRO_FOF {FOF_MULTIDESTFILES = 1,FOF_CONFIRMMOUSE = 2,FOF_SILENT = 4,FOF_RENAMEONCOLLISION = 8,FOF_NOCONFIRMATION = 16,FOF_WANTMAPPINGHANDLE = 32,FOF_ALLOWUNDO = 64,FOF_FILESONLY = 128,FOF_SIMPLEPROGRESS = 256,FOF_NOCONFIRMMKDIR = 512,};
enum MACRO_FTP {FTP_TRANSFER_TYPE_UNKNOWN = 0,FTP_TRANSFER_TYPE_ASCII = 1,FTP_TRANSFER_TYPE_BINARY = 2,FTP_TRANSFER_TYPE_MASK = 3,};
enum MACRO_GCL {GCL_CBCLSEXTRA = -20,GCL_CBWNDEXTRA = -18,GCL_HBRBACKGROUND = -10,GCL_HCURSOR = -12,GCL_HICON = -14,GCL_HICONSM = -34,GCL_HMODULE = -16,GCL_MENUNAME = -8,GCL_STYLE = -26,GCL_WNDPROC = -24,};
enum MACRO_GCP {GCP_DBCS = 1,GCP_ERROR = 32768,GCP_CLASSIN = 524288,GCP_DIACRITIC = 256,GCP_DISPLAYZWG = 4194304,GCP_GLYPHSHAPE = 16,GCP_JUSTIFY = 65536,GCP_JUSTIFYIN = 2097152,GCP_KASHIDA = 1024,GCP_LIGATE = 32,GCP_MAXEXTENT = 1048576,GCP_NEUTRALOVERRIDE = 33554432,GCP_NUMERICOVERRIDE = 16777216,GCP_NUMERICSLATIN = 67108864,GCP_NUMERICSLOCAL = 134217728,GCP_REORDER = 2,GCP_SYMSWAPOFF = 8388608,GCP_USEKERNING = 8,};
enum MACRO_GCS {GCS_COMPREADSTR = 1,GCS_COMPREADATTR = 2,GCS_COMPREADCLAUSE = 4,GCS_COMPSTR = 8,GCS_COMPATTR = 16,GCS_COMPCLAUSE = 32,GCS_CURSORPOS = 128,GCS_DELTASTART = 256,GCS_RESULTREADSTR = 512,GCS_RESULTREADCLAUSE = 1024,GCS_RESULTSTR = 2048,GCS_RESULTCLAUSE = 4096,};
enum MACRO_GCW {GCW_ATOM = -32,};
enum MACRO_GDI {GDI_ERROR = 0xFFFFFFFF,HGDI_ERROR = 0xFFFFFFFF,};
enum MACRO_GDT {GDT_ERROR = -1,GDT_VALID = 0,GDT_NONE = 1,};
enum MACRO_GET {GET_TAPE_MEDIA_INFORMATION = 0,GET_TAPE_DRIVE_INFORMATION = 1,};
enum MACRO_GGL {GGL_LEVEL = 1,GGL_INDEX = 2,GGL_STRING = 3,GGL_PRIVATE = 4,};
enum MACRO_GGO {GGO_BITMAP = 1,GGO_NATIVE = 2,GGO_METRICS = 0,GGO_GRAY2_BITMAP = 4,GGO_GRAY4_BITMAP = 5,GGO_GRAY8_BITMAP = 6,GGO_GLYPH_INDEX = 128,};
enum MACRO_GIL {GIL_OPENICON = 1,GIL_FORSHELL = 2,GIL_SIMULATEDOC = 1,GIL_PERINSTANCE = 2,GIL_PERCLASS = 4,GIL_NOTFILENAME = 8,GIL_DONTCACHE = 16,};
enum MACRO_GMR {GMR_VISIBLE = 0,GMR_DAYSTATE = 1,};
enum MACRO_GRP {GRP_ERROR = 0x1,USER_ERROR = 0x2,CLASS_ERROR = 0x3,OTHER_ERROR = 0x4,DUPLICATE_ERROR = 0x5,ENTRY_ERROR = 0x6,MISS_ERROR = 0x7,MEM_ERROR = 0x8,};
enum MACRO_GWL {GWL_EXSTYLE = -20,GWL_STYLE = -16,GWL_WNDPROC = -4,GWL_HINSTANCE = -6,GWL_HWNDPARENT = -8,GWL_ID = -12,GWL_USERDATA = -21,};
enum MACRO_HCF {HCF_HIGHCONTRASTON = 1,HCF_AVAILABLE = 2,HCF_HOTKEYACTIVE = 4,HCF_CONFIRMHOTKEY = 8,HCF_HOTKEYSOUND = 16,HCF_INDICATOR = 32,HCF_HOTKEYAVAILABLE = 64,};
enum MACRO_HDF {HDF_LEFT = 0,HDF_RIGHT = 1,HDF_CENTER = 2,HDF_RTLREADING = 4,HDF_OWNERDRAW = 32768,HDF_STRING = 16384,HDF_BITMAP = 8192,};
enum MACRO_HDI {HDI_WIDTH = 1,HDI_HEIGHT = 1,HDI_TEXT = 2,HDI_FORMAT = 4,HDI_LPARAM = 8,HDI_BITMAP = 16,};
enum MACRO_HDM {HDM_GETITEMCOUNT = 4608,HDM_INSERTITEMA = 4609,HDM_INSERTITEMW = 4618,HDM_DELETEITEM = 4610,HDM_GETITEMA = 4611,HDM_GETITEMW = 4619,HDM_SETITEMA = 4612,HDM_SETITEMW = 4620,HDM_LAYOUT = 4613,};
enum MACRO_HDN {HDN_FIRST = -300,HDN_LAST = -399,};
enum MACRO_HDS {HDS_HORZ = 0,HDS_BUTTONS = 2,HDS_HIDDEN = 8,};
enum MACRO_HHT {HHT_NOWHERE = 1,HHT_ONHEADER = 2,HHT_ONDIVIDER = 4,HHT_ONDIVOPEN = 8,HHT_ABOVE = 256,HHT_BELOW = 512,HHT_TORIGHT = 1024,HHT_TOLEFT = 2048,};
enum MACRO_HKL {HKL_NEXT = 1,HKL_PREV = 0,};
enum MACRO_HKM {HKM_SETHOTKEY = 1025,HKM_GETHOTKEY = 1026,HKM_SETRULES = 1027,};
enum MACRO_HSE {HSE_VERSION_MAJOR = 2,HSE_VERSION_MINOR = 0,HSE_LOG_BUFFER_LEN = 80,HSE_MAX_EXT_DLL_NAME_LEN = 256,HSE_STATUS_SUCCESS = 1,HSE_STATUS_SUCCESS_AND_KEEP_CONN = 2,HSE_STATUS_PENDING = 3,HSE_STATUS_ERROR = 4,HSE_REQ_BASE = 0,HSE_REQ_SEND_URL_REDIRECT_RESP = 1,HSE_REQ_SEND_URL = 2,HSE_REQ_SEND_RESPONSE_HEADER = 3,HSE_REQ_DONE_WITH_SESSION = 4,HSE_REQ_END_RESERVED = 1000,HSE_TERM_ADVISORY_UNLOAD = 1,HSE_TERM_MUST_UNLOAD = 2,HSE_IO_SYNC = 1,HSE_IO_ASYNC = 2,HSE_IO_DISCONNECT_AFTER_SEND = 4,HSE_IO_SEND_HEADERS = 8,};
enum MACRO_HSR {HSR_INITIATE = 8,HSR_DOWNLOAD = 16,HSR_CHUNKED = 32,};
enum MACRO_ICC {ICC_LISTVIEW_CLASSES = 1,ICC_TREEVIEW_CLASSES = 2,ICC_TAB_CLASSES = 8,ICC_UPDOWN_CLASS = 16,ICC_PROGRESS_CLASS = 32,ICC_HOTKEY_CLASS = 64,ICC_ANIMATE_CLASS = 128,ICC_WIN95_CLASSES = 255,ICC_DATE_CLASSES = 256,ICC_USEREX_CLASSES = 512,ICC_COOL_CLASSES = 1024,};
enum MACRO_ICM {ICM_ON = 2,ICM_OFF = 1,ICM_QUERY = 3,};
enum MACRO_ICU {ICU_ESCAPE = 0x80000000,ICU_USERNAME = 0x40000000,ICU_NO_ENCODE = 0x20000000,ICU_DECODE = 0x10000000,ICU_NO_META = 0x8000000,ICU_ENCODE_SPACES_ONLY = 0x4000000,ICU_BROWSER_MODE = 0x2000000,};
enum MACRO_IDB {IDB_STD_SMALL_COLOR = 0,IDB_STD_LARGE_COLOR = 1,IDB_VIEW_SMALL_COLOR = 4,IDB_VIEW_LARGE_COLOR = 5,};
enum MACRO_IDC {IDC_OLEUIHELP = 99,IDC_IO_CREATENEW = 2100,IDC_IO_CREATEFROMFILE = 2101,IDC_IO_LINKFILE = 2102,IDC_IO_OBJECTTYPELIST = 2103,IDC_IO_DISPLAYASICON = 2104,IDC_IO_CHANGEICON = 2105,IDC_IO_FILE = 2106,IDC_IO_FILEDISPLAY = 2107,IDC_IO_RESULTIMAGE = 2108,IDC_IO_RESULTTEXT = 2109,IDC_IO_ICONDISPLAY = 2110,IDC_IO_OBJECTTYPETEXT = 2111,IDC_IO_FILETEXT = 2112,IDC_IO_FILETYPE = 2113,IDC_IO_INSERTCONTROL = 2114,IDC_IO_ADDCONTROL = 2115,IDC_IO_CONTROLTYPELIST = 2116,IDC_PS_PASTE = 500,IDC_PS_PASTELINK = 501,IDC_PS_SOURCETEXT = 502,IDC_PS_PASTELIST = 503,IDC_PS_PASTELINKLIST = 504,IDC_PS_DISPLAYLIST = 505,IDC_PS_DISPLAYASICON = 506,IDC_PS_ICONDISPLAY = 507,IDC_PS_CHANGEICON = 508,IDC_PS_RESULTIMAGE = 509,IDC_PS_RESULTTEXT = 510,IDC_CI_GROUP = 120,IDC_CI_CURRENT = 121,IDC_CI_CURRENTICON = 122,IDC_CI_DEFAULT = 123,IDC_CI_DEFAULTICON = 124,IDC_CI_FROMFILE = 125,IDC_CI_FROMFILEEDIT = 126,IDC_CI_ICONLIST = 127,IDC_CI_LABEL = 128,IDC_CI_LABELEDIT = 129,IDC_CI_BROWSE = 130,IDC_CI_ICONDISPLAY = 131,IDC_CV_OBJECTTYPE = 150,IDC_CV_DISPLAYASICON = 152,IDC_CV_CHANGEICON = 153,IDC_CV_ACTIVATELIST = 154,IDC_CV_CONVERTTO = 155,IDC_CV_ACTIVATEAS = 156,IDC_CV_RESULTTEXT = 157,IDC_CV_CONVERTLIST = 158,IDC_CV_ICONDISPLAY = 165,IDC_EL_CHANGESOURCE = 201,IDC_EL_AUTOMATIC = 202,IDC_EL_CANCELLINK = 209,IDC_EL_UPDATENOW = 210,IDC_EL_OPENSOURCE = 211,IDC_EL_MANUAL = 212,IDC_EL_LINKSOURCE = 216,IDC_EL_LINKTYPE = 217,IDC_EL_LINKSLISTBOX = 206,IDC_EL_COL1 = 220,IDC_EL_COL2 = 221,IDC_EL_COL3 = 222,IDC_BZ_RETRY = 600,IDC_BZ_ICON = 601,IDC_BZ_MESSAGE1 = 602,IDC_BZ_SWITCHTO = 604,IDC_UL_METER = 1029,IDC_UL_STOP = 1030,IDC_UL_PERCENT = 1031,IDC_UL_PROGRESS = 1032,IDC_PU_LINKS = 900,IDC_PU_TEXT = 901,IDC_PU_CONVERT = 902,IDC_PU_ICON = 908,IDC_GP_OBJECTNAME = 1009,IDC_GP_OBJECTTYPE = 1010,IDC_GP_OBJECTSIZE = 1011,IDC_GP_CONVERT = 1013,IDC_GP_OBJECTICON = 1014,IDC_GP_OBJECTLOCATION = 1022,IDC_VP_PERCENT = 1000,IDC_VP_CHANGEICON = 1001,IDC_VP_EDITABLE = 1002,IDC_VP_ASICON = 1003,IDC_VP_RELATIVE = 1005,IDC_VP_SPIN = 1006,IDC_VP_SCALETXT = 1034,IDC_VP_ICONDISPLAY = 1021,IDC_VP_RESULTIMAGE = 1033,IDC_LP_OPENSOURCE = 1006,IDC_LP_UPDATENOW = 1007,IDC_LP_BREAKLINK = 1008,IDC_LP_LINKSOURCE = 1012,IDC_LP_CHANGESOURCE = 1015,IDC_LP_AUTOMATIC = 1016,IDC_LP_MANUAL = 1017,IDC_LP_DATE = 1018,IDC_LP_TIME = 1019,};
enum MACRO_IDD {IDD_INSERTOBJECT = 1000,IDD_CHANGEICON = 1001,IDD_CONVERT = 1002,IDD_PASTESPECIAL = 1003,IDD_EDITLINKS = 1004,IDD_BUSY = 1006,IDD_UPDATELINKS = 1007,IDD_CHANGESOURCE = 1009,IDD_INSERTFILEBROWSE = 1010,IDD_CHANGEICONBROWSE = 1011,IDD_CONVERTONLY = 1012,IDD_CHANGESOURCE4 = 1013,IDD_GNRLPROPS = 1100,IDD_VIEWPROPS = 1101,IDD_LINKPROPS = 1102,IDD_CANNOTUPDATELINK = 1008,IDD_LINKSOURCEUNAVAILABLE = 1020,IDD_SERVERNOTFOUND = 1023,IDD_OUTOFMEMORY = 1024,IDD_SERVERNOTREGW = 1021,IDD_LINKTYPECHANGEDW = 1022,IDD_SERVERNOTREGA = 1025,IDD_LINKTYPECHANGEDA = 1026,};
enum MACRO_IDH {IDH_NO_HELP = 28440,IDH_MISSING_CONTEXT = 28441,IDH_GENERIC_HELP_BUTTON = 28442,IDH_OK = 28443,IDH_CANCEL = 28444,IDH_HELP = 28445,};
enum MACRO_IDS {IDS_DESCRIPTION = 1,};
enum MACRO_IGP {IGP_GETIMEVERSION = 4294967292,IGP_PROPERTY = 4,IGP_CONVERSION = 8,IGP_SENTENCE = 12,IGP_UI = 16,IGP_SETCOMPSTR = 20,IGP_SELECT = 24,};
enum MACRO_ILC {ILC_COLOR = 0,ILC_COLOR4 = 4,ILC_COLOR8 = 8,ILC_COLOR16 = 16,ILC_COLOR24 = 24,ILC_COLOR32 = 32,ILC_COLORDDB = 254,ILC_MASK = 1,ILC_PALETTE = 2048,};
enum MACRO_ILD {ILD_BLEND25 = 2,ILD_BLEND50 = 4,ILD_SELECTED = 4,ILD_BLEND = 4,ILD_FOCUS = 2,ILD_MASK = 16,ILD_NORMAL = 0,ILD_TRANSPARENT = 1,};
enum MACRO_IMC {IMC_GETCANDIDATEPOS = 7,IMC_SETCANDIDATEPOS = 8,IMC_GETCOMPOSITIONFONT = 9,IMC_SETCOMPOSITIONFONT = 10,IMC_GETCOMPOSITIONWINDOW = 11,IMC_SETCOMPOSITIONWINDOW = 12,IMC_GETSTATUSWINDOWPOS = 15,IMC_SETSTATUSWINDOWPOS = 16,IMC_CLOSESTATUSWINDOW = 33,IMC_OPENSTATUSWINDOW = 34,};
enum MACRO_IME {IME_CHOTKEY_IME_NONIME_TOGGLE = 16,IME_CHOTKEY_SHAPE_TOGGLE = 17,IME_CHOTKEY_SYMBOL_TOGGLE = 18,IME_JHOTKEY_CLOSE_OPEN = 48,IME_KHOTKEY_SHAPE_TOGGLE = 80,IME_KHOTKEY_HANJACONVERT = 81,IME_KHOTKEY_ENGLISH = 82,IME_THOTKEY_IME_NONIME_TOGGLE = 112,IME_THOTKEY_SHAPE_TOGGLE = 113,IME_THOTKEY_SYMBOL_TOGGLE = 114,IME_HOTKEY_DSWITCH_FIRST = 256,IME_HOTKEY_DSWITCH_LAST = 287,IME_ITHOTKEY_RESEND_RESULTSTR = 512,IME_ITHOTKEY_PREVIOUS_COMPOSITION = 513,IME_ITHOTKEY_UISTYLE_TOGGLE = 514,};
enum MACRO_IMF {IMF_FORCENONE = 1,IMF_FORCEENABLE = 2,IMF_FORCEDISABLE = 4,IMF_CLOSESTATUSWINDOW = 8,IMF_VERTICAL = 32,IMF_FORCEACTIVE = 64,IMF_FORCEINACTIVE = 128,IMF_FORCEREMEMBER = 256,};
enum MACRO_IMM {IMM_ERROR_NODATA = -1,IMM_ERROR_GENERAL = -2,};
enum MACRO_IMN {IMN_CLOSESTATUSWINDOW = 1,IMN_OPENSTATUSWINDOW = 2,IMN_CHANGECANDIDATE = 3,IMN_CLOSECANDIDATE = 4,IMN_OPENCANDIDATE = 5,IMN_SETCONVERSIONMODE = 6,IMN_SETSENTENCEMODE = 7,IMN_SETOPENSTATUS = 8,IMN_SETCANDIDATEPOS = 9,IMN_SETCOMPOSITIONFONT = 10,IMN_SETCOMPOSITIONWINDOW = 11,IMN_SETSTATUSWINDOWPOS = 12,IMN_GUIDELINE = 13,IMN_PRIVATE = 14,};
enum MACRO_IOC {IOC_VOID = 0x20000000,IOC_OUT = 0x40000000,IOC_IN = 0x80000000,IOC_INOUT = 0xC0000000,};
enum MACRO_IOF {IOF_SHOWHELP = 1,IOF_SELECTCREATENEW = 2,IOF_SELECTCREATEFROMFILE = 4,IOF_CHECKLINK = 8,IOF_CHECKDISPLAYASICON = 16,IOF_CREATENEWOBJECT = 32,IOF_CREATEFILEOBJECT = 64,IOF_CREATELINKOBJECT = 128,IOF_DISABLELINK = 256,IOF_VERIFYSERVERSEXIST = 512,IOF_DISABLEDISPLAYASICON = 1024,IOF_HIDECHANGEICON = 2048,IOF_SHOWINSERTCONTROL = 4096,IOF_SELECTCREATECONTROL = 8192,};
enum MACRO_ISC {ISC_SHOWUICANDIDATEWINDOW = 1,ISC_SHOWUICOMPOSITIONWINDOW = -2147483648,ISC_SHOWUIGUIDELINE = 1073741824,ISC_SHOWUIALLCANDIDATEWINDOW = 15,ISC_SHOWUIALL = -1073741809,};
enum MACRO_ISO {ISO_GLOBAL = 1,ISO_REGISTRY = 2,ISO_VALID_FLAGS = 3,};
enum MACRO_JOB {JOB_CONTROL_PAUSE = 1,JOB_CONTROL_RESUME = 2,JOB_CONTROL_CANCEL = 3,JOB_CONTROL_RESTART = 4,JOB_CONTROL_DELETE = 5,JOB_STATUS_PAUSED = 1,JOB_STATUS_ERROR = 2,JOB_STATUS_DELETING = 4,JOB_STATUS_SPOOLING = 8,JOB_STATUS_PRINTING = 16,JOB_STATUS_OFFLINE = 32,JOB_STATUS_PAPEROUT = 64,JOB_STATUS_PRINTED = 128,JOB_STATUS_DELETED = 256,JOB_STATUS_BLOCKED_DEVQ = 512,JOB_STATUS_USER_INTERVENTION = 1024,JOB_POSITION_UNSPECIFIED = 0,JOB_NOTIFY_TYPE = 1,JOB_NOTIFY_FIELD_PRINTER_NAME = 0,JOB_NOTIFY_FIELD_MACHINE_NAME = 1,JOB_NOTIFY_FIELD_PORT_NAME = 2,JOB_NOTIFY_FIELD_USER_NAME = 3,JOB_NOTIFY_FIELD_NOTIFY_NAME = 4,JOB_NOTIFY_FIELD_DATATYPE = 5,JOB_NOTIFY_FIELD_PRINT_PROCESSOR = 6,JOB_NOTIFY_FIELD_PARAMETERS = 7,JOB_NOTIFY_FIELD_DRIVER_NAME = 8,JOB_NOTIFY_FIELD_DEVMODE = 9,JOB_NOTIFY_FIELD_STATUS = 10,JOB_NOTIFY_FIELD_STATUS_STRING = 11,JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR = 12,JOB_NOTIFY_FIELD_DOCUMENT = 13,JOB_NOTIFY_FIELD_PRIORITY = 14,JOB_NOTIFY_FIELD_POSITION = 15,JOB_NOTIFY_FIELD_SUBMITTED = 16,JOB_NOTIFY_FIELD_START_TIME = 17,JOB_NOTIFY_FIELD_UNTIL_TIME = 18,JOB_NOTIFY_FIELD_TIME = 19,JOB_NOTIFY_FIELD_TOTAL_PAGES = 20,JOB_NOTIFY_FIELD_PAGES_PRINTED = 21,JOB_NOTIFY_FIELD_TOTAL_BYTES = 22,JOB_NOTIFY_FIELD_BYTES_PRINTED = 23,JOB_ACCESS_ADMINISTER = 16,JOB_ALL_ACCESS = 983056,JOB_READ = 131088,JOB_WRITE = 131088,JOB_EXECUTE = 131088,};
enum MACRO_JOY {JOY_BUTTON1 = 1,JOY_BUTTON2 = 2,JOY_BUTTON3 = 4,JOY_BUTTON4 = 8,JOY_BUTTON1CHG = 256,JOY_BUTTON2CHG = 512,JOY_BUTTON3CHG = 1024,JOY_BUTTON4CHG = 2048,JOY_BUTTON5 = 257,JOY_BUTTON6 = 513,JOY_BUTTON7 = 1025,JOY_BUTTON8 = 2049,JOY_BUTTON9 = 256,JOY_BUTTON10 = 512,JOY_BUTTON11 = 1024,JOY_BUTTON12 = 2048,JOY_BUTTON13 = 4096,JOY_BUTTON14 = 8192,JOY_BUTTON15 = 16384,JOY_BUTTON16 = 32768,JOY_BUTTON17 = 65536,JOY_BUTTON18 = 131072,JOY_BUTTON19 = 262144,JOY_BUTTON20 = 524288,JOY_BUTTON21 = 1048576,JOY_BUTTON22 = 2097152,JOY_BUTTON23 = 4194304,JOY_BUTTON24 = 8388608,JOY_BUTTON25 = 16777216,JOY_BUTTON26 = 33554432,JOY_BUTTON27 = 67108864,JOY_BUTTON28 = 134217728,JOY_BUTTON29 = 268435456,JOY_BUTTON30 = 536870912,JOY_BUTTON31 = 1073741824,JOY_BUTTON32 = -2147483648,JOY_POVCENTERED = 65535,JOY_POVFORWARD = 0,JOY_POVRIGHT = 9000,JOY_POVBACKWARD = 18000,JOY_POVLEFT = 27000,JOY_RETURNX = 1,JOY_RETURNY = 2,JOY_RETURNZ = 4,JOY_RETURNR = 8,JOY_RETURNU = 16,JOY_RETURNV = 32,JOY_RETURNPOV = 64,JOY_RETURNBUTTONS = 128,JOY_RETURNRAWDATA = 256,JOY_RETURNPOVCTS = 512,JOY_RETURNCENTERED = 1024,JOY_USEDEADZONE = 2048,JOY_RETURNALL = 255,JOY_CAL_READALWAYS = 65536,JOY_CAL_READXYONLY = 131072,JOY_CAL_READ3 = 262144,JOY_CAL_READ4 = 524288,JOY_CAL_READXONLY = 1048576,JOY_CAL_READYONLY = 2097152,JOY_CAL_READ5 = 4194304,JOY_CAL_READ6 = 8388608,JOY_CAL_READZONLY = 16777216,JOY_CAL_READRONLY = 33554432,JOY_CAL_READUONLY = 67108864,JOY_CAL_READVONLY = 134217728,};
enum MACRO_KEY {KEY_QUERY_VALUE = 1,KEY_SET_VALUE = 2,KEY_CREATE_SUB_KEY = 4,KEY_ENUMERATE_SUB_KEYS = 8,KEY_NOTIFY = 16,KEY_CREATE_LINK = 32,KEY_WRITE = 131078,KEY_EXECUTE = 131097,KEY_READ = 131097,KEY_ALL_ACCESS = 983103,};
enum MACRO_KLF {KLF_ACTIVATE = 1,KLF_SUBSTITUTE_OK = 2,KLF_UNLOADPREVIOUS = 4,KLF_REORDER = 8,KLF_REPLACELANG = 16,KLF_NOTELLSHELL = 128,KLF_SETFORPROCESS = 256,};
enum MACRO_LBN {LBN_DBLCLK = 2,LBN_ERRSPACE = -2,LBN_KILLFOCUS = 5,LBN_SELCANCEL = 3,LBN_SELCHANGE = 1,LBN_SETFOCUS = 4,};
enum MACRO_LBS {LBS_DISABLENOSCROLL = 4096,LBS_EXTENDEDSEL = 2048,LBS_HASSTRINGS = 64,LBS_MULTICOLUMN = 512,LBS_MULTIPLESEL = 8,LBS_NODATA = 8192,LBS_NOINTEGRALHEIGHT = 256,LBS_NOREDRAW = 4,LBS_NOSEL = 16384,LBS_NOTIFY = 1,LBS_OWNERDRAWFIXED = 16,LBS_OWNERDRAWVARIABLE = 32,LBS_SORT = 2,LBS_STANDARD = 10485763,LBS_USETABSTOPS = 128,LBS_WANTKEYBOARDINPUT = 1024,};
enum MACRO_LCS {LCS_CALIBRATED_RGB = 0,LCS_DEVICE_RGB = 1,LCS_DEVICE_CMYK = 2,LCS_GM_BUSINESS = 1,LCS_GM_GRAPHICS = 2,LCS_GM_IMAGES = 4,};
enum MACRO_LEN {WSADESCRIPTION_LEN = 256,WSASYS_STATUS_LEN = 128,};
enum MACRO_LPD {LPD_DOUBLEBUFFER = 1,LPD_STEREO = 2,LPD_SUPPORT_GDI = 16,LPD_SUPPORT_OPENGL = 32,LPD_SHARE_DEPTH = 64,LPD_SHARE_STENCIL = 128,LPD_SHARE_ACCUM = 256,LPD_SWAP_EXCHANGE = 512,LPD_SWAP_COPY = 1024,LPD_TRANSPARENT = 4096,LPD_TYPE_RGBA = 0,LPD_TYPE_COLORINDEX = 1,};
enum MACRO_LVA {LVA_DEFAULT = 0,LVA_ALIGNLEFT = 1,LVA_ALIGNTOP = 2,LVA_SNAPTOGRID = 5,};
enum MACRO_LVM {LVM_GETBKCOLOR = 4096,LVM_SETBKCOLOR = 4097,LVM_GETIMAGELIST = 4098,LVM_SETIMAGELIST = 4099,LVM_GETITEMCOUNT = 4100,};
enum MACRO_LVN {LVN_FIRST = -100,LVN_LAST = -199,};
enum MACRO_LVS {LVS_ICON = 0,LVS_REPORT = 1,LVS_SMALLICON = 2,LVS_LIST = 3,LVS_TYPEMASK = 3,LVS_SINGLESEL = 4,LVS_SHOWSELALWAYS = 8,LVS_SORTASCENDING = 16,LVS_SORTDESCENDING = 32,LVS_SHAREIMAGELISTS = 64,LVS_NOLABELWRAP = 128,LVS_AUTOARRANGE = 256,LVS_EDITLABELS = 512,LVS_NOSCROLL = 8192,LVS_TYPESTYLEMASK = 64512,LVS_ALIGNTOP = 0,LVS_ALIGNLEFT = 2048,LVS_ALIGNMASK = 3072,LVS_OWNERDRAWFIXED = 1024,LVS_NOCOLUMNHEADER = 16384,LVS_NOSORTHEADER = 32768,};
enum MACRO_MAP {MAP_FOLDCZONE = 16,MAP_FOLDDIGITS = 128,MAP_PRECOMPOSED = 32,MAP_COMPOSITE = 64,};
enum MACRO_MAX {MAX_PATH = 260,};
enum MACRO_MCI {MCI_STRING_OFFSET = 512,MCI_VD_OFFSET = 1024,MCI_CD_OFFSET = 1088,MCI_WAVE_OFFSET = 1152,MCI_SEQ_OFFSET = 1216,};
enum MACRO_MCM {MCM_GETCURSEL = 0x1001,MCM_SETCURSEL = 0x1002,MCM_GETMAXSELCOUNT = 0x1003,MCM_SETMAXSELCOUNT = 0x1004,MCM_GETSELRANGE = 0x1005,MCM_SETSELRANGE = 0x1006,MCM_GETMONTHRANGE = 0x1007,MCM_SETDAYSTATE = 0x1008,MCM_GETMINREQRECT = 0x1009,MCM_SETCOLOR = 0x100A,MCM_GETCOLOR = 0x100B,MCM_SETTODAY = 0x100C,MCM_GETTODAY = 0x100D,MCM_HITTEST = 0x100E,MCM_SETFIRSTDAYOFWEEK = 0x100F,MCM_GETFIRSTDAYOFWEEK = 0x1010,MCM_GETRANGE = 0x1011,MCM_SETRANGE = 0x1012,MCM_GETMONTHDELTA = 0x1013,MCM_SETMONTHDELTA = 0x1014,};
enum MACRO_MCN {MCN_SELCHANGE = -749,MCN_GETDAYSTATE = -747,MCN_SELECT = -746,};
enum MACRO_MCS {MCS_DAYSTATE = 1,MCS_MULTISELECT = 2,MCS_WEEKNUMBERS = 4,MCS_NOTODAY = 8,};
enum MACRO_MDM {MDM_COMPRESSION = 1,MDM_ERROR_CONTROL = 2,MDM_FORCED_EC = 4,MDM_CELLULAR = 8,MDM_FLOWCONTROL_HARD = 16,MDM_FLOWCONTROL_SOFT = 32,MDM_CCITT_OVERRIDE = 64,MDM_SPEED_ADJUST = 128,MDM_TONE_DIAL = 256,MDM_BLIND_DIAL = 512,MDM_V23_OVERRIDE = 1024,};
enum MACRO_MEM {MEM_COMMIT = 4096,MEM_FREE = 65536,MEM_RESERVE = 8192,MEM_IMAGE = 16777216,MEM_MAPPED = 262144,MEM_PRIVATE = 131072,MEM_DECOMMIT = 16384,MEM_RELEASE = 32768,};
enum MACRO_MFS {MFS_CHECKED = 8,MFS_DEFAULT = 4096,MFS_DISABLED = 3,MFS_ENABLED = 0,MFS_GRAYED = 3,MFS_HILITE = 128,MFS_UNCHECKED = 0,MFS_UNHILITE = 0,};
enum MACRO_MFT {MFT_BITMAP = 4,MFT_MENUBARBREAK = 32,MFT_MENUBREAK = 64,MFT_OWNERDRAW = 256,MFT_RADIOCHECK = 512,MFT_RIGHTJUSTIFY = 16384,MFT_SEPARATOR = 2048,MFT_RIGHTORDER = 8192,MFT_STRING = 0,};
enum MACRO_MIM {MIM_OPEN = 961,MIM_CLOSE = 962,MIM_DATA = 963,MIM_LONGDATA = 964,MIM_ERROR = 965,MIM_LONGERROR = 966,};
enum MACRO_MIN {MIN_GOPHER_ATTRIBUTE_LENGTH = 256,};
enum MACRO_MKF {MKF_AVAILABLE = 2,MKF_CONFIRMHOTKEY = 8,MKF_HOTKEYACTIVE = 4,MKF_HOTKEYSOUND = 16,MKF_INDICATOR = 32,MKF_MOUSEKEYSON = 1,MKF_MODIFIERS = 64,MKF_REPLACENUMBERS = 128,};
enum MACRO_MNC {MNC_IGNORE = 0,MNC_CLOSE = 1,MNC_EXECUTE = 2,MNC_SELECT = 3,};
enum MACRO_MOD {MOD_ALT = 1,MOD_CONTROL = 2,MOD_SHIFT = 4,MOD_WIN = 8,MOD_IGNORE_ALL_MODIFIER = 1024,MOD_ON_KEYUP = 2048,MOD_RIGHT = 16384,MOD_LEFT = 32768,};
enum MACRO_MOM {MOM_OPEN = 967,MOM_CLOSE = 968,MOM_DONE = 969,};
enum MACRO_MSG {MSG_OOB = 1,MSG_PEEK = 2,MSG_DONTROUTE = 4,MSG_MAXIOVLEN = 16,MSG_PARTIAL = 32768,};
enum MACRO_MWT {MWT_IDENTITY = 1,MWT_LEFTMULTIPLY = 2,MWT_RIGHTMULTIPLY = 3,};
enum MACRO_NDR {NDR_CHAR_REP_MASK = 0xF,NDR_INT_REP_MASK = 0xF0,NDR_FLOAT_REP_MASK = 0xFF00,NDR_LITTLE_ENDIAN = 0x10,NDR_BIG_ENDIAN = 0x0,NDR_IEEE_FLOAT = 0x0,NDR_VAX_FLOAT = 0x100,NDR_ASCII_CHAR = 0x0,NDR_EBCDIC_CHAR = 0x1,NDR_LOCAL_DATA_REPRESENTATION = 0x10,NDR_LOCAL_ENDIAN = 0x10,};
enum MACRO_NFR {NFR_ANSI = 1,NFR_UNICODE = 2,};
enum MACRO_NIF {NIF_MESSAGE = 1,NIF_ICON = 2,NIF_TIP = 4,};
enum MACRO_NIM {NIM_ADD = 0,NIM_MODIFY = 1,NIM_DELETE = 2,};
enum MACRO_NLS {NLS_VALID_LOCALE_MASK = 1048575,};
enum MACRO_NON {NON_VALIDATED_LOGON = 3,};
enum MACRO_NRC {NRC_GOODRET = 0x0,NRC_BUFLEN = 0x1,NRC_ILLCMD = 0x3,NRC_CMDTMO = 0x5,NRC_INCOMP = 0x6,NRC_BADDR = 0x7,NRC_SNUMOUT = 0x8,NRC_NORES = 0x9,NRC_SCLOSED = 0xA,NRC_CMDCAN = 0xB,NRC_DUPNAME = 0xD,NRC_NAMTFUL = 0xE,NRC_ACTSES = 0xF,NRC_LOCTFUL = 0x11,NRC_REMTFUL = 0x12,NRC_ILLNN = 0x13,NRC_NOCALL = 0x14,NRC_NOWILD = 0x15,NRC_INUSE = 0x16,NRC_NAMERR = 0x17,NRC_SABORT = 0x18,NRC_NAMCONF = 0x19,NRC_IFBUSY = 0x21,NRC_TOOMANY = 0x22,NRC_BRIDGE = 0x23,NRC_CANOCCR = 0x24,NRC_CANCEL = 0x26,NRC_DUPENV = 0x30,NRC_ENVNOTDEF = 0x34,NRC_OSRESNOTAV = 0x35,NRC_MAXAPPS = 0x36,NRC_NOSAPS = 0x37,NRC_NORESOURCES = 0x38,NRC_INVADDRESS = 0x39,NRC_INVDDID = 0x3B,NRC_LOCKFAIL = 0x3C,NRC_OPENERR = 0x3F,NRC_SYSTEM = 0x40,NRC_PENDING = 0xFF,};
enum MACRO_NTM {NTM_ITALIC = 1,NTM_BOLD = 32,NTM_REGULAR = 64,};
enum MACRO_NUM {NUM_RESOURCE_MAP = 256,};
enum MACRO_OBJ {OBJ_BRUSH = 2,OBJ_PEN = 1,OBJ_PAL = 5,OBJ_FONT = 6,OBJ_BITMAP = 7,OBJ_EXTPEN = 11,OBJ_REGION = 8,OBJ_DC = 3,OBJ_MEMDC = 10,OBJ_METAFILE = 9,OBJ_METADC = 4,OBJ_ENHMETAFILE = 13,OBJ_ENHMETADC = 12,};
enum MACRO_OBM {OBM_BTNCORNERS = 32758,OBM_BTSIZE = 32761,OBM_CHECK = 32760,OBM_CHECKBOXES = 32759,OBM_CLOSE = 32754,OBM_COMBO = 32738,OBM_DNARROW = 32752,OBM_DNARROWD = 32742,OBM_DNARROWI = 32736,OBM_LFARROW = 32750,OBM_LFARROWI = 32734,OBM_LFARROWD = 32740,OBM_MNARROW = 32739,OBM_OLD_CLOSE = 32767,OBM_OLD_DNARROW = 32764,OBM_OLD_LFARROW = 32762,OBM_OLD_REDUCE = 32757,OBM_OLD_RESTORE = 32755,OBM_OLD_RGARROW = 32763,OBM_OLD_UPARROW = 32765,OBM_OLD_ZOOM = 32756,OBM_REDUCE = 32749,OBM_REDUCED = 32746,OBM_RESTORE = 32747,OBM_RESTORED = 32744,OBM_RGARROW = 32751,OBM_RGARROWD = 32741,OBM_RGARROWI = 32735,OBM_SIZE = 32766,OBM_UPARROW = 32753,OBM_UPARROWD = 32743,OBM_UPARROWI = 32737,OBM_ZOOM = 32748,OBM_ZOOMD = 32745,};
enum MACRO_OCM {OCM__BASE = 0x2000,OCM_COMMAND = 0x2111,OCM_CTLCOLORBTN = 0x2135,OCM_CTLCOLOREDIT = 0x2133,OCM_CTLCOLORDLG = 0x2136,OCM_CTLCOLORLISTBOX = 0x2134,OCM_CTLCOLORMSGBOX = 0x2132,OCM_CTLCOLORSCROLLBAR = 0x2137,OCM_CTLCOLORSTATIC = 0x2138,OCM_DRAWITEM = 0x202B,OCM_MEASUREITEM = 0x202C,OCM_DELETEITEM = 0x202D,OCM_VKEYTOITEM = 0x202E,OCM_CHARTOITEM = 0x202F,OCM_COMPAREITEM = 0x2039,OCM_HSCROLL = 0x2114,OCM_VSCROLL = 0x2115,OCM_PARENTNOTIFY = 0x2210,OCM_NOTIFY = 0x204E,};
enum MACRO_OCR {OCR_NORMAL = 32512,OCR_IBEAM = 32513,OCR_WAIT = 32514,OCR_CROSS = 32515,OCR_UP = 32516,OCR_SIZE = 32640,OCR_ICON = 32641,OCR_SIZENWSE = 32642,OCR_SIZENESW = 32643,OCR_SIZEWE = 32644,OCR_SIZENS = 32645,OCR_SIZEALL = 32646,OCR_NO = 32648,OCR_APPSTARTING = 32650,};
enum MACRO_ODA {ODA_DRAWENTIRE = 1,ODA_SELECT = 2,ODA_FOCUS = 4,};
enum MACRO_ODS {ODS_SELECTED = 1,ODS_GRAYED = 2,ODS_DISABLED = 4,ODS_CHECKED = 8,ODS_FOCUS = 16,ODS_DEFAULT = 32,ODS_COMBOBOXEDIT = 4096,};
enum MACRO_ODT {ODT_MENU = 1,ODT_LISTBOX = 2,ODT_COMBOBOX = 3,ODT_BUTTON = 4,ODT_STATIC = 5,};
enum MACRO_OFN {OFN_ALLOWMULTISELECT = 512,OFN_CREATEPROMPT = 8192,OFN_ENABLEHOOK = 32,OFN_ENABLETEMPLATE = 64,OFN_ENABLETEMPLATEHANDLE = 128,OFN_EXPLORER = 524288,OFN_EXTENSIONDIFFERENT = 1024,OFN_FILEMUSTEXIST = 4096,OFN_HIDEREADONLY = 4,OFN_LONGNAMES = 2097152,OFN_NOCHANGEDIR = 8,OFN_NODEREFERENCELINKS = 1048576,OFN_NOLONGNAMES = 262144,OFN_NONETWORKBUTTON = 131072,OFN_NOREADONLYRETURN = 32768,OFN_NOTESTFILECREATE = 65536,OFN_NOVALIDATE = 256,OFN_OVERWRITEPROMPT = 2,OFN_PATHMUSTEXIST = 2048,OFN_READONLY = 1,OFN_SHAREAWARE = 16384,OFN_SHOWHELP = 16,OFN_SHAREFALLTHROUGH = 2,OFN_SHARENOWARN = 1,OFN_SHAREWARN = 0,};
enum MACRO_OFS {OFS_MAXPATHNAME = 128,};
enum MACRO_ONE {ONE_DAY = 86400,};
enum MACRO_OPF {OPF_OBJECTISLINK = 1,OPF_NOFILLDEFAULT = 2,OPF_SHOWHELP = 4,OPF_DISABLECONVERT = 8,};
enum MACRO_OUT {OUT_DEFAULT_PRECIS = 0,OUT_STRING_PRECIS = 1,OUT_CHARACTER_PRECIS = 2,OUT_STROKE_PRECIS = 3,OUT_TT_PRECIS = 4,OUT_DEVICE_PRECIS = 5,OUT_RASTER_PRECIS = 6,OUT_TT_ONLY_PRECIS = 7,OUT_OUTLINE_PRECIS = 8,};
enum MACRO_PAN {PAN_FAMILYTYPE_INDEX = 0,PAN_SERIFSTYLE_INDEX = 1,PAN_WEIGHT_INDEX = 2,PAN_PROPORTION_INDEX = 3,PAN_CONTRAST_INDEX = 4,PAN_STROKEVARIATION_INDEX = 5,PAN_ARMSTYLE_INDEX = 6,PAN_LETTERFORM_INDEX = 7,PAN_MIDLINE_INDEX = 8,PAN_XHEIGHT_INDEX = 9,PAN_CULTURE_LATIN = 0,PAN_ANY = 0,PAN_NO_FIT = 1,PAN_FAMILY_TEXT_DISPLAY = 2,PAN_FAMILY_SCRIPT = 3,PAN_FAMILY_DECORATIVE = 4,PAN_FAMILY_PICTORIAL = 5,PAN_SERIF_COVE = 2,PAN_SERIF_OBTUSE_COVE = 3,PAN_SERIF_SQUARE_COVE = 4,PAN_SERIF_OBTUSE_SQUARE_COVE = 5,PAN_SERIF_SQUARE = 6,PAN_SERIF_THIN = 7,PAN_SERIF_BONE = 8,PAN_SERIF_EXAGGERATED = 9,PAN_SERIF_TRIANGLE = 10,PAN_SERIF_NORMAL_SANS = 11,PAN_SERIF_OBTUSE_SANS = 12,PAN_SERIF_PERP_SANS = 13,PAN_SERIF_FLARED = 14,PAN_SERIF_ROUNDED = 15,PAN_WEIGHT_VERY_LIGHT = 2,PAN_WEIGHT_LIGHT = 3,PAN_WEIGHT_THIN = 4,PAN_WEIGHT_BOOK = 5,PAN_WEIGHT_MEDIUM = 6,PAN_WEIGHT_DEMI = 7,PAN_WEIGHT_BOLD = 8,PAN_WEIGHT_HEAVY = 9,PAN_WEIGHT_BLACK = 10,PAN_WEIGHT_NORD = 11,PAN_PROP_OLD_STYLE = 2,PAN_PROP_MODERN = 3,PAN_PROP_EVEN_WIDTH = 4,PAN_PROP_EXPANDED = 5,PAN_PROP_CONDENSED = 6,PAN_PROP_VERY_EXPANDED = 7,PAN_PROP_VERY_CONDENSED = 8,PAN_PROP_MONOSPACED = 9,PAN_CONTRAST_NONE = 2,PAN_CONTRAST_VERY_LOW = 3,PAN_CONTRAST_LOW = 4,PAN_CONTRAST_MEDIUM_LOW = 5,PAN_CONTRAST_MEDIUM = 6,PAN_CONTRAST_MEDIUM_HIGH = 7,PAN_CONTRAST_HIGH = 8,PAN_CONTRAST_VERY_HIGH = 9,PAN_STROKE_GRADUAL_DIAG = 2,PAN_STROKE_GRADUAL_TRAN = 3,PAN_STROKE_GRADUAL_VERT = 4,PAN_STROKE_GRADUAL_HORZ = 5,PAN_STROKE_RAPID_VERT = 6,PAN_STROKE_RAPID_HORZ = 7,PAN_STROKE_INSTANT_VERT = 8,PAN_STRAIGHT_ARMS_HORZ = 2,PAN_STRAIGHT_ARMS_WEDGE = 3,PAN_STRAIGHT_ARMS_VERT = 4,PAN_STRAIGHT_ARMS_SINGLE_SERIF = 5,PAN_STRAIGHT_ARMS_DOUBLE_SERIF = 6,PAN_BENT_ARMS_HORZ = 7,PAN_BENT_ARMS_WEDGE = 8,PAN_BENT_ARMS_VERT = 9,PAN_BENT_ARMS_SINGLE_SERIF = 10,PAN_BENT_ARMS_DOUBLE_SERIF = 11,PAN_LETT_NORMAL_CONTACT = 2,PAN_LETT_NORMAL_WEIGHTED = 3,PAN_LETT_NORMAL_BOXED = 4,PAN_LETT_NORMAL_FLATTENED = 5,PAN_LETT_NORMAL_ROUNDED = 6,PAN_LETT_NORMAL_OFF_CENTER = 7,PAN_LETT_NORMAL_SQUARE = 8,PAN_LETT_OBLIQUE_CONTACT = 9,PAN_LETT_OBLIQUE_WEIGHTED = 10,PAN_LETT_OBLIQUE_BOXED = 11,PAN_LETT_OBLIQUE_FLATTENED = 12,PAN_LETT_OBLIQUE_ROUNDED = 13,PAN_LETT_OBLIQUE_OFF_CENTER = 14,PAN_LETT_OBLIQUE_SQUARE = 15,PAN_MIDLINE_STANDARD_TRIMMED = 2,PAN_MIDLINE_STANDARD_POINTED = 3,PAN_MIDLINE_STANDARD_SERIFED = 4,PAN_MIDLINE_HIGH_TRIMMED = 5,PAN_MIDLINE_HIGH_POINTED = 6,PAN_MIDLINE_HIGH_SERIFED = 7,PAN_MIDLINE_CONSTANT_TRIMMED = 8,PAN_MIDLINE_CONSTANT_POINTED = 9,PAN_MIDLINE_CONSTANT_SERIFED = 10,PAN_MIDLINE_LOW_TRIMMED = 11,PAN_MIDLINE_LOW_POINTED = 12,PAN_MIDLINE_LOW_SERIFED = 13,PAN_XHEIGHT_CONSTANT_SMALL = 2,PAN_XHEIGHT_CONSTANT_STD = 3,PAN_XHEIGHT_CONSTANT_LARGE = 4,PAN_XHEIGHT_DUCKING_SMALL = 5,PAN_XHEIGHT_DUCKING_STD = 6,PAN_XHEIGHT_DUCKING_LARGE = 7,};
enum MACRO_PBM {PBM_SETRANGE = 1025,PBM_SETPOS = 1026,PBM_DELTAPOS = 1027,PBM_SETSTEP = 1028,PBM_STEPIT = 1029,PBM_SETRANGE32 = 1030,PBM_GETRANGE = 1031,PBM_GETPOS = 1032,PBM_SETBARCOLOR = 1033,};
enum MACRO_PBS {PBS_SMOOTH = 1,PBS_VERTICAL = 4,};
enum MACRO_PBT {PBT_APMQUERYSUSPEND = 0,PBT_APMQUERYSTANDBY = 1,PBT_APMQUERYSUSPENDFAILED = 2,PBT_APMQUERYSTANDBYFAILED = 3,PBT_APMSUSPEND = 4,PBT_APMSTANDBY = 5,PBT_APMRESUMECRITICAL = 6,PBT_APMRESUMESUSPEND = 8,PBT_APMRESUMESTANDBY = 8,};
enum MACRO_PCF {PCF_DTRDSR = 1,PCF_RTSCTS = 2,PCF_RLSD = 4,PCF_PARITY_CHECK = 8,PCF_XONXOFF = 16,PCF_SETXCHAR = 32,PCF_TOTALTIMEOUTS = 64,PCF_INTTIMEOUTS = 128,PCF_SPECIALCHARS = 256,PCF_16BITMODE = 512,};
enum MACRO_PCI {PCI_OPTIONS_USE_BIOS = 1,PCI_OPTIONS_USE_IRQ_STEERING = 2,PCI_FLAG_NO_VIDEO_IRQ = 1,PCI_FLAG_PCMCIA_WANT_IRQ = 2,PCI_FLAG_DUAL_IDE = 4,PCI_FLAG_NO_ENUM_AT_ALL = 8,PCI_FLAG_ENUM_NO_RESOURCE = 16,PCI_FLAG_NEED_DWORD_ACCESS = 32,PCI_FLAG_SINGLE_FUNCTION = 64,PCI_FLAG_ALWAYS_ENABLED = 128,PCI_FLAG_IS_IDE = 256,PCI_FLAG_IS_VIDEO = 512,PCI_FLAG_FAIL_START = 1024,};
enum MACRO_PEN {BLACK_PEN = 7,NULL_PEN = 8,WHITE_PEN = 6,};
enum MACRO_PFA {PFA_LEFT = 1,PFA_RIGHT = 2,PFA_CENTER = 3,};
enum MACRO_PFD {PFD_TYPE_RGBA = 0,PFD_TYPE_COLORINDEX = 1,PFD_MAIN_PLANE = 0,PFD_OVERLAY_PLANE = 1,PFD_UNDERLAY_PLANE = -1,PFD_DOUBLEBUFFER = 1,PFD_STEREO = 2,PFD_DRAW_TO_WINDOW = 4,PFD_DRAW_TO_BITMAP = 8,PFD_SUPPORT_GDI = 16,PFD_SUPPORT_OPENGL = 32,PFD_GENERIC_FORMAT = 64,PFD_NEED_PALETTE = 128,PFD_NEED_SYSTEM_PALETTE = 256,PFD_SWAP_EXCHANGE = 512,PFD_SWAP_COPY = 1024,PFD_DOUBLEBUFFER_DONTCARE = 1073741824,PFD_STEREO_DONTCARE = -2147483648,};
enum MACRO_PFL {PFL_MULTIPLE_PROTO_ENTRIES = 0x1,PFL_RECOMMENDED_PROTO_ENTRY = 0x2,PFL_HIDDEN = 0x4,PFL_MATCHES_PROTOCOL_ZERO = 0x8,};
enum MACRO_PFM {PFM_ALIGNMENT = 8,PFM_NUMBERING = 32,PFM_OFFSET = 4,PFM_OFFSETINDENT = -2147483648,PFM_RIGHTINDENT = 2,PFM_STARTINDENT = 1,PFM_TABSTOPS = 16,};
enum MACRO_PFN {PFN_BULLET = 1,};
enum MACRO_PRF {PRF_CHECKVISIBLE = 1,PRF_NONCLIENT = 2,PRF_CLIENT = 4,PRF_ERASEBKGND = 8,PRF_CHILDREN = 16,PRF_OWNED = 32,};
enum MACRO_PSD {PSD_DEFAULTMINMARGINS = 0,PSD_INWININIINTLMEASURE = 0,PSD_MINMARGINS = 1,PSD_MARGINS = 2,PSD_INTHOUSANDTHSOFINCHES = 4,PSD_INHUNDREDTHSOFMILLIMETERS = 8,PSD_DISABLEMARGINS = 16,PSD_DISABLEPRINTER = 32,PSD_NOWARNING = 128,PSD_DISABLEORIENTATION = 256,PSD_DISABLEPAPER = 512,PSD_RETURNDEFAULT = 1024,PSD_SHOWHELP = 2048,PSD_ENABLEPAGESETUPHOOK = 8192,PSD_ENABLEPAGESETUPTEMPLATE = 32768,PSD_ENABLEPAGESETUPTEMPLATEHANDLE = 131072,PSD_ENABLEPAGEPAINTHOOK = 262144,PSD_DISABLEPAGEPAINTING = 524288,};
enum MACRO_PSF {PSF_SHOWHELP = 1,PSF_SELECTPASTE = 2,PSF_SELECTPASTELINK = 4,PSF_CHECKDISPLAYASICON = 8,PSF_DISABLEDISPLAYASICON = 16,PSF_HIDECHANGEICON = 32,PSF_STAYONCLIPBOARDCHANGE = 64,PSF_NOREFRESHDATAOBJECT = 128,};
enum MACRO_PSH {PSH_DEFAULT = 0,PSH_PROPTITLE = 1,PSH_USEHICON = 2,PSH_USEICONID = 4,PSH_PROPSHEETPAGE = 8,PSH_WIZARD = 32,PSH_USEPSTARTPAGE = 64,PSH_NOAPPLYNOW = 128,PSH_USECALLBACK = 256,PSH_HASHELP = 512,PSH_MODELESS = 1024,PSH_RTLREADING = 2048,};
enum MACRO_PSI {PSI_SETACTIVE = 1,PSI_KILLACTIVE = 2,PSI_APPLY = 3,PSI_RESET = 4,PSI_HASHELP = 5,PSI_HELP = 6,PSI_CHANGED = 1,PSI_GUISTART = 2,PSI_REBOOT = 3,PSI_GETSIBLINGS = 4,};
enum MACRO_PSM {PSM_PAGEINFO = 1124,PSM_SHEETINFO = 1125,};
enum MACRO_PSN {PSN_FIRST = -200,PSN_LAST = -299,PSN_APPLY = -202,PSN_HELP = -205,PSN_KILLACTIVE = -201,PSN_QUERYCANCEL = -209,PSN_RESET = -203,PSN_SETACTIVE = -200,PSN_WIZBACK = -206,PSN_WIZFINISH = -208,PSN_WIZNEXT = -207,};
enum MACRO_PSP {PSP_DEFAULT = 0,PSP_DLGINDIRECT = 1,PSP_USEHICON = 2,PSP_USEICONID = 4,PSP_USETITLE = 8,PSP_RTLREADING = 16,PSP_HASHELP = 32,PSP_USEREFPARENT = 64,PSP_USECALLBACK = 128,};
enum MACRO_PST {PST_UNSPECIFIED = 0,PST_RS232 = 1,PST_PARALLELPORT = 2,PST_RS422 = 3,PST_RS423 = 4,PST_RS449 = 5,PST_MODEM = 6,PST_FAX = 33,PST_SCANNER = 34,PST_NETWORK_BRIDGE = 256,PST_LAT = 257,PST_TCPIP_TELNET = 258,PST_X25 = 259,};
enum MACRO_PVD {PVD_CONFIG = 0x3001,};
enum MACRO_PWR {PWR_OK = 1,PWR_FAIL = -1,PWR_SUSPENDREQUEST = 1,PWR_SUSPENDRESUME = 2,PWR_CRITICALRESUME = 3,};
enum MACRO_QDI {QDI_SETDIBITS = 1,QDI_GETDIBITS = 2,QDI_DIBTOSCREEN = 4,QDI_STRETCHDIB = 8,};
enum MACRO_QID {QID_SYNC = 0xFFFFFFFF,};
enum MACRO_RBS {RBS_TOOLTIPS = 256,RBS_VARHEIGHT = 512,RBS_BANDBORDERS = 1024,RBS_FIXEDORDER = 2048,};
enum MACRO_RDH {RDH_RECTANGLES = 1,};
enum MACRO_RDW {RDW_ERASE = 4,RDW_FRAME = 1024,RDW_INTERNALPAINT = 2,RDW_INVALIDATE = 1,RDW_NOERASE = 32,RDW_NOFRAME = 2048,RDW_NOINTERNALPAINT = 16,RDW_VALIDATE = 8,RDW_ERASENOW = 512,RDW_UPDATENOW = 256,RDW_ALLCHILDREN = 128,RDW_NOCHILDREN = 64,};
enum MACRO_REG {REG_WHOLE_HIVE_VOLATILE = 1,REG_REFRESH_HIVE = 2,REG_NO_LAZY_FLUSH = 4,REG_OPTION_RESERVED = 0,REG_OPTION_NON_VOLATILE = 0,REG_OPTION_VOLATILE = 1,REG_OPTION_CREATE_LINK = 2,REG_OPTION_BACKUP_RESTORE = 4,REG_OPTION_OPEN_LINK = 8,REG_LEGAL_OPTION = 15,};
enum MACRO_REO {REO_GETOBJ_NO_INTERFACES = 0,REO_GETOBJ_POLEOBJ = 1,REO_GETOBJ_PSTG = 2,REO_GETOBJ_POLESITE = 4,REO_GETOBJ_ALL_INTERFACES = 7,REO_CP_SELECTION = 4294967295,REO_IOB_SELECTION = 4294967295,REO_IOB_USE_CP = 4294967294,REO_NULL = 0,REO_READWRITEMASK = 63,REO_DONTNEEDPALETTE = 32,REO_BLANK = 16,REO_DYNAMICSIZE = 8,REO_INVERTEDSELECT = 4,REO_BELOWBASELINE = 2,REO_RESIZABLE = 1,REO_LINK = -2147483648,REO_STATIC = 1073741824,REO_SELECTED = 134217728,REO_OPEN = 67108864,REO_INPLACEACTIVE = 33554432,REO_HILITED = 16777216,REO_LINKAVAILABLE = 8388608,REO_GETMETAFILE = 4194304,};
enum MACRO_RGB {RGB_GAMMA_MIN = 2500,RGB_GAMMA_MAX = 65000,};
enum MACRO_RGN {RGN_AND = 1,RGN_COPY = 5,RGN_DIFF = 4,RGN_OR = 2,RGN_XOR = 3,};
enum MACRO_RPC {RPC_C_BINDING_INFINITE_TIMEOUT = 10,RPC_C_BINDING_MIN_TIMEOUT = 0,RPC_C_BINDING_DEFAULT_TIMEOUT = 5,RPC_C_BINDING_MAX_TIMEOUT = 9,RPC_C_CANCEL_INFINITE_TIMEOUT = -1,RPC_C_LISTEN_MAX_CALLS_DEFAULT = 1234,RPC_C_PROTSEQ_MAX_REQS_DEFAULT = 10,RPC_C_BIND_TO_ALL_NICS = 1,RPC_C_USE_INTERNET_PORT = 1,RPC_C_USE_INTRANET_PORT = 2,RPC_C_STATS_CALLS_IN = 0,RPC_C_STATS_CALLS_OUT = 1,RPC_C_STATS_PKTS_IN = 2,RPC_C_STATS_PKTS_OUT = 3,RPC_IF_AUTOLISTEN = 1,RPC_IF_OLE = 2,RPC_C_MGMT_INQ_IF_IDS = 0,RPC_C_MGMT_INQ_PRINC_NAME = 1,RPC_C_MGMT_INQ_STATS = 2,RPC_C_MGMT_IS_SERVER_LISTEN = 3,RPC_C_MGMT_STOP_SERVER_LISTEN = 4,RPC_C_EP_ALL_ELTS = 0,RPC_C_EP_MATCH_BY_IF = 1,RPC_C_EP_MATCH_BY_OBJ = 2,RPC_C_EP_MATCH_BY_BOTH = 3,RPC_C_VERS_ALL = 1,RPC_C_VERS_COMPATIBLE = 2,RPC_C_VERS_EXACT = 3,RPC_C_VERS_MAJOR_ONLY = 4,RPC_C_VERS_UPTO = 5,};
enum MACRO_RTL {RTL_CRITSECT_TYPE = 0,RTL_RESOURCE_TYPE = 1,};
enum MACRO_RTS {RTS_CONTROL_DISABLE = 0,RTS_CONTROL_ENABLE = 1,RTS_CONTROL_HANDSHAKE = 2,RTS_CONTROL_TOGGLE = 3,};
enum MACRO_SBM {SBM_ENABLE_ARROWS = 228,SBM_GETPOS = 225,SBM_GETRANGE = 227,SBM_GETSCROLLINFO = 234,SBM_SETPOS = 224,SBM_SETRANGE = 226,SBM_SETRANGEREDRAW = 230,SBM_SETSCROLLINFO = 233,};
enum MACRO_SBS {SBS_BOTTOMALIGN = 4,SBS_HORZ = 0,SBS_LEFTALIGN = 2,SBS_RIGHTALIGN = 4,SBS_SIZEBOX = 8,SBS_SIZEBOXBOTTOMRIGHTALIGN = 4,SBS_SIZEBOXTOPLEFTALIGN = 2,SBS_SIZEGRIP = 16,SBS_TOPALIGN = 2,SBS_VERT = 1,};
enum MACRO_SBT {SBT_OWNERDRAW = 0x1000,SBT_NOBORDERS = 0x100,SBT_POPOUT = 0x200,SBT_RTLREADING = 0x400,};
enum MACRO_SCF {SCF_DEFAULT = 0,SCF_SELECTION = 1,SCF_WORD = 2,SCF_ALL = 4,SCF_USEUIRULES = 8,};
enum MACRO_SCS {SCS_32BIT_BINARY = 0,SCS_DOS_BINARY = 1,SCS_OS216_BINARY = 5,SCS_PIF_BINARY = 3,SCS_POSIX_BINARY = 4,SCS_WOW_BINARY = 2,};
enum MACRO_SEC {SEC_FILE = 0x800000,SEC_IMAGE = 0x1000000,SEC_VLM = 0x2000000,SEC_RESERVE = 0x4000000,SEC_COMMIT = 0x8000000,SEC_NOCACHE = 0x10000000,};
enum MACRO_SEE {SEE_MASK_CLASSNAME = 1,SEE_MASK_CLASSKEY = 3,SEE_MASK_IDLIST = 4,SEE_MASK_INVOKEIDLIST = 12,SEE_MASK_ICON = 16,SEE_MASK_HOTKEY = 32,SEE_MASK_NOCLOSEPROCESS = 64,SEE_MASK_CONNECTNETDRV = 128,SEE_MASK_FLAG_DDEWAIT = 256,SEE_MASK_DOENVSUBST = 512,SEE_MASK_FLAG_NO_UI = 1024,SEE_MASK_UNICODE = 65536,};
enum MACRO_SEL {SEL_EMPTY = 0,SEL_TEXT = 1,SEL_OBJECT = 2,SEL_MULTICHAR = 4,SEL_MULTIOBJECT = 8,};
enum MACRO_SEM {SEM_FAILCRITICALERRORS = 1,SEM_NOALIGNMENTFAULTEXCEPT = 4,SEM_NOGPFAULTERRORBOX = 2,SEM_NOOPENFILEERRORBOX = 32768,};
enum MACRO_SEP {SEP_CHAR = 44,SEP_WCHAR = 44,};
enum MACRO_SET {SET_TAPE_MEDIA_INFORMATION = 0,SET_TAPE_DRIVE_INFORMATION = 1,};
enum MACRO_SFF {SFF_PLAINRTF = 0x4000,SFF_SELECTION = 0x8000,};
enum MACRO_SHI {SHI_USES_UNLIMITED = 4294967295,};
enum MACRO_SIF {SIF_ALL = 23,SIF_PAGE = 2,SIF_POS = 4,SIF_RANGE = 1,SIF_DISABLENOSCROLL = 8,SIF_TRACKPOS = 16,};
enum MACRO_SIO {SIO_ASSOCIATE_HANDLE = -2013265919,SIO_ENABLE_CIRCULAR_QUEUEING = 671088642,SIO_FIND_ROUTE = 1207959555,SIO_FLUSH = 671088644,SIO_GET_BROADCAST_ADDRESS = 1207959557,SIO_GET_EXTENSION_FUNCTION_POINTER = -939524090,SIO_GET_QOS = -939524089,SIO_GET_GROUP_QOS = -939524088,SIO_MULTIPOINT_LOOPBACK = -2013265911,SIO_MULTICAST_SCOPE = -2013265910,SIO_SET_QOS = -2013265909,SIO_SET_GROUP_QOS = -2013265908,SIO_TRANSLATE_HANDLE = -939524083,};
enum MACRO_SKF {SKF_AUDIBLEFEEDBACK = 64,SKF_AVAILABLE = 2,SKF_CONFIRMHOTKEY = 8,SKF_HOTKEYACTIVE = 4,SKF_HOTKEYSOUND = 16,SKF_INDICATOR = 32,SKF_STICKYKEYSON = 1,SKF_TRISTATE = 128,SKF_TWOKEYSOFF = 256,};
enum MACRO_SLE {SLE_ERROR = 1,SLE_MINORERROR = 2,SLE_WARNING = 3,};
enum MACRO_SND {SND_SYNC = 0,SND_ASYNC = 1,SND_NODEFAULT = 2,SND_MEMORY = 4,SND_LOOP = 8,SND_NOSTOP = 16,SND_NOWAIT = 8192,SND_ALIAS = 65536,SND_ALIAS_ID = 1114112,SND_FILENAME = 131072,SND_RESOURCE = 262148,SND_PURGE = 64,SND_APPLICATION = 128,SND_ALIAS_START = 0,SND_ALIAS_SYSTEMASTERISK = 10835,SND_ALIAS_SYSTEMQUESTION = 16211,SND_ALIAS_SYSTEMHAND = 18515,SND_ALIAS_SYSTEMEXIT = 17747,SND_ALIAS_SYSTEMSTART = 21331,SND_ALIAS_SYSTEMWELCOME = 22355,SND_ALIAS_SYSTEMEXCLAMATION = 8531,SND_ALIAS_SYSTEMDEFAULT = 17491,};
enum MACRO_SOL {SOL_SOCKET = 0xFFFF,};
enum MACRO_SPI {SPI_GETACCESSTIMEOUT = 60,SPI_GETANIMATION = 72,SPI_GETBEEP = 1,SPI_GETBORDER = 5,SPI_GETDEFAULTINPUTLANG = 89,SPI_GETDRAGFULLWINDOWS = 38,SPI_GETFASTTASKSWITCH = 35,SPI_GETFILTERKEYS = 50,SPI_GETFONTSMOOTHING = 74,SPI_GETGRIDGRANULARITY = 18,SPI_GETHIGHCONTRAST = 66,SPI_GETICONMETRICS = 45,SPI_GETICONTITLELOGFONT = 31,SPI_GETICONTITLEWRAP = 25,SPI_GETKEYBOARDDELAY = 22,SPI_GETKEYBOARDPREF = 68,SPI_GETKEYBOARDSPEED = 10,SPI_GETLOWPOWERACTIVE = 83,SPI_GETLOWPOWERTIMEOUT = 79,SPI_GETMENUDROPALIGNMENT = 27,SPI_GETMINIMIZEDMETRICS = 43,SPI_GETMOUSE = 3,SPI_GETMOUSEKEYS = 54,SPI_GETMOUSETRAILS = 94,SPI_GETNONCLIENTMETRICS = 41,SPI_GETPOWEROFFACTIVE = 84,SPI_GETPOWEROFFTIMEOUT = 80,SPI_GETSCREENREADER = 70,SPI_GETSCREENSAVEACTIVE = 16,SPI_GETSCREENSAVETIMEOUT = 14,SPI_GETSERIALKEYS = 62,SPI_GETSHOWSOUNDS = 56,SPI_GETSOUNDSENTRY = 64,SPI_GETSTICKYKEYS = 58,SPI_GETTOGGLEKEYS = 52,SPI_GETWINDOWSEXTENSION = 92,SPI_GETWORKAREA = 48,SPI_ICONHORIZONTALSPACING = 13,SPI_ICONVERTICALSPACING = 24,SPI_LANGDRIVER = 12,SPI_SCREENSAVERRUNNING = 97,SPI_SETACCESSTIMEOUT = 61,SPI_SETANIMATION = 73,SPI_SETBEEP = 2,SPI_SETBORDER = 6,SPI_SETDEFAULTINPUTLANG = 90,SPI_SETDESKPATTERN = 21,SPI_SETDESKWALLPAPER = 20,SPI_SETDOUBLECLICKTIME = 32,SPI_SETDOUBLECLKHEIGHT = 30,SPI_SETDOUBLECLKWIDTH = 29,SPI_SETDRAGFULLWINDOWS = 37,SPI_SETDRAGHEIGHT = 77,SPI_SETDRAGWIDTH = 76,SPI_SETFASTTASKSWITCH = 36,SPI_SETFILTERKEYS = 51,SPI_SETFONTSMOOTHING = 75,SPI_SETGRIDGRANULARITY = 19,SPI_SETHANDHELD = 78,SPI_SETHIGHCONTRAST = 67,SPI_SETICONMETRICS = 46,SPI_SETICONTITLELOGFONT = 34,SPI_SETICONTITLEWRAP = 26,SPI_SETKEYBOARDDELAY = 23,SPI_SETKEYBOARDPREF = 69,SPI_SETKEYBOARDSPEED = 11,SPI_SETLANGTOGGLE = 91,SPI_SETLOWPOWERACTIVE = 85,SPI_SETLOWPOWERTIMEOUT = 81,SPI_SETMENUDROPALIGNMENT = 28,SPI_SETMINIMIZEDMETRICS = 44,SPI_SETMOUSE = 4,SPI_SETMOUSEBUTTONSWAP = 33,SPI_SETMOUSEKEYS = 55,SPI_SETMOUSETRAILS = 93,SPI_SETNONCLIENTMETRICS = 42,SPI_SETPENWINDOWS = 49,SPI_SETPOWEROFFACTIVE = 86,SPI_SETPOWEROFFTIMEOUT = 82,SPI_SETSCREENREADER = 71,SPI_SETSCREENSAVEACTIVE = 17,SPI_SETSCREENSAVETIMEOUT = 15,SPI_SETSERIALKEYS = 63,SPI_SETSHOWSOUNDS = 57,SPI_SETSOUNDSENTRY = 65,SPI_SETSTICKYKEYS = 59,SPI_SETTOGGLEKEYS = 53,SPI_SETWORKAREA = 47,};
enum MACRO_SSF {SSF_AVAILABLE = 2,SSF_SOUNDSENTRYON = 1,};
enum MACRO_STD {STD_INPUT_HANDLE = 0xFFFFFFF6,STD_OUTPUT_HANDLE = 0xFFFFFFF5,STD_ERROR_HANDLE = 0xFFFFFFF4,};
enum MACRO_STG {STG_TOEND = 0xFFFFFFFF,STG_LAYOUT_SEQUENTIAL = 0x0,STG_LAYOUT_INTERLEAVED = 0x1,};
enum MACRO_STM {STM_GETICON = 369,STM_GETIMAGE = 371,STM_SETICON = 368,STM_SETIMAGE = 370,};
enum MACRO_STN {STN_CLICKED = 0,STN_DBLCLK = 1,STN_DISABLE = 3,STN_ENABLE = 2,};
enum MACRO_SUF {SUF_FIRSTTIME = 1,SUF_EXPRESS = 2,SUF_BATCHINF = 4,SUF_CLEAN = 8,SUF_INSETUP = 16,SUF_NETSETUP = 32,SUF_NETHDBOOT = 64,SUF_NETRPLBOOT = 128,SUF_SBSCOPYOK = 256,};
enum MACRO_SWP {SWP_DRAWFRAME = 32,SWP_FRAMECHANGED = 32,SWP_HIDEWINDOW = 128,SWP_NOACTIVATE = 16,SWP_NOCOPYBITS = 256,SWP_NOMOVE = 2,SWP_NOSIZE = 1,SWP_NOREDRAW = 8,SWP_NOZORDER = 4,SWP_SHOWWINDOW = 64,SWP_NOOWNERZORDER = 512,SWP_NOREPOSITION = 512,SWP_NOSENDCHANGING = 1024,SWP_DEFERERASE = 8192,SWP_ASYNCWINDOWPOS = 16384,};
enum MACRO_TBM {TBM_GETPOS = 1024,TBM_GETRANGEMIN = 1025,TBM_GETRANGEMAX = 1026,TBM_GETTIC = 1027,TBM_SETTIC = 1028,TBM_SETPOS = 1029,TBM_SETRANGE = 1030,TBM_SETRANGEMIN = 1031,TBM_SETRANGEMAX = 1032,TBM_CLEARTICS = 1033,TBM_SETSEL = 1034,TBM_SETSELSTART = 1035,TBM_SETSELEND = 1036,TBM_GETPTICS = 1038,TBM_GETTICPOS = 1039,TBM_GETNUMTICS = 1040,TBM_GETSELSTART = 1041,TBM_GETSELEND = 1042,TBM_CLEARSEL = 1043,TBM_SETTICFREQ = 1044,TBM_SETPAGESIZE = 1045,TBM_GETPAGESIZE = 1046,TBM_SETLINESIZE = 1047,TBM_GETLINESIZE = 1048,TBM_GETTHUMBRECT = 1049,TBM_GETCHANNELRECT = 1050,TBM_SETTHUMBLENGTH = 1051,TBM_GETTHUMBLENGTH = 1052,};
enum MACRO_TBN {TBN_FIRST = -700,TBN_LAST = -720,};
enum MACRO_TBS {TBS_AUTOTICKS = 1,TBS_VERT = 2,TBS_HORZ = 0,TBS_TOP = 4,TBS_BOTTOM = 0,TBS_LEFT = 4,TBS_RIGHT = 0,TBS_BOTH = 8,TBS_NOTICKS = 16,TBS_ENABLESELRANGE = 32,TBS_FIXEDLENGTH = 64,TBS_NOTHUMB = 128,};
enum MACRO_TCI {TCI_SRCCHARSET = 1,TCI_SRCCODEPAGE = 2,TCI_SRCFONTSIG = 3,};
enum MACRO_TCM {TCM_FIRST = 0x1300,TCM_GETIMAGELIST = 0x1302,TCM_SETIMAGELIST = 0x1303,TCM_GETITEMCOUNT = 0x1304,TCM_GETITEMA = 0x1305,TCM_GETITEMW = 0x133C,TCM_SETITEMA = 0x1306,TCM_SETITEMW = 0x133D,TCM_INSERTITEMA = 0x1307,TCM_INSERTITEMW = 0x133E,TCM_DELETEITEM = 0x1308,TCM_DELETEALLITEMS = 0x1309,TCM_GETITEMRECT = 0x130A,TCM_GETCURSEL = 0x130B,TCM_SETCURSEL = 0x130C,TCM_HITTEST = 0x130D,TCM_SETITEMEXTRA = 0x130E,TCM_ADJUSTRECT = 0x1328,TCM_SETITEMSIZE = 0x1329,TCM_REMOVEIMAGE = 0x132A,TCM_SETPADDING = 0x132B,TCM_GETROWCOUNT = 0x132C,TCM_GETTOOLTIPS = 0x132D,TCM_SETTOOLTIPS = 0x132E,TCM_GETCURFOCUS = 0x132F,TCM_SETCURFOCUS = 0x1330,};
enum MACRO_TCN {TCN_FIRST = -550,TCN_LAST = -580,};
enum MACRO_TCP {TCP_NODELAY = 0x1,TCP_BSDURGENT = 0x7000,};
enum MACRO_TCS {TCS_FORCEICONLEFT = 16,TCS_FORCELABELLEFT = 32,TCS_TABS = 0,TCS_BUTTONS = 256,TCS_SINGLELINE = 0,TCS_MULTILINE = 512,TCS_RIGHTJUSTIFY = 0,TCS_FIXEDWIDTH = 1024,TCS_RAGGEDRIGHT = 2048,TCS_FOCUSONBUTTONDOWN = 4096,TCS_OWNERDRAWFIXED = 8192,TCS_TOOLTIPS = 16384,TCS_FOCUSNEVER = 32768,};
enum MACRO_TKF {TKF_AVAILABLE = 2,TKF_CONFIRMHOTKEY = 8,TKF_HOTKEYACTIVE = 4,TKF_HOTKEYSOUND = 16,TKF_TOGGLEKEYSON = 1,};
enum MACRO_TLS {TLS_MINIMUM_AVAILABLE = 64,};
enum MACRO_TME {TME_HOVER = 1,TME_LEAVE = 2,TME_QUERY = 1073741824,TME_CANCEL = -2147483648,};
enum MACRO_TPM {TPM_CENTERALIGN = 4,TPM_LEFTALIGN = 0,TPM_RIGHTALIGN = 8,TPM_LEFTBUTTON = 0,TPM_RIGHTBUTTON = 2,TPM_HORIZONTAL = 0,TPM_VERTICAL = 64,TPM_TOPALIGN = 0,TPM_VCENTERALIGN = 16,TPM_BOTTOMALIGN = 32,TPM_NONOTIFY = 128,TPM_RETURNCMD = 256,};
enum MACRO_TRY {TRY_AGAIN = 11002,};
enum MACRO_TTF {TTF_IDISHWND = 1,TTF_CENTERTIP = 2,TTF_RTLREADING = 4,TTF_SUBCLASS = 16,};
enum MACRO_TTM {TTM_ACTIVATE = 1025,TTM_SETDELAYTIME = 1027,TTM_ADDTOOLA = 1028,TTM_ADDTOOLW = 1074,TTM_DELTOOLA = 1029,TTM_DELTOOLW = 1075,TTM_NEWTOOLRECTA = 1030,TTM_NEWTOOLRECTW = 1076,TTM_RELAYEVENT = 1031,TTM_GETTOOLINFOA = 1032,TTM_GETTOOLINFOW = 1077,TTM_SETTOOLINFOA = 1033,TTM_SETTOOLINFOW = 1078,TTM_HITTESTA = 1034,TTM_HITTESTW = 1079,TTM_GETTEXTA = 1035,TTM_GETTEXTW = 1080,TTM_UPDATETIPTEXTA = 1036,TTM_UPDATETIPTEXTW = 1081,TTM_GETTOOLCOUNT = 1037,TTM_ENUMTOOLSA = 1038,TTM_ENUMTOOLSW = 1082,TTM_GETCURRENTTOOLA = 1039,TTM_GETCURRENTTOOLW = 1083,TTM_WINDOWFROMPOINT = 1040,};
enum MACRO_TTN {TTN_FIRST = -520,TTN_LAST = -549,};
enum MACRO_TTS {TTS_ALWAYSTIP = 1,TTS_NOPREFIX = 2,};
enum MACRO_TVC {TVC_UNKNOWN = 0,TVC_BYMOUSE = 1,TVC_BYKEYBOARD = 2,};
enum MACRO_TVE {TVE_COLLAPSE = 1,TVE_EXPAND = 2,TVE_TOGGLE = 3,TVE_COLLAPSERESET = 32768,};
enum MACRO_TVM {TVM_INSERTITEMA = 4352,TVM_INSERTITEMW = 4402,TVM_DELETEITEM = 4353,TVM_EXPAND = 4354,TVM_GETITEMRECT = 4356,TVM_GETCOUNT = 4357,TVM_GETINDENT = 4358,TVM_SETINDENT = 4359,TVM_GETIMAGELIST = 4360,TVM_SETIMAGELIST = 4361,TVM_GETNEXTITEM = 4362,TVM_SELECTITEM = 4363,TVM_GETITEMA = 4364,TVM_GETITEMW = 4414,TVM_SETITEMA = 4365,TVM_SETITEMW = 4415,TVM_EDITLABELA = 4366,TVM_EDITLABELW = 4417,TVM_GETEDITCONTROL = 4367,TVM_GETVISIBLECOUNT = 4368,TVM_HITTEST = 4369,TVM_CREATEDRAGIMAGE = 4370,TVM_SORTCHILDREN = 4371,TVM_ENSUREVISIBLE = 4372,TVM_SORTCHILDRENCB = 4373,TVM_ENDEDITLABELNOW = 4374,TVM_GETISEARCHSTRINGA = 4375,TVM_GETISEARCHSTRINGW = 4416,};
enum MACRO_TVN {TVN_FIRST = -400,TVN_LAST = -499,};
enum MACRO_TVS {TVS_HASBUTTONS = 1,TVS_HASLINES = 2,TVS_LINESATROOT = 4,TVS_EDITLABELS = 8,TVS_DISABLEDRAGDROP = 16,TVS_SHOWSELALWAYS = 32,};
enum MACRO_UAS {UAS_ROLE_STANDALONE = 0,UAS_ROLE_MEMBER = 1,UAS_ROLE_BACKUP = 2,UAS_ROLE_PRIMARY = 3,};
enum MACRO_UDM {UDM_SETRANGE = 1125,UDM_GETRANGE = 1126,UDM_SETPOS = 1127,UDM_GETPOS = 1128,UDM_SETBUDDY = 1129,UDM_GETBUDDY = 1130,UDM_SETACCEL = 1131,UDM_GETACCEL = 1132,UDM_SETBASE = 1133,UDM_GETBASE = 1134,};
enum MACRO_UDN {UDN_FIRST = -721,UDN_LAST = -740,};
enum MACRO_UDS {UDS_WRAP = 1,UDS_SETBUDDYINT = 2,UDS_ALIGNRIGHT = 4,UDS_ALIGNLEFT = 8,UDS_AUTOBUDDY = 16,UDS_ARROWKEYS = 32,UDS_HORZ = 64,UDS_NOTHOUSANDS = 128,};
enum MACRO_UOI {UOI_FLAGS = 1,UOI_NAME = 2,UOI_TYPE = 3,UOI_USER_SID = 4,};
enum MACRO_URL {URL_E_INVALID_SYNTAX = 0x80041001,URL_E_UNREGISTERED_PROTOCOL = 0x80041002,};
enum MACRO_USE {USE_SPECIFIC_TRANSPORT = 0x80000000,};
enum MACRO_VAR {VAR_TIMEVALUEONLY = 0x1,VAR_DATEVALUEONLY = 0x2,};
enum MACRO_VER {VER_PLATFORM_WIN32s = 0,VER_PLATFORM_WIN32_WINDOWS = 1,VER_PLATFORM_WIN32_NT = 2,};
enum MACRO_VFF {VFF_CURNEDEST = 1,VFF_FILEINUSE = 2,VFF_BUFFTOOSMALL = 4,};
enum MACRO_VFT {VFT_UNKNOWN = 0,VFT_APP = 1,VFT_DLL = 2,VFT_DRV = 3,VFT_FONT = 4,VFT_VXD = 5,VFT_STATIC_LIB = 7,};
enum MACRO_VIF {VIF_TEMPFILE = 1,VIF_MISMATCH = 2,VIF_SRCOLD = 4,VIF_DIFFLANG = 8,VIF_DIFFCODEPG = 16,VIF_DIFFTYPE = 32,VIF_WRITEPROT = 64,VIF_FILEINUSE = 128,VIF_OUTOFSPACE = 256,VIF_ACCESSVIOLATION = 512,VIF_SHARINGVIOLATION = 1024,VIF_CANNOTCREATE = 2048,VIF_CANNOTDELETE = 4096,VIF_CANNOTRENAME = 8192,VIF_CANNOTDELETECUR = 16384,VIF_OUTOFMEMORY = 32768,VIF_CANNOTREADSRC = 65536,VIF_CANNOTREADDST = 131072,VIF_BUFFTOOSMALL = 262144,};
enum MACRO_VOS {VOS_UNKNOWN = 0,VOS_DOS = 65536,VOS_OS216 = 131072,VOS_OS232 = 196608,VOS_NT = 262144,VOS__BASE = 0,VOS__WINDOWS16 = 1,VOS__PM16 = 2,VOS__PM32 = 3,VOS__WINDOWS32 = 4,VOS_DOS_WINDOWS16 = 65537,VOS_DOS_WINDOWS32 = 65540,VOS_OS216_PM16 = 131074,VOS_OS232_PM32 = 196611,VOS_NT_WINDOWS32 = 262148,};
enum MACRO_VPF {VPF_SELECTRELATIVE = 1,VPF_DISABLERELATIVE = 2,VPF_DISABLESCALE = 4,};
enum MACRO_VTA {VTA_BASELINE = 24,VTA_CENTER = 6,VTA_LEFT = 8,VTA_RIGHT = 0,VTA_BOTTOM = 2,VTA_TOP = 0,};
enum MACRO_WBF {WBF_WORDWRAP = 16,WBF_WORDBREAK = 32,WBF_OVERFLOW = 64,WBF_LEVEL1 = 128,WBF_LEVEL2 = 256,WBF_CUSTOM = 512,};
enum MACRO_WGL {WGL_FONT_LINES = 0,WGL_FONT_POLYGONS = 1,};
enum MACRO_WIM {WIM_OPEN = 958,WIM_CLOSE = 959,WIM_DATA = 960,};
enum MACRO_WIZ {WIZ_CXDLG = 276,WIZ_CYDLG = 140,WIZ_CXBMP = 80,WIZ_BODYX = 92,WIZ_BODYCX = 184,};
enum MACRO_WOM {WOM_OPEN = 955,WOM_CLOSE = 956,WOM_DONE = 957,};
enum MACRO_WPF {WPF_RESTORETOMAXIMIZED = 2,WPF_SETMINPOSITION = 1,};
enum MACRO_WSA {WSA_E_NO_MORE = 10110,WSA_E_CANCELLED = 10111,};
enum MACRO_WSF {WSF_VISIBLE = 1,};
enum MACRO_WVR {WVR_ALIGNTOP = 16,WVR_ALIGNLEFT = 32,WVR_ALIGNBOTTOM = 64,WVR_ALIGNRIGHT = 128,WVR_HREDRAW = 256,WVR_VREDRAW = 512,WVR_REDRAW = 768,WVR_VALIDRECTS = 1024,};
enum MACRO_XP1 {XP1_CONNECTIONLESS = 0x1,XP1_GUARANTEED_DELIVERY = 0x2,XP1_GUARANTEED_ORDER = 0x4,XP1_MESSAGE_ORIENTED = 0x8,XP1_PSEUDO_STREAM = 0x10,XP1_GRACEFUL_CLOSE = 0x20,XP1_EXPEDITED_DATA = 0x40,XP1_CONNECT_DATA = 0x80,XP1_DISCONNECT_DATA = 0x100,XP1_SUPPORT_BROADCAST = 0x200,XP1_SUPPORT_MULTIPOINT = 0x400,XP1_MULTIPOINT_CONTROL_PLANE = 0x800,XP1_MULTIPOINT_DATA_PLANE = 0x1000,XP1_QOS_SUPPORTED = 0x2000,XP1_INTERRUPT = 0x4000,XP1_UNI_SEND = 0x8000,XP1_UNI_RECV = 0x10000,XP1_IFS_HANDLES = 0x20000,XP1_PARTIAL_MESSAGE = 0x40000,};
enum MACRO_XST {XST_NULL = 0,XST_INCOMPLETE = 1,XST_CONNECTED = 2,XST_INIT1 = 3,XST_INIT2 = 4,XST_REQSENT = 5,XST_DATARCVD = 6,XST_POKESENT = 7,XST_POKEACKRCVD = 8,XST_EXECSENT = 9,XST_EXECACKRCVD = 10,XST_ADVSENT = 11,XST_UNADVSENT = 12,XST_ADVACKRCVD = 13,XST_UNADVACKRCVD = 14,XST_ADVDATASENT = 15,XST_ADVDATAACKRCVD = 16,};
enum MACRO___S {__S_IFMT = 0xF000,__S_IFDIR = 0x4000,__S_IFCHR = 0x2000,__S_IFBLK = 0x6000,__S_IFREG = 0x8000,__S_IFIFO = 0x1000,__S_IFLNK = 0xA000,__S_IFSOCK = 0xC000,__S_ISUID = 0x800,__S_ISGID = 0x400,__S_ISVTX = 0x200,__S_IREAD = 0x100,__S_IWRITE = 0x80,__S_IEXEC = 0x40,};
enum MACRO_rmm {rmm = 23,};
enum MACRO_rup {rup = 639,};
typedef struct midievent_tag MIDIEVENT;
typedef struct _msgfilter MSGFILTER;
typedef struct _NMHEADERA NMHEADERA;
typedef struct _NMHEADERW NMHEADERW;
typedef struct _NM_UPDOWN NM_UPDOWN;
typedef struct _NRESARRAY NRESARRAY;
typedef struct _OFNOTIFYA OFNOTIFYA;
typedef struct _OFNOTIFYW OFNOTIFYW;
typedef struct _OLESTREAM OLESTREAM;
typedef struct tagPARAMDATA PARAMDATA;
typedef struct tagPARAMDESC PARAMDESC;
typedef struct tagAUXCAPSA *PAUXCAPSA;
typedef struct tagAUXCAPSW *PAUXCAPSW;
typedef struct tagCONVINFO *PCONVINFO;
typedef struct _devicemodeA *PDEVMODEA;
typedef struct _devicemodeW *PDEVMODEW;
typedef struct tagEMRARC *PEMRARCTO;
typedef struct tagEMRARC *PEMRCHORD;
typedef struct tagEVENTMSG *PEVENTMSG;
typedef struct _FILETIME *PFILETIME;
typedef struct _FPO_DATA *PFPO_DATA;
typedef struct _ICONINFO *PICONINFO;
typedef struct tagJOYCAPSA *PJOYCAPSA;
typedef struct tagJOYCAPSW *PJOYCAPSW;
typedef struct tagLOGFONTA *PLOGFONTA;
typedef struct tagLOGFONTW *PLOGFONTW;
typedef struct _MMCKINFO *PMMCKINFO;
typedef struct _MMIOINFO *PMMIOINFO;
typedef struct _OFSTRUCT *POFSTRUCT;
typedef struct _POLYTEXTA POLYTEXTA;
typedef struct _POLYTEXTW POLYTEXTW;
typedef struct tagPELARRAY *PPELARRAY;
typedef struct _PERF_BIN *PPERF_BIN;
typedef struct protoent *PPROTOENT;
typedef struct tagPDA PRINTDLGA;
typedef struct tagPDW PRINTDLGW;
typedef struct _PSHNOTIFY PSHNOTIFY;
typedef struct sockaddr *PSOCKADDR;
typedef struct _TBBUTTON *PTBBUTTON;
typedef struct timecaps_tag *PTIMECAPS;
typedef struct tagREBARINFO REBARINFO;
typedef struct _reqresize REQRESIZE;
typedef struct tagRGBTRIPLE RGBTRIPLE;
typedef struct _RPC_IF_ID RPC_IF_ID;
typedef struct _RSAPUBKEY RSAPUBKEY;
typedef struct tagSAFEARRAY SAFEARRAY;
typedef struct SC_HANDLE__ *SC_HANDLE;
typedef struct _selchange SELCHANGE;
typedef struct _STD_ALERT STD_ALERT;
typedef struct tagSTGMEDIUM STGMEDIUM;
typedef struct tagSTYLEBUFA STYLEBUFA;
typedef struct tagSTYLEBUFW STYLEBUFW;
typedef struct tagTBNOTIFYA TBNOTIFYA;
typedef struct tagTBNOTIFYW TBNOTIFYW;
typedef struct tagTOOLINFOA TOOLINFOA;
typedef struct tagTOOLINFOW TOOLINFOW;
typedef struct tagTPMPARAMS TPMPARAMS;
typedef struct _TV_SORTCB TV_SORTCB;
typedef struct _WINDOWPOS WINDOWPOS;
typedef struct _WNDCLASSA WNDCLASSA;
typedef struct _WNDCLASSW WNDCLASSW;
typedef char *__caddr_t;
typedef int __clock_t;
typedef int __daddr_t;
typedef int __fd_mask;
typedef signed short __int16_t;
typedef signed int __int32_t;
typedef signed long long __int64_t;
typedef unsigned int __nlink_t;
typedef int __ssize_t;
typedef int __swblk_t;
typedef void *__timer_t;
typedef unsigned short __u_short;
typedef unsigned char __uint8_t;
typedef unsigned int pthread_t;
enum tagCLSCTX {CLSCTX_INPROC_SERVER = 0x1,CLSCTX_INPROC_HANDLER = 0x2,CLSCTX_LOCAL_SERVER = 0x4,CLSCTX_INPROC_SERVER16 = 0x8,CLSCTX_REMOTE_SERVER = 0x10,};
enum tagCOINIT {COINIT_APARTMENTTHREADED = 0x2,COINIT_MULTITHREADED = 0x0,COINIT_DISABLE_OLE1DDE = 0x4,COINIT_SPEED_OVER_MEMORY = 0x8,};
enum tagMEMCTX {MEMCTX_TASK = 0x1,MEMCTX_SHARED = 0x2,MEMCTX_MACSYSTEM = 0x3,MEMCTX_UNKNOWN = 0xFFFFFFFF,MEMCTX_SAME = 0xFFFFFFFE,};
enum tagMSHCTX {MSHCTX_LOCAL = 0x0,MSHCTX_NOSHAREDMEM = 0x1,MSHCTX_DIFFERENTMACHINE = 0x2,MSHCTX_INPROC = 0x3,};
struct tagPOINTF {float x;float y;};
enum tagREGCLS {REGCLS_SINGLEUSE = 0x0,REGCLS_MULTIPLEUSE = 0x1,REGCLS_MULTI_SEPARATE = 0x2,};
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef unsigned long long u_int64_t;
typedef struct _ABCFLOAT ABCFLOAT;
typedef struct tagAUXCAPSA AUXCAPSA;
typedef struct tagAUXCAPSW AUXCAPSW;
typedef struct tagBSTRBLOB BSTRBLOB;
typedef struct tagCALPWSTR CALPWSTR;
typedef struct tagCCSTYLEA CCSTYLEA;
typedef struct tagCCSTYLEW CCSTYLEW;
typedef struct tagCLIPDATA CLIPDATA;
typedef struct _COLORMAP COLORMAP;
typedef struct _COMMPROP COMMPROP;
typedef struct tagCONVINFO CONVINFO;
typedef struct tagCUSTDATA CUSTDATA;
typedef struct _devicemodeA DEVMODEA;
typedef struct _devicemodeW DEVMODEW;
typedef struct tagDEVNAMES DEVNAMES;
typedef struct tagELEMDESC ELEMDESC;
typedef struct tagEMRARC EMRARCTO;
typedef struct tagEMRARC EMRCHORD;
typedef struct tagEVENTMSG EVENTMSG;
typedef struct _FILETIME FILETIME;
typedef struct _flowspec FLOWSPEC;
typedef struct tagFONTDESC FONTDESC;
typedef struct _FPO_DATA FPO_DATA;
typedef struct tagFUNCDESC FUNCDESC;
struct HACCEL__ {int i;};
struct HBRUSH__ {int i;};
typedef void *HCONTEXT;
typedef struct HDDEDATA__ *HDDEDATA;
typedef struct _HD_ITEMA HD_ITEMA;
typedef struct _HD_ITEMW HD_ITEMW;
typedef struct tagHELPINFO HELPINFO;
typedef struct HMIDIOUT__ *HMIDIOUT;
struct HMIXER__ {int i;};
typedef struct HMONITOR__ *HMONITOR;
typedef struct HPALETTE__ *HPALETTE;
typedef struct HWAVEOUT__ *HWAVEOUT;
struct IBindCtx {struct IBindCtxVtbl *lpVtbl;};
typedef struct _ICONINFO ICONINFO;
struct IMarshal {struct IMarshalVtbl *lpVtbl;};
struct IMoniker {struct IMonikerVtbl *lpVtbl;};
struct IPersist {struct IPersistVtbl *lpVtbl;};
struct IPicture {struct IPictureVtbl *lpVtbl;};
struct IROTData {struct IROTDataVtbl *lpVtbl;};
struct IStorage {struct IStorageVtbl *lpVtbl;};
struct ITypeLib {struct ITypeLibVtbl *lpVtbl;};
struct IUnknown {struct IUnknownVtbl *lpVtbl;};
typedef struct tagJOYCAPSA JOYCAPSA;
typedef struct tagJOYCAPSW JOYCAPSW;
typedef struct tagLOGBRUSH LOGBRUSH;
typedef struct tagLOGFONTA LOGFONTA;
typedef struct tagLOGFONTW LOGFONTW;
typedef long long LONGLONG;
typedef struct tagBITMAP *LPBITMAP;
typedef struct tagCAUUID *LPCAUUID;
typedef struct tagCIEXYZ *LPCIEXYZ;
typedef struct _cpinfo *LPCPINFO;
typedef struct fd_set *LPFD_SET;
typedef struct linger *LPLINGER;
typedef struct tagLOGPEN *LPLOGPEN;
typedef struct IMalloc *LPMALLOC;
typedef struct mmtime_tag *LPMMTIME;
typedef struct tagPOINTF *LPPOINTF;
typedef struct tagPOINT *LPPOINTL;
typedef struct tagPOINTS *LPPOINTS;
typedef struct IStream *LPSTREAM;
typedef struct _STRRET *LPSTRRET;
typedef struct tagTCITEM *LPTCITEM;
typedef struct _WSABUF *LPWSABUF;
typedef struct _LV_ITEMA LV_ITEMA;
typedef struct _LV_ITEMW LV_ITEMW;
enum MACRO_AA {AA_AUDIT_ALL = 1,AA_A_OWNER = 4,AA_CLOSE = 8,AA_S_OPEN = 16,AA_S_WRITE = 32,AA_S_CREATE = 32,AA_S_DELETE = 64,AA_S_ACL = 128,AA_S_ALL = 253,AA_F_OPEN = 256,AA_F_WRITE = 512,AA_F_CREATE = 512,AA_F_DELETE = 1024,AA_F_ACL = 2048,AA_F_ALL = 3840,AA_A_OPEN = 2048,AA_A_WRITE = 4096,AA_A_CREATE = 8192,AA_A_DELETE = 16384,AA_A_ACL = 32768,AA_A_ALL = 3840,};
enum MACRO_AC {AC_LINE_OFFLINE = 0,AC_LINE_ONLINE = 1,AC_LINE_BACKUP_POWER = 2,AC_LINE_UNKNOWN = 255,};
enum MACRO_AD {AD_COUNTERCLOCKWISE = 1,AD_CLOCKWISE = 2,};
enum MACRO_AE {AE_GUEST = 0,AE_USER = 1,AE_ADMIN = 2,AE_NORMAL = 0,AE_USERLIMIT = 0,AE_GENERAL = 0,AE_ERROR = 1,AE_SESSDIS = 1,AE_BADPW = 1,AE_AUTODIS = 2,AE_UNSHARE = 2,AE_ADMINPRIVREQD = 2,AE_ADMINDIS = 3,AE_NOACCESSPERM = 3,AE_ACCRESTRICT = 4,AE_NORMAL_CLOSE = 0,AE_SES_CLOSE = 1,AE_ADMIN_CLOSE = 2,AE_LIM_UNKNOWN = 0,AE_LIM_LOGONHOURS = 1,AE_LIM_EXPIRED = 2,AE_LIM_INVAL_WKSTA = 3,AE_LIM_DISABLED = 4,AE_LIM_DELETED = 5,AE_MOD = 0,AE_DELETE = 1,AE_ADD = 2,AE_UAS_USER = 0,AE_UAS_GROUP = 1,AE_UAS_MODALS = 2,};
enum MACRO_AF {AF_UNSPEC = 0,AF_UNIX = 1,AF_INET = 2,AF_IMPLINK = 3,AF_PUP = 4,AF_CHAOS = 5,AF_IPX = 6,AF_NS = 6,AF_ISO = 7,AF_OSI = 7,AF_ECMA = 8,AF_DATAKIT = 9,AF_CCITT = 10,AF_SNA = 11,AF_DECnet = 12,AF_DLI = 13,AF_LAT = 14,AF_HYLINK = 15,AF_APPLETALK = 16,AF_NETBIOS = 17,AF_VOICEVIEW = 18,AF_FIREFOX = 19,AF_UNKNOWN1 = 20,AF_BAN = 21,AF_ATM = 22,AF_INET6 = 23,AF_MAX = 24,};
enum MACRO_AT {AT_KEYEXCHANGE = 1,AT_SIGNATURE = 2,};
enum MACRO_BF {BF_LEFT = 1,BF_TOP = 2,BF_RIGHT = 4,BF_BOTTOM = 8,BF_TOPLEFT = 3,BF_TOPRIGHT = 6,BF_BOTTOMLEFT = 9,BF_BOTTOMRIGHT = 12,BF_RECT = 15,BF_DIAGONAL = 16,BF_DIAGONAL_ENDTOPRIGHT = 22,BF_DIAGONAL_ENDTOPLEFT = 19,BF_DIAGONAL_ENDBOTTOMLEFT = 25,BF_DIAGONAL_ENDBOTTOMRIGHT = 28,BF_MIDDLE = 2048,BF_SOFT = 4096,BF_ADJUST = 8192,BF_FLAT = 16384,BF_MONO = 32768,};
enum MACRO_BI {BI_RGB = 0,BI_RLE8 = 1,BI_RLE4 = 2,BI_BITFIELDS = 3,};
enum MACRO_BM {BM_CLICK = 245,BM_GETCHECK = 240,BM_GETIMAGE = 246,BM_GETSTATE = 242,BM_SETCHECK = 241,BM_SETIMAGE = 247,BM_SETSTATE = 243,BM_SETSTYLE = 244,};
enum MACRO_BN {BN_CLICKED = 0,BN_DBLCLK = 5,BN_DISABLE = 4,BN_DOUBLECLICKED = 5,BN_HILITE = 2,BN_KILLFOCUS = 7,BN_PAINT = 1,BN_PUSHED = 2,BN_SETFOCUS = 6,BN_UNHILITE = 3,BN_UNPUSHED = 3,};
enum MACRO_BS {BS_SOLID = 0,BS_NULL = 1,BS_HOLLOW = 1,BS_HATCHED = 2,BS_PATTERN = 3,BS_INDEXED = 4,BS_DIBPATTERN = 5,BS_DIBPATTERNPT = 6,BS_PATTERN8X8 = 7,BS_DIBPATTERN8X8 = 8,};
enum MACRO_BZ {BZ_DISABLECANCELBUTTON = 1,BZ_DISABLESWITCHTOBUTTON = 2,BZ_DISABLERETRYBUTTON = 4,BZ_NOTRESPONDINGDIALOG = 8,};
enum MACRO_C1 {C1_UPPER = 1,C1_LOWER = 2,C1_DIGIT = 4,C1_SPACE = 8,C1_PUNCT = 16,C1_CNTRL = 32,C1_BLANK = 64,C1_XDIGIT = 128,C1_ALPHA = 256,};
enum MACRO_C2 {C2_LEFTTORIGHT = 1,C2_RIGHTTOLEFT = 2,C2_EUROPENUMBER = 3,C2_EUROPESEPARATOR = 4,C2_EUROPETERMINATOR = 5,C2_ARABICNUMBER = 6,C2_COMMONSEPARATOR = 7,C2_BLOCKSEPARATOR = 8,C2_SEGMENTSEPARATOR = 9,C2_WHITESPACE = 10,C2_OTHERNEUTRAL = 11,C2_NOTAPPLICABLE = 0,};
enum MACRO_C3 {C3_NONSPACING = 1,C3_DIACRITIC = 2,C3_VOWELMARK = 4,C3_SYMBOL = 8,C3_KATAKANA = 16,C3_HIRAGANA = 32,C3_HALFWIDTH = 64,C3_FULLWIDTH = 128,C3_IDEOGRAPH = 256,C3_KASHIDA = 512,C3_ALPHA = 32768,C3_NOTAPPLICABLE = 0,};
enum MACRO_CA {CA_NEGATIVE = 1,CA_LOG_FILTER = 2,};
enum MACRO_CB {CB_ADDSTRING = 323,CB_DELETESTRING = 324,CB_DIR = 325,CB_FINDSTRING = 332,CB_FINDSTRINGEXACT = 344,CB_GETCOUNT = 326,CB_GETCURSEL = 327,CB_GETDROPPEDCONTROLRECT = 338,CB_GETDROPPEDSTATE = 343,CB_GETDROPPEDWIDTH = 351,CB_GETEDITSEL = 320,CB_GETEXTENDEDUI = 342,CB_GETHORIZONTALEXTENT = 349,CB_GETITEMDATA = 336,CB_GETITEMHEIGHT = 340,CB_GETLBTEXT = 328,CB_GETLBTEXTLEN = 329,CB_GETLOCALE = 346,CB_GETTOPINDEX = 347,CB_INITSTORAGE = 353,CB_INSERTSTRING = 330,CB_LIMITTEXT = 321,CB_RESETCONTENT = 331,CB_SELECTSTRING = 333,CB_SETCURSEL = 334,CB_SETDROPPEDWIDTH = 352,CB_SETEDITSEL = 322,CB_SETEXTENDEDUI = 341,CB_SETHORIZONTALEXTENT = 350,CB_SETITEMDATA = 337,CB_SETITEMHEIGHT = 339,CB_SETLOCALE = 345,CB_SETTOPINDEX = 348,CB_SHOWDROPDOWN = 335,};
enum MACRO_CC {CC_NONE = 0,CC_CIRCLES = 1,CC_PIE = 2,CC_CHORD = 4,CC_ELLIPSES = 8,CC_WIDE = 16,CC_STYLED = 32,CC_WIDESTYLED = 64,CC_INTERIORS = 128,CC_ROUNDRECT = 256,};
enum MACRO_CD {CD_LBSELNOITEMS = -1,CD_LBSELCHANGE = 0,CD_LBSELSUB = 1,CD_LBSELADD = 2,};
enum MACRO_CE {CE_BREAK = 16,CE_DNS = 2048,CE_FRAME = 8,CE_IOE = 1024,CE_MODE = 32768,CE_OOP = 4096,CE_OVERRUN = 2,CE_PTO = 512,CE_RXOVER = 1,CE_RXPARITY = 4,CE_TXFULL = 256,};
enum MACRO_CF {CF_TEXT = 1,CF_BITMAP = 2,CF_METAFILEPICT = 3,CF_SYLK = 4,CF_DIF = 5,CF_TIFF = 6,CF_OEMTEXT = 7,CF_DIB = 8,CF_PALETTE = 9,CF_PENDATA = 10,CF_RIFF = 11,CF_WAVE = 12,CF_UNICODETEXT = 13,CF_ENHMETAFILE = 14,CF_HDROP = 15,CF_LOCALE = 16,CF_MAX = 17,CF_OWNERDISPLAY = 128,CF_DSPTEXT = 129,CF_DSPBITMAP = 130,CF_DSPMETAFILEPICT = 131,CF_DSPENHMETAFILE = 142,CF_PRIVATEFIRST = 512,CF_PRIVATELAST = 767,CF_GDIOBJFIRST = 768,CF_GDIOBJLAST = 1023,};
enum MACRO_CM {CM_OUT_OF_GAMUT = 255,CM_IN_GAMUT = 0,};
enum MACRO_CP {CP_INSTALLED = 1,CP_SUPPORTED = 2,};
enum MACRO_CS {CS_BYTEALIGNCLIENT = 4096,CS_BYTEALIGNWINDOW = 8192,CS_KEYCVTWINDOW = 4,CS_NOKEYCVT = 256,CS_CLASSDC = 64,CS_DBLCLKS = 8,CS_GLOBALCLASS = 16384,CS_HREDRAW = 2,CS_NOCLOSE = 512,CS_OWNDC = 32,CS_PARENTDC = 128,CS_SAVEBITS = 2048,CS_VREDRAW = 1,CS_IME = 65536,};
enum MACRO_CT {CT_CTYPE1 = 1,CT_CTYPE2 = 2,CT_CTYPE3 = 4,};
enum MACRO_CW {CW_USEDEFAULT = 0x80000000,};
enum MACRO_DC {DC_BINNAMES = 12,DC_BINS = 6,DC_COPIES = 18,DC_DRIVER = 11,DC_DATATYPE_PRODUCED = 21,DC_DUPLEX = 7,DC_EMF_COMPLIANT = 20,DC_ENUMRESOLUTIONS = 13,DC_EXTRA = 9,DC_FIELDS = 1,DC_FILEDEPENDENCIES = 14,DC_MAXEXTENT = 5,DC_MINEXTENT = 4,DC_ORIENTATION = 17,DC_PAPERNAMES = 16,DC_PAPERS = 2,DC_PAPERSIZE = 3,DC_SIZE = 8,DC_TRUETYPE = 15,};
enum MACRO_DF {DF_ALLOWOTHERACCOUNTHOOK = 1,};
enum MACRO_DI {DI_COMPAT = 4,DI_DEFAULTSIZE = 8,DI_IMAGE = 2,DI_MASK = 1,DI_NORMAL = 3,DI_APPBANDING = 1,};
enum MACRO_DL {DL_BEGINDRAG = 1157,DL_CANCELDRAG = 1160,DL_DRAGGING = 1158,DL_DROPPED = 1159,DL_CURSORSET = 0,DL_STOPCURSOR = 1,DL_COPYCURSOR = 2,DL_MOVECURSOR = 3,};
enum MACRO_DM {DM_GRAYSCALE = 1,DM_INTERLACED = 2,DM_UPDATE = 1,DM_COPY = 2,DM_PROMPT = 4,DM_MODIFY = 8,DM_IN_BUFFER = 8,DM_IN_PROMPT = 4,DM_OUT_BUFFER = 2,DM_OUT_DEFAULT = 1,DM_ORIENTATION = 1,DM_PAPERSIZE = 2,DM_PAPERLENGTH = 4,DM_PAPERWIDTH = 8,DM_SCALE = 16,DM_COPIES = 256,DM_DEFAULTSOURCE = 512,DM_PRINTQUALITY = 1024,DM_COLOR = 2048,DM_DUPLEX = 4096,DM_YRESOLUTION = 8192,DM_TTOPTION = 16384,DM_COLLATE = 32768,DM_FORMNAME = 65536,DM_LOGPIXELS = 131072,DM_BITSPERPEL = 262144,DM_PELSWIDTH = 524288,DM_PELSHEIGHT = 1048576,DM_DISPLAYFLAGS = 2097152,DM_DISPLAYFREQUENCY = 4194304,DM_ICMMETHOD = 8388608,DM_ICMINTENT = 16777216,DM_MEDIATYPE = 33554432,DM_DITHERTYPE = 67108864,};
enum MACRO_DN {DN_DEFAULTPRN = 1,};
enum MACRO_DO {DO_DROPFILE = 0x454C4946,DO_PRINTFILE = 0x544E5250,};
enum MACRO_DS {DS_3DLOOK = 4,DS_ABSALIGN = 1,DS_CENTER = 2048,DS_CENTERMOUSE = 4096,DS_CONTEXTHELP = 8192,DS_CONTROL = 1024,DS_FIXEDSYS = 8,DS_LOCALEDIT = 32,DS_MODALFRAME = 128,DS_NOFAILCREATE = 16,DS_NOIDLEMSG = 256,DS_SETFONT = 64,DS_SETFOREGROUND = 512,DS_SYSMODAL = 2,};
enum MACRO_DT {DT_PLOTTER = 0,DT_RASDISPLAY = 1,DT_RASPRINTER = 2,DT_RASCAMERA = 3,DT_CHARSTREAM = 4,DT_METAFILE = 5,DT_DISPFILE = 6,};
enum MACRO_EC {EC_LEFTMARGIN = 1,EC_RIGHTMARGIN = 2,EC_USEFONTINFO = 65535,};
enum MACRO_EM {EM_CANUNDO = 198,EM_CHARFROMPOS = 215,EM_EMPTYUNDOBUFFER = 205,EM_FMTLINES = 200,EM_GETFIRSTVISIBLELINE = 206,EM_GETHANDLE = 189,EM_GETLIMITTEXT = 213,EM_GETLINE = 196,EM_GETLINECOUNT = 186,EM_GETMARGINS = 212,EM_GETMODIFY = 184,EM_GETPASSWORDCHAR = 210,EM_GETRECT = 178,EM_GETSEL = 176,EM_GETTHUMB = 190,EM_GETWORDBREAKPROC = 209,EM_LIMITTEXT = 197,EM_LINEFROMCHAR = 201,EM_LINEINDEX = 187,EM_LINELENGTH = 193,EM_LINESCROLL = 182,EM_POSFROMCHAR = 214,EM_REPLACESEL = 194,EM_SCROLL = 181,EM_SCROLLCARET = 183,EM_SETHANDLE = 188,EM_SETLIMITTEXT = 197,EM_SETMARGINS = 211,EM_SETMODIFY = 185,EM_SETPASSWORDCHAR = 204,EM_SETREADONLY = 207,EM_SETRECT = 179,EM_SETRECTNP = 180,EM_SETSEL = 177,EM_SETTABSTOPS = 203,EM_SETWORDBREAKPROC = 208,EM_UNDO = 199,};
enum MACRO_EN {EN_CHANGE = 768,EN_ERRSPACE = 1280,EN_HSCROLL = 1537,EN_KILLFOCUS = 512,EN_MAXTEXT = 1281,EN_SETFOCUS = 256,EN_UPDATE = 1024,EN_VSCROLL = 1538,};
enum MACRO_ES {ES_AUTOHSCROLL = 128,ES_AUTOVSCROLL = 64,ES_CENTER = 1,ES_LEFT = 0,ES_LOWERCASE = 16,ES_MULTILINE = 4,ES_NOHIDESEL = 256,ES_NUMBER = 8192,ES_OEMCONVERT = 1024,ES_PASSWORD = 32,ES_READONLY = 2048,ES_RIGHT = 2,ES_UPPERCASE = 8,ES_WANTRETURN = 4096,};
enum MACRO_EV {EV_BREAK = 64,EV_CTS = 8,EV_DSR = 16,EV_ERR = 128,EV_EVENT1 = 2048,EV_EVENT2 = 4096,EV_PERR = 512,EV_RING = 256,EV_RLSD = 32,EV_RX80FULL = 1024,EV_RXCHAR = 1,EV_RXFLAG = 2,EV_TXEMPTY = 4,};
enum MACRO_FD {FD_READ = 1,FD_WRITE = 2,FD_OOB = 4,FD_ACCEPT = 8,FD_CONNECT = 16,FD_CLOSE = 32,};
enum MACRO_FF {FF_DECORATIVE = 80,FF_DONTCARE = 0,FF_MODERN = 48,FF_ROMAN = 16,FF_SCRIPT = 64,FF_SWISS = 32,};
enum MACRO_FO {FO_MOVE = 1,FO_COPY = 2,FO_DELETE = 3,FO_RENAME = 4,};
enum MACRO_FR {FR_DIALOGTERM = 64,FR_DOWN = 1,FR_ENABLEHOOK = 256,FR_ENABLETEMPLATE = 512,FR_ENABLETEMPLATEHANDLE = 8192,FR_FINDNEXT = 8,FR_HIDEUPDOWN = 16384,FR_HIDEMATCHCASE = 32768,FR_HIDEWHOLEWORD = 65536,FR_MATCHCASE = 4,FR_NOMATCHCASE = 2048,FR_NOUPDOWN = 1024,FR_NOWHOLEWORD = 4096,FR_REPLACE = 16,FR_REPLACEALL = 32,FR_SHOWHELP = 128,FR_WHOLEWORD = 2,};
enum MACRO_FS {FS_CASE_IS_PRESERVED = 2,FS_CASE_SENSITIVE = 1,FS_UNICODE_STORED_ON_DISK = 4,FS_PERSISTENT_ACLS = 8,FS_FILE_COMPRESSION = 16,FS_VOL_IS_COMPRESSED = 32768,};
enum MACRO_FW {FW_DONTCARE = 0,FW_THIN = 100,FW_EXTRALIGHT = 200,FW_ULTRALIGHT = 200,FW_LIGHT = 300,FW_NORMAL = 400,FW_REGULAR = 400,FW_MEDIUM = 500,FW_SEMIBOLD = 600,FW_DEMIBOLD = 600,FW_BOLD = 700,FW_EXTRABOLD = 800,FW_ULTRABOLD = 800,FW_HEAVY = 900,FW_BLACK = 900,};
enum MACRO_GL {GL_LEVEL_NOGUIDELINE = 0,GL_LEVEL_FATAL = 1,GL_LEVEL_ERROR = 2,GL_LEVEL_WARNING = 3,GL_LEVEL_INFORMATION = 4,GL_ID_UNKNOWN = 0,GL_ID_NOMODULE = 1,GL_ID_NODICTIONARY = 16,GL_ID_CANNOTSAVE = 17,GL_ID_NOCONVERT = 32,GL_ID_TYPINGERROR = 33,GL_ID_TOOMANYSTROKE = 34,GL_ID_READINGCONFLICT = 35,GL_ID_INPUTREADING = 36,GL_ID_INPUTRADICAL = 37,GL_ID_INPUTCODE = 38,GL_ID_INPUTSYMBOL = 39,GL_ID_CHOOSECANDIDATE = 40,GL_ID_REVERSECONVERSION = 41,GL_ID_PRIVATE_FIRST = 32768,GL_ID_PRIVATE_LAST = 65535,};
enum MACRO_GM {GM_COMPATIBLE = 1,GM_ADVANCED = 2,};
enum MACRO_GW {GW_HWNDNEXT = 2,GW_HWNDPREV = 3,GW_CHILD = 5,GW_HWNDFIRST = 0,GW_HWNDLAST = 1,GW_OWNER = 4,};
enum MACRO_HC {HC_ACTION = 0,HC_GETNEXT = 1,HC_SKIP = 2,HC_NOREMOVE = 3,HC_NOREM = 3,HC_SYSMODALON = 4,HC_SYSMODALOFF = 5,};
enum MACRO_HP {HP_ALGID = 1,HP_HASHVAL = 2,HP_HASHSIZE = 4,};
enum MACRO_HS {HS_BDIAGONAL = 3,HS_CROSS = 4,HS_DIAGCROSS = 5,HS_FDIAGONAL = 2,HS_HORIZONTAL = 0,HS_VERTICAL = 1,};
enum MACRO_HW {HW_PROFILE_GUIDLEN = 39,};
enum MACRO_ID {ID_DEFAULTINST = -2,};
enum MACRO_IN {IN_CLASSA_NET = 0xFF000000,IN_CLASSA_NSHIFT = 0x18,IN_CLASSA_HOST = 0xFFFFFF,IN_CLASSA_MAX = 0x80,IN_CLASSB_NET = 0xFFFF0000,IN_CLASSB_NSHIFT = 0x10,IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x10000,IN_CLASSC_NET = 0xFFFFFF00,IN_CLASSC_NSHIFT = 0x8,IN_CLASSC_HOST = 0xFF,};
enum MACRO_IO {IO_COMPLETION_MODIFY_STATE = 2,IO_COMPLETION_ALL_ACCESS = 2031619,};
enum MACRO_IP {IP_OPTIONS = 1,};
enum MACRO_IS {IS_TEXT_UNICODE_ASCII16 = 1,IS_TEXT_UNICODE_REVERSE_ASCII16 = 16,IS_TEXT_UNICODE_STATISTICS = 2,IS_TEXT_UNICODE_REVERSE_STATISTICS = 32,IS_TEXT_UNICODE_CONTROLS = 4,IS_TEXT_UNICODE_REVERSE_CONTROLS = 64,IS_TEXT_UNICODE_SIGNATURE = 8,IS_TEXT_UNICODE_REVERSE_SIGNATURE = 128,IS_TEXT_UNICODE_ILLEGAL_CHARS = 256,IS_TEXT_UNICODE_ODD_LENGTH = 512,IS_TEXT_UNICODE_NULL_BYTES = 4096,IS_TEXT_UNICODE_UNICODE_MASK = 15,IS_TEXT_UNICODE_REVERSE_MASK = 240,IS_TEXT_UNICODE_NOT_UNICODE_MASK = 3840,IS_TEXT_UNICODE_NOT_ASCII_MASK = 61440,};
enum MACRO_IT {IT_COMPACT = 0,IT_TYPICAL = 1,IT_PORTABLE = 2,IT_CUSTOM = 3,};
enum MACRO_JL {JL_SENDER_ONLY = 0x1,JL_RECEIVER_ONLY = 0x2,JL_BOTH = 0x4,};
enum MACRO_KF {KF_EXTENDED = 256,KF_DLGMODE = 2048,KF_MENUMODE = 4096,KF_ALTDOWN = 8192,KF_REPEAT = 16384,KF_UP = 32768,};
enum MACRO_KL {KL_NAMELENGTH = 9,};
enum MACRO_KP {KP_IV = 1,KP_SALT = 2,KP_PADDING = 3,KP_MODE = 4,KP_MODE_BITS = 5,KP_PERMISSIONS = 6,KP_ALGID = 7,KP_BLOCKLEN = 8,};
enum MACRO_LB {LB_ADDFILE = 406,LB_ADDSTRING = 384,LB_DELETESTRING = 386,LB_DIR = 397,LB_FINDSTRING = 399,LB_FINDSTRINGEXACT = 418,LB_GETANCHORINDEX = 413,LB_GETCARETINDEX = 415,LB_GETCOUNT = 395,LB_GETCURSEL = 392,LB_GETHORIZONTALEXTENT = 403,LB_GETITEMDATA = 409,LB_GETITEMHEIGHT = 417,LB_GETITEMRECT = 408,LB_GETLOCALE = 422,LB_GETSEL = 391,LB_GETSELCOUNT = 400,LB_GETSELITEMS = 401,LB_GETTEXT = 393,LB_GETTEXTLEN = 394,LB_GETTOPINDEX = 398,LB_INITSTORAGE = 424,LB_INSERTSTRING = 385,LB_ITEMFROMPOINT = 425,LB_RESETCONTENT = 388,LB_SELECTSTRING = 396,LB_SELITEMRANGE = 411,LB_SELITEMRANGEEX = 387,LB_SETANCHORINDEX = 412,LB_SETCARETINDEX = 414,LB_SETCOLUMNWIDTH = 405,LB_SETCOUNT = 423,LB_SETCURSEL = 390,LB_SETHORIZONTALEXTENT = 404,LB_SETITEMDATA = 410,LB_SETITEMHEIGHT = 416,LB_SETLOCALE = 421,LB_SETSEL = 389,LB_SETTABSTOPS = 402,LB_SETTOPINDEX = 407,};
enum MACRO_LC {LC_NONE = 0,LC_POLYLINE = 2,LC_MARKER = 4,LC_POLYMARKER = 8,LC_WIDE = 16,LC_STYLED = 32,LC_WIDESTYLED = 64,LC_INTERIORS = 128,};
enum MACRO_LF {LF_FACESIZE = 32,LF_FULLFACESIZE = 64,};
enum MACRO_LG {LG_INCLUDE_INDIRECT = 1,};
enum MACRO_LR {LR_DEFAULTSIZE = 64,};
enum MACRO_MA {MA_ACTIVATE = 1,MA_ACTIVATEANDEAT = 2,MA_NOACTIVATE = 3,MA_NOACTIVATEANDEAT = 4,};
enum MACRO_MB {MB_USERICON = 128,MB_ICONASTERISK = 64,MB_ICONEXCLAMATION = 48,MB_ICONWARNING = 48,MB_ICONERROR = 16,MB_ICONHAND = 16,MB_ICONQUESTION = 32,MB_OK = 0,MB_ABORTRETRYIGNORE = 2,MB_APPLMODAL = 0,MB_DEFAULT_DESKTOP_ONLY = 131072,MB_HELP = 16384,MB_RIGHT = 524288,MB_RTLREADING = 1048576,MB_TOPMOST = 262144,MB_DEFBUTTON1 = 0,MB_DEFBUTTON2 = 256,MB_DEFBUTTON3 = 512,MB_DEFBUTTON4 = 768,MB_ICONINFORMATION = 64,MB_ICONSTOP = 16,MB_OKCANCEL = 1,MB_RETRYCANCEL = 5,MB_SERVICE_NOTIFICATION = 262144,MB_SETFOREGROUND = 65536,MB_SYSTEMMODAL = 4096,MB_TASKMODAL = 8192,MB_YESNO = 4,MB_YESNOCANCEL = 3,MB_ICONMASK = 240,MB_DEFMASK = 3840,MB_MODEMASK = 12288,MB_MISCMASK = 49152,MB_NOFOCUS = 32768,MB_TYPEMASK = 15,};
enum MACRO_MF {MF_ENABLED = 0,MF_GRAYED = 1,MF_DISABLED = 2,MF_BITMAP = 4,MF_CHECKED = 8,MF_MENUBARBREAK = 32,MF_MENUBREAK = 64,MF_OWNERDRAW = 256,MF_POPUP = 16,MF_SEPARATOR = 2048,MF_STRING = 0,MF_UNCHECKED = 0,MF_DEFAULT = 4096,MF_SYSMENU = 8192,MF_HELP = 16384,MF_END = 128,MF_RIGHTJUSTIFY = 16384,MF_MOUSESELECT = 32768,MF_INSERT = 0,MF_CHANGE = 128,MF_APPEND = 256,MF_DELETE = 512,MF_REMOVE = 4096,MF_USECHECKBITMAPS = 512,MF_UNHILITE = 0,MF_HILITE = 128,};
enum MACRO_MK {MK_LBUTTON = 1,MK_RBUTTON = 2,MK_SHIFT = 4,MK_CONTROL = 8,MK_MBUTTON = 16,};
enum MACRO_MM {MM_ANISOTROPIC = 8,MM_HIENGLISH = 5,MM_HIMETRIC = 3,MM_ISOTROPIC = 7,MM_LOENGLISH = 4,MM_LOMETRIC = 2,MM_TEXT = 1,MM_TWIPS = 6,MM_MAX_FIXEDSCALE = 6,};
enum MACRO_MS {MS_CTS_ON = 16,MS_DSR_ON = 32,MS_RING_ON = 64,MS_RLSD_ON = 128,};
enum MACRO_NF {NF_QUERY = 3,NF_REQUERY = 4,};
enum MACRO_NI {NI_OPENCANDIDATE = 16,NI_CLOSECANDIDATE = 17,NI_SELECTCANDIDATESTR = 18,NI_CHANGECANDIDATELIST = 19,NI_FINALIZECONVERSIONRESULT = 20,NI_COMPOSITIONSTR = 21,NI_SETCANDIDATE_PAGESTART = 22,NI_SETCANDIDATE_PAGESIZE = 23,NI_IMEMENUSELECTED = 24,};
enum MACRO_NM {NM_FIRST = 0,NM_LAST = -99,};
enum MACRO_NO {NO_RECOVERY = 11003,NO_DATA = 11004,NO_ADDRESS = 11004,};
enum MACRO_OF {OF_READ = 0,OF_READWRITE = 2,OF_WRITE = 1,OF_SHARE_COMPAT = 0,OF_SHARE_DENY_NONE = 64,OF_SHARE_DENY_READ = 48,OF_SHARE_DENY_WRITE = 32,OF_SHARE_EXCLUSIVE = 16,OF_CANCEL = 2048,OF_CREATE = 4096,OF_DELETE = 512,OF_EXIST = 16384,OF_PARSE = 256,OF_PROMPT = 8192,OF_REOPEN = 32768,OF_VERIFY = 1024,};
enum MACRO_ON {NUMLOCK_ON = 32,SCROLLLOCK_ON = 64,};
enum MACRO_PC {PC_NONE = 0,PC_POLYGON = 1,PC_POLYPOLYGON = 256,PC_PATHS = 512,PC_RECTANGLE = 2,PC_WINDPOLYGON = 4,PC_SCANLINE = 8,PC_TRAPEZOID = 4,PC_WIDE = 16,PC_STYLED = 32,PC_WIDESTYLED = 64,PC_INTERIORS = 128,};
enum MACRO_PD {PD_ALLPAGES = 0,PD_SELECTION = 1,PD_PAGENUMS = 2,PD_NOSELECTION = 4,PD_NOPAGENUMS = 8,PD_COLLATE = 16,PD_PRINTTOFILE = 32,PD_PRINTSETUP = 64,PD_NOWARNING = 128,PD_RETURNDC = 256,PD_RETURNIC = 512,PD_RETURNDEFAULT = 1024,PD_SHOWHELP = 2048,PD_ENABLEPRINTHOOK = 4096,PD_ENABLESETUPHOOK = 8192,PD_ENABLEPRINTTEMPLATE = 16384,PD_ENABLESETUPTEMPLATE = 32768,PD_ENABLEPRINTTEMPLATEHANDLE = 65536,PD_ENABLESETUPTEMPLATEHANDLE = 131072,PD_USEDEVMODECOPIES = 262144,PD_USEDEVMODECOPIESANDCOLLATE = 262144,PD_DISABLEPRINTTOFILE = 524288,PD_HIDEPRINTTOFILE = 1048576,PD_NONETWORKBUTTON = 2097152,};
enum MACRO_PF {PF_UNSPEC = 0,PF_UNIX = 1,PF_INET = 2,PF_IMPLINK = 3,PF_PUP = 4,PF_CHAOS = 5,PF_NS = 6,PF_IPX = 6,PF_ISO = 7,PF_OSI = 7,PF_ECMA = 8,PF_DATAKIT = 9,PF_CCITT = 10,PF_SNA = 11,PF_DECnet = 12,PF_DLI = 13,PF_LAT = 14,PF_HYLINK = 15,PF_APPLETALK = 16,PF_VOICEVIEW = 18,PF_FIREFOX = 19,PF_UNKNOWN1 = 20,PF_BAN = 21,PF_ATM = 22,PF_INET6 = 23,PF_MAX = 24,};
enum MACRO_PM {PM_NOREMOVE = 0,PM_REMOVE = 1,PM_NOYIELD = 2,};
enum MACRO_PO {PO_DELETE = 19,PO_RENAME = 20,PO_PORTCHANGE = 32,PO_REN_PORT = 52,};
enum MACRO_PP {PP_DISPLAYERRORS = 1,};
enum MACRO_PR {PR_JOBSTATUS = 0,};
enum MACRO_PS {PS_GEOMETRIC = 65536,PS_COSMETIC = 0,PS_ALTERNATE = 8,PS_SOLID = 0,PS_DASH = 1,PS_DOT = 2,PS_DASHDOT = 3,PS_DASHDOTDOT = 4,PS_NULL = 5,PS_USERSTYLE = 7,PS_INSIDEFRAME = 6,PS_ENDCAP_ROUND = 0,PS_ENDCAP_SQUARE = 256,PS_ENDCAP_FLAT = 512,PS_JOIN_BEVEL = 4096,PS_JOIN_MITER = 8192,PS_JOIN_ROUND = 0,PS_STYLE_MASK = 15,PS_ENDCAP_MASK = 3840,PS_TYPE_MASK = 983040,};
enum MACRO_PT {PT_MOVETO = 6,PT_LINETO = 2,PT_BEZIERTO = 4,PT_CLOSEFIGURE = 1,};
enum MACRO_QS {QS_ALLEVENTS = 191,QS_ALLINPUT = 255,QS_HOTKEY = 128,QS_INPUT = 7,QS_KEY = 1,QS_MOUSE = 6,QS_MOUSEBUTTON = 4,QS_MOUSEMOVE = 2,QS_PAINT = 32,QS_POSTMESSAGE = 8,QS_SENDMESSAGE = 64,QS_TIMER = 16,};
enum MACRO_R2 {R2_BLACK = 1,R2_COPYPEN = 13,R2_MASKNOTPEN = 3,R2_MASKPEN = 9,R2_MASKPENNOT = 5,R2_MERGENOTPEN = 12,R2_MERGEPEN = 15,R2_MERGEPENNOT = 14,R2_NOP = 11,R2_NOT = 6,R2_NOTCOPYPEN = 4,R2_NOTMASKPEN = 8,R2_NOTMERGEPEN = 2,R2_NOTXORPEN = 10,R2_WHITE = 16,R2_XORPEN = 7,};
enum MACRO_RB {RB_SETCOLORSCHEME = 8194,RB_GETCOLORSCHEME = 8195,};
enum MACRO_RC {RC_BANDING = 2,RC_BITBLT = 1,RC_BITMAP64 = 8,RC_DI_BITMAP = 128,RC_DIBTODEV = 512,RC_FLOODFILL = 4096,RC_GDI20_OUTPUT = 16,RC_PALETTE = 256,RC_SCALING = 4,RC_STRETCHBLT = 2048,RC_STRETCHDIB = 8192,RC_DEVBITS = 32768,RC_OP_DX_OUTPUT = 16384,};
enum MACRO_RP {RP_LOGON = 1,RP_INIFILE = 2,};
enum MACRO_SB {SB_HORZ = 0,SB_VERT = 1,SB_CTL = 2,SB_BOTH = 3,};
enum MACRO_SC {SC_SIZE = 0xF000,SC_MOVE = 0xF010,SC_MINIMIZE = 0xF020,SC_ICON = 0xF020,SC_MAXIMIZE = 0xF030,SC_ZOOM = 0xF030,SC_NEXTWINDOW = 0xF040,SC_PREVWINDOW = 0xF050,SC_CLOSE = 0xF060,SC_VSCROLL = 0xF070,SC_HSCROLL = 0xF080,SC_MOUSEMENU = 0xF090,SC_KEYMENU = 0xF100,SC_ARRANGE = 0xF110,SC_RESTORE = 0xF120,SC_TASKLIST = 0xF130,SC_SCREENSAVE = 0xF140,SC_HOTKEY = 0xF150,SC_DEFAULT = 0xF160,SC_MONITORPOWER = 0xF170,SC_CONTEXTHELP = 0xF180,SC_SEPARATOR = 0xF00F,};
enum MACRO_SD {SD_RECEIVE = 0x0,SD_SEND = 0x1,SD_BOTH = 0x2,};
enum MACRO_SE {SE_OWNER_DEFAULTED = 1,SE_GROUP_DEFAULTED = 2,SE_DACL_PRESENT = 4,SE_DACL_DEFAULTED = 8,SE_SACL_PRESENT = 16,SE_SACL_DEFAULTED = 32,SE_DACL_AUTO_INHERIT_REQ = 256,SE_SACL_AUTO_INHERIT_REQ = 512,SE_DACL_AUTO_INHERITED = 1024,SE_SACL_AUTO_INHERITED = 2048,SE_DACL_PROTECTED = 4096,SE_SACL_PROTECTED = 8192,SE_SELF_RELATIVE = 32768,};
enum MACRO_SF {SF_TEXT = 1,SF_RTF = 2,SF_RTFNOOBJS = 3,SF_TEXTIZED = 4,};
enum MACRO_SG {SG_UNCONSTRAINED_GROUP = 0x1,SG_CONSTRAINED_GROUP = 0x2,};
enum MACRO_SM {SM_CXSCREEN = 0,SM_CYSCREEN = 1,SM_CXVSCROLL = 2,SM_CYHSCROLL = 3,SM_CYCAPTION = 4,SM_CXBORDER = 5,SM_CYBORDER = 6,SM_CXDLGFRAME = 7,SM_CXFIXEDFRAME = 7,SM_CYDLGFRAME = 8,SM_CYFIXEDFRAME = 8,SM_CYVTHUMB = 9,SM_CXHTHUMB = 10,SM_CXICON = 11,SM_CYICON = 12,SM_CXCURSOR = 13,SM_CYCURSOR = 14,SM_CYMENU = 15,SM_CXFULLSCREEN = 16,SM_CYFULLSCREEN = 17,SM_CYKANJIWINDOW = 18,SM_MOUSEPRESENT = 19,SM_CYVSCROLL = 20,SM_CXHSCROLL = 21,SM_DEBUG = 22,SM_SWAPBUTTON = 23,SM_RESERVED1 = 24,SM_RESERVED2 = 25,SM_RESERVED3 = 26,SM_RESERVED4 = 27,SM_CXMIN = 28,SM_CYMIN = 29,SM_CXSIZE = 30,SM_CYSIZE = 31,SM_CXSIZEFRAME = 32,SM_CXFRAME = 32,SM_CYSIZEFRAME = 33,SM_CYFRAME = 33,SM_CXMINTRACK = 34,SM_CYMINTRACK = 35,SM_CXDOUBLECLK = 36,SM_CYDOUBLECLK = 37,SM_CXICONSPACING = 38,SM_CYICONSPACING = 39,SM_MENUDROPALIGNMENT = 40,SM_PENWINDOWS = 41,SM_DBCSENABLED = 42,SM_CMOUSEBUTTONS = 43,SM_SECURE = 44,SM_CXEDGE = 45,SM_CYEDGE = 46,SM_CXMINSPACING = 47,SM_CYMINSPACING = 48,SM_CXSMICON = 49,SM_CYSMICON = 50,SM_CYSMCAPTION = 51,SM_CXSMSIZE = 52,SM_CYSMSIZE = 53,SM_CXMENUSIZE = 54,SM_CYMENUSIZE = 55,SM_ARRANGE = 56,SM_CXMINIMIZED = 57,SM_CYMINIMIZED = 58,SM_CXMAXTRACK = 59,SM_CYMAXTRACK = 60,SM_CXMAXIMIZED = 61,SM_CYMAXIMIZED = 62,SM_NETWORK = 63,};
enum MACRO_SO {SO_DEBUG = 1,SO_ACCEPTCONN = 2,SO_REUSEADDR = 4,SO_KEEPALIVE = 8,SO_DONTROUTE = 16,SO_BROADCAST = 32,SO_USELOOPBACK = 64,SO_LINGER = 128,SO_OOBINLINE = 256,SO_DONTLINGER = 4294967167,SO_SNDBUF = 4097,SO_RCVBUF = 4098,SO_SNDLOWAT = 4099,SO_RCVLOWAT = 4100,SO_SNDTIMEO = 4101,SO_RCVTIMEO = 4102,SO_ERROR = 4103,SO_TYPE = 4104,SO_CONNDATA = 28672,SO_CONNOPT = 28673,SO_DISCDATA = 28674,SO_DISCOPT = 28675,SO_CONNDATALEN = 28676,SO_CONNOPTLEN = 28677,SO_DISCDATALEN = 28678,SO_DISCOPTLEN = 28679,SO_OPENTYPE = 28680,SO_SYNCHRONOUS_ALERT = 16,SO_SYNCHRONOUS_NONALERT = 32,SO_MAXDG = 28681,SO_MAXPATHDG = 28682,SO_UPDATE_ACCEPT_CONTEXT = 28683,SO_CONNECT_TIME = 28684,};
enum MACRO_SP {SP_SERIALCOMM = 1,};
enum MACRO_SS {SS_BITMAP = 14,SS_BLACKFRAME = 7,SS_BLACKRECT = 4,SS_CENTER = 1,SS_CENTERIMAGE = 512,SS_ENHMETAFILE = 15,SS_ETCHEDFRAME = 18,SS_ETCHEDHORZ = 16,SS_ETCHEDVERT = 17,SS_GRAYFRAME = 8,SS_GRAYRECT = 5,SS_ICON = 3,SS_LEFT = 0,SS_LEFTNOWORDWRAP = 12,SS_NOPREFIX = 128,SS_NOTIFY = 256,SS_OWNERDRAW = 13,SS_REALSIZEIMAGE = 2048,SS_RIGHT = 2,SS_RIGHTJUST = 1024,SS_SIMPLE = 11,SS_SUNKEN = 4096,SS_WHITEFRAME = 9,SS_WHITERECT = 6,SS_USERITEM = 10,};
enum MACRO_ST {ST_CONNECTED = 1,ST_ADVISE = 2,ST_ISLOCAL = 4,ST_BLOCKED = 8,ST_CLIENT = 16,ST_TERMINATED = 32,ST_INLIST = 64,ST_BLOCKNEXT = 128,ST_ISSELF = 256,};
enum MACRO_SV {SV_MAX_CMD_LEN = 256,};
enum MACRO_SW {SW_HIDE = 0,SW_NORMAL = 1,SW_SHOWNORMAL = 1,SW_SHOWMINIMIZED = 2,SW_MAXIMIZE = 3,SW_SHOWMAXIMIZED = 3,SW_SHOWNOACTIVATE = 4,SW_SHOW = 5,SW_MINIMIZE = 6,SW_SHOWMINNOACTIVE = 7,SW_SHOWNA = 8,SW_RESTORE = 9,SW_SHOWDEFAULT = 10,SW_FORCEMINIMIZE = 11,SW_MAX = 11,};
enum MACRO_TA {TA_BASELINE = 24,TA_BOTTOM = 8,TA_TOP = 0,TA_CENTER = 6,TA_LEFT = 0,TA_RIGHT = 2,TA_RTLREADING = 256,TA_NOUPDATECP = 0,TA_UPDATECP = 1,TA_MASK = 287,};
enum MACRO_TB {TB_ENABLEBUTTON = 1025,TB_CHECKBUTTON = 1026,TB_PRESSBUTTON = 1027,TB_HIDEBUTTON = 1028,TB_INDETERMINATE = 1029,TB_ISBUTTONENABLED = 1033,TB_ISBUTTONCHECKED = 1034,TB_ISBUTTONPRESSED = 1035,TB_ISBUTTONHIDDEN = 1036,TB_ISBUTTONINDETERMINATE = 1037,TB_SETSTATE = 1041,TB_GETSTATE = 1042,TB_ADDBITMAP = 1043,};
enum MACRO_TC {TC_NORMAL = 0,TC_HARDERR = 1,TC_GP_TRAP = 2,TC_SIGNAL = 3,};
enum MACRO_TH {TH_NETDEV = 0x1,TH_TAPI = 0x2,};
enum MACRO_TT {TT_AVAILABLE = 1,TT_ENABLED = 2,};
enum MACRO_UD {UD_MAXVAL = 0x7FFF,UD_MINVAL = 0xFFFF8001,};
enum MACRO_UF {UF_SCRIPT = 1,UF_ACCOUNTDISABLE = 2,UF_HOMEDIR_REQUIRED = 8,UF_LOCK = 16,UF_PASSWD_NOTREQD = 32,UF_PASSWD_CANT_CHANGE = 64,UF_TEMP_DUPLICATE_ACCOUNT = 256,UF_NORMAL_ACCOUNT = 512,UF_INTERDOMAIN_TRUST_ACCOUNT = 2048,UF_WORKSTATION_TRUST_ACCOUNT = 4096,UF_SERVER_TRUST_ACCOUNT = 8192,UF_MACHINE_ACCOUNT_MASK = 14336,UF_ACCOUNT_TYPE_MASK = 15104,UF_DONT_EXPIRE_PASSWD = 65536,UF_SETTABLE_BITS = 80763,};
enum MACRO_UI {UI_CAP_2700 = 1,UI_CAP_ROT90 = 2,UI_CAP_ROTANY = 4,};
enum MACRO_VK {VK_LBUTTON = 1,VK_RBUTTON = 2,VK_CANCEL = 3,VK_MBUTTON = 4,VK_BACK = 8,VK_TAB = 9,VK_CLEAR = 12,VK_RETURN = 13,VK_SHIFT = 16,VK_CONTROL = 17,VK_MENU = 18,VK_PAUSE = 19,VK_CAPITAL = 20,VK_ESCAPE = 27,VK_SPACE = 32,VK_PRIOR = 33,VK_NEXT = 34,VK_END = 35,VK_HOME = 36,VK_LEFT = 37,VK_UP = 38,VK_RIGHT = 39,VK_DOWN = 40,VK_SELECT = 41,VK_PRINT = 42,VK_EXECUTE = 43,VK_SNAPSHOT = 44,VK_INSERT = 45,VK_DELETE = 46,VK_HELP = 47,VK_LWIN = 91,VK_RWIN = 92,VK_APPS = 93,VK_NUMPAD0 = 96,VK_NUMPAD1 = 97,VK_NUMPAD2 = 98,VK_NUMPAD3 = 99,VK_NUMPAD4 = 100,VK_NUMPAD5 = 101,VK_NUMPAD6 = 102,VK_NUMPAD7 = 103,VK_NUMPAD8 = 104,VK_NUMPAD9 = 105,VK_MULTIPLY = 106,VK_ADD = 107,VK_SEPARATOR = 108,VK_SUBTRACT = 109,VK_DECIMAL = 110,VK_DIVIDE = 111,VK_F1 = 112,VK_F2 = 113,VK_F3 = 114,VK_F4 = 115,VK_F5 = 116,VK_F6 = 117,VK_F7 = 118,VK_F8 = 119,VK_F9 = 120,VK_F10 = 121,VK_F11 = 122,VK_F12 = 123,VK_F13 = 124,VK_F14 = 125,VK_F15 = 126,VK_F16 = 127,VK_F17 = 128,VK_F18 = 129,VK_F19 = 130,VK_F20 = 131,VK_F21 = 132,VK_F22 = 133,VK_F23 = 134,VK_F24 = 135,VK_NUMLOCK = 144,VK_SCROLL = 145,VK_LSHIFT = 160,VK_RSHIFT = 161,VK_LCONTROL = 162,VK_RCONTROL = 163,VK_LMENU = 164,VK_RMENU = 165,VK_PROCESSKEY = 229,VK_ATTN = 246,VK_CRSEL = 247,VK_EXSEL = 248,VK_EREOF = 249,VK_PLAY = 250,VK_ZOOM = 251,VK_NONAME = 252,VK_PA1 = 253,VK_OEM_CLEAR = 254,};
enum MACRO_VS {VS_FILE_INFO = 16,VS_VERSION_INFO = 1,VS_USER_DEFINED = 100,VS_FFI_SIGNATURE = -17890115,VS_FFI_STRUCVERSION = 65536,VS_FFI_FILEFLAGSMASK = 63,VS_FF_DEBUG = 1,VS_FF_PRERELEASE = 2,VS_FF_PATCHED = 4,VS_FF_PRIVATEBUILD = 8,VS_FF_INFOINFERRED = 16,VS_FF_SPECIALBUILD = 32,};
enum MACRO_VT {VT_STREAMED_PROPSET = 73,VT_STORED_PROPSET = 74,VT_BLOB_PROPSET = 75,VT_VERBOSE_ENUM = 76,};
enum MACRO_WA {WA_INACTIVE = 0,WA_ACTIVE = 1,WA_CLICKACTIVE = 2,};
enum MACRO_WB {WB_ISDELIMITER = 2,WB_LEFT = 0,WB_RIGHT = 1,};
enum MACRO_WC {WC_DIALOG = 0x8002,};
enum MACRO_WH {WH_MIN = -1,WH_MSGFILTER = -1,WH_JOURNALRECORD = 0,WH_JOURNALPLAYBACK = 1,WH_KEYBOARD = 2,WH_GETMESSAGE = 3,WH_CALLWNDPROC = 4,WH_CBT = 5,WH_SYSMSGFILTER = 6,WH_MOUSE = 7,WH_HARDWARE = 8,WH_DEBUG = 9,WH_SHELL = 10,WH_FOREGROUNDIDLE = 11,WH_CALLWNDPROCRET = 12,WH_KEYBOARD_LL = 13,WH_MOUSE_LL = 14,WH_MAX = 14,WH_MINHOOK = -1,WH_MAXHOOK = 14,};
enum MACRO_WM {WM_APP = 32768,WM_ACTIVATE = 6,WM_ACTIVATEAPP = 28,WM_AFXFIRST = 864,WM_AFXLAST = 895,WM_ASKCBFORMATNAME = 780,WM_CANCELJOURNAL = 75,WM_CANCELMODE = 31,WM_CAPTURECHANGED = 533,WM_CHANGECBCHAIN = 781,WM_CHAR = 258,WM_CHARTOITEM = 47,WM_CHILDACTIVATE = 34,WM_CLEAR = 771,WM_CLOSE = 16,WM_COMMAND = 273,WM_COMMNOTIFY = 68,WM_COMPACTING = 65,WM_COMPAREITEM = 57,WM_CONTEXTMENU = 123,WM_COPY = 769,WM_COPYDATA = 74,WM_CREATE = 1,WM_CTLCOLORBTN = 309,WM_CTLCOLORDLG = 310,WM_CTLCOLOREDIT = 307,WM_CTLCOLORLISTBOX = 308,WM_CTLCOLORMSGBOX = 306,WM_CTLCOLORSCROLLBAR = 311,WM_CTLCOLORSTATIC = 312,WM_CUT = 768,WM_DEADCHAR = 259,WM_DELETEITEM = 45,WM_DESTROY = 2,WM_DESTROYCLIPBOARD = 775,WM_DEVICECHANGE = 537,WM_DEVMODECHANGE = 27,WM_DISPLAYCHANGE = 126,WM_DRAWCLIPBOARD = 776,WM_DRAWITEM = 43,WM_DROPFILES = 563,WM_ENABLE = 10,WM_ENDSESSION = 22,WM_ENTERIDLE = 289,WM_ENTERMENULOOP = 529,WM_ENTERSIZEMOVE = 561,WM_ERASEBKGND = 20,WM_EXITMENULOOP = 530,WM_EXITSIZEMOVE = 562,WM_FONTCHANGE = 29,WM_GETDLGCODE = 135,WM_GETFONT = 49,WM_GETHOTKEY = 51,WM_GETICON = 127,WM_GETMINMAXINFO = 36,WM_GETTEXT = 13,WM_GETTEXTLENGTH = 14,WM_HANDHELDFIRST = 856,WM_HANDHELDLAST = 863,WM_HELP = 83,WM_HOTKEY = 786,WM_HSCROLL = 276,WM_HSCROLLCLIPBOARD = 782,WM_ICONERASEBKGND = 39,WM_IME_STARTCOMPOSITION = 269,WM_IME_ENDCOMPOSITION = 270,WM_IME_COMPOSITION = 271,WM_IME_KEYLAST = 271,WM_IME_SETCONTEXT = 641,WM_IME_NOTIFY = 642,WM_IME_CONTROL = 643,WM_IME_COMPOSITIONFULL = 644,WM_IME_SELECT = 645,WM_IME_CHAR = 646,WM_IME_KEYDOWN = 656,WM_IME_KEYUP = 657,WM_INITDIALOG = 272,WM_INITMENU = 278,WM_INITMENUPOPUP = 279,WM_INPUTLANGCHANGE = 81,WM_INPUTLANGCHANGEREQUEST = 80,WM_KEYDOWN = 256,WM_KEYUP = 257,WM_KILLFOCUS = 8,WM_MDIACTIVATE = 546,WM_MDICASCADE = 551,WM_MDICREATE = 544,WM_MDIDESTROY = 545,WM_MDIGETACTIVE = 553,WM_MDIICONARRANGE = 552,WM_MDIMAXIMIZE = 549,WM_MDINEXT = 548,WM_MDIREFRESHMENU = 564,WM_MDIRESTORE = 547,WM_MDISETMENU = 560,WM_MDITILE = 550,WM_MEASUREITEM = 44,WM_MENUCHAR = 288,WM_MENUSELECT = 287,WM_NEXTMENU = 531,WM_MOVE = 3,WM_MOVING = 534,WM_NCACTIVATE = 134,WM_NCCALCSIZE = 131,WM_NCCREATE = 129,WM_NCDESTROY = 130,WM_NCHITTEST = 132,WM_NCLBUTTONDBLCLK = 163,WM_NCLBUTTONDOWN = 161,WM_NCLBUTTONUP = 162,WM_NCMBUTTONDBLCLK = 169,WM_NCMBUTTONDOWN = 167,WM_NCMBUTTONUP = 168,WM_NCMOUSEMOVE = 160,WM_NCPAINT = 133,WM_NCRBUTTONDBLCLK = 166,WM_NCRBUTTONDOWN = 164,WM_NCRBUTTONUP = 165,WM_NEXTDLGCTL = 40,WM_NOTIFY = 78,WM_NOTIFYFORMAT = 85,WM_NULL = 0,WM_PAINT = 15,WM_PAINTCLIPBOARD = 777,WM_PAINTICON = 38,WM_PALETTECHANGED = 785,WM_PALETTEISCHANGING = 784,WM_PARENTNOTIFY = 528,WM_PASTE = 770,WM_PENWINFIRST = 896,WM_PENWINLAST = 911,WM_POWER = 72,WM_POWERBROADCAST = 536,WM_PRINT = 791,WM_PRINTCLIENT = 792,WM_QUERYDRAGICON = 55,WM_QUERYENDSESSION = 17,WM_QUERYNEWPALETTE = 783,WM_QUERYOPEN = 19,WM_QUEUESYNC = 35,WM_QUIT = 18,WM_RENDERALLFORMATS = 774,WM_RENDERFORMAT = 773,WM_SETCURSOR = 32,WM_SETFOCUS = 7,WM_SETFONT = 48,WM_SETHOTKEY = 50,WM_SETICON = 128,WM_SETREDRAW = 11,WM_SETTEXT = 12,WM_SETTINGCHANGE = 26,WM_SHOWWINDOW = 24,WM_SIZE = 5,WM_SIZECLIPBOARD = 779,WM_SIZING = 532,WM_SPOOLERSTATUS = 42,WM_STYLECHANGED = 125,WM_STYLECHANGING = 124,WM_SYSCHAR = 262,WM_SYSCOLORCHANGE = 21,WM_SYSCOMMAND = 274,WM_SYSDEADCHAR = 263,WM_SYSKEYDOWN = 260,WM_SYSKEYUP = 261,WM_TCARD = 82,WM_TIMECHANGE = 30,WM_TIMER = 275,WM_UNDO = 772,WM_USER = 1024,WM_USERCHANGED = 84,WM_VKEYTOITEM = 46,WM_VSCROLL = 277,WM_VSCROLLCLIPBOARD = 778,WM_WINDOWPOSCHANGED = 71,WM_WINDOWPOSCHANGING = 70,WM_WININICHANGE = 26,WM_KEYFIRST = 256,WM_KEYLAST = 264,WM_SYNCPAINT = 136,WM_MOUSEACTIVATE = 33,WM_MOUSEMOVE = 512,WM_LBUTTONDOWN = 513,WM_LBUTTONUP = 514,WM_LBUTTONDBLCLK = 515,WM_RBUTTONDOWN = 516,WM_RBUTTONUP = 517,WM_RBUTTONDBLCLK = 518,WM_MBUTTONDOWN = 519,WM_MBUTTONUP = 520,WM_MBUTTONDBLCLK = 521,WM_MOUSEWHEEL = 522,WM_MOUSEFIRST = 512,WM_MOUSELAST = 522,WM_MOUSEHOVER = 673,WM_MOUSELEAVE = 675,};
enum MACRO_WN {WN_SUCCESS = 0,WN_NO_ERROR = 0,WN_NOT_SUPPORTED = 50,WN_CANCEL = 1223,WN_RETRY = 1237,WN_NET_ERROR = 59,WN_MORE_DATA = 234,WN_BAD_POINTER = 487,WN_BAD_VALUE = 87,WN_BAD_USER = 2202,WN_BAD_PASSWORD = 86,WN_ACCESS_DENIED = 5,WN_FUNCTION_BUSY = 170,WN_WINDOWS_ERROR = 59,WN_OUT_OF_MEMORY = 8,WN_NO_NETWORK = 1222,WN_EXTENDED_ERROR = 1208,WN_BAD_LEVEL = 124,WN_BAD_HANDLE = 6,WN_NOT_INITIALIZING = 1247,WN_NO_MORE_DEVICES = 1248,WN_NOT_CONNECTED = 2250,WN_OPEN_FILES = 2401,WN_DEVICE_IN_USE = 2404,WN_BAD_NETNAME = 67,WN_BAD_LOCALNAME = 1200,WN_ALREADY_CONNECTED = 85,WN_DEVICE_ERROR = 31,WN_CONNECTION_CLOSED = 1201,WN_NO_NET_OR_BAD_PATH = 1203,WN_BAD_PROVIDER = 1204,WN_CANNOT_OPEN_PROFILE = 1205,WN_BAD_PROFILE = 1206,WN_BAD_DEV_TYPE = 66,WN_DEVICE_ALREADY_REMEMBERED = 1202,WN_NO_MORE_ENTRIES = 259,WN_NOT_CONTAINER = 1207,WN_NOT_AUTHENTICATED = 1244,WN_NOT_LOGGED_ON = 1245,WN_NOT_VALIDATED = 1311,};
enum MACRO_WS {WS_BORDER = 0x800000,WS_CAPTION = 0xC00000,WS_CHILD = 0x40000000,WS_CHILDWINDOW = 0x40000000,WS_CLIPCHILDREN = 0x2000000,WS_CLIPSIBLINGS = 0x4000000,WS_DISABLED = 0x8000000,WS_DLGFRAME = 0x400000,WS_GROUP = 0x20000,WS_HSCROLL = 0x100000,WS_ICONIC = 0x20000000,WS_MAXIMIZE = 0x1000000,WS_MAXIMIZEBOX = 0x10000,WS_MINIMIZE = 0x20000000,WS_MINIMIZEBOX = 0x20000,WS_OVERLAPPED = 0x0,WS_OVERLAPPEDWINDOW = 0xCF0000,WS_POPUP = 0x80000000,WS_POPUPWINDOW = 0x80880000,WS_SIZEBOX = 0x40000,WS_SYSMENU = 0x80000,WS_TABSTOP = 0x10000,WS_THICKFRAME = 0x40000,WS_TILED = 0x0,WS_TILEDWINDOW = 0xCF0000,WS_VISIBLE = 0x10000000,WS_VSCROLL = 0x200000,};
enum MACRO__M {_M_IX86 = 300,};
typedef struct _MMCKINFO MMCKINFO;
typedef struct _MMIOINFO MMIOINFO;
typedef struct tagMULTI_QI MULTI_QI;
typedef int (*NEARPROC)();
typedef struct _OFSTRUCT OFSTRUCT;
typedef struct _AT_ENUM *PAT_ENUM;
typedef struct _AT_INFO *PAT_INFO;
typedef struct tagPELARRAY PELARRAY;
typedef struct tagEMRTEXT *PEMRTEXT;
typedef struct _PERF_BIN PERF_BIN;
typedef struct hostent *PHOSTENT;
typedef struct tagHSZPAIR *PHSZPAIR;
typedef struct tagPICTDESC PICTDESC;
typedef struct in_addr *PIN_ADDR;
typedef struct joyinfo_tag *PJOYINFO;
typedef struct midihdr_tag *PMIDIHDR;
typedef struct tagPBRANGE *PPBRANGE;
typedef struct tagPROPSPEC PROPSPEC;
typedef struct protoent PROTOENT;
typedef struct servent *PSERVENT;
typedef struct timeval *PTIMEVAL;
typedef struct value_entA *PVALENTA;
typedef struct value_entW *PVALENTW;
typedef struct wavehdr_tag *PWAVEHDR;
typedef int *PWINBOOL;
typedef struct _RAPIINIT RAPIINIT;
typedef struct _reobject REOBJECT;
typedef struct _RIP_INFO RIP_INFO;
typedef struct _SHITEMID SHITEMID;
typedef struct sockaddr SOCKADDR;
typedef struct tagSTATDATA STATDATA;
typedef struct _TBBUTTON TBBUTTON;
typedef struct _5FD78A464707AEFBBDC321B5598A6452 TBNOTIFY;
typedef struct _TC_ITEMA TC_ITEMA;
typedef struct _TC_ITEMW TC_ITEMW;
typedef struct timecaps_tag TIMECAPS;
typedef struct tagTLIBATTR TLIBATTR;
typedef struct _TV_ITEMA TV_ITEMA;
typedef struct _TV_ITEMW TV_ITEMW;
typedef struct tagTYPEATTR TYPEATTR;
typedef struct tagTYPEDESC TYPEDESC;
struct _IO_FILE;
typedef struct _9722585E737591D9DBBFC1CA80083F53 __fsid_t;
typedef signed char __int8_t;
typedef unsigned int __mode_t;
typedef long long __quad_t;
typedef unsigned int __rlim_t;
typedef int __time_t;
typedef unsigned char __u_char;
typedef unsigned int __u_long;
typedef struct acl aclent_t;
struct protoent {char *p_name;char **p_aliases;short p_proto;};
enum tagMKSYS {MKSYS_NONE = 0x0,MKSYS_GENERICCOMPOSITE = 0x1,MKSYS_FILEMONIKER = 0x2,MKSYS_ANTIMONIKER = 0x3,MKSYS_ITEMMONIKER = 0x4,MKSYS_POINTERMONIKER = 0x5,};
enum tagSHGDN {SHGDN_NORMAL = 0x0,SHGDN_INFOLDER = 0x1,SHGDN_FORPARSING = 0x8000,};
enum tagSTGTY {STGTY_STORAGE = 0x1,STGTY_STREAM = 0x2,STGTY_LOCKBYTES = 0x3,STGTY_PROPERTY = 0x4,};
enum tagTYMED {TYMED_HGLOBAL = 0x1,TYMED_FILE = 0x2,TYMED_ISTREAM = 0x4,TYMED_ISTORAGE = 0x8,TYMED_GDI = 0x10,TYMED_MFPICT = 0x20,TYMED_ENHMF = 0x40,TYMED_NULL = 0x0,};
typedef unsigned char u_int8_t;
typedef struct _tagADDRESS ADDRESS;
typedef struct _AT_ENUM AT_ENUM;
typedef struct _AT_INFO AT_INFO;
typedef union tagBINDPTR BINDPTR;
typedef struct tagCACLSID CACLSID;
typedef struct tagCADWORD CADWORD;
typedef struct tagCALPSTR CALPSTR;
typedef struct tagCASCODE CASCODE;
typedef struct tagCCINFOA CCINFOA;
typedef struct tagCCINFOW CCINFOW;
typedef struct _COMSTAT COMSTAT;
typedef struct _CONTEXT CONTEXT;
typedef struct tagCPLINFO CPLINFO;
typedef struct _30CDF2DE7DC7B55457111E3E79D8AE18 DDEDATA;
typedef struct _A2F74AF90EE3AACE3322F4FF0CBF4977 DDEPOKE;
typedef struct tagDEC DECIMAL;
typedef struct _89E88C10B84B492504101A13E5F7DD9F DOCINFO;
typedef struct tagEMRTEXT EMRTEXT;
typedef int (*FARPROC)();
typedef struct HBITMAP__ *HBITMAP;
struct HCONV__ {int i;};
struct HDESK__ {int i;};
struct HDROP__ {int i;};
struct HDRVR__ {int i;};
struct HFONT__ {int i;};
typedef void *HGDIOBJ;
struct HGLRC__ {int i;};
struct HHOOK__ {int i;};
struct HICON__ {int i;};
struct HMENU__ {int i;};
typedef struct HMIDIIN__ *HMIDIIN;
struct HMIDI__ {int i;};
struct HMMIO__ {int i;};
typedef struct hostent HOSTENT;
struct HRSRC__ {int i;};
typedef struct tagHSZPAIR HSZPAIR;
struct HTASK__ {int i;};
typedef struct HWAVEIN__ *HWAVEIN;
struct HWAVE__ {int i;};
typedef struct HWINSTA__ *HWINSTA;
typedef struct tagIDLDESC IDLDESC;
struct IMalloc {struct IMallocVtbl *lpVtbl;};
typedef struct in_addr IN_ADDR;
struct IStream {struct IStreamVtbl *lpVtbl;};
typedef struct joyinfo_tag JOYINFO;
typedef unsigned int LHANDLE;
typedef struct tagLICINFO LICINFO;
typedef struct tagACCEL *LPACCEL;
typedef  void *LPCVOID;
typedef struct tagNMHDR *LPNMHDR;
typedef struct tagPOINT *LPPOINT;
typedef struct tagRECTL *LPRECTL;
typedef struct tagSIZE *LPSIZEL;
typedef struct _XFORM *LPXFORM;
enum MACRO_E {E_DRAW = -2147221184,};
enum MACRO_H {_STRING_H = 1,_FEATURES_H = 1,};
enum MACRO_I {I_IMAGECALLBACK = -1,};
enum MACRO_N {N_BTMASK = 0xF,N_TMASK = 0x30,N_TMASK1 = 0xC0,N_TMASK2 = 0xF0,N_BTSHFT = 0x4,N_TSHIFT = 0x2,};
enum MACRO_S {S_IFMT = 61440,S_IFDIR = 16384,S_IFCHR = 8192,S_IFBLK = 24576,S_IFREG = 32768,S_IFIFO = 4096,S_IFLNK = 40960,S_IFSOCK = 49152,S_ISUID = 2048,S_ISGID = 1024,S_ISVTX = 512,S_IRUSR = 256,S_IWUSR = 128,S_IXUSR = 64,S_IRWXU = 448,S_IREAD = 256,S_IWRITE = 128,S_IEXEC = 64,S_IRGRP = 32,S_IWGRP = 16,S_IXGRP = 8,S_IRWXG = 56,S_IROTH = 4,S_IWOTH = 2,S_IXOTH = 1,S_IRWXO = 7,};
typedef struct midihdr_tag MIDIHDR;
typedef struct tagOLEVERB OLEVERB;
typedef struct tagBITMAP *PBITMAP;
typedef struct tagPBRANGE PBRANGE;
typedef struct tagEMRARC *PEMRARC;
typedef struct tagEMREOF *PEMREOF;
typedef struct tagEMRARC *PEMRPIE;
typedef struct fd_set *PFD_SET;
typedef struct _KDHELP *PKDHELP;
typedef struct linger *PLINGER;
typedef struct mmtime_tag *PMMTIME;
typedef struct _NT_TIB *PNT_TIB;
typedef struct tagPOINTFX POINTFX;
typedef struct tagPOINT *PPOINTL;
typedef struct tagPOINTS *PPOINTS;
typedef unsigned short *PUSHORT;
typedef struct _GUID *REFGUID;
typedef struct tagRGBQUAD RGBQUAD;
typedef struct _RGNDATA RGNDATA;
typedef struct servent SERVENT;
typedef struct tagSTATSTG STATSTG;
typedef struct timeval TIMEVAL;
typedef struct _UDACCEL UDACCEL;
typedef struct value_entA VALENTA;
typedef struct value_entW VALENTW;
typedef struct tagVARDESC VARDESC;
enum VARENUM {VT_EMPTY = 0x0,VT_NULL = 0x1,VT_I2 = 0x2,VT_I4 = 0x3,VT_R4 = 0x4,VT_R8 = 0x5,VT_CY = 0x6,VT_DATE = 0x7,VT_BSTR = 0x8,VT_DISPATCH = 0x9,VT_ERROR = 0xA,VT_BOOL = 0xB,VT_VARIANT = 0xC,VT_UNKNOWN = 0xD,VT_DECIMAL = 0xE,VT_I1 = 0x10,VT_UI1 = 0x11,VT_UI2 = 0x12,VT_UI4 = 0x13,VT_I8 = 0x14,VT_UI8 = 0x15,VT_INT = 0x16,VT_UINT = 0x17,VT_VOID = 0x18,VT_HRESULT = 0x19,VT_PTR = 0x1A,VT_SAFEARRAY = 0x1B,VT_CARRAY = 0x1C,VT_USERDEFINED = 0x1D,VT_LPSTR = 0x1E,VT_LPWSTR = 0x1F,VT_FILETIME = 0x40,VT_BLOB = 0x41,VT_STREAM = 0x42,VT_STORAGE = 0x43,VT_STREAMED_OBJECT = 0x44,VT_STORED_OBJECT = 0x45,VT_BLOB_OBJECT = 0x46,VT_CF = 0x47,VT_CLSID = 0x48,VT_BSTR_BLOB = 0xFFF,VT_VECTOR = 0x1000,VT_ARRAY = 0x2000,VT_BYREF = 0x4000,VT_RESERVED = 0x8000,VT_ILLEGAL = 0xFFFF,VT_ILLEGALMASKED = 0xFFF,VT_TYPEMASK = 0xFFF,};
typedef struct tagVARIANT VARIANT;
typedef unsigned short VARTYPE;
typedef struct wavehdr_tag WAVEHDR;
typedef int WINBOOL;
typedef struct WSAData WSADATA;
struct _WSABUF {unsigned int len;char *buf;};
typedef unsigned int __gid_t;
typedef unsigned int __ino_t;
typedef int __key_t;
typedef int __off_t;
typedef int __pid_t;
typedef unsigned int __u_int;
typedef unsigned int __uid_t;
struct hostent {char *h_name;char **h_aliases;short h_addrtype;short h_length;char **h_addr_list;};
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
struct servent {char *s_name;char **s_aliases;short s_port;char *s_proto;};
enum tagADVF {ADVF_NODATA = 0x1,ADVF_PRIMEFIRST = 0x2,ADVF_ONLYONCE = 0x4,ADVF_DATAONSTOP = 0x40,ADVFCACHE_NOHANDLER = 0x8,ADVFCACHE_FORCEBUILTIN = 0x10,ADVFCACHE_ONSAVE = 0x20,};
enum tagSTGC {STGC_DEFAULT = 0x0,STGC_OVERWRITE = 0x1,STGC_ONLYIFCURRENT = 0x2,STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 0x3,};
typedef unsigned short u_short;
/// #define wchar_t  unsigned __int16 ===DEFINED
typedef struct tagBITMAP BITMAP;
typedef struct tagCABOOL CABOOL;
typedef struct tagCABSTR CABSTR;
typedef struct tagCADATE CADATE;
typedef struct tagCAUUID CAUUID;
typedef struct tagCIEXYZ CIEXYZ;
typedef struct _cpinfo CPINFO;
typedef struct _923DA7BE11DCB482D02B0566D8DB27AB DDEACK;
typedef double DOUBLE;
typedef struct tagEMRARC EMRARC;
typedef struct tagEMREOF EMREOF;
typedef struct tagEMRARC EMRPIE;
typedef struct fd_set FD_SET;
typedef struct HACCEL__ *HACCEL;
typedef void *HANDLE;
typedef struct HBRUSH__ *HBRUSH;
struct HDWP__ {int i;};
struct HKEY__ {int i;};
typedef struct tagHLITEM HLITEM;
typedef struct HMIXER__ *HMIXER;
struct HPEN__ {int i;};
struct HRGN__ {int i;};
struct HSTR__ {int i;};
struct HWND__ {int i;};
typedef struct _KDHELP KDHELP;
typedef struct linger LINGER;
typedef struct tagLOGPEN LOGPEN;
typedef struct _BLOB *LPBLOB;
typedef struct IFont *LPFONT;
typedef struct _GUID *LPGUID;
typedef struct _HLOG *LPHLOG;
typedef int *LPLONG;
typedef struct _MAT2 *LPMAT2;
typedef struct tagRECT *LPRECT;
typedef struct tagSIZE *LPSIZE;
typedef unsigned int *LPUINT;
typedef void *LPVOID;
typedef struct mmtime_tag MMTIME;
typedef struct _NT_TIB NT_TIB;
typedef struct tagPANOSE PANOSE;
typedef  void *PCVOID;
typedef struct tagPOINTF POINTF;
typedef struct tagPOINT POINTL;
typedef struct tagPOINTS POINTS;
typedef struct tagPOINT *PPOINT;
typedef struct tagRECTL *PRECTL;
typedef unsigned int PROPID;
typedef struct tagSIZE *PSIZEL;
typedef unsigned char *PUCHAR;
typedef unsigned int *PULONG;
typedef struct tagRemSNB RemSNB;
typedef struct _STRRET STRRET;
typedef struct tagTCITEM TCITEM;
typedef unsigned short USHORT;
typedef struct _WSABUF WSABUF;
typedef struct _IO_FILE __FILE;
typedef unsigned int __id_t;
typedef char int8_t;
typedef struct _979FA3DE6ECCF956231BFC297C4278E6 ldiv_t;
typedef unsigned int size_t;
typedef unsigned char u_char;
typedef unsigned int u_long;
typedef unsigned short ushort;
typedef unsigned int wint_t;
typedef struct tagACCEL ACCEL;
typedef struct tagCADBL CADBL;
typedef struct tagCAFLT CAFLT;
typedef struct _COORD COORD;
typedef struct _7ADE47B00230EF5EBD78FEDFCEB95499 DDELN;
typedef struct _12220BD7577024BDCE09342FCD2824E0 DDEUP;
typedef unsigned int DWORD;
typedef struct _FIXED FIXED;
typedef unsigned int FLAGS;
typedef float FLOAT;
typedef unsigned int GROUP;
typedef struct HCONV__ *HCONV;
struct HDC__ {int i;};
typedef struct HDESK__ *HDESK;
typedef struct HDROP__ *HDROP;
typedef struct HDRVR__ *HDRVR;
typedef int HFILE;
typedef struct HFONT__ *HFONT;
typedef struct HGLRC__ *HGLRC;
typedef struct HHOOK__ *HHOOK;
typedef struct HICON__ *HICON;
struct HKL__ {int i;};
typedef struct HMENU__ *HMENU;
typedef struct HMIDI__ *HMIDI;
typedef struct HMMIO__ *HMMIO;
typedef char *HPSTR;
typedef struct HRSRC__ *HRSRC;
struct HSZ__ {int i;};
typedef struct HTASK__ *HTASK;
typedef struct HWAVE__ *HWAVE;
struct IFont {struct IFontVtbl *lpVtbl;};
typedef struct _ABC *LPABC;
typedef struct _DCB *LPDCB;
typedef struct _IDA *LPIDA;
typedef int *LPINT;
typedef struct tagMSG *LPMSG;
typedef struct _QualityOfService *LPQOS;
typedef struct tagNMHDR NMHDR;
typedef struct _BLOB *PBLOB;
typedef struct _HLOG *PHLOG;
typedef struct _SID *PISID;
typedef struct tagPOINT POINT;
typedef struct tagRECT *PRECT;
typedef struct tagSIZE *PSIZE;
typedef unsigned int *PUINT;
typedef void *PVOID;
typedef struct tagRECTL RECTL;
typedef short SHORT;
typedef struct tagSIZE SIZEL;
typedef unsigned char UCHAR;
typedef unsigned int ULONG;
typedef struct _XFORM XFORM;
struct _GUID {unsigned int Data1;unsigned short Data2;unsigned short Data3;unsigned char Data4[8];};
typedef struct _979FA3DE6ECCF956231BFC297C4278E6 div_t;
typedef int int32;
struct rdget {unsigned int bufsiz;};
typedef unsigned int u_int;
typedef unsigned int ulong;
typedef struct _BLOB BLOB;
typedef unsigned char BYTE;
typedef struct tagCACY CACY;
typedef struct tagCAUB CAUB;
typedef struct tagCAUH CAUH;
typedef struct tagCAUI CAUI;
typedef struct tagCAUL CAUL;
typedef char CHAR;
typedef struct _IDA CIDA;
typedef struct tagCRGB CRGB;
typedef double DATE;
typedef struct _GUID GUID;
typedef struct HDWP__ *HDWP;
typedef struct HKEY__ *HKEY;
typedef struct _HLOG HLOG;
typedef struct HPEN__ *HPEN;
typedef struct HRGN__ *HRGN;
typedef struct HSTR__ *HSTR;
typedef struct HWND__ *HWND;
typedef int LONG;
typedef struct IBindCtx *LPBC;
typedef struct _MAT2 MAT2;
typedef struct _ACL *PACL;
typedef struct tagEMR *PEMR;
typedef int *PINT;
typedef struct tagMSG *PMSG;
typedef struct _NCB *PNCB;
typedef int (*PROC)();
typedef struct tagRECT RECT;
typedef struct tagSIZE SIZE;
typedef unsigned int UINT;
typedef unsigned short WORD;
typedef unsigned char byte;
struct rdop {short rd_op;unsigned int rd_parm;};
typedef unsigned int uint;
typedef struct _ABC ABC;
typedef struct _ACL ACL;
typedef struct tagCAH CAH;
typedef struct tagCAI CAI;
typedef struct tagCAL CAL;
typedef struct _DCB DCB;
typedef struct tagEMR EMR;
typedef struct HDC__ *HDC;
typedef struct HKL__ *HKL;
typedef struct HSZ__ *HSZ;
typedef int INT;
typedef struct tagMSG MSG;
typedef struct _NCB NCB;
typedef char *PSZ;
typedef struct _QualityOfService QOS;
typedef struct _SID SID;
typedef union tagCY CY;
struct tm;
struct _IMAGE_AUX_SYMBOL______16A1A8FB0340C07B06C110366CF85D46___A6589E1685AD051AED20409BF2544643 {WORD Dimension[4];};
struct _IMAGE_AUX_SYMBOL______16A1A8FB0340C07B06C110366CF85D46___D7CED02C5EE110FFB81CA02005CB2264 {DWORD PointerToLinenumber;DWORD PointerToNextFunction;};
struct _IMAGE_AUX_SYMBOL______7BA673E1ED5771089D188D89EB9BDF46___3C0209E125597A11F89742EEA0270158 {WORD Linenumber;WORD Size;};
struct tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88___A8262751543F154F80C41ED2519FD13B {DWORD dwMinimum;DWORD dwMaximum;};
struct tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88___A9226EEFE738F03A3F7D52221D0941CC {LONG lMinimum;LONG lMaximum;};
struct tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05___A8262751543F154F80C41ED2519FD13B {DWORD dwMinimum;DWORD dwMaximum;};
struct tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05___A9226EEFE738F03A3F7D52221D0941CC {LONG lMinimum;LONG lMaximum;};
struct tagVARIANT_________3FCBCE0E1D38ED64A5F05F924A43CE06___3D6F035A95DCF735295BE71D0E642E57 {PVOID pvRecord;struct IRecordInfo *pRecInfo;};
struct _IMAGE_SYMBOL___D31D1BC08928B4879C9F93D88486FFF4___DE8E098676ACAC74F2956A2D7B83DF3B {DWORD Short;DWORD Long;};
struct _SYSTEM_INFO___058745E319A46827965CDE7F37238831___AA04DEB0C6383F89F13D312A174572A9 {WORD wProcessorArchitecture;WORD wReserved;};
struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___02D247D6A486D56C73DBF439481983E7 {HMETAFILE hmeta;int xExt;int yExt;};
struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___0715B07ED6754B0F0C1844052E8836F8 {HICON hicon;};
struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___425444B63999EAF57D64386882606692 {HENHMETAFILE hemf;};
struct _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097___81408237330B83BB46845513C42A27AE {BYTE BaseMid;BYTE Flags1;BYTE Flags2;BYTE BaseHi;};
struct mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514___2498AB4F57B5A5935D3AAA9956C218FB {BYTE hour;BYTE min;BYTE sec;BYTE frame;BYTE fps;BYTE dummy;BYTE pad[2];};
struct mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514___B7A2B1CE967584EBB3840978181CF21D {DWORD songptrpos;};
struct in_addr___C13EC994467D6E67044F092615EC7EA9___01C175C1F0716DCA00314EDD79DBC0A0 {u_char s_b1;u_char s_b2;u_char s_b3;u_char s_b4;};
struct in_addr___C13EC994467D6E67044F092615EC7EA9___4DE764E669F663DACA3CBFDE73714CB5 {u_short s_w1;u_short s_w2;};
struct tagDEC___69538C3DD9098B71FCE9E10A032568F6___674876891A86A76F12C10005982BCA56 {ULONG Lo32;ULONG Mid32;};
struct tagDEC___88AE3BEC867F36A22A2957540062A42D___7F8459940C2B08BD5D82B0F27239141B {BYTE scale;BYTE sign;};
union _1A16B277A945B8F62DE8883A2D91AFD9___0740F39446D5E828B16B7363880DB674 {wint_t __wch;char __wchb[4];};
struct _FULL_PTR_XLAT_TABLES___5B5EF811252786EBFBAAA3889BB4C68D {PFULL_PTR_TO_REFID_ELEMENT *XlatTable;unsigned int NumberOfBuckets;unsigned int HashMask;};
union _IMAGE_SECTION_HEADER___39DFBA39B6D121CDFC1ACE66C995549C {DWORD PhysicalAddress;DWORD VirtualSize;};
union tagMIXERLINECONTROLSA___DC43C2837E8C20184C3137B308FBE3E1 {DWORD dwControlID;DWORD dwControlType;};
union tagMIXERLINECONTROLSW___DC43C2837E8C20184C3137B308FBE3E1 {DWORD dwControlID;DWORD dwControlType;};
union _____pthread_mutex_s___30DFB618E49C377A3D62C6584A4CBE95 {int __spins;__pthread_slist_t __list;};
struct _F85E194B51CBDC38F209555F4162D10C____pthread_mutex_s {int __lock;unsigned int __count;int __owner;int __kind;unsigned int __nusers;_____pthread_mutex_s___30DFB618E49C377A3D62C6584A4CBE95 __anonymous0;};
struct _IMAGE_AUX_SYMBOL___C84595816809DB9D1AC5ADB82092AE34 {BYTE Name[18];};
union _IMAGE_LINENUMBER___323A99206959B5083BD9C46482D6FCE5 {DWORD SymbolTableIndex;DWORD VirtualAddress;};
union _IMAGE_RELOCATION___1E7C1E46FA531EE3105A5918E7864FED {DWORD VirtualAddress;DWORD RelocCount;};
union tagMIXERCONTROLA___AFA1D3B62FF5E28583F9FD43B125895E {DWORD cSteps;DWORD cbCustomData;DWORD dwReserved[6];};
union tagMIXERCONTROLW___AFA1D3B62FF5E28583F9FD43B125895E {DWORD cSteps;DWORD cbCustomData;DWORD dwReserved[6];};
struct _ULARGE_INTEGER___0354AA9C204208F00D0965D07BBE7FAC {DWORD LowPart;DWORD HighPart;};
struct _12220BD7577024BDCE09342FCD2824E0 {unsigned short unused : 12;unsigned short fAck : 1;unsigned short fRelease : 1;unsigned short fReserved : 1;unsigned short fAckReq : 1;short cfFormat;BYTE rgb[1];};
struct _1A16B277A945B8F62DE8883A2D91AFD9 {int __count;union _1A16B277A945B8F62DE8883A2D91AFD9___0740F39446D5E828B16B7363880DB674 __value;};
union _1C4035FDEAFFF0FCE26E66A96F6BBEB4 {struct _1C4035FDEAFFF0FCE26E66A96F6BBEB4___20EFCB5FAA72B851457C6BAA266EC02E __data;char __size[48];long long __align;};
struct _2217024DFB55A6F4C8452C0D2E818FB7 {DWORD dwResult;DWORD dwError;};
struct _30CDF2DE7DC7B55457111E3E79D8AE18 {unsigned short unused : 12;unsigned short fResponse : 1;unsigned short fRelease : 1;unsigned short reserved : 1;unsigned short fAckReq : 1;short cfFormat;BYTE Value[1];};
struct _3EC5757393EE7828D79CED73ACE876F0 {unsigned int Count;RPC_IF_ID *IfId[1];};
struct _3FBC325AC5E1830BAC7DB9619C6C90C8 {INT Score;};
struct _58C398469581E4FCDD5ADAF6870FB0ED {UINT ViewMode;UINT fFlags;};
struct _6ECA53571B8FCC125A3088582131FB6E {__fd_mask __fds_bits[32];};
union _738A8E8AC168E5B4B1A53622C9D7048F {struct _738A8E8AC168E5B4B1A53622C9D7048F___D6587128ED4C013AF36DCCA432989BD5 __data;char __size[32];int __align;};
struct _7909BF26B031C365F3B32F82E7366E93 {INT LowerBound;INT UpperBound;};
struct _7F09F6AD7173E0292471C155D2885AEF {FILETIME DateAndTime;};
struct _A2F74AF90EE3AACE3322F4FF0CBF4977 {unsigned short unused : 13;unsigned short fRelease : 1;unsigned short fReserved : 2;short cfFormat;BYTE Value[1];};
struct _B3B9922EB7092B419B9B91CCE29DC8AC {DWORD dwStatus;DWORD dwSize;};
struct _B6447483CA6EC2EDA955C4C8EEAE802B {UINT cbSize;int iTabLength;int iLeftMargin;int iRightMargin;UINT uiLengthDrawn;};
struct _C0A2C8317C92AEC6C65405BB0D08D817 {INT Zone;};
struct _D692CA7460863103343173F071E8F66B {DWORD dwMajorVersion;DWORD dwMinorVersion;};
struct _E1FC672EFA0154DDDEED24E20FAA5FC7 {WORD versionNumber;WORD offset;};
struct _E3900F4E8C66B34C84E740787FDB0DE9 {INT DegreesNorth;INT MinutesNorth;INT SecondsNorth;INT DegreesEast;INT MinutesEast;INT SecondsEast;};
union _F85E194B51CBDC38F209555F4162D10C {struct _F85E194B51CBDC38F209555F4162D10C____pthread_mutex_s __data;char __size[24];int __align;};
struct _FEF45AADF86B3C581868F0239CC1F2BD {DWORD Ttl;};
typedef MIXERCONTROLDETAILS_LISTTEXTA *LPMIXERCONTROLDETAILS_LISTTEXT;
typedef enum mimeassociationdialog_in_flags MIMEASSOCIATIONDIALOG_IN_FLAGS;
typedef MIXERCONTROLDETAILS_LISTTEXTA *PMIXERCONTROLDETAILS_LISTTEXT;
typedef enum urlassociationdialog_in_flags URLASSOCIATIONDIALOG_IN_FLAGS;
struct tMIXERCONTROLDETAILS_UNSIGNED {DWORD dwValue;};
typedef MIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXT;
typedef WORD *PSECURITY_DESCRIPTOR_CONTROL;
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;
struct _IMAGE_ARCHIVE_MEMBER_HEADER {BYTE Name[16];BYTE Date[12];BYTE UserID[6];BYTE GroupID[6];BYTE Mode[8];BYTE Size[10];BYTE EndHeader[2];};
struct tMIXERCONTROLDETAILS_BOOLEAN {LONG fValue;};
typedef LPINTERNET_CACHE_ENTRY_INFOA LPINTERNET_CACHE_ENTRY_INFO;
typedef QUERY_SERVICE_LOCK_STATUSA *LPQUERY_SERVICE_LOCK_STATUS;
typedef WORD SECURITY_DESCRIPTOR_CONTROL;
struct _PSAPI_WS_WATCH_INFORMATION {LPVOID FaultingPc;LPVOID FaultingVa;};
struct tMIXERCONTROLDETAILS_SIGNED {LONG lValue;};
struct _IMAGE_COFF_SYMBOLS_HEADER {DWORD NumberOfSymbols;DWORD LvaToFirstSymbol;DWORD NumberOfLinenumbers;DWORD LvaToFirstLinenumber;DWORD RvaToFirstByteOfCode;DWORD RvaToLastByteOfCode;DWORD RvaToFirstByteOfData;DWORD RvaToLastByteOfData;};
struct _IMAGE_RESOURCE_DATA_ENTRY {DWORD OffsetToData;DWORD Size;DWORD CodePage;DWORD Reserved;};
struct _SET_PARTITION_INFORMATION {BYTE PartitionType;};
struct _TAPE_SET_MEDIA_PARAMETERS {ULONG BlockSize;};
struct _WINDOW_BUFFER_SIZE_RECORD {COORD dwSize;};
typedef INTERNET_CACHE_ENTRY_INFOA INTERNET_CACHE_ENTRY_INFO;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];
typedef MIDL_STUBLESS_PROXY_INFO *PMIDL_STUBLESS_PROXY_INFO;
typedef QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUS;
typedef void (*RPC_AUTH_KEY_RETRIEVAL_FN)(void *, unsigned short *, unsigned int, void **, RPC_STATUS *);
struct _ACL_REVISION_INFORMATION {DWORD AclRevision;};
struct _SID_IDENTIFIER_AUTHORITY {BYTE Value[6];};
typedef enum iurl_invokecommand_flags IURL_INVOKECOMMAND_FLAGS;
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];
struct _EXIT_PROCESS_DEBUG_INFO {DWORD dwExitCode;};
struct _PROCESS_MEMORY_COUNTERS {DWORD cb;DWORD PageFaultCount;DWORD PeakWorkingSetSize;DWORD WorkingSetSize;DWORD QuotaPeakPagedPoolUsage;DWORD QuotaPagedPoolUsage;DWORD QuotaPeakNonPagedPoolUsage;DWORD QuotaNonPagedPoolUsage;DWORD PagefileUsage;DWORD PeakPagefileUsage;};
struct tagMCI_WAVE_DELETE_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
typedef MCI_ANIM_WINDOW_PARMSA *LPMCI_ANIM_WINDOW_PARMS;
typedef MCI_OVLY_WINDOW_PARMSA *LPMCI_OVLY_WINDOW_PARMS;
typedef PRINTPROCESSOR_INFO_1A *LPPRINTPROCESSOR_INFO_1;
typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;
struct _EXIT_THREAD_DEBUG_INFO {DWORD dwExitCode;};
struct _MESSAGE_RESOURCE_BLOCK {DWORD LowId;DWORD HighId;DWORD OffsetToEntries;};
struct tagINITCOMMONCONTROLSEX {DWORD dwSize;DWORD dwICC;};
struct tagMCI_GETDEVCAPS_PARMS {DWORD dwCallback;DWORD dwReturn;DWORD dwItem;};
typedef enum _GET_FILEEX_INFO_LEVELS GET_FILEEX_INFO_LEVELS;
typedef enum _IMAGEHLP_STATUS_REASON IMAGEHLP_STATUS_REASON;
typedef QUERY_SERVICE_CONFIGA *LPQUERY_SERVICE_CONFIG;
typedef  URLINVOKECOMMANDINFO *PCURLINVOKECOMMANDINFO;
typedef MCI_ANIM_WINDOW_PARMSA *PMCI_ANIM_WINDOW_PARMS;
typedef MCI_OVLY_WINDOW_PARMSA *PMCI_OVLY_WINDOW_PARMS;
typedef PRINTPROCESSOR_INFO_1A *PPRINTPROCESSOR_INFO_1;
struct _IMAGE_BASE_RELOCATION {DWORD VirtualAddress;DWORD SizeOfBlock;};
struct _TAPE_CREATE_PARTITION {DWORD Method;DWORD Count;DWORD Size;};
struct _UNLOAD_DLL_DEBUG_INFO {LPVOID lpBaseOfDll;};
struct _USER_MODALS_INFO_1001 {DWORD usrmod1001_min_passwd_len;};
struct _USER_MODALS_INFO_1002 {DWORD usrmod1002_max_passwd_age;};
struct _USER_MODALS_INFO_1003 {DWORD usrmod1003_min_passwd_age;};
struct _USER_MODALS_INFO_1004 {DWORD usrmod1004_force_logoff;};
struct _USER_MODALS_INFO_1005 {DWORD usrmod1005_password_hist_len;};
struct _USER_MODALS_INFO_1006 {DWORD usrmod1006_role;};
struct tagCInterfaceProxyVtbl {CInterfaceProxyHeader header;void *Vtbl[];};
struct tagCStdPSFactoryBuffer { IPSFactoryBufferVtbl *lpVtbl;int RefCount; ProxyFileInfo **pProxyFileList;int Filler1;};
struct tagMCI_ANIM_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;DWORD dwSpeed;};
struct tagMCI_ANIM_STEP_PARMS {DWORD dwCallback;DWORD dwFrames;};
typedef enum _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;
typedef  URLINVOKECOMMANDINFO CURLINVOKECOMMANDINFO;
typedef ProxyFileInfo ExtendedProxyFileInfo;
typedef ENUM_SERVICE_STATUSA *LPENUM_SERVICE_STATUS;
typedef void (*LPFIBER_START_ROUTINE)(PVOID);
typedef MCI_ANIM_OPEN_PARMSA *LPMCI_ANIM_OPEN_PARMS;
typedef MCI_OVLY_OPEN_PARMSA *LPMCI_OVLY_OPEN_PARMS;
typedef MCI_OVLY_SAVE_PARMSA *LPMCI_OVLY_SAVE_PARMS;
typedef MCI_VD_ESCAPE_PARMSA *LPMCI_VD_ESCAPE_PARMS;
typedef MCI_WAVE_OPEN_PARMSA *LPMCI_WAVE_OPEN_PARMS;
typedef SERVICE_TABLE_ENTRYA *LPSERVICE_TABLE_ENTRY;
typedef UNIVERSAL_NAME_INFOA *LPUNIVERSAL_NAME_INFO;
typedef LPWSASERVICECLASSINFOA LPWSASERVICECLASSINFO;
typedef MCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMS;
typedef MCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMS;
typedef VARIANT_BOOL OLE_ENABLEDEFAULTBOOL;
typedef PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1;
typedef DWORD *PSECURITY_INFORMATION;
typedef void (*RPC_DISPATCH_FUNCTION)(PRPC_MESSAGE Message);
typedef DWORD SERVICE_STATUS_HANDLE;
typedef enum translateurl_in_flags TRANSLATEURL_IN_FLAGS;
struct _ACL_SIZE_INFORMATION {DWORD AceCount;DWORD AclBytesInUse;DWORD AclBytesFree;};
struct _IMAGE_DATA_DIRECTORY {DWORD VirtualAddress;DWORD Size;};
struct _IMAGE_FUNCTION_ENTRY {DWORD StartingAddress;DWORD EndingAddress;DWORD EndOfPrologue;};
struct _NETCONNECTINFOSTRUCT {DWORD cbStructure;DWORD dwFlags;DWORD dwSpeed;DWORD dwDelay;DWORD dwOptDataSize;};
struct tagOleMenuGroupWidths {LONG width[6];};
typedef MCI_ANIM_OPEN_PARMSA *PMCI_ANIM_OPEN_PARMS;
typedef MCI_OVLY_OPEN_PARMSA *PMCI_OVLY_OPEN_PARMS;
typedef MCI_OVLY_SAVE_PARMSA *PMCI_OVLY_SAVE_PARMS;
typedef MCI_VD_ESCAPE_PARMSA *PMCI_VD_ESCAPE_PARMS;
typedef MCI_WAVE_OPEN_PARMSA *PMCI_WAVE_OPEN_PARMS;
typedef PWSASERVICECLASSINFOA PWSASERVICECLASSINFO;
typedef QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIG;
typedef DWORD SECURITY_INFORMATION;
struct _REPL_EDIR_INFO_1000 {DWORD rped1000_integrity;};
struct _REPL_EDIR_INFO_1001 {DWORD rped1001_extent;};
struct _RPC_TRANSFER_SYNTAX {GUID Uuid;unsigned short VersMajor;unsigned short VersMinor;};
struct _wireSAFEARR_UNKNOWN {ULONG Size;IUnknown **apUnknown;};
struct _wireSAFEARR_VARIANT {ULONG Size;struct _wireVARIANT *aVariant;};
typedef enum _2B1CE62DD563DAD7D14A60B8BDAD5F2C cygwin_getinfo_types;
struct tagMCI_GENERIC_PARMS {DWORD dwCallback;};
struct tagMCI_SEQ_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;DWORD dwTempo;DWORD dwPort;DWORD dwSlave;DWORD dwMaster;DWORD dwOffset;};
struct tagMCI_VD_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;DWORD dwSpeed;};
struct tagMCI_VD_STEP_PARMS {DWORD dwCallback;DWORD dwFrames;};
typedef ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUS;
typedef  PROPSHEETHEADERA *LPCPROPSHEETHEADERA;
typedef  PROPSHEETHEADERW *LPCPROPSHEETHEADERW;
typedef HANDLE (*LPFN_WSACREATEEVENT)(void);
typedef MCI_SYSINFO_PARMSA *LPMCI_SYSINFO_PARMS;
typedef MIXERLINECONTROLSA *LPMIXERLINECONTROLS;
typedef OUTLINETEXTMETRICA *LPOUTLINETEXTMETRIC;
typedef LPWSANAMESPACE_INFOA LPWSANAMESPACE_INFO;
typedef MCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMS;
typedef MCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMS;
typedef MCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMS;
typedef MCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMS;
typedef MCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMS;
typedef SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRY;
typedef UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFO;
typedef WSASERVICECLASSINFOA WSASERVICECLASSINFO;
typedef void (*XMIT_HELPER_ROUTINE)(PMIDL_STUB_MESSAGE);
struct _CHARDEVQ_INFO_1002 {DWORD cq1002_priority;};
struct _DEV_BROADCAST_PORT {DWORD dbcp_size;DWORD dbcp_devicetype;DWORD dbcp_reserved;char dbcp_name[1];};
struct _PERF_COUNTER_BLOCK {DWORD ByteLength;};
struct _TOKEN_DEFAULT_DACL {PACL DefaultDacl;};
struct _USER_MODALS_INFO_0 {DWORD usrmod0_min_passwd_len;DWORD usrmod0_max_passwd_age;DWORD usrmod0_min_passwd_age;DWORD usrmod0_force_logoff;DWORD usrmod0_password_hist_len;};
struct _USER_MODALS_INFO_3 {DWORD usrmod3_lockout_duration;DWORD usrmod3_lockout_observation_window;DWORD usrmod3_lockout_threshold;};
struct midiproptimediv_tag {DWORD cbStruct;DWORD dwTimeDiv;};
struct midistrmbuffver_tag {DWORD dwVersion;DWORD dwMid;DWORD dwOEMVersion;};
struct tagMCI_RECORD_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
struct tagMCI_STATUS_PARMS {DWORD dwCallback;DWORD dwReturn;DWORD dwItem;DWORD dwTrack;};
struct tagMINIMIZEDMETRICS {UINT cbSize;int iWidth;int iHorzGap;int iVertGap;int iArrange;};
struct tagVS_FIXEDFILEINFO {DWORD dwSignature;DWORD dwStrucVersion;DWORD dwFileVersionMS;DWORD dwFileVersionLS;DWORD dwProductVersionMS;DWORD dwProductVersionLS;DWORD dwFileFlagsMask;DWORD dwFileFlags;DWORD dwFileOS;DWORD dwFileType;DWORD dwFileSubtype;DWORD dwFileDateMS;DWORD dwFileDateLS;};
typedef enum _FINDEX_INFO_LEVELS FINDEX_INFO_LEVELS;
typedef CONNECTDLGSTRUCTA *LPCONNECTDLGSTRUCT;
typedef DATATYPES_INFO_1A *LPDATATYPES_INFO_1;
typedef LPGOPHER_FIND_DATAA LPGOPHER_FIND_DATA;
typedef void (*LPHANDLER_FUNCTION)(DWORD);
typedef INTERNET_BUFFERSA *LPINTERNET_BUFFERS;
typedef NONCLIENTMETRICSA *LPNONCLIENTMETRICS;
typedef PRINTER_DEFAULTSA *LPPRINTER_DEFAULTS;
typedef REMOTE_NAME_INFOA *LPREMOTE_NAME_INFO;
typedef SHELLEXECUTEINFOA *LPSHELLEXECUTEINFO;
typedef enum _WSAESETSERVICEOP *LPWSAESETSERVICEOP;
typedef LPWSAPROTOCOL_INFOA LPWSAPROTOCOL_INFO;
typedef MCI_SYSINFO_PARMSA *PMCI_SYSINFO_PARMS;
typedef MIXERLINECONTROLSA *PMIXERLINECONTROLS;
typedef OUTLINETEXTMETRICA *POUTLINETEXTMETRIC;
typedef PWSANAMESPACE_INFOA PWSANAMESPACE_INFO;
typedef I_RPC_HANDLE RPC_BINDING_HANDLE;
typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;
struct _CONNECTION_INFO_0 {DWORD coni0_id;};
struct _DEV_BROADCAST_HDR {DWORD dbch_size;DWORD dbch_devicetype;DWORD dbch_reserved;};
struct _DEV_BROADCAST_OEM {DWORD dbco_size;DWORD dbco_devicetype;DWORD dbco_reserved;DWORD dbco_identifier;DWORD dbco_suppfunc;};
struct _ERRLOG_OTHER_INFO {DWORD alrter_errcode;DWORD alrter_offset;};
struct _MENU_EVENT_RECORD {UINT dwCommandId;};
struct _TAPE_GET_POSITION {ULONG Type;ULONG Partition;ULONG OffsetLow;ULONG OffsetHigh;};
struct tagLOCALESIGNATURE {DWORD lsUsb[4];DWORD lsCsbDefault[2];DWORD lsCsbSupported[2];};
typedef enum _FINDEX_SEARCH_OPS FINDEX_SEARCH_OPS;
typedef enum iurl_seturl_flags IURL_SETURL_FLAGS;
typedef  FOLDERSETTINGS *LPCFOLDERSETTINGS;
typedef  PROPSHEETPAGEA *LPCPROPSHEETPAGEA;
typedef  PROPSHEETPAGEA *LPCPROPSHEETPAGEW;
typedef  REBARBANDINFOA *LPCREBARBANDINFOA;
typedef  REBARBANDINFOW *LPCREBARBANDINFOW;
typedef HW_PROFILE_INFOA *LPHW_PROFILE_INFO;
typedef IMEMENUITEMINFOA *LPIMEMENUITEMINFO;
typedef enum _92E343B9497C79C1DA0A7F8171886153 *LPINTERNET_SCHEME;
typedef MDICREATESTRUCTA *LPMDICREATESTRUCT;
typedef TV_INSERTSTRUCTA *LPTV_INSERTSTRUCT;
typedef WIN32_FIND_DATAA *LPWIN32_FIND_DATA;
typedef MCI_SYSINFO_PARMSA MCI_SYSINFO_PARMS;
typedef MIXERLINECONTROLSA MIXERLINECONTROLS;
typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;
typedef WORD *PBAD_TRACK_NUMBER;
typedef DATATYPES_INFO_1A *PDATATYPES_INFO_1;
typedef PRINTER_DEFAULTSA *PPRINTER_DEFAULTS;
typedef enum _WSAESETSERVICEOP *PWSAESETSERVICEOP;
typedef I_RPC_HANDLE *RPC_EP_INQ_HANDLE;
typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;
typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;
typedef WSANAMESPACE_INFOA WSANAMESPACE_INFO;
struct _ACCESS_INFO_1002 {DWORD acc1002_attr;};
struct _ADMIN_OTHER_INFO {DWORD alrtad_errcode;DWORD alrtad_numstrings;};
struct _FIND_NAME_BUFFER {UCHAR length;UCHAR access_control;UCHAR frame_control;UCHAR destination_addr[6];UCHAR source_addr[6];UCHAR routing_info[18];};
struct _HISTOGRAM_BUCKET {DWORD Reads;DWORD Writes;};
struct _PRINT_OTHER_INFO {DWORD alrtpr_jobid;DWORD alrtpr_status;DWORD alrtpr_submitted;DWORD alrtpr_size;};
struct _SERVER_INFO_1010 {LONG sv1010_disc;};
struct _SERVER_INFO_1017 {DWORD sv1017_announce;};
struct _SERVER_INFO_1018 {DWORD sv1018_anndelta;};
struct _SERVER_INFO_1107 {DWORD sv1107_users;};
struct _SERVER_INFO_1501 {DWORD sv1501_sessopens;};
struct _SERVER_INFO_1502 {DWORD sv1502_sessvcs;};
struct _SERVER_INFO_1503 {DWORD sv1503_opensearch;};
struct _SERVER_INFO_1506 {DWORD sv1506_maxworkitems;};
struct _SERVER_INFO_1509 {DWORD sv1509_maxrawbuflen;};
struct _SERVER_INFO_1510 {DWORD sv1510_sessusers;};
struct _SERVER_INFO_1511 {DWORD sv1511_sessconns;};
struct _SERVER_INFO_1512 {DWORD sv1512_maxnonpagedmemoryusage;};
struct _SERVER_INFO_1513 {DWORD sv1513_maxpagedmemoryusage;};
struct _SERVER_INFO_1520 {DWORD sv1520_maxcopyreadlen;};
struct _SERVER_INFO_1521 {DWORD sv1521_maxcopywritelen;};
struct _SERVER_INFO_1522 {DWORD sv1522_minkeepsearch;};
struct _SERVER_INFO_1523 {DWORD sv1523_maxkeepsearch;};
struct _SERVER_INFO_1524 {DWORD sv1524_minkeepcomplsearch;};
struct _SERVER_INFO_1525 {DWORD sv1525_maxkeepcomplsearch;};
struct _SERVER_INFO_1528 {DWORD sv1528_scavtimeout;};
struct _SERVER_INFO_1529 {DWORD sv1529_minrcvqueue;};
struct _SERVER_INFO_1530 {DWORD sv1530_minfreeworkitems;};
struct _SERVER_INFO_1533 {DWORD sv1533_maxmpxct;};
struct _SERVER_INFO_1534 {DWORD sv1534_oplockbreakwait;};
struct _SERVER_INFO_1535 {DWORD sv1535_oplockbreakresponsewait;};
struct _SERVER_INFO_1543 {DWORD sv1543_initsesstable;};
struct _SERVER_INFO_1544 {DWORD sv1544_initconntable;};
struct _SERVER_INFO_1545 {DWORD sv1545_initfiletable;};
struct _SERVER_INFO_1546 {DWORD sv1546_initsearchtable;};
struct _SERVER_INFO_1547 {DWORD sv1547_alertschedule;};
struct _SERVER_INFO_1548 {DWORD sv1548_errorthreshold;};
struct _SERVER_INFO_1549 {DWORD sv1549_networkerrorthreshold;};
struct _SERVER_INFO_1550 {DWORD sv1550_diskspacethreshold;};
struct _SERVER_INFO_1552 {DWORD sv1552_maxlinkdelay;};
struct _SERVER_INFO_1553 {DWORD sv1553_minlinkthroughput;};
struct _SERVER_INFO_1554 {DWORD sv1554_linkinfovalidtime;};
struct _SERVER_INFO_1555 {DWORD sv1555_scavqosinfoupdatetime;};
struct _SERVER_INFO_1556 {DWORD sv1556_maxworkitemidletime;};
struct _SERVER_INFO_1557 {DWORD sv1557_maxrawworkitems;};
struct _SERVER_INFO_1560 {DWORD sv1560_producttype;};
struct _SERVER_INFO_1561 {DWORD sv1561_serversize;};
struct _SERVER_INFO_1562 {DWORD sv1562_connectionlessautodisc;};
struct _SERVER_INFO_1563 {DWORD sv1563_sharingviolationretries;};
struct _SERVER_INFO_1564 {DWORD sv1564_sharingviolationdelay;};
struct _SERVER_INFO_1565 {DWORD sv1565_maxglobalopensearch;};
struct _SERVER_INFO_1567 {DWORD sv1567_lockviolationretries;};
struct _SERVER_INFO_1568 {DWORD sv1568_lockviolationoffset;};
struct _SERVER_INFO_1569 {DWORD sv1569_lockviolationdelay;};
struct _SERVER_INFO_1570 {DWORD sv1570_mdlreadswitchover;};
struct _SERVER_INFO_1571 {DWORD sv1571_cachedopenlimit;};
struct _SERVER_INFO_1572 {DWORD sv1572_criticalthreads;};
struct _SERVER_INFO_1573 {DWORD sv1573_restrictnullsessaccess;};
struct _SERVER_INFO_1574 {DWORD sv1574_enablewfw311directipx;};
struct _SERVER_INFO_1575 {DWORD sv1575_otherqueueaffinity;};
struct _SERVER_INFO_1576 {DWORD sv1576_queuesamplesecs;};
struct _SERVER_INFO_1577 {DWORD sv1577_balancecount;};
struct _SERVER_INFO_1578 {DWORD sv1578_preferredaffinity;};
struct _SERVER_INFO_1579 {DWORD sv1579_maxfreerfcbs;};
struct _SERVER_INFO_1580 {DWORD sv1580_maxfreemfcbs;};
struct _SERVER_INFO_1581 {DWORD sv1581_maxfreemlcbs;};
struct _SERVER_INFO_1582 {DWORD sv1582_maxfreepagedpoolchunks;};
struct _SERVER_INFO_1583 {DWORD sv1583_minpagedpoolchunksize;};
struct _SERVER_INFO_1584 {DWORD sv1584_maxpagedpoolchunksize;};
struct _WSAPROTOCOLCHAIN {int ChainLen;DWORD ChainEntries[7];};
struct midiproptempo_tag {DWORD cbStruct;DWORD dwTempo;};
struct tagMCI_PLAY_PARMS {DWORD dwCallback;DWORD dwFrom;DWORD dwTo;};
struct tagMCI_SEEK_PARMS {DWORD dwCallback;DWORD dwTo;};
typedef WORD BAD_TRACK_NUMBER;
typedef CONNECTDLGSTRUCTA CONNECTDLGSTRUCT;
typedef DATATYPES_INFO_1A DATATYPES_INFO_1;
typedef GOPHER_FIND_DATAA GOPHER_FIND_DATA;
typedef INTERNET_BUFFERSA INTERNET_BUFFERS;
typedef  MENUITEMINFOA *LPCMENUITEMINFOA;
typedef  MENUITEMINFOW *LPCMENUITEMINFOW;
typedef MCI_INFO_PARMSA *LPMCI_INFO_PARMS;
typedef MCI_LOAD_PARMSA *LPMCI_LOAD_PARMS;
typedef MCI_OPEN_PARMSA *LPMCI_OPEN_PARMS;
typedef MCI_SAVE_PARMSA *LPMCI_SAVE_PARMS;
typedef MONITOR_INFO_1A *LPMONITOR_INFO_1;
typedef MONITOR_INFO_2A *LPMONITOR_INFO_2;
typedef PRINTER_INFO_1A *LPPRINTER_INFO_1;
typedef PRINTER_INFO_2A *LPPRINTER_INFO_2;
typedef PRINTER_INFO_4A *LPPRINTER_INFO_4;
typedef PRINTER_INFO_5A *LPPRINTER_INFO_5;
typedef SHFILEOPSTRUCTA *LPSHFILEOPSTRUCT;
typedef LPURL_COMPONENTSA LPURL_COMPONENTS;
typedef enum _WSAEcomparator *LPWSAECOMPARATOR;
typedef LPWSANSCLASSINFOA LPWSANSCLASSINFO;
typedef NONCLIENTMETRICSA NONCLIENTMETRICS;
typedef VARIANT_BOOL OLE_OPTEXCLUSIVE;
typedef IMEMENUITEMINFOA *PIMEMENUITEMINFO;
typedef PRINTER_DEFAULTSA PRINTER_DEFAULTS;
typedef REMOTE_NAME_INFOA REMOTE_NAME_INFO;
typedef SHELLEXECUTEINFOA SHELLEXECUTEINFO;
typedef enum _WSAESETSERVICEOP WSAESETSERVICEOP;
typedef WSAPROTOCOL_INFOA WSAPROTOCOL_INFO;
struct _AE_RESACCESSREJ {DWORD ae_rr_compname;DWORD ae_rr_username;DWORD ae_rr_resname;DWORD ae_rr_operation;};
struct _DSKTLSYSTEMTIME {WORD wYear;WORD wMonth;WORD wDayOfWeek;WORD wDay;WORD wHour;WORD wMinute;WORD wSecond;WORD wMilliseconds;WORD wResult;};
struct _GROUP_INFO_1005 {DWORD grpi1005_attributes;};
struct _NETLOGON_INFO_1 {DWORD netlog1_flags;DWORD netlog1_pdc_connection_status;};
struct _NETLOGON_INFO_3 {DWORD netlog3_flags;DWORD netlog3_logon_attempts;DWORD netlog3_reserved1;DWORD netlog3_reserved2;DWORD netlog3_reserved3;DWORD netlog3_reserved4;DWORD netlog3_reserved5;};
struct _SHARE_INFO_1006 {DWORD shi1006_max_uses;};
struct _USER_OTHER_INFO {DWORD alrtus_errcode;DWORD alrtus_numstrings;};
struct _VTableProvStruc {FARPROC FuncVerifyImage;};
struct _WKSTA_INFO_1010 {DWORD wki1010_char_wait;};
struct _WKSTA_INFO_1011 {DWORD wki1011_collection_time;};
struct _WKSTA_INFO_1012 {DWORD wki1012_maximum_collection_count;};
struct _WKSTA_INFO_1013 {DWORD wki1013_keep_conn;};
struct _WKSTA_INFO_1018 {DWORD wki1018_sess_timeout;};
struct _WKSTA_INFO_1023 {DWORD wki1023_siz_char_buf;};
struct _WKSTA_INFO_1027 {DWORD wki1027_errlog_sz;};
struct _WKSTA_INFO_1028 {DWORD wki1028_print_buf_time;};
struct _WKSTA_INFO_1032 {DWORD wki1032_wrk_heuristics;};
struct _WKSTA_INFO_1033 {DWORD wki1033_max_threads;};
struct _WKSTA_INFO_1041 {DWORD wki1041_lock_quota;};
struct _WKSTA_INFO_1042 {DWORD wki1042_lock_increment;};
struct _WKSTA_INFO_1043 {DWORD wki1043_lock_maximum;};
struct _WKSTA_INFO_1044 {DWORD wki1044_pipe_increment;};
struct _WKSTA_INFO_1045 {DWORD wki1045_pipe_maximum;};
struct _WKSTA_INFO_1046 {DWORD wki1046_dormant_file_limit;};
struct _WKSTA_INFO_1047 {DWORD wki1047_cache_file_timeout;};
struct _WKSTA_INFO_1062 {DWORD wki1062_read_ahead_throughput;};
struct tagANIMATIONINFO {UINT cbSize;int iMinAnimate;};
struct tagCANDIDATELIST {DWORD dwSize;DWORD dwStyle;DWORD dwCount;DWORD dwSelection;DWORD dwPageStart;DWORD dwPageSize;DWORD dwOffset[1];};
struct tagENHMETARECORD {DWORD iType;DWORD nSize;DWORD dParm[1];};
struct tagFONTSIGNATURE {DWORD fsUsb[4];DWORD fsCsb[2];};
struct tagMCI_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;};
typedef HW_PROFILE_INFOA HW_PROFILE_INFO;
typedef IMEMENUITEMINFOA IMEMENUITEMINFO;
typedef enum _92E343B9497C79C1DA0A7F8171886153 INTERNET_SCHEME;
typedef ADDJOB_INFO_1A *LPADDJOB_INFO_1;
typedef LPCMENUITEMINFOA LPCMENUITEMINFO;
typedef  WAVEFORMATEX *LPCWAVEFORMATEX;
typedef DISCDLGSTRUCTA *LPDISCDLGSTRUCT;
typedef DRIVER_INFO_2A *LPDRIVER_INFO_2;
typedef ENUMLOGFONTEXA *LPENUMLOGFONTEX;
typedef WORD *LPINTERNET_PORT;
typedef LOGCOLORSPACEA *LPLOGCOLORSPACE;
typedef NEWTEXTMETRICA *LPNEWTEXTMETRIC;
typedef OSVERSIONINFOA *LPOSVERSIONINFO;
typedef REBARBANDINFOA *LPREBARBANDINFO;
typedef MDICREATESTRUCTA MDICREATESTRUCT;
typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;
typedef MCI_LOAD_PARMSA *PMCI_LOAD_PARMS;
typedef MCI_OPEN_PARMSA *PMCI_OPEN_PARMS;
typedef MCI_SAVE_PARMSA *PMCI_SAVE_PARMS;
typedef  MIDL_STUB_DESC *PMIDL_STUB_DESC;
typedef MONITOR_INFO_1A *PMONITOR_INFO_1;
typedef MONITOR_INFO_2A *PMONITOR_INFO_2;
typedef NOTIFYICONDATAA *PNOTIFYICONDATA;
typedef PRINTER_INFO_1A *PPRINTER_INFO_1;
typedef PRINTER_INFO_2A *PPRINTER_INFO_2;
typedef PRINTER_INFO_4A *PPRINTER_INFO_4;
typedef PRINTER_INFO_5A *PPRINTER_INFO_5;
typedef WORD PRINTEROP_FLAGS;
typedef ULARGE_INTEGER *PULARGE_INTEGER;
typedef enum _WSAEcomparator *PWSAECOMPARATOR;
typedef PWSANSCLASSINFOA PWSANSCLASSINFO;
typedef TV_INSERTSTRUCTA TV_INSERTSTRUCT;
typedef WIN32_FIND_DATAA WIN32_FIND_DATA;
struct _AE_SERVICESTAT {DWORD ae_ss_compname;DWORD ae_ss_username;DWORD ae_ss_svcname;DWORD ae_ss_status;DWORD ae_ss_code;DWORD ae_ss_text;DWORD ae_ss_returnval;};
struct _PRINTER_INFO_3 {PSECURITY_DESCRIPTOR pSecurityDescriptor;};
struct _REPL_INFO_1000 {DWORD rp1000_interval;};
struct _REPL_INFO_1001 {DWORD rp1001_pulse;};
struct _REPL_INFO_1002 {DWORD rp1002_guardtime;};
struct _REPL_INFO_1003 {DWORD rp1003_random;};
struct _SCONTEXT_QUEUE {unsigned int NumberOfObjects;NDR_SCONTEXT *ArrayOfObjects;};
struct _SERVICE_STATUS {DWORD dwServiceType;DWORD dwCurrentState;DWORD dwControlsAccepted;DWORD dwWin32ExitCode;DWORD dwServiceSpecificExitCode;DWORD dwCheckPoint;DWORD dwWaitHint;};
struct _SESSION_BUFFER {UCHAR lsn;UCHAR state;UCHAR local_name[16];UCHAR remote_name[16];UCHAR rcvs_outstanding;UCHAR sends_outstanding;};
struct _SESSION_HEADER {UCHAR sess_name;UCHAR num_sess;UCHAR rcv_dg_outstanding;UCHAR rcv_any_outstanding;};
struct _USER_INFO_1005 {DWORD usri1005_priv;};
struct _USER_INFO_1008 {DWORD usri1008_flags;};
struct _USER_INFO_1010 {DWORD usri1010_auth_flags;};
struct _USER_INFO_1017 {DWORD usri1017_acct_expires;};
struct _USER_INFO_1018 {DWORD usri1018_max_storage;};
struct _USER_INFO_1024 {DWORD usri1024_country_code;};
struct _USER_INFO_1025 {DWORD usri1025_code_page;};
struct _USER_INFO_1051 {DWORD usri1051_primary_group_id;};
struct _repastespecial {DWORD dwAspect;DWORD dwParam;};
struct tagCIEXYZTRIPLE {CIEXYZ ciexyzRed;CIEXYZ ciexyzGreen;CIEXYZ ciexyzBlue;};
struct tagHELPWININFOA {int wStructSize;int x;int y;int dx;int dy;int wMax;CHAR rgchMember[2];};
struct tagPALETTEENTRY {BYTE peRed;BYTE peGreen;BYTE peBlue;BYTE peFlags;};
typedef enum _BF0F4415E1602A9FE3AFCAFCA10811A9 FOLDERVIEWMODE;
typedef LPRECT LPBORDERWIDTHS;
typedef  DLGTEMPLATE *LPCDLGTEMPLATE;
typedef HIGHCONTRASTA *LPHIGHCONTRAST;
typedef MENUITEMINFOA *LPMENUITEMINFO;
typedef MIXERCONTROLA *LPMIXERCONTROL;
typedef MSGBOXPARAMSA *LPMSGBOXPARAMS;
typedef MULTIKEYHELPA *LPMULTIKEYHELP;
typedef OPENFILENAMEA *LPOPENFILENAME;
typedef PAGESETUPDLGA *LPPAGESETUPDLG;
typedef REGISTERWORDA *LPREGISTERWORD;
typedef MCI_INFO_PARMSA MCI_INFO_PARMS;
typedef MCI_LOAD_PARMSA MCI_LOAD_PARMS;
typedef MCI_OPEN_PARMSA MCI_OPEN_PARMS;
typedef MCI_SAVE_PARMSA MCI_SAVE_PARMS;
typedef MONITOR_INFO_1A MONITOR_INFO_1;
typedef MONITOR_INFO_2A MONITOR_INFO_2;
typedef void (*MSGBOXCALLBACK)(LPHELPINFO);
typedef NOTIFYICONDATAA NOTIFYICONDATA;
typedef enum tagOLEUIPASTEFLAG OLEUIPASTEFLAG;
typedef VARIANT_BOOL OLE_CANCELBOOL;
typedef ADDJOB_INFO_1A *PADDJOB_INFO_1;
typedef DRIVER_INFO_2A *PDRIVER_INFO_2;
typedef LARGE_INTEGER *PLARGE_INTEGER;
typedef NEWTEXTMETRICA *PNEWTEXTMETRIC;
typedef OSVERSIONINFOA *POSVERSIONINFO;
typedef PRINTER_INFO_1A PRINTER_INFO_1;
typedef PRINTER_INFO_2A PRINTER_INFO_2;
typedef PRINTER_INFO_4A PRINTER_INFO_4;
typedef PRINTER_INFO_5A PRINTER_INFO_5;
typedef enum tagRAPISTREAMFLAG RAPISTREAMFLAG;
typedef SHFILEOPSTRUCTA SHFILEOPSTRUCT;
typedef URL_COMPONENTSA URL_COMPONENTS;
typedef enum _WSAEcomparator WSAECOMPARATOR;
typedef WSANSCLASSINFOA WSANSCLASSINFO;
struct _AE_SESSLOGOFF {DWORD ae_sf_compname;DWORD ae_sf_username;DWORD ae_sf_reason;};
struct _BYTE_SIZEDARR {unsigned int clSize;byte *pData;};
struct _HANDLE_INFO_1 {DWORD hdli1_chartime;DWORD hdli1_charcount;};
struct _STAT_SERVER_0 {DWORD sts0_start;DWORD sts0_fopens;DWORD sts0_devopens;DWORD sts0_jobsqueued;DWORD sts0_sopens;DWORD sts0_stimedout;DWORD sts0_serrorout;DWORD sts0_pwerrors;DWORD sts0_permerrors;DWORD sts0_syserrors;DWORD sts0_bytessent_low;DWORD sts0_bytessent_high;DWORD sts0_bytesrcvd_low;DWORD sts0_bytesrcvd_high;DWORD sts0_avresponse;DWORD sts0_reqbufneed;DWORD sts0_bigbufneed;};
typedef __u_quad_t __fsblkcnt64_t;
typedef __u_quad_t __fsfilcnt64_t;
typedef __builtin_va_list __gnuc_va_list;
struct tagCURSORSHAPE {int xHotSpot;int yHotSpot;int cx;int cy;int cbWidth;BYTE Planes;BYTE BitsPixel;};
struct tagHANDLETABLE {HGDIOBJ objectHandle[1];};
struct tagKERNINGPAIR {WORD wFirst;WORD wSecond;int iKernAmount;};
struct tagSTYLESTRUCT {DWORD styleOld;DWORD styleNew;};
typedef wireSAFEARRAY *wirePSAFEARRAY;
typedef ADDJOB_INFO_1A ADDJOB_INFO_1;
typedef PVOID DIGEST_HANDLE;
typedef DISCDLGSTRUCTA DISCDLGSTRUCT;
typedef DRIVER_INFO_2A DRIVER_INFO_2;
typedef ENUMLOGFONTEXA ENUMLOGFONTEX;
typedef WORD INTERNET_PORT;
typedef LONG LCSGAMUTMATCH;
typedef LOGCOLORSPACEA LOGCOLORSPACE;
typedef CCSTYLEFLAGA *LPCCSTYLEFLAG;
typedef CHOOSECOLORA *LPCHOOSECOLOR;
typedef  ITEMIDLIST *LPCITEMIDLIST;
typedef  SCROLLINFO *LPCSCROLLINFO;
typedef ENUMLOGFONTA *LPENUMLOGFONT;
typedef FINDREPLACEA *LPFINDREPLACE;
typedef FORM_INFO_1A *LPFORM_INFO_1;
typedef GCP_RESULTSA *LPGCP_RESULTS;
typedef TTHITTESTINFOA *LPHITTESTINFO;
typedef ICONMETRICSA *LPICONMETRICS;
typedef MIDIOUTCAPSA *LPMIDIOUTCAPS;
typedef NETRESOURCEA *LPNETRESOURCE;
typedef NM_TREEVIEWA *LPNM_TREEVIEW;
typedef PORT_INFO_1A *LPPORT_INFO_1;
typedef PORT_INFO_2A *LPPORT_INFO_2;
typedef PORT_INFO_3A *LPPORT_INFO_3;
typedef SOUNDSENTRYA *LPSOUNDSENTRY;
typedef STARTUPINFOA *LPSTARTUPINFO;
typedef TOOLTIPTEXTA *LPTOOLTIPTEXT;
typedef WAVEOUTCAPSA *LPWAVEOUTCAPS;
typedef LPWSAQUERYSETA LPWSAQUERYSET;
typedef DWORD MONTHDAYSTATE;
typedef NEWTEXTMETRICA NEWTEXTMETRIC;
typedef enum tagOLEGETMONIKER OLEGETMONIKER;
typedef OSVERSIONINFOA OSVERSIONINFO;
typedef PVOID PACCESS_TOKEN;
typedef MIXERCONTROLA *PMIXERCONTROL;
typedef MSGBOXPARAMSA *PMSGBOXPARAMS;
typedef MULTIKEYHELPA *PMULTIKEYHELP;
typedef DWORD PM_CLOSE_PROC(void);
typedef REGISTERWORDA *PREGISTERWORD;
typedef enum _SID_NAME_USE *PSID_NAME_USE;
typedef REBARBANDINFOA REBARBANDINFO;
typedef TEXTMETRICW TEXTMETRICOLE;
typedef TTHITTESTINFOA TTHITTESTINFO;
struct _AE_CLOSEFILE {DWORD ae_cf_compname;DWORD ae_cf_username;DWORD ae_cf_resname;DWORD ae_cf_fileid;DWORD ae_cf_duration;DWORD ae_cf_reason;};
struct _AE_CONNSTART {DWORD ae_ct_compname;DWORD ae_ct_username;DWORD ae_ct_netname;DWORD ae_ct_connid;};
struct _AE_NETLOGOFF {DWORD ae_nf_compname;DWORD ae_nf_username;DWORD ae_nf_reserved1;DWORD ae_nf_reserved2;};
struct _AE_RESACCESS {DWORD ae_ra_compname;DWORD ae_ra_username;DWORD ae_ra_resname;DWORD ae_ra_operation;DWORD ae_ra_returncode;DWORD ae_ra_restype;DWORD ae_ra_fileid;};
struct _AE_SESSLOGON {DWORD ae_so_compname;DWORD ae_so_username;DWORD ae_so_privilege;};
struct _AE_SESSPWERR {DWORD ae_sp_compname;DWORD ae_sp_username;};
struct _AE_SRVSTATUS {DWORD ae_sv_status;};
struct _COMMTIMEOUTS {DWORD ReadIntervalTimeout;DWORD ReadTotalTimeoutMultiplier;DWORD ReadTotalTimeoutConstant;DWORD WriteTotalTimeoutMultiplier;DWORD WriteTotalTimeoutConstant;};
struct _MEMORYSTATUS {DWORD dwLength;DWORD dwMemoryLoad;DWORD dwTotalPhys;DWORD dwAvailPhys;DWORD dwTotalPageFile;DWORD dwAvailPageFile;DWORD dwTotalVirtual;DWORD dwAvailVirtual;};
struct _USER_INFO_21 {BYTE usri21_password[16];};
typedef VARIANT_BOOL _VARIANT_BOOL;
struct joyinfoex_tag {DWORD dwSize;DWORD dwFlags;DWORD dwXpos;DWORD dwYpos;DWORD dwZpos;DWORD dwRpos;DWORD dwUpos;DWORD dwVpos;DWORD dwButtons;DWORD dwButtonNumber;DWORD dwPOV;DWORD dwReserved1;DWORD dwReserved2;};
struct midievent_tag {DWORD dwDeltaTime;DWORD dwStreamID;DWORD dwEvent;DWORD dwParms[1];};
struct tagHEAPLIST32 {DWORD dwSize;DWORD th32ProcessID;DWORD th32HeapID;DWORD dwFlags;};
struct tagMINMAXINFO {POINT ptReserved;POINT ptMaxSize;POINT ptMaxPosition;POINT ptMinTrackSize;POINT ptMaxTrackSize;};
struct tagSCROLLINFO {UINT cbSize;UINT fMask;int nMin;int nMax;UINT nPage;int nPos;int nTrackPos;};
struct tagSTICKYKEYS {DWORD cbSize;DWORD dwFlags;};
struct tagTOGGLEKEYS {DWORD cbSize;DWORD dwFlags;};
typedef enum _8C57D1DDA788D6050A7C554DBD1EB1AC ADDRESS_MODE;
typedef RECT BORDERWIDTHS;
typedef WORD FILEOP_FLAGS;
typedef HANDLE GLOBALHANDLE;
typedef HIGHCONTRASTA HIGHCONTRAST;
typedef CHOOSEFONTA *LPCHOOSEFONT;
typedef WORD *LPCLIPFORMAT;
typedef DOC_INFO_1A *LPDOC_INFO_1;
typedef DOC_INFO_2A *LPDOC_INFO_2;
typedef EXTLOGFONTA *LPEXTLOGFONT;
typedef JOB_INFO_1A *LPJOB_INFO_1;
typedef JOB_INFO_2A *LPJOB_INFO_2;
typedef MIDIINCAPSA *LPMIDIINCAPS;
typedef NEWCPLINFOA *LPNEWCPLINFO;
typedef WORD *LPPATCHARRAY;
typedef SERIALKEYSA *LPSERIALKEYS;
typedef TEXTMETRICA *LPTEXTMETRIC;
typedef VARIANT *LPVARIANTARG;
typedef WAVEINCAPSA *LPWAVEINCAPS;
typedef WNDCLASSEXA *LPWNDCLASSEX;
typedef MENUITEMINFOA MENUITEMINFO;
typedef MIXERCONTROLA MIXERCONTROL;
typedef MSGBOXPARAMSA MSGBOXPARAMS;
typedef MULTIKEYHELPA MULTIKEYHELP;
typedef enum _DD0F6943692FAA00BE15EC6A36A016BC OLE_TRISTATE;
typedef OPENFILENAMEA OPENFILENAME;
typedef PAGESETUPDLGA PAGESETUPDLG;
typedef FORM_INFO_1A *PFORM_INFO_1;
typedef MIDIOUTCAPSA *PMIDIOUTCAPS;
typedef PORT_INFO_1A *PPORT_INFO_1;
typedef PORT_INFO_2A *PPORT_INFO_2;
typedef PORT_INFO_3A *PPORT_INFO_3;
typedef WAVEOUTCAPSA *PWAVEOUTCAPS;
typedef PWSAQUERYSETA PWSAQUERYSET;
typedef REGISTERWORDA REGISTERWORD;
typedef enum _SID_NAME_USE SID_NAME_USE;
typedef enum _25D95637D5496764A31AF6B682C31248 SVUIA_STATUS;
struct _AE_CONNSTOP {DWORD ae_cp_compname;DWORD ae_cp_username;DWORD ae_cp_netname;DWORD ae_cp_connid;DWORD ae_cp_reason;};
struct _AE_NETLOGON {DWORD ae_no_compname;DWORD ae_no_username;DWORD ae_no_privilege;DWORD ae_no_authflags;};
struct _AFPROTOCOLS {INT iAddressFamily;INT iProtocol;};
struct _AUDIT_ENTRY {DWORD ae_len;DWORD ae_reserved;DWORD ae_time;DWORD ae_type;DWORD ae_data_offset;DWORD ae_data_size;};
struct _FILE_INFO_2 {DWORD fi2_id;};
struct _NAME_BUFFER {UCHAR name[16];UCHAR name_num;UCHAR name_flags;};
typedef __quad_t __blkcnt64_t;
struct tagABORTPATH {EMR emr;};
struct tagBIND_OPTS {DWORD cbStruct;DWORD grfFlags;DWORD grfMode;DWORD dwTickCountDeadline;};
struct tagEMRFORMAT {DWORD dSignature;DWORD nVersion;DWORD cbData;DWORD offData;};
struct tagRGBTRIPLE {BYTE rgbtBlue;BYTE rgbtGreen;BYTE rgbtRed;};
struct timecaps_tag {UINT wPeriodMin;UINT wPeriodMax;};
typedef DWORD ACCESS_MASK;
struct API_VERSION {USHORT MajorVersion;USHORT MinorVersion;USHORT Revision;USHORT Reserved;};
typedef CCSTYLEFLAGA CCSTYLEFLAG;
typedef CHARFORMAT2A CHARFORMAT2;
typedef CHOOSECOLORA CHOOSECOLOR;
typedef CURRENCYFMTA CURRENCYFMT;
typedef ENUMLOGFONTA ENUMLOGFONT;
typedef FINDREPLACEA FINDREPLACE;
typedef enum _A236D2AFA7C04579BAEAA81A8822D685 FOLDERFLAGS;
typedef FORM_INFO_1A FORM_INFO_1;
typedef GCP_RESULTSA GCP_RESULTS;
typedef ICONMETRICSA ICONMETRICS;
typedef HANDLE LOCALHANDLE;
typedef  MMCKINFO *LPCMMCKINFO;
typedef  MMIOINFO *LPCMMIOINFO;
typedef  SHITEMID *LPCSHITEMID;
typedef  TBBUTTON *LPCTBBUTTON;
typedef HMIDISTRM *LPHMIDISTRM;
typedef HMIXEROBJ *LPHMIXEROBJ;
typedef MIXERCAPSA *LPMIXERCAPS;
typedef MIXERLINEA *LPMIXERLINE;
typedef SC_HANDLE *LPSC_HANDLE;
typedef UINT MCIDEVICEID;
typedef MIDIOUTCAPSA MIDIOUTCAPS;
typedef NETRESOURCEA NETRESOURCE;
typedef NM_TREEVIEWA NM_TREEVIEW;
typedef DOC_INFO_1A *PDOC_INFO_1;
typedef DOC_INFO_2A *PDOC_INFO_2;
typedef enum tagPENDINGTYPE PENDINGTYPE;
typedef EXTLOGFONTA *PEXTLOGFONT;
typedef JOB_INFO_1A *PJOB_INFO_1;
typedef JOB_INFO_2A *PJOB_INFO_2;
typedef MIDIINCAPSA *PMIDIINCAPS;
typedef PORT_INFO_1A PORT_INFO_1;
typedef PORT_INFO_2A PORT_INFO_2;
typedef PORT_INFO_3A PORT_INFO_3;
typedef enum _0AEECC1A63E1B2F73D11FBA74082B60B PROXY_PHASE;
typedef TEXTMETRICA *PTEXTMETRIC;
typedef WAVEINCAPSA *PWAVEINCAPS;
typedef WNDCLASSEXA *PWNDCLASSEX;
typedef GUID SHELLVIEWID;
typedef SOUNDSENTRYA SOUNDSENTRY;
typedef STARTUPINFOA STARTUPINFO;
typedef enum tagSTREAM_SEEK STREAM_SEEK;
typedef TOOLTIPTEXTA TOOLTIPTEXT;
typedef WAVEOUTCAPSA WAVEOUTCAPS;
typedef WSAQUERYSETA WSAQUERYSET;
struct _AE_CONNREJ {DWORD ae_cr_compname;DWORD ae_cr_username;DWORD ae_cr_netname;DWORD ae_cr_reason;};
struct _AE_GENERIC {DWORD ae_ge_msgfile;DWORD ae_ge_msgnum;DWORD ae_ge_params;DWORD ae_ge_param1;DWORD ae_ge_param2;DWORD ae_ge_param3;DWORD ae_ge_param4;DWORD ae_ge_param5;DWORD ae_ge_param6;DWORD ae_ge_param7;DWORD ae_ge_param8;DWORD ae_ge_param9;};
struct _AE_LOCKOUT {DWORD ae_lk_compname;DWORD ae_lk_username;DWORD ae_lk_action;DWORD ae_lk_bad_pw_count;};
struct _ITEMIDLIST {SHITEMID mkid;};
struct _POINTFLOAT {FLOAT x;FLOAT y;};
struct _SMALL_RECT {SHORT Left;SHORT Top;SHORT Right;SHORT Bottom;};
struct _SYSTEMTIME {WORD wYear;WORD wMonth;WORD wDayOfWeek;WORD wDay;WORD wHour;WORD wMinute;WORD wSecond;WORD wMilliseconds;};
struct _TOKEN_USER {SID_AND_ATTRIBUTES User;};
struct joyinfo_tag {UINT wXpos;UINT wYpos;UINT wZpos;UINT wButtons;};
struct random_data {int32_t *fptr;int32_t *rptr;int32_t *state;int rand_type;int rand_deg;int rand_sep;int32_t *end_ptr;};
typedef __suseconds_t suseconds_t;
struct tagDEVNAMES {WORD wDriverOffset;WORD wDeviceOffset;WORD wOutputOffset;WORD wDefault;};
typedef enum tagBIND_FLAGS BIND_FLAGS;
typedef CHARFORMATA CHARFORMAT;
typedef CHOOSEFONTA CHOOSEFONT;
typedef WORD CLIPFORMAT;
typedef DOC_INFO_1A DOC_INFO_1;
typedef DOC_INFO_2A DOC_INFO_2;
typedef enum tagDROPEFFECT DROPEFFECT;
typedef EXTLOGFONTA EXTLOGFONT;
typedef FINDTEXTEXA FINDTEXTEX;
typedef ULONG HCRYPTHASH;
typedef ULONG HCRYPTPROV;
typedef enum tagINVOKEKIND INVOKEKIND;
typedef JOB_INFO_1A JOB_INFO_1;
typedef JOB_INFO_2A JOB_INFO_2;
typedef HMIDIOUT *LPHMIDIOUT;
typedef HWAVEOUT *LPHWAVEOUT;
typedef WORD *LPKEYARRAY;
typedef OFNOTIFYA *LPOFNOTIFY;
typedef PRINTDLGA *LPPRINTDLG;
typedef STYLEBUFA *LPSTYLEBUF;
typedef TOOLINFOA *LPTOOLINFO;
typedef WNDCLASSA *LPWNDCLASS;
typedef enum _MEDIA_TYPE MEDIA_TYPE;
typedef MIDIINCAPSA MIDIINCAPS;
typedef NEWCPLINFOA NEWCPLINFO;
typedef enum tagOLEWHICHMK OLEWHICHMK;
typedef UINT OLE_HANDLE;
typedef WORD PATCHARRAY[128];
typedef DWORDLONG *PDWORDLONG;
typedef enum tagPENDINGMSG PENDINGMSG;
typedef MIXERCAPSA *PMIXERCAPS;
typedef MIXERLINEA *PMIXERLINE;
typedef DWORDLONG *PULONGLONG;
typedef SERIALKEYSA SERIALKEYS;
typedef enum tagSERVERCALL SERVERCALL;
typedef SHFILEINFOA SHFILEINFO;
typedef enum _1C680F58C637127EDD3418D9E8DB9708 SLGP_FLAGS;
typedef enum _B2CD58BB5E151C37D855099D3E2FDD5A STUB_PHASE;
typedef void (*STUB_THUNK)(PMIDL_STUB_MESSAGE);
typedef TEXTMETRICA TEXTMETRIC;
typedef enum tagTOKEN_TYPE TOKEN_TYPE;
typedef VARIANT VARIANTARG;
typedef WAVEINCAPSA WAVEINCAPS;
typedef WNDCLASSEXA WNDCLASSEX;
struct _AE_ACCLIM {DWORD ae_al_compname;DWORD ae_al_username;DWORD ae_al_resname;DWORD ae_al_limit;};
struct _AE_ACLMOD {DWORD ae_am_compname;DWORD ae_am_username;DWORD ae_am_resname;DWORD ae_am_action;DWORD ae_am_datalen;};
struct _AE_UASMOD {DWORD ae_um_compname;DWORD ae_um_username;DWORD ae_um_resname;DWORD ae_um_rectype;DWORD ae_um_action;DWORD ae_um_datalen;};
struct _BIN_RANGE {LARGE_INTEGER StartValue;LARGE_INTEGER Length;};
struct _LANA_ENUM {UCHAR length;UCHAR lana[255];};
struct _NM_UPDOWN {NMHDR hdr;int iPos;int iDelta;};
struct _OLESTREAM {LPOLESTREAMVTBL lpstbl;};
struct _RSAPUBKEY {DWORD magic;DWORD bitlen;DWORD pubexp;};
typedef __u_quad_t __rlim64_t;
struct _charrange {LONG cpMin;LONG cpMax;};
typedef __fsblkcnt_t fsblkcnt_t;
typedef __fsfilcnt_t fsfilcnt_t;
struct tagCPLINFO {int idIcon;int idName;int idInfo;LONG lData;};
struct tagHSZPAIR {HSZ hszSvc;HSZ hszTopic;};
struct tagPOINTFX {FIXED x;FIXED y;};
struct tagRGBQUAD {BYTE rgbBlue;BYTE rgbGreen;BYTE rgbRed;BYTE rgbReserved;};
typedef enum _BIN_TYPES BIN_TYPES;
typedef CHAR DESC_CHAR;
typedef enum tagDVASPECT2 DVASPECT2;
typedef enum tagFUNCFLAGS FUNCFLAGS;
typedef enum _2C151496C3DA8CBF879EB97ABE7952AE GUARANTEE;
typedef ULONG HCRYPTKEY;
typedef PVOID HINTERNET;
typedef LONG LCSCSTYPE;
typedef AUXCAPSA *LPAUXCAPS;
typedef CCSTYLEA *LPCCSTYLE;
typedef CONTEXT *LPCONTEXT;
typedef DEVMODEA *LPDEVMODE;
typedef HMIDIIN *LPHMIDIIN;
typedef HWAVEIN *LPHWAVEIN;
typedef JOYCAPSA *LPJOYCAPS;
typedef LOGFONTA *LPLOGFONT;
typedef LOGBRUSH *LPPATTERN;
typedef TV_ITEMA *LPTV_ITEM;
typedef WSADATA *LPWSADATA;
typedef MIXERCAPSA MIXERCAPS;
typedef MIXERLINEA MIXERLINE;
typedef enum tagMKREDUCE MKRREDUCE;
typedef UINT MMVERSION;
typedef enum tagMSHLFLAGS MSHLFLAGS;
typedef NUMBERFMTA NUMBERFMT;
typedef DWORD OLE_COLOR;
typedef LONGLONG *PLONGLONG;
typedef STYLEBUFA *PSTYLEBUF;
typedef TOOLINFOA *PTOOLINFO;
typedef WNDCLASSA *PWNDCLASS;
typedef enum _76850748ECCAC6C51C363E520FD73CC6 SLR_FLAGS;
typedef TEXTRANGEA TEXTRANGE;
typedef enum tagTYPEFLAGS TYPEFLAGS;
typedef DWORDLONG ULONGLONG;
typedef enum _2A6324B8E10DEE2666A6A5498DFC667B XLAT_SIDE;
struct _ABCFLOAT {FLOAT abcfA;FLOAT abcfB;FLOAT abcfC;};
struct _FILETIME {DWORD dwLowDateTime;DWORD dwHighDateTime;};
struct _RIP_INFO {DWORD dwError;DWORD dwType;};
typedef __u_quad_t __ino64_t;
typedef __quad_t __off64_t;
typedef __quad_t *__qaddr_t;
typedef __clockid_t clockid_t;
typedef __mbstate_t mbstate_t;
struct sockproto {u_short sp_family;u_short sp_protocol;};
struct tagCIEXYZ {FXPT2DOT30 ciexyzX;FXPT2DOT30 ciexyzY;FXPT2DOT30 ciexyzZ;};
struct tagPANOSE {BYTE bFamilyType;BYTE bSerifStyle;BYTE bWeight;BYTE bProportion;BYTE bContrast;BYTE bStrokeVariation;BYTE bArmStyle;BYTE bLetterform;BYTE bMidline;BYTE bXHeight;};
struct tagPOINTS {SHORT x;SHORT y;};
typedef enum tagCALLCONV CALLCONV;
typedef enum tagCALLTYPE CALLTYPE;
typedef DWORD COLORREF;
typedef CY CURRENCY;
typedef enum tagDESCKIND DESCKIND;
typedef enum tagDVASPECT DVASPECT;
typedef enum _A53018422640A123E20F3CC4D8AD31A0 FD_FLAGS;
typedef FINDTEXTA FINDTEXT;
typedef enum tagFUNCKIND FUNCKIND;
typedef DWORD HELPPOLY;
typedef DWORD HREFTYPE;
typedef WORD KEYARRAY[128];
typedef enum tagLIBFLAGS LIBFLAGS;
typedef enum tagLOCKTYPE LOCKTYPE;
typedef CCINFOA *LPCCINFO;
typedef  RECTL *LPCRECTL;
typedef HANDLE *LPHANDLE;
typedef HMIXER *LPHMIXER;
typedef DWORD MCIERROR;
typedef UINT MMRESULT;
typedef OFNOTIFYA OFNOTIFY;
typedef enum tagOLECLOSE OLECLOSE;
typedef void (*PAPCFUNC)(DWORD);
typedef AUXCAPSA *PAUXCAPS;
typedef BYTE *PBOOLEAN;
typedef CONTEXT *PCONTEXT;
typedef DEVMODEA *PDEVMODE;
typedef JOYCAPSA *PJOYCAPS;
typedef LOGFONTA *PLOGFONT;
typedef POLYTEXTA POLYTEXT;
typedef LOGBRUSH *PPATTERN;
typedef PRINTDLGA PRINTDLG;
typedef enum tagSTATFLAG STATFLAG;
typedef STYLEBUFA STYLEBUF;
typedef enum _B7D1CDF80B7CC72DADF079F75B7264FC SYM_TYPE;
typedef TOOLINFOA TOOLINFO;
typedef enum tagTYPEKIND TYPEKIND;
typedef enum tagVARFLAGS VARFLAGS;
typedef WNDCLASSA WNDCLASS;
struct _COMSTAT {unsigned int fCtsHold : 1;unsigned int fDsrHold : 1;unsigned int fRlsdHold : 1;unsigned int fXoffHold : 1;unsigned int fXoffSent : 1;unsigned int fEof : 1;unsigned int fTxim : 1;unsigned int fReserved : 25;DWORD cbInQue;DWORD cbOutQue;};
struct _RGNDATA {RGNDATAHEADER rdh;char Buffer[1];};
struct _UDACCEL {UINT nSec;UINT nInc;};
typedef __off64_t __loff_t;
typedef __blkcnt_t blkcnt_t;
typedef RPC_BINDING_HANDLE handle_t;
typedef __sigset_t sigset_t;
struct sockaddr {u_short sa_family;char sa_data[14];};
struct tagCADBL {ULONG cElems;double *pElems;};
struct tagCAFLT {ULONG cElems;float *pElems;};
struct tagPOINT {LONG x;LONG y;};
struct tagRECTL {LONG left;LONG top;LONG right;LONG bottom;};
struct timespec {__time_t tv_sec;int tv_nsec;};
typedef __u_quad_t u_quad_t;
typedef FLAGGED_WORD_BLOB *wireBSTR;
typedef AUXCAPSA AUXCAPS;
typedef BYTE BOOLEAN;
typedef ULONG CALTYPE;
typedef CCSTYLEA CCSTYLE;
typedef enum tagDATADIR DATADIR;
typedef DEVMODEA DEVMODE;
typedef enum tagEXTCONN EXTCONN;
typedef HICON HCURSOR;
typedef HD_ITEMA HD_ITEM;
typedef HANDLE HGLOBAL;
typedef HINSTANCE HMODULE;
typedef LONG HRESULT;
typedef JOYCAPSA JOYCAPS;
typedef LONG LCSTYPE;
typedef LOGFONTA LOGFONT;
typedef  RECT *LPCRECT;
typedef DWORD *LPDWORD;
typedef HMIDI *LPHMIDI;
typedef LONG LRESULT;
typedef LOGBRUSH PATTERN;
typedef HANDLE *PHANDLE;
typedef VALENTA *PVALENT;
typedef enum tagREGKIND REGKIND;
typedef PVOID SC_LOCK;
typedef enum tagSF_TYPE SF_TYPE;
typedef enum tagSHCONTF SHCONTF;
typedef enum tagSTGMOVE STGMOVE;
typedef enum tagSYSKIND SYSKIND;
typedef TV_ITEMA TV_ITEM;
typedef enum tagVARKIND VARKIND;
struct WSAData {WORD wVersion;WORD wHighVersion;char szDescription[257];char szSystemStatus[129];unsigned short iMaxSockets;unsigned short iMaxUdpDg;char *lpVendorInfo;};
struct _KDHELP {DWORD Thread;DWORD ThCallbackStack;DWORD NextCallback;DWORD FramePointer;DWORD KiCallUserMode;DWORD KeUserCallbackDispatcher;DWORD SystemRangeStart;};
typedef __u_quad_t __dev_t;
typedef __caddr_t caddr_t;
typedef __daddr_t daddr_t;
typedef __fd_mask fd_mask;
typedef __nlink_t nlink_t;
typedef __ssize_t ssize_t;
struct tagCAUB {ULONG cElems;unsigned char *pElems;};
struct tagCAUL {ULONG cElems;ULONG *pElems;};
struct tagCRGB {BYTE bRed;BYTE bGreen;BYTE bBlue;BYTE bExtra;};
struct tagRECT {LONG left;LONG top;LONG right;LONG bottom;};
struct tagSIZE {LONG cx;LONG cy;};
typedef __timer_t timer_t;
typedef UINT ALG_ID;
typedef CCINFOA CCINFO;
typedef enum tagCLSCTX CLSCTX;
typedef enum tagCOINIT COINIT;
typedef LONG DISPID;
typedef DWORD FOURCC;
typedef HANDLE HLOCAL;
typedef WORD LANGID;
typedef DWORD LCTYPE;
typedef LONG LPARAM;
typedef BYTE *LPBYTE;
typedef  CHAR *LPCSTR;
typedef DESC_CHAR *LPDESC;
typedef WORD *LPWORD;
typedef enum tagMEMCTX MEMCTX;
typedef enum tagMSHCTX MSHCTX;
typedef DWORD *PDWORD;
typedef FLOAT *PFLOAT;
typedef SHORT *PSHORT;
typedef enum tagREGCLS REGCLS;
typedef ACCESS_MASK REGSAM;
typedef u_int SOCKET;
typedef VALENTA VALENT;
typedef UINT WPARAM;
struct _COORD {SHORT X;SHORT Y;};
struct _FIXED {WORD fract;short value;};
struct _XFORM {FLOAT eM11;FLOAT eM12;FLOAT eM21;FLOAT eM22;FLOAT eDx;FLOAT eDy;};
typedef __fsid_t fsid_t;
struct linger {u_short l_onoff;u_short l_linger;};
typedef __loff_t loff_t;
typedef __mode_t mode_t;
struct netent {char *n_name;char **n_aliases;short n_addrtype;u_long n_net;};
typedef __quad_t quad_t;
typedef __rlim_t rlim_t;
struct rlimit {rlim_t rlim_cur;rlim_t rlim_max;};
struct tagCAI {ULONG cElems;short *pElems;};
struct tagCAL {ULONG cElems;int *pElems;};
struct tagEMR {DWORD iType;DWORD nSize;};
typedef __time_t time_t;
typedef BYTE BCHAR;
typedef ULONG CALID;
typedef CHAR CCHAR;
typedef GUID CLSID;
typedef GUID FMTID;
typedef LPVOID HCONN;
typedef DWORD HIMCC;
typedef  CHAR *LPCCH;
typedef HKL *LPHKL;
typedef CHAR *LPSTR;
typedef enum tagMKSYS MKSYS;
typedef CHAR *NPSTR;
typedef BYTE *PBYTE;
typedef CHAR *PCHAR;
typedef  CHAR *PCSTR;
typedef HKEY *PHKEY;
typedef PDWORD PLCID;
typedef LONG *PLONG;
typedef LARGE_INTEGER *PLUID;
typedef WORD *PWORD;
typedef LONG SCODE;
typedef enum tagSHGDN SHGNO;
typedef enum tagSTGTY STGTY;
typedef CHAR TCHAR;
typedef enum tagTYMED TYMED;
typedef unsigned short WCHAR;
struct _HLOG {DWORD time;DWORD last_flags;DWORD offset;DWORD rec_offset;};
struct _MAT2 {FIXED eM11;FIXED eM12;FIXED eM21;FIXED eM22;};
typedef __dev_t dev_t;
typedef __gid_t gid_t;
typedef __ino_t ino_t;
typedef __key_t key_t;
typedef __off_t off_t;
typedef __pid_t pid_t;
typedef __uid_t uid_t;
typedef enum tagADVF ADVF;
typedef WORD ATOM;
typedef WINBOOL BOOL;
typedef DWORD HIMC;
typedef DWORD LCID;
typedef CHAR *LPCH;
typedef LARGE_INTEGER LUID;
typedef PVOID PSID;
typedef CHAR *PSTR;
typedef TCHAR *PTCH;
typedef WCHAR *PWCH;
typedef enum tagSTGC STGC;
typedef GUID UUID;
struct _ABC {int abcA;UINT abcB;int abcC;};
struct _IDA {UINT cidl;UINT aoffset[1];};
typedef __id_t id_t;
typedef GUID IID;
typedef CHAR *PCH;
typedef LONGLONG USN;
typedef TCHAR *LP;
struct _PRINTER_NOTIFY_INFO_DATA___A5F36D98BBED04EAE24984DD3A8F63FF___C71B2353A63E8F14652F0A887FC4AC21 {DWORD cbBuf;PVOID pBuf;};
struct _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07___6F5D3132B0673F7F54FA2B910BE5C5E0 {HANDLE hMem;DWORD dwReserved[3];};
struct _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07___E5DDA9A585AE137D0E5F8881F3AC492F {DWORD dwCommittedSize;DWORD dwUnCommittedSize;LPVOID lpFirstBlock;LPVOID lpLastBlock;};
union _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C___16A1A8FB0340C07B06C110366CF85D46 {struct _IMAGE_AUX_SYMBOL______16A1A8FB0340C07B06C110366CF85D46___D7CED02C5EE110FFB81CA02005CB2264 Function;struct _IMAGE_AUX_SYMBOL______16A1A8FB0340C07B06C110366CF85D46___A6589E1685AD051AED20409BF2544643 Array;};
union _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C___7BA673E1ED5771089D188D89EB9BDF46 {struct _IMAGE_AUX_SYMBOL______7BA673E1ED5771089D188D89EB9BDF46___3C0209E125597A11F89742EEA0270158 LnSz;DWORD TotalSize;};
struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___309D668730615BAF74518D141CF67858 {HBITMAP hbitmap;HPALETTE hpal;};
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___2D36EF4657A2B130C0422CAF150A0160 {DWORD OffsetToData;struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___2D36EF4657A2B130C0422CAF150A0160___B2E03ED94C06E2E681F8D03FF7FF5CB3 s2;};
union _PRINTER_NOTIFY_INFO_DATA___A5F36D98BBED04EAE24984DD3A8F63FF {DWORD adwData[2];struct _PRINTER_NOTIFY_INFO_DATA___A5F36D98BBED04EAE24984DD3A8F63FF___C71B2353A63E8F14652F0A887FC4AC21 Data;};
union _IMAGE_IMPORT_DESCRIPTOR___CCDB7E5AE55A3EBF5ADB4AABA889E6CB {DWORD Characteristics;PIMAGE_THUNK_DATA OriginalFirstThunk;};
union tMIXERCONTROLDETAILS___6A354DB64043DD4C59D209C2C03EE69F {HWND hwndOwner;DWORD cMultipleItems;};
union _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07 {struct _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07___6F5D3132B0673F7F54FA2B910BE5C5E0 Block;struct _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07___E5DDA9A585AE137D0E5F8881F3AC492F Region;};
union _KEY_EVENT_RECORD___0E79EC4DAC98A4AB202537FA8C3F69FC {WCHAR UnicodeChar;CHAR AsciiChar;};
union _PROPSHEETHEADERA___B2BC7FD01B1A93973E79FDE746C43987 {UINT nStartPage;LPCSTR pStartPage;};
union _PROPSHEETHEADERA___E1AF9326B92748E8DAFEF2F13D81386D {HICON hIcon;LPCSTR pszIcon;};
union _PROPSHEETHEADERA___FF46AEFBA3346A074103206F902E6DF5 {LPCPROPSHEETPAGEA ppsp;HPROPSHEETPAGE *phpage;};
union _PROPSHEETHEADERW___C62D413765EFFC4667F5A15937CA2710 {LPCPROPSHEETPAGEW ppsp;HPROPSHEETPAGE *phpage;};
union _MIDL_STUB_DESC___5BCB627D3738D8B5DEACC268C24AE672 {handle_t *pAutoHandle;handle_t *pPrimitiveHandle;PGENERIC_BINDING_INFO pGenericBindingInfo;};
union _PROPSHEETPAGEA___55841DA2EA6EA673F6C61AA531495E56 {LPCSTR pszTemplate;LPCDLGTEMPLATE pResource;};
union _PROPSHEETPAGEA___E1AF9326B92748E8DAFEF2F13D81386D {HICON hIcon;LPCSTR pszIcon;};
struct _LARGE_INTEGER___837407842DC9087486FDFA5FEB63B74E {DWORD LowPart;LONG HighPart;};
union _SYSTEM_INFO___058745E319A46827965CDE7F37238831 {DWORD dwOemId;struct _SYSTEM_INFO___058745E319A46827965CDE7F37238831___AA04DEB0C6383F89F13D312A174572A9 s;};
union tagELEMDESC___7C8F4CED1424251743D09680A1A0B07D {IDLDESC idldesc;PARAMDESC paramdesc;};
union _CHAR_INFO___0E79EC4DAC98A4AB202537FA8C3F69FC {WCHAR UnicodeChar;CHAR AsciiChar;};
union _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097 {struct _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097___81408237330B83BB46845513C42A27AE Bytes;struct _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097___A3BAC9569453E46653D4C53B8339026E Bits;};
union tagVARDESC___E6274BD6A7149C9CC2413444FF769F0B {ULONG oInst;VARIANT *lpvarValue;};
union _NT_TIB___0349ADB4452EC09BEC08E2292695FBBA {PVOID FiberData;DWORD Version;};
union tagDEC___69538C3DD9098B71FCE9E10A032568F6 {struct tagDEC___69538C3DD9098B71FCE9E10A032568F6___674876891A86A76F12C10005982BCA56 s2;ULONGLONG Lo64;};
union tagDEC___88AE3BEC867F36A22A2957540062A42D {struct tagDEC___88AE3BEC867F36A22A2957540062A42D___7F8459940C2B08BD5D82B0F27239141B s;USHORT signscale;};
typedef void (*LPWSAOVERLAPPED_COMPLETION_ROUTINE)(DWORD, DWORD, LPWSAOVERLAPPED, DWORD);
struct _1C9ED8E2FE494C714F8336D090291E50 {DWORD style;DWORD dwExtendedStyle;WORD cdit;short x;short y;short cx;short cy;};
struct _4532F7D10C15B8B11D529D53ECAF8C30 {UINT ciCharset;UINT ciACP;FONTSIGNATURE fs;};
struct _46B8CD9DF897759D0306203A2121EA8B {WORD mtOption;WORD mtID;WCHAR mtString[1];};
struct _947C6FA139885FA2B0DE7F2A3FDD942C {DWORD style;DWORD dwExtendedStyle;short x;short y;short cx;short cy;WORD id;};
struct _DD2E0983FBF83F36606C69DABA2BC276 {HINSTANCE hInstOld;UINT nIDOld;HINSTANCE hInstNew;UINT nIDNew;int nButtons;};
struct _IMAGE_RESOURCE_DIRECTORY_STRING {WORD Length;CHAR NameString[1];};
struct tagMIXERCONTROLDETAILS_LISTTEXTA {DWORD dwParam1;DWORD dwParam2;CHAR szName[64];};
struct tagMIXERCONTROLDETAILS_LISTTEXTW {DWORD dwParam1;DWORD dwParam2;WCHAR szName[64];};
typedef void (*LPOVERLAPPED_COMPLETION_ROUTINE)(DWORD, DWORD, LPOVERLAPPED);
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {DWORD TimeDateStamp;WORD OffsetModuleName;WORD NumberOfModuleForwarderRefs;};
struct _GENERIC_BINDING_ROUTINE_PAIR {GENERIC_BINDING_ROUTINE pfnBind;GENERIC_UNBIND_ROUTINE pfnUnbind;};
struct _IMAGE_RUNTIME_FUNCTION_ENTRY {DWORD BeginAddress;DWORD EndAddress;PVOID ExceptionHandler;PVOID HandlerData;DWORD PrologEndAddress;};
struct tagEMRCREATEDIBPATTERNBRUSHPT {EMR emr;DWORD ihBrush;DWORD iUsage;DWORD offBmi;DWORD cbBmi;DWORD offBits;DWORD cbBits;};
typedef INT (*LPFN_WSAINSTALLSERVICECLASSA)(LPWSASERVICECLASSINFOA);
typedef INT (*LPFN_WSAINSTALLSERVICECLASSW)(LPWSASERVICECLASSINFOW);
struct _IMAGE_RESOURCE_DIR_STRING_U {WORD Length;WCHAR NameString[1];};
struct _IMAGE_SEPARATE_DEBUG_HEADER {WORD Signature;WORD Flags;WORD Machine;WORD Characteristics;DWORD TimeDateStamp;DWORD CheckSum;DWORD ImageBase;DWORD SizeOfImage;DWORD NumberOfSections;DWORD ExportedNamesSize;DWORD DebugDirectorySize;DWORD Reserved[3];};
typedef LONG (*PTOP_LEVEL_EXCEPTION_FILTER)(LPEXCEPTION_POINTERS);
struct _BY_HANDLE_FILE_INFORMATION {DWORD dwFileAttributes;FILETIME ftCreationTime;FILETIME ftLastAccessTime;FILETIME ftLastWriteTime;DWORD dwVolumeSerialNumber;DWORD nFileSizeHigh;DWORD nFileSizeLow;DWORD nNumberOfLinks;DWORD nFileIndexHigh;DWORD nFileIndexLow;};
struct _QUERY_SERVICE_LOCK_STATUSA {DWORD fIsLocked;LPSTR lpLockOwner;DWORD dwLockDuration;};
typedef INT (*LPFN_WSAREMOVESERVICECLASS)(LPGUID);
struct _IMAGE_BOUND_FORWARDER_REF {DWORD TimeDateStamp;WORD OffsetModuleName;WORD Reserved;};
struct _TAPE_GET_DRIVE_PARAMETERS {BOOLEAN ECC;BOOLEAN Compression;BOOLEAN DataPadding;BOOLEAN ReportSetmarks;DWORD DefaultBlockSize;DWORD MaximumBlockSize;DWORD MinimumBlockSize;DWORD MaximumPartitionCount;DWORD FeaturesLow;DWORD FeaturesHigh;DWORD EOTWarningZoneSize;};
struct _TAPE_SET_DRIVE_PARAMETERS {BOOLEAN ECC;BOOLEAN Compression;BOOLEAN DataPadding;BOOLEAN ReportSetmarks;ULONG EOTWarningZoneSize;};
struct _WIN32_FILE_ATTRIBUTE_DATA {DWORD dwFileAttributes;FILETIME ftCreationTime;FILETIME ftLastAccessTime;FILETIME ftLastWriteTime;DWORD nFileSizeHigh;DWORD nFileSizeLow;};
typedef int (*RPC_MGMT_AUTHORIZATION_FN)(RPC_BINDING_HANDLE, unsigned int, RPC_STATUS *);
struct _DRIVE_LAYOUT_INFORMATION {DWORD PartitionCount;DWORD Signature;PARTITION_INFORMATION PartitionEntry[1];};
struct _IMAGE_RESOURCE_DIRECTORY {DWORD Characteristics;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;WORD NumberOfNamedEntries;WORD NumberOfIdEntries;};
struct _MEMORY_BASIC_INFORMATION {PVOID BaseAddress;PVOID AllocationBase;DWORD AllocationProtect;DWORD RegionSize;DWORD State;DWORD Protect;DWORD Type;};
struct _MIDL_STUBLESS_PROXY_INFO {PMIDL_STUB_DESC pStubDesc;PFORMAT_STRING ProcFormatString; unsigned short *FormatStringOffset;};
struct _OUTPUT_DEBUG_STRING_INFO {LPSTR lpDebugStringData;WORD fUnicode;WORD nDebugStringLength;};
struct _PERF_INSTANCE_DEFINITION {DWORD ByteLength;DWORD ParentObjectTitleIndex;DWORD ParentObjectInstance;LONG UniqueID;DWORD NameOffset;DWORD NameLength;};
typedef INT (*LPFN_WSALOOKUPSERVICEEND)(HANDLE);
typedef void (*LPSERVICE_MAIN_FUNCTIONA)(DWORD, LPSTR *);
typedef DWORD (*PGET_MODULE_BASE_ROUTINE)(HANDLE, DWORD);
struct _FILE_NOTIFY_INFORMATION {DWORD NextEntryOffset;DWORD Action;DWORD FileNameLength;WCHAR FileName[1];};
struct tagEMRSCALEVIEWPORTEXTEX {EMR emr;LONG xNum;LONG xDenom;LONG yNum;LONG yDenom;};
struct tagEMRSETCOLORADJUSTMENT {EMR emr;COLORADJUSTMENT ColorAdjustment;};
typedef BOOL (*PFN_GETEXTENSIONVERSION)(HSE_VERSION_INFO *);
struct _BROWSER_STATISTICS_100 {LARGE_INTEGER StartTime;LARGE_INTEGER NumberOfServerAnnouncements;LARGE_INTEGER NumberOfDomainAnnouncements;ULONG NumberOfElectionPackets;ULONG NumberOfMailslotWrites;ULONG NumberOfGetBrowserServerListRequests;LARGE_INTEGER NumberOfIllegalDatagrams;};
struct _BROWSER_STATISTICS_101 {LARGE_INTEGER StartTime;LARGE_INTEGER NumberOfServerAnnouncements;LARGE_INTEGER NumberOfDomainAnnouncements;ULONG NumberOfElectionPackets;ULONG NumberOfMailslotWrites;ULONG NumberOfGetBrowserServerListRequests;LARGE_INTEGER NumberOfIllegalDatagrams;ULONG NumberOfMissedServerAnnouncements;ULONG NumberOfMissedMailslotDatagrams;ULONG NumberOfMissedGetBrowserServerListRequests;ULONG NumberOfFailedServerAnnounceAllocations;ULONG NumberOfFailedMailslotAllocations;ULONG NumberOfFailedMailslotReceives;ULONG NumberOfFailedMailslotWrites;ULONG NumberOfFailedMailslotOpens;ULONG NumberOfDuplicateMasterAnnouncements;};
struct _MESSAGE_RESOURCE_ENTRY {WORD Length;WORD Flags;BYTE Text[1];};
struct tagEMRSETWORLDTRANSFORM {EMR emr;XFORM xform;};
struct tagMCI_VD_ESCAPE_PARMSA {DWORD dwCallback;LPCSTR lpstrCommand;};
typedef int (*LPFN_WSARECVDISCONNECT)(SOCKET, LPWSABUF);
typedef int (*LPFN_WSASENDDISCONNECT)(SOCKET, LPWSABUF);
typedef DWORD (*LPTHREAD_START_ROUTINE)(LPVOID);
typedef BOOL (*PFN_TERMINATEEXTENSION)(DWORD);
struct _IMAGE_DEBUG_DIRECTORY {DWORD Characteristics;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;DWORD Type;DWORD SizeOfData;DWORD AddressOfRawData;DWORD PointerToRawData;};
struct _MESSAGE_RESOURCE_DATA {DWORD NumberOfBlocks;MESSAGE_RESOURCE_BLOCK Blocks[1];};
struct _QUERY_SERVICE_CONFIGA {DWORD dwServiceType;DWORD dwStartType;DWORD dwErrorControl;LPSTR lpBinaryPathName;LPSTR lpLoadOrderGroup;DWORD dwTagId;LPSTR lpDependencies;LPSTR lpServiceStartName;LPSTR lpDisplayName;};
struct _RPC_SYNTAX_IDENTIFIER {GUID SyntaxGUID;RPC_VERSION SyntaxVersion;};
struct _TRANSMIT_FILE_BUFFERS {PVOID Head;DWORD HeadLength;PVOID Tail;DWORD TailLength;};
struct __GENERIC_BINDING_INFO {void *pObj;unsigned int Size;GENERIC_BINDING_ROUTINE pfnBind;GENERIC_UNBIND_ROUTINE pfnUnbind;};
struct tagDDEML_MSG_HOOK_DATA {UINT uiLo;UINT uiHi;DWORD cbData;DWORD Data[8];};
struct tagEMRSELECTCOLORSPACE {EMR emr;DWORD ihCS;};
struct tagEMRSETVIEWPORTEXTEX {EMR emr;SIZEL szlExtent;};
struct tagEMRSETVIEWPORTORGEX {EMR emr;POINTL ptlOrigin;};
struct tagMCI_ANIM_RECT_PARMS {DWORD dwCallback;RECT rc;};
struct tagMCI_OVLY_RECT_PARMS {DWORD dwCallback;RECT rc;};
typedef DWORD (*PFN_HTTPEXTENSIONPROC)(EXTENSION_CONTROL_BLOCK *);
struct _DEV_BROADCAST_VOLUME {DWORD dbcv_size;DWORD dbcv_devicetype;DWORD dbcv_reserved;DWORD dbcv_unitmask;WORD dbcv_flags;};
struct _ENUM_SERVICE_STATUSA {LPSTR lpServiceName;LPSTR lpDisplayName;SERVICE_STATUS ServiceStatus;};
struct _EXCEPTION_DEBUG_INFO {EXCEPTION_RECORD ExceptionRecord;DWORD dwFirstChance;};
struct _IMAGE_IMPORT_BY_NAME {WORD Hint;BYTE Name[1];};
struct _SERVICE_TABLE_ENTRYA {LPSTR lpServiceName;LPSERVICE_MAIN_FUNCTIONA lpServiceProc;};
struct _wireSAFEARR_DISPATCH {ULONG Size;LPDISPATCH *apDispatch;};
struct tagCLIENTCREATESTRUCT {HANDLE hWindowMenu;UINT idFirstChild;};
struct tagEMRCREATEMONOBRUSH {EMR emr;DWORD ihBrush;DWORD iUsage;DWORD offBmi;DWORD cbBmi;DWORD offBits;DWORD cbBits;};
struct tagEMREXCLUDECLIPRECT {EMR emr;RECTL rclClip;};
struct tagEMRSETARCDIRECTION {EMR emr;DWORD iArcDirection;};
typedef int RPC_FORWARD_FUNCTION(GUID *, RPC_VERSION *, GUID *, unsigned char *, void **);
struct _CONSOLE_CURSOR_INFO {DWORD dwSize;BOOL bVisible;};
struct _FILEGROUPDESCRIPTOR {UINT cItems;FILEDESCRIPTOR fgd[1];};
struct _LUID_AND_ATTRIBUTES {LUID Luid;DWORD Attributes;};
struct _PRINTER_NOTIFY_INFO {DWORD Version;DWORD Flags;DWORD Count;PRINTER_NOTIFY_INFO_DATA aData[1];};
struct _PROCESS_INFORMATION {HANDLE hProcess;HANDLE hThread;DWORD dwProcessId;DWORD dwThreadId;};
struct _SYSTEM_POWER_STATUS {BYTE ACLineStatus;BYTE BatteryFlag;BYTE BatteryLifePercent;BYTE Reserved1;DWORD BatteryLifeTime;DWORD BatteryFullLifeTime;};
struct tagCBTACTIVATESTRUCT {BOOL fMouse;HWND hWndActive;};
struct tagCLEANLOCALSTORAGE {IUnknown *pInterface;PVOID pStorage;DWORD flags;};
struct tagEMRSELECTCLIPPATH {EMR emr;DWORD iMode;};
struct tagEMRSETMAPPERFLAGS {EMR emr;DWORD dwFlags;};
struct tagMEASUREITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;UINT itemWidth;UINT itemHeight;DWORD itemData;};
struct tagNONCLIENTMETRICSA {UINT cbSize;int iBorderWidth;int iScrollWidth;int iScrollHeight;int iCaptionWidth;int iCaptionHeight;LOGFONTA lfCaptionFont;int iSmCaptionWidth;int iSmCaptionHeight;LOGFONTA lfSmCaptionFont;int iMenuWidth;int iMenuHeight;LOGFONTA lfMenuFont;LOGFONTA lfStatusFont;LOGFONTA lfMessageFont;};
struct tagNONCLIENTMETRICSW {UINT cbSize;int iBorderWidth;int iScrollWidth;int iScrollHeight;int iCaptionWidth;int iCaptionHeight;LOGFONTW lfCaptionFont;int iSmCaptionWidth;int iSmCaptionHeight;LOGFONTW lfSmCaptionFont;int iMenuWidth;int iMenuHeight;LOGFONTW lfMenuFont;LOGFONTW lfStatusFont;LOGFONTW lfMessageFont;};
typedef int (*LPFN_WSAEVENTSELECT)(SOCKET, HANDLE, int);
typedef void (*PIMAGE_TLS_CALLBACK)(PVOID, DWORD, PVOID);
struct _BROWSER_STATISTICS {LARGE_INTEGER StatisticsStartTime;LARGE_INTEGER NumberOfServerAnnouncements;LARGE_INTEGER NumberOfDomainAnnouncements;ULONG NumberOfElectionPackets;ULONG NumberOfMailslotWrites;ULONG NumberOfGetBrowserServerListRequests;ULONG NumberOfServerEnumerations;ULONG NumberOfDomainEnumerations;ULONG NumberOfOtherEnumerations;ULONG NumberOfMissedServerAnnouncements;ULONG NumberOfMissedMailslotDatagrams;ULONG NumberOfMissedGetBrowserServerListRequests;ULONG NumberOfFailedServerAnnounceAllocations;ULONG NumberOfFailedMailslotAllocations;ULONG NumberOfFailedMailslotReceives;ULONG NumberOfFailedMailslotWrites;ULONG NumberOfFailedMailslotOpens;ULONG NumberOfDuplicateMasterAnnouncements;LARGE_INTEGER NumberOfIllegalDatagrams;};
struct _EXCEPTION_POINTERS {PEXCEPTION_RECORD ExceptionRecord;PCONTEXT ContextRecord;};
struct _FLOATING_SAVE_AREA {DWORD ControlWord;DWORD StatusWord;DWORD TagWord;DWORD ErrorOffset;DWORD ErrorSelector;DWORD DataOffset;DWORD DataSelector;BYTE RegisterArea[80];DWORD Cr0NpxState;};
struct _MOUSE_EVENT_RECORD {COORD dwMousePosition;DWORD dwButtonState;DWORD dwControlKeyState;DWORD dwEventFlags;};
struct _SID_AND_ATTRIBUTES {PSID Sid;DWORD Attributes;};
struct _STAT_WORKSTATION_0 {LARGE_INTEGER StatisticsStartTime;LARGE_INTEGER BytesReceived;LARGE_INTEGER SmbsReceived;LARGE_INTEGER PagingReadBytesRequested;LARGE_INTEGER NonPagingReadBytesRequested;LARGE_INTEGER CacheReadBytesRequested;LARGE_INTEGER NetworkReadBytesRequested;LARGE_INTEGER BytesTransmitted;LARGE_INTEGER SmbsTransmitted;LARGE_INTEGER PagingWriteBytesRequested;LARGE_INTEGER NonPagingWriteBytesRequested;LARGE_INTEGER CacheWriteBytesRequested;LARGE_INTEGER NetworkWriteBytesRequested;DWORD InitiallyFailedOperations;DWORD FailedCompletionOperations;DWORD ReadOperations;DWORD RandomReadOperations;DWORD ReadSmbs;DWORD LargeReadSmbs;DWORD SmallReadSmbs;DWORD WriteOperations;DWORD RandomWriteOperations;DWORD WriteSmbs;DWORD LargeWriteSmbs;DWORD SmallWriteSmbs;DWORD RawReadsDenied;DWORD RawWritesDenied;DWORD NetworkErrors;DWORD Sessions;DWORD FailedSessions;DWORD Reconnects;DWORD CoreConnects;DWORD Lanman20Connects;DWORD Lanman21Connects;DWORD LanmanNtConnects;DWORD ServerDisconnects;DWORD HungSessions;DWORD UseCount;DWORD FailedUseCount;DWORD CurrentCommands;};
struct _VERIFY_INFORMATION {LARGE_INTEGER StartingOffset;DWORD Length;};
struct tagBITMAPCOREHEADER {DWORD bcSize;WORD bcWidth;WORD bcHeight;WORD bcPlanes;WORD bcBitCount;};
struct tagBITMAPFILEHEADER {WORD bfType;DWORD bfSize;WORD bfReserved1;WORD bfReserved2;DWORD bfOffBits;};
struct tagDELETEITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;HWND hwndItem;UINT itemData;};
struct tagEMROFFSETCLIPRGN {EMR emr;POINTL ptlOffset;};
struct tagEMRRESIZEPALETTE {EMR emr;DWORD ihPal;DWORD cEntries;};
struct tagEMRSELECTPALETTE {EMR emr;DWORD ihPal;};
struct tagEMRSETMITERLIMIT {EMR emr;FLOAT eMiterLimit;};
struct tagHW_PROFILE_INFOA {DWORD dwDockInfo;CHAR szHwProfileGuid[39];CHAR szHwProfileName[80];};
struct tagHW_PROFILE_INFOW {DWORD dwDockInfo;WCHAR szHwProfileGuid[39];WCHAR szHwProfileName[80];};
struct tagNEWTEXTMETRICEXA {NEWTEXTMETRICA ntmTm;FONTSIGNATURE ntmFontSig;};
struct tagNEWTEXTMETRICEXW {NEWTEXTMETRICW ntmTm;FONTSIGNATURE ntmFontSig;};
typedef BOOL (*CODEPAGE_ENUMPROCA)(LPSTR);
typedef BOOL (*LPFN_WSACLOSEEVENT)(HANDLE);
typedef BOOL (*LPFN_WSARESETEVENT)(HANDLE);
typedef void (*PRPC_STUB_FUNCTION)(IRpcStubBuffer *, IRpcChannelBuffer *, PRPC_MESSAGE, DWORD *);
typedef RPC_STATUS RPC_IF_CALLBACK_FN(RPC_IF_HANDLE, void *);
struct _FORMAT_PARAMETERS {MEDIA_TYPE MediaType;DWORD StartCylinderNumber;DWORD EndCylinderNumber;DWORD StartHeadNumber;DWORD EndHeadNumber;};
struct _GLYPHMETRICSFLOAT {FLOAT gmfBlackBoxX;FLOAT gmfBlackBoxY;POINTFLOAT gmfptGlyphOrigin;FLOAT gmfCellIncX;FLOAT gmfCellIncY;};
struct _IMAGE_FILE_HEADER {WORD Machine;WORD NumberOfSections;DWORD TimeDateStamp;DWORD PointerToSymbolTable;DWORD NumberOfSymbols;WORD SizeOfOptionalHeader;WORD Characteristics;};
struct _IMAGE_ROM_HEADERS {IMAGE_FILE_HEADER FileHeader;IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;};
struct tagCOLORADJUSTMENT {WORD caSize;WORD caFlags;WORD caIlluminantIndex;WORD caRedGamma;WORD caGreenGamma;WORD caBlueGamma;WORD caReferenceBlack;WORD caReferenceWhite;SHORT caContrast;SHORT caBrightness;SHORT caColorfulness;SHORT caRedGreenTint;};
struct tagEMRSELECTOBJECT {EMR emr;DWORD ihObject;};
struct tagEMRSETTEXTCOLOR {EMR emr;COLORREF crColor;};
struct tagMCI_BREAK_PARMS {DWORD dwCallback;int nVirtKey;HWND hwndBreak;};
struct tagMCI_INFO_PARMSA {DWORD dwCallback;LPSTR lpstrReturn;DWORD dwRetSize;};
struct tagMCI_LOAD_PARMSA {DWORD dwCallback;LPCSTR lpfilename;};
struct tagMCI_SAVE_PARMSA {DWORD dwCallback;LPCSTR lpfilename;};
struct tagTRACKMOUSEEVENT {DWORD cbSize;DWORD dwFlags;HWND hwndTrack;DWORD dwHoverTime;};
struct tagTTPOLYGONHEADER {DWORD cb;DWORD dwType;POINTFX pfxStart;};
struct tagUSEROBJECTFLAGS {BOOL fInherit;BOOL fReserved;DWORD dwFlags;};
typedef BOOL (*CALINFO_ENUMPROCA)(LPSTR);
typedef BOOL (*DATEFMT_ENUMPROCA)(LPSTR);
typedef void RPC_OBJECT_INQ_FN(UUID *, UUID *, RPC_STATUS *);
typedef BOOL (*TIMEFMT_ENUMPROCA)(LPSTR);
struct _DISK_PERFORMANCE {LARGE_INTEGER BytesRead;LARGE_INTEGER BytesWritten;LARGE_INTEGER ReadTime;LARGE_INTEGER WriteTime;DWORD ReadCount;DWORD WriteCount;DWORD QueueDepth;};
struct _EXCEPTION_RECORD {DWORD ExceptionCode;DWORD ExceptionFlags;struct _EXCEPTION_RECORD *ExceptionRecord;PVOID ExceptionAddress;DWORD NumberParameters;DWORD ExceptionInformation[15];};
struct _FIND_NAME_HEADER {WORD node_count;UCHAR reserved;UCHAR unique_group;};
struct _HSE_VERSION_INFO {DWORD dwExtensionVersion;CHAR lpszExtensionDesc[256];};
struct _IMAGE_DOS_HEADER {WORD e_magic;WORD e_cblp;WORD e_cp;WORD e_crlc;WORD e_cparhdr;WORD e_minalloc;WORD e_maxalloc;WORD e_ss;WORD e_sp;WORD e_csum;WORD e_ip;WORD e_cs;WORD e_lfarlc;WORD e_ovno;WORD e_res[4];WORD e_oemid;WORD e_oeminfo;WORD e_res2[10];LONG e_lfanew;};
struct _IMAGE_LINENUMBER {union _IMAGE_LINENUMBER___323A99206959B5083BD9C46482D6FCE5 Type;WORD Linenumber;};
struct _QualityOfService {FLOWSPEC SendingFlowspec;FLOWSPEC ReceivingFlowspec;WSABUF ProviderSpecific;};
struct _TAPE_WRITE_MARKS {DWORD Type;DWORD Count;BOOLEAN Immediate;};
struct _TIME_OF_DAY_INFO {DWORD tod_elapsedt;DWORD tod_msecs;DWORD tod_hours;DWORD tod_mins;DWORD tod_secs;DWORD tod_hunds;LONG tod_timezone;DWORD tod_tinterval;DWORD tod_day;DWORD tod_month;DWORD tod_year;DWORD tod_weekday;};
struct _TOKEN_PRIVILEGES {DWORD PrivilegeCount;LUID_AND_ATTRIBUTES Privileges[1];};
struct _TV_INSERTSTRUCTA {HTREEITEM hParent;HTREEITEM hInsertAfter;TV_ITEMA item;};
struct _TV_INSERTSTRUCTW {HTREEITEM hParent;HTREEITEM hInsertAfter;TV_ITEMW item;};
struct _wireSAFEARR_BSTR {ULONG Size;wireBSTR *aBstr;};
typedef int exception_handler(EXCEPTION_RECORD *, void *, CONTEXT *, void *);
struct pcmwaveformat_tag {WAVEFORMAT wf;WORD wBitsPerSample;};
struct tagCOPYDATASTRUCT {DWORD dwData;DWORD cbData;PVOID lpData;};
struct tagENUMLOGFONTEXA {LOGFONTA elfLogFont;BYTE elfFullName[64];BYTE elfStyle[32];BYTE elfScript[32];};
struct tagSAFEARRAYBOUND {ULONG cElements;LONG lLbound;};
typedef BOOL (*LOCALE_ENUMPROCA)(LPSTR);
typedef BOOL (*LPFN_WSASETEVENT)(HANDLE);
typedef BOOL (*PHANDLER_ROUTINE)(DWORD);
typedef void (*PTIMERAPCROUTINE)(PVOID, DWORD, DWORD);
struct _IMAGEHLP_SYMBOL {DWORD SizeOfStruct;DWORD Address;DWORD Size;DWORD Flags;DWORD MaxNameLength;CHAR Name[1];};
struct _PRINTER_INFO_1A {DWORD Flags;LPSTR pDescription;LPSTR pName;LPSTR pComment;};
struct _PRINTER_INFO_4A {LPSTR pPrinterName;LPSTR pServerName;DWORD Attributes;};
struct _PRINTER_INFO_5A {LPSTR pPrinterName;LPSTR pPortName;DWORD Attributes;DWORD DeviceNotSelectedTimeout;DWORD TransmissionRetryTimeout;};
struct _REASSIGN_BLOCKS {WORD Reserved;WORD Count;DWORD BlockNumber[1];};
struct _SERVER_INFO_502 {DWORD sv502_sessopens;DWORD sv502_sessvcs;DWORD sv502_opensearch;DWORD sv502_sizreqbuf;DWORD sv502_initworkitems;DWORD sv502_maxworkitems;DWORD sv502_rawworkitems;DWORD sv502_irpstacksize;DWORD sv502_maxrawbuflen;DWORD sv502_sessusers;DWORD sv502_sessconns;DWORD sv502_maxpagedmemoryusage;DWORD sv502_maxnonpagedmemoryusage;BOOL sv502_enablesoftcompat;BOOL sv502_enableforcedlogoff;BOOL sv502_timesource;BOOL sv502_acceptdownlevelapis;BOOL sv502_lmannounce;};
struct _SERVER_INFO_598 {DWORD sv598_maxrawworkitems;DWORD sv598_maxthreadsperqueue;DWORD sv598_producttype;DWORD sv598_serversize;DWORD sv598_connectionlessautodisc;DWORD sv598_sharingviolationretries;DWORD sv598_sharingviolationdelay;DWORD sv598_maxglobalopensearch;DWORD sv598_removeduplicatesearches;DWORD sv598_lockviolationoffset;DWORD sv598_lockviolationdelay;DWORD sv598_mdlreadswitchover;DWORD sv598_cachedopenlimit;DWORD sv598_otherqueueaffinity;BOOL sv598_restrictnullsessaccess;BOOL sv598_enablewfw311directipx;DWORD sv598_queuesamplesecs;DWORD sv598_balancecount;DWORD sv598_preferredaffinity;DWORD sv598_maxfreerfcbs;DWORD sv598_maxfreemfcbs;DWORD sv598_maxfreelfcbs;DWORD sv598_maxfreepagedpoolchunks;DWORD sv598_minpagedpoolchunksize;DWORD sv598_maxpagedpoolchunksize;BOOL sv598_sendsfrompreferredprocessor;};
struct _SHARE_INFO_1501 {DWORD shi1501_reserved;PSECURITY_DESCRIPTOR shi1501_security_descriptor;};
struct _ensaveclipboard {NMHDR nmhdr;LONG cObjectCount;LONG cch;};
struct tagACCESSTIMEOUT {UINT cbSize;DWORD dwFlags;DWORD iTimeOutMSec;};
struct tagCAPROPVARIANT {ULONG cElems;LPPROPVARIANT pElems;};
struct tagCBT_CREATEWND {LPCREATESTRUCT lpcs;HWND hwndInsertAfter;};
struct tagINTERFACEDATA {METHODDATA *pmethdata;UINT cMembers;};
struct tagMULTIKEYHELPA {DWORD mkSize;CHAR mkKeylist;CHAR szKeyphrase[1];};
struct tagMULTIKEYHELPW {DWORD mkSize;WCHAR mkKeylist;WCHAR szKeyphrase[1];};
struct tagTBSAVEPARAMSA {HKEY hkr;LPCSTR pszSubKey;LPCSTR pszValueName;};
struct tagTHREADENTRY32 {DWORD dwSize;DWORD cntUsage;DWORD th32ThreadID;DWORD th32OwnerProcessID;LONG tpBasePri;LONG tpDeltaPri;DWORD dwFlags;};
struct _ADDJOB_INFO_1A {LPSTR Path;DWORD JobId;};
struct _BITMAPCOREINFO {BITMAPCOREHEADER bmciHeader;RGBTRIPLE bmciColors[1];};
struct _DRIVER_INFO_2A {DWORD cVersion;LPSTR pName;LPSTR pEnvironment;LPSTR pDriverPath;LPSTR pDataFile;LPSTR pConfigFile;};
struct _DRIVER_INFO_3A {DWORD cVersion;LPSTR pName;LPSTR pEnvironment;LPSTR pDriverPath;LPSTR pDataFile;LPSTR pConfigFile;LPSTR pHelpFile;LPSTR pDependentFiles;LPSTR pMonitorName;LPSTR pDefaultDataType;};
struct _EVENTLOGRECORD {DWORD Length;DWORD Reserved;DWORD RecordNumber;DWORD TimeGenerated;DWORD TimeWritten;DWORD EventID;WORD EventType;WORD NumStrings;WORD EventCategory;WORD ReservedFlags;DWORD ClosingRecordNumber;DWORD StringOffset;DWORD UserSidLength;DWORD UserSidOffset;DWORD DataLength;DWORD DataOffset;};
struct _HD_HITTESTINFO {POINT pt;UINT flags;int iItem;};
struct _LV_HITTESTINFO {POINT pt;UINT flags;int iItem;};
struct _OSVERSIONINFOA {DWORD dwOSVersionInfoSize;DWORD dwMajorVersion;DWORD dwMinorVersion;DWORD dwBuildNumber;DWORD dwPlatformId;CHAR szCSDVersion[128];};
struct _OSVERSIONINFOW {DWORD dwOSVersionInfoSize;DWORD dwMajorVersion;DWORD dwMinorVersion;DWORD dwBuildNumber;DWORD dwPlatformId;WCHAR szCSDVersion[128];};
struct _SOCKET_ADDRESS {LPSOCKADDR lpSockaddr;INT iSockaddrLength;};
struct _TC_HITTESTINFO {POINT pt;UINT flags;};
struct _TC_ITEMHEADERA {UINT mask;UINT lpReserved1;UINT lpReserved2;LPSTR pszText;int cchTextMax;int iImage;};
union _ULARGE_INTEGER {struct _ULARGE_INTEGER___0354AA9C204208F00D0965D07BBE7FAC u;DWORDLONG QuadPart;};
struct _USER_INFO_1020 {DWORD usri1020_units_per_week;PBYTE usri1020_logon_hours;};
struct _WKSTA_INFO_502 {DWORD wki502_char_wait;DWORD wki502_collection_time;DWORD wki502_maximum_collection_count;DWORD wki502_keep_conn;DWORD wki502_max_cmds;DWORD wki502_sess_timeout;DWORD wki502_siz_char_buf;DWORD wki502_max_threads;DWORD wki502_lock_quota;DWORD wki502_lock_increment;DWORD wki502_lock_maximum;DWORD wki502_pipe_increment;DWORD wki502_pipe_maximum;DWORD wki502_cache_file_timeout;DWORD wki502_dormant_file_limit;DWORD wki502_read_ahead_throughput;DWORD wki502_num_mailslot_buffers;DWORD wki502_num_srv_announce_buffers;DWORD wki502_max_illegal_datagram_events;DWORD wki502_illegal_datagram_event_reset_frequency;BOOL wki502_log_election_packets;BOOL wki502_use_opportunistic_locking;BOOL wki502_use_unlock_behind;BOOL wki502_use_close_behind;BOOL wki502_buf_named_pipes;BOOL wki502_use_lock_read_unlock;BOOL wki502_utilize_nt_caching;BOOL wki502_use_raw_read;BOOL wki502_use_raw_write;BOOL wki502_use_write_raw_data;BOOL wki502_use_encryption;BOOL wki502_buf_files_deny_write;BOOL wki502_buf_read_only_files;BOOL wki502_force_core_create_mode;BOOL wki502_use_512_byte_max_transfer;};
typedef BOOL (*__IView_pfncont)(DWORD);
struct tagCCSTYLEFLAGA {DWORD flStyle;DWORD flStyleMask;LPSTR pszStyle;};
struct tagCUSTDATAITEM {GUID guid;VARIANTARG varValue;};
struct tagEMRRESTOREDC {EMR emr;LONG iRelative;};
struct tagENUMLOGFONTA {LOGFONTA elfLogFont;BYTE elfFullName[64];BYTE elfStyle[32];};
struct tagENUMLOGFONTW {LOGFONTW elfLogFont;WCHAR elfFullName[64];WCHAR elfStyle[32];};
struct tagICONMETRICSA {UINT cbSize;int iHorzSpacing;int iVertSpacing;int iTitleWrap;LOGFONTA lfFont;};
struct tagICONMETRICSW {UINT cbSize;int iHorzSpacing;int iVertSpacing;int iTitleWrap;LOGFONTW lfFont;};
struct tagMETAFILEPICT {LONG mm;LONG xExt;LONG yExt;HMETAFILE hMF;};
struct _ACTION_HEADER {ULONG transport_id;USHORT action_code;USHORT reserved;};
struct _AUTH_IDENTITY {USHORT *User;ULONG UserLength;USHORT *Domain;ULONG DomainLength;USHORT *Password;ULONG PasswordLength;ULONG Flags;};
struct _IMAGEHLP_LINE {DWORD SizeOfStruct;DWORD Key;DWORD LineNumber;PCHAR FileName;DWORD Address;};
union _LARGE_INTEGER {struct _LARGE_INTEGER___837407842DC9087486FDFA5FEB63B74E u;LONGLONG QuadPart;};
struct _MODEMSETTINGS {DWORD dwActualSize;DWORD dwRequiredSize;DWORD dwDevSpecificOffset;DWORD dwDevSpecificSize;DWORD dwCallSetupFailTimer;DWORD dwInactivityTimeout;DWORD dwSpeakerVolume;DWORD dwSpeakerMode;DWORD dwPreferredModemOptions;DWORD dwNegotiatedModemOptions;DWORD dwNegotiatedDCERate;BYTE abVariablePortion[1];};
struct _NETINFOSTRUCT {DWORD cbStructure;DWORD dwProviderVersion;DWORD dwStatus;DWORD dwCharacteristics;DWORD dwHandle;WORD wNetType;DWORD dwPrinters;DWORD dwDrives;};
struct _OLESTREAMVTBL {DWORD (*Get)(LPOLESTREAM, void *, DWORD);DWORD (*Put)(LPOLESTREAM,  void *, DWORD);};
struct _PRIVILEGE_SET {DWORD PrivilegeCount;DWORD Control;LUID_AND_ATTRIBUTES Privilege[1];};
struct _RGNDATAHEADER {DWORD dwSize;DWORD iType;DWORD nCount;DWORD nRgnSize;RECT rcBound;};
struct _TOKEN_CONTROL {LUID TokenId;LUID AuthenticationId;LUID ModifiedId;TOKEN_SOURCE TokenSource;};
struct tagCOLORSCHEME {DWORD dwSize;COLORREF clrBtnHighlight;COLORREF clrBtnShadow;};
struct tagCONNECTDATA {LPUNKNOWN pUnk;DWORD dwCookie;};
struct tagEMRFILLPATH {EMR emr;RECTL rclBounds;};
struct tagHEAPENTRY32 {DWORD dwSize;HANDLE hHandle;DWORD dwAddress;DWORD dwBlockSize;DWORD dwFlags;DWORD dwLockCount;DWORD dwResvd;DWORD th32ProcessID;DWORD th32HeapID;};
struct tagMDINEXTMENU {HMENU hmenuIn;HMENU hmenuNext;HWND hwndNext;};
struct tagPARAMDESCEX {ULONG cBytes;VARIANTARG varDefaultValue;};
struct tagTBADDBITMAP {HINSTANCE hInst;UINT nID;};
struct tagTEXTMETRICA {LONG tmHeight;LONG tmAscent;LONG tmDescent;LONG tmInternalLeading;LONG tmExternalLeading;LONG tmAveCharWidth;LONG tmMaxCharWidth;LONG tmWeight;LONG tmOverhang;LONG tmDigitizedAspectX;LONG tmDigitizedAspectY;BYTE tmFirstChar;BYTE tmLastChar;BYTE tmDefaultChar;BYTE tmBreakChar;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmPitchAndFamily;BYTE tmCharSet;};
struct tagTTPOLYCURVE {WORD wType;WORD cpfx;POINTFX apfx[1];};
struct waveformat_tag {WORD wFormatTag;WORD nChannels;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;};
struct _GLYPHMETRICS {UINT gmBlackBoxX;UINT gmBlackBoxY;POINT gmptGlyphOrigin;short gmCellIncX;short gmCellIncY;};
struct _LV_DISPINFOA {NMHDR hdr;LV_ITEMA item;};
struct _LV_DISPINFOW {NMHDR hdr;LV_ITEMW item;};
struct _MODEMDEVCAPS {DWORD dwActualSize;DWORD dwRequiredSize;DWORD dwDevSpecificOffset;DWORD dwDevSpecificSize;DWORD dwModemProviderVersion;DWORD dwModemManufacturerOffset;DWORD dwModemManufacturerSize;DWORD dwModemModelOffset;DWORD dwModemModelSize;DWORD dwModemVersionOffset;DWORD dwModemVersionSize;DWORD dwDialOptions;DWORD dwCallSetupFailTimer;DWORD dwInactivityTimeout;DWORD dwSpeakerVolume;DWORD dwSpeakerMode;DWORD dwModemOptions;DWORD dwMaxDTERate;DWORD dwMaxDCERate;BYTE abVariablePortion[1];};
struct _NETRESOURCEA {DWORD dwScope;DWORD dwType;DWORD dwDisplayType;DWORD dwUsage;LPSTR lpLocalName;LPSTR lpRemoteName;LPSTR lpComment;LPSTR lpProvider;};
struct _PORT_INFO_2A {LPSTR pPortName;LPSTR pMonitorName;LPSTR pDescription;DWORD fPortType;DWORD Reserved;};
struct _PORT_INFO_3A {DWORD dwStatus;LPSTR pszStatus;DWORD dwSeverity;};
struct _TAPE_PREPARE {DWORD Operation;BOOLEAN Immediate;};
struct _TOKEN_GROUPS {DWORD GroupCount;SID_AND_ATTRIBUTES Groups[1];};
struct _TOKEN_SOURCE {CHAR SourceName[8];LUID SourceIdentifier;};
struct _TV_DISPINFOA {NMHDR hdr;TV_ITEMA item;};
struct _TV_DISPINFOW {NMHDR hdr;TV_ITEMW item;};
struct _currencyfmtA {UINT NumDigits;UINT LeadingZero;UINT Grouping;LPSTR lpDecimalSep;LPSTR lpThousandSep;UINT NegativeOrder;UINT PositiveOrder;LPSTR lpCurrencySymbol;};
struct tWAVEFORMATEX {WORD wFormatTag;WORD nChannels;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;WORD wBitsPerSample;WORD cbSize;};
struct tagBITMAPINFO {BITMAPINFOHEADER bmiHeader;RGBQUAD bmiColors[1];};
struct tagCABSTRBLOB {ULONG cElems;BSTRBLOB *pElems;};
struct tagCACLIPDATA {ULONG cElems;CLIPDATA *pElems;};
struct tagCAFILETIME {ULONG cElems;FILETIME *pElems;};
struct tagEMRELLIPSE {EMR emr;RECTL rclBox;};
struct tagFILTERKEYS {UINT cbSize;DWORD dwFlags;DWORD iWaitMSec;DWORD iDelayMSec;DWORD iRepeatMSec;DWORD iBounceMSec;};
struct tagLOGPALETTE {WORD palVersion;WORD palNumEntries;PALETTEENTRY palPalEntry[1];};
struct tagMETAHEADER {WORD mtType;WORD mtHeaderSize;WORD mtVersion;DWORD mtSize;WORD mtNoObjects;DWORD mtMaxRecord;WORD mtNoParameters;};
struct tagMETARECORD {DWORD rdSize;WORD rdFunction;WORD rdParm[1];};
typedef void (*GOBJENUMPROC)(LPVOID, LPARAM);
typedef int (*ICMENUMPROCA)(LPSTR, LPARAM);
typedef void TIMECALLBACK(UINT, UINT, DWORD, DWORD, DWORD);
struct _BIN_RESULTS {DWORD NumberOfBins;BIN_COUNT BinCounts[1];};
struct _CSADDR_INFO {SOCKET_ADDRESS LocalAddr;SOCKET_ADDRESS RemoteAddr;INT iSocketType;INT iProtocol;};
struct _DOC_INFO_2A {LPSTR pDocName;LPSTR pOutputFile;LPSTR pDatatype;DWORD dwMode;DWORD JobId;};
struct _RPC_MESSAGE {HANDLE Handle;unsigned int DataRepresentation;void *Buffer;unsigned int BufferLength;unsigned int ProcNum;PRPC_SYNTAX_IDENTIFIER TransferSyntax;void *RpcInterfaceInformation;void *ReservedForRuntime;void *ManagerEpv;void *ImportContext;unsigned int RpcFlags;};
struct _findtextexA {CHARRANGE chrg;LPSTR lpstrText;CHARRANGE chrgText;};
struct _punctuation {UINT iSize;LPSTR szPunctuation;};
struct tagEMRLINETO {EMR emr;POINTL ptl;};
struct tagPARAMDESC {LPPARAMDESCEX pparamdescex;USHORT wParamFlags;};
struct tagREBARINFO {UINT cbSize;UINT fMask;HIMAGELIST himl;};
struct tagSTYLEBUFA {DWORD dwStyle;CHAR szDescription[32];};
struct tagSTYLEBUFW {DWORD dwStyle;WCHAR szDescription[32];};
struct tagTPMPARAMS {UINT cbSize;RECT rcExclude;};
typedef UINT (*LPFNCCINFOA)(LPCCINFOA);
typedef UINT (*LPFNCCINFOW)(LPCCINFOW);
struct _ACE_HEADER {BYTE AceType;BYTE AceFlags;WORD AceSize;};
struct _HD_NOTIFYA {NMHDR hdr;int iItem;int iButton;HD_ITEMA *pitem;};
struct _HD_NOTIFYW {NMHDR hdr;int iItem;int iButton;HD_ITEMW *pitem;};
struct _LV_COLUMNA {UINT mask;int fmt;int cx;LPSTR pszText;int cchTextMax;int iSubItem;};
struct _MODULEINFO {LPVOID lpBaseOfDll;DWORD SizeOfImage;LPVOID EntryPoint;};
struct _OVERLAPPED {DWORD Internal;DWORD InternalHigh;DWORD Offset;DWORD OffsetHigh;HANDLE hEvent;};
struct _TAPE_ERASE {DWORD Type;BOOLEAN Immediate;};
struct _WSAVersion {DWORD dwVersion;WSAECOMPARATOR ecHow;};
struct _numberfmtA {UINT NumDigits;UINT LeadingZero;UINT Grouping;LPSTR lpDecimalSep;LPSTR lpThousandSep;UINT NegativeOrder;};
struct midihdr_tag {LPSTR lpData;DWORD dwBufferLength;DWORD dwBytesRecorded;DWORD dwUser;DWORD dwFlags;struct midihdr_tag *lpNext;DWORD reserved;DWORD dwOffset;DWORD dwReserved[8];};
struct tagBSTRBLOB {ULONG cbSize;PBYTE pData;};
struct tagCLIPDATA {ULONG cbSize;int ulClipFmt;PBYTE pClipData;};
struct tagCUSTDATA {DWORD cCustData;LPCUSTDATAITEM prgCustData;};
struct tagELEMDESC {TYPEDESC tdesc;union tagELEMDESC___7C8F4CED1424251743D09680A1A0B07D u;};
struct tagMULTI_QI { IID *pIID;IUnknown *pItf;HRESULT hr;};
struct tagPELARRAY {LONG paXCount;LONG paYCount;LONG paXExt;LONG paYExt;BYTE paRGBs;};
struct tagSTATDATA {FORMATETC formatetc;DWORD grfAdvf;struct IAdviseSink *pAdvSink;DWORD dwConnection;};
struct wavehdr_tag {LPSTR lpData;DWORD dwBufferLength;DWORD dwBytesRecorded;DWORD dwUser;DWORD dwFlags;DWORD dwLoops;struct wavehdr_tag *lpNext;DWORD reserved;};
struct _BIN_COUNT {BIN_RANGE BinRange;DWORD BinCount;};
struct _CHAR_INFO {union _CHAR_INFO___0E79EC4DAC98A4AB202537FA8C3F69FC Char;WORD Attributes;};
struct _HD_LAYOUT {RECT *prc;WINDOWPOS *pwpos;};
struct _IMAGEINFO {HBITMAP hbmImage;HBITMAP hbmMask;int Unused1;int Unused2;RECT rcImage;};
struct _LDT_ENTRY {WORD LimitLow;WORD BaseLow;union _LDT_ENTRY___95C81B8F3DD6C8D0A2F7AF8EEE24F097 HighWord;};
struct _NMHEADERA {NMHDR hdr;int iItem;int iButton;HD_ITEMA *pitem;};
struct _NMHEADERW {NMHDR hdr;int iItem;int iButton;HD_ITEMW *pitem;};
struct _NRESARRAY {UINT cItems;NETRESOURCE nr[1];};
struct _PSHNOTIFY {NMHDR hdr;LPARAM lParam;};
struct _STD_ALERT {DWORD alrt_timestamp;TCHAR alrt_eventname[17];TCHAR alrt_servicename[81];};
struct _WINDOWPOS {HWND hwnd;HWND hwndInsertAfter;int x;int y;int cx;int cy;UINT flags;};
struct _compcolor {COLORREF crText;COLORREF crBackground;DWORD dwEffects;};
struct _findtextA {CHARRANGE chrg;LPSTR lpstrText;};
struct _reqresize {NMHDR nmhdr;RECT rc;};
struct _textrange {CHARRANGE chrg;LPSTR lpstrText;};
struct tagCACLSID {ULONG cElems;CLSID *pElems;};
struct tagCADWORD {ULONG cElems;DWORD *pElems;};
struct tagCALPSTR {ULONG cElems;LPSTR *pElems;};
struct tagCASCODE {ULONG cElems;SCODE *pElems;};
struct tagIDLDESC {ULONG dwReserved;USHORT wIDLFlags;};
struct value_entA {LPSTR ve_valuename;DWORD ve_valuelen;DWORD ve_valueptr;DWORD ve_type;};
typedef BOOL (*ABORTPROC)(HDC, int);
struct _FPO_DATA {DWORD ulOffStart;DWORD cbProcSize;DWORD cdwLocals;WORD cdwParams;unsigned short cbProlog : 8;unsigned short cbRegs : 3;unsigned short fHasSEH : 1;unsigned short fUseBP : 1;unsigned short reserved : 1;unsigned short cbFrame : 2;};
struct _MMCKINFO {FOURCC ckid;DWORD cksize;FOURCC fccType;DWORD dwDataOffset;DWORD dwFlags;};
struct _PERF_BIN {DWORD NumberOfBins;DWORD TypeOfBin;BIN_RANGE BinsRanges[1];};
struct _SHITEMID {USHORT cb;BYTE abID[1];};
struct _TBBUTTON {int iBitmap;int idCommand;BYTE fsState;BYTE fsStyle;BYTE bReserved[2];DWORD dwData;int iString;};
struct _flowspec {int32 TokenRate;int32 TokenBucketSize;int32 PeakBandwidth;int32 Latency;int32 DelayVariation;GUARANTEE LevelOfGuarantee;int32 CostOfCall;int32 NetworkAvailability;};
struct tagCABOOL {ULONG cElems;VARIANT_BOOL *pElems;};
struct tagCADATE {ULONG cElems;DATE *pElems;};
struct tagCAUUID {ULONG cElems;GUID *pElems;};
struct tagEMREOF {EMR emr;DWORD nPalEntries;DWORD offPalEntries;DWORD nSizeLast;};
struct _CONTEXT {DWORD ContextFlags;DWORD Dr0;DWORD Dr1;DWORD Dr2;DWORD Dr3;DWORD Dr6;DWORD Dr7;FLOATING_SAVE_AREA FloatSave;DWORD SegGs;DWORD SegFs;DWORD SegEs;DWORD SegDs;DWORD Edi;DWORD Esi;DWORD Ebx;DWORD Edx;DWORD Ecx;DWORD Eax;DWORD Ebp;DWORD Eip;DWORD SegCs;DWORD EFlags;DWORD Esp;DWORD SegSs;};
struct tagACCEL {BYTE fVirt;WORD key;WORD cmd;};
struct tagNMHDR {HWND hwndFrom;UINT idFrom;UINT code;};
struct _NT_TIB {struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;PVOID StackBase;PVOID StackLimit;PVOID SubSystemTib;union _NT_TIB___0349ADB4452EC09BEC08E2292695FBBA u;PVOID ArbitraryUserPointer;struct _NT_TIB *Self;};
struct _cpinfo {UINT MaxCharSize;BYTE DefaultChar[2];BYTE LeadByte[12];};
struct tagCACY {ULONG cElems;CY *pElems;};
struct tagCAUH {ULONG cElems;ULARGE_INTEGER *pElems;};
struct tagCAUI {ULONG cElems;USHORT *pElems;};
struct timeval {__time_t tv_sec;__suseconds_t tv_usec;};
struct fd_set {u_int fd_count;SOCKET fd_array[1024];};
struct tagCAH {ULONG cElems;LARGE_INTEGER *pElems;};
struct _BLOB {ULONG cbSize;BYTE *pBlobData;};
union tagCY {struct tagCY___983F061E0B702DD8AE0B4B955735A6A3 s;LONGLONG int64;};
struct _ACL {BYTE AclRevision;BYTE Sbz1;WORD AclSize;WORD AceCount;WORD Sbz2;};
struct acl {int a_type;uid_t a_id;mode_t a_perm;};
union _IMAGE_RESOURCE_DIRECTORY_ENTRY___444826C0724C63C16186AAF04EE0E133 {struct _IMAGE_RESOURCE_DIRECTORY_ENTRY___444826C0724C63C16186AAF04EE0E133___6E35CCFC02D81E31BD4C6BEDD77CB20A s;DWORD Name;WORD Id;};
union tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88 {struct tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88___A9226EEFE738F03A3F7D52221D0941CC s;struct tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88___A8262751543F154F80C41ED2519FD13B s1;DWORD dwReserved[6];};
union tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05 {struct tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05___A9226EEFE738F03A3F7D52221D0941CC s;struct tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05___A8262751543F154F80C41ED2519FD13B s1;DWORD dwReserved[6];};
union _IMAGE_SYMBOL___D31D1BC08928B4879C9F93D88486FFF4 {BYTE ShortName[8];struct _IMAGE_SYMBOL___D31D1BC08928B4879C9F93D88486FFF4___DE8E098676ACAC74F2956A2D7B83DF3B Name;PBYTE LongName[2];};
union mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514 {DWORD ms;DWORD sample;DWORD cb;DWORD ticks;struct mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514___2498AB4F57B5A5935D3AAA9956C218FB smpte;struct mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514___B7A2B1CE967584EBB3840978181CF21D midi;};
union in_addr___C13EC994467D6E67044F092615EC7EA9 {struct in_addr___C13EC994467D6E67044F092615EC7EA9___01C175C1F0716DCA00314EDD79DBC0A0 S_un_b;struct in_addr___C13EC994467D6E67044F092615EC7EA9___4DE764E669F663DACA3CBFDE73714CB5 S_un_w;u_long S_addr;};
struct _17CA7839736B8F73357CD165DBE52F18 {WCHAR DisplayString[129];DWORD GopherType;DWORD SizeLow;DWORD SizeHigh;FILETIME LastModificationTime;WCHAR Locator[654];};
struct _30741344DFEF5D024CAA9E725B3C6F5B {UINT uNotification;HWND hWnd;POINT ptCursor;};
struct _49EEBB44BCC2D3FA72837E5FE8CADC02 {NMHDR nmhdr;LONG iob;LONG lOper;HRESULT hr;};
struct _7644B9603AEA08EBF4DF4A983BB6B237 {CHAR DisplayString[129];DWORD GopherType;DWORD SizeLow;DWORD SizeHigh;FILETIME LastModificationTime;CHAR Locator[654];};
struct _7F42DEB2BB5D0DE64733A8884285C23D {RPC_NS_HANDLE LookupContext;RPC_BINDING_HANDLE ProposedHandle;RPC_BINDING_VECTOR *Bindings;};
typedef INT (*LPFN_WSAENUMNAMESPACEPROVIDERSA)(LPDWORD, LPWSANAMESPACE_INFOA);
typedef INT (*LPFN_WSAENUMNAMESPACEPROVIDERSW)(LPDWORD, LPWSANAMESPACE_INFOW);
typedef LPVOID (*PFUNCTION_TABLE_ACCESS_ROUTINE)(HANDLE, DWORD);
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD {DWORD SizeOfStruct;DWORD BaseOfImage;DWORD CheckSum;DWORD TimeDateStamp;CHAR FileName[260];BOOLEAN Reparse;};
typedef DWORD (*LPFN_WSAWAITFORMULTIPLEEVENTS)(DWORD,  HANDLE *, BOOL, DWORD, BOOL);
struct _IMAGE_LOAD_CONFIG_DIRECTORY {DWORD Characteristics;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;DWORD GlobalFlagsClear;DWORD GlobalFlagsSet;DWORD CriticalSectionDefaultTimeout;DWORD DeCommitFreeBlockThreshold;DWORD DeCommitTotalFreeThreshold;PVOID LockPrefixTable;DWORD MaximumAllocationSize;DWORD VirtualMemoryThreshold;DWORD ProcessHeapFlags;DWORD Reserved[4];};
struct tagEMREXTCREATEFONTINDIRECTW {EMR emr;DWORD ihFont;EXTLOGFONTW elfw;};
typedef BOOL (*GOPHER_ATTRIBUTE_ENUMERATOR)(LPGOPHER_ATTRIBUTE_TYPE, DWORD);
struct _CONSOLE_SCREEN_BUFFER_INFO {COORD dwSize;COORD dwCursorPosition;WORD wAttributes;SMALL_RECT srWindow;COORD dwMaximumWindowSize;};
struct _RTL_CRITICAL_SECTION_DEBUG {WORD Type;WORD CreatorBackTraceIndex;struct _RTL_CRITICAL_SECTION *CriticalSection;LIST_ENTRY ProcessLocksList;DWORD EntryCount;DWORD ContentionCount;DWORD Spare[2];};
typedef DWORD (*PTRANSLATE_ADDRESS_ROUTINE)(HANDLE, HANDLE, LPADDRESS);
struct _IMAGEHLP_DUPLICATE_SYMBOL {DWORD SizeOfStruct;DWORD NumberOfDups;PIMAGEHLP_SYMBOL Symbol;ULONG SelectedSymbol;};
struct _IMAGE_ROM_OPTIONAL_HEADER {WORD Magic;BYTE MajorLinkerVersion;BYTE MinorLinkerVersion;DWORD SizeOfCode;DWORD SizeOfInitializedData;DWORD SizeOfUninitializedData;DWORD AddressOfEntryPoint;DWORD BaseOfCode;DWORD BaseOfData;DWORD BaseOfBss;DWORD GprMask;DWORD CprMask[4];DWORD GpValue;};
struct _TAPE_GET_MEDIA_PARAMETERS {LARGE_INTEGER Capacity;LARGE_INTEGER Remaining;DWORD BlockSize;DWORD PartitionCount;BOOLEAN WriteProtected;};
struct tagEMRMODIFYWORLDTRANSFORM {EMR emr;XFORM xform;DWORD iMode;};
typedef int (*LPFN_WSAENUMNETWORKEVENTS)(SOCKET, HANDLE, LPWSANETWORKEVENTS);
struct _CREATE_THREAD_DEBUG_INFO {HANDLE hThread;LPVOID lpThreadLocalBase;LPTHREAD_START_ROUTINE lpStartAddress;};
struct _PRINTER_NOTIFY_INFO_DATA {WORD Type;WORD Field;DWORD Reserved;DWORD Id;union _PRINTER_NOTIFY_INFO_DATA___A5F36D98BBED04EAE24984DD3A8F63FF NotifyData;};
struct tagEMRCREATEBRUSHINDIRECT {EMR emr;DWORD ihBrush;LOGBRUSH lb;};
typedef void (*INTERNET_STATUS_CALLBACK)(HINTERNET, DWORD, DWORD, PVOID, DWORD);
typedef int (*LPFN_WSADUPLICATESOCKETA)(SOCKET, DWORD, LPWSAPROTOCOL_INFOA);
typedef int (*LPFN_WSADUPLICATESOCKETW)(SOCKET, DWORD, LPWSAPROTOCOL_INFOW);
struct _IMAGE_IMPORT_DESCRIPTOR {union _IMAGE_IMPORT_DESCRIPTOR___CCDB7E5AE55A3EBF5ADB4AABA889E6CB u;DWORD TimeDateStamp;DWORD ForwarderChain;DWORD Name;PIMAGE_THUNK_DATA FirstThunk;};
struct tagMCI_ANIM_UPDATE_PARMS {DWORD dwCallback;RECT rc;HDC hDC;};
struct tagPIXELFORMATDESCRIPTOR {WORD nSize;WORD nVersion;DWORD dwFlags;BYTE iPixelType;BYTE cColorBits;BYTE cRedBits;BYTE cRedShift;BYTE cGreenBits;BYTE cGreenShift;BYTE cBlueBits;BYTE cBlueShift;BYTE cAlphaBits;BYTE cAlphaShift;BYTE cAccumBits;BYTE cAccumRedBits;BYTE cAccumGreenBits;BYTE cAccumBlueBits;BYTE cAccumAlphaBits;BYTE cDepthBits;BYTE cStencilBits;BYTE cAuxBuffers;BYTE iLayerType;BYTE bReserved;DWORD dwLayerMask;DWORD dwVisibleMask;DWORD dwDamageMask;};
struct _CRITICAL_SECTION_DEBUG {WORD Type;WORD CreatorBackTraceIndex;struct _CRITICAL_SECTION *CriticalSection;LIST_ENTRY ProcessLocksList;DWORD EntryCount;DWORD ContentionCount;DWORD Spare[2];};
struct _SE_IMPERSONATION_STATE {PACCESS_TOKEN Token;BOOLEAN CopyOnOpen;BOOLEAN EffectiveOnly;SECURITY_IMPERSONATION_LEVEL Level;};
struct tagCInterfaceStubHeader { IID *piid; MIDL_SERVER_INFO *pServerInfo;unsigned int DispatchTableCount; PRPC_STUB_FUNCTION *pDispatchTable;};
struct tagEMRSETPALETTEENTRIES {EMR emr;DWORD ihPal;DWORD iStart;DWORD cEntries;PALETTEENTRY aPalEntries[1];};
struct tagMCI_OVLY_LOAD_PARMSA {DWORD dwCallback;LPCSTR lpfilename;RECT rc;};
struct tagMCI_OVLY_SAVE_PARMSA {DWORD dwCallback;LPCSTR lpfilename;RECT rc;};
struct tagMCI_WAVE_OPEN_PARMSA {DWORD dwCallback;MCIDEVICEID wDeviceID;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwBufferSeconds;};
typedef int (*LPFN_WSAENUMPROTOCOLSA)(LPINT, LPWSAPROTOCOL_INFOA, LPDWORD);
typedef int (*LPFN_WSAENUMPROTOCOLSW)(LPINT, LPWSAPROTOCOL_INFOW, LPDWORD);
struct _TIME_ZONE_INFORMATION {LONG Bias;WCHAR StandardName[32];SYSTEMTIME StandardDate;LONG StandardBias;WCHAR DaylightName[32];SYSTEMTIME DaylightDate;LONG DaylightBias;};
struct tagEMRCREATECOLORSPACE {EMR emr;DWORD ihCS;LOGCOLORSPACEW lcs;};
struct tagEMREXTSELECTCLIPRGN {EMR emr;DWORD cbRgnData;DWORD iMode;BYTE RgnData[1];};
typedef void (*PFN_HSE_IO_COMPLETION)(EXTENSION_CONTROL_BLOCK *, PVOID, DWORD, DWORD);
typedef int (*REGISTERWORDENUMPROCA)(LPCSTR, DWORD, LPCSTR, LPVOID);
struct _FORMAT_EX_PARAMETERS {MEDIA_TYPE MediaType;DWORD StartCylinderNumber;DWORD EndCylinderNumber;DWORD StartHeadNumber;DWORD EndHeadNumber;WORD FormatGapLength;WORD SectorsPerTrack;WORD SectorNumber[1];};
struct _FULL_PTR_XLAT_TABLES {struct _FULL_PTR_XLAT_TABLES___CFFA09E862963CB530A7E2871127FDA7 RefIdToPointer;struct _FULL_PTR_XLAT_TABLES___5B5EF811252786EBFBAAA3889BB4C68D PointerToRefId;unsigned int NextRefId;XLAT_SIDE XlatSide;};
struct _RPC_CLIENT_INTERFACE {unsigned int Length;RPC_SYNTAX_IDENTIFIER InterfaceId;RPC_SYNTAX_IDENTIFIER TransferSyntax;PRPC_DISPATCH_TABLE DispatchTable;unsigned int RpcProtseqEndpointCount;PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;unsigned int Reserved; void *InterpreterInfo;};
struct _RPC_SERVER_INTERFACE {unsigned int Length;RPC_SYNTAX_IDENTIFIER InterfaceId;RPC_SYNTAX_IDENTIFIER TransferSyntax;PRPC_DISPATCH_TABLE DispatchTable;unsigned int RpcProtseqEndpointCount;PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;void *DefaultManagerEpv; void *InterpreterInfo;};
struct tagMCI_SYSINFO_PARMSA {DWORD dwCallback;LPSTR lpstrReturn;DWORD dwRetSize;DWORD dwNumber;UINT wDeviceType;};
struct tagMCI_WAVE_SET_PARMS {DWORD dwCallback;DWORD dwTimeFormat;DWORD dwAudio;UINT wInput;UINT wOutput;WORD wFormatTag;WORD wReserved2;WORD nChannels;WORD wReserved3;DWORD nSamplesPerSec;DWORD nAvgBytesPerSec;WORD nBlockAlign;WORD wReserved4;WORD wBitsPerSample;WORD wReserved5;};
struct tagMIXERLINECONTROLSA {DWORD cbStruct;DWORD dwLineID;union tagMIXERLINECONTROLSA___DC43C2837E8C20184C3137B308FBE3E1 u;DWORD cControls;DWORD cbmxctrl;LPMIXERCONTROLA pamxctrl;};
struct tagMIXERLINECONTROLSW {DWORD cbStruct;DWORD dwLineID;union tagMIXERLINECONTROLSW___DC43C2837E8C20184C3137B308FBE3E1 u;DWORD cControls;DWORD cbmxctrl;LPMIXERCONTROLW pamxctrl;};
typedef BOOL (*LPFNADDPROPSHEETPAGE)(HPROPSHEETPAGE, LPARAM);
typedef int (*PFNPROPSHEETCALLBACK)(HWND, UINT, LPARAM);
typedef UINT (*PFNRECONCILEPROFILEA)(LPCSTR, LPCSTR, DWORD);
struct _IMAGE_TLS_DIRECTORY {DWORD StartAddressOfRawData;DWORD EndAddressOfRawData;PDWORD AddressOfIndex;PIMAGE_TLS_CALLBACK *AddressOfCallBacks;DWORD SizeOfZeroFill;DWORD Characteristics;};
struct _SECURITY_ATTRIBUTES {DWORD nLength;LPVOID lpSecurityDescriptor;BOOL bInheritHandle;};
struct tMIXERCONTROLDETAILS {DWORD cbStruct;DWORD dwControlID;DWORD cChannels;union tMIXERCONTROLDETAILS___6A354DB64043DD4C59D209C2C03EE69F u;DWORD cbDetails;PVOID paDetails;};
struct tagCOMPAREITEMSTRUCT {UINT CtlType;UINT CtlID;HWND hwndItem;UINT itemID1;DWORD itemData1;UINT itemID2;DWORD itemData2;DWORD dwLocaleId;};
struct urlinvokecommandinfo {DWORD dwcbSize;DWORD dwFlags;HWND hwndParent;PCSTR pcszVerb;};
typedef LONG (*EDITWORDBREAKPROCEX)(char *, LONG, BYTE, INT);
struct _ACCESS_ALLOWED_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct tagBITMAPINFOHEADER {DWORD biSize;LONG biWidth;LONG biHeight;WORD biPlanes;WORD biBitCount;DWORD biCompression;DWORD biSizeImage;LONG biXPelsPerMeter;LONG biYPelsPerMeter;DWORD biClrUsed;DWORD biClrImportant;};
struct tagEMRCREATEPALETTE {EMR emr;DWORD ihPal;LOGPALETTE lgpl;};
struct tagOLEUIPASTEENTRYA {FORMATETC fmtetc;LPCSTR lpstrFormatName;LPCSTR lpstrResultText;DWORD dwFlags;DWORD dwScratchSpace;};
typedef DWORD (*EDITSTREAMCALLBACK)(DWORD, PBYTE, LONG, LONG *);
typedef UINT (*PFNGETPROFILEPATHA)(LPCSTR, LPSTR, UINT);
struct _ACCESS_DENIED_ACE {ACE_HEADER Header;ACCESS_MASK Mask;DWORD SidStart;};
struct _CONNECTDLGSTRUCTA {DWORD cbStructure;HWND hwndOwner;LPNETRESOURCEA lpConnRes;DWORD dwFlags;DWORD dwDevNum;};
struct _CONNECTDLGSTRUCTW {DWORD cbStructure;HWND hwndOwner;LPNETRESOURCEW lpConnRes;DWORD dwFlags;DWORD dwDevNum;};
struct _INTERNET_BUFFERSA {DWORD dwStructSize;struct _INTERNET_BUFFERSA *Next;LPCSTR lpcszHeader;DWORD dwHeadersLength;DWORD dwHeadersTotal;LPVOID lpvBuffer;DWORD dwBufferLength;DWORD dwBufferTotal;DWORD dwOffsetLow;DWORD dwOffsetHigh;};
struct _PRINTER_DEFAULTSA {LPSTR pDatatype;LPDEVMODE pDevMode;ACCESS_MASK DesiredAccess;};
struct _TAPE_SET_POSITION {DWORD Method;DWORD Partition;LARGE_INTEGER Offset;BOOLEAN Immediate;};
struct tagCOMPOSITIONFORM {DWORD dwStyle;POINT ptCurrentPos;RECT rcArea;};
struct tagEMREXTCREATEPEN {EMR emr;DWORD ihPen;DWORD offBmi;DWORD cbBmi;DWORD offBits;DWORD cbBits;EXTLOGPEN elp;};
struct tagMCI_OPEN_PARMSA {DWORD dwCallback;MCIDEVICEID wDeviceID;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;};
struct tagPROCESSENTRY32W {DWORD dwSize;DWORD cntUsage;DWORD th32ProcessID;DWORD th32DefaultHeapID;DWORD th32ModuleID;DWORD cntThreads;DWORD th32ParentProcessID;LONG pcPriClassBase;DWORD dwFlags;WCHAR szExeFile[260];};
struct _IMAGE_DEBUG_MISC {DWORD DataType;DWORD Length;BOOLEAN Unicode;BYTE Reserved[3];BYTE Data[1];};
struct _IMAGE_NT_HEADERS {DWORD Signature;IMAGE_FILE_HEADER FileHeader;IMAGE_OPTIONAL_HEADER OptionalHeader;};
struct _IMAGE_RELOCATION {union _IMAGE_RELOCATION___1E7C1E46FA531EE3105A5918E7864FED u;DWORD SymbolTableIndex;WORD Type;};
struct _IMAGE_VXD_HEADER {WORD e32_magic;BYTE e32_border;BYTE e32_worder;DWORD e32_level;WORD e32_cpu;WORD e32_os;DWORD e32_ver;DWORD e32_mflags;DWORD e32_mpages;DWORD e32_startobj;DWORD e32_eip;DWORD e32_stackobj;DWORD e32_esp;DWORD e32_pagesize;DWORD e32_lastpagesize;DWORD e32_fixupsize;DWORD e32_fixupsum;DWORD e32_ldrsize;DWORD e32_ldrsum;DWORD e32_objtab;DWORD e32_objcnt;DWORD e32_objmap;DWORD e32_itermap;DWORD e32_rsrctab;DWORD e32_rsrccnt;DWORD e32_restab;DWORD e32_enttab;DWORD e32_dirtab;DWORD e32_dircnt;DWORD e32_fpagetab;DWORD e32_frectab;DWORD e32_impmod;DWORD e32_impmodcnt;DWORD e32_impproc;DWORD e32_pagesum;DWORD e32_datapage;DWORD e32_preload;DWORD e32_nrestab;DWORD e32_cbnrestab;DWORD e32_nressum;DWORD e32_autodata;DWORD e32_debuginfo;DWORD e32_debuglen;DWORD e32_instpreload;DWORD e32_instdemand;DWORD e32_heapsize;BYTE e32_res3[12];DWORD e32_winresoff;DWORD e32_winreslen;WORD e32_devid;WORD e32_ddkver;};
struct _WIN32_FIND_DATAA {DWORD dwFileAttributes;FILETIME ftCreationTime;FILETIME ftLastAccessTime;FILETIME ftLastWriteTime;DWORD nFileSizeHigh;DWORD nFileSizeLow;DWORD dwReserved0;DWORD dwReserved1;CHAR cFileName[260];CHAR cAlternateFileName[14];};
struct _WIN32_FIND_DATAW {DWORD dwFileAttributes;FILETIME ftCreationTime;FILETIME ftLastAccessTime;FILETIME ftLastWriteTime;DWORD nFileSizeHigh;DWORD nFileSizeLow;DWORD dwReserved0;DWORD dwReserved1;WCHAR cFileName[260];WCHAR cAlternateFileName[14];};
struct tagDVTARGETDEVICE {DWORD tdSize;WORD tdDriverNameOffset;WORD tdDeviceNameOffset;WORD tdPortNameOffset;WORD tdExtDevmodeOffset;BYTE tdData[1];};
struct tagENUMLOGFONTEXW {LOGFONTW elfLogFont;WCHAR elfFullName[64];BYTE elfStyle[32];BYTE elfScript[32];};
struct tagPROCESSENTRY32 {DWORD dwSize;DWORD cntUsage;DWORD th32ProcessID;DWORD th32DefaultHeapID;DWORD th32ModuleID;DWORD cntThreads;DWORD th32ParentProcessID;LONG pcPriClassBase;DWORD dwFlags;CHAR szExeFile[260];};
typedef UINT (*LPFNPSPCALLBACKA)(HWND, UINT, LPPROPSHEETPAGEA);
typedef UINT (*LPFNPSPCALLBACKW)(HWND, UINT, LPPROPSHEETPAGEW);
struct _IMAGEHLP_MODULE {DWORD SizeOfStruct;DWORD BaseOfImage;DWORD ImageSize;DWORD TimeDateStamp;DWORD CheckSum;DWORD NumSyms;SYM_TYPE SymType;CHAR ModuleName[32];CHAR ImageName[256];CHAR LoadedImageName[256];};
struct _TT_HITTESTINFOA {HWND hwnd;POINT pt;TOOLINFOA ti;};
struct _TT_HITTESTINFOW {HWND hwnd;POINT pt;TOOLINFOW ti;};
struct _WIN32_STREAM_ID {DWORD dwStreamId;DWORD dwStreamAttributes;LARGE_INTEGER Size;DWORD dwStreamNameSize;WCHAR cStreamName[1];};
struct _WINDOWPLACEMENT {UINT length;UINT flags;UINT showCmd;POINT ptMinPosition;POINT ptMaxPosition;RECT rcNormalPosition;};
struct _WIN_CERTIFICATE {DWORD dwLength;WORD wRevision;WORD wCertificateType;BYTE bCertificate[1];};
struct _WSANSClassInfoA {LPSTR lpszName;DWORD dwNameSpace;DWORD dwValueType;DWORD dwValueSize;LPVOID lpValue;};
struct tagCANDIDATEFORM {DWORD dwIndex;DWORD dwStyle;POINT ptCurrentPos;RECT rcArea;};
struct tagDEBUGHOOKINFO {DWORD idThread;DWORD idThreadInstaller;LPARAM lParam;WPARAM wParam;int code;};
struct tagEMRGDICOMMENT {EMR emr;DWORD cbData;BYTE Data[1];};
struct tagHIGHCONTRASTA {UINT cbSize;DWORD dwFlags;LPSTR lpszDefaultScheme;};
struct tagINTERFACEINFO {LPUNKNOWN pUnk;IID iid;WORD wMethod;};
struct tagMCHITTESTINFO {UINT cbSize;POINT pt;UINT uHit;SYSTEMTIME st;};
struct tagMODULEENTRY32 {DWORD dwSize;DWORD th32ModuleID;DWORD th32ProcessID;DWORD GlblcntUsage;DWORD ProccntUsage;BYTE *modBaseAddr;DWORD modBaseSize;HMODULE hModule;char szModule[256];char szExePath[260];};
struct tagRPCOLEMESSAGE {PVOID reserved1;RPCOLEDATAREP dataRepresentation;PVOID Buffer;ULONG cbBuffer;ULONG iMethod;PVOID reserved2[5];ULONG rpcFlags;};
typedef BOOL (*ENUMWINDOWSPROC)(HWND, LPARAM);
struct IRAPIStreamVtbl {HRESULT (*SetRapiStat)(IRAPIStream *, RAPISTREAMFLAG, DWORD);HRESULT (*GetRapiStat)(IRAPIStream *, RAPISTREAMFLAG, DWORD *);};
typedef int (*LPFN_WSACONNECT)(SOCKET,  struct sockaddr *, int, LPWSABUF, LPWSABUF, LPQOS, LPQOS);
struct _ADAPTER_STATUS {UCHAR adapter_address[6];UCHAR rev_major;UCHAR reserved0;UCHAR adapter_type;UCHAR rev_minor;WORD duration;WORD frmr_recv;WORD frmr_xmit;WORD iframe_recv_err;WORD xmit_aborts;DWORD xmit_success;DWORD recv_success;WORD iframe_xmit_err;WORD recv_buff_unavail;WORD t1_timeouts;WORD ti_timeouts;DWORD reserved1;WORD free_ncbs;WORD max_cfg_ncbs;WORD max_ncbs;WORD xmit_buf_unavail;WORD max_dgram_size;WORD pending_sess;WORD max_cfg_sess;WORD max_sess;WORD max_sess_pkt_size;WORD name_count;};
struct _DISCDLGSTRUCTA {DWORD cbStructure;HWND hwndOwner;LPSTR lpLocalName;LPSTR lpRemoteName;DWORD dwFlags;};
struct _DISK_HISTOGRAM {LARGE_INTEGER DiskSize;LARGE_INTEGER Start;LARGE_INTEGER End;LARGE_INTEGER Average;LARGE_INTEGER AverageRead;LARGE_INTEGER AverageWrite;DWORD Granularity;DWORD Size;DWORD ReadCount;DWORD WriteCount;PHISTOGRAM_BUCKET Histogram;};
struct _PUBLICKEYSTRUC {BYTE bType;BYTE bVersion;WORD reserved;ALG_ID aiKeyAlg;};
struct _TV_HITTESTINFO {POINT pt;UINT flags;HTREEITEM hItem;};
struct tagEMRCREATEPEN {EMR emr;DWORD ihPen;LOGPEN lopn;};
struct tagEMRROUNDRECT {EMR emr;RECTL rclBox;SIZEL szlCorner;};
struct tagEMRSETPIXELV {EMR emr;POINTL ptlPixel;COLORREF crColor;};
struct tagRemSTGMEDIUM {DWORD tymed;DWORD dwHandleType;ULONG pData;unsigned int pUnkForRelease;unsigned int cbData;BYTE data[1];};
struct tagSOUNDSENTRYA {UINT cbSize;DWORD dwFlags;DWORD iFSTextEffect;DWORD iFSTextEffectMSec;DWORD iFSTextEffectColorBits;DWORD iFSGrafEffect;DWORD iFSGrafEffectMSec;DWORD iFSGrafEffectColor;DWORD iWindowsEffect;DWORD iWindowsEffectMSec;LPSTR lpszWindowsEffectDLL;DWORD iWindowsEffectOrdinal;};
typedef BOOL (*GRAYSTRINGPROC)(HDC, LPARAM, int);
struct _DISK_GEOMETRY {LARGE_INTEGER Cylinders;MEDIA_TYPE MediaType;DWORD TracksPerCylinder;DWORD SectorsPerTrack;DWORD BytesPerSector;};
struct _PROV_ENUMALGS {ALG_ID aiAlgid;DWORD dwBitLen;DWORD dwNameLen;CHAR szName[20];};
struct _encorrecttext {NMHDR nmhdr;CHARRANGE chrg;WORD seltyp;};
struct tagCONVCONTEXT {UINT cb;UINT wFlags;UINT wCountryID;int iCodePage;DWORD dwLangID;DWORD dwSecurity;SECURITY_QUALITY_OF_SERVICE qos;};
struct tagSERIALKEYSA {UINT cbSize;DWORD dwFlags;LPSTR lpszActivePort;LPSTR lpszPort;UINT iBaudRate;UINT iPortState;UINT iActive;};
struct tagTEXTMETRICW {LONG tmHeight;LONG tmAscent;LONG tmDescent;LONG tmInternalLeading;LONG tmExternalLeading;LONG tmAveCharWidth;LONG tmMaxCharWidth;LONG tmWeight;LONG tmOverhang;LONG tmDigitizedAspectX;LONG tmDigitizedAspectY;WCHAR tmFirstChar;WCHAR tmLastChar;WCHAR tmDefaultChar;WCHAR tmBreakChar;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmPitchAndFamily;BYTE tmCharSet;};
typedef BOOL (*NAMEENUMPROCA)(LPSTR, LPARAM);
struct _DISK_LOGGING {BYTE Function;PVOID BufferAddress;DWORD BufferSize;};
struct tagBIND_OPTS2 {DWORD cbStruct;DWORD grfFlags;DWORD grfMode;DWORD dwTickCountDeadline;DWORD dwTrackFlags;DWORD dwClassContext;LCID locale;COSERVERINFO *pServerInfo;};
struct tagDISPPARAMS {VARIANTARG *rgvarg;DISPID *rgdispidNamedArgs;UINT cArgs;UINT cNamedArgs;};
struct tagDROPSTRUCT {HWND hwndSource;HWND hwndSink;DWORD wFmt;DWORD dwData;POINT ptDrop;DWORD dwControlData;};
typedef BOOL (*LPFNCCSTYLEA)(HWND, LPCCSTYLEA);
typedef BOOL (*LPFNCCSTYLEW)(HWND, LPCCSTYLEW);
struct _JOB_INFO_1A {DWORD JobId;LPSTR pPrinterName;LPSTR pMachineName;LPSTR pUserName;LPSTR pDocument;LPSTR pDatatype;LPSTR pStatus;DWORD Status;DWORD Priority;DWORD Position;DWORD TotalPages;DWORD PagesPrinted;SYSTEMTIME Submitted;};
struct _SHFILEINFOA {HICON hIcon;int iIcon;DWORD dwAttributes;CHAR szDisplayName[260];CHAR szTypeName[80];};
struct _SHFILEINFOW {HICON hIcon;int iIcon;DWORD dwAttributes;WCHAR szDisplayName[260];WCHAR szTypeName[80];};
struct _devicemodeA {BYTE dmDeviceName[32];WORD dmSpecVersion;WORD dmDriverVersion;WORD dmSize;WORD dmDriverExtra;DWORD dmFields;short dmOrientation;short dmPaperSize;short dmPaperLength;short dmPaperWidth;short dmScale;short dmCopies;short dmDefaultSource;short dmPrintQuality;short dmColor;short dmDuplex;short dmYResolution;short dmTTOption;short dmCollate;BYTE dmFormName[32];WORD dmLogPixels;DWORD dmBitsPerPel;DWORD dmPelsWidth;DWORD dmPelsHeight;DWORD dmDisplayFlags;DWORD dmDisplayFrequency;DWORD dmICMMethod;DWORD dmICMIntent;DWORD dmMediaType;DWORD dmDitherType;DWORD dmICCManufacturer;DWORD dmICCModel;};
struct _devicemodeW {WCHAR dmDeviceName[32];WORD dmSpecVersion;WORD dmDriverVersion;WORD dmSize;WORD dmDriverExtra;DWORD dmFields;short dmOrientation;short dmPaperSize;short dmPaperLength;short dmPaperWidth;short dmScale;short dmCopies;short dmDefaultSource;short dmPrintQuality;short dmColor;short dmDuplex;short dmYResolution;short dmTTOption;short dmCollate;WCHAR dmFormName[32];WORD dmLogPixels;DWORD dmBitsPerPel;DWORD dmPelsWidth;DWORD dmPelsHeight;DWORD dmDisplayFlags;DWORD dmDisplayFrequency;DWORD dmICMMethod;DWORD dmICMIntent;DWORD dmMediaType;DWORD dmDitherType;DWORD dmICCManufacturer;DWORD dmICCModel;};
struct _formatrange {HDC hdc;HDC hdcTarget;RECT rc;RECT rcPage;CHARRANGE chrg;};
struct tagARRAYDESC {TYPEDESC tdescElem;USHORT cDims;SAFEARRAYBOUND rgbounds[1];};
struct tagTBNOTIFYA {NMHDR hdr;int iItem;TBBUTTON tbButton;int cchText;LPSTR pszText;};
typedef LONG (*APPLET_PROC)(HWND, UINT, LONG, LONG);
typedef int (*BFFCALLBACK)(HWND, UINT, LPARAM, LPARAM);
typedef void DRVCALLBACK(HDRVR, UINT, DWORD, DWORD, DWORD);
typedef BOOL (*WNDENUMPROC)(HWND, LPARAM);
struct _LV_KEYDOWN {NMHDR hdr;WORD wVKey;UINT flags;};
struct _TC_KEYDOWN {NMHDR hdr;WORD wVKey;UINT flags;};
struct _TV_KEYDOWN {NMHDR hdr;WORD wVKey;UINT flags;};
struct _tagADDRESS {DWORD Offset;WORD Segment;ADDRESS_MODE Mode;};
struct tagEVENTMSG {UINT message;UINT paramL;UINT paramH;DWORD time;HWND hwnd;};
struct tagJOYCAPSA {WORD wMid;WORD wPid;CHAR szPname[32];UINT wXmin;UINT wXmax;UINT wYmin;UINT wYmax;UINT wZmin;UINT wZmax;UINT wNumButtons;UINT wPeriodMin;UINT wPeriodMax;UINT wRmin;UINT wRmax;UINT wUmin;UINT wUmax;UINT wVmin;UINT wVmax;UINT wCaps;UINT wMaxAxes;UINT wNumAxes;UINT wMaxButtons;CHAR szRegKey[32];CHAR szOEMVxD[260];};
struct tagJOYCAPSW {WORD wMid;WORD wPid;WCHAR szPname[32];UINT wXmin;UINT wXmax;UINT wYmin;UINT wYmax;UINT wZmin;UINT wZmax;UINT wNumButtons;UINT wPeriodMin;UINT wPeriodMax;UINT wRmin;UINT wRmax;UINT wUmin;UINT wUmax;UINT wVmin;UINT wVmax;UINT wCaps;UINT wMaxAxes;UINT wNumAxes;UINT wMaxButtons;WCHAR szRegKey[32];WCHAR szOEMVxD[260];};
struct tagLOGBRUSH {UINT lbStyle;COLORREF lbColor;LONG lbHatch;};
struct tagLOGFONTA {LONG lfHeight;LONG lfWidth;LONG lfEscapement;LONG lfOrientation;LONG lfWeight;BYTE lfItalic;BYTE lfUnderline;BYTE lfStrikeOut;BYTE lfCharSet;BYTE lfOutPrecision;BYTE lfClipPrecision;BYTE lfQuality;BYTE lfPitchAndFamily;CHAR lfFaceName[32];};
struct tagLOGFONTW {LONG lfHeight;LONG lfWidth;LONG lfEscapement;LONG lfOrientation;LONG lfWeight;BYTE lfItalic;BYTE lfUnderline;BYTE lfStrikeOut;BYTE lfCharSet;BYTE lfOutPrecision;BYTE lfClipPrecision;BYTE lfQuality;BYTE lfPitchAndFamily;WCHAR lfFaceName[32];};
struct _DROPFILES {DWORD pFiles;POINT pt;BOOL fNC;BOOL fWide;};
struct _OFNOTIFYA {NMHDR hdr;LPOPENFILENAMEA lpOFN;LPSTR pszFile;};
struct _POLYTEXTA {int x;int y;UINT n;LPCSTR lpstr;UINT uiFlags;RECT rcl;int *pdx;};
struct _selchange {NMHDR nmhdr;CHARRANGE chrg;WORD seltyp;};
union tagBINDPTR {LPFUNCDESC lpfuncdesc;LPVARDESC lpvardesc;LPTYPECOMP lptcomp;};
struct tagEMRTEXT {POINTL ptlReference;DWORD nChars;DWORD offString;DWORD fOptions;RECTL rcl;DWORD offDx;};
typedef void (*TIMERPROC)(HWND, UINT, UINT, DWORD);
typedef UINT (*YIELDPROC)(MCIDEVICEID, DWORD);
struct _COMMPROP {WORD wPacketLength;WORD wPacketVersion;DWORD dwServiceMask;DWORD dwReserved1;DWORD dwMaxTxQueue;DWORD dwMaxRxQueue;DWORD dwMaxBaud;DWORD dwProvSubType;DWORD dwProvCapabilities;DWORD dwSettableParams;DWORD dwSettableBaud;WORD wSettableData;WORD wSettableStopParity;DWORD dwCurrentTxQueue;DWORD dwCurrentRxQueue;DWORD dwProvSpec1;DWORD dwProvSpec2;WCHAR wcProvChar[1];};
struct _ICONINFO {BOOL fIcon;DWORD xHotspot;DWORD yHotspot;HBITMAP hbmMask;HBITMAP hbmColor;};
struct _LV_ITEMA {UINT mask;int iItem;int iSubItem;UINT state;UINT stateMask;LPSTR pszText;int cchTextMax;int iImage;LPARAM lParam;};
struct _OFSTRUCT {BYTE cBytes;BYTE fFixedDisk;WORD nErrCode;WORD Reserved1;WORD Reserved2;CHAR szPathName[128];};
struct _RAPIINIT {DWORD cbSize;HANDLE heRapiInit;HRESULT hrRapiInit;};
struct _TC_ITEMA {UINT mask;UINT lpReserved1;UINT lpReserved2;LPSTR pszText;int cchTextMax;int iImage;LPARAM lParam;};
struct tagBITMAP {LONG bmType;LONG bmWidth;LONG bmHeight;LONG bmWidthBytes;WORD bmPlanes;WORD bmBitsPixel;LPVOID bmBits;};
struct tagEMRARC {EMR emr;RECTL rclBox;POINTL ptlStart;POINTL ptlEnd;};
struct tagLOGPEN {UINT lopnStyle;POINT lopnWidth;COLORREF lopnColor;};
struct tagTCITEM {UINT mask;UINT lpReserved1;UINT lpReserved2;LPSTR pszText;int cchTextMax;int iImage;LPARAM lParam;};
typedef LRESULT (*HOOKPROC)(int, WPARAM, LPARAM);
typedef HRESULT RAPIEXT(DWORD, BYTE, DWORD, BYTE, IRAPIStream *);
struct _DCB {DWORD DCBlength;DWORD BaudRate;unsigned int fBinary : 1;unsigned int fParity : 1;unsigned int fOutxCtsFlow : 1;unsigned int fOutxDsrFlow : 1;unsigned int fDtrControl : 2;unsigned int fDsrSensitivity : 1;unsigned int fTXContinueOnXoff : 1;unsigned int fOutX : 1;unsigned int fInX : 1;unsigned int fErrorChar : 1;unsigned int fNull : 1;unsigned int fRtsControl : 2;unsigned int fAbortOnError : 1;unsigned int fDummy2 : 17;WORD wReserved;WORD XonLim;WORD XoffLim;BYTE ByteSize;BYTE Parity;BYTE StopBits;char XonChar;char XoffChar;char ErrorChar;char EofChar;char EvtChar;WORD wReserved1;};
struct _SID {BYTE Revision;BYTE SubAuthorityCount;SID_IDENTIFIER_AUTHORITY IdentifierAuthority;DWORD SubAuthority[1];};
struct _IMAGE_AUX_SYMBOL___0ECF6FFE4CB91F7643C274EBA09FDD11 {DWORD Length;WORD NumberOfRelocations;WORD NumberOfLinenumbers;DWORD CheckSum;SHORT Number;BYTE Selection;};
struct _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C {DWORD TagIndex;union _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C___7BA673E1ED5771089D188D89EB9BDF46 Misc;union _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C___16A1A8FB0340C07B06C110366CF85D46 FcnAry;WORD TvIndex;};
union _IMAGE_THUNK_DATA___0FC9A8C55E35B7004611A96ACAD7866D {PBYTE ForwarderString;PDWORD Function;DWORD Ordinal;PIMAGE_IMPORT_BY_NAME AddressOfData;};
struct tagMIXERLINEA___3F59E0B102B49F482C4A8B1440A7891E {DWORD dwType;DWORD dwDeviceID;WORD wMid;WORD wPid;MMVERSION vDriverVersion;CHAR szPname[32];};
struct tagMIXERLINEW___9A19AF7771B1B870F9962D397CED60DA {DWORD dwType;DWORD dwDeviceID;WORD wMid;WORD wPid;MMVERSION vDriverVersion;WCHAR szPname[32];};
union tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D {struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___309D668730615BAF74518D141CF67858 bmp;struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___02D247D6A486D56C73DBF439481983E7 wmf;struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___0715B07ED6754B0F0C1844052E8836F8 icon;struct tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D___425444B63999EAF57D64386882606692 emf;};
typedef INT (*LPFN_WSAGETSERVICECLASSNAMEBYCLASSIDA)(LPGUID, LPSTR, LPDWORD);
struct _22BDD2D628B0B561C5A9CA42290FE551 {DWORD bV4Size;LONG bV4Width;LONG bV4Height;WORD bV4Planes;WORD bV4BitCount;DWORD bV4V4Compression;DWORD bV4SizeImage;LONG bV4XPelsPerMeter;LONG bV4YPelsPerMeter;DWORD bV4ClrUsed;DWORD bV4ClrImportant;DWORD bV4RedMask;DWORD bV4GreenMask;DWORD bV4BlueMask;DWORD bV4AlphaMask;DWORD bV4CSType;CIEXYZTRIPLE bV4Endpoints;DWORD bV4GammaRed;DWORD bV4GammaGreen;DWORD bV4GammaBlue;};
struct _BC2FB811D417144E831EE3AEA4A279C8 {DWORD dwStructSize;LPSTR lpszScheme;DWORD dwSchemeLength;INTERNET_SCHEME nScheme;LPSTR lpszHostName;DWORD dwHostNameLength;INTERNET_PORT nPort;LPSTR lpszUserName;DWORD dwUserNameLength;LPSTR lpszPassword;DWORD dwPasswordLength;LPSTR lpszUrlPath;DWORD dwUrlPathLength;LPSTR lpszExtraInfo;DWORD dwExtraInfoLength;};
typedef INT (*LPFN_WSAGETSERVICECLASSINFOA)(LPGUID, LPGUID, LPDWORD, LPWSASERVICECLASSINFOA);
typedef INT (*LPFN_WSAGETSERVICECLASSINFOW)(LPGUID, LPGUID, LPDWORD, LPWSASERVICECLASSINFOW);
typedef BOOL (*PENUMLOADED_MODULES_CALLBACK)(LPSTR, ULONG, ULONG, PVOID);
typedef BOOL (*LPFN_WSAGETOVERLAPPEDRESULT)(SOCKET, LPWSAOVERLAPPED, LPDWORD, BOOL, LPDWORD);
typedef INT (*LPFN_WSALOOKUPSERVICEBEGINA)(LPWSAQUERYSETA, DWORD, LPHANDLE);
typedef INT (*LPFN_WSALOOKUPSERVICEBEGINW)(LPWSAQUERYSETW, DWORD, LPHANDLE);
typedef BOOL (*PSYMBOL_REGISTERED_CALLBACK)(HANDLE, ULONG, PVOID, PVOID);
struct _INTERNET_CACHE_ENTRY_INFOA {DWORD dwStructSize;LPSTR lpszSourceUrlName;LPSTR lpszLocalFileName;DWORD CacheEntryType;DWORD dwUseCount;DWORD dwHitRate;DWORD dwSizeLow;DWORD dwSizeHigh;FILETIME LastModifiedTime;FILETIME ExpireTime;FILETIME LastAccessTime;FILETIME LastSyncTime;PBYTE lpHeaderInfo;DWORD dwHeaderInfoSize;LPSTR lpszFileExtension;DWORD dwReserved;};
typedef BOOL (*PSYM_ENUMMODULES_CALLBACK)(LPSTR, ULONG, PVOID);
typedef BOOL (*PSYM_ENUMSYMBOLS_CALLBACK)(LPSTR, ULONG, ULONG, PVOID);
struct tagMCI_ANIM_WINDOW_PARMSA {DWORD dwCallback;HWND hWnd;UINT nCmdShow;LPCSTR lpstrText;};
struct tagMCI_OVLY_WINDOW_PARMSA {DWORD dwCallback;HWND hWnd;UINT nCmdShow;LPCSTR lpstrText;};
typedef BOOL (*PIMAGEHLP_STATUS_ROUTINE)(IMAGEHLP_STATUS_REASON, LPSTR, LPSTR, ULONG, ULONG);
struct _IMAGE_EXPORT_DIRECTORY {DWORD Characteristics;DWORD TimeDateStamp;WORD MajorVersion;WORD MinorVersion;DWORD Name;DWORD Base;DWORD NumberOfFunctions;DWORD NumberOfNames;PDWORD *AddressOfFunctions;PDWORD *AddressOfNames;PWORD *AddressOfNameOrdinals;};
struct tagEMRSETDIBITSTODEVICE {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG xSrc;LONG ySrc;LONG cxSrc;LONG cySrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;DWORD iUsageSrc;DWORD iStartScan;DWORD cScans;};
struct tagLAYERPLANEDESCRIPTOR {WORD nSize;WORD nVersion;DWORD dwFlags;BYTE iPixelType;BYTE cColorBits;BYTE cRedBits;BYTE cRedShift;BYTE cGreenBits;BYTE cGreenShift;BYTE cBlueBits;BYTE cBlueShift;BYTE cAlphaBits;BYTE cAlphaShift;BYTE cAccumBits;BYTE cAccumRedBits;BYTE cAccumGreenBits;BYTE cAccumBlueBits;BYTE cAccumAlphaBits;BYTE cDepthBits;BYTE cStencilBits;BYTE cAuxBuffers;BYTE iLayerPlane;BYTE bReserved;COLORREF crTransparent;};
struct tagMCI_ANIM_OPEN_PARMSA {DWORD dwCallback;MCIDEVICEID wDeviceID;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwStyle;HWND hWndParent;};
struct tagMCI_OVLY_OPEN_PARMSA {DWORD dwCallback;MCIDEVICEID wDeviceID;LPCSTR lpstrDeviceType;LPCSTR lpstrElementName;LPCSTR lpstrAlias;DWORD dwStyle;HWND hWndParent;};
struct _IMAGE_OPTIONAL_HEADER {WORD Magic;BYTE MajorLinkerVersion;BYTE MinorLinkerVersion;DWORD SizeOfCode;DWORD SizeOfInitializedData;DWORD SizeOfUninitializedData;DWORD AddressOfEntryPoint;DWORD BaseOfCode;DWORD BaseOfData;DWORD ImageBase;DWORD SectionAlignment;DWORD FileAlignment;WORD MajorOperatingSystemVersion;WORD MinorOperatingSystemVersion;WORD MajorImageVersion;WORD MinorImageVersion;WORD MajorSubsystemVersion;WORD MinorSubsystemVersion;DWORD Reserved1;DWORD SizeOfImage;DWORD SizeOfHeaders;DWORD CheckSum;WORD Subsystem;WORD DllCharacteristics;DWORD SizeOfStackReserve;DWORD SizeOfStackCommit;DWORD SizeOfHeapReserve;DWORD SizeOfHeapCommit;DWORD LoaderFlags;DWORD NumberOfRvaAndSizes;IMAGE_DATA_DIRECTORY DataDirectory[16];};
struct _PARTITION_INFORMATION {LARGE_INTEGER StartingOffset;LARGE_INTEGER PartitionLength;DWORD HiddenSectors;DWORD PartitionNumber;BYTE PartitionType;BOOLEAN BootIndicator;BOOLEAN RecognizedPartition;BOOLEAN RewritePartition;};
struct ISequentialStreamVtbl {HRESULT (*QueryInterface)(ISequentialStream *,  IID *, PVOID *);ULONG (*AddRef)(ISequentialStream *);ULONG (*Release)(ISequentialStream *);HRESULT (*Read)(ISequentialStream *, void *, ULONG, ULONG *);HRESULT (*Write)(ISequentialStream *,  void *, ULONG, ULONG *);};
struct ISupportErrorInfoVtbl {HRESULT (*QueryInterface)(ISupportErrorInfo *,  IID *, PVOID *);ULONG (*AddRef)(ISupportErrorInfo *);ULONG (*Release)(ISupportErrorInfo *);HRESULT (*InterfaceSupportsErrorInfo)(ISupportErrorInfo *,  IID *);};
typedef BOOL (*LPFNADDPROPSHEETPAGES)(LPVOID, LPFNADDPROPSHEETPAGE, LPARAM);
struct _IMAGE_SECTION_HEADER {BYTE Name[8];union _IMAGE_SECTION_HEADER___39DFBA39B6D121CDFC1ACE66C995549C Misc;DWORD VirtualAddress;DWORD SizeOfRawData;DWORD PointerToRawData;DWORD PointerToRelocations;DWORD PointerToLinenumbers;WORD NumberOfRelocations;WORD NumberOfLinenumbers;DWORD Characteristics;};
struct _RTL_CRITICAL_SECTION {PRTL_CRITICAL_SECTION_DEBUG DebugInfo;LONG LockCount;LONG RecursionCount;HANDLE OwningThread;HANDLE LockSemaphore;DWORD Reserved;};
struct _WSAServiceClassInfoA {LPGUID lpServiceClassId;LPSTR lpszServiceClassName;DWORD dwCount;LPWSANSCLASSINFOA lpClassInfos;};
typedef BOOL (*LPFN_WSAGETQOSBYNAME)(SOCKET, LPWSABUF, LPQOS);
struct _CMInvokeCommandInfo {DWORD cbSize;DWORD fMask;HWND hwnd;LPCSTR lpVerb;LPCSTR lpParameters;LPCSTR lpDirectory;int nShow;DWORD dwHotKey;HANDLE hIcon;};
struct _LOAD_DLL_DEBUG_INFO {HANDLE hFile;LPVOID lpBaseOfDll;DWORD dwDebugInfoFileOffset;DWORD nDebugInfoSize;LPVOID lpImageName;WORD fUnicode;};
struct _SECURITY_DESCRIPTOR {BYTE Revision;BYTE Sbz1;SECURITY_DESCRIPTOR_CONTROL Control;PSID Owner;PSID Group;PACL Sacl;PACL Dacl;};
struct tagEMRPOLYPOLYLINE16 {EMR emr;RECTL rclBounds;DWORD nPolys;DWORD cpts;DWORD aPolyCounts[1];POINTS apts[1];};
struct IRpcProxyBufferVtbl {HRESULT (*QueryInterface)(IRpcProxyBuffer *,  IID *, PVOID *);ULONG (*AddRef)(IRpcProxyBuffer *);ULONG (*Release)(IRpcProxyBuffer *);HRESULT (*Connect)(IRpcProxyBuffer *, IRpcChannelBuffer *);void (*Disconnect)(IRpcProxyBuffer *);};
typedef INT (*LPFN_WSASETSERVICEA)(LPWSAQUERYSETA, WSAESETSERVICEOP, DWORD);
typedef INT (*LPFN_WSASETSERVICEW)(LPWSAQUERYSETW, WSAESETSERVICEOP, DWORD);
typedef BOOL (*PFNPROCESSPOLICIESA)(HWND, LPCSTR, LPCSTR, LPCSTR, DWORD);
struct _WSANAMESPACE_INFOA {GUID NSProviderId;DWORD dwNameSpace;BOOL fActive;DWORD dwVersion;LPSTR lpszIdentifier;};
struct tagEMRSTRETCHDIBITS {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG xSrc;LONG ySrc;LONG cxSrc;LONG cySrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;DWORD iUsageSrc;DWORD dwRop;LONG cxDest;LONG cyDest;};
struct tagIMEMENUITEMINFOA {UINT cbSize;UINT fType;UINT fState;UINT wID;HBITMAP hbmpChecked;HBITMAP hbmpUnchecked;DWORD dwItemData;CHAR szString[80];HBITMAP hbmpItem;};
struct tagIMEMENUITEMINFOW {UINT cbSize;UINT fType;UINT fState;UINT wID;HBITMAP hbmpChecked;HBITMAP hbmpUnchecked;DWORD dwItemData;WCHAR szString[80];HBITMAP hbmpItem;};
struct tagMDICREATESTRUCTA {LPCSTR szClass;LPCSTR szTitle;HANDLE hOwner;int x;int y;int cx;int cy;DWORD style;LPARAM lParam;};
typedef HRESULT (*LPFNGETCLASSOBJECT)( CLSID *,  IID *, PVOID *);
typedef DWORD (*LPPROGRESS_ROUTINE)(LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, DWORD, DWORD, HANDLE, HANDLE, LPVOID);
struct _MIDL_SERVER_INFO_ {PMIDL_STUB_DESC pStubDesc; SERVER_ROUTINE *DispatchTable;PFORMAT_STRING ProcString; unsigned short *FmtStringOffset; STUB_THUNK *ThunkTable;};
struct _MIDL_STUB_MESSAGE {PRPC_MESSAGE RpcMsg;unsigned char *Buffer;unsigned char *BufferStart;unsigned char *BufferEnd;unsigned char *BufferMark;unsigned int BufferLength;unsigned int MemorySize;unsigned char *Memory;int IsClient;int ReuseBuffer;unsigned char *AllocAllNodesMemory;unsigned char *AllocAllNodesMemoryEnd;int IgnoreEmbeddedPointers;unsigned char *PointerBufferMark;unsigned char fBufferValid;unsigned char Unused;unsigned int MaxCount;unsigned int Offset;unsigned int ActualCount;void *(*pfnAllocate)(unsigned int);void (*pfnFree)(void *);unsigned char *StackTop;unsigned char *pPresentedType;unsigned char *pTransmitType;handle_t SavedHandle; struct _MIDL_STUB_DESC *StubDesc;struct _FULL_PTR_XLAT_TABLES *FullPtrXlatTables;unsigned int FullPtrRefId;int fCheckBounds;int fInDontFree : 1;int fDontCallFreeInst : 1;int fInOnlyParam : 1;int fHasReturn : 1;unsigned int dwDestContext;void *pvDestContext;NDR_SCONTEXT *SavedContextHandles;int ParamNumber;struct IRpcChannelBuffer *pRpcChannelBuffer;PARRAY_INFO pArrayInfo;unsigned int *SizePtrCountArray;unsigned int *SizePtrOffsetArray;unsigned int *SizePtrLengthArray;void *pArgQueue;unsigned int dwStubPhase;unsigned int Reserved[5];};
struct _WSAPROTOCOL_INFOA {DWORD dwServiceFlags1;DWORD dwServiceFlags2;DWORD dwServiceFlags3;DWORD dwServiceFlags4;DWORD dwProviderFlags;GUID ProviderId;DWORD dwCatalogEntryId;WSAPROTOCOLCHAIN ProtocolChain;int iVersion;int iAddressFamily;int iMaxSockAddr;int iMinSockAddr;int iSocketType;int iProtocol;int iProtocolMaxOffset;int iNetworkByteOrder;int iSecurityScheme;DWORD dwMessageSize;DWORD dwProviderReserved;CHAR szProtocol[256];};
struct _WSAPROTOCOL_INFOW {DWORD dwServiceFlags1;DWORD dwServiceFlags2;DWORD dwServiceFlags3;DWORD dwServiceFlags4;DWORD dwProviderFlags;GUID ProviderId;DWORD dwCatalogEntryId;WSAPROTOCOLCHAIN ProtocolChain;int iVersion;int iAddressFamily;int iMaxSockAddr;int iMinSockAddr;int iSocketType;int iProtocol;int iProtocolMaxOffset;int iNetworkByteOrder;int iSecurityScheme;DWORD dwMessageSize;DWORD dwProviderReserved;WCHAR szProtocol[256];};
struct tagEMREXTFLOODFILL {EMR emr;POINTL ptlStart;COLORREF crColor;DWORD iMode;};
struct tagEMRPOLYPOLYLINE {EMR emr;RECTL rclBounds;DWORD nPolys;DWORD cptl;DWORD aPolyCounts[1];POINTL aptl[1];};
typedef INT (*LPFNCCSIZETOTEXTA)(DWORD, DWORD, HFONT, LPSTR);
struct _CRITICAL_SECTION {PCRITICAL_SECTION_DEBUG DebugInfo;LONG LockCount;LONG RecursionCount;HANDLE OwningThread;HANDLE LockSemaphore;DWORD SpinCount;};
struct _IMAGE_OS2_HEADER {WORD ne_magic;CHAR ne_ver;CHAR ne_rev;WORD ne_enttab;WORD ne_cbenttab;LONG ne_crc;WORD ne_flags;WORD ne_autodata;WORD ne_heap;WORD ne_stack;LONG ne_csip;LONG ne_sssp;WORD ne_cseg;WORD ne_cmod;WORD ne_cbnrestab;WORD ne_segtab;WORD ne_rsrctab;WORD ne_restab;WORD ne_modtab;WORD ne_imptab;LONG ne_nrestab;WORD ne_cmovent;WORD ne_align;WORD ne_cres;BYTE ne_exetyp;BYTE ne_flagsothers;WORD ne_pretthunks;WORD ne_psegrefbytes;WORD ne_swaparea;WORD ne_expver;};
struct _KEY_EVENT_RECORD {BOOL bKeyDown;WORD wRepeatCount;WORD wVirtualKeyCode;WORD wVirtualScanCode;union _KEY_EVENT_RECORD___0E79EC4DAC98A4AB202537FA8C3F69FC uChar;DWORD dwControlKeyState;};
struct tagMODULEENTRY32W {DWORD dwSize;DWORD th32ModuleID;DWORD th32ProcessID;DWORD GlblcntUsage;DWORD ProccntUsage;BYTE *modBaseAddr;DWORD modBaseSize;HMODULE hModule;WCHAR szModule[256];WCHAR szExePath[260];};
struct tagNEWTEXTMETRICA {LONG tmHeight;LONG tmAscent;LONG tmDescent;LONG tmInternalLeading;LONG tmExternalLeading;LONG tmAveCharWidth;LONG tmMaxCharWidth;LONG tmWeight;LONG tmOverhang;LONG tmDigitizedAspectX;LONG tmDigitizedAspectY;BYTE tmFirstChar;BYTE tmLastChar;BYTE tmDefaultChar;BYTE tmBreakChar;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmPitchAndFamily;BYTE tmCharSet;DWORD ntmFlags;UINT ntmSizeEM;UINT ntmCellHeight;UINT ntmAvgWidth;};
struct tagSTATPROPSETSTG {FMTID fmtid;CLSID clsid;DWORD grfFlags;FILETIME mtime;FILETIME ctime;FILETIME atime;};
struct IEnumMonikerVtbl {HRESULT (*QueryInterface)(IEnumMoniker *,  IID *, PVOID *);ULONG (*AddRef)(IEnumMoniker *);ULONG (*Release)(IEnumMoniker *);HRESULT (*Next)(IEnumMoniker *, ULONG, struct IMoniker *, ULONG *);HRESULT (*Skip)(IEnumMoniker *, ULONG);HRESULT (*Reset)(IEnumMoniker *);HRESULT (*Clone)(IEnumMoniker *, IEnumMoniker **);};
struct IEnumUnknownVtbl {HRESULT (*QueryInterface)(IEnumUnknown *,  IID *, PVOID *);ULONG (*AddRef)(IEnumUnknown *);ULONG (*Release)(IEnumUnknown *);HRESULT (*Next)(IEnumUnknown *, ULONG, IUnknown **, ULONG *);HRESULT (*Skip)(IEnumUnknown *, ULONG);HRESULT (*Reset)(IEnumUnknown *);HRESULT (*Clone)(IEnumUnknown *, IEnumUnknown **);};
typedef SOCKET (*LPFN_WSAJOINLEAF)(SOCKET,  struct sockaddr *, int, LPWSABUF, LPWSABUF, LPQOS, LPQOS, DWORD);
typedef int (*OLDFONTENUMPROCA)( LOGFONTA *,  TEXTMETRICA *, DWORD, LPARAM);
typedef int (*OLDFONTENUMPROCW)( LOGFONTW *,  TEXTMETRICW *, DWORD, LPARAM);
struct _PRINTER_INFO_2A {LPSTR pServerName;LPSTR pPrinterName;LPSTR pShareName;LPSTR pPortName;LPSTR pDriverName;LPSTR pComment;LPSTR pLocation;LPDEVMODEA pDevMode;LPSTR pSepFile;LPSTR pPrintProcessor;LPSTR pDatatype;LPSTR pParameters;PSECURITY_DESCRIPTOR pSecurityDescriptor;DWORD Attributes;DWORD Priority;DWORD DefaultPriority;DWORD StartTime;DWORD UntilTime;DWORD Status;DWORD cJobs;DWORD AveragePPM;};
struct tagEMRPOLYLINE16 {EMR emr;RECTL rclBounds;DWORD cpts;POINTL apts[1];};
struct tagENHMETAHEADER {DWORD iType;DWORD nSize;RECTL rclBounds;RECTL rclFrame;DWORD dSignature;DWORD nVersion;DWORD nBytes;DWORD nRecords;WORD nHandles;WORD sReserved;DWORD nDescription;DWORD offDescription;DWORD nPalEntries;SIZEL szlDevice;SIZEL szlMillimeters;};
struct tagMIXERCONTROLA {DWORD cbStruct;DWORD dwControlID;DWORD dwControlType;DWORD fdwControl;DWORD cMultipleItems;CHAR szShortName[16];CHAR szName[64];union tagMIXERCONTROLA___F40A87BC7785C0A96184E67A54F22A88 Bounds;union tagMIXERCONTROLA___AFA1D3B62FF5E28583F9FD43B125895E Metrics;};
struct tagMIXERCONTROLW {DWORD cbStruct;DWORD dwControlID;DWORD dwControlType;DWORD fdwControl;DWORD cMultipleItems;WCHAR szShortName[16];WCHAR szName[64];union tagMIXERCONTROLW___CE8B2FC319E8C2691956D03ACBE05A05 Bounds;union tagMIXERCONTROLW___AFA1D3B62FF5E28583F9FD43B125895E Metrics;};
typedef BOOL (*DIGEST_FUNCTION)(DIGEST_HANDLE refdata, PBYTE pData, DWORD dwLength);
typedef int (*LPCONDITIONPROC)(LPWSABUF, LPWSABUF, LPQOS, LPQOS, LPWSABUF, LPWSABUF, GROUP *, DWORD);
typedef SOCKET (*LPFN_WSASOCKETA)(int, int, int, LPWSAPROTOCOL_INFOA, GROUP, DWORD);
typedef SOCKET (*LPFN_WSASOCKETW)(int, int, int, LPWSAPROTOCOL_INFOW, GROUP, DWORD);
struct tagEMRINVERTRGN {EMR emr;RECTL rclBounds;DWORD cbRgnData;BYTE RgnData[1];};
struct tagGCP_RESULTSA {DWORD lStructSize;LPSTR lpOutString;UINT *lpOrder;INT *lpDx;INT *lpCaretPos;LPSTR lpClass;UINT *lpGlyphs;UINT nGlyphs;UINT nMaxFit;};
struct tagMIDIOUTCAPSA {WORD wMid;WORD wPid;MMVERSION vDriverVersion;CHAR szPname[32];WORD wTechnology;WORD wVoices;WORD wNotes;WORD wChannelMask;DWORD dwSupport;};
struct tagMIDIOUTCAPSW {WORD wMid;WORD wPid;MMVERSION vDriverVersion;WCHAR szPname[32];WORD wTechnology;WORD wVoices;WORD wNotes;WORD wChannelMask;DWORD dwSupport;};
struct tagTOOLTIPTEXTA {NMHDR hdr;LPSTR lpszText;char szText[80];HINSTANCE hinst;UINT uFlags;};
struct tagWAVEOUTCAPSA {WORD wMid;WORD wPid;MMVERSION vDriverVersion;CHAR szPname[32];DWORD dwFormats;WORD wChannels;WORD wReserved1;DWORD dwSupport;};
struct tagWAVEOUTCAPSW {WORD wMid;WORD wPid;MMVERSION vDriverVersion;WCHAR szPname[32];DWORD dwFormats;WORD wChannels;WORD wReserved1;DWORD dwSupport;};
typedef SOCKET (*LPFN_WSAACCEPT)(SOCKET, struct sockaddr *, LPINT, LPCONDITIONPROC, DWORD);
struct _wireSAFEARRAY {USHORT cDims;USHORT fFeatures;ULONG cbElements;ULONG cLocks;SAFEARRAYUNION uArrayStructs;SAFEARRAYBOUND rgsabound[1];};
struct tagCONTROLINFO {ULONG cb;HACCEL hAccel;USHORT cAccel;DWORD dwFlags;};
struct tagEMRANGLEARC {EMR emr;POINTL ptlCenter;DWORD nRadius;FLOAT eStartAngle;FLOAT eSweepAngle;};
struct tagEMRPOLYLINE {EMR emr;RECTL rclBounds;DWORD cptl;POINTL aptl[1];};
struct tagEXTLOGFONTA {LOGFONTA elfLogFont;BYTE elfFullName[64];BYTE elfStyle[32];DWORD elfVersion;DWORD elfStyleSize;DWORD elfMatch;DWORD elfReserved;BYTE elfVendorId[4];DWORD elfCulture;PANOSE elfPanose;};
struct tagMIDIINCAPSA {WORD wMid;WORD wPid;MMVERSION vDriverVersion;CHAR szPname[32];DWORD dwSupport;};
struct tagMIDIINCAPSW {WORD wMid;WORD wPid;MMVERSION vDriverVersion;WCHAR szPname[32];DWORD dwSupport;};
struct tagNEWCPLINFOA {DWORD dwSize;DWORD dwFlags;DWORD dwHelpContext;LONG lData;HICON hIcon;CHAR szName[32];CHAR szInfo[64];CHAR szHelpFile[128];};
struct tagNEWCPLINFOW {DWORD dwSize;DWORD dwFlags;DWORD dwHelpContext;LONG lData;HICON hIcon;WCHAR szName[32];WCHAR szInfo[64];WCHAR szHelpFile[128];};
struct tagPAINTSTRUCT {HDC hdc;BOOL fErase;RECT rcPaint;BOOL fRestore;BOOL fIncUpdate;BYTE rgbReserved[32];};
struct tagWAVEINCAPSA {WORD wMid;WORD wPid;MMVERSION vDriverVersion;CHAR szPname[32];DWORD dwFormats;WORD wChannels;WORD wReserved1;};
struct tagWAVEINCAPSW {WORD wMid;WORD wPid;MMVERSION vDriverVersion;WCHAR szPname[32];DWORD dwFormats;WORD wChannels;WORD wReserved1;};
typedef BOOL (*DRAWSTATEPROC)(HDC, LPARAM, WPARAM, int, int);
typedef int (*ENHMFENUMPROC)(HDC, HANDLETABLE *, ENHMETARECORD *, int, LPARAM);
typedef UINT (*LPFNOLEUIHOOK)(HWND, UINT, WPARAM, LPARAM);
typedef BOOL (*PROPENUMPROCA)(HWND, LPCSTR, HANDLE);
typedef void (*SENDASYNCPROC)(HWND, UINT, DWORD, LRESULT);
struct _FORM_INFO_1A {DWORD Flags;LPSTR pName;SIZEL Size;RECTL ImageableArea;};
struct _LV_FINDINFOA {UINT flags;LPCSTR psz;LPARAM lParam;POINT pt;UINT vkDirection;};
struct _NM_TREEVIEWA {NMHDR hdr;UINT action;TV_ITEMA itemOld;TV_ITEMA itemNew;POINT ptDrag;};
struct _NM_TREEVIEWW {NMHDR hdr;UINT action;TV_ITEMW itemOld;TV_ITEMW itemNew;POINT ptDrag;};
struct tagDIBSECTION {BITMAP dsBm;BITMAPINFOHEADER dsBmih;DWORD dsBitfields[3];HANDLE dshSection;DWORD dsOffset;};
struct tagEMRFILLRGN {EMR emr;RECTL rclBounds;DWORD cbRgnData;DWORD ihBrush;BYTE RgnData[1];};
struct tagMIXERCAPSA {WORD wMid;WORD wPid;MMVERSION vDriverVersion;CHAR szPname[32];DWORD fdwSupport;DWORD cDestinations;};
struct tagMIXERCAPSW {WORD wMid;WORD wPid;MMVERSION vDriverVersion;WCHAR szPname[32];DWORD fdwSupport;DWORD cDestinations;};
struct IUnknownVtbl {HRESULT (*QueryInterface)(IUnknown *,  IID *, PVOID *);ULONG (*AddRef)(IUnknown *);ULONG (*Release)(IUnknown *);};
struct _COMM_CONFIG {DWORD dwSize;WORD wVersion;WORD wReserved;DCB dcb;DWORD dwProviderSubType;DWORD dwProviderOffset;DWORD dwProviderSize;WCHAR wcProviderData[1];};
struct _NM_LISTVIEW {NMHDR hdr;int iItem;int iSubItem;UINT uNewState;UINT uOldState;UINT uChanged;POINT ptAction;LPARAM lParam;};
struct _SYSTEM_INFO {union _SYSTEM_INFO___058745E319A46827965CDE7F37238831 u;DWORD dwPageSize;PVOID lpMinimumApplicationAddress;PVOID lpMaximumApplicationAddress;DWORD dwActiveProcessorMask;DWORD dwNumberOfProcessors;DWORD dwProcessorType;DWORD dwAllocationGranularity;WORD wProcessorLevel;WORD wProcessorRevision;};
typedef UINT (*__CDHOOKPROC)(HWND, UINT, WPARAM, LPARAM);
struct _endropfiles {NMHDR nmhdr;HANDLE hDrop;LONG cp;BOOL fProtected;};
struct tagCWPSTRUCT {LPARAM lParam;WPARAM wParam;UINT message;HWND hwnd;};
struct tagEXTLOGPEN {UINT elpPenStyle;UINT elpWidth;UINT elpBrushStyle;COLORREF elpColor;LONG elpHatch;DWORD elpNumEntries;DWORD elpStyleEntry[1];};
struct tagFORMATETC {CLIPFORMAT cfFormat;DVTARGETDEVICE *ptd;DWORD dwAspect;LONG lindex;DWORD tymed;};
struct tagSAFEARRAY {USHORT cDims;USHORT fFeatures;ULONG cbElements;ULONG cLocks;PVOID pvData;SAFEARRAYBOUND rgsabound[1];};
struct IMallocVtbl {HRESULT (*QueryInterface)(IMalloc *,  IID *, PVOID *);ULONG (*AddRef)(IMalloc *);ULONG (*Release)(IMalloc *);void *(*Alloc)(IMalloc *, ULONG);void (*ReAlloc)(IMalloc *, void *);void *(*Free)(IMalloc *, void *);ULONG (*GetSize)(IMalloc *, void *);int (*DidAlloc)(IMalloc *, void *);void (*HeapMinimize)(IMalloc *);};
typedef DWORD (*LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, LPDEVMODEA);
struct tagAUXCAPSA {WORD wMid;WORD wPid;MMVERSION vDriverVersion;CHAR szPname[32];WORD wTechnology;WORD wReserved1;DWORD dwSupport;};
struct tagAUXCAPSW {WORD wMid;WORD wPid;MMVERSION vDriverVersion;WCHAR szPname[32];WORD wTechnology;WORD wReserved1;DWORD dwSupport;};
struct tagCCSTYLEA {DWORD flStyle;DWORD flExtStyle;CHAR szText[256];LANGID lgid;WORD wReserved1;};
struct tagCCSTYLEW {DWORD flStyle;DWORD flExtStyle;WCHAR szText[256];LANGID lgid;WORD wReserved1;};
struct tagHELPINFO {UINT cbSize;int iContextType;int iCtrlId;HANDLE hItemHandle;DWORD dwContextId;POINT MousePos;};
struct tagTLIBATTR {GUID guid;LCID lcid;SYSKIND syskind;WORD wMajorVerNum;WORD wMinorVerNum;WORD wLibFlags;};
typedef int (*MFENUMPROC)(HDC, HANDLETABLE *, METARECORD *, int, LPARAM);
struct _msgfilter {NMHDR nmhdr;UINT msg;WPARAM wParam;LPARAM lParam;};
struct _HD_ITEMA {UINT mask;int cxy;LPSTR pszText;HBITMAP hbm;int cchTextMax;int fmt;LPARAM lParam;};
struct _TV_ITEMA {UINT mask;HTREEITEM hItem;UINT state;UINT stateMask;LPSTR pszText;int cchTextMax;int iImage;int iSelectedImage;int cChildren;LPARAM lParam;};
typedef LRESULT MMIOPROC(LPSTR, UINT, LPARAM, LPARAM);
struct tagOIFI {UINT cb;BOOL fMDIApp;HWND hwndFrame;HACCEL haccel;UINT cAccelEntries;};
struct tagDEC {USHORT wReserved;union tagDEC___88AE3BEC867F36A22A2957540062A42D u;ULONG Hi32;union tagDEC___69538C3DD9098B71FCE9E10A032568F6 u2;};
struct _NCB {UCHAR ncb_command;UCHAR ncb_retcode;UCHAR ncb_lsn;UCHAR ncb_num;PUCHAR ncb_buffer;WORD ncb_length;UCHAR ncb_callname[16];UCHAR ncb_name[16];UCHAR ncb_rto;UCHAR ncb_sto;void (*ncb_post)(struct _NCB *);UCHAR ncb_lana_num;UCHAR ncb_cmd_cplt;UCHAR ncb_reserve[10];HANDLE ncb_event;};
union _INPUT_RECORD___56C9F45CD5AB058B1B4FD5A9AB9216C4 {KEY_EVENT_RECORD KeyEvent;MOUSE_EVENT_RECORD MouseEvent;WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;MENU_EVENT_RECORD MenuEvent;FOCUS_EVENT_RECORD FocusEvent;};
typedef INT (*LPFN_WSALOOKUPSERVICENEXTA)(HANDLE, DWORD, LPDWORD, LPWSAQUERYSETA);
typedef INT (*LPFN_WSALOOKUPSERVICENEXTW)(HANDLE, DWORD, LPDWORD, LPWSAQUERYSETW);
struct _CREATE_PROCESS_DEBUG_INFO {HANDLE hFile;HANDLE hProcess;HANDLE hThread;LPVOID lpBaseOfImage;DWORD dwDebugInfoFileOffset;DWORD nDebugInfoSize;LPVOID lpThreadLocalBase;LPTHREAD_START_ROUTINE lpStartAddress;LPVOID lpImageName;WORD fUnicode;};
struct ISpecifyPropertyPagesVtbl {HRESULT (*QueryInterface)(ISpecifyPropertyPages *,  IID *, PVOID *);ULONG (*AddRef)(ISpecifyPropertyPages *);ULONG (*Release)(ISpecifyPropertyPages *);HRESULT (*GetPages)(ISpecifyPropertyPages *, CAUUID *);};
typedef INT (*LPFN_WSASTRINGTOADDRESSA)(LPSTR, INT, LPWSAPROTOCOL_INFOA, LPSOCKADDR, LPINT);
struct IEnumSTATPROPSETSTGVtbl {HRESULT (*QueryInterface)(IEnumSTATPROPSETSTG *,  IID *, PVOID *);ULONG (*AddRef)(IEnumSTATPROPSETSTG *);ULONG (*Release)(IEnumSTATPROPSETSTG *);HRESULT (*Next)(IEnumSTATPROPSETSTG *, ULONG, STATPROPSETSTG *, ULONG *);HRESULT (*Skip)(IEnumSTATPROPSETSTG *, ULONG);HRESULT (*Reset)(IEnumSTATPROPSETSTG *);HRESULT (*Clone)(IEnumSTATPROPSETSTG *, IEnumSTATPROPSETSTG **);};
struct IPropertyNotifySinkVtbl {HRESULT (*QueryInterface)(IPropertyNotifySink *,  IID *, PVOID *);ULONG (*AddRef)(IPropertyNotifySink *);ULONG (*Release)(IPropertyNotifySink *);HRESULT (*OnChanged)(IPropertyNotifySink *, DISPID);HRESULT (*OnRequestEdit)(IPropertyNotifySink *, DISPID);};
struct IShellExecuteHookAVtbl {HRESULT (*QueryInterface)(IShellExecuteHookA *,  IID *, PVOID *);ULONG (*AddRef)(IShellExecuteHookA *);ULONG (*Release)(IShellExecuteHookA *);HRESULT (*Execute)(IShellExecuteHookA *, LPSHELLEXECUTEINFOA);};
struct IShellExecuteHookWVtbl {HRESULT (*QueryInterface)(IShellExecuteHookW *,  IID *, PVOID *);ULONG (*AddRef)(IShellExecuteHookW *);ULONG (*Release)(IShellExecuteHookW *);HRESULT (*Execute)(IShellExecuteHookW *, LPSHELLEXECUTEINFOW);};
struct IProvideClassInfoVtbl {HRESULT (*QueryInterface)(IProvideClassInfo *,  IID *, PVOID *);ULONG (*AddRef)(IProvideClassInfo *);ULONG (*Release)(IProvideClassInfo *);HRESULT (*GetClassInfoA)(IProvideClassInfo *, LPTYPEINFO *);};
struct IEnumSTATPROPSTGVtbl {HRESULT (*QueryInterface)(IEnumSTATPROPSTG *,  IID *, PVOID *);ULONG (*AddRef)(IEnumSTATPROPSTG *);ULONG (*Release)(IEnumSTATPROPSTG *);HRESULT (*Next)(IEnumSTATPROPSTG *, ULONG, STATPROPSTG *, ULONG *);HRESULT (*Skip)(IEnumSTATPROPSTG *, ULONG);HRESULT (*Reset)(IEnumSTATPROPSTG *);HRESULT (*Clone)(IEnumSTATPROPSTG *, IEnumSTATPROPSTG **);};
struct ICommDlgBrowserVtbl {HRESULT (*QueryInterface)(ICommDlgBrowser *,  IID *, PVOID *);ULONG (*AddRef)(ICommDlgBrowser *);ULONG (*Release)(ICommDlgBrowser *);HRESULT (*OnDefaultCommand)(ICommDlgBrowser *);HRESULT (*OnStateChange)(ICommDlgBrowser *, ULONG);HRESULT (*IncludeObject)(ICommDlgBrowser *, LPCITEMIDLIST);};
struct IFileViewerSiteVtbl {HRESULT (*QueryInterface)(IFileViewerSite *,  IID *, PVOID *);ULONG (*AddRef)(IFileViewerSite *);ULONG (*Release)(IFileViewerSite *);HRESULT (*SetPinnedWindow)(IFileViewerSite *, HWND);HRESULT (*GetPinnedWindow)(IFileViewerSite *, HWND *);};
struct _PROCESS_HEAP_ENTRY {PVOID lpData;DWORD cbData;BYTE cbOverhead;BYTE iRegionIndex;WORD wFlags;union _PROCESS_HEAP_ENTRY___7560F888646F7FDA504B9D72BE9EBD07 u;};
struct IEnumFORMATETCVtbl {HRESULT (*QueryInterface)(IEnumFORMATETC *,  IID *, PVOID *);ULONG (*AddRef)(IEnumFORMATETC *);ULONG (*Release)(IEnumFORMATETC *);HRESULT (*Next)(IEnumFORMATETC *, ULONG, FORMATETC *, ULONG *);HRESULT (*Skip)(IEnumFORMATETC *, ULONG);HRESULT (*Reset)(IEnumFORMATETC *);HRESULT (*Clone)(IEnumFORMATETC *, IEnumFORMATETC **);};
struct IEnumSTATDATAVtbl {HRESULT (*QueryInterface)(IEnumSTATDATA *,  IID *, PVOID *);ULONG (*AddRef)(IEnumSTATDATA *);ULONG (*Release)(IEnumSTATDATA *);HRESULT (*Next)(IEnumSTATDATA *, ULONG, STATDATA *, ULONG *);HRESULT (*Skip)(IEnumSTATDATA *, ULONG);HRESULT (*Reset)(IEnumSTATDATA *);HRESULT (*Clone)(IEnumSTATDATA *, IEnumSTATDATA **);};
struct _TOKEN_STATISTICS {LUID TokenId;LUID AuthenticationId;LARGE_INTEGER ExpirationTime;TOKEN_TYPE TokenType;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;DWORD DynamicCharged;DWORD DynamicAvailable;DWORD GroupCount;DWORD PrivilegeCount;LUID ModifiedId;};
struct tagDRAWITEMSTRUCT {UINT CtlType;UINT CtlID;UINT itemID;UINT itemAction;UINT itemState;HWND hwndItem;HDC hDC;RECT rcItem;DWORD itemData;};
struct tagEMREXTTEXTOUTA {EMR emr;RECTL rclBounds;DWORD iGraphicsMode;FLOAT exScale;FLOAT eyScale;EMRTEXT emrtext;};
struct tagLOGCOLORSPACEA {DWORD lcsSignature;DWORD lcsVersion;DWORD lcsSize;LCSCSTYPE lcsCSType;LCSGAMUTMATCH lcsIntent;CIEXYZTRIPLE lcsEndpoints;DWORD lcsGammaRed;DWORD lcsGammaGreen;DWORD lcsGammaBlue;CHAR lcsFilename[260];};
struct tagLOGCOLORSPACEW {DWORD lcsSignature;DWORD lcsVersion;DWORD lcsSize;LCSCSTYPE lcsCSType;LCSGAMUTMATCH lcsIntent;CIEXYZTRIPLE lcsEndpoints;DWORD lcsGammaRed;DWORD lcsGammaGreen;DWORD lcsGammaBlue;WCHAR lcsFilename[260];};
struct tagNEWTEXTMETRICW {LONG tmHeight;LONG tmAscent;LONG tmDescent;LONG tmInternalLeading;LONG tmExternalLeading;LONG tmAveCharWidth;LONG tmMaxCharWidth;LONG tmWeight;LONG tmOverhang;LONG tmDigitizedAspectX;LONG tmDigitizedAspectY;WCHAR tmFirstChar;WCHAR tmLastChar;WCHAR tmDefaultChar;WCHAR tmBreakChar;BYTE tmItalic;BYTE tmUnderlined;BYTE tmStruckOut;BYTE tmPitchAndFamily;BYTE tmCharSet;DWORD ntmFlags;UINT ntmSizeEM;UINT ntmCellHeight;UINT ntmAvgWidth;};
struct tagREBARBANDINFOA {UINT cbSize;UINT fMask;UINT fStyle;COLORREF clrFore;COLORREF clrBack;LPSTR lpText;UINT cch;int iImage;HWND hwndChild;UINT cxMinChild;UINT cyMinChild;UINT cx;HBITMAP hbmBack;UINT wID;};
struct IEnumOLEVERBVtbl {HRESULT (*QueryInterface)(IEnumOLEVERB *,  IID *, PVOID *);ULONG (*AddRef)(IEnumOLEVERB *);ULONG (*Release)(IEnumOLEVERB *);HRESULT (*Next)(IEnumOLEVERB *, ULONG, OLEVERB *, ULONG *);HRESULT (*Skip)(IEnumOLEVERB *, ULONG);HRESULT (*Reset)(IEnumOLEVERB *);HRESULT (*Clone)(IEnumOLEVERB *, IEnumOLEVERB **);};
struct IEnumSTATSTGVtbl {HRESULT (*QueryInterface)(IEnumSTATSTG *,  IID *, PVOID *);ULONG (*AddRef)(IEnumSTATSTG *);ULONG (*Release)(IEnumSTATSTG *);HRESULT (*Next)(IEnumSTATSTG *, ULONG, STATSTG *, ULONG *);HRESULT (*Skip)(IEnumSTATSTG *, ULONG);HRESULT (*Reset)(IEnumSTATSTG *);HRESULT (*Clone)(IEnumSTATSTG *, IEnumSTATSTG **);};
struct IEnumVARIANTVtbl {HRESULT (*QueryInterface)(IEnumVARIANT *,  IID *, PVOID *);ULONG (*AddRef)(IEnumVARIANT *);ULONG (*Release)(IEnumVARIANT *);HRESULT (*Next)(IEnumVARIANT *, ULONG, VARIANT *, ULONG *);HRESULT (*Skip)(IEnumVARIANT *, ULONG);HRESULT (*Reset)(IEnumVARIANT *);HRESULT (*Clone)(IEnumVARIANT *, IEnumVARIANT **);};
struct _NOTIFYICONDATAA {DWORD cbSize;HWND hWnd;UINT uID;UINT uFlags;UINT uCallbackMessage;HICON hIcon;CHAR szTip[64];};
struct _NOTIFYICONDATAW {DWORD cbSize;HWND hWnd;UINT uID;UINT uFlags;UINT uCallbackMessage;HICON hIcon;WCHAR szTip[64];};
struct _PERF_DATA_BLOCK {WCHAR Signature[4];DWORD LittleEndian;DWORD Version;DWORD Revision;DWORD TotalByteLength;DWORD HeaderLength;DWORD NumObjectTypes;LONG DefaultObject;SYSTEMTIME SystemTime;LARGE_INTEGER PerfTime;LARGE_INTEGER PerfFreq;LARGE_INTEGER PerfTime100nSec;DWORD SystemNameLength;DWORD SystemNameOffset;};
struct tagEMRPOLYDRAW16 {EMR emr;RECTL rclBounds;DWORD cpts;POINTS apts[1];BYTE abTypes[1];};
struct tagMENUITEMINFOA {UINT cbSize;UINT fMask;UINT fType;UINT fState;UINT wID;HMENU hSubMenu;HBITMAP hbmpChecked;HBITMAP hbmpUnchecked;DWORD dwItemData;LPSTR dwTypeData;UINT cch;};
struct IEnumHLITEMVtbl {HRESULT (*QueryInterface)(IEnumHLITEM *,  IID *, PVOID *);ULONG (*AddRef)(IEnumHLITEM *);ULONG (*Release)(IEnumHLITEM *);HRESULT (*Next)(IEnumHLITEM *, ULONG, HLITEM *, ULONG *);HRESULT (*Skip)(IEnumHLITEM *, ULONG);HRESULT (*Reset)(IEnumHLITEM *);HRESULT (*Clone)(IEnumHLITEM *, IEnumHLITEM **);};
struct IEnumIDListVtbl {HRESULT (*QueryInterface)(IEnumIDList *,  IID *, PVOID *);ULONG (*AddRef)(IEnumIDList *);ULONG (*Release)(IEnumIDList *);HRESULT (*Next)(IEnumIDList *, ULONG, LPITEMIDLIST *, ULONG *);HRESULT (*Skip)(IEnumIDList *, ULONG);HRESULT (*Reset)(IEnumIDList *);HRESULT (*Clone)(IEnumIDList *, IEnumIDList **);};
typedef BOOL (*PROPENUMPROCEXA)(HWND, LPSTR, HANDLE, DWORD);
struct _SV2CVW2_PARAMS {DWORD cbSize;IShellView *psvPrev; FOLDERSETTINGS *pfs;IShellBrowser *psbOwner;RECT *prcView; SHELLVIEWID *pvid;HWND hwndView;};
struct tagCWPRETSTRUCT {LRESULT lResult;LPARAM lParam;WPARAM wParam;DWORD message;HWND hwnd;};
struct IMallocSpyVtbl {HRESULT (*QueryInterface)(IMallocSpy *,  IID *, PVOID *);ULONG (*AddRef)(IMallocSpy *);ULONG (*Release)(IMallocSpy *);ULONG (*PreAlloc)(IMallocSpy *, ULONG);void *(*PostAlloc)(IMallocSpy *, void *);void *(*PreFree)(IMallocSpy *, void *, BOOL);void (*PostFree)(IMallocSpy *, BOOL);ULONG (*PreRealloc)(IMallocSpy *, void *, ULONG, void *);void *(*PostRealloc)(IMallocSpy *, void *, BOOL);void *(*PreGetSize)(IMallocSpy *, void *, BOOL);ULONG (*PostGetSize)(IMallocSpy *, ULONG, BOOL);void *(*PreDidAlloc)(IMallocSpy *, void *, BOOL);int (*PostDidAlloc)(IMallocSpy *, void *, BOOL, int);void (*PreHeapMinimize)(IMallocSpy *);void (*PostHeapMinimize)(IMallocSpy *);};
struct _tagSTACKFRAME {ADDRESS AddrPC;ADDRESS AddrReturn;ADDRESS AddrFrame;ADDRESS AddrStack;LPVOID FuncTableEntry;DWORD Params[4];BOOL Far;BOOL Virtual;DWORD Reserved[3];KDHELP KdHelp;};
struct tagEMRFRAMERGN {EMR emr;RECTL rclBounds;DWORD cbRgnData;DWORD ihBrush;SIZEL szlStroke;BYTE RgnData[1];};
struct tagEMRPOLYDRAW {EMR emr;RECTL rclBounds;DWORD cptl;POINTL aptl[1];BYTE abTypes[1];};
struct tagEXTLOGFONTW {LOGFONTW elfLogFont;WCHAR elfFullName[64];WCHAR elfStyle[32];DWORD elfVersion;DWORD elfStyleSize;DWORD elfMatch;DWORD elfReserved;BYTE elfVendorId[4];DWORD elfCulture;PANOSE elfPanose;};
struct _IMAGE_SYMBOL {union _IMAGE_SYMBOL___D31D1BC08928B4879C9F93D88486FFF4 N;DWORD Value;SHORT SectionNumber;WORD Type;BYTE StorageClass;BYTE NumberOfAuxSymbols;};
struct _STARTUPINFOA {DWORD cb;LPSTR lpReserved;LPSTR lpDesktop;LPSTR lpTitle;DWORD dwX;DWORD dwY;DWORD dwXSize;DWORD dwYSize;DWORD dwXCountChars;DWORD dwYCountChars;DWORD dwFillAttribute;DWORD dwFlags;WORD wShowWindow;WORD cbReserved2;PBYTE lpReserved2;HANDLE hStdInput;HANDLE hStdOutput;HANDLE hStdError;};
struct IROTDataVtbl {HRESULT (*QueryInterface)(IROTData *,  IID *, PVOID *);ULONG (*AddRef)(IROTData *);ULONG (*Release)(IROTData *);HRESULT (*GetComparisonData)(IROTData *, PVOID, ULONG, PULONG);};
struct _DISK_RECORD {LARGE_INTEGER ByteOffset;LARGE_INTEGER StartTime;LARGE_INTEGER EndTime;PVOID VirtualAddress;DWORD NumberOfBytes;BYTE DeviceNumber;BOOLEAN ReadRequest;};
struct _HSE_TF_INFO {PFN_HSE_IO_COMPLETION pfnHseIO;PVOID pContext;HANDLE hFile;LPCSTR pszStatusCode;DWORD BytesToWrite;DWORD Offset;PVOID pHead;DWORD HeadLength;PVOID pTail;DWORD TailLength;DWORD dwFlags;};
struct _JOB_INFO_2A {DWORD JobId;LPSTR pPrinterName;LPSTR pMachineName;LPSTR pUserName;LPSTR pDocument;LPSTR pNotifyName;LPSTR pDatatype;LPSTR pPrintProcessor;LPSTR pParameters;LPSTR pDriverName;LPDEVMODEA pDevMode;LPSTR pStatus;PSECURITY_DESCRIPTOR pSecurityDescriptor;DWORD Status;DWORD Priority;DWORD Position;DWORD StartTime;DWORD UntilTime;DWORD TotalPages;DWORD Size;SYSTEMTIME Submitted;DWORD Time;DWORD PagesPrinted;};
struct _enprotected {NMHDR nmhdr;UINT msg;WPARAM wParam;LPARAM lParam;CHARRANGE chrg;};
struct tagTOOLINFOA {UINT cbSize;UINT uFlags;HWND hwnd;UINT uId;RECT rect;HINSTANCE hinst;LPSTR lpszText;};
typedef UINT (*LPFNDEVMODE)(HWND, HMODULE, LPDEVMODEA, LPSTR, LPSTR, LPDEVMODEA, LPSTR, UINT);
typedef HDDEDATA (*PFNCALLBACK)(UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, DWORD, DWORD);
struct _AppBarData {DWORD cbSize;HWND hWnd;UINT uCallbackMessage;UINT uEdge;RECT rc;LPARAM lParam;};
struct _charformat {UINT cbSize;DWORD dwMask;DWORD dwEffects;LONG yHeight;LONG yOffset;COLORREF crTextColor;BYTE bCharSet;BYTE bPitchAndFamily;char szFaceName[32];};
struct _paraformat {UINT cbSize;DWORD dwMask;WORD wNumbering;WORD wReserved;LONG dxStartIndent;LONG dxRightIndent;LONG dxOffset;WORD wAlignment;SHORT cTabCount;LONG rgxTabs[32];};
typedef LRESULT (*DRIVERPROC)(DWORD, HDRVR, UINT, LPARAM, LPARAM);
typedef HDDEDATA FNCALLBACK(UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, DWORD, DWORD);
typedef BOOL (*DLGPROC)(HWND, UINT, WPARAM, LPARAM);
typedef LRESULT (*WNDPROC)(HWND, UINT, WPARAM, LPARAM);
struct _BC4A2AE7528CDE26EA3193F07B7FB715 {UINT cbSize;HWND hwndOwner;HINSTANCE hInstance;LPCSTR lpszText;LPCSTR lpszCaption;DWORD dwStyle;LPCSTR lpszIcon;DWORD dwContextHelpId;MSGBOXCALLBACK lpfnMsgBoxCallback;DWORD dwLanguageId;};
struct IConnectionPointContainerVtbl {HRESULT (*QueryInterface)(IConnectionPointContainer *,  IID *, PVOID *);ULONG (*AddRef)(IConnectionPointContainer *);ULONG (*Release)(IConnectionPointContainer *);HRESULT (*EnumConnectionPoints)(IConnectionPointContainer *, LPENUMCONNECTIONPOINTS *);HRESULT (*FindConnectionPoint)(IConnectionPointContainer *,  IID *, LPCONNECTIONPOINT *);};
typedef BOOL (*PREAD_PROCESS_MEMORY_ROUTINE)(HANDLE, LPCVOID, LPVOID, DWORD, LPDWORD);
struct IEnumConnectionPointsVtbl {HRESULT (*QueryInterface)(IEnumConnectionPoints *,  IID *, PVOID *);ULONG (*AddRef)(IEnumConnectionPoints *);ULONG (*Release)(IEnumConnectionPoints *);HRESULT (*Next)(IEnumConnectionPoints *, ULONG, LPCONNECTIONPOINT *, ULONG *);HRESULT (*Skip)(IEnumConnectionPoints *, ULONG);HRESULT (*Reset)(IEnumConnectionPoints *);HRESULT (*Clone)(IEnumConnectionPoints *, LPENUMCONNECTIONPOINTS *);};
typedef INT (*LPFN_WSAADDRESSTOSTRINGA)(LPSOCKADDR, DWORD, LPWSAPROTOCOL_INFOA, LPSTR, LPDWORD);
struct IExternalConnectionVtbl {HRESULT (*QueryInterface)(IExternalConnection *,  IID *, PVOID *);ULONG (*AddRef)(IExternalConnection *);ULONG (*Release)(IExternalConnection *);HRESULT (*AddConnection)(IExternalConnection *, DWORD, DWORD);HRESULT (*ReleaseConnection)(IExternalConnection *, DWORD, DWORD, BOOL);};
struct IProgressNotifyVtbl {HRESULT (*QueryInterface)(IProgressNotify *,  IID *, PVOID *);ULONG (*AddRef)(IProgressNotify *);ULONG (*Release)(IProgressNotify *);HRESULT (*OnProgress)(IProgressNotify *, DWORD, DWORD, BOOL, BOOL);};
struct IStdMarshalInfoVtbl {HRESULT (*QueryInterface)(IStdMarshalInfo *,  IID *, PVOID *);ULONG (*AddRef)(IStdMarshalInfo *);ULONG (*Release)(IStdMarshalInfo *);HRESULT (*GetClassForHandler)(IStdMarshalInfo *, DWORD, PVOID, CLSID *);};
struct IPersistFolderVtbl {HRESULT (*QueryInterface)(IPersistFolder *,  IID *, PVOID *);ULONG (*AddRef)(IPersistFolder *);ULONG (*Release)(IPersistFolder *);HRESULT (*GetClassID)(IPersistFolder *, CLSID);HRESULT (*Initialize)(IPersistFolder *, LPCITEMIDLIST);};
struct tagEMRPOLYTEXTOUTA {EMR emr;RECTL rclBounds;DWORD iGraphicsMode;FLOAT exScale;FLOAT eyScale;LONG cStrings;EMRTEXT aemrtext[1];};
struct IClassFactoryVtbl {HRESULT (*QueryInterface)(IClassFactory *,  IID *, PVOID *);ULONG (*AddRef)(IClassFactory *);ULONG (*Release)(IClassFactory *);HRESULT (*CreateInstance)(IClassFactory *, LPUNKNOWN,  IID *, PVOID *);HRESULT (*LockServer)(IClassFactory *, BOOL);};
struct _SHFILEOPSTRUCTA {HWND hwnd;UINT wFunc;LPCSTR pFrom;LPCSTR pTo;FILEOP_FLAGS fFlags;BOOL fAnyOperationsAborted;PVOID hNameMappings;LPCSTR lpszProgressTitle;};
struct tagEMRSTRETCHBLT {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG cxDest;LONG cyDest;DWORD dwRop;LONG xSrc;LONG ySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;LONG cxSrc;LONG cySrc;};
struct IDropSourceVtbl {HRESULT (*QueryInterface)(IDropSource *,  IID *, PVOID *);ULONG (*AddRef)(IDropSource *);ULONG (*Release)(IDropSource *);HRESULT (*QueryContinueDrag)(IDropSource *, BOOL, DWORD);HRESULT (*GiveFeedback)(IDropSource *, DWORD);};
struct _FILEDESCRIPTOR {DWORD dwFlags;CLSID clsid;SIZEL sizel;POINTL pointl;DWORD dwFileAttributes;FILETIME ftCreationTime;FILETIME ftLastAccessTime;FILETIME ftLastWriteTime;DWORD nFileSizeHigh;DWORD nFileSizeLow;CHAR cFileName[260];};
struct IOleWindowVtbl {HRESULT (*QueryInterface)(IOleWindow *,  IID *, PVOID *);ULONG (*AddRef)(IOleWindow *);ULONG (*Release)(IOleWindow *);HRESULT (*GetWindow)(IOleWindow *, HWND *);HRESULT (*ContextSensitiveHelp)(IOleWindow *, BOOL);};
typedef int (*LPFN_WSASENDTO)(SOCKET, LPWSABUF, DWORD, LPDWORD, DWORD,  struct sockaddr *, int, LPWSAOVERLAPPED, LPWSAOVERLAPPED_COMPLETION_ROUTINE);
typedef int (*LPFN_WSAIOCTL)(SOCKET, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD, LPWSAOVERLAPPED, LPWSAOVERLAPPED_COMPLETION_ROUTINE);
struct tagEMRMASKBLT {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG cxDest;LONG cyDest;DWORD dwRop;LONG xSrc;LONG ySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;LONG xMask;LONG yMask;DWORD iUsageMask;DWORD offBmiMask;DWORD cbBmiMask;DWORD offBitsMask;DWORD cbBitsMask;};
typedef int (*LPFN_WSARECV)(SOCKET, LPWSABUF, DWORD, LPDWORD, LPDWORD, LPWSAOVERLAPPED, LPWSAOVERLAPPED_COMPLETION_ROUTINE);
typedef int (*LPFN_WSASEND)(SOCKET, LPWSABUF, DWORD, LPDWORD, DWORD, LPWSAOVERLAPPED, LPWSAOVERLAPPED_COMPLETION_ROUTINE);
struct _charformatw {UINT cbSize;DWORD dwMask;DWORD dwEffects;LONG yHeight;LONG yOffset;COLORREF crTextColor;BYTE bCharSet;BYTE bPitchAndFamily;WCHAR szFaceName[32];};
struct tagEMRBITBLT {EMR emr;RECTL rclBounds;LONG xDest;LONG yDest;LONG cxDest;LONG cyDest;DWORD dwRop;LONG xSrc;LONG ySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;};
struct tagMSG {HWND hwnd;UINT message;WPARAM wParam;LPARAM lParam;DWORD time;POINT pt;};
union tagSTGMEDIUM___796099C3E9457CEE546F4B82888134E5 {HBITMAP hBitmap;PVOID hMetaFilePict;HENHMETAFILE hEnhMetaFile;HGLOBAL hGlobal;LPCSTR lpszFileName;LPSTREAM pstm;LPSTORAGE pstg;};
struct IProvideClassInfo2Vtbl {HRESULT (*QueryInterface)(IProvideClassInfo2 *,  IID *, PVOID *);ULONG (*AddRef)(IProvideClassInfo2 *);ULONG (*Release)(IProvideClassInfo2 *);HRESULT (*GetClassInfoA)(IProvideClassInfo2 *, LPTYPEINFO *);HRESULT (*GetGUID)(IProvideClassInfo2 *, DWORD, GUID *);};
struct IShellPropSheetExtVtbl {HRESULT (*QueryInterface)(IShellPropSheetExt *,  IID *, PVOID *);ULONG (*AddRef)(IShellPropSheetExt *);ULONG (*Release)(IShellPropSheetExt *);HRESULT (*AddPages)(IShellPropSheetExt *, LPFNADDPROPSHEETPAGE, LPARAM);HRESULT (*ReplacePage)(IShellPropSheetExt *, UINT, LPFNADDPROPSHEETPAGE, LPARAM);};
struct IDataAdviseHolderVtbl {HRESULT (*QueryInterface)(IDataAdviseHolder *,  IID *, PVOID *);ULONG (*AddRef)(IDataAdviseHolder *);ULONG (*Release)(IDataAdviseHolder *);HRESULT (*Advise)(IDataAdviseHolder *, IDataObject *, FORMATETC *, DWORD, IAdviseSink *, PDWORD);HRESULT (*Unadvise)(IDataAdviseHolder *, DWORD);HRESULT (*EnumAdvise)(IDataAdviseHolder *, IEnumSTATDATA **);HRESULT (*SendOnDataChange)(IDataAdviseHolder *, IDataObject *, DWORD, DWORD);};
struct IRpcChannelBufferVtbl {HRESULT (*QueryInterface)(IRpcChannelBuffer *,  IID *, PVOID *);ULONG (*AddRef)(IRpcChannelBuffer *);ULONG (*Release)(IRpcChannelBuffer *);HRESULT (*GetBuffer)(IRpcChannelBuffer *, RPCOLEMESSAGE *,  IID *);HRESULT (*SendReceive)(IRpcChannelBuffer *, RPCOLEMESSAGE *, PULONG);HRESULT (*FreeBuffer)(IRpcChannelBuffer *, RPCOLEMESSAGE *);HRESULT (*GetDestCtx)(IRpcChannelBuffer *, PDWORD, PVOID *);HRESULT (*IsConnected)(IRpcChannelBuffer *);};
struct IEnumConnectionsVtbl {HRESULT (*QueryInterface)(IEnumConnections *,  IID *, PVOID *);ULONG (*AddRef)(IEnumConnections *);ULONG (*Release)(IEnumConnections *);HRESULT (*Next)(IEnumConnections *, ULONG, LPCONNECTDATA, PULONG);HRESULT (*Skip)(IEnumConnections *, ULONG);HRESULT (*Reset)(IEnumConnections *);HRESULT (*Clone)(IEnumConnections *, LPENUMCONNECTIONS *);};
struct IPSFactoryBufferVtbl {HRESULT (*QueryInterface)(IPSFactoryBuffer *,  IID *, PVOID *);ULONG (*AddRef)(IPSFactoryBuffer *);ULONG (*Release)(IPSFactoryBuffer *);HRESULT (*CreateProxy)(IPSFactoryBuffer *, LPUNKNOWN,  IID *, LPRPCPROXYBUFFER *, PVOID *);HRESULT (*CreateStub)(IPSFactoryBuffer *,  IID *, LPUNKNOWN, LPRPCSTUBBUFFER *);};
struct tagOLEUIOBJECTPROPSA {DWORD cbStruct;DWORD dwFlags;LPPROPSHEETHEADERA lpPS;DWORD dwObject;LPOLEUIOBJINFOA lpObjInfo;DWORD dwLink;LPOLEUILINKINFOA lpLinkInfo;LPOLEUIGNRLPROPSA lpGP;LPOLEUIVIEWPROPSA lpVP;LPOLEUILINKPROPSA lpLP;};
struct tagOLEUIOBJECTPROPSW {DWORD cbStruct;DWORD dwFlags;LPPROPSHEETHEADERW lpPS;DWORD dwObject;LPOLEUIOBJINFOW lpObjInfo;DWORD dwLink;LPOLEUILINKINFOW lpLinkInfo;LPOLEUIGNRLPROPSW lpGP;LPOLEUIVIEWPROPSW lpVP;LPOLEUILINKPROPSW lpLP;};
struct IClassActivatorVtbl {HRESULT (*QueryInterface)(IClassActivator *,  IID *, PVOID *);ULONG (*AddRef)(IClassActivator *);ULONG (*Release)(IClassActivator *);HRESULT (*GetClassObject)(IClassActivator *,  CLSID *, DWORD, LCID,  IID *, PVOID *);};
struct IPersistStorageVtbl {HRESULT (*QueryInterface)(IPersistStorage *,  IID *, PVOID *);ULONG (*AddRef)(IPersistStorage *);ULONG (*Release)(IPersistStorage *);HRESULT (*GetClassID)(IPersistStorage *, CLSID);HRESULT (*IsDirty)(IPersistStorage *);HRESULT (*InitNew)(IPersistStorage *, LPSTORAGE);HRESULT (*Load)(IPersistStorage *, LPSTORAGE);HRESULT (*Save)(IPersistStorage *, LPSTORAGE, BOOL);HRESULT (*SaveCompleted)(IPersistStorage *, LPSTORAGE);HRESULT (*HandsOffStorage)(IPersistStorage *);};
struct _OUTLINETEXTMETRICA {UINT otmSize;TEXTMETRICA otmTextMetrics;BYTE otmFiller;PANOSE otmPanoseNumber;UINT otmfsSelection;UINT otmfsType;int otmsCharSlopeRise;int otmsCharSlopeRun;int otmItalicAngle;UINT otmEMSquare;int otmAscent;int otmDescent;UINT otmLineGap;UINT otmsCapEmHeight;UINT otmsXHeight;RECT otmrcFontBox;int otmMacAscent;int otmMacDescent;UINT otmMacLineGap;UINT otmusMinimumPPEM;POINT otmptSubscriptSize;POINT otmptSubscriptOffset;POINT otmptSuperscriptSize;POINT otmptSuperscriptOffset;UINT otmsStrikeoutSize;int otmsStrikeoutPosition;int otmsUnderscoreSize;int otmsUnderscorePosition;PSTR otmpFamilyName;PSTR otmpFaceName;PSTR otmpStyleName;PSTR otmpFullName;};
struct _OUTLINETEXTMETRICW {UINT otmSize;TEXTMETRICW otmTextMetrics;BYTE otmFiller;PANOSE otmPanoseNumber;UINT otmfsSelection;UINT otmfsType;int otmsCharSlopeRise;int otmsCharSlopeRun;int otmItalicAngle;UINT otmEMSquare;int otmAscent;int otmDescent;UINT otmLineGap;UINT otmsCapEmHeight;UINT otmsXHeight;RECT otmrcFontBox;int otmMacAscent;int otmMacDescent;UINT otmMacLineGap;UINT otmusMinimumPPEM;POINT otmptSubscriptSize;POINT otmptSubscriptOffset;POINT otmptSuperscriptSize;POINT otmptSuperscriptOffset;UINT otmsStrikeoutSize;int otmsStrikeoutPosition;int otmsUnderscoreSize;int otmsUnderscorePosition;PSTR otmpFamilyName;PSTR otmpFaceName;PSTR otmpStyleName;PSTR otmpFullName;};
struct IFillLockBytesVtbl {HRESULT (*QueryInterface)(IFillLockBytes *,  IID *, PVOID *);ULONG (*AddRef)(IFillLockBytes *);ULONG (*Release)(IFillLockBytes *);HRESULT (*FillAppend)(IFillLockBytes *,  void *, ULONG, PULONG);HRESULT (*FillAt)(IFillLockBytes *, ULARGE_INTEGER,  void *, ULONG, PULONG);HRESULT (*SetFillSize)(IFillLockBytes *, ULARGE_INTEGER);HRESULT (*Terminate)(IFillLockBytes *, BOOL);};
struct IMessageFilterVtbl {HRESULT (*QueryInterface)(IMessageFilter *,  IID *, PVOID *);ULONG (*AddRef)(IMessageFilter *);ULONG (*Release)(IMessageFilter *);DWORD (*HandleInComingCall)(IMessageFilter *, DWORD, HTASK, DWORD, LPINTERFACEINFO);DWORD (*RetryRejectedCall)(IMessageFilter *, HTASK, DWORD, DWORD);DWORD (*MessagePending)(IMessageFilter *, HTASK, DWORD, DWORD);};
struct IPersistStreamVtbl {HRESULT (*QueryInterface)(IPersistStream *,  IID *, PVOID *);ULONG (*AddRef)(IPersistStream *);ULONG (*Release)(IPersistStream *);HRESULT (*GetClassID)(IPersistStream *, CLSID *);HRESULT (*IsDirty)(IPersistStream *);HRESULT (*Load)(IPersistStream *, IStream *);HRESULT (*Save)(IPersistStream *, IStream *, BOOL);HRESULT (*GetSizeMax)(IPersistStream *, PULARGE_INTEGER);};
struct IRpcStubBufferVtbl {HRESULT (*QueryInterface)(IRpcStubBuffer *,  IID *, PVOID *);ULONG (*AddRef)(IRpcStubBuffer *);ULONG (*Release)(IRpcStubBuffer *);HRESULT (*Connect)(IRpcStubBuffer *, LPUNKNOWN);void (*Disconnect)(IRpcStubBuffer *);HRESULT (*Invoke)(IRpcStubBuffer *, RPCOLEMESSAGE *, LPRPCSTUBBUFFER);LPRPCSTUBBUFFER (*IsIIDSupported)(IRpcStubBuffer *,  IID *);ULONG (*CountRefs)(IRpcStubBuffer *);HRESULT (*DebugServerQueryInterface)(IRpcStubBuffer *, PVOID *);HRESULT (*DebugServerRelease)(IRpcStubBuffer *, PVOID);};
struct IShellExtInitVtbl {HRESULT (*QueryInterface)(IShellExtInit *,  IID *, PVOID *);ULONG (*AddRef)(IShellExtInit *);ULONG (*Release)(IShellExtInit *);HRESULT (*Initialize)(IShellExtInit *, LPCITEMIDLIST, LPDATAOBJECT, HKEY);};
struct IChannelHookVtbl {HRESULT (*QueryInterface)(IChannelHook *,  IID *, PVOID *);ULONG (*AddRef)(IChannelHook *);ULONG (*Release)(IChannelHook *);void (*ClientGetSize)(IChannelHook *,  GUID *,  IID *, PULONG);void (*ClientFillBuffer)(IChannelHook *,  GUID *,  IID *, PULONG, PVOID);void (*ClientNotify)(IChannelHook *,  GUID *,  IID *, ULONG, PVOID, DWORD, HRESULT);void (*ServerNotify)(IChannelHook *,  GUID *,  IID *, ULONG, PVOID, DWORD);void (*ServerGetSize)(IChannelHook *,  GUID *,  IID *, HRESULT, PULONG);void (*ServerFillBuffer)(IChannelHook *,  GUID *,  IID *, PULONG, PVOID, HRESULT);};
typedef int (*LPFN_WSARECVFROM)(SOCKET, LPWSABUF, DWORD, LPDWORD, LPDWORD, struct sockaddr *, LPINT, LPWSAOVERLAPPED, LPWSAOVERLAPPED_COMPLETION_ROUTINE);
struct _MIDL_STUB_DESC {void *RpcInterfaceInformation;void *(*pfnAllocate)(unsigned int);void (*pfnFree)(void *);union _MIDL_STUB_DESC___5BCB627D3738D8B5DEACC268C24AE672 IMPLICIT_HANDLE_INFO; NDR_RUNDOWN *apfnNdrRundownRoutines; GENERIC_BINDING_ROUTINE_PAIR *aGenericBindingRoutinePairs; EXPR_EVAL *apfnExprEval; XMIT_ROUTINE_QUINTUPLE *aXmitQuintuple; unsigned char *pFormatTypes;int fCheckBounds;unsigned int Version;MALLOC_FREE_STRUCT *pMallocFreeStruct;int MIDLVersion; COMM_FAULT_OFFSETS *CommFaultOffsets;};
struct IShellIconVtbl {HRESULT (*QueryInterface)(IShellIcon *,  IID *, PVOID *);ULONG (*AddRef)(IShellIcon *);ULONG (*Release)(IShellIcon *);HRESULT (*GetIconOf)(IShellIcon *, LPCITEMIDLIST, UINT, PINT);};
struct _WSAQuerySetA {DWORD dwSize;LPSTR lpszServiceInstanceName;LPGUID lpServiceClassId;LPWSAVERSION lpVersion;LPSTR lpszComment;DWORD dwNameSpace;LPGUID lpNSProviderId;LPSTR lpszContext;DWORD dwNumberOfProtocols;LPAFPROTOCOLS lpafpProtocols;LPSTR lpszQueryString;DWORD dwNumberOfCsAddrs;LPCSADDR_INFO lpcsaBuffer;DWORD dwOutputFlags;LPBLOB lpBlob;};
struct IMarshalVtbl {HRESULT (*QueryInterface)(IMarshal *,  IID *, PVOID *);ULONG (*AddRef)(IMarshal *);ULONG (*Release)(IMarshal *);HRESULT (*GetUnmarshalClass)(IMarshal *,  IID *, DWORD, PVOID, DWORD, CLSID);HRESULT (*GetMarshalSizeMax)(IMarshal *,  IID *, DWORD, PVOID, DWORD, PDWORD);HRESULT (*MarshalInterface)(IMarshal *,  IID *, DWORD, DWORD);HRESULT (*UnmarshalInterface)(IMarshal *, IStream *, void **);HRESULT (*ReleaseMarshalData)(IMarshal *, IStream *);HRESULT (*DisconnectObject)(IMarshal *, DWORD);};
struct _WNDCLASSEXA {UINT cbSize;UINT style;WNDPROC lpfnWndProc;int cbClsExtra;int cbWndExtra;HANDLE hInstance;HICON hIcon;HCURSOR hCursor;HBRUSH hbrBackground;LPCSTR lpszMenuName;LPCSTR lpszClassName;HICON hIconSm;};
struct tagEMRPLGBLT {EMR emr;RECTL rclBounds;POINTL aptlDest[3];LONG xSrc;LONG ySrc;LONG cxSrc;LONG cySrc;XFORM xformSrc;COLORREF crBkColorSrc;DWORD iUsageSrc;DWORD offBmiSrc;DWORD cbBmiSrc;DWORD offBitsSrc;DWORD cbBitsSrc;LONG xMask;LONG yMask;DWORD iUsageMask;DWORD offBmiMask;DWORD cbBmiMask;DWORD offBitsMask;DWORD cbBitsMask;};
struct _browseinfo {HWND hwndOwner;LPCITEMIDLIST pidlRoot;LPSTR pszDisplayName;LPCSTR lpszTitle;UINT ulFlags;BFFCALLBACK lpfn;LPARAM lParam;int iImage;};
struct tagCONVINFO {DWORD cb;DWORD hUser;HCONV hConvPartner;HSZ hszSvcPartner;HSZ hszServiceReq;HSZ hszTopic;HSZ hszItem;UINT wFmt;UINT wType;UINT wStatus;UINT wConvst;UINT wLastError;HCONVLIST hConvList;CONVCONTEXT ConvCtxt;HWND hwnd;HWND hwndPartner;};
struct _WNDCLASSA {UINT style;WNDPROC lpfnWndProc;int cbClsExtra;int cbWndExtra;HANDLE hInstance;HICON hIcon;HCURSOR hCursor;HBRUSH hbrBackground;LPCSTR lpszMenuName;LPCSTR lpszClassName;};
struct tagCCINFOA {CHAR szClass[32];DWORD flOptions;CHAR szDesc[32];UINT cxDefault;UINT cyDefault;DWORD flStyleDefault;DWORD flExtStyleDefault;DWORD flCtrlTypeMask;CHAR szTextDefault[256];INT cStyleFlags;LPCCSTYLEFLAGA aStyleFlags;LPFNCCSTYLEA lpfnStyle;LPFNCCSIZETOTEXTA lpfnSizeToText;DWORD dwReserved1;DWORD dwReserved2;};
struct _reobject {DWORD cbStruct;LONG cp;CLSID clsid;LPOLEOBJECT poleobj;LPSTORAGE pstg;LPOLECLIENTSITE polesite;SIZEL sizel;DWORD dvaspect;DWORD dwFlags;DWORD dwUser;};
union _wireSAFEARRAY_UNION___872DEB83A733539900946FC069853D23 {SAFEARR_BSTR BstrStr;SAFEARR_UNKNOWN UnknownStr;SAFEARR_DISPATCH DispatchStr;SAFEARR_VARIANT VariantStr;BYTE_SIZEDARR ByteStr;WORD_SIZEDARR WordStr;DWORD_SIZEDARR LongStr;HYPER_SIZEDARR HyperStr;};
struct IUniformResourceLocatorVtbl {HRESULT (*QueryInterface)(IUniformResourceLocator *,  IID *, PVOID *);ULONG (*AddRef)(IUniformResourceLocator *);ULONG (*Release)(IUniformResourceLocator *);HRESULT (*SetURL)(IUniformResourceLocator *, PCSTR, DWORD);HRESULT (*GetURL)(IUniformResourceLocator *, PSTR *);HRESULT (*InvokeCommand)(IUniformResourceLocator *, PURLINVOKECOMMANDINFO);};
struct _EXTENSION_CONTROL_BLOCK {DWORD cbSize;DWORD dwVersion;HCONN ConnID;DWORD dwHttpStatusCode;CHAR lpszLogData[80];LPSTR lpszMethod;LPSTR lpszQueryString;LPSTR lpszPathInfo;LPSTR lpszPathTranslated;DWORD cbTotalBytes;DWORD cbAvailable;LPBYTE lpbData;LPSTR lpszContentType;BOOL (*GetServerVariable)(HCONN, LPSTR, LPVOID, LPDWORD);BOOL (*WriteClient)(HCONN, LPVOID, LPDWORD, DWORD);BOOL (*ReadClient)(HCONN, LPVOID, LPDWORD);BOOL (*ServerSupportFunction)(HCONN, DWORD, LPVOID, LPDWORD, LPDWORD);};
struct IPropertyPageSiteVtbl {HRESULT (*QueryInterface)(IPropertyPageSite *,  IID *, PVOID *);ULONG (*AddRef)(IPropertyPageSite *);ULONG (*Release)(IPropertyPageSite *);HRESULT (*OnStatusChange)(IPropertyPageSite *, DWORD);HRESULT (*GetLocaleID)(IPropertyPageSite *, LCID *);HRESULT (*GetPageContainer)(IPropertyPageSite *, LPUNKNOWN *);HRESULT (*TranslateAcceleratorA)(IPropertyPageSite *, LPMSG);};
struct IConnectionPointVtbl {HRESULT (*QueryInterface)(IConnectionPoint *,  IID *, PVOID *);ULONG (*AddRef)(IConnectionPoint *);ULONG (*Release)(IConnectionPoint *);HRESULT (*GetConnectionInterface)(IConnectionPoint *, IID *);HRESULT (*GetConnectionPointContainer)(IConnectionPoint *, IConnectionPointContainer **);HRESULT (*Advise)(IConnectionPoint *, LPUNKNOWN, PDWORD);HRESULT (*Unadvise)(IConnectionPoint *, DWORD);HRESULT (*EnumConnections)(IConnectionPoint *, LPENUMCONNECTIONS *);};
struct IOleClientSiteVtbl {HRESULT (*QueryInterface)(IOleClientSite *,  IID *, PVOID *);ULONG (*AddRef)(IOleClientSite *);ULONG (*Release)(IOleClientSite *);HRESULT (*SaveObject)(IOleClientSite *);HRESULT (*GetMoniker)(IOleClientSite *, DWORD, DWORD, LPMONIKER *);HRESULT (*GetContainer)(IOleClientSite *, LPOLECONTAINER *);HRESULT (*ShowObject)(IOleClientSite *);HRESULT (*OnShowWindow)(IOleClientSite *, BOOL);HRESULT (*RequestNewObjectLayout)(IOleClientSite *);};
struct _SHELLEXECUTEINFOA {DWORD cbSize;ULONG fMask;HWND hwnd;LPCSTR lpVerb;LPCSTR lpFile;LPCSTR lpParameters;LPCSTR lpDirectory;int nShow;HINSTANCE hInstApp;PVOID lpIDList;LPCSTR lpClass;HKEY hkeyClass;DWORD dwHotKey;HANDLE hIcon;HANDLE hProcess;};
struct tagOLEUIEDITLINKSA {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;LPOLEUILINKCONTAINERA lpOleUILinkContainer;};
struct IAdviseSink2Vtbl {HRESULT (*QueryInterface)(IAdviseSink2 *,  IID *, PVOID *);ULONG (*AddRef)(IAdviseSink2 *);ULONG (*Release)(IAdviseSink2 *);void (*OnDataChange)(IAdviseSink2 *, FORMATETC *, STGMEDIUM *);void (*OnViewChange)(IAdviseSink2 *, DWORD, LONG);void (*OnRename)(IAdviseSink2 *, IMoniker *);void (*OnSave)(IAdviseSink2 *);void (*OnClose)(IAdviseSink2 *);void (*OnLinkSrcChange)(IAdviseSink2 *, IMoniker *);};
struct IAdviseSinkVtbl {HRESULT (*QueryInterface)(IAdviseSink *,  IID *, PVOID *);ULONG (*AddRef)(IAdviseSink *);ULONG (*Release)(IAdviseSink *);void (*OnDataChange)(IAdviseSink *, FORMATETC *, STGMEDIUM *);void (*OnViewChange)(IAdviseSink *, DWORD, LONG);void (*OnRename)(IAdviseSink *, IMoniker *);void (*OnSave)(IAdviseSink *);void (*OnClose)(IAdviseSink *);};
struct IDropTargetVtbl {HRESULT (*QueryInterface)(IDropTarget *,  IID *, PVOID *);ULONG (*AddRef)(IDropTarget *);ULONG (*Release)(IDropTarget *);HRESULT (*DragEnter)(IDropTarget *, LPDATAOBJECT, DWORD, POINTL, PDWORD);HRESULT (*DragOver)(IDropTarget *, DWORD, POINTL, PDWORD);HRESULT (*DragLeave)(IDropTarget *);HRESULT (*Drop)(IDropTarget *, LPDATAOBJECT, DWORD, POINTL, PDWORD);};
struct IFileViewerVtbl {HRESULT (*QueryInterface)(IFileViewer *,  IID *, PVOID *);ULONG (*AddRef)(IFileViewer *);ULONG (*Release)(IFileViewer *);HRESULT (*ShowInitialize)(IFileViewer *, LPFILEVIEWERSITE);HRESULT (*Show)(IFileViewer *, LPFVSHOWINFO);HRESULT (*PrintTo)(IFileViewer *, LPSTR, BOOL);};
struct IOleControlVtbl {HRESULT (*QueryInterface)(IOleControl *,  IID *, PVOID *);ULONG (*AddRef)(IOleControl *);ULONG (*Release)(IOleControl *);HRESULT (*GetControlInfo)(IOleControl *, LPCONTROLINFO);HRESULT (*OnMnemonic)(IOleControl *, LPMSG);HRESULT (*OnAmbientPropertyChange)(IOleControl *, DISPID);HRESULT (*FreezeEvents)(IOleControl *, BOOL);};
struct ILockBytesVtbl {HRESULT (*QueryInterface)(ILockBytes *,  IID *, PVOID *);ULONG (*AddRef)(ILockBytes *);ULONG (*Release)(ILockBytes *);HRESULT (*ReadAt)(ILockBytes *, ULARGE_INTEGER, PVOID, ULONG, ULONG *);HRESULT (*WriteAt)(ILockBytes *, ULARGE_INTEGER, PCVOID, ULONG, ULONG *);HRESULT (*Flush)(ILockBytes *);HRESULT (*SetSize)(ILockBytes *, ULARGE_INTEGER);HRESULT (*LockRegion)(ILockBytes *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);HRESULT (*UnlockRegion)(ILockBytes *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);HRESULT (*Stat)(ILockBytes *, STATSTG *, DWORD);};
struct ICopyHookVtbl {HRESULT (*QueryInterface)(ICopyHook *,  IID *, PVOID *);ULONG (*AddRef)(ICopyHook *);ULONG (*Release)(ICopyHook *);UINT (*CopyCallback)(ICopyHook *, HWND, UINT, UINT, LPCSTR, DWORD, LPCSTR, DWORD);};
struct _LOADED_IMAGE {LPSTR ModuleName;HANDLE hFile;PUCHAR MappedAddress;PIMAGE_NT_HEADERS FileHeader;PIMAGE_SECTION_HEADER LastRvaSection;ULONG NumberOfSections;PIMAGE_SECTION_HEADER Sections;ULONG Characteristics;BOOLEAN fSystemImage;BOOLEAN fDOSImage;LIST_ENTRY Links;ULONG SizeOfImage;};
struct _charformat2a {UINT cbSize;DWORD dwMask;DWORD dwEffects;LONG yHeight;LONG yOffset;COLORREF crTextColor;BYTE bCharSet;BYTE bPitchAndFamily;char szFaceName[32];WORD wWeight;SHORT sSpacing;COLORREF crBackColor;LCID lcid;DWORD dwReserved;SHORT sStyle;WORD wKerning;BYTE bUnderlineType;BYTE bAnimation;BYTE bRevAuthor;};
struct tagOLEUIBUSYA {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;HTASK hTask;HWND *lphWndDialog;};
union _DEBUG_EVENT___1CA59A7E570F154F98F56770E4FE79B4 {EXCEPTION_DEBUG_INFO Exception;CREATE_THREAD_DEBUG_INFO CreateThread;CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;EXIT_THREAD_DEBUG_INFO ExitThread;EXIT_PROCESS_DEBUG_INFO ExitProcess;LOAD_DLL_DEBUG_INFO LoadDll;UNLOAD_DLL_DEBUG_INFO UnloadDll;OUTPUT_DEBUG_STRING_INFO DebugString;RIP_INFO RipInfo;};
struct IOleInPlaceActiveObjectVtbl {HRESULT (*QueryInterface)(IOleInPlaceActiveObject *,  IID *, PVOID *);ULONG (*AddRef)(IOleInPlaceActiveObject *);ULONG (*Release)(IOleInPlaceActiveObject *);HRESULT (*GetWindow)(IOleInPlaceActiveObject *, HWND *);HRESULT (*ContextSensitiveHelp)(IOleInPlaceActiveObject *, BOOL);HRESULT (*TranslateAcceleratorA)(IOleInPlaceActiveObject *, LPMSG);HRESULT (*OnFrameWindowActivate)(IOleInPlaceActiveObject *, BOOL);HRESULT (*OnDocWindowActivate)(IOleInPlaceActiveObject *, BOOL);HRESULT (*ResizeBorder)(IOleInPlaceActiveObject *, LPCRECT, LPOLEINPLACEUIWINDOW, BOOL);HRESULT (*EnableModeless)(IOleInPlaceActiveObject *, BOOL);};
struct IOleUILinkContainerAVtbl {HRESULT (*QueryInterface)(IOleUILinkContainerA *,  IID *, PVOID *);ULONG (*AddRef)(IOleUILinkContainerA *);ULONG (*Release)(IOleUILinkContainerA *);DWORD (*GetNextLink)(IOleUILinkContainerA *, DWORD);HRESULT (*SetLinkUpdateOptions)(IOleUILinkContainerA *, DWORD, DWORD);HRESULT (*GetLinkUpdateOptions)(IOleUILinkContainerA *, DWORD, PDWORD);HRESULT (*SetLinkSource)(IOleUILinkContainerA *, DWORD, LPSTR, ULONG, PULONG, BOOL);HRESULT (*GetLinkSource)(IOleUILinkContainerA *, DWORD, LPSTR *, PULONG, LPSTR *, LPSTR *, BOOL *, BOOL *);HRESULT (*OpenLinkSource)(IOleUILinkContainerA *, DWORD);HRESULT (*UpdateLink)(IOleUILinkContainerA *, DWORD, BOOL, BOOL);HRESULT (*CancelLink)(IOleUILinkContainerA *, DWORD);};
struct IRunningObjectTableVtbl {HRESULT (*QueryInterface)(IRunningObjectTable *,  IID *, PVOID *);ULONG (*AddRef)(IRunningObjectTable *);ULONG (*Release)(IRunningObjectTable *);HRESULT (*Register)(IRunningObjectTable *, LPUNKNOWN, LPMONIKER, PDWORD);HRESULT (*Revoke)(IRunningObjectTable *, DWORD);HRESULT (*IsRunning)(IRunningObjectTable *, LPMONIKER);HRESULT (*GetObjectA)(IRunningObjectTable *, LPMONIKER, LPUNKNOWN *);HRESULT (*NoteChangeTime)(IRunningObjectTable *, DWORD, LPFILETIME);HRESULT (*GetTimeOfLastChange)(IRunningObjectTable *, LPMONIKER, LPFILETIME);HRESULT (*EnumRunning)(IRunningObjectTable *, IEnumMoniker **);};
struct IOleAdviseHolderVtbl {HRESULT (*QueryInterface)(IOleAdviseHolder *,  IID *, PVOID *);ULONG (*AddRef)(IOleAdviseHolder *);ULONG (*Release)(IOleAdviseHolder *);HRESULT (*Advise)(IOleAdviseHolder *, LPADVISESINK, PDWORD);HRESULT (*Unadvise)(IOleAdviseHolder *, DWORD);HRESULT (*EnumAdvise)(IOleAdviseHolder *, LPENUMSTATDATA *);HRESULT (*SendOnRename)(IOleAdviseHolder *, LPMONIKER);HRESULT (*SendOnSave)(IOleAdviseHolder *);HRESULT (*SendOnClose)(IOleAdviseHolder *);};
struct IOleUILinkInfoAVtbl {HRESULT (*QueryInterface)(IOleUILinkInfoA *,  IID *, PVOID *);ULONG (*AddRef)(IOleUILinkInfoA *);ULONG (*Release)(IOleUILinkInfoA *);DWORD (*GetNextLink)(IOleUILinkInfoA *, DWORD);HRESULT (*SetLinkUpdateOptions)(IOleUILinkInfoA *, DWORD, DWORD);HRESULT (*GetLinkUpdateOptions)(IOleUILinkInfoA *, DWORD, DWORD *);HRESULT (*SetLinkSource)(IOleUILinkInfoA *, DWORD, LPSTR, ULONG, PULONG, BOOL);HRESULT (*GetLinkSource)(IOleUILinkInfoA *, DWORD, LPSTR *, PULONG, LPSTR *, LPSTR *, BOOL *, BOOL *);HRESULT (*OpenLinkSource)(IOleUILinkInfoA *, DWORD);HRESULT (*UpdateLink)(IOleUILinkInfoA *, DWORD, BOOL, BOOL);HRESULT (*CancelLink)(IOleUILinkInfoA *, DWORD);HRESULT (*GetLastUpdate)(IOleUILinkInfoA *, DWORD, FILETIME *);};
struct _PROPSHEETHEADERA {DWORD dwSize;DWORD dwFlags;HWND hwndParent;HINSTANCE hInstance;union _PROPSHEETHEADERA___E1AF9326B92748E8DAFEF2F13D81386D u;LPCSTR pszCaption;UINT nPages;union _PROPSHEETHEADERA___B2BC7FD01B1A93973E79FDE746C43987 u2;union _PROPSHEETHEADERA___FF46AEFBA3346A074103206F902E6DF5 u3;PFNPROPSHEETCALLBACK pfnCallback;};
struct IContextMenuVtbl {HRESULT (*QueryInterface)(IContextMenu *,  IID *, PVOID *);ULONG (*AddRef)(IContextMenu *);ULONG (*Release)(IContextMenu *);HRESULT (*QueryContextMenu)(IContextMenu *, HMENU, UINT, UINT, UINT, UINT);HRESULT (*InvokeCommand)(IContextMenu *, LPCMINVOKECOMMANDINFO);HRESULT (*GetCommandString)(IContextMenu *, UINT, UINT, PUINT, LPSTR, UINT);};
struct IExtractIconVtbl {HRESULT (*QueryInterface)(IExtractIcon *,  IID *, PVOID *);ULONG (*AddRef)(IExtractIcon *);ULONG (*Release)(IExtractIcon *);HRESULT (*GetIconLocation)(IExtractIcon *, UINT, LPSTR, UINT, int *, PUINT);HRESULT (*Extract)(IExtractIcon *, LPCSTR, UINT, HICON *, HICON *, UINT);};
struct IDataObjectVtbl {HRESULT (*QueryInterface)(IDataObject *,  IID *, PVOID *);ULONG (*AddRef)(IDataObject *);ULONG (*Release)(IDataObject *);HRESULT (*GetData)(IDataObject *, FORMATETC *, STGMEDIUM *);HRESULT (*GetDataHere)(IDataObject *, FORMATETC *, STGMEDIUM *);HRESULT (*QueryGetData)(IDataObject *, FORMATETC *);HRESULT (*GetCanonicalFormatEtc)(IDataObject *, FORMATETC *, FORMATETC *);HRESULT (*SetData)(IDataObject *, FORMATETC *, STGMEDIUM *, BOOL);HRESULT (*EnumFormatEtc)(IDataObject *, DWORD, IEnumFORMATETC **);HRESULT (*DAdvise)(IDataObject *, FORMATETC *, DWORD, IAdviseSink *, PDWORD);HRESULT (*DUnadvise)(IDataObject *, DWORD);HRESULT (*EnumDAdvise)(IDataObject *, IEnumSTATDATA **);};
struct _PROPSHEETPAGEA {DWORD dwSize;DWORD dwFlags;HINSTANCE hInstance;union _PROPSHEETPAGEA___55841DA2EA6EA673F6C61AA531495E56 u;union _PROPSHEETPAGEA___E1AF9326B92748E8DAFEF2F13D81386D u2;LPCSTR pszTitle;DLGPROC pfnDlgProc;LPARAM lParam;UINT (*pfnCallback)(HWND, UINT, struct _PROPSHEETPAGEA *);UINT *pcRefParent;};
struct _charformat2w {UINT cbSize;DWORD dwMask;DWORD dwEffects;LONG yHeight;LONG yOffset;COLORREF crTextColor;BYTE bCharSet;BYTE bPitchAndFamily;WCHAR szFaceName[32];WORD wWeight;SHORT sSpacing;COLORREF crBackColor;LCID lcid;DWORD dwReserved;SHORT sStyle;WORD wKerning;BYTE bUnderlineType;BYTE bAnimation;BYTE bRevAuthor;};
struct IStreamVtbl {HRESULT (*QueryInterface)(IStream *,  IID *, PVOID *);ULONG (*AddRef)(IStream *);ULONG (*Release)(IStream *);HRESULT (*Read)(IStream *, void *, ULONG, ULONG *);HRESULT (*Write)(IStream *,  void *, ULONG, ULONG *);HRESULT (*Seek)(IStream *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);HRESULT (*SetSize)(IStream *, ULARGE_INTEGER);HRESULT (*CopyTo)(IStream *, IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);HRESULT (*Commit)(IStream *, DWORD);HRESULT (*Revert)(IStream *);HRESULT (*LockRegion)(IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);HRESULT (*UnlockRegion)(IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);HRESULT (*Stat)(IStream *, STATSTG *, DWORD);HRESULT (*Clone)(IStream *, LPSTREAM *);};
struct IOleControlSiteVtbl {HRESULT (*QueryInterface)(IOleControlSite *,  IID *, PVOID *);ULONG (*AddRef)(IOleControlSite *);ULONG (*Release)(IOleControlSite *);HRESULT (*OnControlInfoChanged)(IOleControlSite *);HRESULT (*LockInPlaceActive)(IOleControlSite *, BOOL);HRESULT (*GetExtendedControl)(IOleControlSite *, LPDISPATCH *);HRESULT (*TransformCoords)(IOleControlSite *, POINTL *, POINTF *, DWORD);HRESULT (*TranslateAcceleratorA)(IOleControlSite *, LPMSG, DWORD);HRESULT (*OnFocus)(IOleControlSite *, BOOL);HRESULT (*ShowPropertyFrame)(IOleControlSite *);};
struct tagOLEUICHANGEICONA {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;HGLOBAL hMetaPict;CLSID clsid;CHAR szIconExe[260];int cchIconExe;};
struct stat {__dev_t st_dev;unsigned short __pad1;__ino_t st_ino;__mode_t st_mode;__nlink_t st_nlink;__uid_t st_uid;__gid_t st_gid;__dev_t st_rdev;unsigned short __pad2;__off_t st_size;__blksize_t st_blksize;__blkcnt_t st_blocks;struct timespec st_atim;struct timespec st_mtim;struct timespec st_ctim;unsigned int __unused4;unsigned int __unused5;};
struct _IMAGE_DEBUG_INFORMATION {LIST_ENTRY List;DWORD Size;PVOID MappedBase;USHORT Machine;USHORT Characteristics;DWORD CheckSum;DWORD ImageBase;DWORD SizeOfImage;DWORD NumberOfSections;PIMAGE_SECTION_HEADER Sections;DWORD ExportedNamesSize;LPSTR ExportedNames;DWORD NumberOfFunctionTableEntries;PIMAGE_FUNCTION_ENTRY FunctionTableEntries;DWORD LowestFunctionStartingAddress;DWORD HighestFunctionEndingAddress;DWORD NumberOfFpoTableEntries;PFPO_DATA FpoTableEntries;DWORD SizeOfCoffSymbols;PIMAGE_COFF_SYMBOLS_HEADER CoffSymbols;DWORD SizeOfCodeViewSymbols;PVOID CodeViewSymbols;LPSTR ImageFilePath;LPSTR ImageFileName;LPSTR DebugFilePath;DWORD TimeDateStamp;BOOL RomImage;PIMAGE_DEBUG_DIRECTORY DebugDirectory;DWORD NumberOfDebugDirectories;DWORD Reserved[3];};
struct tagOLEUICHANGESOURCEA {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;OPENFILENAMEA *lpOFN;DWORD dwReserved1[4];LPOLEUILINKCONTAINERA lpOleUILinkContainer;DWORD dwLink;LPSTR lpszDisplayName;ULONG nFileLength;LPSTR lpszFrom;LPSTR lpszTo;};
struct ISimpleFrameSiteVtbl {HRESULT (*QueryInterface)(ISimpleFrameSite *,  IID *, PVOID *);ULONG (*AddRef)(ISimpleFrameSite *);ULONG (*Release)(ISimpleFrameSite *);HRESULT (*PreMessageFilter)(ISimpleFrameSite *, HWND, UINT, WPARAM, LPARAM, LRESULT *, PDWORD);HRESULT (*PostMessageFilter)(ISimpleFrameSite *, HWND, UINT, WPARAM, LPARAM, LRESULT *, DWORD);};
struct IContextMenu2Vtbl {HRESULT (*QueryInterface)(IContextMenu2 *,  IID *, PVOID *);ULONG (*AddRef)(IContextMenu2 *);ULONG (*Release)(IContextMenu2 *);HRESULT (*QueryContextMenu)(IContextMenu2 *, HMENU, UINT, UINT, UINT, UINT);HRESULT (*HandleMenuMsg)(IContextMenu2 *, UINT, WPARAM, LPARAM);HRESULT (*InvokeCommand)(IContextMenu2 *, LPCMINVOKECOMMANDINFO);HRESULT (*GetCommandString)(IContextMenu2 *, UINT, UINT, PUINT, LPSTR, UINT);};
struct IViewObjectVtbl {HRESULT (*QueryInterface)(IViewObject *,  IID *, PVOID *);ULONG (*AddRef)(IViewObject *);ULONG (*Release)(IViewObject *);HRESULT (*Draw)(IViewObject *, DWORD, LONG, PVOID, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, __IView_pfncont pfnContinue, DWORD);HRESULT (*GetColorSet)(IViewObject *, DWORD, LONG, PVOID, DVTARGETDEVICE *, HDC, LPLOGPALETTE *);HRESULT (*Freeze)(IViewObject *, DWORD, LONG, PVOID, PDWORD);HRESULT (*Unfreeze)(IViewObject *, DWORD);HRESULT (*SetAdvise)(IViewObject *, DWORD, DWORD, IAdviseSink *);HRESULT (*GetAdvise)(IViewObject *, PDWORD, PDWORD, IAdviseSink **);};
struct IViewObject2Vtbl {HRESULT (*QueryInterface)(IViewObject2 *,  IID *, PVOID *);ULONG (*AddRef)(IViewObject2 *);ULONG (*Release)(IViewObject2 *);HRESULT (*Draw)(IViewObject2 *, DWORD, LONG, PVOID, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, __IView_pfncont pfnContinue, DWORD);HRESULT (*GetColorSet)(IViewObject2 *, DWORD, LONG, PVOID, DVTARGETDEVICE *, HDC, LPLOGPALETTE *);HRESULT (*Freeze)(IViewObject2 *, DWORD, LONG, PVOID, PDWORD);HRESULT (*Unfreeze)(IViewObject2 *, DWORD);HRESULT (*SetAdvise)(IViewObject2 *, DWORD, DWORD, IAdviseSink *);HRESULT (*GetAdvise)(IViewObject2 *, PDWORD, PDWORD, IAdviseSink **);HRESULT (*GetExtent)(IViewObject2 *, DWORD, DWORD, DVTARGETDEVICE *, LPSIZEL);};
struct IShellLinkAVtbl {HRESULT (*QueryInterface)(IShellLinkA *,  IID *, PVOID *);ULONG (*AddRef)(IShellLinkA *);ULONG (*Release)(IShellLinkA *);HRESULT (*GetPath)(IShellLinkA *, LPSTR, int, WIN32_FIND_DATAA *, DWORD);HRESULT (*GetIDList)(IShellLinkA *, LPITEMIDLIST *);HRESULT (*SetIDList)(IShellLinkA *, LPCITEMIDLIST);HRESULT (*GetDescription)(IShellLinkA *, LPSTR, int);HRESULT (*SetDescription)(IShellLinkA *, LPCSTR);HRESULT (*GetWorkingDirectory)(IShellLinkA *, LPSTR, int);HRESULT (*SetWorkingDirectory)(IShellLinkA *, LPCSTR);HRESULT (*GetArguments)(IShellLinkA *, LPSTR, int);HRESULT (*SetArguments)(IShellLinkA *, LPCSTR);HRESULT (*GetHotkey)(IShellLinkA *, PWORD);HRESULT (*SetHotkey)(IShellLinkA *, WORD);HRESULT (*GetShowCmd)(IShellLinkA *, int *);HRESULT (*SetShowCmd)(IShellLinkA *, int);HRESULT (*GetIconLocation)(IShellLinkA *, LPSTR, int, int *);HRESULT (*SetIconLocation)(IShellLinkA *, LPCSTR, int);HRESULT (*SetRelativePath)(IShellLinkA *, LPCSTR, DWORD);HRESULT (*Resolve)(IShellLinkA *, HWND, DWORD);HRESULT (*SetPath)(IShellLinkA *, LPCSTR);};
struct IPictureVtbl {HRESULT (*QueryInterface)(IPicture *,  IID *, PVOID *);ULONG (*AddRef)(IPicture *);ULONG (*Release)(IPicture *);HRESULT (*get_Handle)(IPicture *, OLE_HANDLE *);HRESULT (*get_hPal)(IPicture *, OLE_HANDLE *);HRESULT (*get_Type)(IPicture *, short *);HRESULT (*get_Width)(IPicture *, OLE_XSIZE_HIMETRIC *);HRESULT (*get_Height)(IPicture *, OLE_YSIZE_HIMETRIC *);HRESULT (*Render)(IPicture *, HDC, int, int, int, int, OLE_XPOS_HIMETRIC, OLE_YPOS_HIMETRIC, OLE_XSIZE_HIMETRIC, OLE_YSIZE_HIMETRIC, LPCRECT);HRESULT (*set_hPal)(IPicture *, OLE_HANDLE);HRESULT (*get_CurDC)(IPicture *, HDC *);HRESULT (*SelectPicture)(IPicture *, HDC, HDC *, OLE_HANDLE *);HRESULT (*get_KeepOriginalFormat)(IPicture *, BOOL *);HRESULT (*put_KeepOriginalFormat)(IPicture *, BOOL);HRESULT (*PictureChanged)(IPicture *);HRESULT (*SaveAsFile)(IPicture *, LPSTREAM, BOOL, LONG *);HRESULT (*get_Attributes)(IPicture *, PDWORD);};
struct IRichEditOleVtbl {HRESULT (*QueryInterface)(IRichEditOle *,  IID *, PVOID *);ULONG (*AddRef)(IRichEditOle *);ULONG (*Release)(IRichEditOle *);HRESULT (*GetClientSite)(IRichEditOle *, LPOLECLIENTSITE *);LONG (*GetObjectCount)(IRichEditOle *);LONG (*GetLinkCount)(IRichEditOle *);HRESULT (*GetObjectA)(IRichEditOle *, LONG, REOBJECT *, DWORD);HRESULT (*InsertObject)(IRichEditOle *, REOBJECT *);HRESULT (*ConvertObject)(IRichEditOle *, LONG,  CLSID *, LPCSTR);HRESULT (*ActivateAs)(IRichEditOle *,  CLSID *,  CLSID *);HRESULT (*SetHostNames)(IRichEditOle *, LPCSTR, LPCSTR);HRESULT (*SetLinkAvailable)(IRichEditOle *, LONG, BOOL);HRESULT (*SetDvaspect)(IRichEditOle *, LONG, DWORD);HRESULT (*HandsOffStorage)(IRichEditOle *, LONG);HRESULT (*SaveCompleted)(IRichEditOle *, LONG, LPSTORAGE);HRESULT (*InPlaceDeactivate)(IRichEditOle *);HRESULT (*ContextSensitiveHelp)(IRichEditOle *, BOOL);HRESULT (*GetClipboardData)(IRichEditOle *, CHARRANGE *, DWORD, LPDATAOBJECT *);HRESULT (*ImportDataObject)(IRichEditOle *, LPDATAOBJECT, CLIPFORMAT, HGLOBAL);};
struct IShellViewVtbl {HRESULT (*QueryInterface)(IShellView *,  IID *, PVOID *);ULONG (*AddRef)(IShellView *);ULONG (*Release)(IShellView *);HRESULT (*GetWindow)(IShellView *, HWND *);HRESULT (*ContextSensitiveHelp)(IShellView *, BOOL);HRESULT (*TranslateAcceleratorA)(IShellView *, LPMSG);HRESULT (*EnableModeless)(IShellView *, BOOL);HRESULT (*UIActivate)(IShellView *, UINT);HRESULT (*Refresh)(IShellView *);HRESULT (*CreateViewWindow)(IShellView *, IShellView *, LPCFOLDERSETTINGS, LPSHELLBROWSER, RECT *, HWND *);HRESULT (*DestroyViewWindow)(IShellView *);HRESULT (*GetCurrentInfo)(IShellView *, LPFOLDERSETTINGS);HRESULT (*AddPropertySheetPages)(IShellView *, DWORD, LPFNADDPROPSHEETPAGE, LPARAM);HRESULT (*SaveViewState)(IShellView *);HRESULT (*SelectItem)(IShellView *, LPCITEMIDLIST, UINT);HRESULT (*GetItemObject)(IShellView *, UINT,  IID *, PVOID *);};
union _1CF5A01E195BE25BEDA13B6A0EE28B07___CA6E005D0CEB4AD2B9A93DDD4A619B56 {GOPHER_ADMIN_ATTRIBUTE_TYPE Admin;GOPHER_MOD_DATE_ATTRIBUTE_TYPE ModDate;GOPHER_TTL_ATTRIBUTE_TYPE Ttl;GOPHER_SCORE_ATTRIBUTE_TYPE Score;GOPHER_SCORE_RANGE_ATTRIBUTE_TYPE ScoreRange;GOPHER_SITE_ATTRIBUTE_TYPE Site;GOPHER_ORGANIZATION_ATTRIBUTE_TYPE Organization;GOPHER_LOCATION_ATTRIBUTE_TYPE Location;GOPHER_GEOGRAPHICAL_LOCATION_ATTRIBUTE_TYPE GeographicalLocation;GOPHER_TIMEZONE_ATTRIBUTE_TYPE TimeZone;GOPHER_PROVIDER_ATTRIBUTE_TYPE Provider;GOPHER_VERSION_ATTRIBUTE_TYPE Version;GOPHER_ABSTRACT_ATTRIBUTE_TYPE Abstract;GOPHER_VIEW_ATTRIBUTE_TYPE View;GOPHER_VERONICA_ATTRIBUTE_TYPE Veronica;GOPHER_ASK_ATTRIBUTE_TYPE Ask;GOPHER_UNKNOWN_ATTRIBUTE_TYPE Unknown;};
union _wireVARIANT___3390C37F64321D49999A8BAD1DE75787 {LONG lVal;BYTE bVal;SHORT iVal;FLOAT fltVal;DOUBLE dblVal;VARIANT_BOOL boolVal;SCODE scode;CY cyVal;DATE date;wireBSTR bstrVal;IUnknown *punkVal;LPDISPATCH pdispVal;wireSAFEARRAY parray;BYTE *pbVal;SHORT *piVal;LONG *plVal;FLOAT *pfltVal;DOUBLE *pdblVal;VARIANT_BOOL *pboolVal;SCODE *pscode;CY *pcyVal;DATE *pdate;wireBSTR *pbstrVal;IUnknown **ppunkVal;LPDISPATCH *ppdispVal;wireSAFEARRAY *pparray;struct _wireVARIANT *pvarVal;CHAR cVal;USHORT uiVal;ULONG ulVal;INT intVal;UINT uintVal;DECIMAL decVal;DECIMAL *pdecVal;CHAR *pcVal;USHORT *puiVal;ULONG *pulVal;INT *pintVal;UINT *puintVal;};
struct IShellView2Vtbl {HRESULT (*QueryInterface)(IShellView2 *,  IID *, PVOID *);ULONG (*AddRef)(IShellView2 *);ULONG (*Release)(IShellView2 *);HRESULT (*GetWindow)(IShellView2 *, HWND *);HRESULT (*ContextSensitiveHelp)(IShellView2 *, BOOL);HRESULT (*TranslateAcceleratorA)(IShellView2 *, LPMSG);HRESULT (*EnableModeless)(IShellView2 *, BOOL);HRESULT (*UIActivate)(IShellView2 *, UINT);HRESULT (*Refresh)(IShellView2 *);HRESULT (*CreateViewWindow)(IShellView2 *, IShellView *, LPCFOLDERSETTINGS, LPSHELLBROWSER, RECT *, HWND *);HRESULT (*DestroyViewWindow)(IShellView2 *);HRESULT (*GetCurrentInfo)(IShellView2 *, LPFOLDERSETTINGS);HRESULT (*AddPropertySheetPages)(IShellView2 *, DWORD, LPFNADDPROPSHEETPAGE, LPARAM);HRESULT (*SaveViewState)(IShellView2 *);HRESULT (*SelectItem)(IShellView2 *, LPCITEMIDLIST, UINT);HRESULT (*GetItemObject)(IShellView2 *, UINT,  IID *, PVOID *);HRESULT (*GetView)(IShellView2 *, SHELLVIEWID *, ULONG);HRESULT (*CreateViewWindow2)(IShellView2 *, LPSV2CVW2_PARAMS);};
union tagTYPEDESC___AC700B6542D8071E244CADABF8A32897 {struct tagTYPEDESC *lptdesc;struct tagARRAYDESC *lpadesc;HREFTYPE hreftype;};
struct _27240A871129E8C5EF2505ED059D4BC8 {unsigned int DispatchTableCount;RPC_DISPATCH_FUNCTION *DispatchTable;int Reserved;};
struct _793203A904263AF632B64217160A3CD4 {BOOL TreeWalk;};
typedef BOOLEAN *PSECURITY_CONTEXT_TRACKING_MODE;
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;
typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;
typedef INTERNET_STATUS_CALLBACK *LPINTERNET_STATUS_CALLBACK;
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
struct _DEV_BROADCAST_USERDEFINED {struct _DEV_BROADCAST_HDR dbud_dbh;char dbud_szName[1];};
struct _LOCALGROUP_MEMBERS_INFO_0 {PSID lgrmi0_sid;};
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;
struct tagCInterfaceProxyHeader { IID *piid;};
typedef LPSERVICE_MAIN_FUNCTIONA LPSERVICE_MAIN_FUNCTION;
struct _PRINTPROCESSOR_INFO_1A {LPSTR pName;};
struct _XMIT_ROUTINE_QUINTUPLE {XMIT_HELPER_ROUTINE pfnTranslateToXmit;XMIT_HELPER_ROUTINE pfnTranslateFromXmit;XMIT_HELPER_ROUTINE pfnFreeXmit;XMIT_HELPER_ROUTINE pfnFreeInst;};
struct _PREVENT_MEDIA_REMOVAL {BOOLEAN PreventMediaRemoval;};
struct _UNIVERSAL_NAME_INFOA {LPSTR lpUniversalName;};
struct _TOKEN_PRIMARY_GROUP {PSID PrimaryGroup;};
struct _FOCUS_EVENT_RECORD {BOOL bSetFocus;};
struct _RPC_BINDING_VECTOR {unsigned int Count;RPC_BINDING_HANDLE BindingH[1];};
typedef int (*EDITWORDBREAKPROCA)(LPSTR, int, int, int);
struct _DATATYPES_INFO_1A {LPSTR pName;};
struct _REMOTE_NAME_INFOA {LPSTR lpUniversalName;LPSTR lpConnectionName;LPSTR lpRemainingPath;};
struct _IMAGE_THUNK_DATA {union _IMAGE_THUNK_DATA___0FC9A8C55E35B7004611A96ACAD7866D u1;};
struct _SERVER_INFO_1016 {BOOL sv1016_hidden;};
struct _SERVER_INFO_1514 {BOOL sv1514_enablesoftcompat;};
struct _SERVER_INFO_1515 {BOOL sv1515_enableforcedlogoff;};
struct _SERVER_INFO_1516 {BOOL sv1516_timesource;};
struct _SERVER_INFO_1518 {BOOL sv1518_lmannounce;};
struct _SERVER_INFO_1536 {BOOL sv1536_enableoplocks;};
struct _SERVER_INFO_1537 {BOOL sv1537_enableoplockforceclose;};
struct _SERVER_INFO_1538 {BOOL sv1538_enablefcbopens;};
struct _SERVER_INFO_1539 {BOOL sv1539_enableraw;};
struct _SERVER_INFO_1540 {BOOL sv1540_enablesharednetdrives;};
struct _SERVER_INFO_1541 {BOOL sv1541_minfreeconnections;};
struct _SERVER_INFO_1542 {BOOL sv1542_maxfreeconnections;};
struct _SERVER_INFO_1566 {BOOL sv1566_removeduplicatesearches;};
struct _SERVER_INFO_1585 {BOOL sv1585_sendsfrompreferredprocessor;};
struct _SERVER_INFO_1586 {BOOL sv1586_maxthreadsperqueue;};
typedef NAMEENUMPROCA DESKTOPENUMPROCA;
typedef HRESULT (*LPFNCANUNLOADNOW)(void);
struct _GENERIC_MAPPING {ACCESS_MASK GenericRead;ACCESS_MASK GenericWrite;ACCESS_MASK GenericExecute;ACCESS_MASK GenericAll;};
struct _MONITOR_INFO_1A {LPSTR pName;};
struct _MONITOR_INFO_2A {LPSTR pName;LPSTR pEnvironment;LPSTR pDLLName;};
struct _WKSTA_INFO_1048 {BOOL wki1048_use_opportunistic_locking;};
struct _WKSTA_INFO_1049 {BOOL wki1049_use_unlock_behind;};
struct _WKSTA_INFO_1050 {BOOL wki1050_use_close_behind;};
struct _WKSTA_INFO_1051 {BOOL wki1051_buf_named_pipes;};
struct _WKSTA_INFO_1052 {BOOL wki1052_use_lock_read_unlock;};
struct _WKSTA_INFO_1053 {BOOL wki1053_utilize_nt_caching;};
struct _WKSTA_INFO_1054 {BOOL wki1054_use_raw_read;};
struct _WKSTA_INFO_1055 {BOOL wki1055_use_raw_write;};
struct _WKSTA_INFO_1056 {BOOL wki1056_use_write_raw_data;};
struct _WKSTA_INFO_1057 {BOOL wki1057_use_encryption;};
struct _WKSTA_INFO_1058 {BOOL wki1058_buf_files_deny_write;};
struct _WKSTA_INFO_1059 {BOOL wki1059_buf_read_only_files;};
struct _WKSTA_INFO_1060 {BOOL wki1060_force_core_create_mode;};
struct _WKSTA_INFO_1061 {BOOL wki1061_use_512_byte_max_transfer;};
struct tagREGISTERWORDA {LPSTR lpReading;LPSTR lpWord;};
typedef LPCRECT LPCBORDERWIDTHS;
typedef MONTHDAYSTATE *LPMONTHDAYSTATE;
typedef __CDHOOKPROC LPPAGEPAINTHOOK;
typedef __CDHOOKPROC LPPAGESETUPHOOK;
typedef __CDHOOKPROC LPPRINTHOOKPROC;
typedef __CDHOOKPROC LPSETUPHOOKPROC;
typedef TEXTMETRICOLE *LPTEXTMETRICOLE;
typedef NAMEENUMPROCA WINSTAENUMPROCA;
struct _DRIVER_INFO_1A {LPSTR pName;};
struct _exception_list {struct _exception_list *prev;exception_handler *handler;};
struct tagHELPWININFOW {int wStructSize;int x;int y;int dx;int dy;int wMax;WCHAR rgchMember[2];};
typedef TIMECALLBACK *LPTIMECALLBACK;
typedef PBYTE LPVIEWSETTINGS;
typedef OLDFONTENUMPROCA FONTENUMPROCA;
typedef OLDFONTENUMPROCW FONTENUMPROCW;
typedef DRVCALLBACK *LPDRVCALLBACK;
typedef int (*LPFN_WSAHTONL)(SOCKET, unsigned int, unsigned int *);
typedef int (*LPFN_WSAHTONS)(SOCKET, unsigned short, unsigned short *);
typedef int (*LPFN_WSANTOHL)(SOCKET, unsigned int, unsigned int *);
typedef int (*LPFN_WSANTOHS)(SOCKET, unsigned short, unsigned short *);
typedef __CDHOOKPROC LPOFNHOOKPROC;
struct _PORT_INFO_1A {LPSTR pName;};
typedef int IIDLookupRtn( IID *, int *);
typedef __CDHOOKPROC LPCCHOOKPROC;
typedef __CDHOOKPROC LPCFHOOKPROC;
typedef __CDHOOKPROC LPFRHOOKPROC;
typedef DRVCALLBACK MIDICALLBACK;
typedef DRVCALLBACK *PDRVCALLBACK;
typedef int (*PFNLVCOMPARE)(LPARAM, LPARAM, LPARAM);
typedef int (*PFNTVCOMPARE)(LPARAM, LPARAM, LPARAM);
typedef DRVCALLBACK WAVECALLBACK;
struct _DOC_INFO_1A {LPSTR pDocName;LPSTR pOutputFile;LPSTR pDatatype;};
struct _TOKEN_OWNER {PSID Owner;};
struct _UUID_VECTOR {unsigned int Count;UUID *Uuid[1];};
typedef void (*LINEDDAPROC)(int, int, LPARAM);
typedef HINTERNET *LPHINTERNET;
typedef MMIOPROC *LPMMIOPROC;
typedef IIDLookupRtn *PIIDLookup;
struct _RPC_IF_ID {UUID Uuid;unsigned short VersMajor;unsigned short VersMinor;};
struct tagLICINFO {int cbLicInfo;BOOL fRuntimeKeyAvail;BOOL fLicVerified;};
struct _COLORMAP {COLORREF from;COLORREF to;};
typedef HGLOBAL HOLEMENU;
typedef DISPID MEMBERID;
typedef CLSID *REFCLSID;
typedef FMTID *REFFMTID;
typedef CLSID *LPCLSID;
typedef  TCHAR *LPCTSTR;
typedef  WCHAR *LPCWSTR;
typedef WCHAR OLECHAR;
struct in_addr {union in_addr___C13EC994467D6E67044F092615EC7EA9 S_un;};
struct ip_mreq {struct in_addr imr_multiaddr;struct in_addr imr_interface;};
typedef BOOL *LPBOOL;
typedef  WCHAR *LPCWCH;
typedef TCHAR *LPTSTR;
typedef WCHAR *LPWSTR;
typedef WCHAR *NWPSTR;
typedef  WCHAR *PCWSTR;
typedef TCHAR *PTBYTE;
typedef TCHAR *PTCHAR;
typedef WCHAR *PWCHAR;
typedef IID *REFIID;
struct rusage {struct timeval ru_utime;struct timeval ru_stime;int ru_maxrss;int ru_ixrss;int ru_idrss;int ru_isrss;int ru_minflt;int ru_majflt;int ru_nswap;int ru_inblock;int ru_oublock;int ru_msgsnd;int ru_msgrcv;int ru_nsignals;int ru_nvcsw;int ru_nivcsw;};
typedef IID *LPIID;
typedef TCHAR *LPTCH;
typedef WCHAR *LPWCH;
typedef BOOL *PBOOL;
typedef  WCHAR *PCWCH;
typedef TCHAR *PTSTR;
typedef WCHAR *PWSTR;
typedef TCHAR TBYTE;
typedef OLECHAR *BSTR;
typedef OLECHAR **SNB;
union _PROPSHEETHEADERW___0FB566F30614F599529D00140F4CD87D {HICON hIcon;LPCWSTR pszIcon;};
union _PROPSHEETHEADERW___6475730AE6DAD1B8D6E46E57DCE1E457 {UINT nStartPage;LPCWSTR pStartPage;};
union _PROPSHEETPAGEW___0FB566F30614F599529D00140F4CD87D {HICON hIcon;LPCWSTR pszIcon;};
union _PROPSHEETPAGEW___516F7AC5631E67C03EDCA9BDA4E87AED {LPCWSTR pszTemplate;LPCDLGTEMPLATE pResource;};
union _STRRET___CBA4CBE4EE73FCDBDFD08B2527F2F26D {LPWSTR pOleStr;UINT uOffset;char cStr[260];};
struct _1CF5A01E195BE25BEDA13B6A0EE28B07 {DWORD CategoryId;DWORD AttributeId;union _1CF5A01E195BE25BEDA13B6A0EE28B07___CA6E005D0CEB4AD2B9A93DDD4A619B56 AttributeType;};
struct _6950E4854C03824D44DF624674A695D1 {LPCTSTR ContentType;LPCTSTR Language;DWORD Size;};
struct _89E88C10B84B492504101A13E5F7DD9F {int cbSize;LPCTSTR lpszDocName;LPCTSTR lpszOutput;LPCTSTR lpszDatatype;DWORD fwType;};
struct _C3D536761911E1B34BFF5DAB2CC3A2E9 {DWORD dwAccessType;LPCTSTR lpszProxy;LPCTSTR lpszProxyBypass;};
struct _E9995694CC4D0702CA77AA1397DA2E55 {HKEY hkr;LPCTSTR pszSubKey;LPCTSTR pszValueName;};
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {union _IMAGE_RESOURCE_DIRECTORY_ENTRY___444826C0724C63C16186AAF04EE0E133 u;union _IMAGE_RESOURCE_DIRECTORY_ENTRY___2D36EF4657A2B130C0422CAF150A0160 u2;};
struct _QUERY_SERVICE_LOCK_STATUSW {DWORD fIsLocked;LPWSTR lpLockOwner;DWORD dwLockDuration;};
typedef void (*LPSERVICE_MAIN_FUNCTIONW)(DWORD, LPWSTR *);
struct tagMCI_VD_ESCAPE_PARMSW {DWORD dwCallback;LPCWSTR lpstrCommand;};
struct _QUERY_SERVICE_CONFIGW {DWORD dwServiceType;DWORD dwStartType;DWORD dwErrorControl;LPWSTR lpBinaryPathName;LPWSTR lpLoadOrderGroup;DWORD dwTagId;LPWSTR lpDependencies;LPWSTR lpServiceStartName;LPWSTR lpDisplayName;};
struct _ENUM_SERVICE_STATUSW {LPWSTR lpServiceName;LPWSTR lpDisplayName;SERVICE_STATUS ServiceStatus;};
struct _SERVICE_TABLE_ENTRYW {LPWSTR lpServiceName;LPSERVICE_MAIN_FUNCTIONW lpServiceProc;};
struct tagCInterfaceStubVtbl {CInterfaceStubHeader header;IRpcStubBufferVtbl Vtbl;};
struct _NET_DISPLAY_MACHINE {LPWSTR usri2_name;LPWSTR usri2_comment;DWORD usri2_flags;DWORD usri2_user_id;DWORD usri2_next_index;};
struct _wireSAFEARRAY_UNION {ULONG sfType;union _wireSAFEARRAY_UNION___872DEB83A733539900946FC069853D23 u;};
struct _GROUP_USERS_INFO_1 {LPWSTR grui1_name;DWORD grui1_attributes;};
struct _USER_MODALS_INFO_1 {DWORD usrmod1_role;LPWSTR usrmod1_primary;};
struct _USER_MODALS_INFO_2 {LPWSTR usrmod2_domain_name;PSID usrmod2_domain_id;};
typedef BOOL (*CODEPAGE_ENUMPROCW)(LPWSTR);
struct _CONNECTION_INFO_1 {DWORD coni1_id;DWORD coni1_type;DWORD coni1_num_opens;DWORD coni1_num_users;DWORD coni1_time;LPTSTR coni1_username;LPTSTR coni1_netname;};
struct _NET_DISPLAY_GROUP {LPWSTR grpi3_name;LPWSTR grpi3_comment;DWORD grpi3_group_id;DWORD grpi3_attributes;DWORD grpi3_next_index;};
struct tagMCI_INFO_PARMSW {DWORD dwCallback;LPWSTR lpstrReturn;DWORD dwRetSize;};
struct tagMCI_LOAD_PARMSW {DWORD dwCallback;LPCWSTR lpfilename;};
struct tagMCI_SAVE_PARMSW {DWORD dwCallback;LPCWSTR lpfilename;};
typedef BOOL (*CALINFO_ENUMPROCW)(LPWSTR);
typedef BOOL (*DATEFMT_ENUMPROCW)(LPWSTR);
struct NDdeShareInfo_tag {LONG lRevision;LPTSTR lpszShareName;LONG lShareType;LPTSTR lpszAppTopicList;LONG fSharedFlag;LONG fService;LONG fStartAppFlag;LONG nCmdShow;LONG qModifyId[2];LONG cNumItems;LPTSTR lpszItemList;};
typedef BOOL (*TIMEFMT_ENUMPROCW)(LPWSTR);
struct _NET_DISPLAY_USER {LPWSTR usri1_name;LPWSTR usri1_comment;DWORD usri1_flags;LPWSTR usri1_full_name;DWORD usri1_user_id;DWORD usri1_next_index;};
struct _REPL_EDIR_INFO_1 {LPWSTR rped1_dirname;DWORD rped1_integrity;DWORD rped1_extent;};
struct _REPL_EDIR_INFO_2 {LPWSTR rped2_dirname;DWORD rped2_integrity;DWORD rped2_extent;DWORD rped2_lockcount;DWORD rped2_locktime;};
struct _REPL_IDIR_INFO_1 {LPWSTR rpid1_dirname;DWORD rpid1_state;LPWSTR rpid1_mastername;DWORD rpid1_last_update_time;DWORD rpid1_lockcount;DWORD rpid1_locktime;};
struct _SESSION_INFO_502 {LPTSTR sesi502_cname;LPTSTR sesi502_username;DWORD sesi502_num_opens;DWORD sesi502_time;DWORD sesi502_idle_time;DWORD sesi502_user_flags;LPTSTR sesi502_cltype_name;LPTSTR sesi502_transport;};
typedef BOOL (*LOCALE_ENUMPROCW)(LPWSTR);
struct _CHARDEVQ_INFO_1 {LPWSTR cq1_dev;DWORD cq1_priority;LPWSTR cq1_devs;DWORD cq1_numusers;DWORD cq1_numahead;};
struct _NETLOGON_INFO_2 {DWORD netlog2_flags;DWORD netlog2_pdc_connection_status;LPWSTR netlog2_trusted_dc_name;DWORD netlog2_tc_connection_status;};
struct _PRINTER_INFO_1W {DWORD Flags;LPWSTR pDescription;LPWSTR pName;LPWSTR pComment;};
struct _PRINTER_INFO_4W {LPWSTR pPrinterName;LPWSTR pServerName;DWORD Attributes;};
struct _PRINTER_INFO_5W {LPWSTR pPrinterName;LPWSTR pPortName;DWORD Attributes;DWORD DeviceNotSelectedTimeout;DWORD TransmissionRetryTimeout;};
struct _SERVER_INFO_100 {DWORD sv100_platform_id;LPTSTR sv100_name;};
struct _SERVER_INFO_101 {DWORD sv101_platform_id;LPTSTR sv101_name;DWORD sv101_version_major;DWORD sv101_version_minor;DWORD sv101_type;LPTSTR sv101_comment;};
struct _SERVER_INFO_402 {DWORD sv402_ulist_mtime;DWORD sv402_glist_mtime;DWORD sv402_alist_mtime;LPTSTR sv402_alerts;DWORD sv402_security;DWORD sv402_numadmin;DWORD sv402_lanmask;LPTSTR sv402_guestacct;DWORD sv402_chdevs;DWORD sv402_chdevq;DWORD sv402_chdevjobs;DWORD sv402_connections;DWORD sv402_shares;DWORD sv402_openfiles;DWORD sv402_sessopens;DWORD sv402_sessvcs;DWORD sv402_sessreqs;DWORD sv402_opensearch;DWORD sv402_activelocks;DWORD sv402_numreqbuf;DWORD sv402_sizreqbuf;DWORD sv402_numbigbuf;DWORD sv402_numfiletasks;DWORD sv402_alertsched;DWORD sv402_erroralert;DWORD sv402_logonalert;DWORD sv402_accessalert;DWORD sv402_diskalert;DWORD sv402_netioalert;DWORD sv402_maxauditsz;LPTSTR sv402_srvheuristics;};
struct _SERVER_INFO_403 {DWORD sv403_ulist_mtime;DWORD sv403_glist_mtime;DWORD sv403_alist_mtime;LPTSTR sv403_alerts;DWORD sv403_security;DWORD sv403_numadmin;DWORD sv403_lanmask;LPTSTR sv403_guestacct;DWORD sv403_chdevs;DWORD sv403_chdevq;DWORD sv403_chdevjobs;DWORD sv403_connections;DWORD sv403_shares;DWORD sv403_openfiles;DWORD sv403_sessopens;DWORD sv403_sessvcs;DWORD sv403_sessreqs;DWORD sv403_opensearch;DWORD sv403_activelocks;DWORD sv403_numreqbuf;DWORD sv403_sizreqbuf;DWORD sv403_numbigbuf;DWORD sv403_numfiletasks;DWORD sv403_alertsched;DWORD sv403_erroralert;DWORD sv403_logonalert;DWORD sv403_accessalert;DWORD sv403_diskalert;DWORD sv403_netioalert;DWORD sv403_maxauditsz;LPTSTR sv403_srvheuristics;DWORD sv403_auditedevents;DWORD sv403_autoprofile;LPTSTR sv403_autopath;};
struct _SESSION_INFO_10 {LPTSTR sesi10_cname;LPTSTR sesi10_username;DWORD sesi10_time;DWORD sesi10_idle_time;};
struct tagDRVCONFIGINFO {DWORD dwDCISize;LPCWSTR lpszDCISectionName;LPCWSTR lpszDCIAliasName;};
struct tagTBSAVEPARAMSW {HKEY hkr;LPCWSTR pszSubKey;LPCWSTR pszValueName;};
struct DRVCONFIGINFOEX {DWORD dwDCISize;LPCWSTR lpszDCISectionName;LPCWSTR lpszDCIAliasName;DWORD dnDevNode;};
struct _ADDJOB_INFO_1W {LPWSTR Path;DWORD JobId;};
struct _CHARDEV_INFO_1 {LPWSTR ch1_dev;DWORD ch1_status;LPWSTR ch1_username;DWORD ch1_time;};
struct _DRIVER_INFO_2W {DWORD cVersion;LPWSTR pName;LPWSTR pEnvironment;LPWSTR pDriverPath;LPWSTR pDataFile;LPWSTR pConfigFile;};
struct _DRIVER_INFO_3W {DWORD cVersion;LPWSTR pName;LPWSTR pEnvironment;LPWSTR pDriverPath;LPWSTR pDataFile;LPWSTR pConfigFile;LPWSTR pHelpFile;LPWSTR pDependentFiles;LPWSTR pMonitorName;LPWSTR pDefaultDataType;};
struct _SERVICE_INFO_1 {LPWSTR svci1_name;DWORD svci1_status;DWORD svci1_code;DWORD svci1_pid;};
struct _SERVICE_INFO_2 {LPWSTR svci2_name;DWORD svci2_status;DWORD svci2_code;DWORD svci2_pid;LPWSTR svci2_text;DWORD svci2_specific_error;LPWSTR svci2_display_name;};
struct _SESSION_INFO_1 {LPTSTR sesi1_cname;LPTSTR sesi1_username;DWORD sesi1_num_opens;DWORD sesi1_time;DWORD sesi1_idle_time;DWORD sesi1_user_flags;};
struct _SESSION_INFO_2 {LPTSTR sesi2_cname;LPTSTR sesi2_username;DWORD sesi2_num_opens;DWORD sesi2_time;DWORD sesi2_idle_time;DWORD sesi2_user_flags;LPTSTR sesi2_cltype_name;};
struct _TC_ITEMHEADERW {UINT mask;UINT lpReserved1;UINT lpReserved2;LPWSTR pszText;int cchTextMax;int iImage;};
struct _WKSTA_INFO_100 {DWORD wki100_platform_id;LPWSTR wki100_computername;LPWSTR wki100_langroup;DWORD wki100_ver_major;DWORD wki100_ver_minor;};
struct _WKSTA_INFO_101 {DWORD wki101_platform_id;LPWSTR wki101_computername;LPWSTR wki101_langroup;DWORD wki101_ver_major;DWORD wki101_ver_minor;LPWSTR wki101_lanroot;};
struct _WKSTA_INFO_102 {DWORD wki102_platform_id;LPWSTR wki102_computername;LPWSTR wki102_langroup;DWORD wki102_ver_major;DWORD wki102_ver_minor;LPWSTR wki102_lanroot;DWORD wki102_logged_on_users;};
struct _WKSTA_INFO_302 {DWORD wki302_char_wait;DWORD wki302_collection_time;DWORD wki302_maximum_collection_count;DWORD wki302_keep_conn;DWORD wki302_keep_search;DWORD wki302_max_cmds;DWORD wki302_num_work_buf;DWORD wki302_siz_work_buf;DWORD wki302_max_wrk_cache;DWORD wki302_sess_timeout;DWORD wki302_siz_error;DWORD wki302_num_alerts;DWORD wki302_num_services;DWORD wki302_errlog_sz;DWORD wki302_print_buf_time;DWORD wki302_num_char_buf;DWORD wki302_siz_char_buf;LPWSTR wki302_wrk_heuristics;DWORD wki302_mailslots;DWORD wki302_num_dgram_buf;};
struct _WKSTA_INFO_402 {DWORD wki402_char_wait;DWORD wki402_collection_time;DWORD wki402_maximum_collection_count;DWORD wki402_keep_conn;DWORD wki402_keep_search;DWORD wki402_max_cmds;DWORD wki402_num_work_buf;DWORD wki402_siz_work_buf;DWORD wki402_max_wrk_cache;DWORD wki402_sess_timeout;DWORD wki402_siz_error;DWORD wki402_num_alerts;DWORD wki402_num_services;DWORD wki402_errlog_sz;DWORD wki402_print_buf_time;DWORD wki402_num_char_buf;DWORD wki402_siz_char_buf;LPWSTR wki402_wrk_heuristics;DWORD wki402_mailslots;DWORD wki402_num_dgram_buf;DWORD wki402_max_threads;};
struct tagCCSTYLEFLAGW {DWORD flStyle;DWORD flStyleMask;LPWSTR pszStyle;};
struct _ACCESS_INFO_1 {LPTSTR acc1_resource_name;DWORD acc1_attr;DWORD acc1_count;};
struct _GROUP_INFO_2 {LPWSTR grpi2_name;LPWSTR grpi2_comment;DWORD grpi2_group_id;DWORD grpi2_attributes;};
struct _INPUT_RECORD {WORD EventType;union _INPUT_RECORD___56C9F45CD5AB058B1B4FD5A9AB9216C4 Event;};
struct _NETRESOURCEW {DWORD dwScope;DWORD dwType;DWORD dwDisplayType;DWORD dwUsage;LPWSTR lpLocalName;LPWSTR lpRemoteName;LPWSTR lpComment;LPWSTR lpProvider;};
struct _PORT_INFO_2W {LPWSTR pPortName;LPWSTR pMonitorName;LPWSTR pDescription;DWORD fPortType;DWORD Reserved;};
struct _PORT_INFO_3W {DWORD dwStatus;LPWSTR pszStatus;DWORD dwSeverity;};
struct _SHARE_INFO_1 {LPTSTR shi1_netname;DWORD shi1_type;LPTSTR shi1_remark;};
struct _SHARE_INFO_2 {LPTSTR shi2_netname;DWORD shi2_type;LPTSTR shi2_remark;DWORD shi2_permissions;DWORD shi2_max_uses;DWORD shi2_current_uses;LPTSTR shi2_path;LPTSTR shi2_passwd;};
struct _USER_INFO_20 {LPWSTR usri20_name;LPWSTR usri20_full_name;LPWSTR usri20_comment;DWORD usri20_flags;DWORD usri20_user_id;};
struct _currencyfmtW {UINT NumDigits;UINT LeadingZero;UINT Grouping;LPWSTR lpDecimalSep;LPWSTR lpThousandSep;UINT NegativeOrder;UINT PositiveOrder;LPWSTR lpCurrencySymbol;};
typedef int (*ICMENUMPROCW)(LPWSTR, LPARAM);
typedef DWORD PM_OPEN_PROC(LPWSTR);
struct _ACCESS_LIST {LPTSTR acl_ugname;DWORD acl_access;};
struct _DEBUG_EVENT {DWORD dwDebugEventCode;DWORD dwProcessId;DWORD dwThreadId;union _DEBUG_EVENT___1CA59A7E570F154F98F56770E4FE79B4 u;};
struct _DOC_INFO_2W {LPWSTR pDocName;LPWSTR pOutputFile;LPWSTR pDatatype;DWORD dwMode;DWORD JobId;};
struct _FILE_INFO_3 {DWORD fi3_id;DWORD fi3_permissions;DWORD fi3_num_locks;LPTSTR fi3_pathname;LPTSTR fi3_username;};
struct _REPL_INFO_0 {DWORD rp0_role;LPWSTR rp0_exportpath;LPWSTR rp0_exportlist;LPWSTR rp0_importpath;LPWSTR rp0_importlist;LPWSTR rp0_logonusername;DWORD rp0_interval;DWORD rp0_pulse;DWORD rp0_guardtime;DWORD rp0_random;};
struct _USER_INFO_1 {LPWSTR usri1_name;LPWSTR usri1_password;DWORD usri1_password_age;DWORD usri1_priv;LPWSTR usri1_home_dir;LPWSTR usri1_comment;DWORD usri1_flags;LPWSTR usri1_script_path;};
struct _findtextexW {CHARRANGE chrg;LPWSTR lpstrText;CHARRANGE chrgText;};
struct tagPARAMDATA {OLECHAR *szName;VARTYPE vt;};
struct _LV_COLUMNW {UINT mask;int fmt;int cx;LPWSTR pszText;int cchTextMax;int iSubItem;};
struct _MSG_INFO_1 {LPWSTR msgi1_name;DWORD msgi1_forward_flag;LPWSTR msgi1_forward;};
struct _USE_INFO_1 {LPTSTR ui1_local;LPTSTR ui1_remote;LPTSTR ui1_password;DWORD ui1_status;DWORD ui1_asg_type;DWORD ui1_refcount;DWORD ui1_usecount;};
struct _USE_INFO_2 {LPTSTR ui2_local;LPTSTR ui2_remote;LPTSTR ui2_password;DWORD ui2_status;DWORD ui2_asg_type;DWORD ui2_refcount;DWORD ui2_usecount;LPTSTR ui2_username;LPTSTR ui2_domainname;};
struct _editstream {DWORD dwCookie;DWORD dwError;EDITSTREAMCALLBACK pfnCallback;};
struct _numberfmtW {UINT NumDigits;UINT LeadingZero;UINT Grouping;LPWSTR lpDecimalSep;LPWSTR lpThousandSep;UINT NegativeOrder;};
struct _textrangew {CHARRANGE chrg;LPWSTR lpstrText;};
struct sockaddr_in {short sin_family;u_short sin_port;struct in_addr sin_addr;char sin_zero[8];};
struct tagCALPWSTR {ULONG cElems;LPWSTR *pElems;};
struct tagPICTDESC {UINT cbSizeofstruct;UINT picType;union tagPICTDESC___43BF5684F0E8BAFC8B650B528FAB349D u;};
struct tagTYPEDESC {union tagTYPEDESC___AC700B6542D8071E244CADABF8A32897 u;VARTYPE vt;};
struct _findtextW {CHARRANGE chrg;LPWSTR lpstrText;};
struct mmtime_tag {UINT wType;union mmtime_tag___532DCF0E9B9A2B0A020BD11490F25514 u;};
struct value_entW {LPWSTR ve_valuename;DWORD ve_valuelen;DWORD ve_valueptr;DWORD ve_type;};
struct tagCABSTR {ULONG cElems;BSTR *pElems;};
struct tagHLITEM {ULONG uHLID;LPWSTR pwzFriendlyName;};
struct _STRRET {UINT uType;union _STRRET___CBA4CBE4EE73FCDBDFD08B2527F2F26D u;};
struct _5FD78A464707AEFBBDC321B5598A6452 {NMHDR hdr;int iItem;TBBUTTON tbButton;int cchText;LPTSTR pszText;};
struct _A1943A29AA7C7E1878261AF6E5FA7A66 {ULONG ulReserved;ULONG ulRecipClass;LPTSTR lpszName;LPTSTR lpszAddress;ULONG ulEIDSize;LPVOID lpEntryID;};
struct _EE72D852D5A93ABA9CA530FC9E659A18 {ULONG ulReserved;ULONG flFlags;ULONG nPosition;LPTSTR lpszPathName;LPTSTR lpszFileName;LPVOID lpFileType;};
struct _FB1D2264C317C52716420591CB70B7FC {FILETIME ftExpiry;FILETIME ftStart;LPTSTR lpszSubjectInfo;LPTSTR lpszIssuerInfo;LPTSTR lpszProtocolName;LPTSTR lpszSignatureAlgName;LPTSTR lpszEncryptionAlgName;DWORD dwKeySize;};
struct _LOCALGROUP_MEMBERS_INFO_1 {PSID lgrmi1_sid;SID_NAME_USE lgrmi1_sidusage;LPWSTR lgrmi1_name;};
struct _LOCALGROUP_MEMBERS_INFO_2 {PSID lgrmi2_sid;SID_NAME_USE lgrmi2_sidusage;LPWSTR lgrmi2_domainandname;};
struct _PERF_COUNTER_DEFINITION {DWORD ByteLength;DWORD CounterNameTitleIndex;LPWSTR CounterNameTitle;DWORD CounterHelpTitleIndex;LPWSTR CounterHelpTitle;LONG DefaultScale;DWORD DetailLevel;DWORD CounterType;DWORD CounterSize;DWORD CounterOffset;};
struct _SERVER_TRANSPORT_INFO_0 {DWORD svti0_numberofvcs;LPTSTR svti0_transportname;PBYTE svti0_transportaddress;DWORD svti0_transportaddresslength;LPTSTR svti0_networkaddress;};
struct _WKSTA_TRANSPORT_INFO_0 {DWORD wkti0_quality_of_service;DWORD wkti0_number_of_vcs;LPWSTR wkti0_transport_name;LPWSTR wkti0_transport_address;BOOL wkti0_wan_ish;};
struct tagMCI_OVLY_LOAD_PARMSW {DWORD dwCallback;LPCWSTR lpfilename;RECT rc;};
struct tagMCI_OVLY_SAVE_PARMSW {DWORD dwCallback;LPCWSTR lpfilename;RECT rc;};
struct tagMCI_WAVE_OPEN_PARMSW {DWORD dwCallback;MCIDEVICEID wDeviceID;LPCWSTR lpstrDeviceType;LPCWSTR lpstrElementName;LPCWSTR lpstrAlias;DWORD dwBufferSeconds;};
typedef int (*REGISTERWORDENUMPROCW)(LPCWSTR, DWORD, LPCWSTR, LPVOID);
struct tagMCI_SYSINFO_PARMSW {DWORD dwCallback;LPWSTR lpstrReturn;DWORD dwRetSize;DWORD dwNumber;UINT wDeviceType;};
typedef UINT (*PFNRECONCILEPROFILEW)(LPCWSTR, LPCWSTR, DWORD);
struct tagOLEUIPASTEENTRYW {FORMATETC fmtetc;LPCWSTR lpstrFormatName;LPCWSTR lpstrResultText;DWORD dwFlags;DWORD dwScratchSpace;};
typedef UINT (*PFNGETPROFILEPATHW)(LPCWSTR, LPWSTR, UINT);
struct _INTERNET_BUFFERSW {DWORD dwStructSize;struct _INTERNET_BUFFERSW *Next;LPCWSTR lpcszHeader;DWORD dwHeadersLength;DWORD dwHeadersTotal;LPVOID lpvBuffer;DWORD dwBufferLength;DWORD dwBufferTotal;DWORD dwOffsetLow;DWORD dwOffsetHigh;};
struct _PRINTER_DEFAULTSW {LPWSTR pDatatype;LPDEVMODE pDevMode;ACCESS_MASK DesiredAccess;};
struct tagMCI_OPEN_PARMSW {DWORD dwCallback;MCIDEVICEID wDeviceID;LPCWSTR lpstrDeviceType;LPCWSTR lpstrElementName;LPCWSTR lpstrAlias;};
struct tagOLEUIGNRLPROPSA {DWORD cbStruct;DWORD dwFlags;DWORD dwReserved1[2];LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;DWORD dwReserved2[3];struct tagOLEUIOBJECTPROPSA *lpOP;};
struct tagOLEUIGNRLPROPSW {DWORD cbStruct;DWORD dwFlags;DWORD dwReserved1[2];LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;DWORD dwReserved2[3];struct tagOLEUIOBJECTPROPSW *lpOP;};
struct tagOLEUILINKPROPSA {DWORD cbStruct;DWORD dwFlags;DWORD dwReserved1[2];LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;DWORD dwReserved2[3];struct tagOLEUIOBJECTPROPSA *lpOP;};
struct tagOLEUILINKPROPSW {DWORD cbStruct;DWORD dwFlags;DWORD dwReserved1[2];LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;DWORD dwReserved2[3];struct tagOLEUIOBJECTPROPSW *lpOP;};
struct tagOLEUIVIEWPROPSA {DWORD cbStruct;DWORD dwFlags;DWORD dwReserved1[2];LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;DWORD dwReserved2[3];struct tagOLEUIOBJECTPROPSA *lpOP;int nScaleMin;int nScaleMax;};
struct tagOLEUIVIEWPROPSW {DWORD cbStruct;DWORD dwFlags;DWORD dwReserved1[2];LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;DWORD dwReserved2[3];struct tagOLEUIOBJECTPROPSW *lpOP;int nScaleMin;int nScaleMax;};
union _IMAGE_AUX_SYMBOL {struct _IMAGE_AUX_SYMBOL___23DFC5686F0E6924815C955A999B653C Sym;struct _IMAGE_AUX_SYMBOL___C84595816809DB9D1AC5ADB82092AE34 File;struct _IMAGE_AUX_SYMBOL___0ECF6FFE4CB91F7643C274EBA09FDD11 Section;};
struct _SERVER_INFO_503 {DWORD sv503_sessopens;DWORD sv503_sessvcs;DWORD sv503_opensearch;DWORD sv503_sizreqbuf;DWORD sv503_initworkitems;DWORD sv503_maxworkitems;DWORD sv503_rawworkitems;DWORD sv503_irpstacksize;DWORD sv503_maxrawbuflen;DWORD sv503_sessusers;DWORD sv503_sessconns;DWORD sv503_maxpagedmemoryusage;DWORD sv503_maxnonpagedmemoryusage;BOOL sv503_enablesoftcompat;BOOL sv503_enableforcedlogoff;BOOL sv503_timesource;BOOL sv503_acceptdownlevelapis;BOOL sv503_lmannounce;LPTSTR sv503_domain;DWORD sv503_maxcopyreadlen;DWORD sv503_maxcopywritelen;DWORD sv503_minkeepsearch;DWORD sv503_maxkeepsearch;DWORD sv503_minkeepcomplsearch;DWORD sv503_maxkeepcomplsearch;DWORD sv503_threadcountadd;DWORD sv503_numblockthreads;DWORD sv503_scavtimeout;DWORD sv503_minrcvqueue;DWORD sv503_minfreeworkitems;DWORD sv503_xactmemsize;DWORD sv503_threadpriority;DWORD sv503_maxmpxct;DWORD sv503_oplockbreakwait;DWORD sv503_oplockbreakresponsewait;BOOL sv503_enableoplocks;BOOL sv503_enableoplockforceclose;BOOL sv503_enablefcbopens;BOOL sv503_enableraw;BOOL sv503_enablesharednetdrives;DWORD sv503_minfreeconnections;DWORD sv503_maxfreeconnections;};
struct _SERVER_INFO_599 {DWORD sv599_sessopens;DWORD sv599_sessvcs;DWORD sv599_opensearch;DWORD sv599_sizreqbuf;DWORD sv599_initworkitems;DWORD sv599_maxworkitems;DWORD sv599_rawworkitems;DWORD sv599_irpstacksize;DWORD sv599_maxrawbuflen;DWORD sv599_sessusers;DWORD sv599_sessconns;DWORD sv599_maxpagedmemoryusage;DWORD sv599_maxnonpagedmemoryusage;BOOL sv599_enablesoftcompat;BOOL sv599_enableforcedlogoff;BOOL sv599_timesource;BOOL sv599_acceptdownlevelapis;BOOL sv599_lmannounce;LPTSTR sv599_domain;DWORD sv599_maxcopyreadlen;DWORD sv599_maxcopywritelen;DWORD sv599_minkeepsearch;DWORD sv599_maxkeepsearch;DWORD sv599_minkeepcomplsearch;DWORD sv599_maxkeepcomplsearch;DWORD sv599_threadcountadd;DWORD sv599_numblockthreads;DWORD sv599_scavtimeout;DWORD sv599_minrcvqueue;DWORD sv599_minfreeworkitems;DWORD sv599_xactmemsize;DWORD sv599_threadpriority;DWORD sv599_maxmpxct;DWORD sv599_oplockbreakwait;DWORD sv599_oplockbreakresponsewait;BOOL sv599_enableoplocks;BOOL sv599_enableoplockforceclose;BOOL sv599_enablefcbopens;BOOL sv599_enableraw;BOOL sv599_enablesharednetdrives;DWORD sv599_minfreeconnections;DWORD sv599_maxfreeconnections;DWORD sv599_initsesstable;DWORD sv599_initconntable;DWORD sv599_initfiletable;DWORD sv599_initsearchtable;DWORD sv599_alertschedule;DWORD sv599_errorthreshold;DWORD sv599_networkerrorthreshold;DWORD sv599_diskspacethreshold;DWORD sv599_reserved;DWORD sv599_maxlinkdelay;DWORD sv599_minlinkthroughput;DWORD sv599_linkinfovalidtime;DWORD sv599_scavqosinfoupdatetime;DWORD sv599_maxworkitemidletime;};
struct _WSANSClassInfoW {LPWSTR lpszName;DWORD dwNameSpace;DWORD dwValueType;DWORD dwValueSize;LPVOID lpValue;};
struct tagHIGHCONTRASTW {UINT cbSize;DWORD dwFlags;LPWSTR lpszDefaultScheme;};
struct tagSTORAGELAYOUT {DWORD LayoutType;OLECHAR *pwcsElementName;LARGE_INTEGER cOffset;LARGE_INTEGER cBytes;};
struct _DISCDLGSTRUCTW {DWORD cbStructure;HWND hwndOwner;LPWSTR lpLocalName;LPWSTR lpRemoteName;DWORD dwFlags;};
struct _SHARE_INFO_502 {LPTSTR shi502_netname;DWORD shi502_type;LPTSTR shi502_remark;DWORD shi502_permissions;DWORD shi502_max_uses;DWORD shi502_current_uses;LPTSTR shi502_path;LPTSTR shi502_passwd;DWORD shi502_reserved;PSECURITY_DESCRIPTOR shi502_security_descriptor;};
struct tagSOUNDSENTRYW {UINT cbSize;DWORD dwFlags;DWORD iFSTextEffect;DWORD iFSTextEffectMSec;DWORD iFSTextEffectColorBits;DWORD iFSGrafEffect;DWORD iFSGrafEffectMSec;DWORD iFSGrafEffectColor;DWORD iWindowsEffect;DWORD iWindowsEffectMSec;LPWSTR lpszWindowsEffectDLL;DWORD iWindowsEffectOrdinal;};
struct tagSERIALKEYSW {UINT cbSize;DWORD dwFlags;LPWSTR lpszActivePort;LPWSTR lpszPort;UINT iBaudRate;UINT iPortState;UINT iActive;};
typedef BOOL (*NAMEENUMPROCW)(LPWSTR, LPARAM);
struct _COSERVERINFO {DWORD dwReserved1;LPWSTR pwszName;COAUTHINFO *pAuthInfo;DWORD dwReserved2;};
struct _USER_INFO_11 {LPWSTR usri11_name;LPWSTR usri11_comment;LPWSTR usri11_usr_comment;LPWSTR usri11_full_name;DWORD usri11_priv;DWORD usri11_auth_flags;DWORD usri11_password_age;LPWSTR usri11_home_dir;LPWSTR usri11_parms;DWORD usri11_last_logon;DWORD usri11_last_logoff;DWORD usri11_bad_pw_count;DWORD usri11_num_logons;LPWSTR usri11_logon_server;DWORD usri11_country_code;LPWSTR usri11_workstations;DWORD usri11_max_storage;DWORD usri11_units_per_week;PBYTE usri11_logon_hours;DWORD usri11_code_page;};
struct tagMIXERLINEA {DWORD cbStruct;DWORD dwDestination;DWORD dwSource;DWORD dwLineID;DWORD fdwLine;DWORD dwUser;DWORD dwComponentType;DWORD cChannels;DWORD cConnections;DWORD cControls;CHAR szShortName[16];CHAR szName[64];struct tagMIXERLINEA___3F59E0B102B49F482C4A8B1440A7891E Target;};
struct tagMIXERLINEW {DWORD cbStruct;DWORD dwDestination;DWORD dwSource;DWORD dwLineID;DWORD fdwLine;DWORD dwUser;DWORD dwComponentType;DWORD cChannels;DWORD cConnections;DWORD cControls;WCHAR szShortName[16];WCHAR szName[64];struct tagMIXERLINEW___9A19AF7771B1B870F9962D397CED60DA Target;};
struct tagNMDAYSTATE {NMHDR nmhdr;SYSTEMTIME stStart;int cDayState;LPMONTHDAYSTATE prgDayState;};
struct _JOB_INFO_1W {DWORD JobId;LPWSTR pPrinterName;LPWSTR pMachineName;LPWSTR pUserName;LPWSTR pDocument;LPWSTR pDatatype;LPWSTR pStatus;DWORD Status;DWORD Priority;DWORD Position;DWORD TotalPages;DWORD PagesPrinted;SYSTEMTIME Submitted;};
struct _USER_INFO_2 {LPWSTR usri2_name;LPWSTR usri2_password;DWORD usri2_password_age;DWORD usri2_priv;LPWSTR usri2_home_dir;LPWSTR usri2_comment;DWORD usri2_flags;LPWSTR usri2_script_path;DWORD usri2_auth_flags;LPWSTR usri2_full_name;LPWSTR usri2_usr_comment;LPWSTR usri2_parms;LPWSTR usri2_workstations;DWORD usri2_last_logon;DWORD usri2_last_logoff;DWORD usri2_acct_expires;DWORD usri2_max_storage;DWORD usri2_units_per_week;PBYTE usri2_logon_hours;DWORD usri2_bad_pw_count;DWORD usri2_num_logons;LPWSTR usri2_logon_server;DWORD usri2_country_code;DWORD usri2_code_page;};
struct _USER_INFO_3 {LPWSTR usri3_name;LPWSTR usri3_password;DWORD usri3_password_age;DWORD usri3_priv;LPWSTR usri3_home_dir;LPWSTR usri3_comment;DWORD usri3_flags;LPWSTR usri3_script_path;DWORD usri3_auth_flags;LPWSTR usri3_full_name;LPWSTR usri3_usr_comment;LPWSTR usri3_parms;LPWSTR usri3_workstations;DWORD usri3_last_logon;DWORD usri3_last_logoff;DWORD usri3_acct_expires;DWORD usri3_max_storage;DWORD usri3_units_per_week;PBYTE usri3_logon_hours;DWORD usri3_bad_pw_count;DWORD usri3_num_logons;LPWSTR usri3_logon_server;DWORD usri3_country_code;DWORD usri3_code_page;DWORD usri3_user_id;DWORD usri3_primary_group_id;LPWSTR usri3_profile;LPWSTR usri3_home_dir_drive;DWORD usri3_password_expired;};
struct _wireVARIANT {DWORD clSize;DWORD rpcReserved;USHORT vt;USHORT wReserved1;USHORT wReserved2;USHORT wReserved3;union _wireVARIANT___3390C37F64321D49999A8BAD1DE75787 u;};
struct tagSTGMEDIUM {DWORD tymed;union tagSTGMEDIUM___796099C3E9457CEE546F4B82888134E5 u;LPUNKNOWN pUnkForRelease;};
struct tagTBNOTIFYW {NMHDR hdr;int iItem;TBBUTTON tbButton;int cchText;LPWSTR pszText;};
struct _COAUTHINFO {DWORD dwAuthnSvc;DWORD dwAuthzSvc;LPWSTR pwszServerPrincName;DWORD dwAuthnLevel;DWORD dwImpersonationLevel;AUTH_IDENTITY *pAuthIdentityData;DWORD dwCapabilities;};
struct _ERROR_LOG {DWORD el_len;DWORD el_reserved;DWORD el_time;DWORD el_error;LPWSTR el_name;LPWSTR el_text;LPBYTE el_data;DWORD el_data_size;DWORD el_nstrings;};
struct _OFNOTIFYW {NMHDR hdr;LPOPENFILENAMEW lpOFN;LPWSTR pszFile;};
struct _POLYTEXTW {int x;int y;UINT n;LPCWSTR lpstr;UINT uiFlags;RECT rcl;int *pdx;};
struct _TV_SORTCB {HTREEITEM hParent;PFNTVCOMPARE lpfnCompare;LPARAM lParam;};
struct tagOLEVERB {LONG lVerb;LPWSTR lpszVerbName;DWORD fuFlags;DWORD grfAttribs;};
struct _LV_ITEMW {UINT mask;int iItem;int iSubItem;UINT state;UINT stateMask;LPWSTR pszText;int cchTextMax;int iImage;LPARAM lParam;};
struct _TC_ITEMW {UINT mask;UINT lpReserved1;UINT lpReserved2;LPWSTR pszText;int cchTextMax;int iImage;LPARAM lParam;};
struct _AT_ENUM {DWORD JobId;DWORD JobTime;DWORD DaysOfMonth;UCHAR DaysOfWeek;UCHAR Flags;LPWSTR Command;};
struct _AT_INFO {DWORD JobTime;DWORD DaysOfMonth;UCHAR DaysOfWeek;UCHAR Flags;LPWSTR Command;};
typedef INT (*LPFN_WSAGETSERVICECLASSNAMEBYCLASSIDW)(LPGUID, LPWSTR, LPDWORD);
struct _2B4FDC4BF487E67F052937EE78FAE255 {DWORD dwStructSize;LPWSTR lpszScheme;DWORD dwSchemeLength;INTERNET_SCHEME nScheme;LPWSTR lpszHostName;DWORD dwHostNameLength;INTERNET_PORT nPort;LPWSTR lpszUserName;DWORD dwUserNameLength;LPWSTR lpszPassword;DWORD dwPasswordLength;LPWSTR lpszUrlPath;DWORD dwUrlPathLength;LPWSTR lpszExtraInfo;DWORD dwExtraInfoLength;};
struct _SECURITY_QUALITY_OF_SERVICE {DWORD Length;SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;BOOLEAN EffectiveOnly;};
struct tagMCI_ANIM_WINDOW_PARMSW {DWORD dwCallback;HWND hWnd;UINT nCmdShow;LPCWSTR lpstrText;};
struct tagMCI_OVLY_WINDOW_PARMSW {DWORD dwCallback;HWND hWnd;UINT nCmdShow;LPCWSTR lpstrText;};
struct tagMCI_ANIM_OPEN_PARMSW {DWORD dwCallback;MCIDEVICEID wDeviceID;LPCWSTR lpstrDeviceType;LPCWSTR lpstrElementName;LPCWSTR lpstrAlias;DWORD dwStyle;HWND hWndParent;};
struct tagMCI_OVLY_OPEN_PARMSW {DWORD dwCallback;MCIDEVICEID wDeviceID;LPCWSTR lpstrDeviceType;LPCWSTR lpstrElementName;LPCWSTR lpstrAlias;DWORD dwStyle;HWND hWndParent;};
struct _WSAServiceClassInfoW {LPGUID lpServiceClassId;LPWSTR lpszServiceClassName;DWORD dwCount;LPWSANSCLASSINFOW lpClassInfos;};
typedef BOOL (*PFNPROCESSPOLICIESW)(HWND, LPCWSTR, LPCWSTR, LPCWSTR, DWORD);
struct _WSANAMESPACE_INFOW {GUID NSProviderId;DWORD dwNameSpace;BOOL fActive;DWORD dwVersion;LPWSTR lpszIdentifier;};
struct tagMDICREATESTRUCTW {LPCWSTR szClass;LPCWSTR szTitle;HANDLE hOwner;int x;int y;int cx;int cy;DWORD style;LPARAM lParam;};
typedef INT (*LPFNCCSIZETOTEXTW)(DWORD, DWORD, HFONT, LPWSTR);
struct _PERF_OBJECT_TYPE {DWORD TotalByteLength;DWORD DefinitionLength;DWORD HeaderLength;DWORD ObjectNameTitleIndex;LPWSTR ObjectNameTitle;DWORD ObjectHelpTitleIndex;LPWSTR ObjectHelpTitle;DWORD DetailLevel;DWORD NumCounters;LONG DefaultCounter;LONG NumInstances;DWORD CodePage;LARGE_INTEGER PerfTime;LARGE_INTEGER PerfFreq;};
struct _PRINTER_INFO_2W {LPWSTR pServerName;LPWSTR pPrinterName;LPWSTR pShareName;LPWSTR pPortName;LPWSTR pDriverName;LPWSTR pComment;LPWSTR pLocation;LPDEVMODEW pDevMode;LPWSTR pSepFile;LPWSTR pPrintProcessor;LPWSTR pDatatype;LPWSTR pParameters;PSECURITY_DESCRIPTOR pSecurityDescriptor;DWORD Attributes;DWORD Priority;DWORD DefaultPriority;DWORD StartTime;DWORD UntilTime;DWORD Status;DWORD cJobs;DWORD AveragePPM;};
struct _SERVER_INFO_102 {DWORD sv102_platform_id;LPTSTR sv102_name;DWORD sv102_version_major;DWORD sv102_version_minor;DWORD sv102_type;LPTSTR sv102_comment;DWORD sv102_users;LONG sv102_disc;BOOL sv102_hidden;DWORD sv102_announce;DWORD sv102_anndelta;DWORD sv102_licenses;LPTSTR sv102_userpath;};
typedef BOOL (*ENUMRESTYPEPROC)(HMODULE, LPTSTR, LONG);
typedef DWORD PM_COLLECT_PROC(LPWSTR, PVOID *, PDWORD, PDWORD);
struct tagGCP_RESULTSW {DWORD lStructSize;LPWSTR lpOutString;UINT *lpOrder;INT *lpDx;INT *lpCaretPos;LPWSTR lpClass;UINT *lpGlyphs;UINT nGlyphs;UINT nMaxFit;};
typedef BOOL (*PROPENUMPROCW)(HWND, LPCWSTR, HANDLE);
struct _FORM_INFO_1W {DWORD Flags;LPWSTR pName;SIZEL Size;RECTL ImageableArea;};
struct _LV_FINDINFOW {UINT flags;LPCWSTR psz;LPARAM lParam;POINT pt;UINT vkDirection;};
struct _USER_INFO_22 {LPWSTR usri22_name;BYTE usri22_password[16];DWORD usri22_password_age;DWORD usri22_priv;LPWSTR usri22_home_dir;LPWSTR usri22_comment;DWORD usri22_flags;LPWSTR usri22_script_path;DWORD usri22_auth_flags;LPWSTR usri22_full_name;LPWSTR usri22_usr_comment;LPWSTR usri22_parms;LPWSTR usri22_workstations;DWORD usri22_last_logon;DWORD usri22_last_logoff;DWORD usri22_acct_expires;DWORD usri22_max_storage;DWORD usri22_units_per_week;PBYTE usri22_logon_hours;DWORD usri22_bad_pw_count;DWORD usri22_num_logons;LPWSTR usri22_logon_server;DWORD usri22_country_code;DWORD usri22_code_page;};
struct _HD_ITEMW {UINT mask;int cxy;LPWSTR pszText;HBITMAP hbm;int cchTextMax;int fmt;LPARAM lParam;};
struct _TV_ITEMW {UINT mask;HTREEITEM hItem;UINT state;UINT stateMask;LPWSTR pszText;int cchTextMax;int iImage;int iSelectedImage;int cChildren;LPARAM lParam;};
struct _D68E04ECC07D7D43C298BEA99D7BA7F2 {ULONG ulReserved;LPTSTR lpszSubject;LPTSTR lpszNoteText;LPTSTR lpszMessageType;LPTSTR lpszDateReceived;LPTSTR lpszConversationID;FLAGS flFlags;lpMapiRecipDesc lpOriginator;ULONG nRecipCount;lpMapiRecipDesc lpRecips;ULONG nFileCount;lpMapiFileDesc lpFiles;};
struct _F4E2A3B3EF6C4FAA4EC9C87B4A54D83E {DWORD cbSize;HWND hwndOwner;int iShow;DWORD dwFlags;RECT rect;LPUNKNOWN punkRel;OLECHAR strNewFile[260];};
struct _INTERNET_CACHE_ENTRY_INFOW {DWORD dwStructSize;LPSTR lpszSourceUrlName;LPWSTR lpszLocalFileName;DWORD CacheEntryType;DWORD dwUseCount;DWORD dwHitRate;DWORD dwSizeLow;DWORD dwSizeHigh;FILETIME LastModifiedTime;FILETIME ExpireTime;FILETIME LastAccessTime;FILETIME LastSyncTime;PBYTE lpHeaderInfo;DWORD dwHeaderInfoSize;LPWSTR lpszFileExtension;DWORD dwReserved;};
typedef INT (*LPFN_WSASTRINGTOADDRESSW)(LPWSTR, INT, LPWSAPROTOCOL_INFOW, LPSOCKADDR, LPINT);
struct tagREBARBANDINFOW {UINT cbSize;UINT fMask;UINT fStyle;COLORREF clrFore;COLORREF clrBack;LPWSTR lpText;UINT cch;int iImage;HWND hwndChild;UINT cxMinChild;UINT cyMinChild;UINT cx;HBITMAP hbmBack;UINT wID;};
struct tagMENUITEMINFOW {UINT cbSize;UINT fMask;UINT fType;UINT fState;UINT wID;HMENU hSubMenu;HBITMAP hbmpChecked;HBITMAP hbmpUnchecked;DWORD dwItemData;LPWSTR dwTypeData;UINT cch;};
struct tagProxyFileInfo { PCInterfaceProxyVtblList *pProxyVtblList; PCInterfaceStubVtblList *pStubVtblList; PCInterfaceName *pNamesArray; IID **pDelegatedIIDs; PIIDLookup pIIDLookupRtn;unsigned short TableSize;unsigned short TableVersion;unsigned int Filler1;unsigned int Filler2;unsigned int Filler3;unsigned int Filler4;};
typedef BOOL (*ENUMRESLANGPROC)(HMODULE, LPCTSTR, LPCTSTR, WORD, LONG);
typedef BOOL (*ENUMRESNAMEPROC)(HMODULE, LPCTSTR, LPTSTR, LONG);
typedef BOOL (*PROPENUMPROCEXW)(HWND, LPWSTR, HANDLE, DWORD);
struct tagTOOLTIPTEXTW {NMHDR hdr;LPWSTR lpszText;WCHAR szText[80];HINSTANCE hinst;UINT uFlags;};
struct _STARTUPINFOW {DWORD cb;LPWSTR lpReserved;LPWSTR lpDesktop;LPWSTR lpTitle;DWORD dwX;DWORD dwY;DWORD dwXSize;DWORD dwYSize;DWORD dwXCountChars;DWORD dwYCountChars;DWORD dwFillAttribute;DWORD dwFlags;WORD wShowWindow;WORD cbReserved2;PBYTE lpReserved2;HANDLE hStdInput;HANDLE hStdOutput;HANDLE hStdError;};
struct IPersistVtbl {HRESULT (*QueryInterface)(IPersist *,  IID *, PVOID *);ULONG (*AddRef)(IPersist *);ULONG (*Release)(IPersist *);HRESULT (*GetClassID)(IPersist *, LPCLSID);};
struct _JOB_INFO_2W {DWORD JobId;LPWSTR pPrinterName;LPWSTR pMachineName;LPWSTR pUserName;LPWSTR pDocument;LPWSTR pNotifyName;LPWSTR pDatatype;LPWSTR pPrintProcessor;LPWSTR pParameters;LPWSTR pDriverName;LPDEVMODEW pDevMode;LPWSTR pStatus;PSECURITY_DESCRIPTOR pSecurityDescriptor;DWORD Status;DWORD Priority;DWORD Position;DWORD StartTime;DWORD UntilTime;DWORD TotalPages;DWORD Size;SYSTEMTIME Submitted;DWORD Time;DWORD PagesPrinted;};
struct tagTOOLINFOW {UINT cbSize;UINT uFlags;HWND hwnd;UINT uId;RECT rect;HINSTANCE hinst;LPWSTR lpszText;};
struct _86C0719967FA1585F934A358B3D4F44D {UINT cbSize;HWND hwndOwner;HINSTANCE hInstance;LPCWSTR lpszText;LPCWSTR lpszCaption;DWORD dwStyle;LPCWSTR lpszIcon;DWORD dwContextHelpId;MSGBOXCALLBACK lpfnMsgBoxCallback;DWORD dwLanguageId;};
typedef INT (*LPFN_WSAADDRESSTOSTRINGW)(LPSOCKADDR, DWORD, LPWSAPROTOCOL_INFOW, LPWSTR, LPDWORD);
struct _SHFILEOPSTRUCTW {HWND hwnd;UINT wFunc;LPCWSTR pFrom;LPCWSTR pTo;FILEOP_FLAGS fFlags;BOOL fAnyOperationsAborted;PVOID hNameMappings;LPCWSTR lpszProgressTitle;};
struct tagCHOOSECOLORA {DWORD lStructSize;HWND hwndOwner;HWND hInstance;COLORREF rgbResult;COLORREF *lpCustColors;DWORD Flags;LPARAM lCustData;LPCCHOOKPROC lpfnHook;LPCSTR lpTemplateName;};
struct tagCHOOSECOLORW {DWORD lStructSize;HWND hwndOwner;HWND hInstance;COLORREF rgbResult;COLORREF *lpCustColors;DWORD Flags;LPARAM lCustData;LPCCHOOKPROC lpfnHook;LPCWSTR lpTemplateName;};
struct IErrorInfoVtbl {HRESULT (*QueryInterface)(IErrorInfo *,  IID *, PVOID *);ULONG (*AddRef)(IErrorInfo *);ULONG (*Release)(IErrorInfo *);HRESULT (*GetGUID)(IErrorInfo *,  IID *);HRESULT (*GetSource)(IErrorInfo *, BSTR *);HRESULT (*GetDescription)(IErrorInfo *, BSTR *);HRESULT (*GetHelpContext)(IErrorInfo *, DWORD *);};
struct tagEXCEPINFO {WORD wCode;WORD wReserved;BSTR bstrSource;BSTR bstrDescription;BSTR bstrHelpFile;DWORD dwHelpContext;PVOID pvReserved;HRESULT (*pfnDeferredFillIn)(struct tagEXCEPINFO *);SCODE scode;};
struct IRunnableObjectVtbl {HRESULT (*QueryInterface)(IRunnableObject *,  IID *, PVOID *);ULONG (*AddRef)(IRunnableObject *);ULONG (*Release)(IRunnableObject *);HRESULT (*GetRunningClass)(IRunnableObject *, LPCLSID);HRESULT (*Run)(IRunnableObject *, LPBC);BOOL (*IsRunning)(IRunnableObject *);HRESULT (*LockRunning)(IRunnableObject *, BOOL, BOOL);HRESULT (*SetContainedObject)(IRunnableObject *, BOOL);};
struct IServerSecurityVtbl {HRESULT (*QueryInterface)(IServerSecurity *,  IID *, PVOID *);ULONG (*AddRef)(IServerSecurity *);ULONG (*Release)(IServerSecurity *);HRESULT (*QueryBlanket)(IServerSecurity *, PDWORD, PDWORD, OLECHAR **, PDWORD, PDWORD, RPC_AUTHZ_HANDLE *, PDWORD *);HRESULT (*ImpersonateClient)(IServerSecurity *);HRESULT (*RevertToSelf)(IServerSecurity *);HRESULT (*IsImpersonating)(IServerSecurity *);};
struct ILayoutStorageVtbl {HRESULT (*QueryInterface)(ILayoutStorage *,  IID *, PVOID *);ULONG (*AddRef)(ILayoutStorage *);ULONG (*Release)(ILayoutStorage *);HRESULT (*LayoutScript)(ILayoutStorage *, STORAGELAYOUT *, DWORD, DWORD);HRESULT (*BeginMonitor)(ILayoutStorage *);HRESULT (*EndMonitor)(ILayoutStorage *);HRESULT (*ReLayoutDocfile)(ILayoutStorage *, OLECHAR *);};
struct IPersistMemoryVtbl {HRESULT (*QueryInterface)(IPersistMemory *,  IID *, PVOID *);ULONG (*AddRef)(IPersistMemory *);ULONG (*Release)(IPersistMemory *);HRESULT (*GetClassID)(IPersistMemory *, LPCLSID);HRESULT (*IsDirty)(IPersistMemory *);HRESULT (*Load)(IPersistMemory *, PVOID, ULONG);HRESULT (*Save)(IPersistMemory *, PVOID, BOOL, ULONG);HRESULT (*GetSizeMax)(IPersistMemory *, PULONG);HRESULT (*InitNew)(IPersistMemory *);};
struct tagCREATESTRUCT {LPVOID lpCreateParams;HINSTANCE hInstance;HMENU hMenu;HWND hwndParent;int cy;int cx;int y;int x;LONG style;LPCTSTR lpszName;LPCTSTR lpszClass;DWORD dwExStyle;};
struct external_pinfo {pid_t pid;pid_t ppid;HANDLE hProcess;DWORD dwProcessId;DWORD dwSpawnedProcessId;uid_t uid;gid_t gid;pid_t pgid;pid_t sid;int ctty;mode_t umask;int start_time;struct rusage rusage_self;struct rusage rusage_children;char progname[260];DWORD strace_mask;HANDLE strace_file;DWORD process_state;};
struct _WSAQuerySetW {DWORD dwSize;LPWSTR lpszServiceInstanceName;LPGUID lpServiceClassId;LPWSAVERSION lpVersion;LPWSTR lpszComment;DWORD dwNameSpace;LPGUID lpNSProviderId;LPWSTR lpszContext;DWORD dwNumberOfProtocols;LPAFPROTOCOLS lpafpProtocols;LPWSTR lpszQueryString;DWORD dwNumberOfCsAddrs;LPCSADDR_INFO lpcsaBuffer;DWORD dwOutputFlags;LPBLOB lpBlob;};
struct tagMETHODDATA {OLECHAR *szName;PARAMDATA *ppdata;DISPID dispid;UINT iMeth;CALLCONV cc;UINT cArgs;WORD wFlags;VARTYPE vtReturn;};
struct _WNDCLASSEXW {UINT cbSize;UINT style;WNDPROC lpfnWndProc;int cbClsExtra;int cbWndExtra;HANDLE hInstance;HICON hIcon;HCURSOR hCursor;HBRUSH hbrBackground;LPCWSTR lpszMenuName;LPCWSTR lpszClassName;HICON hIconSm;};
struct _WNDCLASSW {UINT style;WNDPROC lpfnWndProc;int cbClsExtra;int cbWndExtra;HANDLE hInstance;HICON hIcon;HCURSOR hCursor;HBRUSH hbrBackground;LPCWSTR lpszMenuName;LPCWSTR lpszClassName;};
struct tagCCINFOW {WCHAR szClass[32];DWORD flOptions;WCHAR szDesc[32];UINT cxDefault;UINT cyDefault;DWORD flStyleDefault;DWORD flExtStyleDefault;DWORD flCtrlTypeMask;WCHAR szTextDefault[256];INT cStyleFlags;LPCCSTYLEFLAGW aStyleFlags;LPFNCCSTYLEW lpfnStyle;LPFNCCSIZETOTEXTW lpfnSizeToText;DWORD dwReserved1;DWORD dwReserved2;};
struct tagOFNA {DWORD lStructSize;HWND hwndOwner;HINSTANCE hInstance;LPCSTR lpstrFilter;LPSTR lpstrCustomFilter;DWORD nMaxCustFilter;DWORD nFilterIndex;LPSTR lpstrFile;DWORD nMaxFile;LPSTR lpstrFileTitle;DWORD nMaxFileTitle;LPCSTR lpstrInitialDir;LPCSTR lpstrTitle;DWORD Flags;WORD nFileOffset;WORD nFileExtension;LPCSTR lpstrDefExt;DWORD lCustData;LPOFNHOOKPROC lpfnHook;LPCSTR lpTemplateName;};
struct tagOFNW {DWORD lStructSize;HWND hwndOwner;HINSTANCE hInstance;LPCWSTR lpstrFilter;LPWSTR lpstrCustomFilter;DWORD nMaxCustFilter;DWORD nFilterIndex;LPWSTR lpstrFile;DWORD nMaxFile;LPWSTR lpstrFileTitle;DWORD nMaxFileTitle;LPCWSTR lpstrInitialDir;LPCWSTR lpstrTitle;DWORD Flags;WORD nFileOffset;WORD nFileExtension;LPCWSTR lpstrDefExt;DWORD lCustData;LPOFNHOOKPROC lpfnHook;LPCWSTR lpTemplateName;};
struct _03B47C5F41869B4DA4566C38D2C89E1D {DWORD lStructSize;HWND hwndOwner;HINSTANCE hInstance;DWORD Flags;LPWSTR lpstrFindWhat;LPWSTR lpstrReplaceWith;WORD wFindWhatLen;WORD wReplaceWithLen;LPARAM lCustData;LPFRHOOKPROC lpfnHook;LPCWSTR lpTemplateName;};
struct _6F0F0D71FED89E7A00C3574FDC894A08 {DWORD lStructSize;HWND hwndOwner;HINSTANCE hInstance;DWORD Flags;LPSTR lpstrFindWhat;LPSTR lpstrReplaceWith;WORD wFindWhatLen;WORD wReplaceWithLen;LPARAM lCustData;LPFRHOOKPROC lpfnHook;LPCSTR lpTemplateName;};
struct IPersistPropertyBagVtbl {HRESULT (*QueryInterface)(IPersistPropertyBag *,  IID *, PVOID *);ULONG (*AddRef)(IPersistPropertyBag *);ULONG (*Release)(IPersistPropertyBag *);HRESULT (*GetClassID)(IPersistPropertyBag *, LPCLSID);HRESULT (*InitNew)(IPersistPropertyBag *);HRESULT (*Load)(IPersistPropertyBag *, LPPROPERTYBAG, LPERRORLOG);HRESULT (*Save)(IPersistPropertyBag *, LPPROPERTYBAG, BOOL, BOOL);};
struct IPropertySetStorageVtbl {HRESULT (*QueryInterface)(IPropertySetStorage *,  IID *, PVOID *);ULONG (*AddRef)(IPropertySetStorage *);ULONG (*Release)(IPropertySetStorage *);HRESULT (*Create)(IPropertySetStorage *, REFFMTID, CLSID *, DWORD, DWORD, LPPROPERTYSTORAGE *);HRESULT (*Open)(IPropertySetStorage *, REFFMTID, DWORD, LPPROPERTYSTORAGE *);HRESULT (*Delete)(IPropertySetStorage *, REFFMTID);HRESULT (*Enum)(IPropertySetStorage *, IEnumSTATPROPSETSTG **);};
struct IPersistStreamInitVtbl {HRESULT (*QueryInterface)(IPersistStreamInit *,  IID *, PVOID *);ULONG (*AddRef)(IPersistStreamInit *);ULONG (*Release)(IPersistStreamInit *);HRESULT (*GetClassID)(IPersistStreamInit *, LPCLSID);HRESULT (*IsDirty)(IPersistStreamInit *);HRESULT (*Load)(IPersistStreamInit *, LPSTREAM);HRESULT (*Save)(IPersistStreamInit *, LPSTREAM, BOOL);HRESULT (*GetSizeMax)(IPersistStreamInit *, PULARGE_INTEGER);HRESULT (*InitNew)(IPersistStreamInit *);};
struct _SHELLEXECUTEINFOW {DWORD cbSize;ULONG fMask;HWND hwnd;LPCWSTR lpVerb;LPCWSTR lpFile;LPCWSTR lpParameters;LPCWSTR lpDirectory;int nShow;HINSTANCE hInstApp;PVOID lpIDList;LPCWSTR lpClass;HKEY hkeyClass;DWORD dwHotKey;HANDLE hIcon;HANDLE hProcess;};
struct tagOLEUIEDITLINKSW {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCWSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCWSTR lpszTemplate;HRSRC hResource;LPOLEUILINKCONTAINERW lpOleUILinkContainer;};
struct tagOLEUIBUSYW {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCWSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCWSTR lpszTemplate;HRSRC hResource;HTASK hTask;HWND *lphWndDialog;};
struct tagFUNCDESC {MEMBERID memid;SCODE *lprgscode;ELEMDESC *lprgelemdescParam;FUNCKIND funckind;INVOKEKIND invkind;CALLCONV callconv;SHORT cParams;SHORT cParamsOpt;SHORT oVft;SHORT cScodes;ELEMDESC elemdescFunc;WORD wFuncFlags;};
struct _MMIOINFO {DWORD dwFlags;FOURCC fccIOProc;LPMMIOPROC pIOProc;UINT wErrorRet;HTASK htask;LONG cchBuffer;HPSTR pchBuffer;HPSTR pchNext;HPSTR pchEndRead;HPSTR pchEndWrite;LONG lBufOffset;LONG lDiskOffset;DWORD adwInfo[3];DWORD dwReserved1;DWORD dwReserved2;HMMIO hmmio;};
struct IOleUILinkContainerWVtbl {HRESULT (*QueryInterface)(IOleUILinkContainerW *,  IID *, PVOID *);ULONG (*AddRef)(IOleUILinkContainerW *);ULONG (*Release)(IOleUILinkContainerW *);DWORD (*GetNextLink)(IOleUILinkContainerW *, DWORD dwLink);HRESULT (*SetLinkUpdateOptions)(IOleUILinkContainerW *, DWORD, DWORD);HRESULT (*GetLinkUpdateOptions)(IOleUILinkContainerW *, DWORD, PDWORD);HRESULT (*SetLinkSource)(IOleUILinkContainerW *, DWORD, LPWSTR, ULONG, PULONG, BOOL);HRESULT (*GetLinkSource)(IOleUILinkContainerW *, DWORD, LPWSTR *, PULONG, LPWSTR *, LPWSTR *, BOOL *, BOOL *);HRESULT (*OpenLinkSource)(IOleUILinkContainerW *, DWORD);HRESULT (*UpdateLink)(IOleUILinkContainerW *, DWORD, BOOL, BOOL);HRESULT (*CancelLink)(IOleUILinkContainerW *, DWORD);};
struct IOleUILinkInfoWVtbl {HRESULT (*QueryInterface)(IOleUILinkInfoW *,  IID *, PVOID *);ULONG (*AddRef)(IOleUILinkInfoW *);ULONG (*Release)(IOleUILinkInfoW *);DWORD (*GetNextLink)(IOleUILinkInfoW *, DWORD);HRESULT (*SetLinkUpdateOptions)(IOleUILinkInfoW *, DWORD, DWORD);HRESULT (*GetLinkUpdateOptions)(IOleUILinkInfoW *, DWORD, DWORD *);HRESULT (*SetLinkSource)(IOleUILinkInfoW *, DWORD, LPWSTR, ULONG, PULONG, BOOL);HRESULT (*GetLinkSource)(IOleUILinkInfoW *, DWORD, LPWSTR *, PULONG, LPWSTR *, LPWSTR *, BOOL *, BOOL *);HRESULT (*OpenLinkSource)(IOleUILinkInfoW *, DWORD);HRESULT (*UpdateLink)(IOleUILinkInfoW *, DWORD, BOOL, BOOL);HRESULT (*CancelLink)(IOleUILinkInfoW *, DWORD);HRESULT (*GetLastUpdate)(IOleUILinkInfoW *, DWORD, FILETIME *);};
struct IClassFactory2Vtbl {HRESULT (*QueryInterface)(IClassFactory2 *,  IID *, PVOID *);ULONG (*AddRef)(IClassFactory2 *);ULONG (*Release)(IClassFactory2 *);HRESULT (*CreateInstance)(IClassFactory2 *, LPUNKNOWN,  IID *, PVOID *);HRESULT (*LockServer)(IClassFactory2 *, BOOL);HRESULT (*GetLicInfo)(IClassFactory2 *, LPLICINFO);HRESULT (*RequestLicKey)(IClassFactory2 *, DWORD, BSTR *);HRESULT (*CreateInstanceLic)(IClassFactory2 *, LPUNKNOWN, LPUNKNOWN,  IID *, BSTR, PVOID *);};
struct _PROPSHEETHEADERW {DWORD dwSize;DWORD dwFlags;HWND hwndParent;HINSTANCE hInstance;union _PROPSHEETHEADERW___0FB566F30614F599529D00140F4CD87D u;LPCWSTR pszCaption;UINT nPages;union _PROPSHEETHEADERW___6475730AE6DAD1B8D6E46E57DCE1E457 u2;union _PROPSHEETHEADERW___C62D413765EFFC4667F5A15937CA2710 u3;PFNPROPSHEETCALLBACK pfnCallback;};
struct _PROPSHEETPAGEW {DWORD dwSize;DWORD dwFlags;HINSTANCE hInstance;union _PROPSHEETPAGEW___516F7AC5631E67C03EDCA9BDA4E87AED u;union _PROPSHEETPAGEW___0FB566F30614F599529D00140F4CD87D u2;LPCWSTR pszTitle;DLGPROC pfnDlgProc;LPARAM lParam;UINT (*pfnCallback)(HWND, UINT, struct _PROPSHEETPAGEW *);UINT *pcRefParent;};
struct tagPDA {DWORD lStructSize;HWND hwndOwner;HANDLE hDevMode;HANDLE hDevNames;HDC hDC;DWORD Flags;WORD nFromPage;WORD nToPage;WORD nMinPage;WORD nMaxPage;WORD nCopies;HINSTANCE hInstance;DWORD lCustData;LPPRINTHOOKPROC lpfnPrintHook;LPSETUPHOOKPROC lpfnSetupHook;LPCSTR lpPrintTemplateName;LPCSTR lpSetupTemplateName;HANDLE hPrintTemplate;HANDLE hSetupTemplate;};
struct tagPDW {DWORD lStructSize;HWND hwndOwner;HANDLE hDevMode;HANDLE hDevNames;HDC hDC;DWORD Flags;WORD nFromPage;WORD nToPage;WORD nMinPage;WORD nMaxPage;WORD nCopies;HINSTANCE hInstance;DWORD lCustData;LPPRINTHOOKPROC lpfnPrintHook;LPSETUPHOOKPROC lpfnSetupHook;LPCWSTR lpPrintTemplateName;LPCWSTR lpSetupTemplateName;HANDLE hPrintTemplate;HANDLE hSetupTemplate;};
struct IClientSecurityVtbl {HRESULT (*QueryInterface)(IClientSecurity *,  IID *, PVOID *);ULONG (*AddRef)(IClientSecurity *);ULONG (*Release)(IClientSecurity *);HRESULT (*QueryBlanket)(IClientSecurity *, PVOID, PDWORD, PDWORD, OLECHAR **, PDWORD, PDWORD, RPC_AUTH_IDENTITY_HANDLE **, PDWORD *);HRESULT (*SetBlanket)(IClientSecurity *, PVOID, DWORD, DWORD, LPWSTR, DWORD, DWORD, RPC_AUTH_IDENTITY_HANDLE *, DWORD);HRESULT (*CopyProxy)(IClientSecurity *, LPUNKNOWN, LPUNKNOWN *);};
struct tagOLEUICHANGEICONW {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCWSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCWSTR lpszTemplate;HRSRC hResource;HGLOBAL hMetaPict;CLSID clsid;WCHAR szIconExe[260];int cchIconExe;};
struct IStorageVtbl {HRESULT (*QueryInterface)(IStorage *,  IID *, PVOID *);ULONG (*AddRef)(IStorage *);ULONG (*Release)(IStorage *);HRESULT (*CreateStream)(IStorage *, LPCWSTR, DWORD, DWORD, DWORD, IStream **);HRESULT (*OpenStream)(IStorage *, LPCWSTR, PVOID, DWORD, DWORD, IStream **);HRESULT (*CreateStorage)(IStorage *, LPCWSTR, DWORD, DWORD, DWORD, IStorage **);HRESULT (*OpenStorage)(IStorage *, LPCWSTR, IStorage *, DWORD, SNB, DWORD, IStorage **);HRESULT (*CopyTo)(IStorage *, DWORD,  IID *, SNB, IStorage *);HRESULT (*MoveElementTo)(IStorage *, LPCWSTR, IStorage *, LPCWSTR, DWORD);HRESULT (*Commit)(IStorage *, DWORD);HRESULT (*Revert)(IStorage *);HRESULT (*EnumElements)(IStorage *, DWORD, PVOID, DWORD, IEnumSTATSTG **);HRESULT (*DestroyElement)(IStorage *, LPCWSTR);HRESULT (*RenameElement)(IStorage *, LPCWSTR, LPCWSTR);HRESULT (*SetElementTimes)(IStorage *, LPCWSTR,  FILETIME *,  FILETIME *,  FILETIME *);HRESULT (*SetClass)(IStorage *,  CLSID *);HRESULT (*SetStateBits)(IStorage *, DWORD, DWORD);HRESULT (*Stat)(IStorage *, STATSTG *, DWORD);};
struct IFontVtbl {HRESULT (*QueryInterface)(IFont *,  IID *, PVOID *);ULONG (*AddRef)(IFont *);ULONG (*Release)(IFont *);HRESULT (*get_Name)(IFont *, BSTR *);HRESULT (*put_Name)(IFont *, BSTR);HRESULT (*get_Size)(IFont *, CY *);HRESULT (*put_Size)(IFont *, CY);HRESULT (*get_Bold)(IFont *, BOOL *);HRESULT (*put_Bold)(IFont *, BOOL);HRESULT (*get_Italic)(IFont *, BOOL *);HRESULT (*put_Italic)(IFont *, BOOL);HRESULT (*get_Underline)(IFont *, BOOL *);HRESULT (*put_Underline)(IFont *, BOOL);HRESULT (*get_Strikethrough)(IFont *, BOOL *);HRESULT (*put_Strikethrough)(IFont *, BOOL);HRESULT (*get_Weight)(IFont *, short *);HRESULT (*put_Weight)(IFont *, short);HRESULT (*get_Charset)(IFont *, short *);HRESULT (*put_Charset)(IFont *, short);HRESULT (*get_hFont)(IFont *, HFONT *);HRESULT (*Clone)(IFont *, IFont **);HRESULT (*IsEqual)(IFont *, IFont *);HRESULT (*SetRatio)(IFont *, int, int);HRESULT (*QueryTextMetrics)(IFont *, LPTEXTMETRICOLE);HRESULT (*AddRefHfont)(IFont *, HFONT);HRESULT (*ReleaseHfont)(IFont *, HFONT);HRESULT (*SetHdc)(IFont *, HDC);};
struct tagPSDA {DWORD lStructSize;HWND hwndOwner;HGLOBAL hDevMode;HGLOBAL hDevNames;DWORD Flags;POINT ptPaperSize;RECT rtMinMargin;RECT rtMargin;HINSTANCE hInstance;LPARAM lCustData;LPPAGESETUPHOOK lpfnPageSetupHook;LPPAGEPAINTHOOK lpfnPagePaintHook;LPCSTR lpPageSetupTemplateName;HGLOBAL hPageSetupTemplate;};
struct tagPSDW {DWORD lStructSize;HWND hwndOwner;HGLOBAL hDevMode;HGLOBAL hDevNames;DWORD Flags;POINT ptPaperSize;RECT rtMinMargin;RECT rtMargin;HINSTANCE hInstance;LPARAM lCustData;LPPAGESETUPHOOK lpfnPageSetupHook;LPPAGEPAINTHOOK lpfnPagePaintHook;LPCWSTR lpPageSetupTemplateName;HGLOBAL hPageSetupTemplate;};
struct IPerPropertyBrowsingVtbl {HRESULT (*QueryInterface)(IPerPropertyBrowsing *,  IID *, PVOID *);ULONG (*AddRef)(IPerPropertyBrowsing *);ULONG (*Release)(IPerPropertyBrowsing *);HRESULT (*GetDisplayString)(IPerPropertyBrowsing *, DISPID, BSTR *);HRESULT (*MapPropertyToPage)(IPerPropertyBrowsing *, DISPID, LPCLSID);HRESULT (*GetPredefinedStrings)(IPerPropertyBrowsing *, DISPID, CALPOLESTR *, CADWORD *);HRESULT (*GetPredefinedValue)(IPerPropertyBrowsing *, DISPID, DWORD, VARIANT *);};
struct tagOLEUICHANGESOURCEW {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCWSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCWSTR lpszTemplate;HRSRC hResource;OPENFILENAMEW *lpOFN;DWORD dwReserved1[4];LPOLEUILINKCONTAINERW lpOleUILinkContainer;DWORD dwLink;LPWSTR lpszDisplayName;ULONG nFileLength;LPWSTR lpszFrom;LPWSTR lpszTo;};
struct tagCHOOSEFONTA {DWORD lStructSize;HWND hwndOwner;HDC hDC;LPLOGFONTA lpLogFont;INT iPointSize;DWORD Flags;DWORD rgbColors;LPARAM lCustData;LPCFHOOKPROC lpfnHook;LPCSTR lpTemplateName;HINSTANCE hInstance;LPSTR lpszStyle;WORD nFontType;WORD ___MISSING_ALIGNMENT__;INT nSizeMin;INT nSizeMax;};
struct tagCHOOSEFONTW {DWORD lStructSize;HWND hwndOwner;HDC hDC;LPLOGFONTW lpLogFont;INT iPointSize;DWORD Flags;DWORD rgbColors;LPARAM lCustData;LPCFHOOKPROC lpfnHook;LPCWSTR lpTemplateName;HINSTANCE hInstance;LPWSTR lpszStyle;WORD nFontType;WORD ___MISSING_ALIGNMENT__;INT nSizeMin;INT nSizeMax;};
struct IPropertyStorageVtbl {HRESULT (*QueryInterface)(IPropertyStorage *,  IID *, PVOID *);ULONG (*AddRef)(IPropertyStorage *);ULONG (*Release)(IPropertyStorage *);HRESULT (*ReadMultiple)(IPropertyStorage *, ULONG,  PROPSPEC *, PROPVARIANT *);HRESULT (*WriteMultiple)(IPropertyStorage *, ULONG,  PROPSPEC *, PROPVARIANT *, PROPID);HRESULT (*DeleteMultiple)(IPropertyStorage *, ULONG,  PROPSPEC *);HRESULT (*ReadPropertyNames)(IPropertyStorage *, ULONG,  PROPID *, LPWSTR *);HRESULT (*WritePropertyNames)(IPropertyStorage *, ULONG,  PROPID *,  LPWSTR *);HRESULT (*DeletePropertyNames)(IPropertyStorage *, ULONG,  PROPID *);HRESULT (*SetClass)(IPropertyStorage *,  CLSID *);HRESULT (*Commit)(IPropertyStorage *, DWORD);HRESULT (*Revert)(IPropertyStorage *);HRESULT (*Enum)(IPropertyStorage *, IEnumSTATPROPSTG **);HRESULT (*Stat)(IPropertyStorage *, STATPROPSTG *);HRESULT (*SetTimes)(IPropertyStorage *,  FILETIME *,  FILETIME *,  FILETIME *);};
struct IOleUIObjInfoAVtbl {HRESULT (*QueryInterface)(IOleUIObjInfoA *,  IID *, PVOID *);ULONG (*AddRef)(IOleUIObjInfoA *);ULONG (*Release)(IOleUIObjInfoA *);HRESULT (*GetObjectInfo)(IOleUIObjInfoA *, DWORD, PDWORD, LPSTR *, LPSTR *, LPSTR *, LPSTR *);HRESULT (*GetConvertInfo)(IOleUIObjInfoA *, DWORD, CLSID *, PWORD, CLSID *, LPCLSID *, UINT *);HRESULT (*ConvertObject)(IOleUIObjInfoA *, DWORD,  CLSID *);HRESULT (*GetViewInfo)(IOleUIObjInfoA *, DWORD, HGLOBAL *, PDWORD, int *);HRESULT (*SetViewInfo)(IOleUIObjInfoA *, DWORD, HGLOBAL, DWORD, int, BOOL);};
struct IOleUIObjInfoWVtbl {HRESULT (*QueryInterface)(IOleUIObjInfoW *,  IID *, PVOID *);ULONG (*AddRef)(IOleUIObjInfoW *);ULONG (*Release)(IOleUIObjInfoW *);HRESULT (*GetObjectInfo)(IOleUIObjInfoW *, DWORD, PDWORD, LPWSTR *, LPWSTR *, LPWSTR *, LPWSTR *);HRESULT (*GetConvertInfo)(IOleUIObjInfoW *, DWORD, CLSID *, PWORD, CLSID *, LPCLSID *, UINT *);HRESULT (*ConvertObject)(IOleUIObjInfoW *, DWORD,  CLSID *);HRESULT (*GetViewInfo)(IOleUIObjInfoW *, DWORD, HGLOBAL *, PDWORD, int *);HRESULT (*SetViewInfo)(IOleUIObjInfoW *, DWORD, HGLOBAL, DWORD, int, BOOL);};
union tagVARIANT______8917340B7A8DB9BEA85031381048F94D___3FCBCE0E1D38ED64A5F05F924A43CE06 {int lVal;unsigned char bVal;short iVal;float fltVal;double dblVal;VARIANT_BOOL boolVal;SCODE scode;CY cyVal;DATE date;BSTR bstrVal;IUnknown *punkVal;LPDISPATCH pdispVal;SAFEARRAY *parray;unsigned char *pbVal;short *piVal;int *plVal;float *pfltVal;double *pdblVal;VARIANT_BOOL *pboolVal;SCODE *pscode;CY *pcyVal;DATE *pdate;BSTR *pbstrVal;IUnknown **ppunkVal;LPDISPATCH *ppdispVal;SAFEARRAY **pparray;struct tagVARIANT *pvarVal;void *byref;CHAR cVal;USHORT uiVal;ULONG ulVal;INT intVal;UINT uintVal;DECIMAL *pdecVal;CHAR *pcVal;USHORT *puiVal;ULONG *pulVal;INT *pintVal;UINT *puintVal;tagVARIANT_________3FCBCE0E1D38ED64A5F05F924A43CE06___3D6F035A95DCF735295BE71D0E642E57 __anonymous0;};
struct tagOLEUIPASTESPECIALA {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;LPDATAOBJECT lpSrcDataObj;LPOLEUIPASTEENTRYA arrPasteEntries;int cPasteEntries;UINT *arrLinkTypes;int cLinkTypes;UINT cClsidExclude;LPCLSID lpClsidExclude;int nSelectedIndex;BOOL fLink;HGLOBAL hMetaPict;SIZEL sizel;};
struct tagOLEUIPASTESPECIALW {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCWSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCWSTR lpszTemplate;HRSRC hResource;LPDATAOBJECT lpSrcDataObj;LPOLEUIPASTEENTRYW arrPasteEntries;int cPasteEntries;UINT *arrLinkTypes;int cLinkTypes;UINT cClsidExclude;LPCLSID lpClsidExclude;int nSelectedIndex;BOOL fLink;HGLOBAL hMetaPict;SIZEL sizel;};
struct tagOLEUICONVERTA {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;CLSID clsid;CLSID clsidConvertDefault;CLSID clsidActivateDefault;CLSID clsidNew;DWORD dvAspect;WORD wFormat;BOOL fIsLinkedObject;HGLOBAL hMetaPict;LPSTR lpszUserType;BOOL fObjectsIconChanged;LPSTR lpszDefLabel;UINT cClsidExclude;LPCLSID lpClsidExclude;};
struct tagOLEUICONVERTW {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCWSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCWSTR lpszTemplate;HRSRC hResource;CLSID clsid;CLSID clsidConvertDefault;CLSID clsidActivateDefault;CLSID clsidNew;DWORD dvAspect;WORD wFormat;BOOL fIsLinkedObject;HGLOBAL hMetaPict;LPWSTR lpszUserType;BOOL fObjectsIconChanged;LPWSTR lpszDefLabel;UINT cClsidExclude;LPCLSID lpClsidExclude;};
struct IShellLinkWVtbl {HRESULT (*QueryInterface)(IShellLinkW *,  IID *, PVOID *);ULONG (*AddRef)(IShellLinkW *);ULONG (*Release)(IShellLinkW *);HRESULT (*GetPath)(IShellLinkW *, LPSTR, int, WIN32_FIND_DATAW *, DWORD);HRESULT (*GetIDList)(IShellLinkW *, LPITEMIDLIST *);HRESULT (*SetIDList)(IShellLinkW *, LPCITEMIDLIST);HRESULT (*GetDescription)(IShellLinkW *, LPWSTR, int);HRESULT (*SetDescription)(IShellLinkW *, LPCWSTR);HRESULT (*GetWorkingDirectory)(IShellLinkW *, LPWSTR, int);HRESULT (*SetWorkingDirectory)(IShellLinkW *, LPCWSTR);HRESULT (*GetArguments)(IShellLinkW *, LPWSTR, int);HRESULT (*SetArguments)(IShellLinkW *, LPCWSTR);HRESULT (*GetHotkey)(IShellLinkW *, PWORD);HRESULT (*SetHotkey)(IShellLinkW *, WORD);HRESULT (*GetShowCmd)(IShellLinkW *, int *);HRESULT (*SetShowCmd)(IShellLinkW *, int);HRESULT (*GetIconLocation)(IShellLinkW *, LPWSTR, int, int *);HRESULT (*SetIconLocation)(IShellLinkW *, LPCWSTR, int);HRESULT (*SetRelativePath)(IShellLinkW *, LPCWSTR, DWORD);HRESULT (*Resolve)(IShellLinkW *, HWND, DWORD);HRESULT (*SetPath)(IShellLinkW *, LPCWSTR);};
struct tagOLEUIINSERTOBJECTA {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCSTR lpszTemplate;HRSRC hResource;CLSID clsid;LPSTR lpszFile;UINT cchFile;UINT cClsidExclude;LPCLSID lpClsidExclude;IID iid;DWORD oleRender;LPFORMATETC lpFormatEtc;LPOLECLIENTSITE lpIOleClientSite;LPSTORAGE lpIStorage;PVOID *ppvObj;SCODE sc;HGLOBAL hMetaPict;};
struct tagOLEUIINSERTOBJECTW {DWORD cbStruct;DWORD dwFlags;HWND hWndOwner;LPCWSTR lpszCaption;LPFNOLEUIHOOK lpfnHook;LPARAM lCustData;HINSTANCE hInstance;LPCWSTR lpszTemplate;HRSRC hResource;CLSID clsid;LPWSTR lpszFile;UINT cchFile;UINT cClsidExclude;LPCLSID lpClsidExclude;IID iid;DWORD oleRender;LPFORMATETC lpFormatEtc;LPOLECLIENTSITE lpIOleClientSite;LPSTORAGE lpIStorage;PVOID *ppvObj;SCODE sc;HGLOBAL hMetaPict;};
struct IRichEditOleCallbackVtbl {HRESULT (*QueryInterface)(IRichEditOleCallback *,  IID *, PVOID *);ULONG (*AddRef)(IRichEditOleCallback *);ULONG (*Release)(IRichEditOleCallback *);HRESULT (*GetNewStorage)(IRichEditOleCallback *, LPSTORAGE *);HRESULT (*GetInPlaceContext)(IRichEditOleCallback *, LPOLEINPLACEFRAME *, LPOLEINPLACEUIWINDOW *, LPOLEINPLACEFRAMEINFO);HRESULT (*ShowContainerUI)(IRichEditOleCallback *, BOOL);HRESULT (*QueryInsertObject)(IRichEditOleCallback *, LPCLSID, LPSTORAGE, LONG);HRESULT (*DeleteObject)(IRichEditOleCallback *, LPOLEOBJECT);HRESULT (*QueryAcceptData)(IRichEditOleCallback *, LPDATAOBJECT, CLIPFORMAT *, DWORD, BOOL, HGLOBAL);HRESULT (*ContextSensitiveHelp)(IRichEditOleCallback *, BOOL);HRESULT (*GetClipboardData)(IRichEditOleCallback *, CHARRANGE *, DWORD, LPDATAOBJECT *);HRESULT (*GetDragDropEffect)(IRichEditOleCallback *, BOOL, DWORD, PDWORD);HRESULT (*GetContextMenu)(IRichEditOleCallback *, WORD, LPOLEOBJECT, CHARRANGE *, HMENU *);};
union tagPROPVARIANT___35FA5FC55477E54363241AFA3482EE1E {UCHAR bVal;short iVal;USHORT uiVal;VARIANT_BOOL boolVal;int lVal;ULONG ulVal;float fltVal;SCODE scode;LARGE_INTEGER hVal;ULARGE_INTEGER uhVal;double dblVal;CY cyVal;DATE date;FILETIME filetime;CLSID *puuid;BLOB blob;CLIPDATA *pclipdata;LPSTREAM pStream;LPSTORAGE pStorage;BSTR bstrVal;BSTRBLOB bstrblobVal;LPSTR pszVal;LPWSTR pwszVal;CAUB caub;CAI cai;CAUI caui;CABOOL cabool;CAL cal;CAUL caul;CAFLT caflt;CASCODE cascode;CAH cah;CAUH cauh;CADBL cadbl;CACY cacy;CADATE cadate;CAFILETIME cafiletime;CACLSID cauuid;CACLIPDATA caclipdata;CABSTR cabstr;CABSTRBLOB cabstrblob;CALPSTR calpstr;CALPWSTR calpwstr;CAPROPVARIANT capropvar;};
struct _098CCDCB9074DBE2AEBC1B4026CD72FD {LPCTSTR Version;};
struct _21B90258E17C8B6D2BC61A88DF74B5FB {LPCTSTR Site;};
struct _30CC7D53408649846FD423BE19D3AD21 {LPCTSTR QuestionType;LPCTSTR QuestionText;};
struct _60326525EFFC6265B33A0784E3C361D7 {LPCTSTR Text;};
struct _9EEC6D4C8F692379AA2A6356D0C3C3FC {LPCTSTR Provider;};
struct _B8380904D5E4DBEF1FA17159C4574D89 {LPCTSTR ShortAbstract;LPCTSTR AbstractFile;};
struct _C25693052C43ED6AA003F87DB66344AA {LPCTSTR Organization;};
struct _DE8A226FBF6958721EC6E17746E96A38 {LPCTSTR Location;};
struct _E42E7BED0EE5193A4D0BC9D45E2008A3 {LPCTSTR Comment;LPCTSTR EmailAddress;};
struct _LOCALGROUP_MEMBERS_INFO_3 {LPWSTR lgrmi3_domainandname;};
struct _LOCALGROUP_USERS_INFO_0 {LPWSTR lgrui0_name;};
struct _PRINTPROCESSOR_INFO_1W {LPWSTR pName;};
struct _USER_MODALS_INFO_1007 {LPWSTR usrmod1007_primary;};
struct _LOCALGROUP_INFO_1002 {LPWSTR lgrpi1002_comment;};
struct _UNIVERSAL_NAME_INFOW {LPWSTR lpUniversalName;};
struct _WKSTA_USER_INFO_1101 {LPWSTR wkui1101_oth_domains;};
struct _CHARDEVQ_INFO_1003 {LPWSTR cq1003_devs;};
struct _GROUP_USERS_INFO_0 {LPWSTR grui0_name;};
typedef int (*EDITWORDBREAKPROCW)(LPWSTR, int, int, int);
struct _DATATYPES_INFO_1W {LPWSTR pName;};
struct _LOCALGROUP_INFO_0 {LPWSTR lgrpi0_name;};
struct _LOCALGROUP_INFO_1 {LPWSTR lgrpi1_name;LPWSTR lgrpi1_comment;};
struct _REMOTE_NAME_INFOW {LPWSTR lpUniversalName;LPWSTR lpConnectionName;LPWSTR lpRemainingPath;};
struct _WKSTA_USER_INFO_0 {LPWSTR wkui0_username;};
struct _WKSTA_USER_INFO_1 {LPWSTR wkui1_username;LPWSTR wkui1_logon_domain;LPWSTR wkui1_oth_domains;LPWSTR wkui1_logon_server;};
struct _REPL_EDIR_INFO_0 {LPWSTR rped0_dirname;};
struct _REPL_IDIR_INFO_0 {LPWSTR rpid0_dirname;};
struct _SERVER_INFO_1005 {LPTSTR sv1005_comment;};
typedef NAMEENUMPROCW DESKTOPENUMPROCW;
struct _CHARDEVQ_INFO_0 {LPWSTR cq0_dev;};
struct _GROUP_INFO_1002 {LPWSTR grpi1002_comment;};
struct _MONITOR_INFO_1W {LPWSTR pName;};
struct _MONITOR_INFO_2W {LPWSTR pName;LPWSTR pEnvironment;LPWSTR pDLLName;};
struct _SHARE_INFO_1004 {LPTSTR shi1004_remark;};
struct tagREGISTERWORDW {LPWSTR lpReading;LPWSTR lpWord;};
typedef NAMEENUMPROCW WINSTAENUMPROCW;
struct _CHARDEV_INFO_0 {LPWSTR ch0_dev;};
struct _DRIVER_INFO_1W {LPWSTR pName;};
struct _SERVICE_INFO_0 {LPWSTR svci0_name;};
struct _SESSION_INFO_0 {LPTSTR sesi0_cname;};
struct _USER_INFO_1003 {LPWSTR usri1003_password;};
struct _USER_INFO_1006 {LPWSTR usri1006_home_dir;};
struct _USER_INFO_1007 {LPWSTR usri1007_comment;};
struct _USER_INFO_1009 {LPWSTR usri1009_script_path;};
struct _USER_INFO_1011 {LPWSTR usri1011_full_name;};
struct _USER_INFO_1012 {LPWSTR usri1012_usr_comment;};
struct _USER_INFO_1013 {LPWSTR usri1013_parms;};
struct _USER_INFO_1014 {LPWSTR usri1014_workstations;};
struct _USER_INFO_1023 {LPWSTR usri1023_logon_server;};
struct _USER_INFO_1052 {LPWSTR usri1052_profile;};
struct _USER_INFO_1053 {LPWSTR usri1053_home_dir_drive;};
typedef MIDICALLBACK *LPMIDICALLBACK;
typedef WAVECALLBACK *LPWAVECALLBACK;
struct _ACCESS_INFO_0 {LPTSTR acc0_resource_name;};
struct _CONFIG_INFO_0 {LPWSTR cfgi0_key;LPWSTR cfgi0_data;};
struct _GROUP_INFO_0 {LPWSTR grpi0_name;};
struct _GROUP_INFO_1 {LPWSTR grpi1_name;LPWSTR grpi1_comment;};
struct _PORT_INFO_1W {LPWSTR pName;};
struct _SHARE_INFO_0 {LPTSTR shi0_netname;};
struct _USER_INFO_10 {LPWSTR usri10_name;LPWSTR usri10_comment;LPWSTR usri10_usr_comment;LPWSTR usri10_full_name;};
struct _DOC_INFO_1W {LPWSTR pDocName;LPWSTR pOutputFile;LPWSTR pDatatype;};
struct _USER_INFO_0 {LPWSTR usri0_name;};
struct _MSG_INFO_0 {LPWSTR msgi0_name;};
struct _USE_INFO_0 {LPTSTR ui0_local;LPTSTR ui0_remote;};
typedef LPCWSTR LPCOLESTR;
struct tagRemSNB {unsigned int ulCntStr;unsigned int ulCntChar;OLECHAR rgString[1];};
typedef LPWSTR LPOLESTR;
typedef BSTR *LPBSTR;
union tagPROPSPEC___401F44F296029ABDCCA300255B1FD5D2 {PROPID propid;LPOLESTR lpwstr;};
struct tagCALPOLESTR {ULONG cElems;LPOLESTR *pElems;};
struct tagPROPSPEC {ULONG ulKind;union tagPROPSPEC___401F44F296029ABDCCA300255B1FD5D2 u;};
struct tagVARIANT___752DA0FEA6ABD422DEEA1D52ECA193AD___8917340B7A8DB9BEA85031381048F94D {VARTYPE vt;WORD wReserved1;WORD wReserved2;WORD wReserved3;tagVARIANT______8917340B7A8DB9BEA85031381048F94D___3FCBCE0E1D38ED64A5F05F924A43CE06 __anonymous0;};
struct tagPROPVARIANT {VARTYPE vt;WORD wReserved1;WORD wReserved2;WORD wReserved3;union tagPROPVARIANT___35FA5FC55477E54363241AFA3482EE1E u;};
struct tagSTATPROPSTG {LPOLESTR lpwstrName;PROPID propid;VARTYPE vt;};
struct tagPROPPAGEINFO {size_t cb;LPOLESTR pszTitle;SIZE size;LPOLESTR pszDocString;LPOLESTR pszHelpFile;DWORD dwHelpContext;};
struct IParseDisplayNameVtbl {HRESULT (*QueryInterface)(IParseDisplayName *,  IID *, PVOID *);ULONG (*AddRef)(IParseDisplayName *);ULONG (*Release)(IParseDisplayName *);HRESULT (*ParseDisplayName)(IParseDisplayName *, IBindCtx *, LPOLESTR, ULONG *, IMoniker **);};
struct IRootStorageVtbl {HRESULT (*QueryInterface)(IRootStorage *,  IID *, PVOID *);ULONG (*AddRef)(IRootStorage *);ULONG (*Release)(IRootStorage *);HRESULT (*SwitchToFile)(IRootStorage *, LPOLESTR);};
struct IEnumStringVtbl {HRESULT (*QueryInterface)(IEnumString *,  IID *, PVOID *);ULONG (*AddRef)(IEnumString *);ULONG (*Release)(IEnumString *);HRESULT (*Next)(IEnumString *, ULONG, LPOLESTR *, ULONG *);HRESULT (*Skip)(IEnumString *, ULONG);HRESULT (*Reset)(IEnumString *);HRESULT (*Clone)(IEnumString *, IEnumString **);};
struct tagFONTDESC {UINT cbSizeofstruct;LPOLESTR lpstrName;CY cySize;SHORT sWeight;SHORT sCharset;BOOL fItalic;BOOL fUnderline;BOOL fStrikethrough;};
struct tagSTATSTG {LPOLESTR pwcsName;DWORD type;ULARGE_INTEGER cbSize;FILETIME mtime;FILETIME ctime;FILETIME atime;DWORD grfMode;DWORD grfLocksSupported;CLSID clsid;DWORD grfStateBits;DWORD reserved;};
struct IErrorLogVtbl {HRESULT (*QueryInterface)(IErrorLog *,  IID *, PVOID *);ULONG (*AddRef)(IErrorLog *);ULONG (*Release)(IErrorLog *);HRESULT (*AddError)(IErrorLog *, LPCOLESTR, LPEXCEPINFO);};
struct tagVARDESC {MEMBERID memid;LPOLESTR lpstrSchema;union tagVARDESC___E6274BD6A7149C9CC2413444FF769F0B u;ELEMDESC elemdescVar;WORD wVarFlags;VARKIND varkind;};
struct IOleContainerVtbl {HRESULT (*QueryInterface)(IOleContainer *,  IID *, PVOID *);ULONG (*AddRef)(IOleContainer *);ULONG (*Release)(IOleContainer *);HRESULT (*ParseDisplayName)(IOleContainer *, IBindCtx *, LPOLESTR, ULONG *, IMoniker **);HRESULT (*EnumObjects)(IOleContainer *, DWORD, IEnumUnknown **);HRESULT (*LockContainer)(IOleContainer *, BOOL);};
struct IPropertyBagVtbl {HRESULT (*QueryInterface)(IPropertyBag *,  IID *, PVOID *);ULONG (*AddRef)(IPropertyBag *);ULONG (*Release)(IPropertyBag *);HRESULT (*Read)(IPropertyBag *, LPCOLESTR, LPVARIANT, LPERRORLOG);HRESULT (*Write)(IPropertyBag *, LPCOLESTR, LPVARIANT);};
struct tagOCPFIPARAMS {ULONG cbStructSize;HWND hWndOwner;int x;int y;LPCOLESTR lpszCaption;ULONG cObjects;LPUNKNOWN *lplpUnk;ULONG cPages;CLSID *lpPages;LCID lcid;DISPID dispidInitialProperty;};
struct IBindCtxVtbl {HRESULT (*QueryInterface)(IBindCtx *,  IID *, PVOID *);ULONG (*AddRef)(IBindCtx *);ULONG (*Release)(IBindCtx *);HRESULT (*RegisterObjectBound)(IBindCtx *, LPUNKNOWN);HRESULT (*RevokeObjectBound)(IBindCtx *, LPUNKNOWN);HRESULT (*ReleaseBoundObjects)(IBindCtx *);HRESULT (*SetBindOptions)(IBindCtx *, LPBIND_OPTS);HRESULT (*GetBindOptions)(IBindCtx *, LPBIND_OPTS);HRESULT (*GetRunningObjectTable)(IBindCtx *, IRunningObjectTable **);HRESULT (*RegisterObjectParam)(IBindCtx *, LPOLESTR, IUnknown *);HRESULT (*GetObjectParam)(IBindCtx *, LPOLESTR, IUnknown **);HRESULT (*EnumObjectParam)(IBindCtx *, IEnumString **);HRESULT (*RevokeObjectParam)(IBindCtx *, LPOLESTR);};
struct IPersistFileVtbl {HRESULT (*QueryInterface)(IPersistFile *,  IID *, PVOID *);ULONG (*AddRef)(IPersistFile *);ULONG (*Release)(IPersistFile *);HRESULT (*GetClassID)(IPersistFile *, CLSID);HRESULT (*IsDirty)(IPersistFile *);HRESULT (*Load)(IPersistFile *, LPCOLESTR, DWORD);HRESULT (*Save)(IPersistFile *, LPCOLESTR, BOOL);HRESULT (*SaveCompleted)(IPersistFile *, LPCOLESTR);HRESULT (*GetCurFile)(IPersistFile *, LPOLESTR *);};
struct IOleInPlaceUIWindowVtbl {HRESULT (*QueryInterface)(IOleInPlaceUIWindow *,  IID *, PVOID *);ULONG (*AddRef)(IOleInPlaceUIWindow *);ULONG (*Release)(IOleInPlaceUIWindow *);HRESULT (*GetWindow)(IOleInPlaceUIWindow *, HWND *);HRESULT (*ContextSensitiveHelp)(IOleInPlaceUIWindow *, BOOL);HRESULT (*GetBorder)(IOleInPlaceUIWindow *, LPRECT);HRESULT (*RequestBorderSpace)(IOleInPlaceUIWindow *, LPCBORDERWIDTHS);HRESULT (*SetBorderSpace)(IOleInPlaceUIWindow *, LPCBORDERWIDTHS);HRESULT (*SetActiveObject)(IOleInPlaceUIWindow *, LPOLEINPLACEACTIVEOBJECT, LPCOLESTR);};
struct ITypeCompVtbl {HRESULT (*QueryInterface)(ITypeComp *,  IID *, PVOID *);ULONG (*AddRef)(ITypeComp *);ULONG (*Release)(ITypeComp *);HRESULT (*Bind)(ITypeComp *, LPOLESTR, ULONG, WORD, LPTYPEINFO *, DESCKIND *, LPBINDPTR);HRESULT (*BindType)(ITypeComp *, LPOLESTR, ULONG, LPTYPEINFO *, LPTYPECOMP *);};
struct tagTYPEATTR {GUID guid;LCID lcid;DWORD dwReserved;MEMBERID memidConstructor;MEMBERID memidDestructor;LPOLESTR lpstrSchema;ULONG cbSizeInstance;TYPEKIND typekind;WORD cFuncs;WORD cVars;WORD cImplTypes;WORD cbSizeVft;WORD cbAlignment;WORD wTypeFlags;WORD wMajorVerNum;WORD wMinorVerNum;TYPEDESC tdescAlias;IDLDESC idldescType;};
struct IMonikerVtbl {HRESULT (*QueryInterface)(IMoniker *,  IID *, PVOID *);ULONG (*AddRef)(IMoniker *);ULONG (*Release)(IMoniker *);HRESULT (*GetClassID)(IMoniker *, CLSID *);HRESULT (*IsDirty)(IMoniker *);HRESULT (*Load)(IMoniker *, IStream *);HRESULT (*Save)(IMoniker *, IStream *, BOOL);HRESULT (*GetSizeMax)(IMoniker *, PULARGE_INTEGER);HRESULT (*BindToObject)(IMoniker *, IBindCtx *, IMoniker *,  IID *, PVOID *);HRESULT (*BindToStorage)(IMoniker *, IBindCtx *, IMoniker *,  IID *, PVOID *);HRESULT (*Reduce)(IMoniker *, IBindCtx *, DWORD, IMoniker **, IMoniker **);HRESULT (*ComposeWith)(IMoniker *, IMoniker *, BOOL, IMoniker **);HRESULT (*Enum)(IMoniker *, BOOL, IEnumMoniker **);HRESULT (*IsEqual)(IMoniker *, IMoniker *);HRESULT (*Hash)(IMoniker *, PDWORD);HRESULT (*IsRunning)(IMoniker *, IBindCtx *, IMoniker *, IMoniker *);HRESULT (*GetTimeOfLastChange)(IMoniker *, IBindCtx *, IMoniker *, LPFILETIME);HRESULT (*Inverse)(IMoniker *, IMoniker **);HRESULT (*CommonPrefixWith)(IMoniker *, IMoniker *, IMoniker **);HRESULT (*RelativePathTo)(IMoniker *, IMoniker *, IMoniker **);HRESULT (*GetDisplayName)(IMoniker *, IBindCtx *, IMoniker *, LPOLESTR *);HRESULT (*ParseDisplayName)(IMoniker *, IBindCtx *, IMoniker *, LPOLESTR, ULONG *, IMoniker **);HRESULT (*IsSystemMoniker)(IMoniker *, PDWORD);};
struct IPropertyPageVtbl {HRESULT (*QueryInterface)(IPropertyPage *,  IID *, PVOID *);ULONG (*AddRef)(IPropertyPage *);ULONG (*Release)(IPropertyPage *);HRESULT (*SetPageSite)(IPropertyPage *, LPPROPERTYPAGESITE);HRESULT (*Activate)(IPropertyPage *, HWND, LPCRECT, BOOL);HRESULT (*Deactivate)(IPropertyPage *);HRESULT (*GetPageInfo)(IPropertyPage *, LPPROPPAGEINFO);HRESULT (*SetObjects)(IPropertyPage *, ULONG, LPUNKNOWN *);HRESULT (*Show)(IPropertyPage *, UINT);HRESULT (*Move)(IPropertyPage *, LPCRECT);HRESULT (*IsPageDirty)(IPropertyPage *);HRESULT (*Apply)(IPropertyPage *);HRESULT (*Help)(IPropertyPage *, LPCOLESTR);HRESULT (*TranslateAcceleratorA)(IPropertyPage *, LPMSG);};
struct IPictureDispVtbl {HRESULT (*QueryInterface)(IPictureDisp *,  IID *, PVOID *);ULONG (*AddRef)(IPictureDisp *);ULONG (*Release)(IPictureDisp *);HRESULT (*GetTypeInfoCount)(IPictureDisp *, UINT *);HRESULT (*GetTypeInfo)(IPictureDisp *, UINT, LCID, LPTYPEINFO *);HRESULT (*GetIDsOfNames)(IPictureDisp *,  IID *, LPOLESTR *, UINT, LCID, DISPID *);HRESULT (*Invoke)(IPictureDisp *, DISPID,  IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);};
struct IDispatchVtbl {HRESULT (*QueryInterface)(IDispatch *,  IID *, PVOID *);ULONG (*AddRef)(IDispatch *);ULONG (*Release)(IDispatch *);HRESULT (*GetTypeInfoCount)(IDispatch *, UINT *);HRESULT (*GetTypeInfo)(IDispatch *, UINT, LCID, LPTYPEINFO *);HRESULT (*GetIDsOfNames)(IDispatch *,  IID *, LPOLESTR *, UINT, LCID, DISPID *);HRESULT (*Invoke)(IDispatch *, DISPID,  IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);};
struct IFontDispVtbl {HRESULT (*QueryInterface)(IFontDisp *,  IID *, PVOID *);ULONG (*AddRef)(IFontDisp *);ULONG (*Release)(IFontDisp *);HRESULT (*GetTypeInfoCount)(IFontDisp *, UINT *);HRESULT (*GetTypeInfo)(IFontDisp *, UINT, LCID, LPTYPEINFO *);HRESULT (*GetIDsOfNames)(IFontDisp *,  IID *, LPOLESTR *, UINT, LCID, DISPID *);HRESULT (*Invoke)(IFontDisp *, DISPID,  IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);};
struct IPropertyPage2Vtbl {HRESULT (*QueryInterface)(IPropertyPage2 *,  IID *, PVOID *);ULONG (*AddRef)(IPropertyPage2 *);ULONG (*Release)(IPropertyPage2 *);HRESULT (*SetPageSite)(IPropertyPage2 *, LPPROPERTYPAGESITE);HRESULT (*Activate)(IPropertyPage2 *, HWND, LPCRECT, BOOL);HRESULT (*Deactivate)(IPropertyPage2 *);HRESULT (*GetPageInfo)(IPropertyPage2 *, LPPROPPAGEINFO);HRESULT (*SetObjects)(IPropertyPage2 *, ULONG, LPUNKNOWN *);HRESULT (*Show)(IPropertyPage2 *, UINT);HRESULT (*Move)(IPropertyPage2 *, LPCRECT);HRESULT (*IsPageDirty)(IPropertyPage2 *);HRESULT (*Apply)(IPropertyPage2 *);HRESULT (*Help)(IPropertyPage2 *, LPCOLESTR);HRESULT (*TranslateAcceleratorA)(IPropertyPage2 *, LPMSG);HRESULT (*EditProperty)(IPropertyPage2 *, DISPID);};
struct IOleInPlaceFrameVtbl {HRESULT (*QueryInterface)(IOleInPlaceFrame *,  IID *, PVOID *);ULONG (*AddRef)(IOleInPlaceFrame *);ULONG (*Release)(IOleInPlaceFrame *);HRESULT (*GetWindow)(IOleInPlaceFrame *, HWND *);HRESULT (*ContextSensitiveHelp)(IOleInPlaceFrame *, BOOL);HRESULT (*GetBorder)(IOleInPlaceFrame *, LPRECT);HRESULT (*RequestBorderSpace)(IOleInPlaceFrame *, LPCBORDERWIDTHS);HRESULT (*SetBorderSpace)(IOleInPlaceFrame *, LPCBORDERWIDTHS);HRESULT (*SetActiveObject)(IOleInPlaceFrame *, LPOLEINPLACEACTIVEOBJECT, LPCOLESTR);HRESULT (*InsertMenus)(IOleInPlaceFrame *, HMENU, LPOLEMENUGROUPWIDTHS);HRESULT (*SetMenu)(IOleInPlaceFrame *, HMENU, HOLEMENU, HWND);HRESULT (*RemoveMenus)(IOleInPlaceFrame *, HMENU);HRESULT (*SetStatusText)(IOleInPlaceFrame *, LPCOLESTR);HRESULT (*EnableModeless)(IOleInPlaceFrame *, BOOL);HRESULT (*TranslateAcceleratorA)(IOleInPlaceFrame *, LPMSG, WORD);};
struct ITypeLibVtbl {HRESULT (*QueryInterface)(ITypeLib *,  IID *, PVOID *);ULONG (*AddRef)(ITypeLib *);ULONG (*Release)(ITypeLib *);UINT (*GetTypeInfoCount)(ITypeLib *);HRESULT (*GetTypeInfo)(ITypeLib *, UINT, ITypeInfo **);HRESULT (*GetTypeInfoType)(ITypeLib *, UINT, TYPEKIND *);HRESULT (*GetTypeInfoOfGuid)(ITypeLib *,  GUID *, ITypeInfo **);HRESULT (*GetLibAttr)(ITypeLib *, TLIBATTR **);HRESULT (*GetTypeComp)(ITypeLib *, ITypeComp *);HRESULT (*GetDocumentation)(ITypeLib *, INT, BSTR *, BSTR *, DWORD *, BSTR *);HRESULT (*IsName)(ITypeLib *, LPOLESTR, ULONG, BOOL *);HRESULT (*FindName)(ITypeLib *, LPOLESTR, ULONG, ITypeInfo **, MEMBERID *, USHORT *);void (*ReleaseTLibAttr)(ITypeLib *, TLIBATTR *);};
union tagVARIANT___752DA0FEA6ABD422DEEA1D52ECA193AD {struct {VARTYPE vt;WORD wReserved1;WORD wReserved2;WORD wReserved3;union {int lVal;unsigned char bVal;short iVal;float fltVal;double dblVal;VARIANT_BOOL boolVal;SCODE scode;CY cyVal;DATE date;BSTR bstrVal;IUnknown *punkVal;LPDISPATCH pdispVal;SAFEARRAY *parray;unsigned char *pbVal;short *piVal;int *plVal;float *pfltVal;double *pdblVal;VARIANT_BOOL *pboolVal;SCODE *pscode;CY *pcyVal;DATE *pdate;BSTR *pbstrVal;IUnknown **ppunkVal;LPDISPATCH *ppdispVal;SAFEARRAY **pparray;struct tagVARIANT *pvarVal;void *byref;CHAR cVal;USHORT uiVal;ULONG ulVal;INT intVal;UINT uintVal;DECIMAL *pdecVal;CHAR *pcVal;USHORT *puiVal;ULONG *pulVal;INT *pintVal;UINT *puintVal;tagVARIANT___752DA0FEA6ABD422DEEA1D52ECA193AD___8917340B7A8DB9BEA85031381048F94D __anonymous0;};};DECIMAL decVal;};
struct IShellFolderVtbl {HRESULT (*QueryInterface)(IShellFolder *,  IID *, PVOID *);ULONG (*AddRef)(IShellFolder *);ULONG (*Release)(IShellFolder *);HRESULT (*ParseDisplayName)(IShellFolder *, HWND, LPBC, LPOLESTR, PULONG, LPITEMIDLIST *, PULONG);HRESULT (*EnumObjects)(IShellFolder *, HWND, DWORD, LPENUMIDLIST *);HRESULT (*BindToObject)(IShellFolder *, LPCITEMIDLIST, LPBC,  IID *, PVOID *);HRESULT (*BindToStorage)(IShellFolder *, LPCITEMIDLIST, LPBC,  IID *, PVOID *);HRESULT (*CompareIDs)(IShellFolder *, LPARAM, LPCITEMIDLIST, LPCITEMIDLIST);HRESULT (*CreateViewObject)(IShellFolder *, HWND,  IID *, PVOID *);HRESULT (*GetAttributesOf)(IShellFolder *, UINT, LPCITEMIDLIST *, PULONG);HRESULT (*GetUIObjectOf)(IShellFolder *, HWND, UINT, LPCITEMIDLIST *,  IID *, PUINT, PVOID *);HRESULT (*GetDisplayNameOf)(IShellFolder *, LPCITEMIDLIST, DWORD, LPSTRRET);HRESULT (*SetNameOf)(IShellFolder *, HWND, LPCITEMIDLIST, LPCOLESTR, DWORD, LPITEMIDLIST *);};
struct IShellBrowserVtbl {HRESULT (*QueryInterface)(IShellBrowser *,  IID *, PVOID *);ULONG (*AddRef)(IShellBrowser *);ULONG (*Release)(IShellBrowser *);HRESULT (*GetWindow)(IShellBrowser *, HWND *);HRESULT (*ContextSensitiveHelp)(IShellBrowser *, BOOL);HRESULT (*InsertMenusSB)(IShellBrowser *, HMENU, LPOLEMENUGROUPWIDTHS);HRESULT (*SetMenuSB)(IShellBrowser *, HMENU, HOLEMENU, HWND);HRESULT (*RemoveMenusSB)(IShellBrowser *, HMENU);HRESULT (*SetStatusTextSB)(IShellBrowser *, LPCOLESTR);HRESULT (*EnableModelessSB)(IShellBrowser *, BOOL);HRESULT (*TranslateAcceleratorSB)(IShellBrowser *, LPMSG, WORD);HRESULT (*BrowseObject)(IShellBrowser *, LPCITEMIDLIST, UINT);HRESULT (*GetViewStateStream)(IShellBrowser *, DWORD, LPSTREAM *);HRESULT (*GetControlWindow)(IShellBrowser *, UINT, HWND *);HRESULT (*SendControlMsg)(IShellBrowser *, UINT, UINT, WPARAM, LPARAM, LRESULT *);HRESULT (*QueryActiveShellView)(IShellBrowser *, LPSHELLVIEW *);HRESULT (*OnViewWindowActive)(IShellBrowser *, LPSHELLVIEW);HRESULT (*SetToolbarItems)(IShellBrowser *, LPTBBUTTON, UINT, UINT);};
struct IOleObjectVtbl {HRESULT (*QueryInterface)(IOleObject *,  IID *, PVOID *);ULONG (*AddRef)(IOleObject *);ULONG (*Release)(IOleObject *);HRESULT (*SetClientSite)(IOleObject *, LPOLECLIENTSITE);HRESULT (*GetClientSite)(IOleObject *, LPOLECLIENTSITE *);HRESULT (*SetHostNames)(IOleObject *, LPCOLESTR, LPCOLESTR);HRESULT (*Close)(IOleObject *, DWORD);HRESULT (*SetMoniker)(IOleObject *, DWORD, LPMONIKER);HRESULT (*GetMoniker)(IOleObject *, DWORD, DWORD, LPMONIKER *);HRESULT (*InitFromData)(IOleObject *, LPDATAOBJECT, BOOL, DWORD);HRESULT (*GetClipboardData)(IOleObject *, DWORD, LPDATAOBJECT *);HRESULT (*DoVerb)(IOleObject *, LONG, LPMSG, LPOLECLIENTSITE, LONG, HWND, LPCRECT);HRESULT (*EnumVerbs)(IOleObject *, LPENUMOLEVERB *);HRESULT (*Update)(IOleObject *);HRESULT (*IsUpToDate)(IOleObject *);HRESULT (*GetUserClassID)(IOleObject *, LPCLSID);HRESULT (*GetUserType)(IOleObject *, DWORD, LPOLESTR);HRESULT (*SetExtent)(IOleObject *, DWORD, SIZEL *);HRESULT (*GetExtent)(IOleObject *, DWORD, SIZEL *);HRESULT (*Advise)(IOleObject *, LPADVISESINK, PDWORD);HRESULT (*Unadvise)(IOleObject *, DWORD);HRESULT (*EnumAdvise)(IOleObject *, LPENUMSTATDATA *);HRESULT (*GetMiscStatus)(IOleObject *, DWORD, PDWORD);HRESULT (*SetColorScheme)(IOleObject *, LPLOGPALETTE);};
struct ITypeInfoVtbl {HRESULT (*QueryInterface)(ITypeInfo *,  IID *, PVOID *);ULONG (*AddRef)(ITypeInfo *);ULONG (*Release)(ITypeInfo *);HRESULT (*GetTypeAttr)(ITypeInfo *, LPTYPEATTR *);HRESULT (*GetTypeComp)(ITypeInfo *, LPTYPECOMP *);HRESULT (*GetFuncDesc)(ITypeInfo *, UINT, LPFUNCDESC *);HRESULT (*GetVarDesc)(ITypeInfo *, UINT, LPVARDESC *);HRESULT (*GetNames)(ITypeInfo *, MEMBERID, BSTR *, UINT, UINT *);HRESULT (*GetRefTypeOfImplType)(ITypeInfo *, UINT, HREFTYPE *);HRESULT (*GetImplTypeFlags)(ITypeInfo *, UINT, INT *);HRESULT (*GetIDsOfNames)(ITypeInfo *, LPOLESTR *, UINT, MEMBERID *);HRESULT (*Invoke)(ITypeInfo *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);HRESULT (*GetDocumentation)(ITypeInfo *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);HRESULT (*GetDllEntry)(ITypeInfo *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);HRESULT (*GetRefTypeInfo)(ITypeInfo *, HREFTYPE, LPTYPEINFO *);HRESULT (*AddressOfMember)(ITypeInfo *, MEMBERID, INVOKEKIND, PVOID *);HRESULT (*CreateInstance)(ITypeInfo *, LPUNKNOWN,  IID *, PVOID *);HRESULT (*GetMops)(ITypeInfo *, MEMBERID, BSTR *);HRESULT (*GetContainingTypeLib)(ITypeInfo *, LPTYPELIB *, UINT *);void (*ReleaseTypeAttr)(ITypeInfo *, LPTYPEATTR);void (*ReleaseFuncDesc)(ITypeInfo *, LPFUNCDESC);void (*ReleaseVarDesc)(ITypeInfo *, LPVARDESC);};
struct tagVARIANT {union {struct {VARTYPE vt;WORD wReserved1;WORD wReserved2;WORD wReserved3;tagVARIANT___752DA0FEA6ABD422DEEA1D52ECA193AD __anonymous0;};DECIMAL decVal;};};



/// #endif ===true


