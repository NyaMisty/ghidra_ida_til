
#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\objc64.til.h"
/// #define GHIDRA ===DEFINED

/// #ifndef INCLUDE_GUARD_objc64_til ===true

/// #define INCLUDE_GUARD_objc64_til ===DEFINED


#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\5_gengdt\.\..\..\..\IDAPlugins\idatil2c\common.h"


/// #define __int64  long long ===DEFINED
/// #define __int32  int ===DEFINED
/// #define __int16  short ===DEFINED
/// #define __int8  char ===DEFINED

/// #ifdef GHIDRA ===true

typedef struct {
    long long u1;
    long long u2;
} __int128;
typedef struct {
    unsigned long long u1;
    unsigned long long u2;
} __uint128;
/// #endif ===true


typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;

/// #define _BYTE  uint8_t ===DEFINED
/// #define _WORD  uint16_t ===DEFINED
/// #define _QWORD  uint64_t ===DEFINED
/// #define _DWORD  uint32_t ===DEFINED



/// #ifndef HAVETYPE_bool ===true

/// #define bool  char ===DEFINED
/// #endif ===true


/// #ifndef HAVETYPE___u32 ===true

typedef uint32_t __u32;
/// #endif ===true

/// #ifndef HAVETYPE___u16 ===true

typedef uint16_t __u16;
/// #endif ===true

/// #ifndef HAVETYPE___u64 ===true

typedef uint64_t __u64;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_uid32_t ===true

typedef unsigned int __kernel_uid32_t;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_mqd_t ===true

typedef int __kernel_mqd_t;
/// #endif ===true



/// #define __fastcall ===DEFINED

/// #define __unaligned ===DEFINED

/// #define __stdcall ===DEFINED

/// #define __cppobj ===DEFINED

/// #define __declspec([x])   ===DEFINED
/// #define __hidden ===DEFINED

/// #define __cdecl ===DEFINED

/// #define __noreturn ===DEFINED


/// #define const ===DEFINED

/// #define this  _this ===DEFINED

typedef char _Mbstatet;

typedef void **va_list;





























 
#line 4: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\objc64.til.h"


#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\macosx64.til.h"
/// #define HAVETYPE__opaque_pthread_mutex_t ===DEFINED

/// #define HAVETYPE_Block_byref ===DEFINED

/// #define HAVETYPE__xmlSAXHandler ===DEFINED


/// #ifndef INCLUDE_GUARD_macosx64_til ===true

/// #define INCLUDE_GUARD_macosx64_til ===DEFINED


#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\5_gengdt\.\..\..\..\IDAPlugins\idatil2c\common.h"



/// #ifdef GHIDRA ===true

typedef struct {
    long long u1;
    long long u2;
} __int128;
typedef struct {
    unsigned long long u1;
    unsigned long long u2;
} __uint128;
/// #endif ===true


typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;




/// #ifndef HAVETYPE_bool ===true

/// #endif ===true


/// #ifndef HAVETYPE___u32 ===true

typedef uint32_t __u32;
/// #endif ===true

/// #ifndef HAVETYPE___u16 ===true

typedef uint16_t __u16;
/// #endif ===true

/// #ifndef HAVETYPE___u64 ===true

typedef uint64_t __u64;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_uid32_t ===true

typedef unsigned int __kernel_uid32_t;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_mqd_t ===true

typedef int __kernel_mqd_t;
/// #endif ===true













typedef char _Mbstatet;

typedef void **va_list;





























 
#line 7: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\macosx64.til.h"




struct STORE_OBJECT_st___78662AA53663BCB8AAE8916B78AF8CFA___FA360D2E41DCB3363DB7C6EE711F8FB0;
struct accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44___AC186CABF9007C2DA87CD3BECABD7D45;
struct accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44___BFD7413E14FC21CAB05150D69A0647C0;
struct rejected_reply___C3827AB85A505492A4D27FEA56330B1C___AC186CABF9007C2DA87CD3BECABD7D45;
struct __res_9_state___C43196706AFD8D9F503704607DF2086B___F5760817D575CBD8D5B39FC59A54FB95;
struct extern_proc___27B38CA2FABD237895D38B0302C8FC9B___A845D8EFA010EC0E04B626533D96DFA0;
struct nextvend___7EA091B0963CBF62F9D73E9E3451E5E2___4C928A861DF53AA82E61C4313B0554E4;
struct rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1___AC186CABF9007C2DA87CD3BECABD7D45;
struct rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1___BF7AC7AAFAE2A9D4F26CD1E6B816F6B2;
struct xdrbuf___3C99F4725429E2A3FEA5222150305F9C___F1B07FB5AB0A91F7CDD6BE0247735827;
struct llc___94526051AE93F16537B4BA3D9839A03C___3AFEBDF7A4FC08BFE9A431A2DA7430D4;
struct llc___94526051AE93F16537B4BA3D9839A03C___7008580425A2D9D299FFCC87FFBB188D;
struct llc___94526051AE93F16537B4BA3D9839A03C___91B3B8FDADC1811899AE65C68A225D1C;
struct llc___94526051AE93F16537B4BA3D9839A03C___A3920816D4629CE8D4A8F0ADB219F5F7;
struct llc___94526051AE93F16537B4BA3D9839A03C___C255F273D17FD18D4EDDE30A2FF3191C;
struct llc___94526051AE93F16537B4BA3D9839A03C___D0AC4D4AA87A2DEF3381B9718ACFF2C3;
union _2852C95088D0304BB11C1621105E366D___EBEEFF9F825AD5996D1BE6C50F3E6AFA;
struct _4932DC24BA09BB104202CABB17FCEE34___557C3AE17C0268223A4DBA0527C77C11;
union _575360315CF0A1A248958A58C9E14896___F155898B76A3E20E5DB971F93B5B2ECD;
union _BF6258091C70028000D911F61A5FB5AF___9EC190D15BEE7EEEBABA7EFAD959CEE4;
union _F9A7ED8F42D8CCD77CCEA18A32D3B2AC___ACCCA089A96433C3C2E2A191C0A26330;
union netsnmp_table_data_set_storage_s___954B107E84134B44758BAB124B2F79B4;
union _ossl_old_des_ks_struct___EA044D063B047D6148CE114A0782A100;
union tagSQL_INTERVAL_STRUCT___E0CBF60BBC76AAAF9CF29F3CBADF463C;
union netsnmp_column_info_t___41E30212381E22E50C344E87F6BAC4A2;
struct nfs_lock_msg_request___5813B4C1F7982A33B431354D3E39333E;
union ocsp_responder_id_st___A140B48D11B7E00D603349F1A886D7E2;
struct ip6_hdr___55051B7F048FF6C7BE508169AD51FCBE__ip6_hdrctl;
union ocsp_cert_status_st___0CEB729C6D376DBCC2995D5CF424A18E;
union x86_exception_state___251411A5B45F799EBE3F14281E77BAD6;
union DIST_POINT_NAME_st___A95B7E1D2A8BC0A3F405D6FFBE373ACE;
union x509_attributes_st___66E1659F4D2A4D8BBB27251FF152F229;
union POLICYQUALINFO_st___E7597F3F5DDB1DDEEAC7773A1D67D4FA;
union _xsltRuntimeExtra___2329BC7224F5366634B0083FE3D0502D;
union x86_thread_state___D2D4D49B333AEF99596DF2F7E46595A4;
union GENERAL_NAME_st___0CCF65EAB3E3C79409391F9327465DF1;
union STORE_OBJECT_st___78662AA53663BCB8AAE8916B78AF8CFA;
struct icmp___115915189B36D486427C31680FC3CC99__ih_rtradv;
union ndrv_demux_desc___5E87C9BB192401A2CD612B3326A5C171;
struct sqlite3_index_info__sqlite3_index_constraint_usage;
union x86_debug_state___DE64C214EB37D0506E9F0452E3D9193B;
union x86_float_state___598376F8C40D36F3E63ABC99E645E7DC;
union HFSPlusBSDInfo___27AA93549C704A2FC0D1AB4BC35019DD;
union SHA512state_st___61765161EF95A25BF6D9F15268D2C4E6;
union accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44;
struct icmp___115915189B36D486427C31680FC3CC99__ih_idseq;
union rejected_reply___C3827AB85A505492A4D27FEA56330B1C;
union x509_object_st___0BEAA7EF7F7C8AAD9DD0E8F95323714A;
struct __res_9_state___A41D3F045172AF5618492D381489FAF0;
union __res_9_state___C43196706AFD8D9F503704607DF2086B;
union _ipfw_insn_if___EC942E50B238476A039FC141726BDF36;
union _mime_magic_s___44C44110DFFEF8B71A54B915355ECCBB;
struct curl_fileinfo___077514F63D1BEBBC677B95BCFA7479A7;
union getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B;
struct icmp___115915189B36D486427C31680FC3CC99__ih_pmtu;
struct ipp_request_u___453450608DF16096B88E9D5250CA9622;
struct ipp_request_u___5CC10970A8D293302D52B38947334AC6;
struct ipp_request_u___C21E321BB5A964B1106B1996333560F5;
union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65;
union pkcs12_bag_st___040857FDBC76680A083043065CFE20BF;
struct ssl2_state_st___84C368C7769861FE002B58071E3F7188;
struct ssl3_state_st___42F7BD6B27181EF8C23D75FB26BE0959;
struct FndrFileInfo___41A11852923CA7CF3D1788B49D991E5B;
union asn1_type_st___2DD2868AF9E8E8462C9810218891F7E4;
union klm_testrply___40F9D261D31BF2147C1606393BAB8476;
union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE;
union sockaddr_gen___75CD6CBD540C65254472F3438B93F561;
struct FndrDirInfo___0DCF4602959F8104318EED879205AAFA;
struct FndrDirInfo___6E74BEE3D2405F7C88221D37EC2C16A3;
union bn_gencb_st___F77A54889CF8101E886FCF9AA7EBB627;
union bpf_dltlist___DD4EE95841EE2FCCF4EE9A868D20E5D0;
union evp_pkey_st___0C617F08CD1CBFCEA8637CF9C21CDE81;
struct extern_file___94A32CBB0D158E1A8624A2DC03EBA897;
union extern_proc___27B38CA2FABD237895D38B0302C8FC9B;
struct icmp___B8975A790A59AA025FBB0015D5EF41D8__id_ip;
struct icmp___B8975A790A59AA025FBB0015D5EF41D8__id_ts;
struct in_sockinfo___51C6D8A4577F1D056D30CFC3A0948BCF;
union in_sockinfo___881D04D8390B0CDBA797F709C012DF83;
struct in_sockinfo___8F8B1830DF140CEE3517CFE046A1DD9A;
struct ipp_value_u___2EAE0BB3D4A3175EA6C32A3B77B08580;
struct ipp_value_u___55ACB418F06CBD9C81C19431B78B54E0;
struct ipp_value_u___962D1BBE228906325E858AE60F230356;
struct ipp_value_u___E1A4022D81728FCD57DFF225EC9961C7;
union socket_info___B957602F9D31755FD4966320C7ED8975;
union un_sockinfo___AC5844E0938FE50647D9B156445EFB6F;
union ypbind_resp___CD49527FE086EB7F6D0E69C2C3AD50AC;
union bp_address___3B940BBAFE206A608BBBF7EC1987BA49;
struct pem_ctx_st___1125AD01A545DD25B2B33B94AE02ED75;
struct pem_ctx_st___4E7FB566ECC299FB951FDCE71730D3D0;
union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC;
struct ssl_ctx_st___1FDE854BB3A5E25B344A4239746AC17B;
union ypresp_all___438EB5C0F713AEE99C9EADC1C626DC0A;
union ypresponse___6D34D2F64A3B31777223FA377120CA09;
struct des_block___E577A72923D02C4B0C353C58593774EC;
union icmp6_hdr___D19D92B5F4F43A148CE7ABC3DA9CAAC9;
union in6_ifreq___7D64D84BD828AED8BD33AAA6A53121E7;
struct sqlite3_index_info__sqlite3_index_constraint;
union yprequest___6FDF785020AAFE35EF4D4B0B11050AAA;
struct _05EECDE53F008AE0E4F8A84193F3FFF1__auth_ops;
union fhstatus___5A86E21E7BD06EF982D138486E7C27D0;
union in6_addr___330434928707C706902F20BE7BA89EB4;
union nextvend___7EA091B0963CBF62F9D73E9E3451E5E2;
union nlist_64___4D543BF749BB09F4875D250FEC3C43C7;
union pkcs7_st___C4161349F87321B4281B96BCD451F4DB;
union tokenstr___8AC0922476273DFEC243552765DE6A61;
struct xinpcb64___5B229D794C9B59022271F29D340290EB;
union xinpcb64___61B649B2802E895728C8AA130C15F594;
struct xinpcb64___890C891424358EA1AE7B5FD004102AA0;
union xinpcb64___BD75B87EE766833A3DF9644C7FCC1E00;
union CURLMsg___925FB63D6E9926DD49F09E35066BE965;
union ip6_hdr___55051B7F048FF6C7BE508169AD51FCBE;
union rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1;
union rpc_msg___7D774571B4FAB0E4BBD540829030FA52;
union tftphdr___AC1EF054FE947B275A5712C606118B7A;
struct _6825248A56C99A2E2B32FCEC421A9DAF__xp_ops;
union DES_ks___DCDADC3B951D04C242C8878BB987FED4;
union ifconf___28C87C5ACD364976D94B96E40062B553;
union ranlib___D365164107DBB2F7587637CCBEC7897F;
struct sqlite3_index_info__sqlite3_index_orderby;
union xdrbuf___3C99F4725429E2A3FEA5222150305F9C;
struct entry___2AA5CCCB9D787A2137C075D7F71DDB10;
union ifkpi___9B10D65E4AB145405EA162F315DE5FAB;
union ifreq___C815701E280F15262E20FD07168CD215;
union inpcb___1F3C467F2673A40775B3C04457DCB635;
union inpcb___61B649B2802E895728C8AA130C15F594;
struct inpcb___6F13D882517E6D5CBD1B080626F65DC4;
union inpcb___BD75B87EE766833A3DF9644C7FCC1E00;
struct inpcb___F2E854D5640579B71C918C53FCA5BF60;
struct lockf___8E53988229C36DA83A3F462691E29587;
union nlist___26321F46A668C9EA20993925C0BB247E;
struct ucred___FA68314EC5A1B61A7AF0AAA32900A7CA;
union __RequestUnion__host_security_subsystem;
union __RequestUnion__processor_set_subsystem;
struct _bkt___335ECEA3C7A0F876D51082F14580D87B;
struct apple_gss_krb5_authdata_if_relevant_key;
union icmp___115915189B36D486427C31680FC3CC99;
union icmp___B8975A790A59AA025FBB0015D5EF41D8;
struct wait___7577FAE843D32618A04985FDB883FD87;
struct wait___D2BE3D1E9784782BB73F97C8AEDA900E;
union llc___94526051AE93F16537B4BA3D9839A03C;
union rip___AFFF135AAACB9FA320A59FAF8451ECA8;
union tsp___C5C79F2990C63D5A56D70B5237B3DD42;
union __ReplyUnion__host_security_subsystem;
union __ReplyUnion__processor_set_subsystem;
union __RequestUnion__clock_reply_subsystem;
union __RequestUnion__clock_priv_subsystem;
union __RequestUnion__thread_act_subsystem;
union __ReplyUnion__clock_reply_subsystem;
union __RequestUnion__host_priv_subsystem;
union __RequestUnion__mach_host_subsystem;
union __RequestUnion__mach_port_subsystem;
union __RequestUnion__processor_subsystem;
struct ip_timestamp__ipt_timestamp__ipt_ta;
struct netsnmp_baby_steps_access_methods_s;
union __ReplyUnion__clock_priv_subsystem;
union __ReplyUnion__thread_act_subsystem;
union __RequestUnion__lock_set_subsystem;
struct dyld_cache_accelerator_initializer;
struct _0046B6E3F76960040C1982B0037A2659;
struct _01CA16396E8E0606C9A9E0F0E20FCF07;
struct _0362AC053C3D6D68586BA4DFD8C6F4A4;
struct _03A6CE804D1D2E62AF0690634426EB08;
struct _0452B6BEB4BFD9ACB6DF5B39ED6AAB75;
struct _048C5B8CD9C97BF8D36FBC1C859B011A;
struct _049C2F5371F68A7AF5021A13AE52665B;
struct _05C6DC85C1F1DBCA1F6881BCC9CC439D;
struct _05EECDE53F008AE0E4F8A84193F3FFF1;
struct _0659FB689B9ADFB6E4914AFED3DC9D4E;
struct _065AA4F4B3DDB89000C8C945CAC4CC2E;
struct _06E00F3ABE7F060E21CF67B7B214767C;
struct _07330457B1A8E241B31DE41A5C59B575;
struct _088788A38BBC50D48DDABC82065D5C20;
struct _08EB952BF76DF7A29BEE12FBAEF31F94;
struct _0B20F48E2CD2D778BD1F216BA81B71CE;
struct _0B988009212B8FCCED068699BCED27D9;
struct _0BA82F063C392BF02AF0AA599B603A12;
struct _0C23990C9A3077933200554184D19969;
struct _0C41D669CC7829CF12B135747142967F;
struct _0C6FFD5AF206204F3817E1D72432929C;
struct _0CA50DA063E662D611776E2530D5C630;
struct _0D364CBB4DE5622667695AC90920144B;
struct _0D8E21930F8347099053B71EC6295221;
struct _0DDFFC86F34D071263AD20115100C1F0;
struct _0E6CC5D607D299E0B4EAC6FD047D8F10;
struct _0E98A572E6852A6395110737D2ACDD5A;
struct _0EEAE85943931F432FD264390744A4E7;
struct _0FCB944A5BB18021AD7F056168D15B92;
struct _0FEB23DD3DAEBEB1108EF0227BA432B3;
struct _11759426EFCC6514E2B26D384F50B504;
struct _127ADBDA39FF0AF10F74B8734D022F36;
struct _12B704064C062A29855D6F60F4B4754D;
struct _140A3B32F7B8885BC10BF2585A8BB950;
union _149468D43E4B0BB405DED2721C573480;
struct _14FA42BC96FAE132F19280844CA95DD9;
struct _159FB0235BDFD67877B1788BD964EBBB;
struct _15CE29027F05B8BB8B125DB29B7163BF;
struct _160180DA3C237BA935DA764154BD82EA;
struct _1783B4855960E25D5065E02F55E2E263;
struct _184DAAE67CCF1C5185605B7156C28AF9;
struct _19986235E824B34A0D641661B11CD27D;
struct _19DEE1C64F7EC3DDB040A3404BEC0D9F;
struct _1A15CD9E076CE95EED0CB242AD23A728;
struct _1A1AE55D2EE57EB13DB3E8FFAFC89EF6;
struct _1A5C2EFD679D7A6E9374F478B735BD08;
struct _1A9F4F084CD7F87A2A45367D7A315C43;
struct _1AD567D4B9681C99D01C1D9A823E24D4;
union _1B35D174FFD6F02B21E6704B4C951A67;
struct _1C2A755C38DA6DF2E4E1C52F7C8EAD2D;
struct _1D15E1936BEC6B64847025DD7DD9970D;
struct _1FC9C4745BFE4A4C45A6D008A791D581;
struct _1FFFE05A05E2172C218675AE0705335F;
struct _207271BEEF35C1E72B41BFA669B8BAC6;
struct _211858A17FC3AA3AF7FB370462C716CC;
struct _2204D4BF90F99AB14C1563C90305E530;
struct _221E4D0AC05B62FB3AF409C4572323C5;
struct _2267E9288D5132BEF4B5A8B0E8AC33A6;
union _2345F6273F81C99369AD5C0E36D3FD0F;
struct _23464681D0D095F096FB79A1E66062AF;
struct _23B1E26D963E4FD44AA72239E6371C7D;
struct _23C7832C1B5305C0EFB6A337D90F166D;
struct _25B9151150FDB1BB89C80B2A8A85F680;
struct _268E73D492E0AA9543C2DAE749E4E286;
struct _26DC3EB05C17544AB8AFD85FB443F277;
struct _278A4467515A4F9120237B9F03BEA089;
struct _279A7D6BAE671E5D078D50BF79E5C443;
struct _28467C2BF1D87957FF78F1692EFD23EF;
struct _2852C95088D0304BB11C1621105E366D;
struct _293AEC9DFB56700A4584D426C489FAA8;
struct _29720D4B1372A72A8E922F3C51907D2B;
struct _298BF45BC869BFBDF761AF6C0543DC18;
struct _29C8CFA96D5273DFDE9FA38B770B2076;
struct _29E38C6493B75A6FA6817975AF03D4C0;
struct _2A4BA455395BF41F2F254FCA2AA74280;
struct _2AFE5EE5A4A6FE139E45DAAB082A402B;
struct _2B2E2AA3D14CF05952EA09DDB52B4A5A;
struct _2BBFCDCB7AAC56598321865C412EDD95;
struct _2C24181259AD7238BB41D98E89920B4F;
struct _2C6E018EEF72F12BBEAF7059A87F0DBD;
struct _2CB2463B5AF9A96AD792E2C849F46E7F;
struct _2CC85076D34FF07332855A5130D49334;
struct _2D63240515AC7C828AB4C7B058DC34F3;
struct _2E4AEC4DAEDEFAF9740FCE81CFC978B6;
struct _2FBFFD789A2C809930720784B8820AE2;
struct _3010519FC8E063AC13B61458A4695107;
struct _30B637321B49B494EE6ED11BDEC8DE9E;
struct _3199818696990377AE21FB32F85B31D8;
struct _32D888630742756CD8CEFEDBFEF3759B;
struct _333F68BA2C53B7EE0F2D13B448D38F51;
struct _33415C5C79CC87822109F3703B9299D9;
struct _3641F756729AD97A11A3B78A6DBF7918;
struct _3881F9B2E64C73F20ED412E5826C4AC3;
struct _3997483AC20F7907AE665D7DB5ACE57D;
struct _3AD6DCE498BEF9CAF21EEA5EB590F8B6;
struct _3D758159ED3B747496F87C93B1DFC5C3;
struct _3E305BF0A5D26BA3B5EE405973B9934A;
struct _3E6B1E6034954B23411B3542CA61CBC7;
struct _3E9B5AD32E2A117D2E91D7B75FF67A5D;
struct _40D648FC67D542FF76846B4380CDA5C4;
struct _4191ABD3C20A2790C5D1CD3296E7F1ED;
struct _41C52BC1456A2CEC857D3659807C1386;
struct _41E1A7C74B3260A4835F2B305A4796BB;
struct _4203C03DDEA75B12CEED795269F3A503;
struct _423B7D96C11CB2986382813780F7655D;
struct _42CAA206A1F917EEF51ECD514D7730BF;
struct _43EB887A7D5DDC6B5CCC173C2FB6636E;
struct _44347996413661E1D088B7486211F639;
struct _456B529FC136F2DC55D26FBF7B75F342;
struct _457976D3B172FC6C2C90056836B3956E;
struct _466E19AC50622C269D9BCEE6753F9E61;
struct _46F98A3CF815908FB81E03FBB188BF3A;
struct _478A0C5B06F3F085EB929445D74AA112;
struct _479E1DE8ADCB55C92744EDE61D84AC3C;
struct _47B1E0FCCF87277E593C854FB80D0521;
struct _48128538EAAA3D95320DEC45BE60FE04;
struct _488333C1932ECE7496D2930CA2056B6D;
struct _492B927987B38FBFCA824A1252671E25;
struct _49303478B7A3DE4A3AC5102047AEEEA3;
union _4932DC24BA09BB104202CABB17FCEE34;
struct _4B8804F6523751A831C00C572669AA3C;
struct _4BA0F1DBE33A7FC0F8851313161BDC9C;
struct _4C821A4EFE1115B5FC2C4B7C575B022E;
struct _4D17AC1D92846D89C56307C20B09863A;
struct _4E3803487B5F2E6858C157D0AC2FC93A;
struct _50450166C1D5B7E6B5FADC2BC93CD3BD;
struct _5243BF46A737224FC5E0495E8389B9A4;
struct _524B7AA813964FB1B08025913F65D34C;
struct _531BFEDFFBC90F9591113261F4F98EF9;
struct _53A0FD50A74451071D4AFBA65ADAEB7D;
struct _54BD5584F5ADC0EEBB5CC3B97CC9ABCA;
struct _54E3C4845DCBBBAE0B28E8CAF275DF3F;
struct _5567FEF96CECDEB28576E12650BB4F71;
struct _56709C31788A185985ED8F80CB75C10C;
struct _5694E020026D0F35B79D3FDB301355DE;
struct _575360315CF0A1A248958A58C9E14896;
struct _575BADC95B9991A2B9CD2F3725868B8D;
struct _587EA17CD82C334AC5A48AFEDB918C96;
struct _59AA03472FCFCA397F68DC3419B6E0CE;
struct _59F23475065BD2E9F3FA293A04BFFD37;
struct _5A0A32527D91D719A95F587BC624F670;
struct _5A17788FF526DC41EE65ED362A8F9A06;
struct _5A8FECC4C2877C4C87F3C51F77AE50CF;
struct _5B2C4A92108463040FBECE1079B5BB63;
struct _5CF04B6421DF2D20D24DDD28F16D3C2A;
struct _5D67E6FC771F02F85169EAAED44CFB39;
struct _5DB7049864680961BDFB9965C0ABC030;
struct _5E04D424E81EA6874558831D2FFF2B4D;
struct _5E073AC1240433595621B506EB1DA983;
struct _5EDD4B4F882E321F07D8AFF023DDDD7D;
struct _5EE71EC2B6ECEB33372096427B2859E8;
struct _5F22111B9AD44DFDC2D7C3E3FA7C1FF6;
struct _5FB9FDFEF5B2E814098E656C85B458E3;
struct _615D5DC9703294F0ED919D7F4D86FFE9;
struct _618A16F1A9CB4DE56CB312A402246FE1;
struct _62C3C6215D74515CD10ADACC096E4B0E;
struct _64173B50D5C298666AA1E07EB308B730;
struct _6473C35DBCE3A3EC7FFE17F82535E510;
struct _648B167E5FE8430EFE8E72D1CD79C82D;
struct _6671520B86EDC1548DF0B281DB354573;
struct _669EF43B8E86E5E1B2D5831F1B9785B9;
struct _671C5A9886DEC29C4FEC63DF421615C6;
struct _6825248A56C99A2E2B32FCEC421A9DAF;
struct _69D31FA9CDD4718FF5B7AF641C4535B7;
struct _6AAD439E9A60B13F59A2B34A0B1B968C;
struct _6B72EC479EB324C93363DBF0210A4E09;
struct _6BC0D17B2B96A5F91967EA8653FF4084;
struct _6C07615512B7E84BDE41117AEF6DE55F;
struct _6C5D98EAC624033C396B1DA9760D33A0;
struct _6C8E198051B85F433C7E9E257C72A042;
struct _6D6FBD65E5352D7C5B2633444A27C2EA;
struct _6EC1A26EC289C981C6C6C260C40F87D5;
struct _6FABFC1284DD1437D43532E08AE85D17;
struct _6FAFB5BC2FBC216C364C3DE816E26A29;
struct _704B6F3E1CAEFA74D31888B2D78F9F88;
struct _7076454C220BCB0A4BC98C4D7957D8C3;
union _70B7A71D304E70E945AE4E370F85FC88;
struct _71210C31999B47ECFCA79A4496892A9D;
struct _71B18ED6CCE7F8693D0AE793EAB8102E;
struct _72CFD36915A4C95088F1A8826EB17983;
struct _732EA1FD564A0C308BCD0B773E129823;
struct _73352B6DCC801F1A038056696B3E491C;
struct _73773A746C574143C0D7803E150049F9;
struct _739921EDD5E6EE8AE9C50191702F2D06;
struct _73C487D09BD8877E84E65868850A4480;
struct _740196A4AE4F0F1C0D656C4EF0AFE809;
struct _74034741CFA65827A1EC04C7057A4BA2;
struct _74E88319F6971EE204DBFD9B57B269F8;
struct _75304CCD3C967214A8BD283A9F6A93D0;
struct _7568DFD570526C5C2FE600A63FF7542E;
struct _75CD40B42DA3FE652B2050998764C1EA;
struct _77044CD3286DFFD089401BC1A550C0B3;
struct _776B37716F2A203FA8D593ECE8B979C2;
struct _778EB01A7E54F11D251DAE9DCCA40C02;
struct _78A516661F8337ED491DEA9E817B9015;
struct _7AB3BC546F9F35ECC7BE0179CB611F91;
struct _7B9D4C5204CA928D4D62EAAC4140ED21;
struct _7BD86F81607C7D3E2D088DDB92740D0D;
struct _7C98BE8D658361DF4FF7D8EB6353C72F;
struct _7CAB042C95D279B03371C67C49CFDDCE;
struct _7CAB3563A0B63D1E94DFFC6057C63E4C;
struct _7CC33461F71F95EBEC0407BD799E99C2;
struct _7D6BE7882CE721D70B16F72EF4350FEA;
struct _7E69CF2F21F2DE86821941D7ACE3ABBA;
struct _7E94C3F61C7C39FF74FA3EBDC1E527FF;
struct _7FF86B32A3F84F15420C95DB1000946C;
struct _8109324A5E6FC6C8E3497EBF9ED344C0;
struct _81AF895D5A7FC7AA97C511D95D41010E;
struct _8224BF751892D9429891DD778DF6A995;
struct _82604E0BCB50E4D0B690A798AE0B3CDE;
struct _82BD275F6039C166EF4DD9B4F2A9C114;
struct _833420E8F4A758B58AE84F5888D3A29B;
struct _83A491C58EE353645DD01424DEA49DDB;
struct _85D8C0A2DD9AA223810B7F7FD2DEBD15;
struct _86F29632C393BEC61052C835C8FE3129;
struct _87460818A9C42CAAD7BB4BC88EB3F9D9;
struct _892873E46F8F240B706CD4D8B4C0EE69;
struct _89FB7E727BDCF83A4F62DE682B7A306A;
struct _89FEC8E87EEDD00C0CF28D288AB7DB30;
struct _8A833B3771E877D0F99F9E4D0939E663;
struct _8B6FDD4F28EF84224B001DC98A6CCF9E;
struct _8BAB52A5AF78D0C10584D69C8CD7C023;
struct _8BB03BD0BEB0A35EC535A731418A02E8;
struct _8C51462DCCBA10E8B75CFFF786FC297E;
struct _8DDBBBE51D4822B2C8C3E806F70EB27A;
struct _8E8217BBADE0ADE8EA72A465AE8DB052;
struct _8EE2A07E001F320FD50590FBAE1390E6;
struct _9196AF323BDCF3C1DC54CF7CF3A0084E;
struct _92C88324278AB154CB324C17F95F0A4E;
struct _940BEB7FDCEBF6BD2D78705CDCB7BC00;
struct _9487B923D69225998A44A53C15C58453;
union _94CB200B36B7778DB0012FD0C2F25E9C;
struct _9542197A1301620A60E097220E793D31;
struct _956C7F5333254C457CAB162127DEEC80;
struct _9582347D37BF76839153FB59D783D952;
struct _960F984C3AE962B8F9E63C3D54374EB6;
struct _966BCD5BEC08EADD7CB66B18D60473E0;
struct _979FA3DE6ECCF956231BFC297C4278E6;
struct _99892F497716B18479AFC6F93A6376AD;
struct _9A7E6AE5055FB004EEAAEBA0AF2BBD44;
struct _9AA8814A56848052027B4042AE3CFED4;
struct _9AB293AD14E7E28F8D88B77C9D755114;
struct _9ADB6D801CB74636DD3BB8128AE6A17C;
struct _9BD15C2DE3B549B6E5D91AD4D5FB2472;
struct _9C5E7BEBDEAC9680FE5D9ADFB2DEA0C0;
struct _9CD45B6D299FC36A745AB895FED2FFAE;
struct _9D47920389E792E7BC941BE34CEE9E53;
struct _9F41B8E90BE057B33891A8A6EE681A31;
struct _9F75FA6E4EE2D3B86C582C471EA99312;
struct _9FBED4CF5043C1481558BDE489C7B3DA;
struct _A02E0C6A2318D7F918526EFE13F50746;
struct _A1BDF64247D778F13F19FE58DA07510E;
struct _A1BE0EBA393D65D9C9965FE1E31C9EA5;
struct _A1F779EC0A67B47A0153BAA39A848A18;
struct _A2898260CF48A71D77A1F36A2E3AC7DC;
struct _A351D2C18B5CB7A2BB6D222C452FE9CB;
struct _A474581121662292E5F04EE46D9A30FE;
struct _A4B2B056AC02B7A91138DA853BA9D10A;
struct _A5EA39C0CE70DF2015B585156ECF8E0B;
struct _A737AF5627966EA5E9B02401BF60C18A;
struct _A76923D44FC3AA9C7AC0A016BD3320E6;
struct _A8165CB9074F0252F5387BFE013515BC;
struct _AAF01D1DF014C088EF592F6E4410D618;
struct _AB09096FC22418DF5FF078E5EEC0B812;
struct _AB89E1C42AC04654AD793083A62D1A9F;
struct _AC1F0727205AA235F31FA7E4FBAB6931;
struct _ACB9639845DE66FD3FA84A89BA11A6C6;
struct _AE11D0CF51A850EC87EAB95E067600DD;
struct _AF39247D48CF164753A445931539035C;
struct _AF6F394DED458EEBDAD15880C92DFAA7;
struct _AFE166C1B1045E0C8B7F866BEC963EDA;
struct _B0130559E5806B7D1758D14999BC33AE;
struct _B01B4E9250F885241409748218B2C105;
struct _B0A4D3FCA1AE58C86963BEC154F83A57;
struct _B1FA16DA0CC571429FF694D2198EB26D;
struct _B32155DE37EA00CA7D015F061033D0DB;
struct _B3220D9486325F8BA63885498B936915;
struct _B346CF55E253733CEEA9A9F57C8BD312;
struct _B422E43E2D6C3DFAD9728BE968F369BB;
struct _B58E161BB725F9F52DF6F7C15EFA30EA;
struct _B609C4CC44C72843B520E4D8871C3E06;
struct _B6133C04D7E68696884D0F2477EC89D3;
struct _B74BBF4C1467FECDB27E8CB1AA37D794;
struct _B84095E180EBE617859A8545EC2805FC;
struct _B8642CD798FE16F406A454FEEE53FFC8;
struct _B8B9B85B971E3DBFC31707A9282CDA9E;
struct _B9D89F8ED69AD657CF8CCF6FD4EA24D0;
struct _BA1BAA97A85BF93D870BFCA3692BE7F3;
struct _BAA0E1D2BF5986DFAC16C10809EF9355;
struct _BAC2AEB1FCD724D135CC335E00067868;
struct _BBF0DF368E56DACC45223BCB3DEA73E4;
struct _BC1F9A8A398E4973C30CEFF05D86C139;
struct _BC7B37D8A6A0C0969EA99CA1E99D995C;
struct _BD234ABF5512865B2381E7712BF88565;
struct _BD619B2F7AFF7BA6F06506AA27210664;
struct _BF6258091C70028000D911F61A5FB5AF;
struct _C12C9BDFE67D223D1BA5D023CABB3CBD;
struct _C14D86D16E65DCD7FF19482AD8623ED6;
struct _C2CBDBAA53DBE4CD2BF833027FA299D5;
struct _C2E0EF1D854A0208E5318AF4389F85C9;
struct _C32751CD7C48DEB510AF18CB8191FD58;
struct _C6E5E20E9CA57385FADCC3EC88B8E8F5;
struct _C73F2DA5D1FAD09FF5C310E32862AC76;
struct _C9793B2A88A40550F3E6FCBE57C78800;
struct _CAE54129DDC456E19A5898FF69B86D62;
struct _CC043B3A15E15755209E3A20F84F16AB;
struct _CC76991D9F83D1A958E6E229A0D1EA8D;
struct _CCB3EA4D4E2EB1F9AAB4C1A3C0D4C77E;
struct _CD5F4FFB48357709D2974D1687603B86;
struct _CD97E842BE97226AEDD8FA0499E21FED;
struct _CDC8267DE048B2F631A00EEC2191AA35;
struct _CEE03D2EA6896FBF3749E2AC26AFF34E;
struct _D01A4AC644F6B88C742A307AE9CB3F5A;
struct _D09842556D06A2DF198ED28371C9FC24;
struct _D0AB9F48B0077248C9C221F011C15B93;
struct _D0C9668C16251A7C1942AA04B3C1BAAB;
struct _D0D70EDABC5C86492745B3F9A6B48782;
struct _D27F585C89C5E008406F3E8E8B85AF03;
struct _D4151FDBB8529D6CBB93F4DEF633B437;
struct _D48A1587B9C67DDCC12D42BCFEC74299;
struct _D58DA1E1B485B25D38C6421E4BA839DC;
struct _D5C5C0A4FB77109A22B40E51950751DD;
struct _D5D5FAADE45C3E62C0E3AA0EFAA1D8B2;
struct _D6100D925DD907377B334267ECE33E6F;
struct _D66CE1D14E0A9D84788C1B396D687289;
struct _D6880A8626DE4DB5DA08690FFF5A7EE0;
struct _D81AFE54BC1383739B7B7705B8C42C3D;
struct _D896310976FBD32B984A6ABA327F9588;
struct _D9B0ADBD00F5F5522FB9AC300CCD391E;
struct _DA3EF9D89B837FDE93915298E895B43B;
struct _DAECF1BBBEC63DCCC1C5BA594BE2FE4F;
struct _DAF19F87D18289B2FEB9E5CF85C90F9A;
union _DB0CF6B582A763FBC7ADB1435806EA74;
struct _DB68657B2CF3361C93E3D336E930DDB3;
struct _DB9FAB3DF43BC43027D23EAB111F29D9;
struct _DBA30DED97FFFF6D93797DB9E5CF4F43;
struct _DC9D1599BB1638520AEEC910A299EC32;
struct _DCAF10FDD4D6724B522470D0830DC7B5;
struct _DD7F30A52BF20C3BD0A18D92A677C06B;
struct _DF1D91DCAB84234D18917BEB10ABC3BE;
struct _E0DB54FB1236B40874C7451A4BD28FF5;
struct _E1260AB78985DBC228459590506E4C92;
struct _E24E91FD65EFF0F160CA6C71162442DA;
struct _E31153E692B38AE6ABEA73E583DCB3CE;
struct _E3188AF9666AE21995C94F310B376FC6;
struct _E65ABC06A11602FED23D2457B8AEAC9D;
struct _E6DD5EF71C59CDBBC01C1CDDA746F1DC;
struct _E97267E034E71568AADDE042A76192B8;
struct _E9BF538EED9B46D5473DA4650D70F75C;
struct _EA7534D780195B9F22D1174E6CA3EFC2;
struct _EB461EAC719110594EB746F8AD525682;
struct _EB59F425BEB47ECBA8886A98C22ABD7D;
struct _EBC9A6B10C6BC0782A5CEC3196C31D82;
struct _EC3D8C1D47CD577132BD4EE7AFBF4E05;
struct _EC40C8956DA7A36243DBF2EA18E7021D;
struct _EC7035EF31280ED06745154F47D7D805;
struct _EC96C272326DB5C337E3479E74002932;
struct _ECBF3EDE173DC336165517660AF0126F;
struct _EE99DDBDD6523B38A4B5202F2305E34F;
struct _EF3ED49D3DFE8EEF757C9F0AD64865F5;
struct _F105F10DE5C66ECF2E7E726999936688;
struct _F11203120C87D682B8E6D27123FE2347;
struct _F1773A35038DB66F062B2D1DBF85E45A;
struct _F1A44C946A11C4E88A7FB24B2ED8014B;
struct _F1B3AE218D4ECD7C43A384264AB43EE3;
struct _F1BB640A69E4C9C26809E32C99FD444E;
struct _F26177398F3106F2DD5FF971AA6CC145;
union _F2859707886ADAFD301FD24E7C665704;
struct _F30BA47F3A86B79CC42843AD52D50564;
struct _F38A67955B73283DD9B66EE2B15E7106;
struct _F3A38383CE2E0DAC4148785558BAB876;
struct _F406E51A63C11217A91340C33516F88C;
struct _F465ED20B10C6481709BD63930BC6003;
struct _F49B3D681D6431C8260F2C014755700B;
struct _F4F9A6DCA893D5DB6F32B9C415A8FCA2;
struct _F9A7ED8F42D8CCD77CCEA18A32D3B2AC;
struct _FA547AB27F70B847C07B2381F2BB5B39;
struct _FB19EE544F0F316F1E6BF9A40B1BEA34;
struct _FB4BFEF078574026C3C8614BADD24D68;
struct _FB65CC25317C65F4D3C395D38114E663;
struct _FBA7D87DC326A635240EF53AE056B982;
struct _FC28B28F509CCD1DBFC66983DF428597;
struct _FCCAD8574E122F2EFADDBD13F6972B4E;
struct _FD3C3D52399ED0C4A355988E4BC1F0A0;
struct _FDCFA80C9015498DB49FE80C74BE4ADF;
struct _FE3C27134D9979D1E07496C70FEB2BBD;
struct _FEDEB051CE08D897834232829C0C3BAE;
struct _FEF862DC5C2F986098A4350401CDFBFD;
struct _FFAD9CD714E6EDB3A8033A5FCDD84734;
struct _FFDCF6D4903B3C43BBF48445F1564ABC;
struct _FFE74F33A8D4184B0115806877430EDD;
struct CompileTimeAssertionChecks_DNS_SD;
union __ReplyUnion__host_priv_subsystem;
union __ReplyUnion__mach_host_subsystem;
union __ReplyUnion__mach_port_subsystem;
union __ReplyUnion__processor_subsystem;
union __RequestUnion__mach_vm_subsystem;
union __RequestUnion__netname_subsystem;
struct netsnmp_table_registration_info_s;
union __ReplyUnion__lock_set_subsystem;
union __RequestUnion__ledger_subsystem;
union __RequestUnion__vm_map_subsystem;
struct netsnmp_table_data_set_storage_s;
union __ReplyUnion__mach_vm_subsystem;
union __ReplyUnion__netname_subsystem;
union __RequestUnion__clock_subsystem;
struct netsnmp_table_array_callbacks_s;
union __ReplyUnion__ledger_subsystem;
union __ReplyUnion__vm_map_subsystem;
union __RequestUnion__task_subsystem;
struct __darwin_x86_exception_state64;
struct dyld_cache_local_symbols_entry;
struct gss_krb5_lucid_context_version;
struct netsnmp_handler_registration_s;
struct vm_region_submap_short_info_64;
struct Netscape_certificate_sequence;
union __ReplyUnion__clock_subsystem;
union __RequestUnion__exc_subsystem;
struct __darwin_i386_exception_state;
struct dyld_cache_local_symbols_info;
struct in6_rrenumreq__irr_raflagmask;
struct netsnmp_mib_handler_methods_s;
struct netsnmp_oid_stash_save_info_s;
struct netsnmp_state_machine_input_s;
struct thread_time_constraint_policy;
struct PROXY_CERT_INFO_EXTENSION_st;
union __ReplyUnion__task_subsystem;
struct __darwin_pthread_handler_rec;
struct _opaque_pthread_rwlockattr_t;
struct netsnmp_agent_request_info_s;
struct netsnmp_data_list_saveinfo_s;
struct netsnmp_request_group_item_s;
struct netsnmp_state_machine_step_s;
struct netsnmp_table_request_info_s;
struct xp_window_state_event_struct;
union __ReplyUnion__exc_subsystem;
struct __darwin_x86_thread_state64;
struct _krb5_verify_init_creds_opt;
struct _opaque_pthread_mutexattr_t;
struct dyld_cache_accelerator_info;
struct dyld_cache_image_info_extra;
struct gss_channel_bindings_struct;
union ip_timestamp__ipt_timestamp;
struct netsnmp_indexed_addr_pair_s;
struct netsnmp_mode_handler_list_s;
struct pkcs7_signedandenveloped_st;
struct snmp_secmod_incoming_params;
struct snmp_secmod_outgoing_params;
struct xp_async_error_event_struct;
struct __darwin_i386_thread_state;
struct __darwin_x86_debug_state32;
struct __darwin_x86_debug_state64;
struct __darwin_x86_float_state64;
struct _opaque_pthread_condattr_t;
struct dyld_cache_accelerator_dof;
struct dyld_cache_image_text_info;
struct err_code__err_code_pgfault;
struct ldap_schema_extension_item;
struct netsnmp_baby_steps_modes_s;
struct netsnmp_row_merge_status_x;
struct netsnmp_stash_cache_data_s;
struct netsnmp_stash_cache_info_s;
struct netsnmp_tmStateReference_s;
struct netsnmp_transport_config_s;
struct pkcs7_issuer_and_serial_st;
struct rpc_routine_arg_descriptor;
struct __darwin_i386_float_state;
struct err_code__err_code_normal;
struct gss_krb5_lucid_context_v1;
struct memory_object_behave_info;
struct netsnmp_delegated_cache_s;
struct register_sysOR_parameters;
struct scattered_relocation_info;
struct __darwin_x86_avx_state64;
struct _krb5_cryptosystem_entry;
struct _krb5_get_init_creds_opt;
struct _opaque_pthread_rwlock_t;
struct _xmlSchemaAttributeGroup;
struct _xmlSchematronParserCtxt;
struct gss_krb5_rfc1964_keydata;
struct kauth_identity_extlookup;
struct netsnmp_oid_stash_node_s;
struct netsnmp_table_data_set_s;
struct netsnmp_transport_list_s;
struct processor_set_basic_info;
struct sasl_security_properties;
struct thread_background_policy;
struct thread_precedence_policy;
struct vm_region_submap_info_64;
struct xp_window_changes_struct;
struct ASN1_PRIMITIVE_FUNCS_st;
struct HFSMasterDirectoryBlock;
struct HFSPlusExtentDescriptor;
struct __darwin_i386_avx_state;
struct __darwin_mcontext_avx32;
struct __darwin_mcontext_avx64;
struct _opaque_pthread_mutex_t;
struct _ossl_old_des_ks_struct;
struct _xmlCharEncodingHandler;
struct _xmlSchemaAttributeLink;
struct _xmlSchematronValidCtxt;
struct bio_f_buffer_ctx_struct;
struct dyld_cache_mapping_info;
struct dylib_table_of_contents;
struct encryption_info_command;
struct gss_OID_set_desc_struct;
struct mecab_dictionary_info_t;
struct memory_object_attr_info;
struct memory_object_perf_info;
struct netsnmp_agent_session_s;
struct netsnmp_callback_info_s;
struct netsnmp_callback_pass_s;
struct netsnmp_iterator_info_s;
struct netsnmp_request_group_s;
struct ocsp_service_locator_st;
struct ocsp_single_response_st;
struct proc_regionwithpathinfo;
struct proc_threadwithpathinfo;
struct processor_cpu_load_info;
struct processor_set_load_info;
struct res_9_ns_tcp_tsig_state;
struct subtree_context_cache_s;
struct vm_region_basic_info_64;
struct vm_region_extended_info;
struct _computed_attr_context;
struct _krb5_enc_kdc_rep_part;
struct _opaque_pthread_attr_t;
struct _opaque_pthread_cond_t;
struct _opaque_pthread_once_t;
struct _passwd_phrase_element;
struct _xmlXPathParserContext;
struct crypto_ex_data_func_st;
struct dispatch_source_type_s;
struct dtls1_retransmit_state;
struct dyld_cache_range_entry;
struct dyld_cache_slide_info2;
struct dyld_cache_slide_info3;
struct gss_buffer_desc_struct;
struct malloc_introspection_t;
struct netsnmp_handler_args_s;
struct netsnmp_large_fd_set_s;
struct netsnmp_old_api_info_s;
struct netsnmp_request_info_s;
struct netsnmp_scalar_group_s;
struct netsnmp_watcher_info_s;
struct nfs_user_stat_path_rec;
struct nfs_user_stat_user_rec;
struct ocsp_basic_response_st;
struct pkcs8_priv_key_info_st;
struct policy_timeshare_limit;
struct prebound_dylib_command;
struct rpc_routine_descriptor;
struct sqlite3_pcache_methods;
struct sqlite3_rtree_geometry;
struct st_CRYPTO_EX_DATA_IMPL;
struct tagSQL_INTERVAL_STRUCT;
struct task_absolutetime_info;
struct task_affinity_tag_info;
struct task_kernelmemory_info;
struct task_thread_times_info;
struct thread_affinity_policy;
struct thread_extended_policy;
struct thread_identifier_info;
struct thread_standard_policy;
struct twolevel_hints_command;
struct ACCESS_DESCRIPTION_st;
struct BIT_STRING_BITNAME_st;
struct HFSPlusAttrInlineData;
struct POLICY_CONSTRAINTS_st;
struct X509V3_CONF_METHOD_st;
struct _krb5_ap_rep_enc_part;
struct _krb5_gic_opt_pa_data;
struct _xmlParserInputBuffer;
struct _xmlParserNodeInfoSeq;
struct _xmlRelaxNGParserCtxt;
struct _xsltFormatNumberInfo;
struct _xsltTransformContext;
struct client_sasl_mechanism;
struct dispatch_queue_attr_s;
struct dyld_cache_image_info;
struct dyld_cache_slide_info;
struct kernel_resource_sizes;
struct krb5_authenticator_st;
struct krb5_authorization_st;
struct krb5_encryptionkey_st;
struct linkedit_data_command;
struct netsnmp_column_info_t;
struct netsnmp_log_handler_s;
struct netsnmp_mib_handler_s;
struct netsnmp_token_descr_s;
struct ocsp_response_data_st;
struct policy_timeshare_base;
struct policy_timeshare_info;
struct prebind_cksum_command;
struct server_sasl_mechanism;
struct sqlite3_mutex_methods;
struct sub_framework_command;
struct tagSQL_NUMERIC_STRUCT;
struct vm_region_submap_info;
struct vol_capabilities_attr;
struct x509_lookup_method_st;
struct ASN1_COMPAT_FUNCS_st;
struct ASN1_EXTERN_FUNCS_st;
struct BASIC_CONSTRAINTS_st;
struct FndrExtendedFileInfo;
struct HFSPlusCatalogFolder;
struct HFSPlusCatalogThread;
struct PKEY_USAGE_PERIOD_st;
struct X509_POLICY_CACHE_st;
struct X509_POLICY_LEVEL_st;
struct X509_VERIFY_PARAM_st;
struct __darwin_sigaltstack;
struct _krb5_last_req_entry;
struct _xmlRelaxNGValidCtxt;
struct _xmlSchemaParserCtxt;
struct _xmlSchemaWildcardNs;
struct asn1_string_table_st;
struct dtls1_record_data_st;
struct gss_krb5_cfx_keydata;
struct kev_in6_addrlifetime;
struct krb5_keytab_entry_st;
struct ldap_apifeature_info;
struct ldap_matchingruleuse;
struct mecab_learner_node_t;
struct mecab_learner_path_t;
struct module_compatability;
struct netsnmp_ref_size_t_s;
struct netsnmp_table_data_s;
struct netsnmp_tree_cache_s;
struct netsnmp_void_array_s;
struct nfs_export_stat_desc;
struct nfs_lock_msg_request;
struct ocsp_responder_id_st;
struct ocsp_revoked_info_st;
struct pkcs7_enc_content_st;
struct pkcs7_signer_info_st;
struct processor_basic_info;
union res_9_sockaddr_union;
struct sub_umbrella_command;
struct task_category_policy;
struct vm_extmod_statistics;
struct vm_region_basic_info;
struct vnode_fdinfowithpath;
struct x86_seg_load_fault32;
struct FndrExtendedDirInfo;
struct HFSExtentDescriptor;
struct HFSPlusAttrForkData;
struct HFSPlusVolumeHeader;
struct NAME_CONSTRAINTS_st;
struct X509_POLICY_NODE_st;
struct X509_POLICY_TREE_st;
struct __darwin_fp_control;
struct __darwin_mcontext32;
struct __darwin_mcontext64;
struct _krb5_authenticator;
struct _krb5_cred_enc_part;
struct _krb5_encrypt_block;
struct _xmlSchemaAttribute;
struct _xmlSchemaFacetLink;
struct _xmlSchemaValidCtxt;
struct _xsltTransformCache;
struct agent_add_trap_args;
struct cups_page_header2_s;
struct gss_OID_desc_struct;
struct ifmedia_description;
struct in6_prflags__prf_ra;
struct in6_prflags__prf_rr;
struct krb5_principal_data;
union ldapmod__mod_vals_u;
struct mach_vm_info_region;
struct mach_zone_info_data;
struct malloc_statistics_t;
struct nd_neighbor_solicit;
struct netsnmp_addr_pair_s;
struct netsnmp_container_s;
struct netsnmp_data_list_s;
struct netsnmp_table_row_s;
struct netsnmp_tdata_row_s;
struct netsnmp_transport_s;
struct nfs_export_net_args;
struct nfs_export_stat_rec;
struct ocsp_cert_status_st;
struct ocsp_one_request_st;
struct pkcs7_recip_info_st;
struct register_parameters;
struct routines_command_64;
struct sadb_x_ipsecrequest;
struct socket_filter_entry;
struct sqlite3_mem_methods;
struct sqlite3_vtab_cursor;
struct st_dynamic_LOCK_fns;
struct sub_library_command;
struct tagTIMESTAMP_STRUCT;
struct task_zone_info_data;
struct version_min_command;
struct vol_attributes_attr;
struct x86_exception_state;
struct AUTHORITY_KEYID_st;
struct Block_callbacks_RR;
struct Block_descriptor_1;
struct Block_descriptor_2;
struct Block_descriptor_3;
struct DIST_POINT_NAME_st;
struct ENGINE_CMD_DEFN_st;
struct ERR_string_data_st;
struct GENERAL_SUBTREE_st;
struct HFSPlusAttrExtents;
struct HFSPlusCatalogFile;
struct PEM_Encode_Seal_st;
struct STORE_attr_info_st;
struct X509_name_entry_st;
struct __darwin_fp_status;
struct __rpc_xdr__xdr_ops;
struct _krb5_auth_context;
struct _krb5_cccol_cursor;
struct _krb5_enc_tkt_part;
struct _krb5_ticket_times;
struct _res_9_ns_flagdata;
struct _xmlElementContent;
struct _xmlParserNodeInfo;
struct _xmlSchemaNotation;
struct _xmlSchemaTypeLink;
struct _xmlSchemaWildcard;
struct _xsltDecimalFormat;
struct _xsltSecurityPrefs;
struct accessx_descriptor;
struct cache_attributes_s;
struct cups_page_header_s;
struct disktab__partition;
struct ecpk_parameters_st;
struct evp_cipher_info_st;
struct fbootstraptransfer;
struct gss_cred_id_struct;
struct gss_krb5_lucid_key;
struct host_cpu_load_info;
struct host_priority_info;
struct icmp6_router_renum;
struct inpcb64_list_entry;
struct ipc_info_tree_name;
struct ldap_attributetype;
struct ldap_structurerule;
struct mach_timebase_info;
struct mach_vm_read_entry;
struct nd_neighbor_advert;
struct nd_opt_prefix_info;
struct ndrv_protocol_desc;
struct netsnmp_cachemap_s;
struct netsnmp_iterator_s;
struct netsnmp_set_info_s;
struct nfs_lock_msg_queue;
struct nfs_user_stat_desc;
struct ocsp_resp_bytes_st;
struct pkcs7_encrypted_st;
struct pkcs7_enveloped_st;
struct proc_vnodepathinfo;
struct proc_workqueueinfo;
struct read_config_memory;
struct routine_descriptor;
struct sasl_client_params;
struct sasl_server_params;
struct segment_command_64;
struct sqlite3_index_info;
struct sqlite3_io_methods;
struct st_dynamic_MEM_fns;
struct sub_client_command;
struct task_basic_info_32;
struct task_basic_info_64;
struct vm_page_info_basic;
struct vm_region_top_info;
struct x509_attributes_st;
struct ASN1_ADB_TABLE_st;
union HFSPlusAttrRecord;
struct HFSPlusCatalogKey;
struct Netscape_spkac_st;
struct POLICYQUALINFO_st;
struct POLICY_MAPPING_st;
struct RIPEMD160state_st;
struct X509_extension_st;
struct __darwin_mmst_reg;
struct __darwin_ucontext;
struct __res_9_state_ext;
struct _inpcb_list_entry;
struct _krb5_tkt_authent;
struct _opaque_pthread_t;
struct _unpcb_list_entry;
struct _xmlAutomataState;
struct _xmlSchemaElement;
struct _xmlSchemaSAXPlug;
struct _xmlXPathCompExpr;
struct _xmlXPathVariable;
struct _xsltRuntimeExtra;
struct _xsltStylePreComp;
struct asn1_const_ctx_st;
struct crypto_ex_data_st;
struct dyld_info_command;
struct enginetime_struct;
struct evp_Encode_Ctx_st;
struct evp_cipher_ctx_st;
struct gss_ctx_id_struct;
struct http_credential_s;
struct ip_linklocal_stat;
struct kev_dl_proto_data;
struct kinfo_proc__eproc;
struct krb5_princname_st;
struct ldap_matchingrule;
struct mib_egpNeighEntry;
struct nd_opt_route_info;
struct nd_router_solicit;
struct netsnmp_factory_s;
struct netsnmp_subtree_s;
struct netsnmp_tdomain_s;
struct ocsp_signature_st;
struct policy_fifo_limit;
struct proc_bsdshortinfo;
struct proc_fileportinfo;
struct res_9_ns_tsig_key;
struct sasl_auxprop_plug;
struct slapi_componentid;
struct snmp_gen_callback;
struct tagSQL_DAY_SECOND;
struct tagSQL_YEAR_MONTH;
struct thread_basic_info;
struct ucred__posix_cred;
struct usmStateReference;
struct vm_info_region_64;
struct vnop_advlock_args;
struct x509_cert_pair_st;
struct x509_store_ctx_st;
struct ASN1_ENCODING_st;
struct ASN1_TEMPLATE_st;
struct BTNodeDescriptor;
struct CLIENT__clnt_ops;
struct HFSCatalogFolder;
struct HFSCatalogThread;
struct HFSPlusExtentKey;
struct HMAC_MD5_STATE_s;
struct JournalInfoBlock;
struct Netscape_spki_st;
struct X509_crl_info_st;
struct X509_req_info_st;
struct _TidyInputSource;
struct __darwin_xmm_reg;
struct _ipfw_insn_limit;
struct _krb5_octet_data;
struct _xmlChRangeGroup;
struct _xmlOutputBuffer;
struct _xmlSAXHandlerV1;
struct _xmlXIncludeCtxt;
struct _xmlXPathContext;
struct _xsltElemPreComp;
struct appletalk_fdinfo;
struct dispatch_queue_s;
struct dtls1_timeout_st;
struct dylinker_command;
struct dysymtab_command;
struct group_source_req;
struct hash_info_bucket;
struct icmp6_namelookup;
struct in6_addrlifetime;
struct kev_in_collision;
struct kev_in_portinuse;
struct krb5_checksum_st;
struct krb5_replay_data;
struct ldap_contentrule;
struct ldap_objectclass;
struct mach_port_limits;
struct mach_port_status;
struct mib_ipRouteEntry;
struct mib_tcpConnEntry;
struct module_init_list;
struct name_table_entry;
struct nd_router_advert;
struct netsnmp_ref_void;
struct ocsp_req_info_st;
struct ocsp_response_st;
struct pcap_file_header;
struct policy_fifo_base;
struct policy_fifo_info;
struct proc_taskallinfo;
struct record_pqueue_st;
struct routines_command;
struct sadb_x_kmprivate;
struct sasl_client_plug;
struct sasl_server_plug;
struct slapi_plugindesc;
struct snmp_log_message;
struct snmp_secmod_list;
struct so_np_extensions;
struct sockaddr_storage;
struct task_events_info;
struct task_extmod_info;
struct vacm_accessEntry;
struct x509_cert_aux_st;
struct x509_hash_dir_st;
struct x86_thread_state;
struct EDIPartyName_st;
struct GENERAL_NAME_st;
struct HFSPlusAttrData;
struct HFSPlusForkData;
struct PROXY_POLICY_st;
struct STORE_OBJECT_st;
struct X509_objects_st;
struct X509_revoked_st;
union _TXTRecordRef_t;
struct _TidyOutputSink;
struct _copyfile_state;
struct _htmlEntityDesc;
struct _ipfw_insn_pipe;
struct _krb5_cred_info;
struct _krb5_transited;
struct _xmlDOMWrapCtxt;
struct _xmlEnumeration;
struct _xmlGlobalState;
struct _xmlLocationSet;
struct _xmlParserInput;
struct _xmlRegExecCtxt;
struct _xmlSchemaAnnot;
struct _xmlSchemaFacet;
struct _xmlXPathObject;
struct _xsltNumberData;
struct _xsltStylesheet;
struct auditpinfo_addr;
struct conf_imodule_st;
struct dispatch_data_s;
struct dtls1_bitmap_st;
struct dylib_module_64;
struct dylib_reference;
struct ffi_raw_closure;
struct fvmfile_command;
struct gss_name_struct;
struct host_basic_info;
struct host_sched_info;
struct http_addrlist_s;
struct iconv_fallbacks;
struct ipp_attribute_s;
struct kern_event_info;
struct kev_vendor_code;
struct kmod_info_32_v1;
struct kmod_info_64_v1;
struct krb5_encdata_st;
struct krb5_tktbody_st;
struct lber_memory_fns;
struct mac_module_data;
struct mac_policy_conf;
struct mib_ipAddrEntry;
struct ndrv_demux_desc;
struct netsnmp_cache_s;
struct netsnmp_index_s;
struct netsnmp_tdata_s;
struct nfs_export_args;
union nfs_quadconvert;
struct nlm4_unlockargs;
struct ocsp_cert_id_st;
struct ocsp_req_ctx_st;
struct ocsp_request_st;
struct old_opi_cache_s;
struct openssl_item_st;
struct pkcs7_digest_st;
struct pkcs7_signed_st;
struct policy_rr_limit;
struct port_obj_tentry;
struct proc_regioninfo;
struct proc_threadinfo;
struct rawarc_order_64;
struct relocation_info;
struct sadb_session_id;
struct sasl_out_params;
struct segment_command;
struct short_hand_verf;
struct snmp_secmod_def;
struct sockbuf_io_desc;
struct sqlite3_context;
struct store_method_st;
struct task_basic_info;
struct unw_proc_info_t;
struct vacm_groupEntry;
struct view_parameters;
struct vm_statistics64;
struct vnode_info_path;
struct x509_purpose_st;
struct x86_debug_state;
struct x86_float_state;
struct FndrOpaqueInfo;
struct HFSCatalogFile;
struct HFSPlusAttrKey;
struct HFSPlusBSDInfo;
struct HMAC_MD5_CTX_s;
struct PBKDF2PARAM_st;
struct SHA256state_st;
struct SHA512state_st;
struct X509_pubkey_st;
struct __ifnet_filter;
struct __msqid_ds_new;
struct __semid_ds_new;
struct __shmid_ds_new;
struct _cups_raster_s;
struct _ipfw_dyn_rule;
struct _ipfw_insn_log;
struct _ipfw_insn_mac;
struct _ipfw_insn_u16;
struct _ipfw_insn_u32;
struct _krb5_authdata;
struct _krb5_checksum;
struct _krb5_enc_data;
struct _krb5_keyblock;
struct _krb5_pwd_data;
struct _krb5_response;
struct _malloc_zone_t;
struct _mime_filter_s;
struct _xmlParserCtxt;
struct _xmlSAXHandler;
struct _xmlSAXLocator;
struct _xmlSchemaType;
struct _xmlSchematron;
struct _xmlStreamCtxt;
struct _xmlTextReader;
struct _xmlTextWriter;
struct _xmlValidState;
struct _xmlXPathFunct;
struct _xsltCompMatch;
struct _xsltStackElem;
struct accepted_reply;
struct appletalk_info;
struct asn1_header_st;
struct asn1_method_st;
struct asn1_object_st;
struct asn1_string_st;
struct au_evclass_map;
struct auditinfo_addr;
struct authunix_parms;
struct bn_blinding_st;
struct bn_mont_ctx_st;
struct bn_recp_ctx_st;
struct bp_getfile_arg;
struct bp_getfile_res;
struct comp_method_st;
struct conf_method_st;
struct conf_module_st;
struct ctl_event_data;
struct dtls1_state_st;
struct fvmlib_command;
struct hfs_mount_args;
struct hm_fragment_st;
struct host_load_info;
struct icmp6_nodeinfo;
struct ifs_iso_8802_3;
struct in6_addrpolicy;
struct internal_state;
struct ip6_opt_router;
struct ip6_opt_tunnel;
struct ip_mreq_source;
struct ipc_info_space;
struct kern_event_msg;
struct klm_unlockargs;
struct kmod_reference;
struct krb5_ap_req_st;
struct lockgroup_info;
struct mac_policy_ops;
struct mach_header_64;
struct mach_zone_name;
struct net_event_data;
struct netsnmp_file_s;
struct nfs_filehandle;
struct nlm4_shareargs;
struct nlm_unlockargs;
struct ocsp_crl_id_st;
struct pam_repository;
struct policy_rr_base;
struct policy_rr_info;
struct private_key_st;
struct rejected_reply;
struct sadb_supported;
struct sasl_canonuser;
struct slapi_valueset;
struct snmp_enum_list;
struct sockaddr_inarp;
struct sqlite3_backup;
struct sqlite3_module;
struct sqlite3_pcache;
struct ssl3_buffer_st;
struct ssl3_record_st;
struct ssl_session_st;
struct st_dynamic_fns;
struct symseg_command;
struct symtab_command;
struct tagDATE_STRUCT;
struct tagTIME_STRUCT;
struct task_dyld_info;
struct thread_command;
struct tlv_descriptor;
struct vacm_viewEntry;
struct vm_info_object;
struct vm_info_region;
struct x509_lookup_st;
struct x509_object_st;
struct ypall_callback;
struct ypbind_binding;
struct yppushresp_xfr;
struct ypresp_key_val;
struct ypresp_maplist;
struct ASN1_VALUE_st;
struct Block_byref_2;
struct Block_byref_3;
struct DIST_POINT_st;
struct HFSCatalogKey;
struct LDAPDerefSpec;
struct POLICYINFO_st;
struct USERNOTICE_st;
struct X509_algor_st;
struct _TidyIterator;
struct __ifmultiaddr;
struct __msfilterreq;
struct __res_9_state;
union __sigaction_u;
struct _cups_array_s;
struct _htmlElemDesc;
struct _ipfw_insn_if;
struct _ipfw_insn_ip;
struct _ipfw_insn_sa;
struct _keymap_entry;
struct _krb5_address;
struct _krb5_context;
struct _krb5_kdc_rep;
struct _krb5_kdc_req;
struct _krb5_pa_data;
struct _mime_magic_s;
struct _xlinkHandler;
struct _xmlAttribute;
struct _xmlHashTable;
struct _xmlSchemaVal;
struct _xmlShellCtxt;
struct _xmlValidCtxt;
struct _xmlXPathAxis;
struct _xmlXPathType;
struct _xsltDocument;
struct _xsltKeyTable;
struct _xsltTemplate;
struct attribute_set;
struct attrreference;
struct bio_method_st;
struct bp_whoami_arg;
struct bp_whoami_res;
struct ccs_header_st;
struct cups_dentry_s;
struct cups_dither_s;
struct cups_option_s;
struct cups_sample_s;
struct curl_certinfo;
struct curl_fileinfo;
struct curl_httppost;
struct curl_sockaddr;
struct dylib_command;
struct env_md_ctx_st;
struct evp_cipher_st;
struct fssearchblock;
struct getquota_args;
struct getquota_rslt;
struct ident_command;
struct igmp_grouprec;
struct in6_prefixreq;
struct in6_rrenumreq;
struct ip6_opt_jumbo;
struct ipc_info_name;
union ipp_request_u;
struct kauth_filesec;
struct kern_ctl_info;
struct kqueue_fdinfo;
struct ldap_nameform;
struct ldap_url_desc;
struct lhash_node_st;
struct mach_port_qos;
struct mach_timespec;
struct mb_class_stat;
struct mecab_token_t;
struct mib_interface;
struct mig_subsystem;
struct module_import;
struct nd_opt_rd_hdr;
struct nfs_exphandle;
struct ni_reply_fqdn;
struct nlm4_cancargs;
struct nlm4_lockargs;
struct nlm4_shareres;
struct nlm4_testargs;
struct nlm4_testrply;
struct nlm_shareargs;
struct nlm_sm_status;
struct pcap_etherent;
struct pkcs12_bag_st;
struct policy_limits;
struct ppd_coption_s;
union ppd_cplimit_u;
union ppd_cpvalue_u;
struct ppd_profile_s;
struct proc_fileinfo;
struct proc_taskinfo;
struct pstats__uprof;
struct rpath_command;
struct rpc_createerr;
struct rpc_signature;
struct rpc_subsystem;
struct rslvmulti_req;
struct rstat_timeval;
struct sadb_lifetime;
struct sadb_spirange;
struct sadb_x_policy;
struct sasl_callback;
struct sasl_interact;
struct slapi_condvar;
struct sockaddr_ndrv;
struct socket_fdinfo;
struct sqlite3_mutex;
struct ssl2_state_st;
struct ssl3_state_st;
struct ssl_cipher_st;
struct ssl_method_st;
struct twolevel_hint;
struct unw_context_t;
struct v3_ext_method;
struct variable_list;
struct vm_read_entry;
struct vm_statistics;
struct x509_store_st;
struct x509_trust_st;
struct x86_state_hdr;
struct xp_box_struct;
struct ypbind_setdom;
struct ypresp_master;
struct ASN1_ITEM_st;
struct Block_layout;
struct ECDSA_SIG_st;
struct FndrFileInfo;
struct HFSExtentKey;
struct HFSUniStr255;
struct LDAPDerefRes;
struct LDAPDerefVal;
struct NOTICEREF_st;
struct PBE2PARAM_st;
struct UnsignedWide;
struct X509_info_st;
struct X509_name_st;
struct _acl_flagset;
struct _acl_permset;
struct _cups_file_s;
union _http_addr_u;
struct _krb5_ap_rep;
struct _krb5_ap_req;
struct _krb5_cc_ops;
struct _krb5_ccache;
struct _krb5_prompt;
struct _krb5_ticket;
struct _mime_type_s;
struct _ppd_cache_s;
struct _xmlAutomata;
struct _xmlChLRange;
struct _xmlChSRange;
struct _xmlNotation;
struct _xmlSaveCtxt;
struct asn1_type_st;
struct au_class_ent;
struct au_event_ent;
struct au_tidaddr32;
struct au_tidaddr64;
struct bootp_packet;
struct config_files;
struct cups_image_s;
struct cups_izoom_s;
struct dylib_module;
struct ec_method_st;
struct ecdsa_method;
struct err_state_st;
struct ether_header;
struct except_frame;
struct help_index_s;
struct hm_header_st;
struct icmp6_filter;
struct icmp6_ifstat;
struct icmp6errstat;
struct icmp_ra_addr;
struct if_family_id;
struct if_nameindex;
struct ifma_msghdr2;
struct in6_aliasreq;
struct in_addr_4in6;
struct ip6_moptions;
struct ip6_opt_nsap;
struct ip_timestamp;
struct ipfw_flow_id;
struct kev_in6_data;
struct klm_lockargs;
struct klm_testargs;
struct klm_testrply;
struct load_command;
struct lockd_notify;
struct mecab_node_t;
struct mecab_path_t;
struct nd_opt_rdnss;
struct nfs_diskless;
struct nfs_lock_msg;
struct nfs_specdata;
struct nlm4_testres;
struct nlm_cancargs;
struct nlm_lockargs;
struct nlm_shareres;
struct nlm_testargs;
struct nlm_testrply;
struct otherName_st;
struct pam_response;
struct pem_recip_st;
struct policy_bases;
struct policy_infos;
struct ppd_choice_s;
struct ppd_cparam_s;
struct ppd_option_s;
struct proc_bsdinfo;
struct rand_meth_st;
struct rawarc_order;
struct request_info;
struct rr_pco_match;
struct sadb_address;
struct semid_kernel;
struct shmid_kernel;
struct sioc_vif_req;
struct slapi_filter;
struct slapi_pblock;
struct snmp_session;
struct sockaddr_ctl;
struct sockaddr_gen;
struct sockaddr_in6;
struct sockaddr_sys;
struct sockbuf_info;
struct spraytimeval;
struct sqlite3_blob;
struct sqlite3_file;
struct sqlite3_stmt;
struct sqlite3_vtab;
struct tcp_sockinfo;
struct tcpd_context;
struct ui_method_st;
struct ui_string_st;
struct unw_cursor_t;
struct uuid_command;
struct varbind_list;
struct vnode_fdinfo;
struct whod__whoent;
struct x509_cinf_st;
struct x509_file_st;
struct ypresp_order;
struct ASN1_ADB_st;
struct ASN1_AUX_st;
struct ASN1_TLC_st;
struct BTHeaderRec;
struct Block_byref;
struct FndrDirInfo;
struct MD2state_st;
struct MD4state_st;
struct MD5state_st;
struct MPOOL___hqh;
struct MPOOL___lqh;
struct PBEPARAM_st;
struct SHAstate_st;
struct SXNET_ID_st;
struct X509_crl_st;
struct X509_req_st;
struct X509_sig_st;
struct X509_val_st;
struct _TidyBuffer;
struct _TidyOption;
struct __sigaction;
struct _cups_dir_s;
struct _hist_entry;
struct _krb5_creds;
struct _krb5_error;
struct _stringlist;
struct _xmlCatalog;
struct _xmlElement;
struct _xmlExpCtxt;
struct _xmlExpNode;
struct _xmlNodeSet;
struct _xmlPattern;
struct _xmlRelaxNG;
struct _xsltKeyDef;
struct asn1_ctx_st;
struct au_tid_addr;
struct au_user_ent;
struct audit_fstat;
struct bn_gencb_st;
struct bpf_dltlist;
struct bpf_program;
struct bpf_version;
struct cast_key_st;
struct comp_ctx_st;
struct config_line;
struct credentials;
struct cups_cmyk_s;
struct cups_dest_s;
struct cups_lang_s;
struct dom_binding;
struct dso_meth_st;
struct ec_group_st;
struct ec_point_st;
struct ecdh_method;
struct error_table;
struct evp_pkey_st;
struct extern_file;
struct extern_proc;
struct ffi_closure;
struct fp_data_reg;
struct fsignatures;
struct gz_header_s;
struct help_node_s;
struct help_word_s;
struct hmac_ctx_st;
struct iconv_hooks;
struct if_laddrreq;
struct ifma_msghdr;
struct igmp_report;
struct igmpstat_v3;
struct in4in6_addr;
struct in6_pktinfo;
struct in6_prflags;
struct in_aliasreq;
struct in_sockinfo;
struct inpcbpolicy;
struct ip6_mtuinfo;
struct ip6_pktopts;
union ipp_value_u;
struct kev_in_data;
struct kev_request;
struct kqueue_info;
struct ldap_conncb;
struct ldap_sync_t;
struct ldap_syntax;
struct ldapapiinfo;
struct ldapcontrol;
struct ldapsortkey;
struct ldapvlvinfo;
struct mach_header;
struct mdc2_ctx_st;
struct mib_atEntry;
struct mib_ifEntry;
struct nd_redirect;
struct nfs_dlmount;
struct nfs_stateid;
struct nlm4_holder;
struct nlm4_notify;
struct nlm_testres;
struct obj_name_st;
struct opaque_auth;
struct pam_message;
struct pcap_dumper;
struct pcap_pkthdr;
struct pipe_fdinfo;
struct ppd_const_s;
struct ppd_group_s;
struct proc_fdinfo;
struct psem_fdinfo;
struct pshm_fdinfo;
struct rmtcallargs;
struct rsa_meth_st;
struct rt_addrinfo;
struct rusers_utmp;
struct sadb_sastat;
struct sasl_rand_s;
struct sasl_secret;
struct sched_param;
struct searchstate;
struct seed_key_st;
struct sioc_sg_req;
struct slapi_entry;
struct slapi_mutex;
struct slapi_value;
struct sm_stat_res;
struct sockaddr_dl;
struct sockaddr_in;
struct sockaddr_un;
struct socket_info;
struct sqlite3_vfs;
struct ssl_comp_st;
struct synch_state;
struct tinfo_fkeys;
struct tostruct_64;
struct tsegqe_head;
struct un_sockinfo;
struct utmpidlearr;
struct vfs_context;
struct xdr_discrim;
struct ypbind_resp;
struct ypmap_parms;
struct ypreq_nokey;
struct Connection;
struct DSA_SIG_st;
struct UConverter;
struct __if_clone;
struct __nl_cat_d;
struct _acl_entry;
struct _ipfw_insn;
struct _krb5_cred;
struct _krb5_data;
struct _profile_t;
struct _xmlBuffer;
struct _xmlEntity;
struct _xmlModule;
struct _xmlRMutex;
struct _xmlRegexp;
struct _xmlSchema;
struct aes_key_st;
struct au_session;
struct audit_stat;
struct auditpinfo;
struct berelement;
struct bignum_ctx;
struct bp_address;
struct buf_mem_st;
struct cgi_file_s;
struct cups_job_s;
struct cups_lut_s;
struct cups_rgb_s;
struct curl_forms;
struct curl_khkey;
struct curl_slist;
struct diskextent;
struct dsa_method;
struct ether_addr;
struct exportnode;
struct fat_header;
struct fp_control;
struct gmonhdr_64;
struct histeventW;
struct if_msghdr2;
struct ifa_msghdr;
struct ifaliasreq;
struct ifmediareq;
struct in6_ifstat;
struct in_pktinfo;
struct index_list;
struct ip6_rthdr0;
struct kevent64_s;
struct kinfo_lctx;
struct kinfo_proc;
struct klm_holder;
struct krb5_rc_st;
struct mib_system;
struct mig_symtab;
struct nd_opt_hdr;
struct nd_opt_mtu;
struct nlm4_share;
struct nlm_holder;
struct nlm_notify;
struct pam_handle;
struct pam_module;
struct pem_ctx_st;
struct ppd_attr_s;
struct ppd_emul_s;
struct ppd_file_s;
struct ppd_size_s;
struct range_list;
struct rc2_key_st;
struct rc4_key_st;
struct rc5_key_st;
struct reply_body;
struct rmtcallres;
struct rr_pco_use;
struct rt_metrics;
struct rt_msghdr2;
struct sadb_ident;
struct sadb_x_sa2;
struct sasl_utils;
struct section_64;
struct slapi_attr;
struct slapi_mods;
struct snmp_alarm;
struct sockbuf_io;
struct spraycumul;
struct ssl_ctx_st;
struct st_ERR_FNS;
struct statsswtch;
struct sysORTable;
struct tagSQLGUID;
struct time_value;
struct tokenizerW;
struct v3_ext_ctx;
struct variable13;
struct vinfo_stat;
struct vnode_info;
struct ypresp_all;
struct ypresp_val;
struct ypresp_xfr;
struct ypresponse;
struct z_stream_s;
struct BackendDB;
struct HistEvent;
struct Operation;
struct _TidyAttr;
struct _TidyNode;
struct __rpc_xdr;
struct __rtentry;
struct __siginfo;
struct __sockopt;
struct _ffi_type;
struct _xmlError;
struct _xmlMutex;
struct auditinfo;
struct bf_key_st;
struct bignum_st;
struct call_body;
struct call_gate;
struct clockinfo;
struct code_desc;
struct counter64;
struct data_desc;
union des_block;
struct dh_method;
struct dqfilehdr;
struct ec_key_st;
struct engine_st;
struct enum_list;
struct env_md_st;
struct ether_arp;
struct fieldnode;
struct fp_status;
union gdt_entry;
struct gmon_data;
struct gmonparam;
struct group_req;
struct groupnode;
struct host_info;
struct icmp6_hdr;
struct icmp6stat;
union idt_entry;
struct if_data64;
struct if_msghdr;
struct ifmibdata;
struct in6_ifreq;
struct inpcbinfo;
struct inpcbport;
struct intr_gate;
struct ip6_rthdr;
struct ip_addr_t;
struct ipsecstat;
struct ipv6_mreq;
struct itimerval;
struct kauth_ace;
struct kauth_acl;
struct kmod_info;
union ldt_entry;
struct lineinfow;
struct lockd_ans;
struct mountbody;
struct ndrv_info;
struct nfs_uquad;
struct nfsd_args;
struct nlm4_lock;
struct nlm4_stat;
struct nlm_share;
struct osockaddr;
struct pcap_addr;
struct pcap_stat;
struct pfkeystat;
struct pipe_info;
struct psem_info;
struct pshm_info;
struct radvisory;
struct rawarc_64;
struct res_9_sym;
struct rr_result;
struct rt_msghdr;
struct sadb_comb;
struct sadb_prop;
struct sadb_sens;
struct sasl_conn;
struct sigaction;
struct slapi_mod;
struct slapi_rdn;
struct sm_status;
struct sockproto;
struct stat_chge;
struct statstime;
struct task_gate;
struct timeval32;
struct tokenizer;
struct trap_gate;
struct tseg_qent;
struct txt_db_st;
struct variable1;
struct variable2;
struct variable3;
struct variable4;
struct variable7;
struct variable8;
struct vfsstatfs;
struct xsocket64;
struct xsw_usage;
struct ypmaplist;
struct ypreq_key;
struct ypreq_xfr;
struct yprequest;
struct zone_info;
struct zone_name;
union BTreeKey;
struct OSObject;
struct SXNET_st;
struct _TidyDoc;
struct __ifaddr;
struct __ns_msg;
struct __pkthdr;
struct __sFILEX;
struct __socket;
struct _filesec;
struct _krb5_kt;
struct _telldir;
struct _xlocale;
struct _xmlAttr;
struct _xmlDict;
struct _xmlLink;
struct _xmlList;
struct _xmlNode;
struct addrinfo;
struct attrlist;
struct au_qctrl;
struct au_tid32;
struct au_tid64;
struct au_token;
struct bpf_insn;
struct bpf_stat;
struct ctl_info;
union dt_entry;
struct editline;
union err_code;
struct eventreq;
struct fat_arch;
struct fhstatus;
struct fileglob;
struct formnode;
struct fp_stack;
struct fp_state;
struct frmrinfo;
struct fsobj_id;
union gen_addr;
struct historyW;
struct icmpstat;
struct ifdevmtu;
struct ifmaddrs;
struct igmpstat;
struct in6_addr;
struct ip6_dest;
struct ip6_frag;
struct ip_mreqn;
struct ipc_perm;
struct klm_lock;
struct klm_stat;
struct lastlogx;
struct ldap_ava;
struct ldt_desc;
struct lhash_st;
struct lineinfo;
struct locklist;
struct log2phys;
struct mib_icmp;
struct nextvend;
struct nfs_args;
struct nfs_fsid;
struct nfsstats;
struct nlist_64;
struct nlm4_res;
struct nlm_lock;
struct nlm_stat;
struct nt_sid_t;
struct pam_conv;
struct pkcs7_st;
struct pmaplist;
struct protoent;
struct pseminfo;
struct pshminfo;
struct route_cb;
struct sadb_alg;
struct sadb_ext;
struct sadb_key;
struct sadb_msg;
struct sigevent;
struct sigstack;
struct slapi_dn;
struct snmp_pdu;
struct sockaddr;
struct sockutil;
struct speedtab;
struct stack_st;
struct statfs64;
struct store_st;
struct tcpiphdr;
struct termtype;
struct timespec;
struct timezone;
struct tokenstr;
struct tostruct;
struct tss_desc;
struct ttychars;
struct typenode;
struct udpiphdr;
struct utmpidle;
struct variable;
struct vfsidctl;
struct vfsquery;
struct vfstable;
struct vn_ioctl;
struct x_passwd;
struct xinpcb64;
struct xsockbuf;
struct xtcpcb64;
struct yppasswd;
struct CURLMsg;
struct __ifnet;
struct __ns_rr;
struct __sFILE;
struct _ftsent;
struct _http_s;
struct _mime_s;
struct _win_st;
struct _xmlDoc;
struct _xmlDtd;
struct _xmlRef;
struct _xmlURI;
struct au_mask;
struct bpf_hdr;
struct cache_s;
struct cmsghdr;
struct conf_st;
struct ctlname;
struct devnode;
struct disktab;
struct dl_info;
struct esptail;
struct ffi_cif;
struct fhandle;
struct gmonhdr;
struct history;
struct hostent;
struct if_data;
struct ifaddrs;
struct ifqueue;
struct igmpmsg;
struct in_addr;
struct ip6_ext;
struct ip6_hbh;
struct ip6_hdr;
struct ip6_opt;
struct ip_mreq;
struct ip_opts;
struct lastlog;
struct ldapmod;
struct ldapmsg;
struct loadavg;
struct ltchars;
struct mb_stat;
struct mecab_t;
struct mib_egp;
struct mib_tcp;
struct mib_udp;
struct mld_hdr;
struct mrtstat;
struct msginfo;
struct netinfo;
struct nfs_sec;
struct nlm_res;
struct ombstat;
struct pcap_if;
struct pipebuf;
struct propctx;
struct propval;
struct protosw;
struct rpc_err;
struct rpc_msg;
struct ru_utmp;
struct sadb_sa;
struct section;
struct servent;
struct session;
struct sf_hdtr;
struct sm_name;
struct sm_stat;
struct sockbuf;
struct sqlite3;
struct statvfs;
struct svc_req;
struct tagITEM;
struct tagMENU;
struct tcpstat;
struct termios;
struct tftphdr;
struct timeval;
struct ttysize;
struct udpstat;
struct usmUser;
struct utimbuf;
struct utmparr;
struct utsname;
struct vfsconf;
struct vmmeter;
struct vmspace;
struct vmtotal;
struct winsize;
struct x509_st;
struct xinpgen;
struct xsocket;
struct xunpgen;
struct CLIENT;
struct DES_ks;
struct __mbuf;
struct __sbuf;
struct _pcred;
struct _pitem;
struct _ucred;
struct _xmlID;
struct _xmlNs;
struct ar_hdr;
struct arphdr;
struct arpreq;
struct au_tid;
struct berval;
struct bio_st;
struct dirent;
struct dsa_st;
struct dso_st;
struct fd_set;
struct fp_env;
struct fp_tag;
struct fstore;
struct fvmlib;
struct ifconf;
struct ifstat;
struct igmpv3;
struct ipovly;
struct ipstat;
struct kevent;
union lc_str;
struct linger;
struct mbstat;
struct mfcctl;
struct mib_ip;
struct module;
struct mon_id;
struct msgbuf;
struct msghdr;
struct mstats;
struct netent;
struct netobj;
struct newesp;
struct option;
struct passwd;
struct plimit;
struct pollfd;
struct pstats;
struct ranlib;
struct rawarc;
struct rlimit;
struct rpcent;
struct rquota;
struct rsa_st;
struct rtstat;
struct rusage;
struct sastat;
struct screen;
struct sembuf;
struct sgttyb;
union sigval;
struct sigvec;
struct so_nke;
struct sockif;
struct ssl_st;
struct stat64;
struct statfs;
struct tchars;
struct tcphdr;
struct thread;
struct ttyent;
struct tzhead;
struct udphdr;
struct vifctl;
struct xdrbuf;
struct xinpcb;
struct xtcpcb;
struct xucred;
struct ENTRY;
struct MPOOL;
struct _node;
struct aiocb;
struct alias;
struct bootp;
struct bpf_d;
struct clist;
struct dh_st;
struct dqblk;
struct dylib;
struct entry;
struct flock;
struct fstab;
struct group;
struct ifdrv;
struct ifkpi;
struct ifnet;
struct ifreq;
struct inpcb;
struct iovec;
struct ip_fw;
struct ipp_s;
struct klist;
struct knote;
struct label;
struct lconv;
struct lockf;
struct mount;
struct ms_tm;
struct mutex;
struct my_id;
struct mymsg;
struct newah;
struct nlist;
struct ostat;
struct outmp;
struct panel;
struct qelem;
struct route;
union semun;
struct stats;
struct tcpcb;
struct timeb;
struct token;
struct ucred;
struct ui_st;
struct utmpx;
struct vnode;
struct __db;
struct _acl;
struct _bkt;
struct _cr0;
struct _dr6;
struct acct;
struct file;
struct fsid;
struct icmp;
struct igmp;
struct lctx;
struct ldap;
struct mbuf;
struct pcap;
struct pgrp;
struct pipe;
struct pmap;
struct proc;
struct sbuf;
struct stat;
struct task;
struct term;
struct tree;
struct user;
struct utmp;
struct vend;
union wait;
struct whod;
struct wide;
struct FTW;
struct Mem;
struct buf;
struct esp;
struct ipq;
struct llc;
struct mac;
struct mfc;
struct mon;
struct msg;
struct rip;
struct sel;
struct sem;
struct tms;
struct tsp;
struct tss;
struct tty;
struct uio;
struct ah;
struct ip;
struct tm;

struct accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44___AC186CABF9007C2DA87CD3BECABD7D45 {unsigned int low;unsigned int high;};
struct rejected_reply___C3827AB85A505492A4D27FEA56330B1C___AC186CABF9007C2DA87CD3BECABD7D45 {unsigned int low;unsigned int high;};
struct extern_proc___27B38CA2FABD237895D38B0302C8FC9B___A845D8EFA010EC0E04B626533D96DFA0 {struct proc *__p_forw;struct proc *__p_back;};
struct rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1___AC186CABF9007C2DA87CD3BECABD7D45 {unsigned int low;unsigned int high;};
struct rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1___BF7AC7AAFAE2A9D4F26CD1E6B816F6B2 {int s1;int s2;};
union _2852C95088D0304BB11C1621105E366D___EBEEFF9F825AD5996D1BE6C50F3E6AFA {int (*gl_errfunc)( char *, int);void *gl_errblk;};
struct _4932DC24BA09BB104202CABB17FCEE34___557C3AE17C0268223A4DBA0527C77C11 {unsigned char ia_net_owner;unsigned char ia_net_node_type;unsigned char ia_host_high;unsigned char ia_host_low;};
union _BF6258091C70028000D911F61A5FB5AF___9EC190D15BEE7EEEBABA7EFAD959CEE4 {int (*fts_compar)();void *fts_compar_b;};
union netsnmp_column_info_t___41E30212381E22E50C344E87F6BAC4A2 {unsigned int range[2];unsigned int *list;};
struct nfs_lock_msg_request___5813B4C1F7982A33B431354D3E39333E {struct nfs_lock_msg_request *tqe_next;struct nfs_lock_msg_request **tqe_prev;};
union _xsltRuntimeExtra___2329BC7224F5366634B0083FE3D0502D {void *ptr;int ival;};
struct sqlite3_index_info__sqlite3_index_constraint_usage {int argvIndex;unsigned char omit;};
union SHA512state_st___61765161EF95A25BF6D9F15268D2C4E6 {unsigned long long d[16];unsigned char p[128];};
union _mime_magic_s___44C44110DFFEF8B71A54B915355ECCBB {char matchv[64];char localev[64];char stringv[64];unsigned char charv;unsigned short shortv;unsigned int intv;};
struct curl_fileinfo___077514F63D1BEBBC677B95BCFA7479A7 {char *time;char *perm;char *user;char *group;char *target;};
struct ssl2_state_st___84C368C7769861FE002B58071E3F7188 {unsigned int conn_id_length;unsigned int cert_type;unsigned int cert_length;unsigned int csl;unsigned int clear;unsigned int enc;unsigned char ccl[32];unsigned int cipher_spec_length;unsigned int session_id_length;unsigned int clen;unsigned int rlen;};
typedef struct _8A833B3771E877D0F99F9E4D0939E663 __Request__mach_memory_object_memory_entry_64_t;
union evp_pkey_st___0C617F08CD1CBFCEA8637CF9C21CDE81 {char *ptr;struct rsa_st *rsa;struct dsa_st *dsa;struct dh_st *dh;struct ec_key_st *ec;};
struct extern_file___94A32CBB0D158E1A8624A2DC03EBA897 {struct extern_file *le_next;struct extern_file **le_prev;};
struct ipp_value_u___2EAE0BB3D4A3175EA6C32A3B77B08580 {char *charset;char *text;};
struct ipp_value_u___55ACB418F06CBD9C81C19431B78B54E0 {int length;void *data;};
struct ipp_value_u___962D1BBE228906325E858AE60F230356 {int lower;int upper;};
typedef struct _92C88324278AB154CB324C17F95F0A4E __Reply__mach_memory_object_memory_entry_64_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_virtual_physical_table_info_t;
struct pem_ctx_st___1125AD01A545DD25B2B33B94AE02ED75 {int cipher;};
struct pem_ctx_st___4E7FB566ECC299FB951FDCE71730D3D0 {int version;int mode;};
struct ssl_ctx_st___1FDE854BB3A5E25B344A4239746AC17B {int sess_connect;int sess_connect_renegotiate;int sess_connect_good;int sess_accept;int sess_accept_renegotiate;int sess_accept_good;int sess_miss;int sess_timeout;int sess_cache_full;int sess_hit;int sess_cb_hit;};
typedef struct _0EEAE85943931F432FD264390744A4E7 __Request__host_security_create_task_token_t;
typedef struct _3D758159ED3B747496F87C93B1DFC5C3 __Request__mach_memory_object_memory_entry_t;
struct sqlite3_index_info__sqlite3_index_constraint {int iColumn;unsigned char op;unsigned char usable;int iTermOffset;};
struct _05EECDE53F008AE0E4F8A84193F3FFF1__auth_ops {void (*ah_nextverf)();int (*ah_marshal)();int (*ah_validate)();int (*ah_refresh)();void (*ah_destroy)();};
typedef struct _14FA42BC96FAE132F19280844CA95DD9 __Reply__host_virtual_physical_table_info_t;
typedef struct _833420E8F4A758B58AE84F5888D3A29B __Request__exception_raise_state_identity_t;
typedef struct _89FB7E727BDCF83A4F62DE682B7A306A __Request__mach_port_request_notification_t;
typedef struct _DA3EF9D89B837FDE93915298E895B43B __Reply__host_security_create_task_token_t;
typedef struct _92C88324278AB154CB324C17F95F0A4E __Reply__mach_memory_object_memory_entry_t;
typedef void mpo_mbuf_label_associate_multicast_encap_t(struct mbuf *oldmbuf, struct label *oldmbuflabel, struct ifnet *ifp, struct label *ifplabel, struct mbuf *newmbuf, struct label *newmbuflabel);
union tftphdr___AC1EF054FE947B275A5712C606118B7A {unsigned short tu_block;short tu_code;char tu_stuff[1];};
typedef struct _F1BB640A69E4C9C26809E32C99FD444E __Reply__exception_raise_state_identity_t;
typedef struct _0046B6E3F76960040C1982B0037A2659 __Reply__mach_port_request_notification_t;
typedef struct _A737AF5627966EA5E9B02401BF60C18A __Request__host_security_set_task_token_t;
typedef struct _D9B0ADBD00F5F5522FB9AC300CCD391E __Request__processor_set_policy_control_t;
typedef struct _B6133C04D7E68696884D0F2477EC89D3 __Request__processor_set_policy_disable_t;
struct sqlite3_index_info__sqlite3_index_orderby {int iColumn;unsigned char desc;};
typedef struct _C2CBDBAA53DBE4CD2BF833027FA299D5 __Request__host_default_memory_manager_t;
typedef struct _D81AFE54BC1383739B7B7705B8C42C3D __Request__processor_set_policy_enable_t;
typedef struct _71B18ED6CCE7F8693D0AE793EAB8102E __Request__thread_swap_exception_ports_t;
struct entry___2AA5CCCB9D787A2137C075D7F71DDB10 {char *name;struct entry *link;long long line;};
union ifkpi___9B10D65E4AB145405EA162F315DE5FAB {void *ifk_ptr;int ifk_value;};
struct lockf___8E53988229C36DA83A3F462691E29587 {struct lockf *tqe_next;struct lockf **tqe_prev;};
struct ucred___FA68314EC5A1B61A7AF0AAA32900A7CA {struct ucred *tqe_next;struct ucred **tqe_prev;};
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__host_security_set_task_token_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_set_policy_control_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_set_policy_disable_t;
typedef struct _47B1E0FCCF87277E593C854FB80D0521 __Request__processor_set_max_priority_t;
typedef struct _AFE166C1B1045E0C8B7F866BEC963EDA __Request__thread_get_exception_ports_t;
typedef struct _71B18ED6CCE7F8693D0AE793EAB8102E __Request__thread_set_exception_ports_t;
struct _bkt___335ECEA3C7A0F876D51082F14580D87B {struct _bkt *tqe_next;struct _bkt **tqe_prev;};
typedef void mpo_vnode_label_associate_singlelabel_t(struct mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel);
struct wait___7577FAE843D32618A04985FDB883FD87 {unsigned int w_Termsig : 7;unsigned int w_Coredump : 1;unsigned int w_Retcode : 8;unsigned int w_Filler : 16;};
struct wait___D2BE3D1E9784782BB73F97C8AEDA900E {unsigned int w_Stopval : 8;unsigned int w_Stopsig : 8;unsigned int w_Filler : 16;};
enum MACRO_kDNSServiceInterfaceIndexUnicast {kDNSServiceInterfaceIndexUnicast = 4294967294,};
typedef struct _B9D89F8ED69AD657CF8CCF6FD4EA24D0 __Reply__host_default_memory_manager_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_set_policy_enable_t;
typedef struct _73352B6DCC801F1A038056696B3E491C __Reply__thread_swap_exception_ports_t;
typedef struct _D6880A8626DE4DB5DA08690FFF5A7EE0 __Request__host_request_notification_t;
typedef struct _71B18ED6CCE7F8693D0AE793EAB8102E __Request__host_swap_exception_ports_t;
typedef struct _B8642CD798FE16F406A454FEEE53FFC8 __Request__mach_make_memory_entry_64_t;
typedef struct _74E88319F6971EE204DBFD9B57B269F8 __Request__mach_vm_machine_attribute_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_set_stack_usage_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__task_get_emulation_vector_t;
typedef struct _FB4BFEF078574026C3C8614BADD24D68 __Request__task_set_emulation_vector_t;
typedef struct _71B18ED6CCE7F8693D0AE793EAB8102E __Request__task_swap_exception_ports_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_set_max_priority_t;
typedef struct _73352B6DCC801F1A038056696B3E491C __Reply__thread_get_exception_ports_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_set_exception_ports_t;
typedef struct _AFE166C1B1045E0C8B7F866BEC963EDA __Request__host_get_exception_ports_t;
typedef struct _71B18ED6CCE7F8693D0AE793EAB8102E __Request__host_set_exception_ports_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_dnrequest_info_t;
typedef struct _3199818696990377AE21FB32F85B31D8 __Request__mach_port_extract_member_t;
typedef struct _87460818A9C42CAAD7BB4BC88EB3F9D9 __Request__mach_port_get_attributes_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_get_set_status_t;
typedef struct _D09842556D06A2DF198ED28371C9FC24 __Request__mach_port_set_attributes_t;
typedef struct _CC76991D9F83D1A958E6E229A0D1EA8D __Request__mach_vm_purgable_control_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_get_assignment_t;
typedef struct _7E69CF2F21F2DE86821941D7ACE3ABBA __Request__processor_set_statistics_t;
typedef struct _AFE166C1B1045E0C8B7F866BEC963EDA __Request__task_get_exception_ports_t;
typedef struct _71B18ED6CCE7F8693D0AE793EAB8102E __Request__task_set_exception_ports_t;
typedef void mpo_devfs_label_associate_directory_t( char *dirname, int dirnamelen, struct devnode *de, struct label *label,  char *fullpath);
typedef struct vm_region_submap_short_info_64 vm_region_submap_short_info_data_64_t;
enum MACRO_STAT_SNMPUNKNOWNSECURITYMODELS {STAT_SNMPUNKNOWNSECURITYMODELS = 0,STAT_SNMPINVALIDMSGS = 1,STAT_SNMPUNKNOWNPDUHANDLERS = 2,STAT_MPD_STATS_START = 0,STAT_MPD_STATS_END = 2,STAT_USMSTATSUNSUPPORTEDSECLEVELS = 3,STAT_USMSTATSNOTINTIMEWINDOWS = 4,STAT_USMSTATSUNKNOWNUSERNAMES = 5,STAT_USMSTATSUNKNOWNENGINEIDS = 6,STAT_USMSTATSWRONGDIGESTS = 7,STAT_USMSTATSDECRYPTIONERRORS = 8,STAT_USM_STATS_START = 3,STAT_USM_STATS_END = 8,STAT_SNMPINPKTS = 9,STAT_SNMPOUTPKTS = 10,STAT_SNMPINBADVERSIONS = 11,STAT_SNMPINBADCOMMUNITYNAMES = 12,STAT_SNMPINBADCOMMUNITYUSES = 13,STAT_SNMPINASNPARSEERRS = 14,STAT_SNMPINTOOBIGS = 16,STAT_SNMPINNOSUCHNAMES = 17,STAT_SNMPINBADVALUES = 18,STAT_SNMPINREADONLYS = 19,STAT_SNMPINGENERRS = 20,STAT_SNMPINTOTALREQVARS = 21,STAT_SNMPINTOTALSETVARS = 22,STAT_SNMPINGETREQUESTS = 23,STAT_SNMPINGETNEXTS = 24,STAT_SNMPINSETREQUESTS = 25,STAT_SNMPINGETRESPONSES = 26,STAT_SNMPINTRAPS = 27,STAT_SNMPOUTTOOBIGS = 28,STAT_SNMPOUTNOSUCHNAMES = 29,STAT_SNMPOUTBADVALUES = 30,STAT_SNMPOUTGENERRS = 32,STAT_SNMPOUTGETREQUESTS = 33,STAT_SNMPOUTGETNEXTS = 34,STAT_SNMPOUTSETREQUESTS = 35,STAT_SNMPOUTGETRESPONSES = 36,STAT_SNMPOUTTRAPS = 37,STAT_SNMPSILENTDROPS = 39,STAT_SNMPPROXYDROPS = 40,STAT_SNMP_STATS_START = 9,STAT_SNMP_STATS_END = 40,STAT_SNMPUNAVAILABLECONTEXTS = 41,STAT_SNMPUNKNOWNCONTEXTS = 42,STAT_TARGET_STATS_START = 41,STAT_TARGET_STATS_END = 42,STAT_TSM_SNMPTSMINVALIDCACHES = 43,STAT_TSM_SNMPTSMINADEQUATESECURITYLEVELS = 44,STAT_TSM_SNMPTSMUNKNOWNPREFIXES = 45,STAT_TSM_SNMPTSMINVALIDPREFIXES = 46,STAT_TSM_STATS_START = 43,STAT_TSM_STATS_END = 46,STAT_TLSTM_SNMPTLSTMSESSIONOPENS = 47,STAT_TLSTM_SNMPTLSTMSESSIONCLIENTCLOSES = 48,STAT_TLSTM_SNMPTLSTMSESSIONOPENERRORS = 49,STAT_TLSTM_SNMPTLSTMSESSIONACCEPTS = 50,STAT_TLSTM_SNMPTLSTMSESSIONSERVERCLOSES = 51,STAT_TLSTM_SNMPTLSTMSESSIONNOSESSIONS = 52,STAT_TLSTM_SNMPTLSTMSESSIONINVALIDCLIENTCERTIFICATES = 53,STAT_TLSTM_SNMPTLSTMSESSIONUNKNOWNSERVERCERTIFICATE = 54,STAT_TLSTM_SNMPTLSTMSESSIONINVALIDSERVERCERTIFICATES = 55,STAT_TLSTM_SNMPTLSTMSESSIONINVALIDCACHES = 56,STAT_TLSTM_STATS_START = 47,STAT_TLSTM_STATS_END = 56,};
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__host_request_notification_t;
typedef struct _FFDCF6D4903B3C43BBF48445F1564ABC __Reply__host_swap_exception_ports_t;
typedef struct _EE99DDBDD6523B38A4B5202F2305E34F __Reply__mach_make_memory_entry_64_t;
typedef struct _B74BBF4C1467FECDB27E8CB1AA37D794 __Reply__mach_vm_machine_attribute_t;
typedef struct _40D648FC67D542FF76846B4380CDA5C4 __Reply__processor_set_stack_usage_t;
typedef struct _FB4BFEF078574026C3C8614BADD24D68 __Reply__task_get_emulation_vector_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_emulation_vector_t;
typedef struct _FFDCF6D4903B3C43BBF48445F1564ABC __Reply__task_swap_exception_ports_t;
typedef struct _3E9B5AD32E2A117D2E91D7B75FF67A5D __Request___mach_make_memory_entry_t;
typedef struct _4D17AC1D92846D89C56307C20B09863A __Request__host_processor_set_priv_t;
typedef struct _531BFEDFFBC90F9591113261F4F98EF9 __Request__mach_port_allocate_full_t;
typedef struct _F49B3D681D6431C8260F2C014755700B __Request__mach_port_allocate_name_t;
typedef struct _4203C03DDEA75B12CEED795269F3A503 __Request__mach_port_extract_right_t;
typedef struct _3199818696990377AE21FB32F85B31D8 __Request__mach_port_insert_member_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_kernel_object_t;
typedef struct _59F23475065BD2E9F3FA293A04BFFD37 __Request__thread_get_special_port_t;
typedef struct _D5C5C0A4FB77109A22B40E51950751DD __Request__thread_set_special_port_t;
typedef void mpo_mbuf_label_associate_linklayer_t(struct ifnet *ifp, struct label *i_label, struct mbuf *m, struct label *m_label);
typedef void mpo_vnode_label_associate_posixsem_t(struct ucred *cred, struct pseminfo *psem, struct label *psemlabel, struct vnode *vp, struct label *vlabel);
typedef void mpo_vnode_label_associate_posixshm_t(struct ucred *cred, struct pshminfo *pshm, struct label *pshmlabel, struct vnode *vp, struct label *vlabel);
typedef struct thread_time_constraint_policy thread_time_constraint_policy_data_t;
typedef struct _73352B6DCC801F1A038056696B3E491C __Reply__host_get_exception_ports_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__host_set_exception_ports_t;
typedef struct _B58E161BB725F9F52DF6F7C15EFA30EA __Reply__mach_port_dnrequest_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_extract_member_t;
typedef struct _46F98A3CF815908FB81E03FBB188BF3A __Reply__mach_port_get_attributes_t;
typedef struct _54BD5584F5ADC0EEBB5CC3B97CC9ABCA __Reply__mach_port_get_set_status_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_set_attributes_t;
typedef struct _2267E9288D5132BEF4B5A8B0E8AC33A6 __Reply__mach_vm_purgable_control_t;
typedef struct _488333C1932ECE7496D2930CA2056B6D __Reply__processor_get_assignment_t;
typedef struct _0E98A572E6852A6395110737D2ACDD5A __Reply__processor_set_statistics_t;
typedef struct _73352B6DCC801F1A038056696B3E491C __Reply__task_get_exception_ports_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_exception_ports_t;
typedef struct _587EA17CD82C334AC5A48AFEDB918C96 __Request__host_get_clock_control_t;
typedef struct _587EA17CD82C334AC5A48AFEDB918C96 __Request__host_get_clock_service_t;
typedef struct _8109324A5E6FC6C8E3497EBF9ED344C0 __Request__host_load_symbol_table_t;
typedef struct _FE3C27134D9979D1E07496C70FEB2BBD __Request__mach_make_memory_entry_t;
typedef struct _5243BF46A737224FC5E0495E8389B9A4 __Request__mach_port_allocate_qos_t;
typedef struct _E3188AF9666AE21995C94F310B376FC6 __Request__mach_port_insert_right_t;
typedef struct _6FAFB5BC2FBC216C364C3DE816E26A29 __Request__mach_vm_read_overwrite_t;
typedef struct _23464681D0D095F096FB79A1E66062AF __Request__mach_vm_region_info_64_t;
typedef struct _F38A67955B73283DD9B66EE2B15E7106 __Request__mach_vm_region_recurse_t;
typedef struct apple_gss_krb5_authdata_if_relevant_key apple_gss_krb5_authdata_if_relevant;
typedef void mpo_mbuf_label_associate_netlayer_t(struct mbuf *oldmbuf, struct label *oldmbuflabel, struct mbuf *newmbuf, struct label *newmbuflabel);
typedef int mpo_vnode_label_associate_extattr_t(struct mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel);
typedef int mpo_vnode_label_externalize_audit_t(struct label *label, char *element_name, struct sbuf *sb);
enum MACRO_kDNSServiceInterfaceIndexAny {kDNSServiceInterfaceIndexAny = 0,kDNSServiceInterfaceIndexLocalOnly = 4294967295,};
enum MACRO_kDNSServiceInterfaceIndexP2P {kDNSServiceInterfaceIndexP2P = 4294967293,};
typedef struct _EE99DDBDD6523B38A4B5202F2305E34F __Reply___mach_make_memory_entry_t;
typedef struct _49303478B7A3DE4A3AC5102047AEEEA3 __Reply__host_processor_set_priv_t;
typedef struct _1783B4855960E25D5065E02F55E2E263 __Reply__mach_port_allocate_full_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_allocate_name_t;
typedef struct _EA7534D780195B9F22D1174E6CA3EFC2 __Reply__mach_port_extract_right_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_insert_member_t;
typedef struct _CEE03D2EA6896FBF3749E2AC26AFF34E __Reply__mach_port_kernel_object_t;
typedef struct _E65ABC06A11602FED23D2457B8AEAC9D __Reply__thread_get_special_port_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_set_special_port_t;
typedef struct _048C5B8CD9C97BF8D36FBC1C859B011A __Request__exception_raise_state_t;
typedef struct _DBA30DED97FFFF6D93797DB9E5CF4F43 __Request__host_get_special_port_t;
typedef struct _F1A44C946A11C4E88A7FB24B2ED8014B __Request__host_set_special_port_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_get_context_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_get_srights_t;
typedef struct _2A4BA455395BF41F2F254FCA2AA74280 __Request__mach_port_move_member_t;
typedef struct _892873E46F8F240B706CD4D8B4C0EE69 __Request__mach_port_set_context_t;
typedef struct _B84095E180EBE617859A8545EC2805FC __Request__mach_port_set_mscount_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_set_default_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_set_destroy_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_set_threads_t;
typedef struct _59F23475065BD2E9F3FA293A04BFFD37 __Request__task_get_special_port_t;
typedef struct _D5C5C0A4FB77109A22B40E51950751DD __Request__task_set_special_port_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_assign_default_t;
typedef struct _D01A4AC644F6B88C742A307AE9CB3F5A __Request__thread_create_running_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_get_assignment_t;
typedef char (*cache_value_make_nonpurgeable_cb_t)(void *value, void *user_data);
typedef struct _2204D4BF90F99AB14C1563C90305E530 mach_port_destroyed_notification_t;
typedef int mpo_cred_label_externalize_audit_t(struct label *label, char *element_name, struct sbuf *sb);
typedef void mpo_mbuf_label_associate_bpfdesc_t(struct bpf_d *bpf_d, struct label *b_label, struct mbuf *m, struct label *m_label);
typedef int mpo_socketpeer_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
enum _003F63A829E52477BDB4080710A1139D {preorder = 0x0,postorder = 0x1,endorder = 0x2,leaf = 0x3,};
enum _01E72305AF8283EAA993BE6EE5BCD1F9 {NSApplicationDirectory = 0x1,NSDemoApplicationDirectory = 0x2,NSDeveloperApplicationDirectory = 0x3,NSAdminApplicationDirectory = 0x4,NSLibraryDirectory = 0x5,NSDeveloperDirectory = 0x6,NSUserDirectory = 0x7,NSDocumentationDirectory = 0x8,NSDocumentDirectory = 0x9,NSCoreServiceDirectory = 0xA,NSAutosavedInformationDirectory = 0xB,NSDesktopDirectory = 0xC,NSCachesDirectory = 0xD,NSApplicationSupportDirectory = 0xE,NSDownloadsDirectory = 0xF,NSInputMethodsDirectory = 0x10,NSMoviesDirectory = 0x11,NSMusicDirectory = 0x12,NSPicturesDirectory = 0x13,NSPrinterDescriptionDirectory = 0x14,NSSharedPublicDirectory = 0x15,NSPreferencePanesDirectory = 0x16,NSAllApplicationsDirectory = 0x64,NSAllLibrariesDirectory = 0x65,};
enum _031587082C14B3DB98E124F1346E686B {CURLE_OK = 0x0,CURLE_UNSUPPORTED_PROTOCOL = 0x1,CURLE_FAILED_INIT = 0x2,CURLE_URL_MALFORMAT = 0x3,CURLE_OBSOLETE4 = 0x4,CURLE_COULDNT_RESOLVE_PROXY = 0x5,CURLE_COULDNT_RESOLVE_HOST = 0x6,CURLE_COULDNT_CONNECT = 0x7,CURLE_FTP_WEIRD_SERVER_REPLY = 0x8,CURLE_REMOTE_ACCESS_DENIED = 0x9,CURLE_OBSOLETE10 = 0xA,CURLE_FTP_WEIRD_PASS_REPLY = 0xB,CURLE_OBSOLETE12 = 0xC,CURLE_FTP_WEIRD_PASV_REPLY = 0xD,CURLE_FTP_WEIRD_227_FORMAT = 0xE,CURLE_FTP_CANT_GET_HOST = 0xF,CURLE_OBSOLETE16 = 0x10,CURLE_FTP_COULDNT_SET_TYPE = 0x11,CURLE_PARTIAL_FILE = 0x12,CURLE_FTP_COULDNT_RETR_FILE = 0x13,CURLE_OBSOLETE20 = 0x14,CURLE_QUOTE_ERROR = 0x15,CURLE_HTTP_RETURNED_ERROR = 0x16,CURLE_WRITE_ERROR = 0x17,CURLE_OBSOLETE24 = 0x18,CURLE_UPLOAD_FAILED = 0x19,CURLE_READ_ERROR = 0x1A,CURLE_OUT_OF_MEMORY = 0x1B,CURLE_OPERATION_TIMEDOUT = 0x1C,CURLE_OBSOLETE29 = 0x1D,CURLE_FTP_PORT_FAILED = 0x1E,CURLE_FTP_COULDNT_USE_REST = 0x1F,CURLE_OBSOLETE32 = 0x20,CURLE_RANGE_ERROR = 0x21,CURLE_HTTP_POST_ERROR = 0x22,CURLE_SSL_CONNECT_ERROR = 0x23,CURLE_BAD_DOWNLOAD_RESUME = 0x24,CURLE_FILE_COULDNT_READ_FILE = 0x25,CURLE_LDAP_CANNOT_BIND = 0x26,CURLE_LDAP_SEARCH_FAILED = 0x27,CURLE_OBSOLETE40 = 0x28,CURLE_FUNCTION_NOT_FOUND = 0x29,CURLE_ABORTED_BY_CALLBACK = 0x2A,CURLE_BAD_FUNCTION_ARGUMENT = 0x2B,CURLE_OBSOLETE44 = 0x2C,CURLE_INTERFACE_FAILED = 0x2D,CURLE_OBSOLETE46 = 0x2E,CURLE_TOO_MANY_REDIRECTS = 0x2F,CURLE_UNKNOWN_TELNET_OPTION = 0x30,CURLE_TELNET_OPTION_SYNTAX = 0x31,CURLE_OBSOLETE50 = 0x32,CURLE_PEER_FAILED_VERIFICATION = 0x33,CURLE_GOT_NOTHING = 0x34,CURLE_SSL_ENGINE_NOTFOUND = 0x35,CURLE_SSL_ENGINE_SETFAILED = 0x36,CURLE_SEND_ERROR = 0x37,CURLE_RECV_ERROR = 0x38,CURLE_OBSOLETE57 = 0x39,CURLE_SSL_CERTPROBLEM = 0x3A,CURLE_SSL_CIPHER = 0x3B,CURLE_SSL_CACERT = 0x3C,CURLE_BAD_CONTENT_ENCODING = 0x3D,CURLE_LDAP_INVALID_URL = 0x3E,CURLE_FILESIZE_EXCEEDED = 0x3F,CURLE_USE_SSL_FAILED = 0x40,CURLE_SEND_FAIL_REWIND = 0x41,CURLE_SSL_ENGINE_INITFAILED = 0x42,CURLE_LOGIN_DENIED = 0x43,CURLE_TFTP_NOTFOUND = 0x44,CURLE_TFTP_PERM = 0x45,CURLE_REMOTE_DISK_FULL = 0x46,CURLE_TFTP_ILLEGAL = 0x47,CURLE_TFTP_UNKNOWNID = 0x48,CURLE_REMOTE_FILE_EXISTS = 0x49,CURLE_TFTP_NOSUCHUSER = 0x4A,CURLE_CONV_FAILED = 0x4B,CURLE_CONV_REQD = 0x4C,CURLE_SSL_CACERT_BADFILE = 0x4D,CURLE_REMOTE_FILE_NOT_FOUND = 0x4E,CURLE_SSH = 0x4F,CURLE_SSL_SHUTDOWN_FAILED = 0x50,CURLE_AGAIN = 0x51,CURLE_SSL_CRL_BADFILE = 0x52,CURLE_SSL_ISSUER_ERROR = 0x53,CURLE_FTP_PRET_FAILED = 0x54,CURLE_RTSP_CSEQ_ERROR = 0x55,CURLE_RTSP_SESSION_ERROR = 0x56,CURLE_FTP_BAD_FILE_LIST = 0x57,CURLE_CHUNK_FAILED = 0x58,CURL_LAST = 0x59,};
enum _04A110E55D5920A84871EBC8F69BB0C6 {KRB5_C_RANDSOURCE_OLDAPI = 0x0,KRB5_C_RANDSOURCE_OSRAND = 0x1,KRB5_C_RANDSOURCE_TRUSTEDPARTY = 0x2,KRB5_C_RANDSOURCE_TIMING = 0x3,KRB5_C_RANDSOURCE_EXTERNAL_PROTOCOL = 0x4,KRB5_C_RANDSOURCE_MAX = 0x5,};
struct _05C6DC85C1F1DBCA1F6881BCC9CC439D {char path[128];};
enum _05FFD975A3AE67166A60CC6030479BAB {UNW_REG_IP = 0xFFFFFFFF,UNW_REG_SP = 0xFFFFFFFE,};
enum _0783B1A147A2695A75D59C8C4539C7EA {LAUNCH_DATA_DICTIONARY = 0x1,LAUNCH_DATA_ARRAY = 0x2,LAUNCH_DATA_FD = 0x3,LAUNCH_DATA_INTEGER = 0x4,LAUNCH_DATA_REAL = 0x5,LAUNCH_DATA_BOOL = 0x6,LAUNCH_DATA_STRING = 0x7,LAUNCH_DATA_OPAQUE = 0x8,LAUNCH_DATA_ERRNO = 0x9,LAUNCH_DATA_MACHPORT = 0xA,};
enum _09DE316CB93062A5C173A1063676BE3E {kHFSVolumeHardwareLockBit = 0x7,kHFSVolumeUnmountedBit = 0x8,kHFSVolumeSparedBlocksBit = 0x9,kHFSVolumeNoCacheRequiredBit = 0xA,kHFSBootVolumeInconsistentBit = 0xB,kHFSCatalogNodeIDsReusedBit = 0xC,kHFSVolumeJournaledBit = 0xD,kHFSVolumeInconsistentBit = 0xE,kHFSVolumeSoftwareLockBit = 0xF,kHFSUnusedNodeFixBit = 0x1F,kHFSContentProtectionBit = 0x1E,kHFSVolumeHardwareLockMask = 0x80,kHFSVolumeUnmountedMask = 0x100,kHFSVolumeSparedBlocksMask = 0x200,kHFSVolumeNoCacheRequiredMask = 0x400,kHFSBootVolumeInconsistentMask = 0x800,kHFSCatalogNodeIDsReusedMask = 0x1000,kHFSVolumeJournaledMask = 0x2000,kHFSVolumeInconsistentMask = 0x4000,kHFSVolumeSoftwareLockMask = 0x8000,kHFSUnusedNodeFixMask = 0x80000000,kHFSContentProtectionMask = 0x40000000,kHFSMDBAttributesMask = 0x8380,};
enum _09E147D3D15D65BE8A2EAFBAEB46AC86 {kAUNoErr = 0x0,kAUBadParamErr = 0xFFFEFDFF,kAUStatErr = 0xFFFEFE00,kAUSysctlErr = 0xFFFEFE01,kAUOpenErr = 0xFFFEFE02,kAUMakeSubjectTokErr = 0xFFFEFE03,kAUWriteSubjectTokErr = 0xFFFEFE04,kAUWriteCallerTokErr = 0xFFFEFE05,kAUMakeReturnTokErr = 0xFFFEFE06,kAUWriteReturnTokErr = 0xFFFEFE07,kAUCloseErr = 0xFFFEFE08,kAUMakeTextTokErr = 0xFFFEFE09,kAULastErr = 0xFFFEFE0A,};
enum _0AA02EF7744A92D26B678F19DE8AD812 {PCAP_D_INOUT = 0x0,PCAP_D_IN = 0x1,PCAP_D_OUT = 0x2,};
struct _0B20F48E2CD2D778BD1F216BA81B71CE {unsigned int val[8];};
struct _0BA82F063C392BF02AF0AA599B603A12 {unsigned int val[2];};
struct _0C41D669CC7829CF12B135747142967F { char *str;unsigned short length;};
enum _0CDFE265BA8298D003ED8250CCBFBAAD {CURLINFO_TEXT = 0x0,CURLINFO_HEADER_IN = 0x1,CURLINFO_HEADER_OUT = 0x2,CURLINFO_DATA_IN = 0x3,CURLINFO_DATA_OUT = 0x4,CURLINFO_SSL_DATA_IN = 0x5,CURLINFO_SSL_DATA_OUT = 0x6,CURLINFO_END = 0x7,};
enum _0D3254EE5F0606DD2967BF158FADA5B5 {SASL_VRFY_PLUGIN = 0x0,SASL_VRFY_CONF = 0x1,SASL_VRFY_PASSWD = 0x2,SASL_VRFY_OTHER = 0x3,};
struct _0D8E21930F8347099053B71EC6295221 {char *rmailbx;char *emailbx;};
enum _0DBFB4EE40FDDB492A6C497C28C3DC12 {CURLUSESSL_NONE = 0x0,CURLUSESSL_TRY = 0x1,CURLUSESSL_CONTROL = 0x2,CURLUSESSL_ALL = 0x3,CURLUSESSL_LAST = 0x4,};
struct _0DDFFC86F34D071263AD20115100C1F0 {int length;};
enum _0F66511D35BDCD2A40906A0230E6F760 {CURL_LOCK_DATA_NONE = 0x0,CURL_LOCK_DATA_SHARE = 0x1,CURL_LOCK_DATA_COOKIE = 0x2,CURL_LOCK_DATA_DNS = 0x3,CURL_LOCK_DATA_SSL_SESSION = 0x4,CURL_LOCK_DATA_CONNECT = 0x5,CURL_LOCK_DATA_LAST = 0x6,};
enum _0FAD588DCCF26DA566A37A2D9B7AC1B1 {XPATH_UNDEFINED = 0x0,XPATH_NODESET = 0x1,XPATH_BOOLEAN = 0x2,XPATH_NUMBER = 0x3,XPATH_STRING = 0x4,XPATH_POINT = 0x5,XPATH_RANGE = 0x6,XPATH_LOCATIONSET = 0x7,XPATH_USERS = 0x8,XPATH_XSLT_TREE = 0x9,};
enum _105EF7DF523ADCCD68A3E1D04A367638 {BLOCK_LAYOUT_ESCAPE = 0x0,BLOCK_LAYOUT_NON_OBJECT_BYTES = 0x1,BLOCK_LAYOUT_NON_OBJECT_WORDS = 0x2,BLOCK_LAYOUT_STRONG = 0x3,BLOCK_LAYOUT_BYREF = 0x4,BLOCK_LAYOUT_WEAK = 0x5,BLOCK_LAYOUT_UNRETAINED = 0x6,BLOCK_LAYOUT_UNKNOWN_WORDS_7 = 0x7,BLOCK_LAYOUT_UNKNOWN_WORDS_8 = 0x8,BLOCK_LAYOUT_UNKNOWN_WORDS_9 = 0x9,BLOCK_LAYOUT_UNKNOWN_WORDS_A = 0xA,BLOCK_LAYOUT_UNUSED_B = 0xB,BLOCK_LAYOUT_UNUSED_C = 0xC,BLOCK_LAYOUT_UNUSED_D = 0xD,BLOCK_LAYOUT_UNUSED_E = 0xE,BLOCK_LAYOUT_UNUSED_F = 0xF,};
enum _118F56CDA9BE3A595E7F6B040CBBDA40 {XSLT_LOAD_START = 0x0,XSLT_LOAD_STYLESHEET = 0x1,XSLT_LOAD_DOCUMENT = 0x2,};
enum _120AC332EBC18F2A4396A3C657EB4314 {kDNSServiceDiscoveryWaiting = 0x1,kDNSServiceDiscoveryNoError = 0x0,kDNSServiceDiscoveryUnknownErr = 0xFFFEFFFF,kDNSServiceDiscoveryNoSuchNameErr = 0xFFFEFFFE,kDNSServiceDiscoveryNoMemoryErr = 0xFFFEFFFD,kDNSServiceDiscoveryBadParamErr = 0xFFFEFFFC,kDNSServiceDiscoveryBadReferenceErr = 0xFFFEFFFB,kDNSServiceDiscoveryBadStateErr = 0xFFFEFFFA,kDNSServiceDiscoveryBadFlagsErr = 0xFFFEFFF9,kDNSServiceDiscoveryUnsupportedErr = 0xFFFEFFF8,kDNSServiceDiscoveryNotInitializedErr = 0xFFFEFFF7,kDNSServiceDiscoveryNoCache = 0xFFFEFFF6,kDNSServiceDiscoveryAlreadyRegistered = 0xFFFEFFF5,kDNSServiceDiscoveryNameConflict = 0xFFFEFFF4,kDNSServiceDiscoveryInvalid = 0xFFFEFFF3,kDNSServiceDiscoveryMemFree = 0xFFFEFF00,};
enum _12BCB6FB1C1F7369F599F8C0386A61E5 {CURLIOE_OK = 0x0,CURLIOE_UNKNOWNCMD = 0x1,CURLIOE_FAILRESTART = 0x2,CURLIOE_LAST = 0x3,};
union _149468D43E4B0BB405DED2721C573480 {char __mbstate8[128];long long _mbstateL;};
enum _15BD65DF0A8CF1C1FCC2C1B4CC004B54 {kDNSServiceErr_NoError = 0x0,kDNSServiceErr_Unknown = 0xFFFEFFFF,kDNSServiceErr_NoSuchName = 0xFFFEFFFE,kDNSServiceErr_NoMemory = 0xFFFEFFFD,kDNSServiceErr_BadParam = 0xFFFEFFFC,kDNSServiceErr_BadReference = 0xFFFEFFFB,kDNSServiceErr_BadState = 0xFFFEFFFA,kDNSServiceErr_BadFlags = 0xFFFEFFF9,kDNSServiceErr_Unsupported = 0xFFFEFFF8,kDNSServiceErr_NotInitialized = 0xFFFEFFF7,kDNSServiceErr_AlreadyRegistered = 0xFFFEFFF5,kDNSServiceErr_NameConflict = 0xFFFEFFF4,kDNSServiceErr_Invalid = 0xFFFEFFF3,kDNSServiceErr_Firewall = 0xFFFEFFF2,kDNSServiceErr_Incompatible = 0xFFFEFFF1,kDNSServiceErr_BadInterfaceIndex = 0xFFFEFFF0,kDNSServiceErr_Refused = 0xFFFEFFEF,kDNSServiceErr_NoSuchRecord = 0xFFFEFFEE,kDNSServiceErr_NoAuth = 0xFFFEFFED,kDNSServiceErr_NoSuchKey = 0xFFFEFFEC,kDNSServiceErr_NATTraversal = 0xFFFEFFEB,kDNSServiceErr_DoubleNAT = 0xFFFEFFEA,kDNSServiceErr_BadTime = 0xFFFEFFE9,kDNSServiceErr_BadSig = 0xFFFEFFE8,kDNSServiceErr_BadKey = 0xFFFEFFE7,kDNSServiceErr_Transient = 0xFFFEFFE6,kDNSServiceErr_ServiceNotRunning = 0xFFFEFFE5,kDNSServiceErr_NATPortMappingUnsupported = 0xFFFEFFE4,kDNSServiceErr_NATPortMappingDisabled = 0xFFFEFFE3,kDNSServiceErr_NoRouter = 0xFFFEFFE2,kDNSServiceErr_PollingMode = 0xFFFEFFE1,kDNSServiceErr_Timeout = 0xFFFEFFE0,};
enum _162ABE26F671F2AD93D06A9AC8714FD1 {XSLT_FUNC_COPY = 0x1,XSLT_FUNC_SORT = 0x2,XSLT_FUNC_TEXT = 0x3,XSLT_FUNC_ELEMENT = 0x4,XSLT_FUNC_ATTRIBUTE = 0x5,XSLT_FUNC_COMMENT = 0x6,XSLT_FUNC_PI = 0x7,XSLT_FUNC_COPYOF = 0x8,XSLT_FUNC_VALUEOF = 0x9,XSLT_FUNC_NUMBER = 0xA,XSLT_FUNC_APPLYIMPORTS = 0xB,XSLT_FUNC_CALLTEMPLATE = 0xC,XSLT_FUNC_APPLYTEMPLATES = 0xD,XSLT_FUNC_CHOOSE = 0xE,XSLT_FUNC_IF = 0xF,XSLT_FUNC_FOREACH = 0x10,XSLT_FUNC_DOCUMENT = 0x11,XSLT_FUNC_WITHPARAM = 0x12,XSLT_FUNC_PARAM = 0x13,XSLT_FUNC_VARIABLE = 0x14,XSLT_FUNC_WHEN = 0x15,XSLT_FUNC_EXTENSION = 0x16,};
enum _1847E82C722A14F5F43D3B5EFF380B36 {kHFSPlusExtentKeyMaximumLength = 0xA,kHFSExtentKeyMaximumLength = 0x7,kHFSPlusCatalogKeyMaximumLength = 0x204,kHFSPlusCatalogKeyMinimumLength = 0x6,kHFSCatalogKeyMaximumLength = 0x25,kHFSCatalogKeyMinimumLength = 0x6,kHFSPlusCatalogMinNodeSize = 0x1000,kHFSPlusExtentMinNodeSize = 0x200,kHFSPlusAttrMinNodeSize = 0x1000,};
struct _184DAAE67CCF1C5185605B7156C28AF9 {unsigned int buffer[4];unsigned char count[8];unsigned int done;};
enum _1DB7270510D9B9271406B2E2F1D1DAC7 {XML_ATTRIBUTE_CDATA = 0x1,XML_ATTRIBUTE_ID = 0x2,XML_ATTRIBUTE_IDREF = 0x3,XML_ATTRIBUTE_IDREFS = 0x4,XML_ATTRIBUTE_ENTITY = 0x5,XML_ATTRIBUTE_ENTITIES = 0x6,XML_ATTRIBUTE_NMTOKEN = 0x7,XML_ATTRIBUTE_NMTOKENS = 0x8,XML_ATTRIBUTE_ENUMERATION = 0x9,XML_ATTRIBUTE_NOTATION = 0xA,};
enum _1E2DDA021D687B95C32B4B8734BFFE5E {XML_SAVE_FORMAT = 0x1,XML_SAVE_NO_DECL = 0x2,XML_SAVE_NO_EMPTY = 0x4,XML_SAVE_NO_XHTML = 0x8,XML_SAVE_XHTML = 0x10,XML_SAVE_AS_XML = 0x20,XML_SAVE_AS_HTML = 0x40,};
enum _1FB0C3C05C839538DC046EE3FB85DDAE {kBTLeafNode = 0xFFFFFFFF,kBTIndexNode = 0x0,kBTHeaderNode = 0x1,kBTMapNode = 0x2,};
enum _1FB9CAD4792414AA5B71A295737B2862 {kDyldSharedCacheTypeDevelopment = 0x0,kDyldSharedCacheTypeProduction = 0x1,};
struct _1FC9C4745BFE4A4C45A6D008A791D581 {unsigned int id : 16;unsigned int rd : 1;unsigned int tc : 1;unsigned int aa : 1;unsigned int opcode : 4;unsigned int qr : 1;unsigned int rcode : 4;unsigned int cd : 1;unsigned int ad : 1;unsigned int unused : 1;unsigned int ra : 1;unsigned int qdcount : 16;unsigned int ancount : 16;unsigned int nscount : 16;unsigned int arcount : 16;};
enum _1FDFCDB6B16318BF0B312BA6FA177D60 {kBTBadCloseMask = 0x1,kBTBigKeysMask = 0x2,kBTVariableIndexKeysMask = 0x4,};
enum _2142F4BDED004AA731F5D116DA25DAF0 {REMOVEFILE_RECURSIVE = 0x1,REMOVEFILE_KEEP_PARENT = 0x2,REMOVEFILE_SECURE_7_PASS = 0x4,REMOVEFILE_SECURE_35_PASS = 0x8,REMOVEFILE_SECURE_1_PASS = 0x10,REMOVEFILE_SECURE_3_PASS = 0x20,REMOVEFILE_SECURE_1_PASS_ZERO = 0x40,};
enum _215194CEC7B0CB0293C31B12FA375707 {TidyNode_Root = 0x0,TidyNode_DocType = 0x1,TidyNode_Comment = 0x2,TidyNode_ProcIns = 0x3,TidyNode_Text = 0x4,TidyNode_Start = 0x5,TidyNode_End = 0x6,TidyNode_StartEnd = 0x7,TidyNode_CDATA = 0x8,TidyNode_Section = 0x9,TidyNode_Asp = 0xA,TidyNode_Jste = 0xB,TidyNode_Php = 0xC,TidyNode_XmlDecl = 0xD,};
enum _24B90EFAD6F7231A0F4CA2F9C31D428B {XML_SCHEMAS_UNKNOWN = 0x0,XML_SCHEMAS_STRING = 0x1,XML_SCHEMAS_NORMSTRING = 0x2,XML_SCHEMAS_DECIMAL = 0x3,XML_SCHEMAS_TIME = 0x4,XML_SCHEMAS_GDAY = 0x5,XML_SCHEMAS_GMONTH = 0x6,XML_SCHEMAS_GMONTHDAY = 0x7,XML_SCHEMAS_GYEAR = 0x8,XML_SCHEMAS_GYEARMONTH = 0x9,XML_SCHEMAS_DATE = 0xA,XML_SCHEMAS_DATETIME = 0xB,XML_SCHEMAS_DURATION = 0xC,XML_SCHEMAS_FLOAT = 0xD,XML_SCHEMAS_DOUBLE = 0xE,XML_SCHEMAS_BOOLEAN = 0xF,XML_SCHEMAS_TOKEN = 0x10,XML_SCHEMAS_LANGUAGE = 0x11,XML_SCHEMAS_NMTOKEN = 0x12,XML_SCHEMAS_NMTOKENS = 0x13,XML_SCHEMAS_NAME = 0x14,XML_SCHEMAS_QNAME = 0x15,XML_SCHEMAS_NCNAME = 0x16,XML_SCHEMAS_ID = 0x17,XML_SCHEMAS_IDREF = 0x18,XML_SCHEMAS_IDREFS = 0x19,XML_SCHEMAS_ENTITY = 0x1A,XML_SCHEMAS_ENTITIES = 0x1B,XML_SCHEMAS_NOTATION = 0x1C,XML_SCHEMAS_ANYURI = 0x1D,XML_SCHEMAS_INTEGER = 0x1E,XML_SCHEMAS_NPINTEGER = 0x1F,XML_SCHEMAS_NINTEGER = 0x20,XML_SCHEMAS_NNINTEGER = 0x21,XML_SCHEMAS_PINTEGER = 0x22,XML_SCHEMAS_INT = 0x23,XML_SCHEMAS_UINT = 0x24,XML_SCHEMAS_LONG = 0x25,XML_SCHEMAS_ULONG = 0x26,XML_SCHEMAS_SHORT = 0x27,XML_SCHEMAS_USHORT = 0x28,XML_SCHEMAS_BYTE = 0x29,XML_SCHEMAS_UBYTE = 0x2A,XML_SCHEMAS_HEXBINARY = 0x2B,XML_SCHEMAS_BASE64BINARY = 0x2C,XML_SCHEMAS_ANYTYPE = 0x2D,XML_SCHEMAS_ANYSIMPLETYPE = 0x2E,};
enum _25E79EFADC115BB1720FA9FDCC5A52F9 {PAM_SILENT = 0x80000000,PAM_DISALLOW_NULL_AUTHTOK = 0x1,PAM_ESTABLISH_CRED = 0x1,PAM_DELETE_CRED = 0x2,PAM_REINITIALIZE_CRED = 0x4,PAM_REFRESH_CRED = 0x8,PAM_PRELIM_CHECK = 0x1,PAM_UPDATE_AUTHTOK = 0x2,PAM_CHANGE_EXPIRED_AUTHTOK = 0x4,};
enum _27728F6308F3E4DDCA008ED55D2293B2 {TidyString = 0x0,TidyInteger = 0x1,TidyBoolean = 0x2,};
enum _278B4CDAE9C99E304B0906BE5968E29D {XML_SCHEMA_WHITESPACE_UNKNOWN = 0x0,XML_SCHEMA_WHITESPACE_PRESERVE = 0x1,XML_SCHEMA_WHITESPACE_REPLACE = 0x2,XML_SCHEMA_WHITESPACE_COLLAPSE = 0x3,};
enum _27A01D9EE3F8426B35A7597034B60846 {CURLFILETYPE_FILE = 0x0,CURLFILETYPE_DIRECTORY = 0x1,CURLFILETYPE_SYMLINK = 0x2,CURLFILETYPE_DEVICE_BLOCK = 0x3,CURLFILETYPE_DEVICE_CHAR = 0x4,CURLFILETYPE_NAMEDPIPE = 0x5,CURLFILETYPE_SOCKET = 0x6,CURLFILETYPE_DOOR = 0x7,CURLFILETYPE_UNKNOWN = 0x8,};
enum _28266B4D1FF5A8F2FF1835543AB19A29 {CURLFORM_NOTHING = 0x0,CURLFORM_COPYNAME = 0x1,CURLFORM_PTRNAME = 0x2,CURLFORM_NAMELENGTH = 0x3,CURLFORM_COPYCONTENTS = 0x4,CURLFORM_PTRCONTENTS = 0x5,CURLFORM_CONTENTSLENGTH = 0x6,CURLFORM_FILECONTENT = 0x7,CURLFORM_ARRAY = 0x8,CURLFORM_OBSOLETE = 0x9,CURLFORM_FILE = 0xA,CURLFORM_BUFFER = 0xB,CURLFORM_BUFFERPTR = 0xC,CURLFORM_BUFFERLENGTH = 0xD,CURLFORM_CONTENTTYPE = 0xE,CURLFORM_CONTENTHEADER = 0xF,CURLFORM_FILENAME = 0x10,CURLFORM_END = 0x11,CURLFORM_OBSOLETE2 = 0x12,CURLFORM_STREAM = 0x13,CURLFORM_LASTENTRY = 0x14,};
enum _283BE608AB49AEC9A9CA8DA02D1A1601 {kDNSServiceFlagsMoreComing = 0x1,kDNSServiceFlagsAdd = 0x2,kDNSServiceFlagsDefault = 0x4,kDNSServiceFlagsNoAutoRename = 0x8,kDNSServiceFlagsShared = 0x10,kDNSServiceFlagsUnique = 0x20,kDNSServiceFlagsBrowseDomains = 0x40,kDNSServiceFlagsRegistrationDomains = 0x80,kDNSServiceFlagsLongLivedQuery = 0x100,kDNSServiceFlagsAllowRemoteQuery = 0x200,kDNSServiceFlagsForceMulticast = 0x400,kDNSServiceFlagsForce = 0x800,kDNSServiceFlagsReturnIntermediates = 0x1000,kDNSServiceFlagsNonBrowsable = 0x2000,kDNSServiceFlagsShareConnection = 0x4000,kDNSServiceFlagsSuppressUnusable = 0x8000,kDNSServiceFlagsTimeout = 0x10000,kDNSServiceFlagsIncludeP2P = 0x20000,kDNSServiceFlagsWakeOnResolve = 0x40000,};
enum _29FC7CC788C9FFDBF53740441D4A1DD5 {DNSServiceBrowserReplyAddInstance = 0x0,DNSServiceBrowserReplyRemoveInstance = 0x1,};
enum _2B1C8C2AA87A0F529B35F14375A7741D {XML_ERR_NONE = 0x0,XML_ERR_WARNING = 0x1,XML_ERR_ERROR = 0x2,XML_ERR_FATAL = 0x3,};
enum _2B249EAD8B9396505612852840E44E36 {ACL_READ_DATA = 0x2,ACL_LIST_DIRECTORY = 0x2,ACL_WRITE_DATA = 0x4,ACL_ADD_FILE = 0x4,ACL_EXECUTE = 0x8,ACL_SEARCH = 0x8,ACL_DELETE = 0x10,ACL_APPEND_DATA = 0x20,ACL_ADD_SUBDIRECTORY = 0x20,ACL_DELETE_CHILD = 0x40,ACL_READ_ATTRIBUTES = 0x80,ACL_WRITE_ATTRIBUTES = 0x100,ACL_READ_EXTATTRIBUTES = 0x200,ACL_WRITE_EXTATTRIBUTES = 0x400,ACL_READ_SECURITY = 0x800,ACL_WRITE_SECURITY = 0x1000,ACL_CHANGE_OWNER = 0x2000,};
struct _2B2E2AA3D14CF05952EA09DDB52B4A5A {char *filename;char *name;int ref_count;unsigned int is_resident : 1;unsigned int is_symglobal : 1;unsigned int is_symlocal : 1;};
enum _2DA825ED8C2895B6F3A859CF0380522A {XML_EXP_EMPTY = 0x0,XML_EXP_FORBID = 0x1,XML_EXP_ATOM = 0x2,XML_EXP_SEQ = 0x3,XML_EXP_OR = 0x4,XML_EXP_COUNT = 0x5,};
enum _2E8E5FC6A771AD2BBD66B1556875C23C {CURLOPT_FILE = 0x2711,CURLOPT_URL = 0x2712,CURLOPT_PORT = 0x3,CURLOPT_PROXY = 0x2714,CURLOPT_USERPWD = 0x2715,CURLOPT_PROXYUSERPWD = 0x2716,CURLOPT_RANGE = 0x2717,CURLOPT_INFILE = 0x2719,CURLOPT_ERRORBUFFER = 0x271A,CURLOPT_WRITEFUNCTION = 0x4E2B,CURLOPT_READFUNCTION = 0x4E2C,CURLOPT_TIMEOUT = 0xD,CURLOPT_INFILESIZE = 0xE,CURLOPT_POSTFIELDS = 0x271F,CURLOPT_REFERER = 0x2720,CURLOPT_FTPPORT = 0x2721,CURLOPT_USERAGENT = 0x2722,CURLOPT_LOW_SPEED_LIMIT = 0x13,CURLOPT_LOW_SPEED_TIME = 0x14,CURLOPT_RESUME_FROM = 0x15,CURLOPT_COOKIE = 0x2726,CURLOPT_HTTPHEADER = 0x2727,CURLOPT_HTTPPOST = 0x2728,CURLOPT_SSLCERT = 0x2729,CURLOPT_KEYPASSWD = 0x272A,CURLOPT_CRLF = 0x1B,CURLOPT_QUOTE = 0x272C,CURLOPT_WRITEHEADER = 0x272D,CURLOPT_COOKIEFILE = 0x272F,CURLOPT_SSLVERSION = 0x20,CURLOPT_TIMECONDITION = 0x21,CURLOPT_TIMEVALUE = 0x22,CURLOPT_CUSTOMREQUEST = 0x2734,CURLOPT_STDERR = 0x2735,CURLOPT_POSTQUOTE = 0x2737,CURLOPT_WRITEINFO = 0x2738,CURLOPT_VERBOSE = 0x29,CURLOPT_HEADER = 0x2A,CURLOPT_NOPROGRESS = 0x2B,CURLOPT_NOBODY = 0x2C,CURLOPT_FAILONERROR = 0x2D,CURLOPT_UPLOAD = 0x2E,CURLOPT_POST = 0x2F,CURLOPT_DIRLISTONLY = 0x30,CURLOPT_APPEND = 0x32,CURLOPT_NETRC = 0x33,CURLOPT_FOLLOWLOCATION = 0x34,CURLOPT_TRANSFERTEXT = 0x35,CURLOPT_PUT = 0x36,CURLOPT_PROGRESSFUNCTION = 0x4E58,CURLOPT_PROGRESSDATA = 0x2749,CURLOPT_AUTOREFERER = 0x3A,CURLOPT_PROXYPORT = 0x3B,CURLOPT_POSTFIELDSIZE = 0x3C,CURLOPT_HTTPPROXYTUNNEL = 0x3D,CURLOPT_INTERFACE = 0x274E,CURLOPT_KRBLEVEL = 0x274F,CURLOPT_SSL_VERIFYPEER = 0x40,CURLOPT_CAINFO = 0x2751,CURLOPT_MAXREDIRS = 0x44,CURLOPT_FILETIME = 0x45,CURLOPT_TELNETOPTIONS = 0x2756,CURLOPT_MAXCONNECTS = 0x47,CURLOPT_CLOSEPOLICY = 0x48,CURLOPT_FRESH_CONNECT = 0x4A,CURLOPT_FORBID_REUSE = 0x4B,CURLOPT_RANDOM_FILE = 0x275C,CURLOPT_EGDSOCKET = 0x275D,CURLOPT_CONNECTTIMEOUT = 0x4E,CURLOPT_HEADERFUNCTION = 0x4E6F,CURLOPT_HTTPGET = 0x50,CURLOPT_SSL_VERIFYHOST = 0x51,CURLOPT_COOKIEJAR = 0x2762,CURLOPT_SSL_CIPHER_LIST = 0x2763,CURLOPT_HTTP_VERSION = 0x54,CURLOPT_FTP_USE_EPSV = 0x55,CURLOPT_SSLCERTTYPE = 0x2766,CURLOPT_SSLKEY = 0x2767,CURLOPT_SSLKEYTYPE = 0x2768,CURLOPT_SSLENGINE = 0x2769,CURLOPT_SSLENGINE_DEFAULT = 0x5A,CURLOPT_DNS_USE_GLOBAL_CACHE = 0x5B,CURLOPT_DNS_CACHE_TIMEOUT = 0x5C,CURLOPT_PREQUOTE = 0x276D,CURLOPT_DEBUGFUNCTION = 0x4E7E,CURLOPT_DEBUGDATA = 0x276F,CURLOPT_COOKIESESSION = 0x60,CURLOPT_CAPATH = 0x2771,CURLOPT_BUFFERSIZE = 0x62,CURLOPT_NOSIGNAL = 0x63,CURLOPT_SHARE = 0x2774,CURLOPT_PROXYTYPE = 0x65,CURLOPT_ENCODING = 0x2776,CURLOPT_PRIVATE = 0x2777,CURLOPT_HTTP200ALIASES = 0x2778,CURLOPT_UNRESTRICTED_AUTH = 0x69,CURLOPT_FTP_USE_EPRT = 0x6A,CURLOPT_HTTPAUTH = 0x6B,CURLOPT_SSL_CTX_FUNCTION = 0x4E8C,CURLOPT_SSL_CTX_DATA = 0x277D,CURLOPT_FTP_CREATE_MISSING_DIRS = 0x6E,CURLOPT_PROXYAUTH = 0x6F,CURLOPT_FTP_RESPONSE_TIMEOUT = 0x70,CURLOPT_IPRESOLVE = 0x71,CURLOPT_MAXFILESIZE = 0x72,CURLOPT_INFILESIZE_LARGE = 0x75A3,CURLOPT_RESUME_FROM_LARGE = 0x75A4,CURLOPT_MAXFILESIZE_LARGE = 0x75A5,CURLOPT_NETRC_FILE = 0x2786,CURLOPT_USE_SSL = 0x77,CURLOPT_POSTFIELDSIZE_LARGE = 0x75A8,CURLOPT_0x01 = 0x79,CURLOPT_FTPSSLAUTH = 0x81,CURLOPT_IOCTLFUNCTION = 0x4EA2,CURLOPT_IOCTLDATA = 0x2793,CURLOPT_FTP_ACCOUNT = 0x2796,CURLOPT_COOKIELIST = 0x2797,CURLOPT_IGNORE_CONTENT_LENGTH = 0x88,CURLOPT_FTP_SKIP_PASV_IP = 0x89,CURLOPT_FTP_FILEMETHOD = 0x8A,CURLOPT_LOCALPORT = 0x8B,CURLOPT_LOCALPORTRANGE = 0x8C,CURLOPT_CONNECT_ONLY = 0x8D,CURLOPT_CONV_FROM_NETWORK_FUNCTION = 0x4EAE,CURLOPT_CONV_TO_NETWORK_FUNCTION = 0x4EAF,CURLOPT_CONV_FROM_UTF8_FUNCTION = 0x4EB0,CURLOPT_MAX_SEND_SPEED_LARGE = 0x75C1,CURLOPT_MAX_RECV_SPEED_LARGE = 0x75C2,CURLOPT_FTP_ALTERNATIVE_TO_USER = 0x27A3,CURLOPT_SOCKOPTFUNCTION = 0x4EB4,CURLOPT_SOCKOPTDATA = 0x27A5,CURLOPT_SSL_SESSIONID_CACHE = 0x96,CURLOPT_SSH_AUTH_TYPES = 0x97,CURLOPT_SSH_PUBLIC_KEYFILE = 0x27A8,CURLOPT_SSH_PRIVATE_KEYFILE = 0x27A9,CURLOPT_FTP_SSL_CCC = 0x9A,CURLOPT_TIMEOUT_MS = 0x9B,CURLOPT_CONNECTTIMEOUT_MS = 0x9C,CURLOPT_HTTP_TRANSFER_DECODING = 0x9D,CURLOPT_HTTP_CONTENT_DECODING = 0x9E,CURLOPT_NEW_FILE_PERMS = 0x9F,CURLOPT_NEW_DIRECTORY_PERMS = 0xA0,CURLOPT_POSTREDIR = 0xA1,CURLOPT_SSH_HOST_PUBLIC_KEY_MD5 = 0x27B2,CURLOPT_OPENSOCKETFUNCTION = 0x4EC3,CURLOPT_OPENSOCKETDATA = 0x27B4,CURLOPT_COPYPOSTFIELDS = 0x27B5,CURLOPT_PROXY_TRANSFER_MODE = 0xA6,CURLOPT_SEEKFUNCTION = 0x4EC7,CURLOPT_SEEKDATA = 0x27B8,CURLOPT_CRLFILE = 0x27B9,CURLOPT_ISSUERCERT = 0x27BA,CURLOPT_ADDRESS_SCOPE = 0xAB,CURLOPT_CERTINFO = 0xAC,CURLOPT_USERNAME = 0x27BD,CURLOPT_PASSWORD = 0x27BE,CURLOPT_PROXYUSERNAME = 0x27BF,CURLOPT_PROXYPASSWORD = 0x27C0,CURLOPT_NOPROXY = 0x27C1,CURLOPT_TFTP_BLKSIZE = 0xB2,CURLOPT_SOCKS5_GSSAPI_SERVICE = 0x27C3,CURLOPT_SOCKS5_GSSAPI_NEC = 0xB4,CURLOPT_PROTOCOLS = 0xB5,CURLOPT_REDIR_PROTOCOLS = 0xB6,CURLOPT_SSH_KNOWNHOSTS = 0x27C7,CURLOPT_SSH_KEYFUNCTION = 0x4ED8,CURLOPT_SSH_KEYDATA = 0x27C9,CURLOPT_MAIL_FROM = 0x27CA,CURLOPT_MAIL_RCPT = 0x27CB,CURLOPT_FTP_USE_PRET = 0xBC,CURLOPT_RTSP_REQUEST = 0xBD,CURLOPT_RTSP_SESSION_ID = 0x27CE,CURLOPT_RTSP_STREAM_URI = 0x27CF,CURLOPT_RTSP_TRANSPORT = 0x27D0,CURLOPT_RTSP_CLIENT_CSEQ = 0xC1,CURLOPT_RTSP_SERVER_CSEQ = 0xC2,CURLOPT_INTERLEAVEDATA = 0x27D3,CURLOPT_INTERLEAVEFUNCTION = 0x4EE4,CURLOPT_WILDCARDMATCH = 0xC5,CURLOPT_CHUNK_BGN_FUNCTION = 0x4EE6,CURLOPT_CHUNK_END_FUNCTION = 0x4EE7,CURLOPT_FNMATCH_FUNCTION = 0x4EE8,CURLOPT_CHUNK_DATA = 0x27D9,CURLOPT_FNMATCH_DATA = 0x27DA,CURLOPT_RESOLVE = 0x27DB,CURLOPT_TLSAUTH_USERNAME = 0x27DC,CURLOPT_TLSAUTH_PASSWORD = 0x27DD,CURLOPT_TLSAUTH_TYPE = 0x27DE,CURLOPT_LASTENTRY = 0x27DF,};
enum _2EA0513515F7563CFBB6420CCE575C9E {dot3ChipSetAMD7990 = 0x1,dot3ChipSetAMD79900 = 0x2,dot3ChipSetAMD79C940 = 0x3,};
enum _2F04DECAC9E27824D85E198F1C682F07 {XML_SCHEMA_CONTENT_UNKNOWN = 0x0,XML_SCHEMA_CONTENT_EMPTY = 0x1,XML_SCHEMA_CONTENT_ELEMENTS = 0x2,XML_SCHEMA_CONTENT_MIXED = 0x3,XML_SCHEMA_CONTENT_SIMPLE = 0x4,XML_SCHEMA_CONTENT_MIXED_OR_ELEMENTS = 0x5,XML_SCHEMA_CONTENT_BASIC = 0x6,XML_SCHEMA_CONTENT_ANY = 0x7,};
enum _2FDA988FD3B15DF6C5C6EE839763B6D4 {TidyTag_UNKNOWN = 0x0,TidyTag_A = 0x1,TidyTag_ABBR = 0x2,TidyTag_ACRONYM = 0x3,TidyTag_ADDRESS = 0x4,TidyTag_ALIGN = 0x5,TidyTag_APPLET = 0x6,TidyTag_AREA = 0x7,TidyTag_B = 0x8,TidyTag_BASE = 0x9,TidyTag_BASEFONT = 0xA,TidyTag_BDO = 0xB,TidyTag_BGSOUND = 0xC,TidyTag_BIG = 0xD,TidyTag_BLINK = 0xE,TidyTag_BLOCKQUOTE = 0xF,TidyTag_BODY = 0x10,TidyTag_BR = 0x11,TidyTag_BUTTON = 0x12,TidyTag_CAPTION = 0x13,TidyTag_CENTER = 0x14,TidyTag_CITE = 0x15,TidyTag_CODE = 0x16,TidyTag_COL = 0x17,TidyTag_COLGROUP = 0x18,TidyTag_COMMENT = 0x19,TidyTag_DD = 0x1A,TidyTag_DEL = 0x1B,TidyTag_DFN = 0x1C,TidyTag_DIR = 0x1D,TidyTag_DIV = 0x1E,TidyTag_DL = 0x1F,TidyTag_DT = 0x20,TidyTag_EM = 0x21,TidyTag_EMBED = 0x22,TidyTag_FIELDSET = 0x23,TidyTag_FONT = 0x24,TidyTag_FORM = 0x25,TidyTag_FRAME = 0x26,TidyTag_FRAMESET = 0x27,TidyTag_H1 = 0x28,TidyTag_H2 = 0x29,TidyTag_H3 = 0x2A,TidyTag_H4 = 0x2B,TidyTag_H5 = 0x2C,TidyTag_H6 = 0x2D,TidyTag_HEAD = 0x2E,TidyTag_HR = 0x2F,TidyTag_HTML = 0x30,TidyTag_I = 0x31,TidyTag_IFRAME = 0x32,TidyTag_ILAYER = 0x33,TidyTag_IMG = 0x34,TidyTag_INPUT = 0x35,TidyTag_INS = 0x36,TidyTag_ISINDEX = 0x37,TidyTag_KBD = 0x38,TidyTag_KEYGEN = 0x39,TidyTag_LABEL = 0x3A,TidyTag_LAYER = 0x3B,TidyTag_LEGEND = 0x3C,TidyTag_LI = 0x3D,TidyTag_LINK = 0x3E,TidyTag_LISTING = 0x3F,TidyTag_MAP = 0x40,TidyTag_MARQUEE = 0x41,TidyTag_MENU = 0x42,TidyTag_META = 0x43,TidyTag_MULTICOL = 0x44,TidyTag_NOBR = 0x45,TidyTag_NOEMBED = 0x46,TidyTag_NOFRAMES = 0x47,TidyTag_NOLAYER = 0x48,TidyTag_NOSAVE = 0x49,TidyTag_NOSCRIPT = 0x4A,TidyTag_OBJECT = 0x4B,TidyTag_OL = 0x4C,TidyTag_OPTGROUP = 0x4D,TidyTag_OPTION = 0x4E,TidyTag_P = 0x4F,TidyTag_PARAM = 0x50,TidyTag_PLAINTEXT = 0x51,TidyTag_PRE = 0x52,TidyTag_Q = 0x53,TidyTag_RB = 0x54,TidyTag_RBC = 0x55,TidyTag_RP = 0x56,TidyTag_RT = 0x57,TidyTag_RTC = 0x58,TidyTag_RUBY = 0x59,TidyTag_S = 0x5A,TidyTag_SAMP = 0x5B,TidyTag_SCRIPT = 0x5C,TidyTag_SELECT = 0x5D,TidyTag_SERVER = 0x5E,TidyTag_SERVLET = 0x5F,TidyTag_SMALL = 0x60,TidyTag_SPACER = 0x61,TidyTag_SPAN = 0x62,TidyTag_STRIKE = 0x63,TidyTag_STRONG = 0x64,TidyTag_STYLE = 0x65,TidyTag_SUB = 0x66,TidyTag_SUP = 0x67,TidyTag_TABLE = 0x68,TidyTag_TBODY = 0x69,TidyTag_TD = 0x6A,TidyTag_TEXTAREA = 0x6B,TidyTag_TFOOT = 0x6C,TidyTag_TH = 0x6D,TidyTag_THEAD = 0x6E,TidyTag_TITLE = 0x6F,TidyTag_TR = 0x70,TidyTag_TT = 0x71,TidyTag_U = 0x72,TidyTag_UL = 0x73,TidyTag_VAR = 0x74,TidyTag_WBR = 0x75,TidyTag_XMP = 0x76,TidyTag_NEXTID = 0x77,N_TIDY_TAGS = 0x78,};
enum _3369F195F3872D92A108D01D54B2E7FC {TidyLF = 0x0,TidyCRLF = 0x1,TidyCR = 0x2,};
enum _33C9AC843D06A38A38E08EEC860A8350 {UNW_ESUCCESS = 0x0,UNW_EUNSPEC = 0xFFFFE674,UNW_ENOMEM = 0xFFFFE673,UNW_EBADREG = 0xFFFFE672,UNW_EREADONLYREG = 0xFFFFE671,UNW_ESTOPUNWIND = 0xFFFFE670,UNW_EINVALIDIP = 0xFFFFE66F,UNW_EBADFRAME = 0xFFFFE66E,UNW_EINVAL = 0xFFFFE66D,UNW_EBADVERSION = 0xFFFFE66C,UNW_ENOINFO = 0xFFFFE66B,};
enum _345160C3650206BB2C3C257B2FE36FED {NSObjectFileImageFailure = 0x0,NSObjectFileImageSuccess = 0x1,NSObjectFileImageInappropriateFile = 0x2,NSObjectFileImageArch = 0x3,NSObjectFileImageFormat = 0x4,NSObjectFileImageAccess = 0x5,};
enum _349CDD1D13F7DF0473388D33C8CD4390 {NSUserDomainMask = 0x1,NSLocalDomainMask = 0x2,NSNetworkDomainMask = 0x4,NSSystemDomainMask = 0x8,NSAllDomainsMask = 0xFFFF,};
enum _354399D6CA6DC4E39B1228DCABD316AD {PAM_SM_AUTHENTICATE = 0x0,PAM_SM_SETCRED = 0x1,PAM_SM_ACCT_MGMT = 0x2,PAM_SM_OPEN_SESSION = 0x3,PAM_SM_CLOSE_SESSION = 0x4,PAM_SM_CHAUTHTOK = 0x5,PAM_NUM_PRIMITIVES = 0x6,};
enum _35D4575BDD269CB2C114416BAA7558BD {dot3ChipSetFujitsu86950 = 0x1,};
enum _36BD9AB06F2ACF31462F8B03D46184A5 {kHFSUnusedNodesFixDate = 0xC5EF2480,};
enum _3998B369563C3E922C9C4F0BF606DBF3 {OSUnknownByteOrder = 0x0,OSLittleEndian = 0x1,OSBigEndian = 0x2,};
enum _3BD93A796F6658F29C5207FE2468935A {CURLMOPT_SOCKETFUNCTION = 0x4E21,CURLMOPT_SOCKETDATA = 0x2712,CURLMOPT_PIPELINING = 0x3,CURLMOPT_TIMERFUNCTION = 0x4E24,CURLMOPT_TIMERDATA = 0x2715,CURLMOPT_MAXCONNECTS = 0x6,CURLMOPT_LASTENTRY = 0x7,};
enum _3C85D19FBA73C2ACEDF478D656FAB909 {XML_SCHEMA_VAL_VC_I_CREATE = 0x1,};
struct __attribute__((aligned(16))) _41E1A7C74B3260A4835F2B305A4796BB {void *opaque1;long long opaque2;};
enum _41E859DAAE26B07B8598FA4D4F1DF50A {res_9_goahead = 0x0,res_9_nextns = 0x1,res_9_modified = 0x2,res_9_done = 0x3,res_9_error = 0x4,};
enum _423F66BA35E8428C801C88EA56951FA7 {XML_RELAXNGP_NONE = 0x0,XML_RELAXNGP_FREE_DOC = 0x1,XML_RELAXNGP_CRNG = 0x2,};
enum _43AF380ED1E5C6639BF29287A0048170 {kHFSFolderRecord = 0x100,kHFSFileRecord = 0x200,kHFSFolderThreadRecord = 0x300,kHFSFileThreadRecord = 0x400,kHFSPlusFolderRecord = 0x1,kHFSPlusFileRecord = 0x2,kHFSPlusFolderThreadRecord = 0x3,kHFSPlusFileThreadRecord = 0x4,};
enum _44336BB59F93F7B3E282D9E42617278E {HTML_PARSE_RECOVER = 0x1,HTML_PARSE_NOERROR = 0x20,HTML_PARSE_NOWARNING = 0x40,HTML_PARSE_PEDANTIC = 0x80,HTML_PARSE_NOBLANKS = 0x100,HTML_PARSE_NONET = 0x800,HTML_PARSE_COMPACT = 0x10000,};
enum _44412BD0CE14AFC237A6D071851322F1 {kHFSPlusAttrInlineData = 0x10,kHFSPlusAttrForkData = 0x20,kHFSPlusAttrExtents = 0x30,};
enum _44CBB36E19F6FD8C2CE34633667F03E9 {SASL_INFO_LIST_START = 0x0,SASL_INFO_LIST_MECH = 0x1,SASL_INFO_LIST_END = 0x2,};
enum _46343603E7EF6B9CA2DB5251398A8141 {CURLVERSION_FIRST = 0x0,CURLVERSION_SECOND = 0x1,CURLVERSION_THIRD = 0x2,CURLVERSION_FOURTH = 0x3,CURLVERSION_LAST = 0x4,};
enum _488028D4BD0C051E692AC01785C90027 {SOCKINFO_GENERIC = 0x0,SOCKINFO_IN = 0x1,SOCKINFO_TCP = 0x2,SOCKINFO_UN = 0x3,SOCKINFO_NDRV = 0x4,SOCKINFO_KERN_EVENT = 0x5,SOCKINFO_KERN_CTL = 0x6,};
enum _4BA6DADA216E0E59C0FFC2E2D871AEA3 {PAM_SUCCESS = 0x0,PAM_OPEN_ERR = 0x1,PAM_SYMBOL_ERR = 0x2,PAM_SERVICE_ERR = 0x3,PAM_SYSTEM_ERR = 0x4,PAM_BUF_ERR = 0x5,PAM_CONV_ERR = 0x6,PAM_PERM_DENIED = 0x7,PAM_MAXTRIES = 0x8,PAM_AUTH_ERR = 0x9,PAM_NEW_AUTHTOK_REQD = 0xA,PAM_CRED_INSUFFICIENT = 0xB,PAM_AUTHINFO_UNAVAIL = 0xC,PAM_USER_UNKNOWN = 0xD,PAM_CRED_UNAVAIL = 0xE,PAM_CRED_EXPIRED = 0xF,PAM_CRED_ERR = 0x10,PAM_ACCT_EXPIRED = 0x11,PAM_AUTHTOK_EXPIRED = 0x12,PAM_SESSION_ERR = 0x13,PAM_AUTHTOK_ERR = 0x14,PAM_AUTHTOK_RECOVERY_ERR = 0x15,PAM_AUTHTOK_LOCK_BUSY = 0x16,PAM_AUTHTOK_DISABLE_AGING = 0x17,PAM_NO_MODULE_DATA = 0x18,PAM_IGNORE = 0x19,PAM_ABORT = 0x1A,PAM_TRY_AGAIN = 0x1B,PAM_MODULE_UNKNOWN = 0x1C,PAM_DOMAIN_UNKNOWN = 0x1D,PAM_NUM_ERRORS = 0x1E,};
enum _4C21AF12A3CB4BE1E82FF113A63D6EE5 {XML_TEXTREADER_MODE_INITIAL = 0x0,XML_TEXTREADER_MODE_INTERACTIVE = 0x1,XML_TEXTREADER_MODE_ERROR = 0x2,XML_TEXTREADER_MODE_EOF = 0x3,XML_TEXTREADER_MODE_CLOSED = 0x4,XML_TEXTREADER_MODE_READING = 0x5,};
enum _4E7DAA04C1544F5CC93F7C5C5ABE1E5E {XML_RELAXNG_OK = 0x0,XML_RELAXNG_ERR_MEMORY = 0x1,XML_RELAXNG_ERR_TYPE = 0x2,XML_RELAXNG_ERR_TYPEVAL = 0x3,XML_RELAXNG_ERR_DUPID = 0x4,XML_RELAXNG_ERR_TYPECMP = 0x5,XML_RELAXNG_ERR_NOSTATE = 0x6,XML_RELAXNG_ERR_NODEFINE = 0x7,XML_RELAXNG_ERR_LISTEXTRA = 0x8,XML_RELAXNG_ERR_LISTEMPTY = 0x9,XML_RELAXNG_ERR_INTERNODATA = 0xA,XML_RELAXNG_ERR_INTERSEQ = 0xB,XML_RELAXNG_ERR_INTEREXTRA = 0xC,XML_RELAXNG_ERR_ELEMNAME = 0xD,XML_RELAXNG_ERR_ATTRNAME = 0xE,XML_RELAXNG_ERR_ELEMNONS = 0xF,XML_RELAXNG_ERR_ATTRNONS = 0x10,XML_RELAXNG_ERR_ELEMWRONGNS = 0x11,XML_RELAXNG_ERR_ATTRWRONGNS = 0x12,XML_RELAXNG_ERR_ELEMEXTRANS = 0x13,XML_RELAXNG_ERR_ATTREXTRANS = 0x14,XML_RELAXNG_ERR_ELEMNOTEMPTY = 0x15,XML_RELAXNG_ERR_NOELEM = 0x16,XML_RELAXNG_ERR_NOTELEM = 0x17,XML_RELAXNG_ERR_ATTRVALID = 0x18,XML_RELAXNG_ERR_CONTENTVALID = 0x19,XML_RELAXNG_ERR_EXTRACONTENT = 0x1A,XML_RELAXNG_ERR_INVALIDATTR = 0x1B,XML_RELAXNG_ERR_DATAELEM = 0x1C,XML_RELAXNG_ERR_VALELEM = 0x1D,XML_RELAXNG_ERR_LISTELEM = 0x1E,XML_RELAXNG_ERR_DATATYPE = 0x1F,XML_RELAXNG_ERR_VALUE = 0x20,XML_RELAXNG_ERR_LIST = 0x21,XML_RELAXNG_ERR_NOGRAMMAR = 0x22,XML_RELAXNG_ERR_EXTRADATA = 0x23,XML_RELAXNG_ERR_LACKDATA = 0x24,XML_RELAXNG_ERR_INTERNAL = 0x25,XML_RELAXNG_ERR_ELEMWRONG = 0x26,XML_RELAXNG_ERR_TEXTWRONG = 0x27,};
enum _4FD0ECE3FAAB0A3A3855B925214176D1 {XLINK_TYPE_NONE = 0x0,XLINK_TYPE_SIMPLE = 0x1,XLINK_TYPE_EXTENDED = 0x2,XLINK_TYPE_EXTENDED_SET = 0x3,};
struct _524B7AA813964FB1B08025913F65D34C {char __opaque[68];};
enum _52D6426493297E9F8FA1631B28D1D7F5 {PAM_LOG_DEBUG = 0x0,PAM_LOG_VERBOSE = 0x1,PAM_LOG_NOTICE = 0x2,PAM_LOG_ERROR = 0x3,};
enum _539980D7AFB74DD78553342EB4BF9B66 {XML_SCHEMA_TYPE_BASIC = 0x1,XML_SCHEMA_TYPE_ANY = 0x2,XML_SCHEMA_TYPE_FACET = 0x3,XML_SCHEMA_TYPE_SIMPLE = 0x4,XML_SCHEMA_TYPE_COMPLEX = 0x5,XML_SCHEMA_TYPE_SEQUENCE = 0x6,XML_SCHEMA_TYPE_CHOICE = 0x7,XML_SCHEMA_TYPE_ALL = 0x8,XML_SCHEMA_TYPE_SIMPLE_CONTENT = 0x9,XML_SCHEMA_TYPE_COMPLEX_CONTENT = 0xA,XML_SCHEMA_TYPE_UR = 0xB,XML_SCHEMA_TYPE_RESTRICTION = 0xC,XML_SCHEMA_TYPE_EXTENSION = 0xD,XML_SCHEMA_TYPE_ELEMENT = 0xE,XML_SCHEMA_TYPE_ATTRIBUTE = 0xF,XML_SCHEMA_TYPE_ATTRIBUTEGROUP = 0x10,XML_SCHEMA_TYPE_GROUP = 0x11,XML_SCHEMA_TYPE_NOTATION = 0x12,XML_SCHEMA_TYPE_LIST = 0x13,XML_SCHEMA_TYPE_UNION = 0x14,XML_SCHEMA_TYPE_ANY_ATTRIBUTE = 0x15,XML_SCHEMA_TYPE_IDC_UNIQUE = 0x16,XML_SCHEMA_TYPE_IDC_KEY = 0x17,XML_SCHEMA_TYPE_IDC_KEYREF = 0x18,XML_SCHEMA_TYPE_PARTICLE = 0x19,XML_SCHEMA_TYPE_ATTRIBUTE_USE = 0x1A,XML_SCHEMA_FACET_MININCLUSIVE = 0x3E8,XML_SCHEMA_FACET_MINEXCLUSIVE = 0x3E9,XML_SCHEMA_FACET_MAXINCLUSIVE = 0x3EA,XML_SCHEMA_FACET_MAXEXCLUSIVE = 0x3EB,XML_SCHEMA_FACET_TOTALDIGITS = 0x3EC,XML_SCHEMA_FACET_FRACTIONDIGITS = 0x3ED,XML_SCHEMA_FACET_PATTERN = 0x3EE,XML_SCHEMA_FACET_ENUMERATION = 0x3EF,XML_SCHEMA_FACET_WHITESPACE = 0x3F0,XML_SCHEMA_FACET_LENGTH = 0x3F1,XML_SCHEMA_FACET_MAXLENGTH = 0x3F2,XML_SCHEMA_FACET_MINLENGTH = 0x3F3,XML_SCHEMA_EXTRA_QNAMEREF = 0x7D0,XML_SCHEMA_EXTRA_ATTR_USE_PROHIB = 0x7D1,};
enum _55AEE0FA07D064890E756D545251771C {CURL_FORMADD_OK = 0x0,CURL_FORMADD_MEMORY = 0x1,CURL_FORMADD_OPTION_TWICE = 0x2,CURL_FORMADD_NULL = 0x3,CURL_FORMADD_UNKNOWN_OPTION = 0x4,CURL_FORMADD_INCOMPLETE = 0x5,CURL_FORMADD_ILLEGAL_ARRAY = 0x6,CURL_FORMADD_DISABLED = 0x7,CURL_FORMADD_LAST = 0x8,};
enum _56960417386CC1564F639639D8B0AEF8 {NSOtherErrorRelocation = 0x0,NSOtherErrorLazyBind = 0x1,NSOtherErrorIndrLoop = 0x2,NSOtherErrorLazyInit = 0x3,NSOtherErrorInvalidArgs = 0x4,};
enum _56CFACB0BE9E4BA6F465B343389C1FC1 {CURLIOCMD_NOP = 0x0,CURLIOCMD_RESTARTREAD = 0x1,CURLIOCMD_LAST = 0x2,};
enum _5AD11541F8B775E98080565D845776A5 {CURL_SSLVERSION_DEFAULT = 0x0,CURL_SSLVERSION_TLSv1 = 0x1,CURL_SSLVERSION_SSLv2 = 0x2,CURL_SSLVERSION_SSLv3 = 0x3,CURL_SSLVERSION_LAST = 0x4,};
struct _5B2C4A92108463040FBECE1079B5BB63 {char *next_in;unsigned int avail_in;unsigned int total_in_lo32;unsigned int total_in_hi32;char *next_out;unsigned int avail_out;unsigned int total_out_lo32;unsigned int total_out_hi32;void *state;void *(*bzalloc)(void *, int, int);void (*bzfree)(void *, void *);void *opaque;};
enum _5BB59419A030D6A179F24FB1144C5140 {CURLFTPMETHOD_DEFAULT = 0x0,CURLFTPMETHOD_MULTICWD = 0x1,CURLFTPMETHOD_NOCWD = 0x2,CURLFTPMETHOD_SINGLECWD = 0x3,CURLFTPMETHOD_LAST = 0x4,};
enum _5BB96409C7C381A52DD11FDA0AE1E04F {CURLINFO_NONE = 0x0,CURLINFO_EFFECTIVE_URL = 0x100001,CURLINFO_RESPONSE_CODE = 0x200002,CURLINFO_TOTAL_TIME = 0x300003,CURLINFO_NAMELOOKUP_TIME = 0x300004,CURLINFO_CONNECT_TIME = 0x300005,CURLINFO_PRETRANSFER_TIME = 0x300006,CURLINFO_SIZE_UPLOAD = 0x300007,CURLINFO_SIZE_DOWNLOAD = 0x300008,CURLINFO_SPEED_DOWNLOAD = 0x300009,CURLINFO_SPEED_UPLOAD = 0x30000A,CURLINFO_HEADER_SIZE = 0x20000B,CURLINFO_REQUEST_SIZE = 0x20000C,CURLINFO_SSL_VERIFYRESULT = 0x20000D,CURLINFO_FILETIME = 0x20000E,CURLINFO_CONTENT_LENGTH_DOWNLOAD = 0x30000F,CURLINFO_CONTENT_LENGTH_UPLOAD = 0x300010,CURLINFO_STARTTRANSFER_TIME = 0x300011,CURLINFO_CONTENT_TYPE = 0x100012,CURLINFO_REDIRECT_TIME = 0x300013,CURLINFO_REDIRECT_COUNT = 0x200014,CURLINFO_PRIVATE = 0x100015,CURLINFO_HTTP_CONNECTCODE = 0x200016,CURLINFO_HTTPAUTH_AVAIL = 0x200017,CURLINFO_PROXYAUTH_AVAIL = 0x200018,CURLINFO_OS_ERRNO = 0x200019,CURLINFO_NUM_CONNECTS = 0x20001A,CURLINFO_SSL_ENGINES = 0x40001B,CURLINFO_COOKIELIST = 0x40001C,CURLINFO_LASTSOCKET = 0x20001D,CURLINFO_FTP_ENTRY_PATH = 0x10001E,CURLINFO_REDIRECT_URL = 0x10001F,CURLINFO_PRIMARY_IP = 0x100020,CURLINFO_APPCONNECT_TIME = 0x300021,CURLINFO_CERTINFO = 0x400022,CURLINFO_CONDITION_UNMET = 0x200023,CURLINFO_RTSP_SESSION_ID = 0x100024,CURLINFO_RTSP_CLIENT_CSEQ = 0x200025,CURLINFO_RTSP_SERVER_CSEQ = 0x200026,CURLINFO_RTSP_CSEQ_RECV = 0x200027,CURLINFO_PRIMARY_PORT = 0x200028,CURLINFO_LOCAL_IP = 0x100029,CURLINFO_LOCAL_PORT = 0x20002A,CURLINFO_LASTONE = 0x2A,};
enum _5BC5AC313FBD748556525804BA480EF5 {CURLFTPSSL_CCC_NONE = 0x0,CURLFTPSSL_CCC_PASSIVE = 0x1,CURLFTPSSL_CCC_ACTIVE = 0x2,CURLFTPSSL_CCC_LAST = 0x3,};
struct _5CF04B6421DF2D20D24DDD28F16D3C2A { char *name;void *address;};
struct _5F22111B9AD44DFDC2D7C3E3FA7C1FF6 {char *psdn_address;};
enum _5FCD074AE9B9B407C11FF612FA90423F {BLOCK_DEALLOCATING = 0x1,BLOCK_REFCOUNT_MASK = 0xFFFE,BLOCK_NEEDS_FREE = 0x1000000,BLOCK_HAS_COPY_DISPOSE = 0x2000000,BLOCK_HAS_CTOR = 0x4000000,BLOCK_IS_GC = 0x8000000,BLOCK_IS_GLOBAL = 0x10000000,BLOCK_USE_STRET = 0x20000000,BLOCK_HAS_SIGNATURE = 0x40000000,BLOCK_HAS_EXTENDED_LAYOUT = 0x80000000,};
struct _615D5DC9703294F0ED919D7F4D86FFE9 {int datagram_pkts_sent;int datagram_pkts_rcvd;int srr_requests_sent;int srr_bcasts_sent;int srr_requests_rcvd;int srr_bcasts_rcvd;int srr_replies_sent;int srr_replies_rcvd;int srr_retries_sent;int srr_retries_rcvd;int srr_cfailures_sent;int srr_cfailures_rcvd;int deltat_dpkts_sent;int deltat_acks_rcvd;int deltat_dpkts_rcvd;int deltat_acks_sent;int deltat_oldpkts_rcvd;int deltat_oospkts_rcvd;int deltat_retries_sent;int deltat_retries_rcvd;int deltat_cfailures_sent;int deltat_cfailures_rcvd;int deltat_aborts_sent;int deltat_aborts_rcvd;int vmtp_requests_sent;int vmtp_requests_rcvd;int vmtp_replies_sent;int vmtp_replies_rcvd;int ipc_in_messages;int ipc_out_messages;int ipc_unblocks_sent;int ipc_unblocks_rcvd;int pc_requests_sent;int pc_requests_rcvd;int pc_replies_rcvd;int pc_startups_rcvd;int nn_requests_sent;int nn_requests_rcvd;int nn_replies_rcvd;int po_ro_hints_sent;int po_ro_hints_rcvd;int po_token_requests_sent;int po_token_requests_rcvd;int po_token_replies_rcvd;int po_xfer_requests_sent;int po_xfer_requests_rcvd;int po_xfer_replies_rcvd;int po_deaths_sent;int po_deaths_rcvd;int ps_requests_sent;int ps_requests_rcvd;int ps_replies_rcvd;int ps_auth_requests_sent;int ps_auth_requests_rcvd;int ps_auth_replies_rcvd;int mallocs_or_vm_allocates;int mem_allocs;int mem_deallocs;int mem_allocobjs;int mem_deallocobjs;int pkts_encrypted;int pkts_decrypted;int vmtp_segs_encrypted;int vmtp_segs_decrypted;int tcp_requests_sent;int tcp_replies_sent;int tcp_requests_rcvd;int tcp_replies_rcvd;int tcp_send;int tcp_recv;int tcp_connect;int tcp_accept;int tcp_close;};
enum _61FDFA1F505666F1AE44654F634BAE72 {kDNSServiceClass_IN = 0x1,};
struct _648B167E5FE8430EFE8E72D1CD79C82D {short pmin;short pmax;short smin;short smax;};
enum _65EE5B278A6A516D307828565C93733B {no = 0x0,yes = 0x1,};
enum _696096D9A1236276F280ED3B7625D32B {NFNON = 0x0,NFREG = 0x1,NFDIR = 0x2,NFBLK = 0x3,NFCHR = 0x4,NFLNK = 0x5,NFSOCK = 0x6,NFFIFO = 0x7,NFATTRDIR = 0x8,NFNAMEDATTR = 0x9,};
enum _696BC85C9266121A3094CE9AE91C2C01 {FACTORY_NOERROR = 0x0,FACTORY_EXISTS = 0x1,FACTORY_NOTFOUND = 0x2,FACTORY_NOMEMORY = 0x3,FACTORY_GENERR = 0x4,FACTORY_MAXIMUM_ERROR = 0x5,};
enum _6B111C5B4079F64069FB7C2797D9CE8F {vncontrol_readwrite_io_e = 0x0,};
enum _6B91EF07066D7C63AE6C8DC2E4246264 {kDNSServiceProtocol_IPv4 = 0x1,kDNSServiceProtocol_IPv6 = 0x2,kDNSServiceProtocol_UDP = 0x10,kDNSServiceProtocol_TCP = 0x20,};
enum _6BF03EB572F80D0BDF28C7CB21479A3D {CURL_TIMECOND_NONE = 0x0,CURL_TIMECOND_IFMODSINCE = 0x1,CURL_TIMECOND_IFUNMODSINCE = 0x2,CURL_TIMECOND_LASTMOD = 0x3,CURL_TIMECOND_LAST = 0x4,};
enum _6C3D1F16C57240F500269E6CB726B57E {XML_FROM_NONE = 0x0,XML_FROM_PARSER = 0x1,XML_FROM_TREE = 0x2,XML_FROM_NAMESPACE = 0x3,XML_FROM_DTD = 0x4,XML_FROM_HTML = 0x5,XML_FROM_MEMORY = 0x6,XML_FROM_OUTPUT = 0x7,XML_FROM_IO = 0x8,XML_FROM_FTP = 0x9,XML_FROM_HTTP = 0xA,XML_FROM_XINCLUDE = 0xB,XML_FROM_XPATH = 0xC,XML_FROM_XPOINTER = 0xD,XML_FROM_REGEXP = 0xE,XML_FROM_DATATYPE = 0xF,XML_FROM_SCHEMASP = 0x10,XML_FROM_SCHEMASV = 0x11,XML_FROM_RELAXNGP = 0x12,XML_FROM_RELAXNGV = 0x13,XML_FROM_CATALOG = 0x14,XML_FROM_C14N = 0x15,XML_FROM_XSLT = 0x16,XML_FROM_VALID = 0x17,XML_FROM_CHECK = 0x18,XML_FROM_WRITER = 0x19,XML_FROM_MODULE = 0x1A,XML_FROM_I18N = 0x1B,XML_FROM_SCHEMATRONV = 0x1C,};
enum _6D22B6C70995B3A898F6ED894F8956B2 {DNSServiceDiscoverReplyFlagsFinished = 0x0,DNSServiceDiscoverReplyFlagsMoreComing = 0x1,};
enum _6DB4FE1C454B55753CB1CF245ADB8A73 {XLINK_ACTUATE_NONE = 0x0,XLINK_ACTUATE_AUTO = 0x1,XLINK_ACTUATE_ONREQUEST = 0x2,};
enum _6FDCE26D5FA4D6DB475CE5F65FC8B575 {XPATH_EXPRESSION_OK = 0x0,XPATH_NUMBER_ERROR = 0x1,XPATH_UNFINISHED_LITERAL_ERROR = 0x2,XPATH_START_LITERAL_ERROR = 0x3,XPATH_VARIABLE_REF_ERROR = 0x4,XPATH_UNDEF_VARIABLE_ERROR = 0x5,XPATH_INVALID_PREDICATE_ERROR = 0x6,XPATH_EXPR_ERROR = 0x7,XPATH_UNCLOSED_ERROR = 0x8,XPATH_UNKNOWN_FUNC_ERROR = 0x9,XPATH_INVALID_OPERAND = 0xA,XPATH_INVALID_TYPE = 0xB,XPATH_INVALID_ARITY = 0xC,XPATH_INVALID_CTXT_SIZE = 0xD,XPATH_INVALID_CTXT_POSITION = 0xE,XPATH_MEMORY_ERROR = 0xF,XPTR_SYNTAX_ERROR = 0x10,XPTR_RESOURCE_ERROR = 0x11,XPTR_SUB_RESOURCE_ERROR = 0x12,XPATH_UNDEF_PREFIX_ERROR = 0x13,XPATH_ENCODING_ERROR = 0x14,XPATH_INVALID_CHAR_ERROR = 0x15,XPATH_INVALID_CTXT = 0x16,};
enum _72C7479B17D42DC9DFBAFDAD1641A379 {XML_MODULE_LAZY = 0x1,XML_MODULE_LOCAL = 0x2,};
enum _743EA981694C8951C7F0FF81288A5AAC {XML_WITH_THREAD = 0x1,XML_WITH_TREE = 0x2,XML_WITH_OUTPUT = 0x3,XML_WITH_PUSH = 0x4,XML_WITH_READER = 0x5,XML_WITH_PATTERN = 0x6,XML_WITH_WRITER = 0x7,XML_WITH_SAX1 = 0x8,XML_WITH_FTP = 0x9,XML_WITH_HTTP = 0xA,XML_WITH_VALID = 0xB,XML_WITH_HTML = 0xC,XML_WITH_LEGACY = 0xD,XML_WITH_C14N = 0xE,XML_WITH_CATALOG = 0xF,XML_WITH_XPATH = 0x10,XML_WITH_XPTR = 0x11,XML_WITH_XINCLUDE = 0x12,XML_WITH_ICONV = 0x13,XML_WITH_ISO8859X = 0x14,XML_WITH_UNICODE = 0x15,XML_WITH_REGEXP = 0x16,XML_WITH_AUTOMATA = 0x17,XML_WITH_EXPR = 0x18,XML_WITH_SCHEMAS = 0x19,XML_WITH_SCHEMATRON = 0x1A,XML_WITH_MODULES = 0x1B,XML_WITH_DEBUG = 0x1C,XML_WITH_DEBUG_MEM = 0x1D,XML_WITH_DEBUG_RUN = 0x1E,XML_WITH_ZLIB = 0x1F,XML_WITH_ICU = 0x20,XML_WITH_NONE = 0x1869F,};
enum _77C1F6ECCA22552EA6FDBBFC93F817BE {kHFSRootParentID = 0x1,kHFSRootFolderID = 0x2,kHFSExtentsFileID = 0x3,kHFSCatalogFileID = 0x4,kHFSBadBlockFileID = 0x5,kHFSAllocationFileID = 0x6,kHFSStartupFileID = 0x7,kHFSAttributesFileID = 0x8,kHFSAttributeDataFileID = 0xD,kHFSRepairCatalogFileID = 0xE,kHFSBogusExtentFileID = 0xF,kHFSFirstUserCatalogNodeID = 0x10,};
enum _77D6BC159AA5DA7BD67BECF2A12D0ED9 {XML_DOC_WELLFORMED = 0x1,XML_DOC_NSVALID = 0x2,XML_DOC_OLD10 = 0x4,XML_DOC_DTDVALID = 0x8,XML_DOC_XINCLUDE = 0x10,XML_DOC_USERBUILT = 0x20,XML_DOC_INTERNAL = 0x40,XML_DOC_HTML = 0x80,};
enum _7AE70D482D57B64FB9C9B10583B098AB {CURLCLOSEPOLICY_NONE = 0x0,CURLCLOSEPOLICY_OLDEST = 0x1,CURLCLOSEPOLICY_LEAST_RECENTLY_USED = 0x2,CURLCLOSEPOLICY_LEAST_TRAFFIC = 0x3,CURLCLOSEPOLICY_SLOWEST = 0x4,CURLCLOSEPOLICY_CALLBACK = 0x5,CURLCLOSEPOLICY_LAST = 0x6,};
enum _7B6D6F191C45FE8067F0BF66D1F2D24A {TidyNoState = 0x0,TidyYesState = 0x1,TidyAutoState = 0x2,};
enum _7BC844CA13F55C9D2AEAF3513FB7769B {TidyAttr_UNKNOWN = 0x0,TidyAttr_ABBR = 0x1,TidyAttr_ACCEPT = 0x2,TidyAttr_ACCEPT_CHARSET = 0x3,TidyAttr_ACCESSKEY = 0x4,TidyAttr_ACTION = 0x5,TidyAttr_ADD_DATE = 0x6,TidyAttr_ALIGN = 0x7,TidyAttr_ALINK = 0x8,TidyAttr_ALT = 0x9,TidyAttr_ARCHIVE = 0xA,TidyAttr_AXIS = 0xB,TidyAttr_BACKGROUND = 0xC,TidyAttr_BGCOLOR = 0xD,TidyAttr_BGPROPERTIES = 0xE,TidyAttr_BORDER = 0xF,TidyAttr_BORDERCOLOR = 0x10,TidyAttr_BOTTOMMARGIN = 0x11,TidyAttr_CELLPADDING = 0x12,TidyAttr_CELLSPACING = 0x13,TidyAttr_CHAR = 0x14,TidyAttr_CHAROFF = 0x15,TidyAttr_CHARSET = 0x16,TidyAttr_CHECKED = 0x17,TidyAttr_CITE = 0x18,TidyAttr_CLASS = 0x19,TidyAttr_CLASSID = 0x1A,TidyAttr_CLEAR = 0x1B,TidyAttr_CODE = 0x1C,TidyAttr_CODEBASE = 0x1D,TidyAttr_CODETYPE = 0x1E,TidyAttr_COLOR = 0x1F,TidyAttr_COLS = 0x20,TidyAttr_COLSPAN = 0x21,TidyAttr_COMPACT = 0x22,TidyAttr_CONTENT = 0x23,TidyAttr_COORDS = 0x24,TidyAttr_DATA = 0x25,TidyAttr_DATAFLD = 0x26,TidyAttr_DATAFORMATAS = 0x27,TidyAttr_DATAPAGESIZE = 0x28,TidyAttr_DATASRC = 0x29,TidyAttr_DATETIME = 0x2A,TidyAttr_DECLARE = 0x2B,TidyAttr_DEFER = 0x2C,TidyAttr_DIR = 0x2D,TidyAttr_DISABLED = 0x2E,TidyAttr_ENCODING = 0x2F,TidyAttr_ENCTYPE = 0x30,TidyAttr_FACE = 0x31,TidyAttr_FOR = 0x32,TidyAttr_FRAME = 0x33,TidyAttr_FRAMEBORDER = 0x34,TidyAttr_FRAMESPACING = 0x35,TidyAttr_GRIDX = 0x36,TidyAttr_GRIDY = 0x37,TidyAttr_HEADERS = 0x38,TidyAttr_HEIGHT = 0x39,TidyAttr_HREF = 0x3A,TidyAttr_HREFLANG = 0x3B,TidyAttr_HSPACE = 0x3C,TidyAttr_HTTP_EQUIV = 0x3D,TidyAttr_ID = 0x3E,TidyAttr_ISMAP = 0x3F,TidyAttr_LABEL = 0x40,TidyAttr_LANG = 0x41,TidyAttr_LANGUAGE = 0x42,TidyAttr_LAST_MODIFIED = 0x43,TidyAttr_LAST_VISIT = 0x44,TidyAttr_LEFTMARGIN = 0x45,TidyAttr_LINK = 0x46,TidyAttr_LONGDESC = 0x47,TidyAttr_LOWSRC = 0x48,TidyAttr_MARGINHEIGHT = 0x49,TidyAttr_MARGINWIDTH = 0x4A,TidyAttr_MAXLENGTH = 0x4B,TidyAttr_MEDIA = 0x4C,TidyAttr_METHOD = 0x4D,TidyAttr_MULTIPLE = 0x4E,TidyAttr_NAME = 0x4F,TidyAttr_NOHREF = 0x50,TidyAttr_NORESIZE = 0x51,TidyAttr_NOSHADE = 0x52,TidyAttr_NOWRAP = 0x53,TidyAttr_OBJECT = 0x54,TidyAttr_OnAFTERUPDATE = 0x55,TidyAttr_OnBEFOREUNLOAD = 0x56,TidyAttr_OnBEFOREUPDATE = 0x57,TidyAttr_OnBLUR = 0x58,TidyAttr_OnCHANGE = 0x59,TidyAttr_OnCLICK = 0x5A,TidyAttr_OnDATAAVAILABLE = 0x5B,TidyAttr_OnDATASETCHANGED = 0x5C,TidyAttr_OnDATASETCOMPLETE = 0x5D,TidyAttr_OnDBLCLICK = 0x5E,TidyAttr_OnERRORUPDATE = 0x5F,TidyAttr_OnFOCUS = 0x60,TidyAttr_OnKEYDOWN = 0x61,TidyAttr_OnKEYPRESS = 0x62,TidyAttr_OnKEYUP = 0x63,TidyAttr_OnLOAD = 0x64,TidyAttr_OnMOUSEDOWN = 0x65,TidyAttr_OnMOUSEMOVE = 0x66,TidyAttr_OnMOUSEOUT = 0x67,TidyAttr_OnMOUSEOVER = 0x68,TidyAttr_OnMOUSEUP = 0x69,TidyAttr_OnRESET = 0x6A,TidyAttr_OnROWENTER = 0x6B,TidyAttr_OnROWEXIT = 0x6C,TidyAttr_OnSELECT = 0x6D,TidyAttr_OnSUBMIT = 0x6E,TidyAttr_OnUNLOAD = 0x6F,TidyAttr_PROFILE = 0x70,TidyAttr_PROMPT = 0x71,TidyAttr_RBSPAN = 0x72,TidyAttr_READONLY = 0x73,TidyAttr_REL = 0x74,TidyAttr_REV = 0x75,TidyAttr_RIGHTMARGIN = 0x76,TidyAttr_ROWS = 0x77,TidyAttr_ROWSPAN = 0x78,TidyAttr_RULES = 0x79,TidyAttr_SCHEME = 0x7A,TidyAttr_SCOPE = 0x7B,TidyAttr_SCROLLING = 0x7C,TidyAttr_SELECTED = 0x7D,TidyAttr_SHAPE = 0x7E,TidyAttr_SHOWGRID = 0x7F,TidyAttr_SHOWGRIDX = 0x80,TidyAttr_SHOWGRIDY = 0x81,TidyAttr_SIZE = 0x82,TidyAttr_SPAN = 0x83,TidyAttr_SRC = 0x84,TidyAttr_STANDBY = 0x85,TidyAttr_START = 0x86,TidyAttr_STYLE = 0x87,TidyAttr_SUMMARY = 0x88,TidyAttr_TABINDEX = 0x89,TidyAttr_TARGET = 0x8A,TidyAttr_TEXT = 0x8B,TidyAttr_TITLE = 0x8C,TidyAttr_TOPMARGIN = 0x8D,TidyAttr_TYPE = 0x8E,TidyAttr_USEMAP = 0x8F,TidyAttr_VALIGN = 0x90,TidyAttr_VALUE = 0x91,TidyAttr_VALUETYPE = 0x92,TidyAttr_VERSION = 0x93,TidyAttr_VLINK = 0x94,TidyAttr_VSPACE = 0x95,TidyAttr_WIDTH = 0x96,TidyAttr_WRAP = 0x97,TidyAttr_XML_LANG = 0x98,TidyAttr_XML_SPACE = 0x99,TidyAttr_XMLNS = 0x9A,TidyAttr_EVENT = 0x9B,TidyAttr_METHODS = 0x9C,TidyAttr_N = 0x9D,TidyAttr_SDAFORM = 0x9E,TidyAttr_SDAPREF = 0x9F,TidyAttr_SDASUFF = 0xA0,TidyAttr_URN = 0xA1,N_TIDY_ATTRIBS = 0xA2,};
enum _7C7EBFB03B6B9DB8456CC748404AF258 {CURLFTPAUTH_DEFAULT = 0x0,CURLFTPAUTH_SSL = 0x1,CURLFTPAUTH_TLS = 0x2,CURLFTPAUTH_LAST = 0x3,};
enum _7DDEDB93E618741445B281E5280D8762 {XSLT_OUTPUT_XML = 0x0,XSLT_OUTPUT_HTML = 0x1,XSLT_OUTPUT_TEXT = 0x2,};
enum _80C78EA22186AB772B4BDEFF2BFDD204 {CURLM_CALL_MULTI_PERFORM = 0xFFFFFFFF,CURLM_OK = 0x0,CURLM_BAD_HANDLE = 0x1,CURLM_BAD_EASY_HANDLE = 0x2,CURLM_OUT_OF_MEMORY = 0x3,CURLM_INTERNAL_ERROR = 0x4,CURLM_BAD_SOCKET = 0x5,CURLM_UNKNOWN_OPTION = 0x6,CURLM_LAST = 0x7,};
enum _817EE464AA2F5FC31C63385F8A750782 {CURLSHOPT_NONE = 0x0,CURLSHOPT_SHARE = 0x1,CURLSHOPT_UNSHARE = 0x2,CURLSHOPT_LOCKFUNC = 0x3,CURLSHOPT_UNLOCKFUNC = 0x4,CURLSHOPT_USERDATA = 0x5,CURLSHOPT_LAST = 0x6,};
enum _81EAA969F6CC11E48BC03187F305DA8C {dbdTIC = 0x0,dbdLAST = 0x1,};
enum _84F121FDA2FE4096921DBCF7232175AD {XSLT_TRACE_ALL = 0xFFFFFFFF,XSLT_TRACE_NONE = 0x0,XSLT_TRACE_COPY_TEXT = 0x1,XSLT_TRACE_PROCESS_NODE = 0x2,XSLT_TRACE_APPLY_TEMPLATE = 0x4,XSLT_TRACE_COPY = 0x8,XSLT_TRACE_COMMENT = 0x10,XSLT_TRACE_PI = 0x20,XSLT_TRACE_COPY_OF = 0x40,XSLT_TRACE_VALUE_OF = 0x80,XSLT_TRACE_CALL_TEMPLATE = 0x100,XSLT_TRACE_APPLY_TEMPLATES = 0x200,XSLT_TRACE_CHOOSE = 0x400,XSLT_TRACE_IF = 0x800,XSLT_TRACE_FOR_EACH = 0x1000,XSLT_TRACE_STRIP_SPACES = 0x2000,XSLT_TRACE_TEMPLATES = 0x4000,XSLT_TRACE_KEYS = 0x8000,XSLT_TRACE_VARIABLES = 0x10000,};
enum _86944522B7C7082BFBF7A67C11C6FF4C {XSLT_SECPREF_READ_FILE = 0x1,XSLT_SECPREF_WRITE_FILE = 0x2,XSLT_SECPREF_CREATE_DIRECTORY = 0x3,XSLT_SECPREF_READ_NETWORK = 0x4,XSLT_SECPREF_WRITE_NETWORK = 0x5,};
enum _87AADCA8575A383F1076ADE10D123F6C {XML_PARSER_EOF = 0xFFFFFFFF,XML_PARSER_START = 0x0,XML_PARSER_MISC = 0x1,XML_PARSER_PI = 0x2,XML_PARSER_DTD = 0x3,XML_PARSER_PROLOG = 0x4,XML_PARSER_COMMENT = 0x5,XML_PARSER_START_TAG = 0x6,XML_PARSER_CONTENT = 0x7,XML_PARSER_CDATA_SECTION = 0x8,XML_PARSER_END_TAG = 0x9,XML_PARSER_ENTITY_DECL = 0xA,XML_PARSER_ENTITY_VALUE = 0xB,XML_PARSER_ATTRIBUTE_VALUE = 0xC,XML_PARSER_SYSTEM_LITERAL = 0xD,XML_PARSER_EPILOG = 0xE,XML_PARSER_IGNORE = 0xF,XML_PARSER_PUBLIC_LITERAL = 0x10,};
enum _891529C55A3D7F6C466AE0BA608A35EA {P_ALL = 0x0,P_PID = 0x1,P_PGID = 0x2,};
enum _895EE9033D6821791DEBC30787A9414E {BLOCK_FIELD_IS_OBJECT = 0x3,BLOCK_FIELD_IS_BLOCK = 0x7,BLOCK_FIELD_IS_BYREF = 0x8,BLOCK_FIELD_IS_WEAK = 0x10,BLOCK_BYREF_CALLER = 0x80,};
enum _8AF341AFB349B0F3EC8B21B2C315FEF7 {TidyUnknownOption = 0x0,TidyIndentSpaces = 0x1,TidyWrapLen = 0x2,TidyTabSize = 0x3,TidyCharEncoding = 0x4,TidyInCharEncoding = 0x5,TidyOutCharEncoding = 0x6,TidyNewline = 0x7,TidyDoctypeMode = 0x8,TidyDoctype = 0x9,TidyDuplicateAttrs = 0xA,TidyAltText = 0xB,TidySlideStyle = 0xC,TidyErrFile = 0xD,TidyOutFile = 0xE,TidyWriteBack = 0xF,TidyShowMarkup = 0x10,TidyShowWarnings = 0x11,TidyQuiet = 0x12,TidyIndentContent = 0x13,TidyHideEndTags = 0x14,TidyXmlTags = 0x15,TidyXmlOut = 0x16,TidyXhtmlOut = 0x17,TidyHtmlOut = 0x18,TidyXmlDecl = 0x19,TidyUpperCaseTags = 0x1A,TidyUpperCaseAttrs = 0x1B,TidyMakeBare = 0x1C,TidyMakeClean = 0x1D,TidyLogicalEmphasis = 0x1E,TidyDropPropAttrs = 0x1F,TidyDropFontTags = 0x20,TidyDropEmptyParas = 0x21,TidyFixComments = 0x22,TidyBreakBeforeBR = 0x23,TidyBurstSlides = 0x24,TidyNumEntities = 0x25,TidyQuoteMarks = 0x26,TidyQuoteNbsp = 0x27,TidyQuoteAmpersand = 0x28,TidyWrapAttVals = 0x29,TidyWrapScriptlets = 0x2A,TidyWrapSection = 0x2B,TidyWrapAsp = 0x2C,TidyWrapJste = 0x2D,TidyWrapPhp = 0x2E,TidyFixBackslash = 0x2F,TidyIndentAttributes = 0x30,TidyXmlPIs = 0x31,TidyXmlSpace = 0x32,TidyEncloseBodyText = 0x33,TidyEncloseBlockText = 0x34,TidyKeepFileTimes = 0x35,TidyWord2000 = 0x36,TidyMark = 0x37,TidyEmacs = 0x38,TidyEmacsFile = 0x39,TidyLiteralAttribs = 0x3A,TidyBodyOnly = 0x3B,TidyFixUri = 0x3C,TidyLowerLiterals = 0x3D,TidyHideComments = 0x3E,TidyIndentCdata = 0x3F,TidyForceOutput = 0x40,TidyShowErrors = 0x41,TidyAsciiChars = 0x42,TidyJoinClasses = 0x43,TidyJoinStyles = 0x44,TidyEscapeCdata = 0x45,TidyLanguage = 0x46,TidyNCR = 0x47,TidyOutputBOM = 0x48,TidyReplaceColor = 0x49,TidyCSSPrefix = 0x4A,TidyInlineTags = 0x4B,TidyBlockTags = 0x4C,TidyEmptyTags = 0x4D,TidyPreTags = 0x4E,TidyAccessibilityCheckLevel = 0x4F,TidyVertSpace = 0x50,TidyPunctWrap = 0x51,TidyMergeDivs = 0x52,TidyDecorateInferredUL = 0x53,TidyRelativePathBaseUri = 0x54,TidyAbsolutePathBaseUri = 0x55,TidyDropClassesWithPrefix = 0x56,TidyDropIdsWithPrefix = 0x57,TidySanitizeAgainstXSS = 0x58,N_TIDY_OPTIONS = 0x59,};
enum _8BA7C419D374795706E7AF80CA235D6C {XML_ATTRIBUTE_NONE = 0x1,XML_ATTRIBUTE_REQUIRED = 0x2,XML_ATTRIBUTE_IMPLIED = 0x3,XML_ATTRIBUTE_FIXED = 0x4,};
enum _8C351220F954B531CED471BF1232BFD8 {TidyInfo = 0x0,TidyWarning = 0x1,TidyConfig = 0x2,TidyAccess = 0x3,TidyError = 0x4,TidyBadDocument = 0x5,TidyFatal = 0x6,};
enum _8C79ED20FC2D021B4CE653A1AD218746 {kHFSCaseFolding = 0xCF,kHFSBinaryCompare = 0xBC,};
enum _8D0F94C86775DD2813ADC12AE093783F {XML_SCHEMAS_ERR_OK = 0x0,XML_SCHEMAS_ERR_NOROOT = 0x1,XML_SCHEMAS_ERR_UNDECLAREDELEM = 0x2,XML_SCHEMAS_ERR_NOTTOPLEVEL = 0x3,XML_SCHEMAS_ERR_MISSING = 0x4,XML_SCHEMAS_ERR_WRONGELEM = 0x5,XML_SCHEMAS_ERR_NOTYPE = 0x6,XML_SCHEMAS_ERR_NOROLLBACK = 0x7,XML_SCHEMAS_ERR_ISABSTRACT = 0x8,XML_SCHEMAS_ERR_NOTEMPTY = 0x9,XML_SCHEMAS_ERR_ELEMCONT = 0xA,XML_SCHEMAS_ERR_HAVEDEFAULT = 0xB,XML_SCHEMAS_ERR_NOTNILLABLE = 0xC,XML_SCHEMAS_ERR_EXTRACONTENT = 0xD,XML_SCHEMAS_ERR_INVALIDATTR = 0xE,XML_SCHEMAS_ERR_INVALIDELEM = 0xF,XML_SCHEMAS_ERR_NOTDETERMINIST = 0x10,XML_SCHEMAS_ERR_CONSTRUCT = 0x11,XML_SCHEMAS_ERR_INTERNAL = 0x12,XML_SCHEMAS_ERR_NOTSIMPLE = 0x13,XML_SCHEMAS_ERR_ATTRUNKNOWN = 0x14,XML_SCHEMAS_ERR_ATTRINVALID = 0x15,XML_SCHEMAS_ERR_VALUE = 0x16,XML_SCHEMAS_ERR_FACET = 0x17,XML_SCHEMAS_ERR_ = 0x18,XML_SCHEMAS_ERR_XXX = 0x19,};
enum _8D9F9A8BB1D8AD61C3ACB6F7B056472F {UNW_X86_64_RAX = 0x0,UNW_X86_64_RDX = 0x1,UNW_X86_64_RCX = 0x2,UNW_X86_64_RBX = 0x3,UNW_X86_64_RSI = 0x4,UNW_X86_64_RDI = 0x5,UNW_X86_64_RBP = 0x6,UNW_X86_64_RSP = 0x7,UNW_X86_64_R8 = 0x8,UNW_X86_64_R9 = 0x9,UNW_X86_64_R10 = 0xA,UNW_X86_64_R11 = 0xB,UNW_X86_64_R12 = 0xC,UNW_X86_64_R13 = 0xD,UNW_X86_64_R14 = 0xE,UNW_X86_64_R15 = 0xF,};
enum _8E022E9E7FCF037C3464A135AB33BF4A {UNW_PPC_R0 = 0x0,UNW_PPC_R1 = 0x1,UNW_PPC_R2 = 0x2,UNW_PPC_R3 = 0x3,UNW_PPC_R4 = 0x4,UNW_PPC_R5 = 0x5,UNW_PPC_R6 = 0x6,UNW_PPC_R7 = 0x7,UNW_PPC_R8 = 0x8,UNW_PPC_R9 = 0x9,UNW_PPC_R10 = 0xA,UNW_PPC_R11 = 0xB,UNW_PPC_R12 = 0xC,UNW_PPC_R13 = 0xD,UNW_PPC_R14 = 0xE,UNW_PPC_R15 = 0xF,UNW_PPC_R16 = 0x10,UNW_PPC_R17 = 0x11,UNW_PPC_R18 = 0x12,UNW_PPC_R19 = 0x13,UNW_PPC_R20 = 0x14,UNW_PPC_R21 = 0x15,UNW_PPC_R22 = 0x16,UNW_PPC_R23 = 0x17,UNW_PPC_R24 = 0x18,UNW_PPC_R25 = 0x19,UNW_PPC_R26 = 0x1A,UNW_PPC_R27 = 0x1B,UNW_PPC_R28 = 0x1C,UNW_PPC_R29 = 0x1D,UNW_PPC_R30 = 0x1E,UNW_PPC_R31 = 0x1F,UNW_PPC_F0 = 0x20,UNW_PPC_F1 = 0x21,UNW_PPC_F2 = 0x22,UNW_PPC_F3 = 0x23,UNW_PPC_F4 = 0x24,UNW_PPC_F5 = 0x25,UNW_PPC_F6 = 0x26,UNW_PPC_F7 = 0x27,UNW_PPC_F8 = 0x28,UNW_PPC_F9 = 0x29,UNW_PPC_F10 = 0x2A,UNW_PPC_F11 = 0x2B,UNW_PPC_F12 = 0x2C,UNW_PPC_F13 = 0x2D,UNW_PPC_F14 = 0x2E,UNW_PPC_F15 = 0x2F,UNW_PPC_F16 = 0x30,UNW_PPC_F17 = 0x31,UNW_PPC_F18 = 0x32,UNW_PPC_F19 = 0x33,UNW_PPC_F20 = 0x34,UNW_PPC_F21 = 0x35,UNW_PPC_F22 = 0x36,UNW_PPC_F23 = 0x37,UNW_PPC_F24 = 0x38,UNW_PPC_F25 = 0x39,UNW_PPC_F26 = 0x3A,UNW_PPC_F27 = 0x3B,UNW_PPC_F28 = 0x3C,UNW_PPC_F29 = 0x3D,UNW_PPC_F30 = 0x3E,UNW_PPC_F31 = 0x3F,UNW_PPC_MQ = 0x40,UNW_PPC_LR = 0x41,UNW_PPC_CTR = 0x42,UNW_PPC_AP = 0x43,UNW_PPC_CR0 = 0x44,UNW_PPC_CR1 = 0x45,UNW_PPC_CR2 = 0x46,UNW_PPC_CR3 = 0x47,UNW_PPC_CR4 = 0x48,UNW_PPC_CR5 = 0x49,UNW_PPC_CR6 = 0x4A,UNW_PPC_CR7 = 0x4B,UNW_PPC_XER = 0x4C,UNW_PPC_V0 = 0x4D,UNW_PPC_V1 = 0x4E,UNW_PPC_V2 = 0x4F,UNW_PPC_V3 = 0x50,UNW_PPC_V4 = 0x51,UNW_PPC_V5 = 0x52,UNW_PPC_V6 = 0x53,UNW_PPC_V7 = 0x54,UNW_PPC_V8 = 0x55,UNW_PPC_V9 = 0x56,UNW_PPC_V10 = 0x57,UNW_PPC_V11 = 0x58,UNW_PPC_V12 = 0x59,UNW_PPC_V13 = 0x5A,UNW_PPC_V14 = 0x5B,UNW_PPC_V15 = 0x5C,UNW_PPC_V16 = 0x5D,UNW_PPC_V17 = 0x5E,UNW_PPC_V18 = 0x5F,UNW_PPC_V19 = 0x60,UNW_PPC_V20 = 0x61,UNW_PPC_V21 = 0x62,UNW_PPC_V22 = 0x63,UNW_PPC_V23 = 0x64,UNW_PPC_V24 = 0x65,UNW_PPC_V25 = 0x66,UNW_PPC_V26 = 0x67,UNW_PPC_V27 = 0x68,UNW_PPC_V28 = 0x69,UNW_PPC_V29 = 0x6A,UNW_PPC_V30 = 0x6B,UNW_PPC_V31 = 0x6C,UNW_PPC_VRSAVE = 0x6D,UNW_PPC_VSCR = 0x6E,UNW_PPC_SPE_ACC = 0x6F,UNW_PPC_SPEFSCR = 0x70,};
enum _8E6D3DD4E935220D4F923E1EC10C4FEC {CURL_LOCK_ACCESS_NONE = 0x0,CURL_LOCK_ACCESS_SHARED = 0x1,CURL_LOCK_ACCESS_SINGLE = 0x2,CURL_LOCK_ACCESS_LAST = 0x3,};
enum _8F171625CA50F19FB0BDE4B67F774BC9 {CURL_RTSPREQ_NONE = 0x0,CURL_RTSPREQ_OPTIONS = 0x1,CURL_RTSPREQ_DESCRIBE = 0x2,CURL_RTSPREQ_ANNOUNCE = 0x3,CURL_RTSPREQ_SETUP = 0x4,CURL_RTSPREQ_PLAY = 0x5,CURL_RTSPREQ_PAUSE = 0x6,CURL_RTSPREQ_TEARDOWN = 0x7,CURL_RTSPREQ_GET_PARAMETER = 0x8,CURL_RTSPREQ_SET_PARAMETER = 0x9,CURL_RTSPREQ_RECORD = 0xA,CURL_RTSPREQ_RECEIVE = 0xB,CURL_RTSPREQ_LAST = 0xC,};
struct _9196AF323BDCF3C1DC54CF7CF3A0084E {unsigned char g_guid[16];};
enum _934315CA77800E2DB42B327F9601CA42 {XSLT_STATE_OK = 0x0,XSLT_STATE_ERROR = 0x1,XSLT_STATE_STOPPED = 0x2,};
enum _955A79D8B36BA02C2AC93EA67E94FC4E {dot3ChipSetNational8390 = 0x1,dot3ChipSetNationalSonic = 0x2,};
enum _97920DDAD3C80055B2939F984919E3D2 {ACL_FIRST_ENTRY = 0x0,ACL_NEXT_ENTRY = 0xFFFFFFFF,ACL_LAST_ENTRY = 0xFFFFFFFE,};
struct _979FA3DE6ECCF956231BFC297C4278E6 {int quot;int rem;};
enum _98923156B44D8D77A256CDD67243A530 {XML_ERR_OK = 0x0,XML_ERR_INTERNAL_ERROR = 0x1,XML_ERR_NO_MEMORY = 0x2,XML_ERR_DOCUMENT_START = 0x3,XML_ERR_DOCUMENT_EMPTY = 0x4,XML_ERR_DOCUMENT_END = 0x5,XML_ERR_INVALID_HEX_CHARREF = 0x6,XML_ERR_INVALID_DEC_CHARREF = 0x7,XML_ERR_INVALID_CHARREF = 0x8,XML_ERR_INVALID_CHAR = 0x9,XML_ERR_CHARREF_AT_EOF = 0xA,XML_ERR_CHARREF_IN_PROLOG = 0xB,XML_ERR_CHARREF_IN_EPILOG = 0xC,XML_ERR_CHARREF_IN_DTD = 0xD,XML_ERR_ENTITYREF_AT_EOF = 0xE,XML_ERR_ENTITYREF_IN_PROLOG = 0xF,XML_ERR_ENTITYREF_IN_EPILOG = 0x10,XML_ERR_ENTITYREF_IN_DTD = 0x11,XML_ERR_PEREF_AT_EOF = 0x12,XML_ERR_PEREF_IN_PROLOG = 0x13,XML_ERR_PEREF_IN_EPILOG = 0x14,XML_ERR_PEREF_IN_INT_SUBSET = 0x15,XML_ERR_ENTITYREF_NO_NAME = 0x16,XML_ERR_ENTITYREF_SEMICOL_MISSING = 0x17,XML_ERR_PEREF_NO_NAME = 0x18,XML_ERR_PEREF_SEMICOL_MISSING = 0x19,XML_ERR_UNDECLARED_ENTITY = 0x1A,XML_WAR_UNDECLARED_ENTITY = 0x1B,XML_ERR_UNPARSED_ENTITY = 0x1C,XML_ERR_ENTITY_IS_EXTERNAL = 0x1D,XML_ERR_ENTITY_IS_PARAMETER = 0x1E,XML_ERR_UNKNOWN_ENCODING = 0x1F,XML_ERR_UNSUPPORTED_ENCODING = 0x20,XML_ERR_STRING_NOT_STARTED = 0x21,XML_ERR_STRING_NOT_CLOSED = 0x22,XML_ERR_NS_DECL_ERROR = 0x23,XML_ERR_ENTITY_NOT_STARTED = 0x24,XML_ERR_ENTITY_NOT_FINISHED = 0x25,XML_ERR_LT_IN_ATTRIBUTE = 0x26,XML_ERR_ATTRIBUTE_NOT_STARTED = 0x27,XML_ERR_ATTRIBUTE_NOT_FINISHED = 0x28,XML_ERR_ATTRIBUTE_WITHOUT_VALUE = 0x29,XML_ERR_ATTRIBUTE_REDEFINED = 0x2A,XML_ERR_LITERAL_NOT_STARTED = 0x2B,XML_ERR_LITERAL_NOT_FINISHED = 0x2C,XML_ERR_COMMENT_NOT_FINISHED = 0x2D,XML_ERR_PI_NOT_STARTED = 0x2E,XML_ERR_PI_NOT_FINISHED = 0x2F,XML_ERR_NOTATION_NOT_STARTED = 0x30,XML_ERR_NOTATION_NOT_FINISHED = 0x31,XML_ERR_ATTLIST_NOT_STARTED = 0x32,XML_ERR_ATTLIST_NOT_FINISHED = 0x33,XML_ERR_MIXED_NOT_STARTED = 0x34,XML_ERR_MIXED_NOT_FINISHED = 0x35,XML_ERR_ELEMCONTENT_NOT_STARTED = 0x36,XML_ERR_ELEMCONTENT_NOT_FINISHED = 0x37,XML_ERR_XMLDECL_NOT_STARTED = 0x38,XML_ERR_XMLDECL_NOT_FINISHED = 0x39,XML_ERR_CONDSEC_NOT_STARTED = 0x3A,XML_ERR_CONDSEC_NOT_FINISHED = 0x3B,XML_ERR_EXT_SUBSET_NOT_FINISHED = 0x3C,XML_ERR_DOCTYPE_NOT_FINISHED = 0x3D,XML_ERR_MISPLACED_CDATA_END = 0x3E,XML_ERR_CDATA_NOT_FINISHED = 0x3F,XML_ERR_RESERVED_XML_NAME = 0x40,XML_ERR_SPACE_REQUIRED = 0x41,XML_ERR_SEPARATOR_REQUIRED = 0x42,XML_ERR_NMTOKEN_REQUIRED = 0x43,XML_ERR_NAME_REQUIRED = 0x44,XML_ERR_PCDATA_REQUIRED = 0x45,XML_ERR_URI_REQUIRED = 0x46,XML_ERR_PUBID_REQUIRED = 0x47,XML_ERR_LT_REQUIRED = 0x48,XML_ERR_GT_REQUIRED = 0x49,XML_ERR_LTSLASH_REQUIRED = 0x4A,XML_ERR_EQUAL_REQUIRED = 0x4B,XML_ERR_TAG_NAME_MISMATCH = 0x4C,XML_ERR_TAG_NOT_FINISHED = 0x4D,XML_ERR_STANDALONE_VALUE = 0x4E,XML_ERR_ENCODING_NAME = 0x4F,XML_ERR_HYPHEN_IN_COMMENT = 0x50,XML_ERR_INVALID_ENCODING = 0x51,XML_ERR_EXT_ENTITY_STANDALONE = 0x52,XML_ERR_CONDSEC_INVALID = 0x53,XML_ERR_VALUE_REQUIRED = 0x54,XML_ERR_NOT_WELL_BALANCED = 0x55,XML_ERR_EXTRA_CONTENT = 0x56,XML_ERR_ENTITY_CHAR_ERROR = 0x57,XML_ERR_ENTITY_PE_INTERNAL = 0x58,XML_ERR_ENTITY_LOOP = 0x59,XML_ERR_ENTITY_BOUNDARY = 0x5A,XML_ERR_INVALID_URI = 0x5B,XML_ERR_URI_FRAGMENT = 0x5C,XML_WAR_CATALOG_PI = 0x5D,XML_ERR_NO_DTD = 0x5E,XML_ERR_CONDSEC_INVALID_KEYWORD = 0x5F,XML_ERR_VERSION_MISSING = 0x60,XML_WAR_UNKNOWN_VERSION = 0x61,XML_WAR_LANG_VALUE = 0x62,XML_WAR_NS_URI = 0x63,XML_WAR_NS_URI_RELATIVE = 0x64,XML_ERR_MISSING_ENCODING = 0x65,XML_WAR_SPACE_VALUE = 0x66,XML_ERR_NOT_STANDALONE = 0x67,XML_ERR_ENTITY_PROCESSING = 0x68,XML_ERR_NOTATION_PROCESSING = 0x69,XML_WAR_NS_COLUMN = 0x6A,XML_WAR_ENTITY_REDEFINED = 0x6B,XML_ERR_UNKNOWN_VERSION = 0x6C,XML_ERR_VERSION_MISMATCH = 0x6D,XML_NS_ERR_XML_NAMESPACE = 0xC8,XML_NS_ERR_UNDEFINED_NAMESPACE = 0xC9,XML_NS_ERR_QNAME = 0xCA,XML_NS_ERR_ATTRIBUTE_REDEFINED = 0xCB,XML_NS_ERR_EMPTY = 0xCC,XML_NS_ERR_COLON = 0xCD,XML_DTD_ATTRIBUTE_DEFAULT = 0x1F4,XML_DTD_ATTRIBUTE_REDEFINED = 0x1F5,XML_DTD_ATTRIBUTE_VALUE = 0x1F6,XML_DTD_CONTENT_ERROR = 0x1F7,XML_DTD_CONTENT_MODEL = 0x1F8,XML_DTD_CONTENT_NOT_DETERMINIST = 0x1F9,XML_DTD_DIFFERENT_PREFIX = 0x1FA,XML_DTD_ELEM_DEFAULT_NAMESPACE = 0x1FB,XML_DTD_ELEM_NAMESPACE = 0x1FC,XML_DTD_ELEM_REDEFINED = 0x1FD,XML_DTD_EMPTY_NOTATION = 0x1FE,XML_DTD_ENTITY_TYPE = 0x1FF,XML_DTD_ID_FIXED = 0x200,XML_DTD_ID_REDEFINED = 0x201,XML_DTD_ID_SUBSET = 0x202,XML_DTD_INVALID_CHILD = 0x203,XML_DTD_INVALID_DEFAULT = 0x204,XML_DTD_LOAD_ERROR = 0x205,XML_DTD_MISSING_ATTRIBUTE = 0x206,XML_DTD_MIXED_CORRUPT = 0x207,XML_DTD_MULTIPLE_ID = 0x208,XML_DTD_NO_DOC = 0x209,XML_DTD_NO_DTD = 0x20A,XML_DTD_NO_ELEM_NAME = 0x20B,XML_DTD_NO_PREFIX = 0x20C,XML_DTD_NO_ROOT = 0x20D,XML_DTD_NOTATION_REDEFINED = 0x20E,XML_DTD_NOTATION_VALUE = 0x20F,XML_DTD_NOT_EMPTY = 0x210,XML_DTD_NOT_PCDATA = 0x211,XML_DTD_NOT_STANDALONE = 0x212,XML_DTD_ROOT_NAME = 0x213,XML_DTD_STANDALONE_WHITE_SPACE = 0x214,XML_DTD_UNKNOWN_ATTRIBUTE = 0x215,XML_DTD_UNKNOWN_ELEM = 0x216,XML_DTD_UNKNOWN_ENTITY = 0x217,XML_DTD_UNKNOWN_ID = 0x218,XML_DTD_UNKNOWN_NOTATION = 0x219,XML_DTD_STANDALONE_DEFAULTED = 0x21A,XML_DTD_XMLID_VALUE = 0x21B,XML_DTD_XMLID_TYPE = 0x21C,XML_DTD_DUP_TOKEN = 0x21D,XML_HTML_STRUCURE_ERROR = 0x320,XML_HTML_UNKNOWN_TAG = 0x321,XML_RNGP_ANYNAME_ATTR_ANCESTOR = 0x3E8,XML_RNGP_ATTR_CONFLICT = 0x3E9,XML_RNGP_ATTRIBUTE_CHILDREN = 0x3EA,XML_RNGP_ATTRIBUTE_CONTENT = 0x3EB,XML_RNGP_ATTRIBUTE_EMPTY = 0x3EC,XML_RNGP_ATTRIBUTE_NOOP = 0x3ED,XML_RNGP_CHOICE_CONTENT = 0x3EE,XML_RNGP_CHOICE_EMPTY = 0x3EF,XML_RNGP_CREATE_FAILURE = 0x3F0,XML_RNGP_DATA_CONTENT = 0x3F1,XML_RNGP_DEF_CHOICE_AND_INTERLEAVE = 0x3F2,XML_RNGP_DEFINE_CREATE_FAILED = 0x3F3,XML_RNGP_DEFINE_EMPTY = 0x3F4,XML_RNGP_DEFINE_MISSING = 0x3F5,XML_RNGP_DEFINE_NAME_MISSING = 0x3F6,XML_RNGP_ELEM_CONTENT_EMPTY = 0x3F7,XML_RNGP_ELEM_CONTENT_ERROR = 0x3F8,XML_RNGP_ELEMENT_EMPTY = 0x3F9,XML_RNGP_ELEMENT_CONTENT = 0x3FA,XML_RNGP_ELEMENT_NAME = 0x3FB,XML_RNGP_ELEMENT_NO_CONTENT = 0x3FC,XML_RNGP_ELEM_TEXT_CONFLICT = 0x3FD,XML_RNGP_EMPTY = 0x3FE,XML_RNGP_EMPTY_CONSTRUCT = 0x3FF,XML_RNGP_EMPTY_CONTENT = 0x400,XML_RNGP_EMPTY_NOT_EMPTY = 0x401,XML_RNGP_ERROR_TYPE_LIB = 0x402,XML_RNGP_EXCEPT_EMPTY = 0x403,XML_RNGP_EXCEPT_MISSING = 0x404,XML_RNGP_EXCEPT_MULTIPLE = 0x405,XML_RNGP_EXCEPT_NO_CONTENT = 0x406,XML_RNGP_EXTERNALREF_EMTPY = 0x407,XML_RNGP_EXTERNAL_REF_FAILURE = 0x408,XML_RNGP_EXTERNALREF_RECURSE = 0x409,XML_RNGP_FORBIDDEN_ATTRIBUTE = 0x40A,XML_RNGP_FOREIGN_ELEMENT = 0x40B,XML_RNGP_GRAMMAR_CONTENT = 0x40C,XML_RNGP_GRAMMAR_EMPTY = 0x40D,XML_RNGP_GRAMMAR_MISSING = 0x40E,XML_RNGP_GRAMMAR_NO_START = 0x40F,XML_RNGP_GROUP_ATTR_CONFLICT = 0x410,XML_RNGP_HREF_ERROR = 0x411,XML_RNGP_INCLUDE_EMPTY = 0x412,XML_RNGP_INCLUDE_FAILURE = 0x413,XML_RNGP_INCLUDE_RECURSE = 0x414,XML_RNGP_INTERLEAVE_ADD = 0x415,XML_RNGP_INTERLEAVE_CREATE_FAILED = 0x416,XML_RNGP_INTERLEAVE_EMPTY = 0x417,XML_RNGP_INTERLEAVE_NO_CONTENT = 0x418,XML_RNGP_INVALID_DEFINE_NAME = 0x419,XML_RNGP_INVALID_URI = 0x41A,XML_RNGP_INVALID_VALUE = 0x41B,XML_RNGP_MISSING_HREF = 0x41C,XML_RNGP_NAME_MISSING = 0x41D,XML_RNGP_NEED_COMBINE = 0x41E,XML_RNGP_NOTALLOWED_NOT_EMPTY = 0x41F,XML_RNGP_NSNAME_ATTR_ANCESTOR = 0x420,XML_RNGP_NSNAME_NO_NS = 0x421,XML_RNGP_PARAM_FORBIDDEN = 0x422,XML_RNGP_PARAM_NAME_MISSING = 0x423,XML_RNGP_PARENTREF_CREATE_FAILED = 0x424,XML_RNGP_PARENTREF_NAME_INVALID = 0x425,XML_RNGP_PARENTREF_NO_NAME = 0x426,XML_RNGP_PARENTREF_NO_PARENT = 0x427,XML_RNGP_PARENTREF_NOT_EMPTY = 0x428,XML_RNGP_PARSE_ERROR = 0x429,XML_RNGP_PAT_ANYNAME_EXCEPT_ANYNAME = 0x42A,XML_RNGP_PAT_ATTR_ATTR = 0x42B,XML_RNGP_PAT_ATTR_ELEM = 0x42C,XML_RNGP_PAT_DATA_EXCEPT_ATTR = 0x42D,XML_RNGP_PAT_DATA_EXCEPT_ELEM = 0x42E,XML_RNGP_PAT_DATA_EXCEPT_EMPTY = 0x42F,XML_RNGP_PAT_DATA_EXCEPT_GROUP = 0x430,XML_RNGP_PAT_DATA_EXCEPT_INTERLEAVE = 0x431,XML_RNGP_PAT_DATA_EXCEPT_LIST = 0x432,XML_RNGP_PAT_DATA_EXCEPT_ONEMORE = 0x433,XML_RNGP_PAT_DATA_EXCEPT_REF = 0x434,XML_RNGP_PAT_DATA_EXCEPT_TEXT = 0x435,XML_RNGP_PAT_LIST_ATTR = 0x436,XML_RNGP_PAT_LIST_ELEM = 0x437,XML_RNGP_PAT_LIST_INTERLEAVE = 0x438,XML_RNGP_PAT_LIST_LIST = 0x439,XML_RNGP_PAT_LIST_REF = 0x43A,XML_RNGP_PAT_LIST_TEXT = 0x43B,XML_RNGP_PAT_NSNAME_EXCEPT_ANYNAME = 0x43C,XML_RNGP_PAT_NSNAME_EXCEPT_NSNAME = 0x43D,XML_RNGP_PAT_ONEMORE_GROUP_ATTR = 0x43E,XML_RNGP_PAT_ONEMORE_INTERLEAVE_ATTR = 0x43F,XML_RNGP_PAT_START_ATTR = 0x440,XML_RNGP_PAT_START_DATA = 0x441,XML_RNGP_PAT_START_EMPTY = 0x442,XML_RNGP_PAT_START_GROUP = 0x443,XML_RNGP_PAT_START_INTERLEAVE = 0x444,XML_RNGP_PAT_START_LIST = 0x445,XML_RNGP_PAT_START_ONEMORE = 0x446,XML_RNGP_PAT_START_TEXT = 0x447,XML_RNGP_PAT_START_VALUE = 0x448,XML_RNGP_PREFIX_UNDEFINED = 0x449,XML_RNGP_REF_CREATE_FAILED = 0x44A,XML_RNGP_REF_CYCLE = 0x44B,XML_RNGP_REF_NAME_INVALID = 0x44C,XML_RNGP_REF_NO_DEF = 0x44D,XML_RNGP_REF_NO_NAME = 0x44E,XML_RNGP_REF_NOT_EMPTY = 0x44F,XML_RNGP_START_CHOICE_AND_INTERLEAVE = 0x450,XML_RNGP_START_CONTENT = 0x451,XML_RNGP_START_EMPTY = 0x452,XML_RNGP_START_MISSING = 0x453,XML_RNGP_TEXT_EXPECTED = 0x454,XML_RNGP_TEXT_HAS_CHILD = 0x455,XML_RNGP_TYPE_MISSING = 0x456,XML_RNGP_TYPE_NOT_FOUND = 0x457,XML_RNGP_TYPE_VALUE = 0x458,XML_RNGP_UNKNOWN_ATTRIBUTE = 0x459,XML_RNGP_UNKNOWN_COMBINE = 0x45A,XML_RNGP_UNKNOWN_CONSTRUCT = 0x45B,XML_RNGP_UNKNOWN_TYPE_LIB = 0x45C,XML_RNGP_URI_FRAGMENT = 0x45D,XML_RNGP_URI_NOT_ABSOLUTE = 0x45E,XML_RNGP_VALUE_EMPTY = 0x45F,XML_RNGP_VALUE_NO_CONTENT = 0x460,XML_RNGP_XMLNS_NAME = 0x461,XML_RNGP_XML_NS = 0x462,XML_XPATH_EXPRESSION_OK = 0x4B0,XML_XPATH_NUMBER_ERROR = 0x4B1,XML_XPATH_UNFINISHED_LITERAL_ERROR = 0x4B2,XML_XPATH_START_LITERAL_ERROR = 0x4B3,XML_XPATH_VARIABLE_REF_ERROR = 0x4B4,XML_XPATH_UNDEF_VARIABLE_ERROR = 0x4B5,XML_XPATH_INVALID_PREDICATE_ERROR = 0x4B6,XML_XPATH_EXPR_ERROR = 0x4B7,XML_XPATH_UNCLOSED_ERROR = 0x4B8,XML_XPATH_UNKNOWN_FUNC_ERROR = 0x4B9,XML_XPATH_INVALID_OPERAND = 0x4BA,XML_XPATH_INVALID_TYPE = 0x4BB,XML_XPATH_INVALID_ARITY = 0x4BC,XML_XPATH_INVALID_CTXT_SIZE = 0x4BD,XML_XPATH_INVALID_CTXT_POSITION = 0x4BE,XML_XPATH_MEMORY_ERROR = 0x4BF,XML_XPTR_SYNTAX_ERROR = 0x4C0,XML_XPTR_RESOURCE_ERROR = 0x4C1,XML_XPTR_SUB_RESOURCE_ERROR = 0x4C2,XML_XPATH_UNDEF_PREFIX_ERROR = 0x4C3,XML_XPATH_ENCODING_ERROR = 0x4C4,XML_XPATH_INVALID_CHAR_ERROR = 0x4C5,XML_TREE_INVALID_HEX = 0x514,XML_TREE_INVALID_DEC = 0x515,XML_TREE_UNTERMINATED_ENTITY = 0x516,XML_TREE_NOT_UTF8 = 0x517,XML_SAVE_NOT_UTF8 = 0x578,XML_SAVE_CHAR_INVALID = 0x579,XML_SAVE_NO_DOCTYPE = 0x57A,XML_SAVE_UNKNOWN_ENCODING = 0x57B,XML_REGEXP_COMPILE_ERROR = 0x5AA,XML_IO_UNKNOWN = 0x5DC,XML_IO_EACCES = 0x5DD,XML_IO_EAGAIN = 0x5DE,XML_IO_EBADF = 0x5DF,XML_IO_EBADMSG = 0x5E0,XML_IO_EBUSY = 0x5E1,XML_IO_ECANCELED = 0x5E2,XML_IO_ECHILD = 0x5E3,XML_IO_EDEADLK = 0x5E4,XML_IO_EDOM = 0x5E5,XML_IO_EEXIST = 0x5E6,XML_IO_EFAULT = 0x5E7,XML_IO_EFBIG = 0x5E8,XML_IO_EINPROGRESS = 0x5E9,XML_IO_EINTR = 0x5EA,XML_IO_EINVAL = 0x5EB,XML_IO_EIO = 0x5EC,XML_IO_EISDIR = 0x5ED,XML_IO_EMFILE = 0x5EE,XML_IO_EMLINK = 0x5EF,XML_IO_EMSGSIZE = 0x5F0,XML_IO_ENAMETOOLONG = 0x5F1,XML_IO_ENFILE = 0x5F2,XML_IO_ENODEV = 0x5F3,XML_IO_ENOENT = 0x5F4,XML_IO_ENOEXEC = 0x5F5,XML_IO_ENOLCK = 0x5F6,XML_IO_ENOMEM = 0x5F7,XML_IO_ENOSPC = 0x5F8,XML_IO_ENOSYS = 0x5F9,XML_IO_ENOTDIR = 0x5FA,XML_IO_ENOTEMPTY = 0x5FB,XML_IO_ENOTSUP = 0x5FC,XML_IO_ENOTTY = 0x5FD,XML_IO_ENXIO = 0x5FE,XML_IO_EPERM = 0x5FF,XML_IO_EPIPE = 0x600,XML_IO_ERANGE = 0x601,XML_IO_EROFS = 0x602,XML_IO_ESPIPE = 0x603,XML_IO_ESRCH = 0x604,XML_IO_ETIMEDOUT = 0x605,XML_IO_EXDEV = 0x606,XML_IO_NETWORK_ATTEMPT = 0x607,XML_IO_ENCODER = 0x608,XML_IO_FLUSH = 0x609,XML_IO_WRITE = 0x60A,XML_IO_NO_INPUT = 0x60B,XML_IO_BUFFER_FULL = 0x60C,XML_IO_LOAD_ERROR = 0x60D,XML_IO_ENOTSOCK = 0x60E,XML_IO_EISCONN = 0x60F,XML_IO_ECONNREFUSED = 0x610,XML_IO_ENETUNREACH = 0x611,XML_IO_EADDRINUSE = 0x612,XML_IO_EALREADY = 0x613,XML_IO_EAFNOSUPPORT = 0x614,XML_XINCLUDE_RECURSION = 0x640,XML_XINCLUDE_PARSE_VALUE = 0x641,XML_XINCLUDE_ENTITY_DEF_MISMATCH = 0x642,XML_XINCLUDE_NO_HREF = 0x643,XML_XINCLUDE_NO_FALLBACK = 0x644,XML_XINCLUDE_HREF_URI = 0x645,XML_XINCLUDE_TEXT_FRAGMENT = 0x646,XML_XINCLUDE_TEXT_DOCUMENT = 0x647,XML_XINCLUDE_INVALID_CHAR = 0x648,XML_XINCLUDE_BUILD_FAILED = 0x649,XML_XINCLUDE_UNKNOWN_ENCODING = 0x64A,XML_XINCLUDE_MULTIPLE_ROOT = 0x64B,XML_XINCLUDE_XPTR_FAILED = 0x64C,XML_XINCLUDE_XPTR_RESULT = 0x64D,XML_XINCLUDE_INCLUDE_IN_INCLUDE = 0x64E,XML_XINCLUDE_FALLBACKS_IN_INCLUDE = 0x64F,XML_XINCLUDE_FALLBACK_NOT_IN_INCLUDE = 0x650,XML_XINCLUDE_DEPRECATED_NS = 0x651,XML_XINCLUDE_FRAGMENT_ID = 0x652,XML_CATALOG_MISSING_ATTR = 0x672,XML_CATALOG_ENTRY_BROKEN = 0x673,XML_CATALOG_PREFER_VALUE = 0x674,XML_CATALOG_NOT_CATALOG = 0x675,XML_CATALOG_RECURSION = 0x676,XML_SCHEMAP_PREFIX_UNDEFINED = 0x6A4,XML_SCHEMAP_ATTRFORMDEFAULT_VALUE = 0x6A5,XML_SCHEMAP_ATTRGRP_NONAME_NOREF = 0x6A6,XML_SCHEMAP_ATTR_NONAME_NOREF = 0x6A7,XML_SCHEMAP_COMPLEXTYPE_NONAME_NOREF = 0x6A8,XML_SCHEMAP_ELEMFORMDEFAULT_VALUE = 0x6A9,XML_SCHEMAP_ELEM_NONAME_NOREF = 0x6AA,XML_SCHEMAP_EXTENSION_NO_BASE = 0x6AB,XML_SCHEMAP_FACET_NO_VALUE = 0x6AC,XML_SCHEMAP_FAILED_BUILD_IMPORT = 0x6AD,XML_SCHEMAP_GROUP_NONAME_NOREF = 0x6AE,XML_SCHEMAP_IMPORT_NAMESPACE_NOT_URI = 0x6AF,XML_SCHEMAP_IMPORT_REDEFINE_NSNAME = 0x6B0,XML_SCHEMAP_IMPORT_SCHEMA_NOT_URI = 0x6B1,XML_SCHEMAP_INVALID_BOOLEAN = 0x6B2,XML_SCHEMAP_INVALID_ENUM = 0x6B3,XML_SCHEMAP_INVALID_FACET = 0x6B4,XML_SCHEMAP_INVALID_FACET_VALUE = 0x6B5,XML_SCHEMAP_INVALID_MAXOCCURS = 0x6B6,XML_SCHEMAP_INVALID_MINOCCURS = 0x6B7,XML_SCHEMAP_INVALID_REF_AND_SUBTYPE = 0x6B8,XML_SCHEMAP_INVALID_WHITE_SPACE = 0x6B9,XML_SCHEMAP_NOATTR_NOREF = 0x6BA,XML_SCHEMAP_NOTATION_NO_NAME = 0x6BB,XML_SCHEMAP_NOTYPE_NOREF = 0x6BC,XML_SCHEMAP_REF_AND_SUBTYPE = 0x6BD,XML_SCHEMAP_RESTRICTION_NONAME_NOREF = 0x6BE,XML_SCHEMAP_SIMPLETYPE_NONAME = 0x6BF,XML_SCHEMAP_TYPE_AND_SUBTYPE = 0x6C0,XML_SCHEMAP_UNKNOWN_ALL_CHILD = 0x6C1,XML_SCHEMAP_UNKNOWN_ANYATTRIBUTE_CHILD = 0x6C2,XML_SCHEMAP_UNKNOWN_ATTR_CHILD = 0x6C3,XML_SCHEMAP_UNKNOWN_ATTRGRP_CHILD = 0x6C4,XML_SCHEMAP_UNKNOWN_ATTRIBUTE_GROUP = 0x6C5,XML_SCHEMAP_UNKNOWN_BASE_TYPE = 0x6C6,XML_SCHEMAP_UNKNOWN_CHOICE_CHILD = 0x6C7,XML_SCHEMAP_UNKNOWN_COMPLEXCONTENT_CHILD = 0x6C8,XML_SCHEMAP_UNKNOWN_COMPLEXTYPE_CHILD = 0x6C9,XML_SCHEMAP_UNKNOWN_ELEM_CHILD = 0x6CA,XML_SCHEMAP_UNKNOWN_EXTENSION_CHILD = 0x6CB,XML_SCHEMAP_UNKNOWN_FACET_CHILD = 0x6CC,XML_SCHEMAP_UNKNOWN_FACET_TYPE = 0x6CD,XML_SCHEMAP_UNKNOWN_GROUP_CHILD = 0x6CE,XML_SCHEMAP_UNKNOWN_IMPORT_CHILD = 0x6CF,XML_SCHEMAP_UNKNOWN_LIST_CHILD = 0x6D0,XML_SCHEMAP_UNKNOWN_NOTATION_CHILD = 0x6D1,XML_SCHEMAP_UNKNOWN_PROCESSCONTENT_CHILD = 0x6D2,XML_SCHEMAP_UNKNOWN_REF = 0x6D3,XML_SCHEMAP_UNKNOWN_RESTRICTION_CHILD = 0x6D4,XML_SCHEMAP_UNKNOWN_SCHEMAS_CHILD = 0x6D5,XML_SCHEMAP_UNKNOWN_SEQUENCE_CHILD = 0x6D6,XML_SCHEMAP_UNKNOWN_SIMPLECONTENT_CHILD = 0x6D7,XML_SCHEMAP_UNKNOWN_SIMPLETYPE_CHILD = 0x6D8,XML_SCHEMAP_UNKNOWN_TYPE = 0x6D9,XML_SCHEMAP_UNKNOWN_UNION_CHILD = 0x6DA,XML_SCHEMAP_ELEM_DEFAULT_FIXED = 0x6DB,XML_SCHEMAP_REGEXP_INVALID = 0x6DC,XML_SCHEMAP_FAILED_LOAD = 0x6DD,XML_SCHEMAP_NOTHING_TO_PARSE = 0x6DE,XML_SCHEMAP_NOROOT = 0x6DF,XML_SCHEMAP_REDEFINED_GROUP = 0x6E0,XML_SCHEMAP_REDEFINED_TYPE = 0x6E1,XML_SCHEMAP_REDEFINED_ELEMENT = 0x6E2,XML_SCHEMAP_REDEFINED_ATTRGROUP = 0x6E3,XML_SCHEMAP_REDEFINED_ATTR = 0x6E4,XML_SCHEMAP_REDEFINED_NOTATION = 0x6E5,XML_SCHEMAP_FAILED_PARSE = 0x6E6,XML_SCHEMAP_UNKNOWN_PREFIX = 0x6E7,XML_SCHEMAP_DEF_AND_PREFIX = 0x6E8,XML_SCHEMAP_UNKNOWN_INCLUDE_CHILD = 0x6E9,XML_SCHEMAP_INCLUDE_SCHEMA_NOT_URI = 0x6EA,XML_SCHEMAP_INCLUDE_SCHEMA_NO_URI = 0x6EB,XML_SCHEMAP_NOT_SCHEMA = 0x6EC,XML_SCHEMAP_UNKNOWN_MEMBER_TYPE = 0x6ED,XML_SCHEMAP_INVALID_ATTR_USE = 0x6EE,XML_SCHEMAP_RECURSIVE = 0x6EF,XML_SCHEMAP_SUPERNUMEROUS_LIST_ITEM_TYPE = 0x6F0,XML_SCHEMAP_INVALID_ATTR_COMBINATION = 0x6F1,XML_SCHEMAP_INVALID_ATTR_INLINE_COMBINATION = 0x6F2,XML_SCHEMAP_MISSING_SIMPLETYPE_CHILD = 0x6F3,XML_SCHEMAP_INVALID_ATTR_NAME = 0x6F4,XML_SCHEMAP_REF_AND_CONTENT = 0x6F5,XML_SCHEMAP_CT_PROPS_CORRECT_1 = 0x6F6,XML_SCHEMAP_CT_PROPS_CORRECT_2 = 0x6F7,XML_SCHEMAP_CT_PROPS_CORRECT_3 = 0x6F8,XML_SCHEMAP_CT_PROPS_CORRECT_4 = 0x6F9,XML_SCHEMAP_CT_PROPS_CORRECT_5 = 0x6FA,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_1 = 0x6FB,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_1 = 0x6FC,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_2 = 0x6FD,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_2 = 0x6FE,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_3 = 0x6FF,XML_SCHEMAP_WILDCARD_INVALID_NS_MEMBER = 0x700,XML_SCHEMAP_INTERSECTION_NOT_EXPRESSIBLE = 0x701,XML_SCHEMAP_UNION_NOT_EXPRESSIBLE = 0x702,XML_SCHEMAP_SRC_IMPORT_3_1 = 0x703,XML_SCHEMAP_SRC_IMPORT_3_2 = 0x704,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_1 = 0x705,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_2 = 0x706,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_4_3 = 0x707,XML_SCHEMAP_COS_CT_EXTENDS_1_3 = 0x708,XML_SCHEMAV_NOROOT = 0x709,XML_SCHEMAV_UNDECLAREDELEM = 0x70A,XML_SCHEMAV_NOTTOPLEVEL = 0x70B,XML_SCHEMAV_MISSING = 0x70C,XML_SCHEMAV_WRONGELEM = 0x70D,XML_SCHEMAV_NOTYPE = 0x70E,XML_SCHEMAV_NOROLLBACK = 0x70F,XML_SCHEMAV_ISABSTRACT = 0x710,XML_SCHEMAV_NOTEMPTY = 0x711,XML_SCHEMAV_ELEMCONT = 0x712,XML_SCHEMAV_HAVEDEFAULT = 0x713,XML_SCHEMAV_NOTNILLABLE = 0x714,XML_SCHEMAV_EXTRACONTENT = 0x715,XML_SCHEMAV_INVALIDATTR = 0x716,XML_SCHEMAV_INVALIDELEM = 0x717,XML_SCHEMAV_NOTDETERMINIST = 0x718,XML_SCHEMAV_CONSTRUCT = 0x719,XML_SCHEMAV_INTERNAL = 0x71A,XML_SCHEMAV_NOTSIMPLE = 0x71B,XML_SCHEMAV_ATTRUNKNOWN = 0x71C,XML_SCHEMAV_ATTRINVALID = 0x71D,XML_SCHEMAV_VALUE = 0x71E,XML_SCHEMAV_FACET = 0x71F,XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_1 = 0x720,XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_2 = 0x721,XML_SCHEMAV_CVC_DATATYPE_VALID_1_2_3 = 0x722,XML_SCHEMAV_CVC_TYPE_3_1_1 = 0x723,XML_SCHEMAV_CVC_TYPE_3_1_2 = 0x724,XML_SCHEMAV_CVC_FACET_VALID = 0x725,XML_SCHEMAV_CVC_LENGTH_VALID = 0x726,XML_SCHEMAV_CVC_MINLENGTH_VALID = 0x727,XML_SCHEMAV_CVC_MAXLENGTH_VALID = 0x728,XML_SCHEMAV_CVC_MININCLUSIVE_VALID = 0x729,XML_SCHEMAV_CVC_MAXINCLUSIVE_VALID = 0x72A,XML_SCHEMAV_CVC_MINEXCLUSIVE_VALID = 0x72B,XML_SCHEMAV_CVC_MAXEXCLUSIVE_VALID = 0x72C,XML_SCHEMAV_CVC_TOTALDIGITS_VALID = 0x72D,XML_SCHEMAV_CVC_FRACTIONDIGITS_VALID = 0x72E,XML_SCHEMAV_CVC_PATTERN_VALID = 0x72F,XML_SCHEMAV_CVC_ENUMERATION_VALID = 0x730,XML_SCHEMAV_CVC_COMPLEX_TYPE_2_1 = 0x731,XML_SCHEMAV_CVC_COMPLEX_TYPE_2_2 = 0x732,XML_SCHEMAV_CVC_COMPLEX_TYPE_2_3 = 0x733,XML_SCHEMAV_CVC_COMPLEX_TYPE_2_4 = 0x734,XML_SCHEMAV_CVC_ELT_1 = 0x735,XML_SCHEMAV_CVC_ELT_2 = 0x736,XML_SCHEMAV_CVC_ELT_3_1 = 0x737,XML_SCHEMAV_CVC_ELT_3_2_1 = 0x738,XML_SCHEMAV_CVC_ELT_3_2_2 = 0x739,XML_SCHEMAV_CVC_ELT_4_1 = 0x73A,XML_SCHEMAV_CVC_ELT_4_2 = 0x73B,XML_SCHEMAV_CVC_ELT_4_3 = 0x73C,XML_SCHEMAV_CVC_ELT_5_1_1 = 0x73D,XML_SCHEMAV_CVC_ELT_5_1_2 = 0x73E,XML_SCHEMAV_CVC_ELT_5_2_1 = 0x73F,XML_SCHEMAV_CVC_ELT_5_2_2_1 = 0x740,XML_SCHEMAV_CVC_ELT_5_2_2_2_1 = 0x741,XML_SCHEMAV_CVC_ELT_5_2_2_2_2 = 0x742,XML_SCHEMAV_CVC_ELT_6 = 0x743,XML_SCHEMAV_CVC_ELT_7 = 0x744,XML_SCHEMAV_CVC_ATTRIBUTE_1 = 0x745,XML_SCHEMAV_CVC_ATTRIBUTE_2 = 0x746,XML_SCHEMAV_CVC_ATTRIBUTE_3 = 0x747,XML_SCHEMAV_CVC_ATTRIBUTE_4 = 0x748,XML_SCHEMAV_CVC_COMPLEX_TYPE_3_1 = 0x749,XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_1 = 0x74A,XML_SCHEMAV_CVC_COMPLEX_TYPE_3_2_2 = 0x74B,XML_SCHEMAV_CVC_COMPLEX_TYPE_4 = 0x74C,XML_SCHEMAV_CVC_COMPLEX_TYPE_5_1 = 0x74D,XML_SCHEMAV_CVC_COMPLEX_TYPE_5_2 = 0x74E,XML_SCHEMAV_ELEMENT_CONTENT = 0x74F,XML_SCHEMAV_DOCUMENT_ELEMENT_MISSING = 0x750,XML_SCHEMAV_CVC_COMPLEX_TYPE_1 = 0x751,XML_SCHEMAV_CVC_AU = 0x752,XML_SCHEMAV_CVC_TYPE_1 = 0x753,XML_SCHEMAV_CVC_TYPE_2 = 0x754,XML_SCHEMAV_CVC_IDC = 0x755,XML_SCHEMAV_CVC_WILDCARD = 0x756,XML_SCHEMAV_MISC = 0x757,XML_XPTR_UNKNOWN_SCHEME = 0x76C,XML_XPTR_CHILDSEQ_START = 0x76D,XML_XPTR_EVAL_FAILED = 0x76E,XML_XPTR_EXTRA_OBJECTS = 0x76F,XML_C14N_CREATE_CTXT = 0x79E,XML_C14N_REQUIRES_UTF8 = 0x79F,XML_C14N_CREATE_STACK = 0x7A0,XML_C14N_INVALID_NODE = 0x7A1,XML_C14N_UNKNOW_NODE = 0x7A2,XML_C14N_RELATIVE_NAMESPACE = 0x7A3,XML_FTP_PASV_ANSWER = 0x7D0,XML_FTP_EPSV_ANSWER = 0x7D1,XML_FTP_ACCNT = 0x7D2,XML_FTP_URL_SYNTAX = 0x7D3,XML_HTTP_URL_SYNTAX = 0x7E4,XML_HTTP_USE_IP = 0x7E5,XML_HTTP_UNKNOWN_HOST = 0x7E6,XML_SCHEMAP_SRC_SIMPLE_TYPE_1 = 0xBB8,XML_SCHEMAP_SRC_SIMPLE_TYPE_2 = 0xBB9,XML_SCHEMAP_SRC_SIMPLE_TYPE_3 = 0xBBA,XML_SCHEMAP_SRC_SIMPLE_TYPE_4 = 0xBBB,XML_SCHEMAP_SRC_RESOLVE = 0xBBC,XML_SCHEMAP_SRC_RESTRICTION_BASE_OR_SIMPLETYPE = 0xBBD,XML_SCHEMAP_SRC_LIST_ITEMTYPE_OR_SIMPLETYPE = 0xBBE,XML_SCHEMAP_SRC_UNION_MEMBERTYPES_OR_SIMPLETYPES = 0xBBF,XML_SCHEMAP_ST_PROPS_CORRECT_1 = 0xBC0,XML_SCHEMAP_ST_PROPS_CORRECT_2 = 0xBC1,XML_SCHEMAP_ST_PROPS_CORRECT_3 = 0xBC2,XML_SCHEMAP_COS_ST_RESTRICTS_1_1 = 0xBC3,XML_SCHEMAP_COS_ST_RESTRICTS_1_2 = 0xBC4,XML_SCHEMAP_COS_ST_RESTRICTS_1_3_1 = 0xBC5,XML_SCHEMAP_COS_ST_RESTRICTS_1_3_2 = 0xBC6,XML_SCHEMAP_COS_ST_RESTRICTS_2_1 = 0xBC7,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_1 = 0xBC8,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_1_2 = 0xBC9,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_1 = 0xBCA,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_2 = 0xBCB,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_3 = 0xBCC,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_4 = 0xBCD,XML_SCHEMAP_COS_ST_RESTRICTS_2_3_2_5 = 0xBCE,XML_SCHEMAP_COS_ST_RESTRICTS_3_1 = 0xBCF,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1 = 0xBD0,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_1_2 = 0xBD1,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_2 = 0xBD2,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_1 = 0xBD3,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_3 = 0xBD4,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_4 = 0xBD5,XML_SCHEMAP_COS_ST_RESTRICTS_3_3_2_5 = 0xBD6,XML_SCHEMAP_COS_ST_DERIVED_OK_2_1 = 0xBD7,XML_SCHEMAP_COS_ST_DERIVED_OK_2_2 = 0xBD8,XML_SCHEMAP_S4S_ELEM_NOT_ALLOWED = 0xBD9,XML_SCHEMAP_S4S_ELEM_MISSING = 0xBDA,XML_SCHEMAP_S4S_ATTR_NOT_ALLOWED = 0xBDB,XML_SCHEMAP_S4S_ATTR_MISSING = 0xBDC,XML_SCHEMAP_S4S_ATTR_INVALID_VALUE = 0xBDD,XML_SCHEMAP_SRC_ELEMENT_1 = 0xBDE,XML_SCHEMAP_SRC_ELEMENT_2_1 = 0xBDF,XML_SCHEMAP_SRC_ELEMENT_2_2 = 0xBE0,XML_SCHEMAP_SRC_ELEMENT_3 = 0xBE1,XML_SCHEMAP_P_PROPS_CORRECT_1 = 0xBE2,XML_SCHEMAP_P_PROPS_CORRECT_2_1 = 0xBE3,XML_SCHEMAP_P_PROPS_CORRECT_2_2 = 0xBE4,XML_SCHEMAP_E_PROPS_CORRECT_2 = 0xBE5,XML_SCHEMAP_E_PROPS_CORRECT_3 = 0xBE6,XML_SCHEMAP_E_PROPS_CORRECT_4 = 0xBE7,XML_SCHEMAP_E_PROPS_CORRECT_5 = 0xBE8,XML_SCHEMAP_E_PROPS_CORRECT_6 = 0xBE9,XML_SCHEMAP_SRC_INCLUDE = 0xBEA,XML_SCHEMAP_SRC_ATTRIBUTE_1 = 0xBEB,XML_SCHEMAP_SRC_ATTRIBUTE_2 = 0xBEC,XML_SCHEMAP_SRC_ATTRIBUTE_3_1 = 0xBED,XML_SCHEMAP_SRC_ATTRIBUTE_3_2 = 0xBEE,XML_SCHEMAP_SRC_ATTRIBUTE_4 = 0xBEF,XML_SCHEMAP_NO_XMLNS = 0xBF0,XML_SCHEMAP_NO_XSI = 0xBF1,XML_SCHEMAP_COS_VALID_DEFAULT_1 = 0xBF2,XML_SCHEMAP_COS_VALID_DEFAULT_2_1 = 0xBF3,XML_SCHEMAP_COS_VALID_DEFAULT_2_2_1 = 0xBF4,XML_SCHEMAP_COS_VALID_DEFAULT_2_2_2 = 0xBF5,XML_SCHEMAP_CVC_SIMPLE_TYPE = 0xBF6,XML_SCHEMAP_COS_CT_EXTENDS_1_1 = 0xBF7,XML_SCHEMAP_SRC_IMPORT_1_1 = 0xBF8,XML_SCHEMAP_SRC_IMPORT_1_2 = 0xBF9,XML_SCHEMAP_SRC_IMPORT_2 = 0xBFA,XML_SCHEMAP_SRC_IMPORT_2_1 = 0xBFB,XML_SCHEMAP_SRC_IMPORT_2_2 = 0xBFC,XML_SCHEMAP_INTERNAL = 0xBFD,XML_SCHEMAP_NOT_DETERMINISTIC = 0xBFE,XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_1 = 0xBFF,XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_2 = 0xC00,XML_SCHEMAP_SRC_ATTRIBUTE_GROUP_3 = 0xC01,XML_SCHEMAP_MG_PROPS_CORRECT_1 = 0xC02,XML_SCHEMAP_MG_PROPS_CORRECT_2 = 0xC03,XML_SCHEMAP_SRC_CT_1 = 0xC04,XML_SCHEMAP_DERIVATION_OK_RESTRICTION_2_1_3 = 0xC05,XML_SCHEMAP_AU_PROPS_CORRECT_2 = 0xC06,XML_SCHEMAP_A_PROPS_CORRECT_2 = 0xC07,XML_SCHEMAP_C_PROPS_CORRECT = 0xC08,XML_SCHEMAP_SRC_REDEFINE = 0xC09,XML_SCHEMAP_SRC_IMPORT = 0xC0A,XML_SCHEMAP_WARN_SKIP_SCHEMA = 0xC0B,XML_SCHEMAP_WARN_UNLOCATED_SCHEMA = 0xC0C,XML_SCHEMAP_WARN_ATTR_REDECL_PROH = 0xC0D,XML_SCHEMAP_WARN_ATTR_POINTLESS_PROH = 0xC0E,XML_SCHEMAP_AG_PROPS_CORRECT = 0xC0F,XML_SCHEMAP_COS_CT_EXTENDS_1_2 = 0xC10,XML_SCHEMAP_AU_PROPS_CORRECT = 0xC11,XML_SCHEMAP_A_PROPS_CORRECT_3 = 0xC12,XML_SCHEMAP_COS_ALL_LIMITED = 0xC13,XML_SCHEMATRONV_ASSERT = 0xFA0,XML_SCHEMATRONV_REPORT = 0xFA1,XML_MODULE_OPEN = 0x1324,XML_MODULE_CLOSE = 0x1325,XML_CHECK_FOUND_ELEMENT = 0x1388,XML_CHECK_FOUND_ATTRIBUTE = 0x1389,XML_CHECK_FOUND_TEXT = 0x138A,XML_CHECK_FOUND_CDATA = 0x138B,XML_CHECK_FOUND_ENTITYREF = 0x138C,XML_CHECK_FOUND_ENTITY = 0x138D,XML_CHECK_FOUND_PI = 0x138E,XML_CHECK_FOUND_COMMENT = 0x138F,XML_CHECK_FOUND_DOCTYPE = 0x1390,XML_CHECK_FOUND_FRAGMENT = 0x1391,XML_CHECK_FOUND_NOTATION = 0x1392,XML_CHECK_UNKNOWN_NODE = 0x1393,XML_CHECK_ENTITY_TYPE = 0x1394,XML_CHECK_NO_PARENT = 0x1395,XML_CHECK_NO_DOC = 0x1396,XML_CHECK_NO_NAME = 0x1397,XML_CHECK_NO_ELEM = 0x1398,XML_CHECK_WRONG_DOC = 0x1399,XML_CHECK_NO_PREV = 0x139A,XML_CHECK_WRONG_PREV = 0x139B,XML_CHECK_NO_NEXT = 0x139C,XML_CHECK_WRONG_NEXT = 0x139D,XML_CHECK_NOT_DTD = 0x139E,XML_CHECK_NOT_ATTR = 0x139F,XML_CHECK_NOT_ATTR_DECL = 0x13A0,XML_CHECK_NOT_ELEM_DECL = 0x13A1,XML_CHECK_NOT_ENTITY_DECL = 0x13A2,XML_CHECK_NOT_NS_DECL = 0x13A3,XML_CHECK_NO_HREF = 0x13A4,XML_CHECK_WRONG_PARENT = 0x13A5,XML_CHECK_NS_SCOPE = 0x13A6,XML_CHECK_NS_ANCESTOR = 0x13A7,XML_CHECK_NOT_UTF8 = 0x13A8,XML_CHECK_NO_DICT = 0x13A9,XML_CHECK_NOT_NCNAME = 0x13AA,XML_CHECK_OUTSIDE_DICT = 0x13AB,XML_CHECK_WRONG_NAME = 0x13AC,XML_CHECK_NAME_NOT_NULL = 0x13AD,XML_I18N_NO_NAME = 0x1770,XML_I18N_NO_HANDLER = 0x1771,XML_I18N_EXCESS_HANDLER = 0x1772,XML_I18N_CONV_FAILED = 0x1773,XML_I18N_NO_OUTPUT = 0x1774,};
enum _98B98ABCC9E6F9227613F51BE97EE338 {REMOVEFILE_PROCEED = 0x0,REMOVEFILE_SKIP = 0x1,REMOVEFILE_STOP = 0x2,};
enum _9A2661DB1D1052644D87390F84E0D91B {REMOVEFILE_STATE_CONFIRM_CALLBACK = 0x1,REMOVEFILE_STATE_CONFIRM_CONTEXT = 0x2,REMOVEFILE_STATE_ERROR_CALLBACK = 0x3,REMOVEFILE_STATE_ERROR_CONTEXT = 0x4,REMOVEFILE_STATE_ERRNO = 0x5,REMOVEFILE_STATE_STATUS_CALLBACK = 0x6,REMOVEFILE_STATE_STATUS_CONTEXT = 0x7,};
enum _9AB5807BE2A73FD802AD3D897EE79005 {XML_CATA_PREFER_NONE = 0x0,XML_CATA_PREFER_PUBLIC = 0x1,XML_CATA_PREFER_SYSTEM = 0x2,};
enum _9B247B4FB8AF703C9CE314B5E47E50E3 {kHardLinkFileType = 0x686C6E6B,kHFSPlusCreator = 0x6866732B,};
enum _9D11CEBD141858D27EC341F596A794AC {XML_READER_TYPE_NONE = 0x0,XML_READER_TYPE_ELEMENT = 0x1,XML_READER_TYPE_ATTRIBUTE = 0x2,XML_READER_TYPE_TEXT = 0x3,XML_READER_TYPE_CDATA = 0x4,XML_READER_TYPE_ENTITY_REFERENCE = 0x5,XML_READER_TYPE_ENTITY = 0x6,XML_READER_TYPE_PROCESSING_INSTRUCTION = 0x7,XML_READER_TYPE_COMMENT = 0x8,XML_READER_TYPE_DOCUMENT = 0x9,XML_READER_TYPE_DOCUMENT_TYPE = 0xA,XML_READER_TYPE_DOCUMENT_FRAGMENT = 0xB,XML_READER_TYPE_NOTATION = 0xC,XML_READER_TYPE_WHITESPACE = 0xD,XML_READER_TYPE_SIGNIFICANT_WHITESPACE = 0xE,XML_READER_TYPE_END_ELEMENT = 0xF,XML_READER_TYPE_END_ENTITY = 0x10,XML_READER_TYPE_XML_DECLARATION = 0x11,};
enum _9D44ACAEA63D9A866E10323356541372 {ACL_FLAG_DEFER_INHERIT = 0x1,ACL_FLAG_NO_INHERIT = 0x20000,ACL_ENTRY_INHERITED = 0x10,ACL_ENTRY_FILE_INHERIT = 0x20,ACL_ENTRY_DIRECTORY_INHERIT = 0x40,ACL_ENTRY_LIMIT_INHERIT = 0x80,ACL_ENTRY_ONLY_INHERIT = 0x100,};
enum _A0887B53835153F1EDF9F781696CAC39 {dot3ChipSetIntel82586 = 0x1,dot3ChipSetIntel82596 = 0x2,dot3ChipSetIntel82557 = 0x3,};
enum _A0A84DEF331DB2FC39B4CD8900FCA11B {XML_ELEMENT_CONTENT_PCDATA = 0x1,XML_ELEMENT_CONTENT_ELEMENT = 0x2,XML_ELEMENT_CONTENT_SEQ = 0x3,XML_ELEMENT_CONTENT_OR = 0x4,};
struct _A2898260CF48A71D77A1F36A2E3AC7DC {char *mailbox;char *txtdname;};
enum _A4AB2ACB256BC3C4C6BFF469F2F5E493 {CHECKINT_NO_ERROR = 0x0,CHECKINT_OVERFLOW_ERROR = 0x1,CHECKINT_TYPE_ERROR = 0x2,};
struct _A4B2B056AC02B7A91138DA853BA9D10A {int srr_max_tries;int srr_retry_sec;int srr_retry_usec;int deltat_max_tries;int deltat_retry_sec;int deltat_retry_usec;int deltat_msg_life;int pc_checkup_interval;int crypt_algorithm;int transport_default;int conf_network;int conf_netport;int timer_quantum;int tcp_conn_steady;int tcp_conn_opening;int tcp_conn_max;int compat;int syslog;int old_nmmonitor;};
enum _A6805870A19637E169CA9D300BA1FBE4 {PAM_SERVICE = 0x1,PAM_USER = 0x2,PAM_TTY = 0x3,PAM_RHOST = 0x4,PAM_CONV = 0x5,PAM_AUTHTOK = 0x6,PAM_OLDAUTHTOK = 0x7,PAM_RUSER = 0x8,PAM_USER_PROMPT = 0x9,PAM_REPOSITORY = 0xA,PAM_AUTHTOK_PROMPT = 0xB,PAM_OLDAUTHTOK_PROMPT = 0xC,PAM_NUM_ITEMS = 0xD,};
struct _A76923D44FC3AA9C7AC0A016BD3320E6 {unsigned short __control;unsigned short __status;unsigned int __mxcsr;char __reserved[8];};
enum _A825878F958596565FEE8860DE052352 {TidyKeepFirst = 0x0,TidyKeepLast = 0x1,};
enum _A86837AB56EC532038D4CEC80449646F {XML_SCHEMATRON_OUT_QUIET = 0x1,XML_SCHEMATRON_OUT_TEXT = 0x2,XML_SCHEMATRON_OUT_XML = 0x4,XML_SCHEMATRON_OUT_ERROR = 0x8,XML_SCHEMATRON_OUT_FILE = 0x100,XML_SCHEMATRON_OUT_BUFFER = 0x200,XML_SCHEMATRON_OUT_IO = 0x400,};
enum _AA7AC226BF5649CDC6E12A1616281D14 {CURLPROXY_HTTP = 0x0,CURLPROXY_HTTP_1_0 = 0x1,CURLPROXY_SOCKS4 = 0x4,CURLPROXY_SOCKS5 = 0x5,CURLPROXY_SOCKS4A = 0x6,CURLPROXY_SOCKS5_HOSTNAME = 0x7,};
enum _AAF7D8B1D740C4801D49F07692D1E0A1 {SQL_IS_YEAR = 0x1,SQL_IS_MONTH = 0x2,SQL_IS_DAY = 0x3,SQL_IS_HOUR = 0x4,SQL_IS_MINUTE = 0x5,SQL_IS_SECOND = 0x6,SQL_IS_YEAR_TO_MONTH = 0x7,SQL_IS_DAY_TO_HOUR = 0x8,SQL_IS_DAY_TO_MINUTE = 0x9,SQL_IS_DAY_TO_SECOND = 0xA,SQL_IS_HOUR_TO_MINUTE = 0xB,SQL_IS_HOUR_TO_SECOND = 0xC,SQL_IS_MINUTE_TO_SECOND = 0xD,};
struct _AC1F0727205AA235F31FA7E4FBAB6931 {long long quot;long long rem;};
enum _ACDB03B0D9D598C0F761C4B16B3D1CB5 {kHFSMaxVolumeNameChars = 0x1B,kHFSMaxFileNameChars = 0x1F,kHFSPlusMaxFileNameChars = 0xFF,};
struct _B0A4D3FCA1AE58C86963BEC154F83A57 {int print_level;int ipc_in;int ipc_out;int tracing;int vmtp;int netname;int deltat;int tcp;int mem;};
enum _B1615B6EE754A1E9BE91669222F3B978 {XML_PARSE_RECOVER = 0x1,XML_PARSE_NOENT = 0x2,XML_PARSE_DTDLOAD = 0x4,XML_PARSE_DTDATTR = 0x8,XML_PARSE_DTDVALID = 0x10,XML_PARSE_NOERROR = 0x20,XML_PARSE_NOWARNING = 0x40,XML_PARSE_PEDANTIC = 0x80,XML_PARSE_NOBLANKS = 0x100,XML_PARSE_SAX1 = 0x200,XML_PARSE_XINCLUDE = 0x400,XML_PARSE_NONET = 0x800,XML_PARSE_NODICT = 0x1000,XML_PARSE_NSCLEAN = 0x2000,XML_PARSE_NOCDATA = 0x4000,XML_PARSE_NOXINCNODE = 0x8000,XML_PARSE_COMPACT = 0x10000,XML_PARSE_OLD10 = 0x20000,XML_PARSE_NOBASEFIX = 0x40000,XML_PARSE_HUGE = 0x80000,XML_PARSE_OLDSAX = 0x100000,};
enum _B2A44DC877B17F2021CE46A73658A10E {DB_BTREE = 0x0,DB_HASH = 0x1,DB_RECNO = 0x2,};
enum _B51368E841E12F171B8C755FA056AF73 {CURL_HTTP_VERSION_NONE = 0x0,CURL_HTTP_VERSION_1_0 = 0x1,CURL_HTTP_VERSION_1_1 = 0x2,CURL_HTTP_VERSION_LAST = 0x3,};
enum _B51E1DCDB81FA1FB4EE66033B9782554 {BLOCK_ALL_COPY_DISPOSE_FLAGS = 0x9F,};
struct _B8B9B85B971E3DBFC31707A9282CDA9E {unsigned char mig_vers;unsigned char if_vers;unsigned char reserved1;unsigned char mig_encoding;unsigned char int_rep;unsigned char char_rep;unsigned char float_rep;unsigned char reserved2;};
enum _B8C02EDA4356AFEB3B864A542494BAF4 {TidyDoctypeOmit = 0x0,TidyDoctypeAuto = 0x1,TidyDoctypeStrict = 0x2,TidyDoctypeLoose = 0x3,TidyDoctypeUser = 0x4,};
enum _B9B833D4AB600AEF2FFBDAC6174DED45 {BLOCK_BYREF_LAYOUT_MASK = 0xF0000000,BLOCK_BYREF_LAYOUT_EXTENDED = 0x10000000,BLOCK_BYREF_LAYOUT_NON_OBJECT = 0x20000000,BLOCK_BYREF_LAYOUT_STRONG = 0x30000000,BLOCK_BYREF_LAYOUT_WEAK = 0x40000000,BLOCK_BYREF_LAYOUT_UNRETAINED = 0x50000000,BLOCK_BYREF_IS_GC = 0x8000000,BLOCK_BYREF_HAS_COPY_DISPOSE = 0x2000000,BLOCK_BYREF_NEEDS_FREE = 0x1000000,};
enum _BB2ABB128CDE206EF4F40C2E0E9F7E66 {PAM_PROMPT_ECHO_OFF = 0x1,PAM_PROMPT_ECHO_ON = 0x2,PAM_ERROR_MSG = 0x3,PAM_TEXT_INFO = 0x4,PAM_MAX_NUM_MSG = 0x20,PAM_MAX_MSG_SIZE = 0x200,PAM_MAX_RESP_SIZE = 0x200,};
enum _BB5A96A2CE5D6B27726B421C0566B799 {kHFSFileLockedBit = 0x0,kHFSFileLockedMask = 0x1,kHFSThreadExistsBit = 0x1,kHFSThreadExistsMask = 0x2,kHFSHasAttributesBit = 0x2,kHFSHasAttributesMask = 0x4,kHFSHasSecurityBit = 0x3,kHFSHasSecurityMask = 0x8,kHFSHasFolderCountBit = 0x4,kHFSHasFolderCountMask = 0x10,kHFSHasLinkChainBit = 0x5,kHFSHasLinkChainMask = 0x20,kHFSHasChildLinkBit = 0x6,kHFSHasChildLinkMask = 0x40,kHFSHasDateAddedBit = 0x7,kHFSHasDateAddedMask = 0x80,};
struct __attribute__((aligned(16))) _BC1F9A8A398E4973C30CEFF05D86C139 {void *opaque1;void *opaque2;int opaque3;};
enum _C2D4DC0A39BA1BADB043EDCBF23CFD90 {CURLSOCKTYPE_IPCXN = 0x0,CURLSOCKTYPE_LAST = 0x1,};
enum _C2DD888A95F2B46A37DA27F4E6CDD186 {kJIJournalInFSMask = 0x1,kJIJournalOnOtherDeviceMask = 0x2,kJIJournalNeedInitMask = 0x4,};
enum _C3D2D4EDCF7C6B2D868D1D9CA16C55C6 {dot3ChipSetWesternDigital83C690 = 0x1,dot3ChipSetWesternDigital83C790 = 0x2,};
enum _C4E230AE075788E5E60A8962A8E4C159 {LT_ERROR_UNKNOWN = 0x0,LT_ERROR_DLOPEN_NOT_SUPPORTED = 0x1,LT_ERROR_INVALID_LOADER = 0x2,LT_ERROR_INIT_LOADER = 0x3,LT_ERROR_REMOVE_LOADER = 0x4,LT_ERROR_FILE_NOT_FOUND = 0x5,LT_ERROR_DEPLIB_NOT_FOUND = 0x6,LT_ERROR_NO_SYMBOLS = 0x7,LT_ERROR_CANNOT_OPEN = 0x8,LT_ERROR_CANNOT_CLOSE = 0x9,LT_ERROR_SYMBOL_NOT_FOUND = 0xA,LT_ERROR_NO_MEMORY = 0xB,LT_ERROR_INVALID_HANDLE = 0xC,LT_ERROR_BUFFER_OVERFLOW = 0xD,LT_ERROR_INVALID_ERRORCODE = 0xE,LT_ERROR_SHUTDOWN = 0xF,LT_ERROR_CLOSE_RESIDENT_MODULE = 0x10,LT_ERROR_INVALID_MUTEX_ARGS = 0x11,LT_ERROR_INVALID_POSITION = 0x12,LT_ERROR_CONFLICTING_FLAGS = 0x13,LT_ERROR_MAX = 0x14,};
enum _C5101608B88D7C11ADC8E88E540FCD76 {XML_ELEMENT_NODE = 0x1,XML_ATTRIBUTE_NODE = 0x2,XML_TEXT_NODE = 0x3,XML_CDATA_SECTION_NODE = 0x4,XML_ENTITY_REF_NODE = 0x5,XML_ENTITY_NODE = 0x6,XML_PI_NODE = 0x7,XML_COMMENT_NODE = 0x8,XML_DOCUMENT_NODE = 0x9,XML_DOCUMENT_TYPE_NODE = 0xA,XML_DOCUMENT_FRAG_NODE = 0xB,XML_NOTATION_NODE = 0xC,XML_HTML_DOCUMENT_NODE = 0xD,XML_DTD_NODE = 0xE,XML_ELEMENT_DECL = 0xF,XML_ATTRIBUTE_DECL = 0x10,XML_ENTITY_DECL = 0x11,XML_NAMESPACE_DECL = 0x12,XML_XINCLUDE_START = 0x13,XML_XINCLUDE_END = 0x14,XML_DOCB_DOCUMENT_NODE = 0x15,};
struct _CCB3EA4D4E2EB1F9AAB4C1A3C0D4C77E {long long np_uid_high;long long np_uid_low;};
enum _CF0840319031D014E124B84294A5BA84 {UNW_X86_EAX = 0x0,UNW_X86_ECX = 0x1,UNW_X86_EDX = 0x2,UNW_X86_EBX = 0x3,UNW_X86_EBP = 0x4,UNW_X86_ESP = 0x5,UNW_X86_ESI = 0x6,UNW_X86_EDI = 0x7,};
enum _D034DF41D4B9D2189D2EB2EA4C611CD6 {dot3ChipSetDigitalDC21040 = 0x1,dot3ChipSetDigitalDC21140 = 0x2,dot3ChipSetDigitalDC21041 = 0x3,dot3ChipSetDigitalDC21140A = 0x4,dot3ChipSetDigitalDC21142 = 0x5,};
enum _D3B97490B7B9C86B943C2E39D5FA02F9 {CURLFTP_CREATE_DIR_NONE = 0x0,CURLFTP_CREATE_DIR = 0x1,CURLFTP_CREATE_DIR_RETRY = 0x2,CURLFTP_CREATE_DIR_LAST = 0x3,};
enum _D3CAE1E2FD75A1BAED0D73857BABBB1F {XML_PARSE_UNKNOWN = 0x0,XML_PARSE_DOM = 0x1,XML_PARSE_SAX = 0x2,XML_PARSE_PUSH_DOM = 0x3,XML_PARSE_PUSH_SAX = 0x4,XML_PARSE_READER = 0x5,};
enum _D46AA9DF6FBFE9D2B16063CE8CC3B5EF {XML_INTERNAL_GENERAL_ENTITY = 0x1,XML_EXTERNAL_GENERAL_PARSED_ENTITY = 0x2,XML_EXTERNAL_GENERAL_UNPARSED_ENTITY = 0x3,XML_INTERNAL_PARAMETER_ENTITY = 0x4,XML_EXTERNAL_PARAMETER_ENTITY = 0x5,XML_INTERNAL_PREDEFINED_ENTITY = 0x6,};
enum _D4934026ABEEF2822D8F739CC8F783CF {FILESEC_OWNER = 0x1,FILESEC_GROUP = 0x2,FILESEC_UUID = 0x3,FILESEC_MODE = 0x4,FILESEC_ACL = 0x5,FILESEC_GRPUUID = 0x6,FILESEC_ACL_RAW = 0x64,FILESEC_ACL_ALLOCSIZE = 0x65,};
enum _D4C59E39AC5981A3A29A91ECFFFB3F03 {XML_BUFFER_ALLOC_DOUBLEIT = 0x0,XML_BUFFER_ALLOC_EXACT = 0x1,XML_BUFFER_ALLOC_IMMUTABLE = 0x2,XML_BUFFER_ALLOC_IO = 0x3,};
struct _D5D5FAADE45C3E62C0E3AA0EFAA1D8B2 {int references;struct CRYPTO_dynlock_value *data;};
enum _DAE851F8676BA49E7F1B3A48D3E2CAFA {NSLinkEditFileAccessError = 0x0,NSLinkEditFileFormatError = 0x1,NSLinkEditMachResourceError = 0x2,NSLinkEditUnixResourceError = 0x3,NSLinkEditOtherError = 0x4,NSLinkEditWarningError = 0x5,NSLinkEditMultiplyDefinedError = 0x6,NSLinkEditUndefinedError = 0x7,};
union _DB0CF6B582A763FBC7ADB1435806EA74 {struct dispatch_object_s *_do;struct dispatch_continuation_s *_dc;struct dispatch_queue_s *_dq;struct dispatch_queue_attr_s *_dqa;struct dispatch_group_s *_dg;struct dispatch_source_s *__ds;struct dispatch_source_attr_s *_dsa;struct dispatch_semaphore_s *_dsema;struct dispatch_data_s *_ddata;struct dispatch_io_s *_dchannel;struct dispatch_operation_s *_doperation;struct dispatch_disk_s *_ddisk;};
struct _DD7F30A52BF20C3BD0A18D92A677C06B {int nid; char *comment;};
enum _DD8E034716BD0047246A4D50EFF6F7DB {XML_PARSER_LOADDTD = 0x1,XML_PARSER_DEFAULTATTRS = 0x2,XML_PARSER_VALIDATE = 0x3,XML_PARSER_SUBST_ENTITIES = 0x4,};
enum _DE06055EB230CD568A22B7F3A8A630B2 {kHFSMaxAttrNameLen = 0x7F,};
enum _DE419B5C0B7C486303E1E193CE859546 {XML_PARSER_SEVERITY_VALIDITY_WARNING = 0x1,XML_PARSER_SEVERITY_VALIDITY_ERROR = 0x2,XML_PARSER_SEVERITY_WARNING = 0x3,XML_PARSER_SEVERITY_ERROR = 0x4,};
enum _DF051F384C7337C7B173CB8C15D72E06 {kSymLinkFileType = 0x736C6E6B,kSymLinkCreator = 0x72686170,};
struct _DF1D91DCAB84234D18917BEB10ABC3BE {char *isdn_address;char *subaddress;};
enum _DF9762E172B78CD0B567A8F57D5EE1A7 {CURLSHE_OK = 0x0,CURLSHE_BAD_OPTION = 0x1,CURLSHE_IN_USE = 0x2,CURLSHE_INVALID = 0x3,CURLSHE_NOMEM = 0x4,CURLSHE_LAST = 0x5,};
enum _E1FDD4ACF09F0C0D97484FB628F6E577 {XML_ELEMENT_TYPE_UNDEFINED = 0x0,XML_ELEMENT_TYPE_EMPTY = 0x1,XML_ELEMENT_TYPE_ANY = 0x2,XML_ELEMENT_TYPE_MIXED = 0x3,XML_ELEMENT_TYPE_ELEMENT = 0x4,};
enum _E50CF21A375752F45409DA036BA9C4BA {CURLMSG_NONE = 0x0,CURLMSG_DONE = 0x1,CURLMSG_LAST = 0x2,};
enum _E52E208B92D65F4D665A1F0C1924EDE5 {XML_PATTERN_DEFAULT = 0x0,XML_PATTERN_XPATH = 0x1,XML_PATTERN_XSSEL = 0x2,XML_PATTERN_XSFIELD = 0x4,};
enum _E5E7377D643AA4CAF5C6CDE0D2F168BF {XML_CHAR_ENCODING_ERROR = 0xFFFFFFFF,XML_CHAR_ENCODING_NONE = 0x0,XML_CHAR_ENCODING_UTF8 = 0x1,XML_CHAR_ENCODING_UTF16LE = 0x2,XML_CHAR_ENCODING_UTF16BE = 0x3,XML_CHAR_ENCODING_UCS4LE = 0x4,XML_CHAR_ENCODING_UCS4BE = 0x5,XML_CHAR_ENCODING_EBCDIC = 0x6,XML_CHAR_ENCODING_UCS4_2143 = 0x7,XML_CHAR_ENCODING_UCS4_3412 = 0x8,XML_CHAR_ENCODING_UCS2 = 0x9,XML_CHAR_ENCODING_8859_1 = 0xA,XML_CHAR_ENCODING_8859_2 = 0xB,XML_CHAR_ENCODING_8859_3 = 0xC,XML_CHAR_ENCODING_8859_4 = 0xD,XML_CHAR_ENCODING_8859_5 = 0xE,XML_CHAR_ENCODING_8859_6 = 0xF,XML_CHAR_ENCODING_8859_7 = 0x10,XML_CHAR_ENCODING_8859_8 = 0x11,XML_CHAR_ENCODING_8859_9 = 0x12,XML_CHAR_ENCODING_2022_JP = 0x13,XML_CHAR_ENCODING_SHIFT_JIS = 0x14,XML_CHAR_ENCODING_EUC_JP = 0x15,XML_CHAR_ENCODING_ASCII = 0x16,};
enum _E61B72B2528436688BBD75516B993DD2 {MIME_MAGIC_NOP = 0x0,MIME_MAGIC_AND = 0x1,MIME_MAGIC_OR = 0x2,MIME_MAGIC_MATCH = 0x3,MIME_MAGIC_ASCII = 0x4,MIME_MAGIC_PRINTABLE = 0x5,MIME_MAGIC_STRING = 0x6,MIME_MAGIC_CHAR = 0x7,MIME_MAGIC_SHORT = 0x8,MIME_MAGIC_INT = 0x9,MIME_MAGIC_LOCALE = 0xA,MIME_MAGIC_CONTAINS = 0xB,MIME_MAGIC_ISTRING = 0xC,};
enum _E720E7619019B10D7DF6FB85013EE738 {XML_CATA_ALLOW_NONE = 0x0,XML_CATA_ALLOW_GLOBAL = 0x1,XML_CATA_ALLOW_DOCUMENT = 0x2,XML_CATA_ALLOW_ALL = 0x3,};
enum _E86A9D4BDF47B8ECB447213BB5AF724B {TidyMarkup = 0x0,TidyDiagnostics = 0x1,TidyPrettyPrint = 0x2,TidyEncoding = 0x3,TidyMiscellaneous = 0x4,};
enum _E9C6ABAFEE51821EC034C6B74D5B344E {kDNSServiceDiscoveryNoFlags = 0x0,kDNSServiceDiscoveryMoreRepliesImmediately = 0x1,};
enum _E9DBAC0AE96102AB36550954105F0957 {LT_DLLOADER_PREPEND = 0x0,LT_DLLOADER_APPEND = 0x1,};
enum _EB4F25A3AB2B34DE382859FFD4ADE17B {DNSServiceDomainEnumerationReplyAddDomain = 0x0,DNSServiceDomainEnumerationReplyAddDomainDefault = 0x1,DNSServiceDomainEnumerationReplyRemoveDomain = 0x2,};
struct _EB59F425BEB47ECBA8886A98C22ABD7D {char *cpu;char *os;};
struct _EC96C272326DB5C337E3479E74002932 {char *section;char *name;char *value;};
enum _EDBA1914F16BC538415B0E0A3A3FD3BB {FIND = 0x0,ENTER = 0x1,};
enum _EE25B450600DB130E77B21E804467FD5 {XLINK_SHOW_NONE = 0x0,XLINK_SHOW_NEW = 0x1,XLINK_SHOW_EMBED = 0x2,XLINK_SHOW_REPLACE = 0x3,};
enum _F022A16E3DDDADD4F8D0A3446DF412CC {HTML_NA = 0x0,HTML_INVALID = 0x1,HTML_DEPRECATED = 0x2,HTML_VALID = 0x4,HTML_REQUIRED = 0xC,};
enum _F1A50F71D77F5C0A44F94F2AEF75FF0E {XSLT_DEBUG_NONE = 0x0,XSLT_DEBUG_INIT = 0x1,XSLT_DEBUG_STEP = 0x2,XSLT_DEBUG_STEPOUT = 0x3,XSLT_DEBUG_NEXT = 0x4,XSLT_DEBUG_STOP = 0x5,XSLT_DEBUG_CONT = 0x6,XSLT_DEBUG_RUN = 0x7,XSLT_DEBUG_RUN_RESTART = 0x8,XSLT_DEBUG_QUIT = 0x9,};
enum _F236BFF0AA67B00384F80E74B2E93967 {POINT_CONVERSION_COMPRESSED = 0x2,POINT_CONVERSION_UNCOMPRESSED = 0x4,POINT_CONVERSION_HYBRID = 0x6,};
struct _F26177398F3106F2DD5FF971AA6CC145 {char *name;};
enum _F332E1DED775B0D62777DB33DD18F524 {ACL_UNDEFINED_TAG = 0x0,ACL_EXTENDED_ALLOW = 0x1,ACL_EXTENDED_DENY = 0x2,};
enum _F37E133A365EB9F6FA66643137085251 {kHFSExtentDensity = 0x3,kHFSPlusExtentDensity = 0x8,};
enum _F8685D9A6F07534FD5C3F02CB40ABFB2 {kDNSServiceType_A = 0x1,kDNSServiceType_NS = 0x2,kDNSServiceType_MD = 0x3,kDNSServiceType_MF = 0x4,kDNSServiceType_CNAME = 0x5,kDNSServiceType_SOA = 0x6,kDNSServiceType_MB = 0x7,kDNSServiceType_MG = 0x8,kDNSServiceType_MR = 0x9,kDNSServiceType_NULL = 0xA,kDNSServiceType_WKS = 0xB,kDNSServiceType_PTR = 0xC,kDNSServiceType_HINFO = 0xD,kDNSServiceType_MINFO = 0xE,kDNSServiceType_MX = 0xF,kDNSServiceType_TXT = 0x10,kDNSServiceType_RP = 0x11,kDNSServiceType_AFSDB = 0x12,kDNSServiceType_X25 = 0x13,kDNSServiceType_ISDN = 0x14,kDNSServiceType_RT = 0x15,kDNSServiceType_NSAP = 0x16,kDNSServiceType_NSAP_PTR = 0x17,kDNSServiceType_SIG = 0x18,kDNSServiceType_KEY = 0x19,kDNSServiceType_PX = 0x1A,kDNSServiceType_GPOS = 0x1B,kDNSServiceType_AAAA = 0x1C,kDNSServiceType_LOC = 0x1D,kDNSServiceType_NXT = 0x1E,kDNSServiceType_EID = 0x1F,kDNSServiceType_NIMLOC = 0x20,kDNSServiceType_SRV = 0x21,kDNSServiceType_ATMA = 0x22,kDNSServiceType_NAPTR = 0x23,kDNSServiceType_KX = 0x24,kDNSServiceType_CERT = 0x25,kDNSServiceType_A6 = 0x26,kDNSServiceType_DNAME = 0x27,kDNSServiceType_SINK = 0x28,kDNSServiceType_OPT = 0x29,kDNSServiceType_APL = 0x2A,kDNSServiceType_DS = 0x2B,kDNSServiceType_SSHFP = 0x2C,kDNSServiceType_IPSECKEY = 0x2D,kDNSServiceType_RRSIG = 0x2E,kDNSServiceType_NSEC = 0x2F,kDNSServiceType_DNSKEY = 0x30,kDNSServiceType_DHCID = 0x31,kDNSServiceType_NSEC3 = 0x32,kDNSServiceType_NSEC3PARAM = 0x33,kDNSServiceType_HIP = 0x37,kDNSServiceType_SPF = 0x63,kDNSServiceType_UINFO = 0x64,kDNSServiceType_UID = 0x65,kDNSServiceType_GID = 0x66,kDNSServiceType_UNSPEC = 0x67,kDNSServiceType_TKEY = 0xF9,kDNSServiceType_TSIG = 0xFA,kDNSServiceType_IXFR = 0xFB,kDNSServiceType_AXFR = 0xFC,kDNSServiceType_MAILB = 0xFD,kDNSServiceType_MAILA = 0xFE,kDNSServiceType_ANY = 0xFF,};
enum _F8A097482C6B24D8CA3C16823450667A {ACL_TYPE_EXTENDED = 0x100,ACL_TYPE_ACCESS = 0x0,ACL_TYPE_DEFAULT = 0x1,ACL_TYPE_AFS = 0x2,ACL_TYPE_CODA = 0x3,ACL_TYPE_NTFS = 0x4,ACL_TYPE_NWFS = 0x5,};
enum _FA84D37CEEEAC6441153FDF22E064FC6 {LDAP_SYNC_CAPI_NONE = 0xFFFFFFFF,LDAP_SYNC_CAPI_PHASE_FLAG = 0x10,LDAP_SYNC_CAPI_IDSET_FLAG = 0x20,LDAP_SYNC_CAPI_DONE_FLAG = 0x40,LDAP_SYNC_CAPI_PRESENT = 0x0,LDAP_SYNC_CAPI_ADD = 0x1,LDAP_SYNC_CAPI_MODIFY = 0x2,LDAP_SYNC_CAPI_DELETE = 0x3,LDAP_SYNC_CAPI_PRESENTS = 0x10,LDAP_SYNC_CAPI_DELETES = 0x13,LDAP_SYNC_CAPI_PRESENTS_IDSET = 0x30,LDAP_SYNC_CAPI_DELETES_IDSET = 0x33,LDAP_SYNC_CAPI_DONE = 0x50,};
struct _FBA7D87DC326A635240EF53AE056B982 {long long code;long long thread;long long a1;long long a2;long long a3;long long a4;long long a5;long long a6;};
enum _FF33C0E81AF30F09B11252A739DC6DDA {kHFSSigWord = 0x4244,kHFSPlusSigWord = 0x482B,kHFSXSigWord = 0x4858,kHFSPlusVersion = 0x4,kHFSXVersion = 0x5,kHFSPlusMountVersion = 0x31302E30,kHFSJMountVersion = 0x4846534A,kFSKMountVersion = 0x46534B21,};
enum _FF6DEC2E5CE2EC2303227045BBC9CA50 {XML_ELEMENT_CONTENT_ONCE = 0x1,XML_ELEMENT_CONTENT_OPT = 0x2,XML_ELEMENT_CONTENT_MULT = 0x3,XML_ELEMENT_CONTENT_PLUS = 0x4,};
struct CompileTimeAssertionChecks_DNS_SD {char assert0[1];};
typedef struct _48128538EAAA3D95320DEC45BE60FE04 __Reply__host_get_clock_control_t;
typedef struct _59AA03472FCFCA397F68DC3419B6E0CE __Reply__host_get_clock_service_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__host_load_symbol_table_t;
typedef struct _2E4AEC4DAEDEFAF9740FCE81CFC978B6 __Reply__mach_make_memory_entry_t;
typedef struct _1783B4855960E25D5065E02F55E2E263 __Reply__mach_port_allocate_qos_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_insert_right_t;
typedef struct _9C5E7BEBDEAC9680FE5D9ADFB2DEA0C0 __Reply__mach_vm_read_overwrite_t;
typedef struct _DAECF1BBBEC63DCCC1C5BA594BE2FE4F __Reply__mach_vm_region_info_64_t;
typedef struct _4E3803487B5F2E6858C157D0AC2FC93A __Reply__mach_vm_region_recurse_t;
typedef struct _FEDEB051CE08D897834232829C0C3BAE __Request__clock_get_attributes_t;
typedef struct _69D31FA9CDD4718FF5B7AF641C4535B7 __Request__clock_set_attributes_t;
typedef struct _75304CCD3C967214A8BD283A9F6A93D0 __Request__host_priv_statistics_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_deallocate_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__mach_port_space_info_t;
typedef struct _ECBF3EDE173DC336165517660AF0126F __Request__mach_vm_behavior_set_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_set_create_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_depress_abort_t;
typedef struct _2FBFFD789A2C809930720784B8820AE2 __Request__vm_machine_attribute_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__vm_mapped_pages_info_t;
typedef struct _9487B923D69225998A44A53C15C58453 __Request__vm_region_recurse_64_t;
typedef unsigned long long dispatch_source_mach_send_flags_t;
typedef struct _6671520B86EDC1548DF0B281DB354573 mach_msg_ool_ports_descriptor32_t;
typedef struct _2AFE5EE5A4A6FE139E45DAAB082A402B mach_msg_ool_ports_descriptor64_t;
typedef struct _211858A17FC3AA3AF7FB370462C716CC mach_send_possible_notification_t;
typedef void mpo_port_label_associate_kernel_t(struct label *portlabel, int isreply);
typedef void mpo_task_label_associate_kernel_t(struct task *kproc, struct label *tasklabel, struct label *portlabel);
typedef void mpo_vnode_label_associate_devfs_t(struct mount *mp, struct label *mntlabel, struct devnode *de, struct label *delabel, struct vnode *vp, struct label *vlabel);
typedef struct netsnmp_baby_steps_access_methods_s netsnmp_baby_steps_access_methods;
typedef int netsnmp_factory_produce_noalloc_f(void *);
typedef void *(*slapi_extension_constructor_fnptr)(void *object, void *parent);
enum MACRO_kOSMetaClassDuplicateClass {kOSMetaClassDuplicateClass = 3691003914,};
typedef struct _F1BB640A69E4C9C26809E32C99FD444E __Reply__exception_raise_state_t;
typedef struct _3E6B1E6034954B23411B3542CA61CBC7 __Reply__host_get_special_port_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__host_set_special_port_t;
typedef struct _618A16F1A9CB4DE56CB312A402246FE1 __Reply__mach_port_get_context_t;
typedef struct _F1773A35038DB66F062B2D1DBF85E45A __Reply__mach_port_get_srights_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_move_member_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_set_context_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_set_mscount_t;
typedef struct _575BADC95B9991A2B9CD2F3725868B8D __Reply__processor_set_default_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_set_destroy_t;
typedef struct _776B37716F2A203FA8D593ECE8B979C2 __Reply__processor_set_threads_t;
typedef struct _E65ABC06A11602FED23D2457B8AEAC9D __Reply__task_get_special_port_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_special_port_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_assign_default_t;
typedef struct _4B8804F6523751A831C00C572669AA3C __Reply__thread_create_running_t;
typedef struct _488333C1932ECE7496D2930CA2056B6D __Reply__thread_get_assignment_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__get_dp_control_port_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_kernel_version_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_lockgroup_info_t;
typedef struct _56709C31788A185985ED8F80CB75C10C __Request__host_processor_info_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_processor_sets_t;
typedef struct _5E04D424E81EA6874558831D2FFF2B4D __Request__lock_handoff_accept_t;
typedef struct _2D63240515AC7C828AB4C7B058DC34F3 __Request__mach_port_set_seqno_t;
typedef struct _64173B50D5C298666AA1E07EB308B730 __Request__mach_ports_register_t;
typedef struct _23464681D0D095F096FB79A1E66062AF __Request__mach_vm_region_info_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_set_tasks_t;
typedef struct _5A17788FF526DC41EE65ED362A8F9A06 __Request__set_dp_control_port_t;
typedef struct _86F29632C393BEC61052C835C8FE3129 __Request__task_assign_default_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__task_get_assignment_t;
typedef struct _B609C4CC44C72843B520E4D8871C3E06 __Request__task_set_port_space_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_abort_safely_t;
typedef struct _9FBED4CF5043C1481558BDE489C7B3DA __Request__vm_purgable_control_t;
typedef struct gss_krb5_lucid_context_version gss_krb5_lucid_context_version_t;
typedef struct _211858A17FC3AA3AF7FB370462C716CC mach_port_deleted_notification_t;
typedef struct memory_object_behave_info memory_object_behave_info_data_t;
typedef void mpo_mbuf_label_associate_ifnet_t(struct ifnet *ifp, struct label *i_label, struct mbuf *m, struct label *m_label);
typedef void mpo_mbuf_label_associate_inpcb_t(struct inpcb *inp, struct label *i_label, struct mbuf *m, struct label *m_label);
typedef void mpo_vnode_label_associate_file_t(struct ucred *cred, struct mount *mp, struct label *mntlabel, struct fileglob *fg, struct label *label, struct vnode *vp, struct label *vlabel);
typedef void mpo_vnode_label_associate_pipe_t(struct ucred *cred, struct pipe *cpipe, struct label *pipelabel, struct vnode *vp, struct label *vlabel);
typedef void (*slapi_extension_destructor_fnptr)(void *extension, void *object, void *parent);
typedef struct vm_region_submap_short_info_64 *vm_region_submap_short_info_64_t;
typedef void (*xmlSchematronValidityWarningFunc)(void *ctx,  char *msg, ...);
enum MACRO_kDNSServiceMaxServiceName {kDNSServiceMaxServiceName = 64,};
typedef struct _279A7D6BAE671E5D078D50BF79E5C443 __Reply__clock_get_attributes_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__clock_set_attributes_t;
typedef struct _82BD275F6039C166EF4DD9B4F2A9C114 __Reply__host_priv_statistics_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_deallocate_t;
typedef struct _E9BF538EED9B46D5473DA4650D70F75C __Reply__mach_port_space_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_vm_behavior_set_t;
typedef struct _CC043B3A15E15755209E3A20F84F16AB __Reply__processor_set_create_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_depress_abort_t;
typedef struct _B74BBF4C1467FECDB27E8CB1AA37D794 __Reply__vm_machine_attribute_t;
typedef struct _B01B4E9250F885241409748218B2C105 __Reply__vm_mapped_pages_info_t;
typedef struct _43EB887A7D5DDC6B5CCC173C2FB6636E __Reply__vm_region_recurse_64_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_get_UNDServer_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_get_boot_info_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_get_io_master_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_ipc_hash_info_t;
typedef struct _333F68BA2C53B7EE0F2D13B448D38F51 __Request__host_set_UNDServer_t;
typedef struct _9ADB6D801CB74636DD3BB8128AE6A17C __Request__mach_port_allocate_t;
typedef struct _B346CF55E253733CEEA9A9F57C8BD312 __Request__mach_port_get_refs_t;
typedef struct _77044CD3286DFFD089401BC1A550C0B3 __Request__mach_port_mod_refs_t;
typedef struct _C73F2DA5D1FAD09FF5C310E32862AC76 __Request__mach_vm_deallocate_t;
typedef struct _28467C2BF1D87957FF78F1692EFD23EF __Request__mach_vm_page_query_t;
typedef struct _5567FEF96CECDEB28576E12650BB4F71 __Request__processor_set_info_t;
typedef struct _CD97E842BE97226AEDD8FA0499E21FED __Request__task_set_emulation_t;
typedef void (*cache_value_make_purgeable_cb_t)(void *value, void *user_data);
typedef int mac_proc_check_run_cs_invalid_t(struct proc *p);
typedef struct _8DDBBBE51D4822B2C8C3E806F70EB27A mach_msg_ool_ports_descriptor_t;
typedef int mpo_port_check_hold_send_once_t(struct label *task, struct label *port);
typedef int mpo_port_check_make_send_once_t(struct label *task, struct label *port);
typedef int mpo_port_check_move_send_once_t(struct label *task, struct label *port);
typedef void mpo_port_label_update_kobject_t(struct label *portlabel, int kotype);
typedef struct netsnmp_table_registration_info_s netsnmp_table_registration_info;
typedef struct processor_set_basic_info processor_set_basic_info_data_t;
typedef struct thread_background_policy thread_background_policy_data_t;
typedef struct thread_precedence_policy thread_precedence_policy_data_t;
typedef struct thread_time_constraint_policy *thread_time_constraint_policy_t;
typedef struct vm_region_submap_info_64 vm_region_submap_info_data_64_t;
enum MACRO_kDNSServiceMaxDomainName {kDNSServiceMaxDomainName = 1009,};
enum MACRO_kOSMetaClassHasInstances {kOSMetaClassHasInstances = 3691003906,};
enum MACRO_kOSMetaClassNoInsKModSet {kOSMetaClassNoInsKModSet = 3691003911,};
typedef struct _7568DFD570526C5C2FE600A63FF7542E __Reply__get_dp_control_port_t;
typedef struct _065AA4F4B3DDB89000C8C945CAC4CC2E __Reply__host_kernel_version_t;
typedef struct _B422E43E2D6C3DFAD9728BE968F369BB __Reply__host_lockgroup_info_t;
typedef struct _A1BDF64247D778F13F19FE58DA07510E __Reply__host_processor_info_t;
typedef struct _B1FA16DA0CC571429FF694D2198EB26D __Reply__host_processor_sets_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__lock_handoff_accept_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_set_seqno_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_ports_register_t;
typedef struct _6C8E198051B85F433C7E9E257C72A042 __Reply__mach_vm_region_info_t;
typedef struct _6C07615512B7E84BDE41117AEF6DE55F __Reply__processor_set_tasks_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__set_dp_control_port_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_assign_default_t;
typedef struct _488333C1932ECE7496D2930CA2056B6D __Reply__task_get_assignment_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_port_space_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_abort_safely_t;
typedef struct _2267E9288D5132BEF4B5A8B0E8AC33A6 __Reply__vm_purgable_control_t;
typedef struct _4C821A4EFE1115B5FC2C4B7C575B022E __Request__clock_alarm_reply_t;
typedef struct _F1B3AE218D4ECD7C43A384264AB43EE3 __Request__etap_trace_thread_t;
typedef struct _7B9D4C5204CA928D4D62EAAC4140ED21 __Request__host_statistics64_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_destroy_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_kobject_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__mach_ports_lookup_t;
typedef struct _E6DD5EF71C59CDBBC01C1CDDA746F1DC __Request__mach_vm_page_info_t;
typedef struct _F465ED20B10C6481709BD63930BC6003 __Request__mach_vm_read_list_t;
typedef struct _01CA16396E8E0606C9A9E0F0E20FCF07 __Request__netname_check_out_t;
typedef struct _268E73D492E0AA9543C2DAE749E4E286 __Request__processor_control_t;
typedef struct _704B6F3E1CAEFA74D31888B2D78F9F88 __Request__semaphore_destroy_t;
typedef struct _8E8217BBADE0ADE8EA72A465AE8DB052 __Request__thread_policy_get_t;
typedef struct _FC28B28F509CCD1DBFC66983DF428597 __Request__thread_policy_set_t;
typedef struct _26DC3EB05C17544AB8AFD85FB443F277 __Request__thread_set_policy_t;
typedef struct _8C51462DCCBA10E8B75CFFF786FC297E __Request__vm_map_page_query_t;
typedef struct _B0130559E5806B7D1758D14999BC33AE __Request__vm_read_overwrite_t;
typedef struct _9487B923D69225998A44A53C15C58453 __Request__vm_region_recurse_t;
typedef struct _8BAB52A5AF78D0C10584D69C8CD7C023 mach_no_senders_notification_t;
typedef struct memory_object_attr_info memory_object_attr_info_data_t;
typedef struct memory_object_perf_info memory_object_perf_info_data_t;
typedef void mpo_mbuf_label_associate_ipq_t(struct ipq *ipq, struct label *ipqlabel, struct mbuf *mbuf, struct label *mbuflabel);
typedef int mpo_socket_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
typedef int mpo_socket_label_internalize_t(struct label *label, char *element_name, char *element_data);
typedef void mpo_socketpeer_label_destroy_t(struct label *label);
typedef int mpo_vnode_check_label_update_t(struct ucred *cred, struct vnode *vp, struct label *vnodelabel, struct label *newlabel);
typedef struct netsnmp_table_data_set_storage_s netsnmp_table_data_set_storage;
typedef int (*plugin_referral_entry_callback)(char *referral, void *callback_data);
typedef struct processor_cpu_load_info processor_cpu_load_info_data_t;
typedef struct processor_set_load_info processor_set_load_info_data_t;
typedef struct vm_region_basic_info_64 vm_region_basic_info_data_64_t;
typedef struct vm_region_extended_info vm_region_extended_info_data_t;
typedef void (*xmlSchematronValidityErrorFunc)(void *ctx,  char *msg, ...);
enum MACRO_kOSMetaClassInstNoSuper {kOSMetaClassInstNoSuper = 3691003913,};
typedef struct _333F68BA2C53B7EE0F2D13B448D38F51 __Reply__host_get_UNDServer_t;
typedef struct _6FABFC1284DD1437D43532E08AE85D17 __Reply__host_get_boot_info_t;
typedef struct _1AD567D4B9681C99D01C1D9A823E24D4 __Reply__host_get_io_master_t;
typedef struct _14FA42BC96FAE132F19280844CA95DD9 __Reply__host_ipc_hash_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__host_set_UNDServer_t;
typedef struct _50450166C1D5B7E6B5FADC2BC93CD3BD __Reply__mach_port_allocate_t;
typedef struct _1A15CD9E076CE95EED0CB242AD23A728 __Reply__mach_port_get_refs_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_mod_refs_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_vm_deallocate_t;
typedef struct _5DB7049864680961BDFB9965C0ABC030 __Reply__mach_vm_page_query_t;
typedef struct _07330457B1A8E241B31DE41A5C59B575 __Reply__processor_set_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_emulation_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__ledger_terminate_t;
typedef struct _5E04D424E81EA6874558831D2FFF2B4D __Request__lock_make_stable_t;
typedef struct _25B9151150FDB1BB89C80B2A8A85F680 __Request__lock_set_destroy_t;
typedef struct _4BA0F1DBE33A7FC0F8851313161BDC9C __Request__mach_port_rename_t;
typedef struct _9582347D37BF76839153FB59D783D952 __Request__mach_vm_allocate_t;
typedef struct _9BD15C2DE3B549B6E5D91AD4D5FB2472 __Request__netname_check_in_t;
typedef struct _FFE74F33A8D4184B0115806877430EDD __Request__processor_assign_t;
typedef struct _6BC0D17B2B96A5F91967EA8653FF4084 __Request__semaphore_create_t;
typedef struct _740196A4AE4F0F1C0D656C4EF0AFE809 __Request__thread_get_state_t;
typedef struct _D01A4AC644F6B88C742A307AE9CB3F5A __Request__thread_set_state_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_terminate_t;
typedef struct _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t;
typedef  char *const_profile_filespec_list_t;
typedef unsigned long long dispatch_source_vnode_flags_t;
struct in6_rrenumreq__irr_raflagmask {unsigned char onlink : 1;unsigned char autonomous : 1;unsigned char reserved : 6;};
typedef struct _211858A17FC3AA3AF7FB370462C716CC mach_dead_name_notification_t;
typedef struct _AAF01D1DF014C088EF592F6E4410D618 mach_send_once_notification_t;
typedef int memory_object_copy_strategy_t;
typedef int mpo_ifnet_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
typedef int mpo_ifnet_label_internalize_t(struct label *label, char *element_name, char *element_data);
typedef int mpo_lctx_check_label_update_t(struct lctx *l, struct label *newlabel);
typedef int mpo_mount_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
typedef int mpo_mount_label_internalize_t(struct label *label, char *element_name, char *element_data);
typedef int mpo_port_check_hold_receive_t(struct label *task, struct label *port);
typedef int mpo_port_check_label_update_t(struct label *task, struct label *oldlabel, struct label *newlabel);
typedef int mpo_port_check_move_receive_t(struct label *task, struct label *port);
typedef int mpo_vnode_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
typedef int mpo_vnode_label_internalize_t(struct label *label, char *element_name, char *element_data);
typedef struct netsnmp_table_array_callbacks_s netsnmp_table_array_callbacks;
typedef struct policy_timeshare_limit policy_timeshare_limit_data_t;
typedef struct task_absolutetime_info task_absolutetime_info_data_t;
typedef struct task_affinity_tag_info task_affinity_tag_info_data_t;
typedef struct task_kernelmemory_info task_kernelmemory_info_data_t;
typedef struct task_thread_times_info task_thread_times_info_data_t;
typedef struct thread_affinity_policy thread_affinity_policy_data_t;
typedef struct thread_extended_policy thread_extended_policy_data_t;
typedef struct thread_identifier_info thread_identifier_info_data_t;
typedef struct thread_standard_policy thread_standard_policy_data_t;
typedef void (*xmlRelaxNGValidityWarningFunc)(void *ctx,  char *msg, ...);
enum MACRO_SECTION_ATTRIBUTES_SYS {SECTION_ATTRIBUTES_SYS = 0xFFFF00,};
enum MACRO_kOSMetaClassNoTempData {kOSMetaClassNoTempData = 3691003908,};
typedef unsigned int NSSearchPathEnumerationState;
typedef int Netsnmp_User_Row_Operation_c( void *lhs,  void *rhs);
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__clock_alarm_reply_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__etap_trace_thread_t;
typedef struct _7BD86F81607C7D3E2D088DDB92740D0D __Reply__host_statistics64_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_destroy_t;
typedef struct _5A0A32527D91D719A95F587BC624F670 __Reply__mach_port_kobject_t;
typedef struct _64173B50D5C298666AA1E07EB308B730 __Reply__mach_ports_lookup_t;
typedef struct _3997483AC20F7907AE665D7DB5ACE57D __Reply__mach_vm_page_info_t;
typedef struct _DCAF10FDD4D6724B522470D0830DC7B5 __Reply__mach_vm_read_list_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__netname_check_out_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_control_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__semaphore_destroy_t;
typedef struct _127ADBDA39FF0AF10F74B8734D022F36 __Reply__thread_policy_get_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_policy_set_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_set_policy_t;
typedef struct _5DB7049864680961BDFB9965C0ABC030 __Reply__vm_map_page_query_t;
typedef struct _A1F779EC0A67B47A0153BAA39A848A18 __Reply__vm_read_overwrite_t;
typedef struct _43EB887A7D5DDC6B5CCC173C2FB6636E __Reply__vm_region_recurse_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request___host_page_size_t;
typedef struct _33415C5C79CC87822109F3703B9299D9 __Request__exception_raise_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_processors_t;
typedef struct _75304CCD3C967214A8BD283A9F6A93D0 __Request__host_statistics_t;
typedef struct _0CA50DA063E662D611776E2530D5C630 __Request__ledger_transfer_t;
typedef struct _5E073AC1240433595621B506EB1DA983 __Request__lock_set_create_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__mach_port_names_t;
typedef struct _293AEC9DFB56700A4584D426C489FAA8 __Request__mach_vm_inherit_t;
typedef struct _492B927987B38FBFCA824A1252671E25 __Request__mach_vm_protect_t;
typedef struct _9AB293AD14E7E28F8D88B77C9D755114 __Request__netname_look_up_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__netname_version_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_start_t;
typedef struct _9CD45B6D299FC36A745AB895FED2FFAE __Request__task_policy_get_t;
typedef struct _478A0C5B06F3F085EB929445D74AA112 __Request__task_policy_set_t;
typedef struct _FB65CC25317C65F4D3C395D38114E663 __Request__task_set_policy_t;
typedef struct _9D47920389E792E7BC941BE34CEE9E53 __Request__task_set_ras_pc_t;
typedef struct _2C6E018EEF72F12BBEAF7059A87F0DBD __Request__vm_allocate_cpm_t;
typedef struct _088788A38BBC50D48DDABC82065D5C20 __Request__vm_behavior_set_t;
struct __darwin_pthread_handler_rec {void (*__routine)(void *);void *__arg;struct __darwin_pthread_handler_rec *__next;};
typedef struct _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t;
struct _opaque_pthread_rwlockattr_t {long long __sig;char __opaque[16];};
typedef unsigned long long dispatch_io_interval_flags_t;
typedef unsigned long long dispatch_source_proc_flags_t;
typedef struct kernel_resource_sizes kernel_resource_sizes_data_t;
typedef int mpo_cred_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
typedef int mpo_cred_label_internalize_t(struct label *label, char *element_name, char *element_data);
typedef int mpo_lctx_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
typedef int mpo_lctx_label_internalize_t(struct label *label, char *element_name, char *element_data);
typedef int mpo_pipe_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
typedef int mpo_pipe_label_internalize_t(struct label *label, char *element_name, char *element_data);
typedef void mpo_port_label_update_cred_t(struct label *cred, struct label *task);
typedef void mpo_posixsem_label_destroy_t(struct label *label);
typedef void mpo_posixshm_label_destroy_t(struct label *label);
typedef int mpo_task_label_externalize_t(struct label *label, char *element_name, struct sbuf *sb);
typedef int mpo_task_label_internalize_t(struct label *label, char *element_name, char *element_data);
typedef struct netsnmp_handler_registration_s netsnmp_handler_registration;
typedef struct policy_timeshare_base policy_timeshare_base_data_t;
typedef struct policy_timeshare_info policy_timeshare_info_data_t;
typedef struct rpc_routine_arg_descriptor *rpc_routine_arg_descriptor_t;
typedef struct vm_region_submap_info vm_region_submap_info_data_t;
typedef void (*xmlSchemaValidityWarningFunc)(void *ctx,  char *msg, ...);
enum MACRO_DKIOCSYNCHRONIZECACHE {DKIOCSYNCHRONIZECACHE = 536896534,};
enum MACRO_ERROR_TABLE_BASE_asn1 {ERROR_TABLE_BASE_asn1 = 1859794432,};
enum MACRO_ERROR_TABLE_BASE_k524 {ERROR_TABLE_BASE_k524 = -1750206208,};
enum MACRO_ERROR_TABLE_BASE_prof {ERROR_TABLE_BASE_prof = -1429577728,};
enum MACRO_NSLOOKUPSYMBOLINIMAGE {NSLOOKUPSYMBOLINIMAGE_OPTION_BIND = 0x0,NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_NOW = 0x1,NSLOOKUPSYMBOLINIMAGE_OPTION_BIND_FULLY = 0x2,NSLOOKUPSYMBOLINIMAGE_OPTION_RETURN_ON_ERROR = 0x4,};
enum MACRO_kOSMetaClassNoKModSet {kOSMetaClassNoKModSet = 3691003910,};
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__ledger_terminate_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__lock_make_stable_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__lock_set_destroy_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_port_rename_t;
typedef struct _160180DA3C237BA935DA764154BD82EA __Reply__mach_vm_allocate_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__netname_check_in_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_assign_t;
typedef struct _704B6F3E1CAEFA74D31888B2D78F9F88 __Reply__semaphore_create_t;
typedef struct _F4F9A6DCA893D5DB6F32B9C415A8FCA2 __Reply__thread_get_state_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_set_state_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_terminate_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__clock_get_time_t;
typedef struct _2CB2463B5AF9A96AD792E2C849F46E7F __Request__clock_set_time_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__host_zone_info_t;
typedef struct _19986235E824B34A0D641661B11CD27D __Request__mach_port_type_t;
typedef struct _EBC9A6B10C6BC0782A5CEC3196C31D82 __Request__mach_vm_region_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__mach_zone_info_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__processor_exit_t;
typedef struct _99892F497716B18479AFC6F93A6376AD __Request__processor_info_t;
typedef struct _740196A4AE4F0F1C0D656C4EF0AFE809 __Request__task_get_state_t;
typedef struct _D01A4AC644F6B88C742A307AE9CB3F5A __Request__task_set_state_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__task_terminate_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__task_zone_info_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_suspend_t;
typedef struct _opaque_pthread_condattr_t __darwin_pthread_condattr_t;
struct _opaque_pthread_mutexattr_t {long long __sig;char __opaque[8];};
typedef struct gss_krb5_lucid_context_v1 gss_krb5_lucid_context_v1_t;
typedef struct _A351D2C18B5CB7A2BB6D222C452FE9CB mach_msg_ool_descriptor32_t;
typedef struct _FFAD9CD714E6EDB3A8033A5FCDD84734 mach_msg_ool_descriptor64_t;
typedef struct _5694E020026D0F35B79D3FDB301355DE mach_msg_security_trailer_t;
typedef struct memory_object_behave_info *memory_object_behave_info_t;
typedef int mpo_bpfdesc_check_receive_t(struct bpf_d *bpf_d, struct label *bpflabel, struct ifnet *ifp, struct label *ifnetlabel);
typedef void mpo_bpfdesc_label_destroy_t(struct label *label);
typedef void mpo_ifnet_label_associate_t(struct ifnet *ifp, struct label *ifnetlabel);
typedef void mpo_inpcb_label_associate_t(struct socket *so, struct label *solabel, struct inpcb *inp, struct label *inplabel);
typedef int mpo_socketpeer_label_init_t(struct label *label, int waitok);
typedef void mpo_sysvmsg_label_destroy_t(struct label *label);
typedef void mpo_sysvmsg_label_recycle_t(struct label *label);
typedef void mpo_sysvmsq_label_destroy_t(struct label *label);
typedef void mpo_sysvmsq_label_recycle_t(struct label *label);
typedef void mpo_sysvsem_label_destroy_t(struct label *label);
typedef void mpo_sysvsem_label_recycle_t(struct label *label);
typedef void mpo_sysvshm_label_destroy_t(struct label *label);
typedef void mpo_sysvshm_label_recycle_t(struct label *shmlabel);
typedef int mpo_vnode_check_signature_t(struct vnode *vp, struct label *label, unsigned char *sha1, void *signature, int size);
typedef struct netsnmp_mib_handler_methods_s netsnmp_mib_handler_methods;
typedef struct netsnmp_oid_stash_save_info_s netsnmp_oid_stash_save_info;
typedef struct netsnmp_state_machine_input_s netsnmp_state_machine_input;
typedef struct processor_basic_info processor_basic_info_data_t;
typedef struct task_category_policy task_category_policy_data_t;
typedef struct vm_extmod_statistics vm_extmod_statistics_data_t;
typedef struct vm_region_basic_info vm_region_basic_info_data_t;
typedef int *vm_region_recurse_info_64_t;
typedef void (*xmlRelaxNGValidityErrorFunc)(void *ctx,  char *msg, ...);
enum MACRO_kOSMetaClassInternal {kOSMetaClassInternal = 3691003905,};
typedef int Netsnmp_Iterator_Loop_Data(void *iterator_ctx, netsnmp_ref_void *loop_ctx, netsnmp_ref_void *data);
typedef int Netsnmp_User_Row_Operation(void *lhs, void *rhs);
typedef struct _049C2F5371F68A7AF5021A13AE52665B __Reply___host_page_size_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__exception_raise_t;
typedef struct _23C7832C1B5305C0EFB6A337D90F166D __Reply__host_processors_t;
typedef struct _82BD275F6039C166EF4DD9B4F2A9C114 __Reply__host_statistics_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__ledger_transfer_t;
typedef struct _7CAB042C95D279B03371C67C49CFDDCE __Reply__lock_set_create_t;
typedef struct _7076454C220BCB0A4BC98C4D7957D8C3 __Reply__mach_port_names_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_vm_inherit_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_vm_protect_t;
typedef struct _D0C9668C16251A7C1942AA04B3C1BAAB __Reply__netname_look_up_t;
typedef struct _DB68657B2CF3361C93E3D336E930DDB3 __Reply__netname_version_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_start_t;
typedef struct _127ADBDA39FF0AF10F74B8734D022F36 __Reply__task_policy_get_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_policy_set_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_policy_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_ras_pc_t;
typedef struct _F11203120C87D682B8E6D27123FE2347 __Reply__vm_allocate_cpm_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__vm_behavior_set_t;
typedef struct _940BEB7FDCEBF6BD2D78705CDCB7BC00 __Request__act_get_state_t;
typedef struct _2C24181259AD7238BB41D98E89920B4F __Request__act_set_state_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__kmod_get_info_t;
typedef struct _CAE54129DDC456E19A5898FF69B86D62 __Request__ledger_create_t;
typedef struct _0FEB23DD3DAEBEB1108EF0227BA432B3 __Request__mach_vm_msync_t;
typedef struct _E31153E692B38AE6ABEA73E583DCB3CE __Request__mach_vm_remap_t;
typedef struct _8EE2A07E001F320FD50590FBAE1390E6 __Request__mach_vm_write_t;
typedef struct _89FEC8E87EEDD00C0CF28D288AB7DB30 __Request__task_set_info_t;
typedef struct _11759426EFCC6514E2B26D384F50B504 __Request__thread_assign_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_create_t;
typedef struct _960F984C3AE962B8F9E63C3D54374EB6 __Request__thread_policy_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_resume_t;
typedef struct _FDCFA80C9015498DB49FE80C74BE4ADF __Request__thread_sample_t;
typedef struct _75CD40B42DA3FE652B2050998764C1EA __Request__vm_deallocate_t;
struct __darwin_i386_thread_state {unsigned int __eax;unsigned int __ebx;unsigned int __ecx;unsigned int __edx;unsigned int __edi;unsigned int __esi;unsigned int __ebp;unsigned int __esp;unsigned int __ss;unsigned int __eflags;unsigned int __eip;unsigned int __cs;unsigned int __ds;unsigned int __es;unsigned int __fs;unsigned int __gs;};
struct __darwin_x86_debug_state32 {unsigned int __dr0;unsigned int __dr1;unsigned int __dr2;unsigned int __dr3;unsigned int __dr4;unsigned int __dr5;unsigned int __dr6;unsigned int __dr7;};
struct _opaque_pthread_condattr_t {long long __sig;char __opaque[8];};
typedef struct _ossl_old_des_ks_struct _ossl_old_des_key_schedule[16];
typedef struct gss_krb5_rfc1964_keydata gss_krb5_rfc1964_keydata_t;
typedef struct _krb5_verify_init_creds_opt krb5_verify_init_creds_opt;
struct ldap_schema_extension_item {char *lsei_name;char **lsei_values;};
typedef struct _BA1BAA97A85BF93D870BFCA3692BE7F3 mach_msg_context_trailer_t;
typedef unsigned int mach_msg_descriptor_type_t;
typedef struct _BAA0E1D2BF5986DFAC16C10809EF9355 mach_msg_port_descriptor_t;
typedef struct _1A5C2EFD679D7A6E9374F478B735BD08 mach_msg_type_descriptor_t;
typedef int mpo_ifnet_check_transmit_t(struct ifnet *ifp, struct label *ifnetlabel, struct mbuf *m, struct label *mbuflabel, int family, int type);
typedef int mpo_port_check_copy_send_t(struct label *task, struct label *port);
typedef int mpo_port_check_hold_send_t(struct label *task, struct label *port);
typedef int mpo_port_check_make_send_t(struct label *task, struct label *port);
typedef int mpo_port_check_move_send_t(struct label *task, struct label *port);
typedef void mpo_port_label_associate_t(struct label *it, struct label *st, struct label *portlabel);
typedef void mpo_socket_label_destroy_t(struct label *label);
typedef void mpo_task_label_associate_t(struct task *parent, struct task *child, struct label *parentlabel, struct label *childlabel, struct label *childportlabel);
typedef struct netsnmp_agent_request_info_s netsnmp_agent_request_info;
typedef void netsnmp_container_obj_func(void *data, void *context);
typedef struct netsnmp_data_list_saveinfo_s netsnmp_data_list_saveinfo;
typedef struct netsnmp_request_group_item_s netsnmp_request_group_item;
typedef int netsnmp_state_machine_func(struct netsnmp_state_machine_input_s *input, struct netsnmp_state_machine_step_s *step);
typedef struct netsnmp_state_machine_step_s netsnmp_state_machine_step;
typedef struct netsnmp_table_request_info_s netsnmp_table_request_info;
struct netsnmp_transport_config_s {char *key;char *value;};
typedef void *posix_spawn_file_actions_t;
typedef struct processor_set_basic_info *processor_set_basic_info_t;
typedef struct sasl_security_properties sasl_security_properties_t;
typedef struct thread_background_policy *thread_background_policy_t;
typedef struct thread_precedence_policy *thread_precedence_policy_t;
typedef int vm_machine_attribute_val_t;
typedef struct vm_region_submap_info_64 *vm_region_submap_info_64_t;
typedef void (*xmlSchemaValidityErrorFunc)(void *ctx,  char *msg, ...);
enum MACRO_NETSNMP_CALLBACK_OP {NETSNMP_CALLBACK_OP_RECEIVED_MESSAGE = 1,NETSNMP_CALLBACK_OP_TIMED_OUT = 2,NETSNMP_CALLBACK_OP_SEND_FAILED = 3,NETSNMP_CALLBACK_OP_CONNECT = 4,NETSNMP_CALLBACK_OP_DISCONNECT = 5,};
enum MACRO_NFSRV_DEADSOCKDELAY {NFSRV_DEADSOCKDELAY = 5,NFSRV_MAXWGATHERDELAY = 100,NFSRV_WGATHERDELAY = 1,};
enum MACRO_USM_LENGTH_EXPANDED {USM_LENGTH_EXPANDED_PASSPHRASE = 1048576,USM_LENGTH_KU_HASHBLOCK = 64,USM_LENGTH_P_MIN = 8,};
enum MACRO_kOSMetaClassNoDicts {kOSMetaClassNoDicts = 3691003909,};
enum MACRO_kOSMetaClassNoSuper {kOSMetaClassNoSuper = 3691003912,};
typedef void Netsnmp_Free_Data_Context(void *, struct netsnmp_iterator_info_s *);
typedef void Netsnmp_Free_Loop_Context(void *, struct netsnmp_iterator_info_s *);
typedef int Netsnmp_Iterator_Loop_Key(void *iterator_ctx, netsnmp_ref_void *loop_ctx, netsnmp_ref_void *key);
typedef void *Netsnmp_Make_Data_Context(void *loop_context, struct netsnmp_iterator_info_s *);
typedef struct PROXY_CERT_INFO_EXTENSION_st PROXY_CERT_INFO_EXTENSION;
typedef struct _FCCAD8574E122F2EFADDBD13F6972B4E __Reply__clock_get_time_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__clock_set_time_t;
typedef struct _B3220D9486325F8BA63885498B936915 __Reply__host_zone_info_t;
typedef struct _479E1DE8ADCB55C92744EDE61D84AC3C __Reply__mach_port_type_t;
typedef struct _BC7B37D8A6A0C0969EA99CA1E99D995C __Reply__mach_vm_region_t;
typedef struct _B3220D9486325F8BA63885498B936915 __Reply__mach_zone_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__processor_exit_t;
typedef struct _298BF45BC869BFBDF761AF6C0543DC18 __Reply__processor_info_t;
typedef struct _F4F9A6DCA893D5DB6F32B9C415A8FCA2 __Reply__task_get_state_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_state_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_terminate_t;
typedef struct _B3220D9486325F8BA63885498B936915 __Reply__task_zone_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_suspend_t;
typedef struct _F406E51A63C11217A91340C33516F88C __Request__kext_request_t;
typedef struct _AF6F394DED458EEBDAD15880C92DFAA7 __Request__kmod_control_t;
typedef struct _D48A1587B9C67DDCC12D42BCFEC74299 __Request__kmod_destroy_t;
typedef struct _5E04D424E81EA6874558831D2FFF2B4D __Request__lock_acquire_t;
typedef struct _5E04D424E81EA6874558831D2FFF2B4D __Request__lock_handoff_t;
typedef struct _5E04D424E81EA6874558831D2FFF2B4D __Request__lock_release_t;
typedef struct _EC3D8C1D47CD577132BD4EE7AFBF4E05 __Request__mach_vm_copy_t;
typedef struct _C73F2DA5D1FAD09FF5C310E32862AC76 __Request__mach_vm_read_t;
typedef struct _41C52BC1456A2CEC857D3659807C1386 __Request__mach_vm_wire_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__task_suspend_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__task_threads_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__thread_abort_t;
typedef struct _CDC8267DE048B2F631A00EEC2191AA35 __Request__vm_read_list_t;
typedef struct _3AD6DCE498BEF9CAF21EEA5EB590F8B6 __Request__vm_region_64_t;
typedef struct _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t;
typedef unsigned long long dispatch_io_close_flags_t;
typedef long long dispatch_queue_priority_t;
typedef struct _7CC33461F71F95EBEC0407BD799E99C2 dns_raw_resource_record_t;
typedef struct _dns_service_discovery_t *dns_service_discovery_ref;
struct err_code__err_code_normal {unsigned int ext : 1;unsigned int tbl : 2;unsigned int index : 13;unsigned int : 16;};
typedef struct host_cpu_load_info host_cpu_load_info_data_t;
typedef struct host_priority_info host_priority_info_data_t;
typedef struct _7FF86B32A3F84F15420C95DB1000946C mach_msg_ool_descriptor_t;
typedef struct mach_timebase_info mach_timebase_info_data_t;
typedef struct memory_object_attr_info *memory_object_attr_info_t;
typedef int memory_object_info_data_t[1024];
typedef struct memory_object_perf_info *memory_object_perf_info_t;
typedef void mpo_devfs_label_destroy_t(struct label *label);
typedef void mpo_ifnet_label_destroy_t(struct label *label);
typedef void mpo_ifnet_label_recycle_t(struct label *label);
typedef int mpo_inpcb_check_deliver_t(struct inpcb *inp, struct label *inplabel, struct mbuf *m, struct label *mbuflabel, int family, int type);
typedef void mpo_inpcb_label_destroy_t(struct label *label);
typedef void mpo_inpcb_label_recycle_t(struct label *label);
typedef void mpo_ipq_label_associate_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);
typedef void mpo_mount_label_destroy_t(struct label *label);
typedef void mpo_posixsem_label_init_t(struct label *label);
typedef void mpo_posixshm_label_init_t(struct label *label);
typedef void mpo_vnode_label_destroy_t(struct label *label);
typedef void mpo_vnode_label_recycle_t(struct label *label);
typedef int netsnmp_container_compare( void *lhs,  void *rhs);
typedef void *netsnmp_factory_produce_f(void);
typedef struct netsnmp_indexed_addr_pair_s netsnmp_indexed_addr_pair;
typedef struct netsnmp_mode_handler_list_s netsnmp_mode_handler_list;
typedef struct processor_cpu_load_info *processor_cpu_load_info_t;
typedef struct processor_set_load_info *processor_set_load_info_t;
typedef struct task_basic_info_32 task_basic_info_32_data_t;
typedef struct task_basic_info_64 task_basic_info_64_data_t;
typedef struct vm_page_info_basic vm_page_info_basic_data_t;
typedef struct vm_region_basic_info_64 *vm_region_basic_info_64_t;
typedef struct vm_region_extended_info *vm_region_extended_info_t;
typedef struct vm_region_top_info vm_region_top_info_data_t;
typedef int (*xmlCharEncodingOutputFunc)(unsigned char *out, int *outlen,  unsigned char *in, int *inlen);
enum xp_window_stack_mode_enum {XP_UNMAPPED = 0x0,XP_MAPPED_ABOVE = 0x1,XP_MAPPED_BELOW = 0x2,};
enum MACRO_IN_LINKLOCALNETNUM {IN_LINKLOCALNETNUM = 2851995648,IN_LOOPBACKNET = 127,};
enum MACRO_NCURSES_TERM_ENTRY {NCURSES_TERM_ENTRY_H_incl = 1,};
enum MACRO_NETSNMP_LOGHANDLER {NETSNMP_LOGHANDLER_STDOUT = 1,NETSNMP_LOGHANDLER_STDERR = 2,NETSNMP_LOGHANDLER_FILE = 3,NETSNMP_LOGHANDLER_SYSLOG = 4,NETSNMP_LOGHANDLER_CALLBACK = 5,NETSNMP_LOGHANDLER_NONE = 6,NETSNMP_SELECT_NOFLAGS = 0,NETSNMP_SELECT_NOALARMS = 1,};
enum MACRO_NETSNMP_USE_INLINE {NETSNMP_USE_INLINE = 1,};
enum MACRO_SECTION_ATTRIBUTES {SECTION_ATTRIBUTES_USR = 0xFF000000,};
enum MACRO_UNKNOWNPERMISSIONS {UNKNOWNPERMISSIONS = 453,};
enum MACRO_VM_FLAGS_SUPERPAGE {VM_FLAGS_SUPERPAGE_SIZE_2MB = 131072,VM_FLAGS_ALIAS_MASK = 4278190080,VM_FLAGS_USER_ALLOCATE = 4278665235,VM_FLAGS_USER_MAP = 4278665235,VM_FLAGS_USER_REMAP = 16385,VM_MEMORY_MALLOC = 1,VM_MEMORY_MALLOC_SMALL = 2,VM_MEMORY_MALLOC_LARGE = 3,VM_MEMORY_MALLOC_HUGE = 4,VM_MEMORY_SBRK = 5,VM_MEMORY_REALLOC = 6,VM_MEMORY_MALLOC_TINY = 7,VM_MEMORY_MALLOC_LARGE_REUSABLE = 8,VM_MEMORY_MALLOC_LARGE_REUSED = 9,VM_MEMORY_ANALYSIS_TOOL = 10,VM_MEMORY_MACH_MSG = 20,VM_MEMORY_IOKIT = 21,VM_MEMORY_STACK = 30,VM_MEMORY_GUARD = 31,VM_MEMORY_SHARED_PMAP = 32,VM_MEMORY_DYLIB = 33,VM_MEMORY_OBJC_DISPATCHERS = 34,VM_MEMORY_APPKIT = 40,VM_MEMORY_FOUNDATION = 41,VM_MEMORY_COREGRAPHICS = 42,VM_MEMORY_CARBON = 43,VM_MEMORY_JAVA = 44,VM_MEMORY_ATS = 50,VM_MEMORY_LAYERKIT = 51,VM_MEMORY_CGIMAGE = 52,VM_MEMORY_TCMALLOC = 53,VM_MEMORY_COREGRAPHICS_DATA = 54,VM_MEMORY_COREGRAPHICS_SHARED = 55,VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS = 56,VM_MEMORY_COREGRAPHICS_BACKINGSTORES = 57,VM_MEMORY_COREGRAPHICS_MISC = 42,VM_MEMORY_DYLD = 60,VM_MEMORY_DYLD_MALLOC = 61,VM_MEMORY_SQLITE = 62,VM_MEMORY_JAVASCRIPT_CORE = 63,VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR = 64,VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE = 65,VM_MEMORY_GLSL = 66,VM_MEMORY_OPENCL = 67,VM_MEMORY_COREIMAGE = 68,VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS = 69,VM_MEMORY_IMAGEIO = 70,VM_MEMORY_COREPROFILE = 71,VM_MEMORY_ASSETSD = 72,VM_MEMORY_APPLICATION_SPECIFIC_1 = 240,VM_MEMORY_APPLICATION_SPECIFIC_16 = 255,};
enum MACRO___DARWIN_MAXNAMLEN {__DARWIN_MAXNAMLEN = 255,__DARWIN_MAXPATHLEN = 1024,};
enum MACRO_kOSMetaClassNoInit {kOSMetaClassNoInit = 3691003907,};
enum MACRO_kOSMetaClassNoKext {kOSMetaClassNoKext = 3691003915,};
enum MACRO_pseudo_AF_HDRCMPLT {pseudo_AF_HDRCMPLT = 35,};
typedef int Netsnmp_Iterator_Ctx_Dup(void *iterator_ctx, netsnmp_ref_void *loop_ctx, netsnmp_ref_void *dup_ctx, int reuse);
enum STORE_certificate_status {STORE_X509_VALID = 0x0,STORE_X509_EXPIRED = 0x1,STORE_X509_SUSPENDED = 0x2,STORE_X509_REVOKED = 0x3,};
typedef struct _F4F9A6DCA893D5DB6F32B9C415A8FCA2 __Reply__act_get_state_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__act_set_state_t;
typedef struct _6B72EC479EB324C93363DBF0210A4E09 __Reply__kmod_get_info_t;
typedef struct _FB19EE544F0F316F1E6BF9A40B1BEA34 __Reply__ledger_create_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_vm_msync_t;
typedef struct _7C98BE8D658361DF4FF7D8EB6353C72F __Reply__mach_vm_remap_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_vm_write_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_set_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_assign_t;
typedef struct _4B8804F6523751A831C00C572669AA3C __Reply__thread_create_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_policy_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_resume_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_sample_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__vm_deallocate_t;
typedef struct _6AAD439E9A60B13F59A2B34A0B1B968C __Request__clock_alarm_t;
typedef struct _669EF43B8E86E5E1B2D5831F1B9785B9 __Request__host_reboot_t;
typedef struct _AB89E1C42AC04654AD793083A62D1A9F __Request__kmod_create_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__ledger_read_t;
typedef struct _D58DA1E1B485B25D38C6421E4BA839DC __Request__mach_vm_map_t;
typedef struct _671C5A9886DEC29C4FEC63DF421615C6 __Request__task_assign_t;
typedef struct _BBF0DF368E56DACC45223BCB3DEA73E4 __Request__task_create_t;
typedef struct _29E38C6493B75A6FA6817975AF03D4C0 __Request__task_policy_t;
typedef struct _C14D86D16E65DCD7FF19482AD8623ED6 __Request__task_resume_t;
typedef struct _FDCFA80C9015498DB49FE80C74BE4ADF __Request__task_sample_t;
typedef struct _ACB9639845DE66FD3FA84A89BA11A6C6 __Request__thread_info_t;
typedef struct _5EE71EC2B6ECEB33372096427B2859E8 __Request__thread_wire_t;
typedef struct _AB09096FC22418DF5FF078E5EEC0B812 __Request__vm_allocate_t;
typedef struct _opaque_pthread_mutex_t __darwin_pthread_mutex_t;
typedef int _curl_progress_callback1(void *, double, double, double, double);
typedef int _curl_progress_callback2( void *, double, double, double, double);
struct _krb5_cryptosystem_entry;
struct _opaque_pthread_rwlock_t {long long __sig;char __opaque[192];};
struct _xmlSchematronParserCtxt;
typedef  char *const_profile_filespec_t;
typedef struct _F26177398F3106F2DD5FF971AA6CC145 dns_domain_name_record_t;
typedef struct _DB9FAB3DF43BC43027D23EAB111F29D9 dns_in6_address_record_t;
typedef int (*hasExternalSubsetSAXFunc)(void *ctx);
typedef int (*hasInternalSubsetSAXFunc)(void *ctx);
typedef struct _0FCB944A5BB18021AD7F056168D15B92 mach_msg_audit_trailer_t;
typedef struct _E0DB54FB1236B40874C7451A4BD28FF5 mach_msg_seqno_trailer_t;
typedef void mpo_bpfdesc_label_init_t(struct label *label);
typedef void mpo_cred_label_destroy_t(struct label *label);
typedef void mpo_devfs_label_update_t(struct mount *mp, struct devnode *de, struct label *delabel, struct vnode *vp, struct label *vnodelabel);
typedef void mpo_file_label_destroy_t(struct label *label);
typedef void mpo_inpcb_label_update_t(struct socket *so, struct label *solabel, struct inpcb *inp, struct label *inplabel);
typedef int mpo_iokit_check_device_t(char *devtype, struct mac_module_data *mdata);
typedef void mpo_lctx_label_destroy_t(struct label *label);
typedef void mpo_lctx_notify_create_t(struct proc *p, struct lctx *l);
typedef void mpo_mbuf_label_destroy_t(struct label *label);
typedef void mpo_netinet_icmp_reply_t(struct mbuf *m, struct label *mlabel);
typedef void mpo_pipe_label_destroy_t(struct label *label);
typedef int mpo_port_check_receive_t(struct label *task, struct label *sender);
typedef int mpo_port_check_service_t(struct label *subj, struct label *obj,  char *serv,  char *perm);
typedef int mpo_port_label_compute_t(struct label *subj, struct label *obj,  char *serv, struct label *out);
typedef void mpo_port_label_destroy_t(struct label *label);
typedef void mpo_proc_label_destroy_t(struct label *label);
typedef void mpo_sysvmsg_label_init_t(struct label *label);
typedef void mpo_sysvmsq_label_init_t(struct label *label);
typedef void mpo_sysvsem_label_init_t(struct label *label);
typedef void mpo_sysvshm_label_init_t(struct label *label);
typedef void mpo_task_label_destroy_t(struct label *label);
typedef struct netsnmp_baby_steps_modes_s netsnmp_baby_steps_modes;
typedef struct netsnmp_row_merge_status_x netsnmp_row_merge_status;
typedef struct netsnmp_stash_cache_data_s netsnmp_stash_cache_data;
typedef struct netsnmp_stash_cache_info_s netsnmp_stash_cache_info;
typedef struct netsnmp_tmStateReference_s netsnmp_tmStateReference;
typedef struct netsnmp_transport_config_s netsnmp_transport_config;
typedef struct policy_fifo_limit policy_fifo_limit_data_t;
typedef struct policy_timeshare_limit *policy_timeshare_limit_t;
struct processor_set_basic_info {int processor_count;int default_policy;};
typedef struct rpc_routine_descriptor *rpc_routine_descriptor_t;
typedef struct task_absolutetime_info *task_absolutetime_info_t;
typedef struct task_affinity_tag_info *task_affinity_tag_info_t;
typedef struct task_kernelmemory_info *task_kernelmemory_info_t;
typedef struct task_thread_times_info *task_thread_times_info_t;
typedef struct thread_affinity_policy *thread_affinity_policy_t;
typedef struct thread_basic_info thread_basic_info_data_t;
typedef struct thread_extended_policy *thread_extended_policy_t;
typedef struct thread_identifier_info *thread_identifier_info_t;
typedef struct thread_standard_policy *thread_standard_policy_t;
typedef int *vm_region_recurse_info_t;
typedef int (*xmlCharEncodingInputFunc)(unsigned char *out, int *outlen,  unsigned char *in, int *inlen);
typedef struct ldap_schema_extension_item LDAPSchemaExtensionItem;
typedef void (*LHASH_DOALL_ARG_FN_TYPE)(void *, void *);
enum MACRO_ASN1_STRFLGS_UTF8 {ASN1_STRFLGS_UTF8_CONVERT = 0x10,ASN1_STRFLGS_IGNORE_TYPE = 0x20,ASN1_STRFLGS_SHOW_TYPE = 0x40,ASN1_STRFLGS_DUMP_ALL = 0x80,ASN1_STRFLGS_DUMP_UNKNOWN = 0x100,ASN1_STRFLGS_DUMP_DER = 0x200,ASN1_STRFLGS_RFC2253 = 0x317,};
enum MACRO_EXCEPTION_DEFAULT {EXCEPTION_DEFAULT = 1,EXCEPTION_STATE = 2,EXCEPTION_STATE_IDENTITY = 3,};
enum MACRO_KRB5KDC_ERR_WRONG {KRB5KDC_ERR_WRONG_REALM = -1765328316,};
enum MACRO_KRB5KRB_AP_ERR_V4 {KRB5KRB_AP_ERR_V4_REPLY = -1765328165,};
enum MACRO_MAXTHREADNAMESIZE {MAXTHREADNAMESIZE = 64,};
enum MACRO_NUM_EXTERNAL_SIGS {NUM_EXTERNAL_SIGS = 32,};
enum MACRO_ZONE_NAME_MAX_LEN {ZONE_NAME_MAX_LEN = 80,MACH_ZONE_NAME_MAX_LEN = 80,};
enum MACRO__POSIX2_CHARCLASS {_POSIX2_CHARCLASS_NAME_MAX = 14,_POSIX2_COLL_WEIGHTS_MAX = 2,};
typedef struct _2CC85076D34FF07332855A5130D49334 NSLinkEditErrorHandlers;
typedef struct pkcs7_issuer_and_serial_st PKCS7_ISSUER_AND_SERIAL;
typedef struct _1FFFE05A05E2172C218675AE0705335F __Reply__kext_request_t;
typedef struct _207271BEEF35C1E72B41BFA669B8BAC6 __Reply__kmod_control_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__kmod_destroy_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__lock_acquire_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__lock_handoff_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__lock_release_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_vm_copy_t;
typedef struct _207271BEEF35C1E72B41BFA669B8BAC6 __Reply__mach_vm_read_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__mach_vm_wire_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_suspend_t;
typedef struct _D0AB9F48B0077248C9C221F011C15B93 __Reply__task_threads_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_abort_t;
typedef struct _7D6BE7882CE721D70B16F72EF4350FEA __Reply__vm_read_list_t;
typedef struct _A5EA39C0CE70DF2015B585156ECF8E0B __Reply__vm_region_64_t;
typedef struct _9542197A1301620A60E097220E793D31 __Request__vm_inherit_t;
typedef struct _DAF19F87D18289B2FEB9E5CF85C90F9A __Request__vm_protect_t;
typedef struct _opaque_pthread_attr_t __darwin_pthread_attr_t;
typedef struct _opaque_pthread_cond_t __darwin_pthread_cond_t;
typedef struct _opaque_pthread_once_t __darwin_pthread_once_t;
struct _opaque_pthread_mutex_t {long long __sig;char __opaque[56];};
struct _xmlSchemaAttributeLink {struct _xmlSchemaAttributeLink *next;struct _xmlSchemaAttribute *attr;};
struct _xmlSchematronValidCtxt;
struct bio_f_buffer_ctx_struct {int ibuf_size;int obuf_size;char *ibuf;int ibuf_len;int ibuf_off;char *obuf;int obuf_len;int obuf_off;};
typedef char (*cache_key_is_equal_cb_t)(void *key1, void *key2, void *user_data);
typedef void (*cache_value_retain_cb_t)(void *value_in, void *user_data);
typedef struct client_sasl_mechanism client_sasl_mechanism_t;
typedef long long (*curl_chunk_bgn_callback)( void *transfer_info, void *ptr, int remains);
typedef long long (*curl_chunk_end_callback)(void *ptr);
typedef void *dispatch_data_applier_t;
typedef void (*iconv_unicode_char_hook)(unsigned int uc, void *data);
typedef struct kernel_resource_sizes *kernel_resource_sizes_t;
typedef struct _krb5_get_init_creds_opt krb5_get_init_creds_opt;
typedef unsigned int mach_msg_copy_options_t;
typedef unsigned int mach_msg_trailer_size_t;
typedef unsigned int mach_msg_trailer_type_t;
struct mecab_dictionary_info_t { char *filename; char *charset;unsigned int size;int type;unsigned int lsize;unsigned int rsize;unsigned short version;struct mecab_dictionary_info_t *next;};
typedef int mpo_ipq_label_compare_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);
typedef void mpo_ipq_label_destroy_t(struct label *label);
typedef void mpo_lctx_label_update_t(struct lctx *l, struct label *newlabel);
typedef void mpo_lctx_notify_leave_t(struct proc *p, struct lctx *l);
typedef void mpo_netinet_tcp_reply_t(struct mbuf *m, struct label *mlabel);
typedef int mpo_port_check_method_t(struct proc *proc, struct label *task, struct label *port, int msgid);
typedef void mpo_socket_label_copy_t(struct label *src, struct label *dest);
typedef int mpo_socket_label_init_t(struct label *label, int waitok);
typedef void mpo_task_label_update_t(struct label *cred, struct label *task);
typedef struct netsnmp_delegated_cache_s netsnmp_delegated_cache;
typedef struct policy_fifo_base policy_fifo_base_data_t;
typedef struct policy_fifo_info policy_fifo_info_data_t;
typedef struct policy_timeshare_base *policy_timeshare_base_t;
typedef struct policy_timeshare_info *policy_timeshare_info_t;
struct processor_cpu_load_info {unsigned int cpu_ticks[4];};
typedef char *profile_filespec_list_t;
struct res_9_ns_tcp_tsig_state {int counter;struct dst_key *key;void *ctx;unsigned char sig[512];int siglen;};
typedef struct server_sasl_mechanism server_sasl_mechanism_t;
typedef void (*sqlite3_destructor_type)(void *);
struct subtree_context_cache_s { char *context_name;struct netsnmp_subtree_s *first_subtree;struct subtree_context_cache_s *next;};
typedef struct task_events_info task_events_info_data_t;
typedef struct task_extmod_info task_extmod_info_data_t;
typedef struct vm_region_submap_info *vm_region_submap_info_t;
typedef struct vol_capabilities_attr vol_capabilities_attr_t;
typedef struct __darwin_i386_exception_state x86_exception_state32_t;
typedef struct __darwin_x86_exception_state64 x86_exception_state64_t;
typedef struct _xmlSchemaAttributeGroup xmlSchemaAttributeGroup;
typedef struct _xmlSchematronParserCtxt xmlSchematronParserCtxt;
typedef void *xmlTextReaderLocatorPtr;
typedef  HFSUniStr255 *ConstHFSUniStr255Param;
enum MACRO_DKIOCREQUESTIDLE {DKIOCREQUESTIDLE = 536896542,};
enum MACRO_ERROR_TABLE_BASE {ERROR_TABLE_BASE_kv5m = -1760647424,};
enum MACRO_F_ALLOCATECONTIG {F_ALLOCATECONTIG = 0x2,F_ALLOCATEALL = 0x4,F_PEOFPOSMODE = 0x3,F_VOLPOSMODE = 0x4,};
enum MACRO_ICMP6_MEMBERSHIP {ICMP6_MEMBERSHIP_QUERY = 130,ICMP6_MEMBERSHIP_REPORT = 131,ICMP6_MEMBERSHIP_REDUCTION = 132,};
enum MACRO_IPV6_2292PKTINFO {IPV6_2292PKTINFO = 19,IPV6_2292HOPLIMIT = 20,IPV6_2292NEXTHOP = 21,IPV6_2292HOPOPTS = 22,IPV6_2292DSTOPTS = 23,IPV6_2292RTHDR = 24,IPV6_2292PKTOPTIONS = 25,IPV6_CHECKSUM = 26,IPV6_V6ONLY = 27,IPV6_BINDV6ONLY = 27,IPV6_IPSEC_POLICY = 28,IPV6_FAITH = 29,IPV6_FW_ADD = 30,IPV6_FW_DEL = 31,IPV6_FW_FLUSH = 32,IPV6_FW_ZERO = 33,IPV6_FW_GET = 34,IPV6_RECVTCLASS = 35,IPV6_TCLASS = 36,IPV6_BOUND_IF = 125,IPV6_RTHDR_LOOSE = 0,IPV6_RTHDR_STRICT = 1,IPV6_RTHDR_TYPE_0 = 0,IPV6_DEFAULT_MULTICAST_HOPS = 1,IPV6_DEFAULT_MULTICAST_LOOP = 1,IPV6_MIN_MEMBERSHIPS = 31,IPV6_MAX_MEMBERSHIPS = 4095,IPV6_MAX_GROUP_SRC_FILTER = 512,IPV6_MAX_SOCK_SRC_FILTER = 128,IPV6_PORTRANGE_DEFAULT = 0,IPV6_PORTRANGE_HIGH = 1,IPV6_PORTRANGE_LOW = 2,};
enum MACRO_KRB5KDC_ERR_CANT {KRB5KDC_ERR_CANT_VERIFY_CERTIFICATE = -1765328314,KRB5KDC_ERR_INVALID_CERTIFICATE = -1765328313,KRB5KDC_ERR_REVOKED_CERTIFICATE = -1765328312,KRB5KDC_ERR_REVOCATION_STATUS_UNKNOWN = -1765328311,KRB5KDC_ERR_REVOCATION_STATUS_UNAVAILABLE = -1765328310,KRB5KDC_ERR_CLIENT_NAME_MISMATCH = -1765328309,KRB5KDC_ERR_KDC_NAME_MISMATCH = -1765328308,KRB5KDC_ERR_INCONSISTENT_KEY_PURPOSE = -1765328307,KRB5KDC_ERR_DIGEST_IN_CERT_NOT_ACCEPTED = -1765328306,KRB5KDC_ERR_PA_CHECKSUM_MUST_BE_INCLUDED = -1765328305,KRB5KDC_ERR_DIGEST_IN_SIGNED_DATA_NOT_ACCEPTED = -1765328304,KRB5KDC_ERR_PUBLIC_KEY_ENCRYPTION_NOT_SUPPORTED = -1765328303,};
enum MACRO_KRB5KRB_AP_WRONG {KRB5KRB_AP_WRONG_PRINC = -1765328240,KRB5KRB_AP_ERR_TKT_INVALID = -1765328239,};
enum MACRO_KRB5PLACEHOLD_53 {KRB5PLACEHOLD_53 = -1765328331,KRB5PLACEHOLD_54 = -1765328330,KRB5PLACEHOLD_55 = -1765328329,KRB5PLACEHOLD_56 = -1765328328,KRB5PLACEHOLD_57 = -1765328327,KRB5PLACEHOLD_58 = -1765328326,KRB5PLACEHOLD_59 = -1765328325,};
enum MACRO_KRB5PLACEHOLD_82 {KRB5PLACEHOLD_82 = -1765328302,KRB5PLACEHOLD_83 = -1765328301,KRB5PLACEHOLD_84 = -1765328300,KRB5PLACEHOLD_85 = -1765328299,KRB5PLACEHOLD_86 = -1765328298,KRB5PLACEHOLD_87 = -1765328297,KRB5PLACEHOLD_88 = -1765328296,KRB5PLACEHOLD_89 = -1765328295,KRB5PLACEHOLD_90 = -1765328294,KRB5PLACEHOLD_91 = -1765328293,KRB5PLACEHOLD_92 = -1765328292,KRB5PLACEHOLD_93 = -1765328291,KRB5PLACEHOLD_94 = -1765328290,KRB5PLACEHOLD_95 = -1765328289,KRB5PLACEHOLD_96 = -1765328288,KRB5PLACEHOLD_97 = -1765328287,KRB5PLACEHOLD_98 = -1765328286,KRB5PLACEHOLD_99 = -1765328285,KRB5PLACEHOLD_100 = -1765328284,KRB5PLACEHOLD_101 = -1765328283,KRB5PLACEHOLD_102 = -1765328282,KRB5PLACEHOLD_103 = -1765328281,KRB5PLACEHOLD_104 = -1765328280,KRB5PLACEHOLD_105 = -1765328279,KRB5PLACEHOLD_106 = -1765328278,KRB5PLACEHOLD_107 = -1765328277,KRB5PLACEHOLD_108 = -1765328276,KRB5PLACEHOLD_109 = -1765328275,KRB5PLACEHOLD_110 = -1765328274,KRB5PLACEHOLD_111 = -1765328273,KRB5PLACEHOLD_112 = -1765328272,KRB5PLACEHOLD_113 = -1765328271,KRB5PLACEHOLD_114 = -1765328270,KRB5PLACEHOLD_115 = -1765328269,KRB5PLACEHOLD_116 = -1765328268,KRB5PLACEHOLD_117 = -1765328267,KRB5PLACEHOLD_118 = -1765328266,KRB5PLACEHOLD_119 = -1765328265,KRB5PLACEHOLD_120 = -1765328264,KRB5PLACEHOLD_121 = -1765328263,KRB5PLACEHOLD_122 = -1765328262,KRB5PLACEHOLD_123 = -1765328261,KRB5PLACEHOLD_124 = -1765328260,KRB5PLACEHOLD_125 = -1765328259,KRB5PLACEHOLD_126 = -1765328258,KRB5PLACEHOLD_127 = -1765328257,};
enum MACRO_LOCALDOMAINPARTS {LOCALDOMAINPARTS = 2,};
enum MACRO_MAX_AUDIT_RECORD {MAX_AUDIT_RECORD_SIZE = 32767,MIN_AUDIT_FILE_SIZE = 524288,};
enum MACRO_NETSNMP_CALLBACK {NETSNMP_CALLBACK_HIGHEST_PRIORITY = -1024,NETSNMP_CALLBACK_DEFAULT_PRIORITY = 0,NETSNMP_CALLBACK_LOWEST_PRIORITY = 1024,NETSNMP_STREAM_QUEUE_LEN = 5,NETSNMP_TRANSPORT_FLAG_STREAM = 1,NETSNMP_TRANSPORT_FLAG_LISTEN = 2,NETSNMP_TRANSPORT_FLAG_TUNNELED = 4,NETSNMP_TRANSPORT_FLAG_TMSTATE = 8,NETSNMP_TRANSPORT_FLAG_EMPTY_PKT = 16,NETSNMP_TRANSPORT_FLAG_OPENED = 32,NETSNMP_TRANSPORT_FLAG_HOSTNAME = 128,NETSNMP_TM_MAX_SECNAME = 256,NETSNMP_DONTWAIT = 128,};
enum MACRO_NETSNMP_DS_AGENT {NETSNMP_DS_AGENT_VERBOSE = 0,NETSNMP_DS_AGENT_ROLE = 1,NETSNMP_DS_AGENT_NO_ROOT_ACCESS = 2,NETSNMP_DS_AGENT_AGENTX_MASTER = 3,NETSNMP_DS_AGENT_QUIT_IMMEDIATELY = 4,NETSNMP_DS_AGENT_DISABLE_PERL = 5,NETSNMP_DS_AGENT_NO_CONNECTION_WARNINGS = 6,NETSNMP_DS_AGENT_LEAVE_PIDFILE = 7,NETSNMP_DS_AGENT_NO_CACHING = 8,NETSNMP_DS_AGENT_STRICT_DISMAN = 9,NETSNMP_DS_AGENT_DONT_RETAIN_NOTIFICATIONS = 10,NETSNMP_DS_AGENT_DONT_LOG_TCPWRAPPERS_CONNECTS = 12,NETSNMP_DS_APP_DONT_LOG = 10,NETSNMP_DS_AGENT_SKIPNFSINHOSTRESOURCES = 13,NETSNMP_DS_AGENT_PROGNAME = 0,NETSNMP_DS_AGENT_X_SOCKET = 1,NETSNMP_DS_AGENT_PORTS = 2,NETSNMP_DS_AGENT_INTERNAL_SECNAME = 3,NETSNMP_DS_AGENT_PERL_INIT_FILE = 4,NETSNMP_DS_SMUX_SOCKET = 5,NETSNMP_DS_NOTIF_LOG_CTX = 6,NETSNMP_DS_AGENT_TRAP_ADDR = 7,NETSNMP_DS_AGENT_FLAGS = 0,NETSNMP_DS_AGENT_USERID = 1,NETSNMP_DS_AGENT_GROUPID = 2,NETSNMP_DS_AGENT_AGENTX_PING_INTERVAL = 3,NETSNMP_DS_AGENT_AGENTX_TIMEOUT = 4,NETSNMP_DS_AGENT_AGENTX_RETRIES = 5,NETSNMP_DS_AGENT_X_SOCK_PERM = 6,NETSNMP_DS_AGENT_X_DIR_PERM = 7,NETSNMP_DS_AGENT_X_SOCK_USER = 8,NETSNMP_DS_AGENT_X_SOCK_GROUP = 9,NETSNMP_DS_AGENT_CACHE_TIMEOUT = 10,NETSNMP_DS_AGENT_INTERNAL_VERSION = 11,NETSNMP_DS_AGENT_INTERNAL_SECLEVEL = 12,NETSNMP_DS_AGENT_MAX_GETBULKREPEATS = 13,NETSNMP_DS_AGENT_MAX_GETBULKRESPONSES = 14,};
enum MACRO_NETSNMP_ITERATOR {NETSNMP_ITERATOR_FLAG_SORTED = 0x1,};
enum MACRO_TIOCDSIMICROCODE {TIOCDSIMICROCODE = 536900693,};
enum MACRO_VACMVIEWSPINLOCK {VACMVIEWSPINLOCK = 1,VIEWNAME = 2,};
enum MACRO___MigPackStructs {__MigPackStructs = 1,};
enum MACRO_kOSReturnSuccess {kOSReturnSuccess = 0,kOSReturnError = 3690987521,};
typedef struct Netscape_certificate_sequence NETSCAPE_CERT_SEQUENCE;
typedef void Netsnmp_Free_List_Data(void *);
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__clock_alarm_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__host_reboot_t;
typedef struct _C6E5E20E9CA57385FADCC3EC88B8E8F5 __Reply__kmod_create_t;
typedef struct _73C487D09BD8877E84E65868850A4480 __Reply__ledger_read_t;
typedef struct _160180DA3C237BA935DA764154BD82EA __Reply__mach_vm_map_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_assign_t;
typedef struct _DA3EF9D89B837FDE93915298E895B43B __Reply__task_create_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_policy_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_resume_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_sample_t;
typedef struct _BD234ABF5512865B2381E7712BF88565 __Reply__thread_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__thread_wire_t;
typedef struct _F11203120C87D682B8E6D27123FE2347 __Reply__vm_allocate_t;
typedef struct _75304CCD3C967214A8BD283A9F6A93D0 __Request__host_info_t;
typedef struct _A8165CB9074F0252F5387BFE013515BC __Request__task_info_t;
typedef struct _778EB01A7E54F11D251DAE9DCCA40C02 __Request__task_wire_t;
typedef struct _E24E91FD65EFF0F160CA6C71162442DA __Request__vm_map_64_t;
typedef struct _3AD6DCE498BEF9CAF21EEA5EB590F8B6 __Request__vm_region_t;
typedef unsigned long long __darwin_pthread_key_t;
typedef char __darwin_uuid_string_t[37];
struct _computed_attr_context;
struct _opaque_pthread_attr_t {long long __sig;char __opaque[56];};
struct _opaque_pthread_cond_t {long long __sig;char __opaque[40];};
struct _opaque_pthread_once_t {long long __sig;char __opaque[8];};
typedef int (*curl_progress_callback)(void *clientp, double dltotal, double dlnow, double ultotal, double ulnow);
typedef struct _EF3ED49D3DFE8EEF757C9F0AD64865F5 curl_version_info_data;
struct dispatch_source_type_s;
typedef  struct dispatch_source_type_s *dispatch_source_type_t;
typedef struct _457976D3B172FC6C2C90056836B3956E dk_format_capacities_t;
typedef void (*dyn_dynlock_destroy_cb)(struct CRYPTO_dynlock_value *,  char *, int);
typedef struct gss_channel_bindings_struct *gss_channel_bindings_t;
typedef struct gss_krb5_cfx_keydata gss_krb5_cfx_keydata_t;
typedef struct host_basic_info host_basic_info_data_t;
typedef struct host_sched_info host_sched_info_data_t;
typedef struct __darwin_i386_exception_state i386_exception_state_t;
typedef struct _83A491C58EE353645DD01424DEA49DDB mach_msg_mac_trailer_t;
typedef int memory_object_flavor_t;
typedef unsigned long long memory_object_offset_t;
typedef int memory_object_return_t;
typedef struct routine_descriptor mig_routine_descriptor;
typedef void mpo_devfs_label_copy_t(struct label *src, struct label *dest);
typedef void mpo_devfs_label_init_t(struct label *label);
typedef void mpo_ifnet_label_copy_t(struct label *src, struct label *dest);
typedef void mpo_ifnet_label_init_t(struct label *label);
typedef int mpo_inpcb_label_init_t(struct label *label, int flag);
typedef void mpo_ipq_label_update_t(struct mbuf *fragment, struct label *fragmentlabel, struct ipq *ipq, struct label *ipqlabel);
typedef void mpo_lctx_notify_join_t(struct proc *p, struct lctx *l);
typedef void mpo_mount_label_init_t(struct label *label);
typedef void mpo_netinet_fragment_t(struct mbuf *datagram, struct label *datagramlabel, struct mbuf *fragment, struct label *fragmentlabel);
typedef int mpo_vnode_check_stat_t(struct ucred *active_cred, struct ucred *file_cred, struct vnode *vp, struct label *label);
typedef void mpo_vnode_label_copy_t(struct label *src, struct label *dest);
typedef void mpo_vnode_label_init_t(struct label *label);
typedef struct netsnmp_oid_stash_node_s netsnmp_oid_stash_node;
typedef struct netsnmp_tdata_row_s netsnmp_table_data2row;
typedef struct netsnmp_table_data_set_s netsnmp_table_data_set;
typedef struct netsnmp_transport_list_s netsnmp_transport_list;
typedef void (*plugin_result_callback)(int rc, void *callback_data);
typedef struct policy_rr_limit policy_rr_limit_data_t;
typedef struct processor_basic_info *processor_basic_info_t;
typedef int processor_set_flavor_t;
struct sqlite3_pcache_methods {void *pArg;int (*xInit)(void *);void (*xShutdown)(void *);sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);void (*xCachesize)(sqlite3_pcache *, int nCachesize);int (*xPagecount)(sqlite3_pcache *);void *(*xFetch)(sqlite3_pcache *, unsigned int key, int createFlag);void (*xUnpin)(sqlite3_pcache *, void *, int discard);void (*xRekey)(sqlite3_pcache *, void *, unsigned int oldKey, unsigned int newKey);void (*xTruncate)(sqlite3_pcache *, unsigned int iLimit);void (*xDestroy)(sqlite3_pcache *);};
struct sqlite3_rtree_geometry {void *pContext;int nParam;double *aParam;void *pUser;void (*xDelUser)(void *);};
struct st_CRYPTO_EX_DATA_IMPL;
typedef struct task_basic_info task_basic_info_data_t;
typedef struct task_category_policy *task_category_policy_t;
typedef struct vm_extmod_statistics *vm_extmod_statistics_t;
typedef unsigned int vm_machine_attribute_t;
typedef struct vm_region_basic_info *vm_region_basic_info_t;
typedef struct vm_statistics64 vm_statistics64_data_t;
typedef struct _xmlCharEncodingHandler xmlCharEncodingHandler;
typedef int (*xmlOutputCloseCallback)(void *context);
typedef int (*xmlOutputMatchCallback)( char *filename);
typedef int (*xmlOutputWriteCallback)(void *context,  char *buffer, int len);
typedef struct _xmlSchemaAttributeLink xmlSchemaAttributeLink;
typedef struct _xmlSchemaSAXPlug xmlSchemaSAXPlugStruct;
typedef struct _xmlSchematronValidCtxt xmlSchematronValidCtxt;
typedef void (*xmlValidityWarningFunc)(void *ctx,  char *msg, ...);
enum xp_window_changes_enum {XP_ORIGIN = 0x1,XP_SIZE = 0x2,XP_BOUNDS = 0x3,XP_SHAPE = 0x4,XP_STACKING = 0x8,XP_DEPTH = 0x10,XP_COLORMAP = 0x20,XP_WINDOW_LEVEL = 0x40,XP_ATTACH_TRANSIENT = 0x80,};
struct BIT_STRING_BITNAME_st {int bitnum; char *lname; char *sname;};
typedef int LDAP_SORT_AD_CMP_PROC( char *left,  char *right);
typedef int LDAP_SORT_AV_CMP_PROC( void *left,  void *right);
enum MACRO_ICMP6_RR_PCOUSE {ICMP6_RR_PCOUSE_RAFLAGS_ONLINK = 0x80,ICMP6_RR_PCOUSE_RAFLAGS_AUTO = 0x40,ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME = 0x80,ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME = 0x40,ICMP6_RR_RESULT_FLAGS_OOB = 0x200,ICMP6_RR_RESULT_FLAGS_FORBIDDEN = 0x100,};
enum MACRO_ICMPV6CTL_STATS {ICMPV6CTL_STATS = 1,ICMPV6CTL_REDIRACCEPT = 2,ICMPV6CTL_REDIRTIMEOUT = 3,ICMPV6CTL_ND6_PRUNE = 6,ICMPV6CTL_ND6_DELAY = 8,ICMPV6CTL_ND6_UMAXTRIES = 9,ICMPV6CTL_ND6_MMAXTRIES = 10,ICMPV6CTL_ND6_USELOOPBACK = 11,ICMPV6CTL_NODEINFO = 13,ICMPV6CTL_ERRPPSLIMIT = 14,ICMPV6CTL_ND6_MAXNUDHINT = 15,ICMPV6CTL_MTUDISC_HIWAT = 16,ICMPV6CTL_MTUDISC_LOWAT = 17,ICMPV6CTL_ND6_DEBUG = 18,ICMPV6CTL_ND6_DRLIST = 19,ICMPV6CTL_ND6_PRLIST = 20,ICMPV6CTL_MLD_MAXSRCFILTER = 21,ICMPV6CTL_MLD_SOMAXSRC = 22,ICMPV6CTL_MLD_VERSION = 23,ICMPV6CTL_ND6_MAXQLEN = 24,ICMPV6CTL_ND6_ACCEPT_6TO4 = 25,ICMPV6CTL_MAXID = 26,};
enum MACRO_INADDR_LOOPBACK {INADDR_LOOPBACK = 2130706433,INADDR_NONE = 4294967295,INADDR_UNSPEC_GROUP = 3758096384,INADDR_ALLHOSTS_GROUP = 3758096385,INADDR_ALLRTRS_GROUP = 3758096386,INADDR_ALLRPTS_GROUP = 3758096406,INADDR_CARP_GROUP = 3758096402,INADDR_PFSYNC_GROUP = 3758096624,INADDR_ALLMDNS_GROUP = 3758096635,INADDR_MAX_LOCAL_GROUP = 3758096639,};
enum MACRO_MACHINE_UNKNOWN {MACHINE_UNKNOWN = 3,};
enum MACRO_MAXPHYSIO_WIRED {MAXPHYSIO_WIRED = 16777216,};
enum MACRO_MAX_AUDITSTRING {MAX_AUDITSTRING_LEN = 256,};
enum MACRO_MCAST_UNDEFINED {MCAST_UNDEFINED = 0,MCAST_INCLUDE = 1,MCAST_EXCLUDE = 2,};
enum MACRO_NCURSES_TERMCAP {NCURSES_TERMCAP_H_incl = 1,};
enum MACRO_NDRV_DELDMXSPEC {NDRV_DELDMXSPEC = 0x2,NDRV_SETDMXSPEC = 0x4,NDRV_ADDMULTICAST = 0x5,NDRV_DELMULTICAST = 0x6,};
enum MACRO_NETSNMP_DEFAULT {NETSNMP_DEFAULT_SNMP_VERSION = 2,NETSNMP_SNMPV1 = 43690,NETSNMP_SNMPV2ANY = 40960,NETSNMP_SNMPV2AUTH = 32768,NETSNMP_ALWAYS_DEBUG = 0,NETSNMP_USE_REVERSE_ASNENCODING = 1,NETSNMP_DEFAULT_ASNENCODING_DIRECTION = 1,NETSNMP_AGENT_DIRECTORY_MODE = 448,NETSNMP_MAX_PERSISTENT_BACKUPS = 10,NETSNMP_PROCMIBNUM = 2,NETSNMP_SHELLMIBNUM = 8,NETSNMP_MEMMIBNUM = 4,NETSNMP_DISKMIBNUM = 9,NETSNMP_LOADAVEMIBNUM = 10,NETSNMP_VERSIONMIBNUM = 100,NETSNMP_ERRORMIBNUM = 101,NETSNMP_AGENTID = 250,NETSNMP_HPUX9ID = 1,NETSNMP_SUNOS4ID = 2,NETSNMP_SOLARISID = 3,NETSNMP_OSFID = 4,NETSNMP_ULTRIXID = 5,NETSNMP_HPUX10ID = 6,NETSNMP_NETBSD1ID = 7,NETSNMP_FREEBSDID = 8,NETSNMP_IRIXID = 9,NETSNMP_LINUXID = 10,NETSNMP_BSDIID = 11,NETSNMP_OPENBSDID = 12,NETSNMP_WIN32ID = 13,NETSNMP_HPUX11ID = 14,NETSNMP_AIXID = 15,NETSNMP_MACOSXID = 16,NETSNMP_UNKNOWNID = 255,NETSNMP_OSTYPE = 255,NETSNMP_ENTERPRISE_OID = 8072,NETSNMP_ENTERPRISE_DOT_MIB_LENGTH = 7,NETSNMP_SYSTEM_DOT_MIB_LENGTH = 10,NETSNMP_NOTIFICATION_DOT_MIB_LENGTH = 8,NETSNMP_UCDAVIS_OID = 2021,NETSNMP_UCDAVIS_DOT_MIB_LENGTH = 7,NETSNMP_ERRORTIMELENGTH = 600,NETSNMP_EXCACHETIME = 30,NETSNMP_MAXCACHESIZE = 16000,NETSNMP_DEFDISKMINIMUMSPACE = 100000,NETSNMP_MAXREADCOUNT = 100,NETSNMP_SNMPBLOCK = 1,NETSNMP_RESTARTSLEEP = 5,NETSNMP_NUM_COMMUNITIES = 5,NETSNMP_LASTFIELD = -1,NETSNMP_TRANSPORT_UDP_DOMAIN = 1,NETSNMP_TRANSPORT_CALLBACK_DOMAIN = 1,NETSNMP_TRANSPORT_TCP_DOMAIN = 1,NETSNMP_TRANSPORT_UNIX_DOMAIN = 1,NETSNMP_TRANSPORT_UDPIPV6_DOMAIN = 1,NETSNMP_TRANSPORT_TCPIPV6_DOMAIN = 1,NETSNMP_TRANSPORT_ALIAS_DOMAIN = 1,NETSNMP_TRANSPORT_IPV4BASE_DOMAIN = 1,NETSNMP_SECMOD_USM = 1,NETSNMP_OID = 8072,NETSNMP_DOT_MIB_LENGTH = 7,NETSNMP_ENABLE_INLINE = 1,};
enum MACRO_NETSNMP_WATCHER {NETSNMP_WATCHER_DIRECT = 2147483648,};
enum MACRO_PROC_PIDLISTFDS {PROC_PIDLISTFDS = 1,PROC_PIDTASKALLINFO = 2,PROC_PIDTBSDINFO = 3,PROC_PIDTASKINFO = 4,PROC_PIDTHREADINFO = 5,PROC_PIDLISTTHREADS = 6,PROC_PIDREGIONINFO = 7,PROC_PIDREGIONPATHINFO = 8,PROC_PIDVNODEPATHINFO = 9,PROC_PIDTHREADPATHINFO = 10,PROC_PIDPATHINFO = 11,PROC_PIDPATHINFO_SIZE = 1024,PROC_PIDPATHINFO_MAXSIZE = 4096,PROC_PIDWORKQUEUEINFO = 12,PROC_PIDT_SHORTBSDINFO = 13,PROC_PIDLISTFILEPORTS = 14,PROC_PIDFDVNODEINFO = 1,PROC_PIDFDVNODEPATHINFO = 2,PROC_PIDFDSOCKETINFO = 3,PROC_PIDFDPSEMINFO = 4,PROC_PIDFDPSHMINFO = 5,PROC_PIDFDPIPEINFO = 6,PROC_PIDFDKQUEUEINFO = 7,PROC_PIDFDATALKINFO = 8,PROC_PIDFILEPORTVNODEPATHINFO = 2,PROC_PIDFILEPORTSOCKETINFO = 3,PROC_PIDFILEPORTPSHMINFO = 5,PROC_PIDFILEPORTPIPEINFO = 6,PROC_SELFSET_PCONTROL = 1,PROC_SELFSET_THREADNAME = 2,PROC_SELFSET_THREADNAME_SIZE = 63,PROC_SELFSET_VMRSRCOWNER = 3,PROC_LISTPIDSPATH_PATH_IS_VOLUME = 1,PROC_LISTPIDSPATH_EXCLUDE_EVTONLY = 2,PROC_SETPC_NONE = 0,PROC_SETPC_THROTTLEMEM = 1,PROC_SETPC_SUSPEND = 2,PROC_SETPC_TERMINATE = 3,};
enum MACRO_RPCSMALLMSGSIZE {RPCSMALLMSGSIZE = 400,};
enum MACRO_RSTATVERS_SWTCH {RSTATVERS_SWTCH = 2,RSTATVERS_ORIG = 1,};
enum MACRO_RTF_USETRAILERS {RTF_USETRAILERS = 32768,RTF_ANNOUNCE = 16384,};
enum MACRO_SNMPADMINLENGTH {SNMPADMINLENGTH = 255,};
enum MACRO_SOCK_MAXADDRLEN {SOCK_MAXADDRLEN = 255,};
enum MACRO__POSIX_ADVISORY {_POSIX_ADVISORY_INFO = -1,_POSIX_ASYNCHRONOUS_IO = -1,_POSIX_BARRIERS = -1,_POSIX_CHOWN_RESTRICTED = 200112,_POSIX_CLOCK_SELECTION = -1,_POSIX_CPUTIME = -1,_POSIX_FSYNC = 200112,_POSIX_IPV6 = 200112,_POSIX_JOB_CONTROL = 200112,_POSIX_MAPPED_FILES = 200112,_POSIX_MEMLOCK = -1,_POSIX_MEMLOCK_RANGE = -1,_POSIX_MEMORY_PROTECTION = 200112,_POSIX_MESSAGE_PASSING = -1,_POSIX_MONOTONIC_CLOCK = -1,_POSIX_NO_TRUNC = 200112,_POSIX_PRIORITIZED_IO = -1,_POSIX_PRIORITY_SCHEDULING = -1,_POSIX_RAW_SOCKETS = -1,_POSIX_READER_WRITER_LOCKS = 200112,_POSIX_REALTIME_SIGNALS = -1,_POSIX_REGEXP = 200112,_POSIX_SAVED_IDS = 200112,_POSIX_SEMAPHORES = -1,_POSIX_SHARED_MEMORY_OBJECTS = -1,_POSIX_SHELL = 200112,_POSIX_SPAWN = -1,_POSIX_SPIN_LOCKS = -1,_POSIX_SPORADIC_SERVER = -1,_POSIX_SYNCHRONIZED_IO = -1,_POSIX_THREAD_ATTR_STACKADDR = 200112,_POSIX_THREAD_ATTR_STACKSIZE = 200112,_POSIX_THREAD_CPUTIME = -1,_POSIX_THREAD_PRIO_INHERIT = -1,_POSIX_THREAD_PRIO_PROTECT = -1,_POSIX_THREAD_PRIORITY_SCHEDULING = -1,_POSIX_THREAD_PROCESS_SHARED = 200112,_POSIX_THREAD_SAFE_FUNCTIONS = 200112,_POSIX_THREAD_SPORADIC_SERVER = -1,_POSIX_THREADS = 200112,_POSIX_TIMEOUTS = -1,_POSIX_TIMERS = -1,_POSIX_TRACE = -1,_POSIX_TRACE_EVENT_FILTER = -1,_POSIX_TRACE_INHERIT = -1,_POSIX_TRACE_LOG = -1,_POSIX_TYPED_MEMORY_OBJECTS = -1,};
enum MACRO___DARWIN_LITTLE {__DARWIN_LITTLE_ENDIAN = 1234,__DARWIN_BIG_ENDIAN = 4321,__DARWIN_PDP_ENDIAN = 3412,__DARWIN_BYTE_ORDER = 1234,};
enum MACRO_joint_iso_ccitt {NID_joint_iso_ccitt = 393,OBJ_joint_iso_ccitt = 2,};
enum MACRO_joint_iso_itu_t {NID_joint_iso_itu_t = 646,OBJ_joint_iso_itu_t = 2,};
typedef int Netsnmp_Iterator_Data(void *iterator_ctx,  void *data);
typedef struct tagSQL_DAY_SECOND SQL_DAY_SECOND_STRUCT;
typedef struct tagSQL_YEAR_MONTH SQL_YEAR_MONTH_STRUCT;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__vm_inherit_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__vm_protect_t;
typedef struct _5E04D424E81EA6874558831D2FFF2B4D __Request__lock_try_t;
typedef struct _A474581121662292E5F04EE46D9A30FE __Request__vm_msync_t;
typedef struct _06E00F3ABE7F060E21CF67B7B214767C __Request__vm_remap_t;
typedef struct _456B529FC136F2DC55D26FBF7B75F342 __Request__vm_write_t;
typedef struct __darwin_fp_control __darwin_fp_control_t;
enum __ns_update_operation {ns_uop_delete = 0x0,ns_uop_add = 0x1,ns_uop_max = 0x2,};
struct _krb5_gic_opt_pa_data {char *attr;char *value;};
struct _xmlRelaxNGParserCtxt;
struct _xsltFormatNumberInfo {int integer_hash;int integer_digits;int frac_digits;int frac_hash;int group;int multiplier;char add_decimal;char is_multiplier_set;char is_negative_pattern;};
typedef void (*cache_key_retain_cb_t)(void *key_in, void **key_out, void *user_data);
typedef struct _computed_attr_context computed_attr_context;
typedef int (*curl_fnmatch_callback)(void *ptr,  char *pattern,  char *string);
typedef void *dispatch_io_handler_t;
struct dispatch_queue_attr_s;
typedef struct dispatch_queue_attr_s *dispatch_queue_attr_t;
typedef struct _F9A7ED8F42D8CCD77CCEA18A32D3B2AC dns_resource_record_t;
typedef struct CRYPTO_dynlock_value *(*dyn_dynlock_create_cb)( char *, int);
typedef struct host_load_info host_load_info_data_t;
typedef int kmod_control_flavor_t;
typedef struct _krb5_enc_kdc_rep_part krb5_enc_kdc_rep_part;
typedef union _94CB200B36B7778DB0012FD0C2F25E9C mach_msg_descriptor_t;
typedef struct _15CE29027F05B8BB8B125DB29B7163BF mach_msg_empty_send_t;
typedef struct mach_vm_info_region mach_vm_info_region_t;
typedef void mpo_cred_label_init_t(struct label *label);
typedef void mpo_file_label_init_t(struct label *label);
typedef void mpo_lctx_label_init_t(struct label *label);
typedef void mpo_mbuf_label_copy_t(struct label *src, struct label *dest);
typedef int mpo_mbuf_label_init_t(struct label *label, int flag);
typedef void mpo_pipe_label_copy_t(struct label *src, struct label *dest);
typedef void mpo_pipe_label_init_t(struct label *label);
typedef int mpo_port_check_send_t(struct label *task, struct label *port);
typedef void mpo_port_label_copy_t(struct label *src, struct label *dest);
typedef void mpo_port_label_init_t(struct label *label);
typedef void mpo_proc_label_init_t(struct label *label);
typedef void mpo_task_label_copy_t(struct label *src, struct label *dest);
typedef void mpo_task_label_init_t(struct label *label);
typedef struct netsnmp_agent_session_s netsnmp_agent_session;
typedef struct netsnmp_callback_info_s netsnmp_callback_info;
typedef struct netsnmp_callback_pass_s netsnmp_callback_pass;
typedef void *netsnmp_container_rtn(struct netsnmp_container_s *,  void *data);
typedef struct netsnmp_iterator_info_s netsnmp_iterator_info;
struct netsnmp_mib_handler_s {char *handler_name;void *myvoid;int flags;int (*access_method)(struct netsnmp_mib_handler_s *, struct netsnmp_handler_registration_s *, struct netsnmp_agent_request_info_s *, struct netsnmp_request_info_s *);void (*data_free)(void *myvoid);struct netsnmp_mib_handler_s *next;struct netsnmp_mib_handler_s *prev;};
typedef struct old_opi_cache_s netsnmp_old_api_cache;
typedef struct netsnmp_request_group_s netsnmp_request_group;
struct netsnmp_token_descr_s {char *token_name;char enabled;};
typedef struct variable_list netsnmp_variable_list;
typedef struct _passwd_phrase_element passwd_phrase_element;
typedef struct policy_rr_base policy_rr_base_data_t;
typedef struct policy_rr_info policy_rr_info_data_t;
typedef struct sasl_canonuser sasl_canonuser_plug_t;
struct sqlite3_mutex_methods {int (*xMutexInit)(void);int (*xMutexEnd)(void);sqlite3_mutex *(*xMutexAlloc)(int);void (*xMutexFree)(sqlite3_mutex *);void (*xMutexEnter)(sqlite3_mutex *);int (*xMutexTry)(sqlite3_mutex *);void (*xMutexLeave)(sqlite3_mutex *);int (*xMutexHeld)(sqlite3_mutex *);int (*xMutexNotheld)(sqlite3_mutex *);};
typedef struct subtree_context_cache_s subtree_context_cache;
typedef struct task_dyld_info task_dyld_info_data_t;
typedef int thread_state_flavor_t;
typedef int vm_page_info_flavor_t;
typedef int vm_region_info_data_t[1024];
typedef struct vol_attributes_attr vol_attributes_attr_t;
typedef struct x86_exception_state x86_exception_state_t;
typedef int (*xmlInputCloseCallback)(void *context);
typedef int (*xmlInputMatchCallback)( char *filename);
typedef void *(*xmlOutputOpenCallback)( char *filename);
typedef struct _xmlXPathParserContext xmlXPathParserContext;
typedef struct xp_window_state_event_struct xp_window_state_event;
typedef struct asn1_string_st ASN1_GENERALIZEDTIME;
typedef struct ASN1_PRIMITIVE_FUNCS_st ASN1_PRIMITIVE_FUNCS;
typedef struct asn1_string_st ASN1_PRINTABLESTRING;
typedef struct asn1_string_st ASN1_UNIVERSALSTRING;
typedef struct crypto_ex_data_func_st CRYPTO_EX_DATA_FUNCS;
enum MACRO_AUDIT_MAX_ARGS {AUDIT_MAX_ARGS = 128,AUDIT_MAX_ENV = 128,};
enum MACRO_B_ADAPTORSHIFT {B_ADAPTORSHIFT = 24,B_ADAPTORMASK = 15,B_CONTROLLERSHIFT = 20,B_CONTROLLERMASK = 15,B_UNITSHIFT = 16,B_UNITMASK = 255,B_PARTITIONSHIFT = 8,B_PARTITIONMASK = 255,B_TYPESHIFT = 0,B_TYPEMASK = 255,B_MAGICMASK = 4026531840,B_DEVMAGIC = 2684354560,};
enum MACRO_CURL_IPRESOLVE {CURL_IPRESOLVE_WHATEVER = 0,CURL_IPRESOLVE_V4 = 1,CURL_IPRESOLVE_V6 = 2,CURL_REDIR_GET_ALL = 0,CURL_REDIR_POST_301 = 1,CURL_REDIR_POST_302 = 2,CURL_REDIR_POST_ALL = 3,};
enum MACRO_DOT3COMPLIANCE {DOT3COMPLIANCE_STATS = 1,DOT3COMPLIANCE_COLLS = 2,};
enum MACRO_KRB5KRB_AP_ERR {KRB5KRB_AP_ERR_USER_TO_USER_REQUIRED = -1765328315,};
enum MACRO_MACH_EXCEPTION {MACH_EXCEPTION_CODES = 0x80000000,};
enum MACRO_MAXHOSTNAMELEN {MAXHOSTNAMELEN = 256,};
enum MACRO_MIB_REGISTERED {MIB_REGISTERED_OK = 0,MIB_DUPLICATE_REGISTRATION = -1,MIB_REGISTRATION_FAILED = -2,MIB_UNREGISTERED_OK = 0,MIB_NO_SUCH_REGISTRATION = -1,MIB_UNREGISTRATION_FAILED = -2,};
enum MACRO_NCURSES_BUTTON {NCURSES_BUTTON_RELEASED = 0x1,NCURSES_BUTTON_PRESSED = 0x2,NCURSES_BUTTON_CLICKED = 0x4,NCURSES_DOUBLE_CLICKED = 0x8,NCURSES_TRIPLE_CLICKED = 0x10,NCURSES_RESERVED_EVENT = 0x20,};
enum MACRO_NETSNMP_OLDAPI {NETSNMP_OLDAPI_RONLY = 0x1,NETSNMP_OLDAPI_RWRITE = 0x2,NETSNMP_OLDAPI_NOACCESS = 0x0,};
enum MACRO_NETSNMP_STRING {NETSNMP_STRING_OUTPUT_GUESS = 1,NETSNMP_STRING_OUTPUT_ASCII = 2,NETSNMP_STRING_OUTPUT_HEX = 3,NETSNMP_OID_OUTPUT_SUFFIX = 1,NETSNMP_OID_OUTPUT_MODULE = 2,NETSNMP_OID_OUTPUT_FULL = 3,NETSNMP_OID_OUTPUT_NUMERIC = 4,NETSNMP_OID_OUTPUT_UCD = 5,NETSNMP_OID_OUTPUT_NONE = 6,};
enum MACRO_NFS_MAXPATHLEN {NFS_MAXPATHLEN = 1024,NFS_MAXNAMLEN = 255,NFS_MAXPACKET = 16777216,NFS_UDPSOCKBUF = 229376,NFS_FABLKSIZE = 512,};
enum MACRO_NOT_CHECKED_IN {NETNAME_NOT_CHECKED_IN = 1001,NAME_NOT_CHECKED_IN = 1001,};
enum MACRO_NSUNLINKMODULE {NSUNLINKMODULE_OPTION_NONE = 0x0,NSUNLINKMODULE_OPTION_KEEP_MEMORY_MAPPED = 0x1,NSUNLINKMODULE_OPTION_RESET_LAZY_REFERENCES = 0x2,};
enum MACRO_PIPE_MINDIRECT {PIPE_MINDIRECT = 8192,};
enum MACRO_PMAPVERS_PROTO {PMAPVERS_PROTO = 2,PMAPVERS_ORIG = 1,};
enum MACRO_PTHREAD_CREATE {PTHREAD_CREATE_JOINABLE = 1,PTHREAD_CREATE_DETACHED = 2,PTHREAD_INHERIT_SCHED = 1,PTHREAD_EXPLICIT_SCHED = 2,PTHREAD_CANCEL_ENABLE = 1,PTHREAD_CANCEL_DISABLE = 0,PTHREAD_CANCEL_DEFERRED = 2,PTHREAD_CANCEL_ASYNCHRONOUS = 0,PTHREAD_CANCELED = 1,PTHREAD_SCOPE_SYSTEM = 1,PTHREAD_SCOPE_PROCESS = 2,PTHREAD_PROCESS_SHARED = 1,PTHREAD_PROCESS_PRIVATE = 2,PTHREAD_PRIO_NONE = 0,PTHREAD_PRIO_INHERIT = 1,PTHREAD_PRIO_PROTECT = 2,PTHREAD_MUTEX_NORMAL = 0,PTHREAD_MUTEX_ERRORCHECK = 1,PTHREAD_MUTEX_RECURSIVE = 2,PTHREAD_MUTEX_DEFAULT = 0,};
enum MACRO_RESERVED_EVENT {BUTTON1_RESERVED_EVENT = 32,BUTTON2_RESERVED_EVENT = 2048,BUTTON3_RESERVED_EVENT = 131072,BUTTON4_RESERVED_EVENT = 8388608,};
enum MACRO_SACK_PERMITTED {TCPOPT_SACK_PERMITTED = 4,TCPOLEN_SACK_PERMITTED = 2,};
enum MACRO_SECURITYSTATUS {SECURITYSTATUS = 5,};
enum MACRO_SIG_REGISTERED {SIG_REGISTERED_OK = 0,SIG_REGISTRATION_FAILED = -2,SIG_UNREGISTERED_OK = 0,};
enum MACRO_SUPERPAGE_SIZE {SUPERPAGE_SIZE_2MB = 2,};
enum MACRO_TCPOLEN_TSTAMP {TCPOLEN_TSTAMP_APPA = 12,};
enum MACRO_THREAD_MACHINE {THREAD_MACHINE_STATE_MAX = 144,};
enum MACRO_VERSION_NUMBER {OPENSSL_VERSION_NUMBER = 0x90812F,SSLEAY_VERSION_NUMBER = 0x90812F,};
enum MACRO_XML_SUBSTITUTE {XML_SUBSTITUTE_NONE = 0,XML_SUBSTITUTE_REF = 1,XML_SUBSTITUTE_PEREF = 2,XML_SUBSTITUTE_BOTH = 3,XML_SCHEMAS_ANYATTR_SKIP = 1,XML_SCHEMAS_ANYATTR_LAX = 2,XML_SCHEMAS_ANYATTR_STRICT = 3,XML_SCHEMAS_ANY_SKIP = 1,XML_SCHEMAS_ANY_LAX = 2,XML_SCHEMAS_ANY_STRICT = 3,XML_SCHEMAS_ATTR_USE_PROHIBITED = 0,XML_SCHEMAS_ATTR_USE_REQUIRED = 1,XML_SCHEMAS_ATTR_USE_OPTIONAL = 2,XML_SCHEMAS_ATTR_GLOBAL = 1,XML_SCHEMAS_ATTR_NSDEFAULT = 128,XML_SCHEMAS_ATTR_INTERNAL_RESOLVED = 256,XML_SCHEMAS_ATTR_FIXED = 512,XML_SCHEMAS_WILDCARD_COMPLETE = 1,XML_SCHEMAS_ATTRGROUP_WILDCARD_BUILDED = 1,XML_SCHEMAS_ATTRGROUP_GLOBAL = 2,XML_SCHEMAS_ATTRGROUP_MARKED = 4,XML_SCHEMAS_ATTRGROUP_REDEFINED = 8,XML_SCHEMAS_ATTRGROUP_HAS_REFS = 16,XML_SCHEMAS_TYPE_MIXED = 1,XML_SCHEMAS_TYPE_DERIVATION_METHOD_EXTENSION = 2,XML_SCHEMAS_TYPE_DERIVATION_METHOD_RESTRICTION = 4,XML_SCHEMAS_TYPE_GLOBAL = 8,XML_SCHEMAS_TYPE_OWNED_ATTR_WILDCARD = 16,XML_SCHEMAS_TYPE_VARIETY_ABSENT = 32,XML_SCHEMAS_TYPE_VARIETY_LIST = 64,XML_SCHEMAS_TYPE_VARIETY_UNION = 128,XML_SCHEMAS_TYPE_VARIETY_ATOMIC = 256,XML_SCHEMAS_TYPE_FINAL_EXTENSION = 512,XML_SCHEMAS_TYPE_FINAL_RESTRICTION = 1024,XML_SCHEMAS_TYPE_FINAL_LIST = 2048,XML_SCHEMAS_TYPE_FINAL_UNION = 4096,XML_SCHEMAS_TYPE_FINAL_DEFAULT = 8192,XML_SCHEMAS_TYPE_BUILTIN_PRIMITIVE = 16384,XML_SCHEMAS_TYPE_MARKED = 65536,XML_SCHEMAS_TYPE_BLOCK_DEFAULT = 131072,XML_SCHEMAS_TYPE_BLOCK_EXTENSION = 262144,XML_SCHEMAS_TYPE_BLOCK_RESTRICTION = 524288,XML_SCHEMAS_TYPE_ABSTRACT = 1048576,XML_SCHEMAS_TYPE_FACETSNEEDVALUE = 2097152,XML_SCHEMAS_TYPE_INTERNAL_RESOLVED = 4194304,XML_SCHEMAS_TYPE_INTERNAL_INVALID = 8388608,XML_SCHEMAS_TYPE_WHITESPACE_PRESERVE = 16777216,XML_SCHEMAS_TYPE_WHITESPACE_REPLACE = 33554432,XML_SCHEMAS_TYPE_WHITESPACE_COLLAPSE = 67108864,XML_SCHEMAS_TYPE_HAS_FACETS = 134217728,XML_SCHEMAS_TYPE_NORMVALUENEEDED = 268435456,XML_SCHEMAS_TYPE_FIXUP_1 = 536870912,XML_SCHEMAS_TYPE_REDEFINED = 1073741824,XML_SCHEMAS_ELEM_NILLABLE = 1,XML_SCHEMAS_ELEM_GLOBAL = 2,XML_SCHEMAS_ELEM_DEFAULT = 4,XML_SCHEMAS_ELEM_FIXED = 8,XML_SCHEMAS_ELEM_ABSTRACT = 16,XML_SCHEMAS_ELEM_TOPLEVEL = 32,XML_SCHEMAS_ELEM_REF = 64,XML_SCHEMAS_ELEM_NSDEFAULT = 128,XML_SCHEMAS_ELEM_INTERNAL_RESOLVED = 256,XML_SCHEMAS_ELEM_CIRCULAR = 512,XML_SCHEMAS_ELEM_BLOCK_ABSENT = 1024,XML_SCHEMAS_ELEM_BLOCK_EXTENSION = 2048,XML_SCHEMAS_ELEM_BLOCK_RESTRICTION = 4096,XML_SCHEMAS_ELEM_BLOCK_SUBSTITUTION = 8192,XML_SCHEMAS_ELEM_FINAL_ABSENT = 16384,XML_SCHEMAS_ELEM_FINAL_EXTENSION = 32768,XML_SCHEMAS_ELEM_FINAL_RESTRICTION = 65536,XML_SCHEMAS_ELEM_SUBST_GROUP_HEAD = 131072,XML_SCHEMAS_ELEM_INTERNAL_CHECKED = 262144,XML_SCHEMAS_FACET_UNKNOWN = 0,XML_SCHEMAS_FACET_PRESERVE = 1,XML_SCHEMAS_FACET_REPLACE = 2,XML_SCHEMAS_FACET_COLLAPSE = 3,XML_SCHEMAS_QUALIF_ELEM = 1,XML_SCHEMAS_QUALIF_ATTR = 2,XML_SCHEMAS_FINAL_DEFAULT_EXTENSION = 4,XML_SCHEMAS_FINAL_DEFAULT_RESTRICTION = 8,XML_SCHEMAS_FINAL_DEFAULT_LIST = 16,XML_SCHEMAS_FINAL_DEFAULT_UNION = 32,XML_SCHEMAS_BLOCK_DEFAULT_EXTENSION = 64,XML_SCHEMAS_BLOCK_DEFAULT_RESTRICTION = 128,XML_SCHEMAS_BLOCK_DEFAULT_SUBSTITUTION = 256,XML_SCHEMAS_INCLUDING_CONVERT_NS = 512,};
enum MACRO_XSLT_TIMESTAMP {XSLT_TIMESTAMP_TICS_PER_SEC = 100000,};
enum MACRO__POSIX_PTHREAD {_POSIX_PTHREAD_SEMANTICS = 1,};
enum MACRO___MigTypeCheck {__MigTypeCheck = 1,};
enum MACRO_priv_MSG_COUNT {clock_priv_MSG_COUNT = 2,host_priv_MSG_COUNT = 26,};
typedef void NetSNMPStashFreeNode(void *);
typedef int Netsnmp_Iterator_Ctx(void *iterator_ctx, netsnmp_ref_void *loop_ctx);
struct X509_POLICY_CACHE_st;
struct X509_POLICY_LEVEL_st;
typedef struct _82BD275F6039C166EF4DD9B4F2A9C114 __Reply__host_info_t;
typedef struct _72CFD36915A4C95088F1A8826EB17983 __Reply__task_info_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__task_wire_t;
typedef struct _F11203120C87D682B8E6D27123FE2347 __Reply__vm_map_64_t;
typedef struct _A5EA39C0CE70DF2015B585156ECF8E0B __Reply__vm_region_t;
typedef struct _0E6CC5D607D299E0B4EAC6FD047D8F10 __Request__vm_copy_t;
typedef struct _75CD40B42DA3FE652B2050998764C1EA __Request__vm_read_t;
typedef struct _2BBFCDCB7AAC56598321865C412EDD95 __Request__vm_wire_t;
typedef struct __darwin_fp_status __darwin_fp_status_t;
typedef unsigned char _ossl_old_des_cblock[8];
struct _xmlRelaxNGValidCtxt;
struct _xmlSchemaParserCtxt;
struct asn1_string_table_st {int nid;long long minsize;long long maxsize;unsigned long long mask;unsigned long long flags;};
typedef struct _D896310976FBD32B984A6ABA327F9588 au_socketinet_ex32_t;
typedef unsigned int bootstrap_property_t;
typedef char *(*curl_strdup_callback)( char *str);
typedef struct dispatch_semaphore_s *dispatch_semaphore_t;
typedef struct _6D6FBD65E5352D7C5B2633444A27C2EA dk_format_capacity_t;
typedef struct _82604E0BCB50E4D0B690A798AE0B3CDE dns_address_record_t;
typedef int (*dyn_lock_add_lock_cb)(int *, int, int,  char *, int);
typedef int exception_behavior_t;
typedef struct fbootstraptransfer fbootstraptransfer_t;
typedef struct gss_krb5_lucid_key gss_krb5_lucid_key_t;
typedef struct host_cpu_load_info *host_cpu_load_info_t;
typedef struct host_priority_info *host_priority_info_t;
typedef struct ipc_info_tree_name ipc_info_tree_name_t;
typedef struct _krb5_ap_rep_enc_part krb5_ap_rep_enc_part;
typedef  krb5_principal_data *krb5_const_principal;
typedef struct _krb5_gic_opt_pa_data krb5_gic_opt_pa_data;
struct ldap_apifeature_info {int ldapaif_info_version;char *ldapaif_name;int ldapaif_version;};
typedef struct _9AA8814A56848052027B4042AE3CFED4 mach_msg_empty_rcv_t;
typedef unsigned int mach_msg_type_name_t;
typedef struct mach_timebase_info *mach_timebase_info_t;
typedef struct mach_vm_read_entry mach_vm_read_entry_t[256];
struct mecab_learner_node_t {struct mecab_learner_node_t *prev;struct mecab_learner_node_t *next;struct mecab_learner_node_t *enext;struct mecab_learner_node_t *bnext;struct mecab_learner_path_t *rpath;struct mecab_learner_path_t *lpath;struct mecab_learner_node_t *anext; char *surface; char *feature;unsigned int id;unsigned short length;unsigned short rlength;unsigned short rcAttr;unsigned short lcAttr;unsigned short posid;unsigned char char_type;unsigned char stat;unsigned char isbest;double alpha;double beta;short wcost2;double wcost;double cost; int *fvector;struct mecab_token_t *token;};
struct mecab_learner_path_t {struct mecab_learner_node_t *rnode;struct mecab_learner_path_t *rnext;struct mecab_learner_node_t *lnode;struct mecab_learner_path_t *lnext;double cost; int *fvector;};
typedef int *memory_object_info_t;
typedef unsigned long long memory_object_size_t;
typedef int mpo_ipq_label_init_t(struct label *label, int flag);
typedef void mpo_policy_destroy_t(struct mac_policy_conf *mpc);
typedef void mpo_policy_initbsd_t(struct mac_policy_conf *mpc);
typedef struct netsnmp_iterator_s *netsnmp_container_it(struct netsnmp_container_s *);
typedef int netsnmp_container_op(struct netsnmp_container_s *,  void *data);
typedef int netsnmp_container_rc(struct netsnmp_container_s *);
typedef struct netsnmp_handler_args_s netsnmp_handler_args;
typedef void *netsnmp_iterator_rtn(struct netsnmp_iterator_s *);
typedef struct netsnmp_large_fd_set_s netsnmp_large_fd_set;
typedef struct netsnmp_old_api_info_s netsnmp_old_api_info;
typedef struct netsnmp_request_info_s netsnmp_request_info;
typedef struct netsnmp_scalar_group_s netsnmp_scalar_group;
typedef struct netsnmp_watcher_info_s netsnmp_watcher_info;
enum passpolicyerror_enum {PP_passwordExpired = 0x0,PP_accountLocked = 0x1,PP_changeAfterReset = 0x2,PP_passwordModNotAllowed = 0x3,PP_mustSupplyOldPassword = 0x4,PP_insufficientPasswordQuality = 0x5,PP_passwordTooShort = 0x6,PP_passwordTooYoung = 0x7,PP_passwordInHistory = 0x8,PP_noError = 0xFFFF,};
typedef struct routine_descriptor *routine_descriptor_t;
typedef struct sasl_client_params sasl_client_params_t;
typedef struct sasl_server_params sasl_server_params_t;
typedef void (*startDocumentSAXFunc)(void *ctx);
typedef struct task_basic_info_32 *task_basic_info_32_t;
typedef struct task_basic_info_64 *task_basic_info_64_t;
typedef struct vm_page_info_basic *vm_page_info_basic_t;
typedef struct vm_region_top_info *vm_region_top_info_t;
typedef struct vm_statistics vm_statistics_data_t;
typedef struct __darwin_i386_thread_state x86_thread_state32_t;
typedef struct __darwin_x86_thread_state64 x86_thread_state64_t;
typedef void *(*xmlInputOpenCallback)( char *filename);
typedef int (*xmlInputReadCallback)(void *context, char *buffer, int len);
typedef struct _xmlParserInputBuffer xmlParserInputBuffer;
typedef struct _xmlParserNodeInfoSeq xmlParserNodeInfoSeq;
typedef struct _xmlRelaxNGParserCtxt xmlRelaxNGParserCtxt;
typedef char *(*xmlShellReadlineFunc)(char *prompt);
typedef void (*xmlValidityErrorFunc)(void *ctx,  char *msg, ...);
typedef struct xp_async_error_event_struct xp_async_error_event;
enum xp_composite_op_enum {XP_COMPOSITE_SRC = 0x0,XP_COMPOSITE_OVER = 0x1,};
enum xp_init_options_enum {XP_IN_BACKGROUND = 0x1,XP_BACKGROUND_EVENTS = 0x2,};
enum xp_request_type_enum {XP_REQUEST_NIL = 0x0,XP_REQUEST_DESTROY_WINDOW = 0x1,XP_REQUEST_CONFIGURE_WINDOW = 0x2,XP_REQUEST_FLUSH_WINDOW = 0x3,XP_REQUEST_COPY_WINDOW = 0x4,XP_REQUEST_UNLOCK_WINDOW = 0x5,XP_REQUEST_DISABLE_UPDATE = 0x6,XP_REQUEST_REENABLE_UPDATE = 0x7,XP_REQUEST_HIDE_CURSOR = 0x8,XP_REQUEST_SHOW_CURSOR = 0x9,XP_REQUEST_FRAME_DRAW = 0xA,};
enum xp_window_state_enum {XP_WINDOW_STATE_OFFSCREEN = 0x1,XP_WINDOW_STATE_OBSCURED = 0x2,};
typedef void (*xsltDropCallCallback)(void);
typedef struct _xsltFormatNumberInfo xsltFormatNumberInfo;
typedef struct _xsltTransformContext xsltTransformContext;
typedef struct st_CRYPTO_EX_DATA_IMPL CRYPTO_EX_DATA_IMPL;
typedef int (*ENGINE_GEN_FUNC_PTR)(void);
typedef HFSPlusExtentDescriptor HFSPlusExtentRecord[8];
typedef struct ldap_matchingruleuse LDAPMatchingRuleUse;
typedef void (*LHASH_DOALL_FN_TYPE)(void *);
enum MACRO_ASN_IPADDRESS {ASN_IPADDRESS = 64,ASN_COUNTER = 65,ASN_GAUGE = 66,ASN_UNSIGNED = 66,ASN_TIMETICKS = 67,ASN_OPAQUE = 68,ASN_NSAP = 69,ASN_COUNTER64 = 70,ASN_UINTEGER = 71,ASN_FLOAT = 72,ASN_DOUBLE = 73,ASN_INTEGER64 = 74,ASN_UNSIGNED64 = 75,};
enum MACRO_BOOTPARAMPROC {BOOTPARAMPROC_WHOAMI = 1,BOOTPARAMPROC_GETFILE = 2,};
enum MACRO_BOOTPARAMPROG {BOOTPARAMPROG = 100026,};
enum MACRO_BOOTPARAMVERS {BOOTPARAMVERS = 1,};
enum MACRO_CURLFINFOFLAG {CURLFINFOFLAG_KNOWN_FILENAME = 1,CURLFINFOFLAG_KNOWN_FILETYPE = 2,CURLFINFOFLAG_KNOWN_TIME = 4,CURLFINFOFLAG_KNOWN_PERM = 8,CURLFINFOFLAG_KNOWN_UID = 16,CURLFINFOFLAG_KNOWN_GID = 32,CURLFINFOFLAG_KNOWN_SIZE = 64,CURLFINFOFLAG_KNOWN_HLINKCOUNT = 128,};
enum MACRO_DIGEST_LENGTH {SHA224_DIGEST_LENGTH = 28,SHA256_DIGEST_LENGTH = 32,SHA384_DIGEST_LENGTH = 48,SHA512_DIGEST_LENGTH = 64,};
enum MACRO_DISPATCH_TIME {DISPATCH_TIME_NOW = 0,DISPATCH_TIME_FOREVER = -1,DISPATCH_QUEUE_PRIORITY_HIGH = 2,DISPATCH_QUEUE_PRIORITY_DEFAULT = 0,DISPATCH_QUEUE_PRIORITY_LOW = -2,DISPATCH_QUEUE_PRIORITY_BACKGROUND = -32768,DISPATCH_QUEUE_SERIAL = 0,DISPATCH_TARGET_QUEUE_DEFAULT = 0,DISPATCH_MACH_SEND_DEAD = 1,DISPATCH_PROC_EXIT = 2147483648,DISPATCH_PROC_FORK = 1073741824,DISPATCH_PROC_EXEC = 536870912,DISPATCH_PROC_SIGNAL = 134217728,DISPATCH_VNODE_DELETE = 1,DISPATCH_VNODE_WRITE = 2,DISPATCH_VNODE_EXTEND = 4,DISPATCH_VNODE_ATTRIB = 8,DISPATCH_VNODE_LINK = 16,DISPATCH_VNODE_RENAME = 32,DISPATCH_VNODE_REVOKE = 64,DISPATCH_DATA_DESTRUCTOR_DEFAULT = 0,DISPATCH_IO_STREAM = 0,DISPATCH_IO_RANDOM = 1,DISPATCH_IO_STOP = 1,DISPATCH_IO_STRICT_INTERVAL = 1,};
enum MACRO_DTLS1_VERSION {DTLS1_VERSION = 0xFEFF,DTLS1_BAD_VER = 0x100,DTLS1_COOKIE_LENGTH = 0x100,DTLS1_RT_HEADER_LENGTH = 0xD,DTLS1_HM_HEADER_LENGTH = 0xC,DTLS1_HM_BAD_FRAGMENT = 0xFFFFFFFFFFFFFFFE,DTLS1_HM_FRAGMENT_RETRY = 0xFFFFFFFFFFFFFFFD,DTLS1_CCS_HEADER_LENGTH = 0x1,DTLS1_AL_HEADER_LENGTH = 0x2,DTLS1_TMO_READ_COUNT = 0x2,DTLS1_TMO_WRITE_COUNT = 0x2,DTLS1_TMO_ALERT_COUNT = 0xC,};
enum MACRO_ENV_SEPARATOR {ENV_SEPARATOR_CHAR = 58,};
enum MACRO_FD_REGISTERED {FD_REGISTERED_OK = 0,FD_REGISTRATION_FAILED = -2,FD_UNREGISTERED_OK = 0,FD_NO_SUCH_REGISTRATION = -1,};
enum MACRO_I386_LPGBYTES {I386_LPGBYTES = 2097152,I386_LPGSHIFT = 21,I386_LPGMASK = 2097151,};
enum MACRO_ICMP6_MAXTYPE {ICMP6_MAXTYPE = 201,ICMP6_DST_UNREACH_NOROUTE = 0,ICMP6_DST_UNREACH_ADMIN = 1,ICMP6_DST_UNREACH_NOTNEIGHBOR = 2,ICMP6_DST_UNREACH_BEYONDSCOPE = 2,ICMP6_DST_UNREACH_ADDR = 3,ICMP6_DST_UNREACH_NOPORT = 4,ICMP6_TIME_EXCEED_TRANSIT = 0,ICMP6_TIME_EXCEED_REASSEMBLY = 1,ICMP6_PARAMPROB_HEADER = 0,ICMP6_PARAMPROB_NEXTHEADER = 1,ICMP6_PARAMPROB_OPTION = 2,ICMP6_INFOMSG_MASK = 128,ICMP6_NI_SUBJ_IPV6 = 0,ICMP6_NI_SUBJ_FQDN = 1,ICMP6_NI_SUBJ_IPV4 = 2,ICMP6_NI_SUCCESS = 0,ICMP6_NI_REFUSED = 1,ICMP6_NI_UNKNOWN = 2,ICMP6_ROUTER_RENUMBERING_COMMAND = 0,ICMP6_ROUTER_RENUMBERING_RESULT = 1,ICMP6_ROUTER_RENUMBERING_SEQNUM_RESET = 255,};
enum MACRO_IFMIB_IFCOUNT {IFMIB_IFCOUNT = 1,};
enum MACRO_IPPORT_BOOTPS {IPPORT_BOOTPS = 67,IPPORT_BOOTPC = 68,};
enum MACRO_IPPROTO_MAXID {IPPROTO_MAXID = 52,};
enum MACRO_IPV6CTL_MAXID {IPV6CTL_MAXID = 51,};
enum MACRO_KRB5PLACEHOLD {KRB5PLACEHOLD_30 = -1765328354,};
enum MACRO_KRB5_KEYUSAGE {KRB5_KEYUSAGE_AS_REQ_PA_ENC_TS = 1,KRB5_KEYUSAGE_KDC_REP_TICKET = 2,KRB5_KEYUSAGE_AS_REP_ENCPART = 3,KRB5_KEYUSAGE_TGS_REQ_AD_SESSKEY = 4,KRB5_KEYUSAGE_TGS_REQ_AD_SUBKEY = 5,KRB5_KEYUSAGE_TGS_REQ_AUTH_CKSUM = 6,KRB5_KEYUSAGE_TGS_REQ_AUTH = 7,KRB5_KEYUSAGE_TGS_REP_ENCPART_SESSKEY = 8,KRB5_KEYUSAGE_TGS_REP_ENCPART_SUBKEY = 9,KRB5_KEYUSAGE_AP_REQ_AUTH_CKSUM = 10,KRB5_KEYUSAGE_AP_REQ_AUTH = 11,KRB5_KEYUSAGE_AP_REP_ENCPART = 12,KRB5_KEYUSAGE_KRB_PRIV_ENCPART = 13,KRB5_KEYUSAGE_KRB_CRED_ENCPART = 14,KRB5_KEYUSAGE_KRB_SAFE_CKSUM = 15,KRB5_KEYUSAGE_APP_DATA_ENCRYPT = 16,KRB5_KEYUSAGE_APP_DATA_CKSUM = 17,KRB5_KEYUSAGE_KRB_ERROR_CKSUM = 18,KRB5_KEYUSAGE_AD_KDCISSUED_CKSUM = 19,KRB5_KEYUSAGE_AD_MTE = 20,KRB5_KEYUSAGE_AD_ITE = 21,KRB5_KEYUSAGE_GSS_TOK_MIC = 22,KRB5_KEYUSAGE_GSS_TOK_WRAP_INTEG = 23,KRB5_KEYUSAGE_GSS_TOK_WRAP_PRIV = 24,KRB5_KEYUSAGE_PA_SAM_CHALLENGE_CKSUM = 25,KRB5_KEYUSAGE_PA_SAM_CHALLENGE_TRACKID = 26,KRB5_KEYUSAGE_PA_SAM_RESPONSE = 27,KRB5_KEYUSAGE_PA_REFERRAL = 26,};
enum MACRO_MAXDOMNAMELEN {MAXDOMNAMELEN = 256,};
enum MACRO_MAXNETNAMELEN {MAXNETNAMELEN = 255,};
enum MACRO_MAXPACKETSIZE {MAXPACKETSIZE = 512,};
enum MACRO_MAXRESOLVSORT {MAXRESOLVSORT = 10,};
enum MACRO_MAX_TCPOPTLEN {MAX_TCPOPTLEN = 40,};
enum MACRO_NCURSES_PANEL {NCURSES_PANEL_H_incl = 1,};
enum MACRO_NDRV_PROTOCOL {NDRV_PROTOCOL_DESC_VERS = 1,};
enum MACRO_NETSNMP_CACHE {NETSNMP_CACHE_DONT_INVALIDATE_ON_SET = 0x1,NETSNMP_CACHE_DONT_FREE_BEFORE_LOAD = 0x2,NETSNMP_CACHE_DONT_FREE_EXPIRED = 0x4,NETSNMP_CACHE_DONT_AUTO_RELEASE = 0x8,NETSNMP_CACHE_PRELOAD = 0x10,NETSNMP_CACHE_AUTO_RELOAD = 0x20,NETSNMP_CACHE_HINT_HANDLER_ARGS = 0x1000,NETSNMP_MODE_END_ALL_MODES = 0xFFFFFFFFFFFFFC19,};
enum MACRO_NETSNMP_PARSE {NETSNMP_PARSE_ARGS_NOLOGGING = 0x1,NETSNMP_PARSE_ARGS_NOZERO = 0x2,NETSNMP_PARSE_ARGS_SUCCESS = 0x0,NETSNMP_PARSE_ARGS_SUCCESS_EXIT = 0xFFFFFFFFFFFFFFFE,NETSNMP_PARSE_ARGS_ERROR_USAGE = 0xFFFFFFFFFFFFFFFF,NETSNMP_PARSE_ARGS_ERROR = 0xFFFFFFFFFFFFFFFD,};
enum MACRO_NFS_DIRBLKSIZ {NFS_DIRBLKSIZ = 4096,NFS_TPRINTF_INITIAL_DELAY = 12,NFS_TPRINTF_DELAY = 30,};
enum MACRO_NFS_NODEALLOC {NFS_NODEALLOC = 1024,NFS_MNTALLOC = 1024,NFS_SVCALLOC = 512,NFS_ARGSVERSION_XDR = 88,NFS_XDRARGS_VERSION_0 = 0,NFS_MATTR_BITMAP_LEN = 1,NFS_MFLAG_BITMAP_LEN = 1,NFS_MATTR_FLAGS = 0,NFS_MATTR_NFS_VERSION = 1,NFS_MATTR_NFS_MINOR_VERSION = 2,NFS_MATTR_READ_SIZE = 3,NFS_MATTR_WRITE_SIZE = 4,NFS_MATTR_READDIR_SIZE = 5,NFS_MATTR_READAHEAD = 6,NFS_MATTR_ATTRCACHE_REG_MIN = 7,NFS_MATTR_ATTRCACHE_REG_MAX = 8,NFS_MATTR_ATTRCACHE_DIR_MIN = 9,NFS_MATTR_ATTRCACHE_DIR_MAX = 10,NFS_MATTR_LOCK_MODE = 11,NFS_MATTR_SECURITY = 12,NFS_MATTR_MAX_GROUP_LIST = 13,NFS_MATTR_SOCKET_TYPE = 14,NFS_MATTR_NFS_PORT = 15,NFS_MATTR_MOUNT_PORT = 16,NFS_MATTR_REQUEST_TIMEOUT = 17,NFS_MATTR_SOFT_RETRY_COUNT = 18,NFS_MATTR_DEAD_TIMEOUT = 19,NFS_MATTR_FH = 20,NFS_MATTR_FS_LOCATIONS = 21,NFS_MATTR_MNTFLAGS = 22,NFS_MATTR_MNTFROM = 23,NFS_MFLAG_SOFT = 0,NFS_MFLAG_INTR = 1,NFS_MFLAG_RESVPORT = 2,NFS_MFLAG_NOCONNECT = 3,NFS_MFLAG_DUMBTIMER = 4,NFS_MFLAG_CALLUMNT = 5,NFS_MFLAG_RDIRPLUS = 6,NFS_MFLAG_NONEGNAMECACHE = 7,NFS_MFLAG_MUTEJUKEBOX = 8,NFS_MFLAG_EPHEMERAL = 9,NFS_MFLAG_NOCALLBACK = 10,NFS_MFLAG_NONAMEDATTR = 11,NFS_MFLAG_NOACL = 12,NFS_MFLAG_ACLONLY = 13,NFS_MFLAG_NFC = 14,NFS_MFLAG_NOQUOTA = 15,NFS_MFLAG_MNTUDP = 16,NFS_MFLAG_MNTQUICK = 17,NFS_LOCK_MODE_ENABLED = 0,NFS_LOCK_MODE_DISABLED = 1,NFS_LOCK_MODE_LOCAL = 2,NFS_ARGSVERSION = 6,};
enum MACRO_NFS_TICKINTVL {NFS_TICKINTVL = 5,NFS_MAXREXMIT = 100,NFS_RETRANS = 10,NFS_TRYLATERDEL = 4,NFS_MAXGRPS = 16,NFS_MINATTRTIMO = 5,NFS_MAXATTRTIMO = 60,NFS_MINDIRATTRTIMO = 5,NFS_MAXDIRATTRTIMO = 60,NFS_IOSIZE = 1048576,NFS_RWSIZE = 32768,NFS_WSIZE = 32768,NFS_RSIZE = 32768,NFS_DGRAM_WSIZE = 8192,NFS_DGRAM_RSIZE = 8192,NFS_READDIRSIZE = 32768,NFS_DEFRAHEAD = 16,NFS_MAXRAHEAD = 128,NFS_DEFMAXASYNCWRITES = 128,NFS_DEFASYNCTHREAD = 16,NFS_MAXASYNCTHREAD = 64,NFS_ASYNCTHREADMAXIDLE = 60,NFS_DEFSTATFSRATELIMIT = 10,NFS_REQUESTDELAY = 10,};
enum MACRO_PROCESSOR_SET {PROCESSOR_SET_BASIC_INFO = 5,PROCESSOR_SET_LOAD_INFO = 4,};
enum MACRO_RETRY_TIMEOUT {CLSET_RETRY_TIMEOUT = 4,CLGET_RETRY_TIMEOUT = 5,};
enum MACRO_SECURITYGROUP {SECURITYGROUP = 3,SECURITYSTORAGE = 4,};
enum MACRO_SECURITYMODEL {SECURITYMODEL = 1,SECURITYNAME = 2,};
enum MACRO_SLC_NOSUPPORT {SLC_NOSUPPORT = 0,SLC_CANTCHANGE = 1,SLC_VARIABLE = 2,SLC_DEFAULT = 3,SLC_LEVELBITS = 3,SLC_FUNC = 0,SLC_FLAGS = 1,SLC_VALUE = 2,SLC_ACK = 128,SLC_FLUSHIN = 64,SLC_FLUSHOUT = 32,};
enum MACRO_SOL_NDRVPROTO {SOL_NDRVPROTO = 0,};
enum MACRO_SPRAYOVERHEAD {SPRAYOVERHEAD = 86,};
enum MACRO_TCPOPT_TSTAMP {TCPOPT_TSTAMP_HDR = 16844810,};
enum MACRO_TCP_RETRANSHZ {TCP_RETRANSHZ = 1000,TCP_TIMERHZ = 100,TCP_FASTTIMER_QUANTUM = 100,TCP_SLOWTIMER_QUANTUM = 500,TCP_RETRANSHZ_TO_USEC = 1000,};
enum MACRO_TIME_ABSOLUTE {TIME_ABSOLUTE = 0x0,TIME_RELATIVE = 0x1,};
enum MACRO_TSPTYPENUMBER {TSPTYPENUMBER = 25,};
enum MACRO_UDP_ADDRESSES {UDP_ADDRESSES_IN_HOST_ORDER = 1,};
enum MACRO_VACMSTRINGLEN {VACMSTRINGLEN = 34,};
enum MACRO___DARWIN_NSIG {__DARWIN_NSIG = 32,};
enum MACRO___DARWIN_NULL {__DARWIN_NULL = 0,__DARWIN_WCHAR_MAX = 2147483647,__DARWIN_WCHAR_MIN = -2147483648,__DARWIN_WEOF = -1,};
enum MACRO_pseudo_AF_KEY {pseudo_AF_KEY = 29,};
enum MACRO_pseudo_AF_PIP {pseudo_AF_PIP = 25,};
typedef int Netsnmp_Iterator_Op(void *iterator_ctx);
typedef struct PEM_Encode_Seal_st PEM_ENCODE_SEAL_CTX;
typedef struct pkcs7_signedandenveloped_st PKCS7_SIGN_ENVELOPE;
typedef struct pkcs8_priv_key_info_st PKCS8_PRIV_KEY_INFO;
typedef struct tagSQL_INTERVAL_STRUCT SQL_INTERVAL_STRUCT;
struct X509_POLICY_NODE_st;
struct X509_POLICY_TREE_st;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__lock_try_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__vm_msync_t;
typedef struct _8B6FDD4F28EF84224B001DC98A6CCF9E __Reply__vm_remap_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__vm_write_t;
typedef struct _F3A38383CE2E0DAC4148785558BAB876 __Request__vm_map_t;
struct __darwin_fp_control {unsigned short __invalid : 1;unsigned short __denorm : 1;unsigned short __zdiv : 1;unsigned short __ovrfl : 1;unsigned short __undfl : 1;unsigned short __precis : 1;unsigned short : 2;unsigned short __pc : 2;unsigned short __rc : 2;unsigned short : 1;unsigned short : 3;};
typedef unsigned int __darwin_fsblkcnt_t;
typedef unsigned int __darwin_fsfilcnt_t;
struct _xmlSchemaValidCtxt;
typedef struct cups_page_header2_s cups_page_header2_t;
enum cups_sc_connected_e {CUPS_SC_NOT_CONNECTED = 0x0,CUPS_SC_CONNECTED = 0x1,};
typedef void (*dispatch_function_t)(void *);
typedef void (*dyn_dynlock_lock_cb)(int, struct CRYPTO_dynlock_value *,  char *, int);
typedef void (*dyn_lock_locking_cb)(int, int,  char *, int);
typedef struct __darwin_i386_thread_state i386_thread_state_t;
struct ifmedia_description {int ifmt_word; char *ifmt_string;};
struct in6_prflags__prf_ra {unsigned char onlink : 1;unsigned char autonomous : 1;unsigned char reserved : 6;};
struct in6_prflags__prf_rr {unsigned char decrvalid : 1;unsigned char decrprefd : 1;unsigned char reserved : 6;};
typedef int (*isStandaloneSAXFunc)(void *ctx);
typedef struct _krb5_last_req_entry krb5_last_req_entry;
union ldapmod__mod_vals_u {char **modv_strvals;struct berval **modv_bvals;};
typedef unsigned int mac_policy_handle_t;
typedef unsigned int mach_port_srights_t;
typedef void mpo_reserved_hook_t(void);
typedef struct netsnmp_column_info_t netsnmp_column_info;
typedef int netsnmp_iterator_rc(struct netsnmp_iterator_s *);
typedef struct netsnmp_log_handler_s netsnmp_log_handler;
typedef struct netsnmp_mib_handler_s netsnmp_mib_handler;
typedef struct netsnmp_tdata_s netsnmp_table_data2;
typedef struct netsnmp_token_descr_s netsnmp_token_descr;
typedef struct policy_fifo_limit *policy_fifo_limit_t;
typedef struct policy_limits policy_limit_data_t;
typedef char *rl_compentry_func_t( char *, int);
typedef struct sasl_auxprop_plug sasl_auxprop_plug_t;
typedef int sasl_mutex_unlock_t(void *mutex);
struct socket_filter_entry;
struct sqlite3_mem_methods {void *(*xMalloc)(int);void (*xFree)(void *);void *(*xRealloc)(void *, int);int (*xSize)(void *);int (*xRoundup)(int);int (*xInit)(void *);void (*xShutdown)(void *);void *pAppData;};
struct sqlite3_vtab_cursor {sqlite3_vtab *pVtab;};
typedef int task_special_port_t;
typedef struct thread_basic_info *thread_basic_info_t;
typedef struct vm_info_region_64 vm_info_region_64_t;
typedef int vm_page_info_data_t[];
typedef int *vm_region_info_64_t;
typedef struct __darwin_x86_debug_state32 x86_debug_state32_t;
typedef struct __darwin_x86_debug_state64 x86_debug_state64_t;
typedef struct __darwin_i386_float_state x86_float_state32_t;
typedef struct __darwin_x86_float_state64 x86_float_state64_t;
typedef void (*xmlGenericErrorFunc)(void *ctx,  char *msg, ...);
typedef struct _xmlRelaxNGValidCtxt xmlRelaxNGValidCtxt;
typedef struct _xmlSchemaParserCtxt xmlSchemaParserCtxt;
typedef struct _xmlSchemaWildcardNs xmlSchemaWildcardNs;
enum xp_bit_gravity_enum {XP_GRAVITY_NONE = 0x0,XP_GRAVITY_NORTH_WEST = 0x1,XP_GRAVITY_NORTH_EAST = 0x2,XP_GRAVITY_SOUTH_EAST = 0x3,XP_GRAVITY_SOUTH_WEST = 0x4,};
enum xp_frame_class_enum {XP_FRAME_CLASS_DECOR_LARGE = 0x1,XP_FRAME_CLASS_RESERVED1 = 0x2,XP_FRAME_CLASS_RESERVED2 = 0x4,XP_FRAME_CLASS_RESERVED3 = 0x8,XP_FRAME_CLASS_DECOR_SMALL = 0x10,XP_FRAME_CLASS_RESERVED5 = 0x20,XP_FRAME_CLASS_RESERVED6 = 0x40,XP_FRAME_CLASS_DECOR_NONE = 0x80,XP_FRAME_CLASS_RESERVED8 = 0x100,XP_FRAME_CLASS_BEHAVIOR_MANAGED = 0x8000,XP_FRAME_CLASS_BEHAVIOR_TRANSIENT = 0x10000,XP_FRAME_CLASS_BEHAVIOR_STATIONARY = 0x20000,};
typedef struct ACCESS_DESCRIPTION_st ACCESS_DESCRIPTION;
typedef struct asn1_string_st ASN1_GENERALSTRING;
typedef struct asn1_string_st ASN1_VISIBLESTRING;
typedef struct BIT_STRING_BITNAME_st BIT_STRING_BITNAME;
typedef struct lber_memory_fns BerMemoryFunctions;
struct Block_descriptor_2 {void (*copy)(void *dst,  void *src);void (*dispose)( void *);};
struct Block_descriptor_3 { char *signature; char *layout;};
typedef void *CRYPTO_MEM_LEAK_CB(unsigned long long,  char *, int, int, void *);
struct ENGINE_CMD_DEFN_st {unsigned int cmd_num; char *cmd_name; char *cmd_desc;unsigned int cmd_flags;};
struct ERR_string_data_st {unsigned long long error; char *string;};
typedef struct ldap_apifeature_info LDAPAPIFeatureInfo;
typedef int (*LHASH_COMP_FN_TYPE)( void *,  void *);
typedef unsigned long long (*LHASH_HASH_FN_TYPE)( void *);
enum MACRO_ACCESSNOTIFY {ACCESSNOTIFY = 7,ACCESSSTORAGE = 8,};
enum MACRO_ACCESSPREFIX {ACCESSPREFIX = 1,ACCESSMODEL = 2,};
enum MACRO_ACCESSSTATUS {ACCESSSTATUS = 9,};
enum MACRO_ASN1_STRFLGS {ASN1_STRFLGS_ESC_2253 = 1,ASN1_STRFLGS_ESC_CTRL = 2,ASN1_STRFLGS_ESC_MSB = 4,ASN1_STRFLGS_ESC_QUOTE = 8,};
enum MACRO_BPF_MAXINSNS {BPF_MAXINSNS = 512,};
enum MACRO_BTREEVERSION {BTREEVERSION = 3,};
enum MACRO_CTLTYPE_NODE {CTLTYPE_NODE = 1,CTLTYPE_INT = 2,CTLTYPE_STRING = 3,CTLTYPE_QUAD = 4,CTLTYPE_OPAQUE = 5,CTLTYPE_STRUCT = 5,};
enum MACRO_CUPS_VERSION {CUPS_VERSION_MAJOR = 1,CUPS_VERSION_MINOR = 5,CUPS_VERSION_PATCH = 0,CUPS_BC_FD = 3,CUPS_DATE_ANY = -1,CUPS_EXCLUDE_NONE = 0,CUPS_INCLUDE_ALL = 0,CUPS_JOBID_ALL = -1,CUPS_JOBID_CURRENT = 0,CUPS_LENGTH_VARIABLE = 0,CUPS_TIMEOUT_DEFAULT = 0,CUPS_WHICHJOBS_ALL = -1,CUPS_WHICHJOBS_ACTIVE = 0,CUPS_WHICHJOBS_COMPLETED = 1,};
enum MACRO_DAYSPERLYEAR {DAYSPERLYEAR = 366,SECSPERHOUR = 3600,SECSPERDAY = 86400,};
enum MACRO_DAYSPERNYEAR {DAYSPERNYEAR = 365,};
enum MACRO_FFI_CLOSURES {FFI_CLOSURES = 1,FFI_TRAMPOLINE_SIZE = 24,FFI_NATIVE_RAW_API = 0,FFI_LONG_LONG_MAX = 9223372036854775807,FFI_SIZEOF_ARG = 8,FFI_TYPE_VOID = 0,FFI_TYPE_INT = 1,FFI_TYPE_FLOAT = 2,FFI_TYPE_DOUBLE = 3,FFI_TYPE_LONGDOUBLE = 4,FFI_TYPE_UINT8 = 5,FFI_TYPE_SINT8 = 6,FFI_TYPE_UINT16 = 7,FFI_TYPE_SINT16 = 8,FFI_TYPE_UINT32 = 9,FFI_TYPE_SINT32 = 10,FFI_TYPE_UINT64 = 11,FFI_TYPE_SINT64 = 12,FFI_TYPE_STRUCT = 13,FFI_TYPE_POINTER = 14,FFI_TYPE_LAST = 14,};
enum MACRO_GLOB_MAXPATH {GLOB_MAXPATH = 4096,GLOB_ABEND = -2,};
enum MACRO_HASHFRACTION {HASHFRACTION = 2,};
enum MACRO_HISTFRACTION {HISTFRACTION = 2,};
enum MACRO_ICMP6_ROUTER {ICMP6_ROUTER_RENUMBERING = 138,ICMP6_WRUREQUEST = 139,ICMP6_WRUREPLY = 140,ICMP6_FQDN_QUERY = 139,ICMP6_FQDN_REPLY = 140,ICMP6_NI_QUERY = 139,ICMP6_NI_REPLY = 140,};
enum MACRO_IPV6_MAXHLIM {IPV6_MAXHLIM = 255,IPV6_DEFHLIM = 64,IPV6_FRAGTTL = 120,IPV6_HLIMDEC = 1,IPV6_MMTU = 1280,IPV6_MAXPACKET = 65535,IPV6_MAXOPTHDR = 2048,};
enum MACRO_IPV6_VERSION {IPV6_VERSION = 0x60,IPV6_VERSION_MASK = 0xF0,IPV6_FLOWINFO_MASK = 0xFFFFFF0F,IPV6_FLOWLABEL_MASK = 0xFFFF0F00,};
enum MACRO_IP_PORTRANGE {IP_PORTRANGE_DEFAULT = 0,IP_PORTRANGE_HIGH = 1,IP_PORTRANGE_LOW = 2,};
enum MACRO_KEV_SNDSPACE {KEV_SNDSPACE = 4096,KEV_RECVSPACE = 32768,KEV_ANY_VENDOR = 0,KEV_ANY_CLASS = 0,KEV_ANY_SUBCLASS = 0,KEV_VENDOR_APPLE = 1,KEV_NETWORK_CLASS = 1,KEV_IOKIT_CLASS = 2,KEV_SYSTEM_CLASS = 3,KEV_APPLESHARE_CLASS = 4,KEV_FIREWALL_CLASS = 5,KEV_IEEE80211_CLASS = 6,KEV_VENDOR_CODE_MAX_STR_LEN = 200,};
enum MACRO_LM_MAXSTRLEN {LM_MAXSTRLEN = 1024,};
enum MACRO_MAXAUDITDATA {MAXAUDITDATA = 0x7FFF,};
enum MACRO_MAX_CALLBACK {MAX_CALLBACK_IDS = 2,MAX_CALLBACK_SUBIDS = 16,};
enum MACRO_MAX_ENGINEID {MAX_ENGINEID_LENGTH = 32,};
enum MACRO_MAX_IPOPTLEN {MAX_IPOPTLEN = 40,};
enum MACRO_MENU_COMMAND {MIN_MENU_COMMAND = 512,MAX_MENU_COMMAND = 528,};
enum MACRO_NCURSES_TERM {NCURSES_TERM_H_incl = 1,NCURSES_XNAMES = 1,};
enum MACRO_NETSNMP_FILE {NETSNMP_FILE_NO_AUTOCLOSE = 0x1,NETSNMP_FILE_STATS = 0x2,NETSNMP_FILE_AUTO_OPEN = 0x4,};
enum MACRO_NFS_NFSSTATS {NFS_NFSSTATS = 1,NFS_EXPORTSTATS = 3,NFS_USERSTATS = 4,NFS_USERCOUNT = 5,NFS_MOUNTINFO = 6,NFS_WDELAYHASHSIZ = 16,};
enum MACRO_NSLINKMODULE {NSLINKMODULE_OPTION_NONE = 0x0,NSLINKMODULE_OPTION_BINDNOW = 0x1,NSLINKMODULE_OPTION_PRIVATE = 0x2,NSLINKMODULE_OPTION_RETURN_ON_ERROR = 0x4,NSLINKMODULE_OPTION_DONT_CALL_MOD_INIT_ROUTINES = 0x8,NSLINKMODULE_OPTION_TRAILING_PHYS_NAME = 0x10,};
enum MACRO_NULL_xdrproc {NULL_xdrproc_t = 0,};
enum MACRO_NUM_EXTERNAL {NUM_EXTERNAL_FDS = 32,};
enum MACRO_OCSP_REVOKED {OCSP_REVOKED_STATUS_NOSTATUS = -1,OCSP_REVOKED_STATUS_UNSPECIFIED = 0,OCSP_REVOKED_STATUS_KEYCOMPROMISE = 1,OCSP_REVOKED_STATUS_CACOMPROMISE = 2,OCSP_REVOKED_STATUS_AFFILIATIONCHANGED = 3,OCSP_REVOKED_STATUS_SUPERSEDED = 4,OCSP_REVOKED_STATUS_CESSATIONOFOPERATION = 5,OCSP_REVOKED_STATUS_CERTIFICATEHOLD = 6,OCSP_REVOKED_STATUS_REMOVEFROMCRL = 8,OCSP_F_ASN1_STRING_ENCODE = 100,OCSP_F_D2I_OCSP_NONCE = 102,OCSP_F_OCSP_BASIC_ADD1_STATUS = 103,OCSP_F_OCSP_BASIC_SIGN = 104,OCSP_F_OCSP_BASIC_VERIFY = 105,OCSP_F_OCSP_CERT_ID_NEW = 101,OCSP_F_OCSP_CHECK_DELEGATED = 106,OCSP_F_OCSP_CHECK_IDS = 107,OCSP_F_OCSP_CHECK_ISSUER = 108,OCSP_F_OCSP_CHECK_VALIDITY = 115,OCSP_F_OCSP_MATCH_ISSUERID = 109,OCSP_F_OCSP_PARSE_URL = 114,OCSP_F_OCSP_REQUEST_SIGN = 110,OCSP_F_OCSP_REQUEST_VERIFY = 116,OCSP_F_OCSP_RESPONSE_GET1_BASIC = 111,OCSP_F_OCSP_SENDREQ_BIO = 112,OCSP_F_PARSE_HTTP_LINE1 = 117,OCSP_F_REQUEST_VERIFY = 113,OCSP_R_BAD_DATA = 100,OCSP_R_CERTIFICATE_VERIFY_ERROR = 101,OCSP_R_DIGEST_ERR = 102,OCSP_R_ERROR_IN_NEXTUPDATE_FIELD = 122,OCSP_R_ERROR_IN_THISUPDATE_FIELD = 123,OCSP_R_ERROR_PARSING_URL = 121,OCSP_R_MISSING_OCSPSIGNING_USAGE = 103,OCSP_R_NEXTUPDATE_BEFORE_THISUPDATE = 124,OCSP_R_NOT_BASIC_RESPONSE = 104,OCSP_R_NO_CERTIFICATES_IN_CHAIN = 105,OCSP_R_NO_CONTENT = 106,OCSP_R_NO_PUBLIC_KEY = 107,OCSP_R_NO_RESPONSE_DATA = 108,OCSP_R_NO_REVOKED_TIME = 109,OCSP_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE = 110,OCSP_R_REQUEST_NOT_SIGNED = 128,OCSP_R_RESPONSE_CONTAINS_NO_REVOCATION_DATA = 111,OCSP_R_ROOT_CA_NOT_TRUSTED = 112,OCSP_R_SERVER_READ_ERROR = 113,OCSP_R_SERVER_RESPONSE_ERROR = 114,OCSP_R_SERVER_RESPONSE_PARSE_ERROR = 115,OCSP_R_SERVER_WRITE_ERROR = 116,OCSP_R_SIGNATURE_FAILURE = 117,OCSP_R_SIGNER_CERTIFICATE_NOT_FOUND = 118,OCSP_R_STATUS_EXPIRED = 125,OCSP_R_STATUS_NOT_YET_VALID = 126,OCSP_R_STATUS_TOO_OLD = 127,OCSP_R_UNKNOWN_MESSAGE_DIGEST = 119,OCSP_R_UNKNOWN_NID = 120,OCSP_R_UNSUPPORTED_REQUESTORNAME_TYPE = 129,};
enum MACRO_PKCS12_ERROR {PKCS12_ERROR = 0,PKCS12_OK = 1,PKCS12_F_PARSE_BAG = 129,PKCS12_F_PARSE_BAGS = 103,PKCS12_F_PKCS12_ADD_FRIENDLYNAME = 100,PKCS12_F_PKCS12_ADD_FRIENDLYNAME_ASC = 127,PKCS12_F_PKCS12_ADD_FRIENDLYNAME_UNI = 102,PKCS12_F_PKCS12_ADD_LOCALKEYID = 104,PKCS12_F_PKCS12_CREATE = 105,PKCS12_F_PKCS12_GEN_MAC = 107,PKCS12_F_PKCS12_INIT = 109,PKCS12_F_PKCS12_ITEM_DECRYPT_D2I = 106,PKCS12_F_PKCS12_ITEM_I2D_ENCRYPT = 108,PKCS12_F_PKCS12_ITEM_PACK_SAFEBAG = 117,PKCS12_F_PKCS12_KEY_GEN_ASC = 110,PKCS12_F_PKCS12_KEY_GEN_UNI = 111,PKCS12_F_PKCS12_MAKE_KEYBAG = 112,PKCS12_F_PKCS12_MAKE_SHKEYBAG = 113,PKCS12_F_PKCS12_NEWPASS = 128,PKCS12_F_PKCS12_PACK_P7DATA = 114,PKCS12_F_PKCS12_PACK_P7ENCDATA = 115,PKCS12_F_PKCS12_PARSE = 118,PKCS12_F_PKCS12_PBE_CRYPT = 119,PKCS12_F_PKCS12_PBE_KEYIVGEN = 120,PKCS12_F_PKCS12_SETUP_MAC = 122,PKCS12_F_PKCS12_SET_MAC = 123,PKCS12_F_PKCS12_UNPACK_AUTHSAFES = 130,PKCS12_F_PKCS12_UNPACK_P7DATA = 131,PKCS12_F_PKCS12_VERIFY_MAC = 126,PKCS12_F_PKCS8_ADD_KEYUSAGE = 124,PKCS12_F_PKCS8_ENCRYPT = 125,PKCS12_R_CANT_PACK_STRUCTURE = 100,PKCS12_R_CONTENT_TYPE_NOT_DATA = 121,PKCS12_R_DECODE_ERROR = 101,PKCS12_R_ENCODE_ERROR = 102,PKCS12_R_ENCRYPT_ERROR = 103,PKCS12_R_ERROR_SETTING_ENCRYPTED_DATA_TYPE = 120,PKCS12_R_INVALID_NULL_ARGUMENT = 104,PKCS12_R_INVALID_NULL_PKCS12_POINTER = 105,PKCS12_R_IV_GEN_ERROR = 106,PKCS12_R_KEY_GEN_ERROR = 107,PKCS12_R_MAC_ABSENT = 108,PKCS12_R_MAC_GENERATION_ERROR = 109,PKCS12_R_MAC_SETUP_ERROR = 110,PKCS12_R_MAC_STRING_SET_ERROR = 111,PKCS12_R_MAC_VERIFY_ERROR = 112,PKCS12_R_MAC_VERIFY_FAILURE = 113,PKCS12_R_PARSE_ERROR = 114,PKCS12_R_PKCS12_ALGOR_CIPHERINIT_ERROR = 115,PKCS12_R_PKCS12_CIPHERFINAL_ERROR = 116,PKCS12_R_PKCS12_PBE_CRYPT_ERROR = 117,PKCS12_R_UNKNOWN_DIGEST_ALGORITHM = 118,PKCS12_R_UNSUPPORTED_PKCS12_MODE = 119,};
enum MACRO_POLLSTANDARD {POLLSTANDARD = 511,};
enum MACRO_REPORT_STATS {REPORT_STATS_LEN = 9,REPORT_snmpUnknownSecurityModels_NUM = 1,REPORT_snmpInvalidMsgs_NUM = 2,REPORT_usmStatsUnsupportedSecLevels_NUM = 1,REPORT_usmStatsNotInTimeWindows_NUM = 2,REPORT_usmStatsUnknownUserNames_NUM = 3,REPORT_usmStatsUnknownEngineIDs_NUM = 4,REPORT_usmStatsWrongDigests_NUM = 5,REPORT_usmStatsDecryptionErrors_NUM = 6,};
enum MACRO_RES_MAXNDOTS {RES_MAXNDOTS = 15,RES_MAXRETRANS = 30,RES_MAXRETRY = 5,RES_DFLRETRY = 2,RES_MAXTIME = 65535,RES_F_VC = 1,RES_F_CONN = 2,RES_F_EDNS0ERR = 4,RES_EXHAUSTIVE = 1,RES_IPV4ONLY = 2,RES_IPV6ONLY = 4,RES_INIT = 1,RES_DEBUG = 2,RES_AAONLY = 4,RES_USEVC = 8,RES_PRIMARY = 16,RES_IGNTC = 32,RES_RECURSE = 64,RES_DEFNAMES = 128,RES_STAYOPEN = 256,RES_DNSRCH = 512,RES_INSECURE1 = 1024,RES_INSECURE2 = 2048,RES_NOALIASES = 4096,RES_USE_INET6 = 8192,RES_ROTATE = 16384,RES_NOCHECKNAME = 32768,RES_KEEPTSIG = 65536,RES_BLAST = 131072,RES_NO_NIBBLE = 262144,RES_NO_BITSTRING = 524288,RES_NOTLDQUERY = 1048576,RES_USE_DNSSEC = 2097152,RES_USE_DNAME = 268435456,RES_USE_A6 = 536870912,RES_USE_EDNS0 = 1073741824,RES_NO_NIBBLE2 = 2147483648,RES_DEFAULT = 1728,RES_PRF_STATS = 1,RES_PRF_UPDATE = 2,RES_PRF_CLASS = 4,RES_PRF_CMD = 8,RES_PRF_QUES = 16,RES_PRF_ANS = 32,RES_PRF_AUTH = 64,RES_PRF_ADD = 128,RES_PRF_HEAD1 = 256,RES_PRF_HEAD2 = 512,RES_PRF_TTLID = 1024,RES_PRF_HEADX = 2048,RES_PRF_QUERY = 4096,RES_PRF_REPLY = 8192,RES_PRF_INIT = 16384,RES_PRF_TRUNC = 32768,};
enum MACRO_RLIM_NLIMITS {RLIM_NLIMITS = 9,};
enum MACRO_RUSERSVERS_1 {RUSERSVERS_1 = 1,RUSERSVERS_2 = 2,};
enum MACRO_RUSERSVERS_3 {RUSERSVERS_3 = 3,};
enum MACRO_SM_MAXSTRLEN {SM_MAXSTRLEN = 1024,SM_PROG = 100024,SM_VERS = 1,SM_STAT = 1,SM_MON = 2,SM_UNMON = 3,SM_UNMON_ALL = 4,SM_SIMU_CRASH = 5,SM_NOTIFY = 6,};
enum MACRO_SNMP_DEFAULT {SNMP_DEFAULT_COMMUNITY_LEN = 0,SNMP_DEFAULT_RETRIES = -1,SNMP_DEFAULT_TIMEOUT = -1,SNMP_DEFAULT_REMPORT = 0,SNMP_DEFAULT_REQID = -1,SNMP_DEFAULT_MSGID = -1,SNMP_DEFAULT_ERRSTAT = -1,SNMP_DEFAULT_ERRINDEX = -1,SNMP_DEFAULT_ADDRESS = 0,SNMP_DEFAULT_PEERNAME = 0,SNMP_DEFAULT_ENTERPRISE_LENGTH = 0,SNMP_DEFAULT_TIME = 0,SNMP_DEFAULT_VERSION = -1,SNMP_DEFAULT_SECMODEL = -1,SNMP_MAX_MSG_SIZE = 1472,SNMP_MAX_MSG_V3_HDRS = 51,SNMP_MAX_ENG_SIZE = 32,SNMP_MAX_SEC_NAME_SIZE = 256,SNMP_MAX_CONTEXT_SIZE = 256,SNMP_SEC_PARAM_BUF_SIZE = 256,};
enum MACRO_SNMP_MAXPATH {SNMP_MAXPATH = 1024,SNMP_MAXBUF = 4096,SNMP_MAXBUF_MEDIUM = 1024,SNMP_MAXBUF_SMALL = 512,SNMP_MAXBUF_MESSAGE = 1500,SNMP_MAXOID = 64,SNMP_MAX_CMDLINE_OIDS = 128,SNMP_FILEMODE_CLOSED = 384,SNMP_FILEMODE_OPEN = 420,};
enum MACRO_TCP6_NSTATES {TCP6_NSTATES = 11,};
enum MACRO_THREAD_SCHED {THREAD_SCHED_TIMESHARE_INFO = 10,THREAD_SCHED_RR_INFO = 11,THREAD_SCHED_FIFO_INFO = 12,THREAD_STANDARD_POLICY = 1,THREAD_STANDARD_POLICY_COUNT = 0,THREAD_EXTENDED_POLICY = 1,THREAD_TIME_CONSTRAINT_POLICY = 2,THREAD_PRECEDENCE_POLICY = 3,THREAD_AFFINITY_POLICY = 4,THREAD_AFFINITY_TAG_NULL = 0,THREAD_BACKGROUND_POLICY = 5,THREAD_KERNEL_PORT = 1,};
enum MACRO_THREAD_STATE {THREAD_STATE_FLAVOR_LIST = 0,THREAD_STATE_FLAVOR_LIST_NEW = 128,};
enum MACRO_TIOCPTYGNAME {TIOCPTYGNAME = 1082160211,};
enum MACRO_TIOCPTYGRANT {TIOCPTYGRANT = 536900692,};
enum MACRO_UCD_REGISTRY {UCD_REGISTRY_OID_MAX_LEN = 128,};
enum MACRO_X509_PURPOSE {X509_PURPOSE_DYNAMIC = 0x1,X509_PURPOSE_DYNAMIC_NAME = 0x2,X509_PURPOSE_SSL_CLIENT = 0x1,X509_PURPOSE_SSL_SERVER = 0x2,X509_PURPOSE_NS_SSL_SERVER = 0x3,X509_PURPOSE_SMIME_SIGN = 0x4,X509_PURPOSE_SMIME_ENCRYPT = 0x5,X509_PURPOSE_CRL_SIGN = 0x6,X509_PURPOSE_ANY = 0x7,X509_PURPOSE_OCSP_HELPER = 0x8,X509_PURPOSE_MIN = 0x1,X509_PURPOSE_MAX = 0x8,};
enum MACRO_YPPASSWDPROC {YPPASSWDPROC_UPDATE = 1,};
enum MACRO_YPPASSWDPROG {YPPASSWDPROG = 100009,};
enum MACRO_YPPASSWDVERS {YPPASSWDVERS = 1,};
enum MACRO__LDAP_SCHEMA {_LDAP_SCHEMA_H = 1,};
enum MACRO__SYS_NAMELEN {_SYS_NAMELEN = 256,};
enum MACRO__XOPEN_CRYPT {_XOPEN_CRYPT = 1,_XOPEN_ENH_I18N = 1,_XOPEN_LEGACY = -1,_XOPEN_REALTIME = -1,_XOPEN_REALTIME_THREADS = -1,_XOPEN_SHM = 1,_XOPEN_STREAMS = -1,_XOPEN_UNIX = 1,};
enum MACRO___DARWIN_ACL {__DARWIN_ACL_READ_DATA = 2,__DARWIN_ACL_LIST_DIRECTORY = 2,__DARWIN_ACL_WRITE_DATA = 4,__DARWIN_ACL_ADD_FILE = 4,__DARWIN_ACL_EXECUTE = 8,__DARWIN_ACL_SEARCH = 8,__DARWIN_ACL_DELETE = 16,__DARWIN_ACL_APPEND_DATA = 32,__DARWIN_ACL_ADD_SUBDIRECTORY = 32,__DARWIN_ACL_DELETE_CHILD = 64,__DARWIN_ACL_READ_ATTRIBUTES = 128,__DARWIN_ACL_WRITE_ATTRIBUTES = 256,__DARWIN_ACL_READ_EXTATTRIBUTES = 512,__DARWIN_ACL_WRITE_EXTATTRIBUTES = 1024,__DARWIN_ACL_READ_SECURITY = 2048,__DARWIN_ACL_WRITE_SECURITY = 4096,__DARWIN_ACL_CHANGE_OWNER = 8192,__DARWIN_ACL_EXTENDED_ALLOW = 1,__DARWIN_ACL_EXTENDED_DENY = 2,__DARWIN_ACL_ENTRY_INHERITED = 16,__DARWIN_ACL_ENTRY_FILE_INHERIT = 32,__DARWIN_ACL_ENTRY_DIRECTORY_INHERIT = 64,__DARWIN_ACL_ENTRY_LIMIT_INHERIT = 128,__DARWIN_ACL_ENTRY_ONLY_INHERIT = 256,__DARWIN_ACL_FLAG_NO_INHERIT = 131072,};
enum MACRO___DARWIN_CLK {__DARWIN_CLK_TCK = 100,};
enum MACRO___EXTENSIONS {__EXTENSIONS__ = 1,};
typedef struct POLICY_CONSTRAINTS_st POLICY_CONSTRAINTS;
typedef struct tagSQL_NUMERIC_STRUCT SQL_NUMERIC_STRUCT;
struct STORE_attr_info_st;
enum STORE_object_types {STORE_OBJECT_TYPE_X509_CERTIFICATE = 0x1,STORE_OBJECT_TYPE_X509_CRL = 0x2,STORE_OBJECT_TYPE_PRIVATE_KEY = 0x3,STORE_OBJECT_TYPE_PUBLIC_KEY = 0x4,STORE_OBJECT_TYPE_NUMBER = 0x5,STORE_OBJECT_TYPE_ARBITRARY = 0x6,STORE_OBJECT_TYPE_NUM = 0x6,};
typedef struct X509V3_CONF_METHOD_st X509V3_CONF_METHOD;
typedef struct x509_file_st X509_CERT_FILE_CTX;
typedef struct x509_lookup_method_st X509_LOOKUP_METHOD;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__vm_copy_t;
typedef struct _207271BEEF35C1E72B41BFA669B8BAC6 __Reply__vm_read_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F __Reply__vm_wire_t;
typedef int __darwin_ct_rune_t;
struct __darwin_fp_status {unsigned short __invalid : 1;unsigned short __denorm : 1;unsigned short __zdiv : 1;unsigned short __ovrfl : 1;unsigned short __undfl : 1;unsigned short __precis : 1;unsigned short __stkflt : 1;unsigned short __errsumm : 1;unsigned short __c0 : 1;unsigned short __c1 : 1;unsigned short __c2 : 1;unsigned short __tos : 3;unsigned short __c3 : 1;unsigned short __busy : 1;};
typedef unsigned int __darwin_natural_t;
typedef struct _opaque_pthread_t *__darwin_pthread_t;
typedef int __darwin_ptrdiff_t;
typedef int __darwin_wctrans_t;
struct _krb5_auth_context;
struct _krb5_cccol_cursor;
struct _res_9_ns_flagdata {int mask;int shift;};
struct _xmlParserNodeInfo { struct _xmlNode *node;unsigned long long begin_pos;unsigned long long begin_line;unsigned long long end_pos;unsigned long long end_line;};
struct _xsltSecurityPrefs;
struct accessx_descriptor {unsigned int ad_name_offset;int ad_flags;int ad_pad[2];};
typedef int bootstrap_status_t;
typedef struct cache_attributes_s cache_attributes_t;
typedef void (*cache_release_cb_t)(void *key_or_value, void *user_data);
typedef struct cups_page_header_s cups_page_header_t;
typedef  char *(*cups_password_cb_t)( char *prompt);
typedef void (*curl_free_callback)(void *ptr);
struct disktab__partition {int p_size;short p_bsize;short p_fsize;};
typedef unsigned long long dispatch_io_type_t;
typedef struct _05C6DC85C1F1DBCA1F6881BCC9CC439D dk_firmware_path_t;
typedef struct _FEF862DC5C2F986098A4350401CDFBFD dns_AFSDB_record_t;
typedef struct _EB59F425BEB47ECBA8886A98C22ABD7D dns_HINFO_record_t;
typedef struct _0D8E21930F8347099053B71EC6295221 dns_MINFO_record_t;
typedef unsigned long long (*dynamic_v_check_fn)(unsigned long long ossl_version);
struct ecpk_parameters_st;
typedef void (*endDocumentSAXFunc)(void *ctx);
struct gss_cred_id_struct;
typedef struct hash_info_bucket hash_info_bucket_t;
typedef struct __darwin_i386_float_state i386_float_state_t;
typedef struct __ifnet_filter *interface_filter_t;
typedef char kernel_boot_info_t[4096];
typedef struct _krb5_authenticator krb5_authenticator;
typedef  void *krb5_const_pointer;
typedef struct _krb5_cred_enc_part krb5_cred_enc_part;
typedef struct _krb5_encrypt_block krb5_encrypt_block;
typedef struct _F105F10DE5C66ECF2E7E726999936688 mach_msg_trailer_t;
typedef int mach_port_flavor_t;
typedef struct mach_port_limits mach_port_limits_t;
typedef struct mach_port_status mach_port_status_t;
struct netsnmp_cachemap_s {int globalid;int cacheid;struct netsnmp_cachemap_s *next;};
typedef struct netsnmp_ref_size_t_s *netsnmp_ref_size_t;
struct netsnmp_set_info_s {int action;void *stateRef;void **oldData;int setCleanupFlags;};
typedef struct netsnmp_table_data_s netsnmp_table_data;
typedef struct netsnmp_tree_cache_s netsnmp_tree_cache;
typedef struct netsnmp_void_array_s netsnmp_void_array;
struct nfs_lock_msg_queue {struct nfs_lock_msg_request *tqh_first;struct nfs_lock_msg_request **tqh_last;};
typedef struct policy_bases policy_base_data_t;
typedef struct policy_fifo_base *policy_fifo_base_t;
typedef struct policy_fifo_info *policy_fifo_info_t;
typedef struct policy_infos policy_info_data_t;
typedef int processor_flavor_t;
typedef char *profile_filespec_t;
struct read_config_memory {char *line;struct read_config_memory *next;};
enum reloc_type_generic {GENERIC_RELOC_VANILLA = 0x0,GENERIC_RELOC_PAIR = 0x1,GENERIC_RELOC_SECTDIFF = 0x2,GENERIC_RELOC_PB_LA_PTR = 0x3,GENERIC_RELOC_LOCAL_SECTDIFF = 0x4,GENERIC_RELOC_TLV = 0x5,};
typedef struct _removefile_state *removefile_state_t;
typedef unsigned int routine_arg_offset;
typedef struct sasl_client_plug sasl_client_plug_t;
typedef void *sasl_mutex_alloc_t(void);
typedef struct sasl_server_plug sasl_server_plug_t;
struct sqlite3_index_info {int nConstraint;struct sqlite3_index_info__sqlite3_index_constraint *aConstraint;int nOrderBy;struct sqlite3_index_info__sqlite3_index_orderby *aOrderBy;struct sqlite3_index_info__sqlite3_index_constraint_usage *aConstraintUsage;int idxNum;char *idxStr;int needToFreeIdxStr;int orderByConsumed;double estimatedCost;};
typedef struct task_events_info *task_events_info_t;
typedef struct task_extmod_info *task_extmod_info_t;
typedef int vm_region_flavor_t;
struct vm_region_top_info {unsigned int obj_id;unsigned int ref_count;unsigned int private_pages_resident;unsigned int shared_pages_resident;unsigned char share_mode;};
typedef struct x86_thread_state x86_thread_state_t;
typedef int (*xmlListDataCompare)( void *data0,  void *data1);
typedef struct _xmlSchemaAttribute xmlSchemaAttribute;
typedef struct _xmlSchemaFacetLink xmlSchemaFacetLink;
typedef struct _xmlSchemaValidCtxt xmlSchemaValidCtxt;
enum xp_event_type_enum {XP_EVENT_DISPLAY_CHANGED = 0x1,XP_EVENT_WINDOW_STATE_CHANGED = 0x2,XP_EVENT_ASYNC_ERROR = 0x4,XP_EVENT_SURFACE_DESTROYED = 0x8,XP_EVENT_SURFACE_CHANGED = 0x10,XP_EVENT_WINDOW_MOVED = 0x20,XP_EVENT_SPACE_CHANGED = 0x40,};
enum xp_frame_attr_enum {XP_FRAME_ATTR_ACTIVE = 0x1,XP_FRAME_ATTR_URGENT = 0x2,XP_FRAME_ATTR_TITLE = 0x4,XP_FRAME_ATTR_PRELIGHT = 0x8,XP_FRAME_ATTR_SHADED = 0x10,XP_FRAME_ATTR_CLOSE_BOX = 0x100,XP_FRAME_ATTR_COLLAPSE = 0x200,XP_FRAME_ATTR_ZOOM = 0x400,XP_FRAME_ATTR_CLOSE_BOX_CLICKED = 0x800,XP_FRAME_ATTR_COLLAPSE_BOX_CLICKED = 0x1000,XP_FRAME_ATTR_ZOOM_BOX_CLICKED = 0x2000,XP_FRAME_ATTR_GROW_BOX = 0x4000,};
enum xp_frame_rect_enum {XP_FRAME_RECT_TITLEBAR = 0x1,XP_FRAME_RECT_TRACKING = 0x2,XP_FRAME_RECT_GROWBOX = 0x3,};
typedef struct _xsltTransformCache xsltTransformCache;
typedef struct ASN1_COMPAT_FUNCS_st ASN1_COMPAT_FUNCS;
typedef struct ASN1_EXTERN_FUNCS_st ASN1_EXTERN_FUNCS;
typedef struct asn1_string_st ASN1_OCTET_STRING;
typedef struct asn1_string_table_st ASN1_STRING_TABLE;
typedef struct BASIC_CONSTRAINTS_st BASIC_CONSTRAINTS;
enum CURL_NETRC_OPTION {CURL_NETRC_IGNORED = 0x0,CURL_NETRC_OPTIONAL = 0x1,CURL_NETRC_REQUIRED = 0x2,CURL_NETRC_LAST = 0x3,};
typedef struct dtls1_record_data_st DTLS1_RECORD_DATA;
typedef struct ldap_attributetype LDAPAttributeType;
typedef struct ldap_structurerule LDAPStructureRule;
typedef struct nfs_lock_msg_request LOCKD_MSG_REQUEST;
enum MACRO_ACCESSLEVEL {ACCESSLEVEL = 3,ACCESSMATCH = 4,};
enum MACRO_ACCESSPERMS {ACCESSPERMS = 511,};
enum MACRO_ACCESSWRITE {ACCESSWRITE = 6,};
enum MACRO_AF_RESERVED {AF_RESERVED_36 = 36,AF_IEEE80211 = 37,AF_MAX = 38,};
enum MACRO_ASN1_OBJECT {ASN1_OBJECT_FLAG_DYNAMIC = 0x1,ASN1_OBJECT_FLAG_CRITICAL = 0x2,ASN1_OBJECT_FLAG_DYNAMIC_STRINGS = 0x4,ASN1_OBJECT_FLAG_DYNAMIC_DATA = 0x8,ASN1_STRING_FLAG_BITS_LEFT = 0x8,ASN1_STRING_FLAG_NDEF = 0x10,ASN1_STRING_FLAG_CONT = 0x20,ASN1_LONG_UNDEF = 0x7FFFFFFF,};
enum MACRO_AUT_TRAILER {AUT_TRAILER_MAGIC = 0xB105,};
enum MACRO_BIOCPROMISC {BIOCPROMISC = 536887913,};
enum MACRO_BOOTREQUEST {BOOTREQUEST = 1,BOOTREPLY = 2,};
enum MACRO_B_ASN1_TIME {B_ASN1_TIME = 49152,B_ASN1_PRINTABLE = 81175,B_ASN1_DIRECTORYSTRING = 10502,B_ASN1_DISPLAYTEXT = 10320,};
enum MACRO_CUPS_RASTER {CUPS_RASTER_SYNC = 0x52615333,CUPS_RASTER_REVSYNC = 0x33536152,CUPS_RASTER_SYNCv1 = 0x52615374,CUPS_RASTER_REVSYNCv1 = 0x74536152,CUPS_RASTER_SYNCv2 = 0x52615332,CUPS_RASTER_REVSYNCv2 = 0x32536152,CUPS_RASTER_SYNC_PWG = 0x52615332,CUPS_RASTER_HAVE_COLORIMETRIC = 0x1,CUPS_RASTER_HAVE_DEVICE = 0x1,CUPS_RASTER_HAVE_PWGRASTER = 0x1,CUPS_SC_FD = 0x4,CUPS_MAX_CHAN = 0xF,CUPS_MAX_LUT = 0xFFF,CUPS_MAX_RGB = 0x4,CUPS_MAX_USTRING = 0x2000,};
enum MACRO_CURLOPTTYPE {CURLOPTTYPE_LONG = 0,CURLOPTTYPE_OBJECTPOINT = 10000,CURLOPTTYPE_FUNCTIONPOINT = 20000,CURLOPTTYPE_OFF_T = 30000,};
enum MACRO_CURL_GLOBAL {CURL_GLOBAL_SSL = 1,CURL_GLOBAL_WIN32 = 2,CURL_GLOBAL_ALL = 3,CURL_GLOBAL_NOTHING = 0,CURL_GLOBAL_DEFAULT = 3,CURL_VERSION_IPV6 = 1,CURL_VERSION_KERBEROS4 = 2,CURL_VERSION_SSL = 4,CURL_VERSION_LIBZ = 8,CURL_VERSION_NTLM = 16,CURL_VERSION_GSSNEGOTIATE = 32,CURL_VERSION_DEBUG = 64,CURL_VERSION_ASYNCHDNS = 128,CURL_VERSION_SPNEGO = 256,CURL_VERSION_LARGEFILE = 512,CURL_VERSION_IDN = 1024,CURL_VERSION_SSPI = 2048,CURL_VERSION_CONV = 4096,CURL_VERSION_CURLDEBUG = 8192,CURL_VERSION_TLSAUTH_SRP = 16384,};
enum MACRO_CURL_SOCKET {CURL_SOCKET_BAD = -1,};
enum MACRO_DAYSPERWEEK {DAYSPERWEEK = 7,};
enum MACRO_DEFFILEMODE {DEFFILEMODE = 438,};
enum MACRO_ENCTYPE_ANY {ENCTYPE_ANY = 0,ENCTYPE_DES_CFB64 = 1,ENCTYPE_DES_OFB64 = 2,ENCTYPE_CNT = 3,};
enum MACRO_ERROR_TABLE {ERROR_TABLE_BASE_kdb5 = -1780008448,};
enum MACRO_EndOfStream {EndOfStream = -1,};
enum MACRO_GMONVERSION {GMONVERSION = 0x51879,};
enum MACRO_HASHVERSION {HASHVERSION = 2,};
enum MACRO_HOST_REBOOT {HOST_REBOOT_HALT = 0x8,HOST_REBOOT_UPSDELAY = 0x100,HOST_REBOOT_DEBUGGER = 0x1000,};
enum MACRO_HOURSPERDAY {HOURSPERDAY = 24,};
enum MACRO_ICMP_REJECT {ICMP_REJECT_RST = 0x100,};
enum MACRO_INP_PKTINFO {INP_PKTINFO = 0x8000000,INP_NO_IFT_CELLULAR = 0x20000000,};
enum MACRO_IP_FW_IPOPT {IP_FW_IPOPT_LSRR = 0x1,IP_FW_IPOPT_SSRR = 0x2,IP_FW_IPOPT_RR = 0x4,IP_FW_IPOPT_TS = 0x8,IP_FW_TCPOPT_MSS = 0x1,IP_FW_TCPOPT_WINDOW = 0x2,IP_FW_TCPOPT_SACK = 0x4,IP_FW_TCPOPT_TS = 0x8,IP_FW_TCPOPT_CC = 0x10,};
enum MACRO_KERN_OSTYPE {KERN_OSTYPE = 1,KERN_OSRELEASE = 2,KERN_OSREV = 3,KERN_VERSION = 4,KERN_MAXVNODES = 5,KERN_MAXPROC = 6,KERN_MAXFILES = 7,KERN_ARGMAX = 8,KERN_SECURELVL = 9,KERN_HOSTNAME = 10,KERN_HOSTID = 11,KERN_CLOCKRATE = 12,KERN_VNODE = 13,KERN_PROC = 14,KERN_FILE = 15,KERN_PROF = 16,KERN_POSIX1 = 17,KERN_NGROUPS = 18,KERN_JOB_CONTROL = 19,KERN_SAVED_IDS = 20,KERN_BOOTTIME = 21,KERN_NISDOMAINNAME = 22,KERN_DOMAINNAME = 22,KERN_MAXPARTITIONS = 23,KERN_KDEBUG = 24,KERN_UPDATEINTERVAL = 25,KERN_OSRELDATE = 26,KERN_NTP_PLL = 27,KERN_BOOTFILE = 28,KERN_MAXFILESPERPROC = 29,KERN_MAXPROCPERUID = 30,KERN_DUMPDEV = 31,KERN_IPC = 32,KERN_DUMMY = 33,KERN_PS_STRINGS = 34,KERN_USRSTACK32 = 35,KERN_LOGSIGEXIT = 36,KERN_SYMFILE = 37,KERN_PROCARGS = 38,KERN_NETBOOT = 40,KERN_PANICINFO = 41,KERN_SYSV = 42,KERN_AFFINITY = 43,KERN_TRANSLATE = 44,KERN_CLASSIC = 44,KERN_EXEC = 45,KERN_CLASSICHANDLER = 45,KERN_AIOMAX = 46,KERN_AIOPROCMAX = 47,KERN_AIOTHREADS = 48,KERN_PROCARGS2 = 49,KERN_COREFILE = 50,KERN_COREDUMP = 51,KERN_SUGID_COREDUMP = 52,KERN_PROCDELAYTERM = 53,KERN_SHREG_PRIVATIZABLE = 54,KERN_LOW_PRI_WINDOW = 56,KERN_LOW_PRI_DELAY = 57,KERN_POSIX = 58,KERN_USRSTACK64 = 59,KERN_NX_PROTECTION = 60,KERN_TFP = 61,KERN_PROCNAME = 62,KERN_THALTSTACK = 63,KERN_SPECULATIVE_READS = 64,KERN_OSVERSION = 65,KERN_SAFEBOOT = 66,KERN_LCTX = 67,KERN_RAGEVNODE = 68,KERN_TTY = 69,KERN_CHECKOPENEVT = 70,KERN_THREADNAME = 71,KERN_MAXID = 72,KERN_USRSTACK = 59,KERN_RAGE_PROC = 1,KERN_RAGE_THREAD = 2,KERN_UNRAGE_PROC = 3,KERN_UNRAGE_THREAD = 4,KERN_OPENEVT_PROC = 1,KERN_UNOPENEVT_PROC = 2,KERN_TFP_POLICY = 1,KERN_TFP_POLICY_DENY = 0,KERN_TFP_POLICY_DEFAULT = 2,KERN_KDEFLAGS = 1,KERN_KDDFLAGS = 2,KERN_KDENABLE = 3,KERN_KDSETBUF = 4,KERN_KDGETBUF = 5,KERN_KDSETUP = 6,KERN_KDREMOVE = 7,KERN_KDSETREG = 8,KERN_KDGETREG = 9,KERN_KDREADTR = 10,KERN_KDPIDTR = 11,KERN_KDTHRMAP = 12,KERN_KDPIDEX = 14,KERN_KDSETRTCDEC = 15,KERN_KDGETENTROPY = 16,KERN_KDWRITETR = 17,KERN_KDWRITEMAP = 18,KERN_PANICINFO_MAXSIZE = 1,KERN_PANICINFO_IMAGE = 2,KERN_PROC_ALL = 0,KERN_PROC_PID = 1,KERN_PROC_PGRP = 2,KERN_PROC_SESSION = 3,KERN_PROC_TTY = 4,KERN_PROC_UID = 5,KERN_PROC_RUID = 6,KERN_PROC_LCID = 7,KERN_LCTX_ALL = 0,KERN_LCTX_LCID = 1,};
enum MACRO_KRB5KDC_ERR {KRB5KDC_ERR_CLIENT_NOT_TRUSTED = -1765328322,KRB5KDC_ERR_KDC_NOT_TRUSTED = -1765328321,KRB5KDC_ERR_INVALID_SIG = -1765328320,KRB5KDC_ERR_DH_KEY_PARAMETERS_NOT_ACCEPTED = -1765328319,KRB5KDC_ERR_CERTIFICATE_MISMATCH = -1765328318,};
enum MACRO_KRB5KRB_ERR {KRB5KRB_ERR_GENERIC = -1765328324,KRB5KRB_ERR_FIELD_TOOLONG = -1765328323,};
enum MACRO_LDAP_FILTER {LDAP_FILTER_EXT_MATCH = 0xA9,};
enum MACRO_LDAP_MAXINT {LDAP_MAXINT = 2147483647,LDAP_OPT_API_INFO = 0,LDAP_OPT_DESC = 1,LDAP_OPT_DEREF = 2,LDAP_OPT_SIZELIMIT = 3,LDAP_OPT_TIMELIMIT = 4,LDAP_OPT_REFERRALS = 8,LDAP_OPT_RESTART = 9,LDAP_OPT_PROTOCOL_VERSION = 17,LDAP_OPT_SERVER_CONTROLS = 18,LDAP_OPT_CLIENT_CONTROLS = 19,LDAP_OPT_API_FEATURE_INFO = 21,LDAP_OPT_HOST_NAME = 48,LDAP_OPT_RESULT_CODE = 49,LDAP_OPT_ERROR_NUMBER = 49,LDAP_OPT_DIAGNOSTIC_MESSAGE = 50,LDAP_OPT_ERROR_STRING = 50,LDAP_OPT_MATCHED_DN = 51,LDAP_OPT_SSPI_FLAGS = 146,LDAP_OPT_SIGN = 149,LDAP_OPT_ENCRYPT = 150,LDAP_OPT_SASL_METHOD = 151,LDAP_OPT_SECURITY_CONTEXT = 153,LDAP_OPT_API_EXTENSION_BASE = 16384,LDAP_OPT_DEBUG_LEVEL = 20481,LDAP_OPT_TIMEOUT = 20482,LDAP_OPT_REFHOPLIMIT = 20483,LDAP_OPT_NETWORK_TIMEOUT = 20485,LDAP_OPT_URI = 20486,LDAP_OPT_REFERRAL_URLS = 20487,LDAP_OPT_SOCKBUF = 20488,LDAP_OPT_DEFBASE = 20489,LDAP_OPT_CONNECT_ASYNC = 20496,LDAP_OPT_CONNECT_CB = 20497,LDAP_OPT_X_TLS = 24576,LDAP_OPT_X_TLS_CTX = 24577,LDAP_OPT_X_TLS_CACERTFILE = 24578,LDAP_OPT_X_TLS_CACERTDIR = 24579,LDAP_OPT_X_TLS_CERTFILE = 24580,LDAP_OPT_X_TLS_KEYFILE = 24581,LDAP_OPT_X_TLS_REQUIRE_CERT = 24582,LDAP_OPT_X_TLS_PROTOCOL_MIN = 24583,LDAP_OPT_X_TLS_CIPHER_SUITE = 24584,LDAP_OPT_X_TLS_RANDOM_FILE = 24585,LDAP_OPT_X_TLS_SSL_CTX = 24586,LDAP_OPT_X_TLS_CRLCHECK = 24587,LDAP_OPT_X_TLS_CONNECT_CB = 24588,LDAP_OPT_X_TLS_CONNECT_ARG = 24589,LDAP_OPT_X_TLS_DHFILE = 24590,LDAP_OPT_X_TLS_NEWCTX = 24591,LDAP_OPT_X_TLS_CRLFILE = 24592,LDAP_OPT_X_TLS_PASSPHRASE_TOOL = 24831,LDAP_OPT_X_TLS_NEVER = 0,LDAP_OPT_X_TLS_HARD = 1,LDAP_OPT_X_TLS_DEMAND = 2,LDAP_OPT_X_TLS_ALLOW = 3,LDAP_OPT_X_TLS_TRY = 4,LDAP_OPT_X_TLS_CRL_NONE = 0,LDAP_OPT_X_TLS_CRL_PEER = 1,LDAP_OPT_X_TLS_CRL_ALL = 2,LDAP_OPT_X_TLS_PROTOCOL_SSL2 = 512,LDAP_OPT_X_TLS_PROTOCOL_SSL3 = 768,LDAP_OPT_X_TLS_PROTOCOL_TLS1_0 = 769,LDAP_OPT_X_TLS_PROTOCOL_TLS1_1 = 770,LDAP_OPT_X_TLS_PROTOCOL_TLS1_2 = 771,LDAP_OPT_X_SASL_MECH = 24832,LDAP_OPT_X_SASL_REALM = 24833,LDAP_OPT_X_SASL_AUTHCID = 24834,LDAP_OPT_X_SASL_AUTHZID = 24835,LDAP_OPT_X_SASL_SSF = 24836,LDAP_OPT_X_SASL_SSF_EXTERNAL = 24837,LDAP_OPT_X_SASL_SECPROPS = 24838,LDAP_OPT_X_SASL_SSF_MIN = 24839,LDAP_OPT_X_SASL_SSF_MAX = 24840,LDAP_OPT_X_SASL_MAXBUFSIZE = 24841,LDAP_OPT_X_SASL_MECHLIST = 24842,LDAP_OPT_X_SASL_NOCANON = 24843,LDAP_OPT_X_SASL_USERNAME = 24844,LDAP_OPT_X_SASL_GSS_CREDS = 24845,LDAP_OPT_X_GSSAPI_DO_NOT_FREE_CONTEXT = 25088,LDAP_OPT_X_GSSAPI_ALLOW_REMOTE_PRINCIPAL = 25089,LDAP_OPT_X_KEEPALIVE_IDLE = 25344,LDAP_OPT_X_KEEPALIVE_PROBES = 25345,LDAP_OPT_X_KEEPALIVE_INTERVAL = 25346,LDAP_OPT_PRIVATE_EXTENSION_BASE = 28672,LDAP_OPT_NOREVERSE_LOOKUP = 24843,LDAP_OPT_SUCCESS = 0,LDAP_OPT_ERROR = -1,LDAP_OPT_OFF = 0,LDAP_API_INFO_VERSION = 1,LDAP_FEATURE_INFO_VERSION = 1,LDAP_SYNC_NONE = 0,LDAP_SYNC_REFRESH_ONLY = 1,LDAP_SYNC_RESERVED = 2,LDAP_SYNC_REFRESH_AND_PERSIST = 3,LDAP_SYNC_REFRESH_PRESENTS = 0,LDAP_SYNC_REFRESH_DELETES = 1,LDAP_TAG_SYNC_NEW_COOKIE = 128,LDAP_TAG_SYNC_REFRESH_DELETE = 161,LDAP_TAG_SYNC_REFRESH_PRESENT = 162,LDAP_TAG_SYNC_ID_SET = 163,LDAP_TAG_SYNC_COOKIE = 4,LDAP_TAG_REFRESHDELETES = 1,LDAP_TAG_REFRESHDONE = 1,LDAP_TAG_RELOAD_HINT = 1,LDAP_SYNC_PRESENT = 0,LDAP_SYNC_ADD = 1,LDAP_SYNC_MODIFY = 2,LDAP_SYNC_DELETE = 3,LDAP_SYNC_NEW_COOKIE = 4,LDAP_CHAINING_PREFERRED = 0,LDAP_CHAINING_REQUIRED = 1,LDAP_REFERRALS_PREFERRED = 2,LDAP_REFERRALS_REQUIRED = 3,LDAP_SEARCH_FLAG_DOMAIN_SCOPE = 1,LDAP_SEARCH_FLAG_PHANTOM_ROOT = 2,LDAP_CONTROL_PERSIST_ENTRY_CHANGE_ADD = 1,LDAP_CONTROL_PERSIST_ENTRY_CHANGE_DELETE = 2,LDAP_CONTROL_PERSIST_ENTRY_CHANGE_MODIFY = 4,LDAP_CONTROL_PERSIST_ENTRY_CHANGE_RENAME = 8,LDAP_TAG_EXOP_MODIFY_PASSWD_ID = 128,LDAP_TAG_EXOP_MODIFY_PASSWD_OLD = 129,LDAP_TAG_EXOP_MODIFY_PASSWD_NEW = 130,LDAP_TAG_EXOP_MODIFY_PASSWD_GEN = 128,LDAP_TAG_EXOP_REFRESH_REQ_DN = 128,LDAP_TAG_EXOP_REFRESH_REQ_TTL = 129,LDAP_TAG_EXOP_REFRESH_RES_TTL = 128,LDAP_TAG_MESSAGE = 48,LDAP_TAG_MSGID = 2,LDAP_TAG_LDAPDN = 4,LDAP_TAG_LDAPCRED = 4,LDAP_TAG_CONTROLS = 160,LDAP_TAG_REFERRAL = 163,LDAP_TAG_NEWSUPERIOR = 128,LDAP_TAG_EXOP_REQ_OID = 128,LDAP_TAG_EXOP_REQ_VALUE = 129,LDAP_TAG_EXOP_RES_OID = 138,LDAP_TAG_EXOP_RES_VALUE = 139,LDAP_TAG_IM_RES_OID = 128,LDAP_TAG_IM_RES_VALUE = 129,LDAP_TAG_SASL_RES_CREDS = 135,LDAP_REQ_BIND = 96,LDAP_REQ_UNBIND = 66,LDAP_REQ_SEARCH = 99,LDAP_REQ_MODIFY = 102,LDAP_REQ_ADD = 104,LDAP_REQ_DELETE = 74,LDAP_REQ_MODDN = 108,LDAP_REQ_MODRDN = 108,LDAP_REQ_RENAME = 108,LDAP_REQ_COMPARE = 110,LDAP_REQ_ABANDON = 80,LDAP_REQ_EXTENDED = 119,LDAP_RES_BIND = 97,LDAP_RES_SEARCH_ENTRY = 100,LDAP_RES_SEARCH_REFERENCE = 115,LDAP_RES_SEARCH_RESULT = 101,LDAP_RES_MODIFY = 103,LDAP_RES_ADD = 105,LDAP_RES_DELETE = 107,LDAP_RES_MODDN = 109,LDAP_RES_MODRDN = 109,LDAP_RES_RENAME = 109,LDAP_RES_COMPARE = 111,LDAP_RES_EXTENDED = 120,LDAP_RES_INTERMEDIATE = 121,LDAP_RES_ANY = -1,LDAP_RES_UNSOLICITED = 0,LDAP_SASL_SIMPLE = 0,LDAP_AUTH_NONE = 0,LDAP_AUTH_SIMPLE = 128,LDAP_AUTH_SASL = 163,LDAP_AUTH_KRBV4 = 255,LDAP_AUTH_KRBV41 = 129,LDAP_AUTH_KRBV42 = 130,LDAP_AUTH_NEGOTIATE = 1279,LDAP_FILTER_AND = 160,LDAP_FILTER_OR = 161,LDAP_FILTER_NOT = 162,LDAP_FILTER_EQUALITY = 163,LDAP_FILTER_SUBSTRINGS = 164,LDAP_FILTER_GE = 165,LDAP_FILTER_LE = 166,LDAP_FILTER_PRESENT = 135,LDAP_FILTER_APPROX = 168,LDAP_FILTER_EXT = 169,LDAP_FILTER_EXT_OID = 129,LDAP_FILTER_EXT_TYPE = 130,LDAP_FILTER_EXT_VALUE = 131,LDAP_FILTER_EXT_DNATTRS = 132,LDAP_SUBSTRING_INITIAL = 128,LDAP_SUBSTRING_ANY = 129,LDAP_SUBSTRING_FINAL = 130,LDAP_SCOPE_BASE = 0,LDAP_SCOPE_BASEOBJECT = 0,LDAP_SCOPE_ONELEVEL = 1,LDAP_SCOPE_ONE = 1,LDAP_SCOPE_SUBTREE = 2,LDAP_SCOPE_SUB = 2,LDAP_SCOPE_SUBORDINATE = 3,LDAP_SCOPE_CHILDREN = 3,LDAP_SCOPE_DEFAULT = -1,LDAP_SUCCESS = 0,LDAP_OPERATIONS_ERROR = 1,LDAP_PROTOCOL_ERROR = 2,LDAP_TIMELIMIT_EXCEEDED = 3,LDAP_SIZELIMIT_EXCEEDED = 4,LDAP_COMPARE_FALSE = 5,LDAP_COMPARE_TRUE = 6,LDAP_AUTH_METHOD_NOT_SUPPORTED = 7,LDAP_STRONG_AUTH_NOT_SUPPORTED = 7,LDAP_STRONG_AUTH_REQUIRED = 8,LDAP_STRONGER_AUTH_REQUIRED = 8,LDAP_PARTIAL_RESULTS = 9,LDAP_REFERRAL = 10,LDAP_ADMINLIMIT_EXCEEDED = 11,LDAP_UNAVAILABLE_CRITICAL_EXTENSION = 12,LDAP_CONFIDENTIALITY_REQUIRED = 13,LDAP_SASL_BIND_IN_PROGRESS = 14,LDAP_NO_SUCH_ATTRIBUTE = 16,LDAP_UNDEFINED_TYPE = 17,LDAP_INAPPROPRIATE_MATCHING = 18,LDAP_CONSTRAINT_VIOLATION = 19,LDAP_TYPE_OR_VALUE_EXISTS = 20,LDAP_INVALID_SYNTAX = 21,LDAP_NO_SUCH_OBJECT = 32,LDAP_ALIAS_PROBLEM = 33,LDAP_INVALID_DN_SYNTAX = 34,LDAP_IS_LEAF = 35,LDAP_ALIAS_DEREF_PROBLEM = 36,LDAP_X_PROXY_AUTHZ_FAILURE = 47,LDAP_INAPPROPRIATE_AUTH = 48,LDAP_INVALID_CREDENTIALS = 49,LDAP_INSUFFICIENT_ACCESS = 50,LDAP_BUSY = 51,LDAP_UNAVAILABLE = 52,LDAP_UNWILLING_TO_PERFORM = 53,LDAP_LOOP_DETECT = 54,LDAP_NAMING_VIOLATION = 64,LDAP_OBJECT_CLASS_VIOLATION = 65,LDAP_NOT_ALLOWED_ON_NONLEAF = 66,LDAP_NOT_ALLOWED_ON_RDN = 67,LDAP_ALREADY_EXISTS = 68,LDAP_NO_OBJECT_CLASS_MODS = 69,LDAP_RESULTS_TOO_LARGE = 70,LDAP_AFFECTS_MULTIPLE_DSAS = 71,LDAP_VLV_ERROR = 76,LDAP_OTHER = 80,LDAP_CUP_RESOURCES_EXHAUSTED = 113,LDAP_CUP_SECURITY_VIOLATION = 114,LDAP_CUP_INVALID_DATA = 115,LDAP_CUP_UNSUPPORTED_SCHEME = 116,LDAP_CUP_RELOAD_REQUIRED = 117,LDAP_CANCELLED = 118,LDAP_NO_SUCH_OPERATION = 119,LDAP_TOO_LATE = 120,LDAP_CANNOT_CANCEL = 121,LDAP_ASSERTION_FAILED = 122,LDAP_PROXIED_AUTHORIZATION_DENIED = 123,LDAP_SYNC_REFRESH_REQUIRED = 4096,LDAP_X_SYNC_REFRESH_REQUIRED = 16640,LDAP_X_ASSERTION_FAILED = 16655,LDAP_X_NO_OPERATION = 16654,LDAP_X_NO_REFERRALS_FOUND = 16656,LDAP_X_CANNOT_CHAIN = 16657,LDAP_X_INVALIDREFERENCE = 16658,LDAP_SERVER_DOWN = -1,LDAP_LOCAL_ERROR = -2,LDAP_ENCODING_ERROR = -3,LDAP_DECODING_ERROR = -4,LDAP_TIMEOUT = -5,LDAP_AUTH_UNKNOWN = -6,LDAP_FILTER_ERROR = -7,LDAP_USER_CANCELLED = -8,LDAP_PARAM_ERROR = -9,LDAP_NO_MEMORY = -10,LDAP_CONNECT_ERROR = -11,LDAP_NOT_SUPPORTED = -12,LDAP_CONTROL_NOT_FOUND = -13,LDAP_NO_RESULTS_RETURNED = -14,LDAP_MORE_RESULTS_TO_RETURN = -15,LDAP_CLIENT_LOOP = -16,LDAP_REFERRAL_LIMIT_EXCEEDED = -17,LDAP_X_CONNECTING = -18,LDAP_MOD_OP = 7,LDAP_MOD_ADD = 0,LDAP_MOD_DELETE = 1,LDAP_MOD_REPLACE = 2,LDAP_MOD_INCREMENT = 3,LDAP_MOD_BVALUES = 128,LDAP_DEREF_NEVER = 0,LDAP_DEREF_SEARCHING = 1,LDAP_DEREF_FINDING = 2,LDAP_DEREF_ALWAYS = 3,LDAP_NO_LIMIT = 0,LDAP_MSG_ONE = 0,LDAP_MSG_ALL = 1,LDAP_MSG_RECEIVED = 2,LDAP_URL_SUCCESS = 0,LDAP_URL_ERR_MEM = 1,LDAP_URL_ERR_PARAM = 2,LDAP_URL_ERR_BADSCHEME = 3,LDAP_URL_ERR_BADENCLOSURE = 4,LDAP_URL_ERR_BADURL = 5,LDAP_URL_ERR_BADHOST = 6,LDAP_URL_ERR_BADATTRS = 7,LDAP_URL_ERR_BADSCOPE = 8,LDAP_URL_ERR_BADFILTER = 9,LDAP_URL_ERR_BADEXTS = 10,LDAP_SASL_AUTOMATIC = 0,LDAP_SASL_INTERACTIVE = 1,LDAP_SASL_QUIET = 2,LDAP_AVA_NULL = 0,LDAP_AVA_STRING = 1,LDAP_AVA_BINARY = 2,LDAP_AVA_NONPRINTABLE = 4,LDAP_AVA_FREE_ATTR = 16,LDAP_AVA_FREE_VALUE = 32,LDAP_DN_FORMAT_LDAP = 0,LDAP_DN_FORMAT_LDAPV3 = 16,LDAP_DN_FORMAT_LDAPV2 = 32,LDAP_DN_FORMAT_DCE = 48,LDAP_DN_FORMAT_UFN = 64,LDAP_DN_FORMAT_AD_CANONICAL = 80,LDAP_DN_FORMAT_LBER = 240,LDAP_DN_FORMAT_MASK = 240,LDAP_DN_PRETTY = 256,LDAP_DN_SKIP = 512,LDAP_DN_P_NOLEADTRAILSPACES = 4096,LDAP_DN_P_NOSPACEAFTERRDN = 8192,LDAP_DN_PEDANTIC = 61440,LDAP_API_FEATURE_CANCEL = 1000,LDAP_API_FEATURE_TURN = 1000,LDAP_API_FEATURE_PAGED_RESULTS = 2000,LDAP_API_FEATURE_SERVER_SIDE_SORT = 2000,LDAP_API_FEATURE_VIRTUAL_LIST_VIEW = 2000,LDAP_API_FEATURE_WHOAMI = 1000,LDAP_API_FEATURE_PASSWD_MODIFY = 1000,LDAP_API_FEATURE_PASSWORD_POLICY = 1000,LDAP_API_FEATURE_REFRESH = 1000,};
enum MACRO_LDAP_SCHERR {LDAP_SCHERR_OUTOFMEM = 1,LDAP_SCHERR_UNEXPTOKEN = 2,LDAP_SCHERR_NOLEFTPAREN = 3,LDAP_SCHERR_NORIGHTPAREN = 4,LDAP_SCHERR_NODIGIT = 5,LDAP_SCHERR_BADNAME = 6,LDAP_SCHERR_BADDESC = 7,LDAP_SCHERR_BADSUP = 8,LDAP_SCHERR_DUPOPT = 9,LDAP_SCHERR_EMPTY = 10,LDAP_SCHERR_MISSING = 11,LDAP_SCHERR_OUT_OF_ORDER = 12,LDAP_SCHEMA_NO = 0,LDAP_SCHEMA_YES = 1,LDAP_SCHEMA_USER_APPLICATIONS = 0,LDAP_SCHEMA_DIRECTORY_OPERATION = 1,LDAP_SCHEMA_DISTRIBUTED_OPERATION = 2,LDAP_SCHEMA_DSA_OPERATION = 3,LDAP_SCHEMA_ABSTRACT = 0,LDAP_SCHEMA_STRUCTURAL = 1,LDAP_SCHEMA_AUXILIARY = 2,LDAP_SCHEMA_ALLOW_NONE = 0,LDAP_SCHEMA_ALLOW_NO_OID = 1,LDAP_SCHEMA_ALLOW_QUOTED = 2,LDAP_SCHEMA_ALLOW_DESCR = 4,LDAP_SCHEMA_ALLOW_DESCR_PREFIX = 8,LDAP_SCHEMA_ALLOW_OID_MACRO = 16,LDAP_SCHEMA_ALLOW_OUT_OF_ORDER_FIELDS = 32,LDAP_SCHEMA_ALLOW_ALL = 63,LDAP_SCHEMA_SKIP = 128,LDAP_UCS4_INVALID = 2147483648,};
enum MACRO_M16KCLSHIFT {M16KCLSHIFT = 14,M16KCLBYTES = 16384,};
enum MACRO_MACH_NOTIFY {MACH_NOTIFY_FIRST = 0x40,MACH_NOTIFY_PORT_DELETED = 0x41,MACH_NOTIFY_SEND_POSSIBLE = 0x42,MACH_NOTIFY_PORT_DESTROYED = 0x45,MACH_NOTIFY_NO_SENDERS = 0x46,MACH_NOTIFY_SEND_ONCE = 0x47,MACH_NOTIFY_DEAD_NAME = 0x48,MACH_NOTIFY_LAST = 0x4D,};
enum MACRO_MAXSYMLINKS {MAXSYMLINKS = 32,};
enum MACRO_MAX_FH_SIZE {NFSV4_MAX_FH_SIZE = 128,NFSV3_MAX_FH_SIZE = 64,NFSV2_MAX_FH_SIZE = 32,};
enum MACRO_MAX_MACHINE {MAX_MACHINE_NAME = 255,};
enum MACRO_MAX_TERMCAP {MAX_TERMCAP_LENGTH = 1023,MAX_TERMINFO_LENGTH = 4096,};
enum MACRO_MBIGCLSHIFT {MBIGCLSHIFT = 12,MBIGCLBYTES = 4096,};
enum MACRO_MIB_HANDLER {MIB_HANDLER_AUTO_NEXT = 0x1,MIB_HANDLER_AUTO_NEXT_OVERRIDE_ONCE = 0x2,MIB_HANDLER_INSTANCE = 0x4,MIB_HANDLER_CUSTOM4 = 0x10000000,MIB_HANDLER_CUSTOM3 = 0x20000000,MIB_HANDLER_CUSTOM2 = 0x40000000,MIB_HANDLER_CUSTOM1 = 0x80000000,};
enum MACRO_MINSIGSTKSZ {MINSIGSTKSZ = 32768,SIGSTKSZ = 131072,};
enum MACRO_MINSPERHOUR {MINSPERHOUR = 60,};
enum MACRO_MLD6_MTRACE {MLD6_MTRACE_RESP = 200,MLD6_MTRACE = 201,};
enum MACRO_MONSPERYEAR {MONSPERYEAR = 12,};
enum MACRO_NCURSES_ETI {NCURSES_ETI_H_incl = 1,};
enum MACRO_NCURSES_EXT {NCURSES_EXT_FUNCS = 20081102,NCURSES_ATTR_SHIFT = 8,};
enum MACRO_ND_REDIRECT {ND_REDIRECT_ONLINK = 0,ND_REDIRECT_ROUTER = 1,ND_RA_FLAG_MANAGED = 128,ND_RA_FLAG_OTHER = 64,ND_RA_FLAG_HA = 32,ND_RA_FLAG_RTPREF_MASK = 24,ND_RA_FLAG_RTPREF_HIGH = 8,ND_RA_FLAG_RTPREF_MEDIUM = 0,ND_RA_FLAG_RTPREF_LOW = 24,ND_RA_FLAG_RTPREF_RSV = 16,ND_NA_FLAG_ROUTER = 128,ND_NA_FLAG_SOLICITED = 64,ND_NA_FLAG_OVERRIDE = 32,ND_OPT_SOURCE_LINKADDR = 1,ND_OPT_TARGET_LINKADDR = 2,ND_OPT_PREFIX_INFORMATION = 3,ND_OPT_REDIRECTED_HEADER = 4,ND_OPT_MTU = 5,ND_OPT_RDNSS = 25,ND_OPT_ROUTE_INFO = 200,ND_OPT_PI_FLAG_ONLINK = 128,ND_OPT_PI_FLAG_AUTO = 64,};
enum MACRO_NETSNMP_SEC {NETSNMP_SEC_MODEL_KSM = 2066432,NETSNMP_KSM_SECURITY_MODEL = 2066432,NETSNMP_TSM_SECURITY_MODEL = 4,};
enum MACRO_NETSNMP_USE {NETSNMP_USE_OPENSSL = 1,};
enum MACRO_NFS4_FHSIZE {NFS4_FHSIZE = 128,NFS4_VERIFIER_SIZE = 8,NFS4_OPAQUE_LIMIT = 1024,};
enum MACRO_NFSV3FSINFO {NFSV3FSINFO_LINK = 0x1,NFSV3FSINFO_SYMLINK = 0x2,NFSV3FSINFO_HOMOGENEOUS = 0x8,NFSV3FSINFO_CANSETTIME = 0x10,};
enum MACRO_NMBCLUSTERS {NMBCLUSTERS = 256,};
enum MACRO_NO_PUSHBACK {NO_PUSHBACK = -1,};
enum MACRO_NO_RECOVERY {NO_RECOVERY = 3,NO_DATA = 4,NO_ADDRESS = 4,};
enum MACRO_NX_READONLY {NX_READONLY = 0x1,NX_DEFAULTEXPORT = 0x2,NX_MAPROOT = 0x4,NX_MAPALL = 0x8,NX_32BITCLIENTS = 0x20,NX_OFFLINE = 0x40,};
enum MACRO_OPENSSL_DSA {OPENSSL_DSA_MAX_MODULUS_BITS = 10000,OPENSSL_DSA_FIPS_MIN_MODULUS_BITS = 1024,};
enum MACRO_OPENSSL_ECC {OPENSSL_ECC_MAX_FIELD_BITS = 661,OPENSSL_EC_NAMED_CURVE = 1,};
enum MACRO_OPENSSL_RSA {OPENSSL_RSA_MAX_MODULUS_BITS = 16384,OPENSSL_RSA_FIPS_MIN_MODULUS_BITS = 1024,OPENSSL_RSA_SMALL_MODULUS_BITS = 3072,OPENSSL_RSA_MAX_PUBEXP_BITS = 64,};
enum MACRO_POLICYCLASS {POLICYCLASS_FIXEDPRI = 6,};
enum MACRO_POSIX_SPAWN {POSIX_SPAWN_RESETIDS = 0x1,POSIX_SPAWN_SETPGROUP = 0x2,POSIX_SPAWN_SETSIGDEF = 0x4,POSIX_SPAWN_SETSIGMASK = 0x8,POSIX_SPAWN_SETEXEC = 0x40,POSIX_SPAWN_START_SUSPENDED = 0x80,POSIX_SPAWN_CLOEXEC_DEFAULT = 0x4000,POSIX_SPAWN_PCONTROL_NONE = 0x0,POSIX_SPAWN_PCONTROL_THROTTLE = 0x1,POSIX_SPAWN_PCONTROL_SUSPEND = 0x2,POSIX_SPAWN_PCONTROL_KILL = 0x3,};
enum MACRO_PREALLOCATE {PREALLOCATE = 0x1,ALLOCATECONTIG = 0x2,ALLOCATEALL = 0x4,FREEREMAINDER = 0x8,ALLOCATEFROMPEOF = 0x10,ALLOCATEFROMVOL = 0x20,};
enum MACRO_PROC_KQUEUE {PROC_KQUEUE_SELECT = 1,PROC_KQUEUE_SLEEP = 2,};
enum MACRO_PROC_REGION {PROC_REGION_SUBMAP = 1,PROC_REGION_SHARED = 2,};
enum MACRO_RPCPROG_NFS {RPCPROG_NFS = 100003,RPCPROG_RQUOTA = 100011,};
enum MACRO_RTM_VERSION {RTM_VERSION = 5,RTM_ADD = 1,RTM_DELETE = 2,RTM_CHANGE = 3,RTM_GET = 4,RTM_LOSING = 5,RTM_REDIRECT = 6,RTM_MISS = 7,RTM_LOCK = 8,RTM_OLDADD = 9,RTM_OLDDEL = 10,RTM_RESOLVE = 11,RTM_NEWADDR = 12,RTM_DELADDR = 13,RTM_IFINFO = 14,RTM_NEWMADDR = 15,RTM_DELMADDR = 16,RTM_IFINFO2 = 18,RTM_NEWMADDR2 = 19,RTM_GET2 = 20,};
enum MACRO_SIGNATURE_0 {SIGNATURE = 10,};
enum MACRO_SNMP_DETAIL {SNMP_DETAIL_SIZE = 512,SNMP_FLAGS_UDP_BROADCAST = 2048,SNMP_FLAGS_RESP_CALLBACK = 1024,SNMP_FLAGS_USER_CREATED = 512,SNMP_FLAGS_DONT_PROBE = 256,SNMP_FLAGS_STREAM_SOCKET = 128,SNMP_FLAGS_LISTENING = 64,SNMP_FLAGS_SUBSESSION = 32,SNMP_FLAGS_STRIKE2 = 2,SNMP_FLAGS_STRIKE1 = 1,};
enum MACRO_SO_PEERCRED {SO_PEERCRED = 1,};
enum MACRO_SQLITE_UTF8 {SQLITE_UTF8 = 1,SQLITE_UTF16LE = 2,SQLITE_UTF16BE = 3,SQLITE_UTF16 = 4,SQLITE_ANY = 5,SQLITE_UTF16_ALIGNED = 8,SQLITE_STATIC = 0,SQLITE_TRANSIENT = -1,SQLITE_INDEX_CONSTRAINT_EQ = 2,SQLITE_INDEX_CONSTRAINT_GT = 4,SQLITE_INDEX_CONSTRAINT_LE = 8,SQLITE_INDEX_CONSTRAINT_LT = 16,SQLITE_INDEX_CONSTRAINT_GE = 32,SQLITE_INDEX_CONSTRAINT_MATCH = 64,SQLITE_MUTEX_FAST = 0,SQLITE_MUTEX_RECURSIVE = 1,SQLITE_MUTEX_STATIC_MASTER = 2,SQLITE_MUTEX_STATIC_MEM = 3,SQLITE_MUTEX_STATIC_MEM2 = 4,SQLITE_MUTEX_STATIC_OPEN = 4,SQLITE_MUTEX_STATIC_PRNG = 5,SQLITE_MUTEX_STATIC_LRU = 6,SQLITE_MUTEX_STATIC_LRU2 = 7,SQLITE_MUTEX_STATIC_PMEM = 7,SQLITE_TESTCTRL_FIRST = 5,SQLITE_TESTCTRL_PRNG_SAVE = 5,SQLITE_TESTCTRL_PRNG_RESTORE = 6,SQLITE_TESTCTRL_PRNG_RESET = 7,SQLITE_TESTCTRL_BITVEC_TEST = 8,SQLITE_TESTCTRL_FAULT_INSTALL = 9,SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS = 10,SQLITE_TESTCTRL_PENDING_BYTE = 11,SQLITE_TESTCTRL_ASSERT = 12,SQLITE_TESTCTRL_ALWAYS = 13,SQLITE_TESTCTRL_RESERVE = 14,SQLITE_TESTCTRL_OPTIMIZATIONS = 15,SQLITE_TESTCTRL_ISKEYWORD = 16,SQLITE_TESTCTRL_PGHDRSZ = 17,SQLITE_TESTCTRL_SCRATCHMALLOC = 18,SQLITE_TESTCTRL_LAST = 18,SQLITE_STATUS_MEMORY_USED = 0,SQLITE_STATUS_PAGECACHE_USED = 1,SQLITE_STATUS_PAGECACHE_OVERFLOW = 2,SQLITE_STATUS_SCRATCH_USED = 3,SQLITE_STATUS_SCRATCH_OVERFLOW = 4,SQLITE_STATUS_MALLOC_SIZE = 5,SQLITE_STATUS_PARSER_STACK = 6,SQLITE_STATUS_PAGECACHE_SIZE = 7,SQLITE_STATUS_SCRATCH_SIZE = 8,SQLITE_STATUS_MALLOC_COUNT = 9,SQLITE_DBSTATUS_LOOKASIDE_USED = 0,SQLITE_DBSTATUS_CACHE_USED = 1,SQLITE_DBSTATUS_SCHEMA_USED = 2,SQLITE_DBSTATUS_STMT_USED = 3,SQLITE_DBSTATUS_LOOKASIDE_HIT = 4,SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE = 5,SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL = 6,SQLITE_DBSTATUS_MAX = 6,SQLITE_STMTSTATUS_FULLSCAN_STEP = 1,SQLITE_STMTSTATUS_SORT = 2,SQLITE_STMTSTATUS_AUTOINDEX = 3,};
enum MACRO_SSL3_MT_CCS {SSL3_MT_CCS = 1,SSL3_CC_READ = 1,SSL3_CC_WRITE = 2,SSL3_CC_CLIENT = 16,SSL3_CC_SERVER = 32,SSL3_CHANGE_CIPHER_CLIENT_WRITE = 18,SSL3_CHANGE_CIPHER_SERVER_READ = 33,SSL3_CHANGE_CIPHER_CLIENT_READ = 17,SSL3_CHANGE_CIPHER_SERVER_WRITE = 34,};
enum MACRO_SUBCMDSHIFT {SUBCMDSHIFT = 8,};
enum MACRO_SYS_ORTABLE {SYS_ORTABLE_REGISTERED_OK = 0,SYS_ORTABLE_REGISTRATION_FAILED = -1,SYS_ORTABLE_UNREGISTERED_OK = 0,SYS_ORTABLE_NO_SUCH_REGISTRATION = -1,};
enum MACRO_S_ATTR_SOME {S_ATTR_SOME_INSTRUCTIONS = 0x400,S_ATTR_EXT_RELOC = 0x200,S_ATTR_LOC_RELOC = 0x100,};
enum MACRO_TCPOPT_SACK {TCPOPT_SACK_PERMIT_HDR = 16843778,TCPOPT_SACK_HDR = 16844032,};
enum MACRO_TCP_NSTATES {TCP_NSTATES = 11,};
enum MACRO_THREAD_INFO {THREAD_INFO_MAX = 1024,THREAD_BASIC_INFO = 3,THREAD_IDENTIFIER_INFO = 4,};
enum MACRO_THREAD_NULL {THREAD_NULL = 0,TID_NULL = 0,THR_ACT_NULL = 0,IPC_SPACE_NULL = 0,HOST_NULL = 0,HOST_PRIV_NULL = 0,HOST_SECURITY_NULL = 0,PROCESSOR_SET_NULL = 0,PROCESSOR_NULL = 0,SEMAPHORE_NULL = 0,LOCK_SET_NULL = 0,LEDGER_NULL = 0,ALARM_NULL = 0,CLOCK_NULL = 0,UND_SERVER_NULL = 0,};
enum MACRO_TIOCPTYUNLK {TIOCPTYUNLK = 536900690,};
enum MACRO_TLS1_FINISH {TLS1_FINISH_MAC_LENGTH = 12,};
enum MACRO_VIEWSTORAGE {VIEWSTORAGE = 6,};
enum MACRO_VIEWSUBTREE {VIEWSUBTREE = 3,VIEWMASK = 4,};
enum MACRO_WHODVERSION {WHODVERSION = 1,};
enum MACRO_YPMAXDOMAIN {YPMAXDOMAIN = 64,};
enum MACRO_YPMAXRECORD {YPMAXRECORD = 1024,};
enum MACRO__MACH_ERROR {_MACH_ERROR_ = 1,};
enum MACRO___DARWIN_FD {__DARWIN_FD_SETSIZE = 1024,__DARWIN_NBBY = 8,};
typedef struct __NSObjectFileImage *NSObjectFileImage;
typedef struct pkcs7_enc_content_st PKCS7_ENC_CONTENT;
typedef struct pkcs7_signer_info_st PKCS7_SIGNER_INFO;
typedef struct PKEY_USAGE_PERIOD_st PKEY_USAGE_PERIOD;
struct RIPEMD160state_st {unsigned int A;unsigned int B;unsigned int C;unsigned int D;unsigned int E;unsigned int Nl;unsigned int Nh;unsigned int data[16];unsigned int num;};
typedef struct seed_key_st SEED_KEY_SCHEDULE;
typedef void SNMPAlarmCallback(unsigned int clientreg, void *clientarg);
typedef struct slapi_componentid Slapi_ComponentId;
typedef struct v3_ext_method X509V3_EXT_METHOD;
typedef struct x509_hash_dir_st X509_HASH_DIR_CTX;
typedef struct X509_POLICY_CACHE_st X509_POLICY_CACHE;
typedef struct X509_POLICY_LEVEL_st X509_POLICY_LEVEL;
typedef struct X509_VERIFY_PARAM_st X509_VERIFY_PARAM;
typedef struct _F11203120C87D682B8E6D27123FE2347 __Reply__vm_map_t;
typedef void *__builtin_va_list;
typedef long long __darwin_intptr_t;
struct __darwin_mmst_reg {char __mmst_reg[10];char __mmst_rsrv[6];};
struct __res_9_state_ext;
struct _opaque_pthread_t {long long __sig;struct __darwin_pthread_handler_rec *__cleanup_stack;char __opaque[1168];};
struct _xmlAutomataState;
struct _xmlSchemaSAXPlug;
struct _xmlXPathCompExpr;
struct asn1_const_ctx_st { unsigned char *p;int eos;int error;int inf;int tag;int xclass;long long slen; unsigned char *max; unsigned char *q; unsigned char **pp;int line;};
typedef struct _D4151FDBB8529D6CBB93F4DEF633B437 au_socketinet32_t;
typedef struct auditpinfo_addr auditpinfo_addr_t;
typedef char *bp_machine_name_t;
typedef void *(*cups_acopy_func_t)(void *element, void *data);
typedef void (*cups_afree_func_t)(void *element, void *data);
typedef int (*cups_ahash_func_t)(void *element, void *data);
typedef int (*cups_array_func_t)(void *first, void *second, void *data);
enum cups_sc_command_e {CUPS_SC_CMD_NONE = 0x0,CUPS_SC_CMD_SOFT_RESET = 0x1,CUPS_SC_CMD_DRAIN_OUTPUT = 0x2,CUPS_SC_CMD_GET_BIDI = 0x3,CUPS_SC_CMD_GET_DEVICE_ID = 0x4,CUPS_SC_CMD_GET_STATE = 0x5,CUPS_SC_CMD_SNMP_GET = 0x6,CUPS_SC_CMD_SNMP_GET_NEXT = 0x7,CUPS_SC_CMD_GET_CONNECTED = 0x8,CUPS_SC_CMD_MAX = 0x9,};
typedef union _DB0CF6B582A763FBC7ADB1435806EA74 dispatch_object_t;
typedef struct dispatch_source_s *dispatch_source_t;
typedef struct _DF1D91DCAB84234D18917BEB10ABC3BE dns_ISDN_record_t;
struct evp_Encode_Ctx_st {int num;int length;unsigned char enc_data[80];int line_num;int expect_nl;};
typedef int evp_verify_method(int type,  unsigned char *m, unsigned int m_length,  unsigned char *sigbuf, unsigned int siglen, void *key);
typedef void (*fatalErrorSAXFunc)(void *ctx,  char *msg, ...);
struct gss_ctx_id_struct;
typedef struct host_basic_info *host_basic_info_t;
typedef struct host_sched_info *host_sched_info_t;
typedef struct http_credential_s http_credential_t;
enum http_encryption_e {HTTP_ENCRYPT_IF_REQUESTED = 0x0,HTTP_ENCRYPT_NEVER = 0x1,HTTP_ENCRYPT_REQUIRED = 0x2,HTTP_ENCRYPT_ALWAYS = 0x3,};
enum http_uri_coding_e {HTTP_URI_CODING_NONE = 0x0,HTTP_URI_CODING_USERNAME = 0x1,HTTP_URI_CODING_HOSTNAME = 0x2,HTTP_URI_CODING_RESOURCE = 0x4,HTTP_URI_CODING_MOST = 0x7,HTTP_URI_CODING_QUERY = 0x8,HTTP_URI_CODING_ALL = 0xF,};
enum http_uri_status_e {HTTP_URI_OVERFLOW = 0xFFFFFFF8,HTTP_URI_BAD_ARGUMENTS = 0xFFFFFFF9,HTTP_URI_BAD_RESOURCE = 0xFFFFFFFA,HTTP_URI_BAD_PORT = 0xFFFFFFFB,HTTP_URI_BAD_HOSTNAME = 0xFFFFFFFC,HTTP_URI_BAD_USERNAME = 0xFFFFFFFD,HTTP_URI_BAD_SCHEME = 0xFFFFFFFE,HTTP_URI_BAD_URI = 0xFFFFFFFF,HTTP_URI_OK = 0x0,HTTP_URI_MISSING_SCHEME = 0x1,HTTP_URI_UNKNOWN_SCHEME = 0x2,HTTP_URI_MISSING_RESOURCE = 0x3,};
typedef struct kmod_info_32_v1 kmod_info_32_v1_t;
typedef struct kmod_info_64_v1 kmod_info_64_v1_t;
typedef struct _krb5_auth_context *krb5_auth_context;
typedef struct _krb5_cccol_cursor *krb5_cccol_cursor;
typedef struct _krb5_enc_tkt_part krb5_enc_tkt_part;
typedef struct krb5_keytab_entry_st krb5_keytab_entry;
typedef struct _krb5_ticket_times krb5_ticket_times;
typedef void *lt_dlinterface_id;
typedef struct _71210C31999B47ECFCA79A4496892A9D mach_msg_header_t;
typedef struct _54E3C4845DCBBBAE0B28E8CAF275DF3F mig_reply_error_t;
typedef void mpo_policy_init_t(struct mac_policy_conf *mpc);
typedef struct netsnmp_addr_pair_s netsnmp_addr_pair;
typedef struct netsnmp_container_s netsnmp_container;
typedef struct netsnmp_data_list_s netsnmp_data_list;
typedef struct netsnmp_table_row_s netsnmp_table_row;
typedef struct netsnmp_tdata_row_s netsnmp_tdata_row;
typedef struct netsnmp_transport_s netsnmp_transport;
typedef struct policy_rr_limit *policy_rr_limit_t;
typedef void *posix_spawnattr_t;
typedef int rl_command_func_t(int, int);
typedef int sasl_chalprompt_t(void *context, int id,  char *challenge,  char *prompt,  char *defresult,  char **result, unsigned int *len);
typedef void sasl_mutex_free_t(void *mutex);
typedef int sasl_mutex_lock_t(void *mutex);
typedef struct sasl_out_params sasl_out_params_t;
typedef union _4932DC24BA09BB104202CABB17FCEE34 servers_ip_addr_t;
struct slapi_componentid;
typedef struct task_basic_info *task_basic_info_t;
typedef struct vm_statistics64 *vm_statistics64_t;
struct vnop_advlock_args;
typedef struct __darwin_i386_avx_state x86_avx_state32_t;
typedef struct __darwin_x86_avx_state64 x86_avx_state64_t;
typedef struct x86_debug_state x86_debug_state_t;
typedef struct x86_float_state x86_float_state_t;
typedef struct _xmlHashTable xmlAttributeTable;
typedef struct _xmlElementContent xmlElementContent;
typedef struct _xmlParserNodeInfo xmlParserNodeInfo;
typedef struct _xmlSchemaNotation xmlSchemaNotation;
typedef struct _xmlSchemaTypeLink xmlSchemaTypeLink;
typedef struct _xmlSchemaWildcard xmlSchemaWildcard;
typedef struct xp_window_changes_struct xp_window_changes;
typedef struct _xsltDecimalFormat xsltDecimalFormat;
typedef struct _xsltSecurityPrefs xsltSecurityPrefs;
struct ASN1_ENCODING_st {unsigned char *enc;long long len;int modified;};
typedef void (*BER_LOG_PRINT_FN)( char *buf);
typedef struct bio_f_buffer_ctx_struct BIO_F_BUFFER_CTX;
typedef struct DES_ks DES_key_schedule;
typedef struct _DD7F30A52BF20C3BD0A18D92A677C06B EC_builtin_curve;
typedef struct krb5_authenticator_st KRB5_AUTHENTBODY;
typedef struct ldap_matchingrule LDAPMatchingRule;
enum MACRO_ABORT_CHAR {ABORT_CHAR = 7,};
enum MACRO_ACCESSREAD {ACCESSREAD = 5,};
enum MACRO_ACCOUNTING {ACCOUNTING = 9,};
enum MACRO_AIO_LISTIO {AIO_LISTIO_MAX = 16,};
enum MACRO_ARCDENSITY {ARCDENSITY = 2,};
enum MACRO_AUDIT_HARD {AUDIT_HARD_LIMIT_FREE_BLOCKS = 4,AUDIT_TRIGGER_MIN = 1,AUDIT_TRIGGER_LOW_SPACE = 1,AUDIT_TRIGGER_ROTATE_KERNEL = 2,AUDIT_TRIGGER_READ_FILE = 3,AUDIT_TRIGGER_CLOSE_AND_DIE = 4,AUDIT_TRIGGER_NO_SPACE = 5,AUDIT_TRIGGER_ROTATE_USER = 6,AUDIT_TRIGGER_INITIALIZE = 7,AUDIT_TRIGGER_EXPIRE_TRAILS = 8,AUDIT_TRIGGER_MAX = 8,};
enum MACRO_BADVERSION {BADVERSION = 6,};
enum MACRO_BTREEMAGIC {BTREEMAGIC = 0x53162,};
enum MACRO_CLSIZELOG2 {CLSIZELOG2 = 0,MSIZESHIFT = 8,MSIZE = 256,};
enum MACRO_CTL_UNSPEC {CTL_UNSPEC = 0,CTL_KERN = 1,CTL_VM = 2,CTL_VFS = 3,CTL_NET = 4,CTL_DEBUG = 5,CTL_HW = 6,CTL_MACHDEP = 7,CTL_USER = 8,CTL_MAXID = 9,};
enum MACRO_CURL_CHUNK {CURL_CHUNK_BGN_FUNC_OK = 0,CURL_CHUNK_BGN_FUNC_FAIL = 1,CURL_CHUNK_BGN_FUNC_SKIP = 2,CURL_CHUNK_END_FUNC_OK = 0,CURL_CHUNK_END_FUNC_FAIL = 1,CURL_FNMATCHFUNC_MATCH = 0,CURL_FNMATCHFUNC_NOMATCH = 1,CURL_FNMATCHFUNC_FAIL = 2,CURL_SEEKFUNC_OK = 0,CURL_SEEKFUNC_FAIL = 1,CURL_SEEKFUNC_CANTSEEK = 2,CURL_READFUNC_ABORT = 268435456,CURL_READFUNC_PAUSE = 268435457,};
enum MACRO_CURL_ERROR {CURL_ERROR_SIZE = 256,};
enum MACRO_DKIOCEJECT {DKIOCEJECT = 536896533,};
enum MACRO_DLT_PFSYNC {DLT_PFSYNC = 18,};
enum MACRO_ENGINETIME {ENGINETIME_MAX = 2147483647,ENGINEBOOT_MAX = 2147483647,};
enum MACRO_FIRST_PASS {FIRST_PASS = 1,LAST_PASS = 2,};
enum MACRO_GMON_MAGIC {GMON_MAGIC = 0xBEEFBABE,GMON_MAGIC_64 = 0xBEEFBABF,};
enum MACRO_HAS_FUTIME {HAS_FUTIME = 0,};
enum MACRO_HAVE_AES_0 {HAVE_AES = 1,};
enum MACRO_HOST_BASIC {HOST_BASIC_INFO = 1,HOST_SCHED_INFO = 3,HOST_RESOURCE_SIZES = 4,HOST_PRIORITY_INFO = 5,HOST_SEMAPHORE_TRAPS = 7,HOST_MACH_MSG_TRAP = 8,HOST_LOAD_INFO = 1,HOST_VM_INFO = 2,HOST_CPU_LOAD_INFO = 3,HOST_VM_INFO64 = 4,HOST_EXTMOD_INFO64 = 5,HOST_NOTIFY_CALENDAR_CHANGE = 0,HOST_NOTIFY_TYPE_MAX = 0,HOST_CALENDAR_CHANGED_REPLYID = 950,HOST_SECURITY_PORT = 0,HOST_PORT = 1,HOST_PRIV_PORT = 2,HOST_IO_MASTER_PORT = 3,HOST_MAX_SPECIAL_KERNEL_PORT = 7,HOST_DYNAMIC_PAGER_PORT = 8,HOST_AUDIT_CONTROL_PORT = 9,HOST_USER_NOTIFICATION_PORT = 10,HOST_AUTOMOUNTD_PORT = 11,HOST_LOCKD_PORT = 12,HOST_SEATBELT_PORT = 14,HOST_KEXTD_PORT = 15,HOST_CHUD_PORT = 16,HOST_UNFREED_PORT = 17,HOST_AMFID_PORT = 18,HOST_MAX_SPECIAL_PORT = 19,HOST_LOCAL_NODE = -1,};
enum MACRO_INITIALIZE {DO_INITIALIZE = 1,DONT_INITIALIZE = 0,};
enum MACRO_IP_DEFAULT {IP_DEFAULT_MULTICAST_TTL = 1,IP_DEFAULT_MULTICAST_LOOP = 1,IP_MIN_MEMBERSHIPS = 31,IP_MAX_MEMBERSHIPS = 4095,IP_MAX_GROUP_SRC_FILTER = 512,IP_MAX_SOCK_SRC_FILTER = 128,IP_MAX_SOCK_MUTE_FILTER = 128,};
enum MACRO_KEY_SENDUP {KEY_SENDUP_ONE = 0,KEY_SENDUP_ALL = 1,KEY_SENDUP_REGISTERED = 2,};
enum MACRO_KRB5KRB_AP {KRB5KRB_AP_ERR_NO_TGT = -1765328317,};
enum MACRO_KRB5_INT32 {KRB5_INT32_MAX = 2147483647,KRB5_INT32_MIN = -2147483648,KRB5_INT16_MAX = 65535,KRB5_INT16_MIN = -65536,};
enum MACRO_KRB5_PRINC {KRB5_PRINC_NOMATCH = -1765328238,KRB5_KDCREP_MODIFIED = -1765328237,KRB5_KDCREP_SKEW = -1765328236,KRB5_IN_TKT_REALM_MISMATCH = -1765328235,KRB5_PROG_ETYPE_NOSUPP = -1765328234,KRB5_PROG_KEYTYPE_NOSUPP = -1765328233,KRB5_WRONG_ETYPE = -1765328232,KRB5_PROG_SUMTYPE_NOSUPP = -1765328231,KRB5_REALM_UNKNOWN = -1765328230,KRB5_SERVICE_UNKNOWN = -1765328229,KRB5_KDC_UNREACH = -1765328228,KRB5_NO_LOCALNAME = -1765328227,KRB5_MUTUAL_FAILED = -1765328226,KRB5_RC_TYPE_EXISTS = -1765328225,KRB5_RC_MALLOC = -1765328224,KRB5_RC_TYPE_NOTFOUND = -1765328223,KRB5_RC_UNKNOWN = -1765328222,KRB5_RC_REPLAY = -1765328221,KRB5_RC_IO = -1765328220,KRB5_RC_NOIO = -1765328219,KRB5_RC_PARSE = -1765328218,KRB5_RC_IO_EOF = -1765328217,KRB5_RC_IO_MALLOC = -1765328216,KRB5_RC_IO_PERM = -1765328215,KRB5_RC_IO_IO = -1765328214,KRB5_RC_IO_UNKNOWN = -1765328213,KRB5_RC_IO_SPACE = -1765328212,KRB5_TRANS_CANTOPEN = -1765328211,KRB5_TRANS_BADFORMAT = -1765328210,KRB5_LNAME_CANTOPEN = -1765328209,KRB5_LNAME_NOTRANS = -1765328208,KRB5_LNAME_BADFORMAT = -1765328207,KRB5_CRYPTO_INTERNAL = -1765328206,KRB5_KT_BADNAME = -1765328205,KRB5_KT_UNKNOWN_TYPE = -1765328204,KRB5_KT_NOTFOUND = -1765328203,KRB5_KT_END = -1765328202,KRB5_KT_NOWRITE = -1765328201,KRB5_KT_IOERR = -1765328200,KRB5_NO_TKT_IN_RLM = -1765328199,};
enum MACRO_KRB5_REALM {KRB5_REALM_CANT_RESOLVE = -1765328164,KRB5_TKT_NOT_FORWARDABLE = -1765328163,KRB5_FWD_BAD_PRINCIPAL = -1765328162,KRB5_GET_IN_TKT_LOOP = -1765328161,KRB5_CONFIG_NODEFREALM = -1765328160,KRB5_SAM_UNSUPPORTED = -1765328159,KRB5_SAM_INVALID_ETYPE = -1765328158,KRB5_SAM_NO_CHECKSUM = -1765328157,KRB5_SAM_BAD_CHECKSUM = -1765328156,KRB5_KT_NAME_TOOLONG = -1765328155,KRB5_KT_KVNONOTFOUND = -1765328154,KRB5_APPL_EXPIRED = -1765328153,KRB5_LIB_EXPIRED = -1765328152,KRB5_CHPW_PWDNULL = -1765328151,KRB5_CHPW_FAIL = -1765328150,KRB5_KT_FORMAT = -1765328149,KRB5_NOPERM_ETYPE = -1765328148,KRB5_CONFIG_ETYPE_NOSUPP = -1765328147,KRB5_OBSOLETE_FN = -1765328146,KRB5_EAI_FAIL = -1765328145,KRB5_EAI_NODATA = -1765328144,KRB5_EAI_NONAME = -1765328143,KRB5_EAI_SERVICE = -1765328142,KRB5_ERR_NUMERIC_REALM = -1765328141,KRB5_ERR_BAD_S2K_PARAMS = -1765328140,KRB5_ERR_NO_SERVICE = -1765328139,KRB5_CC_READONLY = -1765328138,KRB5_CC_NOSUPP = -1765328137,KRB5_DELTAT_BADFORMAT = -1765328136,KRB5_PLUGIN_NO_HANDLE = -1765328135,KRB5_PLUGIN_OP_NOTSUPP = -1765328134,};
enum MACRO_LC_COLLATE {LC_COLLATE_MASK = 1,LC_CTYPE_MASK = 2,LC_MESSAGES_MASK = 4,LC_MONETARY_MASK = 8,LC_NUMERIC_MASK = 16,LC_TIME_MASK = 32,};
enum MACRO_MACH_PORTS {MACH_PORTS_SLOTS_USED = 3,};
enum MACRO_MACH_SCHED {MACH_SCHED = 0x0,MACH_STACK_ATTACH = 0x1,MACH_STACK_HANDOFF = 0x2,MACH_CALL_CONT = 0x3,MACH_CALLOUT = 0x4,MACH_STACK_DETACH = 0x5,MACH_MAKE_RUNNABLE = 0x6,MACH_PROMOTE = 0x7,MACH_DEMOTE = 0x8,MACH_IDLE = 0x9,MACH_STACK_DEPTH = 0xA,MACH_MOVED = 0xB,MACH_FAIRSHARE_ENTER = 0xC,MACH_FAIRSHARE_EXIT = 0xD,MACH_FAILSAFE = 0xE,MACH_GET_URGENCY = 0x14,MACH_URGENCY = 0x15,MACH_REDISPATCH = 0x16,MACH_REMOTE_AST = 0x17,MACH_SCHED_LPA_BROKEN = 0x18,};
enum MACRO_MAC_WAITOK {MAC_WAITOK = 0,MAC_NOWAIT = 1,};
enum MACRO_MAP_FAILED {MAP_FAILED = -1,};
enum MACRO_MAP_SHARED {MAP_SHARED = 0x1,MAP_PRIVATE = 0x2,MAP_COPY = 0x2,MAP_FIXED = 0x10,MAP_RENAME = 0x20,MAP_NORESERVE = 0x40,MAP_RESERVED0080 = 0x80,MAP_NOEXTEND = 0x100,MAP_HASSEMAPHORE = 0x200,MAP_NOCACHE = 0x400,MAP_JIT = 0x800,};
enum MACRO_MAXDFLSRCH {MAXDFLSRCH = 3,};
enum MACRO_MAXLOGNAME {MAXLOGNAME = 255,};
enum MACRO_MAXNAMELEN {MAXNAMELEN = 1025,};
enum MACRO_MAXPATHLEN {MAXPATHLEN = 1024,};
enum MACRO_MAXPKTSIZE {MAXPKTSIZE = 65468,};
enum MACRO_MAXSEGSIZE {MAXSEGSIZE = 65464,};
enum MACRO_MAX_KEYTAB {MAX_KEYTAB_NAME_LEN = 1100,};
enum MACRO_MAX_NETOBJ {MAX_NETOBJ_SZ = 1024,MAX_AUTH_BYTES = 400,};
enum MACRO_MFSNAMELEN {MFSNAMELEN = 15,MFSTYPENAMELEN = 16,MNAMELEN = 1024,};
enum MACRO_MIB_IFTYPE {MIB_IFTYPE_OTHER = 1,MIB_IFTYPE_REGULAR1822 = 2,MIB_IFTYPE_HDH1822 = 3,MIB_IFTYPE_DDNX25 = 4,MIB_IFTYPE_RFC877X25 = 5,MIB_IFTYPE_ETHERNETCSMACD = 6,MIB_IFTYPE_ISO88023CSMACD = 7,MIB_IFTYPE_ISO88024TOKENBUS = 8,MIB_IFTYPE_ISO88025TOKENRING = 9,MIB_IFTYPE_ISO88026MAN = 10,MIB_IFTYPE_STARLAN = 11,MIB_IFTYPE_PROTEON10MBIT = 12,MIB_IFTYPE_PROTEON80MBIT = 13,MIB_IFTYPE_HYPERCHANNEL = 14,MIB_IFTYPE_FDDI = 15,MIB_IFTYPE_LAPB = 16,MIB_IFTYPE_SDLC = 17,MIB_IFTYPE_T1CARRIER = 18,MIB_IFTYPE_CEPT = 19,MIB_IFTYPE_BASICISDN = 20,MIB_IFTYPE_PRIMARYISDN = 21,MIB_IFTYPE_PROPPOINTTOPOINTSERIAL = 22,MIB_IFSTATUS_UP = 1,MIB_IFSTATUS_DOWN = 2,MIB_IFSTATUS_TESTING = 3,MIB_FORWARD_GATEWAY = 1,MIB_FORWARD_HOST = 2,MIB_IPROUTETYPE_OTHER = 1,MIB_IPROUTETYPE_INVALID = 2,MIB_IPROUTETYPE_DIRECT = 3,MIB_IPROUTETYPE_REMOTE = 4,MIB_IPROUTEPROTO_OTHER = 1,MIB_IPROUTEPROTO_LOCAL = 2,MIB_IPROUTEPROTO_NETMGMT = 3,MIB_IPROUTEPROTO_ICMP = 4,MIB_IPROUTEPROTO_EGP = 5,MIB_IPROUTEPROTO_GGP = 6,MIB_IPROUTEPROTO_HELLO = 7,MIB_IPROUTEPROTO_RIP = 8,MIB_IPROUTEPROTO_ISIS = 9,MIB_IPROUTEPROTO_ESIS = 10,MIB_IPROUTEPROTO_CISCOIGRP = 11,MIB_IPROUTEPROTO_BBNSPFIGP = 12,MIB_IPROUTEPROTO_OIGP = 13,MIB_TCPRTOALG_OTHER = 1,MIB_TCPRTOALG_CONSTANT = 2,MIB_TCPRTOALG_RSRE = 3,MIB_TCPRTOALG_VANJ = 4,MIB_TCPCONNSTATE_CLOSED = 1,MIB_TCPCONNSTATE_LISTEN = 2,MIB_TCPCONNSTATE_SYNSENT = 3,MIB_TCPCONNSTATE_SYNRECEIVED = 4,MIB_TCPCONNSTATE_ESTABLISHED = 5,MIB_TCPCONNSTATE_FINWAIT1 = 6,MIB_TCPCONNSTATE_FINWAIT2 = 7,MIB_TCPCONNSTATE_CLOSEWAIT = 8,MIB_TCPCONNSTATE_LASTACK = 9,MIB_TCPCONNSTATE_CLOSING = 10,MIB_TCPCONNSTATE_TIMEWAIT = 11,MIB_EGPNEIGHSTATE_IDLE = 1,MIB_EGPNEIGHSTATE_AQUISITION = 2,MIB_EGPNEIGHSTATE_DOWN = 3,MIB_EGPNEIGHSTATE_UP = 4,MIB_EGPNEIGHSTATE_CEASE = 5,};
enum MACRO_MLD_MTRACE {MLD_MTRACE_RESP = 200,MLD_MTRACE = 201,};
enum MACRO_MNTPATHLEN {MNTPATHLEN = 1024,};
enum MACRO_MT_LIBRARY {MT_LIBRARY_ID = 0,MT_APPLICATION_ID = 1,MT_TOKEN_ID = 2,MT_MAX_IDS = 3,MT_MAX_SUBIDS = 10,MT_LIB_NONE = 0,MT_LIB_SESSION = 1,MT_LIB_REQUESTID = 2,MT_LIB_MESSAGEID = 3,MT_LIB_SESSIONID = 4,MT_LIB_TRANSID = 5,MT_LIB_MAXIMUM = 6,};
enum MACRO_NAMESERVER {NAMESERVER_PORT = 53,};
enum MACRO_NETNAME_NO {NETNAME_NO_SUCH_HOST = 1002,NETNAME_HOST_NOT_FOUND = 1003,NETNAME_INVALID_PORT = 1004,};
enum MACRO_NETSNMP_DS {NETSNMP_DS_MAX_IDS = 3,NETSNMP_DS_MAX_SUBIDS = 48,NETSNMP_DS_LIBRARY_ID = 0,NETSNMP_DS_APPLICATION_ID = 1,NETSNMP_DS_TOKEN_ID = 2,NETSNMP_DS_LIB_MIB_ERRORS = 0,NETSNMP_DS_LIB_SAVE_MIB_DESCRS = 1,NETSNMP_DS_LIB_MIB_COMMENT_TERM = 2,NETSNMP_DS_LIB_MIB_PARSE_LABEL = 3,NETSNMP_DS_LIB_DUMP_PACKET = 4,NETSNMP_DS_LIB_LOG_TIMESTAMP = 5,NETSNMP_DS_LIB_DONT_READ_CONFIGS = 6,NETSNMP_DS_LIB_DISABLE_CONFIG_LOAD = 6,NETSNMP_DS_LIB_MIB_REPLACE = 7,NETSNMP_DS_LIB_PRINT_NUMERIC_ENUM = 8,NETSNMP_DS_LIB_PRINT_NUMERIC_OIDS = 9,NETSNMP_DS_LIB_DONT_BREAKDOWN_OIDS = 10,NETSNMP_DS_LIB_ALARM_DONT_USE_SIG = 11,NETSNMP_DS_LIB_PRINT_FULL_OID = 12,NETSNMP_DS_LIB_QUICK_PRINT = 13,NETSNMP_DS_LIB_RANDOM_ACCESS = 14,NETSNMP_DS_LIB_REGEX_ACCESS = 15,NETSNMP_DS_LIB_DONT_CHECK_RANGE = 16,NETSNMP_DS_LIB_NO_TOKEN_WARNINGS = 17,NETSNMP_DS_LIB_NUMERIC_TIMETICKS = 18,NETSNMP_DS_LIB_ESCAPE_QUOTES = 19,NETSNMP_DS_LIB_REVERSE_ENCODE = 20,NETSNMP_DS_LIB_PRINT_BARE_VALUE = 21,NETSNMP_DS_LIB_EXTENDED_INDEX = 22,NETSNMP_DS_LIB_PRINT_HEX_TEXT = 23,NETSNMP_DS_LIB_PRINT_UCD_STYLE_OID = 24,NETSNMP_DS_LIB_READ_UCD_STYLE_OID = 25,NETSNMP_DS_LIB_HAVE_READ_PREMIB_CONFIG = 26,NETSNMP_DS_LIB_HAVE_READ_CONFIG = 27,NETSNMP_DS_LIB_QUICKE_PRINT = 28,NETSNMP_DS_LIB_DONT_PRINT_UNITS = 29,NETSNMP_DS_LIB_NO_DISPLAY_HINT = 30,NETSNMP_DS_LIB_16BIT_IDS = 31,NETSNMP_DS_LIB_DONT_PERSIST_STATE = 32,NETSNMP_DS_LIB_2DIGIT_HEX_OUTPUT = 33,NETSNMP_DS_LIB_IGNORE_NO_COMMUNITY = 34,NETSNMP_DS_LIB_DISABLE_PERSISTENT_LOAD = 35,NETSNMP_DS_LIB_DISABLE_PERSISTENT_SAVE = 36,NETSNMP_DS_LIB_APPEND_LOGFILES = 37,NETSNMP_DS_LIB_NO_DISCOVERY = 38,NETSNMP_DS_LIB_TSM_USE_PREFIX = 39,NETSNMP_DS_LIB_DONT_LOAD_HOST_FILES = 40,NETSNMP_DS_LIB_MIB_WARNINGS = 0,NETSNMP_DS_LIB_SECLEVEL = 1,NETSNMP_DS_LIB_SNMPVERSION = 2,NETSNMP_DS_LIB_DEFAULT_PORT = 3,NETSNMP_DS_LIB_OID_OUTPUT_FORMAT = 4,NETSNMP_DS_LIB_PRINT_SUFFIX_ONLY = 4,NETSNMP_DS_LIB_STRING_OUTPUT_FORMAT = 5,NETSNMP_DS_LIB_HEX_OUTPUT_LENGTH = 6,NETSNMP_DS_LIB_SERVERSENDBUF = 7,NETSNMP_DS_LIB_SERVERRECVBUF = 8,NETSNMP_DS_LIB_CLIENTSENDBUF = 9,NETSNMP_DS_LIB_CLIENTRECVBUF = 10,NETSNMP_DS_SSHDOMAIN_SOCK_PERM = 11,NETSNMP_DS_SSHDOMAIN_DIR_PERM = 12,NETSNMP_DS_SSHDOMAIN_SOCK_USER = 12,NETSNMP_DS_SSHDOMAIN_SOCK_GROUP = 13,NETSNMP_DS_SNMP_VERSION_1 = 128,NETSNMP_DS_SNMP_VERSION_2c = 1,NETSNMP_DS_SNMP_VERSION_3 = 3,NETSNMP_DS_LIB_SECNAME = 0,NETSNMP_DS_LIB_CONTEXT = 1,NETSNMP_DS_LIB_PASSPHRASE = 2,NETSNMP_DS_LIB_AUTHPASSPHRASE = 3,NETSNMP_DS_LIB_PRIVPASSPHRASE = 4,NETSNMP_DS_LIB_OPTIONALCONFIG = 5,NETSNMP_DS_LIB_APPTYPE = 6,NETSNMP_DS_LIB_COMMUNITY = 7,NETSNMP_DS_LIB_PERSISTENT_DIR = 8,NETSNMP_DS_LIB_CONFIGURATION_DIR = 9,NETSNMP_DS_LIB_SECMODEL = 10,NETSNMP_DS_LIB_MIBDIRS = 11,NETSNMP_DS_LIB_OIDSUFFIX = 12,NETSNMP_DS_LIB_OIDPREFIX = 13,NETSNMP_DS_LIB_CLIENT_ADDR = 14,NETSNMP_DS_LIB_TEMP_FILE_PATTERN = 15,NETSNMP_DS_LIB_AUTHMASTERKEY = 16,NETSNMP_DS_LIB_PRIVMASTERKEY = 17,NETSNMP_DS_LIB_AUTHLOCALIZEDKEY = 18,NETSNMP_DS_LIB_PRIVLOCALIZEDKEY = 19,NETSNMP_DS_LIB_APPTYPES = 20,NETSNMP_DS_LIB_KSM_KEYTAB = 21,NETSNMP_DS_LIB_KSM_SERVICE_NAME = 22,NETSNMP_DS_LIB_X509_CLIENT_PUB = 23,NETSNMP_DS_LIB_X509_SERVER_PUB = 24,NETSNMP_DS_LIB_SSHTOSNMP_SOCKET = 25,NETSNMP_DS_LIB_CERT_EXTRA_SUBDIR = 26,NETSNMP_DS_LIB_HOSTNAME = 27,NETSNMP_DS_LIB_X509_CRL_FILE = 28,NETSNMP_DS_LIB_TLS_ALGORITMS = 29,};
enum MACRO_NETSNMP_NO {NETSNMP_NO_LEGACY_DEFINITIONS = 1,NETSNMP_CAN_GET_DISK_LABEL = 1,};
enum MACRO_NFS_ACCESS {NFS_ACCESS_READ = 0x1,NFS_ACCESS_LOOKUP = 0x2,NFS_ACCESS_MODIFY = 0x4,NFS_ACCESS_EXTEND = 0x8,NFS_ACCESS_DELETE = 0x10,NFS_ACCESS_EXECUTE = 0x20,NFS_ACCESS_ALL = 0x3F,NFS_WRITE_UNSTABLE = 0x0,NFS_WRITE_DATASYNC = 0x1,NFS_WRITE_FILESYNC = 0x2,NFS_CREATE_UNCHECKED = 0x0,NFS_CREATE_GUARDED = 0x1,NFS_CREATE_EXCLUSIVE = 0x2,NFS_SMALLFH = 0x40,NFS_ATTR_BITMAP_LEN = 0x2,NFS_FATTR_SUPPORTED_ATTRS = 0x0,NFS_FATTR_TYPE = 0x1,NFS_FATTR_FH_EXPIRE_TYPE = 0x2,NFS_FATTR_CHANGE = 0x3,NFS_FATTR_SIZE = 0x4,NFS_FATTR_LINK_SUPPORT = 0x5,NFS_FATTR_SYMLINK_SUPPORT = 0x6,NFS_FATTR_NAMED_ATTR = 0x7,NFS_FATTR_FSID = 0x8,NFS_FATTR_UNIQUE_HANDLES = 0x9,NFS_FATTR_LEASE_TIME = 0xA,NFS_FATTR_RDATTR_ERROR = 0xB,NFS_FATTR_FILEHANDLE = 0x13,NFS_FATTR_ACL = 0xC,NFS_FATTR_ACLSUPPORT = 0xD,NFS_FATTR_ARCHIVE = 0xE,NFS_FATTR_CANSETTIME = 0xF,NFS_FATTR_CASE_INSENSITIVE = 0x10,NFS_FATTR_CASE_PRESERVING = 0x11,NFS_FATTR_CHOWN_RESTRICTED = 0x12,NFS_FATTR_FILEID = 0x14,NFS_FATTR_FILES_AVAIL = 0x15,NFS_FATTR_FILES_FREE = 0x16,NFS_FATTR_FILES_TOTAL = 0x17,NFS_FATTR_FS_LOCATIONS = 0x18,NFS_FATTR_HIDDEN = 0x19,NFS_FATTR_HOMOGENEOUS = 0x1A,NFS_FATTR_MAXFILESIZE = 0x1B,NFS_FATTR_MAXLINK = 0x1C,NFS_FATTR_MAXNAME = 0x1D,NFS_FATTR_MAXREAD = 0x1E,NFS_FATTR_MAXWRITE = 0x1F,NFS_FATTR_MIMETYPE = 0x20,NFS_FATTR_MODE = 0x21,NFS_FATTR_NO_TRUNC = 0x22,NFS_FATTR_NUMLINKS = 0x23,NFS_FATTR_OWNER = 0x24,NFS_FATTR_OWNER_GROUP = 0x25,NFS_FATTR_QUOTA_AVAIL_HARD = 0x26,NFS_FATTR_QUOTA_AVAIL_SOFT = 0x27,NFS_FATTR_QUOTA_USED = 0x28,NFS_FATTR_RAWDEV = 0x29,NFS_FATTR_SPACE_AVAIL = 0x2A,NFS_FATTR_SPACE_FREE = 0x2B,NFS_FATTR_SPACE_TOTAL = 0x2C,NFS_FATTR_SPACE_USED = 0x2D,NFS_FATTR_SYSTEM = 0x2E,NFS_FATTR_TIME_ACCESS = 0x2F,NFS_FATTR_TIME_ACCESS_SET = 0x30,NFS_FATTR_TIME_BACKUP = 0x31,NFS_FATTR_TIME_CREATE = 0x32,NFS_FATTR_TIME_DELTA = 0x33,NFS_FATTR_TIME_METADATA = 0x34,NFS_FATTR_TIME_MODIFY = 0x35,NFS_FATTR_TIME_MODIFY_SET = 0x36,NFS_FATTR_MOUNTED_ON_FILEID = 0x37,NFS_OPEN_NOCREATE = 0x0,NFS_OPEN_CREATE = 0x1,NFS_LIMIT_SIZE = 0x1,NFS_LIMIT_BLOCKS = 0x2,NFS_OPEN_SHARE_ACCESS_NONE = 0x0,NFS_OPEN_SHARE_ACCESS_READ = 0x1,NFS_OPEN_SHARE_ACCESS_WRITE = 0x2,NFS_OPEN_SHARE_ACCESS_BOTH = 0x3,NFS_OPEN_SHARE_DENY_NONE = 0x0,NFS_OPEN_SHARE_DENY_READ = 0x1,NFS_OPEN_SHARE_DENY_WRITE = 0x2,NFS_OPEN_SHARE_DENY_BOTH = 0x3,NFS_OPEN_DELEGATE_NONE = 0x0,NFS_OPEN_DELEGATE_READ = 0x1,NFS_OPEN_DELEGATE_WRITE = 0x2,NFS_CLAIM_NULL = 0x0,NFS_CLAIM_PREVIOUS = 0x1,NFS_CLAIM_DELEGATE_CUR = 0x2,NFS_CLAIM_DELEGATE_PREV = 0x3,NFS_OPEN_RESULT_CONFIRM = 0x2,NFS_OPEN_RESULT_LOCKTYPE_POSIX = 0x4,NFS_LOCK_TYPE_READ = 0x1,NFS_LOCK_TYPE_WRITE = 0x2,NFS_LOCK_TYPE_READW = 0x3,NFS_LOCK_TYPE_WRITEW = 0x4,};
enum MACRO_NFS_EXPORT {NFS_EXPORT_STAT_REC_VERSION = 1,NFS_USER_STAT_REC_VERSION = 1,NFS_USER_STAT_USER_REC = 0,NFS_USER_STAT_PATH_REC = 1,};
enum MACRO_NFS_NPROCS {NFS_NPROCS = 23,};
enum MACRO_NSADDIMAGE {NSADDIMAGE_OPTION_NONE = 0x0,NSADDIMAGE_OPTION_RETURN_ON_ERROR = 0x1,NSADDIMAGE_OPTION_WITH_SEARCHING = 0x2,NSADDIMAGE_OPTION_RETURN_ONLY_IF_LOADED = 0x4,NSADDIMAGE_OPTION_MATCH_FILENAME_BY_INSTALLNAME = 0x8,};
enum MACRO_OPENSSL_DH {OPENSSL_DH_MAX_MODULUS_BITS = 10000,OPENSSL_DH_FIPS_MIN_MODULUS_BITS = 1024,};
enum MACRO_OPENSSL_NO {OPENSSL_NO_SHA256 = 1,OPENSSL_NO_SHA512 = 1,};
enum MACRO_O_NONBLOCK {O_NONBLOCK = 0x4,O_APPEND = 0x8,O_SHLOCK = 0x10,O_EXLOCK = 0x20,O_ASYNC = 0x40,O_FSYNC = 0x80,O_NOFOLLOW = 0x100,O_CREAT = 0x200,O_TRUNC = 0x400,O_EXCL = 0x800,O_EVTONLY = 0x8000,O_NOCTTY = 0x20000,O_DIRECTORY = 0x100000,O_SYMLINK = 0x200000,O_CLOEXEC = 0x1000000,};
enum MACRO_O_ONEVALUE {O_ONEVALUE = 0x1,O_SHOWDESC = 0x2,O_ROWMAJOR = 0x4,O_IGNORECASE = 0x8,O_SHOWMATCH = 0x10,O_NONCYCLIC = 0x20,O_SELECTABLE = 0x1,};
enum MACRO_PERMISSION {PERMISSION_DENIED = 4,};
enum MACRO_PIPENPAGES {PIPENPAGES = 17,};
enum MACRO_PIPE_ASYNC {PIPE_ASYNC = 0x4,PIPE_WANTR = 0x8,PIPE_WANTW = 0x10,PIPE_WANT = 0x20,PIPE_SEL = 0x40,PIPE_EOF = 0x80,PIPE_LOCKFL = 0x100,PIPE_LWANT = 0x200,PIPE_DIRECTW = 0x400,PIPE_DIRECTOK = 0x800,PIPE_KNOTE = 0x1000,PIPE_DRAIN = 0x2000,PIPE_WSELECT = 0x4000,PIPE_DEAD = 0x8000,};
enum MACRO_POLLWRNORM {POLLWRNORM = 4,POLLRDBAND = 128,POLLWRBAND = 256,POLLEXTEND = 512,POLLATTRIB = 1024,POLLNLINK = 2048,POLLWRITE = 4096,};
enum MACRO_PROTOTYPES {PROTOTYPES = 0,};
enum MACRO_RANLIBSKEW {RANLIBSKEW = 3,};
enum MACRO_REFERENCED {REFERENCED_DYNAMICALLY = 0x10,};
enum MACRO_RIPVERSION {RIPVERSION = 1,};
enum MACRO_RQUOTAPROC {RQUOTAPROC_GETQUOTA = 1,RQUOTAPROC_GETACTIVEQUOTA = 2,};
enum MACRO_RQUOTAPROG {RQUOTAPROG = 100011,};
enum MACRO_RQUOTAVERS {RQUOTAVERS = 1,};
enum MACRO_RQ_PATHLEN {RQ_PATHLEN = 1024,};
enum MACRO_RUSERSPROC {RUSERSPROC_NUM = 1,RUSERSPROC_NAMES = 2,RUSERSPROC_ALLNAMES = 3,};
enum MACRO_RUSERSPROG {RUSERSPROG = 100002,};
enum MACRO_RUSERSVERS {RUSERSVERS_ORIG = 1,RUSERSVERS_IDLE = 2,};
enum MACRO_R_FIXEDLEN {R_FIXEDLEN = 0x1,R_NOKEY = 0x2,R_SNAPSHOT = 0x4,};
enum MACRO_SASL_UTILS {SASL_UTILS_VERSION = 4,SASL_FEAT_WANT_CLIENT_FIRST = 2,SASL_FEAT_SERVER_FIRST = 16,SASL_FEAT_ALLOWS_PROXY = 32,SASL_FEAT_NEEDSERVERFQDN = 1,SASL_CLIENT_PLUG_VERSION = 4,SASL_SET_REMOVE = 1,SASL_FEAT_SERVICE = 512,SASL_FEAT_GETSECRET = 1024,SASL_SERVER_PLUG_VERSION = 4,SASL_CANONUSER_PLUG_VERSION = 5,SASL_AUXPROP_OVERRIDE = 1,SASL_AUXPROP_AUTHZID = 2,SASL_AUXPROP_PLUG_VERSION = 4,};
enum MACRO_SECSPERMIN {SECSPERMIN = 60,};
enum MACRO_SIG_ATOMIC {SIG_ATOMIC_MIN = -2147483648,SIG_ATOMIC_MAX = 2147483647,};
enum MACRO_SMIME_TEXT {SMIME_TEXT = 1,SMIME_NOCERTS = 2,SMIME_NOSIGS = 4,SMIME_NOCHAIN = 8,SMIME_NOINTERN = 16,SMIME_NOVERIFY = 32,SMIME_DETACHED = 64,SMIME_BINARY = 128,SMIME_NOATTR = 256,};
enum MACRO_SNMP_TRANS {SNMP_TRANS_AUTHLEN_HMACMD5 = 128,SNMP_TRANS_AUTHLEN_HMACSHA1 = 160,SNMP_TRANS_AUTHLEN_HMAC96 = 96,SNMP_TRANS_PRIVLEN_1DES = 64,SNMP_TRANS_PRIVLEN_1DES_IV = 64,SNMP_TRANS_PRIVLEN_AES = 128,SNMP_TRANS_PRIVLEN_AES_IV = 128,SNMP_TRANS_AES_PADSIZE = 128,SNMP_TRANS_PRIVLEN_AES128 = 128,SNMP_TRANS_PRIVLEN_AES128_IV = 128,SNMP_TRANS_AES_AES128_PADSIZE = 128,};
enum MACRO_SSL_TLSEXT {SSL_TLSEXT_ERR_OK = 0,SSL_TLSEXT_ERR_ALERT_WARNING = 1,SSL_TLSEXT_ERR_ALERT_FATAL = 2,SSL_TLSEXT_ERR_NOACK = 3,};
enum MACRO_SS_NOFDREF {SS_NOFDREF = 0x1,SS_ISCONNECTED = 0x2,SS_ISCONNECTING = 0x4,SS_ISDISCONNECTING = 0x8,SS_CANTSENDMORE = 0x10,SS_CANTRCVMORE = 0x20,SS_RCVATMARK = 0x40,SS_PRIV = 0x80,SS_NBIO = 0x100,SS_ASYNC = 0x200,SS_ISCONFIRMING = 0x400,SS_INCOMP = 0x800,SS_COMP = 0x1000,SS_ISDISCONNECTED = 0x2000,SS_DRAINING = 0x4000,SS_DEFUNCT = 0x8000,};
enum MACRO_SUBCMDMASK {SUBCMDMASK = 0xFF,};
enum MACRO_TCPOLEN_CC {TCPOLEN_CC = 6,TCPOLEN_CC_APPA = 8,};
enum MACRO_TCP_MAXWIN {TCP_MAXWIN = 65535,};
enum MACRO_TLS1_ALLOW {TLS1_ALLOW_EXPERIMENTAL_CIPHERSUITES = 0,TLS1_VERSION = 769,TLS1_VERSION_MAJOR = 3,TLS1_VERSION_MINOR = 1,TLS1_AD_DECRYPTION_FAILED = 21,TLS1_AD_RECORD_OVERFLOW = 22,TLS1_AD_UNKNOWN_CA = 48,TLS1_AD_ACCESS_DENIED = 49,TLS1_AD_DECODE_ERROR = 50,TLS1_AD_DECRYPT_ERROR = 51,TLS1_AD_EXPORT_RESTRICTION = 60,TLS1_AD_PROTOCOL_VERSION = 70,TLS1_AD_INSUFFICIENT_SECURITY = 71,TLS1_AD_INTERNAL_ERROR = 80,TLS1_AD_USER_CANCELLED = 90,TLS1_AD_NO_RENEGOTIATION = 100,TLS1_AD_UNSUPPORTED_EXTENSION = 110,TLS1_AD_CERTIFICATE_UNOBTAINABLE = 111,TLS1_AD_UNRECOGNIZED_NAME = 112,TLS1_AD_BAD_CERTIFICATE_STATUS_RESPONSE = 113,TLS1_AD_BAD_CERTIFICATE_HASH_VALUE = 114,TLS1_AD_UNKNOWN_PSK_IDENTITY = 115,};
enum MACRO_TSPVERSION {TSPVERSION = 1,};
enum MACRO_TYPE_OTHER {TYPE_OTHER = 0,TYPE_OBJID = 1,TYPE_OCTETSTR = 2,TYPE_INTEGER = 3,TYPE_NETADDR = 4,TYPE_IPADDR = 5,TYPE_COUNTER = 6,TYPE_GAUGE = 7,TYPE_TIMETICKS = 8,TYPE_OPAQUE = 9,TYPE_NULL = 10,TYPE_COUNTER64 = 11,TYPE_BITSTRING = 12,TYPE_NSAPADDRESS = 13,TYPE_UINTEGER = 14,TYPE_UNSIGNED32 = 15,TYPE_INTEGER32 = 16,TYPE_SIMPLE_LAST = 16,TYPE_TRAPTYPE = 20,TYPE_NOTIFTYPE = 21,TYPE_OBJGROUP = 22,TYPE_NOTIFGROUP = 23,TYPE_MODID = 24,TYPE_AGENTCAP = 25,TYPE_MODCOMP = 26,TYPE_OBJIDENTITY = 27,};
enum MACRO_UINT_FAST8 {UINT_FAST8_MAX = 255,UINT_FAST16_MAX = 65535,UINT_FAST32_MAX = 4294967295,UINT_FAST64_MAX = -1,};
enum MACRO_UNKNOWNGID {UNKNOWNGID = 99,};
enum MACRO_UNKNOWNUID {UNKNOWNUID = 99,};
enum MACRO_USING_HOST {USING_HOST_MODULE = 1,USING_UCD_SNMP_DISKIO_MODULE = 1,USING_UCD_SNMP_LOADAVE_MODULE = 1,USING_DEFAULT_MODULES_MODULE = 1,USING_HOST_HR_STORAGE_MODULE = 1,USING_HOST_HR_FILESYS_MODULE = 1,USING_HOST_HRSWINSTALLEDTABLE_MODULE = 1,USING_HOST_HRSWRUNTABLE_MODULE = 1,USING_HOST_HR_SYSTEM_MODULE = 1,USING_HOST_HR_DEVICE_MODULE = 1,USING_HOST_HR_OTHER_MODULE = 1,USING_HOST_HR_PROC_MODULE = 1,USING_HOST_HR_NETWORK_MODULE = 1,USING_HOST_HR_PRINT_MODULE = 1,USING_HOST_HR_DISK_MODULE = 1,USING_HOST_HR_PARTITION_MODULE = 1,USING_UTIL_FUNCS_HEADER_SIMPLE_TABLE_MODULE = 1,USING_SNMPV3MIBS_MODULE = 1,USING_MIBII_MODULE = 1,USING_UCD_SNMP_MODULE = 1,USING_NOTIFICATION_MODULE = 1,USING_NOTIFICATION_LOG_MIB_MODULE = 1,USING_TARGET_MODULE = 1,USING_AGENT_MIBS_MODULE = 1,USING_AGENTX_MODULE = 1,USING_DISMAN_EVENT_MODULE = 1,USING_DISMAN_SCHEDULE_MODULE = 1,USING_UTILITIES_MODULE = 1,USING_HARDWARE_MEMORY_MODULE = 1,USING_HOST_DATA_ACCESS_SWINST_MODULE = 1,USING_HOST_DATA_ACCESS_SWRUN_MODULE = 1,USING_HOST_HRSWRUNPERFTABLE_MODULE = 1,USING_HARDWARE_CPU_MODULE = 1,USING_MIBII_IFTABLE_MODULE = 1,USING_UTIL_FUNCS_MODULE = 1,USING_SNMPV3_SNMPMPDSTATS_5_5_MODULE = 1,USING_SNMPV3_USMSTATS_5_5_MODULE = 1,USING_SNMPV3_SNMPENGINE_MODULE = 1,USING_SNMPV3_USMUSER_MODULE = 1,USING_MIBII_SNMP_MIB_5_5_MODULE = 1,USING_MIBII_SYSTEM_MIB_MODULE = 1,USING_MIBII_SYSORTABLE_MODULE = 1,USING_MIBII_AT_MODULE = 1,USING_MIBII_IP_MODULE = 1,USING_MIBII_TCP_MODULE = 1,USING_MIBII_ICMP_MODULE = 1,USING_MIBII_UDP_MODULE = 1,USING_MIBII_VACM_VARS_MODULE = 1,USING_MIBII_SETSERIALNO_MODULE = 1,USING_IF_MIB_MODULE = 1,USING_UCD_SNMP_DISK_MODULE = 1,USING_UCD_SNMP_PROC_MODULE = 1,USING_UCD_SNMP_VERSIONINFO_MODULE = 1,USING_UCD_SNMP_PASS_MODULE = 1,USING_UCD_SNMP_PASS_PERSIST_MODULE = 1,USING_AGENT_EXTEND_MODULE = 1,USING_UCD_SNMP_ERRORMIB_MODULE = 1,USING_UCD_SNMP_FILE_MODULE = 1,USING_UCD_SNMP_DLMOD_MODULE = 1,USING_UCD_SNMP_PROXY_MODULE = 1,USING_UCD_SNMP_LOGMATCH_MODULE = 1,USING_UCD_SNMP_MEMORY_MODULE = 1,USING_UCD_SNMP_VMSTAT_MODULE = 1,USING_NOTIFICATION_SNMPNOTIFYTABLE_MODULE = 1,USING_SNMP_NOTIFICATION_MIB_SNMPNOTIFYFILTERTABLE_MODULE = 1,USING_NOTIFICATION_SNMPNOTIFYFILTERPROFILETABLE_MODULE = 1,USING_NOTIFICATION_LOG_MIB_NOTIFICATION_LOG_MODULE = 1,USING_TARGET_TARGET_COUNTERS_5_5_MODULE = 1,USING_TARGET_SNMPTARGETADDRENTRY_MODULE = 1,USING_TARGET_SNMPTARGETPARAMSENTRY_MODULE = 1,USING_TARGET_TARGET_MODULE = 1,USING_AGENT_NSTRANSACTIONTABLE_MODULE = 1,USING_AGENT_NSMODULETABLE_MODULE = 1,USING_AGENT_NSDEBUG_MODULE = 1,USING_AGENT_NSCACHE_MODULE = 1,USING_AGENT_NSLOGGING_MODULE = 1,USING_AGENT_NSVACMACCESSTABLE_MODULE = 1,USING_DISMAN_EVENT_MTESCALARS_MODULE = 1,USING_DISMAN_EVENT_MTETRIGGER_MODULE = 1,USING_DISMAN_EVENT_MTETRIGGERTABLE_MODULE = 1,USING_DISMAN_EVENT_MTETRIGGERDELTATABLE_MODULE = 1,USING_DISMAN_EVENT_MTETRIGGEREXISTENCETABLE_MODULE = 1,USING_DISMAN_EVENT_MTETRIGGERBOOLEANTABLE_MODULE = 1,USING_DISMAN_EVENT_MTETRIGGERTHRESHOLDTABLE_MODULE = 1,USING_DISMAN_EVENT_MTETRIGGERCONF_MODULE = 1,USING_DISMAN_EVENT_MTEEVENT_MODULE = 1,USING_DISMAN_EVENT_MTEEVENTTABLE_MODULE = 1,USING_DISMAN_EVENT_MTEEVENTSETTABLE_MODULE = 1,USING_DISMAN_EVENT_MTEEVENTNOTIFICATIONTABLE_MODULE = 1,USING_DISMAN_EVENT_MTEEVENTCONF_MODULE = 1,USING_DISMAN_EVENT_MTEOBJECTS_MODULE = 1,USING_DISMAN_EVENT_MTEOBJECTSTABLE_MODULE = 1,USING_DISMAN_EVENT_MTEOBJECTSCONF_MODULE = 1,USING_DISMAN_SCHEDULE_SCHEDCORE_MODULE = 1,USING_DISMAN_SCHEDULE_SCHEDCONF_MODULE = 1,USING_DISMAN_SCHEDULE_SCHEDTABLE_MODULE = 1,USING_UTILITIES_OVERRIDE_MODULE = 1,USING_HARDWARE_MEMORY_HW_MEM_MODULE = 1,USING_HARDWARE_MEMORY_MEMORY_NULL_MODULE = 1,USING_HOST_DATA_ACCESS_SWINST_DARWIN_MODULE = 1,USING_HOST_DATA_ACCESS_SWRUN_DARWIN_MODULE = 1,USING_HARDWARE_CPU_CPU_MODULE = 1,USING_HARDWARE_CPU_CPU_MACH_MODULE = 1,USING_IF_MIB_IFTABLE_MODULE = 1,USING_UTIL_FUNCS_EXIT_MODULE = 1,USING_UTIL_FUNCS_HEADER_GENERIC_MODULE = 1,USING_UTIL_FUNCS_RESTART_MODULE = 1,USING_MIBII_UPDATES_MODULE = 1,USING_MIBII_IPADDR_MODULE = 1,USING_MIBII_VAR_ROUTE_MODULE = 1,USING_MIBII_ROUTE_WRITE_MODULE = 1,USING_MIBII_TCPTABLE_MODULE = 1,USING_MIBII_UDPTABLE_MODULE = 1,USING_MIBII_VACM_CONTEXT_MODULE = 1,USING_IF_MIB_IFXTABLE_MODULE = 1,USING_HEADER_COMPLEX_MODULE = 1,USING_SNMP_NOTIFICATION_MIB_SNMPNOTIFYFILTERTABLE_SNMPNOTIFYFILTERTABLE_MODULE = 1,USING_IF_MIB_IFTABLE_IFTABLE_MODULE = 1,USING_IF_MIB_IFXTABLE_IFXTABLE_MODULE = 1,USING_SNMP_NOTIFICATION_MIB_SNMPNOTIFYFILTERTABLE_SNMPNOTIFYFILTERTABLE_INTERFACE_MODULE = 1,USING_SNMP_NOTIFICATION_MIB_SNMPNOTIFYFILTERTABLE_SNMPNOTIFYFILTERTABLE_DATA_ACCESS_MODULE = 1,USING_IF_MIB_DATA_ACCESS_INTERFACE_MODULE = 1,USING_IF_MIB_IFTABLE_IFTABLE_INTERFACE_MODULE = 1,USING_IF_MIB_IFTABLE_IFTABLE_DATA_ACCESS_MODULE = 1,USING_IF_MIB_IFXTABLE_IFXTABLE_INTERFACE_MODULE = 1,USING_IF_MIB_IFXTABLE_IFXTABLE_DATA_ACCESS_MODULE = 1,USING_IF_MIB_DATA_ACCESS_INTERFACE_SYSCTL_MODULE = 1,};
enum MACRO_USM_LENGTH {USM_LENGTH_OID_TRANSFORM = 10,};
enum MACRO_USRSTACK64 {USRSTACK64 = 140734799806464,};
enum MACRO_VIEWSTATUS {VIEWSTATUS = 7,};
enum MACRO_VM_INHERIT {VM_INHERIT_SHARE = 0,VM_INHERIT_COPY = 1,VM_INHERIT_NONE = 2,VM_INHERIT_DONATE_COPY = 3,VM_INHERIT_DEFAULT = 1,VM_INHERIT_LAST_VALID = 2,VM_PURGABLE_SET_STATE = 0,VM_PURGABLE_GET_STATE = 1,VM_PURGABLE_PURGE_ALL = 2,VM_PURGABLE_DEBUG_SHIFT = 12,VM_PURGABLE_DEBUG_MASK = 12288,VM_PURGABLE_DEBUG_EMPTY = 4096,VM_PURGABLE_DEBUG_FAULT = 8192,VM_VOLATILE_GROUP_SHIFT = 8,VM_VOLATILE_GROUP_MASK = 1792,VM_VOLATILE_GROUP_0 = 0,VM_VOLATILE_GROUP_1 = 256,VM_VOLATILE_GROUP_2 = 512,VM_VOLATILE_GROUP_3 = 768,VM_VOLATILE_GROUP_4 = 1024,VM_VOLATILE_GROUP_5 = 1280,VM_VOLATILE_GROUP_6 = 1536,VM_VOLATILE_GROUP_7 = 1792,VM_PURGABLE_BEHAVIOR_SHIFT = 6,VM_PURGABLE_BEHAVIOR_MASK = 64,VM_PURGABLE_BEHAVIOR_FIFO = 0,VM_PURGABLE_BEHAVIOR_LIFO = 64,VM_PURGABLE_ORDERING_SHIFT = 5,VM_PURGABLE_ORDERING_MASK = 32,VM_PURGABLE_ORDERING_OBSOLETE = 32,VM_PURGABLE_ORDERING_NORMAL = 0,VM_VOLATILE_ORDER_SHIFT = 4,VM_VOLATILE_ORDER_MASK = 16,VM_VOLATILE_MAKE_FIRST_IN_GROUP = 16,VM_VOLATILE_MAKE_LAST_IN_GROUP = 0,VM_PURGABLE_STATE_MIN = 0,VM_PURGABLE_STATE_MAX = 3,VM_PURGABLE_STATE_MASK = 3,VM_PURGABLE_NONVOLATILE = 0,VM_PURGABLE_VOLATILE = 1,VM_PURGABLE_EMPTY = 2,VM_PURGABLE_DENY = 3,VM_PURGABLE_ALL_MASKS = 14195,VM_BEHAVIOR_DEFAULT = 0,VM_BEHAVIOR_RANDOM = 1,VM_BEHAVIOR_SEQUENTIAL = 2,VM_BEHAVIOR_RSEQNTL = 3,VM_BEHAVIOR_WILLNEED = 4,VM_BEHAVIOR_DONTNEED = 5,VM_BEHAVIOR_FREE = 6,VM_BEHAVIOR_ZERO_WIRED_PAGES = 7,VM_BEHAVIOR_REUSABLE = 8,VM_BEHAVIOR_REUSE = 9,VM_BEHAVIOR_CAN_REUSE = 10,VM_REGION_INFO_MAX = 1024,VM_REGION_BASIC_INFO_64 = 9,VM_REGION_BASIC_INFO = 10,VM_REGION_EXTENDED_INFO = 11,};
enum MACRO_X509V3_EXT {X509V3_EXT_UNKNOWN_MASK = 0xF0000,X509V3_EXT_DEFAULT = 0x0,X509V3_EXT_ERROR_UNKNOWN = 0x10000,X509V3_EXT_PARSE_UNKNOWN = 0x20000,X509V3_EXT_DUMP_UNKNOWN = 0x30000,X509V3_ADD_OP_MASK = 0xF,X509V3_ADD_DEFAULT = 0x0,X509V3_ADD_APPEND = 0x1,X509V3_ADD_REPLACE = 0x2,X509V3_ADD_REPLACE_EXISTING = 0x3,X509V3_ADD_KEEP_EXISTING = 0x4,X509V3_ADD_DELETE = 0x5,X509V3_ADD_SILENT = 0x10,X509V3_F_ASIDENTIFIERCHOICE_CANONIZE = 0x9C,X509V3_F_ASIDENTIFIERCHOICE_IS_CANONICAL = 0x9D,X509V3_F_COPY_EMAIL = 0x7A,X509V3_F_COPY_ISSUER = 0x7B,X509V3_F_DO_DIRNAME = 0x90,X509V3_F_DO_EXT_CONF = 0x7C,X509V3_F_DO_EXT_I2D = 0x87,X509V3_F_DO_EXT_NCONF = 0x97,X509V3_F_DO_I2V_NAME_CONSTRAINTS = 0x94,X509V3_F_HEX_TO_STRING = 0x6F,X509V3_F_I2S_ASN1_ENUMERATED = 0x79,X509V3_F_I2S_ASN1_IA5STRING = 0x95,X509V3_F_I2S_ASN1_INTEGER = 0x78,X509V3_F_I2V_AUTHORITY_INFO_ACCESS = 0x8A,X509V3_F_NOTICE_SECTION = 0x84,X509V3_F_NREF_NOS = 0x85,X509V3_F_POLICY_SECTION = 0x83,X509V3_F_PROCESS_PCI_VALUE = 0x96,X509V3_F_R2I_CERTPOL = 0x82,X509V3_F_R2I_PCI = 0x9B,X509V3_F_S2I_ASN1_IA5STRING = 0x64,X509V3_F_S2I_ASN1_INTEGER = 0x6C,X509V3_F_S2I_ASN1_OCTET_STRING = 0x70,X509V3_F_S2I_ASN1_SKEY_ID = 0x72,X509V3_F_S2I_SKEY_ID = 0x73,X509V3_F_STRING_TO_HEX = 0x71,X509V3_F_SXNET_ADD_ID_ASC = 0x7D,X509V3_F_SXNET_ADD_ID_INTEGER = 0x7E,X509V3_F_SXNET_ADD_ID_ULONG = 0x7F,X509V3_F_SXNET_GET_ID_ASC = 0x80,X509V3_F_SXNET_GET_ID_ULONG = 0x81,X509V3_F_V2I_ASIDENTIFIERS = 0x9E,X509V3_F_V2I_ASN1_BIT_STRING = 0x65,X509V3_F_V2I_AUTHORITY_INFO_ACCESS = 0x8B,X509V3_F_V2I_AUTHORITY_KEYID = 0x77,X509V3_F_V2I_BASIC_CONSTRAINTS = 0x66,X509V3_F_V2I_CRLD = 0x86,X509V3_F_V2I_EXTENDED_KEY_USAGE = 0x67,X509V3_F_V2I_GENERAL_NAMES = 0x76,X509V3_F_V2I_GENERAL_NAME_EX = 0x75,X509V3_F_V2I_IPADDRBLOCKS = 0x9F,X509V3_F_V2I_ISSUER_ALT = 0x99,X509V3_F_V2I_NAME_CONSTRAINTS = 0x93,X509V3_F_V2I_POLICY_CONSTRAINTS = 0x92,X509V3_F_V2I_POLICY_MAPPINGS = 0x91,X509V3_F_V2I_SUBJECT_ALT = 0x9A,X509V3_F_V3_ADDR_VALIDATE_PATH_INTERNAL = 0xA0,X509V3_F_V3_GENERIC_EXTENSION = 0x74,X509V3_F_X509V3_ADD1_I2D = 0x8C,X509V3_F_X509V3_ADD_VALUE = 0x69,X509V3_F_X509V3_EXT_ADD = 0x68,X509V3_F_X509V3_EXT_ADD_ALIAS = 0x6A,X509V3_F_X509V3_EXT_CONF = 0x6B,X509V3_F_X509V3_EXT_I2D = 0x88,X509V3_F_X509V3_EXT_NCONF = 0x98,X509V3_F_X509V3_GET_SECTION = 0x8E,X509V3_F_X509V3_GET_STRING = 0x8F,X509V3_F_X509V3_GET_VALUE_BOOL = 0x6E,X509V3_F_X509V3_PARSE_LIST = 0x6D,X509V3_F_X509_PURPOSE_ADD = 0x89,X509V3_F_X509_PURPOSE_SET = 0x8D,X509V3_R_BAD_IP_ADDRESS = 0x76,X509V3_R_BAD_OBJECT = 0x77,X509V3_R_BN_DEC2BN_ERROR = 0x64,X509V3_R_BN_TO_ASN1_INTEGER_ERROR = 0x65,X509V3_R_DIRNAME_ERROR = 0x95,X509V3_R_DUPLICATE_ZONE_ID = 0x85,X509V3_R_ERROR_CONVERTING_ZONE = 0x83,X509V3_R_ERROR_CREATING_EXTENSION = 0x90,X509V3_R_ERROR_IN_EXTENSION = 0x80,X509V3_R_EXPECTED_A_SECTION_NAME = 0x89,X509V3_R_EXTENSION_EXISTS = 0x91,X509V3_R_EXTENSION_NAME_ERROR = 0x73,X509V3_R_EXTENSION_NOT_FOUND = 0x66,X509V3_R_EXTENSION_SETTING_NOT_SUPPORTED = 0x67,X509V3_R_EXTENSION_VALUE_ERROR = 0x74,X509V3_R_ILLEGAL_EMPTY_EXTENSION = 0x97,X509V3_R_ILLEGAL_HEX_DIGIT = 0x71,X509V3_R_INCORRECT_POLICY_SYNTAX_TAG = 0x98,X509V3_R_INVALID_ASNUMBER = 0xA0,X509V3_R_INVALID_ASRANGE = 0xA1,X509V3_R_INVALID_BOOLEAN_STRING = 0x68,X509V3_R_INVALID_EXTENSION_STRING = 0x69,X509V3_R_INVALID_INHERITANCE = 0xA2,X509V3_R_INVALID_IPADDRESS = 0xA3,X509V3_R_INVALID_NAME = 0x6A,X509V3_R_INVALID_NULL_ARGUMENT = 0x6B,X509V3_R_INVALID_NULL_NAME = 0x6C,X509V3_R_INVALID_NULL_VALUE = 0x6D,X509V3_R_INVALID_NUMBER = 0x8C,X509V3_R_INVALID_NUMBERS = 0x8D,X509V3_R_INVALID_OBJECT_IDENTIFIER = 0x6E,X509V3_R_INVALID_OPTION = 0x8A,X509V3_R_INVALID_POLICY_IDENTIFIER = 0x86,X509V3_R_INVALID_PROXY_POLICY_SETTING = 0x99,X509V3_R_INVALID_PURPOSE = 0x92,X509V3_R_INVALID_SAFI = 0xA4,X509V3_R_INVALID_SECTION = 0x87,X509V3_R_INVALID_SYNTAX = 0x8F,X509V3_R_ISSUER_DECODE_ERROR = 0x7E,X509V3_R_MISSING_VALUE = 0x7C,X509V3_R_NEED_ORGANIZATION_AND_NUMBERS = 0x8E,X509V3_R_NO_CONFIG_DATABASE = 0x88,X509V3_R_NO_ISSUER_CERTIFICATE = 0x79,X509V3_R_NO_ISSUER_DETAILS = 0x7F,X509V3_R_NO_POLICY_IDENTIFIER = 0x8B,X509V3_R_NO_PROXY_CERT_POLICY_LANGUAGE_DEFINED = 0x9A,X509V3_R_NO_PUBLIC_KEY = 0x72,X509V3_R_NO_SUBJECT_DETAILS = 0x7D,X509V3_R_ODD_NUMBER_OF_DIGITS = 0x70,X509V3_R_OPERATION_NOT_DEFINED = 0x94,X509V3_R_OTHERNAME_ERROR = 0x93,X509V3_R_POLICY_LANGUAGE_ALREADTY_DEFINED = 0x9B,X509V3_R_POLICY_PATH_LENGTH = 0x9C,X509V3_R_POLICY_PATH_LENGTH_ALREADTY_DEFINED = 0x9D,X509V3_R_POLICY_SYNTAX_NOT_CURRENTLY_SUPPORTED = 0x9E,X509V3_R_POLICY_WHEN_PROXY_LANGUAGE_REQUIRES_NO_POLICY = 0x9F,X509V3_R_SECTION_NOT_FOUND = 0x96,X509V3_R_UNABLE_TO_GET_ISSUER_DETAILS = 0x7A,X509V3_R_UNABLE_TO_GET_ISSUER_KEYID = 0x7B,X509V3_R_UNKNOWN_BIT_STRING_ARGUMENT = 0x6F,X509V3_R_UNKNOWN_EXTENSION = 0x81,X509V3_R_UNKNOWN_EXTENSION_NAME = 0x82,X509V3_R_UNKNOWN_OPTION = 0x78,X509V3_R_UNSUPPORTED_OPTION = 0x75,X509V3_R_USER_TOO_LONG = 0x84,};
enum MACRO_YPBINDPROC {YPBINDPROC_NULL = 0,YPBINDPROC_DOMAIN = 1,YPBINDPROC_SETDOM = 2,};
enum MACRO_YPBINDPROG {YPBINDPROG = 100007,};
enum MACRO_YPBINDVERS {YPBINDVERS = 2,};
enum MACRO_YPPUSHPROC {YPPUSHPROC_NULL = 0,YPPUSHPROC_XFRRESP = 1,};
enum MACRO__POSIX2_BC {_POSIX2_BC_BASE_MAX = 99,_POSIX2_BC_DIM_MAX = 2048,_POSIX2_BC_SCALE_MAX = 99,_POSIX2_BC_STRING_MAX = 1000,_POSIX2_EQUIV_CLASS_MAX = 2,_POSIX2_EXPR_NEST_MAX = 32,_POSIX2_LINE_MAX = 2048,_POSIX2_RE_DUP_MAX = 255,};
enum MACRO__POSIX_AIO {_POSIX_AIO_LISTIO_MAX = 2,_POSIX_AIO_MAX = 1,_POSIX_DELAYTIMER_MAX = 32,_POSIX_MQ_OPEN_MAX = 8,_POSIX_MQ_PRIO_MAX = 32,_POSIX_RTSIG_MAX = 8,_POSIX_SEM_NSEMS_MAX = 256,_POSIX_SEM_VALUE_MAX = 32767,_POSIX_SIGQUEUE_MAX = 32,_POSIX_TIMER_MAX = 32,_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4,_POSIX_THREAD_THREADS_MAX = 64,_POSIX_HOST_NAME_MAX = 255,_POSIX_LOGIN_NAME_MAX = 9,_POSIX_SS_REPL_MAX = 4,_POSIX_SYMLINK_MAX = 255,_POSIX_SYMLOOP_MAX = 8,_POSIX_TRACE_EVENT_NAME_MAX = 30,_POSIX_TRACE_NAME_MAX = 8,_POSIX_TRACE_SYS_MAX = 8,_POSIX_TRACE_USER_EVENT_MAX = 32,_POSIX_TTY_NAME_MAX = 9,};
enum MACRO__POSIX_ARG {_POSIX_ARG_MAX = 4096,_POSIX_CHILD_MAX = 25,_POSIX_LINK_MAX = 8,_POSIX_MAX_CANON = 255,_POSIX_MAX_INPUT = 255,_POSIX_NAME_MAX = 14,_POSIX_NGROUPS_MAX = 8,_POSIX_OPEN_MAX = 20,_POSIX_PATH_MAX = 256,_POSIX_PIPE_BUF = 512,_POSIX_SSIZE_MAX = 32767,_POSIX_STREAM_MAX = 8,_POSIX_TZNAME_MAX = 6,};
enum MACRO__XOPEN_IOV {_XOPEN_IOV_MAX = 16,IOV_MAX = 1024,_XOPEN_NAME_MAX = 255,_XOPEN_PATH_MAX = 1024,};
enum MACRO___WORDSIZE {__WORDSIZE = 64,};
enum MACRO___dontcare {__dontcare__ = -1,};
typedef struct NAME_CONSTRAINTS_st NAME_CONSTRAINTS;
typedef struct ocsp_revoked_info_st OCSP_REVOKEDINFO;
typedef struct pkcs7_recip_info_st PKCS7_RECIP_INFO;
typedef struct Connection Slapi_Connection;
typedef struct slapi_plugindesc Slapi_PluginDesc;
typedef struct tagTIMESTAMP_STRUCT TIMESTAMP_STRUCT;
typedef struct X509_POLICY_NODE_st X509_POLICY_NODE;
typedef struct X509_POLICY_TREE_st X509_POLICY_TREE;
typedef char __curl_rule_01__[1];
typedef char __curl_rule_02__[1];
typedef char __curl_rule_03__[1];
typedef char __curl_rule_04__[1];
typedef char __curl_rule_05__[1];
typedef unsigned long long __darwin_clock_t;
typedef int __darwin_nl_item;
typedef long long __darwin_ssize_t;
struct __darwin_xmm_reg {char __xmm_reg[16];};
struct _xmlXIncludeCtxt;
typedef struct au_evclass_map au_evclass_map_t;
typedef struct _EC40C8956DA7A36243DBF2EA18E7021D au_header32_ex_t;
typedef struct _9F75FA6E4EE2D3B86C582C471EA99312 au_header64_ex_t;
typedef struct _739921EDD5E6EE8AE9C50191702F2D06 au_socket_ex32_t;
typedef struct _73773A746C574143C0D7803E150049F9 au_subject32ex_t;
typedef struct _3881F9B2E64C73F20ED412E5826C4AC3 au_subject64ex_t;
typedef struct auditinfo_addr auditinfo_addr_t;
typedef unsigned char const_DES_cblock[8];
typedef struct _copyfile_state *copyfile_state_t;
typedef void (*cups_device_cb_t)( char *device_class,  char *device_id,  char *device_info,  char *device_make_and_model,  char *device_uri,  char *device_location, void *user_data);
enum cups_sc_status_e {CUPS_SC_STATUS_NONE = 0x0,CUPS_SC_STATUS_OK = 0x1,CUPS_SC_STATUS_IO_ERROR = 0x2,CUPS_SC_STATUS_TIMEOUT = 0x3,CUPS_SC_STATUS_NO_RESPONSE = 0x4,CUPS_SC_STATUS_BAD_MESSAGE = 0x5,CUPS_SC_STATUS_TOO_BIG = 0x6,CUPS_SC_STATUS_NOT_IMPLEMENTED = 0x7,};
enum curl_khkey__type {CURLKHTYPE_UNKNOWN = 0x0,CURLKHTYPE_RSA1 = 0x1,CURLKHTYPE_RSA = 0x2,CURLKHTYPE_DSS = 0x3,};
typedef void *dispatch_block_t;
typedef struct dispatch_group_s *dispatch_group_t;
struct dispatch_queue_s;
typedef struct dispatch_queue_s *dispatch_queue_t;
typedef struct _B32155DE37EA00CA7D015F061033D0DB dns_LOC_record_t;
typedef struct _1C2A755C38DA6DF2E4E1C52F7C8EAD2D dns_SOA_record_t;
typedef struct _C12C9BDFE67D223D1BA5D023CABB3CBD dns_SRV_record_t;
typedef struct _1D15E1936BEC6B64847025DD7DD9970D dns_TXT_record_t;
typedef struct _EB461EAC719110594EB746F8AD525682 dns_WKS_record_t;
typedef struct _5F22111B9AD44DFDC2D7C3E3FA7C1FF6 dns_X25_record_t;
struct dtls1_timeout_st {unsigned int read_timeouts;unsigned int write_timeouts;unsigned int num_alerts;};
typedef struct st_dynamic_LOCK_fns dynamic_LOCK_fns;
typedef unsigned int exception_mask_t;
typedef int exception_type_t;
typedef struct gss_OID_set_desc_struct gss_OID_set_desc;
typedef int gss_cred_usage_t;
typedef struct host_load_info *host_load_info_t;
enum http_keepalive_e {HTTP_KEEPALIVE_OFF = 0x0,HTTP_KEEPALIVE_ON = 0x1,};
typedef struct ipc_info_space ipc_info_space_t;
typedef char kernel_version_t[512];
typedef struct kmod_reference kmod_reference_t;
typedef struct _krb5_tkt_authent krb5_tkt_authent;
typedef struct lockgroup_info lockgroup_info_t;
typedef union _2345F6273F81C99369AD5C0E36D3FD0F mach_msg_empty_t;
typedef struct mach_zone_info_data mach_zone_info_t;
typedef struct mach_zone_name mach_zone_name_t;
typedef int *mem_bucket_ptr_t;
struct module_init_list {char *module_name;struct module_init_list *next;};
struct name_table_entry { char *nte_name;int nte_type;short nte_index;short nte_link;};
typedef struct netsnmp_cachemap_s netsnmp_cachemap;
typedef struct netsnmp_iterator_s netsnmp_iterator;
struct netsnmp_ref_void {void *val;};
typedef struct netsnmp_set_info_s netsnmp_set_info;
typedef void *notify_handler_t;
typedef struct pam_repository pam_repository_t;
typedef struct policy_rr_base *policy_rr_base_t;
typedef struct policy_rr_info *policy_rr_info_t;
typedef unsigned int routine_arg_size;
typedef unsigned int routine_arg_type;
typedef int sasl_getsimple_t(void *context, int id,  char **result, unsigned int *len);
typedef struct _0BA82F063C392BF02AF0AA599B603A12 security_token_t;
struct slapi_plugindesc {char *spd_id;char *spd_vendor;char *spd_version;char *spd_description;};
struct snmp_log_message {int priority; char *msg;};
struct snmp_secmod_list {int securityModel;struct snmp_secmod_def *secDef;struct snmp_secmod_list *next;};
typedef int (*sqlite3_callback)(void *, int, char **, char **);
typedef struct task_dyld_info *task_dyld_info_t;
typedef struct task_zone_info_data task_zone_info_t;
typedef struct unw_addr_space *unw_addr_space_t;
typedef char *user_subsystem_t;
typedef struct vm_info_object vm_info_object_t;
typedef struct vm_info_region vm_info_region_t;
typedef int *vm_region_info_t;
struct x509_hash_dir_st {int num_dirs;char **dirs;int *dirs_type;int num_dirs_alloced;};
typedef struct _xmlAutomataState xmlAutomataState;
typedef struct _xmlHashTable xmlEntitiesTable;
typedef struct _xmlHashTable xmlNotationTable;
typedef struct _xmlSchemaElement xmlSchemaElement;
typedef struct _xmlXPathCompExpr xmlXPathCompExpr;
typedef struct _xmlXPathVariable xmlXPathVariable;
typedef struct _xsltRuntimeExtra xsltRuntimeExtra;
typedef struct _xsltStylePreComp xsltStylePreComp;
typedef struct asn1_string_st ASN1_BIT_STRING;
typedef struct asn1_string_st ASN1_ENUMERATED;
typedef struct asn1_string_st ASN1_UTF8STRING;
typedef struct AUTHORITY_KEYID_st AUTHORITY_KEYID;
typedef struct DIST_POINT_NAME_st DIST_POINT_NAME;
typedef struct ENGINE_CMD_DEFN_st ENGINE_CMD_DEFN;
typedef struct ERR_string_data_st ERR_STRING_DATA;
typedef struct evp_cipher_info_st EVP_CIPHER_INFO;
typedef struct GENERAL_SUBTREE_st GENERAL_SUBTREE;
typedef HFSExtentDescriptor HFSExtentRecord[3];
typedef struct ldap_contentrule LDAPContentRule;
typedef struct ldap_objectclass LDAPObjectClass;
typedef struct nfs_lock_msg_queue LOCKD_MSG_QUEUE;
enum MACRO_AF_UNSPEC {AF_UNSPEC = 0,AF_UNIX = 1,AF_LOCAL = 1,AF_INET = 2,AF_IMPLINK = 3,AF_PUP = 4,AF_CHAOS = 5,AF_NS = 6,AF_ISO = 7,AF_OSI = 7,AF_ECMA = 8,AF_DATAKIT = 9,AF_CCITT = 10,AF_SNA = 11,AF_DECnet = 12,AF_DLI = 13,AF_LAT = 14,AF_HYLINK = 15,AF_APPLETALK = 16,AF_ROUTE = 17,AF_LINK = 18,};
enum MACRO_AUDIT_CNT {AUDIT_CNT = 0x1,AUDIT_AHLT = 0x2,AUDIT_ARGV = 0x4,AUDIT_ARGE = 0x8,AUDIT_SEQ = 0x10,AUDIT_WINDATA = 0x20,AUDIT_USER = 0x40,AUDIT_GROUP = 0x80,AUDIT_TRAIL = 0x100,AUDIT_PATH = 0x200,AUDIT_SCNT = 0x400,AUDIT_PUBLIC = 0x800,AUDIT_ZONENAME = 0x1000,AUDIT_PERZONE = 0x2000,};
enum MACRO_AUDIT_MAX {AUDIT_MAX_GROUPS = 16,AUDIT_HEADER_VERSION_OLDDARWIN = 1,AUDIT_HEADER_VERSION_SOLARIS = 2,AUDIT_HEADER_VERSION_TSOL25 = 3,AUDIT_HEADER_VERSION_TSOL = 4,AUDIT_HEADER_VERSION_OPENBSM10 = 10,AUDIT_HEADER_VERSION_OPENBSM11 = 11,AUDIT_HEADER_VERSION_OPENBSM = 11,};
enum MACRO_AUDIT_OFF {AUDIT_OFF = 2,AUDIT_ON = 1,};
enum MACRO_AUTH_NONE {AUTH_NONE = 0,AUTH_NULL = 0,AUTH_UNIX = 1,AUTH_SHORT = 2,AUTH_DES = 3,};
enum MACRO_AU_UNIMPL {AU_UNIMPL = 1000001,};
enum MACRO_BIOCFLUSH {BIOCFLUSH = 536887912,};
enum MACRO_BITSTRING {BITSTRING = 3,IPADDRESS = 64,};
enum MACRO_BOOLCOUNT {BOOLCOUNT = 44,};
enum MACRO_BOOLWRITE {BOOLWRITE = 37,};
enum MACRO_BOOTPARAM {BOOTPARAM_PROG = 100026,BOOTPARAM_VERS = 1,BOOTPARAM_WHOAMI = 1,BOOTPARAM_GETFILE = 2,};
enum MACRO_BOOTSTRAP {BOOTSTRAP_MAX_NAME_LEN = 128,BOOTSTRAP_MAX_CMD_LEN = 512,BOOTSTRAP_MAX_LOOKUP_COUNT = 20,BOOTSTRAP_SUCCESS = 0,BOOTSTRAP_NOT_PRIVILEGED = 1100,BOOTSTRAP_NAME_IN_USE = 1101,BOOTSTRAP_UNKNOWN_SERVICE = 1102,BOOTSTRAP_SERVICE_ACTIVE = 1103,BOOTSTRAP_BAD_COUNT = 1104,BOOTSTRAP_NO_MEMORY = 1105,BOOTSTRAP_NO_CHILDREN = 1106,BOOTSTRAP_STATUS_INACTIVE = 0,BOOTSTRAP_STATUS_ACTIVE = 1,BOOTSTRAP_STATUS_ON_DEMAND = 2,};
enum MACRO_BYTEORDER {BYTEORDER = 1234,};
enum MACRO_BYTE_SIZE {BYTE_SIZE = 8,};
enum MACRO_CANCELLED {CANCELLED_BOOLEAN = -2,CANCELLED_NUMERIC = -2,CANCELLED_STRING = -1,};
enum MACRO_CHARCLASS {CHARCLASS_NAME_MAX = 14,COLL_WEIGHTS_MAX = 2,EQUIV_CLASS_MAX = 2,EXPR_NEST_MAX = 32,LINE_MAX = 2048,RE_DUP_MAX = 255,};
enum MACRO_CKSUMTYPE {CKSUMTYPE_CRC32 = 0x1,CKSUMTYPE_RSA_MD4 = 0x2,CKSUMTYPE_RSA_MD4_DES = 0x3,CKSUMTYPE_DESCBC = 0x4,CKSUMTYPE_RSA_MD5 = 0x7,CKSUMTYPE_RSA_MD5_DES = 0x8,CKSUMTYPE_NIST_SHA = 0x9,CKSUMTYPE_HMAC_SHA1_DES3 = 0xC,CKSUMTYPE_HMAC_SHA1_96_AES128 = 0xF,CKSUMTYPE_HMAC_SHA1_96_AES256 = 0x10,CKSUMTYPE_HMAC_MD5_ARCFOUR = 0xFFFFFFFFFFFFFF76,};
enum MACRO_CLOCK_GET {CLOCK_GET_TIME_RES = 1,CLOCK_ALARM_CURRES = 3,CLOCK_ALARM_MINRES = 4,CLOCK_ALARM_MAXRES = 5,};
enum MACRO_CONTAINER {CONTAINER_KEY_ALLOW_DUPLICATES = 0x1,CONTAINER_KEY_UNSORTED = 0x2,};
enum MACRO_COUNTER64 {COUNTER64 = 70,};
enum MACRO_CPUFAMILY {CPUFAMILY_UNKNOWN = 0,CPUFAMILY_POWERPC_G3 = 3471054153,CPUFAMILY_POWERPC_G4 = 2009171118,CPUFAMILY_POWERPC_G5 = 3983988906,CPUFAMILY_INTEL_6_13 = 2855483691,CPUFAMILY_INTEL_YONAH = 1943433984,CPUFAMILY_INTEL_MEROM = 1114597871,CPUFAMILY_INTEL_PENRYN = 2028621756,CPUFAMILY_INTEL_NEHALEM = 1801080018,CPUFAMILY_INTEL_WESTMERE = 1463508716,CPUFAMILY_INTEL_SANDYBRIDGE = 1418770316,CPUFAMILY_ARM_9 = 3878847406,CPUFAMILY_ARM_11 = 2415272152,CPUFAMILY_ARM_XSCALE = 1404044789,CPUFAMILY_ARM_13 = 214503012,CPUFAMILY_ARM_14 = 2517073649,CPUFAMILY_INTEL_6_14 = 1943433984,CPUFAMILY_INTEL_6_15 = 1114597871,CPUFAMILY_INTEL_6_23 = 2028621756,CPUFAMILY_INTEL_6_26 = 1801080018,CPUFAMILY_INTEL_CORE = 1943433984,CPUFAMILY_INTEL_CORE2 = 1114597871,};
enum MACRO_CRYPTO_EX {CRYPTO_EX_INDEX_BIO = 0,CRYPTO_EX_INDEX_SSL = 1,CRYPTO_EX_INDEX_SSL_CTX = 2,CRYPTO_EX_INDEX_SSL_SESSION = 3,CRYPTO_EX_INDEX_X509_STORE = 4,CRYPTO_EX_INDEX_X509_STORE_CTX = 5,CRYPTO_EX_INDEX_RSA = 6,CRYPTO_EX_INDEX_DSA = 7,CRYPTO_EX_INDEX_DH = 8,CRYPTO_EX_INDEX_ENGINE = 9,CRYPTO_EX_INDEX_X509 = 10,CRYPTO_EX_INDEX_UI = 11,CRYPTO_EX_INDEX_ECDSA = 12,CRYPTO_EX_INDEX_ECDH = 13,CRYPTO_EX_INDEX_COMP = 14,CRYPTO_EX_INDEX_STORE = 15,CRYPTO_EX_INDEX_USER = 100,};
enum MACRO_CTL_DEBUG {CTL_DEBUG_NAME = 0,CTL_DEBUG_VALUE = 1,CTL_DEBUG_MAXID = 20,};
enum MACRO_CURLPAUSE {CURLPAUSE_RECV = 1,CURLPAUSE_RECV_CONT = 0,CURLPAUSE_SEND = 4,CURLPAUSE_SEND_CONT = 0,CURLPAUSE_ALL = 5,CURLPAUSE_CONT = 0,};
enum MACRO_CURLPROTO {CURLPROTO_HTTP = 1,CURLPROTO_HTTPS = 2,CURLPROTO_FTP = 4,CURLPROTO_FTPS = 8,CURLPROTO_SCP = 16,CURLPROTO_SFTP = 32,CURLPROTO_TELNET = 64,CURLPROTO_LDAP = 128,CURLPROTO_LDAPS = 256,CURLPROTO_DICT = 512,CURLPROTO_FILE = 1024,CURLPROTO_TFTP = 2048,CURLPROTO_IMAP = 4096,CURLPROTO_IMAPS = 8192,CURLPROTO_POP3 = 16384,CURLPROTO_POP3S = 32768,CURLPROTO_SMTP = 65536,CURLPROTO_SMTPS = 131072,CURLPROTO_RTSP = 262144,CURLPROTO_RTMP = 524288,CURLPROTO_RTMPT = 1048576,CURLPROTO_RTMPE = 2097152,CURLPROTO_RTMPTE = 4194304,CURLPROTO_RTMPS = 8388608,CURLPROTO_RTMPTS = 16777216,CURLPROTO_GOPHER = 33554432,CURLPROTO_ALL = -1,};
enum MACRO_CURL_POLL {CURL_POLL_NONE = 0,CURL_POLL_IN = 1,CURL_POLL_OUT = 2,CURL_POLL_INOUT = 3,CURL_POLL_REMOVE = 4,CURL_SOCKET_TIMEOUT = -1,CURL_CSELECT_IN = 1,CURL_CSELECT_OUT = 2,CURL_CSELECT_ERR = 4,};
enum MACRO_DBG_NETIP {DBG_NETIP = 1,DBG_NETARP = 2,DBG_NETUDP = 3,DBG_NETTCP = 4,DBG_NETICMP = 5,DBG_NETIGMP = 6,DBG_NETRIP = 7,DBG_NETOSPF = 8,DBG_NETISIS = 9,DBG_NETSNMP = 10,DBG_NETSOCK = 11,DBG_NETAARP = 100,DBG_NETDDP = 101,DBG_NETNBP = 102,DBG_NETZIP = 103,DBG_NETADSP = 104,DBG_NETATP = 105,DBG_NETASP = 106,DBG_NETAFP = 107,DBG_NETRTMP = 108,DBG_NETAURP = 109,DBG_NETIPSEC = 128,DBG_IOINTC = 0,DBG_IOWORKLOOP = 1,DBG_IOINTES = 2,DBG_IOCLKES = 3,DBG_IOCMDQ = 4,DBG_IOMCURS = 5,DBG_IOMDESC = 6,DBG_IOPOWER = 7,DBG_IOSERVICE = 8,DBG_IOSTORAGE = 32,DBG_IONETWORK = 33,DBG_IOKEYBOARD = 34,DBG_IOHID = 35,DBG_IOAUDIO = 36,DBG_IOSERIAL = 37,DBG_IOTTY = 38,DBG_IOSAM = 39,DBG_IOPARALLELATA = 40,DBG_IOPARALLELSCSI = 41,DBG_IOSATA = 42,DBG_IOSAS = 43,DBG_IOFIBRECHANNEL = 44,DBG_IOUSB = 45,DBG_IOBLUETOOTH = 46,DBG_IOFIREWIRE = 47,DBG_IOINFINIBAND = 48,DBG_IOCPUPM = 49,DBG_IOGRAPHICS = 50,DBG_HIBERNATE = 51,DBG_IOPOINTING = 35,DBG_IODISK = 32,DBG_DRVSTORAGE = 1,DBG_DRVNETWORK = 2,DBG_DRVKEYBOARD = 3,DBG_DRVHID = 4,DBG_DRVAUDIO = 5,DBG_DRVSERIAL = 7,DBG_DRVSAM = 8,DBG_DRVPARALLELATA = 9,DBG_DRVPARALLELSCSI = 10,DBG_DRVSATA = 11,DBG_DRVSAS = 12,DBG_DRVFIBRECHANNEL = 13,DBG_DRVUSB = 14,DBG_DRVBLUETOOTH = 15,DBG_DRVFIREWIRE = 16,DBG_DRVINFINIBAND = 17,DBG_DRVGRAPHICS = 18,DBG_DRVSD = 19,DBG_DRVPOINTING = 4,DBG_DRVDISK = 1,DBG_DLIL_STATIC = 1,DBG_DLIL_PR_MOD = 2,DBG_DLIL_IF_MOD = 3,DBG_DLIL_PR_FLT = 4,DBG_DLIL_IF_FLT = 5,DBG_FSRW = 1,DBG_DKRW = 2,DBG_FSVN = 3,DBG_FSLOOOKUP = 4,DBG_JOURNAL = 5,DBG_IOCTL = 6,DBG_BOOTCACHE = 7,DBG_HFS = 8,DBG_BSD_PROC = 1,DBG_BSD_EXCP_SC = 12,DBG_BSD_AIO = 13,DBG_BSD_SC_EXTENDED_INFO = 14,DBG_BSD_SC_EXTENDED_INFO2 = 15,};
enum MACRO_DBG_TRACE {DBG_TRACE_DATA = 0,DBG_TRACE_STRING = 1,DBG_TRACE_INFO = 2,DBG_CS_IO = 0,DBG_EVENT = 16,DBG_BUFFER = 32,DBG_DYLD_STRING = 5,};
enum MACRO_DESC_CALL {DESC_CALL_GATE = 0xC,DESC_TRAP_GATE = 0xF,DESC_INTR_GATE = 0xE,};
enum MACRO_DIRBLKSIZ {DIRBLKSIZ = 1024,};
enum MACRO_DIRSTRING {DIRSTRING_TYPE = 10246,PKCS9STRING_TYPE = 10262,};
enum MACRO_ETHERTYPE {ETHERTYPE_PUP = 0x200,ETHERTYPE_IP = 0x800,ETHERTYPE_ARP = 0x806,ETHERTYPE_REVARP = 0x8035,ETHERTYPE_VLAN = 0x8100,ETHERTYPE_IPV6 = 0x86DD,ETHERTYPE_PAE = 0x888E,ETHERTYPE_RSN_PREAUTH = 0x88C7,ETHERTYPE_LOOPBACK = 0x9000,ETHERTYPE_TRAIL = 0x1000,ETHERTYPE_NTRAILER = 0x10,};
enum MACRO_ETIMELIST {ETIMELIST_SIZE = 23,};
enum MACRO_EXCEPTION {EXCEPTION_CODE_MAX = 2,};
enum MACRO_FILENAMES {FILENAMES_CASE_SENSITIVE = 0,};
enum MACRO_FNONBLOCK {FNONBLOCK = 4,};
enum MACRO_HASHMAGIC {HASHMAGIC = 0x61561,};
enum MACRO_I64CHARSZ {I64CHARSZ = 21,};
enum MACRO_ICMP6_DST {ICMP6_DST_UNREACH = 1,ICMP6_PACKET_TOO_BIG = 2,ICMP6_TIME_EXCEEDED = 3,ICMP6_PARAM_PROB = 4,ICMP6_ECHO_REQUEST = 128,ICMP6_ECHO_REPLY = 129,};
enum MACRO_ICMPV6CTL {ICMPV6CTL_ND6_ONLINKNSRFC4861 = 50,};
enum MACRO_IFSTATMAX {IFSTATMAX = 800,};
enum MACRO_IF_MINMTU {IF_MINMTU = 72,IF_MAXMTU = 65535,};
enum MACRO_INT_FAST8 {INT_FAST8_MIN = -128,INT_FAST16_MIN = -32768,INT_FAST32_MIN = -2147483648,INT_FAST64_MIN = -9223372036854775808,INT_FAST8_MAX = 127,INT_FAST16_MAX = 32767,INT_FAST32_MAX = 2147483647,INT_FAST64_MAX = 9223372036854775807,};
enum MACRO_IPFRAGTTL {IPFRAGTTL = 60,};
enum MACRO_IPV6PROTO {IPV6PROTO_MAXID = 104,};
enum MACRO_IPVERSION {IPVERSION = 4,};
enum MACRO_KAUTH_UID {KAUTH_UID_NONE = -101,KAUTH_GID_NONE = -101,KAUTH_NTSID_MAX_AUTHORITIES = 16,KAUTH_NTSID_HDRSIZE = 8,KAUTH_EXTLOOKUP_SUCCESS = 0,KAUTH_EXTLOOKUP_BADRQ = 1,KAUTH_EXTLOOKUP_FAILURE = 2,KAUTH_EXTLOOKUP_FATAL = 3,KAUTH_EXTLOOKUP_INPROG = 100,KAUTH_EXTLOOKUP_VALID_UID = 1,KAUTH_EXTLOOKUP_VALID_UGUID = 2,KAUTH_EXTLOOKUP_VALID_USID = 4,KAUTH_EXTLOOKUP_VALID_GID = 8,KAUTH_EXTLOOKUP_VALID_GGUID = 16,KAUTH_EXTLOOKUP_VALID_GSID = 32,KAUTH_EXTLOOKUP_WANT_UID = 64,KAUTH_EXTLOOKUP_WANT_UGUID = 128,KAUTH_EXTLOOKUP_WANT_USID = 256,KAUTH_EXTLOOKUP_WANT_GID = 512,KAUTH_EXTLOOKUP_WANT_GGUID = 1024,KAUTH_EXTLOOKUP_WANT_GSID = 2048,KAUTH_EXTLOOKUP_WANT_MEMBERSHIP = 4096,KAUTH_EXTLOOKUP_VALID_MEMBERSHIP = 8192,KAUTH_EXTLOOKUP_ISMEMBER = 16384,KAUTH_EXTLOOKUP_VALID_PWNAM = 32768,KAUTH_EXTLOOKUP_WANT_PWNAM = 65536,KAUTH_EXTLOOKUP_VALID_GRNAM = 131072,KAUTH_EXTLOOKUP_WANT_GRNAM = 262144,KAUTH_EXTLOOKUP_REGISTER = 0,KAUTH_EXTLOOKUP_RESULT = 1,KAUTH_EXTLOOKUP_WORKER = 2,KAUTH_EXTLOOKUP_DEREGISTER = 4,KAUTH_ACE_KINDMASK = 15,KAUTH_ACE_PERMIT = 1,KAUTH_ACE_DENY = 2,KAUTH_ACE_AUDIT = 3,KAUTH_ACE_ALARM = 4,KAUTH_ACE_INHERITED = 16,KAUTH_ACE_FILE_INHERIT = 32,KAUTH_ACE_DIRECTORY_INHERIT = 64,KAUTH_ACE_LIMIT_INHERIT = 128,KAUTH_ACE_ONLY_INHERIT = 256,KAUTH_ACE_SUCCESS = 512,KAUTH_ACE_FAILURE = 1024,KAUTH_ACE_INHERIT_CONTROL_FLAGS = 480,KAUTH_ACE_GENERIC_ALL = 2097152,KAUTH_ACE_GENERIC_EXECUTE = 4194304,KAUTH_ACE_GENERIC_WRITE = 8388608,KAUTH_ACE_GENERIC_READ = 16777216,KAUTH_ACL_MAX_ENTRIES = 128,KAUTH_ACL_FLAGS_PRIVATE = 65535,KAUTH_ACL_DEFER_INHERIT = 65536,KAUTH_ACL_NO_INHERIT = 131072,KAUTH_FILESEC_NOACL = 4294967295,KAUTH_FILESEC_MAGIC = 19710317,KAUTH_FILESEC_FLAGS_PRIVATE = 65535,KAUTH_FILESEC_DEFER_INHERIT = 65536,KAUTH_FILESEC_NO_INHERIT = 131072,KAUTH_FILESEC_NONE = 0,KAUTH_FILESEC_WANTED = 1,KAUTH_ENDIAN_HOST = 1,KAUTH_ENDIAN_DISK = 2,KAUTH_VNODE_READ_DATA = 2,KAUTH_VNODE_LIST_DIRECTORY = 2,KAUTH_VNODE_WRITE_DATA = 4,KAUTH_VNODE_ADD_FILE = 4,KAUTH_VNODE_EXECUTE = 8,KAUTH_VNODE_SEARCH = 8,KAUTH_VNODE_DELETE = 16,KAUTH_VNODE_APPEND_DATA = 32,KAUTH_VNODE_ADD_SUBDIRECTORY = 32,KAUTH_VNODE_DELETE_CHILD = 64,KAUTH_VNODE_READ_ATTRIBUTES = 128,KAUTH_VNODE_WRITE_ATTRIBUTES = 256,KAUTH_VNODE_READ_EXTATTRIBUTES = 512,KAUTH_VNODE_WRITE_EXTATTRIBUTES = 1024,KAUTH_VNODE_READ_SECURITY = 2048,KAUTH_VNODE_WRITE_SECURITY = 4096,KAUTH_VNODE_TAKE_OWNERSHIP = 8192,KAUTH_VNODE_CHANGE_OWNER = 8192,KAUTH_VNODE_SYNCHRONIZE = 1048576,KAUTH_VNODE_LINKTARGET = 33554432,KAUTH_VNODE_CHECKIMMUTABLE = 67108864,KAUTH_VNODE_ACCESS = 2147483648,KAUTH_VNODE_NOIMMUTABLE = 1073741824,KAUTH_VNODE_SEARCHBYANYONE = 536870912,KAUTH_VNODE_GENERIC_READ_BITS = 2690,KAUTH_VNODE_GENERIC_WRITE_BITS = 5492,KAUTH_VNODE_GENERIC_EXECUTE_BITS = 8,KAUTH_VNODE_GENERIC_ALL_BITS = 8190,KAUTH_VNODE_WRITE_RIGHTS = 100676980,};
enum MACRO_KERN_CODE {KERN_CODE_SELECTOR = 0x8,KERN_DATA_SELECTOR = 0x10,};
enum MACRO_KEV_INET6 {KEV_INET6_SUBCLASS = 6,KEV_INET6_NEW_USER_ADDR = 1,KEV_INET6_CHANGED_ADDR = 2,KEV_INET6_ADDR_DELETED = 3,KEV_INET6_NEW_LL_ADDR = 4,KEV_INET6_NEW_RTADV_ADDR = 5,KEV_INET6_DEFROUTER = 6,};
enum MACRO_KRB5_PVNO {KRB5_PVNO = 5,KRB5_AS_REQ = 10,KRB5_AS_REP = 11,KRB5_TGS_REQ = 12,KRB5_TGS_REP = 13,KRB5_AP_REQ = 14,KRB5_AP_REP = 15,KRB5_SAFE = 20,KRB5_PRIV = 21,KRB5_CRED = 22,KRB5_ERROR = 30,KRB5_LRQ_NONE = 0,KRB5_LRQ_ALL_LAST_TGT = 1,KRB5_LRQ_ONE_LAST_TGT = -1,KRB5_LRQ_ALL_LAST_INITIAL = 2,KRB5_LRQ_ONE_LAST_INITIAL = -2,KRB5_LRQ_ALL_LAST_TGT_ISSUED = 3,KRB5_LRQ_ONE_LAST_TGT_ISSUED = -3,KRB5_LRQ_ALL_LAST_RENEWAL = 4,KRB5_LRQ_ONE_LAST_RENEWAL = -4,KRB5_LRQ_ALL_LAST_REQ = 5,KRB5_LRQ_ONE_LAST_REQ = -5,KRB5_LRQ_ALL_PW_EXPTIME = 6,KRB5_LRQ_ONE_PW_EXPTIME = -6,KRB5_PADATA_NONE = 0,KRB5_PADATA_AP_REQ = 1,KRB5_PADATA_TGS_REQ = 1,KRB5_PADATA_ENC_TIMESTAMP = 2,KRB5_PADATA_PW_SALT = 3,KRB5_PADATA_ENC_UNIX_TIME = 5,KRB5_PADATA_ENC_SANDIA_SECURID = 6,KRB5_PADATA_SESAME = 7,KRB5_PADATA_OSF_DCE = 8,KRB5_CYBERSAFE_SECUREID = 9,KRB5_PADATA_AFS3_SALT = 10,KRB5_PADATA_ETYPE_INFO = 11,KRB5_PADATA_SAM_CHALLENGE = 12,KRB5_PADATA_SAM_RESPONSE = 13,KRB5_PADATA_PK_AS_REQ_OLD = 14,KRB5_PADATA_PK_AS_REP_OLD = 15,KRB5_PADATA_PK_AS_REQ = 16,KRB5_PADATA_PK_AS_REP = 17,KRB5_PADATA_ETYPE_INFO2 = 19,KRB5_PADATA_USE_SPECIFIED_KVNO = 20,KRB5_PADATA_SAM_REDIRECT = 21,KRB5_PADATA_GET_FROM_TYPED_DATA = 22,KRB5_PADATA_REFERRAL = 25,KRB5_PADATA_SAM_CHALLENGE_2 = 30,KRB5_PADATA_SAM_RESPONSE_2 = 31,KRB5_PADATA_PK_AS_09_BINDING = 132,KRB5_SAM_USE_SAD_AS_KEY = 2147483648,KRB5_SAM_SEND_ENCRYPTED_SAD = 1073741824,KRB5_SAM_MUST_PK_ENCRYPT_SAD = 536870912,KRB5_PADATA_DASS = 16,KRB5_DOMAIN_X500_COMPRESS = 1,KRB5_ALTAUTH_ATT_CHALLENGE_RESPONSE = 64,KRB5_AUTHDATA_IF_RELEVANT = 1,KRB5_AUTHDATA_KDC_ISSUED = 4,KRB5_AUTHDATA_AND_OR = 5,KRB5_AUTHDATA_MANDATORY_FOR_KDC = 8,KRB5_AUTHDATA_INITIAL_VERIFIED_CAS = 9,KRB5_AUTHDATA_OSF_DCE = 64,KRB5_AUTHDATA_SESAME = 65,KRB5_KPASSWD_SUCCESS = 0,KRB5_KPASSWD_MALFORMED = 1,KRB5_KPASSWD_HARDERROR = 2,KRB5_KPASSWD_AUTHERROR = 3,KRB5_KPASSWD_SOFTERROR = 4,KRB5_KPASSWD_ACCESSDENIED = 5,KRB5_KPASSWD_BAD_VERSION = 6,KRB5_KPASSWD_INITIAL_FLAG_NEEDED = 7,KRB5_AUTH_CONTEXT_DO_TIME = 1,KRB5_AUTH_CONTEXT_RET_TIME = 2,KRB5_AUTH_CONTEXT_DO_SEQUENCE = 4,KRB5_AUTH_CONTEXT_RET_SEQUENCE = 8,KRB5_AUTH_CONTEXT_PERMIT_ALL = 16,KRB5_AUTH_CONTEXT_USE_SUBKEY = 32,KRB5_AUTH_CONTEXT_GENERATE_LOCAL_ADDR = 1,KRB5_AUTH_CONTEXT_GENERATE_REMOTE_ADDR = 2,KRB5_AUTH_CONTEXT_GENERATE_LOCAL_FULL_ADDR = 4,KRB5_AUTH_CONTEXT_GENERATE_REMOTE_FULL_ADDR = 8,KRB5_TC_MATCH_TIMES = 1,KRB5_TC_MATCH_IS_SKEY = 2,KRB5_TC_MATCH_FLAGS = 4,KRB5_TC_MATCH_TIMES_EXACT = 8,KRB5_TC_MATCH_FLAGS_EXACT = 16,KRB5_TC_MATCH_AUTHDATA = 32,KRB5_TC_MATCH_SRV_NAMEONLY = 64,KRB5_TC_MATCH_2ND_TKT = 128,KRB5_TC_MATCH_KTYPE = 256,KRB5_TC_SUPPORTED_KTYPES = 512,KRB5_TC_OPENCLOSE = 1,KRB5_TC_NOTICKET = 2,};
enum MACRO_LC_GLOBAL {LC_GLOBAL_LOCALE = -1,};
enum MACRO_LOCKGROUP {LOCKGROUP_MAX_NAME = 64,LOCKGROUP_ATTR_STAT = 1,};
enum MACRO_L_ctermid {L_ctermid = 1024,};
enum MACRO_MAXCDNAME {MAXCDNAME = 255,};
enum MACRO_MAXCOMLEN {MAXCOMLEN = 16,MAXINTERP = 64,};
enum MACRO_MAXDNSRCH {MAXDNSRCH = 6,};
enum MACRO_MAXNAMLEN {MAXNAMLEN = 255,};
enum MACRO_MAXPHYSIO {MAXPHYSIO = 131072,};
enum MACRO_MAXQUOTAS {MAXQUOTAS = 2,};
enum MACRO_MAX_AUDIT {MAX_AUDIT_RECORDS = 20,};
enum MACRO_MAX_CANON {MAX_CANON = 1024,MAX_INPUT = 1024,};
enum MACRO_MAX_DEBUG {MAX_DEBUG_TOKENS = 256,MAX_DEBUG_TOKEN_LEN = 128,};
enum MACRO_MAX_SUBID {MAX_SUBID = 0xFFFFFFFF,MAX_OID_LEN = 0x80,};
enum MACRO_MFCTBLSIZ {MFCTBLSIZ = 256,};
enum MACRO_MINBUCKET {MINBUCKET = 4,MAXALLOCSAVE = 8192,};
enum MACRO_MNTNAMLEN {MNTNAMLEN = 255,};
enum MACRO_MODE_EDIT {MODE_EDIT = 0x1,MODE_TRAPSIG = 0x2,MODE_ACK = 0x4,MODE_SOFT_TAB = 0x8,MODE_LIT_ECHO = 0x10,MODE_MASK = 0x1F,MODE_FLOW = 0x100,MODE_ECHO = 0x200,MODE_INBIN = 0x400,MODE_OUTBIN = 0x800,MODE_FORCE = 0x1000,};
enum MACRO_MOUNTPROC {MOUNTPROC_NULL = 0,MOUNTPROC_MNT = 1,MOUNTPROC_DUMP = 2,MOUNTPROC_UMNT = 3,MOUNTPROC_UMNTALL = 4,MOUNTPROC_EXPORT = 5,MOUNTPROC_EXPORTALL = 6,};
enum MACRO_MOUNTPROG {MOUNTPROG = 100005,};
enum MACRO_MOUNTVERS {MOUNTVERS = 1,};
enum MACRO_MSG_COUNT {host_security_MSG_COUNT = 2,ledger_MSG_COUNT = 4,lock_set_MSG_COUNT = 6,processor_MSG_COUNT = 6,processor_set_MSG_COUNT = 10,};
enum MACRO_MSG_MAGIC {MSG_MAGIC = 0x63061,};
enum MACRO_NAME_SIZE {NAME_SIZE = 12,TTY_SIZE = 16,};
enum MACRO_NDRVPROTO {NDRVPROTO_NDRV = 0,};
enum MACRO_NFS4_TIME {NFS4_TIME_SET_TO_SERVER = 0,NFS4_TIME_SET_TO_CLIENT = 1,};
enum MACRO_NFSV2PROC {NFSV2PROC_NULL = 0,NFSV2PROC_GETATTR = 1,NFSV2PROC_SETATTR = 2,NFSV2PROC_NOOP = 3,NFSV2PROC_ROOT = 3,NFSV2PROC_LOOKUP = 4,NFSV2PROC_READLINK = 5,NFSV2PROC_READ = 6,NFSV2PROC_WRITECACHE = 3,NFSV2PROC_WRITE = 8,NFSV2PROC_CREATE = 9,NFSV2PROC_REMOVE = 10,NFSV2PROC_RENAME = 11,NFSV2PROC_LINK = 12,NFSV2PROC_SYMLINK = 13,NFSV2PROC_MKDIR = 14,NFSV2PROC_RMDIR = 15,NFSV2PROC_READDIR = 16,NFSV2PROC_STATFS = 17,};
enum MACRO_NFS_MOUNT {NFS_MOUNT_INFO_VERSION = 0,NFS_MIATTR_BITMAP_LEN = 1,NFS_MIFLAG_BITMAP_LEN = 1,NFS_MIATTR_FLAGS = 0,NFS_MIATTR_ORIG_ARGS = 1,NFS_MIATTR_CUR_ARGS = 2,NFS_MIATTR_CUR_LOC_INDEX = 3,NFS_MIFLAG_DEAD = 0,NFS_MIFLAG_NOTRESP = 1,NFS_MIFLAG_RECOVERY = 2,NFS_FH_VERSION = 1314390016,};
enum MACRO_NVMAXTEXT {NVMAXTEXT = 55,};
enum MACRO_OID_STASH {OID_STASH_CHILDREN_SIZE = 31,};
enum MACRO_O_VISIBLE {O_VISIBLE = 0x1,O_ACTIVE = 0x2,O_PUBLIC = 0x4,O_EDIT = 0x8,O_WRAP = 0x10,O_BLANK = 0x20,O_AUTOSKIP = 0x40,O_NULLOK = 0x80,O_PASSOK = 0x100,O_STATIC = 0x200,O_NL_OVERLOAD = 0x1,O_BS_OVERLOAD = 0x2,};
enum MACRO_PIPE_SIZE {PIPE_SIZE = 16384,BIG_PIPE_SIZE = 65536,SMALL_PIPE_SIZE = 4096,};
enum MACRO_PROCESSOR {PROCESSOR_INFO_MAX = 1024,PROCESSOR_SET_INFO_MAX = 1024,PROCESSOR_BASIC_INFO = 1,PROCESSOR_CPU_LOAD_INFO = 2,PROCESSOR_PM_REGS_INFO = 268435457,PROCESSOR_TEMPERATURE = 268435458,};
enum MACRO_RADIXCHAR {RADIXCHAR = 50,};
enum MACRO_REFERENCE {REFERENCE_TYPE = 0x7,REFERENCE_FLAG_UNDEFINED_NON_LAZY = 0x0,REFERENCE_FLAG_UNDEFINED_LAZY = 0x1,REFERENCE_FLAG_DEFINED = 0x2,REFERENCE_FLAG_PRIVATE_DEFINED = 0x3,REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY = 0x4,REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY = 0x5,};
enum MACRO_RIPEMD160 {RIPEMD160_CBLOCK = 64,RIPEMD160_LBLOCK = 16,RIPEMD160_DIGEST_LENGTH = 20,};
enum MACRO_RPCBVERS3 {RPCBVERS3 = 3,RPCBVERS4 = 4,};
enum MACRO_RPCRQUOTA {RPCRQUOTA_VER = 1,RPCRQUOTA_EXT_VER = 2,RPCRQUOTA_GET = 1,};
enum MACRO_RSTATPROC {RSTATPROC_STATS = 1,RSTATPROC_HAVEDISK = 2,};
enum MACRO_RSTATPROG {RSTATPROG = 100001,};
enum MACRO_RSTATVERS {RSTATVERS_TIME = 3,};
enum MACRO_SA_REPEAT {SA_REPEAT = 0x1,SA_FIRED = 0x10,};
enum MACRO_SIGNATURE {TCPOPT_SIGNATURE = 19,TCPOLEN_SIGNATURE = 18,};
enum MACRO_SLAPI_LOG {SLAPI_LOG_FATAL = 0,SLAPI_LOG_TRACE = 1,SLAPI_LOG_PACKETS = 2,SLAPI_LOG_ARGS = 3,SLAPI_LOG_CONNS = 4,SLAPI_LOG_BER = 5,SLAPI_LOG_FILTER = 6,SLAPI_LOG_CONFIG = 7,SLAPI_LOG_ACL = 8,SLAPI_LOG_SHELL = 9,SLAPI_LOG_PARSE = 10,SLAPI_LOG_HOUSE = 11,SLAPI_LOG_REPL = 12,SLAPI_LOG_CACHE = 13,SLAPI_LOG_PLUGIN = 14,SLAPI_LOG_TIMING = 15,};
enum MACRO_SNMP_PORT {SNMP_PORT = 161,SNMP_TRAP_PORT = 162,SNMP_MAX_LEN = 1500,SNMP_MIN_MAX_LEN = 484,SNMP_VERSION_1 = 0,SNMP_VERSION_2c = 1,SNMP_VERSION_2u = 2,SNMP_VERSION_3 = 3,SNMP_VERSION_sec = 128,SNMP_VERSION_2p = 129,SNMP_VERSION_2star = 130,SNMP_MSG_GET = 160,SNMP_MSG_GETNEXT = 161,SNMP_MSG_RESPONSE = 162,SNMP_MSG_SET = 163,SNMP_MSG_TRAP = 164,SNMP_MSG_GETBULK = 165,SNMP_MSG_INFORM = 166,SNMP_MSG_TRAP2 = 167,SNMP_MSG_REPORT = 168,SNMP_MSG_INTERNAL_SET_BEGIN = -1,SNMP_MSG_INTERNAL_SET_RESERVE1 = 0,SNMP_MSG_INTERNAL_SET_RESERVE2 = 1,SNMP_MSG_INTERNAL_SET_ACTION = 2,SNMP_MSG_INTERNAL_SET_COMMIT = 3,SNMP_MSG_INTERNAL_SET_FREE = 4,SNMP_MSG_INTERNAL_SET_UNDO = 5,SNMP_MSG_INTERNAL_SET_MAX = 6,SNMP_MSG_INTERNAL_CHECK_VALUE = 17,SNMP_MSG_INTERNAL_ROW_CREATE = 18,SNMP_MSG_INTERNAL_UNDO_SETUP = 19,SNMP_MSG_INTERNAL_SET_VALUE = 20,SNMP_MSG_INTERNAL_CHECK_CONSISTENCY = 21,SNMP_MSG_INTERNAL_UNDO_SET = 22,SNMP_MSG_INTERNAL_COMMIT = 23,SNMP_MSG_INTERNAL_UNDO_COMMIT = 24,SNMP_MSG_INTERNAL_IRREVERSIBLE_COMMIT = 25,SNMP_MSG_INTERNAL_UNDO_CLEANUP = 26,SNMP_MSG_INTERNAL_PRE_REQUEST = 128,SNMP_MSG_INTERNAL_OBJECT_LOOKUP = 129,SNMP_MSG_INTERNAL_POST_REQUEST = 130,SNMP_MSG_INTERNAL_GET_STASH = 131,SNMP_NOSUCHOBJECT = 128,SNMP_NOSUCHINSTANCE = 129,SNMP_ENDOFMIBVIEW = 130,SNMP_ERR_NOERROR = 0,SNMP_ERR_TOOBIG = 1,SNMP_ERR_NOSUCHNAME = 2,SNMP_ERR_BADVALUE = 3,SNMP_ERR_READONLY = 4,SNMP_ERR_GENERR = 5,SNMP_ERR_NOACCESS = 6,SNMP_ERR_WRONGTYPE = 7,SNMP_ERR_WRONGLENGTH = 8,SNMP_ERR_WRONGENCODING = 9,SNMP_ERR_WRONGVALUE = 10,SNMP_ERR_NOCREATION = 11,SNMP_ERR_INCONSISTENTVALUE = 12,SNMP_ERR_RESOURCEUNAVAILABLE = 13,SNMP_ERR_COMMITFAILED = 14,SNMP_ERR_UNDOFAILED = 15,SNMP_ERR_AUTHORIZATIONERROR = 16,SNMP_ERR_NOTWRITABLE = 17,SNMP_ERR_INCONSISTENTNAME = 18,};
enum MACRO_SNMP_SESS {SNMP_SESS_NONAUTHORITATIVE = 0,SNMP_SESS_AUTHORITATIVE = 1,SNMP_SESS_UNKNOWNAUTH = 2,};
enum MACRO_SNMP_TRAP {SNMP_TRAP_COLDSTART = 0,SNMP_TRAP_WARMSTART = 1,SNMP_TRAP_LINKDOWN = 2,SNMP_TRAP_LINKUP = 3,SNMP_TRAP_AUTHFAIL = 4,SNMP_TRAP_EGPNEIGHBORLOSS = 5,SNMP_TRAP_ENTERPRISESPECIFIC = 6,SNMP_ROW_NONEXISTENT = 0,SNMP_ROW_ACTIVE = 1,SNMP_ROW_NOTINSERVICE = 2,SNMP_ROW_NOTREADY = 3,SNMP_ROW_CREATEANDGO = 4,SNMP_ROW_CREATEANDWAIT = 5,SNMP_ROW_DESTROY = 6,SNMP_STORAGE_NONE = 0,SNMP_STORAGE_OTHER = 1,SNMP_STORAGE_VOLATILE = 2,SNMP_STORAGE_NONVOLATILE = 3,SNMP_STORAGE_PERMANENT = 4,SNMP_STORAGE_READONLY = 5,SNMP_MP_MODEL_SNMPv1 = 0,SNMP_MP_MODEL_SNMPv2c = 1,SNMP_MP_MODEL_SNMPv2u = 2,SNMP_MP_MODEL_SNMPv3 = 3,SNMP_MP_MODEL_SNMPv2p = 256,SNMP_SEC_MODEL_ANY = 0,SNMP_SEC_MODEL_SNMPv1 = 1,SNMP_SEC_MODEL_SNMPv2c = 2,SNMP_SEC_MODEL_USM = 3,SNMP_SEC_MODEL_TSM = 4,SNMP_SEC_MODEL_SNMPv2p = 256,SNMP_SEC_LEVEL_NOAUTH = 1,SNMP_SEC_LEVEL_AUTHNOPRIV = 2,SNMP_SEC_LEVEL_AUTHPRIV = 3,SNMP_MSG_FLAG_AUTH_BIT = 1,SNMP_MSG_FLAG_PRIV_BIT = 2,SNMP_MSG_FLAG_RPRT_BIT = 4,};
enum MACRO_SNMP_VIEW {SNMP_VIEW_INCLUDED = 1,SNMP_VIEW_EXCLUDED = 2,};
enum MACRO_SOL_LOCAL {SOL_LOCAL = 0,};
enum MACRO_SOMAXCONN {SOMAXCONN = 128,};
enum MACRO_SPRAYPROC {SPRAYPROC_SPRAY = 1,SPRAYPROC_GET = 2,SPRAYPROC_CLEAR = 3,};
enum MACRO_SPRAYPROG {SPRAYPROG = 100012,};
enum MACRO_SPRAYVERS {SPRAYVERS = 1,};
enum MACRO_STATE_MAX {I386_THREAD_STATE_MAX = 144,THREAD_STATE_MAX = 144,};
enum MACRO_STRINGMAX {STRINGMAX = 1024,};
enum MACRO_SUPERPAGE {SUPERPAGE_NONE = 0,SUPERPAGE_SIZE_ANY = 1,};
enum MACRO_SYS_IOCTL {SYS_IOCTL_H_HAS_SIOCGIFADDR = 1,};
enum MACRO_S_BLKSIZE {S_BLKSIZE = 512,};
enum MACRO_S_REGULAR {S_REGULAR = 0x0,S_ZEROFILL = 0x1,S_CSTRING_LITERALS = 0x2,S_4BYTE_LITERALS = 0x3,S_8BYTE_LITERALS = 0x4,S_LITERAL_POINTERS = 0x5,S_NON_LAZY_SYMBOL_POINTERS = 0x6,S_LAZY_SYMBOL_POINTERS = 0x7,S_SYMBOL_STUBS = 0x8,S_MOD_INIT_FUNC_POINTERS = 0x9,S_MOD_TERM_FUNC_POINTERS = 0xA,S_COALESCED = 0xB,S_GB_ZEROFILL = 0xC,S_INTERPOSING = 0xD,S_16BYTE_LITERALS = 0xE,S_DTRACE_DOF = 0xF,S_LAZY_DYLIB_SYMBOL_POINTERS = 0x10,S_THREAD_LOCAL_REGULAR = 0x11,S_THREAD_LOCAL_ZEROFILL = 0x12,S_THREAD_LOCAL_VARIABLES = 0x13,S_THREAD_LOCAL_VARIABLE_POINTERS = 0x14,S_THREAD_LOCAL_INIT_FUNCTION_POINTERS = 0x15,};
enum MACRO_TASK_NULL {TASK_NULL = 0,TASK_NAME_NULL = 0,};
enum MACRO_TASK_PORT {TASK_PORT_REGISTER_MAX = 3,};
enum MACRO_TCIOFLUSH {TCIOFLUSH = 3,};
enum MACRO_TCPOPT_CC {TCPOPT_CC = 11,TCPOPT_CCNEW = 12,TCPOPT_CCECHO = 13,};
enum MACRO_TIMESTAMP {TCPOPT_TIMESTAMP = 8,TCPOLEN_TIMESTAMP = 10,};
enum MACRO_TIMETICKS {TIMETICKS = 67,};
enum MACRO_TIME_WITH {TIME_WITH_SYS_TIME = 1,};
enum MACRO_TIOCDRAIN {TIOCDRAIN = 536900702,};
enum MACRO_TIOCIXOFF {TIOCIXOFF = 536900736,};
enum MACRO_TIOCNOTTY {TIOCNOTTY = 536900721,};
enum MACRO_TIOCSCONS {TIOCSCONS = 536900707,};
enum MACRO_TIOCSCTTY {TIOCSCTTY = 536900705,};
enum MACRO_TIOCSTART {TIOCSTART = 536900718,};
enum MACRO_UNDEFINED {UNDEFINED_DEFAULT_NS = -1,};
enum MACRO_USER_CODE {USER_CODE_SELECTOR = 0x17,USER_DATA_SELECTOR = 0x1F,};
enum MACRO_VACM_VIEW {VACM_VIEW_READ = 0,VACM_VIEW_WRITE = 1,VACM_VIEW_NOTIFY = 2,VACM_VIEW_LOG = 3,VACM_VIEW_EXECUTE = 4,VACM_VIEW_NET = 5,VACM_VIEW_READ_BIT = 1,VACM_VIEW_WRITE_BIT = 2,VACM_VIEW_NOTIFY_BIT = 4,VACM_VIEW_LOG_BIT = 8,VACM_VIEW_EXECUTE_BIT = 16,VACM_VIEW_NET_BIT = 32,VACM_VIEW_NO_BITS = 0,VACM_MAX_VIEWS = 8,VACM_MODE_FIND = 0,VACM_MODE_IGNORE_MASK = 1,VACM_MODE_CHECK_SUBTREE = 2,};
enum MACRO_VM_REGION {VM_REGION_TOP_INFO = 12,VM_MAP_ENTRY_MAX = 256,VM_PAGE_INFO_BASIC = 1,};
enum MACRO_XML_XPATH {XML_XPATH_CHECKNS = 1,XML_XPATH_NOVAR = 2,};
enum MACRO_YPMAXPEER {YPMAXPEER = 64,};
enum MACRO_YPOLDPROC {YPOLDPROC_NULL = 0,YPOLDPROC_DOMAIN = 1,YPOLDPROC_DOMAIN_NONACK = 2,YPOLDPROC_MATCH = 3,YPOLDPROC_FIRST = 4,YPOLDPROC_NEXT = 5,YPOLDPROC_POLL = 6,YPOLDPROC_PUSH = 7,YPOLDPROC_PULL = 8,YPOLDPROC_GET = 9,};
enum MACRO_YPOLDVERS {YPOLDVERS = 1,};
enum MACRO__CS_POSIX {_CS_POSIX_V6_ILP32_OFF32_CFLAGS = 2,_CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 3,_CS_POSIX_V6_ILP32_OFF32_LIBS = 4,_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 5,_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 6,_CS_POSIX_V6_ILP32_OFFBIG_LIBS = 7,_CS_POSIX_V6_LP64_OFF64_CFLAGS = 8,_CS_POSIX_V6_LP64_OFF64_LDFLAGS = 9,_CS_POSIX_V6_LP64_OFF64_LIBS = 10,_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 11,_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 12,_CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 13,_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS = 14,_CS_XBS5_ILP32_OFF32_CFLAGS = 20,_CS_XBS5_ILP32_OFF32_LDFLAGS = 21,_CS_XBS5_ILP32_OFF32_LIBS = 22,_CS_XBS5_ILP32_OFF32_LINTFLAGS = 23,_CS_XBS5_ILP32_OFFBIG_CFLAGS = 24,_CS_XBS5_ILP32_OFFBIG_LDFLAGS = 25,_CS_XBS5_ILP32_OFFBIG_LIBS = 26,_CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 27,_CS_XBS5_LP64_OFF64_CFLAGS = 28,_CS_XBS5_LP64_OFF64_LDFLAGS = 29,_CS_XBS5_LP64_OFF64_LIBS = 30,_CS_XBS5_LP64_OFF64_LINTFLAGS = 31,_CS_XBS5_LPBIG_OFFBIG_CFLAGS = 32,_CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 33,_CS_XBS5_LPBIG_OFFBIG_LIBS = 34,_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 35,_CS_DARWIN_USER_DIR = 65536,_CS_DARWIN_USER_TEMP_DIR = 65537,_CS_DARWIN_USER_CACHE_DIR = 65538,};
enum MACRO__LIBICONV {_LIBICONV_VERSION = 0x10B,};
enum MACRO__NEWINDEX {_NEWINDEX = -1,};
enum MACRO__NOCHANGE {_NOCHANGE = -1,};
enum MACRO__PASSWORD {_PASSWORD_EFMT1 = 95,_PASSWORD_LEN = 128,_PASSWORD_NOUID = 1,_PASSWORD_NOGID = 2,_PASSWORD_NOCHG = 4,_PASSWORD_NOEXP = 8,_PASSWORD_WARNDAYS = 14,_PASSWORD_CHGNOW = -1,};
enum MACRO__POSIX_RE {_POSIX_RE_DUP_MAX = 255,};
enum MACRO__POSIX_V6 {_POSIX_V6_ILP32_OFF32 = -1,_POSIX_V6_ILP32_OFFBIG = -1,_POSIX_V6_LP64_OFF64 = 1,_POSIX_V6_LPBIG_OFFBIG = 1,_POSIX_V7_ILP32_OFF32 = -1,_POSIX_V7_ILP32_OFFBIG = -1,_POSIX_V7_LP64_OFF64 = 1,_POSIX_V7_LPBIG_OFFBIG = 1,};
enum MACRO__WSTOPPED {_WSTOPPED = 0x7F,};
enum MACRO___CTERMID {__CTERMID_DEFINED = 1,};
enum MACRO___NAMESER {__NAMESER = 19991006,};
enum MACRO___PTHREAD {__PTHREAD_SIZE__ = 1168,__PTHREAD_ATTR_SIZE__ = 56,__PTHREAD_MUTEXATTR_SIZE__ = 8,__PTHREAD_MUTEX_SIZE__ = 56,__PTHREAD_CONDATTR_SIZE__ = 8,__PTHREAD_COND_SIZE__ = 40,__PTHREAD_ONCE_SIZE__ = 8,__PTHREAD_RWLOCK_SIZE__ = 192,__PTHREAD_RWLOCKATTR_SIZE__ = 16,};
enum MACRO_pseudo_AF {pseudo_AF_RTIP = 22,};
typedef unsigned long long NXSwappedDouble;
typedef struct ocsp_cert_status_st OCSP_CERTSTATUS;
typedef struct ocsp_service_locator_st OCSP_SERVICELOC;
typedef struct ocsp_single_response_st OCSP_SINGLERESP;
typedef struct _BC1F9A8A398E4973C30CEFF05D86C139 OSFifoQueueHead;
typedef struct _78A516661F8337ED491DEA9E817B9015 PKCS12_MAC_DATA;
typedef struct STORE_attr_info_st STORE_ATTR_INFO;
typedef void SecmodFreeState(void *);
typedef struct Operation Slapi_Operation;
typedef struct sockbuf_io_desc Sockbuf_IO_Desc;
typedef int (*TidyGetByteFunc)(void *sourceData);
typedef struct _TidyInputSource TidyInputSource;
enum UI_string_types {UIT_NONE = 0x0,UIT_PROMPT = 0x1,UIT_VERIFY = 0x2,UIT_BOOLEAN = 0x3,UIT_INFO = 0x4,UIT_ERROR = 0x5,};
typedef void (*X509V3_EXT_FREE)(void *);
typedef struct X509_name_entry_st X509_NAME_ENTRY;
struct X509_objects_st {int nid;int (*a2i)(void);int (*i2a)(void);};
union _TXTRecordRef_t {char PrivateData[16];char *ForceNaturalAlignment;};
typedef unsigned long long __darwin_size_t;
typedef long long __darwin_time_t;
typedef unsigned char __darwin_uuid_t[16];
enum __ns_cert_types {cert_t_pkix = 0x1,cert_t_spki = 0x2,cert_t_pgp = 0x3,cert_t_url = 0xFD,cert_t_oid = 0xFE,};
struct _copyfile_state;
struct _htmlEntityDesc {unsigned int value; char *name; char *desc;};
struct _xmlRegExecCtxt;
typedef struct attribute_set attribute_set_t;
typedef struct attrreference attrreference_t;
typedef struct _732EA1FD564A0C308BCD0B773E129823 au_socketunix_t;
struct conf_imodule_st;
enum cups_encoding_e {CUPS_AUTO_ENCODING = 0xFFFFFFFF,CUPS_US_ASCII = 0x0,CUPS_ISO8859_1 = 0x1,CUPS_ISO8859_2 = 0x2,CUPS_ISO8859_3 = 0x3,CUPS_ISO8859_4 = 0x4,CUPS_ISO8859_5 = 0x5,CUPS_ISO8859_6 = 0x6,CUPS_ISO8859_7 = 0x7,CUPS_ISO8859_8 = 0x8,CUPS_ISO8859_9 = 0x9,CUPS_ISO8859_10 = 0xA,CUPS_UTF8 = 0xB,CUPS_ISO8859_13 = 0xC,CUPS_ISO8859_14 = 0xD,CUPS_ISO8859_15 = 0xE,CUPS_WINDOWS_874 = 0xF,CUPS_WINDOWS_1250 = 0x10,CUPS_WINDOWS_1251 = 0x11,CUPS_WINDOWS_1252 = 0x12,CUPS_WINDOWS_1253 = 0x13,CUPS_WINDOWS_1254 = 0x14,CUPS_WINDOWS_1255 = 0x15,CUPS_WINDOWS_1256 = 0x16,CUPS_WINDOWS_1257 = 0x17,CUPS_WINDOWS_1258 = 0x18,CUPS_KOI8_R = 0x19,CUPS_KOI8_U = 0x1A,CUPS_ISO8859_11 = 0x1B,CUPS_ISO8859_16 = 0x1C,CUPS_MAC_ROMAN = 0x1D,CUPS_ENCODING_SBCS_END = 0x3F,CUPS_WINDOWS_932 = 0x40,CUPS_WINDOWS_936 = 0x41,CUPS_WINDOWS_949 = 0x42,CUPS_WINDOWS_950 = 0x43,CUPS_WINDOWS_1361 = 0x44,CUPS_ENCODING_DBCS_END = 0x7F,CUPS_EUC_CN = 0x80,CUPS_EUC_JP = 0x81,CUPS_EUC_KR = 0x82,CUPS_EUC_TW = 0x83,CUPS_JIS_X0213 = 0x84,CUPS_ENCODING_VBCS_END = 0xBF,};
enum cups_sc_state_e {CUPS_SC_STATE_OFFLINE = 0x0,CUPS_SC_STATE_ONLINE = 0x1,CUPS_SC_STATE_BUSY = 0x2,CUPS_SC_STATE_ERROR = 0x4,CUPS_SC_STATE_MEDIA_LOW = 0x10,CUPS_SC_STATE_MEDIA_EMPTY = 0x20,CUPS_SC_STATE_MARKER_LOW = 0x40,CUPS_SC_STATE_MARKER_EMPTY = 0x80,};
struct dispatch_data_s;
typedef struct dispatch_data_s *dispatch_data_t;
typedef long long dispatch_once_t;
typedef struct _53A0FD50A74451071D4AFBA65ADAEB7D dns_MX_record_t;
typedef struct _A2898260CF48A71D77A1F36A2E3AC7DC dns_RP_record_t;
typedef struct _5D67E6FC771F02F85169EAAED44CFB39 dns_RT_record_t;
struct dtls1_bitmap_st {unsigned long long map;unsigned long long length;unsigned long long max_seq_num;};
struct dylib_reference {unsigned int isym : 24;unsigned int flags : 8;};
typedef void (*dyn_MEM_free_cb)(void *);
typedef struct st_dynamic_MEM_fns dynamic_MEM_fns;
typedef int evp_sign_method(int type,  unsigned char *m, unsigned int m_length, unsigned char *sigret, unsigned int *siglen, void *key);
typedef void (*ftpDataCallback)(void *userData,  char *data, int len);
typedef void (*ftpListCallback)(void *userData,  char *filename,  char *attrib,  char *owner,  char *group, unsigned long long size, int links, int year,  char *month, int day, int hour, int minute);
typedef struct gss_buffer_desc_struct gss_buffer_desc;
struct gss_name_struct;
typedef struct http_addrlist_s http_addrlist_t;
enum http_encoding_e {HTTP_ENCODE_LENGTH = 0x0,HTTP_ENCODE_CHUNKED = 0x1,HTTP_ENCODE_FIELDS = 0x2,};
typedef struct ipc_info_name ipc_info_name_t;
typedef struct _ipfw_insn_limit ipfw_insn_limit;
typedef struct ipp_attribute_s ipp_attribute_t;
typedef struct kauth_filesec *kauth_filesec_t;
typedef struct _krb5_octet_data krb5_octet_data;
struct mac_module_data;
struct mac_policy_conf { char *mpc_name; char *mpc_fullname; char **mpc_labelnames;unsigned int mpc_labelname_count;struct mac_policy_ops *mpc_ops;int mpc_loadtime_flags;int *mpc_field_off;int mpc_runtime_flags;struct mac_policy_conf *mpc_list;void *mpc_data;};
typedef struct _466E19AC50622C269D9BCEE6753F9E61 mach_msg_base_t;
typedef unsigned int mach_msg_bits_t;
typedef struct _E97267E034E71568AADDE042A76192B8 mach_msg_body_t;
typedef struct mach_port_qos mach_port_qos_t;
typedef struct mach_timespec mach_timespec_t;
typedef struct mb_class_stat mb_class_stat_t;
typedef char *mem_class_ptr_t;
typedef struct mig_subsystem *mig_subsystem_t;
typedef void (*mime_error_cb_t)(void *ctx,  char *message);
typedef struct netsnmp_factory_s netsnmp_factory;
typedef struct snmp_session netsnmp_session;
typedef struct netsnmp_subtree_s netsnmp_subtree;
typedef struct netsnmp_tdomain_s netsnmp_tdomain;
typedef union _1B35D174FFD6F02B21E6704B4C951A67 netsnmp_vardata;
struct ocsp_req_ctx_st;
typedef int pem_password_cb(char *buf, int size, int rwflag, void *userdata);
struct port_obj_tentry {void *pos_value;int pos_type;};
typedef struct _0362AC053C3D6D68586BA4DFD8C6F4A4 *port_stat_ptr_t;
typedef struct rpc_subsystem *rpc_subsystem_t;
typedef struct sasl_callback sasl_callback_t;
typedef int sasl_getrealm_t(void *context, int id,  char **availrealms,  char **result);
typedef struct sasl_interact sasl_interact_t;
struct sqlite3_context;
struct store_method_st;
typedef struct vm_read_entry vm_read_entry_t[256];
typedef struct vm_statistics *vm_statistics_t;
typedef struct x86_state_hdr x86_state_hdr_t;
typedef struct _xmlChRangeGroup xmlChRangeGroup;
typedef struct _xmlHashTable xmlElementTable;
typedef struct _xmlOutputBuffer xmlOutputBuffer;
typedef struct _xmlSAXHandlerV1 xmlSAXHandlerV1;
typedef struct _xmlXIncludeCtxt xmlXIncludeCtxt;
typedef struct _xmlXPathContext xmlXPathContext;
typedef unsigned int xp_request_type;
typedef struct _xsltElemPreComp xsltElemPreComp;
enum ypbind_resptype {YPBIND_SUCC_VAL = 0x1,YPBIND_FAIL_VAL = 0x2,};
typedef struct ASN1_ADB_TABLE_st ASN1_ADB_TABLE;
typedef struct asn1_string_st ASN1_BMPSTRING;
typedef struct asn1_string_st ASN1_IA5STRING;
typedef struct asn1_string_st ASN1_T61STRING;
typedef struct asn1_const_ctx_st ASN1_const_CTX;
typedef void BER_MEMFREE_FN(void *p, void *ctx);
enum BTreeKeyLimits {kMaxKeyLength = 0x208,};
typedef struct crypto_ex_data_st CRYPTO_EX_DATA;
typedef struct _D5D5FAADE45C3E62C0E3AA0EFAA1D8B2 CRYPTO_dynlock;
typedef struct ecpk_parameters_st ECPKPARAMETERS;
typedef struct evp_cipher_ctx_st EVP_CIPHER_CTX;
typedef struct evp_Encode_Ctx_st EVP_ENCODE_CTX;
typedef struct HMAC_MD5_STATE_s HMAC_MD5_STATE;
typedef struct krb5_ap_req_st KRB5_APREQBODY;
typedef struct krb5_princname_st KRB5_PRINCNAME;
enum MACRO_AC_APPLE {AC_APPLE_UNIVERSAL_BUILD = 1,};
enum MACRO_ADDRTYPE {ADDRTYPE_INET = 0x2,ADDRTYPE_CHAOS = 0x5,ADDRTYPE_XNS = 0x6,ADDRTYPE_ISO = 0x7,ADDRTYPE_DDP = 0x10,ADDRTYPE_INET6 = 0x18,ADDRTYPE_ADDRPORT = 0x100,ADDRTYPE_IPPORT = 0x101,};
enum MACRO_AF_INET6 {AF_INET6 = 30,AF_NATM = 31,AF_SYSTEM = 32,AF_NETBIOS = 33,AF_PPP = 34,};
enum MACRO_ALLDELAY {ALLDELAY = 65280,CRTBS = 65536,PRTERA = 131072,CRTERA = 262144,TILDE = 524288,MDMBUF = 1048576,LITOUT = 2097152,TOSTOP = 4194304,FLUSHO = 8388608,NOHANG = 16777216,L001000 = 33554432,CRTKIL = 67108864,PASS8 = 134217728,CTLECH = 268435456,PENDIN = 536870912,DECCTQ = 1073741824,NOFLSH = 2147483648,};
enum MACRO_ALLOCATE {ALLOCATE_THIS_INDEX = 0x0,ALLOCATE_ANY_INDEX = 0x1,ALLOCATE_NEW_INDEX = 0x3,};
enum MACRO_ALLPERMS {ALLPERMS = 4095,};
enum MACRO_ALL_VIFS {ALL_VIFS = 65535,};
enum MACRO_ALRMTYPE {ALRMTYPE = 0xFF,};
enum MACRO_ANNOUNCE {ANNOUNCE = 3,};
enum MACRO_AREGTYPE {AREGTYPE = 0,LNKTYPE = 49,};
enum MACRO_ATTR_CMN {ATTR_CMN_NAME = 0x1,ATTR_CMN_DEVID = 0x2,ATTR_CMN_FSID = 0x4,ATTR_CMN_OBJTYPE = 0x8,ATTR_CMN_OBJTAG = 0x10,ATTR_CMN_OBJID = 0x20,ATTR_CMN_OBJPERMANENTID = 0x40,ATTR_CMN_PAROBJID = 0x80,ATTR_CMN_SCRIPT = 0x100,ATTR_CMN_CRTIME = 0x200,ATTR_CMN_MODTIME = 0x400,ATTR_CMN_CHGTIME = 0x800,ATTR_CMN_ACCTIME = 0x1000,ATTR_CMN_BKUPTIME = 0x2000,ATTR_CMN_FNDRINFO = 0x4000,ATTR_CMN_OWNERID = 0x8000,ATTR_CMN_GRPID = 0x10000,ATTR_CMN_ACCESSMASK = 0x20000,ATTR_CMN_FLAGS = 0x40000,ATTR_CMN_USERACCESS = 0x200000,ATTR_CMN_EXTENDED_SECURITY = 0x400000,ATTR_CMN_UUID = 0x800000,ATTR_CMN_GRPUUID = 0x1000000,ATTR_CMN_FILEID = 0x2000000,ATTR_CMN_PARENTID = 0x4000000,ATTR_CMN_FULLPATH = 0x8000000,ATTR_CMN_ADDEDTIME = 0x10000000,ATTR_CMN_RETURNED_ATTRS = 0x80000000,ATTR_CMN_VALIDMASK = 0x9FE7FFFF,ATTR_CMN_SETMASK = 0x1C7FF00,ATTR_CMN_VOLSETMASK = 0x6700,ATTR_VOL_FSTYPE = 0x1,ATTR_VOL_SIGNATURE = 0x2,ATTR_VOL_SIZE = 0x4,ATTR_VOL_SPACEFREE = 0x8,ATTR_VOL_SPACEAVAIL = 0x10,ATTR_VOL_MINALLOCATION = 0x20,ATTR_VOL_ALLOCATIONCLUMP = 0x40,ATTR_VOL_IOBLOCKSIZE = 0x80,ATTR_VOL_OBJCOUNT = 0x100,ATTR_VOL_FILECOUNT = 0x200,ATTR_VOL_DIRCOUNT = 0x400,ATTR_VOL_MAXOBJCOUNT = 0x800,ATTR_VOL_MOUNTPOINT = 0x1000,ATTR_VOL_NAME = 0x2000,ATTR_VOL_MOUNTFLAGS = 0x4000,ATTR_VOL_MOUNTEDDEVICE = 0x8000,ATTR_VOL_ENCODINGSUSED = 0x10000,ATTR_VOL_CAPABILITIES = 0x20000,ATTR_VOL_UUID = 0x40000,ATTR_VOL_ATTRIBUTES = 0x40000000,ATTR_VOL_INFO = 0x80000000,ATTR_VOL_VALIDMASK = 0xC007FFFF,ATTR_VOL_SETMASK = 0x80002000,ATTR_DIR_LINKCOUNT = 0x1,ATTR_DIR_ENTRYCOUNT = 0x2,ATTR_DIR_MOUNTSTATUS = 0x4,};
enum MACRO_ATTR_DIR {ATTR_DIR_VALIDMASK = 0x7,ATTR_DIR_SETMASK = 0x0,ATTR_FILE_LINKCOUNT = 0x1,ATTR_FILE_TOTALSIZE = 0x2,ATTR_FILE_ALLOCSIZE = 0x4,ATTR_FILE_IOBLOCKSIZE = 0x8,ATTR_FILE_DEVTYPE = 0x20,ATTR_FILE_FORKCOUNT = 0x80,ATTR_FILE_FORKLIST = 0x100,ATTR_FILE_DATALENGTH = 0x200,ATTR_FILE_DATAALLOCSIZE = 0x400,ATTR_FILE_RSRCLENGTH = 0x1000,ATTR_FILE_RSRCALLOCSIZE = 0x2000,ATTR_FILE_VALIDMASK = 0x37FF,ATTR_FILE_SETMASK = 0x20,ATTR_FORK_TOTALSIZE = 0x1,ATTR_FORK_ALLOCSIZE = 0x2,ATTR_FORK_VALIDMASK = 0x3,ATTR_FORK_SETMASK = 0x0,ATTR_CMN_NAMEDATTRCOUNT = 0x80000,ATTR_CMN_NAMEDATTRLIST = 0x100000,ATTR_FILE_CLUMPSIZE = 0x10,ATTR_FILE_FILETYPE = 0x40,ATTR_FILE_DATAEXTENTS = 0x800,ATTR_FILE_RSRCEXTENTS = 0x4000,};
enum MACRO_ATTR_MAX {ATTR_MAX_BUFFER = 8192,};
enum MACRO_AUTHTYPE {AUTHTYPE_NULL = 0,AUTHTYPE_KERBEROS_V4 = 1,AUTHTYPE_KERBEROS_V5 = 2,AUTHTYPE_SPX = 3,AUTHTYPE_MINK = 4,AUTHTYPE_CNT = 5,AUTHTYPE_TEST = 99,};
enum MACRO_A_NORMAL {A_NORMAL = 0,A_ATTRIBUTES = -256,A_CHARTEXT = 255,A_COLOR = 65280,A_STANDOUT = 65536,A_UNDERLINE = 131072,A_REVERSE = 262144,A_BLINK = 524288,A_DIM = 1048576,A_BOLD = 2097152,A_ALTCHARSET = 4194304,A_INVIS = 8388608,A_PROTECT = 16777216,A_HORIZONTAL = 33554432,A_LEFT = 67108864,A_LOW = 134217728,A_RIGHT = 268435456,A_TOP = 536870912,A_VERTICAL = 1073741824,};
enum MACRO_BSD_PROC {BSD_PROC_EXIT = 1,BSD_PROC_FRCEXIT = 2,};
enum MACRO_CDISCARD {CDISCARD = 15,};
enum MACRO_CHARTYPE {CHARTYPE_PRINTABLESTRING = 0x10,CHARTYPE_FIRST_ESC_2253 = 0x20,CHARTYPE_LAST_ESC_2253 = 0x40,};
enum MACRO_CHAR_MIN {CHAR_MIN = -128,};
enum MACRO_CONTINUE {CONTINUE = 3,TRANSIENT = 4,};
enum MACRO_CONTTYPE {CONTTYPE = 55,TSUID = 2048,};
enum MACRO_COPYFILE {COPYFILE_STATE_SRC_FD = 1,COPYFILE_STATE_SRC_FILENAME = 2,COPYFILE_STATE_DST_FD = 3,COPYFILE_STATE_DST_FILENAME = 4,COPYFILE_STATE_QUARANTINE = 5,COPYFILE_STATE_STATUS_CB = 6,COPYFILE_STATE_STATUS_CTX = 7,COPYFILE_STATE_COPIED = 8,COPYFILE_STATE_XATTRNAME = 9,COPYFILE_ACL = 1,COPYFILE_STAT = 2,COPYFILE_XATTR = 4,COPYFILE_DATA = 8,COPYFILE_SECURITY = 3,COPYFILE_METADATA = 7,COPYFILE_ALL = 15,COPYFILE_RECURSIVE = 32768,COPYFILE_CHECK = 65536,COPYFILE_EXCL = 131072,COPYFILE_NOFOLLOW_SRC = 262144,COPYFILE_NOFOLLOW_DST = 524288,COPYFILE_MOVE = 1048576,COPYFILE_UNLINK = 2097152,COPYFILE_NOFOLLOW = 786432,COPYFILE_PACK = 4194304,COPYFILE_UNPACK = 8388608,COPYFILE_VERBOSE = 1073741824,COPYFILE_RECURSE_ERROR = 0,COPYFILE_RECURSE_FILE = 1,COPYFILE_RECURSE_DIR = 2,COPYFILE_RECURSE_DIR_CLEANUP = 3,COPYFILE_COPY_DATA = 4,COPYFILE_COPY_XATTR = 5,COPYFILE_START = 1,COPYFILE_FINISH = 2,COPYFILE_ERR = 3,COPYFILE_PROGRESS = 4,COPYFILE_CONTINUE = 0,COPYFILE_SKIP = 1,COPYFILE_QUIT = 2,};
enum MACRO_CREPRINT {CREPRINT = 18,};
enum MACRO_CRNCYSTR {CRNCYSTR = 56,};
enum MACRO_CRYPTO_F {CRYPTO_F_CRYPTO_GET_EX_NEW_INDEX = 100,CRYPTO_F_CRYPTO_GET_NEW_DYNLOCKID = 103,CRYPTO_F_CRYPTO_GET_NEW_LOCKID = 101,CRYPTO_F_CRYPTO_SET_EX_DATA = 102,CRYPTO_F_DEF_ADD_INDEX = 104,CRYPTO_F_DEF_GET_CLASS = 105,CRYPTO_F_INT_DUP_EX_DATA = 106,CRYPTO_F_INT_FREE_EX_DATA = 107,CRYPTO_F_INT_NEW_EX_DATA = 108,CRYPTO_R_NO_DYNLOCK_CREATE_CALLBACK = 100,};
enum MACRO_CURLAUTH {CURLAUTH_NONE = 0,CURLAUTH_BASIC = 1,CURLAUTH_DIGEST = 2,CURLAUTH_GSSNEGOTIATE = 4,CURLAUTH_NTLM = 8,CURLAUTH_DIGEST_IE = 16,CURLAUTH_ONLY = 2147483648,CURLAUTH_ANY = -17,CURLAUTH_ANYSAFE = -18,};
enum MACRO_CURLINFO {CURLINFO_STRING = 0x100000,CURLINFO_LONG = 0x200000,CURLINFO_DOUBLE = 0x300000,CURLINFO_SLIST = 0x400000,CURLINFO_MASK = 0xFFFFF,CURLINFO_TYPEMASK = 0xF00000,};
enum MACRO_CURL_MAX {CURL_MAX_WRITE_SIZE = 16384,CURL_MAX_HTTP_HEADER = 102400,CURL_WRITEFUNC_PAUSE = 268435457,};
enum MACRO_CURSES_H {CURSES_H = 1,};
enum MACRO_DB_ERROR {DB_ERROR_OK = 0,DB_ERROR_MALLOC = 1,DB_ERROR_INDEX_CLASH = 2,DB_ERROR_INDEX_OUT_OF_RANGE = 3,DB_ERROR_NO_INDEX = 4,DB_ERROR_INSERT_INDEX_CLASH = 5,};
enum MACRO_DESC_TSS {DESC_TSS = 0x9,DESC_TASK_GATE = 0x5,DESC_TBL_MAX = 0x2000,};
enum MACRO_DISPATCH {DISPATCH_API_VERSION = 20110201,};
enum MACRO_ENGINEID {ENGINEID_TYPE_IPV4 = 1,ENGINEID_TYPE_IPV6 = 2,ENGINEID_TYPE_MACADDR = 3,ENGINEID_TYPE_TEXT = 4,ENGINEID_TYPE_EXACT = 5,ENGINEID_TYPE_NETSNMP_RND = 128,};
enum MACRO_ENGINE_F {ENGINE_F_DYNAMIC_CTRL = 180,ENGINE_F_DYNAMIC_GET_DATA_CTX = 181,ENGINE_F_DYNAMIC_LOAD = 182,ENGINE_F_DYNAMIC_SET_DATA_CTX = 183,ENGINE_F_ENGINE_ADD = 105,ENGINE_F_ENGINE_BY_ID = 106,ENGINE_F_ENGINE_CMD_IS_EXECUTABLE = 170,ENGINE_F_ENGINE_CTRL = 142,ENGINE_F_ENGINE_CTRL_CMD = 178,ENGINE_F_ENGINE_CTRL_CMD_STRING = 171,ENGINE_F_ENGINE_FINISH = 107,ENGINE_F_ENGINE_FREE_UTIL = 108,ENGINE_F_ENGINE_GET_CIPHER = 185,ENGINE_F_ENGINE_GET_DEFAULT_TYPE = 177,ENGINE_F_ENGINE_GET_DIGEST = 186,ENGINE_F_ENGINE_GET_NEXT = 115,ENGINE_F_ENGINE_GET_PREV = 116,ENGINE_F_ENGINE_INIT = 119,ENGINE_F_ENGINE_LIST_ADD = 120,ENGINE_F_ENGINE_LIST_REMOVE = 121,ENGINE_F_ENGINE_LOAD_PRIVATE_KEY = 150,ENGINE_F_ENGINE_LOAD_PUBLIC_KEY = 151,ENGINE_F_ENGINE_LOAD_SSL_CLIENT_CERT = 192,ENGINE_F_ENGINE_NEW = 122,ENGINE_F_ENGINE_REMOVE = 123,ENGINE_F_ENGINE_SET_DEFAULT_STRING = 189,ENGINE_F_ENGINE_SET_DEFAULT_TYPE = 126,ENGINE_F_ENGINE_SET_ID = 129,ENGINE_F_ENGINE_SET_NAME = 130,ENGINE_F_ENGINE_TABLE_REGISTER = 184,ENGINE_F_ENGINE_UNLOAD_KEY = 152,ENGINE_F_ENGINE_UNLOCKED_FINISH = 191,ENGINE_F_ENGINE_UP_REF = 190,ENGINE_F_INT_CTRL_HELPER = 172,ENGINE_F_INT_ENGINE_CONFIGURE = 188,ENGINE_F_INT_ENGINE_MODULE_INIT = 187,ENGINE_F_LOG_MESSAGE = 141,ENGINE_R_ALREADY_LOADED = 100,ENGINE_R_ARGUMENT_IS_NOT_A_NUMBER = 133,ENGINE_R_CMD_NOT_EXECUTABLE = 134,ENGINE_R_COMMAND_TAKES_INPUT = 135,ENGINE_R_COMMAND_TAKES_NO_INPUT = 136,ENGINE_R_CONFLICTING_ENGINE_ID = 103,ENGINE_R_CTRL_COMMAND_NOT_IMPLEMENTED = 119,ENGINE_R_DH_NOT_IMPLEMENTED = 139,ENGINE_R_DSA_NOT_IMPLEMENTED = 140,ENGINE_R_DSO_FAILURE = 104,ENGINE_R_DSO_NOT_FOUND = 132,ENGINE_R_ENGINES_SECTION_ERROR = 148,ENGINE_R_ENGINE_CONFIGURATION_ERROR = 101,ENGINE_R_ENGINE_IS_NOT_IN_LIST = 105,ENGINE_R_ENGINE_SECTION_ERROR = 149,ENGINE_R_FAILED_LOADING_PRIVATE_KEY = 128,ENGINE_R_FAILED_LOADING_PUBLIC_KEY = 129,ENGINE_R_FINISH_FAILED = 106,ENGINE_R_GET_HANDLE_FAILED = 107,ENGINE_R_ID_OR_NAME_MISSING = 108,ENGINE_R_INIT_FAILED = 109,ENGINE_R_INTERNAL_LIST_ERROR = 110,ENGINE_R_INVALID_ARGUMENT = 143,ENGINE_R_INVALID_CMD_NAME = 137,ENGINE_R_INVALID_CMD_NUMBER = 138,ENGINE_R_INVALID_INIT_VALUE = 151,ENGINE_R_INVALID_STRING = 150,ENGINE_R_NOT_INITIALISED = 117,ENGINE_R_NOT_LOADED = 112,ENGINE_R_NO_CONTROL_FUNCTION = 120,ENGINE_R_NO_INDEX = 144,ENGINE_R_NO_LOAD_FUNCTION = 125,ENGINE_R_NO_REFERENCE = 130,ENGINE_R_NO_SUCH_ENGINE = 116,ENGINE_R_NO_UNLOAD_FUNCTION = 126,ENGINE_R_PROVIDE_PARAMETERS = 113,ENGINE_R_RSA_NOT_IMPLEMENTED = 141,ENGINE_R_UNIMPLEMENTED_CIPHER = 146,ENGINE_R_UNIMPLEMENTED_DIGEST = 147,ENGINE_R_VERSION_INCOMPATIBILITY = 145,};
enum MACRO_ENOSPACE {ENOSPACE = 3,EBADOP = 4,};
enum MACRO_ETHERMIN {ETHERMIN = 46,};
enum MACRO_ETHERMTU {ETHERMTU = 1500,};
enum MACRO_EXC_I386 {EXC_I386_INVOP = 1,EXC_I386_DIV = 1,EXC_I386_INTO = 2,EXC_I386_NOEXT = 3,EXC_I386_EXTOVR = 4,EXC_I386_EXTERR = 5,EXC_I386_EMERR = 6,EXC_I386_BOUND = 7,EXC_I386_SSEEXTERR = 8,EXC_I386_SGL = 1,EXC_I386_BPT = 2,EXC_I386_DIVERR = 0,EXC_I386_SGLSTP = 1,EXC_I386_NMIFLT = 2,EXC_I386_BPTFLT = 3,EXC_I386_INTOFLT = 4,EXC_I386_BOUNDFLT = 5,EXC_I386_INVOPFLT = 6,EXC_I386_NOEXTFLT = 7,EXC_I386_DBLFLT = 8,EXC_I386_EXTOVRFLT = 9,EXC_I386_INVTSSFLT = 10,EXC_I386_SEGNPFLT = 11,EXC_I386_STKFLT = 12,EXC_I386_GPFLT = 13,EXC_I386_PGFLT = 14,EXC_I386_EXTERRFLT = 16,EXC_I386_ALIGNFLT = 17,EXC_I386_ENDPERR = 33,EXC_I386_ENOEXTFLT = 32,EXC_MASK_MACHINE = 0,EXC_BAD_ACCESS = 1,EXC_BAD_INSTRUCTION = 2,EXC_ARITHMETIC = 3,EXC_EMULATION = 4,EXC_SOFTWARE = 5,EXC_BREAKPOINT = 6,EXC_SYSCALL = 7,EXC_MACH_SYSCALL = 8,EXC_RPC_ALERT = 9,EXC_CRASH = 10,};
enum MACRO_EXC_MASK {EXC_MASK_BAD_ACCESS = 2,EXC_MASK_BAD_INSTRUCTION = 4,EXC_MASK_ARITHMETIC = 8,EXC_MASK_EMULATION = 16,EXC_MASK_SOFTWARE = 32,EXC_MASK_BREAKPOINT = 64,EXC_MASK_SYSCALL = 128,EXC_MASK_MACH_SYSCALL = 256,EXC_MASK_RPC_ALERT = 512,EXC_MASK_CRASH = 1024,EXC_MASK_ALL = 1022,};
enum MACRO_EXC_SOFT {EXC_SOFT_SIGNAL = 0x10003,};
enum MACRO_FIFOTYPE {FIFOTYPE = 54,};
enum MACRO_FINISHED {FINISHED_SUCCESS = 9,FINISHED_FAILURE = 10,};
enum MACRO_FIONCLEX {FIONCLEX = 536897026,};
enum MACRO_FPARSELN {FPARSELN_UNESCESC = 0x1,FPARSELN_UNESCCONT = 0x2,FPARSELN_UNESCCOMM = 0x4,FPARSELN_UNESCREST = 0x8,FPARSELN_UNESCALL = 0xF,};
enum MACRO_GMONTYPE {GMONTYPE_SAMPLES = 1,GMONTYPE_RAWARCS = 2,GMONTYPE_ARCS_ORDERS = 3,GMONTYPE_DYLD_STATE = 4,GMONTYPE_DYLD2_STATE = 5,};
enum MACRO_HASHSIZE {HASHSIZE = 128,};
enum MACRO_HAVE_AES {HAVE_AES_CFB128_ENCRYPT = 1,HAVE_ARPA_INET_H = 1,HAVE_CGETNEXT = 1,HAVE_CHOWN = 1,HAVE_CLOSEDIR = 1,HAVE_DIRENT_H = 1,HAVE_DLFCN_H = 1,HAVE_DLOPEN = 1,HAVE_ERR_H = 1,HAVE_EXECV = 1,HAVE_FCNTL_H = 1,HAVE_FORK = 1,HAVE_GAI_STRERROR = 1,HAVE_GETADDRINFO = 1,HAVE_GETDTABLESIZE = 1,HAVE_GETFSSTAT = 1,HAVE_GETGRNAM = 1,HAVE_GETHOSTBYNAME = 1,HAVE_GETHOSTNAME = 1,HAVE_GETIPNODEBYNAME = 1,HAVE_GETLOADAVG = 1,HAVE_GETOPT = 1,HAVE_GETOPT_H = 1,HAVE_GETPAGESIZE = 1,HAVE_GETPID = 1,HAVE_GETPWNAM = 1,HAVE_GETTIMEOFDAY = 1,HAVE_GRP_H = 1,HAVE_IF_FREENAMEINDEX = 1,HAVE_IF_NAMEINDEX = 1,HAVE_IF_NAMETOINDEX = 1,HAVE_INET_NTOP = 1,HAVE_INET_PTON = 1,HAVE_INITGROUPS = 1,HAVE_INTMAX_T = 1,HAVE_INTPTR_T = 1,HAVE_INTTYPES_H = 1,HAVE_IN_ADDR_T = 1,HAVE_LIBCRYPTO = 1,HAVE_LIMITS_H = 1,HAVE_LOCALE_H = 1,HAVE_LOCALTIME_R = 1,HAVE_LONG_LONG_INT = 1,HAVE_LPSTAT = 1,HAVE_LRAND48 = 1,HAVE_MACHINE_PARAM_H = 1,HAVE_MACHINE_TYPES_H = 1,HAVE_MEMORY_H = 1,HAVE_MKSTEMP = 1,HAVE_MKTIME = 1,HAVE_NETDB_H = 1,HAVE_NETINET_ICMP6_H = 1,HAVE_NETINET_ICMP_VAR_H = 1,HAVE_NETINET_IF_ETHER_H = 1,HAVE_NETINET_IN_H = 1,HAVE_NETINET_IN_PCB_H = 1,HAVE_NETINET_IN_SYSTM_H = 1,HAVE_NETINET_IN_VAR_H = 1,HAVE_NETINET_IP6_H = 1,HAVE_NETINET_IP_H = 1,HAVE_NETINET_IP_ICMP_H = 1,HAVE_NETINET_IP_VAR_H = 1,HAVE_NETINET_TCPIP_H = 1,HAVE_NETINET_TCP_FSM_H = 1,HAVE_NETINET_TCP_H = 1,HAVE_NETINET_TCP_TIMER_H = 1,HAVE_NETINET_TCP_VAR_H = 1,HAVE_NETINET_UDP_H = 1,HAVE_NETINET_UDP_VAR_H = 1,HAVE_NET_IF_ARP_H = 1,HAVE_NET_IF_DL_H = 1,HAVE_NET_IF_H = 1,HAVE_NET_IF_MIB_H = 1,HAVE_NET_IF_TYPES_H = 1,HAVE_NET_IF_VAR_H = 1,HAVE_NET_ROUTE_H = 1,HAVE_NFDS_T = 1,HAVE_NLIST_H = 1,HAVE_OPENDIR = 1,HAVE_OPENSSL_AES_H = 1,HAVE_OPENSSL_DES_H = 1,HAVE_OPENSSL_DH_H = 1,HAVE_OPENSSL_EVP_H = 1,HAVE_OPENSSL_HMAC_H = 1,HAVE_POLL = 1,HAVE_PTHREAD_H = 1,HAVE_PWD_H = 1,HAVE_RAND = 1,HAVE_RANDOM = 1,HAVE_READDIR = 1,HAVE_REGCOMP = 1,HAVE_REGEX_H = 1,HAVE_SEARCH_H = 1,HAVE_SELECT = 1,HAVE_SETENV = 1,HAVE_SETGID = 1,HAVE_SETGROUPS = 1,HAVE_SETITIMER = 1,HAVE_SETLOCALE = 1,HAVE_SETSID = 1,HAVE_SETUID = 1,HAVE_SGTTY_H = 1,HAVE_SIGACTION = 1,HAVE_SIGBLOCK = 1,HAVE_SIGHOLD = 1,HAVE_SIGHUP = 1,HAVE_SIGNAL = 1,HAVE_SIGPROCMASK = 1,HAVE_SIGSET = 1,HAVE_SNPRINTF = 1,HAVE_SOCKET = 1,HAVE_SOCKLEN_T = 1,HAVE_SSIZE_T = 1,HAVE_STATFS = 1,HAVE_STATVFS = 1,HAVE_STDINT_H = 1,HAVE_STDLIB_H = 1,HAVE_STRCASESTR = 1,HAVE_STRDUP = 1,HAVE_STRERROR = 1,HAVE_STRINGS_H = 1,HAVE_STRING_H = 1,HAVE_STRLCPY = 1,HAVE_STRNCASECMP = 1,HAVE_STRTOK_R = 1,HAVE_STRTOL = 1,HAVE_STRTOUL = 1,HAVE_STRTOULL = 1,HAVE_STRUCT_DIRENT_D_TYPE = 1,HAVE_STRUCT_IPSTAT_IPS_CANTFORWARD = 1,HAVE_STRUCT_IPSTAT_IPS_CANTFRAG = 1,HAVE_STRUCT_IPSTAT_IPS_DELIVERED = 1,HAVE_STRUCT_IPSTAT_IPS_FRAGDROPPED = 1,HAVE_STRUCT_IPSTAT_IPS_FRAGMENTED = 1,HAVE_STRUCT_IPSTAT_IPS_FRAGTIMEOUT = 1,HAVE_STRUCT_IPSTAT_IPS_LOCALOUT = 1,HAVE_STRUCT_IPSTAT_IPS_NOPROTO = 1,HAVE_STRUCT_IPSTAT_IPS_NOROUTE = 1,HAVE_STRUCT_IPSTAT_IPS_ODROPPED = 1,HAVE_STRUCT_IPSTAT_IPS_OFRAGMENTS = 1,HAVE_STRUCT_IPSTAT_IPS_REASSEMBLED = 1,HAVE_STRUCT_MBSTAT_M_CLFREE = 1,HAVE_STRUCT_MBSTAT_M_CLUSTERS = 1,HAVE_STRUCT_MBSTAT_M_MBUFS = 1,HAVE_STRUCT_NLIST_N_VALUE = 1,HAVE_STRUCT_SIGACTION_SA_SIGACTION = 1,HAVE_STRUCT_SOCKADDR_IN6_SIN6_SCOPE_ID = 1,HAVE_STRUCT_SOCKADDR_SA_LEN = 1,HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY = 1,HAVE_STRUCT_STATFS_F_FFREE = 1,HAVE_STRUCT_STATFS_F_FILES = 1,HAVE_STRUCT_STATFS_F_FLAGS = 1,HAVE_STRUCT_STATVFS_F_FILES = 1,HAVE_STRUCT_STATVFS_F_FRSIZE = 1,HAVE_STRUCT_TIMEZONE_TZ_DSTTIME = 1,HAVE_STRUCT_TM_TM_GMTOFF = 1,HAVE_STRUCT_UDPSTAT_UDPS_FULLSOCK = 1,HAVE_STRUCT_UDPSTAT_UDPS_NOPORT = 1,HAVE_STRUCT_UDPSTAT_UDPS_NOPORTBCAST = 1,HAVE_STRUCT_UDPSTAT_UDPS_OPACKETS = 1,HAVE_SYSCONF = 1,HAVE_SYSLOG_H = 1,HAVE_SYSTEM = 1,HAVE_SYS_CDEFS_H = 1,HAVE_SYS_CONF_H = 1,HAVE_SYS_DKSTAT_H = 1,HAVE_SYS_FILE_H = 1,HAVE_SYS_FILIO_H = 1,HAVE_SYS_IOCTL_H = 1,HAVE_SYS_MBUF_H = 1,HAVE_SYS_MOUNT_H = 1,HAVE_SYS_PARAM_H = 1,HAVE_SYS_POLL_H = 1,HAVE_SYS_PROTOSW_H = 1,HAVE_SYS_QUEUE_H = 1,HAVE_SYS_SELECT_H = 1,HAVE_SYS_SOCKETVAR_H = 1,HAVE_SYS_SOCKET_H = 1,HAVE_SYS_SOCKIO_H = 1,HAVE_SYS_STATVFS_H = 1,HAVE_SYS_STAT_H = 1,HAVE_SYS_SYSCTL_H = 1,HAVE_SYS_TIMEB_H = 1,HAVE_SYS_TIMES_H = 1,HAVE_SYS_TIME_H = 1,HAVE_SYS_TYPES_H = 1,HAVE_SYS_UIO_H = 1,HAVE_SYS_UN_H = 1,HAVE_SYS_USER_H = 1,HAVE_SYS_UTSNAME_H = 1,HAVE_SYS_VMMETER_H = 1,HAVE_SYS_VMPARAM_H = 1,HAVE_SYS_VM_H = 1,HAVE_SYS_VNODE_H = 1,HAVE_SYS_WAIT_H = 1,HAVE_TCGETATTR = 1,HAVE_TIMES = 1,HAVE_UINTMAX_T = 1,HAVE_UINTPTR_T = 1,HAVE_UNAME = 1,HAVE_UNISTD_H = 1,HAVE_UNSIGNED_LONG_LONG_INT = 1,HAVE_USLEEP = 1,HAVE_UTMPX_H = 1,HAVE_VSNPRINTF = 1,};
enum MACRO_HFIXEDSZ {HFIXEDSZ = 12,};
enum MACRO_HFSFSMNT {HFSFSMNT_NOXONFILES = 0x1,HFSFSMNT_WRAPPER = 0x2,HFSFSMNT_EXTENDED_ARGS = 0x4,};
enum MACRO_HMAC_MD5 {HMAC_MD5_H = 1,HMAC_MD5_SIZE = 16,};
enum MACRO_HOST_NOT {HOST_NOT_FOUND = 1,};
enum MACRO_HTTPPOST {HTTPPOST_FILENAME = 1,HTTPPOST_READFILE = 2,HTTPPOST_PTRNAME = 4,HTTPPOST_PTRCONTENTS = 8,HTTPPOST_BUFFER = 16,HTTPPOST_PTRBUFFER = 32,HTTPPOST_CALLBACK = 64,};
enum MACRO_ICMP6_RR {ICMP6_RR_FLAGS_TEST = 0x80,ICMP6_RR_FLAGS_REQRESULT = 0x40,ICMP6_RR_FLAGS_FORCEAPPLY = 0x20,ICMP6_RR_FLAGS_SPECSITE = 0x10,ICMP6_RR_FLAGS_PREVDONE = 0x8,};
enum MACRO_IFNAMSIZ {IFNAMSIZ = 16,};
enum MACRO_INDIRECT {INDIRECT_SYMBOL_LOCAL = 0x80000000,INDIRECT_SYMBOL_ABS = 0x40000000,};
enum MACRO_IPDEFTTL {IPDEFTTL = 64,};
enum MACRO_IPTTLDEC {IPTTLDEC = 1,};
enum MACRO_IPV6PORT {IPV6PORT_RESERVED = 1024,IPV6PORT_ANONMIN = 49152,IPV6PORT_ANONMAX = 65535,IPV6PORT_RESERVEDMIN = 600,IPV6PORT_RESERVEDMAX = 1023,};
enum MACRO_KEV_INET {KEV_INET_SUBCLASS = 1,KEV_INET_NEW_ADDR = 1,KEV_INET_CHANGED_ADDR = 2,KEV_INET_ADDR_DELETED = 3,KEV_INET_SIFDSTADDR = 4,KEV_INET_SIFBRDADDR = 5,KEV_INET_SIFNETMASK = 6,KEV_INET_ARPCOLLISION = 7,KEV_INET_PORTINUSE = 8,};
enum MACRO_KEV_IPFW {KEV_IPFW_SUBCLASS = 1,KEV_IPFW_ADD = 1,KEV_IPFW_DEL = 2,KEV_IPFW_FLUSH = 3,KEV_IPFW_ENABLE = 4,};
enum MACRO_KRB5_BAD {KRB5_BAD_ENCTYPE = -1765328196,KRB5_BAD_KEYSIZE = -1765328195,KRB5_BAD_MSIZE = -1765328194,KRB5_CC_TYPE_EXISTS = -1765328193,KRB5_KT_TYPE_EXISTS = -1765328192,KRB5_CC_IO = -1765328191,KRB5_FCC_PERM = -1765328190,KRB5_FCC_NOFILE = -1765328189,KRB5_FCC_INTERNAL = -1765328188,KRB5_CC_WRITE = -1765328187,KRB5_CC_NOMEM = -1765328186,KRB5_CC_FORMAT = -1765328185,KRB5_CC_NOT_KTYPE = -1765328184,KRB5_INVALID_FLAGS = -1765328183,KRB5_NO_2ND_TKT = -1765328182,KRB5_NOCREDS_SUPPLIED = -1765328181,KRB5_SENDAUTH_BADAUTHVERS = -1765328180,KRB5_SENDAUTH_BADAPPLVERS = -1765328179,KRB5_SENDAUTH_BADRESPONSE = -1765328178,KRB5_SENDAUTH_REJECTED = -1765328177,KRB5_PREAUTH_BAD_TYPE = -1765328176,KRB5_PREAUTH_NO_KEY = -1765328175,KRB5_PREAUTH_FAILED = -1765328174,KRB5_RCACHE_BADVNO = -1765328173,KRB5_CCACHE_BADVNO = -1765328172,KRB5_KEYTAB_BADVNO = -1765328171,KRB5_PROG_ATYPE_NOSUPP = -1765328170,KRB5_RC_REQUIRED = -1765328169,KRB5_ERR_BAD_HOSTNAME = -1765328168,KRB5_ERR_HOST_REALM_UNKNOWN = -1765328167,KRB5_SNAME_UNSUPP_NAMETYPE = -1765328166,};
enum MACRO_KRB5_ERR {KRB5_ERR_RCSID = -1765328256,KRB5_LIBOS_BADLOCKFLAG = -1765328255,KRB5_LIBOS_CANTREADPWD = -1765328254,KRB5_LIBOS_BADPWDMATCH = -1765328253,KRB5_LIBOS_PWDINTR = -1765328252,KRB5_PARSE_ILLCHAR = -1765328251,KRB5_PARSE_MALFORMED = -1765328250,KRB5_CONFIG_CANTOPEN = -1765328249,KRB5_CONFIG_BADFORMAT = -1765328248,KRB5_CONFIG_NOTENUFSPACE = -1765328247,KRB5_BADMSGTYPE = -1765328246,KRB5_CC_BADNAME = -1765328245,KRB5_CC_UNKNOWN_TYPE = -1765328244,KRB5_CC_NOTFOUND = -1765328243,KRB5_CC_END = -1765328242,KRB5_NO_TKT_SUPPLIED = -1765328241,};
enum MACRO_KRB5_KDB {KRB5_KDB_RCSID = -1780008448,KRB5_KDB_INUSE = -1780008447,KRB5_KDB_UK_SERROR = -1780008446,KRB5_KDB_UK_RERROR = -1780008445,KRB5_KDB_UNAUTH = -1780008444,KRB5_KDB_NOENTRY = -1780008443,KRB5_KDB_ILL_WILDCARD = -1780008442,KRB5_KDB_DB_INUSE = -1780008441,KRB5_KDB_DB_CHANGED = -1780008440,KRB5_KDB_TRUNCATED_RECORD = -1780008439,KRB5_KDB_RECURSIVELOCK = -1780008438,KRB5_KDB_NOTLOCKED = -1780008437,KRB5_KDB_BADLOCKMODE = -1780008436,KRB5_KDB_DBNOTINITED = -1780008435,KRB5_KDB_DBINITED = -1780008434,KRB5_KDB_ILLDIRECTION = -1780008433,KRB5_KDB_NOMASTERKEY = -1780008432,KRB5_KDB_BADMASTERKEY = -1780008431,KRB5_KDB_INVALIDKEYSIZE = -1780008430,KRB5_KDB_CANTREAD_STORED = -1780008429,KRB5_KDB_BADSTORED_MKEY = -1780008428,KRB5_KDB_CANTLOCK_DB = -1780008427,KRB5_KDB_DB_CORRUPT = -1780008426,KRB5_KDB_BAD_VERSION = -1780008425,KRB5_KDB_BAD_SALTTYPE = -1780008424,KRB5_KDB_BAD_ENCTYPE = -1780008423,KRB5_KDB_BAD_CREATEFLAGS = -1780008422,KRB5_KDB_NO_PERMITTED_KEY = -1780008421,KRB5_KDB_NO_MATCHING_KEY = -1780008420,KRB5_KDB_DBTYPE_NOTFOUND = -1780008419,KRB5_KDB_DBTYPE_NOSUP = -1780008418,KRB5_KDB_DBTYPE_INIT = -1780008417,KRB5_KDB_SERVER_INTERNAL_ERR = -1780008416,KRB5_KDB_ACCESS_ERROR = -1780008415,KRB5_KDB_INTERNAL_ERROR = -1780008414,KRB5_KDB_CONSTRAINT_VIOLATION = -1780008413,KRB5_LOG_CONV = -1780008412,KRB5_LOG_UNSTABLE = -1780008411,KRB5_LOG_CORRUPT = -1780008410,KRB5_LOG_ERROR = -1780008409,};
enum MACRO_LEDGER_N {LEDGER_N_ITEMS = 3,LEDGER_UNLIMITED = 0,};
enum MACRO_LIBEXSLT {LIBEXSLT_VERSION = 813,};
enum MACRO_LONG_BIT {LONG_BIT = 64,};
enum MACRO_MACH_KDB {MACH_KDB = 0,};
enum MACRO_MACH_MSG {MACH_MSG_TIMEOUT_NONE = 0,MACH_MSGH_BITS_ZERO = 0,MACH_MSGH_BITS_REMOTE_MASK = 255,MACH_MSGH_BITS_LOCAL_MASK = 65280,MACH_MSGH_BITS_COMPLEX = 2147483648,MACH_MSGH_BITS_USER = 2147549183,MACH_MSGH_BITS_CIRCULAR = 1073741824,MACH_MSGH_BITS_USED = 3221291007,MACH_MSGH_BITS_PORTS_MASK = 65535,MACH_MSG_SIZE_NULL = 0,MACH_MSG_TYPE_MOVE_RECEIVE = 16,MACH_MSG_TYPE_MOVE_SEND = 17,MACH_MSG_TYPE_MOVE_SEND_ONCE = 18,MACH_MSG_TYPE_COPY_SEND = 19,MACH_MSG_TYPE_MAKE_SEND = 20,MACH_MSG_TYPE_MAKE_SEND_ONCE = 21,MACH_MSG_TYPE_COPY_RECEIVE = 22,MACH_MSG_PHYSICAL_COPY = 0,MACH_MSG_VIRTUAL_COPY = 1,MACH_MSG_ALLOCATE = 2,MACH_MSG_OVERWRITE = 3,MACH_MSG_PORT_DESCRIPTOR = 0,MACH_MSG_OOL_DESCRIPTOR = 1,MACH_MSG_OOL_PORTS_DESCRIPTOR = 2,MACH_MSG_OOL_VOLATILE_DESCRIPTOR = 3,MACH_MSG_BODY_NULL = 0,MACH_MSG_DESCRIPTOR_NULL = 0,MACH_MSG_NULL = 0,MACH_MSG_TRAILER_FORMAT_0 = 0,MACH_MSG_SIZE_MAX = 4294967295,MACH_MSGH_KIND_NORMAL = 0,MACH_MSGH_KIND_NOTIFICATION = 1,MACH_MSG_TYPE_PORT_NONE = 0,MACH_MSG_TYPE_PORT_NAME = 15,MACH_MSG_TYPE_PORT_RECEIVE = 16,MACH_MSG_TYPE_PORT_SEND = 17,MACH_MSG_TYPE_PORT_SEND_ONCE = 18,MACH_MSG_TYPE_LAST = 22,MACH_MSG_TYPE_POLYMORPHIC = 4294967295,MACH_MSG_OPTION_NONE = 0,MACH_SEND_MSG = 1,MACH_RCV_MSG = 2,MACH_RCV_LARGE = 4,MACH_SEND_TIMEOUT = 16,MACH_SEND_INTERRUPT = 64,MACH_SEND_NOTIFY = 128,MACH_SEND_ALWAYS = 65536,MACH_SEND_TRAILER = 131072,MACH_RCV_TIMEOUT = 256,MACH_RCV_NOTIFY = 512,MACH_RCV_INTERRUPT = 1024,MACH_RCV_OVERWRITE = 4096,MACH_RCV_TRAILER_NULL = 0,MACH_RCV_TRAILER_SEQNO = 1,MACH_RCV_TRAILER_SENDER = 2,MACH_RCV_TRAILER_AUDIT = 3,MACH_RCV_TRAILER_CTX = 4,MACH_RCV_TRAILER_AV = 7,MACH_RCV_TRAILER_LABELS = 8,MACH_RCV_TRAILER_MASK = 4278190080,MACH_MSG_SUCCESS = 0,MACH_MSG_MASK = 15872,MACH_MSG_IPC_SPACE = 8192,MACH_MSG_VM_SPACE = 4096,MACH_MSG_IPC_KERNEL = 2048,MACH_MSG_VM_KERNEL = 1024,MACH_SEND_IN_PROGRESS = 268435457,MACH_SEND_INVALID_DATA = 268435458,MACH_SEND_INVALID_DEST = 268435459,MACH_SEND_TIMED_OUT = 268435460,MACH_SEND_INTERRUPTED = 268435463,MACH_SEND_MSG_TOO_SMALL = 268435464,MACH_SEND_INVALID_REPLY = 268435465,MACH_SEND_INVALID_RIGHT = 268435466,MACH_SEND_INVALID_NOTIFY = 268435467,MACH_SEND_INVALID_MEMORY = 268435468,MACH_SEND_NO_BUFFER = 268435469,MACH_SEND_TOO_LARGE = 268435470,MACH_SEND_INVALID_TYPE = 268435471,MACH_SEND_INVALID_HEADER = 268435472,MACH_SEND_INVALID_TRAILER = 268435473,MACH_SEND_INVALID_RT_OOL_SIZE = 268435477,MACH_RCV_IN_PROGRESS = 268451841,MACH_RCV_INVALID_NAME = 268451842,MACH_RCV_TIMED_OUT = 268451843,MACH_RCV_TOO_LARGE = 268451844,MACH_RCV_INTERRUPTED = 268451845,MACH_RCV_PORT_CHANGED = 268451846,MACH_RCV_INVALID_NOTIFY = 268451847,MACH_RCV_INVALID_DATA = 268451848,MACH_RCV_PORT_DIED = 268451849,MACH_RCV_IN_SET = 268451850,MACH_RCV_HEADER_ERROR = 268451851,MACH_RCV_BODY_ERROR = 268451852,MACH_RCV_INVALID_TYPE = 268451853,MACH_RCV_SCATTER_SMALL = 268451854,MACH_RCV_INVALID_TRAILER = 268451855,MACH_RCV_IN_PROGRESS_TIMED = 268451857,};
enum MACRO_MAP_FILE {MAP_FILE = 0x0,MAP_ANON = 0x1000,};
enum MACRO_MAXDEPTH {MAXDEPTH = 50,};
enum MACRO_MAXTOKEN {MAXTOKEN = 128,MAXQUOTESTR = 4096,};
enum MACRO_MAXUSERS {MAXUSERS = 100,};
enum MACRO_MAX_KCTL {MAX_KCTL_NAME = 96,};
enum MACRO_MAX_LIFE {MAX_LIFE = 60,};
enum MACRO_MAX_MBUF {MAX_MBUF_CNAME = 15,};
enum MACRO_MAX_NAME {MAX_NAME_SIZE = 512,MAX_ENTRY_SIZE = 4096,MAX_ALIAS = 14,MAX_DEBUG_LEVEL = 15,};
enum MACRO_MAX_PAGE {MAX_PAGE_NUMBER = 0xFFFFFFFF,MAX_PAGE_OFFSET = 0xFFFF,MAX_REC_NUMBER = 0xFFFFFFFF,};
enum MACRO_MAX_PATH {MAX_PATH_LEN = 1024,MAX_FILEID = 32,};
enum MACRO_MAX_SACK {MAX_SACK_BLKS = 6,};
enum MACRO_MAX_SNMP {MAX_SNMP_ERR = 18,};
enum MACRO_MAX_SOPS {MAX_SOPS = 5,};
enum MACRO_MAX_USES {MAX_USES = 32,MAX_CROSSLINKS = 16,MAX_LINE = 132,};
enum MACRO_MBSTRING {MBSTRING_FLAG = 0x1000,MBSTRING_UTF8 = 0x1000,MBSTRING_ASC = 0x1001,MBSTRING_BMP = 0x1002,MBSTRING_UNIV = 0x1004,};
enum MACRO_MCLOFSET {MCLOFSET = 2047,};
enum MACRO_MCLSHIFT {MCLSHIFT = 11,MCLBYTES = 2048,};
enum MACRO_MNT_WAIT {MNT_WAIT = 1,MNT_NOWAIT = 2,MNT_DWAIT = 4,};
enum MACRO_MODE_GET {MODE_GET = 160,MODE_GETNEXT = 161,MODE_GETBULK = 165,MODE_GET_STASH = 131,MODE_SET_BEGIN = -1,MODE_SET_RESERVE1 = 0,MODE_SET_RESERVE2 = 1,MODE_SET_ACTION = 2,MODE_SET_COMMIT = 3,MODE_SET_FREE = 4,MODE_SET_UNDO = 5,MODE_BSTEP_PRE_REQUEST = 128,MODE_BSTEP_POST_REQUEST = 130,MODE_BSTEP_OBJECT_LOOKUP = 129,MODE_BSTEP_CHECK_VALUE = 17,MODE_BSTEP_ROW_CREATE = 18,MODE_BSTEP_UNDO_SETUP = 19,MODE_BSTEP_SET_VALUE = 20,MODE_BSTEP_CHECK_CONSISTENCY = 21,MODE_BSTEP_UNDO_SET = 22,MODE_BSTEP_COMMIT = 23,MODE_BSTEP_UNDO_COMMIT = 24,MODE_BSTEP_IRREVERSIBLE_COMMIT = 25,MODE_BSTEP_UNDO_CLEANUP = 26,};
enum MACRO_NAME_NOT {NAME_NOT_YOURS = 1000,};
enum MACRO_NDEXTENT {NDEXTENT = 50,};
enum MACRO_NFSPROC4 {NFSPROC4_NULL = 0,NFSPROC4_COMPOUND = 1,NFSPROC4_CB_NULL = 0,NFSPROC4_CB_COMPOUND = 1,};
enum MACRO_NFS_TIME {NFS_TIME_DONT_CHANGE = 0,NFS_TIME_SET_TO_SERVER = 1,NFS_TIME_SET_TO_CLIENT = 2,};
enum MACRO_NI_QTYPE {NI_QTYPE_NOOP = 0,NI_QTYPE_SUPTYPES = 1,NI_QTYPE_FQDN = 2,NI_QTYPE_DNSNAME = 2,NI_QTYPE_NODEADDR = 3,NI_QTYPE_IPV4ADDR = 4,NI_SUPTYPE_FLAG_COMPRESS = 256,NI_FQDN_FLAG_VALIDTTL = 256,NI_NODEADDR_FLAG_TRUNCATE = 256,NI_NODEADDR_FLAG_ALL = 512,NI_NODEADDR_FLAG_COMPAT = 1024,NI_NODEADDR_FLAG_LINKLOCAL = 2048,NI_NODEADDR_FLAG_SITELOCAL = 4096,NI_NODEADDR_FLAG_GLOBAL = 8192,NI_NODEADDR_FLAG_ANYCAST = 16384,};
enum MACRO_NSEC_PER {NSEC_PER_USEC = 1000,};
enum MACRO_NTELOPTS {NTELOPTS = 40,};
enum MACRO_NULLPROC {NULLPROC = 0,UDPMSGSIZE = 8800,};
enum MACRO_NUMCOUNT {NUMCOUNT = 39,};
enum MACRO_NUMWRITE {NUMWRITE = 33,STRWRITE = 394,};
enum MACRO_NeXTBSD4 {NeXTBSD4_0 = 0,};
enum MACRO_ORDINARY {ORDINARY = 0,CONTROL = 1,BACKSPACE = 2,};
enum MACRO_OTTYDISC {OTTYDISC = 0,NETLDISC = 1,NTTYDISC = 2,};
enum MACRO_OVERRIDE {OVERRIDE_UNKNOWN_PERMISSIONS = 0,};
enum MACRO_O_NDELAY {O_NDELAY = 4,};
enum MACRO_O_RDONLY {O_RDONLY = 0x0,O_WRONLY = 0x1,O_RDWR = 0x2,O_ACCMODE = 0x3,};
enum MACRO_PACKETSZ {PACKETSZ = 512,MAXDNAME = 1025,};
enum MACRO_PMAPPORT {PMAPPORT = 111,};
enum MACRO_PMAPPROC {PMAPPROC_NULL = 0,PMAPPROC_SET = 1,PMAPPROC_UNSET = 2,PMAPPROC_GETPORT = 3,PMAPPROC_DUMP = 4,PMAPPROC_CALLIT = 5,};
enum MACRO_PMAPPROG {PMAPPROG = 100000,};
enum MACRO_PMAPVERS {PMAPVERS = 2,};
enum MACRO_PRESERVE {PRESERVE_FILE_TIMES = 1,};
enum MACRO_QFIXEDSZ {QFIXEDSZ = 4,RRFIXEDSZ = 10,};
enum MACRO_REQ_LEFT {REQ_LEFT_ITEM = 512,REQ_RIGHT_ITEM = 513,REQ_UP_ITEM = 514,REQ_DOWN_ITEM = 515,REQ_SCR_ULINE = 516,REQ_SCR_DLINE = 517,REQ_SCR_DPAGE = 518,REQ_SCR_UPAGE = 519,REQ_FIRST_ITEM = 520,REQ_LAST_ITEM = 521,REQ_NEXT_ITEM = 522,REQ_PREV_ITEM = 523,REQ_TOGGLE_ITEM = 524,REQ_CLEAR_PATTERN = 525,REQ_BACK_PATTERN = 526,REQ_NEXT_MATCH = 527,REQ_PREV_MATCH = 528,};
enum MACRO_RESERVE1 {RESERVE1 = 0,RESERVE2 = 1,ACTION = 2,};
enum MACRO_RESERVED {__DARWIN_IPPORT_RESERVED = 1024,IPPORT_RESERVED = 1024,};
enum MACRO_RPCBPROC {RPCBPROC_NULL = 0,RPCBPROC_SET = 1,RPCBPROC_UNSET = 2,RPCBPROC_GETADDR = 3,RPCBPROC_DUMP = 4,RPCBPROC_CALLIT = 5,RPCBPROC_BCAST = 5,RPCBPROC_GETTIME = 6,RPCBPROC_UADDR2TADDR = 7,RPCBPROC_TADDR2UADDR = 8,RPCBPROC_GETVERSADDR = 9,RPCBPROC_INDIRECT = 10,RPCBPROC_GETADDRLIST = 11,RPCBPROC_GETSTAT = 12,};
enum MACRO_RPCBPROG {RPCBPROG = 100000,};
enum MACRO_RPC_CALL {RPC_CALL = 0,RPC_REPLY = 1,RPC_MSGACCEPTED = 0,RPC_MSGDENIED = 1,RPC_PROGUNAVAIL_NFS = 1,RPC_PROGMISMATCH = 2,RPC_PROCUNAVAIL_NFS = 3,RPC_GARBAGE = 4,RPC_SYSTEM_ERR = 5,RPC_MISMATCH_NFS = 0,RPC_AUTHERR = 1,RPC_SIZ = 24,RPC_REPLYSIZ = 28,};
enum MACRO_RPC_VER2 {RPC_VER2 = 2,};
enum MACRO_SASLPLUG {SASLPLUG_H = 1,};
enum MACRO_SASLUTIL {SASLUTIL_H = 1,};
enum MACRO_SEARCHFS {SEARCHFS_MAX_SEARCHPARMS = 4096,};
enum MACRO_SECS_PER {SECS_PER_HOUR = 3600,SECS_PER_DAY = 86400,};
enum MACRO_SHUTDOWN {SHUTDOWN_TIME = 11,};
enum MACRO_SNMP_MAX {SNMP_MAX_PDU_SIZE = 64000,};
enum MACRO_SNMP_PDU {SNMP_PDU_GET = 160,SNMP_PDU_GETNEXT = 161,SNMP_PDU_RESPONSE = 162,SNMP_PDU_SET = 163,SNMP_PDU_GETBULK = 165,SNMP_PDU_INFORM = 166,SNMP_PDU_V2TRAP = 167,SNMP_PDU_REPORT = 168,SNMP_TRAP_AUTHENTICATIONFAILURE = 4,};
enum MACRO_SPRAYMAX {SPRAYMAX = 8845,};
enum MACRO_SSL_CTRL {SSL_CTRL_GET_RI_SUPPORT = 76,SSL_CTRL_CLEAR_OPTIONS = 77,SSL_CTRL_CLEAR_MODE = 78,SSL_F_CLIENT_CERTIFICATE = 100,SSL_F_CLIENT_FINISHED = 167,SSL_F_CLIENT_HELLO = 101,SSL_F_CLIENT_MASTER_KEY = 102,SSL_F_D2I_SSL_SESSION = 103,SSL_F_DO_DTLS1_WRITE = 245,SSL_F_DO_SSL3_WRITE = 104,SSL_F_DTLS1_ACCEPT = 246,SSL_F_DTLS1_ADD_CERT_TO_BUF = 280,SSL_F_DTLS1_BUFFER_RECORD = 247,SSL_F_DTLS1_CLIENT_HELLO = 248,SSL_F_DTLS1_CONNECT = 249,SSL_F_DTLS1_ENC = 250,SSL_F_DTLS1_GET_HELLO_VERIFY = 251,SSL_F_DTLS1_GET_MESSAGE = 252,SSL_F_DTLS1_GET_MESSAGE_FRAGMENT = 253,SSL_F_DTLS1_GET_RECORD = 254,SSL_F_DTLS1_HANDLE_TIMEOUT = 282,SSL_F_DTLS1_OUTPUT_CERT_CHAIN = 255,SSL_F_DTLS1_PREPROCESS_FRAGMENT = 277,SSL_F_DTLS1_PROCESS_OUT_OF_SEQ_MESSAGE = 256,SSL_F_DTLS1_PROCESS_RECORD = 257,SSL_F_DTLS1_READ_BYTES = 258,SSL_F_DTLS1_READ_FAILED = 259,SSL_F_DTLS1_SEND_CERTIFICATE_REQUEST = 260,SSL_F_DTLS1_SEND_CLIENT_CERTIFICATE = 261,SSL_F_DTLS1_SEND_CLIENT_KEY_EXCHANGE = 262,SSL_F_DTLS1_SEND_CLIENT_VERIFY = 263,SSL_F_DTLS1_SEND_HELLO_VERIFY_REQUEST = 264,SSL_F_DTLS1_SEND_SERVER_CERTIFICATE = 265,SSL_F_DTLS1_SEND_SERVER_HELLO = 266,SSL_F_DTLS1_SEND_SERVER_KEY_EXCHANGE = 267,SSL_F_DTLS1_WRITE_APP_DATA_BYTES = 268,SSL_F_GET_CLIENT_FINISHED = 105,SSL_F_GET_CLIENT_HELLO = 106,SSL_F_GET_CLIENT_MASTER_KEY = 107,SSL_F_GET_SERVER_FINISHED = 108,SSL_F_GET_SERVER_HELLO = 109,SSL_F_GET_SERVER_VERIFY = 110,SSL_F_I2D_SSL_SESSION = 111,SSL_F_READ_N = 112,SSL_F_REQUEST_CERTIFICATE = 113,SSL_F_SERVER_FINISH = 239,SSL_F_SERVER_HELLO = 114,SSL_F_SERVER_VERIFY = 240,SSL_F_SSL23_ACCEPT = 115,SSL_F_SSL23_CLIENT_HELLO = 116,SSL_F_SSL23_CONNECT = 117,SSL_F_SSL23_GET_CLIENT_HELLO = 118,SSL_F_SSL23_GET_SERVER_HELLO = 119,SSL_F_SSL23_PEEK = 237,SSL_F_SSL23_READ = 120,SSL_F_SSL23_WRITE = 121,SSL_F_SSL2_ACCEPT = 122,SSL_F_SSL2_CONNECT = 123,SSL_F_SSL2_ENC_INIT = 124,SSL_F_SSL2_GENERATE_KEY_MATERIAL = 241,SSL_F_SSL2_PEEK = 234,SSL_F_SSL2_READ = 125,SSL_F_SSL2_READ_INTERNAL = 236,SSL_F_SSL2_SET_CERTIFICATE = 126,SSL_F_SSL2_WRITE = 127,SSL_F_SSL3_ACCEPT = 128,SSL_F_SSL3_ADD_CERT_TO_BUF = 281,SSL_F_SSL3_CALLBACK_CTRL = 233,SSL_F_SSL3_CHANGE_CIPHER_STATE = 129,SSL_F_SSL3_CHECK_CERT_AND_ALGORITHM = 130,SSL_F_SSL3_CLIENT_HELLO = 131,SSL_F_SSL3_CONNECT = 132,SSL_F_SSL3_CTRL = 213,SSL_F_SSL3_CTX_CTRL = 133,SSL_F_SSL3_DO_CHANGE_CIPHER_SPEC = 279,SSL_F_SSL3_ENC = 134,SSL_F_SSL3_GENERATE_KEY_BLOCK = 238,SSL_F_SSL3_GET_CERTIFICATE_REQUEST = 135,SSL_F_SSL3_GET_CERT_STATUS = 288,SSL_F_SSL3_GET_CERT_VERIFY = 136,SSL_F_SSL3_GET_CLIENT_CERTIFICATE = 137,SSL_F_SSL3_GET_CLIENT_HELLO = 138,SSL_F_SSL3_GET_CLIENT_KEY_EXCHANGE = 139,SSL_F_SSL3_GET_FINISHED = 140,SSL_F_SSL3_GET_KEY_EXCHANGE = 141,SSL_F_SSL3_GET_MESSAGE = 142,SSL_F_SSL3_GET_NEW_SESSION_TICKET = 283,SSL_F_SSL3_GET_RECORD = 143,SSL_F_SSL3_GET_SERVER_CERTIFICATE = 144,SSL_F_SSL3_GET_SERVER_DONE = 145,SSL_F_SSL3_GET_SERVER_HELLO = 146,SSL_F_SSL3_NEW_SESSION_TICKET = 284,SSL_F_SSL3_OUTPUT_CERT_CHAIN = 147,SSL_F_SSL3_PEEK = 235,SSL_F_SSL3_READ_BYTES = 148,SSL_F_SSL3_READ_N = 149,SSL_F_SSL3_SEND_CERTIFICATE_REQUEST = 150,SSL_F_SSL3_SEND_CLIENT_CERTIFICATE = 151,SSL_F_SSL3_SEND_CLIENT_KEY_EXCHANGE = 152,SSL_F_SSL3_SEND_CLIENT_VERIFY = 153,SSL_F_SSL3_SEND_SERVER_CERTIFICATE = 154,SSL_F_SSL3_SEND_SERVER_HELLO = 242,SSL_F_SSL3_SEND_SERVER_KEY_EXCHANGE = 155,SSL_F_SSL3_SETUP_BUFFERS = 156,SSL_F_SSL3_SETUP_KEY_BLOCK = 157,SSL_F_SSL3_WRITE_BYTES = 158,SSL_F_SSL3_WRITE_PENDING = 159,SSL_F_SSL_ADD_CLIENTHELLO_RENEGOTIATE_EXT = 285,SSL_F_SSL_ADD_CLIENTHELLO_TLSEXT = 272,SSL_F_SSL_ADD_DIR_CERT_SUBJECTS_TO_STACK = 215,SSL_F_SSL_ADD_FILE_CERT_SUBJECTS_TO_STACK = 216,SSL_F_SSL_ADD_SERVERHELLO_RENEGOTIATE_EXT = 286,SSL_F_SSL_ADD_SERVERHELLO_TLSEXT = 273,SSL_F_SSL_BAD_METHOD = 160,SSL_F_SSL_BYTES_TO_CIPHER_LIST = 161,SSL_F_SSL_CERT_DUP = 221,SSL_F_SSL_CERT_INST = 222,SSL_F_SSL_CERT_INSTANTIATE = 214,SSL_F_SSL_CERT_NEW = 162,SSL_F_SSL_CHECK_PRIVATE_KEY = 163,SSL_F_SSL_CHECK_SERVERHELLO_TLSEXT = 274,SSL_F_SSL_CIPHER_PROCESS_RULESTR = 230,SSL_F_SSL_CIPHER_STRENGTH_SORT = 231,SSL_F_SSL_CLEAR = 164,SSL_F_SSL_COMP_ADD_COMPRESSION_METHOD = 165,SSL_F_SSL_CREATE_CIPHER_LIST = 166,SSL_F_SSL_CTRL = 232,SSL_F_SSL_CTX_CHECK_PRIVATE_KEY = 168,SSL_F_SSL_CTX_NEW = 169,SSL_F_SSL_CTX_SET_CIPHER_LIST = 269,SSL_F_SSL_CTX_SET_CLIENT_CERT_ENGINE = 278,SSL_F_SSL_CTX_SET_PURPOSE = 226,SSL_F_SSL_CTX_SET_SESSION_ID_CONTEXT = 219,SSL_F_SSL_CTX_SET_SSL_VERSION = 170,SSL_F_SSL_CTX_SET_TRUST = 229,SSL_F_SSL_CTX_USE_CERTIFICATE = 171,SSL_F_SSL_CTX_USE_CERTIFICATE_ASN1 = 172,SSL_F_SSL_CTX_USE_CERTIFICATE_CHAIN_FILE = 220,SSL_F_SSL_CTX_USE_CERTIFICATE_FILE = 173,SSL_F_SSL_CTX_USE_PRIVATEKEY = 174,SSL_F_SSL_CTX_USE_PRIVATEKEY_ASN1 = 175,SSL_F_SSL_CTX_USE_PRIVATEKEY_FILE = 176,SSL_F_SSL_CTX_USE_RSAPRIVATEKEY = 177,SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_ASN1 = 178,SSL_F_SSL_CTX_USE_RSAPRIVATEKEY_FILE = 179,SSL_F_SSL_DO_HANDSHAKE = 180,SSL_F_SSL_GET_NEW_SESSION = 181,SSL_F_SSL_GET_PREV_SESSION = 217,SSL_F_SSL_GET_SERVER_SEND_CERT = 182,SSL_F_SSL_GET_SIGN_PKEY = 183,SSL_F_SSL_INIT_WBIO_BUFFER = 184,SSL_F_SSL_LOAD_CLIENT_CA_FILE = 185,SSL_F_SSL_NEW = 186,SSL_F_SSL_PARSE_CLIENTHELLO_RENEGOTIATE_EXT = 287,SSL_F_SSL_PARSE_CLIENTHELLO_TLSEXT = 290,SSL_F_SSL_PARSE_SERVERHELLO_RENEGOTIATE_EXT = 289,SSL_F_SSL_PARSE_SERVERHELLO_TLSEXT = 291,SSL_F_SSL_PEEK = 270,SSL_F_SSL_PREPARE_CLIENTHELLO_TLSEXT = 275,SSL_F_SSL_PREPARE_SERVERHELLO_TLSEXT = 276,SSL_F_SSL_READ = 223,SSL_F_SSL_RSA_PRIVATE_DECRYPT = 187,SSL_F_SSL_RSA_PUBLIC_ENCRYPT = 188,SSL_F_SSL_SESSION_NEW = 189,SSL_F_SSL_SESSION_PRINT_FP = 190,SSL_F_SSL_SESS_CERT_NEW = 225,SSL_F_SSL_SET_CERT = 191,SSL_F_SSL_SET_CIPHER_LIST = 271,SSL_F_SSL_SET_FD = 192,SSL_F_SSL_SET_PKEY = 193,SSL_F_SSL_SET_PURPOSE = 227,SSL_F_SSL_SET_RFD = 194,SSL_F_SSL_SET_SESSION = 195,SSL_F_SSL_SET_SESSION_ID_CONTEXT = 218,SSL_F_SSL_SET_TRUST = 228,SSL_F_SSL_SET_WFD = 196,SSL_F_SSL_SHUTDOWN = 224,SSL_F_SSL_UNDEFINED_CONST_FUNCTION = 243,SSL_F_SSL_UNDEFINED_FUNCTION = 197,SSL_F_SSL_UNDEFINED_VOID_FUNCTION = 244,SSL_F_SSL_USE_CERTIFICATE = 198,SSL_F_SSL_USE_CERTIFICATE_ASN1 = 199,SSL_F_SSL_USE_CERTIFICATE_FILE = 200,SSL_F_SSL_USE_PRIVATEKEY = 201,SSL_F_SSL_USE_PRIVATEKEY_ASN1 = 202,SSL_F_SSL_USE_PRIVATEKEY_FILE = 203,SSL_F_SSL_USE_RSAPRIVATEKEY = 204,SSL_F_SSL_USE_RSAPRIVATEKEY_ASN1 = 205,SSL_F_SSL_USE_RSAPRIVATEKEY_FILE = 206,SSL_F_SSL_VERIFY_CERT_CHAIN = 207,SSL_F_SSL_WRITE = 208,SSL_F_TLS1_CHANGE_CIPHER_STATE = 209,SSL_F_TLS1_ENC = 210,SSL_F_TLS1_SETUP_KEY_BLOCK = 211,SSL_F_WRITE_PENDING = 212,SSL_R_APP_DATA_IN_HANDSHAKE = 100,SSL_R_ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT = 272,SSL_R_BAD_ALERT_RECORD = 101,SSL_R_BAD_AUTHENTICATION_TYPE = 102,SSL_R_BAD_CHANGE_CIPHER_SPEC = 103,SSL_R_BAD_CHECKSUM = 104,SSL_R_BAD_DATA_RETURNED_BY_CALLBACK = 106,SSL_R_BAD_DECOMPRESSION = 107,SSL_R_BAD_DH_G_LENGTH = 108,SSL_R_BAD_DH_PUB_KEY_LENGTH = 109,SSL_R_BAD_DH_P_LENGTH = 110,SSL_R_BAD_DIGEST_LENGTH = 111,SSL_R_BAD_DSA_SIGNATURE = 112,SSL_R_BAD_ECC_CERT = 304,SSL_R_BAD_ECDSA_SIGNATURE = 305,SSL_R_BAD_ECPOINT = 306,SSL_R_BAD_HELLO_REQUEST = 105,SSL_R_BAD_LENGTH = 271,SSL_R_BAD_MAC_DECODE = 113,SSL_R_BAD_MESSAGE_TYPE = 114,SSL_R_BAD_PACKET_LENGTH = 115,SSL_R_BAD_PROTOCOL_VERSION_NUMBER = 116,SSL_R_BAD_RESPONSE_ARGUMENT = 117,SSL_R_BAD_RSA_DECRYPT = 118,SSL_R_BAD_RSA_ENCRYPT = 119,SSL_R_BAD_RSA_E_LENGTH = 120,SSL_R_BAD_RSA_MODULUS_LENGTH = 121,SSL_R_BAD_RSA_SIGNATURE = 122,SSL_R_BAD_SIGNATURE = 123,SSL_R_BAD_SSL_FILETYPE = 124,SSL_R_BAD_SSL_SESSION_ID_LENGTH = 125,SSL_R_BAD_STATE = 126,SSL_R_BAD_WRITE_RETRY = 127,SSL_R_BIO_NOT_SET = 128,SSL_R_BLOCK_CIPHER_PAD_IS_WRONG = 129,SSL_R_BN_LIB = 130,SSL_R_CA_DN_LENGTH_MISMATCH = 131,SSL_R_CA_DN_TOO_LONG = 132,SSL_R_CCS_RECEIVED_EARLY = 133,SSL_R_CERTIFICATE_VERIFY_FAILED = 134,SSL_R_CERT_LENGTH_MISMATCH = 135,SSL_R_CHALLENGE_IS_DIFFERENT = 136,SSL_R_CIPHER_CODE_WRONG_LENGTH = 137,SSL_R_CIPHER_OR_HASH_UNAVAILABLE = 138,SSL_R_CIPHER_TABLE_SRC_ERROR = 139,SSL_R_CLIENTHELLO_TLSEXT = 157,SSL_R_COMPRESSED_LENGTH_TOO_LONG = 140,SSL_R_COMPRESSION_FAILURE = 141,SSL_R_COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE = 307,SSL_R_COMPRESSION_LIBRARY_ERROR = 142,SSL_R_CONNECTION_ID_IS_DIFFERENT = 143,SSL_R_CONNECTION_TYPE_NOT_SET = 144,SSL_R_COOKIE_MISMATCH = 308,SSL_R_DATA_BETWEEN_CCS_AND_FINISHED = 145,SSL_R_DATA_LENGTH_TOO_LONG = 146,SSL_R_DECRYPTION_FAILED = 147,SSL_R_DECRYPTION_FAILED_OR_BAD_RECORD_MAC = 281,SSL_R_DH_PUBLIC_VALUE_LENGTH_IS_WRONG = 148,SSL_R_DIGEST_CHECK_FAILED = 149,SSL_R_DTLS_MESSAGE_TOO_BIG = 318,SSL_R_DUPLICATE_COMPRESSION_ID = 309,SSL_R_ECGROUP_TOO_LARGE_FOR_CIPHER = 310,SSL_R_ENCRYPTED_LENGTH_TOO_LONG = 150,SSL_R_ERROR_GENERATING_TMP_RSA_KEY = 282,SSL_R_ERROR_IN_RECEIVED_CIPHER_LIST = 151,SSL_R_EXCESSIVE_MESSAGE_SIZE = 152,SSL_R_EXTRA_DATA_IN_MESSAGE = 153,SSL_R_GOT_A_FIN_BEFORE_A_CCS = 154,SSL_R_HTTPS_PROXY_REQUEST = 155,SSL_R_HTTP_REQUEST = 156,SSL_R_ILLEGAL_PADDING = 283,SSL_R_INVALID_CHALLENGE_LENGTH = 158,SSL_R_INVALID_COMMAND = 280,SSL_R_INVALID_PURPOSE = 278,SSL_R_INVALID_STATUS_RESPONSE = 316,SSL_R_INVALID_TICKET_KEYS_LENGTH = 275,SSL_R_INVALID_TRUST = 279,SSL_R_KEY_ARG_TOO_LONG = 284,SSL_R_KRB5 = 285,SSL_R_KRB5_C_CC_PRINC = 286,SSL_R_KRB5_C_GET_CRED = 287,SSL_R_KRB5_C_INIT = 288,SSL_R_KRB5_C_MK_REQ = 289,SSL_R_KRB5_S_BAD_TICKET = 290,SSL_R_KRB5_S_INIT = 291,SSL_R_KRB5_S_RD_REQ = 292,SSL_R_KRB5_S_TKT_EXPIRED = 293,SSL_R_KRB5_S_TKT_NYV = 294,SSL_R_KRB5_S_TKT_SKEW = 295,SSL_R_LENGTH_MISMATCH = 159,SSL_R_LENGTH_TOO_SHORT = 160,SSL_R_LIBRARY_BUG = 274,SSL_R_LIBRARY_HAS_NO_CIPHERS = 161,SSL_R_MESSAGE_TOO_LONG = 296,SSL_R_MISSING_DH_DSA_CERT = 162,SSL_R_MISSING_DH_KEY = 163,SSL_R_MISSING_DH_RSA_CERT = 164,SSL_R_MISSING_DSA_SIGNING_CERT = 165,SSL_R_MISSING_EXPORT_TMP_DH_KEY = 166,SSL_R_MISSING_EXPORT_TMP_RSA_KEY = 167,SSL_R_MISSING_RSA_CERTIFICATE = 168,SSL_R_MISSING_RSA_ENCRYPTING_CERT = 169,SSL_R_MISSING_RSA_SIGNING_CERT = 170,SSL_R_MISSING_TMP_DH_KEY = 171,SSL_R_MISSING_TMP_ECDH_KEY = 311,SSL_R_MISSING_TMP_RSA_KEY = 172,SSL_R_MISSING_TMP_RSA_PKEY = 173,SSL_R_MISSING_VERIFY_MESSAGE = 174,SSL_R_NON_SSLV2_INITIAL_PACKET = 175,SSL_R_NO_CERTIFICATES_RETURNED = 176,SSL_R_NO_CERTIFICATE_ASSIGNED = 177,SSL_R_NO_CERTIFICATE_RETURNED = 178,SSL_R_NO_CERTIFICATE_SET = 179,SSL_R_NO_CERTIFICATE_SPECIFIED = 180,SSL_R_NO_CIPHERS_AVAILABLE = 181,SSL_R_NO_CIPHERS_PASSED = 182,SSL_R_NO_CIPHERS_SPECIFIED = 183,SSL_R_NO_CIPHER_LIST = 184,SSL_R_NO_CIPHER_MATCH = 185,SSL_R_NO_CLIENT_CERT_METHOD = 317,SSL_R_NO_CLIENT_CERT_RECEIVED = 186,SSL_R_NO_COMPRESSION_SPECIFIED = 187,SSL_R_NO_METHOD_SPECIFIED = 188,SSL_R_NO_PRIVATEKEY = 189,SSL_R_NO_PRIVATE_KEY_ASSIGNED = 190,SSL_R_NO_PROTOCOLS_AVAILABLE = 191,SSL_R_NO_PUBLICKEY = 192,SSL_R_NO_RENEGOTIATION = 319,SSL_R_NO_SHARED_CIPHER = 193,SSL_R_NO_VERIFY_CALLBACK = 194,SSL_R_NULL_SSL_CTX = 195,SSL_R_NULL_SSL_METHOD_PASSED = 196,SSL_R_OLD_SESSION_CIPHER_NOT_RETURNED = 197,SSL_R_ONLY_TLS_ALLOWED_IN_FIPS_MODE = 297,SSL_R_PACKET_LENGTH_TOO_LONG = 198,SSL_R_PARSE_TLSEXT = 223,SSL_R_PATH_TOO_LONG = 270,SSL_R_PEER_DID_NOT_RETURN_A_CERTIFICATE = 199,SSL_R_PEER_ERROR = 200,SSL_R_PEER_ERROR_CERTIFICATE = 201,SSL_R_PEER_ERROR_NO_CERTIFICATE = 202,SSL_R_PEER_ERROR_NO_CIPHER = 203,SSL_R_PEER_ERROR_UNSUPPORTED_CERTIFICATE_TYPE = 204,SSL_R_PRE_MAC_LENGTH_TOO_LONG = 205,SSL_R_PROBLEMS_MAPPING_CIPHER_FUNCTIONS = 206,SSL_R_PROTOCOL_IS_SHUTDOWN = 207,SSL_R_PUBLIC_KEY_ENCRYPT_ERROR = 208,SSL_R_PUBLIC_KEY_IS_NOT_RSA = 209,SSL_R_PUBLIC_KEY_NOT_RSA = 210,SSL_R_READ_BIO_NOT_SET = 211,SSL_R_READ_TIMEOUT_EXPIRED = 312,SSL_R_READ_WRONG_PACKET_TYPE = 212,SSL_R_RECORD_LENGTH_MISMATCH = 213,SSL_R_RECORD_TOO_LARGE = 214,SSL_R_RECORD_TOO_SMALL = 298,SSL_R_RENEGOTIATE_EXT_TOO_LONG = 320,SSL_R_RENEGOTIATION_ENCODING_ERR = 321,SSL_R_RENEGOTIATION_MISMATCH = 322,SSL_R_REQUIRED_CIPHER_MISSING = 215,SSL_R_REUSE_CERT_LENGTH_NOT_ZERO = 216,SSL_R_REUSE_CERT_TYPE_NOT_ZERO = 217,SSL_R_REUSE_CIPHER_LIST_NOT_ZERO = 218,SSL_R_SCSV_RECEIVED_WHEN_RENEGOTIATING = 324,SSL_R_SERVERHELLO_TLSEXT = 224,SSL_R_SESSION_ID_CONTEXT_UNINITIALIZED = 277,SSL_R_SHORT_READ = 219,SSL_R_SIGNATURE_FOR_NON_SIGNING_CERTIFICATE = 220,SSL_R_SSL23_DOING_SESSION_ID_REUSE = 221,SSL_R_SSL2_CONNECTION_ID_TOO_LONG = 299,SSL_R_SSL3_EXT_INVALID_SERVERNAME = 225,SSL_R_SSL3_EXT_INVALID_SERVERNAME_TYPE = 226,SSL_R_SSL3_SESSION_ID_TOO_LONG = 300,SSL_R_SSL3_SESSION_ID_TOO_SHORT = 222,SSL_R_SSLV3_ALERT_BAD_CERTIFICATE = 1042,SSL_R_SSLV3_ALERT_BAD_RECORD_MAC = 1020,SSL_R_SSLV3_ALERT_CERTIFICATE_EXPIRED = 1045,SSL_R_SSLV3_ALERT_CERTIFICATE_REVOKED = 1044,SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN = 1046,SSL_R_SSLV3_ALERT_DECOMPRESSION_FAILURE = 1030,SSL_R_SSLV3_ALERT_HANDSHAKE_FAILURE = 1040,SSL_R_SSLV3_ALERT_ILLEGAL_PARAMETER = 1047,SSL_R_SSLV3_ALERT_NO_CERTIFICATE = 1041,SSL_R_SSLV3_ALERT_UNEXPECTED_MESSAGE = 1010,SSL_R_SSLV3_ALERT_UNSUPPORTED_CERTIFICATE = 1043,SSL_R_SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION = 228,SSL_R_SSL_HANDSHAKE_FAILURE = 229,SSL_R_SSL_LIBRARY_HAS_NO_CIPHERS = 230,SSL_R_SSL_SESSION_ID_CALLBACK_FAILED = 301,SSL_R_SSL_SESSION_ID_CONFLICT = 302,SSL_R_SSL_SESSION_ID_CONTEXT_TOO_LONG = 273,SSL_R_SSL_SESSION_ID_HAS_BAD_LENGTH = 303,SSL_R_SSL_SESSION_ID_IS_DIFFERENT = 231,SSL_R_TLSV1_ALERT_ACCESS_DENIED = 1049,SSL_R_TLSV1_ALERT_DECODE_ERROR = 1050,SSL_R_TLSV1_ALERT_DECRYPTION_FAILED = 1021,SSL_R_TLSV1_ALERT_DECRYPT_ERROR = 1051,SSL_R_TLSV1_ALERT_EXPORT_RESTRICTION = 1060,SSL_R_TLSV1_ALERT_INSUFFICIENT_SECURITY = 1071,SSL_R_TLSV1_ALERT_INTERNAL_ERROR = 1080,SSL_R_TLSV1_ALERT_NO_RENEGOTIATION = 1100,SSL_R_TLSV1_ALERT_PROTOCOL_VERSION = 1070,SSL_R_TLSV1_ALERT_RECORD_OVERFLOW = 1022,SSL_R_TLSV1_ALERT_UNKNOWN_CA = 1048,SSL_R_TLSV1_ALERT_USER_CANCELLED = 1090,SSL_R_TLS_CLIENT_CERT_REQ_WITH_ANON_CIPHER = 232,SSL_R_TLS_INVALID_ECPOINTFORMAT_LIST = 227,SSL_R_TLS_PEER_DID_NOT_RESPOND_WITH_CERTIFICATE_LIST = 233,SSL_R_TLS_RSA_ENCRYPTED_VALUE_LENGTH_IS_WRONG = 234,SSL_R_TRIED_TO_USE_UNSUPPORTED_CIPHER = 235,SSL_R_UNABLE_TO_DECODE_DH_CERTS = 236,SSL_R_UNABLE_TO_DECODE_ECDH_CERTS = 313,SSL_R_UNABLE_TO_EXTRACT_PUBLIC_KEY = 237,SSL_R_UNABLE_TO_FIND_DH_PARAMETERS = 238,SSL_R_UNABLE_TO_FIND_ECDH_PARAMETERS = 314,SSL_R_UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS = 239,SSL_R_UNABLE_TO_FIND_SSL_METHOD = 240,SSL_R_UNABLE_TO_LOAD_SSL2_MD5_ROUTINES = 241,SSL_R_UNABLE_TO_LOAD_SSL3_MD5_ROUTINES = 242,SSL_R_UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES = 243,SSL_R_UNEXPECTED_MESSAGE = 244,SSL_R_UNEXPECTED_RECORD = 245,SSL_R_UNINITIALIZED = 276,SSL_R_UNKNOWN_ALERT_TYPE = 246,SSL_R_UNKNOWN_CERTIFICATE_TYPE = 247,SSL_R_UNKNOWN_CIPHER_RETURNED = 248,SSL_R_UNKNOWN_CIPHER_TYPE = 249,SSL_R_UNKNOWN_KEY_EXCHANGE_TYPE = 250,SSL_R_UNKNOWN_PKEY_TYPE = 251,SSL_R_UNKNOWN_PROTOCOL = 252,SSL_R_UNKNOWN_REMOTE_ERROR_TYPE = 253,SSL_R_UNKNOWN_SSL_VERSION = 254,SSL_R_UNKNOWN_STATE = 255,SSL_R_UNSAFE_LEGACY_RENEGOTIATION_DISABLED = 323,SSL_R_UNSUPPORTED_CIPHER = 256,SSL_R_UNSUPPORTED_COMPRESSION_ALGORITHM = 257,SSL_R_UNSUPPORTED_ELLIPTIC_CURVE = 315,SSL_R_UNSUPPORTED_PROTOCOL = 258,SSL_R_UNSUPPORTED_SSL_VERSION = 259,SSL_R_UNSUPPORTED_STATUS_TYPE = 329,SSL_R_WRITE_BIO_NOT_SET = 260,SSL_R_WRONG_CIPHER_RETURNED = 261,SSL_R_WRONG_MESSAGE_TYPE = 262,SSL_R_WRONG_NUMBER_OF_KEY_BITS = 263,SSL_R_WRONG_SIGNATURE_LENGTH = 264,SSL_R_WRONG_SIGNATURE_SIZE = 265,SSL_R_WRONG_SSL_VERSION = 266,SSL_R_WRONG_VERSION_NUMBER = 267,SSL_R_X509_LIB = 268,SSL_R_X509_VERIFICATION_SETUP_PROBLEMS = 269,};
enum MACRO_STRCOUNT {STRCOUNT = 414,};
enum MACRO_SYSPROTO {SYSPROTO_EVENT = 1,SYSPROTO_CONTROL = 2,};
enum MACRO_TCIFLUSH {TCIFLUSH = 1,TCOFLUSH = 2,};
enum MACRO_TIOCCBRK {TIOCCBRK = 536900730,};
enum MACRO_TIOCCDTR {TIOCCDTR = 536900728,};
enum MACRO_TIOCEXCL {TIOCEXCL = 536900621,};
enum MACRO_TIOCHPCL {TIOCHPCL = 536900610,};
enum MACRO_TIOCIXON {TIOCIXON = 536900737,};
enum MACRO_TIOCNXCL {TIOCNXCL = 536900622,};
enum MACRO_TIOCSBRK {TIOCSBRK = 536900731,};
enum MACRO_TIOCSDTR {TIOCSDTR = 536900729,};
enum MACRO_TIOCSTAT {TIOCSTAT = 536900709,};
enum MACRO_TIOCSTOP {TIOCSTOP = 536900719,};
enum MACRO_TVERSLEN {TVERSLEN = 2,REGTYPE = 48,};
enum MACRO_UINTEGER {UINTEGER = 71,};
enum MACRO_UINT_MAX {UINT_MAX = 0xFFFFFFFF,INT_MAX = 0x7FFFFFFF,};
enum MACRO_UNSIGNED {UNSIGNED = 66,};
enum MACRO_USRQUOTA {USRQUOTA = 0,GRPQUOTA = 1,};
enum MACRO_USRSTACK {USRSTACK = 3221225472,};
enum MACRO_VACM_MAX {VACM_MAX_STRING = 32,};
enum MACRO_VDISCARD {VDISCARD = 15,VMIN = 16,};
enum MACRO_VIEWTYPE {VIEWTYPE = 5,};
enum MACRO_VM_FLAGS {VM_FLAGS_SUPERPAGE_NONE = 0,VM_FLAGS_SUPERPAGE_SIZE_ANY = 65536,};
enum MACRO_VM_METER {VM_METER = 1,VM_LOADAVG = 2,VM_MACHFACTOR = 4,VM_SWAPUSAGE = 5,VM_MAXID = 6,};
enum MACRO_VREPRINT {VREPRINT = 6,VINTR = 8,};
enum MACRO_WAITTIME {MIN_WAITTIME = 2,MAX_WAITTIME = 5,};
enum MACRO_WALLPROC {WALLPROC_WALL = 2,};
enum MACRO_WALLPROG {WALLPROG = 100008,};
enum MACRO_WALLVERS {WALLVERS = 1,};
enum MACRO_WHODTYPE {WHODTYPE_STATUS = 1,};
enum MACRO_WMESGLEN {WMESGLEN = 7,};
enum MACRO_X509_EXT {X509_EXT_PACK_UNKNOWN = 1,X509_EXT_PACK_STRING = 2,X509_F_ADD_CERT_DIR = 100,X509_F_BY_FILE_CTRL = 101,X509_F_CHECK_POLICY = 145,X509_F_DIR_CTRL = 102,X509_F_GET_CERT_BY_SUBJECT = 103,X509_F_NETSCAPE_SPKI_B64_DECODE = 129,X509_F_NETSCAPE_SPKI_B64_ENCODE = 130,X509_F_X509AT_ADD1_ATTR = 135,X509_F_X509V3_ADD_EXT = 104,X509_F_X509_ATTRIBUTE_CREATE_BY_NID = 136,X509_F_X509_ATTRIBUTE_CREATE_BY_OBJ = 137,X509_F_X509_ATTRIBUTE_CREATE_BY_TXT = 140,X509_F_X509_ATTRIBUTE_GET0_DATA = 139,X509_F_X509_ATTRIBUTE_SET1_DATA = 138,X509_F_X509_CHECK_PRIVATE_KEY = 128,X509_F_X509_CRL_PRINT_FP = 147,X509_F_X509_EXTENSION_CREATE_BY_NID = 108,X509_F_X509_EXTENSION_CREATE_BY_OBJ = 109,X509_F_X509_GET_PUBKEY_PARAMETERS = 110,X509_F_X509_LOAD_CERT_CRL_FILE = 132,X509_F_X509_LOAD_CERT_FILE = 111,X509_F_X509_LOAD_CRL_FILE = 112,X509_F_X509_NAME_ADD_ENTRY = 113,X509_F_X509_NAME_ENTRY_CREATE_BY_NID = 114,X509_F_X509_NAME_ENTRY_CREATE_BY_TXT = 131,X509_F_X509_NAME_ENTRY_SET_OBJECT = 115,X509_F_X509_NAME_ONELINE = 116,X509_F_X509_NAME_PRINT = 117,X509_F_X509_PRINT_EX_FP = 118,X509_F_X509_PUBKEY_GET = 119,X509_F_X509_PUBKEY_SET = 120,X509_F_X509_REQ_CHECK_PRIVATE_KEY = 144,X509_F_X509_REQ_PRINT_EX = 121,X509_F_X509_REQ_PRINT_FP = 122,X509_F_X509_REQ_TO_X509 = 123,X509_F_X509_STORE_ADD_CERT = 124,X509_F_X509_STORE_ADD_CRL = 125,X509_F_X509_STORE_CTX_GET1_ISSUER = 146,X509_F_X509_STORE_CTX_INIT = 143,X509_F_X509_STORE_CTX_NEW = 142,X509_F_X509_STORE_CTX_PURPOSE_INHERIT = 134,X509_F_X509_TO_X509_REQ = 126,X509_F_X509_TRUST_ADD = 133,X509_F_X509_TRUST_SET = 141,X509_F_X509_VERIFY_CERT = 127,X509_R_BAD_X509_FILETYPE = 100,X509_R_BASE64_DECODE_ERROR = 118,X509_R_CANT_CHECK_DH_KEY = 114,X509_R_CERT_ALREADY_IN_HASH_TABLE = 101,X509_R_ERR_ASN1_LIB = 102,X509_R_INVALID_DIRECTORY = 113,X509_R_INVALID_FIELD_NAME = 119,X509_R_INVALID_TRUST = 123,X509_R_KEY_TYPE_MISMATCH = 115,X509_R_KEY_VALUES_MISMATCH = 116,X509_R_LOADING_CERT_DIR = 103,X509_R_LOADING_DEFAULTS = 104,X509_R_NO_CERT_SET_FOR_US_TO_VERIFY = 105,X509_R_SHOULD_RETRY = 106,X509_R_UNABLE_TO_FIND_PARAMETERS_IN_CHAIN = 107,X509_R_UNABLE_TO_GET_CERTS_PUBLIC_KEY = 108,X509_R_UNKNOWN_KEY_TYPE = 117,X509_R_UNKNOWN_NID = 109,X509_R_UNKNOWN_PURPOSE_ID = 121,X509_R_UNKNOWN_TRUST_ID = 120,X509_R_UNSUPPORTED_ALGORITHM = 111,X509_R_WRONG_LOOKUP_TYPE = 112,X509_R_WRONG_TYPE = 122,};
enum MACRO_YPMAXMAP {YPMAXMAP = 64,};
enum MACRO__FILESEC {_FILESEC_UNSET_PROPERTY = 0,_FILESEC_REMOVE_ACL = 1,};
enum MACRO__FORTIFY {_FORTIFY_SOURCE = 2,};
enum MACRO__PTHREAD {_PTHREAD_MUTEX_SIG_init = 0x32AAABA7,_PTHREAD_ERRORCHECK_MUTEX_SIG_init = 0x32AAABA1,_PTHREAD_RECURSIVE_MUTEX_SIG_init = 0x32AAABA2,_PTHREAD_FIRSTFIT_MUTEX_SIG_init = 0x32AAABA3,_PTHREAD_COND_SIG_init = 0x3CB0B1BB,_PTHREAD_ONCE_SIG_init = 0x30B1BCBA,_PTHREAD_RWLOCK_SIG_init = 0x2DA8B3B4,};
enum MACRO___ASSERT {__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES = 1,};
enum MACRO___DARWIN {__DARWIN_ONLY_64_BIT_INO_T = 0,__DARWIN_ONLY_VERS_1050 = 0,__DARWIN_ONLY_UNIX_CONFORMANCE = 1,__DARWIN_UNIX03 = 1,__DARWIN_64_BIT_INO_T = 1,__DARWIN_VERS_1050 = 1,__DARWIN_NON_CANCELABLE = 0,__DARWIN_C_ANSI = 4096,__DARWIN_C_FULL = 900000,__DARWIN_C_LEVEL = 900000,__DARWIN_LONG_DOUBLE_IS_DOUBLE = 0,};
enum MACRO___IPHONE {__IPHONE_2_0 = 20000,__IPHONE_2_1 = 20100,__IPHONE_2_2 = 20200,__IPHONE_3_0 = 30000,__IPHONE_3_1 = 30100,__IPHONE_3_2 = 30200,__IPHONE_4_0 = 40000,__IPHONE_4_1 = 40100,__IPHONE_4_2 = 40200,__IPHONE_4_3 = 40300,__IPHONE_NA = 99999,};
enum MACRO_argument {no_argument = 0,required_argument = 1,optional_argument = 2,};
enum MACRO_darwin10 {darwin10 = 10,};
enum MACRO_darwin11 {darwin11 = 10,};
typedef struct Netscape_spkac_st NETSCAPE_SPKAC;
typedef unsigned long long NXSwappedFloat;
typedef struct ocsp_basic_response_st OCSP_BASICRESP;
typedef struct ocsp_resp_bytes_st OCSP_RESPBYTES;
typedef struct ocsp_signature_st OCSP_SIGNATURE;
typedef struct _575360315CF0A1A248958A58C9E14896 PKCS12_SAFEBAG;
typedef struct pkcs7_enveloped_st PKCS7_ENVELOPE;
typedef struct POLICYQUALINFO_st POLICYQUALINFO;
typedef struct POLICY_MAPPING_st POLICY_MAPPING;
struct SHA256state_st {unsigned int h[8];unsigned int Nl;unsigned int Nh;unsigned int data[16];unsigned int num;unsigned int md_len;};
typedef struct slapi_valueset Slapi_ValueSet;
typedef struct _TidyOutputSink TidyOutputSink;
typedef void *(*X509V3_EXT_D2I)(void *,  unsigned char **, long long);
typedef int (*X509V3_EXT_I2D)(void *, unsigned char **);
typedef char *(*X509V3_EXT_I2S)(struct v3_ext_method *method, void *ext);
typedef void *(*X509V3_EXT_NEW)(void);
typedef void *(*X509V3_EXT_R2I)(struct v3_ext_method *method, struct v3_ext_ctx *ctx,  char *str);
typedef void *(*X509V3_EXT_S2I)(struct v3_ext_method *method, struct v3_ext_ctx *ctx,  char *str);
typedef struct x509_attributes_st X509_ATTRIBUTE;
typedef struct x509_cert_pair_st X509_CERT_PAIR;
typedef struct X509_extension_st X509_EXTENSION;
typedef struct x509_store_ctx_st X509_STORE_CTX;
typedef struct _DC9D1599BB1638520AEEC910A299EC32 _RuneCharClass;
struct __ifnet_filter;
enum __ns_key_types {ns_kt_rsa = 0x1,ns_kt_dh = 0x2,ns_kt_dsa = 0x3,ns_kt_private = 0xFE,};
struct _cups_raster_s;
struct _xmlSchematron;
struct _xmlStreamCtxt;
struct _xmlTextReader;
struct _xmlTextWriter;
struct _xmlValidState;
struct _xsltCompMatch;
struct asn1_object_st { char *sn; char *ln;int nid;int length;unsigned char *data;int flags;};
struct asn1_string_st {int length;int type;unsigned char *data;long long flags;};
typedef struct au_class_ent au_class_ent_t;
typedef struct au_event_ent au_event_ent_t;
typedef struct _CD5F4FFB48357709D2974D1687603B86 au_inaddr_ex_t;
typedef struct _08EB952BF76DF7A29BEE12FBAEF31F94 au_subject32_t;
typedef struct _A02E0C6A2318D7F918526EFE13F50746 au_subject64_t;
typedef struct au_tidaddr32 au_tidaddr32_t;
typedef struct au_tidaddr64 au_tidaddr64_t;
struct authunix_parms {unsigned int aup_time;char *aup_machname;int aup_uid;int aup_gid;unsigned int aup_len;int *aup_gids;};
struct bn_blinding_st;
typedef int clock_flavor_t;
struct conf_module_st;
typedef  void *const_marker_t;
enum cups_backend_e {CUPS_BACKEND_OK = 0x0,CUPS_BACKEND_FAILED = 0x1,CUPS_BACKEND_AUTH_REQUIRED = 0x2,CUPS_BACKEND_HOLD = 0x3,CUPS_BACKEND_STOP = 0x4,CUPS_BACKEND_CANCEL = 0x5,CUPS_BACKEND_RETRY = 0x6,CUPS_BACKEND_RETRY_CURRENT = 0x7,};
enum cups_icspace_e {CUPS_IMAGE_CMYK = 0xFFFFFFFC,CUPS_IMAGE_CMY = 0xFFFFFFFD,CUPS_IMAGE_BLACK = 0xFFFFFFFF,CUPS_IMAGE_WHITE = 0x1,CUPS_IMAGE_RGB = 0x3,CUPS_IMAGE_RGB_CMYK = 0x4,};
enum cups_sc_bidi_e {CUPS_SC_BIDI_NOT_SUPPORTED = 0x0,CUPS_SC_BIDI_SUPPORTED = 0x1,};
typedef struct _423B7D96C11CB2986382813780F7655D dns_question_t;
typedef struct except_frame except_frame_t;
typedef struct _htmlEntityDesc htmlEntityDesc;
enum http_version_e {HTTP_0_9 = 0x9,HTTP_1_0 = 0x64,HTTP_1_1 = 0x65,};
struct internal_state {int dummy;};
typedef struct _ipfw_insn_pipe ipfw_insn_pipe;
struct kmod_reference {struct kmod_reference *next;struct kmod_info *info;};
typedef struct _krb5_cred_info krb5_cred_info;
typedef krb5_principal_data *krb5_principal;
typedef struct _krb5_transited krb5_transited;
typedef void lck_grp_attr_t;
struct mach_zone_name {char mzn_name[80];};
typedef char netname_name_t[80];
typedef union _70B7A71D304E70E945AE4E370F85FC88 netsnmp_cvalue;
typedef struct _3010519FC8E063AC13B61458A4695107 network_port_t;
typedef struct rawarc_order_64 rawarc_order_t;
typedef int sasl_getpath_t(void *context,  char **path);
typedef void *sasl_realloc_t(void *, unsigned long long);
struct slapi_valueset;
struct snmp_enum_list {struct snmp_enum_list *next;int value;char *label;};
struct sqlite3_backup;
struct sqlite3_pcache;
struct ssl3_record_st {int type;unsigned int length;unsigned int off;unsigned char *data;unsigned char *input;unsigned char *comp;unsigned long long epoch;unsigned long long seq_num;};
struct tlv_descriptor {void *(*thunk)(struct tlv_descriptor *);unsigned long long key;unsigned long long offset;};
typedef unsigned long long vm_object_id_t;
typedef int *vm_page_info_t;
typedef void (*warningSAXFunc)(void *ctx,  char *msg, ...);
typedef struct _xmlDOMWrapCtxt xmlDOMWrapCtxt;
typedef struct _xmlEnumeration xmlEnumeration;
typedef struct _xmlGlobalState xmlGlobalState;
typedef struct _xmlLocationSet xmlLocationSet;
typedef struct _xmlParserInput xmlParserInput;
typedef struct _xmlRegExecCtxt xmlRegExecCtxt;
typedef struct _xmlSchemaAnnot xmlSchemaAnnot;
typedef struct _xmlSchemaFacet xmlSchemaFacet;
typedef struct _xmlXPathObject xmlXPathObject;
typedef unsigned int xp_resource_id;
typedef struct _xsltNumberData xsltNumberData;
typedef struct _xsltStylesheet xsltStylesheet;
struct ypall_callback {int (*foreach)(unsigned long long, char *, int, char *, int, void *);char *data;};
struct ypbind_binding {char ypbind_binding_addr[4];char ypbind_binding_port[2];};
typedef struct ASN1_ENCODING_st ASN1_ENCODING;
typedef struct ASN1_TEMPLATE_st ASN1_TEMPLATE;
struct ASN1_VALUE_st;
struct Block_byref_2 {void (*byref_keep)(struct Block_byref *dst, struct Block_byref *src);void (*byref_destroy)(struct Block_byref *);};
struct Block_byref_3 { char *layout;};
typedef struct _DNSServiceRef_t *DNSServiceRef;
typedef void (*DSO_FUNC_TYPE)(void);
typedef int Field_Options;
typedef struct _0DDFFC86F34D071263AD20115100C1F0 HISTORY_STATE;
typedef struct krb5_authorization_st KRB5_AUTHDATA;
typedef struct krb5_checksum_st KRB5_CHECKSUM;
struct LDAPDerefSpec {char *derefAttr;char **attributes;};
enum MACRO_ACCESSX {ACCESSX_MAX_DESCRIPTORS = 100,ACCESSX_MAX_TABLESIZE = 16384,};
enum MACRO_AD_TYPE {AD_TYPE_INTERNAL_MASK = 0x3FFF,};
enum MACRO_AF_COIP {AF_COIP = 20,AF_CNT = 21,};
enum MACRO_AF_NDRV {AF_NDRV = 27,AF_ISDN = 28,AF_E164 = 28,};
enum MACRO_ANYADDR {ANYADDR = 0,};
enum MACRO_B115200 {B115200 = 115200,};
enum MACRO_B230400 {B230400 = 230400,};
enum MACRO_BADADDR {BADADDR = 7,BADCTLADDR = 8,};
enum MACRO_BLKTYPE {BLKTYPE = 52,};
enum MACRO_BLK_EOR {BLK_EOR = 0x80,BLK_EOF = 0x40,BLK_ERRORS = 0x20,BLK_RESTART = 0x10,BLK_BYTECOUNT = 0x2,};
enum MACRO_BOOLEAN {BOOLEAN = 0,NUMBER = 1,};
enum MACRO_BUTTON1 {BUTTON1_RELEASED = 1,BUTTON1_PRESSED = 2,BUTTON1_CLICKED = 4,BUTTON1_DOUBLE_CLICKED = 8,BUTTON1_TRIPLE_CLICKED = 16,};
enum MACRO_BUTTON2 {BUTTON2_RELEASED = 64,BUTTON2_PRESSED = 128,BUTTON2_CLICKED = 256,BUTTON2_DOUBLE_CLICKED = 512,BUTTON2_TRIPLE_CLICKED = 1024,};
enum MACRO_BUTTON3 {BUTTON3_RELEASED = 4096,BUTTON3_PRESSED = 8192,BUTTON3_CLICKED = 16384,BUTTON3_DOUBLE_CLICKED = 32768,BUTTON3_TRIPLE_CLICKED = 65536,};
enum MACRO_BUTTON4 {BUTTON4_RELEASED = 262144,BUTTON4_PRESSED = 524288,BUTTON4_CLICKED = 1048576,BUTTON4_DOUBLE_CLICKED = 2097152,BUTTON4_TRIPLE_CLICKED = 4194304,};
enum MACRO_CBQSIZE {CBQSIZE = 8,};
enum MACRO_CHRTYPE {CHRTYPE = 51,};
enum MACRO_CIGNORE {CIGNORE = 0x1,CSIZE = 0x300,};
enum MACRO_CLBYTES {CLBYTES = 4096,};
enum MACRO_CLOEXEC {F_DUPFD_CLOEXEC = 67,FD_CLOEXEC = 1,};
enum MACRO_CLOFSET {CLOFSET = 4095,};
enum MACRO_CLSHIFT {CLSHIFT = 12,CBLOCK = 64,};
enum MACRO_CODESET {CODESET = 0,};
enum MACRO_COMMAND {MIN_FORM_COMMAND = 512,MAX_FORM_COMMAND = 568,MAX_COMMAND = 639,};
enum MACRO_CONTEXT {CONTEXT_MATCH_EXACT = 1,CONTEXT_MATCH_PREFIX = 2,};
enum MACRO_COUNTER {COUNTER = 65,};
enum MACRO_CTLFLAG {CTLFLAG_RD = 0x80000000,CTLFLAG_WR = 0x40000000,CTLFLAG_RW = 0xC0000000,CTLFLAG_NOLOCK = 0x20000000,CTLFLAG_ANYBODY = 0x10000000,CTLFLAG_SECURE = 0x8000000,CTLFLAG_MASKED = 0x4000000,CTLFLAG_NOAUTO = 0x2000000,CTLFLAG_KERN = 0x1000000,CTLFLAG_LOCKED = 0x800000,CTLFLAG_OID2 = 0x400000,};
enum MACRO_CTLTYPE {CTLTYPE = 0xF,};
enum MACRO_CURLSSH {CURLSSH_AUTH_ANY = -1,CURLSSH_AUTH_NONE = 0,CURLSSH_AUTH_PUBLICKEY = 1,CURLSSH_AUTH_PASSWORD = 2,CURLSSH_AUTH_HOST = 4,CURLSSH_AUTH_KEYBOARD = 8,CURLSSH_AUTH_DEFAULT = -1,};
enum MACRO_CWERASE {CWERASE = 23,};
enum MACRO_DBG_APP {DBG_APP_SAMBA = 128,};
enum MACRO_DEFAULT {DEFAULT_MIB_PRIORITY = 127,};
enum MACRO_DFLCSIZ {DFLCSIZ = 0,MAXCSIZ = 9223372036854775807,};
enum MACRO_DFLDSIZ {DFLDSIZ = 9223372036854775807,};
enum MACRO_DFLSSIZ {DFLSSIZ = 8388608,MAXSSIZ = 67108864,};
enum MACRO_DIRTYPE {DIRTYPE = 53,};
enum MACRO_EC_PKEY {EC_PKEY_NO_PARAMETERS = 0x1,EC_PKEY_NO_PUBKEY = 0x2,EC_F_COMPUTE_WNAF = 0x8F,EC_F_D2I_ECPARAMETERS = 0x90,EC_F_D2I_ECPKPARAMETERS = 0x91,EC_F_D2I_ECPRIVATEKEY = 0x92,EC_F_ECPARAMETERS_PRINT = 0x93,EC_F_ECPARAMETERS_PRINT_FP = 0x94,EC_F_ECPKPARAMETERS_PRINT = 0x95,EC_F_ECPKPARAMETERS_PRINT_FP = 0x96,EC_F_ECP_NIST_MOD_192 = 0xCB,EC_F_ECP_NIST_MOD_224 = 0xCC,EC_F_ECP_NIST_MOD_256 = 0xCD,EC_F_ECP_NIST_MOD_521 = 0xCE,EC_F_EC_ASN1_GROUP2CURVE = 0x99,EC_F_EC_ASN1_GROUP2FIELDID = 0x9A,EC_F_EC_ASN1_GROUP2PARAMETERS = 0x9B,EC_F_EC_ASN1_GROUP2PKPARAMETERS = 0x9C,EC_F_EC_ASN1_PARAMETERS2GROUP = 0x9D,EC_F_EC_ASN1_PKPARAMETERS2GROUP = 0x9E,EC_F_EC_EX_DATA_SET_DATA = 0xD3,EC_F_EC_GF2M_MONTGOMERY_POINT_MULTIPLY = 0xD0,EC_F_EC_GF2M_SIMPLE_GROUP_CHECK_DISCRIMINANT = 0x9F,EC_F_EC_GF2M_SIMPLE_GROUP_SET_CURVE = 0xC3,EC_F_EC_GF2M_SIMPLE_OCT2POINT = 0xA0,EC_F_EC_GF2M_SIMPLE_POINT2OCT = 0xA1,EC_F_EC_GF2M_SIMPLE_POINT_GET_AFFINE_COORDINATES = 0xA2,EC_F_EC_GF2M_SIMPLE_POINT_SET_AFFINE_COORDINATES = 0xA3,EC_F_EC_GF2M_SIMPLE_SET_COMPRESSED_COORDINATES = 0xA4,EC_F_EC_GFP_MONT_FIELD_DECODE = 0x85,EC_F_EC_GFP_MONT_FIELD_ENCODE = 0x86,EC_F_EC_GFP_MONT_FIELD_MUL = 0x83,EC_F_EC_GFP_MONT_FIELD_SET_TO_ONE = 0xD1,EC_F_EC_GFP_MONT_FIELD_SQR = 0x84,EC_F_EC_GFP_MONT_GROUP_SET_CURVE = 0xBD,EC_F_EC_GFP_MONT_GROUP_SET_CURVE_GFP = 0x87,EC_F_EC_GFP_NIST_FIELD_MUL = 0xC8,EC_F_EC_GFP_NIST_FIELD_SQR = 0xC9,EC_F_EC_GFP_NIST_GROUP_SET_CURVE = 0xCA,EC_F_EC_GFP_SIMPLE_GROUP_CHECK_DISCRIMINANT = 0xA5,EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE = 0xA6,EC_F_EC_GFP_SIMPLE_GROUP_SET_CURVE_GFP = 0x64,EC_F_EC_GFP_SIMPLE_GROUP_SET_GENERATOR = 0x65,EC_F_EC_GFP_SIMPLE_MAKE_AFFINE = 0x66,EC_F_EC_GFP_SIMPLE_OCT2POINT = 0x67,EC_F_EC_GFP_SIMPLE_POINT2OCT = 0x68,EC_F_EC_GFP_SIMPLE_POINTS_MAKE_AFFINE = 0x89,EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES = 0xA7,EC_F_EC_GFP_SIMPLE_POINT_GET_AFFINE_COORDINATES_GFP = 0x69,EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES = 0xA8,EC_F_EC_GFP_SIMPLE_POINT_SET_AFFINE_COORDINATES_GFP = 0x80,EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES = 0xA9,EC_F_EC_GFP_SIMPLE_SET_COMPRESSED_COORDINATES_GFP = 0x81,EC_F_EC_GROUP_CHECK = 0xAA,EC_F_EC_GROUP_CHECK_DISCRIMINANT = 0xAB,EC_F_EC_GROUP_COPY = 0x6A,EC_F_EC_GROUP_GET0_GENERATOR = 0x8B,EC_F_EC_GROUP_GET_COFACTOR = 0x8C,EC_F_EC_GROUP_GET_CURVE_GF2M = 0xAC,EC_F_EC_GROUP_GET_CURVE_GFP = 0x82,EC_F_EC_GROUP_GET_DEGREE = 0xAD,EC_F_EC_GROUP_GET_ORDER = 0x8D,EC_F_EC_GROUP_GET_PENTANOMIAL_BASIS = 0xC1,EC_F_EC_GROUP_GET_TRINOMIAL_BASIS = 0xC2,EC_F_EC_GROUP_NEW = 0x6C,EC_F_EC_GROUP_NEW_BY_CURVE_NAME = 0xAE,EC_F_EC_GROUP_NEW_FROM_DATA = 0xAF,EC_F_EC_GROUP_PRECOMPUTE_MULT = 0x8E,EC_F_EC_GROUP_SET_CURVE_GF2M = 0xB0,EC_F_EC_GROUP_SET_CURVE_GFP = 0x6D,EC_F_EC_GROUP_SET_EXTRA_DATA = 0x6E,EC_F_EC_GROUP_SET_GENERATOR = 0x6F,EC_F_EC_KEY_CHECK_KEY = 0xB1,EC_F_EC_KEY_COPY = 0xB2,EC_F_EC_KEY_GENERATE_KEY = 0xB3,EC_F_EC_KEY_NEW = 0xB6,EC_F_EC_KEY_PRINT = 0xB4,EC_F_EC_KEY_PRINT_FP = 0xB5,EC_F_EC_POINTS_MAKE_AFFINE = 0x88,EC_F_EC_POINTS_MUL = 0x8A,EC_F_EC_POINT_ADD = 0x70,EC_F_EC_POINT_CMP = 0x71,EC_F_EC_POINT_COPY = 0x72,EC_F_EC_POINT_DBL = 0x73,EC_F_EC_POINT_GET_AFFINE_COORDINATES_GF2M = 0xB7,EC_F_EC_POINT_GET_AFFINE_COORDINATES_GFP = 0x74,EC_F_EC_POINT_GET_JPROJECTIVE_COORDINATES_GFP = 0x75,EC_F_EC_POINT_INVERT = 0xD2,EC_F_EC_POINT_IS_AT_INFINITY = 0x76,EC_F_EC_POINT_IS_ON_CURVE = 0x77,EC_F_EC_POINT_MAKE_AFFINE = 0x78,EC_F_EC_POINT_MUL = 0xB8,EC_F_EC_POINT_NEW = 0x79,EC_F_EC_POINT_OCT2POINT = 0x7A,EC_F_EC_POINT_POINT2OCT = 0x7B,EC_F_EC_POINT_SET_AFFINE_COORDINATES_GF2M = 0xB9,EC_F_EC_POINT_SET_AFFINE_COORDINATES_GFP = 0x7C,EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GF2M = 0xBA,EC_F_EC_POINT_SET_COMPRESSED_COORDINATES_GFP = 0x7D,EC_F_EC_POINT_SET_JPROJECTIVE_COORDINATES_GFP = 0x7E,EC_F_EC_POINT_SET_TO_INFINITY = 0x7F,EC_F_EC_PRE_COMP_DUP = 0xCF,EC_F_EC_PRE_COMP_NEW = 0xC4,EC_F_EC_WNAF_MUL = 0xBB,EC_F_EC_WNAF_PRECOMPUTE_MULT = 0xBC,EC_F_I2D_ECPARAMETERS = 0xBE,EC_F_I2D_ECPKPARAMETERS = 0xBF,EC_F_I2D_ECPRIVATEKEY = 0xC0,EC_F_I2O_ECPUBLICKEY = 0x97,EC_F_O2I_ECPUBLICKEY = 0x98,EC_R_ASN1_ERROR = 0x73,EC_R_ASN1_UNKNOWN_FIELD = 0x74,EC_R_BUFFER_TOO_SMALL = 0x64,EC_R_D2I_ECPKPARAMETERS_FAILURE = 0x75,EC_R_DISCRIMINANT_IS_ZERO = 0x76,EC_R_EC_GROUP_NEW_BY_NAME_FAILURE = 0x77,EC_R_FIELD_TOO_LARGE = 0x8A,EC_R_GROUP2PKPARAMETERS_FAILURE = 0x78,EC_R_I2D_ECPKPARAMETERS_FAILURE = 0x79,EC_R_INCOMPATIBLE_OBJECTS = 0x65,EC_R_INVALID_ARGUMENT = 0x70,EC_R_INVALID_COMPRESSED_POINT = 0x6E,EC_R_INVALID_COMPRESSION_BIT = 0x6D,EC_R_INVALID_ENCODING = 0x66,EC_R_INVALID_FIELD = 0x67,EC_R_INVALID_FORM = 0x68,EC_R_INVALID_GROUP_ORDER = 0x7A,EC_R_INVALID_PENTANOMIAL_BASIS = 0x84,EC_R_INVALID_PRIVATE_KEY = 0x7B,EC_R_INVALID_TRINOMIAL_BASIS = 0x89,EC_R_MISSING_PARAMETERS = 0x7C,EC_R_MISSING_PRIVATE_KEY = 0x7D,EC_R_NOT_A_NIST_PRIME = 0x87,EC_R_NOT_A_SUPPORTED_NIST_PRIME = 0x88,EC_R_NOT_IMPLEMENTED = 0x7E,EC_R_NOT_INITIALIZED = 0x6F,EC_R_NO_FIELD_MOD = 0x85,EC_R_PASSED_NULL_PARAMETER = 0x86,EC_R_PKPARAMETERS2GROUP_FAILURE = 0x7F,EC_R_POINT_AT_INFINITY = 0x6A,EC_R_POINT_IS_NOT_ON_CURVE = 0x6B,EC_R_SLOT_FULL = 0x6C,EC_R_UNDEFINED_GENERATOR = 0x71,EC_R_UNDEFINED_ORDER = 0x80,EC_R_UNKNOWN_GROUP = 0x81,EC_R_UNKNOWN_ORDER = 0x72,EC_R_UNSUPPORTED_FIELD = 0x83,EC_R_WRONG_ORDER = 0x82,};
enum MACRO_EEXISTS {EEXISTS = 6,};
enum MACRO_ENCRYPT {ENCRYPT_IS = 0,ENCRYPT_SUPPORT = 1,ENCRYPT_REPLY = 2,ENCRYPT_START = 3,ENCRYPT_END = 4,ENCRYPT_REQSTART = 5,ENCRYPT_REQEND = 6,ENCRYPT_ENC_KEYID = 7,ENCRYPT_DEC_KEYID = 8,ENCRYPT_CNT = 9,};
enum MACRO_ENCTYPE {ENCTYPE_NULL = 0x0,ENCTYPE_DES_CBC_CRC = 0x1,ENCTYPE_DES_CBC_MD4 = 0x2,ENCTYPE_DES_CBC_MD5 = 0x3,ENCTYPE_DES_CBC_RAW = 0x4,ENCTYPE_DES3_CBC_SHA = 0x5,ENCTYPE_DES3_CBC_RAW = 0x6,ENCTYPE_DES_HMAC_SHA1 = 0x8,ENCTYPE_DSA_SHA1_CMS = 0x9,ENCTYPE_MD5_RSA_CMS = 0xA,ENCTYPE_SHA1_RSA_CMS = 0xB,ENCTYPE_RC2_CBC_ENV = 0xC,ENCTYPE_RSA_ENV = 0xD,ENCTYPE_RSA_ES_OAEP_ENV = 0xE,ENCTYPE_DES3_CBC_ENV = 0xF,ENCTYPE_DES3_CBC_SHA1 = 0x10,ENCTYPE_AES128_CTS_HMAC_SHA1_96 = 0x11,ENCTYPE_AES256_CTS_HMAC_SHA1_96 = 0x12,ENCTYPE_ARCFOUR_HMAC = 0x17,ENCTYPE_ARCFOUR_HMAC_EXP = 0x18,ENCTYPE_UNKNOWN = 0x1FF,};
enum MACRO_ENOUSER {ENOUSER = 7,EOPTNEG = 8,};
enum MACRO_ERROR_0 {ERROR = 5,};
enum MACRO_ERR_GDT {ERR_GDT = 0,ERR_IDT = 1,ERR_LDT = 2,};
enum MACRO_ERR_TXT {ERR_TXT_MALLOCED = 0x1,ERR_TXT_STRING = 0x2,ERR_FLAG_MARK = 0x1,ERR_NUM_ERRORS = 0x10,ERR_LIB_NONE = 0x1,ERR_LIB_SYS = 0x2,ERR_LIB_BN = 0x3,ERR_LIB_RSA = 0x4,ERR_LIB_DH = 0x5,ERR_LIB_EVP = 0x6,ERR_LIB_BUF = 0x7,ERR_LIB_OBJ = 0x8,ERR_LIB_PEM = 0x9,ERR_LIB_DSA = 0xA,ERR_LIB_X509 = 0xB,ERR_LIB_ASN1 = 0xD,ERR_LIB_CONF = 0xE,ERR_LIB_CRYPTO = 0xF,ERR_LIB_EC = 0x10,ERR_LIB_SSL = 0x14,ERR_LIB_BIO = 0x20,ERR_LIB_PKCS7 = 0x21,ERR_LIB_X509V3 = 0x22,ERR_LIB_PKCS12 = 0x23,ERR_LIB_RAND = 0x24,ERR_LIB_DSO = 0x25,ERR_LIB_ENGINE = 0x26,ERR_LIB_OCSP = 0x27,ERR_LIB_UI = 0x28,ERR_LIB_COMP = 0x29,ERR_LIB_ECDSA = 0x2A,ERR_LIB_ECDH = 0x2B,ERR_LIB_STORE = 0x2C,ERR_LIB_FIPS = 0x2D,ERR_LIB_CMS = 0x2E,ERR_LIB_JPAKE = 0x2F,ERR_LIB_USER = 0x80,};
enum MACRO_FAPPEND {FAPPEND = 8,FASYNC = 64,FFSYNC = 128,FFDSYNC = 4194304,};
enum MACRO_FIOCLEX {FIOCLEX = 536897025,};
enum MACRO_FNDELAY {FNDELAY = 4,};
enum MACRO_FP_SNAN {FP_SNAN = 1,FP_QNAN = 1,};
enum MACRO_F_DUPFD {F_DUPFD = 0,F_GETFD = 1,F_SETFD = 2,F_GETFL = 3,F_SETFL = 4,F_GETOWN = 5,F_SETOWN = 6,F_GETLK = 7,F_SETLK = 8,F_SETLKW = 9,F_FLUSH_DATA = 40,F_CHKCLEAN = 41,F_PREALLOCATE = 42,F_SETSIZE = 43,F_RDADVISE = 44,F_RDAHEAD = 45,F_READBOOTSTRAP = 46,F_WRITEBOOTSTRAP = 47,F_NOCACHE = 48,F_LOG2PHYS = 49,F_GETPATH = 50,F_FULLFSYNC = 51,F_PATHPKG_CHECK = 52,F_FREEZE_FS = 53,F_THAW_FS = 54,F_GLOBAL_NOCACHE = 55,F_ADDSIGS = 59,F_MARKDEPENDENCY = 60,F_ADDFILESIGS = 61,F_NODIRECT = 62,F_GETPROTECTIONCLASS = 63,F_SETPROTECTIONCLASS = 64,F_LOG2PHYS_EXT = 65,F_GETLKPID = 66,F_SETBACKINGSTORE = 70,F_GETPATH_MTMINFO = 71,F_SETNOSIGPIPE = 73,F_GETNOSIGPIPE = 74,};
enum MACRO_F_RDLCK {F_RDLCK = 1,F_UNLCK = 2,F_WRLCK = 3,};
enum MACRO_GETNCNT {GETNCNT = 3,GETPID = 4,};
enum MACRO_GETZCNT {GETZCNT = 7,SETVAL = 8,};
enum MACRO_HANDLER {HANDLER_CAN_GETANDGETNEXT = 0x1,HANDLER_CAN_SET = 0x2,HANDLER_CAN_GETBULK = 0x4,HANDLER_CAN_NOT_CREATE = 0x8,HANDLER_CAN_BABY_STEP = 0x10,HANDLER_CAN_STASH = 0x20,HANDLER_CAN_RONLY = 0x1,HANDLER_CAN_RWRITE = 0x3,HANDLER_CAN_SET_ONLY = 0xA,HANDLER_CAN_DEFAULT = 0x9,};
enum MACRO_ICMPCTL {ICMPCTL_MASKREPL = 1,ICMPCTL_STATS = 2,ICMPCTL_ICMPLIM = 3,ICMPCTL_TIMESTAMP = 4,ICMPCTL_MAXID = 5,};
enum MACRO_IF_WAKE {IF_WAKE_ON_MAGIC_PACKET = 0x1,};
enum MACRO_IGMPCTL {IGMPCTL_STATS = 1,IGMPCTL_MAXID = 2,};
enum MACRO_IGMPMSG {IGMPMSG_NOCACHE = 1,IGMPMSG_WRONGVIF = 2,};
enum MACRO_IN6_IFF {IN6_IFF_ANYCAST = 0x1,IN6_IFF_TENTATIVE = 0x2,IN6_IFF_DUPLICATED = 0x4,IN6_IFF_DETACHED = 0x8,IN6_IFF_DEPRECATED = 0x10,IN6_IFF_NODAD = 0x20,IN6_IFF_AUTOCONF = 0x40,IN6_IFF_TEMPORARY = 0x80,IN6_IFF_NOPFX = 0x8000,IN6_IFF_NOTREADY = 0x6,};
enum MACRO_INT16SZ {INT16SZ = 2,INADDRSZ = 4,IN6ADDRSZ = 16,};
enum MACRO_INT32SZ {INT32SZ = 4,};
enum MACRO_INTEGER {INTEGER = 2,};
enum MACRO_INT_MIN {INT_MIN = -2147483648,};
enum MACRO_IOCPARM {IOCPARM_MASK = 0x1FFF,IOCPARM_MAX = 0x2000,};
enum MACRO_IPPROTO {IPPROTO_IP = 0,IPPROTO_HOPOPTS = 0,IPPROTO_ICMP = 1,IPPROTO_IGMP = 2,IPPROTO_GGP = 3,IPPROTO_IPV4 = 4,IPPROTO_IPIP = 4,IPPROTO_TCP = 6,IPPROTO_ST = 7,IPPROTO_EGP = 8,IPPROTO_PIGP = 9,IPPROTO_RCCMON = 10,IPPROTO_NVPII = 11,IPPROTO_PUP = 12,IPPROTO_ARGUS = 13,IPPROTO_EMCON = 14,IPPROTO_XNET = 15,IPPROTO_CHAOS = 16,IPPROTO_UDP = 17,IPPROTO_MUX = 18,IPPROTO_MEAS = 19,IPPROTO_HMP = 20,IPPROTO_PRM = 21,IPPROTO_IDP = 22,IPPROTO_TRUNK1 = 23,IPPROTO_TRUNK2 = 24,IPPROTO_LEAF1 = 25,IPPROTO_LEAF2 = 26,IPPROTO_RDP = 27,IPPROTO_IRTP = 28,IPPROTO_TP = 29,IPPROTO_BLT = 30,IPPROTO_NSP = 31,IPPROTO_INP = 32,IPPROTO_SEP = 33,IPPROTO_3PC = 34,IPPROTO_IDPR = 35,IPPROTO_XTP = 36,IPPROTO_DDP = 37,IPPROTO_CMTP = 38,IPPROTO_TPXX = 39,IPPROTO_IL = 40,IPPROTO_IPV6 = 41,IPPROTO_SDRP = 42,IPPROTO_ROUTING = 43,IPPROTO_FRAGMENT = 44,IPPROTO_IDRP = 45,IPPROTO_RSVP = 46,IPPROTO_GRE = 47,IPPROTO_MHRP = 48,IPPROTO_BHA = 49,IPPROTO_ESP = 50,IPPROTO_AH = 51,IPPROTO_INLSP = 52,IPPROTO_SWIPE = 53,IPPROTO_NHRP = 54,IPPROTO_ICMPV6 = 58,IPPROTO_NONE = 59,IPPROTO_DSTOPTS = 60,IPPROTO_AHIP = 61,IPPROTO_CFTP = 62,IPPROTO_HELLO = 63,IPPROTO_SATEXPAK = 64,IPPROTO_KRYPTOLAN = 65,IPPROTO_RVD = 66,IPPROTO_IPPC = 67,IPPROTO_ADFS = 68,IPPROTO_SATMON = 69,IPPROTO_VISA = 70,IPPROTO_IPCV = 71,IPPROTO_CPNX = 72,IPPROTO_CPHB = 73,IPPROTO_WSN = 74,IPPROTO_PVP = 75,IPPROTO_BRSATMON = 76,IPPROTO_ND = 77,IPPROTO_WBMON = 78,IPPROTO_WBEXPAK = 79,IPPROTO_EON = 80,IPPROTO_VMTP = 81,IPPROTO_SVMTP = 82,IPPROTO_VINES = 83,IPPROTO_TTP = 84,IPPROTO_IGP = 85,IPPROTO_DGP = 86,IPPROTO_TCF = 87,IPPROTO_IGRP = 88,IPPROTO_OSPFIGP = 89,IPPROTO_SRPC = 90,IPPROTO_LARP = 91,IPPROTO_MTP = 92,IPPROTO_AX25 = 93,IPPROTO_IPEIP = 94,IPPROTO_MICP = 95,IPPROTO_SCCSP = 96,IPPROTO_ETHERIP = 97,IPPROTO_ENCAP = 98,IPPROTO_APES = 99,IPPROTO_GMTP = 100,IPPROTO_PIM = 103,IPPROTO_IPCOMP = 108,IPPROTO_PGM = 113,IPPROTO_SCTP = 132,IPPROTO_DIVERT = 254,IPPROTO_RAW = 255,IPPROTO_MAX = 256,IPPROTO_DONE = 257,};
enum MACRO_IPV6CTL {IPV6CTL_FORWARDING = 1,IPV6CTL_SENDREDIRECTS = 2,IPV6CTL_DEFHLIM = 3,IPV6CTL_FORWSRCRT = 5,IPV6CTL_STATS = 6,IPV6CTL_MRTSTATS = 7,IPV6CTL_MRTPROTO = 8,IPV6CTL_MAXFRAGPACKETS = 9,IPV6CTL_SOURCECHECK = 10,IPV6CTL_SOURCECHECK_LOGINT = 11,IPV6CTL_ACCEPT_RTADV = 12,IPV6CTL_KEEPFAITH = 13,IPV6CTL_LOG_INTERVAL = 14,IPV6CTL_HDRNESTLIMIT = 15,IPV6CTL_DAD_COUNT = 16,IPV6CTL_AUTO_FLOWLABEL = 17,IPV6CTL_DEFMCASTHLIM = 18,IPV6CTL_GIF_HLIM = 19,IPV6CTL_KAME_VERSION = 20,IPV6CTL_USE_DEPRECATED = 21,IPV6CTL_RR_PRUNE = 22,IPV6CTL_V6ONLY = 24,IPV6CTL_RTEXPIRE = 25,IPV6CTL_RTMINEXPIRE = 26,IPV6CTL_RTMAXCACHE = 27,IPV6CTL_USETEMPADDR = 32,IPV6CTL_TEMPPLTIME = 33,IPV6CTL_TEMPVLTIME = 34,IPV6CTL_AUTO_LINKLOCAL = 35,IPV6CTL_RIP6STATS = 36,IPV6CTL_PREFER_TEMPADDR = 37,IPV6CTL_ADDRCTLPOLICY = 38,IPV6CTL_USE_DEFAULTZONE = 39,IPV6CTL_MAXFRAGS = 41,IPV6CTL_MCAST_PMTU = 44,IPV6CTL_NEIGHBORGCTHRESH = 46,IPV6CTL_MAXIFPREFIXES = 47,IPV6CTL_MAXIFDEFROUTERS = 48,IPV6CTL_MAXDYNROUTES = 49,};
enum MACRO_IP_ADDR {IP_ADDR_TYPE = 1,};
enum MACRO_JUSTIFY {JUSTIFY_LEFT = 1,JUSTIFY_CENTER = 2,JUSTIFY_RIGHT = 3,};
enum MACRO_KEVENTS {KEVENTS_ON = 1,};
enum MACRO_KRB5DES {KRB5DES_BAD_KEYPAR = -1765328198,KRB5DES_WEAK_KEY = -1765328197,};
enum MACRO_KRB5KDC {KRB5KDC_ERR_NONE = -1765328384,KRB5KDC_ERR_NAME_EXP = -1765328383,KRB5KDC_ERR_SERVICE_EXP = -1765328382,KRB5KDC_ERR_BAD_PVNO = -1765328381,KRB5KDC_ERR_C_OLD_MAST_KVNO = -1765328380,KRB5KDC_ERR_S_OLD_MAST_KVNO = -1765328379,KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN = -1765328378,KRB5KDC_ERR_S_PRINCIPAL_UNKNOWN = -1765328377,KRB5KDC_ERR_PRINCIPAL_NOT_UNIQUE = -1765328376,KRB5KDC_ERR_NULL_KEY = -1765328375,KRB5KDC_ERR_CANNOT_POSTDATE = -1765328374,KRB5KDC_ERR_NEVER_VALID = -1765328373,KRB5KDC_ERR_POLICY = -1765328372,KRB5KDC_ERR_BADOPTION = -1765328371,KRB5KDC_ERR_ETYPE_NOSUPP = -1765328370,KRB5KDC_ERR_SUMTYPE_NOSUPP = -1765328369,KRB5KDC_ERR_PADATA_TYPE_NOSUPP = -1765328368,KRB5KDC_ERR_TRTYPE_NOSUPP = -1765328367,KRB5KDC_ERR_CLIENT_REVOKED = -1765328366,KRB5KDC_ERR_SERVICE_REVOKED = -1765328365,KRB5KDC_ERR_TGT_REVOKED = -1765328364,KRB5KDC_ERR_CLIENT_NOTYET = -1765328363,KRB5KDC_ERR_SERVICE_NOTYET = -1765328362,KRB5KDC_ERR_KEY_EXP = -1765328361,KRB5KDC_ERR_PREAUTH_FAILED = -1765328360,KRB5KDC_ERR_PREAUTH_REQUIRED = -1765328359,KRB5KDC_ERR_SERVER_NOMATCH = -1765328358,KRB5KDC_ERR_MUST_USE_USER2USER = -1765328357,KRB5KDC_ERR_PATH_NOT_ACCEPTED = -1765328356,KRB5KDC_ERR_SVC_UNAVAILABLE = -1765328355,};
enum MACRO_KRB5KRB {KRB5KRB_AP_ERR_BAD_INTEGRITY = -1765328353,KRB5KRB_AP_ERR_TKT_EXPIRED = -1765328352,KRB5KRB_AP_ERR_TKT_NYV = -1765328351,KRB5KRB_AP_ERR_REPEAT = -1765328350,KRB5KRB_AP_ERR_NOT_US = -1765328349,KRB5KRB_AP_ERR_BADMATCH = -1765328348,KRB5KRB_AP_ERR_SKEW = -1765328347,KRB5KRB_AP_ERR_BADADDR = -1765328346,KRB5KRB_AP_ERR_BADVERSION = -1765328345,KRB5KRB_AP_ERR_MSG_TYPE = -1765328344,KRB5KRB_AP_ERR_MODIFIED = -1765328343,KRB5KRB_AP_ERR_BADORDER = -1765328342,KRB5KRB_AP_ERR_ILL_CR_TKT = -1765328341,KRB5KRB_AP_ERR_BADKEYVER = -1765328340,KRB5KRB_AP_ERR_NOKEY = -1765328339,KRB5KRB_AP_ERR_MUT_FAIL = -1765328338,KRB5KRB_AP_ERR_BADDIRECTION = -1765328337,KRB5KRB_AP_ERR_METHOD = -1765328336,KRB5KRB_AP_ERR_BADSEQ = -1765328335,KRB5KRB_AP_ERR_INAPP_CKSUM = -1765328334,KRB5KRB_AP_PATH_NOT_ACCEPTED = -1765328333,KRB5KRB_ERR_RESPONSE_TOO_BIG = -1765328332,};
enum MACRO_KRB5_GC {KRB5_GC_USER_USER = 1,KRB5_GC_CACHED = 2,KRB5_PRINCIPAL_PARSE_NO_REALM = 1,KRB5_PRINCIPAL_PARSE_REQUIRE_REALM = 2,KRB5_PRINCIPAL_PARSE_ENTERPRISE = 4,KRB5_PRINCIPAL_UNPARSE_SHORT = 1,KRB5_PRINCIPAL_UNPARSE_NO_REALM = 2,KRB5_PRINCIPAL_UNPARSE_DISPLAY = 4,KRB5_REALM_BRANCH_CHAR = 46,KRB5_TGS_NAME_SIZE = 6,KRB5_RECVAUTH_SKIP_VERSION = 1,KRB5_RECVAUTH_BADAUTHVERS = 2,KRB5_GET_INIT_CREDS_OPT_TKT_LIFE = 1,KRB5_GET_INIT_CREDS_OPT_RENEW_LIFE = 2,KRB5_GET_INIT_CREDS_OPT_FORWARDABLE = 4,KRB5_GET_INIT_CREDS_OPT_PROXIABLE = 8,KRB5_GET_INIT_CREDS_OPT_ETYPE_LIST = 16,KRB5_GET_INIT_CREDS_OPT_ADDRESS_LIST = 32,KRB5_GET_INIT_CREDS_OPT_PREAUTH_LIST = 64,KRB5_GET_INIT_CREDS_OPT_SALT = 128,KRB5_GET_INIT_CREDS_OPT_CHG_PWD_PRMPT = 256,KRB5_GET_INIT_CREDS_OPT_CANONICALIZE = 512,KRB5_VERIFY_INIT_CREDS_OPT_AP_REQ_NOFAIL = 1,KRB5_PROMPT_TYPE_PASSWORD = 1,KRB5_PROMPT_TYPE_NEW_PASSWORD = 2,KRB5_PROMPT_TYPE_NEW_PASSWORD_AGAIN = 3,KRB5_PROMPT_TYPE_PREAUTH = 4,};
enum MACRO_KRB5_NT {KRB5_NT_UNKNOWN = 0,KRB5_NT_PRINCIPAL = 1,KRB5_NT_SRV_INST = 2,KRB5_NT_SRV_HST = 3,KRB5_NT_SRV_XHST = 4,KRB5_NT_UID = 5,KRB5_NT_X500_PRINCIPAL = 6,KRB5_NT_SMTP_NAME = 7,KRB5_NT_ENTERPRISE_PRINCIPAL = 10,KRB5_NT_MS_PRINCIPAL = -128,KRB5_NT_MS_PRINCIPAL_AND_ID = -129,KRB5_NT_ENT_PRINCIPAL_AND_ID = -130,};
enum MACRO_LIBCURL {LIBCURL_VERSION_MAJOR = 7,LIBCURL_VERSION_MINOR = 21,LIBCURL_VERSION_PATCH = 4,LIBCURL_VERSION_NUM = 464132,};
enum MACRO_LIBEDIT {LIBEDIT_MAJOR = 2,LIBEDIT_MINOR = 11,};
enum MACRO_LIBXSLT {LIBXSLT_VERSION = 10124,};
enum MACRO_MACHINE {MACHINE_THREAD_STATE = 7,};
enum MACRO_MAC_MAX {MAC_MAX_POLICY_NAME = 32,MAC_MAX_LABEL_ELEMENT_NAME = 32,MAC_MAX_LABEL_ELEMENT_DATA = 4096,MAC_MAX_LABEL_BUF_LEN = 8192,MAC_MAX_MANAGED_NAMESPACES = 4,MAC_SYSTEM_ENFORCE = 1,MAC_PROC_ENFORCE = 2,MAC_MACH_ENFORCE = 4,MAC_VM_ENFORCE = 8,MAC_FILE_ENFORCE = 16,MAC_SOCKET_ENFORCE = 32,MAC_PIPE_ENFORCE = 64,MAC_VNODE_ENFORCE = 128,MAC_NET_ENFORCE = 256,MAC_MBUF_ENFORCE = 512,MAC_POSIXSEM_ENFORCE = 1024,MAC_POSIXSHM_ENFORCE = 2048,MAC_SYSVMSG_ENFORCE = 4096,MAC_SYSVSEM_ENFORCE = 8192,MAC_SYSVSHM_ENFORCE = 16384,MAC_ALL_ENFORCE = 32767,MAC_PROC_CHECK_SUSPEND = 0,MAC_PROC_CHECK_RESUME = 1,MAC_PROC_CHECK_HIBERNATE = 2,MAC_PROC_CHECK_SHUTDOWN_SOCKETS = 3,MAC_POLICY_OPS_VERSION = 11,MAC_AUDIT_DATA_LIMIT = 1024,MAC_AUDIT_DEFAULT = 0,MAC_AUDIT_NO = 1,MAC_AUDIT_YES = 2,};
enum MACRO_MAXDSIZ {MAXDSIZ = 9223372036854775807,};
enum MACRO_MAXFRAG {MAXFRAG = 8,};
enum MACRO_MAXPHYS {MAXPHYS = 131072,};
enum MACRO_MAXUPRC {MAXUPRC = 266,NCARGS = 262144,};
enum MACRO_MAX_LEN {COMMUNITY_MAX_LEN = 256,SPRINT_MAX_LEN = 2560,};
enum MACRO_MAX_MEM {MAX_MEM_LEVEL = 9,MAX_WBITS = 15,};
enum MACRO_MAX_MSG {MAX_MSG_BSIZE = 1048576,};
enum MACRO_MINARCS {MINARCS = 50,};
enum MACRO_MINCORE {MINCORE_INCORE = 0x1,MINCORE_REFERENCED = 0x2,MINCORE_MODIFIED = 0x4,MINCORE_REFERENCED_OTHER = 0x8,MINCORE_MODIFIED_OTHER = 0x10,};
enum MACRO_MSG_OOB {MSG_OOB = 0x1,MSG_PEEK = 0x2,MSG_DONTROUTE = 0x4,MSG_EOR = 0x8,MSG_TRUNC = 0x10,MSG_CTRUNC = 0x20,MSG_WAITALL = 0x40,MSG_DONTWAIT = 0x80,MSG_EOF = 0x100,MSG_WAITSTREAM = 0x200,MSG_FLUSH = 0x400,MSG_HOLD = 0x800,MSG_SEND = 0x1000,MSG_HAVEMORE = 0x2000,MSG_RCVMORE = 0x4000,MSG_NEEDSA = 0x10000,};
enum MACRO_NCURSES {NCURSES_VERSION_MAJOR = 5,NCURSES_VERSION_MINOR = 7,NCURSES_VERSION_PATCH = 20081102,NCURSES_MOUSE_VERSION = 1,NCURSES_DLL_H_incl = 1,NCURSES_ENABLE_STDBOOL_H = 1,NCURSES_OPAQUE = 1,NCURSES_TPARM_VARARGS = 1,NCURSES_UNCTRL_H_incl = 1,};
enum MACRO_NETLINK {NETLINK_GENERIC = 0,};
enum MACRO_NETNAME {NETNAME_SUCCESS = 0,NETNAME_PENDING = -1,NETNAME_NOT_YOURS = 1000,};
enum MACRO_NETSNMP {NETSNMP_CAN_DO_CRYPTO = 1,NETSNMP_CAN_USE_SYSCTL = 1,NETSNMP_ENABLE_IPV6 = 1,NETSNMP_ENABLE_SCAPI_AUTHPRIV = 1,NETSNMP_NO_DUMMY_VALUES = 1,NETSNMP_NO_KMEM_USAGE = 1,NETSNMP_PERSISTENT_MASK = 63,NETSNMP_WITH_OPAQUE_SPECIAL_TYPES = 1,};
enum MACRO_NEWLINE {NEWLINE = 3,TAB = 4,};
enum MACRO_NFSCLNT {NFSCLNT_LOCKDANS = 0x200,NFSCLNT_LOCKDNOTIFY = 0x400,};
enum MACRO_NFSPROC {NFSPROC_NULL = 0,NFSPROC_GETATTR = 1,NFSPROC_SETATTR = 2,NFSPROC_LOOKUP = 3,NFSPROC_ACCESS = 4,NFSPROC_READLINK = 5,NFSPROC_READ = 6,NFSPROC_WRITE = 7,NFSPROC_CREATE = 8,NFSPROC_MKDIR = 9,NFSPROC_SYMLINK = 10,NFSPROC_MKNOD = 11,NFSPROC_REMOVE = 12,NFSPROC_RMDIR = 13,NFSPROC_RENAME = 14,NFSPROC_LINK = 15,NFSPROC_READDIR = 16,NFSPROC_READDIRPLUS = 17,NFSPROC_FSSTAT = 18,NFSPROC_FSINFO = 19,NFSPROC_PATHCONF = 20,NFSPROC_COMMIT = 21,NFSPROC_NOOP = 22,};
enum MACRO_NGROUPS {NGROUPS = 16,NOFILE = 256,};
enum MACRO_NL_SETD {NL_SETD = 1,NL_CAT_LOCALE = 1,};
enum MACRO_NOGROUP {NOGROUP = 65535,};
enum MACRO_NULLOBJ {NULLOBJ = 5,};
enum MACRO_N_BNSYM {N_BNSYM = 0x2E,N_OPT = 0x3C,N_ENSYM = 0x4E,N_OSO = 0x66,N_PARAMS = 0x86,N_VERSION = 0x88,N_OLEVEL = 0x8A,};
enum MACRO_NeXTBSD {NeXTBSD = 1995064,};
enum MACRO_OARMAG1 {OARMAG1 = 0xFF6D,};
enum MACRO_OARMAG2 {OARMAG2 = 0xFF65,};
enum MACRO_ODBCVER {ODBCVER = 0x351,};
enum MACRO_OPENDEV {OPENDEV_PART = 0x1,OPENDEV_BLCK = 0x4,};
enum MACRO_OPENPAM {OPENPAM_VERSION = 20071221,};
enum MACRO_OPENSSL {OPENSSL_HAVE_INIT = 1,};
enum MACRO_ORDINAL {SELF_LIBRARY_ORDINAL = 0x0,MAX_LIBRARY_ORDINAL = 0xFD,DYNAMIC_LOOKUP_ORDINAL = 0xFE,EXECUTABLE_ORDINAL = 0xFF,};
enum MACRO_OSTYPES {OSTYPES_K64_REV = 2,};
enum MACRO_O_POPUP {O_POPUP = 0x80000000,O_ALERT = 0x20000000,};
enum MACRO_PERSIST {PERSIST_TIMEOUT = 0x40,};
enum MACRO_PFKEYV2 {PFKEYV2_REVISION = 199806,};
enum MACRO_PGOFSET {PGOFSET = 4095,};
enum MACRO_PGSHIFT {PGSHIFT = 12,};
enum MACRO_PIDLOCK {PIDLOCK_NONBLOCK = 1,PIDLOCK_USEHOSTNAME = 2,};
enum MACRO_PKCS7_F {PKCS7_F_B64_READ_PKCS7 = 120,PKCS7_F_B64_WRITE_PKCS7 = 121,PKCS7_F_PKCS7_ADD_ATTRIB_SMIMECAP = 118,PKCS7_F_PKCS7_ADD_CERTIFICATE = 100,PKCS7_F_PKCS7_ADD_CRL = 101,PKCS7_F_PKCS7_ADD_RECIPIENT_INFO = 102,PKCS7_F_PKCS7_ADD_SIGNER = 103,PKCS7_F_PKCS7_BIO_ADD_DIGEST = 125,PKCS7_F_PKCS7_CTRL = 104,PKCS7_F_PKCS7_DATADECODE = 112,PKCS7_F_PKCS7_DATAFINAL = 128,PKCS7_F_PKCS7_DATAINIT = 105,PKCS7_F_PKCS7_DATASIGN = 106,PKCS7_F_PKCS7_DATAVERIFY = 107,PKCS7_F_PKCS7_DECRYPT = 114,PKCS7_F_PKCS7_ENCRYPT = 115,PKCS7_F_PKCS7_FIND_DIGEST = 127,PKCS7_F_PKCS7_GET0_SIGNERS = 124,PKCS7_F_PKCS7_SET_CIPHER = 108,PKCS7_F_PKCS7_SET_CONTENT = 109,PKCS7_F_PKCS7_SET_DIGEST = 126,PKCS7_F_PKCS7_SET_TYPE = 110,PKCS7_F_PKCS7_SIGN = 116,PKCS7_F_PKCS7_SIGNATUREVERIFY = 113,PKCS7_F_PKCS7_SIMPLE_SMIMECAP = 119,PKCS7_F_PKCS7_VERIFY = 117,PKCS7_F_SMIME_READ_PKCS7 = 122,PKCS7_F_SMIME_TEXT = 123,PKCS7_R_CERTIFICATE_VERIFY_ERROR = 117,PKCS7_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER = 144,PKCS7_R_CIPHER_NOT_INITIALIZED = 116,PKCS7_R_CONTENT_AND_DATA_PRESENT = 118,PKCS7_R_DECODE_ERROR = 130,PKCS7_R_DECRYPTED_KEY_IS_WRONG_LENGTH = 100,PKCS7_R_DECRYPT_ERROR = 119,PKCS7_R_DIGEST_FAILURE = 101,PKCS7_R_ERROR_ADDING_RECIPIENT = 120,PKCS7_R_ERROR_SETTING_CIPHER = 121,PKCS7_R_INVALID_MIME_TYPE = 131,PKCS7_R_INVALID_NULL_POINTER = 143,PKCS7_R_MIME_NO_CONTENT_TYPE = 132,PKCS7_R_MIME_PARSE_ERROR = 133,PKCS7_R_MIME_SIG_PARSE_ERROR = 134,PKCS7_R_MISSING_CERIPEND_INFO = 103,PKCS7_R_NO_CONTENT = 122,PKCS7_R_NO_CONTENT_TYPE = 135,PKCS7_R_NO_MULTIPART_BODY_FAILURE = 136,PKCS7_R_NO_MULTIPART_BOUNDARY = 137,PKCS7_R_NO_RECIPIENT_MATCHES_CERTIFICATE = 115,PKCS7_R_NO_RECIPIENT_MATCHES_KEY = 146,PKCS7_R_NO_SIGNATURES_ON_DATA = 123,PKCS7_R_NO_SIGNERS = 142,PKCS7_R_NO_SIG_CONTENT_TYPE = 138,PKCS7_R_OPERATION_NOT_SUPPORTED_ON_THIS_TYPE = 104,PKCS7_R_PKCS7_ADD_SIGNATURE_ERROR = 124,PKCS7_R_PKCS7_DATAFINAL = 126,PKCS7_R_PKCS7_DATAFINAL_ERROR = 125,PKCS7_R_PKCS7_DATASIGN = 145,PKCS7_R_PKCS7_PARSE_ERROR = 139,PKCS7_R_PKCS7_SIG_PARSE_ERROR = 140,PKCS7_R_PRIVATE_KEY_DOES_NOT_MATCH_CERTIFICATE = 127,PKCS7_R_SIGNATURE_FAILURE = 105,PKCS7_R_SIGNER_CERTIFICATE_NOT_FOUND = 128,PKCS7_R_SIG_INVALID_MIME_TYPE = 141,PKCS7_R_SMIME_TEXT_ERROR = 129,PKCS7_R_UNABLE_TO_FIND_CERTIFICATE = 106,PKCS7_R_UNABLE_TO_FIND_MEM_BIO = 107,PKCS7_R_UNABLE_TO_FIND_MESSAGE_DIGEST = 108,PKCS7_R_UNKNOWN_DIGEST_TYPE = 109,PKCS7_R_UNKNOWN_OPERATION = 110,PKCS7_R_UNSUPPORTED_CIPHER_TYPE = 111,PKCS7_R_UNSUPPORTED_CONTENT_TYPE = 112,PKCS7_R_WRONG_CONTENT_TYPE = 113,PKCS7_R_WRONG_PKCS7_TYPE = 114,};
enum MACRO_PKTSIZE {PKTSIZE = 516,};
enum MACRO_POLLERR {POLLERR = 0x8,POLLHUP = 0x10,POLLNVAL = 0x20,};
enum MACRO_PPPDISC {PPPDISC = 5,};
enum MACRO_PRIMASK {PRIMASK = 0xFF,PCATCH = 0x100,PTTYBLOCK = 0x200,PDROP = 0x400,PSPIN = 0x800,};
enum MACRO_PROCESS {INIT_PROCESS = 5,LOGIN_PROCESS = 6,USER_PROCESS = 7,DEAD_PROCESS = 8,};
enum MACRO_PROC_FP {PROC_FP_SHARED = 1,PROC_FP_CLEXEC = 2,};
enum MACRO_PROFILE {PROFILE_ITER_LIST_SECTION = 0x1,PROFILE_ITER_SECTIONS_ONLY = 0x2,PROFILE_ITER_RELATIONS_ONLY = 0x4,};
enum MACRO_PR_ORIG {PR_ORIG_RA = 0,PR_ORIG_RR = 1,PR_ORIG_STATIC = 2,PR_ORIG_KERNEL = 3,};
enum MACRO_PTHREAD {PTHREAD_DESTRUCTOR_ITERATIONS = 4,PTHREAD_KEYS_MAX = 512,PTHREAD_STACK_MIN = 8192,};
enum MACRO_PTRDIFF {PTRDIFF_MIN = -9223372036854775808,PTRDIFF_MAX = 9223372036854775807,};
enum MACRO_REQUEST {REQUEST_IS_DELEGATED = 1,REQUEST_IS_NOT_DELEGATED = 0,};
enum MACRO_REQ_MSG {GET_REQ_MSG = 160,GETNEXT_REQ_MSG = 161,GET_RSP_MSG = 162,SET_REQ_MSG = 163,TRP_REQ_MSG = 164,BULK_REQ_MSG = 165,INFORM_REQ_MSG = 166,TRP2_REQ_MSG = 167,REPORT_RSP_MSG = 168,};
enum MACRO_RPCAUTH {RPCAUTH_NULL = 0,RPCAUTH_NONE = 0,RPCAUTH_UNIX = 1,RPCAUTH_SYS = 1,RPCAUTH_SHORT = 2,RPCAUTH_KERB4 = 4,RPCAUTH_KRB5 = 390003,RPCAUTH_KRB5I = 390004,RPCAUTH_KRB5P = 390005,RPCAUTH_INVALID = -1,RPCAUTH_UNKNOWN = -1,RPCAUTH_MAXSIZ = 400,RPCAUTH_UNIXGIDS = 16,};
enum MACRO_RPCPROG {RPCPROG_MNT = 100005,};
enum MACRO_RPCTEST {RPCTEST_PROGRAM = 1,RPCTEST_VERSION = 1,RPCTEST_NULL_PROC = 2,RPCTEST_NULL_BATCH_PROC = 3,};
enum MACRO_RPC_MSG {RPC_MSG_VERSION = 2,RPC_SERVICE_PORT = 2048,RPC_ANYSOCK = -1,};
enum MACRO_R_FIRST {R_FIRST = 3,R_IAFTER = 4,R_IBEFORE = 5,R_LAST = 6,R_NEXT = 7,R_NOOVERWRITE = 8,R_PREV = 9,R_SETCURSOR = 10,R_RECNOSYNC = 11,};
enum MACRO_SECTION {SECTION_TYPE = 0xFF,SECTION_ATTRIBUTES = 0xFFFFFF00,};
enum MACRO_SEGSIZE {SEGSIZE = 512,};
enum MACRO_SNMPERR {SNMPERR_SUCCESS = 0,SNMPERR_GENERR = -1,SNMPERR_BAD_LOCPORT = -2,SNMPERR_BAD_ADDRESS = -3,SNMPERR_BAD_SESSION = -4,SNMPERR_TOO_LONG = -5,SNMPERR_NO_SOCKET = -6,SNMPERR_V2_IN_V1 = -7,SNMPERR_V1_IN_V2 = -8,SNMPERR_BAD_REPEATERS = -9,SNMPERR_BAD_REPETITIONS = -10,SNMPERR_BAD_ASN1_BUILD = -11,SNMPERR_BAD_SENDTO = -12,SNMPERR_BAD_PARSE = -13,SNMPERR_BAD_VERSION = -14,SNMPERR_BAD_SRC_PARTY = -15,SNMPERR_BAD_DST_PARTY = -16,SNMPERR_BAD_CONTEXT = -17,SNMPERR_BAD_COMMUNITY = -18,SNMPERR_NOAUTH_DESPRIV = -19,SNMPERR_BAD_ACL = -20,SNMPERR_BAD_PARTY = -21,SNMPERR_ABORT = -22,SNMPERR_UNKNOWN_PDU = -23,SNMPERR_TIMEOUT = -24,SNMPERR_BAD_RECVFROM = -25,SNMPERR_BAD_ENG_ID = -26,SNMPERR_BAD_SEC_NAME = -27,SNMPERR_BAD_SEC_LEVEL = -28,SNMPERR_ASN_PARSE_ERR = -29,SNMPERR_UNKNOWN_SEC_MODEL = -30,SNMPERR_INVALID_MSG = -31,SNMPERR_UNKNOWN_ENG_ID = -32,SNMPERR_UNKNOWN_USER_NAME = -33,SNMPERR_UNSUPPORTED_SEC_LEVEL = -34,SNMPERR_AUTHENTICATION_FAILURE = -35,SNMPERR_NOT_IN_TIME_WINDOW = -36,SNMPERR_DECRYPTION_ERR = -37,SNMPERR_SC_GENERAL_FAILURE = -38,SNMPERR_SC_NOT_CONFIGURED = -39,SNMPERR_KT_NOT_AVAILABLE = -40,SNMPERR_UNKNOWN_REPORT = -41,SNMPERR_USM_GENERICERROR = -42,SNMPERR_USM_UNKNOWNSECURITYNAME = -43,SNMPERR_USM_UNSUPPORTEDSECURITYLEVEL = -44,SNMPERR_USM_ENCRYPTIONERROR = -45,SNMPERR_USM_AUTHENTICATIONFAILURE = -46,SNMPERR_USM_PARSEERROR = -47,SNMPERR_USM_UNKNOWNENGINEID = -48,SNMPERR_USM_NOTINTIMEWINDOW = -49,SNMPERR_USM_DECRYPTIONERROR = -50,SNMPERR_NOMIB = -51,SNMPERR_RANGE = -52,SNMPERR_MAX_SUBID = -53,SNMPERR_BAD_SUBID = -54,SNMPERR_LONG_OID = -55,SNMPERR_BAD_NAME = -56,SNMPERR_VALUE = -57,SNMPERR_UNKNOWN_OBJID = -58,SNMPERR_NULL_PDU = -59,SNMPERR_NO_VARS = -60,SNMPERR_VAR_TYPE = -61,SNMPERR_MALLOC = -62,SNMPERR_KRB5 = -63,SNMPERR_PROTOCOL = -64,SNMPERR_OID_NONINCREASING = -65,SNMPERR_JUST_A_CONTEXT_PROBE = -66,SNMPERR_TRANSPORT_NO_CONFIG = -67,SNMPERR_TRANSPORT_CONFIG_ERROR = -68,SNMPERR_TLS_NO_CERTIFICATE = -69,SNMPERR_MAX = -69,};
enum MACRO_SQLITE3 {SQLITE3_TEXT = 3,};
enum MACRO_SQL_MAX {SQL_MAX_NUMERIC_LEN = 16,SQL_MAX_MESSAGE_LENGTH = 512,SQL_HANDLE_ENV = 1,SQL_HANDLE_DBC = 2,SQL_HANDLE_STMT = 3,SQL_HANDLE_DESC = 4,SQL_SUCCESS = 0,SQL_SUCCESS_WITH_INFO = 1,SQL_STILL_EXECUTING = 2,SQL_ERROR = -1,SQL_INVALID_HANDLE = -2,SQL_NEED_DATA = 99,SQL_NO_DATA = 100,SQL_NULL_DATA = -1,SQL_DATA_AT_EXEC = -2,SQL_NTS = -3,SQL_NTSL = -3,SQL_UNKNOWN_TYPE = 0,SQL_CHAR = 1,SQL_NUMERIC = 2,SQL_DECIMAL = 3,SQL_INTEGER = 4,SQL_SMALLINT = 5,SQL_FLOAT = 6,SQL_REAL = 7,SQL_DOUBLE = 8,SQL_DATETIME = 9,SQL_VARCHAR = 12,SQL_ALL_TYPES = 0,SQL_TYPE_DATE = 91,SQL_TYPE_TIME = 92,SQL_TYPE_TIMESTAMP = 93,SQL_DATE_LEN = 10,SQL_TIME_LEN = 8,SQL_TIMESTAMP_LEN = 19,SQL_NO_NULLS = 0,SQL_NULLABLE = 1,SQL_NULLABLE_UNKNOWN = 2,SQL_NULL_HENV = 0,SQL_NULL_HDBC = 0,SQL_NULL_HSTMT = 0,SQL_NULL_HDESC = 0,SQL_NULL_HANDLE = 0,SQL_FALSE = 0,SQL_TRUE = 1,SQL_DEFAULT = 99,SQL_FETCH_NEXT = 1,SQL_FETCH_FIRST = 2,SQL_FETCH_LAST = 3,SQL_FETCH_PRIOR = 4,SQL_FETCH_ABSOLUTE = 5,SQL_FETCH_RELATIVE = 6,SQL_CLOSE = 0,SQL_DROP = 1,SQL_UNBIND = 2,SQL_RESET_PARAMS = 3,SQL_ATTR_AUTO_IPD = 10001,SQL_ATTR_METADATA_ID = 10014,SQL_ARD_TYPE = -99,SQL_DESC_COUNT = 1001,SQL_DESC_TYPE = 1002,SQL_DESC_LENGTH = 1003,SQL_DESC_OCTET_LENGTH_PTR = 1004,SQL_DESC_PRECISION = 1005,SQL_DESC_SCALE = 1006,SQL_DESC_DATETIME_INTERVAL_CODE = 1007,SQL_DESC_NULLABLE = 1008,SQL_DESC_INDICATOR_PTR = 1009,SQL_DESC_DATA_PTR = 1010,SQL_DESC_NAME = 1011,SQL_DESC_UNNAMED = 1012,SQL_DESC_OCTET_LENGTH = 1013,SQL_DESC_ALLOC_TYPE = 1099,SQL_DESC_ALLOC_AUTO = 1,SQL_DESC_ALLOC_USER = 2,SQL_CODE_DATE = 1,SQL_CODE_TIME = 2,SQL_CODE_TIMESTAMP = 3,SQL_NAMED = 0,SQL_UNNAMED = 1,SQL_DIAG_RETURNCODE = 1,SQL_DIAG_NUMBER = 2,SQL_DIAG_ROW_COUNT = 3,SQL_DIAG_SQLSTATE = 4,SQL_DIAG_NATIVE = 5,SQL_DIAG_MESSAGE_TEXT = 6,SQL_DIAG_DYNAMIC_FUNCTION = 7,SQL_DIAG_CLASS_ORIGIN = 8,SQL_DIAG_SUBCLASS_ORIGIN = 9,SQL_DIAG_CONNECTION_NAME = 10,SQL_DIAG_SERVER_NAME = 11,SQL_DIAG_DYNAMIC_FUNCTION_CODE = 12,SQL_DIAG_ALTER_DOMAIN = 3,SQL_DIAG_ALTER_TABLE = 4,SQL_DIAG_CALL = 7,SQL_DIAG_CREATE_ASSERTION = 6,SQL_DIAG_CREATE_CHARACTER_SET = 8,SQL_DIAG_CREATE_COLLATION = 10,SQL_DIAG_CREATE_DOMAIN = 23,SQL_DIAG_CREATE_INDEX = -1,SQL_DIAG_CREATE_SCHEMA = 64,SQL_DIAG_CREATE_TABLE = 77,SQL_DIAG_CREATE_TRANSLATION = 79,SQL_DIAG_CREATE_VIEW = 84,SQL_DIAG_DELETE_WHERE = 19,SQL_DIAG_DROP_ASSERTION = 24,SQL_DIAG_DROP_CHARACTER_SET = 25,SQL_DIAG_DROP_COLLATION = 26,SQL_DIAG_DROP_DOMAIN = 27,SQL_DIAG_DROP_INDEX = -2,SQL_DIAG_DROP_SCHEMA = 31,SQL_DIAG_DROP_TABLE = 32,SQL_DIAG_DROP_TRANSLATION = 33,SQL_DIAG_DROP_VIEW = 36,SQL_DIAG_DYNAMIC_DELETE_CURSOR = 38,SQL_DIAG_DYNAMIC_UPDATE_CURSOR = 81,SQL_DIAG_GRANT = 48,SQL_DIAG_INSERT = 50,SQL_DIAG_REVOKE = 59,SQL_DIAG_SELECT_CURSOR = 85,SQL_DIAG_UNKNOWN_STATEMENT = 0,SQL_DIAG_UPDATE_WHERE = 82,SQL_ATTR_OUTPUT_NTS = 10001,SQL_API_SQLALLOCCONNECT = 1,SQL_API_SQLALLOCENV = 2,SQL_API_SQLALLOCHANDLE = 1001,SQL_API_SQLALLOCSTMT = 3,SQL_API_SQLBINDCOL = 4,SQL_API_SQLBINDPARAM = 1002,SQL_API_SQLCANCEL = 5,SQL_API_SQLCLOSECURSOR = 1003,SQL_API_SQLCOLATTRIBUTE = 6,SQL_API_SQLCOLUMNS = 40,SQL_API_SQLCONNECT = 7,SQL_API_SQLCOPYDESC = 1004,SQL_API_SQLDATASOURCES = 57,SQL_API_SQLDESCRIBECOL = 8,SQL_API_SQLDISCONNECT = 9,SQL_API_SQLENDTRAN = 1005,SQL_API_SQLERROR = 10,SQL_API_SQLEXECDIRECT = 11,SQL_API_SQLEXECUTE = 12,SQL_API_SQLFETCH = 13,SQL_API_SQLFETCHSCROLL = 1021,SQL_API_SQLFREECONNECT = 14,SQL_API_SQLFREEENV = 15,SQL_API_SQLFREEHANDLE = 1006,SQL_API_SQLFREESTMT = 16,SQL_API_SQLGETCONNECTATTR = 1007,SQL_API_SQLGETCONNECTOPTION = 42,SQL_API_SQLGETCURSORNAME = 17,SQL_API_SQLGETDATA = 43,SQL_API_SQLGETDESCFIELD = 1008,SQL_API_SQLGETDESCREC = 1009,SQL_API_SQLGETDIAGFIELD = 1010,SQL_API_SQLGETDIAGREC = 1011,SQL_API_SQLGETENVATTR = 1012,SQL_API_SQLGETFUNCTIONS = 44,SQL_API_SQLGETINFO = 45,SQL_API_SQLGETSTMTATTR = 1014,SQL_API_SQLGETSTMTOPTION = 46,SQL_API_SQLGETTYPEINFO = 47,SQL_API_SQLNUMRESULTCOLS = 18,SQL_API_SQLPARAMDATA = 48,SQL_API_SQLPREPARE = 19,SQL_API_SQLPUTDATA = 49,SQL_API_SQLROWCOUNT = 20,SQL_API_SQLSETCONNECTATTR = 1016,SQL_API_SQLSETCONNECTOPTION = 50,SQL_API_SQLSETCURSORNAME = 21,SQL_API_SQLSETDESCFIELD = 1017,SQL_API_SQLSETDESCREC = 1018,SQL_API_SQLSETENVATTR = 1019,SQL_API_SQLSETPARAM = 22,SQL_API_SQLSETSTMTATTR = 1020,SQL_API_SQLSETSTMTOPTION = 51,SQL_API_SQLSPECIALCOLUMNS = 52,SQL_API_SQLSTATISTICS = 53,SQL_API_SQLTABLES = 54,SQL_API_SQLTRANSACT = 23,SQL_MAX_DRIVER_CONNECTIONS = 0,SQL_MAXIMUM_DRIVER_CONNECTIONS = 0,SQL_MAX_CONCURRENT_ACTIVITIES = 1,SQL_MAXIMUM_CONCURRENT_ACTIVITIES = 1,SQL_DATA_SOURCE_NAME = 2,SQL_FETCH_DIRECTION = 8,SQL_SERVER_NAME = 13,SQL_SEARCH_PATTERN_ESCAPE = 14,SQL_DBMS_NAME = 17,SQL_DBMS_VER = 18,SQL_ACCESSIBLE_TABLES = 19,SQL_ACCESSIBLE_PROCEDURES = 20,SQL_CURSOR_COMMIT_BEHAVIOR = 23,SQL_DATA_SOURCE_READ_ONLY = 25,SQL_DEFAULT_TXN_ISOLATION = 26,SQL_IDENTIFIER_CASE = 28,SQL_IDENTIFIER_QUOTE_CHAR = 29,SQL_MAX_COLUMN_NAME_LEN = 30,SQL_MAXIMUM_COLUMN_NAME_LENGTH = 30,SQL_MAX_CURSOR_NAME_LEN = 31,SQL_MAXIMUM_CURSOR_NAME_LENGTH = 31,SQL_MAX_SCHEMA_NAME_LEN = 32,SQL_MAXIMUM_SCHEMA_NAME_LENGTH = 32,SQL_MAX_CATALOG_NAME_LEN = 34,SQL_MAXIMUM_CATALOG_NAME_LENGTH = 34,SQL_MAX_TABLE_NAME_LEN = 35,SQL_SCROLL_CONCURRENCY = 43,SQL_TXN_CAPABLE = 46,SQL_TRANSACTION_CAPABLE = 46,SQL_USER_NAME = 47,SQL_TXN_ISOLATION_OPTION = 72,SQL_TRANSACTION_ISOLATION_OPTION = 72,SQL_INTEGRITY = 73,SQL_GETDATA_EXTENSIONS = 81,SQL_NULL_COLLATION = 85,SQL_ALTER_TABLE = 86,SQL_ORDER_BY_COLUMNS_IN_SELECT = 90,SQL_SPECIAL_CHARACTERS = 94,SQL_MAX_COLUMNS_IN_GROUP_BY = 97,SQL_MAXIMUM_COLUMNS_IN_GROUP_BY = 97,SQL_MAX_COLUMNS_IN_INDEX = 98,SQL_MAXIMUM_COLUMNS_IN_INDEX = 98,SQL_MAX_COLUMNS_IN_ORDER_BY = 99,SQL_MAXIMUM_COLUMNS_IN_ORDER_BY = 99,SQL_MAX_COLUMNS_IN_SELECT = 100,SQL_MAXIMUM_COLUMNS_IN_SELECT = 100,SQL_MAX_COLUMNS_IN_TABLE = 101,SQL_MAX_INDEX_SIZE = 102,SQL_MAXIMUM_INDEX_SIZE = 102,SQL_MAX_ROW_SIZE = 104,SQL_MAXIMUM_ROW_SIZE = 104,SQL_MAX_STATEMENT_LEN = 105,SQL_MAXIMUM_STATEMENT_LENGTH = 105,SQL_MAX_TABLES_IN_SELECT = 106,SQL_MAXIMUM_TABLES_IN_SELECT = 106,SQL_MAX_USER_NAME_LEN = 107,SQL_MAXIMUM_USER_NAME_LENGTH = 107,SQL_OJ_CAPABILITIES = 115,SQL_OUTER_JOIN_CAPABILITIES = 115,SQL_XOPEN_CLI_YEAR = 10000,SQL_CURSOR_SENSITIVITY = 10001,SQL_DESCRIBE_PARAMETER = 10002,SQL_CATALOG_NAME = 10003,SQL_COLLATION_SEQ = 10004,SQL_MAX_IDENTIFIER_LEN = 10005,SQL_MAXIMUM_IDENTIFIER_LENGTH = 10005,SQL_AT_ADD_COLUMN = 1,SQL_AT_DROP_COLUMN = 2,SQL_AT_ADD_CONSTRAINT = 8,SQL_AM_NONE = 0,SQL_AM_CONNECTION = 1,SQL_AM_STATEMENT = 2,SQL_CB_DELETE = 0,SQL_CB_CLOSE = 1,SQL_CB_PRESERVE = 2,SQL_FD_FETCH_NEXT = 1,SQL_FD_FETCH_FIRST = 2,SQL_FD_FETCH_LAST = 4,SQL_FD_FETCH_PRIOR = 8,SQL_FD_FETCH_ABSOLUTE = 16,SQL_FD_FETCH_RELATIVE = 32,SQL_GD_ANY_COLUMN = 1,SQL_GD_ANY_ORDER = 2,SQL_IC_UPPER = 1,SQL_IC_LOWER = 2,SQL_IC_SENSITIVE = 3,SQL_IC_MIXED = 4,SQL_NC_HIGH = 0,SQL_NC_LOW = 1,SQL_OJ_LEFT = 1,SQL_OJ_RIGHT = 2,SQL_OJ_FULL = 4,SQL_OJ_NESTED = 8,SQL_OJ_NOT_ORDERED = 16,SQL_OJ_INNER = 32,SQL_OJ_ALL_COMPARISON_OPS = 64,SQL_SCCO_READ_ONLY = 1,SQL_SCCO_LOCK = 2,SQL_SCCO_OPT_ROWVER = 4,SQL_SCCO_OPT_VALUES = 8,SQL_TC_NONE = 0,SQL_TC_DML = 1,SQL_TC_ALL = 2,SQL_TC_DDL_COMMIT = 3,SQL_TC_DDL_IGNORE = 4,SQL_TXN_READ_UNCOMMITTED = 1,SQL_TRANSACTION_READ_UNCOMMITTED = 1,SQL_TXN_READ_COMMITTED = 2,SQL_TRANSACTION_READ_COMMITTED = 2,SQL_TXN_REPEATABLE_READ = 4,SQL_TRANSACTION_REPEATABLE_READ = 4,SQL_TXN_SERIALIZABLE = 8,SQL_TRANSACTION_SERIALIZABLE = 8,SQL_ATTR_APP_ROW_DESC = 10010,SQL_ATTR_APP_PARAM_DESC = 10011,SQL_ATTR_IMP_ROW_DESC = 10012,SQL_ATTR_IMP_PARAM_DESC = 10013,SQL_ATTR_CURSOR_SCROLLABLE = -1,SQL_ATTR_CURSOR_SENSITIVITY = -2,SQL_NONSCROLLABLE = 0,SQL_SCROLLABLE = 1,SQL_UNSPECIFIED = 0,SQL_INSENSITIVE = 1,SQL_SENSITIVE = 2,SQL_PRED_NONE = 0,SQL_PRED_CHAR = 1,SQL_PRED_BASIC = 2,SQL_SCOPE_CURROW = 0,SQL_SCOPE_TRANSACTION = 1,SQL_SCOPE_SESSION = 2,SQL_PC_UNKNOWN = 0,SQL_PC_NON_PSEUDO = 1,SQL_PC_PSEUDO = 2,SQL_ROW_IDENTIFIER = 1,SQL_INDEX_UNIQUE = 0,SQL_INDEX_ALL = 1,SQL_INDEX_CLUSTERED = 1,SQL_INDEX_HASHED = 2,SQL_INDEX_OTHER = 3,SQL_COMMIT = 0,SQL_ROLLBACK = 1,SQL_SPEC_MAJOR = 3,SQL_SPEC_MINOR = 52,SQL_SQLSTATE_SIZE = 5,SQL_MAX_DSN_LENGTH = 32,SQL_MAX_OPTION_STRING_LENGTH = 256,SQL_HANDLE_SENV = 5,SQL_NO_DATA_FOUND = 100,SQL_IS_POINTER = -4,SQL_IS_UINTEGER = -5,SQL_IS_INTEGER = -6,SQL_IS_USMALLINT = -7,SQL_IS_SMALLINT = -8,SQL_DATE = 9,SQL_INTERVAL = 10,SQL_TIME = 10,SQL_TIMESTAMP = 11,SQL_LONGVARCHAR = -1,SQL_BINARY = -2,SQL_VARBINARY = -3,SQL_LONGVARBINARY = -4,SQL_BIGINT = -5,SQL_TINYINT = -6,SQL_BIT = -7,SQL_GUID = -11,SQL_CODE_YEAR = 1,SQL_CODE_MONTH = 2,SQL_CODE_DAY = 3,SQL_CODE_HOUR = 4,SQL_CODE_MINUTE = 5,SQL_CODE_SECOND = 6,SQL_CODE_YEAR_TO_MONTH = 7,SQL_CODE_DAY_TO_HOUR = 8,SQL_CODE_DAY_TO_MINUTE = 9,SQL_CODE_DAY_TO_SECOND = 10,SQL_CODE_HOUR_TO_MINUTE = 11,SQL_CODE_HOUR_TO_SECOND = 12,SQL_CODE_MINUTE_TO_SECOND = 13,SQL_INTERVAL_YEAR = 101,SQL_INTERVAL_MONTH = 102,SQL_INTERVAL_DAY = 103,SQL_INTERVAL_HOUR = 104,SQL_INTERVAL_MINUTE = 105,SQL_INTERVAL_SECOND = 106,SQL_INTERVAL_YEAR_TO_MONTH = 107,SQL_INTERVAL_DAY_TO_HOUR = 108,SQL_INTERVAL_DAY_TO_MINUTE = 109,SQL_INTERVAL_DAY_TO_SECOND = 110,SQL_INTERVAL_HOUR_TO_MINUTE = 111,SQL_INTERVAL_HOUR_TO_SECOND = 112,SQL_INTERVAL_MINUTE_TO_SECOND = 113,SQL_SIGNED_OFFSET = -20,SQL_UNSIGNED_OFFSET = -22,SQL_C_CHAR = 1,SQL_C_LONG = 4,SQL_C_SHORT = 5,SQL_C_FLOAT = 7,SQL_C_DOUBLE = 8,SQL_C_NUMERIC = 2,SQL_C_DEFAULT = 99,SQL_C_DATE = 9,SQL_C_TIME = 10,SQL_C_TIMESTAMP = 11,SQL_C_BINARY = -2,SQL_C_BIT = -7,SQL_C_TINYINT = -6,SQL_C_SLONG = -16,SQL_C_SSHORT = -15,SQL_C_STINYINT = -26,SQL_C_ULONG = -18,SQL_C_USHORT = -17,SQL_C_UTINYINT = -28,SQL_C_BOOKMARK = -18,SQL_C_TYPE_DATE = 91,SQL_C_TYPE_TIME = 92,SQL_C_TYPE_TIMESTAMP = 93,SQL_C_INTERVAL_YEAR = 101,SQL_C_INTERVAL_MONTH = 102,SQL_C_INTERVAL_DAY = 103,SQL_C_INTERVAL_HOUR = 104,SQL_C_INTERVAL_MINUTE = 105,SQL_C_INTERVAL_SECOND = 106,SQL_C_INTERVAL_YEAR_TO_MONTH = 107,SQL_C_INTERVAL_DAY_TO_HOUR = 108,SQL_C_INTERVAL_DAY_TO_MINUTE = 109,SQL_C_INTERVAL_DAY_TO_SECOND = 110,SQL_C_INTERVAL_HOUR_TO_MINUTE = 111,SQL_C_INTERVAL_HOUR_TO_SECOND = 112,SQL_C_INTERVAL_MINUTE_TO_SECOND = 113,SQL_C_SBIGINT = -25,SQL_C_UBIGINT = -27,SQL_C_VARBOOKMARK = -2,SQL_C_GUID = -11,SQL_TYPE_NULL = 0,SQL_DEFAULT_PARAM = -5,SQL_IGNORE = -6,SQL_COLUMN_IGNORE = -6,SQL_LEN_DATA_AT_EXEC_OFFSET = -100,SQL_LEN_BINARY_ATTR_OFFSET = -100,SQL_COLUMN_COUNT = 0,SQL_COLUMN_NAME = 1,SQL_COLUMN_TYPE = 2,SQL_COLUMN_LENGTH = 3,SQL_COLUMN_PRECISION = 4,SQL_COLUMN_SCALE = 5,SQL_COLUMN_DISPLAY_SIZE = 6,SQL_COLUMN_NULLABLE = 7,SQL_COLUMN_UNSIGNED = 8,SQL_COLUMN_MONEY = 9,SQL_COLUMN_UPDATABLE = 10,SQL_COLUMN_AUTO_INCREMENT = 11,SQL_COLUMN_CASE_SENSITIVE = 12,SQL_COLUMN_SEARCHABLE = 13,SQL_COLUMN_TYPE_NAME = 14,SQL_COLUMN_TABLE_NAME = 15,SQL_COLUMN_OWNER_NAME = 16,SQL_COLUMN_QUALIFIER_NAME = 17,SQL_COLUMN_LABEL = 18,SQL_COLATT_OPT_MAX = 18,SQL_COLATT_OPT_MIN = 0,SQL_ATTR_READONLY = 0,SQL_ATTR_WRITE = 1,SQL_ATTR_READWRITE_UNKNOWN = 2,SQL_UNSEARCHABLE = 0,SQL_LIKE_ONLY = 1,SQL_ALL_EXCEPT_LIKE = 2,SQL_SEARCHABLE = 3,SQL_PRED_SEARCHABLE = 3,SQL_FETCH_FIRST_USER = 31,SQL_FETCH_FIRST_SYSTEM = 32,SQL_DRIVER_NOPROMPT = 0,SQL_DRIVER_COMPLETE = 1,SQL_DRIVER_PROMPT = 2,SQL_DRIVER_COMPLETE_REQUIRED = 3,SQL_ACCESS_MODE = 101,SQL_AUTOCOMMIT = 102,SQL_LOGIN_TIMEOUT = 103,SQL_OPT_TRACE = 104,SQL_OPT_TRACEFILE = 105,SQL_TRANSLATE_DLL = 106,SQL_TRANSLATE_OPTION = 107,SQL_TXN_ISOLATION = 108,SQL_CURRENT_QUALIFIER = 109,SQL_ODBC_CURSORS = 110,SQL_QUIET_MODE = 111,SQL_PACKET_SIZE = 112,SQL_ATTR_ACCESS_MODE = 101,SQL_ATTR_AUTOCOMMIT = 102,SQL_ATTR_CONNECTION_TIMEOUT = 113,SQL_ATTR_CURRENT_CATALOG = 109,SQL_ATTR_DISCONNECT_BEHAVIOR = 114,SQL_ATTR_LOGIN_TIMEOUT = 103,SQL_ATTR_ODBC_CURSORS = 110,SQL_ATTR_PACKET_SIZE = 112,SQL_ATTR_QUIET_MODE = 111,SQL_ATTR_TRACE = 104,SQL_ATTR_TRACEFILE = 105,SQL_ATTR_TRANSLATE_LIB = 106,SQL_ATTR_TRANSLATE_OPTION = 107,SQL_ATTR_TXN_ISOLATION = 108,SQL_MODE_READ_WRITE = 0,SQL_MODE_READ_ONLY = 1,SQL_MODE_DEFAULT = 0,SQL_AUTOCOMMIT_OFF = 0,SQL_AUTOCOMMIT_ON = 1,SQL_AUTOCOMMIT_DEFAULT = 1,SQL_LOGIN_TIMEOUT_DEFAULT = 15,SQL_CUR_USE_IF_NEEDED = 0,SQL_CUR_USE_ODBC = 1,SQL_CUR_USE_DRIVER = 2,SQL_CUR_DEFAULT = 2,SQL_OPT_TRACE_OFF = 0,SQL_OPT_TRACE_ON = 1,SQL_OPT_TRACE_DEFAULT = 0,SQL_AA_TRUE = 1,SQL_AA_FALSE = 0,SQL_CD_TRUE = 1,SQL_CD_FALSE = 0,SQL_DB_RETURN_TO_POOL = 0,SQL_DB_DISCONNECT = 1,SQL_DB_DEFAULT = 0,SQL_DTC_DONE = 0,SQL_ATTR_ANSI_APP = 115,SQL_NO_TOTAL = -4,SQL_DESC_ARRAY_SIZE = 20,SQL_DESC_ARRAY_STATUS_PTR = 21,SQL_DESC_AUTO_UNIQUE_VALUE = 11,SQL_DESC_BASE_COLUMN_NAME = 22,SQL_DESC_BASE_TABLE_NAME = 23,SQL_DESC_BIND_OFFSET_PTR = 24,SQL_DESC_BIND_TYPE = 25,SQL_DESC_CASE_SENSITIVE = 12,SQL_DESC_CATALOG_NAME = 17,SQL_DESC_CONCISE_TYPE = 2,SQL_DESC_DATETIME_INTERVAL_PRECISION = 26,SQL_DESC_DISPLAY_SIZE = 6,SQL_DESC_FIXED_PREC_SCALE = 9,SQL_DESC_LABEL = 18,SQL_DESC_LITERAL_PREFIX = 27,SQL_DESC_LITERAL_SUFFIX = 28,SQL_DESC_LOCAL_TYPE_NAME = 29,SQL_DESC_MAXIMUM_SCALE = 30,SQL_DESC_MINIMUM_SCALE = 31,SQL_DESC_NUM_PREC_RADIX = 32,SQL_DESC_PARAMETER_TYPE = 33,SQL_DESC_ROWS_PROCESSED_PTR = 34,SQL_DESC_ROWVER = 35,SQL_DESC_SCHEMA_NAME = 16,SQL_DESC_SEARCHABLE = 13,SQL_DESC_TYPE_NAME = 14,SQL_DESC_TABLE_NAME = 15,SQL_DESC_UNSIGNED = 8,SQL_DESC_UPDATABLE = 10,SQL_DIAG_CURSOR_ROW_COUNT = -1249,SQL_DIAG_ROW_NUMBER = -1248,SQL_DIAG_COLUMN_NUMBER = -1247,SQL_NO_ROW_NUMBER = -1,SQL_NO_COLUMN_NUMBER = -1,SQL_ROW_NUMBER_UNKNOWN = -2,SQL_COLUMN_NUMBER_UNKNOWN = -2,SQL_ATTR_ODBC_VERSION = 200,SQL_ATTR_CONNECTION_POOLING = 201,SQL_ATTR_CP_MATCH = 202,SQL_OV_ODBC2 = 2,SQL_OV_ODBC3 = 3,SQL_CP_OFF = 0,SQL_CP_ONE_PER_DRIVER = 1,SQL_CP_ONE_PER_HENV = 2,SQL_CP_DEFAULT = 0,SQL_CP_STRICT_MATCH = 0,SQL_CP_RELAXED_MATCH = 1,SQL_CP_MATCH_DEFAULT = 0,SQL_API_SQLALLOCHANDLESTD = 73,SQL_API_SQLBULKOPERATIONS = 24,SQL_API_SQLBINDPARAMETER = 72,SQL_API_SQLBROWSECONNECT = 55,SQL_API_SQLCOLATTRIBUTES = 6,SQL_API_SQLCOLUMNPRIVILEGES = 56,SQL_API_SQLDESCRIBEPARAM = 58,SQL_API_SQLDRIVERCONNECT = 41,SQL_API_SQLDRIVERS = 71,SQL_API_SQLEXTENDEDFETCH = 59,SQL_API_SQLFOREIGNKEYS = 60,SQL_API_SQLMORERESULTS = 61,SQL_API_SQLNATIVESQL = 62,SQL_API_SQLNUMPARAMS = 63,SQL_API_SQLPARAMOPTIONS = 64,SQL_API_SQLPRIMARYKEYS = 65,SQL_API_SQLPROCEDURECOLUMNS = 66,SQL_API_SQLPROCEDURES = 67,SQL_API_SQLSETPOS = 68,SQL_API_SQLSETSCROLLOPTIONS = 69,SQL_API_SQLTABLEPRIVILEGES = 70,SQL_API_ALL_FUNCTIONS = 0,SQL_API_LOADBYORDINAL = 199,SQL_API_ODBC3_ALL_FUNCTIONS = 999,SQL_API_ODBC3_ALL_FUNCTIONS_SIZE = 250,SQL_INFO_FIRST = 0,SQL_ACTIVE_CONNECTIONS = 0,SQL_ACTIVE_STATEMENTS = 1,SQL_DRIVER_HDBC = 3,SQL_DRIVER_HENV = 4,SQL_DRIVER_HSTMT = 5,SQL_DRIVER_NAME = 6,SQL_DRIVER_VER = 7,SQL_ODBC_API_CONFORMANCE = 9,SQL_ODBC_VER = 10,SQL_ROW_UPDATES = 11,SQL_ODBC_SAG_CLI_CONFORMANCE = 12,SQL_ODBC_SQL_CONFORMANCE = 15,SQL_PROCEDURES = 21,SQL_CONCAT_NULL_BEHAVIOR = 22,SQL_CURSOR_ROLLBACK_BEHAVIOR = 24,SQL_EXPRESSIONS_IN_ORDERBY = 27,SQL_MAX_OWNER_NAME_LEN = 32,SQL_MAX_PROCEDURE_NAME_LEN = 33,SQL_MAX_QUALIFIER_NAME_LEN = 34,SQL_MULT_RESULT_SETS = 36,SQL_MULTIPLE_ACTIVE_TXN = 37,SQL_OUTER_JOINS = 38,SQL_OWNER_TERM = 39,SQL_PROCEDURE_TERM = 40,SQL_QUALIFIER_NAME_SEPARATOR = 41,SQL_QUALIFIER_TERM = 42,SQL_SCROLL_OPTIONS = 44,SQL_TABLE_TERM = 45,SQL_CONVERT_FUNCTIONS = 48,SQL_NUMERIC_FUNCTIONS = 49,SQL_STRING_FUNCTIONS = 50,SQL_SYSTEM_FUNCTIONS = 51,SQL_TIMEDATE_FUNCTIONS = 52,SQL_CONVERT_BIGINT = 53,SQL_CONVERT_BINARY = 54,SQL_CONVERT_BIT = 55,SQL_CONVERT_CHAR = 56,SQL_CONVERT_DATE = 57,SQL_CONVERT_DECIMAL = 58,SQL_CONVERT_DOUBLE = 59,SQL_CONVERT_FLOAT = 60,SQL_CONVERT_INTEGER = 61,SQL_CONVERT_LONGVARCHAR = 62,SQL_CONVERT_NUMERIC = 63,SQL_CONVERT_REAL = 64,SQL_CONVERT_SMALLINT = 65,SQL_CONVERT_TIME = 66,SQL_CONVERT_TIMESTAMP = 67,SQL_CONVERT_TINYINT = 68,SQL_CONVERT_VARBINARY = 69,SQL_CONVERT_VARCHAR = 70,SQL_CONVERT_LONGVARBINARY = 71,SQL_ODBC_SQL_OPT_IEF = 73,SQL_CORRELATION_NAME = 74,SQL_NON_NULLABLE_COLUMNS = 75,SQL_DRIVER_HLIB = 76,SQL_DRIVER_ODBC_VER = 77,SQL_LOCK_TYPES = 78,SQL_POS_OPERATIONS = 79,SQL_POSITIONED_STATEMENTS = 80,SQL_BOOKMARK_PERSISTENCE = 82,SQL_STATIC_SENSITIVITY = 83,SQL_FILE_USAGE = 84,SQL_COLUMN_ALIAS = 87,SQL_GROUP_BY = 88,SQL_KEYWORDS = 89,SQL_OWNER_USAGE = 91,SQL_QUALIFIER_USAGE = 92,SQL_QUOTED_IDENTIFIER_CASE = 93,SQL_SUBQUERIES = 95,SQL_UNION = 96,SQL_MAX_ROW_SIZE_INCLUDES_LONG = 103,SQL_MAX_CHAR_LITERAL_LEN = 108,SQL_TIMEDATE_ADD_INTERVALS = 109,SQL_TIMEDATE_DIFF_INTERVALS = 110,SQL_NEED_LONG_DATA_LEN = 111,SQL_MAX_BINARY_LITERAL_LEN = 112,SQL_LIKE_ESCAPE_CLAUSE = 113,SQL_QUALIFIER_LOCATION = 114,SQL_ACTIVE_ENVIRONMENTS = 116,SQL_ALTER_DOMAIN = 117,SQL_SQL_CONFORMANCE = 118,SQL_DATETIME_LITERALS = 119,SQL_ASYNC_MODE = 10021,SQL_BATCH_ROW_COUNT = 120,SQL_BATCH_SUPPORT = 121,SQL_CATALOG_LOCATION = 114,SQL_CATALOG_NAME_SEPARATOR = 41,SQL_CATALOG_TERM = 42,SQL_CATALOG_USAGE = 92,SQL_CONVERT_WCHAR = 122,SQL_CONVERT_INTERVAL_DAY_TIME = 123,SQL_CONVERT_INTERVAL_YEAR_MONTH = 124,SQL_CONVERT_WLONGVARCHAR = 125,SQL_CONVERT_WVARCHAR = 126,SQL_CREATE_ASSERTION = 127,SQL_CREATE_CHARACTER_SET = 128,SQL_CREATE_COLLATION = 129,SQL_CREATE_DOMAIN = 130,SQL_CREATE_SCHEMA = 131,SQL_CREATE_TABLE = 132,SQL_CREATE_TRANSLATION = 133,SQL_CREATE_VIEW = 134,SQL_DRIVER_HDESC = 135,SQL_DROP_ASSERTION = 136,SQL_DROP_CHARACTER_SET = 137,SQL_DROP_COLLATION = 138,SQL_DROP_DOMAIN = 139,SQL_DROP_SCHEMA = 140,SQL_DROP_TABLE = 141,SQL_DROP_TRANSLATION = 142,SQL_DROP_VIEW = 143,SQL_DYNAMIC_CURSOR_ATTRIBUTES1 = 144,SQL_DYNAMIC_CURSOR_ATTRIBUTES2 = 145,SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1 = 146,SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2 = 147,SQL_INDEX_KEYWORDS = 148,SQL_INFO_SCHEMA_VIEWS = 149,SQL_KEYSET_CURSOR_ATTRIBUTES1 = 150,SQL_KEYSET_CURSOR_ATTRIBUTES2 = 151,SQL_MAX_ASYNC_CONCURRENT_STATEMENTS = 10022,SQL_ODBC_INTERFACE_CONFORMANCE = 152,SQL_PARAM_ARRAY_ROW_COUNTS = 153,SQL_PARAM_ARRAY_SELECTS = 154,SQL_SCHEMA_TERM = 39,SQL_SCHEMA_USAGE = 91,SQL_SQL92_DATETIME_FUNCTIONS = 155,SQL_SQL92_FOREIGN_KEY_DELETE_RULE = 156,SQL_SQL92_FOREIGN_KEY_UPDATE_RULE = 157,SQL_SQL92_GRANT = 158,SQL_SQL92_NUMERIC_VALUE_FUNCTIONS = 159,SQL_SQL92_PREDICATES = 160,SQL_SQL92_RELATIONAL_JOIN_OPERATORS = 161,SQL_SQL92_REVOKE = 162,SQL_SQL92_ROW_VALUE_CONSTRUCTOR = 163,SQL_SQL92_STRING_FUNCTIONS = 164,SQL_SQL92_VALUE_EXPRESSIONS = 165,SQL_STANDARD_CLI_CONFORMANCE = 166,SQL_STATIC_CURSOR_ATTRIBUTES1 = 167,SQL_STATIC_CURSOR_ATTRIBUTES2 = 168,SQL_AGGREGATE_FUNCTIONS = 169,SQL_DDL_INDEX = 170,SQL_DM_VER = 171,SQL_INSERT_STATEMENT = 172,SQL_UNION_STATEMENT = 96,SQL_DTC_TRANSITION_COST = 1750,SQL_AF_AVG = 1,SQL_AF_COUNT = 2,SQL_AF_MAX = 4,SQL_AF_MIN = 8,SQL_AF_SUM = 16,SQL_AF_DISTINCT = 32,SQL_AF_ALL = 64,SQL_AD_CONSTRAINT_NAME_DEFINITION = 1,SQL_AD_ADD_DOMAIN_CONSTRAINT = 2,SQL_AD_DROP_DOMAIN_CONSTRAINT = 4,SQL_AD_ADD_DOMAIN_DEFAULT = 8,SQL_AD_DROP_DOMAIN_DEFAULT = 16,SQL_AD_ADD_CONSTRAINT_INITIALLY_DEFERRED = 32,SQL_AD_ADD_CONSTRAINT_INITIALLY_IMMEDIATE = 64,SQL_AD_ADD_CONSTRAINT_DEFERRABLE = 128,SQL_AD_ADD_CONSTRAINT_NON_DEFERRABLE = 256,SQL_AT_ADD_COLUMN_SINGLE = 32,SQL_AT_ADD_COLUMN_DEFAULT = 64,SQL_AT_ADD_COLUMN_COLLATION = 128,SQL_AT_SET_COLUMN_DEFAULT = 256,SQL_AT_DROP_COLUMN_DEFAULT = 512,SQL_AT_DROP_COLUMN_CASCADE = 1024,SQL_AT_DROP_COLUMN_RESTRICT = 2048,SQL_AT_ADD_TABLE_CONSTRAINT = 4096,SQL_AT_DROP_TABLE_CONSTRAINT_CASCADE = 8192,SQL_AT_DROP_TABLE_CONSTRAINT_RESTRICT = 16384,SQL_AT_CONSTRAINT_NAME_DEFINITION = 32768,SQL_AT_CONSTRAINT_INITIALLY_DEFERRED = 65536,SQL_AT_CONSTRAINT_INITIALLY_IMMEDIATE = 131072,SQL_AT_CONSTRAINT_DEFERRABLE = 262144,SQL_AT_CONSTRAINT_NON_DEFERRABLE = 524288,SQL_BRC_PROCEDURES = 1,SQL_BRC_EXPLICIT = 2,SQL_BRC_ROLLED_UP = 4,SQL_BS_SELECT_EXPLICIT = 1,SQL_BS_ROW_COUNT_EXPLICIT = 2,SQL_BS_SELECT_PROC = 4,SQL_BS_ROW_COUNT_PROC = 8,SQL_BP_CLOSE = 1,SQL_BP_DELETE = 2,SQL_BP_DROP = 4,SQL_BP_TRANSACTION = 8,SQL_BP_UPDATE = 16,SQL_BP_OTHER_HSTMT = 32,SQL_BP_SCROLL = 64,SQL_CB_NULL = 0,SQL_CB_NON_NULL = 1,SQL_CVT_CHAR = 1,SQL_CVT_NUMERIC = 2,SQL_CVT_DECIMAL = 4,SQL_CVT_INTEGER = 8,SQL_CVT_SMALLINT = 16,SQL_CVT_FLOAT = 32,SQL_CVT_REAL = 64,SQL_CVT_DOUBLE = 128,SQL_CVT_VARCHAR = 256,SQL_CVT_LONGVARCHAR = 512,SQL_CVT_BINARY = 1024,SQL_CVT_VARBINARY = 2048,SQL_CVT_BIT = 4096,SQL_CVT_TINYINT = 8192,SQL_CVT_BIGINT = 16384,SQL_CVT_DATE = 32768,SQL_CVT_TIME = 65536,SQL_CVT_TIMESTAMP = 131072,SQL_CVT_LONGVARBINARY = 262144,SQL_CVT_INTERVAL_YEAR_MONTH = 524288,SQL_CVT_INTERVAL_DAY_TIME = 1048576,SQL_CVT_WCHAR = 2097152,SQL_CVT_WLONGVARCHAR = 4194304,SQL_CVT_WVARCHAR = 8388608,SQL_FN_CVT_CONVERT = 1,SQL_FN_CVT_CAST = 2,SQL_CN_NONE = 0,SQL_CN_DIFFERENT = 1,SQL_CN_ANY = 2,SQL_CA_CREATE_ASSERTION = 1,SQL_CA_CONSTRAINT_INITIALLY_DEFERRED = 16,SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE = 32,SQL_CA_CONSTRAINT_DEFERRABLE = 64,SQL_CA_CONSTRAINT_NON_DEFERRABLE = 128,SQL_CCS_CREATE_CHARACTER_SET = 1,SQL_CCS_COLLATE_CLAUSE = 2,SQL_CCS_LIMITED_COLLATION = 4,SQL_CCOL_CREATE_COLLATION = 1,SQL_CDO_CREATE_DOMAIN = 1,SQL_CDO_DEFAULT = 2,SQL_CDO_CONSTRAINT = 4,SQL_CDO_COLLATION = 8,SQL_CDO_CONSTRAINT_NAME_DEFINITION = 16,SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED = 32,SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE = 64,SQL_CDO_CONSTRAINT_DEFERRABLE = 128,SQL_CDO_CONSTRAINT_NON_DEFERRABLE = 256,SQL_CS_CREATE_SCHEMA = 1,SQL_CS_AUTHORIZATION = 2,SQL_CS_DEFAULT_CHARACTER_SET = 4,SQL_CT_CREATE_TABLE = 1,SQL_CT_COMMIT_PRESERVE = 2,SQL_CT_COMMIT_DELETE = 4,SQL_CT_GLOBAL_TEMPORARY = 8,SQL_CT_LOCAL_TEMPORARY = 16,SQL_CT_CONSTRAINT_INITIALLY_DEFERRED = 32,SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE = 64,SQL_CT_CONSTRAINT_DEFERRABLE = 128,SQL_CT_CONSTRAINT_NON_DEFERRABLE = 256,SQL_CT_COLUMN_CONSTRAINT = 512,SQL_CT_COLUMN_DEFAULT = 1024,SQL_CT_COLUMN_COLLATION = 2048,SQL_CT_TABLE_CONSTRAINT = 4096,SQL_CT_CONSTRAINT_NAME_DEFINITION = 8192,SQL_CTR_CREATE_TRANSLATION = 1,SQL_CV_CREATE_VIEW = 1,SQL_CV_CHECK_OPTION = 2,SQL_CV_CASCADED = 4,SQL_CV_LOCAL = 8,SQL_DL_SQL92_DATE = 1,SQL_DL_SQL92_TIME = 2,SQL_DL_SQL92_TIMESTAMP = 4,SQL_DL_SQL92_INTERVAL_YEAR = 8,SQL_DL_SQL92_INTERVAL_MONTH = 16,SQL_DL_SQL92_INTERVAL_DAY = 32,SQL_DL_SQL92_INTERVAL_HOUR = 64,SQL_DL_SQL92_INTERVAL_MINUTE = 128,SQL_DL_SQL92_INTERVAL_SECOND = 256,SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH = 512,SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR = 1024,SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE = 2048,SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND = 4096,SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE = 8192,SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND = 16384,SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND = 32768,SQL_DI_CREATE_INDEX = 1,SQL_DI_DROP_INDEX = 2,SQL_DA_DROP_ASSERTION = 1,SQL_DCS_DROP_CHARACTER_SET = 1,SQL_DC_DROP_COLLATION = 1,SQL_DD_DROP_DOMAIN = 1,SQL_DD_RESTRICT = 2,SQL_DD_CASCADE = 4,SQL_DS_DROP_SCHEMA = 1,SQL_DS_RESTRICT = 2,SQL_DS_CASCADE = 4,SQL_DT_DROP_TABLE = 1,SQL_DT_RESTRICT = 2,SQL_DT_CASCADE = 4,SQL_DTR_DROP_TRANSLATION = 1,SQL_DV_DROP_VIEW = 1,SQL_DV_RESTRICT = 2,SQL_DV_CASCADE = 4,SQL_DTC_ENLIST_EXPENSIVE = 1,SQL_DTC_UNENLIST_EXPENSIVE = 2,SQL_CA1_NEXT = 1,SQL_CA1_ABSOLUTE = 2,SQL_CA1_RELATIVE = 4,SQL_CA1_BOOKMARK = 8,SQL_CA1_LOCK_NO_CHANGE = 64,SQL_CA1_LOCK_EXCLUSIVE = 128,SQL_CA1_LOCK_UNLOCK = 256,SQL_CA1_POS_POSITION = 512,SQL_CA1_POS_UPDATE = 1024,SQL_CA1_POS_DELETE = 2048,SQL_CA1_POS_REFRESH = 4096,SQL_CA1_POSITIONED_UPDATE = 8192,SQL_CA1_POSITIONED_DELETE = 16384,SQL_CA1_SELECT_FOR_UPDATE = 32768,SQL_CA1_BULK_ADD = 65536,SQL_CA1_BULK_UPDATE_BY_BOOKMARK = 131072,SQL_CA1_BULK_DELETE_BY_BOOKMARK = 262144,SQL_CA1_BULK_FETCH_BY_BOOKMARK = 524288,SQL_CA2_READ_ONLY_CONCURRENCY = 1,SQL_CA2_LOCK_CONCURRENCY = 2,SQL_CA2_OPT_ROWVER_CONCURRENCY = 4,SQL_CA2_OPT_VALUES_CONCURRENCY = 8,SQL_CA2_SENSITIVITY_ADDITIONS = 16,SQL_CA2_SENSITIVITY_DELETIONS = 32,SQL_CA2_SENSITIVITY_UPDATES = 64,SQL_CA2_MAX_ROWS_SELECT = 128,SQL_CA2_MAX_ROWS_INSERT = 256,SQL_CA2_MAX_ROWS_DELETE = 512,SQL_CA2_MAX_ROWS_UPDATE = 1024,SQL_CA2_MAX_ROWS_CATALOG = 2048,SQL_CA2_MAX_ROWS_AFFECTS_ALL = 3968,SQL_CA2_CRC_EXACT = 4096,SQL_CA2_CRC_APPROXIMATE = 8192,SQL_CA2_SIMULATE_NON_UNIQUE = 16384,SQL_CA2_SIMULATE_TRY_UNIQUE = 32768,SQL_CA2_SIMULATE_UNIQUE = 65536,SQL_FD_FETCH_BOOKMARK = 128,SQL_FILE_NOT_SUPPORTED = 0,SQL_FILE_TABLE = 1,SQL_FILE_QUALIFIER = 2,SQL_FILE_CATALOG = 2,SQL_GD_BLOCK = 4,SQL_GD_BOUND = 8,SQL_GB_NOT_SUPPORTED = 0,SQL_GB_GROUP_BY_EQUALS_SELECT = 1,SQL_GB_GROUP_BY_CONTAINS_SELECT = 2,SQL_GB_NO_RELATION = 3,SQL_GB_COLLATE = 4,SQL_IK_NONE = 0,SQL_IK_ASC = 1,SQL_IK_DESC = 2,SQL_IK_ALL = 3,SQL_ISV_ASSERTIONS = 1,SQL_ISV_CHARACTER_SETS = 2,SQL_ISV_CHECK_CONSTRAINTS = 4,SQL_ISV_COLLATIONS = 8,SQL_ISV_COLUMN_DOMAIN_USAGE = 16,SQL_ISV_COLUMN_PRIVILEGES = 32,SQL_ISV_COLUMNS = 64,SQL_ISV_CONSTRAINT_COLUMN_USAGE = 128,SQL_ISV_CONSTRAINT_TABLE_USAGE = 256,SQL_ISV_DOMAIN_CONSTRAINTS = 512,SQL_ISV_DOMAINS = 1024,SQL_ISV_KEY_COLUMN_USAGE = 2048,SQL_ISV_REFERENTIAL_CONSTRAINTS = 4096,SQL_ISV_SCHEMATA = 8192,SQL_ISV_SQL_LANGUAGES = 16384,SQL_ISV_TABLE_CONSTRAINTS = 32768,SQL_ISV_TABLE_PRIVILEGES = 65536,SQL_ISV_TABLES = 131072,SQL_ISV_TRANSLATIONS = 262144,SQL_ISV_USAGE_PRIVILEGES = 524288,SQL_ISV_VIEW_COLUMN_USAGE = 1048576,SQL_ISV_VIEW_TABLE_USAGE = 2097152,SQL_ISV_VIEWS = 4194304,SQL_IS_INSERT_LITERALS = 1,SQL_IS_INSERT_SEARCHED = 2,SQL_IS_SELECT_INTO = 4,SQL_LCK_NO_CHANGE = 1,SQL_LCK_EXCLUSIVE = 2,SQL_LCK_UNLOCK = 4,SQL_POS_POSITION = 1,SQL_POS_REFRESH = 2,SQL_POS_UPDATE = 4,SQL_POS_DELETE = 8,SQL_POS_ADD = 16,SQL_NNC_NULL = 0,SQL_NNC_NON_NULL = 1,SQL_NC_START = 2,SQL_NC_END = 4,SQL_FN_NUM_ABS = 1,SQL_FN_NUM_ACOS = 2,SQL_FN_NUM_ASIN = 4,SQL_FN_NUM_ATAN = 8,SQL_FN_NUM_ATAN2 = 16,SQL_FN_NUM_CEILING = 32,SQL_FN_NUM_COS = 64,SQL_FN_NUM_COT = 128,SQL_FN_NUM_EXP = 256,SQL_FN_NUM_FLOOR = 512,SQL_FN_NUM_LOG = 1024,SQL_FN_NUM_MOD = 2048,SQL_FN_NUM_SIGN = 4096,SQL_FN_NUM_SIN = 8192,SQL_FN_NUM_SQRT = 16384,SQL_FN_NUM_TAN = 32768,SQL_FN_NUM_PI = 65536,SQL_FN_NUM_RAND = 131072,SQL_FN_NUM_DEGREES = 262144,SQL_FN_NUM_LOG10 = 524288,SQL_FN_NUM_POWER = 1048576,SQL_FN_NUM_RADIANS = 2097152,SQL_FN_NUM_ROUND = 4194304,SQL_FN_NUM_TRUNCATE = 8388608,SQL_OAC_NONE = 0,SQL_OAC_LEVEL1 = 1,SQL_OAC_LEVEL2 = 2,SQL_OIC_CORE = 1,SQL_OIC_LEVEL1 = 2,SQL_OIC_LEVEL2 = 3,SQL_OSCC_NOT_COMPLIANT = 0,SQL_OSCC_COMPLIANT = 1,SQL_OSC_MINIMUM = 0,SQL_OSC_CORE = 1,SQL_OSC_EXTENDED = 2,SQL_OU_DML_STATEMENTS = 1,SQL_OU_PROCEDURE_INVOCATION = 2,SQL_OU_TABLE_DEFINITION = 4,SQL_OU_INDEX_DEFINITION = 8,SQL_OU_PRIVILEGE_DEFINITION = 16,SQL_PARC_BATCH = 1,SQL_PARC_NO_BATCH = 2,SQL_PAS_BATCH = 1,SQL_PAS_NO_BATCH = 2,SQL_PAS_NO_SELECT = 3,SQL_PS_POSITIONED_DELETE = 1,SQL_PS_POSITIONED_UPDATE = 2,SQL_PS_SELECT_FOR_UPDATE = 4,SQL_QL_START = 1,SQL_QL_END = 2,SQL_QU_DML_STATEMENTS = 1,SQL_QU_PROCEDURE_INVOCATION = 2,SQL_QU_TABLE_DEFINITION = 4,SQL_QU_INDEX_DEFINITION = 8,SQL_QU_PRIVILEGE_DEFINITION = 16,SQL_SU_DML_STATEMENTS = 1,SQL_SU_PROCEDURE_INVOCATION = 2,SQL_SU_TABLE_DEFINITION = 4,SQL_SU_INDEX_DEFINITION = 8,SQL_SU_PRIVILEGE_DEFINITION = 16,SQL_SO_FORWARD_ONLY = 1,SQL_SO_KEYSET_DRIVEN = 2,SQL_SO_DYNAMIC = 4,SQL_SO_MIXED = 8,SQL_SO_STATIC = 16,SQL_SC_SQL92_ENTRY = 1,SQL_SC_FIPS127_2_TRANSITIONAL = 2,SQL_SC_SQL92_INTERMEDIATE = 4,SQL_SC_SQL92_FULL = 8,SQL_SDF_CURRENT_DATE = 1,SQL_SDF_CURRENT_TIME = 2,SQL_SDF_CURRENT_TIMESTAMP = 4,SQL_SFKD_CASCADE = 1,SQL_SFKD_NO_ACTION = 2,SQL_SFKD_SET_DEFAULT = 4,SQL_SFKD_SET_NULL = 8,SQL_SFKU_CASCADE = 1,SQL_SFKU_NO_ACTION = 2,SQL_SFKU_SET_DEFAULT = 4,SQL_SFKU_SET_NULL = 8,SQL_SG_USAGE_ON_DOMAIN = 1,SQL_SG_USAGE_ON_CHARACTER_SET = 2,SQL_SG_USAGE_ON_COLLATION = 4,SQL_SG_USAGE_ON_TRANSLATION = 8,SQL_SG_WITH_GRANT_OPTION = 16,SQL_SG_DELETE_TABLE = 32,SQL_SG_INSERT_TABLE = 64,SQL_SG_INSERT_COLUMN = 128,SQL_SG_REFERENCES_TABLE = 256,SQL_SG_REFERENCES_COLUMN = 512,SQL_SG_SELECT_TABLE = 1024,SQL_SG_UPDATE_TABLE = 2048,SQL_SG_UPDATE_COLUMN = 4096,SQL_SNVF_BIT_LENGTH = 1,SQL_SNVF_CHAR_LENGTH = 2,SQL_SNVF_CHARACTER_LENGTH = 4,SQL_SNVF_EXTRACT = 8,SQL_SNVF_OCTET_LENGTH = 16,SQL_SNVF_POSITION = 32,SQL_SP_EXISTS = 1,SQL_SP_ISNOTNULL = 2,SQL_SP_ISNULL = 4,SQL_SP_MATCH_FULL = 8,SQL_SP_MATCH_PARTIAL = 16,SQL_SP_MATCH_UNIQUE_FULL = 32,SQL_SP_MATCH_UNIQUE_PARTIAL = 64,SQL_SP_OVERLAPS = 128,SQL_SP_UNIQUE = 256,SQL_SP_LIKE = 512,SQL_SP_IN = 1024,SQL_SP_BETWEEN = 2048,SQL_SP_COMPARISON = 4096,SQL_SP_QUANTIFIED_COMPARISON = 8192,SQL_SRJO_CORRESPONDING_CLAUSE = 1,SQL_SRJO_CROSS_JOIN = 2,SQL_SRJO_EXCEPT_JOIN = 4,SQL_SRJO_FULL_OUTER_JOIN = 8,SQL_SRJO_INNER_JOIN = 16,SQL_SRJO_INTERSECT_JOIN = 32,SQL_SRJO_LEFT_OUTER_JOIN = 64,SQL_SRJO_NATURAL_JOIN = 128,SQL_SRJO_RIGHT_OUTER_JOIN = 256,SQL_SRJO_UNION_JOIN = 512,SQL_SR_USAGE_ON_DOMAIN = 1,SQL_SR_USAGE_ON_CHARACTER_SET = 2,SQL_SR_USAGE_ON_COLLATION = 4,SQL_SR_USAGE_ON_TRANSLATION = 8,SQL_SR_GRANT_OPTION_FOR = 16,SQL_SR_CASCADE = 32,SQL_SR_RESTRICT = 64,SQL_SR_DELETE_TABLE = 128,SQL_SR_INSERT_TABLE = 256,SQL_SR_INSERT_COLUMN = 512,SQL_SR_REFERENCES_TABLE = 1024,SQL_SR_REFERENCES_COLUMN = 2048,SQL_SR_SELECT_TABLE = 4096,SQL_SR_UPDATE_TABLE = 8192,SQL_SR_UPDATE_COLUMN = 16384,SQL_SRVC_VALUE_EXPRESSION = 1,SQL_SRVC_NULL = 2,SQL_SRVC_DEFAULT = 4,SQL_SRVC_ROW_SUBQUERY = 8,SQL_SSF_CONVERT = 1,SQL_SSF_LOWER = 2,SQL_SSF_UPPER = 4,SQL_SSF_SUBSTRING = 8,SQL_SSF_TRANSLATE = 16,SQL_SSF_TRIM_BOTH = 32,SQL_SSF_TRIM_LEADING = 64,SQL_SSF_TRIM_TRAILING = 128,SQL_SVE_CASE = 1,SQL_SVE_CAST = 2,SQL_SVE_COALESCE = 4,SQL_SVE_NULLIF = 8,SQL_SCC_XOPEN_CLI_VERSION1 = 1,SQL_SCC_ISO92_CLI = 2,SQL_SS_ADDITIONS = 1,SQL_SS_DELETIONS = 2,SQL_SS_UPDATES = 4,SQL_SQ_COMPARISON = 1,SQL_SQ_EXISTS = 2,SQL_SQ_IN = 4,SQL_SQ_QUANTIFIED = 8,SQL_SQ_CORRELATED_SUBQUERIES = 16,SQL_FN_SYS_USERNAME = 1,SQL_FN_SYS_DBNAME = 2,SQL_FN_SYS_IFNULL = 4,SQL_FN_STR_CONCAT = 1,SQL_FN_STR_INSERT = 2,SQL_FN_STR_LEFT = 4,SQL_FN_STR_LTRIM = 8,SQL_FN_STR_LENGTH = 16,SQL_FN_STR_LOCATE = 32,SQL_FN_STR_LCASE = 64,SQL_FN_STR_REPEAT = 128,SQL_FN_STR_REPLACE = 256,SQL_FN_STR_RIGHT = 512,SQL_FN_STR_RTRIM = 1024,SQL_FN_STR_SUBSTRING = 2048,SQL_FN_STR_UCASE = 4096,SQL_FN_STR_ASCII = 8192,SQL_FN_STR_CHAR = 16384,SQL_FN_STR_DIFFERENCE = 32768,SQL_FN_STR_LOCATE_2 = 65536,SQL_FN_STR_SOUNDEX = 131072,SQL_FN_STR_SPACE = 262144,SQL_FN_STR_BIT_LENGTH = 524288,SQL_FN_STR_CHAR_LENGTH = 1048576,SQL_FN_STR_CHARACTER_LENGTH = 2097152,SQL_FN_STR_OCTET_LENGTH = 4194304,SQL_FN_STR_POSITION = 8388608,SQL_FN_TSI_FRAC_SECOND = 1,SQL_FN_TSI_SECOND = 2,SQL_FN_TSI_MINUTE = 4,SQL_FN_TSI_HOUR = 8,SQL_FN_TSI_DAY = 16,SQL_FN_TSI_WEEK = 32,SQL_FN_TSI_MONTH = 64,SQL_FN_TSI_QUARTER = 128,SQL_FN_TSI_YEAR = 256,SQL_FN_TD_NOW = 1,SQL_FN_TD_CURDATE = 2,SQL_FN_TD_DAYOFMONTH = 4,SQL_FN_TD_DAYOFWEEK = 8,SQL_FN_TD_DAYOFYEAR = 16,SQL_FN_TD_MONTH = 32,SQL_FN_TD_QUARTER = 64,SQL_FN_TD_WEEK = 128,SQL_FN_TD_YEAR = 256,SQL_FN_TD_CURTIME = 512,SQL_FN_TD_HOUR = 1024,SQL_FN_TD_MINUTE = 2048,SQL_FN_TD_SECOND = 4096,SQL_FN_TD_TIMESTAMPADD = 8192,SQL_FN_TD_TIMESTAMPDIFF = 16384,SQL_FN_TD_DAYNAME = 32768,SQL_FN_TD_MONTHNAME = 65536,SQL_FN_TD_CURRENT_DATE = 131072,SQL_FN_TD_CURRENT_TIME = 262144,SQL_FN_TD_CURRENT_TIMESTAMP = 524288,SQL_FN_TD_EXTRACT = 1048576,SQL_U_UNION = 1,SQL_U_UNION_ALL = 2,SQL_US_UNION = 1,SQL_US_UNION_ALL = 2,SQL_QUERY_TIMEOUT = 0,SQL_MAX_ROWS = 1,SQL_NOSCAN = 2,SQL_MAX_LENGTH = 3,SQL_ASYNC_ENABLE = 4,SQL_BIND_TYPE = 5,SQL_CURSOR_TYPE = 6,SQL_CONCURRENCY = 7,SQL_KEYSET_SIZE = 8,SQL_ROWSET_SIZE = 9,SQL_SIMULATE_CURSOR = 10,SQL_RETRIEVE_DATA = 11,SQL_USE_BOOKMARKS = 12,SQL_GET_BOOKMARK = 13,SQL_ROW_NUMBER = 14,SQL_ATTR_ASYNC_ENABLE = 4,SQL_ATTR_CONCURRENCY = 7,SQL_ATTR_CURSOR_TYPE = 6,SQL_ATTR_ENABLE_AUTO_IPD = 15,SQL_ATTR_FETCH_BOOKMARK_PTR = 16,SQL_ATTR_KEYSET_SIZE = 8,SQL_ATTR_MAX_LENGTH = 3,SQL_ATTR_MAX_ROWS = 1,SQL_ATTR_NOSCAN = 2,SQL_ATTR_PARAM_BIND_OFFSET_PTR = 17,SQL_ATTR_PARAM_BIND_TYPE = 18,SQL_ATTR_PARAM_OPERATION_PTR = 19,SQL_ATTR_PARAM_STATUS_PTR = 20,SQL_ATTR_PARAMS_PROCESSED_PTR = 21,SQL_ATTR_PARAMSET_SIZE = 22,SQL_ATTR_QUERY_TIMEOUT = 0,SQL_ATTR_RETRIEVE_DATA = 11,SQL_ATTR_ROW_BIND_OFFSET_PTR = 23,SQL_ATTR_ROW_BIND_TYPE = 5,SQL_ATTR_ROW_NUMBER = 14,SQL_ATTR_ROW_OPERATION_PTR = 24,SQL_ATTR_ROW_STATUS_PTR = 25,SQL_ATTR_ROWS_FETCHED_PTR = 26,SQL_ATTR_ROW_ARRAY_SIZE = 27,SQL_ATTR_SIMULATE_CURSOR = 10,SQL_ATTR_USE_BOOKMARKS = 12,SQL_ASYNC_ENABLE_OFF = 0,SQL_ASYNC_ENABLE_ON = 1,SQL_ASYNC_ENABLE_DEFAULT = 0,SQL_PARAM_BIND_BY_COLUMN = 0,SQL_PARAM_BIND_TYPE_DEFAULT = 0,SQL_BIND_BY_COLUMN = 0,SQL_BIND_TYPE_DEFAULT = 0,SQL_CONCUR_READ_ONLY = 1,SQL_CONCUR_LOCK = 2,SQL_CONCUR_ROWVER = 3,SQL_CONCUR_VALUES = 4,SQL_CONCUR_DEFAULT = 1,SQL_CURSOR_FORWARD_ONLY = 0,SQL_CURSOR_KEYSET_DRIVEN = 1,SQL_CURSOR_DYNAMIC = 2,SQL_CURSOR_STATIC = 3,SQL_CURSOR_TYPE_DEFAULT = 0,SQL_KEYSET_SIZE_DEFAULT = 0,SQL_MAX_LENGTH_DEFAULT = 0,SQL_MAX_ROWS_DEFAULT = 0,SQL_NOSCAN_OFF = 0,SQL_NOSCAN_ON = 1,SQL_NOSCAN_DEFAULT = 0,SQL_QUERY_TIMEOUT_DEFAULT = 0,SQL_RD_OFF = 0,SQL_RD_ON = 1,SQL_RD_DEFAULT = 1,SQL_ROWSET_SIZE_DEFAULT = 1,SQL_SC_NON_UNIQUE = 0,SQL_SC_TRY_UNIQUE = 1,SQL_SC_UNIQUE = 2,SQL_UB_OFF = 0,SQL_UB_ON = 1,SQL_UB_DEFAULT = 0,SQL_UB_FIXED = 1,SQL_UB_VARIABLE = 2,SQL_COL_PRED_CHAR = 1,SQL_COL_PRED_BASIC = 2,SQL_ENTIRE_ROWSET = 0,SQL_POSITION = 0,SQL_REFRESH = 1,SQL_UPDATE = 2,SQL_DELETE = 3,SQL_ADD = 4,SQL_SETPOS_MAX_OPTION_VALUE = 4,SQL_UPDATE_BY_BOOKMARK = 5,SQL_DELETE_BY_BOOKMARK = 6,SQL_FETCH_BY_BOOKMARK = 7,SQL_LOCK_NO_CHANGE = 0,SQL_LOCK_EXCLUSIVE = 1,SQL_LOCK_UNLOCK = 2,SQL_SETPOS_MAX_LOCK_VALUE = 2,SQL_BEST_ROWID = 1,SQL_ROWVER = 2,SQL_FETCH_BOOKMARK = 8,SQL_ROW_SUCCESS = 0,SQL_ROW_DELETED = 1,SQL_ROW_UPDATED = 2,SQL_ROW_NOROW = 3,SQL_ROW_ADDED = 4,SQL_ROW_ERROR = 5,SQL_ROW_SUCCESS_WITH_INFO = 6,SQL_ROW_PROCEED = 0,SQL_ROW_IGNORE = 1,SQL_PARAM_SUCCESS = 0,SQL_PARAM_SUCCESS_WITH_INFO = 6,SQL_PARAM_ERROR = 5,SQL_PARAM_UNUSED = 7,SQL_PARAM_DIAG_UNAVAILABLE = 1,SQL_PARAM_PROCEED = 0,SQL_PARAM_IGNORE = 1,SQL_CASCADE = 0,SQL_RESTRICT = 1,SQL_SET_NULL = 2,SQL_NO_ACTION = 3,SQL_SET_DEFAULT = 4,SQL_INITIALLY_DEFERRED = 5,SQL_INITIALLY_IMMEDIATE = 6,SQL_NOT_DEFERRABLE = 7,SQL_PARAM_TYPE_UNKNOWN = 0,SQL_PARAM_INPUT = 1,SQL_PARAM_INPUT_OUTPUT = 2,SQL_RESULT_COL = 3,SQL_PARAM_OUTPUT = 4,SQL_RETURN_VALUE = 5,SQL_PT_UNKNOWN = 0,SQL_PT_PROCEDURE = 1,SQL_PT_FUNCTION = 2,SQL_PARAM_TYPE_DEFAULT = 2,SQL_SETPARAM_VALUE_MAX = -1,SQL_QUICK = 0,SQL_ENSURE = 1,SQL_TABLE_STAT = 0,SQL_PC_NOT_PSEUDO = 1,SQL_DATABASE_NAME = 16,SQL_FD_FETCH_PREV = 8,SQL_FETCH_PREV = 4,SQL_CONCUR_TIMESTAMP = 3,SQL_SCCO_OPT_TIMESTAMP = 4,SQL_CC_DELETE = 0,SQL_CR_DELETE = 0,SQL_CC_CLOSE = 1,SQL_CR_CLOSE = 1,SQL_CC_PRESERVE = 2,SQL_CR_PRESERVE = 2,SQL_SCROLL_FORWARD_ONLY = 0,SQL_SCROLL_KEYSET_DRIVEN = -1,SQL_SCROLL_DYNAMIC = -2,SQL_SCROLL_STATIC = -3,SQL_WCHAR = -8,SQL_WVARCHAR = -9,SQL_WLONGVARCHAR = -10,SQL_C_WCHAR = -8,SQL_C_TCHAR = 1,SQL_SQLSTATE_SIZEW = 10,};
enum MACRO_SSL3_MT {SSL3_MT_HELLO_REQUEST = 0,SSL3_MT_CLIENT_HELLO = 1,SSL3_MT_SERVER_HELLO = 2,SSL3_MT_NEWSESSION_TICKET = 4,SSL3_MT_CERTIFICATE = 11,SSL3_MT_SERVER_KEY_EXCHANGE = 12,SSL3_MT_CERTIFICATE_REQUEST = 13,SSL3_MT_SERVER_DONE = 14,SSL3_MT_CERTIFICATE_VERIFY = 15,SSL3_MT_CLIENT_KEY_EXCHANGE = 16,SSL3_MT_FINISHED = 20,SSL3_MT_CERTIFICATE_STATUS = 22,};
enum MACRO_ST_NONE {ST_NONE = 0,ST_OTHER = 1,ST_VOLATILE = 2,ST_NONVOLATILE = 3,ST_PERMANENT = 4,ST_READONLY = 5,};
enum MACRO_SUBTREE {SUBTREE_ATTACHED = 0x2,};
enum MACRO_SUPPORT {SUPPORT_ASIAN_ENCODINGS = 1,SUPPORT_UTF16_ENCODINGS = 1,SUPPORT_ACCESSIBILITY_CHECKS = 1,};
enum MACRO_SYMTYPE {SYMTYPE = 50,};
enum MACRO_TCPOLEN {TCPOLEN_MAXSEG = 4,};
enum MACRO_TCP_MAX {TCP_MAX_WINSHIFT = 14,TCP_MAXHLEN = 60,TCP_NODELAY = 1,TCP_MAXSEG = 2,TCP_NOPUSH = 4,TCP_NOOPT = 8,TCP_KEEPALIVE = 16,TCP_CONNECTIONTIMEOUT = 32,};
enum MACRO_TCP_RXT {TCP_RXT_CONNDROPTIME = 0x80,TCP_RXT_FINDROP = 0x100,};
enum MACRO_TCSANOW {TCSANOW = 0,TCSADRAIN = 1,TCSAFLUSH = 2,TCSASOFT = 16,};
enum MACRO_TELQUAL {TELQUAL_IS = 0,TELQUAL_SEND = 1,TELQUAL_INFO = 2,TELQUAL_REPLY = 2,TELQUAL_NAME = 3,};
enum MACRO_TERMIOS {TERMIOS = 1,NAMESIZE = 256,};
enum MACRO_TGWRITE {TGWRITE = 0x10,};
enum MACRO_THOUSEP {THOUSEP = 51,};
enum MACRO_TIMEOUT {CLSET_TIMEOUT = 1,CLGET_TIMEOUT = 2,};
enum MACRO_TIOCPKT {TIOCPKT_DATA = 0x0,TIOCPKT_FLUSHREAD = 0x1,TIOCPKT_FLUSHWRITE = 0x2,TIOCPKT_STOP = 0x4,TIOCPKT_START = 0x8,TIOCPKT_NOSTOP = 0x10,TIOCPKT_DOSTOP = 0x20,TIOCPKT_IOCTL = 0x40,};
enum MACRO_TIOCSIG {TIOCSIG = 536900703,};
enum MACRO_TLS1_CK {TLS1_CK_RSA_EXPORT1024_WITH_RC4_56_MD5 = 0x3000060,TLS1_CK_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5 = 0x3000061,TLS1_CK_RSA_EXPORT1024_WITH_DES_CBC_SHA = 0x3000062,TLS1_CK_DHE_DSS_EXPORT1024_WITH_DES_CBC_SHA = 0x3000063,TLS1_CK_RSA_EXPORT1024_WITH_RC4_56_SHA = 0x3000064,TLS1_CK_DHE_DSS_EXPORT1024_WITH_RC4_56_SHA = 0x3000065,TLS1_CK_DHE_DSS_WITH_RC4_128_SHA = 0x3000066,TLS1_CK_RSA_WITH_AES_128_SHA = 0x300002F,TLS1_CK_DH_DSS_WITH_AES_128_SHA = 0x3000030,TLS1_CK_DH_RSA_WITH_AES_128_SHA = 0x3000031,TLS1_CK_DHE_DSS_WITH_AES_128_SHA = 0x3000032,TLS1_CK_DHE_RSA_WITH_AES_128_SHA = 0x3000033,TLS1_CK_ADH_WITH_AES_128_SHA = 0x3000034,TLS1_CK_RSA_WITH_AES_256_SHA = 0x3000035,TLS1_CK_DH_DSS_WITH_AES_256_SHA = 0x3000036,TLS1_CK_DH_RSA_WITH_AES_256_SHA = 0x3000037,TLS1_CK_DHE_DSS_WITH_AES_256_SHA = 0x3000038,TLS1_CK_DHE_RSA_WITH_AES_256_SHA = 0x3000039,TLS1_CK_ADH_WITH_AES_256_SHA = 0x300003A,TLS1_CK_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x3000041,TLS1_CK_DH_DSS_WITH_CAMELLIA_128_CBC_SHA = 0x3000042,TLS1_CK_DH_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x3000043,TLS1_CK_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA = 0x3000044,TLS1_CK_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA = 0x3000045,TLS1_CK_ADH_WITH_CAMELLIA_128_CBC_SHA = 0x3000046,TLS1_CK_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x3000084,TLS1_CK_DH_DSS_WITH_CAMELLIA_256_CBC_SHA = 0x3000085,TLS1_CK_DH_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x3000086,TLS1_CK_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA = 0x3000087,TLS1_CK_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA = 0x3000088,TLS1_CK_ADH_WITH_CAMELLIA_256_CBC_SHA = 0x3000089,TLS1_CK_RSA_WITH_SEED_SHA = 0x3000096,TLS1_CK_DH_DSS_WITH_SEED_SHA = 0x3000097,TLS1_CK_DH_RSA_WITH_SEED_SHA = 0x3000098,TLS1_CK_DHE_DSS_WITH_SEED_SHA = 0x3000099,TLS1_CK_DHE_RSA_WITH_SEED_SHA = 0x300009A,TLS1_CK_ADH_WITH_SEED_SHA = 0x300009B,TLS1_CK_ECDH_ECDSA_WITH_NULL_SHA = 0x300C001,TLS1_CK_ECDH_ECDSA_WITH_RC4_128_SHA = 0x300C002,TLS1_CK_ECDH_ECDSA_WITH_DES_192_CBC3_SHA = 0x300C003,TLS1_CK_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 0x300C004,TLS1_CK_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 0x300C005,TLS1_CK_ECDHE_ECDSA_WITH_NULL_SHA = 0x300C006,TLS1_CK_ECDHE_ECDSA_WITH_RC4_128_SHA = 0x300C007,TLS1_CK_ECDHE_ECDSA_WITH_DES_192_CBC3_SHA = 0x300C008,TLS1_CK_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0x300C009,TLS1_CK_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0x300C00A,TLS1_CK_ECDH_RSA_WITH_NULL_SHA = 0x300C00B,TLS1_CK_ECDH_RSA_WITH_RC4_128_SHA = 0x300C00C,TLS1_CK_ECDH_RSA_WITH_DES_192_CBC3_SHA = 0x300C00D,TLS1_CK_ECDH_RSA_WITH_AES_128_CBC_SHA = 0x300C00E,TLS1_CK_ECDH_RSA_WITH_AES_256_CBC_SHA = 0x300C00F,TLS1_CK_ECDHE_RSA_WITH_NULL_SHA = 0x300C010,TLS1_CK_ECDHE_RSA_WITH_RC4_128_SHA = 0x300C011,TLS1_CK_ECDHE_RSA_WITH_DES_192_CBC3_SHA = 0x300C012,TLS1_CK_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0x300C013,TLS1_CK_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0x300C014,TLS1_CK_ECDH_anon_WITH_NULL_SHA = 0x300C015,TLS1_CK_ECDH_anon_WITH_RC4_128_SHA = 0x300C016,TLS1_CK_ECDH_anon_WITH_DES_192_CBC3_SHA = 0x300C017,TLS1_CK_ECDH_anon_WITH_AES_128_CBC_SHA = 0x300C018,TLS1_CK_ECDH_anon_WITH_AES_256_CBC_SHA = 0x300C019,};
enum MACRO_TMAGLEN {TMAGLEN = 6,};
enum MACRO_TOWRITE {TOWRITE = 0x2,};
enum MACRO_TTYDISC {TTYDISC = 0,TABLDISC = 3,SLIPDISC = 4,};
enum MACRO_TUWRITE {TUWRITE = 0x80,};
enum MACRO_UCD_MSG {UCD_MSG_FLAG_RESPONSE_PDU = 0x100,UCD_MSG_FLAG_EXPECT_RESPONSE = 0x200,UCD_MSG_FLAG_FORCE_PDU_COPY = 0x400,UCD_MSG_FLAG_ALWAYS_IN_VIEW = 0x800,UCD_MSG_FLAG_PDU_TIMEOUT = 0x1000,UCD_MSG_FLAG_ONE_PASS_ONLY = 0x2000,UCD_MSG_FLAG_TUNNELED = 0x4000,};
enum MACRO_UINTMAX {UINTMAX_MAX = -1,};
enum MACRO_UINTPTR {UINTPTR_MAX = -1,};
enum MACRO_UNKNOWN {UNKNOWN_REQUEST = 5,};
enum MACRO_USER_CS {USER_CS_PATH = 1,USER_BC_BASE_MAX = 2,USER_BC_DIM_MAX = 3,USER_BC_SCALE_MAX = 4,USER_BC_STRING_MAX = 5,USER_COLL_WEIGHTS_MAX = 6,USER_EXPR_NEST_MAX = 7,USER_LINE_MAX = 8,USER_RE_DUP_MAX = 9,USER_POSIX2_VERSION = 10,USER_POSIX2_C_BIND = 11,USER_POSIX2_C_DEV = 12,USER_POSIX2_CHAR_TERM = 13,USER_POSIX2_FORT_DEV = 14,USER_POSIX2_FORT_RUN = 15,USER_POSIX2_LOCALEDEF = 16,USER_POSIX2_SW_DEV = 17,USER_POSIX2_UPE = 18,USER_STREAM_MAX = 19,USER_TZNAME_MAX = 20,USER_MAXID = 21,};
enum MACRO_USM_MAX {USM_MAX_ID_LENGTH = 1024,USM_MAX_SALT_LENGTH = 128,USM_DES_SALT_LENGTH = 64,USM_AES_SALT_LENGTH = 128,USM_MAX_KEYEDHASH_LENGTH = 128,USM_TIME_WINDOW = 150,USM_MD5_AND_SHA_AUTH_LEN = 12,USM_MAX_AUTHSIZE = 12,USM_SEC_MODEL_NUMBER = 3,USM_AUTH_PROTO_NOAUTH_LEN = 10,USM_AUTH_PROTO_MD5_LEN = 10,USM_AUTH_PROTO_SHA_LEN = 10,USM_PRIV_PROTO_NOPRIV_LEN = 10,USM_PRIV_PROTO_DES_LEN = 10,USM_PRIV_PROTO_AES_LEN = 10,USM_PRIV_PROTO_AES128_LEN = 10,};
enum MACRO_VERSION {_POSIX_VERSION = 200112,_POSIX2_VERSION = 200112,};
enum MACRO_VFS_CTL {VFS_CTL_VERS1 = 0x1,VFS_CTL_STATFS = 0x10001,VFS_CTL_UMOUNT = 0x10002,VFS_CTL_QUERY = 0x10003,VFS_CTL_NEWADDR = 0x10004,VFS_CTL_TIMEO = 0x10005,VFS_CTL_NOLOCKS = 0x10006,VFS_CTL_SADDR = 0x10007,};
enum MACRO_VM_PAGE {VM_PAGE_QUERY_PAGE_PRESENT = 0x1,VM_PAGE_QUERY_PAGE_FICTITIOUS = 0x2,VM_PAGE_QUERY_PAGE_REF = 0x4,VM_PAGE_QUERY_PAGE_DIRTY = 0x8,VM_PAGE_QUERY_PAGE_PAGED_OUT = 0x10,VM_PAGE_QUERY_PAGE_COPIED = 0x20,VM_PAGE_QUERY_PAGE_SPECULATIVE = 0x40,VM_PAGE_QUERY_PAGE_EXTERNAL = 0x80,VM_PAGE_QUERY_PAGE_CS_VALIDATED = 0x100,VM_PAGE_QUERY_PAGE_CS_TAINTED = 0x200,VM_FLAGS_FIXED = 0x0,VM_FLAGS_ANYWHERE = 0x1,VM_FLAGS_PURGABLE = 0x2,VM_FLAGS_NO_CACHE = 0x10,VM_FLAGS_OVERWRITE = 0x4000,VM_FLAGS_SUPERPAGE_MASK = 0x70000,VM_FLAGS_SUPERPAGE_SHIFT = 0x10,};
enum MACRO_VM_PROT {VM_PROT_NONE = 0x0,VM_PROT_READ = 0x1,VM_PROT_WRITE = 0x2,VM_PROT_EXECUTE = 0x4,VM_PROT_DEFAULT = 0x3,VM_PROT_ALL = 0x7,VM_PROT_NO_CHANGE = 0x8,VM_PROT_COPY = 0x10,VM_PROT_WANTS_COPY = 0x10,VM_PROT_IS_MASK = 0x40,VM_SYNC_ASYNCHRONOUS = 0x1,VM_SYNC_SYNCHRONOUS = 0x2,VM_SYNC_INVALIDATE = 0x4,VM_SYNC_KILLPAGES = 0x8,VM_SYNC_DEACTIVATE = 0x10,VM_SYNC_CONTIGUOUS = 0x20,VM_SYNC_REUSABLEPAGES = 0x40,};
enum MACRO_VOL_CAP {VOL_CAP_FMT_PERSISTENTOBJECTIDS = 0x1,VOL_CAP_FMT_SYMBOLICLINKS = 0x2,VOL_CAP_FMT_HARDLINKS = 0x4,VOL_CAP_FMT_JOURNAL = 0x8,VOL_CAP_FMT_JOURNAL_ACTIVE = 0x10,VOL_CAP_FMT_NO_ROOT_TIMES = 0x20,VOL_CAP_FMT_SPARSE_FILES = 0x40,VOL_CAP_FMT_ZERO_RUNS = 0x80,VOL_CAP_FMT_CASE_SENSITIVE = 0x100,VOL_CAP_FMT_CASE_PRESERVING = 0x200,VOL_CAP_FMT_FAST_STATFS = 0x400,VOL_CAP_FMT_2TB_FILESIZE = 0x800,VOL_CAP_FMT_OPENDENYMODES = 0x1000,VOL_CAP_FMT_HIDDEN_FILES = 0x2000,VOL_CAP_FMT_PATH_FROM_ID = 0x4000,VOL_CAP_FMT_NO_VOLUME_SIZES = 0x8000,VOL_CAP_FMT_DECMPFS_COMPRESSION = 0x10000,VOL_CAP_FMT_64BIT_OBJECT_IDS = 0x20000,VOL_CAP_INT_SEARCHFS = 0x1,VOL_CAP_INT_ATTRLIST = 0x2,VOL_CAP_INT_NFSEXPORT = 0x4,VOL_CAP_INT_READDIRATTR = 0x8,VOL_CAP_INT_EXCHANGEDATA = 0x10,VOL_CAP_INT_COPYFILE = 0x20,VOL_CAP_INT_ALLOCATE = 0x40,VOL_CAP_INT_VOL_RENAME = 0x80,VOL_CAP_INT_ADVLOCK = 0x100,VOL_CAP_INT_FLOCK = 0x200,VOL_CAP_INT_EXTENDED_SECURITY = 0x400,VOL_CAP_INT_USERACCESS = 0x800,VOL_CAP_INT_MANLOCK = 0x1000,VOL_CAP_INT_NAMEDSTREAMS = 0x2000,VOL_CAP_INT_EXTENDED_ATTR = 0x4000,};
enum MACRO_VSTATUS {VSTATUS = 18,};
enum MACRO_WATCHER {WATCHER_FIXED_SIZE = 0x1,WATCHER_MAX_SIZE = 0x2,WATCHER_SIZE_IS_PTR = 0x4,WATCHER_SIZE_STRLEN = 0x8,WATCHER_SIZE_UNIT_OIDS = 0x10,};
enum MACRO_WEXITED {WEXITED = 0x4,WSTOPPED = 0x8,WCONTINUED = 0x10,WNOWAIT = 0x20,};
enum MACRO_WNOHANG {WNOHANG = 0x1,WUNTRACED = 0x2,WCOREFLAG = 0x80,};
enum MACRO_X509_EX {X509_EX_V_NETSCAPE_HACK = 0x8000,X509_EX_V_INIT = 0x1,X509_TRUST_DEFAULT = 0xFFFFFFFFFFFFFFFF,X509_TRUST_COMPAT = 0x1,X509_TRUST_SSL_CLIENT = 0x2,X509_TRUST_SSL_SERVER = 0x3,X509_TRUST_EMAIL = 0x4,X509_TRUST_OBJECT_SIGN = 0x5,X509_TRUST_OCSP_SIGN = 0x6,X509_TRUST_OCSP_REQUEST = 0x7,X509_TRUST_MIN = 0x1,X509_TRUST_MAX = 0x7,X509_TRUST_DYNAMIC = 0x1,X509_TRUST_DYNAMIC_NAME = 0x2,X509_TRUST_TRUSTED = 0x1,X509_TRUST_REJECTED = 0x2,X509_TRUST_UNTRUSTED = 0x3,X509_FLAG_COMPAT = 0x0,X509_FLAG_NO_HEADER = 0x1,X509_FLAG_NO_VERSION = 0x2,X509_FLAG_NO_SERIAL = 0x4,X509_FLAG_NO_SIGNAME = 0x8,X509_FLAG_NO_ISSUER = 0x10,X509_FLAG_NO_VALIDITY = 0x20,X509_FLAG_NO_SUBJECT = 0x40,X509_FLAG_NO_PUBKEY = 0x80,X509_FLAG_NO_EXTENSIONS = 0x100,X509_FLAG_NO_SIGDUMP = 0x200,X509_FLAG_NO_AUX = 0x400,X509_FLAG_NO_ATTRIBUTES = 0x800,};
enum MACRO_X509_LU {X509_LU_RETRY = -1,X509_LU_FAIL = 0,X509_LU_X509 = 1,X509_LU_CRL = 2,X509_LU_PKEY = 3,X509_L_FILE_LOAD = 1,X509_L_ADD_DIR = 2,X509_V_OK = 0,X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT = 2,X509_V_ERR_UNABLE_TO_GET_CRL = 3,X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE = 4,X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE = 5,X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY = 6,X509_V_ERR_CERT_SIGNATURE_FAILURE = 7,X509_V_ERR_CRL_SIGNATURE_FAILURE = 8,X509_V_ERR_CERT_NOT_YET_VALID = 9,X509_V_ERR_CERT_HAS_EXPIRED = 10,X509_V_ERR_CRL_NOT_YET_VALID = 11,X509_V_ERR_CRL_HAS_EXPIRED = 12,X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD = 13,X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD = 14,X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD = 15,X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD = 16,X509_V_ERR_OUT_OF_MEM = 17,X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT = 18,X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN = 19,X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY = 20,X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE = 21,X509_V_ERR_CERT_CHAIN_TOO_LONG = 22,X509_V_ERR_CERT_REVOKED = 23,X509_V_ERR_INVALID_CA = 24,X509_V_ERR_PATH_LENGTH_EXCEEDED = 25,X509_V_ERR_INVALID_PURPOSE = 26,X509_V_ERR_CERT_UNTRUSTED = 27,X509_V_ERR_CERT_REJECTED = 28,X509_V_ERR_SUBJECT_ISSUER_MISMATCH = 29,X509_V_ERR_AKID_SKID_MISMATCH = 30,X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH = 31,X509_V_ERR_KEYUSAGE_NO_CERTSIGN = 32,X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER = 33,X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION = 34,X509_V_ERR_KEYUSAGE_NO_CRL_SIGN = 35,X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION = 36,X509_V_ERR_INVALID_NON_CA = 37,X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED = 38,X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE = 39,X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED = 40,X509_V_ERR_INVALID_EXTENSION = 41,X509_V_ERR_INVALID_POLICY_EXTENSION = 42,X509_V_ERR_NO_EXPLICIT_POLICY = 43,X509_V_ERR_UNNESTED_RESOURCE = 44,X509_V_ERR_APPLICATION_VERIFICATION = 50,X509_V_FLAG_CB_ISSUER_CHECK = 1,X509_V_FLAG_USE_CHECK_TIME = 2,X509_V_FLAG_CRL_CHECK = 4,X509_V_FLAG_CRL_CHECK_ALL = 8,X509_V_FLAG_IGNORE_CRITICAL = 16,X509_V_FLAG_X509_STRICT = 32,X509_V_FLAG_ALLOW_PROXY_CERTS = 64,X509_V_FLAG_POLICY_CHECK = 128,X509_V_FLAG_EXPLICIT_POLICY = 256,X509_V_FLAG_INHIBIT_ANY = 512,X509_V_FLAG_INHIBIT_MAP = 1024,X509_V_FLAG_NOTIFY_POLICY = 2048,X509_V_FLAG_CHECK_SS_SIGNATURE = 16384,X509_VP_FLAG_DEFAULT = 1,X509_VP_FLAG_OVERWRITE = 2,X509_VP_FLAG_RESET_FLAGS = 4,X509_VP_FLAG_LOCKED = 8,X509_VP_FLAG_ONCE = 16,X509_V_FLAG_POLICY_MASK = 1920,};
enum MACRO_XDRWORD {XDRWORD = 4,};
enum MACRO_XML_MAX {XML_MAX_TEXT_LENGTH = 10000000,XML_MAX_NAMELEN = 100,};
enum MACRO_XPLUGIN {XPLUGIN_H = 1,XPLUGIN_VERSION = 4,};
enum MACRO_YESEXPR {YESEXPR = 52,};
enum MACRO__ACCESS {_ACCESS_EXTENDED_MASK = 4193792,};
enum MACRO__CACHED {_CACHED_RUNES = 256,};
enum MACRO__CRMASK {_CRMASK = -256,};
enum MACRO__DARWIN {_DARWIN_FEATURE_64_BIT_INODE = 1,_DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = 1,_DARWIN_FEATURE_UNIX_CONFORMANCE = 3,};
enum MACRO__LC_NUM {_LC_NUM_MASK = 6,_LC_LAST_MASK = 32,};
enum MACRO__POSIX2 {_POSIX2_C_BIND = 200112,_POSIX2_C_DEV = 200112,_POSIX2_CHAR_TERM = 200112,_POSIX2_FORT_DEV = -1,_POSIX2_FORT_RUN = 200112,_POSIX2_LOCALEDEF = 200112,_POSIX2_PBS = -1,_POSIX2_PBS_ACCOUNTING = -1,_POSIX2_PBS_CHECKPOINT = -1,_POSIX2_PBS_LOCATE = -1,_POSIX2_PBS_MESSAGE = -1,_POSIX2_PBS_TRACK = -1,_POSIX2_SW_DEV = 200112,_POSIX2_UPE = 200112,};
enum MACRO__RLIMIT {_RLIMIT_POSIX_FLAG = 0x1000,};
enum MACRO__TANDEM {_TANDEM_SOURCE = 1,};
enum MACRO___APPLE {__APPLE_API_STRICT_CONFORMANCE = 1,};
enum MACRO___ILP32 {__ILP32_OFF32 = -1,__ILP32_OFFBIG = -1,};
enum MACRO___LPBIG {__LPBIG_OFFBIG = 1,};
enum MACRO___PFKEY {__PFKEY_V2_H = 1,};
enum MACRO___SCHED {__SCHED_PARAM_SIZE__ = 4,};
enum MACRO_control {control_character_threshold = 0x20,control_character_bit = 0x40,};
enum MACRO_mach_vm {mach_vm_MSG_COUNT = 20,};
enum MACRO_netname {netname_MSG_COUNT = 4,};
enum MACRO_x86_AVX {x86_AVX_STATE32 = 16,x86_AVX_STATE64 = 17,};
typedef struct Netscape_spki_st NETSCAPE_SPKI;
typedef struct ocsp_response_data_st OCSP_RESPDATA;
typedef struct ocsp_response_st OCSP_RESPONSE;
typedef struct pkcs7_encrypted_st PKCS7_ENCRYPT;
typedef struct RIPEMD160state_st RIPEMD160_CTX;
typedef unsigned long long SQLROWSETSIZE;
enum STORE_attribs {STORE_ATTR_END = 0x0,STORE_ATTR_FRIENDLYNAME = 0x1,STORE_ATTR_KEYID = 0x2,STORE_ATTR_ISSUERKEYID = 0x3,STORE_ATTR_SUBJECTKEYID = 0x4,STORE_ATTR_ISSUERSERIALHASH = 0x5,STORE_ATTR_ISSUER = 0x6,STORE_ATTR_SERIAL = 0x7,STORE_ATTR_SUBJECT = 0x8,STORE_ATTR_CERTHASH = 0x9,STORE_ATTR_EMAIL = 0xA,STORE_ATTR_FILENAME = 0xB,STORE_ATTR_TYPE_NUM = 0xB,STORE_ATTR_OR = 0xFF,};
typedef struct BackendDB Slapi_Backend;
typedef struct slapi_condvar Slapi_CondVar;
typedef struct x509_cert_aux_st X509_CERT_AUX;
typedef struct X509_crl_info_st X509_CRL_INFO;
typedef struct X509_req_info_st X509_REQ_INFO;
struct _TidyIterator {int _opaque;};
struct __ifmultiaddr;
union __sigaction_u {void (*__sa_handler)(int);void (*__sa_sigaction)(int, struct __siginfo *, void *);};
struct _cups_array_s;
struct _htmlElemDesc { char *name;char startTag;char endTag;char saveEndTag;char empty;char depr;char dtd;char isinline; char *desc; char **subelts; char *defaultsubelt; char **attrs_opt; char **attrs_depr; char **attrs_req;};
struct _krb5_context;
struct _xmlHashTable;
struct _xmlSchemaVal;
typedef struct _acl_flagset *acl_flagset_t;
typedef struct _acl_permset *acl_permset_t;
typedef struct _0C23990C9A3077933200554184D19969 au_header32_t;
typedef struct _3641F756729AD97A11A3B78A6DBF7918 au_header64_t;
typedef struct _73773A746C574143C0D7803E150049F9 au_proc32ex_t;
typedef struct _3881F9B2E64C73F20ED412E5826C4AC3 au_proc64ex_t;
typedef struct au_tid_addr au_tid_addr_t;
typedef struct au_user_ent au_user_ent_t;
typedef struct _956C7F5333254C457CAB162127DEEC80 au_zonename_t;
typedef struct _0B20F48E2CD2D778BD1F216BA81B71CE audit_token_t;
struct ccs_header_st {unsigned char type;unsigned short seq;};
enum cups_cspace_e {CUPS_CSPACE_W = 0x0,CUPS_CSPACE_RGB = 0x1,CUPS_CSPACE_RGBA = 0x2,CUPS_CSPACE_K = 0x3,CUPS_CSPACE_CMY = 0x4,CUPS_CSPACE_YMC = 0x5,CUPS_CSPACE_CMYK = 0x6,CUPS_CSPACE_YMCK = 0x7,CUPS_CSPACE_KCMY = 0x8,CUPS_CSPACE_KCMYcm = 0x9,CUPS_CSPACE_GMCK = 0xA,CUPS_CSPACE_GMCS = 0xB,CUPS_CSPACE_WHITE = 0xC,CUPS_CSPACE_GOLD = 0xD,CUPS_CSPACE_SILVER = 0xE,CUPS_CSPACE_CIEXYZ = 0xF,CUPS_CSPACE_CIELab = 0x10,CUPS_CSPACE_RGBW = 0x11,CUPS_CSPACE_SW = 0x12,CUPS_CSPACE_SRGB = 0x13,CUPS_CSPACE_ADOBERGB = 0x14,CUPS_CSPACE_ICC1 = 0x20,CUPS_CSPACE_ICC2 = 0x21,CUPS_CSPACE_ICC3 = 0x22,CUPS_CSPACE_ICC4 = 0x23,CUPS_CSPACE_ICC5 = 0x24,CUPS_CSPACE_ICC6 = 0x25,CUPS_CSPACE_ICC7 = 0x26,CUPS_CSPACE_ICC8 = 0x27,CUPS_CSPACE_ICC9 = 0x28,CUPS_CSPACE_ICCA = 0x29,CUPS_CSPACE_ICCB = 0x2A,CUPS_CSPACE_ICCC = 0x2B,CUPS_CSPACE_ICCD = 0x2C,CUPS_CSPACE_ICCE = 0x2D,CUPS_CSPACE_ICCF = 0x2E,CUPS_CSPACE_DEVICE1 = 0x30,CUPS_CSPACE_DEVICE2 = 0x31,CUPS_CSPACE_DEVICE3 = 0x32,CUPS_CSPACE_DEVICE4 = 0x33,CUPS_CSPACE_DEVICE5 = 0x34,CUPS_CSPACE_DEVICE6 = 0x35,CUPS_CSPACE_DEVICE7 = 0x36,CUPS_CSPACE_DEVICE8 = 0x37,CUPS_CSPACE_DEVICE9 = 0x38,CUPS_CSPACE_DEVICEA = 0x39,CUPS_CSPACE_DEVICEB = 0x3A,CUPS_CSPACE_DEVICEC = 0x3B,CUPS_CSPACE_DEVICED = 0x3C,CUPS_CSPACE_DEVICEE = 0x3D,CUPS_CSPACE_DEVICEF = 0x3E,};
typedef struct cups_dentry_s cups_dentry_t;
struct cups_dither_s {int width;int row;int errors[96];};
typedef struct cups_dither_s cups_dither_t;
struct cups_option_s {char *name;char *value;};
typedef struct cups_option_s cups_option_t;
enum cups_orient_e {CUPS_ORIENT_0 = 0x0,CUPS_ORIENT_90 = 0x1,CUPS_ORIENT_180 = 0x2,CUPS_ORIENT_270 = 0x3,};
typedef struct _cups_raster_s cups_raster_t;
struct cups_sample_s {unsigned char rgb[3];unsigned char colors[4];};
typedef struct cups_sample_s cups_sample_t;
struct curl_certinfo {int num_of_certs;struct curl_slist **certinfo;};
struct curl_httppost {struct curl_httppost *next;char *name;long long namelength;char *contents;long long contentslength;char *buffer;long long bufferlength;char *contenttype;struct curl_slist *contentheader;struct curl_httppost *more;long long flags;char *showfilename;void *userp;};
typedef int curl_socket_t;
typedef int dispatch_fd_t;
typedef struct dispatch_io_s *dispatch_io_t;
typedef struct fp_data_reg fp_data_reg_t;
typedef struct fsignatures fsignatures_t;
struct getquota_args {char *gqa_pathp;int gqa_uid;};
typedef struct gss_cred_id_struct *gss_cred_id_t;
enum http_status_e {HTTP_ERROR = 0xFFFFFFFF,HTTP_CONTINUE = 0x64,HTTP_SWITCHING_PROTOCOLS = 0x65,HTTP_OK = 0xC8,HTTP_CREATED = 0xC9,HTTP_ACCEPTED = 0xCA,HTTP_NOT_AUTHORITATIVE = 0xCB,HTTP_NO_CONTENT = 0xCC,HTTP_RESET_CONTENT = 0xCD,HTTP_PARTIAL_CONTENT = 0xCE,HTTP_MULTIPLE_CHOICES = 0x12C,HTTP_MOVED_PERMANENTLY = 0x12D,HTTP_MOVED_TEMPORARILY = 0x12E,HTTP_SEE_OTHER = 0x12F,HTTP_NOT_MODIFIED = 0x130,HTTP_USE_PROXY = 0x131,HTTP_BAD_REQUEST = 0x190,HTTP_UNAUTHORIZED = 0x191,HTTP_PAYMENT_REQUIRED = 0x192,HTTP_FORBIDDEN = 0x193,HTTP_NOT_FOUND = 0x194,HTTP_METHOD_NOT_ALLOWED = 0x195,HTTP_NOT_ACCEPTABLE = 0x196,HTTP_PROXY_AUTHENTICATION = 0x197,HTTP_REQUEST_TIMEOUT = 0x198,HTTP_CONFLICT = 0x199,HTTP_GONE = 0x19A,HTTP_LENGTH_REQUIRED = 0x19B,HTTP_PRECONDITION = 0x19C,HTTP_REQUEST_TOO_LARGE = 0x19D,HTTP_URI_TOO_LONG = 0x19E,HTTP_UNSUPPORTED_MEDIATYPE = 0x19F,HTTP_REQUESTED_RANGE = 0x1A0,HTTP_EXPECTATION_FAILED = 0x1A1,HTTP_UPGRADE_REQUIRED = 0x1AA,HTTP_SERVER_ERROR = 0x1F4,HTTP_NOT_IMPLEMENTED = 0x1F5,HTTP_BAD_GATEWAY = 0x1F6,HTTP_SERVICE_UNAVAILABLE = 0x1F7,HTTP_GATEWAY_TIMEOUT = 0x1F8,HTTP_NOT_SUPPORTED = 0x1F9,HTTP_AUTHORIZATION_CANCELED = 0x3E8,HTTP_PKI_ERROR = 0x3E9,HTTP_WEBIF_DISABLED = 0x3EA,};
typedef unsigned short i386_ioport_t;
typedef struct __ifmultiaddr *ifmultiaddr_t;
typedef struct _ipfw_dyn_rule ipfw_dyn_rule;
typedef struct _ipfw_insn_log ipfw_insn_log;
typedef struct _ipfw_insn_mac ipfw_insn_mac;
typedef struct _ipfw_insn_u16 ipfw_insn_u16;
typedef struct _ipfw_insn_u32 ipfw_insn_u32;
enum ipp_quality_e {IPP_QUALITY_DRAFT = 0x3,IPP_QUALITY_NORMAL = 0x4,IPP_QUALITY_HIGH = 0x5,};
typedef union ipp_request_u ipp_request_t;
typedef int kern_return_t;
typedef struct _krb5_authdata krb5_authdata;
typedef struct _krb5_checksum krb5_checksum;
typedef struct _krb5_enc_data krb5_enc_data;
typedef struct _krb5_keyblock krb5_keyblock;
typedef struct _krb5_pwd_data krb5_pwd_data;
typedef struct _krb5_response krb5_response;
typedef struct _launch_data *launch_data_t;
struct ldap_url_desc {struct ldap_url_desc *lud_next;char *lud_scheme;char *lud_host;int lud_port;char *lud_dn;char **lud_attrs;int lud_scope;char *lud_filter;char **lud_exts;int lud_crit_exts;};
struct lhash_node_st {void *data;struct lhash_node_st *next;unsigned long long hash;};
typedef struct _malloc_zone_t malloc_zone_t;
struct mecab_token_t {unsigned short lcAttr;unsigned short rcAttr;unsigned short posid;short wcost;unsigned int feature;unsigned int compound;};
typedef char *mem_nam_ptr_t;
struct mib_interface {int ifNumber;};
typedef struct _mime_filter_s mime_filter_t;
struct module_import {char *label;int modid;};
typedef struct netsnmp_cache_s netsnmp_cache;
typedef struct netsnmp_index_s netsnmp_index;
typedef struct netsnmp_tdata_s netsnmp_tdata;
struct nlm_sm_status {char *mon_name;int state;char priv[16];};
typedef struct pcap_dumper pcap_dumper_t;
enum ppd_conform_e {PPD_CONFORM_RELAXED = 0x0,PPD_CONFORM_STRICT = 0x1,};
typedef struct ppd_coption_s ppd_coption_t;
typedef union ppd_cplimit_u ppd_cplimit_t;
union ppd_cplimit_u {float custom_curve;int custom_int;float custom_invcurve;int custom_passcode;int custom_password;float custom_points;float custom_real;int custom_string;};
typedef union ppd_cpvalue_u ppd_cpvalue_t;
union ppd_cpvalue_u {float custom_curve;int custom_int;float custom_invcurve;char *custom_passcode;char *custom_password;float custom_points;float custom_real;char *custom_string;};
struct ppd_profile_s {char resolution[41];char media_type[41];float density;float gamma;float matrix[3][3];};
typedef struct ppd_profile_s ppd_profile_t;
enum ppd_section_e {PPD_ORDER_ANY = 0x0,PPD_ORDER_DOCUMENT = 0x1,PPD_ORDER_EXIT = 0x2,PPD_ORDER_JCL = 0x3,PPD_ORDER_PAGE = 0x4,PPD_ORDER_PROLOG = 0x5,};
typedef struct record_pqueue_st record_pqueue;
struct rslvmulti_req {struct sockaddr *sa;struct sockaddr **llsa;};
typedef void *sasl_calloc_t(unsigned long long, unsigned long long);
typedef int sasl_getopt_t(void *context,  char *plugin_name,  char *option,  char **result, unsigned int *len);
struct sasl_interact {unsigned long long id; char *challenge; char *prompt; char *defresult; void *result;unsigned int len;};
typedef void *sasl_malloc_t(unsigned long long);
typedef struct sasl_secret sasl_secret_t;
struct slapi_condvar;
struct sockaddr_ndrv {unsigned char snd_len;unsigned char snd_family;unsigned char snd_name[16];};
struct sqlite3_mutex;
typedef struct Mem sqlite3_value;
typedef unsigned long long sqlite_uint64;
struct ssl_cipher_st {int valid; char *name;unsigned long long id;unsigned long long algorithms;unsigned long long algo_strength;unsigned long long algorithm2;int strength_bits;int alg_bits;unsigned long long mask;unsigned long long mask_strength;};
typedef char symtab_name_t[32];
typedef int sync_policy_t;
struct twolevel_hint {unsigned int isub_image : 8;unsigned int itoc : 24;};
typedef struct vfs_context *vfs_context_t;
typedef int vm_behavior_t;
typedef int vm_purgable_t;
struct x86_state_hdr {int flavor;int count;};
typedef int (*xmlListWalker)( void *data,  void *user);
typedef struct _xmlParserCtxt xmlParserCtxt;
typedef struct _xmlSAXHandler xmlSAXHandler;
typedef struct _xmlSAXLocator xmlSAXLocator;
typedef struct _xmlSchemaType xmlSchemaType;
typedef struct _xmlSchematron xmlSchematron;
typedef char *(*xmlStrdupFunc)( char *str);
typedef struct _xmlStreamCtxt xmlStreamCtxt;
typedef struct _xmlTextReader xmlTextReader;
typedef struct _xmlTextWriter xmlTextWriter;
typedef struct _xmlValidState xmlValidState;
typedef struct _xmlXPathFunct xmlXPathFunct;
struct xp_box_struct {short x1;short y1;short x2;short y2;};
enum xp_depth_enum {XP_DEPTH_NIL = 0x0,XP_DEPTH_ARGB8888 = 0x1,XP_DEPTH_RGB555 = 0x2,XP_DEPTH_A8 = 0x3,XP_DEPTH_INDEX8 = 0x4,};
enum xp_error_enum {XP_Success = 0x0,XP_BadRequest = 0x1,XP_BadValue = 0x2,XP_BadWindow = 0x3,XP_BadMatch = 0x8,XP_BadAccess = 0xA,XP_BadImplementation = 0x11,};
typedef struct _xsltCompMatch xsltCompMatch;
typedef struct _xsltStackElem xsltStackElem;
enum yppush_status {YPPUSH_SUCC = 0x1,YPPUSH_AGE = 0x2,YPPUSH_NOMAP = 0xFFFFFFFF,YPPUSH_NODOM = 0xFFFFFFFE,YPPUSH_RSRC = 0xFFFFFFFD,YPPUSH_RPC = 0xFFFFFFFC,YPPUSH_MADDR = 0xFFFFFFFB,YPPUSH_YPERR = 0xFFFFFFFA,YPPUSH_BADARGS = 0xFFFFFFF9,YPPUSH_DBM = 0xFFFFFFF8,YPPUSH_FILE = 0xFFFFFFF7,YPPUSH_SKEW = 0xFFFFFFF6,YPPUSH_CLEAR = 0xFFFFFFF5,YPPUSH_FORCE = 0xFFFFFFF4,YPPUSH_XFRERR = 0xFFFFFFF3,YPPUSH_REFUSED = 0xFFFFFFF2,};
typedef int ASN1_BOOLEAN;
typedef struct asn1_string_st ASN1_INTEGER;
typedef struct asn1_string_st ASN1_UTCTIME;
typedef UnsignedWide AbsoluteTime;
typedef int *(*BER_ERRNO_FN)(void);
typedef struct conf_imodule_st CONF_IMODULE;
typedef struct _8224BF751892D9429891DD778DF6A995 CTL_RESPONSE;
enum CURL_TLSAUTH {CURL_TLSAUTH_NONE = 0x0,CURL_TLSAUTH_SRP = 0x1,CURL_TLSAUTH_LAST = 0x2,};
typedef struct _DNSRecordRef_t *DNSRecordRef;
typedef struct dtls1_bitmap_st DTLS1_BITMAP;
typedef struct ecdsa_method ECDSA_METHOD;
typedef struct EDIPartyName_st EDIPARTYNAME;
typedef struct _12B704064C062A29855D6F60F4B4754D EVP_MD_SVCTX;
typedef int Form_Options;
typedef struct GENERAL_NAME_st GENERAL_NAME;
typedef struct HMAC_MD5_CTX_s HMAC_MD5_CTX;
typedef int Item_Options;
typedef struct _keymap_entry KEYMAP_ENTRY;
typedef struct krb5_encdata_st KRB5_ENCDATA;
typedef struct krb5_tktbody_st KRB5_TKTBODY;
typedef struct ldap_nameform LDAPNameForm;
enum MACRO_ABSENT {ABSENT_BOOLEAN = -1,ABSENT_NUMERIC = -1,ABSENT_STRING = 0,};
enum MACRO_ACCESS {ACCESS_READONLY = 18,ACCESS_READWRITE = 19,ACCESS_WRITEONLY = 20,ACCESS_NOACCESS = 21,ACCESS_NOTIFY = 67,ACCESS_CREATE = 48,};
enum MACRO_AF_IPX {AF_IPX = 23,AF_SIP = 24,};
enum MACRO_ARPHRD {ARPHRD_ETHER = 1,ARPHRD_IEEE802 = 6,ARPHRD_FRELAY = 15,ARPHRD_IEEE1394 = 24,ARPHRD_IEEE1394_EUI64 = 27,};
enum MACRO_ASN1_F {ASN1_F_A2D_ASN1_OBJECT = 100,ASN1_F_A2I_ASN1_ENUMERATED = 101,ASN1_F_A2I_ASN1_INTEGER = 102,ASN1_F_A2I_ASN1_STRING = 103,ASN1_F_APPEND_EXP = 176,ASN1_F_ASN1_BIT_STRING_SET_BIT = 183,ASN1_F_ASN1_CB = 177,ASN1_F_ASN1_CHECK_TLEN = 104,ASN1_F_ASN1_COLLATE_PRIMITIVE = 105,ASN1_F_ASN1_COLLECT = 106,ASN1_F_ASN1_D2I_EX_PRIMITIVE = 108,ASN1_F_ASN1_D2I_FP = 109,ASN1_F_ASN1_D2I_READ_BIO = 107,ASN1_F_ASN1_DIGEST = 184,ASN1_F_ASN1_DO_ADB = 110,ASN1_F_ASN1_DUP = 111,ASN1_F_ASN1_ENUMERATED_SET = 112,ASN1_F_ASN1_ENUMERATED_TO_BN = 113,ASN1_F_ASN1_EX_C2I = 204,ASN1_F_ASN1_FIND_END = 190,ASN1_F_ASN1_GENERALIZEDTIME_SET = 185,ASN1_F_ASN1_GENERATE_V3 = 178,ASN1_F_ASN1_GET_OBJECT = 114,ASN1_F_ASN1_HEADER_NEW = 115,ASN1_F_ASN1_I2D_BIO = 116,ASN1_F_ASN1_I2D_FP = 117,ASN1_F_ASN1_INTEGER_SET = 118,ASN1_F_ASN1_INTEGER_TO_BN = 119,ASN1_F_ASN1_ITEM_D2I_FP = 206,ASN1_F_ASN1_ITEM_DUP = 191,ASN1_F_ASN1_ITEM_EX_COMBINE_NEW = 121,ASN1_F_ASN1_ITEM_EX_D2I = 120,ASN1_F_ASN1_ITEM_I2D_BIO = 192,ASN1_F_ASN1_ITEM_I2D_FP = 193,ASN1_F_ASN1_ITEM_PACK = 198,ASN1_F_ASN1_ITEM_SIGN = 195,ASN1_F_ASN1_ITEM_UNPACK = 199,ASN1_F_ASN1_ITEM_VERIFY = 197,ASN1_F_ASN1_MBSTRING_NCOPY = 122,ASN1_F_ASN1_OBJECT_NEW = 123,ASN1_F_ASN1_OUTPUT_DATA = 207,ASN1_F_ASN1_PACK_STRING = 124,ASN1_F_ASN1_PCTX_NEW = 205,ASN1_F_ASN1_PKCS5_PBE_SET = 125,ASN1_F_ASN1_SEQ_PACK = 126,ASN1_F_ASN1_SEQ_UNPACK = 127,ASN1_F_ASN1_SIGN = 128,ASN1_F_ASN1_STR2TYPE = 179,ASN1_F_ASN1_STRING_SET = 186,ASN1_F_ASN1_STRING_TABLE_ADD = 129,ASN1_F_ASN1_STRING_TYPE_NEW = 130,ASN1_F_ASN1_TEMPLATE_EX_D2I = 132,ASN1_F_ASN1_TEMPLATE_NEW = 133,ASN1_F_ASN1_TEMPLATE_NOEXP_D2I = 131,ASN1_F_ASN1_TIME_SET = 175,ASN1_F_ASN1_TYPE_GET_INT_OCTETSTRING = 134,ASN1_F_ASN1_TYPE_GET_OCTETSTRING = 135,ASN1_F_ASN1_UNPACK_STRING = 136,ASN1_F_ASN1_UTCTIME_SET = 187,ASN1_F_ASN1_VERIFY = 137,ASN1_F_B64_READ_ASN1 = 208,ASN1_F_B64_WRITE_ASN1 = 209,ASN1_F_BITSTR_CB = 180,ASN1_F_BN_TO_ASN1_ENUMERATED = 138,ASN1_F_BN_TO_ASN1_INTEGER = 139,ASN1_F_C2I_ASN1_BIT_STRING = 189,ASN1_F_C2I_ASN1_INTEGER = 194,ASN1_F_C2I_ASN1_OBJECT = 196,ASN1_F_COLLECT_DATA = 140,ASN1_F_D2I_ASN1_BIT_STRING = 141,ASN1_F_D2I_ASN1_BOOLEAN = 142,ASN1_F_D2I_ASN1_BYTES = 143,ASN1_F_D2I_ASN1_GENERALIZEDTIME = 144,ASN1_F_D2I_ASN1_HEADER = 145,ASN1_F_D2I_ASN1_INTEGER = 146,ASN1_F_D2I_ASN1_OBJECT = 147,ASN1_F_D2I_ASN1_SET = 148,ASN1_F_D2I_ASN1_TYPE_BYTES = 149,ASN1_F_D2I_ASN1_UINTEGER = 150,ASN1_F_D2I_ASN1_UTCTIME = 151,ASN1_F_D2I_NETSCAPE_RSA = 152,ASN1_F_D2I_NETSCAPE_RSA_2 = 153,ASN1_F_D2I_PRIVATEKEY = 154,ASN1_F_D2I_PUBLICKEY = 155,ASN1_F_D2I_RSA_NET = 200,ASN1_F_D2I_RSA_NET_2 = 201,ASN1_F_D2I_X509 = 156,ASN1_F_D2I_X509_CINF = 157,ASN1_F_D2I_X509_PKEY = 159,ASN1_F_I2D_ASN1_SET = 188,ASN1_F_I2D_ASN1_TIME = 160,ASN1_F_I2D_DSA_PUBKEY = 161,ASN1_F_I2D_EC_PUBKEY = 181,ASN1_F_I2D_PRIVATEKEY = 163,ASN1_F_I2D_PUBLICKEY = 164,ASN1_F_I2D_RSA_NET = 162,ASN1_F_I2D_RSA_PUBKEY = 165,ASN1_F_LONG_C2I = 166,ASN1_F_OID_MODULE_INIT = 174,ASN1_F_PARSE_TAGGING = 182,ASN1_F_PKCS5_PBE2_SET = 167,ASN1_F_PKCS5_PBE_SET = 202,ASN1_F_SMIME_READ_ASN1 = 210,ASN1_F_SMIME_TEXT = 211,ASN1_F_X509_CINF_NEW = 168,ASN1_F_X509_CRL_ADD0_REVOKED = 169,ASN1_F_X509_INFO_NEW = 170,ASN1_F_X509_NAME_ENCODE = 203,ASN1_F_X509_NAME_EX_D2I = 158,ASN1_F_X509_NAME_EX_NEW = 171,ASN1_F_X509_NEW = 172,ASN1_F_X509_PKEY_NEW = 173,ASN1_R_ADDING_OBJECT = 171,ASN1_R_ASN1_PARSE_ERROR = 198,ASN1_R_ASN1_SIG_PARSE_ERROR = 199,ASN1_R_AUX_ERROR = 100,ASN1_R_BAD_CLASS = 101,ASN1_R_BAD_OBJECT_HEADER = 102,ASN1_R_BAD_PASSWORD_READ = 103,ASN1_R_BAD_TAG = 104,ASN1_R_BMPSTRING_IS_WRONG_LENGTH = 210,ASN1_R_BN_LIB = 105,ASN1_R_BOOLEAN_IS_WRONG_LENGTH = 106,ASN1_R_BUFFER_TOO_SMALL = 107,ASN1_R_CIPHER_HAS_NO_OBJECT_IDENTIFIER = 108,ASN1_R_DATA_IS_WRONG = 109,ASN1_R_DECODE_ERROR = 110,ASN1_R_DECODING_ERROR = 111,ASN1_R_DEPTH_EXCEEDED = 174,ASN1_R_ENCODE_ERROR = 112,ASN1_R_ERROR_GETTING_TIME = 173,ASN1_R_ERROR_LOADING_SECTION = 172,ASN1_R_ERROR_PARSING_SET_ELEMENT = 113,ASN1_R_ERROR_SETTING_CIPHER_PARAMS = 114,ASN1_R_EXPECTING_AN_INTEGER = 115,ASN1_R_EXPECTING_AN_OBJECT = 116,ASN1_R_EXPECTING_A_BOOLEAN = 117,ASN1_R_EXPECTING_A_TIME = 118,ASN1_R_EXPLICIT_LENGTH_MISMATCH = 119,ASN1_R_EXPLICIT_TAG_NOT_CONSTRUCTED = 120,ASN1_R_FIELD_MISSING = 121,ASN1_R_FIRST_NUM_TOO_LARGE = 122,ASN1_R_HEADER_TOO_LONG = 123,ASN1_R_ILLEGAL_BITSTRING_FORMAT = 175,ASN1_R_ILLEGAL_BOOLEAN = 176,ASN1_R_ILLEGAL_CHARACTERS = 124,ASN1_R_ILLEGAL_FORMAT = 177,ASN1_R_ILLEGAL_HEX = 178,ASN1_R_ILLEGAL_IMPLICIT_TAG = 179,ASN1_R_ILLEGAL_INTEGER = 180,ASN1_R_ILLEGAL_NESTED_TAGGING = 181,ASN1_R_ILLEGAL_NULL = 125,ASN1_R_ILLEGAL_NULL_VALUE = 182,ASN1_R_ILLEGAL_OBJECT = 183,ASN1_R_ILLEGAL_OPTIONAL_ANY = 126,ASN1_R_ILLEGAL_OPTIONS_ON_ITEM_TEMPLATE = 170,ASN1_R_ILLEGAL_TAGGED_ANY = 127,ASN1_R_ILLEGAL_TIME_VALUE = 184,ASN1_R_INTEGER_NOT_ASCII_FORMAT = 185,ASN1_R_INTEGER_TOO_LARGE_FOR_LONG = 128,ASN1_R_INVALID_BMPSTRING_LENGTH = 129,ASN1_R_INVALID_DIGIT = 130,ASN1_R_INVALID_MIME_TYPE = 200,ASN1_R_INVALID_MODIFIER = 186,ASN1_R_INVALID_NUMBER = 187,ASN1_R_INVALID_OBJECT_ENCODING = 212,ASN1_R_INVALID_SEPARATOR = 131,ASN1_R_INVALID_TIME_FORMAT = 132,ASN1_R_INVALID_UNIVERSALSTRING_LENGTH = 133,ASN1_R_INVALID_UTF8STRING = 134,ASN1_R_IV_TOO_LARGE = 135,ASN1_R_LENGTH_ERROR = 136,ASN1_R_LIST_ERROR = 188,ASN1_R_MIME_NO_CONTENT_TYPE = 201,ASN1_R_MIME_PARSE_ERROR = 202,ASN1_R_MIME_SIG_PARSE_ERROR = 203,ASN1_R_MISSING_EOC = 137,ASN1_R_MISSING_SECOND_NUMBER = 138,ASN1_R_MISSING_VALUE = 189,ASN1_R_MSTRING_NOT_UNIVERSAL = 139,ASN1_R_MSTRING_WRONG_TAG = 140,ASN1_R_NESTED_ASN1_STRING = 197,ASN1_R_NON_HEX_CHARACTERS = 141,ASN1_R_NOT_ASCII_FORMAT = 190,ASN1_R_NOT_ENOUGH_DATA = 142,ASN1_R_NO_CONTENT_TYPE = 204,ASN1_R_NO_MATCHING_CHOICE_TYPE = 143,ASN1_R_NO_MULTIPART_BODY_FAILURE = 205,ASN1_R_NO_MULTIPART_BOUNDARY = 206,ASN1_R_NO_SIG_CONTENT_TYPE = 207,ASN1_R_NULL_IS_WRONG_LENGTH = 144,ASN1_R_OBJECT_NOT_ASCII_FORMAT = 191,ASN1_R_ODD_NUMBER_OF_CHARS = 145,ASN1_R_PRIVATE_KEY_HEADER_MISSING = 146,ASN1_R_SECOND_NUMBER_TOO_LARGE = 147,ASN1_R_SEQUENCE_LENGTH_MISMATCH = 148,ASN1_R_SEQUENCE_NOT_CONSTRUCTED = 149,ASN1_R_SEQUENCE_OR_SET_NEEDS_CONFIG = 192,ASN1_R_SHORT_LINE = 150,ASN1_R_SIG_INVALID_MIME_TYPE = 208,ASN1_R_STREAMING_NOT_SUPPORTED = 209,ASN1_R_STRING_TOO_LONG = 151,ASN1_R_STRING_TOO_SHORT = 152,ASN1_R_TAG_VALUE_TOO_HIGH = 153,ASN1_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD = 154,ASN1_R_TIME_NOT_ASCII_FORMAT = 193,ASN1_R_TOO_LONG = 155,ASN1_R_TYPE_NOT_CONSTRUCTED = 156,ASN1_R_UNABLE_TO_DECODE_RSA_KEY = 157,ASN1_R_UNABLE_TO_DECODE_RSA_PRIVATE_KEY = 158,ASN1_R_UNEXPECTED_EOC = 159,ASN1_R_UNIVERSALSTRING_IS_WRONG_LENGTH = 211,ASN1_R_UNKNOWN_FORMAT = 160,ASN1_R_UNKNOWN_MESSAGE_DIGEST_ALGORITHM = 161,ASN1_R_UNKNOWN_OBJECT_TYPE = 162,ASN1_R_UNKNOWN_PUBLIC_KEY_TYPE = 163,ASN1_R_UNKNOWN_TAG = 194,ASN1_R_UNKOWN_FORMAT = 195,ASN1_R_UNSUPPORTED_ANY_DEFINED_BY_TYPE = 164,ASN1_R_UNSUPPORTED_CIPHER = 165,ASN1_R_UNSUPPORTED_ENCRYPTION_ALGORITHM = 166,ASN1_R_UNSUPPORTED_PUBLIC_KEY_TYPE = 167,ASN1_R_UNSUPPORTED_TYPE = 196,ASN1_R_WRONG_TAG = 168,ASN1_R_WRONG_TYPE = 169,ASN1_TFLG_OPTIONAL = 1,ASN1_TFLG_SET_OF = 2,ASN1_TFLG_SEQUENCE_OF = 4,ASN1_TFLG_SET_ORDER = 6,ASN1_TFLG_SK_MASK = 6,ASN1_TFLG_IMPTAG = 8,ASN1_TFLG_EXPTAG = 16,ASN1_TFLG_TAG_MASK = 24,ASN1_TFLG_UNIVERSAL = 0,ASN1_TFLG_APPLICATION = 64,ASN1_TFLG_CONTEXT = 128,ASN1_TFLG_PRIVATE = 192,ASN1_TFLG_TAG_CLASS = 192,ASN1_TFLG_ADB_MASK = 768,ASN1_TFLG_ADB_OID = 256,ASN1_TFLG_ADB_INT = 512,ASN1_TFLG_COMBINE = 1024,ASN1_TFLG_NDEF = 2048,ASN1_ITYPE_PRIMITIVE = 0,ASN1_ITYPE_SEQUENCE = 1,ASN1_ITYPE_CHOICE = 2,ASN1_ITYPE_COMPAT = 3,ASN1_ITYPE_EXTERN = 4,ASN1_ITYPE_MSTRING = 5,ASN1_ITYPE_NDEF_SEQUENCE = 6,ASN1_AFLG_REFCOUNT = 1,ASN1_AFLG_ENCODING = 2,ASN1_AFLG_BROKEN = 4,ASN1_OP_NEW_PRE = 0,ASN1_OP_NEW_POST = 1,ASN1_OP_FREE_PRE = 2,ASN1_OP_FREE_POST = 3,ASN1_OP_D2I_PRE = 4,ASN1_OP_D2I_POST = 5,ASN1_OP_I2D_PRE = 6,ASN1_OP_I2D_POST = 7,};
enum MACRO_AUE_at {AUE_at_create = 6144,AUE_at_delete = 6145,AUE_at_perm = 6146,AUE_cron_invoke = 6147,AUE_crontab_create = 6148,AUE_crontab_delete = 6149,AUE_crontab_perm = 6150,AUE_inetd_connect = 6151,AUE_login = 6152,AUE_logout = 6153,AUE_telnet = 6154,AUE_rlogin = 6155,AUE_mountd_mount = 6156,AUE_mountd_umount = 6157,AUE_rshd = 6158,AUE_su = 6159,AUE_halt = 6160,AUE_reboot = 6161,AUE_rexecd = 6162,AUE_passwd = 6163,AUE_rexd = 6164,AUE_ftpd = 6165,AUE_init = 6166,AUE_uadmin = 6167,AUE_shutdown = 6168,AUE_poweroff = 6169,AUE_crontab_mod = 6170,AUE_ftpd_logout = 6171,AUE_ssh = 6172,AUE_role_login = 6173,AUE_prof_cmd = 6180,AUE_filesystem_add = 6181,AUE_filesystem_delete = 6182,AUE_filesystem_modify = 6183,AUE_allocate_succ = 6200,AUE_allocate_fail = 6201,AUE_deallocate_succ = 6202,AUE_deallocate_fail = 6203,AUE_listdevice_succ = 6205,AUE_listdevice_fail = 6206,AUE_create_user = 6207,AUE_modify_user = 6208,AUE_delete_user = 6209,AUE_disable_user = 6210,AUE_enable_user = 6211,AUE_newgrp_login = 6212,AUE_admin_authentication = 6213,AUE_kadmind_auth = 6214,AUE_kadmind_unauth = 6215,AUE_krb5kdc_as_req = 6216,AUE_krb5kdc_tgs_req = 6217,AUE_krb5kdc_tgs_req_2ndtktmm = 6218,AUE_krb5kdc_tgs_req_alt_tgt = 6219,AUE_DARWIN_audit_startup = 6171,AUE_DARWIN_audit_shutdown = 6172,AUE_DARWIN_sudo = 6300,AUE_DARWIN_modify_password = 6501,AUE_DARWIN_create_group = 6511,AUE_DARWIN_delete_group = 6512,AUE_DARWIN_modify_group = 6513,AUE_DARWIN_add_to_group = 6514,AUE_DARWIN_remove_from_group = 6515,AUE_DARWIN_revoke_obj = 6521,AUE_DARWIN_lw_login = 6600,AUE_DARWIN_lw_logout = 6601,AUE_DARWIN_auth_user = 7000,AUE_DARWIN_ssconn = 7001,AUE_DARWIN_ssauthorize = 7002,AUE_DARWIN_ssauthint = 7003,AUE_openssh = 32800,AUE_audit_startup = 45000,AUE_audit_shutdown = 45001,AUE_modify_password = 45014,AUE_create_group = 45015,AUE_delete_group = 45016,AUE_modify_group = 45017,AUE_add_to_group = 45018,AUE_remove_from_group = 45019,AUE_revoke_obj = 45020,AUE_lw_login = 45021,AUE_lw_logout = 45022,AUE_auth_user = 45023,AUE_ssconn = 45024,AUE_ssauthorize = 45025,AUE_ssauthint = 45026,AUE_calife = 45027,AUE_sudo = 45028,AUE_audit_recovery = 45029,AUE_ssauthmech = 45030,};
enum MACRO_AU_PRS {AU_PRS_USECACHE = 0,AU_PRS_REREAD = 1,AU_PRS_SUCCESS = 1,AU_PRS_FAILURE = 2,AU_PRS_BOTH = 3,AU_CLASS_NAME_MAX = 8,AU_CLASS_DESC_MAX = 72,AU_EVENT_NAME_MAX = 30,AU_EVENT_DESC_MAX = 50,AU_USER_NAME_MAX = 50,AU_LINE_MAX = 256,};
enum MACRO_B14400 {B14400 = 14400,};
enum MACRO_B19200 {B19200 = 19200,};
enum MACRO_B28800 {B28800 = 28800,};
enum MACRO_B38400 {B38400 = 38400,};
enum MACRO_B57600 {B57600 = 57600,};
enum MACRO_B76800 {B76800 = 76800,};
enum MACRO_BLKDEV {BLKDEV_IOSIZE = 2048,};
enum MACRO_BPF_LD {BPF_LD = 0x0,BPF_LDX = 0x1,BPF_ST = 0x2,BPF_STX = 0x3,BPF_ALU = 0x4,BPF_JMP = 0x5,BPF_RET = 0x6,BPF_MISC = 0x7,BPF_W = 0x0,BPF_H = 0x8,BPF_B = 0x10,BPF_IMM = 0x0,BPF_ABS = 0x20,BPF_IND = 0x40,BPF_MEM = 0x60,BPF_LEN = 0x80,BPF_MSH = 0xA0,BPF_ADD = 0x0,BPF_SUB = 0x10,BPF_MUL = 0x20,BPF_DIV = 0x30,BPF_OR = 0x40,BPF_AND = 0x50,BPF_LSH = 0x60,BPF_RSH = 0x70,BPF_NEG = 0x80,BPF_JA = 0x0,BPF_JEQ = 0x10,BPF_JGT = 0x20,BPF_JGE = 0x30,BPF_JSET = 0x40,BPF_K = 0x0,BPF_X = 0x8,BPF_A = 0x10,BPF_TAX = 0x0,BPF_TXA = 0x80,BPF_MEMWORDS = 0x10,};
enum MACRO_BUTTON {BUTTON_CTRL = 16777216,BUTTON_SHIFT = 33554432,BUTTON_ALT = 67108864,};
enum MACRO_B_ASN1 {B_ASN1_NUMERICSTRING = 0x1,B_ASN1_PRINTABLESTRING = 0x2,B_ASN1_T61STRING = 0x4,B_ASN1_TELETEXSTRING = 0x4,B_ASN1_VIDEOTEXSTRING = 0x8,B_ASN1_IA5STRING = 0x10,B_ASN1_GRAPHICSTRING = 0x20,B_ASN1_ISO64STRING = 0x40,B_ASN1_VISIBLESTRING = 0x40,B_ASN1_GENERALSTRING = 0x80,B_ASN1_UNIVERSALSTRING = 0x100,B_ASN1_OCTET_STRING = 0x200,B_ASN1_BIT_STRING = 0x400,B_ASN1_BMPSTRING = 0x800,B_ASN1_UNKNOWN = 0x1000,B_ASN1_UTF8STRING = 0x2000,B_ASN1_UTCTIME = 0x4000,B_ASN1_GENERALIZEDTIME = 0x8000,B_ASN1_SEQUENCE = 0x10000,};
enum MACRO_CANCEL {CANCEL = 3,NAMES = 4,};
enum MACRO_CERASE {CERASE = 0x7F,};
enum MACRO_CFLUSH {CFLUSH = 15,};
enum MACRO_CLNEXT {CLNEXT = 22,};
enum MACRO_CLOCKS {CLOCKS_PER_SEC = 1000000,};
enum MACRO_CLSIZE {CLSIZE = 1,};
enum MACRO_COMAPT {COMAPT_MAXLOGNAME = 12,};
enum MACRO_COMMIT {COMMIT = 3,FREE = 4,};
enum MACRO_CONFIG {CONFIG_MAXVIFS = 32,CONFIG_MFCTBLSIZ = 256,};
enum MACRO_CROUND {CROUND = 63,MAXBSIZE = 1048576,};
enum MACRO_CRPRNT {CRPRNT = 18,};
enum MACRO_CRYPTO {CRYPTO_LOCK_ERR = 1,CRYPTO_LOCK_EX_DATA = 2,CRYPTO_LOCK_X509 = 3,CRYPTO_LOCK_X509_INFO = 4,CRYPTO_LOCK_X509_PKEY = 5,CRYPTO_LOCK_X509_CRL = 6,CRYPTO_LOCK_X509_REQ = 7,CRYPTO_LOCK_DSA = 8,CRYPTO_LOCK_RSA = 9,CRYPTO_LOCK_EVP_PKEY = 10,CRYPTO_LOCK_X509_STORE = 11,CRYPTO_LOCK_SSL_CTX = 12,CRYPTO_LOCK_SSL_CERT = 13,CRYPTO_LOCK_SSL_SESSION = 14,CRYPTO_LOCK_SSL_SESS_CERT = 15,CRYPTO_LOCK_SSL = 16,CRYPTO_LOCK_SSL_METHOD = 17,CRYPTO_LOCK_RAND = 18,CRYPTO_LOCK_RAND2 = 19,CRYPTO_LOCK_MALLOC = 20,CRYPTO_LOCK_BIO = 21,CRYPTO_LOCK_GETHOSTBYNAME = 22,CRYPTO_LOCK_GETSERVBYNAME = 23,CRYPTO_LOCK_READDIR = 24,CRYPTO_LOCK_RSA_BLINDING = 25,CRYPTO_LOCK_DH = 26,CRYPTO_LOCK_MALLOC2 = 27,CRYPTO_LOCK_DSO = 28,CRYPTO_LOCK_DYNLOCK = 29,CRYPTO_LOCK_ENGINE = 30,CRYPTO_LOCK_UI = 31,CRYPTO_LOCK_ECDSA = 32,CRYPTO_LOCK_EC = 33,CRYPTO_LOCK_ECDH = 34,CRYPTO_LOCK_BN = 35,CRYPTO_LOCK_EC_PRE_COMP = 36,CRYPTO_LOCK_STORE = 37,CRYPTO_LOCK_COMP = 38,CRYPTO_NUM_LOCKS = 39,CRYPTO_LOCK = 1,CRYPTO_UNLOCK = 2,CRYPTO_READ = 4,CRYPTO_WRITE = 8,CRYPTO_MEM_CHECK_OFF = 0,CRYPTO_MEM_CHECK_ON = 1,CRYPTO_MEM_CHECK_ENABLE = 2,CRYPTO_MEM_CHECK_DISABLE = 3,};
enum MACRO_CSTART {CSTART = 17,};
enum MACRO_CURSES {CURSES = 1,};
enum MACRO_DELETE {DELETE = 2,};
enum MACRO_DEVICE {DEVICE_PAGER_GUARDED = 0x1,DEVICE_PAGER_COHERENT = 0x2,DEVICE_PAGER_CACHE_INHIB = 0x4,DEVICE_PAGER_WRITE_THROUGH = 0x8,DEVICE_PAGER_CONTIGUOUS = 0x100,DEVICE_PAGER_NOPHYSCACHE = 0x200,};
enum MACRO_DOUBLE {SIZEOF_DOUBLE = 8,HAVE_LONG_DOUBLE = 1,SIZEOF_LONG_DOUBLE = 16,};
enum MACRO_EBADID {EBADID = 5,};
enum MACRO_ECHOKE {ECHOKE = 0x1,ECHOE = 0x2,ECHOK = 0x4,ECHONL = 0x10,ECHOPRT = 0x20,ECHOCTL = 0x40,ISIG = 0x80,ICANON = 0x100,ALTWERASE = 0x200,IEXTEN = 0x400,EXTPROC = 0x800,NOKERNINFO = 0x2000000,};
enum MACRO_ENDIAN {LITTLE_ENDIAN = 1234,BIG_ENDIAN = 4321,PDP_ENDIAN = 3412,};
enum MACRO_ENGINE {ENGINE_METHOD_RSA = 0x1,ENGINE_METHOD_DSA = 0x2,ENGINE_METHOD_DH = 0x4,ENGINE_METHOD_RAND = 0x8,ENGINE_METHOD_ECDH = 0x10,ENGINE_METHOD_ECDSA = 0x20,ENGINE_METHOD_CIPHERS = 0x40,ENGINE_METHOD_DIGESTS = 0x80,ENGINE_METHOD_STORE = 0x100,ENGINE_METHOD_ALL = 0xFFFF,ENGINE_METHOD_NONE = 0x0,ENGINE_TABLE_FLAG_NOINIT = 0x1,ENGINE_FLAGS_MANUAL_CMD_CTRL = 0x2,ENGINE_FLAGS_BY_ID_COPY = 0x4,ENGINE_CMD_FLAG_NUMERIC = 0x1,ENGINE_CMD_FLAG_STRING = 0x2,ENGINE_CMD_FLAG_NO_INPUT = 0x4,ENGINE_CMD_FLAG_INTERNAL = 0x8,ENGINE_CTRL_SET_LOGSTREAM = 0x1,ENGINE_CTRL_SET_PASSWORD_CALLBACK = 0x2,ENGINE_CTRL_HUP = 0x3,ENGINE_CTRL_SET_USER_INTERFACE = 0x4,ENGINE_CTRL_SET_CALLBACK_DATA = 0x5,ENGINE_CTRL_LOAD_CONFIGURATION = 0x6,ENGINE_CTRL_LOAD_SECTION = 0x7,ENGINE_CTRL_HAS_CTRL_FUNCTION = 0xA,ENGINE_CTRL_GET_FIRST_CMD_TYPE = 0xB,ENGINE_CTRL_GET_NEXT_CMD_TYPE = 0xC,ENGINE_CTRL_GET_CMD_FROM_NAME = 0xD,ENGINE_CTRL_GET_NAME_LEN_FROM_CMD = 0xE,ENGINE_CTRL_GET_NAME_FROM_CMD = 0xF,ENGINE_CTRL_GET_DESC_LEN_FROM_CMD = 0x10,ENGINE_CTRL_GET_DESC_FROM_CMD = 0x11,ENGINE_CTRL_GET_CMD_FLAGS = 0x12,ENGINE_CMD_BASE = 0xC8,ENGINE_CTRL_CHIL_SET_FORKCHECK = 0x64,ENGINE_CTRL_CHIL_NO_LOCKING = 0x65,};
enum MACRO_EUNDEF {EUNDEF = 0,ENOTFOUND = 1,EACCESS = 2,};
enum MACRO_EVFILT {EVFILT_READ = -1,EVFILT_WRITE = -2,EVFILT_AIO = -3,EVFILT_VNODE = -4,EVFILT_PROC = -5,EVFILT_SIGNAL = -6,EVFILT_TIMER = -7,EVFILT_MACHPORT = -8,EVFILT_FS = -9,EVFILT_USER = -10,EVFILT_VM = -12,EVFILT_SYSCOUNT = 12,EVFILT_THREADMARKER = 12,};
enum MACRO_EVP_PK {EVP_PK_RSA = 0x1,EVP_PK_DSA = 0x2,EVP_PK_DH = 0x4,EVP_PK_EC = 0x8,EVP_PKT_SIGN = 0x10,EVP_PKT_ENC = 0x20,EVP_PKT_EXCH = 0x40,EVP_PKS_RSA = 0x100,EVP_PKS_DSA = 0x200,EVP_PKS_EC = 0x400,EVP_PKT_EXP = 0x1000,EVP_PKEY_NONE = 0x0,EVP_PKEY_RSA = 0x6,EVP_PKEY_RSA2 = 0x13,EVP_PKEY_DSA = 0x74,EVP_PKEY_DSA1 = 0x43,EVP_PKEY_DSA2 = 0x42,EVP_PKEY_DSA3 = 0x71,EVP_PKEY_DSA4 = 0x46,EVP_PKEY_DH = 0x1C,EVP_PKEY_EC = 0x198,EVP_PKEY_MO_SIGN = 0x1,EVP_PKEY_MO_VERIFY = 0x2,EVP_PKEY_MO_ENCRYPT = 0x4,EVP_PKEY_MO_DECRYPT = 0x8,EVP_MD_FLAG_ONESHOT = 0x1,EVP_MD_FLAG_FIPS = 0x400,EVP_MD_FLAG_SVCTX = 0x800,EVP_MD_CTX_FLAG_ONESHOT = 0x1,EVP_MD_CTX_FLAG_CLEANED = 0x2,EVP_MD_CTX_FLAG_REUSE = 0x4,EVP_MD_CTX_FLAG_NON_FIPS_ALLOW = 0x8,EVP_MD_CTX_FLAG_PAD_MASK = 0xF0,EVP_MD_CTX_FLAG_PAD_PKCS1 = 0x0,EVP_MD_CTX_FLAG_PAD_X931 = 0x10,EVP_MD_CTX_FLAG_PAD_PSS = 0x20,EVP_MD_CTX_FLAG_PSS_MDLEN = 0xFFFF,EVP_MD_CTX_FLAG_PSS_MREC = 0xFFFE,EVP_CIPH_STREAM_CIPHER = 0x0,EVP_CIPH_ECB_MODE = 0x1,EVP_CIPH_CBC_MODE = 0x2,EVP_CIPH_CFB_MODE = 0x3,EVP_CIPH_OFB_MODE = 0x4,EVP_CIPH_MODE = 0x7,EVP_CIPH_VARIABLE_LENGTH = 0x8,EVP_CIPH_CUSTOM_IV = 0x10,EVP_CIPH_ALWAYS_CALL_INIT = 0x20,EVP_CIPH_CTRL_INIT = 0x40,EVP_CIPH_CUSTOM_KEY_LENGTH = 0x80,EVP_CIPH_NO_PADDING = 0x100,EVP_CIPH_RAND_KEY = 0x200,EVP_CIPH_FLAG_FIPS = 0x400,EVP_CIPH_FLAG_NON_FIPS_ALLOW = 0x800,EVP_CIPH_FLAG_DEFAULT_ASN1 = 0x1000,EVP_CIPH_FLAG_LENGTH_BITS = 0x2000,EVP_CTRL_INIT = 0x0,EVP_CTRL_SET_KEY_LENGTH = 0x1,EVP_CTRL_GET_RC2_KEY_BITS = 0x2,EVP_CTRL_SET_RC2_KEY_BITS = 0x3,EVP_CTRL_GET_RC5_ROUNDS = 0x4,EVP_CTRL_SET_RC5_ROUNDS = 0x5,EVP_CTRL_RAND_KEY = 0x6,EVP_F_AES_INIT_KEY = 0x85,EVP_F_ALG_MODULE_INIT = 0x8A,EVP_F_CAMELLIA_INIT_KEY = 0x9F,EVP_F_D2I_PKEY = 0x64,EVP_F_DO_EVP_ENC_ENGINE = 0x8C,EVP_F_DO_EVP_ENC_ENGINE_FULL = 0x8D,EVP_F_DO_EVP_MD_ENGINE = 0x8B,EVP_F_DO_EVP_MD_ENGINE_FULL = 0x8E,EVP_F_DSAPKEY2PKCS8 = 0x86,EVP_F_DSA_PKEY2PKCS8 = 0x87,EVP_F_ECDSA_PKEY2PKCS8 = 0x81,EVP_F_ECKEY_PKEY2PKCS8 = 0x84,EVP_F_EVP_CIPHERINIT = 0x89,EVP_F_EVP_CIPHERINIT_EX = 0x7B,EVP_F_EVP_CIPHER_CTX_CTRL = 0x7C,EVP_F_EVP_CIPHER_CTX_SET_KEY_LENGTH = 0x7A,EVP_F_EVP_DECRYPTFINAL_EX = 0x65,EVP_F_EVP_DIGESTINIT = 0x88,EVP_F_EVP_DIGESTINIT_EX = 0x80,EVP_F_EVP_ENCRYPTFINAL_EX = 0x7F,EVP_F_EVP_MD_CTX_COPY_EX = 0x6E,EVP_F_EVP_OPENINIT = 0x66,EVP_F_EVP_PBE_ALG_ADD = 0x73,EVP_F_EVP_PBE_CIPHERINIT = 0x74,EVP_F_EVP_PKCS82PKEY = 0x6F,EVP_F_EVP_PKEY2PKCS8_BROKEN = 0x71,EVP_F_EVP_PKEY_COPY_PARAMETERS = 0x67,EVP_F_EVP_PKEY_DECRYPT = 0x68,EVP_F_EVP_PKEY_ENCRYPT = 0x69,EVP_F_EVP_PKEY_GET1_DH = 0x77,EVP_F_EVP_PKEY_GET1_DSA = 0x78,EVP_F_EVP_PKEY_GET1_ECDSA = 0x82,EVP_F_EVP_PKEY_GET1_EC_KEY = 0x83,EVP_F_EVP_PKEY_GET1_RSA = 0x79,EVP_F_EVP_PKEY_NEW = 0x6A,EVP_F_EVP_RIJNDAEL = 0x7E,EVP_F_EVP_SIGNFINAL = 0x6B,EVP_F_EVP_VERIFYFINAL = 0x6C,EVP_F_PKCS5_PBE_KEYIVGEN = 0x75,EVP_F_PKCS5_V2_PBE_KEYIVGEN = 0x76,EVP_F_PKCS8_SET_BROKEN = 0x70,EVP_F_RC2_MAGIC_TO_METH = 0x6D,EVP_F_RC5_CTRL = 0x7D,EVP_R_AES_KEY_SETUP_FAILED = 0x8F,EVP_R_ASN1_LIB = 0x8C,EVP_R_BAD_BLOCK_LENGTH = 0x88,EVP_R_BAD_DECRYPT = 0x64,EVP_R_BAD_KEY_LENGTH = 0x89,EVP_R_BN_DECODE_ERROR = 0x70,EVP_R_BN_PUBKEY_ERROR = 0x71,EVP_R_CAMELLIA_KEY_SETUP_FAILED = 0x9D,EVP_R_CIPHER_PARAMETER_ERROR = 0x7A,EVP_R_CTRL_NOT_IMPLEMENTED = 0x84,EVP_R_CTRL_OPERATION_NOT_IMPLEMENTED = 0x85,EVP_R_DATA_NOT_MULTIPLE_OF_BLOCK_LENGTH = 0x8A,EVP_R_DECODE_ERROR = 0x72,EVP_R_DIFFERENT_KEY_TYPES = 0x65,EVP_R_DISABLED_FOR_FIPS = 0x90,EVP_R_ENCODE_ERROR = 0x73,EVP_R_ERROR_LOADING_SECTION = 0x91,EVP_R_ERROR_SETTING_FIPS_MODE = 0x92,EVP_R_EVP_PBE_CIPHERINIT_ERROR = 0x77,EVP_R_EXPECTING_AN_RSA_KEY = 0x7F,EVP_R_EXPECTING_A_DH_KEY = 0x80,EVP_R_EXPECTING_A_DSA_KEY = 0x81,EVP_R_EXPECTING_A_ECDSA_KEY = 0x8D,EVP_R_EXPECTING_A_EC_KEY = 0x8E,EVP_R_FIPS_MODE_NOT_SUPPORTED = 0x93,EVP_R_INITIALIZATION_ERROR = 0x86,EVP_R_INPUT_NOT_INITIALIZED = 0x6F,EVP_R_INVALID_FIPS_MODE = 0x94,EVP_R_INVALID_KEY_LENGTH = 0x82,EVP_R_IV_TOO_LARGE = 0x66,EVP_R_KEYGEN_FAILURE = 0x78,EVP_R_MISSING_PARAMETERS = 0x67,EVP_R_NO_CIPHER_SET = 0x83,EVP_R_NO_DIGEST_SET = 0x8B,EVP_R_NO_DSA_PARAMETERS = 0x74,EVP_R_NO_SIGN_FUNCTION_CONFIGURED = 0x68,EVP_R_NO_VERIFY_FUNCTION_CONFIGURED = 0x69,EVP_R_PKCS8_UNKNOWN_BROKEN_TYPE = 0x75,EVP_R_PUBLIC_KEY_NOT_RSA = 0x6A,EVP_R_UNKNOWN_OPTION = 0x95,EVP_R_UNKNOWN_PBE_ALGORITHM = 0x79,EVP_R_UNSUPORTED_NUMBER_OF_ROUNDS = 0x87,EVP_R_UNSUPPORTED_CIPHER = 0x6B,EVP_R_UNSUPPORTED_KEYLENGTH = 0x7B,EVP_R_UNSUPPORTED_KEY_DERIVATION_FUNCTION = 0x7C,EVP_R_UNSUPPORTED_KEY_SIZE = 0x6C,EVP_R_UNSUPPORTED_PRF = 0x7D,EVP_R_UNSUPPORTED_PRIVATE_KEY_ALGORITHM = 0x76,EVP_R_UNSUPPORTED_SALT_TYPE = 0x7E,EVP_R_WRONG_FINAL_BLOCK_LENGTH = 0x6D,EVP_R_WRONG_PUBLIC_KEY_TYPE = 0x6E,EVP_R_SEED_KEY_SETUP_FAILED = 0xA2,};
enum MACRO_EV_ADD {EV_ADD = 0x1,EV_DELETE = 0x2,EV_ENABLE = 0x4,EV_DISABLE = 0x8,EV_RECEIPT = 0x40,EV_ONESHOT = 0x10,EV_CLEAR = 0x20,EV_DISPATCH = 0x80,EV_SYSFLAGS = 0xF000,EV_FLAG0 = 0x1000,EV_FLAG1 = 0x2000,EV_EOF = 0x8000,EV_ERROR = 0x4000,EV_POLL = 0x1000,EV_OOBAND = 0x2000,};
enum MACRO_EXFLAG {EXFLAG_BCONS = 0x1,EXFLAG_KUSAGE = 0x2,EXFLAG_XKUSAGE = 0x4,EXFLAG_NSCERT = 0x8,EXFLAG_CA = 0x10,EXFLAG_SI = 0x20,EXFLAG_SS = 0x20,EXFLAG_V1 = 0x40,EXFLAG_INVALID = 0x80,EXFLAG_SET = 0x100,EXFLAG_CRITICAL = 0x200,EXFLAG_PROXY = 0x400,EXFLAG_INVALID_POLICY = 0x800,};
enum MACRO_EXPIRE {EXPIRE_TIME = 180,GARBAGE_TIME = 240,};
enum MACRO_EXPORT {EXPORT_SYMBOL_FLAGS_KIND_MASK = 0x3,EXPORT_SYMBOL_FLAGS_KIND_REGULAR = 0x0,EXPORT_SYMBOL_FLAGS_KIND_THREAD_LOCAL = 0x1,EXPORT_SYMBOL_FLAGS_WEAK_DEFINITION = 0x4,EXPORT_SYMBOL_FLAGS_REEXPORT = 0x8,EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER = 0x10,};
enum MACRO_FAILED {FAILED = 2,};
enum MACRO_FHSIZE {FHSIZE = 32,};
enum MACRO_FILENO {STDIN_FILENO = 0,STDOUT_FILENO = 1,STDERR_FILENO = 2,};
enum MACRO_FP_NAN {FP_NAN = 1,FP_INFINITE = 2,FP_ZERO = 3,FP_NORMAL = 4,FP_SUBNORMAL = 5,FP_SUPERNORMAL = 6,FP_ILOGB0 = -2147483648,FP_ILOGBNAN = -2147483648,};
enum MACRO_FP_TAG {FP_TAG_VALID = 0,FP_TAG_ZERO = 1,FP_TAG_SPEC = 2,FP_TAG_EMPTY = 3,};
enum MACRO_FSHIFT {FSHIFT = 11,FSCALE = 2048,};
enum MACRO_GETALL {GETALL = 6,};
enum MACRO_GETVAL {GETVAL = 5,};
enum MACRO_Gstack {Gstack = 0,};
enum MACRO_HOPCNT {HOPCNT_INFINITY = 16,};
enum MACRO_ICMPV6 {ICMPV6_PLD_MAXLEN = 1232,};
enum MACRO_IFDATA {IFDATA_GENERAL = 1,IFDATA_LINKSPECIFIC = 2,IFDATA_ADDRS = 3,IFDATA_MULTIADDRS = 4,};
enum MACRO_IGNBRK {IGNBRK = 0x1,BRKINT = 0x2,IGNPAR = 0x4,PARMRK = 0x8,INPCK = 0x10,ISTRIP = 0x20,INLCR = 0x40,IGNCR = 0x80,ICRNL = 0x100,IXON = 0x200,IXOFF = 0x400,IXANY = 0x800,IMAXBEL = 0x2000,IUTF8 = 0x4000,};
enum MACRO_INADDR {INADDR_ANY = 0,INADDR_BROADCAST = 4294967295,};
enum MACRO_INTMAX {INTMAX_MIN = -9223372036854775808,INTMAX_MAX = 9223372036854775807,};
enum MACRO_INTPTR {INTPTR_MIN = -9223372036854775808,INTPTR_MAX = 9223372036854775807,};
enum MACRO_IP6OPT {IP6OPT_PAD1 = 0x0,IP6OPT_PADN = 0x1,IP6OPT_JUMBO = 0xC2,IP6OPT_NSAP_ADDR = 0xC3,IP6OPT_TUNNEL_LIMIT = 0x4,IP6OPT_RTALERT = 0x5,IP6OPT_ROUTER_ALERT = 0x5,IP6OPT_RTALERT_LEN = 0x4,IP6OPT_RTALERT_MLD = 0x0,IP6OPT_RTALERT_RSVP = 0x1,IP6OPT_RTALERT_ACTNET = 0x2,IP6OPT_MINLEN = 0x2,IP6OPT_EID = 0x8A,IP6OPT_TYPE_SKIP = 0x0,IP6OPT_TYPE_DISCARD = 0x40,IP6OPT_TYPE_FORCEICMP = 0x80,IP6OPT_TYPE_ICMP = 0xC0,IP6OPT_MUTABLE = 0x20,IP6OPT_JUMBO_LEN = 0x6,};
enum MACRO_IP6TOS {IP6TOS_CE = 0x1,IP6TOS_ECT = 0x2,};
enum MACRO_IPPORT {IPPORT_USERRESERVED = 5000,IPPORT_HIFIRSTAUTO = 49152,IPPORT_HILASTAUTO = 65535,IPPORT_RESERVEDSTART = 600,};
enum MACRO_IP_MSS {IP_MSS = 576,};
enum MACRO_ISFUNC {ISFUNC = 0,ISKMAP = 1,ISMACR = 2,};
enum MACRO_ITIMER {ITIMER_REAL = 0,ITIMER_VIRTUAL = 1,ITIMER_PROF = 2,};
enum MACRO_KDEBUG {KDEBUG_ENABLE_TRACE = 0x1,KDEBUG_ENABLE_ENTROPY = 0x2,KDEBUG_ENABLE_CHUD = 0x4,};
enum MACRO_KEV_DL {KEV_DL_SUBCLASS = 2,KEV_DL_SIFFLAGS = 1,KEV_DL_SIFMETRICS = 2,KEV_DL_SIFMTU = 3,KEV_DL_SIFPHYS = 4,KEV_DL_SIFMEDIA = 5,KEV_DL_SIFGENERIC = 6,KEV_DL_ADDMULTI = 7,KEV_DL_DELMULTI = 8,KEV_DL_IF_ATTACHED = 9,KEV_DL_IF_DETACHING = 10,KEV_DL_IF_DETACHED = 11,KEV_DL_LINK_OFF = 12,KEV_DL_LINK_ON = 13,KEV_DL_PROTO_ATTACHED = 14,KEV_DL_PROTO_DETACHED = 15,KEV_DL_LINK_ADDRESS_CHANGED = 16,KEV_DL_WAKEFLAGS_CHANGED = 17,KEV_DL_IF_IDLE_ROUTE_REFCNT = 18,KEV_DL_IFCAP_CHANGED = 19,};
enum MACRO_KEYMAP {KEYMAP_SIZE = 256,};
enum MACRO_KEY_EX {KEY_EX = 0x10,KEY_SIG = 0x80,};
enum MACRO_KRB524 {KRB524_BADKEY = -1750206208,KRB524_BADADDR = -1750206207,KRB524_BADPRINC = -1750206206,KRB524_BADREALM = -1750206205,KRB524_V4ERR = -1750206204,KRB524_ENCFULL = -1750206203,KRB524_DECEMPTY = -1750206202,KRB524_NOTRESP = -1750206201,KRB524_KRB4_DISABLED = -1750206200,};
enum MACRO_LCRTBS {LCRTBS = 1,LPRTERA = 2,LCRTERA = 4,LTILDE = 8,LMDMBUF = 16,LLITOUT = 32,LTOSTOP = 64,LFLUSHO = 128,LNOHANG = 256,LCRTKIL = 1024,LPASS8 = 2048,LCTLECH = 4096,LPENDIN = 8192,LDECCTQ = 16384,LNOFLSH = 32768,OTIOCCONS = 536900706,};
enum MACRO_LC_REQ {LC_REQ_DYLD = 0x80000000,LC_SEGMENT = 0x1,LC_SYMTAB = 0x2,LC_SYMSEG = 0x3,LC_THREAD = 0x4,LC_UNIXTHREAD = 0x5,LC_LOADFVMLIB = 0x6,LC_IDFVMLIB = 0x7,LC_IDENT = 0x8,LC_FVMFILE = 0x9,LC_PREPAGE = 0xA,LC_DYSYMTAB = 0xB,LC_LOAD_DYLIB = 0xC,LC_ID_DYLIB = 0xD,LC_LOAD_DYLINKER = 0xE,LC_ID_DYLINKER = 0xF,LC_PREBOUND_DYLIB = 0x10,LC_ROUTINES = 0x11,LC_SUB_FRAMEWORK = 0x12,LC_SUB_UMBRELLA = 0x13,LC_SUB_CLIENT = 0x14,LC_SUB_LIBRARY = 0x15,LC_TWOLEVEL_HINTS = 0x16,LC_PREBIND_CKSUM = 0x17,LC_LOAD_WEAK_DYLIB = 0x80000018,LC_SEGMENT_64 = 0x19,LC_ROUTINES_64 = 0x1A,LC_UUID = 0x1B,LC_RPATH = 0x8000001C,LC_CODE_SIGNATURE = 0x1D,LC_SEGMENT_SPLIT_INFO = 0x1E,LC_REEXPORT_DYLIB = 0x8000001F,LC_LAZY_LOAD_DYLIB = 0x20,LC_ENCRYPTION_INFO = 0x21,LC_DYLD_INFO = 0x22,LC_DYLD_INFO_ONLY = 0x80000022,LC_LOAD_UPWARD_DYLIB = 0x80000023,LC_VERSION_MIN_MACOSX = 0x24,LC_VERSION_MIN_IPHONEOS = 0x25,LC_FUNCTION_STARTS = 0x26,LC_DYLD_ENVIRONMENT = 0x27,};
enum MACRO_LEDGER {LEDGER_ITEM_INFINITY = 4294967295,};
enum MACRO_LIBXML {LIBXML_VERSION = 20703,};
enum MACRO_LSCALE {LSCALE = 1000,};
enum MACRO_MALLOC {MALLOC_PTR_IN_USE_RANGE_TYPE = 1,MALLOC_PTR_REGION_RANGE_TYPE = 2,MALLOC_ADMIN_REGION_RANGE_TYPE = 4,MALLOC_ZONE_SPECIFIC_FLAGS = 65280,};
enum MACRO_MAXPRI {MAXPRI = 127,};
enum MACRO_MAXTTL {MAXTTL = 255,};
enum MACRO_MAX_IQ {MAX_IQ_TIME = 604800,MAX_DQ_TIME = 604800,};
enum MACRO_MEMORY {MEMORY_OBJECT_COPY_NONE = 0,MEMORY_OBJECT_COPY_CALL = 1,MEMORY_OBJECT_COPY_DELAY = 2,MEMORY_OBJECT_COPY_TEMPORARY = 3,MEMORY_OBJECT_COPY_SYMMETRIC = 4,MEMORY_OBJECT_COPY_INVALID = 5,MEMORY_OBJECT_RETURN_NONE = 0,MEMORY_OBJECT_RETURN_DIRTY = 1,MEMORY_OBJECT_RETURN_ALL = 2,MEMORY_OBJECT_RETURN_ANYTHING = 3,MEMORY_OBJECT_DATA_FLUSH = 1,MEMORY_OBJECT_DATA_NO_CHANGE = 2,MEMORY_OBJECT_DATA_PURGE = 4,MEMORY_OBJECT_COPY_SYNC = 8,MEMORY_OBJECT_DATA_SYNC = 16,MEMORY_OBJECT_IO_SYNC = 32,MEMORY_OBJECT_DATA_FLUSH_ALL = 64,MEMORY_OBJECT_INFO_MAX = 1024,MEMORY_OBJECT_PERFORMANCE_INFO = 11,MEMORY_OBJECT_ATTRIBUTE_INFO = 14,MEMORY_OBJECT_BEHAVIOR_INFO = 15,MEMORY_OBJECT_TERMINATE_IDLE = 1,MEMORY_OBJECT_RESPECT_CACHE = 2,MEMORY_OBJECT_RELEASE_NO_OP = 4,};
enum MACRO_NDFILE {NDFILE = 25,};
enum MACRO_NFSERR {NFSERR_PERM = 1,NFSERR_NOENT = 2,NFSERR_IO = 5,NFSERR_NXIO = 6,NFSERR_ACCES = 13,NFSERR_EXIST = 17,NFSERR_XDEV = 18,NFSERR_NODEV = 19,NFSERR_NOTDIR = 20,NFSERR_ISDIR = 21,NFSERR_INVAL = 22,NFSERR_FBIG = 27,NFSERR_NOSPC = 28,NFSERR_ROFS = 30,NFSERR_MLINK = 31,NFSERR_NAMETOL = 63,NFSERR_NOTEMPTY = 66,NFSERR_DQUOT = 69,NFSERR_STALE = 70,NFSERR_REMOTE = 71,NFSERR_WFLUSH = 99,NFSERR_BADHANDLE = 10001,NFSERR_NOT_SYNC = 10002,NFSERR_BAD_COOKIE = 10003,NFSERR_NOTSUPP = 10004,NFSERR_TOOSMALL = 10005,NFSERR_SERVERFAULT = 10006,NFSERR_BADTYPE = 10007,NFSERR_JUKEBOX = 10008,NFSERR_TRYLATER = 10008,NFSERR_DELAY = 10008,NFSERR_SAME = 10009,NFSERR_DENIED = 10010,NFSERR_EXPIRED = 10011,NFSERR_LOCKED = 10012,NFSERR_GRACE = 10013,NFSERR_FHEXPIRED = 10014,NFSERR_SHARE_DENIED = 10015,NFSERR_WRONGSEC = 10016,NFSERR_CLID_INUSE = 10017,NFSERR_RESOURCE = 10018,NFSERR_MOVED = 10019,NFSERR_NOFILEHANDLE = 10020,NFSERR_MINOR_VERS_MISMATCH = 10021,NFSERR_STALE_CLIENTID = 10022,NFSERR_STALE_STATEID = 10023,NFSERR_OLD_STATEID = 10024,NFSERR_BAD_STATEID = 10025,NFSERR_BAD_SEQID = 10026,NFSERR_NOT_SAME = 10027,NFSERR_LOCK_RANGE = 10028,NFSERR_SYMLINK = 10029,NFSERR_RESTOREFH = 10030,NFSERR_LEASE_MOVED = 10031,NFSERR_ATTRNOTSUPP = 10032,NFSERR_NO_GRACE = 10033,NFSERR_RECLAIM_BAD = 10034,NFSERR_RECLAIM_CONFLICT = 10035,NFSERR_BADXDR = 10036,NFSERR_LOCKS_HELD = 10037,NFSERR_OPENMODE = 10038,NFSERR_BADOWNER = 10039,NFSERR_BADCHAR = 10040,NFSERR_BADNAME = 10041,NFSERR_BAD_RANGE = 10042,NFSERR_LOCK_NOTSUPP = 10043,NFSERR_OP_ILLEGAL = 10044,NFSERR_DEADLOCK = 10045,NFSERR_FILE_OPEN = 10046,NFSERR_ADMIN_REVOKED = 10047,NFSERR_CB_PATH_DOWN = 10048,NFSERR_STALEWRITEVERF = 30001,NFSERR_DIRBUFDROPPED = 30002,NFSERR_EAUTH = 13,NFSERR_RETVOID = 536870912,NFSERR_AUTHERR = 1073741824,NFSERR_RETERR = 2147483648,};
enum MACRO_NFSMNT {NFSMNT_SOFT = 0x1,NFSMNT_WSIZE = 0x2,NFSMNT_RSIZE = 0x4,NFSMNT_TIMEO = 0x8,NFSMNT_RETRANS = 0x10,NFSMNT_MAXGRPS = 0x20,NFSMNT_INT = 0x40,NFSMNT_NOCONN = 0x80,NFSMNT_NONEGNAMECACHE = 0x100,NFSMNT_NFSV3 = 0x200,NFSMNT_NFSV4 = 0x400,NFSMNT_DUMBTIMR = 0x800,NFSMNT_DEADTIMEOUT = 0x1000,NFSMNT_READAHEAD = 0x2000,NFSMNT_CALLUMNT = 0x4000,NFSMNT_RESVPORT = 0x8000,NFSMNT_RDIRPLUS = 0x10000,NFSMNT_READDIRSIZE = 0x20000,NFSMNT_NOLOCKS = 0x40000,NFSMNT_LOCALLOCKS = 0x80000,NFSMNT_ACREGMIN = 0x100000,NFSMNT_ACREGMAX = 0x200000,NFSMNT_ACDIRMIN = 0x400000,NFSMNT_ACDIRMAX = 0x800000,NFSMNT_SECFLAVOR = 0x1000000,NFSMNT_SECSYSOK = 0x2000000,NFSMNT_MUTEJUKEBOX = 0x4000000,NFSMNT_NOQUOTA = 0x8000000,};
enum MACRO_NFSSVC {NFSSVC_NFSD = 0x4,NFSSVC_ADDSOCK = 0x8,NFSSVC_EXPORT = 0x200,};
enum MACRO_NFS_OK {NFS_OK = 0,};
enum MACRO_NFS_OP {NFS_OP_ACCESS = 3,NFS_OP_CLOSE = 4,NFS_OP_COMMIT = 5,NFS_OP_CREATE = 6,NFS_OP_DELEGPURGE = 7,NFS_OP_DELEGRETURN = 8,NFS_OP_GETATTR = 9,NFS_OP_GETFH = 10,NFS_OP_LINK = 11,NFS_OP_LOCK = 12,NFS_OP_LOCKT = 13,NFS_OP_LOCKU = 14,NFS_OP_LOOKUP = 15,NFS_OP_LOOKUPP = 16,NFS_OP_NVERIFY = 17,NFS_OP_OPEN = 18,NFS_OP_OPENATTR = 19,NFS_OP_OPEN_CONFIRM = 20,NFS_OP_OPEN_DOWNGRADE = 21,NFS_OP_PUTFH = 22,NFS_OP_PUTPUBFH = 23,NFS_OP_PUTROOTFH = 24,NFS_OP_READ = 25,NFS_OP_READDIR = 26,NFS_OP_READLINK = 27,NFS_OP_REMOVE = 28,NFS_OP_RENAME = 29,NFS_OP_RENEW = 30,NFS_OP_RESTOREFH = 31,NFS_OP_SAVEFH = 32,NFS_OP_SECINFO = 33,NFS_OP_SETATTR = 34,NFS_OP_SETCLIENTID = 35,NFS_OP_SETCLIENTID_CONFIRM = 36,NFS_OP_VERIFY = 37,NFS_OP_WRITE = 38,NFS_OP_RELEASE_LOCKOWNER = 39,NFS_OP_ILLEGAL = 10044,NFS_OP_CB_GETATTR = 3,NFS_OP_CB_RECALL = 4,NFS_OP_CB_ILLEGAL = 10044,NFS_FH_PERSISTENT = 0,NFS_FH_NOEXPIRE_WITH_OPEN = 1,NFS_FH_VOLATILE_ANY = 2,NFS_FH_VOL_MIGRATION = 4,NFS_FH_VOL_RENAME = 8,NFS_ACL_SUPPORT_ALLOW_ACL = 1,NFS_ACL_SUPPORT_DENY_ACL = 2,NFS_ACL_SUPPORT_AUDIT_ACL = 4,NFS_ACL_SUPPORT_ALARM_ACL = 8,NFS_ACE_ACCESS_ALLOWED_ACE_TYPE = 0,NFS_ACE_ACCESS_DENIED_ACE_TYPE = 1,NFS_ACE_SYSTEM_AUDIT_ACE_TYPE = 2,NFS_ACE_SYSTEM_ALARM_ACE_TYPE = 3,NFS_ACE_FILE_INHERIT_ACE = 1,NFS_ACE_DIRECTORY_INHERIT_ACE = 2,NFS_ACE_NO_PROPAGATE_INHERIT_ACE = 4,NFS_ACE_INHERIT_ONLY_ACE = 8,NFS_ACE_SUCCESSFUL_ACCESS_ACE_FLAG = 16,NFS_ACE_FAILED_ACCESS_ACE_FLAG = 32,NFS_ACE_IDENTIFIER_GROUP = 64,NFS_ACE_INHERITED_ACE = 128,NFS_ACE_READ_DATA = 1,NFS_ACE_LIST_DIRECTORY = 1,NFS_ACE_WRITE_DATA = 2,NFS_ACE_ADD_FILE = 2,NFS_ACE_APPEND_DATA = 4,NFS_ACE_ADD_SUBDIRECTORY = 4,NFS_ACE_READ_NAMED_ATTRS = 8,NFS_ACE_WRITE_NAMED_ATTRS = 16,NFS_ACE_EXECUTE = 32,NFS_ACE_DELETE_CHILD = 64,NFS_ACE_READ_ATTRIBUTES = 128,NFS_ACE_WRITE_ATTRIBUTES = 256,NFS_ACE_DELETE = 65536,NFS_ACE_READ_ACL = 131072,NFS_ACE_WRITE_ACL = 262144,NFS_ACE_WRITE_OWNER = 524288,NFS_ACE_SYNCHRONIZE = 1048576,NFS_ACE_GENERIC_READ = 1179777,NFS_ACE_GENERIC_WRITE = 1442054,NFS_ACE_GENERIC_EXECUTE = 1179808,};
enum MACRO_NOCRED {NOCRED = 0,FSCRED = -1,};
enum MACRO_NOEXPR {NOEXPR = 53,};
enum MACRO_NORMAL {NORMAL_CONFIG = 0,PREMIB_CONFIG = 1,EITHER_CONFIG = 2,};
enum MACRO_NOTIFY {NOTIFY_STATUS_OK = 0,NOTIFY_STATUS_INVALID_NAME = 1,NOTIFY_STATUS_INVALID_TOKEN = 2,NOTIFY_STATUS_INVALID_PORT = 3,NOTIFY_STATUS_INVALID_FILE = 4,NOTIFY_STATUS_INVALID_SIGNAL = 5,NOTIFY_STATUS_INVALID_REQUEST = 6,NOTIFY_STATUS_NOT_AUTHORIZED = 7,NOTIFY_STATUS_FAILED = 1000000,NOTIFY_REUSE = 1,};
enum MACRO_NS_SSL {NS_SSL_CLIENT = 0x80,NS_SSL_SERVER = 0x40,NS_SMIME = 0x20,NS_OBJSIGN = 0x10,NS_SSL_CA = 0x4,NS_SMIME_CA = 0x2,NS_OBJSIGN_CA = 0x1,NS_ANY_CA = 0x7,};
enum MACRO_N_STAB {N_STAB = 0xE0,N_PEXT = 0x10,N_TYPE = 0xE,N_EXT = 0x1,N_UNDF = 0x0,N_ABS = 0x2,N_SECT = 0xE,N_PBUD = 0xC,N_INDR = 0xA,};
enum MACRO_PACKET {PARSE_PACKET = 0,DUMP_PACKET = 1,};
enum MACRO_PF_KEY {PF_KEY_V2 = 2,};
enum MACRO_PKCS12 {PKCS12_KEY_ID = 1,PKCS12_IV_ID = 2,PKCS12_MAC_ID = 3,PKCS12_DEFAULT_ITER = 2048,PKCS12_MAC_KEY_LENGTH = 20,PKCS12_SALT_LEN = 8,};
enum MACRO_POLICY {POLICY_NULL = 0,POLICY_TIMESHARE = 1,POLICY_RR = 2,POLICY_FIFO = 4,};
enum MACRO_POLLIN {POLLIN = 0x1,POLLPRI = 0x2,POLLOUT = 0x4,POLLRDNORM = 0x40,};
enum MACRO_PPAUSE {PPAUSE = 40,};
enum MACRO_PRELIM {PRELIM = 1,COMPLETE = 2,};
enum MACRO_RAND_F {RAND_F_ENG_RAND_GET_RAND_METHOD = 108,RAND_F_FIPS_RAND = 103,RAND_F_FIPS_RAND_BYTES = 102,RAND_F_FIPS_RAND_GET_RAND_METHOD = 109,RAND_F_FIPS_RAND_SET_DT = 106,RAND_F_FIPS_SET_DT = 104,RAND_F_FIPS_SET_PRNG_SEED = 107,RAND_F_FIPS_SET_TEST_MODE = 105,RAND_F_RAND_GET_RAND_METHOD = 101,RAND_F_SSLEAY_RAND_BYTES = 100,RAND_R_NON_FIPS_METHOD = 105,RAND_R_NOT_IN_TEST_MODE = 106,RAND_R_NO_KEY_SET = 107,RAND_R_PRNG_ASKING_FOR_TOO_MUCH = 101,RAND_R_PRNG_ERROR = 108,RAND_R_PRNG_KEYED = 109,RAND_R_PRNG_NOT_REKEYED = 102,RAND_R_PRNG_NOT_RESEEDED = 103,RAND_R_PRNG_NOT_SEEDED = 100,RAND_R_PRNG_SEED_MUST_NOT_MATCH_KEY = 110,RAND_R_PRNG_STUCK = 104,};
enum MACRO_REBASE {REBASE_TYPE_POINTER = 1,REBASE_TYPE_TEXT_ABSOLUTE32 = 2,REBASE_TYPE_TEXT_PCREL32 = 3,REBASE_OPCODE_MASK = 240,REBASE_IMMEDIATE_MASK = 15,REBASE_OPCODE_DONE = 0,REBASE_OPCODE_SET_TYPE_IMM = 16,REBASE_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB = 32,REBASE_OPCODE_ADD_ADDR_ULEB = 48,REBASE_OPCODE_ADD_ADDR_IMM_SCALED = 64,REBASE_OPCODE_DO_REBASE_IMM_TIMES = 80,REBASE_OPCODE_DO_REBASE_ULEB_TIMES = 96,REBASE_OPCODE_DO_REBASE_ADD_ADDR_ULEB = 112,REBASE_OPCODE_DO_REBASE_ULEB_TIMES_SKIPPING_ULEB = 128,};
enum MACRO_REPORT {REPORT_MOUSE_POSITION = 134217728,};
enum MACRO_RETURN {RETURN = 6,};
enum MACRO_RIPCMD {RIPCMD_REQUEST = 1,RIPCMD_RESPONSE = 2,RIPCMD_TRACEON = 3,RIPCMD_TRACEOFF = 4,RIPCMD_MAX = 5,};
enum MACRO_RLIMIT {RLIMIT_CPU = 0,RLIMIT_FSIZE = 1,RLIMIT_DATA = 2,RLIMIT_STACK = 3,RLIMIT_CORE = 4,RLIMIT_AS = 5,RLIMIT_RSS = 5,RLIMIT_MEMLOCK = 6,RLIMIT_NPROC = 7,RLIMIT_NOFILE = 8,};
enum MACRO_RPCAKN {RPCAKN_FULLNAME = 0,RPCAKN_NICKNAME = 1,};
enum MACRO_RPCGEN {RPCGEN_VERSION = 199506,};
enum MACRO_RPCMNT {RPCMNT_VER1 = 1,RPCMNT_VER3 = 3,RPCMNT_MOUNT = 1,RPCMNT_DUMP = 2,RPCMNT_UMOUNT = 3,RPCMNT_UMNTALL = 4,RPCMNT_EXPORT = 5,RPCMNT_NAMELEN = 255,RPCMNT_PATHLEN = 1024,};
enum MACRO_RQUOTA {RQUOTA_STAT_OK = 1,RQUOTA_STAT_NOQUOTA = 2,RQUOTA_STAT_EPERM = 3,};
enum MACRO_RUBOUT {RUBOUT = 0x7F,};
enum MACRO_RUSAGE {RUSAGE_SELF = 0,RUSAGE_CHILDREN = -1,};
enum MACRO_RUSERS {RUSERS_MAXUSERLEN = 32,RUSERS_MAXLINELEN = 32,RUSERS_MAXHOSTLEN = 257,RUSERS_EMPTY = 0,RUSERS_RUN_LVL = 1,RUSERS_BOOT_TIME = 2,RUSERS_OLD_TIME = 3,RUSERS_NEW_TIME = 4,RUSERS_INIT_PROCESS = 5,RUSERS_LOGIN_PROCESS = 6,RUSERS_USER_PROCESS = 7,RUSERS_DEAD_PROCESS = 8,RUSERS_ACCOUNTING = 9,};
enum MACRO_SARMAG {SARMAG = 8,};
enum MACRO_SETALL {SETALL = 9,};
enum MACRO_SE_MAX {SE_MAX_IDS = 5,SE_MAX_SUBIDS = 32,SE_LIBRARY_ID = 0,SE_MIB_ID = 1,SE_APPLICATION_ID = 2,SE_ASSIGNED_ID = 3,SE_OK = 0,SE_NOMEM = 1,SE_ALREADY_THERE = 2,SE_DNE = -2,};
enum MACRO_SHA256 {SHA256_CBLOCK = 64,};
enum MACRO_SHA512 {SHA512_CBLOCK = 128,};
enum MACRO_SHMLBA {SHMLBA = 4096,};
enum MACRO_SIGNAL {SIGHUP = 1,SIGINT = 2,SIGQUIT = 3,SIGILL = 4,SIGTRAP = 5,SIGABRT = 6,SIGIOT = 6,SIGEMT = 7,SIGFPE = 8,SIGKILL = 9,SIGBUS = 10,SIGSEGV = 11,SIGSYS = 12,SIGPIPE = 13,SIGALRM = 14,SIGTERM = 15,SIGURG = 16,SIGSTOP = 17,SIGTSTP = 18,SIGCONT = 19,SIGCHLD = 20,SIGTTIN = 21,SIGTTOU = 22,SIGIO = 23,SIGXCPU = 24,SIGXFSZ = 25,SIGVTALRM = 26,SIGPROF = 27,SIGWINCH = 28,SIGINFO = 29,SIGUSR1 = 30,SIGUSR2 = 31,};
enum MACRO_SIZEOF {SIZEOF_INT = 4,SIZEOF_INTMAX_T = 8,SIZEOF_LONG = 8,SIZEOF_LONG_LONG = 8,SIZEOF_SHORT = 2,SIZEOF_SOCKADDR_UN_SUN_PATH = 104,};
enum MACRO_SNMPV3 {SNMPV3_IGNORE_UNAUTH_REPORTS = 0,};
enum MACRO_SOURCE {_ALL_SOURCE = 1,_GNU_SOURCE = 1,};
enum MACRO_SQLITE {SQLITE_VERSION_NUMBER = 3007005,SQLITE_OK = 0,SQLITE_ERROR = 1,SQLITE_INTERNAL = 2,SQLITE_PERM = 3,SQLITE_ABORT = 4,SQLITE_BUSY = 5,SQLITE_LOCKED = 6,SQLITE_NOMEM = 7,SQLITE_READONLY = 8,SQLITE_INTERRUPT = 9,SQLITE_IOERR = 10,SQLITE_CORRUPT = 11,SQLITE_NOTFOUND = 12,SQLITE_FULL = 13,SQLITE_CANTOPEN = 14,SQLITE_PROTOCOL = 15,SQLITE_EMPTY = 16,SQLITE_SCHEMA = 17,SQLITE_TOOBIG = 18,SQLITE_CONSTRAINT = 19,SQLITE_MISMATCH = 20,SQLITE_MISUSE = 21,SQLITE_NOLFS = 22,SQLITE_AUTH = 23,SQLITE_FORMAT = 24,SQLITE_RANGE = 25,SQLITE_NOTADB = 26,SQLITE_ROW = 100,SQLITE_DONE = 101,SQLITE_IOERR_READ = 266,SQLITE_IOERR_SHORT_READ = 522,SQLITE_IOERR_WRITE = 778,SQLITE_IOERR_FSYNC = 1034,SQLITE_IOERR_DIR_FSYNC = 1290,SQLITE_IOERR_TRUNCATE = 1546,SQLITE_IOERR_FSTAT = 1802,SQLITE_IOERR_UNLOCK = 2058,SQLITE_IOERR_RDLOCK = 2314,SQLITE_IOERR_DELETE = 2570,SQLITE_IOERR_BLOCKED = 2826,SQLITE_IOERR_NOMEM = 3082,SQLITE_IOERR_ACCESS = 3338,SQLITE_IOERR_CHECKRESERVEDLOCK = 3594,SQLITE_IOERR_LOCK = 3850,SQLITE_IOERR_CLOSE = 4106,SQLITE_IOERR_DIR_CLOSE = 4362,SQLITE_IOERR_SHMOPEN = 4618,SQLITE_IOERR_SHMSIZE = 4874,SQLITE_IOERR_SHMLOCK = 5130,SQLITE_LOCKED_SHAREDCACHE = 262,SQLITE_BUSY_RECOVERY = 261,SQLITE_CANTOPEN_NOTEMPDIR = 270,SQLITE_OPEN_READONLY = 1,SQLITE_OPEN_READWRITE = 2,SQLITE_OPEN_CREATE = 4,SQLITE_OPEN_DELETEONCLOSE = 8,SQLITE_OPEN_EXCLUSIVE = 16,SQLITE_OPEN_AUTOPROXY = 32,SQLITE_OPEN_MAIN_DB = 256,SQLITE_OPEN_TEMP_DB = 512,SQLITE_OPEN_TRANSIENT_DB = 1024,SQLITE_OPEN_MAIN_JOURNAL = 2048,SQLITE_OPEN_TEMP_JOURNAL = 4096,SQLITE_OPEN_SUBJOURNAL = 8192,SQLITE_OPEN_MASTER_JOURNAL = 16384,SQLITE_OPEN_NOMUTEX = 32768,SQLITE_OPEN_FULLMUTEX = 65536,SQLITE_OPEN_SHAREDCACHE = 131072,SQLITE_OPEN_PRIVATECACHE = 262144,SQLITE_OPEN_WAL = 524288,SQLITE_OPEN_FILEPROTECTION_COMPLETE = 1048576,SQLITE_OPEN_FILEPROTECTION_COMPLETEUNLESSOPEN = 2097152,SQLITE_OPEN_FILEPROTECTION_COMPLETEUNTILFIRSTUSERAUTHENTICATION = 3145728,SQLITE_OPEN_FILEPROTECTION_NONE = 0,SQLITE_OPEN_FILEPROTECTION_MASK = 3145728,SQLITE_IOCAP_ATOMIC = 1,SQLITE_IOCAP_ATOMIC512 = 2,SQLITE_IOCAP_ATOMIC1K = 4,SQLITE_IOCAP_ATOMIC2K = 8,SQLITE_IOCAP_ATOMIC4K = 16,SQLITE_IOCAP_ATOMIC8K = 32,SQLITE_IOCAP_ATOMIC16K = 64,SQLITE_IOCAP_ATOMIC32K = 128,SQLITE_IOCAP_ATOMIC64K = 256,SQLITE_IOCAP_SAFE_APPEND = 512,SQLITE_IOCAP_SEQUENTIAL = 1024,SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 2048,SQLITE_LOCK_NONE = 0,SQLITE_LOCK_SHARED = 1,SQLITE_LOCK_RESERVED = 2,SQLITE_LOCK_PENDING = 3,SQLITE_LOCK_EXCLUSIVE = 4,SQLITE_SYNC_NORMAL = 2,SQLITE_SYNC_FULL = 3,SQLITE_SYNC_DATAONLY = 16,SQLITE_FCNTL_LOCKSTATE = 1,SQLITE_GET_LOCKPROXYFILE = 2,SQLITE_SET_LOCKPROXYFILE = 3,SQLITE_LAST_ERRNO = 4,SQLITE_FCNTL_SIZE_HINT = 5,SQLITE_FCNTL_CHUNK_SIZE = 6,SQLITE_FCNTL_FILE_POINTER = 7,SQLITE_FCNTL_SYNC_OMITTED = 8,SQLITE_ACCESS_EXISTS = 0,SQLITE_ACCESS_READWRITE = 1,SQLITE_ACCESS_READ = 2,SQLITE_SHM_UNLOCK = 1,SQLITE_SHM_LOCK = 2,SQLITE_SHM_SHARED = 4,SQLITE_SHM_EXCLUSIVE = 8,SQLITE_SHM_NLOCK = 8,SQLITE_CONFIG_SINGLETHREAD = 1,SQLITE_CONFIG_MULTITHREAD = 2,SQLITE_CONFIG_SERIALIZED = 3,SQLITE_CONFIG_MALLOC = 4,SQLITE_CONFIG_GETMALLOC = 5,SQLITE_CONFIG_SCRATCH = 6,SQLITE_CONFIG_PAGECACHE = 7,SQLITE_CONFIG_HEAP = 8,SQLITE_CONFIG_MEMSTATUS = 9,SQLITE_CONFIG_MUTEX = 10,SQLITE_CONFIG_GETMUTEX = 11,SQLITE_CONFIG_LOOKASIDE = 13,SQLITE_CONFIG_PCACHE = 14,SQLITE_CONFIG_GETPCACHE = 15,SQLITE_CONFIG_LOG = 16,SQLITE_DBCONFIG_LOOKASIDE = 1001,SQLITE_DENY = 1,SQLITE_IGNORE = 2,SQLITE_CREATE_INDEX = 1,SQLITE_CREATE_TABLE = 2,SQLITE_CREATE_TEMP_INDEX = 3,SQLITE_CREATE_TEMP_TABLE = 4,SQLITE_CREATE_TEMP_TRIGGER = 5,SQLITE_CREATE_TEMP_VIEW = 6,SQLITE_CREATE_TRIGGER = 7,SQLITE_CREATE_VIEW = 8,SQLITE_DELETE = 9,SQLITE_DROP_INDEX = 10,SQLITE_DROP_TABLE = 11,SQLITE_DROP_TEMP_INDEX = 12,SQLITE_DROP_TEMP_TABLE = 13,SQLITE_DROP_TEMP_TRIGGER = 14,SQLITE_DROP_TEMP_VIEW = 15,SQLITE_DROP_TRIGGER = 16,SQLITE_DROP_VIEW = 17,SQLITE_INSERT = 18,SQLITE_PRAGMA = 19,SQLITE_READ = 20,SQLITE_SELECT = 21,SQLITE_TRANSACTION = 22,SQLITE_UPDATE = 23,SQLITE_ATTACH = 24,SQLITE_DETACH = 25,SQLITE_ALTER_TABLE = 26,SQLITE_REINDEX = 27,SQLITE_ANALYZE = 28,SQLITE_CREATE_VTABLE = 29,SQLITE_DROP_VTABLE = 30,SQLITE_FUNCTION = 31,SQLITE_SAVEPOINT = 32,SQLITE_COPY = 0,SQLITE_LIMIT_LENGTH = 0,SQLITE_LIMIT_SQL_LENGTH = 1,SQLITE_LIMIT_COLUMN = 2,SQLITE_LIMIT_EXPR_DEPTH = 3,SQLITE_LIMIT_COMPOUND_SELECT = 4,SQLITE_LIMIT_VDBE_OP = 5,SQLITE_LIMIT_FUNCTION_ARG = 6,SQLITE_LIMIT_ATTACHED = 7,SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8,SQLITE_LIMIT_VARIABLE_NUMBER = 9,SQLITE_LIMIT_TRIGGER_DEPTH = 10,SQLITE_INTEGER = 1,SQLITE_FLOAT = 2,SQLITE_BLOB = 4,SQLITE_NULL = 5,SQLITE_TEXT = 3,};
enum MACRO_SRCHFS {SRCHFS_START = 0x1,SRCHFS_MATCHPARTIALNAMES = 0x2,SRCHFS_MATCHDIRS = 0x4,SRCHFS_MATCHFILES = 0x8,SRCHFS_SKIPLINKS = 0x10,SRCHFS_SKIPINVISIBLE = 0x20,SRCHFS_SKIPPACKAGES = 0x40,SRCHFS_SKIPINAPPROPRIATE = 0x80,SRCHFS_NEGATEPARAMS = 0x80000000,SRCHFS_VALIDOPTIONSMASK = 0x800000FF,};
enum MACRO_SSLEAY {SSLEAY_VERSION = 0,SSLEAY_CFLAGS = 2,SSLEAY_BUILT_ON = 3,SSLEAY_PLATFORM = 4,SSLEAY_DIR = 5,};
enum MACRO_SSLEEP {SSLEEP = 3,SSTOP = 4,};
enum MACRO_SSL_ST {SSL_ST_CONNECT = 0x1000,SSL_ST_ACCEPT = 0x2000,SSL_ST_MASK = 0xFFF,SSL_ST_INIT = 0x3000,SSL_ST_BEFORE = 0x4000,SSL_ST_OK = 0x3,SSL_ST_RENEGOTIATE = 0x3004,SSL_CB_LOOP = 0x1,SSL_CB_EXIT = 0x2,SSL_CB_READ = 0x4,SSL_CB_WRITE = 0x8,SSL_CB_ALERT = 0x4000,SSL_CB_READ_ALERT = 0x4004,SSL_CB_WRITE_ALERT = 0x4008,SSL_CB_ACCEPT_LOOP = 0x2001,SSL_CB_ACCEPT_EXIT = 0x2002,SSL_CB_CONNECT_LOOP = 0x1001,SSL_CB_CONNECT_EXIT = 0x1002,SSL_CB_HANDSHAKE_START = 0x10,SSL_CB_HANDSHAKE_DONE = 0x20,SSL_ST_READ_HEADER = 0xF0,SSL_ST_READ_BODY = 0xF1,SSL_ST_READ_DONE = 0xF2,SSL_VERIFY_NONE = 0x0,SSL_VERIFY_PEER = 0x1,SSL_VERIFY_FAIL_IF_NO_PEER_CERT = 0x2,SSL_VERIFY_CLIENT_ONCE = 0x4,SSL_AD_REASON_OFFSET = 0x3E8,SSL_AD_CLOSE_NOTIFY = 0x0,SSL_AD_UNEXPECTED_MESSAGE = 0xA,SSL_AD_BAD_RECORD_MAC = 0x14,SSL_AD_DECRYPTION_FAILED = 0x15,SSL_AD_RECORD_OVERFLOW = 0x16,SSL_AD_DECOMPRESSION_FAILURE = 0x1E,SSL_AD_HANDSHAKE_FAILURE = 0x28,SSL_AD_NO_CERTIFICATE = 0x29,SSL_AD_BAD_CERTIFICATE = 0x2A,SSL_AD_UNSUPPORTED_CERTIFICATE = 0x2B,SSL_AD_CERTIFICATE_REVOKED = 0x2C,SSL_AD_CERTIFICATE_EXPIRED = 0x2D,SSL_AD_CERTIFICATE_UNKNOWN = 0x2E,SSL_AD_ILLEGAL_PARAMETER = 0x2F,SSL_AD_UNKNOWN_CA = 0x30,SSL_AD_ACCESS_DENIED = 0x31,SSL_AD_DECODE_ERROR = 0x32,SSL_AD_DECRYPT_ERROR = 0x33,SSL_AD_EXPORT_RESTRICTION = 0x3C,SSL_AD_PROTOCOL_VERSION = 0x46,SSL_AD_INSUFFICIENT_SECURITY = 0x47,SSL_AD_INTERNAL_ERROR = 0x50,SSL_AD_USER_CANCELLED = 0x5A,SSL_AD_NO_RENEGOTIATION = 0x64,SSL_AD_UNSUPPORTED_EXTENSION = 0x6E,SSL_AD_CERTIFICATE_UNOBTAINABLE = 0x6F,SSL_AD_UNRECOGNIZED_NAME = 0x70,SSL_AD_BAD_CERTIFICATE_STATUS_RESPONSE = 0x71,SSL_ERROR_NONE = 0x0,SSL_ERROR_SSL = 0x1,SSL_ERROR_WANT_READ = 0x2,SSL_ERROR_WANT_WRITE = 0x3,SSL_ERROR_WANT_X509_LOOKUP = 0x4,SSL_ERROR_SYSCALL = 0x5,SSL_ERROR_ZERO_RETURN = 0x6,SSL_ERROR_WANT_CONNECT = 0x7,SSL_ERROR_WANT_ACCEPT = 0x8,SSL_CTRL_NEED_TMP_RSA = 0x1,SSL_CTRL_SET_TMP_RSA = 0x2,SSL_CTRL_SET_TMP_DH = 0x3,SSL_CTRL_SET_TMP_ECDH = 0x4,SSL_CTRL_SET_TMP_RSA_CB = 0x5,SSL_CTRL_SET_TMP_DH_CB = 0x6,SSL_CTRL_SET_TMP_ECDH_CB = 0x7,SSL_CTRL_GET_SESSION_REUSED = 0x8,SSL_CTRL_GET_CLIENT_CERT_REQUEST = 0x9,SSL_CTRL_GET_NUM_RENEGOTIATIONS = 0xA,SSL_CTRL_CLEAR_NUM_RENEGOTIATIONS = 0xB,SSL_CTRL_GET_TOTAL_RENEGOTIATIONS = 0xC,SSL_CTRL_GET_FLAGS = 0xD,SSL_CTRL_EXTRA_CHAIN_CERT = 0xE,SSL_CTRL_SET_MSG_CALLBACK = 0xF,SSL_CTRL_SET_MSG_CALLBACK_ARG = 0x10,SSL_CTRL_SET_MTU = 0x11,SSL_CTRL_SESS_NUMBER = 0x14,SSL_CTRL_SESS_CONNECT = 0x15,SSL_CTRL_SESS_CONNECT_GOOD = 0x16,SSL_CTRL_SESS_CONNECT_RENEGOTIATE = 0x17,SSL_CTRL_SESS_ACCEPT = 0x18,SSL_CTRL_SESS_ACCEPT_GOOD = 0x19,SSL_CTRL_SESS_ACCEPT_RENEGOTIATE = 0x1A,SSL_CTRL_SESS_HIT = 0x1B,SSL_CTRL_SESS_CB_HIT = 0x1C,SSL_CTRL_SESS_MISSES = 0x1D,SSL_CTRL_SESS_TIMEOUTS = 0x1E,SSL_CTRL_SESS_CACHE_FULL = 0x1F,SSL_CTRL_OPTIONS = 0x20,SSL_CTRL_MODE = 0x21,SSL_CTRL_GET_READ_AHEAD = 0x28,SSL_CTRL_SET_READ_AHEAD = 0x29,SSL_CTRL_SET_SESS_CACHE_SIZE = 0x2A,SSL_CTRL_GET_SESS_CACHE_SIZE = 0x2B,SSL_CTRL_SET_SESS_CACHE_MODE = 0x2C,SSL_CTRL_GET_SESS_CACHE_MODE = 0x2D,SSL_CTRL_GET_MAX_CERT_LIST = 0x32,SSL_CTRL_SET_MAX_CERT_LIST = 0x33,SSL_CTRL_SET_TLSEXT_SERVERNAME_CB = 0x35,SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG = 0x36,SSL_CTRL_SET_TLSEXT_HOSTNAME = 0x37,SSL_CTRL_SET_TLSEXT_DEBUG_CB = 0x38,SSL_CTRL_SET_TLSEXT_DEBUG_ARG = 0x39,SSL_CTRL_GET_TLSEXT_TICKET_KEYS = 0x3A,SSL_CTRL_SET_TLSEXT_TICKET_KEYS = 0x3B,SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB = 0x3F,SSL_CTRL_SET_TLSEXT_STATUS_REQ_CB_ARG = 0x40,SSL_CTRL_SET_TLSEXT_STATUS_REQ_TYPE = 0x41,SSL_CTRL_GET_TLSEXT_STATUS_REQ_EXTS = 0x42,SSL_CTRL_SET_TLSEXT_STATUS_REQ_EXTS = 0x43,SSL_CTRL_GET_TLSEXT_STATUS_REQ_IDS = 0x44,SSL_CTRL_SET_TLSEXT_STATUS_REQ_IDS = 0x45,SSL_CTRL_GET_TLSEXT_STATUS_REQ_OCSP_RESP = 0x46,SSL_CTRL_SET_TLSEXT_STATUS_REQ_OCSP_RESP = 0x47,SSL_CTRL_SET_TLSEXT_TICKET_KEY_CB = 0x48,};
enum MACRO_STABLE {STABLE_FLAGS_MALLOC = 0x1,STABLE_NO_MASK = 0x2,};
enum MACRO_STATUS {STATUS_MANDATORY = 23,STATUS_OPTIONAL = 24,STATUS_OBSOLETE = 25,STATUS_DEPRECATED = 39,STATUS_CURRENT = 57,};
enum MACRO_STRING {STRING_LENGTH = 128,};
enum MACRO_SUPPLY {SUPPLY_INTERVAL = 30,};
enum MACRO_SWITCH {SWITCH_OPTION_NONE = 0,SWITCH_OPTION_DEPRESS = 1,SWITCH_OPTION_WAIT = 2,};
enum MACRO_S_ATTR {S_ATTR_PURE_INSTRUCTIONS = 0x80000000,S_ATTR_NO_TOC = 0x40000000,S_ATTR_STRIP_STATIC_SYMS = 0x20000000,S_ATTR_NO_DEAD_STRIP = 0x10000000,S_ATTR_LIVE_SUPPORT = 0x8000000,S_ATTR_SELF_MODIFYING_CODE = 0x4000000,S_ATTR_DEBUG = 0x2000000,};
enum MACRO_TANDEM {TANDEM = 0x1,CBREAK = 0x2,LCASE = 0x4,ECHO = 0x8,CRMOD = 0x10,RAW = 0x20,ODDP = 0x40,EVENP = 0x80,};
enum MACRO_TARGET {TARGET_OS_MAC = 1,TARGET_OS_WIN32 = 0,TARGET_OS_UNIX = 0,TARGET_OS_EMBEDDED = 0,TARGET_OS_IPHONE = 0,TARGET_IPHONE_SIMULATOR = 0,TARGET_CPU_PPC = 0,TARGET_CPU_PPC64 = 0,TARGET_CPU_68K = 0,TARGET_CPU_X86 = 0,TARGET_CPU_X86_64 = 1,TARGET_CPU_ARM = 0,TARGET_CPU_MIPS = 0,TARGET_CPU_SPARC = 0,TARGET_CPU_ALPHA = 0,TARGET_RT_MAC_CFM = 0,TARGET_RT_MAC_MACHO = 1,TARGET_RT_LITTLE_ENDIAN = 1,TARGET_RT_BIG_ENDIAN = 0,TARGET_RT_64_BIT = 1,};
enum MACRO_TCIOFF {TCIOFF = 3,TCION = 4,};
enum MACRO_TCOOFF {TCOOFF = 1,TCOON = 2,};
enum MACRO_TCPCTL {TCPCTL_DO_RFC1323 = 1,TCPCTL_DO_RFC1644 = 2,TCPCTL_MSSDFLT = 3,TCPCTL_STATS = 4,TCPCTL_RTTDFLT = 5,TCPCTL_KEEPIDLE = 6,TCPCTL_KEEPINTVL = 7,TCPCTL_SENDSPACE = 8,TCPCTL_RECVSPACE = 9,TCPCTL_KEEPINIT = 10,TCPCTL_PCBLIST = 11,TCPCTL_DELACKTIME = 12,TCPCTL_V6MSSDFLT = 13,TCPCTL_MAXID = 14,};
enum MACRO_TCPOOB {TCPOOB_HAVEDATA = 0x1,TCPOOB_HADDATA = 0x2,};
enum MACRO_TCPOPT {TCPOPT_EOL = 0,TCPOPT_NOP = 1,TCPOPT_MAXSEG = 2,};
enum MACRO_TELCMD {TELCMD_FIRST = 236,TELCMD_LAST = 255,};
enum MACRO_TELOPT {TELOPT_BINARY = 0,TELOPT_ECHO = 1,TELOPT_RCP = 2,TELOPT_SGA = 3,TELOPT_NAMS = 4,TELOPT_STATUS = 5,TELOPT_TM = 6,TELOPT_RCTE = 7,TELOPT_NAOL = 8,TELOPT_NAOP = 9,TELOPT_NAOCRD = 10,TELOPT_NAOHTS = 11,TELOPT_NAOHTD = 12,TELOPT_NAOFFD = 13,TELOPT_NAOVTS = 14,TELOPT_NAOVTD = 15,TELOPT_NAOLFD = 16,TELOPT_XASCII = 17,TELOPT_LOGOUT = 18,TELOPT_BM = 19,TELOPT_DET = 20,TELOPT_SUPDUP = 21,TELOPT_SUPDUPOUTPUT = 22,TELOPT_SNDLOC = 23,TELOPT_TTYPE = 24,TELOPT_EOR = 25,TELOPT_TUID = 26,TELOPT_OUTMRK = 27,TELOPT_TTYLOC = 28,TELOPT_3270REGIME = 29,TELOPT_X3PAD = 30,TELOPT_NAWS = 31,TELOPT_TSPEED = 32,TELOPT_LFLOW = 33,TELOPT_LINEMODE = 34,TELOPT_XDISPLOC = 35,TELOPT_OLD_ENVIRON = 36,TELOPT_AUTHENTICATION = 37,TELOPT_ENCRYPT = 38,TELOPT_NEW_ENVIRON = 39,TELOPT_EXOPL = 255,};
enum MACRO_TGEXEC {TGEXEC = 0x8,};
enum MACRO_TGREAD {TGREAD = 0x20,};
enum MACRO_THREAD {THREAD_STATE_NONE = 13,};
enum MACRO_TH_FIN {TH_FIN = 0x1,TH_SYN = 0x2,TH_RST = 0x4,TH_PUSH = 0x8,TH_ACK = 0x10,TH_URG = 0x20,TH_ECE = 0x40,TH_CWR = 0x80,TH_FLAGS = 0xF7,};
enum MACRO_TLSEXT {TLSEXT_TYPE_server_name = 0,TLSEXT_TYPE_max_fragment_length = 1,TLSEXT_TYPE_client_certificate_url = 2,TLSEXT_TYPE_trusted_ca_keys = 3,TLSEXT_TYPE_truncated_hmac = 4,TLSEXT_TYPE_status_request = 5,TLSEXT_TYPE_elliptic_curves = 10,TLSEXT_TYPE_ec_point_formats = 11,TLSEXT_TYPE_session_ticket = 35,TLSEXT_TYPE_renegotiate = 65281,TLSEXT_NAMETYPE_host_name = 0,TLSEXT_STATUSTYPE_ocsp = 1,TLSEXT_MAXLEN_host_name = 255,};
enum MACRO_TLS_MD {TLS_MD_MAX_CONST_SIZE = 20,TLS_MD_CLIENT_FINISH_CONST_SIZE = 15,TLS_MD_SERVER_FINISH_CONST_SIZE = 15,TLS_MD_SERVER_WRITE_KEY_CONST_SIZE = 16,TLS_MD_KEY_EXPANSION_CONST_SIZE = 13,TLS_MD_CLIENT_WRITE_KEY_CONST_SIZE = 16,TLS_MD_IV_BLOCK_CONST_SIZE = 8,TLS_MD_MASTER_SECRET_CONST_SIZE = 13,};
enum MACRO_TOEXEC {TOEXEC = 0x1,};
enum MACRO_TOREAD {TOREAD = 0x4,};
enum MACRO_TRCSIZ {TRCSIZ = 4096,};
enum MACRO_TTYDEF {TTYDEF_IFLAG = 11010,TTYDEF_OFLAG = 3,TTYDEF_LFLAG = 1483,TTYDEF_CFLAG = 19200,TTYDEF_SPEED = 9600,};
enum MACRO_TTY_ON {TTY_ON = 0x1,TTY_SECURE = 0x2,};
enum MACRO_TUEXEC {TUEXEC = 0x40,};
enum MACRO_TUREAD {TUREAD = 0x100,};
enum MACRO_UDPCTL {UDPCTL_CHECKSUM = 1,UDPCTL_STATS = 2,UDPCTL_MAXDGRAM = 3,UDPCTL_RECVSPACE = 4,UDPCTL_PCBLIST = 5,UDPCTL_MAXID = 6,};
enum MACRO_ULLONG {ULLONG_MAX = 0xFFFFFFFFFFFFFFFF,LLONG_MAX = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_VDSUSP {VDSUSP = 11,};
enum MACRO_VERASE {VERASE = 3,VWERASE = 4,};
enum MACRO_VLNEXT {VLNEXT = 14,};
enum MACRO_VM_MAP {VM_MAP_NULL = 0,UPL_NULL = 0,VM_NAMED_ENTRY_NULL = 0,MEMORY_OBJECT_NULL = 0,MEMORY_OBJECT_CONTROL_NULL = 0,MEMORY_OBJECT_NAME_NULL = 0,MEMORY_OBJECT_DEFAULT_NULL = 0,};
enum MACRO_VNOVAL {VNOVAL = -1,};
enum MACRO_VPRINT {VPRINT = 0x40,VPLOT = 0x80,VPRINTPLOT = 0x100,};
enum MACRO_VSTART {VSTART = 12,};
enum MACRO_VTRACE {VTRACE = 115,};
enum MACRO_V_ASN1 {V_ASN1_UNIVERSAL = 0x0,V_ASN1_APPLICATION = 0x40,V_ASN1_CONTEXT_SPECIFIC = 0x80,V_ASN1_PRIVATE = 0xC0,V_ASN1_CONSTRUCTED = 0x20,V_ASN1_PRIMITIVE_TAG = 0x1F,V_ASN1_PRIMATIVE_TAG = 0x1F,V_ASN1_APP_CHOOSE = 0xFFFFFFFFFFFFFFFE,V_ASN1_OTHER = 0xFFFFFFFFFFFFFFFD,V_ASN1_ANY = 0xFFFFFFFFFFFFFFFC,V_ASN1_NEG = 0x100,V_ASN1_UNDEF = 0xFFFFFFFFFFFFFFFF,V_ASN1_EOC = 0x0,V_ASN1_BOOLEAN = 0x1,V_ASN1_INTEGER = 0x2,V_ASN1_NEG_INTEGER = 0x102,V_ASN1_BIT_STRING = 0x3,V_ASN1_OCTET_STRING = 0x4,V_ASN1_NULL = 0x5,V_ASN1_OBJECT = 0x6,V_ASN1_OBJECT_DESCRIPTOR = 0x7,V_ASN1_EXTERNAL = 0x8,V_ASN1_REAL = 0x9,V_ASN1_ENUMERATED = 0xA,V_ASN1_NEG_ENUMERATED = 0x10A,V_ASN1_UTF8STRING = 0xC,V_ASN1_SEQUENCE = 0x10,V_ASN1_SET = 0x11,V_ASN1_NUMERICSTRING = 0x12,V_ASN1_PRINTABLESTRING = 0x13,V_ASN1_T61STRING = 0x14,V_ASN1_TELETEXSTRING = 0x14,V_ASN1_VIDEOTEXSTRING = 0x15,V_ASN1_IA5STRING = 0x16,V_ASN1_UTCTIME = 0x17,V_ASN1_GENERALIZEDTIME = 0x18,V_ASN1_GRAPHICSTRING = 0x19,V_ASN1_ISO64STRING = 0x1A,V_ASN1_VISIBLESTRING = 0x1A,V_ASN1_GENERALSTRING = 0x1B,V_ASN1_UNIVERSALSTRING = 0x1C,V_ASN1_BMPSTRING = 0x1E,};
enum MACRO_V_OCSP {V_OCSP_RESPID_NAME = 0,V_OCSP_RESPID_KEY = 1,V_OCSP_CERTSTATUS_GOOD = 0,V_OCSP_CERTSTATUS_REVOKED = 1,V_OCSP_CERTSTATUS_UNKNOWN = 2,};
enum MACRO_WINDOW {TCPOPT_WINDOW = 3,TCPOLEN_WINDOW = 3,};
enum MACRO_X509V3 {X509V3_EXT_DYNAMIC = 0x1,X509V3_EXT_CTX_DEP = 0x2,X509V3_EXT_MULTILINE = 0x4,};
enum MACRO_X509v3 {X509v3_KU_DIGITAL_SIGNATURE = 0x80,X509v3_KU_NON_REPUDIATION = 0x40,X509v3_KU_KEY_ENCIPHERMENT = 0x20,X509v3_KU_DATA_ENCIPHERMENT = 0x10,X509v3_KU_KEY_AGREEMENT = 0x8,X509v3_KU_KEY_CERT_SIGN = 0x4,X509v3_KU_CRL_SIGN = 0x2,X509v3_KU_ENCIPHER_ONLY = 0x1,X509v3_KU_DECIPHER_ONLY = 0x8000,X509v3_KU_UNDEF = 0xFFFF,};
enum MACRO_XUCRED {XUCRED_VERSION = 0,};
enum MACRO_YESSTR {YESSTR = 54,};
enum MACRO_YPBIND {YPBIND_ERR_ERR = 1,YPBIND_ERR_NOSERV = 2,YPBIND_ERR_RESC = 3,};
enum MACRO_YPPROC {YPPROC_NULL = 0,YPPROC_DOMAIN = 1,YPPROC_DOMAIN_NONACK = 2,YPPROC_MATCH = 3,YPPROC_FIRST = 4,YPPROC_NEXT = 5,YPPROC_XFR = 6,YPPROC_CLEAR = 7,YPPROC_ALL = 8,YPPROC_MASTER = 9,YPPROC_ORDER = 10,YPPROC_MAPLIST = 11,};
enum MACRO_YPPROG {YPPROG = 100004,};
enum MACRO_YPPUSH {YPPUSH_XFRRESPPROG = 0x40000000,YPPUSH_XFRRESPVERS = 0x1,};
enum MACRO_YPVERS {YPVERS = 2,};
enum MACRO_ZALLOC {ZALLOC_CODE = 19988496,ZALLOC_CODE_2 = 19988500,};
enum MACRO__CTYPE {_CTYPE_A = 0x100,_CTYPE_C = 0x200,_CTYPE_D = 0x400,_CTYPE_G = 0x800,_CTYPE_L = 0x1000,_CTYPE_P = 0x2000,_CTYPE_S = 0x4000,_CTYPE_U = 0x8000,_CTYPE_X = 0x10000,_CTYPE_B = 0x20000,_CTYPE_R = 0x40000,_CTYPE_I = 0x80000,_CTYPE_T = 0x100000,_CTYPE_Q = 0x200000,_CTYPE_SW0 = 0x20000000,_CTYPE_SW1 = 0x40000000,_CTYPE_SW2 = 0x80000000,_CTYPE_SW3 = 0xC0000000,_CTYPE_SWM = 0xE0000000,_CTYPE_SWS = 0x1E,};
enum MACRO__IOFBF {_IOFBF = 0,_IOLBF = 1,_IONBF = 2,BUFSIZ = 1024,};
enum MACRO__JBLEN {_JBLEN = 37,};
enum MACRO__POSIX {_POSIX_VDISABLE = 255,_POSIX_THREAD_KEYS_MAX = 128,};
enum MACRO__XOPEN {_XOPEN_VERSION = 600,_XOPEN_XCU_VERSION = 4,};
enum MACRO___BIND {__BIND = 19950621,};
enum MACRO___IPV6 {__IPV6_ADDR_SCOPE_NODELOCAL = 0x1,__IPV6_ADDR_SCOPE_INTFACELOCAL = 0x1,__IPV6_ADDR_SCOPE_LINKLOCAL = 0x2,__IPV6_ADDR_SCOPE_SITELOCAL = 0x5,__IPV6_ADDR_SCOPE_ORGLOCAL = 0x8,__IPV6_ADDR_SCOPE_GLOBAL = 0xE,};
enum MACRO___LP64 {__LP64_OFF64 = 1,};
enum MACRO___SLBF {__SLBF = 0x1,__SNBF = 0x2,__SRD = 0x4,__SWR = 0x8,__SRW = 0x10,__SEOF = 0x20,__SERR = 0x40,__SMBF = 0x80,__SAPP = 0x100,__SSTR = 0x200,__SOPT = 0x400,__SNPT = 0x800,__SOFF = 0x1000,__SMOD = 0x2000,__SALC = 0x4000,__SIGN = 0x8000,};
enum MACRO___bool {__bool_true_false_are_defined = 1,};
enum MACRO_darwin {darwin = 10,};
enum MACRO_pseudo {pseudo_AF_XTP = 19,};
typedef int Menu_Options;
typedef unsigned char NCURSES_BOOL;
typedef struct _B8B9B85B971E3DBFC31707A9282CDA9E NDR_record_t;
typedef struct ocsp_req_info_st OCSP_REQINFO;
typedef struct ocsp_request_st OCSP_REQUEST;
typedef struct ocsp_req_ctx_st OCSP_REQ_CTX;
typedef struct openssl_item_st OPENSSL_ITEM;
typedef struct pkcs7_digest_st PKCS7_DIGEST;
typedef struct pkcs7_signed_st PKCS7_SIGNED;
typedef struct PROXY_POLICY_st PROXY_POLICY;
typedef int SNMPCallback(int majorID, int minorID, void *serverarg, void *clientarg);
typedef long long SQLROWOFFSET;
typedef unsigned char SQLTIMESTAMP;
typedef unsigned short SQLUSMALLINT;
typedef struct store_method_st STORE_METHOD;
typedef struct STORE_OBJECT_st STORE_OBJECT;
enum STORE_params {STORE_PARAM_EVP_TYPE = 0x1,STORE_PARAM_BITS = 0x2,STORE_PARAM_KEY_PARAMETERS = 0x3,STORE_PARAM_KEY_NO_PARAMETERS = 0x4,STORE_PARAM_AUTH_PASSPHRASE = 0x5,STORE_PARAM_AUTH_KRB5_TICKET = 0x6,STORE_PARAM_TYPE_NUM = 0x6,};
typedef int SecmodOutMsg(struct snmp_secmod_outgoing_params *);
typedef struct slapi_filter Slapi_Filter;
typedef struct slapi_pblock Slapi_PBlock;
typedef union _TXTRecordRef_t TXTRecordRef;
typedef struct _TidyIterator *TidyIterator;
typedef struct X509_objects_st X509_OBJECTS;
typedef struct x509_purpose_st X509_PURPOSE;
typedef struct X509_revoked_st X509_REVOKED;
struct _acl_flagset;
struct _acl_permset;
struct _cups_file_s;
struct _krb5_cc_ops;
struct _krb5_ccache;
struct _ppd_cache_s;
typedef struct _ppd_cache_s _ppd_cache_t;
struct _xmlAutomata;
struct _xmlChLRange {unsigned int low;unsigned int high;};
struct _xmlChSRange {unsigned short low;unsigned short high;};
struct _xmlSaveCtxt;
typedef int alarm_type_t;
typedef struct _23B1E26D963E4FD44AA72239E6371C7D au_execarg_t;
typedef struct _23B1E26D963E4FD44AA72239E6371C7D au_execenv_t;
typedef struct _85D8C0A2DD9AA223810B7F7FD2DEBD15 au_invalid_t;
typedef struct _3E305BF0A5D26BA3B5EE405973B9934A au_ipcperm_t;
typedef struct au_session au_session_t;
typedef struct _AE11D0CF51A850EC87EAB95E067600DD au_trailer_t;
typedef struct auditpinfo auditpinfo_t;
typedef int ber_socket_t;
typedef int *clock_attr_t;
struct config_files {char *fileHeader;struct config_line *start;struct config_files *next;};
typedef struct _cups_array_s cups_array_t;
struct cups_image_s;
typedef struct cups_image_s cups_image_t;
struct cups_izoom_s;
typedef struct cups_izoom_s cups_izoom_t;
enum cups_order_e {CUPS_ORDER_CHUNKED = 0x0,CUPS_ORDER_BANDED = 0x1,CUPS_ORDER_PLANAR = 0x2,};
enum cups_ptype_e {CUPS_PRINTER_LOCAL = 0x0,CUPS_PRINTER_CLASS = 0x1,CUPS_PRINTER_REMOTE = 0x2,CUPS_PRINTER_BW = 0x4,CUPS_PRINTER_COLOR = 0x8,CUPS_PRINTER_DUPLEX = 0x10,CUPS_PRINTER_STAPLE = 0x20,CUPS_PRINTER_COPIES = 0x40,CUPS_PRINTER_COLLATE = 0x80,CUPS_PRINTER_PUNCH = 0x100,CUPS_PRINTER_COVER = 0x200,CUPS_PRINTER_BIND = 0x400,CUPS_PRINTER_SORT = 0x800,CUPS_PRINTER_SMALL = 0x1000,CUPS_PRINTER_MEDIUM = 0x2000,CUPS_PRINTER_LARGE = 0x4000,CUPS_PRINTER_VARIABLE = 0x8000,CUPS_PRINTER_IMPLICIT = 0x10000,CUPS_PRINTER_DEFAULT = 0x20000,CUPS_PRINTER_FAX = 0x40000,CUPS_PRINTER_REJECTING = 0x80000,CUPS_PRINTER_DELETE = 0x100000,CUPS_PRINTER_NOT_SHARED = 0x200000,CUPS_PRINTER_AUTHENTICATED = 0x400000,CUPS_PRINTER_COMMANDS = 0x800000,CUPS_PRINTER_DISCOVERED = 0x1000000,CUPS_PRINTER_SCANNER = 0x2000000,CUPS_PRINTER_MFP = 0x4000000,CUPS_PRINTER_OPTIONS = 0x6FFFC,};
typedef unsigned int cups_ptype_t;
typedef unsigned long long cups_utf32_t;
enum curl_khmatch {CURLKHMATCH_OK = 0x0,CURLKHMATCH_MISMATCH = 0x1,CURLKHMATCH_MISSING = 0x2,CURLKHMATCH_LAST = 0x3,};
typedef struct _6C5D98EAC624033C396B1DA9760D33A0 dk_discard_t;
typedef  struct __dns_handle_private_struct *dns_handle_t;
typedef struct _D0D70EDABC5C86492745B3F9A6B48782 dns_header_t;
struct ec_method_st;
struct ecdsa_method;
struct err_state_st {unsigned long long pid;int err_flags[16];unsigned long long err_buffer[16];char *err_data[16];int err_data_flags[16]; char *err_file[16];int err_line[16];int top;int bottom;};
typedef void (*errorSAXFunc)(void *ctx,  char *msg, ...);
typedef struct diskextent extentrecord[8];
typedef struct fp_control fp_control_t;
typedef struct gss_OID_desc_struct gss_OID_desc;
typedef struct gss_buffer_desc_struct *gss_buffer_t;
typedef struct gss_ctx_id_struct *gss_ctx_id_t;
typedef struct help_index_s help_index_t;
typedef struct _htmlElemDesc htmlElemDesc;
enum http_field_e {HTTP_FIELD_UNKNOWN = 0xFFFFFFFF,HTTP_FIELD_ACCEPT_LANGUAGE = 0x0,HTTP_FIELD_ACCEPT_RANGES = 0x1,HTTP_FIELD_AUTHORIZATION = 0x2,HTTP_FIELD_CONNECTION = 0x3,HTTP_FIELD_CONTENT_ENCODING = 0x4,HTTP_FIELD_CONTENT_LANGUAGE = 0x5,HTTP_FIELD_CONTENT_LENGTH = 0x6,HTTP_FIELD_CONTENT_LOCATION = 0x7,HTTP_FIELD_CONTENT_MD5 = 0x8,HTTP_FIELD_CONTENT_RANGE = 0x9,HTTP_FIELD_CONTENT_TYPE = 0xA,HTTP_FIELD_CONTENT_VERSION = 0xB,HTTP_FIELD_DATE = 0xC,HTTP_FIELD_HOST = 0xD,HTTP_FIELD_IF_MODIFIED_SINCE = 0xE,HTTP_FIELD_IF_UNMODIFIED_SINCE = 0xF,HTTP_FIELD_KEEP_ALIVE = 0x10,HTTP_FIELD_LAST_MODIFIED = 0x11,HTTP_FIELD_LINK = 0x12,HTTP_FIELD_LOCATION = 0x13,HTTP_FIELD_RANGE = 0x14,HTTP_FIELD_REFERER = 0x15,HTTP_FIELD_RETRY_AFTER = 0x16,HTTP_FIELD_TRANSFER_ENCODING = 0x17,HTTP_FIELD_UPGRADE = 0x18,HTTP_FIELD_USER_AGENT = 0x19,HTTP_FIELD_WWW_AUTHENTICATE = 0x1A,HTTP_FIELD_MAX = 0x1B,};
enum http_state_e {HTTP_WAITING = 0x0,HTTP_OPTIONS = 0x1,HTTP_GET = 0x2,HTTP_GET_SEND = 0x3,HTTP_HEAD = 0x4,HTTP_POST = 0x5,HTTP_POST_RECV = 0x6,HTTP_POST_SEND = 0x7,HTTP_PUT = 0x8,HTTP_PUT_RECV = 0x9,HTTP_DELETE = 0xA,HTTP_TRACE = 0xB,HTTP_CLOSE = 0xC,HTTP_STATUS = 0xD,};
struct if_nameindex {unsigned int if_index;char *if_name;};
typedef char *io_buf_ptr_t;
struct ip6_moptions;
typedef struct _ipfw_insn_if ipfw_insn_if;
typedef struct _ipfw_insn_ip ipfw_insn_ip;
typedef struct _ipfw_insn_sa ipfw_insn_sa;
enum ipfw_opcodes {O_NOP = 0x0,O_IP_SRC = 0x1,O_IP_SRC_MASK = 0x2,O_IP_SRC_ME = 0x3,O_IP_SRC_SET = 0x4,O_IP_DST = 0x5,O_IP_DST_MASK = 0x6,O_IP_DST_ME = 0x7,O_IP_DST_SET = 0x8,O_IP_SRCPORT = 0x9,O_IP_DSTPORT = 0xA,O_PROTO = 0xB,O_MACADDR2 = 0xC,O_MAC_TYPE = 0xD,O_LAYER2 = 0xE,O_IN = 0xF,O_FRAG = 0x10,O_RECV = 0x11,O_XMIT = 0x12,O_VIA = 0x13,O_IPOPT = 0x14,O_IPLEN = 0x15,O_IPID = 0x16,O_IPTOS = 0x17,O_IPPRECEDENCE = 0x18,O_IPTTL = 0x19,O_IPVER = 0x1A,O_UID = 0x1B,O_GID = 0x1C,O_ESTAB = 0x1D,O_TCPFLAGS = 0x1E,O_TCPWIN = 0x1F,O_TCPSEQ = 0x20,O_TCPACK = 0x21,O_ICMPTYPE = 0x22,O_TCPOPTS = 0x23,O_VERREVPATH = 0x24,O_PROBE_STATE = 0x25,O_KEEP_STATE = 0x26,O_LIMIT = 0x27,O_LIMIT_PARENT = 0x28,O_LOG = 0x29,O_PROB = 0x2A,O_CHECK_STATE = 0x2B,O_ACCEPT = 0x2C,O_DENY = 0x2D,O_REJECT = 0x2E,O_COUNT = 0x2F,O_SKIPTO = 0x30,O_PIPE = 0x31,O_QUEUE = 0x32,O_DIVERT = 0x33,O_TEE = 0x34,O_FORWARD_IP = 0x35,O_FORWARD_MAC = 0x36,O_IPSEC = 0x37,O_LAST_OPCODE = 0x38,};
enum ipp_finish_e {IPP_FINISHINGS_NONE = 0x3,IPP_FINISHINGS_STAPLE = 0x4,IPP_FINISHINGS_PUNCH = 0x5,IPP_FINISHINGS_COVER = 0x6,IPP_FINISHINGS_BIND = 0x7,IPP_FINISHINGS_SADDLE_STITCH = 0x8,IPP_FINISHINGS_EDGE_STITCH = 0x9,IPP_FINISHINGS_FOLD = 0xA,IPP_FINISHINGS_TRIM = 0xB,IPP_FINISHINGS_BALE = 0xC,IPP_FINISHINGS_BOOKLET_MAKER = 0xD,IPP_FINISHINGS_JOB_OFFSET = 0xE,IPP_FINISHINGS_STAPLE_TOP_LEFT = 0x14,IPP_FINISHINGS_STAPLE_BOTTOM_LEFT = 0x15,IPP_FINISHINGS_STAPLE_TOP_RIGHT = 0x16,IPP_FINISHINGS_STAPLE_BOTTOM_RIGHT = 0x17,IPP_FINISHINGS_EDGE_STITCH_LEFT = 0x18,IPP_FINISHINGS_EDGE_STITCH_TOP = 0x19,IPP_FINISHINGS_EDGE_STITCH_RIGHT = 0x1A,IPP_FINISHINGS_EDGE_STITCH_BOTTOM = 0x1B,IPP_FINISHINGS_STAPLE_DUAL_LEFT = 0x1C,IPP_FINISHINGS_STAPLE_DUAL_TOP = 0x1D,IPP_FINISHINGS_STAPLE_DUAL_RIGHT = 0x1E,IPP_FINISHINGS_STAPLE_DUAL_BOTTOM = 0x1F,IPP_FINISHINGS_BIND_LEFT = 0x32,IPP_FINISHINGS_BIND_TOP = 0x33,IPP_FINISHINGS_BIND_RIGHT = 0x34,IPP_FINISHINGS_BIND_BOTTOM = 0x35,};
enum ipp_jstate_e {IPP_JOB_PENDING = 0x3,IPP_JOB_HELD = 0x4,IPP_JOB_PROCESSING = 0x5,IPP_JOB_STOPPED = 0x6,IPP_JOB_CANCELED = 0x7,IPP_JOB_ABORTED = 0x8,IPP_JOB_COMPLETED = 0x9,};
enum ipp_orient_e {IPP_PORTRAIT = 0x3,IPP_LANDSCAPE = 0x4,IPP_REVERSE_LANDSCAPE = 0x5,IPP_REVERSE_PORTRAIT = 0x6,};
enum ipp_pstate_e {IPP_PRINTER_IDLE = 0x3,IPP_PRINTER_PROCESSING = 0x4,IPP_PRINTER_STOPPED = 0x5,};
enum ipp_status_e {IPP_OK = 0x0,IPP_OK_SUBST = 0x1,IPP_OK_CONFLICT = 0x2,IPP_OK_IGNORED_SUBSCRIPTIONS = 0x3,IPP_OK_IGNORED_NOTIFICATIONS = 0x4,IPP_OK_TOO_MANY_EVENTS = 0x5,IPP_OK_BUT_CANCEL_SUBSCRIPTION = 0x6,IPP_OK_EVENTS_COMPLETE = 0x7,IPP_REDIRECTION_OTHER_SITE = 0x200,CUPS_SEE_OTHER = 0x280,IPP_BAD_REQUEST = 0x400,IPP_FORBIDDEN = 0x401,IPP_NOT_AUTHENTICATED = 0x402,IPP_NOT_AUTHORIZED = 0x403,IPP_NOT_POSSIBLE = 0x404,IPP_TIMEOUT = 0x405,IPP_NOT_FOUND = 0x406,IPP_GONE = 0x407,IPP_REQUEST_ENTITY = 0x408,IPP_REQUEST_VALUE = 0x409,IPP_DOCUMENT_FORMAT = 0x40A,IPP_ATTRIBUTES = 0x40B,IPP_URI_SCHEME = 0x40C,IPP_CHARSET = 0x40D,IPP_CONFLICT = 0x40E,IPP_COMPRESSION_NOT_SUPPORTED = 0x40F,IPP_COMPRESSION_ERROR = 0x410,IPP_DOCUMENT_FORMAT_ERROR = 0x411,IPP_DOCUMENT_ACCESS_ERROR = 0x412,IPP_ATTRIBUTES_NOT_SETTABLE = 0x413,IPP_IGNORED_ALL_SUBSCRIPTIONS = 0x414,IPP_TOO_MANY_SUBSCRIPTIONS = 0x415,IPP_IGNORED_ALL_NOTIFICATIONS = 0x416,IPP_PRINT_SUPPORT_FILE_NOT_FOUND = 0x417,IPP_INTERNAL_ERROR = 0x500,IPP_OPERATION_NOT_SUPPORTED = 0x501,IPP_SERVICE_UNAVAILABLE = 0x502,IPP_VERSION_NOT_SUPPORTED = 0x503,IPP_DEVICE_ERROR = 0x504,IPP_TEMPORARY_ERROR = 0x505,IPP_NOT_ACCEPTING = 0x506,IPP_PRINTER_BUSY = 0x507,IPP_ERROR_JOB_CANCELED = 0x508,IPP_MULTIPLE_JOBS_NOT_SUPPORTED = 0x509,IPP_PRINTER_IS_DEACTIVATED = 0x50A,IPP_AUTHENTICATION_CANCELED = 0x1000,IPP_PKI_ERROR = 0x1001,IPP_UPGRADE_REQUIRED = 0x1002,};
typedef struct ucred *kauth_cred_t;
typedef struct _krb5_address krb5_address;
typedef unsigned int krb5_boolean;
typedef struct _krb5_context *krb5_context;
typedef struct _krb5_kdc_rep krb5_kdc_rep;
typedef struct _krb5_kdc_req krb5_kdc_req;
typedef unsigned int krb5_msgtype;
typedef struct _krb5_pa_data krb5_pa_data;
typedef void *krb5_pointer;
typedef struct _5CF04B6421DF2D20D24DDD28F16D3C2A lt_dlsymlist;
typedef void *lt_user_data;
struct mecab_node_t {struct mecab_node_t *prev;struct mecab_node_t *next;struct mecab_node_t *enext;struct mecab_node_t *bnext;struct mecab_path_t *rpath;struct mecab_path_t *lpath;struct mecab_node_t **begin_node_list;struct mecab_node_t **end_node_list; char *surface; char *feature;unsigned short length;unsigned short rlength;unsigned short rcAttr;unsigned short lcAttr;unsigned short posid;unsigned char char_type;unsigned char stat;short wcost;long long cost;};
struct mecab_path_t {struct mecab_node_t *rnode;struct mecab_node_t *lnode;struct mecab_path_t *lnext;int cost;};
typedef struct mig_symtab mig_symtab_t;
typedef struct _mime_magic_s mime_magic_t;
typedef struct _A1BE0EBA393D65D9C9965FE1E31C9EA5 msg_labels_t;
typedef struct netsnmp_file_s netsnmp_file;
typedef struct pam_handle pam_handle_t;
typedef struct pam_module pam_module_t;
struct pam_response {char *resp;int resp_retcode;};
typedef struct posix_cred *posix_cred_t;
typedef struct ppd_choice_s ppd_choice_t;
typedef struct ppd_cparam_s ppd_cparam_t;
enum ppd_cptype_e {PPD_CUSTOM_CURVE = 0x0,PPD_CUSTOM_INT = 0x1,PPD_CUSTOM_INVCURVE = 0x2,PPD_CUSTOM_PASSCODE = 0x3,PPD_CUSTOM_PASSWORD = 0x4,PPD_CUSTOM_POINTS = 0x5,PPD_CUSTOM_REAL = 0x6,PPD_CUSTOM_STRING = 0x7,};
typedef struct ppd_option_s ppd_option_t;
enum ppd_status_e {PPD_OK = 0x0,PPD_FILE_OPEN_ERROR = 0x1,PPD_NULL_FILE = 0x2,PPD_ALLOC_ERROR = 0x3,PPD_MISSING_PPDADOBE4 = 0x4,PPD_MISSING_VALUE = 0x5,PPD_INTERNAL_ERROR = 0x6,PPD_BAD_OPEN_GROUP = 0x7,PPD_NESTED_OPEN_GROUP = 0x8,PPD_BAD_OPEN_UI = 0x9,PPD_NESTED_OPEN_UI = 0xA,PPD_BAD_ORDER_DEPENDENCY = 0xB,PPD_BAD_UI_CONSTRAINTS = 0xC,PPD_MISSING_ASTERISK = 0xD,PPD_LINE_TOO_LONG = 0xE,PPD_ILLEGAL_CHARACTER = 0xF,PPD_ILLEGAL_MAIN_KEYWORD = 0x10,PPD_ILLEGAL_OPTION_KEYWORD = 0x11,PPD_ILLEGAL_TRANSLATION = 0x12,PPD_ILLEGAL_WHITESPACE = 0x13,PPD_BAD_CUSTOM_PARAM = 0x14,PPD_MISSING_OPTION_KEYWORD = 0x15,PPD_BAD_VALUE = 0x16,PPD_MISSING_CLOSE_GROUP = 0x17,PPD_MAX_STATUS = 0x18,};
typedef struct __ns_msg res_9_ns_msg;
typedef struct sasl_utils sasl_utils_t;
struct semid_kernel;
struct shmid_kernel;
typedef int sig_atomic_t;
struct slapi_filter;
struct slapi_pblock;
typedef int sleep_type_t;
struct sqlite3_blob;
struct sqlite3_file { struct sqlite3_io_methods *pMethods;};
struct sqlite3_stmt;
struct sqlite3_vtab { sqlite3_module *pModule;int nRef;char *zErrMsg;};
typedef long long sqlite_int64;
typedef struct ssl_st *ssl_crock_st;
struct tcpd_context {char *file;int line;};
typedef struct time_value time_value_t;
struct ui_method_st;
struct ui_string_st;
typedef int unw_regnum_t;
struct varbind_list {struct varbind_list *next;char *vblabel;};
typedef unsigned int vm_inherit_t;
struct x509_file_st {int num_paths;int num_alloced;char **paths;int *path_type;};
typedef struct _xlinkHandler xlinkHandler;
typedef struct _xmlAttribute xmlAttribute;
typedef struct _xmlHashTable xmlHashTable;
typedef struct _xmlSchemaVal xmlSchemaVal;
typedef struct _xmlShellCtxt xmlShellCtxt;
typedef struct _xmlValidCtxt xmlValidCtxt;
typedef struct _xmlXPathAxis xmlXPathAxis;
typedef struct _xmlXPathType xmlXPathType;
typedef unsigned int xp_client_id;
typedef void xp_event_fun(unsigned int type,  void *arg, unsigned int arg_size, void *user_data);
typedef struct _xsltDocument xsltDocument;
typedef struct _xsltKeyTable xsltKeyTable;
typedef struct _xsltTemplate xsltTemplate;
typedef struct asn1_header_st ASN1_HEADER;
typedef struct asn1_method_st ASN1_METHOD;
typedef struct asn1_object_st ASN1_OBJECT;
typedef struct asn1_string_st ASN1_STRING;
struct ASN1_TLC_st {char valid;int ret;long long plen;int ptag;int pclass;int hdrlen;};
typedef struct bn_blinding_st BN_BLINDING;
typedef struct bn_mont_ctx_st BN_MONT_CTX;
typedef struct bn_recp_ctx_st BN_RECP_CTX;
typedef struct comp_method_st COMP_METHOD;
typedef struct conf_method_st CONF_METHOD;
typedef struct conf_module_st CONF_MODULE;
typedef char **CPPFunction( char *, int, int);
typedef struct tagDATE_STRUCT DATE_STRUCT;
typedef struct dtls1_state_st DTLS1_STATE;
typedef struct ecdh_method ECDH_METHOD;
typedef struct krb5_encryptionkey_st KRB5_ENCKEY;
typedef struct ldapapiinfo LDAPAPIInfo;
typedef struct ldapcontrol LDAPControl;
typedef struct ldapmsg LDAPMessage;
typedef struct ldapsortkey LDAPSortKey;
typedef struct ldap_url_desc LDAPURLDesc;
typedef struct ldapvlvinfo LDAPVLVInfo;
enum MACRO_ABDAY {ABDAY_1 = 14,ABDAY_2 = 15,ABDAY_3 = 16,ABDAY_4 = 17,ABDAY_5 = 18,ABDAY_6 = 19,ABDAY_7 = 20,};
enum MACRO_ABMON {ABMON_1 = 33,ABMON_2 = 34,ABMON_3 = 35,ABMON_4 = 36,ABMON_5 = 37,ABMON_6 = 38,ABMON_7 = 39,ABMON_8 = 40,ABMON_9 = 41,ABMON_10 = 42,ABMON_11 = 43,ABMON_12 = 44,};
enum MACRO_ABORT {ABORT = 238,};
enum MACRO_AFORK {AFORK = 0x1,ASU = 0x2,ACOMPAT = 0x4,ACORE = 0x8,AXSIG = 0x10,AHZ = 0x40,};
enum MACRO_APPLE {APPLE_IF_FAM_LOOPBACK = 1,APPLE_IF_FAM_ETHERNET = 2,APPLE_IF_FAM_SLIP = 3,APPLE_IF_FAM_TUN = 4,APPLE_IF_FAM_VLAN = 5,APPLE_IF_FAM_PPP = 6,APPLE_IF_FAM_PVC = 7,APPLE_IF_FAM_DISC = 8,APPLE_IF_FAM_MDECAP = 9,APPLE_IF_FAM_GIF = 10,APPLE_IF_FAM_FAITH = 11,APPLE_IF_FAM_STF = 12,APPLE_IF_FAM_FIREWIRE = 13,APPLE_IF_FAM_BOND = 14,};
enum MACRO_ARPOP {ARPOP_REQUEST = 1,ARPOP_REPLY = 2,ARPOP_REVREQUEST = 3,ARPOP_REVREPLY = 4,ARPOP_INVREQUEST = 8,ARPOP_INVREPLY = 9,};
enum MACRO_AUDIT {AUDIT_RECORD_MAGIC = 0x828A0F1B,};
enum MACRO_AU_FS {AU_FS_MINFREE = 20,AU_IPv4 = 4,AU_IPv6 = 16,};
enum MACRO_AU_TO {AU_TO_NO_WRITE = 0,AU_TO_WRITE = 1,AU_OFLAG_NONE = 0,AU_OFLAG_RAW = 1,AU_OFLAG_SHORT = 2,AU_OFLAG_XML = 4,AU_OFLAG_NORESOLVE = 8,};
enum MACRO_B1200 {B1200 = 1200,};
enum MACRO_B1800 {B1800 = 1800,};
enum MACRO_B2400 {B2400 = 2400,};
enum MACRO_B4800 {B4800 = 4800,};
enum MACRO_B7200 {B7200 = 7200,};
enum MACRO_B9600 {B9600 = 9600,};
enum MACRO_BLOCK {BLOCK_DESCRIPTOR_1 = 1,BLOCK_DESCRIPTOR_2 = 1,BLOCK_DESCRIPTOR_3 = 1,};
enum MACRO_BOOTP {BOOTP_MIN_BACKOFF = 0x7FF,BOOTP_MAX_BACKOFF = 0xFFFF,BOOTP_RETRY = 0x6,};
enum MACRO_BREAK {BREAK = 243,};
enum MACRO_BUF_F {BUF_F_BUF_MEMDUP = 103,BUF_F_BUF_MEM_GROW = 100,BUF_F_BUF_MEM_GROW_CLEAN = 105,BUF_F_BUF_MEM_NEW = 101,BUF_F_BUF_STRDUP = 102,BUF_F_BUF_STRNDUP = 104,};
enum MACRO_BYTES {BYTES_PER_XDR_UNIT = 4,};
enum MACRO_CACHE {CACHE_ATTRIBUTES_VERSION_1 = 1,CACHE_ATTRIBUTES_VERSION_2 = 2,};
enum MACRO_CHECK {CHECK_RT_FLAGS = 1,};
enum MACRO_CINTR {CINTR = 3,CSTATUS = 20,};
enum MACRO_CKILL {CKILL = 21,};
enum MACRO_CLGET {CLGET_SERVER_ADDR = 3,};
enum MACRO_CLOCK {SYSTEM_CLOCK = 0,CALENDAR_CLOCK = 1,REALTIME_CLOCK = 0,};
enum MACRO_CLOFF {CLOFF = 4095,};
enum MACRO_CMASK {CMASK = 0x12,};
enum MACRO_COLOR {COLOR_BLACK = 0,COLOR_RED = 1,COLOR_GREEN = 2,COLOR_YELLOW = 3,COLOR_BLUE = 4,COLOR_MAGENTA = 5,COLOR_CYAN = 6,COLOR_WHITE = 7,};
enum MACRO_COUNT {task_MSG_COUNT = 35,thread_act_MSG_COUNT = 25,vm_map_MSG_COUNT = 31,mach_port_MSG_COUNT = 31,};
enum MACRO_CSTOP {CSTOP = 19,};
enum MACRO_CSUSP {CSUSP = 26,};
enum MACRO_CTIME {CTIME = 0,CDSUSP = 25,};
enum MACRO_CURLE {CURLE_ALREADY_COMPLETE = 99999,};
enum MACRO_DEVFS {DEVFS_CHAR = 0,DEVFS_BLOCK = 1,DEVFS_CLONE_ALLOC = 1,DEVFS_CLONE_FREE = 0,};
enum MACRO_DMGET {DMGET = 3,};
enum MACRO_DMSET {DMSET = 0,DMBIS = 1,DMBIC = 2,};
enum MACRO_DSA_F {DSA_F_D2I_DSA_SIG = 110,DSA_F_DSAPARAMS_PRINT = 100,DSA_F_DSAPARAMS_PRINT_FP = 101,DSA_F_DSA_BUILTIN_KEYGEN = 119,DSA_F_DSA_BUILTIN_PARAMGEN = 118,DSA_F_DSA_DO_SIGN = 112,DSA_F_DSA_DO_VERIFY = 113,DSA_F_DSA_GENERATE_PARAMETERS = 117,DSA_F_DSA_NEW_METHOD = 103,DSA_F_DSA_PRINT = 104,DSA_F_DSA_PRINT_FP = 105,DSA_F_DSA_SET_DEFAULT_METHOD = 115,DSA_F_DSA_SET_METHOD = 116,DSA_F_DSA_SIGN = 106,DSA_F_DSA_SIGN_SETUP = 107,DSA_F_DSA_SIG_NEW = 109,DSA_F_DSA_VERIFY = 108,DSA_F_I2D_DSA_SIG = 111,DSA_F_SIG_CB = 114,DSA_R_BAD_Q_VALUE = 102,DSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE = 100,DSA_R_KEY_SIZE_TOO_SMALL = 106,DSA_R_MISSING_PARAMETERS = 101,DSA_R_MODULUS_TOO_LARGE = 103,DSA_R_NON_FIPS_METHOD = 104,DSA_R_OPERATION_NOT_ALLOWED_IN_FIPS_MODE = 105,};
enum MACRO_DTLS1 {DTLS1_MT_HELLO_VERIFY_REQUEST = 3,};
enum MACRO_ECDSA {ECDSA_F_ECDSA_DATA_NEW_METHOD = 100,ECDSA_F_ECDSA_DO_SIGN = 101,ECDSA_F_ECDSA_DO_VERIFY = 102,ECDSA_F_ECDSA_SIGN_SETUP = 103,ECDSA_R_BAD_SIGNATURE = 100,ECDSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE = 101,ECDSA_R_ERR_EC_LIB = 102,ECDSA_R_MISSING_PARAMETERS = 103,ECDSA_R_NEED_NEW_SETUP_VALUES = 106,ECDSA_R_RANDOM_NUMBER_GENERATION_FAILED = 104,ECDSA_R_SIGNATURE_MALLOC_FAILED = 105,};
enum MACRO_EMPTY {EMPTY = 0,};
enum MACRO_EPOCH {EPOCH_YEAR = 1970,EPOCH_WDAY = 4,};
enum MACRO_EPROC {EPROC_CTTY = 0x1,EPROC_SLEADER = 0x2,};
enum MACRO_ERA_D {ERA_D_FMT = 46,ERA_D_T_FMT = 47,ERA_T_FMT = 48,};
enum MACRO_ERRNO {EPERM = 1,ENOENT = 2,ESRCH = 3,EINTR = 4,EIO = 5,ENXIO = 6,E2BIG = 7,ENOEXEC = 8,EBADF = 9,ECHILD = 10,EDEADLK = 11,ENOMEM = 12,EACCES = 13,EFAULT = 14,ENOTBLK = 15,EBUSY = 16,EEXIST = 17,EXDEV = 18,ENODEV = 19,ENOTDIR = 20,EISDIR = 21,EINVAL = 22,ENFILE = 23,EMFILE = 24,ENOTTY = 25,ETXTBSY = 26,EFBIG = 27,ENOSPC = 28,ESPIPE = 29,EROFS = 30,EMLINK = 31,EPIPE = 32,EDOM = 33,ERANGE = 34,EAGAIN = 35,EWOULDBLOCK = 35,EINPROGRESS = 36,EALREADY = 37,ENOTSOCK = 38,EDESTADDRREQ = 39,EMSGSIZE = 40,EPROTOTYPE = 41,ENOPROTOOPT = 42,EPROTONOSUPPORT = 43,ESOCKTNOSUPPORT = 44,ENOTSUP = 45,EPFNOSUPPORT = 46,EAFNOSUPPORT = 47,EADDRINUSE = 48,EADDRNOTAVAIL = 49,ENETDOWN = 50,ENETUNREACH = 51,ENETRESET = 52,ECONNABORTED = 53,ECONNRESET = 54,ENOBUFS = 55,EISCONN = 56,ENOTCONN = 57,ESHUTDOWN = 58,ETOOMANYREFS = 59,ETIMEDOUT = 60,ECONNREFUSED = 61,ELOOP = 62,ENAMETOOLONG = 63,EHOSTDOWN = 64,EHOSTUNREACH = 65,ENOTEMPTY = 66,EPROCLIM = 67,EUSERS = 68,EDQUOT = 69,ESTALE = 70,EREMOTE = 71,EBADRPC = 72,ERPCMISMATCH = 73,EPROGUNAVAIL = 74,EPROGMISMATCH = 75,EPROCUNAVAIL = 76,ENOLCK = 77,ENOSYS = 78,EFTYPE = 79,EAUTH = 80,ENEEDAUTH = 81,EPWROFF = 82,EDEVERR = 83,EOVERFLOW = 84,EBADEXEC = 85,EBADARCH = 86,ESHLIBVERS = 87,EBADMACHO = 88,ECANCELED = 89,EIDRM = 90,ENOMSG = 91,EILSEQ = 92,ENOATTR = 93,EBADMSG = 94,EMULTIHOP = 95,ENODATA = 96,ENOLINK = 97,ENOSR = 98,ENOSTR = 99,EPROTO = 100,ETIME = 101,EOPNOTSUPP = 102,ENOPOLICY = 103,ENOTRECOVERABLE = 104,EOWNERDEAD = 105,ELAST = 105,};
enum MACRO_ERROR {ERROR_TABLE_BASE_krb5 = -1765328384,};
enum MACRO_ERR_R {ERR_R_SYS_LIB = 2,ERR_R_BN_LIB = 3,ERR_R_RSA_LIB = 4,ERR_R_DH_LIB = 5,ERR_R_EVP_LIB = 6,ERR_R_BUF_LIB = 7,ERR_R_OBJ_LIB = 8,ERR_R_PEM_LIB = 9,ERR_R_DSA_LIB = 10,ERR_R_X509_LIB = 11,ERR_R_ASN1_LIB = 13,ERR_R_CONF_LIB = 14,ERR_R_CRYPTO_LIB = 15,ERR_R_EC_LIB = 16,ERR_R_SSL_LIB = 20,ERR_R_BIO_LIB = 32,ERR_R_PKCS7_LIB = 33,ERR_R_X509V3_LIB = 34,ERR_R_PKCS12_LIB = 35,ERR_R_RAND_LIB = 36,ERR_R_DSO_LIB = 37,ERR_R_ENGINE_LIB = 38,ERR_R_OCSP_LIB = 39,ERR_R_UI_LIB = 40,ERR_R_COMP_LIB = 41,ERR_R_ECDSA_LIB = 42,ERR_R_ECDH_LIB = 43,ERR_R_STORE_LIB = 44,ERR_R_NESTED_ASN1_ERROR = 58,ERR_R_BAD_ASN1_OBJECT_HEADER = 59,ERR_R_BAD_GET_ASN1_OBJECT_CALL = 60,ERR_R_EXPECTING_AN_ASN1_SEQUENCE = 61,ERR_R_ASN1_LENGTH_MISMATCH = 62,ERR_R_MISSING_ASN1_EOS = 63,ERR_R_FATAL = 64,ERR_R_MALLOC_FAILURE = 65,ERR_R_SHOULD_NOT_HAVE_BEEN_CALLED = 66,ERR_R_PASSED_NULL_PARAMETER = 67,ERR_R_INTERNAL_ERROR = 68,ERR_R_DISABLED = 69,};
enum MACRO_ETHER {ETHER_ADDR_LEN = 6,ETHER_TYPE_LEN = 2,ETHER_CRC_LEN = 4,ETHER_HDR_LEN = 14,ETHER_MIN_LEN = 64,ETHER_MAX_LEN = 1518,ETHER_ALIGN = 2,};
enum MACRO_FCNTL {FCNTL_FS_SPECIFIC_BASE = 0x10000,};
enum MACRO_FIRST {FIRST_EXCEPTION = 1,};
enum MACRO_FP_NO {FP_NO = 0,FP_SOFT = 1,FP_287 = 2,FP_387 = 3,FP_FXSR = 4,};
enum MACRO_FREAD {FREAD = 0x1,FWRITE = 0x2,};
enum MACRO_FSOPT {FSOPT_NOFOLLOW = 0x1,FSOPT_NOINMEMUPDATE = 0x2,FSOPT_REPORT_FULLSIZE = 0x4,FSOPT_PACK_INVAL_ATTRS = 0x8,};
enum MACRO_FULLY {FULLY_QUALIFIED_INSTANCE = 0x1,};
enum MACRO_F_NOT {F_NOT = 0x80,F_OR = 0x40,F_LEN_MASK = 0x3F,};
enum MACRO_GAUGE {GAUGE = 66,};
enum MACRO_GPROF {GPROF_STATE = 0,GPROF_COUNT = 1,GPROF_FROMS = 2,GPROF_TOS = 3,GPROF_GMONPARAM = 4,};
enum MACRO_HOURS {HOURS_PER_DAY = 24,};
enum MACRO_ICMP6 {ICMP6_FILTER = 18,};
enum MACRO_ICONV {ICONV_TRIVIALP = 0,ICONV_GET_TRANSLITERATE = 1,ICONV_SET_TRANSLITERATE = 2,ICONV_GET_DISCARD_ILSEQ = 3,ICONV_SET_DISCARD_ILSEQ = 4,ICONV_SET_HOOKS = 5,ICONV_SET_FALLBACKS = 6,};
enum MACRO_IFCAP {IFCAP_RXCSUM = 0x1,IFCAP_TXCSUM = 0x2,IFCAP_VLAN_MTU = 0x4,IFCAP_VLAN_HWTAGGING = 0x8,IFCAP_JUMBO_MTU = 0x10,IFCAP_TSO4 = 0x20,IFCAP_TSO6 = 0x40,IFCAP_LRO = 0x80,IFCAP_AV = 0x100,IFCAP_HWCSUM = 0x3,IFCAP_TSO = 0x60,IFCAP_VALID = 0x1FF,};
enum MACRO_IFLOW {CRTS_IFLOW = 0x20000,CDTR_IFLOW = 0x40000,};
enum MACRO_IFMIB {IFMIB_SYSTEM = 1,IFMIB_IFDATA = 2,IFMIB_IFALLDATA = 3,};
enum MACRO_IFNET {IFNET_SLOWHZ = 1,};
enum MACRO_INDEX {INDEX_ERR_GENERR = -1,INDEX_ERR_WRONG_TYPE = -2,INDEX_ERR_NOT_ALLOCATED = -3,INDEX_ERR_WRONG_SESSION = -4,};
enum MACRO_INDIR {INDIR_MASK = 192,};
enum MACRO_INET6 {INET6_ADDRSTRLEN = 46,};
enum MACRO_INPUT {INPUT_CHUNK = 250,};
enum MACRO_IOPOL {IOPOL_TYPE_DISK = 0,IOPOL_SCOPE_PROCESS = 0,IOPOL_SCOPE_THREAD = 1,IOPOL_DEFAULT = 0,IOPOL_NORMAL = 1,IOPOL_PASSIVE = 2,IOPOL_THROTTLE = 3,};
enum MACRO_IPCTL {IPCTL_FORWARDING = 1,IPCTL_SENDREDIRECTS = 2,IPCTL_DEFTTL = 3,IPCTL_RTEXPIRE = 5,IPCTL_RTMINEXPIRE = 6,IPCTL_RTMAXCACHE = 7,IPCTL_SOURCEROUTE = 8,IPCTL_DIRECTEDBROADCAST = 9,IPCTL_INTRQMAXLEN = 10,IPCTL_INTRQDROPS = 11,IPCTL_STATS = 12,IPCTL_ACCEPTSOURCEROUTE = 13,IPCTL_FASTFORWARDING = 14,IPCTL_KEEPFAITH = 15,IPCTL_GIF_TTL = 16,IPCTL_MAXID = 17,};
enum MACRO_IPOPT {IPOPT_CONTROL = 0x0,IPOPT_RESERVED1 = 0x20,IPOPT_DEBMEAS = 0x40,IPOPT_RESERVED2 = 0x60,IPOPT_EOL = 0x0,IPOPT_NOP = 0x1,IPOPT_RR = 0x7,IPOPT_TS = 0x44,IPOPT_SECURITY = 0x82,IPOPT_LSRR = 0x83,IPOPT_SATID = 0x88,IPOPT_SSRR = 0x89,IPOPT_RA = 0x94,IPOPT_OPTVAL = 0x0,IPOPT_OLEN = 0x1,IPOPT_OFFSET = 0x2,IPOPT_MINOFF = 0x4,IPOPT_TS_TSONLY = 0x0,IPOPT_TS_TSANDADDR = 0x1,IPOPT_TS_PRESPEC = 0x3,IPOPT_SECUR_UNCLASS = 0x0,IPOPT_SECUR_CONFID = 0xF135,IPOPT_SECUR_EFTO = 0x789A,IPOPT_SECUR_MMMM = 0xBC4D,IPOPT_SECUR_RESTR = 0xAF13,IPOPT_SECUR_SECRET = 0xD788,IPOPT_SECUR_TOPSECRET = 0x6BC5,};
enum MACRO_IPSEC {IPSEC_PORT_ANY = 0,IPSEC_ULPROTO_ANY = 255,IPSEC_PROTO_ANY = 255,IPSEC_MODE_ANY = 0,IPSEC_MODE_TRANSPORT = 1,IPSEC_MODE_TUNNEL = 2,IPSEC_DIR_ANY = 0,IPSEC_DIR_INBOUND = 1,IPSEC_DIR_OUTBOUND = 2,IPSEC_DIR_MAX = 3,IPSEC_DIR_INVALID = 4,IPSEC_POLICY_DISCARD = 0,IPSEC_POLICY_NONE = 1,IPSEC_POLICY_IPSEC = 2,IPSEC_POLICY_ENTRUST = 3,IPSEC_POLICY_BYPASS = 4,IPSEC_POLICY_GENERATE = 5,IPSEC_LEVEL_DEFAULT = 0,IPSEC_LEVEL_USE = 1,IPSEC_LEVEL_REQUIRE = 2,IPSEC_LEVEL_UNIQUE = 3,IPSEC_MANUAL_REQID_MAX = 16383,IPSEC_REPLAYWSIZE = 32,};
enum MACRO_IPTOS {IPTOS_LOWDELAY = 0x10,IPTOS_THROUGHPUT = 0x8,IPTOS_RELIABILITY = 0x4,IPTOS_MINCOST = 0x2,IPTOS_CE = 0x1,IPTOS_ECT = 0x2,IPTOS_ECN_NOTECT = 0x0,IPTOS_ECN_ECT1 = 0x1,IPTOS_ECN_ECT0 = 0x2,IPTOS_ECN_CE = 0x3,IPTOS_ECN_MASK = 0x3,IPTOS_PREC_NETCONTROL = 0xE0,IPTOS_PREC_INTERNETCONTROL = 0xC0,IPTOS_PREC_CRITIC_ECP = 0xA0,IPTOS_PREC_FLASHOVERRIDE = 0x80,IPTOS_PREC_FLASH = 0x60,IPTOS_PREC_IMMEDIATE = 0x40,IPTOS_PREC_PRIORITY = 0x20,IPTOS_PREC_ROUTINE = 0x0,};
enum MACRO_IP_FW {IP_FW_VERSION_NONE = 0,IP_FW_VERSION_0 = 10,IP_FW_VERSION_1 = 20,IP_FW_VERSION_2 = 30,IP_FW_CURRENT_API_VERSION = 30,};
enum MACRO_IP_RF {IP_RF = 0x8000,IP_DF = 0x4000,IP_MF = 0x2000,IP_OFFMASK = 0x1FFF,IP_MAXPACKET = 0xFFFF,};
enum MACRO_KAUTH {KAUTH_GUID_SIZE = 16,};
enum MACRO_LDAPS {LDAPS_PORT = 636,};
enum MACRO_LEAVE {LEAVE_INVITE = 0,};
enum MACRO_LFLOW {LFLOW_OFF = 0,LFLOW_ON = 1,LFLOW_RESTART_ANY = 2,LFLOW_RESTART_XON = 3,};
enum MACRO_LLONG {LLONG_MIN = 0x8000000000000000,};
enum MACRO_LOCAL {LOCAL_PEERCRED = 0x1,};
enum MACRO_LOCKD {LOCKD_MSG_VERSION = 3,LOCKD_MSG_BLOCK = 1,LOCKD_MSG_TEST = 2,LOCKD_MSG_NFSV3 = 4,LOCKD_MSG_CANCEL = 8,LOCKD_MSG_DENIED_GRACE = 16,LOCKD_MSG_RECLAIM = 32,LOCKD_MSG_TCP = 64,LOCKD_ANS_VERSION = 2,LOCKD_ANS_GRANTED = 1,LOCKD_ANS_LOCK_INFO = 2,LOCKD_ANS_LOCK_EXCL = 4,LOCKD_ANS_DENIED_GRACE = 8,LOCKD_NOTIFY_VERSION = 1,};
enum MACRO_L_SET {L_SET = 0,L_INCR = 1,L_XTND = 2,};
enum MACRO_MAGIC {MAGIC = 0x11A,};
enum MACRO_MATCH {MATCH_FAILED = -1,MATCH_SUCCEEDED = 0,};
enum MACRO_MATTR {MATTR_CACHE = 1,MATTR_MIGRATE = 2,MATTR_REPLICATE = 4,MATTR_VAL_OFF = 0,MATTR_VAL_ON = 1,MATTR_VAL_GET = 2,MATTR_VAL_CACHE_FLUSH = 6,MATTR_VAL_DCACHE_FLUSH = 7,MATTR_VAL_ICACHE_FLUSH = 8,MATTR_VAL_CACHE_SYNC = 9,MATTR_VAL_GET_INFO = 10,};
enum MACRO_MAXNS {MAXNS = 3,};
enum MACRO_MCAST {MCAST_JOIN_GROUP = 80,MCAST_LEAVE_GROUP = 81,MCAST_JOIN_SOURCE_GROUP = 82,MCAST_LEAVE_SOURCE_GROUP = 83,MCAST_BLOCK_SOURCE = 84,MCAST_UNBLOCK_SOURCE = 85,};
enum MACRO_MECAB {MECAB_NOR_NODE = 0,MECAB_UNK_NODE = 1,MECAB_BOS_NODE = 2,MECAB_EOS_NODE = 3,MECAB_PRE_NODE = 4,MECAB_USR_DIC = 1,MECAB_SYS_DIC = 0,MECAB_UNK_DIC = 2,};
enum MACRO_MLDV2 {MLDV2_LISTENER_REPORT = 143,};
enum MACRO_MPOOL {MPOOL_DIRTY = 0x1,MPOOL_PINNED = 0x2,};
enum MACRO_NETDB {NETDB_INTERNAL = -1,NETDB_SUCCESS = 0,};
enum MACRO_NFSRV {NFSRV_MAXDATA = 65536,};
enum MACRO_NODEV {NODEV = -1,};
enum MACRO_NOSTR {NOSTR = 55,};
enum MACRO_NTSID {NTSID_MAX_AUTHORITIES = 16,};
enum MACRO_NZERO {NZERO = 20,};
enum MACRO_OBJID {OBJID = 6,};
enum MACRO_OFLOW {CDSR_OFLOW = 0x80000,CCAR_OFLOW = 0x100000,};
enum MACRO_OPOST {OPOST = 0x1,ONLCR = 0x2,OXTABS = 0x4,ONOEOT = 0x8,OCRNL = 0x10,ONOCR = 0x20,ONLRET = 0x40,OFILL = 0x80,NLDLY = 0x300,TABDLY = 0xC04,CRDLY = 0x3000,FFDLY = 0x4000,BSDLY = 0x8000,VTDLY = 0x10000,OFDEL = 0x20000,};
enum MACRO_PFKEY {PFKEY_SOFT_LIFETIME_RATE = 80,};
enum MACRO_PKCS5 {PKCS5_SALT_LEN = 8,PKCS5_DEFAULT_ITER = 2048,};
enum MACRO_PKCS7 {PKCS7_S_HEADER = 0,PKCS7_S_BODY = 1,PKCS7_S_TAIL = 2,PKCS7_OP_SET_DETACHED_SIGNATURE = 1,PKCS7_OP_GET_DETACHED_SIGNATURE = 2,PKCS7_TEXT = 1,PKCS7_NOCERTS = 2,PKCS7_NOSIGS = 4,PKCS7_NOCHAIN = 8,PKCS7_NOINTERN = 16,PKCS7_NOVERIFY = 32,PKCS7_DETACHED = 64,PKCS7_BINARY = 128,PKCS7_NOATTR = 256,PKCS7_NOSMIMECAP = 512,PKCS7_NOOLDMIMETYPE = 1024,PKCS7_CRLFEOL = 2048,PKCS7_STREAM = 4096,PKCS7_NOCRL = 8192,};
enum MACRO_PKCS8 {PKCS8_OK = 0,PKCS8_NO_OCTET = 1,PKCS8_EMBEDDED_PARAM = 2,PKCS8_NS_DB = 3,};
enum MACRO_PLOCK {PLOCK = 36,};
enum MACRO_POSIX {POSIX_MADV_NORMAL = 0,POSIX_MADV_RANDOM = 1,POSIX_MADV_SEQUENTIAL = 2,POSIX_MADV_WILLNEED = 3,POSIX_MADV_DONTNEED = 4,};
enum MACRO_PPNUM {PPNUM_MAX = 4294967295,};
enum MACRO_PROTO {PROTO_UNDEF = -1,};
enum MACRO_PSOCK {PSOCK = 24,PWAIT = 32,};
enum MACRO_PUSER {PUSER = 50,};
enum MACRO_PZERO {PZERO = 22,};
enum MACRO_RESVD {RESVD_SET = 31,};
enum MACRO_RSA_3 {RSA_3 = 0x3,RSA_F4 = 0x10001,RSA_METHOD_FLAG_NO_CHECK = 0x1,RSA_FLAG_CACHE_PUBLIC = 0x2,RSA_FLAG_CACHE_PRIVATE = 0x4,RSA_FLAG_BLINDING = 0x8,RSA_FLAG_THREAD_SAFE = 0x10,RSA_FLAG_EXT_PKEY = 0x20,RSA_FLAG_SIGN_VER = 0x40,RSA_FLAG_NO_BLINDING = 0x80,RSA_FLAG_NO_CONSTTIME = 0x100,RSA_FLAG_NO_EXP_CONSTTIME = 0x100,RSA_PKCS1_PADDING = 0x1,RSA_SSLV23_PADDING = 0x2,RSA_NO_PADDING = 0x3,RSA_PKCS1_OAEP_PADDING = 0x4,RSA_X931_PADDING = 0x5,RSA_PKCS1_PADDING_SIZE = 0xB,RSA_F_FIPS_RSA_SIGN = 0x8C,RSA_F_FIPS_RSA_VERIFY = 0x8D,RSA_F_MEMORY_LOCK = 0x64,RSA_F_RSA_BUILTIN_KEYGEN = 0x81,RSA_F_RSA_CHECK_KEY = 0x7B,RSA_F_RSA_EAY_PRIVATE_DECRYPT = 0x65,RSA_F_RSA_EAY_PRIVATE_ENCRYPT = 0x66,RSA_F_RSA_EAY_PUBLIC_DECRYPT = 0x67,RSA_F_RSA_EAY_PUBLIC_ENCRYPT = 0x68,RSA_F_RSA_GENERATE_KEY = 0x69,RSA_F_RSA_MEMORY_LOCK = 0x82,RSA_F_RSA_NEW_METHOD = 0x6A,RSA_F_RSA_NULL = 0x7C,RSA_F_RSA_NULL_MOD_EXP = 0x83,RSA_F_RSA_NULL_PRIVATE_DECRYPT = 0x84,RSA_F_RSA_NULL_PRIVATE_ENCRYPT = 0x85,RSA_F_RSA_NULL_PUBLIC_DECRYPT = 0x86,RSA_F_RSA_NULL_PUBLIC_ENCRYPT = 0x87,RSA_F_RSA_PADDING_ADD_NONE = 0x6B,RSA_F_RSA_PADDING_ADD_PKCS1_OAEP = 0x79,RSA_F_RSA_PADDING_ADD_PKCS1_PSS = 0x7D,RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_1 = 0x6C,RSA_F_RSA_PADDING_ADD_PKCS1_TYPE_2 = 0x6D,RSA_F_RSA_PADDING_ADD_SSLV23 = 0x6E,RSA_F_RSA_PADDING_ADD_X931 = 0x7F,RSA_F_RSA_PADDING_CHECK_NONE = 0x6F,RSA_F_RSA_PADDING_CHECK_PKCS1_OAEP = 0x7A,RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_1 = 0x70,RSA_F_RSA_PADDING_CHECK_PKCS1_TYPE_2 = 0x71,RSA_F_RSA_PADDING_CHECK_SSLV23 = 0x72,RSA_F_RSA_PADDING_CHECK_X931 = 0x80,RSA_F_RSA_PRINT = 0x73,RSA_F_RSA_PRINT_FP = 0x74,RSA_F_RSA_PRIVATE_ENCRYPT = 0x89,RSA_F_RSA_PUBLIC_DECRYPT = 0x8A,RSA_F_RSA_SETUP_BLINDING = 0x88,RSA_F_RSA_SET_DEFAULT_METHOD = 0x8B,RSA_F_RSA_SET_METHOD = 0x8E,RSA_F_RSA_SIGN = 0x75,RSA_F_RSA_SIGN_ASN1_OCTET_STRING = 0x76,RSA_F_RSA_VERIFY = 0x77,RSA_F_RSA_VERIFY_ASN1_OCTET_STRING = 0x78,RSA_F_RSA_VERIFY_PKCS1_PSS = 0x7E,RSA_R_ALGORITHM_MISMATCH = 0x64,RSA_R_BAD_E_VALUE = 0x65,RSA_R_BAD_FIXED_HEADER_DECRYPT = 0x66,RSA_R_BAD_PAD_BYTE_COUNT = 0x67,RSA_R_BAD_SIGNATURE = 0x68,RSA_R_BLOCK_TYPE_IS_NOT_01 = 0x6A,RSA_R_BLOCK_TYPE_IS_NOT_02 = 0x6B,RSA_R_DATA_GREATER_THAN_MOD_LEN = 0x6C,RSA_R_DATA_TOO_LARGE = 0x6D,RSA_R_DATA_TOO_LARGE_FOR_KEY_SIZE = 0x6E,RSA_R_DATA_TOO_LARGE_FOR_MODULUS = 0x84,RSA_R_DATA_TOO_SMALL = 0x6F,RSA_R_DATA_TOO_SMALL_FOR_KEY_SIZE = 0x7A,RSA_R_DIGEST_TOO_BIG_FOR_RSA_KEY = 0x70,RSA_R_DMP1_NOT_CONGRUENT_TO_D = 0x7C,RSA_R_DMQ1_NOT_CONGRUENT_TO_D = 0x7D,RSA_R_D_E_NOT_CONGRUENT_TO_1 = 0x7B,RSA_R_FIRST_OCTET_INVALID = 0x85,RSA_R_INVALID_HEADER = 0x89,RSA_R_INVALID_MESSAGE_LENGTH = 0x83,RSA_R_INVALID_PADDING = 0x8A,RSA_R_INVALID_TRAILER = 0x8B,RSA_R_IQMP_NOT_INVERSE_OF_Q = 0x7E,RSA_R_KEY_SIZE_TOO_SMALL = 0x78,RSA_R_LAST_OCTET_INVALID = 0x86,RSA_R_MODULUS_TOO_LARGE = 0x69,RSA_R_NON_FIPS_METHOD = 0x8D,RSA_R_NO_PUBLIC_EXPONENT = 0x8C,RSA_R_NULL_BEFORE_BLOCK_MISSING = 0x71,RSA_R_N_DOES_NOT_EQUAL_P_Q = 0x7F,RSA_R_OAEP_DECODING_ERROR = 0x79,RSA_R_OPERATION_NOT_ALLOWED_IN_FIPS_MODE = 0x8E,RSA_R_PADDING_CHECK_FAILED = 0x72,RSA_R_P_NOT_PRIME = 0x80,RSA_R_Q_NOT_PRIME = 0x81,RSA_R_RSA_OPERATIONS_NOT_SUPPORTED = 0x82,RSA_R_SLEN_CHECK_FAILED = 0x88,RSA_R_SLEN_RECOVERY_FAILED = 0x87,RSA_R_SSLV3_ROLLBACK_ATTACK = 0x73,RSA_R_THE_ASN1_OBJECT_IDENTIFIER_IS_NOT_KNOWN_FOR_THIS_MD = 0x74,RSA_R_UNKNOWN_ALGORITHM_TYPE = 0x75,RSA_R_UNKNOWN_PADDING_TYPE = 0x76,RSA_R_WRONG_SIGNATURE_LENGTH = 0x77,};
enum MACRO_RSTAT {RSTAT_CPUSTATES = 4,RSTAT_DK_NDRIVE = 4,};
enum MACRO_R_ABS {R_ABS = 0,R_SCATTERED = 2147483648,};
enum MACRO_R_DUP {R_DUP = 0x1,};
enum MACRO_SCHAR {SCHAR_MAX = 127,SCHAR_MIN = -128,};
enum MACRO_SCHED {SCHED_OTHER = 1,SCHED_FIFO = 4,SCHED_RR = 2,};
enum MACRO_SCOPE {SCOPE_DELIMITER = 37,};
enum MACRO_SEM_A {SEM_A = 0x80,SEM_R = 0x100,SEM_VALUE_MAX = 0x7FFF,SEM_FAILED = 0xFFFFFFFFFFFFFFFF,};
enum MACRO_SHM_R {SHM_R = 256,SHM_W = 128,};
enum MACRO_SIGEV {SIGEV_NONE = 0,SIGEV_SIGNAL = 1,SIGEV_THREAD = 3,};
enum MACRO_SLAPI {SLAPI_STR2ENTRY_REMOVEDUPVALS = 1,SLAPI_STR2ENTRY_ADDRDNVALS = 2,SLAPI_STR2ENTRY_BIGENTRY = 4,SLAPI_STR2ENTRY_TOMBSTONE_CHECK = 8,SLAPI_STR2ENTRY_IGNORE_STATE = 16,SLAPI_STR2ENTRY_INCLUDE_VERSION_STR = 32,SLAPI_STR2ENTRY_EXPAND_OBJECTCLASSES = 64,SLAPI_STR2ENTRY_NOT_WELL_FORMED_LDIF = 128,SLAPI_TYPE_CMP_EXACT = 0,SLAPI_TYPE_CMP_BASE = 1,SLAPI_TYPE_CMP_SUBTYPE = 2,SLAPI_OPERATION_BIND = 1,SLAPI_OPERATION_UNBIND = 2,SLAPI_OPERATION_SEARCH = 4,SLAPI_OPERATION_MODIFY = 8,SLAPI_OPERATION_ADD = 16,SLAPI_OPERATION_DELETE = 32,SLAPI_OPERATION_MODDN = 64,SLAPI_OPERATION_MODRDN = 64,SLAPI_OPERATION_COMPARE = 128,SLAPI_OPERATION_ABANDON = 256,SLAPI_OPERATION_EXTENDED = 512,SLAPI_OPERATION_ANY = 4294967295,SLAPI_OPERATION_NONE = 0,SLAPI_FILTER_SCAN_STOP = -1,SLAPI_FILTER_SCAN_ERROR = -2,SLAPI_FILTER_SCAN_NOMORE = 0,SLAPI_FILTER_SCAN_CONTINUE = 1,SLAPI_FILTER_UNKNOWN_FILTER_TYPE = 2,SLAPI_OP_FLAG_NEVER_CHAIN = 2048,SLAPI_ATTR_FLAG_SINGLE = 1,SLAPI_ATTR_FLAG_OPATTR = 2,SLAPI_ATTR_FLAG_READONLY = 4,SLAPI_ATTR_FLAG_STD_ATTR = 4,SLAPI_ATTR_FLAG_OBSOLETE = 64,SLAPI_ATTR_FLAG_COLLECTIVE = 128,SLAPI_ATTR_FLAG_NOUSERMOD = 256,SLAPI_BACKEND_FLAG_NOLASTMOD = 1,SLAPI_BACKEND_FLAG_NO_SCHEMA_CHECK = 2,SLAPI_BACKEND_FLAG_GLUE_INSTANCE = 16,SLAPI_BACKEND_FLAG_GLUE_SUBORDINATE = 32,SLAPI_BACKEND_FLAG_GLUE_LINKED = 64,SLAPI_BACKEND_FLAG_OVERLAY = 128,SLAPI_BACKEND_FLAG_GLOBAL_OVERLAY = 256,SLAPI_BACKEND_FLAG_SHADOW = 32768,SLAPI_BACKEND_FLAG_SYNC_SHADOW = 4096,SLAPI_BACKEND_FLAG_SLURP_SHADOW = 8192,SLAPI_ACL_COMPARE = 1,SLAPI_ACL_SEARCH = 2,SLAPI_ACL_READ = 4,SLAPI_ACL_WRITE = 8,SLAPI_ACL_DELETE = 16,SLAPI_ACL_ADD = 32,SLAPI_ACL_SELF = 64,SLAPI_ACL_PROXY = 128,SLAPI_ACL_ALL = 127,SLAPI_PLUGIN_DATABASE = 1,SLAPI_PLUGIN_EXTENDEDOP = 2,SLAPI_PLUGIN_PREOPERATION = 3,SLAPI_PLUGIN_POSTOPERATION = 4,SLAPI_PLUGIN_MATCHINGRULE = 5,SLAPI_PLUGIN_SYNTAX = 6,SLAPI_PLUGIN_AUDIT = 7,SLAPI_BACKEND = 130,SLAPI_CONNECTION = 131,SLAPI_OPERATION = 132,SLAPI_REQUESTOR_ISROOT = 133,SLAPI_BE_MONITORDN = 134,SLAPI_BE_TYPE = 135,SLAPI_BE_READONLY = 136,SLAPI_BE_LASTMOD = 137,SLAPI_CONN_ID = 139,SLAPI_OPINITIATED_TIME = 140,SLAPI_REQUESTOR_DN = 141,SLAPI_IS_REPLICATED_OPERATION = 142,SLAPI_REQUESTOR_ISUPDATEDN = 142,SLAPI_CONN_DN = 143,SLAPI_CONN_AUTHTYPE = 144,SLAPI_CONN_CLIENTIP = 145,SLAPI_CONN_SERVERIP = 146,SLAPI_X_CONN_CLIENTPATH = 1300,SLAPI_X_CONN_SERVERPATH = 1301,SLAPI_X_CONN_IS_UDP = 1302,SLAPI_X_CONN_SSF = 1303,SLAPI_X_CONN_SASL_CONTEXT = 1304,SLAPI_X_OPERATION_DELETE_GLUE_PARENT = 1305,SLAPI_X_RELAX = 1306,SLAPI_X_MANAGEDIT = 1306,SLAPI_X_OPERATION_NO_SCHEMA_CHECK = 1307,SLAPI_X_ADD_STRUCTURAL_CLASS = 1308,SLAPI_X_OPERATION_NO_SUBORDINATE_GLUE = 1309,SLAPI_PLUGIN = 3,SLAPI_PLUGIN_PRIVATE = 4,SLAPI_PLUGIN_TYPE = 5,SLAPI_PLUGIN_ARGV = 6,SLAPI_PLUGIN_ARGC = 7,SLAPI_PLUGIN_VERSION = 8,SLAPI_PLUGIN_OPRETURN = 9,SLAPI_PLUGIN_OBJECT = 10,SLAPI_PLUGIN_DESTROY_FN = 11,SLAPI_PLUGIN_DESCRIPTION = 12,SLAPI_PLUGIN_IDENTITY = 13,SLAPI_PLUGIN_INTOP_RESULT = 15,SLAPI_PLUGIN_INTOP_SEARCH_ENTRIES = 16,SLAPI_PLUGIN_INTOP_SEARCH_REFERRALS = 17,SLAPI_PARENT_TXN = 190,SLAPI_TXN = 191,SLAPI_PLUGIN_DB_BIND_FN = 200,SLAPI_PLUGIN_DB_UNBIND_FN = 201,SLAPI_PLUGIN_DB_SEARCH_FN = 202,SLAPI_PLUGIN_DB_COMPARE_FN = 203,SLAPI_PLUGIN_DB_MODIFY_FN = 204,SLAPI_PLUGIN_DB_MODRDN_FN = 205,SLAPI_PLUGIN_DB_ADD_FN = 206,SLAPI_PLUGIN_DB_DELETE_FN = 207,SLAPI_PLUGIN_DB_ABANDON_FN = 208,SLAPI_PLUGIN_DB_CONFIG_FN = 209,SLAPI_PLUGIN_CLOSE_FN = 210,SLAPI_PLUGIN_DB_FLUSH_FN = 211,SLAPI_PLUGIN_START_FN = 212,SLAPI_PLUGIN_DB_SEQ_FN = 213,SLAPI_PLUGIN_DB_ENTRY_FN = 214,SLAPI_PLUGIN_DB_REFERRAL_FN = 215,SLAPI_PLUGIN_DB_RESULT_FN = 216,SLAPI_PLUGIN_DB_LDIF2DB_FN = 217,SLAPI_PLUGIN_DB_DB2LDIF_FN = 218,SLAPI_PLUGIN_DB_BEGIN_FN = 219,SLAPI_PLUGIN_DB_COMMIT_FN = 220,SLAPI_PLUGIN_DB_ABORT_FN = 221,SLAPI_PLUGIN_DB_ARCHIVE2DB_FN = 222,SLAPI_PLUGIN_DB_DB2ARCHIVE_FN = 223,SLAPI_PLUGIN_DB_NEXT_SEARCH_ENTRY_FN = 224,SLAPI_PLUGIN_DB_FREE_RESULT_SET_FN = 225,SLAPI_PLUGIN_DB_SIZE_FN = 226,SLAPI_PLUGIN_DB_TEST_FN = 227,SLAPI_PLUGIN_EXT_OP_FN = 300,SLAPI_PLUGIN_EXT_OP_OIDLIST = 301,SLAPI_PLUGIN_PRE_BIND_FN = 401,SLAPI_PLUGIN_PRE_UNBIND_FN = 402,SLAPI_PLUGIN_PRE_SEARCH_FN = 403,SLAPI_PLUGIN_PRE_COMPARE_FN = 404,SLAPI_PLUGIN_PRE_MODIFY_FN = 405,SLAPI_PLUGIN_PRE_MODRDN_FN = 406,SLAPI_PLUGIN_PRE_ADD_FN = 407,SLAPI_PLUGIN_PRE_DELETE_FN = 408,SLAPI_PLUGIN_PRE_ABANDON_FN = 409,SLAPI_PLUGIN_PRE_ENTRY_FN = 410,SLAPI_PLUGIN_PRE_REFERRAL_FN = 411,SLAPI_PLUGIN_PRE_RESULT_FN = 412,SLAPI_PLUGIN_INTERNAL_PRE_ADD_FN = 420,SLAPI_PLUGIN_INTERNAL_PRE_MODIFY_FN = 421,SLAPI_PLUGIN_INTERNAL_PRE_MODRDN_FN = 422,SLAPI_PLUGIN_INTERNAL_PRE_DELETE_FN = 423,SLAPI_PLUGIN_BE_PRE_ADD_FN = 450,SLAPI_PLUGIN_BE_PRE_MODIFY_FN = 451,SLAPI_PLUGIN_BE_PRE_MODRDN_FN = 452,SLAPI_PLUGIN_BE_PRE_DELETE_FN = 453,SLAPI_PLUGIN_POST_BIND_FN = 501,SLAPI_PLUGIN_POST_UNBIND_FN = 502,SLAPI_PLUGIN_POST_SEARCH_FN = 503,SLAPI_PLUGIN_POST_COMPARE_FN = 504,SLAPI_PLUGIN_POST_MODIFY_FN = 505,SLAPI_PLUGIN_POST_MODRDN_FN = 506,SLAPI_PLUGIN_POST_ADD_FN = 507,SLAPI_PLUGIN_POST_DELETE_FN = 508,SLAPI_PLUGIN_POST_ABANDON_FN = 509,SLAPI_PLUGIN_POST_ENTRY_FN = 510,SLAPI_PLUGIN_POST_REFERRAL_FN = 511,SLAPI_PLUGIN_POST_RESULT_FN = 512,SLAPI_PLUGIN_INTERNAL_POST_ADD_FN = 520,SLAPI_PLUGIN_INTERNAL_POST_MODIFY_FN = 521,SLAPI_PLUGIN_INTERNAL_POST_MODRDN_FN = 522,SLAPI_PLUGIN_INTERNAL_POST_DELETE_FN = 523,SLAPI_PLUGIN_BE_POST_ADD_FN = 550,SLAPI_PLUGIN_BE_POST_MODIFY_FN = 551,SLAPI_PLUGIN_BE_POST_MODRDN_FN = 552,SLAPI_PLUGIN_BE_POST_DELETE_FN = 553,SLAPI_OPERATION_TYPE = 590,SLAPI_OPERATION_MSGID = 591,SLAPI_PLUGIN_MR_FILTER_CREATE_FN = 600,SLAPI_PLUGIN_MR_INDEXER_CREATE_FN = 601,SLAPI_PLUGIN_MR_FILTER_MATCH_FN = 602,SLAPI_PLUGIN_MR_FILTER_INDEX_FN = 603,SLAPI_PLUGIN_MR_FILTER_RESET_FN = 604,SLAPI_PLUGIN_MR_INDEX_FN = 605,SLAPI_PLUGIN_MR_OID = 610,SLAPI_PLUGIN_MR_TYPE = 611,SLAPI_PLUGIN_MR_VALUE = 612,SLAPI_PLUGIN_MR_VALUES = 613,SLAPI_PLUGIN_MR_KEYS = 614,SLAPI_PLUGIN_MR_FILTER_REUSABLE = 615,SLAPI_PLUGIN_MR_QUERY_OPERATOR = 616,SLAPI_PLUGIN_MR_USAGE = 617,SLAPI_MATCHINGRULE_NAME = 1,SLAPI_MATCHINGRULE_OID = 2,SLAPI_MATCHINGRULE_DESC = 3,SLAPI_MATCHINGRULE_SYNTAX = 4,SLAPI_MATCHINGRULE_OBSOLETE = 5,SLAPI_OP_LESS = 1,SLAPI_OP_LESS_OR_EQUAL = 2,SLAPI_OP_EQUAL = 3,SLAPI_OP_GREATER_OR_EQUAL = 4,SLAPI_OP_GREATER = 5,SLAPI_OP_SUBSTRING = 6,SLAPI_PLUGIN_MR_USAGE_INDEX = 0,SLAPI_PLUGIN_MR_USAGE_SORT = 1,SLAPI_PLUGIN_SYNTAX_FILTER_AVA = 700,SLAPI_PLUGIN_SYNTAX_FILTER_SUB = 701,SLAPI_PLUGIN_SYNTAX_VALUES2KEYS = 702,SLAPI_PLUGIN_SYNTAX_ASSERTION2KEYS_AVA = 703,SLAPI_PLUGIN_SYNTAX_ASSERTION2KEYS_SUB = 704,SLAPI_PLUGIN_SYNTAX_NAMES = 705,SLAPI_PLUGIN_SYNTAX_OID = 706,SLAPI_PLUGIN_SYNTAX_FLAGS = 707,SLAPI_PLUGIN_SYNTAX_COMPARE = 708,SLAPI_PLUGIN_SYNTAX_FLAG_ORKEYS = 1,SLAPI_PLUGIN_SYNTAX_FLAG_ORDERING = 2,SLAPI_PLUGIN_ACL_INIT = 730,SLAPI_PLUGIN_ACL_SYNTAX_CHECK = 731,SLAPI_PLUGIN_ACL_ALLOW_ACCESS = 732,SLAPI_PLUGIN_ACL_MODS_ALLOWED = 733,SLAPI_PLUGIN_ACL_MODS_UPDATE = 734,SLAPI_OPERATION_AUTHTYPE = 741,SLAPI_OPERATION_ID = 742,SLAPI_CONN_CERT = 743,SLAPI_CONN_AUTHMETHOD = 746,SLAPI_IS_INTERNAL_OPERATION = 748,SLAPI_RESULT_CODE = 881,SLAPI_RESULT_TEXT = 882,SLAPI_RESULT_MATCHED = 883,SLAPI_MANAGEDSAIT = 1000,SLAPI_PLUGIN_AUDIT_DATA = 1100,SLAPI_PLUGIN_AUDIT_FN = 1101,SLAPI_X_PLUGIN_PRE_GROUP_FN = 1202,SLAPI_X_PLUGIN_POST_GROUP_FN = 1203,SLAPI_X_GROUP_ENTRY = 1250,SLAPI_X_GROUP_ATTRIBUTE = 1251,SLAPI_X_GROUP_OPERATION_DN = 1252,SLAPI_X_GROUP_TARGET_ENTRY = 1253,SLAPI_PLUGIN_INTERNAL_PRE_BIND_FN = 1260,SLAPI_PLUGIN_INTERNAL_PRE_UNBIND_FN = 1261,SLAPI_PLUGIN_INTERNAL_PRE_SEARCH_FN = 1262,SLAPI_PLUGIN_INTERNAL_PRE_COMPARE_FN = 1263,SLAPI_PLUGIN_INTERNAL_PRE_ABANDON_FN = 1264,SLAPI_PLUGIN_INTERNAL_POST_BIND_FN = 1270,SLAPI_PLUGIN_INTERNAL_POST_UNBIND_FN = 1271,SLAPI_PLUGIN_INTERNAL_POST_SEARCH_FN = 1272,SLAPI_PLUGIN_INTERNAL_POST_COMPARE_FN = 1273,SLAPI_PLUGIN_INTERNAL_POST_ABANDON_FN = 1274,SLAPI_CONFIG_FILENAME = 40,SLAPI_CONFIG_LINENO = 41,SLAPI_CONFIG_ARGC = 42,SLAPI_CONFIG_ARGV = 43,SLAPI_TARGET_ADDRESS = 48,SLAPI_TARGET_UNIQUEID = 49,SLAPI_TARGET_DN = 50,SLAPI_REQCONTROLS = 51,SLAPI_RESCONTROLS = 55,SLAPI_ADD_RESCONTROL = 56,SLAPI_CONTROLS_ARG = 58,SLAPI_ADD_TARGET = 50,SLAPI_ADD_ENTRY = 60,SLAPI_ADD_EXISTING_DN_ENTRY = 61,SLAPI_ADD_PARENT_ENTRY = 62,SLAPI_ADD_PARENT_UNIQUEID = 63,SLAPI_ADD_EXISTING_UNIQUEID_ENTRY = 64,SLAPI_BIND_TARGET = 50,SLAPI_BIND_METHOD = 70,SLAPI_BIND_CREDENTIALS = 71,SLAPI_BIND_SASLMECHANISM = 72,SLAPI_BIND_RET_SASLCREDS = 73,SLAPI_COMPARE_TARGET = 50,SLAPI_COMPARE_TYPE = 80,SLAPI_COMPARE_VALUE = 81,SLAPI_DELETE_TARGET = 50,SLAPI_DELETE_EXISTING_ENTRY = 61,SLAPI_MODIFY_TARGET = 50,SLAPI_MODIFY_MODS = 90,SLAPI_MODIFY_EXISTING_ENTRY = 61,SLAPI_MODRDN_TARGET = 50,SLAPI_MODRDN_NEWRDN = 100,SLAPI_MODRDN_DELOLDRDN = 101,SLAPI_MODRDN_NEWSUPERIOR = 102,SLAPI_MODRDN_EXISTING_ENTRY = 61,SLAPI_MODRDN_PARENT_ENTRY = 104,SLAPI_MODRDN_NEWPARENT_ENTRY = 105,SLAPI_MODRDN_TARGET_ENTRY = 106,SLAPI_MODRDN_NEWSUPERIOR_ADDRESS = 107,SLAPI_SEARCH_TARGET = 50,SLAPI_SEARCH_SCOPE = 110,SLAPI_SEARCH_DEREF = 111,SLAPI_SEARCH_SIZELIMIT = 112,SLAPI_SEARCH_TIMELIMIT = 113,SLAPI_SEARCH_FILTER = 114,SLAPI_SEARCH_STRFILTER = 115,SLAPI_SEARCH_ATTRS = 116,SLAPI_SEARCH_ATTRSONLY = 117,SLAPI_ABANDON_MSGID = 120,SLAPI_EXT_OP_REQ_OID = 160,SLAPI_EXT_OP_REQ_VALUE = 161,SLAPI_EXT_OP_RET_OID = 162,SLAPI_EXT_OP_RET_VALUE = 163,SLAPI_PLUGIN_EXTENDED_SENT_RESULT = -1,SLAPI_FAIL_DISKFULL = -2,SLAPI_FAIL_GENERAL = -1,SLAPI_PLUGIN_EXTENDED_NOT_HANDLED = -2,SLAPI_BIND_SUCCESS = 0,SLAPI_BIND_FAIL = 2,SLAPI_BIND_ANONYMOUS = 3,SLAPI_SEARCH_RESULT_SET = 193,SLAPI_SEARCH_RESULT_ENTRY = 194,SLAPI_NENTRIES = 195,SLAPI_SEARCH_REFERRALS = 196,};
enum MACRO_SMIME {SMIME_OLDMIME = 0x400,SMIME_CRLFEOL = 0x800,SMIME_STREAM = 0x1000,};
enum MACRO_SNMPD {SNMPD_CALLBACK_ACM_CHECK = 0,SNMPD_CALLBACK_REGISTER_OID = 1,SNMPD_CALLBACK_UNREGISTER_OID = 2,SNMPD_CALLBACK_REG_SYSOR = 3,SNMPD_CALLBACK_UNREG_SYSOR = 4,SNMPD_CALLBACK_ACM_CHECK_INITIAL = 5,SNMPD_CALLBACK_SEND_TRAP1 = 6,SNMPD_CALLBACK_SEND_TRAP2 = 7,SNMPD_CALLBACK_REGISTER_NOTIFICATIONS = 8,SNMPD_CALLBACK_PRE_UPDATE_CONFIG = 9,SNMPD_CALLBACK_INDEX_START = 10,SNMPD_CALLBACK_INDEX_STOP = 11,SNMPD_CALLBACK_ACM_CHECK_SUBTREE = 12,SNMPD_CALLBACK_REQ_REG_SYSOR = 13,SNMPD_CALLBACK_REQ_UNREG_SYSOR = 14,SNMPD_CALLBACK_REQ_UNREG_SYSOR_SESS = 15,};
enum MACRO_SONPX {SONPX_SETOPTSHUT = 0x1,};
enum MACRO_SSIZE {SSIZE_MAX = 9223372036854775807,};
enum MACRO_STACK {STACK_INCR = 4,};
enum MACRO_STATS {NETSNMP_STAT_MAX_STATS = 57,MAX_STATS = 57,};
enum MACRO_STORE {STORE_CTRL_SET_DIRECTORY = 0x1,STORE_CTRL_SET_FILE = 0x2,STORE_CTRL_SET_CONF_FILE = 0x3,STORE_CTRL_SET_CONF_SECTION = 0x4,STORE_F_MEM_DELETE = 0x86,STORE_F_MEM_GENERATE = 0x87,STORE_F_MEM_LIST_END = 0xA8,STORE_F_MEM_LIST_NEXT = 0x88,STORE_F_MEM_LIST_START = 0x89,STORE_F_MEM_MODIFY = 0xA9,STORE_F_MEM_STORE = 0x8A,STORE_F_STORE_ATTR_INFO_GET0_CSTR = 0x8B,STORE_F_STORE_ATTR_INFO_GET0_DN = 0x8C,STORE_F_STORE_ATTR_INFO_GET0_NUMBER = 0x8D,STORE_F_STORE_ATTR_INFO_GET0_SHA1STR = 0x8E,STORE_F_STORE_ATTR_INFO_MODIFY_CSTR = 0x8F,STORE_F_STORE_ATTR_INFO_MODIFY_DN = 0x90,STORE_F_STORE_ATTR_INFO_MODIFY_NUMBER = 0x91,STORE_F_STORE_ATTR_INFO_MODIFY_SHA1STR = 0x92,STORE_F_STORE_ATTR_INFO_SET_CSTR = 0x93,STORE_F_STORE_ATTR_INFO_SET_DN = 0x94,STORE_F_STORE_ATTR_INFO_SET_NUMBER = 0x95,STORE_F_STORE_ATTR_INFO_SET_SHA1STR = 0x96,STORE_F_STORE_CERTIFICATE = 0xAA,STORE_F_STORE_CTRL = 0xA1,STORE_F_STORE_DELETE_ARBITRARY = 0x9E,STORE_F_STORE_DELETE_CERTIFICATE = 0x66,STORE_F_STORE_DELETE_CRL = 0x67,STORE_F_STORE_DELETE_NUMBER = 0x68,STORE_F_STORE_DELETE_PRIVATE_KEY = 0x69,STORE_F_STORE_DELETE_PUBLIC_KEY = 0x6A,STORE_F_STORE_GENERATE_CRL = 0x6B,STORE_F_STORE_GENERATE_KEY = 0x6C,STORE_F_STORE_GET_ARBITRARY = 0x9F,STORE_F_STORE_GET_CERTIFICATE = 0x6D,STORE_F_STORE_GET_CRL = 0x6E,STORE_F_STORE_GET_NUMBER = 0x6F,STORE_F_STORE_GET_PRIVATE_KEY = 0x70,STORE_F_STORE_GET_PUBLIC_KEY = 0x71,STORE_F_STORE_LIST_CERTIFICATE_END = 0x72,STORE_F_STORE_LIST_CERTIFICATE_ENDP = 0x99,STORE_F_STORE_LIST_CERTIFICATE_NEXT = 0x73,STORE_F_STORE_LIST_CERTIFICATE_START = 0x74,STORE_F_STORE_LIST_CRL_END = 0x75,STORE_F_STORE_LIST_CRL_ENDP = 0x9A,STORE_F_STORE_LIST_CRL_NEXT = 0x76,STORE_F_STORE_LIST_CRL_START = 0x77,STORE_F_STORE_LIST_PRIVATE_KEY_END = 0x78,STORE_F_STORE_LIST_PRIVATE_KEY_ENDP = 0x9B,STORE_F_STORE_LIST_PRIVATE_KEY_NEXT = 0x79,STORE_F_STORE_LIST_PRIVATE_KEY_START = 0x7A,STORE_F_STORE_LIST_PUBLIC_KEY_END = 0x7B,STORE_F_STORE_LIST_PUBLIC_KEY_ENDP = 0x9C,STORE_F_STORE_LIST_PUBLIC_KEY_NEXT = 0x7C,STORE_F_STORE_LIST_PUBLIC_KEY_START = 0x7D,STORE_F_STORE_MODIFY_ARBITRARY = 0xA2,STORE_F_STORE_MODIFY_CERTIFICATE = 0xA3,STORE_F_STORE_MODIFY_CRL = 0xA4,STORE_F_STORE_MODIFY_NUMBER = 0xA5,STORE_F_STORE_MODIFY_PRIVATE_KEY = 0xA6,STORE_F_STORE_MODIFY_PUBLIC_KEY = 0xA7,STORE_F_STORE_NEW_ENGINE = 0x85,STORE_F_STORE_NEW_METHOD = 0x84,STORE_F_STORE_PARSE_ATTRS_END = 0x97,STORE_F_STORE_PARSE_ATTRS_ENDP = 0xAC,STORE_F_STORE_PARSE_ATTRS_NEXT = 0x98,STORE_F_STORE_PARSE_ATTRS_START = 0xAB,STORE_F_STORE_REVOKE_CERTIFICATE = 0x81,STORE_F_STORE_REVOKE_PRIVATE_KEY = 0x82,STORE_F_STORE_REVOKE_PUBLIC_KEY = 0x83,STORE_F_STORE_STORE_ARBITRARY = 0x9D,STORE_F_STORE_STORE_CERTIFICATE = 0x64,STORE_F_STORE_STORE_CRL = 0x65,STORE_F_STORE_STORE_NUMBER = 0x7E,STORE_F_STORE_STORE_PRIVATE_KEY = 0x7F,STORE_F_STORE_STORE_PUBLIC_KEY = 0x80,STORE_R_ALREADY_HAS_A_VALUE = 0x7F,STORE_R_FAILED_DELETING_ARBITRARY = 0x84,STORE_R_FAILED_DELETING_CERTIFICATE = 0x64,STORE_R_FAILED_DELETING_KEY = 0x65,STORE_R_FAILED_DELETING_NUMBER = 0x66,STORE_R_FAILED_GENERATING_CRL = 0x67,STORE_R_FAILED_GENERATING_KEY = 0x68,STORE_R_FAILED_GETTING_ARBITRARY = 0x85,STORE_R_FAILED_GETTING_CERTIFICATE = 0x69,STORE_R_FAILED_GETTING_KEY = 0x6A,STORE_R_FAILED_GETTING_NUMBER = 0x6B,STORE_R_FAILED_LISTING_CERTIFICATES = 0x6C,STORE_R_FAILED_LISTING_KEYS = 0x6D,STORE_R_FAILED_MODIFYING_ARBITRARY = 0x8A,STORE_R_FAILED_MODIFYING_CERTIFICATE = 0x8B,STORE_R_FAILED_MODIFYING_CRL = 0x8C,STORE_R_FAILED_MODIFYING_NUMBER = 0x8D,STORE_R_FAILED_MODIFYING_PRIVATE_KEY = 0x8E,STORE_R_FAILED_MODIFYING_PUBLIC_KEY = 0x8F,STORE_R_FAILED_REVOKING_CERTIFICATE = 0x6E,STORE_R_FAILED_REVOKING_KEY = 0x6F,STORE_R_FAILED_STORING_ARBITRARY = 0x86,STORE_R_FAILED_STORING_CERTIFICATE = 0x70,STORE_R_FAILED_STORING_KEY = 0x71,STORE_R_FAILED_STORING_NUMBER = 0x72,STORE_R_NOT_IMPLEMENTED = 0x80,STORE_R_NO_CONTROL_FUNCTION = 0x90,STORE_R_NO_DELETE_ARBITRARY_FUNCTION = 0x87,STORE_R_NO_DELETE_NUMBER_FUNCTION = 0x73,STORE_R_NO_DELETE_OBJECT_FUNCTION = 0x74,STORE_R_NO_GENERATE_CRL_FUNCTION = 0x75,STORE_R_NO_GENERATE_OBJECT_FUNCTION = 0x76,STORE_R_NO_GET_OBJECT_ARBITRARY_FUNCTION = 0x88,STORE_R_NO_GET_OBJECT_FUNCTION = 0x77,STORE_R_NO_GET_OBJECT_NUMBER_FUNCTION = 0x78,STORE_R_NO_LIST_OBJECT_ENDP_FUNCTION = 0x83,STORE_R_NO_LIST_OBJECT_END_FUNCTION = 0x79,STORE_R_NO_LIST_OBJECT_NEXT_FUNCTION = 0x7A,STORE_R_NO_LIST_OBJECT_START_FUNCTION = 0x7B,STORE_R_NO_MODIFY_OBJECT_FUNCTION = 0x91,STORE_R_NO_REVOKE_OBJECT_FUNCTION = 0x7C,STORE_R_NO_STORE = 0x81,STORE_R_NO_STORE_OBJECT_ARBITRARY_FUNCTION = 0x89,STORE_R_NO_STORE_OBJECT_FUNCTION = 0x7D,STORE_R_NO_STORE_OBJECT_NUMBER_FUNCTION = 0x7E,STORE_R_NO_VALUE = 0x82,};
enum MACRO_SYNCH {SYNCH = 242,};
enum MACRO_SYS_F {SYS_F_FOPEN = 1,SYS_F_CONNECT = 2,SYS_F_GETSERVBYNAME = 3,SYS_F_SOCKET = 4,SYS_F_IOCTLSOCKET = 5,SYS_F_BIND = 6,SYS_F_LISTEN = 7,SYS_F_ACCEPT = 8,SYS_F_WSASTARTUP = 9,SYS_F_OPENDIR = 10,SYS_F_FREAD = 11,};
enum MACRO_SZOMB {SZOMB = 5,};
enum MACRO_TABLE {TABLE_CONTAINER_KEY_NETSNMP_INDEX = 1,TABLE_CONTAINER_KEY_VARBIND_INDEX = 2,TABLE_CONTAINER_KEY_VARBIND_RAW = 3,};
enum MACRO_TCP6S {TCP6S_CLOSED = 0,TCP6S_LISTEN = 1,TCP6S_SYN_SENT = 2,TCP6S_SYN_RECEIVED = 3,TCP6S_ESTABLISHED = 4,TCP6S_CLOSE_WAIT = 5,TCP6S_FIN_WAIT_1 = 6,TCP6S_CLOSING = 7,TCP6S_LAST_ACK = 8,TCP6S_FIN_WAIT_2 = 9,TCP6S_TIME_WAIT = 10,};
enum MACRO_TCPTV {TCPTV_MIN = 2,TCPTV_REXMTMAX = 128,};
enum MACRO_TDATA {TDATA_FLAG_NO_STORE_INDEXES = 0x1,TDATA_FLAG_NO_CONTAINER = 0x2,};
enum MACRO_TIMER {TIMER_RATE = 30,};
enum MACRO_TIOCM {TIOCM_LE = 0x1,TIOCM_DTR = 0x2,TIOCM_RTS = 0x4,TIOCM_ST = 0x8,TIOCM_SR = 0x10,TIOCM_CTS = 0x20,TIOCM_CAR = 0x40,TIOCM_CD = 0x40,TIOCM_RNG = 0x80,TIOCM_RI = 0x80,TIOCM_DSR = 0x100,};
enum MACRO_TRACE {TRACE_DISABLE = 0x0,TRACE_TIMES = 0x1,TRACE_TPUTS = 0x2,TRACE_UPDATE = 0x4,TRACE_MOVE = 0x8,TRACE_CHARPUT = 0x10,TRACE_ORDINARY = 0x1F,TRACE_CALLS = 0x20,TRACE_VIRTPUT = 0x40,TRACE_IEVENT = 0x80,TRACE_BITS = 0x100,TRACE_ICALLS = 0x200,TRACE_CCALLS = 0x400,TRACE_DATABASE = 0x800,TRACE_ATTRS = 0x1000,TRACE_SHIFT = 0xD,TRACE_MAXIMUM = 0x1FFF,};
enum MACRO_TSGID {TSGID = 0x400,};
enum MACRO_TSVTX {TSVTX = 0x200,};
enum MACRO_UCHAR {UCHAR_MAX = 255,CHAR_MAX = 127,};
enum MACRO_UINT8 {UINT8_MAX = 255,UINT16_MAX = 65535,UINT32_MAX = 4294967295,UINT64_MAX = -1,};
enum MACRO_ULONG {ULONG_MAX = 0xFFFFFFFFFFFFFFFF,LONG_MAX = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_UNDEF {UNDEF = 5,};
enum MACRO_UNVIS {UNVIS_VALID = 1,UNVIS_VALIDPUSH = 2,UNVIS_NOCHAR = 3,UNVIS_SYNBAD = -1,UNVIS_ERROR = -2,UNVIS_END = 1,};
enum MACRO_USHRT {USHRT_MAX = 65535,SHRT_MAX = 32767,};
enum MACRO_USING {USING_SNMPV3_USMCONF_MODULE = 1,USING_AGENTX_MASTER_MODULE = 1,USING_AGENTX_SUBAGENT_MODULE = 1,USING_UTILITIES_EXECUTE_MODULE = 1,USING_UTILITIES_IQUERY_MODULE = 1,USING_MIBII_VACM_CONF_MODULE = 1,USING_AGENTX_PROTOCOL_MODULE = 1,USING_AGENTX_CLIENT_MODULE = 1,USING_AGENTX_MASTER_ADMIN_MODULE = 1,USING_AGENTX_AGENTX_CONFIG_MODULE = 1,};
enum MACRO_UTIME {UTIME_NEEDS_CLOSED_FILE = 1,};
enum MACRO_UTMPX {UTMPX_AUTOFILL_MASK = 0x8000,UTMPX_DEAD_IF_CORRESPONDING_MASK = 0x4000,};
enum MACRO_VALID {VALID_INT_BITS = 2147483647,VALID_UINT_BITS = 4294967295,};
enum MACRO_VKILL {VKILL = 5,};
enum MACRO_VNODE {VNODE_READ = 0x1,VNODE_WRITE = 0x2,};
enum MACRO_VQUIT {VQUIT = 9,};
enum MACRO_VSTOP {VSTOP = 13,};
enum MACRO_VSUSP {VSUSP = 10,};
enum MACRO_VTIME {VTIME = 17,};
enum MACRO_WCHAR {WCHAR_MIN = -2147483648,WINT_MIN = -2147483648,};
enum MACRO_WRITE {WRITE = 0,};
enum MACRO_XATTR {XATTR_NOFOLLOW = 0x1,XATTR_CREATE = 0x2,XATTR_REPLACE = 0x4,XATTR_NOSECURITY = 0x8,XATTR_NODEFAULT = 0x10,XATTR_SHOWCOMPRESSION = 0x20,XATTR_MAXNAMELEN = 0x7F,};
enum MACRO_XTABS {XTABS = 0xC00,CRDELAY = 0x3000,VTDELAY = 0x4000,BSDELAY = 0x8000,};
enum MACRO_YPERR {YPERR_BADARGS = 1,YPERR_RPC = 2,YPERR_DOMAIN = 3,YPERR_MAP = 4,YPERR_KEY = 5,YPERR_YPERR = 6,YPERR_RESRC = 7,YPERR_NOMORE = 8,YPERR_PMAP = 9,YPERR_YPBIND = 10,YPERR_YPSERV = 11,YPERR_NODOM = 12,YPERR_BADDB = 13,YPERR_VERS = 14,YPERR_ACCESS = 15,YPERR_BUSY = 16,};
enum MACRO_ZFREE {ZFREE_CODE = 19988504,ZFREE_CODE_2 = 19988508,};
enum MACRO__GLOB {_GLOB_ERR_BLOCK = 0x80000000,};
enum MACRO__I386 {_I386_SIGNAL_H_ = 1,};
enum MACRO__LDAP {_LDAP_FEATURES_H = 1,};
enum MACRO__MACH {_MACH_INIT_ = 1,};
enum MACRO__QUAD {_QUAD_HIGHWORD = 1,_QUAD_LOWWORD = 0,};
enum MACRO__XBS5 {_XBS5_ILP32_OFF32 = -1,_XBS5_ILP32_OFFBIG = -1,_XBS5_LP64_OFF64 = 1,_XBS5_LPBIG_OFFBIG = 1,};
enum MACRO___DTF {__DTF_READALL = 0x8,};
enum MACRO___MAC {__MAC_10_0 = 1000,__MAC_10_1 = 1010,__MAC_10_2 = 1020,__MAC_10_3 = 1030,__MAC_10_4 = 1040,__MAC_10_5 = 1050,__MAC_10_6 = 1060,__MAC_10_7 = 1070,__MAC_NA = 9999,};
enum MACRO___NDR {__NDR_convert__ = 1,__NDR_convert__int_rep__ = 1,__NDR_convert__char_rep__ = 0,__NDR_convert__float_rep__ = 0,};
enum MACRO___RES {__RES = 19991006,};
enum MACRO_ccitt {NID_ccitt = 404,OBJ_ccitt = 0,};
enum MACRO_clock {clock_MSG_COUNT = 3,clock_reply_MSG_COUNT = 1,};
enum MACRO_emask {system_emask = 0xFC000000,sub_emask = 0x3FFC000,code_emask = 0x3FFF,};
enum MACRO_itu_t {NID_itu_t = 645,OBJ_itu_t = 0,};
enum MACRO_undef {NID_undef = 0,OBJ_undef = 0,};
struct MD2state_st {unsigned int num;unsigned char data[16];unsigned int cksm[16];unsigned int state[16];};
struct MD4state_st {unsigned int A;unsigned int B;unsigned int C;unsigned int D;unsigned int Nl;unsigned int Nh;unsigned int data[16];unsigned int num;};
struct MD5state_st {unsigned int A;unsigned int B;unsigned int C;unsigned int D;unsigned int Nl;unsigned int Nh;unsigned int data[16];unsigned int num;};
struct MPOOL___hqh {struct _bkt *tqh_first;struct _bkt **tqh_last;};
struct MPOOL___lqh {struct _bkt *tqh_first;struct _bkt **tqh_last;};
enum NXByteOrder {NX_UnknownByteOrder = 0x0,NX_LittleEndian = 0x1,NX_BigEndian = 0x2,};
typedef struct ocsp_cert_id_st OCSP_CERTID;
typedef struct ocsp_one_request_st OCSP_ONEREQ;
typedef struct ocsp_responder_id_st OCSP_RESPID;
typedef struct _41E1A7C74B3260A4835F2B305A4796BB OSQueueHead;
typedef struct PBKDF2PARAM_st PBKDF2PARAM;
typedef struct pkcs12_bag_st PKCS12_BAGS;
typedef struct rand_meth_st RAND_METHOD;
struct SHAstate_st {unsigned int h0;unsigned int h1;unsigned int h2;unsigned int h3;unsigned int h4;unsigned int Nl;unsigned int Nh;unsigned int data[16];unsigned int num;};
typedef unsigned long long SQLROWCOUNT;
typedef signed short SQLSMALLINT;
typedef unsigned int SQLUINTEGER;
typedef struct ssl3_buffer_st SSL3_BUFFER;
typedef struct ssl3_record_st SSL3_RECORD;
typedef struct ssl_session_st SSL_SESSION;
typedef int SecmodInMsg(struct snmp_secmod_incoming_params *);
typedef struct slapi_entry Slapi_Entry;
typedef struct slapi_mutex Slapi_Mutex;
typedef struct slapi_value Slapi_Value;
typedef struct tagTIME_STRUCT TIME_STRUCT;
typedef void VCPFunction(char *);
typedef struct x509_lookup_st X509_LOOKUP;
typedef struct x509_object_st X509_OBJECT;
typedef struct X509_pubkey_st X509_PUBKEY;
typedef struct _FD3C3D52399ED0C4A355988E4BC1F0A0 _RuneLocale;
struct _TidyOption {int _opaque;};
typedef union _149468D43E4B0BB405DED2721C573480 __mbstate_t;
enum __ns_opcode {ns_o_query = 0x0,ns_o_iquery = 0x1,ns_o_status = 0x2,ns_o_notify = 0x4,ns_o_update = 0x5,ns_o_max = 0x6,};
struct _cups_dir_s;
struct _xmlCatalog;
struct _xmlExpCtxt;
struct _xmlExpNode;
struct _xmlPattern;
struct _xmlRelaxNG;
enum accept_stat {SUCCESS = 0x0,PROG_UNAVAIL = 0x1,PROG_MISMATCH = 0x2,PROC_UNAVAIL = 0x3,GARBAGE_ARGS = 0x4,SYSTEM_ERR = 0x5,};
typedef struct _acl_entry *acl_entry_t;
typedef struct __aslresponse *aslresponse;
struct asn1_ctx_st {unsigned char *p;int eos;int error;int inf;int tag;int xclass;long long slen;unsigned char *max;unsigned char *q;unsigned char **pp;int line;};
typedef struct _C32751CD7C48DEB510AF18CB8191FD58 au_attr32_t;
typedef struct _7CAB3563A0B63D1E94DFFC6057C63E4C au_attr64_t;
typedef struct _0659FB689B9ADFB6E4914AFED3DC9D4E au_groups_t;
typedef struct _0C6FFD5AF206204F3817E1D72432929C au_inaddr_t;
typedef struct _32D888630742756CD8CEFEDBFEF3759B au_kevent_t;
typedef struct _140A3B32F7B8885BC10BF2585A8BB950 au_opaque_t;
typedef struct _08EB952BF76DF7A29BEE12FBAEF31F94 au_proc32_t;
typedef struct _A02E0C6A2318D7F918526EFE13F50746 au_proc64_t;
typedef struct _D66CE1D14E0A9D84788C1B396D687289 au_socket_t;
typedef struct auditinfo auditinfo_t;
typedef void bio_info_cb(struct bio_st *, int,  char *, int, long long, long long);
typedef char *bp_fileid_t;
typedef struct call_gate call_gate_t;
struct cast_key_st {unsigned long long data[32];int short_key;};
typedef int clock_res_t;
typedef struct code_desc code_desc_t;
struct credentials;
enum cups_bool_e {CUPS_FALSE = 0x0,CUPS_TRUE = 0x1,};
struct cups_cmyk_s {unsigned char black_lut[256];unsigned char color_lut[256];int ink_limit;int num_channels;short *channels[15];};
typedef struct cups_cmyk_s cups_cmyk_t;
typedef unsigned short cups_dbcs_t;
typedef struct cups_dest_s cups_dest_t;
enum cups_edge_e {CUPS_EDGE_TOP = 0x0,CUPS_EDGE_RIGHT = 0x1,CUPS_EDGE_BOTTOM = 0x2,CUPS_EDGE_LEFT = 0x3,};
typedef struct _cups_file_s cups_file_t;
typedef struct cups_lang_s cups_lang_t;
enum cups_mode_e {CUPS_RASTER_READ = 0x0,CUPS_RASTER_WRITE = 0x1,CUPS_RASTER_WRITE_COMPRESSED = 0x2,CUPS_RASTER_WRITE_PWG = 0x3,};
typedef unsigned char cups_sbcs_t;
typedef unsigned short cups_ucs2_t;
typedef unsigned long long cups_ucs4_t;
typedef unsigned char cups_utf8_t;
typedef unsigned long long cups_vbcs_t;
enum curl_khstat {CURLKHSTAT_FINE_ADD_TO_FILE = 0x0,CURLKHSTAT_FINE = 0x1,CURLKHSTAT_REJECT = 0x2,CURLKHSTAT_DEFER = 0x3,CURLKHSTAT_LAST = 0x4,};
typedef void *d2i_of_void(void **,  unsigned char **, long long);
typedef struct data_desc data_desc_t;
typedef struct _03A6CE804D1D2E62AF0690634426EB08 dk_extent_t;
typedef struct _9F41B8E90BE057B33891A8A6EE681A31 dns_reply_t;
struct dom_binding;
enum dot3Vendors {dot3VendorAMD = 0x1,dot3VendorIntel = 0x2,dot3VendorNational = 0x4,dot3VendorFujitsu = 0x5,dot3VendorDigital = 0x6,dot3VendorWesternDigital = 0x7,};
typedef struct st_dynamic_fns dynamic_fns;
struct ec_group_st;
struct ec_point_st;
struct ecdh_method;
struct ffi_closure {char tramp[24];ffi_cif *cif;void (*fun)(ffi_cif *, void *, void **, void *);void *user_data;};
struct fp_data_reg {unsigned short mant;unsigned short mant1 : 16;unsigned short mant2 : 16;unsigned short mant3 : 16;unsigned short exp : 15;unsigned short sign : 1;};
typedef struct fp_status fp_status_t;
typedef union gdt_entry gdt_entry_t;
typedef struct gmon_data gmon_data_t;
typedef struct gss_OID_set_desc_struct *gss_OID_set;
typedef struct help_node_s help_node_t;
struct help_word_s {int count;char *text;};
typedef struct help_word_s help_word_t;
typedef struct hm_fragment_st hm_fragment;
typedef union _http_addr_u http_addr_t;
enum http_auth_e {HTTP_AUTH_NONE = 0x0,HTTP_AUTH_BASIC = 0x1,HTTP_AUTH_MD5 = 0x2,HTTP_AUTH_MD5_SESS = 0x3,HTTP_AUTH_MD5_INT = 0x4,HTTP_AUTH_MD5_SESS_INT = 0x5,HTTP_AUTH_NEGOTIATE = 0x6,};
typedef int i2d_of_void(void *, unsigned char **);
typedef union idt_entry idt_entry_t;
struct ifma_msghdr {unsigned short ifmam_msglen;unsigned char ifmam_version;unsigned char ifmam_type;int ifmam_addrs;int ifmam_flags;unsigned short ifmam_index;};
struct inpcbpolicy;
typedef struct intr_gate intr_gate_t;
typedef struct OSObject *io_object_t;
struct ip6_pktopts;
enum ipp_state_e {IPP_ERROR = 0xFFFFFFFF,IPP_IDLE = 0x0,IPP_HEADER = 0x1,IPP_ATTRIBUTE = 0x2,IPP_DATA = 0x3,};
typedef unsigned char ipp_uchar_t;
typedef union ipp_value_u ipp_value_t;
typedef struct kauth_ace *kauth_ace_t;
typedef struct kauth_acl *kauth_acl_t;
typedef void *kmod_args_t;
typedef struct kmod_info kmod_info_t;
typedef struct _krb5_ap_rep krb5_ap_rep;
typedef struct _krb5_ap_req krb5_ap_req;
typedef struct _krb5_cc_ops krb5_cc_ops;
typedef struct _krb5_ccache *krb5_ccache;
typedef struct _krb5_kt *krb5_keytab;
typedef struct _krb5_prompt krb5_prompt;
typedef struct krb5_rc_st *krb5_rcache;
typedef struct _krb5_ticket krb5_ticket;
struct ldapapiinfo {int ldapai_info_version;int ldapai_api_version;int ldapai_protocol_version;char **ldapai_extensions;char *ldapai_vendor_name;int ldapai_vendor_version;};
struct ldapsortkey {char *attributeType;char *orderingRule;int reverseOrder;};
typedef union ldt_entry ldt_entry_t;
typedef struct lt__advise *lt_dladvise;
typedef struct lt__handle *lt_dlhandle;
typedef void *lt_dlloader;
typedef struct _1A1AE55D2EE57EB13DB3E8FFAFC89EF6 lt_dlvtable;
typedef struct _mime_type_s mime_type_t;
typedef struct snmp_pdu netsnmp_pdu;
struct obj_name_st {int type;int alias; char *name; char *data;};
struct pam_message {int msg_style;char *msg;};
typedef struct pcap_addr pcap_addr_t;
struct pcap_dumper;
typedef struct _0362AC053C3D6D68586BA4DFD8C6F4A4 port_stat_t;
struct ppd_const_s {char option1[41];char choice1[41];char option2[41];char choice2[41];};
typedef struct ppd_const_s ppd_const_t;
typedef struct ppd_group_s ppd_group_t;
enum reject_stat {RPC_MISMATCH = 0x0,AUTH_ERROR = 0x1,};
typedef struct __ns_rr res_9_ns_rr;
typedef struct __res_9_state *res_9_state;
struct rt_addrinfo {int rti_addrs;struct sockaddr *rti_info[8];};
typedef struct sasl_conn sasl_conn_t;
typedef void sasl_free_t(void *);
struct sasl_rand_s;
typedef struct sasl_rand_s sasl_rand_t;
struct sasl_secret {unsigned long long len;unsigned char data[1];};
struct sched_param {int sched_priority;char __opaque[4];};
struct seed_key_st {unsigned int data[32];};
struct slapi_entry;
struct slapi_mutex;
struct slapi_value;
typedef struct task_gate task_gate_t;
typedef struct trap_gate trap_gate_t;
typedef double unw_fpreg_t;
struct utmpidlearr {struct utmpidle **uia_arr;int uia_cnt;};
struct vfs_context;
enum xdrbuf_type {XDRBUF_BUFFER = 0x1,};
typedef struct _xmlAutomata xmlAutomata;
typedef struct _xmlChLRange xmlChLRange;
typedef struct _xmlChSRange xmlChSRange;
typedef void (*xmlFreeFunc)(void *mem);
typedef struct _xmlNotation xmlNotation;
typedef struct _xmlHashTable xmlRefTable;
typedef struct _xmlSaveCtxt xmlSaveCtxt;
typedef struct zone_info zone_info_t;
typedef struct zone_name zone_name_t;
typedef struct ASN1_VALUE_st ASN1_VALUE;
typedef struct bio_method_st BIO_METHOD;
typedef struct berelement BerElement;
typedef struct _EC96C272326DB5C337E3479E74002932 CONF_VALUE;
typedef char *CPFunction( char *, int);
struct Connection;
typedef unsigned char DES_cblock[8];
typedef struct DIST_POINT_st DIST_POINT;
typedef struct dsa_method DSA_METHOD;
typedef struct dso_meth_st DSO_METHOD;
typedef struct evp_cipher_st EVP_CIPHER;
typedef struct env_md_ctx_st EVP_MD_CTX;
typedef struct enginetime_struct *Enginetime;
typedef void *FIELD_CELL;
typedef struct _hist_entry HIST_ENTRY;
typedef struct histeventW HistEventW;
typedef struct ldap_syntax LDAPSyntax;
typedef struct lhash_node_st LHASH_NODE;
enum MACRO_ANYP {ANYP = 0xC0,NLDELAY = 0x300,TBDELAY = 0xC00,};
enum MACRO_ASN1 {ASN1_BAD_TIMEFORMAT = 1859794432,ASN1_MISSING_FIELD = 1859794433,ASN1_MISPLACED_FIELD = 1859794434,ASN1_TYPE_MISMATCH = 1859794435,ASN1_OVERFLOW = 1859794436,ASN1_OVERRUN = 1859794437,ASN1_BAD_ID = 1859794438,ASN1_BAD_LENGTH = 1859794439,ASN1_BAD_FORMAT = 1859794440,ASN1_PARSE_ERROR = 1859794441,ASN1_BAD_GMTIME = 1859794442,ASN1_MISMATCH_INDEF = 1859794443,ASN1_MISSING_EOC = 1859794444,};
enum MACRO_ASNT {ASNT_OPAQUE = 68,};
enum MACRO_ATTR {ATTR_BIT_MAP_COUNT = 5,};
enum MACRO_AUTH {AUTH_WHO_CLIENT = 0,AUTH_WHO_SERVER = 1,AUTH_WHO_MASK = 1,AUTH_HOW_ONE_WAY = 0,AUTH_HOW_MUTUAL = 2,AUTH_HOW_MASK = 2,};
enum MACRO_AUTO {AUTO_FREE_STATEREF = 0x1,AUTO_FREE_OLDDATA = 0x2,};
enum MACRO_B110 {B110 = 110,};
enum MACRO_B134 {B134 = 134,};
enum MACRO_B150 {B150 = 150,};
enum MACRO_B200 {B200 = 200,};
enum MACRO_B300 {B300 = 300,};
enum MACRO_B600 {B600 = 600,};
enum MACRO_BABY {BABY_STEP_NONE = 0,BABY_STEP_PRE_REQUEST = 2,BABY_STEP_OBJECT_LOOKUP = 4,BABY_STEP_CHECK_VALUE = 8,BABY_STEP_ROW_CREATE = 16,BABY_STEP_UNDO_SETUP = 32,BABY_STEP_SET_VALUE = 64,BABY_STEP_CHECK_CONSISTENCY = 128,BABY_STEP_UNDO_SET = 256,BABY_STEP_COMMIT = 512,BABY_STEP_UNDO_COMMIT = 1024,BABY_STEP_IRREVERSIBLE_COMMIT = 2048,BABY_STEP_UNDO_CLEANUP = 4096,BABY_STEP_POST_REQUEST = 8192,BABY_STEP_ALL = 4294967295,BABY_STEP_CHECK_OBJECT = 8,BABY_STEP_SET_VALUES = 64,BABY_STEP_UNDO_SETS = 256,};
enum MACRO_BASE {BASE_BUFFER_SIZE = 4096,};
enum MACRO_BIND {BIND_TYPE_POINTER = 1,BIND_TYPE_TEXT_ABSOLUTE32 = 2,BIND_TYPE_TEXT_PCREL32 = 3,BIND_SPECIAL_DYLIB_SELF = 0,BIND_SPECIAL_DYLIB_MAIN_EXECUTABLE = -1,BIND_SPECIAL_DYLIB_FLAT_LOOKUP = -2,BIND_SYMBOL_FLAGS_WEAK_IMPORT = 1,BIND_SYMBOL_FLAGS_NON_WEAK_DEFINITION = 8,BIND_OPCODE_MASK = 240,BIND_IMMEDIATE_MASK = 15,BIND_OPCODE_DONE = 0,BIND_OPCODE_SET_DYLIB_ORDINAL_IMM = 16,BIND_OPCODE_SET_DYLIB_ORDINAL_ULEB = 32,BIND_OPCODE_SET_DYLIB_SPECIAL_IMM = 48,BIND_OPCODE_SET_SYMBOL_TRAILING_FLAGS_IMM = 64,BIND_OPCODE_SET_TYPE_IMM = 80,BIND_OPCODE_SET_ADDEND_SLEB = 96,BIND_OPCODE_SET_SEGMENT_AND_OFFSET_ULEB = 112,BIND_OPCODE_ADD_ADDR_ULEB = 128,BIND_OPCODE_DO_BIND = 144,BIND_OPCODE_DO_BIND_ADD_ADDR_ULEB = 160,BIND_OPCODE_DO_BIND_ADD_ADDR_IMM_SCALED = 176,BIND_OPCODE_DO_BIND_ULEB_TIMES_SKIPPING_ULEB = 192,};
enum MACRO_BOOT {BOOT_TIME = 2,OLD_TIME = 3,NEW_TIME = 4,};
enum MACRO_BPOP {BPOP_OK = 0,BPOP_QUERY = 1,BPOP_QUERY_NE = 2,BPOP_ERROR = 3,};
enum MACRO_BSD4 {BSD4_3 = 1,BSD4_4 = 1,};
enum MACRO_BYTE {BYTE_ORDER = 1234,};
enum MACRO_CAST {CAST_ENCRYPT = 1,CAST_DECRYPT = 0,CAST_BLOCK = 8,CAST_KEY_LENGTH = 16,};
enum MACRO_CBRK {CBRK = 255,};
enum MACRO_CCTS {CCTS_OFLOW = 0x10000,};
enum MACRO_CEOF {CEOF = 4,};
enum MACRO_CEOL {CEOL = 0xFF,};
enum MACRO_CEOT {CEOT = 4,};
enum MACRO_CHAR {CHAR_BIT = 8,};
enum MACRO_CMIN {CMIN = 1,CQUIT = 28,};
enum MACRO_COMP {COMP_F_BIO_ZLIB_FLUSH = 99,COMP_F_BIO_ZLIB_NEW = 100,COMP_F_BIO_ZLIB_READ = 101,COMP_F_BIO_ZLIB_WRITE = 102,COMP_R_ZLIB_DEFLATE_ERROR = 99,COMP_R_ZLIB_INFLATE_ERROR = 100,COMP_R_ZLIB_NOT_SUPPORTED = 101,};
enum MACRO_CONF {CONF_MFLAGS_IGNORE_ERRORS = 0x1,CONF_MFLAGS_IGNORE_RETURN_CODES = 0x2,CONF_MFLAGS_SILENT = 0x4,CONF_MFLAGS_NO_DSO = 0x8,CONF_MFLAGS_IGNORE_MISSING_FILE = 0x10,CONF_MFLAGS_DEFAULT_SECTION = 0x20,CONF_F_CONF_DUMP_FP = 0x68,CONF_F_CONF_LOAD = 0x64,CONF_F_CONF_LOAD_BIO = 0x66,CONF_F_CONF_LOAD_FP = 0x67,CONF_F_CONF_MODULES_LOAD = 0x74,CONF_F_DEF_LOAD = 0x78,CONF_F_DEF_LOAD_BIO = 0x79,CONF_F_MODULE_INIT = 0x73,CONF_F_MODULE_LOAD_DSO = 0x75,CONF_F_MODULE_RUN = 0x76,CONF_F_NCONF_DUMP_BIO = 0x69,CONF_F_NCONF_DUMP_FP = 0x6A,CONF_F_NCONF_GET_NUMBER = 0x6B,CONF_F_NCONF_GET_NUMBER_E = 0x70,CONF_F_NCONF_GET_SECTION = 0x6C,CONF_F_NCONF_GET_STRING = 0x6D,CONF_F_NCONF_LOAD = 0x71,CONF_F_NCONF_LOAD_BIO = 0x6E,CONF_F_NCONF_LOAD_FP = 0x72,CONF_F_NCONF_NEW = 0x6F,CONF_F_STR_COPY = 0x65,CONF_R_ERROR_LOADING_DSO = 0x6E,CONF_R_MISSING_CLOSE_SQUARE_BRACKET = 0x64,CONF_R_MISSING_EQUAL_SIGN = 0x65,CONF_R_MISSING_FINISH_FUNCTION = 0x6F,CONF_R_MISSING_INIT_FUNCTION = 0x70,CONF_R_MODULE_INITIALIZATION_ERROR = 0x6D,CONF_R_NO_CLOSE_BRACE = 0x66,CONF_R_NO_CONF = 0x69,CONF_R_NO_CONF_OR_ENVIRONMENT_VARIABLE = 0x6A,CONF_R_NO_SECTION = 0x6B,CONF_R_NO_SUCH_FILE = 0x72,CONF_R_NO_VALUE = 0x6C,CONF_R_UNABLE_TO_CREATE_NEW_SECTION = 0x67,CONF_R_UNKNOWN_MODULE_NAME = 0x71,CONF_R_VARIABLE_HAS_NO_VALUE = 0x68,};
enum MACRO_CUPS {CUPS_FILE_NONE = 0,CUPS_FILE_GZIP = 1,};
enum MACRO_CURL {CURL_SIZEOF_LONG = 8,CURL_SIZEOF_CURL_SOCKLEN_T = 4,CURL_SIZEOF_CURL_OFF_T = 8,};
enum MACRO_DATA {DATA = 0x3,ACK = 0x4,};
enum MACRO_DAYS {DAYS_PER_WEEK = 7,DAYS_PER_NYEAR = 365,DAYS_PER_LYEAR = 366,};
enum MACRO_DESC {DESC_CODE_EXEC = 0x18,DESC_CODE_READ = 0x1A,DESC_CODE_16B = 0x0,DESC_CODE_32B = 0x1,DESC_GRAN_BYTE = 0x0,DESC_GRAN_PAGE = 0x1,DESC_DATA_RONLY = 0x10,DESC_DATA_WRITE = 0x12,DESC_DATA_16B = 0x0,DESC_DATA_32B = 0x1,DESC_LDT = 0x2,};
enum MACRO_DKIO {DKIO_DONE = 0x1,DKIO_READ = 0x2,DKIO_ASYNC = 0x4,DKIO_META = 0x8,DKIO_PAGING = 0x10,DKIO_THROTTLE = 0x20,DKIO_PASSIVE = 0x40,};
enum MACRO_DONT {DONT = 254,};
enum MACRO_DTLS {DTLS_CTRL_GET_TIMEOUT = 73,DTLS_CTRL_HANDLE_TIMEOUT = 74,DTLS_CTRL_LISTEN = 75,};
enum MACRO_DYLD {DYLD_CACHE_SLIDE_PAGE_ATTRS = 0xC000,DYLD_CACHE_SLIDE_PAGE_ATTR_EXTRA = 0x8000,DYLD_CACHE_SLIDE_PAGE_ATTR_NO_REBASE = 0x4000,DYLD_CACHE_SLIDE_PAGE_ATTR_END = 0x8000,DYLD_CACHE_SLIDE_V3_PAGE_ATTR_NO_REBASE = 0xFFFF,};
enum MACRO_D_MD {D_MD_ORDER = 57,};
enum MACRO_ECDH {ECDH_F_ECDH_COMPUTE_KEY = 100,ECDH_F_ECDH_DATA_NEW_METHOD = 101,ECDH_R_KDF_FAILED = 102,ECDH_R_NO_PRIVATE_VALUE = 100,ECDH_R_POINT_ARITHMETIC_FAILURE = 101,};
enum MACRO_EL_0 {EL = 248,};
enum MACRO_EXIT {EXIT_FAILURE = 1,EXIT_SUCCESS = 0,};
enum MACRO_EXTA {EXTA = 19200,};
enum MACRO_EXTB {EXTB = 38400,};
enum MACRO_FORM {FORM_N = 1,FORM_T = 2,FORM_C = 3,};
enum MACRO_FSUC {FSUC_PROBE = 112,FSUC_PROBEFORINIT = 80,FSUC_MOUNT = 109,FSUC_REPAIR = 114,FSUC_INITIALIZE = 105,FSUC_UNMOUNT = 117,FSUC_MOUNT_FORCE = 77,};
enum MACRO_FSUR {FSUR_RECOGNIZED = -1,FSUR_UNRECOGNIZED = -2,FSUR_IO_SUCCESS = -3,FSUR_IO_FAIL = -4,FSUR_IO_UNCLEAN = -5,FSUR_INVAL = -6,FSUR_LOADERR = -7,FSUR_INITRECOGNIZED = -8,};
enum MACRO_GLOB {GLOB_APPEND = 0x1,GLOB_DOOFFS = 0x2,GLOB_ERR = 0x4,GLOB_MARK = 0x8,GLOB_NOCHECK = 0x10,GLOB_NOSORT = 0x20,GLOB_NOESCAPE = 0x2000,GLOB_NOSPACE = 0xFFFFFFFFFFFFFFFF,GLOB_ABORTED = 0xFFFFFFFFFFFFFFFE,GLOB_NOMATCH = 0xFFFFFFFFFFFFFFFD,GLOB_NOSYS = 0xFFFFFFFFFFFFFFFC,GLOB_ALTDIRFUNC = 0x40,GLOB_BRACE = 0x80,GLOB_MAGCHAR = 0x100,GLOB_NOMAGIC = 0x200,GLOB_QUOTE = 0x400,GLOB_TILDE = 0x800,GLOB_LIMIT = 0x1000,};
enum MACRO_GMON {GMON_PROF_ON = 0,GMON_PROF_BUSY = 1,GMON_PROF_ERROR = 2,GMON_PROF_OFF = 3,};
enum MACRO_HASH {HASH_SZ = 97,};
enum MACRO_HAVE {HAVE_ALLOCA = 1,HAVE_ALLOCA_H = 1,HAVE_MEMCPY = 1,HAVE_MMAP_ANON = 1,HAVE_MMAP_FILE = 1,};
enum MACRO_HMAC {HMAC_MAX_MD_CBLOCK = 128,};
enum MACRO_HOST {HOST_INFO_MAX = 1024,KERNEL_VERSION_MAX = 512,KERNEL_BOOT_INFO_MAX = 4096,};
enum MACRO_HTTP {HTTP_MAX_URI = 1024,HTTP_MAX_HOST = 256,HTTP_MAX_BUFFER = 2048,HTTP_MAX_VALUE = 256,};
enum MACRO_I386 {I386_PGBYTES = 4096,I386_PGSHIFT = 12,};
enum MACRO_ICMP {ICMP_MINLEN = 8,ICMP_MASKLEN = 12,ICMP_ECHOREPLY = 0,ICMP_UNREACH = 3,ICMP_UNREACH_NET = 0,ICMP_UNREACH_HOST = 1,ICMP_UNREACH_PROTOCOL = 2,ICMP_UNREACH_PORT = 3,ICMP_UNREACH_NEEDFRAG = 4,ICMP_UNREACH_SRCFAIL = 5,ICMP_UNREACH_NET_UNKNOWN = 6,ICMP_UNREACH_HOST_UNKNOWN = 7,ICMP_UNREACH_ISOLATED = 8,ICMP_UNREACH_NET_PROHIB = 9,ICMP_UNREACH_HOST_PROHIB = 10,ICMP_UNREACH_TOSNET = 11,ICMP_UNREACH_TOSHOST = 12,ICMP_UNREACH_FILTER_PROHIB = 13,ICMP_UNREACH_HOST_PRECEDENCE = 14,ICMP_UNREACH_PRECEDENCE_CUTOFF = 15,ICMP_SOURCEQUENCH = 4,ICMP_REDIRECT = 5,ICMP_REDIRECT_NET = 0,ICMP_REDIRECT_HOST = 1,ICMP_REDIRECT_TOSNET = 2,ICMP_REDIRECT_TOSHOST = 3,ICMP_ALTHOSTADDR = 6,ICMP_ECHO = 8,ICMP_ROUTERADVERT = 9,ICMP_ROUTERADVERT_NORMAL = 0,ICMP_ROUTERADVERT_NOROUTE_COMMON = 16,ICMP_ROUTERSOLICIT = 10,ICMP_TIMXCEED = 11,ICMP_TIMXCEED_INTRANS = 0,ICMP_TIMXCEED_REASS = 1,ICMP_PARAMPROB = 12,ICMP_PARAMPROB_ERRATPTR = 0,ICMP_PARAMPROB_OPTABSENT = 1,ICMP_PARAMPROB_LENGTH = 2,ICMP_TSTAMP = 13,ICMP_TSTAMPREPLY = 14,ICMP_IREQ = 15,ICMP_IREQREPLY = 16,ICMP_MASKREQ = 17,ICMP_MASKREPLY = 18,ICMP_TRACEROUTE = 30,ICMP_DATACONVERR = 31,ICMP_MOBILE_REDIRECT = 32,ICMP_IPV6_WHEREAREYOU = 33,ICMP_IPV6_IAMHERE = 34,ICMP_MOBILE_REGREQUEST = 35,ICMP_MOBILE_REGREPLY = 36,ICMP_SKIP = 39,ICMP_PHOTURIS = 40,ICMP_PHOTURIS_UNKNOWN_INDEX = 1,ICMP_PHOTURIS_AUTH_FAILED = 2,ICMP_PHOTURIS_DECRYPT_FAILED = 3,ICMP_MAXTYPE = 40,};
enum MACRO_IFLR {IFLR_PREFIX = 0x8000,};
enum MACRO_IGMP {IGMP_MINLEN = 8,IGMP_V3_QUERY_MINLEN = 12,IGMP_GRPREC_HDRLEN = 8,IGMP_V3_REPORT_MINLEN = 8,IGMP_V3_REPORT_MAXRECS = 65535,IGMP_HOST_MEMBERSHIP_QUERY = 17,IGMP_v1_HOST_MEMBERSHIP_REPORT = 18,IGMP_DVMRP = 19,IGMP_PIM = 20,IGMP_v2_HOST_MEMBERSHIP_REPORT = 22,IGMP_HOST_LEAVE_MESSAGE = 23,IGMP_MTRACE_REPLY = 30,IGMP_MTRACE_QUERY = 31,IGMP_v3_HOST_MEMBERSHIP_REPORT = 34,IGMP_DO_NOTHING = 0,IGMP_MODE_IS_INCLUDE = 1,IGMP_MODE_IS_EXCLUDE = 2,IGMP_CHANGE_TO_INCLUDE_MODE = 3,IGMP_CHANGE_TO_EXCLUDE_MODE = 4,IGMP_ALLOW_NEW_SOURCES = 5,IGMP_BLOCK_OLD_SOURCES = 6,IGMP_V3_GENERAL_QUERY = 1,IGMP_V3_GROUP_QUERY = 2,IGMP_V3_GROUP_SOURCE_QUERY = 3,IGMP_V1V2_MAX_RI = 10,IGMP_MAX_HOST_REPORT_DELAY = 10,IGMP_TIMER_SCALE = 10,};
enum MACRO_IGPS {IGPS_VERSION_3 = 3,IGPS_VERSION3_LEN = 168,};
enum MACRO_IN6P {IN6P_IPV6_V6ONLY = 0x8000,IN6P_PKTINFO = 0x10000,IN6P_HOPLIMIT = 0x20000,IN6P_HOPOPTS = 0x40000,IN6P_DSTOPTS = 0x80000,IN6P_RTHDR = 0x100000,IN6P_RTHDRDSTOPTS = 0x200000,IN6P_TCLASS = 0x400000,IN6P_AUTOFLOWLABEL = 0x800000,IN6P_BINDV6ONLY = 0x1000000,IN6P_RFC2292 = 0x2000000,IN6P_MTU = 0x4000000,};
enum MACRO_INET {INET_ADDRSTRLEN = 16,};
enum MACRO_INST {INST = 0xFFFFFFFF,};
enum MACRO_INT8 {INT8_MAX = 127,INT16_MAX = 32767,INT32_MAX = 2147483647,INT64_MAX = 9223372036854775807,};
enum MACRO_IP6F {IP6F_OFF_MASK = 0xF8FF,IP6F_RESERVED_MASK = 0x600,IP6F_MORE_FRAG = 0x100,};
enum MACRO_IPV6 {IPV6_SOCKOPT_RESERVED1 = 3,IPV6_UNICAST_HOPS = 4,IPV6_MULTICAST_IF = 9,IPV6_MULTICAST_HOPS = 10,IPV6_MULTICAST_LOOP = 11,IPV6_JOIN_GROUP = 12,IPV6_LEAVE_GROUP = 13,IPV6_PORTRANGE = 14,};
enum MACRO_IP_0 {IP = 244,};
enum MACRO_ITEM {ITEM_THREADS = 0,ITEM_TASKS = 1,ITEM_VM = 2,};
enum MACRO_KERN {KERN_SUCCESS = 0,KERN_INVALID_ADDRESS = 1,KERN_PROTECTION_FAILURE = 2,KERN_NO_SPACE = 3,KERN_INVALID_ARGUMENT = 4,KERN_FAILURE = 5,KERN_RESOURCE_SHORTAGE = 6,KERN_NOT_RECEIVER = 7,KERN_NO_ACCESS = 8,KERN_MEMORY_FAILURE = 9,KERN_MEMORY_ERROR = 10,KERN_ALREADY_IN_SET = 11,KERN_NOT_IN_SET = 12,KERN_NAME_EXISTS = 13,KERN_ABORTED = 14,KERN_INVALID_NAME = 15,KERN_INVALID_TASK = 16,KERN_INVALID_RIGHT = 17,KERN_INVALID_VALUE = 18,KERN_UREFS_OVERFLOW = 19,KERN_INVALID_CAPABILITY = 20,KERN_RIGHT_EXISTS = 21,KERN_INVALID_HOST = 22,KERN_MEMORY_PRESENT = 23,KERN_MEMORY_DATA_MOVED = 24,KERN_MEMORY_RESTART_COPY = 25,KERN_INVALID_PROCESSOR_SET = 26,KERN_POLICY_LIMIT = 27,KERN_INVALID_POLICY = 28,KERN_INVALID_OBJECT = 29,KERN_ALREADY_WAITING = 30,KERN_DEFAULT_SET = 31,KERN_EXCEPTION_PROTECTED = 32,KERN_INVALID_LEDGER = 33,KERN_INVALID_MEMORY_CONTROL = 34,KERN_INVALID_SECURITY = 35,KERN_NOT_DEPRESSED = 36,KERN_TERMINATED = 37,KERN_LOCK_SET_DESTROYED = 38,KERN_LOCK_UNSTABLE = 39,KERN_LOCK_OWNED = 40,KERN_LOCK_OWNED_SELF = 41,KERN_SEMAPHORE_DESTROYED = 42,KERN_RPC_SERVER_TERMINATED = 43,KERN_RPC_TERMINATE_ORPHAN = 44,KERN_RPC_CONTINUE_ORPHAN = 45,KERN_NOT_SUPPORTED = 46,KERN_NODE_DOWN = 47,KERN_NOT_WAITING = 48,KERN_OPERATION_TIMED_OUT = 49,KERN_CODESIGN_ERROR = 50,KERN_RETURN_MAX = 256,};
enum MACRO_KIPC {KIPC_MAXSOCKBUF = 1,KIPC_SOCKBUF_WASTE = 2,KIPC_SOMAXCONN = 3,KIPC_MAX_LINKHDR = 4,KIPC_MAX_PROTOHDR = 5,KIPC_MAX_HDR = 6,KIPC_MAX_DATALEN = 7,KIPC_MBSTAT = 8,KIPC_NMBCLUSTERS = 9,KIPC_SOQLIMITCOMPAT = 10,};
enum MACRO_KMEM {KMEM_ALLOC_CODE = 19988480,KMEM_ALLOC_CODE_2 = 19988484,KMEM_FREE_CODE = 19988488,KMEM_FREE_CODE_2 = 19988492,};
enum MACRO_KMOD {KMOD_MAX_NAME = 64,KMOD_RETURN_SUCCESS = 0,KMOD_RETURN_FAILURE = 5,KMOD_INFO_VERSION = 1,};
enum MACRO_KRB5 {KRB5_DEPRECATED = 0,};
enum MACRO_KV5M {KV5M_NONE = -1760647424,KV5M_PRINCIPAL = -1760647423,KV5M_DATA = -1760647422,KV5M_KEYBLOCK = -1760647421,KV5M_CHECKSUM = -1760647420,KV5M_ENCRYPT_BLOCK = -1760647419,KV5M_ENC_DATA = -1760647418,KV5M_CRYPTOSYSTEM_ENTRY = -1760647417,KV5M_CS_TABLE_ENTRY = -1760647416,KV5M_CHECKSUM_ENTRY = -1760647415,KV5M_AUTHDATA = -1760647414,KV5M_TRANSITED = -1760647413,KV5M_ENC_TKT_PART = -1760647412,KV5M_TICKET = -1760647411,KV5M_AUTHENTICATOR = -1760647410,KV5M_TKT_AUTHENT = -1760647409,KV5M_CREDS = -1760647408,KV5M_LAST_REQ_ENTRY = -1760647407,KV5M_PA_DATA = -1760647406,KV5M_KDC_REQ = -1760647405,KV5M_ENC_KDC_REP_PART = -1760647404,KV5M_KDC_REP = -1760647403,KV5M_ERROR = -1760647402,KV5M_AP_REQ = -1760647401,KV5M_AP_REP = -1760647400,KV5M_AP_REP_ENC_PART = -1760647399,KV5M_RESPONSE = -1760647398,KV5M_SAFE = -1760647397,KV5M_PRIV = -1760647396,KV5M_PRIV_ENC_PART = -1760647395,KV5M_CRED = -1760647394,KV5M_CRED_INFO = -1760647393,KV5M_CRED_ENC_PART = -1760647392,KV5M_PWD_DATA = -1760647391,KV5M_ADDRESS = -1760647390,KV5M_KEYTAB_ENTRY = -1760647389,KV5M_CONTEXT = -1760647388,KV5M_OS_CONTEXT = -1760647387,KV5M_ALT_METHOD = -1760647386,KV5M_ETYPE_INFO_ENTRY = -1760647385,KV5M_DB_CONTEXT = -1760647384,KV5M_AUTH_CONTEXT = -1760647383,KV5M_KEYTAB = -1760647382,KV5M_RCACHE = -1760647381,KV5M_CCACHE = -1760647380,KV5M_PREAUTH_OPS = -1760647379,KV5M_SAM_CHALLENGE = -1760647378,KV5M_SAM_CHALLENGE_2 = -1760647377,KV5M_SAM_KEY = -1760647376,KV5M_ENC_SAM_RESPONSE_ENC = -1760647375,KV5M_ENC_SAM_RESPONSE_ENC_2 = -1760647374,KV5M_SAM_RESPONSE = -1760647373,KV5M_SAM_RESPONSE_2 = -1760647372,KV5M_PREDICTED_SAM_RESPONSE = -1760647371,KV5M_PASSWD_PHRASE_ELEMENT = -1760647370,KV5M_GSS_OID = -1760647369,KV5M_GSS_QUEUE = -1760647368,};
enum MACRO_LBER {LBER_CLASS_UNIVERSAL = 0x0,LBER_CLASS_APPLICATION = 0x40,LBER_CLASS_CONTEXT = 0x80,LBER_CLASS_PRIVATE = 0xC0,LBER_CLASS_MASK = 0xC0,LBER_PRIMITIVE = 0x0,LBER_CONSTRUCTED = 0x20,LBER_ENCODING_MASK = 0x20,LBER_BIG_TAG_MASK = 0x1F,LBER_MORE_TAG_MASK = 0x80,LBER_ERROR = 0xFFFFFFFFFFFFFFFF,LBER_DEFAULT = 0xFFFFFFFFFFFFFFFF,LBER_BOOLEAN = 0x1,LBER_INTEGER = 0x2,LBER_BITSTRING = 0x3,LBER_OCTETSTRING = 0x4,LBER_NULL = 0x5,LBER_ENUMERATED = 0xA,LBER_SEQUENCE = 0x30,LBER_SET = 0x31,LBER_USE_DER = 0x1,LBER_OPT_BER_OPTIONS = 0x1,LBER_OPT_BER_DEBUG = 0x2,LBER_OPT_BER_REMAINING_BYTES = 0x3,LBER_OPT_BER_TOTAL_BYTES = 0x4,LBER_OPT_BER_BYTES_TO_WRITE = 0x5,LBER_OPT_BER_MEMCTX = 0x6,LBER_OPT_DEBUG_LEVEL = 0x2,LBER_OPT_REMAINING_BYTES = 0x3,LBER_OPT_TOTAL_BYTES = 0x4,LBER_OPT_BYTES_TO_WRITE = 0x5,LBER_OPT_LOG_PRINT_FN = 0x8001,LBER_OPT_MEMORY_FNS = 0x8002,LBER_OPT_ERROR_FN = 0x8003,LBER_OPT_LOG_PRINT_FILE = 0x8004,LBER_OPT_MEMORY_INUSE = 0x8005,LBER_OPT_LOG_PROC = 0x8006,LBER_SB_OPT_GET_FD = 0x1,LBER_SB_OPT_SET_FD = 0x2,LBER_SB_OPT_HAS_IO = 0x3,LBER_SB_OPT_SET_NONBLOCK = 0x4,LBER_SB_OPT_GET_SSL = 0x7,LBER_SB_OPT_DATA_READY = 0x8,LBER_SB_OPT_SET_READAHEAD = 0x9,LBER_SB_OPT_DRAIN = 0xA,LBER_SB_OPT_NEEDS_READ = 0xB,LBER_SB_OPT_NEEDS_WRITE = 0xC,LBER_SB_OPT_GET_MAX_INCOMING = 0xD,LBER_SB_OPT_SET_MAX_INCOMING = 0xE,LBER_SB_OPT_UNGET_BUF = 0xF,LBER_SB_OPT_OPT_MAX = 0xF,LBER_SBIOD_LEVEL_PROVIDER = 0xA,LBER_SBIOD_LEVEL_TRANSPORT = 0x14,LBER_SBIOD_LEVEL_APPLICATION = 0x1E,LBER_OPT_SOCKBUF_DESC = 0x1000,LBER_OPT_SOCKBUF_OPTIONS = 0x1001,LBER_OPT_SOCKBUF_DEBUG = 0x1002,LBER_OPT_OFF = 0x0,LBER_OPT_SUCCESS = 0x0,LBER_OPT_ERROR = 0xFFFFFFFFFFFFFFFF,LBER_BV_ALLOC = 0x1,LBER_BV_NOTERM = 0x2,LBER_BV_STRING = 0x4,LBER_FLUSH_FREE_NEVER = 0x0,LBER_FLUSH_FREE_ON_SUCCESS = 0x1,LBER_FLUSH_FREE_ON_ERROR = 0x2,LBER_FLUSH_FREE_ALWAYS = 0x3,LBER_ERROR_NONE = 0x0,LBER_ERROR_PARAM = 0x1,LBER_ERROR_MEMORY = 0x2,};
enum MACRO_LDAP {LDAP_VENDOR_VERSION = 20423,LDAP_VENDOR_VERSION_MAJOR = 2,LDAP_VENDOR_VERSION_MINOR = 4,LDAP_VENDOR_VERSION_PATCH = 23,LDAP_API_FEATURE_X_OPENLDAP_THREAD_SAFE = 1,LDAP_VERSION1 = 1,LDAP_VERSION2 = 2,LDAP_VERSION3 = 3,LDAP_VERSION_MIN = 2,LDAP_VERSION = 2,LDAP_VERSION_MAX = 3,LDAP_DEPRECATED = 1,LDAP_API_VERSION = 3001,LDAP_API_FEATURE_X_OPENLDAP = 20423,LDAP_PORT = 389,};
enum MACRO_LOAD {LOAD_SCALE = 1000,};
enum MACRO_LOCK {LOCK_SH = 0x1,LOCK_EX = 0x2,LOCK_NB = 0x4,LOCK_UN = 0x8,};
enum MACRO_LONG {LONG_MIN = 0x8000000000000000,};
enum MACRO_LOOK {LOOK_UP = 1,};
enum MACRO_LTDL {LTDL_H = 1,LT_SYSTEM_H = 1,};
enum MACRO_MACH {MACH_PORT_NULL = 0,MACH_PORT_DEAD = 4294967295,MACH_PORT_RIGHT_SEND = 0,MACH_PORT_RIGHT_RECEIVE = 1,MACH_PORT_RIGHT_SEND_ONCE = 2,MACH_PORT_RIGHT_PORT_SET = 3,MACH_PORT_RIGHT_DEAD_NAME = 4,MACH_PORT_RIGHT_LABELH = 5,MACH_PORT_RIGHT_NUMBER = 6,MACH_PORT_TYPE_NONE = 0,MACH_PORT_TYPE_SEND = 65536,MACH_PORT_TYPE_RECEIVE = 131072,MACH_PORT_TYPE_SEND_ONCE = 262144,MACH_PORT_TYPE_PORT_SET = 524288,MACH_PORT_TYPE_DEAD_NAME = 1048576,MACH_PORT_TYPE_LABELH = 2097152,MACH_PORT_TYPE_SEND_RECEIVE = 196608,MACH_PORT_TYPE_SEND_RIGHTS = 327680,MACH_PORT_TYPE_PORT_RIGHTS = 458752,MACH_PORT_TYPE_PORT_OR_DEAD = 1507328,MACH_PORT_TYPE_ALL_RIGHTS = 2031616,MACH_PORT_TYPE_DNREQUEST = 2147483648,MACH_PORT_TYPE_SPREQUEST = 1073741824,MACH_PORT_TYPE_SPREQUEST_DELAYED = 536870912,MACH_PORT_SRIGHTS_NONE = 0,MACH_PORT_SRIGHTS_PRESENT = 1,MACH_PORT_QLIMIT_ZERO = 0,MACH_PORT_QLIMIT_BASIC = 5,MACH_PORT_QLIMIT_SMALL = 16,MACH_PORT_QLIMIT_LARGE = 1024,MACH_PORT_QLIMIT_KERNEL = 65536,MACH_PORT_QLIMIT_MIN = 0,MACH_PORT_QLIMIT_DEFAULT = 5,MACH_PORT_QLIMIT_MAX = 1024,MACH_PORT_LIMITS_INFO = 1,MACH_PORT_RECEIVE_STATUS = 2,MACH_PORT_DNREQUESTS_SIZE = 3,MACH_PORT_DNREQUESTS_SIZE_COUNT = 1,};
enum MACRO_MADV {MADV_NORMAL = 0,MADV_RANDOM = 1,MADV_SEQUENTIAL = 2,MADV_WILLNEED = 3,MADV_DONTNEED = 4,MADV_FREE = 5,MADV_ZERO_WIRED_PAGES = 6,MADV_FREE_REUSABLE = 7,MADV_FREE_REUSE = 8,MADV_CAN_REUSE = 9,};
enum MACRO_MATH {MATH_ERRNO = 1,MATH_ERREXCEPT = 2,};
enum MACRO_MDC2 {MDC2_BLOCK = 8,MDC2_DIGEST_LENGTH = 16,};
enum MACRO_MIME {MIME_MAX_SUPER = 16,MIME_MAX_TYPE = 256,MIME_MAX_FILTER = 256,MIME_MAX_BUFFER = 4096,};
enum MACRO_MINS {MINS_PER_HOUR = 60,};
enum MACRO_MLD6 {MLD6_LISTENER_QUERY = 130,MLD6_LISTENER_REPORT = 131,MLD6_LISTENER_DONE = 132,};
enum MACRO_MODE {MODE_S = 1,MODE_B = 2,MODE_C = 3,};
enum MACRO_MONS {MONS_PER_YEAR = 12,};
enum MACRO_MSEC {MSEC_DIRBIT = 0x8000,MSEC_VAL_MASK = 0x7FFF,};
enum MACRO_NAME {NAME_MAX = 255,NGROUPS_MAX = 16,UID_MAX = 2147483647,OPEN_MAX = 10240,PATH_MAX = 1024,};
enum MACRO_NBBY {NBBY = 8,};
enum MACRO_NBPG {NBPG = 4096,};
enum MACRO_NCCS {NCCS = 20,};
enum MACRO_NDRV {NDRV_DEMUXTYPE_ETHERTYPE = 4,NDRV_DEMUXTYPE_SAP = 5,NDRV_DEMUXTYPE_SNAP = 6,};
enum MACRO_NFS4 {NFS4_CALLBACK_PROG = 0x4E465343,NFS4_CALLBACK_PROG_VERSION = 0x1,};
enum MACRO_NFSX {NFSX_UNSIGNED = 4,NFSX_V2FH = 32,NFSX_V2FATTR = 68,NFSX_V2SATTR = 32,NFSX_V2COOKIE = 4,NFSX_V2STATFS = 20,NFSX_V3FHMAX = 64,NFSX_V3FATTR = 84,NFSX_V3SATTR = 60,NFSX_V3POSTOPATTR = 88,NFSX_V3WCCDATA = 120,NFSX_V3COOKIEVERF = 8,NFSX_V3WRITEVERF = 8,NFSX_V3CREATEVERF = 8,NFSX_V3STATFS = 52,NFSX_V3FSINFO = 48,NFSX_V3PATHCONF = 24,};
enum MACRO_NLM4 {NLM4_TEST = 1,NLM4_LOCK = 2,NLM4_CANCEL = 3,NLM4_UNLOCK = 4,NLM4_GRANTED = 5,NLM4_TEST_MSG = 6,NLM4_LOCK_MSG = 7,NLM4_CANCEL_MSG = 8,NLM4_UNLOCK_MSG = 9,NLM4_GRANTED_MSG = 10,NLM4_TEST_RES = 11,NLM4_LOCK_RES = 12,NLM4_CANCEL_RES = 13,NLM4_UNLOCK_RES = 14,NLM4_GRANTED_RES = 15,NLM4_SHARE = 20,NLM4_UNSHARE = 21,NLM4_NM_LOCK = 22,NLM4_FREE_ALL = 23,};
enum MACRO_NODE {NODE_IS_KEYED = 0,};
enum MACRO_NOTE {NOTE_TRIGGER = 0x1000000,NOTE_FFNOP = 0x0,NOTE_FFAND = 0x40000000,NOTE_FFOR = 0x80000000,NOTE_FFCOPY = 0xC0000000,NOTE_FFCTRLMASK = 0xC0000000,NOTE_FFLAGSMASK = 0xFFFFFF,NOTE_LOWAT = 0x1,NOTE_DELETE = 0x1,NOTE_WRITE = 0x2,NOTE_EXTEND = 0x4,NOTE_ATTRIB = 0x8,NOTE_LINK = 0x10,NOTE_RENAME = 0x20,NOTE_REVOKE = 0x40,NOTE_NONE = 0x80,NOTE_EXIT = 0x80000000,NOTE_FORK = 0x40000000,NOTE_EXEC = 0x20000000,NOTE_REAP = 0x10000000,NOTE_SIGNAL = 0x8000000,NOTE_EXITSTATUS = 0x4000000,NOTE_RESOURCEEND = 0x2000000,NOTE_PDATAMASK = 0xFFFFF,NOTE_PCTRLMASK = 0xFFFFFFFFFFF00000,NOTE_VM_PRESSURE = 0x80000000,NOTE_VM_PRESSURE_TERMINATE = 0x40000000,NOTE_VM_PRESSURE_SUDDEN_TERMINATE = 0x20000000,NOTE_VM_ERROR = 0x10000000,NOTE_SECONDS = 0x1,NOTE_USECONDS = 0x2,NOTE_NSECONDS = 0x4,NOTE_ABSOLUTE = 0x8,NOTE_TRACK = 0x1,NOTE_TRACKERR = 0x2,NOTE_CHILD = 0x4,};
enum MACRO_NSAP {NSAP = 69,};
enum MACRO_NSEC {NSEC_PER_SEC = 1000000000,NSEC_PER_MSEC = 1000000,};
enum MACRO_NSIG {NSIG = 32,};
enum MACRO_NSLC {NSLC = 18,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_NXHF {NXHF_INVALIDFH = 0x1,};
enum MACRO_N_NO {N_NO_DEAD_STRIP = 0x20,N_DESC_DISCARDED = 0x20,N_WEAK_REF = 0x40,N_WEAK_DEF = 0x80,N_REF_TO_WEAK = 0x80,N_ARM_THUMB_DEF = 0x8,N_SYMBOL_RESOLVER = 0x100,};
enum MACRO_OACK {OACK = 0x6,};
enum MACRO_OCSP {OCSP_DEFAULT_NONCE_LENGTH = 16,OCSP_NOCERTS = 1,OCSP_NOINTERN = 2,OCSP_NOSIGS = 4,OCSP_NOCHAIN = 8,OCSP_NOVERIFY = 16,OCSP_NOEXPLICIT = 32,OCSP_NOCASIGN = 64,OCSP_NODELEGATED = 128,OCSP_NOCHECKS = 256,OCSP_TRUSTOTHER = 512,OCSP_RESPID_KEY = 1024,OCSP_NOTIME = 2048,OCSP_RESPONSE_STATUS_SUCCESSFUL = 0,OCSP_RESPONSE_STATUS_MALFORMEDREQUEST = 1,OCSP_RESPONSE_STATUS_INTERNALERROR = 2,OCSP_RESPONSE_STATUS_TRYLATER = 3,OCSP_RESPONSE_STATUS_SIGREQUIRED = 5,OCSP_RESPONSE_STATUS_UNAUTHORIZED = 6,};
enum MACRO_ODBC {ODBC_ADD_DSN = 1,ODBC_CONFIG_DSN = 2,ODBC_REMOVE_DSN = 3,ODBC_ADD_SYS_DSN = 4,ODBC_CONFIG_SYS_DSN = 5,ODBC_REMOVE_SYS_DSN = 6,ODBC_REMOVE_DEFAULT_DSN = 7,ODBC_INSTALL_INQUIRY = 1,ODBC_INSTALL_COMPLETE = 2,ODBC_INSTALL_DRIVER = 1,ODBC_REMOVE_DRIVER = 2,ODBC_CONFIG_DRIVER = 3,ODBC_CONFIG_DRIVER_MAX = 100,ODBC_BOTH_DSN = 0,ODBC_USER_DSN = 1,ODBC_SYSTEM_DSN = 2,ODBC_ERROR_GENERAL_ERR = 1,ODBC_ERROR_INVALID_BUFF_LEN = 2,ODBC_ERROR_INVALID_HWND = 3,ODBC_ERROR_INVALID_STR = 4,ODBC_ERROR_INVALID_REQUEST_TYPE = 5,ODBC_ERROR_COMPONENT_NOT_FOUND = 6,ODBC_ERROR_INVALID_NAME = 7,ODBC_ERROR_INVALID_KEYWORD_VALUE = 8,ODBC_ERROR_INVALID_DSN = 9,ODBC_ERROR_INVALID_INF = 10,ODBC_ERROR_REQUEST_FAILED = 11,ODBC_ERROR_INVALID_PATH = 12,ODBC_ERROR_LOAD_LIB_FAILED = 13,ODBC_ERROR_INVALID_PARAM_SEQUENCE = 14,ODBC_ERROR_INVALID_LOG_FILE = 15,ODBC_ERROR_USER_CANCELED = 16,ODBC_ERROR_USAGE_UPDATE_FAILED = 17,ODBC_ERROR_CREATE_DSN_FAILED = 18,ODBC_ERROR_WRITING_SYSINFO_FAILED = 19,ODBC_ERROR_REMOVE_DSN_FAILED = 20,ODBC_ERROR_OUT_OF_MEM = 21,ODBC_ERROR_OUTPUT_STRING_TRUNCATED = 22,ODBC_ERROR_DRIVER_SPECIFIC = 23,};
enum MACRO_OK_0 {OK = 0,_SUBWIN = 1,_ENDLINE = 2,_FULLWIN = 4,_SCROLLWIN = 8,_ISPAD = 16,_HASMOVED = 32,_WRAPPED = 64,};
enum MACRO_ONLY {USERDSN_ONLY = 0,SYSTEMDSN_ONLY = 1,};
enum MACRO_OSSL {OSSL_DYNAMIC_VERSION = 0x20000,OSSL_DYNAMIC_OLDEST = 0x20000,};
enum MACRO_PAGE {PAGE_SIZE = 4096,PAGE_SHIFT = 12,PAGE_MASK = 4095,};
enum MACRO_PASS {PASS_MAX = 128,};
enum MACRO_PCAP {PCAP_VERSION_MAJOR = 2,PCAP_VERSION_MINOR = 4,PCAP_ERRBUF_SIZE = 256,PCAP_IF_LOOPBACK = 1,PCAP_ERROR = -1,PCAP_ERROR_BREAK = -2,PCAP_ERROR_NOT_ACTIVATED = -3,PCAP_ERROR_ACTIVATED = -4,PCAP_ERROR_NO_SUCH_DEVICE = -5,PCAP_ERROR_RFMON_NOTSUP = -6,PCAP_ERROR_NOT_RFMON = -7,PCAP_ERROR_PERM_DENIED = -8,PCAP_ERROR_IFACE_NOT_UP = -9,PCAP_WARNING = 1,PCAP_WARNING_PROMISC_NOTSUP = 2,PCAP_NETMASK_UNKNOWN = 4294967295,};
enum MACRO_PIPE {PIPE_BUF = 512,};
enum MACRO_PMAP {PMAP__CREATE = 0x0,PMAP__DESTROY = 0x1,PMAP__PROTECT = 0x2,PMAP__PAGE_PROTECT = 0x3,PMAP__ENTER = 0x4,PMAP__REMOVE = 0x5,PMAP__NEST = 0x6,PMAP__UNNEST = 0x7,PMAP__FLUSH_TLBS = 0x8,PMAP__UPDATE_INTERRUPT = 0x9,PMAP__ATTRIBUTE_CLEAR = 0xA,};
enum MACRO_POLL {POLL_IN = 1,POLL_OUT = 2,POLL_MSG = 3,POLL_ERR = 4,POLL_PRI = 5,POLL_HUP = 6,};
enum MACRO_PRIO {PRIO_PROCESS = 0,PRIO_PGRP = 1,PRIO_USER = 2,PRIO_DARWIN_THREAD = 3,PRIO_DARWIN_PROCESS = 4,PRIO_MIN = -20,PRIO_MAX = 20,PRIO_DARWIN_BG = 4096,PRIO_DARWIN_NONUI = 4097,};
enum MACRO_PRIV {KERN_PRIV = 0,USER_PRIV = 3,};
enum MACRO_PROC {PROC_ALL_PIDS = 1,PROC_PGRP_ONLY = 2,PROC_TTY_ONLY = 3,PROC_UID_ONLY = 4,PROC_RUID_ONLY = 5,PROC_PPID_ONLY = 6,PROC_FLAG_SYSTEM = 1,PROC_FLAG_TRACED = 2,PROC_FLAG_INEXIT = 4,PROC_FLAG_PPWAIT = 8,PROC_FLAG_LP64 = 16,PROC_FLAG_SLEADER = 32,PROC_FLAG_CTTY = 64,PROC_FLAG_CONTROLT = 128,PROC_FLAG_THCWD = 256,PROC_FLAG_PC_THROTTLE = 512,PROC_FLAG_PC_SUSP = 1024,PROC_FLAG_PC_KILL = 1536,PROC_FLAG_PC_MASK = 1536,PROC_FLAG_PA_THROTTLE = 2048,PROC_FLAG_PA_SUSP = 4096,PROC_FLAG_PSUGID = 8192,PROC_FLAG_EXEC = 16384,};
enum MACRO_PROF {PROF_VERSION = -1429577728,PROF_MAGIC_NODE = -1429577727,PROF_NO_SECTION = -1429577726,PROF_NO_RELATION = -1429577725,PROF_ADD_NOT_SECTION = -1429577724,PROF_SECTION_WITH_VALUE = -1429577723,PROF_BAD_LINK_LIST = -1429577722,PROF_BAD_GROUP_LVL = -1429577721,PROF_BAD_PARENT_PTR = -1429577720,PROF_MAGIC_ITERATOR = -1429577719,PROF_SET_SECTION_VALUE = -1429577718,PROF_EINVAL = -1429577717,PROF_READ_ONLY = -1429577716,PROF_SECTION_NOTOP = -1429577715,PROF_SECTION_SYNTAX = -1429577714,PROF_RELATION_SYNTAX = -1429577713,PROF_EXTRA_CBRACE = -1429577712,PROF_MISSING_OBRACE = -1429577711,PROF_MAGIC_PROFILE = -1429577710,PROF_MAGIC_SECTION = -1429577709,PROF_TOPSECTION_ITER_NOSUPP = -1429577708,PROF_INVALID_SECTION = -1429577707,PROF_END_OF_SECTIONS = -1429577706,PROF_BAD_NAMESET = -1429577705,PROF_NO_PROFILE = -1429577704,PROF_MAGIC_FILE = -1429577703,PROF_FAIL_OPEN = -1429577702,PROF_EXISTS = -1429577701,PROF_BAD_BOOLEAN = -1429577700,PROF_BAD_INTEGER = -1429577699,PROF_MAGIC_FILE_DATA = -1429577698,};
enum MACRO_PROP {PROP_H = 1,PROP_DEFAULT = 4,};
enum MACRO_PROT {PROT_NONE = 0x0,PROT_READ = 0x1,PROT_WRITE = 0x2,PROT_EXEC = 0x4,};
enum MACRO_PROX {PROX_FDTYPE_ATALK = 0,PROX_FDTYPE_VNODE = 1,PROX_FDTYPE_SOCKET = 2,PROX_FDTYPE_PSHM = 3,PROX_FDTYPE_PSEM = 4,PROX_FDTYPE_KQUEUE = 5,PROX_FDTYPE_PIPE = 6,PROX_FDTYPE_FSEVENTS = 7,};
enum MACRO_PSWP {PSWP = 0,PVM = 4,PINOD = 8,PRIBIO = 16,};
enum MACRO_PVFS {PVFS = 20,};
enum MACRO_RAND {RAND_MAX = 0x7FFFFFFF,};
enum MACRO_READ {READ = 1,};
enum MACRO_RING {RING_WAIT = 30,};
enum MACRO_RLIM {RLIM_INFINITY = 9223372036854775807,RLIM_SAVED_MAX = 9223372036854775807,RLIM_SAVED_CUR = 9223372036854775807,};
enum MACRO_RTAX {RTAX_DST = 0,RTAX_GATEWAY = 1,RTAX_NETMASK = 2,RTAX_GENMASK = 3,RTAX_IFP = 4,RTAX_IFA = 5,RTAX_AUTHOR = 6,RTAX_BRD = 7,RTAX_MAX = 8,};
enum MACRO_RTLD {RTLD_LAZY = 0x1,RTLD_NOW = 0x2,RTLD_LOCAL = 0x4,RTLD_GLOBAL = 0x8,RTLD_NOLOAD = 0x10,RTLD_NODELETE = 0x80,RTLD_FIRST = 0x100,RTLD_NEXT = 0xFFFFFFFFFFFFFFFF,RTLD_DEFAULT = 0xFFFFFFFFFFFFFFFE,RTLD_SELF = 0xFFFFFFFFFFFFFFFD,RTLD_MAIN_ONLY = 0xFFFFFFFFFFFFFFFB,};
enum MACRO_SACK {TCPOPT_SACK = 5,TCPOLEN_SACK = 8,};
enum MACRO_SADB {SADB_RESERVED = 0,SADB_GETSPI = 1,SADB_UPDATE = 2,SADB_ADD = 3,SADB_DELETE = 4,SADB_GET = 5,SADB_ACQUIRE = 6,SADB_REGISTER = 7,SADB_EXPIRE = 8,SADB_FLUSH = 9,SADB_DUMP = 10,SADB_X_PROMISC = 11,SADB_X_PCHANGE = 12,SADB_X_SPDUPDATE = 13,SADB_X_SPDADD = 14,SADB_X_SPDDELETE = 15,SADB_X_SPDGET = 16,SADB_X_SPDACQUIRE = 17,SADB_X_SPDDUMP = 18,SADB_X_SPDFLUSH = 19,SADB_X_SPDSETIDX = 20,SADB_X_SPDEXPIRE = 21,SADB_X_SPDDELETE2 = 22,SADB_GETSASTAT = 23,SADB_MAX = 23,SADB_EXT_RESERVED = 0,SADB_EXT_SA = 1,SADB_EXT_LIFETIME_CURRENT = 2,SADB_EXT_LIFETIME_HARD = 3,SADB_EXT_LIFETIME_SOFT = 4,SADB_EXT_ADDRESS_SRC = 5,SADB_EXT_ADDRESS_DST = 6,SADB_EXT_ADDRESS_PROXY = 7,SADB_EXT_KEY_AUTH = 8,SADB_EXT_KEY_ENCRYPT = 9,SADB_EXT_IDENTITY_SRC = 10,SADB_EXT_IDENTITY_DST = 11,SADB_EXT_SENSITIVITY = 12,SADB_EXT_PROPOSAL = 13,SADB_EXT_SUPPORTED_AUTH = 14,SADB_EXT_SUPPORTED_ENCRYPT = 15,SADB_EXT_SPIRANGE = 16,SADB_X_EXT_KMPRIVATE = 17,SADB_X_EXT_POLICY = 18,SADB_X_EXT_SA2 = 19,SADB_EXT_SESSION_ID = 20,SADB_EXT_SASTAT = 21,SADB_EXT_MAX = 21,SADB_SATYPE_UNSPEC = 0,SADB_SATYPE_AH = 2,SADB_SATYPE_ESP = 3,SADB_SATYPE_RSVP = 5,SADB_SATYPE_OSPFV2 = 6,SADB_SATYPE_RIPV2 = 7,SADB_SATYPE_MIP = 8,SADB_X_SATYPE_IPCOMP = 9,SADB_X_SATYPE_POLICY = 10,SADB_SATYPE_MAX = 11,SADB_SASTATE_LARVAL = 0,SADB_SASTATE_MATURE = 1,SADB_SASTATE_DYING = 2,SADB_SASTATE_DEAD = 3,SADB_SASTATE_MAX = 3,SADB_SAFLAGS_PFS = 1,SADB_AALG_NONE = 0,SADB_AALG_MD5HMAC = 1,SADB_AALG_SHA1HMAC = 2,SADB_AALG_MAX = 8,SADB_X_AALG_SHA2_256 = 6,SADB_X_AALG_SHA2_384 = 7,SADB_X_AALG_SHA2_512 = 8,SADB_X_AALG_MD5 = 3,SADB_X_AALG_SHA = 4,SADB_X_AALG_NULL = 5,SADB_EALG_NONE = 0,SADB_EALG_DESCBC = 1,SADB_EALG_3DESCBC = 2,SADB_EALG_NULL = 3,SADB_EALG_MAX = 12,SADB_X_EALG_CAST128CBC = 5,SADB_X_EALG_BLOWFISHCBC = 4,SADB_X_EALG_RIJNDAELCBC = 12,SADB_X_EALG_AESCBC = 12,SADB_X_EALG_AES = 12,SADB_X_CALG_NONE = 0,SADB_X_CALG_OUI = 1,SADB_X_CALG_DEFLATE = 2,SADB_X_CALG_LZS = 3,SADB_X_CALG_MAX = 4,SADB_IDENTTYPE_RESERVED = 0,SADB_IDENTTYPE_PREFIX = 1,SADB_IDENTTYPE_FQDN = 2,SADB_IDENTTYPE_USERFQDN = 3,SADB_X_IDENTTYPE_ADDR = 4,SADB_IDENTTYPE_MAX = 4,SADB_X_EXT_NONE = 0,SADB_X_EXT_OLD = 1,SADB_X_EXT_IV4B = 16,SADB_X_EXT_DERIV = 32,SADB_X_EXT_CYCSEQ = 64,SADB_X_EXT_PSEQ = 0,SADB_X_EXT_PRAND = 256,SADB_X_EXT_PZERO = 512,SADB_X_EXT_PMASK = 768,SADB_X_EXT_RAWCPI = 128,SADB_KEY_FLAGS_MAX = 4095,SADB_X_LIFETIME_ALLOCATIONS = 0,SADB_X_LIFETIME_BYTES = 1,SADB_X_LIFETIME_ADDTIME = 2,SADB_X_LIFETIME_USETIME = 3,};
enum MACRO_SALT {SALT_TYPE_AFS_LENGTH = 4294967295,SALT_TYPE_NO_LENGTH = 4294967295,};
enum MACRO_SASL {SASL_H = 1,SASL_VERSION_MAJOR = 2,SASL_VERSION_MINOR = 1,SASL_VERSION_STEP = 22,SASL_VERSION_FULL = 131350,SASL_CONTINUE = 1,SASL_OK = 0,SASL_FAIL = -1,SASL_NOMEM = -2,SASL_BUFOVER = -3,SASL_NOMECH = -4,SASL_BADPROT = -5,SASL_NOTDONE = -6,SASL_BADPARAM = -7,SASL_TRYAGAIN = -8,SASL_BADMAC = -9,SASL_NOTINIT = -12,SASL_INTERACT = 2,SASL_BADSERV = -10,SASL_WRONGMECH = -11,SASL_BADAUTH = -13,SASL_NOAUTHZ = -14,SASL_TOOWEAK = -15,SASL_ENCRYPT = -16,SASL_TRANS = -17,SASL_EXPIRED = -18,SASL_DISABLED = -19,SASL_NOUSER = -20,SASL_BADVERS = -23,SASL_UNAVAIL = -24,SASL_NOVERIFY = -26,SASL_PWLOCK = -21,SASL_NOCHANGE = -22,SASL_WEAKPASS = -27,SASL_NOUSERPASS = -28,SASL_MECHNAMEMAX = 20,SASL_SUCCESS_DATA = 4,SASL_NEED_PROXY = 8,SASL_SEC_NOPLAINTEXT = 1,SASL_SEC_NOACTIVE = 2,SASL_SEC_NODICTIONARY = 4,SASL_SEC_FORWARD_SECRECY = 8,SASL_SEC_NOANONYMOUS = 16,SASL_SEC_PASS_CREDENTIALS = 32,SASL_SEC_MUTUAL_AUTH = 64,SASL_SEC_MAXIMUM = 255,SASL_CB_LIST_END = 0,SASL_CB_GETOPT = 1,SASL_LOG_NONE = 0,SASL_LOG_ERR = 1,SASL_LOG_FAIL = 2,SASL_LOG_WARN = 3,SASL_LOG_NOTE = 4,SASL_LOG_DEBUG = 5,SASL_LOG_TRACE = 6,SASL_LOG_PASS = 7,SASL_CB_LOG = 2,SASL_CB_GETPATH = 3,SASL_CB_VERIFYFILE = 4,SASL_CB_USER = 16385,SASL_CB_AUTHNAME = 16386,SASL_CB_LANGUAGE = 16387,SASL_CB_CNONCE = 16391,SASL_CB_PASS = 16388,SASL_CB_ECHOPROMPT = 16389,SASL_CB_NOECHOPROMPT = 16390,SASL_CB_GETREALM = 16392,SASL_CB_PROXY_POLICY = 32769,SASL_CB_SERVER_USERDB_CHECKPASS = 32773,SASL_CB_SERVER_USERDB_SETPASS = 32774,SASL_CU_NONE = 0,SASL_CU_AUTHID = 1,SASL_CU_AUTHZID = 2,SASL_CB_CANON_USER = 32775,SASL_NOLOG = 1,SASL_USERNAME = 0,SASL_SSF = 1,SASL_MAXOUTBUF = 2,SASL_DEFUSERREALM = 3,SASL_GETOPTCTX = 4,SASL_CALLBACK = 7,SASL_IPLOCALPORT = 8,SASL_IPREMOTEPORT = 9,SASL_PLUGERR = 10,SASL_DELEGATEDCREDS = 11,SASL_SERVICE = 12,SASL_SERVERFQDN = 13,SASL_AUTHSOURCE = 14,SASL_MECHNAME = 15,SASL_AUTHUSER = 16,SASL_APPNAME = 17,SASL_KRB5_AUTHDATA = 700,SASL_SSF_EXTERNAL = 100,SASL_SEC_PROPS = 101,SASL_AUTH_EXTERNAL = 102,SASL_SET_CREATE = 1,SASL_SET_DISABLE = 2,SASL_SET_NOPLAIN = 4,SASL_SET_CURMECH_ONLY = 8,SASL_AUX_END = 0,};
enum MACRO_SECS {SECS_PER_MIN = 60,};
enum MACRO_SECT {NO_SECT = 0,MAX_SECT = 255,};
enum MACRO_SEED {SEED_BLOCK_SIZE = 16,SEED_KEY_LENGTH = 16,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,};
enum MACRO_SEGV {SEGV_NOOP = 0,SEGV_MAPERR = 1,SEGV_ACCERR = 2,};
enum MACRO_SHRT {SHRT_MIN = -32768,};
enum MACRO_SHUT {SHUT_RD = 0,SHUT_WR = 1,SHUT_RDWR = 2,};
enum MACRO_SIDL {SIDL = 1,SRUN = 2,};
enum MACRO_SIZE {SIZE_MAX = -1,WCHAR_MAX = 2147483647,};
enum MACRO_SLOT {NAME_SERVER_SLOT = 0,ENVIRONMENT_SLOT = 1,SERVICE_SLOT = 2,};
enum MACRO_SNMP {SNMP_CALLBACK_LIBRARY = 0,SNMP_CALLBACK_APPLICATION = 1,SNMP_CALLBACK_POST_READ_CONFIG = 0,SNMP_CALLBACK_STORE_DATA = 1,SNMP_CALLBACK_SHUTDOWN = 2,SNMP_CALLBACK_POST_PREMIB_READ_CONFIG = 3,SNMP_CALLBACK_LOGGING = 4,SNMP_CALLBACK_SESSION_INIT = 5,SNMP_CALLBACK_PRE_READ_CONFIG = 7,SNMP_CALLBACK_PRE_PREMIB_READ_CONFIG = 8,};
enum MACRO_SOCK {SOCK_STREAM = 1,SOCK_DGRAM = 2,SOCK_RAW = 3,SOCK_RDM = 4,SOCK_SEQPACKET = 5,};
enum MACRO_SSL2 {SSL2_VERSION = 0x2,SSL2_VERSION_MAJOR = 0x0,SSL2_VERSION_MINOR = 0x2,SSL2_MT_ERROR = 0x0,SSL2_MT_CLIENT_HELLO = 0x1,SSL2_MT_CLIENT_MASTER_KEY = 0x2,SSL2_MT_CLIENT_FINISHED = 0x3,SSL2_MT_SERVER_HELLO = 0x4,SSL2_MT_SERVER_VERIFY = 0x5,SSL2_MT_SERVER_FINISHED = 0x6,SSL2_MT_REQUEST_CERTIFICATE = 0x7,SSL2_MT_CLIENT_CERTIFICATE = 0x8,SSL2_PE_UNDEFINED_ERROR = 0x0,SSL2_PE_NO_CIPHER = 0x1,SSL2_PE_NO_CERTIFICATE = 0x2,SSL2_PE_BAD_CERTIFICATE = 0x4,SSL2_PE_UNSUPPORTED_CERTIFICATE_TYPE = 0x6,SSL2_CK_NULL_WITH_MD5 = 0x2000000,SSL2_CK_RC4_128_WITH_MD5 = 0x2010080,SSL2_CK_RC4_128_EXPORT40_WITH_MD5 = 0x2020080,SSL2_CK_RC2_128_CBC_WITH_MD5 = 0x2030080,SSL2_CK_RC2_128_CBC_EXPORT40_WITH_MD5 = 0x2040080,SSL2_CK_IDEA_128_CBC_WITH_MD5 = 0x2050080,SSL2_CK_DES_64_CBC_WITH_MD5 = 0x2060040,SSL2_CK_DES_64_CBC_WITH_SHA = 0x2060140,SSL2_CK_DES_192_EDE3_CBC_WITH_MD5 = 0x20700C0,SSL2_CK_DES_192_EDE3_CBC_WITH_SHA = 0x20701C0,SSL2_CK_RC4_64_WITH_MD5 = 0x2080080,SSL2_CK_DES_64_CFB64_WITH_MD5_1 = 0x2FF0800,SSL2_CK_NULL = 0x2FF0810,SSL2_CF_5_BYTE_ENC = 0x1,SSL2_CF_8_BYTE_ENC = 0x2,SSL2_CT_X509_CERTIFICATE = 0x1,SSL2_AT_MD5_WITH_RSA_ENCRYPTION = 0x1,SSL2_MAX_SSL_SESSION_ID_LENGTH = 0x20,SSL2_MAX_MASTER_KEY_LENGTH_IN_BITS = 0x100,SSL2_MAX_RECORD_LENGTH_2_BYTE_HEADER = 0x7FFF,SSL2_MAX_RECORD_LENGTH_3_BYTE_HEADER = 0x3FFF,SSL2_CHALLENGE_LENGTH = 0x10,SSL2_MIN_CHALLENGE_LENGTH = 0x10,SSL2_MAX_CHALLENGE_LENGTH = 0x20,SSL2_CONNECTION_ID_LENGTH = 0x10,SSL2_MAX_CONNECTION_ID_LENGTH = 0x10,SSL2_SSL_SESSION_ID_LENGTH = 0x10,SSL2_MAX_CERT_CHALLENGE_LENGTH = 0x20,SSL2_MIN_CERT_CHALLENGE_LENGTH = 0x10,SSL2_MAX_KEY_MATERIAL_LENGTH = 0x18,};
enum MACRO_SSL3 {SSL3_CK_SCSV = 0x30000FF,SSL3_CK_RSA_NULL_MD5 = 0x3000001,SSL3_CK_RSA_NULL_SHA = 0x3000002,SSL3_CK_RSA_RC4_40_MD5 = 0x3000003,SSL3_CK_RSA_RC4_128_MD5 = 0x3000004,SSL3_CK_RSA_RC4_128_SHA = 0x3000005,SSL3_CK_RSA_RC2_40_MD5 = 0x3000006,SSL3_CK_RSA_IDEA_128_SHA = 0x3000007,SSL3_CK_RSA_DES_40_CBC_SHA = 0x3000008,SSL3_CK_RSA_DES_64_CBC_SHA = 0x3000009,SSL3_CK_RSA_DES_192_CBC3_SHA = 0x300000A,SSL3_CK_DH_DSS_DES_40_CBC_SHA = 0x300000B,SSL3_CK_DH_DSS_DES_64_CBC_SHA = 0x300000C,SSL3_CK_DH_DSS_DES_192_CBC3_SHA = 0x300000D,SSL3_CK_DH_RSA_DES_40_CBC_SHA = 0x300000E,SSL3_CK_DH_RSA_DES_64_CBC_SHA = 0x300000F,SSL3_CK_DH_RSA_DES_192_CBC3_SHA = 0x3000010,SSL3_CK_EDH_DSS_DES_40_CBC_SHA = 0x3000011,SSL3_CK_EDH_DSS_DES_64_CBC_SHA = 0x3000012,SSL3_CK_EDH_DSS_DES_192_CBC3_SHA = 0x3000013,SSL3_CK_EDH_RSA_DES_40_CBC_SHA = 0x3000014,SSL3_CK_EDH_RSA_DES_64_CBC_SHA = 0x3000015,SSL3_CK_EDH_RSA_DES_192_CBC3_SHA = 0x3000016,SSL3_CK_ADH_RC4_40_MD5 = 0x3000017,SSL3_CK_ADH_RC4_128_MD5 = 0x3000018,SSL3_CK_ADH_DES_40_CBC_SHA = 0x3000019,SSL3_CK_ADH_DES_64_CBC_SHA = 0x300001A,SSL3_CK_ADH_DES_192_CBC_SHA = 0x300001B,SSL3_CK_FZA_DMS_NULL_SHA = 0x300001C,SSL3_CK_FZA_DMS_FZA_SHA = 0x300001D,SSL3_CK_KRB5_DES_64_CBC_SHA = 0x300001E,SSL3_CK_KRB5_DES_192_CBC3_SHA = 0x300001F,SSL3_CK_KRB5_RC4_128_SHA = 0x3000020,SSL3_CK_KRB5_IDEA_128_CBC_SHA = 0x3000021,SSL3_CK_KRB5_DES_64_CBC_MD5 = 0x3000022,SSL3_CK_KRB5_DES_192_CBC3_MD5 = 0x3000023,SSL3_CK_KRB5_RC4_128_MD5 = 0x3000024,SSL3_CK_KRB5_IDEA_128_CBC_MD5 = 0x3000025,SSL3_CK_KRB5_DES_40_CBC_SHA = 0x3000026,SSL3_CK_KRB5_RC2_40_CBC_SHA = 0x3000027,SSL3_CK_KRB5_RC4_40_SHA = 0x3000028,SSL3_CK_KRB5_DES_40_CBC_MD5 = 0x3000029,SSL3_CK_KRB5_RC2_40_CBC_MD5 = 0x300002A,SSL3_CK_KRB5_RC4_40_MD5 = 0x300002B,SSL3_SSL_SESSION_ID_LENGTH = 0x20,SSL3_MAX_SSL_SESSION_ID_LENGTH = 0x20,SSL3_MASTER_SECRET_SIZE = 0x30,SSL3_RANDOM_SIZE = 0x20,SSL3_SESSION_ID_SIZE = 0x20,SSL3_RT_HEADER_LENGTH = 0x5,SSL3_RT_MAX_EXTRA = 0x4000,SSL3_RT_MAX_PLAIN_LENGTH = 0x4000,SSL3_RT_MAX_COMPRESSED_LENGTH = 0x4400,SSL3_RT_MAX_ENCRYPTED_LENGTH = 0x4800,SSL3_RT_MAX_PACKET_SIZE = 0x4805,SSL3_RT_MAX_DATA_SIZE = 0x100000,SSL3_VERSION = 0x300,SSL3_VERSION_MAJOR = 0x3,SSL3_VERSION_MINOR = 0x0,SSL3_RT_CHANGE_CIPHER_SPEC = 0x14,SSL3_RT_ALERT = 0x15,SSL3_RT_HANDSHAKE = 0x16,SSL3_RT_APPLICATION_DATA = 0x17,SSL3_AL_WARNING = 0x1,SSL3_AL_FATAL = 0x2,SSL3_AD_CLOSE_NOTIFY = 0x0,SSL3_AD_UNEXPECTED_MESSAGE = 0xA,SSL3_AD_BAD_RECORD_MAC = 0x14,SSL3_AD_DECOMPRESSION_FAILURE = 0x1E,SSL3_AD_HANDSHAKE_FAILURE = 0x28,SSL3_AD_NO_CERTIFICATE = 0x29,SSL3_AD_BAD_CERTIFICATE = 0x2A,SSL3_AD_UNSUPPORTED_CERTIFICATE = 0x2B,SSL3_AD_CERTIFICATE_REVOKED = 0x2C,SSL3_AD_CERTIFICATE_EXPIRED = 0x2D,SSL3_AD_CERTIFICATE_UNKNOWN = 0x2E,SSL3_AD_ILLEGAL_PARAMETER = 0x2F,SSL3_CT_RSA_SIGN = 0x1,SSL3_CT_DSS_SIGN = 0x2,SSL3_CT_RSA_FIXED_DH = 0x3,SSL3_CT_DSS_FIXED_DH = 0x4,SSL3_CT_RSA_EPHEMERAL_DH = 0x5,SSL3_CT_DSS_EPHEMERAL_DH = 0x6,SSL3_CT_FORTEZZA_DMS = 0x14,SSL3_CT_NUMBER = 0x7,SSL3_FLAGS_NO_RENEGOTIATE_CIPHERS = 0x1,SSL3_FLAGS_DELAY_CLIENT_FINISHED = 0x2,SSL3_FLAGS_POP_BUFFER = 0x4,};
enum MACRO_STAT {STAT_SUCCESS = 0,STAT_ERROR = 1,STAT_TIMEOUT = 2,};
enum MACRO_STDC {STDC_HEADERS = 1,};
enum MACRO_STRU {STRU_F = 1,STRU_R = 2,STRU_P = 3,};
enum MACRO_SUSP {SUSP = 237,};
enum MACRO_SYNC {SYNC_POLICY_FIFO = 0x0,SYNC_POLICY_FIXED_PRIORITY = 0x1,SYNC_POLICY_REVERSED = 0x2,SYNC_POLICY_ORDER_MASK = 0x3,SYNC_POLICY_LIFO = 0x2,SYNC_POLICY_MAX = 0x7,};
enum MACRO_TAB0 {TAB0 = 0x0,TAB1 = 0x400,TAB2 = 0x800,};
enum MACRO_TAB3 {TAB3 = 0x4,};
enum MACRO_TALK {TALK_VERSION = 1,};
enum MACRO_TASK {TASK_INFO_MAX = 1024,TASK_BASIC_INFO_32 = 4,TASK_BASIC2_INFO_32 = 6,TASK_BASIC_INFO_64 = 5,TASK_BASIC_INFO = 5,TASK_EVENTS_INFO = 2,TASK_THREAD_TIMES_INFO = 3,TASK_ABSOLUTETIME_INFO = 1,TASK_KERNELMEMORY_INFO = 7,TASK_SECURITY_TOKEN = 13,TASK_AUDIT_TOKEN = 15,TASK_AFFINITY_TAG_INFO = 16,TASK_DYLD_INFO = 17,TASK_DYLD_ALL_IMAGE_INFO_32 = 0,TASK_DYLD_ALL_IMAGE_INFO_64 = 1,TASK_EXTMOD_INFO = 18,TASK_SCHED_TIMESHARE_INFO = 10,TASK_SCHED_RR_INFO = 11,TASK_SCHED_FIFO_INFO = 12,TASK_SCHED_INFO = 14,TASK_CATEGORY_POLICY = 1,TASK_KERNEL_PORT = 1,TASK_HOST_PORT = 2,TASK_NAME_PORT = 3,TASK_BOOTSTRAP_PORT = 4,TASK_WIRED_LEDGER_PORT = 5,TASK_PAGED_LEDGER_PORT = 6,TASK_SEATBELT_PORT = 7,TASK_GSSD_PORT = 8,TASK_ACCESS_PORT = 9,};
enum MACRO_TCP6 {TCP6_MSS = 1024,};
enum MACRO_TCPS {TCPS_CLOSED = 0,TCPS_LISTEN = 1,TCPS_SYN_SENT = 2,TCPS_SYN_RECEIVED = 3,TCPS_ESTABLISHED = 4,TCPS_CLOSE_WAIT = 5,TCPS_FIN_WAIT_1 = 6,TCPS_CLOSING = 7,TCPS_LAST_ACK = 8,TCPS_FIN_WAIT_2 = 9,TCPS_TIME_WAIT = 10,};
enum MACRO_TCPT {TCPT_NTIMERS = 5,TCPT_NTIMERS_EXT = 4,TCPT_REXMT = 0,TCPT_PERSIST = 1,TCPT_KEEP = 2,TCPT_2MSL = 3,TCPT_DELACK = 4,TCPT_MAX = 4,TCPT_NONE = 5,};
enum MACRO_TIDY {TIDY_APPLE_CHANGES = 1,};
enum MACRO_TIME {TIME_MICROS_MAX = 1000000,};
enum MACRO_TLS1 {TLS1_FLAGS_TLS_PADDING_BUG = 0x8,};
enum MACRO_TRAP {TRAP_BRKPT = 1,TRAP_TRACE = 2,};
enum MACRO_TTCP {TTCP_CLIENT_SND_WND = 4096,};
enum MACRO_TYPE {TYPE_A = 1,TYPE_E = 2,TYPE_I = 3,TYPE_L = 4,};
enum MACRO_UINT {UINT_LEAST8_MAX = 255,UINT_LEAST16_MAX = 65535,UINT_LEAST32_MAX = 4294967295,UINT_LEAST64_MAX = -1,};
enum MACRO_UNDO {UNDO = 5,};
enum MACRO_USEC {USEC_PER_SEC = 1000000,};
enum MACRO_USER {USER_ADDR_NULL = 0,};
enum MACRO_VACM {VACM_SUCCESS = 0,VACM_NOSECNAME = 1,VACM_NOGROUP = 2,VACM_NOACCESS = 3,VACM_NOVIEW = 4,VACM_NOTINVIEW = 5,VACM_NOSUCHCONTEXT = 6,VACM_SUBTREE_UNKNOWN = 7,};
enum MACRO_VEOF {VEOF = 0,VEOL = 1,VEOL2 = 2,};
enum MACRO_VIFF {VIFF_TUNNEL = 0x1,VIFF_SRCRT = 0x2,};
enum MACRO_VTAB {VTAB = 5,};
enum MACRO_WAIT {WAIT_ANY = -1,WAIT_MYPGRP = 0,};
enum MACRO_WEOF {WEOF = -1,};
enum MACRO_WILL {WILL = 251,};
enum MACRO_WINT {WINT_MAX = 2147483647,};
enum MACRO_WONT {WONT = 252,};
enum MACRO_WORD {WORD_BIT = 32,};
enum MACRO_WRDE {WRDE_APPEND = 0x1,WRDE_DOOFFS = 0x2,WRDE_NOCMD = 0x4,WRDE_REUSE = 0x8,WRDE_SHOWERR = 0x10,WRDE_UNDEF = 0x20,WRDE_BADCHAR = 0x1,WRDE_BADVAL = 0x2,WRDE_CMDSUB = 0x3,WRDE_NOSPACE = 0x4,WRDE_NOSYS = 0x5,WRDE_SYNTAX = 0x6,};
enum MACRO_X509 {X509_FILETYPE_PEM = 1,X509_FILETYPE_ASN1 = 2,X509_FILETYPE_DEFAULT = 3,};
enum MACRO_XSLT {XSLT_MAX_SORT = 15,XSLT_PAT_NO_PRIORITY = -12345789,XSLT_VAR_GLOBAL = 1,XSLT_VAR_IN_SELECT = 2,};
enum MACRO_YPOP {YPOP_CHANGE = 1,YPOP_INSERT = 2,YPOP_DELETE = 3,YPOP_STORE = 4,};
enum MACRO_ZLIB {ZLIB_VERNUM = 0x1250,ZLIB_VER_MAJOR = 0x1,ZLIB_VER_MINOR = 0x2,ZLIB_VER_REVISION = 0x5,ZLIB_VER_SUBREVISION = 0x0,};
enum MACRO__BSD {_BSD_I386_VMPARAM_H_ = 1,};
enum MACRO__DNS {_DNS_SD_H = 3201000,_DNS_SD_LIBDISPATCH = 1,};
enum MACRO__NET {_NET_IF_MIB_H = 1,};
enum MACRO__SYS {_SYS_CONF_H_ = 1,};
enum MACRO__USE {_USE_FORTIFY_LEVEL = 2,};
enum MACRO__UTX {_UTX_USERSIZE = 256,_UTX_LINESIZE = 32,_UTX_IDSIZE = 4,_UTX_HOSTSIZE = 256,};
enum MACRO_asn1 {asn1_err_base = 1859794432,};
enum MACRO_bool {false = 0,true = 1,};
enum MACRO_i386 {i386_THREAD_STATE = 1,i386_FLOAT_STATE = 2,i386_EXCEPTION_STATE = 3,};
enum MACRO_k524 {k524_err_base = -1750206208,};
enum MACRO_kdb5 {kdb5_err_base = -1780008448,};
enum MACRO_krb5 {krb5_err_base = -1765328384,};
enum MACRO_kv5m {kv5m_err_base = -1760647424,};
enum MACRO_mach {mach_host_MSG_COUNT = 21,};
enum MACRO_prof {prof_err_base = -1429577728,};
enum MACRO_xEOF {xEOF = 236,};
typedef struct _7AB3BC546F9F35ECC7BE0179CB611F91 NXArchInfo;
typedef struct ocsp_crl_id_st OCSP_CRLID;
typedef struct POLICYINFO_st POLICYINFO;
typedef struct rc5_key_st RC5_32_KEY;
typedef struct rsa_meth_st RSA_METHOD;
typedef struct SHA256state_st SHA256_CTX;
typedef struct SHA512state_st SHA512_CTX;
typedef unsigned char SQLDECIMAL;
typedef signed int SQLINTEGER;
typedef unsigned char SQLNUMERIC;
typedef void *SQLPOINTER;
typedef unsigned long long SQLTRANSID;
typedef unsigned long long SQLUBIGINT;
typedef unsigned char SQLVARCHAR;
typedef struct ssl2_state_st SSL2_STATE;
typedef struct ssl3_state_st SSL3_STATE;
typedef struct ssl_cipher_st SSL_CIPHER;
typedef struct ssl_method_st SSL_METHOD;
typedef struct slapi_attr Slapi_Attr;
typedef struct slapi_mods Slapi_Mods;
typedef struct sockbuf_io Sockbuf_IO;
typedef struct _stringlist StringList;
typedef struct _TidyBuffer TidyBuffer;
typedef struct _TidyOption *TidyOption;
typedef struct tokenizerW TokenizerW;
struct UConverter;
typedef struct USERNOTICE_st USERNOTICE;
typedef struct v3_ext_ctx X509V3_CTX;
typedef struct X509_algor_st X509_ALGOR;
typedef struct x509_store_st X509_STORE;
typedef struct x509_trust_st X509_TRUST;
typedef struct _9A7E6AE5055FB004EEAAEBA0AF2BBD44 _RuneEntry;
typedef struct _F30BA47F3A86B79CC42843AD52D50564 _RuneRange;
struct __if_clone;
struct __nl_cat_d {void *__data;int __size;};
enum __ns_class {ns_c_invalid = 0x0,ns_c_in = 0x1,ns_c_2 = 0x2,ns_c_chaos = 0x3,ns_c_hs = 0x4,ns_c_none = 0xFE,ns_c_any = 0xFF,ns_c_max = 0x10000,};
enum __ns_rcode {ns_r_noerror = 0x0,ns_r_formerr = 0x1,ns_r_servfail = 0x2,ns_r_nxdomain = 0x3,ns_r_notimpl = 0x4,ns_r_refused = 0x5,ns_r_yxdomain = 0x6,ns_r_yxrrset = 0x7,ns_r_nxrrset = 0x8,ns_r_notauth = 0x9,ns_r_notzone = 0xA,ns_r_max = 0xB,ns_r_badvers = 0x10,ns_r_badsig = 0x10,ns_r_badkey = 0x11,ns_r_badtime = 0x12,};
typedef unsigned short __uint16_t;
typedef unsigned int __uint32_t;
typedef unsigned long long __uint64_t;
struct _acl_entry;
struct _profile_t;
struct _xmlModule;
struct _xmlRMutex;
struct _xmlRegexp;
struct aes_key_st {unsigned int rd_key[60];int rounds;};
typedef struct _0B988009212B8FCCED068699BCED27D9 au_arg32_t;
typedef struct _159FB0235BDFD67877B1788BD964EBBB au_arg64_t;
typedef struct audit_fstat au_fstat_t;
typedef struct _D27F585C89C5E008406F3E8E8B85AF03 au_iport_t;
typedef struct au_qctrl au_qctrl_t;
typedef struct _0452B6BEB4BFD9ACB6DF5B39ED6AAB75 au_ret32_t;
typedef struct _EC7035EF31280ED06745154F47D7D805 au_ret64_t;
typedef struct au_tid32 au_tid32_t;
typedef struct au_tid64 au_tid64_t;
struct audit_stat {unsigned int as_version;unsigned int as_numevent;int as_generated;int as_nonattrib;int as_kernel;int as_audit;int as_auditctl;int as_enqueue;int as_written;int as_wblocked;int as_rblocked;int as_dropped;int as_totalsize;unsigned int as_memused;};
typedef signed int ber_sint_t;
typedef signed long long ber_slen_t;
typedef unsigned int ber_uint_t;
struct berelement;
struct bignum_ctx;
struct buf_mem_st {int length;char *data;int max;};
typedef struct cgi_file_s cgi_file_t;
typedef int clock_id_t;
enum cups_adv_e {CUPS_ADVANCE_NONE = 0x0,CUPS_ADVANCE_FILE = 0x1,CUPS_ADVANCE_JOB = 0x2,CUPS_ADVANCE_SET = 0x3,CUPS_ADVANCE_PAGE = 0x4,};
enum cups_cut_e {CUPS_CUT_NONE = 0x0,CUPS_CUT_FILE = 0x1,CUPS_CUT_JOB = 0x2,CUPS_CUT_SET = 0x3,CUPS_CUT_PAGE = 0x4,};
typedef struct _cups_dir_s cups_dir_t;
typedef struct cups_job_s cups_job_t;
enum cups_jog_e {CUPS_JOG_NONE = 0x0,CUPS_JOG_FILE = 0x1,CUPS_JOG_JOB = 0x2,CUPS_JOG_SET = 0x3,};
struct cups_lut_s {short intensity;short pixel;int error;};
typedef struct cups_lut_s cups_lut_t;
struct cups_rgb_s {int cube_size;int num_channels;unsigned char ****colors;int cube_index[256];int cube_mult[256];int cache_init;unsigned char black[4];unsigned char white[4];};
typedef struct cups_rgb_s cups_rgb_t;
struct curl_slist {char *data;struct curl_slist *next;};
typedef struct _74034741CFA65827A1EC04C7057A4BA2 dk_unmap_t;
typedef char *domainname;
typedef union dt_entry dt_entry_t;
typedef struct enginetime_struct enginetime;
typedef union err_code err_code_t;
enum ffi_status {FFI_OK = 0x0,FFI_BAD_TYPEDEF = 0x1,FFI_BAD_ABI = 0x2,};
struct fp_control {unsigned short invalid : 1;unsigned short denorm : 1;unsigned short zdiv : 1;unsigned short ovrfl : 1;unsigned short undfl : 1;unsigned short precis : 1;unsigned short : 2;unsigned short pc : 2;unsigned short rc : 2;unsigned short : 1;unsigned short : 3;};
typedef struct fp_stack fp_stack_t;
typedef struct fp_state fp_state_t;
enum fsh_access {fsa_NONE = 0x0,fsa_R = 0x1,fsa_W = 0x2,fsa_RW = 0x3,};
typedef struct fsobj_id fsobj_id_t;
enum gqr_status {Q_OK = 0x1,Q_NOQUOTA = 0x2,Q_EPERM = 0x3,};
typedef struct gss_name_struct *gss_name_t;
typedef struct _6EC1A26EC289C981C6C6C260C40F87D5 hash_table;
typedef void *histdata_t;
typedef struct __if_clone *if_clone_t;
struct ifa_msghdr {unsigned short ifam_msglen;unsigned char ifam_version;unsigned char ifam_type;int ifam_addrs;int ifam_flags;unsigned short ifam_index;int ifam_metric;};
struct ifmediareq {char ifm_name[16];int ifm_current;int ifm_mask;int ifm_status;int ifm_active;int ifm_count;int *ifm_ulist;};
struct index_list {struct index_list *next;char *ilabel;char isimplied;};
typedef struct _krb5_creds krb5_creds;
typedef struct _krb5_error krb5_error;
typedef short krb5_int16;
typedef int krb5_int32;
typedef unsigned char krb5_octet;
struct krb5_rc_st;
typedef char *labelstr_t;
typedef void lck_attr_t;
typedef struct ldt_desc ldt_desc_t;
typedef struct __darwin_mcontext64 *mcontext_t;
struct mig_symtab {char *ms_routine_name;int ms_routine_number;void (*ms_routine)(void);};
enum nlm4_stats {nlm4_granted = 0x0,nlm4_denied = 0x1,nlm4_denied_nolocks = 0x2,nlm4_blocked = 0x3,nlm4_denied_grace_period = 0x4,nlm4_deadlck = 0x5,nlm4_rofs = 0x6,nlm4_stale_fh = 0x7,nlm4_fbig = 0x8,nlm4_failed = 0x9,};
typedef int (*pam_func_t)(struct pam_handle *, int, int,  char **);
struct pam_handle;
typedef struct ppd_attr_s ppd_attr_t;
typedef struct ppd_emul_s ppd_emul_t;
typedef struct ppd_file_s ppd_file_t;
typedef struct ppd_size_s ppd_size_t;
struct range_list {struct range_list *next;int low;int high;};
struct rc2_key_st {unsigned int data[64];};
struct rc4_key_st {unsigned char x;unsigned char y;unsigned char data[256];};
struct rc5_key_st {int rounds;unsigned int data[34];};
typedef struct _BD619B2F7AFF7BA6F06506AA27210664 regmatch_t;
enum reply_stat {MSG_ACCEPTED = 0x0,MSG_DENIED = 0x1,};
typedef int sasl_log_t(void *context, int level,  char *message);
typedef unsigned int sasl_ssf_t;
typedef int sigjmp_buf[38];
struct slapi_attr;
struct slapi_mods;
struct st_ERR_FNS;
struct tagSQLGUID {unsigned int Data1;unsigned short Data2;unsigned short Data3;unsigned char Data4[8];};
struct tokenizerW;
typedef struct tokenstr tokenstr_t;
typedef struct tostruct_64 tostruct_t;
typedef struct tss_desc tss_desc_t;
typedef struct __darwin_ucontext ucontext_t;
typedef struct counter64 unsigned64;
typedef struct _19DEE1C64F7EC3DDB040A3404BEC0D9F utmp_array;
typedef struct vfstable *vfstable_t;
typedef struct _966BCD5BEC08EADD7CB66B18D60473E0 vm_range_t;
typedef struct _xmlCatalog xmlCatalog;
typedef struct _xmlElement xmlElement;
typedef struct _xmlExpCtxt xmlExpCtxt;
typedef struct _xmlExpNode xmlExpNode;
typedef struct _xmlHashTable xmlIDTable;
typedef struct _xmlNodeSet xmlNodeSet;
typedef struct _xmlPattern xmlPattern;
typedef struct _xmlRelaxNG xmlRelaxNG;
typedef struct _xsltKeyDef xsltKeyDef;
enum ypresptype {YPRESP_VAL = 0x1,YPRESP_KEY_VAL = 0x2,YPRESP_MAP_PARMS = 0x3,};
typedef struct ASN1_ITEM_st ASN1_ITEM;
typedef int ASN1_NULL;
typedef struct asn1_string_st ASN1_TIME;
typedef struct asn1_type_st ASN1_TYPE;
typedef struct bio_st BIO_dummy;
typedef struct _8BB03BD0BEB0A35EC535A731418A02E8 BTREEINFO;
struct BackendDB;
typedef struct dh_method DH_METHOD;
enum DYLD_BOOL {FALSE = 0x0,TRUE = 0x1,};
typedef struct ECDSA_SIG_st ECDSA_SIG;
typedef struct ec_method_st EC_METHOD;
typedef struct err_state_st ERR_STATE;
typedef struct typenode FIELDTYPE;
struct HistEvent {int num; char *str;};
typedef struct nfs_lock_msg LOCKD_MSG;
typedef struct lineinfow LineInfoW;
enum MACRO_ACL {ACL_MAX_ENTRIES = 128,ACL_UNDEFINED_ID = 0,};
enum MACRO_AES {AES_ENCRYPT = 1,AES_DECRYPT = 0,AES_MAXNR = 14,AES_BLOCK_SIZE = 16,};
enum MACRO_AIO {AIO_ALLDONE = 0x1,AIO_CANCELED = 0x2,AIO_NOTCANCELED = 0x4,};
enum MACRO_ALL {ALL_MOUSE_EVENTS = 134217727,};
enum MACRO_ALT {ALT_DIGITS = 49,};
enum MACRO_ANY {ANY_INTEGER_INDEX = -1,ANY_STRING_INDEX = 0,ANY_OID_INDEX = 0,};
enum MACRO_ARG {ARG_MAX = 262144,CHILD_MAX = 266,GID_MAX = 2147483647,LINK_MAX = 32767,};
enum MACRO_ARP {ARP_SCAN_FOUR_ARGUMENTS = 1,};
enum MACRO_ASL {ASL_LEVEL_EMERG = 0,ASL_LEVEL_ALERT = 1,ASL_LEVEL_CRIT = 2,ASL_LEVEL_ERR = 3,ASL_LEVEL_WARNING = 4,ASL_LEVEL_NOTICE = 5,ASL_LEVEL_INFO = 6,ASL_LEVEL_DEBUG = 7,ASL_QUERY_OP_CASEFOLD = 16,ASL_QUERY_OP_PREFIX = 32,ASL_QUERY_OP_SUFFIX = 64,ASL_QUERY_OP_SUBSTRING = 96,ASL_QUERY_OP_NUMERIC = 128,ASL_QUERY_OP_REGEX = 256,ASL_QUERY_OP_EQUAL = 1,ASL_QUERY_OP_GREATER = 2,ASL_QUERY_OP_GREATER_EQUAL = 3,ASL_QUERY_OP_LESS = 4,ASL_QUERY_OP_LESS_EQUAL = 5,ASL_QUERY_OP_NOT_EQUAL = 6,ASL_QUERY_OP_TRUE = 7,ASL_TYPE_MSG = 0,ASL_TYPE_QUERY = 1,ASL_FILTER_MASK_EMERG = 1,ASL_FILTER_MASK_ALERT = 2,ASL_FILTER_MASK_CRIT = 4,ASL_FILTER_MASK_ERR = 8,ASL_FILTER_MASK_WARNING = 16,ASL_FILTER_MASK_NOTICE = 32,ASL_FILTER_MASK_INFO = 64,ASL_FILTER_MASK_DEBUG = 128,ASL_OPT_STDERR = 1,ASL_OPT_NO_DELAY = 2,ASL_OPT_NO_REMOTE = 4,};
enum MACRO_ASN {ASN_BOOLEAN = 0x1,ASN_INTEGER = 0x2,ASN_BIT_STR = 0x3,ASN_OCTET_STR = 0x4,ASN_NULL = 0x5,ASN_OBJECT_ID = 0x6,ASN_SEQUENCE = 0x10,ASN_SET = 0x11,ASN_UNIVERSAL = 0x0,ASN_APPLICATION = 0x40,ASN_CONTEXT = 0x80,ASN_PRIVATE = 0xC0,ASN_PRIMITIVE = 0x0,ASN_CONSTRUCTOR = 0x20,ASN_LONG_LEN = 0x80,ASN_EXTENSION_ID = 0x1F,ASN_BIT8 = 0x80,ASN_OPAQUE_TAG1 = 0x9F,ASN_OPAQUE_TAG2 = 0x30,ASN_OPAQUE_TAG2U = 0x2F,ASN_APP_OPAQUE = 0x44,ASN_APP_COUNTER64 = 0x46,ASN_APP_FLOAT = 0x48,ASN_APP_DOUBLE = 0x49,ASN_APP_I64 = 0x4A,ASN_APP_U64 = 0x4B,ASN_APP_UNION = 0xC1,ASN_OPAQUE_COUNTER64 = 0x76,ASN_OPAQUE_COUNTER64_MX_BER_LEN = 0xC,ASN_OPAQUE_FLOAT = 0x78,ASN_OPAQUE_FLOAT_BER_LEN = 0x7,ASN_OPAQUE_DOUBLE = 0x79,ASN_OPAQUE_DOUBLE_BER_LEN = 0xB,ASN_OPAQUE_I64 = 0x7A,ASN_OPAQUE_I64_MX_BER_LEN = 0xB,ASN_OPAQUE_U64 = 0x7B,ASN_OPAQUE_U64_MX_BER_LEN = 0xC,ASN_PRIV_INCL_RANGE = 0xC2,ASN_PRIV_EXCL_RANGE = 0xC3,ASN_PRIV_DELEGATED = 0xC5,ASN_PRIV_IMPLIED_OCTET_STR = 0xC4,ASN_PRIV_IMPLIED_OBJECT_ID = 0xC6,ASN_PRIV_RETRY = 0xC7,};
enum MACRO_ATF {ATF_INUSE = 0x1,ATF_COM = 0x2,ATF_PERM = 0x4,ATF_PUBL = 0x8,ATF_USETRAILERS = 0x10,};
enum MACRO_AUC {AUC_UNSET = 0,AUC_AUDITING = 1,AUC_NOAUDIT = 2,AUC_DISABLED = -1,};
enum MACRO_AUE {AUE_NULL = 0,AUE_EXIT = 1,AUE_FORK = 2,AUE_FORKALL = 2,AUE_OPEN = 3,AUE_CREAT = 4,AUE_LINK = 5,AUE_UNLINK = 6,AUE_DELETE = 6,AUE_EXEC = 7,AUE_CHDIR = 8,AUE_MKNOD = 9,AUE_CHMOD = 10,AUE_CHOWN = 11,AUE_UMOUNT = 12,AUE_JUNK = 13,AUE_ACCESS = 14,AUE_KILL = 15,AUE_STAT = 16,AUE_LSTAT = 17,AUE_ACCT = 18,AUE_MCTL = 19,AUE_REBOOT = 20,AUE_SYMLINK = 21,AUE_READLINK = 22,AUE_EXECVE = 23,AUE_CHROOT = 24,AUE_VFORK = 25,AUE_SETGROUPS = 26,AUE_SETPGRP = 27,AUE_SWAPON = 28,AUE_SETHOSTNAME = 29,AUE_FCNTL = 30,AUE_SETPRIORITY = 31,AUE_CONNECT = 32,AUE_ACCEPT = 33,AUE_BIND = 34,AUE_SETSOCKOPT = 35,AUE_VTRACE = 36,AUE_SETTIMEOFDAY = 37,AUE_FCHOWN = 38,AUE_FCHMOD = 39,AUE_SETREUID = 40,AUE_SETREGID = 41,AUE_RENAME = 42,AUE_TRUNCATE = 43,AUE_FTRUNCATE = 44,AUE_FLOCK = 45,AUE_SHUTDOWN = 46,AUE_MKDIR = 47,AUE_RMDIR = 48,AUE_UTIMES = 49,AUE_ADJTIME = 50,AUE_SETRLIMIT = 51,AUE_KILLPG = 52,AUE_NFS_SVC = 53,AUE_STATFS = 54,AUE_FSTATFS = 55,AUE_UNMOUNT = 56,AUE_ASYNC_DAEMON = 57,AUE_NFS_GETFH = 58,AUE_SETDOMAINNAME = 59,AUE_QUOTACTL = 60,AUE_EXPORTFS = 61,AUE_MOUNT = 62,AUE_SEMSYS = 63,AUE_MSGSYS = 64,AUE_SHMSYS = 65,AUE_BSMSYS = 66,AUE_RFSSYS = 67,AUE_FCHDIR = 68,AUE_FCHROOT = 69,AUE_VPIXSYS = 70,AUE_PATHCONF = 71,AUE_OPEN_R = 72,AUE_OPEN_RC = 73,AUE_OPEN_RT = 74,AUE_OPEN_RTC = 75,AUE_OPEN_W = 76,AUE_OPEN_WC = 77,AUE_OPEN_WT = 78,AUE_OPEN_WTC = 79,AUE_OPEN_RW = 80,AUE_OPEN_RWC = 81,AUE_OPEN_RWT = 82,AUE_OPEN_RWTC = 83,AUE_MSGCTL = 84,AUE_MSGCTL_RMID = 85,AUE_MSGCTL_SET = 86,AUE_MSGCTL_STAT = 87,AUE_MSGGET = 88,AUE_MSGRCV = 89,AUE_MSGSND = 90,AUE_SHMCTL = 91,AUE_SHMCTL_RMID = 92,AUE_SHMCTL_SET = 93,AUE_SHMCTL_STAT = 94,AUE_SHMGET = 95,AUE_SHMAT = 96,AUE_SHMDT = 97,AUE_SEMCTL = 98,AUE_SEMCTL_RMID = 99,AUE_SEMCTL_SET = 100,AUE_SEMCTL_STAT = 101,AUE_SEMCTL_GETNCNT = 102,AUE_SEMCTL_GETPID = 103,AUE_SEMCTL_GETVAL = 104,AUE_SEMCTL_GETALL = 105,AUE_SEMCTL_GETZCNT = 106,AUE_SEMCTL_SETVAL = 107,AUE_SEMCTL_SETALL = 108,AUE_SEMGET = 109,AUE_SEMOP = 110,AUE_CORE = 111,AUE_CLOSE = 112,AUE_SYSTEMBOOT = 113,AUE_ASYNC_DAEMON_EXIT = 114,AUE_NFSSVC_EXIT = 115,AUE_WRITEL = 128,AUE_WRITEVL = 129,AUE_GETAUID = 130,AUE_SETAUID = 131,AUE_GETAUDIT = 132,AUE_SETAUDIT = 133,AUE_GETUSERAUDIT = 134,AUE_SETUSERAUDIT = 135,AUE_AUDITSVC = 136,AUE_AUDITUSER = 137,AUE_AUDITON = 138,AUE_AUDITON_GTERMID = 139,AUE_AUDITON_STERMID = 140,AUE_AUDITON_GPOLICY = 141,AUE_AUDITON_SPOLICY = 142,AUE_AUDITON_GQCTRL = 145,AUE_AUDITON_SQCTRL = 146,AUE_GETKERNSTATE = 147,AUE_SETKERNSTATE = 148,AUE_GETPORTAUDIT = 149,AUE_AUDITSTAT = 150,AUE_REVOKE = 151,AUE_MAC = 152,AUE_ENTERPROM = 153,AUE_EXITPROM = 154,AUE_IFLOAT = 155,AUE_PFLOAT = 156,AUE_UPRIV = 157,AUE_IOCTL = 158,AUE_SOCKET = 183,AUE_SENDTO = 184,AUE_PIPE = 185,AUE_SOCKETPAIR = 186,AUE_SEND = 187,AUE_SENDMSG = 188,AUE_RECV = 189,AUE_RECVMSG = 190,AUE_RECVFROM = 191,AUE_READ = 192,AUE_GETDENTS = 193,AUE_LSEEK = 194,AUE_WRITE = 195,AUE_WRITEV = 196,AUE_NFS = 197,AUE_READV = 198,AUE_OSTAT = 199,AUE_SETUID = 200,AUE_STIME = 201,AUE_UTIME = 202,AUE_NICE = 203,AUE_OSETPGRP = 204,AUE_SETGID = 205,AUE_READL = 206,AUE_READVL = 207,AUE_FSTAT = 208,AUE_DUP2 = 209,AUE_MMAP = 210,AUE_AUDIT = 211,AUE_PRIOCNTLSYS = 212,AUE_MUNMAP = 213,AUE_SETEGID = 214,AUE_SETEUID = 215,AUE_PUTMSG = 216,AUE_GETMSG = 217,AUE_PUTPMSG = 218,AUE_GETPMSG = 219,AUE_AUDITSYS = 220,AUE_AUDITON_GETKMASK = 221,AUE_AUDITON_SETKMASK = 222,AUE_AUDITON_GETCWD = 223,AUE_AUDITON_GETCAR = 224,AUE_AUDITON_GETSTAT = 225,AUE_AUDITON_SETSTAT = 226,AUE_AUDITON_SETUMASK = 227,AUE_AUDITON_SETSMASK = 228,AUE_AUDITON_GETCOND = 229,AUE_AUDITON_SETCOND = 230,AUE_AUDITON_GETCLASS = 231,AUE_AUDITON_SETCLASS = 232,AUE_FUSERS = 233,AUE_STATVFS = 234,AUE_XSTAT = 235,AUE_LXSTAT = 236,AUE_LCHOWN = 237,AUE_MEMCNTL = 238,AUE_SYSINFO = 239,AUE_XMKNOD = 240,AUE_FORK1 = 241,AUE_MODCTL = 242,AUE_MODLOAD = 243,AUE_MODUNLOAD = 244,AUE_MODCONFIG = 245,AUE_MODADDMAJ = 246,AUE_SOCKACCEPT = 247,AUE_SOCKCONNECT = 248,AUE_SOCKSEND = 249,AUE_SOCKRECEIVE = 250,AUE_ACLSET = 251,AUE_FACLSET = 252,AUE_DOORFS = 253,AUE_DOORFS_DOOR_CALL = 254,AUE_DOORFS_DOOR_RETURN = 255,AUE_DOORFS_DOOR_CREATE = 256,AUE_DOORFS_DOOR_REVOKE = 257,AUE_DOORFS_DOOR_INFO = 258,AUE_DOORFS_DOOR_CRED = 259,AUE_DOORFS_DOOR_BIND = 260,AUE_DOORFS_DOOR_UNBIND = 261,AUE_P_ONLINE = 262,AUE_PROCESSOR_BIND = 263,AUE_INST_SYNC = 264,AUE_SOCKCONFIG = 265,AUE_SETAUDIT_ADDR = 266,AUE_GETAUDIT_ADDR = 267,AUE_UMOUNT2 = 268,AUE_FSAT = 269,AUE_OPENAT_R = 270,AUE_OPENAT_RC = 271,AUE_OPENAT_RT = 272,AUE_OPENAT_RTC = 273,AUE_OPENAT_W = 274,AUE_OPENAT_WC = 275,AUE_OPENAT_WT = 276,AUE_OPENAT_WTC = 277,AUE_OPENAT_RW = 278,AUE_OPENAT_RWC = 279,AUE_OPENAT_RWT = 280,AUE_OPENAT_RWTC = 281,AUE_RENAMEAT = 282,AUE_FSTATAT = 283,AUE_FCHOWNAT = 284,AUE_FUTIMESAT = 285,AUE_UNLINKAT = 286,AUE_CLOCK_SETTIME = 287,AUE_NTP_ADJTIME = 288,AUE_SETPPRIV = 289,AUE_MODDEVPLCY = 290,AUE_MODADDPRIV = 291,AUE_CRYPTOADM = 292,AUE_CONFIGKSSL = 293,AUE_BRANDSYS = 294,AUE_PF_POLICY_ADDRULE = 295,AUE_PF_POLICY_DELRULE = 296,AUE_PF_POLICY_CLONE = 297,AUE_PF_POLICY_FLIP = 298,AUE_PF_POLICY_FLUSH = 299,AUE_PF_POLICY_ALGS = 300,AUE_PORTFS = 301,AUE_DARWIN_GETFSSTAT = 301,AUE_DARWIN_PTRACE = 302,AUE_DARWIN_CHFLAGS = 303,AUE_DARWIN_FCHFLAGS = 304,AUE_DARWIN_PROFILE = 305,AUE_DARWIN_KTRACE = 306,AUE_DARWIN_SETLOGIN = 307,AUE_DARWIN_REBOOT = 308,AUE_DARWIN_REVOKE = 309,AUE_DARWIN_UMASK = 310,AUE_DARWIN_MPROTECT = 311,AUE_DARWIN_SETPRIORITY = 312,AUE_DARWIN_SETTIMEOFDAY = 313,AUE_DARWIN_FLOCK = 314,AUE_DARWIN_MKFIFO = 315,AUE_DARWIN_POLL = 316,AUE_DARWIN_SOCKETPAIR = 317,AUE_DARWIN_FUTIMES = 318,AUE_DARWIN_SETSID = 319,AUE_DARWIN_SETPRIVEXEC = 320,AUE_DARWIN_NFSSVC = 321,AUE_DARWIN_GETFH = 322,AUE_DARWIN_QUOTACTL = 323,AUE_DARWIN_ADDPROFILE = 324,AUE_DARWIN_KDEBUGTRACE = 325,AUE_DARWIN_FSTAT = 326,AUE_DARWIN_FPATHCONF = 327,AUE_DARWIN_GETDIRENTRIES = 328,AUE_DARWIN_TRUNCATE = 329,AUE_DARWIN_FTRUNCATE = 330,AUE_DARWIN_SYSCTL = 331,AUE_DARWIN_MLOCK = 332,AUE_DARWIN_MUNLOCK = 333,AUE_DARWIN_UNDELETE = 334,AUE_DARWIN_GETATTRLIST = 335,AUE_DARWIN_SETATTRLIST = 336,AUE_DARWIN_GETDIRENTRIESATTR = 337,AUE_DARWIN_EXCHANGEDATA = 338,AUE_DARWIN_SEARCHFS = 339,AUE_DARWIN_MINHERIT = 340,AUE_DARWIN_SEMCONFIG = 341,AUE_DARWIN_SEMOPEN = 342,AUE_DARWIN_SEMCLOSE = 343,AUE_DARWIN_SEMUNLINK = 344,AUE_DARWIN_SHMOPEN = 345,AUE_DARWIN_SHMUNLINK = 346,AUE_DARWIN_LOADSHFILE = 347,AUE_DARWIN_RESETSHFILE = 348,AUE_DARWIN_NEWSYSTEMSHREG = 349,AUE_DARWIN_PTHREADKILL = 350,AUE_DARWIN_PTHREADSIGMASK = 351,AUE_DARWIN_AUDITCTL = 352,AUE_DARWIN_RFORK = 353,AUE_DARWIN_LCHMOD = 354,AUE_DARWIN_SWAPOFF = 355,AUE_DARWIN_INITPROCESS = 356,AUE_DARWIN_MAPFD = 357,AUE_DARWIN_TASKFORPID = 358,AUE_DARWIN_PIDFORTASK = 359,AUE_DARWIN_SYSCTL_NONADMIN = 360,AUE_DARWIN_COPYFILE = 361,AUE_GETFSSTAT = 43001,AUE_PTRACE = 43002,AUE_CHFLAGS = 43003,AUE_FCHFLAGS = 43004,AUE_PROFILE = 43005,AUE_KTRACE = 43006,AUE_SETLOGIN = 43007,AUE_OPENBSM_REVOKE = 43008,AUE_UMASK = 43009,AUE_MPROTECT = 43010,AUE_MKFIFO = 43011,AUE_POLL = 43012,AUE_FUTIMES = 43013,AUE_SETSID = 43014,AUE_SETPRIVEXEC = 43015,AUE_ADDPROFILE = 43016,AUE_KDEBUGTRACE = 43017,AUE_KDBUGTRACE = 43017,AUE_OPENBSM_FSTAT = 43018,AUE_FPATHCONF = 43019,AUE_GETDIRENTRIES = 43020,AUE_SYSCTL = 43021,AUE_MLOCK = 43022,AUE_MUNLOCK = 43023,AUE_UNDELETE = 43024,AUE_GETATTRLIST = 43025,AUE_SETATTRLIST = 43026,AUE_GETDIRENTRIESATTR = 43027,AUE_EXCHANGEDATA = 43028,AUE_SEARCHFS = 43029,AUE_MINHERIT = 43030,AUE_SEMCONFIG = 43031,AUE_SEMOPEN = 43032,AUE_SEMCLOSE = 43033,AUE_SEMUNLINK = 43034,AUE_SHMOPEN = 43035,AUE_SHMUNLINK = 43036,AUE_LOADSHFILE = 43037,AUE_RESETSHFILE = 43038,AUE_NEWSYSTEMSHREG = 43039,AUE_PTHREADKILL = 43040,AUE_PTHREADSIGMASK = 43041,AUE_AUDITCTL = 43042,AUE_RFORK = 43043,AUE_LCHMOD = 43044,AUE_SWAPOFF = 43045,AUE_INITPROCESS = 43046,AUE_MAPFD = 43047,AUE_TASKFORPID = 43048,AUE_PIDFORTASK = 43049,AUE_SYSCTL_NONADMIN = 43050,AUE_COPYFILE = 43051,AUE_LUTIMES = 43052,AUE_LCHFLAGS = 43053,AUE_SENDFILE = 43054,AUE_USELIB = 43055,AUE_GETRESUID = 43056,AUE_SETRESUID = 43057,AUE_GETRESGID = 43058,AUE_SETRESGID = 43059,AUE_WAIT4 = 43060,AUE_LGETFH = 43061,AUE_FHSTATFS = 43062,AUE_FHOPEN = 43063,AUE_FHSTAT = 43064,AUE_JAIL = 43065,AUE_EACCESS = 43066,AUE_KQUEUE = 43067,AUE_KEVENT = 43068,AUE_FSYNC = 43069,AUE_NMOUNT = 43070,AUE_BDFLUSH = 43071,AUE_SETFSUID = 43072,AUE_SETFSGID = 43073,AUE_PERSONALITY = 43074,AUE_SCHED_GETSCHEDULER = 43075,AUE_SCHED_SETSCHEDULER = 43076,AUE_PRCTL = 43077,AUE_GETCWD = 43078,AUE_CAPGET = 43079,AUE_CAPSET = 43080,AUE_PIVOT_ROOT = 43081,AUE_RTPRIO = 43082,AUE_SCHED_GETPARAM = 43083,AUE_SCHED_SETPARAM = 43084,AUE_SCHED_GET_PRIORITY_MAX = 43085,AUE_SCHED_GET_PRIORITY_MIN = 43086,AUE_SCHED_RR_GET_INTERVAL = 43087,AUE_ACL_GET_FILE = 43088,AUE_ACL_SET_FILE = 43089,AUE_ACL_GET_FD = 43090,AUE_ACL_SET_FD = 43091,AUE_ACL_DELETE_FILE = 43092,AUE_ACL_DELETE_FD = 43093,AUE_ACL_CHECK_FILE = 43094,AUE_ACL_CHECK_FD = 43095,AUE_ACL_GET_LINK = 43096,AUE_ACL_SET_LINK = 43097,AUE_ACL_DELETE_LINK = 43098,AUE_ACL_CHECK_LINK = 43099,AUE_SYSARCH = 43100,AUE_EXTATTRCTL = 43101,AUE_EXTATTR_GET_FILE = 43102,AUE_EXTATTR_SET_FILE = 43103,AUE_EXTATTR_LIST_FILE = 43104,AUE_EXTATTR_DELETE_FILE = 43105,AUE_EXTATTR_GET_FD = 43106,AUE_EXTATTR_SET_FD = 43107,AUE_EXTATTR_LIST_FD = 43108,AUE_EXTATTR_DELETE_FD = 43109,AUE_EXTATTR_GET_LINK = 43110,AUE_EXTATTR_SET_LINK = 43111,AUE_EXTATTR_LIST_LINK = 43112,AUE_EXTATTR_DELETE_LINK = 43113,AUE_KENV = 43114,AUE_JAIL_ATTACH = 43115,AUE_SYSCTL_WRITE = 43116,AUE_IOPERM = 43117,AUE_READDIR = 43118,AUE_IOPL = 43119,AUE_VM86 = 43120,AUE_MAC_GET_PROC = 43121,AUE_MAC_SET_PROC = 43122,AUE_MAC_GET_FD = 43123,AUE_MAC_GET_FILE = 43124,AUE_MAC_SET_FD = 43125,AUE_MAC_SET_FILE = 43126,AUE_MAC_SYSCALL = 43127,AUE_MAC_GET_PID = 43128,AUE_MAC_GET_LINK = 43129,AUE_MAC_SET_LINK = 43130,AUE_MAC_EXECVE = 43131,AUE_GETPATH_FROMFD = 43132,AUE_GETPATH_FROMADDR = 43133,AUE_MQ_OPEN = 43134,AUE_MQ_SETATTR = 43135,AUE_MQ_TIMEDRECEIVE = 43136,AUE_MQ_TIMEDSEND = 43137,AUE_MQ_NOTIFY = 43138,AUE_MQ_UNLINK = 43139,AUE_LISTEN = 43140,AUE_MLOCKALL = 43141,AUE_MUNLOCKALL = 43142,AUE_CLOSEFROM = 43143,AUE_FEXECVE = 43144,AUE_FACCESSAT = 43145,AUE_FCHMODAT = 43146,AUE_LINKAT = 43147,AUE_MKDIRAT = 43148,AUE_MKFIFOAT = 43149,AUE_MKNODAT = 43150,AUE_READLINKAT = 43151,AUE_SYMLINKAT = 43152,AUE_MAC_GETFSSTAT = 43153,AUE_MAC_GET_MOUNT = 43154,AUE_MAC_GET_LCID = 43155,AUE_MAC_GET_LCTX = 43156,AUE_MAC_SET_LCTX = 43157,AUE_MAC_MOUNT = 43158,AUE_GETLCID = 43159,AUE_SETLCID = 43160,AUE_TASKNAMEFORPID = 43161,AUE_ACCESS_EXTENDED = 43162,AUE_CHMOD_EXTENDED = 43163,AUE_FCHMOD_EXTENDED = 43164,AUE_FSTAT_EXTENDED = 43165,AUE_LSTAT_EXTENDED = 43166,AUE_MKDIR_EXTENDED = 43167,AUE_MKFIFO_EXTENDED = 43168,AUE_OPEN_EXTENDED = 43169,AUE_OPEN_EXTENDED_R = 43170,AUE_OPEN_EXTENDED_RC = 43171,AUE_OPEN_EXTENDED_RT = 43172,AUE_OPEN_EXTENDED_RTC = 43173,AUE_OPEN_EXTENDED_W = 43174,AUE_OPEN_EXTENDED_WC = 43175,AUE_OPEN_EXTENDED_WT = 43176,AUE_OPEN_EXTENDED_WTC = 43177,AUE_OPEN_EXTENDED_RW = 43178,AUE_OPEN_EXTENDED_RWC = 43179,AUE_OPEN_EXTENDED_RWT = 43180,AUE_OPEN_EXTENDED_RWTC = 43181,AUE_STAT_EXTENDED = 43182,AUE_UMASK_EXTENDED = 43183,AUE_OPENAT = 43184,AUE_POSIX_OPENPT = 43185,AUE_CAP_NEW = 43186,AUE_CAP_GETRIGHTS = 43187,AUE_CAP_ENTER = 43188,AUE_CAP_GETMODE = 43189,AUE_POSIX_SPAWN = 43190,AUE_FSGETPATH = 43191,AUE_PREAD = 43192,AUE_PWRITE = 43193,AUE_FSCTL = 43194,AUE_FFSCTL = 43195,AUE_LPATHCONF = 43196,AUE_PDFORK = 43197,AUE_PDKILL = 43198,AUE_PDGETPID = 43199,AUE_PDWAIT = 43200,AUE_SESSION_START = 44901,AUE_SESSION_UPDATE = 44902,AUE_SESSION_END = 44903,AUE_SESSION_CLOSE = 44904,AUE_O_CREAT = 83,AUE_O_EXECVE = 0,AUE_O_SBREAK = 0,AUE_O_LSEEK = 0,AUE_O_MOUNT = 0,AUE_O_UMOUNT = 0,AUE_O_STAT = 16,AUE_O_LSTAT = 17,AUE_O_FSTAT = 208,AUE_O_GETPAGESIZE = 0,AUE_O_VREAD = 0,AUE_O_VWRITE = 0,AUE_O_MMAP = 210,AUE_O_VADVISE = 0,AUE_O_VHANGUP = 0,AUE_O_VLIMIT = 0,AUE_O_WAIT = 0,AUE_O_GETHOSTNAME = 0,AUE_O_SETHOSTNAME = 43021,AUE_O_GETDOPT = 0,AUE_O_SETDOPT = 0,AUE_O_ACCEPT = 0,AUE_O_SEND = 188,AUE_O_RECV = 190,AUE_O_VTIMES = 0,AUE_O_SIGVEC = 0,AUE_O_SIGBLOCK = 0,AUE_O_SIGSETMASK = 0,AUE_O_SIGSTACK = 0,AUE_O_RECVMSG = 190,AUE_O_SENDMSG = 188,AUE_O_VTRACE = 0,AUE_O_RESUBA = 0,AUE_O_RECVFROM = 191,AUE_O_SETREUID = 40,AUE_O_SETREGID = 41,AUE_O_GETDIRENTRIES = 43020,AUE_O_TRUNCATE = 43,AUE_O_FTRUNCATE = 44,AUE_O_GETPEERNAME = 0,AUE_O_GETHOSTID = 0,AUE_O_SETHOSTID = 0,AUE_O_GETRLIMIT = 0,AUE_O_SETRLIMIT = 51,AUE_O_KILLPG = 15,AUE_O_SETQUOTA = 0,AUE_O_QUOTA = 0,AUE_O_GETSOCKNAME = 0,AUE_O_ASYNCDAEMON = 0,AUE_O_GETDOMAINNAME = 0,AUE_O_SETDOMAINNAME = 43021,AUE_O_PCFS_MOUNT = 0,AUE_O_EXPORTFS = 0,AUE_O_USTATE = 0,AUE_O_WAIT3 = 0,AUE_O_RPAUSE = 0,AUE_O_GETDENTS = 0,AUE_ATGETMSG = 0,AUE_ATPUTMSG = 0,AUE_ATSOCKET = 0,AUE_ATPGETREQ = 0,AUE_ATPGETRSP = 0,AUE_ATPSNDREQ = 0,AUE_ATPSNDRSP = 0,AUE_BSDTHREADCREATE = 0,AUE_BSDTHREADTERMINATE = 0,AUE_BSDTHREADREGISTER = 0,AUE_CHUD = 0,AUE_CSOPS = 0,AUE_DUP = 0,AUE_FDATASYNC = 0,AUE_FGETATTRLIST = 0,AUE_FGETXATTR = 0,AUE_FLISTXATTR = 0,AUE_FREMOVEXATTR = 0,AUE_FSETATTRLIST = 0,AUE_FSETXATTR = 0,AUE_FSTATFS64 = 0,AUE_FSTATV = 0,AUE_FSTAT64 = 0,AUE_FSTAT64_EXTENDED = 0,AUE_GCCONTROL = 0,AUE_GETDIRENTRIES64 = 0,AUE_GETDTABLESIZE = 0,AUE_GETEGID = 0,AUE_GETEUID = 0,AUE_GETFSSTAT64 = 0,AUE_GETGID = 0,AUE_GETGROUPS = 0,AUE_GETITIMER = 0,AUE_GETLOGIN = 0,AUE_GETPEERNAME = 0,AUE_GETPGID = 0,AUE_GETPGRP = 0,AUE_GETPID = 0,AUE_GETPPID = 0,AUE_GETPRIORITY = 0,AUE_GETRLIMIT = 0,AUE_GETRUSAGE = 0,AUE_GETSGROUPS = 0,AUE_GETSID = 0,AUE_GETSOCKNAME = 0,AUE_GETTIMEOFDAY = 0,AUE_GETTID = 0,AUE_GETUID = 0,AUE_GETSOCKOPT = 0,AUE_GETWGROUPS = 0,AUE_GETXATTR = 0,AUE_IDENTITYSVC = 0,AUE_INITGROUPS = 0,AUE_IOPOLICYSYS = 0,AUE_ISSETUGID = 0,AUE_LIOLISTIO = 0,AUE_LISTXATTR = 0,AUE_LSTATV = 0,AUE_LSTAT64 = 0,AUE_LSTAT64_EXTENDED = 0,AUE_MADVISE = 0,AUE_MINCORE = 0,AUE_MKCOMPLEX = 0,AUE_MODWATCH = 0,AUE_MSGCL = 0,AUE_MSYNC = 0,AUE_PREADV = 0,AUE_PROCINFO = 0,AUE_PTHREADCANCELED = 0,AUE_PTHREADCHDIR = 0,AUE_PTHREADCONDBROADCAST = 0,AUE_PTHREADCONDDESTORY = 0,AUE_PTHREADCONDINIT = 0,AUE_PTHREADCONDSIGNAL = 0,AUE_PTHREADCONDWAIT = 0,AUE_PTHREADFCHDIR = 0,AUE_PTHREADMARK = 0,AUE_PTHREADMUTEXDESTROY = 0,AUE_PTHREADMUTEXINIT = 0,AUE_PTHREADMUTEXTRYLOCK = 0,AUE_PTHREADMUTEXUNLOCK = 0,AUE_PWRITEV = 0,AUE_REMOVEXATTR = 0,AUE_SBRK = 0,AUE_SELECT = 0,AUE_SEMDESTROY = 0,AUE_SEMGETVALUE = 0,AUE_SEMINIT = 0,AUE_SEMPOST = 0,AUE_SEMTRYWAIT = 0,AUE_SEMWAIT = 0,AUE_SEMWAITSIGNAL = 0,AUE_SETITIMER = 0,AUE_SETSGROUPS = 0,AUE_SETTID = 0,AUE_SETTIDWITHPID = 0,AUE_SETWGROUPS = 0,AUE_SETXATTR = 0,AUE_SHAREDREGIONCHECK = 0,AUE_SHAREDREGIONMAP = 0,AUE_SIGACTION = 0,AUE_SIGALTSTACK = 0,AUE_SIGPENDING = 0,AUE_SIGPROCMASK = 0,AUE_SIGRETURN = 0,AUE_SIGSUSPEND = 0,AUE_SIGWAIT = 0,AUE_SSTK = 0,AUE_STACKSNAPSHOT = 0,AUE_STATFS64 = 0,AUE_STATV = 0,AUE_STAT64 = 0,AUE_STAT64_EXTENDED = 0,AUE_SYNC = 0,AUE_SYSCALL = 0,AUE_TABLE = 0,AUE_VMPRESSUREMONITOR = 0,AUE_WAITEVENT = 0,AUE_WAITID = 0,AUE_WATCHEVENT = 0,AUE_WORKQOPEN = 0,AUE_WORKQOPS = 0,};
enum MACRO_AUP {AUP_BINARY = 0,AUP_OCTAL = 1,AUP_DECIMAL = 2,AUP_HEX = 3,AUP_STRING = 4,};
enum MACRO_AUR {AUR_BYTE = 0,AUR_CHAR = 0,AUR_SHORT = 1,AUR_INT32 = 2,AUR_INT = 2,AUR_INT64 = 3,};
enum MACRO_AUT {AUT_INVALID = 0x0,AUT_OTHER_FILE32 = 0x11,AUT_OHEADER = 0x12,AUT_TRAILER = 0x13,AUT_HEADER32 = 0x14,AUT_HEADER32_EX = 0x15,AUT_DATA = 0x21,AUT_IPC = 0x22,AUT_PATH = 0x23,AUT_SUBJECT32 = 0x24,AUT_XATPATH = 0x25,AUT_PROCESS32 = 0x26,AUT_RETURN32 = 0x27,AUT_TEXT = 0x28,AUT_OPAQUE = 0x29,AUT_IN_ADDR = 0x2A,AUT_IP = 0x2B,AUT_IPORT = 0x2C,AUT_ARG32 = 0x2D,AUT_SOCKET = 0x2E,AUT_SEQ = 0x2F,AUT_ACL = 0x30,AUT_ATTR = 0x31,AUT_IPC_PERM = 0x32,AUT_LABEL = 0x33,AUT_GROUPS = 0x34,AUT_ACE = 0x35,AUT_PRIV = 0x38,AUT_UPRIV = 0x39,AUT_LIAISON = 0x3A,AUT_NEWGROUPS = 0x3B,AUT_EXEC_ARGS = 0x3C,AUT_EXEC_ENV = 0x3D,AUT_ATTR32 = 0x3E,AUT_UNAUTH = 0x3F,AUT_XATOM = 0x40,AUT_XOBJ = 0x41,AUT_XPROTO = 0x42,AUT_XSELECT = 0x43,AUT_XCOLORMAP = 0x44,AUT_XCURSOR = 0x45,AUT_XFONT = 0x46,AUT_XGC = 0x47,AUT_XPIXMAP = 0x48,AUT_XPROPERTY = 0x49,AUT_XWINDOW = 0x4A,AUT_XCLIENT = 0x4B,AUT_CMD = 0x51,AUT_EXIT = 0x52,AUT_ZONENAME = 0x60,AUT_HOST = 0x70,AUT_ARG64 = 0x71,AUT_RETURN64 = 0x72,AUT_ATTR64 = 0x73,AUT_HEADER64 = 0x74,AUT_SUBJECT64 = 0x75,AUT_PROCESS64 = 0x77,AUT_OTHER_FILE64 = 0x78,AUT_HEADER64_EX = 0x79,AUT_SUBJECT32_EX = 0x7A,AUT_PROCESS32_EX = 0x7B,AUT_SUBJECT64_EX = 0x7C,AUT_PROCESS64_EX = 0x7D,AUT_IN_ADDR_EX = 0x7E,AUT_SOCKET_EX = 0x7F,AUT_HEADER = 0x14,AUT_ARG = 0x2D,AUT_RETURN = 0x27,AUT_SUBJECT = 0x24,AUT_PROCESS = 0x26,AUT_OTHER_FILE = 0x11,AUT_SOCKINET32 = 0x80,AUT_SOCKINET128 = 0x81,AUT_SOCKUNIX = 0x82,};
enum MACRO_AYT {AYT = 246,};
enum MACRO_B75 {B75 = 75,};
enum MACRO_BIO {BIO_TYPE_NONE = 0,BIO_TYPE_MEM = 1025,BIO_TYPE_FILE = 1026,BIO_TYPE_FD = 1284,BIO_TYPE_SOCKET = 1285,BIO_TYPE_NULL = 1030,BIO_TYPE_SSL = 519,BIO_TYPE_MD = 520,BIO_TYPE_BUFFER = 521,BIO_TYPE_CIPHER = 522,BIO_TYPE_BASE64 = 523,BIO_TYPE_CONNECT = 1292,BIO_TYPE_ACCEPT = 1293,BIO_TYPE_PROXY_CLIENT = 526,BIO_TYPE_PROXY_SERVER = 527,BIO_TYPE_NBIO_TEST = 528,BIO_TYPE_NULL_FILTER = 529,BIO_TYPE_BER = 530,BIO_TYPE_BIO = 1043,BIO_TYPE_LINEBUFFER = 532,BIO_TYPE_DGRAM = 1301,BIO_TYPE_COMP = 535,BIO_TYPE_DESCRIPTOR = 256,BIO_TYPE_FILTER = 512,BIO_TYPE_SOURCE_SINK = 1024,BIO_NOCLOSE = 0,BIO_CLOSE = 1,BIO_CTRL_RESET = 1,BIO_CTRL_EOF = 2,BIO_CTRL_INFO = 3,BIO_CTRL_SET = 4,BIO_CTRL_GET = 5,BIO_CTRL_PUSH = 6,BIO_CTRL_POP = 7,BIO_CTRL_GET_CLOSE = 8,BIO_CTRL_SET_CLOSE = 9,BIO_CTRL_PENDING = 10,BIO_CTRL_FLUSH = 11,BIO_CTRL_DUP = 12,BIO_CTRL_WPENDING = 13,BIO_CTRL_SET_CALLBACK = 14,BIO_CTRL_GET_CALLBACK = 15,BIO_CTRL_SET_FILENAME = 30,BIO_CTRL_DGRAM_CONNECT = 31,BIO_CTRL_DGRAM_SET_CONNECTED = 32,BIO_CTRL_DGRAM_SET_RECV_TIMEOUT = 33,BIO_CTRL_DGRAM_GET_RECV_TIMEOUT = 34,BIO_CTRL_DGRAM_SET_SEND_TIMEOUT = 35,BIO_CTRL_DGRAM_GET_SEND_TIMEOUT = 36,BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP = 37,BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP = 38,BIO_CTRL_DGRAM_MTU_DISCOVER = 39,BIO_CTRL_DGRAM_QUERY_MTU = 40,BIO_CTRL_DGRAM_GET_MTU = 41,BIO_CTRL_DGRAM_SET_MTU = 42,BIO_CTRL_DGRAM_MTU_EXCEEDED = 43,BIO_CTRL_DGRAM_GET_PEER = 46,BIO_CTRL_DGRAM_SET_PEER = 44,BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT = 45,BIO_FP_READ = 2,BIO_FP_WRITE = 4,BIO_FP_APPEND = 8,BIO_FP_TEXT = 16,BIO_FLAGS_READ = 1,BIO_FLAGS_WRITE = 2,BIO_FLAGS_IO_SPECIAL = 4,BIO_FLAGS_RWS = 7,BIO_FLAGS_SHOULD_RETRY = 8,BIO_FLAGS_UPLINK = 0,BIO_GHBN_CTRL_HITS = 1,BIO_GHBN_CTRL_MISSES = 2,BIO_GHBN_CTRL_CACHE_SIZE = 3,BIO_GHBN_CTRL_GET_ENTRY = 4,BIO_GHBN_CTRL_FLUSH = 5,BIO_FLAGS_BASE64_NO_NL = 256,BIO_FLAGS_MEM_RDONLY = 512,BIO_RR_SSL_X509_LOOKUP = 1,BIO_RR_CONNECT = 2,BIO_RR_ACCEPT = 3,BIO_CB_FREE = 1,BIO_CB_READ = 2,BIO_CB_WRITE = 3,BIO_CB_PUTS = 4,BIO_CB_GETS = 5,BIO_CB_CTRL = 6,BIO_CB_RETURN = 128,BIO_CONN_S_BEFORE = 1,BIO_CONN_S_GET_IP = 2,BIO_CONN_S_GET_PORT = 3,BIO_CONN_S_CREATE_SOCKET = 4,BIO_CONN_S_CONNECT = 5,BIO_CONN_S_OK = 6,BIO_CONN_S_BLOCKED_CONNECT = 7,BIO_CONN_S_NBIO = 8,BIO_C_SET_CONNECT = 100,BIO_C_DO_STATE_MACHINE = 101,BIO_C_SET_NBIO = 102,BIO_C_SET_PROXY_PARAM = 103,BIO_C_SET_FD = 104,BIO_C_GET_FD = 105,BIO_C_SET_FILE_PTR = 106,BIO_C_GET_FILE_PTR = 107,BIO_C_SET_FILENAME = 108,BIO_C_SET_SSL = 109,BIO_C_GET_SSL = 110,BIO_C_SET_MD = 111,BIO_C_GET_MD = 112,BIO_C_GET_CIPHER_STATUS = 113,BIO_C_SET_BUF_MEM = 114,BIO_C_GET_BUF_MEM_PTR = 115,BIO_C_GET_BUFF_NUM_LINES = 116,BIO_C_SET_BUFF_SIZE = 117,BIO_C_SET_ACCEPT = 118,BIO_C_SSL_MODE = 119,BIO_C_GET_MD_CTX = 120,BIO_C_GET_PROXY_PARAM = 121,BIO_C_SET_BUFF_READ_DATA = 122,BIO_C_GET_CONNECT = 123,BIO_C_GET_ACCEPT = 124,BIO_C_SET_SSL_RENEGOTIATE_BYTES = 125,BIO_C_GET_SSL_NUM_RENEGOTIATES = 126,BIO_C_SET_SSL_RENEGOTIATE_TIMEOUT = 127,BIO_C_FILE_SEEK = 128,BIO_C_GET_CIPHER_CTX = 129,BIO_C_SET_BUF_MEM_EOF_RETURN = 130,BIO_C_SET_BIND_MODE = 131,BIO_C_GET_BIND_MODE = 132,BIO_C_FILE_TELL = 133,BIO_C_GET_SOCKS = 134,BIO_C_SET_SOCKS = 135,BIO_C_SET_WRITE_BUF_SIZE = 136,BIO_C_GET_WRITE_BUF_SIZE = 137,BIO_C_MAKE_BIO_PAIR = 138,BIO_C_DESTROY_BIO_PAIR = 139,BIO_C_GET_WRITE_GUARANTEE = 140,BIO_C_GET_READ_REQUEST = 141,BIO_C_SHUTDOWN_WR = 142,BIO_C_NREAD0 = 143,BIO_C_NREAD = 144,BIO_C_NWRITE0 = 145,BIO_C_NWRITE = 146,BIO_C_RESET_READ_REQUEST = 147,BIO_C_SET_MD_CTX = 148,BIO_BIND_NORMAL = 0,BIO_BIND_REUSEADDR_IF_UNUSED = 1,BIO_BIND_REUSEADDR = 2,BIO_F_ACPT_STATE = 100,BIO_F_BIO_ACCEPT = 101,BIO_F_BIO_BER_GET_HEADER = 102,BIO_F_BIO_CALLBACK_CTRL = 131,BIO_F_BIO_CTRL = 103,BIO_F_BIO_GETHOSTBYNAME = 120,BIO_F_BIO_GETS = 104,BIO_F_BIO_GET_ACCEPT_SOCKET = 105,BIO_F_BIO_GET_HOST_IP = 106,BIO_F_BIO_GET_PORT = 107,BIO_F_BIO_MAKE_PAIR = 121,BIO_F_BIO_NEW = 108,BIO_F_BIO_NEW_FILE = 109,BIO_F_BIO_NEW_MEM_BUF = 126,BIO_F_BIO_NREAD = 123,BIO_F_BIO_NREAD0 = 124,BIO_F_BIO_NWRITE = 125,BIO_F_BIO_NWRITE0 = 122,BIO_F_BIO_PUTS = 110,BIO_F_BIO_READ = 111,BIO_F_BIO_SOCK_INIT = 112,BIO_F_BIO_WRITE = 113,BIO_F_BUFFER_CTRL = 114,BIO_F_CONN_CTRL = 127,BIO_F_CONN_STATE = 115,BIO_F_FILE_CTRL = 116,BIO_F_FILE_READ = 130,BIO_F_LINEBUFFER_CTRL = 129,BIO_F_MEM_READ = 128,BIO_F_MEM_WRITE = 117,BIO_F_SSL_NEW = 118,BIO_F_WSASTARTUP = 119,BIO_R_ACCEPT_ERROR = 100,BIO_R_BAD_FOPEN_MODE = 101,BIO_R_BAD_HOSTNAME_LOOKUP = 102,BIO_R_BROKEN_PIPE = 124,BIO_R_CONNECT_ERROR = 103,BIO_R_EOF_ON_MEMORY_BIO = 127,BIO_R_ERROR_SETTING_NBIO = 104,BIO_R_ERROR_SETTING_NBIO_ON_ACCEPTED_SOCKET = 105,BIO_R_ERROR_SETTING_NBIO_ON_ACCEPT_SOCKET = 106,BIO_R_GETHOSTBYNAME_ADDR_IS_NOT_AF_INET = 107,BIO_R_INVALID_ARGUMENT = 125,BIO_R_INVALID_IP_ADDRESS = 108,BIO_R_IN_USE = 123,BIO_R_KEEPALIVE = 109,BIO_R_NBIO_CONNECT_ERROR = 110,BIO_R_NO_ACCEPT_PORT_SPECIFIED = 111,BIO_R_NO_HOSTNAME_SPECIFIED = 112,BIO_R_NO_PORT_DEFINED = 113,BIO_R_NO_PORT_SPECIFIED = 114,BIO_R_NO_SUCH_FILE = 128,BIO_R_NULL_PARAMETER = 115,BIO_R_TAG_MISMATCH = 116,BIO_R_UNABLE_TO_BIND_SOCKET = 117,BIO_R_UNABLE_TO_CREATE_SOCKET = 118,BIO_R_UNABLE_TO_LISTEN_SOCKET = 119,BIO_R_UNINITIALIZED = 120,BIO_R_UNSUPPORTED_METHOD = 121,BIO_R_WRITE_TO_READ_ONLY_BIO = 126,BIO_R_WSASTARTUP = 122,};
enum MACRO_BLK {BLK_READ = 0x1,BLK_WRITE = 0x2,BLK_META = 0x10,BLK_ONLYVALID = 0x80000000,};
enum MACRO_BPF {BPF_RELEASE = 199606,BPF_MINBUFSIZE = 32,BPF_MAJOR_VERSION = 1,BPF_MINOR_VERSION = 1,};
enum MACRO_BS0 {BS0 = 0x0,BS1 = 0x8000,};
enum MACRO_BSD {BSD = 199506,};
enum MACRO_BSM {BSM_TEXTBUFSZ = 256,};
enum MACRO_BUF {BUF_WAIT = 0x1,BUF_WRITE_DATA = 0x1,BUF_SKIP_META = 0x2,BUF_INVALIDATE_LOCKED = 0x4,BUF_SKIP_NONLOCKED = 0x1,BUF_SKIP_LOCKED = 0x2,BUF_SCAN_CLEAN = 0x4,BUF_SCAN_DIRTY = 0x8,BUF_NOTIFY_BUSY = 0x10,BUF_RETURNED = 0x0,BUF_RETURNED_DONE = 0x1,BUF_CLAIMED = 0x2,BUF_CLAIMED_DONE = 0x3,};
enum MACRO_BUS {BUS_NOOP = 0,BUS_ADRALN = 1,BUS_ADRERR = 2,BUS_OBJERR = 3,};
enum MACRO_CLD {CLD_NOOP = 0,CLD_EXITED = 1,CLD_KILLED = 2,CLD_DUMPED = 3,CLD_TRAPPED = 4,CLD_STOPPED = 5,CLD_CONTINUED = 6,};
enum MACRO_CLK {CLK_TCK = 100,};
enum MACRO_CPF {CPF_OVERWRITE = 1,CPF_IGNORE_MODE = 2,CPF_MASK = 3,};
enum MACRO_CPU {CPU_STATE_MAX = 4,CPU_STATE_USER = 0,CPU_STATE_SYSTEM = 1,CPU_STATE_IDLE = 2,CPU_STATE_NICE = 3,CPU_ARCH_MASK = 4278190080,CPU_ARCH_ABI64 = 16777216,CPU_TYPE_ANY = -1,CPU_TYPE_VAX = 1,CPU_TYPE_MC680x0 = 6,CPU_TYPE_X86 = 7,CPU_TYPE_I386 = 7,CPU_TYPE_X86_64 = 16777223,CPU_TYPE_MC98000 = 10,CPU_TYPE_HPPA = 11,CPU_TYPE_ARM = 12,CPU_TYPE_MC88000 = 13,CPU_TYPE_SPARC = 14,CPU_TYPE_I860 = 15,CPU_TYPE_POWERPC = 18,CPU_TYPE_POWERPC64 = 16777234,CPU_SUBTYPE_MASK = 4278190080,CPU_SUBTYPE_LIB64 = 2147483648,CPU_SUBTYPE_MULTIPLE = -1,CPU_SUBTYPE_LITTLE_ENDIAN = 0,CPU_SUBTYPE_BIG_ENDIAN = 1,CPU_THREADTYPE_NONE = 0,CPU_SUBTYPE_VAX_ALL = 0,CPU_SUBTYPE_VAX780 = 1,CPU_SUBTYPE_VAX785 = 2,CPU_SUBTYPE_VAX750 = 3,CPU_SUBTYPE_VAX730 = 4,CPU_SUBTYPE_UVAXI = 5,CPU_SUBTYPE_UVAXII = 6,CPU_SUBTYPE_VAX8200 = 7,CPU_SUBTYPE_VAX8500 = 8,CPU_SUBTYPE_VAX8600 = 9,CPU_SUBTYPE_VAX8650 = 10,CPU_SUBTYPE_VAX8800 = 11,CPU_SUBTYPE_UVAXIII = 12,CPU_SUBTYPE_MC680x0_ALL = 1,CPU_SUBTYPE_MC68030 = 1,CPU_SUBTYPE_MC68040 = 2,CPU_SUBTYPE_MC68030_ONLY = 3,CPU_SUBTYPE_I386_ALL = 3,CPU_SUBTYPE_386 = 3,CPU_SUBTYPE_486 = 4,CPU_SUBTYPE_486SX = 132,CPU_SUBTYPE_586 = 5,CPU_SUBTYPE_PENT = 5,CPU_SUBTYPE_PENTPRO = 22,CPU_SUBTYPE_PENTII_M3 = 54,CPU_SUBTYPE_PENTII_M5 = 86,CPU_SUBTYPE_CELERON = 103,CPU_SUBTYPE_CELERON_MOBILE = 119,CPU_SUBTYPE_PENTIUM_3 = 8,CPU_SUBTYPE_PENTIUM_3_M = 24,CPU_SUBTYPE_PENTIUM_3_XEON = 40,CPU_SUBTYPE_PENTIUM_M = 9,CPU_SUBTYPE_PENTIUM_4 = 10,CPU_SUBTYPE_PENTIUM_4_M = 26,CPU_SUBTYPE_ITANIUM = 11,CPU_SUBTYPE_ITANIUM_2 = 27,CPU_SUBTYPE_XEON = 12,CPU_SUBTYPE_XEON_MP = 28,CPU_SUBTYPE_INTEL_FAMILY_MAX = 15,CPU_SUBTYPE_INTEL_MODEL_ALL = 0,CPU_SUBTYPE_X86_ALL = 3,CPU_SUBTYPE_X86_64_ALL = 3,CPU_SUBTYPE_X86_ARCH1 = 4,CPU_THREADTYPE_INTEL_HTT = 1,CPU_SUBTYPE_MIPS_ALL = 0,CPU_SUBTYPE_MIPS_R2300 = 1,CPU_SUBTYPE_MIPS_R2600 = 2,CPU_SUBTYPE_MIPS_R2800 = 3,CPU_SUBTYPE_MIPS_R2000a = 4,CPU_SUBTYPE_MIPS_R2000 = 5,CPU_SUBTYPE_MIPS_R3000a = 6,CPU_SUBTYPE_MIPS_R3000 = 7,CPU_SUBTYPE_MC98000_ALL = 0,CPU_SUBTYPE_MC98601 = 1,CPU_SUBTYPE_HPPA_ALL = 0,CPU_SUBTYPE_HPPA_7100 = 0,CPU_SUBTYPE_HPPA_7100LC = 1,CPU_SUBTYPE_MC88000_ALL = 0,CPU_SUBTYPE_MC88100 = 1,CPU_SUBTYPE_MC88110 = 2,CPU_SUBTYPE_SPARC_ALL = 0,CPU_SUBTYPE_I860_ALL = 0,CPU_SUBTYPE_I860_860 = 1,CPU_SUBTYPE_POWERPC_ALL = 0,CPU_SUBTYPE_POWERPC_601 = 1,CPU_SUBTYPE_POWERPC_602 = 2,CPU_SUBTYPE_POWERPC_603 = 3,CPU_SUBTYPE_POWERPC_603e = 4,CPU_SUBTYPE_POWERPC_603ev = 5,CPU_SUBTYPE_POWERPC_604 = 6,CPU_SUBTYPE_POWERPC_604e = 7,CPU_SUBTYPE_POWERPC_620 = 8,CPU_SUBTYPE_POWERPC_750 = 9,CPU_SUBTYPE_POWERPC_7400 = 10,CPU_SUBTYPE_POWERPC_7450 = 11,CPU_SUBTYPE_POWERPC_970 = 100,CPU_SUBTYPE_ARM_ALL = 0,CPU_SUBTYPE_ARM_V4T = 5,CPU_SUBTYPE_ARM_V6 = 6,CPU_SUBTYPE_ARM_V5TEJ = 7,CPU_SUBTYPE_ARM_XSCALE = 8,CPU_SUBTYPE_ARM_V7 = 9,};
enum MACRO_CR0 {CR0 = 0x0,CR1 = 0x1000,CR2 = 0x2000,};
enum MACRO_CR3 {CR3 = 0x3000,};
enum MACRO_CRF {CRF_NOMEMBERD = 0x1,CRF_MAC_ENFORCE = 0x2,};
enum MACRO_CS5 {CS5 = 0x0,CS6 = 0x100,CS7 = 0x200,};
enum MACRO_CS8 {CS8 = 0x300,CSTOPB = 0x400,CREAD = 0x800,PARENB = 0x1000,PARODD = 0x2000,HUPCL = 0x4000,CLOCAL = 0x8000,};
enum MACRO_CTL {CTL_MAXNAME = 12,};
enum MACRO_CTX {CTX_TEST = 0x1,};
enum MACRO_DAY {DAY_1 = 7,DAY_2 = 8,DAY_3 = 9,DAY_4 = 10,DAY_5 = 11,DAY_6 = 12,DAY_7 = 13,};
enum MACRO_DBG {DBG_ZERO_FILL_FAULT = 1,DBG_PAGEIN_FAULT = 2,DBG_COW_FAULT = 3,DBG_CACHE_HIT_FAULT = 4,DBG_NZF_PAGE_FAULT = 5,DBG_GUARD_FAULT = 6,DBG_PAGEINV_FAULT = 7,DBG_PAGEIND_FAULT = 8,DBG_FUNC_START = 1,DBG_FUNC_END = 2,DBG_FUNC_NONE = 0,DBG_MACH = 1,DBG_NETWORK = 2,DBG_FSYSTEM = 3,DBG_BSD = 4,DBG_IOKIT = 5,DBG_DRIVERS = 6,DBG_TRACE = 7,DBG_DLIL = 8,DBG_SECURITY = 9,DBG_CORESTORAGE = 10,DBG_MISC = 20,DBG_DYLD = 31,DBG_QT = 32,DBG_APPS = 33,DBG_LAUNCHD = 34,DBG_MIG = 255,DBG_MACH_EXCP_KTRAP_x86 = 2,DBG_MACH_EXCP_DFLT = 3,DBG_MACH_EXCP_IFLT = 4,DBG_MACH_EXCP_INTR = 5,DBG_MACH_EXCP_ALNG = 6,DBG_MACH_EXCP_UTRAP_x86 = 7,DBG_MACH_EXCP_FP = 8,DBG_MACH_EXCP_DECI = 9,DBG_MACH_CHUD = 10,DBG_MACH_EXCP_SC = 12,DBG_MACH_EXCP_TRACE = 13,DBG_MACH_EXCP_EMUL = 14,DBG_MACH_IHDLR = 16,DBG_MACH_IPC = 32,DBG_MACH_VM = 48,DBG_MACH_LEAKS = 49,DBG_MACH_SCHED = 64,DBG_MACH_MSGID_INVALID = 80,DBG_MACH_LOCKS = 96,DBG_MACH_PMAP = 112,DBG_MACH_MP = 144,};
enum MACRO_DBM {DBM_RDONLY = 0,DBM_INSERT = 0,DBM_REPLACE = 1,};
enum MACRO_DES {DES_ENCRYPT = 1,DES_DECRYPT = 0,DES_CBC_MODE = 0,DES_PCBC_MODE = 1,};
enum MACRO_DEV {DEV_BSIZE = 512,DEV_BSHIFT = 9,};
enum MACRO_DIR {DIR_MNTSTATUS_MNTPOINT = 0x1,DIR_MNTSTATUS_TRIGGER = 0x2,};
enum MACRO_DLT {DLT_NULL = 0,DLT_EN10MB = 1,DLT_EN3MB = 2,DLT_AX25 = 3,DLT_PRONET = 4,DLT_CHAOS = 5,DLT_IEEE802 = 6,DLT_ARCNET = 7,DLT_SLIP = 8,DLT_PPP = 9,DLT_FDDI = 10,DLT_ATM_RFC1483 = 11,DLT_RAW = 12,DLT_SLIP_BSDOS = 15,DLT_PPP_BSDOS = 16,DLT_ATM_CLIP = 19,DLT_REDBACK_SMARTEDGE = 32,DLT_PPP_SERIAL = 50,DLT_PPP_ETHER = 51,DLT_SYMANTEC_FIREWALL = 99,DLT_C_HDLC = 104,DLT_CHDLC = 104,DLT_IEEE802_11 = 105,DLT_FRELAY = 107,DLT_LOOP = 108,DLT_ENC = 109,DLT_LINUX_SLL = 113,DLT_LTALK = 114,DLT_ECONET = 115,DLT_IPFILTER = 116,DLT_PFLOG = 117,DLT_CISCO_IOS = 118,DLT_PRISM_HEADER = 119,DLT_AIRONET_HEADER = 120,DLT_HHDLC = 121,DLT_IP_OVER_FC = 122,DLT_SUNATM = 123,DLT_RIO = 124,DLT_PCI_EXP = 125,DLT_AURORA = 126,DLT_IEEE802_11_RADIO = 127,DLT_TZSP = 128,DLT_ARCNET_LINUX = 129,DLT_JUNIPER_MLPPP = 130,DLT_JUNIPER_MLFR = 131,DLT_JUNIPER_ES = 132,DLT_JUNIPER_GGSN = 133,DLT_JUNIPER_MFR = 134,DLT_JUNIPER_ATM2 = 135,DLT_JUNIPER_SERVICES = 136,DLT_JUNIPER_ATM1 = 137,DLT_APPLE_IP_OVER_IEEE1394 = 138,DLT_MTP2_WITH_PHDR = 139,DLT_MTP2 = 140,DLT_MTP3 = 141,DLT_SCCP = 142,DLT_DOCSIS = 143,DLT_LINUX_IRDA = 144,DLT_IBM_SP = 145,DLT_IBM_SN = 146,DLT_USER0 = 147,DLT_USER1 = 148,DLT_USER2 = 149,DLT_USER3 = 150,DLT_USER4 = 151,DLT_USER5 = 152,DLT_USER6 = 153,DLT_USER7 = 154,DLT_USER8 = 155,DLT_USER9 = 156,DLT_USER10 = 157,DLT_USER11 = 158,DLT_USER12 = 159,DLT_USER13 = 160,DLT_USER14 = 161,DLT_USER15 = 162,DLT_IEEE802_11_RADIO_AVS = 163,DLT_JUNIPER_MONITOR = 164,DLT_BACNET_MS_TP = 165,DLT_PPP_PPPD = 166,DLT_PPP_WITH_DIRECTION = 166,DLT_LINUX_PPP_WITHDIRECTION = 166,DLT_JUNIPER_PPPOE = 167,DLT_JUNIPER_PPPOE_ATM = 168,DLT_GPRS_LLC = 169,DLT_GPF_T = 170,DLT_GPF_F = 171,DLT_GCOM_T1E1 = 172,DLT_GCOM_SERIAL = 173,DLT_JUNIPER_PIC_PEER = 174,DLT_ERF_ETH = 175,DLT_ERF_POS = 176,DLT_LINUX_LAPD = 177,DLT_JUNIPER_ETHER = 178,DLT_JUNIPER_PPP = 179,DLT_JUNIPER_FRELAY = 180,DLT_JUNIPER_CHDLC = 181,DLT_MFR = 182,DLT_JUNIPER_VP = 183,DLT_A429 = 184,DLT_A653_ICM = 185,DLT_USB = 186,DLT_BLUETOOTH_HCI_H4 = 187,DLT_IEEE802_16_MAC_CPS = 188,DLT_USB_LINUX = 189,DLT_CAN20B = 190,DLT_IEEE802_15_4_LINUX = 191,DLT_PPI = 192,DLT_IEEE802_16_MAC_CPS_RADIO = 193,DLT_JUNIPER_ISM = 194,DLT_IEEE802_15_4 = 195,DLT_SITA = 196,DLT_ERF = 197,DLT_RAIF1 = 198,DLT_IPMB = 199,DLT_JUNIPER_ST = 200,DLT_BLUETOOTH_HCI_H4_WITH_PHDR = 201,DLT_AX25_KISS = 202,DLT_LAPD = 203,DLT_PPP_WITH_DIR = 204,DLT_C_HDLC_WITH_DIR = 205,DLT_FRELAY_WITH_DIR = 206,DLT_LAPB_WITH_DIR = 207,DLT_IPMB_LINUX = 209,DLT_FLEXRAY = 210,DLT_MOST = 211,DLT_LIN = 212,DLT_X2E_SERIAL = 213,DLT_X2E_XORAYA = 214,DLT_IEEE802_15_4_NONASK_PHY = 215,DLT_LINUX_EVDEV = 216,DLT_GSMTAP_UM = 217,DLT_GSMTAP_ABIS = 218,DLT_MPLS = 219,DLT_USB_LINUX_MMAPPED = 220,DLT_DECT = 221,DLT_AOS = 222,DLT_WIHART = 223,DLT_FC_2 = 224,DLT_FC_2_WITH_FRAME_DELIMS = 225,DLT_IPNET = 226,DLT_CAN_SOCKETCAN = 227,DLT_IPV4 = 228,DLT_IPV6 = 229,DLT_CLASS_NETBSD_RAWAF = 35913728,};
enum MACRO_DNS {DNS_STATUS_OK = 0,DNS_STATUS_BAD_HANDLE = 1,DNS_STATUS_MALFORMED_QUERY = 2,DNS_STATUS_TIMEOUT = 3,DNS_STATUS_SEND_FAILED = 4,DNS_STATUS_RECEIVE_FAILED = 5,DNS_STATUS_CONNECTION_FAILED = 6,DNS_STATUS_WRONG_SERVER = 7,DNS_STATUS_WRONG_XID = 8,DNS_STATUS_WRONG_QUESTION = 9,DNS_PRINT_XID = 1,DNS_PRINT_QR = 2,DNS_PRINT_OPCODE = 4,DNS_PRINT_AA = 8,DNS_PRINT_TC = 16,DNS_PRINT_RD = 32,DNS_PRINT_RA = 64,DNS_PRINT_PR = 128,DNS_PRINT_RCODE = 256,DNS_PRINT_QUESTION = 512,DNS_PRINT_ANSWER = 1024,DNS_PRINT_AUTHORITY = 2048,DNS_PRINT_ADDITIONAL = 4096,DNS_PRINT_SERVER = 8192,};
enum MACRO_DSA {DSA_FLAG_CACHE_MONT_P = 0x1,DSA_FLAG_NO_EXP_CONSTTIME = 0x2,DSA_FLAG_FIPS_METHOD = 0x400,DSA_FLAG_NON_FIPS_ALLOW = 0x400,};
enum MACRO_DSO {DSO_CTRL_GET_FLAGS = 1,DSO_CTRL_SET_FLAGS = 2,DSO_CTRL_OR_FLAGS = 3,DSO_FLAG_NO_NAME_TRANSLATION = 1,DSO_FLAG_NAME_TRANSLATION_EXT_ONLY = 2,DSO_FLAG_UPCASE_SYMBOL = 16,DSO_FLAG_GLOBAL_SYMBOLS = 32,DSO_F_DLFCN_BIND_FUNC = 100,DSO_F_DLFCN_BIND_VAR = 101,DSO_F_DLFCN_LOAD = 102,DSO_F_DLFCN_MERGER = 130,DSO_F_DLFCN_NAME_CONVERTER = 123,DSO_F_DLFCN_UNLOAD = 103,DSO_F_DL_BIND_FUNC = 104,DSO_F_DL_BIND_VAR = 105,DSO_F_DL_LOAD = 106,DSO_F_DL_MERGER = 131,DSO_F_DL_NAME_CONVERTER = 124,DSO_F_DL_UNLOAD = 107,DSO_F_DSO_BIND_FUNC = 108,DSO_F_DSO_BIND_VAR = 109,DSO_F_DSO_CONVERT_FILENAME = 126,DSO_F_DSO_CTRL = 110,DSO_F_DSO_FREE = 111,DSO_F_DSO_GET_FILENAME = 127,DSO_F_DSO_GET_LOADED_FILENAME = 128,DSO_F_DSO_LOAD = 112,DSO_F_DSO_MERGE = 132,DSO_F_DSO_NEW_METHOD = 113,DSO_F_DSO_SET_FILENAME = 129,DSO_F_DSO_SET_NAME_CONVERTER = 122,DSO_F_DSO_UP_REF = 114,DSO_F_VMS_BIND_SYM = 115,DSO_F_VMS_LOAD = 116,DSO_F_VMS_MERGER = 133,DSO_F_VMS_UNLOAD = 117,DSO_F_WIN32_BIND_FUNC = 118,DSO_F_WIN32_BIND_VAR = 119,DSO_F_WIN32_JOINER = 135,DSO_F_WIN32_LOAD = 120,DSO_F_WIN32_MERGER = 134,DSO_F_WIN32_NAME_CONVERTER = 125,DSO_F_WIN32_SPLITTER = 136,DSO_F_WIN32_UNLOAD = 121,DSO_R_CTRL_FAILED = 100,DSO_R_DSO_ALREADY_LOADED = 110,DSO_R_EMPTY_FILE_STRUCTURE = 113,DSO_R_FAILURE = 114,DSO_R_FILENAME_TOO_BIG = 101,DSO_R_FINISH_FAILED = 102,DSO_R_INCORRECT_FILE_SYNTAX = 115,DSO_R_LOAD_FAILED = 103,DSO_R_NAME_TRANSLATION_FAILED = 109,DSO_R_NO_FILENAME = 111,DSO_R_NO_FILE_SPECIFICATION = 116,DSO_R_NULL_HANDLE = 104,DSO_R_SET_FILENAME_FAILED = 112,DSO_R_STACK_ERROR = 105,DSO_R_SYM_FAILURE = 106,DSO_R_UNLOAD_FAILED = 107,DSO_R_UNSUPPORTED = 108,};
enum MACRO_DSS {DSS_prime_checks = 50,};
enum MACRO_DST {DST_NONE = 0,DST_USA = 1,DST_AUST = 2,DST_WET = 3,DST_MET = 4,DST_EET = 5,DST_CAN = 6,};
enum MACRO_DTF {DTF_HIDEW = 0x1,DTF_NODUP = 0x2,DTF_REWIND = 0x4,};
enum MACRO_DYN {DYN_SRC_ADDR = 0x1,DYN_SRC_PORT = 0x2,DYN_DST_ADDR = 0x4,DYN_DST_PORT = 0x8,};
enum MACRO_D_T {D_T_FMT = 1,D_FMT = 2,};
enum MACRO_EAI {EAI_ADDRFAMILY = 1,EAI_AGAIN = 2,EAI_BADFLAGS = 3,EAI_FAIL = 4,EAI_FAMILY = 5,EAI_MEMORY = 6,EAI_NODATA = 7,EAI_NONAME = 8,EAI_SERVICE = 9,EAI_SOCKTYPE = 10,EAI_SYSTEM = 11,EAI_BADHINTS = 12,EAI_PROTOCOL = 13,EAI_OVERFLOW = 14,EAI_MAX = 15,};
enum MACRO_EFL {EFL_CF = 0x1,EFL_PF = 0x4,EFL_AF = 0x10,EFL_ZF = 0x40,EFL_SF = 0x80,EFL_TF = 0x100,EFL_IF = 0x200,EFL_DF = 0x400,EFL_OF = 0x800,EFL_IOPL = 0x3000,EFL_IOPL_KERNEL = 0x0,EFL_IOPL_USER = 0x3000,EFL_NT = 0x4000,EFL_RF = 0x10000,EFL_VM = 0x20000,EFL_AC = 0x40000,EFL_VIF = 0x80000,EFL_VIP = 0x100000,EFL_ID = 0x200000,EFL_CLR = 0xFFF88028,EFL_SET = 0x2,EFL_USER_SET = 0x200,EFL_USER_CLEAR = 0x17000,};
enum MACRO_ENV {ENV_ESC = 2,ENV_USERVAR = 3,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_EOR {EOR = 239,};
enum MACRO_ERA {ERA = 45,};
enum MACRO_ERR {ERR = -1,};
enum MACRO_EVP {EVP_MAX_MD_SIZE = 64,EVP_MAX_KEY_LENGTH = 32,EVP_MAX_IV_LENGTH = 16,EVP_MAX_BLOCK_LENGTH = 32,};
enum MACRO_EXC {EXC_TYPES_COUNT = 11,};
enum MACRO_FAT {FAT_MAGIC = 0xCAFEBABE,FAT_CIGAM = 0xBEBAFECA,};
enum MACRO_FF0 {FF0 = 0x0,FF1 = 0x4000,};
enum MACRO_FFI {FFI_NO_RAW_API = 1,};
enum MACRO_FNM {FNM_NOMATCH = 1,FNM_NOESCAPE = 1,FNM_PATHNAME = 2,FNM_PERIOD = 4,FNM_NOSYS = -1,FNM_LEADING_DIR = 8,FNM_CASEFOLD = 16,FNM_IGNORECASE = 16,FNM_FILE_NAME = 2,};
enum MACRO_FPC {FPC_IE = 0x1,FPC_IM = 0x1,FPC_DE = 0x2,FPC_DM = 0x2,FPC_ZE = 0x4,FPC_ZM = 0x4,FPC_OE = 0x8,FPC_OM = 0x8,FPC_UE = 0x10,FPC_PE = 0x20,FPC_PC = 0x300,FPC_PC_24 = 0x0,FPC_PC_53 = 0x200,FPC_PC_64 = 0x300,FPC_RC = 0xC00,FPC_RC_RN = 0x0,FPC_RC_RD = 0x400,FPC_RC_RU = 0x800,FPC_RC_CHOP = 0xC00,FPC_IC = 0x1000,FPC_IC_PROJ = 0x0,FPC_IC_AFF = 0x1000,};
enum MACRO_FPE {FPE_NOOP = 0,FPE_FLTDIV = 1,FPE_FLTOVF = 2,FPE_FLTUND = 3,FPE_FLTRES = 4,FPE_FLTINV = 5,FPE_FLTSUB = 6,FPE_INTDIV = 7,FPE_INTOVF = 8,};
enum MACRO_FPS {FPS_IE = 0x1,FPS_DE = 0x2,FPS_ZE = 0x4,FPS_OE = 0x8,FPS_UE = 0x10,FPS_PE = 0x20,FPS_SF = 0x40,FPS_ES = 0x80,FPS_C0 = 0x100,FPS_C1 = 0x200,FPS_C2 = 0x400,FPS_TOS = 0x3800,FPS_TOS_SHIFT = 0xB,FPS_C3 = 0x4000,FPS_BUSY = 0x8000,};
enum MACRO_FST {FST_EOF = -1,};
enum MACRO_FTS {FTS_COMFOLLOW = 0x1,FTS_LOGICAL = 0x2,FTS_NOCHDIR = 0x4,FTS_NOSTAT = 0x8,FTS_PHYSICAL = 0x10,FTS_SEEDOT = 0x20,FTS_XDEV = 0x40,FTS_WHITEOUT = 0x80,FTS_COMFOLLOWDIR = 0x400,FTS_OPTIONMASK = 0x4FF,FTS_NAMEONLY = 0x100,FTS_STOP = 0x200,FTS_BLOCK_COMPAR = 0x80000000,FTS_ROOTPARENTLEVEL = 0xFFFFFFFFFFFFFFFF,FTS_ROOTLEVEL = 0x0,FTS_D = 0x1,FTS_DC = 0x2,FTS_DEFAULT = 0x3,FTS_DNR = 0x4,FTS_DOT = 0x5,FTS_DP = 0x6,FTS_ERR = 0x7,FTS_F = 0x8,FTS_INIT = 0x9,FTS_NS = 0xA,FTS_NSOK = 0xB,FTS_SL = 0xC,FTS_SLNONE = 0xD,FTS_W = 0xE,FTS_DONTCHDIR = 0x1,FTS_SYMFOLLOW = 0x2,FTS_ISW = 0x4,FTS_AGAIN = 0x1,FTS_FOLLOW = 0x2,FTS_NOINSTR = 0x3,FTS_SKIP = 0x4,};
enum MACRO_FTW {FTW_F = 0,FTW_D = 1,FTW_DNR = 2,FTW_DP = 3,FTW_NS = 4,FTW_SL = 5,FTW_SLN = 6,FTW_PHYS = 1,FTW_MOUNT = 2,FTW_DEPTH = 4,FTW_CHDIR = 8,};
enum MACRO_GEN {GEN_OTHERNAME = 0,GEN_EMAIL = 1,GEN_DNS = 2,GEN_X400 = 3,GEN_DIRNAME = 4,GEN_EDIPARTY = 5,GEN_URI = 6,GEN_IPADD = 7,GEN_RID = 8,};
enum MACRO_GID {GID_WHEEL = 0,GID_KMEM = 2,GID_TTY = 4,GID_OPERATOR = 5,GID_BIN = 7,GID_GAMES = 13,GID_DIALER = 68,};
enum MACRO_GSS {GSS_C_DELEG_FLAG = 1,GSS_C_MUTUAL_FLAG = 2,GSS_C_REPLAY_FLAG = 4,GSS_C_SEQUENCE_FLAG = 8,GSS_C_CONF_FLAG = 16,GSS_C_INTEG_FLAG = 32,GSS_C_ANON_FLAG = 64,GSS_C_PROT_READY_FLAG = 128,GSS_C_TRANS_FLAG = 256,GSS_C_DELEG_POLICY_FLAG = 32768,GSS_C_NO_UI_FLAG = 2147483648,GSS_C_BOTH = 0,GSS_C_INITIATE = 1,GSS_C_ACCEPT = 2,GSS_C_OPTION_MASK = 65535,GSS_C_CRED_NO_UI = 65536,GSS_C_GSS_CODE = 1,GSS_C_MECH_CODE = 2,GSS_C_AF_UNSPEC = 0,GSS_C_AF_LOCAL = 1,GSS_C_AF_INET = 2,GSS_C_AF_IMPLINK = 3,GSS_C_AF_PUP = 4,GSS_C_AF_CHAOS = 5,GSS_C_AF_NS = 6,GSS_C_AF_NBS = 7,GSS_C_AF_ECMA = 8,GSS_C_AF_DATAKIT = 9,GSS_C_AF_CCITT = 10,GSS_C_AF_SNA = 11,GSS_C_AF_DECnet = 12,GSS_C_AF_DLI = 13,GSS_C_AF_LAT = 14,GSS_C_AF_HYLINK = 15,GSS_C_AF_APPLETALK = 16,GSS_C_AF_BSC = 17,GSS_C_AF_DSS = 18,GSS_C_AF_OSI = 19,GSS_C_AF_X25 = 21,GSS_C_AF_NULLADDR = 255,GSS_C_NO_NAME = 0,GSS_C_NO_BUFFER = 0,GSS_C_NO_OID = 0,GSS_C_NO_OID_SET = 0,GSS_C_NO_CONTEXT = 0,GSS_C_NO_CREDENTIAL = 0,GSS_C_NO_CHANNEL_BINDINGS = 0,GSS_C_NULL_OID = 0,GSS_C_NULL_OID_SET = 0,GSS_C_QOP_DEFAULT = 0,GSS_C_INDEFINITE = 4294967295,GSS_S_COMPLETE = 0,GSS_C_CALLING_ERROR_OFFSET = 24,GSS_C_ROUTINE_ERROR_OFFSET = 16,GSS_C_SUPPLEMENTARY_OFFSET = 0,GSS_C_CALLING_ERROR_MASK = 255,GSS_C_ROUTINE_ERROR_MASK = 255,GSS_C_SUPPLEMENTARY_MASK = 65535,GSS_S_CALL_INACCESSIBLE_READ = 16777216,GSS_S_CALL_INACCESSIBLE_WRITE = 33554432,GSS_S_CALL_BAD_STRUCTURE = 50331648,GSS_S_BAD_MECH = 65536,GSS_S_BAD_NAME = 131072,GSS_S_BAD_NAMETYPE = 196608,GSS_S_BAD_BINDINGS = 262144,GSS_S_BAD_STATUS = 327680,GSS_S_BAD_SIG = 393216,GSS_S_NO_CRED = 458752,GSS_S_NO_CONTEXT = 524288,GSS_S_DEFECTIVE_TOKEN = 589824,GSS_S_DEFECTIVE_CREDENTIAL = 655360,GSS_S_CREDENTIALS_EXPIRED = 720896,GSS_S_CONTEXT_EXPIRED = 786432,GSS_S_FAILURE = 851968,GSS_S_BAD_QOP = 917504,GSS_S_UNAUTHORIZED = 983040,GSS_S_UNAVAILABLE = 1048576,GSS_S_DUPLICATE_ELEMENT = 1114112,GSS_S_NAME_NOT_MN = 1179648,GSS_S_CONTINUE_NEEDED = 1,GSS_S_DUPLICATE_TOKEN = 2,GSS_S_OLD_TOKEN = 4,GSS_S_UNSEQ_TOKEN = 8,GSS_S_GAP_TOKEN = 16,GSS_S_CRED_UNAVAIL = 851968,GSS_KRB5_UI_ALLOW = 1,GSS_KRB5_UI_DENY = 2,GSS_KRB5_UI_PROBE = 3,};
enum MACRO_HAS {HAS_VSNPRINTF = 1,};
enum MACRO_HFS {HFS_ENCODINGBIAS = 1,HFS_EXTEND_FS = 2,HFS_ENCODINGHINT = 3,HFS_ENABLE_JOURNALING = 534889,HFS_DISABLE_JOURNALING = 201330,HFS_GET_JOURNAL_INFO = 1785621609,HFS_SET_PKG_EXTENSIONS = 1183793,HFS_REPLAY_JOURNAL = 1785621618,HFS_ENABLE_RESIZE_DEBUG = 4,};
enum MACRO_IAC {IAC = 255,};
enum MACRO_IFF {IFF_UP = 0x1,IFF_BROADCAST = 0x2,IFF_DEBUG = 0x4,IFF_LOOPBACK = 0x8,IFF_POINTOPOINT = 0x10,IFF_NOTRAILERS = 0x20,IFF_RUNNING = 0x40,IFF_NOARP = 0x80,IFF_PROMISC = 0x100,IFF_ALLMULTI = 0x200,IFF_OACTIVE = 0x400,IFF_SIMPLEX = 0x800,IFF_LINK0 = 0x1000,IFF_LINK1 = 0x2000,IFF_LINK2 = 0x4000,IFF_ALTPHYS = 0x4000,IFF_MULTICAST = 0x8000,};
enum MACRO_IFM {IFM_ETHER = 0x20,IFM_10_T = 0x3,IFM_10_2 = 0x4,IFM_10_5 = 0x5,IFM_100_TX = 0x6,IFM_100_FX = 0x7,IFM_100_T4 = 0x8,IFM_100_VG = 0x9,IFM_100_T2 = 0xA,IFM_1000_SX = 0xB,IFM_10_STP = 0xC,IFM_10_FL = 0xD,IFM_1000_LX = 0xE,IFM_1000_CX = 0xF,IFM_1000_T = 0x10,IFM_HPNA_1 = 0x11,IFM_10G_SR = 0x12,IFM_10G_LR = 0x13,IFM_10G_CX4 = 0x14,IFM_10G_T = 0x15,IFM_TOKEN = 0x40,IFM_TOK_STP4 = 0x3,IFM_TOK_STP16 = 0x4,IFM_TOK_UTP4 = 0x5,IFM_TOK_UTP16 = 0x6,IFM_TOK_STP100 = 0x7,IFM_TOK_UTP100 = 0x8,IFM_TOK_ETR = 0x200,IFM_TOK_SRCRT = 0x400,IFM_TOK_ALLR = 0x800,IFM_TOK_DTR = 0x2000,IFM_TOK_CLASSIC = 0x4000,IFM_TOK_AUTO = 0x8000,IFM_FDDI = 0x60,IFM_FDDI_SMF = 0x3,IFM_FDDI_MMF = 0x4,IFM_FDDI_UTP = 0x5,IFM_FDDI_DA = 0x100,IFM_IEEE80211 = 0x80,IFM_IEEE80211_FH1 = 0x3,IFM_IEEE80211_FH2 = 0x4,IFM_IEEE80211_DS2 = 0x5,IFM_IEEE80211_DS5 = 0x6,IFM_IEEE80211_DS11 = 0x7,IFM_IEEE80211_DS1 = 0x8,IFM_IEEE80211_DS22 = 0x9,IFM_IEEE80211_ADHOC = 0x100,IFM_AUTO = 0x0,IFM_MANUAL = 0x1,IFM_NONE = 0x2,IFM_FDX = 0x100000,IFM_HDX = 0x200000,IFM_FLOW = 0x400000,IFM_EEE = 0x800000,IFM_FLAG0 = 0x1000000,IFM_FLAG1 = 0x2000000,IFM_FLAG2 = 0x4000000,IFM_LOOP = 0x8000000,IFM_NMASK = 0xE0,IFM_TMASK = 0x1F,IFM_IMASK = 0xF0000000,IFM_ISHIFT = 0x1C,IFM_OMASK = 0xFF00,IFM_GMASK = 0xFF00000,IFM_AVALID = 0x1,IFM_ACTIVE = 0x2,IFM_INST_MAX = 0xF,};
enum MACRO_IFQ {IFQ_MAXLEN = 50,};
enum MACRO_IFT {IFT_OTHER = 0x1,IFT_1822 = 0x2,IFT_HDH1822 = 0x3,IFT_X25DDN = 0x4,IFT_X25 = 0x5,IFT_ETHER = 0x6,IFT_ISO88023 = 0x7,IFT_ISO88024 = 0x8,IFT_ISO88025 = 0x9,IFT_ISO88026 = 0xA,IFT_STARLAN = 0xB,IFT_P10 = 0xC,IFT_P80 = 0xD,IFT_HY = 0xE,IFT_FDDI = 0xF,IFT_LAPB = 0x10,IFT_SDLC = 0x11,IFT_T1 = 0x12,IFT_CEPT = 0x13,IFT_ISDNBASIC = 0x14,IFT_ISDNPRIMARY = 0x15,IFT_PTPSERIAL = 0x16,IFT_PPP = 0x17,IFT_LOOP = 0x18,IFT_EON = 0x19,IFT_XETHER = 0x1A,IFT_NSIP = 0x1B,IFT_SLIP = 0x1C,IFT_ULTRA = 0x1D,IFT_DS3 = 0x1E,IFT_SIP = 0x1F,IFT_FRELAY = 0x20,IFT_RS232 = 0x21,IFT_PARA = 0x22,IFT_ARCNET = 0x23,IFT_ARCNETPLUS = 0x24,IFT_ATM = 0x25,IFT_MIOX25 = 0x26,IFT_SONET = 0x27,IFT_X25PLE = 0x28,IFT_ISO88022LLC = 0x29,IFT_LOCALTALK = 0x2A,IFT_SMDSDXI = 0x2B,IFT_FRELAYDCE = 0x2C,IFT_V35 = 0x2D,IFT_HSSI = 0x2E,IFT_HIPPI = 0x2F,IFT_MODEM = 0x30,IFT_AAL5 = 0x31,IFT_SONETPATH = 0x32,IFT_SONETVT = 0x33,IFT_SMDSICIP = 0x34,IFT_PROPVIRTUAL = 0x35,IFT_PROPMUX = 0x36,IFT_GIF = 0x37,IFT_FAITH = 0x38,IFT_STF = 0x39,IFT_L2VLAN = 0x87,IFT_IEEE8023ADLAG = 0x88,IFT_IEEE1394 = 0x90,IFT_BRIDGE = 0xD1,IFT_ENC = 0xF4,IFT_PFLOG = 0xF5,IFT_PFSYNC = 0xF6,IFT_CARP = 0xF8,IFT_CELLULAR = 0xFF,IFT_PDP = 0xFF,};
enum MACRO_ILL {ILL_NOOP = 0,ILL_ILLOPC = 1,ILL_ILLTRP = 2,ILL_PRVOPC = 3,ILL_ILLOPN = 4,ILL_ILLADR = 5,ILL_PRVREG = 6,ILL_COPROC = 7,ILL_BADSTK = 8,};
enum MACRO_IN6 {IN6_PREFIX_ND = 1,IN6_PREFIX_RR = 2,};
enum MACRO_INI {INI_IPV4 = 0x1,INI_IPV6 = 0x2,};
enum MACRO_INP {INP_IPV4 = 0x1,INP_IPV6 = 0x2,INP_RECVOPTS = 0x1,INP_RECVRETOPTS = 0x2,INP_RECVDSTADDR = 0x4,INP_HDRINCL = 0x8,INP_HIGHPORT = 0x10,INP_LOWPORT = 0x20,INP_ANONPORT = 0x40,INP_RECVIF = 0x80,INP_MTUDISC = 0x100,INP_STRIPHDR = 0x200,INP_FAITH = 0x400,INP_INADDR_ANY = 0x800,INP_RECVTTL = 0x1000,INP_UDP_NOCKSUM = 0x2000,INP_BOUND_IF = 0x4000,};
enum MACRO_INT {INT_LEAST8_MIN = -128,INT_LEAST16_MIN = -32768,INT_LEAST32_MIN = -2147483648,INT_LEAST64_MIN = -9223372036854775808,INT_LEAST8_MAX = 127,INT_LEAST16_MAX = 32767,INT_LEAST32_MAX = 2147483647,INT_LEAST64_MAX = 9223372036854775807,};
enum MACRO_IOC {IOC_VOID = 536870912,IOC_OUT = 1073741824,IOC_IN = 2147483648,IOC_INOUT = 3221225472,IOC_DIRMASK = 3758096384,};
enum MACRO_IP6 {IP6_ALERT_MLD = 0x0,IP6_ALERT_RSVP = 0x100,IP6_ALERT_AN = 0x200,};
enum MACRO_IPC {IPC_CREAT = 0x200,IPC_EXCL = 0x400,IPC_NOWAIT = 0x800,IPC_PRIVATE = 0x0,IPC_RMID = 0x0,IPC_SET = 0x1,IPC_STAT = 0x2,IPC_R = 0x100,IPC_W = 0x80,IPC_M = 0x1000,};
enum MACRO_IPP {IPP_PORT = 631,IPP_MAX_LENGTH = 32767,IPP_MAX_NAME = 256,IPP_MAX_VALUES = 8,};
enum MACRO_KDC {KDC_OPT_FORWARDABLE = 0x40000000,KDC_OPT_FORWARDED = 0x20000000,KDC_OPT_PROXIABLE = 0x10000000,KDC_OPT_PROXY = 0x8000000,KDC_OPT_ALLOW_POSTDATE = 0x4000000,KDC_OPT_POSTDATED = 0x2000000,KDC_OPT_RENEWABLE = 0x800000,KDC_OPT_REQUEST_ANONYMOUS = 0x20000,KDC_OPT_CANONICALIZE = 0x10000,KDC_OPT_DISABLE_TRANSITED_CHECK = 0x20,KDC_OPT_RENEWABLE_OK = 0x10,KDC_OPT_ENC_TKT_IN_SKEY = 0x8,KDC_OPT_RENEW = 0x2,KDC_OPT_VALIDATE = 0x1,KDC_TKT_COMMON_MASK = 0x54800000,};
enum MACRO_KEV {KEV_CTL_SUBCLASS = 2,KEV_CTL_REGISTERED = 1,KEV_CTL_DEREGISTERED = 2,};
enum MACRO_KEY {KEY_CODE_YES = 0x100,KEY_MIN = 0x101,KEY_BREAK = 0x101,KEY_SRESET = 0x158,KEY_RESET = 0x159,KEY_DOWN = 0x102,KEY_UP = 0x103,KEY_LEFT = 0x104,KEY_RIGHT = 0x105,KEY_HOME = 0x106,KEY_BACKSPACE = 0x107,KEY_F0 = 0x108,KEY_DL = 0x148,KEY_IL = 0x149,KEY_DC = 0x14A,KEY_IC = 0x14B,KEY_EIC = 0x14C,KEY_CLEAR = 0x14D,KEY_EOS = 0x14E,KEY_EOL = 0x14F,KEY_SF = 0x150,KEY_SR = 0x151,KEY_NPAGE = 0x152,KEY_PPAGE = 0x153,KEY_STAB = 0x154,KEY_CTAB = 0x155,KEY_CATAB = 0x156,KEY_ENTER = 0x157,KEY_PRINT = 0x15A,KEY_LL = 0x15B,KEY_A1 = 0x15C,KEY_A3 = 0x15D,KEY_B2 = 0x15E,KEY_C1 = 0x15F,KEY_C3 = 0x160,KEY_BTAB = 0x161,KEY_BEG = 0x162,KEY_CANCEL = 0x163,KEY_CLOSE = 0x164,KEY_COMMAND = 0x165,KEY_COPY = 0x166,KEY_CREATE = 0x167,KEY_END = 0x168,KEY_EXIT = 0x169,KEY_FIND = 0x16A,KEY_HELP = 0x16B,KEY_MARK = 0x16C,KEY_MESSAGE = 0x16D,KEY_MOVE = 0x16E,KEY_NEXT = 0x16F,KEY_OPEN = 0x170,KEY_OPTIONS = 0x171,KEY_PREVIOUS = 0x172,KEY_REDO = 0x173,KEY_REFERENCE = 0x174,KEY_REFRESH = 0x175,KEY_REPLACE = 0x176,KEY_RESTART = 0x177,KEY_RESUME = 0x178,KEY_SAVE = 0x179,KEY_SBEG = 0x17A,KEY_SCANCEL = 0x17B,KEY_SCOMMAND = 0x17C,KEY_SCOPY = 0x17D,KEY_SCREATE = 0x17E,KEY_SDC = 0x17F,KEY_SDL = 0x180,KEY_SELECT = 0x181,KEY_SEND = 0x182,KEY_SEOL = 0x183,KEY_SEXIT = 0x184,KEY_SFIND = 0x185,KEY_SHELP = 0x186,KEY_SHOME = 0x187,KEY_SIC = 0x188,KEY_SLEFT = 0x189,KEY_SMESSAGE = 0x18A,KEY_SMOVE = 0x18B,KEY_SNEXT = 0x18C,KEY_SOPTIONS = 0x18D,KEY_SPREVIOUS = 0x18E,KEY_SPRINT = 0x18F,KEY_SREDO = 0x190,KEY_SREPLACE = 0x191,KEY_SRIGHT = 0x192,KEY_SRSUME = 0x193,KEY_SSAVE = 0x194,KEY_SSUSPEND = 0x195,KEY_SUNDO = 0x196,KEY_SUSPEND = 0x197,KEY_UNDO = 0x198,KEY_MOUSE = 0x199,KEY_RESIZE = 0x19A,KEY_EVENT = 0x19B,KEY_MAX = 0x1FF,};
enum MACRO_KLM {KLM_PROG = 100020,KLM_VERS = 1,KLM_TEST = 1,KLM_LOCK = 2,KLM_CANCEL = 3,KLM_UNLOCK = 4,};
enum MACRO_LCD {LCD_TIME_SYNC_OPT = 1,};
enum MACRO_LDT {LDT_AUTO_ALLOC = 0xFFFFFFFF,};
enum MACRO_LEN {MIN_OID_LEN = 2,MAX_NAME_LEN = 128,};
enum MACRO_LIO {LIO_NOP = 0x0,LIO_READ = 0x1,LIO_WRITE = 0x2,LIO_NOWAIT = 0x1,LIO_WAIT = 0x2,};
enum MACRO_LLC {LLC_ISFRAMELEN = 4,LLC_UFRAMELEN = 3,LLC_FRMRLEN = 7,LLC_SNAPFRAMELEN = 8,LLC_UI = 3,LLC_UI_P = 19,LLC_DISC = 67,LLC_DISC_P = 83,LLC_UA = 99,LLC_UA_P = 115,LLC_TEST = 227,LLC_TEST_P = 243,LLC_FRMR = 135,LLC_FRMR_P = 151,LLC_DM = 15,LLC_DM_P = 31,LLC_XID = 175,LLC_XID_P = 191,LLC_SABME = 111,LLC_SABME_P = 127,LLC_RR = 1,LLC_RNR = 5,LLC_REJ = 9,LLC_INFO = 0,LLC_8021D_LSAP = 66,LLC_X25_LSAP = 126,LLC_SNAP_LSAP = 170,LLC_ISO_LSAP = 254,LLC_XID_FORMAT_BASIC = 129,LLC_XID_BASIC_MINLEN = 6,LLC_XID_CLASS_I = 1,LLC_XID_CLASS_II = 3,LLC_XID_CLASS_III = 5,LLC_XID_CLASS_IV = 7,};
enum MACRO_LOG {LOG_EMERG = 0,LOG_ALERT = 1,LOG_CRIT = 2,LOG_ERR = 3,LOG_WARNING = 4,LOG_NOTICE = 5,LOG_INFO = 6,LOG_DEBUG = 7,LOG_PRIMASK = 7,LOG_KERN = 0,LOG_USER = 8,LOG_MAIL = 16,LOG_DAEMON = 24,LOG_AUTH = 32,LOG_SYSLOG = 40,LOG_LPR = 48,LOG_NEWS = 56,LOG_UUCP = 64,LOG_CRON = 72,LOG_AUTHPRIV = 80,LOG_FTP = 88,LOG_NETINFO = 96,LOG_REMOTEAUTH = 104,LOG_INSTALL = 112,LOG_RAS = 120,LOG_LOCAL0 = 128,LOG_LOCAL1 = 136,LOG_LOCAL2 = 144,LOG_LOCAL3 = 152,LOG_LOCAL4 = 160,LOG_LOCAL5 = 168,LOG_LOCAL6 = 176,LOG_LOCAL7 = 184,LOG_LAUNCHD = 192,LOG_NFACILITIES = 25,LOG_FACMASK = 1016,LOG_PID = 1,LOG_CONS = 2,LOG_ODELAY = 4,LOG_NDELAY = 8,LOG_NOWAIT = 16,LOG_PERROR = 32,};
enum MACRO_MAC {MAC_OS_X_VERSION_10_0 = 1000,MAC_OS_X_VERSION_10_1 = 1010,MAC_OS_X_VERSION_10_2 = 1020,MAC_OS_X_VERSION_10_3 = 1030,MAC_OS_X_VERSION_10_4 = 1040,MAC_OS_X_VERSION_10_5 = 1050,MAC_OS_X_VERSION_10_6 = 1060,MAC_OS_X_VERSION_10_7 = 1070,MAC_OS_X_VERSION_MIN_REQUIRED = 1040,MAC_OS_X_VERSION_MAX_ALLOWED = 1070,};
enum MACRO_MAP {MAP_MEM_NOOP = 0,MAP_MEM_COPYBACK = 1,MAP_MEM_IO = 2,MAP_MEM_WTHRU = 3,MAP_MEM_WCOMB = 4,MAP_MEM_ONLY = 65536,MAP_MEM_NAMED_CREATE = 131072,MAP_MEM_PURGABLE = 262144,MAP_MEM_NAMED_REUSE = 524288,};
enum MACRO_MAX {FOPEN_MAX = 20,FILENAME_MAX = 1024,};
enum MACRO_MCL {MCL_CURRENT = 0x1,MCL_FUTURE = 0x2,};
enum MACRO_MCS {MCS_DISABLED = 0,MCS_ONLINE = 1,MCS_PURGING = 2,MCS_OFFLINE = 3,};
enum MACRO_MD2 {MD2_DIGEST_LENGTH = 16,MD2_BLOCK = 16,};
enum MACRO_MD4 {MD4_CBLOCK = 64,MD4_LBLOCK = 16,MD4_DIGEST_LENGTH = 16,};
enum MACRO_MD5 {MD5_CBLOCK = 64,MD5_LBLOCK = 16,MD5_DIGEST_LENGTH = 16,};
enum MACRO_MFD {MFD_SUCCESS = 0,MFD_ERROR = 5,MFD_SKIP = 129,MFD_END_OF_DATA = 130,MFD_CANNOT_CREATE_NOW = 18,MFD_CANNOT_CREATE_EVER = 11,MFD_NOT_WRITABLE = 17,MFD_RESOURCE_UNAVAILABLE = 13,MFD_NOT_VALID_NOW = 12,MFD_NOT_VALID_EVER = 10,MFD_ROW_FLAG_USER_1 = 1,MFD_ROW_FLAG_USER_2 = 2,MFD_ROW_FLAG_USER_3 = 4,MFD_ROW_FLAG_USER_4 = 8,MFD_ROW_FLAG_USER_5 = 16,MFD_ROW_FLAG_USER_6 = 32,MFD_ROW_FLAG_USER_7 = 64,MFD_ROW_FLAG_USER_8 = 128,MFD_ROW_FLAG_USER_MASK = 255,MFD_ROW_MASK = 4294967040,MFD_ROW_CREATED = 2147483648,MFD_ROW_DATA_FROM_USER = 1073741824,MFD_ROW_DELETED = 536870912,MFD_ROW_DIRTY = 268435456,};
enum MACRO_MIB {MIB_ACCESS_READONLY = 18,MIB_ACCESS_READWRITE = 19,MIB_ACCESS_WRITEONLY = 20,MIB_ACCESS_NOACCESS = 21,MIB_ACCESS_NOTIFY = 67,MIB_ACCESS_CREATE = 48,MIB_STATUS_MANDATORY = 23,MIB_STATUS_OPTIONAL = 24,MIB_STATUS_OBSOLETE = 25,MIB_STATUS_DEPRECATED = 39,MIB_STATUS_CURRENT = 57,};
enum MACRO_MIG {MIG_ROUTINE_ARG_DESCRIPTOR_NULL = 0,MIG_ROUTINE_DESCRIPTOR_NULL = 0,MIG_SUBSYSTEM_NULL = 0,MIG_TYPE_ERROR = -300,MIG_REPLY_MISMATCH = -301,MIG_REMOTE_ERROR = -302,MIG_BAD_ID = -303,MIG_BAD_ARGUMENTS = -304,MIG_NO_REPLY = -305,MIG_EXCEPTION = -306,MIG_ARRAY_TOO_LARGE = -307,MIG_SERVER_DIED = -308,MIG_TRAILER_ERROR = -309,};
enum MACRO_MIN {INT8_MIN = -128,INT16_MIN = -32768,INT32_MIN = -2147483648,INT64_MIN = -9223372036854775808,};
enum MACRO_MLD {MLD_LISTENER_QUERY = 130,MLD_LISTENER_REPORT = 131,MLD_LISTENER_DONE = 132,MLD_LISTENER_REDUCTION = 132,};
enum MACRO_MNT {MNT_RDONLY = 0x1,MNT_SYNCHRONOUS = 0x2,MNT_NOEXEC = 0x4,MNT_NOSUID = 0x8,MNT_NODEV = 0x10,MNT_UNION = 0x20,MNT_ASYNC = 0x40,MNT_CPROTECT = 0x80,MNT_EXPORTED = 0x100,MNT_QUARANTINE = 0x400,MNT_LOCAL = 0x1000,MNT_QUOTA = 0x2000,MNT_ROOTFS = 0x4000,MNT_DOVOLFS = 0x8000,MNT_DONTBROWSE = 0x100000,MNT_IGNORE_OWNERSHIP = 0x200000,MNT_AUTOMOUNTED = 0x400000,MNT_JOURNALED = 0x800000,MNT_NOUSERXATTR = 0x1000000,MNT_DEFWRITE = 0x2000000,MNT_MULTILABEL = 0x4000000,MNT_NOATIME = 0x10000000,MNT_UNKNOWNPERMISSIONS = 0x200000,MNT_VISFLAGMASK = 0x17F0F5FF,MNT_UPDATE = 0x10000,MNT_RELOAD = 0x40000,MNT_FORCE = 0x80000,MNT_CMDFLAGS = 0xD0000,};
enum MACRO_MON {MON_1 = 21,MON_2 = 22,MON_3 = 23,MON_4 = 24,MON_5 = 25,MON_6 = 26,MON_7 = 27,MON_8 = 28,MON_9 = 29,MON_10 = 30,MON_11 = 31,MON_12 = 32,};
enum MACRO_MPC {MPC_LOADTIME_FLAG_NOTLATE = 0x1,MPC_LOADTIME_FLAG_UNLOADOK = 0x2,MPC_LOADTIME_FLAG_LABELMBUFS = 0x4,MPC_LOADTIME_BASE_POLICY = 0x8,MPC_RUNTIME_FLAG_REGISTERED = 0x1,};
enum MACRO_MRT {MRT_INIT = 100,MRT_DONE = 101,MRT_ADD_VIF = 102,MRT_DEL_VIF = 103,MRT_ADD_MFC = 104,MRT_DEL_MFC = 105,MRT_VERSION = 106,MRT_ASSERT = 107,};
enum MACRO_MSG {MSG_NOERROR = 0x1000,};
enum MACRO_NDR {NDR_PROTOCOL_2_0 = 0,NDR_INT_BIG_ENDIAN = 0,NDR_INT_LITTLE_ENDIAN = 1,NDR_FLOAT_IEEE = 0,NDR_FLOAT_VAX = 1,NDR_FLOAT_CRAY = 2,NDR_FLOAT_IBM = 3,NDR_CHAR_ASCII = 0,NDR_CHAR_EBCDIC = 1,};
enum MACRO_NET {NET_MAXID = 38,NET_RT_DUMP = 1,NET_RT_FLAGS = 2,NET_RT_IFLIST = 3,NET_RT_STAT = 4,NET_RT_TRASH = 5,NET_RT_IFLIST2 = 6,NET_RT_DUMP2 = 7,NET_RT_MAXID = 10,};
enum MACRO_NEW {NEW_ENV_VAR = 0,NEW_ENV_VALUE = 1,};
enum MACRO_NFF {NFF_BEFORE = 0x1,NFF_AFTER = 0x2,};
enum MACRO_NFS {NFS_PORT = 2049,NFS_PROG = 100003,NFS_VER2 = 2,NFS_VER3 = 3,NFS_VER4 = 4,NFS_V2MAXDATA = 8192,NFS_MAXDGRAMDATA = 16384,NFS_PREFDGRAMDATA = 8192,NFS_MAXDATA = 65536,};
enum MACRO_NID {NID_member_body = 182,NID_identified_organization = 676,NID_hmac_md5 = 780,NID_hmac_sha1 = 781,NID_certicom_arc = 677,NID_international_organizations = 647,NID_wap = 678,NID_wap_wsg = 679,NID_selected_attribute_types = 394,NID_clearance = 395,NID_ISO_US = 183,NID_X9_57 = 184,NID_X9cm = 185,NID_dsa = 116,NID_dsaWithSHA1 = 113,NID_ansi_X9_62 = 405,NID_X9_62_prime_field = 406,NID_X9_62_characteristic_two_field = 407,NID_X9_62_id_characteristic_two_basis = 680,NID_X9_62_onBasis = 681,NID_X9_62_tpBasis = 682,NID_X9_62_ppBasis = 683,NID_X9_62_id_ecPublicKey = 408,NID_X9_62_c2pnb163v1 = 684,NID_X9_62_c2pnb163v2 = 685,NID_X9_62_c2pnb163v3 = 686,NID_X9_62_c2pnb176v1 = 687,NID_X9_62_c2tnb191v1 = 688,NID_X9_62_c2tnb191v2 = 689,NID_X9_62_c2tnb191v3 = 690,NID_X9_62_c2onb191v4 = 691,NID_X9_62_c2onb191v5 = 692,NID_X9_62_c2pnb208w1 = 693,NID_X9_62_c2tnb239v1 = 694,NID_X9_62_c2tnb239v2 = 695,NID_X9_62_c2tnb239v3 = 696,NID_X9_62_c2onb239v4 = 697,NID_X9_62_c2onb239v5 = 698,NID_X9_62_c2pnb272w1 = 699,NID_X9_62_c2pnb304w1 = 700,NID_X9_62_c2tnb359v1 = 701,NID_X9_62_c2pnb368w1 = 702,NID_X9_62_c2tnb431r1 = 703,NID_X9_62_prime192v1 = 409,NID_X9_62_prime192v2 = 410,NID_X9_62_prime192v3 = 411,NID_X9_62_prime239v1 = 412,NID_X9_62_prime239v2 = 413,NID_X9_62_prime239v3 = 414,NID_X9_62_prime256v1 = 415,NID_ecdsa_with_SHA1 = 416,NID_ecdsa_with_Recommended = 791,NID_ecdsa_with_Specified = 792,NID_ecdsa_with_SHA224 = 793,NID_ecdsa_with_SHA256 = 794,NID_ecdsa_with_SHA384 = 795,NID_ecdsa_with_SHA512 = 796,NID_secp112r1 = 704,NID_secp112r2 = 705,NID_secp128r1 = 706,NID_secp128r2 = 707,NID_secp160k1 = 708,NID_secp160r1 = 709,NID_secp160r2 = 710,NID_secp192k1 = 711,NID_secp224k1 = 712,NID_secp224r1 = 713,NID_secp256k1 = 714,NID_secp384r1 = 715,NID_secp521r1 = 716,NID_sect113r1 = 717,NID_sect113r2 = 718,NID_sect131r1 = 719,NID_sect131r2 = 720,NID_sect163k1 = 721,NID_sect163r1 = 722,NID_sect163r2 = 723,NID_sect193r1 = 724,NID_sect193r2 = 725,NID_sect233k1 = 726,NID_sect233r1 = 727,NID_sect239k1 = 728,NID_sect283k1 = 729,NID_sect283r1 = 730,NID_sect409k1 = 731,NID_sect409r1 = 732,NID_sect571k1 = 733,NID_sect571r1 = 734,NID_wap_wsg_idm_ecid_wtls1 = 735,NID_wap_wsg_idm_ecid_wtls3 = 736,NID_wap_wsg_idm_ecid_wtls4 = 737,NID_wap_wsg_idm_ecid_wtls5 = 738,NID_wap_wsg_idm_ecid_wtls6 = 739,NID_wap_wsg_idm_ecid_wtls7 = 740,NID_wap_wsg_idm_ecid_wtls8 = 741,NID_wap_wsg_idm_ecid_wtls9 = 742,NID_wap_wsg_idm_ecid_wtls10 = 743,NID_wap_wsg_idm_ecid_wtls11 = 744,NID_wap_wsg_idm_ecid_wtls12 = 745,NID_cast5_cbc = 108,NID_cast5_ecb = 109,NID_cast5_cfb64 = 110,NID_cast5_ofb64 = 111,NID_pbeWithMD5AndCast5_CBC = 112,NID_id_PasswordBasedMAC = 782,NID_id_DHBasedMac = 783,NID_rsadsi = 1,NID_pkcs = 2,NID_pkcs1 = 186,NID_rsaEncryption = 6,NID_md2WithRSAEncryption = 7,NID_md4WithRSAEncryption = 396,NID_md5WithRSAEncryption = 8,NID_sha1WithRSAEncryption = 65,NID_sha256WithRSAEncryption = 668,NID_sha384WithRSAEncryption = 669,NID_sha512WithRSAEncryption = 670,NID_sha224WithRSAEncryption = 671,NID_pkcs3 = 27,NID_dhKeyAgreement = 28,NID_pkcs5 = 187,NID_pbeWithMD2AndDES_CBC = 9,NID_pbeWithMD5AndDES_CBC = 10,NID_pbeWithMD2AndRC2_CBC = 168,NID_pbeWithMD5AndRC2_CBC = 169,NID_pbeWithSHA1AndDES_CBC = 170,NID_pbeWithSHA1AndRC2_CBC = 68,NID_id_pbkdf2 = 69,NID_pbes2 = 161,NID_pbmac1 = 162,NID_pkcs7 = 20,NID_pkcs7_data = 21,NID_pkcs7_signed = 22,NID_pkcs7_enveloped = 23,NID_pkcs7_signedAndEnveloped = 24,NID_pkcs7_digest = 25,NID_pkcs7_encrypted = 26,NID_pkcs9 = 47,NID_pkcs9_emailAddress = 48,NID_pkcs9_unstructuredName = 49,NID_pkcs9_contentType = 50,NID_pkcs9_messageDigest = 51,NID_pkcs9_signingTime = 52,NID_pkcs9_countersignature = 53,NID_pkcs9_challengePassword = 54,NID_pkcs9_unstructuredAddress = 55,NID_pkcs9_extCertAttributes = 56,NID_ext_req = 172,NID_SMIMECapabilities = 167,NID_SMIME = 188,NID_id_smime_mod = 189,NID_id_smime_ct = 190,NID_id_smime_aa = 191,NID_id_smime_alg = 192,NID_id_smime_cd = 193,NID_id_smime_spq = 194,NID_id_smime_cti = 195,NID_id_smime_mod_cms = 196,NID_id_smime_mod_ess = 197,NID_id_smime_mod_oid = 198,NID_id_smime_mod_msg_v3 = 199,NID_id_smime_mod_ets_eSignature_88 = 200,NID_id_smime_mod_ets_eSignature_97 = 201,NID_id_smime_mod_ets_eSigPolicy_88 = 202,NID_id_smime_mod_ets_eSigPolicy_97 = 203,NID_id_smime_ct_receipt = 204,NID_id_smime_ct_authData = 205,NID_id_smime_ct_publishCert = 206,NID_id_smime_ct_TSTInfo = 207,NID_id_smime_ct_TDTInfo = 208,NID_id_smime_ct_contentInfo = 209,NID_id_smime_ct_DVCSRequestData = 210,NID_id_smime_ct_DVCSResponseData = 211,NID_id_smime_ct_compressedData = 786,NID_id_ct_asciiTextWithCRLF = 787,NID_id_smime_aa_receiptRequest = 212,NID_id_smime_aa_securityLabel = 213,NID_id_smime_aa_mlExpandHistory = 214,NID_id_smime_aa_contentHint = 215,NID_id_smime_aa_msgSigDigest = 216,NID_id_smime_aa_encapContentType = 217,NID_id_smime_aa_contentIdentifier = 218,NID_id_smime_aa_macValue = 219,NID_id_smime_aa_equivalentLabels = 220,NID_id_smime_aa_contentReference = 221,NID_id_smime_aa_encrypKeyPref = 222,NID_id_smime_aa_signingCertificate = 223,NID_id_smime_aa_smimeEncryptCerts = 224,NID_id_smime_aa_timeStampToken = 225,NID_id_smime_aa_ets_sigPolicyId = 226,NID_id_smime_aa_ets_commitmentType = 227,NID_id_smime_aa_ets_signerLocation = 228,NID_id_smime_aa_ets_signerAttr = 229,NID_id_smime_aa_ets_otherSigCert = 230,NID_id_smime_aa_ets_contentTimestamp = 231,NID_id_smime_aa_ets_CertificateRefs = 232,NID_id_smime_aa_ets_RevocationRefs = 233,NID_id_smime_aa_ets_certValues = 234,NID_id_smime_aa_ets_revocationValues = 235,NID_id_smime_aa_ets_escTimeStamp = 236,NID_id_smime_aa_ets_certCRLTimestamp = 237,NID_id_smime_aa_ets_archiveTimeStamp = 238,NID_id_smime_aa_signatureType = 239,NID_id_smime_aa_dvcs_dvc = 240,NID_id_smime_alg_ESDHwith3DES = 241,NID_id_smime_alg_ESDHwithRC2 = 242,NID_id_smime_alg_3DESwrap = 243,NID_id_smime_alg_RC2wrap = 244,NID_id_smime_alg_ESDH = 245,NID_id_smime_alg_CMS3DESwrap = 246,NID_id_smime_alg_CMSRC2wrap = 247,NID_id_smime_cd_ldap = 248,NID_id_smime_spq_ets_sqt_uri = 249,NID_id_smime_spq_ets_sqt_unotice = 250,NID_id_smime_cti_ets_proofOfOrigin = 251,NID_id_smime_cti_ets_proofOfReceipt = 252,NID_id_smime_cti_ets_proofOfDelivery = 253,NID_id_smime_cti_ets_proofOfSender = 254,NID_id_smime_cti_ets_proofOfApproval = 255,NID_id_smime_cti_ets_proofOfCreation = 256,NID_friendlyName = 156,NID_localKeyID = 157,NID_ms_csp_name = 417,NID_LocalKeySet = 856,NID_x509Certificate = 158,NID_sdsiCertificate = 159,NID_x509Crl = 160,NID_pbe_WithSHA1And128BitRC4 = 144,NID_pbe_WithSHA1And40BitRC4 = 145,NID_pbe_WithSHA1And3_Key_TripleDES_CBC = 146,NID_pbe_WithSHA1And2_Key_TripleDES_CBC = 147,NID_pbe_WithSHA1And128BitRC2_CBC = 148,NID_pbe_WithSHA1And40BitRC2_CBC = 149,NID_keyBag = 150,NID_pkcs8ShroudedKeyBag = 151,NID_certBag = 152,NID_crlBag = 153,NID_secretBag = 154,NID_safeContentsBag = 155,NID_md2 = 3,NID_md4 = 257,NID_md5 = 4,NID_md5_sha1 = 114,NID_hmacWithMD5 = 797,NID_hmacWithSHA1 = 163,NID_hmacWithSHA224 = 798,NID_hmacWithSHA256 = 799,NID_hmacWithSHA384 = 800,NID_hmacWithSHA512 = 801,NID_rc2_cbc = 37,NID_rc2_ecb = 38,NID_rc2_cfb64 = 39,NID_rc2_ofb64 = 40,NID_rc2_40_cbc = 98,NID_rc2_64_cbc = 166,NID_rc4 = 5,NID_rc4_40 = 97,NID_des_ede3_cbc = 44,NID_rc5_cbc = 120,NID_rc5_ecb = 121,NID_rc5_cfb64 = 122,NID_rc5_ofb64 = 123,NID_ms_ext_req = 171,NID_ms_code_ind = 134,NID_ms_code_com = 135,NID_ms_ctl_sign = 136,NID_ms_sgc = 137,NID_ms_efs = 138,NID_ms_smartcard_login = 648,NID_ms_upn = 649,NID_idea_cbc = 34,NID_idea_ecb = 36,NID_idea_cfb64 = 35,NID_idea_ofb64 = 46,NID_bf_cbc = 91,NID_bf_ecb = 92,NID_bf_cfb64 = 93,NID_bf_ofb64 = 94,NID_id_pkix = 127,NID_id_pkix_mod = 258,NID_id_pe = 175,NID_id_qt = 259,NID_id_kp = 128,NID_id_it = 260,NID_id_pkip = 261,NID_id_alg = 262,NID_id_cmc = 263,NID_id_on = 264,NID_id_pda = 265,NID_id_aca = 266,NID_id_qcs = 267,NID_id_cct = 268,NID_id_ppl = 662,NID_id_ad = 176,NID_id_pkix1_explicit_88 = 269,NID_id_pkix1_implicit_88 = 270,NID_id_pkix1_explicit_93 = 271,NID_id_pkix1_implicit_93 = 272,NID_id_mod_crmf = 273,NID_id_mod_cmc = 274,NID_id_mod_kea_profile_88 = 275,NID_id_mod_kea_profile_93 = 276,NID_id_mod_cmp = 277,NID_id_mod_qualified_cert_88 = 278,NID_id_mod_qualified_cert_93 = 279,NID_id_mod_attribute_cert = 280,NID_id_mod_timestamp_protocol = 281,NID_id_mod_ocsp = 282,NID_id_mod_dvcs = 283,NID_id_mod_cmp2000 = 284,NID_info_access = 177,NID_biometricInfo = 285,NID_qcStatements = 286,NID_ac_auditEntity = 287,NID_ac_targeting = 288,NID_aaControls = 289,NID_sbgp_ipAddrBlock = 290,NID_sbgp_autonomousSysNum = 291,NID_sbgp_routerIdentifier = 292,NID_ac_proxying = 397,NID_sinfo_access = 398,NID_proxyCertInfo = 663,NID_id_qt_cps = 164,NID_id_qt_unotice = 165,NID_textNotice = 293,NID_server_auth = 129,NID_client_auth = 130,NID_code_sign = 131,NID_email_protect = 132,NID_ipsecEndSystem = 294,NID_ipsecTunnel = 295,NID_ipsecUser = 296,NID_time_stamp = 133,NID_OCSP_sign = 180,NID_dvcs = 297,NID_id_it_caProtEncCert = 298,NID_id_it_signKeyPairTypes = 299,NID_id_it_encKeyPairTypes = 300,NID_id_it_preferredSymmAlg = 301,NID_id_it_caKeyUpdateInfo = 302,NID_id_it_currentCRL = 303,NID_id_it_unsupportedOIDs = 304,NID_id_it_subscriptionRequest = 305,NID_id_it_subscriptionResponse = 306,NID_id_it_keyPairParamReq = 307,NID_id_it_keyPairParamRep = 308,NID_id_it_revPassphrase = 309,NID_id_it_implicitConfirm = 310,NID_id_it_confirmWaitTime = 311,NID_id_it_origPKIMessage = 312,NID_id_it_suppLangTags = 784,NID_id_regCtrl = 313,NID_id_regInfo = 314,NID_id_regCtrl_regToken = 315,NID_id_regCtrl_authenticator = 316,NID_id_regCtrl_pkiPublicationInfo = 317,NID_id_regCtrl_pkiArchiveOptions = 318,NID_id_regCtrl_oldCertID = 319,NID_id_regCtrl_protocolEncrKey = 320,NID_id_regInfo_utf8Pairs = 321,NID_id_regInfo_certReq = 322,NID_id_alg_des40 = 323,NID_id_alg_noSignature = 324,NID_id_alg_dh_sig_hmac_sha1 = 325,NID_id_alg_dh_pop = 326,NID_id_cmc_statusInfo = 327,NID_id_cmc_identification = 328,NID_id_cmc_identityProof = 329,NID_id_cmc_dataReturn = 330,NID_id_cmc_transactionId = 331,NID_id_cmc_senderNonce = 332,NID_id_cmc_recipientNonce = 333,NID_id_cmc_addExtensions = 334,NID_id_cmc_encryptedPOP = 335,NID_id_cmc_decryptedPOP = 336,NID_id_cmc_lraPOPWitness = 337,NID_id_cmc_getCert = 338,NID_id_cmc_getCRL = 339,NID_id_cmc_revokeRequest = 340,NID_id_cmc_regInfo = 341,NID_id_cmc_responseInfo = 342,NID_id_cmc_queryPending = 343,NID_id_cmc_popLinkRandom = 344,NID_id_cmc_popLinkWitness = 345,NID_id_cmc_confirmCertAcceptance = 346,NID_id_on_personalData = 347,NID_id_on_permanentIdentifier = 858,NID_id_pda_dateOfBirth = 348,NID_id_pda_placeOfBirth = 349,NID_id_pda_gender = 351,NID_id_pda_countryOfCitizenship = 352,NID_id_pda_countryOfResidence = 353,NID_id_aca_authenticationInfo = 354,NID_id_aca_accessIdentity = 355,NID_id_aca_chargingIdentity = 356,NID_id_aca_group = 357,NID_id_aca_role = 358,NID_id_aca_encAttrs = 399,NID_id_qcs_pkixQCSyntax_v1 = 359,NID_id_cct_crs = 360,NID_id_cct_PKIData = 361,NID_id_cct_PKIResponse = 362,NID_id_ppl_anyLanguage = 664,NID_id_ppl_inheritAll = 665,NID_Independent = 667,NID_ad_OCSP = 178,NID_ad_ca_issuers = 179,NID_ad_timeStamping = 363,NID_ad_dvcs = 364,NID_caRepository = 785,NID_id_pkix_OCSP_basic = 365,NID_id_pkix_OCSP_Nonce = 366,NID_id_pkix_OCSP_CrlID = 367,NID_id_pkix_OCSP_acceptableResponses = 368,NID_id_pkix_OCSP_noCheck = 369,NID_id_pkix_OCSP_archiveCutoff = 370,NID_id_pkix_OCSP_serviceLocator = 371,NID_id_pkix_OCSP_extendedStatus = 372,NID_id_pkix_OCSP_valid = 373,NID_id_pkix_OCSP_path = 374,NID_id_pkix_OCSP_trustRoot = 375,NID_algorithm = 376,NID_md5WithRSA = 104,NID_des_ecb = 29,NID_des_cbc = 31,NID_des_ofb64 = 45,NID_des_cfb64 = 30,NID_rsaSignature = 377,NID_dsa_2 = 67,NID_dsaWithSHA = 66,NID_shaWithRSAEncryption = 42,NID_des_ede_ecb = 32,NID_des_ede3_ecb = 33,NID_des_ede_cbc = 43,NID_des_ede_cfb64 = 60,NID_des_ede3_cfb64 = 61,NID_des_ede_ofb64 = 62,NID_des_ede3_ofb64 = 63,NID_desx_cbc = 80,NID_sha = 41,NID_sha1 = 64,NID_dsaWithSHA1_2 = 70,NID_sha1WithRSA = 115,NID_ripemd160 = 117,NID_ripemd160WithRSA = 119,NID_sxnet = 143,NID_X500 = 11,NID_X509 = 12,NID_commonName = 13,NID_surname = 100,NID_serialNumber = 105,NID_countryName = 14,NID_localityName = 15,NID_stateOrProvinceName = 16,NID_streetAddress = 660,NID_organizationName = 17,NID_organizationalUnitName = 18,NID_title = 106,NID_description = 107,NID_searchGuide = 859,NID_businessCategory = 860,NID_postalAddress = 861,NID_postalCode = 661,NID_postOfficeBox = 862,NID_physicalDeliveryOfficeName = 863,NID_telephoneNumber = 864,NID_telexNumber = 865,NID_teletexTerminalIdentifier = 866,NID_facsimileTelephoneNumber = 867,NID_x121Address = 868,NID_internationaliSDNNumber = 869,NID_registeredAddress = 870,NID_destinationIndicator = 871,NID_preferredDeliveryMethod = 872,NID_presentationAddress = 873,NID_supportedApplicationContext = 874,NID_member = 875,NID_owner = 876,NID_roleOccupant = 877,NID_seeAlso = 878,NID_userPassword = 879,NID_userCertificate = 880,NID_cACertificate = 881,NID_authorityRevocationList = 882,NID_certificateRevocationList = 883,NID_crossCertificatePair = 884,NID_name = 173,NID_givenName = 99,NID_initials = 101,NID_generationQualifier = 509,NID_x500UniqueIdentifier = 503,NID_dnQualifier = 174,NID_enhancedSearchGuide = 885,NID_protocolInformation = 886,NID_distinguishedName = 887,NID_uniqueMember = 888,NID_houseIdentifier = 889,NID_supportedAlgorithms = 890,NID_deltaRevocationList = 891,NID_dmdName = 892,NID_pseudonym = 510,NID_role = 400,NID_X500algorithms = 378,NID_rsa = 19,NID_mdc2WithRSA = 96,NID_mdc2 = 95,NID_id_ce = 81,NID_subject_directory_attributes = 769,NID_subject_key_identifier = 82,NID_key_usage = 83,NID_private_key_usage_period = 84,NID_subject_alt_name = 85,NID_issuer_alt_name = 86,NID_basic_constraints = 87,NID_crl_number = 88,NID_crl_reason = 141,NID_invalidity_date = 142,NID_delta_crl = 140,NID_issuing_distribution_point = 770,NID_certificate_issuer = 771,NID_name_constraints = 666,NID_crl_distribution_points = 103,NID_certificate_policies = 89,NID_any_policy = 746,NID_policy_mappings = 747,NID_authority_key_identifier = 90,NID_policy_constraints = 401,NID_ext_key_usage = 126,NID_freshest_crl = 857,NID_inhibit_any_policy = 748,NID_target_information = 402,NID_no_rev_avail = 403,NID_netscape = 57,NID_netscape_cert_extension = 58,NID_netscape_data_type = 59,NID_netscape_cert_type = 71,NID_netscape_base_url = 72,NID_netscape_revocation_url = 73,NID_netscape_ca_revocation_url = 74,NID_netscape_renewal_url = 75,NID_netscape_ca_policy_url = 76,NID_netscape_ssl_server_name = 77,NID_netscape_comment = 78,NID_netscape_cert_sequence = 79,NID_ns_sgc = 139,NID_org = 379,NID_dod = 380,NID_iana = 381,NID_Directory = 382,NID_Management = 383,NID_Experimental = 384,NID_Private = 385,NID_Security = 386,NID_SNMPv2 = 387,NID_Mail = 388,NID_Enterprises = 389,NID_dcObject = 390,NID_mime_mhs = 504,NID_mime_mhs_headings = 505,NID_mime_mhs_bodies = 506,NID_id_hex_partial_message = 507,NID_id_hex_multipart_message = 508,NID_rle_compression = 124,NID_zlib_compression = 125,NID_aes_128_ecb = 418,NID_aes_128_cbc = 419,NID_aes_128_ofb128 = 420,NID_aes_128_cfb128 = 421,NID_aes_192_ecb = 422,NID_aes_192_cbc = 423,NID_aes_192_ofb128 = 424,NID_aes_192_cfb128 = 425,NID_aes_256_ecb = 426,NID_aes_256_cbc = 427,NID_aes_256_ofb128 = 428,NID_aes_256_cfb128 = 429,NID_aes_128_cfb1 = 650,NID_aes_192_cfb1 = 651,NID_aes_256_cfb1 = 652,NID_aes_128_cfb8 = 653,NID_aes_192_cfb8 = 654,NID_aes_256_cfb8 = 655,NID_des_cfb1 = 656,NID_des_cfb8 = 657,NID_des_ede3_cfb1 = 658,NID_des_ede3_cfb8 = 659,NID_id_aes128_wrap = 788,NID_id_aes192_wrap = 789,NID_id_aes256_wrap = 790,NID_sha256 = 672,NID_sha384 = 673,NID_sha512 = 674,NID_sha224 = 675,NID_dsa_with_SHA224 = 802,NID_dsa_with_SHA256 = 803,NID_hold_instruction_code = 430,NID_hold_instruction_none = 431,NID_hold_instruction_call_issuer = 432,NID_hold_instruction_reject = 433,NID_data = 434,NID_pss = 435,NID_ucl = 436,NID_pilot = 437,NID_pilotAttributeType = 438,NID_pilotAttributeSyntax = 439,NID_pilotObjectClass = 440,NID_pilotGroups = 441,NID_iA5StringSyntax = 442,NID_caseIgnoreIA5StringSyntax = 443,NID_pilotObject = 444,NID_pilotPerson = 445,NID_account = 446,NID_document = 447,NID_room = 448,NID_documentSeries = 449,NID_Domain = 392,NID_rFC822localPart = 450,NID_dNSDomain = 451,NID_domainRelatedObject = 452,NID_friendlyCountry = 453,NID_simpleSecurityObject = 454,NID_pilotOrganization = 455,NID_pilotDSA = 456,NID_qualityLabelledData = 457,NID_userId = 458,NID_textEncodedORAddress = 459,NID_rfc822Mailbox = 460,NID_info = 461,NID_favouriteDrink = 462,NID_roomNumber = 463,NID_photo = 464,NID_userClass = 465,NID_host = 466,NID_manager = 467,NID_documentIdentifier = 468,NID_documentTitle = 469,NID_documentVersion = 470,NID_documentAuthor = 471,NID_documentLocation = 472,NID_homeTelephoneNumber = 473,NID_secretary = 474,NID_otherMailbox = 475,NID_lastModifiedTime = 476,NID_lastModifiedBy = 477,NID_domainComponent = 391,NID_aRecord = 478,NID_pilotAttributeType27 = 479,NID_mXRecord = 480,NID_nSRecord = 481,NID_sOARecord = 482,NID_cNAMERecord = 483,NID_associatedDomain = 484,NID_associatedName = 485,NID_homePostalAddress = 486,NID_personalTitle = 487,NID_mobileTelephoneNumber = 488,NID_pagerTelephoneNumber = 489,NID_friendlyCountryName = 490,NID_organizationalStatus = 491,NID_janetMailbox = 492,NID_mailPreferenceOption = 493,NID_buildingName = 494,NID_dSAQuality = 495,NID_singleLevelQuality = 496,NID_subtreeMinimumQuality = 497,NID_subtreeMaximumQuality = 498,NID_personalSignature = 499,NID_dITRedirect = 500,NID_audio = 501,NID_documentPublisher = 502,NID_id_set = 512,NID_set_ctype = 513,NID_set_msgExt = 514,NID_set_attr = 515,NID_set_policy = 516,NID_set_certExt = 517,NID_set_brand = 518,NID_setct_PANData = 519,NID_setct_PANToken = 520,NID_setct_PANOnly = 521,NID_setct_OIData = 522,NID_setct_PI = 523,NID_setct_PIData = 524,NID_setct_PIDataUnsigned = 525,NID_setct_HODInput = 526,NID_setct_AuthResBaggage = 527,NID_setct_AuthRevReqBaggage = 528,NID_setct_AuthRevResBaggage = 529,NID_setct_CapTokenSeq = 530,NID_setct_PInitResData = 531,NID_setct_PI_TBS = 532,NID_setct_PResData = 533,NID_setct_AuthReqTBS = 534,NID_setct_AuthResTBS = 535,NID_setct_AuthResTBSX = 536,NID_setct_AuthTokenTBS = 537,NID_setct_CapTokenData = 538,NID_setct_CapTokenTBS = 539,NID_setct_AcqCardCodeMsg = 540,NID_setct_AuthRevReqTBS = 541,NID_setct_AuthRevResData = 542,NID_setct_AuthRevResTBS = 543,NID_setct_CapReqTBS = 544,NID_setct_CapReqTBSX = 545,NID_setct_CapResData = 546,NID_setct_CapRevReqTBS = 547,NID_setct_CapRevReqTBSX = 548,NID_setct_CapRevResData = 549,NID_setct_CredReqTBS = 550,NID_setct_CredReqTBSX = 551,NID_setct_CredResData = 552,NID_setct_CredRevReqTBS = 553,NID_setct_CredRevReqTBSX = 554,NID_setct_CredRevResData = 555,NID_setct_PCertReqData = 556,NID_setct_PCertResTBS = 557,NID_setct_BatchAdminReqData = 558,NID_setct_BatchAdminResData = 559,NID_setct_CardCInitResTBS = 560,NID_setct_MeAqCInitResTBS = 561,NID_setct_RegFormResTBS = 562,NID_setct_CertReqData = 563,NID_setct_CertReqTBS = 564,NID_setct_CertResData = 565,NID_setct_CertInqReqTBS = 566,NID_setct_ErrorTBS = 567,NID_setct_PIDualSignedTBE = 568,NID_setct_PIUnsignedTBE = 569,NID_setct_AuthReqTBE = 570,NID_setct_AuthResTBE = 571,NID_setct_AuthResTBEX = 572,NID_setct_AuthTokenTBE = 573,NID_setct_CapTokenTBE = 574,NID_setct_CapTokenTBEX = 575,NID_setct_AcqCardCodeMsgTBE = 576,NID_setct_AuthRevReqTBE = 577,NID_setct_AuthRevResTBE = 578,NID_setct_AuthRevResTBEB = 579,NID_setct_CapReqTBE = 580,NID_setct_CapReqTBEX = 581,NID_setct_CapResTBE = 582,NID_setct_CapRevReqTBE = 583,NID_setct_CapRevReqTBEX = 584,NID_setct_CapRevResTBE = 585,NID_setct_CredReqTBE = 586,NID_setct_CredReqTBEX = 587,NID_setct_CredResTBE = 588,NID_setct_CredRevReqTBE = 589,NID_setct_CredRevReqTBEX = 590,NID_setct_CredRevResTBE = 591,NID_setct_BatchAdminReqTBE = 592,NID_setct_BatchAdminResTBE = 593,NID_setct_RegFormReqTBE = 594,NID_setct_CertReqTBE = 595,NID_setct_CertReqTBEX = 596,NID_setct_CertResTBE = 597,NID_setct_CRLNotificationTBS = 598,NID_setct_CRLNotificationResTBS = 599,NID_setct_BCIDistributionTBS = 600,NID_setext_genCrypt = 601,NID_setext_miAuth = 602,NID_setext_pinSecure = 603,NID_setext_pinAny = 604,NID_setext_track2 = 605,NID_setext_cv = 606,NID_set_policy_root = 607,NID_setCext_hashedRoot = 608,NID_setCext_certType = 609,NID_setCext_merchData = 610,NID_setCext_cCertRequired = 611,NID_setCext_tunneling = 612,NID_setCext_setExt = 613,NID_setCext_setQualf = 614,NID_setCext_PGWYcapabilities = 615,NID_setCext_TokenIdentifier = 616,NID_setCext_Track2Data = 617,NID_setCext_TokenType = 618,NID_setCext_IssuerCapabilities = 619,NID_setAttr_Cert = 620,NID_setAttr_PGWYcap = 621,NID_setAttr_TokenType = 622,NID_setAttr_IssCap = 623,NID_set_rootKeyThumb = 624,NID_set_addPolicy = 625,NID_setAttr_Token_EMV = 626,NID_setAttr_Token_B0Prime = 627,NID_setAttr_IssCap_CVM = 628,NID_setAttr_IssCap_T2 = 629,NID_setAttr_IssCap_Sig = 630,NID_setAttr_GenCryptgrm = 631,NID_setAttr_T2Enc = 632,NID_setAttr_T2cleartxt = 633,NID_setAttr_TokICCsig = 634,NID_setAttr_SecDevSig = 635,NID_set_brand_IATA_ATA = 636,NID_set_brand_Diners = 637,NID_set_brand_AmericanExpress = 638,NID_set_brand_JCB = 639,NID_set_brand_Visa = 640,NID_set_brand_MasterCard = 641,NID_set_brand_Novus = 642,NID_des_cdmf = 643,NID_rsaOAEPEncryptionSET = 644,NID_ipsec3 = 749,NID_ipsec4 = 750,NID_whirlpool = 804,NID_cryptopro = 805,NID_cryptocom = 806,NID_id_GostR3411_94_with_GostR3410_2001 = 807,NID_id_GostR3411_94_with_GostR3410_94 = 808,NID_id_GostR3411_94 = 809,NID_id_HMACGostR3411_94 = 810,NID_id_GostR3410_2001 = 811,NID_id_GostR3410_94 = 812,NID_id_Gost28147_89 = 813,NID_gost89_cnt = 814,NID_id_Gost28147_89_MAC = 815,NID_id_GostR3411_94_prf = 816,NID_id_GostR3410_2001DH = 817,NID_id_GostR3410_94DH = 818,NID_id_Gost28147_89_CryptoPro_KeyMeshing = 819,NID_id_Gost28147_89_None_KeyMeshing = 820,NID_id_GostR3411_94_TestParamSet = 821,NID_id_GostR3411_94_CryptoProParamSet = 822,NID_id_Gost28147_89_TestParamSet = 823,NID_id_Gost28147_89_CryptoPro_A_ParamSet = 824,NID_id_Gost28147_89_CryptoPro_B_ParamSet = 825,NID_id_Gost28147_89_CryptoPro_C_ParamSet = 826,NID_id_Gost28147_89_CryptoPro_D_ParamSet = 827,NID_id_Gost28147_89_CryptoPro_Oscar_1_1_ParamSet = 828,NID_id_Gost28147_89_CryptoPro_Oscar_1_0_ParamSet = 829,NID_id_Gost28147_89_CryptoPro_RIC_1_ParamSet = 830,NID_id_GostR3410_94_TestParamSet = 831,NID_id_GostR3410_94_CryptoPro_A_ParamSet = 832,NID_id_GostR3410_94_CryptoPro_B_ParamSet = 833,NID_id_GostR3410_94_CryptoPro_C_ParamSet = 834,NID_id_GostR3410_94_CryptoPro_D_ParamSet = 835,NID_id_GostR3410_94_CryptoPro_XchA_ParamSet = 836,NID_id_GostR3410_94_CryptoPro_XchB_ParamSet = 837,NID_id_GostR3410_94_CryptoPro_XchC_ParamSet = 838,NID_id_GostR3410_2001_TestParamSet = 839,NID_id_GostR3410_2001_CryptoPro_A_ParamSet = 840,NID_id_GostR3410_2001_CryptoPro_B_ParamSet = 841,NID_id_GostR3410_2001_CryptoPro_C_ParamSet = 842,NID_id_GostR3410_2001_CryptoPro_XchA_ParamSet = 843,NID_id_GostR3410_2001_CryptoPro_XchB_ParamSet = 844,NID_id_GostR3410_94_a = 845,NID_id_GostR3410_94_aBis = 846,NID_id_GostR3410_94_b = 847,NID_id_GostR3410_94_bBis = 848,NID_id_Gost28147_89_cc = 849,NID_id_GostR3410_94_cc = 850,NID_id_GostR3410_2001_cc = 851,NID_id_GostR3411_94_with_GostR3410_94_cc = 852,NID_id_GostR3411_94_with_GostR3410_2001_cc = 853,NID_id_GostR3410_2001_ParamSet_cc = 854,NID_camellia_128_cbc = 751,NID_camellia_192_cbc = 752,NID_camellia_256_cbc = 753,NID_camellia_128_ecb = 754,NID_camellia_128_ofb128 = 766,NID_camellia_128_cfb128 = 757,NID_camellia_192_ecb = 755,NID_camellia_192_ofb128 = 767,NID_camellia_192_cfb128 = 758,NID_camellia_256_ecb = 756,NID_camellia_256_ofb128 = 768,NID_camellia_256_cfb128 = 759,NID_camellia_128_cfb1 = 760,NID_camellia_192_cfb1 = 761,NID_camellia_256_cfb1 = 762,NID_camellia_128_cfb8 = 763,NID_camellia_192_cfb8 = 764,NID_camellia_256_cfb8 = 765,NID_kisa = 773,NID_seed_ecb = 776,NID_seed_cbc = 777,NID_seed_cfb128 = 779,NID_seed_ofb128 = 778,NID_hmac = 855,};
enum MACRO_NKE {NKE_OK = 0,NKE_REMOVE = -1,};
enum MACRO_NL0 {NL0 = 0x0,NL1 = 0x100,NL2 = 0x200,};
enum MACRO_NL3 {NL3 = 0x300,};
enum MACRO_NLM {NLM_PROG = 100021,NLM_SM = 0,NLM_SM_NOTIFY = 1,NLM_VERS = 1,NLM_TEST = 1,NLM_LOCK = 2,NLM_CANCEL = 3,NLM_UNLOCK = 4,NLM_GRANTED = 5,NLM_TEST_MSG = 6,NLM_LOCK_MSG = 7,NLM_CANCEL_MSG = 8,NLM_UNLOCK_MSG = 9,NLM_GRANTED_MSG = 10,NLM_TEST_RES = 11,NLM_LOCK_RES = 12,NLM_CANCEL_RES = 13,NLM_UNLOCK_RES = 14,NLM_GRANTED_RES = 15,NLM_VERSX = 3,NLM_SHARE = 20,NLM_UNSHARE = 21,NLM_NM_LOCK = 22,NLM_FREE_ALL = 23,NLM_VERS4 = 4,};
enum MACRO_NOP {NOP = 241,};
enum MACRO_NOT {NOT_HERE = 1,};
enum MACRO_NUM {NUM_PARM = 9,};
enum MACRO_NXA {NXA_DELETE = 0x1,NXA_ADD = 0x2,NXA_REPLACE = 0x3,NXA_DELETE_ALL = 0x4,NXA_OFFLINE = 0x8,NXA_CHECK = 0x10,};
enum MACRO_OBJ {OBJ_NAME_TYPE_UNDEF = 0x0,OBJ_NAME_TYPE_MD_METH = 0x1,OBJ_NAME_TYPE_CIPHER_METH = 0x2,OBJ_NAME_TYPE_PKEY_METH = 0x3,OBJ_NAME_TYPE_COMP_METH = 0x4,OBJ_NAME_TYPE_NUM = 0x5,OBJ_NAME_ALIAS = 0x8000,OBJ_BSEARCH_VALUE_ON_NOMATCH = 0x1,OBJ_BSEARCH_FIRST_VALUE_ON_MATCH = 0x2,OBJ_F_OBJ_ADD_OBJECT = 0x69,OBJ_F_OBJ_CREATE = 0x64,OBJ_F_OBJ_DUP = 0x65,OBJ_F_OBJ_NAME_NEW_INDEX = 0x6A,OBJ_F_OBJ_NID2LN = 0x66,OBJ_F_OBJ_NID2OBJ = 0x67,OBJ_F_OBJ_NID2SN = 0x68,OBJ_R_MALLOC_FAILURE = 0x64,OBJ_R_UNKNOWN_NID = 0x65,};
enum MACRO_OFF {OFF_MIN = -9223372036854775808,OFF_MAX = 9223372036854775807,};
enum MACRO_OID {OID_AUTO = -1,OID_AUTO_START = 100,};
enum MACRO_OLD {OLD_ENV_VAR = 1,OLD_ENV_VALUE = 0,};
enum MACRO_ONE {ONE_SEC = 1000000,};
enum MACRO_PAD {PAD_NOTATTR = 0x4000,PAD_FAILURE = 0x8000,};
enum MACRO_PEM {PEM_BUFSIZE = 1024,PEM_OBJ_UNDEF = 0,PEM_OBJ_X509 = 1,PEM_OBJ_X509_REQ = 2,PEM_OBJ_CRL = 3,PEM_OBJ_SSL_SESSION = 4,PEM_OBJ_PRIV_KEY = 10,PEM_OBJ_PRIV_RSA = 11,PEM_OBJ_PRIV_DSA = 12,PEM_OBJ_PRIV_DH = 13,PEM_OBJ_PUB_RSA = 14,PEM_OBJ_PUB_DSA = 15,PEM_OBJ_PUB_DH = 16,PEM_OBJ_DHPARAMS = 17,PEM_OBJ_DSAPARAMS = 18,PEM_OBJ_PRIV_RSA_PUBLIC = 19,PEM_OBJ_PRIV_ECDSA = 20,PEM_OBJ_PUB_ECDSA = 21,PEM_OBJ_ECPARAMETERS = 22,PEM_ERROR = 30,PEM_DEK_DES_CBC = 40,PEM_DEK_IDEA_CBC = 45,PEM_DEK_DES_EDE = 50,PEM_DEK_DES_ECB = 60,PEM_DEK_RSA = 70,PEM_DEK_RSA_MD2 = 80,PEM_DEK_RSA_MD5 = 90,PEM_MD_MD2 = 3,PEM_MD_MD5 = 4,PEM_MD_SHA = 41,PEM_MD_MD2_RSA = 7,PEM_MD_MD5_RSA = 8,PEM_MD_SHA_RSA = 65,PEM_TYPE_ENCRYPTED = 10,PEM_TYPE_MIC_ONLY = 20,PEM_TYPE_MIC_CLEAR = 30,PEM_TYPE_CLEAR = 40,PEM_F_D2I_PKCS8PRIVATEKEY_BIO = 120,PEM_F_D2I_PKCS8PRIVATEKEY_FP = 121,PEM_F_DO_PK8PKEY = 126,PEM_F_DO_PK8PKEY_FP = 125,PEM_F_LOAD_IV = 101,PEM_F_PEM_ASN1_READ = 102,PEM_F_PEM_ASN1_READ_BIO = 103,PEM_F_PEM_ASN1_WRITE = 104,PEM_F_PEM_ASN1_WRITE_BIO = 105,PEM_F_PEM_DEF_CALLBACK = 100,PEM_F_PEM_DO_HEADER = 106,PEM_F_PEM_F_PEM_WRITE_PKCS8PRIVATEKEY = 118,PEM_F_PEM_GET_EVP_CIPHER_INFO = 107,PEM_F_PEM_PK8PKEY = 119,PEM_F_PEM_READ = 108,PEM_F_PEM_READ_BIO = 109,PEM_F_PEM_READ_BIO_PRIVATEKEY = 123,PEM_F_PEM_READ_PRIVATEKEY = 124,PEM_F_PEM_SEALFINAL = 110,PEM_F_PEM_SEALINIT = 111,PEM_F_PEM_SIGNFINAL = 112,PEM_F_PEM_WRITE = 113,PEM_F_PEM_WRITE_BIO = 114,PEM_F_PEM_X509_INFO_READ = 115,PEM_F_PEM_X509_INFO_READ_BIO = 116,PEM_F_PEM_X509_INFO_WRITE_BIO = 117,PEM_R_BAD_BASE64_DECODE = 100,PEM_R_BAD_DECRYPT = 101,PEM_R_BAD_END_LINE = 102,PEM_R_BAD_IV_CHARS = 103,PEM_R_BAD_PASSWORD_READ = 104,PEM_R_ERROR_CONVERTING_PRIVATE_KEY = 115,PEM_R_NOT_DEK_INFO = 105,PEM_R_NOT_ENCRYPTED = 106,PEM_R_NOT_PROC_TYPE = 107,PEM_R_NO_START_LINE = 108,PEM_R_PROBLEMS_GETTING_PASSWORD = 109,PEM_R_PUBLIC_KEY_NO_RSA = 110,PEM_R_READ_KEY = 111,PEM_R_SHORT_HEADER = 112,PEM_R_UNSUPPORTED_CIPHER = 113,PEM_R_UNSUPPORTED_ENCRYPTION = 114,};
enum MACRO_PPD {PPD_MAX_NAME = 41,PPD_MAX_TEXT = 81,PPD_MAX_LINE = 256,};
enum MACRO_RC2 {RC2_ENCRYPT = 1,RC2_DECRYPT = 0,RC2_BLOCK = 8,RC2_KEY_LENGTH = 16,};
enum MACRO_RC5 {RC5_ENCRYPT = 1,RC5_DECRYPT = 0,RC5_32_BLOCK = 8,RC5_32_KEY_LENGTH = 16,RC5_8_ROUNDS = 8,RC5_12_ROUNDS = 12,RC5_16_ROUNDS = 16,};
enum MACRO_REC {REC_ESC = -1,REC_EOR = 1,REC_EOF = 2,};
enum MACRO_REG {REG_BASIC = 0x0,REG_EXTENDED = 0x1,REG_ICASE = 0x2,REG_NOSUB = 0x4,REG_NEWLINE = 0x8,REG_NOSPEC = 0x10,REG_PEND = 0x20,REG_DUMP = 0x80,REG_ENOSYS = 0xFFFFFFFFFFFFFFFF,REG_NOMATCH = 0x1,REG_BADPAT = 0x2,REG_ECOLLATE = 0x3,REG_ECTYPE = 0x4,REG_EESCAPE = 0x5,REG_ESUBREG = 0x6,REG_EBRACK = 0x7,REG_EPAREN = 0x8,REG_EBRACE = 0x9,REG_BADBR = 0xA,REG_ERANGE = 0xB,REG_ESPACE = 0xC,REG_BADRPT = 0xD,REG_EMPTY = 0xE,REG_ASSERT = 0xF,REG_INVARG = 0x10,REG_ILLSEQ = 0x11,REG_ATOI = 0xFF,REG_ITOA = 0x100,REG_NOTBOL = 0x1,REG_NOTEOL = 0x2,REG_STARTEND = 0x4,REG_TRACE = 0x100,REG_LARGE = 0x200,REG_BACKR = 0x400,};
enum MACRO_REQ {REQ_NEXT_PAGE = 512,REQ_PREV_PAGE = 513,REQ_FIRST_PAGE = 514,REQ_LAST_PAGE = 515,REQ_NEXT_FIELD = 516,REQ_PREV_FIELD = 517,REQ_FIRST_FIELD = 518,REQ_LAST_FIELD = 519,REQ_SNEXT_FIELD = 520,REQ_SPREV_FIELD = 521,REQ_SFIRST_FIELD = 522,REQ_SLAST_FIELD = 523,REQ_LEFT_FIELD = 524,REQ_RIGHT_FIELD = 525,REQ_UP_FIELD = 526,REQ_DOWN_FIELD = 527,REQ_NEXT_CHAR = 528,REQ_PREV_CHAR = 529,REQ_NEXT_LINE = 530,REQ_PREV_LINE = 531,REQ_NEXT_WORD = 532,REQ_PREV_WORD = 533,REQ_BEG_FIELD = 534,REQ_END_FIELD = 535,REQ_BEG_LINE = 536,REQ_END_LINE = 537,REQ_LEFT_CHAR = 538,REQ_RIGHT_CHAR = 539,REQ_UP_CHAR = 540,REQ_DOWN_CHAR = 541,REQ_NEW_LINE = 542,REQ_INS_CHAR = 543,REQ_INS_LINE = 544,REQ_DEL_CHAR = 545,REQ_DEL_PREV = 546,REQ_DEL_LINE = 547,REQ_DEL_WORD = 548,REQ_CLR_EOL = 549,REQ_CLR_EOF = 550,REQ_CLR_FIELD = 551,REQ_OVL_MODE = 552,REQ_INS_MODE = 553,REQ_SCR_FLINE = 554,REQ_SCR_BLINE = 555,REQ_SCR_FPAGE = 556,REQ_SCR_BPAGE = 557,REQ_SCR_FHPAGE = 558,REQ_SCR_BHPAGE = 559,REQ_SCR_FCHAR = 560,REQ_SCR_BCHAR = 561,REQ_SCR_HFLINE = 562,REQ_SCR_HBLINE = 563,REQ_SCR_HFHALF = 564,REQ_SCR_HBHALF = 565,REQ_VALIDATION = 566,REQ_NEXT_CHOICE = 567,REQ_PREV_CHOICE = 568,};
enum MACRO_RES {RES_TIMEOUT = 5,};
enum MACRO_RET {RET_ERROR = -1,RET_SUCCESS = 0,RET_SPECIAL = 1,};
enum MACRO_RPC {RPC_SIGBUF_SIZE = 8,RPC_SUBSYSTEM_NULL = 0,};
enum MACRO_RPM {RPM_PCO_ADD = 1,RPM_PCO_CHANGE = 2,RPM_PCO_SETGLOBAL = 3,RPM_PCO_MAX = 4,};
enum MACRO_RPP {RPP_ECHO_OFF = 0x0,RPP_ECHO_ON = 0x1,RPP_REQUIRE_TTY = 0x2,RPP_FORCELOWER = 0x4,RPP_FORCEUPPER = 0x8,RPP_SEVENBIT = 0x10,};
enum MACRO_RRQ {RRQ = 0x1,WRQ = 0x2,};
enum MACRO_RSA {RSA_FLAG_FIPS_METHOD = 0x400,RSA_FLAG_NON_FIPS_ALLOW = 0x400,};
enum MACRO_RTA {RTA_DST = 0x1,RTA_GATEWAY = 0x2,RTA_NETMASK = 0x4,RTA_GENMASK = 0x8,RTA_IFP = 0x10,RTA_IFA = 0x20,RTA_AUTHOR = 0x40,RTA_BRD = 0x80,};
enum MACRO_RTF {RTF_UP = 0x1,RTF_GATEWAY = 0x2,RTF_HOST = 0x4,RTF_REJECT = 0x8,RTF_DYNAMIC = 0x10,RTF_MODIFIED = 0x20,RTF_DONE = 0x40,RTF_DELCLONE = 0x80,RTF_CLONING = 0x100,RTF_XRESOLVE = 0x200,RTF_LLINFO = 0x400,RTF_STATIC = 0x800,RTF_BLACKHOLE = 0x1000,RTF_PROTO2 = 0x4000,RTF_PROTO1 = 0x8000,RTF_PRCLONING = 0x10000,RTF_WASCLONED = 0x20000,RTF_PROTO3 = 0x40000,RTF_PINNED = 0x100000,RTF_LOCAL = 0x200000,RTF_BROADCAST = 0x400000,RTF_MULTICAST = 0x800000,RTF_IFSCOPE = 0x1000000,RTF_CONDEMNED = 0x2000000,RTF_IFREF = 0x4000000,};
enum MACRO_RTM {RTM_RTTUNIT = 1000000,};
enum MACRO_RTV {RTV_MTU = 0x1,RTV_HOPCOUNT = 0x2,RTV_EXPIRE = 0x4,RTV_RPIPE = 0x8,RTV_SPIPE = 0x10,RTV_SSTHRESH = 0x20,RTV_RTT = 0x40,RTV_RTTVAR = 0x80,};
enum MACRO_RUN {RUN_LVL = 1,};
enum MACRO_SCM {SCM_RIGHTS = 0x1,SCM_TIMESTAMP = 0x2,SCM_CREDS = 0x3,SCM_TIMESTAMP_MONOTONIC = 0x4,};
enum MACRO_SEL {SEL_GDT = 0,SEL_LDT = 1,};
enum MACRO_SEM {SEM_UNDO = 0x1000,};
enum MACRO_SHA {SHA_LBLOCK = 16,SHA_CBLOCK = 64,SHA_LAST_BLOCK = 56,SHA_DIGEST_LENGTH = 20,};
enum MACRO_SHM {SHM_RDONLY = 0x1000,SHM_RND = 0x2000,};
enum MACRO_SIG {SIG_BLOCK = 1,SIG_UNBLOCK = 2,SIG_SETMASK = 3,};
enum MACRO_SIN {SIN_PROXY = 1,};
enum MACRO_SLC {SLC_SYNCH = 1,SLC_BRK = 2,SLC_IP = 3,SLC_AO = 4,SLC_AYT = 5,SLC_EOR = 6,SLC_ABORT = 7,SLC_EOF = 8,SLC_SUSP = 9,SLC_EC = 10,SLC_EL = 11,SLC_EW = 12,SLC_RP = 13,SLC_LNEXT = 14,SLC_XON = 15,SLC_XOFF = 16,SLC_FORW1 = 17,SLC_FORW2 = 18,};
enum MACRO_SMI {SMI_INTEGER = 2,SMI_STRING = 4,SMI_OBJID = 6,SMI_NULLOBJ = 5,SMI_IPADDRESS = 64,SMI_COUNTER32 = 65,SMI_GAUGE32 = 66,SMI_UNSIGNED32 = 66,SMI_TIMETICKS = 67,SMI_OPAQUE = 68,SMI_COUNTER64 = 70,};
enum MACRO_SOI {SOI_S_NOFDREF = 0x1,SOI_S_ISCONNECTED = 0x2,SOI_S_ISCONNECTING = 0x4,SOI_S_ISDISCONNECTING = 0x8,SOI_S_CANTSENDMORE = 0x10,SOI_S_CANTRCVMORE = 0x20,SOI_S_RCVATMARK = 0x40,SOI_S_PRIV = 0x80,SOI_S_NBIO = 0x100,SOI_S_ASYNC = 0x200,SOI_S_INCOMP = 0x800,SOI_S_COMP = 0x1000,SOI_S_ISDISCONNECTED = 0x2000,SOI_S_DRAINING = 0x4000,};
enum MACRO_SOL {SOL_SOCKET = 0xFFFF,};
enum MACRO_SQL {SQL_GETLASTROWID = 1048,SQL_GETLASTSERIAL = 1049,SQL_CONCUR_VAL_EXTENT = 1050,SQL_APPLICATION_NAME = 1051,SQL_PARSE_FWD_ONLY_REQ = 1052,SQL_DESC_KEY = 1053,SQL_APPEND_KEYS = 1054,SQL_DESC_EXPR = 1055,SQL_ATTR_WCHAR_SIZE = 1056,SQL_COLUMN_KEY = 1053,SQL_COLUMN_EXPR = 1055,SQL_ATTR_PARSE_FWD_ONLY_REQ = 1052,SQL_ATTR_APPEND_KEYS = 1054,SQL_ATTR_ENLIST_IN_DTC = 1207,SQL_ATTR_ENLIST_IN_XA = 1208,SQL_ATTR_CONNECTION_DEAD = 1209,SQL_COPT_SS_BASE = 1200,SQL_COPT_SS_REMOTE_PWD = 1201,SQL_COPT_SS_USE_PROC_FOR_PREP = 1202,SQL_COPT_SS_INTEGRATED_SECURITY = 1203,SQL_COPT_SS_PRESERVE_CURSORS = 1204,SQL_COPT_SS_USER_DATA = 1205,SQL_COPT_SS_ANSI_OEM = 1206,SQL_COPT_SS_ENLIST_IN_DTC = 1207,SQL_COPT_SS_ENLIST_IN_XA = 1208,SQL_COPT_SS_CONNECTION_DEAD = 1209,SQL_COPT_SS_FALLBACK_CONNECT = 1210,SQL_COPT_SS_PERF_DATA = 1211,SQL_COPT_SS_PERF_DATA_LOG = 1212,SQL_COPT_SS_PERF_QUERY_INTERVAL = 1213,SQL_COPT_SS_PERF_QUERY_LOG = 1214,SQL_COPT_SS_PERF_QUERY = 1215,SQL_COPT_SS_PERF_DATA_LOG_NOW = 1216,SQL_COPT_SS_QUOTED_IDENT = 1217,SQL_COPT_SS_ANSI_NPW = 1218,SQL_COPT_SS_BCP = 1219,SQL_COPT_SS_MAX_USED = 1219,SQL_SOPT_SS_BASE = 1225,SQL_SOPT_SS_TEXTPTR_LOGGING = 1225,SQL_SOPT_SS_CURRENT_COMMAND = 1226,SQL_SOPT_SS_HIDDEN_COLUMNS = 1227,SQL_SOPT_SS_NOBROWSETABLE = 1228,SQL_SOPT_SS_REGIONALIZE = 1229,SQL_SOPT_SS_MAX_USED = 1229,SQL_UP_OFF = 0,SQL_UP_ON = 1,SQL_UP_ON_DROP = 2,SQL_UP_DEFAULT = 1,SQL_IS_OFF = 0,SQL_IS_ON = 1,SQL_IS_DEFAULT = 0,SQL_PC_OFF = 0,SQL_PC_ON = 1,SQL_PC_DEFAULT = 0,SQL_UD_NOTSET = 0,SQL_AO_OFF = 0,SQL_AO_ON = 1,SQL_AO_DEFAULT = 0,SQL_FB_OFF = 0,SQL_FB_ON = 1,SQL_FB_DEFAULT = 0,SQL_BCP_OFF = 0,SQL_BCP_ON = 1,SQL_BCP_DEFAULT = 0,SQL_QI_OFF = 0,SQL_QI_ON = 1,SQL_QI_DEFAULT = 1,SQL_AD_OFF = 0,SQL_AD_ON = 1,SQL_AD_DEFAULT = 1,SQL_TL_OFF = 0,SQL_TL_ON = 1,SQL_TL_DEFAULT = 1,SQL_HC_OFF = 0,SQL_HC_ON = 1,SQL_HC_DEFAULT = 0,SQL_NB_OFF = 0,SQL_NB_ON = 1,SQL_NB_DEFAULT = 0,SQL_RE_OFF = 0,SQL_RE_ON = 1,SQL_RE_DEFAULT = 0,SQL_CURSOR_HOLD = 1250,SQL_ATTR_CURSOR_HOLD = 1250,SQL_NODESCRIBE_OUTPUT = 1251,SQL_ATTR_NODESCRIBE_OUTPUT = 1251,SQL_NODESCRIBE_INPUT = 1264,SQL_ATTR_NODESCRIBE_INPUT = 1264,SQL_NODESCRIBE = 1251,SQL_ATTR_NODESCRIBE = 1251,SQL_CLOSE_BEHAVIOR = 1257,SQL_ATTR_CLOSE_BEHAVIOR = 1257,SQL_ATTR_CLOSEOPEN = 1265,SQL_ATTR_CURRENT_PACKAGE_SET = 1276,SQL_ATTR_DEFERRED_PREPARE = 1277,SQL_ATTR_EARLYCLOSE = 1268,SQL_ATTR_PROCESSCTL = 1278,SQL_CC_NO_RELEASE = 0,SQL_CC_RELEASE = 1,SQL_CC_DEFAULT = 0,SQL_DEFERRED_PREPARE_ON = 1,SQL_DEFERRED_PREPARE_OFF = 0,SQL_DEFERRED_PREPARE_DEFAULT = 1,SQL_EARLYCLOSE_ON = 1,SQL_EARLYCLOSE_OFF = 0,SQL_EARLYCLOSE_DEFAULT = 1,SQL_PROCESSCTL_NOTHREAD = 1,SQL_PROCESSCTL_NOFORK = 2,SQL_CURSOR_HOLD_ON = 1,SQL_CURSOR_HOLD_OFF = 0,SQL_CURSOR_HOLD_DEFAULT = 1,SQL_NODESCRIBE_ON = 1,SQL_NODESCRIBE_OFF = 0,SQL_NODESCRIBE_DEFAULT = 0,SQL_WCHARTYPE = 1252,SQL_LONGDATA_COMPAT = 1253,SQL_CURRENT_SCHEMA = 1254,SQL_DB2EXPLAIN = 1258,SQL_DB2ESTIMATE = 1259,SQL_PARAMOPT_ATOMIC = 1260,SQL_STMTTXN_ISOLATION = 1261,SQL_MAXCONN = 1262,SQL_ATTR_WCHARTYPE = 1252,SQL_ATTR_LONGDATA_COMPAT = 1253,SQL_ATTR_CURRENT_SCHEMA = 1254,SQL_ATTR_DB2EXPLAIN = 1258,SQL_ATTR_DB2ESTIMATE = 1259,SQL_ATTR_PARAMOPT_ATOMIC = 1260,SQL_ATTR_STMTTXN_ISOLATION = 1261,SQL_ATTR_MAXCONN = 1262,SQL_CONNECTTYPE = 1255,SQL_SYNC_POINT = 1256,SQL_MINMEMORY_USAGE = 1263,SQL_CONN_CONTEXT = 1269,SQL_ATTR_INHERIT_NULL_CONNECT = 1270,SQL_ATTR_FORCE_CONVERSION_ON_CLIENT = 1275,SQL_ATTR_CONNECTTYPE = 1255,SQL_ATTR_SYNC_POINT = 1256,SQL_ATTR_MINMEMORY_USAGE = 1263,SQL_ATTR_CONN_CONTEXT = 1269,SQL_LD_COMPAT_YES = 1,SQL_LD_COMPAT_NO = 0,SQL_LD_COMPAT_DEFAULT = 0,SQL_ATOMIC_YES = 1,SQL_ATOMIC_NO = 0,SQL_ATOMIC_DEFAULT = 1,SQL_CONCURRENT_TRANS = 1,SQL_COORDINATED_TRANS = 2,SQL_CONNECTTYPE_DEFAULT = 1,SQL_ONEPHASE = 1,SQL_TWOPHASE = 2,SQL_SYNCPOINT_DEFAULT = 1,SQL_DB2ESTIMATE_ON = 1,SQL_DB2ESTIMATE_OFF = 0,SQL_DB2ESTIMATE_DEFAULT = 0,SQL_DB2EXPLAIN_OFF = 0,SQL_DB2EXPLAIN_SNAPSHOT_ON = 1,SQL_DB2EXPLAIN_MODE_ON = 2,SQL_DB2EXPLAIN_SNAPSHOT_MODE_ON = 3,SQL_DB2EXPLAIN_ON = 1,SQL_DB2EXPLAIN_DEFAULT = 0,SQL_WCHARTYPE_NOCONVERT = 0,SQL_WCHARTYPE_DEFAULT = 0,};
enum MACRO_SSL {SSL_SESSION_ASN1_VERSION = 0x1,SSL_MAX_KRB5_PRINCIPAL_LENGTH = 0x100,SSL_MAX_SSL_SESSION_ID_LENGTH = 0x20,SSL_MAX_SID_CTX_LENGTH = 0x20,SSL_MIN_RSA_MODULUS_LENGTH_IN_BYTES = 0x40,SSL_MAX_KEY_ARG_LENGTH = 0x8,SSL_MAX_MASTER_KEY_LENGTH = 0x30,SSL_SENT_SHUTDOWN = 0x1,SSL_RECEIVED_SHUTDOWN = 0x2,SSL_FILETYPE_ASN1 = 0x2,SSL_FILETYPE_PEM = 0x1,SSL_OP_MICROSOFT_SESS_ID_BUG = 0x1,SSL_OP_NETSCAPE_CHALLENGE_BUG = 0x2,SSL_OP_LEGACY_SERVER_CONNECT = 0x4,SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG = 0x8,SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG = 0x10,SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER = 0x20,SSL_OP_MSIE_SSLV2_RSA_PADDING = 0x40,SSL_OP_SSLEAY_080_CLIENT_DH_BUG = 0x80,SSL_OP_TLS_D5_BUG = 0x100,SSL_OP_TLS_BLOCK_PADDING_BUG = 0x200,SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS = 0x800,SSL_OP_ALL = 0xFFF,SSL_OP_NO_QUERY_MTU = 0x1000,SSL_OP_COOKIE_EXCHANGE = 0x2000,SSL_OP_NO_TICKET = 0x4000,SSL_OP_CISCO_ANYCONNECT = 0x8000,SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION = 0x10000,SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION = 0x40000,SSL_OP_SINGLE_ECDH_USE = 0x80000,SSL_OP_SINGLE_DH_USE = 0x100000,SSL_OP_EPHEMERAL_RSA = 0x200000,SSL_OP_CIPHER_SERVER_PREFERENCE = 0x400000,SSL_OP_TLS_ROLLBACK_BUG = 0x800000,SSL_OP_NO_SSLv2 = 0x1000000,SSL_OP_NO_SSLv3 = 0x2000000,SSL_OP_NO_TLSv1 = 0x4000000,SSL_OP_PKCS1_CHECK_1 = 0x8000000,SSL_OP_PKCS1_CHECK_2 = 0x10000000,SSL_OP_NETSCAPE_CA_DN_BUG = 0x20000000,SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG = 0x40000000,SSL_MODE_ENABLE_PARTIAL_WRITE = 0x1,SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER = 0x2,SSL_MODE_AUTO_RETRY = 0x4,SSL_MODE_NO_AUTO_CHAIN = 0x8,SSL_MAX_CERT_LIST_DEFAULT = 0x19000,SSL_SESSION_CACHE_MAX_SIZE_DEFAULT = 0x5000,SSL_SESS_CACHE_OFF = 0x0,SSL_SESS_CACHE_CLIENT = 0x1,SSL_SESS_CACHE_SERVER = 0x2,SSL_SESS_CACHE_BOTH = 0x3,SSL_SESS_CACHE_NO_AUTO_CLEAR = 0x80,SSL_SESS_CACHE_NO_INTERNAL_LOOKUP = 0x100,SSL_SESS_CACHE_NO_INTERNAL_STORE = 0x200,SSL_SESS_CACHE_NO_INTERNAL = 0x300,SSL_NOTHING = 0x1,SSL_WRITING = 0x2,SSL_READING = 0x3,SSL_X509_LOOKUP = 0x4,};
enum MACRO_STR {AM_STR = 5,PM_STR = 6,};
enum MACRO_SYN {SYN_TERMINFO = 0,SYN_TERMCAP = 1,};
enum MACRO_SYS {SYS_syscall = 0,SYS_exit = 1,SYS_fork = 2,SYS_read = 3,SYS_write = 4,SYS_open = 5,SYS_close = 6,SYS_wait4 = 7,SYS_link = 9,SYS_unlink = 10,SYS_chdir = 12,SYS_fchdir = 13,SYS_mknod = 14,SYS_chmod = 15,SYS_chown = 16,SYS_getfsstat = 18,SYS_getpid = 20,SYS_setuid = 23,SYS_getuid = 24,SYS_geteuid = 25,SYS_ptrace = 26,SYS_recvmsg = 27,SYS_sendmsg = 28,SYS_recvfrom = 29,SYS_accept = 30,SYS_getpeername = 31,SYS_getsockname = 32,SYS_access = 33,SYS_chflags = 34,SYS_fchflags = 35,SYS_sync = 36,SYS_kill = 37,SYS_getppid = 39,SYS_dup = 41,SYS_pipe = 42,SYS_getegid = 43,SYS_profil = 44,SYS_sigaction = 46,SYS_getgid = 47,SYS_sigprocmask = 48,SYS_getlogin = 49,SYS_setlogin = 50,SYS_acct = 51,SYS_sigpending = 52,SYS_sigaltstack = 53,SYS_ioctl = 54,SYS_reboot = 55,SYS_revoke = 56,SYS_symlink = 57,SYS_readlink = 58,SYS_execve = 59,SYS_umask = 60,SYS_chroot = 61,SYS_msync = 65,SYS_vfork = 66,SYS_munmap = 73,SYS_mprotect = 74,SYS_madvise = 75,SYS_mincore = 78,SYS_getgroups = 79,SYS_setgroups = 80,SYS_getpgrp = 81,SYS_setpgid = 82,SYS_setitimer = 83,SYS_swapon = 85,SYS_getitimer = 86,SYS_getdtablesize = 89,SYS_dup2 = 90,SYS_fcntl = 92,SYS_select = 93,SYS_fsync = 95,SYS_setpriority = 96,SYS_socket = 97,SYS_connect = 98,SYS_getpriority = 100,SYS_bind = 104,SYS_setsockopt = 105,SYS_listen = 106,SYS_sigsuspend = 111,SYS_gettimeofday = 116,SYS_getrusage = 117,SYS_getsockopt = 118,SYS_readv = 120,SYS_writev = 121,SYS_settimeofday = 122,SYS_fchown = 123,SYS_fchmod = 124,SYS_setreuid = 126,SYS_setregid = 127,SYS_rename = 128,SYS_flock = 131,SYS_mkfifo = 132,SYS_sendto = 133,SYS_shutdown = 134,SYS_socketpair = 135,SYS_mkdir = 136,SYS_rmdir = 137,SYS_utimes = 138,SYS_futimes = 139,SYS_adjtime = 140,SYS_gethostuuid = 142,SYS_setsid = 147,SYS_getpgid = 151,SYS_setprivexec = 152,SYS_pread = 153,SYS_pwrite = 154,SYS_nfssvc = 155,SYS_statfs = 157,SYS_fstatfs = 158,SYS_unmount = 159,SYS_getfh = 161,SYS_quotactl = 165,SYS_mount = 167,SYS_csops = 169,SYS_waitid = 173,SYS_add_profil = 176,SYS_kdebug_trace = 180,SYS_setgid = 181,SYS_setegid = 182,SYS_seteuid = 183,SYS_sigreturn = 184,SYS_chud = 185,SYS_fdatasync = 187,SYS_stat = 188,SYS_fstat = 189,SYS_lstat = 190,SYS_pathconf = 191,SYS_fpathconf = 192,SYS_getrlimit = 194,SYS_setrlimit = 195,SYS_getdirentries = 196,SYS_mmap = 197,SYS_lseek = 199,SYS_truncate = 200,SYS_ftruncate = 201,SYS___sysctl = 202,SYS_mlock = 203,SYS_munlock = 204,SYS_undelete = 205,SYS_ATsocket = 206,SYS_ATgetmsg = 207,SYS_ATputmsg = 208,SYS_ATPsndreq = 209,SYS_ATPsndrsp = 210,SYS_ATPgetreq = 211,SYS_ATPgetrsp = 212,SYS_mkcomplex = 216,SYS_statv = 217,SYS_lstatv = 218,SYS_fstatv = 219,SYS_getattrlist = 220,SYS_setattrlist = 221,SYS_getdirentriesattr = 222,SYS_exchangedata = 223,SYS_searchfs = 225,SYS_delete = 226,SYS_copyfile = 227,SYS_fgetattrlist = 228,SYS_fsetattrlist = 229,SYS_poll = 230,SYS_watchevent = 231,SYS_waitevent = 232,SYS_modwatch = 233,SYS_getxattr = 234,SYS_fgetxattr = 235,SYS_setxattr = 236,SYS_fsetxattr = 237,SYS_removexattr = 238,SYS_fremovexattr = 239,SYS_listxattr = 240,SYS_flistxattr = 241,SYS_fsctl = 242,SYS_initgroups = 243,SYS_posix_spawn = 244,SYS_ffsctl = 245,SYS_nfsclnt = 247,SYS_fhopen = 248,SYS_minherit = 250,SYS_semsys = 251,SYS_msgsys = 252,SYS_shmsys = 253,SYS_semctl = 254,SYS_semget = 255,SYS_semop = 256,SYS_msgctl = 258,SYS_msgget = 259,SYS_msgsnd = 260,SYS_msgrcv = 261,SYS_shmat = 262,SYS_shmctl = 263,SYS_shmdt = 264,SYS_shmget = 265,SYS_shm_open = 266,SYS_shm_unlink = 267,SYS_sem_open = 268,SYS_sem_close = 269,SYS_sem_unlink = 270,SYS_sem_wait = 271,SYS_sem_trywait = 272,SYS_sem_post = 273,SYS_sem_getvalue = 274,SYS_sem_init = 275,SYS_sem_destroy = 276,SYS_open_extended = 277,SYS_umask_extended = 278,SYS_stat_extended = 279,SYS_lstat_extended = 280,SYS_fstat_extended = 281,SYS_chmod_extended = 282,SYS_fchmod_extended = 283,SYS_access_extended = 284,SYS_settid = 285,SYS_gettid = 286,SYS_setsgroups = 287,SYS_getsgroups = 288,SYS_setwgroups = 289,SYS_getwgroups = 290,SYS_mkfifo_extended = 291,SYS_mkdir_extended = 292,SYS_identitysvc = 293,SYS_shared_region_check_np = 294,SYS_vm_pressure_monitor = 296,SYS_psynch_rw_longrdlock = 297,SYS_psynch_rw_yieldwrlock = 298,SYS_psynch_rw_downgrade = 299,SYS_psynch_rw_upgrade = 300,SYS_psynch_mutexwait = 301,SYS_psynch_mutexdrop = 302,SYS_psynch_cvbroad = 303,SYS_psynch_cvsignal = 304,SYS_psynch_cvwait = 305,SYS_psynch_rw_rdlock = 306,SYS_psynch_rw_wrlock = 307,SYS_psynch_rw_unlock = 308,SYS_psynch_rw_unlock2 = 309,SYS_getsid = 310,SYS_settid_with_pid = 311,SYS_psynch_cvclrprepost = 312,SYS_aio_fsync = 313,SYS_aio_return = 314,SYS_aio_suspend = 315,SYS_aio_cancel = 316,SYS_aio_error = 317,SYS_aio_read = 318,SYS_aio_write = 319,SYS_lio_listio = 320,SYS_iopolicysys = 322,SYS_process_policy = 323,SYS_mlockall = 324,SYS_munlockall = 325,SYS_issetugid = 327,SYS___pthread_kill = 328,SYS___pthread_sigmask = 329,SYS___sigwait = 330,SYS___disable_threadsignal = 331,SYS___pthread_markcancel = 332,SYS___pthread_canceled = 333,SYS___semwait_signal = 334,SYS_proc_info = 336,SYS_sendfile = 337,SYS_stat64 = 338,SYS_fstat64 = 339,SYS_lstat64 = 340,SYS_stat64_extended = 341,SYS_lstat64_extended = 342,SYS_fstat64_extended = 343,SYS_getdirentries64 = 344,SYS_statfs64 = 345,SYS_fstatfs64 = 346,SYS_getfsstat64 = 347,SYS___pthread_chdir = 348,SYS___pthread_fchdir = 349,SYS_audit = 350,SYS_auditon = 351,SYS_getauid = 353,SYS_setauid = 354,SYS_getaudit = 355,SYS_setaudit = 356,SYS_getaudit_addr = 357,SYS_setaudit_addr = 358,SYS_auditctl = 359,SYS_bsdthread_create = 360,SYS_bsdthread_terminate = 361,SYS_kqueue = 362,SYS_kevent = 363,SYS_lchown = 364,SYS_stack_snapshot = 365,SYS_bsdthread_register = 366,SYS_workq_open = 367,SYS_workq_kernreturn = 368,SYS_kevent64 = 369,SYS___old_semwait_signal = 370,SYS___old_semwait_signal_nocancel = 371,SYS_thread_selfid = 372,SYS___mac_execve = 380,SYS___mac_syscall = 381,SYS___mac_get_file = 382,SYS___mac_set_file = 383,SYS___mac_get_link = 384,SYS___mac_set_link = 385,SYS___mac_get_proc = 386,SYS___mac_set_proc = 387,SYS___mac_get_fd = 388,SYS___mac_set_fd = 389,SYS___mac_get_pid = 390,SYS___mac_get_lcid = 391,SYS___mac_get_lctx = 392,SYS___mac_set_lctx = 393,SYS_setlcid = 394,SYS_getlcid = 395,SYS_read_nocancel = 396,SYS_write_nocancel = 397,SYS_open_nocancel = 398,SYS_close_nocancel = 399,SYS_wait4_nocancel = 400,SYS_recvmsg_nocancel = 401,SYS_sendmsg_nocancel = 402,SYS_recvfrom_nocancel = 403,SYS_accept_nocancel = 404,SYS_msync_nocancel = 405,SYS_fcntl_nocancel = 406,SYS_select_nocancel = 407,SYS_fsync_nocancel = 408,SYS_connect_nocancel = 409,SYS_sigsuspend_nocancel = 410,SYS_readv_nocancel = 411,SYS_writev_nocancel = 412,SYS_sendto_nocancel = 413,SYS_pread_nocancel = 414,SYS_pwrite_nocancel = 415,SYS_waitid_nocancel = 416,SYS_poll_nocancel = 417,SYS_msgsnd_nocancel = 418,SYS_msgrcv_nocancel = 419,SYS_sem_wait_nocancel = 420,SYS_aio_suspend_nocancel = 421,SYS___sigwait_nocancel = 422,SYS___semwait_signal_nocancel = 423,SYS___mac_mount = 424,SYS___mac_get_mount = 425,SYS___mac_getfsstat = 426,SYS_fsgetpath = 427,SYS_audit_session_self = 428,SYS_audit_session_join = 429,SYS_fileport_makeport = 430,SYS_fileport_makefd = 431,SYS_audit_session_port = 432,SYS_pid_suspend = 433,SYS_pid_resume = 434,SYS_pid_hibernate = 435,SYS_pid_shutdown_sockets = 436,SYS_shared_region_map_and_slide_np = 438,SYS_MAXSYSCALL = 439,};
enum MACRO_TCP {TCP_MAX_SACK = 3,TCP_MSS = 512,TCP_MINMSS = 216,TCP_MINMSSOVERLOAD = 1000,};
enum MACRO_TKT {TKT_FLG_FORWARDABLE = 0x40000000,TKT_FLG_FORWARDED = 0x20000000,TKT_FLG_PROXIABLE = 0x10000000,TKT_FLG_PROXY = 0x8000000,TKT_FLG_MAY_POSTDATE = 0x4000000,TKT_FLG_POSTDATED = 0x2000000,TKT_FLG_INVALID = 0x1000000,TKT_FLG_RENEWABLE = 0x800000,TKT_FLG_INITIAL = 0x400000,TKT_FLG_PRE_AUTH = 0x200000,TKT_FLG_HW_AUTH = 0x100000,TKT_FLG_TRANSIT_POLICY_CHECKED = 0x80000,TKT_FLG_OK_AS_DELEGATE = 0x40000,TKT_FLG_ANONYMOUS = 0x20000,};
enum MACRO_TLS {TLS_CT_RSA_SIGN = 1,TLS_CT_DSS_SIGN = 2,TLS_CT_RSA_FIXED_DH = 3,TLS_CT_DSS_FIXED_DH = 4,TLS_CT_ECDSA_SIGN = 64,TLS_CT_RSA_FIXED_ECDH = 65,TLS_CT_ECDSA_FIXED_ECDH = 66,TLS_CT_NUMBER = 7,};
enum MACRO_TMP {TMP_MAX = 308915776,};
enum MACRO_TRY {TRY_AGAIN = 2,};
enum MACRO_TSI {TSI_T_REXMT = 0,TSI_T_PERSIST = 1,TSI_T_KEEP = 2,TSI_T_2MSL = 3,TSI_T_NTIMERS = 4,TSI_S_CLOSED = 0,TSI_S_LISTEN = 1,TSI_S_SYN_SENT = 2,TSI_S_SYN_RECEIVED = 3,TSI_S_ESTABLISHED = 4,TSI_S__CLOSE_WAIT = 5,TSI_S_FIN_WAIT_1 = 6,TSI_S_CLOSING = 7,TSI_S_LAST_ACK = 8,TSI_S_FIN_WAIT_2 = 9,TSI_S_TIME_WAIT = 10,TSI_S_RESERVED = 11,};
enum MACRO_TSP {TSP_ANY = 0,TSP_ADJTIME = 1,TSP_ACK = 2,TSP_MASTERREQ = 3,TSP_MASTERACK = 4,TSP_SETTIME = 5,TSP_MASTERUP = 6,TSP_SLAVEUP = 7,TSP_ELECTION = 8,TSP_ACCEPT = 9,TSP_REFUSE = 10,TSP_CONFLICT = 11,TSP_RESOLVE = 12,TSP_QUIT = 13,TSP_DATE = 14,TSP_DATEREQ = 15,TSP_DATEACK = 16,TSP_TRACEON = 17,TSP_TRACEOFF = 18,TSP_MSITE = 19,TSP_MSITEREQ = 20,TSP_TEST = 21,TSP_SETDATE = 22,TSP_SETDATEREQ = 23,TSP_LOOP = 24,};
enum MACRO_TTY {TTY_CHARMASK = 0xFF,TTY_QUOTE = 0x100,TTY_ERRORMASK = 0xFF000000,TTY_FE = 0x1000000,TTY_PE = 0x2000000,TTY_OE = 0x4000000,TTY_BI = 0x8000000,};
enum MACRO_UCD {UCD_SNMP_LIBRARY = 1,};
enum MACRO_UDP {UDP_NOCKSUM = 0x1,};
enum MACRO_UID {UID_ROOT = 0,UID_BIN = 3,UID_UUCP = 66,};
enum MACRO_USE {USE_MACH_HOST_STATISTICS = 1,};
enum MACRO_USM {USM_AUTH_KU_LEN = 32,USM_PRIV_KU_LEN = 32,};
enum MACRO_VFS {VFS_GENERIC = 0,VFS_NUMMNTOPS = 1,VFS_MAXTYPENUM = 1,VFS_CONF = 2,VFS_SET_PACKAGE_EXTS = 3,};
enum MACRO_VIS {VIS_OCTAL = 0x1,VIS_CSTYLE = 0x2,VIS_SP = 0x4,VIS_TAB = 0x8,VIS_NL = 0x10,VIS_WHITE = 0x1C,VIS_SAFE = 0x20,VIS_NOSLASH = 0x40,VIS_HTTPSTYLE = 0x80,VIS_GLOB = 0x100,};
enum MACRO_VOL {VOL_CAPABILITIES_FORMAT = 0,VOL_CAPABILITIES_INTERFACES = 1,VOL_CAPABILITIES_RESERVED1 = 2,VOL_CAPABILITIES_RESERVED2 = 3,};
enum MACRO_VT0 {VT0 = 0x0,VT1 = 0x10000,};
enum MACRO_VTR {VTR_DISABLE = 0,VTR_ENABLE = 1,VTR_VALUE = 2,VTR_UALARM = 3,VTR_STAMP = 4,};
enum MACRO_XKU {XKU_SSL_SERVER = 0x1,XKU_SSL_CLIENT = 0x2,XKU_SMIME = 0x4,XKU_CODE_SIGN = 0x8,XKU_SGC = 0x10,XKU_OCSP_SIGN = 0x20,XKU_TIMESTAMP = 0x40,XKU_DVCS = 0x80,};
enum MACRO_XML {XML_DETECT_IDS = 2,XML_COMPLETE_ATTRS = 4,XML_SKIP_IDS = 8,XML_SAX2_MAGIC = 3740122799,};
enum MACRO__CS {_CS_PATH = 1,};
enum MACRO__LC {_LC_LAST = 7,};
enum MACRO__PC {_PC_LINK_MAX = 1,_PC_MAX_CANON = 2,_PC_MAX_INPUT = 3,_PC_NAME_MAX = 4,_PC_PATH_MAX = 5,_PC_PIPE_BUF = 6,_PC_CHOWN_RESTRICTED = 7,_PC_NO_TRUNC = 8,_PC_VDISABLE = 9,_PC_NAME_CHARS_MAX = 10,_PC_CASE_SENSITIVE = 11,_PC_CASE_PRESERVING = 12,_PC_EXTENDED_SECURITY_NP = 13,_PC_AUTH_OPAQUE_NP = 14,_PC_2_SYMLINKS = 15,_PC_ALLOC_SIZE_MIN = 16,_PC_ASYNC_IO = 17,_PC_FILESIZEBITS = 18,_PC_PRIO_IO = 19,_PC_REC_INCR_XFER_SIZE = 20,_PC_REC_MAX_XFER_SIZE = 21,_PC_REC_MIN_XFER_SIZE = 22,_PC_REC_XFER_ALIGN = 23,_PC_SYMLINK_MAX = 24,_PC_SYNC_IO = 25,_PC_XATTR_SIZE_BITS = 26,};
enum MACRO__PW {_PW_KEYBYNAME = 49,_PW_KEYBYNUM = 50,_PW_KEYBYUID = 51,};
enum MACRO__SC {_SC_ARG_MAX = 1,_SC_CHILD_MAX = 2,_SC_CLK_TCK = 3,_SC_NGROUPS_MAX = 4,_SC_OPEN_MAX = 5,_SC_JOB_CONTROL = 6,_SC_SAVED_IDS = 7,_SC_VERSION = 8,_SC_BC_BASE_MAX = 9,_SC_BC_DIM_MAX = 10,_SC_BC_SCALE_MAX = 11,_SC_BC_STRING_MAX = 12,_SC_COLL_WEIGHTS_MAX = 13,_SC_EXPR_NEST_MAX = 14,_SC_LINE_MAX = 15,_SC_RE_DUP_MAX = 16,_SC_2_VERSION = 17,_SC_2_C_BIND = 18,_SC_2_C_DEV = 19,_SC_2_CHAR_TERM = 20,_SC_2_FORT_DEV = 21,_SC_2_FORT_RUN = 22,_SC_2_LOCALEDEF = 23,_SC_2_SW_DEV = 24,_SC_2_UPE = 25,_SC_STREAM_MAX = 26,_SC_TZNAME_MAX = 27,_SC_ASYNCHRONOUS_IO = 28,_SC_PAGESIZE = 29,_SC_MEMLOCK = 30,_SC_MEMLOCK_RANGE = 31,_SC_MEMORY_PROTECTION = 32,_SC_MESSAGE_PASSING = 33,_SC_PRIORITIZED_IO = 34,_SC_PRIORITY_SCHEDULING = 35,_SC_REALTIME_SIGNALS = 36,_SC_SEMAPHORES = 37,_SC_FSYNC = 38,_SC_SHARED_MEMORY_OBJECTS = 39,_SC_SYNCHRONIZED_IO = 40,_SC_TIMERS = 41,_SC_AIO_LISTIO_MAX = 42,_SC_AIO_MAX = 43,_SC_AIO_PRIO_DELTA_MAX = 44,_SC_DELAYTIMER_MAX = 45,_SC_MQ_OPEN_MAX = 46,_SC_MAPPED_FILES = 47,_SC_RTSIG_MAX = 48,_SC_SEM_NSEMS_MAX = 49,_SC_SEM_VALUE_MAX = 50,_SC_SIGQUEUE_MAX = 51,_SC_TIMER_MAX = 52,_SC_NPROCESSORS_CONF = 57,_SC_NPROCESSORS_ONLN = 58,_SC_2_PBS = 59,_SC_2_PBS_ACCOUNTING = 60,_SC_2_PBS_CHECKPOINT = 61,_SC_2_PBS_LOCATE = 62,_SC_2_PBS_MESSAGE = 63,_SC_2_PBS_TRACK = 64,_SC_ADVISORY_INFO = 65,_SC_BARRIERS = 66,_SC_CLOCK_SELECTION = 67,_SC_CPUTIME = 68,_SC_FILE_LOCKING = 69,_SC_GETGR_R_SIZE_MAX = 70,_SC_GETPW_R_SIZE_MAX = 71,_SC_HOST_NAME_MAX = 72,_SC_LOGIN_NAME_MAX = 73,_SC_MONOTONIC_CLOCK = 74,_SC_MQ_PRIO_MAX = 75,_SC_READER_WRITER_LOCKS = 76,_SC_REGEXP = 77,_SC_SHELL = 78,_SC_SPAWN = 79,_SC_SPIN_LOCKS = 80,_SC_SPORADIC_SERVER = 81,_SC_THREAD_ATTR_STACKADDR = 82,_SC_THREAD_ATTR_STACKSIZE = 83,_SC_THREAD_CPUTIME = 84,_SC_THREAD_DESTRUCTOR_ITERATIONS = 85,_SC_THREAD_KEYS_MAX = 86,_SC_THREAD_PRIO_INHERIT = 87,_SC_THREAD_PRIO_PROTECT = 88,_SC_THREAD_PRIORITY_SCHEDULING = 89,_SC_THREAD_PROCESS_SHARED = 90,_SC_THREAD_SAFE_FUNCTIONS = 91,_SC_THREAD_SPORADIC_SERVER = 92,_SC_THREAD_STACK_MIN = 93,_SC_THREAD_THREADS_MAX = 94,_SC_TIMEOUTS = 95,_SC_THREADS = 96,_SC_TRACE = 97,_SC_TRACE_EVENT_FILTER = 98,_SC_TRACE_INHERIT = 99,_SC_TRACE_LOG = 100,_SC_TTY_NAME_MAX = 101,_SC_TYPED_MEMORY_OBJECTS = 102,_SC_V6_ILP32_OFF32 = 103,_SC_V6_ILP32_OFFBIG = 104,_SC_V6_LP64_OFF64 = 105,_SC_V6_LPBIG_OFFBIG = 106,_SC_IPV6 = 118,_SC_RAW_SOCKETS = 119,_SC_SYMLOOP_MAX = 120,_SC_ATEXIT_MAX = 107,_SC_IOV_MAX = 56,_SC_PAGE_SIZE = 29,_SC_XOPEN_CRYPT = 108,_SC_XOPEN_ENH_I18N = 109,_SC_XOPEN_LEGACY = 110,_SC_XOPEN_REALTIME = 111,_SC_XOPEN_REALTIME_THREADS = 112,_SC_XOPEN_SHM = 113,_SC_XOPEN_STREAMS = 114,_SC_XOPEN_UNIX = 115,_SC_XOPEN_VERSION = 116,_SC_XOPEN_XCU_VERSION = 121,_SC_XBS5_ILP32_OFF32 = 122,_SC_XBS5_ILP32_OFFBIG = 123,_SC_XBS5_LP64_OFF64 = 124,_SC_XBS5_LPBIG_OFFBIG = 125,_SC_SS_REPL_MAX = 126,_SC_TRACE_EVENT_NAME_MAX = 127,_SC_TRACE_NAME_MAX = 128,_SC_TRACE_SYS_MAX = 129,_SC_TRACE_USER_EVENT_MAX = 130,_SC_PASS_MAX = 131,};
enum MACRO__SS {_SS_MAXSIZE = 128,};
enum MACRO__V6 {_V6_ILP32_OFF32 = -1,_V6_ILP32_OFFBIG = -1,_V6_LP64_OFF64 = 1,_V6_LPBIG_OFFBIG = 1,};
enum MACRO___R {__R_UNUSED = 2,};
enum MACRO_acs {acs_chars_index = 146,};
enum MACRO_err {err_kern = 0x0,err_us = 0x4000000,err_server = 0x8000000,err_ipc = 0xC000000,err_mach_ipc = 0x10000000,err_dipc = 0x1C000000,err_local = 0xF8000000,err_ipc_compat = 0xFC000000,err_max_system = 0x3F,};
enum MACRO_exc {exc_MSG_COUNT = 3,};
enum MACRO_iso {NID_iso = 181,OBJ_iso = 1,};
enum MACRO_sub {sub_libkern_common = 0,sub_libkern_metaclass = 16384,sub_libkern_reserved = 67092480,};
enum MACRO_sys {sys_libkern = 0xDC000000,};
enum MACRO_x86 {x86_THREAD_STATE32 = 1,x86_FLOAT_STATE32 = 2,x86_EXCEPTION_STATE32 = 3,x86_THREAD_STATE64 = 4,x86_FLOAT_STATE64 = 5,x86_EXCEPTION_STATE64 = 6,x86_THREAD_STATE = 7,x86_FLOAT_STATE = 8,x86_EXCEPTION_STATE = 9,x86_DEBUG_STATE32 = 10,x86_DEBUG_STATE64 = 11,x86_DEBUG_STATE = 12,};
typedef void (*Menu_Hook)(struct tagMENU *);
typedef struct NOTICEREF_st NOTICEREF;
typedef struct otherName_st OTHERNAME;
struct Operation;
typedef struct PBE2PARAM_st PBE2PARAM;
typedef struct _5A8FECC4C2877C4C87F3C51F77AE50CF RECNOINFO;
typedef signed long long SQLBIGINT;
typedef double SQLDOUBLE;
typedef void *SQLHANDLE;
typedef struct slapi_mod Slapi_Mod;
typedef struct slapi_rdn Slapi_RDN;
typedef struct tokenizer Tokenizer;
typedef struct ui_method_st UI_METHOD;
typedef struct ui_string_st UI_STRING;
typedef void VFunction(void);
typedef struct x509_cinf_st X509_CINF;
typedef struct X509_info_st X509_INFO;
typedef struct X509_name_st X509_NAME;
typedef struct private_key_st X509_PKEY;
struct _TidyAttr {int _opaque;};
struct _TidyNode {int _opaque;};
typedef short __int16_t;
typedef int __int32_t;
typedef long long __int64_t;
enum __ns_flag {ns_f_qr = 0x0,ns_f_opcode = 0x1,ns_f_aa = 0x2,ns_f_tc = 0x3,ns_f_rd = 0x4,ns_f_ra = 0x5,ns_f_z = 0x6,ns_f_ad = 0x7,ns_f_cd = 0x8,ns_f_rcode = 0x9,ns_f_max = 0xA,};
enum __ns_sect {ns_s_qd = 0x0,ns_s_zn = 0x0,ns_s_an = 0x1,ns_s_pr = 0x1,ns_s_ns = 0x2,ns_s_ud = 0x2,ns_s_ar = 0x3,ns_s_max = 0x4,};
enum __ns_type {ns_t_invalid = 0x0,ns_t_a = 0x1,ns_t_ns = 0x2,ns_t_md = 0x3,ns_t_mf = 0x4,ns_t_cname = 0x5,ns_t_soa = 0x6,ns_t_mb = 0x7,ns_t_mg = 0x8,ns_t_mr = 0x9,ns_t_null = 0xA,ns_t_wks = 0xB,ns_t_ptr = 0xC,ns_t_hinfo = 0xD,ns_t_minfo = 0xE,ns_t_mx = 0xF,ns_t_txt = 0x10,ns_t_rp = 0x11,ns_t_afsdb = 0x12,ns_t_x25 = 0x13,ns_t_isdn = 0x14,ns_t_rt = 0x15,ns_t_nsap = 0x16,ns_t_nsap_ptr = 0x17,ns_t_sig = 0x18,ns_t_key = 0x19,ns_t_px = 0x1A,ns_t_gpos = 0x1B,ns_t_aaaa = 0x1C,ns_t_loc = 0x1D,ns_t_nxt = 0x1E,ns_t_eid = 0x1F,ns_t_nimloc = 0x20,ns_t_srv = 0x21,ns_t_atma = 0x22,ns_t_naptr = 0x23,ns_t_kx = 0x24,ns_t_cert = 0x25,ns_t_a6 = 0x26,ns_t_dname = 0x27,ns_t_sink = 0x28,ns_t_opt = 0x29,ns_t_tkey = 0xF9,ns_t_tsig = 0xFA,ns_t_ixfr = 0xFB,ns_t_axfr = 0xFC,ns_t_mailb = 0xFD,ns_t_maila = 0xFE,ns_t_any = 0xFF,ns_t_zxfr = 0x100,ns_t_max = 0x10000,};
struct __rtentry;
struct __sockopt;
typedef unsigned char __uint8_t;
struct _xmlMutex;
typedef struct __aslclient *aslclient;
typedef struct _D6100D925DD907377B334267ECE33E6F au_exit_t;
typedef struct _29C8CFA96D5273DFDE9FA38B770B2076 au_file_t;
typedef struct au_mask au_mask_t;
typedef struct _BAC2AEB1FCD724D135CC335E00067868 au_path_t;
typedef struct audit_stat au_stat_t;
typedef struct _278A4467515A4F9120237B9F03BEA089 au_text_t;
enum auth_stat {AUTH_OK = 0x0,AUTH_BADCRED = 0x1,AUTH_REJECTEDCRED = 0x2,AUTH_BADVERF = 0x3,AUTH_REJECTEDVERF = 0x4,AUTH_TOOWEAK = 0x5,AUTH_INVALIDRESP = 0x6,AUTH_FAILED = 0x7,AUTH_KERB_GENERIC = 0x8,AUTH_TIMEEXPIRE = 0x9,AUTH_TKT_FILE = 0xA,AUTH_DECODE = 0xB,AUTH_NET_ADDR = 0xC,RPCSEC_GSS_CREDPROBLEM = 0xD,RPCSEC_GSS_CTXPROBLEM = 0xE,};
typedef int ber_int_t;
typedef unsigned long long ber_len_t;
typedef unsigned long long ber_tag_t;
struct bf_key_st {unsigned int P[18];unsigned int S[1024];};
struct bignum_st {unsigned long long *d;int top;int dmax;int neg;int flags;};
typedef unsigned int boolean_t;
typedef char *bp_path_t;
typedef int bpf_int32;
typedef struct _5B2C4A92108463040FBECE1079B5BB63 bz_stream;
enum clnt_stat {RPC_SUCCESS = 0x0,RPC_CANTENCODEARGS = 0x1,RPC_CANTDECODERES = 0x2,RPC_CANTSEND = 0x3,RPC_CANTRECV = 0x4,RPC_TIMEDOUT = 0x5,RPC_VERSMISMATCH = 0x6,RPC_AUTHERROR = 0x7,RPC_PROGUNAVAIL = 0x8,RPC_PROGVERSMISMATCH = 0x9,RPC_PROCUNAVAIL = 0xA,RPC_CANTDECODEARGS = 0xB,RPC_SYSTEMERROR = 0xC,RPC_UNKNOWNHOST = 0xD,RPC_UNKNOWNPROTO = 0x11,RPC_PMAPFAILURE = 0xE,RPC_PROGNOTREGISTERED = 0xF,RPC_FAILED = 0x10,};
struct clockinfo {int hz;int tick;int tickadj;int stathz;int profhz;};
struct code_desc {unsigned short limit00;unsigned short base00;unsigned char base16;unsigned char type : 5;unsigned char dpl : 2;unsigned char present : 1;unsigned char limit16 : 4;unsigned char : 2;unsigned char opsz : 1;unsigned char granular : 1;unsigned char base24;};
typedef unsigned char cups_ib_t;
struct data_desc {unsigned short limit00;unsigned short base00;unsigned char base16;unsigned char type : 5;unsigned char dpl : 2;unsigned char present : 1;unsigned char limit16 : 4;unsigned char : 2;unsigned char stksz : 1;unsigned char granular : 1;unsigned char base24;};
struct ec_key_st;
struct engine_st;
struct enum_list {struct enum_list *next;int value;char *label;};
typedef long long errcode_t;
typedef unsigned short fexcept_t;
typedef struct fhandle fhandle_t;
typedef struct _filesec *filesec_t;
struct fp_status {unsigned short invalid : 1;unsigned short denorm : 1;unsigned short zdiv : 1;unsigned short ovrfl : 1;unsigned short undfl : 1;unsigned short precis : 1;unsigned short stkflt : 1;unsigned short errsumm : 1;unsigned short c0 : 1;unsigned short c1 : 1;unsigned short c2 : 1;unsigned short tos : 3;unsigned short c3 : 1;unsigned short busy : 1;};
typedef struct gmonhdr_64 gmonhdr_t;
typedef struct gz_header_s gz_header;
typedef struct _node hash_node;
typedef struct _221E4D0AC05B62FB3AF409C4572323C5 imaxdiv_t;
struct inpcbinfo;
struct inpcbport;
typedef struct counter64 integer64;
typedef int integer_t;
typedef unsigned short io_addr_t;
struct ip_addr_t {char net;char host;char lh;char impno;};
typedef struct _ipfw_insn ipfw_insn;
enum ipp_res_e {IPP_RES_PER_INCH = 0x3,IPP_RES_PER_CM = 0x4,};
enum ipp_tag_e {IPP_TAG_ZERO = 0x0,IPP_TAG_OPERATION = 0x1,IPP_TAG_JOB = 0x2,IPP_TAG_END = 0x3,IPP_TAG_PRINTER = 0x4,IPP_TAG_UNSUPPORTED_GROUP = 0x5,IPP_TAG_SUBSCRIPTION = 0x6,IPP_TAG_EVENT_NOTIFICATION = 0x7,IPP_TAG_UNSUPPORTED_VALUE = 0x10,IPP_TAG_DEFAULT = 0x11,IPP_TAG_UNKNOWN = 0x12,IPP_TAG_NOVALUE = 0x13,IPP_TAG_NOTSETTABLE = 0x15,IPP_TAG_DELETEATTR = 0x16,IPP_TAG_ADMINDEFINE = 0x17,IPP_TAG_INTEGER = 0x21,IPP_TAG_BOOLEAN = 0x22,IPP_TAG_ENUM = 0x23,IPP_TAG_STRING = 0x30,IPP_TAG_DATE = 0x31,IPP_TAG_RESOLUTION = 0x32,IPP_TAG_RANGE = 0x33,IPP_TAG_BEGIN_COLLECTION = 0x34,IPP_TAG_TEXTLANG = 0x35,IPP_TAG_NAMELANG = 0x36,IPP_TAG_END_COLLECTION = 0x37,IPP_TAG_TEXT = 0x41,IPP_TAG_NAME = 0x42,IPP_TAG_RESERVED_STRING = 0x43,IPP_TAG_KEYWORD = 0x44,IPP_TAG_URI = 0x45,IPP_TAG_URISCHEME = 0x46,IPP_TAG_CHARSET = 0x47,IPP_TAG_LANGUAGE = 0x48,IPP_TAG_MIMETYPE = 0x49,IPP_TAG_MEMBERNAME = 0x4A,IPP_TAG_MASK = 0x7FFFFFFF,IPP_TAG_COPY = 0x80000000,};
enum klm_stats {klm_granted = 0x0,klm_denied = 0x1,klm_denied_nolocks = 0x2,klm_working = 0x3,};
typedef struct _krb5_cred krb5_cred;
typedef struct _krb5_data krb5_data;
typedef unsigned int krb5_kvno;
typedef unsigned short krb5_ui_2;
typedef unsigned int krb5_ui_4;
typedef void lck_grp_t;
typedef void *lck_mtx_t;
typedef struct _FBA7D87DC326A635240EF53AE056B982 log_rec_t;
typedef struct _2B2E2AA3D14CF05952EA09DDB52B4A5A lt_dlinfo;
typedef void *lt_module;
typedef struct mb_stat mb_stat_t;
typedef struct mountbody *mountlist;
typedef unsigned long long msgqnum_t;
typedef union nfs_quadconvert nfsquad_t;
typedef struct nfs_uquad nfsuint64;
enum nlm_stats {nlm_granted = 0x0,nlm_denied = 0x1,nlm_denied_nolocks = 0x2,nlm_blocked = 0x3,nlm_denied_grace_period = 0x4,nlm_deadlck = 0x5,};
struct pcap_addr {struct pcap_addr *next;struct sockaddr *addr;struct sockaddr *netmask;struct sockaddr *broadaddr;struct sockaddr *dstaddr;};
typedef struct pcap_if pcap_if_t;
typedef struct _pitem *piterator;
typedef struct _profile_t *profile_t;
struct res_9_sym {int number; char *name; char *humanname;};
struct sasl_conn;
typedef struct __siginfo siginfo_t;
struct slapi_mod;
struct slapi_rdn;
struct sm_status {char *mon_name;int state;char priv[16];};
typedef struct __sockopt *sockopt_t;
struct stat_chge {char *mon_name;int state;};
struct task_gate {unsigned short : 16;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} tss;unsigned int : 8;unsigned int type : 5;unsigned int dpl : 2;unsigned int present : 1;unsigned int : 0;};
enum task_role {TASK_RENICED = 0xFFFFFFFF,TASK_UNSPECIFIED = 0x0,TASK_FOREGROUND_APPLICATION = 0x1,TASK_BACKGROUND_APPLICATION = 0x2,TASK_CONTROL_APPLICATION = 0x3,TASK_GRAPHICS_SERVER = 0x4,TASK_THROTTLE_APPLICATION = 0x5,TASK_NONUI_APPLICATION = 0x6,TASK_DEFAULT_APPLICATION = 0x7,};
struct tokenizer;
struct tseg_qent;
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef unsigned long long u_int64_t;
typedef unsigned long long uintmax_t;
typedef unsigned long long uintptr_t;
typedef int vm_prot_t;
typedef unsigned int vm_sync_t;
typedef struct _E1260AB78985DBC228459590506E4C92 wordexp_t;
typedef struct _xmlBuffer xmlBuffer;
typedef struct _xmlEntity xmlEntity;
typedef struct _xmlModule xmlModule;
typedef struct _xmlRMutex xmlRMutex;
typedef struct _xmlRegexp xmlRegexp;
typedef struct _xmlSchema xmlSchema;
enum xprt_stat {XPRT_DIED = 0x0,XPRT_MOREREQS = 0x1,XPRT_IDLE = 0x2,};
enum ypreqtype {YPREQ_KEY = 0x1,YPREQ_NOKEY = 0x2,YPREQ_MAP_PARMS = 0x3,};
enum ypxfrstat {YPXFR_SUCC = 0x1,YPXFR_AGE = 0x2,YPXFR_NOMAP = 0xFFFFFFFF,YPXFR_NODOM = 0xFFFFFFFE,YPXFR_RSRC = 0xFFFFFFFD,YPXFR_RPC = 0xFFFFFFFC,YPXFR_MADDR = 0xFFFFFFFB,YPXFR_YPERR = 0xFFFFFFFA,YPXFR_BADARGS = 0xFFFFFFF9,YPXFR_DBM = 0xFFFFFFF8,YPXFR_FILE = 0xFFFFFFF7,YPXFR_SKEW = 0xFFFFFFF6,YPXFR_CLEAR = 0xFFFFFFF5,YPXFR_FORCE = 0xFFFFFFF4,YPXFR_XFRERR = 0xFFFFFFF3,YPXFR_REFUSED = 0xFFFFFFF2,};
struct zone_name {char zn_name[80];};
typedef struct ASN1_ADB_st ASN1_ADB;
typedef struct ASN1_AUX_st ASN1_AUX;
typedef struct asn1_ctx_st ASN1_CTX;
typedef struct ASN1_TLC_st ASN1_TLC;
typedef struct bn_gencb_st BN_GENCB;
typedef unsigned long long BOOKMARK;
typedef struct berval BerValue;
typedef struct cast_key_st CAST_KEY;
typedef struct comp_ctx_st COMP_CTX;
typedef struct ec_group_st EC_GROUP;
typedef struct ec_point_st EC_POINT;
typedef struct evp_pkey_st EVP_PKEY;
typedef struct editline EditLine;
typedef unsigned int FFI_TYPE;
typedef int Function( char *, int);
typedef struct _42CAA206A1F917EEF51ECD514D7730BF HASHINFO;
typedef struct hmac_ctx_st HMAC_CTX;
typedef struct historyW HistoryW;
typedef struct lineinfo LineInfo;
enum MACRO_AC {AC_PERMIT = 1,AC_DENY = -1,AC_ERROR = -1,};
enum MACRO_AD {AD_TYPE_RESERVED = 0x8000,AD_TYPE_EXTERNAL = 0x4000,AD_TYPE_REGISTERED = 0x2000,AD_TYPE_FIELD_TYPE_MASK = 0x1FFF,};
enum MACRO_AF {AF_SYS_CONTROL = 2,};
enum MACRO_AI {AI_PASSIVE = 0x1,AI_CANONNAME = 0x2,AI_NUMERICHOST = 0x4,AI_NUMERICSERV = 0x1000,AI_ALL = 0x100,AI_V4MAPPED_CFG = 0x200,AI_ADDRCONFIG = 0x400,AI_V4MAPPED = 0x800,AI_DEFAULT = 0x600,};
enum MACRO_AO {AO = 245,};
enum MACRO_AP {AP_OPTS_RESERVED = 0x80000000,AP_OPTS_USE_SESSION_KEY = 0x40000000,AP_OPTS_MUTUAL_REQUIRED = 0x20000000,AP_OPTS_USE_SUBKEY = 0x1,AP_OPTS_WIRE_MASK = 0xFFFFFFF0,};
enum MACRO_AQ {AQ_HIWATER = 100,AQ_MAXHIGH = 10000,AQ_LOWATER = 10,AQ_BUFSZ = 32767,AQ_MAXBUFSZ = 1048576,};
enum MACRO_AT {AT_IPC_MSG = 1,AT_IPC_SEM = 2,AT_IPC_SHM = 3,};
enum MACRO_AU {AU_DEFAUDITID = 4294967295,AU_DEFAUDITSID = 0,AU_ASSIGN_ASID = -1,};
enum MACRO_B0 {B0 = 0,B50 = 50,};
enum MACRO_BC {BC_BASE_MAX = 99,BC_DIM_MAX = 2048,BC_SCALE_MAX = 99,BC_STRING_MAX = 1000,};
enum MACRO_BF {BF_ENCRYPT = 1,BF_DECRYPT = 0,BF_ROUNDS = 16,BF_BLOCK = 8,};
enum MACRO_BN {BN_BITS = 128,BN_BYTES = 8,BN_BITS2 = 64,BN_BITS4 = 32,BN_MASK2 = -1,BN_MASK2l = 4294967295,BN_MASK2h = -4294967296,BN_MASK2h1 = -2147483648,BN_TBIT = -9223372036854775808,BN_DEC_CONV = -8446744073709551616,BN_DEC_NUM = 19,BN_DEFAULT_BITS = 1280,BN_FLG_MALLOCED = 1,BN_FLG_STATIC_DATA = 2,BN_FLG_CONSTTIME = 4,BN_FLG_EXP_CONSTTIME = 4,BN_FLG_FREE = 32768,BN_prime_checks = 0,BN_BLINDING_NO_UPDATE = 1,BN_BLINDING_NO_RECREATE = 2,BN_F_BNRAND = 127,BN_F_BN_BLINDING_CONVERT_EX = 100,BN_F_BN_BLINDING_CREATE_PARAM = 128,BN_F_BN_BLINDING_INVERT_EX = 101,BN_F_BN_BLINDING_NEW = 102,BN_F_BN_BLINDING_UPDATE = 103,BN_F_BN_BN2DEC = 104,BN_F_BN_BN2HEX = 105,BN_F_BN_CTX_GET = 116,BN_F_BN_CTX_NEW = 106,BN_F_BN_CTX_START = 129,BN_F_BN_DIV = 107,BN_F_BN_DIV_NO_BRANCH = 138,BN_F_BN_DIV_RECP = 130,BN_F_BN_EXP = 123,BN_F_BN_EXPAND2 = 108,BN_F_BN_EXPAND_INTERNAL = 120,BN_F_BN_GF2M_MOD = 131,BN_F_BN_GF2M_MOD_EXP = 132,BN_F_BN_GF2M_MOD_MUL = 133,BN_F_BN_GF2M_MOD_SOLVE_QUAD = 134,BN_F_BN_GF2M_MOD_SOLVE_QUAD_ARR = 135,BN_F_BN_GF2M_MOD_SQR = 136,BN_F_BN_GF2M_MOD_SQRT = 137,BN_F_BN_MOD_EXP2_MONT = 118,BN_F_BN_MOD_EXP_MONT = 109,BN_F_BN_MOD_EXP_MONT_CONSTTIME = 124,BN_F_BN_MOD_EXP_MONT_WORD = 117,BN_F_BN_MOD_EXP_RECP = 125,BN_F_BN_MOD_EXP_SIMPLE = 126,BN_F_BN_MOD_INVERSE = 110,BN_F_BN_MOD_INVERSE_NO_BRANCH = 139,BN_F_BN_MOD_LSHIFT_QUICK = 119,BN_F_BN_MOD_MUL_RECIPROCAL = 111,BN_F_BN_MOD_SQRT = 121,BN_F_BN_MPI2BN = 112,BN_F_BN_NEW = 113,BN_F_BN_RAND = 114,BN_F_BN_RAND_RANGE = 122,BN_F_BN_USUB = 115,BN_R_ARG2_LT_ARG3 = 100,BN_R_BAD_RECIPROCAL = 101,BN_R_BIGNUM_TOO_LONG = 114,BN_R_CALLED_WITH_EVEN_MODULUS = 102,BN_R_DIV_BY_ZERO = 103,BN_R_ENCODING_ERROR = 104,BN_R_EXPAND_ON_STATIC_BIGNUM_DATA = 105,BN_R_INPUT_NOT_REDUCED = 110,BN_R_INVALID_LENGTH = 106,BN_R_INVALID_RANGE = 115,BN_R_NOT_A_SQUARE = 111,BN_R_NOT_INITIALIZED = 107,BN_R_NO_INVERSE = 108,BN_R_NO_SOLUTION = 116,BN_R_P_IS_NOT_PRIME = 112,BN_R_TOO_MANY_ITERATIONS = 113,BN_R_TOO_MANY_TEMPORARY_VARIABLES = 109,};
enum MACRO_BZ {BZ_RUN = 0,BZ_FLUSH = 1,BZ_FINISH = 2,BZ_OK = 0,BZ_RUN_OK = 1,BZ_FLUSH_OK = 2,BZ_FINISH_OK = 3,BZ_STREAM_END = 4,BZ_SEQUENCE_ERROR = -1,BZ_PARAM_ERROR = -2,BZ_MEM_ERROR = -3,BZ_DATA_ERROR = -4,BZ_DATA_ERROR_MAGIC = -5,BZ_IO_ERROR = -6,BZ_UNEXPECTED_EOF = -7,BZ_OUTBUFF_FULL = -8,BZ_CONFIG_ERROR = -9,BZ_MAX_UNUSED = 5000,};
enum MACRO_CC {CC_NORM = 0,CC_NEWLINE = 1,CC_EOF = 2,CC_ARGHACK = 3,CC_REFRESH = 4,CC_CURSOR = 5,CC_ERROR = 6,CC_FATAL = 7,CC_REDISPLAY = 8,CC_REFRESH_BEEP = 9,};
enum MACRO_DB {DB_LOCK = 0x20000000,DB_SHMEM = 0x40000000,DB_TXN = 0x80000000,};
enum MACRO_DH {DH_FLAG_CACHE_MONT_P = 0x1,DH_FLAG_NO_EXP_CONSTTIME = 0x2,DH_GENERATOR_2 = 0x2,DH_GENERATOR_5 = 0x5,DH_CHECK_P_NOT_PRIME = 0x1,DH_CHECK_P_NOT_SAFE_PRIME = 0x2,DH_UNABLE_TO_CHECK_GENERATOR = 0x4,DH_NOT_SUITABLE_GENERATOR = 0x8,DH_CHECK_PUBKEY_TOO_SMALL = 0x1,DH_CHECK_PUBKEY_TOO_LARGE = 0x2,DH_CHECK_P_NOT_STRONG_PRIME = 0x2,DH_F_COMPUTE_KEY = 0x66,DH_F_DHPARAMS_PRINT = 0x64,DH_F_DHPARAMS_PRINT_FP = 0x65,DH_F_DH_BUILTIN_GENPARAMS = 0x6A,DH_F_DH_COMPUTE_KEY = 0x6B,DH_F_DH_GENERATE_KEY = 0x6C,DH_F_DH_GENERATE_PARAMETERS = 0x6D,DH_F_DH_NEW_METHOD = 0x69,DH_F_GENERATE_KEY = 0x67,DH_F_GENERATE_PARAMETERS = 0x68,DH_R_BAD_GENERATOR = 0x65,DH_R_INVALID_PUBKEY = 0x66,DH_R_KEY_SIZE_TOO_SMALL = 0x68,DH_R_MODULUS_TOO_LARGE = 0x67,DH_R_NO_PRIVATE_VALUE = 0x64,};
enum MACRO_DK {DK_FEATURE_UNMAP = 0x10,};
enum MACRO_DM {DM = 242,};
enum MACRO_DO {DO = 253,};
enum MACRO_DT {DT_UNKNOWN = 0,DT_FIFO = 1,DT_CHR = 2,DT_DIR = 4,DT_BLK = 6,DT_REG = 8,DT_LNK = 10,DT_SOCK = 12,DT_WHT = 14,};
enum MACRO_EC {EC = 247,};
enum MACRO_EL {EL_PROMPT = 0,EL_TERMINAL = 1,EL_EDITOR = 2,EL_SIGNAL = 3,EL_BIND = 4,EL_TELLTC = 5,EL_SETTC = 6,EL_ECHOTC = 7,EL_SETTY = 8,EL_ADDFN = 9,EL_HIST = 10,EL_EDITMODE = 11,EL_RPROMPT = 12,EL_GETCFN = 13,EL_CLIENTDATA = 14,EL_UNBUFFERED = 15,EL_PREP_TERM = 16,EL_GETTC = 17,EL_GETFP = 18,EL_SETFP = 19,EL_REFRESH = 20,EL_PROMPT_ESC = 21,EL_RPROMPT_ESC = 22,EL_BUILTIN_GETCFN = 0,};
enum MACRO_EV {EV_FD = 1,EV_RE = 1,EV_WR = 2,EV_EX = 4,EV_RM = 8,EV_MASK = 15,EV_RBYTES = 256,EV_WBYTES = 512,EV_RWBYTES = 768,EV_RCLOSED = 1024,EV_RCONN = 2048,EV_WCLOSED = 4096,EV_WCONN = 8192,EV_OOB = 16384,EV_FIN = 32768,EV_RESET = 65536,EV_TIMEOUT = 131072,EV_DMASK = 4294967040,};
enum MACRO_EX {EX_OK = 0,EX__BASE = 64,EX_USAGE = 64,EX_DATAERR = 65,EX_NOINPUT = 66,EX_NOUSER = 67,EX_NOHOST = 68,EX_UNAVAILABLE = 69,EX_SOFTWARE = 70,EX_OSERR = 71,EX_OSFILE = 72,EX_CANTCREAT = 73,EX_IOERR = 74,EX_TEMPFAIL = 75,EX_PROTOCOL = 76,EX_NOPERM = 77,EX_CONFIG = 78,EX__MAX = 78,};
enum MACRO_FD {FD_SETSIZE = 1024,};
enum MACRO_FE {FE_INEXACT = 0x20,FE_UNDERFLOW = 0x10,FE_OVERFLOW = 0x8,FE_DIVBYZERO = 0x4,FE_INVALID = 0x1,FE_ALL_EXCEPT = 0x3D,FE_TONEAREST = 0x0,FE_DOWNWARD = 0x400,FE_UPWARD = 0x800,FE_TOWARDZERO = 0xC00,};
enum MACRO_FP {FP_PREC_24B = 0,FP_PREC_53B = 2,FP_PREC_64B = 3,FP_RND_NEAR = 0,FP_RND_DOWN = 1,FP_RND_UP = 2,FP_CHOP = 3,FP_STATE_BYTES = 512,};
enum MACRO_GA {GA = 249,};
enum MACRO_HW {HW_MACHINE = 1,HW_MODEL = 2,HW_NCPU = 3,HW_BYTEORDER = 4,HW_PHYSMEM = 5,HW_USERMEM = 6,HW_PAGESIZE = 7,HW_DISKNAMES = 8,HW_DISKSTATS = 9,HW_EPOCH = 10,HW_FLOATINGPT = 11,HW_MACHINE_ARCH = 12,HW_VECTORUNIT = 13,HW_BUS_FREQ = 14,HW_CPU_FREQ = 15,HW_CACHELINE = 16,HW_L1ICACHESIZE = 17,HW_L1DCACHESIZE = 18,HW_L2SETTINGS = 19,HW_L2CACHESIZE = 20,HW_L3SETTINGS = 21,HW_L3CACHESIZE = 22,HW_TB_FREQ = 23,HW_MEMSIZE = 24,HW_AVAILCPU = 25,HW_MAXID = 26,};
enum MACRO_ID {ID_TYPE_UID = 0,ID_TYPE_GID = 1,ID_TYPE_SID = 3,ID_TYPE_USERNAME = 4,ID_TYPE_GROUPNAME = 5,ID_TYPE_GSS_EXPORT_NAME = 10,ID_TYPE_X509_DN = 11,ID_TYPE_KERBEROS = 12,};
enum MACRO_IF {IF_NAMESIZE = 16,};
enum MACRO_IN {IN_CLASSA_NET = 0xFF000000,IN_CLASSA_NSHIFT = 0x18,IN_CLASSA_HOST = 0xFFFFFF,IN_CLASSA_MAX = 0x80,IN_CLASSB_NET = 0xFFFF0000,IN_CLASSB_NSHIFT = 0x10,IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x10000,IN_CLASSC_NET = 0xFFFFFF00,IN_CLASSC_NSHIFT = 0x8,IN_CLASSC_HOST = 0xFF,IN_CLASSD_NET = 0xF0000000,IN_CLASSD_NSHIFT = 0x1C,IN_CLASSD_HOST = 0xFFFFFFF,};
enum MACRO_IO {IO_METASYNC = 0,};
enum MACRO_IP {IP_OPTIONS = 1,IP_HDRINCL = 2,IP_TOS = 3,IP_TTL = 4,IP_RECVOPTS = 5,IP_RECVRETOPTS = 6,IP_RECVDSTADDR = 7,IP_RETOPTS = 8,IP_MULTICAST_IF = 9,IP_MULTICAST_TTL = 10,IP_MULTICAST_LOOP = 11,IP_ADD_MEMBERSHIP = 12,IP_DROP_MEMBERSHIP = 13,IP_MULTICAST_VIF = 14,IP_RSVP_ON = 15,IP_RSVP_OFF = 16,IP_RSVP_VIF_ON = 17,IP_RSVP_VIF_OFF = 18,IP_PORTRANGE = 19,IP_RECVIF = 20,IP_IPSEC_POLICY = 21,IP_FAITH = 22,IP_STRIPHDR = 23,IP_RECVTTL = 24,IP_BOUND_IF = 25,IP_PKTINFO = 26,IP_RECVPKTINFO = 26,IP_FW_ADD = 40,IP_FW_DEL = 41,IP_FW_FLUSH = 42,IP_FW_ZERO = 43,IP_FW_GET = 44,IP_FW_RESETLOG = 45,IP_OLD_FW_ADD = 50,IP_OLD_FW_DEL = 51,IP_OLD_FW_FLUSH = 52,IP_OLD_FW_ZERO = 53,IP_OLD_FW_GET = 54,IP_NAT__XXX = 55,IP_OLD_FW_RESETLOG = 56,IP_DUMMYNET_CONFIGURE = 60,IP_DUMMYNET_DEL = 61,IP_DUMMYNET_FLUSH = 62,IP_DUMMYNET_GET = 64,IP_TRAFFIC_MGT_BACKGROUND = 65,IP_MULTICAST_IFINDEX = 66,IP_ADD_SOURCE_MEMBERSHIP = 70,IP_DROP_SOURCE_MEMBERSHIP = 71,IP_BLOCK_SOURCE = 72,IP_UNBLOCK_SOURCE = 73,IP_MSFILTER = 74,};
enum MACRO_IS {IS_SEQUENCE = 0,IS_SET = 1,};
enum MACRO_KU {KU_DIGITAL_SIGNATURE = 0x80,KU_NON_REPUDIATION = 0x40,KU_KEY_ENCIPHERMENT = 0x20,KU_DATA_ENCIPHERMENT = 0x10,KU_KEY_AGREEMENT = 0x8,KU_KEY_CERT_SIGN = 0x4,KU_CRL_SIGN = 0x2,KU_ENCIPHER_ONLY = 0x1,KU_DECIPHER_ONLY = 0x8000,};
enum MACRO_LC {LC_ALL = 0,LC_COLLATE = 1,LC_CTYPE = 2,LC_MONETARY = 3,LC_NUMERIC = 4,LC_TIME = 5,LC_MESSAGES = 6,};
enum MACRO_LH {LH_LOAD_MULT = 256,};
enum MACRO_LM {LM_MODE = 1,LM_FORWARDMASK = 2,LM_SLC = 3,};
enum MACRO_LR {LR_TYPE_THIS_SERVER_ONLY = 0x8000,LR_TYPE_INTERPRETATION_MASK = 0x7FFF,};
enum MACRO_LS {LS_PRINT_NEVER = 5,LS_PRINT_LOG = 3,LS_PRINT_ALWAYS = 0,};
enum MACRO_LT {LT_FILENAME_MAX = 2048,LT_EOS_CHAR = 0,LT_PATHSEP_CHAR = 58,LT_ERROR_H = 1,LT_ERROR_LEN_MAX = 41,LT_DLLOADER_H = 1,};
enum MACRO_MB {MB_LEN_MAX = 6,};
enum MACRO_MH {MH_MAGIC = 0xFEEDFACE,MH_CIGAM = 0xCEFAEDFE,MH_MAGIC_64 = 0xFEEDFACF,MH_CIGAM_64 = 0xCFFAEDFE,MH_OBJECT = 0x1,MH_EXECUTE = 0x2,MH_FVMLIB = 0x3,MH_CORE = 0x4,MH_PRELOAD = 0x5,MH_DYLIB = 0x6,MH_DYLINKER = 0x7,MH_BUNDLE = 0x8,MH_DYLIB_STUB = 0x9,MH_DSYM = 0xA,MH_KEXT_BUNDLE = 0xB,MH_NOUNDEFS = 0x1,MH_INCRLINK = 0x2,MH_DYLDLINK = 0x4,MH_BINDATLOAD = 0x8,MH_PREBOUND = 0x10,MH_SPLIT_SEGS = 0x20,MH_LAZY_INIT = 0x40,MH_TWOLEVEL = 0x80,MH_FORCE_FLAT = 0x100,MH_NOMULTIDEFS = 0x200,MH_NOFIXPREBINDING = 0x400,MH_PREBINDABLE = 0x800,MH_ALLMODSBOUND = 0x1000,MH_SUBSECTIONS_VIA_SYMBOLS = 0x2000,MH_CANONICAL = 0x4000,MH_WEAK_DEFINES = 0x8000,MH_BINDS_TO_WEAK = 0x10000,MH_ALLOW_STACK_EXECUTION = 0x20000,MH_ROOT_SAFE = 0x40000,MH_SETUID_SAFE = 0x80000,MH_NO_REEXPORTED_DYLIBS = 0x100000,MH_PIE = 0x200000,MH_DEAD_STRIPPABLE_DYLIB = 0x400000,MH_HAS_TLV_DESCRIPTORS = 0x800000,MH_NO_HEAP_EXECUTION = 0x1000000,};
enum MACRO_MM {MM_HARD = 0x1,MM_SOFT = 0x2,MM_FIRM = 0x4,MM_APPL = 0x10,MM_UTIL = 0x20,MM_OPSYS = 0x40,MM_PRINT = 0x100,MM_CONSOLE = 0x200,MM_RECOVER = 0x1000,MM_NRECOV = 0x2000,MM_NOSEV = 0x0,MM_HALT = 0x1,MM_ERROR = 0x2,MM_WARNING = 0x3,MM_INFO = 0x4,MM_NULLLBL = 0x0,MM_NULLSEV = 0x0,MM_NULLMC = 0x0,MM_NULLTXT = 0x0,MM_NULLACT = 0x0,MM_NULLTAG = 0x0,MM_OK = 0x0,MM_NOMSG = 0x1,MM_NOCON = 0x2,MM_NOTOK = 0x3,};
enum MACRO_MS {MS_ASYNC = 0x1,MS_INVALIDATE = 0x2,MS_SYNC = 0x10,MS_KILLPAGES = 0x4,MS_DEACTIVATE = 0x8,};
enum MACRO_MT {MT_FREE = 0,MT_DATA = 1,MT_HEADER = 2,MT_SOCKET = 3,MT_PCB = 4,MT_RTABLE = 5,MT_HTABLE = 6,MT_ATABLE = 7,MT_SONAME = 8,MT_SOOPTS = 10,MT_FTABLE = 11,MT_RIGHTS = 12,MT_IFADDR = 13,MT_CONTROL = 14,MT_OOBDATA = 15,MT_TAG = 16,MT_MAX = 32,};
enum MACRO_ND {ND_ROUTER_SOLICIT = 133,ND_ROUTER_ADVERT = 134,ND_NEIGHBOR_SOLICIT = 135,ND_NEIGHBOR_ADVERT = 136,ND_REDIRECT = 137,};
enum MACRO_NI {NI_MAXHOST = 1025,NI_MAXSERV = 32,NI_NOFQDN = 1,NI_NUMERICHOST = 2,NI_NAMEREQD = 4,NI_NUMERICSERV = 8,NI_DGRAM = 16,NI_WITHSCOPEID = 32,};
enum MACRO_NL {NL_ARGMAX = 9,NL_LANGMAX = 14,NL_MSGMAX = 32767,NL_NMAX = 1,NL_SETMAX = 255,NL_TEXTMAX = 2048,};
enum MACRO_NO {NO_JUSTIFICATION = 0,};
enum MACRO_NS {NS_PACKETSZ = 512,NS_MAXDNAME = 1025,NS_MAXCDNAME = 255,NS_MAXLABEL = 63,NS_HFIXEDSZ = 12,NS_QFIXEDSZ = 4,NS_RRFIXEDSZ = 10,NS_INT32SZ = 4,NS_INT16SZ = 2,NS_INT8SZ = 1,NS_INADDRSZ = 4,NS_IN6ADDRSZ = 16,NS_CMPRSFLGS = 192,NS_DEFAULTPORT = 53,NS_TSIG_FUDGE = 300,NS_TSIG_TCP_COUNT = 100,NS_TSIG_ERROR_NO_TSIG = -10,NS_TSIG_ERROR_NO_SPACE = -11,NS_TSIG_ERROR_FORMERR = -12,NS_KEY_TYPEMASK = 49152,NS_KEY_TYPE_AUTH_CONF = 0,NS_KEY_TYPE_CONF_ONLY = 32768,NS_KEY_TYPE_AUTH_ONLY = 16384,NS_KEY_TYPE_NO_KEY = 49152,NS_KEY_NO_AUTH = 32768,NS_KEY_NO_CONF = 16384,NS_KEY_RESERVED2 = 8192,NS_KEY_EXTENDED_FLAGS = 4096,NS_KEY_RESERVED4 = 2048,NS_KEY_RESERVED5 = 1024,NS_KEY_NAME_TYPE = 768,NS_KEY_NAME_USER = 0,NS_KEY_NAME_ENTITY = 512,NS_KEY_NAME_ZONE = 256,NS_KEY_NAME_RESERVED = 768,NS_KEY_RESERVED8 = 128,NS_KEY_RESERVED9 = 64,NS_KEY_RESERVED10 = 32,NS_KEY_RESERVED11 = 16,NS_KEY_SIGNATORYMASK = 15,NS_KEY_RESERVED_BITMASK = 11504,NS_KEY_RESERVED_BITMASK2 = 65535,NS_ALG_MD5RSA = 1,NS_ALG_DH = 2,NS_ALG_DSA = 3,NS_ALG_DSS = 3,NS_ALG_EXPIRE_ONLY = 253,NS_ALG_PRIVATE_OID = 254,NS_KEY_PROT_TLS = 1,NS_KEY_PROT_EMAIL = 2,NS_KEY_PROT_DNSSEC = 3,NS_KEY_PROT_IPSEC = 4,NS_KEY_PROT_ANY = 255,NS_MD5RSA_MIN_BITS = 512,NS_MD5RSA_MAX_BITS = 2552,NS_MD5RSA_MAX_BYTES = 5107,NS_MD5RSA_MAX_BASE64 = 6812,NS_MD5RSA_MIN_SIZE = 64,NS_MD5RSA_MAX_SIZE = 319,NS_DSA_SIG_SIZE = 41,NS_DSA_MIN_SIZE = 213,NS_DSA_MAX_BYTES = 405,NS_SIG_TYPE = 0,NS_SIG_ALG = 2,NS_SIG_LABELS = 3,NS_SIG_OTTL = 4,NS_SIG_EXPIR = 8,NS_SIG_SIGNED = 12,NS_SIG_FOOT = 16,NS_SIG_SIGNER = 18,NS_NXT_BITS = 8,NS_NXT_MAX = 127,NS_OPT_DNSSEC_OK = 32768,};
enum MACRO_NX {NX_MAX_SEC_FLAVORS = 5,};
enum MACRO_OK {F_OK = 0,X_OK = 1,W_OK = 2,R_OK = 4,_READ_OK = 512,_WRITE_OK = 1024,_EXECUTE_OK = 2048,_DELETE_OK = 4096,_APPEND_OK = 8192,_RMFILE_OK = 16384,_RATTR_OK = 32768,_WATTR_OK = 65536,_REXT_OK = 131072,_WEXT_OK = 262144,_RPERM_OK = 524288,_WPERM_OK = 1048576,_CHOWN_OK = 2097152,};
enum MACRO_OS {OS_SPINLOCK_INIT = 0,};
enum MACRO_PF {PF_UNSPEC = 0,PF_LOCAL = 1,PF_UNIX = 1,PF_INET = 2,PF_IMPLINK = 3,PF_PUP = 4,PF_CHAOS = 5,PF_NS = 6,PF_ISO = 7,PF_OSI = 7,PF_ECMA = 8,PF_DATAKIT = 9,PF_CCITT = 10,PF_SNA = 11,PF_DECnet = 12,PF_DLI = 13,PF_LAT = 14,PF_HYLINK = 15,PF_APPLETALK = 16,PF_ROUTE = 17,PF_LINK = 18,PF_XTP = 19,PF_COIP = 20,PF_CNT = 21,PF_SIP = 24,PF_IPX = 23,PF_RTIP = 22,PF_PIP = 25,PF_NDRV = 27,PF_ISDN = 28,PF_KEY = 29,PF_INET6 = 30,PF_NATM = 31,PF_SYSTEM = 32,PF_NETBIOS = 33,PF_PPP = 34,PF_RESERVED_36 = 36,PF_MAX = 38,PF_VLAN = 1986814318,PF_BOND = 1651469924,};
enum MACRO_PQ {PQ_64BIT_IS_INTEGER = 1,PQ_64BIT_IS_BIGNUM = 0,};
enum MACRO_PR {PR_SLOWHZ = 2,};
enum MACRO_PT {PT_TRACE_ME = 0,PT_READ_I = 1,PT_READ_D = 2,PT_READ_U = 3,PT_WRITE_I = 4,PT_WRITE_D = 5,PT_WRITE_U = 6,PT_CONTINUE = 7,PT_KILL = 8,PT_STEP = 9,PT_ATTACH = 10,PT_DETACH = 11,PT_SIGEXC = 12,PT_THUPDATE = 13,PT_ATTACHEXC = 14,PT_FORCEQUOTA = 30,PT_DENY_ATTACH = 31,PT_FIRSTMACH = 32,};
enum MACRO_QF {QF_VERSION = 1,QF_USERS_PER_GB = 256,QF_MIN_USERS = 2048,QF_MAX_USERS = 2097152,QF_GROUPS_PER_GB = 32,QF_MIN_GROUPS = 2048,QF_MAX_GROUPS = 262144,};
enum MACRO_RB {RB_AUTOBOOT = 0,RB_ASKNAME = 1,RB_SINGLE = 2,RB_NOSYNC = 4,RB_HALT = 8,RB_INITNAME = 16,RB_DFLTROOT = 32,RB_ALTBOOT = 64,RB_UNIPROC = 128,RB_SAFEBOOT = 256,RB_UPSDELAY = 512,RB_QUICK = 1024,RB_PANIC = 0,RB_BOOT = 1,};
enum MACRO_RL {RL_READLINE_VERSION = 0x402,RL_PROMPT_START_IGNORE = 0x1,RL_PROMPT_END_IGNORE = 0x2,};
enum MACRO_RQ {RQ_FILE = 1,RQ_DAEMON = 2,RQ_USER = 3,RQ_CLIENT_NAME = 4,RQ_CLIENT_ADDR = 5,RQ_CLIENT_SIN = 6,RQ_SERVER_NAME = 7,RQ_SERVER_ADDR = 8,RQ_SERVER_SIN = 9,};
enum MACRO_RS {RS_NONEXISTENT = 0,RS_ACTIVE = 1,RS_NOTINSERVICE = 2,RS_NOTREADY = 3,RS_CREATEANDGO = 4,RS_CREATEANDWAIT = 5,RS_DESTROY = 6,};
enum MACRO_SA {SA_ONSTACK = 0x1,SA_RESTART = 0x2,SA_RESETHAND = 0x4,SA_NOCLDSTOP = 0x8,SA_NODEFER = 0x10,SA_NOCLDWAIT = 0x20,SA_SIGINFO = 0x40,SA_USERTRAMP = 0x100,SA_64REGSET = 0x200,SA_USERSPACE_MASK = 0x7F,};
enum MACRO_SB {SB = 250,};
enum MACRO_SE {SE = 240,};
enum MACRO_SF {SF_SETTABLE = 0xFFFF0000,SF_ARCHIVED = 0x10000,SF_IMMUTABLE = 0x20000,SF_APPEND = 0x40000,};
enum MACRO_SG {SG_HIGHVM = 0x1,SG_FVMLIB = 0x2,SG_NORELOC = 0x4,SG_PROTECTED_VERSION_1 = 0x8,};
enum MACRO_SI {SI_USER = 0x10001,SI_QUEUE = 0x10002,SI_TIMER = 0x10003,SI_ASYNCIO = 0x10004,SI_MESGQ = 0x10005,};
enum MACRO_SM {SM_COW = 1,SM_PRIVATE = 2,SM_EMPTY = 3,SM_SHARED = 4,SM_TRUESHARED = 5,SM_PRIVATE_ALIASED = 6,SM_SHARED_ALIASED = 7,SM_LARGE_PAGE = 8,};
enum MACRO_SO {SO_DEBUG = 0x1,SO_ACCEPTCONN = 0x2,SO_REUSEADDR = 0x4,SO_KEEPALIVE = 0x8,SO_DONTROUTE = 0x10,SO_BROADCAST = 0x20,SO_USELOOPBACK = 0x40,SO_LINGER = 0x80,SO_OOBINLINE = 0x100,SO_REUSEPORT = 0x200,SO_TIMESTAMP = 0x400,SO_TIMESTAMP_MONOTONIC = 0x800,SO_DONTTRUNC = 0x2000,SO_WANTMORE = 0x4000,SO_WANTOOBFLAG = 0x8000,SO_SNDBUF = 0x1001,SO_RCVBUF = 0x1002,SO_SNDLOWAT = 0x1003,SO_RCVLOWAT = 0x1004,SO_SNDTIMEO = 0x1005,SO_RCVTIMEO = 0x1006,SO_ERROR = 0x1007,SO_TYPE = 0x1008,SO_LABEL = 0x1010,SO_PEERLABEL = 0x1011,SO_NREAD = 0x1020,SO_NKE = 0x1021,SO_NOSIGPIPE = 0x1022,SO_NOADDRERR = 0x1023,SO_NWRITE = 0x1024,SO_REUSESHAREUID = 0x1025,SO_NOTIFYCONFLICT = 0x1026,SO_UPCALLCLOSEWAIT = 0x1027,SO_LINGER_SEC = 0x1080,SO_RESTRICTIONS = 0x1081,SO_RESTRICT_DENYIN = 0x1,SO_RESTRICT_DENYOUT = 0x2,SO_RESTRICT_DENYSET = 0x80000000,SO_RANDOMPORT = 0x1082,SO_NP_EXTENSIONS = 0x1083,};
enum MACRO_SS {SS_ONSTACK = 0x1,SS_DISABLE = 0x4,};
enum MACRO_ST {ST_RDONLY = 0x1,ST_NOSUID = 0x2,};
enum MACRO_SV {SV_ONSTACK = 1,SV_INTERRUPT = 2,SV_RESETHAND = 4,SV_NODEFER = 16,SV_NOCLDSTOP = 8,SV_SIGINFO = 64,};
enum MACRO_TF {TF_ACKNOW = 0x1,TF_DELACK = 0x2,TF_NODELAY = 0x4,TF_NOOPT = 0x8,TF_SENTFIN = 0x10,TF_REQ_SCALE = 0x20,TF_RCVD_SCALE = 0x40,TF_REQ_TSTMP = 0x80,TF_RCVD_TSTMP = 0x100,TF_SACK_PERMIT = 0x200,TF_NEEDSYN = 0x400,TF_NEEDFIN = 0x800,TF_NOPUSH = 0x1000,TF_REQ_CC = 0x2000,TF_RCVD_CC = 0x4000,TF_SENDCCNEW = 0x8000,TF_MORETOCOME = 0x10000,TF_LQ_OVERFLOW = 0x20000,TF_RXWIN0SENT = 0x40000,TF_SLOWLINK = 0x80000,};
enum MACRO_TH {TH_USAGE_SCALE = 1000,TH_STATE_RUNNING = 1,TH_STATE_STOPPED = 2,TH_STATE_WAITING = 3,TH_STATE_UNINTERRUPTIBLE = 4,TH_STATE_HALTED = 5,TH_FLAGS_SWAPPED = 1,TH_FLAGS_IDLE = 2,};
enum MACRO_TM {TM_SUNDAY = 0,TM_MONDAY = 1,TM_TUESDAY = 2,TM_WEDNESDAY = 3,TM_THURSDAY = 4,TM_FRIDAY = 5,TM_SATURDAY = 6,TM_JANUARY = 0,TM_FEBRUARY = 1,TM_MARCH = 2,TM_APRIL = 3,TM_MAY = 4,TM_JUNE = 5,TM_JULY = 6,TM_AUGUST = 7,TM_SEPTEMBER = 8,TM_OCTOBER = 9,TM_NOVEMBER = 10,TM_DECEMBER = 11,TM_YEAR_BASE = 1900,};
enum MACRO_TR {TR_BREADHIT = 0,TR_BREADMISS = 1,TR_BWRITE = 2,TR_BREADHITRA = 3,TR_BREADMISSRA = 4,TR_XFODMISS = 5,TR_XFODHIT = 6,TR_BRELSE = 7,TR_BREALLOC = 8,TR_MALL = 10,TR_INTRANS = 20,TR_EINTRANS = 21,TR_FRECLAIM = 22,TR_RECLAIM = 23,TR_XSFREC = 24,TR_XIFREC = 25,TR_WAITMEM = 26,TR_EWAITMEM = 27,TR_ZFOD = 28,TR_EXFOD = 29,TR_VRFOD = 30,TR_CACHEFOD = 31,TR_SWAPIN = 32,TR_PGINDONE = 33,TR_SWAPIO = 34,TR_VADVISE = 40,TR_STAMP = 45,TR_NFLAGS = 100,};
enum MACRO_TS {TS_SO_OLOWAT = 0x1,TS_ASYNC = 0x2,TS_BUSY = 0x4,TS_CARR_ON = 0x8,TS_FLUSH = 0x10,TS_ISOPEN = 0x20,TS_TBLOCK = 0x40,TS_TIMEOUT = 0x80,TS_TTSTOP = 0x100,TS_XCLUDE = 0x400,TS_BKSL = 0x800,TS_CNTTB = 0x1000,TS_ERASE = 0x2000,TS_LNCH = 0x4000,TS_TYPEN = 0x8000,TS_LOCAL = 0xF800,TS_CAN_BYPASS_L_RINT = 0x10000,TS_CONNECTED = 0x20000,TS_SNOOP = 0x40000,TS_SO_OCOMPLETE = 0x80000,TS_ZOMBIE = 0x100000,TS_CAR_OFLOW = 0x200000,TS_IOCTL_NOT_OK = 0x1000000,};
enum MACRO_TV {TV_TRUE = 1,TV_FALSE = 2,};
enum MACRO_TZ {TZ_MAX_TIMES = 370,TZ_MAX_TYPES = 256,TZ_MAX_CHARS = 50,TZ_MAX_LEAPS = 50,};
enum MACRO_UF {UF_SETTABLE = 0xFFFF,UF_NODUMP = 0x1,UF_IMMUTABLE = 0x2,UF_APPEND = 0x4,UF_OPAQUE = 0x8,UF_COMPRESSED = 0x20,UF_TRACKED = 0x40,UF_HIDDEN = 0x8000,};
enum MACRO_UI {UI_INPUT_FLAG_ECHO = 0x1,UI_INPUT_FLAG_DEFAULT_PWD = 0x2,UI_INPUT_FLAG_USER_BASE = 0x10,UI_CTRL_PRINT_ERRORS = 0x1,UI_CTRL_IS_REDOABLE = 0x2,UI_F_GENERAL_ALLOCATE_BOOLEAN = 0x6C,UI_F_GENERAL_ALLOCATE_PROMPT = 0x6D,UI_F_GENERAL_ALLOCATE_STRING = 0x64,UI_F_UI_CTRL = 0x6F,UI_F_UI_DUP_ERROR_STRING = 0x65,UI_F_UI_DUP_INFO_STRING = 0x66,UI_F_UI_DUP_INPUT_BOOLEAN = 0x6E,UI_F_UI_DUP_INPUT_STRING = 0x67,UI_F_UI_DUP_VERIFY_STRING = 0x6A,UI_F_UI_GET0_RESULT = 0x6B,UI_F_UI_NEW_METHOD = 0x68,UI_F_UI_SET_RESULT = 0x69,UI_R_COMMON_OK_AND_CANCEL_CHARACTERS = 0x68,UI_R_INDEX_TOO_LARGE = 0x66,UI_R_INDEX_TOO_SMALL = 0x67,UI_R_NO_RESULT_BUFFER = 0x69,UI_R_RESULT_TOO_LARGE = 0x64,UI_R_RESULT_TOO_SMALL = 0x65,UI_R_UNKNOWN_CONTROL_COMMAND = 0x6A,};
enum MACRO_UL {UL_GETFSIZE = 1,UL_SETFSIZE = 2,};
enum MACRO_UT {UT_NAMESIZE = 8,UT_LINESIZE = 8,UT_HOSTSIZE = 16,};
enum MACRO_VA {VA_NORM = 0,VA_ANOM = 1,VA_SEQL = 2,VA_FLUSH = 3,};
enum MACRO_VF {VF_PCBOOT = 1,VF_HELP = 2,};
enum MACRO_VM {VM_MIN_ADDRESS64 = 0x0,VM_USRSTACK64 = 0x7FFF5FC00000,VM_DYLD64 = 0x7FFF5FC00000,VM_LIB64_SHR_DATA = 0x7FFF60000000,VM_LIB64_SHR_TEXT = 0x7FFF80000000,VM_MAX_PAGE_ADDRESS = 0x7FFFFFE00000,VM_MAX_USER_PAGE_ADDRESS = 0x7FFFFFFFF000,};
enum MACRO_VN {VN_LABELS = 0x1,VN_FOLLOW = 0x2,VN_DEBUG = 0x4,VN_IO = 0x8,VN_DONTCLUSTER = 0x10,VN_RESERVE = 0x20,};
enum MACRO_VQ {VQ_NOTRESP = 0x1,VQ_NEEDAUTH = 0x2,VQ_LOWDISK = 0x4,VQ_MOUNT = 0x8,VQ_UNMOUNT = 0x10,VQ_DEAD = 0x20,VQ_ASSIST = 0x40,VQ_NOTRESPLOCK = 0x80,VQ_UPDATE = 0x100,VQ_VERYLOWDISK = 0x200,VQ_SYNCEVENT = 0x400,VQ_FLAG0800 = 0x800,VQ_FLAG1000 = 0x1000,VQ_FLAG2000 = 0x2000,VQ_FLAG4000 = 0x4000,VQ_FLAG8000 = 0x8000,};
enum MACRO_WQ {WQ_EXCEEDED_CONSTRAINED_THREAD_LIMIT = 0x1,WQ_EXCEEDED_TOTAL_THREAD_LIMIT = 0x2,};
enum MACRO_XB {XB_CLEANUP = 0x1,};
enum MACRO_XN {XN_FLAG_SEP_MASK = 0xF0000,XN_FLAG_COMPAT = 0x0,XN_FLAG_SEP_COMMA_PLUS = 0x10000,XN_FLAG_SEP_CPLUS_SPC = 0x20000,XN_FLAG_SEP_SPLUS_SPC = 0x30000,XN_FLAG_SEP_MULTILINE = 0x40000,XN_FLAG_DN_REV = 0x100000,XN_FLAG_FN_MASK = 0x600000,XN_FLAG_FN_SN = 0x0,XN_FLAG_FN_LN = 0x200000,XN_FLAG_FN_OID = 0x400000,XN_FLAG_FN_NONE = 0x600000,XN_FLAG_SPC_EQ = 0x800000,XN_FLAG_DUMP_UNKNOWN_FIELDS = 0x1000000,XN_FLAG_FN_ALIGN = 0x2000000,XN_FLAG_RFC2253 = 0x1110317,XN_FLAG_ONELINE = 0x82031F,XN_FLAG_MULTILINE = 0x2A40006,};
enum MACRO_ub {ub_name = 32768,ub_common_name = 64,ub_locality_name = 128,ub_state_name = 128,ub_organization_name = 64,ub_organization_unit_name = 64,ub_title = 64,ub_email_address = 128,};
typedef struct mdc2_ctx_st MDC2_CTX;
typedef struct _184DAAE67CCF1C5185605B7156C28AF9 MDstruct;
typedef struct __NSModule *NSModule;
typedef struct __NSSymbol *NSSymbol;
typedef struct obj_name_st OBJ_NAME;
struct OSObject;
typedef struct PBEPARAM_st PBEPARAM;
typedef struct pem_recip_st PEM_USER;
typedef double SQLFLOAT;
typedef signed char SQLSCHAR;
typedef struct ssl_comp_st SSL_COMP;
typedef struct slapi_dn Slapi_DN;
typedef struct term TERMINAL;
typedef struct termtype TERMTYPE;
typedef struct _TidyAttr *TidyAttr;
typedef void (*TidyFree)(void *buf);
typedef struct _TidyNode *TidyNode;
typedef struct X509_crl_st X509_CRL;
typedef struct X509_req_st X509_REQ;
typedef struct X509_sig_st X509_SIG;
typedef struct X509_val_st X509_VAL;
struct _TidyDoc {int _opaque;};
struct __ifaddr;
typedef signed char __int8_t;
struct __pkthdr;
struct __sFILEX;
struct __socket;
struct _filesec;
struct _krb5_kt;
struct _telldir;
struct _xlocale;
struct _xmlDict;
struct _xmlLink;
struct _xmlList;
typedef struct _6473C35DBCE3A3EC7FFE17F82535E510 au_arb_t;
typedef struct _44347996413661E1D088B7486211F639 au_ipc_t;
struct au_qctrl {int aq_hiwater;int aq_lowater;int aq_bufsz;int aq_delay;int aq_minfree;};
typedef struct _4191ABD3C20A2790C5D1CD3296E7F1ED au_seq_t;
typedef struct au_tid au_tid_t;
struct au_token;
typedef unsigned char bitstr_t;
typedef double double_t;
struct editline;
struct eventreq {int er_type;int er_handle;void *er_data;int er_rcnt;int er_wcnt;int er_ecnt;int er_eventbits;};
typedef signed long long ffi_sarg;
typedef struct _ffi_type ffi_type;
struct fileglob;
typedef struct fp_env fp_env_t;
typedef struct fp_tag fp_tag_t;
enum fsh_mode {fsm_DN = 0x0,fsm_DR = 0x1,fsm_DW = 0x2,fsm_DRW = 0x3,};
typedef struct fstore fstore_t;
struct historyW;
typedef struct __ifaddr *ifaddr_t;
struct ifdevmtu {int ifdm_current;int ifdm_min;int ifdm_max;};
struct ifmaddrs {struct ifmaddrs *ifma_next;struct sockaddr *ifma_name;struct sockaddr *ifma_addr;struct sockaddr *ifma_lladdr;};
typedef long long intmax_t;
typedef unsigned short io_len_t;
enum ipp_op_e {IPP_PRINT_JOB = 0x2,IPP_PRINT_URI = 0x3,IPP_VALIDATE_JOB = 0x4,IPP_CREATE_JOB = 0x5,IPP_SEND_DOCUMENT = 0x6,IPP_SEND_URI = 0x7,IPP_CANCEL_JOB = 0x8,IPP_GET_JOB_ATTRIBUTES = 0x9,IPP_GET_JOBS = 0xA,IPP_GET_PRINTER_ATTRIBUTES = 0xB,IPP_HOLD_JOB = 0xC,IPP_RELEASE_JOB = 0xD,IPP_RESTART_JOB = 0xE,IPP_PAUSE_PRINTER = 0x10,IPP_RESUME_PRINTER = 0x11,IPP_PURGE_JOBS = 0x12,IPP_SET_PRINTER_ATTRIBUTES = 0x13,IPP_SET_JOB_ATTRIBUTES = 0x14,IPP_GET_PRINTER_SUPPORTED_VALUES = 0x15,IPP_CREATE_PRINTER_SUBSCRIPTION = 0x16,IPP_CREATE_JOB_SUBSCRIPTION = 0x17,IPP_GET_SUBSCRIPTION_ATTRIBUTES = 0x18,IPP_GET_SUBSCRIPTIONS = 0x19,IPP_RENEW_SUBSCRIPTION = 0x1A,IPP_CANCEL_SUBSCRIPTION = 0x1B,IPP_GET_NOTIFICATIONS = 0x1C,IPP_SEND_NOTIFICATIONS = 0x1D,IPP_GET_PRINT_SUPPORT_FILES = 0x21,IPP_ENABLE_PRINTER = 0x22,IPP_DISABLE_PRINTER = 0x23,IPP_PAUSE_PRINTER_AFTER_CURRENT_JOB = 0x24,IPP_HOLD_NEW_JOBS = 0x25,IPP_RELEASE_HELD_NEW_JOBS = 0x26,IPP_DEACTIVATE_PRINTER = 0x27,IPP_ACTIVATE_PRINTER = 0x28,IPP_RESTART_PRINTER = 0x29,IPP_SHUTDOWN_PRINTER = 0x2A,IPP_STARTUP_PRINTER = 0x2B,IPP_REPROCESS_JOB = 0x2C,IPP_CANCEL_CURRENT_JOB = 0x2D,IPP_SUSPEND_CURRENT_JOB = 0x2E,IPP_RESUME_JOB = 0x2F,IPP_PROMOTE_JOB = 0x30,IPP_SCHEDULE_JOB_AFTER = 0x31,IPP_CANCEL_DOCUMENT = 0x33,IPP_GET_DOCUMENT_ATTRIBUTES = 0x34,IPP_GET_DOCUMENTS = 0x35,IPP_DELETE_DOCUMENT = 0x36,IPP_SET_DOCUMENT_ATTRIBUTES = 0x37,IPP_CANCEL_JOBS = 0x38,IPP_CANCEL_MY_JOBS = 0x39,IPP_RESUBMIT_JOB = 0x3A,IPP_CLOSE_JOB = 0x3B,IPP_PRIVATE = 0x4000,CUPS_GET_DEFAULT = 0x4001,CUPS_GET_PRINTERS = 0x4002,CUPS_ADD_MODIFY_PRINTER = 0x4003,CUPS_DELETE_PRINTER = 0x4004,CUPS_GET_CLASSES = 0x4005,CUPS_ADD_MODIFY_CLASS = 0x4006,CUPS_DELETE_CLASS = 0x4007,CUPS_ACCEPT_JOBS = 0x4008,CUPS_REJECT_JOBS = 0x4009,CUPS_SET_DEFAULT = 0x400A,CUPS_GET_DEVICES = 0x400B,CUPS_GET_PPDS = 0x400C,CUPS_MOVE_JOB = 0x400D,CUPS_AUTHENTICATE_JOB = 0x400E,CUPS_GET_PPD = 0x400F,CUPS_GET_DOCUMENT = 0x4027,};
struct ldt_desc {unsigned short limit00;unsigned short base00;unsigned char base16;unsigned char type : 5;unsigned char : 2;unsigned char present : 1;unsigned char limit16 : 4;unsigned char : 3;unsigned char granular : 1;unsigned char base24;};
struct lineinfo { char *buffer; char *cursor; char *lastchar;};
typedef struct _xlocale *locale_t;
struct locklist {struct lockf *tqh_first;struct lockf **tqh_last;};
typedef void *marker_t;
enum msg_type {CALL = 0x0,REPLY = 0x1,};
typedef unsigned long long msglen_t;
struct nfsstats {int attrcache_hits;int attrcache_misses;int lookupcache_hits;int lookupcache_misses;int direofcache_hits;int direofcache_misses;int biocache_reads;int read_bios;int read_physios;int biocache_writes;int write_bios;int write_physios;int biocache_readlinks;int readlink_bios;int biocache_readdirs;int readdir_bios;int rpccnt[23];int rpcretries;int srvrpccnt[23];int srvrpc_errs;int srv_errs;int rpcrequests;int rpctimeouts;int rpcunexpected;int rpcinvalid;int srvcache_inproghits;int srvcache_idemdonehits;int srvcache_nonidemdonehits;int srvcache_misses;int srvvop_writes;int pageins;int pageouts;};
typedef struct _CCB3EA4D4E2EB1F9AAB4C1A3C0D4C77E np_uid_t;
typedef int (*out_func)(void *, unsigned char *, unsigned int);
struct pam_conv {int (*conv)(int,  struct pam_message **, struct pam_response **, void *);void *appdata_ptr;};
typedef char *peername;
typedef struct __pkthdr *pkthdr_t;
typedef int policy_t;
enum ppd_cs_e {PPD_CS_CMYK = 0xFFFFFFFC,PPD_CS_CMY = 0xFFFFFFFD,PPD_CS_GRAY = 0x1,PPD_CS_RGB = 0x3,PPD_CS_RGBK = 0x4,PPD_CS_N = 0x5,};
enum ppd_ui_e {PPD_UI_BOOLEAN = 0x0,PPD_UI_PICKONE = 0x1,PPD_UI_PICKMANY = 0x2,};
struct protoent {char *p_name;char **p_aliases;int p_proto;};
struct pseminfo;
struct pshminfo;
typedef struct rawarc_64 rawarc_t;
struct route_cb {int ip_count;int ip6_count;int ipx_count;int ns_count;int iso_count;int any_count;};
typedef unsigned int rpc_uint;
typedef unsigned short shmatt_t;
struct sigstack {char *ss_sp;int ss_onstack;};
struct slapi_dn;
typedef struct __socket *socket_t;
struct sockutil;
struct speedtab {int sp_speed;int sp_code;};
typedef struct _C9793B2A88A40550F3E6FCBE57C78800 sprayarr;
struct stack_st {int num;char **data;int sorted;int num_alloc;int (*comp)( char * *,  char * *);};
struct store_st;
typedef unsigned long long tcflag_t;
struct termtype {char *term_names;char *str_table;char *Booleans;short *Numbers;char **Strings;char *ext_str_table;char **ext_Names;unsigned short num_Booleans;unsigned short num_Numbers;unsigned short num_Strings;unsigned short ext_Booleans;unsigned short ext_Numbers;unsigned short ext_Strings;};
struct timezone {int tz_minuteswest;int tz_dsttime;};
struct tss_desc {unsigned short limit00;unsigned short base00;unsigned char base16;unsigned char type : 5;unsigned char dpl : 2;unsigned char present : 1;unsigned char limit16 : 4;unsigned char : 3;unsigned char granular : 1;unsigned char base24;};
struct ttychars {char tc_erase;char tc_kill;char tc_intrc;char tc_quitc;char tc_startc;char tc_stopc;char tc_eofc;char tc_brkc;char tc_suspc;char tc_dsuspc;char tc_rprntc;char tc_flushc;char tc_werasc;char tc_lnextc;};
typedef unsigned char u_int8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
struct vfstable;
enum vtagtype {VT_NON = 0x0,VT_UFS = 0x1,VT_NFS = 0x2,VT_MFS = 0x3,VT_MSDOSFS = 0x4,VT_LFS = 0x5,VT_LOFS = 0x6,VT_FDESC = 0x7,VT_PORTAL = 0x8,VT_NULL = 0x9,VT_UMAP = 0xA,VT_KERNFS = 0xB,VT_PROCFS = 0xC,VT_AFS = 0xD,VT_ISOFS = 0xE,VT_UNION = 0xF,VT_HFS = 0x10,VT_ZFS = 0x11,VT_DEVFS = 0x12,VT_WEBDAV = 0x13,VT_UDF = 0x14,VT_AFP = 0x15,VT_CDDA = 0x16,VT_CIFS = 0x17,VT_OTHER = 0x18,};
struct x_passwd {char *pw_name;char *pw_passwd;int pw_uid;int pw_gid;char *pw_gecos;char *pw_dir;char *pw_shell;};
typedef struct _xmlError xmlError;
typedef struct _xmlMutex xmlMutex;
typedef int xp_error;
typedef struct z_stream_s z_stream;
typedef struct aes_key_st AES_KEY;
typedef struct buf_mem_st BUF_MEM;
typedef unsigned char Boolean;
typedef struct _62C3C6215D74515CD10ADACC096E4B0E CTL_MSG;
typedef struct DSA_SIG_st DSA_SIG;
typedef struct dl_info Dl_info;
typedef struct st_ERR_FNS ERR_FNS;
typedef struct history History;
typedef struct ldap_ava LDAPAVA;
typedef struct ldapmod LDAPMod;
typedef double LDOUBLE;
enum MACRO_A {A_OLDGETPOLICY = 2,A_OLDSETPOLICY = 3,A_GETKMASK = 4,A_SETKMASK = 5,A_OLDGETQCTRL = 6,A_OLDSETQCTRL = 7,A_GETCWD = 8,A_GETCAR = 9,A_GETSTAT = 12,A_SETSTAT = 13,A_SETUMASK = 14,A_SETSMASK = 15,A_OLDGETCOND = 20,A_OLDSETCOND = 21,A_GETCLASS = 22,A_SETCLASS = 23,A_GETPINFO = 24,A_SETPMASK = 25,A_SETFSIZE = 26,A_GETFSIZE = 27,A_GETPINFO_ADDR = 28,A_GETKAUDIT = 29,A_SETKAUDIT = 30,A_SENDTRIGGER = 31,A_GETSINFO_ADDR = 32,A_GETPOLICY = 33,A_SETPOLICY = 34,A_GETQCTRL = 35,A_SETQCTRL = 36,A_GETCOND = 37,A_SETCOND = 38,A_GETSFLAGS = 39,A_SETSFLAGS = 40,};
enum MACRO_B {B_WRITE = 0x0,B_READ = 0x1,B_ASYNC = 0x2,B_NOCACHE = 0x4,B_DELWRI = 0x8,B_LOCKED = 0x10,B_PHYS = 0x20,B_CLUSTER = 0x40,B_PAGEIO = 0x80,B_META = 0x100,B_RAW = 0x200,B_FUA = 0x400,B_PASSIVE = 0x800,B_IOSTREAMING = 0x1000,B_THROTTLED_IO = 0x2000,B_ENCRYPTED_IO = 0x4000,};
enum MACRO_C {C_ISSOCK = 0xC000,C_ISLNK = 0xA000,C_ISCTG = 0x9000,C_ISREG = 0x8000,C_ISBLK = 0x6000,C_ISDIR = 0x4000,C_ISCHR = 0x2000,C_ISFIFO = 0x1000,C_ISUID = 0x800,C_ISGID = 0x400,C_ISVTX = 0x200,C_IRUSR = 0x100,C_IWUSR = 0x80,C_IXUSR = 0x40,C_IRGRP = 0x20,C_IWGRP = 0x10,C_IXGRP = 0x8,C_IROTH = 0x4,C_IWOTH = 0x2,C_IXOTH = 0x1,};
enum MACRO_D {D_TAPE = 1,D_DISK = 2,D_TTY = 3,};
enum MACRO_E {E_OK = 0,E_SYSTEM_ERROR = -1,E_BAD_ARGUMENT = -2,E_POSTED = -3,E_CONNECTED = -4,E_BAD_STATE = -5,E_NO_ROOM = -6,E_NOT_POSTED = -7,E_UNKNOWN_COMMAND = -8,E_NO_MATCH = -9,E_NOT_SELECTABLE = -10,E_NOT_CONNECTED = -11,E_REQUEST_DENIED = -12,E_INVALID_FIELD = -13,E_CURRENT = -14,};
enum MACRO_F {F_ULOCK = 0,F_LOCK = 1,F_TLOCK = 2,F_TEST = 3,};
enum MACRO_H {H_FUNC = 0,H_SETSIZE = 1,H_GETSIZE = 2,H_FIRST = 3,H_LAST = 4,H_PREV = 5,H_NEXT = 6,H_CURR = 8,H_SET = 7,H_ADD = 9,H_ENTER = 10,H_APPEND = 11,H_END = 12,H_NEXT_STR = 13,H_PREV_STR = 14,H_NEXT_EVENT = 15,H_PREV_EVENT = 16,H_LOAD = 17,H_SAVE = 18,H_CLEAR = 19,H_SETUNIQUE = 20,H_GETUNIQUE = 21,H_DEL = 22,H_NEXT_EVDATA = 23,H_DELDATA = 24,H_REPLACE = 25,};
enum MACRO_L {L_tmpnam = 1024,};
enum MACRO_N {N_GSYM = 0x20,N_FNAME = 0x22,N_FUN = 0x24,N_STSYM = 0x26,N_LCSYM = 0x28,N_MAIN = 0x2A,N_PC = 0x30,N_RSYM = 0x40,N_SLINE = 0x44,N_DSLINE = 0x46,N_BSLINE = 0x48,N_SSYM = 0x60,N_SO = 0x64,N_LSYM = 0x80,N_BINCL = 0x82,N_SOL = 0x84,N_PSYM = 0xA0,N_EINCL = 0xA2,N_ENTRY = 0xA4,N_LBRAC = 0xC0,N_EXCL = 0xC2,N_RBRAC = 0xE0,N_BCOMM = 0xE2,N_ECOMM = 0xE4,N_ECOML = 0xE8,N_LENG = 0xFE,};
enum MACRO_O {O_SYNC = 0x80,O_DSYNC = 0x400000,};
enum MACRO_P {P_ADVLOCK = 0x1,P_CONTROLT = 0x2,P_LP64 = 0x4,P_NOCLDSTOP = 0x8,P_PPWAIT = 0x10,P_PROFIL = 0x20,P_SELECT = 0x40,P_CONTINUED = 0x80,P_SUGID = 0x100,P_SYSTEM = 0x200,P_TIMEOUT = 0x400,P_TRACED = 0x800,P_DISABLE_ASLR = 0x1000,P_WEXIT = 0x2000,P_EXEC = 0x4000,P_OWEUPC = 0x8000,P_AFFINITY = 0x10000,P_TRANSLATED = 0x20000,P_CLASSIC = 0x20000,P_RESV5 = 0x40000,P_CHECKOPENEVT = 0x80000,P_DEPENDENCY_CAPABLE = 0x100000,P_REBOOT = 0x200000,P_TBE = 0x400000,P_RESV7 = 0x800000,P_THCWD = 0x1000000,P_RESV9 = 0x2000000,P_RESV10 = 0x4000000,P_RESV11 = 0x8000000,P_NOSHLIB = 0x10000000,P_FORCEQUOTA = 0x20000000,P_NOCLDWAIT = 0x40000000,P_NOREMOTEHANG = 0x80000000,P_INMEM = 0x0,P_NOSWAP = 0x0,P_PHYSIO = 0x0,P_FSTRACE = 0x0,P_SSTEP = 0x0,};
enum MACRO_Q {Q_QUOTAON = 0x100,Q_QUOTAOFF = 0x200,Q_GETQUOTA = 0x300,Q_SETQUOTA = 0x400,Q_SETUSE = 0x500,Q_SYNC = 0x600,Q_QUOTASTAT = 0x700,};
enum MACRO_R {R_CURSOR = 1,};
enum MACRO_S {S_IFMT = 0xF000,S_IFIFO = 0x1000,S_IFCHR = 0x2000,S_IFDIR = 0x4000,S_IFBLK = 0x6000,S_IFREG = 0x8000,S_IFLNK = 0xA000,S_IFSOCK = 0xC000,S_IFWHT = 0xE000,S_IRWXU = 0x1C0,S_IRUSR = 0x100,S_IWUSR = 0x80,S_IXUSR = 0x40,S_IRWXG = 0x38,S_IRGRP = 0x20,S_IWGRP = 0x10,S_IXGRP = 0x8,S_IRWXO = 0x7,S_IROTH = 0x4,S_IWOTH = 0x2,S_IXOTH = 0x1,S_ISUID = 0x800,S_ISGID = 0x400,S_ISVTX = 0x200,S_ISTXT = 0x200,S_IREAD = 0x100,S_IWRITE = 0x80,S_IEXEC = 0x40,};
enum MACRO_T {T_FMT = 3,T_FMT_AMPM = 4,};
enum MACRO_V {V_CRYPTO_MDEBUG_TIME = 0x1,V_CRYPTO_MDEBUG_THREAD = 0x2,V_CRYPTO_MDEBUG_ALL = 0x3,};
enum MACRO_Z {Z_NO_FLUSH = 0,Z_PARTIAL_FLUSH = 1,Z_SYNC_FLUSH = 2,Z_FULL_FLUSH = 3,Z_FINISH = 4,Z_BLOCK = 5,Z_TREES = 6,Z_OK = 0,Z_STREAM_END = 1,Z_NEED_DICT = 2,Z_ERRNO = -1,Z_STREAM_ERROR = -2,Z_DATA_ERROR = -3,Z_MEM_ERROR = -4,Z_BUF_ERROR = -5,Z_VERSION_ERROR = -6,Z_NO_COMPRESSION = 0,Z_BEST_SPEED = 1,Z_BEST_COMPRESSION = 9,Z_DEFAULT_COMPRESSION = -1,Z_FILTERED = 1,Z_HUFFMAN_ONLY = 2,Z_RLE = 3,Z_FIXED = 4,Z_DEFAULT_STRATEGY = 0,Z_BINARY = 0,Z_TEXT = 1,Z_ASCII = 1,Z_UNKNOWN = 2,Z_DEFLATED = 8,Z_NULL = 0,};
typedef struct MD2state_st MD2_CTX;
typedef struct MD4state_st MD4_CTX;
typedef struct _1A9F4F084CD7F87A2A45367D7A315C43 MD5_CTX;
typedef struct pem_ctx_st PEM_CTX;
typedef unsigned char *POINTER;
typedef struct rc2_key_st RC2_KEY;
typedef struct rc4_key_st RC4_KEY;
typedef signed short RETCODE;
typedef double SDOUBLE;
typedef struct SHAstate_st SHA_CTX;
typedef unsigned char SQLCHAR;
typedef unsigned char SQLDATE;
typedef struct tagSQLGUID SQLGUID;
typedef float SQLREAL;
typedef unsigned char SQLTIME;
typedef struct ssl_ctx_st SSL_CTX;
typedef struct _6825248A56C99A2E2B32FCEC421A9DAF SVCXPRT;
typedef struct SXNET_ID_st SXNETID;
typedef struct sockbuf Sockbuf;
typedef struct _TidyDoc *TidyDoc;
struct __ifnet;
struct _http_s;
struct _win_st;
struct _xmlURI {char *scheme;char *opaque;char *authority;char *server;char *user;int port;char *path;char *query;char *fragment;int cleanup;char *query_raw;};
typedef struct _7E94C3F61C7C39FF74FA3EBDC1E527FF au_ip_t;
struct au_mask {unsigned int am_success;unsigned int am_failure;};
struct cache_s;
typedef struct cache_s cache_t;
typedef char *caddr_t;
struct ctlname {char *ctl_name;int ctl_type;};
typedef struct _B0A4D3FCA1AE58C86963BEC154F83A57 debug_t;
struct devnode;
typedef char *dirpath;
struct dl_info { char *dli_fname;void *dli_fbase; char *dli_sname;void *dli_saddr;};
typedef int errno_t;
typedef struct exportnode *exports;
enum ffi_abi {FFI_FIRST_ABI = 0x0,FFI_SYSV = 0x1,FFI_UNIX64 = 0x2,FFI_DEFAULT_ABI = 0x2,FFI_LAST_ABI = 0x3,};
typedef unsigned long long ffi_arg;
typedef union _F2859707886ADAFD301FD24E7C665704 ffi_raw;
struct fhandle {int fh_len;unsigned char fh_data[128];};
typedef float float_t;
typedef struct gss_OID_desc_struct *gss_OID;
struct history;
struct hostent {char *h_name;char **h_aliases;int h_addrtype;int h_length;char **h_addr_list;};
typedef void *iconv_t;
struct ifaddrs {struct ifaddrs *ifa_next;char *ifa_name;unsigned int ifa_flags;struct sockaddr *ifa_addr;struct sockaddr *ifa_netmask;struct sockaddr *ifa_dstaddr;void *ifa_data;};
typedef struct __ifnet *ifnet_t;
struct ifqueue {void *ifq_head;void *ifq_tail;int ifq_len;int ifq_maxlen;int ifq_drops;};
typedef unsigned int (*in_func)(void *, unsigned char **);
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
typedef int jmp_buf[37];
struct ldapmsg;
typedef struct _AC1F0727205AA235F31FA7E4FBAB6931 lldiv_t;
struct ltchars {char t_suspc;char t_dsuspc;char t_rprntc;char t_flushc;char t_werasc;char t_lnextc;};
typedef char *mapname;
struct mecab_t;
typedef unsigned long long mmask_t;
typedef struct mount *mount_t;
struct msginfo {int msgmax;int msgmni;int msgmnb;int msgtql;int msgssz;int msgseg;};
typedef struct __nl_cat_d *nl_catd;
typedef struct _C2E0EF1D854A0208E5318AF4389F85C9 ntsid_t;
typedef struct _A4B2B056AC02B7A91138DA853BA9D10A param_t;
struct propctx;
struct propval { char *name; char **values;unsigned int nvalues;unsigned int valsize;};
struct protosw;
typedef struct _FA547AB27F70B847C07B2381F2BB5B39 regex_t;
typedef struct __rtentry *route_t;
typedef int rpc_int;
typedef union semun semun_t;
struct servent {char *s_name;char **s_aliases;int s_port;char *s_proto;};
struct session;
struct sf_hdtr {struct iovec *headers;int hdr_cnt;struct iovec *trailers;int trl_cnt;};
struct sm_name {char *mon_name;};
struct sm_stat {int state;};
struct sockbuf;
typedef unsigned long long speed_t;
struct sqlite3;
typedef struct __darwin_sigaltstack stack_t;
typedef char tmbchar;
typedef struct au_token token_t;
struct ttysize {unsigned short ts_lines;unsigned short ts_cols;unsigned short ts_xxx;unsigned short ts_yyy;};
typedef unsigned int u_int32;
typedef unsigned short u_short;
typedef unsigned char uint8_t;
struct utmparr {struct utmp **uta_arr;int uta_cnt;};
struct utsname {char sysname[256];char nodename[256];char release[256];char version[256];char machine[256];};
struct vmmeter {unsigned int v_swtch;unsigned int v_trap;unsigned int v_syscall;unsigned int v_intr;unsigned int v_soft;unsigned int v_faults;unsigned int v_lookups;unsigned int v_hits;unsigned int v_vm_faults;unsigned int v_cow_faults;unsigned int v_swpin;unsigned int v_swpout;unsigned int v_pswpin;unsigned int v_pswpout;unsigned int v_pageins;unsigned int v_pageouts;unsigned int v_pgpgin;unsigned int v_pgpgout;unsigned int v_intrans;unsigned int v_reactivated;unsigned int v_rev;unsigned int v_scan;unsigned int v_dfree;unsigned int v_pfree;unsigned int v_zfod;unsigned int v_nzfod;unsigned int v_page_size;unsigned int v_kernel_pages;unsigned int v_free_target;unsigned int v_free_min;unsigned int v_free_count;unsigned int v_wire_count;unsigned int v_active_count;unsigned int v_inactive_target;unsigned int v_inactive_count;};
typedef struct vnode *vnode_t;
struct winsize {unsigned short ws_row;unsigned short ws_col;unsigned short ws_xpixel;unsigned short ws_ypixel;};
typedef struct _xmlAttr xmlAttr;
typedef unsigned char xmlChar;
typedef struct _xmlDict xmlDict;
typedef struct _xmlLink xmlLink;
typedef struct _xmlList xmlList;
typedef struct _xmlNode xmlNode;
typedef int xp_bool;
typedef struct bf_key_st BF_KEY;
typedef struct bignum_st BIGNUM;
typedef struct bignum_ctx BN_CTX;
typedef void BZFILE;
typedef void CURLSH;
typedef struct ec_key_st EC_KEY;
typedef struct engine_st ENGINE;
typedef struct env_md_st EVP_MD;
typedef struct _ftsent FTSENT;
typedef struct _1FC9C4745BFE4A4C45A6D008A791D581 HEADER;
typedef  char *LPCSTR;
typedef struct _AF39247D48CF164753A445931539035C MEVENT;
typedef struct _30B637321B49B494EE6ED11BDEC8DE9E PKCS12;
typedef struct screen SCREEN;
typedef long long SDWORD;
typedef float SFLOAT;
typedef signed short SInt16;
typedef signed int SInt32;
typedef signed long long SInt64;
typedef signed short SSHORT;
typedef struct txt_db_st TXT_DB;
typedef unsigned long long UDWORD;
typedef unsigned short UInt16;
typedef unsigned int UInt32;
typedef unsigned long long UInt64;
typedef unsigned short USHORT;
typedef struct _win_st WINDOW;
struct __mbuf;
struct __sbuf {unsigned char *_base;int _size;};
struct _pitem {unsigned long long priority;void *data;struct _pitem *next;};
struct ar_hdr {char ar_name[16];char ar_date[12];char ar_uid[6];char ar_gid[6];char ar_mode[8];char ar_size[10];char ar_fmag[2];};
typedef struct __aslmsg *aslmsg;
typedef unsigned int chtype;
typedef struct _A76923D44FC3AA9C7AC0A016BD3320E6 fenv_t;
typedef struct file *file_t;
struct fp_tag {unsigned short tag0 : 2;unsigned short tag1 : 2;unsigned short tag2 : 2;unsigned short tag3 : 2;unsigned short tag4 : 2;unsigned short tag5 : 2;unsigned short tag6 : 2;unsigned short tag7 : 2;};
typedef struct fsid fsid_t;
typedef struct _2852C95088D0304BB11C1621105E366D glob_t;
typedef struct groupnode *groups;
typedef struct _9196AF323BDCF3C1DC54CF7CF3A0084E guid_t;
typedef struct _http_s http_t;
struct ifstat {char ifs_name[16];char ascii[801];};
typedef signed char int8_t;
typedef struct _5EDD4B4F882E321F07D8AFF023DDDD7D keydat;
typedef int kmod_t;
typedef struct _AC1F0727205AA235F31FA7E4FBAB6931 ldiv_t;
struct linger {int l_onoff;int l_linger;};
typedef struct __mbuf *mbuf_t;
typedef struct _mime_s mime_t;
struct module {char *name;char *file;struct module_import *imports;int no_imports;int modid;struct module *next;};
struct msgbuf {int msg_magic;int msg_size;int msg_bufx;int msg_bufr;char *msg_bufc;};
typedef char name_t[128];
struct netobj {unsigned int n_len;char *n_bytes;};
typedef unsigned int nfds_t;
struct option { char *name;int has_arg;int *flag;int val;};
typedef struct pcap pcap_t;
struct pollfd {int fd;short events;short revents;};
typedef struct _pqueue *pqueue;
typedef struct proc *proc_t;
struct rpcent {char *r_name;char **r_aliases;int r_number;};
struct rtstat {short rts_badredirect;short rts_dynamic;short rts_newgateway;short rts_unreach;short rts_wildcard;};
struct screen;
struct sembuf {unsigned short sem_num;short sem_op;short sem_flg;};
struct sgttyb {char sg_ispeed;char sg_ospeed;char sg_erase;char sg_kill;short sg_flags;};
union sigval {int sival_int;void *sival_ptr;};
struct sigvec {void (*sv_handler)(int);int sv_mask;int sv_flags;};
enum sm_res {stat_succ = 0x0,stat_fail = 0x1,};
struct sockif;
typedef struct _615D5DC9703294F0ED919D7F4D86FFE9 stat_t;
struct tchars {char t_intrc;char t_quitc;char t_startc;char t_stopc;char t_eofc;char t_brkc;};
struct thread;
struct ttyent {char *ty_name;char *ty_getty;char *ty_type;int ty_status;char *ty_window;char *ty_onerror;char *ty_onoption;char *ty_comment;};
struct tzhead {char tzh_magic[4];char tzh_reserved[16];char tzh_ttisgmtcnt[4];char tzh_ttisstdcnt[4];char tzh_leapcnt[4];char tzh_timecnt[4];char tzh_typecnt[4];char tzh_charcnt[4];};
typedef unsigned char u_char;
typedef unsigned long long u_long;
enum uio_rw {UIO_READ = 0x0,UIO_WRITE = 0x1,};
typedef unsigned short ushort;
typedef struct _0D364CBB4DE5622667695AC90920144B valdat;
typedef  void *voidpc;
typedef void *voidpf;
enum xdr_op {XDR_ENCODE = 0x0,XDR_DECODE = 0x1,XDR_FREE = 0x2,};
typedef struct _xmlDoc xmlDoc;
typedef struct _xmlDtd xmlDtd;
typedef struct _xmlRef xmlRef;
typedef struct _xmlURI xmlURI;
typedef struct xp_box_struct xp_box;
enum ypstat {YP_TRUE = 0x1,YP_NOMORE = 0x2,YP_FALSE = 0x0,YP_NOMAP = 0xFFFFFFFF,YP_NODOM = 0xFFFFFFFE,YP_NOKEY = 0xFFFFFFFD,YP_BADOP = 0xFFFFFFFC,YP_BADDB = 0xFFFFFFFB,YP_YPERR = 0xFFFFFFFA,YP_BADARGS = 0xFFFFFFF9,YP_VERS = 0xFFFFFFF8,};
typedef void CURLM;
typedef unsigned int DWORD;
struct ENTRY {char *key;void *data;};
typedef struct fieldnode FIELD;
typedef void *HSTMT;
typedef struct lhash_st LHASH;
typedef char *LPSTR;
typedef struct _184DAAE67CCF1C5185605B7156C28AF9 *MDptr;
typedef struct ms_tm MS_TM;
typedef struct panel PANEL;
typedef struct pkcs7_st PKCS7;
typedef signed char SCHAR;
typedef signed char SInt8;
typedef signed long long SLONG;
typedef struct stack_st STACK;
typedef struct store_st STORE;
typedef short SWORD;
typedef struct SXNET_st SXNET;
typedef unsigned char UCHAR;
typedef unsigned char UINT1;
typedef unsigned short UINT2;
typedef unsigned int UINT4;
typedef unsigned char UInt8;
typedef unsigned long long ULONG;
typedef unsigned short UWORD;
typedef struct _648B167E5FE8430EFE8E72D1CD79C82D _PAGE;
struct _node {char *key;void *data;struct _node *next;};
typedef struct _acl *acl_t;
struct alias { char *from; char *to; char *source;};
struct bpf_d;
typedef struct buf *buf_t;
typedef char charf;
struct clist;
typedef char cmd_t[512];
typedef struct _cr0 cr0_t;
typedef struct _81AF895D5A7FC7AA97C511D95D41010E datum;
typedef struct _979FA3DE6ECCF956231BFC297C4278E6 div_t;
typedef struct _dr6 dr6_t;
struct fstab {char *fs_spec;char *fs_file;char *fs_vfstype;char *fs_mntops;char *fs_type;int fs_freq;int fs_passno;};
struct ifnet;
typedef struct ipp_s ipp_t;
struct klist {struct knote *slh_first;};
struct knote;
struct label;
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;char int_p_cs_precedes;char int_n_cs_precedes;char int_p_sep_by_space;char int_n_sep_by_space;char int_p_sign_posn;char int_n_sign_posn;};
typedef struct mac *mac_t;
struct mount;
struct ms_tm;
struct mutex;
struct my_id {char *my_name;int my_prog;int my_vers;int my_proc;};
struct mymsg {long long mtype;char mtext[1];};
struct outmp {char out_line[8];char out_name[8];int out_time;};
typedef struct _pitem pitem;
struct qelem {struct qelem *q_forw;struct qelem *q_back;char *q_data;};
struct route;
typedef struct ru_utmp rutmp;
typedef struct sel sel_t;
typedef int sem_t;
union semun {int val;struct __semid_ds_new *buf;unsigned short *array;};
typedef void (*sig_t)(int);
struct token {char *tk_name;int tk_valnumber;char *tk_valstring;};
typedef struct session *tpr_t;
typedef struct tss tss_t;
typedef unsigned long long uLong;
typedef unsigned int u_int;
struct ui_st;
typedef struct uio *uio_t;
typedef unsigned long long ulong;
struct vnode;
typedef void *voidp;
enum vtype {VNON = 0x0,VREG = 0x1,VDIR = 0x2,VBLK = 0x3,VCHR = 0x4,VLNK = 0x5,VSOCK = 0x6,VFIFO = 0x7,VBAD = 0x8,VSTR = 0x9,VCPLX = 0xA,};
typedef struct _xmlID xmlID;
typedef struct _xmlNs xmlNs;
typedef struct _05EECDE53F008AE0E4F8A84193F3FFF1 AUTH;
typedef int BOOL;
typedef unsigned char Byte;
typedef struct conf_st CONF;
typedef void CURL;
typedef struct __sFILE FILE;
typedef struct formnode FORM;
typedef void *HDBC;
typedef void *HENV;
typedef signed char INT1;
typedef short INT2;
typedef int INT4;
typedef struct tagITEM ITEM;
typedef struct ldap LDAP;
typedef struct tagMENU MENU;
typedef signed int SInt;
typedef struct _0C41D669CC7829CF12B135747142967F TEXT;
typedef unsigned int UInt;
typedef unsigned short WORD;
typedef struct x509_st X509;
struct _acl;
struct _cr0 {unsigned int pe : 1;unsigned int mp : 1;unsigned int em : 1;unsigned int ts : 1;unsigned int : 1;unsigned int ne : 1;unsigned int : 10;unsigned int wp : 1;unsigned int : 1;unsigned int am : 1;unsigned int : 10;unsigned int nw : 1;unsigned int cd : 1;unsigned int pg : 1;};
struct _dr6 {unsigned int b0 : 1;unsigned int b1 : 1;unsigned int b2 : 1;unsigned int b3 : 1;unsigned int : 9;unsigned int bd : 1;unsigned int bs : 1;unsigned int bt : 1;unsigned int : 16;};
typedef unsigned char byte;
typedef unsigned char cc_t;
typedef struct eventreq *er_t;
struct file;
typedef int intf;
struct lctx;
struct ldap;
struct mbuf;
typedef char *name;
struct pcap;
struct pgrp;
struct pipe;
struct pmap {unsigned int pm_prog;unsigned int pm_vers;unsigned int pm_prot;unsigned int pm_port;};
struct proc;
struct sbuf;
struct task;
typedef unsigned int uInt;
typedef unsigned int uint;
struct user {};
struct utmp {char ut_line[8];char ut_name[8];char ut_host[16];long long ut_time;};
typedef struct bio_st BIO;
typedef struct _bkt BKT;
typedef struct _524B7AA813964FB1B08025913F65D34C DBM;
typedef struct _29720D4B1372A72A8E922F3C51907D2B DBT;
typedef struct _5FB9FDFEF5B2E814098E656C85B458E3 DIR;
typedef struct dsa_st DSA;
typedef struct dso_st DSO;
typedef struct _BF6258091C70028000D911F61A5FB5AF FTS;
struct FTW {int base;int level;};
struct Mem;
typedef void *PTR;
typedef struct rsa_st RSA;
typedef struct ssl_st SSL;
typedef struct counter64 U64;
typedef struct __rpc_xdr XDR;
struct buf;
struct ipq;
struct sel {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;};
struct tty;
struct uio;
typedef struct __db DB;
typedef struct dh_st DH;
typedef struct ui_st UI;
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;long long tm_gmtoff;char *tm_zone;};
struct __res_9_state___C43196706AFD8D9F503704607DF2086B___F5760817D575CBD8D5B39FC59A54FB95 {u_int16_t nscount;u_int16_t nstimes[3];int nssocks[3];struct __res_9_state_ext *ext;};
struct nextvend___7EA091B0963CBF62F9D73E9E3451E5E2___4C928A861DF53AA82E61C4313B0554E4 {u_char NV1_opcode;u_char NV1_xid;u_char NV1_text[55];u_char NV1_null;};
struct xdrbuf___3C99F4725429E2A3FEA5222150305F9C___F1B07FB5AB0A91F7CDD6BE0247735827 {char *xbb_base;uint32_t xbb_size;uint32_t xbb_len;};
struct llc___94526051AE93F16537B4BA3D9839A03C___3AFEBDF7A4FC08BFE9A431A2DA7430D4 {u_int8_t control;u_int8_t format_id;u_int8_t class_id;u_int8_t window_x2;};
struct llc___94526051AE93F16537B4BA3D9839A03C___91B3B8FDADC1811899AE65C68A225D1C {u_int8_t control;u_int8_t num_rcv_x2;};
struct llc___94526051AE93F16537B4BA3D9839A03C___A3920816D4629CE8D4A8F0ADB219F5F7 {u_int8_t num_snd_x2;u_int8_t num_rcv_x2;};
struct llc___94526051AE93F16537B4BA3D9839A03C___C255F273D17FD18D4EDDE30A2FF3191C {u_int8_t control;u_int8_t frmr_rej_pdu0;u_int8_t frmr_rej_pdu1;u_int8_t frmr_control;u_int8_t frmr_control_ext;u_int8_t frmr_cause;};
struct llc___94526051AE93F16537B4BA3D9839A03C___D0AC4D4AA87A2DEF3381B9718ACFF2C3 {u_int8_t control;u_int8_t control_ext;};
union _ossl_old_des_ks_struct___EA044D063B047D6148CE114A0782A100 {_ossl_old_des_cblock _;unsigned int pad[2];};
union HFSPlusBSDInfo___27AA93549C704A2FC0D1AB4BC35019DD {u_int32_t iNodeNum;u_int32_t linkCount;u_int32_t rawDevice;};
union __res_9_state___C43196706AFD8D9F503704607DF2086B {char pad[40];struct __res_9_state___C43196706AFD8D9F503704607DF2086B___F5760817D575CBD8D5B39FC59A54FB95 _ext;};
struct ipp_request_u___C21E321BB5A964B1106B1996333560F5 {ipp_uchar_t version[2];int op_status;int request_id;};
struct FndrFileInfo___41A11852923CA7CF3D1788B49D991E5B {int16_t v;int16_t h;};
struct FndrDirInfo___0DCF4602959F8104318EED879205AAFA {u_int16_t v;u_int16_t h;};
struct FndrDirInfo___6E74BEE3D2405F7C88221D37EC2C16A3 {int16_t top;int16_t left;int16_t bottom;int16_t right;};
union bn_gencb_st___F77A54889CF8101E886FCF9AA7EBB627 {void (*cb_1)(int, int, void *);int (*cb_2)(int, int, BN_GENCB *);};
struct in_sockinfo___51C6D8A4577F1D056D30CFC3A0948BCF {u_char in4_tos;};
union bp_address___3B940BBAFE206A608BBBF7EC1987BA49 {ip_addr_t ip_addr;};
struct des_block___E577A72923D02C4B0C353C58593774EC {u_int32 high;u_int32 low;};
union fhstatus___5A86E21E7BD06EF982D138486E7C27D0 {fhandle fhs_fhandle;};
union nlist_64___4D543BF749BB09F4875D250FEC3C43C7 {uint32_t n_strx;};
struct xinpcb64___890C891424358EA1AE7B5FD004102AA0 {u_char inp4_ip_tos;};
typedef enum _EB4F25A3AB2B34DE382859FFD4ADE17B DNSServiceDomainEnumerationReplyResultType;
struct _6825248A56C99A2E2B32FCEC421A9DAF__xp_ops {int (*xp_recv)();enum xprt_stat (*xp_stat)();int (*xp_getargs)();int (*xp_reply)();int (*xp_freeargs)();void (*xp_destroy)();};
union DES_ks___DCDADC3B951D04C242C8878BB987FED4 {DES_cblock cblock;unsigned int deslong[2];};
union ifconf___28C87C5ACD364976D94B96E40062B553 {caddr_t ifcu_buf;struct ifreq *ifcu_req;};
union xdrbuf___3C99F4725429E2A3FEA5222150305F9C {struct xdrbuf___3C99F4725429E2A3FEA5222150305F9C___F1B07FB5AB0A91F7CDD6BE0247735827 xb_buffer;};
union inpcb___1F3C467F2673A40775B3C04457DCB635 {u_char inp4_route[20];u_char inp6_route[32];};
union nlist___26321F46A668C9EA20993925C0BB247E {int32_t n_strx;};
typedef void mpo_socketpeer_label_associate_socket_t(socket_t source, struct label *sourcelabel, socket_t target, struct label *targetlabel);
union __RequestUnion__clock_reply_subsystem {__Request__clock_alarm_reply_t Request_clock_alarm_reply;};
typedef void mpo_socketpeer_label_associate_mbuf_t(struct mbuf *m, struct label *m_label, socket_t so, struct label *so_label);
typedef enum _120AC332EBC18F2A4396A3C657EB4314 DNSServiceRegistrationReplyErrorType;
typedef int mpo_cred_check_label_update_execve_t(kauth_cred_t old, struct vnode *vp, struct label *vnodelabel, struct label *scriptvnodelabel, struct label *execlabel, struct proc *proc);
union __ReplyUnion__clock_reply_subsystem {__Reply__clock_alarm_reply_t Reply_clock_alarm_reply;};
typedef void mpo_socket_label_associate_accept_t(socket_t oldsock, struct label *oldlabel, socket_t newsock, struct label *newlabel);
struct dyld_cache_accelerator_initializer {uint32_t functionOffset;uint32_t imageIndex;};
struct _0362AC053C3D6D68586BA4DFD8C6F4A4 {u_int port_id;u_int alive;u_int nport_id_high;u_int nport_id_low;u_int nport_receiver;u_int nport_owner;u_int messages_sent;u_int messages_rcvd;u_int send_rights_sent;u_int send_rights_rcvd_sender;u_int send_rights_rcvd_recown;u_int rcv_rights_xferd;u_int own_rights_xferd;u_int all_rights_xferd;u_int tokens_sent;u_int tokens_requested;u_int xfer_hints_sent;u_int xfer_hints_rcvd;};
struct _03A6CE804D1D2E62AF0690634426EB08 {uint64_t offset;uint64_t length;};
struct _0C6FFD5AF206204F3817E1D72432929C {u_int32_t addr;};
struct _0D364CBB4DE5622667695AC90920144B {u_int valdat_len;char *valdat_val;};
struct _12B704064C062A29855D6F60F4B4754D {EVP_MD_CTX *mctx;void *key;};
struct _140A3B32F7B8885BC10BF2585A8BB950 {u_int16_t size;char *data;};
struct _15CE29027F05B8BB8B125DB29B7163BF {mach_msg_header_t header;};
struct _19DEE1C64F7EC3DDB040A3404BEC0D9F {u_int utmp_array_len;rusers_utmp *utmp_array_val;};
struct _1A9F4F084CD7F87A2A45367D7A315C43 {UINT4 state[4];UINT4 count[2];unsigned char buffer[64];};
struct _1C2A755C38DA6DF2E4E1C52F7C8EAD2D {char *mname;char *rname;uint32_t serial;uint32_t refresh;uint32_t retry;uint32_t expire;uint32_t minimum;};
struct _1D15E1936BEC6B64847025DD7DD9970D {uint32_t string_count;char **strings;};
struct _221E4D0AC05B62FB3AF409C4572323C5 {intmax_t quot;intmax_t rem;};
struct _23B1E26D963E4FD44AA72239E6371C7D {u_int32_t count;char *text[128];};
struct _278A4467515A4F9120237B9F03BEA089 {u_int16_t len;char *text;};
struct _3E305BF0A5D26BA3B5EE405973B9934A {u_int32_t uid;u_int32_t gid;u_int32_t puid;u_int32_t pgid;u_int32_t mode;u_int32_t seq;u_int32_t key;};
struct _4191ABD3C20A2790C5D1CD3296E7F1ED {u_int32_t seqno;};
struct _423B7D96C11CB2986382813780F7655D {char *name;uint16_t dnstype;uint16_t dnsclass;};
struct _53A0FD50A74451071D4AFBA65ADAEB7D {uint16_t preference;char *name;};
struct _5D67E6FC771F02F85169EAAED44CFB39 {uint16_t preference;char *intermediate;};
struct _5EDD4B4F882E321F07D8AFF023DDDD7D {u_int keydat_len;char *keydat_val;};
struct _5FB9FDFEF5B2E814098E656C85B458E3 {int __dd_fd;long long __dd_loc;long long __dd_size;char *__dd_buf;int __dd_len;long long __dd_seek;long long __dd_rewind;int __dd_flags;__darwin_pthread_mutex_t __dd_lock;struct _telldir *__dd_td;};
struct _6473C35DBCE3A3EC7FFE17F82535E510 {u_char howtopr;u_char bu;u_char uc;u_char *data;};
struct _6EC1A26EC289C981C6C6C260C40F87D5 {int size;hash_node **buckets;};
struct _732EA1FD564A0C308BCD0B773E129823 {u_int16_t family;char path[104];};
struct _7CC33461F71F95EBEC0407BD799E99C2 {uint16_t length;char *data;};
struct _85D8C0A2DD9AA223810B7F7FD2DEBD15 {u_int16_t length;char *data;};
struct _956C7F5333254C457CAB162127DEEC80 {u_int16_t len;char *zonename;};
struct _AF39247D48CF164753A445931539035C {short id;int x;int y;int z;mmask_t bstate;};
struct _BAC2AEB1FCD724D135CC335E00067868 {u_int16_t len;char *path;};
struct _C12C9BDFE67D223D1BA5D023CABB3CBD {uint16_t priority;uint16_t weight;uint16_t port;char *target;};
struct _C14D86D16E65DCD7FF19482AD8623ED6 {mach_msg_header_t Head;};
struct _C9793B2A88A40550F3E6FCBE57C78800 {u_int sprayarr_len;char *sprayarr_val;};
struct _CD5F4FFB48357709D2974D1687603B86 {u_int32_t type;u_int32_t addr[4];};
struct _D0D70EDABC5C86492745B3F9A6B48782 {uint16_t xid;uint16_t flags;uint16_t qdcount;uint16_t ancount;uint16_t nscount;uint16_t arcount;};
struct _D27F585C89C5E008406F3E8E8B85AF03 {u_int16_t port;};
struct _D6100D925DD907377B334267ECE33E6F {u_int32_t status;u_int32_t ret;};
struct _DC9D1599BB1638520AEEC910A299EC32 {char __name[14];__uint32_t __mask;};
struct _F30BA47F3A86B79CC42843AD52D50564 {int __nranges;_RuneEntry *__ranges;};
struct _FEF862DC5C2F986098A4350401CDFBFD {uint32_t subtype;char *hostname;};
typedef void mpo_cred_label_associate_kernel_t(kauth_cred_t cred);
typedef void mpo_mbuf_label_associate_socket_t(socket_t so, struct label *so_label, struct mbuf *m, struct label *m_label);
typedef enum _29FC7CC788C9FFDBF53740441D4A1DD5 DNSServiceBrowserReplyResultType;
typedef int mpo_vnode_label_update_extattr_t(struct mount *mp, struct label *mntlabel, struct vnode *vp, struct label *vlabel,  char *name);
typedef void mpo_cred_label_associate_user_t(kauth_cred_t cred);
typedef void mpo_file_check_mmap_downgrade_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int *prot);
typedef int mpo_proc_check_suspend_resume_t(kauth_cred_t cred, struct proc *proc, int sr);
typedef int (*slapi_search_rewrite_callback_t)(Slapi_PBlock *pb);
struct dyld_cache_local_symbols_entry {uint32_t dylibOffset;uint32_t nlistStartIndex;uint32_t nlistCount;};
typedef void mpo_cred_label_update_execve_t(kauth_cred_t old_cred, kauth_cred_t new_cred, struct vnode *vp, struct label *vnodelabel, struct label *scriptvnodelabel, struct label *execlabel, int *disjointp);
typedef int mpo_file_check_change_offset_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);
typedef int mpo_ifnet_check_label_update_t(kauth_cred_t cred, struct ifnet *ifp, struct label *ifnetlabel, struct label *newlabel);
typedef int mpo_mount_check_label_update_t(kauth_cred_t cred, struct mount *mp, struct label *mntlabel);
typedef int mpo_proc_check_get_task_name_t(kauth_cred_t cred, struct proc *p);
typedef int mpo_vnode_check_exchangedata_t(kauth_cred_t cred, struct vnode *v1, struct label *vl1, struct vnode *v2, struct label *vl2);
typedef int mpo_vnode_check_uipc_connect_t(kauth_cred_t cred, struct vnode *vp, struct label *label);
typedef int sasl_server_userdb_checkpass_t(sasl_conn_t *conn, void *context,  char *user,  char *pass, unsigned int passlen, struct propctx *propctx);
typedef enum _6D22B6C70995B3A898F6ED894F8956B2 DNSServiceDiscoveryReplyFlags;
struct dyld_cache_local_symbols_info {uint32_t nlistOffset;uint32_t nlistCount;uint32_t stringsOffset;uint32_t stringsSize;uint32_t entriesOffset;uint32_t entriesCount;};
typedef void mpo_bpfdesc_label_associate_t(kauth_cred_t cred, struct bpf_d *bpf_d, struct label *bpflabel);
typedef int mpo_cred_check_label_update_t(kauth_cred_t cred, struct label *newlabel);
typedef int mpo_iokit_check_hid_control_t(kauth_cred_t cred);
typedef int mpo_pipe_check_label_update_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, struct label *newlabel);
typedef void mpo_sysvmsg_label_associate_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel, struct msg *msgptr, struct label *msglabel);
typedef void mpo_sysvmsq_label_associate_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);
typedef void mpo_sysvsem_label_associate_t(kauth_cred_t cred, struct semid_kernel *semakptr, struct label *semalabel);
typedef void mpo_sysvshm_label_associate_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmlabel);
typedef int mpo_vnode_check_getattrlist_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct attrlist *alist);
typedef int mpo_vnode_check_listextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel);
typedef int mpo_vnode_check_rename_from_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);
typedef int mpo_vnode_check_setattrlist_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct attrlist *alist);
struct netsnmp_mib_handler_methods_s {netsnmp_mib_handler *get_handler;netsnmp_mib_handler *getnext_handler;netsnmp_mib_handler *getbulk_handler;netsnmp_mib_handler *set_handler;};
struct netsnmp_state_machine_input_s { char *name;int steps_so_far;netsnmp_state_machine_step *steps;netsnmp_state_machine_step *cleanup;netsnmp_state_machine_step *last_run;void *input_context;};
typedef int (*ldap_sync_search_reference_f)(ldap_sync_t *ls, LDAPMessage *msg);
typedef mach_msg_type_descriptor_t *mig_routine_arg_descriptor_t;
typedef int mpo_audit_check_postselect_t(kauth_cred_t cred, unsigned short syscode, void *args, int error, int retval);
typedef int mpo_system_check_host_priv_t(kauth_cred_t cred);
struct netsnmp_agent_request_info_s {int mode;struct netsnmp_agent_session_s *asp;netsnmp_data_list *agent_data;};
typedef int (*plugin_search_entry_callback)(Slapi_Entry *e, void *callback_data);
typedef void (*processingInstructionSAXFunc)(void *ctx,  xmlChar *target,  xmlChar *data);
typedef int sasl_server_userdb_setpass_t(sasl_conn_t *conn, void *context,  char *user,  char *pass, unsigned int passlen, struct propctx *propctx, unsigned int flags);
typedef enum _278B4CDAE9C99E304B0906BE5968E29D xmlSchemaWhitespaceValueType;
typedef void (*DNSServiceRegistrationReply)(DNSServiceRegistrationReplyErrorType errorCode, void *context);
typedef enum _345160C3650206BB2C3C257B2FE36FED NSObjectFileImageReturnCode;
struct __darwin_x86_thread_state64 {__uint64_t __rax;__uint64_t __rbx;__uint64_t __rcx;__uint64_t __rdx;__uint64_t __rdi;__uint64_t __rsi;__uint64_t __rbp;__uint64_t __rsp;__uint64_t __r8;__uint64_t __r9;__uint64_t __r10;__uint64_t __r11;__uint64_t __r12;__uint64_t __r13;__uint64_t __r14;__uint64_t __r15;__uint64_t __rip;__uint64_t __rflags;__uint64_t __cs;__uint64_t __fs;__uint64_t __gs;};
typedef mach_msg_security_trailer_t mach_msg_format_0_trailer_t;
typedef int mpo_audit_check_preselect_t(kauth_cred_t cred, unsigned short syscode, void *args);
typedef int mpo_file_check_get_offset_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);
typedef void mpo_mount_label_associate_t(kauth_cred_t cred, struct mount *mp, struct label *mntlabel);
typedef int mpo_socket_check_received_t(kauth_cred_t cred, struct socket *sock, struct label *socklabel, struct sockaddr *saddr);
typedef int mpo_system_check_auditctl_t(kauth_cred_t cred, struct vnode *vp, struct label *vl);
typedef int mpo_sysvmsq_check_enqueue_t(kauth_cred_t cred, struct msg *msgptr, struct label *msglabel, struct msqid_kernel *msqptr, struct label *msqlabel);
typedef int mpo_sysvmsq_check_msgrmid_t(kauth_cred_t cred, struct msg *msgptr, struct label *msglabel);
typedef int mpo_vnode_check_fsgetpath_t(kauth_cred_t cred, struct vnode *vp, struct label *label);
typedef int mpo_vnode_check_rename_to_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, int samedir, struct componentname *cnp);
typedef int mpo_vnode_check_setutimes_t(kauth_cred_t cred, struct vnode *vp, struct label *label, struct timespec atime, struct timespec mtime);
typedef int mpo_vnode_check_uipc_bind_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp, struct vnode_attr *vap);
struct netsnmp_mode_handler_list_s {struct netsnmp_mode_handler_list_s *next;int mode;netsnmp_mib_handler *callback_handler;};
typedef thread_state_flavor_t *thread_state_flavor_array_t;
struct __darwin_x86_debug_state64 {__uint64_t __dr0;__uint64_t __dr1;__uint64_t __dr2;__uint64_t __dr3;__uint64_t __dr4;__uint64_t __dr5;__uint64_t __dr6;__uint64_t __dr7;};
typedef bootstrap_property_t *bootstrap_property_array_t;
struct err_code__err_code_pgfault {unsigned int prot : 1;unsigned int wrtflt : 1;unsigned int user : 1;unsigned int : 29;};
typedef exception_behavior_t *exception_behavior_array_t;
typedef void (*ignorableWhitespaceSAXFunc)(void *ctx,  xmlChar *ch, int len);
typedef ipc_info_tree_name_t *ipc_info_tree_name_array_t;
typedef int lt_dlpreload_callback_func(lt_dlhandle handle);
typedef int64_t mach_exception_data_type_t;
typedef void mpo_cred_label_associate_t(kauth_cred_t parent_cred, kauth_cred_t child_cred);
typedef void mpo_file_label_associate_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);
typedef void mpo_pipe_label_associate_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);
typedef int mpo_socket_check_deliver_t(socket_t so, struct label *so_label, struct mbuf *m, struct label *m_label);
typedef int mpo_system_check_auditon_t(kauth_cred_t cred, int cmd);
typedef int mpo_system_check_settime_t(kauth_cred_t cred);
typedef int mpo_system_check_swapoff_t(kauth_cred_t cred, struct vnode *vp, struct label *label);
typedef int mpo_sysvmsq_check_msgrcv_t(kauth_cred_t cred, struct msg *msgptr, struct label *msglabel);
typedef int mpo_sysvmsq_check_msqctl_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel, int cmd);
typedef int mpo_sysvmsq_check_msqget_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);
typedef int mpo_sysvmsq_check_msqrcv_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);
typedef int mpo_sysvmsq_check_msqsnd_t(kauth_cred_t cred, struct msqid_kernel *msqptr, struct label *msqlabel);
typedef int mpo_sysvsem_check_semctl_t(kauth_cred_t cred, struct semid_kernel *semakptr, struct label *semaklabel, int cmd);
typedef int mpo_sysvsem_check_semget_t(kauth_cred_t cred, struct semid_kernel *semakptr, struct label *semaklabel);
typedef int mpo_sysvshm_check_shmctl_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int cmd);
typedef int mpo_sysvshm_check_shmget_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int shmflg);
typedef int mpo_vnode_check_kqfilter_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct knote *kn, struct vnode *vp, struct label *label);
typedef int mpo_vnode_check_readlink_t(kauth_cred_t cred, struct vnode *vp, struct label *label);
typedef int mpo_vnode_check_searchfs_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct attrlist *alist);
typedef int mpo_vnode_check_truncate_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);
struct netsnmp_baby_steps_modes_s {u_int registered;u_int completed;};
struct netsnmp_row_merge_status_x {char count;char rows;char current;char reserved;netsnmp_request_info **saved_requests;char *saved_status;};
typedef enum _44CBB36E19F6FD8C2CE34633667F03E9 sasl_info_callback_stage_t;
typedef xmlSchemaAttributeGroup *xmlSchemaAttributeGroupPtr;
typedef xmlSchematronParserCtxt *xmlSchematronParserCtxtPtr;
typedef void Netsnmp_User_Group_Method(netsnmp_request_group *);
typedef int (*STORE_END_OBJECT_FUNC_PTR)(STORE *, void *handle);
typedef int (*STORE_INITIALISE_FUNC_PTR)(STORE *);
typedef __darwin_natural_t __darwin_mach_port_name_t;
typedef int (*curl_multi_timer_callback)(CURLM *multi, long long timeout_ms, void *userp);
typedef int (*ldap_sync_search_result_f)(ldap_sync_t *ls, LDAPMessage *msg, int refreshDeletes);
typedef int mpo_mount_check_getattr_t(kauth_cred_t cred, struct mount *mp, struct label *mp_label, struct vfs_attr *vfa);
typedef int mpo_mount_check_remount_t(kauth_cred_t cred, struct mount *mp, struct label *mlabel);
typedef int mpo_mount_check_setattr_t(kauth_cred_t cred, struct mount *mp, struct label *mp_label, struct vfs_attr *vfa);
typedef int mpo_pipe_check_kqfilter_t(kauth_cred_t cred, struct knote *kn, struct pipe *cpipe, struct label *pipelabel);
typedef int mpo_posixsem_check_open_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel);
typedef int mpo_posixsem_check_post_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel);
typedef int mpo_posixsem_check_wait_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel);
typedef int mpo_posixshm_check_mmap_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel, int prot, int flags);
typedef int mpo_posixshm_check_open_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel);
typedef int mpo_posixshm_check_stat_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel);
typedef int mpo_proc_check_get_task_t(kauth_cred_t cred, struct proc *p);
typedef int mpo_proc_check_getaudit_t(kauth_cred_t cred);
typedef int mpo_proc_check_setaudit_t(kauth_cred_t cred, struct auditinfo_addr *ai);
typedef int mpo_socket_check_create_t(kauth_cred_t cred, int domain, int type, int protocol);
typedef int mpo_system_check_reboot_t(kauth_cred_t cred, int howto);
typedef int mpo_system_check_swapon_t(kauth_cred_t cred, struct vnode *vp, struct label *label);
typedef int mpo_sysvshm_check_shmat_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel, int shmflg);
typedef int mpo_sysvshm_check_shmdt_t(kauth_cred_t cred, struct shmid_kernel *shmsegptr, struct label *shmseglabel);
typedef int mpo_vnode_check_readdir_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel);
typedef int mpo_vnode_notify_create_t(kauth_cred_t cred, struct mount *mp, struct label *mntlabel, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *vlabel, struct componentname *cnp);
typedef void mpo_vnode_notify_rename_t(kauth_cred_t cred, struct vnode *vp, struct label *label, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);
typedef integer_t processor_set_info_data_t[1024];
typedef enum __ns_update_operation res_9_ns_update_operation;
struct scattered_relocation_info {unsigned int r_address : 24;unsigned int r_type : 4;unsigned int r_length : 2;unsigned int r_pcrel : 1;unsigned int r_scattered : 1;int32_t r_value;};
typedef enum _D4C59E39AC5981A3A29A91ECFFFB3F03 xmlBufferAllocationScheme;
typedef xmlCharEncodingHandler *xmlCharEncodingHandlerPtr;
typedef xmlSchemaAttributeLink *xmlSchemaAttributeLinkPtr;
typedef xmlSchematronValidCtxt *xmlSchematronValidCtxtPtr;
typedef enum _A86837AB56EC532038D4CEC80449646F xmlSchematronValidOptions;
typedef netsnmp_variable_list *Netsnmp_First_Data_Point(void **loop_context, void **data_context, netsnmp_variable_list *, struct netsnmp_iterator_info_s *);
typedef enum STORE_certificate_status STORE_CERTIFICATE_STATUS;
typedef bootstrap_status_t *bootstrap_status_array_t;
typedef thread_state_flavor_t *exception_flavor_array_t;
typedef hash_info_bucket_t *hash_info_bucket_array_t;
typedef mach_exception_data_type_t mach_exception_subcode_t;
typedef mig_routine_descriptor *mig_routine_descriptor_t;
typedef int mpo_cred_check_visible_t(kauth_cred_t u1, kauth_cred_t u2);
typedef int mpo_file_check_inherit_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);
typedef int mpo_file_check_receive_t(kauth_cred_t cred, struct fileglob *fg, struct label *label);
typedef void mpo_ifnet_label_update_t(kauth_cred_t cred, struct ifnet *ifp, struct label *ifnetlabel, struct label *newlabel);
typedef int mpo_mount_check_umount_t(kauth_cred_t cred, struct mount *mp, struct label *mlabel);
typedef int mpo_proc_check_getauid_t(kauth_cred_t cred);
typedef int mpo_system_check_audit_t(kauth_cred_t cred, void *record, int length);
typedef int mpo_vnode_check_access_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int acc_mode);
typedef int mpo_vnode_check_chroot_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);
typedef int mpo_vnode_check_create_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp, struct vnode_attr *vap);
typedef int mpo_vnode_check_lookup_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct componentname *cnp);
typedef int mpo_vnode_check_revoke_t(kauth_cred_t cred, struct vnode *vp, struct label *label);
typedef int mpo_vnode_check_select_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int which);
typedef int mpo_vnode_check_unlink_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);
typedef void mpo_vnode_label_update_t(kauth_cred_t cred, struct vnode *vp, struct label *vnodelabel, struct label *label);
typedef struct netsnmp_container_s *netsnmp_container_mod_op(struct netsnmp_container_s *, void *context, u_int flags);
typedef int netsnmp_container_option(struct netsnmp_container_s *, int set, u_int flags);
struct netsnmp_transport_list_s {netsnmp_transport *transport;struct netsnmp_transport_list_s *next;};
typedef mach_msg_type_descriptor_t *routine_arg_descriptor_t;
struct sasl_security_properties {sasl_ssf_t min_ssf;sasl_ssf_t max_ssf;unsigned int maxbufsize;unsigned int security_flags; char **property_names; char **property_values;};
struct thread_background_policy {integer_t priority;};
struct thread_precedence_policy {integer_t importance;};
typedef void (*xmlParserInputDeallocate)(xmlChar *str);
typedef xmlXPathParserContext *xmlXPathParserContextPtr;
typedef void (*DNSServiceResolverReply)(struct sockaddr *interface, struct sockaddr *address,  char *txtRecord, DNSServiceDiscoveryReplyFlags flags, void *context);
typedef char *(*DSO_NAME_CONVERTER_FUNC)(DSO *,  char *);
typedef int (*ENGINE_GEN_INT_FUNC_PTR)(ENGINE *);
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusExtentDescriptor {u_int32_t startBlock;u_int32_t blockCount;};
typedef enum passpolicyerror_enum LDAPPasswordPolicyError;
typedef int LDAP_SASL_INTERACT_PROC(LDAP *ld, unsigned int flags, void *defaults, void *interact);
typedef netsnmp_variable_list *Netsnmp_Next_Data_Point(void **loop_context, void **data_context, netsnmp_variable_list *, struct netsnmp_iterator_info_s *);
struct _ossl_old_des_ks_struct {union _ossl_old_des_ks_struct___EA044D063B047D6148CE114A0782A100 ks;};
struct dylib_table_of_contents {uint32_t symbol_index;uint32_t module_index;};
struct encryption_info_command {uint32_t cmd;uint32_t cmdsize;uint32_t cryptoff;uint32_t cryptsize;uint32_t cryptid;};
typedef void mpo_cred_label_update_t(kauth_cred_t cred, struct label *newlabel);
typedef int mpo_file_check_create_t(kauth_cred_t cred);
typedef int mpo_mount_check_fsctl_t(kauth_cred_t cred, struct mount *mp, struct label *label, unsigned int cmd);
typedef int mpo_mount_check_mount_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct componentname *cnp,  char *vfc_name);
typedef int mpo_pipe_check_select_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, int which);
typedef void mpo_pipe_label_update_t(kauth_cred_t cred, struct pipe *cpipe, struct label *oldlabel, struct label *newlabel);
typedef int mpo_proc_check_signal_t(kauth_cred_t cred, struct proc *proc, int signum);
typedef int mpo_system_check_acct_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel);
typedef int mpo_system_check_chud_t(kauth_cred_t cred);
typedef int mpo_system_check_nfsd_t(kauth_cred_t cred);
typedef int mpo_vnode_check_chdir_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel);
typedef int mpo_vnode_check_ioctl_t(kauth_cred_t cred, struct vnode *vp, struct label *label, unsigned int cmd);
typedef int mpo_vnode_check_write_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);
typedef int mpo_vnode_label_store_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel, struct label *intlabel);
struct netsnmp_callback_info_s {int linkedto;void *parent_data;netsnmp_callback_pass *data;int callback_num;int pipefds[2];};
struct netsnmp_callback_pass_s {int return_transport_num;netsnmp_pdu *pdu;struct netsnmp_callback_pass_s *next;};
typedef enum _F236BFF0AA67B00384F80E74B2E93967 point_conversion_form_t;
struct processor_set_load_info {int task_count;int thread_count;integer_t load_average;integer_t mach_factor;};
struct vm_region_extended_info {vm_prot_t protection;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned short shadow_depth;unsigned char external_pager;unsigned char share_mode;};
typedef xmlParserInputBuffer *xmlParserInputBufferPtr;
typedef xmlParserNodeInfoSeq *xmlParserNodeInfoSeqPtr;
typedef xmlRelaxNGParserCtxt *xmlRelaxNGParserCtxtPtr;
typedef xsltFormatNumberInfo *xsltFormatNumberInfoPtr;
typedef xsltTransformContext *xsltTransformContextPtr;
typedef enum _349CDD1D13F7DF0473388D33C8CD4390 NSSearchPathDomainMask;
typedef void (*STORE_CLEANUP_FUNC_PTR)(STORE *);
typedef exception_mask_t *exception_mask_array_t;
typedef lockgroup_info_t *lockgroup_info_array_t;
typedef mach_msg_mac_trailer_t mach_msg_max_trailer_t;
typedef mach_zone_info_t *mach_zone_info_array_t;
typedef mach_zone_name_t *mach_zone_name_array_t;
typedef int mpo_file_check_ioctl_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, unsigned int cmd);
typedef int mpo_mount_check_stat_t(kauth_cred_t cred, struct mount *mp, struct label *mntlabel);
typedef int mpo_pipe_check_ioctl_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel, unsigned int cmd);
typedef int mpo_pipe_check_write_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);
typedef int mpo_proc_check_debug_t(kauth_cred_t cred, struct proc *proc);
typedef int mpo_proc_check_sched_t(kauth_cred_t cred, struct proc *proc);
typedef int mpo_vnode_check_link_t(kauth_cred_t cred, struct vnode *dvp, struct label *dlabel, struct vnode *vp, struct label *label, struct componentname *cnp);
typedef int mpo_vnode_check_open_t(kauth_cred_t cred, struct vnode *vp, struct label *label, int acc_mode);
typedef int mpo_vnode_check_read_t(kauth_cred_t active_cred, kauth_cred_t file_cred, struct vnode *vp, struct label *label);
typedef void netsnmp_container_func(struct netsnmp_container_s *, netsnmp_container_obj_func *, void *context);
struct __attribute__((packed)) nfs_user_stat_path_rec {u_char rec_type;char path[1025];};
struct policy_timeshare_limit {integer_t max_priority;};
typedef integer_t *processor_info_array_t;
typedef mach_msg_type_descriptor_t routine_arg_descriptor;
typedef void (*startElementNsSAX2Func)(void *ctx,  xmlChar *localname,  xmlChar *prefix,  xmlChar *URI, int nb_namespaces,  xmlChar **namespaces, int nb_attributes, int nb_defaulted,  xmlChar **attributes);
struct task_absolutetime_info {uint64_t total_user;uint64_t total_system;uint64_t threads_user;uint64_t threads_system;};
struct task_affinity_tag_info {integer_t set_count;integer_t min;integer_t max;integer_t task_count;};
struct task_kernelmemory_info {uint64_t total_palloc;uint64_t total_pfree;uint64_t total_salloc;uint64_t total_sfree;};
struct task_thread_times_info {time_value_t user_time;time_value_t system_time;};
typedef task_zone_info_t *task_zone_info_array_t;
struct thread_affinity_policy {integer_t affinity_tag;};
struct thread_extended_policy {boolean_t timeshare;};
struct thread_identifier_info {uint64_t thread_id;uint64_t thread_handle;uint64_t dispatch_qaddr;};
struct twolevel_hints_command {uint32_t cmd;uint32_t cmdsize;uint32_t offset;uint32_t nhints;};
typedef vm_info_object_t *vm_info_object_array_t;
typedef u_int32_t vol_capabilities_set_t[4];
typedef enum _FF6DEC2E5CE2EC2303227045BBC9CA50 xmlElementContentOccur;
typedef xmlRelaxNGValidCtxt *xmlRelaxNGValidCtxtPtr;
typedef xmlSchemaParserCtxt *xmlSchemaParserCtxtPtr;
typedef xmlSchemaWildcardNs *xmlSchemaWildcardNsPtr;
typedef STACK AUTHORITY_INFO_ACCESS;
typedef enum _01E72305AF8283EAA993BE6EE5BCD1F9 NSSearchPathDirectory;
struct POLICY_CONSTRAINTS_st {ASN1_INTEGER *requireExplicitPolicy;ASN1_INTEGER *inhibitPolicyMapping;};
typedef int SecmodDiscoveryMethod(void *slp, netsnmp_session *session);
typedef int SecmodSessionCallback(netsnmp_session *);
struct _xmlParserNodeInfoSeq {unsigned long long maximum;unsigned long long length;xmlParserNodeInfo *buffer;};
struct client_sasl_mechanism {int version;char *plugname; sasl_client_plug_t *plug;};
struct dyld_cache_slide_info {uint32_t version;uint32_t toc_offset;uint32_t toc_count;uint32_t entries_offset;uint32_t entries_count;uint32_t entries_size;};
typedef integer_t exception_data_type_t;
typedef ipc_info_name_t *ipc_info_name_array_t;
struct linkedit_data_command {uint32_t cmd;uint32_t cmdsize;uint32_t dataoff;uint32_t datasize;};
typedef int lt_dlhandle_interface(lt_dlhandle handle,  char *id_string);
typedef mach_exception_data_type_t mach_exception_code_t;
typedef mach_exception_data_type_t *mach_exception_data_t;
typedef int mpo_file_check_lock_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int op, struct flock *fl);
typedef int mpo_file_check_mmap_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int prot, int flags, int *maxprot);
typedef int mpo_pipe_check_read_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);
typedef int mpo_pipe_check_stat_t(kauth_cred_t cred, struct pipe *cpipe, struct label *pipelabel);
typedef int mpo_proc_check_fork_t(kauth_cred_t cred, struct proc *proc);
typedef int mpo_proc_check_wait_t(kauth_cred_t cred, struct proc *proc);
struct netsnmp_column_info_t {char isRange;char list_count;union netsnmp_column_info_t___41E30212381E22E50C344E87F6BAC4A2 details;struct netsnmp_column_info_t *next;};
typedef netsnmp_void_array *netsnmp_container_set(struct netsnmp_container_s *, void *data);
struct policy_timeshare_base {integer_t base_priority;};
struct prebind_cksum_command {uint32_t cmd;uint32_t cmdsize;uint32_t cksum;};
typedef integer_t processor_info_data_t[1024];
typedef int (*removefile_callback_t)(removefile_state_t state,  char *path, void *context);
struct server_sasl_mechanism {int version;int condition;char *plugname; sasl_server_plug_t *plug;char *f;};
struct vol_capabilities_attr {vol_capabilities_set_t capabilities;vol_capabilities_set_t valid;};
typedef enum _A0A84DEF331DB2FC39B4CD8900FCA11B xmlElementContentType;
typedef xmlSchemaAttribute *xmlSchemaAttributePtr;
typedef xmlSchemaFacetLink *xmlSchemaFacetLinkPtr;
typedef xmlSchemaValidCtxt *xmlSchemaValidCtxtPtr;
typedef xsltTransformCache *xsltTransformCachePtr;
struct BASIC_CONSTRAINTS_st {int ca;ASN1_INTEGER *pathlen;};
typedef int (*ENGINE_CTRL_FUNC_PTR)(ENGINE *, int, long long, void *, void (*f)(void));
struct PKEY_USAGE_PERIOD_st {ASN1_GENERALIZEDTIME *notBefore;ASN1_GENERALIZEDTIME *notAfter;};
typedef TIMESTAMP_STRUCT SQL_TIMESTAMP_STRUCT;
typedef __darwin_mach_port_name_t __darwin_mach_port_t;
struct __darwin_sigaltstack {void *ss_sp;__darwin_size_t ss_size;int ss_flags;};
typedef __int32_t __darwin_suseconds_t;
struct _xmlSchemaWildcardNs {struct _xmlSchemaWildcardNs *next; xmlChar *value;};
typedef void (*endElementNsSAX2Func)(void *ctx,  xmlChar *localname,  xmlChar *prefix,  xmlChar *URI);
struct kev_in6_addrlifetime {u_int32_t ia6t_expire;u_int32_t ia6t_preferred;u_int32_t ia6t_vltime;u_int32_t ia6t_pltime;};
struct ldap_matchingruleuse {char *mru_oid;char **mru_names;char *mru_desc;int mru_obsolete;char **mru_applies_oids;LDAPSchemaExtensionItem **mru_extensions;};
typedef enum _E9DBAC0AE96102AB36550954105F0957 lt_dlloader_priority;
typedef int mpo_file_check_dup_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int newfd);
typedef int mpo_file_check_get_t(kauth_cred_t cred, struct fileglob *fg, char *elements, int len);
typedef int mpo_file_check_set_t(kauth_cred_t cred, struct fileglob *fg, char *elements, int len);
struct netsnmp_tree_cache_s {struct netsnmp_subtree_s *subtree;netsnmp_request_info *requests_begin;netsnmp_request_info *requests_end;};
struct __attribute__((packed)) nfs_export_stat_desc {uint32_t rec_vers;uint32_t rec_count;};
typedef integer_t *processor_set_info_t;
typedef __darwin_pthread_rwlockattr_t pthread_rwlockattr_t;
struct __attribute__((aligned(8))) vm_extmod_statistics {int64_t task_for_pid_count;int64_t task_for_pid_caller_count;int64_t thread_creation_count;int64_t thread_creation_caller_count;int64_t thread_set_state_count;int64_t thread_set_state_caller_count;};
typedef xmlAttributeTable *xmlAttributeTablePtr;
typedef xmlElementContent *xmlElementContentPtr;
typedef xmlParserNodeInfo *xmlParserNodeInfoPtr;
typedef enum _423F66BA35E8428C801C88EA56951FA7 xmlRelaxNGParserFlag;
typedef enum _2F04DECAC9E27824D85E198F1C682F07 xmlSchemaContentType;
typedef xmlSchemaNotation *xmlSchemaNotationPtr;
typedef xmlSchemaTypeLink *xmlSchemaTypeLinkPtr;
typedef enum _3C85D19FBA73C2ACEDF478D656FAB909 xmlSchemaValidOption;
typedef xmlSchemaWildcard *xmlSchemaWildcardPtr;
typedef enum _F1A50F71D77F5C0A44F94F2AEF75FF0E xsltDebugStatusCodes;
typedef xsltDecimalFormat *xsltDecimalFormatPtr;
typedef xsltSecurityPrefs *xsltSecurityPrefsPtr;
typedef STACK CERTIFICATEPOLICIES;
typedef int32_t DNSServiceErrorType;
struct __attribute__((packed)) __attribute__((aligned(2))) HFSExtentDescriptor {u_int16_t startBlock;u_int16_t blockCount;};
struct NAME_CONSTRAINTS_st {STACK *permittedSubtrees;STACK *excludedSubtrees;};
typedef enum _56960417386CC1564F639639D8B0AEF8 NSOtherErrorNumbers;
typedef int (*STORE_CTRL_FUNC_PTR)(STORE *, int cmd, long long l, void *p, void (*f)(void));
typedef __uint32_t __darwin_useconds_t;
struct agent_add_trap_args {netsnmp_session *ss;int confirm;};
typedef uintptr_t (*cache_key_hash_cb_t)(void *key, void *user_data);
typedef int (*copyfile_callback_t)(int, int, copyfile_state_t,  char *,  char *, void *);
typedef int (*cups_interpret_cb_t)(cups_page_header2_t *header, int preferred_bits);
typedef  char *(*cups_password_cb2_t)( char *prompt, http_t *http,  char *method,  char *resource, void *user_data);
typedef enum cups_sc_connected_e cups_sc_connected_t;
typedef enum _FA84D37CEEEAC6441153FDF22E064FC6 ldap_sync_refresh_t;
struct mach_zone_info_data {uint64_t mzi_count;uint64_t mzi_cur_size;uint64_t mzi_max_size;uint64_t mzi_elem_size;uint64_t mzi_alloc_size;uint64_t mzi_sum_size;uint64_t mzi_exhaustible;uint64_t mzi_collectable;};
struct netsnmp_data_list_s {struct netsnmp_data_list_s *next;char *name;void *data;Netsnmp_Free_List_Data *free_func;};
struct __attribute__((packed)) nfs_export_stat_rec {char path[1025];uint64_t ops;uint64_t bytes_read;uint64_t bytes_written;};
typedef __darwin_pthread_mutexattr_t pthread_mutexattr_t;
typedef enum __ns_cert_types res_9_ns_cert_types;
struct task_zone_info_data {uint64_t tzi_count;uint64_t tzi_cur_size;uint64_t tzi_max_size;uint64_t tzi_elem_size;uint64_t tzi_alloc_size;uint64_t tzi_sum_size;uint64_t tzi_exhaustible;uint64_t tzi_collectable;uint64_t tzi_caller_acct;uint64_t tzi_task_alloc;uint64_t tzi_task_free;};
struct version_min_command {uint32_t cmd;uint32_t cmdsize;uint32_t version;uint32_t reserved;};
struct vol_attributes_attr {attribute_set_t validattr;attribute_set_t nativeattr;};
typedef enum _8BA7C419D374795706E7AF80CA235D6C xmlAttributeDefault;
typedef xmlAutomataState *xmlAutomataStatePtr;
typedef xmlEntitiesTable *xmlEntitiesTablePtr;
typedef xmlNotationTable *xmlNotationTablePtr;
typedef enum _87AADCA8575A383F1076ADE10D123F6C xmlParserInputState;
typedef enum _DD8E034716BD0047246A4D50EFF6F7DB xmlParserProperties;
typedef enum _DE419B5C0B7C486303E1E193CE859546 xmlParserSeverities;
typedef xmlSchemaElement *xmlSchemaElementPtr;
typedef xmlSchemaSAXPlugStruct *xmlSchemaSAXPlugPtr;
typedef enum _8D0F94C86775DD2813ADC12AE093783F xmlSchemaValidError;
typedef xmlXPathCompExpr *xmlXPathCompExprPtr;
typedef xmlXPathVariable *xmlXPathVariablePtr;
typedef enum _84F121FDA2FE4096921DBCF7232175AD xsltDebugTraceCodes;
typedef xsltRuntimeExtra *xsltRuntimeExtraPtr;
typedef xsltStylePreComp *xsltStylePreCompPtr;
struct Block_descriptor_1 {uintptr_t reserved;uintptr_t size;};
typedef uint32_t DNSRecordReference;
typedef uint32_t DNSServiceProtocol;
typedef STACK EXTENDED_KEY_USAGE;
typedef KEYMAP_ENTRY KEYMAP_ENTRY_ARRAY[256];
typedef enum STORE_object_types STORE_OBJECT_TYPES;
typedef int Secmod2PduCallback(netsnmp_pdu *, netsnmp_pdu *);
typedef int SecmodSessionSetup(netsnmp_session *in_session, netsnmp_session *out_session);
typedef enum _E86A9D4BDF47B8ECB447213BB5AF724B TidyConfigCategory;
typedef __int32_t __darwin_blksize_t;
typedef __mbstate_t __darwin_mbstate_t;
typedef __uint32_t __darwin_socklen_t;
struct __rpc_xdr__xdr_ops {int (*x_getlong)(struct __rpc_xdr *, int *);int (*x_putlong)(struct __rpc_xdr *,  int *);int (*x_getbytes)(struct __rpc_xdr *, char *, unsigned int);int (*x_putbytes)(struct __rpc_xdr *,  char *, unsigned int);unsigned int (*x_getpostn)(struct __rpc_xdr *);int (*x_setpostn)(struct __rpc_xdr *, unsigned int);int32_t *(*x_inline)(struct __rpc_xdr *, unsigned int);void (*x_destroy)(struct __rpc_xdr *);int (*x_control)(struct __rpc_xdr *, int, void *);};
struct _xsltDecimalFormat {struct _xsltDecimalFormat *next;xmlChar *name;xmlChar *digit;xmlChar *patternSeparator;xmlChar *minusSign;xmlChar *infinity;xmlChar *noNumber;xmlChar *decimalPoint;xmlChar *grouping;xmlChar *percent;xmlChar *permille;xmlChar *zeroDigit;};
typedef u_int64_t acl_permset_mask_t;
struct evp_cipher_info_st { EVP_CIPHER *cipher;unsigned char iv[16];};
typedef enum _D4934026ABEEF2822D8F739CC8F783CF filesec_property_t;
struct host_priority_info {integer_t kernel_priority;integer_t system_priority;integer_t server_priority;integer_t user_priority;integer_t depress_priority;integer_t idle_priority;integer_t minimum_priority;integer_t maximum_priority;};
typedef xmlParserNodeInfo htmlParserNodeInfo;
struct inpcb64_list_entry {u_int64_t le_next;u_int64_t le_prev;};
typedef u_int32_t kauth_ace_rights_t;
typedef enum _0783B1A147A2695A75D59C8C4539C7EA launch_data_type_t;
struct ldap_attributetype {char *at_oid;char **at_names;char *at_desc;int at_obsolete;char *at_sup_oid;char *at_equality_oid;char *at_ordering_oid;char *at_substr_oid;char *at_syntax_oid;int at_syntax_len;int at_single_value;int at_collective;int at_no_user_mod;int at_usage;LDAPSchemaExtensionItem **at_extensions;};
struct ldap_structurerule {int sr_ruleid;char **sr_names;char *sr_desc;int sr_obsolete;char *sr_nameform;int sr_nsup_ruleids;int *sr_sup_ruleids;LDAPSchemaExtensionItem **sr_extensions;};
typedef integer_t mach_msg_options_t;
struct mach_timebase_info {uint32_t numer;uint32_t denom;};
typedef kern_return_t (*mig_impl_routine_t)(void);
typedef void (*mig_stub_routine_t)(mach_msg_header_t *InHeadP, mach_msg_header_t *OutHeadP);
struct ndrv_protocol_desc {u_int32_t version;u_int32_t protocol_family;u_int32_t demux_count;struct ndrv_demux_desc *demux_list;};
struct __attribute__((packed)) nfs_user_stat_desc {uint32_t rec_vers;uint32_t rec_count;};
struct proc_workqueueinfo {uint32_t pwq_nthreads;uint32_t pwq_runthreads;uint32_t pwq_blockedthreads;uint32_t pwq_state;};
typedef __darwin_pthread_condattr_t pthread_condattr_t;
typedef uint32_t removefile_flags_t;
typedef enum __ns_key_types res_9_ns_key_types;
typedef int sasl_getcallback_t(sasl_conn_t *conn, unsigned long long callbackid, int (**pproc)(), void **pcontext);
typedef enum _0D3254EE5F0606DD2967BF158FADA5B5 sasl_verify_type_t;
typedef integer_t thread_info_data_t[1024];
typedef uint64_t vm_object_offset_t;
typedef xmlChRangeGroup *xmlChRangeGroupPtr;
typedef xmlElementTable *xmlElementTablePtr;
typedef xmlOutputBuffer *xmlOutputBufferPtr;
typedef enum _4E7DAA04C1544F5CC93F7C5C5ABE1E5E xmlRelaxNGValidErr;
typedef xmlSAXHandlerV1 *xmlSAXHandlerV1Ptr;
typedef xmlXIncludeCtxt *xmlXIncludeCtxtPtr;
typedef xmlXPathContext *xmlXPathContextPtr;
typedef enum _0FAD588DCCF26DA566A37A2D9B7AC1B1 xmlXPathObjectType;
typedef xsltElemPreComp *xsltElemPreCompPtr;
typedef enum _86944522B7C7082BFBF7A67C11C6FF4C xsltSecurityOption;
typedef enum _934315CA77800E2DB42B327F9601CA42 xsltTransformState;
struct ASN1_ADB_TABLE_st {long long value; ASN1_TEMPLATE tt;};
typedef int (*BERDecodeCallback)(BerElement *ber, void *data, int mode);
typedef int (*BEREncodeCallback)(BerElement *ber, void *data);
typedef void *BER_MEMREALLOC_FN(void *p, ber_len_t size, void *ctx);
typedef int LDAP_NEXTREF_PROC(LDAP *ld, char ***refsp, int *cntp, void *params);
typedef int (*NCURSES_SCREEN_CB)(SCREEN *, void *);
typedef int (*NCURSES_WINDOW_CB)(WINDOW *, void *);
typedef int NetsnmpLogHandler(netsnmp_log_handler *, int,  char *);
struct POLICY_MAPPING_st {ASN1_OBJECT *issuerDomainPolicy;ASN1_OBJECT *subjectDomainPolicy;};
typedef enum STORE_params STORE_PARAM_TYPES;
typedef int SecmodPduCallback(netsnmp_pdu *);
typedef void (*TidyUngetByteFunc)(void *sourceData, byte bt);
typedef __int64_t __darwin_blkcnt_t;
typedef __uint32_t __darwin_sigset_t;
typedef __uint32_t __darwin_wctype_t;
struct _inpcb_list_entry {u_int32_t le_next;u_int32_t le_prev;};
struct _unpcb_list_entry {u_int32_t le_next;u_int32_t le_prev;};
typedef void (*cdataBlockSAXFunc)(void *ctx,  xmlChar *value, int len);
typedef void (*charactersSAXFunc)(void *ctx,  xmlChar *ch, int len);
typedef void (*com_err_handler_t)( char *whoami, errcode_t code,  char *format, va_list args);
struct crypto_ex_data_st {STACK *sk;int dummy;};
typedef enum cups_sc_command_e cups_sc_command_t;
typedef enum _D3B97490B7B9C86B943C2E39D5FA02F9 curl_ftpcreatedir;
struct dyld_info_command {uint32_t cmd;uint32_t cmdsize;uint32_t rebase_off;uint32_t rebase_size;uint32_t bind_off;uint32_t bind_size;uint32_t weak_bind_off;uint32_t weak_bind_size;uint32_t lazy_bind_off;uint32_t lazy_bind_size;uint32_t export_off;uint32_t export_size;};
typedef htmlEntityDesc *htmlEntityDescPtr;
typedef enum http_encryption_e http_encryption_t;
typedef int (*http_timeout_cb_t)(http_t *http, void *user_data);
typedef enum http_uri_coding_e http_uri_coding_t;
typedef enum http_uri_status_e http_uri_status_t;
struct ip_linklocal_stat {u_int32_t iplls_in_total;u_int32_t iplls_in_badttl;u_int32_t iplls_out_total;u_int32_t iplls_out_badttl;};
typedef kmod_info_t *kmod_info_array_t;
typedef kern_return_t kmod_start_func_t(struct kmod_info *ki, void *data);
typedef krb5_int32 krb5_authdatatype;
struct ldap_matchingrule {char *mr_oid;char **mr_names;char *mr_desc;int mr_obsolete;char *mr_syntax_oid;LDAPSchemaExtensionItem **mr_extensions;};
typedef integer_t mach_msg_option_t;
typedef kern_return_t mach_msg_return_t;
typedef integer_t mach_port_delta_t;
typedef uint64_t mach_vm_address_t;
struct mib_egpNeighEntry {int egpNeighState;u_int egpNeighAddr;};
struct policy_fifo_limit {integer_t max_priority;};
struct proc_fileportinfo {uint32_t proc_fileport;uint32_t proc_fdtype;};
struct res_9_ns_tsig_key {char name[1025];char alg[1025];unsigned char *data;int len;};
typedef enum _41E859DAAE26B07B8598FA4D4F1DF50A res_9_sendhookact;
typedef int sasl_canon_user_t(sasl_conn_t *conn, void *context,  char *in, unsigned int inlen, unsigned int flags,  char *user_realm, char *out, unsigned int out_max, unsigned int *out_len);
typedef int sasl_verifyfile_t(void *context,  char *file, sasl_verify_type_t type);
struct snmp_gen_callback {SNMPCallback *sc_callback;void *sc_client_arg;int priority;struct snmp_gen_callback *next;};
struct tagSQL_DAY_SECOND {SQLUINTEGER day;SQLUINTEGER hour;SQLUINTEGER minute;SQLUINTEGER second;SQLUINTEGER fraction;};
struct tagSQL_YEAR_MONTH {SQLUINTEGER year;SQLUINTEGER month;};
struct x509_cert_pair_st {X509 *forward;X509 *reverse;};
typedef xmlDOMWrapCtxt *xmlDOMWrapCtxtPtr;
typedef enum _E1FDD4ACF09F0C0D97484FB628F6E577 xmlElementTypeVal;
typedef xmlEnumeration *xmlEnumerationPtr;
typedef xmlGlobalState *xmlGlobalStatePtr;
typedef xmlLocationSet *xmlLocationSetPtr;
typedef xmlParserInput *xmlParserInputPtr;
typedef xmlRegExecCtxt *xmlRegExecCtxtPtr;
typedef xmlSchemaAnnot *xmlSchemaAnnotPtr;
typedef xmlSchemaFacet *xmlSchemaFacetPtr;
typedef enum _539980D7AFB74DD78553342EB4BF9B66 xmlSchemaTypeType;
typedef enum _4C21AF12A3CB4BE1E82FF113A63D6EE5 xmlTextReaderMode;
typedef xmlXPathObject *xmlXPathObjectPtr;
typedef xsltNumberData *xsltNumberDataPtr;
typedef xsltStylesheet *xsltStylesheetPtr;
typedef zone_info_t *zone_info_array_t;
typedef zone_name_t *zone_name_array_t;
typedef void *BER_MEMCALLOC_FN(ber_len_t n, ber_len_t size, void *ctx);
typedef BIT_STRING_BITNAME ENUMERATED_NAMES;
struct HMAC_MD5_STATE_s {UINT4 istate[4];UINT4 ostate[4];};
typedef enum _DAE851F8676BA49E7F1B3A48D3E2CAFA NSLinkEditErrors;
typedef void NetsnmpCacheFree(netsnmp_cache *, void *);
typedef int NetsnmpCacheLoad(netsnmp_cache *, void *);
typedef enum STORE_attribs STORE_ATTR_TYPES;
typedef enum _B8C02EDA4356AFEB3B864A542494BAF4 TidyDoctypeModes;
typedef enum _A825878F958596565FEE8860DE052352 TidyDupAttrModes;
typedef __uint64_t __darwin_ino64_t;
typedef __builtin_va_list __darwin_va_list;
typedef __darwin_ct_rune_t __darwin_wchar_t;
typedef void conf_finish_func(CONF_IMODULE *md);
typedef uint32_t copyfile_flags_t;
typedef integer_t cpu_threadtype_t;
typedef enum cups_sc_status_e cups_sc_status_t;
typedef enum _7AE70D482D57B64FB9C9B10583B098AB curl_closepolicy;
typedef enum _8E6D3DD4E935220D4F923E1EC10C4FEC curl_lock_access;
struct dysymtab_command {uint32_t cmd;uint32_t cmdsize;uint32_t ilocalsym;uint32_t nlocalsym;uint32_t iextdefsym;uint32_t nextdefsym;uint32_t iundefsym;uint32_t nundefsym;uint32_t tocoff;uint32_t ntoc;uint32_t modtaboff;uint32_t nmodtab;uint32_t extrefsymoff;uint32_t nextrefsyms;uint32_t indirectsymoff;uint32_t nindirectsyms;uint32_t extreloff;uint32_t nextrel;uint32_t locreloff;uint32_t nlocrel;};
typedef exception_data_type_t *exception_data_t;
typedef integer_t host_info_data_t[1024];
typedef enum _44336BB59F93F7B3E282D9E42617278E htmlParserOption;
typedef enum http_keepalive_e http_keepalive_t;
typedef kern_return_t kmod_stop_func_t(struct kmod_info *ki, void *data);
typedef krb5_int32 krb5_preauthtype;
typedef krb5_int32 krb5_prompt_type;
struct ldap_contentrule {char *cr_oid;char **cr_names;char *cr_desc;char **cr_sup_oids;int cr_obsolete;char **cr_oc_oids_aux;char **cr_at_oids_must;char **cr_at_oids_may;char **cr_at_oids_not;LDAPSchemaExtensionItem **cr_extensions;};
struct ldap_objectclass {char *oc_oid;char **oc_names;char *oc_desc;int oc_obsolete;char **oc_sup_oids;int oc_kind;char **oc_at_oids_must;char **oc_at_oids_may;LDAPSchemaExtensionItem **oc_extensions;};
typedef int lt_dlloader_exit(lt_user_data data);
typedef int lt_dlloader_init(lt_user_data data);
typedef integer_t *mach_port_info_t;
typedef uint64_t mach_vm_offset_t;
struct mib_ipRouteEntry {u_int ipRouteDest;int ipRouteIfIndex;int ipRouteMetric1;int ipRouteMetric2;int ipRouteMetric3;int ipRouteMetric4;u_int ipRouteNextHop;int ipRouteType;int ipRouteProto;int ipRouteAge;};
struct mib_tcpConnEntry {int tcpConnState;u_int tcpConnLocalAddress;int tcpConnLocalPort;u_int tcpConnRemAddress;int tcpConnRemPort;};
typedef int mpo_priv_check_t(kauth_cred_t cred, int priv);
typedef int mpo_priv_grant_t(kauth_cred_t cred, int priv);
typedef enum _0AA02EF7744A92D26B678F19DE8AD812 pcap_direction_t;
struct policy_fifo_base {integer_t base_priority;};
typedef integer_t *processor_info_t;
typedef __darwin_pthread_rwlock_t pthread_rwlock_t;
struct record_pqueue_st {unsigned short epoch;pqueue q;};
struct routines_command {uint32_t cmd;uint32_t cmdsize;uint32_t init_address;uint32_t init_module;uint32_t reserved1;uint32_t reserved2;uint32_t reserved3;uint32_t reserved4;uint32_t reserved5;uint32_t reserved6;};
typedef int sasl_authorize_t(sasl_conn_t *conn, void *context,  char *requested_user, unsigned int rlen,  char *auth_identity, unsigned int alen,  char *def_realm, unsigned int urlen, struct propctx *propctx);
struct so_np_extensions {u_int32_t npx_flags;u_int32_t npx_mask;};
struct task_events_info {integer_t faults;integer_t pageins;integer_t cow_faults;integer_t messages_sent;integer_t messages_received;integer_t syscalls_mach;integer_t syscalls_unix;integer_t csw;};
struct task_extmod_info {unsigned char task_uuid[16];vm_extmod_statistics_data_t extmod_statistics;};
typedef integer_t task_info_data_t[1024];
struct vacm_accessEntry {char groupName[34];char contextPrefix[34];int securityModel;int securityLevel;int contextMatch;char views[8][34];int storageType;int status;u_long bitMask;struct vacm_accessEntry *reserved;struct vacm_accessEntry *next;};
typedef uint32_t vm32_object_id_t;
typedef uint64_t vm_map_address_t;
typedef uint64_t vm_object_size_t;
typedef enum _1DB7270510D9B9271406B2E2F1D1DAC7 xmlAttributeType;
typedef enum _9AB5807BE2A73FD802AD3D897EE79005 xmlCatalogPrefer;
typedef enum _77D6BC159AA5DA7BD67BECF2A12D0ED9 xmlDocProperties;
typedef xmlParserCtxt *xmlParserCtxtPtr;
typedef xmlSAXHandler *xmlSAXHandlerPtr;
typedef xmlSAXLocator *xmlSAXLocatorPtr;
typedef xmlSchemaType *xmlSchemaTypePtr;
typedef enum _24B90EFAD6F7231A0F4CA2F9C31D428B xmlSchemaValType;
typedef xmlSchematron *xmlSchematronPtr;
typedef xmlStreamCtxt *xmlStreamCtxtPtr;
typedef xmlTextReader *xmlTextReaderPtr;
typedef xmlTextWriter *xmlTextWriterPtr;
typedef xmlValidState *xmlValidStatePtr;
typedef void (*xmlXPathEvalFunc)(xmlXPathParserContextPtr ctxt, int nargs);
typedef void (*xmlXPathFunction)(xmlXPathParserContextPtr ctxt, int nargs);
typedef xsltCompMatch *xsltCompMatchPtr;
typedef xsltStackElem *xsltStackElemPtr;
typedef void *BER_MEMALLOC_FN(ber_len_t size, void *ctx);
typedef STACK CRL_DIST_POINTS;
typedef uint32_t DNSServiceFlags;
typedef char *(*DSO_MERGER_FUNC)(DSO *,  char *,  char *);
struct EDIPartyName_st {ASN1_STRING *nameAssigner;ASN1_STRING *partyName;};
typedef int (*FILTER_APPLY_FN)(Slapi_Filter *f, void *arg);
typedef STACK POLICY_MAPPINGS;
typedef DATE_STRUCT SQL_DATE_STRUCT;
typedef TIME_STRUCT SQL_TIME_STRUCT;
typedef void (*TidyPutByteFunc)(void *sinkData, byte bt);
typedef enum _8C351220F954B531CED471BF1232BFD8 TidyReportLevel;
typedef STACK X509_EXTENSIONS;
struct _TidyOutputSink {void *sinkData;TidyPutByteFunc putByte;};
typedef __uint16_t __darwin_mode_t;
typedef __darwin_wchar_t __darwin_rune_t;
typedef __darwin_ct_rune_t __darwin_wint_t;
struct _ipfw_insn_pipe {ipfw_insn o;void *pipe_ptr;};
struct _xmlEnumeration {struct _xmlEnumeration *next; xmlChar *name;};
struct _xmlLocationSet {int locNr;int locMax;xmlXPathObjectPtr *locTab;};
typedef enum cups_encoding_e cups_encoding_t;
typedef enum cups_sc_state_e cups_sc_state_t;
typedef uint64_t dispatch_time_t;
struct ffi_raw_closure {char tramp[24];ffi_cif *cif;void (*translate_args)(ffi_cif *, void *, void **, void *);void *this_closure;void (*fun)(ffi_cif *, void *, ffi_raw *, void *);void *user_data;};
struct host_sched_info {integer_t min_timeout;integer_t min_quantum;};
typedef htmlElemDesc *htmlElemDescPtr;
typedef xmlParserInput htmlParserInput;
struct http_addrlist_s {struct http_addrlist_s *next;http_addr_t addr;};
typedef enum http_encoding_e http_encoding_t;
struct kern_event_info {uint32_t kesi_vendor_code_filter;uint32_t kesi_class_filter;uint32_t kesi_subclass_filter;};
struct kev_vendor_code {u_int32_t vendor_code;char vendor_string[200];};
typedef krb5_int32 krb5_error_code;
struct mib_ipAddrEntry {u_int ipAdEntAddr;int ipAdEntIfIndex;u_int ipAdEntNetMask;int ipAdEntBcastAddr;int ipAdEntReasmMaxSize;};
struct nfs_export_args {uint32_t nxa_fsid;uint32_t nxa_expid;char *nxa_fspath;char *nxa_exppath;uint32_t nxa_flags;uint32_t nxa_netcount;struct nfs_export_net_args *nxa_nets;};
struct policy_rr_limit {integer_t max_priority;};
typedef __darwin_pthread_mutex_t pthread_mutex_t;
struct relocation_info {int32_t r_address;unsigned int r_symbolnum : 24;unsigned int r_pcrel : 1;unsigned int r_length : 2;unsigned int r_extern : 1;unsigned int r_type : 4;};
typedef enum __ns_opcode res_9_ns_opcode;
struct sasl_out_params {unsigned int doneflag; char *user; char *authid;unsigned int ulen;unsigned int alen;unsigned int maxoutbuf;sasl_ssf_t mech_ssf;void *encode_context;int (*encode)(void *context,  struct iovec *invec, unsigned int numiov,  char **output, unsigned int *outputlen);void *decode_context;int (*decode)(void *context,  char *input, unsigned int inputlen,  char **output, unsigned int *outputlen);void *client_creds;void *spare_ptr2;void *spare_ptr3;void *spare_ptr4;int (*spare_fptr1)();int (*spare_fptr2)();int spare_int1;int spare_int2;int spare_int3;int spare_int4;int param_version;};
typedef u_int32_t text_encoding_t;
typedef integer_t *thread_policy_t;
struct vacm_groupEntry {int securityModel;char securityName[34];char groupName[34];int storageType;int status;u_long bitMask;struct vacm_groupEntry *reserved;struct vacm_groupEntry *next;};
typedef uint64_t vm_map_offset_t;
struct x509_purpose_st {int purpose;int trust;int flags;int (*check_purpose)( struct x509_purpose_st *,  X509 *, int);char *name;char *sname;void *usr_data;};
typedef xlinkHandler *xlinkHandlerPtr;
typedef xmlAttribute *xmlAttributePtr;
typedef enum _E720E7619019B10D7DF6FB85013EE738 xmlCatalogAllow;
typedef enum _E5E7377D643AA4CAF5C6CDE0D2F168BF xmlCharEncoding;
typedef xmlHashTable *xmlHashTablePtr;
typedef enum _72C7479B17D42DC9DFBAFDAD1641A379 xmlModuleOption;
typedef enum _98923156B44D8D77A256CDD67243A530 xmlParserErrors;
typedef enum _B1615B6EE754A1E9BE91669222F3B978 xmlParserOption;
typedef enum _E52E208B92D65F4D665A1F0C1924EDE5 xmlPatternFlags;
typedef xmlSchemaVal *xmlSchemaValPtr;
typedef xmlShellCtxt *xmlShellCtxtPtr;
typedef xmlValidCtxt *xmlValidCtxtPtr;
typedef xmlXPathAxis *xmlXPathAxisPtr;
typedef xmlXPathFunct *xmlXPathFuncPtr;
typedef xmlXPathType *xmlXPathTypePtr;
typedef xsltDocument *xsltDocumentPtr;
typedef xsltKeyTable *xsltKeyTablePtr;
typedef xsltTemplate *xsltTemplatePtr;
typedef void ASN1_free_func(ASN1_VALUE *a);
typedef void CRYPTO_EX_free(void *parent, void *ptr, CRYPTO_EX_DATA *ad, int idx, long long argl, void *argp);
typedef enum _28266B4D1FF5A8F2FF1835543AB19A29 CURLformoption;
struct __attribute__((packed)) __attribute__((aligned(2))) FndrOpaqueInfo {int8_t opaque[16];};
typedef int (*GEN_SESSION_CB)( SSL *ssl, unsigned char *id, unsigned int *id_len);
struct HMAC_MD5_CTX_s {MD5_CTX ictx;MD5_CTX octx;};
struct SHA512state_st {unsigned long long h[8];unsigned long long Nl;unsigned long long Nh;union SHA512state_st___61765161EF95A25BF6D9F15268D2C4E6 u;unsigned int num;unsigned int md_len;};
typedef enum _3369F195F3872D92A108D01D54B2E7FC TidyLineEnding;
typedef enum _27728F6308F3E4DDCA008ED55D2293B2 TidyOptionType;
typedef int (*X509V3_EXT_I2R)(struct v3_ext_method *method, void *ext, BIO *out, int indent);
typedef STACK *(*X509V3_EXT_I2V)(struct v3_ext_method *method, void *ext, STACK *extlist);
typedef void *(*X509V3_EXT_V2I)(struct v3_ext_method *method, struct v3_ext_ctx *ctx, STACK *values);
typedef __int32_t __darwin_dev_t;
typedef __uint32_t __darwin_gid_t;
typedef __darwin_ino64_t __darwin_ino_t;
typedef __int64_t __darwin_off_t;
typedef __int32_t __darwin_pid_t;
typedef __uint32_t __darwin_uid_t;
typedef __builtin_va_list __gnuc_va_list;
struct _xmlSAXLocator { xmlChar *(*getPublicId)(void *ctx); xmlChar *(*getSystemId)(void *ctx);int (*getLineNumber)(void *ctx);int (*getColumnNumber)(void *ctx);};
typedef enum _97920DDAD3C80055B2939F984919E3D2 acl_entry_id_t;
struct bn_mont_ctx_st {int ri;BIGNUM RR;BIGNUM N;BIGNUM Ni;unsigned long long n0;int flags;};
struct bn_recp_ctx_st {BIGNUM N;BIGNUM Nr;int num_bits;int shift;int flags;};
typedef void (*commentSAXFunc)(void *ctx,  xmlChar *value);
struct comp_method_st {int type; char *name;int (*init)(COMP_CTX *ctx);void (*finish)(COMP_CTX *ctx);int (*compress)(COMP_CTX *ctx, unsigned char *out, unsigned int olen, unsigned char *in, unsigned int ilen);int (*expand)(COMP_CTX *ctx, unsigned char *out, unsigned int olen, unsigned char *in, unsigned int ilen);long long (*ctrl)(void);long long (*callback_ctrl)(void);};
struct ctl_event_data {u_int32_t ctl_id;u_int32_t ctl_unit;};
typedef enum cups_backend_e cups_backend_t;
typedef enum cups_icspace_e cups_icspace_t;
typedef enum cups_sc_bidi_e cups_sc_bidi_t;
typedef enum _5BB59419A030D6A179F24FB1144C5140 curl_ftpmethod;
typedef enum _0F66511D35BDCD2A40906A0230E6F760 curl_lock_data;
typedef enum _AA7AC226BF5649CDC6E12A1616281D14 curl_proxytype;
struct host_load_info {integer_t avenrun[3];integer_t mach_factor[3];};
typedef xmlParserCtxt htmlParserCtxt;
typedef xmlSAXHandler htmlSAXHandler;
typedef enum http_version_e http_version_t;
struct ifs_iso_8802_3 {u_int32_t dot3StatsAlignmentErrors;u_int32_t dot3StatsFCSErrors;u_int32_t dot3StatsSingleCollisionFrames;u_int32_t dot3StatsMultipleCollisionFrames;u_int32_t dot3StatsSQETestErrors;u_int32_t dot3StatsDeferredTransmissions;u_int32_t dot3StatsLateCollisions;u_int32_t dot3StatsExcessiveCollisions;u_int32_t dot3StatsInternalMacTransmitErrors;u_int32_t dot3StatsCarrierSenseErrors;u_int32_t dot3StatsFrameTooLongs;u_int32_t dot3StatsInternalMacReceiveErrors;u_int32_t dot3StatsEtherChipSet;u_int32_t dot3StatsMissedFrames;u_int32_t dot3StatsCollFrequencies[16];u_int32_t dot3Compliance;};
struct __attribute__((packed)) ip6_opt_router {u_int8_t ip6or_type;u_int8_t ip6or_len;u_int8_t ip6or_value[2];};
struct __attribute__((packed)) ip6_opt_tunnel {u_int8_t ip6ot_type;u_int8_t ip6ot_len;u_int8_t ip6ot_encap_limit;};
struct kern_event_msg {u_int32_t total_size;u_int32_t vendor_code;u_int32_t kev_class;u_int32_t kev_subclass;u_int32_t id;u_int32_t event_code;u_int32_t event_data[1];};
typedef krb5_pointer krb5_cc_cursor;
typedef krb5_int32 krb5_cksumtype;
typedef krb5_pointer krb5_kt_cursor;
typedef krb5_int32 krb5_timestamp;
struct lockgroup_info {char lockgroup_name[64];uint64_t lockgroup_attr;uint64_t lock_spin_cnt;uint64_t lock_spin_util_cnt;uint64_t lock_spin_held_cnt;uint64_t lock_spin_miss_cnt;uint64_t lock_spin_held_max;uint64_t lock_spin_held_cum;uint64_t lock_mtx_cnt;uint64_t lock_mtx_util_cnt;uint64_t lock_mtx_held_cnt;uint64_t lock_mtx_miss_cnt;uint64_t lock_mtx_wait_cnt;uint64_t lock_mtx_held_max;uint64_t lock_mtx_held_cum;uint64_t lock_mtx_wait_max;uint64_t lock_mtx_wait_cum;uint64_t lock_rw_cnt;uint64_t lock_rw_util_cnt;uint64_t lock_rw_held_cnt;uint64_t lock_rw_miss_cnt;uint64_t lock_rw_wait_cnt;uint64_t lock_rw_held_max;uint64_t lock_rw_held_cum;uint64_t lock_rw_wait_max;uint64_t lock_rw_wait_cum;};
typedef uint64_t mach_vm_size_t;
struct net_event_data {u_int32_t if_family;u_int32_t if_unit;char if_name[16];};
typedef integer_t *policy_limit_t;
struct policy_rr_base {integer_t base_priority;integer_t quantum;};
typedef __darwin_pthread_attr_t pthread_attr_t;
typedef __darwin_pthread_cond_t pthread_cond_t;
typedef __darwin_pthread_once_t pthread_once_t;
typedef enum __ns_class res_9_ns_class;
typedef enum __ns_rcode res_9_ns_rcode;
typedef sqlite_uint64 sqlite3_uint64;
struct symseg_command {uint32_t cmd;uint32_t cmdsize;uint32_t offset;uint32_t size;};
struct symtab_command {uint32_t cmd;uint32_t cmdsize;uint32_t symoff;uint32_t nsyms;uint32_t stroff;uint32_t strsize;};
struct tagTIME_STRUCT {SQLUSMALLINT hour;SQLUSMALLINT minute;SQLUSMALLINT second;};
struct thread_command {uint32_t cmd;uint32_t cmdsize;};
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;
typedef xmlAutomata *xmlAutomataPtr;
typedef xmlChLRange *xmlChLRangePtr;
typedef xmlChSRange *xmlChSRangePtr;
typedef enum _C5101608B88D7C11ADC8E88E540FCD76 xmlElementType;
typedef enum _6C3D1F16C57240F500269E6CB726B57E xmlErrorDomain;
typedef enum _2DA825ED8C2895B6F3A859CF0380522A xmlExpNodeType;
typedef xmlNotation *xmlNotationPtr;
typedef enum _9D11CEBD141858D27EC341F596A794AC xmlReaderTypes;
typedef xmlRefTable *xmlRefTablePtr;
typedef xmlSaveCtxt *xmlSaveCtxtPtr;
typedef enum xp_frame_class_enum xp_frame_class;
typedef enum _7DDEDB93E618741445B281E5280D8762 xsltOutputType;
struct ypresp_maplist {ypstat stat;ypmaplist *maps;};
typedef  ASN1_ITEM ASN1_ITEM_EXP;
typedef ASN1_VALUE *ASN1_d2i_func(ASN1_VALUE **a,  unsigned char **in, long long length);
typedef int ASN1_i2d_func(ASN1_VALUE *a, unsigned char **in);
typedef ASN1_VALUE *ASN1_new_func(void);
typedef int CRYPTO_EX_dup(CRYPTO_EX_DATA *to, CRYPTO_EX_DATA *from, void *from_d, int idx, long long argl, void *argp);
typedef int CRYPTO_EX_new(void *parent, void *ptr, CRYPTO_EX_DATA *ad, int idx, long long argl, void *argp);
typedef STACK GENERAL_NAMES;
typedef netsnmp_index *UserRowMethod(netsnmp_index *);
typedef __uint32_t __darwin_id_t;
struct _keymap_entry {char type;Function *function;};
struct _mime_magic_s {struct _mime_magic_s *prev;struct _mime_magic_s *next;struct _mime_magic_s *parent;struct _mime_magic_s *child;short op;short invert;int offset;int region;int length;union _mime_magic_s___44C44110DFFEF8B71A54B915355ECCBB value;};
typedef integer_t cpu_subtype_t;
typedef enum cups_cspace_e cups_cspace_t;
typedef enum cups_orient_e cups_orient_t;
typedef enum _6BF03EB572F80D0BDF28C7CB21479A3D curl_TimeCond;
typedef enum _0CDFE265BA8298D003ED8250CCBFBAAD curl_infotype;
typedef u_int32_t fsfile_type_t;
typedef integer_t host_flavor_t;
typedef integer_t *host_info64_t;
typedef enum http_status_e http_status_t;
struct ident_command {uint32_t cmd;uint32_t cmdsize;};
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
struct __attribute__((packed)) ip6_opt_jumbo {u_int8_t ip6oj_type;u_int8_t ip6oj_len;u_int8_t ip6oj_jumbo_len[4];};
typedef enum ipp_quality_e ipp_quality_t;
struct kern_ctl_info {uint32_t kcsi_id;uint32_t kcsi_reg_unit;uint32_t kcsi_flags;uint32_t kcsi_recvbufsize;uint32_t kcsi_sendbufsize;uint32_t kcsi_unit;char kcsi_name[96];};
typedef krb5_int32 krb5_addrtype;
typedef krb5_int32 krb5_keyusage;
struct ldap_nameform {char *nf_oid;char **nf_names;char *nf_desc;int nf_obsolete;char *nf_objectclass;char **nf_at_oids_must;char **nf_at_oids_may;LDAPSchemaExtensionItem **nf_extensions;};
typedef integer_t mach_msg_id_t;
struct mach_timespec {unsigned int tv_sec;clock_res_t tv_nsec;};
typedef mig_stub_routine_t mig_routine_t;
typedef integer_t *policy_base_t;
typedef integer_t *policy_info_t;
typedef enum ppd_conform_e ppd_conform_t;
typedef enum ppd_section_e ppd_section_t;
typedef __darwin_pthread_key_t pthread_key_t;
typedef enum __ns_flag res_9_ns_flag;
typedef enum __ns_sect res_9_ns_sect;
struct rstat_timeval {u_int tv_sec;u_int tv_usec;};
struct sasl_callback {unsigned long long id;int (*proc)();void *context;};
typedef void sasl_logmsg_p(sasl_conn_t *conn,  char *fmt, ...);
typedef sqlite_int64 sqlite3_int64;
struct ssl2_state_st {int three_byte_header;int clear_text;int escape;int ssl2_rollback;unsigned int wnum;int wpend_tot; unsigned char *wpend_buf;int wpend_off;int wpend_len;int wpend_ret;int rbuf_left;int rbuf_offs;unsigned char *rbuf;unsigned char *wbuf;unsigned char *write_ptr;unsigned int padding;unsigned int rlength;int ract_data_length;unsigned int wlength;int wact_data_length;unsigned char *ract_data;unsigned char *wact_data;unsigned char *mac_data;unsigned char *read_key;unsigned char *write_key;unsigned int challenge_length;unsigned char challenge[32];unsigned int conn_id_length;unsigned char conn_id[16];unsigned int key_material_length;unsigned char key_material[48];unsigned long long read_sequence;unsigned long long write_sequence;struct ssl2_state_st___84C368C7769861FE002B58071E3F7188 tmp;};
typedef u_int64_t syscall_arg_t;
typedef integer_t *task_policy_t;
typedef integer_t *thread_info_t;
typedef uint16_t uint_fast16_t;
typedef uint32_t uint_fast32_t;
typedef uint64_t uint_fast64_t;
typedef uint8_t uint_least8_t;
struct unw_context_t {uint64_t data[128];};
typedef __darwin_uuid_string_t uuid_string_t;
typedef uint64_t vm_map_size_t;
struct x509_trust_st {int trust;int flags;int (*check_trust)(struct x509_trust_st *, X509 *, int);char *name;int arg1;void *arg2;};
typedef xmlCatalog *xmlCatalogPtr;
typedef xmlElement *xmlElementPtr;
typedef enum _D46AA9DF6FBFE9D2B16063CE8CC3B5EF xmlEntityType;
typedef enum _2B1C8C2AA87A0F529B35F14375A7741D xmlErrorLevel;
typedef xmlExpCtxt *xmlExpCtxtPtr;
typedef xmlExpNode *xmlExpNodePtr;
typedef xmlIDTable *xmlIDTablePtr;
typedef xmlNodeSet *xmlNodeSetPtr;
typedef enum _D3CAE1E2FD75A1BAED0D73857BABBB1F xmlParserMode;
typedef xmlPattern *xmlPatternPtr;
typedef xmlRelaxNG *xmlRelaxNGPtr;
typedef enum _1E2DDA021D687B95C32B4B8734BFFE5E xmlSaveOption;
typedef enum _6FDCE26D5FA4D6DB475CE5F65FC8B575 xmlXPathError;
typedef enum xp_frame_attr_enum xp_frame_attr;
typedef enum xp_frame_rect_enum xp_frame_rect;
typedef xp_resource_id xp_surface_id;
typedef xsltKeyDef *xsltKeyDefPtr;
typedef enum _162ABE26F671F2AD93D06A9AC8714FD1 xsltStyleType;
struct ASN1_ITEM_st {char itype;long long utype; ASN1_TEMPLATE *templates;long long tcount; void *funcs;long long size; char *sname;};
struct Block_layout {void *isa;int32_t flags;int32_t reserved;void (*invoke)(void *, ...);struct Block_descriptor_1 *descriptor;};
typedef enum _55AEE0FA07D064890E756D545251771C CURLFORMcode;
typedef enum _817EE464AA2F5FC31C63385F8A750782 CURLSHoption;
struct ECDSA_SIG_st {BIGNUM *r;BIGNUM *s;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSUniStr255 {u_int16_t length;u_int16_t unicode[255];};
typedef STACK KRB5_AUTHENT;
struct PBE2PARAM_st {X509_ALGOR *keyfunc;X509_ALGOR *encryption;};
typedef enum _215194CEC7B0CB0293C31B12FA375707 TidyNodeType;
typedef enum _8AF341AFB349B0F3EC8B21B2C315FEF7 TidyOptionId;
typedef enum _7B6D6F191C45FE8067F0BF66D1F2D24A TidyTriState;
struct UnsignedWide {UInt32 lo;UInt32 hi;};
struct _krb5_prompt {char *prompt;int hidden;krb5_data *reply;};
struct _mime_type_s {mime_magic_t *rules;int priority;char super[16];char type[256];};
struct _xmlNotation { xmlChar *name; xmlChar *PublicID; xmlChar *SystemID;};
struct au_tidaddr32 {u_int32_t port;u_int32_t type;u_int32_t addr[4];};
typedef boolean_t *bool_array_t;
typedef enum cups_order_e cups_order_t;
typedef enum _7C7EBFB03B6B9DB8456CC748404AF258 curl_ftpauth;
typedef enum _27A01D9EE3F8426B35A7597034B60846 curlfiletype;
typedef enum _C2D4DC0A39BA1BADB043EDCBF23CFD90 curlsocktype;
struct dylib_module {uint32_t module_name;uint32_t iextdefsym;uint32_t nextdefsym;uint32_t irefsym;uint32_t nrefsym;uint32_t ilocalsym;uint32_t nlocalsym;uint32_t iextrel;uint32_t nextrel;uint32_t iinit_iterm;uint32_t ninit_nterm;uint32_t objc_module_info_addr;uint32_t objc_module_info_size;};
typedef u_int32_t fsobj_type_t;
struct help_index_s {int search;cups_array_t *nodes;cups_array_t *sorted;};
typedef enum http_field_e http_field_t;
typedef enum http_state_e http_state_t;
struct icmp6_filter {u_int32_t icmp6_filt[8];};
struct icmp_ra_addr {u_int32_t ira_addr;u_int32_t ira_preference;};
struct if_family_id {u_int32_t iffmid_len;u_int32_t iffmid_id;char iffmid_str[1];};
typedef int16_t int_fast16_t;
typedef int32_t int_fast32_t;
typedef int64_t int_fast64_t;
typedef int8_t int_least8_t;
struct __attribute__((packed)) ip6_opt_nsap {u_int8_t ip6on_type;u_int8_t ip6on_len;u_int8_t ip6on_src_nsap_len;u_int8_t ip6on_dst_nsap_len;};
typedef enum ipp_finish_e ipp_finish_t;
typedef enum ipp_jstate_e ipp_jstate_t;
typedef enum ipp_orient_e ipp_orient_t;
typedef enum ipp_pstate_e ipp_pstate_t;
typedef enum ipp_status_e ipp_status_t;
typedef krb5_int32 krb5_enctype;
struct load_command {uint32_t cmd;uint32_t cmdsize;};
typedef kern_return_t mach_error_t;
typedef name_t *name_array_t;
struct nfs_specdata {uint32_t specdata1;uint32_t specdata2;};
typedef void (*pcap_handler)(u_char *,  struct pcap_pkthdr *,  u_char *);
struct pem_recip_st {char *name;X509_NAME *dn;int cipher;int key_enc;};
struct ppd_choice_s {char marked;char choice[41];char text[81];char *code;ppd_option_t *option;};
typedef enum ppd_cptype_e ppd_cptype_t;
typedef enum ppd_status_e ppd_status_t;
struct rand_meth_st {void (*seed)( void *buf, int num);int (*bytes)(unsigned char *buf, int num);void (*cleanup)(void);void (*add)( void *buf, int num, double entropy);int (*pseudorand)(unsigned char *buf, int num);int (*status)(void);};
struct rawarc_order {uint32_t raw_frompc;uint32_t raw_selfpc;uint32_t raw_count;uint32_t raw_order;};
struct sockbuf_info {uint32_t sbi_cc;uint32_t sbi_hiwat;uint32_t sbi_mbcnt;uint32_t sbi_mbmax;uint32_t sbi_lowat;short sbi_flags;short sbi_timeo;};
struct spraytimeval {u_int sec;u_int usec;};
typedef uint8_t uint_fast8_t;
struct unw_cursor_t {uint64_t data[140];};
typedef int64_t user_ssize_t;
typedef u_int64_t user_ulong_t;
struct whod__whoent {struct outmp we_utmp;int we_idle;};
typedef enum _6DB4FE1C454B55753CB1CF245ADB8A73 xlinkActuate;
typedef xmlBuffer *xmlBufferPtr;
typedef xmlEntity *xmlEntityPtr;
typedef xmlModule *xmlModulePtr;
typedef xmlRMutex *xmlRMutexPtr;
typedef xmlRegexp *xmlRegexpPtr;
typedef xmlSchema *xmlSchemaPtr;
typedef xp_resource_id xp_window_id;
typedef enum _118F56CDA9BE3A595E7F6B040CBBDA40 xsltLoadType;
typedef enum _3BD93A796F6658F29C5207FE2468935A CURLMoption;
typedef enum _46343603E7EF6B9CA2DB5251398A8141 CURLversion;
typedef STACK KRB5_TICKET;
typedef enum _AAF7D8B1D740C4801D49F07692D1E0A1 SQLINTERVAL;
typedef STACK X509_ALGORS;
struct X509_val_st {ASN1_TIME *notBefore;ASN1_TIME *notAfter;};
struct _hist_entry { char *line;histdata_t data;};
typedef u_int32_t attrgroup_t;
typedef __attribute__((aligned(8))) u_int64_t au_asflgs_t;
struct au_user_ent {char *au_name;au_mask_t au_always;au_mask_t au_never;};
struct audit_fstat {u_int64_t af_filesz;u_int64_t af_currsz;};
struct bn_gencb_st {unsigned int ver;void *arg;union bn_gencb_st___F77A54889CF8101E886FCF9AA7EBB627 cb;};
struct bpf_program {u_int bf_len;struct bpf_insn *bf_insns;};
typedef u_int bpf_u_int32;
struct bpf_version {u_short bv_major;u_short bv_minor;};
typedef enum cups_bool_e cups_bool_t;
struct cups_dest_s {char *name;char *instance;int is_default;int num_options;cups_option_t *options;};
typedef enum cups_edge_e cups_edge_t;
typedef enum cups_mode_e cups_mode_t;
typedef enum _5BC5AC313FBD748556525804BA480EF5 curl_ftpccc;
typedef enum _0DBFB4EE40FDDB492A6C497C28C3DC12 curl_usessl;
typedef debug_t *debug_ptr_t;
struct error_table { char * * messages;int32_t base;int32_t count;};
typedef u_int32_t fsobj_tag_t;
typedef integer_t *host_info_t;
typedef enum http_auth_e http_auth_t;
typedef int8_t int_fast8_t;
typedef enum ipp_state_e ipp_state_t;
struct kev_request {u_int32_t vendor_code;u_int32_t kev_class;u_int32_t kev_subclass;};
typedef krb5_int32 krb5_deltat;
struct ldap_syntax {char *syn_oid;char **syn_names;char *syn_desc;LDAPSchemaExtensionItem **syn_extensions;};
typedef ber_int_t ldap_ucs4_t;
struct ldapvlvinfo {ber_int_t ldvlv_version;ber_int_t ldvlv_before_count;ber_int_t ldvlv_after_count;ber_int_t ldvlv_offset;ber_int_t ldvlv_count;struct berval *ldvlv_attrvalue;struct berval *ldvlv_context;void *ldvlv_extradata;};
struct mdc2_ctx_st {unsigned int num;unsigned char data[8];DES_cblock h;DES_cblock hh;int pad_type;};
struct nfs_stateid {uint32_t seqid;uint32_t other[3];};
struct nlm4_notify {char *name;int32_t state;};
struct opaque_auth {int oa_flavor;caddr_t oa_base;unsigned int oa_length;};
typedef param_t *param_ptr_t;
struct rusers_utmp {char *ut_user;char *ut_line;char *ut_host;int ut_type;int ut_time;u_int ut_idle;};
typedef __uint8_t sa_family_t;
struct searchstate {u_char reserved[556];};
struct sm_stat_res {sm_res res_stat;int state;};
struct sockaddr_un {unsigned char sun_len;sa_family_t sun_family;char sun_path[104];};
struct sqlite3_vfs {int iVersion;int szOsFile;int mxPathname;sqlite3_vfs *pNext; char *zName;void *pAppData;int (*xOpen)(sqlite3_vfs *,  char *zName, sqlite3_file *, int flags, int *pOutFlags);int (*xDelete)(sqlite3_vfs *,  char *zName, int syncDir);int (*xAccess)(sqlite3_vfs *,  char *zName, int flags, int *pResOut);int (*xFullPathname)(sqlite3_vfs *,  char *zName, int nOut, char *zOut);void *(*xDlOpen)(sqlite3_vfs *,  char *zFilename);void (*xDlError)(sqlite3_vfs *, int nByte, char *zErrMsg);void (*(*xDlSym)(sqlite3_vfs *, void *,  char *zSymbol))(void);void (*xDlClose)(sqlite3_vfs *, void *);int (*xRandomness)(sqlite3_vfs *, int nByte, char *zOut);int (*xSleep)(sqlite3_vfs *, int microseconds);int (*xCurrentTime)(sqlite3_vfs *, double *);int (*xGetLastError)(sqlite3_vfs *, int, char *);int (*xCurrentTimeInt64)(sqlite3_vfs *, sqlite3_int64 *);};
struct ssl_comp_st {int id; char *name;COMP_METHOD *method;};
typedef __darwin_suseconds_t suseconds_t;
struct synch_state {int waiting;int status;int reqid;netsnmp_pdu *pdu;};
typedef integer_t *task_info_t;
typedef enum task_role task_role_t;
struct tinfo_fkeys {unsigned int offset;chtype code;};
struct tsegqe_head {u_int32_t lh_first;};
typedef u_int64_t user_addr_t;
typedef int64_t user_long_t;
typedef u_int64_t user_size_t;
typedef int64_t user_time_t;
typedef u_int32_t vifbitmap_t;
typedef uintptr_t vm_offset_t;
typedef enum _6B111C5B4079F64069FB7C2797D9CE8F vncontrol_t;
typedef xmlError *xmlErrorPtr;
typedef xmlMutex *xmlMutexPtr;
typedef enum _DF9762E172B78CD0B567A8F57D5EE1A7 CURLSHcode;
typedef enum _2E8E5FC6A771AD2BBD66B1556875C23C CURLoption;
struct DSA_SIG_st {BIGNUM *r;BIGNUM *s;};
typedef STACK KRB5_APREQ;
typedef int32_t OSSpinLock;
typedef UInt32 OptionBits;
typedef enum _7BC844CA13F55C9D2AEAF3513FB7769B TidyAttrId;
typedef enum _9D44ACAEA63D9A866E10323356541372 acl_flag_t;
typedef enum _2B249EAD8B9396505612852840E44E36 acl_perm_t;
typedef enum _F8A097482C6B24D8CA3C16823450667A acl_type_t;
typedef u_int32_t au_class_t;
typedef u_int16_t au_event_t;
struct bp_address {int address_type;union bp_address___3B940BBAFE206A608BBBF7EC1987BA49 bp_address_u;};
typedef integer_t cpu_type_t;
typedef enum cups_adv_e cups_adv_t;
typedef enum cups_cut_e cups_cut_t;
typedef enum cups_jog_e cups_jog_t;
struct curl_forms {CURLformoption option; char *value;};
typedef int64_t curl_off_t;
struct diskextent {u_int32_t startblock;u_int32_t blockcount;};
struct ether_addr {u_char octet[6];};
struct fat_header {uint32_t magic;uint32_t nfat_arch;};
typedef __darwin_fsblkcnt_t fsblkcnt_t;
typedef __darwin_fsfilcnt_t fsfilcnt_t;
typedef uint32_t gss_uint32;
typedef uint64_t gss_uint64;
typedef gz_header *gz_headerp;
typedef enum _F022A16E3DDDADD4F8D0A3446DF412CC htmlStatus;
struct klm_holder {int exclusive;int svid;u_int l_offset;u_int l_len;};
typedef krb5_int32 krb5_flags;
typedef krb5_error_code krb5_magic;
struct __attribute__((packed)) nd_opt_hdr {u_int8_t nd_opt_type;u_int8_t nd_opt_len;};
struct nlm_notify {char *name;rpc_int state;};
struct pam_module {char *path;pam_func_t func[6];void *dlh;};
struct ppd_attr_s {char name[41];char spec[41];char text[81];char *value;};
struct ppd_emul_s {char name[41];char *start;char *stop;};
struct ppd_size_s {int marked;char name[41];float width;float length;float left;float bottom;float right;float top;};
typedef int64_t register_t;
typedef stat_t *stat_ptr_t;
struct time_value {integer_t seconds;integer_t microseconds;};
typedef uint64_t unw_word_t;
typedef __darwin_useconds_t useconds_t;
typedef int64_t user_off_t;
typedef xmlChar *xlinkTitle;
typedef xmlAttr *xmlAttrPtr;
typedef xmlDict *xmlDictPtr;
typedef enum _743EA981694C8951C7F0FF81288A5AAC xmlFeature;
typedef xmlLink *xmlLinkPtr;
typedef xmlList *xmlListPtr;
typedef xmlNode *xmlNodePtr;
typedef BerValue *BerVarray;
typedef enum _80C78EA22186AB772B4BDEFF2BFDD204 CURLMcode;
typedef void (*Form_Hook)(FORM *);
typedef gss_uint32 OM_uint32;
typedef SQLSMALLINT SQLRETURN;
typedef enum _2FDA988FD3B15DF6C5C6EE839763B6D4 TidyTagId;
struct __rpc_xdr {enum xdr_op x_op; struct __rpc_xdr__xdr_ops *x_ops;char *x_public;void *x_private;char *x_base;unsigned int x_handy;};
struct _xmlError {int domain;int code;char *message;xmlErrorLevel level;char *file;int line;char *str1;char *str2;char *str3;int int1;int int2;void *ctxt;void *node;};
typedef enum _F332E1DED775B0D62777DB33DD18F524 acl_tag_t;
typedef u_int16_t au_emod_t;
typedef __darwin_blksize_t blksize_t;
struct call_body {unsigned int cb_rpcvers;unsigned int cb_prog;unsigned int cb_vers;unsigned int cb_proc;struct opaque_auth cb_cred;struct opaque_auth cb_verf;};
struct call_gate {unsigned short offset00;sel_t seg;unsigned int argcnt : 5;unsigned int : 3;unsigned int type : 5;unsigned int dpl : 2;unsigned int present : 1;unsigned int offset16 : 16;};
struct counter64 {u_long high;u_long low;};
typedef __darwin_ct_rune_t ct_rune_t;
typedef enum _56CFACB0BE9E4BA6F465B343389C1FC1 curliocmd;
typedef enum _12BCB6FB1C1F7369F599F8C0386A61E5 curlioerr;
typedef int64_t daddr64_t;
union des_block {struct des_block___E577A72923D02C4B0C353C58593774EC key;char c[8];};
struct dqfilehdr {u_int32_t dqh_magic;u_int32_t dqh_version;u_int32_t dqh_maxentries;u_int32_t dqh_entrycnt;u_int32_t dqh_flags;u_int32_t dqh_chktime;u_int32_t dqh_btime;u_int32_t dqh_itime;char dqh_string[16];u_int32_t dqh_spare[4];};
typedef void (*free_func)(voidpf opaque, voidpf address);
typedef u_int32_t fsvolid_t;
struct gmon_data {uint32_t type;uint32_t size;};
typedef int32_t gss_int32;
typedef OM_uint32 gss_qop_t;
struct host_info {char name[128];char addr[128];struct sockaddr_gen *sin;struct t_unitdata *unit;struct request_info *request;};
typedef __uint32_t in_addr_t;
typedef __uint16_t in_port_t;
struct intr_gate {unsigned short offset00;sel_t seg;unsigned int : 8;unsigned int type : 5;unsigned int dpl : 2;unsigned int present : 1;unsigned int offset16 : 16;};
struct __attribute__((packed)) ip6_rthdr {u_int8_t ip6r_nxt;u_int8_t ip6r_len;u_int8_t ip6r_type;u_int8_t ip6r_segleft;};
typedef enum ipp_res_e ipp_res_t;
typedef enum ipp_tag_e ipp_tag_t;
typedef log_rec_t *log_ptr_t;
typedef __darwin_mbstate_t mbstate_t;
typedef enum _E61B72B2528436688BBD75516B993DD2 mime_op_t;
typedef __darwin_natural_t natural_t;
struct ndrv_info {uint32_t ndrvsi_if_family;uint32_t ndrvsi_if_unit;char ndrvsi_if_name[16];};
typedef uint32_t netaddr_t;
struct nfs_uquad {u_int32_t nfsuquad[2];};
struct nfsd_args {int sock;caddr_t name;int namelen;};
struct nlm4_stat {nlm4_stats stat;};
struct osockaddr {__uint16_t sa_family;char sa_data[14];};
struct pcap_stat {u_int ps_recv;u_int ps_drop;u_int ps_ifdrop;};
typedef vm_offset_t pointer_t;
typedef __darwin_pthread_t pthread_t;
typedef __darwin_ptrdiff_t ptrdiff_t;
typedef __darwin_socklen_t socklen_t;
struct sockproto {__uint16_t sp_family;__uint16_t sp_protocol;};
struct timeval32 {__int32_t tv_sec;__int32_t tv_usec;};
struct trap_gate {unsigned short offset00;sel_t seg;unsigned int : 8;unsigned int type : 5;unsigned int dpl : 2;unsigned int present : 1;unsigned int offset16 : 16;};
typedef uintptr_t vm_size_t;
typedef __darwin_wctrans_t wctrans_t;
typedef int (*xdrproc_t)(XDR *, ...);
typedef xmlChar *xlinkHRef;
typedef xmlChar *xlinkRole;
typedef enum _EE25B450600DB130E77B21E804467FD5 xlinkShow;
typedef enum _4FD0ECE3FAAB0A3A3855B925214176D1 xlinkType;
typedef xmlDoc *xmlDocPtr;
typedef xmlDtd *xmlDtdPtr;
typedef xmlElementType xmlNsType;
typedef xmlRef *xmlRefPtr;
typedef xmlURI *xmlURIPtr;
struct ypmaplist {mapname map;struct ypmaplist *next;};
typedef z_stream *z_streamp;
typedef enum _5BB96409C7C381A52DD11FDA0AE1E04F CURLINFO;
typedef enum _031587082C14B3DB98E124F1346E686B CURLcode;
typedef kern_return_t OSReturn;
typedef SInt32 OSStatus;
typedef SQLHANDLE SQLHDESC;
typedef SQLHANDLE SQLHSTMT;
typedef SQLCHAR SQLTCHAR;
typedef uint64_t addr64_t;
struct addrinfo {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;socklen_t ai_addrlen;char *ai_canonname;struct sockaddr *ai_addr;struct addrinfo *ai_next;};
struct au_tid32 {u_int32_t port;u_int32_t addr;};
typedef __darwin_blkcnt_t blkcnt_t;
struct bpf_stat {u_int bs_recv;u_int bs_drop;};
struct ctl_info {u_int32_t ctl_id;char ctl_name[96];};
struct fp_stack {fp_data_reg_t ST[8];};
struct __attribute__((packed)) frmrinfo {u_int8_t frmr_rej_pdu0;u_int8_t frmr_rej_pdu1;u_int8_t frmr_control;u_int8_t frmr_control_ext;u_int8_t frmr_cause;};
struct fsobj_id {u_int32_t fid_objno;u_int32_t fid_generation;};
struct icmpstat {u_int32_t icps_error;u_int32_t icps_oldshort;u_int32_t icps_oldicmp;u_int32_t icps_outhist[41];u_int32_t icps_badcode;u_int32_t icps_tooshort;u_int32_t icps_checksum;u_int32_t icps_badlen;u_int32_t icps_reflect;u_int32_t icps_inhist[41];u_int32_t icps_bmcastecho;u_int32_t icps_bmcasttstamp;};
typedef enum _891529C55A3D7F6C466AE0BA608A35EA idtype_t;
struct igmpstat {u_int igps_rcv_total;u_int igps_rcv_tooshort;u_int igps_rcv_badsum;u_int igps_rcv_queries;u_int igps_rcv_badqueries;u_int igps_rcv_reports;u_int igps_rcv_badreports;u_int igps_rcv_ourreports;u_int igps_snd_reports;};
typedef __darwin_intptr_t intptr_t;
struct __attribute__((packed)) ip6_dest {u_int8_t ip6d_nxt;u_int8_t ip6d_len;};
typedef enum ipp_op_e ipp_op_t;
struct klm_stat {klm_stats stat;};
struct mib_icmp {u_int icmpInMsgs;u_int icmpInErrors;u_int icmpInDestUnreachs;u_int icmpInTimeExcds;u_int icmpInParmProbs;u_int icmpInSrcQuenchs;u_int icmpInRedirects;u_int icmpInEchos;u_int icmpInEchoReps;u_int icmpInTimestamps;u_int icmpInTimestampReps;u_int icmpInAddrMasks;u_int icmpInAddrMaskReps;u_int icmpOutMsgs;u_int icmpOutErrors;u_int icmpOutDestUnreachs;u_int icmpOutTimeExcds;u_int icmpOutParmProbs;u_int icmpOutSrcQuenchs;u_int icmpOutRedirects;u_int icmpOutEchos;u_int icmpOutEchoReps;u_int icmpOutTimestamps;u_int icmpOutTimestampReps;u_int icmpOutAddrMasks;u_int icmpOutAddrMaskReps;};
struct nfs_fsid {uint64_t major;uint64_t minor;};
struct nlm_stat {nlm_stats stat;};
struct pmaplist {struct pmap pml_map;struct pmaplist *pml_next;};
typedef enum ppd_cs_e ppd_cs_t;
typedef enum ppd_ui_e ppd_ui_t;
typedef __darwin_off_t regoff_t;
struct sadb_ext {u_int16_t sadb_ext_len;u_int16_t sadb_ext_type;};
struct sadb_key {u_int16_t sadb_key_len;u_int16_t sadb_key_exttype;u_int16_t sadb_key_bits;u_int16_t sadb_key_reserved;};
typedef __darwin_sigset_t sigset_t;
struct timespec {__darwin_time_t tv_sec;long long tv_nsec;};
struct typenode {unsigned short status;long long ref;struct typenode *left;struct typenode *right;void *(*makearg)(va_list *);void *(*copyarg)( void *);void (*freearg)(void *);char (*fcheck)(FIELD *,  void *);char (*ccheck)(int,  void *);char (*next)(FIELD *,  void *);char (*prev)(FIELD *,  void *);};
typedef u_int64_t u_quad_t;
struct vfsquery {u_int32_t vq_flags;u_int32_t vq_spare[31];};
struct vn_ioctl {char *vn_file;int vn_size;vncontrol_t vn_control;};
typedef __darwin_wctype_t wctype_t;
typedef xmlID *xmlIDPtr;
typedef xmlNs *xmlNsPtr;
struct yppasswd {char *oldpass;x_passwd newpw;};
typedef enum _E50CF21A375752F45409DA036BA9C4BA CURLMSG;
typedef LDAPAVA **LDAPRDN;
typedef DWORD *LPDWORD;
typedef SQLHANDLE SQLHDBC;
typedef SQLHANDLE SQLHENV;
typedef SQLPOINTER SQLHWND;
typedef __darwin_clock_t clock_t;
struct cmsghdr {socklen_t cmsg_len;int cmsg_level;int cmsg_type;};
typedef  tmbchar *ctmbstr;
typedef int32_t daddr_t;
struct disktab {char *d_name;char *d_type;int d_secsize;int d_ntracks;int d_nsectors;int d_ncylinders;int d_rpm;int d_badsectforw;int d_sectoffset;struct disktab__partition d_partitions[8];};
struct esptail {u_int8_t esp_padlen;u_int8_t esp_nxt;};
typedef __int32_t fd_mask;
typedef u_int32_t fixpt_t;
struct in_addr {in_addr_t s_addr;};
typedef __darwin_ino64_t ino64_t;
struct __attribute__((packed)) ip6_ext {u_int8_t ip6e_nxt;u_int8_t ip6e_len;};
struct __attribute__((packed)) ip6_hbh {u_int8_t ip6h_nxt;u_int8_t ip6h_len;};
struct __attribute__((packed)) ip6_opt {u_int8_t ip6o_type;u_int8_t ip6o_len;};
struct ip_mreq {struct in_addr imr_multiaddr;struct in_addr imr_interface;};
struct ip_opts {struct in_addr ip_dst;char ip_opts[40];};
struct ldapmod {int mod_op;char *mod_type;union ldapmod__mod_vals_u mod_vals;};
struct loadavg {fixpt_t ldavg[3];long long fscale;};
struct mib_egp {u_int egpInMsgs;u_int egpInErrors;u_int egpOutMsgs;u_int egpOutErrors;};
struct mib_tcp {int tcpRtoAlgorithm;int tcpRtoMin;int tcpRtoMax;int tcpMaxConn;u_int tcpActiveOpens;u_int tcpPassiveOpens;u_int tcpAttemptFails;u_int tcpEstabResets;u_int tcpCurrEstab;u_int tcpInSegs;u_int tcpOutSegs;u_int tcpRetransSegs;};
struct mib_udp {u_int udpInDatagrams;u_int udpNoPorts;u_int udpInErrors;u_int udpOutDatagrams;};
struct mrtstat {u_int32_t mrts_mfc_lookups;u_int32_t mrts_mfc_misses;u_int32_t mrts_upcalls;u_int32_t mrts_no_route;u_int32_t mrts_bad_tunnel;u_int32_t mrts_cant_tunnel;u_int32_t mrts_wrong_if;u_int32_t mrts_upq_ovflw;u_int32_t mrts_cache_cleanups;u_int32_t mrts_drop_sel;u_int32_t mrts_q_overflow;u_int32_t mrts_pkt2large;u_int32_t mrts_upq_sockfull;};
typedef __uint16_t n_short;
struct nfs_sec {int count;uint32_t flavors[5];};
typedef enum _696096D9A1236276F280ED3B7625D32B nfstype;
typedef __darwin_nl_item nl_item;
typedef __uint16_t nlink_t;
typedef enum __ns_type ns_type;
struct pcap_if {struct pcap_if *next;char *name;char *description;struct pcap_addr *addresses;bpf_u_int32 flags;};
typedef uint32_t ppnum_t;
typedef u_int32_t recno_t;
typedef uint32_t reg64_t;
struct ru_utmp {char ut_line[8];char ut_name[8];char ut_host[16];rpc_int ut_time;};
struct section {char sectname[16];char segname[16];uint32_t addr;uint32_t size;uint32_t offset;uint32_t align;uint32_t reloff;uint32_t nreloc;uint32_t flags;uint32_t reserved1;uint32_t reserved2;};
typedef int32_t segsz_t;
typedef __darwin_ssize_t ssize_t;
typedef int32_t swblk_t;
typedef __uint32_t tcp_seq;
struct tcpstat {u_int32_t tcps_connattempt;u_int32_t tcps_accepts;u_int32_t tcps_connects;u_int32_t tcps_drops;u_int32_t tcps_conndrops;u_int32_t tcps_closed;u_int32_t tcps_segstimed;u_int32_t tcps_rttupdated;u_int32_t tcps_delack;u_int32_t tcps_timeoutdrop;u_int32_t tcps_rexmttimeo;u_int32_t tcps_persisttimeo;u_int32_t tcps_keeptimeo;u_int32_t tcps_keepprobe;u_int32_t tcps_keepdrops;u_int32_t tcps_sndtotal;u_int32_t tcps_sndpack;u_int32_t tcps_sndbyte;u_int32_t tcps_sndrexmitpack;u_int32_t tcps_sndrexmitbyte;u_int32_t tcps_sndacks;u_int32_t tcps_sndprobe;u_int32_t tcps_sndurg;u_int32_t tcps_sndwinup;u_int32_t tcps_sndctrl;u_int32_t tcps_rcvtotal;u_int32_t tcps_rcvpack;u_int32_t tcps_rcvbyte;u_int32_t tcps_rcvbadsum;u_int32_t tcps_rcvbadoff;u_int32_t tcps_rcvmemdrop;u_int32_t tcps_rcvshort;u_int32_t tcps_rcvduppack;u_int32_t tcps_rcvdupbyte;u_int32_t tcps_rcvpartduppack;u_int32_t tcps_rcvpartdupbyte;u_int32_t tcps_rcvoopack;u_int32_t tcps_rcvoobyte;u_int32_t tcps_rcvpackafterwin;u_int32_t tcps_rcvbyteafterwin;u_int32_t tcps_rcvafterclose;u_int32_t tcps_rcvwinprobe;u_int32_t tcps_rcvdupack;u_int32_t tcps_rcvacktoomuch;u_int32_t tcps_rcvackpack;u_int32_t tcps_rcvackbyte;u_int32_t tcps_rcvwinupd;u_int32_t tcps_pawsdrop;u_int32_t tcps_predack;u_int32_t tcps_preddat;u_int32_t tcps_pcbcachemiss;u_int32_t tcps_cachedrtt;u_int32_t tcps_cachedrttvar;u_int32_t tcps_cachedssthresh;u_int32_t tcps_usedrtt;u_int32_t tcps_usedrttvar;u_int32_t tcps_usedssthresh;u_int32_t tcps_persistdrop;u_int32_t tcps_badsyn;u_int32_t tcps_mturesent;u_int32_t tcps_listendrop;u_int32_t tcps_minmssdrops;u_int32_t tcps_sndrexmitbad;u_int32_t tcps_badrst;u_int32_t tcps_sc_added;u_int32_t tcps_sc_retransmitted;u_int32_t tcps_sc_dupsyn;u_int32_t tcps_sc_dropped;u_int32_t tcps_sc_completed;u_int32_t tcps_sc_bucketoverflow;u_int32_t tcps_sc_cacheoverflow;u_int32_t tcps_sc_reset;u_int32_t tcps_sc_stale;u_int32_t tcps_sc_aborted;u_int32_t tcps_sc_badack;u_int32_t tcps_sc_unreach;u_int32_t tcps_sc_zonefail;u_int32_t tcps_sc_sendcookie;u_int32_t tcps_sc_recvcookie;u_int32_t tcps_hc_added;u_int32_t tcps_hc_bucketoverflow;u_int32_t tcps_sack_recovery_episode;u_int32_t tcps_sack_rexmits;u_int32_t tcps_sack_rexmit_bytes;u_int32_t tcps_sack_rcv_blocks;u_int32_t tcps_sack_send_blocks;u_int32_t tcps_sack_sboverflow;u_int32_t tcps_bg_rcvtotal;u_int32_t tcps_rxtfindrop;};
struct tftphdr {short th_opcode;union tftphdr___AC1EF054FE947B275A5712C606118B7A th_u;char th_data[1];};
struct udpstat {u_int32_t udps_ipackets;u_int32_t udps_hdrops;u_int32_t udps_badsum;u_int32_t udps_badlen;u_int32_t udps_noport;u_int32_t udps_noportbcast;u_int32_t udps_fullsock;u_int32_t udpps_pcbcachemiss;u_int32_t udpps_pcbhashmiss;u_int32_t udps_opackets;u_int32_t udps_fastout;};
struct vfsconf {uint32_t vfc_reserved1;char vfc_name[15];int vfc_typenum;int vfc_refcount;int vfc_flags;uint32_t vfc_reserved2;uint32_t vfc_reserved3;};
/// #define wchar_t  __darwin_wchar_t ===DEFINED
typedef enum _EDBA1914F16BC538415B0E0A3A3FD3BB ACTION;
typedef enum _81EAA969F6CC11E48BC03187F305DA8C DBDIRS;
typedef enum _B2A44DC877B17F2021CE46A73658A10E DBTYPE;
struct DES_ks {union DES_ks___DCDADC3B951D04C242C8878BB987FED4 ks[16];};
typedef KEYMAP_ENTRY *Keymap;
typedef LDAPRDN *LDAPDN;
typedef __darwin_wchar_t *LPWSTR;
typedef chtype attr_t;
struct berval {ber_len_t bv_len;char *bv_val;};
typedef u_int16_t comp_t;
struct fd_set {__int32_t fds_bits[32];};
typedef __darwin_off_t fpos_t;
typedef voidp gzFile;
struct ifconf {int ifc_len;union ifconf___28C87C5ACD364976D94B96E40062B553 ifc_ifcu;};
typedef u_int16_t indx_t;
struct ipstat {u_int32_t ips_total;u_int32_t ips_badsum;u_int32_t ips_tooshort;u_int32_t ips_toosmall;u_int32_t ips_badhlen;u_int32_t ips_badlen;u_int32_t ips_fragments;u_int32_t ips_fragdropped;u_int32_t ips_fragtimeout;u_int32_t ips_forward;u_int32_t ips_fastforward;u_int32_t ips_cantforward;u_int32_t ips_redirectsent;u_int32_t ips_noproto;u_int32_t ips_delivered;u_int32_t ips_localout;u_int32_t ips_odropped;u_int32_t ips_reassembled;u_int32_t ips_fragmented;u_int32_t ips_ofragments;u_int32_t ips_cantfrag;u_int32_t ips_badoptions;u_int32_t ips_noroute;u_int32_t ips_badvers;u_int32_t ips_rawout;u_int32_t ips_toolong;u_int32_t ips_notmember;u_int32_t ips_nogif;u_int32_t ips_badaddr;};
union lc_str {uint32_t offset;};
struct mib_ip {int ipForwarding;int ipDefaultTTL;u_int ipInReceives;u_int ipInHdrErrors;u_int ipInAddrErrors;u_int ipForwDatagrams;u_int ipInUnknownProtos;u_int ipInDiscards;u_int ipInDelivers;u_int ipOutRequests;u_int ipOutDiscards;u_int ipOutNoRoutes;int ipReasmTimeout;u_int ipReasmReqds;u_int ipReasmOKs;u_int ipReasmFails;u_int ipFragOKs;u_int ipFragFails;u_int ipFragCreates;};
typedef __darwin_mode_t mode_t;
struct mon_id {char *mon_name;struct my_id my_id;};
struct msghdr {void *msg_name;socklen_t msg_namelen;struct iovec *msg_iov;int msg_iovlen;void *msg_control;socklen_t msg_controllen;int msg_flags;};
typedef __uint32_t n_long;
typedef __uint32_t n_time;
struct netent {char *n_name;char **n_aliases;int n_addrtype;uint32_t n_net;};
struct newesp {u_int32_t esp_spi;u_int32_t esp_seq;};
typedef u_int32_t pgno_t;
typedef int64_t quad_t;
typedef __uint64_t rlim_t;
struct rlimit {rlim_t rlim_cur;rlim_t rlim_max;};
struct rquota {int rq_bsize;int rq_active;u_int rq_bhardlimit;u_int rq_bsoftlimit;u_int rq_curblocks;u_int rq_fhardlimit;u_int rq_fsoftlimit;u_int rq_curfiles;u_int rq_btimeleft;u_int rq_ftimeleft;};
typedef __darwin_rune_t rune_t;
typedef __darwin_size_t size_t;
struct so_nke {unsigned int nke_handle;unsigned int nke_where;int nke_flags;u_int32_t reserved[4];};
typedef __uint32_t tcp_cc;
struct tcphdr {unsigned short th_sport;unsigned short th_dport;tcp_seq th_seq;tcp_seq th_ack;unsigned int th_x2 : 4;unsigned int th_off : 4;unsigned char th_flags;unsigned short th_win;unsigned short th_sum;unsigned short th_urp;};
typedef __darwin_time_t time_t;
typedef tmbchar *tmbstr;
typedef uLong uLongf;
struct udphdr {u_short uh_sport;u_short uh_dport;u_short uh_ulen;u_short uh_sum;};
typedef __darwin_uuid_t uuid_t;
typedef u_short vifi_t;
typedef __darwin_wint_t wint_t;
typedef Byte Bytef;
typedef uint16_t UChar;
typedef enum _003F63A829E52477BDB4080710A1139D VISIT;
typedef __darwin_dev_t dev_t;
typedef gdt_entry_t gdt_t;
typedef __darwin_gid_t gid_t;
struct group {char *gr_name;char *gr_passwd;gid_t gr_gid;char **gr_mem;};
typedef idt_entry_t idt_t;
struct ifdrv {char ifd_name[16];unsigned long long ifd_cmd;size_t ifd_len;void *ifd_data;};
struct ifkpi {unsigned int ifk_module_id;unsigned int ifk_type;union ifkpi___9B10D65E4AB145405EA162F315DE5FAB ifk_data;};
typedef __darwin_ino_t ino_t;
struct iovec {void *iov_base;size_t iov_len;};
typedef __int32_t key_t;
typedef ldt_entry_t ldt_t;
typedef __darwin_off_t off_t;
struct panel {WINDOW *win;struct panel *below;struct panel *above;void *user;};
typedef __darwin_pid_t pid_t;
struct stats {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_oerrors;int if_collisions;int if_opackets;};
typedef uint tchar;
struct timeb {time_t time;unsigned short millitm;short timezone;short dstflag;};
typedef uInt uIntf;
typedef __darwin_uid_t uid_t;
typedef enum _65EE5B278A6A516D307828565C93733B Bool;
typedef SQLPOINTER HWND;
struct fsid {int32_t val[2];};
typedef __darwin_id_t id_t;
struct whod {char wd_vers;char wd_type;char wd_pad[2];int wd_sendtime;int wd_recvtime;char wd_hostname[32];int wd_loadav[3];int wd_boottime;whod__whoent wd_we[42];};
struct esp {u_int32_t esp_spi;};
struct mac {size_t m_buflen;char *m_string;};
struct mon {struct mon_id mon_id;char priv[16];};
struct msg {struct msg *msg_next;long long msg_type;unsigned short msg_ts;short msg_spot;struct label *label;};
typedef uint32_t oid;
struct sem {unsigned short semval;pid_t sempid;unsigned short semncnt;unsigned short semzcnt;};
struct tms {clock_t tms_utime;clock_t tms_stime;clock_t tms_cutime;clock_t tms_cstime;};
struct tss {sel_t oldtss;unsigned int : 0;unsigned int esp0;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} ss0;unsigned int : 0;unsigned int esp1;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} ss1;unsigned int : 0;unsigned int esp2;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} ss2;unsigned int : 0;unsigned int cr3;unsigned int eip;unsigned int eflags;unsigned int eax;unsigned int ecx;unsigned int edx;unsigned int ebx;unsigned int esp;unsigned int ebp;unsigned int esi;unsigned int edi;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} es;unsigned int : 0;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} cs;unsigned int : 0;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} ss;unsigned int : 0;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} ds;unsigned int : 0;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} fs;unsigned int : 0;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} gs;unsigned int : 0;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} ldt;unsigned int : 0;unsigned int t : 1;unsigned int : 15;unsigned int io_bmap : 16;};
struct STORE_OBJECT_st___78662AA53663BCB8AAE8916B78AF8CFA___FA360D2E41DCB3363DB7C6EE711F8FB0 {STORE_CERTIFICATE_STATUS status;X509 *certificate;};
struct accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44___BFD7413E14FC21CAB05150D69A0647C0 {caddr_t where;xdrproc_t proc;};
struct __attribute__((packed)) llc___94526051AE93F16537B4BA3D9839A03C___7008580425A2D9D299FFCC87FFBB188D {u_int8_t control;u_int8_t org_code[3];u_int16_t ether_type;};
union tagSQL_INTERVAL_STRUCT___E0CBF60BBC76AAAF9CF29F3CBADF463C {SQL_YEAR_MONTH_STRUCT year_month;SQL_DAY_SECOND_STRUCT day_second;};
union ocsp_responder_id_st___A140B48D11B7E00D603349F1A886D7E2 {X509_NAME *byName;ASN1_OCTET_STRING *byKey;};
union ocsp_cert_status_st___0CEB729C6D376DBCC2995D5CF424A18E {ASN1_NULL *good;OCSP_REVOKEDINFO *revoked;ASN1_NULL *unknown;};
union x86_exception_state___251411A5B45F799EBE3F14281E77BAD6 {x86_exception_state32_t es32;x86_exception_state64_t es64;};
union DIST_POINT_NAME_st___A95B7E1D2A8BC0A3F405D6FFBE373ACE {GENERAL_NAMES *fullname;STACK *relativename;};
union x509_attributes_st___66E1659F4D2A4D8BBB27251FF152F229 {char *ptr;STACK *set;ASN1_TYPE *single;};
union x86_thread_state___D2D4D49B333AEF99596DF2F7E46595A4 {x86_thread_state32_t ts32;x86_thread_state64_t ts64;};
struct icmp___115915189B36D486427C31680FC3CC99__ih_rtradv {u_char irt_num_addrs;u_char irt_wpa;u_int16_t irt_lifetime;};
union ndrv_demux_desc___5E87C9BB192401A2CD612B3326A5C171 {u_int16_t ether_type;u_int8_t sap[3];u_int8_t snap[5];u_int8_t other[28];};
union x86_debug_state___DE64C214EB37D0506E9F0452E3D9193B {x86_debug_state32_t ds32;x86_debug_state64_t ds64;};
union x86_float_state___598376F8C40D36F3E63ABC99E645E7DC {x86_float_state32_t fs32;x86_float_state64_t fs64;};
union accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44 {struct accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44___AC186CABF9007C2DA87CD3BECABD7D45 AR_versions;struct accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44___BFD7413E14FC21CAB05150D69A0647C0 AR_results;};
union rejected_reply___C3827AB85A505492A4D27FEA56330B1C {struct rejected_reply___C3827AB85A505492A4D27FEA56330B1C___AC186CABF9007C2DA87CD3BECABD7D45 RJ_versions;enum auth_stat RJ_why;};
struct __res_9_state___A41D3F045172AF5618492D381489FAF0 {struct in_addr addr;u_int32_t mask;};
union _ipfw_insn_if___EC942E50B238476A039FC141726BDF36 {struct in_addr ip;int32_t unit;};
struct ipp_request_u___453450608DF16096B88E9D5250CA9622 {ipp_uchar_t version[2];ipp_op_t operation_id;int request_id;};
struct ipp_request_u___5CC10970A8D293302D52B38947334AC6 {ipp_uchar_t version[2];ipp_status_t status_code;int request_id;};
union bpf_dltlist___DD4EE95841EE2FCCF4EE9A868D20E5D0 {u_int32_t *bflu_list;u_int64_t bflu_pad;};
struct in_sockinfo___8F8B1830DF140CEE3517CFE046A1DD9A {uint8_t in6_hlim;int in6_cksum;u_short in6_ifindex;short in6_hops;};
union ypbind_resp___CD49527FE086EB7F6D0E69C2C3AD50AC {u_int ypbind_error;ypbind_binding ypbind_bindinfo;};
union nextvend___7EA091B0963CBF62F9D73E9E3451E5E2 {u_char NV0[58];struct nextvend___7EA091B0963CBF62F9D73E9E3451E5E2___4C928A861DF53AA82E61C4313B0554E4 NV1;};
struct xinpcb64___5B229D794C9B59022271F29D340290EB {u_int8_t inp6_hlim;int inp6_cksum;u_short inp6_ifindex;short inp6_hops;};
struct inpcb___6F13D882517E6D5CBD1B080626F65DC4 {u_char inp4_ip_tos;u_int32_t inp4_options;u_int32_t inp4_moptions;};
union __RequestUnion__host_security_subsystem {__Request__host_security_create_task_token_t Request_host_security_create_task_token;__Request__host_security_set_task_token_t Request_host_security_set_task_token;};
typedef xmlParserInputBufferPtr (*xmlParserInputBufferCreateFilenameFunc)( char *URI, xmlCharEncoding enc);
union __ReplyUnion__host_security_subsystem {__Reply__host_security_create_task_token_t Reply_host_security_create_task_token;__Reply__host_security_set_task_token_t Reply_host_security_set_task_token;};
union __RequestUnion__clock_priv_subsystem {__Request__clock_set_time_t Request_clock_set_time;__Request__clock_set_attributes_t Request_clock_set_attributes;};
struct ip_timestamp__ipt_timestamp__ipt_ta {struct in_addr ipt_addr;n_long ipt_time;};
union __ReplyUnion__clock_priv_subsystem {__Reply__clock_set_time_t Reply_clock_set_time;__Reply__clock_set_attributes_t Reply_clock_set_attributes;};
typedef void mpo_vnode_label_associate_socket_t(kauth_cred_t cred, socket_t so, struct label *solabel, struct vnode *vp, struct label *vlabel);
struct _0452B6BEB4BFD9ACB6DF5B39ED6AAB75 {u_char status;u_int32_t ret;};
struct _0659FB689B9ADFB6E4914AFED3DC9D4E {u_int16_t no;u_int32_t list[16];};
struct _08EB952BF76DF7A29BEE12FBAEF31F94 {u_int32_t auid;u_int32_t euid;u_int32_t egid;u_int32_t ruid;u_int32_t rgid;u_int32_t pid;u_int32_t sid;au_tid32_t tid;};
union _2345F6273F81C99369AD5C0E36D3FD0F {mach_msg_empty_send_t send;mach_msg_empty_rcv_t rcv;};
struct _2852C95088D0304BB11C1621105E366D {size_t gl_pathc;int gl_matchc;size_t gl_offs;int gl_flags;char **gl_pathv;_2852C95088D0304BB11C1621105E366D___EBEEFF9F825AD5996D1BE6C50F3E6AFA __anonymous0;void (*gl_closedir)(void *);struct dirent *(*gl_readdir)(void *);void *(*gl_opendir)( char *);int (*gl_lstat)( char *, struct stat *);int (*gl_stat)( char *, struct stat *);};
struct _29C8CFA96D5273DFDE9FA38B770B2076 {u_int32_t s;u_int32_t ms;u_int16_t len;char *name;};
struct _3010519FC8E063AC13B61458A4695107 {netaddr_t np_receiver;netaddr_t np_owner;np_uid_t np_puid;np_uid_t np_sid;};
struct _32D888630742756CD8CEFEDBFEF3759B {u_int32_t ident;u_int16_t filter;u_int16_t flags;u_int32_t fflags;u_int32_t data;};
struct _3881F9B2E64C73F20ED412E5826C4AC3 {u_int32_t auid;u_int32_t euid;u_int32_t egid;u_int32_t ruid;u_int32_t rgid;u_int32_t pid;u_int32_t sid;au_tidaddr64_t tid;};
struct _42CAA206A1F917EEF51ECD514D7730BF {unsigned int bsize;unsigned int ffactor;unsigned int nelem;unsigned int cachesize;u_int32_t (*hash)( void *, size_t);int lorder;};
struct _44347996413661E1D088B7486211F639 {u_char type;u_int32_t id;};
struct _466E19AC50622C269D9BCEE6753F9E61 {mach_msg_header_t header;mach_msg_body_t body;};
union _4932DC24BA09BB104202CABB17FCEE34 {struct _4932DC24BA09BB104202CABB17FCEE34___557C3AE17C0268223A4DBA0527C77C11 ia_bytes;netaddr_t ia_netaddr;};
struct _59F23475065BD2E9F3FA293A04BFFD37 {mach_msg_header_t Head;NDR_record_t NDR;int which_port;};
struct _5E04D424E81EA6874558831D2FFF2B4D {mach_msg_header_t Head;NDR_record_t NDR;int lock_id;};
struct _5E073AC1240433595621B506EB1DA983 {mach_msg_header_t Head;NDR_record_t NDR;int n_ulocks;int policy;};
struct _669EF43B8E86E5E1B2D5831F1B9785B9 {mach_msg_header_t Head;NDR_record_t NDR;int options;};
struct _6BC0D17B2B96A5F91967EA8653FF4084 {mach_msg_header_t Head;NDR_record_t NDR;int policy;int value;};
struct _6C5D98EAC624033C396B1DA9760D33A0 {uint64_t offset;uint64_t length;uint8_t reserved0128[16];};
struct _73773A746C574143C0D7803E150049F9 {u_int32_t auid;u_int32_t euid;u_int32_t egid;u_int32_t ruid;u_int32_t rgid;u_int32_t pid;u_int32_t sid;au_tidaddr32_t tid;};
struct _739921EDD5E6EE8AE9C50191702F2D06 {u_int16_t domain;u_int16_t type;u_int16_t atype;u_int16_t l_port;u_int32_t l_addr[4];u_int32_t r_port;u_int32_t r_addr[4];};
struct _7CAB3563A0B63D1E94DFFC6057C63E4C {u_int32_t mode;u_int32_t uid;u_int32_t gid;u_int32_t fsid;u_int64_t nid;u_int64_t dev;};
struct _8BB03BD0BEB0A35EC535A731418A02E8 {unsigned long long flags;unsigned int cachesize;int maxkeypage;int minkeypage;unsigned int psize;int (*compare)( DBT *,  DBT *);size_t (*prefix)( DBT *,  DBT *);int lorder;};
struct _9A7E6AE5055FB004EEAAEBA0AF2BBD44 {__darwin_rune_t __min;__darwin_rune_t __max;__darwin_rune_t __map;__uint32_t *__types;};
struct _9AA8814A56848052027B4042AE3CFED4 {mach_msg_header_t header;mach_msg_trailer_t trailer;};
struct _A02E0C6A2318D7F918526EFE13F50746 {u_int32_t auid;u_int32_t euid;u_int32_t egid;u_int32_t ruid;u_int32_t rgid;u_int32_t pid;u_int32_t sid;au_tid64_t tid;};
struct _AAF01D1DF014C088EF592F6E4410D618 {mach_msg_header_t not_header;mach_msg_format_0_trailer_t trailer;};
struct _AE11D0CF51A850EC87EAB95E067600DD {u_int16_t magic;u_int32_t count;};
struct _B32155DE37EA00CA7D015F061033D0DB {uint8_t version;uint8_t size;uint8_t horizontal_precision;uint8_t vertical_precision;uint32_t latitude;uint32_t longitude;uint32_t altitude;};
struct _B609C4CC44C72843B520E4D8871C3E06 {mach_msg_header_t Head;NDR_record_t NDR;int table_entries;};
struct _BF6258091C70028000D911F61A5FB5AF {struct _ftsent *fts_cur;struct _ftsent *fts_child;struct _ftsent **fts_array;dev_t fts_dev;char *fts_path;int fts_rfd;int fts_pathlen;int fts_nitems;_BF6258091C70028000D911F61A5FB5AF___9EC190D15BEE7EEEBABA7EFAD959CEE4 __anonymous0;int fts_options;};
struct _C2E0EF1D854A0208E5318AF4389F85C9 {u_int8_t sid_kind;u_int8_t sid_authcount;u_int8_t sid_authority[6];u_int32_t sid_authorities[16];};
struct _C32751CD7C48DEB510AF18CB8191FD58 {u_int32_t mode;u_int32_t uid;u_int32_t gid;u_int32_t fsid;u_int64_t nid;u_int32_t dev;};
struct _D4151FDBB8529D6CBB93F4DEF633B437 {u_int16_t family;u_int16_t port;u_int32_t addr;};
struct _D66CE1D14E0A9D84788C1B396D687289 {u_int16_t type;u_int16_t l_port;u_int32_t l_addr;u_int16_t r_port;u_int32_t r_addr;};
struct _D81AFE54BC1383739B7B7705B8C42C3D {mach_msg_header_t Head;NDR_record_t NDR;int policy;};
struct _D896310976FBD32B984A6ABA327F9588 {u_int16_t family;u_int16_t port;u_int32_t addr[4];};
struct _DBA30DED97FFFF6D93797DB9E5CF4F43 {mach_msg_header_t Head;NDR_record_t NDR;int node;int which;};
struct _EC7035EF31280ED06745154F47D7D805 {u_char err;u_int64_t val;};
struct _F105F10DE5C66ECF2E7E726999936688 {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;};
union _F2859707886ADAFD301FD24E7C665704 {ffi_sarg sint;ffi_arg uint;float flt;char data[8];void *ptr;};
struct netsnmp_table_registration_info_s {netsnmp_variable_list *indexes;unsigned int number_indexes;unsigned int min_column;unsigned int max_column;netsnmp_column_info *valid_columns;};
typedef xmlOutputBufferPtr (*xmlOutputBufferCreateFilenameFunc)( char *URI, xmlCharEncodingHandlerPtr encoder, int compression);
typedef void (*DNSServiceDomainEnumerationReply)(DNSServiceDomainEnumerationReplyResultType resultType,  char *replyDomain, DNSServiceDiscoveryReplyFlags flags, void *context);
typedef int mpo_iokit_check_set_properties_t(kauth_cred_t cred, io_object_t entry, io_object_t properties);
typedef void mpo_cred_label_associate_fork_t(kauth_cred_t cred, proc_t proc);
typedef int mpo_socket_check_label_update_t(kauth_cred_t cred, socket_t so, struct label *so_label, struct label *newlabel);
typedef int mpo_vnode_check_deleteextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *vlabel,  char *name);
typedef void mpo_posixsem_label_associate_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel,  char *name);
typedef void mpo_posixshm_label_associate_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel,  char *name);
struct Netscape_certificate_sequence {ASN1_OBJECT *type;STACK *certs;};
struct __darwin_i386_exception_state {__uint16_t __trapno;__uint16_t __cpu;__uint32_t __err;__uint32_t __faultvaddr;};
typedef void (*iconv_wchar_mb_to_wc_fallback)( char *inbuf, size_t inbufsize, void (*write_replacement)( __darwin_wchar_t *buf, size_t buflen, void *callback_arg), void *callback_arg, void *data);
typedef void (*iconv_wchar_wc_to_mb_fallback)(__darwin_wchar_t code, void (*write_replacement)( char *buf, size_t buflen, void *callback_arg), void *callback_arg, void *data);
typedef int mpo_posixshm_check_truncate_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel, off_t len);
typedef int mpo_socket_check_getsockopt_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockopt *sopt);
typedef int mpo_socket_check_setsockopt_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockopt *sopt);
struct thread_time_constraint_policy {uint32_t period;uint32_t computation;uint32_t constraint;boolean_t preemptible;};
struct PROXY_CERT_INFO_EXTENSION_st {ASN1_INTEGER *pcPathLengthConstraint;PROXY_POLICY *proxyPolicy;};
typedef void mpo_socket_label_associate_t(kauth_cred_t cred, socket_t so, struct label *solabel);
typedef int mpo_vnode_check_getextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *label,  char *name, struct uio *uio);
typedef int mpo_vnode_check_setextattr_t(kauth_cred_t cred, struct vnode *vp, struct label *label,  char *name, struct uio *uio);
struct netsnmp_request_group_item_s {netsnmp_request_info *ri;netsnmp_table_request_info *tri;struct netsnmp_request_group_item_s *next;};
struct netsnmp_state_machine_step_s { char *name;u_int sm_flags;netsnmp_state_machine_func *run;int result;struct netsnmp_state_machine_step_s *on_success;struct netsnmp_state_machine_step_s *on_error;u_int flags;void *step_context;};
typedef void (*xsltStyleExtShutdownFunction)(xsltStylesheetPtr style,  xmlChar *URI, void *data);
struct dyld_cache_accelerator_info {uint32_t version;uint32_t imageExtrasCount;uint32_t imagesExtrasOffset;uint32_t bottomUpListOffset;uint32_t dylibTrieOffset;uint32_t dylibTrieSize;uint32_t initializersOffset;uint32_t initializersCount;uint32_t dofSectionsOffset;uint32_t dofSectionsCount;uint32_t reExportListOffset;uint32_t reExportCount;uint32_t depListOffset;uint32_t depListCount;uint32_t rangeTableOffset;uint32_t rangeTableCount;uint64_t dyldSectionAddr;};
struct dyld_cache_image_info_extra {uint64_t exportsTrieAddr;uint64_t weakBindingsAddr;uint32_t exportsTrieSize;uint32_t weakBindingsSize;uint32_t dependentsStartArrayIndex;uint32_t reExportsStartArrayIndex;};
struct gss_channel_bindings_struct {OM_uint32 initiator_addrtype;gss_buffer_desc initiator_address;OM_uint32 acceptor_addrtype;gss_buffer_desc acceptor_address;gss_buffer_desc application_data;};
union ip_timestamp__ipt_timestamp {n_long ipt_time[1];struct ip_timestamp__ipt_timestamp__ipt_ta ipt_ta[1];};
typedef int mpo_posixsem_check_create_t(kauth_cred_t cred,  char *name);
typedef int mpo_posixsem_check_unlink_t(kauth_cred_t cred, struct pseminfo *ps, struct label *semlabel,  char *name);
typedef int mpo_posixshm_check_create_t(kauth_cred_t cred,  char *name);
typedef int mpo_posixshm_check_unlink_t(kauth_cred_t cred, struct pshminfo *ps, struct label *shmlabel,  char *name);
typedef int mpo_socket_check_accepted_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockaddr *addr);
typedef int mpo_socket_check_kqfilter_t(kauth_cred_t cred, struct knote *kn, socket_t so, struct label *socklabel);
typedef void sasl_client_info_callback_t(client_sasl_mechanism_t *m, sasl_info_callback_stage_t stage, void *rock);
typedef void sasl_server_info_callback_t(server_sasl_mechanism_t *m, sasl_info_callback_stage_t stage, void *rock);
typedef STORE_OBJECT *(*STORE_NEXT_OBJECT_FUNC_PTR)(STORE *, void *handle);
typedef curl_socket_t _curl_opensocket_callback1(void *, curlsocktype, struct curl_sockaddr *);
typedef curl_socket_t _curl_opensocket_callback2(void *, curlsocktype,  struct curl_sockaddr *);
typedef curl_socket_t _curl_opensocket_callback3( void *, curlsocktype, struct curl_sockaddr *);
typedef curl_socket_t _curl_opensocket_callback4( void *, curlsocktype,  struct curl_sockaddr *);
struct dyld_cache_accelerator_dof {uint64_t sectionAddress;uint32_t sectionSize;uint32_t imageIndex;};
typedef int mpo_socket_check_connect_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockaddr *addr);
typedef int mpo_socket_check_receive_t(kauth_cred_t cred, socket_t so, struct label *socklabel);
typedef int mpo_vnode_check_setflags_t(kauth_cred_t cred, struct vnode *vp, struct label *label, u_long flags);
struct netsnmp_stash_cache_data_s {void *data;size_t data_len;u_char data_type;};
struct netsnmp_stash_cache_info_s {int cache_valid;marker_t cache_time;netsnmp_oid_stash_node *cache;int cache_length;};
struct pkcs7_issuer_and_serial_st {X509_NAME *issuer;ASN1_INTEGER *serial;};
struct memory_object_behave_info {memory_object_copy_strategy_t copy_strategy;boolean_t temporary;boolean_t invalidate;boolean_t silent_overwrite;boolean_t advisory_pageout;};
typedef int mpo_socket_check_accept_t(kauth_cred_t cred, socket_t so, struct label *socklabel);
typedef int mpo_socket_check_listen_t(kauth_cred_t cred, socket_t so, struct label *socklabel);
typedef int mpo_socket_check_select_t(kauth_cred_t cred, socket_t so, struct label *socklabel, int which);
typedef void mpo_socket_label_update_t(kauth_cred_t cred, socket_t so, struct label *so_label, struct label *newlabel);
typedef int mpo_sysvsem_check_semop_t(kauth_cred_t cred, struct semid_kernel *semakptr, struct label *semaklabel, size_t accesstype);
typedef int mpo_vnode_check_setmode_t(kauth_cred_t cred, struct vnode *vp, struct label *label, mode_t mode);
struct register_sysOR_parameters {char *descr;oid *name;size_t namelen;};
typedef void (*unparsedEntityDeclSAXFunc)(void *ctx,  xmlChar *name,  xmlChar *publicId,  xmlChar *systemId,  xmlChar *notationName);
typedef curl_socket_t (*curl_opensocket_callback)(void *clientp, curlsocktype purpose, struct curl_sockaddr *address);
struct gss_krb5_rfc1964_keydata {OM_uint32 sign_alg;OM_uint32 seal_alg;gss_krb5_lucid_key_t ctx_key;};
typedef int (*ldap_sync_search_entry_f)(ldap_sync_t *ls, LDAPMessage *msg, struct berval *entryUUID, ldap_sync_refresh_t phase);
typedef int mpo_proc_check_setauid_t(kauth_cred_t cred, uid_t auid);
struct netsnmp_oid_stash_node_s {oid value;struct netsnmp_oid_stash_node_s **children;size_t children_size;struct netsnmp_oid_stash_node_s *next_sibling;struct netsnmp_oid_stash_node_s *prev_sibling;struct netsnmp_oid_stash_node_s *parent;void *thedata;};
struct netsnmp_table_data_set_s {netsnmp_table_data *table;netsnmp_table_data_set_storage *default_row;int allow_creation;unsigned int rowstatus_column;};
typedef void *(*xsltStyleExtInitFunction)(xsltStylesheetPtr style,  xmlChar *URI);
typedef int Netsnmp_User_Row_Action(netsnmp_index *, netsnmp_index *, netsnmp_request_group *);
typedef int _curl_sockopt_callback1(void *, curl_socket_t, curlsocktype);
typedef int _curl_sockopt_callback2( void *, curl_socket_t, curlsocktype);
typedef CURLcode _curl_ssl_ctx_callback1(CURL *, void *, void *);
typedef CURLcode _curl_ssl_ctx_callback2(CURL *, void *,  void *);
typedef CURLcode _curl_ssl_ctx_callback3(CURL *,  void *, void *);
typedef CURLcode _curl_ssl_ctx_callback4(CURL *,  void *,  void *);
struct dyld_cache_mapping_info {uint64_t address;uint64_t size;uint64_t fileOffset;uint32_t maxProt;uint32_t initProt;};
struct gss_OID_set_desc_struct {size_t count;gss_OID elements;};
typedef int mpo_socket_check_bind_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockaddr *addr);
typedef int mpo_socket_check_send_t(kauth_cred_t cred, socket_t so, struct label *socklabel, struct sockaddr *addr);
typedef int mpo_socket_check_stat_t(kauth_cred_t cred, socket_t so, struct label *socklabel);
struct ocsp_service_locator_st {X509_NAME *issuer;STACK *locator;};
typedef int sasl_client_plug_init_t( sasl_utils_t *utils, int max_version, int *out_version, sasl_client_plug_t **pluglist, int *plugcount);
typedef int sasl_server_plug_init_t( sasl_utils_t *utils, int max_version, int *out_version, sasl_server_plug_t **pluglist, int *plugcount);
typedef xmlParserInputPtr (*xmlExternalEntityLoader)( char *URL,  char *ID, xmlParserCtxtPtr context);
typedef void (*xsltExtShutdownFunction)(xsltTransformContextPtr ctxt,  xmlChar *URI, void *data);
typedef void (*DNSServiceBrowserReply)(DNSServiceBrowserReplyResultType resultType,  char *replyName,  char *replyType,  char *replyDomain, DNSServiceDiscoveryReplyFlags flags, void *context);
typedef int (*STORE_GENERIC_FUNC_PTR)(STORE *,OPENSSL_ITEM  *    attributes, OPENSSL_ITEM parameters[]);
struct _passwd_phrase_element {krb5_magic magic;krb5_data *passwd;krb5_data *phrase;};
struct dyld_cache_range_entry {uint64_t startAddress;uint32_t size;uint32_t imageIndex;};
struct dyld_cache_slide_info2 {uint32_t version;uint32_t page_size;uint32_t page_starts_offset;uint32_t page_starts_count;uint32_t page_extras_offset;uint32_t page_extras_count;uint64_t delta_mask;uint64_t value_add;};
struct dyld_cache_slide_info3 {uint32_t version;uint32_t page_size;uint32_t page_starts_count;uint32_t padding;uint64_t auth_value_add;};
typedef int mpo_file_check_fcntl_t(kauth_cred_t cred, struct fileglob *fg, struct label *label, int cmd, user_long_t arg);
typedef int mpo_iokit_check_open_t(kauth_cred_t cred, io_object_t user_client, unsigned int user_client_type);
typedef int mpo_vnode_check_exec_t(kauth_cred_t cred, struct vnode *vp, struct label *label, struct label *execlabel, struct componentname *cnp, u_int *csflags);
struct netsnmp_old_api_info_s {struct variable *var;size_t varsize;size_t numvars;netsnmp_session *ss;int flags;};
struct netsnmp_watcher_info_s {void *data;size_t data_size;size_t max_size;u_char type;int flags;size_t *data_size_p;};
struct prebound_dylib_command {uint32_t cmd;uint32_t cmdsize;union lc_str name;uint32_t nmodules;union lc_str linked_modules;};
typedef void (*xmlEntityReferenceFunc)(xmlEntityPtr ent, xmlNodePtr firstNode, xmlNodePtr lastNode);
typedef void (*xmlTextReaderErrorFunc)(void *arg,  char *msg, xmlParserSeverities severity, xmlTextReaderLocatorPtr locator);
struct ACCESS_DESCRIPTION_st {ASN1_OBJECT *method;GENERAL_NAME *location;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusAttrInlineData {u_int32_t recordType;u_int32_t reserved;u_int32_t logicalSize;u_int8_t userData[2];};
struct X509V3_CONF_METHOD_st {char *(*get_string)(void *db, char *section, char *value);STACK *(*get_section)(void *db, char *section);void (*free_string)(void *db, char *string);void (*free_section)(void *db, STACK *section);};
typedef curlioerr _curl_ioctl_callback1(CURL *, int, void *);
typedef curlioerr _curl_ioctl_callback2(CURL *, int,  void *);
typedef size_t _curl_write_callback3( char *, size_t, size_t, FILE *);
typedef size_t _curl_write_callback6( void *, size_t, size_t, FILE *);
typedef int (*cups_client_cert_cb_t)(http_t *http, void *tls, cups_array_t *distinguished_names, void *user_data);
typedef int (*cups_server_cert_cb_t)(http_t *http, void *tls, cups_array_t *certs, void *user_data);
typedef int (*curl_sockopt_callback)(void *clientp, curl_socket_t curlfd, curlsocktype purpose);
typedef CURLcode (*curl_ssl_ctx_callback)(CURL *curl, void *ssl_ctx, void *userptr);
struct dyld_cache_image_info {uint64_t address;uint64_t modTime;uint64_t inode;uint32_t pathFileOffset;uint32_t pad;};
typedef void (*externalSubsetSAXFunc)(void *ctx,  xmlChar *name,  xmlChar *ExternalID,  xmlChar *SystemID);
typedef void (*internalSubsetSAXFunc)(void *ctx,  xmlChar *name,  xmlChar *ExternalID,  xmlChar *SystemID);
struct krb5_authorization_st {ASN1_INTEGER *adtype;ASN1_OCTET_STRING *addata;};
struct krb5_encryptionkey_st {ASN1_INTEGER *ktype;ASN1_OCTET_STRING *keyvalue;};
struct netsnmp_log_handler_s {int enabled;int priority;int pri_max;int type; char *token;NetsnmpLogHandler *handler;int imagic;void *magic;netsnmp_log_handler *next;netsnmp_log_handler *prev;};
struct policy_timeshare_info {integer_t max_priority;integer_t base_priority;integer_t cur_priority;boolean_t depressed;integer_t depress_priority;};
typedef int sasl_canonuser_init_t( sasl_utils_t *utils, int max_version, int *out_version, sasl_canonuser_plug_t **plug,  char *plugname);
struct sub_framework_command {uint32_t cmd;uint32_t cmdsize;union lc_str umbrella;};
struct tagSQL_NUMERIC_STRUCT {SQLCHAR precision;SQLSCHAR scale;SQLCHAR sign;SQLCHAR val[16];};
struct __attribute__((packed)) __attribute__((aligned(2))) FndrExtendedFileInfo {u_int32_t reserved1;u_int32_t date_added;u_int16_t extended_flags;u_int16_t reserved2;u_int32_t reserved3;};
struct X509_VERIFY_PARAM_st {char *name;time_t check_time;unsigned long long inh_flags;unsigned long long flags;int purpose;int trust;int depth;STACK *policies;};
typedef CURLcode (*_curl_conv_callback1)(char *, size_t length);
typedef CURLcode (*_curl_conv_callback2)( char *, size_t length);
typedef CURLcode (*_curl_conv_callback3)(void *, size_t length);
typedef CURLcode (*_curl_conv_callback4)( void *, size_t length);
typedef size_t _curl_read_callback3(char *, size_t, size_t, FILE *);
typedef size_t _curl_read_callback6(void *, size_t, size_t, FILE *);
typedef CURLcode (*_curl_seek_callback1)(void *, curl_off_t, int);
typedef CURLcode (*_curl_seek_callback2)( void *, curl_off_t, int);
typedef void (*attributeDeclSAXFunc)(void *ctx,  xmlChar *elem,  xmlChar *fullname, int type, int def,  xmlChar *defaultValue, xmlEnumerationPtr tree);
typedef int (*curl_socket_callback)(CURL *easy, curl_socket_t s, int what, void *userp, void *socketp);
typedef void (*curl_unlock_function)(CURL *handle, curl_lock_data data, void *userptr);
struct dtls1_record_data_st {unsigned char *packet;unsigned int packet_length;SSL3_BUFFER rbuf;SSL3_RECORD rrec;};
struct gss_krb5_cfx_keydata {OM_uint32 have_acceptor_subkey;gss_krb5_lucid_key_t ctx_key;gss_krb5_lucid_key_t acceptor_subkey;};
typedef mig_routine_t (*mig_server_routine_t)(mach_msg_header_t *InHeadP);
struct netsnmp_table_data_s {netsnmp_variable_list *indexes_template;char *name;int flags;int store_indexes;netsnmp_table_row *first_row;netsnmp_table_row *last_row;};
struct nfs_lock_msg_request {struct nfs_lock_msg_request___5813B4C1F7982A33B431354D3E39333E lmr_next;int lmr_answered;int lmr_errno;int lmr_saved_errno;LOCKD_MSG lmr_msg;};
struct ocsp_revoked_info_st {ASN1_GENERALIZEDTIME *revocationTime;ASN1_ENUMERATED *revocationReason;};
typedef xmlParserInputPtr (*resolveEntitySAXFunc)(void *ctx,  xmlChar *publicId,  xmlChar *systemId);
typedef int (*slapi_acl_callback_t)(Slapi_PBlock *pb, Slapi_Entry *e,  char *attr, struct berval *berval, int access, void *state);
struct sub_umbrella_command {uint32_t cmd;uint32_t cmdsize;union lc_str sub_umbrella;};
struct x86_seg_load_fault32 {uint16_t trapno;uint16_t cpu;uint32_t err;uint32_t eip;uint32_t cs;uint32_t efl;};
typedef void (*xsltTopLevelFunction)(xsltStylesheetPtr style, xmlNodePtr inst);
struct __attribute__((packed)) __attribute__((aligned(2))) FndrExtendedDirInfo {u_int32_t point;u_int32_t date_added;u_int16_t extended_flags;u_int16_t reserved3;u_int32_t reserved4;};
struct _xsltTransformCache {xmlDocPtr RVT;int nbRVT;xsltStackElemPtr stackItems;int nbStackItems;};
typedef curlioerr (*curl_ioctl_callback)(CURL *handle, int cmd, void *clientp);
typedef int (*curl_sshkeycallback)(CURL *easy,  struct curl_khkey *knownkey,  struct curl_khkey *foundkey, enum curl_khmatch, void *clientp);
typedef int (*dynamic_bind_engine)(ENGINE *e,  char *id,  dynamic_fns *fns);
struct netsnmp_tdata_row_s {netsnmp_index oid_index;netsnmp_variable_list *indexes;void *data;};
typedef void (*notationDeclSAXFunc)(void *ctx,  xmlChar *name,  xmlChar *publicId,  xmlChar *systemId);
struct ocsp_one_request_st {OCSP_CERTID *reqCert;STACK *singleRequestExtensions;};
struct routines_command_64 {uint32_t cmd;uint32_t cmdsize;uint64_t init_address;uint64_t init_module;uint64_t reserved1;uint64_t reserved2;uint64_t reserved3;uint64_t reserved4;uint64_t reserved5;uint64_t reserved6;};
struct sadb_x_ipsecrequest {u_int16_t sadb_x_ipsecrequest_len;u_int16_t sadb_x_ipsecrequest_proto;u_int8_t sadb_x_ipsecrequest_mode;u_int8_t sadb_x_ipsecrequest_level;u_int16_t sadb_x_ipsecrequest_reqid;};
typedef int sasl_auxprop_init_t( sasl_utils_t *utils, int max_version, int *out_version, sasl_auxprop_plug_t **plug,  char *plugname);
typedef void (*startElementSAXFunc)(void *ctx,  xmlChar *name,  xmlChar **atts);
struct sub_library_command {uint32_t cmd;uint32_t cmdsize;union lc_str sub_library;};
struct x86_exception_state {x86_state_hdr_t esh;union x86_exception_state___251411A5B45F799EBE3F14281E77BAD6 ues;};
typedef void (*xmlRegExecCallbacks)(xmlRegExecCtxtPtr exec,  xmlChar *token, void *transdata, void *inputdata);
typedef int (*xsltAddCallCallback)(xsltTemplatePtr templ, xmlNodePtr source);
typedef void *(*xsltExtInitFunction)(xsltTransformContextPtr ctxt,  xmlChar *URI);
typedef int ASN1_primitive_c2i(ASN1_VALUE **pval,  unsigned char *cont, int len, int utype, char *free_cont,  ASN1_ITEM *it);
typedef int ASN1_primitive_i2c(ASN1_VALUE **pval, unsigned char *cont, int *putype,  ASN1_ITEM *it);
typedef int (*ENGINE_CIPHERS_PTR)(ENGINE *,  EVP_CIPHER **,  int **, int);
typedef int (*ENGINE_DIGESTS_PTR)(ENGINE *,  EVP_MD **,  int **, int);
struct GENERAL_SUBTREE_st {GENERAL_NAME *base;ASN1_INTEGER *minimum;ASN1_INTEGER *maximum;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusAttrExtents {u_int32_t recordType;u_int32_t reserved;HFSPlusExtentRecord extents;};
struct X509_name_entry_st {ASN1_OBJECT *object;ASN1_STRING *value;int set;int size;};
typedef ssize_t (*cups_raster_iocb_t)(void *ctx, unsigned char *buffer, size_t length);
typedef CURLcode (*curl_conv_callback)(char *buffer, size_t length);
struct fbootstraptransfer {off_t fbt_offset;size_t fbt_length;void *fbt_buffer;};
struct mach_vm_read_entry {mach_vm_address_t address;mach_vm_size_t size;};
struct ocsp_resp_bytes_st {ASN1_OBJECT *responseType;ASN1_OCTET_STRING *response;};
struct pkcs7_encrypted_st {ASN1_INTEGER *version;PKCS7_ENC_CONTENT *enc_data;};
struct sub_client_command {uint32_t cmd;uint32_t cmdsize;union lc_str client;};
struct vm_page_info_basic {int disposition;int ref_count;vm_object_id_t object_id;memory_object_offset_t offset;int depth;int __pad;};
struct x509_attributes_st {ASN1_OBJECT *object;int single;union x509_attributes_st___66E1659F4D2A4D8BBB27251FF152F229 value;};
typedef void (*xmlHashDeallocator)(void *payload, xmlChar *name);
typedef void (*xmlHashScannerFull)(void *payload, void *data,  xmlChar *name,  xmlChar *name2,  xmlChar *name3);
typedef void ASN1_ex_free_func(ASN1_VALUE **pval,  ASN1_ITEM *it);
typedef int LDAP_URLLIST_PROC(LDAP *ld, LDAPURLDesc **urllist, LDAPURLDesc **url, void *params);
struct Netscape_spkac_st {X509_PUBKEY *pubkey;ASN1_IA5STRING *challenge;};
struct _xmlXPathVariable { xmlChar *name;xmlXPathObjectPtr value;};
struct _xsltRuntimeExtra {void *info;xmlFreeFunc deallocate;union _xsltRuntimeExtra___2329BC7224F5366634B0083FE3D0502D val;};
typedef void (*endElementSAXFunc)(void *ctx,  xmlChar *name);
typedef void (*entityDeclSAXFunc)(void *ctx,  xmlChar *name, int type,  xmlChar *publicId,  xmlChar *systemId, xmlChar *content);
struct kev_dl_proto_data {struct net_event_data link_data;u_int32_t proto_family;u_int32_t proto_remaining_count;};
struct krb5_princname_st {ASN1_INTEGER *nametype;STACK *namestring;};
struct __attribute__((packed)) nd_opt_route_info {u_int8_t nd_opt_rti_type;u_int8_t nd_opt_rti_len;u_int8_t nd_opt_rti_prefixlen;u_int8_t nd_opt_rti_flags;u_int32_t nd_opt_rti_lifetime;};
struct netsnmp_factory_s { char *product;netsnmp_factory_produce_f *produce;netsnmp_factory_produce_noalloc_f *produce_noalloc;};
struct ucred__posix_cred {uid_t cr_uid;uid_t cr_ruid;uid_t cr_svuid;short cr_ngroups;gid_t cr_groups[16];gid_t cr_rgid;gid_t cr_svgid;uid_t cr_gmuid;int cr_flags;};
typedef int (*xsltSecurityCheck)(xsltSecurityPrefsPtr sec, xsltTransformContextPtr ctxt,  char *value);
typedef int ASN1_ex_new_func(ASN1_VALUE **pval,  ASN1_ITEM *it);
struct _krb5_octet_data {krb5_magic magic;unsigned int length;krb5_octet *data;};
struct _xmlChRangeGroup {int nbShortRange;int nbLongRange; xmlChSRange *shortRange; xmlChLRange *longRange;};
typedef void (*attributeSAXFunc)(void *ctx,  xmlChar *name,  xmlChar *value);
struct dylinker_command {uint32_t cmd;uint32_t cmdsize;union lc_str name;};
struct in6_addrlifetime {time_t ia6t_expire;time_t ia6t_preferred;u_int32_t ia6t_vltime;u_int32_t ia6t_pltime;};
struct kev_in_portinuse {u_int16_t port;u_int32_t req_pid;u_int32_t reserved[2];};
struct krb5_checksum_st {ASN1_INTEGER *ctype;ASN1_OCTET_STRING *checksum;};
typedef int (*netsnmp_callback)(int, netsnmp_session *, int, netsnmp_pdu *, void *);
struct ocsp_response_st {ASN1_ENUMERATED *responseStatus;OCSP_RESPBYTES *responseBytes;};
struct policy_fifo_info {integer_t max_priority;integer_t base_priority;boolean_t depressed;integer_t depress_priority;};
typedef void (*referenceSAXFunc)(void *ctx,  xmlChar *name);
struct sadb_x_kmprivate {u_int16_t sadb_x_kmprivate_len;u_int16_t sadb_x_kmprivate_exttype;u_int32_t sadb_x_kmprivate_reserved;};
typedef int sasl_getsecret_t(sasl_conn_t *conn, void *context, int id, sasl_secret_t **psecret);
struct x86_thread_state {x86_state_hdr_t tsh;union x86_thread_state___D2D4D49B333AEF99596DF2F7E46595A4 uts;};
typedef xmlXPathObjectPtr (*xmlXPathAxisFunc)(xmlXPathParserContextPtr ctxt, xmlXPathObjectPtr cur);
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusAttrData {u_int32_t recordType;u_int32_t reserved[2];u_int32_t attrSize;u_int8_t attrData[2];};
struct PROXY_POLICY_st {ASN1_OBJECT *policyLanguage;ASN1_OCTET_STRING *policy;};
typedef Bool (*TidyOptCallback)(ctmbstr option, ctmbstr value);
struct dylib_module_64 {uint32_t module_name;uint32_t iextdefsym;uint32_t nextdefsym;uint32_t irefsym;uint32_t nrefsym;uint32_t ilocalsym;uint32_t nlocalsym;uint32_t iextrel;uint32_t nextrel;uint32_t iinit_iterm;uint32_t ninit_nterm;uint32_t objc_module_info_size;uint64_t objc_module_info_addr;};
struct fvmfile_command {uint32_t cmd;uint32_t cmdsize;union lc_str name;uint32_t header_addr;};
struct ipp_attribute_s {struct ipp_attribute_s *next;ipp_tag_t group_tag;ipp_tag_t value_tag;char *name;int num_values;ipp_value_t values[1];};
struct krb5_encdata_st {ASN1_INTEGER *etype;ASN1_INTEGER *kvno;ASN1_OCTET_STRING *cipher;};
typedef void ldap_conn_del_f(LDAP *ld, Sockbuf *sb, struct ldap_conncb *ctx);
typedef int lt_module_close(lt_user_data data, lt_module module);
struct ndrv_demux_desc {u_int16_t type;u_int16_t length;union ndrv_demux_desc___5E87C9BB192401A2CD612B3326A5C171 data;};
struct netsnmp_index_s {size_t len;oid *oids;};
struct netsnmp_tdata_s {netsnmp_variable_list *indexes_template;char *name;int flags;netsnmp_container *container;};
union nfs_quadconvert {u_int32_t lval[2];u_quad_t qval;};
struct ocsp_request_st {OCSP_REQINFO *tbsRequest;OCSP_SIGNATURE *optionalSignature;};
struct pkcs7_signed_st {ASN1_INTEGER *version;STACK *md_algs;STACK *cert;STACK *crl;STACK *signer_info;struct pkcs7_st *contents;};
struct proc_regioninfo {uint32_t pri_protection;uint32_t pri_max_protection;uint32_t pri_inheritance;uint32_t pri_flags;uint64_t pri_offset;uint32_t pri_behavior;uint32_t pri_user_wired_count;uint32_t pri_user_tag;uint32_t pri_pages_resident;uint32_t pri_pages_shared_now_private;uint32_t pri_pages_swapped_out;uint32_t pri_pages_dirtied;uint32_t pri_ref_count;uint32_t pri_shadow_depth;uint32_t pri_share_mode;uint32_t pri_private_pages_resident;uint32_t pri_shared_pages_resident;uint32_t pri_obj_id;uint32_t pri_depth;uint64_t pri_address;uint64_t pri_size;};
struct proc_threadinfo {uint64_t pth_user_time;uint64_t pth_system_time;int32_t pth_cpu_usage;int32_t pth_policy;int32_t pth_run_state;int32_t pth_flags;int32_t pth_sleep_time;int32_t pth_curpri;int32_t pth_priority;int32_t pth_maxpriority;char pth_name[64];};
struct rawarc_order_64 {uint64_t raw_frompc;uint64_t raw_selfpc;uint32_t raw_count;uint32_t raw_order;};
struct __attribute__((aligned(8))) sadb_session_id {u_int16_t sadb_session_id_len;u_int16_t sadb_session_id_exttype;u_int64_t sadb_session_id_v[2];};
struct segment_command {uint32_t cmd;uint32_t cmdsize;char segname[16];uint32_t vmaddr;uint32_t vmsize;uint32_t fileoff;uint32_t filesize;vm_prot_t maxprot;vm_prot_t initprot;uint32_t nsects;uint32_t flags;};
struct sockbuf_io_desc {int sbiod_level;Sockbuf *sbiod_sb;Sockbuf_IO *sbiod_io;void *sbiod_pvt;struct sockbuf_io_desc *sbiod_next;};
struct unw_proc_info_t {unw_word_t start_ip;unw_word_t end_ip;unw_word_t lsda;unw_word_t handler;unw_word_t gp;unw_word_t flags;uint32_t format;uint32_t unwind_info_size;unw_word_t unwind_info;unw_word_t extra;};
struct __attribute__((aligned(8))) vm_statistics64 {natural_t free_count;natural_t active_count;natural_t inactive_count;natural_t wire_count;uint64_t zero_fill_count;uint64_t reactivations;uint64_t pageins;uint64_t pageouts;uint64_t faults;uint64_t cow_faults;uint64_t lookups;uint64_t hits;uint64_t purges;natural_t purgeable_count;natural_t speculative_count;};
struct x86_debug_state {x86_state_hdr_t dsh;union x86_debug_state___DE64C214EB37D0506E9F0452E3D9193B uds;};
struct x86_float_state {x86_state_hdr_t fsh;union x86_float_state___598376F8C40D36F3E63ABC99E645E7DC ufs;};
typedef xp_error xp_colormap_fun(void *data, int first_color, int n_colors, uint32_t *colors);
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusAttrKey {u_int16_t keyLength;u_int16_t pad;u_int32_t fileID;u_int32_t startBlock;u_int16_t attrNameLen;u_int16_t attrName[127];};
struct _ipfw_insn_log {ipfw_insn o;u_int32_t max_log;u_int32_t log_left;};
struct _ipfw_insn_mac {ipfw_insn o;u_char addr[12];u_char mask[12];};
struct _ipfw_insn_u16 {ipfw_insn o;u_int16_t ports[2];};
struct _ipfw_insn_u32 {ipfw_insn o;u_int32_t d[1];};
struct _krb5_pwd_data {krb5_magic magic;int sequence_count;passwd_phrase_element **element;};
struct _mime_filter_s {mime_type_t *src;mime_type_t *dst;int cost;char filter[256];size_t maxsize;};
struct _xmlXPathFunct { xmlChar *name;xmlXPathEvalFunc func;};
struct asn1_header_st {ASN1_OCTET_STRING *header;void *data;ASN1_METHOD *meth;};
struct asn1_method_st {i2d_of_void *i2d;d2i_of_void *d2i;void *(*create)(void);void (*destroy)(void *);};
struct au_evclass_map {au_event_t ec_number;au_class_t ec_class;};
struct bp_getfile_arg {bp_machine_name_t client_name;bp_fileid_t file_id;};
typedef int conf_init_func(CONF_IMODULE *md,  CONF *cnf);
struct policy_rr_info {integer_t max_priority;integer_t base_priority;integer_t quantum;boolean_t depressed;integer_t depress_priority;};
struct rejected_reply {enum reject_stat rj_stat;union rejected_reply___C3827AB85A505492A4D27FEA56330B1C ru;};
typedef res_9_sendhookact (*res_send_qhook)(struct sockaddr * *ns,  u_char **query, int *querylen, u_char *ans, int anssiz, int *resplen);
typedef res_9_sendhookact (*res_send_rhook)( struct sockaddr *ns,  u_char *query, int querylen, u_char *ans, int anssiz, int *resplen);
struct sadb_supported {u_int16_t sadb_supported_len;u_int16_t sadb_supported_exttype;u_int32_t sadb_supported_reserved;};
struct sqlite3_module {int iVersion;int (*xCreate)(sqlite3 *, void *pAux, int argc,  char * *argv, sqlite3_vtab **ppVTab, char **);int (*xConnect)(sqlite3 *, void *pAux, int argc,  char * *argv, sqlite3_vtab **ppVTab, char **);int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info *);int (*xDisconnect)(sqlite3_vtab *pVTab);int (*xDestroy)(sqlite3_vtab *pVTab);int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);int (*xClose)(sqlite3_vtab_cursor *);int (*xFilter)(sqlite3_vtab_cursor *, int idxNum,  char *idxStr, int argc, sqlite3_value **argv);int (*xNext)(sqlite3_vtab_cursor *);int (*xEof)(sqlite3_vtab_cursor *);int (*xColumn)(sqlite3_vtab_cursor *, sqlite3_context *, int);int (*xRowid)(sqlite3_vtab_cursor *, sqlite3_int64 *pRowid);int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);int (*xBegin)(sqlite3_vtab *pVTab);int (*xSync)(sqlite3_vtab *pVTab);int (*xCommit)(sqlite3_vtab *pVTab);int (*xRollback)(sqlite3_vtab *pVTab);int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg,  char *zName, void (**pxFunc)(sqlite3_context *, int, sqlite3_value **), void **ppArg);int (*xRename)(sqlite3_vtab *pVtab,  char *zNew);};
struct tagDATE_STRUCT {SQLSMALLINT year;SQLUSMALLINT month;SQLUSMALLINT day;};
struct x509_lookup_st {int init;int skip;X509_LOOKUP_METHOD *method;char *method_data;X509_STORE *store_ctx;};
typedef void (*xmlHashScanner)(void *payload, void *data, xmlChar *name);
struct yppushresp_xfr {u_int transid;yppush_status status;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSCatalogKey {u_int8_t keyLength;u_int8_t reserved;u_int32_t parentID;u_int8_t nodeName[32];};
struct POLICYINFO_st {ASN1_OBJECT *policyid;STACK *qualifiers;};
struct USERNOTICE_st {NOTICEREF *noticeref;ASN1_STRING *exptext;};
struct X509_algor_st {ASN1_OBJECT *algorithm;ASN1_TYPE *parameter;};
struct _ipfw_insn_ip {ipfw_insn o;struct in_addr addr;struct in_addr mask;};
struct _xmlXPathAxis { xmlChar *name;xmlXPathAxisFunc func;};
struct _xsltKeyTable {struct _xsltKeyTable *next;xmlChar *name;xmlChar *nameURI;xmlHashTablePtr keys;};
struct attrreference {int32_t attr_dataoffset;u_int32_t attr_length;};
struct bio_method_st {int type; char *name;int (*bwrite)(BIO *,  char *, int);int (*bread)(BIO *, char *, int);int (*bputs)(BIO *,  char *);int (*bgets)(BIO *, char *, int);long long (*ctrl)(BIO *, int, long long, void *);int (*create)(BIO *);int (*destroy)(BIO *);long long (*callback_ctrl)(BIO *, int, bio_info_cb *);};
struct bp_whoami_res {bp_machine_name_t client_name;bp_machine_name_t domain_name;bp_address router_address;};
struct env_md_ctx_st { EVP_MD *digest;ENGINE *engine;unsigned long long flags;void *md_data;};
struct evp_cipher_st {int nid;int block_size;int key_len;int iv_len;unsigned long long flags;int (*init)(EVP_CIPHER_CTX *ctx,  unsigned char *key,  unsigned char *iv, int enc);int (*do_cipher)(EVP_CIPHER_CTX *ctx, unsigned char *out,  unsigned char *in, unsigned int inl);int (*cleanup)(EVP_CIPHER_CTX *);int ctx_size;int (*set_asn1_parameters)(EVP_CIPHER_CTX *, ASN1_TYPE *);int (*get_asn1_parameters)(EVP_CIPHER_CTX *, ASN1_TYPE *);int (*ctrl)(EVP_CIPHER_CTX *, int type, int arg, void *ptr);void *app_data;};
typedef  lt_dlvtable *lt_get_vtable(lt_user_data data);
struct mach_port_qos {unsigned int name : 1;unsigned int prealloc : 1;unsigned int pad1 : 30;natural_t len;};
struct mb_class_stat {char mbcl_cname[16];u_int32_t mbcl_size;u_int32_t mbcl_total;u_int32_t mbcl_active;u_int32_t mbcl_infree;u_int32_t mbcl_slab_cnt;u_int32_t mbcl_pad;u_int64_t mbcl_alloc_cnt;u_int64_t mbcl_free_cnt;u_int64_t mbcl_notified;u_int64_t mbcl_purge_cnt;u_int64_t mbcl_fail_cnt;u_int32_t mbcl_ctotal;u_int32_t mbcl_mc_state;u_int32_t mbcl_mc_cached;u_int32_t mbcl_mc_waiter_cnt;u_int32_t mbcl_mc_wretry_cnt;u_int32_t mbcl_mc_nwretry_cnt;u_int64_t mbcl_reserved[4];};
struct __attribute__((packed)) ni_reply_fqdn {u_int32_t ni_fqdn_ttl;u_int8_t ni_fqdn_namelen;u_int8_t ni_fqdn_name[3];};
struct nlm4_shareres {netobj cookie;nlm4_stats stat;int sequence;};
struct pcap_etherent {u_char addr[6];char name[122];};
struct ppd_coption_s {char keyword[41];ppd_option_t *option;int marked;cups_array_t *params;};
struct proc_taskinfo {uint64_t pti_virtual_size;uint64_t pti_resident_size;uint64_t pti_total_user;uint64_t pti_total_system;uint64_t pti_threads_user;uint64_t pti_threads_system;int32_t pti_policy;int32_t pti_faults;int32_t pti_pageins;int32_t pti_cow_faults;int32_t pti_messages_sent;int32_t pti_messages_received;int32_t pti_syscalls_mach;int32_t pti_syscalls_unix;int32_t pti_csw;int32_t pti_threadnum;int32_t pti_numrunning;int32_t pti_priority;};
struct pstats__uprof {struct uprof *pr_next;caddr_t pr_base;u_int32_t pr_size;u_int32_t pr_off;u_int32_t pr_scale;u_int32_t pr_addr;u_int32_t pr_ticks;};
struct rpath_command {uint32_t cmd;uint32_t cmdsize;union lc_str path;};
struct sadb_spirange {u_int16_t sadb_spirange_len;u_int16_t sadb_spirange_exttype;u_int32_t sadb_spirange_min;u_int32_t sadb_spirange_max;u_int32_t sadb_spirange_reserved;};
typedef int (*snmp_callback)(int, netsnmp_session *, int, netsnmp_pdu *, void *);
typedef void *(*xmlHashCopier)(void *payload, xmlChar *name);
struct ypresp_master {ypstat stat;peername peer;};
typedef int AddVarMethod(netsnmp_agent_session *asp, netsnmp_variable_list *vbp);
struct NOTICEREF_st {ASN1_STRING *organization;STACK *noticenos;};
struct X509_name_st {STACK *entries;int modified;BUF_MEM *bytes;unsigned long long hash;};
struct _krb5_ap_rep {krb5_magic magic;krb5_enc_data enc_part;};
struct au_event_ent {au_event_t ae_number;char *ae_name;char *ae_desc;au_class_t ae_class;};
struct au_tidaddr64 {u_int64_t port;u_int32_t type;u_int32_t addr[4];};
struct ether_header {u_char ether_dhost[6];u_char ether_shost[6];u_short ether_type;};
struct except_frame {err_code_t err;unsigned int eip;sel_t cs;unsigned int : 0;unsigned int eflags;unsigned int esp;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} ss;unsigned int : 0;unsigned short v_es;unsigned int : 0;unsigned short v_ds;unsigned int : 0;unsigned short v_fs;unsigned int : 0;unsigned short v_gs;unsigned int : 0;};
struct in_addr_4in6 {u_int32_t ia46_pad32[3];struct in_addr ia46_addr4;};
struct ip_timestamp {u_char ipt_code;u_char ipt_len;u_char ipt_ptr;unsigned int ipt_flg : 4;unsigned int ipt_oflw : 4;union ip_timestamp__ipt_timestamp ipt_timestamp;};
struct nlm_shareres {netobj cookie;nlm_stats stat;int sequence;};
struct otherName_st {ASN1_OBJECT *type_id;ASN1_TYPE *value;};
struct request_info {int fd;char user[128];char daemon[128];char pid[10];struct host_info client[1];struct host_info server[1];void (*sink)();void (*hostname)();void (*hostaddr)();void (*cleanup)();struct netconfig *config;};
struct sadb_address {u_int16_t sadb_address_len;u_int16_t sadb_address_exttype;u_int8_t sadb_address_proto;u_int8_t sadb_address_prefixlen;u_int16_t sadb_address_reserved;};
struct sioc_vif_req {vifi_t vifi;u_int32_t icount;u_int32_t ocount;u_int32_t ibytes;u_int32_t obytes;};
struct uuid_command {uint32_t cmd;uint32_t cmdsize;uint8_t uuid[16];};
typedef void (*xsltSortFunc)(xsltTransformContextPtr ctxt, xmlNodePtr *sorts, int nbsorts);
struct ypresp_order {ypstat stat;u_int ordernum;};
typedef int ASN1_aux_cb(int operation, ASN1_VALUE **in,  ASN1_ITEM *it);
typedef int ASN1_ex_i2d(ASN1_VALUE **pval, unsigned char **out,  ASN1_ITEM *it, int tag, int aclass);
struct Block_byref {void *isa;struct Block_byref *forwarding;int32_t flags;uint32_t size;};
struct PBEPARAM_st {ASN1_OCTET_STRING *salt;ASN1_INTEGER *iter;};
struct SXNET_ID_st {ASN1_INTEGER *zone;ASN1_OCTET_STRING *user;};
struct X509_sig_st {X509_ALGOR *algor;ASN1_OCTET_STRING *digest;};
struct _TidyBuffer {byte *bp;uint size;uint allocated;uint next;};
struct au_tid_addr {dev_t at_port;u_int32_t at_type;u_int32_t at_addr[4];};
struct bpf_dltlist {u_int32_t bfl_len;union bpf_dltlist___DD4EE95841EE2FCCF4EE9A868D20E5D0 bfl_u;};
struct comp_ctx_st {COMP_METHOD *meth;unsigned long long compress_in;unsigned long long compress_out;unsigned long long expand_in;unsigned long long expand_out;CRYPTO_EX_DATA ex_data;};
struct cups_lang_s {struct cups_lang_s *next;int used;cups_encoding_t encoding;char language[16];cups_array_t *strings;};
struct evp_pkey_st {int type;int save_type;int references;union evp_pkey_st___0C617F08CD1CBFCEA8637CF9C21CDE81 pkey;int save_parameters;STACK *attributes;};
struct fsignatures {off_t fs_file_start;void *fs_blob_start;size_t fs_blob_size;};
struct hmac_ctx_st { EVP_MD *md;EVP_MD_CTX md_ctx;EVP_MD_CTX i_ctx;EVP_MD_CTX o_ctx;unsigned int key_length;unsigned char key[128];};
struct igmp_report {u_char ir_type;u_char ir_rsv1;u_short ir_cksum;u_short ir_rsv2;u_short ir_numgrps;};
struct __attribute__((aligned(8))) igmpstat_v3 {uint32_t igps_version;uint32_t igps_len;uint64_t igps_rcv_total;uint64_t igps_rcv_tooshort;uint64_t igps_rcv_badttl;uint64_t igps_rcv_badsum;uint64_t igps_rcv_v1v2_queries;uint64_t igps_rcv_v3_queries;uint64_t igps_rcv_badqueries;uint64_t igps_rcv_gen_queries;uint64_t igps_rcv_group_queries;uint64_t igps_rcv_gsr_queries;uint64_t igps_drop_gsr_queries;uint64_t igps_rcv_reports;uint64_t igps_rcv_badreports;uint64_t igps_rcv_ourreports;uint64_t igps_rcv_nora;uint64_t igps_snd_reports;uint64_t __igps_pad[4];};
struct in4in6_addr {u_int32_t i46a_pad32[3];struct in_addr i46a_addr4;};
typedef void *lt_find_sym(lt_user_data data, lt_module module,  char *symbolname);
struct mib_atEntry {int atIfIndex;u_char atPhysAddress[11];u_char PhysAddressLen;u_int atNetAddress;};
struct mib_ifEntry {int ifIndex;char ifDescr[32];int ifType;int ifMtu;u_int ifSpeed;u_char ifPhysAddress[11];u_char PhysAddrLen;int ifAdminStatus;int ifOperStatus;u_int ifLastChange;u_int ifInOctets;u_int ifInUcastPkts;u_int ifInNUcastPkts;u_int ifInDiscards;u_int ifInErrors;u_int ifInUnknownProtos;u_int ifOutOctets;u_int ifOutUcastPkts;u_int ifOutNUcastPkts;u_int ifOutDiscards;u_int ifOutErrors;u_int ifOutQLen;};
struct ppd_group_s {char text[40];char name[41];int num_options;ppd_option_t *options;int num_subgroups;struct ppd_group_s *subgroups;};
struct proc_fdinfo {int32_t proc_fd;uint32_t proc_fdtype;};
struct rmtcallargs {unsigned int prog;unsigned int vers;unsigned int proc;unsigned int arglen;caddr_t args_ptr;xdrproc_t xdr_args;};
struct __attribute__((aligned(8))) sadb_sastat {u_int16_t sadb_sastat_len;u_int16_t sadb_sastat_exttype;u_int32_t sadb_sastat_dir;u_int32_t sadb_sastat_reserved;u_int32_t sadb_sastat_list_len;};
struct sioc_sg_req {struct in_addr src;struct in_addr grp;u_int32_t pktcnt;u_int32_t bytecnt;u_int32_t wrong_if;};
struct sockaddr_dl {u_char sdl_len;u_char sdl_family;u_short sdl_index;u_char sdl_type;u_char sdl_nlen;u_char sdl_alen;u_char sdl_slen;char sdl_data[12];};
typedef int (*xmlShellCmd)(xmlShellCtxtPtr ctxt, char *arg, xmlNodePtr node, xmlNodePtr node2);
struct ypbind_resp {ypbind_resptype ypbind_status;union ypbind_resp___CD49527FE086EB7F6D0E69C2C3AD50AC ypbind_resp_u;};
struct ypreq_nokey {domainname domain;mapname map;};
struct _ipfw_insn {int opcode : 8;u_int8_t len;u_int16_t arg1;};
struct _xmlBuffer {xmlChar *content;unsigned int use;unsigned int size;xmlBufferAllocationScheme alloc;xmlChar *contentIO;};
typedef voidpf (*alloc_func)(voidpf opaque, uInt items, uInt size);
struct au_session {auditinfo_addr_t *as_aia_p;au_mask_t as_mask;};
struct cups_job_s {int id;char *dest;char *title;char *user;char *format;ipp_jstate_t state;int size;int priority;time_t completed_time;time_t creation_time;time_t processing_time;};
struct curl_khkey { char *key;size_t len;enum curl_khkey__type keytype;};
struct mib_system {char sysDescr[32];u_char sysObjectID[16];u_char ObjIDLen;u_int sysUpTime;};
struct nlm_holder {int exclusive;int svid;netobj oh;u_int l_offset;u_int l_len;};
struct rmtcallres {unsigned int *port_ptr;unsigned int resultslen;caddr_t results_ptr;xdrproc_t xdr_results;};
struct rt_metrics {u_int32_t rmx_locks;u_int32_t rmx_mtu;u_int32_t rmx_hopcount;int32_t rmx_expire;u_int32_t rmx_recvpipe;u_int32_t rmx_sendpipe;u_int32_t rmx_ssthresh;u_int32_t rmx_rtt;u_int32_t rmx_rttvar;u_int32_t rmx_pksent;u_int32_t rmx_filler[4];};
struct sadb_ident {u_int16_t sadb_ident_len;u_int16_t sadb_ident_exttype;u_int16_t sadb_ident_type;u_int16_t sadb_ident_reserved;u_int64_t sadb_ident_id;};
struct section_64 {char sectname[16];char segname[16];uint64_t addr;uint64_t size;uint32_t offset;uint32_t align;uint32_t reloff;uint32_t nreloc;uint32_t flags;uint32_t reserved1;uint32_t reserved2;uint32_t reserved3;};
struct spraycumul {u_int counter;spraytimeval clock;};
struct statsswtch {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_oerrors;int if_collisions;u_int v_swtch;u_int avenrun[3];rstat_timeval boottime;int if_opackets;};
struct ypresp_val {ypstat stat;valdat val;};
struct ypresp_xfr {u_int transid;ypxfrstat xfrstat;};
struct env_md_st {int type;int pkey_type;int md_size;unsigned long long flags;int (*init)(EVP_MD_CTX *ctx);int (*update)(EVP_MD_CTX *ctx,  void *data, size_t count);int (*final)(EVP_MD_CTX *ctx, unsigned char *md);int (*copy)(EVP_MD_CTX *to,  EVP_MD_CTX *from);int (*cleanup)(EVP_MD_CTX *ctx);int (*sign)(int type,  unsigned char *m, unsigned int m_length, unsigned char *sigret, unsigned int *siglen, void *key);int (*verify)(int type,  unsigned char *m, unsigned int m_length,  unsigned char *sigbuf, unsigned int siglen, void *key);int required_pkey_type[5];int block_size;int ctx_size;};
struct groupnode {name gr_name;groups gr_next;};
struct rawarc_64 {uint64_t raw_frompc;uint64_t raw_selfpc;int32_t raw_count;};
struct sadb_prop {u_int16_t sadb_prop_len;u_int16_t sadb_prop_exttype;u_int8_t sadb_prop_replay;u_int8_t sadb_prop_reserved[3];};
struct sigaction {union __sigaction_u __sigaction_u;sigset_t sa_mask;int sa_flags;};
struct statstime {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_oerrors;int if_collisions;u_int v_swtch;int avenrun[3];rstat_timeval boottime;rstat_timeval curtime;int if_opackets;};
struct txt_db_st {int num_fields;STACK *data;LHASH **index;int (**qual)(char **);long long error;long long arg1;long long arg2;char **arg_row;};
struct zone_info {integer_t zi_count;vm_size_t zi_cur_size;vm_size_t zi_max_size;vm_size_t zi_elem_size;vm_size_t zi_alloc_size;integer_t zi_pageable;integer_t zi_sleepable;integer_t zi_exhaustible;integer_t zi_collectable;};
union BTreeKey {u_int8_t length8;u_int16_t length16;u_int8_t rawData[522];};
struct SXNET_st {ASN1_INTEGER *version;STACK *ids;};
struct au_tid64 {u_int64_t port;u_int32_t addr;};
union err_code {struct err_code__err_code_normal normal;struct err_code__err_code_pgfault pgfault;};
struct fhstatus {u_int fhs_status;union fhstatus___5A86E21E7BD06EF982D138486E7C27D0 fhstatus_u;};
struct fp_state {fp_env_t fp_environ;fp_stack_t fp_stack;};
struct klm_lock {char *server_name;netobj fh;int pid;u_int l_offset;u_int l_len;};
struct nextvend {u_char nv_magic[4];u_char nv_version;unsigned short : 0;union {u_char NV0[58];struct nextvend___7EA091B0963CBF62F9D73E9E3451E5E2___4C928A861DF53AA82E61C4313B0554E4 NV1;} nv_U;};
struct nfs_args {int version;struct sockaddr *addr;int addrlen;int sotype;int proto;u_char *fh;int fhsize;int flags;int wsize;int rsize;int readdirsize;int timeo;int retrans;int maxgrouplist;int readahead;int leaseterm;int deadthresh;char *hostname;int acregmin;int acregmax;int acdirmin;int acdirmax;uint32_t auth;uint32_t deadtimeout;};
struct nlm4_res {netobj cookie;nlm4_stat stat;};
struct nlm_lock {char *caller_name;netobj fh;netobj oh;int svid;u_int l_offset;u_int l_len;};
struct nt_sid_t {u_int8_t sid_kind;u_int8_t sid_authcount;u_int8_t sid_authority[6];u_int32_t sid_authorities[16];};
struct sadb_alg {u_int8_t sadb_alg_id;u_int8_t sadb_alg_ivlen;u_int16_t sadb_alg_minbits;u_int16_t sadb_alg_maxbits;u_int16_t sadb_alg_reserved;};
struct sigevent {int sigev_notify;int sigev_signo;union sigval sigev_value;void (*sigev_notify_function)(union sigval);pthread_attr_t *sigev_notify_attributes;};
struct sockaddr {__uint8_t sa_len;sa_family_t sa_family;char sa_data[14];};
struct xsockbuf {u_int32_t sb_cc;u_int32_t sb_hiwat;u_int32_t sb_mbcnt;u_int32_t sb_mbmax;int32_t sb_lowat;short sb_flags;short sb_timeo;};
struct __sFILE {unsigned char *_p;int _r;int _w;short _flags;short _file;struct __sbuf _bf;int _lbfsize;void *_cookie;int (*_close)(void *);int (*_read)(void *, char *, int);fpos_t (*_seek)(void *, fpos_t, int);int (*_write)(void *,  char *, int);struct __sbuf _ub;struct __sFILEX *_extra;int _ur;unsigned char _ubuf[3];unsigned char _nbuf[1];struct __sbuf _lb;int _blksize;fpos_t _offset;};
struct _mime_s {cups_array_t *types;cups_array_t *filters;cups_array_t *srcs;mime_error_cb_t error_cb;void *error_ctx;};
struct _xmlDoc {void *_private;xmlElementType type;char *name;struct _xmlNode *children;struct _xmlNode *last;struct _xmlNode *parent;struct _xmlNode *next;struct _xmlNode *prev;struct _xmlDoc *doc;int compression;int standalone;struct _xmlDtd *intSubset;struct _xmlDtd *extSubset;struct _xmlNs *oldNs; xmlChar *version; xmlChar *encoding;void *ids;void *refs; xmlChar *URL;int charset;struct _xmlDict *dict;void *psvi;int parseFlags;int properties;};
struct _xmlDtd {void *_private;xmlElementType type; xmlChar *name;struct _xmlNode *children;struct _xmlNode *last;struct _xmlDoc *parent;struct _xmlNode *next;struct _xmlNode *prev;struct _xmlDoc *doc;void *notations;void *elements;void *attributes;void *entities; xmlChar *ExternalID; xmlChar *SystemID;void *pentities;};
struct _xmlRef {struct _xmlRef *next; xmlChar *value;xmlAttrPtr attr; xmlChar *name;int lineno;};
struct conf_st {CONF_METHOD *meth;void *meth_data;LHASH *data;};
struct ffi_cif {ffi_abi abi;unsigned int nargs;ffi_type **arg_types;ffi_type *rtype;unsigned int bytes;unsigned int flags;};
struct gmonhdr {uint32_t lpc;uint32_t hpc;uint32_t ncnt;int32_t version;int32_t profrate;int32_t spare[3];};
struct mb_stat {u_int32_t mbs_cnt;u_int32_t mbs_pad;mb_class_stat_t mbs_class[1];};
struct nlm_res {netobj cookie;nlm_stat stat;};
struct ombstat {u_int32_t m_mbufs;u_int32_t m_clusters;u_int32_t m_spare;u_int32_t m_clfree;u_int32_t m_drops;u_int32_t m_wait;u_int32_t m_drain;u_short m_mtypes[256];u_int32_t m_mcfail;u_int32_t m_mpfail;u_int32_t m_msize;u_int32_t m_mclbytes;u_int32_t m_minclsize;u_int32_t m_mlen;u_int32_t m_mhlen;};
struct pipebuf {u_int cnt;u_int in;u_int out;u_int size;caddr_t buffer;};
struct statvfs {unsigned long long f_bsize;unsigned long long f_frsize;fsblkcnt_t f_blocks;fsblkcnt_t f_bfree;fsblkcnt_t f_bavail;fsfilcnt_t f_files;fsfilcnt_t f_ffree;fsfilcnt_t f_favail;unsigned long long f_fsid;unsigned long long f_flag;unsigned long long f_namemax;};
struct tagITEM {TEXT name;TEXT description;struct tagMENU *imenu;void *userptr;Item_Options opt;short index;short y;short x;char value;struct tagITEM *left;struct tagITEM *right;struct tagITEM *up;struct tagITEM *down;};
struct timeval {__darwin_time_t tv_sec;__darwin_suseconds_t tv_usec;};
struct vmspace {int32_t dummy;caddr_t dummy2;int32_t dummy3[5];caddr_t dummy4[3];};
struct vmtotal {int16_t t_rq;int16_t t_dw;int16_t t_pw;int16_t t_sl;int16_t t_sw;int32_t t_vm;int32_t t_avm;int32_t t_rm;int32_t t_arm;int32_t t_vmshr;int32_t t_avmshr;int32_t t_rmshr;int32_t t_armshr;int32_t t_free;};
struct CLIENT {AUTH *cl_auth;struct CLIENT__clnt_ops *cl_ops;caddr_t cl_private;};
struct _pcred {char pc_lock[72];struct ucred *pc_ucred;uid_t p_ruid;uid_t p_svuid;gid_t p_rgid;gid_t p_svgid;int p_refcnt;};
struct _xmlID {struct _xmlID *next; xmlChar *value;xmlAttrPtr attr; xmlChar *name;int lineno;struct _xmlDoc *doc;};
struct _xmlNs {struct _xmlNs *next;xmlNsType type; xmlChar *href; xmlChar *prefix;void *_private;struct _xmlDoc *context;};
struct arphdr {u_short ar_hrd;u_short ar_pro;u_char ar_hln;u_char ar_pln;u_short ar_op;};
struct au_tid {dev_t port;u_int32_t machine;};
struct bio_st {BIO_METHOD *method;long long (*callback)(struct bio_st *, int,  char *, int, long long, long long);char *cb_arg;int init;int shutdown;int flags;int retry_reason;int num;void *ptr;struct bio_st *next_bio;struct bio_st *prev_bio;int references;unsigned long long num_read;unsigned long long num_write;CRYPTO_EX_DATA ex_data;};
struct fp_env {fp_control_t control;unsigned short : 16;struct {unsigned short invalid : 1;unsigned short denorm : 1;unsigned short zdiv : 1;unsigned short ovrfl : 1;unsigned short undfl : 1;unsigned short precis : 1;unsigned short stkflt : 1;unsigned short errsumm : 1;unsigned short c0 : 1;unsigned short c1 : 1;unsigned short c2 : 1;unsigned short tos : 3;unsigned short c3 : 1;unsigned short busy : 1;} status;unsigned short : 16;struct {unsigned short tag0 : 2;unsigned short tag1 : 2;unsigned short tag2 : 2;unsigned short tag3 : 2;unsigned short tag4 : 2;unsigned short tag5 : 2;unsigned short tag6 : 2;unsigned short tag7 : 2;} tag;unsigned short : 16;unsigned int ip;struct {unsigned short rpl : 2;unsigned short ti : 1;unsigned short index : 13;} cs;unsigned short opcode;unsigned int dp;sel_t ds;unsigned short : 16;};
struct fvmlib {union lc_str name;uint32_t minor_version;uint32_t header_addr;};
struct mbstat {u_int32_t m_mbufs;u_int32_t m_clusters;u_int32_t m_spare;u_int32_t m_clfree;u_int32_t m_drops;u_int32_t m_wait;u_int32_t m_drain;u_short m_mtypes[256];u_int32_t m_mcfail;u_int32_t m_mpfail;u_int32_t m_msize;u_int32_t m_mclbytes;u_int32_t m_minclsize;u_int32_t m_mlen;u_int32_t m_mhlen;u_int32_t m_bigclusters;u_int32_t m_bigclfree;u_int32_t m_bigmclbytes;};
struct rawarc {uint32_t raw_frompc;uint32_t raw_selfpc;int32_t raw_count;};
struct dqblk {u_int64_t dqb_bhardlimit;u_int64_t dqb_bsoftlimit;u_int64_t dqb_curbytes;u_int32_t dqb_ihardlimit;u_int32_t dqb_isoftlimit;u_int32_t dqb_curinodes;u_int32_t dqb_btime;u_int32_t dqb_itime;u_int32_t dqb_id;u_int32_t dqb_spare[4];};
struct dylib {union lc_str name;uint32_t timestamp;uint32_t current_version;uint32_t compatibility_version;};
struct entry {TERMTYPE tterm;unsigned int nuses;struct entry___2AA5CCCB9D787A2137C075D7F71DDB10 uses[32];int ncrosslinks;struct entry *crosslinks[16];long long cstart;long long cend;long long startline;struct entry *next;struct entry *last;};
struct flock {off_t l_start;off_t l_len;pid_t l_pid;short l_type;short l_whence;};
struct __db {DBTYPE type;int (*close)(struct __db *);int (*del)( struct __db *,  DBT *, unsigned int);int (*get)( struct __db *,  DBT *, DBT *, unsigned int);int (*put)( struct __db *, DBT *,  DBT *, unsigned int);int (*seq)( struct __db *, DBT *, DBT *, unsigned int);int (*sync)( struct __db *, unsigned int);void *internal;int (*fd)( struct __db *);};
struct vend {u_char v_magic[4];u_int32_t v_flags;u_char v_unused[56];};
union wait {int w_status;struct wait___7577FAE843D32618A04985FDB883FD87 w_T;struct wait___D2BE3D1E9784782BB73F97C8AEDA900E w_S;};
struct wide {UInt32 lo;SInt32 hi;};
union _575360315CF0A1A248958A58C9E14896___F155898B76A3E20E5DB971F93B5B2ECD {struct pkcs12_bag_st *bag;struct pkcs8_priv_key_info_st *keybag;X509_SIG *shkeybag;STACK *safes;ASN1_TYPE *other;};
union netsnmp_table_data_set_storage_s___954B107E84134B44758BAB124B2F79B4 {void *voidp;long long *integer;u_char *string;oid *objid;u_char *bitstring;struct counter64 *counter64;float *floatVal;double *doubleVal;};
struct ip6_hdr___55051B7F048FF6C7BE508169AD51FCBE__ip6_hdrctl {u_int32_t ip6_un1_flow;u_int16_t ip6_un1_plen;u_int8_t ip6_un1_nxt;u_int8_t ip6_un1_hlim;};
union POLICYQUALINFO_st___E7597F3F5DDB1DDEEAC7773A1D67D4FA {ASN1_IA5STRING *cpsuri;USERNOTICE *usernotice;ASN1_TYPE *other;};
union x509_object_st___0BEAA7EF7F7C8AAD9DD0E8F95323714A {char *ptr;X509 *x509;X509_CRL *crl;EVP_PKEY *pkey;};
union pkcs12_bag_st___040857FDBC76680A083043065CFE20BF {ASN1_OCTET_STRING *x509cert;ASN1_OCTET_STRING *x509crl;ASN1_OCTET_STRING *octet;ASN1_IA5STRING *sdsicert;ASN1_TYPE *other;};
union icmp6_hdr___D19D92B5F4F43A148CE7ABC3DA9CAAC9 {u_int32_t icmp6_un_data32[1];u_int16_t icmp6_un_data16[2];u_int8_t icmp6_un_data8[4];};
union in6_addr___330434928707C706902F20BE7BA89EB4 {__uint8_t __u6_addr8[16];__uint16_t __u6_addr16[8];__uint32_t __u6_addr32[4];};
union rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1 {int RE_errno;enum auth_stat RE_why;struct rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1___AC186CABF9007C2DA87CD3BECABD7D45 RE_vers;struct rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1___BF7AC7AAFAE2A9D4F26CD1E6B816F6B2 RE_lb;};
struct _0046B6E3F76960040C1982B0037A2659 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t previous;};
struct _05EECDE53F008AE0E4F8A84193F3FFF1 {struct opaque_auth ah_cred;struct opaque_auth ah_verf;union des_block ah_key;struct _05EECDE53F008AE0E4F8A84193F3FFF1__auth_ops *ah_ops;caddr_t ah_private;};
struct _0B988009212B8FCCED068699BCED27D9 {u_char no;u_int32_t val;u_int16_t len;char *text;};
struct _0C23990C9A3077933200554184D19969 {u_int32_t size;u_char version;u_int16_t e_type;u_int16_t e_mod;u_int32_t s;u_int32_t ms;};
struct _11759426EFCC6514E2B26D384F50B504 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_set;};
struct _159FB0235BDFD67877B1788BD964EBBB {u_char no;u_int64_t val;u_int16_t len;char *text;};
struct _1AD567D4B9681C99D01C1D9A823E24D4 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t io_master;};
union _1B35D174FFD6F02B21E6704B4C951A67 {long long *integer;u_char *string;oid *objid;u_char *bitstring;struct counter64 *counter64;float *floatVal;double *doubleVal;};
struct _2267E9288D5132BEF4B5A8B0E8AC33A6 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;int state;};
struct _25B9151150FDB1BB89C80B2A8A85F680 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t lock_set;};
struct _28467C2BF1D87957FF78F1692EFD23EF {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_offset_t offset;};
struct _2CB2463B5AF9A96AD792E2C849F46E7F {mach_msg_header_t Head;NDR_record_t NDR;mach_timespec_t new_time;};
struct _2CC85076D34FF07332855A5130D49334 {void (*undefined)( char *symbolName);NSModule (*multiple)(NSSymbol s, NSModule oldModule, NSModule newModule);void (*linkEdit)(NSLinkEditErrors errorClass, int errorNumber,  char *fileName,  char *errorString);};
struct _30B637321B49B494EE6ED11BDEC8DE9E {ASN1_INTEGER *version;PKCS12_MAC_DATA *mac;PKCS7 *authsafes;};
struct _333F68BA2C53B7EE0F2D13B448D38F51 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t server;};
struct _3E6B1E6034954B23411B3542CA61CBC7 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t port;};
struct _457976D3B172FC6C2C90056836B3956E {dk_format_capacity_t *capacities;uint32_t capacitiesCount;uint8_t reserved0096[4];};
struct _47B1E0FCCF87277E593C854FB80D0521 {mach_msg_header_t Head;NDR_record_t NDR;int max_priority;boolean_t change_threads;};
struct _48128538EAAA3D95320DEC45BE60FE04 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t clock_ctrl;};
struct _488333C1932ECE7496D2930CA2056B6D {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t assigned_set;};
struct _49303478B7A3DE4A3AC5102047AEEEA3 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t set;};
struct _4B8804F6523751A831C00C572669AA3C {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t child_act;};
struct _4D17AC1D92846D89C56307C20B09863A {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t set_name;};
struct _54E3C4845DCBBBAE0B28E8CAF275DF3F {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;};
struct _56709C31788A185985ED8F80CB75C10C {mach_msg_header_t Head;NDR_record_t NDR;processor_flavor_t flavor;};
struct _575360315CF0A1A248958A58C9E14896 {ASN1_OBJECT *type;union _575360315CF0A1A248958A58C9E14896___F155898B76A3E20E5DB971F93B5B2ECD value;STACK *attrib;};
struct _575BADC95B9991A2B9CD2F3725868B8D {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t default_set;};
struct _587EA17CD82C334AC5A48AFEDB918C96 {mach_msg_header_t Head;NDR_record_t NDR;clock_id_t clock_id;};
struct _59AA03472FCFCA397F68DC3419B6E0CE {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t clock_serv;};
struct _5A17788FF526DC41EE65ED362A8F9A06 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t control_port;};
struct _6D6FBD65E5352D7C5B2633444A27C2EA {uint64_t blockCount;uint32_t blockSize;uint8_t reserved0096[4];};
struct _704B6F3E1CAEFA74D31888B2D78F9F88 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t semaphore;};
struct _74034741CFA65827A1EC04C7057A4BA2 {dk_extent_t *extents;uint32_t extentsCount;uint8_t reserved0096[4];};
struct _7568DFD570526C5C2FE600A63FF7542E {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t contorl_port;};
struct _778EB01A7E54F11D251DAE9DCCA40C02 {mach_msg_header_t Head;NDR_record_t NDR;boolean_t must_wire;};
struct _78A516661F8337ED491DEA9E817B9015 {X509_SIG *dinfo;ASN1_OCTET_STRING *salt;ASN1_INTEGER *iter;};
struct _7AB3BC546F9F35ECC7BE0179CB611F91 { char *name;cpu_type_t cputype;cpu_subtype_t cpusubtype;enum NXByteOrder byteorder; char *description;};
struct _7CAB042C95D279B03371C67C49CFDDCE {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_lock_set;};
struct _7E94C3F61C7C39FF74FA3EBDC1E527FF {u_char version;u_char tos;u_int16_t len;u_int16_t id;u_int16_t offset;u_char ttl;u_char prot;u_int16_t chksm;u_int32_t src;u_int32_t dest;};
struct _86F29632C393BEC61052C835C8FE3129 {mach_msg_header_t Head;NDR_record_t NDR;boolean_t assign_threads;};
struct _8C51462DCCBA10E8B75CFFF786FC297E {mach_msg_header_t Head;NDR_record_t NDR;vm_offset_t offset;};
struct _92C88324278AB154CB324C17F95F0A4E {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t entry_handle;};
struct _AFE166C1B1045E0C8B7F866BEC963EDA {mach_msg_header_t Head;NDR_record_t NDR;exception_mask_t exception_mask;};
struct _B58E161BB725F9F52DF6F7C15EFA30EA {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;unsigned int dnr_total;unsigned int dnr_used;};
struct _B6133C04D7E68696884D0F2477EC89D3 {mach_msg_header_t Head;NDR_record_t NDR;int policy;boolean_t change_threads;};
struct _B9D89F8ED69AD657CF8CCF6FD4EA24D0 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t default_manager;};
struct _CC043B3A15E15755209E3A20F84F16AB {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_set;mach_msg_port_descriptor_t new_name;};
struct _CEE03D2EA6896FBF3749E2AC26AFF34E {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;unsigned int object_type;unsigned int object_addr;};
struct _D0C9668C16251A7C1942AA04B3C1BAAB {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t port_id;};
struct _D48A1587B9C67DDCC12D42BCFEC74299 {mach_msg_header_t Head;NDR_record_t NDR;kmod_t module;};
struct _DA3EF9D89B837FDE93915298E895B43B {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t child_task;};
struct _E65ABC06A11602FED23D2457B8AEAC9D {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t special_port;};
struct _EA7534D780195B9F22D1174E6CA3EFC2 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t poly;};
struct _EB461EAC719110594EB746F8AD525682 {struct in_addr addr;uint8_t protocol;uint32_t maplength;uint8_t *map;};
struct _EC40C8956DA7A36243DBF2EA18E7021D {u_int32_t size;u_char version;u_int16_t e_type;u_int16_t e_mod;u_int32_t ad_type;u_int32_t addr[4];u_int32_t s;u_int32_t ms;};
struct _F1B3AE218D4ECD7C43A384264AB43EE3 {mach_msg_header_t Head;NDR_record_t NDR;boolean_t trace_status;};
struct _FB19EE544F0F316F1E6BF9A40B1BEA34 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_ledger;};
struct _FDCFA80C9015498DB49FE80C74BE4ADF {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t reply;};
union __RequestUnion__clock_subsystem {__Request__clock_get_time_t Request_clock_get_time;__Request__clock_get_attributes_t Request_clock_get_attributes;__Request__clock_alarm_t Request_clock_alarm;};
struct __darwin_x86_exception_state64 {__uint16_t __trapno;__uint16_t __cpu;__uint32_t __err;__uint64_t __faultvaddr;};
struct netsnmp_handler_registration_s {char *handlerName;char *contextName;oid *rootoid;size_t rootoid_len;netsnmp_mib_handler *handler;int modes;int priority;int range_subid;oid range_ubound;int timeout;int global_cacheid;void *my_reg_void;};
union __ReplyUnion__clock_subsystem {__Reply__clock_get_time_t Reply_clock_get_time;__Reply__clock_get_attributes_t Reply_clock_get_attributes;__Reply__clock_alarm_t Reply_clock_alarm;};
union __RequestUnion__exc_subsystem {__Request__exception_raise_t Request_exception_raise;__Request__exception_raise_state_t Request_exception_raise_state;__Request__exception_raise_state_identity_t Request_exception_raise_state_identity;};
typedef int (*STORE_HANDLE_OBJECT_FUNC_PTR)(STORE *, STORE_OBJECT_TYPES type,OPENSSL_ITEM  *    attributes, OPENSSL_ITEM parameters[]);
typedef int (*STORE_MODIFY_OBJECT_FUNC_PTR)(STORE *, STORE_OBJECT_TYPES type,OPENSSL_ITEM  *    search_attributes, OPENSSL_ITEM add_attributes[],OPENSSL_ITEM  *    modify_attributes, OPENSSL_ITEM delete_attributes[],OPENSSL_ITEM  *    parameters);
typedef void *(*STORE_START_OBJECT_FUNC_PTR)(STORE *, STORE_OBJECT_TYPES type,OPENSSL_ITEM  *    attributes, OPENSSL_ITEM parameters[]);
union __ReplyUnion__exc_subsystem {__Reply__exception_raise_t Reply_exception_raise;__Reply__exception_raise_state_t Reply_exception_raise_state;__Reply__exception_raise_state_identity_t Reply_exception_raise_state_identity;};
struct pkcs7_signedandenveloped_st {ASN1_INTEGER *version;STACK *md_algs;STACK *cert;STACK *crl;STACK *signer_info;PKCS7_ENC_CONTENT *enc_data;STACK *recipientinfo;};
struct xp_async_error_event_struct {xp_request_type request_type;xp_resource_id id;xp_error error;};
typedef int Netsnmp_User_Get_Processor(netsnmp_request_info *, netsnmp_index *, netsnmp_table_request_info *);
struct dyld_cache_image_text_info {uuid_t uuid;uint64_t loadAddress;uint32_t textSegmentSize;uint32_t pathOffset;};
typedef int mpo_vnode_check_setowner_t(kauth_cred_t cred, struct vnode *vp, struct label *label, uid_t uid, gid_t gid);
struct netsnmp_tmStateReference_s {oid transportDomain[128];size_t transportDomainLen;char securityName[256];size_t securityNameLen;int requestedSecurityLevel;int transportSecurityLevel;char sameSecurity;char sessionID[8];char have_addresses;netsnmp_indexed_addr_pair addresses;void *otherTransportOpaque;};
struct rpc_routine_arg_descriptor {routine_arg_type type;routine_arg_size size;routine_arg_size count;routine_arg_offset offset;};
typedef xmlXPathObjectPtr (*xmlXPathVariableLookupFunc)(void *ctxt,  xmlChar *name,  xmlChar *ns_uri);
typedef void (*xsltHandleDebuggerCallback)(xmlNodePtr cur, xmlNodePtr node, xsltTemplatePtr templ, xsltTransformContextPtr ctxt);
typedef xmlEntityPtr (*getParameterEntitySAXFunc)(void *ctx,  xmlChar *name);
typedef krb5_error_code (*krb5_gic_process_last_req)(krb5_context, krb5_last_req_entry **, void *);
typedef int mpo_proc_check_map_anon_t(struct proc *proc, kauth_cred_t cred, user_addr_t u_addr, user_size_t u_size, int prot, int flags, int *maxprot);
typedef int mpo_proc_check_mprotect_t(kauth_cred_t cred, struct proc *proc, user_addr_t addr, user_size_t size, int prot);
typedef int (*ldap_sync_intermediate_f)(ldap_sync_t *ls, LDAPMessage *msg, BerVarray syncUUIDs, ldap_sync_refresh_t phase);
struct xp_window_changes_struct {int x;int y;unsigned int width;unsigned int height;int bit_gravity;int shape_nrects;xp_box *shape_rects;int shape_tx;int shape_ty;int stack_mode;xp_window_id sibling;unsigned int depth;xp_colormap_fun *colormap;void *colormap_data;int window_level;xp_window_id transient_for;};
struct _xmlCharEncodingHandler {char *name;xmlCharEncodingInputFunc input;xmlCharEncodingOutputFunc output;UConverter *utf8Converter;UConverter *encodingConverter;UChar *pivotBuffer;UChar *pivotSource;UChar *pivotTarget;int pivotLength;};
struct netsnmp_request_group_s {netsnmp_index index;netsnmp_container *table;netsnmp_index *existing_row;netsnmp_index *undo_info;char row_created;char row_deleted;char fill1;char fill2;netsnmp_request_group_item *list;int status;void *rg_void;};
struct crypto_ex_data_func_st {long long argl;void *argp;CRYPTO_EX_new *new_func;CRYPTO_EX_free *free_func;CRYPTO_EX_dup *dup_func;};
struct rpc_routine_descriptor {mig_impl_routine_t impl_routine;mig_stub_routine_t stub_routine;unsigned int argc;unsigned int descr_count;rpc_routine_arg_descriptor_t arg_descr;unsigned int max_reply_msg;};
typedef int (*slapi_compute_output_t)(computed_attr_context *c, Slapi_Attr *a, Slapi_Entry *e);
struct tagSQL_INTERVAL_STRUCT {SQLINTERVAL interval_type;SQLSMALLINT interval_sign;union tagSQL_INTERVAL_STRUCT___E0CBF60BBC76AAAF9CF29F3CBADF463C intval;};
typedef xmlXPathFunction (*xmlXPathFuncLookupFunc)(void *ctxt,  xmlChar *name,  xmlChar *ns_uri);
typedef int _curl_debug_callback1(CURL *, curl_infotype, char *, size_t, void *);
typedef int _curl_debug_callback2(CURL *, curl_infotype, char *, size_t,  void *);
typedef int _curl_debug_callback3(CURL *, curl_infotype,  char *, size_t, void *);
typedef int _curl_debug_callback4(CURL *, curl_infotype,  char *, size_t,  void *);
typedef curlioerr _curl_ioctl_callback3(CURL *, curliocmd, void *);
typedef curlioerr _curl_ioctl_callback4(CURL *, curliocmd,  void *);
typedef BOOL (*pConfigTranslatorFunc)(HWND hwndParent, DWORD *pvOption);
typedef void (*xsltTransformFunction)(xsltTransformContextPtr ctxt, xmlNodePtr node, xmlNodePtr inst, xsltElemPreCompPtr comp);
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusCatalogThread {int16_t recordType;int16_t reserved;u_int32_t parentID;HFSUniStr255 nodeName;};
struct _krb5_last_req_entry {krb5_magic magic;krb5_int32 lr_type;krb5_timestamp value;};
struct processor_basic_info {cpu_type_t cpu_type;cpu_subtype_t cpu_subtype;boolean_t running;int slot_num;boolean_t is_master;};
typedef EVP_PKEY *(*ENGINE_LOAD_KEY_PTR)(ENGINE *,  char *, UI_METHOD *ui_method, void *callback_data);
struct _krb5_encrypt_block {krb5_magic magic;krb5_enctype crypto_entry;krb5_keyblock *key;};
typedef int asn1_output_data_fn(BIO *out, BIO *data, ASN1_VALUE *val, int flags,  ASN1_ITEM *it);
typedef int (*curl_debug_callback)(CURL *handle, curl_infotype type, char *data, size_t size, void *userptr);
struct krb5_principal_data {krb5_magic magic;krb5_data realm;krb5_data *data;krb5_int32 length;krb5_int32 type;};
struct netsnmp_table_row_s {netsnmp_variable_list *indexes;oid *index_oid;size_t index_oid_len;void *data;struct netsnmp_table_row_s *next;struct netsnmp_table_row_s *prev;};
struct tagTIMESTAMP_STRUCT {SQLSMALLINT year;SQLUSMALLINT month;SQLUSMALLINT day;SQLUSMALLINT hour;SQLUSMALLINT minute;SQLUSMALLINT second;SQLUINTEGER fraction;};
struct AUTHORITY_KEYID_st {ASN1_OCTET_STRING *keyid;GENERAL_NAMES *issuer;ASN1_INTEGER *serial;};
struct PEM_Encode_Seal_st {EVP_ENCODE_CTX encode;EVP_MD_CTX md;EVP_CIPHER_CTX cipher;};
typedef void SecmodHandleReport(void *sessp, netsnmp_transport *transport, netsnmp_session *, int result, netsnmp_pdu *origpdu);
struct _xmlElementContent {xmlElementContentType type;xmlElementContentOccur ocur; xmlChar *name;struct _xmlElementContent *c1;struct _xmlElementContent *c2;struct _xmlElementContent *parent; xmlChar *prefix;};
struct _xmlSchemaNotation {xmlSchemaTypeType type; xmlChar *name;xmlSchemaAnnotPtr annot; xmlChar *identifier; xmlChar *targetNamespace;};
typedef void (*curl_lock_function)(CURL *handle, curl_lock_data data, curl_lock_access locktype, void *userptr);
typedef void (*elementDeclSAXFunc)(void *ctx,  xmlChar *name, int type, xmlElementContentPtr content);
struct pkcs7_enveloped_st {ASN1_INTEGER *version;STACK *recipientinfo;PKCS7_ENC_CONTENT *enc_data;};
struct routine_descriptor {mig_impl_routine_t impl_routine;mig_stub_routine_t stub_routine;unsigned int argc;unsigned int descr_count;routine_arg_descriptor_t arg_descr;unsigned int max_reply_msg;};
struct segment_command_64 {uint32_t cmd;uint32_t cmdsize;char segname[16];uint64_t vmaddr;uint64_t vmsize;uint64_t fileoff;uint64_t filesize;vm_prot_t maxprot;vm_prot_t initprot;uint32_t nsects;uint32_t flags;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusCatalogKey {u_int16_t keyLength;u_int32_t parentID;HFSUniStr255 nodeName;};
struct X509_extension_st {ASN1_OBJECT *object;ASN1_BOOLEAN critical;ASN1_OCTET_STRING *value;};
struct enginetime_struct {u_char *engineID;u_int engineID_len;u_int engineTime;u_int engineBoot;time_t lastReceivedEngineTime;u_int authenticatedFlag;struct enginetime_struct *next;};
struct evp_cipher_ctx_st { EVP_CIPHER *cipher;ENGINE *engine;int encrypt;int buf_len;unsigned char oiv[16];unsigned char iv[16];unsigned char buf[32];int num;void *app_data;int key_len;unsigned long long flags;void *cipher_data;int final_used;int block_mask;unsigned char final[32];};
struct ocsp_signature_st {X509_ALGOR *signatureAlgorithm;ASN1_BIT_STRING *signature;STACK *certs;};
struct proc_bsdshortinfo {uint32_t pbsi_pid;uint32_t pbsi_ppid;uint32_t pbsi_pgid;uint32_t pbsi_status;char pbsi_comm[16];uint32_t pbsi_flags;uid_t pbsi_uid;gid_t pbsi_gid;uid_t pbsi_ruid;gid_t pbsi_rgid;uid_t pbsi_svuid;gid_t pbsi_svgid;uint32_t pbsi_rfu;};
struct sasl_auxprop_plug {int features;int spare_int1;void *glob_context;void (*auxprop_free)(void *glob_context,  sasl_utils_t *utils);void (*auxprop_lookup)(void *glob_context, sasl_server_params_t *sparams, unsigned int flags,  char *user, unsigned int ulen);char *name;int (*auxprop_store)(void *glob_context, sasl_server_params_t *sparams, struct propctx *ctx,  char *user, unsigned int ulen);};
struct thread_basic_info {time_value_t user_time;time_value_t system_time;integer_t cpu_usage;policy_t policy;integer_t run_state;integer_t flags;integer_t suspend_count;integer_t sleep_time;};
struct CLIENT__clnt_ops {enum clnt_stat (*cl_call)(CLIENT *, unsigned int, xdrproc_t, void *, xdrproc_t, void *, struct timeval);void (*cl_abort)(void);void (*cl_geterr)(CLIENT *, struct rpc_err *);int (*cl_freeres)(CLIENT *, xdrproc_t, void *);void (*cl_destroy)(CLIENT *);int (*cl_control)(CLIENT *, int, char *);};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusExtentKey {u_int16_t keyLength;u_int8_t forkType;u_int8_t pad;u_int32_t fileID;u_int32_t startBlock;};
struct __attribute__((packed)) __attribute__((aligned(2))) JournalInfoBlock {u_int32_t flags;u_int32_t device_signature[8];u_int64_t offset;u_int64_t size;uuid_string_t ext_jnl_uuid;char machine_serial_num[48];char reserved[43];};
typedef int LDAP_REBIND_PROC(LDAP *ld,  char *url, ber_tag_t request, ber_int_t msgid, void *params);
struct Netscape_spki_st {NETSCAPE_SPKAC *spkac;X509_ALGOR *sig_algor;ASN1_BIT_STRING *signature;};
struct _ipfw_insn_limit {ipfw_insn o;u_int8_t _pad;u_int8_t limit_mask;u_int16_t conn_limit;};
typedef xmlEntityPtr (*getEntitySAXFunc)(void *ctx,  xmlChar *name);
struct kev_in_collision {struct net_event_data link_data;struct in_addr ia_ipaddr;u_char hw_len;u_char hw_addr[];};
struct krb5_replay_data {krb5_timestamp timestamp;krb5_int32 usec;krb5_ui_4 seq;};
struct ocsp_req_info_st {ASN1_INTEGER *version;GENERAL_NAME *requestorName;STACK *requestList;STACK *requestExtensions;};
struct pcap_file_header {bpf_u_int32 magic;u_short version_major;u_short version_minor;bpf_int32 thiszone;bpf_u_int32 sigfigs;bpf_u_int32 snaplen;bpf_u_int32 linktype;};
struct sockaddr_storage {__uint8_t ss_len;sa_family_t ss_family;char __ss_pad1[6];__int64_t __ss_align;char __ss_pad2[112];};
struct x509_cert_aux_st {STACK *trust;STACK *reject;ASN1_UTF8STRING *alias;ASN1_OCTET_STRING *keyid;STACK *other;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusForkData {u_int64_t logicalSize;u_int32_t clumpSize;u_int32_t totalBlocks;HFSPlusExtentRecord extents;};
struct X509_revoked_st {ASN1_INTEGER *serialNumber;ASN1_TIME *revocationDate;STACK *extensions;int sequence;};
struct _krb5_transited {krb5_magic magic;krb5_octet tr_type;krb5_data tr_contents;};
struct _xmlParserInput {xmlParserInputBufferPtr buf; char *filename; char *directory; xmlChar *base; xmlChar *cur; xmlChar *end;int length;int line;int col;unsigned long long consumed;xmlParserInputDeallocate free; xmlChar *encoding; xmlChar *version;int standalone;int id;};
struct _xmlXPathObject {xmlXPathObjectType type;xmlNodeSetPtr nodesetval;int boolval;double floatval;xmlChar *stringval;void *user;int index;void *user2;int index2;};
struct _xsltNumberData { xmlChar *level; xmlChar *count; xmlChar *from; xmlChar *value; xmlChar *format;int has_format;int digitsPerGroup;int groupingCharacter;int groupingCharacterLen;xmlDocPtr doc;xmlNodePtr node;};
typedef int ldap_conn_add_f(LDAP *ld, Sockbuf *sb, LDAPURLDesc *srv, struct sockaddr *addr, struct ldap_conncb *ctx);
struct ocsp_cert_id_st {X509_ALGOR *hashAlgorithm;ASN1_OCTET_STRING *issuerNameHash;ASN1_OCTET_STRING *issuerKeyHash;ASN1_INTEGER *serialNumber;};
struct pkcs7_digest_st {ASN1_INTEGER *version;X509_ALGOR *md;struct pkcs7_st *contents;ASN1_OCTET_STRING *digest;};
struct view_parameters {netsnmp_pdu *pdu;oid *name;size_t namelen;int test;int errorcode;int check_subtree;};
struct PBKDF2PARAM_st {ASN1_TYPE *salt;ASN1_INTEGER *iter;ASN1_INTEGER *keylength;X509_ALGOR *prf;};
struct X509_pubkey_st {X509_ALGOR *algor;ASN1_BIT_STRING *public_key;EVP_PKEY *pkey;};
struct _krb5_authdata {krb5_magic magic;krb5_authdatatype ad_type;unsigned int length;krb5_octet *contents;};
struct _krb5_checksum {krb5_magic magic;krb5_cksumtype checksum_type;unsigned int length;krb5_octet *contents;};
struct _krb5_keyblock {krb5_magic magic;krb5_enctype enctype;unsigned int length;krb5_octet *contents;};
struct accepted_reply {struct opaque_auth ar_verf;enum accept_stat ar_stat;union accepted_reply___FFE4C706D5AA6B063845F1E90CB09F44 ru;};
struct bp_getfile_res {bp_machine_name_t server_name;bp_address server_address;bp_path_t server_path;};
typedef lt_module lt_module_open(lt_user_data data,  char *filename, lt_dladvise advise);
struct mach_header_64 {uint32_t magic;cpu_type_t cputype;cpu_subtype_t cpusubtype;uint32_t filetype;uint32_t ncmds;uint32_t sizeofcmds;uint32_t flags;uint32_t reserved;};
struct netsnmp_file_s {char *name;int fd;int fs_flags;mode_t mode;u_int ns_flags;struct stat *stats;netsnmp_data_list *extras;};
struct ocsp_crl_id_st {ASN1_IA5STRING *crlUrl;ASN1_INTEGER *crlNum;ASN1_GENERALIZEDTIME *crlTime;};
struct sockaddr_inarp {u_char sin_len;u_char sin_family;u_short sin_port;struct in_addr sin_addr;struct in_addr sin_srcaddr;u_short sin_tos;u_short sin_other;};
struct task_dyld_info {mach_vm_address_t all_image_info_addr;mach_vm_size_t all_image_info_size;integer_t all_image_info_format;};
struct ypresp_key_val {ypstat stat;keydat key;valdat val;};
struct DIST_POINT_st {DIST_POINT_NAME *distpoint;ASN1_BIT_STRING *reasons;GENERAL_NAMES *CRLissuer;};
struct _ipfw_insn_if {ipfw_insn o;union _ipfw_insn_if___EC942E50B238476A039FC141726BDF36 p;char name[16];};
struct _krb5_address {krb5_magic magic;krb5_addrtype addrtype;unsigned int length;krb5_octet *contents;};
struct _krb5_pa_data {krb5_magic magic;krb5_preauthtype pa_type;unsigned int length;krb5_octet *contents;};
struct _xsltTemplate {struct _xsltTemplate *next;struct _xsltStylesheet *style;xmlChar *match;float priority; xmlChar *name; xmlChar *nameURI; xmlChar *mode; xmlChar *modeURI;xmlNodePtr content;xmlNodePtr elem;int inheritedNsNr;xmlNsPtr *inheritedNs;int nbCalls;unsigned long long time;void *params;};
struct igmp_grouprec {u_char ig_type;u_char ig_datalen;u_short ig_numsrc;struct in_addr ig_group;};
union ipp_request_u {struct ipp_request_u___C21E321BB5A964B1106B1996333560F5 any;struct ipp_request_u___453450608DF16096B88E9D5250CA9622 op;struct ipp_request_u___5CC10970A8D293302D52B38947334AC6 status;struct ipp_request_u___5CC10970A8D293302D52B38947334AC6 event;};
struct __attribute__((packed)) nd_opt_rd_hdr {u_int8_t nd_opt_rh_type;u_int8_t nd_opt_rh_len;u_int16_t nd_opt_rh_reserved1;u_int32_t nd_opt_rh_reserved2;};
struct nfs_exphandle {uint32_t nxh_version;uint32_t nxh_fsid;uint32_t nxh_expid;uint16_t nxh_flags;uint8_t nxh_reserved;uint8_t nxh_fidlen;};
struct policy_limits {policy_timeshare_limit_data_t ts;policy_rr_limit_data_t rr;policy_fifo_limit_data_t fifo;};
struct proc_fileinfo {uint32_t fi_openflags;uint32_t fi_status;off_t fi_offset;int32_t fi_type;int32_t rfu_1;};
struct sadb_lifetime {u_int16_t sadb_lifetime_len;u_int16_t sadb_lifetime_exttype;u_int32_t sadb_lifetime_allocations;u_int64_t sadb_lifetime_bytes;u_int64_t sadb_lifetime_addtime;u_int64_t sadb_lifetime_usetime;};
struct sadb_x_policy {u_int16_t sadb_x_policy_len;u_int16_t sadb_x_policy_exttype;u_int16_t sadb_x_policy_type;u_int8_t sadb_x_policy_dir;u_int8_t sadb_x_policy_reserved;u_int32_t sadb_x_policy_id;u_int32_t sadb_x_policy_reserved2;};
struct ypbind_setdom {domainname ypsetdom_domain;ypbind_binding ypsetdom_binding;u_int ypsetdom_vers;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSExtentKey {u_int8_t keyLength;u_int8_t forkType;u_int32_t fileID;u_int16_t startBlock;};
struct ifma_msghdr2 {u_short ifmam_msglen;u_char ifmam_version;u_char ifmam_type;int ifmam_addrs;int ifmam_flags;u_short ifmam_index;int32_t ifmam_refcount;};
struct ipfw_flow_id {u_int32_t dst_ip;u_int32_t src_ip;u_int16_t dst_port;u_int16_t src_port;u_int8_t proto;u_int8_t flags;};
struct policy_bases {policy_timeshare_base_data_t ts;policy_rr_base_data_t rr;policy_fifo_base_data_t fifo;};
struct policy_infos {policy_timeshare_info_data_t ts;policy_rr_info_data_t rr;policy_fifo_info_data_t fifo;};
struct ppd_option_s {char conflicted;char keyword[41];char defchoice[41];char text[81];ppd_ui_t ui;ppd_section_t section;float order;int num_choices;ppd_choice_t *choices;};
struct sockaddr_ctl {u_char sc_len;u_char sc_family;u_int16_t ss_sysaddr;u_int32_t sc_id;u_int32_t sc_unit;u_int32_t sc_reserved[5];};
struct sockaddr_sys {u_char ss_len;u_char ss_family;u_int16_t ss_sysaddr;u_int32_t ss_reserved[7];};
struct ASN1_ADB_st {unsigned long long flags;unsigned long long offset;STACK **app_items; ASN1_ADB_TABLE *tbl;long long tblcount; ASN1_TEMPLATE *default_tt; ASN1_TEMPLATE *null_tt;};
typedef int ASN1_ex_d2i(ASN1_VALUE **pval,  unsigned char **in, long long len,  ASN1_ITEM *it, int tag, int aclass, char opt, ASN1_TLC *ctx);
struct __attribute__((packed)) __attribute__((aligned(2))) BTHeaderRec {u_int16_t treeDepth;u_int32_t rootNode;u_int32_t leafRecords;u_int32_t firstLeafNode;u_int32_t lastLeafNode;u_int16_t nodeSize;u_int16_t maxKeyLength;u_int32_t totalNodes;u_int32_t freeNodes;u_int16_t reserved1;u_int32_t clumpSize;u_int8_t btreeType;u_int8_t keyCompareType;u_int32_t attributes;u_int32_t reserved3[16];};
struct __attribute__((packed)) __attribute__((aligned(2))) FndrDirInfo {struct FndrDirInfo___6E74BEE3D2405F7C88221D37EC2C16A3 frRect;unsigned short frFlags;struct FndrDirInfo___0DCF4602959F8104318EED879205AAFA frLocation;int16_t opaque;};
struct X509_crl_st {X509_CRL_INFO *crl;X509_ALGOR *sig_alg;ASN1_BIT_STRING *signature;int references;};
struct X509_req_st {X509_REQ_INFO *req_info;X509_ALGOR *sig_alg;ASN1_BIT_STRING *signature;int references;};
struct __sigaction {union __sigaction_u __sigaction_u;void (*sa_tramp)(void *, int, int, siginfo_t *, void *);sigset_t sa_mask;int sa_flags;};
struct gz_header_s {int text;uLong time;int xflags;int os;Bytef *extra;uInt extra_len;uInt extra_max;Bytef *name;uInt name_max;Bytef *comment;uInt comm_max;int hcrc;int done;};
struct kev_in_data {struct net_event_data link_data;struct in_addr ia_addr;u_int32_t ia_net;u_int32_t ia_netmask;u_int32_t ia_subnet;u_int32_t ia_subnetmask;struct in_addr ia_netbroadcast;struct in_addr ia_dstaddr;};
struct mach_header {uint32_t magic;cpu_type_t cputype;cpu_subtype_t cpusubtype;uint32_t filetype;uint32_t ncmds;uint32_t sizeofcmds;uint32_t flags;};
struct nlm4_holder {int exclusive;u_int32_t svid;netobj oh;u_int64_t l_offset;u_int64_t l_len;};
struct tostruct_64 {uint64_t selfpc;int32_t count;uint16_t link;uint16_t order;};
struct _xmlEntity {void *_private;xmlElementType type; xmlChar *name;struct _xmlNode *children;struct _xmlNode *last;struct _xmlDtd *parent;struct _xmlNode *next;struct _xmlNode *prev;struct _xmlDoc *doc;xmlChar *orig;xmlChar *content;int length;xmlEntityType etype; xmlChar *ExternalID; xmlChar *SystemID;struct _xmlEntity *nexte; xmlChar *URI;int owner;int checked;};
struct exportnode {dirpath ex_dir;groups ex_groups;exports ex_next;};
struct gmonhdr_64 {uint64_t lpc;uint64_t hpc;uint32_t ncnt;int32_t version;int32_t profrate;int32_t spare[3];};
typedef ssize_t (*ipp_iocb_t)(void *, ipp_uchar_t *, size_t);
struct __attribute__((packed)) nd_opt_mtu {u_int8_t nd_opt_mtu_type;u_int8_t nd_opt_mtu_len;u_int16_t nd_opt_mtu_reserved;u_int32_t nd_opt_mtu_mtu;};
struct nlm4_share {char *caller_name;netobj fh;netobj oh;fsh_mode mode;fsh_access access;};
struct sadb_x_sa2 {u_int16_t sadb_x_sa2_len;u_int16_t sadb_x_sa2_exttype;u_int8_t sadb_x_sa2_mode;u_int8_t sadb_x_sa2_reserved1;u_int16_t sadb_x_sa2_reserved2;u_int32_t sadb_x_sa2_sequence;u_int32_t sadb_x_sa2_reqid;};
struct __siginfo {int si_signo;int si_errno;int si_code;pid_t si_pid;uid_t si_uid;int si_status;void *si_addr;union sigval si_value;long long si_band;unsigned long long __pad[7];};
struct fieldnode {unsigned short status;short rows;short cols;short frow;short fcol;int drows;int dcols;int maxgrow;int nrow;short nbuf;short just;short page;short index;int pad;chtype fore;chtype back;Field_Options opts;struct fieldnode *snext;struct fieldnode *sprev;struct fieldnode *link;struct formnode *form;struct typenode *type;void *arg;FIELD_CELL *buf;void *usrptr;};
struct gmonparam {int state;u_short *kcount;u_long kcountsize;u_short *froms;u_long fromssize;tostruct_t *tos;u_long tossize;long long tolimit;u_long lowpc;u_long highpc;u_long textsize;u_long hashfraction;};
struct __attribute__((packed)) icmp6_hdr {u_int8_t icmp6_type;u_int8_t icmp6_code;u_int16_t icmp6_cksum;union icmp6_hdr___D19D92B5F4F43A148CE7ABC3DA9CAAC9 icmp6_dataun;};
union idt_entry {trap_gate_t trap_gate;intr_gate_t intr_gate;task_gate_t task_gate;};
struct kauth_ace {guid_t ace_applicable;u_int32_t ace_flags;kauth_ace_rights_t ace_rights;};
struct mountbody {name ml_hostname;dirpath ml_directory;mountlist ml_next;};
struct nlm4_lock {char *caller_name;netobj fh;netobj oh;u_int32_t svid;u_int64_t l_offset;u_int64_t l_len;};
struct nlm_share {char *caller_name;netobj fh;netobj oh;fsh_mode mode;fsh_access access;};
struct sadb_sens {u_int16_t sadb_sens_len;u_int16_t sadb_sens_exttype;u_int32_t sadb_sens_dpd;u_int8_t sadb_sens_sens_level;u_int8_t sadb_sens_sens_len;u_int8_t sadb_sens_integ_level;u_int8_t sadb_sens_integ_len;u_int32_t sadb_sens_reserved;};
struct xsw_usage {u_int64_t xsu_total;u_int64_t xsu_avail;u_int64_t xsu_used;u_int32_t xsu_pagesize;boolean_t xsu_encrypted;};
struct ypreq_key {domainname domain;mapname map;keydat key;};
struct __ns_msg { u_char *_msg; u_char *_eom;u_int16_t _id;u_int16_t _flags;u_int16_t _counts[4]; u_char *_sections[4];res_9_ns_sect _sect;int _rrnum; u_char *_msg_ptr;};
struct _xmlNode {void *_private;xmlElementType type; xmlChar *name;struct _xmlNode *children;struct _xmlNode *last;struct _xmlNode *parent;struct _xmlNode *next;struct _xmlNode *prev;struct _xmlDoc *doc;xmlNs *ns;xmlChar *content;struct _xmlAttr *properties;xmlNs *nsDef;void *psvi;unsigned short line;unsigned short extra;};
struct attrlist {u_short bitmapcount;u_int16_t reserved;attrgroup_t commonattr;attrgroup_t volattr;attrgroup_t dirattr;attrgroup_t fileattr;attrgroup_t forkattr;};
struct bpf_insn {u_short code;u_char jt;u_char jf;bpf_u_int32 k;};
struct fat_arch {cpu_type_t cputype;cpu_subtype_t cpusubtype;uint32_t offset;uint32_t size;uint32_t align;};
struct __attribute__((packed)) ip6_frag {u_int8_t ip6f_nxt;u_int8_t ip6f_reserved;u_int16_t ip6f_offlg;u_int32_t ip6f_ident;};
struct lhash_st {LHASH_NODE **b;LHASH_COMP_FN_TYPE comp;LHASH_HASH_FN_TYPE hash;unsigned int num_nodes;unsigned int num_alloc_nodes;unsigned int p;unsigned int pmax;unsigned long long up_load;unsigned long long down_load;unsigned long long num_items;unsigned long long num_expands;unsigned long long num_expand_reallocs;unsigned long long num_contracts;unsigned long long num_contract_reallocs;unsigned long long num_hash_calls;unsigned long long num_comp_calls;unsigned long long num_insert;unsigned long long num_replace;unsigned long long num_delete;unsigned long long num_no_delete;unsigned long long num_retrieve;unsigned long long num_retrieve_miss;unsigned long long num_hash_comps;int error;};
struct sadb_msg {u_int8_t sadb_msg_version;u_int8_t sadb_msg_type;u_int8_t sadb_msg_errno;u_int8_t sadb_msg_satype;u_int16_t sadb_msg_len;u_int16_t sadb_msg_reserved;u_int32_t sadb_msg_seq;u_int32_t sadb_msg_pid;};
struct tostruct {uint32_t selfpc;int32_t count;uint16_t link;uint16_t order;};
struct vfsidctl {int vc_vers;fsid_t vc_fsid;void *vc_ptr;size_t vc_len;u_int32_t vc_spare[12];};
struct _ftsent {struct _ftsent *fts_cycle;struct _ftsent *fts_parent;struct _ftsent *fts_link;long long fts_number;void *fts_pointer;char *fts_accpath;char *fts_path;int fts_errno;int fts_symfd;unsigned short fts_pathlen;unsigned short fts_namelen;ino_t fts_ino;dev_t fts_dev;nlink_t fts_nlink;short fts_level;unsigned short fts_info;unsigned short fts_flags;unsigned short fts_instr;struct stat *fts_statp;char fts_name[1];};
struct bpf_hdr {struct timeval32 bh_tstamp;bpf_u_int32 bh_caplen;bpf_u_int32 bh_datalen;u_short bh_hdrlen;};
struct if_data {u_char ifi_type;u_char ifi_typelen;u_char ifi_physical;u_char ifi_addrlen;u_char ifi_hdrlen;u_char ifi_recvquota;u_char ifi_xmitquota;u_char ifi_unused1;u_int32_t ifi_mtu;u_int32_t ifi_metric;u_int32_t ifi_baudrate;u_int32_t ifi_ipackets;u_int32_t ifi_ierrors;u_int32_t ifi_opackets;u_int32_t ifi_oerrors;u_int32_t ifi_collisions;u_int32_t ifi_ibytes;u_int32_t ifi_obytes;u_int32_t ifi_imcasts;u_int32_t ifi_omcasts;u_int32_t ifi_iqdrops;u_int32_t ifi_noproto;u_int32_t ifi_recvtiming;u_int32_t ifi_xmittiming;struct timeval32 ifi_lastchange;u_int32_t ifi_unused2;u_int32_t ifi_hwassist;u_int32_t ifi_reserved1;u_int32_t ifi_reserved2;};
struct igmpmsg {u_int32_t unused1;u_int32_t unused2;u_char im_msgtype;u_char im_mbz;u_char im_vif;u_char unused3;struct in_addr im_src;struct in_addr im_dst;};
struct sadb_sa {u_int16_t sadb_sa_len;u_int16_t sadb_sa_exttype;u_int32_t sadb_sa_spi;u_int8_t sadb_sa_replay;u_int8_t sadb_sa_state;u_int8_t sadb_sa_auth;u_int8_t sadb_sa_encrypt;u_int32_t sadb_sa_flags;};
struct svc_req {unsigned int rq_prog;unsigned int rq_vers;unsigned int rq_proc;struct opaque_auth rq_cred;caddr_t rq_clntcred;SVCXPRT *rq_xprt;};
struct termios {tcflag_t c_iflag;tcflag_t c_oflag;tcflag_t c_cflag;tcflag_t c_lflag;cc_t c_cc[20];speed_t c_ispeed;speed_t c_ospeed;};
struct usmUser {u_char *engineID;size_t engineIDLen;char *name;char *secName;oid *cloneFrom;size_t cloneFromLen;oid *authProtocol;size_t authProtocolLen;u_char *authKey;size_t authKeyLen;oid *privProtocol;size_t privProtocolLen;u_char *privKey;size_t privKeyLen;u_char *userPublicString;size_t userPublicStringLen;int userStatus;int userStorageType;void *usmDHUserAuthKeyChange;void *usmDHUserPrivKeyChange;struct usmUser *next;struct usmUser *prev;};
struct _ucred {int32_t cr_ref;uid_t cr_uid;short cr_ngroups;gid_t cr_groups[16];};
struct dirent {__uint64_t d_ino;__uint64_t d_seekoff;__uint16_t d_reclen;__uint16_t d_namlen;__uint8_t d_type;char d_name[1024];};
struct igmpv3 {u_char igmp_type;u_char igmp_code;u_short igmp_cksum;struct in_addr igmp_group;u_char igmp_misc;u_char igmp_qqi;u_short igmp_numsrc;};
struct ipovly {u_char ih_x1[9];u_char ih_pr;u_short ih_len;struct in_addr ih_src;struct in_addr ih_dst;};
struct mfcctl {struct in_addr mfcc_origin;struct in_addr mfcc_mcastgrp;vifi_t mfcc_parent;u_char mfcc_ttls[32];};
struct passwd {char *pw_name;char *pw_passwd;uid_t pw_uid;gid_t pw_gid;__darwin_time_t pw_change;char *pw_class;char *pw_gecos;char *pw_dir;char *pw_shell;__darwin_time_t pw_expire;};
struct xucred {u_int cr_version;uid_t cr_uid;short cr_ngroups;gid_t cr_groups[16];};
struct MPOOL {struct MPOOL___lqh lqh;struct MPOOL___hqh hqh[128];pgno_t curcache;pgno_t maxcache;pgno_t npages;unsigned long long pagesize;int fd;void (*pgin)(void *, pgno_t, void *);void (*pgout)(void *, pgno_t, void *);void *pgcookie;};
struct aiocb {int aio_fildes;off_t aio_offset;void *aio_buf;size_t aio_nbytes;int aio_reqprio;struct sigevent aio_sigevent;int aio_lio_opcode;};
struct newah {u_int8_t ah_nxt;u_int8_t ah_len;u_int16_t ah_reserve;u_int32_t ah_spi;u_int32_t ah_seq;};
struct utmpx {char ut_user[256];char ut_id[4];char ut_line[32];pid_t ut_pid;short ut_type;struct timeval ut_tv;char ut_host[256];__uint32_t ut_pad[16];};
struct _bkt {struct _bkt___335ECEA3C7A0F876D51082F14580D87B hq;struct _bkt___335ECEA3C7A0F876D51082F14580D87B q;void *page;pgno_t pgno;u_int8_t flags;};
struct igmp {u_char igmp_type;u_char igmp_code;u_short igmp_cksum;struct in_addr igmp_group;};
struct ah {u_int8_t ah_nxt;u_int8_t ah_len;u_int16_t ah_reserve;u_int32_t ah_spi;};
struct ip {unsigned int ip_hl : 4;unsigned int ip_v : 4;u_char ip_tos;u_short ip_len;u_short ip_id;u_short ip_off;u_char ip_ttl;u_char ip_p;u_short ip_sum;struct in_addr ip_src;struct in_addr ip_dst;};
struct inpcb___F2E854D5640579B71C918C53FCA5BF60 {u_int32_t inp6_options;u_int8_t inp6_hlim;u_int8_t unused_uint8_1;ushort unused_uint16_1;u_int32_t inp6_outputopts;u_int32_t inp6_moptions;u_int32_t inp6_icmp6filt;int inp6_cksum;u_short inp6_ifindex;short inp6_hops;};
struct _049C2F5371F68A7AF5021A13AE52665B {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_size_t out_page_size;};
struct _160180DA3C237BA935DA764154BD82EA {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_vm_address_t address;};
struct _2204D4BF90F99AB14C1563C90305E530 {mach_msg_header_t not_header;mach_msg_body_t not_body;mach_msg_port_descriptor_t not_port;mach_msg_format_0_trailer_t trailer;};
struct _3641F756729AD97A11A3B78A6DBF7918 {u_int32_t size;u_char version;u_int16_t e_type;u_int16_t e_mod;u_int64_t s;u_int64_t ms;};
struct _5DB7049864680961BDFB9965C0ABC030 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;integer_t disposition;integer_t ref_count;};
struct _618A16F1A9CB4DE56CB312A402246FE1 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_vm_address_t context;};
struct _6FAFB5BC2FBC216C364C3DE816E26A29 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;mach_vm_address_t data;};
union _70B7A71D304E70E945AE4E370F85FC88 {u_long ul;u_int ui;u_short us;u_char uc;long long sl;int si;short ss;char sc;char *cp;void *vp;};
struct _7D6BE7882CE721D70B16F72EF4350FEA {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_read_entry_t data_list;};
union _94CB200B36B7778DB0012FD0C2F25E9C {mach_msg_port_descriptor_t port;mach_msg_ool_descriptor_t out_of_line;mach_msg_ool_ports_descriptor_t ool_ports;mach_msg_type_descriptor_t type;};
struct _9582347D37BF76839153FB59D783D952 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;int flags;};
struct _9C5E7BEBDEAC9680FE5D9ADFB2DEA0C0 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_vm_size_t outsize;};
struct _9F41B8E90BE057B33891A8A6EE681A31 {uint32_t status;struct sockaddr *server;dns_header_t *header;dns_question_t **question;dns_resource_record_t **answer;dns_resource_record_t **authority;dns_resource_record_t **additional;};
struct _9F75FA6E4EE2D3B86C582C471EA99312 {u_int32_t size;u_char version;u_int16_t e_type;u_int16_t e_mod;u_int32_t ad_type;u_int32_t addr[4];u_int64_t s;u_int64_t ms;};
struct _A1F779EC0A67B47A0153BAA39A848A18 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_size_t outsize;};
struct _B74BBF4C1467FECDB27E8CB1AA37D794 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_machine_attribute_val_t value;};
struct _C6E5E20E9CA57385FADCC3EC88B8E8F5 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;kmod_t module;};
struct _C73F2DA5D1FAD09FF5C310E32862AC76 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;};
struct _CC76991D9F83D1A958E6E229A0D1EA8D {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;vm_purgable_t control;int state;};
struct _CDC8267DE048B2F631A00EEC2191AA35 {mach_msg_header_t Head;NDR_record_t NDR;vm_read_entry_t data_list;natural_t count;};
struct _D5C5C0A4FB77109A22B40E51950751DD {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t special_port;NDR_record_t NDR;int which_port;};
struct _DCAF10FDD4D6724B522470D0830DC7B5 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_vm_read_entry_t data_list;};
struct _EC3D8C1D47CD577132BD4EE7AFBF4E05 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t source_address;mach_vm_size_t size;mach_vm_address_t dest_address;};
struct _F1A44C946A11C4E88A7FB24B2ED8014B {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t port;NDR_record_t NDR;int which;};
struct _F465ED20B10C6481709BD63930BC6003 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_read_entry_t data_list;natural_t count;};
struct _FCCAD8574E122F2EFADDBD13F6972B4E {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_timespec_t cur_time;};
union __RequestUnion__netname_subsystem {__Request__netname_check_in_t Request_netname_check_in;__Request__netname_look_up_t Request_netname_look_up;__Request__netname_check_out_t Request_netname_check_out;__Request__netname_version_t Request_netname_version;};
union __RequestUnion__ledger_subsystem {__Request__ledger_create_t Request_ledger_create;__Request__ledger_terminate_t Request_ledger_terminate;__Request__ledger_transfer_t Request_ledger_transfer;__Request__ledger_read_t Request_ledger_read;};
union __ReplyUnion__netname_subsystem {__Reply__netname_check_in_t Reply_netname_check_in;__Reply__netname_look_up_t Reply_netname_look_up;__Reply__netname_check_out_t Reply_netname_check_out;__Reply__netname_version_t Reply_netname_version;};
typedef STORE_OBJECT *(*STORE_GENERATE_OBJECT_FUNC_PTR)(STORE *, STORE_OBJECT_TYPES type,OPENSSL_ITEM  *    attributes, OPENSSL_ITEM parameters[]);
union __ReplyUnion__ledger_subsystem {__Reply__ledger_create_t Reply_ledger_create;__Reply__ledger_terminate_t Reply_ledger_terminate;__Reply__ledger_transfer_t Reply_ledger_transfer;__Reply__ledger_read_t Reply_ledger_read;};
typedef void (*DNSServiceRegisterRecordReply)(DNSServiceRef sdRef, DNSRecordRef RecordRef, DNSServiceFlags flags, DNSServiceErrorType errorCode, void *context);
struct netsnmp_table_request_info_s {unsigned int colnum;unsigned int number_indexes;netsnmp_variable_list *indexes;oid index_oid[128];size_t index_oid_len;netsnmp_table_registration_info *reg_info;};
typedef int (*STORE_STORE_OBJECT_FUNC_PTR)(STORE *, STORE_OBJECT_TYPES type, STORE_OBJECT *data,OPENSSL_ITEM  *    attributes, OPENSSL_ITEM parameters[]);
struct snmp_secmod_incoming_params {int msgProcModel;size_t maxMsgSize;u_char *secParams;int secModel;int secLevel;u_char *wholeMsg;size_t wholeMsgLen;u_char *secEngineID;size_t *secEngineIDLen;char *secName;size_t *secNameLen;u_char **scopedPdu;size_t *scopedPduLen;size_t *maxSizeResponse;void **secStateRef;netsnmp_session *sess;netsnmp_pdu *pdu;u_char msg_flags;};
struct snmp_secmod_outgoing_params {int msgProcModel;u_char *globalData;size_t globalDataLen;int maxMsgSize;int secModel;u_char *secEngineID;size_t secEngineIDLen;char *secName;size_t secNameLen;int secLevel;u_char *scopedPdu;size_t scopedPduLen;void *secStateRef;u_char *secParams;size_t *secParamsLen;u_char **wholeMsg;size_t *wholeMsgLen;size_t *wholeMsgOffset;netsnmp_pdu *pdu;netsnmp_session *session;};
typedef xmlNsPtr (*xmlDOMWrapAcquireNsFunction)(xmlDOMWrapCtxtPtr ctxt, xmlNodePtr node,  xmlChar *nsName,  xmlChar *nsPrefix);
typedef void (*DNSServiceGetAddrInfoReply)(DNSServiceRef sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceErrorType errorCode,  char *hostname,  struct sockaddr *address, uint32_t ttl, void *context);
typedef void (*DNSServiceDomainEnumReply)(DNSServiceRef sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceErrorType errorCode,  char *replyDomain, void *context);
typedef STORE_OBJECT *(*STORE_GET_OBJECT_FUNC_PTR)(STORE *, STORE_OBJECT_TYPES type,OPENSSL_ITEM  *    attributes, OPENSSL_ITEM parameters[]);
struct gss_krb5_lucid_context_v1 {OM_uint32 version;OM_uint32 initiate;OM_uint32 endtime;gss_uint64 send_seq;gss_uint64 recv_seq;OM_uint32 protocol;gss_krb5_rfc1964_keydata_t rfc1964_kd;gss_krb5_cfx_keydata_t cfx_kd;};
typedef krb5_error_code (*krb5_mk_req_checksum_func)(krb5_context, krb5_auth_context, void *, krb5_data **);
struct netsnmp_delegated_cache_s {int transaction_id;netsnmp_mib_handler *handler;netsnmp_handler_registration *reginfo;netsnmp_agent_request_info *reqinfo;netsnmp_request_info *requests;void *localinfo;};
struct ASN1_PRIMITIVE_FUNCS_st {void *app_data;unsigned long long flags;ASN1_ex_new_func *prim_new;ASN1_ex_free_func *prim_free;ASN1_ex_free_func *prim_clear;ASN1_primitive_c2i *prim_c2i;ASN1_primitive_i2c *prim_i2c;};
typedef void (*DNSServiceRegisterReply)(DNSServiceRef sdRef, DNSServiceFlags flags, DNSServiceErrorType errorCode,  char *name,  char *regtype,  char *domain, void *context);
struct ocsp_single_response_st {OCSP_CERTID *certId;OCSP_CERTSTATUS *certStatus;ASN1_GENERALIZEDTIME *thisUpdate;ASN1_GENERALIZEDTIME *nextUpdate;STACK *singleExtensions;};
struct dtls1_retransmit_state {EVP_CIPHER_CTX *enc_write_ctx; EVP_MD *write_hash;COMP_CTX *compress;SSL_SESSION *session;unsigned short epoch;};
struct netsnmp_handler_args_s {netsnmp_mib_handler *handler;netsnmp_handler_registration *reginfo;netsnmp_agent_request_info *reqinfo;netsnmp_request_info *requests;};
struct netsnmp_request_info_s {netsnmp_variable_list *requestvb;netsnmp_data_list *parent_data;struct netsnmp_agent_request_info_s *agent_req_info;oid *range_end;size_t range_end_len;int delegated;int processed;int inclusive;int status;int index;int repeat;int orig_repeat;netsnmp_variable_list *requestvb_start;struct netsnmp_request_info_s *next;struct netsnmp_request_info_s *prev;struct netsnmp_subtree_s *subtree;};
struct ocsp_basic_response_st {OCSP_RESPDATA *tbsResponseData;X509_ALGOR *signatureAlgorithm;ASN1_BIT_STRING *signature;STACK *certs;};
struct pkcs8_priv_key_info_st {int broken;ASN1_INTEGER *version;X509_ALGOR *pkeyalg;ASN1_TYPE *pkey;STACK *attributes;};
typedef xsltElemPreCompPtr (*xsltPreComputeFunction)(xsltStylesheetPtr style, xmlNodePtr inst, xsltTransformFunction function);
typedef void (*DNSServiceBrowseReply)(DNSServiceRef sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceErrorType errorCode,  char *serviceName,  char *regtype,  char *replyDomain, void *context);
struct _xmlParserInputBuffer {void *context;xmlInputReadCallback readcallback;xmlInputCloseCallback closecallback;xmlCharEncodingHandlerPtr encoder;xmlBufferPtr buffer;xmlBufferPtr raw;int compressed;int error;unsigned long long rawconsumed;};
struct ocsp_response_data_st {ASN1_INTEGER *version;OCSP_RESPID *responderId;ASN1_GENERALIZEDTIME *producedAt;STACK *responses;STACK *responseExtensions;};
struct ASN1_COMPAT_FUNCS_st {ASN1_new_func *asn1_new;ASN1_free_func *asn1_free;ASN1_d2i_func *asn1_d2i;ASN1_i2d_func *asn1_i2d;};
struct ASN1_EXTERN_FUNCS_st {void *app_data;ASN1_ex_new_func *asn1_ex_new;ASN1_ex_free_func *asn1_ex_free;ASN1_ex_free_func *asn1_ex_clear;ASN1_ex_d2i *asn1_ex_d2i;ASN1_ex_i2d *asn1_ex_i2d;};
typedef int Netsnmp_Node_Handler(netsnmp_mib_handler *handler, netsnmp_handler_registration *reginfo, netsnmp_agent_request_info *reqinfo, netsnmp_request_info *requests);
struct pkcs7_enc_content_st {ASN1_OBJECT *content_type;X509_ALGOR *algorithm;ASN1_OCTET_STRING *enc_data; EVP_CIPHER *cipher;};
struct netsnmp_transport_s { oid *domain;int domain_length;unsigned char *local;int local_length;unsigned char *remote;int remote_length;int sock;unsigned int flags;void *data;int data_length;size_t msgMaxSize;netsnmp_tmStateReference *tmStateRef;int (*f_recv)(struct netsnmp_transport_s *, void *, int, void **, int *);int (*f_send)(struct netsnmp_transport_s *, void *, int, void **, int *);int (*f_close)(struct netsnmp_transport_s *);struct netsnmp_transport_s *(*f_open)(struct netsnmp_transport_s *);int (*f_accept)(struct netsnmp_transport_s *);char *(*f_fmtaddr)(struct netsnmp_transport_s *, void *, int);int (*f_config)(struct netsnmp_transport_s *,  char *,  char *);int (*f_copy)(struct netsnmp_transport_s *, struct netsnmp_transport_s *);int (*f_setup_session)(struct netsnmp_transport_s *, struct snmp_session *);u_char *identifier;};
struct nfs_export_net_args {uint32_t nxna_flags;struct xucred nxna_cred;struct sockaddr_storage nxna_addr;struct sockaddr_storage nxna_mask;struct nfs_sec nxna_sec;};
typedef void (*xlinkSimpleLinkFunk)(void *ctx, xmlNodePtr node,  xlinkHRef href,  xlinkRole role,  xlinkTitle title);
struct __attribute__((packed)) icmp6_router_renum {struct icmp6_hdr rr_hdr;u_int8_t rr_segnum;u_int8_t rr_flags;u_int16_t rr_maxdelay;u_int32_t rr_reserved;};
struct netsnmp_iterator_s {netsnmp_container *container;u_long sync;netsnmp_iterator_rc *reset;netsnmp_iterator_rc *release;netsnmp_iterator_rtn *first;netsnmp_iterator_rtn *curr;netsnmp_iterator_rtn *last;netsnmp_iterator_rtn *next;netsnmp_iterator_rc *remove;};
struct task_basic_info_32 {integer_t suspend_count;natural_t virtual_size;natural_t resident_size;time_value_t user_time;time_value_t system_time;policy_t policy;};
struct task_basic_info_64 {integer_t suspend_count;mach_vm_size_t virtual_size;mach_vm_size_t resident_size;time_value_t user_time;time_value_t system_time;policy_t policy;};
struct _krb5_tkt_authent {krb5_magic magic;krb5_ticket *ticket;krb5_authenticator *authenticator;krb5_flags ap_options;};
typedef krb5_error_code (*krb5_prompter_fct)(krb5_context context, void *data,  char *name,  char *banner, int num_prompts,krb5_prompt  *    prompts);
struct netsnmp_tdomain_s { oid *name;size_t name_length; char **prefix;netsnmp_transport *(*f_create_from_tstring)( char *, int);netsnmp_transport *(*f_create_from_ostring)( u_char *, size_t, int);struct netsnmp_tdomain_s *next;netsnmp_transport *(*f_create_from_tstring_new)( char *, int,  char *);};
struct usmStateReference {char *usr_name;size_t usr_name_length;u_char *usr_engine_id;size_t usr_engine_id_length;oid *usr_auth_protocol;size_t usr_auth_protocol_length;u_char *usr_auth_key;size_t usr_auth_key_length;oid *usr_priv_protocol;size_t usr_priv_protocol_length;u_char *usr_priv_key;size_t usr_priv_key_length;u_int usr_sec_level;};
typedef xmlDocPtr (*xsltDocLoaderFunc)( xmlChar *URI, xmlDictPtr dict, int options, void *ctxt, xsltLoadType type);
struct __attribute__((packed)) __attribute__((aligned(2))) BTNodeDescriptor {u_int32_t fLink;u_int32_t bLink;int8_t kind;u_int8_t height;u_int16_t numRecords;u_int16_t reserved;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSCatalogThread {int16_t recordType;int32_t reserved[2];u_int32_t parentID;u_int8_t nodeName[32];};
struct _xmlOutputBuffer {void *context;xmlOutputWriteCallback writecallback;xmlOutputCloseCallback closecallback;xmlCharEncodingHandlerPtr encoder;xmlBufferPtr buffer;xmlBufferPtr conv;int written;int error;};
struct kmod_info_32_v1 {uint32_t next_addr;int32_t info_version;uint32_t id;uint8_t name[64];uint8_t version[64];int32_t reference_count;uint32_t reference_list_addr;uint32_t address;uint32_t size;uint32_t hdr_size;uint32_t start_addr;uint32_t stop_addr;};
struct krb5_tktbody_st {ASN1_INTEGER *tktvno;ASN1_GENERALSTRING *realm;KRB5_PRINCNAME *sname;KRB5_ENCDATA *encdata;};
struct lber_memory_fns {BER_MEMALLOC_FN *bmf_malloc;BER_MEMCALLOC_FN *bmf_calloc;BER_MEMREALLOC_FN *bmf_realloc;BER_MEMFREE_FN *bmf_free;};
struct task_basic_info {integer_t suspend_count;vm_size_t virtual_size;vm_size_t resident_size;time_value_t user_time;time_value_t system_time;policy_t policy;};
typedef int EVP_PBE_KEYGEN(EVP_CIPHER_CTX *ctx,  char *pass, int passlen, ASN1_TYPE *param,  EVP_CIPHER *cipher,  EVP_MD *md, int en_de);
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusBSDInfo {u_int32_t ownerID;u_int32_t groupID;u_int8_t adminFlags;u_int8_t ownerFlags;u_int16_t fileMode;union HFSPlusBSDInfo___27AA93549C704A2FC0D1AB4BC35019DD special;};
struct _krb5_enc_data {krb5_magic magic;krb5_enctype enctype;krb5_kvno kvno;krb5_data ciphertext;};
struct conf_method_st { char *name;CONF *(*create)(CONF_METHOD *meth);int (*init)(CONF *conf);int (*destroy)(CONF *conf);int (*destroy_data)(CONF *conf);int (*load_bio)(CONF *conf, BIO *bp, long long *eline);int (*dump)( CONF *conf, BIO *bp);int (*is_number)( CONF *conf, char c);int (*to_int)( CONF *conf, char c);int (*load)(CONF *conf,  char *name, long long *eline);};
struct krb5_ap_req_st {ASN1_INTEGER *pvno;ASN1_INTEGER *msgtype;ASN1_BIT_STRING *apoptions;KRB5_TICKET *ticket;KRB5_ENCDATA *authenticator;};
typedef BOOL (*pConfigDSNFunc)(HWND hwndParent, WORD fRequest, LPCSTR lpszDriver, LPCSTR lpszAttributes);
struct private_key_st {int version;X509_ALGOR *enc_algor;ASN1_OCTET_STRING *enc_pkey;EVP_PKEY *dec_pkey;int key_length;char *key_data;int key_free;EVP_CIPHER_INFO cipher;int references;};
struct sasl_canonuser {int features;int spare_int1;void *glob_context;char *name;void (*canon_user_free)(void *glob_context,  sasl_utils_t *utils);int (*canon_user_server)(void *glob_context, sasl_server_params_t *sparams,  char *user, unsigned int len, unsigned int flags, char *out, unsigned int out_umax, unsigned int *out_ulen);int (*canon_user_client)(void *glob_context, sasl_client_params_t *cparams,  char *user, unsigned int len, unsigned int flags, char *out, unsigned int out_max, unsigned int *out_len);int (*spare_fptr1)();int (*spare_fptr2)();int (*spare_fptr3)();};
struct st_dynamic_fns {void *static_state; ERR_FNS *err_fns; CRYPTO_EX_DATA_IMPL *ex_data_fns;dynamic_MEM_fns mem_fns;dynamic_LOCK_fns lock_fns;};
struct vacm_viewEntry {char viewName[34];oid viewSubtree[128];size_t viewSubtreeLen;u_char viewMask[34];size_t viewMaskLen;int viewType;int viewStorageType;int viewStatus;u_long bitMask;struct vacm_viewEntry *reserved;struct vacm_viewEntry *next;};
struct vm_info_object {natural_t vio_object;natural_t vio_size;unsigned int vio_ref_count;unsigned int vio_resident_page_count;unsigned int vio_absent_count;natural_t vio_copy;natural_t vio_shadow;natural_t vio_shadow_offset;natural_t vio_paging_offset;memory_object_copy_strategy_t vio_copy_strategy;vm_offset_t vio_last_alloc;unsigned int vio_paging_in_progress;boolean_t vio_pager_created;boolean_t vio_pager_initialized;boolean_t vio_pager_ready;boolean_t vio_can_persist;boolean_t vio_internal;boolean_t vio_temporary;boolean_t vio_alive;boolean_t vio_purgable;boolean_t vio_purgable_volatile;};
struct vm_info_region {natural_t vir_start;natural_t vir_end;natural_t vir_object;natural_t vir_offset;boolean_t vir_needs_copy;vm_prot_t vir_protection;vm_prot_t vir_max_protection;vm_inherit_t vir_inheritance;natural_t vir_wired_count;natural_t vir_user_wired_count;};
struct fssearchblock {struct attrlist *returnattrs;void *returnbuffer;size_t returnbuffersize;u_long maxmatches;struct timeval timelimit;void *searchparams1;size_t sizeofsearchparams1;void *searchparams2;size_t sizeofsearchparams2;struct attrlist searchattrs;};
struct ssl_method_st {int version;int (*ssl_new)(SSL *s);void (*ssl_clear)(SSL *s);void (*ssl_free)(SSL *s);int (*ssl_accept)(SSL *s);int (*ssl_connect)(SSL *s);int (*ssl_read)(SSL *s, void *buf, int len);int (*ssl_peek)(SSL *s, void *buf, int len);int (*ssl_write)(SSL *s,  void *buf, int len);int (*ssl_shutdown)(SSL *s);int (*ssl_renegotiate)(SSL *s);int (*ssl_renegotiate_check)(SSL *s);long long (*ssl_get_message)(SSL *s, int st1, int stn, int mt, long long max, int *ok);int (*ssl_read_bytes)(SSL *s, int type, unsigned char *buf, int len, int peek);int (*ssl_write_bytes)(SSL *s, int type,  void *buf_, int len);int (*ssl_dispatch_alert)(SSL *s);long long (*ssl_ctrl)(SSL *s, int cmd, long long larg, void *parg);long long (*ssl_ctx_ctrl)(SSL_CTX *ctx, int cmd, long long larg, void *parg);SSL_CIPHER *(*get_cipher_by_char)( unsigned char *ptr);int (*put_cipher_by_char)( SSL_CIPHER *cipher, unsigned char *ptr);int (*ssl_pending)( SSL *s);int (*num_ciphers)(void);SSL_CIPHER *(*get_cipher)(unsigned int ncipher);struct ssl_method_st *(*get_ssl_method)(int version);long long (*get_timeout)(void);struct ssl3_enc_method *ssl3_enc;int (*ssl_version)(void);long long (*ssl_callback_ctrl)(SSL *s, int cb_id, void (*fp)(void));long long (*ssl_ctx_callback_ctrl)(SSL_CTX *s, int cb_id, void (*fp)(void));};
struct __attribute__((packed)) __attribute__((aligned(2))) FndrFileInfo {u_int32_t fdType;u_int32_t fdCreator;u_int16_t fdFlags;struct FndrFileInfo___41A11852923CA7CF3D1788B49D991E5B fdLocation;int16_t opaque;};
struct X509_info_st {X509 *x509;X509_CRL *crl;X509_PKEY *x_pkey;EVP_CIPHER_INFO enc_cipher;int enc_len;char *enc_data;int references;};
struct _krb5_ap_req {krb5_magic magic;krb5_flags ap_options;krb5_ticket *ticket;krb5_enc_data authenticator;};
struct _krb5_ticket {krb5_magic magic;krb5_principal server;krb5_enc_data enc_part;krb5_enc_tkt_part *enc_part2;};
struct ppd_cparam_s {char name[41];char text[81];int order;ppd_cptype_t type;ppd_cplimit_t minimum;ppd_cplimit_t maximum;ppd_cpvalue_t current;};
typedef int WriteMethod(int action, u_char *var_val, u_char var_val_type, size_t var_val_len, u_char *statP, oid *name, size_t length);
struct _xsltKeyDef {struct _xsltKeyDef *next;xmlNodePtr inst;xmlChar *name;xmlChar *nameURI;xmlChar *match;xmlChar *use;xmlXPathCompExprPtr comp;xmlXPathCompExprPtr usecomp;xmlNsPtr *nsList;int nsNr;};
struct dso_meth_st { char *name;int (*dso_load)(DSO *dso);int (*dso_unload)(DSO *dso);void *(*dso_bind_var)(DSO *dso,  char *symname);DSO_FUNC_TYPE (*dso_bind_func)(DSO *dso,  char *symname);long long (*dso_ctrl)(DSO *dso, int cmd, long long larg, void *parg);DSO_NAME_CONVERTER_FUNC dso_name_converter;DSO_MERGER_FUNC dso_merger;int (*init)(DSO *dso);int (*finish)(DSO *dso);};
struct extern_file {struct extern_file___94A32CBB0D158E1A8624A2DC03EBA897 f_list;short f_flag;short f_type;short f_count;short f_msgcount;kauth_cred_t f_cred;void *f_ops;off_t f_offset;caddr_t f_data;};
struct help_node_s {char *filename;char *section;char *anchor;char *text;cups_array_t *words;time_t mtime;off_t offset;size_t length;int score;};
struct in6_prflags {struct in6_prflags__prf_ra prf_ra;u_char prf_reserved1;u_short prf_reserved2;struct in6_prflags__prf_rr prf_rr;u_char prf_reserved3;u_short prf_reserved4;};
struct sockaddr_in {__uint8_t sin_len;sa_family_t sin_family;in_port_t sin_port;struct in_addr sin_addr;char sin_zero[8];};
struct ypmap_parms {domainname domain;mapname map;u_int ordernum;peername peer;};
struct _krb5_cred {krb5_magic magic;krb5_ticket **tickets;krb5_enc_data enc_part;krb5_cred_enc_part *enc_part2;};
struct sockbuf_io {int (*sbi_setup)(Sockbuf_IO_Desc *sbiod, void *arg);int (*sbi_remove)(Sockbuf_IO_Desc *sbiod);int (*sbi_ctrl)(Sockbuf_IO_Desc *sbiod, int opt, void *arg);ber_slen_t (*sbi_read)(Sockbuf_IO_Desc *sbiod, void *buf, ber_len_t len);ber_slen_t (*sbi_write)(Sockbuf_IO_Desc *sbiod, void *buf, ber_len_t len);int (*sbi_close)(Sockbuf_IO_Desc *sbiod);};
struct sysORTable {char *OR_descr;oid *OR_oid;size_t OR_oidlen;netsnmp_session *OR_sess;u_long OR_uptime;};
struct v3_ext_ctx {int flags;X509 *issuer_cert;X509 *subject_cert;X509_REQ *subject_req;X509_CRL *crl;X509V3_CONF_METHOD *db_meth;void *db;};
struct if_data64 {u_char ifi_type;u_char ifi_typelen;u_char ifi_physical;u_char ifi_addrlen;u_char ifi_hdrlen;u_char ifi_recvquota;u_char ifi_xmitquota;u_char ifi_unused1;u_int32_t ifi_mtu;u_int32_t ifi_metric;u_int64_t ifi_baudrate;u_int64_t ifi_ipackets;u_int64_t ifi_ierrors;u_int64_t ifi_opackets;u_int64_t ifi_oerrors;u_int64_t ifi_collisions;u_int64_t ifi_ibytes;u_int64_t ifi_obytes;u_int64_t ifi_imcasts;u_int64_t ifi_omcasts;u_int64_t ifi_iqdrops;u_int64_t ifi_noproto;u_int32_t ifi_recvtiming;u_int32_t ifi_xmittiming;struct timeval32 ifi_lastchange;};
union ldt_entry {code_desc_t code;data_desc_t data;call_gate_t call_gate;task_gate_t task_gate;};
struct lockd_ans {int la_version;int la_errno;u_int64_t la_xid;int la_flags;pid_t la_pid;off_t la_start;off_t la_len;int la_fh_len;u_int8_t la_fh[64];};
struct sadb_comb {u_int8_t sadb_comb_auth;u_int8_t sadb_comb_encrypt;u_int16_t sadb_comb_flags;u_int16_t sadb_comb_auth_minbits;u_int16_t sadb_comb_auth_maxbits;u_int16_t sadb_comb_encrypt_minbits;u_int16_t sadb_comb_encrypt_maxbits;u_int32_t sadb_comb_reserved;u_int32_t sadb_comb_soft_allocations;u_int32_t sadb_comb_hard_allocations;u_int64_t sadb_comb_soft_bytes;u_int64_t sadb_comb_hard_bytes;u_int64_t sadb_comb_soft_addtime;u_int64_t sadb_comb_hard_addtime;u_int64_t sadb_comb_soft_usetime;u_int64_t sadb_comb_hard_usetime;};
struct _xmlAttr {void *_private;xmlElementType type; xmlChar *name;struct _xmlNode *children;struct _xmlNode *last;struct _xmlNode *parent;struct _xmlAttr *next;struct _xmlAttr *prev;struct _xmlDoc *doc;xmlNs *ns;xmlAttributeType atype;void *psvi;};
struct formnode {unsigned short status;short rows;short cols;int currow;int curcol;int toprow;int begincol;short maxfield;short maxpage;short curpage;Form_Options opts;WINDOW *win;WINDOW *sub;WINDOW *w;FIELD **field;FIELD *current;_PAGE *page;void *usrptr;void (*forminit)(struct formnode *);void (*formterm)(struct formnode *);void (*fieldinit)(struct formnode *);void (*fieldterm)(struct formnode *);};
struct ipc_perm {uid_t uid;gid_t gid;uid_t cuid;gid_t cgid;mode_t mode;unsigned short _seq;key_t _key;};
struct nlist_64 {union nlist_64___4D543BF749BB09F4875D250FEC3C43C7 n_un;uint8_t n_type;uint8_t n_sect;uint16_t n_desc;uint64_t n_value;};
struct __ns_rr {char name[1025];u_int16_t type;u_int16_t rr_class;u_int32_t ttl;u_int16_t rdlength; u_char *rdata;};
struct vifctl {vifi_t vifc_vifi;u_char vifc_flags;u_char vifc_threshold;u_int vifc_rate_limit;struct in_addr vifc_lcl_addr;struct in_addr vifc_rmt_addr;};
struct xdrbuf {union xdrbuf___3C99F4725429E2A3FEA5222150305F9C xb_u;char *xb_ptr;size_t xb_left;size_t xb_growsize;xdrbuf_type xb_type;uint32_t xb_flags;};
struct bootp {u_char bp_op;u_char bp_htype;u_char bp_hlen;u_char bp_hops;u_int32_t bp_xid;u_short bp_secs;u_short bp_unused;struct in_addr bp_ciaddr;struct in_addr bp_yiaddr;struct in_addr bp_siaddr;struct in_addr bp_giaddr;u_char bp_chaddr[16];u_char bp_sname[64];u_char bp_file[128];u_char bp_vend[64];};
struct ipp_s {ipp_state_t state;ipp_request_t request;ipp_attribute_t *attrs;ipp_attribute_t *last;ipp_attribute_t *current;ipp_tag_t curtag;ipp_attribute_t *prev;int use;};
struct lockf {short lf_flags;short lf_type;off_t lf_start;off_t lf_end;caddr_t lf_id;struct lockf **lf_head;struct vnode *lf_vnode;struct lockf *lf_next;struct locklist lf_blkhd;struct lockf___8E53988229C36DA83A3F462691E29587 lf_block;};
struct nlist {union nlist___26321F46A668C9EA20993925C0BB247E n_un;uint8_t n_type;uint8_t n_sect;int16_t n_desc;uint32_t n_value;};
struct ucred {struct ucred___FA68314EC5A1B61A7AF0AAA32900A7CA cr_link;u_long cr_ref;struct ucred__posix_cred cr_posix;struct label *cr_label;struct au_session cr_audit;};
struct tree {struct tree *child_list;struct tree *next_peer;struct tree *next;struct tree *parent;char *label;u_long subid;int modid;int number_modules;int *module_list;int tc_index;int type;int access;int status;struct enum_list *enums;struct range_list *ranges;struct index_list *indexes;char *augments;struct varbind_list *varbinds;char *hint;char *units;int (*printomat)(u_char **, size_t *, size_t *, int,  netsnmp_variable_list *,  struct enum_list *,  char *,  char *);void (*printer)(char *,  netsnmp_variable_list *,  struct enum_list *,  char *,  char *);char *description;char *reference;int reported;char *defaultValue;};
union STORE_OBJECT_st___78662AA53663BCB8AAE8916B78AF8CFA {struct STORE_OBJECT_st___78662AA53663BCB8AAE8916B78AF8CFA___FA360D2E41DCB3363DB7C6EE711F8FB0 x509;X509_CRL *crl;EVP_PKEY *key;BIGNUM *number;BUF_MEM *arbitrary;};
union ifreq___C815701E280F15262E20FD07168CD215 {struct sockaddr ifru_addr;struct sockaddr ifru_dstaddr;struct sockaddr ifru_broadaddr;short ifru_flags;int ifru_metric;int ifru_mtu;int ifru_phys;int ifru_media;int ifru_intval;caddr_t ifru_data;struct ifdevmtu ifru_devmtu;struct ifkpi ifru_kpi;u_int32_t ifru_wake_flags;u_int32_t ifru_route_refcnt;int ifru_cap[2];};
struct _0FEB23DD3DAEBEB1108EF0227BA432B3 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;vm_sync_t sync_flags;};
struct _293AEC9DFB56700A4584D426C489FAA8 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;vm_inherit_t new_inheritance;};
struct _2E4AEC4DAEDEFAF9740FCE81CFC978B6 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object_handle;NDR_record_t NDR;vm_size_t size;};
struct _40D648FC67D542FF76846B4380CDA5C4 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;unsigned int ltotal;vm_size_t space;vm_size_t resident;vm_size_t maxusage;vm_offset_t maxstack;};
struct _4C821A4EFE1115B5FC2C4B7C575B022E {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t alarm_code;alarm_type_t alarm_type;mach_timespec_t alarm_time;};
struct _5A0A32527D91D719A95F587BC624F670 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;natural_t object_type;mach_vm_address_t object_addr;};
struct _5EE71EC2B6ECEB33372096427B2859E8 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t thread;NDR_record_t NDR;boolean_t wired;};
struct _671C5A9886DEC29C4FEC63DF421615C6 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_set;NDR_record_t NDR;boolean_t assign_threads;};
struct _7C98BE8D658361DF4FF7D8EB6353C72F {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_vm_address_t target_address;vm_prot_t cur_protection;vm_prot_t max_protection;};
struct _D6880A8626DE4DB5DA08690FFF5A7EE0 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t notify_port;NDR_record_t NDR;host_flavor_t notify_type;};
struct _ECBF3EDE173DC336165517660AF0126F {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;vm_behavior_t new_behavior;};
struct _EE99DDBDD6523B38A4B5202F2305E34F {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object_handle;NDR_record_t NDR;memory_object_size_t size;};
struct _FD3C3D52399ED0C4A355988E4BC1F0A0 {char __magic[8];char __encoding[32];__darwin_rune_t (*__sgetrune)( char *, __darwin_size_t,  char **);int (*__sputrune)(__darwin_rune_t, char *, __darwin_size_t, char **);__darwin_rune_t __invalid_rune;__uint32_t __runetype[256];__darwin_rune_t __maplower[256];__darwin_rune_t __mapupper[256];_RuneRange __runetype_ext;_RuneRange __maplower_ext;_RuneRange __mapupper_ext;void *__variable;int __variable_len;int __ncharclasses;_RuneCharClass *__charclasses;};
struct _FFE74F33A8D4184B0115806877430EDD {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_set;NDR_record_t NDR;boolean_t wait;};
typedef void (*DNSServiceQueryRecordReply)(DNSServiceRef sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceErrorType errorCode,  char *fullname, uint16_t rrtype, uint16_t rrclass, uint16_t rdlen,  void *rdata, uint32_t ttl, void *context);
typedef int mpo_system_check_sysctl_t(kauth_cred_t cred, int *name, u_int namelen, user_addr_t old, user_addr_t oldlenp, int inkernel, user_addr_t newvalue, size_t newlen);
typedef void (*xlinkExtendedLinkSetFunk)(void *ctx, xmlNodePtr node, int nbLocators,  xlinkHRef *hrefs,  xlinkRole *roles, int nbTitles,  xlinkTitle *titles,  xmlChar **langs);
struct __attribute__((packed)) __attribute__((aligned(2))) HFSMasterDirectoryBlock {u_int16_t drSigWord;u_int32_t drCrDate;u_int32_t drLsMod;u_int16_t drAtrb;u_int16_t drNmFls;u_int16_t drVBMSt;u_int16_t drAllocPtr;u_int16_t drNmAlBlks;u_int32_t drAlBlkSiz;u_int32_t drClpSiz;u_int16_t drAlBlSt;u_int32_t drNxtCNID;u_int16_t drFreeBks;u_int8_t drVN[28];u_int32_t drVolBkUp;u_int16_t drVSeqNum;u_int32_t drWrCnt;u_int32_t drXTClpSiz;u_int32_t drCTClpSiz;u_int16_t drNmRtDirs;u_int32_t drFilCnt;u_int32_t drDirCnt;u_int32_t drFndrInfo[8];u_int16_t drEmbedSigWord;HFSExtentDescriptor drEmbedExtent;u_int32_t drXTFlSize;HFSExtentRecord drXTExtRec;u_int32_t drCTFlSize;HFSExtentRecord drCTExtRec;};
struct vm_region_basic_info_64 {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;boolean_t shared;boolean_t reserved;memory_object_offset_t offset;vm_behavior_t behavior;unsigned short user_wired_count;};
typedef void (*DNSServiceResolveReply)(DNSServiceRef sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceErrorType errorCode,  char *fullname,  char *hosttarget, uint16_t port, uint16_t txtLen,  unsigned char *txtRecord, void *context);
struct _xmlXPathParserContext { xmlChar *cur; xmlChar *base;int error;xmlXPathContextPtr context;xmlXPathObjectPtr value;int valueNr;int valueMax;xmlXPathObjectPtr *valueTab;xmlXPathCompExprPtr comp;int xptr;xmlNodePtr ancestor;};
struct __attribute__((packed)) nfs_user_stat_user_rec {u_char rec_type;uid_t uid;struct sockaddr_storage sock;uint64_t ops;uint64_t bytes_read;uint64_t bytes_written;uint32_t tm_start;uint32_t tm_last;};
struct _krb5_ap_rep_enc_part {krb5_magic magic;krb5_timestamp ctime;krb5_int32 cusec;krb5_keyblock *subkey;krb5_ui_4 seq_number;};
struct x509_lookup_method_st { char *name;int (*new_item)(X509_LOOKUP *ctx);void (*free)(X509_LOOKUP *ctx);int (*init)(X509_LOOKUP *ctx);int (*shutdown)(X509_LOOKUP *ctx);int (*ctrl)(X509_LOOKUP *ctx, int cmd,  char *argc, long long argl, char **ret);int (*get_by_subject)(X509_LOOKUP *ctx, int type, X509_NAME *name, X509_OBJECT *ret);int (*get_by_issuer_serial)(X509_LOOKUP *ctx, int type, X509_NAME *name, ASN1_INTEGER *serial, X509_OBJECT *ret);int (*get_by_fingerprint)(X509_LOOKUP *ctx, int type, unsigned char *bytes, int len, X509_OBJECT *ret);int (*get_by_alias)(X509_LOOKUP *ctx, int type, char *str, int len, X509_OBJECT *ret);};
struct krb5_keytab_entry_st {krb5_magic magic;krb5_principal principal;krb5_timestamp timestamp;krb5_kvno vno;krb5_keyblock key;};
struct vm_region_basic_info {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;boolean_t shared;boolean_t reserved;uint32_t offset;vm_behavior_t behavior;unsigned short user_wired_count;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusVolumeHeader {u_int16_t signature;u_int16_t version;u_int32_t attributes;u_int32_t lastMountedVersion;u_int32_t journalInfoBlock;u_int32_t createDate;u_int32_t modifyDate;u_int32_t backupDate;u_int32_t checkedDate;u_int32_t fileCount;u_int32_t folderCount;u_int32_t blockSize;u_int32_t totalBlocks;u_int32_t freeBlocks;u_int32_t nextAllocation;u_int32_t rsrcClumpSize;u_int32_t dataClumpSize;u_int32_t nextCatalogID;u_int32_t writeCount;u_int64_t encodingsBitmap;u_int8_t finderInfo[32];HFSPlusForkData allocationFile;HFSPlusForkData extentsFile;HFSPlusForkData catalogFile;HFSPlusForkData attributesFile;HFSPlusForkData startupFile;};
struct _krb5_cred_enc_part {krb5_magic magic;krb5_int32 nonce;krb5_timestamp timestamp;krb5_int32 usec;krb5_address *s_address;krb5_address *r_address;krb5_cred_info **ticket_info;};
struct pkcs7_recip_info_st {ASN1_INTEGER *version;PKCS7_ISSUER_AND_SERIAL *issuer_and_serial;X509_ALGOR *key_enc_algor;ASN1_OCTET_STRING *enc_key;X509 *cert;};
struct register_parameters {oid *name;size_t namelen;int priority;int range_subid;oid range_ubound;int timeout;u_char flags; char *contextName;netsnmp_session *session;netsnmp_handler_registration *reginfo;};
struct st_dynamic_LOCK_fns {dyn_lock_locking_cb lock_locking_cb;dyn_lock_add_lock_cb lock_add_lock_cb;dyn_dynlock_create_cb dynlock_create_cb;dyn_dynlock_lock_cb dynlock_lock_cb;dyn_dynlock_destroy_cb dynlock_destroy_cb;};
struct _xmlSchemaWildcard {xmlSchemaTypeType type; xmlChar *id;xmlSchemaAnnotPtr annot;xmlNodePtr node;int minOccurs;int maxOccurs;int processContents;int any;xmlSchemaWildcardNsPtr nsSet;xmlSchemaWildcardNsPtr negNsSet;int flags;};
struct netsnmp_subtree_s {oid *name_a;u_char namelen;oid *start_a;u_char start_len;oid *end_a;u_char end_len;struct variable *variables;int variables_len;int variables_width;char *label_a;netsnmp_session *session;u_char flags;u_char priority;int timeout;struct netsnmp_subtree_s *next;struct netsnmp_subtree_s *prev;struct netsnmp_subtree_s *children;int range_subid;oid range_ubound;netsnmp_handler_registration *reginfo;int cacheid;int global_cacheid;size_t oid_off;};
typedef BOOL (*pConfigDriverFunc)(HWND hwndParent, WORD fRequest, LPCSTR lpszDriver, LPCSTR lpszArgs, LPSTR lpszMsg, WORD cbMsgMax, WORD *pcbMsgOut);
struct vm_info_region_64 {natural_t vir_start;natural_t vir_end;natural_t vir_object;memory_object_offset_t vir_offset;boolean_t vir_needs_copy;vm_prot_t vir_protection;vm_prot_t vir_max_protection;vm_inherit_t vir_inheritance;natural_t vir_wired_count;natural_t vir_user_wired_count;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSCatalogFolder {int16_t recordType;u_int16_t flags;u_int16_t valence;u_int32_t folderID;u_int32_t createDate;u_int32_t modifyDate;u_int32_t backupDate;FndrDirInfo userInfo;FndrOpaqueInfo finderInfo;u_int32_t reserved[4];};
typedef Bool (*TidyReportFilter)(TidyDoc tdoc, TidyReportLevel lvl, uint line, uint col, ctmbstr mssg);
struct X509_req_info_st {ASN1_ENCODING enc;ASN1_INTEGER *version;X509_NAME *subject;X509_PUBKEY *pubkey;STACK *attributes;};
struct sasl_client_plug { char *mech_name;sasl_ssf_t max_ssf;unsigned int security_flags;unsigned int features; unsigned long long *required_prompts;void *glob_context;int (*mech_new)(void *glob_context, sasl_client_params_t *cparams, void **conn_context);int (*mech_step)(void *conn_context, sasl_client_params_t *cparams,  char *serverin, unsigned int serverinlen, sasl_interact_t **prompt_need,  char **clientout, unsigned int *clientoutlen, sasl_out_params_t *oparams);void (*mech_dispose)(void *conn_context,  sasl_utils_t *utils);void (*mech_free)(void *glob_context,  sasl_utils_t *utils);int (*idle)(void *glob_context, void *conn_context, sasl_client_params_t *cparams);int (*spare_fptr1)();int (*spare_fptr2)();};
struct sasl_server_plug { char *mech_name;sasl_ssf_t max_ssf;unsigned int security_flags;unsigned int features;void *glob_context;int (*mech_new)(void *glob_context, sasl_server_params_t *sparams,  char *challenge, unsigned int challen, void **conn_context);int (*mech_step)(void *conn_context, sasl_server_params_t *sparams,  char *clientin, unsigned int clientinlen,  char **serverout, unsigned int *serveroutlen, sasl_out_params_t *oparams);void (*mech_dispose)(void *conn_context,  sasl_utils_t *utils);void (*mech_free)(void *glob_context,  sasl_utils_t *utils);int (*setpass)(void *glob_context, sasl_server_params_t *sparams,  char *user,  char *pass, unsigned int passlen,  char *oldpass, unsigned int oldpasslen, unsigned int flags);int (*user_query)(void *glob_context, sasl_server_params_t *sparams,  char *user, int maxmech,  char **mechlist);int (*idle)(void *glob_context, void *conn_context, sasl_server_params_t *sparams);int (*mech_avail)(void *glob_context, sasl_server_params_t *sparams, void **conn_context);int (*spare_fptr2)();};
struct kmod_info_64_v1 {uint64_t next_addr;int32_t info_version;uint32_t id;uint8_t name[64];uint8_t version[64];int32_t reference_count;uint64_t reference_list_addr;uint64_t address;uint64_t size;uint64_t hdr_size;uint64_t start_addr;uint64_t stop_addr;};
struct __shmid_ds_new {struct ipc_perm shm_perm;size_t shm_segsz;pid_t shm_lpid;pid_t shm_cpid;shmatt_t shm_nattch;time_t shm_atime;time_t shm_dtime;time_t shm_ctime;void *shm_internal;};
struct _ipfw_dyn_rule {ipfw_dyn_rule *next;struct ip_fw *rule;ipfw_dyn_rule *parent;u_int64_t pcnt;u_int64_t bcnt;struct ipfw_flow_id id;u_int32_t expire;u_int32_t bucket;u_int32_t state;u_int32_t ack_fwd;u_int32_t ack_rev;u_int16_t dyn_type;u_int16_t count;};
struct _krb5_response {krb5_magic magic;krb5_octet message_type;krb5_data response;krb5_int32 expected_nonce;krb5_timestamp request_time;};
struct hfs_mount_args {char *fspec;uid_t hfs_uid;gid_t hfs_gid;mode_t hfs_mask;u_int32_t hfs_encoding;struct timezone hfs_timezone;int flags;int journal_tbuffer_size;int journal_flags;int journal_disable;};
struct ssl_session_st {int ssl_version;unsigned int key_arg_length;unsigned char key_arg[8];int master_key_length;unsigned char master_key[48];unsigned int session_id_length;unsigned char session_id[32];unsigned int sid_ctx_length;unsigned char sid_ctx[32];int not_resumable;struct sess_cert_st *sess_cert;X509 *peer;long long verify_result;int references;long long timeout;long long time;int compress_meth;SSL_CIPHER *cipher;unsigned long long cipher_id;STACK *ciphers;CRYPTO_EX_DATA ex_data;struct ssl_session_st *prev;struct ssl_session_st *next;char *tlsext_hostname;unsigned char *tlsext_tick;size_t tlsext_ticklen;long long tlsext_tick_lifetime_hint;};
typedef u_char *FindVarMethod(struct variable *vp, oid *name, size_t *length, int exact, size_t *var_len, WriteMethod **write_method);
struct _xmlAttribute {void *_private;xmlElementType type; xmlChar *name;struct _xmlNode *children;struct _xmlNode *last;struct _xmlDtd *parent;struct _xmlNode *next;struct _xmlNode *prev;struct _xmlDoc *doc;struct _xmlAttribute *nexth;xmlAttributeType atype;xmlAttributeDefault def; xmlChar *defaultValue;xmlEnumerationPtr tree; xmlChar *prefix; xmlChar *elem;};
struct _xmlShellCtxt {char *filename;xmlDocPtr doc;xmlNodePtr node;xmlXPathContextPtr pctxt;int loaded;FILE *output;xmlShellReadlineFunc input;};
struct curl_fileinfo {char *filename;curlfiletype filetype;time_t time;unsigned int perm;int uid;int gid;curl_off_t size;long long hardlinks;struct curl_fileinfo___077514F63D1BEBBC677B95BCFA7479A7 strings;unsigned int flags;char *b_data;size_t b_size;size_t b_used;};
struct variable_list {struct variable_list *next_variable;oid *name;size_t name_length;u_char type;netsnmp_vardata val;size_t val_len;oid name_loc[128];u_char buf[40];void *data;void (*dataFreeHook)(void *);int index;};
struct nfs_lock_msg {int lm_version;int lm_flags;u_int64_t lm_xid;struct flock lm_fl;struct sockaddr_storage lm_addr;int lm_fh_len;struct xucred lm_cred;u_int8_t lm_fh[64];};
struct proc_bsdinfo {uint32_t pbi_flags;uint32_t pbi_status;uint32_t pbi_xstatus;uint32_t pbi_pid;uint32_t pbi_ppid;uid_t pbi_uid;gid_t pbi_gid;uid_t pbi_ruid;gid_t pbi_rgid;uid_t pbi_svuid;gid_t pbi_svgid;uint32_t rfu_1;char pbi_comm[16];char pbi_name[32];uint32_t pbi_nfiles;uint32_t pbi_pgid;uint32_t pbi_pjobc;uint32_t e_tdev;uint32_t e_tpgid;int32_t pbi_nice;uint64_t pbi_start_tvsec;uint64_t pbi_start_tvusec;};
struct rsa_meth_st { char *name;int (*rsa_pub_enc)(int flen,  unsigned char *from, unsigned char *to, RSA *rsa, int padding);int (*rsa_pub_dec)(int flen,  unsigned char *from, unsigned char *to, RSA *rsa, int padding);int (*rsa_priv_enc)(int flen,  unsigned char *from, unsigned char *to, RSA *rsa, int padding);int (*rsa_priv_dec)(int flen,  unsigned char *from, unsigned char *to, RSA *rsa, int padding);int (*rsa_mod_exp)(BIGNUM *r0,  BIGNUM *I, RSA *rsa, BN_CTX *ctx);int (*bn_mod_exp)(BIGNUM *r,  BIGNUM *a,  BIGNUM *p,  BIGNUM *m, BN_CTX *ctx, BN_MONT_CTX *m_ctx);int (*init)(RSA *rsa);int (*finish)(RSA *rsa);int flags;char *app_data;int (*rsa_sign)(int type,  unsigned char *m, unsigned int m_length, unsigned char *sigret, unsigned int *siglen,  RSA *rsa);int (*rsa_verify)(int dtype,  unsigned char *m, unsigned int m_length, unsigned char *sigbuf, unsigned int siglen,  RSA *rsa);int (*rsa_keygen)(RSA *rsa, int bits, BIGNUM *e, BN_GENCB *cb);};
struct _xmlSchema { xmlChar *name; xmlChar *targetNamespace; xmlChar *version; xmlChar *id;xmlDocPtr doc;xmlSchemaAnnotPtr annot;int flags;xmlHashTablePtr typeDecl;xmlHashTablePtr attrDecl;xmlHashTablePtr attrgrpDecl;xmlHashTablePtr elemDecl;xmlHashTablePtr notaDecl;xmlHashTablePtr schemasImports;void *_private;xmlHashTablePtr groupDecl;xmlDictPtr dict;void *includes;int preserve;int counter;xmlHashTablePtr idcDef;void *volatiles;};
struct kevent64_s {uint64_t ident;int16_t filter;uint16_t flags;uint32_t fflags;int64_t data;uint64_t udata;uint64_t ext[2];};
struct rt_msghdr2 {u_short rtm_msglen;u_char rtm_version;u_char rtm_type;u_short rtm_index;int rtm_flags;int rtm_addrs;int32_t rtm_refcnt;int rtm_parentflags;int rtm_reserved;int rtm_use;u_int32_t rtm_inits;struct rt_metrics rtm_rmx;};
struct variable13 {u_char magic;u_char type;u_short acl;FindVarMethod *findVar;u_char namelen;oid name[13];};
struct dh_method { char *name;int (*generate_key)(DH *dh);int (*compute_key)(unsigned char *key,  BIGNUM *pub_key, DH *dh);int (*bn_mod_exp)( DH *dh, BIGNUM *r,  BIGNUM *a,  BIGNUM *p,  BIGNUM *m, BN_CTX *ctx, BN_MONT_CTX *m_ctx);int (*init)(DH *dh);int (*finish)(DH *dh);int flags;char *app_data;int (*generate_params)(DH *dh, int prime_len, int generator, BN_GENCB *cb);};
struct rt_msghdr {u_short rtm_msglen;u_char rtm_version;u_char rtm_type;u_short rtm_index;int rtm_flags;int rtm_addrs;pid_t rtm_pid;int rtm_seq;int rtm_errno;int rtm_use;u_int32_t rtm_inits;struct rt_metrics rtm_rmx;};
struct variable1 {u_char magic;u_char type;u_short acl;FindVarMethod *findVar;u_char namelen;oid name[1];};
struct variable2 {u_char magic;u_char type;u_short acl;FindVarMethod *findVar;u_char namelen;oid name[2];};
struct variable3 {u_char magic;u_char type;u_short acl;FindVarMethod *findVar;u_char namelen;oid name[3];};
struct variable4 {u_char magic;u_char type;u_short acl;FindVarMethod *findVar;u_char namelen;oid name[4];};
struct variable7 {u_char magic;u_char type;u_short acl;FindVarMethod *findVar;u_char namelen;oid name[7];};
struct variable8 {u_char magic;u_char type;u_short acl;FindVarMethod *findVar;u_char namelen;oid name[8];};
struct vfsstatfs {uint32_t f_bsize;size_t f_iosize;uint64_t f_blocks;uint64_t f_bfree;uint64_t f_bavail;uint64_t f_bused;uint64_t f_files;uint64_t f_ffree;fsid_t f_fsid;uid_t f_owner;uint64_t f_flags;char f_fstypename[16];char f_mntonname[1024];char f_mntfromname[1024];uint32_t f_fssubtype;void *f_reserved[2];};
struct snmp_pdu {long long version;int command;long long reqid;long long msgid;long long transid;long long sessid;long long errstat;long long errindex;u_long time;u_long flags;int securityModel;int securityLevel;int msgParseModel;void *transport_data;int transport_data_length; oid *tDomain;size_t tDomainLen;netsnmp_variable_list *variables;u_char *community;size_t community_len;oid *enterprise;size_t enterprise_length;long long trap_type;long long specific_type;unsigned char agent_addr[4];u_char *contextEngineID;size_t contextEngineIDLen;char *contextName;size_t contextNameLen;u_char *securityEngineID;size_t securityEngineIDLen;char *securityName;size_t securityNameLen;int priority;int range_subid;void *securityStateRef;};
struct statfs64 {uint32_t f_bsize;int32_t f_iosize;uint64_t f_blocks;uint64_t f_bfree;uint64_t f_bavail;uint64_t f_files;uint64_t f_ffree;fsid_t f_fsid;uid_t f_owner;uint32_t f_type;uint32_t f_flags;uint32_t f_fssubtype;char f_fstypename[16];char f_mntonname[1024];char f_mntfromname[1024];uint32_t f_reserved[8];};
struct variable {u_char magic;char type;u_short acl;FindVarMethod *findVar;u_char namelen;oid name[128];};
struct tagMENU {short height;short width;short rows;short cols;short frows;short fcols;short arows;short namelen;short desclen;short marklen;short itemlen;short spc_desc;short spc_cols;short spc_rows;char *pattern;short pindex;WINDOW *win;WINDOW *sub;WINDOW *userwin;WINDOW *usersub;ITEM **items;short nitems;ITEM *curitem;short toprow;chtype fore;chtype back;chtype grey;unsigned char pad;Menu_Hook menuinit;Menu_Hook menuterm;Menu_Hook iteminit;Menu_Hook itemterm;void *userptr;char *mark;Menu_Options opt;unsigned short status;};
struct xsocket {u_int32_t xso_len;u_int32_t xso_so;short so_type;short so_options;short so_linger;short so_state;u_int32_t so_pcb;int xso_protocol;int xso_family;short so_qlen;short so_incqlen;short so_qlimit;short so_timeo;u_short so_error;pid_t so_pgid;u_int32_t so_oobmark;struct xsockbuf so_rcv;struct xsockbuf so_snd;uid_t so_uid;};
struct dsa_st {int pad;long long version;int write_params;BIGNUM *p;BIGNUM *q;BIGNUM *g;BIGNUM *pub_key;BIGNUM *priv_key;BIGNUM *kinv;BIGNUM *r;int flags;BN_MONT_CTX *method_mont_p;int references;CRYPTO_EX_DATA ex_data; DSA_METHOD *meth;ENGINE *engine;};
struct dso_st {DSO_METHOD *meth;STACK *meth_data;int references;int flags;CRYPTO_EX_DATA ex_data;DSO_NAME_CONVERTER_FUNC name_converter;DSO_MERGER_FUNC merger;char *filename;char *loaded_filename;};
struct kevent {uintptr_t ident;int16_t filter;uint16_t flags;uint32_t fflags;intptr_t data;void *udata;};
struct statfs {uint32_t f_bsize;int32_t f_iosize;uint64_t f_blocks;uint64_t f_bfree;uint64_t f_bavail;uint64_t f_files;uint64_t f_ffree;fsid_t f_fsid;uid_t f_owner;uint32_t f_type;uint32_t f_flags;uint32_t f_fssubtype;char f_fstypename[16];char f_mntonname[1024];char f_mntfromname[1024];uint32_t f_reserved[8];};
struct dh_st {int pad;int version;BIGNUM *p;BIGNUM *g;long long length;BIGNUM *pub_key;BIGNUM *priv_key;int flags;BN_MONT_CTX *method_mont_p;BIGNUM *q;BIGNUM *j;unsigned char *seed;int seedlen;BIGNUM *counter;int references;CRYPTO_EX_DATA ex_data; DH_METHOD *meth;ENGINE *engine;};
struct ip_fw {u_int32_t version;void *context;struct ip_fw *next;struct ip_fw *next_rule;u_int16_t act_ofs;u_int16_t cmd_len;u_int16_t rulenum;u_int8_t set;u_int32_t set_masks[2];u_int8_t _pad;u_int64_t pcnt;u_int64_t bcnt;u_int32_t timestamp;u_int32_t reserved_1;u_int32_t reserved_2;ipfw_insn cmd[1];};
struct mfc {struct in_addr mfc_origin;struct in_addr mfc_mcastgrp;vifi_t mfc_parent;u_char mfc_ttls[32];u_int32_t mfc_pkt_cnt;u_int32_t mfc_byte_cnt;u_int32_t mfc_wrong_if;int mfc_expire;struct timeval mfc_last_assert;struct rtdetq *mfc_stall;struct mfc *mfc_next;};
union llc___94526051AE93F16537B4BA3D9839A03C {struct llc___94526051AE93F16537B4BA3D9839A03C___3AFEBDF7A4FC08BFE9A431A2DA7430D4 type_u;struct llc___94526051AE93F16537B4BA3D9839A03C___A3920816D4629CE8D4A8F0ADB219F5F7 type_i;struct llc___94526051AE93F16537B4BA3D9839A03C___91B3B8FDADC1811899AE65C68A225D1C type_s;struct llc___94526051AE93F16537B4BA3D9839A03C___C255F273D17FD18D4EDDE30A2FF3191C type_frmr;__attribute__((packed)) struct llc___94526051AE93F16537B4BA3D9839A03C___7008580425A2D9D299FFCC87FFBB188D type_snap;struct llc___94526051AE93F16537B4BA3D9839A03C___D0AC4D4AA87A2DEF3381B9718ACFF2C3 type_raw;};
union __RequestUnion__processor_subsystem {__Request__processor_start_t Request_processor_start;__Request__processor_exit_t Request_processor_exit;__Request__processor_info_t Request_processor_info;__Request__processor_control_t Request_processor_control;__Request__processor_assign_t Request_processor_assign;__Request__processor_get_assignment_t Request_processor_get_assignment;};
union __RequestUnion__lock_set_subsystem {__Request__lock_acquire_t Request_lock_acquire;__Request__lock_release_t Request_lock_release;__Request__lock_try_t Request_lock_try;__Request__lock_make_stable_t Request_lock_make_stable;__Request__lock_handoff_t Request_lock_handoff;__Request__lock_handoff_accept_t Request_lock_handoff_accept;};
struct _492B927987B38FBFCA824A1252671E25 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;boolean_t set_maximum;vm_prot_t new_protection;};
struct _6AAD439E9A60B13F59A2B34A0B1B968C {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t alarm_port;NDR_record_t NDR;alarm_type_t alarm_type;mach_timespec_t alarm_time;};
struct _74E88319F6971EE204DBFD9B57B269F8 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;vm_machine_attribute_t attribute;vm_machine_attribute_val_t value;};
struct _A737AF5627966EA5E9B02401BF60C18A {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t target_task;mach_msg_port_descriptor_t host;NDR_record_t NDR;security_token_t sec_token;audit_token_t audit_token;};
union __ReplyUnion__processor_subsystem {__Reply__processor_start_t Reply_processor_start;__Reply__processor_exit_t Reply_processor_exit;__Reply__processor_info_t Reply_processor_info;__Reply__processor_control_t Reply_processor_control;__Reply__processor_assign_t Reply_processor_assign;__Reply__processor_get_assignment_t Reply_processor_get_assignment;};
union __ReplyUnion__lock_set_subsystem {__Reply__lock_acquire_t Reply_lock_acquire;__Reply__lock_release_t Reply_lock_release;__Reply__lock_try_t Reply_lock_try;__Reply__lock_make_stable_t Reply_lock_make_stable;__Reply__lock_handoff_t Reply_lock_handoff;__Reply__lock_handoff_accept_t Reply_lock_handoff_accept;};
struct vm_region_submap_short_info_64 {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;memory_object_offset_t offset;unsigned int user_tag;unsigned int ref_count;unsigned short shadow_depth;unsigned char external_pager;unsigned char share_mode;boolean_t is_submap;vm_behavior_t behavior;vm32_object_id_t object_id;unsigned short user_wired_count;};
typedef void (*DNSServiceNATPortMappingReply)(DNSServiceRef sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, DNSServiceErrorType errorCode, uint32_t externalAddress, DNSServiceProtocol protocol, uint16_t internalPort, uint16_t externalPort, uint32_t ttl, void *context);
typedef int (*ENGINE_SSL_CLIENT_CERT_PTR)(ENGINE *, SSL *ssl, STACK *ca_dn, X509 **pcert, EVP_PKEY **pkey, STACK **pother, UI_METHOD *ui_method, void *callback_data);
struct _krb5_get_init_creds_opt {krb5_flags flags;krb5_deltat tkt_life;krb5_deltat renew_life;int forwardable;int proxiable;krb5_enctype *etype_list;int etype_list_length;krb5_address **address_list;krb5_preauthtype *preauth_list;int preauth_list_length;krb5_data *salt;};
struct vm_region_submap_info_64 {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;memory_object_offset_t offset;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned short shadow_depth;unsigned char external_pager;unsigned char share_mode;boolean_t is_submap;vm_behavior_t behavior;vm32_object_id_t object_id;unsigned short user_wired_count;};
struct vm_region_submap_info {vm_prot_t protection;vm_prot_t max_protection;vm_inherit_t inheritance;uint32_t offset;unsigned int user_tag;unsigned int pages_resident;unsigned int pages_shared_now_private;unsigned int pages_swapped_out;unsigned int pages_dirtied;unsigned int ref_count;unsigned short shadow_depth;unsigned char external_pager;unsigned char share_mode;boolean_t is_submap;vm_behavior_t behavior;vm32_object_id_t object_id;unsigned short user_wired_count;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusCatalogFolder {int16_t recordType;u_int16_t flags;u_int32_t valence;u_int32_t folderID;u_int32_t createDate;u_int32_t contentModDate;u_int32_t attributeModDate;u_int32_t accessDate;u_int32_t backupDate;HFSPlusBSDInfo bsdInfo;FndrDirInfo userInfo;FndrOpaqueInfo finderInfo;u_int32_t textEncoding;u_int32_t folderCount;};
struct pkcs7_signer_info_st {ASN1_INTEGER *version;PKCS7_ISSUER_AND_SERIAL *issuer_and_serial;X509_ALGOR *digest_alg;STACK *auth_attr;X509_ALGOR *digest_enc_alg;ASN1_OCTET_STRING *enc_digest;STACK *unauth_attr;EVP_PKEY *pkey;};
struct mach_vm_info_region {mach_vm_offset_t vir_start;mach_vm_offset_t vir_end;mach_vm_offset_t vir_object;memory_object_offset_t vir_offset;boolean_t vir_needs_copy;vm_prot_t vir_protection;vm_prot_t vir_max_protection;vm_inherit_t vir_inheritance;natural_t vir_wired_count;natural_t vir_user_wired_count;};
struct sasl_client_params { char *service; char *serverFQDN; char *clientFQDN; sasl_utils_t *utils; sasl_callback_t *prompt_supp; char *iplocalport; char *ipremoteport;unsigned int servicelen;unsigned int slen;unsigned int clen;unsigned int iploclen;unsigned int ipremlen;sasl_security_properties_t props;sasl_ssf_t external_ssf;void *spare_ptr1;void *spare_ptr2;void *spare_ptr3;void *spare_ptr4;int (*canon_user)(sasl_conn_t *conn,  char *in, unsigned int len, unsigned int flags, sasl_out_params_t *oparams);int (*spare_fptr1)();int spare_int1;int spare_int2;int spare_int3;unsigned int flags;int param_version;};
struct X509_crl_info_st {ASN1_INTEGER *version;X509_ALGOR *sig_alg;X509_NAME *issuer;ASN1_TIME *lastUpdate;ASN1_TIME *nextUpdate;STACK *revoked;STACK *extensions;ASN1_ENCODING enc;};
struct _krb5_cred_info {krb5_magic magic;krb5_keyblock *session;krb5_principal client;krb5_principal server;krb5_flags flags;krb5_ticket_times times;krb5_address **caddrs;};
struct _xmlSchemaFacet {xmlSchemaTypeType type;struct _xmlSchemaFacet *next; xmlChar *value; xmlChar *id;xmlSchemaAnnotPtr annot;xmlNodePtr node;int fixed;int whitespace;xmlSchemaValPtr val;xmlRegexpPtr regexp;};
struct host_basic_info {integer_t max_cpus;integer_t avail_cpus;natural_t memory_size;cpu_type_t cpu_type;cpu_subtype_t cpu_subtype;cpu_threadtype_t cpu_threadtype;integer_t physical_cpu;integer_t physical_cpu_max;integer_t logical_cpu;integer_t logical_cpu_max;uint64_t max_mem;};
struct __msqid_ds_new {struct ipc_perm msg_perm;__int32_t msg_first;__int32_t msg_last;msglen_t msg_cbytes;msgqnum_t msg_qnum;msglen_t msg_qbytes;pid_t msg_lspid;pid_t msg_lrpid;time_t msg_stime;__int32_t msg_pad1;time_t msg_rtime;__int32_t msg_pad2;time_t msg_ctime;__int32_t msg_pad3;__int32_t msg_pad4[4];};
struct _xsltStackElem {struct _xsltStackElem *next;xsltStylePreCompPtr comp;int computed; xmlChar *name; xmlChar *nameURI; xmlChar *select;xmlNodePtr tree;xmlXPathObjectPtr value;xmlDocPtr fragment;int level;xsltTransformContextPtr context;int flags;};
struct x509_store_st {int cache;STACK *objs;STACK *get_cert_methods;X509_VERIFY_PARAM *param;int (*verify)(X509_STORE_CTX *ctx);int (*verify_cb)(int ok, X509_STORE_CTX *ctx);int (*get_issuer)(X509 **issuer, X509_STORE_CTX *ctx, X509 *x);int (*check_issued)(X509_STORE_CTX *ctx, X509 *x, X509 *issuer);int (*check_revocation)(X509_STORE_CTX *ctx);int (*get_crl)(X509_STORE_CTX *ctx, X509_CRL **crl, X509 *x);int (*check_crl)(X509_STORE_CTX *ctx, X509_CRL *crl);int (*cert_crl)(X509_STORE_CTX *ctx, X509_CRL *crl, X509 *x);int (*cleanup)(X509_STORE_CTX *ctx);CRYPTO_EX_DATA ex_data;int references;};
struct _krb5_error {krb5_magic magic;krb5_timestamp ctime;krb5_int32 cusec;krb5_int32 susec;krb5_timestamp stime;krb5_ui_4 error;krb5_principal client;krb5_principal server;krb5_data text;krb5_data e_data;};
struct _xmlElement {void *_private;xmlElementType type; xmlChar *name;struct _xmlNode *children;struct _xmlNode *last;struct _xmlDtd *parent;struct _xmlNode *next;struct _xmlNode *prev;struct _xmlDoc *doc;xmlElementTypeVal etype;xmlElementContentPtr content;xmlAttributePtr attributes; xmlChar *prefix;xmlRegexpPtr contModel;};
struct dsa_method { char *name;DSA_SIG *(*dsa_do_sign)( unsigned char *dgst, int dlen, DSA *dsa);int (*dsa_sign_setup)(DSA *dsa, BN_CTX *ctx_in, BIGNUM **kinvp, BIGNUM **rp);int (*dsa_do_verify)( unsigned char *dgst, int dgst_len, DSA_SIG *sig, DSA *dsa);int (*dsa_mod_exp)(DSA *dsa, BIGNUM *rr, BIGNUM *a1, BIGNUM *p1, BIGNUM *a2, BIGNUM *p2, BIGNUM *m, BN_CTX *ctx, BN_MONT_CTX *in_mont);int (*bn_mod_exp)(DSA *dsa, BIGNUM *r, BIGNUM *a,  BIGNUM *p,  BIGNUM *m, BN_CTX *ctx, BN_MONT_CTX *m_ctx);int (*init)(DSA *dsa);int (*finish)(DSA *dsa);int flags;char *app_data;int (*dsa_paramgen)(DSA *dsa, int bits, unsigned char *seed, int seed_len, int *counter_ret, unsigned long long *h_ret, BN_GENCB *cb);int (*dsa_keygen)(DSA *dsa);};
struct pem_ctx_st {int type;struct pem_ctx_st___4E7FB566ECC299FB951FDCE71730D3D0 proc_type;char *domain;struct pem_ctx_st___1125AD01A545DD25B2B33B94AE02ED75 DEK_info;PEM_USER *originator;int num_recipient;PEM_USER **recipient;STACK *x509_chain;EVP_MD *md;int md_enc;int md_len;char *md_data;EVP_CIPHER *dec;int key_len;unsigned char *key;int data_enc;int data_len;unsigned char *data;};
struct z_stream_s {Bytef *next_in;uInt avail_in;uLong total_in;Bytef *next_out;uInt avail_out;uLong total_out;char *msg;struct internal_state *state;alloc_func zalloc;free_func zfree;voidpf opaque;int data_type;uLong adler;uLong reserved;};
union gdt_entry {code_desc_t code;data_desc_t data;ldt_desc_t ldt;call_gate_t call_gate;task_gate_t task_gate;tss_desc_t task_state;};
struct xsocket64 {u_int32_t xso_len;u_int64_t xso_so;short so_type;short so_options;short so_linger;short so_state;u_int64_t so_pcb;int xso_protocol;int xso_family;short so_qlen;short so_incqlen;short so_qlimit;short so_timeo;u_short so_error;pid_t so_pgid;u_int32_t so_oobmark;struct xsockbuf so_rcv;struct xsockbuf so_snd;uid_t so_uid;};
struct rsa_st {int pad;long long version; RSA_METHOD *meth;ENGINE *engine;BIGNUM *n;BIGNUM *e;BIGNUM *d;BIGNUM *p;BIGNUM *q;BIGNUM *dmp1;BIGNUM *dmq1;BIGNUM *iqmp;CRYPTO_EX_DATA ex_data;int references;int flags;BN_MONT_CTX *_method_mod_n;BN_MONT_CTX *_method_mod_p;BN_MONT_CTX *_method_mod_q;char *bignum_data;BN_BLINDING *blinding;BN_BLINDING *mt_blinding;};
struct tcpcb {struct tsegqe_head t_segq;int t_dupacks;u_int32_t unused;int t_timer[4];u_int32_t t_inpcb;int t_state;u_int t_flags;int t_force;tcp_seq snd_una;tcp_seq snd_max;tcp_seq snd_nxt;tcp_seq snd_up;tcp_seq snd_wl1;tcp_seq snd_wl2;tcp_seq iss;tcp_seq irs;tcp_seq rcv_nxt;tcp_seq rcv_adv;u_int32_t rcv_wnd;tcp_seq rcv_up;u_int32_t snd_wnd;u_int32_t snd_cwnd;u_int32_t snd_ssthresh;u_int t_maxopd;u_int32_t t_rcvtime;u_int32_t t_starttime;int t_rtttime;tcp_seq t_rtseq;int t_rxtcur;u_int t_maxseg;int t_srtt;int t_rttvar;int t_rxtshift;u_int t_rttmin;u_int32_t t_rttupdated;u_int32_t max_sndwnd;int t_softerror;char t_oobflags;char t_iobc;u_char snd_scale;u_char rcv_scale;u_char request_r_scale;u_char requested_s_scale;u_int32_t ts_recent;u_int32_t ts_recent_age;tcp_seq last_ack_sent;tcp_cc cc_send;tcp_cc cc_recv;tcp_seq snd_recover;u_int32_t snd_cwnd_prev;u_int32_t snd_ssthresh_prev;u_int32_t t_badrxtwin;};
union GENERAL_NAME_st___0CCF65EAB3E3C79409391F9327465DF1 {char *ptr;OTHERNAME *otherName;ASN1_IA5STRING *rfc822Name;ASN1_IA5STRING *dNSName;ASN1_TYPE *x400Address;X509_NAME *directoryName;EDIPARTYNAME *ediPartyName;ASN1_IA5STRING *uniformResourceIdentifier;ASN1_OCTET_STRING *iPAddress;ASN1_OBJECT *registeredID;ASN1_OCTET_STRING *ip;X509_NAME *dirn;ASN1_IA5STRING *ia5;ASN1_OBJECT *rid;ASN1_TYPE *other;};
struct ssl3_state_st___42F7BD6B27181EF8C23D75FB26BE0959 {unsigned char cert_verify_md[128];unsigned char finish_md[128];int finish_md_len;unsigned char peer_finish_md[128];int peer_finish_md_len;unsigned long long message_size;int message_type;SSL_CIPHER *new_cipher;DH *dh;EC_KEY *ecdh;int next_state;int reuse_message;int cert_req;int ctype_num;char ctype[7];STACK *ca_names;int use_rsa_tmp;int key_block_length;unsigned char *key_block; EVP_CIPHER *new_sym_enc; EVP_MD *new_hash; SSL_COMP *new_compression;int cert_request;};
union pkcs7_st___C4161349F87321B4281B96BCD451F4DB {char *ptr;ASN1_OCTET_STRING *data;PKCS7_SIGNED *sign;PKCS7_ENVELOPE *enveloped;PKCS7_SIGN_ENVELOPE *signed_and_enveloped;PKCS7_DIGEST *digest;PKCS7_ENCRYPT *encrypted;ASN1_TYPE *other;};
struct _1A1AE55D2EE57EB13DB3E8FFAFC89EF6 { char *name; char *sym_prefix;lt_module_open *module_open;lt_module_close *module_close;lt_find_sym *find_sym;lt_dlloader_init *dlloader_init;lt_dlloader_exit *dlloader_exit;lt_user_data dlloader_data;lt_dlloader_priority priority;};
struct _3D758159ED3B747496F87C93B1DFC5C3 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t pager;NDR_record_t NDR;boolean_t internal;vm_size_t size;vm_prot_t permission;};
struct _3E9B5AD32E2A117D2E91D7B75FF67A5D {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t parent_handle;NDR_record_t NDR;memory_object_size_t size;memory_object_offset_t offset;vm_prot_t permission;};
struct _41C52BC1456A2CEC857D3659807C1386 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t task;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;vm_prot_t desired_access;};
struct _71B18ED6CCE7F8693D0AE793EAB8102E {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t new_port;NDR_record_t NDR;exception_mask_t exception_mask;exception_behavior_t behavior;thread_state_flavor_t new_flavor;};
struct _8A833B3771E877D0F99F9E4D0939E663 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t pager;NDR_record_t NDR;boolean_t internal;memory_object_size_t size;vm_prot_t permission;};
struct _B8642CD798FE16F406A454FEEE53FFC8 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t parent_entry;NDR_record_t NDR;memory_object_size_t size;memory_object_offset_t offset;vm_prot_t permission;};
struct _FE3C27134D9979D1E07496C70FEB2BBD {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t parent_entry;NDR_record_t NDR;vm_size_t size;vm_offset_t offset;vm_prot_t permission;};
struct netsnmp_table_array_callbacks_s {Netsnmp_User_Row_Operation *row_copy;Netsnmp_User_Row_Operation_c *row_compare;Netsnmp_User_Get_Processor *get_value;Netsnmp_User_Row_Action *can_activate;Netsnmp_User_Row_Action *activated;Netsnmp_User_Row_Action *can_deactivate;Netsnmp_User_Row_Action *deactivated;Netsnmp_User_Row_Action *can_delete;UserRowMethod *create_row;UserRowMethod *duplicate_row;UserRowMethod *delete_row;Netsnmp_User_Group_Method *set_reserve1;Netsnmp_User_Group_Method *set_reserve2;Netsnmp_User_Group_Method *set_action;Netsnmp_User_Group_Method *set_commit;Netsnmp_User_Group_Method *set_free;Netsnmp_User_Group_Method *set_undo;netsnmp_container *container;char can_set;};
struct __darwin_x86_float_state64 {int __fpu_reserved[2];struct __darwin_fp_control __fpu_fcw;struct __darwin_fp_status __fpu_fsw;__uint8_t __fpu_ftw;__uint8_t __fpu_rsrv1;__uint16_t __fpu_fop;__uint32_t __fpu_ip;__uint16_t __fpu_cs;__uint16_t __fpu_rsrv2;__uint32_t __fpu_dp;__uint16_t __fpu_ds;__uint16_t __fpu_rsrv3;__uint32_t __fpu_mxcsr;__uint32_t __fpu_mxcsrmask;struct __darwin_mmst_reg __fpu_stmm0;struct __darwin_mmst_reg __fpu_stmm1;struct __darwin_mmst_reg __fpu_stmm2;struct __darwin_mmst_reg __fpu_stmm3;struct __darwin_mmst_reg __fpu_stmm4;struct __darwin_mmst_reg __fpu_stmm5;struct __darwin_mmst_reg __fpu_stmm6;struct __darwin_mmst_reg __fpu_stmm7;struct __darwin_xmm_reg __fpu_xmm0;struct __darwin_xmm_reg __fpu_xmm1;struct __darwin_xmm_reg __fpu_xmm2;struct __darwin_xmm_reg __fpu_xmm3;struct __darwin_xmm_reg __fpu_xmm4;struct __darwin_xmm_reg __fpu_xmm5;struct __darwin_xmm_reg __fpu_xmm6;struct __darwin_xmm_reg __fpu_xmm7;struct __darwin_xmm_reg __fpu_xmm8;struct __darwin_xmm_reg __fpu_xmm9;struct __darwin_xmm_reg __fpu_xmm10;struct __darwin_xmm_reg __fpu_xmm11;struct __darwin_xmm_reg __fpu_xmm12;struct __darwin_xmm_reg __fpu_xmm13;struct __darwin_xmm_reg __fpu_xmm14;struct __darwin_xmm_reg __fpu_xmm15;char __fpu_rsrv4[96];int __fpu_reserved1;};
struct __darwin_i386_float_state {int __fpu_reserved[2];struct __darwin_fp_control __fpu_fcw;struct __darwin_fp_status __fpu_fsw;__uint8_t __fpu_ftw;__uint8_t __fpu_rsrv1;__uint16_t __fpu_fop;__uint32_t __fpu_ip;__uint16_t __fpu_cs;__uint16_t __fpu_rsrv2;__uint32_t __fpu_dp;__uint16_t __fpu_ds;__uint16_t __fpu_rsrv3;__uint32_t __fpu_mxcsr;__uint32_t __fpu_mxcsrmask;struct __darwin_mmst_reg __fpu_stmm0;struct __darwin_mmst_reg __fpu_stmm1;struct __darwin_mmst_reg __fpu_stmm2;struct __darwin_mmst_reg __fpu_stmm3;struct __darwin_mmst_reg __fpu_stmm4;struct __darwin_mmst_reg __fpu_stmm5;struct __darwin_mmst_reg __fpu_stmm6;struct __darwin_mmst_reg __fpu_stmm7;struct __darwin_xmm_reg __fpu_xmm0;struct __darwin_xmm_reg __fpu_xmm1;struct __darwin_xmm_reg __fpu_xmm2;struct __darwin_xmm_reg __fpu_xmm3;struct __darwin_xmm_reg __fpu_xmm4;struct __darwin_xmm_reg __fpu_xmm5;struct __darwin_xmm_reg __fpu_xmm6;struct __darwin_xmm_reg __fpu_xmm7;char __fpu_rsrv4[224];int __fpu_reserved1;};
struct __darwin_x86_avx_state64 {int __fpu_reserved[2];struct __darwin_fp_control __fpu_fcw;struct __darwin_fp_status __fpu_fsw;__uint8_t __fpu_ftw;__uint8_t __fpu_rsrv1;__uint16_t __fpu_fop;__uint32_t __fpu_ip;__uint16_t __fpu_cs;__uint16_t __fpu_rsrv2;__uint32_t __fpu_dp;__uint16_t __fpu_ds;__uint16_t __fpu_rsrv3;__uint32_t __fpu_mxcsr;__uint32_t __fpu_mxcsrmask;struct __darwin_mmst_reg __fpu_stmm0;struct __darwin_mmst_reg __fpu_stmm1;struct __darwin_mmst_reg __fpu_stmm2;struct __darwin_mmst_reg __fpu_stmm3;struct __darwin_mmst_reg __fpu_stmm4;struct __darwin_mmst_reg __fpu_stmm5;struct __darwin_mmst_reg __fpu_stmm6;struct __darwin_mmst_reg __fpu_stmm7;struct __darwin_xmm_reg __fpu_xmm0;struct __darwin_xmm_reg __fpu_xmm1;struct __darwin_xmm_reg __fpu_xmm2;struct __darwin_xmm_reg __fpu_xmm3;struct __darwin_xmm_reg __fpu_xmm4;struct __darwin_xmm_reg __fpu_xmm5;struct __darwin_xmm_reg __fpu_xmm6;struct __darwin_xmm_reg __fpu_xmm7;struct __darwin_xmm_reg __fpu_xmm8;struct __darwin_xmm_reg __fpu_xmm9;struct __darwin_xmm_reg __fpu_xmm10;struct __darwin_xmm_reg __fpu_xmm11;struct __darwin_xmm_reg __fpu_xmm12;struct __darwin_xmm_reg __fpu_xmm13;struct __darwin_xmm_reg __fpu_xmm14;struct __darwin_xmm_reg __fpu_xmm15;char __fpu_rsrv4[96];int __fpu_reserved1;char __avx_reserved1[64];struct __darwin_xmm_reg __fpu_ymmh0;struct __darwin_xmm_reg __fpu_ymmh1;struct __darwin_xmm_reg __fpu_ymmh2;struct __darwin_xmm_reg __fpu_ymmh3;struct __darwin_xmm_reg __fpu_ymmh4;struct __darwin_xmm_reg __fpu_ymmh5;struct __darwin_xmm_reg __fpu_ymmh6;struct __darwin_xmm_reg __fpu_ymmh7;struct __darwin_xmm_reg __fpu_ymmh8;struct __darwin_xmm_reg __fpu_ymmh9;struct __darwin_xmm_reg __fpu_ymmh10;struct __darwin_xmm_reg __fpu_ymmh11;struct __darwin_xmm_reg __fpu_ymmh12;struct __darwin_xmm_reg __fpu_ymmh13;struct __darwin_xmm_reg __fpu_ymmh14;struct __darwin_xmm_reg __fpu_ymmh15;};
struct _xmlSchemaAttributeGroup {xmlSchemaTypeType type;struct _xmlSchemaAttribute *next; xmlChar *name; xmlChar *id; xmlChar *ref; xmlChar *refNs;xmlSchemaAnnotPtr annot;xmlSchemaAttributePtr attributes;xmlNodePtr node;int flags;xmlSchemaWildcardPtr attributeWildcard; xmlChar *refPrefix;xmlSchemaAttributeGroupPtr refItem; xmlChar *targetNamespace;void *attrUses;};
struct kauth_identity_extlookup {u_int32_t el_seqno;u_int32_t el_result;u_int32_t el_flags;__darwin_pid_t el_info_pid;u_int64_t el_extend;u_int32_t el_info_reserved_1;uid_t el_uid;guid_t el_uguid;u_int32_t el_uguid_valid;ntsid_t el_usid;u_int32_t el_usid_valid;gid_t el_gid;guid_t el_gguid;u_int32_t el_gguid_valid;ntsid_t el_gsid;u_int32_t el_gsid_valid;u_int32_t el_member_valid;};
struct __darwin_i386_avx_state {int __fpu_reserved[2];struct __darwin_fp_control __fpu_fcw;struct __darwin_fp_status __fpu_fsw;__uint8_t __fpu_ftw;__uint8_t __fpu_rsrv1;__uint16_t __fpu_fop;__uint32_t __fpu_ip;__uint16_t __fpu_cs;__uint16_t __fpu_rsrv2;__uint32_t __fpu_dp;__uint16_t __fpu_ds;__uint16_t __fpu_rsrv3;__uint32_t __fpu_mxcsr;__uint32_t __fpu_mxcsrmask;struct __darwin_mmst_reg __fpu_stmm0;struct __darwin_mmst_reg __fpu_stmm1;struct __darwin_mmst_reg __fpu_stmm2;struct __darwin_mmst_reg __fpu_stmm3;struct __darwin_mmst_reg __fpu_stmm4;struct __darwin_mmst_reg __fpu_stmm5;struct __darwin_mmst_reg __fpu_stmm6;struct __darwin_mmst_reg __fpu_stmm7;struct __darwin_xmm_reg __fpu_xmm0;struct __darwin_xmm_reg __fpu_xmm1;struct __darwin_xmm_reg __fpu_xmm2;struct __darwin_xmm_reg __fpu_xmm3;struct __darwin_xmm_reg __fpu_xmm4;struct __darwin_xmm_reg __fpu_xmm5;struct __darwin_xmm_reg __fpu_xmm6;struct __darwin_xmm_reg __fpu_xmm7;char __fpu_rsrv4[224];int __fpu_reserved1;char __avx_reserved1[64];struct __darwin_xmm_reg __fpu_ymmh0;struct __darwin_xmm_reg __fpu_ymmh1;struct __darwin_xmm_reg __fpu_ymmh2;struct __darwin_xmm_reg __fpu_ymmh3;struct __darwin_xmm_reg __fpu_ymmh4;struct __darwin_xmm_reg __fpu_ymmh5;struct __darwin_xmm_reg __fpu_ymmh6;struct __darwin_xmm_reg __fpu_ymmh7;};
struct netsnmp_agent_session_s {int mode;netsnmp_session *session;netsnmp_pdu *pdu;netsnmp_pdu *orig_pdu;int rw;int exact;int status;int index;int oldmode;struct netsnmp_agent_session_s *next;netsnmp_agent_request_info *reqinfo;netsnmp_request_info *requests;netsnmp_tree_cache *treecache;netsnmp_variable_list **bulkcache;int treecache_len;int treecache_num;netsnmp_cachemap *cache_store;int vbcount;};
struct netsnmp_iterator_info_s {Netsnmp_First_Data_Point *get_first_data_point;Netsnmp_Next_Data_Point *get_next_data_point;Netsnmp_Make_Data_Context *make_data_context;Netsnmp_Free_Loop_Context *free_loop_context;Netsnmp_Free_Data_Context *free_data_context;Netsnmp_Free_Loop_Context *free_loop_context_at_end;void *myvoid;int flags;netsnmp_table_registration_info *table_reginfo;Netsnmp_First_Data_Point *get_row_indexes;netsnmp_variable_list *indexes;};
struct krb5_authenticator_st {ASN1_INTEGER *avno;ASN1_GENERALSTRING *crealm;KRB5_PRINCNAME *cname;KRB5_CHECKSUM *cksum;ASN1_INTEGER *cusec;ASN1_GENERALIZEDTIME *ctime;KRB5_ENCKEY *subkey;ASN1_INTEGER *seqnum;KRB5_AUTHDATA *authorization;};
typedef void (*xlinkExtendedLinkFunk)(void *ctx, xmlNodePtr node, int nbLocators,  xlinkHRef *hrefs,  xlinkRole *roles, int nbArcs,  xlinkRole *from,  xlinkRole *to, xlinkShow *show, xlinkActuate *actuate, int nbTitles,  xlinkTitle *titles,  xmlChar **langs);
struct _xmlSchemaAttribute {xmlSchemaTypeType type;struct _xmlSchemaAttribute *next; xmlChar *name; xmlChar *id; xmlChar *ref; xmlChar *refNs; xmlChar *typeName; xmlChar *typeNs;xmlSchemaAnnotPtr annot;xmlSchemaTypePtr base;int occurs; xmlChar *defValue;xmlSchemaTypePtr subtypes;xmlNodePtr node; xmlChar *targetNamespace;int flags; xmlChar *refPrefix;xmlSchemaValPtr defVal;xmlSchemaAttributePtr refDecl;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusCatalogFile {int16_t recordType;u_int16_t flags;u_int32_t reserved1;u_int32_t fileID;u_int32_t createDate;u_int32_t contentModDate;u_int32_t attributeModDate;u_int32_t accessDate;u_int32_t backupDate;HFSPlusBSDInfo bsdInfo;FndrFileInfo userInfo;FndrOpaqueInfo finderInfo;u_int32_t textEncoding;u_int32_t reserved2;HFSPlusForkData dataFork;HFSPlusForkData resourceFork;};
struct kinfo_proc__eproc {struct proc *e_paddr;struct session *e_sess;struct _pcred e_pcred;struct _ucred e_ucred;struct vmspace e_vm;pid_t e_ppid;pid_t e_pgid;short e_jobc;dev_t e_tdev;pid_t e_tpgid;struct session *e_tsess;char e_wmesg[8];segsz_t e_xsize;short e_xrssize;short e_xccount;short e_xswrss;int32_t e_flag;char e_login[12];int32_t e_spare[4];};
struct netsnmp_cache_s {int flags;int enabled;int valid;char expired;int timeout;marker_t timestamp;u_long timer_id;NetsnmpCacheLoad *load_cache;NetsnmpCacheFree *free_cache;void *magic;netsnmp_handler_args *cache_hint;netsnmp_cache *next;netsnmp_cache *prev;oid *rootoid;int rootoid_len;};
struct _krb5_kdc_rep {krb5_magic magic;krb5_msgtype msg_type;krb5_pa_data **padata;krb5_principal client;krb5_ticket *ticket;krb5_enc_data enc_part;krb5_enc_kdc_rep_part *enc_part2;};
struct _xmlValidCtxt {void *userData;xmlValidityErrorFunc error;xmlValidityWarningFunc warning;xmlNodePtr node;int nodeNr;int nodeMax;xmlNodePtr *nodeTab;unsigned int finishDtd;xmlDocPtr doc;int valid;xmlValidState *vstate;int vstateNr;int vstateMax;xmlValidState *vstateTab;xmlAutomataPtr am;xmlAutomataStatePtr state;};
struct snmp_session {long long version;int retries;long long timeout;u_long flags;struct snmp_session *subsession;struct snmp_session *next;char *peername;u_short remote_port;char *localname;u_short local_port;u_char *(*authenticator)(u_char *, size_t *, u_char *, size_t);netsnmp_callback callback;void *callback_magic;int s_errno;int s_snmp_errno;long long sessid;u_char *community;size_t community_len;size_t rcvMsgMaxSize;size_t sndMsgMaxSize;u_char isAuthoritative;u_char *contextEngineID;size_t contextEngineIDLen;u_int engineBoots;u_int engineTime;char *contextName;size_t contextNameLen;u_char *securityEngineID;size_t securityEngineIDLen;char *securityName;size_t securityNameLen;oid *securityAuthProto;size_t securityAuthProtoLen;u_char securityAuthKey[32];size_t securityAuthKeyLen;u_char *securityAuthLocalKey;size_t securityAuthLocalKeyLen;oid *securityPrivProto;size_t securityPrivProtoLen;u_char securityPrivKey[32];size_t securityPrivKeyLen;u_char *securityPrivLocalKey;size_t securityPrivLocalKeyLen;int securityModel;int securityLevel;char *paramName;void *securityInfo;struct netsnmp_container_s *transport_configuration;void *myvoid;};
struct ldap_sync_t {char *ls_base;int ls_scope;char *ls_filter;char **ls_attrs;int ls_timelimit;int ls_sizelimit;int ls_timeout;ldap_sync_search_entry_f ls_search_entry;ldap_sync_search_reference_f ls_search_reference;ldap_sync_intermediate_f ls_intermediate;ldap_sync_search_result_f ls_search_result;void *ls_private;LDAP *ls_ld;int ls_msgid;int ls_reloadHint;struct berval ls_cookie;ldap_sync_refresh_t ls_refreshPhase;};
struct x509_st {X509_CINF *cert_info;X509_ALGOR *sig_alg;ASN1_BIT_STRING *signature;int valid;int references;char *name;CRYPTO_EX_DATA ex_data;long long ex_pathlen;long long ex_pcpathlen;unsigned long long ex_flags;unsigned long long ex_kusage;unsigned long long ex_xkusage;unsigned long long ex_nscert;ASN1_OCTET_STRING *skid;struct AUTHORITY_KEYID_st *akid;X509_POLICY_CACHE *policy_cache;unsigned char sha1_hash[20];X509_CERT_AUX *aux;};
struct ostat {__uint16_t st_dev;ino_t st_ino;mode_t st_mode;nlink_t st_nlink;__uint16_t st_uid;__uint16_t st_gid;__uint16_t st_rdev;__int32_t st_size;struct timespec st_atimespec;struct timespec st_mtimespec;struct timespec st_ctimespec;__int32_t st_blksize;__int32_t st_blocks;__uint32_t st_flags;__uint32_t st_gen;};
struct acct {char ac_comm[10];comp_t ac_utime;comp_t ac_stime;comp_t ac_etime;u_int32_t ac_btime;uid_t ac_uid;gid_t ac_gid;u_int16_t ac_mem;comp_t ac_io;dev_t ac_tty;u_int8_t ac_flag;};
struct _krb5_authenticator {krb5_magic magic;krb5_principal client;krb5_checksum *checksum;krb5_int32 cusec;krb5_timestamp ctime;krb5_keyblock *subkey;krb5_ui_4 seq_number;krb5_authdata **authorization_data;};
struct cups_page_header2_s {char MediaClass[64];char MediaColor[64];char MediaType[64];char OutputType[64];unsigned int AdvanceDistance;cups_adv_t AdvanceMedia;cups_bool_t Collate;cups_cut_t CutMedia;cups_bool_t Duplex;unsigned int HWResolution[2];unsigned int ImagingBoundingBox[4];cups_bool_t InsertSheet;cups_jog_t Jog;cups_edge_t LeadingEdge;unsigned int Margins[2];cups_bool_t ManualFeed;unsigned int MediaPosition;unsigned int MediaWeight;cups_bool_t MirrorPrint;cups_bool_t NegativePrint;unsigned int NumCopies;cups_orient_t Orientation;cups_bool_t OutputFaceUp;unsigned int PageSize[2];cups_bool_t Separations;cups_bool_t TraySwitch;cups_bool_t Tumble;unsigned int cupsWidth;unsigned int cupsHeight;unsigned int cupsMediaType;unsigned int cupsBitsPerColor;unsigned int cupsBitsPerPixel;unsigned int cupsBytesPerLine;cups_order_t cupsColorOrder;cups_cspace_t cupsColorSpace;unsigned int cupsCompression;unsigned int cupsRowCount;unsigned int cupsRowFeed;unsigned int cupsRowStep;unsigned int cupsNumColors;float cupsBorderlessScalingFactor;float cupsPageSize[2];float cupsImagingBBox[4];unsigned int cupsInteger[16];float cupsReal[16];char cupsString[16][64];char cupsMarkerType[64];char cupsRenderingIntent[64];char cupsPageSizeName[64];};
struct _krb5_enc_tkt_part {krb5_magic magic;krb5_flags flags;krb5_keyblock *session;krb5_principal client;krb5_transited transited;krb5_ticket_times times;krb5_address **caddrs;krb5_authdata **authorization_data;};
struct cache_attributes_s {uint32_t version;cache_key_hash_cb_t key_hash_cb;cache_key_is_equal_cb_t key_is_equal_cb;cache_key_retain_cb_t key_retain_cb;cache_release_cb_t key_release_cb;cache_release_cb_t value_release_cb;cache_value_make_nonpurgeable_cb_t value_make_nonpurgeable_cb;cache_value_make_purgeable_cb_t value_make_purgeable_cb;void *user_data;cache_value_retain_cb_t value_retain_cb;};
struct cups_page_header_s {char MediaClass[64];char MediaColor[64];char MediaType[64];char OutputType[64];unsigned int AdvanceDistance;cups_adv_t AdvanceMedia;cups_bool_t Collate;cups_cut_t CutMedia;cups_bool_t Duplex;unsigned int HWResolution[2];unsigned int ImagingBoundingBox[4];cups_bool_t InsertSheet;cups_jog_t Jog;cups_edge_t LeadingEdge;unsigned int Margins[2];cups_bool_t ManualFeed;unsigned int MediaPosition;unsigned int MediaWeight;cups_bool_t MirrorPrint;cups_bool_t NegativePrint;unsigned int NumCopies;cups_orient_t Orientation;cups_bool_t OutputFaceUp;unsigned int PageSize[2];cups_bool_t Separations;cups_bool_t TraySwitch;cups_bool_t Tumble;unsigned int cupsWidth;unsigned int cupsHeight;unsigned int cupsMediaType;unsigned int cupsBitsPerColor;unsigned int cupsBitsPerPixel;unsigned int cupsBytesPerLine;cups_order_t cupsColorOrder;cups_cspace_t cupsColorSpace;unsigned int cupsCompression;unsigned int cupsRowCount;unsigned int cupsRowFeed;unsigned int cupsRowStep;};
struct sasl_server_params { char *service; char *appname; char *serverFQDN; char *user_realm; char *iplocalport; char *ipremoteport;unsigned int servicelen;unsigned int applen;unsigned int slen;unsigned int urlen;unsigned int iploclen;unsigned int ipremlen;int log_level; sasl_utils_t *utils; sasl_callback_t *callbacks;sasl_security_properties_t props;sasl_ssf_t external_ssf;int (*transition)(sasl_conn_t *conn,  char *pass, unsigned int passlen);int (*canon_user)(sasl_conn_t *conn,  char *user, unsigned int ulen, unsigned int flags, sasl_out_params_t *oparams);struct propctx *propctx;void *spare_ptr1;void *spare_ptr2;void *spare_ptr3;void *spare_ptr4;int (*spare_fptr1)();int (*spare_fptr2)();int spare_int1;int spare_int2;int spare_int3;unsigned int flags;int param_version;};
struct x509_store_ctx_st {X509_STORE *ctx;int current_method;X509 *cert;STACK *untrusted;STACK *crls;X509_VERIFY_PARAM *param;void *other_ctx;int (*verify)(X509_STORE_CTX *ctx);int (*verify_cb)(int ok, X509_STORE_CTX *ctx);int (*get_issuer)(X509 **issuer, X509_STORE_CTX *ctx, X509 *x);int (*check_issued)(X509_STORE_CTX *ctx, X509 *x, X509 *issuer);int (*check_revocation)(X509_STORE_CTX *ctx);int (*get_crl)(X509_STORE_CTX *ctx, X509_CRL **crl, X509 *x);int (*check_crl)(X509_STORE_CTX *ctx, X509_CRL *crl);int (*cert_crl)(X509_STORE_CTX *ctx, X509_CRL *crl, X509 *x);int (*check_policy)(X509_STORE_CTX *ctx);int (*cleanup)(X509_STORE_CTX *ctx);int valid;int last_untrusted;STACK *chain;X509_POLICY_TREE *tree;int explicit_policy;int error_depth;int error;X509 *current_cert;X509 *current_issuer;X509_CRL *current_crl;CRYPTO_EX_DATA ex_data;};
struct __res_9_state {int retrans;int retry;u_long options;int nscount;struct sockaddr_in nsaddr_list[3];u_short id;char *dnsrch[7];char defdname[256];u_long pfcode;unsigned int ndots : 4;unsigned int nsort : 4;char unused[3];struct __res_9_state___A41D3F045172AF5618492D381489FAF0 sort_list[10];res_send_qhook qhook;res_send_rhook rhook;int res_h_errno;int _vcsock;u_int _flags;u_int _pad;union __res_9_state___C43196706AFD8D9F503704607DF2086B _u;};
struct x509_cinf_st {ASN1_INTEGER *version;ASN1_INTEGER *serialNumber;X509_ALGOR *signature;X509_NAME *issuer;X509_VAL *validity;X509_NAME *subject;X509_PUBKEY *key;ASN1_BIT_STRING *issuerUID;ASN1_BIT_STRING *subjectUID;STACK *extensions;ASN1_ENCODING enc;};
struct vinfo_stat {uint32_t vst_dev;uint16_t vst_mode;uint16_t vst_nlink;uint64_t vst_ino;uid_t vst_uid;gid_t vst_gid;int64_t vst_atime;int64_t vst_atimensec;int64_t vst_mtime;int64_t vst_mtimensec;int64_t vst_ctime;int64_t vst_ctimensec;int64_t vst_birthtime;int64_t vst_birthtimensec;off_t vst_size;int64_t vst_blocks;int32_t vst_blksize;uint32_t vst_flags;uint32_t vst_gen;uint32_t vst_rdev;int64_t vst_qspare[2];};
union dt_entry {code_desc_t code;data_desc_t data;ldt_desc_t ldt;tss_desc_t task_state;call_gate_t call_gate;trap_gate_t trap_gate;intr_gate_t intr_gate;task_gate_t task_gate;};
struct _E31153E692B38AE6ABEA73E583DCB3CE {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t src_task;NDR_record_t NDR;mach_vm_address_t target_address;mach_vm_size_t size;mach_vm_offset_t mask;int flags;mach_vm_address_t src_address;boolean_t copy;vm_inherit_t inheritance;};
struct _xmlSchemaElement {xmlSchemaTypeType type;struct _xmlSchemaType *next; xmlChar *name; xmlChar *id; xmlChar *ref; xmlChar *refNs;xmlSchemaAnnotPtr annot;xmlSchemaTypePtr subtypes;xmlSchemaAttributePtr attributes;xmlNodePtr node;int minOccurs;int maxOccurs;int flags; xmlChar *targetNamespace; xmlChar *namedType; xmlChar *namedTypeNs; xmlChar *substGroup; xmlChar *substGroupNs; xmlChar *scope; xmlChar *value;struct _xmlSchemaElement *refDecl;xmlRegexpPtr contModel;xmlSchemaContentType contentType; xmlChar *refPrefix;xmlSchemaValPtr defVal;void *idcs;};
struct _xsltStylePreComp {xsltElemPreCompPtr next;xsltStyleType type;xsltTransformFunction func;xmlNodePtr inst; xmlChar *stype;int has_stype;int number; xmlChar *order;int has_order;int descending; xmlChar *lang;int has_lang; xmlChar *case_order;int lower_first; xmlChar *use;int has_use;int noescape; xmlChar *name;int has_name; xmlChar *ns;int has_ns; xmlChar *mode; xmlChar *modeURI; xmlChar *test;xsltTemplatePtr templ; xmlChar *select;int ver11; xmlChar *filename;int has_filename;xsltNumberData numdata;xmlXPathCompExprPtr comp;xmlNsPtr *nsList;int nsNr;};
struct snmp_secmod_def {SecmodSessionCallback *session_open;SecmodSessionCallback *session_close;SecmodSessionSetup *session_setup;SecmodPduCallback *pdu_free;Secmod2PduCallback *pdu_clone;SecmodPduCallback *pdu_timeout;SecmodFreeState *pdu_free_state_ref;SecmodOutMsg *encode_reverse;SecmodOutMsg *encode_forward;SecmodInMsg *decode;SecmodHandleReport *handle_report;SecmodDiscoveryMethod *probe_engineid;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSCatalogFile {int16_t recordType;u_int8_t flags;int8_t fileType;FndrFileInfo userInfo;u_int32_t fileID;u_int16_t dataStartBlock;int32_t dataLogicalSize;int32_t dataPhysicalSize;u_int16_t rsrcStartBlock;int32_t rsrcLogicalSize;int32_t rsrcPhysicalSize;u_int32_t createDate;u_int32_t modifyDate;u_int32_t backupDate;FndrOpaqueInfo finderInfo;u_int16_t clumpSize;HFSExtentRecord dataExtents;HFSExtentRecord rsrcExtents;u_int32_t reserved;};
struct _krb5_creds {krb5_magic magic;krb5_principal client;krb5_principal server;krb5_keyblock keyblock;krb5_ticket_times times;krb5_boolean is_skey;krb5_flags ticket_flags;krb5_address **addresses;krb5_data ticket;krb5_data second_ticket;krb5_authdata **authdata;};
struct ppd_file_s {int language_level;int color_device;int variable_sizes;int accurate_screens;int contone_only;int landscape;int model_number;int manual_copies;int throughput;ppd_cs_t colorspace;char *patches;int num_emulations;ppd_emul_t *emulations;char *jcl_begin;char *jcl_ps;char *jcl_end;char *lang_encoding;char *lang_version;char *modelname;char *ttrasterizer;char *manufacturer;char *product;char *nickname;char *shortnickname;int num_groups;ppd_group_t *groups;int num_sizes;ppd_size_t *sizes;float custom_min[2];float custom_max[2];float custom_margins[4];int num_consts;ppd_const_t *consts;int num_fonts;char **fonts;int num_profiles;ppd_profile_t *profiles;int num_filters;char **filters;int flip_duplex;char *protocols;char *pcfilename;int num_attrs;int cur_attr;ppd_attr_t **attrs;cups_array_t *sorted_attrs;cups_array_t *options;cups_array_t *coptions;cups_array_t *marked;cups_array_t *cups_uiconstraints;_ppd_cache_t *cache;};
union __RequestUnion__processor_set_subsystem {__Request__processor_set_statistics_t Request_processor_set_statistics;__Request__processor_set_destroy_t Request_processor_set_destroy;__Request__processor_set_max_priority_t Request_processor_set_max_priority;__Request__processor_set_policy_enable_t Request_processor_set_policy_enable;__Request__processor_set_policy_disable_t Request_processor_set_policy_disable;__Request__processor_set_tasks_t Request_processor_set_tasks;__Request__processor_set_threads_t Request_processor_set_threads;__Request__processor_set_policy_control_t Request_processor_set_policy_control;__Request__processor_set_stack_usage_t Request_processor_set_stack_usage;__Request__processor_set_info_t Request_processor_set_info;};
union __ReplyUnion__processor_set_subsystem {__Reply__processor_set_statistics_t Reply_processor_set_statistics;__Reply__processor_set_destroy_t Reply_processor_set_destroy;__Reply__processor_set_max_priority_t Reply_processor_set_max_priority;__Reply__processor_set_policy_enable_t Reply_processor_set_policy_enable;__Reply__processor_set_policy_disable_t Reply_processor_set_policy_disable;__Reply__processor_set_tasks_t Reply_processor_set_tasks;__Reply__processor_set_threads_t Reply_processor_set_threads;__Reply__processor_set_policy_control_t Reply_processor_set_policy_control;__Reply__processor_set_stack_usage_t Reply_processor_set_stack_usage;__Reply__processor_set_info_t Reply_processor_set_info;};
struct _krb5_enc_kdc_rep_part {krb5_magic magic;krb5_msgtype msg_type;krb5_keyblock *session;krb5_last_req_entry **last_req;krb5_int32 nonce;krb5_timestamp key_exp;krb5_flags flags;krb5_ticket_times times;krb5_principal server;krb5_address **caddrs;};
struct _xsltStylesheet {struct _xsltStylesheet *parent;struct _xsltStylesheet *next;struct _xsltStylesheet *imports;xsltDocumentPtr docList;xmlDocPtr doc;xmlHashTablePtr stripSpaces;int stripAll;xmlHashTablePtr cdataSection;xsltStackElemPtr variables;xsltTemplatePtr templates;void *templatesHash;void *rootMatch;void *keyMatch;void *elemMatch;void *attrMatch;void *parentMatch;void *textMatch;void *piMatch;void *commentMatch;xmlHashTablePtr nsAliases;xmlHashTablePtr attributeSets;xmlHashTablePtr nsHash;void *nsDefs;void *keys;xmlChar *method;xmlChar *methodURI;xmlChar *version;xmlChar *encoding;int omitXmlDeclaration;xsltDecimalFormatPtr decimalFormat;int standalone;xmlChar *doctypePublic;xmlChar *doctypeSystem;int indent;xmlChar *mediaType;xsltElemPreCompPtr preComps;int warnings;int errors;xmlChar *exclPrefix;xmlChar **exclPrefixTab;int exclPrefixNr;int exclPrefixMax;void *_private;xmlHashTablePtr extInfos;int extrasNr;xsltDocumentPtr includes;xmlDictPtr dict;void *attVTs; xmlChar *defaultAlias;int nopreproc;int internalized;int literal_result;xsltStylesheetPtr principal;};
struct _D58DA1E1B485B25D38C6421E4BA839DC {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;mach_vm_offset_t mask;int flags;memory_object_offset_t offset;boolean_t copy;vm_prot_t cur_protection;vm_prot_t max_protection;vm_inherit_t inheritance;};
struct v3_ext_method {int ext_nid;int ext_flags;ASN1_ITEM_EXP *it;X509V3_EXT_NEW ext_new;X509V3_EXT_FREE ext_free;X509V3_EXT_D2I d2i;X509V3_EXT_I2D i2d;X509V3_EXT_I2S i2s;X509V3_EXT_S2I s2i;X509V3_EXT_I2V i2v;X509V3_EXT_V2I v2i;X509V3_EXT_I2R i2r;X509V3_EXT_R2I r2i;void *usr_data;};
struct _xmlParserCtxt {struct _xmlSAXHandler *sax;void *userData;xmlDocPtr myDoc;int wellFormed;int replaceEntities; xmlChar *version; xmlChar *encoding;int standalone;int html;xmlParserInputPtr input;int inputNr;int inputMax;xmlParserInputPtr *inputTab;xmlNodePtr node;int nodeNr;int nodeMax;xmlNodePtr *nodeTab;int record_info;xmlParserNodeInfoSeq node_seq;int errNo;int hasExternalSubset;int hasPErefs;int external;int valid;int validate;xmlValidCtxt vctxt;xmlParserInputState instate;int token;char *directory; xmlChar *name;int nameNr;int nameMax; xmlChar **nameTab;long long nbChars;long long checkIndex;int keepBlanks;int disableSAX;int inSubset; xmlChar *intSubName;xmlChar *extSubURI;xmlChar *extSubSystem;int *space;int spaceNr;int spaceMax;int *spaceTab;int depth;xmlParserInputPtr entity;int charset;int nodelen;int nodemem;int pedantic;void *_private;int loadsubset;int linenumbers;void *catalogs;int recovery;int progressive;xmlDictPtr dict; xmlChar **atts;int maxatts;int docdict; xmlChar *str_xml; xmlChar *str_xmlns; xmlChar *str_xml_ns;int sax2;int nsNr;int nsMax; xmlChar **nsTab;int *attallocs;void **pushTab;xmlHashTablePtr attsDefault;xmlHashTablePtr attsSpecial;int nsWellFormed;int options;int dictNames;int freeElemsNr;xmlNodePtr freeElems;int freeAttrsNr;xmlAttrPtr freeAttrs;xmlError lastError;xmlParserMode parseMode;unsigned long long nbentities;unsigned long long sizeentities;};
struct _krb5_kdc_req {krb5_magic magic;krb5_msgtype msg_type;krb5_pa_data **padata;krb5_flags kdc_options;krb5_principal client;krb5_principal server;krb5_timestamp from;krb5_timestamp till;krb5_timestamp rtime;krb5_int32 nonce;int nktypes;krb5_enctype *ktype;krb5_address **addresses;krb5_enc_data authorization_data;krb5_authdata **unenc_authdata;krb5_ticket **second_ticket;};
struct _xmlSchemaType {xmlSchemaTypeType type;struct _xmlSchemaType *next; xmlChar *name; xmlChar *id; xmlChar *ref; xmlChar *refNs;xmlSchemaAnnotPtr annot;xmlSchemaTypePtr subtypes;xmlSchemaAttributePtr attributes;xmlNodePtr node;int minOccurs;int maxOccurs;int flags;xmlSchemaContentType contentType; xmlChar *base; xmlChar *baseNs;xmlSchemaTypePtr baseType;xmlSchemaFacetPtr facets;struct _xmlSchemaType *redef;int recurse;xmlSchemaAttributeLinkPtr *attributeUses;xmlSchemaWildcardPtr attributeWildcard;int builtInType;xmlSchemaTypeLinkPtr memberTypes;xmlSchemaFacetLinkPtr facetSet; xmlChar *refPrefix;xmlSchemaTypePtr contentTypeDef;xmlRegexpPtr contModel; xmlChar *targetNamespace;void *attrUses;};
struct stat64 {dev_t st_dev;mode_t st_mode;nlink_t st_nlink;__darwin_ino64_t st_ino;uid_t st_uid;gid_t st_gid;dev_t st_rdev;struct timespec st_atimespec;struct timespec st_mtimespec;struct timespec st_ctimespec;struct timespec st_birthtimespec;off_t st_size;blkcnt_t st_blocks;blksize_t st_blksize;__uint32_t st_flags;__uint32_t st_gen;__int32_t st_lspare;__int64_t st_qspare[2];};
struct stat {dev_t st_dev;mode_t st_mode;nlink_t st_nlink;__darwin_ino64_t st_ino;uid_t st_uid;gid_t st_gid;dev_t st_rdev;struct timespec st_atimespec;struct timespec st_mtimespec;struct timespec st_ctimespec;struct timespec st_birthtimespec;off_t st_size;blkcnt_t st_blocks;blksize_t st_blksize;__uint32_t st_flags;__uint32_t st_gen;__int32_t st_lspare;__int64_t st_qspare[2];};
union _F9A7ED8F42D8CCD77CCEA18A32D3B2AC___ACCCA089A96433C3C2E2A191C0A26330 {dns_address_record_t *A;dns_domain_name_record_t *NS;dns_domain_name_record_t *MD;dns_domain_name_record_t *MF;dns_domain_name_record_t *CNAME;dns_SOA_record_t *SOA;dns_domain_name_record_t *MB;dns_domain_name_record_t *MG;dns_domain_name_record_t *MR;dns_raw_resource_record_t *DNSNULL;dns_WKS_record_t *WKS;dns_domain_name_record_t *PTR;dns_HINFO_record_t *HINFO;dns_MINFO_record_t *MINFO;dns_MX_record_t *MX;dns_TXT_record_t *TXT;dns_RP_record_t *RP;dns_AFSDB_record_t *AFSDB;dns_X25_record_t *X25;dns_ISDN_record_t *ISDN;dns_RT_record_t *RT;dns_in6_address_record_t *AAAA;dns_LOC_record_t *LOC;dns_SRV_record_t *SRV;};
struct _xsltTransformContext {xsltStylesheetPtr style;xsltOutputType type;xsltTemplatePtr templ;int templNr;int templMax;xsltTemplatePtr *templTab;xsltStackElemPtr vars;int varsNr;int varsMax;xsltStackElemPtr *varsTab;int varsBase;xmlHashTablePtr extFunctions;xmlHashTablePtr extElements;xmlHashTablePtr extInfos; xmlChar *mode; xmlChar *modeURI;xsltDocumentPtr docList;xsltDocumentPtr document;xmlNodePtr node;xmlNodeSetPtr nodeList;xmlDocPtr output;xmlNodePtr insert;xmlXPathContextPtr xpathCtxt;xsltTransformState state;xmlHashTablePtr globalVars;xmlNodePtr inst;int xinclude; char *outputFile;int profile;long long prof;int profNr;int profMax;long long *profTab;void *_private;int extrasNr;int extrasMax;xsltRuntimeExtraPtr extras;xsltDocumentPtr styleList;void *sec;xmlGenericErrorFunc error;void *errctx;xsltSortFunc sortfunc;xmlDocPtr tmpRVT;xmlDocPtr persistRVT;int ctxtflags; xmlChar *lasttext;unsigned int lasttsize;unsigned int lasttuse;int debugStatus;unsigned long long *traceCode;int parserOptions;xmlDictPtr dict;xmlDocPtr tmpDoc;int internalized;int nbKeys;int hasTemplKeyPatterns;xsltTemplatePtr currentTemplateRule;xmlNodePtr initialContextNode;xmlDocPtr initialContextDoc;xsltTransformCachePtr cache;void *contextVariable;xmlDocPtr localRVT;xmlDocPtr localRVTBase;int keyInitLevel;};
struct ssl_st {int version;int type;SSL_METHOD *method;BIO *rbio;BIO *wbio;BIO *bbio;int rwstate;int in_handshake;int (*handshake_func)(SSL *);int server;int new_session;int quiet_shutdown;int shutdown;int state;int rstate;BUF_MEM *init_buf;void *init_msg;int init_num;int init_off;unsigned char *packet;unsigned int packet_length;struct ssl2_state_st *s2;struct ssl3_state_st *s3;struct dtls1_state_st *d1;int read_ahead;void (*msg_callback)(int write_p, int version, int content_type,  void *buf, size_t len, SSL *ssl, void *arg);void *msg_callback_arg;int hit;X509_VERIFY_PARAM *param;STACK *cipher_list;STACK *cipher_list_by_id;EVP_CIPHER_CTX *enc_read_ctx; EVP_MD *read_hash;COMP_CTX *expand;EVP_CIPHER_CTX *enc_write_ctx; EVP_MD *write_hash;COMP_CTX *compress;struct cert_st *cert;unsigned int sid_ctx_length;unsigned char sid_ctx[32];SSL_SESSION *session;GEN_SESSION_CB generate_session_id;int verify_mode;int (*verify_callback)(int ok, X509_STORE_CTX *ctx);void (*info_callback)( SSL *ssl, int type, int val);int error;int error_code;SSL_CTX *ctx;int debug;long long verify_result;CRYPTO_EX_DATA ex_data;STACK *client_CA;int references;unsigned long long options;unsigned long long mode;long long max_cert_list;int first_packet;int client_version;void (*tlsext_debug_cb)(SSL *s, int client_server, int type, unsigned char *data, int len, void *arg);void *tlsext_debug_arg;char *tlsext_hostname;int servername_done;int tlsext_status_type;int tlsext_status_expected;STACK *tlsext_ocsp_ids;X509_EXTENSIONS *tlsext_ocsp_exts;unsigned char *tlsext_ocsp_resp;int tlsext_ocsp_resplen;int tlsext_ticket_expected;SSL_CTX *initial_ctx;};
union asn1_type_st___2DD2868AF9E8E8462C9810218891F7E4 {char *ptr;ASN1_BOOLEAN boolean;ASN1_STRING *asn1_string;ASN1_OBJECT *object;ASN1_INTEGER *integer;ASN1_ENUMERATED *enumerated;ASN1_BIT_STRING *bit_string;ASN1_OCTET_STRING *octet_string;ASN1_PRINTABLESTRING *printablestring;ASN1_T61STRING *t61string;ASN1_IA5STRING *ia5string;ASN1_GENERALSTRING *generalstring;ASN1_BMPSTRING *bmpstring;ASN1_UNIVERSALSTRING *universalstring;ASN1_UTCTIME *utctime;ASN1_GENERALIZEDTIME *generalizedtime;ASN1_VISIBLESTRING *visiblestring;ASN1_UTF8STRING *utf8string;ASN1_STRING *set;ASN1_STRING *sequence;ASN1_VALUE *asn1_value;};
struct sasl_utils {int version;sasl_conn_t *conn;sasl_rand_t *rpool;void *getopt_context;sasl_getopt_t *getopt;sasl_malloc_t *malloc;sasl_calloc_t *calloc;sasl_realloc_t *realloc;sasl_free_t *free;sasl_mutex_alloc_t *mutex_alloc;sasl_mutex_lock_t *mutex_lock;sasl_mutex_unlock_t *mutex_unlock;sasl_mutex_free_t *mutex_free;void (*MD5Init)(MD5_CTX *);void (*MD5Update)(MD5_CTX *,  unsigned char *text, unsigned int len);void (*MD5Final)(unsigned char *       , MD5_CTX *);void (*hmac_md5)( unsigned char *text, int text_len,  unsigned char *key, int key_len,unsigned char *       );void (*hmac_md5_init)(HMAC_MD5_CTX *,  unsigned char *key, int len);void (*hmac_md5_final)(unsigned char *       , HMAC_MD5_CTX *);void (*hmac_md5_precalc)(HMAC_MD5_STATE *,  unsigned char *key, int len);void (*hmac_md5_import)(HMAC_MD5_CTX *, HMAC_MD5_STATE *);int (*mkchal)(sasl_conn_t *conn, char *buf, unsigned int maxlen, unsigned int hostflag);int (*utf8verify)( char *str, unsigned int len);void (*rand)(sasl_rand_t *rpool, char *buf, unsigned int len);void (*churn)(sasl_rand_t *rpool,  char *data, unsigned int len);int (*checkpass)(sasl_conn_t *conn,  char *user, unsigned int userlen,  char *pass, unsigned int passlen);int (*decode64)( char *in, unsigned int inlen, char *out, unsigned int outmax, unsigned int *outlen);int (*encode64)( char *in, unsigned int inlen, char *out, unsigned int outmax, unsigned int *outlen);void (*erasebuffer)(char *buf, unsigned int len);int (*getprop)(sasl_conn_t *conn, int propnum,  void **pvalue);int (*setprop)(sasl_conn_t *conn, int propnum,  void *value);sasl_getcallback_t *getcallback;void (*log)(sasl_conn_t *conn, int level,  char *fmt, ...);void (*seterror)(sasl_conn_t *conn, unsigned int flags,  char *fmt, ...);int *(*spare_fptr)();struct propctx *(*prop_new)(unsigned int estimate);int (*prop_dup)(struct propctx *src_ctx, struct propctx **dst_ctx);int (*prop_request)(struct propctx *ctx,  char **names); struct propval *(*prop_get)(struct propctx *ctx);int (*prop_getnames)(struct propctx *ctx,  char **names, struct propval *vals);void (*prop_clear)(struct propctx *ctx, int requests);void (*prop_dispose)(struct propctx **ctx);int (*prop_format)(struct propctx *ctx,  char *sep, int seplen, char *outbuf, unsigned int outmax, unsigned int *outlen);int (*prop_set)(struct propctx *ctx,  char *name,  char *value, int vallen);int (*prop_setvals)(struct propctx *ctx,  char *name,  char **values);void (*prop_erase)(struct propctx *ctx,  char *name);int (*auxprop_store)(sasl_conn_t *conn, struct propctx *ctx,  char *user);int (*spare_fptr1)();int (*spare_fptr2)();};
union __RequestUnion__mach_host_subsystem {__Request__host_info_t Request_host_info;__Request__host_kernel_version_t Request_host_kernel_version;__Request___host_page_size_t Request__host_page_size;__Request__mach_memory_object_memory_entry_t Request_mach_memory_object_memory_entry;__Request__host_processor_info_t Request_host_processor_info;__Request__host_get_io_master_t Request_host_get_io_master;__Request__host_get_clock_service_t Request_host_get_clock_service;__Request__kmod_get_info_t Request_kmod_get_info;__Request__host_zone_info_t Request_host_zone_info;__Request__host_virtual_physical_table_info_t Request_host_virtual_physical_table_info;__Request__host_ipc_hash_info_t Request_host_ipc_hash_info;__Request__processor_set_default_t Request_processor_set_default;__Request__processor_set_create_t Request_processor_set_create;__Request__mach_memory_object_memory_entry_64_t Request_mach_memory_object_memory_entry_64;__Request__host_statistics_t Request_host_statistics;__Request__host_request_notification_t Request_host_request_notification;__Request__host_lockgroup_info_t Request_host_lockgroup_info;__Request__host_statistics64_t Request_host_statistics64;__Request__mach_zone_info_t Request_mach_zone_info;};
union __ReplyUnion__mach_host_subsystem {__Reply__host_info_t Reply_host_info;__Reply__host_kernel_version_t Reply_host_kernel_version;__Reply___host_page_size_t Reply__host_page_size;__Reply__mach_memory_object_memory_entry_t Reply_mach_memory_object_memory_entry;__Reply__host_processor_info_t Reply_host_processor_info;__Reply__host_get_io_master_t Reply_host_get_io_master;__Reply__host_get_clock_service_t Reply_host_get_clock_service;__Reply__kmod_get_info_t Reply_kmod_get_info;__Reply__host_zone_info_t Reply_host_zone_info;__Reply__host_virtual_physical_table_info_t Reply_host_virtual_physical_table_info;__Reply__host_ipc_hash_info_t Reply_host_ipc_hash_info;__Reply__processor_set_default_t Reply_processor_set_default;__Reply__processor_set_create_t Reply_processor_set_create;__Reply__mach_memory_object_memory_entry_64_t Reply_mach_memory_object_memory_entry_64;__Reply__host_statistics_t Reply_host_statistics;__Reply__host_request_notification_t Reply_host_request_notification;__Reply__host_lockgroup_info_t Reply_host_lockgroup_info;__Reply__host_statistics64_t Reply_host_statistics64;__Reply__mach_zone_info_t Reply_mach_zone_info;};
struct ssl_ctx_st {SSL_METHOD *method;STACK *cipher_list;STACK *cipher_list_by_id;struct x509_store_st *cert_store;struct lhash_st *sessions;unsigned long long session_cache_size;struct ssl_session_st *session_cache_head;struct ssl_session_st *session_cache_tail;int session_cache_mode;long long session_timeout;int (*new_session_cb)(struct ssl_st *ssl, SSL_SESSION *sess);void (*remove_session_cb)(struct ssl_ctx_st *ctx, SSL_SESSION *sess);SSL_SESSION *(*get_session_cb)(struct ssl_st *ssl, unsigned char *data, int len, int *copy);struct ssl_ctx_st___1FDE854BB3A5E25B344A4239746AC17B stats;int references;int (*app_verify_callback)(X509_STORE_CTX *, void *);void *app_verify_arg;pem_password_cb *default_passwd_callback;void *default_passwd_callback_userdata;int (*client_cert_cb)(SSL *ssl, X509 **x509, EVP_PKEY **pkey);int (*app_gen_cookie_cb)(SSL *ssl, unsigned char *cookie, unsigned int *cookie_len);int (*app_verify_cookie_cb)(SSL *ssl, unsigned char *cookie, unsigned int cookie_len);CRYPTO_EX_DATA ex_data; EVP_MD *rsa_md5; EVP_MD *md5; EVP_MD *sha1;STACK *extra_certs;STACK *comp_methods;void (*info_callback)( SSL *ssl, int type, int val);STACK *client_CA;unsigned long long options;unsigned long long mode;long long max_cert_list;struct cert_st *cert;int read_ahead;void (*msg_callback)(int write_p, int version, int content_type,  void *buf, size_t len, SSL *ssl, void *arg);void *msg_callback_arg;int verify_mode;unsigned int sid_ctx_length;unsigned char sid_ctx[32];int (*default_verify_callback)(int ok, X509_STORE_CTX *ctx);GEN_SESSION_CB generate_session_id;X509_VERIFY_PARAM *param;int quiet_shutdown;ENGINE *client_cert_engine;int (*tlsext_servername_callback)(SSL *, int *, void *);void *tlsext_servername_arg;unsigned char tlsext_tick_key_name[16];unsigned char tlsext_tick_hmac_key[16];unsigned char tlsext_tick_aes_key[16];int (*tlsext_ticket_key_cb)(SSL *ssl, unsigned char *name, unsigned char *iv, EVP_CIPHER_CTX *ectx, HMAC_CTX *hctx, int enc);int (*tlsext_status_cb)(SSL *ssl, void *arg);void *tlsext_status_arg;};
union __RequestUnion__mach_vm_subsystem {__Request__mach_vm_allocate_t Request_mach_vm_allocate;__Request__mach_vm_deallocate_t Request_mach_vm_deallocate;__Request__mach_vm_protect_t Request_mach_vm_protect;__Request__mach_vm_inherit_t Request_mach_vm_inherit;__Request__mach_vm_read_t Request_mach_vm_read;__Request__mach_vm_read_list_t Request_mach_vm_read_list;__Request__mach_vm_write_t Request_mach_vm_write;__Request__mach_vm_copy_t Request_mach_vm_copy;__Request__mach_vm_read_overwrite_t Request_mach_vm_read_overwrite;__Request__mach_vm_msync_t Request_mach_vm_msync;__Request__mach_vm_behavior_set_t Request_mach_vm_behavior_set;__Request__mach_vm_map_t Request_mach_vm_map;__Request__mach_vm_machine_attribute_t Request_mach_vm_machine_attribute;__Request__mach_vm_remap_t Request_mach_vm_remap;__Request__mach_vm_page_query_t Request_mach_vm_page_query;__Request__mach_vm_region_recurse_t Request_mach_vm_region_recurse;__Request__mach_vm_region_t Request_mach_vm_region;__Request___mach_make_memory_entry_t Request__mach_make_memory_entry;__Request__mach_vm_purgable_control_t Request_mach_vm_purgable_control;__Request__mach_vm_page_info_t Request_mach_vm_page_info;};
union __ReplyUnion__mach_vm_subsystem {__Reply__mach_vm_allocate_t Reply_mach_vm_allocate;__Reply__mach_vm_deallocate_t Reply_mach_vm_deallocate;__Reply__mach_vm_protect_t Reply_mach_vm_protect;__Reply__mach_vm_inherit_t Reply_mach_vm_inherit;__Reply__mach_vm_read_t Reply_mach_vm_read;__Reply__mach_vm_read_list_t Reply_mach_vm_read_list;__Reply__mach_vm_write_t Reply_mach_vm_write;__Reply__mach_vm_copy_t Reply_mach_vm_copy;__Reply__mach_vm_read_overwrite_t Reply_mach_vm_read_overwrite;__Reply__mach_vm_msync_t Reply_mach_vm_msync;__Reply__mach_vm_behavior_set_t Reply_mach_vm_behavior_set;__Reply__mach_vm_map_t Reply_mach_vm_map;__Reply__mach_vm_machine_attribute_t Reply_mach_vm_machine_attribute;__Reply__mach_vm_remap_t Reply_mach_vm_remap;__Reply__mach_vm_page_query_t Reply_mach_vm_page_query;__Reply__mach_vm_region_recurse_t Reply_mach_vm_region_recurse;__Reply__mach_vm_region_t Reply_mach_vm_region;__Reply___mach_make_memory_entry_t Reply__mach_make_memory_entry;__Reply__mach_vm_purgable_control_t Reply_mach_vm_purgable_control;__Reply__mach_vm_page_info_t Reply_mach_vm_page_info;};
union __RequestUnion__thread_act_subsystem {__Request__thread_terminate_t Request_thread_terminate;__Request__act_get_state_t Request_act_get_state;__Request__act_set_state_t Request_act_set_state;__Request__thread_get_state_t Request_thread_get_state;__Request__thread_set_state_t Request_thread_set_state;__Request__thread_suspend_t Request_thread_suspend;__Request__thread_resume_t Request_thread_resume;__Request__thread_abort_t Request_thread_abort;__Request__thread_abort_safely_t Request_thread_abort_safely;__Request__thread_depress_abort_t Request_thread_depress_abort;__Request__thread_get_special_port_t Request_thread_get_special_port;__Request__thread_set_special_port_t Request_thread_set_special_port;__Request__thread_info_t Request_thread_info;__Request__thread_set_exception_ports_t Request_thread_set_exception_ports;__Request__thread_get_exception_ports_t Request_thread_get_exception_ports;__Request__thread_swap_exception_ports_t Request_thread_swap_exception_ports;__Request__thread_policy_t Request_thread_policy;__Request__thread_policy_set_t Request_thread_policy_set;__Request__thread_policy_get_t Request_thread_policy_get;__Request__thread_sample_t Request_thread_sample;__Request__etap_trace_thread_t Request_etap_trace_thread;__Request__thread_assign_t Request_thread_assign;__Request__thread_assign_default_t Request_thread_assign_default;__Request__thread_get_assignment_t Request_thread_get_assignment;__Request__thread_set_policy_t Request_thread_set_policy;};
union __ReplyUnion__thread_act_subsystem {__Reply__thread_terminate_t Reply_thread_terminate;__Reply__act_get_state_t Reply_act_get_state;__Reply__act_set_state_t Reply_act_set_state;__Reply__thread_get_state_t Reply_thread_get_state;__Reply__thread_set_state_t Reply_thread_set_state;__Reply__thread_suspend_t Reply_thread_suspend;__Reply__thread_resume_t Reply_thread_resume;__Reply__thread_abort_t Reply_thread_abort;__Reply__thread_abort_safely_t Reply_thread_abort_safely;__Reply__thread_depress_abort_t Reply_thread_depress_abort;__Reply__thread_get_special_port_t Reply_thread_get_special_port;__Reply__thread_set_special_port_t Reply_thread_set_special_port;__Reply__thread_info_t Reply_thread_info;__Reply__thread_set_exception_ports_t Reply_thread_set_exception_ports;__Reply__thread_get_exception_ports_t Reply_thread_get_exception_ports;__Reply__thread_swap_exception_ports_t Reply_thread_swap_exception_ports;__Reply__thread_policy_t Reply_thread_policy;__Reply__thread_policy_set_t Reply_thread_policy_set;__Reply__thread_policy_get_t Reply_thread_policy_get;__Reply__thread_sample_t Reply_thread_sample;__Reply__etap_trace_thread_t Reply_etap_trace_thread;__Reply__thread_assign_t Reply_thread_assign;__Reply__thread_assign_default_t Reply_thread_assign_default;__Reply__thread_get_assignment_t Reply_thread_get_assignment;__Reply__thread_set_policy_t Reply_thread_set_policy;};
union __RequestUnion__host_priv_subsystem {__Request__host_get_boot_info_t Request_host_get_boot_info;__Request__host_reboot_t Request_host_reboot;__Request__host_priv_statistics_t Request_host_priv_statistics;__Request__host_default_memory_manager_t Request_host_default_memory_manager;__Request__vm_wire_t Request_vm_wire;__Request__thread_wire_t Request_thread_wire;__Request__vm_allocate_cpm_t Request_vm_allocate_cpm;__Request__host_processors_t Request_host_processors;__Request__host_get_clock_control_t Request_host_get_clock_control;__Request__kmod_create_t Request_kmod_create;__Request__kmod_destroy_t Request_kmod_destroy;__Request__kmod_control_t Request_kmod_control;__Request__host_get_special_port_t Request_host_get_special_port;__Request__host_set_special_port_t Request_host_set_special_port;__Request__host_set_exception_ports_t Request_host_set_exception_ports;__Request__host_get_exception_ports_t Request_host_get_exception_ports;__Request__host_swap_exception_ports_t Request_host_swap_exception_ports;__Request__host_load_symbol_table_t Request_host_load_symbol_table;__Request__mach_vm_wire_t Request_mach_vm_wire;__Request__host_processor_sets_t Request_host_processor_sets;__Request__host_processor_set_priv_t Request_host_processor_set_priv;__Request__set_dp_control_port_t Request_set_dp_control_port;__Request__get_dp_control_port_t Request_get_dp_control_port;__Request__host_set_UNDServer_t Request_host_set_UNDServer;__Request__host_get_UNDServer_t Request_host_get_UNDServer;__Request__kext_request_t Request_kext_request;};
union __ReplyUnion__host_priv_subsystem {__Reply__host_get_boot_info_t Reply_host_get_boot_info;__Reply__host_reboot_t Reply_host_reboot;__Reply__host_priv_statistics_t Reply_host_priv_statistics;__Reply__host_default_memory_manager_t Reply_host_default_memory_manager;__Reply__vm_wire_t Reply_vm_wire;__Reply__thread_wire_t Reply_thread_wire;__Reply__vm_allocate_cpm_t Reply_vm_allocate_cpm;__Reply__host_processors_t Reply_host_processors;__Reply__host_get_clock_control_t Reply_host_get_clock_control;__Reply__kmod_create_t Reply_kmod_create;__Reply__kmod_destroy_t Reply_kmod_destroy;__Reply__kmod_control_t Reply_kmod_control;__Reply__host_get_special_port_t Reply_host_get_special_port;__Reply__host_set_special_port_t Reply_host_set_special_port;__Reply__host_set_exception_ports_t Reply_host_set_exception_ports;__Reply__host_get_exception_ports_t Reply_host_get_exception_ports;__Reply__host_swap_exception_ports_t Reply_host_swap_exception_ports;__Reply__host_load_symbol_table_t Reply_host_load_symbol_table;__Reply__mach_vm_wire_t Reply_mach_vm_wire;__Reply__host_processor_sets_t Reply_host_processor_sets;__Reply__host_processor_set_priv_t Reply_host_processor_set_priv;__Reply__set_dp_control_port_t Reply_set_dp_control_port;__Reply__get_dp_control_port_t Reply_get_dp_control_port;__Reply__host_set_UNDServer_t Reply_host_set_UNDServer;__Reply__host_get_UNDServer_t Reply_host_get_UNDServer;__Reply__kext_request_t Reply_kext_request;};
union __RequestUnion__vm_map_subsystem {__Request__vm_region_t Request_vm_region;__Request__vm_allocate_t Request_vm_allocate;__Request__vm_deallocate_t Request_vm_deallocate;__Request__vm_protect_t Request_vm_protect;__Request__vm_inherit_t Request_vm_inherit;__Request__vm_read_t Request_vm_read;__Request__vm_read_list_t Request_vm_read_list;__Request__vm_write_t Request_vm_write;__Request__vm_copy_t Request_vm_copy;__Request__vm_read_overwrite_t Request_vm_read_overwrite;__Request__vm_msync_t Request_vm_msync;__Request__vm_behavior_set_t Request_vm_behavior_set;__Request__vm_map_t Request_vm_map;__Request__vm_machine_attribute_t Request_vm_machine_attribute;__Request__vm_remap_t Request_vm_remap;__Request__task_wire_t Request_task_wire;__Request__mach_make_memory_entry_t Request_mach_make_memory_entry;__Request__vm_map_page_query_t Request_vm_map_page_query;__Request__mach_vm_region_info_t Request_mach_vm_region_info;__Request__vm_mapped_pages_info_t Request_vm_mapped_pages_info;__Request__vm_region_recurse_t Request_vm_region_recurse;__Request__vm_region_recurse_64_t Request_vm_region_recurse_64;__Request__mach_vm_region_info_64_t Request_mach_vm_region_info_64;__Request__vm_region_64_t Request_vm_region_64;__Request__mach_make_memory_entry_64_t Request_mach_make_memory_entry_64;__Request__vm_map_64_t Request_vm_map_64;__Request__vm_purgable_control_t Request_vm_purgable_control;};
union __ReplyUnion__vm_map_subsystem {__Reply__vm_region_t Reply_vm_region;__Reply__vm_allocate_t Reply_vm_allocate;__Reply__vm_deallocate_t Reply_vm_deallocate;__Reply__vm_protect_t Reply_vm_protect;__Reply__vm_inherit_t Reply_vm_inherit;__Reply__vm_read_t Reply_vm_read;__Reply__vm_read_list_t Reply_vm_read_list;__Reply__vm_write_t Reply_vm_write;__Reply__vm_copy_t Reply_vm_copy;__Reply__vm_read_overwrite_t Reply_vm_read_overwrite;__Reply__vm_msync_t Reply_vm_msync;__Reply__vm_behavior_set_t Reply_vm_behavior_set;__Reply__vm_map_t Reply_vm_map;__Reply__vm_machine_attribute_t Reply_vm_machine_attribute;__Reply__vm_remap_t Reply_vm_remap;__Reply__task_wire_t Reply_task_wire;__Reply__mach_make_memory_entry_t Reply_mach_make_memory_entry;__Reply__vm_map_page_query_t Reply_vm_map_page_query;__Reply__mach_vm_region_info_t Reply_mach_vm_region_info;__Reply__vm_mapped_pages_info_t Reply_vm_mapped_pages_info;__Reply__vm_region_recurse_t Reply_vm_region_recurse;__Reply__vm_region_recurse_64_t Reply_vm_region_recurse_64;__Reply__mach_vm_region_info_64_t Reply_mach_vm_region_info_64;__Reply__vm_region_64_t Reply_vm_region_64;__Reply__mach_make_memory_entry_64_t Reply_mach_make_memory_entry_64;__Reply__vm_map_64_t Reply_vm_map_64;__Reply__vm_purgable_control_t Reply_vm_purgable_control;};
union __RequestUnion__mach_port_subsystem {__Request__mach_port_names_t Request_mach_port_names;__Request__mach_port_type_t Request_mach_port_type;__Request__mach_port_rename_t Request_mach_port_rename;__Request__mach_port_allocate_name_t Request_mach_port_allocate_name;__Request__mach_port_allocate_t Request_mach_port_allocate;__Request__mach_port_destroy_t Request_mach_port_destroy;__Request__mach_port_deallocate_t Request_mach_port_deallocate;__Request__mach_port_get_refs_t Request_mach_port_get_refs;__Request__mach_port_mod_refs_t Request_mach_port_mod_refs;__Request__mach_port_set_mscount_t Request_mach_port_set_mscount;__Request__mach_port_get_set_status_t Request_mach_port_get_set_status;__Request__mach_port_move_member_t Request_mach_port_move_member;__Request__mach_port_request_notification_t Request_mach_port_request_notification;__Request__mach_port_insert_right_t Request_mach_port_insert_right;__Request__mach_port_extract_right_t Request_mach_port_extract_right;__Request__mach_port_set_seqno_t Request_mach_port_set_seqno;__Request__mach_port_get_attributes_t Request_mach_port_get_attributes;__Request__mach_port_set_attributes_t Request_mach_port_set_attributes;__Request__mach_port_allocate_qos_t Request_mach_port_allocate_qos;__Request__mach_port_allocate_full_t Request_mach_port_allocate_full;__Request__task_set_port_space_t Request_task_set_port_space;__Request__mach_port_get_srights_t Request_mach_port_get_srights;__Request__mach_port_space_info_t Request_mach_port_space_info;__Request__mach_port_dnrequest_info_t Request_mach_port_dnrequest_info;__Request__mach_port_kernel_object_t Request_mach_port_kernel_object;__Request__mach_port_insert_member_t Request_mach_port_insert_member;__Request__mach_port_extract_member_t Request_mach_port_extract_member;__Request__mach_port_get_context_t Request_mach_port_get_context;__Request__mach_port_set_context_t Request_mach_port_set_context;__Request__mach_port_kobject_t Request_mach_port_kobject;};
union __ReplyUnion__mach_port_subsystem {__Reply__mach_port_names_t Reply_mach_port_names;__Reply__mach_port_type_t Reply_mach_port_type;__Reply__mach_port_rename_t Reply_mach_port_rename;__Reply__mach_port_allocate_name_t Reply_mach_port_allocate_name;__Reply__mach_port_allocate_t Reply_mach_port_allocate;__Reply__mach_port_destroy_t Reply_mach_port_destroy;__Reply__mach_port_deallocate_t Reply_mach_port_deallocate;__Reply__mach_port_get_refs_t Reply_mach_port_get_refs;__Reply__mach_port_mod_refs_t Reply_mach_port_mod_refs;__Reply__mach_port_set_mscount_t Reply_mach_port_set_mscount;__Reply__mach_port_get_set_status_t Reply_mach_port_get_set_status;__Reply__mach_port_move_member_t Reply_mach_port_move_member;__Reply__mach_port_request_notification_t Reply_mach_port_request_notification;__Reply__mach_port_insert_right_t Reply_mach_port_insert_right;__Reply__mach_port_extract_right_t Reply_mach_port_extract_right;__Reply__mach_port_set_seqno_t Reply_mach_port_set_seqno;__Reply__mach_port_get_attributes_t Reply_mach_port_get_attributes;__Reply__mach_port_set_attributes_t Reply_mach_port_set_attributes;__Reply__mach_port_allocate_qos_t Reply_mach_port_allocate_qos;__Reply__mach_port_allocate_full_t Reply_mach_port_allocate_full;__Reply__task_set_port_space_t Reply_task_set_port_space;__Reply__mach_port_get_srights_t Reply_mach_port_get_srights;__Reply__mach_port_space_info_t Reply_mach_port_space_info;__Reply__mach_port_dnrequest_info_t Reply_mach_port_dnrequest_info;__Reply__mach_port_kernel_object_t Reply_mach_port_kernel_object;__Reply__mach_port_insert_member_t Reply_mach_port_insert_member;__Reply__mach_port_extract_member_t Reply_mach_port_extract_member;__Reply__mach_port_get_context_t Reply_mach_port_get_context;__Reply__mach_port_set_context_t Reply_mach_port_set_context;__Reply__mach_port_kobject_t Reply_mach_port_kobject;};
union __RequestUnion__task_subsystem {__Request__task_create_t Request_task_create;__Request__task_terminate_t Request_task_terminate;__Request__task_threads_t Request_task_threads;__Request__mach_ports_register_t Request_mach_ports_register;__Request__mach_ports_lookup_t Request_mach_ports_lookup;__Request__task_info_t Request_task_info;__Request__task_set_info_t Request_task_set_info;__Request__task_suspend_t Request_task_suspend;__Request__task_resume_t Request_task_resume;__Request__task_get_special_port_t Request_task_get_special_port;__Request__task_set_special_port_t Request_task_set_special_port;__Request__thread_create_t Request_thread_create;__Request__thread_create_running_t Request_thread_create_running;__Request__task_set_exception_ports_t Request_task_set_exception_ports;__Request__task_get_exception_ports_t Request_task_get_exception_ports;__Request__task_swap_exception_ports_t Request_task_swap_exception_ports;__Request__lock_set_create_t Request_lock_set_create;__Request__lock_set_destroy_t Request_lock_set_destroy;__Request__semaphore_create_t Request_semaphore_create;__Request__semaphore_destroy_t Request_semaphore_destroy;__Request__task_policy_set_t Request_task_policy_set;__Request__task_policy_get_t Request_task_policy_get;__Request__task_sample_t Request_task_sample;__Request__task_policy_t Request_task_policy;__Request__task_set_emulation_t Request_task_set_emulation;__Request__task_get_emulation_vector_t Request_task_get_emulation_vector;__Request__task_set_emulation_vector_t Request_task_set_emulation_vector;__Request__task_set_ras_pc_t Request_task_set_ras_pc;__Request__task_zone_info_t Request_task_zone_info;__Request__task_assign_t Request_task_assign;__Request__task_assign_default_t Request_task_assign_default;__Request__task_get_assignment_t Request_task_get_assignment;__Request__task_set_policy_t Request_task_set_policy;__Request__task_get_state_t Request_task_get_state;__Request__task_set_state_t Request_task_set_state;};
union __ReplyUnion__task_subsystem {__Reply__task_create_t Reply_task_create;__Reply__task_terminate_t Reply_task_terminate;__Reply__task_threads_t Reply_task_threads;__Reply__mach_ports_register_t Reply_mach_ports_register;__Reply__mach_ports_lookup_t Reply_mach_ports_lookup;__Reply__task_info_t Reply_task_info;__Reply__task_set_info_t Reply_task_set_info;__Reply__task_suspend_t Reply_task_suspend;__Reply__task_resume_t Reply_task_resume;__Reply__task_get_special_port_t Reply_task_get_special_port;__Reply__task_set_special_port_t Reply_task_set_special_port;__Reply__thread_create_t Reply_thread_create;__Reply__thread_create_running_t Reply_thread_create_running;__Reply__task_set_exception_ports_t Reply_task_set_exception_ports;__Reply__task_get_exception_ports_t Reply_task_get_exception_ports;__Reply__task_swap_exception_ports_t Reply_task_swap_exception_ports;__Reply__lock_set_create_t Reply_lock_set_create;__Reply__lock_set_destroy_t Reply_lock_set_destroy;__Reply__semaphore_create_t Reply_semaphore_create;__Reply__semaphore_destroy_t Reply_semaphore_destroy;__Reply__task_policy_set_t Reply_task_policy_set;__Reply__task_policy_get_t Reply_task_policy_get;__Reply__task_sample_t Reply_task_sample;__Reply__task_policy_t Reply_task_policy;__Reply__task_set_emulation_t Reply_task_set_emulation;__Reply__task_get_emulation_vector_t Reply_task_get_emulation_vector;__Reply__task_set_emulation_vector_t Reply_task_set_emulation_vector;__Reply__task_set_ras_pc_t Reply_task_set_ras_pc;__Reply__task_zone_info_t Reply_task_zone_info;__Reply__task_assign_t Reply_task_assign;__Reply__task_assign_default_t Reply_task_assign_default;__Reply__task_get_assignment_t Reply_task_get_assignment;__Reply__task_set_policy_t Reply_task_set_policy;__Reply__task_get_state_t Reply_task_get_state;__Reply__task_set_state_t Reply_task_set_state;};
union tokenstr___8AC0922476273DFEC243552765DE6A61 {au_arg32_t arg32;au_arg64_t arg64;au_arb_t arb;au_attr32_t attr32;au_attr64_t attr64;au_execarg_t execarg;au_execenv_t execenv;au_exit_t exit;au_file_t file;au_groups_t grps;au_header32_t hdr32;au_header32_ex_t hdr32_ex;au_header64_t hdr64;au_header64_ex_t hdr64_ex;au_inaddr_t inaddr;au_inaddr_ex_t inaddr_ex;au_ip_t ip;au_ipc_t ipc;au_ipcperm_t ipcperm;au_iport_t iport;au_opaque_t opaque;au_path_t path;au_proc32_t proc32;au_proc32ex_t proc32_ex;au_proc64_t proc64;au_proc64ex_t proc64_ex;au_ret32_t ret32;au_ret64_t ret64;au_seq_t seq;au_socket_t socket;au_socket_ex32_t socket_ex32;au_socketinet_ex32_t sockinet_ex32;au_socketunix_t sockunix;au_subject32_t subj32;au_subject32ex_t subj32_ex;au_subject64_t subj64;au_subject64ex_t subj64_ex;au_text_t text;au_kevent_t kevent;au_invalid_t invalid;au_trailer_t trail;au_zonename_t zonename;};
struct icmp___115915189B36D486427C31680FC3CC99__ih_idseq {n_short icd_id;n_short icd_seq;};
union getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B {rquota gqr_rquota;};
struct icmp___115915189B36D486427C31680FC3CC99__ih_pmtu {n_short ipm_void;n_short ipm_nextmtu;};
union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65 {struct nlm4_holder holder;};
union klm_testrply___40F9D261D31BF2147C1606393BAB8476 {struct klm_holder holder;};
union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE {struct nlm_holder holder;};
struct icmp___B8975A790A59AA025FBB0015D5EF41D8__id_ip {struct ip idi_ip;};
struct icmp___B8975A790A59AA025FBB0015D5EF41D8__id_ts {n_time its_otime;n_time its_rtime;n_time its_ttime;};
struct ipp_value_u___E1A4022D81728FCD57DFF225EC9961C7 {int xres;int yres;ipp_res_t units;};
union un_sockinfo___AC5844E0938FE50647D9B156445EFB6F {struct sockaddr_un ua_sun;char ua_dummy[255];};
union ypresp_all___438EB5C0F713AEE99C9EADC1C626DC0A {ypresp_key_val val;};
union CURLMsg___925FB63D6E9926DD49F09E35066BE965 {void *whatever;CURLcode result;};
union ranlib___D365164107DBB2F7587637CCBEC7897F {off_t ran_strx;char *ran_name;};
struct apple_gss_krb5_authdata_if_relevant_key {OM_uint32 type;OM_uint32 length;void *data;};
union tsp___C5C79F2990C63D5A56D70B5237B3DD42 {struct timeval32 tspu_time;char tspu_hopcnt;};
struct netsnmp_baby_steps_access_methods_s {Netsnmp_Node_Handler *pre_request;Netsnmp_Node_Handler *object_lookup;Netsnmp_Node_Handler *get_values;Netsnmp_Node_Handler *object_syntax_checks;Netsnmp_Node_Handler *row_creation;Netsnmp_Node_Handler *undo_setup;Netsnmp_Node_Handler *set_values;Netsnmp_Node_Handler *consistency_checks;Netsnmp_Node_Handler *commit;Netsnmp_Node_Handler *undo_sets;Netsnmp_Node_Handler *undo_cleanup;Netsnmp_Node_Handler *undo_commit;Netsnmp_Node_Handler *irreversible_commit;Netsnmp_Node_Handler *post_request;void *my_access_void;};
typedef void mpo_devfs_label_associate_device_t(dev_t dev, struct devnode *de, struct label *label,  char *fullpath);
struct _29720D4B1372A72A8E922F3C51907D2B {void *data;size_t size;};
struct _5A8FECC4C2877C4C87F3C51F77AE50CF {unsigned long long flags;unsigned int cachesize;unsigned int psize;int lorder;size_t reclen;unsigned char bval;char *bfname;};
struct _62C3C6215D74515CD10ADACC096E4B0E {unsigned char vers;unsigned char type;unsigned char answer;unsigned char pad;unsigned int id_num;struct osockaddr addr;struct osockaddr ctl_addr;int pid;char l_name[12];char r_name[12];char r_tty[16];};
struct _81AF895D5A7FC7AA97C511D95D41010E {void *dptr;size_t dsize;};
struct _8224BF751892D9429891DD778DF6A995 {unsigned char vers;unsigned char type;unsigned char answer;unsigned char pad;unsigned int id_num;struct osockaddr addr;};
struct _82604E0BCB50E4D0B690A798AE0B3CDE {struct in_addr addr;};
struct _BD619B2F7AFF7BA6F06506AA27210664 {regoff_t rm_so;regoff_t rm_eo;};
struct _E1260AB78985DBC228459590506E4C92 {size_t we_wordc;char **we_wordv;size_t we_offs;};
struct _EF3ED49D3DFE8EEF757C9F0AD64865F5 {CURLversion age; char *version;unsigned int version_num; char *host;int features; char *ssl_version;long long ssl_version_num; char *libz_version; char * *protocols; char *ares;int ares_num; char *libidn;int iconv_ver_num; char *libssh_version;};
struct _FA547AB27F70B847C07B2381F2BB5B39 {int re_magic;size_t re_nsub; char *re_endp;struct re_guts *re_g;};
typedef void (*iconv_unicode_mb_to_uc_fallback)( char *inbuf, size_t inbufsize, void (*write_replacement)( unsigned int *buf, size_t buflen, void *callback_arg), void *callback_arg, void *data);
typedef void (*iconv_unicode_uc_to_mb_fallback)(unsigned int code, void (*write_replacement)( char *buf, size_t buflen, void *callback_arg), void *callback_arg, void *data);
struct gss_krb5_lucid_context_version {OM_uint32 version;};
typedef natural_t memory_object_cluster_size_t;
struct xp_window_state_event_struct {xp_window_id id;unsigned int state;};
struct _krb5_verify_init_creds_opt {krb5_flags flags;int ap_req_nofail;};
struct netsnmp_indexed_addr_pair_s {struct sockaddr_in remote_addr;struct sockaddr_in local_addr;int if_index;};
typedef natural_t *memory_object_fault_info_t;
typedef void (*xsltElemPreCompDeallocator)(xsltElemPreCompPtr comp);
typedef void (*setDocumentLocatorSAXFunc)(void *ctx, xmlSAXLocatorPtr loc);
typedef int mpo_proc_check_getlcid_t(struct proc *p0, struct proc *p, pid_t pid);
typedef int mpo_proc_check_setlcid_t(struct proc *p0, struct proc *p, pid_t pid, pid_t lcid);
typedef int (*xmlC14NIsVisibleCallback)(void *user_data, xmlNodePtr node, xmlNodePtr parent);
typedef int Netsnmp_Value_Change_Ok(char *old_value, size_t old_value_len, char *new_value, size_t new_value_len, void *mydata);
typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback5;
typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback6;
typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback7;
typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback8;
typedef void *Netsnmp_Read_List_Data(char *buf, size_t buf_len);
typedef int Netsnmp_Save_List_Data(char *buf, size_t buf_len, void *);
struct gss_buffer_desc_struct {size_t length;void *value;};
typedef natural_t mach_msg_type_number_t;
typedef size_t netsnmp_container_size(struct netsnmp_container_s *);
struct netsnmp_large_fd_set_s {unsigned int lfs_setsize;fd_set *lfs_setptr;fd_set lfs_set;};
struct netsnmp_scalar_group_s {oid lbound;oid ubound;};
typedef natural_t thread_policy_flavor_t;
struct thread_standard_policy {natural_t no_data;};
typedef void (*xmlStructuredErrorFunc)(void *userData, xmlErrorPtr error);
typedef size_t _curl_write_callback1( char *, size_t, size_t, void *);
typedef size_t _curl_write_callback2( char *, size_t, size_t,  void *);
typedef size_t _curl_write_callback4( void *, size_t, size_t, void *);
typedef size_t _curl_write_callback5( void *, size_t, size_t,  void *);
typedef size_t (*curl_formget_callback)(void *arg,  char *buf, size_t len);
typedef void *(*curl_realloc_callback)(void *ptr, size_t size);
struct kernel_resource_sizes {natural_t task;natural_t thread;natural_t port;natural_t memory_region;natural_t memory_object;};
typedef void (*xmlDeregisterNodeFunc)(xmlNodePtr node);
typedef size_t _curl_read_callback1(char *, size_t, size_t, void *);
typedef size_t _curl_read_callback2(char *, size_t, size_t,  void *);
typedef size_t _curl_read_callback4(void *, size_t, size_t, void *);
typedef size_t _curl_read_callback5(void *, size_t, size_t,  void *);
typedef void *(*curl_calloc_callback)(size_t nmemb, size_t size);
typedef void *(*curl_malloc_callback)(size_t size);
typedef void (*iconv_wide_char_hook)(__darwin_wchar_t wc, void *data);
typedef natural_t mach_msg_type_size_t;
typedef natural_t mach_port_msgcount_t;
struct module_compatability { char *old_module; char *new_module; char *tag;size_t tag_len;struct module_compatability *next;};
typedef int mpo_policy_syscall_t(struct proc *p, int call, user_addr_t arg);
struct netsnmp_ref_size_t_s {size_t val;};
struct netsnmp_void_array_s {size_t size;void **array;};
struct ocsp_responder_id_st {int type;union ocsp_responder_id_st___A140B48D11B7E00D603349F1A886D7E2 value;};
typedef vm_offset_t *page_address_array_t;
struct task_category_policy {task_role_t role;};
typedef natural_t task_policy_flavor_t;
typedef int LDAPDN_rewrite_func(LDAPDN dn, unsigned int flags, void *ctx);
struct _xmlSchemaFacetLink {struct _xmlSchemaFacetLink *next;xmlSchemaFacetPtr facet;};
typedef void (*cups_sc_walk_func_t)( char *oid,  char *data, int datalen, void *context);
typedef size_t (*curl_write_callback)(char *buffer, size_t size, size_t nitems, void *outstream);
struct gss_OID_desc_struct {OM_uint32 length;void *elements;};
typedef natural_t mach_port_mscount_t;
struct malloc_statistics_t {unsigned int blocks_in_use;size_t size_in_use;size_t max_size_in_use;size_t size_allocated;};
struct netsnmp_addr_pair_s {struct sockaddr_in remote_addr;struct sockaddr_in local_addr;};
struct ocsp_cert_status_st {int type;union ocsp_cert_status_st___0CEB729C6D376DBCC2995D5CF424A18E value;};
typedef natural_t thread_state_data_t[144];
typedef void (*xlinkNodeDetectFunc)(void *ctx, xmlNodePtr node);
typedef void (*xmlRegisterNodeFunc)(xmlNodePtr node);
typedef int (*xmlXPathConvertFunc)(xmlXPathObjectPtr obj, int type);
struct Block_callbacks_RR {size_t size;void (*retain)( void *);void (*release)( void *);void (*destructInstance)( void *);};
struct DIST_POINT_NAME_st {int type;union DIST_POINT_NAME_st___A95B7E1D2A8BC0A3F405D6FFBE373ACE name;};
struct _krb5_ticket_times {krb5_timestamp authtime;krb5_timestamp starttime;krb5_timestamp endtime;krb5_timestamp renew_till;};
struct _xmlSchemaTypeLink {struct _xmlSchemaTypeLink *next;xmlSchemaTypePtr type;};
typedef size_t (*curl_read_callback)(char *buffer, size_t size, size_t nitems, void *instream);
typedef int (*curl_seek_callback)(void *instream, curl_off_t offset, int origin);
typedef void *(*dyn_MEM_realloc_cb)(void *, size_t);
typedef mach_vm_offset_t *emulation_vector_t;
struct gss_krb5_lucid_key {OM_uint32 type;OM_uint32 length;void *data;};
struct host_cpu_load_info {natural_t cpu_ticks[4];};
typedef xmlParserInputPtr htmlParserInputPtr;
typedef natural_t mach_msg_timeout_t;
typedef natural_t mach_port_rights_t;
struct sqlite3_io_methods {int iVersion;int (*xClose)(sqlite3_file *);int (*xRead)(sqlite3_file *, void *, int iAmt, sqlite3_int64 iOfst);int (*xWrite)(sqlite3_file *,  void *, int iAmt, sqlite3_int64 iOfst);int (*xTruncate)(sqlite3_file *, sqlite3_int64 size);int (*xSync)(sqlite3_file *, int flags);int (*xFileSize)(sqlite3_file *, sqlite3_int64 *pSize);int (*xLock)(sqlite3_file *, int);int (*xUnlock)(sqlite3_file *, int);int (*xCheckReservedLock)(sqlite3_file *, int *pResOut);int (*xFileControl)(sqlite3_file *, int op, void *pArg);int (*xSectorSize)(sqlite3_file *);int (*xDeviceCharacteristics)(sqlite3_file *);int (*xShmMap)(sqlite3_file *, int iPg, int pgsz, int, void **);int (*xShmLock)(sqlite3_file *, int offset, int n, int flags);void (*xShmBarrier)(sqlite3_file *);int (*xShmUnmap)(sqlite3_file *, int deleteFlag);};
typedef void (*xmlListDeallocator)(xmlLinkPtr lk);
typedef void *(*dyn_MEM_malloc_cb)(size_t);
typedef xmlParserCtxtPtr htmlParserCtxtPtr;
typedef xmlSAXHandlerPtr htmlSAXHandlerPtr;
struct http_credential_s {void *data;size_t datalen;};
typedef natural_t mach_port_right_t;
typedef natural_t mach_port_seqno_t;
typedef natural_t mach_port_urefs_t;
struct __attribute__((packed)) nd_router_solicit {struct icmp6_hdr nd_rs_hdr;};
struct ASN1_TEMPLATE_st {unsigned long long flags;long long tag;unsigned long long offset; char *field_name;ASN1_ITEM_EXP *item;};
typedef int NetSNMPStashDump(char *, size_t, void *, struct netsnmp_oid_stash_node_s *);
struct hash_info_bucket {natural_t hib_count;};
struct mach_port_limits {mach_port_msgcount_t mpl_qlimit;};
typedef natural_t mach_port_name_t;
typedef natural_t mach_port_type_t;
struct GENERAL_NAME_st {int type;union GENERAL_NAME_st___0CCF65EAB3E3C79409391F9327465DF1 d;};
struct _xmlDOMWrapCtxt {void *_private;int type;void *namespaceMap;xmlDOMWrapAcquireNsFunction getNsForNodeFunc;};
struct _xmlSchemaAnnot {struct _xmlSchemaAnnot *next;xmlNodePtr content;};
typedef mach_error_t (*mach_error_fn_t)(void);
typedef natural_t mach_msg_size_t;
struct openssl_item_st {int code;void *value;size_t value_size;size_t *value_length;};
struct short_hand_verf {struct opaque_auth new_cred;};
typedef natural_t thread_flavor_t;
struct _malloc_zone_t {void *reserved1;void *reserved2;size_t (*size)(struct _malloc_zone_t *zone,  void *ptr);void *(*malloc)(struct _malloc_zone_t *zone, size_t size);void *(*calloc)(struct _malloc_zone_t *zone, size_t num_items, size_t size);void *(*valloc)(struct _malloc_zone_t *zone, size_t size);void (*free)(struct _malloc_zone_t *zone, void *ptr);void *(*realloc)(struct _malloc_zone_t *zone, void *ptr, size_t size);void (*destroy)(struct _malloc_zone_t *zone); char *zone_name;unsigned int (*batch_malloc)(struct _malloc_zone_t *zone, size_t size, void **results, unsigned int num_requested);void (*batch_free)(struct _malloc_zone_t *zone, void **to_be_freed, unsigned int num_to_be_freed);struct malloc_introspection_t *introspect;unsigned int version;void *(*memalign)(struct _malloc_zone_t *zone, size_t alignment, size_t size);void (*free_definite_size)(struct _malloc_zone_t *zone, void *ptr, size_t size);size_t (*pressure_relief)(struct _malloc_zone_t *zone, size_t goal);};
struct appletalk_info {struct vinfo_stat atalk_stat;};
typedef socklen_t curl_socklen_t;
struct ip_mreq_source {struct in_addr imr_multiaddr;struct in_addr imr_sourceaddr;struct in_addr imr_interface;};
struct ipc_info_space {natural_t iis_genno_mask;natural_t iis_table_size;natural_t iis_table_next;natural_t iis_tree_size;natural_t iis_tree_small;natural_t iis_tree_hash;};
struct klm_unlockargs {struct klm_lock alock;};
struct pam_repository {char *type;void *scope;size_t scope_len;};
struct ssl3_buffer_st {unsigned char *buf;size_t len;int offset;int left;};
typedef natural_t *thread_state_t;
struct x509_object_st {int type;union x509_object_st___0BEAA7EF7F7C8AAD9DD0E8F95323714A data;};
typedef void *(*xmlReallocFunc)(void *mem, size_t size);
struct _xsltDocument {struct _xsltDocument *next;int main;xmlDocPtr doc;void *keys;struct _xsltDocument *includes;int preproc;int nbKeysComputed;};
struct attribute_set {attrgroup_t commonattr;attrgroup_t volattr;attrgroup_t dirattr;attrgroup_t fileattr;attrgroup_t forkattr;};
struct bp_whoami_arg {bp_address client_address;};
struct cups_dentry_s {char filename[260];struct stat fileinfo;};
struct curl_sockaddr {int family;int socktype;int protocol;unsigned int addrlen;struct sockaddr addr;};
typedef natural_t ledger_item_t;
typedef natural_t task_flavor_t;
struct vm_statistics {natural_t free_count;natural_t active_count;natural_t inactive_count;natural_t wire_count;natural_t zero_fill_count;natural_t reactivations;natural_t pageins;natural_t pageouts;natural_t faults;natural_t cow_faults;natural_t lookups;natural_t hits;natural_t purgeable_count;natural_t purges;natural_t speculative_count;};
typedef void *(*xmlMallocFunc)(size_t size);
struct LDAPDerefRes {char *derefAttr;struct berval derefVal;LDAPDerefVal *attrVals;struct LDAPDerefRes *next;};
struct LDAPDerefVal {char *type;BerVarray vals;struct LDAPDerefVal *next;};
struct asn1_type_st {int type;union asn1_type_st___2DD2868AF9E8E8462C9810218891F7E4 value;};
struct au_class_ent {char *ac_name;au_class_t ac_class;char *ac_desc;};
typedef size_t cache_cost_t;
struct hm_header_st {unsigned char type;unsigned long long msg_len;unsigned short seq;unsigned long long frag_off;unsigned long long frag_len;unsigned int is_ccs;struct dtls1_retransmit_state saved_retransmit_state;};
struct icmp6_ifstat {u_quad_t ifs6_in_msg;u_quad_t ifs6_in_error;u_quad_t ifs6_in_dstunreach;u_quad_t ifs6_in_adminprohib;u_quad_t ifs6_in_timeexceed;u_quad_t ifs6_in_paramprob;u_quad_t ifs6_in_pkttoobig;u_quad_t ifs6_in_echo;u_quad_t ifs6_in_echoreply;u_quad_t ifs6_in_routersolicit;u_quad_t ifs6_in_routeradvert;u_quad_t ifs6_in_neighborsolicit;u_quad_t ifs6_in_neighboradvert;u_quad_t ifs6_in_redirect;u_quad_t ifs6_in_mldquery;u_quad_t ifs6_in_mldreport;u_quad_t ifs6_in_mlddone;u_quad_t ifs6_out_msg;u_quad_t ifs6_out_error;u_quad_t ifs6_out_dstunreach;u_quad_t ifs6_out_adminprohib;u_quad_t ifs6_out_timeexceed;u_quad_t ifs6_out_paramprob;u_quad_t ifs6_out_pkttoobig;u_quad_t ifs6_out_echo;u_quad_t ifs6_out_echoreply;u_quad_t ifs6_out_routersolicit;u_quad_t ifs6_out_routeradvert;u_quad_t ifs6_out_neighborsolicit;u_quad_t ifs6_out_neighboradvert;u_quad_t ifs6_out_redirect;u_quad_t ifs6_out_mldquery;u_quad_t ifs6_out_mldreport;u_quad_t ifs6_out_mlddone;};
struct icmp6errstat {u_quad_t icp6errs_dst_unreach_noroute;u_quad_t icp6errs_dst_unreach_admin;u_quad_t icp6errs_dst_unreach_beyondscope;u_quad_t icp6errs_dst_unreach_addr;u_quad_t icp6errs_dst_unreach_noport;u_quad_t icp6errs_packet_too_big;u_quad_t icp6errs_time_exceed_transit;u_quad_t icp6errs_time_exceed_reassembly;u_quad_t icp6errs_paramprob_header;u_quad_t icp6errs_paramprob_nextheader;u_quad_t icp6errs_paramprob_option;u_quad_t icp6errs_redirect;u_quad_t icp6errs_unknown;};
struct klm_lockargs {int block;int exclusive;struct klm_lock alock;};
struct klm_testargs {int exclusive;struct klm_lock alock;};
struct lockd_notify {int ln_version;int ln_flags;int ln_pad;int ln_addrcount;struct sockaddr_storage ln_addr[1];};
typedef vm_offset_t vm_address_t;
struct ASN1_AUX_st {void *app_data;int flags;int ref_offset;int ref_lock;ASN1_aux_cb *asn1_cb;int enc_offset;};
typedef Bool (*TidyEOFFunc)(void *sourceData);
typedef void *(*TidyRealloc)(void *buf, size_t len);
struct _stringlist {char **sl_str;size_t sl_max;size_t sl_cur;};
struct _xmlNodeSet {int nodeNr;int nodeMax;xmlNodePtr *nodeTab;};
struct config_line {char *config_token;void (*parse_line)( char *, char *);void (*free_func)(void);struct config_line *next;char config_time;char *help;};
typedef xmlNodePtr htmlNodePtr;
struct if_laddrreq {char iflr_name[16];unsigned int flags;unsigned int prefixlen;struct sockaddr_storage addr;struct sockaddr_storage dstaddr;};
struct ldapcontrol {char *ldctl_oid;struct berval ldctl_value;char ldctl_iscritical;};
typedef mach_port_name_t mach_port_t;
typedef mach_port_t processor_t;
typedef mach_port_t semaphore_t;
typedef mach_port_t task_name_t;
struct xdr_discrim {int value;xdrproc_t proc;};
typedef void *(*TidyMalloc)(size_t len);
struct _krb5_data {krb5_magic magic;unsigned int length;char *data;};
struct cgi_file_s {char tempfile[1024];char *name;char *filename;char *mimetype;size_t filesize;};
struct histeventW {int num; __darwin_wchar_t *str;};
typedef xmlDocPtr htmlDocPtr;
struct ifaliasreq {char ifra_name[16];struct sockaddr ifra_addr;struct sockaddr ifra_broadaddr;struct sockaddr ifra_mask;};
struct in6_ifstat {u_quad_t ifs6_in_receive;u_quad_t ifs6_in_hdrerr;u_quad_t ifs6_in_toobig;u_quad_t ifs6_in_noroute;u_quad_t ifs6_in_addrerr;u_quad_t ifs6_in_protounknown;u_quad_t ifs6_in_truncated;u_quad_t ifs6_in_discard;u_quad_t ifs6_in_deliver;u_quad_t ifs6_out_forward;u_quad_t ifs6_out_request;u_quad_t ifs6_out_discard;u_quad_t ifs6_out_fragok;u_quad_t ifs6_out_fragfail;u_quad_t ifs6_out_fragcreat;u_quad_t ifs6_reass_reqd;u_quad_t ifs6_reass_ok;u_quad_t ifs6_reass_fail;u_quad_t ifs6_in_mcast;u_quad_t ifs6_out_mcast;};
struct in_pktinfo {unsigned int ipi_ifindex;struct in_addr ipi_spec_dst;struct in_addr ipi_addr;};
struct kinfo_lctx {pid_t id;int mc;};
typedef mach_port_t lock_set_t;
struct ypresp_all {int more;union ypresp_all___438EB5C0F713AEE99C9EADC1C626DC0A ypresp_all_u;};
typedef void (*TidyPanic)(ctmbstr mssg);
struct _ffi_type {size_t size;unsigned short alignment;unsigned short type;struct _ffi_type **elements;};
typedef pid_t au_asid_t;
struct if_msghdr {unsigned short ifm_msglen;unsigned char ifm_version;unsigned char ifm_type;int ifm_addrs;int ifm_flags;unsigned short ifm_index;struct if_data ifm_data;};
struct ifmibdata {char ifmd_name[16];unsigned int ifmd_pcount;unsigned int ifmd_flags;unsigned int ifmd_snd_len;unsigned int ifmd_snd_maxlen;unsigned int ifmd_snd_drops;unsigned int ifmd_filler[4];struct if_data64 ifmd_data;};
typedef u_quad_t inp_gen_t;
struct ipsecstat {u_quad_t in_success;u_quad_t in_polvio;u_quad_t in_nosa;u_quad_t in_inval;u_quad_t in_nomem;u_quad_t in_badspi;u_quad_t in_ahreplay;u_quad_t in_espreplay;u_quad_t in_ahauthsucc;u_quad_t in_ahauthfail;u_quad_t in_espauthsucc;u_quad_t in_espauthfail;u_quad_t in_esphist[256];u_quad_t in_ahhist[256];u_quad_t in_comphist[256];u_quad_t out_success;u_quad_t out_polvio;u_quad_t out_nosa;u_quad_t out_inval;u_quad_t out_nomem;u_quad_t out_noroute;u_quad_t out_esphist[256];u_quad_t out_ahhist[256];u_quad_t out_comphist[256];};
struct itimerval {struct timeval it_interval;struct timeval it_value;};
struct lineinfow { __darwin_wchar_t *buffer; __darwin_wchar_t *cursor; __darwin_wchar_t *lastchar;};
struct pfkeystat {u_quad_t out_total;u_quad_t out_bytes;u_quad_t out_msgtype[256];u_quad_t out_invlen;u_quad_t out_invver;u_quad_t out_invmsgtype;u_quad_t out_tooshort;u_quad_t out_nomem;u_quad_t out_dupext;u_quad_t out_invexttype;u_quad_t out_invsatype;u_quad_t out_invaddr;u_quad_t in_total;u_quad_t in_bytes;u_quad_t in_msgtype[256];u_quad_t in_msgtarget[3];u_quad_t in_nomem;u_quad_t sockerr;};
struct psem_info {struct vinfo_stat psem_stat;char psem_name[1024];};
struct radvisory {off_t ra_offset;int ra_count;};
typedef u_quad_t unp_gen_t;
typedef __darwin_wchar_t SQLWCHAR;
union gen_addr {struct in_addr ga_in;};
struct in6_addr {union in6_addr___330434928707C706902F20BE7BA89EB4 __u6_addr;};
struct ip_mreqn {struct in_addr imr_multiaddr;struct in_addr imr_address;int imr_ifindex;};
struct lastlogx {struct timeval ll_tv;char ll_line[32];char ll_host[256];};
struct ldap_ava {struct berval la_attr;struct berval la_value;unsigned int la_flags;void *la_private;};
typedef mach_port_t ledger_t;
struct log2phys {unsigned int l2p_flags;off_t l2p_contigbytes;off_t l2p_devoffset;};
typedef u_quad_t so_gen_t;
typedef mach_port_t thread_t;
struct utmpidle {struct ru_utmp ui_utmp;unsigned int ui_idle;};
typedef mach_port_t vm_map_t;
typedef  __darwin_wchar_t *LPCWSTR;
typedef mach_port_t alarm_t;
typedef uid_t au_id_t;
struct lastlog {time_t ll_time;char ll_line[8];char ll_host[16];};
struct netinfo {struct sockaddr rip_dst;int rip_metric;};
typedef quad_t *qaddr_t;
struct utimbuf {time_t actime;time_t modtime;};
struct arpreq {struct sockaddr arp_pa;struct sockaddr arp_ha;int arp_flags;};
struct fstore {unsigned int fst_flags;int fst_posmode;off_t fst_offset;off_t fst_length;off_t fst_bytesalloc;};
typedef mach_port_t host_t;
struct mstats {size_t bytes_total;size_t chunks_used;size_t bytes_used;size_t chunks_free;size_t bytes_free;};
struct plimit {struct rlimit pl_rlimit[9];int pl_refcnt;};
struct rusage {struct timeval ru_utime;struct timeval ru_stime;long long ru_maxrss;long long ru_ixrss;long long ru_idrss;long long ru_isrss;long long ru_minflt;long long ru_majflt;long long ru_nswap;long long ru_inblock;long long ru_oublock;long long ru_msgsnd;long long ru_msgrcv;long long ru_nsignals;long long ru_nvcsw;long long ru_nivcsw;};
typedef mach_port_t task_t;
struct ifreq {char ifr_name[16];union ifreq___C815701E280F15262E20FD07168CD215 ifr_ifru;};
typedef mach_port_t upl_t;
struct tsp {unsigned char tsp_type;unsigned char tsp_vers;unsigned short tsp_seq;union tsp___C5C79F2990C63D5A56D70B5237B3DD42 tsp_u;char tsp_name[256];};
union sockaddr_gen___75CD6CBD540C65254472F3438B93F561 {struct sockaddr _sg_sa;struct sockaddr_in _sg_sin;};
union extern_proc___27B38CA2FABD237895D38B0302C8FC9B {struct extern_proc___27B38CA2FABD237895D38B0302C8FC9B___A845D8EFA010EC0E04B626533D96DFA0 p_st1;struct timeval __p_starttime;};
union in_sockinfo___881D04D8390B0CDBA797F709C012DF83 {struct in4in6_addr ina_46;struct in6_addr ina_6;};
union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC {struct accepted_reply RP_ar;struct rejected_reply RP_dr;};
union xinpcb64___61B649B2802E895728C8AA130C15F594 {struct in_addr_4in6 inp46_local;struct in6_addr inp6_local;};
union xinpcb64___BD75B87EE766833A3DF9644C7FCC1E00 {struct in_addr_4in6 inp46_foreign;struct in6_addr inp6_foreign;};
union ip6_hdr___55051B7F048FF6C7BE508169AD51FCBE {struct ip6_hdr___55051B7F048FF6C7BE508169AD51FCBE__ip6_hdrctl ip6_un1;u_int8_t ip6_un2_vfc;};
union inpcb___61B649B2802E895728C8AA130C15F594 {struct in_addr_4in6 inp46_local;struct in6_addr inp6_local;};
union inpcb___BD75B87EE766833A3DF9644C7FCC1E00 {struct in_addr_4in6 inp46_foreign;struct in6_addr inp6_foreign;};
struct _1A5C2EFD679D7A6E9374F478B735BD08 {natural_t pad1;mach_msg_size_t pad2;unsigned int pad3 : 24;unsigned int type : 8;};
struct _2AFE5EE5A4A6FE139E45DAAB082A402B {uint64_t address;unsigned int deallocate : 8;unsigned int copy : 8;unsigned int disposition : 8;unsigned int type : 8;mach_msg_size_t count;};
struct _6671520B86EDC1548DF0B281DB354573 {uint32_t address;mach_msg_size_t count;unsigned int deallocate : 8;unsigned int copy : 8;unsigned int disposition : 8;unsigned int type : 8;};
struct _966BCD5BEC08EADD7CB66B18D60473E0 {vm_address_t address;vm_size_t size;};
struct _A351D2C18B5CB7A2BB6D222C452FE9CB {uint32_t address;mach_msg_size_t size;unsigned int deallocate : 8;unsigned int copy : 8;unsigned int pad1 : 8;unsigned int type : 8;};
struct _BAA0E1D2BF5986DFAC16C10809EF9355 {mach_port_t name;mach_msg_size_t pad1;unsigned int pad2 : 16;unsigned int disposition : 8;unsigned int type : 8;};
struct _FFAD9CD714E6EDB3A8033A5FCDD84734 {uint64_t address;unsigned int deallocate : 8;unsigned int copy : 8;unsigned int pad1 : 8;unsigned int type : 8;mach_msg_size_t size;};
struct netsnmp_oid_stash_save_info_s { char *token;netsnmp_oid_stash_node **root;NetSNMPStashDump *dumpfn;};
struct memory_object_perf_info {memory_object_cluster_size_t cluster_size;boolean_t may_cache;};
struct __attribute__((packed)) __attribute__((aligned(2))) HFSPlusAttrForkData {u_int32_t recordType;u_int32_t reserved;HFSPlusForkData theFork;};
struct __attribute__((packed)) nd_neighbor_solicit {struct icmp6_hdr nd_ns_hdr;struct in6_addr nd_ns_target;};
typedef void vm_range_recorder_t(task_t, void *, unsigned int type, vm_range_t *, unsigned int);
struct ipc_info_tree_name {ipc_info_name_t iitn_name;mach_port_name_t iitn_lchild;mach_port_name_t iitn_rchild;};
struct __attribute__((packed)) nd_neighbor_advert {struct icmp6_hdr nd_na_hdr;struct in6_addr nd_na_target;};
struct POLICYQUALINFO_st {ASN1_OBJECT *pqualid;union POLICYQUALINFO_st___E7597F3F5DDB1DDEEAC7773A1D67D4FA d;};
struct appletalk_fdinfo {struct proc_fileinfo pfi;struct appletalk_info appletalkinfo;};
struct group_source_req {uint32_t gsr_interface;struct sockaddr_storage gsr_group;struct sockaddr_storage gsr_source;};
struct __attribute__((packed)) nd_router_advert {struct icmp6_hdr nd_ra_hdr;u_int32_t nd_ra_reachable;u_int32_t nd_ra_retransmit;};
struct proc_taskallinfo {struct proc_bsdinfo pbsd;struct proc_taskinfo ptinfo;};
struct STORE_OBJECT_st {STORE_OBJECT_TYPES type;union STORE_OBJECT_st___78662AA53663BCB8AAE8916B78AF8CFA data;};
struct nlm4_unlockargs {netobj cookie;struct nlm4_lock alock;};
struct old_opi_cache_s {u_char *data;WriteMethod *write_method;};
struct fvmlib_command {uint32_t cmd;uint32_t cmdsize;struct fvmlib fvmlib;};
struct __attribute__((packed)) icmp6_nodeinfo {struct icmp6_hdr icmp6_ni_hdr;u_int8_t icmp6_ni_nonce[8];};
struct nfs_filehandle {uint32_t nfh_len;struct nfs_exphandle nfh_xh;unsigned char nfh_fid[112];unsigned char *nfh_fhp;};
struct nlm4_shareargs {netobj cookie;nlm4_share share;int reclaim;};
struct nlm_unlockargs {netobj cookie;struct nlm_lock alock;};
struct __msfilterreq {uint32_t msfr_ifindex;uint32_t msfr_fmode;uint32_t msfr_nsrcs;uint32_t __msfr_align;struct sockaddr_storage msfr_group;struct sockaddr_storage *msfr_srcs;};
struct _ipfw_insn_sa {ipfw_insn o;struct sockaddr_in sa;};
struct _xmlXPathType { xmlChar *name;xmlXPathConvertFunc func;};
struct dylib_command {uint32_t cmd;uint32_t cmdsize;struct dylib dylib;};
struct getquota_rslt {gqr_status status;union getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B getquota_rslt_u;};
struct nlm4_cancargs {netobj cookie;int block;int exclusive;struct nlm4_lock alock;};
struct nlm4_lockargs {netobj cookie;int block;int exclusive;struct nlm4_lock alock;int reclaim;int state;};
struct nlm4_testargs {netobj cookie;int exclusive;struct nlm4_lock alock;};
struct nlm4_testrply {nlm4_stats stat;union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65 nlm4_testrply_u;};
struct nlm_shareargs {netobj cookie;nlm_share share;int reclaim;};
struct pkcs12_bag_st {ASN1_OBJECT *type;union pkcs12_bag_st___040857FDBC76680A083043065CFE20BF value;};
struct rpc_signature {struct rpc_routine_descriptor rd;struct rpc_routine_arg_descriptor rad[1];};
struct vm_read_entry {vm_address_t address;vm_size_t size;};
struct klm_testrply {klm_stats stat;union klm_testrply___40F9D261D31BF2147C1606393BAB8476 klm_testrply_u;};
struct nlm4_testres {netobj cookie;nlm4_testrply stat;};
struct nlm_cancargs {netobj cookie;int block;int exclusive;struct nlm_lock alock;};
struct nlm_lockargs {netobj cookie;int block;int exclusive;struct nlm_lock alock;int reclaim;int state;};
struct nlm_testargs {netobj cookie;int exclusive;struct nlm_lock alock;};
struct nlm_testrply {nlm_stats stat;union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE nlm_testrply_u;};
struct iconv_hooks {iconv_unicode_char_hook uc_hook;iconv_wide_char_hook wc_hook;void *data;};
struct in_aliasreq {char ifra_name[16];struct sockaddr_in ifra_addr;struct sockaddr_in ifra_broadaddr;struct sockaddr_in ifra_mask;u_int32_t ifra_unused;};
struct kqueue_info {struct vinfo_stat kq_stat;uint32_t kq_state;uint32_t rfu_1;};
struct ldap_conncb {ldap_conn_add_f *lc_add;ldap_conn_del_f *lc_del;void *lc_arg;};
struct __attribute__((packed)) nd_redirect {struct icmp6_hdr nd_rd_hdr;struct in6_addr nd_rd_target;struct in6_addr nd_rd_dst;};
struct nlm_testres {netobj cookie;nlm_testrply stat;};
struct pcap_pkthdr {struct timeval ts;bpf_u_int32 caplen;bpf_u_int32 len;};
struct psem_fdinfo {struct proc_fileinfo pfi;struct psem_info pseminfo;};
struct un_sockinfo {uint64_t unsi_conn_so;uint64_t unsi_conn_pcb;union un_sockinfo___AC5844E0938FE50647D9B156445EFB6F unsi_addr;union un_sockinfo___AC5844E0938FE50647D9B156445EFB6F unsi_caddr;};
struct __attribute__((packed)) ip6_rthdr0 {u_int8_t ip6r0_nxt;u_int8_t ip6r0_len;u_int8_t ip6r0_type;u_int8_t ip6r0_segleft;u_int8_t ip6r0_reserved;u_int8_t ip6r0_slmap[3];struct in6_addr ip6r0_addr[1];};
struct reply_body {enum reply_stat rp_stat;union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC ru;};
struct snmp_alarm {struct timeval t;unsigned int flags;unsigned int clientreg;struct timeval t_last;struct timeval t_next;void *clientarg;SNMPAlarmCallback *thecallback;struct snmp_alarm *next;};
struct vnode_info {struct vinfo_stat vi_stat;int vi_type;int vi_pad;fsid_t vi_fsid;};
struct ether_arp {struct arphdr ea_hdr;u_char arp_sha[6];u_char arp_spa[4];u_char arp_tha[6];u_char arp_tpa[4];};
struct group_req {uint32_t gr_interface;struct sockaddr_storage gr_group;};
struct icmp6stat {u_quad_t icp6s_error;u_quad_t icp6s_canterror;u_quad_t icp6s_toofreq;u_quad_t icp6s_outhist[256];u_quad_t icp6s_badcode;u_quad_t icp6s_tooshort;u_quad_t icp6s_checksum;u_quad_t icp6s_badlen;u_quad_t icp6s_reflect;u_quad_t icp6s_inhist[256];u_quad_t icp6s_nd_toomanyopt;struct icmp6errstat icp6s_outerrhist;u_quad_t icp6s_pmtuchg;u_quad_t icp6s_nd_badopt;u_quad_t icp6s_badns;u_quad_t icp6s_badna;u_quad_t icp6s_badrs;u_quad_t icp6s_badra;u_quad_t icp6s_badredirect;};
struct kauth_acl {u_int32_t acl_entrycount;u_int32_t acl_flags;struct kauth_ace acl_ace[1];};
struct pipe_info {struct vinfo_stat pipe_stat;uint64_t pipe_handle;uint64_t pipe_peerhandle;int pipe_status;int rfu_1;};
struct pshm_info {struct vinfo_stat pshm_stat;uint64_t pshm_mappaddr;char pshm_name[1024];};
struct ypreq_xfr {ypmap_parms map_parms;u_int transid;u_int prog;u_int port;};
struct pkcs7_st {unsigned char *asn1;long long length;int state;int detached;ASN1_OBJECT *type;union pkcs7_st___C4161349F87321B4281B96BCD451F4DB d;};
struct tcpiphdr {struct ipovly ti_i;struct tcphdr ti_t;};
struct udpiphdr {struct ipovly ui_i;struct udphdr ui_u;};
struct __attribute__((packed)) ip6_hdr {union ip6_hdr___55051B7F048FF6C7BE508169AD51FCBE ip6_ctlun;struct in6_addr ip6_src;struct in6_addr ip6_dst;};
struct __attribute__((packed)) mld_hdr {struct icmp6_hdr mld_icmp6_hdr;struct in6_addr mld_addr;};
struct rpc_err {enum clnt_stat re_status;union rpc_err___1E28E71970EF2834FCFCF0531E4A2FC1 ru;};
struct ranlib {union ranlib___D365164107DBB2F7587637CCBEC7897F ran_un;off_t ran_off;};
struct sastat {u_int32_t spi;u_int32_t created;struct sadb_lifetime lft_c;};
struct term {TERMTYPE type;short Filedes;struct termios Ottyb;struct termios Nttyb;int _baudrate;char *_termname;};
struct __attribute__((packed)) llc {u_int8_t llc_dsap;u_int8_t llc_ssap;union llc___94526051AE93F16537B4BA3D9839A03C llc_un;};
union ypresponse___6D34D2F64A3B31777223FA377120CA09 {ypresp_val yp_resp_valtype;ypresp_key_val yp_resp_key_valtype;ypmap_parms yp_resp_map_parmstype;};
union yprequest___6FDF785020AAFE35EF4D4B0B11050AAA {ypreq_key yp_req_keytype;ypreq_nokey yp_req_nokeytype;ypmap_parms yp_req_map_parmstype;};
struct _19986235E824B34A0D641661B11CD27D {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;};
struct _23464681D0D095F096FB79A1E66062AF {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;};
struct _2A4BA455395BF41F2F254FCA2AA74280 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t member;mach_port_name_t after;};
struct _3199818696990377AE21FB32F85B31D8 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_name_t pset;};
struct _4BA0F1DBE33A7FC0F8851313161BDC9C {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t old_name;mach_port_name_t new_name;};
struct _5567FEF96CECDEB28576E12650BB4F71 {mach_msg_header_t Head;NDR_record_t NDR;int flavor;mach_msg_type_number_t info_outCnt;};
struct _6825248A56C99A2E2B32FCEC421A9DAF {int xp_sock;unsigned short xp_port;struct _6825248A56C99A2E2B32FCEC421A9DAF__xp_ops *xp_ops;int xp_addrlen;struct sockaddr_in xp_raddr;struct opaque_auth xp_verf;caddr_t xp_p1;caddr_t xp_p2;};
struct _940BEB7FDCEBF6BD2D78705CDCB7BC00 {mach_msg_header_t Head;NDR_record_t NDR;int flavor;mach_msg_type_number_t old_stateCnt;};
struct _9AB293AD14E7E28F8D88B77C9D755114 {mach_msg_header_t Head;NDR_record_t NDR;mach_msg_type_number_t host_nameOffset;mach_msg_type_number_t host_nameCnt;char host_name[80];mach_msg_type_number_t port_nameOffset;mach_msg_type_number_t port_nameCnt;char port_name[80];};
struct _9ADB6D801CB74636DD3BB8128AE6A17C {mach_msg_header_t Head;NDR_record_t NDR;mach_port_right_t right;};
struct _9D47920389E792E7BC941BE34CEE9E53 {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t basepc;vm_address_t boundspc;};
struct _AB89E1C42AC04654AD793083A62D1A9F {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t info;};
struct _CD97E842BE97226AEDD8FA0499E21FED {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t routine_entry_pt;int routine_number;};
struct _E0DB54FB1236B40874C7451A4BD28FF5 {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;};
struct _F9A7ED8F42D8CCD77CCEA18A32D3B2AC {char *name;uint16_t dnstype;uint16_t dnsclass;uint32_t ttl;union _F9A7ED8F42D8CCD77CCEA18A32D3B2AC___ACCCA089A96433C3C2E2A191C0A26330 data;};
typedef int (*slapi_compute_callback_t)(computed_attr_context *c, char *type, Slapi_Entry *e, slapi_compute_output_t outputfn);
struct __darwin_mcontext_avx32 {struct __darwin_i386_exception_state __es;struct __darwin_i386_thread_state __ss;struct __darwin_i386_avx_state __fs;};
struct __darwin_mcontext_avx64 {struct __darwin_x86_exception_state64 __es;struct __darwin_x86_thread_state64 __ss;struct __darwin_x86_avx_state64 __fs;};
struct memory_object_attr_info {memory_object_copy_strategy_t copy_strategy;memory_object_cluster_size_t cluster_size;boolean_t may_cache_object;boolean_t temporary;};
struct __darwin_mcontext32 {struct __darwin_i386_exception_state __es;struct __darwin_i386_thread_state __ss;struct __darwin_i386_float_state __fs;};
struct __darwin_mcontext64 {struct __darwin_x86_exception_state64 __es;struct __darwin_x86_thread_state64 __ss;struct __darwin_x86_float_state64 __fs;};
struct __attribute__((packed)) nd_opt_prefix_info {u_int8_t nd_opt_pi_type;u_int8_t nd_opt_pi_len;u_int8_t nd_opt_pi_prefix_len;u_int8_t nd_opt_pi_flags_reserved;u_int32_t nd_opt_pi_valid_time;u_int32_t nd_opt_pi_preferred_time;u_int32_t nd_opt_pi_reserved2;struct in6_addr nd_opt_pi_prefix;};
struct st_dynamic_MEM_fns {dyn_MEM_malloc_cb malloc_cb;dyn_MEM_realloc_cb realloc_cb;dyn_MEM_free_cb free_cb;};
struct _TidyInputSource {void *sourceData;TidyGetByteFunc getByte;TidyUngetByteFunc ungetByte;TidyEOFFunc eof;};
struct __attribute__((packed)) icmp6_namelookup {struct icmp6_hdr icmp6_nl_hdr;u_int8_t icmp6_nl_nonce[8];int32_t icmp6_nl_ttl;};
struct __semid_ds_new {struct ipc_perm sem_perm;__int32_t sem_base;unsigned short sem_nsems;time_t sem_otime;__int32_t sem_pad1;time_t sem_ctime;__int32_t sem_pad2;__int32_t sem_pad3[4];};
struct _xlinkHandler {xlinkSimpleLinkFunk simple;xlinkExtendedLinkFunk extended;xlinkExtendedLinkSetFunk set;};
struct kauth_filesec {u_int32_t fsec_magic;guid_t fsec_owner;guid_t fsec_group;struct kauth_acl fsec_acl;};
struct bootp_packet {struct ip bp_ip;struct udphdr bp_udp;struct bootp bp_bootp;};
struct __attribute__((packed)) rr_pco_match {u_int8_t rpm_code;u_int8_t rpm_len;u_int8_t rpm_ordinal;u_int8_t rpm_matchlen;u_int8_t rpm_minlen;u_int8_t rpm_maxlen;u_int16_t rpm_reserved;struct in6_addr rpm_prefix;};
struct nfs_dlmount {struct sockaddr_in ndm_saddr;char ndm_host[256];char *ndm_path;char *ndm_mntfrom;u_int32_t ndm_nfsv3;u_int32_t ndm_sotype;u_int32_t ndm_fhlen;u_char ndm_fh[64];};
struct if_msghdr2 {u_short ifm_msglen;u_char ifm_version;u_char ifm_type;int ifm_addrs;int ifm_flags;u_short ifm_index;int ifm_snd_len;int ifm_snd_maxlen;int ifm_snd_drops;int ifm_timer;struct if_data64 ifm_data;};
struct __attribute__((packed)) rr_pco_use {u_int8_t rpu_uselen;u_int8_t rpu_keeplen;u_int8_t rpu_ramask;u_int8_t rpu_raflags;u_int32_t rpu_vltime;u_int32_t rpu_pltime;u_int32_t rpu_flags;struct in6_addr rpu_prefix;};
struct tokenstr {u_char id;u_char *data;size_t len;union tokenstr___8AC0922476273DFEC243552765DE6A61 tt;};
struct CURLMsg {CURLMSG msg;CURL *easy_handle;union CURLMsg___925FB63D6E9926DD49F09E35066BE965 data;};
struct pstats {struct rusage p_ru;struct rusage p_cru;struct pstats__uprof p_prof;struct timeval p_start;};
union icmp___B8975A790A59AA025FBB0015D5EF41D8 {struct icmp___B8975A790A59AA025FBB0015D5EF41D8__id_ts id_ts;struct icmp___B8975A790A59AA025FBB0015D5EF41D8__id_ip id_ip;struct icmp_ra_addr id_radv;u_int32_t id_mask;char id_data[1];};
struct _065AA4F4B3DDB89000C8C945CAC4CC2E {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t kernel_versionOffset;mach_msg_type_number_t kernel_versionCnt;char kernel_version[512];};
struct _0E6CC5D607D299E0B4EAC6FD047D8F10 {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t source_address;vm_size_t size;vm_address_t dest_address;};
struct _1A15CD9E076CE95EED0CB242AD23A728 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_urefs_t refs;};
struct _211858A17FC3AA3AF7FB370462C716CC {mach_msg_header_t not_header;NDR_record_t NDR;mach_port_name_t not_port;mach_msg_format_0_trailer_t trailer;};
struct _268E73D492E0AA9543C2DAE749E4E286 {mach_msg_header_t Head;NDR_record_t NDR;mach_msg_type_number_t processor_cmdCnt;integer_t processor_cmd[12];};
struct _279A7D6BAE671E5D078D50BF79E5C443 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t clock_attrCnt;int clock_attr[1];};
struct _2C24181259AD7238BB41D98E89920B4F {mach_msg_header_t Head;NDR_record_t NDR;int flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[144];};
struct _2D63240515AC7C828AB4C7B058DC34F3 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_seqno_t seqno;};
struct _3997483AC20F7907AE665D7DB5ACE57D {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t infoCnt;int info[32];};
struct _4203C03DDEA75B12CEED795269F3A503 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_msg_type_name_t msgt_name;};
struct _479E1DE8ADCB55C92744EDE61D84AC3C {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_type_t ptype;};
struct _50450166C1D5B7E6B5FADC2BC93CD3BD {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_name_t name;};
struct _5243BF46A737224FC5E0495E8389B9A4 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_right_t right;mach_port_qos_t qos;};
struct _5694E020026D0F35B79D3FDB301355DE {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;};
struct _69D31FA9CDD4718FF5B7AF641C4535B7 {mach_msg_header_t Head;NDR_record_t NDR;clock_flavor_t flavor;mach_msg_type_number_t clock_attrCnt;int clock_attr[1];};
struct _6FABFC1284DD1437D43532E08AE85D17 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t boot_infoOffset;mach_msg_type_number_t boot_infoCnt;char boot_info[4096];};
struct _71210C31999B47ECFCA79A4496892A9D {mach_msg_bits_t msgh_bits;mach_msg_size_t msgh_size;mach_port_t msgh_remote_port;mach_port_t msgh_local_port;mach_msg_size_t msgh_reserved;mach_msg_id_t msgh_id;};
struct _73C487D09BD8877E84E65868850A4480 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;ledger_item_t balance;ledger_item_t limit;};
struct _740196A4AE4F0F1C0D656C4EF0AFE809 {mach_msg_header_t Head;NDR_record_t NDR;thread_state_flavor_t flavor;mach_msg_type_number_t old_stateCnt;};
struct _75304CCD3C967214A8BD283A9F6A93D0 {mach_msg_header_t Head;NDR_record_t NDR;host_flavor_t flavor;mach_msg_type_number_t host_info_outCnt;};
struct _75CD40B42DA3FE652B2050998764C1EA {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;};
struct _7B9D4C5204CA928D4D62EAAC4140ED21 {mach_msg_header_t Head;NDR_record_t NDR;host_flavor_t flavor;mach_msg_type_number_t host_info64_outCnt;};
struct _7E69CF2F21F2DE86821941D7ACE3ABBA {mach_msg_header_t Head;NDR_record_t NDR;processor_set_flavor_t flavor;mach_msg_type_number_t info_outCnt;};
struct _892873E46F8F240B706CD4D8B4C0EE69 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_vm_address_t context;};
struct _8BAB52A5AF78D0C10584D69C8CD7C023 {mach_msg_header_t not_header;NDR_record_t NDR;mach_msg_type_number_t not_count;mach_msg_format_0_trailer_t trailer;};
struct _99892F497716B18479AFC6F93A6376AD {mach_msg_header_t Head;NDR_record_t NDR;processor_flavor_t flavor;mach_msg_type_number_t processor_info_outCnt;};
struct _9FBED4CF5043C1481558BDE489C7B3DA {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_purgable_t control;int state;};
struct _A8165CB9074F0252F5387BFE013515BC {mach_msg_header_t Head;NDR_record_t NDR;task_flavor_t flavor;mach_msg_type_number_t task_info_outCnt;};
struct _AB09096FC22418DF5FF078E5EEC0B812 {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;int flags;};
struct _ACB9639845DE66FD3FA84A89BA11A6C6 {mach_msg_header_t Head;NDR_record_t NDR;thread_flavor_t flavor;mach_msg_type_number_t thread_info_outCnt;};
struct _B0130559E5806B7D1758D14999BC33AE {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_address_t data;};
struct _B346CF55E253733CEEA9A9F57C8BD312 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_right_t right;};
struct _B84095E180EBE617859A8545EC2805FC {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_mscount_t mscount;};
struct _DB68657B2CF3361C93E3D336E930DDB3 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t versionOffset;mach_msg_type_number_t versionCnt;char version[80];};
struct _F11203120C87D682B8E6D27123FE2347 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t address;};
struct _F1773A35038DB66F062B2D1DBF85E45A {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_rights_t srights;};
struct _F49B3D681D6431C8260F2C014755700B {mach_msg_header_t Head;NDR_record_t NDR;mach_port_right_t right;mach_port_name_t name;};
struct _FEDEB051CE08D897834232829C0C3BAE {mach_msg_header_t Head;NDR_record_t NDR;clock_flavor_t flavor;mach_msg_type_number_t clock_attrCnt;};
struct netsnmp_table_data_set_storage_s {unsigned int column;char writable;Netsnmp_Value_Change_Ok *change_ok_fn;void *my_change_data;u_char type;union netsnmp_table_data_set_storage_s___954B107E84134B44758BAB124B2F79B4 data;u_long data_len;struct netsnmp_table_data_set_storage_s *next;};
struct netsnmp_data_list_saveinfo_s {netsnmp_data_list **datalist; char *type; char *token;Netsnmp_Save_List_Data *data_list_save_ptr;Netsnmp_Read_List_Data *data_list_read_ptr;Netsnmp_Free_List_Data *data_list_free_ptr;};
struct __darwin_ucontext {int uc_onstack;__darwin_sigset_t uc_sigmask;struct __darwin_sigaltstack uc_stack;struct __darwin_ucontext *uc_link;__darwin_size_t uc_mcsize;struct __darwin_mcontext64 *uc_mcontext;struct __darwin_mcontext64 __mcontext_data;};
struct iconv_fallbacks {iconv_unicode_mb_to_uc_fallback mb_to_uc_fallback;iconv_unicode_uc_to_mb_fallback uc_to_mb_fallback;iconv_wchar_mb_to_wc_fallback mb_to_wc_fallback;iconv_wchar_wc_to_mb_fallback wc_to_mb_fallback;void *data;};
typedef kern_return_t memory_reader_t(task_t remote_task, vm_address_t remote_address, vm_size_t size, void **local_memory);
typedef BOOL (*pConfigDSNWFunc)(HWND hwndParent, WORD fRequest, LPCWSTR lpszDriver, LPCWSTR lpszAttributes);
struct rpc_subsystem {void *reserved;mach_msg_id_t start;mach_msg_id_t end;unsigned int maxsize;vm_address_t base_addr;struct rpc_routine_descriptor routine[1];struct rpc_routine_arg_descriptor arg_descriptor[1];};
struct ssl3_state_st {long long flags;int delay_buf_pop_ret;unsigned char read_sequence[8];unsigned char read_mac_secret[64];unsigned char write_sequence[8];unsigned char write_mac_secret[64];unsigned char server_random[32];unsigned char client_random[32];int need_empty_fragments;int empty_fragment_done;SSL3_BUFFER rbuf;SSL3_BUFFER wbuf;SSL3_RECORD rrec;SSL3_RECORD wrec;unsigned char alert_fragment[2];unsigned int alert_fragment_len;unsigned char handshake_fragment[4];unsigned int handshake_fragment_len;unsigned int wnum;int wpend_tot;int wpend_type;int wpend_ret; unsigned char *wpend_buf;EVP_MD_CTX finish_dgst1;EVP_MD_CTX finish_dgst2;int change_cipher_spec;int warn_alert;int fatal_alert;int alert_dispatch;unsigned char send_alert[2];int renegotiate;int total_renegotiations;int num_renegotiations;int in_read_app_data;struct ssl3_state_st___42F7BD6B27181EF8C23D75FB26BE0959 tmp;unsigned char previous_client_finished[64];unsigned char previous_client_finished_len;unsigned char previous_server_finished[64];unsigned char previous_server_finished_len;int send_connection_binding;};
struct __attribute__((packed)) nd_opt_rdnss {u_int8_t nd_opt_rdnss_type;u_int8_t nd_opt_rdnss_len;u_int16_t nd_opt_rdnss_reserved;u_int32_t nd_opt_rdnss_lifetime;struct in6_addr nd_opt_rdnss_addr[1];};
struct auditinfo {au_id_t ai_auid;au_mask_t ai_mask;au_tid_t ai_termid;au_asid_t ai_asid;};
struct __attribute__((packed)) rr_result {u_int16_t rrr_flags;u_int8_t rrr_ordinal;u_int8_t rrr_matchedlen;u_int32_t rrr_ifid;struct in6_addr rrr_prefix;};
struct xinpgen {u_int32_t xig_len;u_int xig_count;inp_gen_t xig_gen;so_gen_t xig_sogen;};
struct xunpgen {u_int32_t xug_len;u_int xug_count;unp_gen_t xug_gen;so_gen_t xug_sogen;};
union icmp___115915189B36D486427C31680FC3CC99 {u_char ih_pptr;struct in_addr ih_gwaddr;struct icmp___115915189B36D486427C31680FC3CC99__ih_idseq ih_idseq;int ih_void;struct icmp___115915189B36D486427C31680FC3CC99__ih_pmtu ih_pmtu;struct icmp___115915189B36D486427C31680FC3CC99__ih_rtradv ih_rtradv;};
struct _01CA16396E8E0606C9A9E0F0E20FCF07 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t signature;NDR_record_t NDR;mach_msg_type_number_t port_nameOffset;mach_msg_type_number_t port_nameCnt;char port_name[80];};
struct _088788A38BBC50D48DDABC82065D5C20 {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_behavior_t new_behavior;};
struct _0CA50DA063E662D611776E2530D5C630 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t child_ledger;NDR_record_t NDR;ledger_item_t transfer;};
struct _0E98A572E6852A6395110737D2ACDD5A {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t info_outCnt;integer_t info_out[5];};
struct _0FCB944A5BB18021AD7F056168D15B92 {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;audit_token_t msgh_audit;};
struct _14FA42BC96FAE132F19280844CA95DD9 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t info;NDR_record_t NDR;mach_msg_type_number_t infoCnt;};
struct _1783B4855960E25D5065E02F55E2E263 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_port_qos_t qos;mach_port_name_t name;};
struct _207271BEEF35C1E72B41BFA669B8BAC6 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t data;NDR_record_t NDR;mach_msg_type_number_t dataCnt;};
struct _23C7832C1B5305C0EFB6A337D90F166D {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t out_processor_list;NDR_record_t NDR;mach_msg_type_number_t out_processor_listCnt;};
struct _3AD6DCE498BEF9CAF21EEA5EB590F8B6 {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_region_flavor_t flavor;mach_msg_type_number_t infoCnt;};
struct _46F98A3CF815908FB81E03FBB188BF3A {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t port_info_outCnt;integer_t port_info_out[10];};
struct _478A0C5B06F3F085EB929445D74AA112 {mach_msg_header_t Head;NDR_record_t NDR;task_policy_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[16];};
struct _54BD5584F5ADC0EEBB5CC3B97CC9ABCA {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t members;NDR_record_t NDR;mach_msg_type_number_t membersCnt;};
struct _64173B50D5C298666AA1E07EB308B730 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t init_port_set;NDR_record_t NDR;mach_msg_type_number_t init_port_setCnt;};
struct _6B72EC479EB324C93363DBF0210A4E09 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t modules;NDR_record_t NDR;mach_msg_type_number_t modulesCnt;};
struct _6C07615512B7E84BDE41117AEF6DE55F {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t task_list;NDR_record_t NDR;mach_msg_type_number_t task_listCnt;};
struct _7076454C220BCB0A4BC98C4D7957D8C3 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t names;mach_msg_ool_descriptor_t types;NDR_record_t NDR;mach_msg_type_number_t namesCnt;mach_msg_type_number_t typesCnt;};
struct _72CFD36915A4C95088F1A8826EB17983 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t task_info_outCnt;integer_t task_info_out[32];};
struct _77044CD3286DFFD089401BC1A550C0B3 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_right_t right;mach_port_delta_t delta;};
struct _776B37716F2A203FA8D593ECE8B979C2 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t thread_list;NDR_record_t NDR;mach_msg_type_number_t thread_listCnt;};
struct _7BD86F81607C7D3E2D088DDB92740D0D {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t host_info64_outCnt;integer_t host_info64_out[256];};
struct _82BD275F6039C166EF4DD9B4F2A9C114 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t host_info_outCnt;integer_t host_info_out[15];};
struct _87460818A9C42CAAD7BB4BC88EB3F9D9 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_flavor_t flavor;mach_msg_type_number_t port_info_outCnt;};
struct _89FEC8E87EEDD00C0CF28D288AB7DB30 {mach_msg_header_t Head;NDR_record_t NDR;task_flavor_t flavor;mach_msg_type_number_t task_info_inCnt;integer_t task_info_in[32];};
struct _8B6FDD4F28EF84224B001DC98A6CCF9E {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t target_address;vm_prot_t cur_protection;vm_prot_t max_protection;};
struct _8E8217BBADE0ADE8EA72A465AE8DB052 {mach_msg_header_t Head;NDR_record_t NDR;thread_policy_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;boolean_t get_default;};
struct _9487B923D69225998A44A53C15C58453 {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;natural_t nesting_depth;mach_msg_type_number_t infoCnt;};
struct _9542197A1301620A60E097220E793D31 {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_inherit_t new_inheritance;};
struct _9BD15C2DE3B549B6E5D91AD4D5FB2472 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t signature;mach_msg_port_descriptor_t port_id;NDR_record_t NDR;mach_msg_type_number_t port_nameOffset;mach_msg_type_number_t port_nameCnt;char port_name[80];};
struct _9CD45B6D299FC36A745AB895FED2FFAE {mach_msg_header_t Head;NDR_record_t NDR;task_policy_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;boolean_t get_default;};
struct _A474581121662292E5F04EE46D9A30FE {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_sync_t sync_flags;};
struct _B01B4E9250F885241409748218B2C105 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t pages;NDR_record_t NDR;mach_msg_type_number_t pagesCnt;};
struct _B1FA16DA0CC571429FF694D2198EB26D {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t processor_sets;NDR_record_t NDR;mach_msg_type_number_t processor_setsCnt;};
struct _B3220D9486325F8BA63885498B936915 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t names;mach_msg_ool_descriptor_t info;NDR_record_t NDR;mach_msg_type_number_t namesCnt;mach_msg_type_number_t infoCnt;};
struct _B422E43E2D6C3DFAD9728BE968F369BB {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t lockgroup_info;NDR_record_t NDR;mach_msg_type_number_t lockgroup_infoCnt;};
struct _BD234ABF5512865B2381E7712BF88565 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t thread_info_outCnt;integer_t thread_info_out[12];};
struct _C2CBDBAA53DBE4CD2BF833027FA299D5 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t default_manager;NDR_record_t NDR;memory_object_cluster_size_t cluster_size;};
struct _CAE54129DDC456E19A5898FF69B86D62 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t ledger_ledger;NDR_record_t NDR;ledger_item_t transfer;};
struct _D01A4AC644F6B88C742A307AE9CB3F5A {mach_msg_header_t Head;NDR_record_t NDR;thread_state_flavor_t flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[144];};
struct _D0AB9F48B0077248C9C221F011C15B93 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t act_list;NDR_record_t NDR;mach_msg_type_number_t act_listCnt;};
struct _E3188AF9666AE21995C94F310B376FC6 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t poly;NDR_record_t NDR;mach_port_name_t name;};
struct _E6DD5EF71C59CDBBC01C1CDDA746F1DC {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;vm_page_info_flavor_t flavor;mach_msg_type_number_t infoCnt;};
struct _EBC9A6B10C6BC0782A5CEC3196C31D82 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;vm_region_flavor_t flavor;mach_msg_type_number_t infoCnt;};
struct _F1BB640A69E4C9C26809E32C99FD444E {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;int flavor;mach_msg_type_number_t new_stateCnt;natural_t new_state[144];};
struct _F38A67955B73283DD9B66EE2B15E7106 {mach_msg_header_t Head;NDR_record_t NDR;mach_vm_address_t address;natural_t nesting_depth;mach_msg_type_number_t infoCnt;};
struct _F4F9A6DCA893D5DB6F32B9C415A8FCA2 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t old_stateCnt;natural_t old_state[144];};
struct _FB4BFEF078574026C3C8614BADD24D68 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t emulation_vector;NDR_record_t NDR;int vector_start;mach_msg_type_number_t emulation_vectorCnt;};
struct _FC28B28F509CCD1DBFC66983DF428597 {mach_msg_header_t Head;NDR_record_t NDR;thread_policy_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[16];};
typedef BOOL (*pConfigDriverWFunc)(HWND hwndParent, WORD fRequest, LPCWSTR lpszDriver, LPCWSTR lpszArgs, LPWSTR lpszMsg, WORD cbMsgMax, WORD *pcbMsgOut);
union HFSPlusAttrRecord {u_int32_t recordType;HFSPlusAttrInlineData inlineData;HFSPlusAttrData attrData;HFSPlusAttrForkData forkData;HFSPlusAttrExtents overflowExtents;};
struct _xsltElemPreComp {xsltElemPreCompPtr next;xsltStyleType type;xsltTransformFunction func;xmlNodePtr inst;xsltElemPreCompDeallocator free;};
struct auditinfo_addr {au_id_t ai_auid;au_mask_t ai_mask;au_tid_addr_t ai_termid;au_asid_t ai_asid;au_asflgs_t ai_flags;};
struct ipc_info_name {mach_port_name_t iin_name;integer_t iin_collision;mach_port_type_t iin_type;mach_port_urefs_t iin_urefs;natural_t iin_object;natural_t iin_next;natural_t iin_hash;};
struct mig_subsystem {mig_server_routine_t server;mach_msg_id_t start;mach_msg_id_t end;mach_msg_size_t maxsize;vm_address_t reserved;mig_routine_descriptor routine[1];};
struct sockaddr_in6 {__uint8_t sin6_len;sa_family_t sin6_family;in_port_t sin6_port;__uint32_t sin6_flowinfo;struct in6_addr sin6_addr;__uint32_t sin6_scope_id;};
struct auditpinfo {pid_t ap_pid;au_id_t ap_auid;au_mask_t ap_mask;au_tid_t ap_termid;au_asid_t ap_asid;};
union in6_ifreq___7D64D84BD828AED8BD33AAA6A53121E7 {struct sockaddr_in6 ifru_addr;struct sockaddr_in6 ifru_dstaddr;int ifru_flags;int ifru_flags6;int ifru_metric;caddr_t ifru_data;struct in6_addrlifetime ifru_lifetime;struct in6_ifstat ifru_stat;struct icmp6_ifstat ifru_icmp6stat;u_int32_t ifru_scope_id[16];};
struct _048C5B8CD9C97BF8D36FBC1C859B011A {mach_msg_header_t Head;NDR_record_t NDR;exception_type_t exception;mach_msg_type_number_t codeCnt;integer_t code[2];int flavor;mach_msg_type_number_t old_stateCnt;natural_t old_state[144];};
struct _07330457B1A8E241B31DE41A5C59B575 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t host;NDR_record_t NDR;mach_msg_type_number_t info_outCnt;integer_t info_out[5];};
struct _127ADBDA39FF0AF10F74B8734D022F36 {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[16];boolean_t get_default;};
struct _1FFFE05A05E2172C218675AE0705335F {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t response_data;mach_msg_ool_descriptor_t log_data;NDR_record_t NDR;mach_msg_type_number_t response_dataCnt;mach_msg_type_number_t log_dataCnt;kern_return_t op_result;};
struct _298BF45BC869BFBDF761AF6C0543DC18 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t host;NDR_record_t NDR;mach_msg_type_number_t processor_info_outCnt;integer_t processor_info_out[12];};
struct _29E38C6493B75A6FA6817975AF03D4C0 {mach_msg_header_t Head;NDR_record_t NDR;policy_t policy;mach_msg_type_number_t baseCnt;integer_t base[5];boolean_t set_limit;boolean_t change;};
struct _2C6E018EEF72F12BBEAF7059A87F0DBD {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t task;NDR_record_t NDR;vm_address_t address;vm_size_t size;int flags;};
struct _2FBFFD789A2C809930720784B8820AE2 {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_machine_attribute_t attribute;vm_machine_attribute_val_t value;};
struct _456B529FC136F2DC55D26FBF7B75F342 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t data;NDR_record_t NDR;vm_address_t address;mach_msg_type_number_t dataCnt;};
struct _6C8E198051B85F433C7E9E257C72A042 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t objects;NDR_record_t NDR;vm_info_region_t region;mach_msg_type_number_t objectsCnt;};
struct _8EE2A07E001F320FD50590FBAE1390E6 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t data;NDR_record_t NDR;mach_vm_address_t address;mach_msg_type_number_t dataCnt;};
struct _960F984C3AE962B8F9E63C3D54374EB6 {mach_msg_header_t Head;NDR_record_t NDR;policy_t policy;mach_msg_type_number_t baseCnt;integer_t base[5];boolean_t set_limit;};
struct _A1BDF64247D778F13F19FE58DA07510E {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t out_processor_info;NDR_record_t NDR;natural_t out_processor_count;mach_msg_type_number_t out_processor_infoCnt;};
struct _BA1BAA97A85BF93D870BFCA3692BE7F3 {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;audit_token_t msgh_audit;mach_vm_address_t msgh_context;};
struct _BBF0DF368E56DACC45223BCB3DEA73E4 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_ports_descriptor_t ledgers;NDR_record_t NDR;mach_msg_type_number_t ledgersCnt;boolean_t inherit_memory;};
struct _D09842556D06A2DF198ED28371C9FC24 {mach_msg_header_t Head;NDR_record_t NDR;mach_port_name_t name;mach_port_flavor_t flavor;mach_msg_type_number_t port_infoCnt;integer_t port_info[10];};
struct _D9B0ADBD00F5F5522FB9AC300CCD391E {mach_msg_header_t Head;NDR_record_t NDR;processor_set_flavor_t flavor;mach_msg_type_number_t policy_infoCnt;integer_t policy_info[5];boolean_t change;};
struct _DAECF1BBBEC63DCCC1C5BA594BE2FE4F {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t objects;NDR_record_t NDR;vm_info_region_64_t region;mach_msg_type_number_t objectsCnt;};
struct _DAF19F87D18289B2FEB9E5CF85C90F9A {mach_msg_header_t Head;NDR_record_t NDR;vm_address_t address;vm_size_t size;boolean_t set_maximum;vm_prot_t new_protection;};
struct _E9BF538EED9B46D5473DA4650D70F75C {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t table_info;mach_msg_ool_descriptor_t tree_info;NDR_record_t NDR;ipc_info_space_t space_info;mach_msg_type_number_t table_infoCnt;mach_msg_type_number_t tree_infoCnt;};
struct _F406E51A63C11217A91340C33516F88C {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t request_data;NDR_record_t NDR;uint32_t user_log_flags;mach_msg_type_number_t request_dataCnt;};
struct mach_port_status {mach_port_rights_t mps_pset;mach_port_seqno_t mps_seqno;mach_port_mscount_t mps_mscount;mach_port_msgcount_t mps_qlimit;mach_port_msgcount_t mps_msgcount;mach_port_rights_t mps_sorights;boolean_t mps_srights;boolean_t mps_pdrequest;boolean_t mps_nsrequest;natural_t mps_flags;};
struct auditpinfo_addr {pid_t ap_pid;au_id_t ap_auid;au_mask_t ap_mask;au_tid_addr_t ap_termid;au_asid_t ap_asid;au_asflgs_t ap_flags;};
struct dtls1_state_st {unsigned int send_cookie;unsigned char cookie[256];unsigned char rcvd_cookie[256];unsigned int cookie_len;unsigned short r_epoch;unsigned short w_epoch;DTLS1_BITMAP bitmap;DTLS1_BITMAP next_bitmap;unsigned short handshake_write_seq;unsigned short next_handshake_write_seq;unsigned short handshake_read_seq;unsigned char last_write_sequence[8];record_pqueue unprocessed_rcds;record_pqueue processed_rcds;pqueue buffered_messages;pqueue sent_messages;record_pqueue buffered_app_data;unsigned int listen;unsigned int mtu;struct hm_header_st w_msg_hdr;struct hm_header_st r_msg_hdr;struct dtls1_timeout_st timeout;struct timeval next_timeout;unsigned short timeout_duration;unsigned char alert_fragment[2];unsigned int alert_fragment_len;unsigned char handshake_fragment[12];unsigned int handshake_fragment_len;unsigned int retransmitting;unsigned int change_cipher_spec_ok;};
struct in_sockinfo {int insi_fport;int insi_lport;uint64_t insi_gencnt;uint32_t insi_flags;uint32_t insi_flow;uint8_t insi_vflag;uint8_t insi_ip_ttl;uint32_t rfu_1;union in_sockinfo___881D04D8390B0CDBA797F709C012DF83 insi_faddr;union in_sockinfo___881D04D8390B0CDBA797F709C012DF83 insi_laddr;struct in_sockinfo___51C6D8A4577F1D056D30CFC3A0948BCF insi_v4;struct in_sockinfo___8F8B1830DF140CEE3517CFE046A1DD9A insi_v6;};
union ipp_value_u {int integer;char boolean;ipp_uchar_t date[11];struct ipp_value_u___E1A4022D81728FCD57DFF225EC9961C7 resolution;struct ipp_value_u___962D1BBE228906325E858AE60F230356 range;struct ipp_value_u___2EAE0BB3D4A3175EA6C32A3B77B08580 string;struct ipp_value_u___55ACB418F06CBD9C81C19431B78B54E0 unknown;ipp_t *collection;};
struct _26DC3EB05C17544AB8AFD85FB443F277 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t pset;NDR_record_t NDR;policy_t policy;mach_msg_type_number_t baseCnt;integer_t base[5];mach_msg_type_number_t limitCnt;integer_t limit[1];};
struct _2BBFCDCB7AAC56598321865C412EDD95 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t task;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_prot_t desired_access;};
struct _33415C5C79CC87822109F3703B9299D9 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t thread;mach_msg_port_descriptor_t task;NDR_record_t NDR;exception_type_t exception;mach_msg_type_number_t codeCnt;integer_t code[2];};
struct _43EB887A7D5DDC6B5CCC173C2FB6636E {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;vm_address_t address;vm_size_t size;natural_t nesting_depth;mach_msg_type_number_t infoCnt;int info[19];};
struct _4E3803487B5F2E6858C157D0AC2FC93A {mach_msg_header_t Head;NDR_record_t NDR;kern_return_t RetCode;mach_vm_address_t address;mach_vm_size_t size;natural_t nesting_depth;mach_msg_type_number_t infoCnt;int info[19];};
struct _531BFEDFFBC90F9591113261F4F98EF9 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t proto;NDR_record_t NDR;mach_port_right_t right;mach_port_qos_t qos;mach_port_name_t name;};
struct _8109324A5E6FC6C8E3497EBF9ED344C0 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t task;mach_msg_ool_descriptor_t symtab;NDR_record_t NDR;mach_msg_type_number_t nameOffset;mach_msg_type_number_t nameCnt;char name[32];mach_msg_type_number_t symtabCnt;};
struct _83A491C58EE353645DD01424DEA49DDB {mach_msg_trailer_type_t msgh_trailer_type;mach_msg_trailer_size_t msgh_trailer_size;mach_port_seqno_t msgh_seqno;security_token_t msgh_sender;audit_token_t msgh_audit;mach_vm_address_t msgh_context;int msgh_ad;msg_labels_t msgh_labels;};
struct _89FB7E727BDCF83A4F62DE682B7A306A {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t notify;NDR_record_t NDR;mach_port_name_t name;mach_msg_id_t msgid;mach_port_mscount_t sync;};
struct _A5EA39C0CE70DF2015B585156ECF8E0B {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object_name;NDR_record_t NDR;vm_address_t address;vm_size_t size;mach_msg_type_number_t infoCnt;int info[10];};
struct _AF6F394DED458EEBDAD15880C92DFAA7 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_ool_descriptor_t data;NDR_record_t NDR;kmod_t module;kmod_control_flavor_t flavor;mach_msg_type_number_t dataCnt;};
struct _BC7B37D8A6A0C0969EA99CA1E99D995C {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object_name;NDR_record_t NDR;mach_vm_address_t address;mach_vm_size_t size;mach_msg_type_number_t infoCnt;int info[10];};
struct _06E00F3ABE7F060E21CF67B7B214767C {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t src_task;NDR_record_t NDR;vm_address_t target_address;vm_size_t size;vm_address_t mask;int flags;vm_address_t src_address;boolean_t copy;vm_inherit_t inheritance;};
struct _73352B6DCC801F1A038056696B3E491C {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_handlers[32];NDR_record_t NDR;mach_msg_type_number_t masksCnt;exception_mask_t masks[32];exception_behavior_t old_behaviors[32];thread_state_flavor_t old_flavors[32];};
struct _833420E8F4A758B58AE84F5888D3A29B {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t thread;mach_msg_port_descriptor_t task;NDR_record_t NDR;exception_type_t exception;mach_msg_type_number_t codeCnt;integer_t code[2];int flavor;mach_msg_type_number_t old_stateCnt;natural_t old_state[144];};
struct _FB65CC25317C65F4D3C395D38114E663 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t pset;NDR_record_t NDR;policy_t policy;mach_msg_type_number_t baseCnt;integer_t base[5];mach_msg_type_number_t limitCnt;integer_t limit[1];boolean_t change;};
struct _FFDCF6D4903B3C43BBF48445F1564ABC {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t old_handlerss[32];NDR_record_t NDR;mach_msg_type_number_t masksCnt;exception_mask_t masks[32];exception_behavior_t old_behaviors[32];thread_state_flavor_t old_flavors[32];};
struct kmod_info {struct kmod_info *next;int32_t info_version;uint32_t id;char name[64];char version[64];int32_t reference_count;kmod_reference_t *reference_list;vm_address_t address;vm_size_t size;vm_size_t hdr_size;kmod_start_func_t *start;kmod_stop_func_t *stop;};
struct _0EEAE85943931F432FD264390744A4E7 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t parent_task;mach_msg_port_descriptor_t host;mach_msg_ool_ports_descriptor_t ledgers;NDR_record_t NDR;security_token_t sec_token;audit_token_t audit_token;mach_msg_type_number_t ledgersCnt;boolean_t inherit_memory;};
struct _E24E91FD65EFF0F160CA6C71162442DA {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_address_t mask;int flags;memory_object_offset_t offset;boolean_t copy;vm_prot_t cur_protection;vm_prot_t max_protection;vm_inherit_t inheritance;};
struct _F3A38383CE2E0DAC4148785558BAB876 {mach_msg_header_t Head;mach_msg_body_t msgh_body;mach_msg_port_descriptor_t object;NDR_record_t NDR;vm_address_t address;vm_size_t size;vm_address_t mask;int flags;vm_offset_t offset;boolean_t copy;vm_prot_t cur_protection;vm_prot_t max_protection;vm_inherit_t inheritance;};
struct malloc_introspection_t {kern_return_t (*enumerator)(task_t task, void *, unsigned int type_mask, vm_address_t zone_address, memory_reader_t *reader, vm_range_recorder_t *recorder);size_t (*good_size)(malloc_zone_t *zone, size_t size);boolean_t (*check)(malloc_zone_t *zone);void (*print)(malloc_zone_t *zone, boolean_t verbose);void (*log)(malloc_zone_t *zone, void *address);void (*force_lock)(malloc_zone_t *zone);void (*force_unlock)(malloc_zone_t *zone);void (*statistics)(malloc_zone_t *zone, malloc_statistics_t *stats);boolean_t (*zone_locked)(malloc_zone_t *zone);boolean_t (*enable_discharge_checking)(malloc_zone_t *zone);void (*disable_discharge_checking)(malloc_zone_t *zone);void (*discharge)(malloc_zone_t *zone, void *memory);void *enumerate_unavailable_without_blocks;};
struct inpcb {struct _inpcb_list_entry inp_hash;struct in_addr reserved1;struct in_addr reserved2;u_short inp_fport;u_short inp_lport;struct _inpcb_list_entry inp_list;u_int32_t inp_ppcb;u_int32_t inp_pcbinfo;u_int32_t inp_socket;u_char nat_owner;u_int32_t nat_cookie;struct _inpcb_list_entry inp_portlist;u_int32_t inp_phd;inp_gen_t inp_gencnt;int inp_flags;u_int32_t inp_flow;u_char inp_vflag;u_char inp_ip_ttl;u_char inp_ip_p;union inpcb___BD75B87EE766833A3DF9644C7FCC1E00 inp_dependfaddr;union inpcb___61B649B2802E895728C8AA130C15F594 inp_dependladdr;union inpcb___1F3C467F2673A40775B3C04457DCB635 inp_dependroute;struct inpcb___6F13D882517E6D5CBD1B080626F65DC4 inp_depend4;struct inpcb___F2E854D5640579B71C918C53FCA5BF60 inp_depend6;int hash_element;u_int32_t inp_saved_ppcb;u_int32_t inp_sp;u_int32_t reserved[3];};
struct _xmlXPathContext {xmlDocPtr doc;xmlNodePtr node;int nb_variables_unused;int max_variables_unused;xmlHashTablePtr varHash;int nb_types;int max_types;xmlXPathTypePtr types;int nb_funcs_unused;int max_funcs_unused;xmlHashTablePtr funcHash;int nb_axis;int max_axis;xmlXPathAxisPtr axis;xmlNsPtr *namespaces;int nsNr;void *user;int contextSize;int proximityPosition;int xptr;xmlNodePtr here;xmlNodePtr origin;xmlHashTablePtr nsHash;xmlXPathVariableLookupFunc varLookupFunc;void *varLookupData;void *extra; xmlChar *function; xmlChar *functionURI;xmlXPathFuncLookupFunc funcLookupFunc;void *funcLookupData;xmlNsPtr *tmpNsList;int tmpNsNr;void *userData;xmlStructuredErrorFunc error;xmlError lastError;xmlNodePtr debugNode;xmlDictPtr dict;int flags;void *cache;};
struct extern_proc {union extern_proc___27B38CA2FABD237895D38B0302C8FC9B p_un;struct vmspace *p_vmspace;struct sigacts *p_sigacts;int p_flag;char p_stat;pid_t p_pid;pid_t p_oppid;int p_dupfd;caddr_t user_stack;void *exit_thread;int p_debugger;boolean_t sigwait;u_int p_estcpu;int p_cpticks;fixpt_t p_pctcpu;void *p_wchan;char *p_wmesg;u_int p_swtime;u_int p_slptime;struct itimerval p_realtimer;struct timeval p_rtime;u_quad_t p_uticks;u_quad_t p_sticks;u_quad_t p_iticks;int p_traceflag;struct vnode *p_tracep;int p_siglist;struct vnode *p_textvp;int p_holdcnt;sigset_t p_sigmask;sigset_t p_sigignore;sigset_t p_sigcatch;u_char p_priority;u_char p_usrpri;char p_nice;char p_comm[17];struct pgrp *p_pgrp;struct user *p_addr;u_short p_xstat;u_short p_acflag;struct rusage *p_ru;};
struct xinpcb64 {u_int64_t xi_len;u_int64_t xi_inpp;u_short inp_fport;u_short inp_lport;struct inpcb64_list_entry inp_list;u_int64_t inp_ppcb;u_int64_t inp_pcbinfo;struct inpcb64_list_entry inp_portlist;u_int64_t inp_phd;inp_gen_t inp_gencnt;int inp_flags;u_int32_t inp_flow;u_char inp_vflag;u_char inp_ip_ttl;u_char inp_ip_p;union xinpcb64___BD75B87EE766833A3DF9644C7FCC1E00 inp_dependfaddr;union xinpcb64___61B649B2802E895728C8AA130C15F594 inp_dependladdr;struct xinpcb64___890C891424358EA1AE7B5FD004102AA0 inp_depend4;struct xinpcb64___5B229D794C9B59022271F29D340290EB inp_depend6;struct xsocket64 xi_socket;u_quad_t xi_alignment_hack;};
struct netsnmp_container_s {void *container_data;netsnmp_container_size *get_size;netsnmp_container_rc *init;netsnmp_container_rc *cfree;netsnmp_container_op *insert;netsnmp_container_op *remove;netsnmp_container_op *release;netsnmp_container_obj_func *free_item;netsnmp_container_rtn *find;netsnmp_container_rtn *find_next;netsnmp_container_set *get_subset;netsnmp_container_it *get_iterator;netsnmp_container_func *for_each;netsnmp_container_func *clear;netsnmp_container_op *insert_filter;netsnmp_container_mod_op *duplicate;netsnmp_container_compare *compare;netsnmp_container_compare *ncompare;netsnmp_container_option *options;char *container_name;u_long sync;u_int flags;struct netsnmp_container_s *next;struct netsnmp_container_s *prev;};
struct _xmlGlobalState { char *xmlParserVersion;xmlSAXLocator xmlDefaultSAXLocator;xmlSAXHandlerV1 xmlDefaultSAXHandler;xmlSAXHandlerV1 docbDefaultSAXHandler;xmlSAXHandlerV1 htmlDefaultSAXHandler;xmlFreeFunc xmlFree;xmlMallocFunc xmlMalloc;xmlStrdupFunc xmlMemStrdup;xmlReallocFunc xmlRealloc;xmlGenericErrorFunc xmlGenericError;xmlStructuredErrorFunc xmlStructuredError;void *xmlGenericErrorContext;int oldXMLWDcompatibility;xmlBufferAllocationScheme xmlBufferAllocScheme;int xmlDefaultBufferSize;int xmlSubstituteEntitiesDefaultValue;int xmlDoValidityCheckingDefaultValue;int xmlGetWarningsDefaultValue;int xmlKeepBlanksDefaultValue;int xmlLineNumbersDefaultValue;int xmlLoadExtDtdDefaultValue;int xmlParserDebugEntities;int xmlPedanticParserDefaultValue;int xmlSaveNoEmptyTags;int xmlIndentTreeOutput; char *xmlTreeIndentString;xmlRegisterNodeFunc xmlRegisterNodeDefaultValue;xmlDeregisterNodeFunc xmlDeregisterNodeDefaultValue;xmlMallocFunc xmlMallocAtomic;xmlError xmlLastError;xmlParserInputBufferCreateFilenameFunc xmlParserInputBufferCreateFilenameValue;xmlOutputBufferCreateFilenameFunc xmlOutputBufferCreateFilenameValue;};
struct _xmlSAXHandlerV1 {internalSubsetSAXFunc internalSubset;isStandaloneSAXFunc isStandalone;hasInternalSubsetSAXFunc hasInternalSubset;hasExternalSubsetSAXFunc hasExternalSubset;resolveEntitySAXFunc resolveEntity;getEntitySAXFunc getEntity;entityDeclSAXFunc entityDecl;notationDeclSAXFunc notationDecl;attributeDeclSAXFunc attributeDecl;elementDeclSAXFunc elementDecl;unparsedEntityDeclSAXFunc unparsedEntityDecl;setDocumentLocatorSAXFunc setDocumentLocator;startDocumentSAXFunc startDocument;endDocumentSAXFunc endDocument;startElementSAXFunc startElement;endElementSAXFunc endElement;referenceSAXFunc reference;charactersSAXFunc characters;ignorableWhitespaceSAXFunc ignorableWhitespace;processingInstructionSAXFunc processingInstruction;commentSAXFunc comment;warningSAXFunc warning;errorSAXFunc error;fatalErrorSAXFunc fatalError;getParameterEntitySAXFunc getParameterEntity;cdataBlockSAXFunc cdataBlock;externalSubsetSAXFunc externalSubset;unsigned int initialized;};
struct _xmlSAXHandler {internalSubsetSAXFunc internalSubset;isStandaloneSAXFunc isStandalone;hasInternalSubsetSAXFunc hasInternalSubset;hasExternalSubsetSAXFunc hasExternalSubset;resolveEntitySAXFunc resolveEntity;getEntitySAXFunc getEntity;entityDeclSAXFunc entityDecl;notationDeclSAXFunc notationDecl;attributeDeclSAXFunc attributeDecl;elementDeclSAXFunc elementDecl;unparsedEntityDeclSAXFunc unparsedEntityDecl;setDocumentLocatorSAXFunc setDocumentLocator;startDocumentSAXFunc startDocument;endDocumentSAXFunc endDocument;startElementSAXFunc startElement;endElementSAXFunc endElement;referenceSAXFunc reference;charactersSAXFunc characters;ignorableWhitespaceSAXFunc ignorableWhitespace;processingInstructionSAXFunc processingInstruction;commentSAXFunc comment;warningSAXFunc warning;errorSAXFunc error;fatalErrorSAXFunc fatalError;getParameterEntitySAXFunc getParameterEntity;cdataBlockSAXFunc cdataBlock;externalSubsetSAXFunc externalSubset;unsigned int initialized;void *_private;startElementNsSAX2Func startElementNs;endElementNsSAX2Func endElementNs;xmlStructuredErrorFunc serror;};
struct mac_policy_ops {mpo_audit_check_postselect_t *mpo_audit_check_postselect;mpo_audit_check_preselect_t *mpo_audit_check_preselect;mpo_bpfdesc_label_associate_t *mpo_bpfdesc_label_associate;mpo_bpfdesc_label_destroy_t *mpo_bpfdesc_label_destroy;mpo_bpfdesc_label_init_t *mpo_bpfdesc_label_init;mpo_bpfdesc_check_receive_t *mpo_bpfdesc_check_receive;mpo_cred_check_label_update_execve_t *mpo_cred_check_label_update_execve;mpo_cred_check_label_update_t *mpo_cred_check_label_update;mpo_cred_check_visible_t *mpo_cred_check_visible;mpo_cred_label_associate_fork_t *mpo_cred_label_associate_fork;mpo_cred_label_associate_kernel_t *mpo_cred_label_associate_kernel;mpo_cred_label_associate_t *mpo_cred_label_associate;mpo_cred_label_associate_user_t *mpo_cred_label_associate_user;mpo_cred_label_destroy_t *mpo_cred_label_destroy;mpo_cred_label_externalize_audit_t *mpo_cred_label_externalize_audit;mpo_cred_label_externalize_t *mpo_cred_label_externalize;mpo_cred_label_init_t *mpo_cred_label_init;mpo_cred_label_internalize_t *mpo_cred_label_internalize;mpo_cred_label_update_execve_t *mpo_cred_label_update_execve;mpo_cred_label_update_t *mpo_cred_label_update;mpo_devfs_label_associate_device_t *mpo_devfs_label_associate_device;mpo_devfs_label_associate_directory_t *mpo_devfs_label_associate_directory;mpo_devfs_label_copy_t *mpo_devfs_label_copy;mpo_devfs_label_destroy_t *mpo_devfs_label_destroy;mpo_devfs_label_init_t *mpo_devfs_label_init;mpo_devfs_label_update_t *mpo_devfs_label_update;mpo_file_check_change_offset_t *mpo_file_check_change_offset;mpo_file_check_create_t *mpo_file_check_create;mpo_file_check_dup_t *mpo_file_check_dup;mpo_file_check_fcntl_t *mpo_file_check_fcntl;mpo_file_check_get_offset_t *mpo_file_check_get_offset;mpo_file_check_get_t *mpo_file_check_get;mpo_file_check_inherit_t *mpo_file_check_inherit;mpo_file_check_ioctl_t *mpo_file_check_ioctl;mpo_file_check_lock_t *mpo_file_check_lock;mpo_file_check_mmap_downgrade_t *mpo_file_check_mmap_downgrade;mpo_file_check_mmap_t *mpo_file_check_mmap;mpo_file_check_receive_t *mpo_file_check_receive;mpo_file_check_set_t *mpo_file_check_set;mpo_file_label_init_t *mpo_file_label_init;mpo_file_label_destroy_t *mpo_file_label_destroy;mpo_file_label_associate_t *mpo_file_label_associate;mpo_ifnet_check_label_update_t *mpo_ifnet_check_label_update;mpo_ifnet_check_transmit_t *mpo_ifnet_check_transmit;mpo_ifnet_label_associate_t *mpo_ifnet_label_associate;mpo_ifnet_label_copy_t *mpo_ifnet_label_copy;mpo_ifnet_label_destroy_t *mpo_ifnet_label_destroy;mpo_ifnet_label_externalize_t *mpo_ifnet_label_externalize;mpo_ifnet_label_init_t *mpo_ifnet_label_init;mpo_ifnet_label_internalize_t *mpo_ifnet_label_internalize;mpo_ifnet_label_update_t *mpo_ifnet_label_update;mpo_ifnet_label_recycle_t *mpo_ifnet_label_recycle;mpo_inpcb_check_deliver_t *mpo_inpcb_check_deliver;mpo_inpcb_label_associate_t *mpo_inpcb_label_associate;mpo_inpcb_label_destroy_t *mpo_inpcb_label_destroy;mpo_inpcb_label_init_t *mpo_inpcb_label_init;mpo_inpcb_label_recycle_t *mpo_inpcb_label_recycle;mpo_inpcb_label_update_t *mpo_inpcb_label_update;mpo_iokit_check_device_t *mpo_iokit_check_device;mpo_ipq_label_associate_t *mpo_ipq_label_associate;mpo_ipq_label_compare_t *mpo_ipq_label_compare;mpo_ipq_label_destroy_t *mpo_ipq_label_destroy;mpo_ipq_label_init_t *mpo_ipq_label_init;mpo_ipq_label_update_t *mpo_ipq_label_update;mpo_lctx_check_label_update_t *mpo_lctx_check_label_update;mpo_lctx_label_destroy_t *mpo_lctx_label_destroy;mpo_lctx_label_externalize_t *mpo_lctx_label_externalize;mpo_lctx_label_init_t *mpo_lctx_label_init;mpo_lctx_label_internalize_t *mpo_lctx_label_internalize;mpo_lctx_label_update_t *mpo_lctx_label_update;mpo_lctx_notify_create_t *mpo_lctx_notify_create;mpo_lctx_notify_join_t *mpo_lctx_notify_join;mpo_lctx_notify_leave_t *mpo_lctx_notify_leave;mpo_mbuf_label_associate_bpfdesc_t *mpo_mbuf_label_associate_bpfdesc;mpo_mbuf_label_associate_ifnet_t *mpo_mbuf_label_associate_ifnet;mpo_mbuf_label_associate_inpcb_t *mpo_mbuf_label_associate_inpcb;mpo_mbuf_label_associate_ipq_t *mpo_mbuf_label_associate_ipq;mpo_mbuf_label_associate_linklayer_t *mpo_mbuf_label_associate_linklayer;mpo_mbuf_label_associate_multicast_encap_t *mpo_mbuf_label_associate_multicast_encap;mpo_mbuf_label_associate_netlayer_t *mpo_mbuf_label_associate_netlayer;mpo_mbuf_label_associate_socket_t *mpo_mbuf_label_associate_socket;mpo_mbuf_label_copy_t *mpo_mbuf_label_copy;mpo_mbuf_label_destroy_t *mpo_mbuf_label_destroy;mpo_mbuf_label_init_t *mpo_mbuf_label_init;mpo_mount_check_fsctl_t *mpo_mount_check_fsctl;mpo_mount_check_getattr_t *mpo_mount_check_getattr;mpo_mount_check_label_update_t *mpo_mount_check_label_update;mpo_mount_check_mount_t *mpo_mount_check_mount;mpo_mount_check_remount_t *mpo_mount_check_remount;mpo_mount_check_setattr_t *mpo_mount_check_setattr;mpo_mount_check_stat_t *mpo_mount_check_stat;mpo_mount_check_umount_t *mpo_mount_check_umount;mpo_mount_label_associate_t *mpo_mount_label_associate;mpo_mount_label_destroy_t *mpo_mount_label_destroy;mpo_mount_label_externalize_t *mpo_mount_label_externalize;mpo_mount_label_init_t *mpo_mount_label_init;mpo_mount_label_internalize_t *mpo_mount_label_internalize;mpo_netinet_fragment_t *mpo_netinet_fragment;mpo_netinet_icmp_reply_t *mpo_netinet_icmp_reply;mpo_netinet_tcp_reply_t *mpo_netinet_tcp_reply;mpo_pipe_check_ioctl_t *mpo_pipe_check_ioctl;mpo_pipe_check_kqfilter_t *mpo_pipe_check_kqfilter;mpo_pipe_check_label_update_t *mpo_pipe_check_label_update;mpo_pipe_check_read_t *mpo_pipe_check_read;mpo_pipe_check_select_t *mpo_pipe_check_select;mpo_pipe_check_stat_t *mpo_pipe_check_stat;mpo_pipe_check_write_t *mpo_pipe_check_write;mpo_pipe_label_associate_t *mpo_pipe_label_associate;mpo_pipe_label_copy_t *mpo_pipe_label_copy;mpo_pipe_label_destroy_t *mpo_pipe_label_destroy;mpo_pipe_label_externalize_t *mpo_pipe_label_externalize;mpo_pipe_label_init_t *mpo_pipe_label_init;mpo_pipe_label_internalize_t *mpo_pipe_label_internalize;mpo_pipe_label_update_t *mpo_pipe_label_update;mpo_policy_destroy_t *mpo_policy_destroy;mpo_policy_init_t *mpo_policy_init;mpo_policy_initbsd_t *mpo_policy_initbsd;mpo_policy_syscall_t *mpo_policy_syscall;mpo_port_check_copy_send_t *mpo_port_check_copy_send;mpo_port_check_hold_receive_t *mpo_port_check_hold_receive;mpo_port_check_hold_send_once_t *mpo_port_check_hold_send_once;mpo_port_check_hold_send_t *mpo_port_check_hold_send;mpo_port_check_label_update_t *mpo_port_check_label_update;mpo_port_check_make_send_once_t *mpo_port_check_make_send_once;mpo_port_check_make_send_t *mpo_port_check_make_send;mpo_port_check_method_t *mpo_port_check_method;mpo_port_check_move_receive_t *mpo_port_check_move_receive;mpo_port_check_move_send_once_t *mpo_port_check_move_send_once;mpo_port_check_move_send_t *mpo_port_check_move_send;mpo_port_check_receive_t *mpo_port_check_receive;mpo_port_check_send_t *mpo_port_check_send;mpo_port_check_service_t *mpo_port_check_service;mpo_port_label_associate_kernel_t *mpo_port_label_associate_kernel;mpo_port_label_associate_t *mpo_port_label_associate;mpo_port_label_compute_t *mpo_port_label_compute;mpo_port_label_copy_t *mpo_port_label_copy;mpo_port_label_destroy_t *mpo_port_label_destroy;mpo_port_label_init_t *mpo_port_label_init;mpo_port_label_update_cred_t *mpo_port_label_update_cred;mpo_port_label_update_kobject_t *mpo_port_label_update_kobject;mpo_posixsem_check_create_t *mpo_posixsem_check_create;mpo_posixsem_check_open_t *mpo_posixsem_check_open;mpo_posixsem_check_post_t *mpo_posixsem_check_post;mpo_posixsem_check_unlink_t *mpo_posixsem_check_unlink;mpo_posixsem_check_wait_t *mpo_posixsem_check_wait;mpo_posixsem_label_associate_t *mpo_posixsem_label_associate;mpo_posixsem_label_destroy_t *mpo_posixsem_label_destroy;mpo_posixsem_label_init_t *mpo_posixsem_label_init;mpo_posixshm_check_create_t *mpo_posixshm_check_create;mpo_posixshm_check_mmap_t *mpo_posixshm_check_mmap;mpo_posixshm_check_open_t *mpo_posixshm_check_open;mpo_posixshm_check_stat_t *mpo_posixshm_check_stat;mpo_posixshm_check_truncate_t *mpo_posixshm_check_truncate;mpo_posixshm_check_unlink_t *mpo_posixshm_check_unlink;mpo_posixshm_label_associate_t *mpo_posixshm_label_associate;mpo_posixshm_label_destroy_t *mpo_posixshm_label_destroy;mpo_posixshm_label_init_t *mpo_posixshm_label_init;mpo_proc_check_debug_t *mpo_proc_check_debug;mpo_proc_check_fork_t *mpo_proc_check_fork;mpo_proc_check_get_task_name_t *mpo_proc_check_get_task_name;mpo_proc_check_get_task_t *mpo_proc_check_get_task;mpo_proc_check_getaudit_t *mpo_proc_check_getaudit;mpo_proc_check_getauid_t *mpo_proc_check_getauid;mpo_proc_check_getlcid_t *mpo_proc_check_getlcid;mpo_proc_check_mprotect_t *mpo_proc_check_mprotect;mpo_proc_check_sched_t *mpo_proc_check_sched;mpo_proc_check_setaudit_t *mpo_proc_check_setaudit;mpo_proc_check_setauid_t *mpo_proc_check_setauid;mpo_proc_check_setlcid_t *mpo_proc_check_setlcid;mpo_proc_check_signal_t *mpo_proc_check_signal;mpo_proc_check_wait_t *mpo_proc_check_wait;mpo_proc_label_destroy_t *mpo_proc_label_destroy;mpo_proc_label_init_t *mpo_proc_label_init;mpo_socket_check_accept_t *mpo_socket_check_accept;mpo_socket_check_accepted_t *mpo_socket_check_accepted;mpo_socket_check_bind_t *mpo_socket_check_bind;mpo_socket_check_connect_t *mpo_socket_check_connect;mpo_socket_check_create_t *mpo_socket_check_create;mpo_socket_check_deliver_t *mpo_socket_check_deliver;mpo_socket_check_kqfilter_t *mpo_socket_check_kqfilter;mpo_socket_check_label_update_t *mpo_socket_check_label_update;mpo_socket_check_listen_t *mpo_socket_check_listen;mpo_socket_check_receive_t *mpo_socket_check_receive;mpo_socket_check_received_t *mpo_socket_check_received;mpo_socket_check_select_t *mpo_socket_check_select;mpo_socket_check_send_t *mpo_socket_check_send;mpo_socket_check_stat_t *mpo_socket_check_stat;mpo_socket_check_setsockopt_t *mpo_socket_check_setsockopt;mpo_socket_check_getsockopt_t *mpo_socket_check_getsockopt;mpo_socket_label_associate_accept_t *mpo_socket_label_associate_accept;mpo_socket_label_associate_t *mpo_socket_label_associate;mpo_socket_label_copy_t *mpo_socket_label_copy;mpo_socket_label_destroy_t *mpo_socket_label_destroy;mpo_socket_label_externalize_t *mpo_socket_label_externalize;mpo_socket_label_init_t *mpo_socket_label_init;mpo_socket_label_internalize_t *mpo_socket_label_internalize;mpo_socket_label_update_t *mpo_socket_label_update;mpo_socketpeer_label_associate_mbuf_t *mpo_socketpeer_label_associate_mbuf;mpo_socketpeer_label_associate_socket_t *mpo_socketpeer_label_associate_socket;mpo_socketpeer_label_destroy_t *mpo_socketpeer_label_destroy;mpo_socketpeer_label_externalize_t *mpo_socketpeer_label_externalize;mpo_socketpeer_label_init_t *mpo_socketpeer_label_init;mpo_system_check_acct_t *mpo_system_check_acct;mpo_system_check_audit_t *mpo_system_check_audit;mpo_system_check_auditctl_t *mpo_system_check_auditctl;mpo_system_check_auditon_t *mpo_system_check_auditon;mpo_system_check_host_priv_t *mpo_system_check_host_priv;mpo_system_check_nfsd_t *mpo_system_check_nfsd;mpo_system_check_reboot_t *mpo_system_check_reboot;mpo_system_check_settime_t *mpo_system_check_settime;mpo_system_check_swapoff_t *mpo_system_check_swapoff;mpo_system_check_swapon_t *mpo_system_check_swapon;mpo_system_check_sysctl_t *mpo_system_check_sysctl;mpo_sysvmsg_label_associate_t *mpo_sysvmsg_label_associate;mpo_sysvmsg_label_destroy_t *mpo_sysvmsg_label_destroy;mpo_sysvmsg_label_init_t *mpo_sysvmsg_label_init;mpo_sysvmsg_label_recycle_t *mpo_sysvmsg_label_recycle;mpo_sysvmsq_check_enqueue_t *mpo_sysvmsq_check_enqueue;mpo_sysvmsq_check_msgrcv_t *mpo_sysvmsq_check_msgrcv;mpo_sysvmsq_check_msgrmid_t *mpo_sysvmsq_check_msgrmid;mpo_sysvmsq_check_msqctl_t *mpo_sysvmsq_check_msqctl;mpo_sysvmsq_check_msqget_t *mpo_sysvmsq_check_msqget;mpo_sysvmsq_check_msqrcv_t *mpo_sysvmsq_check_msqrcv;mpo_sysvmsq_check_msqsnd_t *mpo_sysvmsq_check_msqsnd;mpo_sysvmsq_label_associate_t *mpo_sysvmsq_label_associate;mpo_sysvmsq_label_destroy_t *mpo_sysvmsq_label_destroy;mpo_sysvmsq_label_init_t *mpo_sysvmsq_label_init;mpo_sysvmsq_label_recycle_t *mpo_sysvmsq_label_recycle;mpo_sysvsem_check_semctl_t *mpo_sysvsem_check_semctl;mpo_sysvsem_check_semget_t *mpo_sysvsem_check_semget;mpo_sysvsem_check_semop_t *mpo_sysvsem_check_semop;mpo_sysvsem_label_associate_t *mpo_sysvsem_label_associate;mpo_sysvsem_label_destroy_t *mpo_sysvsem_label_destroy;mpo_sysvsem_label_init_t *mpo_sysvsem_label_init;mpo_sysvsem_label_recycle_t *mpo_sysvsem_label_recycle;mpo_sysvshm_check_shmat_t *mpo_sysvshm_check_shmat;mpo_sysvshm_check_shmctl_t *mpo_sysvshm_check_shmctl;mpo_sysvshm_check_shmdt_t *mpo_sysvshm_check_shmdt;mpo_sysvshm_check_shmget_t *mpo_sysvshm_check_shmget;mpo_sysvshm_label_associate_t *mpo_sysvshm_label_associate;mpo_sysvshm_label_destroy_t *mpo_sysvshm_label_destroy;mpo_sysvshm_label_init_t *mpo_sysvshm_label_init;mpo_sysvshm_label_recycle_t *mpo_sysvshm_label_recycle;mpo_task_label_associate_kernel_t *mpo_task_label_associate_kernel;mpo_task_label_associate_t *mpo_task_label_associate;mpo_task_label_copy_t *mpo_task_label_copy;mpo_task_label_destroy_t *mpo_task_label_destroy;mpo_task_label_externalize_t *mpo_task_label_externalize;mpo_task_label_init_t *mpo_task_label_init;mpo_task_label_internalize_t *mpo_task_label_internalize;mpo_task_label_update_t *mpo_task_label_update;mpo_iokit_check_hid_control_t *mpo_iokit_check_hid_control;mpo_vnode_check_access_t *mpo_vnode_check_access;mpo_vnode_check_chdir_t *mpo_vnode_check_chdir;mpo_vnode_check_chroot_t *mpo_vnode_check_chroot;mpo_vnode_check_create_t *mpo_vnode_check_create;mpo_vnode_check_deleteextattr_t *mpo_vnode_check_deleteextattr;mpo_vnode_check_exchangedata_t *mpo_vnode_check_exchangedata;mpo_vnode_check_exec_t *mpo_vnode_check_exec;mpo_vnode_check_getattrlist_t *mpo_vnode_check_getattrlist;mpo_vnode_check_getextattr_t *mpo_vnode_check_getextattr;mpo_vnode_check_ioctl_t *mpo_vnode_check_ioctl;mpo_vnode_check_kqfilter_t *mpo_vnode_check_kqfilter;mpo_vnode_check_label_update_t *mpo_vnode_check_label_update;mpo_vnode_check_link_t *mpo_vnode_check_link;mpo_vnode_check_listextattr_t *mpo_vnode_check_listextattr;mpo_vnode_check_lookup_t *mpo_vnode_check_lookup;mpo_vnode_check_open_t *mpo_vnode_check_open;mpo_vnode_check_read_t *mpo_vnode_check_read;mpo_vnode_check_readdir_t *mpo_vnode_check_readdir;mpo_vnode_check_readlink_t *mpo_vnode_check_readlink;mpo_vnode_check_rename_from_t *mpo_vnode_check_rename_from;mpo_vnode_check_rename_to_t *mpo_vnode_check_rename_to;mpo_vnode_check_revoke_t *mpo_vnode_check_revoke;mpo_vnode_check_select_t *mpo_vnode_check_select;mpo_vnode_check_setattrlist_t *mpo_vnode_check_setattrlist;mpo_vnode_check_setextattr_t *mpo_vnode_check_setextattr;mpo_vnode_check_setflags_t *mpo_vnode_check_setflags;mpo_vnode_check_setmode_t *mpo_vnode_check_setmode;mpo_vnode_check_setowner_t *mpo_vnode_check_setowner;mpo_vnode_check_setutimes_t *mpo_vnode_check_setutimes;mpo_vnode_check_stat_t *mpo_vnode_check_stat;mpo_vnode_check_truncate_t *mpo_vnode_check_truncate;mpo_vnode_check_unlink_t *mpo_vnode_check_unlink;mpo_vnode_check_write_t *mpo_vnode_check_write;mpo_vnode_label_associate_devfs_t *mpo_vnode_label_associate_devfs;mpo_vnode_label_associate_extattr_t *mpo_vnode_label_associate_extattr;mpo_vnode_label_associate_file_t *mpo_vnode_label_associate_file;mpo_vnode_label_associate_pipe_t *mpo_vnode_label_associate_pipe;mpo_vnode_label_associate_posixsem_t *mpo_vnode_label_associate_posixsem;mpo_vnode_label_associate_posixshm_t *mpo_vnode_label_associate_posixshm;mpo_vnode_label_associate_singlelabel_t *mpo_vnode_label_associate_singlelabel;mpo_vnode_label_associate_socket_t *mpo_vnode_label_associate_socket;mpo_vnode_label_copy_t *mpo_vnode_label_copy;mpo_vnode_label_destroy_t *mpo_vnode_label_destroy;mpo_vnode_label_externalize_audit_t *mpo_vnode_label_externalize_audit;mpo_vnode_label_externalize_t *mpo_vnode_label_externalize;mpo_vnode_label_init_t *mpo_vnode_label_init;mpo_vnode_label_internalize_t *mpo_vnode_label_internalize;mpo_vnode_label_recycle_t *mpo_vnode_label_recycle;mpo_vnode_label_store_t *mpo_vnode_label_store;mpo_vnode_label_update_extattr_t *mpo_vnode_label_update_extattr;mpo_vnode_label_update_t *mpo_vnode_label_update;mpo_vnode_notify_create_t *mpo_vnode_notify_create;mpo_vnode_check_signature_t *mpo_vnode_check_signature;mpo_vnode_check_uipc_bind_t *mpo_vnode_check_uipc_bind;mpo_vnode_check_uipc_connect_t *mpo_vnode_check_uipc_connect;mac_proc_check_run_cs_invalid_t *mpo_proc_check_run_cs_invalid;mpo_proc_check_suspend_resume_t *mpo_proc_check_suspend_resume;mpo_reserved_hook_t *mpo_reserved12;mpo_iokit_check_set_properties_t *mpo_iokit_check_set_properties;mpo_system_check_chud_t *mpo_system_check_chud;mpo_vnode_check_searchfs_t *mpo_vnode_check_searchfs;mpo_priv_check_t *mpo_priv_check;mpo_priv_grant_t *mpo_priv_grant;mpo_proc_check_map_anon_t *mpo_proc_check_map_anon;mpo_vnode_check_fsgetpath_t *mpo_vnode_check_fsgetpath;mpo_iokit_check_open_t *mpo_iokit_check_open;mpo_vnode_notify_rename_t *mpo_vnode_notify_rename;mpo_reserved_hook_t *mpo_reserved14;mpo_reserved_hook_t *mpo_reserved15;mpo_reserved_hook_t *mpo_reserved16;mpo_reserved_hook_t *mpo_reserved17;mpo_reserved_hook_t *mpo_reserved18;mpo_reserved_hook_t *mpo_reserved19;mpo_reserved_hook_t *mpo_reserved20;mpo_reserved_hook_t *mpo_reserved21;mpo_reserved_hook_t *mpo_reserved22;mpo_reserved_hook_t *mpo_reserved23;mpo_reserved_hook_t *mpo_reserved24;mpo_reserved_hook_t *mpo_reserved25;mpo_reserved_hook_t *mpo_reserved26;mpo_reserved_hook_t *mpo_reserved27;mpo_reserved_hook_t *mpo_reserved28;mpo_reserved_hook_t *mpo_reserved29;};
union rip___AFFF135AAACB9FA320A59FAF8451ECA8 {struct netinfo ru_nets[1];char ru_tracefile[1];};
struct _7FF86B32A3F84F15420C95DB1000946C {void *address;unsigned int deallocate : 8;unsigned int copy : 8;unsigned int pad1 : 8;unsigned int type : 8;mach_msg_size_t size;};
struct _8DDBBBE51D4822B2C8C3E806F70EB27A {void *address;unsigned int deallocate : 8;unsigned int copy : 8;unsigned int disposition : 8;unsigned int type : 8;mach_msg_size_t count;};
struct _A1BE0EBA393D65D9C9965FE1E31C9EA5 {mach_port_name_t sender;};
struct _DB9FAB3DF43BC43027D23EAB111F29D9 {struct in6_addr addr;};
struct _E97267E034E71568AADDE042A76192B8 {mach_msg_size_t msgh_descriptor_count;};
typedef mach_port_t memory_object_control_t;
typedef mach_port_t memory_object_default_t;
typedef mach_port_t processor_set_control_t;
typedef mach_port_t *exception_port_array_t;
typedef mach_port_name_t *mach_port_name_array_t;
typedef mach_port_type_t *mach_port_type_array_t;
typedef mach_port_t mem_entry_name_port_t;
typedef mach_port_t memory_object_name_t;
typedef mach_port_t exception_handler_t;
typedef mach_port_t *mach_port_array_t;
typedef processor_t *processor_array_t;
typedef exception_handler_t exception_port_t;
typedef host_t host_name_port_t;
typedef processor_t processor_port_t;
typedef semaphore_t semaphore_port_t;
typedef mach_port_t vm_named_entry_t;
typedef mach_port_t host_security_t;
typedef lock_set_t lock_set_port_t;
typedef mach_port_t memory_object_t;
typedef mach_port_t processor_set_t;
typedef mach_port_t vm_task_entry_t;
struct vnode_info_path {struct vnode_info vip_vi;char vip_path[1024];};
struct hm_fragment_st {struct hm_header_st msg_header;unsigned char *fragment;unsigned char *reassembly;};
typedef ledger_t *ledger_array_t;
typedef thread_t *thread_array_t;
typedef mach_port_t clock_reply_t;
typedef ledger_t ledger_port_t;
typedef mach_port_t notify_port_t;
typedef thread_t thread_port_t;
typedef mach_port_t UNDServerRef;
typedef alarm_t alarm_port_t;
typedef mach_port_t clock_ctrl_t;
typedef mach_port_t clock_serv_t;
struct nfs_diskless {struct nfs_dlmount nd_root;struct nfs_dlmount nd_private;};
struct sockaddr_gen {union sockaddr_gen___75CD6CBD540C65254472F3438B93F561 sg_addr;};
typedef task_t *task_array_t;
typedef mach_port_t thread_act_t;
typedef mach_port_t bootstrap_t;
typedef host_t host_name_t;
typedef mach_port_t host_priv_t;
struct in6_pktinfo {struct in6_addr ipi6_addr;unsigned int ipi6_ifindex;};
typedef mach_port_t io_master_t;
typedef mach_port_t ipc_space_t;
typedef task_t task_port_t;
struct in6_ifreq {char ifr_name[16];union in6_ifreq___7D64D84BD828AED8BD33AAA6A53121E7 ifr_ifru;};
struct ipv6_mreq {struct in6_addr ipv6mr_multiaddr;unsigned int ipv6mr_interface;};
struct rip {unsigned char rip_cmd;unsigned char rip_vers;unsigned char rip_res1[2];union rip___AFFF135AAACB9FA320A59FAF8451ECA8 ripun;};
union rpc_msg___7D774571B4FAB0E4BBD540829030FA52 {struct call_body RM_cmb;struct reply_body RM_rmb;};
struct proc_regionwithpathinfo {struct proc_regioninfo prp_prinfo;struct vnode_info_path prp_vip;};
struct proc_threadwithpathinfo {struct proc_threadinfo pt;struct vnode_info_path pvip;};
struct vnode_fdinfowithpath {struct proc_fileinfo pfi;struct vnode_info_path pvip;};
struct in6_addrpolicy {struct sockaddr_in6 addr;struct sockaddr_in6 addrmask;int preced;int label;u_quad_t use;};
struct kqueue_fdinfo {struct proc_fileinfo pfi;struct kqueue_info kqueueinfo;};
struct rpc_createerr {enum clnt_stat cf_stat;struct rpc_err cf_error;};
struct in6_aliasreq {char ifra_name[16];struct sockaddr_in6 ifra_addr;struct sockaddr_in6 ifra_broadaddr;struct sockaddr_in6 ifra_prefixmask;int ifra_flags;struct in6_addrlifetime ifra_lifetime;};
struct vnode_fdinfo {struct proc_fileinfo pfi;struct vnode_info pvi;};
struct ip6_mtuinfo {struct sockaddr_in6 ip6m_addr;uint32_t ip6m_mtu;};
struct pipe_fdinfo {struct proc_fileinfo pfi;struct pipe_info pipeinfo;};
struct pshm_fdinfo {struct proc_fileinfo pfi;struct pshm_info pshminfo;};
struct kinfo_proc {struct extern_proc kp_proc;struct kinfo_proc__eproc kp_eproc;};
struct ypresponse {ypresptype yp_resptype;union ypresponse___6D34D2F64A3B31777223FA377120CA09 ypresponse_u;};
struct yprequest {ypreqtype yp_reqtype;union yprequest___6FDF785020AAFE35EF4D4B0B11050AAA yprequest_u;};
struct rpc_msg {unsigned int rm_xid;enum msg_type rm_direction;union rpc_msg___7D774571B4FAB0E4BBD540829030FA52 ru;};
union res_9_sockaddr_union {struct sockaddr_in sin;struct sockaddr_in6 sin6;int32_t __align32;char __space[128];};
struct tcp_sockinfo {struct in_sockinfo tcpsi_ini;int tcpsi_state;int tcpsi_timer[4];int tcpsi_mss;uint32_t tcpsi_flags;uint32_t rfu_1;uint64_t tcpsi_tp;};
struct in6_prefixreq {char ipr_name[16];u_char ipr_origin;u_char ipr_plen;u_int32_t ipr_vltime;u_int32_t ipr_pltime;struct in6_prflags ipr_flags;struct sockaddr_in6 ipr_prefix;};
union _http_addr_u {struct sockaddr addr;struct sockaddr_in ipv4;struct sockaddr_in6 ipv6;struct sockaddr_un un;char pad[256];};
struct kev_in6_data {struct net_event_data link_data;struct sockaddr_in6 ia_addr;struct sockaddr_in6 ia_net;struct sockaddr_in6 ia_dstaddr;struct sockaddr_in6 ia_prefixmask;u_int32_t ia_plen;u_int32_t ia6_flags;struct kev_in6_addrlifetime ia_lifetime;};
struct xinpcb {u_int32_t xi_len;struct inpcb xi_inp;struct xsocket xi_socket;u_quad_t xi_alignment_hack;};
struct icmp {u_char icmp_type;u_char icmp_code;u_short icmp_cksum;union icmp___115915189B36D486427C31680FC3CC99 icmp_hun;union icmp___B8975A790A59AA025FBB0015D5EF41D8 icmp_dun;};
struct in6_rrenumreq {char irr_name[16];u_char irr_origin;u_char irr_m_len;u_char irr_m_minlen;u_char irr_m_maxlen;u_char irr_u_uselen;u_char irr_u_keeplen;struct in6_rrenumreq__irr_raflagmask irr_raflagmask;u_int32_t irr_vltime;u_int32_t irr_pltime;struct in6_prflags irr_flags;struct sockaddr_in6 irr_matchprefix;struct sockaddr_in6 irr_useprefix;};
struct xtcpcb {u_int32_t xt_len;struct inpcb xt_inp;struct tcpcb xt_tp;struct xsocket xt_socket;u_quad_t xt_alignment_hack;};
union socket_info___B957602F9D31755FD4966320C7ED8975 {struct in_sockinfo pri_in;struct tcp_sockinfo pri_tcp;struct un_sockinfo pri_un;struct ndrv_info pri_ndrv;struct kern_event_info pri_kern_event;struct kern_ctl_info pri_kern_ctl;};
struct socket_info {struct vinfo_stat soi_stat;uint64_t soi_so;uint64_t soi_pcb;int soi_type;int soi_protocol;int soi_family;short soi_options;short soi_linger;short soi_state;short soi_qlen;short soi_incqlen;short soi_qlimit;short soi_timeo;u_short soi_error;uint32_t soi_oobmark;struct sockbuf_info soi_rcv;struct sockbuf_info soi_snd;int soi_kind;uint32_t rfu_1;union socket_info___B957602F9D31755FD4966320C7ED8975 soi_proto;};
struct xtcpcb64 {u_int32_t xt_len;struct xinpcb64 xt_inpcb;u_int64_t t_segq;int t_dupacks;int t_timer[4];int t_state;u_int t_flags;int t_force;tcp_seq snd_una;tcp_seq snd_max;tcp_seq snd_nxt;tcp_seq snd_up;tcp_seq snd_wl1;tcp_seq snd_wl2;tcp_seq iss;tcp_seq irs;tcp_seq rcv_nxt;tcp_seq rcv_adv;u_int32_t rcv_wnd;tcp_seq rcv_up;u_int32_t snd_wnd;u_int32_t snd_cwnd;u_int32_t snd_ssthresh;u_int t_maxopd;u_int32_t t_rcvtime;u_int32_t t_starttime;int t_rtttime;tcp_seq t_rtseq;int t_rxtcur;u_int t_maxseg;int t_srtt;int t_rttvar;int t_rxtshift;u_int t_rttmin;u_int32_t t_rttupdated;u_int32_t max_sndwnd;int t_softerror;char t_oobflags;char t_iobc;u_char snd_scale;u_char rcv_scale;u_char request_r_scale;u_char requested_s_scale;u_int32_t ts_recent;u_int32_t ts_recent_age;tcp_seq last_ack_sent;tcp_cc cc_send;tcp_cc cc_recv;tcp_seq snd_recover;u_int32_t snd_cwnd_prev;u_int32_t snd_ssthresh_prev;u_int32_t t_badrxtwin;u_quad_t xt_alignment_hack;};
typedef processor_set_t processor_set_control_port_t;
typedef processor_set_t *processor_set_name_array_t;
typedef exception_handler_t *exception_handler_array_t;
typedef processor_set_t processor_set_name_port_t;
typedef exception_handler_array_t exception_port_arrary_t;
typedef processor_array_t processor_port_array_t;
typedef memory_object_t *memory_object_array_t;
typedef processor_set_t *processor_set_array_t;
typedef processor_set_t processor_set_name_t;
typedef processor_set_t processor_set_port_t;
typedef ledger_array_t ledger_port_array_t;
typedef thread_array_t thread_port_array_t;
struct proc_vnodepathinfo {struct vnode_info_path pvi_cdir;struct vnode_info_path pvi_rdir;};
typedef thread_act_t *thread_act_array_t;
typedef clock_ctrl_t clock_ctrl_port_t;
typedef clock_serv_t clock_serv_port_t;
typedef task_array_t task_port_array_t;
typedef thread_act_t thread_act_port_t;
typedef ipc_space_t ipc_space_port_t;
struct socket_fdinfo {struct proc_fileinfo pfi;struct socket_info psi;};
typedef processor_set_array_t processor_set_name_port_array_t;
typedef thread_act_array_t thread_act_port_array_t;



/// #endif ===true

 
#line 5: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\objc64.til.h"




struct _NSPersonNameComponentsStyleFormatterShortNameSimpleFallback;
struct _NSPersonNameComponentsStyleFormatterFamilyInitialVariant;
struct _NSPersonNameComponentsStyleFormatterGivenInitialVariant;
struct _NSPersonNameComponentsStyleFormatterShortVariantGeneral;
struct NSISRestrictedToNonNegativeMarkerVariableToBeMinimized;
struct _NSPersonNameComponentsStyleFormatterFamilyOnlyVariant;
struct _NSPersonNameComponentsStyleFormatterGivenOnlyVariant;
struct _NSPersonNameComponentsStyleFormatterNicknameVariant;
struct _CFXNotificationDistributedTokenQueueRegistration;
struct NSISRestrictedToNonNegativeVariableToBeMinimized;
struct _NSPersonNameComponentsStyleFormatterAbbreviated;
struct NSMutableStringProxyForMutableAttributedString;
struct _CFXNotificationNameWildcardObjectRegistration;
struct _NSUserNotificationCenterAppKitDelegatePrivate;
struct _CFXNotificationDarwinTokenQueueRegistration;
struct _CFXNotificationDistributedTokenRegistration;
struct _NSPersonNameComponentsStyleFormatterAvatar;
struct _NSPersonNameComponentsStyleFormatterMedium;
struct NSKeyValueNotifyingMutableCollectionGetter;
struct _NSItemProviderExtensionVendorLoadOperator;
struct _NSPersonNameComponentsStyleFormatterShort;
struct NSExtendedRegularExpressionCheckingResult;
struct NSISRestrictedToNonNegativeMarkerVariable;
struct _NSPersonNameComponentsStyleFormatterLong;
struct NSComplexRegularExpressionCheckingResult;
struct NSFileCoordinatorAccessorBlockCompletion;
struct NSKeyValueNonmutatingCollectionMethodSet;
struct NSKeyValueNonmutatingOrderedSetMethodSet;
struct _CFXNotificationObjcObserverRegistration;
struct _NSUserNotificationCenterDelegatePrivate;
struct NSScriptPropertiesRecordTypeDescription;
struct NSSimpleRegularExpressionCheckingResult;
struct _CFXNotificationDarwinTokenRegistration;
struct NSKeyValueFastMutableCollection1Getter;
struct NSKeyValueFastMutableCollection2Getter;
struct _CFXNotificationTokenQueueRegistration;
struct _NSConstraintDescriptionLayoutRuleNode;
struct NSKeyValueIvarMutableCollectionGetter;
struct NSKeyValueMutatingCollectionMethodSet;
struct NSKeyValueMutatingOrderedSetMethodSet;
struct NSKeyValueShareableObservationInfoKey;
struct NSKeyValueSlowMutableCollectionGetter;
struct NSScriptDeclaredRecordTypeDescription;
struct NSScriptToManyRelationshipDescription;
struct NSSimpleAttributeDictionaryEnumerator;
struct NSTaggedPointerStringCStringContainer;
struct _CFXNotificationRegistrationContainer;
struct _NSFileWatcherDirectoryFileHandleInfo;
struct _NSPersonNameComponentsStyleFormatter;
struct NSFilePresenterAsynchronousOperation;
struct NSKeyValueNotifyingMutableOrderedSet;
struct NSScriptToOneRelationshipDescription;
struct NSSecureUnarchiveFromDataTransformer;
struct _CFPasteboardClientConnectionContext;
struct _CFXNotificationObserverRegistration;
struct _NSKeyedUnarchiveFromDataTransformer;
struct _NSPersonNameComponentsFormatterData;
struct NSISRestrictedToNonNegativeVariable;
struct NSKeyValueNonmutatingArrayMethodSet;
struct NSScriptCommandDescriptionMoreIVars;
struct _NSSimpleAttributeDictionaryElement;
struct _NSXPCConnectionExportedObjectTable;
struct NSAutoresizingMaskLayoutConstraint;
struct NSISRestrictedToZeroMarkerVariable;
struct NSItemProviderDataTransferDelegate;
struct NSMetadataQueryAttributeValueTuple;
struct NSScriptCommandConstructionContext;
struct NSTransitInformationCheckingResult;
struct _CFXNotificationObjectRegistration;
struct _NSItemProviderCopyingLoadOperator;
struct _025D87E34B51EB0542DBD92A3CDC3EBD;
struct _06D0163FE0D7AFE752A9F21F38483579;
struct _0AC6E346AE4835514AAA8AC86D8F4844;
struct _0B20F48E2CD2D778BD1F216BA81B71CE;
struct _0B234511B1B9AA76AF8A4F153FD51D57;
struct _0EE3BC4BB5D9F71B69E4DDE2A5A07D0D;
union _0EF86C8768D86322AD29A07844484C1E;
struct _0FE7D308F4451A74D1A69620C347ACBB;
struct _115C4C562B26FF47E01F9F4EA65B5887;
struct _12A8D912EA621CF5C78D0B17F79410D4;
struct _2017856406EA56F0238CF0D9CD35FE6E;
struct _2889772B1FD9C78F31F69BD8F09C608A;
struct _2B5DD4196BC790A619058A8FED2FA401;
struct _2BAE054620EC7E7505E6465E4D70EA1A;
struct _2F068FC02377E22BA03580A8162C781E;
struct _32A81261468DCB37DADED95498576F3E;
struct _32E5A0E0E789DE3A1D00AE887792AB74;
struct _334330880F6F150C3C7EE8C53B00592A;
struct _37465DDE4F5514DE4D52F8519CE55D34;
struct _3A4A6266569CC828676522302F9CEB6C;
struct _3BC42DD8EA70829840F3C26A41F96A6A;
struct _3C3CFA868A39E31D5F8C5AE768747808;
struct _3FA37093598C0C5E3447A96743C089CD;
struct _42182BDD4B41EBB13A3ACD32661E7921;
struct _428253114C3F8FF7F2C563813045166F;
struct _4310EBFDEBC3AA4DD7F5B63B8F5F071A;
struct _483F7AF304CA8668A62935C0D5FAD77F;
union _49E9799CDA900F1990C6977EC43C0EC8;
struct _4ACC98AB9204ACA7EAFA8DF063A4996A;
struct _54B668FA3CFF7C50914A1C899F2834C0;
struct _56410E50515CD364A0EE7DB1BB255EC6;
struct _5756F26347C3CEC078A43E2D433341E2;
union _5F076CAA1E6C4D6279E2F08356AD9AB1;
struct _61A80719B04F7407D3E47539F1B23CAA;
struct _64D552FC0A0354AD1C366B13BEFE79B1;
struct _65C1E36B86EDFBA0ECD7EEB9BC97EFE8;
union _6C9E119184E2A78FCD58C69C7BF8B15D;
struct _6D51F0630E31178F611E5CCDF3897CA9;
struct _6E4AB045E0827B8F3FF1B3F3D294058D;
struct _738B17BD11CC339B30296C0EA03CEC2B;
struct _785B65FBE112400917D8E62D20E33E6A;
struct _804B73222E2EE60B1274989425A6A19A;
struct _80D03FF5D0F2A693FF5339E72A5AAA81;
struct _82294859AB9855BC08291B5E31E1C78E;
struct _860717418203B9502EAEBBB0D8EC2975;
struct _8727CF87EF637FBC72E2580FFB82C074;
union _87E6B58875CB29E5E9C99994F33B14DA;
struct _8D73D49930F615E6DD64A8AB30109353;
struct _8EEF5D19EA5CE19007D53B234A5D16D7;
struct _8EF4127CF77ECA3DDB612FCF233DC3A8;
struct _90B789FE18189DE35F3FEC1E17365A43;
struct _91CE74A43BC82DB31014AD40E653447B;
struct _935E0931F3D4E25904D9E7C7F5168F83;
union _94286EE54A7D07CE0A731528046AD1F6;
struct _957C33D182EC917D8CC86FE5FB079D28;
struct _96C1D1CA4947FDDF9EC73D50EDC34CB2;
struct _992A3B757AA70BF52C20D879373DE9D6;
struct _9B8641352FC0E6F2D5477F4002E1658E;
union _9E24C3BD43B2DB696201E6A2EFADF0D4;
struct _9FE6E10C8CE45DBC9A88DFDEA39A390D;
struct _A4AAF5FDF6FBD907A28DDA01531FF644;
struct _B08422DDE8B03C468B12978782CFC77B;
union _B09B2325CF3AF9E0428A1C6AA7A0DFCB;
struct _B57F59D398145097F81AD3202A6602D5;
struct _B5C33C3B8A89CDCF6994C29A3007BE67;
union _B6AFB6B8B9FBC4271CF720DD3C9B2A29;
struct _BA245B817A3E003E9697A149A0B100CB;
struct _BB2000C7CF6CC1B28359570521340B37;
struct _BBB4CBAEB4B9FA30FF2AF8EC4D044ED8;
struct _C35A6CF624D8847762DA02B8798849F3;
struct _C567155D349D026977605D9605895FC8;
struct _C8192C5F47CC1C0988884121141DE164;
struct _C9F83CCA9902694B07BD70569193FE6A;
struct _CA084A1CA6E70A8F36D8E05FFEE5F48C;
struct _CE7756A4F2841A54A4B1291B655D27A7;
struct _D2F10589E0F27BF0B26B8B03B59B0534;
struct _D9A998EC83CE1611B65DE646F426508A;
struct _D9EFD2F9166BEB1CC023C26F2970AA92;
union _DCDC34466CD5DF5F6C0C5ADA74D29048;
struct _DCF20CAD073027CB89FDEFA7A9A33809;
union _DEBF68B1382F8A8637FBC3A4A49936AD;
struct _E33443C51371EDD357420B5C8E462196;
struct _EA5A74CDAED071D34B105DF63C354AC2;
struct _EC73BBC4F402BAB32D519C5981EBEBB9;
struct _EEBEAFA8DEED02B58779CEB854D89F7E;
struct _EF516BB7C634247F7EBAD6A9E765255A;
union _F065EA3D620C37C6F077C3956CF2CF32;
struct _F2098BF2A0E37B242A5B918199CF4132;
struct _F661E17B370492EFEB6FF1A776F40D78;
struct _F8165AA1E9677408815E59FB23BBBACE;
struct _F85CB6E0E1BD4AEB8E4205A84CD37C05;
struct _FA39A5CF25124FDDCC1018220017DEE1;
struct NSConcreteMapTableValueEnumerator;
struct NSConcreteMutableAttributedString;
struct NSKeyValueNilOrderedSetEnumerator;
struct NSKeyValueNonmutatingSetMethodSet;
struct NSRegularExpressionCheckingResult;
struct NSScriptClassDescriptionMoreIVars;
struct NSScriptExecutionContextMoreIVars;
struct NSScriptFakeObjectTypeDescription;
struct NSUnitElectricPotentialDifference;
struct _CFXNotificationTokenRegistration;
struct _NSConcreteUserNotificationAction;
struct _NSConcreteUserNotificationCenter;
struct _NSMetadataQuerySortingPseudoItem;
struct _NSObservableKeyPathChangeAdaptor;
struct _NSRemotePasteboardFetchOperation;
struct _NSXPCConnectionExpectedReplyInfo;
struct NSKeyValueFastMutableOrderedSet1;
struct NSKeyValueFastMutableOrderedSet2;
struct NSKeyValueMutatingArrayMethodSet;
struct NSKeyValueShareableObservanceKey;
struct NSOldValueObservationTransformer;
struct NSTokenMatchingPredicateOperator;
struct NSUserNotificationCenterDelegate;
struct _CFXNotificationNameRegistration;
struct _CFXNotificationRegistrationBase;
struct _NSFCUncancellableBlockOperation;
struct _NSItemProviderSandboxedResource;
struct _NSMetadataQueryResultGroupArray;
struct _NSMostCommonJapaneseCharsKeySet;
struct _NSObservingBlockSinkObservation;
struct _NSXPCConnectionRequestedReplies;
struct NSDistributedNotificationCenter;
struct NSFilesystemItemRemoveOperation;
struct NSIBPrototypingLayoutConstraint;
struct NSKeyValueFastMutableOrderedSet;
struct NSKeyValueIvarMutableOrderedSet;
struct NSKeyValueNotifyingMutableArray;
struct NSKeyValueSlowMutableOrderedSet;
struct NSPersonNameComponentsFormatter;
struct NSSHIFTJISX0213EncodingDetector;
struct NSUserScriptTaskServiceDelegate;
struct _NSConcreteBlockSinkObservation;
struct _NSISLinearExpressionObservable;
struct _NSMostCommonChineseCharsKeySet;
struct _NSRemotePasteboardDataProvider;
struct _NSUnarchiveFromDataTransformer;
struct _NSXPCConnectionExpectedReplies;
struct __NSAppleEventManagerSuspension;
struct __NSOrderedSetReverseEnumerator;
struct CFPrefsConfigurationFileSource;
struct NSAllDescendantPathsEnumerator;
struct NSConcreteDistantObjectRequest;
struct NSDistributedObjectsStatistics;
struct NSEncodingDetectionPlaceholder;
struct NSFilePresenterOperationRecord;
struct NSFileProviderMessageInterface;
struct NSFilterObservationTransformer;
struct NSItemRepresentationLoadResult;
struct NSKeyValueMutatingSetMethodSet;
struct NSPositionalSpecifierMoreIVars;
struct NSReduceObservationTransformer;
struct NSScriptComplexTypeDescription;
struct NSScriptEnumerationDescription;
struct NSScriptRecordFieldDescription;
struct NSVariableAssignmentExpression;
struct NSXMLElementDeclarationContent;
struct _CFPrefsPendingKVONotification;
struct _NSAutoresizingMaskXAxisAnchor;
struct _NSAutoresizingMaskYAxisAnchor;
struct _NSChineseBigramKeySet_SKS_SKS;
struct _NSMostCommonKoreanCharsKeySet;
struct __NSDictionaryObjectEnumerator;
struct NSBackgroundActivityScheduler;
struct NSComparisonPredicateOperator;
struct NSContentSizeLayoutConstraint;
struct NSDirectoryTraversalOperation;
struct NSFilePresenterRelinquishment;
struct NSFilesystemItemCopyOperation;
struct NSFilesystemItemLinkOperation;
struct NSFilesystemItemMoveOperation;
struct NSISObjectiveLinearExpression;
struct NSKeyValueNotifyingMutableSet;
struct NSScriptEnumeratorDescription;
struct NSScriptObjectTypeDescription;
struct NSScriptRecordTypeDescription;
struct NSURLFileTypeMappingsInternal;
struct NSWINDOWS1250EncodingDetector;
struct NSWINDOWS1251EncodingDetector;
struct NSWINDOWS1252EncodingDetector;
struct NSWINDOWS1253EncodingDetector;
struct NSWINDOWS1254EncodingDetector;
struct NSWINDOWS1255EncodingDetector;
struct NSWINDOWS1256EncodingDetector;
struct NSWINDOWS1257EncodingDetector;
struct NSWINDOWS1258EncodingDetector;
struct _CFPasteboardClientInstanceID;
struct _NSBackgroundActivityInternal;
struct _NSCompositeLayoutXAxisAnchor;
struct _NSCompositeLayoutYAxisAnchor;
struct _NSCopyOnWriteCalendarWrapper;
struct _NSOwningObservingObservation;
struct _NSPredicateOperatorUtilities;
struct __NSFastEnumerationEnumerator;
struct __NSUnrecognizedTaggedPointer;
struct CFPrefsSuiteSearchListSource;
struct NSBoundedByPredicateOperator;
struct NSDirectorySubpathsOperation;
struct NSISO2022JP1EncodingDetector;
struct NSISO2022JP2EncodingDetector;
struct NSISOLATIN10EncodingDetector;
struct NSItemProviderRepresentation;
struct NSKeyPathSpecifierExpression;
struct NSScriptAttributeDescription;
struct NSScriptValueTypeDescription;
struct NSScriptingAppleEventHandler;
struct NSSingleByteEncodingDetector;
struct NSSmartPunctuationController;
struct NSSubstitutionCheckingResult;
struct NSSubstringPredicateOperator;
struct NSURLConnectionDelegateProxy;
struct NSWINDOWS874EncodingDetector;
struct NSWINDOWS932EncodingDetector;
struct NSWINDOWS936EncodingDetector;
struct NSWINDOWS949EncodingDetector;
struct NSWINDOWS950EncodingDetector;
struct NSXMLNSNumberTransformerName;
struct _NSArithmeticLayoutDimension;
struct _NSFileWatcherFileHandleInfo;
struct _NSMetadataQueryPrivateIvars;
struct __NSWindows1250TrigramKeySet;
struct __NSWindows1251TrigramKeySet;
struct __NSWindows1252TrigramKeySet;
struct __NSWindows1253TrigramKeySet;
struct __NSWindows1254TrigramKeySet;
struct __NSWindows1255TrigramKeySet;
struct __NSWindows1256TrigramKeySet;
struct __NSWindows1257TrigramKeySet;
struct __NSWindows1258TrigramKeySet;
struct NSAutoContentAccessingProxy;
struct NSBig5HKSCSEncodingDetector;
struct NSCompoundPredicateOperator;
struct NSConcreteObservationBuffer;
struct NSConcreteOrderedSetChanges;
struct NSEUCGB2312EncodingDetector;
struct NSEqualityPredicateOperator;
struct NSFilePresenterManagedProxy;
struct NSFilePresenterXPCInterface;
struct NSFilePresenterXPCMessenger;
struct NSISO2022CNEncodingDetector;
struct NSISO2022JPEncodingDetector;
struct NSISO2022KREncodingDetector;
struct NSISO885911EncodingDetector;
struct NSISOLATIN1EncodingDetector;
struct NSISOLATIN2EncodingDetector;
struct NSISOLATIN3EncodingDetector;
struct NSISOLATIN4EncodingDetector;
struct NSISOLATIN5EncodingDetector;
struct NSISOLATIN6EncodingDetector;
struct NSISOLATIN7EncodingDetector;
struct NSISOLATIN8EncodingDetector;
struct NSISOLATIN9EncodingDetector;
struct NSKeyValueFastMutableArray1;
struct NSKeyValueFastMutableArray2;
struct NSKeyValueMutableOrderedSet;
struct NSMapObservationTransformer;
struct NSMatchingPredicateOperator;
struct NSOrthographyCheckingResult;
struct NSPhoneNumberCheckingResult;
struct NSPropertyListSerialization;
struct NSReplacementCheckingResult;
struct NSScriptArgumentDescription;
struct NSScriptListTypeDescription;
struct NSScriptPropertyDescription;
struct NSSimpleAttributeDictionary;
struct NSUTF16BaseEncodingDetector;
struct NSXMLNSArrayTransformerName;
struct _CFPasteboardPendingPromise;
struct _NSCompositeLayoutDimension;
struct _NSConcreteUserNotification;
struct _NSItemProviderTypeCoercion;
struct _NSMetadataItemPrivateIvars;
struct _NSMetadataQueryResultArray;
struct _NSNegateBooleanTransformer;
struct _NSOwningMappingObservation;
struct _NSPersonNameComponentsData;
struct _NSProgressWithRemoteParent;
struct __NSISOLatin10TrigramKeySet;
struct __NSPlaceholderFileSecurity;
struct __NSWindows874TrigramKeySet;
struct __objc_instance_vars_struct;
struct __objc_protocol_list_struct;
struct BKSApplicationStateMonitor;
struct CFPrefsCompatibilitySource;
struct NSBetweenPredicateOperator;
struct NSCompletionCheckingResult;
struct NSConcreteAttributedString;
struct NSConcreteOrderedSetChange;
struct NSConcretePointerFunctions;
struct NSCorrectionCheckingResult;
struct NSDecimalNumberPlaceholder;
struct NSFileAccessProcessManager;
struct NSFileProviderXPCInterface;
struct NSFileProviderXPCMessenger;
struct NSHZGB2312EncodingDetector;
struct NSISO88595EncodingDetector;
struct NSISO88596EncodingDetector;
struct NSISO88597EncodingDetector;
struct NSISO88598EncodingDetector;
struct NSKeyValueChangeDictionary;
struct NSKeyValueCollectionGetter;
struct NSKeyValueComputedProperty;
struct NSKeyValueFastMutableArray;
struct NSKeyValueIvarMutableArray;
struct NSKeyValueNilSetEnumerator;
struct NSKeyValueSlowMutableArray;
struct NSKeyValueUnnestedProperty;
struct NSMetadataQueryResultGroup;
struct NSPlaceholderMutableString;
struct NSScriptCommandDescription;
struct NSScriptSynonymDescription;
struct NSSecurityScopedURLWrapper;
struct NSXMLNSDataTransformerName;
struct NSXMLNSDateTransformerName;
struct SYDRemotePreferencesSource;
struct _NSChineseBigramKeySet_SKS;
struct _NSCompositeLayoutRuleNode;
struct _NSDistanceLayoutDimension;
struct _NSExtensionContextHosting;
struct _NSExtensionContextVending;
struct _NSIPCallbackSerialization;
struct _NSJSONRoundTrippingNumber;
struct _NSKeyForwardingGetBinding;
struct _NSKeyForwardingSetBinding;
struct _NSKeyedCoderOldStyleArray;
struct _NSLocalNotificationCenter;
struct _NSPlaceholderCharacterSet;
struct _NSXPCConnectionClassCache;
struct _NSXPCConnectionExportInfo;
struct _NSXPCConnectionImportInfo;
struct __NSArrayReverseEnumerator;
struct __NSISO885911TrigramKeySet;
struct __NSISOLatin1TrigramKeySet;
struct __NSISOLatin2TrigramKeySet;
struct __NSISOLatin3TrigramKeySet;
struct __NSISOLatin4TrigramKeySet;
struct __NSISOLatin5TrigramKeySet;
struct __NSISOLatin6TrigramKeySet;
struct __NSISOLatin7TrigramKeySet;
struct __NSISOLatin8TrigramKeySet;
struct __NSISOLatin9TrigramKeySet;
struct __NSOperationQueueInternal;
struct __NSSingleEntryDictionaryI;
struct __NSSingleObjectEnumerator;
struct NSConcreteProtocolChecker;
struct NSConstantValueExpression;
struct NSCustomPredicateOperator;
struct NSDateComponentsFormatter;
struct NSDistantObjectTableEntry;
struct NSEncodingDetectionBuffer;
struct NSFileMultipleAccessClaim;
struct NSFileReadingWritingClaim;
struct NSFileSubarbitrationClaim;
struct NSFileWatcherObservations;
struct NSFileWritingWritingClaim;
struct NSGB18030EncodingDetector;
struct NSISInlineStorageVariable;
struct NSISO2022EncodingDetector;
struct NSKeyValueFastMutableSet1;
struct NSKeyValueFastMutableSet2;
struct NSKeyValueObservationInfo;
struct NSKeyValueUndefinedGetter;
struct NSKeyValueUndefinedSetter;
struct NSKeyedUnarchiverDelegate;
struct NSMutableAttributedString;
struct NSProgressSubscriberProxy;
struct NSStringPredicateOperator;
struct NSUTF16BEEncodingDetector;
struct NSUTF16LEEncodingDetector;
struct NSUTF32BEEncodingDetector;
struct NSUTF32LEEncodingDetector;
struct NSUbiquitousKeyValueStore;
struct NSUnitConverterReciprocal;
struct NSXMLAttributeDeclaration;
struct NSXMLNSURLTransformerName;
struct UAPasteboardItemProviding;
struct _CFGeneralPasteboardStore;
struct _CFXNotificationRegistrar;
struct _NSCloudSharingDescriptor;
struct _NSExtensionContextVendor;
struct _NSKoreanBigramKeySet_SKS;
struct _NSPlaceholderObservation;
struct _NSRefcountedPthreadMutex;
struct _NSSharedValueTransformer;
struct _NSXPCInterfaceMethodInfo;
struct __NSConcreteURLComponents;
struct __NSGenericDeallocHandler;
struct __NSISO88595TrigramKeySet;
struct __NSISO88596TrigramKeySet;
struct __NSISO88597TrigramKeySet;
struct __NSISO88598TrigramKeySet;
struct __NSPlaceholderDictionary;
struct __NSPlaceholderOrderedSet;
struct __objc_instance_vars_list;
struct __objc_module_info_struct;
struct NSAEDescriptorTranslator;
struct NSCreateCommandMoreIVars;
struct NSDecimalNumberBehaviors;
struct NSFileAccessArbiterProxy;
struct NSISUnrestrictedVariable;
struct NSKeyValueContainerClass;
struct NSKeyValueFastMutableSet;
struct NSKeyValueIvarMutableSet;
struct NSKeyValueNestedProperty;
struct NSKeyValueSlowMutableSet;
struct NSLayoutConstraintParser;
struct NSNotificationObservable;
struct NSObservationTransformer;
struct NSProgressPublisherProxy;
struct NSScriptClassDescription;
struct NSScriptCommandMoreIVars;
struct NSScriptExecutionContext;
struct NSScriptSuiteDescription;
struct NSSmartPunctuationClient;
struct NSURLDirectoryEnumerator;
struct NSURLHostNameAddressInfo;
struct NSUnitElectricResistance;
struct NSUserNotificationAction;
struct NSUserNotificationCenter;
struct NSVisualFormatLayoutRule;
struct _CFRemotePasteboardCache;
struct _NSKeyedUnarchiverHelper;
struct _NSObservableKVO1Adaptor;
struct _NSObservableObservation;
struct _NSProgressFractionTuple;
struct _NSStringProxyForContext;
struct _NSXMLDocumentExtraIvars;
struct __NSOrderedSetArrayProxy;
struct CFPrefsSearchListSource;
struct ComponentInstanceRecord;
struct NSASCIIEncodingDetector;
struct NSAddressCheckingResult;
struct NSBundleResourceRequest;
struct NSDateIntervalFormatter;
struct NSEUCJPEncodingDetector;
struct NSEUCKREncodingDetector;
struct NSEUCTWEncodingDetector;
struct NSFilePromiseWriteToken;
struct NSFileProviderMessenger;
struct NSGrammarCheckingResult;
struct NSKeyValueProxyShareKey;
struct NSKeyedArchiverDelegate;
struct NSLikePredicateOperator;
struct NSMessagePortNameServer;
struct NSMetadataQueryDelegate;
struct NSMultiReadUniWriteLock;
struct NSScriptCoercionHandler;
struct NSScriptObjectSpecifier;
struct NSScriptTypeDescription;
struct NSUTF16EncodingDetector;
struct NSUTF32EncodingDetector;
struct NSUnitConcentrationMass;
struct OpaqueAEDataStorageType;
struct _NSConcreteDateInterval;
struct _NSISVariableObservable;
struct _NSJapaneseBigramKeySet;
struct _NSLayoutRectObservable;
struct _NSLayoutRuleNodeParent;
struct _NSObservingObservation;
struct __NSPlaceholderTimeZone;
struct __NSVariableWidthString;
struct __objc_class_struct_ext;
struct __objc_method_desc_list;
struct _os_lock_type_handoff_s;
struct objc_method_description;
struct NSAKDeserializerStream;
struct NSAppleEventDescriptor;
struct NSBig5EncodingDetector;
struct NSBigEEncodingDetector;
struct NSBlockObservationSink;
struct NSConcreteArrayChanges;
struct NSConcreteNotification;
struct NSConcretePointerArray;
struct NSDecimalNumberHandler;
struct NSDistantObjectRequest;
struct NSDocumentDeserializer;
struct NSFileAccessSubarbiter;
struct NSFileWrapperMoreIVars;
struct NSISO8601DateFormatter;
struct NSKeyValueMethodGetter;
struct NSKeyValueMethodSetter;
struct NSKeyValueMutableArray;
struct NSMeasurementFormatter;
struct NSOwnedDictionaryProxy;
struct NSPersonNameComponents;
struct NSSearchPathEnumerator;
struct NSSocketPortNameServer;
struct NSStackInContainerRule;
struct NSTextCheckingKeyEvent;
struct NSUTF7EncodingDetector;
struct NSUTF8EncodingDetector;
struct NSUTIPredicateOperator;
struct NSUserActivityDelegate;
struct NSUserScriptTaskRunner;
struct NSXMLNamedFidelityNode;
struct _CFDragPasteboardStore;
struct _NSChineseBigramKeySet;
struct _NSConcreteObservation;
struct _NSIsNotNilTransformer;
struct _NSItemProviderLoading;
struct _NSPlaceholderIndexSet;
struct _NSUndoBlockInvocation;
struct _NSUndoLightInvocation;
struct __CFNotificationCenter;
struct __CFPrefsWeakObservers;
struct __NSCFAttributedString;
struct __NSOrderedSetReversed;
struct __NSOrderedSetSetProxy;
struct __NSSingleObjectArrayI;
struct __objc_category_struct;
struct __objc_protocol_struct;
struct NSAbstractLayoutGuide;
struct NSAggregateExpression;
struct NSAlignmentLayoutRule;
struct NSBuiltinCharacterSet;
struct NSComparisonPredicate;
struct NSConcreteArrayChange;
struct NSConcreteMutableData;
struct NSDirInfoDeserializer;
struct NSDirectoryEnumerator;
struct NSEmojiCheckingResult;
struct NSFileManagerDelegate;
struct NSFileProviderService;
struct NSGBKEncodingDetector;
struct NSISPlaybackOperation;
struct NSInPredicateOperator;
struct NSInvocationOperation;
struct NSKeyValueProxyGetter;
struct NSMachBootstrapServer;
struct NSMutableCharacterSet;
struct NSPositionalSpecifier;
struct NSQuoteCheckingResult;
struct NSScriptSuiteRegistry;
struct NSSharedKeyDictionary;
struct NSSpellCheckingResult;
struct NSSpellServerDelegate;
struct NSTaggedPointerString;
struct NSURLConnectionHandle;
struct NSURLFileTypeMappings;
struct NSUnitConverterLinear;
struct NSUnitElectricCurrent;
struct NSUserAppleScriptTask;
struct NSXPCListenerDelegate;
struct NSXPCListenerEndpoint;
struct OS_dispatch_semaphore;
struct _CFPrefsClientContext;
struct _CFXPreferencesHandle;
struct _NSDOConversationInfo;
struct _NSIndexSetEnumerator;
struct _NSInlineObserverList;
struct _NSKVCPIvarGetBinding;
struct _NSKVCPIvarSetBinding;
struct _NSKoreanBigramKeySet;
struct _NSMappingObservation;
struct _NSPredicateUtilities;
struct _NSProgressSubscriber;
struct _NSRefCountedRunArray;
struct _NSSelectorGetBinding;
struct _NSSelectorSetBinding;
struct _NSXMLPlaceholderNode;
struct __NSFrozenDictionaryM;
struct __NSOperationInternal;
struct __objc2_class_rw1_ext;
struct CFPrefsManagedSource;
struct NSAKSerializerStream;
struct NSAppleEventHandling;
struct NSByteCountFormatter;
struct NSCFAttributedString;
struct NSCheapMutableString;
struct NSComplexOrthography;
struct NSConcreteFileHandle;
struct NSConcreteSetChanges;
struct NSConnectionDelegate;
struct NSDashCheckingResult;
struct NSDateCheckingResult;
struct NSDocumentSerializer;
struct NSFilePresenterProxy;
struct NSFunctionExpression;
struct NSISLinearExpression;
struct NSISVariableDelegate;
struct NSKeyValueIvarGetter;
struct NSKeyValueIvarSetter;
struct NSKeyValueMutableSet;
struct NSKeyValueObservance;
struct NSKeyValueOrderedSet;
struct NSKeyValueSlowGetter;
struct NSKeyValueSlowSetter;
struct NSLinkCheckingResult;
struct NSMethodFrameArgInfo;
struct NSMutableStringProxy;
struct NSNotificationCenter;
struct NSProgressSubscriber;
struct NSStackObservedValue;
struct NSSubqueryExpression;
struct NSSymbolicExpression;
struct NSTextCheckingResult;
struct NSUnitElectricCharge;
struct NSUnitFuelEfficiency;
struct NSVariableExpression;
struct NSXMLFidelityElement;
struct NSXPCEncoderDelegate;
struct _CFPasteboardWeakRef;
struct _CFPrefsSynchronizer;
struct _NSActivityAssertion;
struct _NSPlaceholderLocale;
struct _NSThreadPerformInfo;
struct __IncompleteProtocol;
struct __NSCFConstantString;
struct __NSPlaceholderArray;
struct __NSSingleObjectSetI;
struct __objc_property_list;
struct __objc_symtab_struct;
struct CFPDContainerSource;
struct CFPDPurgeableBuffer;
struct CFPDSourceLookUpKey;
struct NSAppleEventManager;
struct NSCompoundPredicate;
struct NSConcreteHashTable;
struct NSConcretePortCoder;
struct NSConcreteSetChange;
struct NSDirInfoSerializer;
struct NSFileAccessArbiter;
struct NSFileProviderProxy;
struct NSJSONSerialization;
struct NSKeyPathExpression;
struct NSLayoutXAxisAnchor;
struct NSLayoutYAxisAnchor;
struct NSLocalizableString;
struct NSMutableDictionary;
struct NSMutableOrderedSet;
struct NSNotificationQueue;
struct NSObservableKeyPath;
struct NSObservationBuffer;
struct NSObservationSource;
struct NSOrderedSetChanges;
struct NSPlaceholderNumber;
struct NSPlaceholderString;
struct NSPredicateOperator;
struct NSProgressPublisher;
struct NSProgressRegistrar;
struct NSPropertySpecifier;
struct NSRegularExpression;
struct NSRelativeSpecifier;
struct NSScriptSDEFElement;
struct NSSimpleOrthography;
struct NSSmartQuoteOptions;
struct NSSpellingSubstring;
struct NSTernaryExpression;
struct NSUniqueIDSpecifier;
struct NSUserAutomatorTask;
struct NSXMLParserDelegate;
struct _NSAETranslatorData;
struct _NSIsNilTransformer;
struct _NSNestedDictionary;
struct _NSProgressFraction;
struct _NSTimerBlockTarget;
struct _NSXPCDistantObject;
struct _NSXPCInterfaceInfo;
struct __CFNumberFormatter;
struct __NSArrayI_Transfer;
struct __NSFinalizingBlock;
struct __NSLocalizedString;
struct __NSPlaceholderDate;
struct CFPrefsCloudSource;
struct CFPrefsPlistSource;
struct NSAnyKeyExpression;
struct NSAssertionHandler;
struct NSAttributedString;
struct NSBigMutableString;
struct NSClassDescription;
struct NSClassicHashTable;
struct NSConcreteMapTable;
struct NSConnectionHelper;
struct NSEncodingDetector;
struct NSExtensionContext;
struct NSFileAccessIntent;
struct NSFileReactorProxy;
struct NSFileReadingClaim;
struct NSFileWritingClaim;
struct NSGarbageCollector;
struct NSISEngineDelegate;
struct NSKeyValueAccessor;
struct NSKeyValueProperty;
struct NSLayoutAnchorRule;
struct NSLayoutConstraint;
struct NSLinguisticTagger;
struct NSOrderedSetChange;
struct NSPlaceholderValue;
struct NSPointerFunctions;
struct NSScriptSDEFParser;
struct NSUndoManagerProxy;
struct NSUnitAcceleration;
struct NSUnkeyedPortCoder;
struct NSUserNotification;
struct NSValueTransformer;
struct OS_dispatch_source;
struct _CFPasteboardCache;
struct _CFPasteboardEntry;
struct _CFPasteboardStore;
struct _NSFileManagerInfo;
struct _NSPlaceholderData;
struct _NSStdIOFileHandle;
struct __NSCFCharacterSet;
struct __NSCFOutputStream;
struct __NSLocalTimeZoneI;
struct __NSMessageBuilder;
struct __NSPlaceholderSet;
struct __objc_method_desc;
struct __objc_method_list;
struct objc_classheader_t;
struct pthread_override_s;
struct NSAffineTransform;
struct NSAutoreleasePool;
struct NSBlockExpression;
struct NSBlockInvocation;
struct NSClassicMapTable;
struct NSCoercionHandler;
struct NSConcreteScanner;
struct NSDictionaryEntry;
struct NSDistributedLock;
struct NSEnergyFormatter;
struct NSFastEnumeration;
struct NSFileAccessClaim;
struct NSFileCoordinator;
struct NSKeyedUnarchiver;
struct NSLanguageContext;
struct NSLayoutDimension;
struct NSLayoutPointRule;
struct NSLayoutRectangle;
struct NSLengthFormatter;
struct NSMethodSignature;
struct NSMiddleSpecifier;
struct NSMutableIndexSet;
struct NSMutableRLEArray;
struct NSNumberFormatter;
struct NSObjectSpecifier;
struct NSObservationSink;
struct NSObserverKeyPath;
struct NSProtocolChecker;
struct NSRandomSpecifier;
struct NSScriptWhoseTest;
struct NSStackLayoutRule;
struct NSURLKeyValuePair;
struct NSUnitIlluminance;
struct NSUnitTemperature;
struct NSWeakObjectValue;
struct NSXMLFidelityNode;
struct OS_dispatch_group;
struct OS_dispatch_queue;
struct OS_os_transaction;
struct _CFStreamDelegate;
struct _NSCachedIndexSet;
struct _NSCallStackArray;
struct _NSLayoutRuleNode;
struct _NSUndoInvocation;
struct _Unwind_Exception;
struct __CFDateFormatter;
struct __CFRunLoopSource;
struct __CFURLComponents;
struct __CFURLEnumerator;
struct __NSArrayReversed;
struct __NSBlockVariable;
struct __NSCFInputStream;
struct __NSLocalTimeZone;
struct __objc2_class_rw1;
struct __objc2_ivar_list;
struct __objc2_meth_list;
struct __objc2_prop_list;
struct __objc2_prot_list;
struct objc_stringhash_t;
struct os_lock_handoff_s;
struct CFPDCFDataBuffer;
struct NSAKDeserializer;
struct NSBlockOperation;
struct NSBlockPredicate;
struct NSCFCharacterSet;
struct NSCFOutputStream;
struct NSConstantString;
struct NSDateComponents;
struct NSFalsePredicate;
struct NSFileAccessNode;
struct NSFileAttributes;
struct NSIndexSpecifier;
struct NSKeyValueGetter;
struct NSKeyValueSetter;
struct NSKeyedPortCoder;
struct NSLayoutRectRule;
struct NSNullFileHandle;
struct NSOperationQueue;
struct NSPortNameServer;
struct NSProgressValues;
struct NSRangeSpecifier;
struct NSSelfExpression;
struct NSSortDescriptor;
struct NSStreamDelegate;
struct NSURLPromisePair;
struct NSUnitDispersion;
struct NSUserScriptTask;
struct NSWhoseSpecifier;
struct NSZipFileArchive;
struct OS_dispatch_data;
struct _NSAECoercerData;
struct _NSDiskOperation;
struct _NSMoribundCache;
struct _NSOrderedChange;
struct _NSProgressProxy;
struct _NSSharedKeySetS;
struct _NSUndoBeginMark;
struct __CFCharacterSet;
struct __CFNotification;
struct __NSBundleTables;
struct __NSCFDictionary;
struct __NSConcreteUUID;
struct __NSFileSecurity;
struct __NSFrozenArrayM;
struct __objc2_category;
struct __objc2_class_ro;
struct __objc2_class_rw;
struct __objc_class_ext;
struct _expressionFlags;
struct objc_headeropt_t;
struct os_unfair_lock_s;
struct CFPDCloudSource;
struct NSCFInputStream;
struct NSCacheDelegate;
struct NSConcreteValue;
struct NSConditionLock;
struct NSCreateCommand;
struct NSDateFormatter;
struct NSDecimalNumber;
struct NSDeleteCommand;
struct NSDistantObject;
struct NSExistsCommand;
struct NSExtensionItem;
struct NSFilePresenter;
struct NSFileURLHandle;
struct NSHTTPURLHandle;
struct NSKeyGetBinding;
struct NSKeySetBinding;
struct NSKeyValueArray;
struct NSKeyedArchiver;
struct NSMassFormatter;
struct NSMetadataQuery;
struct NSMutableString;
struct NSNameSpecifier;
struct NSObservedValue;
struct NSPurgeableData;
struct NSRecursiveLock;
struct NSScriptCommand;
struct NSSetExpression;
struct NSSimpleCString;
struct NSSpecifierTest;
struct NSTruePredicate;
struct NSURLComponents;
struct NSURLConnection;
struct NSUnitConverter;
struct NSUnitFormatter;
struct NSUnitFrequency;
struct NSXMLSchemaType;
struct NSXMLTreeReader;
struct NSXPCConnection;
struct UAMeasureFormat;
struct _CFXPreferences;
struct _NSAutoCalendar;
struct _NSDispatchData;
struct _NSObserverList;
struct _NSRunArrayItem;
struct _NSStringBuffer;
struct _Unwind_Context;
struct __CFHTTPMessage;
struct __CFRuntimeBase;
struct __FSEventStream;
struct __NSDictionary0;
struct __NSDictionaryI;
struct __NSDictionaryM;
struct __NSEnumerator0;
struct __NSGlobalBlock;
struct __NSMallocBlock;
struct __NSOrderedSetI;
struct __NSOrderedSetM;
struct __cfobservers_t;
struct __objc_property;
struct _predicateFlags;
struct objc_image_info;
struct CFPDDataBuffer;
struct NSAKSerializer;
struct NSArrayChanges;
struct NSBoundKeyPath;
struct NSCFDictionary;
struct NSCalendarDate;
struct NSCharacterSet;
struct NSCloneCommand;
struct NSCloseCommand;
struct NSConcreteData;
struct NSConcretePipe;
struct NSConcreteTask;
struct NSCountCommand;
struct NSDOStreamData;
struct NSDataDetector;
struct NSDateInterval;
struct NSDeserializer;
struct NSFTPURLHandle;
struct NSFileProvider;
struct NSFileSecurity;
struct NSItemProvider;
struct NSLayoutAnchor;
struct NSMetadataItem;
struct NSMutableArray;
struct NSNotification;
struct NSOutputStream;
struct NSPinyinString;
struct NSPointerArray;
struct NSSharedKeySet;
struct NSSubrangeData;
struct NSURLQueryItem;
struct NSURLQueueNode;
struct NSUnitDuration;
struct NSUnitPressure;
struct NSUserActivity;
struct NSUserDefaults;
struct NSUserUnixTask;
struct NSXMLNamedNode;
struct NSXMLSAXParser;
struct NSXPCInterface;
struct OS_dispatch_io;
struct UAUserActivity;
struct _NSKVO1Adaptor;
struct _NSUndoEndMark;
struct __CFDictionary;
struct __CFPasteboard;
struct __CFReadStream;
struct __NSCFCalendar;
struct __NSFrozenSetM;
struct __NSStackBlock;
struct __NSTaggedDate;
struct CFPrefsDaemon;
struct CFPrefsSource;
struct NSAppleScript;
struct NSArrayChange;
struct NSDebugString;
struct NSFileManager;
struct NSFileVersion;
struct NSFileWatcher;
struct NSFileWrapper;
struct NSInputStream;
struct NSKeyValueSet;
struct NSLayoutPoint;
struct NSLogicalTest;
struct NSLookupMatch;
struct NSMeasurement;
struct NSMessagePort;
struct NSMoveCommand;
struct NSMutableData;
struct NSObservation;
struct NSOrthography;
struct NSPortMessage;
struct NSProcessInfo;
struct NSQuitCommand;
struct NSSpellServer;
struct NSUndoManager;
struct NSXMLChildren;
struct NSXMLDocument;
struct NSXPCListener;
struct OS_xpc_object;
struct _NSInlineData;
struct _NSJSONReader;
struct _NSJSONWriter;
struct _NSThreadData;
struct _NSUndoObject;
struct __CFAllocator;
struct __CFBasicHash;
struct __NSAutoBlock;
struct __NSCFBoolean;
struct __cow_state_t;
struct __objc2_class;
struct __objc_method;
struct __va_list_tag;
struct InodeDevPair;
struct NPNameParser;
struct NSAutoLocale;
struct NSConnection;
struct NSCountedSet;
struct NSDictionary;
struct NSEdgeInsets;
struct NSEnumerator;
struct NSExpression;
struct NSFileHandle;
struct NSGetCommand;
struct NSISVariable;
struct NSInvocation;
struct NSKeyBinding;
struct NSLayoutItem;
struct NSLayoutRect;
struct NSLayoutRule;
struct NSMutableSet;
struct NSObservable;
struct NSOrderedSet;
struct NSPathStore2;
struct NSSerializer;
struct NSSetChanges;
struct NSSetCommand;
struct NSSocketPort;
struct NSURLRequest;
struct NSUnarchiver;
struct NSUnitEnergy;
struct NSUnitLength;
struct NSUnitVolume;
struct NSXMLContext;
struct NSXMLDTDNode;
struct NSXMLElement;
struct NSXPCDecoder;
struct NSXPCEncoder;
struct UPluralRules;
struct _NSUndoStack;
struct __NSCFLocale;
struct __NSCFNumber;
struct __NSCFString;
struct __NSObserver;
struct __NSSKGraphE;
struct __NSTimeZone;
struct __objc2_ivar;
struct __objc2_meth;
struct __objc2_prop;
struct __objc2_prot;
struct mutationsPtr;
struct NSCondition;
struct NSDimension;
struct NSException;
struct NSExtension;
struct NSFormatter;
struct NSHashTable;
struct NSIndexPath;
struct NSLeafProxy;
struct NSOperation;
struct NSPortCoder;
struct NSPredicate;
struct NSSetChange;
struct NSURLHandle;
struct NSUnitAngle;
struct NSUnitPower;
struct NSUnitSpeed;
struct NSWhoseTest;
struct NSXMLParser;
struct _NSXPCBoost;
struct _NSZeroData;
struct __CFBoolean;
struct __CFRunLoop;
struct __CFStorage;
struct __NSCFArray;
struct __NSCFError;
struct __NSCFTimer;
struct __NSSKGraph;
struct _xpc_type_s;
struct objc_method;
struct objc_object;
struct CFPDSource;
struct NSArchiver;
struct NSCalendar;
struct NSISEngine;
struct NSIndexSet;
struct NSMachPort;
struct NSMapTable;
struct NSObserver;
struct NSPageData;
struct NSProgress;
struct NSRLEArray;
struct NSTimeZone;
struct NSURLError;
struct NSURLQueue;
struct NSUnitArea;
struct NSUnitMass;
struct NSXPCCoder;
struct OS_voucher;
struct _NSLTToken;
struct _NSZombie_;
struct __CFBundle;
struct __CFLocale;
struct __CFSocket;
struct __CFString;
struct __NSArray0;
struct __NSArrayI;
struct __NSArrayM;
struct __NSCFData;
struct __NSCFType;
struct objc_cache;
struct objc_super;
struct NSCFArray;
struct NSCFError;
struct NSCFTimer;
struct NSCopying;
struct NSDirInfo;
struct NSDocInfo;
struct NSRunLoop;
struct NSScanner;
struct NSXMLNode;
struct NSXMLTidy;
struct _NSClrDat;
struct __CFArray;
struct __NSCFSet;
struct __ssFlags;
struct isMutable;
struct objc_ivar;
struct NSBundle;
struct NSCFData;
struct NSCFType;
struct NSCoding;
struct NSLocale;
struct NSNumber;
struct NSObject;
struct NSStream;
struct NSString;
struct NSThread;
struct NSXMLDTD;
struct PKPlugIn;
struct Protocol;
struct _NSClStr;
struct _NSRange;
struct __CFData;
struct __CFNull;
struct __CFUUID;
struct __DADisk;
struct __MDItem;
struct __NSAtom;
struct __NSDate;
struct __NSSetI;
struct __NSSetM;
struct __zFlags;
struct CGPoint;
struct NSArray;
struct NSBlock;
struct NSCache;
struct NSCoder;
struct NSError;
struct NSImage;
struct NSProxy;
struct NSSlice;
struct NSTimer;
struct NSValue;
struct _NSZone;
struct __CFSet;
struct __CFURL;
struct _fields;
struct datapVM;
struct AEDesc;
struct CGRect;
struct CGSize;
struct NSData;
struct NSDate;
struct NSLock;
struct NSNull;
struct NSPipe;
struct NSPort;
struct NSRTFD;
struct NSTask;
struct NSUUID;
struct NSUnit;
struct Object;
struct offset;
struct vertex;
struct NSSet;
struct NSURL;
struct datap;
struct state;
struct value;
struct USet;
struct edge;
struct next;
struct slab;

struct _NSUserNotificationCenterAppKitDelegatePrivate;
struct _NSUserNotificationCenterDelegatePrivate;
struct NSItemProviderDataTransferDelegate;
struct _025D87E34B51EB0542DBD92A3CDC3EBD {unsigned short *var0;signed long long var1;unsigned short *var2;signed long long var3;unsigned short *var4;signed long long var5;};
struct _06D0163FE0D7AFE752A9F21F38483579 {unsigned char var0;unsigned char var1;};
struct _0AC6E346AE4835514AAA8AC86D8F4844 {signed long long var0;signed long long var1;};
struct _0B20F48E2CD2D778BD1F216BA81B71CE {unsigned int val[8];};
struct _0FE7D308F4451A74D1A69620C347ACBB {unsigned long long collectionSizeOffset[1024];signed long long collectionRecursionIndex;unsigned long long dataLen;unsigned long long dataSize;char *data;char isVM;char isStack;};
struct _115C4C562B26FF47E01F9F4EA65B5887 {unsigned int var0[8];};
struct _12A8D912EA621CF5C78D0B17F79410D4 {int isStorage : 1;int isUnicode : 1;int hasBOM : 1;int swap : 1;int immutable : 1;int var0 : 27;};
struct _2017856406EA56F0238CF0D9CD35FE6E {unsigned long long mutations;};
struct _2889772B1FD9C78F31F69BD8F09C608A {unsigned long long var0;int var1;};
struct _2B5DD4196BC790A619058A8FED2FA401 {int caseSensitive : 1;int var0 : 31;};
struct _2F068FC02377E22BA03580A8162C781E {int var0 : 8;int var1 : 4;int var2 : 1;int var3 : 1;int var4 : 18;unsigned short var5[8];};
struct _32A81261468DCB37DADED95498576F3E {unsigned long long state;mutationsPtr **itemsPtr;unsigned long long *var0;unsigned long long extra[5];};
struct _32E5A0E0E789DE3A1D00AE887792AB74 {NSMethodFrameArgInfo *var0;NSMethodFrameArgInfo *var1;unsigned int var2;unsigned int var3;};
struct _37465DDE4F5514DE4D52F8519CE55D34 {int _inverted : 1;int _builtin : 1;int _isCF : 1;int _reserved : 29;};
struct _3A4A6266569CC828676522302F9CEB6C {_8EF4127CF77ECA3DDB612FCF233DC3A8 *blocks;unsigned long long blocksCount;unsigned long long blocksCapacity;NSMutableIndexSet *freeIndexes;};
struct _3C3CFA868A39E31D5F8C5AE768747808 {unsigned long long offset;int type;};
struct _3FA37093598C0C5E3447A96743C089CD {signed long long version;void *info;void *retain;void *release;void *copyDescription;};
struct _4ACC98AB9204ACA7EAFA8DF063A4996A {slab *stored_extern_marker;_8EF4127CF77ECA3DDB612FCF233DC3A8 *var0;unsigned long long capacity;};
struct _54B668FA3CFF7C50914A1C899F2834C0 {double var0;double var1;double var2;double var3;double var4;double var5;};
struct _56410E50515CD364A0EE7DB1BB255EC6 {double m11;double m12;double m21;double m22;double tX;double tY;};
struct _5756F26347C3CEC078A43E2D433341E2 {datap *data;char *var0;char *limitp;char *startp;datapVM *callback;char var1;};
union _5F076CAA1E6C4D6279E2F08356AD9AB1 {void *_rcb;void *_wcb;void *genericCallback;void *genericPointer;};
struct _61A80719B04F7407D3E47539F1B23CAA {unsigned long long var0;};
struct _64D552FC0A0354AD1C366B13BEFE79B1 {void *retain;void *release;void *describe;};
struct _738B17BD11CC339B30296C0EA03CEC2B {unsigned int var0;};
struct _785B65FBE112400917D8E62D20E33E6A {NSData *data;char *dataBytes;};
struct _804B73222E2EE60B1274989425A6A19A {unsigned long long aligner;};
struct _82294859AB9855BC08291B5E31E1C78E { char *name; char *value;};
struct _860717418203B9502EAEBBB0D8EC2975 {_NSOrderedChange *buffer;unsigned long long availableIndex;unsigned long long capacity;unsigned long long changesIndex;unsigned long long lastIndex;unsigned long long count;};
union _87E6B58875CB29E5E9C99994F33B14DA {__CFNull *empty;_CFXNotificationRegistrationBase *child;__CFDictionary *children;};
struct _8D73D49930F615E6DD64A8AB30109353 {NSISEngine *engine;_8EF4127CF77ECA3DDB612FCF233DC3A8 *storage;};
struct _8EF4127CF77ECA3DDB612FCF233DC3A8 {};
struct _91CE74A43BC82DB31014AD40E653447B {signed long long var0;void *var1;void *var2;void *var3;void *var4;void *var5;};
struct _935E0931F3D4E25904D9E7C7F5168F83 {unsigned int muts;unsigned int used;};
struct _957C33D182EC917D8CC86FE5FB079D28 {unsigned int muts;int used : 25;int kvo : 1;int szidx : 6;};
struct _992A3B757AA70BF52C20D879373DE9D6 {int isFat : 1;int freeWhenDone : 1;int refs : 30;};
struct _9B8641352FC0E6F2D5477F4002E1658E {unsigned int muts;int used : 26;int szidx : 6;};
struct _9FE6E10C8CE45DBC9A88DFDEA39A390D {signed long long var0;signed long long var1;signed long long var2;};
struct _B08422DDE8B03C468B12978782CFC77B {NSBundle *bundle;unsigned int appleEventCode;NSArray *classDescriptions;NSArray *commandDescriptions;NSArray *typeDescriptions;NSString *presentableDescription;NSObject *presentableNameOrNames;char isHidden;NSArray *accessGroupDescriptions;};
struct _B57F59D398145097F81AD3202A6602D5 {unsigned int value;};
struct _B5C33C3B8A89CDCF6994C29A3007BE67 {int _isEmpty : 1;int _hasSingleRange : 1;int _cacheValid : 1;int _reservedArrayBinderController : 29;};
struct _BA245B817A3E003E9697A149A0B100CB {signed long long var0;void *var1;void *var2;void *var3;void *var4;};
struct _C567155D349D026977605D9605895FC8 {void *hash;void *isEqual;void *retain;void *release;void *describe;void *notAKeyMarker;};
struct _C9F83CCA9902694B07BD70569193FE6A {void *_data;void *_reserved;};
struct _CA084A1CA6E70A8F36D8E05FFEE5F48C {int attributeFixingDisabled : 8;int var0 : 24;};
struct _CE7756A4F2841A54A4B1291B655D27A7 {__CFStorage *storage;};
struct _D9A998EC83CE1611B65DE646F426508A {int isDir : 1;int isSingleFile : 1;int isSoftLink : 1;int _pad : 13;};
struct _D9EFD2F9166BEB1CC023C26F2970AA92 {unsigned long long var0;unsigned long long var1;unsigned int var2;unsigned int var3;unsigned int var4;_8EF4127CF77ECA3DDB612FCF233DC3A8 *var5;};
struct _DCF20CAD073027CB89FDEFA7A9A33809 {unsigned char var0;unsigned char var1;unsigned char var2;unsigned char var3;unsigned char var4;unsigned char var5;unsigned char var6;unsigned char var7;unsigned char var8;unsigned char var9;unsigned char var10;unsigned char var11;unsigned char var12;unsigned char var13;unsigned char var14;unsigned char var15;};
struct _E33443C51371EDD357420B5C8E462196 {int hasEvaluatedReceivers : 1;int hasEvaluatedArguments : 1;int RESERVED : 30;};
struct _EC73BBC4F402BAB32D519C5981EBEBB9 {int var0;signed long long var1;__CFArray *var2;};
struct _EEBEAFA8DEED02B58779CEB854D89F7E {void *hash;void *isEqual;void *retain;void *release;void *describe;};
union _F065EA3D620C37C6F077C3956CF2CF32 {unsigned short *fat;char *thin;};
struct _F2098BF2A0E37B242A5B918199CF4132 {char *data;unsigned long long dataLen;__CFString *tempString;};
struct _F661E17B370492EFEB6FF1A776F40D78 {int var0;signed long long var1;signed long long var2;};
struct _F85CB6E0E1BD4AEB8E4205A84CD37C05 {int var0;signed long long var1;__CFArray *var2;__CFArray *var3;};
struct NSUserNotificationCenterDelegate;
struct __NSAppleEventManagerSuspension {};
struct NSFilePresenterXPCInterface;
struct __objc_instance_vars_struct {char *name;char *type;long long offset;};
struct __objc_protocol_list_struct {void *next;long long count;};
struct BKSApplicationStateMonitor;
struct NSFileProviderXPCInterface;
struct SYDRemotePreferencesSource;
struct _NSExtensionContextHosting;
struct _NSExtensionContextVending;
typedef struct _65C1E36B86EDFBA0ECD7EEB9BC97EFE8 objc_exception_functions_t;
struct NSKeyedUnarchiverDelegate;
struct UAPasteboardItemProviding;
struct __objc_instance_vars_list {uint32_t count;};
struct __objc_module_info_struct {unsigned long long version;unsigned long long size;char *name;void *symbols;};
typedef struct _82294859AB9855BC08291B5E31E1C78E objc_property_attribute_t;
struct NSDecimalNumberBehaviors;
struct NSSmartPunctuationClient;
struct ComponentInstanceRecord {signed long long var0[1];};
struct NSKeyedArchiverDelegate;
struct NSMetadataQueryDelegate;
struct OpaqueAEDataStorageType {};
struct _NSLayoutRuleNodeParent;
struct __objc_class_struct_ext {void *isa;char *super_class;char *name;long long version;long long info;long long instance_size;void *ivars;void *methods;long long cache;void *protocols; uint8_t *ivar_layout;void *ext;};
struct __objc_method_desc_list {uint32_t count;};
struct _os_lock_type_handoff_s {};
struct NSUserActivityDelegate;
struct _NSItemProviderLoading;
struct __CFNotificationCenter {};
struct __objc_category_struct {char *category_name;char *class_name;void *instance_methods;void *class_methods;void *protocols;};
struct __objc_protocol_struct {void *isa;char *protocol_name;void *protocol_list;void *instance_methods;void *class_methods;};
struct NSFileManagerDelegate;
struct NSSpellServerDelegate;
struct NSXPCListenerDelegate;
struct OS_dispatch_semaphore;
struct __objc2_class_rw1_ext { __objc2_class_ro *ro;__objc2_meth_list *methods;__objc2_prop_list *properties;__objc2_prot_list *protocols;char *demangledName;uint32_t version;};
struct NSConnectionDelegate;
struct NSISVariableDelegate;
struct NSMethodFrameArgInfo {NSMethodFrameArgInfo *var0;NSMethodFrameArgInfo *var1;unsigned int var2;unsigned int var3;unsigned int var4;unsigned int var5;unsigned char var6;char var7;int var8 : 1;int var9 : 1;int var10 : 1;int var11 : 1;int var12 : 1;int var13 : 1;int var14 : 1;int var15 : 1;int var16 : 1;int var17 : 1;int var18 : 1;int var19 : 1;int var20 : 1;int var21 : 1;int var22 : 1;int var23 : 1;unsigned char var24;char var25[];};
struct NSProgressSubscriber;
struct NSXPCEncoderDelegate;
struct __objc_property_list {uint32_t entrysize;uint32_t count;};
struct __objc_symtab_struct {long long sel_ref_cnt;void *refs;short cls_def_count;short cat_def_count;};
struct NSProgressPublisher;
struct NSXMLParserDelegate;
struct __CFNumberFormatter {};
struct NSISEngineDelegate;
struct OS_dispatch_source;
struct __objc_method_desc {void *name;char *types;};
struct __objc_method_list {uint32_t entrysize;uint32_t count;};
struct objc_classheader_t {int32_t clsOffset;int32_t hiOffset;};
struct pthread_override_s {};
struct NSFastEnumeration;
struct OS_dispatch_group;
struct OS_dispatch_queue;
struct OS_os_transaction;
struct _Unwind_Exception;
struct __CFDateFormatter {};
struct __CFRunLoopSource {};
struct __CFURLComponents {};
struct __CFURLEnumerator {};
struct __objc2_class_rw1 {uint32_t flags;uint16_t witness;uint16_t index;void *ro_or_rw_ext;__objc2_class *firstSubclass;__objc2_class *nextSiblingClass;};
struct __objc2_ivar_list {uint32_t entrysize;uint32_t count;};
struct __objc2_meth_list {uint32_t entrysize;uint32_t count;};
struct __objc2_prop_list {uint32_t entrysize;uint32_t count;};
struct __objc2_prot_list {uint64_t count;};
struct objc_stringhash_t {uint32_t capacity;uint32_t occupied;uint32_t shift;uint32_t mask;uint32_t unused1;uint32_t unused2;uint64_t salt;uint32_t scramble[256];};
struct os_lock_handoff_s {_os_lock_type_handoff_s *osl_type;unsigned long long _osl_handoff_opaque[1];};
struct NSStreamDelegate;
struct OS_dispatch_data;
struct _NSOrderedChange {};
struct __CFCharacterSet {};
struct __objc2_category {char *name;__objc2_class *_class;__objc2_meth_list *inst_meths;__objc2_meth_list *class_meths;__objc2_prot_list *prots;__objc2_prop_list *props;};
struct __objc2_class_ro {uint32_t flags;uint32_t ivar_base_start;uint32_t ivar_base_size;uint32_t reserved;void *ivar_lyt;char *name;__objc2_meth_list *base_meths;__objc2_prot_list *base_prots;__objc2_ivar_list *ivars;void *weak_ivar_lyt;__objc2_prop_list *base_props;};
struct __objc2_class_rw {uint32_t flags;uint32_t version;__objc2_class_ro *ro;__objc2_meth_list *methods;__objc2_prop_list *properties;__objc2_prot_list *protocols;__objc2_class *firstSubclass;__objc2_class *nextSiblingClass;char *demangledName;};
struct __objc_class_ext {uint32_t size; uint8_t *weak_ivar_layout;void *property_lists;};
struct _expressionFlags {int _evaluationBlocked : 1;int _reservedExpressionFlags : 31;};
struct objc_headeropt_t {uint32_t count;uint32_t entsize;};
struct os_unfair_lock_s {unsigned int _os_unfair_lock_opaque;};
struct NSCacheDelegate;
struct NSFilePresenter;
struct NSURLConnection;
struct UAMeasureFormat {};
struct _Unwind_Context;
struct __CFHTTPMessage {};
struct __CFRuntimeBase {unsigned long long var0;unsigned long long var1;};
struct __FSEventStream {};
struct __cfobservers_t {next *slot;__cfobservers_t *var0;};
struct __objc_property { char *name; char *attributes;};
struct _predicateFlags {int _evaluationBlocked : 1;int _reservedPredicateFlags : 31;};
struct objc_image_info {uint32_t version;uint32_t flags;};
struct NSFileProvider;
struct OS_dispatch_io;
struct UAUserActivity;
struct __CFDictionary {};
struct __CFReadStream {};
struct OS_xpc_object;
struct __CFAllocator {};
struct __CFBasicHash {};
struct __cow_state_t {};
struct __objc2_class {__objc2_class *isa;__objc2_class *superclass;void *cache;void *vtable;__objc2_class_ro *info;};
struct __va_list_tag {unsigned int gp_offset;unsigned int fp_offset;void *overflow_arg_area;void *reg_save_area;};
struct InodeDevPair {int dev;unsigned long long inode;};
struct NPNameParser;
struct NSEdgeInsets {double var0;double var1;double var2;double var3;};
struct NSLayoutItem;
struct NSLayoutRule;
struct NSObservable;
struct NSURLRequest;
struct UPluralRules {};
struct __objc2_ivar {int32_t *offs;char *name;char *type;uint32_t align;uint32_t size;};
struct __objc2_prop {char *name;char *attr;};
struct __objc2_prot {void *isa;char *name;__objc2_prot_list *prots;__objc2_meth_list *inst_meths;__objc2_meth_list *class_meths;__objc2_meth_list *opt_inst_meths;__objc2_meth_list *opt_class_meths;__objc2_prop_list *inst_props;uint32_t cb;uint32_t flags;};
struct mutationsPtr;
struct __CFBoolean {};
struct __CFRunLoop {};
struct __CFStorage {};
struct _xpc_type_s {};
struct objc_method {};
struct NSObserver;
struct OS_voucher;
struct __CFBundle {};
struct __CFLocale {};
struct __CFSocket {};
struct __CFString {};
struct NSCopying;
struct __CFArray {};
struct __ssFlags {int delegateLearnsWords : 1;int delegateForgetsWords : 1;int busy : 1;int _reserved : 29;};
struct isMutable;
struct objc_ivar {};
typedef void *Category;
struct NSCoding;
struct PKPlugIn;
typedef void *Property;
struct _NSRange {unsigned long long location;unsigned long long length;};
struct __CFData {};
struct __CFNull {};
struct __CFUUID {};
struct __DADisk {};
struct __MDItem {};
struct __zFlags {int providerSuppliesContents : 1;int providerSuppliesStreams : 1;int providerSuppliesProperties : 1;int noContentsCaching : 1;int fileOpen : 1;int reserved : 27;};
struct CGPoint {double x;double y;};
struct NSImage;
struct NSSlice {void **items;char wantsStrong;char wantsWeak;char wantsARC;char shouldCopyIn;char usesStrong;char usesWeak;char usesARC;char usesSentinel;char pointerPersonality;char integerPersonality;char simpleReadClear;void *sizeFunction;void *hashFunction;void *isEqualFunction;void *describeFunction;void *acquireFunction;void *relinquishFunction;void *allocateFunction;void *freeFunction;void *readAt;void *clearAt;void *storeAt;};
struct _NSZone {};
struct __CFSet {};
struct __CFURL {};
struct _fields {int creatorCode : 1;int fileTypeCode : 1;int extensionHidden : 1;int creationDate : 1;int fileBusy : 1;int reserved : 27;};
struct datapVM;
struct AEDesc {unsigned int descriptorType;OpaqueAEDataStorageType **dataHandle;};
struct CGSize {double width;double height;};
typedef void *Method;
struct offset;
struct vertex {unsigned long long var0;unsigned long long var1;unsigned long long *var2;};
typedef void *Class;
struct datap;
struct state;
struct value;
typedef void *Ivar;
struct USet {};
struct edge {unsigned long long var0;unsigned long long var1[2];unsigned long long var2;};
struct next;
struct slab;
typedef  char *SEL;
typedef void *id;
struct _NSSimpleAttributeDictionaryElement {unsigned long long hash;value *key;id var0;};
struct _0B234511B1B9AA76AF8A4F153FD51D57 {_87E6B58875CB29E5E9C99994F33B14DA elements;void *singleChildKey;_8EF4127CF77ECA3DDB612FCF233DC3A8 *callbacks;};
struct _0EE3BC4BB5D9F71B69E4DDE2A5A07D0D {id var0;_8EF4127CF77ECA3DDB612FCF233DC3A8 *var1;};
union _0EF86C8768D86322AD29A07844484C1E {void *var0;_06D0163FE0D7AFE752A9F21F38483579 var1;};
struct _334330880F6F150C3C7EE8C53B00592A {id var0;id var1;};
struct _3BC42DD8EA70829840F3C26A41F96A6A {id var0;id var1;char var2;char var3;};
struct _428253114C3F8FF7F2C563813045166F {id var0;id var1;id var2;id var3;};
struct _4310EBFDEBC3AA4DD7F5B63B8F5F071A {Class var0;Class var1;__CFSet *var2;__CFDictionary *var3;_opaque_pthread_mutex_t var4;char var5;};
struct _483F7AF304CA8668A62935C0D5FAD77F {unsigned int creatorCode;unsigned int fileTypeCode;NSDate *creationDate;_fields validFields;char extensionHidden;char fileBusy;char _padding[2];};
struct _6D51F0630E31178F611E5CCDF3897CA9 {id var0;_8EF4127CF77ECA3DDB612FCF233DC3A8 *var1;unsigned long long var2;};
struct _6E4AB045E0827B8F3FF1B3F3D294058D {id var0;id var1;unsigned int var2;unsigned int var3;id var4;id var5;id var6;id var7;char var8;id var9;id var10;id var11;};
struct _80D03FF5D0F2A693FF5339E72A5AAA81 {id var0;unsigned int var1;id var2;id var3;id var4;id var5;id var6;char var7;id var8;};
struct _8EEF5D19EA5CE19007D53B234A5D16D7 {id var0;id var1;unsigned int var2;id var3;id var4;id var5;id var6;id var7;id var8;id var9;id var10;char var11;id var12;id var13;};
struct _90B789FE18189DE35F3FEC1E17365A43 {id *var0;signed long long var1;unsigned long long var2;char var3;};
union _94286EE54A7D07CE0A731528046AD1F6 {unsigned long long mutations;_935E0931F3D4E25904D9E7C7F5168F83 var0;};
struct _96C1D1CA4947FDDF9EC73D50EDC34CB2 {unsigned long long var0;id var1;id var2;id var3;id var4;};
struct _A4AAF5FDF6FBD907A28DDA01531FF644 {unsigned long long kind;NSObject *oldValue;NSObject *newValue;NSIndexSet *indexes;id extraData;};
union _B6AFB6B8B9FBC4271CF720DD3C9B2A29 {__MDItem *var0;id var1;id var2;};
struct _C35A6CF624D8847762DA02B8798849F3 {signed long long var0;id var1;id var2;};
struct _C8192C5F47CC1C0988884121141DE164 {_90B789FE18189DE35F3FEC1E17365A43 var0;_90B789FE18189DE35F3FEC1E17365A43 var1;};
struct _D2F10589E0F27BF0B26B8B03B59B0534 {_NSRange _range;};
union _DCDC34466CD5DF5F6C0C5ADA74D29048 {unsigned long long mutations;_9B8641352FC0E6F2D5477F4002E1658E var0;};
struct _EA5A74CDAED071D34B105DF63C354AC2 {state **objs;_DCDC34466CD5DF5F6C0C5ADA74D29048 var0;};
struct _EF516BB7C634247F7EBAD6A9E765255A {unsigned long long var0;id *var1;unsigned long long *var2;unsigned long long var3[5];};
struct _F8165AA1E9677408815E59FB23BBBACE {id var0;void *var1;signed long long var2;};
struct _FA39A5CF25124FDDCC1018220017DEE1 {isMutable *objects;char var0;_860717418203B9502EAEBBB0D8EC2975 list;};
typedef void (*objc_uncaught_exception_handler)(id exception);
typedef id (*objc_exception_preprocessor)(id exception);
struct objc_method_description {SEL name;char *types;};
typedef void (*objc_exception_handler)(id unused, void *context);
struct _NSRunArrayItem {unsigned long long var0;id var1;};
struct _NSStringBuffer {unsigned long long var0;unsigned long long var1;id var2;unsigned long long var3;unsigned long long var4;unsigned short var5[32];unsigned short var6;unsigned short var7;};
struct objc_object {Class isa;};
struct _NSLTToken {unsigned short var0;unsigned char var1;unsigned char var2;unsigned int var3;_0EF86C8768D86322AD29A07844484C1E var4;};
struct _NSZombie_ {Class isa;};
struct objc_cache {unsigned int mask;unsigned int occupied;Method buckets[1];};
struct NSObject {Class isa;};
struct NSStream {NSObject super;};
struct NSString {NSObject super;};
struct Protocol {NSObject super;};
struct _NSClStr {NSString super;unsigned long long length;unsigned short *characters;};
struct __NSAtom {Class isa;};
struct NSArray {NSObject super;};
struct NSBlock {NSObject super;};
struct NSCoder {NSObject super;};
struct NSError {NSObject super;void *_reserved;signed long long _code;NSString *_domain;NSDictionary *_userInfo;};
struct NSProxy {Class isa;};
struct NSTimer {NSObject super;};
struct NSValue {NSObject super;};
struct NSData {NSObject super;};
struct NSDate {NSObject super;};
struct NSLock {NSObject super;void *_priv;};
struct NSNull {NSObject super;};
struct NSPipe {NSObject super;};
struct NSPort {NSObject super;};
struct NSTask {NSObject super;};
struct NSUUID {NSObject super;};
struct NSUnit {NSObject super;NSString *_symbol;};
struct Object {Class isa;};
struct NSSet {NSObject super;};
struct NSURL {NSObject super;NSString *_urlString;NSURL *_baseURL;void *_clients;void *_reserved;};
struct NSFileCoordinatorAccessorBlockCompletion {NSObject super;id block;int count;};
struct _CFPasteboardClientConnectionContext {NSObject super;os_unfair_lock_s _lock;__CFArray *_cleanupBlocks;};
struct NSMetadataQueryAttributeValueTuple {NSObject super;id _attr;id _value;unsigned long long _count;void *_reserved;};
struct _NSItemProviderCopyingLoadOperator {NSObject super;NSItemProvider *_itemProvider;NSDictionary *_loadedItems;_0B20F48E2CD2D778BD1F216BA81B71CE _destinationProcessAuditToken;};
struct _2BAE054620EC7E7505E6465E4D70EA1A {unsigned int var0;unsigned int var1;id var2;_fields var3;char var4;char var5;char var6[2];};
union _49E9799CDA900F1990C6977EC43C0EC8 {_6D51F0630E31178F611E5CCDF3897CA9 var0;_61A80719B04F7407D3E47539F1B23CAA var1;unsigned char var2[48];};
struct _65C1E36B86EDFBA0ECD7EEB9BC97EFE8 {int version;void (*throw_exc)(id);void (*try_enter)(void *);void (*try_exit)(void *);id (*extract)(void *);int (*match)(Class, id);};
union _6C9E119184E2A78FCD58C69C7BF8B15D {_785B65FBE112400917D8E62D20E33E6A d;_CE7756A4F2841A54A4B1291B655D27A7 s;};
union _9E24C3BD43B2DB696201E6A2EFADF0D4 {_2017856406EA56F0238CF0D9CD35FE6E var0;_957C33D182EC917D8CC86FE5FB079D28 var1;};
union _B09B2325CF3AF9E0428A1C6AA7A0DFCB {_D2F10589E0F27BF0B26B8B03B59B0534 _singleRange;_C9F83CCA9902694B07BD70569193FE6A _multipleRanges;};
union _DEBF68B1382F8A8637FBC3A4A49936AD {_4ACC98AB9204ACA7EAFA8DF063A4996A extern_data;_804B73222E2EE60B1274989425A6A19A inline_slab;unsigned char padding[48];};
struct _NSMetadataQuerySortingPseudoItem {NSObject super;id _attr;};
struct _CFXNotificationRegistrationBase {NSObject super;_CFXNotificationRegistrationContainer *_parent;os_lock_handoff_s _lock;};
struct _NSMetadataQueryResultGroupArray {NSArray super;id _group;};
struct NSFilePresenterOperationRecord {NSObject super;NSString *operationDescription;signed long long state;id reactor;};
struct NSItemRepresentationLoadResult {NSObject super;char _wasOpenedInPlace;NSData *_data;NSSecurityScopedURLWrapper *_urlWrapper;id _cleanupHandler;NSError *_error;NSString *_archivedObjectClassName;};
struct NSPositionalSpecifierMoreIVars {NSObject super;NSScriptObjectSpecifier *insertionContainerSpecifier;NSString *insertionKey;unsigned long long insertionPosition;char evaluated;id insertionContainer;char specifiesSetting;signed long long insertionIndex;char insertionReplaces;};
struct _CFPrefsPendingKVONotification {NSObject super;NSObject *source;id oldValues;id values;};
struct NSBackgroundActivityScheduler {NSObject super;id _private1;id _private2;id _private3;signed long long _flags;};
struct NSFilePresenterRelinquishment {NSObject super;NSCountedSet *_blockingAccessClaimIDs;NSMutableArray *_relinquishReplies;id _reacquirer;char _prerelinquishInProgress;NSMutableArray *_blockingPrerelinquishReplies;};
struct _NSBackgroundActivityInternal {NSObject super;NSString *_identifier;double _interval;double _tolerance;double _delay;id _activity;id _checkInHandler;char _repeats;char _preregistered;char _appRefresh;OS_xpc_object *_additionalProperties;signed long long _qualityOfService;OS_xpc_object *_currentActivity;};
struct NSItemProviderRepresentation {NSObject super;id _loader;NSString *_typeIdentifier;signed long long _visibility;signed long long _preferredRepresentation;};
struct NSURLConnectionDelegateProxy {NSObject super;id delegate;unsigned long long flags;};
struct NSAutoContentAccessingProxy {NSProxy super;id _target;};
struct NSFilePresenterManagedProxy {NSObject super;unsigned long long _filePresenterResponses;NSFilePresenterXPCInterface *_xpcProxy;NSFilePresenterXPCInterface *_nonboostingXPCProxy;NSFileAccessProcessManager *_processManager;id _errorHandler;};
struct _NSMetadataQueryResultArray {NSArray super;id _query;int _rc;};
struct NSFileAccessProcessManager {NSObject super;OS_xpc_object *_connection;OS_dispatch_queue *_queue;id _suspensionHandler;NSArray *_urls;BKSApplicationStateMonitor *_monitor;id _assertionToken;int _pendingMessageCount;};
struct NSMetadataQueryResultGroup {NSObject super;id _private[9];unsigned long long _private2[1];void *_reserved;};
struct NSScriptCommandDescription {NSObject super;NSString *_suiteName;NSString *_plistCommandName;unsigned int _classAppleEventCode;unsigned int _idAppleEventCode;NSString *_objcClassName;NSObject *_resultTypeNameOrDescription;unsigned int _plistResultTypeAppleEventCode;id _moreVars;};
struct _NSIPCallbackSerialization {NSObject super;id _endBlock;char _hasBegun;char _hasEnded;NSUUID *_UUID;};
struct _NSXPCConnectionExportInfo {NSObject super;id _exportedObject;NSXPCInterface *_exportedInterface;signed long long _exportCount;};
struct __NSOperationQueueInternal {NSObject super;os_unfair_lock_s __queueLock;NSOperation *__firstOperation;NSOperation *__lastOperation;NSOperation *__pendingFirstOperation;NSOperation *__pendingLastOperation;NSOperation *__firstPriOperation[5];NSOperation *__lastPriOperation[5];unsigned long long __operationCount;NSPointerArray *__activeThreads;signed long long __maxNumOps;int __actualMaxNumOps;int __numExecOps;unsigned char __mainQ;char __suspended;char __overcommit;unsigned char __propertyQoS;OS_dispatch_queue *__dispatch_queue;OS_dispatch_queue *__backingQueue;NSString *__name;char __nameBuffer[320];unsigned char __operationsObserverCount;unsigned char __operationCountObserverCount;unsigned char __suspendedObserverCount;};
struct NSDistantObjectTableEntry {NSObject super;NSConnection *_conn;NSDistantObject *_proxy;id _localObject;unsigned int _wireID;};
struct NSProgressSubscriberProxy {NSObject super;NSProgressSubscriber *_forwarder;id _subscriberID;NSString *_bundleID;NSString *_lowerCaseCategoryName;NSFileAccessNode *_itemLocation;NSXPCConnection *_connection;};
struct NSUbiquitousKeyValueStore {NSObject super;id _private1;id _private2;id _private3;void *_private4;void *_reserved[3];int _daemonWakeToken;char _disabledSuddenTermination;};
struct _NSXPCInterfaceMethodInfo {NSObject super;NSMethodSignature *_replyMethodSignature;int _replyPosition;NSArray *_replyArguments;NSArray *_arguments;unsigned long long _version;Class _returnClass;char _sendsProxyInArgument;char _receivesProxyInReply;};
struct __NSGenericDeallocHandler {Class isa;id _block;};
struct NSAEDescriptorTranslator {NSObject super;id _descToObjMap;id _objToDescMap;};
struct NSKeyValueContainerClass {NSObject super;Class _originalClass;void *_cachedObservationInfoImplementation;void *_cachedSetObservationInfoImplementation;char _cachedSetObservationInfoTakesAnObject;_4310EBFDEBC3AA4DD7F5B63B8F5F071A *_notifyingInfo;};
struct NSProgressPublisherProxy {NSObject super;NSProgressPublisher *_forwarder;id _publisherID;NSString *_lowerCaseCategoryName;NSFileAccessNode *_itemLocation;NSXPCConnection *_connection;NSProgressValues *_values;};
struct NSScriptCommandMoreIVars {NSObject super;NSAppleEventHandling *appleEventHandling;NSArray *flattenedReceivers;unsigned long long nextReceiverIndex;NSMutableArray *collectedResults;Class cachedHanderInvocationReceiverClass;NSInvocation *cachedHandlerInvocation;int errorNumber;NSString *errorString;NSAppleEventDescriptor *errorOffendingObjectDescriptor;NSAppleEventDescriptor *errorExpectedTypeDescriptor;};
struct NSScriptExecutionContext {NSObject super;id _topLevelObject;id _objectBeingTested;id _rangeContainerObject;id _moreVars;};
struct NSScriptSuiteDescription {NSObject super;_B08422DDE8B03C468B12978782CFC77B _properties;NSString *_plistSuiteName;char _usesUnnamedArguments;char _padding[3];NSArray *_unreconciledClassSynonymDescriptions;NSArray *_unreconciledClassExtensionDescriptions;NSDictionary *_cachedClassDescriptionsByName;NSDictionary *_cachedCommandDescriptionsByName;};
struct NSUserNotificationCenter {NSObject super;id _internal;};
struct __NSOrderedSetArrayProxy {NSArray super;id _orderedSet;};
struct NSScriptCoercionHandler {NSObject super;id _coercers;};
struct NSAppleEventDescriptor {NSObject super;AEDesc _desc;char _hasValidDesc;char _padding[3];};
struct NSPersonNameComponents {NSObject super;id _private;};
struct __CFPrefsWeakObservers {NSObject super;__cfobservers_t values;unsigned long long count;};
struct __NSOrderedSetSetProxy {NSSet super;id _orderedSet;};
struct __NSSingleObjectArrayI {NSArray super;id _object;};
typedef int (*objc_exception_matcher)(Class catch_type, id exception);
struct NSFileProviderService {NSObject super;NSString *_name;id _endpointCreatingProxy;OS_dispatch_group *_requestFinishedGroup;};
struct NSPositionalSpecifier {NSObject super;NSScriptObjectSpecifier *_specifier;unsigned long long _unadjustedPosition;NSScriptClassDescription *_insertionClassDescription;id _moreVars;void *_reserved0;};
struct _CFXPreferencesHandle {NSObject super;_CFXPreferences *prefs;os_unfair_lock_s lock;unsigned int overrideEUID;};
struct _NSDOConversationInfo {NSObject super;id doConversation;unsigned long long doConversationCount;id doConversationRequest;};
struct _NSProgressSubscriber {NSObject super;id _publishingHandler;NSString *_subscriberID;NSMutableDictionary *_proxiesByPublisherID;char _started;NSLock *_lock;};
struct _NSRefCountedRunArray {os_unfair_lock_s var0;unsigned long long var1;unsigned long long var2;unsigned int var3;unsigned int var4;unsigned int var5;unsigned int var6;_NSRunArrayItem var7[];};
struct _CFPasteboardWeakRef {NSObject super;id pboardWeakRef;};
struct __NSSingleObjectSetI {NSSet super;id element;};
struct NSNotificationQueue {NSObject super;id _notificationCenter;id _asapQueue;id _asapObs;id _idleQueue;id _idleObs;};
struct NSObservationSource {NSObject super;id _observers[4];};
struct NSRegularExpression {NSObject super;NSString *_pattern;unsigned long long _options;void *_internal;id _reserved1;int _checkout;int _reserved2;};
struct _NSTimerBlockTarget {NSObject super;id _block;};
struct _NSXPCDistantObject {NSObject super;NSXPCConnection *_connection;NSXPCInterface *_remoteInterface;NSDictionary *_userInfo;id _errorBlock;unsigned long long _proxyNumber;unsigned long long _generationCount;unsigned long long _flags;double _timeout;};
struct __NSArrayI_Transfer {NSArray super;unsigned long long _used;id *_list;};
struct NSFileReactorProxy {NSObject super;NSXPCConnection *_client;id _reactorID;NSFileAccessNode *_itemLocation;unsigned int _effectiveUserIdentifier;};
struct NSLayoutConstraint {NSObject super;id _container;id _firstAnchor;id _secondAnchor;double _constant;double _loweredConstant;id _markerAndPositiveExtraVar;id _negativeExtraVar;unsigned long long _layoutConstraintFlags;float _coefficient;float _priority;};
struct NSLinguisticTagger {NSObject super;NSArray *_schemes;unsigned long long _options;NSString *_string;id _orthographyArray;id _tokenArray;void *_reserved;};
struct NSUndoManagerProxy {NSProxy super;NSUndoManager *_manager;Class _targetClass;};
struct NSUserNotification {NSObject super;id _internal;};
struct _CFPasteboardEntry {NSObject super; __CFString *_flavorName; __CFUUID *_uuid; __CFData *_data;OS_xpc_object *_shmem;unsigned long long _shmemLength;unsigned long long _dataFlags;unsigned char _isHidden;id _promisor;id _asyncPromisor;int _promiseState;OS_xpc_object *_promisorConnection;int _itemIdentifier;unsigned char _isPendingFlush;unsigned char _extensionConsumed;};
struct _CFPasteboardStore {NSObject super;__CFString *_name;OS_dispatch_queue *_queue;_CFPasteboardCache *_cache;unsigned char _restrictSandboxExtension;int _allowedSandboxExtensionPID;_0B20F48E2CD2D778BD1F216BA81B71CE _allowedSandboxExtensionAuditToken;_CFPasteboardClientInstanceID *_owner;unsigned char _ownerHasPendingChanges;__CFDictionary *_clientInstancesByUUID;__CFSet *_clientInstancesWithCacheInfoForCurrentGeneration;};
struct _NSFileManagerInfo {NSObject super;id _delegate;id _handler;};
struct __NSMessageBuilder {Class isa;id _target;id *_addr;};
struct NSAffineTransform {NSObject super;_56410E50515CD364A0EE7DB1BB255EC6 _transformStruct;};
struct NSFileAccessClaim {NSObject super;NSXPCConnection *_client;NSString *_claimID;NSString *_purposeIDOrNil;char _cameFromSuperarbiter;unsigned long long _blockageCount;char _didWait;char _isRevoked;NSMutableArray *_claimerBlockageReasons;NSError *_claimerError;NSMutableOrderedSet *_pendingClaims;NSMutableSet *_blockingClaims;NSCountedSet *_blockingReactorIDs;NSMutableArray *_providerCancellationProcedures;NSMutableDictionary *_reacquisitionProceduresByPresenterID;NSMutableArray *_revocationProcedures;NSMutableArray *_devaluationProcedures;NSMutableArray *_finishingProcedures;NSFileAccessProcessManager *_processManager;OS_dispatch_semaphore *_claimerWaiter;char _hasInvokedClaimer;id _claimerOrNil;id _serverClaimerOrNil;NSMutableArray *_sandboxTokens;OS_dispatch_queue *_arbiterQueue;id _originatingReactorQueueID;};
struct NSFileCoordinator {NSObject super;id _accessArbiter;id _fileReactor;id _purposeID;NSURL *_recentFilePresenterURL;id _accessClaimIDOrIDs;char _isCancelled;NSMutableDictionary *_movedItems;};
struct NSKeyedUnarchiver {NSCoder super;id _delegate;unsigned int _flags;id _objRefMap;id _replacementMap;id _nameClassMap;id _tmpRefObjMap;id _refObjMap;int _genericKey;id _data;void *_offsetData;id _containers;id _objects; char *_bytes;unsigned long long _len;id _helper;void *_reserved0;};
struct NSURLKeyValuePair {NSObject super;id key;id value;unsigned long long hash;};
struct NSWeakObjectValue {NSValue super;void *_value;id _object;char _useFallback;};
struct __NSArrayReversed {NSArray super;id _array;unsigned long long _cnt;};
struct __NSBlockVariable {NSObject super;Block_byref *forwarding;int flags;int size;void *byref_keep;void *byref_destroy;id containedObject;};
struct NSAKDeserializer {NSObject super;id ds;};
struct NSFileAccessNode {NSObject super;NSFileAccessNode *_parent;NSString *_name;NSString *_normalizedName;NSFileAccessNode *_symbolicLinkDestination;unsigned long long _symbolicLinkReferenceCount;NSMutableDictionary *_childrenByNormalizedName;id _presenterOrPresenters;NSFileProviderProxy *_provider;id _accessClaimOrClaims;char _isArbitrationBoundary;char _isFilePackageIsFigured;char _isFilePackage;NSString *_lastRequestedChildName;NSFileAccessNode *_lastRequestedChild;id _progressPublisherOrPublishers;id _progressSubscriberOrSubscribers;};
struct NSOperationQueue {NSObject super;id _private;void *_reserved;};
struct __CFNotification {NSObject super;id _name;id _object;id _userInfo;char _fouSemantics;char _dyingObject;};
struct NSDistantObject {NSProxy super;id _knownSelectors;unsigned long long _wireCount;unsigned long long _refCount;id _proto;unsigned short ___2;unsigned char ___1;unsigned char _wireType;id _remoteClass;};
struct NSKeyedArchiver {NSCoder super;void *_stream;unsigned long long _flags;id _delegate;id _containers;id _objects;id _objRefMap;id _replacementMap;id _classNameMap;id _conditionals;id _classes;unsigned long long _genericKey;void *_cache;unsigned long long _cacheSize;unsigned long long _estimatedCount;void *_reserved2;id _visited;void *_reserved0;};
struct NSMetadataQuery {NSObject super;unsigned long long _flags;double _interval;id _private[11];void *_reserved;};
struct NSObservedValue {NSObject super;id _contents;id _lastOriginator;int _tag;};
struct NSXPCConnection {NSObject super;void *_xconnection;id _repliesExpected;OS_dispatch_queue *_userQueue;unsigned int _state;unsigned int _state2;id _interruptionHandler;id _invalidationHandler;id _exportInfo;id _repliesRequested;id _importInfo;NSObject *_otherInfo;id _reserved1;id _lock;NSXPCInterface *_remoteObjectInterface;NSString *_serviceName;NSXPCListenerEndpoint *_endpoint;id _eCache;id _dCache;};
struct NSAKSerializer {NSObject super;id ss;};
struct NSBoundKeyPath {NSObject super;id _rootObject;NSString *_keyPath;};
struct NSConcreteData {NSData super;unsigned long long _length;void *_bytes;id _deallocator;};
struct NSConcreteTask {NSTask super;_opaque_pthread_mutex_t _lock;NSMutableDictionary *_dictionary;id _terminationHandler;OS_dispatch_source *_dsrc;NSPort *_tmpPort;signed long long _suspendCount;int _pid;int _platformExitInfo;char _hasExeced;char _isRunning;char _hasPostedDeathNotification;char _terminationRun;char _qos;};
struct NSItemProvider {NSObject super;id _previewImageHandler;NSMutableDictionary *_metadata;_NSItemProviderLoading *_loadOperator;NSMutableDictionary *_representationByType;NSMutableOrderedSet *_typeOrder;NSArray *_representations;NSMutableDictionary *_preferredRepresentationByType;NSUUID *_UUID;NSString *_suggestedName;NSString *_sanitizedSuggestedName;NSDictionary *_userInfo;NSItemProviderDataTransferDelegate *_dataTransferDelegate;};
struct NSLayoutAnchor {NSObject super;id _referenceItem;signed long long _attr;NSISVariable *_variable;NSString *_name;id _cachedReferenceItems;id _reserved;int _type : 2;int _reserved3 : 30;};
struct NSMetadataItem {NSObject super;id _item;void *_reserved;};
struct NSSharedKeySet {NSObject super;char *_g;unsigned char _select;void *_rankTable;unsigned int _M;unsigned int _factor;unsigned int _numKey;unsigned int *_seeds;id *_keys;NSSharedKeySet *_subSharedKeySet;unsigned char _algorithmType;};
struct NSSubrangeData {NSData super;_NSRange _range;NSData *_data;};
struct NSURLQueueNode {NSObject super;id object;NSURLQueueNode *next;};
struct NSUserActivity {NSObject super;id _internal;id _delegate;id _frameworkDelegate;char _eligibleForPrediction;};
struct NSUserDefaults {NSObject super;id _kvo_;__CFString *_identifier_;__CFString *_container_;void *_reserved[2];};
struct NSXMLSAXParser {NSObject super;char _hadError;char _afterEntityLookup;char _isSingleDTDNode;signed long long _parserFlags;unsigned long long _fidelityMask;_xmlSAXHandler *_saxHandler;_xmlParserCtxt *_context;NSData *_data;NSURL *_url;NSXMLNode *_root;NSXMLNode *_current;id *_error;NSMutableString *_content;NSMutableString *_whitespace;NSXMLNode *_text;};
struct NSXPCInterface {NSObject super;Protocol *_protocol;void *_reserved2;id _reserved1;};
struct __CFPasteboard {__CFRuntimeBase var0;__CFString *var1;id var2;__CFUUID *var3;__CFArray *var4;unsigned char var5;id var6;id var7;unsigned char var8;unsigned char var9;unsigned char var10;unsigned char var11;};
struct __NSFrozenSetM {NSSet super;_EA5A74CDAED071D34B105DF63C354AC2 storage;__cow_state_t *cow;};
struct CFPrefsDaemon {NSObject super;OS_xpc_object *_listener; char *_name;int _role;__CFSet *_sourceCache;os_unfair_lock_s _sourceCacheLock;OS_xpc_object *_agentConnections;OS_dispatch_queue *_agentQueue;char _testMode;unsigned int *_shmem;};
struct CFPrefsSource {NSObject super;_CFXPreferences *_containingPreferences;__CFDictionary *_dict;__CFPrefsWeakObservers *_observers;signed long long _generationCount;unsigned int *shmemEntry;unsigned int lastKnownShmemState;os_unfair_lock_s _lock;char _isSearchList;};
struct NSFileVersion {NSObject super;NSURL *_fileURL;id _addition;id _deadVersionIdentifier;id _nonLocalVersion;NSURL *_contentsURL;char _isBackup;NSString *_localizedName;NSString *_localizedComputerName;NSDate *_modificationDate;char _isResolved;char _contentsURLIsAccessed;id _reserved;NSString *_name;};
struct NSFileWrapper {NSObject super;NSDictionary *_fileAttributes;NSString *_preferredFileName;NSString *_fileName;id _contents;id _icon;id _moreVars;};
struct NSLookupMatch {NSObject super;unsigned long long _matchType;_NSRange _range;double _score;NSTextCheckingResult *_dataDetectorResult;NSString *_languageIdentifier;};
struct NSMessagePort {NSPort super;void *_port;id _delegate;};
struct NSUndoManager {NSObject super;id _undoStack;id _redoStack;NSArray *_runLoopModes;unsigned long long _NSUndoManagerPrivate1;id _target;id _proxy;void *_NSUndoManagerPrivate2;void *_NSUndoManagerPrivate3;};
struct NSXPCListener {NSObject super;void *_xconnection;OS_dispatch_queue *_userQueue;void *reserved0;NSXPCListenerDelegate *_delegate;NSString *_serviceName;unsigned long long _state;id _reserved1;id _reserved2;};
struct _NSJSONReader {NSObject super;id input;int kind;NSError *error;};
struct _NSUndoObject {NSObject super;_NSUndoObject *next;_NSUndoObject *previous;id _target;};
struct NSConnection {NSObject super;id receivePort;id sendPort;id delegate;int busy;int localProxyCount;int waitCount;id delayedRL;id statistics;unsigned char isDead;unsigned char isValid;unsigned char wantsInvalid;int authGen : 1;int authCheck : 1;int _reserved1 : 1;int _reserved2 : 1;int doRequest : 1;int isQueueing : 1;int isMulti : 1;int invalidateRP : 1;id ___1;id ___2;id runLoops;id requestModes;id rootObject;void *registerInfo;id replMode;id classInfoImported;id releasedProxies;id reserved;};
struct NSExpression {NSObject super;_expressionFlags _expressionFlags;unsigned int reserved;unsigned long long _expressionType;};
struct NSISVariable {NSObject super;NSISVariableDelegate *_delegate;NSMapTable *_overflowEngines;NSISEngine *_engines[3];_B57F59D398145097F81AD3202A6602D5 _engineVarIndexes[3];unsigned int _ident;};
struct NSInvocation {NSObject super;void *_frame;void *_retdata;id _signature;id _container;unsigned char _retainedArgs;unsigned char _reserved[15];};
struct NSKeyBinding {NSObject super;Class _class;NSString *_key;void *_funcP;};
struct NSLayoutRect {NSObject super;NSLayoutXAxisAnchor *_leadingAnchor;NSLayoutYAxisAnchor *_topAnchor;NSLayoutDimension *_heightAnchor;NSLayoutDimension *_widthAnchor;NSString *_name;id _reserved1;};
struct NSSocketPort {NSPort super;void *_receiver;id _connectors;void *_loops;void *_data;id _signature;id _delegate;id _lock;unsigned long long _maxSize;unsigned long long _useCount;unsigned long long _reserved;};
struct NSUnarchiver {NSCoder super;void *datax;unsigned long long cursor;_NSZone *objectZone;unsigned long long systemVersion;char streamerVersion;char swap;char unused1;char unused2;void *pointerTable;void *stringTable;id classVersions;signed long long lastLabel;void *map;void *allUnarchivedObjects;id reserved;};
struct __NSObserver {NSObject super;NSNotificationCenter *nc;NSOperationQueue *queue;NSString *name;id object;id block;};
struct NSException {NSObject super;NSString *name;NSString *reason;NSDictionary *userInfo;id reserved;};
struct NSLeafProxy {Class isa;NSString *dir;NSString *file;NSDocInfo *docInfo;signed long long refCount;id realObject;};
struct NSOperation {NSObject super;id _private;int _private1;int _private1b;};
struct NSPredicate {NSObject super;_predicateFlags _predicateFlags;unsigned int reserved;};
struct NSURLHandle {NSObject super;NSMutableArray *_clients;id _data;unsigned long long _status;signed long long _reserved;};
struct NSXMLParser {NSObject super;id _reserved0;id _delegate;id _reserved1;id _reserved2;id _reserved3;_xmlSAXHandler *_saxHandler;_xmlParserCtxt *_parserContext;unsigned long long _parserFlags;NSError *_error;NSMutableArray *_namespaces;__CFDictionary *_slowStringMap;char _delegateAborted;char _haveDetectedEncoding;NSData *_bomChunk;unsigned long long _chunkSize;NSSet *_allowedEntityURLs;NSURL *_url;unsigned long long _externalEntityResolvingPolicy;};
struct CFPDSource {NSObject super;CFPrefsDaemon *_cfprefsd;CFPDDataBuffer *_plist;OS_xpc_object *_pendingChangesQueue;unsigned long long _pendingChangesSize;__CFString *_userName;__CFString *_domain; char *_actualPath; char *_pathToTemporaryFileToWriteTo;OS_dispatch_group *_inProgressWriteGroup;__CFSet *_observingConnections;os_unfair_lock_s _observingConnectionsLock;os_unfair_lock_s _lock;unsigned int _lastEuid;unsigned int _lastEgid;int _fileProtectionClass;signed short _generationShmemIndex;char _handlingRequest;char _dirty;char _byHost;char _managed;char _managedUsesContainer;char _neverCache;char _checkedForNonPrefsPlist;char _restrictedReadability;char _waitingForDeviceUnlock;char _watchingParentDirectory;char _disableBackup;};
struct NSMachPort {NSPort super;id _delegate;unsigned long long _flags;unsigned int _machPort;unsigned long long _reserved;};
struct NSProgress {NSObject super;NSProgress *_parent;signed long long _reserved4;id _values;id _resumingHandler;id _cancellationHandler;id _pausingHandler;id _prioritizationHandler;unsigned long long _flags;id _userInfoProxy;NSString *_publisherID;id _reserved5;signed long long _reserved6;signed long long _reserved7;signed long long _reserved8;NSMutableDictionary *_acknowledgementHandlersByLowercaseBundleID;NSMutableDictionary *_lastNotificationTimesByKey;NSMutableDictionary *_userInfoLastNotificationTimesByKey;NSLock *_lock;NSMutableSet *_children;};
struct NSURLQueue {NSObject super;unsigned long long count;NSURLQueueNode *head;NSURLQueueNode *tail;id monitor;char waitOnTake;char _pad1;char _pad2;char _pad3;};
struct NSXPCCoder {NSCoder super;NSObject *_userInfo;id _reserved1;};
struct __NSArrayI {NSArray super;unsigned long long _used;id _list[];};
typedef id (*__objc_IMP)(id, SEL);
struct objc_super {id receiver;Class cls;};
struct NSDocInfo {NSObject super;signed long long time;unsigned short mode;_D9A998EC83CE1611B65DE646F426508A flags;};
struct NSRunLoop {NSObject super;id _rl;id _dperf;id _perft;id _info;id _ports;void *_reserved[6];};
struct NSXMLNode {NSObject super;NSXMLNode *_parent;id _objectValue;int _kind : 4;int _index : 28;int _private;};
struct NSThread {NSObject super;id _private;unsigned char _bytes[44];};
struct __NSSetI {NSSet super;unsigned char _used[8];int _szidx : 6;id _list[];};
struct NSCache {NSObject super;id _delegate;void *_private[5];void *_reserved;};
struct CGRect {CGPoint origin;CGSize size;};
struct _NSRemotePasteboardFetchOperation {NSObject super;id _nsOperationIvars[2];UAPasteboardItemProviding *_provider;os_unfair_lock_s _dataLock;NSData *_data;NSError *_error;char _isExecuting;char _isFinished;};
struct _NSXPCConnectionExpectedReplyInfo {NSObject super;NSBlock *_replyBlock;id _errorBlock;id _cleanupBlock;SEL _selector;NSXPCInterface *_interface;NSDictionary *_userInfo;unsigned long long _proxyNumber;};
struct _NSItemProviderTypeCoercion {NSObject super;id _value;Class _targetClass;};
struct _NSUndoLightInvocation {_NSUndoObject super;SEL _selector;id _arg;};
struct _CFPrefsClientContext {NSObject super;id _cfprefsd;__CFDictionary *_suiteCache;__CFSet *_observedSources;OS_xpc_object *_entitlements;__CFBoolean *_sandboxed;os_unfair_lock_s _lock;char _isPlatformBinary;char _impersonatingAnotherProcess;char _hasInFlightKVONotifications;char _didDeferKVONotifications;char _valid;};
struct __NSOperationInternal {NSObject super;os_unfair_lock_s __lock;NSOperation *__prevOp;NSOperation *__nextOp;NSOperation *__nextPriOp;NSOperationQueue *__queue;NSMutableArray *__dependencies;NSHashTable *__down_dependencies;signed long long __unfinished_deps;id __completion;void *__obsInfo;void *__implicitObsInfo;double __thread_prio;unsigned char __state;char __prio;char __cached_isReady;char __isCancelled;unsigned char __propertyQoS;_opaque_pthread_mutex_t __wait_mutex;_opaque_pthread_cond_t __wait_cond;char *__nameBuffer;id __activity;id __schedule;unsigned char __isExecutingObserverCount;unsigned char __isFinishedObserverCount;unsigned char __isReadyObserverCount;unsigned char __isCancelledObserverCount;char _shouldRemoveDependenciesAfterFinish;};
struct _NSThreadPerformInfo {NSObject super;id target;SEL selector;id argument;NSMutableArray *modes;NSCondition *waiter;char *signalled;};
struct _NSAETranslatorData {NSObject super;id translator;SEL selector;};
struct _NSXPCInterfaceInfo {NSObject super;unsigned long long _remoteVersion;os_unfair_lock_s _knownSelectorsLock;__CFDictionary *_knownSelectors;__CFDictionary *_methodInfo;Class _xpcDOSubclass;};
struct NSExtensionContext {NSObject super;char __dummyExtension;NSArray *_inputItems;NSUUID *__UUID;id __requestCleanUpBlock;_NSExtensionContextHosting *__extensionHostProxy;_NSExtensionContextVending *__extensionVendorProxy;NSXPCConnection *__auxiliaryConnection;NSXPCListener *__auxiliaryListener;id __processAssertion;id __principalObject;OS_os_transaction *__transaction;_0B20F48E2CD2D778BD1F216BA81B71CE __extensionHostAuditToken;};
struct NSKeyValueAccessor {NSObject super;id _containerClassID;NSString *_key;unsigned long long _hash;void *_implementation;SEL _selector;unsigned long long _extraArgumentCount;void *_extraArgument1;void *_extraArgument2;void *_extraArgument3;};
struct _CFStreamDelegate {NSObject super;unsigned long long _flags;_3FA37093598C0C5E3447A96743C089CD _client;_5F076CAA1E6C4D6279E2F08356AD9AB1 _cb;};
struct NSSortDescriptor {NSObject super;unsigned long long _sortDescriptorFlags;NSString *_key;SEL _selector;id _selectorOrBlock;};
struct NSZipFileArchive {NSObject super;NSDictionary *_contents;NSData *_data;id _provider;signed long long _desc;NSString *_path;NSArray *_names;NSDictionary *_properties;NSMutableDictionary *_cachedContents;void *_reserved;__zFlags _zFlags;void *_reserved2[5];};
struct _NSAECoercerData {NSObject super;id coercer;SEL selector;};
struct NSScriptCommand {NSObject super;NSScriptCommandDescription *_commandDescription;id _directParameter;NSScriptObjectSpecifier *_receiversSpecifier;id _evaluatedReceivers;NSDictionary *_arguments;NSMutableDictionary *_evaluatedArguments;_E33443C51371EDD357420B5C8E462196 _flags;id _moreVars;void *_reserved;};
struct NSXMLTreeReader {NSObject super;char _hadError;char _additiveContent;char _isSingleDTDNode;char _wasEmpty;char _isMissingDTD;char _elementClassOverridden;signed long long _externalEntityLoadingPolicy;unsigned long long _fidelityMask;NSData *_data;NSString *uri;NSURL *_url;NSSet *_allowedEntityURLs;NSXMLNode *_root;NSXMLNode *_current;id *_error;NSMutableString *_content;NSString *_whitespace;NSXMLNode *_text;NSMapTable *_xmlCharToNSString;NSMapTable *_xmlCharHashToNSString;void *_readerCharacters;_xmlTextReader *_reader;Class _documentClass;Class _dtdClass;Class _dtdNodeClass;Class _elementClass;Class _nodeClass;};
struct _NSObserverList {NSObject super;id _owner;id _observers;unsigned int _observerCount;os_unfair_lock_s _observersLock;};
struct NSFileWatcher {NSObject super;OS_dispatch_queue *_queue;_0B20F48E2CD2D778BD1F216BA81B71CE _auditToken;NSURL *_url;id _observer;char _isWatching;OS_dispatch_source *_eventSource;unsigned long long _lastObservedEventID;__FSEventStream *_eventStream;char _eventsAreAboutDirectory;char _isUnsettled;NSFileWatcherObservations *_itemObservations;NSMutableDictionary *_subitemObservationsByEventPath;NSURL *_fileReferenceURL;NSString *_formerPath;NSURL *_formerURL;};
struct NSSpellServer {NSObject super;id _delegate;signed long long _caseSensitive;id _spellServerConnection;id _dictionaries;NSArray *_learnedDictionaries;__ssFlags _ssFlags;id _checker;void *_reservedSpellServer;};
struct _NSThreadData {NSObject super;id dict;id name;id target;SEL selector;id argument;int seqNum;unsigned char qstate;char qos;unsigned char cancel;unsigned char status;id performQ;NSMutableDictionary *performD;_opaque_pthread_attr_t attr;_opaque_pthread_t *tid;double pri;double defpri;};
struct NSExtension {NSObject super;os_unfair_lock_s _unfairLock;NSString *_identifier;NSString *_version;NSDictionary *_attributes;NSDictionary *_infoDictionary;NSString *_extensionPointIdentifier;id _requestCompletionBlock;id _requestCancellationBlock;id _requestInterruptionBlock;signed long long _wantsDedicatedQueue;id __stashedPlugInConnection;PKPlugIn *__plugIn;NSBundle *__extensionBundle;NSString *__localizedName;NSString *__localizedShortName;id __requestPostCompletionBlock;id __requestPostCompletionBlockWithItems;NSMutableDictionary *__extensionExpirationIdentifiers;NSMutableDictionary *__extensionServiceConnections;NSMutableDictionary *__extensionContexts;NSSet *__allowedErrorClasses;NSUUID *_connectionUUID;};
struct NSIndexSet {NSObject super;_B5C33C3B8A89CDCF6994C29A3007BE67 _indexSetFlags;_B09B2325CF3AF9E0428A1C6AA7A0DFCB _internal;};
struct NSBundle {NSObject super;unsigned long long _flags;id _cfBundle;unsigned long long _reserved2;Class _principalClass;id _initialPath;id _resolvedPath;Class _firstClass;id _lock;};
struct NSXPCDecoder {NSXPCCoder super;unsigned long long _genericIndex;_F2098BF2A0E37B242A5B918199CF4132 _decoder;NSXPCConnection *_connection;_8EF4127CF77ECA3DDB612FCF233DC3A8 *_collections[128];_3C3CFA868A39E31D5F8C5AE768747808 _rootObject;unsigned int _collectionPointer;id _allowedClassesList[128];signed long long _allowedClassesIndex;OS_xpc_object *_oolObjects;};
struct NSISEngine {NSObject super;NSMapTable *_rows;_3A4A6266569CC828676522302F9CEB6C _engineVarTable;_3A4A6266569CC828676522302F9CEB6C _rowTables[2];_3A4A6266569CC828676522302F9CEB6C _colTables[2];NSISVariable *_headForObjectiveRow;_8D73D49930F615E6DD64A8AB30109353 _objectiveRow;NSISVariable *_placeholderHeadForExpressionBeingAdded;NSMutableArray *_variablesWithValueRestrictionViolations;NSMutableArray *_pendingRemovals;NSHashTable *_pendingMarkerDelegates;NSObservable *_variableChangeTransactionSignal;NSMapTable *_variableObservables;_NSISVariableObservable *_dirtyObservables;NSISEngineDelegate *_delegate;NSMapTable *_brokenConstraintPositiveErrors;NSMapTable *_brokenConstraintNegativeErrors;id _unsatisfiabilityHandler;unsigned long long _pivotCount;unsigned long long _variableChangeCount;CGSize _engineScalingCoefficients;NSMutableDictionary *_recordedOperations;NSThread *_allowedBGThread;int _automaticOptimizationDisabledCount;int _engineDelegateCallsDisabledCount;int _variableDelegateCallsDisabledCount;unsigned int _totalChangeCount;unsigned int _changeCountAtLastOptimization;char _revertsAfterUnsatisfiabilityHandler;char _accumulatingRemovals;char _engineNeedsOptimization;char _allowUnoptimizedReads;char _optimizationInProgress;char _accessedFromMainThread;char _engineNeedsRebuildFromConstraints;char _changeNotificationsDirty;};
struct NSISRestrictedToNonNegativeMarkerVariableToBeMinimized {NSISVariable super;};
struct NSISRestrictedToNonNegativeVariableToBeMinimized {NSISVariable super;};
struct _NSItemProviderExtensionVendorLoadOperator {NSObject super;NSUUID *_identifier;NSUUID *_extensionContextIdentifier;};
struct NSISRestrictedToNonNegativeMarkerVariable {NSISVariable super;};
struct NSKeyValueNonmutatingCollectionMethodSet {NSObject super;};
struct NSKeyValueNonmutatingOrderedSetMethodSet {NSKeyValueNonmutatingCollectionMethodSet super;objc_method *count;objc_method *objectAtIndex;objc_method *indexOfObject;objc_method *getObjectsRange;objc_method *objectsAtIndexes;};
struct NSKeyValueMutatingCollectionMethodSet {NSObject super;};
struct NSKeyValueMutatingOrderedSetMethodSet {NSKeyValueMutatingCollectionMethodSet super;objc_method *insertObjectAtIndex;objc_method *removeObjectAtIndex;objc_method *replaceObjectAtIndex;objc_method *insertObjectsAtIndexes;objc_method *removeObjectsAtIndexes;objc_method *replaceObjectsAtIndexes;};
struct NSKeyValueShareableObservationInfoKey {NSObject super;char _addingNotRemoving;NSKeyValueObservationInfo *_baseObservationInfo;NSObject *_additionObserver;NSKeyValueProperty *_additionProperty;unsigned long long _additionOptions;void *_additionContext;NSObject *_additionOriginalObservable;NSKeyValueObservance *_removalObservance;unsigned long long _removalObservanceIndex;unsigned long long _cachedHash;};
struct NSTaggedPointerStringCStringContainer {NSObject super;char cString[16];};
struct _NSPersonNameComponentsStyleFormatter {NSObject super;NSSet *_abbreviatedKeys;_NSPersonNameComponentsStyleFormatter *_fallbackStyleFormatter;NSSet *_keysOfInterest;char _shouldFallBack;char _isEnabled;signed long long _ordering;NSLocale *_locale;NSArray *_orderedTemplate;NSArray *_fallbackDescriptor;NSPersonNameComponentsFormatter *_masterFormatter;};
struct _NSPersonNameComponentsFormatterData {NSObject super;signed long long _style;char _phonetic;char _forceFamilyNameFirst;char _forceGivenNameFirst;char _ignoresFallbacks;NSLocale *_locale;NPNameParser *_nameParser;};
struct NSISRestrictedToNonNegativeVariable {NSISVariable super;};
struct NSKeyValueNonmutatingArrayMethodSet {NSKeyValueNonmutatingCollectionMethodSet super;objc_method *count;objc_method *objectAtIndex;objc_method *getObjectsRange;objc_method *objectsAtIndexes;};
struct NSScriptCommandDescriptionMoreIVars {NSObject super;NSArray *argumentDescriptions;NSString *presentableDescription;NSObject *presentableNameOrNames;NSString *presentableResultDescription;NSArray *synonymDescriptions;NSSet *accessGroups;char isHidden;char isFromLegacyPropertyLists;NSDictionary *cachedArgumentDescriptionsByName;};
struct _NSXPCConnectionExportedObjectTable {NSObject super;_opaque_pthread_mutex_t _lock;_NSXPCConnectionExportInfo *_proxy1;__CFDictionary *_proxyNumberToObject;__CFDictionary *_objectToProxyNumber;unsigned long long _next;char _valid;OS_dispatch_group *_replyGroup;};
struct NSAutoresizingMaskLayoutConstraint {NSLayoutConstraint super;};
struct NSISRestrictedToZeroMarkerVariable {NSISVariable super;};
struct NSScriptCommandConstructionContext {NSObject super;};
struct _42182BDD4B41EBB13A3ACD32661E7921 {offset **list;unsigned int var0;unsigned int size;_94286EE54A7D07CE0A731528046AD1F6 state;};
struct _8727CF87EF637FBC72E2580FFB82C074 {state **buffer;_9E24C3BD43B2DB696201E6A2EFADF0D4 var0;};
struct _BB2000C7CF6CC1B28359570521340B37 {unsigned short inline_capacity;unsigned int var_count;double constant;_DEBF68B1382F8A8637FBC3A4A49936AD data;};
struct _BBB4CBAEB4B9FA30FF2AF8EC4D044ED8 {unsigned short var0;unsigned int var1;double var2;_49E9799CDA900F1990C6977EC43C0EC8 var3;};
struct NSKeyValueNonmutatingSetMethodSet {NSKeyValueNonmutatingCollectionMethodSet super;objc_method *count;objc_method *enumerator;objc_method *member;};
struct NSScriptClassDescriptionMoreIVars {NSObject super;NSString *defaultSubcontainerAttributeKey;NSDictionary *inverseRelationshipKeysByKey;NSString *presentableDescription;NSObject *presentableNameOrNames;NSString *presentablePluralName;NSArray *synonymDescriptions;char isHidden;char isFromLegacyPropertyLists;char isSynonym;NSDictionary *cachedPropertyDescriptionsByKey;NSObject *primitiveTypeNameOrDescription;};
struct NSScriptExecutionContextMoreIVars {NSObject super;NSScriptClassDescription *rangeContainerClassDescription;NSScriptTypeDescription *testedObjectTypeDescription;int errorNumber;NSAppleEventDescriptor *errorOffendingObjectDescriptor;NSAppleEventDescriptor *errorExpectedTypeDescriptor;};
struct _NSConcreteUserNotificationCenter {NSUserNotificationCenter super;NSString *_bundleIdentifier;unsigned long long _maxPresentedNotifications;_NSUserNotificationCenterDelegatePrivate *_delegate;_NSUserNotificationCenterAppKitDelegatePrivate *_appDelegate;unsigned long long _type;char _invalidated;char _needsAuthentication;char _serverConnectionFailure;char _preventApplicationLaunching;unsigned long long _notificationPreferences;OS_xpc_object *_connection;OS_dispatch_queue *_connection_queue;};
struct NSKeyValueMutatingArrayMethodSet {NSKeyValueMutatingCollectionMethodSet super;objc_method *insertObjectAtIndex;objc_method *removeObjectAtIndex;objc_method *replaceObjectAtIndex;objc_method *insertObjectsAtIndexes;objc_method *removeObjectsAtIndexes;objc_method *replaceObjectsAtIndexes;};
struct _NSItemProviderSandboxedResource {NSObject super;char _accessingSecurityScopedResource;NSURL *_resourceURL;NSData *_sandboxExtensionToken;};
struct _NSXPCConnectionRequestedReplies {NSObject super;__CFDictionary *_replyDictionaryTable;__CFDictionary *_progressTable;unsigned long long _requestedReplyCount;unsigned char _invalid;_opaque_pthread_mutex_t _lock;};
struct NSIBPrototypingLayoutConstraint {NSLayoutConstraint super;};
struct NSUserScriptTaskServiceDelegate {NSObject super;};
struct _NSRemotePasteboardDataProvider {NSObject super;signed long long _generation;signed long long _itemIdentifier;__CFString *_flavorName;NSUUID *_uuid;};
struct _NSXPCConnectionExpectedReplies {NSObject super;__CFDictionary *_replyTable;_opaque_pthread_mutex_t _lock;unsigned long long _sequence;};
struct CFPrefsConfigurationFileSource {CFPrefsSource super;};
struct NSEncodingDetectionPlaceholder {NSObject super;unsigned long long nsEncoding;unsigned int cfEncoding;NSString *string;char *bytes;unsigned long long bytesLength;char *bytesStart;};
struct NSFileProviderMessageInterface {NSObject super;NSString *_name;NSString *_itemIdentifier;NSString *_providerIdentifier;};
struct NSKeyValueMutatingSetMethodSet {NSKeyValueMutatingCollectionMethodSet super;objc_method *addObject;objc_method *removeObject;objc_method *intersectSet;objc_method *minusSet;objc_method *unionSet;objc_method *setSet;};
struct NSScriptRecordFieldDescription {NSObject super;NSString *_key;NSObject *_typeNameOrDescription;unsigned int _appleEventCode;char _isHidden;NSString *_presentableDescription;NSString *_presentableName;NSArray *_synonymDescriptions;};
struct NSVariableAssignmentExpression {NSExpression super;NSVariableExpression *_assignmentVariable;NSExpression *_subexpression;};
struct NSXMLElementDeclarationContent {NSXMLNode super;unsigned long long _contentKind;unsigned long long _occurrence;NSString *_name;NSXMLElementDeclarationContent *_leftChild;NSXMLElementDeclarationContent *_rightChild;};
struct NSContentSizeLayoutConstraint {NSLayoutConstraint super;double _huggingPriority;double _compressionResistancePriority;};
struct NSISObjectiveLinearExpression {NSObject super;NSISEngine *_engine;__CFDictionary *_priorityMap;__CFArray *_variablesSortedByPriorityVectors;__CFData *_constant;};
struct NSScriptEnumeratorDescription {NSObject super;unsigned int appleEventCode;char isHidden;NSString *presentableDescription;NSString *presentableName;NSObject *_value;NSArray *_synonymDescriptions;};
struct NSURLFileTypeMappingsInternal {NSObject super;NSDictionary *MIMETypeToExtensionList;NSDictionary *extensionToMIMEType;};
struct _CFPasteboardClientInstanceID {NSObject super; __CFUUID *_uuid;OS_xpc_object *_conn;};
struct _NSPredicateOperatorUtilities {NSObject super;};
struct __NSUnrecognizedTaggedPointer {NSObject super;};
struct NSKeyPathSpecifierExpression {NSExpression super;NSString *_value;};
struct NSScriptingAppleEventHandler {NSObject super;};
struct NSSmartPunctuationController {NSObject super;NSSmartPunctuationClient *_client;NSSmartQuoteOptions *_options;unsigned long long _types;};
struct _NSFileWatcherFileHandleInfo {NSObject super;int fileHandle;char closed;};
struct _NSMetadataQueryPrivateIvars {NSObject super;_NSMetadataQueryResultArray *resultArray;NSObject *pendingKVONotificationArray;};
struct NSFilePresenterXPCMessenger {NSObject super;NSFilePresenter *_filePresenter;OS_dispatch_queue *_queue;NSFilePresenterProxy *_filePresenterProxy;};
struct NSPropertyListSerialization {NSObject super;void *reserved[6];};
struct NSScriptArgumentDescription {NSObject super;NSString *_key;unsigned int _appleEventCode;NSObject *_typeNameOrDescription;char _isOptional;char _isHidden;unsigned long long _requiresAccess;NSString *_presentableDescription;NSObject *_presentableNameOrNames;NSArray *_synonymDescriptions;};
struct NSScriptPropertyDescription {NSObject super;NSString *_key;NSObject *_typeNameOrDescription;unsigned long long _access;char _isHidden;NSSet *_readAccessGroups;NSSet *_writeAccessGroups;NSScriptSuiteDescription *_typeSuiteDescription;};
struct _CFPasteboardPendingPromise {NSObject super;_CFPasteboardEntry *_entry;__CFPasteboard *_pboard;};
struct _NSMetadataItemPrivateIvars {NSObject super;NSMetadataQuery *query;};
struct _NSPersonNameComponentsData {NSObject super;NSString *_givenName;NSString *_familyName;NSString *_middleName;NSString *_namePrefix;NSString *_nameSuffix;NSString *_nickname;NSPersonNameComponents *_phoneticRepresentation;};
struct _NSProgressWithRemoteParent {NSProgress super;NSXPCConnection *_parentConnection;unsigned long long _sequence;};
struct CFPrefsCompatibilitySource {CFPrefsSource super;char _disabled;};
struct NSFileProviderXPCMessenger {NSObject super;NSFileProvider *_fileProvider;OS_dispatch_queue *_queue;NSFileProviderProxy *_fileProviderProxy;};
struct NSScriptSynonymDescription {NSObject super;NSString *name;unsigned int appleEventCode;char isHidden;unsigned int appleEventClassCode;};
struct NSSecurityScopedURLWrapper {NSObject super;char _readonly;char _backedByFileProvider;NSData *_scope;NSURL *_url;NSString *_providerIdentifier;NSString *_domainIdentifier;NSString *_itemIdentifier;};
struct _NSJSONRoundTrippingNumber {NSObject super;NSNumber *_number;NSString *_representation;};
struct _NSKeyedCoderOldStyleArray {NSObject super;void *_addr;unsigned long long _count;unsigned long long _size;char _type;char _decoded;char _padding[2];};
struct _NSXPCConnectionClassCache {NSObject super;_opaque_pthread_mutex_t _lock;NSMutableSet *_cache;};
struct _NSXPCConnectionImportInfo {NSObject super;unsigned long long _generationCount;NSLock *_lock;__CFDictionary *_proxyNumberToCount;NSMutableDictionary *_remoteSideEntitlementCache;};
struct NSEncodingDetectionBuffer {NSObject super;unsigned long long _nsEncoding;unsigned int _cfEncoding;NSEncodingDetectionPlaceholder *_placeholder;char *_bytes;char _bytesAllocated;unsigned long long _bytesIndex;unsigned long long _bytesLength;};
struct NSFileMultipleAccessClaim {NSFileAccessClaim super;NSMutableArray *_readingURLs;unsigned long long *_readingOptions;char *_readingURLsDidChange;NSMutableArray *_writingURLs;unsigned long long *_writingOptions;char *_writingURLsDidChange;NSMutableArray *_readingLocations;NSMutableArray *_writingLocations;NSFileAccessNode *_rootNode;unsigned long long _currentlyLinkResolvingURLIndex;signed long long _readingLinkResolutionCount;};
struct NSFileReadingWritingClaim {NSFileAccessClaim super;NSURL *_readingURL;char _readingURLDidChange;unsigned long long _readingOptions;NSURL *_writingURL;char _writingURLDidChange;unsigned long long _writingOptions;NSFileAccessNode *_readingLocation;NSFileAccessNode *_writingLocation;NSFileAccessNode *_rootNode;signed long long _readingLinkResolutionCount;};
struct NSFileSubarbitrationClaim {NSFileAccessClaim super;NSArray *_readingURLs;unsigned long long _readingOptions;NSArray *_writingURLs;unsigned long long _writingOptions;NSXPCConnection *_subarbiterConnection;NSArray *_readingLocations;NSArray *_writingLocations;NSFileAccessNode *_rootNode;NSMutableSet *_forwardedClaimIDs;NSMutableDictionary *_readRelinquishmentsByPresenterID;NSMutableDictionary *_writeRelinquishmentsByPresenterID;char _nullified;};
struct NSFileWatcherObservations {NSObject super;char _attributesChanged;char _contentsChanged;char _deleted;char _moved;NSString *_lastObservedPath;char _didResetPath;NSString *_path;};
struct NSFileWritingWritingClaim {NSFileAccessClaim super;NSURL *_url1;char _url1DidChange;unsigned long long _options1;NSURL *_url2;char _url2DidChange;unsigned long long _options2;NSFileAccessNode *_location1;NSFileAccessNode *_location2;};
struct NSISInlineStorageVariable {NSISVariable super;NSString *_name;int _valueRestriction;char _shouldBeMinimized;char _valueIsUserObservable;};
struct NSKeyValueObservationInfo {NSObject super;NSArray *_observances;unsigned long long _cachedHash;char _cachedIsShareable;};
struct _CFGeneralPasteboardStore {_CFPasteboardStore super;signed long long _localOnlyGeneration;_CFRemotePasteboardCache *_remotePasteboardCache;OS_dispatch_queue *_remotePasteboardNotificationQueue;};
struct _NSCloudSharingDescriptor {NSObject super;signed long long _operation;NSString *_sharedContentType;signed long long _numberOfInvitations;char _invitationsSentViaThirdPartyService;char _publicShare;};
struct _NSExtensionContextVendor {NSObject super;NSMutableDictionary *__extensionServiceConnections;NSMutableDictionary *__extensionContexts;NSMutableDictionary *__extensionPrincipalObjects;};
struct _NSRefcountedPthreadMutex {NSObject super;_opaque_pthread_mutex_t lock;};
struct NSCreateCommandMoreIVars {NSObject super;NSScriptObjectSpecifier *subjectsSpecifier;};
struct NSFileAccessArbiterProxy {NSObject super;NSXPCConnection *_server;OS_dispatch_queue *_queue;NSMutableDictionary *_presentersByID;NSMutableDictionary *_presenterMessengersByID;NSMutableSet *_providers;NSMapTable *_providerMessengersByID;NSMutableArray *_providerListeners;};
struct NSISUnrestrictedVariable {NSISVariable super;};
struct NSLayoutConstraintParser {NSObject super;NSString *_line; char *_lineChars;unsigned long long _lineLength;unsigned long long _opts;char _useHorizontalArrangement;NSDictionary *_metrics;NSDictionary *_views;NSLayoutItem *_containerView;NSMutableArray *_constraints;NSMutableArray *_unflushedWidthConstraints;NSMutableArray *_alignmentConstraints;unsigned long long _currentCharacter;NSMutableArray *_incompleteConstraints;NSLayoutItem *_parsedLeftView;NSLayoutItem *_parsedRightView;NSLayoutItem *_parsedConstrainedWidthView;};
struct NSNotificationObservable {NSObservationSource super;};
struct NSObservationTransformer {NSObservationSource super;};
struct NSURLHostNameAddressInfo {NSObject super;double timestamp;addrinfo *addressInfo;};
struct NSUserNotificationAction {NSObject super;};
struct NSVisualFormatLayoutRule {NSObject super;NSString *_visualFormatString;unsigned long long _formatOptions;NSDictionary *_metricMapping;NSDictionary *_rectMapping;NSLayoutRect *_containerRect;};
struct _NSKeyedUnarchiverHelper {NSObject super;NSArray *_white;unsigned int _lastRef;NSMutableArray *_allowedClasses;NSError *_decodeError;};
struct _NSProgressFractionTuple {NSObject super;_NSProgressFraction *_previous;_NSProgressFraction *_next;};
struct _NSStringProxyForContext {NSString super;NSString *_string;NSFormatter *_formatter;NSCopying *_item;};
struct _NSXMLDocumentExtraIvars {NSObject super;NSString *_MIMEType;NSSet *_allowedEntityURLs;};
struct CFPrefsSearchListSource {CFPrefsSource super;__CFDictionary *_keysToSources;__CFString *_identifier;__CFArray *_sourceList;__CFSet *_cloudKeys;__CFArray *_cloudPrefixKeys;CFPrefsPlistSource *_standardSetTarget;CFPrefsCloudSource *_cloudSetTarget;char initialized;char _isRebuildingCache;};
struct NSBundleResourceRequest {NSObject super;};
struct NSFilePromiseWriteToken {NSObject super;NSURL *promiseURL;NSURL *logicalURL;};
struct NSFileProviderMessenger {NSObject super;NSXPCConnection *_conn;Protocol *_protocol;NSFileProviderMessageInterface *_interface;NSLock *_lock;char _triedConnection;};
struct NSKeyValueProxyShareKey {NSObject super;NSObject *_container;NSString *_key;};
struct NSMultiReadUniWriteLock {NSObject super;void *_priv;};
struct NSScriptObjectSpecifier {NSObject super;NSScriptObjectSpecifier *_container;NSScriptObjectSpecifier *_child;NSString *_key;NSScriptClassDescription *_containerClassDescription;char _containerIsObjectBeingTested;char _containerIsRangeContainerObject;char _padding[2];NSAppleEventDescriptor *_descriptor;signed long long _error;};
struct NSScriptTypeDescription {NSObject super;};
struct _NSISVariableObservable {NSObservationSource super;_NSISVariableObservable *_nextDirtyObservable;_NSISVariableObservable *_prevDirtyObservable;double _lastValue;NSISVariable *_variable;NSISEngine *_associatedEngine;int _hasLastValue : 1;int _valueIsDirtied : 1;};
struct _NSLayoutRectObservable {NSObservationSource super;NSArray *_anchorObservations;NSLayoutRect *_rectangle;NSLayoutItem *_layoutItem;};
struct __NSVariableWidthString {NSString super;NSDictionary *_variants;NSString *_defaultString;};
struct NSAKDeserializerStream {NSObject super; void *memory; char *current;unsigned long long left;unsigned long long max;char freeWhenDone;};
struct NSDecimalNumberHandler {NSObject super;int _scale : 16;int _roundingMode : 3;int _raiseOnExactness : 1;int _raiseOnOverflow : 1;int _raiseOnUnderflow : 1;int _raiseOnDivideByZero : 1;int _unused : 9;void *_reserved2;void *_reserved;};
struct NSDistantObjectRequest {NSObject super;};
struct NSDocumentDeserializer {NSAKDeserializer super;};
struct NSFileAccessSubarbiter {NSObject super;OS_dispatch_queue *_queue;NSFileAccessArbiter *_realSubarbiter;};
struct NSFileWrapperMoreIVars {NSObject super;NSString *fileType;NSURL *contentsURL;char contentsMustBeReadWithoutMapping;char attributesMustBeWrittenSoNoHardLinking;NSHashTable *parents;NSError *contentsLazyReadingError;NSDictionary *cachedDirectoryChildrenAsDictionary;};
struct NSStackInContainerRule {NSObject super;NSArray *_stackedRects;NSLayoutRect *_containingRect;double _spacing;signed long long _orientation;};
struct NSTextCheckingKeyEvent {NSObject super;signed long long _layoutType;unsigned long long _keyboardType;NSString *_identifier;NSString *_primaryLanguage;unsigned long long _flags;double _time;NSString *_keys;NSString *_ukeys;};
struct NSUserScriptTaskRunner {NSObject super;NSXPCConnection *_connection;NSTask *_task;NSProgress *_progress;};
struct _CFDragPasteboardStore {_CFPasteboardStore super;__CFDictionary *_nextUniquingNumbers;_CFPasteboardClientInstanceID *_sourceProcessID;};
struct _NSPlaceholderIndexSet {NSIndexSet super;};
struct NSAlignmentLayoutRule {NSObject super;NSArray *_alignedAnchors;};
struct NSComparisonPredicate {NSPredicate super;void *_reserved2;NSPredicateOperator *_predicateOperator;NSExpression *_lhs;NSExpression *_rhs;};
struct NSDirInfoDeserializer {NSAKDeserializer super;};
struct NSISPlaybackOperation {NSObject super;NSMutableDictionary *oldIdentsToNewVariables;NSMutableSet *userObservableVariables;};
struct NSScriptSuiteRegistry {NSObject super;char _isLoadingSDEFFiles;char _isLoadingSecurityOverride;char _hasLoadedIntrinsics;char _reserved1[1];NSMutableSet *_seenBundles;NSMutableArray *_suiteDescriptionsBeingCollected;NSScriptClassDescription *_classDescriptionNeedingRegistration;NSMutableArray *_suiteDescriptions;NSScriptCommandDescription *_commandDescriptionNeedingRegistration;NSMutableDictionary *_cachedClassDescriptionsByAppleEventCode;NSMutableDictionary *_cachedCommandDescriptionsByAppleEventCodes;NSDictionary *_cachedSuiteDescriptionsByName;NSMutableDictionary *_complexTypeDescriptionsByName;NSMutableDictionary *_listTypeDescriptionsByName;unsigned int _nextComplexTypeAppleEventCode;void *_reserved2[4];};
struct NSTaggedPointerString {NSObject super;};
struct NSURLConnectionHandle {NSURLHandle super;NSURLRequest *req;NSURLConnection *conn;};
struct NSURLFileTypeMappings {NSObject super;NSURLFileTypeMappingsInternal *_internal;};
struct NSXPCListenerEndpoint {NSObject super;void *_internal;};
struct _NSInlineObserverList {_NSObserverList super;};
struct _NSPredicateUtilities {NSObject super;};
struct _NSXMLPlaceholderNode {NSObject super;};
struct NSAKSerializerStream {NSObject super;void *memory;unsigned long long current;unsigned long long max;__CFDictionary *roomForIntLocations;};
struct NSAppleEventHandling {NSObject super;NSAppleEventDescriptor *_event;NSAppleEventDescriptor *_replyEvent;NSScriptCommand *_scriptCommand;char _isSuspendedWithAE;char _padding[3];};
struct NSDocumentSerializer {NSAKSerializer super;};
struct NSKeyValueObservance {NSObject super;NSObject *_observer;NSKeyValueProperty *_property;void *_context;NSObject *_originalObservable;int _options : 7;int _cachedIsShareable : 1;};
struct NSMutableStringProxy {NSDistantObject super;};
struct NSNotificationCenter {NSObject super;void *_impl;void *_callback;void *_pad[11];};
struct NSStackObservedValue {NSObservedValue super;};
struct NSSubqueryExpression {NSExpression super;NSExpression *_collection;NSExpression *_variableExpression;NSPredicate *_subpredicate;};
struct NSSymbolicExpression {NSExpression super;NSString *_token;};
struct NSTextCheckingResult {NSObject super;};
struct NSVariableExpression {NSExpression super;NSString *_variable;};
struct _CFPrefsSynchronizer {NSObject super;OS_dispatch_source *_synchTimer;OS_dispatch_queue *_synchQueue;__CFSet *_dirtySources;_opaque_pthread_mutex_t _CFPrefsDirtySourcesLock;char _active;};
struct _NSActivityAssertion {NSObject super;unsigned long long _options;NSString *_reason;unsigned int _displaySleepAssertionID;unsigned int _systemSleepAssertionID;OS_voucher *_voucher;OS_voucher *_previousVoucher;unsigned char _adoptPreviousVoucher;NSObject *_xpcBoost;char _ended;};
struct __IncompleteProtocol {NSObject super;};
struct CFPDContainerSource {CFPDSource super;__CFString *_containerPath;};
struct CFPDSourceLookUpKey {NSObject super;__CFString *domain;__CFString *userName;__CFString *containerPath;__CFString *cloudPath;char byHost;char managed;char managedUsesContainer;char cloud;};
struct NSAppleEventManager {NSObject super;char _isPreparedForDispatch;char _padding[3];};
struct NSCompoundPredicate {NSPredicate super;void *_reserved2;unsigned long long _type;NSArray *_subpredicates;};
struct NSDirInfoSerializer {NSAKSerializer super;};
struct NSFileAccessArbiter {NSObject super;OS_dispatch_queue *_queue;NSXPCListener *_listenerConnection;char _isStopped;char _isSubarbiter;NSMutableDictionary *_accessClaimsByID;NSMutableDictionary *_accessClaimTransactionsByID;NSMutableDictionary *_subarbitrationClaimsByID;NSMutableDictionary *_reactorsByID;NSMutableDictionary *_reactorTransactionsByID;NSFileAccessNode *_rootNode;NSXPCConnection *_superarbitrationServer;OS_dispatch_source *_debugSignalSource;};
struct NSFileProviderProxy {NSFileReactorProxy super;NSString *_secureID;NSUUID *_uniqueID;NSFileProviderXPCInterface *_remoteProvider;NSFileProviderXPCMessenger *_forwardedMessenger;char _wantsWriteNotifications;};
struct NSJSONSerialization {NSObject super;void *reserved[6];};
struct NSLayoutXAxisAnchor {NSLayoutAnchor super;};
struct NSLayoutYAxisAnchor {NSLayoutAnchor super;};
struct NSLocalizableString {NSString super;NSString *_stringsFileKey;NSString *_developmentLanguageString;};
struct NSObservableKeyPath {NSBoundKeyPath super;};
struct NSObservationBuffer {NSObservationTransformer super;};
struct NSPlaceholderString {NSString super;};
struct NSPredicateOperator {NSObject super;unsigned long long _operatorType;unsigned long long _modifier;};
struct NSProgressRegistrar {NSObject super;OS_dispatch_queue *_queue;NSMutableDictionary *_publishersByID;NSMutableDictionary *_publisherTransactionsByID;NSMutableDictionary *_subscribersByID;NSMutableDictionary *_subscriberTransactionsByID;NSFileAccessNode *_rootFileAccessNode;NSMutableSet *_pendingFileSubscriberIDs;};
struct NSPropertySpecifier {NSScriptObjectSpecifier super;};
struct NSRelativeSpecifier {NSScriptObjectSpecifier super;unsigned long long _relativePosition;NSScriptObjectSpecifier *_baseSpecifier;};
struct NSScriptSDEFElement {NSObject super;NSString *_name;NSDictionary *_attributes;NSMutableDictionary *_descriptionsPerSubelementName;};
struct NSSmartQuoteOptions {NSObject super;NSString *_leftSingleQuote;NSString *_rightSingleQuote;NSString *_apostrophe;NSString *_leftDoubleQuote;NSString *_rightDoubleQuote;};
struct NSSpellingSubstring {NSString super;NSString *_originalString;unsigned long long _startingOffset;};
struct NSTernaryExpression {NSExpression super;NSPredicate *_predicate;NSExpression *_trueExpression;NSExpression *_falseExpression;};
struct _NSProgressFraction {NSObject super;signed long long _completed;signed long long _total;char _overflowed;};
struct __NSPlaceholderDate {NSDate super;};
struct CFPrefsPlistSource {CFPrefsSource super;__CFString *userIdentifier;__CFString *domainIdentifier;__CFString *container;__CFDictionary *_locallySetDict;char *accessPath;char _isByHost;char _volatile;char _readonly;char _avoidsDaemonCache;char _restrictedAccess;char _checkedInvalidHome;char _lastWriteFailed;char _observing;};
struct NSAnyKeyExpression {NSExpression super;};
struct NSAssertionHandler {NSObject super;void *_reserved;};
struct NSAttributedString {NSObject super;};
struct NSClassDescription {NSObject super;};
struct NSConnectionHelper {NSObject super;double reqLim;double repLim;char remoteUsesKeyedDO;NSSet *whitelist;char useKeyedDO;NSConnection *parent;};
struct NSEncodingDetector {NSObject super;unsigned long long _nsEncoding;unsigned int _cfEncoding;unsigned long long _givenNumBytes;unsigned long long _numChars;unsigned long long _numMultiByteChars;unsigned long long _numSingleBytechars;unsigned long long _skipBytes;unsigned long long _numZeroBytes;unsigned long long _mostFrqChars;unsigned long long _numBigrams;unsigned long long _numRep;unsigned long long _numDirect;unsigned long long _numBase64;unsigned long long _numSeq;unsigned long long _numTrigram;unsigned long long _numLower;unsigned long long _numHigher;double _weight;char _hasBase64;char _isBigEndian;char _hasBOM;unsigned int _tag;};
struct NSFileAccessIntent {NSObject super;NSURL *_url;char _isRead;signed long long _options;};
struct NSFileReadingClaim {NSFileAccessClaim super;NSURL *_url;char _urlDidChange;unsigned long long _options;NSFileAccessNode *_location;NSFileAccessNode *_rootNode;signed long long _linkResolutionCount;};
struct NSFileWritingClaim {NSFileAccessClaim super;NSURL *_url;char _urlDidChange;unsigned long long _options;NSFileAccessNode *_location;};
struct NSGarbageCollector {NSObject super;};
struct NSKeyValueProperty {NSObject super;NSKeyValueContainerClass *_containerClass;NSString *_keyPath;};
struct NSLayoutAnchorRule {NSObject super;NSLayoutAnchor *_firstAnchor;NSLayoutAnchor *_secondAnchor;signed long long _relation;NSString *_identifier;double _constant;double _multiplier;float _priority;};
struct NSOrderedSetChange {NSObject super;};
struct NSPointerFunctions {NSObject super;};
struct NSScriptSDEFParser {NSObject super;NSData *_data;NSBundle *_bundle;NSDictionary *_descriptionCreationMethodsByElementName;NSDictionary *_validSubelementNamesPerArrayElementName;NSMutableArray *_elementsBeingParsed;NSArray *_suiteDescriptions;char _parsesCocoaElements;};
struct NSValueTransformer {NSObject super;};
struct _CFPasteboardCache {NSObject super;__CFArray *orderedEntries;__CFDictionary *entriesByItemIdentifier;__CFDictionary *indexesByItemIdentifier;__CFArray *itemArray;int generation;int changeCount;};
struct _NSPlaceholderData {NSData super;};
struct NSAutoreleasePool {NSObject super;void *_token;void *_reserved3;void *_reserved2;void *_reserved;};
struct NSBlockInvocation {NSInvocation super;};
struct NSCoercionHandler {NSScriptCoercionHandler super;};
struct NSDictionaryEntry {NSObject super;__CFSet *dictionary;NSData *data;signed long long size;signed long long mtime;};
struct NSDistributedLock {NSObject super;void *_priv;};
struct NSLayoutDimension {NSLayoutAnchor super;};
struct NSLayoutPointRule {NSObject super;NSLayoutPoint *_firstLayoutPoint;NSLayoutPoint *_secondLayoutPoint;};
struct NSLayoutRectangle {NSLayoutRect super;};
struct NSMethodSignature {NSObject super;void *_private;void *_reserved[5];unsigned long long _flags;};
struct NSMiddleSpecifier {NSScriptObjectSpecifier super;};
struct NSMutableIndexSet {NSIndexSet super;void *_reserved;};
struct NSObjectSpecifier {NSScriptObjectSpecifier super;};
struct NSObservationSink {NSObject super;};
struct NSObserverKeyPath {NSBoundKeyPath super;};
struct NSProtocolChecker {NSProxy super;};
struct NSRandomSpecifier {NSScriptObjectSpecifier super;};
struct NSScriptWhoseTest {NSObject super;};
struct NSStackLayoutRule {NSObject super;NSArray *_stackedRects;double _spacing;signed long long _orientation;};
struct NSXMLFidelityNode {NSXMLNode super;unsigned long long _fidelity;NSString *_whitespace;NSMutableArray *_ranges;NSMutableArray *_names;};
struct _NSCachedIndexSet {NSIndexSet super;};
struct _NSCallStackArray {NSArray super;void **_frames;unsigned long long _cnt;unsigned long long _ignore;char **_pcstrs;char _wantSyms;};
struct _NSLayoutRuleNode {NSObject super;NSLayoutRule *_representedRule;_NSLayoutRuleNodeParent *_parentNode;};
struct _NSUndoInvocation {_NSUndoObject super;NSInvocation *_invocation;};
struct NSDateComponents {NSObject super;};
struct NSFalsePredicate {NSPredicate super;};
struct NSIndexSpecifier {NSScriptObjectSpecifier super;signed long long _index;};
struct NSKeyValueGetter {NSKeyValueAccessor super;};
struct NSKeyValueSetter {NSKeyValueAccessor super;};
struct NSLayoutRectRule {NSObject super;NSLayoutRect *_firstLayoutRect;NSLayoutRect *_secondLayoutRect;signed long long _relation;};
struct NSPortNameServer {NSObject super;};
struct NSProgressValues {NSObject super;NSMutableDictionary *_userInfo;_NSProgressFraction *_selfFraction;_NSProgressFraction *_childFraction;double _remoteFractionCompleted;NSString *_localizedDescription;NSString *_localizedAdditionalDescription;char _isCancellable;char _isPausable;char _isCancelled;char _isPaused;char _usingChildUserInfo;NSString *_kind;char _isPrioritizable;signed long long _portionOfParent;};
struct NSRangeSpecifier {NSScriptObjectSpecifier super;NSScriptObjectSpecifier *_startSpec;NSScriptObjectSpecifier *_endSpec;};
struct NSSelfExpression {NSExpression super;};
struct NSURLPromisePair {NSObject super;NSURL *_logicalURL;NSURL *_physicalURL;};
struct NSUserScriptTask {NSObject super;NSURL *_scriptURL;NSXPCConnection *_connection;char _hasExeced;char _hasTerminated;NSFileHandle *_stdin;NSFileHandle *_stdout;NSFileHandle *_stderr;};
struct NSWhoseSpecifier {NSScriptObjectSpecifier super;NSScriptWhoseTest *_test;unsigned long long _startSubelementIdentifier;signed long long _startSubelementIndex;unsigned long long _endSubelementIdentifier;signed long long _endSubelementIndex;};
struct _NSDiskOperation {NSObject super;__DADisk *_disk;char _eject;NSURL *_volumeURL;};
struct _NSMoribundCache {NSCache super;};
struct _NSSharedKeySetS {NSObject super;char *_g;unsigned char _select;void *_rankTable;double _c;unsigned int _M;unsigned int _factor;unsigned int _numKey;unsigned int *_seeds;unsigned short (*_keys1)[1];unsigned short (*_keys2)[2];unsigned short (*_keys3)[3];unsigned char (*_ckeys)[3];_NSSharedKeySetS *_subSharedKeySet;unsigned int _keyLen;unsigned int _type;};
struct __NSBundleTables {NSObject super;NSLock *_lock;NSHashTable *_staticFrameworks;NSHashTable *_loadedBundles;NSHashTable *_loadedFrameworks;NSMapTable *_resolvedPathToBundles;NSMapTable *_bundleForClassMap;NSPointerArray *_immortalBundles;};
struct __NSConcreteUUID {NSUUID super;unsigned char _uuidBytes[16];};
struct CFPDCloudSource {CFPDContainerSource super;SYDRemotePreferencesSource *cloudSource;__CFString *_configurationPath;};
struct NSConcreteValue {NSValue super;unsigned long long _specialFlags;void *typeInfo;};
struct NSConditionLock {NSObject super;void *_priv;};
struct NSDeleteCommand {NSScriptCommand super;NSScriptObjectSpecifier *_keySpecifier;};
struct NSExistsCommand {NSScriptCommand super;};
struct NSExtensionItem {NSObject super;NSMutableDictionary *_userInfo;};
struct NSFileURLHandle {NSURLHandle super;NSString *_path;NSFileHandle *_fh;NSDictionary *_properties;};
struct NSHTTPURLHandle {NSURLHandle super;__CFHTTPMessage *request;__CFReadStream *httpStream;NSMutableData *errorPage;unsigned char examinedHeaders;char _padding[3];NSDictionary *proxyConfig;};
struct NSKeyGetBinding {NSKeyBinding super;};
struct NSKeySetBinding {NSKeyBinding super;};
struct NSKeyValueArray {NSArray super;NSObject *_container;NSString *_key;NSKeyValueNonmutatingArrayMethodSet *_methods;};
struct NSMutableString {NSString super;};
struct NSNameSpecifier {NSScriptObjectSpecifier super;NSString *_name;};
struct NSRecursiveLock {NSObject super;void *_priv;};
struct NSSetExpression {NSExpression super;NSExpression *_left;NSExpression *_right;};
struct NSSimpleCString {NSString super;char *bytes;int numBytes;int _unused;};
struct NSTruePredicate {NSPredicate super;};
struct NSURLComponents {NSObject super;};
struct NSUnitConverter {NSObject super;};
struct NSXMLSchemaType {NSObject super;};
struct _CFXPreferences {NSObject super;__CFDictionary *_sources;_opaque_pthread_mutex_t *_sourcesLock;__CFDictionary *_namedVolatileSources;_opaque_pthread_mutex_t *_namedVolatileSourcesLock;__CFDictionary *_searchLists;_opaque_pthread_mutex_t *_searchListsLock;OS_xpc_object *_agentConnection;OS_xpc_object *_daemonConnection;OS_xpc_object *_observationConnection;unsigned int _launchdUID;unsigned int _euid;};
struct _NSDispatchData {NSData super;};
struct __NSGlobalBlock {NSBlock super;};
struct __NSMallocBlock {NSBlock super;};
struct CFPDDataBuffer {NSObject super;};
struct NSCalendarDate {NSDate super;unsigned long long refCount;double _timeIntervalSinceReferenceDate;NSTimeZone *_timeZone;NSString *_formatString;void *_reserved;};
struct NSCharacterSet {NSObject super;};
struct NSCloneCommand {NSScriptCommand super;NSScriptObjectSpecifier *_keySpecifier;};
struct NSCloseCommand {NSScriptCommand super;};
struct NSConcretePipe {NSPipe super;NSFileHandle *_readHandle;NSFileHandle *_writeHandle;};
struct NSCountCommand {NSScriptCommand super;};
struct NSDataDetector {NSRegularExpression super;unsigned long long _types;};
struct NSDateInterval {NSObject super;};
struct NSDeserializer {NSObject super;};
struct NSFTPURLHandle {NSURLHandle super;NSURL *originalURL;__CFReadStream *ftpReadStream;};
struct NSFileSecurity {NSObject super;};
struct NSMutableArray {NSArray super;};
struct NSNotification {NSObject super;};
struct NSOutputStream {NSStream super;};
struct NSPinyinString {NSString super;NSString *_string;unsigned long long _syllableCount;unsigned long long _score;unsigned long long _rangeCount;unsigned long long _replacementCount;unsigned long long _transpositionCount;unsigned long long _insertionCount;unsigned long long _deletionCount;unsigned long long _firstModificationIndex;_NSRange *_ranges;char _lastSyllableIsPartial;};
struct NSPointerArray {NSObject super;};
struct NSURLQueryItem {NSObject super;NSString *_name;NSString *_value;};
struct NSUserUnixTask {NSUserScriptTask super;};
struct NSXMLNamedNode {NSXMLNode super;NSString *_name;NSString *_URI;signed long long _prefixIndex;};
struct _NSUndoEndMark {_NSUndoObject super;};
struct __NSStackBlock {NSBlock super;};
struct __NSTaggedDate {NSDate super;};
struct NSAppleScript {NSObject super;NSString *_source;unsigned int _compiledScriptID;void *_reserved1;void *_reserved2;};
struct NSArrayChange {NSObject super;};
struct NSDebugString {NSString super;NSString *string;};
struct NSFileManager {NSObject super;};
struct NSInputStream {NSStream super;};
struct NSKeyValueSet {NSSet super;NSObject *_container;NSString *_key;NSKeyValueNonmutatingSetMethodSet *_methods;};
struct NSLayoutPoint {NSObject super;NSLayoutXAxisAnchor *_xAxisAnchor;NSLayoutYAxisAnchor *_yAxisAnchor;};
struct NSMeasurement {NSObject super;NSUnit *_unit;double _doubleValue;};
struct NSMoveCommand {NSScriptCommand super;NSScriptObjectSpecifier *_keySpecifier;};
struct NSMutableData {NSData super;};
struct NSObservation {NSObject super;};
struct NSOrthography {NSObject super;};
struct NSPortMessage {NSObject super;NSPort *localPort;NSPort *remotePort;NSMutableArray *components;unsigned int msgid;void *reserved2;void *reserved;};
struct NSProcessInfo {NSObject super;NSDictionary *environment;NSArray *arguments;NSString *hostName;NSString *name;signed long long automaticTerminationOptOutCounter;};
struct NSQuitCommand {NSScriptCommand super;};
struct NSXMLChildren {NSMutableArray super;NSMutableArray *_array;char _isStale;};
struct _NSInlineData {NSData super;unsigned short _length;};
struct _NSJSONWriter {NSObject super;NSOutputStream *outputStream;int kind;char *dataBuffer;unsigned long long dataBufferLen;unsigned long long dataLen;char freeDataBuffer;char *tempBuffer;unsigned long long tempBufferLen;signed long long totalDataWritten;};
struct __NSAutoBlock {NSBlock super;};
struct __objc_method {void *method_name;char *method_types;__objc_IMP method_imp;};
struct NSDictionary {NSObject super;};
struct NSEnumerator {NSObject super;};
struct NSFileHandle {NSObject super;};
struct NSGetCommand {NSScriptCommand super;};
struct NSMutableSet {NSSet super;};
struct NSOrderedSet {NSObject super;};
struct NSPathStore2 {NSString super;unsigned int _lengthAndRefCount;unsigned short _characters[];};
struct NSSerializer {NSObject super;};
struct NSSetChanges {NSMutableSet super;};
struct NSSetCommand {NSScriptCommand super;NSScriptObjectSpecifier *_keySpecifier;};
struct NSXMLContext {NSObject super;};
struct NSXMLDTDNode {NSXMLNode super;unsigned long long _DTDKind;NSString *_name;NSString *_notationName;NSString *_publicID;NSString *_systemID;};
struct _NSUndoStack {NSObject super;unsigned long long _max;unsigned long long _count;unsigned long long _nestingLevel;_NSUndoObject *_head;};
struct __NSSKGraphE {NSObject super;edge *_edges;vertex *_vertices;unsigned long long _numV;unsigned long long _numE;unsigned long long _currE;unsigned long long _dump;unsigned long long _l_end;};
struct __objc2_meth {char *name;char *types;__objc_IMP imp;};
struct NSCondition {NSObject super;void *_priv;};
struct NSDimension {NSUnit super;unsigned long long _reserved;NSUnitConverter *_converter;};
struct NSFormatter {NSObject super;};
struct NSHashTable {NSObject super;};
struct NSIndexPath {NSObject super;unsigned long long *_indexes;unsigned long long _length;void *_reserved;};
struct NSPortCoder {NSCoder super;};
struct NSSetChange {NSObject super;};
struct NSUnitAngle {NSDimension super;};
struct NSUnitPower {NSDimension super;};
struct NSUnitSpeed {NSDimension super;};
struct NSWhoseTest {NSScriptWhoseTest super;};
struct _NSXPCBoost {NSObject super;OS_xpc_object *_event;};
struct _NSZeroData {NSData super;};
struct __NSCFArray {NSMutableArray super;};
struct __NSCFTimer {NSTimer super;};
struct __NSSKGraph {NSObject super;edge *_edges;vertex *_vertices;unsigned long long _numV;unsigned long long _numE;unsigned long long _currE;unsigned long long _dump;unsigned long long _l_end;};
struct NSArchiver {NSCoder super;void *mdata;void *pointerTable;void *stringTable;void *ids;void *map;void *replacementTable;void *reserved;};
struct NSCalendar {NSObject super;};
struct NSMapTable {NSObject super;};
struct NSPageData {NSData super;NSData *data;NSDate *_originalFileModDate;NSString *_originalFilePath;};
struct NSRLEArray {NSObject super;_NSRefCountedRunArray *theList;};
struct NSTimeZone {NSObject super;};
struct NSURLError {NSError super;};
struct NSUnitArea {NSDimension super;};
struct NSUnitMass {NSDimension super;};
struct __NSArray0 {NSArray super;};
struct __NSCFData {NSMutableData super;unsigned long long _cfinfoa;signed long long _length;signed long long _capacity;__CFAllocator *_bytesDeallocator;char *_bytes;};
struct __NSCFType {NSObject super;};
struct NSCFArray {__NSCFArray super;};
struct NSCFError {NSError super;};
struct NSCFTimer {NSTimer super;};
struct NSScanner {NSObject super;};
struct NSXMLTidy {NSObject super;};
struct _NSClrDat {NSConcreteData super;};
struct NSCFData {NSMutableData super;unsigned char _cfinfo[4];unsigned int _rc;signed long long _length;signed long long _capacity;__CFAllocator *_bytesDeallocator;char *_bytes;};
struct NSCFType {NSObject super;};
struct NSLocale {NSObject super;};
struct NSNumber {NSValue super;};
struct NSXMLDTD {NSXMLNode super;NSString *_name;NSString *_publicID;NSString *_systemID;NSArray *_children;char _childrenHaveMutated;unsigned char _padding3[3];NSMutableDictionary *_entities;NSMutableDictionary *_elements;NSMutableDictionary *_notations;NSMutableDictionary *_attributes;NSString *_original;char _modified;unsigned char _padding2[3];};
struct __NSDate {NSDate super;double _time;};
typedef __objc_IMP IMP;
struct _CFXNotificationRegistrationContainer {_CFXNotificationRegistrationBase super;_0B234511B1B9AA76AF8A4F153FD51D57 _children;};
struct _NSFileWatcherDirectoryFileHandleInfo {_NSFileWatcherFileHandleInfo super;InodeDevPair inodeDevPair;};
struct NSFilePresenterAsynchronousOperation {NSOperation super;id _block;char _isFinished;char _isExecuting;};
struct _CFXNotificationTokenRegistration {_CFXNotificationRegistrationBase super;unsigned long long _token;unsigned long long _options;id _handler;char _registered;};
struct NSOldValueObservationTransformer {NSObservationTransformer super;id _lastValue;};
struct NSFilesystemItemRemoveOperation {NSOperation super;id _delegate;NSString *_removePath;NSError *_error;void *_state;char _filterUnderbars;};
struct NSPersonNameComponentsFormatter {NSFormatter super;id _private;};
struct _NSConcreteBlockSinkObservation {NSObservation super;NSObservable *_LHSobservable;id _block;int _tag;};
struct _NSISLinearExpressionObservable {NSObservationSource super;NSNumber *_lastValue;NSISLinearExpression *_expression;NSISEngine *_associatedEngine;NSMutableArray *_variableObservations;id _changeTransactionObservation;char _valueIsDirtied;};
struct __NSOrderedSetReverseEnumerator {NSEnumerator super;id _obj;unsigned long long _idx;};
struct NSConcreteDistantObjectRequest {NSDistantObjectRequest super;NSInvocation *invocation;NSArray *importedObjects;id conversation;unsigned int sequence;NSConnection *connection;};
struct NSFilterObservationTransformer {NSObservationTransformer super;id _predicate;};
struct NSReduceObservationTransformer {NSObservationTransformer super;id _reducer;id _accumulator;};
struct NSDirectoryTraversalOperation {NSOperation super;id _delegate;NSString *_sourcePath;NSError *_error;void *_stream;int _optionsFlags;int _lastDeviceInode;char _shouldFilterUnderbars;char _stopped;NSMutableArray *_deviceEntryPoints;NSMutableArray *_deviceNumbers;};
struct NSFilesystemItemMoveOperation {NSOperation super;id _delegate;NSURL *_sourceURL;NSURL *_destinationURL;NSError *_error;unsigned long long _options;};
struct NSScriptValueTypeDescription {NSScriptTypeDescription super;NSString *_name;unsigned int _appleEventCode;NSString *_objcClassName;SEL _cachedObjcCreationMethodSelector;char _isHidden;};
struct NSSubstitutionCheckingResult {NSTextCheckingResult super;_NSRange _range;NSString *_replacementString;};
struct NSConcreteObservationBuffer {NSObservationBuffer super;OS_dispatch_queue *_inputQueue;NSOperationQueue *_outputQueue;signed long long _policy;int _state;_opaque_pthread_mutex_t _lock;NSMutableArray *_dequeue;unsigned long long _maxCount;id _bufferFullHandler;char _memoryPressureSensitive;char _automaticallyEmitsObjects;};
struct NSMapObservationTransformer {NSObservationTransformer super;id _block;int _tag;};
struct NSOrthographyCheckingResult {NSTextCheckingResult super;_NSRange _range;NSOrthography *_orthography;};
struct NSSimpleAttributeDictionary {NSDictionary super;unsigned int numElements;unsigned int refCount;_NSSimpleAttributeDictionaryElement elements[1];};
struct _NSConcreteUserNotification {NSUserNotification super;NSString *_title;NSString *_subtitle;NSString *_dateString;NSString *_informativeText;NSString *_actionButtonTitle;NSString *_otherButtonTitle;NSString *_soundName;NSString *_identifier;NSString *_proxyIdentifier;NSString *_responsePlaceholder;NSURL *_imageURL;NSData *_secureEncodedUserInfo;NSData *_encodedResponse;NSDate *_deliveryDate;NSTimeZone *_deliveryTimeZone;NSDateComponents *_deliveryRepeatInterval;NSDateComponents *_deliveryExpiration;NSDateComponents *_duration;NSDate *_eventDate;NSData *_contentImageData;NSData *_identityImageData;NSUserNotificationAction *_additionalActivationAction;unsigned long long _identityImageStyle;NSArray *_additionalActions;double _snoozeInterval;double _snoozedDate;NSArray *_alternateActionButtonTitles;unsigned long long _alternateActionIndex;NSArray *_peopleIdentifiers;NSDate *_actualDeliveryDate;id _storageID;unsigned long long _style;unsigned long long _displayStyle;signed long long _activationType;signed long long _badgeCount;char _hasActionButton;char _presented;char _snoozed;char _remote;char _clearable;char _allDayEvent;char _actionButtonIsSnooze;char _dismissAfterDuration;char _persistent;char _poofsOnCancel;char _ignoresDoNotDisturb;char _hasReplyButton;char _showsButtons;char _lockscreenOnly;char _substitutesEmojiInResponse;char _hasAttachment;char _alwaysShowAlternateActionMenu;};
struct NSConcreteOrderedSetChange {NSOrderedSetChange super;unsigned long long _changeType;unsigned long long _sourceIndex;unsigned long long _destinationIndex;id _value;};
struct NSConcretePointerFunctions {NSPointerFunctions super;NSSlice slice;};
struct NSKeyValueChangeDictionary {NSDictionary super;_A4AAF5FDF6FBD907A28DDA01531FF644 _details;NSObject *_originalObservable;char _isPriorNotification;char _isRetainingObjects;};
struct NSKeyValueUnnestedProperty {NSKeyValueProperty super;NSArray *_affectingProperties;char _cachedIsaForAutonotifyingIsValid;Class _cachedIsaForAutonotifying;};
struct _NSPlaceholderCharacterSet {NSCharacterSet super;NSCharacterSet *_original;NSCharacterSet *_invertedSet;_37465DDE4F5514DE4D52F8519CE55D34 _flags;};
struct __NSArrayReverseEnumerator {NSEnumerator super;id _obj;unsigned long long _idx;};
struct __NSSingleEntryDictionaryI {NSDictionary super;id _obj;id _key;};
struct __NSSingleObjectEnumerator {NSEnumerator super;id _theObjectToReturn;};
struct NSConstantValueExpression {NSExpression super;id constantValue;};
struct NSCustomPredicateOperator {NSPredicateOperator super;SEL _selector;};
struct _CFXNotificationRegistrar {_CFXNotificationRegistrationContainer super;_0B234511B1B9AA76AF8A4F153FD51D57 _wildcardNames;_0B234511B1B9AA76AF8A4F153FD51D57 _wildcardObjects;_0B234511B1B9AA76AF8A4F153FD51D57 _doubleWildcards;__CFDictionary *_tokenRegistrations;unsigned long long _options;};
struct NSKeyValueNestedProperty {NSKeyValueProperty super;NSString *_relationshipKey;NSString *_keyPathFromRelatedObject;NSKeyValueUnnestedProperty *_relationshipProperty;NSString *_keyPathWithoutOperatorComponents;char _isAllowedToResultInForwarding;id _dependentValueKeyOrKeys;char _dependentValueKeyOrKeysIsASet;};
struct NSScriptClassDescription {NSClassDescription super;NSString *_suiteName;NSString *_objcClassName;unsigned int _appleEventCode;NSObject *_superclassNameOrDescription;NSArray *_attributeDescriptions;NSArray *_toOneRelationshipDescriptions;NSArray *_toManyRelationshipDescriptions;NSDictionary *_commandMethodSelectorsByName;id _moreVars;};
struct NSGrammarCheckingResult {NSTextCheckingResult super;_NSRange _range;NSArray *_details;};
struct NSBlockObservationSink {NSObservationSink super;id _block;int _tag;};
struct NSConcreteNotification {NSNotification super;NSString *name;id object;NSDictionary *userInfo;char dyingObject;};
struct NSConcretePointerArray {NSPointerArray super;NSSlice slice;unsigned long long count;unsigned long long capacity;unsigned long long options;unsigned long long mutations;char needsCompaction;};
struct NSOwnedDictionaryProxy {NSDictionary super;id _owner;};
struct _NSConcreteObservation {NSObservation super;NSObservable *_LHSobservable;NSObserver *_RHSobserver;id _observers[4];};
struct _NSUndoBlockInvocation {_NSUndoObject super;id _handler;};
struct __NSOrderedSetReversed {NSOrderedSet super;id _orderedSet;unsigned long long _cnt;};
struct NSAbstractLayoutGuide {NSObject super;NSLayoutItem *_concreteLayoutGuide;NSLayoutItem *_owningView;NSString *_identifier;NSISVariable *_minYVariable;NSISVariable *_minXVariable;NSISVariable *_widthVariable;NSISVariable *_heightVariable;CGRect _layoutFrame;};
struct NSAggregateExpression {NSExpression super;id _collection;};
struct NSBuiltinCharacterSet {NSCharacterSet super;signed long long offset;id expandedset;};
struct NSConcreteArrayChange {NSArrayChange super;unsigned long long _changeType;unsigned long long _sourceIndex;unsigned long long _destinationIndex;id _value;};
struct NSInvocationOperation {NSOperation super;id _inv;id _exception;void *_reserved2;};
struct NSKeyValueProxyGetter {NSKeyValueGetter super;Class _proxyClass;};
struct NSSpellCheckingResult {NSTextCheckingResult super;_NSRange _range;};
struct _NSSelectorGetBinding {NSKeyGetBinding super;SEL getSel;void *getMethod;void *get;};
struct _NSSelectorSetBinding {NSKeySetBinding super;SEL setSel;void *setMethod;void *set;};
struct __NSFrozenDictionaryM {NSDictionary super;_8727CF87EF637FBC72E2580FFB82C074 storage;__cow_state_t *cow;};
struct NSConcreteFileHandle {NSFileHandle super;__CFRunLoopSource *_source;__CFRunLoop *_rl;unsigned short _activity;int _error;int _resultSocket;OS_dispatch_source *_dsrc;OS_dispatch_data *_resultData;OS_dispatch_queue *_fhQueue;OS_dispatch_io *_readChannel;id _readabilityHandler;id _writeabilityHandler;OS_dispatch_source *_readMonitoringSource;OS_dispatch_source *_writeMonitoringSource;OS_dispatch_queue *_monitoringQueue;int _fd;unsigned short _flags;};
struct NSFilePresenterProxy {NSFileReactorProxy super;id _remotePresenter;NSFilePresenterXPCMessenger *_forwardedMessenger;OS_dispatch_queue *_queue;NSFileWatcher *_watcher;unsigned long long _writingRelinquishmentCount;id _currentWriterPurposeID;NSMutableArray *_previousWriterPurposeIDs;NSFileAccessProcessManager *_processManager;NSSet *_observedUbiquityAttributes;unsigned long long _filePresenterResponses;char _didObserveMovingByWriter;char _didObserveVersionChangingByWriter;char _disconnected;char _inSubarbiter;char _usesMainThreadDuringRelinquishing;char _didObserveNonCoordinatedChanges;};
struct NSFunctionExpression {NSExpression super;NSExpression *_operand;SEL _selector;NSArray *_arguments;};
struct NSISLinearExpression {NSObject super;NSISEngine *engine;_BB2000C7CF6CC1B28359570521340B37 linExp;};
struct NSLinkCheckingResult {NSTextCheckingResult super;_NSRange _range;NSURL *_url;};
struct NSConcreteHashTable {NSHashTable super;NSSlice slice;unsigned long long count;unsigned long long capacity;unsigned long long options;unsigned long long mutations;};
struct NSConcreteSetChange {NSSetChange super;unsigned long long _changeType;id _value;};
struct NSUniqueIDSpecifier {NSScriptObjectSpecifier super;id _uniqueID;};
struct NSClassicHashTable {NSHashTable super;_EEBEAFA8DEED02B58779CEB854D89F7E _callBacks;__CFBasicHash *_ht;};
struct NSBlockExpression {NSExpression super;id _block;NSArray *_arguments;};
struct NSBlockOperation {NSOperation super;id _private2;void *_reserved2;};
struct NSBlockPredicate {NSPredicate super;id _block;};
struct NSFileAttributes {NSDictionary super;NSMutableDictionary *dict;stat statInfo;_483F7AF304CA8668A62935C0D5FAD77F catInfo;NSDictionary *extendedAttrs;};
struct _NSProgressProxy {NSProgress super;NSProgressPublisher *_forwarder;char _isOld;id _unpublishingHandler;};
struct _NSUndoBeginMark {_NSUndoObject super;id _groupIdentifier;char _isDiscardable;};
struct __NSFrozenArrayM {NSArray super;__cow_state_t *cow;_42182BDD4B41EBB13A3ACD32661E7921 storage;};
struct NSCreateCommand {NSScriptCommand super;id _moreVars2;};
struct NSDateFormatter {NSFormatter super;NSMutableDictionary *_attributes;__CFDateFormatter *_formatter;unsigned long long _counter;signed long long _cacheGeneration;unsigned long long _behavior;os_unfair_lock_s _lock;};
struct NSSpecifierTest {NSScriptWhoseTest super;unsigned long long _comparisonOperator;NSScriptObjectSpecifier *_object1;id _object2;};
struct __NSDictionaryI {NSDictionary super;unsigned char _used[8];int _szidx : 6;id _list[];};
struct __NSOrderedSetI {NSOrderedSet super;unsigned char _used[8];int _szidx : 6;id _list[];};
struct NSLogicalTest {NSScriptWhoseTest super;int _operator;id _subTests;};
struct NSXMLDocument {NSXMLNode super;NSString *_encoding;NSString *_version;NSXMLDTD *_docType;NSArray *_children;char _childrenHaveMutated;char _standalone;char padding[2];NSXMLElement *_rootElement;NSString *_URI;id _extraIvars;unsigned long long _fidelityMask;unsigned long long _contentKind;};
struct NSCountedSet {NSMutableSet super;id _table;void *_reserved;};
struct NSXMLElement {NSXMLNode super;NSString *_name;id _attributes;id _namespaces;NSArray *_children;char _childrenHaveMutated;char _zeroOrOneAttributes;char _zeroOrOneNamespaces;unsigned char _padding;NSString *_URI;signed long long _prefixIndex;};
struct NSXPCEncoder {NSXPCCoder super;OS_xpc_object *_oolObjects;NSXPCConnection *_connection;__CFDictionary *_replacedByDelegateObjects;NSXPCEncoderDelegate *_delegate;_0FE7D308F4451A74D1A69620C347ACBB _encoder;unsigned long long _genericIndex;char _topLevelDictionary;char _finished;char _askForReplacement;};
struct __NSArrayM {NSMutableArray super;__cow_state_t *cow;_42182BDD4B41EBB13A3ACD32661E7921 storage;};
struct __NSCFSet {NSMutableSet super;unsigned char _cfinfo[4];unsigned int _rc;unsigned int _bits[4];void *_callbacks;id *_values;};
struct __NSSetM {NSMutableSet super;__cow_state_t *cow;_EA5A74CDAED071D34B105DF63C354AC2 storage;};
struct NSTransitInformationCheckingResult {NSTextCheckingResult super;_NSRange _range;NSDictionary *_components;id _underlyingResult;};
struct __NSFastEnumerationEnumerator {NSEnumerator super;NSFastEnumeration *_obj;id _origObj;unsigned long long _index;unsigned long long _count;unsigned long long _mut;id _objects[16];_32A81261468DCB37DADED95498576F3E _state;};
struct NSPhoneNumberCheckingResult {NSTextCheckingResult super;_NSRange _range;NSString *_phoneNumber;id _underlyingResult;};
struct NSAddressCheckingResult {NSTextCheckingResult super;_NSRange _range;NSDictionary *_components;id _underlyingResult;};
struct NSCheapMutableString {NSMutableString super;_F065EA3D620C37C6F077C3956CF2CF32 contents;_992A3B757AA70BF52C20D879373DE9D6 flags;unsigned long long numCharacters;void *_reserved;};
struct NSDateCheckingResult {NSTextCheckingResult super;_NSRange _range;NSDate *_date;NSTimeZone *_timeZone;double _duration;NSDate *_referenceDate;id _underlyingResult;char _timeIsSignificant;char _timeIsApproximate;char _timeIsPast;NSString *_leadingText;NSString *_trailingText;};
struct NSBigMutableString {NSMutableString super;_12A8D912EA621CF5C78D0B17F79410D4 flags;unsigned long long length;_6C9E119184E2A78FCD58C69C7BF8B15D contents;};
struct NSConcreteMapTable {NSMapTable super;NSSlice keys;NSSlice values;unsigned long long count;unsigned long long capacity;unsigned long long keyOptions;unsigned long long valueOptions;unsigned long long mutations;os_unfair_lock_s growLock;char shouldRehash;};
struct NSClassicMapTable {NSMapTable super;_C567155D349D026977605D9605895FC8 _keyCallBacks;_64D552FC0A0354AD1C366B13BEFE79B1 _valueCallBacks;__CFBasicHash *_ht;};
struct NSConcreteScanner {NSScanner super;NSString *scanString;NSCharacterSet *skipSet;NSCharacterSet *invertedSkipSet;id locale;unsigned long long scanLocation;_2B5DD4196BC790A619058A8FED2FA401 flags;};
struct NSDOStreamData {NSMutableData super;id refObject;_5756F26347C3CEC078A43E2D433341E2 stream;};
struct _NSPersonNameComponentsStyleFormatterShortVariantGeneral {_NSPersonNameComponentsStyleFormatter super;};
struct _NSPersonNameComponentsStyleFormatterFamilyOnlyVariant {_NSPersonNameComponentsStyleFormatterShortVariantGeneral super;};
struct _NSPersonNameComponentsStyleFormatterGivenOnlyVariant {_NSPersonNameComponentsStyleFormatterShortVariantGeneral super;};
struct _NSPersonNameComponentsStyleFormatterNicknameVariant {_NSPersonNameComponentsStyleFormatter super;};
struct _NSPersonNameComponentsStyleFormatterAbbreviated {_NSPersonNameComponentsStyleFormatter super;};
struct NSMutableStringProxyForMutableAttributedString {NSMutableString super;NSMutableAttributedString *mutableAttributedString;};
struct _CFXNotificationDistributedTokenRegistration {_CFXNotificationTokenRegistration super;OS_xpc_object *_connection;_opaque_pthread_mutex_t _connectionLock;};
struct _NSPersonNameComponentsStyleFormatterMedium {_NSPersonNameComponentsStyleFormatter super;};
struct NSKeyValueNotifyingMutableCollectionGetter {NSKeyValueProxyGetter super;NSKeyValueProxyGetter *_mutableCollectionGetter;};
struct _NSPersonNameComponentsStyleFormatterShort {_NSPersonNameComponentsStyleFormatter super;signed long long _shortNameFormat;_NSPersonNameComponentsStyleFormatterShortVariantGeneral *_variantFormatter;_NSPersonNameComponentsStyleFormatter *_subFormatter;char _forceShortNameEnabled;};
struct _NSPersonNameComponentsStyleFormatterLong {_NSPersonNameComponentsStyleFormatter super;};
struct _CFXNotificationDarwinTokenRegistration {_CFXNotificationTokenRegistration super;int _notifyToken;};
struct NSKeyValueFastMutableCollection1Getter {NSKeyValueProxyGetter super;NSKeyValueNonmutatingCollectionMethodSet *_nonmutatingMethods;NSKeyValueMutatingCollectionMethodSet *_mutatingMethods;};
struct NSKeyValueFastMutableCollection2Getter {NSKeyValueProxyGetter super;NSKeyValueGetter *_baseGetter;NSKeyValueMutatingCollectionMethodSet *_mutatingMethods;};
struct _NSConstraintDescriptionLayoutRuleNode {_NSLayoutRuleNode super;NSLayoutConstraint *_ownedConstraint;};
struct NSKeyValueIvarMutableCollectionGetter {NSKeyValueProxyGetter super;objc_ivar *_ivar;};
struct NSKeyValueSlowMutableCollectionGetter {NSKeyValueProxyGetter super;NSKeyValueGetter *_baseGetter;NSKeyValueSetter *_baseSetter;};
struct NSScriptToManyRelationshipDescription {NSScriptPropertyDescription super;unsigned int _plistAppleEventCode;char _isLocationRequiredToCreate;char _shouldByDefaultInsertAtBeginning;};
struct NSSimpleAttributeDictionaryEnumerator {NSEnumerator super;NSSimpleAttributeDictionary *dictionary;unsigned long long nextElement;};
struct NSSecureUnarchiveFromDataTransformer {NSValueTransformer super;};
struct _CFXNotificationObserverRegistration {_CFXNotificationRegistrationContainer super;void *_observer;};
struct _CFXNotificationObjectRegistration {_CFXNotificationRegistrationContainer super;void *_object;};
struct NSConcreteMapTableValueEnumerator {NSEnumerator super;NSConcreteMapTable *mapTable;unsigned long long counter;};
struct NSKeyValueNilOrderedSetEnumerator {NSEnumerator super;};
struct NSRegularExpressionCheckingResult {NSTextCheckingResult super;};
struct NSUnitElectricPotentialDifference {NSDimension super;};
struct _NSConcreteUserNotificationAction {NSUserNotificationAction super;NSString *_title;NSString *_identifier;};
struct _NSObservableKeyPathChangeAdaptor {NSObservableKeyPath super;};
struct NSKeyValueShareableObservanceKey {NSKeyValueObservance super;};
struct _CFXNotificationNameRegistration {_CFXNotificationRegistrationContainer super;__CFString *_name;};
struct _NSFCUncancellableBlockOperation {NSBlockOperation super;};
struct _NSMostCommonJapaneseCharsKeySet {_NSSharedKeySetS super;};
struct _NSObservingBlockSinkObservation {_NSConcreteBlockSinkObservation super;};
struct NSDistributedNotificationCenter {NSNotificationCenter super;};
struct NSSHIFTJISX0213EncodingDetector {NSEncodingDetector super;};
struct _NSMostCommonChineseCharsKeySet {_NSSharedKeySetS super;};
struct NSDistributedObjectsStatistics {NSDictionary super;unsigned long long requestsReceived;unsigned long long repliesSent;unsigned long long requestsSent;unsigned long long repliesReceived;};
struct NSScriptComplexTypeDescription {NSScriptTypeDescription super;unsigned int _appleEventCode;NSArray *_alternativeTypeDescriptions;};
struct NSScriptEnumerationDescription {NSScriptValueTypeDescription super;NSArray *_enumeratorDescriptions;};
struct _NSAutoresizingMaskXAxisAnchor {NSLayoutXAxisAnchor super;};
struct _NSAutoresizingMaskYAxisAnchor {NSLayoutYAxisAnchor super;};
struct _NSChineseBigramKeySet_SKS_SKS {_NSSharedKeySetS super;};
struct _NSMostCommonKoreanCharsKeySet {_NSSharedKeySetS super;};
struct __NSDictionaryObjectEnumerator {__NSFastEnumerationEnumerator super;};
struct NSComparisonPredicateOperator {NSPredicateOperator super;unsigned long long _variant;unsigned long long _options;};
struct NSFilesystemItemCopyOperation {NSDirectoryTraversalOperation super;NSString *_destinationPath;NSMutableSet *_skippedPaths;unsigned long long _options;};
struct NSFilesystemItemLinkOperation {NSFilesystemItemCopyOperation super;};
struct NSScriptObjectTypeDescription {NSScriptTypeDescription super;NSScriptClassDescription *_classDescription;};
struct NSScriptRecordTypeDescription {NSScriptTypeDescription super;};
struct _NSCompositeLayoutXAxisAnchor {NSLayoutXAxisAnchor super;NSLayoutXAxisAnchor *_xAxisAnchor;double _constant;double _dimensionMultiplier;NSLayoutDimension *_dimension;};
struct _NSCompositeLayoutYAxisAnchor {NSLayoutYAxisAnchor super;NSLayoutYAxisAnchor *_yAxisAnchor;double _constant;double _dimensionMultiplier;NSLayoutDimension *_dimension;};
struct _NSCopyOnWriteCalendarWrapper {NSCalendar super;NSCalendar *cal;_NSRefcountedPthreadMutex *_lock;char needsToCopy;};
struct _NSOwningObservingObservation {_NSConcreteObservation super;NSObservation *_ownedObservation;};
struct CFPrefsSuiteSearchListSource {CFPrefsSearchListSource super;};
struct NSBoundedByPredicateOperator {NSPredicateOperator super;};
struct NSDirectorySubpathsOperation {NSDirectoryTraversalOperation super;NSMutableArray *_subpaths;};
struct NSScriptAttributeDescription {NSScriptPropertyDescription super;unsigned int _appleEventCode;NSString *_presentableDescription;NSObject *_presentableNameOrNames;NSArray *_synonymDescriptions;};
struct NSSingleByteEncodingDetector {NSEncodingDetector super;};
struct NSWINDOWS874EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS932EncodingDetector {NSEncodingDetector super;};
struct NSWINDOWS936EncodingDetector {NSEncodingDetector super;};
struct NSWINDOWS949EncodingDetector {NSEncodingDetector super;};
struct NSWINDOWS950EncodingDetector {NSEncodingDetector super;};
struct NSXMLNSNumberTransformerName {NSValueTransformer super;NSNumberFormatter *_formatter;};
struct _NSArithmeticLayoutDimension {NSLayoutDimension super;NSLayoutDimension *_rootLayoutDimension;double _multiplier;double _constant;};
struct __NSWindows1250TrigramKeySet {_NSSharedKeySetS super;};
struct __NSWindows1251TrigramKeySet {_NSSharedKeySetS super;};
struct __NSWindows1252TrigramKeySet {_NSSharedKeySetS super;};
struct __NSWindows1253TrigramKeySet {_NSSharedKeySetS super;};
struct __NSWindows1254TrigramKeySet {_NSSharedKeySetS super;};
struct __NSWindows1255TrigramKeySet {_NSSharedKeySetS super;};
struct __NSWindows1256TrigramKeySet {_NSSharedKeySetS super;};
struct __NSWindows1257TrigramKeySet {_NSSharedKeySetS super;};
struct __NSWindows1258TrigramKeySet {_NSSharedKeySetS super;};
struct NSBig5HKSCSEncodingDetector {NSEncodingDetector super;};
struct NSCompoundPredicateOperator {NSPredicateOperator super;};
struct NSEUCGB2312EncodingDetector {NSEncodingDetector super;};
struct NSEqualityPredicateOperator {NSPredicateOperator super;char _negate;unsigned long long _options;};
struct NSISO885911EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN1EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN2EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN3EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN4EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN5EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN6EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN7EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN8EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISOLATIN9EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSReplacementCheckingResult {NSSubstitutionCheckingResult super;};
struct NSScriptListTypeDescription {NSScriptTypeDescription super;NSScriptTypeDescription *_elementTypeDescription;};
struct NSUTF16BaseEncodingDetector {NSEncodingDetector super;};
struct NSXMLNSArrayTransformerName {NSValueTransformer super;};
struct _NSCompositeLayoutDimension {NSLayoutDimension super;NSLayoutDimension *_firstLayoutDimension;double _secondLayoutDimensionMultiplier;NSLayoutDimension *_secondLayoutDimension;};
struct _NSOwningMappingObservation {_NSConcreteObservation super;NSObservation *_ownedObservation;};
struct __NSISOLatin10TrigramKeySet {_NSSharedKeySetS super;};
struct __NSPlaceholderFileSecurity {NSFileSecurity super;};
struct __NSWindows874TrigramKeySet {_NSSharedKeySetS super;};
struct NSBetweenPredicateOperator {NSPredicateOperator super;};
struct NSCompletionCheckingResult {NSSubstitutionCheckingResult super;};
struct NSConcreteAttributedString {NSAttributedString super;NSString *string;NSRLEArray *attributes;};
struct NSCorrectionCheckingResult {NSSubstitutionCheckingResult super;NSArray *_alternativeStrings;};
struct NSISO88595EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISO88596EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISO88597EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISO88598EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSKeyValueCollectionGetter {NSKeyValueProxyGetter super;NSKeyValueNonmutatingCollectionMethodSet *_methods;};
struct NSKeyValueComputedProperty {NSKeyValueProperty super;NSString *_operationName;NSString *_operationArgumentKeyPath;NSKeyValueProperty *_operationArgumentProperty;};
struct NSKeyValueNilSetEnumerator {NSEnumerator super;};
struct NSPlaceholderMutableString {NSMutableString super;};
struct NSXMLNSDataTransformerName {NSValueTransformer super;};
struct NSXMLNSDateTransformerName {NSValueTransformer super;};
struct _NSChineseBigramKeySet_SKS {_NSSharedKeySetS super;};
struct _NSCompositeLayoutRuleNode {_NSLayoutRuleNode super;NSMutableArray *_childNodes;};
struct _NSDistanceLayoutDimension {NSLayoutDimension super;NSLayoutAnchor *_minuend;NSLayoutAnchor *_subtrahend;};
struct _NSKeyForwardingGetBinding {NSKeyGetBinding super;char _isStored;char _padding[3];};
struct _NSKeyForwardingSetBinding {NSKeySetBinding super;char _isStored;char _padding[3];};
struct _NSLocalNotificationCenter {NSDistributedNotificationCenter super;};
struct __NSISO885911TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin1TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin2TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin3TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin4TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin5TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin6TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin7TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin8TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISOLatin9TrigramKeySet {_NSSharedKeySetS super;};
struct NSConcreteProtocolChecker {NSProtocolChecker super;NSObject *_target;Protocol *_protocol;};
struct NSDateComponentsFormatter {NSFormatter super;_opaque_pthread_mutex_t _lock;void *_fmt;void *_unused;NSString *_fmtLocaleIdent;NSCalendar *_calendar;NSDate *_referenceDate;NSNumberFormatter *_unitFormatter;unsigned long long _allowedUnits;signed long long _formattingContext;signed long long _unitsStyle;unsigned long long _zeroFormattingBehavior;signed long long _maximumUnitCount;char _allowsFractionalUnits;char _collapsesLargestUnit;char _includesApproximationPhrase;char _includesTimeRemainingPhrase;void *_reserved;};
struct NSGB18030EncodingDetector {NSEncodingDetector super;};
struct NSISO2022EncodingDetector {NSEncodingDetector super;};
struct NSKeyValueUndefinedGetter {NSKeyValueGetter super;};
struct NSKeyValueUndefinedSetter {NSKeyValueSetter super;};
struct NSMutableAttributedString {NSAttributedString super;};
struct NSStringPredicateOperator {NSPredicateOperator super;unsigned long long _flags;};
struct NSUTF16BEEncodingDetector {NSUTF16BaseEncodingDetector super;};
struct NSUTF16LEEncodingDetector {NSUTF16BaseEncodingDetector super;};
struct NSUTF32BEEncodingDetector {NSEncodingDetector super;};
struct NSUTF32LEEncodingDetector {NSEncodingDetector super;};
struct NSUnitConverterReciprocal {NSUnitConverter super;double _reciprocalValue;};
struct NSXMLAttributeDeclaration {NSXMLDTDNode super;NSString *_elementName;unsigned long long _defaultType;NSMutableArray *_enumerations;};
struct NSXMLNSURLTransformerName {NSValueTransformer super;};
struct _NSKoreanBigramKeySet_SKS {_NSSharedKeySetS super;};
struct _NSPlaceholderObservation {NSObservation super;};
struct _NSSharedValueTransformer {NSValueTransformer super;};
struct __NSConcreteURLComponents {NSURLComponents super;__CFURLComponents *_components;};
struct __NSISO88595TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISO88596TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISO88597TrigramKeySet {_NSSharedKeySetS super;};
struct __NSISO88598TrigramKeySet {_NSSharedKeySetS super;};
struct NSUnitElectricResistance {NSDimension super;};
struct _CFRemotePasteboardCache {_CFPasteboardCache super;int _state;};
struct _NSObservableObservation {_NSConcreteObservation super;};
struct NSASCIIEncodingDetector {NSSingleByteEncodingDetector super;};
struct NSDateIntervalFormatter {NSFormatter super;NSLocale *_locale;NSCalendar *_calendar;NSTimeZone *_timeZone;NSString *_dateTemplate;NSString *_dateTemplateFromStyles;void *_formatter;unsigned long long _dateStyle;unsigned long long _timeStyle;char _modified;char _useTemplate;OS_dispatch_semaphore *_lock;void *_reserved[4];};
struct NSEUCJPEncodingDetector {NSEncodingDetector super;};
struct NSEUCKREncodingDetector {NSEncodingDetector super;};
struct NSEUCTWEncodingDetector {NSEncodingDetector super;};
struct NSMessagePortNameServer {NSPortNameServer super;};
struct NSUTF16EncodingDetector {NSUTF16BaseEncodingDetector super;};
struct NSUTF32EncodingDetector {NSEncodingDetector super;};
struct NSUnitConcentrationMass {NSDimension super;};
struct _NSConcreteDateInterval {NSDateInterval super;NSDate *_startDate;double _duration;};
struct _NSJapaneseBigramKeySet {_NSSharedKeySetS super;};
struct _NSObservingObservation {_NSConcreteObservation super;};
struct __NSPlaceholderTimeZone {NSTimeZone super;};
struct NSBig5EncodingDetector {NSEncodingDetector super;};
struct NSBigEEncodingDetector {NSEncodingDetector super;};
struct NSISO8601DateFormatter {NSFormatter super;__CFDateFormatter *_formatter;NSTimeZone *_timeZone;unsigned long long _formatOptions;};
struct NSKeyValueMethodGetter {NSKeyValueGetter super;};
struct NSKeyValueMethodSetter {NSKeyValueSetter super;objc_method *_method;};
struct NSKeyValueMutableArray {NSMutableArray super;NSObject *_container;NSString *_key;};
struct NSMeasurementFormatter {NSFormatter super;void *_formatter;};
struct NSSearchPathEnumerator {NSEnumerator super;signed long long state;unsigned long long directory;unsigned long long domainMask;};
struct NSSocketPortNameServer {NSPortNameServer super;};
struct NSUTF7EncodingDetector {NSEncodingDetector super;};
struct NSUTF8EncodingDetector {NSEncodingDetector super;};
struct NSUTIPredicateOperator {NSPredicateOperator super;};
struct NSXMLNamedFidelityNode {NSXMLNamedNode super;unsigned long long _fidelity;NSString *_whitespace;NSMutableArray *_ranges;NSMutableArray *_names;};
struct _NSChineseBigramKeySet {_NSSharedKeySetS super;};
struct __NSCFAttributedString {__NSCFType super;};
struct NSConcreteMutableData {NSMutableData super;int _reserved : 1;int _needToZero : 1;int _hasVM : 1;int _retainCount : 29;unsigned long long _length;unsigned long long _capacity;void *_bytes;};
struct NSDirectoryEnumerator {NSEnumerator super;};
struct NSEmojiCheckingResult {NSCorrectionCheckingResult super;};
struct NSGBKEncodingDetector {NSEncodingDetector super;};
struct NSInPredicateOperator {NSPredicateOperator super;unsigned long long _flags;NSSubstringPredicateOperator *_stringVersion;};
struct NSMachBootstrapServer {NSPortNameServer super;};
struct NSMutableCharacterSet {NSCharacterSet super;};
struct NSQuoteCheckingResult {NSSubstitutionCheckingResult super;};
struct NSUnitConverterLinear {NSUnitConverter super;double _coefficient;double _constant;};
struct NSUnitElectricCurrent {NSDimension super;};
struct NSUserAppleScriptTask {NSUserScriptTask super;char _isParentDefaultTarget;};
struct _NSIndexSetEnumerator {NSEnumerator super;NSIndexSet *_indexSet;unsigned long long _index;};
struct _NSKVCPIvarGetBinding {NSKeyGetBinding super;signed long long offset;void *get;};
struct _NSKVCPIvarSetBinding {NSKeySetBinding super;signed long long offset;void *set;};
struct _NSKoreanBigramKeySet {_NSSharedKeySetS super;};
struct _NSMappingObservation {_NSConcreteObservation super;};
struct CFPrefsManagedSource {CFPrefsPlistSource super;};
struct NSByteCountFormatter {NSFormatter super;unsigned int _allowedUnits;char _countStyle;char _allowsNonnumericFormatting;char _includesUnit;char _includesCount;char _includesActualByteCount;char _adaptive;char _zeroPadsFractionDigits;int _formattingContext;int _reserved[5];};
struct NSCFAttributedString {NSMutableAttributedString super;};
struct NSComplexOrthography {NSOrthography super;NSString *_dominantScript;NSDictionary *_languageMap;unsigned int _orthographyFlags;};
struct NSConcreteSetChanges {NSSetChanges super;NSSet *_backing;NSMutableArray *_changes;char _backingIsMutable;};
struct NSDashCheckingResult {NSSubstitutionCheckingResult super;};
struct NSKeyValueIvarGetter {NSKeyValueGetter super;};
struct NSKeyValueIvarSetter {NSKeyValueSetter super;};
struct NSKeyValueMutableSet {NSMutableSet super;NSObject *_container;NSString *_key;};
struct NSKeyValueOrderedSet {NSOrderedSet super;NSObject *_container;NSString *_key;NSKeyValueNonmutatingOrderedSetMethodSet *_methods;};
struct NSKeyValueSlowGetter {NSKeyValueGetter super;};
struct NSKeyValueSlowSetter {NSKeyValueSetter super;};
struct NSUnitElectricCharge {NSDimension super;};
struct NSUnitFuelEfficiency {NSDimension super;};
struct NSXMLFidelityElement {NSXMLElement super;unsigned long long _fidelity;NSString *_startWhitespace;NSString *_endWhitespace;};
struct _NSPlaceholderLocale {NSLocale super;};
struct __NSPlaceholderArray {NSMutableArray super;};
struct CFPDPurgeableBuffer {CFPDDataBuffer super;__CFData *handle;unsigned long long allocSize;char safe;char usedMalloc;};
struct NSConcretePortCoder {NSPortCoder super;NSSet *whitelist;};
struct NSKeyPathExpression {NSFunctionExpression super;};
struct NSMutableDictionary {NSDictionary super;};
struct NSMutableOrderedSet {NSOrderedSet super;};
struct NSOrderedSetChanges {NSMutableOrderedSet super;};
struct NSSimpleOrthography {NSOrthography super;unsigned int _orthographyFlags;};
struct NSUserAutomatorTask {NSUserScriptTask super;NSDictionary *_variables;};
struct __NSFinalizingBlock {__NSAutoBlock super;};
struct __NSLocalizedString {NSMutableString super;NSMutableString *original;NSDictionary *config;};
struct CFPrefsCloudSource {CFPrefsPlistSource super; char *_configPath; char *_storeName;char _enabled;};
struct NSPlaceholderValue {NSNumber super;_NSZone *zoneForInstance;};
struct NSUnitAcceleration {NSDimension super;};
struct _NSStdIOFileHandle {NSConcreteFileHandle super;};
struct __NSCFCharacterSet {__NSCFType super;};
struct __NSCFOutputStream {NSOutputStream super;};
struct __NSPlaceholderSet {NSMutableSet super;};
struct NSEnergyFormatter {NSFormatter super;void *_formatter;char _isForFoodEnergyUse;void *_reserved[2];};
struct NSLanguageContext {NSMutableDictionary super;NSMutableDictionary *_dict;void *_reserved;};
struct NSLengthFormatter {NSFormatter super;void *_formatter;char _isForPersonHeight;void *_reserved[2];};
struct NSMutableRLEArray {NSRLEArray super;};
struct NSNumberFormatter {NSFormatter super;NSMutableDictionary *_attributes;__CFNumberFormatter *_formatter;unsigned long long _counter;unsigned long long _behavior;NSRecursiveLock *_lock;unsigned long long _stateBitMask;signed long long _cacheGeneration;void *_reserved[8];};
struct NSUnitIlluminance {NSDimension super;};
struct NSUnitTemperature {NSDimension super;};
struct __NSCFInputStream {NSInputStream super;};
struct __NSLocalTimeZone {NSTimeZone super;};
struct CFPDCFDataBuffer {CFPDDataBuffer super;__CFData *data;};
struct NSCFCharacterSet {NSMutableCharacterSet super;};
struct NSCFOutputStream {NSOutputStream super;};
struct NSConstantString {NSSimpleCString super;};
struct NSNullFileHandle {NSFileHandle super;};
struct NSUnitDispersion {NSDimension super;};
struct __NSFileSecurity {NSFileSecurity super;_filesec *_filesec;};
struct NSCFInputStream {NSInputStream super;};
struct NSDecimalNumber {NSNumber super;int _exponent : 8;int _length : 4;int _isNegative : 1;int _isCompact : 1;int _reserved : 1;int _hasExternalRefCount : 1;int _refs : 16;unsigned short _mantissa[];};
struct NSMassFormatter {NSFormatter super;void *_formatter;char _isForPersonMassUse;void *_reserved[2];};
struct NSPurgeableData {NSMutableData super;unsigned long long _length;int _accessCount;unsigned char _private[32];void *_reserved;};
struct NSUnitFormatter {NSFormatter super;NSNumberFormatter *_numberFormatter;unsigned long long _unitOptions;signed long long _unitStyle;UAMeasureFormat *_formatter;UPluralRules *_prules;char _modified;NSLocale *_locale;};
struct NSUnitFrequency {NSDimension super;};
struct _NSAutoCalendar {NSCalendar super;_opaque_pthread_mutex_t _lock;NSCalendar *cal;NSLocale *changedLocale;NSTimeZone *changedTimeZone;unsigned long long changedFirstWeekday;unsigned long long changedMinimumDaysinFirstWeek;NSDate *changedGregorianStartDate;};
struct __NSDictionary0 {NSDictionary super;};
struct __NSEnumerator0 {NSEnumerator super;};
struct __NSOrderedSetM {NSMutableOrderedSet super;unsigned long long _used;__CFBasicHash *_set;NSMutableArray *_array;};
struct NSArrayChanges {NSMutableArray super;};
struct NSUnitDuration {NSDimension super;};
struct NSUnitPressure {NSDimension super;};
struct _NSKVO1Adaptor {_NSConcreteObservation super;NSObservableKeyPath *kp;char emitsChanges;};
struct __NSCFCalendar {NSCalendar super;};
struct __NSCFBoolean {__NSCFType super;};
struct NSAutoLocale {NSLocale super;NSLocale *loc;_opaque_pthread_mutex_t _lock;};
struct NSUnitEnergy {NSDimension super;};
struct NSUnitLength {NSDimension super;};
struct NSUnitVolume {NSDimension super;};
struct __NSCFLocale {NSLocale super;};
struct __NSCFNumber {__NSCFType super;};
struct __NSCFString {__NSCFType super;};
struct __NSTimeZone {NSTimeZone super;__CFString *_name;__CFData *_data;void **_ucal;_opaque_pthread_mutex_t _lock;};
struct __NSCFError {__NSCFType super;};
struct NSDirInfo {NSMutableDictionary super;NSMutableDictionary *dict;};
struct NSRTFD {NSMutableDictionary super;NSMutableDictionary *dict;};
struct _CFXNotificationDistributedTokenQueueRegistration {_CFXNotificationDistributedTokenRegistration super;id _queue;};
struct _CFXNotificationDarwinTokenQueueRegistration {_CFXNotificationDarwinTokenRegistration super;id _queue;};
struct NSExtendedRegularExpressionCheckingResult {NSRegularExpressionCheckingResult super;NSRegularExpression *_regularExpression;_NSRange _ranges[7];};
struct _CFXNotificationObjcObserverRegistration {_CFXNotificationObserverRegistration super;char _useFallback;id _object;};
struct NSSimpleRegularExpressionCheckingResult {NSRegularExpressionCheckingResult super;NSRegularExpression *_regularExpression;_NSRange _ranges[3];};
struct _CFXNotificationTokenQueueRegistration {_CFXNotificationTokenRegistration super;id _queue;};
struct NSConcreteMutableAttributedString {NSMutableAttributedString super;NSMutableString *mutableString;NSMutableRLEArray *mutableAttributes;_CA084A1CA6E70A8F36D8E05FFEE5F48C fields;};
struct NSConcreteOrderedSetChanges {NSOrderedSetChanges super;_FA39A5CF25124FDDCC1018220017DEE1 _changes;};
struct NSURLDirectoryEnumerator {NSDirectoryEnumerator super;__CFURLEnumerator *_enumerator;id _errorHandler;char shouldContinue;};
struct NSConcreteArrayChanges {NSArrayChanges super;_FA39A5CF25124FDDCC1018220017DEE1 _changes;};
struct NSSharedKeyDictionary {NSMutableDictionary super;NSSharedKeySet *_keyMap;unsigned long long _count;id *_values;void *_ifkIMP;NSMutableDictionary *_sideDic;unsigned long long _mutations;};
struct _NSNestedDictionary {NSMutableDictionary super;id _locals;id _bindings;};
struct NSUnkeyedPortCoder {NSConcretePortCoder super;id sndPort;id rcvPort;NSDOStreamData *doStreamData;NSMutableArray *components;NSMutableArray *importedObjects;unsigned long long componentIndex;char isBycopy;char isByref;char isValid;};
struct NSKeyedPortCoder {NSConcretePortCoder super;id sndPort;id rcvPort;NSMutableDictionary *root;NSMutableArray *containers;NSMutableArray *components;char mainDataFinished;unsigned long long nextGenericIndex;unsigned long long nextOutOfLineGenericIndex;char isBycopy;char isByref;char isValid;NSMutableArray *importedObjects;};
struct __NSCFDictionary {NSMutableDictionary super;unsigned char _cfinfo[4];unsigned int _rc;unsigned int _bits[4];void *_callbacks;id *_values;id *_keys;};
struct __NSDictionaryM {NSMutableDictionary super;_8727CF87EF637FBC72E2580FFB82C074 storage;__cow_state_t *cow;};
struct _NSPersonNameComponentsStyleFormatterShortNameSimpleFallback {_NSPersonNameComponentsStyleFormatterShortVariantGeneral super;};
struct _NSPersonNameComponentsStyleFormatterFamilyInitialVariant {_NSPersonNameComponentsStyleFormatterShortVariantGeneral super;};
struct _NSPersonNameComponentsStyleFormatterGivenInitialVariant {_NSPersonNameComponentsStyleFormatterShortVariantGeneral super;};
struct _CFXNotificationNameWildcardObjectRegistration {_CFXNotificationNameRegistration super;};
struct _NSPersonNameComponentsStyleFormatterAvatar {_NSPersonNameComponentsStyleFormatterShort super;};
struct NSComplexRegularExpressionCheckingResult {NSRegularExpressionCheckingResult super;NSRegularExpression *_regularExpression;NSArray *_rangeArray;};
struct NSScriptPropertiesRecordTypeDescription {NSScriptRecordTypeDescription super;NSScriptClassDescription *_containerClassDescription;};
struct NSScriptDeclaredRecordTypeDescription {NSScriptRecordTypeDescription super;NSString *_name;unsigned int _appleEventCode;NSArray *_fieldDescriptions;char _isHidden;NSString *_presentableDescription;};
struct NSScriptToOneRelationshipDescription {NSScriptAttributeDescription super;};
struct _NSKeyedUnarchiveFromDataTransformer {_NSSharedValueTransformer super;};
struct NSScriptFakeObjectTypeDescription {NSScriptObjectTypeDescription super;unsigned int _appleEventCode;};
struct NSTokenMatchingPredicateOperator {NSStringPredicateOperator super;};
struct NSKeyValueNotifyingMutableArray {NSKeyValueMutableArray super;NSMutableArray *_mutableArray;};
struct _NSUnarchiveFromDataTransformer {_NSSharedValueTransformer super;};
struct NSAllDescendantPathsEnumerator {NSDirectoryEnumerator super;NSString *path;NSArray *contents;unsigned long long idx;NSString *prepend;NSAllDescendantPathsEnumerator *under;NSFileAttributes *directoryAttributes;NSString *pathToLastReportedItem;unsigned long long depth;char cross;char _padding[3];};
struct NSKeyValueNotifyingMutableSet {NSKeyValueMutableSet super;NSMutableSet *_mutableSet;};
struct NSWINDOWS1250EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS1251EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS1252EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS1253EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS1254EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS1255EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS1256EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS1257EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSWINDOWS1258EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSISO2022JP1EncodingDetector {NSISO2022EncodingDetector super;};
struct NSISO2022JP2EncodingDetector {NSISO2022EncodingDetector super;};
struct NSISOLATIN10EncodingDetector {NSSingleByteEncodingDetector super;};
struct NSSubstringPredicateOperator {NSStringPredicateOperator super;unsigned long long _position;};
struct NSISO2022CNEncodingDetector {NSISO2022EncodingDetector super;};
struct NSISO2022JPEncodingDetector {NSISO2022EncodingDetector super;};
struct NSISO2022KREncodingDetector {NSISO2022EncodingDetector super;};
struct NSKeyValueMutableOrderedSet {NSMutableOrderedSet super;NSObject *_container;NSString *_key;};
struct NSMatchingPredicateOperator {NSStringPredicateOperator super;int _contextLock;_F8165AA1E9677408815E59FB23BBBACE *_regexContext;};
struct _NSNegateBooleanTransformer {_NSSharedValueTransformer super;};
struct NSDecimalNumberPlaceholder {NSDecimalNumber super;};
struct NSHZGB2312EncodingDetector {NSISO2022EncodingDetector super;};
struct NSKeyValueFastMutableArray {NSKeyValueMutableArray super;NSKeyValueMutatingArrayMethodSet *_mutatingMethods;};
struct NSKeyValueIvarMutableArray {NSKeyValueMutableArray super;objc_ivar *_ivar;};
struct NSKeyValueSlowMutableArray {NSKeyValueMutableArray super;NSKeyValueGetter *_valueGetter;NSKeyValueSetter *_valueSetter;char _treatNilValuesLikeEmptyArrays;char _padding[3];};
struct __NSPlaceholderDictionary {NSMutableDictionary super;};
struct __NSPlaceholderOrderedSet {NSMutableOrderedSet super;};
struct NSKeyValueFastMutableSet {NSKeyValueMutableSet super;NSKeyValueMutatingSetMethodSet *_mutatingMethods;};
struct NSKeyValueIvarMutableSet {NSKeyValueMutableSet super;objc_ivar *_ivar;};
struct NSKeyValueSlowMutableSet {NSKeyValueMutableSet super;NSKeyValueGetter *_valueGetter;NSKeyValueSetter *_valueSetter;char _treatNilValuesLikeEmptySets;char _padding[3];};
struct _NSObservableKVO1Adaptor {_NSObservableObservation super;NSObservableKeyPath *kp;char emitsChanges;};
struct NSLikePredicateOperator {NSMatchingPredicateOperator super;};
struct _NSIsNotNilTransformer {_NSNegateBooleanTransformer super;};
struct __NSCFConstantString {__NSCFString super;};
struct NSPlaceholderNumber {NSPlaceholderValue super;};
struct _NSIsNilTransformer {_NSNegateBooleanTransformer super;};
struct __NSLocalTimeZoneI {__NSLocalTimeZone super;};
struct NSCFDictionary {__NSCFDictionary super;};
struct NSKeyValueNotifyingMutableOrderedSet {NSKeyValueMutableOrderedSet super;NSMutableOrderedSet *_mutableOrderedSet;};
struct NSKeyValueFastMutableOrderedSet {NSKeyValueMutableOrderedSet super;NSKeyValueMutatingOrderedSetMethodSet *_mutatingMethods;};
struct NSKeyValueIvarMutableOrderedSet {NSKeyValueMutableOrderedSet super;objc_ivar *_ivar;};
struct NSKeyValueSlowMutableOrderedSet {NSKeyValueMutableOrderedSet super;NSKeyValueGetter *_valueGetter;NSKeyValueSetter *_valueSetter;char _treatNilValuesLikeEmptyOrderedSets;char _padding[3];};
struct NSKeyValueFastMutableArray1 {NSKeyValueFastMutableArray super;NSKeyValueNonmutatingArrayMethodSet *_nonmutatingMethods;};
struct NSKeyValueFastMutableArray2 {NSKeyValueFastMutableArray super;NSKeyValueGetter *_valueGetter;};
struct NSKeyValueFastMutableSet1 {NSKeyValueFastMutableSet super;NSKeyValueNonmutatingSetMethodSet *_nonmutatingMethods;};
struct NSKeyValueFastMutableSet2 {NSKeyValueFastMutableSet super;NSKeyValueGetter *_valueGetter;};
struct NSKeyValueFastMutableOrderedSet1 {NSKeyValueFastMutableOrderedSet super;NSKeyValueNonmutatingOrderedSetMethodSet *_nonmutatingMethods;};
struct NSKeyValueFastMutableOrderedSet2 {NSKeyValueFastMutableOrderedSet super;NSKeyValueGetter *_valueGetter;};



/// #endif ===true


