
#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\sparc\sparc.til.h"
/// #define GHIDRA ===DEFINED

/// #ifndef INCLUDE_GUARD_sparc_til ===true

/// #define INCLUDE_GUARD_sparc_til ===DEFINED


#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\5_gengdt\sparc\.\..\..\..\..\IDAPlugins\idatil2c\common.h"


/// #define __int64  long long ===DEFINED
/// #define __int32  int ===DEFINED
/// #define __int16  short ===DEFINED
/// #define __int8  char ===DEFINED

/// #ifdef GHIDRA ===true

typedef struct {
    long long u1;
    long long u2;
} __int128;
typedef struct {
    unsigned long long u1;
    unsigned long long u2;
} __uint128;
/// #endif ===true


typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;

/// #define _BYTE  uint8_t ===DEFINED
/// #define _WORD  uint16_t ===DEFINED
/// #define _QWORD  uint64_t ===DEFINED
/// #define _DWORD  uint32_t ===DEFINED



/// #ifndef HAVETYPE_bool ===true

/// #define bool  char ===DEFINED
/// #endif ===true


/// #ifndef HAVETYPE___u32 ===true

typedef uint32_t __u32;
/// #endif ===true

/// #ifndef HAVETYPE___u16 ===true

typedef uint16_t __u16;
/// #endif ===true

/// #ifndef HAVETYPE___u64 ===true

typedef uint64_t __u64;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_uid32_t ===true

typedef unsigned int __kernel_uid32_t;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_mqd_t ===true

typedef int __kernel_mqd_t;
/// #endif ===true

/// #ifndef HAVETYPE_DOT11_DIRECTION ===true

typedef int DOT11_DIRECTION; 
/// #endif ===true

/// #ifndef HAVETYPE__DEVICE_RELATION_TYPE ===true

enum _DEVICE_RELATION_TYPE {_DEVICE_RELATION_TYPE_UNDEFINED,};
/// #endif ===true



/// #define __fastcall ===DEFINED

/// #define __unaligned ===DEFINED

/// #define __stdcall ===DEFINED

/// #define __cppobj ===DEFINED

/// #define __declspec([x])   ===DEFINED
/// #define __hidden ===DEFINED

/// #define __cdecl ===DEFINED

/// #define __noreturn ===DEFINED

/// #define __pascal ===DEFINED

/// #define __near ===DEFINED

/// #define __high ===DEFINED


/// #define const ===DEFINED

/// #define this  _this ===DEFINED
/// #define near ===DEFINED


typedef char _Mbstatet;

typedef void **va_list;





























 
#line 4: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\sparc\sparc.til.h"




struct nss_netdirbyaddr_in______50C6C771A4EDD455CAD0D8DFE1969C14___2B76CCD4C68FA5116F2B79D93ECF9A8B;
struct nss_netdirbyaddr_in______50C6C771A4EDD455CAD0D8DFE1969C14___A9483FE5E62180344C8B6F942B51662C;
struct nss_netdirbyname_in______199656A6E013B40F3B25B2A0A5E1878D___5995339A35AADA7B31B84FCA93E4D7C5;
struct nss_netdirbyname_in______199656A6E013B40F3B25B2A0A5E1878D___BFAC7FB397D43626CBC2D8E8416F15CB;
struct lock_manager_pid_list___4DC38F0FE7A8191D13CDBC3374F7BD69___DC12B69B71FCF6E7CE697C9B98D1D920;
struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___54452C09C3FB8D7AD926D1B264F470FB;
struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___6152E0D14B08C53F7D041BC3E28DC5EB;
struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___E0F3893B754C74B700FBB8F1102F79FF;
struct mdi_register_address___1D710587ACD8F96B72E62202A6B4467B___7408794E9FAFA6D3794D2FEFC05E2672;
struct mdi_register_address___1D710587ACD8F96B72E62202A6B4467B___AAF521FFECC16E0F4B08F725D6CA6B0D;
struct mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0___038C17E0070C4E198CB4CFD3D7418D00;
struct mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0___317870EC7F9E5F5CA168BD5488628DA7;
struct mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176___0B2A96B84180496199ED52D5315E28CF;
struct mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176___AB6D7823DFFA587DE3AB49922CD65E6D;
struct nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547___E109A5D6027DEB813545D8BF49E916D8;
struct nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2___E109A5D6027DEB813545D8BF49E916D8;
union nss_netdirbyaddr_in___52654151BE2F33B35A12C07C8189686F___50C6C771A4EDD455CAD0D8DFE1969C14;
union nss_netdirbyname_in___A81B8F3144EDB2CCC4B96A77B00E3123___199656A6E013B40F3B25B2A0A5E1878D;
struct k_siginfo_________1E1D46254D77D7AA17918C17CAF3F7C6___3D26F7DC2EE9BFA01DA7951ECDA8B430;
struct k_siginfo_________1E1D46254D77D7AA17918C17CAF3F7C6___6C9D3494F7394A5542DE40AFB5D524A6;
struct _pthread_mutex___1A7858AFF91A54C35A86C698AE036482___50F3AE10509153FFBB1A15F9D86B57ED;
struct accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76___BFD7413E14FC21CAB05150D69A0647C0;
struct accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76___D52F10176CE5E6769EE83800681284AC;
struct cdrom_tocentry___4A050E57821F0F876A45302BC49D06BB___5680DDBB97F8FD3AF591112B550EB0BE;
struct rejected_reply___2B53589865B36E9C26DCD66F40988BA8___D52F10176CE5E6769EE83800681284AC;
struct cdrom_subchnl___426CCB5B871ABC0B6979E88E159E461E___5680DDBB97F8FD3AF591112B550EB0BE;
struct siginfo_________F5CA292679AFF35DF48F2E3B742B91CE___3D26F7DC2EE9BFA01DA7951ECDA8B430;
struct siginfo_________F5CA292679AFF35DF48F2E3B742B91CE___6C9D3494F7394A5542DE40AFB5D524A6;
union k_siginfo______E77A5845F57C2E0E9F7B0E52AACFC772___1E1D46254D77D7AA17918C17CAF3F7C6;
union nss_XbyY_key___2B30735CA198EE135C9CF196B5967FEB___1B8C580BAD0E12BFB07DA020F29DD50C;
struct pln_address___5B09262AB1EEEA85D62AFB703E1F9FE4___D6F8DBE4DF26C786F25BF1CD90CF2E7E;
struct isdn_param___CC0818EEDB9939D07B3B37CF76D5BC51___E3C3E6EDB4E40BC00986BE35B850D35D;
union siginfo______B04DB3B3CC2294C7D842DC1A71FF04F2___F5CA292679AFF35DF48F2E3B742B91CE;
struct auxent______5426BF9CDAC0D098DF12E4CF0DDB9B67___93D0B1966774B86D3450284C91FC650B;
struct auxent______5426BF9CDAC0D098DF12E4CF0DDB9B67___A4FE982D5F029E6ACEFDE76E40C46556;
struct auxent______FAC801B16405A3810F07150B5E65B5F1___6A81AB9DD74A0937A06BA2C0FB9C8664;
struct door_desc___25857EF0BB56C9434AE30E0D4D8F6E3F___4FC0E9F7C1E4FBF8E47EDF6D621C02B8;
struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___C50A7FE09995E3AE62471BF9E2207266;
struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___E77A5845F57C2E0E9F7B0E52AACFC772;
struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___EF0AB624753C0265765781C86414B739;
struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___F8DD959EF7757CB3FE124040C2995881;
union scsi_cdb___C7BA4B60DE78D71094D9A2B3854B7108___283DB60FC2BC13980623105C0AF94F5F;
struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___0A785BFE2C1FC8F220D4B5E421FF4D4B;
struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___53D01225980FCAE7122E28993227E8F1;
struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___7B3B6785F52FEBD22F1447BAEAA20549;
struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___BF1873CBC7925A80863A89A5F584CFD8;
struct in_addr___62419D96C55FD564B59AC1457FCC29DF___CA47E2D0110326C1FF3241D99B03738B;
struct in_addr___62419D96C55FD564B59AC1457FCC29DF___F83FB9AF7C487DE20DBC314CA3F6F492;
struct objdata___B3007D6063AF66DF722E8A0D3E39E00C___C5CA305DAC14A48247D92F909AB77E9C;
struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___C0A0CADF59D9B7AA8DD004285CB4071F;
struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___CDFB08817BACAD3B52BC51E53A98F9E8;
struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___D52F10176CE5E6769EE83800681284AC;
struct siginfo___61EAF0F09D3366CB297160630E2CDB63___6967CB540280E7650496FA35CF8D6785;
struct siginfo___61EAF0F09D3366CB297160630E2CDB63___B04DB3B3CC2294C7D842DC1A71FF04F2;
struct siginfo___61EAF0F09D3366CB297160630E2CDB63___EF0AB624753C0265765781C86414B739;
struct siginfo___61EAF0F09D3366CB297160630E2CDB63___F8DD959EF7757CB3FE124040C2995881;
struct tmpnode___8A064BB42F06F947A31D89B2B058AC9B___9DB28C43D4E3267093DD49E88C2EC05A;
struct tmpnode___8A064BB42F06F947A31D89B2B058AC9B___B23A431050292DDB2A4FAE77ED622141;
union auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774___5426BF9CDAC0D098DF12E4CF0DDB9B67;
union auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774___FAC801B16405A3810F07150B5E65B5F1;
struct dsplog___DABDA4726C127F966E30EBE921BDE6CC___3312E2CECBED6EEC31AB8F3844196AC4;
struct dsplog___DABDA4726C127F966E30EBE921BDE6CC___3AF9F845BE34840AF45A939F03073E99;
struct syment___DDDE857849BC8DF52744F40651AC3747___FF8ECF8B5000729F16967D2BEB64C9EE;
struct fid___51BF437B1B3635FB7766BD36FE5A8A71___D6C94933DFB77C745B6D4069BF1BE876;
struct _3C540F5A14E02DF258E6208309F9E315___BA6BFB51A1B47E4DD1A444CD784794AC;
struct _3C540F5A14E02DF258E6208309F9E315___DCB49AB78C587BA8794D1A369764EF9D;
union _4965EEC990952D9E46AE6A5DEA6146E6___6E85EC2AA6609A2A5C09ADACFEBAAD54;
struct _5396904C4F40B9D23631641FAE141A5A___01B336851ED8000991E8C2192EBE3996;
struct _5396904C4F40B9D23631641FAE141A5A___D98A3E97B5AFC2C9BD51B1758E1EE0CE;
struct _5396904C4F40B9D23631641FAE141A5A___EE37C16298BD5C3A4BE5EB624F81227B;
union _53F0EB4E985DBC87B1B2326D8BF9D556___933121F4FA1889599F702E16603DBB9F;
union _57D8EEF26067F90BF74ECA27AA5A03F5___9E371396825061504C3ADBBA51EB32E4;
union _59C2F8BE822F39E0857CE77037A0F7B3___8DBE08BFF46A6256412FDD0D3B09651A;
struct _5FF073EC236C3BFF212C817E6EDD9CDF___9FDBFB16591870EEECD4F897E60320A7;
union _68E4A9C261F68D94E3C41D4B3B334942___B21EF9EB666022D3B04E309DD56686B1;
struct _722BC7DC76932F8652A49C80584F2606___437BBD4FFAE2830BB41C5AD6BD388D5E;
union _8A43A92A61C1A96F5CE7557D3343944D___0586161EA22616021F7885215C69F5CE;
struct _8E64F109147703DFED6209FCF9267D5F___A5946D7F0FF7E1FB159B888C46BEDC44;
struct _9A6DBE2689E4D78A6CC46A56A422909E___B189DDDFA0FB48CFB28663AECD3BBC94;
struct _C43472A59D225774831BE4F95424A25C___1313F18EDDC5C67AE4E5880DFDCB3F19;
struct _C43472A59D225774831BE4F95424A25C___1FE8A4292B0E849E2B3091F413DEBC14;
struct _EE75A551A8E099987506FD558A5F43CD___1221EBEE0BC5770066296252685AA853;
struct _EE75A551A8E099987506FD558A5F43CD___E768FB53C124E6AD95EC19322F0DD4E9;
struct _F99502BFD9E4DD069DB8AE6B087E28E4___A5946D7F0FF7E1FB159B888C46BEDC44;
union _F9CE4197C78490B9950BF1AD06D064B7___51177246DB161340A18046D041E50857;
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__data_modem;
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_fddi_gen_struct;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_newlabel;
struct ELS_payload__els_cmd_u___6093A708197FAE24BE48D5551ABE0EB0;
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__serial;
union nfslog_READDIRPLUS3res___786DCC1D2A488653AF02F6DB35124A23;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_missing;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_remount;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_symname;
struct cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C__disk;
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__modem;
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__voice;
struct cistpl_longlink_mfc_t___614D05123FB722C586C9743560705075;
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_fddi_stats;
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_netmapents;
union lock_manager_pid_list___4DC38F0FE7A8191D13CDBC3374F7BD69;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_cancel;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_insert;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_symdev;
struct cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C__mem;
union cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483;
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_dnld_reqs;
union mdi_register_address___1D710587ACD8F96B72E62202A6B4467B;
union mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0;
union mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176;
struct mdi_register_address___77CD747F4C29F871554116EFE8364197;
struct mdi_register_address___8AF1E4FBAF14D0237CF30F045044651E;
struct mdi_register_address___B4F8CB07784CFCBDA9ED96F36DDE887E;
union nispasswd_authresult___B078DBBAB3D407E214C0776301111B02;
union nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547;
union nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2;
union prxregset_____pr_v8p___5BB8866D8A3A461A966C1C583747DDAA;
struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g0;
struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g1;
struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g4;
struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g5;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_check;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_close;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_eject;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_error;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_inuse;
struct _lwp_mutex___mutex_flags___mbcp_type_un___mtype_rcount;
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__fax;
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__lan;
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_ppaflags;
struct ip6_hdr___BD1196ABBEDCD1C568FFAAAAE6BA5314__ip6_hdrctl;
union nfslog_READLINK3res___A46E749FDD895D51A9B1F38A8D4A8ED6;
struct nis_bound_directory___F62E7BB7AC2DF8B83A7DAD8BC3B92E6C;
union nispasswd_updresult___493D7F93814B4BE288B5F7ADF9E01279;
union nss_netdirbyaddr_in___52654151BE2F33B35A12C07C8189686F;
union nss_netdirbyname_in___A81B8F3144EDB2CCC4B96A77B00E3123;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_attr;
union lookup_result_type___140B16D067C68AF228EDC44C385D8FF8;
union nfslog_SYMLINK3res___058BB506E3BAF24ED448FA1BD4833203;
union nfslog_writeresult___2A0DD4582CCBEFAEB0E3EA5381B6CC76;
struct r_rpcb_rmtcallargs___FEBD41F85E33D0E2AA5450E1B16FBC3A;
union ufsd_msg_vardata_t___9AED1730912B846ACE4EBF2EED6B8961;
union action_list_entry___C44F4EEF0FC4FD7005019F0CD0D984D6;
union mount_result_type___BD08F148FCCB07EC8727A8AEAEF243F6;
union nfslog_CREATE3res___F55170137A5E702654FDB5D890E6C4CA;
union nfslog_LOOKUP3res___8A12F739DA201A0F01CC54A2347608A8;
union nfslog_createhow3___7B9F70D06961F114B24C4AB5E87688DF;
struct prxregset___13E89D14F043A1ECCED4B43807F5FAAC__pr_v8p;
struct r_rpcb_rmtcallres___C5922F02EDBA7A11822BD586DD2777D6;
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_rm;
struct cdrom_subchnl______5680DDBB97F8FD3AF591112B550EB0BE;
union nfslog_MKDIR3res___058BB506E3BAF24ED448FA1BD4833203;
union nfslog_MKNOD3res___058BB506E3BAF24ED448FA1BD4833203;
union nfslog_WRITE3res___DDA83BA4CE32216F1031293F1AEA52A0;
struct rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D;
union READDIRPLUS3res___3D1E2784399C2722E4AD5035C7D7D261;
union cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C;
struct dbri_dts_opcode___E7979599CA1B17574DB8BEEF940714B1;
struct dbri_rex_opcode___213D8288DE2BBC7A9C1DC9B852CEBCC7;
struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_rtradv;
union nfslog_READ3res___7A0E25342C0EB6C2A4CC1C4D51748A56;
union nfslog_diropres___6E9AE3E0D1C67C0F8C2DC1BF0AAAE32B;
union nfslog_rddirres___6F57ED1BD35F31BB173B09F6B543717D;
union nfslog_rdresult___2EF0204D03A830622AF225C6F00B5166;
struct rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB;
struct ufsd_log_data_t___8F822F98A258527A6C698449669E9920;
union vuid_addr_probe___E494C8051647BAD6AD0F3CB8B4EC75D8;
union _pthread_mutex___1A7858AFF91A54C35A86C698AE036482;
struct _pthread_mutex___5CDA96BDFAA6A2FDFE604EF7C9E48890;
union accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76;
union cdrom_tocentry___4A050E57821F0F876A45302BC49D06BB;
union cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127;
union ddi_minor_data___C8F0215C6A1A24E3095D703645F6536F;
struct di_priv_format___DA5D4B001E276F918FB366B836D0F6B4;
struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_idseq;
union nfs_async_reqs___285A964DA793598A2BC2D03419F06D64;
union nfslog_rdlnres___76B6C630296FCDD7ACE84EB6A7558908;
union rejected_reply___2B53589865B36E9C26DCD66F40988BA8;
union target_private___24B48541EFD51A0AE0FB2755EE87B349;
union ufsd_log_msg_t___960FAB35EDE40EACAA5C69F67904DD69;
struct _pthread_cond___47F9AA781B8B3BD4B4EFEED0C176A991;
union cdrom_subchnl___426CCB5B871ABC0B6979E88E159E461E;
struct directory_obj___1F9DB6EC5B4D38C4C9C3429D1A4D637D;
struct directory_obj___C1C9E10248BAA10524C7D0EEA27D2609;
union getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B;
struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_pmtu;
struct mntinfo_kstat___BCB113A9A38551695E091F53F19F14C3;
union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65;
struct p_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D;
struct vt_start_time___AB8ADE090A0B9DD48F0CA973837EF690;
struct vt_total_time___AB8ADE090A0B9DD48F0CA973837EF690;
struct _7DF901F2330FED44ED065D8472D22EDC__svc_auth_ops;
union PATHCONF3res___13536796C3FFAE43AF7BA7B43E22E21C;
union READLINK3res___0806C2E1EA521BA65FFDD4738E23BA80;
union authdes_verf___D072B0FF48589EAC93A5A80C9BF6CD34;
struct dbri_dts_tsd___5C60E47FC670D9F72FB94116E1FA1533;
struct dbri_dts_tsd___81D97CDFDE4B25C2022176D9D2324F3D;
union krpc_revauth___777FC73716B11D775C37F1C4B1355BA9;
union lm_blockinfo___EAAFFCB58334A5EE6261E6C340DE312B;
union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE;
struct nss_XbyY_key___2B30735CA198EE135C9CF196B5967FEB;
struct nss_XbyY_key___94B6CF0C6915478CD98367858D940171;
struct nss_XbyY_key___CD5F44B92FE3ED666A24DAE448CD6B19;
struct nss_XbyY_key___E5450DB01C1CBC9C11C74BC5DC6DA3FB;
struct p_rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9;
union rd_event_msg___9ECDAEB3AD741762C56870A1C94CE353;
union td_event_msg___1BD937C0E27E3130424F8B8CF85B0670;
union GETATTR2res___0E71511EAA16D209A4D602249505B5F8;
union GETATTR3res___6654F6005606AAD973D4218EB1EDC6A8;
union READDIR3res___0CEAD80A95B6A8F5BBE6BAE222F64D18;
union SETATTR3res___3F242C945E6791122D97917754CE34B9;
union SYMLINK3res___B5265A55B6FE6D7C72613D20EFCEC739;
struct __res_state___A6CBED0F63521320A773A1D0A80BE43A;
union cachefs_req___5AF54FD280CEF09DDCE8149009F1980F;
struct icmp___91F6810D45DA7C23E53CAA18FF826292__id_ip;
struct icmp___91F6810D45DA7C23E53CAA18FF826292__id_ts;
union kstat_named___7F27F6A69995E91B81910D0AAA5ACCB4;
union nfsattrstat___B6E4C4804F8B4E61D83A908BE84CFFC2;
union nfsdiropres___C6DD0A424400D28F5D0F3991578B73A6;
union nfsrddirres___58E4E4C17AE20109EAEABA6611F00FE4;
union nfsrdresult___6A35507E6474F6D0336B5312E06C8FBF;
struct nis_taglist___D5235F6F3B62BCE7910AF756FE53E6D0;
struct npd_request___04A93ECC78428ACBA0FDC65FE7C8FE57;
struct npd_request___C3CD0BD37319ED44942FA197CF7B5408;
union pln_address___5B09262AB1EEEA85D62AFB703E1F9FE4;
struct rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D;
struct vt_abs_time___AB8ADE090A0B9DD48F0CA973837EF690;
union ACCESS2res___7E87908D10127D23949DE19A8553FC52;
union ACCESS3res___BCC91F14EA47E4565CA39B38A6B5ED84;
union COMMIT3res___7375445B622BC480C38364347647FC7B;
union CREATE3res___1344BCDC3351BD45A414A34C7BEA0F35;
union FSINFO3res___6A2CEE5B34ED3E6D5EAD14FB19C2D2E6;
union FSSTAT3res___DAFC2B488956910F0828456CE719C50E;
union GETACL2res___B07A5DE58C687D3B3D1EE7EDFDAFE7CD;
union GETACL3res___3F2F8CF2A694F3B296614A4B9D8F54E4;
union LOOKUP3res___88DF73F2EA33FE7EB0040A420E6940DA;
struct READ3resok___AAF002B4BE02F6C1DC09698F914F418A;
union REMOVE3res___00486109FBB382E14288CE702A95D1DD;
union RENAME3res___0FECC924FDA7A4B020BD4BBCBF891F20;
union SETACL2res___D746CAD3772CAAAF9A580AF137F34722;
union SETACL3res___4771722AF7BF6EE61E540B50092D29CD;
struct WRITE3args___67EF420668BC39A8825B32AFBE42D0CA;
union bp_address___3B940BBAFE206A608BBBF7EC1987BA49;
struct cback_data___8577E6F7A3DA394015609B473F63AD7B;
union createhow3___8A6FCB6AE8ABF4547E3A1B416D5A1A41;
struct ib_request___284138CD61DEACF1E3B0F8ADC9D2B817;
struct ib_request___2D577313DCD2E74CD5A0055993933E3C;
struct ib_request___BC4F227684F3C8C9122828D0FF4C6B30;
union isdn_param___CC0818EEDB9939D07B3B37CF76D5BC51;
struct log_result___946B3E427CBAEF2C8E64E80E43621ACD;
union mknoddata3___FC3C3F7D5DC5FC9EABD2DCD2E16DDF69;
union nfsrdlnres___659D09B361D701D0D66EB16B547B6A97;
struct nis_result___4B6B45C3F1C3815D68D653B8D499AE33;
struct nis_server___DA92845B88BF4FFBAAA2281E50DC5AF5;
struct ns_request___C16B7AFEC0429C3BD747A37F4D827FFD;
union openpromio___323EE700B5499288BFC86B907B5BFC31;
union prfpregset___3423A07CE9086D0915E1099AD093ACC1;
union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC;
struct rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9;
struct ufsd_msg_t___5013129CDB1FAC507F9E476F5694139E;
union ux_extaddr___6B9E6D36BA9C529C32E2823564C5CFF8;
union vioc_event___65B959ED4465248677AB4A78D6E13327;
union MKDIR3res___7AAE3EB51BE7D5127C92F993C6C93453;
union MKNOD3res___74BE56E58793F3A8CB87CC162DE62117;
union RMDIR3res___90C320C3EFE33BF38799E3062F8F7E1F;
union WRITE3res___EFCBE02989981C7512DF7D166CC51BEC;
struct db_result___B843AB932F73FFE0B886650421EE9A7B;
struct des_block___5225801D107CE2D6470E1DB341886AD6;
union desparams___253CA3BE9A5A5329A1F720696CC4BB93;
union door_desc___25857EF0BB56C9434AE30E0D4D8F6E3F;
struct dump_args___00C533AE8545A66FA38641508A3DC473;
union ea_object___0370017D977B975B2DEED3572138FADD;
struct entry_col___E942B815045DEE9FABC14DA0AE6314FC;
struct entry_obj___9954B692FACAC347CBA764979909DFF4;
struct fd_result___864956CB4DA79F92CA310E20E4E9B271;
struct fd_result___E188DDB4946479B1B04909415F6D7A2E;
struct group_obj___6B1AF3D1F6DE7092D80225088D6E3A34;
union icmp6_hdr___85A0B7966B981BE593FDADBE0B8685D7;
union k_siginfo___804257DC7E857FCD4172ACB0D5A910E9;
struct log_entry___1E639176190539C4AF5A837E820AE922;
union nfsstatfs___08C78D7C851FA76173109663D8432C36;
union prxregset___13E89D14F043A1ECCED4B43807F5FAAC;
union rd_notify___143F0EF771439D241AFD6E8AB1506B64;
union sigaction___3EF29538CA63FA48B196EFE7F55176B1;
struct table_obj___37F826B7C2AFF7B3E483E0E1EE89ED51;
union td_notify___143F0EF771439D241AFD6E8AB1506B64;
union LINK3res___127574E1D56DCEC597578398563C3456;
union READ3res___EBFFBF37F715F35896BDA07C9A2D80F4;
union au_token___48B8A567D7721A2375B9B4755C07ABC8;
union cistpl_t___C4278FD82B146D460B453B2BB46DF7C8;
union fdbuffer___3B787F33FCB8F87ECFB5EACDDE5BCC6D;
union fifo_reg___2C4CA6FC96781476665F04CD0317A0CB;
union in6_addr___0B96DB6FF0520CC7F6D64D2FDA9E8D55;
union info_reg___A99CADDF0A6969246070D83E4F241E67;
struct link_obj___6E2208C80A69EAD3D69988E63D048B29;
struct nis_attr___F2081D9F3F0358B3A954C101A2B200CE;
struct scsi_cdb___C7BA4B60DE78D71094D9A2B3854B7108;
struct statsvar___7FCA211C9072D2949954B3DB78BFDDCD;
struct statsvar___BB7C6D2B3C1E1AB741C949E9CDEFD86D;
struct dbri_md___3585FD5177D2C3180482D2FE90B1A361;
struct dbri_md___5BDDECA1D345617A19D694F0479F5E14;
union ea_item___4B8FAD181399369BBD31D3D213262D6C;
union fcp_rsp___7DE1CF9D6261DB3834188948652834A1;
union icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A;
union in_addr___62419D96C55FD564B59AC1457FCC29DF;
union ip6_hdr___BD1196ABBEDCD1C568FFAAAAE6BA5314;
union lifconf___13CA4C53A4CDABC7C7076CCE366D4628;
union mdb_arg___23C4DC01D1EF29DAF9BB24B228A431B7;
struct mib2_ipNetToMediaEntry__ipNetToMediaInfo_s;
union objdata___B3007D6063AF66DF722E8A0D3E39E00C;
union rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF;
union rpc_msg___7D774571B4FAB0E4BBD540829030FA52;
struct secattr___AC4F1B810FD413B8B20095E4821CDF90;
struct secattr___BBC7B5EFA13BC05BE06C962A868FC99E;
union siginfo___61EAF0F09D3366CB297160630E2CDB63;
union tmpnode___8A064BB42F06F947A31D89B2B058AC9B;
union ufs_acl___F7724D0603D30FF994A85BCBA2AD5333;
struct OCF_Event_CardInserted_RegistrationData_t;
struct auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774;
struct auxent___DCBB1492986F0BE2861FD6E058DF7EAB;
struct auxent___F460BEB6336398C870E506DAD23CA9F2;
struct auxent___FB1486A92607447806F09823D579EE12;
union cstate___678131C900E44C8ADDA4E179752E682F;
union dinode___7C68577AF0075A7E4A65BFF776A0DE33;
union dsplog___DABDA4726C127F966E30EBE921BDE6CC;
struct fdcreg___C3A2651014D6C78917994F3FE5B85EFD;
struct filock___667AC850CFE8393E0756DB4723116C22;
struct futmpx___11610CE8875B9446FC755A3DED782E56;
union ifaddr___0DF00F875CAF96EB397809642F17405E;
union ifconf___28C87C5ACD364976D94B96E40062B553;
struct la_wwn___E7FEB4D8EB8DF71B4CA1F98BC2D628AC;
union lifreq___45DD51CF1AA3D53B555DDF2404323785;
union lifreq___9C4034A34F2C584EFE8AFA556B44D076;
union lineno___4D6E082ABC3813EFAD274BDB52D637EC;
union syment___DDDE857849BC8DF52744F40651AC3747;
struct OCF_Event_CardRemoved_RegistrationData_t;
union datab___B2E8909E96C049C2A3E7A2AEEB3F3FB8;
struct dlsap___3C6A35A85173501EDF698F532F45D439;
struct dlsap___9581DFA880E1BDAFBA851730491A1CBF;
struct futmp___11610CE8875B9446FC755A3DED782E56;
union ifreq___031EB9357DA800073593637CA1D35508;
union pcdir___6D2C5C6D3B5BA21ED111F6CD0B750BD5;
union _lwp_mutex___mutex_flags___mbcp_type_un;
struct _lwp_mutex___mutex_lock_un___mutex_lock;
union icmp___6518A9D1B702C5C28B83CB067318DBE9;
union icmp___91F6810D45DA7C23E53CAA18FF826292;
struct mib2_tcp6ConnEntry__tcp6ConnEntryInfo_s;
struct rval___8462DB5BA46F76167B8A3A69903806F1;
struct OCF_Event_CardError_RegistrationData_t;
struct OCF_Event_CardReset_RegistrationData_t;
union buf___06720CD10B1F5166208F8EFA5A9BD2FD;
union fid___51BF437B1B3635FB7766BD36FE5A8A71;
union fpu___5FAD1835C40B8F1B9C5FF4A2CD2D32A1;
union rip___AFFF135AAACB9FA320A59FAF8451ECA8;
union as___FD7ECAE4B99ABB3F02DCF01D47D0EBC9;
union fq___3D3D4FC1770C1E48B1A2982F7A6AC98A;
union fs___9F46D7DD5950A1025F84ACF2764AD23B;
struct mib2_tcpConnEntry__tcpConnEntryInfo_s;
union cfs_dlog_entry__cfs_dlog_entry_items;
struct mib2_ipv6RouteEntry__ipv6RouteInfo_s;
struct ip_timestamp__ipt_timestamp__ipt_ta;
struct mib2_ipv6AddrEntry__ipv6AddrInfo_s;
struct _00ED80C671E56402DFDA98FF57A0F9A3;
struct _0113267646EB0A9CEC05668EA2201D53;
struct _01BD53472F26B36476AF1B984D5B2841;
struct _029C14C2128B1475759967EB9FDC7B4A;
struct _03B9D2AB7EC31E7B5953C0F06C8B7AA9;
struct _04DE162F931BF1138370E48C46D0BB8C;
struct _062E89D0DC7E46D06DD8F412839F5BDD;
struct _066FE788D2AC1D75EE490E561209D556;
struct _06CAB5296C39900A9CE51DBF4F560AD6;
struct _06F14C8D328ECA5949F7DFEA2A047922;
struct _0A0885A099C43036865B53B70EA12DCA;
struct _0A17130E4CE82B668D029EC1E9F64ADD;
struct _0C787AC3F519F07F1A30A3F49C54BEF6;
struct _0F2B39C4889BFBA0BBC9C66D38A1F5D3;
struct _0F6DEF3B8E99612FFBC8A726FE9B31C3;
struct _1095822099D52E0E523F071FF4F33828;
struct _1186758DF1720BB7F25A7D498E851913;
struct _12883A0710B467FBB4742064A9BE69DF;
struct _13471B52BA0ED10EDFBC0B01A6831312;
struct _13EF98051BCCC3A7BE0C6290BDC374BA;
struct _140052591CB0062D1DDFF0A358260292;
struct _151922ADF64B06A7DAF3138A8711D7E7;
struct _160641F2D897670075418D2E6B733231;
struct _16D4A1559E041DBB68E7A1F4F9CBF232;
struct _17DB385B90B304C8609CE6820D4849CB;
struct _187C6244C967198C5905B382B0BFB5FB;
struct _192236FE3311D06A1856619BA2C00C00;
struct _19DEE1C64F7EC3DDB040A3404BEC0D9F;
struct _19E1246DE095363392431173B011D54A;
struct _1C7EDB14D495611F6D5B778EE61996F1;
struct _1E4540432FE6FCBAA14615B1753B1498;
struct _1F097835C705A71A99785C5F8D94F01C;
struct _1FF34CFEF9C2EB17EF4167068BB24E21;
struct _2051B98100A0C61393C608F0D7B8F621;
struct _20B967FD53182EA0ACEED1B6ABCFD823;
struct _211BFD783D8D84C3D8E218C4E6F77865;
struct _21B5ADE7931223AA804E41EE15A82D4B;
struct _250291EC3BC74262394306E05299BF94;
struct _2533481BB5519C9B22079276CD47D0A2;
struct _256FEEFA99C080BE07F3A81A96D4694C;
struct _26B314697E7266AC176F51890C474785;
struct _2A4C46EAAE865C05377B30846399D3D1;
struct _2D2DEA9E8B1723DA9627F35ADE64BFFE;
struct _2ED74837B10F4575EAFC3A6A8D0E8399;
struct _2FC37C12F50461D7B99376C23209E757;
struct _2FF20837F70D0E9E2C94D4E9C91813B8;
struct _318570FC7384B19A4DCAD3D835569F28;
struct _31AE19E04776D95D90F1AA36D4709208;
struct _31DC1A9A30C8BE83503485AFF4563DAB;
struct _3242DF98F1AD6AB2AF4D4F9FD3432406;
struct _32C08F122C9B6B5AD3095757A88A96E6;
struct _3747F54EBF0E40BCD04B6F28DE7EFCF2;
struct _37DC3B712C7ED020EE15F9E8AA85032C;
struct _3A667C09CA9B6E1FC0A4AC3D89CABEC7;
struct _3BD9E21EDFC7EA3B12DCBE973656A8B8;
union _3C540F5A14E02DF258E6208309F9E315;
union _3C8E0388BDDD5F7551C53EF0F32B4233;
struct _3CF515CC911B8F03DF4F355C5ACD22AD;
struct _4205C709627503FCC3E7DAAF0DB99385;
struct _43F9318D896FF98D6032380AA4C8DE55;
struct _458B8F1C203FF7E73654EA82F46BE387;
struct _45AA4025EE1954AFBFB3DA359E0D02DB;
struct _45D3B8D1F0A0E1A15D8490524663D915;
struct _45D578D1CAA1736E8819435F592D8C84;
struct _4664B325D7B1C568276997F8FB024EC2;
struct _4675A006519F4470174748AEB7610016;
struct _4788A0C65CEF1424AE2DE816674E1913;
struct _488DA2D57F3DEC7D8F8D2973FF098AA5;
struct _490D5F12417668765212E4CF5D599182;
struct _4965EEC990952D9E46AE6A5DEA6146E6;
struct _4DAB4BE26238A65C4840EC4623134811;
struct _4DE03E8ED1D3CAFD22EDD6A1211D4CC8;
struct _4F7711BDAF281951A6E73987538C1D62;
struct _4F78B3A32EAF514EACC363DCB345C490;
struct _501B9B174B09982FAB310FE6A591F791;
struct _50A8F2CBF9209E81C59E0189B8E8717A;
struct _52996A3AC8C68F1BEA5587A21EB91746;
union _5396904C4F40B9D23631641FAE141A5A;
struct _53F0EB4E985DBC87B1B2326D8BF9D556;
struct _54EC9098503BC20AC050B3CB62F30CBC;
struct _551C78EEC93CDF0108C003355B4DC50B;
struct _56A66AEB305BDFFF6669B4BC9F04D8CC;
struct _57D8EEF26067F90BF74ECA27AA5A03F5;
struct _57DBDB9F9E69733D408CC307EF34A958;
struct _58179321A8150557048736423AF6F76C;
struct _596FCBE93D83B7A9B9C02E2997D81DA7;
struct _59C2F8BE822F39E0857CE77037A0F7B3;
struct _5A96F9ADF207CF237355020FDA0EFEF5;
struct _5A986AD36714D9EA4A4C301E327B6C4C;
struct _5D176D33403591159BBBEF445356E214;
struct _5F20F5A0DF59391F86268A875D1DFCE5;
struct _5F450950E4D1D1BEF117F0FECB7D4E7F;
struct _5F5854608C3B35F56B7E671DFC3D4679;
struct _5F8D13B29616A56F84BD15B89191A8F7;
union _5FF073EC236C3BFF212C817E6EDD9CDF;
struct _601AB9009B78F952A53B6D0C69238ED9;
struct _60F784A34F5D801B175C2936E7100D6B;
struct _61B607A2274ED5109A268B0B2173104D;
struct _631FA0442200650F637355090EEC1282;
struct _647FE789D073DDA1115A25D9160A600C;
struct _6601AD8F8068B3BD81BCD4072DAC7812;
struct _66B76CCBD7517A35749D93819776E291;
struct _68E4A9C261F68D94E3C41D4B3B334942;
struct _69B63B591732E05C41D6CC17B4FA972F;
struct _6C157D281FCCF3AD18E5920BAFADC6E6;
struct _6F34A6491CA243DAC3BD57A8740A9A28;
union _722BC7DC76932F8652A49C80584F2606;
struct _725E3ED3C7EFF3B90CE6F33C2B731462;
struct _734E31BBDA3A31A5E7F21845616A11EB;
struct _750EEDBB3ABCF24E6FC38F698DC1AE07;
struct _75BAE6E6D7E8D7271432449CBE6780E8;
struct _75FD820D0CE6C215ACE04A8FAA270A6D;
struct _7963ED2253978A4E491ADF870F9A304B;
struct _7A20DF675792E830F977E1284BC7C2E2;
struct _7B7425BDB71A818A922A1DDC8B4A1BCA;
struct _7B9922258B8A0A4B0B5326F3B4359CE8;
struct _7C2C393CADA02B1A2D153D5E661EE10D;
struct _7DF901F2330FED44ED065D8472D22EDC;
struct _7E515F46519A2C03149F8E5448716EB7;
struct _807D4AC2255C0A3001450ADEC11FD819;
union _8118FFB9EEB2C3E80F209039896F74EE;
struct _82C0C6D790EF9405DE6F913108BCAA59;
struct _85563A71CF7457DF5AD2FDE8FB997EAF;
struct _859BFE8FBA42C54E9900208E6ECF19F7;
struct _8716BC3DCA46F0A7F3673119A555C1D4;
struct _8730B17123942F667165FE26F5FCD7CE;
struct _885C04ED232DA6939269E5648CBB0F98;
struct _8A43A92A61C1A96F5CE7557D3343944D;
struct _8A4D2DD0535D3740C9D9302B62B9E8F3;
struct _8A57A83BA984F7959D9E22CB0CD4E5F7;
struct _8B85712FB09FAAC9E4FCB41A89281044;
struct _8D40ACCAC6057C8589735CF1D51B872E;
struct _8E17CB6E332B6DCEA38208AF631FD83A;
union _8E64F109147703DFED6209FCF9267D5F;
struct _9243195F0116F1DC43EDD9D2343B9004;
struct _92C2B677F4D6F16C081E111A1354037E;
struct _94B6D2E03277F36A7EAC6FE7B7D6A054;
struct _96509CB31A3C50C1F728CA63BB4787CF;
struct _979FA3DE6ECCF956231BFC297C4278E6;
struct _987A4977B64401F127AD4A87403FCD8A;
union _9A6DBE2689E4D78A6CC46A56A422909E;
struct _9CAE931C1CBD273987054BC4D502AAC2;
struct _9FB80FD2F500D2E1F9F0E3DE3EE0B629;
struct _A0565235DB0A025ED98270EC8F0003BF;
struct _A313ED2DE25BE046A874D492CFBD731F;
struct _A32966EE8414B065154C0C0FBC0CDA05;
struct _A426C1BFA60F897E08DB82510E56FD03;
struct _A46BFD4B6B8C284ED478D587B5722CAB;
struct _A4BEC33DC2CEF1EA6A21E2966A3DEECD;
struct _A556726339174AF4A052C1DB3ED032E6;
struct _A6F5D22C47870C9C34E13B26D36736E1;
struct _A74C68CDF7A8346DB4740D5AEB53B0D9;
struct _A9BE18D8DE98772F097D505829E8B2F3;
struct _AAC6986373C252F265E5EE15F2042600;
struct _AAECD496E21460385AB9540869BF9C78;
struct _AC1F0727205AA235F31FA7E4FBAB6931;
struct _AD4457FAA5FAAE8991C949BB8D588EAD;
struct _AD898C726F4F86F79B78998236170483;
struct _AF17FACC7559AA50C79D476A9538E1B7;
struct _B089456DFBB446A2250D7264A8E39902;
struct _B2F3592E62A4F6542AD886252093AD89;
union _B5B36604A4D7B91FFF9FA298D0BE592E;
struct _B661844E4DD166A431053E2B2F63C927;
struct _B9298FF2B0C5BA7708F912183DC0A181;
struct _B9BBC47815B70F123F5B3D4C1D596CE1;
struct _BADA0C20D4FCFBDDC178EA94F25BDA19;
struct _BD5CA20501DDBF4BA8A0F05A067801C0;
struct _BDA3EB51A42C3AF06EADB485CA225508;
struct _BDBAD8C22C982B900870BBCDB0629DB6;
struct _C07A277B0B1F71E677259B025564A502;
union _C43472A59D225774831BE4F95424A25C;
union _C57692D243E2F42291707545D24FC942;
struct _C5DA07C86C437AAC183EB88624185419;
struct _C772EEB8BDF2D9B03BC2113DCD14FF9B;
struct _C8DBEC58A6C5CAB5E40652D978B29F79;
struct _C9224CB3878060960E30C62E95CBCE30;
struct _C9793B2A88A40550F3E6FCBE57C78800;
struct _CA18D99C52BF47BA3661A7BE783B3F23;
struct _CA21EB1FE968FC1A84C75EEC389382FF;
struct _CAD4AC390BD8237C223B7EC96D9848DF;
struct _CB6AA1DC15048494E8DB562E85E5F184;
struct _CC222016AA0BB783D225EB3000BADEC7;
struct _CCC1A82A34D7085BB27B55F53CBFD610;
struct _CD160A28723B1B650FC96BC3CBBCB54B;
struct _CE4930CE30C4A3FD577842D3323B273C;
struct _D097637AB270BABD14B3012188BFE07C;
struct _D2112DACD5F28F06A12FA1BD43CEEAAF;
struct _D27487023F7BC296C96A54641356F89B;
struct _D27F01C753CDB3D015D2AEBC850E5649;
struct _D30353D08B71B27BB4CD9334EB50A9EF;
struct _D3341046612766E5971F0E9D3826E5FA;
struct _D34CDA88D8A7072F4DEA084B2AED3D31;
struct _D379431B13F78A36F2202C5AA386190E;
struct _D38312C18728A251C58C258AA639B1E2;
struct _D4691ED55A662893A224D2D25A30EEEC;
struct _D52C4F604E0EF4858A4DDDAA58B8A08E;
struct _D53EBEF53D22F60B85DC57B7CC577C4D;
struct _D5A35B190B3B0D67D693D32BA15204C1;
struct _D69C93AF57A4C706A087FFCB2A33F062;
struct _D743D7FB93846D2A48423E379C4894F1;
struct _D758E79311354DDC9AF0CC7E7C22CD10;
struct _D76263573A98FEFDCCEEF233874FDEC5;
struct _D8694504BF76A56B9D38A17C122FF30C;
struct _D89EB48B0F107D6E39C0EF37AAFDA6FD;
union _DBB18890394B8029ED37E44DCE2D8EED;
struct _DBDB4AF8E469679C3A4CD785AB502395;
struct _DDB9E5FBB16C40A976BC405025678C57;
struct _E0B09092130FDFFEB4124EF1450B8417;
struct _E3ED4D72C7814978A91B05B99D56A6A2;
struct _E66DCE15917F5E19886463E233EC4453;
struct _E714B4690DCD4CE2097239CD07373860;
struct _E7FD7F5919C5B86C45B84B2C205CAA78;
struct _E89C0C6DA392559E0E24C2B68700633F;
struct _E9AB0BCACA98F703B381F818839B97CB;
struct _E9B6FB84B21FB1468EF2F76864DA4C61;
struct _EB9CBE9F844ABCF9E9277596B691C0BF;
struct _ECD491B309C6C7D8FCBA014B12E7CF40;
struct _ED04A3E3A2D9A6729338E838A059863A;
union _EE75A551A8E099987506FD558A5F43CD;
struct _EF437A666C9BB0FC607366CF45CE1FC4;
struct _F0AAB1DC87F2E821A9EF19B3A8438CBF;
struct _F3D1899E2E37EFD927B28027A707AB99;
struct _F4A087914CCBD8B8061D53356491AFE5;
struct _F595FC0EEBF0E630CD599952C6884CED;
struct _F5D530A8B9C8144C513F035766B8BD9F;
struct _F60D842CE7A78CACE989B630880B9FF2;
struct _F8793C5ADA5B1735862C612D8105FB3D;
union _F99502BFD9E4DD069DB8AE6B087E28E4;
struct _F9CE4197C78490B9950BF1AD06D064B7;
struct _F9FB4C2AA908D131736A9D97993FD8DC;
struct _FB115A149FF37A3EAB946997DD4E3A6C;
struct _FB71A6CB4CF311B023B9642DD77B0239;
struct _FC07BF6E13A3F29964B2741842A3FFCB;
struct _FE43560485AD2DF497423A9D2646B91A;
struct _FF2DD7BE9DD2B738A1C99E37059CE979;
struct cistpl_cftable_entry_mem_window_t;
struct isdn_channel_info__isdn_io_stats;
struct mib2_ipRouteEntry__ipRouteInfo_s;
struct cistpl_cftable_entry_io_range_t;
struct mib2_ipAddrEntry__ipAdEntInfo_s;
struct mib2_udp6Entry__udp6EntryInfo_s;
struct cistpl_cftable_entry_stce_ev_t;
struct cistpl_cftable_entry_stce_pd_t;
struct mib2_udpEntry__udpEntryInfo_s;
struct nfs_fh3__nfs_fh3_u__nfs_fh3_i;
struct cachefsio_getattrname_return;
struct cistpl_cftable_entry_speed_t;
struct pcmcia_adapter_nexus_private;
struct cachefs_log_csymlink_record;
struct cachefs_log_mdcreate_record;
struct cachefs_log_populate_record;
struct cachefs_log_readlink_record;
struct cachefs_log_truncate_record;
struct cachefsio_setsecattr_return;
struct cistpl_cftable_entry_misc_t;
struct gss_channel_bindings_struct;
union ip_timestamp__ipt_timestamp;
struct _lwp_cond___lwp_cond_flags;
union _lwp_mutex___mutex_lock_un;
struct cachefs_log_filldir_record;
struct cachefs_log_getpage_record;
struct cachefs_log_gpfront_record;
struct cachefs_log_logfile_header;
struct cachefs_log_nocache_record;
struct cachefs_log_putpage_record;
struct cachefs_log_readdir_record;
struct cachefs_log_symlink_record;
struct cachefsio_lostfound_return;
struct cistpl_cftable_entry_irq_t;
struct cistpl_cftable_entry_mem_t;
struct cistpl_cftable_entry_pwr_t;
struct extension_signature_struct;
struct mutex_impl__adaptive_mutex;
struct _ldterm_unicode_data_cell;
struct cachefs_log_calloc_record;
struct cachefs_log_create_record;
struct cachefs_log_remove_record;
struct cachefs_log_rename_record;
struct cachefs_log_ualloc_record;
struct cachefs_log_umount_record;
struct cachefsio_getattrname_arg;
struct cachefsio_pushback_return;
struct cistpl_cftable_entry_io_t;
struct cistpl_cftable_entry_pd_t;
union td_syncinfo___si_un_state;
struct _lwp_mutex___mutex_flags;
struct cachefs_log_mkdir_record;
struct cachefs_log_mount_record;
struct cachefs_log_rfdir_record;
struct cachefs_log_rmdir_record;
struct cachefsio_setattr_return;
struct cachefsio_setsecattr_arg;
struct cachefsio_symlink_return;
struct cistpl_devspeed_struct_t;
struct em_modify_event_mask_req;
struct mib2_ipv6NetToMediaEntry;
struct nfslog_READDIRPLUS3resok;
struct cachefsio_create_return;
struct cachefsio_lostfound_arg;
struct cachefsio_rename_return;
struct cistpl_devicegeo_info_t;
struct cistpl_get_tuple_name_t;
struct ddi_parent_private_data;
struct gss_OID_set_desc_struct;
struct ip6_opt_binding_request;
struct nfslog_READDIRPLUS3args;
struct scsi_reset_notify_entry;
struct st_tape_alert_parameter;
struct usb_interface_pwr_descr;
struct writeFilePartialArray_t;
union ELS_payload__els_cmd_u;
struct cachefsio_pushback_arg;
struct cfs_dlog_mapping_space;
struct cistpl_cftable_entry_t;
struct em_get_first_tuple_ack;
struct em_get_first_tuple_req;
struct gss_buffer_desc_struct;
struct ip6_opt_binding_update;
struct isdn_activation_status;
struct mib2_ipNetToMediaEntry;
struct mutex_impl__spin_mutex;
struct nfslog_READDIRPLUS3res;
struct OCF_Event_Exception_t;
struct _LclCharsetLinkedList;
struct cachefsio_setattr_arg;
struct cachefsio_symlink_arg;
struct cistpl_longlink_mfc_t;
struct em_get_next_tuple_ack;
struct em_get_next_tuple_req;
struct extension_name_struct;
struct fdcreg__fdc_82077_reg;
struct getUserPasswordInfo_t;
struct isdn_loopback_request;
struct la_els_identify_reply;
struct lock_manager_pid_list;
struct mhioc_preemptandabort;
struct mib2_ipv6IfStatsEntry;
struct nfslog_request_record;
struct pcmcia_logical_socket;
struct pcmcia_logical_window;
struct pcmcia_parent_private;
struct _FN_ext_searchlist_t;
struct _kthread____tu____ts;
struct _kthread__tsd_thread;
struct _ldterm_cs_data_user;
struct cachefs_populate_req;
struct cachefsio_create_arg;
struct cachefsio_getattrfid;
struct cachefsio_rename_arg;
struct cistpl_device_node_t;
struct cistpl_ignore_list_t;
struct cistpl_longlink_ac_t;
struct cistpl_longlink_cb_t;
struct emulex_format_params;
struct fltaccent_sequence_t;
struct ip6_opt_home_address;
struct mdi_register_address;
struct mhioc_resv_desc_list;
struct mib2_ipv6IfIcmpEntry;
struct nfslog_buffer_header;
struct nfslog_record_header;
struct nispasswd_authresult;
struct nss_getnetgrent_args;
union nss_netdirbyaddr_out;
union nss_netdirbyname_out;
struct nss_setnetgrent_args;
struct stp4020_socket_csr_t;
struct stp4020_window_ctl_t;
struct tnf_derived_type_hdr;
struct ufsd_repairfs_args_t;
struct ufsd_repairfs_list_t;
struct usb_config_pwr_descr;
struct READDIRPLUS3resfail;
struct _pthread_rwlockattr;
struct cachefs_fs_sync_req;
struct cachefs_log_control;
struct cachefs_putpage_req;
struct cachefs_rl_listhead;
struct cfs_dlog_setsecattr;
struct cistpl_linktarget_t;
struct ecpp_transfer_parms;
struct em_adapter_info_ack;
struct em_adapter_info_req;
struct em_ident_socket_req;
struct gss_OID_desc_struct;
struct hme_rxfifo_aperture;
struct hme_txfifo_aperture;
struct importCertificate_t;
struct ip6_opt_binding_ack;
struct isdn_interface_info;
struct llc1_multicast_addr;
struct mib2_ipv6RouteEntry;
struct mtdrivetype_request;
struct nd_neighbor_solicit;
struct nfslog_CREATE3resok;
struct nfslog_READLINK3res;
struct nfslog_SETATTR3args;
struct nfslog_SYMLINK3args;
struct nfslog_dirlistplus3;
struct nis_active_endpoint;
struct nis_bound_directory;
struct nispasswd_updresult;
struct nss_netdirbyaddr_in;
struct nss_netdirbyname_in;
struct scsi_extended_sense;
struct tnf_struct_type_hdr;
struct tnfctl_ind_obj_info;
struct tnfctl_probe_handle;
struct usb_interface_descr;
struct _FN_composite_name;
struct _FN_multigetlist_t;
struct _FN_search_control;
struct _FN_status_cnsvc_t;
struct __client__clnt_ops;
struct __nsw_switchconfig;
struct __private_execattr;
struct __svc_local_cred_t;
struct _ldterm_cs_methods;
struct _ldterm_eucpc_data;
struct _pthread_mutexattr;
struct ar_client_notify_s;
struct bpp_transfer_parms;
struct cachefs_debug_info;
struct cachefs_inum_trans;
struct cachefs_log_cookie;
struct cachefsio_getstats;
struct cis_u_malloc_tag_t;
struct cistpl_byteorder_t;
struct cistpl_devicegeo_t;
struct cistpl_pd_struct_t;
struct compose_sequence_t;
struct em_socket_info_ack;
struct em_socket_info_req;
struct lookup_result_type;
struct mdi_cursor_address;
struct mdi_set_degammalut;
struct mdi_set_resolution;
struct mib2_ipv6AddrEntry;
struct mib2_tcp6ConnEntry;
struct mode_control_scsi3;
struct mode_err_recov_ccs;
struct nd_neighbor_advert;
struct nd_opt_prefix_info;
struct nfs3_pathconf_info;
struct nfs_async_read_req;
union nfs_fh3__nfs_fh3_u;
struct nfslog_COMMIT3args;
struct nfslog_CREATE3args;
struct nfslog_REMOVE3args;
struct nfslog_RENAME3args;
struct nfslog_SYMLINK3res;
struct nfslog_WRITE3resok;
struct nfslog_setattrargs;
struct nfslog_sharefsargs;
struct nfslog_symlinkargs;
struct nfslog_writeresult;
struct nis_bound_endpoint;
struct nss_backend_finder;
struct nss_getent_context;
struct oldsocket__sockbuf;
struct r_rpcb_rmtcallargs;
struct scsi_format_params;
struct tnf_array_type_hdr;
struct tnfctl_probe_state;
struct tnfctl_trace_attrs;
struct ufsd_msg_vardata_t;
struct usb_endpoint_descr;
struct validateUserInfo_t;
struct verifySignedData_t;
struct verifySignedHash_t;
struct vt_clock_frequency;
struct Pf_ext_packetfilt;
struct READDIRPLUS3resok;
struct _FN_bindinglist_t;
struct _FN_compound_name;
struct _FN_search_filter;
struct _FN_status_asvc_t;
struct _FN_status_csvc_t;
struct _FN_status_psvc_t;
struct _pthread_condattr;
struct action_list_entry;
struct anch_vol_desc_ptr;
struct ar_entry_delete_s;
struct autofs_lookupargs;
struct cachefs_kstat_key;
struct cachefs_mountargs;
struct cachefsio_getinfo;
struct cistpl_geometry_t;
struct em_get_socket_ack;
struct em_get_socket_req;
struct fat32_boot_fsinfo;
struct isdn_channel_info;
struct mib2_ipRouteEntry;
struct mib2_tcpConnEntry;
struct mount_result_type;
struct nd_router_solicit;
struct nfslog_CREATE3res;
struct nfslog_LOOKUP3res;
struct nfslog_MKDIR3args;
struct nfslog_MKNOD3args;
struct nfslog_READ3resok;
struct nfslog_RMDIR3args;
struct nfslog_WRITE3args;
struct nfslog_createargs;
struct nfslog_createhow3;
struct nfslog_diropargs3;
struct nfslog_entryplus3;
struct r_rpcb_rmtcallres;
struct rpc_gss_principal;
struct rpcbs_rmtcalllist;
struct scsi_reassign_blk;
struct scsi_watch_result;
struct setUserPassword_t;
struct smmedium_property;
struct tnf_probe_control;
struct tnf_probe_version;
struct tnfctl_ind_config;
struct u_shadow__s_nonsh;
struct vt_raw_kthread_id;
struct vt_raw_uthread_id;
struct PATHCONF3resfail;
struct READDIRPLUS3args;
struct READLINK3resfail;
struct _FN_searchlist_t;
struct _LclFormAttrInfo;
struct __LC_transtabs_t;
struct __auth__auth_ops;
struct _klwp__lwp_watch;
struct _tnf_ref32_align;
struct _tnf_tag_version;
struct ar_entry_query_s;
struct ar_mapping_add_s;
struct arq_private_data;
struct attrcache_header;
struct authdes_fullname;
struct autofs_lookupres;
struct autofs_rddirargs;
struct block_descriptor;
struct bpp_error_status;
struct cachefs_allocmap;
struct cachefs_cnvt_mnt;
struct cachefs_idle_req;
struct cachefs_metadata;
struct cachefsio_remove;
struct cfs_dlog_setattr;
struct cfs_dlog_symlink;
struct cfs_dlog_trailer;
struct cistpl_battery_t;
struct cistpl_callout_t;
struct cont_info_struct;
struct ecc_handler_args;
struct fcp_scsi_bus_err;
struct i_ddi_soft_state;
struct ifp_target_stats;
struct ipdcm_minor_info;
struct kobj_notify_list;
struct la_els_rls_reply;
struct lance_init_block;
struct log_vol_hdr_desc;
struct log_vol_int_desc;
struct mdi_clut_address;
struct mdi_set_counters;
struct mdi_set_gammalut;
struct mdi_xlut_address;
struct mib2_ipAddrEntry;
struct mode_cache_scsi3;
struct modspecific_info;
struct nd_router_advert;
struct nfs_revauth_args;
struct nfslog_LINK3args;
struct nfslog_MKDIR3res;
struct nfslog_MKNOD3res;
struct nfslog_READ3args;
struct nfslog_WRITE3res;
struct nfslog_diropargs;
struct nfslog_getfhargs;
struct nfslog_rddirargs;
struct nfslog_writeargs;
struct nss_innetgr_1arg;
struct nss_innetgr_args;
struct otw_nfswriteargs;
struct prop_driver_data;
struct rpcb_rmtcallargs;
struct scsi_defect_list;
struct socal_fm_version;
struct sockaddr_storage;
struct tnf_block_header;
struct usb_config_descr;
struct usb_device_descr;
struct usb_string_descr;
struct usoc_add_buffers;
struct usoc_delete_pool;
struct vt_kthread_label;
struct vt_uthread_label;
struct OCF_EventData_t;
struct READDIR3resfail;
struct READDIRPLUS3res;
struct SETATTR3resfail;
struct SYMLINK3resfail;
struct _FN_attrmodlist;
struct _FN_valuelist_t;
struct _LclCharsetInfo;
struct _kthread__rprof;
struct _ldterm_cs_data;
struct _nl_catd_struct;
struct _pthread_rwlock;
struct attrcache_index;
struct au_header32_tok;
struct au_header64_tok;
struct au_ipc_perm_tok;
struct auditpinfo_addr;
struct autofs_mountres;
struct autofs_rddirres;
struct cachefs_rl_info;
struct cachefsio_mkdir;
struct cachefsio_rmdir;
struct cfs_dlog_create;
struct cfs_dlog_mapfid;
struct cfs_dlog_modify;
struct cfs_dlog_remove;
struct cfs_dlog_rename;
struct cheerio_dma_reg;
struct cistpl_config_t;
struct cistpl_device_t;
struct cistpl_format_t;
struct cistpl_funcid_t;
struct cistpl_manfid_t;
struct cistpl_vers_1_t;
struct cistpl_vers_2_t;
union dbri_dts_opcode;
union dbri_rex_opcode;
struct ddi_minor_alias;
struct ddi_prop_handle;
struct devctl_ap_state;
struct dk_mpdrv_status;
struct fb_wid_dbl_info;
struct isdn_format_req;
struct la_els_identify;
struct llc2GetConStats;
struct llc2GetSapStats;
struct llc2GetStaStats;
struct lock_descriptor;
struct mdi_buffer_info;
struct mdi_cursor_info;
struct mdi_dac_address;
struct mhioc_resv_desc;
struct mode_disco_reco;
struct nd_hostservlist;
struct nfs_readdir_req;
struct nfsl_flush_args;
struct nfslog_READ3res;
struct nfslog_diropres;
struct nfslog_linkargs;
struct nfslog_rddirres;
struct nfslog_rdresult;
struct nispasswd_error;
struct nlm4_unlockargs;
struct nss_groupsbymem;
struct pcm_device_info;
struct pcm_device_node;
struct pm_state_change;
struct prop_handle_ops;
struct rpcb_entry_list;
struct rpcb_rmtcallres;
struct rsm_es_mod_stat;
struct scsi_arq_status;
struct scsi_bfi_defect;
struct scsi_defect_hdr;
struct sf_al_addr_pair;
struct sf_target_stats;
struct short_hand_verf;
struct sig_args_struct;
struct space_bmap_desc;
struct stc_lineparam_t;
struct tblock__tar_hdr;
struct tnf_file_header;
struct tnf_probe_setup;
struct ufsd_log_data_t;
struct unall_space_ent;
struct usb_pipe_policy;
struct usoc_fm_version;
struct usoc_send_frame;
struct vt_elapsed_time;
struct vt_process_fork;
struct vt_process_name;
struct vuid_addr_probe;
struct ACCESS3resfail;
struct COMMIT3resfail;
struct CREATE3resfail;
struct FSINFO3resfail;
struct FSSTAT3resfail;
struct GETACL3resfail;
struct LOOKUP3resfail;
struct OCF_CardSpec_t;
struct PATHCONF3resok;
struct READLINK3resok;
struct REMOVE3resfail;
struct RENAME3resfail;
struct SETACL3resfail;
struct T_unitdata_ind;
struct T_unitdata_req;
struct _FN_bindingset;
struct _FN_namelist_t;
struct _LC_messages_t;
struct _LC_monetary_t;
struct __nsw_long_err;
union _kthread____tu;
struct _la_sparc_regs;
struct _obscured_list;
struct _pthread_mutex;
struct accepted_reply;
struct alloc_ext_desc;
struct appendRecord_t;
struct ar_entry_add_s;
struct au_evclass_map;
struct au_invalid_tok;
struct au_trailer_tok;
struct auditinfo_addr;
struct bp_getfile_arg;
struct bp_getfile_res;
struct cachefs_boinfo;
struct cachefs_fsinfo;
struct cachefsio_dcmd;
struct cachefsio_link;
struct cachefsio_pack;
struct cachefsoptions;
struct cdrom_tocentry;
struct cfga_list_data;
struct cfga_stat_data;
struct cfs_dlog_entry;
struct cfs_dlog_mkdir;
struct cfs_dlog_rmdir;
struct cistpl_funce_t;
struct cistpl_jedec_t;
struct common_service;
struct dbri_code_chil;
struct dbri_code_sbri;
struct ddi_minor_data;
struct devctl_iocdata;
struct di_priv_format;
struct existsRecord_t;
struct hid_req_struct;
struct ifnet__ifqueue;
struct indirect_entry;
struct ip6_opt_router;
struct ip6_opt_tunnel;
struct krpc_revauth_1;
struct lif_ifinfo_req;
struct mdb_walk_state;
struct mhioc_key_list;
struct mhioc_register;
struct mhioc_resv_key;
struct mib2_udp6Entry;
struct mode_cache_ccs;
struct mode_err_recov;
struct modeheader_seq;
struct nfs_async_reqs;
struct nfs_commit_req;
struct nfs_getfh_args;
struct nfs_pageio_req;
struct nfslog_rdlnres;
struct nfslog_rnmargs;
struct nis_hash_table;
struct nispasswd_verf;
struct nlm4_shareargs;
struct nlm_unlockargs;
struct openprom_opr64;
struct p1284_ioctl_st;
struct pcmcia_adapter;
struct proto_dev_info;
struct rejected_reply;
struct rpcbs_addrlist;
struct sadb_supported;
struct sem_undo__undo;
struct stc_defaults_t;
struct stc_diagregs_t;
struct stp4020_regs_t;
struct svcxprt_list_t;
struct target_private;
struct tnf_tagged_hdr;
struct u_spcl__s_spcl;
struct ufsd_log_msg_t;
struct unall_spc_desc;
struct usoc_rcv_frame;
struct usocio_lilpmap;
struct vis_cursorcmap;
struct vis_identifier;
struct vt_global_info;
struct wd90c24a2_info;
struct ypall_callback;
union DL_primitives;
struct FC2_FRAME_HDR;
struct FC2_RJT_PARAM;
struct GETATTR2resok;
struct GETATTR3resok;
struct MKDIR3resfail;
struct MKNOD3resfail;
struct OCF_Timeout_t;
struct PATHCONF3args;
struct READDIR3resok;
struct READLINK3args;
struct RMDIR3resfail;
struct SETATTR3resok;
struct SYMLINK3resok;
struct T_optmgmt_ack;
struct T_optmgmt_req;
struct T_uderror_ind;
struct WRITE3resfail;
struct _FN_attribute;
struct _FN_ctx_svc_t;
struct _LC_charmap_t;
struct _LC_collate_t;
struct _LC_numeric_t;
struct _LclIconvInfo;
struct _condvar_impl;
struct _klwp__mstate;
struct _pthread_attr;
struct _pthread_cond;
struct _tnf_tag_data;
struct adisc_payload;
struct au_attr32_tok;
struct au_attr64_tok;
struct au_file32_tok;
struct au_file64_tok;
struct au_groups_tok;
struct au_inaddr_tok;
struct au_opaque_tok;
struct au_proc32_tok;
struct au_proc64_tok;
struct au_server_tok;
struct au_socket_tok;
struct au_subj32_tok;
struct au_subj64_tok;
struct au_user_str_s;
struct authsys_parms;
struct bp_whoami_arg;
struct bp_whoami_res;
struct cachefs_stats;
struct cachefs_workq;
struct callout_table;
struct cdrom_subchnl;
struct cdrom_subcode;
struct cdrom_volctrl;
struct cfs_dlog_link;
struct cistpl_date_t;
struct cistpl_spcl_t;
struct cistpl_swil_t;
struct cl_tcp_info_s;
struct copy_mgt_info;
struct dacf_rsrvlist;
struct dadkio_status;
struct dbri_chip_cmd;
struct dbri_code_rex;
struct ddi_intr_info;
struct defect_header;
struct des_clnt_data;
struct directory_obj;
struct dkbad__bt_bad;
struct dkl_partition;
struct dma_phys_mapc;
union em_primitives;
struct exception_map;
struct exportfs_args;
struct fat32_bootsec;
struct file_set_desc;
struct fs_identity_t;
struct ftrace_record;
struct generateKey_t;
struct getFileInfo_t;
struct getUserInfo_t;
struct getquota_args;
struct getquota_rslt;
struct gss_clnt_data;
struct ildTraceEntry;
struct ip6_opt_jumbo;
struct isdn_conn_req;
struct isdn_conn_tab;
struct isp_mbox_regs;
struct isp_risc_regs;
struct jedec_ident_t;
struct keyboardstate;
struct krb4_svc_data;
struct mhioc_inresvs;
struct mib2_udpEntry;
struct mntinfo_kstat;
struct mod_stub_info;
struct mode_geometry;
struct nd_opt_rd_hdr;
struct nfs_args_extA;
struct nfs_args_extB;
struct nis_hash_data;
struct nlm4_cancargs;
struct nlm4_lockargs;
struct nlm4_shareres;
struct nlm4_testargs;
struct nlm4_testrply;
struct nlm_shareargs;
struct nss_XbyY_args;
struct nss_db_params;
struct old_pcfs_args;
struct p_rmtcallargs;
struct part_int_desc;
struct pci_phys_spec;
struct ps_prochandle;
struct rce_interface;
struct readRecords_t;
struct romvec_sunmon;
struct rpc_createerr;
struct rsm_es_d_stat;
struct rstat_timeval;
struct sadb_lifetime;
struct sadb_spirange;
struct scsi_capacity;
struct segdev_crargs;
struct segdrv_crargs;
struct segmap_crargs;
struct segspt_crargs;
struct service_param;
struct setUserInfo_t;
struct si_sockparams;
struct smdevice_info;
struct st_tape_alert;
struct string_to_int;
struct svcxprt_ext_t;
struct symlink_cache;
struct td_synchandle;
struct td_thr_events;
struct tnf_array_hdr;
struct tnfctl_handle;
struct usb_hid_descr;
struct usb_hub_descr;
struct usoc_add_pool;
struct vis_cursorpos;
struct volcopy_label;
struct vt_kthread_id;
struct vt_start_time;
struct vt_total_time;
struct vt_uthread_id;
struct writeRecord_t;
struct ypdelete_args;
struct ypupdate_args;
struct ACCESS2resok;
struct ACCESS3resok;
struct COMMIT3resok;
struct CREATE3resok;
struct Exp_cpio_hdr;
struct FSINFO3resok;
struct FSSTAT3resok;
struct GETACL2resok;
struct GETACL3resok;
struct GETATTR2args;
struct GETATTR3args;
struct LA_RLS_reply;
struct LINK3resfail;
struct LOGI_PAYLOAD;
struct LOOKUP3resok;
struct PATHCONF3res;
struct READ3resfail;
struct READDIR3args;
struct READLINK3res;
struct REMOVE3resok;
struct RENAME3resok;
struct SETACL2resok;
struct SETACL3resok;
struct SETATTR3args;
struct SYMLINK3args;
struct T_discon_ind;
struct T_discon_req;
struct T_exdata_ind;
struct T_exdata_req;
struct T_ordrel_ind;
struct T_ordrel_req;
union T_primitives;
struct T_unbind_req;
struct _FN_ref_addr;
struct _LC_locale_t;
struct _LclFormInfo;
struct __nsw_lookup;
struct _bool_struct;
struct _cat_msg_hdr;
struct _cat_set_hdr;
struct _ns_flagdata;
struct _sleepq_head;
struct _xti_optmgmt;
struct aio_result_t;
struct au_arg32_tok;
struct au_arg64_tok;
struct au_class_ent;
struct au_event_ent;
struct au_iport_tok;
struct au_list_stat;
struct au_ret32_tok;
struct au_ret64_tok;
struct audio_device;
struct audio_prinfo;
struct audtrace_hdr;
struct authdes_cred;
struct authdes_verf;
struct cachefscache;
struct cdrom_tochdr;
struct cfga_confirm;
struct cistpl_bar_t;
struct cistpl_org_t;
struct cyc_coverage;
struct cyc_pcbuffer;
struct cyc_tracebuf;
struct cyc_tracerec;
struct cyc_xcallarg;
struct dadkio_rwcmd;
struct dbri_dts_cmd;
union dbri_dts_tsd;
struct ddi_callback;
struct ddi_dma_attr;
struct ddi_dma_impl;
struct dev_spec_ear;
struct devid_nmlist;
struct di_priv_data;
struct dirlistplus3;
struct em_event_ind;
struct ether_family;
struct ether_header;
struct ext_attr_hdr;
struct extent_block;
struct f_audit_data;
struct fb_wid_alloc;
struct fc_transport;
struct fcp_ent_addr;
struct fcp_prli_acc;
struct fcp_rsp_info;
struct fcp_xfer_rdy;
struct icmp6_filter;
struct if_nameindex;
struct ip6_opt_nsap;
struct ip_timestamp;
struct ipd_addr_tbl;
union ipd_messages;
struct isdn_message;
struct isp_biu_regs;
struct isp_mbox_cmd;
struct isp_regs_off;
struct isp_sxp_regs;
struct itimerspec32;
struct krpc_revauth;
struct la_els_adisc;
struct la_rls_reply;
struct llc_mac_info;
struct lm_blockinfo;
struct log_vol_desc;
struct mdi_diaginfo;
struct mdi_set_clut;
struct mdi_set_xlut;
struct mhioc_inkeys;
struct mode_caching;
struct mode_control;
struct mode_pdevice;
struct mt_tape_info;
struct nfs2_timeval;
struct nfs_svc_args;
struct nfscreatargs;
struct nfsdiropargs;
struct nfslog_sattr;
struct nfsrddirargs;
struct nfswriteargs;
struct nlm4_testres;
struct nlm_cancargs;
struct nlm_lockargs;
struct nlm_shareres;
struct nlm_testargs;
struct nlm_testrply;
union nss_XbyY_key;
struct nss_db_state;
struct p_audit_data;
struct p_rmtcallres;
struct pam_response;
struct post_op_attr;
struct ppc_params_t;
struct pri_vol_desc;
struct prom_memlist;
struct protocol_arg;
struct prpageheader;
struct rd_event_msg;
struct readRecord_t;
struct sadb_address;
struct scsi_address;
struct scsi_inquiry;
struct search_entry;
struct sect_trailer;
struct segvn_crargs;
struct shr_locowner;
struct signotify_id;
struct sioc_addrreq;
struct sioc_lsg_req;
struct sioc_vif_req;
struct sockaddr_in6;
struct spraytimeval;
struct st_drivetype;
struct svcpool_args;
struct symlinkdata3;
struct t_audit_data;
struct td_event_msg;
struct td_thrhandle;
struct tnf_type_hdr;
struct trace_record;
struct usb_bulk_cbw;
struct usb_bulk_csw;
struct vio_labelent;
struct vioc_symname;
struct vol_desc_ptr;
struct watched_area;
struct watched_page;
struct xdr_bytesrec;
struct ACCESS2args;
struct ACCESS3args;
struct COMMIT3args;
struct CREATE3args;
struct ELS_payload;
struct FSINFO3args;
struct FSSTAT3args;
struct GETACL2args;
struct GETACL3args;
struct GETATTR2res;
struct GETATTR3res;
struct LOOKUP3args;
struct MKDIR3resok;
struct MKNOD3resok;
union PPPmessages;
struct READDIR3res;
struct REMOVE3args;
struct RENAME3args;
struct RMDIR3resok;
struct SETACL2args;
struct SETACL3args;
struct SETATTR3res;
struct SYMLINK3res;
struct T_error_ack;
struct WRITE3resok;
struct _FN_attrset;
struct _FN_nameset;
struct _LC_ctype_t;
struct __mbstate_t;
struct __res_state;
struct _num_struct;
struct _str_struct;
struct action_list;
struct aflt_cookie;
struct au_attr_tok;
struct au_data_tok;
struct au_exit_tok;
struct au_path_tok;
struct au_text_tok;
struct au_tid_addr;
struct au_user_ent;
struct audit_fstat;
struct audit_queue;
struct autofs_args;
struct autofsrddir;
struct cache_label;
struct cache_usage;
struct cachefs_fid;
struct cachefs_req;
struct cfs_dlog_tm;
struct changePIN_t;
struct cpu_sysinfo;
struct cpu_syswait;
struct cyc_backend;
struct cyc_handler;
struct cyc_softbuf;
struct dacf_module;
struct dadkio_derr;
struct ddi_dma_lim;
struct ddi_dma_req;
struct devicedata3;
struct dk_gmpstate;
struct dk_smpstate;
struct em_info_ack;
struct em_info_req;
struct em_init_ack;
struct em_init_req;
struct exit_status;
struct fb_wid_item;
struct fb_wid_list;
struct fdc_dma_reg;
struct fmodsw_impl;
struct ftrace_data;
struct hs_direntry;
struct in6_pktinfo;
struct ipdpriminfo;
struct ipv6_member;
struct isdn_format;
struct kstat_named;
struct kstat_timer;
struct la_els_logi;
struct la_els_logo;
struct la_els_prli;
struct lm_nlm_disp;
struct lm_svc_args;
struct mdb_bitmask;
struct mdb_modinfo;
struct mdi_cfginfo;
struct mod_modinfo;
struct modctl_list;
struct mode_format;
struct mode_header;
struct module_info;
struct module_list;
struct module_stat;
struct mtdrivetype;
struct nd_addrlist;
struct nd_hostserv;
struct nd_mergearg;
struct nd_redirect;
struct nfs_fhandle;
struct nfsattrstat;
struct nfsdiropres;
struct nfslinkargs;
struct nfslog_drok;
struct nfslog_rdok;
struct nfslog_rrok;
struct nfsrddirres;
struct nfsrdresult;
struct nfsreadargs;
struct nfsstatfsok;
struct nis_taglist;
struct nlm4_holder;
struct nlm4_notify;
struct nlm_testres;
struct notsack_blk;
struct npd_newpass;
struct npd_request;
struct nss_backend;
struct nss_db_root;
struct opaque_auth;
struct pam_message;
struct passwd_info;
struct phy_address;
struct pln_address;
struct post_op_fh3;
struct pre_op_attr;
struct proc_vertex;
struct rd_plt_info;
struct rddir_cache;
struct read_blklim;
struct rls_payload;
struct rmtcallargs;
struct rusers_utmp;
struct rwlock_impl;
struct sattrguard3;
struct sched_param;
struct scsi_device;
struct scsi_status;
struct segdev_data;
struct segdrv_data;
struct segmap_data;
struct shrlocklist;
struct sigaltstack;
struct siginfolist;
struct sioc_sg_req;
struct sm_stat_res;
struct socal_stats;
struct sockaddr_dl;
struct sockaddr_in;
struct sockaddr_un;
struct sptshm_data;
struct st_errstats;
struct stc_state_t;
struct stc_stats_t;
struct strfdinsert;
struct t_kunitdata;
struct td_syncinfo;
struct td_ta_stats;
struct td_thragent;
struct ti_sync_ack;
struct ti_sync_req;
struct ufs_aclmask;
struct ufsbiostats;
struct ufstransops;
struct umntrequest;
struct usoc_pstats;
struct utmpidlearr;
struct vioc_symdev;
struct vt_abs_time;
struct vt_cpu_info;
struct vt_num_cpus;
struct vt_pagesize;
struct vuid_q_node;
struct writeFile_t;
struct xdr_discrim;
struct ACCESS2res;
struct ACCESS3res;
struct COMMIT3res;
struct CREATE3res;
struct FREE_SPACE;
struct FSINFO3res;
struct FSSTAT3res;
struct GETACL2res;
struct GETACL3res;
struct LINK3resok;
struct LOOKUP3res;
struct MKDIR3args;
struct MKNOD3args;
struct READ3resok;
struct REMOVE3res;
struct RENAME3res;
struct RMDIR3args;
struct SETACL2res;
struct SETACL3res;
struct T_addr_ack;
struct T_addr_req;
struct T_bind_ack;
struct T_bind_req;
struct T_conn_con;
struct T_conn_ind;
struct T_conn_req;
struct T_conn_res;
struct T_data_ind;
struct T_data_req;
struct T_info_ack;
struct T_info_req;
struct WRITE3args;
struct _FN_status;
struct _FN_string;
struct _LC_time_t;
struct _Vr2_Astrs;
struct _Vr2_Bstrs;
struct _cpc_event;
struct _lwp_mutex;
struct _sema_impl;
struct action_arg;
struct au_acl_tok;
struct au_ipc_tok;
struct au_seq_tok;
struct audio_info;
struct audit_stat;
struct auditpinfo;
struct authattr_s;
struct bp_address;
struct cachefsops;
struct cback_data;
struct cdrom_cdda;
struct cdrom_cdxa;
struct cdrom_read;
union cisparse_t;
struct classfuncs;
struct config_ops;
struct config_reg;
struct cpu_vminfo;
struct createhow3;
struct dacf_opset;
struct deskeydata;
struct diropargs3;
struct dk_mpflags;
struct entryplus3;
struct ether_addr;
struct execattr_s;
struct exportdata;
struct exportinfo;
struct fc_dataseg;
struct fcp_status;
struct file_entry;
struct firm_event;
struct flushmeter;
struct ftimes_ear;
struct grant_lock;
struct hdk_badmap;
struct hdk_loghdr;
struct hme_global;
struct ib_request;
struct ifa_msghdr;
struct impl_devid;
struct inthandler;
struct ip6_rthdr0;
struct isdn_param;
struct itimerspec;
struct kiockeymap;
struct kmem_cache;
struct knetconfig;
struct kstat_intr;
struct la_els_rjt;
struct la_els_rls;
struct la_els_rrq;
struct ldterm_mod;
struct lif_nd_req;
struct llc1device;
struct llc2Uninit;
struct llchdr_xid;
struct lofi_ioctl;
struct log_result;
struct mdb_walker;
struct mhioctkown;
struct mib2_rawip;
struct mknoddata3;
struct mnttagdesc;
struct mode_cache;
struct mode_speed;
struct modlinkage;
struct modlstrmod;
struct mta_handle;
union mutex_impl;
struct nd_opt_hdr;
struct nd_opt_lla;
struct nd_opt_mtu;
struct nfs_rwlock;
struct nfsrdlnres;
struct nfsrnmargs;
struct nis_object;
struct nis_result;
struct nis_server;
struct nlm4_share;
struct nlm_holder;
struct nlm_notify;
struct npd_update;
struct ns_request;
struct ntptimeval;
struct o_si_udata;
struct openpromio;
struct p9000_info;
struct p9100_info;
struct packetfilt;
struct pam_handle;
struct panic_data;
struct pcmcia_mif;
struct pixrectops;
struct pp_address;
struct ppa_config;
struct ppsclockev;
struct prfpregset;
struct proc_graph;
struct proc_usage;
struct profattr_s;
struct proxy_addr;
struct ptable_idx;
struct qec_global;
struct rcm_handle;
struct rd_loadobj;
struct readFile_t;
struct reply_body;
struct rmtcallres;
struct romvec_obp;
struct rpc_timers;
struct rpcb_entry;
struct rsm_es_out;
struct rt_metrics;
struct sadb_ident;
struct scsi_sense;
struct segvn_data;
struct signData_t;
struct signHash_t;
struct smwp_state;
struct spraycumul;
struct stbl_entry;
struct stc_line_t;
struct stc_unit_t;
struct strmodconf;
struct stroptions;
struct t_unitdata;
struct task_usage;
struct tcp_base_s;
struct td_thrinfo;
struct term_entry;
struct thread_ops;
struct tie_device;
struct timespec32;
struct tl_credopt;
struct tty_common;
struct ufs_ic_acl;
struct ufsd_msg_t;
struct unreg1args;
struct userattr_s;
struct usoc_stats;
struct ux_extaddr;
struct vioc_dattr;
struct vioc_eject;
struct vioc_event;
struct vioc_flags;
struct vioc_gattr;
struct vioc_sattr;
struct vis_cursor;
struct vjcompress;
struct vt_data_16;
struct vt_data_32;
struct vt_data_64;
struct vt_generic;
union vt_pointer;
struct vt_version;
struct vuid_queue;
struct vuid_value;
struct LINK3args;
struct MKDIR3res;
struct MKNOD3res;
struct OCF_Any_t;
struct READ3args;
struct RMDIR3res;
struct WRITE3res;
struct __svcxprt;
struct _kcondvar;
struct _kcpc_ctx;
struct _lwp_cond;
struct _lwp_sema;
struct _sobj_ops;
struct _timespec;
struct _xti_bind;
struct au_ip_tok;
struct au_termid;
struct audit_s2e;
struct auditinfo;
struct authstr_s;
struct bootparam;
struct call_body;
struct call_list;
struct callb_cpr;
struct cdrom_msf;
struct class_ops;
struct cp_result;
struct cprconfig;
struct crash_hdr;
struct dacf_rule;
struct db_result;
struct dbri_intq;
struct ddi_minor;
union des_block;
struct desparams;
struct dk_allmap;
struct dk_mpinfo;
struct door_cred;
struct door_desc;
struct door_info;
struct dump_args;
struct ea_object;
struct ecpp_regs;
struct entry_col;
struct entry_obj;
struct entryinfo;
struct ether_arp;
struct ether_hdr;
struct exception;
struct execstr_s;
struct extent_ad;
struct extmnttab;
struct fbdblinfo;
struct fc_packet;
struct fc_pstats;
struct fd_result;
struct fd_search;
struct fdb_holes;
struct fieldnode;
struct fpollinfo;
struct getRoot_t;
struct group_obj;
struct hard_addr;
struct hs_volume;
struct icmp6_hdr;
struct icmp6_mld;
struct if_msghdr;
struct ifp_stats;
struct iftun_req;
struct in_ifaddr;
struct ip6_rthdr;
struct ip_addr_t;
struct ip_member;
struct ipd_softc;
struct ipllcmd_s;
struct ipsec_req;
struct ipv6_mreq;
struct itimerval;
struct iuvd_desc;
struct k_siginfo;
struct keyboards;
struct kstat_ctl;
struct la_ba_acc;
struct la_ba_rjt;
struct lanceregs;
struct lancering;
struct llc_stats;
struct lm_config;
struct log_entry;
struct log_param;
struct lufs_save;
struct lwpstatus;
struct mib2_icmp;
struct ml_odunit;
struct modconfig;
struct mode_page;
struct modlsched;
struct mouseinfo;
struct netconfig;
struct nfs_owner;
struct nfssaargs;
struct nfsslargs;
struct nfsstatfs;
struct nis_sdata;
struct nlm4_lock;
struct nlm4_stat;
struct nlm_share;
struct ns_updrec;
struct oldsocket;
struct p_inquiry;
struct part_desc;
struct part_info;
struct partition;
struct path_comp;
struct pc_dirent;
struct pcdir_lfn;
struct pcfs_args;
struct pcmcia_cs;
struct pcmcia_if;
struct phdr_desc;
struct ping_args;
struct pmap_typ1;
struct pmap_typ2;
struct port_type;
struct ppcregs_t;
struct proc_edge;
struct profstr_s;
struct prop_info;
struct prxregset;
struct qecb_chan;
struct qecm_chan;
struct rangespec;
struct rd_notify;
struct readKey_t;
struct reservdev;
struct rpcb_stat;
struct rsm_es_in;
struct rt_msghdr;
struct sadb_comb;
struct sadb_prop;
struct sadb_sens;
struct sc_public;
struct sc_shared;
struct scsi_tape;
struct segmapcnt;
struct ses_ioctl;
struct ses_softc;
struct set_atime;
struct set_mode3;
struct set_mtime;
struct set_size3;
struct sf_al_map;
struct sigaction;
struct sl_status;
struct soaddr_ux;
struct specdata3;
struct stat_chge;
struct statstime;
struct statvfs64;
struct stciack_t;
struct stcregs_t;
struct str_mlist;
struct streamtab;
struct strrecvfd;
struct strsigset;
union sunromvec;
struct swaptable;
struct t_kpalive;
struct table_col;
struct table_obj;
struct taskq_ent;
struct tcp_debug;
struct tcphdra_s;
struct td_notify;
struct term_desc;
struct timeval32;
struct trace_ids;
struct tracedata;
struct trap_info;
struct turnstile;
struct unreg1res;
struct uscsi_cmd;
struct uscsi_rqs;
struct userstr_s;
struct v_address;
struct vioc_info;
struct vt_data_4;
struct vt_data_8;
struct wordexp_t;
struct LINK3res;
struct READ3res;
struct T_ok_ack;
struct T_opthdr;
struct Xfer_Rdy;
struct __client;
struct __ns_msg;
struct _cat_hdr;
struct _choice_;
struct _cleanup;
struct _krwlock;
struct _kthread;
struct _label_t;
struct _qop_num;
struct _si_user;
struct _tnf_ops;
struct addrinfo;
struct afswitch;
struct ani_free;
struct anon_hdr;
struct anon_map;
struct anoninfo;
struct apcommon;
struct ar_cmd_s;
struct attr_hdr;
struct au_qctrl;
struct au_tid32;
struct au_tid64;
struct au_token;
struct auth_req;
struct auth_res;
struct bandinfo;
struct biostats;
struct bmactcvr;
struct bpp_pins;
struct bpp_regs;
struct bpp_unit;
struct bsys_mem;
struct c_dirent;
struct callsave;
struct cdrom_ti;
struct cfga_msg;
struct cg6_cmap;
struct cg6_info;
struct charspec;
struct cisptr_t;
struct cistpl_t;
struct copyresp;
struct cpu_stat;
struct cyc_time;
struct dacf_arg;
struct dcanchor;
struct ddi_prop;
struct dev_info;
struct devnames;
struct di_devnm;
struct di_minor;
struct dinfo_io;
struct dircache;
struct dirent64;
struct dirlist3;
struct dk_cinfo;
struct dk_devid;
struct dk_label;
struct dk_map32;
struct dk_minfo;
struct dk_mpcmd;
struct door_arg;
struct dump_map;
struct dvpoll32;
struct ea_group;
struct endpoint;
struct failinfo;
struct fbcmap_i;
struct fbcurpos;
struct fbcursor;
struct fcp_cntl;
struct fcp_prli;
struct fd_drive;
struct fd_state;
struct fdbuffer;
struct fifo_reg;
struct fifodata;
struct fifolock;
struct fifonode;
struct fk_label;
struct formnode;
struct free_rtn;
struct ftevents;
struct gwindows;
struct hdk_diag;
struct hdk_type;
struct hdr_cpio;
struct hme_bmac;
struct hwc_spec;
struct icmpstat;
struct id_space;
struct iemcaddr;
struct igmpstat;
struct in6_addr;
struct info_reg;
struct init_dev;
struct intrspec;
union ioctypes;
struct ip6_dest;
struct ip6_frag;
struct ipasfrag;
struct ipc_perm;
struct ipd_stat;
struct ipoption;
struct isp_mbox;
struct jerqmesg;
struct jwinsize;
struct keyboard;
struct kobj_mem;
struct kproject;
struct kstat_io;
struct link_map;
struct link_obj;
struct ll_snioc;
struct llc2Init;
struct llcsaddr;
struct lm_block;
struct lm_sleep;
struct lm_sysid;
struct lm_vnode;
struct log_dump;
struct log_page;
struct lufs_buf;
struct lwpsinfo;
struct mallinfo;
struct mapentry;
struct mdb_dcmd;
struct mdb_pipe;
struct mem_vtop;
struct mfb_cmap;
struct mib2_tcp;
struct mib2_udp;
struct modldacf;
struct modlexec;
struct modlmisc;
struct mon_info;
struct mon_spec;
struct mousebuf;
struct ms_softc;
struct msqid_ds;
struct nc_stats;
struct nfs_args;
struct nfsfattr;
struct nfssattr;
struct nfstime3;
struct nis_attr;
struct nlm4_res;
struct nlm_lock;
struct nlm_stat;
struct nsr_desc;
struct oar_mask;
struct pam_conv;
struct panic_nv;
struct par_list;
struct pathname;
struct pcm_regs;
struct pm__list;
struct pmap_hdr;
struct pmaplist;
struct pollhead;
struct ppa_info;
struct prewrite;
struct prheader;
struct proginfo;
struct protoent;
struct qec_soft;
struct rcm_info;
struct rd_agent;
struct reg1args;
struct reqvalue;
struct rl_entry;
struct rlimit64;
struct rp__list;
struct rpcblist;
struct sack_blk;
struct sadb_alg;
struct sadb_ext;
struct sadb_key;
struct sadb_msg;
struct scc_mode;
union scsi_cdb;
struct scsi_cmd;
struct scsi_pkt;
struct sec_data;
struct seconfig;
struct sem_undo;
struct semid_ds;
struct seq_mode;
struct servinfo;
struct set_gid3;
struct set_uid3;
struct sf_stats;
struct shmid_ds;
struct short_ad;
struct si_udata;
struct sigevent;
struct sigqueue;
struct sigstack;
struct sl_stats;
struct sockaddr;
struct sockinfo;
struct spt_data;
struct statsvar;
struct str_list;
struct strapush;
struct strioctl;
struct swapinfo;
struct swapnode;
struct syncline;
struct sysparam;
struct t_discon;
struct t_linger;
struct t_opthdr;
struct tcphdr_s;
struct tcpiphdr;
struct timespec;
struct timezone;
struct topstats;
struct transdel;
struct ttychars;
struct typenode;
union u_shadow;
struct ucontext;
struct udpiphdr;
struct ufs_args;
struct ufstrans;
struct upimutex;
struct userdefs;
struct utmpidle;
struct vioc_map;
struct vnodeops;
struct vsecattr;
struct vt_label;
struct vt_title;
struct vuid_seg;
struct wcc_attr;
struct wcc_data;
struct yppasswd;
struct Elf_Scn;
struct Octet_s;
struct _FN_ctx;
struct _FN_ref;
struct __ns_rr;
struct _rwlock;
struct _wctype;
struct _win_st;
struct aiocb64;
struct aliases;
struct au_buff;
struct au_mask;
struct autovec;
struct bind_ux;
struct bootops;
struct bootsec;
struct callout;
struct cfs_cid;
struct cmsghdr;
struct comment;
struct copyreq;
struct cprinfo;
struct cyc_cpu;
struct dacf_op;
union dbri_md;
struct dcentry;
struct dev_ops;
struct di_node;
struct di_prop;
struct dk_geom;
struct dk_map2;
struct dk_vtoc;
struct dl_info;
struct dumphdr;
struct ea_item;
struct esp_cmd;
struct execenv;
struct fas_cmd;
struct fbgattr;
struct fbsattr;
struct fcp_cmd;
struct fcp_rsp;
struct fd_args;
struct fd_char;
struct file_id;
struct filegrp;
struct fiotune;
struct flock64;
struct fscache;
struct hdk_cmd;
struct hdk_log;
struct hme_erx;
struct hme_etx;
struct hme_mif;
struct hme_rmd;
struct hme_tmd;
struct hostent;
struct hrmstat;
struct hstable;
struct iaadmin;
struct iaclass;
struct iadpent;
struct iaparms;
struct icb_tag;
struct icmph_s;
struct icommon;
struct ieiaddr;
struct if_data;
struct igmpmsg;
struct in_addr;
struct instats;
struct ip6_hbh;
struct ip6_hdr;
struct ip6_opt;
struct ip_mreq;
struct ipd_str;
struct kiockey;
struct knetbuf;
struct la_logi;
struct la_logo;
struct lastlog;
struct lb_addr;
struct lfsnode;
struct lifconf;
struct lilpmap;
struct linkblk;
struct llcaddr;
struct lm_stat;
struct lm_xprt;
struct log_ctl;
struct long_ad;
struct lrusage;
struct ls_pend;
struct lswatch;
struct ltchars;
struct lvid_iu;
struct lwpinfo;
struct mdb_arg;
struct memlist;
struct memropc;
struct mfb_reg;
struct mib2_ip;
struct ml_unit;
struct mntinfo;
struct mntnode;
struct mntopts;
struct mod_ops;
struct modinfo;
struct modldrv;
struct modlsys;
struct mq_attr;
struct mrtstat;
struct msginfo;
struct nc_hash;
struct ncstats;
struct netinfo;
union nfs_ext;
struct nfs_fh3;
struct nfs_fid;
struct nfsdrok;
struct nfsrdok;
struct nfsrrok;
struct nfssrok;
struct nis_oid;
struct nis_tag;
struct nlm_res;
struct objdata;
struct pathcnf;
struct pcadmin;
struct pcparms;
struct pkginfo;
struct port_id;
struct prasmap;
struct priovec;
struct procset;
struct protosw;
struct prusage;
struct prwatch;
struct pstatus;
struct pt_ttys;
struct quotctl;
struct r_debug;
struct reg1res;
struct regspec;
struct res_sym;
struct rpc_err;
struct rpc_msg;
struct rtadmin;
struct rtdpent;
struct rtentry;
struct rtparms;
struct ru_utmp;
struct rwindow;
struct s3_info;
struct sadb_sa;
struct secattr;
struct secinfo;
struct seg_ops;
struct seminfo;
struct ser_str;
struct servent;
struct shminfo;
struct shrlock;
struct siginfo;
struct sm_name;
struct sm_stat;
struct snaphdr;
struct statvfs;
struct stcntrs;
struct strpeek;
struct suminfo;
struct svc_req;
struct swapent;
struct swapres;
struct sysinfo;
struct tCapBuf;
struct t_iovec;
struct t_uderr;
struct tcpstat;
struct tdirent;
struct termios;
struct termiox;
struct tftphdr;
struct timeval;
struct tmpnode;
struct token_s;
struct tsadmin;
struct tsdpent;
struct tsparms;
struct ttysize;
struct udpstat;
struct ufs_acl;
struct ufs_fsd;
struct ulockfs;
struct umntres;
struct upcount;
struct utimbuf;
struct utsname;
struct viscmap;
struct vol_str;
struct winsize;
struct xdr_ops;
struct zs_prog;
struct _Mouse;
struct __FILE;
struct __auth;
struct __pctx;
union _h_val;
struct _ksema;
struct _menu_;
struct abisym;
struct acache;
struct aclent;
struct afhash;
struct apdata;
struct ar_hdr;
struct arct_s;
struct arphdr;
struct arpreq;
struct au_tid;
union auxent;
struct ba_acc;
struct ba_rjt;
struct bagent;
struct cirbuf;
struct commit;
struct cstate;
struct cyc_id;
struct cyclic;
struct dacfsw;
struct dc_ops;
struct dcfree;
struct di_all;
struct dinode;
struct direct;
struct dirent;
struct diskhd;
struct dk_map;
struct dsplog;
struct dupreq;
struct dvpoll;
struct entry3;
struct espreg;
struct eucioc;
struct exdata;
struct extent;
struct f_user;
struct fasreg;
struct fattr3;
struct fbcmap;
struct fbinfo;
struct fbtype;
struct fd_cmd;
struct fd_raw;
struct fd_set;
union fdcreg;
struct fhsize;
struct filock;
struct fiolog;
struct fmodsw;
struct fshare;
struct ftevnt;
struct ftflwe;
struct futmpx;
struct glob_t;
struct hsnode;
struct iainfo;
struct iaproc;
struct ic_acl;
struct ieconf;
struct ieiscp;
struct ifaddr;
struct ifconf;
struct iocblk;
struct ip_m_s;
struct ipha_s;
struct ipic_s;
struct ipid_s;
struct ipovly;
struct ipstat;
struct joblog;
struct keymap;
struct la_rjt;
struct la_rls;
union la_wwn;
struct lifnum;
struct lifreq;
struct lineno;
struct linesw;
struct linger;
struct llchdr;
struct lockfs;
struct loghdr;
struct loinfo;
struct mfcctl;
struct mntopt;
struct mnttab;
struct modcmd;
struct modctl;
struct modlfs;
struct module;
struct mon_id;
struct mounta;
struct msgbuf;
struct msghdr;
struct mt_map;
struct namefd;
struct ncache;
struct netbuf;
struct netent;
struct netobj;
struct o_acct;
struct opthdr;
struct passwd;
struct pc_fid;
struct pchead;
struct pcinfo;
struct pcnode;
struct pctime;
struct pkgdev;
struct pm_req;
struct pollfd;
struct prcred;
struct prxmap;
struct psinfo;
struct ptable;
struct refstr;
struct rlimit;
struct rpcent;
struct rquota;
struct rtinfo;
struct rtproc;
struct rtstat;
struct rusage;
struct sacmsg;
struct sattr3;
struct sb_hdr;
struct sclass;
struct screen;
struct sd_seg;
struct sec_ol;
struct sembuf;
struct sgttyb;
union sigval;
struct sleepq;
struct smfree;
struct soaddr;
struct sonode;
struct srvurl;
struct stat64;
struct statfs;
struct status;
struct strbuf;
struct strtty;
struct syment;
struct sysent;
struct t_call;
struct t_info;
union tblock;
struct tchars;
struct tcphdr;
struct termcb;
struct termio;
struct termsw;
struct tiuser;
struct tmount;
struct tsinfo;
struct tsproc;
struct tstamp;
struct tzhead;
union u_data;
union u_spcl;
struct udphdr;
struct ufsvfs;
struct ux_dev;
struct vfsops;
struct vfstab;
struct vifctl;
struct vminfo;
struct vt_cpu;
struct xp_ops;
struct PANEL;
struct _LCLd;
struct _LCTd;
struct _disp;
struct _klwp;
struct _kvmd;
struct _once;
struct _quad;
struct _sema;
struct adr_s;
struct ainfo;
struct aiocb;
struct arh_s;
struct bufhd;
struct c_hdr;
struct cfent;
struct cinfo;
struct cnode;
struct ctxop;
struct datab;
struct delta;
struct dispq;
struct dkbad;
union dlsap;
struct dmaga;
struct dqblk;
struct dquot;
struct dwbuf;
struct edesc;
struct execa;
struct fioio;
struct flock;
struct frame;
struct ftblk;
struct ftflw;
struct fthdr;
struct futmp;
struct graph;
struct group;
struct hsfid;
struct ierbd;
struct ierfd;
struct iescb;
struct iescp;
struct ietbd;
struct ietcb;
struct ifnet;
struct ifreq;
struct inode;
struct inpcb;
struct ioreq;
struct iovec;
struct ipart;
struct iu_ea;
struct kstat;
struct kva_s;
struct lconv;
struct lines;
struct linka;
struct lnode;
struct lsctl;
struct lsrec;
struct mboot;
struct memid;
struct mperm;
struct mtget;
struct mutex;
struct my_id;
struct nlist;
struct pcdir;
struct pcpri;
struct pinfo;
struct plock;
struct pmmsg;
struct prmap;
struct qband;
struct qelem;
struct qinit;
struct queue;
struct regid;
struct rnode;
struct route;
struct snode;
struct so_so;
struct so_ux;
struct strs2;
struct strs3;
struct strs4;
struct sttsv;
struct svcfh;
struct t_buf;
struct taskq;
struct tcpcb;
struct thrpt;
struct timeb;
struct timex;
struct ustat;
struct utmpx;
struct vattr;
struct vfssw;
struct vnode;
struct vpage;
struct zscom;
struct zsops;
struct ITEM;
struct MENU;
struct _afd;
struct _buf;
struct acct;
struct anon;
struct bind;
struct bmac;
struct core;
struct cred;
struct csum;
struct cwrd;
struct edge;
struct exec;
struct fbuf;
struct fclb;
struct file;
struct hbuf;
struct hsfs;
struct icmp;
struct iecb;
struct igmp;
struct kv_s;
struct llc1;
struct mace;
struct mint;
struct msgb;
struct mtop;
struct page;
struct pcfs;
struct pmap;
struct proc;
struct prof;
struct ptem;
struct rate;
struct regs;
struct rpcb;
union rval;
struct sess;
struct slot;
struct smap;
struct spwd;
struct sque;
struct stat;
struct stbl;
struct stio;
struct strs;
struct task;
struct term;
struct tfid;
struct tune;
struct upib;
struct user;
struct utmp;
struct vmem;
struct vtoc;
struct Elf;
struct FTW;
struct TNF;
struct XDR;
struct acl;
struct buf;
struct cnt;
struct cpu;
struct dma;
struct fid;
struct fpq;
struct fpu;
struct hat;
struct hdr;
struct ipq;
struct lmd;
struct log;
struct map;
struct mon;
struct msg;
struct ocg;
struct pcb;
struct pid;
struct pim;
struct pty;
struct qmd;
struct rip;
struct seg;
struct sem;
struct tag;
struct tms;
struct tsp;
struct uio;
struct var;
struct vfs;
struct whf;
struct as;
struct cg;
struct dl;
struct fq;
struct fs;
struct ip;
struct si;
struct tc;
struct tm;

struct nss_netdirbyaddr_in______50C6C771A4EDD455CAD0D8DFE1969C14___2B76CCD4C68FA5116F2B79D93ECF9A8B {int port; char *proto;char *buf;int buflen;};
struct nss_netdirbyaddr_in______50C6C771A4EDD455CAD0D8DFE1969C14___A9483FE5E62180344C8B6F942B51662C { char *addr;int len;int type;char *buf;int buflen;};
struct nss_netdirbyname_in______199656A6E013B40F3B25B2A0A5E1878D___5995339A35AADA7B31B84FCA93E4D7C5 { char *name;char *buf;int buflen;};
struct nss_netdirbyname_in______199656A6E013B40F3B25B2A0A5E1878D___BFAC7FB397D43626CBC2D8E8416F15CB { char *name; char *proto;char *buf;int buflen;};
struct lock_manager_pid_list___4DC38F0FE7A8191D13CDBC3374F7BD69___DC12B69B71FCF6E7CE697C9B98D1D920 {int len;char *owner;};
struct mdi_register_address___1D710587ACD8F96B72E62202A6B4467B___7408794E9FAFA6D3794D2FEFC05E2672 {unsigned int res0 : 21;unsigned int ref_req : 10;};
struct mdi_register_address___1D710587ACD8F96B72E62202A6B4467B___AAF521FFECC16E0F4B08F725D6CA6B0D {unsigned int res0 : 21;unsigned int ref_ena : 1;unsigned int ref_req : 10;};
struct mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0___038C17E0070C4E198CB4CFD3D7418D00 {unsigned int res0 : 21;unsigned int vconfig : 2;unsigned int r_setup : 9;};
struct mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0___317870EC7F9E5F5CA168BD5488628DA7 {unsigned int res0 : 28;unsigned int fbconfig : 2;unsigned int trc : 1;unsigned int refresh : 1;};
struct mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176___0B2A96B84180496199ED52D5315E28CF {unsigned char intr_ena : 1;unsigned char vid_ena : 1;unsigned char pixmode : 2;unsigned char tmr : 2;unsigned char tm_ena : 1;unsigned char reset : 1;};
struct mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176___AB6D7823DFFA587DE3AB49922CD65E6D {unsigned char intr_ena : 1;unsigned char blank : 1;unsigned char pixmode : 2;unsigned char tmr : 2;unsigned char tm_ena : 1;unsigned char vid_ena : 1;};
struct nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547___E109A5D6027DEB813545D8BF49E916D8 {struct hostent *hent;int *herrno_p;};
struct nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2___E109A5D6027DEB813545D8BF49E916D8 {struct hostent *hent;int *herrno_p;};
struct cdrom_tocentry___4A050E57821F0F876A45302BC49D06BB___5680DDBB97F8FD3AF591112B550EB0BE {unsigned char minute;unsigned char second;unsigned char frame;};
struct cdrom_subchnl___426CCB5B871ABC0B6979E88E159E461E___5680DDBB97F8FD3AF591112B550EB0BE {unsigned char minute;unsigned char second;unsigned char frame;};
union nss_XbyY_key___2B30735CA198EE135C9CF196B5967FEB___1B8C580BAD0E12BFB07DA020F29DD50C { char *name;int port;};
struct auxent______5426BF9CDAC0D098DF12E4CF0DDB9B67___93D0B1966774B86D3450284C91FC650B {unsigned short x_dimen[4];};
struct auxent______5426BF9CDAC0D098DF12E4CF0DDB9B67___A4FE982D5F029E6ACEFDE76E40C46556 {int x_lnnoptr;int x_endndx;};
struct auxent______FAC801B16405A3810F07150B5E65B5F1___6A81AB9DD74A0937A06BA2C0FB9C8664 {unsigned short x_lnno;unsigned short x_size;};
struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___EF0AB624753C0265765781C86414B739 {int __fd;int __band;};
struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___CDFB08817BACAD3B52BC51E53A98F9E8 {int RE_errno;int RE_t_errno;};
struct siginfo___61EAF0F09D3366CB297160630E2CDB63___EF0AB624753C0265765781C86414B739 {int __fd;int __band;};
struct dsplog___DABDA4726C127F966E30EBE921BDE6CC___3312E2CECBED6EEC31AB8F3844196AC4 {char d_file[8];int d_cnt;unsigned int d_uid;int d_lvl;int d_rdr;};
struct dsplog___DABDA4726C127F966E30EBE921BDE6CC___3AF9F845BE34840AF45A939F03073E99 {char d_file[8];int d_cnt;int d_trunc;};
struct syment___DDDE857849BC8DF52744F40651AC3747___FF8ECF8B5000729F16967D2BEB64C9EE {int _n_zeroes;int _n_offset;};
struct _3C540F5A14E02DF258E6208309F9E315___BA6BFB51A1B47E4DD1A444CD784794AC {unsigned int sts;unsigned int intr;unsigned int pio;unsigned int tst_mode;unsigned int : 32;unsigned int : 32;unsigned int : 32;unsigned int : 32;unsigned int cmdqp : 32;unsigned int intrqp : 32;};
struct _3C540F5A14E02DF258E6208309F9E315___DCB49AB78C587BA8794D1A369764EF9D {unsigned int reg0;unsigned int reg1;unsigned int reg2;unsigned int reg3;unsigned int : 32;unsigned int : 32;unsigned int : 32;unsigned int : 32;unsigned int reg8 : 32;unsigned int reg9 : 32;};
struct _5396904C4F40B9D23631641FAE141A5A___01B336851ED8000991E8C2192EBE3996 {unsigned int : 12;unsigned int changed_data : 20;};
struct _5396904C4F40B9D23631641FAE141A5A___D98A3E97B5AFC2C9BD51B1758E1EE0CE {unsigned int : 12;unsigned int opcode : 4;unsigned int value : 16;};
struct _5396904C4F40B9D23631641FAE141A5A___EE37C16298BD5C3A4BE5EB624F81227B {unsigned int ibits : 2;unsigned int channel : 6;unsigned int code : 4;unsigned int field : 20;};
union _57D8EEF26067F90BF74ECA27AA5A03F5___9E371396825061504C3ADBBA51EB32E4 {int a_val;void *a_ptr;void (*a_fcn)();};
struct _722BC7DC76932F8652A49C80584F2606___437BBD4FFAE2830BB41C5AD6BD388D5E {unsigned char om1 : 1;unsigned char om0 : 1;unsigned char lo : 6;unsigned char : 1;unsigned char sm : 1;unsigned char ro : 6;unsigned char pio : 2;unsigned char ovr : 1;unsigned char is : 1;unsigned char lg : 4;unsigned char ma : 4;unsigned char rg : 4;};
enum _8730B17123942F667165FE26F5FCD7CE___3DDB4C346819B22BEDB9C12A4C6CC876 {TIFIOCBUF_NONE = 0x0,TIFIOCBUF_UNINIT = 0x1,TIFIOCBUF_OK = 0x2,TIFIOCBUF_BROKEN = 0x3,};
struct _9A6DBE2689E4D78A6CC46A56A422909E___B189DDDFA0FB48CFB28663AECD3BBC94 {unsigned char : 3;unsigned char mb : 1;unsigned char vs1 : 1;unsigned char dcb : 1;unsigned char sre : 1;unsigned char vs0 : 1;unsigned char hpf : 1;unsigned char : 1;unsigned char dfr : 3;unsigned char st : 1;unsigned char df : 2;unsigned char : 2;unsigned char mck : 2;unsigned char bsel : 2;unsigned char xclk : 1;unsigned char xen : 1;unsigned char : 6;unsigned char enl : 1;unsigned char adl : 1;unsigned char pio : 2;unsigned char : 6;unsigned char : 8;unsigned char manufacturer : 4;unsigned char revision : 4;unsigned char : 8;};
struct _C43472A59D225774831BE4F95424A25C___1313F18EDDC5C67AE4E5880DFDCB3F19 {unsigned int sign : 1;unsigned int exponent : 11;unsigned int qnan_bit : 1;unsigned int bits : 19;unsigned int fraction_low : 32;};
struct _C43472A59D225774831BE4F95424A25C___1FE8A4292B0E849E2B3091F413DEBC14 {unsigned int sign : 1;unsigned int exponent : 11;unsigned int bits : 20;unsigned int fraction_low : 32;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_symdev {char vied_symname[257];};
struct mdi_register_address___8AF1E4FBAF14D0237CF30F045044651E {unsigned char revision : 4;unsigned char impl : 4;};
struct mdi_register_address___B4F8CB07784CFCBDA9ED96F36DDE887E {unsigned int res0 : 8;unsigned int framebase : 12;unsigned int res1 : 12;};
union nfslog_READLINK3res___A46E749FDD895D51A9B1F38A8D4A8ED6 {char *data;};
union mount_result_type___BD08F148FCCB07EC8727A8AEAEF243F6 {action_list *list;int error;};
struct cdrom_subchnl______5680DDBB97F8FD3AF591112B550EB0BE {unsigned char minute;unsigned char second;unsigned char frame;};
union vuid_addr_probe___E494C8051647BAD6AD0F3CB8B4EC75D8 {short next;short current;};
struct di_priv_format___DA5D4B001E276F918FB366B836D0F6B4 {int size;int offset;int len_offset;};
union nfslog_rdlnres___76B6C630296FCDD7ACE84EB6A7558908 {char *rl_ok;};
union target_private___24B48541EFD51A0AE0FB2755EE87B349 {struct buf *xx_rqsbp;struct uscsi_cmd *xx_scmdp;};
struct _7DF901F2330FED44ED065D8472D22EDC__svc_auth_ops {int (*svc_ah_wrap)();int (*svc_ah_unwrap)();};
struct dbri_dts_tsd___5C60E47FC670D9F72FB94116E1FA1533 {unsigned int : 19;unsigned int mode : 3;unsigned int : 5;unsigned int next : 5;};
union lm_blockinfo___EAAFFCB58334A5EE6261E6C340DE312B {struct nlm_res *nr;struct nlm4_res *nr4;};
struct nss_XbyY_key___94B6CF0C6915478CD98367858D940171 { char *addr;int len;int type;};
struct nss_XbyY_key___CD5F44B92FE3ED666A24DAE448CD6B19 {int net;int type;};
struct nss_XbyY_key___E5450DB01C1CBC9C11C74BC5DC6DA3FB { char *name; char *keytype;};
union openpromio___323EE700B5499288BFC86B907B5BFC31 {char b[1];int i;};
struct auxent___DCBB1492986F0BE2861FD6E058DF7EAB {char x_fname[14];};
struct auxent___F460BEB6336398C870E506DAD23CA9F2 {int x_tvfill;unsigned short x_tvlen;unsigned short x_tvran[2];};
struct auxent___FB1486A92607447806F09823D579EE12 {int x_scnlen;unsigned short x_nreloc;unsigned short x_nlinno;};
struct filock___667AC850CFE8393E0756DB4723116C22 {int granted_flag;struct filock *blk;struct attacher *blocking_list;struct attacher *my_attacher;};
union lineno___4D6E082ABC3813EFAD274BDB52D637EC {int l_symndx;int l_paddr;};
union datab___B2E8909E96C049C2A3E7A2AEEB3F3FB8 {double enforce_alignment;unsigned char data[8];unsigned int u16 : 16;};
struct rval___8462DB5BA46F76167B8A3A69903806F1 {int r_v1;int r_v2;};
enum slot___D48DA2B417DCEB42491146B2A8A36AD2 {SL_NONE = 0x0,SL_FOUND = 0x1,SL_EXTEND = 0x2,};
enum pcb___A081279ABEE1631CD9A511E8616D291A {XREGNONE = 0x0,XREGPRESENT = 0x1,XREGMODIFIED = 0x2,};
enum MACRO_LctErrorDBCannotFindFromCharset {LctErrorDBCannotFindFromCharset = 5,};
enum MACRO_LctErrorDBCannotFindToCharset {LctErrorDBCannotFindToCharset = 6,};
enum MACRO_SOFT_ERROR_WARNING_THRESHOLD {READ_SOFT_ERROR_WARNING_THRESHOLD = 26214400,WRITE_SOFT_ERROR_WARNING_THRESHOLD = 20971520,};
enum _003F63A829E52477BDB4080710A1139D {preorder = 0x0,postorder = 0x1,endorder = 0x2,leaf = 0x3,};
struct _0113267646EB0A9CEC05668EA2201D53 {int ick_magic;int ick_split;int ick_split_align;int ick_xmit;};
enum _014516C156DA5201E9C0253C2C7BF2C9 {ELF_C_NULL = 0x0,ELF_C_READ = 0x1,ELF_C_WRITE = 0x2,ELF_C_CLR = 0x3,ELF_C_SET = 0x4,ELF_C_FDDONE = 0x5,ELF_C_FDREAD = 0x6,ELF_C_RDWR = 0x7,ELF_C_WRIMAGE = 0x8,ELF_C_IMAGE = 0x9,ELF_C_NUM = 0xA,};
enum _03CC775CEF2B1D596517FD882262439F {DMA_OTYP_VADDR = 0x0,DMA_OTYP_PAGES = 0x1,DMA_OTYP_PADDR = 0x2,};
enum _041E3D91F6E47CF820A5EC5BE234707E {SLP_LIFETIME_DEFAULT = 0x2A30,SLP_LIFETIME_MAXIMUM = 0xFFFF,};
enum _062E8AE2261C719812C59BB6BEB13941 {FN_SYNTAX_STANDARD_DIRECTION_FLAT = 0x0,FN_SYNTAX_STANDARD_DIRECTION_LTR = 0x1,FN_SYNTAX_STANDARD_DIRECTION_RTL = 0x2,};
struct _066FE788D2AC1D75EE490E561209D556 {int cmd;int reserved[4];};
struct _06CAB5296C39900A9CE51DBF4F560AD6 {int val[2];};
enum _0975BDD6F157BDBA4D69597495967F12 {LclTypeDisplay = 0x0,LclTypeInComingStream = 0x1,LclTypeOutGoingStream = 0x2,LclTypeFile = 0x3,LclTypeApp = 0x4,LclTypeOther = 0x5,};
enum _09E8BCDC574BDBEF68A1C2F08AD7DBBF {TNFCTL_BUF_OK = 0x0,TNFCTL_BUF_NONE = 0x1,TNFCTL_BUF_BROKEN = 0x2,};
enum _0C8CCBCA03C364CB9C340F4C94668308 {_PC_EUC = 0x0,_PC_DENSE = 0x1,_PC_UCS4 = 0x2,};
enum _1323AA4975EEFDF9DDFDA31CD873A283 {NSS_SUCCESS = 0x0,NSS_NOTFOUND = 0x1,NSS_UNAVAIL = 0x2,NSS_TRYAGAIN = 0x3,NSS_NISSERVDNS_TRYAGAIN = 0x4,};
enum _13C394361E9AC5CA038584373CF0D1BD {TNF_ERR_NONE = 0x0,TNF_ERR_NOTTNF = 0x400,TNF_ERR_BADDATUM = 0x401,TNF_ERR_TYPEMISMATCH = 0x402,TNF_ERR_BADINDEX = 0x403,TNF_ERR_BADSLOT = 0x404,TNF_ERR_BADREFTYPE = 0x405,TNF_ERR_ALLOCFAIL = 0x406,TNF_ERR_BADTNF = 0x407,TNF_ERR_INTERNAL = 0x408,};
enum _14C8EF536CF000E9A9D5F5EF83AA29EC {LMB_PENDING = 0x0,LMB_BLOCKED = 0x1,LMB_GRANTED = 0x2,};
enum _16117E4F5BF7AAA0A2A7EB6F15A0B87C {_LC_TAG_UNDEF = 0x0,_LC_TAG_TRANS = 0x1,_LC_TAG_CCLASS = 0x2,};
struct _16D4A1559E041DBB68E7A1F4F9CBF232 {int pi_state;char pi_processor_type[16];char pi_fputypes[32];int pi_clock;};
enum _176E06A90436C16DD1EC2E1A345EFA40 {RD_ERR = 0x0,RD_OK = 0x1,RD_NOCAPAB = 0x2,RD_DBERR = 0x3,RD_NOBASE = 0x4,RD_NODYNAM = 0x5,RD_NOMAPS = 0x6,};
enum _18F4D073277E58FDDB2C169A72F1FC3C {PCTX_NULL_EVENT = 0x0,PCTX_SYSC_EXEC_EVENT = 0x1,PCTX_SYSC_FORK_EVENT = 0x2,PCTX_SYSC_EXIT_EVENT = 0x3,PCTX_SYSC_LWP_CREATE_EVENT = 0x4,PCTX_INIT_LWP_EVENT = 0x5,PCTX_FINI_LWP_EVENT = 0x6,PCTX_SYSC_LWP_EXIT_EVENT = 0x7,};
struct _21B5ADE7931223AA804E41EE15A82D4B {unsigned int re_mask;unsigned int re_flags;unsigned char re_fsize;unsigned char re_bshift;unsigned char re_sigbits;};
enum _23CD138AFBA10A16D770AC92A674B7D9 {AP_COND_UNKNOWN = 0x0,AP_COND_OK = 0x1,AP_COND_FAILING = 0x2,AP_COND_FAILED = 0x3,AP_COND_UNUSABLE = 0x4,};
struct _2533481BB5519C9B22079276CD47D0A2 {int pmin;int pmax;int smin;int smax;};
struct _256FEEFA99C080BE07F3A81A96D4694C {short _eucw1;short _eucw2;short _eucw3;short _scrw1;short _scrw2;short _scrw3;short _pcw;char _multibyte;};
enum _27EF52B7EDF945EB8F92BA945907B559 {LclTypeOneway = 0x0,LclTypeBothway = 0x1,};
enum _29D01D9311FDD83E67B17289D334DF0B {FC_TYPE_UNCATEGORIZED = 0x0,FC_TYPE_DATA = 0x1,FC_TYPE_UNSOL_CONTROL = 0x2,FC_TYPE_SOLICITED_CONTROL = 0x3,FC_TYPE_UNSOL_DATA = 0x4,FC_TYPE_XFER_RDY = 0x5,FC_TYPE_COMMAND = 0x6,FC_TYPE_RESPONSE = 0x7,};
enum _2A9D6F0D138547ECB8E62D5BF66B49C5 {CFGA_OK = 0x0,CFGA_NACK = 0x1,CFGA_NOTSUPP = 0x2,CFGA_OPNOTSUPP = 0x3,CFGA_PRIV = 0x4,CFGA_BUSY = 0x5,CFGA_SYSTEM_BUSY = 0x6,CFGA_DATA_ERROR = 0x7,CFGA_LIB_ERROR = 0x8,CFGA_NO_LIB = 0x9,CFGA_INSUFFICENT_CONDITION = 0xA,CFGA_INVAL = 0xB,CFGA_ERROR = 0xC,CFGA_APID_NOEXIST = 0xD,CFGA_ATTR_INVAL = 0xE,};
enum _2C30E1479128C3D76FE2B7FD5491F04B {FN_SUCCESS = 0x1,FN_E_LINK_ERROR = 0x2,FN_E_CONFIGURATION_ERROR = 0x3,FN_E_NAME_NOT_FOUND = 0x4,FN_E_NOT_A_CONTEXT = 0x5,FN_E_LINK_LOOP_LIMIT = 0x6,FN_E_MALFORMED_LINK = 0x7,FN_E_ILLEGAL_NAME = 0x8,FN_E_CTX_NO_PERMISSION = 0x9,FN_E_NAME_IN_USE = 0xA,FN_E_OPERATION_NOT_SUPPORTED = 0xB,FN_E_COMMUNICATION_FAILURE = 0xC,FN_E_CTX_UNAVAILABLE = 0xD,FN_E_NO_SUPPORTED_ADDRESS = 0xE,FN_E_MALFORMED_REFERENCE = 0xF,FN_E_AUTHENTICATION_FAILURE = 0x10,FN_E_INSUFFICIENT_RESOURCES = 0x11,FN_E_CTX_NOT_EMPTY = 0x12,FN_E_NO_SUCH_ATTRIBUTE = 0x13,FN_E_INVALID_ATTR_IDENTIFIER = 0x14,FN_E_INVALID_ATTR_VALUE = 0x15,FN_E_TOO_MANY_ATTR_VALUES = 0x16,FN_E_ATTR_VALUE_REQUIRED = 0x17,FN_E_ATTR_NO_PERMISSION = 0x18,FN_E_PARTIAL_RESULT = 0x19,FN_E_INVALID_ENUM_HANDLE = 0x1A,FN_E_SYNTAX_NOT_SUPPORTED = 0x1B,FN_E_INVALID_SYNTAX_ATTRS = 0x1C,FN_E_INCOMPATIBLE_CODE_SETS = 0x1D,FN_E_CONTINUE = 0x1E,FN_E_UNSPECIFIED_ERROR = 0x1F,FN_E_NO_EQUIVALENT_NAME = 0x20,FN_E_ATTR_IN_USE = 0x21,FN_E_SEARCH_INVALID_FILTER = 0x22,FN_E_SEARCH_INVALID_OP = 0x23,FN_E_SEARCH_INVALID_OPTION = 0x24,FN_E_INCOMPATIBLE_LOCALES = 0x25,};
enum _2FA655DF3B517FACB7949C2D644DAB43 {rpc_gss_svc_default = 0x0,rpc_gss_svc_none = 0x1,rpc_gss_svc_integrity = 0x2,rpc_gss_svc_privacy = 0x3,};
enum _3186EC298029A051CEE1BF271F72D5DD {LctNUnused = 0x0,LctNSourceType = 0x1,LctNSourceForm = 0x2,LctNKeepReference = 0x3,LctNMsgText = 0x4,LctNPlainText = 0x5,LctNTaggedText = 0x6,LctNSeparatedTaggedText = 0x7,LctNSourceUnknown = 0x8,LctNKeepByValue = 0x9,LctNKeepByReference = 0xA,LctNDisplayForm = 0xB,LctNInComingStreamForm = 0xC,LctNOutGoingStreamForm = 0xD,LctNOutGoingStreamForm_V3 = 0xE,LctNOutGoingStreamForm_V3_Attach = 0xF,LctNFileForm = 0x10,LctNAppForm = 0x11,LctNPrintForm = 0x12,LctNUnknownForm = 0x13,LctNHeaderCharset = 0x14,LctNHeaderCharsetList = 0x15,LctNHeaderPossibleCharsetList = 0x16,LctNHeaderSegment = 0x17,LctNHeaderEncoding = 0x18,LctNHeaderCharsetEncoding = 0x19,LctNBodyCharset = 0x1A,LctNBodyCharsetList = 0x1B,LctNBodyPossibleCharsetList = 0x1C,LctNBodySegment = 0x1D,LctNBodyEncoding = 0x1E,LctNBodyCharsetEncoding = 0x1F,LctNTaggedTextCharset = 0x20,LctNTaggedTextCharsetList = 0x21,LctNTaggedTextPossibleCharsetList = 0x22,LctNTaggedTextSegment = 0x23,LctNTaggedTextEncoding = 0x24,LctNPlainTextCharset = 0x25,LctNPlainTextCharsetList = 0x26,LctNPlainTextPossibleCharsetList = 0x27,LctNPlainTextSegment = 0x28,LctNPlainTextEncoding = 0x29,LctNMailType = 0x2A,LctNAddHeader = 0x2B,LctNContentOfHeaderSegment = 0x2C,LctNBodyCharsetMailName = 0x2D,LctNContentOfTaggedTextSegment = 0x2E,LctNQuerySourceType = 0x2F,LclNVaNextedList = 0x30,};
struct _31AE19E04776D95D90F1AA36D4709208 {int media_type;int outputdest;int tracelevel;int debuglevel;int ifid;};
enum _34D0A9496006982FFAE833C372B85A0C {RD_NOSTATE = 0x0,RD_CONSISTENT = 0x1,RD_ADD = 0x2,RD_DELETE = 0x3,};
enum _354CCF684609FF657B26F0F4A65DC75F {ISDN_PATH_NOCHANGE = 0x0,ISDN_PATH_DISCONNECT = 0x1,ISDN_PATH_ONEWAY = 0x2,ISDN_PATH_TWOWAY = 0x3,};
enum _370C3B42DAEBA43C9084EF8E4345E8A7 {FN_SEARCH_ONE_CONTEXT = 0x0,FN_SEARCH_NAMED_OBJECT = 0x1,FN_SEARCH_SUBTREE = 0x2,FN_SEARCH_CONSTRAINED_SUBTREE = 0x3,};
enum _37901662FEBD63C2ABBFAC806A9B9F40 {PM_SYSTEM_PM_ENABLED = 0x0,PM_SYSTEM_PM_DISABLED = 0x1,PM_NO_PM_COMPONENTS = 0x2,PM_CREATE_COMPONENTS = 0x3,PM_AUTOPM = 0x4,PM_DEFAULT_THRESHOLD = 0x5,PM_DEVICE_THRESHOLD = 0x6,PM_COMPONENT_THRESHOLD = 0x7,PM_OLD_THRESHOLD = 0x8,PM_DIRECTLY_MANAGED = 0x9,};
enum _3797F07133CAA59E79BE5E41B8631F21 {TNF_UNKNOWN = 0x0,TNF_INT32 = 0x1,TNF_UINT32 = 0x2,TNF_INT64 = 0x3,TNF_UINT64 = 0x4,TNF_FLOAT32 = 0x5,TNF_FLOAT64 = 0x6,TNF_STRING = 0x7,TNF_ARRAY = 0x8,TNF_STRUCT = 0x9,TNF_OPAQUE = 0xA,};
enum _38ED0C2ADD2BD878794BFE6293F393A9 {CV_DEFAULT = 0x0,CV_DRIVER = 0x1,};
enum _39FEE29CB19F6AB95D833477CB3CFB16 {FC_CLASS_OUTBOUND = 0x0,FC_CLASS_INBOUND = 0x1,FC_CLASS_SIMPLE = 0x2,FC_CLASS_IO_WRITE = 0x3,FC_CLASS_IO_READ = 0x4,FC_CLASS_OFFLINE = 0x5,FC_CLASS_UNSOLICITED = 0x6,};
union _3C8E0388BDDD5F7551C53EF0F32B4233 {unsigned int ba_val;void *ba_ptr;};
enum _3C9CBA2A05837AB5EE7067EF57B45517 {MDB_TYPE_STRING = 0x0,MDB_TYPE_IMMEDIATE = 0x1,MDB_TYPE_CHAR = 0x2,};
struct _3CF515CC911B8F03DF4F355C5ACD22AD {void *result;char *buffer;int buflen;};
enum _3EACBFB1F6A69D9CA6E99CE3BA7C8589 {res_goahead = 0x0,res_nextns = 0x1,res_modified = 0x2,res_done = 0x3,res_error = 0x4,};
enum _3EC23EC6F0FDADF0EEC41EBD5A8B52ED {PM_SCHEDULE = 0x0,PM_GET_IDLE_TIME = 0x1,PM_GET_NUM_CMPTS = 0x2,PM_GET_THRESHOLD = 0x3,PM_SET_THRESHOLD = 0x4,PM_GET_NORM_PWR = 0x5,PM_SET_CUR_PWR = 0x6,PM_GET_CUR_PWR = 0x7,PM_GET_NUM_DEPS = 0x8,PM_GET_DEP = 0x9,PM_ADD_DEP = 0xA,PM_REM_DEP = 0xB,PM_REM_DEVICE = 0xC,PM_REM_DEVICES = 0xD,PM_REPARSE_PM_PROPS = 0xE,PM_DISABLE_AUTOPM = 0xF,PM_REENABLE_AUTOPM = 0x10,PM_SET_NORM_PWR = 0x11,PM_SET_DEVICE_THRESHOLD = 0x12,PM_GET_SYSTEM_THRESHOLD = 0x13,PM_SET_SYSTEM_THRESHOLD = 0x14,PM_START_PM = 0x15,PM_STOP_PM = 0x16,PM_RESET_PM = 0x17,PM_GET_STATS = 0x18,PM_GET_DEVICE_THRESHOLD = 0x19,PM_GET_POWER_NAME = 0x1A,PM_GET_POWER_LEVELS = 0x1B,PM_GET_NUM_COMPONENTS = 0x1C,PM_GET_COMPONENT_NAME = 0x1D,PM_GET_NUM_POWER_LEVELS = 0x1E,PM_GET_STATE_CHANGE = 0x1F,PM_GET_STATE_CHANGE_WAIT = 0x20,PM_DIRECT_PM = 0x21,PM_RELEASE_DIRECT_PM = 0x22,PM_DIRECT_NOTIFY = 0x23,PM_DIRECT_NOTIFY_WAIT = 0x24,PM_RESET_DEVICE_THRESHOLD = 0x25,PM_GET_PM_STATE = 0x26,PM_GET_DEVICE_TYPE = 0x27,PM_SET_COMPONENT_THRESHOLDS = 0x28,PM_GET_COMPONENT_THRESHOLDS = 0x29,PM_IDLE_DOWN = 0x2A,PM_GET_DEVICE_THRESHOLD_BASIS = 0x2B,PM_SET_CURRENT_POWER = 0x2C,PM_GET_CURRENT_POWER = 0x2D,PM_GET_FULL_POWER = 0x2E,PM_ADD_DEPENDENT = 0x2F,PM_GET_TIME_IDLE = 0x30,PM_GET_DEFAULT_SYSTEM_THRESHOLD = 0x31,};
enum _3F61DD0375CBC1F37C02B00929A813F6 {DDI_PROP_CMD_GET_ESIZE = 0x0,DDI_PROP_CMD_GET_DSIZE = 0x1,DDI_PROP_CMD_DECODE = 0x2,DDI_PROP_CMD_ENCODE = 0x3,DDI_PROP_CMD_SKIP = 0x4,};
enum _3F8C702D250B5DC330EA07867C0DE268 {LclContentUnknown = 0x0,LclContentText = 0x1,LclContentBinary = 0x2,};
enum _401A9802811826260D9AA8000BA0BB75 {ELF_K_NONE = 0x0,ELF_K_AR = 0x1,ELF_K_COFF = 0x2,ELF_K_ELF = 0x3,ELF_K_NUM = 0x4,};
enum _414A75941736CF17FAE8ED5C32E2DBBB {EO_NONE = 0x0,EO_GROUP = 0x1,EO_ITEM = 0x2,};
enum _43B36F08FB889DFA872E3981C7EFED93 {SLP_LAST_CALL = 0x1,SLP_OK = 0x0,SLP_LANGUAGE_NOT_SUPPORTED = 0xFFFFFFFF,SLP_PARSE_ERROR = 0xFFFFFFFE,SLP_INVALID_REGISTRATION = 0xFFFFFFFD,SLP_SCOPE_NOT_SUPPORTED = 0xFFFFFFFC,SLP_AUTHENTICATION_ABSENT = 0xFFFFFFFA,SLP_AUTHENTICATION_FAILED = 0xFFFFFFF9,SLP_INVALID_UPDATE = 0xFFFFFFF3,SLP_NOT_IMPLEMENTED = 0xFFFFFFEF,SLP_BUFFER_OVERFLOW = 0xFFFFFFEE,SLP_NETWORK_TIMED_OUT = 0xFFFFFFED,SLP_NETWORK_INIT_FAILED = 0xFFFFFFEC,SLP_MEMORY_ALLOC_FAILED = 0xFFFFFFEB,SLP_PARAMETER_BAD = 0xFFFFFFEA,SLP_NETWORK_ERROR = 0xFFFFFFE9,SLP_INTERNAL_SYSTEM_ERROR = 0xFFFFFFE8,SLP_HANDLE_IN_USE = 0xFFFFFFE7,SLP_TYPE_ERROR = 0xFFFFFFE6,SLP_SECURITY_UNAVAILABLE = 0xFFFFFF80,};
enum _43D49273C3852A9CF5015CF659B9A833 {TNFCTL_EVENT_EINTR = 0x0,TNFCTL_EVENT_TARGGONE = 0x1,TNFCTL_EVENT_DLOPEN = 0x2,TNFCTL_EVENT_DLCLOSE = 0x3,TNFCTL_EVENT_EXEC = 0x4,TNFCTL_EVENT_FORK = 0x5,TNFCTL_EVENT_EXIT = 0x6,};
struct _43F9318D896FF98D6032380AA4C8DE55 {unsigned int obj_id;unsigned int : 16;unsigned int subencid : 8;unsigned int elem_type : 8;};
enum _45009653CDC2001856F06EFDA9E04C5E {DDI_CTLOPS_DMAPMAPC = 0x0,DDI_CTLOPS_INITCHILD = 0x1,DDI_CTLOPS_UNINITCHILD = 0x2,DDI_CTLOPS_REPORTDEV = 0x3,DDI_CTLOPS_REPORTINT = 0x4,DDI_CTLOPS_REGSIZE = 0x5,DDI_CTLOPS_NREGS = 0x6,DDI_CTLOPS_NINTRS = 0x7,DDI_CTLOPS_SIDDEV = 0x8,DDI_CTLOPS_SLAVEONLY = 0x9,DDI_CTLOPS_AFFINITY = 0xA,DDI_CTLOPS_IOMIN = 0xB,DDI_CTLOPS_PTOB = 0xC,DDI_CTLOPS_BTOP = 0xD,DDI_CTLOPS_BTOPR = 0xE,DDI_CTLOPS_POKE_INIT = 0xF,DDI_CTLOPS_POKE_FLUSH = 0x10,DDI_CTLOPS_POKE_FINI = 0x11,DDI_CTLOPS_INTR_HILEVEL = 0x12,DDI_CTLOPS_XLATE_INTRS = 0x13,DDI_CTLOPS_DVMAPAGESIZE = 0x14,DDI_CTLOPS_POWER = 0x15,DDI_CTLOPS_ATTACH = 0x16,DDI_CTLOPS_DETACH = 0x17,};
struct _45D3B8D1F0A0E1A15D8490524663D915 {struct netconfig **nc_head;struct netconfig **nc_curr;};
enum _4889CC838EABD4A4DF267BE559C2BCD8 {ISDN_PARAM_NONE = 0x0,ISDN_PARAM_NT_T101 = 0x1,ISDN_PARAM_NT_T102 = 0x2,ISDN_PARAM_TE_T103 = 0x3,ISDN_PARAM_TE_T104 = 0x4,ISDN_PARAM_end_of_timers = 0x63,ISDN_PARAM_MAINT = 0x64,ISDN_PARAM_ASMB = 0x65,ISDN_PARAM_POWER = 0x66,ISDN_PARAM_PAUSE = 0x67,ISDN_PARAM_vendor = 0x3E8,};
struct _488DA2D57F3DEC7D8F8D2973FF098AA5 {int front;int back;};
enum _4E1F7E6004833A901F098B2E39E9859C {FN_STRING_CASE_INSENSITIVE = 0x0,FN_STRING_CASE_SENSITIVE = 0x1,};
struct _4F7711BDAF281951A6E73987538C1D62 {char *dmap_devname;char *dmap_devtype;char *dmap_devlist;};
enum _5215702A02A06E3D32B9006B2E703D72 {FN_SPI_SINGLE_COMPONENT = 0x1,FN_SPI_MULTIPLE_COMPONENT = 0x2,};
enum _5558F65A0FB6A68FD1548EA96864D077 {FN_DESCRIPTION_MINIMAL = 0x0,FN_DESCRIPTION_COMPLETE = 0xA,};
enum _57BAE6CEF194EFB5132205D2FB8A3C5F {FN_ID_STRING = 0x0,FN_ID_DCE_UUID = 0x1,FN_ID_ISO_OID_STRING = 0x2,};
struct _57DBDB9F9E69733D408CC307EF34A958 {unsigned int __sigbits[4];};
struct _596FCBE93D83B7A9B9C02E2997D81DA7 {struct termio *attr;int baud;int speed;char *line;char *telno;int modem;char *device;int dev_len;};
enum _5B09411ABF7AF89741BC688D36351F9B {RW_WRITER = 0x0,RW_READER = 0x1,};
enum _5CAC3459AD204328D83E0EB10D8F388D {LM_UP = 0x0,LM_SHUTTING_DOWN = 0x1,LM_DOWN = 0x2,};
struct _5D176D33403591159BBBEF445356E214 {unsigned int __sigbits[2];};
enum _5DF0ED3184972A3C527030570D523F44 {FN_OP_SUPERCEDE = 0x0,FN_OP_EXCLUSIVE = 0x1,};
struct _5F8D13B29616A56F84BD15B89191A8F7 { char *name;unsigned int mask;};
enum _628604CA069736C17E916A575687F61F {ISDN_LOOPBACK_B1 = 0x1,ISDN_LOOPBACK_B2 = 0x2,ISDN_LOOPBACK_D = 0x4,ISDN_LOOPBACK_E_ZERO = 0x8,ISDN_LOOPBACK_S = 0x10,ISDN_LOOPBACK_Q = 0x20,};
enum _635420CA75E4368650FCB176130922B4 {SEMA_DEFAULT = 0x0,SEMA_DRIVER = 0x1,};
enum _65CF98EECFB69F691B0631C04FBFD9D4 {TD_ALL_EVENTS = 0x0,TD_EVENT_NONE = 0x0,TD_READY = 0x1,TD_SLEEP = 0x2,TD_SWITCHTO = 0x3,TD_SWITCHFROM = 0x4,TD_LOCK_TRY = 0x5,TD_CATCHSIG = 0x6,TD_IDLE = 0x7,TD_CREATE = 0x8,TD_DEATH = 0x9,TD_PREEMPT = 0xA,TD_PRI_INHERIT = 0xB,TD_REAP = 0xC,TD_CONCURRENCY = 0xD,TD_TIMEOUT = 0xE,TD_MIN_EVENT_NUM = 0x1,TD_MAX_EVENT_NUM = 0xE,TD_EVENTS_ENABLE = 0x1F,};
enum _67B0C970003978024F26F3A7D9A4CAE6 {FN_STRING_INDEX_NONE = 0xFFFFFFFF,FN_STRING_INDEX_FIRST = 0x0,FN_STRING_INDEX_LAST = 0x7FFFFFFF,};
enum _6C240A0F2C531038D6945D09C29C55E6 {DACF_OPID_ERROR = 0xFFFFFFFF,DACF_OPID_END = 0x0,DACF_OPID_POSTATTACH = 0x1,DACF_OPID_PREDETACH = 0x2,};
struct _725E3ED3C7EFF3B90CE6F33C2B731462 {int llc_ack_timer;int llc_poll_timer;int llc_rej_timer;int llc_busy_timer;int llc_inac_timer;int llc_ackdelay_timer;int llc_l2_timer;int llc_rnr_limit_timer;int llc_ackdelay_max;int llc_maxretry;int llc_l2_maxretry;int llc_xmitwindow;int llc_flag;};
enum _7763C6F5F90D633510BBD051BDA06E4F {TD_OK = 0x0,TD_ERR = 0x1,TD_NOTHR = 0x2,TD_NOSV = 0x3,TD_NOLWP = 0x4,TD_BADPH = 0x5,TD_BADTH = 0x6,TD_BADSH = 0x7,TD_BADTA = 0x8,TD_BADKEY = 0x9,TD_NOMSG = 0xA,TD_NOFPREGS = 0xB,TD_NOLIBTHREAD = 0xC,TD_NOEVENT = 0xD,TD_NOCAPAB = 0xE,TD_DBERR = 0xF,TD_NOAPLIC = 0x10,TD_NOTSD = 0x11,TD_MALLOC = 0x12,TD_PARTIALREG = 0x13,TD_NOXREGS = 0x14,};
enum _780B979F0B1070C2A1BEC9CE8B44076A {RD_RESOLVE_NONE = 0x0,RD_RESOLVE_STEP = 0x1,RD_RESOLVE_TARGET = 0x2,RD_RESOLVE_TARGET_STEP = 0x3,};
enum _7948EC45DEF305B61169931C8DCDB649 {FN_ATTR_OP_ADD = 0x1,FN_ATTR_OP_ADD_EXCLUSIVE = 0x2,FN_ATTR_OP_REMOVE = 0x3,FN_ATTR_OP_ADD_VALUES = 0x4,FN_ATTR_OP_REMOVE_VALUES = 0x5,};
enum _800308667964E9594463B69B6CCFCE10 {MUTEX_ADAPTIVE = 0x0,MUTEX_SPIN = 0x1,MUTEX_DRIVER = 0x4,MUTEX_DEFAULT = 0x6,};
enum _8183A1332CE171C30172CB4371E09D7E {FN_CTX_FUNC_EQUIVALENT_NAME = 0x0,FN_CTX_FUNC_GET_REF = 0x1,FN_CTX_FUNC_LOOKUP = 0x2,FN_CTX_FUNC_LIST_NAMES = 0x3,FN_CTX_FUNC_LIST_BINDINGS = 0x4,FN_CTX_FUNC_BIND = 0x5,FN_CTX_FUNC_UNBIND = 0x6,FN_CTX_FUNC_CREATE_SUBCONTEXT = 0x7,FN_CTX_FUNC_DESTROY_SUBCONTEXT = 0x8,FN_CTX_FUNC_RENAME = 0x9,FN_CTX_FUNC_GET_SYNTAX_ATTRS = 0xA,FN_CTX_FUNC_ATTR_GET = 0xB,FN_CTX_FUNC_ATTR_MODIFY = 0xC,FN_CTX_FUNC_ATTR_GET_VALUES = 0xD,FN_CTX_FUNC_ATTR_GET_IDS = 0xE,FN_CTX_FUNC_ATTR_MULTI_GET = 0xF,FN_CTX_FUNC_ATTR_MULTI_MODIFY = 0x10,FN_CTX_FUNC_ATTR_BIND = 0x11,FN_CTX_FUNC_ATTR_CREATE = 0x12,FN_CTX_FUNC_ATTR_SEARCH = 0x13,FN_CTX_FUNC_ATTR_EXT_SEARCH = 0x14,};
enum _81EF3FA8C4370F96570BE58B85740C0E {CFGA_COND_UNKNOWN = 0x0,CFGA_COND_OK = 0x1,CFGA_COND_FAILING = 0x2,CFGA_COND_FAILED = 0x3,CFGA_COND_UNUSABLE = 0x4,};
struct _85563A71CF7457DF5AD2FDE8FB997EAF {unsigned int word[4];};
enum _85FDB0E6998635E870FE0A8BC4B4C3FB {FC_TRANSPORT_SUCCESS = 0x0,FC_TRANSPORT_FAILURE = 0x1,FC_TRANSPORT_TIMEOUT = 0x2,FC_TRANSPORT_QFULL = 0x3,FC_TRANSPORT_UNAVAIL = 0x4,};
enum _866CF79549BA537B648330022140BDBC {AP_OSTATE_UNCONFIGURED = 0x0,AP_OSTATE_CONFIGURED = 0x1,};
enum _8724F201D2476C5A27302B0C46EAD9DC {RD_NONE = 0x0,RD_PREINIT = 0x1,RD_POSTINIT = 0x2,RD_DLACTIVITY = 0x3,};
enum _88495A355BB3E6D41AADF572D3BFAE21 {ELF_T_BYTE = 0x0,ELF_T_ADDR = 0x1,ELF_T_DYN = 0x2,ELF_T_EHDR = 0x3,ELF_T_HALF = 0x4,ELF_T_OFF = 0x5,ELF_T_PHDR = 0x6,ELF_T_RELA = 0x7,ELF_T_REL = 0x8,ELF_T_SHDR = 0x9,ELF_T_SWORD = 0xA,ELF_T_SYM = 0xB,ELF_T_WORD = 0xC,ELF_T_VDEF = 0xD,ELF_T_VNEED = 0xE,ELF_T_SXWORD = 0xF,ELF_T_XWORD = 0x10,ELF_T_NUM = 0x11,};
enum _89FB60EA18EC68E58342D0F505790FD5 {TD_THR_ANY_TYPE = 0x0,TD_THR_USER = 0x1,TD_THR_SYSTEM = 0x2,};
enum _8A69B4244D68C55526C7E67A1302CC04 {CYS_ONLINE = 0x0,CYS_OFFLINE = 0x1,CYS_EXPANDING = 0x2,CYS_REMOVING = 0x3,CYS_SUSPENDED = 0x4,};
struct _8B85712FB09FAAC9E4FCB41A89281044 {unsigned int word[16];};
struct _8E17CB6E332B6DCEA38208AF631FD83A {int nalloc;int nfree;int nalloc_calls;int nfree_calls;};
enum _8E5B18BDA15BCA983D757F24B1D87563 {FN_SPI_STATIC_BOUNDARY = 0x1,FN_SPI_DYNAMIC_BOUNDARY = 0x2,};
enum _92D8A10D5D3318494FF31390A6A19662 {PS_OK = 0x0,PS_ERR = 0x1,PS_BADPID = 0x2,PS_BADLID = 0x3,PS_BADADDR = 0x4,PS_NOSYM = 0x5,PS_NOFREGS = 0x6,};
struct _96509CB31A3C50C1F728CA63BB4787CF {int num;char **charset;};
enum _96510381DCBEEC9773C8F1EFD3180D16 {DDI_NC_PROM = 0x0,DDI_NC_PSEUDO = 0x1,};
struct _979FA3DE6ECCF956231BFC297C4278E6 {int quot;int rem;};
enum _980FA8BDE1FB627A165EC34D5A62F01B {LclUnKnownEncoding = 0x0,LclBase64Encoding = 0x1,LclQPEncoding = 0x2,Lcl822Encoding = 0x3,};
struct _987A4977B64401F127AD4A87403FCD8A {char *str;int length;};
enum _99AB38EF265AA84A0F6A323035284FBD {TNF_K_UNKNOWN = 0x0,TNF_K_SCALAR = 0x1,TNF_K_CHAR = 0x2,TNF_K_INT8 = 0x3,TNF_K_INT16 = 0x4,TNF_K_INT32 = 0x5,TNF_K_UINT8 = 0x6,TNF_K_UINT16 = 0x7,TNF_K_UINT32 = 0x8,TNF_K_INT64 = 0x9,TNF_K_UINT64 = 0xA,TNF_K_FLOAT32 = 0xB,TNF_K_FLOAT64 = 0xC,TNF_K_ARRAY = 0xD,TNF_K_STRING = 0xE,TNF_K_STRUCT = 0xF,TNF_K_TYPE = 0x10,};
enum _9DF241986813CBC10D66CF006F720785 {STAB_SUCCESS = 0x0,STAB_FAIL = 0xFFFFFFFF,STAB_NA = 0xFFFFFFFE,STAB_NOMEM = 0xFFFFFFFD,};
enum _A091DCDAEC8B8097B50B5275FBA122A0 {pppVer1 = 0x0,pppVer2 = 0x1,};
struct _A556726339174AF4A052C1DB3ED032E6 {short r;short g;short b;};
enum _A6580FDE48616C23ADC769BAB4D07B11 {FLK_LOCKMGR_UP = 0x0,FLK_WAKEUP_SLEEPERS = 0x1,FLK_LOCKMGR_DOWN = 0x2,};
enum _A959B596F4A4BFCA9FCF924B52F0DB35 {ISDN_LOOPBACK_LOCAL = 0x0,ISDN_LOOPBACK_REMOTE = 0x1,};
enum _ABA88FFCF844ADB83559AF0FBF7F1E52 {DDI_INTR_CTLOPS_ALLOC_ISPEC = 0x0,DDI_INTR_CTLOPS_FREE_ISPEC = 0x1,DDI_INTR_CTLOPS_ADD = 0x2,DDI_INTR_CTLOPS_REMOVE = 0x3,DDI_INTR_CTLOPS_NINTRS = 0x4,DDI_INTR_CTLOPS_HILEVEL = 0x5,};
struct _AC1F0727205AA235F31FA7E4FBAB6931 {long long quot;long long rem;};
enum _AD2EB70E5A961F74EB9C4246C2983BC3 {CFGA_STAT_NONE = 0x0,CFGA_STAT_EMPTY = 0x1,CFGA_STAT_DISCONNECTED = 0x2,CFGA_STAT_CONNECTED = 0x3,CFGA_STAT_UNCONFIGURED = 0x4,CFGA_STAT_CONFIGURED = 0x5,};
enum _AF097615159EB3CBDA82C5A5C14EBA11 {RT_CONSISTENT = 0x0,RT_ADD = 0x1,RT_DELETE = 0x2,};
enum _AF741F3DDD464A30547A6EB63D463D95 {LMM_NONE = 0x0,LMM_REXMIT = 0x1,LMM_FULL = 0x2,LMM_PARTIAL = 0x3,};
struct _B2F3592E62A4F6542AD886252093AD89 {char *from;char *to;};
enum _B41FB3A55F358278F5C27327EE531EB5 {FC_SLEEP = 0x0,FC_NOSLEEP = 0x1,};
enum _B4C1E64CFFB78309CC76463EAA797381 {DDI_PROP_RESULT_ERROR = 0xFFFFFFFE,DDI_PROP_RESULT_EOF = 0xFFFFFFFF,DDI_PROP_RESULT_OK = 0x0,};
enum _B4D4B12673F28533BE1E89CD44C7C9E5 {PSC_PENDING_CHANGE = 0x0,PSC_HAS_CHANGED = 0x1,};
struct _B661844E4DD166A431053E2B2F63C927 {char *_sends;short _keyval;};
enum _B8EA7248DE2247D155C7346AC11040D4 {CFGA_CMD_NONE = 0x0,CFGA_CMD_LOAD = 0x1,CFGA_CMD_UNLOAD = 0x2,CFGA_CMD_CONNECT = 0x3,CFGA_CMD_DISCONNECT = 0x4,CFGA_CMD_CONFIGURE = 0x5,CFGA_CMD_UNCONFIGURE = 0x6,};
struct _B9298FF2B0C5BA7708F912183DC0A181 {int *dst_addr;int start;int slots;};
struct _BADA0C20D4FCFBDDC178EA94F25BDA19 {struct seg *segs[4];};
enum _BB6475131A51C96C40EE163F450A191D {_FC_EUC = 0x0,_FC_UTF8 = 0x1,_FC_OTHER = 0x2,};
enum _BD2A00A5EDFC2FF1400278A291F46E84 {pppDEVICE = 0x0,pppIP_PROTO = 0x21,pppOSI_PROTO = 0x23,pppXNS_PROTO = 0x25,pppDECNET_PROTO = 0x27,pppAPPLETALK_PROTO = 0x29,pppIPX_PROTO = 0x2B,pppVJ_COMP_TCP = 0x2D,pppVJ_UNCOMP_TCP = 0x2F,pppBRIDGING_PDU = 0x31,pppSTREAM_PROTO = 0x33,pppBANYAN_VINES = 0x35,ppp802_1D = 0x201,pppLUXCOM = 0x231,pppSIGMA = 0x232,pppIP_NCP = 0x8021,pppOSI_NCP = 0x8023,pppXNS_NCP = 0x8025,pppDECNET_NCP = 0x8027,pppAPPLETALK_NCP = 0x8029,pppIPX_NCP = 0x802B,pppBRIDGING_NCP = 0x8031,pppSTREAM_NCP = 0x8033,pppBANYAN_NCP = 0x8035,pppLCP = 0xC021,pppAuthPAP = 0xC023,pppLQM_REPORT = 0xC025,pppCHAP = 0xC223,};
enum _C0126AC73A46DE8E745F9FEA17492D57 {RW_DRIVER = 0x2,RW_DEFAULT = 0x4,};
struct _C8DBEC58A6C5CAB5E40652D978B29F79 {short foreground;short background;char init;};
enum _C9268D8AE8F7D6801B05A9E10ADFAF15 {LclUnKnownFormat = 0x0,LclCsFormatASCII = 0x1,LclCsFormat7bit = 0x2,LclCsFormatISO9496 = 0x3,LclCsFormatISO94Ext = 0x4,LclCsFormatMBString = 0x5,};
struct _CA21EB1FE968FC1A84C75EEC389382FF {int dbm_dirf;int dbm_pagf;int dbm_flags;int dbm_maxbno;int dbm_bitno;int dbm_hmask;int dbm_blkptr;int dbm_keyptr;int dbm_blkno;int dbm_pagbno;char dbm_pagbuf[1024];int dbm_dirbno;char dbm_dirbuf[4096];};
enum _CC06B5739EA2B9882BCE8C0A287C133B {ISDN_TYPE_UNKNOWN = 0xFFFFFFFF,ISDN_TYPE_SELF = 0x0,ISDN_TYPE_OTHER = 0x1,ISDN_TYPE_TE = 0x2,ISDN_TYPE_NT = 0x3,ISDN_TYPE_PRI = 0x4,};
struct _CCC1A82A34D7085BB27B55F53CBFD610 {int jitter_thresh;int speed_law;int speed_limit;};
enum _CDEA5F4E81121A9E1DEE9AC855E20971 {FC_STATE_ONLINE = 0x0,FC_STATE_OFFLINE = 0x1,FC_STATE_RESET = 0x2,};
enum _CE3E7AC5D93368FF00E554010E1E9915 {TNFCTL_TARG_DEFAULT = 0x0,TNFCTL_TARG_KILL = 0x1,TNFCTL_TARG_RESUME = 0x2,TNFCTL_TARG_SUSPEND = 0x3,};
enum _CF2A9B67847DD7930A13E7F75B3AE6C8 {LclUnKnownType = 0x0,LclMIMEType = 0x1,LclV3Type = 0x2,Lcl822Type = 0x3,};
struct _D2112DACD5F28F06A12FA1BD43CEEAAF {int t_flags;char t_ispeed;char t_ospeed;char t_erase;char t_kill;char t_intrc;char t_quitc;char t_startc;char t_stopc;char t_eofc;char t_brkc;char t_suspc;char t_dsuspc;char t_rprntc;char t_flushc;char t_werasc;char t_lnextc;int t_xflags;};
struct _D27487023F7BC296C96A54641356F89B {char *dst_addr;int block_num;};
struct _D379431B13F78A36F2202C5AA386190E {char *dptr;int dsize;};
enum _D4AB9A46DE65367CC0FF11AD6E77796A {TD_THR_ANY_STATE = 0x0,TD_THR_UNKNOWN = 0x1,TD_THR_STOPPED = 0x2,TD_THR_RUN = 0x3,TD_THR_ACTIVE = 0x4,TD_THR_ZOMBIE = 0x5,TD_THR_SLEEP = 0x6,TD_THR_STOPPED_ASLEEP = 0x7,};
struct _D53EBEF53D22F60B85DC57B7CC577C4D {char *da_devname;char *da_devtype;char *da_devmin;char *da_devmax;char *da_devauth;char *da_devexec;};
struct _D5A35B190B3B0D67D693D32BA15204C1 {unsigned int code_set;unsigned int lang_terr;};
enum _D5AA6F5ACB6BB33BF40F728DE6419DF2 {RD_NOTIFY_BPT = 0x0,RD_NOTIFY_AUTOBPT = 0x1,RD_NOTIFY_SYSCALL = 0x2,};
enum _D6CA55EB07B097D421AB6298BB521718 {TNFCTL_ERR_NONE = 0x0,TNFCTL_ERR_ACCES = 0x1,TNFCTL_ERR_NOTARGET = 0x2,TNFCTL_ERR_ALLOCFAIL = 0x3,TNFCTL_ERR_INTERNAL = 0x4,TNFCTL_ERR_SIZETOOSMALL = 0x5,TNFCTL_ERR_SIZETOOBIG = 0x6,TNFCTL_ERR_BADARG = 0x7,TNFCTL_ERR_NOTDYNAMIC = 0x8,TNFCTL_ERR_NOLIBTNFPROBE = 0x9,TNFCTL_ERR_BUFBROKEN = 0xA,TNFCTL_ERR_BUFEXISTS = 0xB,TNFCTL_ERR_NOBUF = 0xC,TNFCTL_ERR_BADDEALLOC = 0xD,TNFCTL_ERR_NOPROCESS = 0xE,TNFCTL_ERR_FILENOTFOUND = 0xF,TNFCTL_ERR_BUSY = 0x10,TNFCTL_ERR_INVALIDPROBE = 0x11,TNFCTL_ERR_USR1 = 0x12,TNFCTL_ERR_USR2 = 0x13,TNFCTL_ERR_USR3 = 0x14,TNFCTL_ERR_USR4 = 0x15,TNFCTL_ERR_USR5 = 0x16,};
enum _D7C0A176FE35DFEAAB524AEF710D9981 {PROP_LEN = 0x0,PROP_LEN_AND_VAL_BUF = 0x1,PROP_LEN_AND_VAL_ALLOC = 0x2,PROP_EXISTS = 0x3,};
enum _D95391997311E3A4E8F102D727D6CEF7 {FDB_PAGEIO = 0x0,FDB_VADDR = 0x1,};
enum _DC3296B23F99D14FFD55E56129FBC05F {USB_PIPE_STATE_ACTIVE = 0x1,USB_PIPE_STATE_IDLE = 0x2,USB_PIPE_STATE_ERROR = 0x3,USB_PIPE_STATE_SYNC_CLOSING = 0x4,USB_PIPE_STATE_ASYNC_CLOSING = 0x5,};
enum _E1B461D6ADC649FA7943809455C6C6EE {NOTIFY_BPT = 0x0,NOTIFY_AUTOBPT = 0x1,NOTIFY_SYSCALL = 0x2,};
enum _E36DDC315EED95A07EBF18BE166BF116 {SES_TYPE = 0x0,SAFT_TYPE = 0x1,SEN_TYPE = 0x2,};
enum _E5CD0A0A25838301AC0CDA8DDEB498DA {SLP_FALSE = 0x0,SLP_TRUE = 0x1,};
enum _E739717CDB19454AC06785377AF9888B {ISDN_MODE_UNKNOWN = 0x0,ISDN_MODE_HDLC = 0x1,ISDN_MODE_TRANSPARENT = 0x2,};
struct _E7FD7F5919C5B86C45B84B2C205CAA78 {int mid;int sid;int tracelevel;int flags;};
struct _E9AB0BCACA98F703B381F818839B97CB {int rpc_gss_error;int system_error;};
enum _EA75FB217E367D75530EC23DCD9FC6C8 {NSS_HOST = 0x0,NSS_SERV = 0x1,NETDIR_BY = 0x2,NETDIR_BY_NOSRV = 0x3,NETDIR_BY6 = 0x4,NETDIR_BY_NOSRV6 = 0x5,NSS_HOST6 = 0x6,};
enum _EAF20B011F47EDF33C1FCE09C227F824 {RD_FL_NONE = 0x0,RD_FL_ODBG = 0x1,RD_FL_DBG = 0x2,};
enum _EB79E54FE0EF018BB6845A2E0DAAE1E7 {AP_RSTATE_EMPTY = 0x0,AP_RSTATE_DISCONNECTED = 0x1,AP_RSTATE_CONNECTED = 0x2,};
enum _EDAFB8E8B9C907AF6E1D55EDA7356F26 {DDM_MINOR = 0x0,DDM_ALIAS = 0x1,DDM_DEFAULT = 0x2,DDM_INTERNAL_PATH = 0x3,};
enum _EDBA1914F16BC538415B0E0A3A3FD3BB {FIND = 0x0,ENTER = 0x1,};
enum _F5D0AC97B70F66A0B82E3660E1E74CD3 {B_FALSE = 0x0,B_TRUE = 0x1,};
enum _F9F9B8C8A8EFF8E21EF69F4C68E21A81 {FN_SPI_STRONG_SEPARATION = 0x1,FN_SPI_WEAK_SEPARATION = 0x2,};
struct _FB71A6CB4CF311B023B9642DD77B0239 {int dd_fd;int dd_loc;int dd_size;char *dd_buf;};
enum _FE80D5111114141386C0BD10BAE533E0 {DDI_DEVMAP_VALIDATE = 0x0,};
enum _FFCF33584F0C155BE85F0F30A00BD3E4 {FLK_NLM_UP = 0x0,FLK_NLM_SHUTTING_DOWN = 0x1,FLK_NLM_DOWN = 0x2,FLK_NLM_UNKNOWN = 0x3,};
enum MACRO_LctErrorNotEnoughResource {LctErrorNotEnoughResource = 3,LctErrorDBCannotFindIconvDef = 4,};
enum MACRO_LctErrorInvalidAttribute {LctErrorInvalidAttribute = 7,LctErrorIconvNonIdenticalConversion = 8,};
typedef struct cachefsio_getattrname_return cachefsio_getattrname_return_t;
struct cistpl_cftable_entry_stce_ev_t {char stev_strs[254];};
struct cistpl_cftable_entry_stce_pd_t {char stpd_strs[254];};
typedef struct cachefsio_setsecattr_return cachefsio_setsecattr_return_t;
typedef struct _D5A35B190B3B0D67D693D32BA15204C1 FN_attr_syntax_locale_info_t;
enum MACRO_MaskAllTextDescriptors {MaskAllTextDescriptors = 0xFFFFFFF,};
typedef struct cachefsio_lostfound_return cachefsio_lostfound_return_t;
typedef struct _04DE162F931BF1138370E48C46D0BB8C dl_reply_update_status_ind_t;
enum MACRO_LctErrorIconvHalfDone {LctErrorIconvHalfDone = 9,};
enum MACRO_MTIOCPERSISTENTSTATUS {MTIOCPERSISTENTSTATUS = 27909,};
typedef void *OCF_EventRegistrationData_t;
typedef struct cachefsio_getattrname_arg cachefsio_getattrname_arg_t;
typedef struct cachefsio_pushback_return cachefsio_pushback_return_t;
enum MACRO_LclSourceUnknownType {LclSourceUnknownType = 0,LclSourceTextType = 1,LclSourceBinaryType = 2,};
enum MACRO_MHIOCREREGISTERDEVID {MHIOCREREGISTERDEVID = 19725,};
enum MACRO_MTIOCGUARANTEEDORDER {MTIOCGUARANTEEDORDER = 27911,};
struct cachefsio_lostfound_return {char lf_name[256];};
typedef struct cachefsio_setattr_return cachefsio_setattr_return_t;
typedef struct cachefsio_setsecattr_arg cachefsio_setsecattr_arg_t;
typedef struct cachefsio_symlink_return cachefsio_symlink_return_t;
typedef struct em_modify_event_mask_req em_modify_event_mask_req_t;
typedef struct _ldterm_unicode_data_cell ldterm_unicode_data_cell_t;
typedef struct mib2_ipv6NetToMediaEntry mib2_ipv6NetToMediaEntry_t;
enum MACRO_CISTPL_LONGLINK_MFC {CISTPL_LONGLINK_MFC_TAS_AM = 0x0,CISTPL_LONGLINK_MFC_TAS_CM = 0x1,CISTPL_LONGLINK_CB_CFG = 0x1,CISTPL_LONGLINK_CB_MEM = 0x2,CISTPL_LONGLINK_CB_ROM = 0x4,CISTPL_SPCL_SEQ_END = 0x80,CISTPL_BAR_ASI_MASK = 0x7,CISTPL_BAR_ASI_BAR_1 = 0x1,CISTPL_BAR_ASI_BAR_2 = 0x2,CISTPL_BAR_ASI_BAR_3 = 0x3,CISTPL_BAR_ASI_BAR_4 = 0x4,CISTPL_BAR_ASI_BAR_5 = 0x5,CISTPL_BAR_ASI_BAR_6 = 0x6,CISTPL_BAR_ASI_BAR_7 = 0x7,CISTPL_BAR_ASI_EXP_ROM = 0x7,CISTPL_BAR_AS_MEM = 0x0,CISTPL_BAR_AS_IO = 0x8,CISTPL_BAR_PREFETCH_CACHE_MASK = 0x60,CISTPL_BAR_PREFETCH = 0x20,CISTPL_BAR_PREFETCH_CACHE = 0x40,CISTPL_BAR_BELOW_1MB = 0x80,CISTPL_DEVICEGEO_MAX_PARTITIONS = 0x2A,};
enum MACRO_COMMAND_DONE_EACCES {COMMAND_DONE_EACCES = 7,};
enum MACRO_MODSIZEOF_MINORNAME {MODSIZEOF_MINORNAME = 12,};
enum MACRO_MTIOCREADIGNOREEOFS {MTIOCREADIGNOREEOFS = 27919,};
enum MACRO_PAGELENGTH_DAD_MODE {PAGELENGTH_DAD_MODE_CACHE_SCSI3 = 0x12,PAGELENGTH_DAD_MODE_ERR_RECOV_CCS = 0x6,PAGELENGTH_DAD_MODE_CACHE = 0xA,PAGELENGTH_MODE_CONTROL = 0x6,};
struct _ldterm_unicode_data_cell {unsigned char u0 : 2;unsigned char u1 : 2;unsigned char u2 : 2;unsigned char u3 : 2;};
typedef struct cachefsio_create_return cachefsio_create_return_t;
typedef struct cachefsio_lostfound_arg cachefsio_lostfound_arg_t;
typedef struct cachefsio_rename_return cachefsio_rename_return_t;
union td_syncinfo___si_un_state {int sem_count;int nreaders;int mutex_locked;};
typedef struct usb_interface_pwr_descr usb_interface_pwr_descr_t;
typedef struct _E89C0C6DA392559E0E24C2B68700633F FN_attr_syntax_locales_t;
enum MACRO_AllTextDescriptors {AllTextDescriptors = 0x7F,};
enum MACRO_BPPIOC_TESTTIMEOUT {BPPIOC_TESTTIMEOUT = 536896012,};
enum MACRO_MTIOCREADIGNOREILI {MTIOCREADIGNOREILI = 27918,};
enum MACRO_TIFIOCGPROBESTRING {TIFIOCGPROBESTRING = 29699,};
enum MACRO_TIFIOCPIDFILTERGET {TIFIOCPIDFILTERGET = 29709,};
typedef struct Any *ami_session_key_params_t;
typedef struct cachefsio_pushback_arg cachefsio_pushback_arg_t;
typedef struct _04DE162F931BF1138370E48C46D0BB8C dl_data_ack_status_ind_t;
typedef struct em_get_first_tuple_ack em_get_first_tuple_ack_t;
typedef struct em_get_first_tuple_req em_get_first_tuple_req_t;
typedef struct isdn_activation_status isdn_activation_status_t;
typedef struct mib2_ipNetToMediaEntry mib2_ipNetToMediaEntry_t;
typedef struct _734E31BBDA3A31A5E7F21845616A11EB LayoutTextDescriptorRec;
enum MACRO_CDROMREADTOCENTRY {CDROMREADTOCENTRY = 1180,};
enum MACRO_MAXXDRHOSTNAMELEN {MAXXDRHOSTNAMELEN = 1025,};
enum MACRO_MODMAXLINKINFOLEN {MODMAXLINKINFOLEN = 32,};
enum MACRO_MTIOCFORCERESERVE {MTIOCFORCERESERVE = 27914,};
enum MACRO_MTIOCGETDRIVETYPE {MTIOCGETDRIVETYPE = 27907,};
enum MACRO_OPROMDEV2PROMNAME {OPROMDEV2PROMNAME = 20239,};
enum MACRO_OPROMPROM2DEVNAME {OPROMPROM2DEVNAME = 20240,};
enum MACRO_SVCGET_CONNMAXREC {SVCGET_CONNMAXREC = 7,};
enum MACRO_SetFunctionalAddr {SetFunctionalAddr = 0x3,ClearFunctionalAddr = 0x4,};
enum MACRO___CLOCK_REALTIME3 {__CLOCK_REALTIME3 = 3,};
typedef void *OCF_CardServiceParams_t;
typedef void *OCF_CardServiceReturn_t;
typedef struct cachefsio_setattr_arg cachefsio_setattr_arg_t;
typedef struct cachefsio_symlink_arg cachefsio_symlink_arg_t;
struct cistpl_get_tuple_name_t {char name[40];};
struct ddi_parent_private_data {int par_nreg;struct regspec *par_reg;int par_nintr;struct intrspec *par_intr;int par_nrng;struct rangespec *par_rng;};
typedef struct _56A66AEB305BDFFF6669B4BC9F04D8CC dl_get_statistics_ack_t;
typedef struct _54EC9098503BC20AC050B3CB62F30CBC dl_get_statistics_req_t;
typedef struct em_get_next_tuple_ack em_get_next_tuple_ack_t;
typedef struct em_get_next_tuple_req em_get_next_tuple_req_t;
typedef unsigned int fp_exception_field_type;
typedef struct isdn_loopback_request isdn_loopback_request_t;
typedef struct mhioc_preemptandabort mhioc_preemptandabort_t;
typedef struct mib2_ipv6IfStatsEntry mib2_ipv6IfStatsEntry_t;
typedef struct pcmcia_logical_socket pcmcia_logical_socket_t;
typedef struct pcmcia_logical_window pcmcia_logical_window_t;
enum MACRO_DDI_DMA_CALLBACK {DDI_DMA_CALLBACK_RUNOUT = 0,DDI_DMA_CALLBACK_DONE = 1,DDI_DMA_WRITE = 1,DDI_DMA_READ = 2,DDI_DMA_RDWR = 3,DDI_DMA_REDZONE = 4,DDI_DMA_PARTIAL = 8,DDI_DMA_CONSISTENT = 16,DDI_DMA_EXCLUSIVE = 32,DDI_DMA_STREAMING = 64,DDI_DMA_SBUS_64BIT = 8192,DDI_DMA_MAPPED = 0,DDI_DMA_MAPOK = 0,DDI_DMA_PARTIAL_MAP = 1,DDI_DMA_DONE = 2,DDI_DMA_NORESOURCES = -1,DDI_DMA_NOMAPPING = -2,DDI_DMA_TOOBIG = -3,DDI_DMA_TOOSMALL = -4,DDI_DMA_LOCKED = -5,DDI_DMA_BADLIMITS = -6,DDI_DMA_STALE = -7,DDI_DMA_BADATTR = -8,DDI_DMA_INUSE = -9,DDI_DMA_SYNC_FORDEV = 0,DDI_DMA_SYNC_FORCPU = 1,DDI_DMA_SYNC_FORKERNEL = 2,};
enum MACRO_DTYPE_NOTPRESENT {DTYPE_NOTPRESENT = 127,};
enum MACRO_GET_CONTINUATION {GET_CONTINUATION = -4,};
enum MACRO_KIOCABORTDISABLE {KIOCABORTDISABLE = 0,KIOCABORTENABLE = 1,KIOCABORTALTERNATE = 2,};
enum MACRO_LOCALDOMAINPARTS {LOCALDOMAINPARTS = 2,};
enum MACRO_LOG_SENSE_LENGTH {LOG_SENSE_LENGTH = 0xFF,MIN_LOG_SENSE_LENGTH = 0x2B,};
enum MACRO_MAXBSIZE_UNKNOWN {MAXBSIZE_UNKNOWN = -2,};
enum MACRO_MOD_NOAUTOUNLOAD {MOD_NOAUTOUNLOAD = 0x1,};
enum MACRO_NO_JUSTIFICATION {NO_JUSTIFICATION = 0,};
enum MACRO_OPROMGETBOOTARGS {OPROMGETBOOTARGS = 20236,};
enum MACRO_SCMD_SYNCHRONIZE {SCMD_SYNCHRONIZE_CACHE = 0x35,};
enum MACRO_TIFIOCDEALLOCBUF {TIFIOCDEALLOCBUF = 29703,};
enum MACRO_TIFIOCGPROBEVALS {TIFIOCGPROBEVALS = 29698,};
enum MACRO_TIFIOCSPIDFILTER {TIFIOCSPIDFILTER = 29705,};
enum MACRO_TIFIOCSPROBEVALS {TIFIOCSPROBEVALS = 29700,};
enum MACRO_UDP_ANONPRIVBIND {UDP_ANONPRIVBIND = 0x100,UDP_EXCLBIND = 0x101,UDP_TTL = 0x1E,};
typedef struct OCF_OCF_CardServicesList_t *OCF_CardServicesList_t;
typedef struct _45AA4025EE1954AFBFB3DA359E0D02DB _LC_methods_messages_t;
typedef struct _458B8F1C203FF7E73654EA82F46BE387 _LC_methods_monetary_t;
typedef struct cachefsio_create_arg cachefsio_create_arg_t;
typedef struct cachefsio_getattrfid cachefsio_getattrfid_t;
typedef struct cachefsio_rename_arg cachefsio_rename_arg_t;
typedef struct _32C08F122C9B6B5AD3095757A88A96E6 dl_set_phys_addr_req_t;
typedef struct gss_channel_bindings_struct *gss_channel_bindings_t;
typedef struct mhioc_resv_desc_list mhioc_resv_desc_list_t;
typedef struct mib2_ipv6IfIcmpEntry mib2_ipv6IfIcmpEntry_t;
typedef struct usb_config_pwr_descr usb_config_pwr_descr_t;
enum FN_search_filter_type {FN_SEARCH_FILTER_ATTR = 0x1,FN_SEARCH_FILTER_ATTRVALUE = 0x2,FN_SEARCH_FILTER_STRING = 0x3,FN_SEARCH_FILTER_IDENTIFIER = 0x4,};
enum MACRO_BW2HSQUAREBYTES {BW2HSQUAREBYTES = 259200,};
enum MACRO_BW2HSQUARESIZEX {BW2HSQUARESIZEX = 1440,};
enum MACRO_BW2HSQUARESIZEY {BW2HSQUARESIZEY = 1440,};
enum MACRO_CDROMPLAYTRKIND {CDROMPLAYTRKIND = 1178,};
enum MACRO_CDROMREADOFFSET {CDROMREADOFFSET = 1188,};
enum MACRO_CDROMREADTOCHDR {CDROMREADTOCHDR = 1179,};
enum MACRO_CISTPL_LONGLINK {CISTPL_LONGLINK_AC_AM = 0x1,CISTPL_LONGLINK_AC_CM = 0x2,};
enum MACRO_DKIOCGMEDIAINFO {DKIOCGMEDIAINFO = 1066,};
enum MACRO_FBIOAVAILPLNGRP {FBIOAVAILPLNGRP = 17937,};
enum MACRO_KEY_RECOVERABLE {KEY_RECOVERABLE_ERROR = 0x1,KEY_NOT_READY = 0x2,KEY_MEDIUM_ERROR = 0x3,KEY_HARDWARE_ERROR = 0x4,KEY_ILLEGAL_REQUEST = 0x5,KEY_UNIT_ATTENTION = 0x6,KEY_WRITE_PROTECT = 0x7,KEY_DATA_PROTECT = 0x7,KEY_BLANK_CHECK = 0x8,KEY_VENDOR_UNIQUE = 0x9,KEY_COPY_ABORTED = 0xA,KEY_ABORTED_COMMAND = 0xB,KEY_EQUAL = 0xC,KEY_VOLUME_OVERFLOW = 0xD,KEY_MISCOMPARE = 0xE,KEY_RESERVED = 0xF,};
enum MACRO_MHIOCENFAILFAST {MHIOCENFAILFAST = 19713,};
enum MACRO_MODEVENTS_FLUSH {MODEVENTS_FLUSH = 0,MODEVENTS_FLUSH_DUMP = 1,MODEVENTS_SET_DOOR_UPCALL_FILENAME = 2,};
enum MACRO_MODGETMINORNAME {MODGETMINORNAME = 13,};
enum MACRO_MTIOCPERSISTENT {MTIOCPERSISTENT = 27908,};
enum MACRO_MaskOrientation {MaskOrientation = 0xF,MaskContext = 0xF0,MaskTypeOfText = 0xF00,MaskImplicitAlg = 0xF000,MaskSwapping = 0xF0000,MaskNumerals = 0xF00000,MaskTextShaping = 0xF000000,};
enum MACRO_NFS_ACL_PROGRAM {NFS_ACL_PROGRAM = 100227,NFS_ACL_VERSMIN = 2,NFS_ACL_VERSMAX = 3,NFS_ACL_V2 = 2,};
enum MACRO_OPROMGETPROPLEN {OPROMGETPROPLEN = 20241,};
enum MACRO_OPROMGETVERSION {OPROMGETVERSION = 20237,};
enum MACRO_RPCSMALLMSGSIZE {RPCSMALLMSGSIZE = 400,};
enum MACRO_STRUIO_POSTPONE {STRUIO_POSTPONE = 0x8,STRUIO_MAPIN = 0x10,};
enum MACRO_TIFIOCGMAXPROBE {TIFIOCGMAXPROBE = 29697,};
enum MACRO_TIFIOCGPIDSTATE {TIFIOCGPIDSTATE = 29706,};
enum MACRO__POSIX_CLOCKRES {_POSIX_CLOCKRES_MIN = 20000000,_POSIX_DELAYTIMER_MAX = 32,_POSIX_LINK_MAX = 8,_POSIX_MAX_CANON = 255,_POSIX_MAX_INPUT = 255,_POSIX_MQ_OPEN_MAX = 8,_POSIX_MQ_PRIO_MAX = 32,_POSIX_NAME_MAX = 14,_POSIX_NGROUPS_MAX = 0,_POSIX_OPEN_MAX = 16,_POSIX_PATH_MAX = 255,_POSIX_PIPE_BUF = 512,_POSIX_RTSIG_MAX = 8,_POSIX_SEM_NSEMS_MAX = 256,_POSIX_SEM_VALUE_MAX = 32767,_POSIX_SIGQUEUE_MAX = 32,_POSIX_SSIZE_MAX = 32767,_POSIX_STREAM_MAX = 8,_POSIX_TIMER_MAX = 32,_POSIX_TZNAME_MAX = 3,_POSIX_LOGIN_NAME_MAX = 9,_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4,_POSIX_THREAD_KEYS_MAX = 128,_POSIX_THREAD_THREADS_MAX = 64,_POSIX_TTY_NAME_MAX = 9,};
enum MACRO__XOPEN_REALTIME {_XOPEN_REALTIME = 1,_XOPEN_ENH_I18N = 1,_XOPEN_SHM = 1,};
enum MACRO_nfs3nametoolong {nfs3nametoolong = -1,};
typedef struct _859BFE8FBA42C54E9900208E6ECF19F7 _LC_methods_charmap_t;
typedef struct _D27F01C753CDB3D015D2AEBC850E5649 _LC_methods_collate_t;
typedef struct _F60D842CE7A78CACE989B630880B9FF2 _LC_methods_numeric_t;
enum __ns_update_operation {ns_uop_delete = 0x0,ns_uop_add = 0x1,ns_uop_max = 0x2,};
typedef struct cachefs_log_control cachefs_log_control_t;
typedef struct cachefs_rl_listhead cachefs_rl_listhead_t;
typedef struct _04DE162F931BF1138370E48C46D0BB8C dl_reply_status_ind_t;
typedef struct _1FF34CFEF9C2EB17EF4167068BB24E21 dl_reply_update_req_t;
typedef struct em_adapter_info_ack em_adapter_info_ack_t;
typedef struct em_adapter_info_req em_adapter_info_req_t;
typedef struct em_ident_socket_req em_ident_socket_req_t;
enum isdn_activation_state {ISDN_OFF = 0x0,ISDN_UNPLUGGED = 0x1,ISDN_DEACTIVATE_REQ = 0x2,ISDN_DEACTIVATED = 0x3,ISDN_ACTIVATE_REQ = 0x4,ISDN_ACTIVATED = 0x5,};
typedef struct isdn_interface_info isdn_interface_info_t;
typedef struct _ldterm_cs_data_user ldterm_cs_data_user_t;
typedef struct mib2_ipv6RouteEntry mib2_ipv6RouteEntry_t;
typedef struct nd_neighbor_solicit nd_neighbor_solicit_t;
typedef struct _885C04ED232DA6939269E5648CBB0F98 pppAuthControlEntry_t;
typedef struct _3A667C09CA9B6E1FC0A4AC3D89CABEC7 pppLinkControlEntry_t;
typedef struct _D3341046612766E5971F0E9D3826E5FA rpc_gss_options_req_t;
typedef struct _D38312C18728A251C58C258AA639B1E2 rpc_gss_options_ret_t;
typedef rpcbs_rmtcalllist *rpcbs_rmtcalllist_ptr;
typedef struct tnfctl_ind_obj_info tnfctl_ind_obj_info_t;
typedef struct usb_interface_descr usb_interface_descr_t;
typedef struct _9FB80FD2F500D2E1F9F0E3DE3EE0B629 FN_syntax_standard_t;
typedef struct _734E31BBDA3A31A5E7F21845616A11EB *LayoutTextDescriptor;
typedef struct _LclCharsetLinkedList LclCharsetLinkedList;
typedef struct _D30353D08B71B27BB4CD9334EB50A9EF LclCharsetSegmentSet;
enum MACRO_AIO_INPROGRESS {AIO_INPROGRESS = -2,};
enum MACRO_BMACRXRSTDELAY {BMACRXRSTDELAY = 40,};
enum MACRO_BMACTXRSTDELAY {BMACTXRSTDELAY = 125,};
enum MACRO_BORDER_GRAVITY {HORIZ_BORDER_GRAVITY = 0x20,VERT_BORDER_GRAVITY = 0x40,};
enum MACRO_BW2SQUARESIZEX {BW2SQUARESIZEX = 1024,};
enum MACRO_BW2SQUARESIZEY {BW2SQUARESIZEY = 1024,BW2SQUAREBYTES = 131072,};
enum MACRO_CACHEFS_PACKED {CACHEFS_PACKED_FILE = 1,CACHEFS_PACKED_DATA = 2,CACHEFS_PACKED_NOCACHE = 4,CACHEFS_LOG_MAGIC = 32321,CACHEFS_LOG_FILE_REV = 2,CACHEFS_LOG_MOUNT = 1,CACHEFS_LOG_UMOUNT = 2,CACHEFS_LOG_GETPAGE = 3,CACHEFS_LOG_READDIR = 4,CACHEFS_LOG_READLINK = 5,CACHEFS_LOG_REMOVE = 6,CACHEFS_LOG_RMDIR = 7,CACHEFS_LOG_TRUNCATE = 8,CACHEFS_LOG_PUTPAGE = 9,CACHEFS_LOG_CREATE = 10,CACHEFS_LOG_MKDIR = 11,CACHEFS_LOG_RENAME = 12,CACHEFS_LOG_SYMLINK = 13,CACHEFS_LOG_POPULATE = 14,CACHEFS_LOG_CSYMLINK = 15,CACHEFS_LOG_FILLDIR = 16,CACHEFS_LOG_MDCREATE = 17,CACHEFS_LOG_GPFRONT = 18,CACHEFS_LOG_RFDIR = 19,CACHEFS_LOG_UALLOC = 20,CACHEFS_LOG_CALLOC = 21,CACHEFS_LOG_NOCACHE = 22,CACHEFS_LOG_NUMRECS = 22,};
enum MACRO_CDROMGDRVSPEED {CDROMGDRVSPEED = 1194,};
enum MACRO_CDROMREADMODE1 {CDROMREADMODE1 = 1187,};
enum MACRO_CDROMREADMODE2 {CDROMREADMODE2 = 1186,};
enum MACRO_CDROMSDRVSPEED {CDROMSDRVSPEED = 1195,};
enum MACRO_CFLAG_RESERVED {CFLAG_RESERVED = 0xFF00,CFLAG_EXTCMDS_ALLOC = 0x10000,};
enum MACRO_CISTPL_CFTABLE {CISTPL_CFTABLE_TPCE_CFGENTRYM = 0x3F,CISTPL_CFTABLE_TPCE_DEFAULTM = 0x40,CISTPL_CFTABLE_TPCE_IFM = 0x80,CISTPL_CFTABLE_TPCE_FS_PWRM = 0x3,CISTPL_CFTABLE_TPCE_FS_PWR_VPP2M = 0x3,CISTPL_CFTABLE_TPCE_FS_PWR_VPP1M = 0x2,CISTPL_CFTABLE_TPCE_FS_PWR_VCCM = 0x1,CISTPL_CFTABLE_PD_NC_SLEEPM = 0x7D,CISTPL_CFTABLE_PD_ZEROM = 0x7E,CISTPL_CFTABLE_PD_NCM = 0x7F,CISTPL_CFTABLE_TPCE_FS_TDM = 0x4,CISTPL_CFTABLE_TPCE_FS_TD_WAITM = 0x3,CISTPL_CFTABLE_TPCE_FS_TD_RDYM = 0x1C,CISTPL_CFTABLE_TPCE_FS_TD_RSVDM = 0xE0,CISTPL_CFTABLE_TPCE_FS_IOM = 0x8,CISTPL_CFTABLE_TPCE_FS_IO_ALM = 0x1F,CISTPL_CFTABLE_TPCE_FS_IO_RANGEM = 0x80,CISTPL_CFTABLE_ENTRY_MAX_IO_RANGES = 0x10,CISTPL_CFTABLE_TPCE_FS_IRQM = 0x10,CISTPL_CFTABLE_TPCE_FS_IRQ_MASKM = 0x10,CISTPL_CFTABLE_TPCE_FS_MEMM = 0x60,CISTPL_CFTABLE_TPCE_FS_MEM3M = 0x60,CISTPL_CFTABLE_TPCE_FS_MEM2M = 0x40,CISTPL_CFTABLE_TPCE_FS_MEM1M = 0x20,CISTPL_CFTABLE_ENTRY_MAX_MEM_WINDOWS = 0x8,CISTPL_CFTABLE_TPCE_FS_MEM_PGSIZE = 0x100,CISTPL_CFTABLE_TPCE_FS_MEM_HOSTM = 0x80,CISTPL_CFTABLE_TPCE_FS_MISCM = 0x80,CISTPL_CFTABLE_TPCE_DEFAULT = 0x100,CISTPL_CFTABLE_TPCE_IF = 0x200,CISTPL_CFTABLE_TPCE_IF_MEMORY = 0x0,CISTPL_CFTABLE_TPCE_IF_IO_MEM = 0x1,CISTPL_CFTABLE_TPCE_IF_RSVD_2 = 0x2,CISTPL_CFTABLE_TPCE_IF_RSVD_3 = 0x3,CISTPL_CFTABLE_TPCE_IF_CUSTOM_0 = 0x4,CISTPL_CFTABLE_TPCE_IF_CUSTOM_1 = 0x5,CISTPL_CFTABLE_TPCE_IF_CUSTOM_2 = 0x6,CISTPL_CFTABLE_TPCE_IF_CUSTOM_3 = 0x7,CISTPL_CFTABLE_TPCE_IF_RSVD_8 = 0x8,CISTPL_CFTABLE_TPCE_IF_RSVD_9 = 0x9,CISTPL_CFTABLE_TPCE_IF_RSVD_a = 0xA,CISTPL_CFTABLE_TPCE_IF_RSVD_b = 0xB,CISTPL_CFTABLE_TPCE_IF_RSVD_c = 0xC,CISTPL_CFTABLE_TPCE_IF_RSVD_d = 0xD,CISTPL_CFTABLE_TPCE_IF_RSVD_e = 0xE,CISTPL_CFTABLE_TPCE_IF_RSVD_f = 0xF,CISTPL_CFTABLE_TPCE_IF_MASK = 0xF,CISTPL_CFTABLE_TPCE_IF_BVD = 0x10,CISTPL_CFTABLE_TPCE_IF_WP = 0x20,CISTPL_CFTABLE_TPCE_IF_RDY = 0x40,CISTPL_CFTABLE_TPCE_IF_MWAIT = 0x80,CISTPL_CFTABLE_TPCE_FS_PWR = 0x1000,CISTPL_CFTABLE_TPCE_FS_TD = 0x10000,CISTPL_CFTABLE_TPCE_FS_IO = 0x100000,CISTPL_CFTABLE_TPCE_FS_IRQ = 0x200000,CISTPL_CFTABLE_TPCE_FS_MEM = 0x1000000,CISTPL_CFTABLE_TPCE_FS_MISC = 0x2000000,CISTPL_CFTABLE_TPCE_FS_STCE_EV = 0x4000000,CISTPL_CFTABLE_TPCE_FS_STCE_PD = 0x8000000,CISTPL_CFTABLE_PD_NOMV = 0x1,CISTPL_CFTABLE_PD_MINV = 0x2,CISTPL_CFTABLE_PD_MAXV = 0x4,CISTPL_CFTABLE_PD_STATICI = 0x8,CISTPL_CFTABLE_PD_AVGI = 0x10,CISTPL_CFTABLE_PD_PEAKI = 0x20,CISTPL_CFTABLE_PD_PDOWNI = 0x40,CISTPL_CFTABLE_PD_RFU = 0x80,CISTPL_CFTABLE_PD_EXISTS = 0x100,CISTPL_CFTABLE_PD_MUL10 = 0x200,CISTPL_CFTABLE_PD_NC_SLEEP = 0x1000,CISTPL_CFTABLE_PD_ZERO = 0x2000,CISTPL_CFTABLE_PD_NC = 0x4000,CISTPL_CFTABLE_TPCE_FS_PWR_VCC = 0x1,CISTPL_CFTABLE_TPCE_FS_PWR_VPP1 = 0x2,CISTPL_CFTABLE_TPCE_FS_PWR_VPP2 = 0x4,CISTPL_CFTABLE_TPCE_FS_TD_WAIT = 0x1,CISTPL_CFTABLE_TPCE_FS_TD_RDY = 0x2,CISTPL_CFTABLE_TPCE_FS_TD_RSVD = 0x4,CISTPL_CFTABLE_TPCE_FS_IO_BUS = 0x60,CISTPL_CFTABLE_TPCE_FS_IO_BUS8 = 0x20,CISTPL_CFTABLE_TPCE_FS_IO_BUS16 = 0x40,CISTPL_CFTABLE_TPCE_FS_IO_RANGE = 0x80,CISTPL_CFTABLE_TPCE_FS_MEM3 = 0x1,CISTPL_CFTABLE_TPCE_FS_MEM2 = 0x2,CISTPL_CFTABLE_TPCE_FS_MEM1 = 0x4,CISTPL_CFTABLE_TPCE_FS_MEM_HOST = 0x8,CISTPL_CFTABLE_TPCE_FS_MISC_MAX = 0x2,CISTPL_CFTABLE_TPCE_MI_MTC_MASK = 0x7,CISTPL_CFTABLE_TPCE_MI_AUDIO = 0x8,CISTPL_CFTABLE_TPCE_MI_READONLY = 0x10,CISTPL_CFTABLE_TPCE_MI_PWRDOWN = 0x20,CISTPL_CFTABLE_TPCE_MI_DRQ_MASK = 0xC00,CISTPL_CFTABLE_TPCE_MI_DRQ_SPK = 0x400,CISTPL_CFTABLE_TPCE_MI_DRQ_IOIS = 0x800,CISTPL_CFTABLE_TPCE_MI_DRQ_INP = 0xC00,CISTPL_CFTABLE_TPCE_MI_DMA_8 = 0x0,CISTPL_CFTABLE_TPCE_MI_DMA_16 = 0x1000,};
enum MACRO_ClearGroupAddr {ClearGroupAddr = 0x6,};
enum MACRO_DDI_PERSISTENT {DDI_PERSISTENT = 0x1,DDI_AUTO_ASSIGNED_NODEID = 0x2,};
enum MACRO_DEFAULT_HOSTID {DEFAULT_HOSTID = 7,};
enum MACRO_DEFAULT_OFFSET {DEFAULT_OFFSET = 15,};
enum MACRO_DEFAULT_RIGHTS {DEFAULT_RIGHTS = 983297,};
enum MACRO_DKIOCREMOVABLE {DKIOCREMOVABLE = 1040,};
enum MACRO_FBIO_ASSIGNWID {FBIO_ASSIGNWID = 17963,FBIO_STEREO = 17964,};
enum MACRO_FDGETDRIVECHAR {FDGETDRIVECHAR = 1079,};
enum MACRO_FDISK_LINUXNAT {FDISK_LINUXNAT = 131,FDISK_NTFSVOL1 = 134,FDISK_NTFSVOL2 = 135,FDISK_BSD = 165,FDISK_NEXTSTEP = 167,FDISK_BSDIFS = 183,FDISK_BSDISWAP = 184,};
enum MACRO_FDSETDRIVECHAR {FDSETDRIVECHAR = 1080,};
enum MACRO_HID_GET_PARSER {HID_GET_PARSER_HANDLE = 0x100,HID_POWER_OFF = 0xDC,HID_FULL_POWER = 0xDD,HID_DISCONNECT_EVENT = 0xDE,HID_CONNECT_EVENT = 0xDF,};
enum MACRO_HMEMAXMIFDELAY {HMEMAXMIFDELAY = 100,};
enum MACRO_HMEMAXRSTDELAY {HMEMAXRSTDELAY = 200,};
enum MACRO_IA_INTERACTIVE {IA_INTERACTIVE_OFF = 0x0,IA_SET_INTERACTIVE = 0x1,IA_NICED = 0x2,IA_BOOST = 0xA,IA_GETDPSIZE = 0x1,IA_GETDPTBL = 0x2,IA_SETDPTBL = 0x3,};
enum MACRO_IN_LOOPBACKNET {IN_LOOPBACKNET = 127,};
enum MACRO_KIOCGTRANSABLE {KIOCGTRANSABLE = 27399,};
enum MACRO_MAXHOSTNAMELEN {MAXHOSTNAMELEN = 256,};
enum MACRO_MAXMODCONFNAME {MAXMODCONFNAME = 256,};
enum MACRO_MAX_MNTOPT_STR {MAX_MNTOPT_STR = 1024,};
enum MACRO_MODREADSYSBIND {MODREADSYSBIND = 7,MODGETMAJBIND = 8,};
enum MACRO_NGRPS_LOOPBACK {NGRPS_LOOPBACK = 64,};
enum MACRO_OPROMGETFBNAME {OPROMGETFBNAME = 20235,};
enum MACRO_OPROMSETNODEID {OPROMSETNODEID = 20243,};
enum MACRO_PAGELENGTH_DAD {PAGELENGTH_DAD_MODE_ERR_RECOV = 0xA,};
enum MACRO_PCLFNCHUNKSIZE {PCLFNCHUNKSIZE = 13,};
enum MACRO_QECMAXRSTDELAY {QECMAXRSTDELAY = 100,};
enum MACRO_ROMVEC_VERSION {SUNMON_ROMVEC_VERSION = -1,OBP_V0_ROMVEC_VERSION = 0,OBP_V2_ROMVEC_VERSION = 2,OBP_V3_ROMVEC_VERSION = 3,OBP_PSEUDO_ROMVEC_VERSION = 5555,OBP_PLUGIN_VERSION = 2,};
enum MACRO_RPCBPROC_BCAST {RPCBPROC_BCAST = 5,RPCBPROC_GETVERSADDR = 9,RPCBPROC_INDIRECT = 10,RPCBPROC_GETADDRLIST = 11,RPCBPROC_GETSTAT = 12,};
enum MACRO_RSTATVERS_TIME {RSTATVERS_TIME = 3,};
enum MACRO_SESIOC_GETNOBJ {SESIOC_GETNOBJ = 25866,SESIOC_GETOBJMAP = 25867,SESIOC_INIT = 25868,SESIOC_GETENCSTAT = 25869,SESIOC_SETENCSTAT = 25870,SESIOC_GETOBJSTAT = 25871,SESIOC_SETOBJSTAT = 25872,};
enum MACRO_SPARC_REGISTER {STT_SPARC_REGISTER = 13,DT_SPARC_REGISTER = 1879048193,};
enum MACRO_SS_ISCONNECTED {SS_ISCONNECTED = 0x1,SS_ISCONNECTING = 0x2,SS_ISDISCONNECTING = 0x4,SS_CANTSENDMORE = 0x8,SS_CANTRCVMORE = 0x10,SS_ISBOUND = 0x20,SS_NDELAY = 0x40,SS_NONBLOCK = 0x80,SS_ASYNC = 0x100,SS_ACCEPTCONN = 0x200,SS_HASCONNIND = 0x400,SS_SAVEDEOR = 0x800,SS_RCVATMARK = 0x1000,SS_OOBPEND = 0x2000,SS_HAVEOOBDATA = 0x4000,SS_HADOOBDATA = 0x8000,SS_FADDR_NOXLATE = 0x20000,SS_WUNBIND = 0x40000,SS_CANCHANGE = 0x100,SS_CANTREBIND = 0x21F,};
enum MACRO_STC_MAXPROPLEN {STC_MAXPROPLEN = 20,};
enum MACRO_TCP_LINGERTIME {TCP_LINGERTIME = 120,TCP_MAXRXTSHIFT = 12,};
enum MACRO_TIFIOCALLOCBUF {TIFIOCALLOCBUF = 29702,};
enum MACRO_TIFIOCSTRACING {TIFIOCSTRACING = 29704,};
enum MACRO_TIOCPKT_WINDOW {TIOCPKT_WINDOW = 0x80,};
enum MACRO_TMPMAXFRACKMEM {TMPMAXFRACKMEM = 25,};
enum MACRO_UFSD_VARMSGMAX {UFSD_VARMSGMAX = 1024,UFSD_SPAREMSGBYTES = 4,UFSD_V1 = 1,UFSD_ORIGVERS = 1,UFSD_THISVERS = 1,UFSD_PROG = 100233,UFSD_VERS = 1,UFSD_NULL = 0,UFSD_REPAIRFS = 1,UFSD_REPAIRFSLIST = 2,UFSD_SEND = 3,UFSD_RECV = 4,UFSD_EXIT = 5,};
enum MACRO_USB_DESCR_TYPE {USB_DESCR_TYPE_SETUP_HUB = 0x2900,};
enum MACRO_VKEY_LASTSHIFT {VKEY_LASTSHIFT = 32543,VKEY_FIRSTFUNC = 32544,};
enum MACRO_VOLIOCDSYMNAME {VOLIOCDSYMNAME = 30228,};
enum MACRO__FIOLOGDISABLE {_FIOLOGDISABLE = 536897111,};
enum MACRO__FIOOBSOLETE67 {_FIOOBSOLETE67 = 536897091,};
struct _FN_ext_searchlist_t;
typedef struct _D743D7FB93846D2A48423E379C4894F1 _LC_methods_locale_t;
struct _kthread____tu____ts {char _t_astflag;char _t_sig_check;char _t_post_sys;char _t_trapret;};
enum bpp_unit__trans_type {read_trans = 0x0,write_trans = 0x1,};
typedef struct cachefs_debug_info cachefs_debug_info_t;
typedef struct cachefs_inum_trans cachefs_inum_trans_t;
typedef struct cachefs_log_cookie cachefs_log_cookie_t;
typedef struct cachefsio_getstats cachefsio_getstats_t;
typedef union _5FF073EC236C3BFF212C817E6EDD9CDF ddi_idevice_cookie_t;
typedef struct _20B967FD53182EA0ACEED1B6ABCFD823 dl_subs_unbind_req_t;
typedef struct em_socket_info_ack em_socket_info_ack_t;
typedef struct em_socket_info_req em_socket_info_req_t;
struct fltaccent_sequence_t {unsigned short fa_entry;unsigned char ascii;unsigned char iso;};
typedef struct mib2_ipv6AddrEntry mib2_ipv6AddrEntry_t;
typedef struct mib2_tcp6ConnEntry mib2_tcp6ConnEntry_t;
typedef struct nd_neighbor_advert nd_neighbor_advert_t;
typedef struct nd_opt_prefix_info nd_opt_prefix_info_t;
typedef struct nss_backend_finder nss_backend_finder_t;
typedef struct _7A20DF675792E830F977E1284BC7C2E2 pppLinkErrorsEntry_t;
typedef struct _D76263573A98FEFDCCEEF233874FDEC5 pppLinkStatusEntry_t;
typedef struct _pthread_rwlockattr pthread_rwlockattr_t;
typedef struct tnfctl_probe_state tnfctl_probe_state_t;
typedef struct tnfctl_trace_attrs tnfctl_trace_attrs_t;
struct ufsd_repairfs_list_t {int ual_listlen;ufsd_repairfs_args_t *ual_list;};
typedef struct usb_endpoint_descr usb_endpoint_descr_t;
typedef struct vt_clock_frequency vt_clock_frequency_t;
typedef struct _FN_composite_name FN_composite_name_t;
typedef struct _FN_ext_searchlist_t FN_ext_searchlist_t;
typedef struct _FN_search_control FN_search_control_t;
enum MACRO_ARGPUSHSIZE32 {ARGPUSHSIZE32 = 24,ARGPUSH32 = 68,};
enum MACRO_AUTH_LOOPBACK {AUTH_LOOPBACK = 21982,};
enum MACRO_BOOTPARAMPROC {BOOTPARAMPROC_WHOAMI = 1,BOOTPARAMPROC_GETFILE = 2,};
enum MACRO_BOOTPARAMPROG {BOOTPARAMPROG = 100026,};
enum MACRO_BOOTPARAMVERS {BOOTPARAMVERS = 1,};
enum MACRO_BSM_TEXTBUFSZ {BSM_TEXTBUFSZ = 256,};
enum MACRO_CACHEFS_DEBUG {CACHEFS_DEBUG_DEPTH = 16,};
enum MACRO_CARTRIDGETREC {CARTRIDGETREC = 63,};
enum MACRO_CDROMGBLKMODE {CDROMGBLKMODE = 1189,};
enum MACRO_CDROMSBLKMODE {CDROMSBLKMODE = 1190,};
enum MACRO_CLOCK_HIGHRES {CLOCK_HIGHRES = 4,CLOCK_REALTIME = 0,};
enum MACRO_CL_INITIALIZE {CL_INITIALIZE = 0,CL_CONFIG = 1,CL_GET_BOOTFLAG = 0,};
enum MACRO_DEFAULT_INTLV {DEFAULT_INTLV = 4,};
enum MACRO_DEFAULT_TRACE {DEFAULT_TRACE = 10,DEFAULT_DEBUGLEVEL = 7,};
enum MACRO_DINFOPRIVDATA {DINFOPRIVDATA = 0xDF10,};
enum MACRO_DKIOCGMPFLAGS {DKIOCGMPFLAGS = 25694,};
enum MACRO_DKIOCGMPSTATE {DKIOCGMPSTATE = 25691,};
enum MACRO_DKIOCPARTINFO {DKIOCPARTINFO = 1046,};
enum MACRO_DKIOCSMPFLAGS {DKIOCSMPFLAGS = 25695,};
enum MACRO_DKIOCSMPSTATE {DKIOCSMPSTATE = 25692,};
enum MACRO_DMAGA_BYTEADR {DMAGA_BYTEADR = 0x1800,DMAGA_ENATC = 0x2000,DMAGA_TC = 0x4000,DMAGA_ILACC = 0x8000,DMAGA_BURSTMASK = 0xC0000,DMAGA_BURST16 = 0x0,DMAGA_NOBURST = 0x80000,DMAGA_BURST32 = 0x40000,DMAGA_ALE = 0x100000,DMAGA_LERR = 0x200000,DMAGA_TURBO = 0x400000,DMAGA_NOTCINT = 0x800000,DMAGA_TWO_CYCLE = 0x200000,DMAGA_ENANXT = 0x1000000,DMAGA_DMAON = 0x2000000,DMAGA_ALOAD = 0x4000000,DMAGA_NALOAD = 0x8000000,};
enum MACRO_FBIOVRTOFFSET {FBIOVRTOFFSET = 17958,};
enum MACRO_FDISK_NOVELL3 {FDISK_NOVELL3 = 101,FDISK_QNX4 = 119,FDISK_QNX42 = 120,FDISK_QNX43 = 121,};
enum MACRO_FIFOPOLLRBAND {FIFOPOLLRBAND = 0x2000,};
enum MACRO_GRABPAGEALLOC {GRABPAGEALLOC = 17930,};
enum MACRO_HMEWAITPERIOD {HMEWAITPERIOD = 20,};
enum MACRO_KEY_LEFTFIRST {KEY_LEFTFIRST = 32554,KEY_LEFTLAST = 32569,KEY_RIGHTFIRST = 32570,KEY_RIGHTLAST = 32585,KEY_TOPFIRST = 32586,KEY_TOPLAST = 32601,KEY_BOTTOMLEFT = 32602,KEY_BOTTOMRIGHT = 32603,KEY_BOTTOMFIRST = 32602,KEY_BOTTOMLAST = 32617,};
enum MACRO_KIOCSKABORTEN {KIOCSKABORTEN = 27413,};
enum MACRO_KIOCTRANSABLE {KIOCTRANSABLE = 27398,};
enum MACRO_LLC1_ATTACHED {LLC1_ATTACHED = 0x1,};
enum MACRO_L_BITSMAJOR32 {L_BITSMAJOR32 = 14,L_BITSMINOR32 = 18,L_MAXMAJ32 = 16383,L_MAXMIN32 = 262143,L_BITSMAJOR = 14,L_BITSMINOR = 18,L_MAXMAJ = 16383,L_MAXMIN = 262143,};
enum MACRO_MAPBLOCKSHIFT {MAPBLOCKSHIFT = 13,};
enum MACRO_MAXMAPNAMELEN {MAXMAPNAMELEN = 255,};
enum MACRO_MAXNETNAMELEN {MAXNETNAMELEN = 255,};
enum MACRO_MAXPACKETSIZE {MAXPACKETSIZE = 512,};
enum MACRO_MAXRESOLVSORT {MAXRESOLVSORT = 10,};
enum MACRO_MHIOCQRESERVE {MHIOCQRESERVE = 19724,};
enum MACRO_MODADDMAJBIND {MODADDMAJBIND = 5,};
enum MACRO_MODGETPATHLEN {MODGETPATHLEN = 14,};
enum MACRO_MODMAXNAMELEN {MODMAXNAMELEN = 32,};
enum MACRO_MODREREADDACF {MODREREADDACF = 17,};
enum MACRO_MOD_EXCLUSIVE {MOD_EXCLUSIVE = 8192,};
enum MACRO_MTIOCSHORTFMK {MTIOCSHORTFMK = 27920,};
enum MACRO_MT_NDENSITIES {MT_NDENSITIES = 4,MT_NSPEEDS = 4,};
enum MACRO_NFS_CALLTYPES {NFS_CALLTYPES = 3,};
enum MACRO_NTARGETS_WIDE {NTARGETS_WIDE = 16,};
enum MACRO_OPROMMAXPARAM {OPROMMAXPARAM = 32768,};
enum MACRO_OPROMPATH2DRV {OPROMPATH2DRV = 20238,};
enum MACRO_PF_MAXFILTERS {PF_MAXFILTERS = 2047,};
enum MACRO_PTHREAD_MUTEX {PTHREAD_MUTEX_NORMAL = 0x0,PTHREAD_MUTEX_ERRORCHECK = 0x2,PTHREAD_MUTEX_RECURSIVE = 0x4,PTHREAD_MUTEX_DEFAULT = 0x0,PTHREAD_PRIO_NONE = 0x0,PTHREAD_PRIO_INHERIT = 0x10,PTHREAD_PRIO_PROTECT = 0x20,PTHREAD_MUTEX_STALL_NP = 0x0,PTHREAD_MUTEX_ROBUST_NP = 0x40,PTHREAD_CANCEL_ENABLE = 0x0,PTHREAD_CANCEL_DISABLE = 0x1,PTHREAD_CANCEL_DEFERRED = 0x0,PTHREAD_CANCEL_ASYNCHRONOUS = 0x2,PTHREAD_CANCELED = 0xFFFFFFED,PTHREAD_ONCE_NOTDONE = 0x0,PTHREAD_ONCE_DONE = 0x1,};
enum MACRO_QECWAITPERIOD {QECWAITPERIOD = 10,};
enum MACRO_SLC_NOSUPPORT {SLC_NOSUPPORT = 0,SLC_CANTCHANGE = 1,SLC_VARIABLE = 2,SLC_DEFAULT = 3,SLC_LEVELBITS = 3,SLC_FUNC = 0,SLC_FLAGS = 1,SLC_VALUE = 2,SLC_ACK = 128,SLC_FLUSHIN = 64,SLC_FLUSHOUT = 32,};
enum MACRO_STC_TXBUFSIZE {STC_TXBUFSIZE = 8,STC_HIWATER = 1010,STC_LOWWATER = 512,};
enum MACRO_ST_MAXRECSIZE {ST_MAXRECSIZE_VARIABLE = 65535,ST_MAXRECSIZE_VARIABLE_LIMIT = 65534,ST_MAXRECSIZE_FIXED = 64512,};
enum MACRO_SVC_VERSQUIET {SVC_VERSQUIET = 0x1,SVC_DEFUNCT = 0x2,SVC_DGRAM = 0x4,SVC_RENDEZVOUS = 0x8,SVC_CONNECTION = 0xC,SVC_DOOR = 0x10,SVC_TYPE_MASK = 0x1C,SVC_FAILED = 0x20,SVC_ARGS_CHECK = 0x40,};
enum MACRO_SYS_FORCELOAD {SYS_FORCELOAD = 0,SYS_SET_KVAR = 1,SYS_SET_MVAR = 2,SYS_CHECK_EXCLUDE = 3,};
enum MACRO_TEXTDOMAINMAX {TEXTDOMAINMAX = 256,};
enum MACRO_TIFIOCGFWZONE {TIFIOCGFWZONE = 29712,};
enum MACRO_TIFIOCGHEADER {TIFIOCGHEADER = 29710,};
enum MACRO_TIFIOCSPIDOFF {TIFIOCSPIDOFF = 29708,};
enum MACRO_TPROVMISMATCH {TPROVMISMATCH = 25,};
enum MACRO_TSPTYPENUMBER {TSPTYPENUMBER = 22,};
enum MACRO_USYNC_PROCESS {USYNC_PROCESS_ROBUST = 0x8,};
enum MACRO_VKEY_LASTFUNC {VKEY_LASTFUNC = 32617,VKEY_FIRSTPAD = 32618,VKEY_PADEQUAL = 32618,VKEY_PADSLASH = 32619,VKEY_PADSTAR = 32620,VKEY_PADMINUS = 32621,VKEY_PADSEP = 32622,VKEY_PAD7 = 32623,VKEY_PAD8 = 32624,VKEY_PAD9 = 32625,VKEY_PADPLUS = 32626,VKEY_PAD4 = 32627,VKEY_PAD5 = 32628,VKEY_PAD6 = 32629,VKEY_PAD1 = 32630,VKEY_PAD2 = 32631,VKEY_PAD3 = 32632,VKEY_PAD0 = 32633,VKEY_PADDOT = 32634,VKEY_PADENTER = 32635,VKEY_LASTPAD = 32635,VKEY_LAST = 32639,};
enum MACRO_VOLIOCDSYMDEV {VOLIOCDSYMDEV = 30229,};
enum MACRO_VOLIOCREMOUNT {VOLIOCREMOUNT = 30231,};
enum MACRO_VOLIOCSYMNAME {VOLIOCSYMNAME = 30227,};
enum MACRO__D_MTCBSHARED {_D_MTCBSHARED = 0x10000,};
enum MACRO__FIOLOGENABLE {_FIOLOGENABLE = 536897110,};
enum MACRO__FIOSTOPCACHE {_FIOSTOPCACHE = 536897110,};
enum MACRO__LastCategory {_LastCategory = 5,};
typedef struct _4205C709627503FCC3E7DAAF0DB99385 _LC_core_messages_t;
typedef struct _631FA0442200650F637355090EEC1282 _LC_core_monetary_t;
typedef struct _3242DF98F1AD6AB2AF4D4F9FD3432406 _LC_methods_ctype_t;
struct _pthread_rwlockattr {void *__pthread_rwlockattrp;};
typedef struct anch_vol_desc_ptr anch_vol_desc_ptr_t;
struct cachefs_fs_sync_req {struct cachefscache *cf_cachep;};
typedef struct cachefs_kstat_key cachefs_kstat_key_t;
typedef struct cachefsio_getinfo cachefsio_getinfo_t;
typedef void *ddi_iblock_cookie_t;
typedef void *ddi_mapdev_handle_t;
enum decimal_string_form {invalid_form = 0x0,whitespace_form = 0x1,fixed_int_form = 0x2,fixed_intdot_form = 0x3,fixed_dotfrac_form = 0x4,fixed_intdotfrac_form = 0x5,floating_int_form = 0x6,floating_intdot_form = 0x7,floating_dotfrac_form = 0x8,floating_intdotfrac_form = 0x9,inf_form = 0xA,infinity_form = 0xB,nan_form = 0xC,nanstring_form = 0xD,};
typedef struct _32C08F122C9B6B5AD3095757A88A96E6 dl_disabmulti_req_t;
typedef struct _CE4930CE30C4A3FD577842D3323B273C dl_disconnect_ind_t;
typedef struct _3747F54EBF0E40BCD04B6F28DE7EFCF2 dl_disconnect_req_t;
typedef struct _1F097835C705A71A99785C5F8D94F01C dl_promiscoff_req_t;
struct ecpp_transfer_parms {int write_timeout;int mode;};
typedef struct em_get_socket_ack em_get_socket_ack_t;
typedef struct em_get_socket_req em_get_socket_req_t;
enum fp_trap_enable_type {fp_trap_inexact = 0x0,fp_trap_division = 0x1,fp_trap_underflow = 0x2,fp_trap_overflow = 0x3,fp_trap_invalid = 0x4,};
typedef struct isdn_channel_info isdn_channel_info_t;
typedef struct _ldterm_cs_methods ldterm_cs_methods_t;
typedef struct _ldterm_eucpc_data ldterm_eucpc_data_t;
struct llc1_multicast_addr {int llcm_refcnt;unsigned char llcm_addr[6];};
typedef struct mib2_ipRouteEntry mib2_ipRouteEntry_t;
typedef struct mib2_tcpConnEntry mib2_tcpConnEntry_t;
struct mtdrivetype_request {int size;struct mtdrivetype *mtdtp;};
typedef struct nd_router_solicit nd_router_solicit_t;
typedef struct _pthread_mutexattr pthread_mutexattr_t;
typedef struct rpc_gss_principal *rpc_gss_principal_t;
typedef rpcb_entry_list *rpcb_entry_list_ptr;
typedef void (*sigfpe_handler_type)();
typedef double sockaddr_maxalign_t;
typedef struct _F3D1899E2E37EFD927B28027A707AB99 svc_rpc_gss_parms_t;
typedef struct tnf_probe_control tnf_probe_control_t;
typedef struct tnfctl_ind_config tnfctl_ind_config_t;
struct tnfctl_probe_handle;
typedef struct vt_raw_kthread_id vt_raw_kthread_id_t;
typedef struct vt_raw_uthread_id vt_raw_uthread_id_t;
typedef struct _FN_compound_name FN_compound_name_t;
typedef struct _FN_search_filter FN_search_filter_t;
enum MACRO_AIOSUSPEND64 {AIOSUSPEND64 = 14,};
enum MACRO_BAD_IDENTIFY {BAD_IDENTIFY = 0x18,};
enum MACRO_CDROMPLAYMSF {CDROMPLAYMSF = 1177,};
enum MACRO_CDROMSUBCHNL {CDROMSUBCHNL = 1185,};
enum MACRO_CDROMSUBCODE {CDROMSUBCODE = 1193,};
enum MACRO_CDROMVOLCTRL {CDROMVOLCTRL = 1184,};
enum MACRO_CFLAG_CHKSEG {CFLAG_CHKSEG = 0x8,};
enum MACRO_CFSVERSION64 {CFSVERSION64 = 7,};
enum MACRO_CFS_DIRCACHE {CFS_DIRCACHE_COST = 3,CFS_DIRCACHE_INVAL = 3,CFS_DIRCACHE_ENABLE = 9,};
enum MACRO_COMMAND_DONE {COMMAND_DONE_ERROR_RECOVERED = 2,};
enum MACRO_CY_NTRACEREC {CY_NTRACEREC = 512,CY_NCOVERAGE = 127,CY_DEFAULT_PERCPU = 1,CY_PASSIVE_LEVEL = -1,};
enum MACRO_DAYSPERLYEAR {DAYSPERLYEAR = 366,SECSPERHOUR = 3600,SECSPERDAY = 86400,};
enum MACRO_DAYSPERNYEAR {DAYSPERNYEAR = 365,};
enum MACRO_DEFAULT_SYNC {DEFAULT_SYNC_PERIOD = 200,DEFAULT_FASTSYNC_PERIOD = 100,};
enum MACRO_DEFAULT_TYPE {DEFAULT_TYPE = 0,};
enum MACRO_DINFOSUBTREE {DINFOSUBTREE = 0xDF01,};
enum MACRO_DKIOCGMPINFO {DKIOCGMPINFO = 25690,};
enum MACRO_DKIOCGSTATUS {DKIOCGSTATUS = 25693,};
enum MACRO_DMAGA_OFFSET {DMAGA_OFFSET = 0x1000,};
enum MACRO_DRCTL_IOILVL {DRCTL_IOILVL = 0x8,DRCTL_IOILVL_SB0 = 0x0,DRCTL_IOILVL_SB1 = 0x8,DRCTL_SPKREN = 0x4,DRCTL_RESET = 0x2,DRCTL_IFTYPE = 0x1,DRCTL_IFTYPE_MEM = 0x0,DRCTL_IFTYPE_IO = 0x1,DRCTL_LPBKEN = 0x8000,DRCTL_CD1DB = 0x4000,DRCTL_BVD2DB = 0x2000,DRCTL_BVD1DB = 0x1000,DRCTL_RDYDB = 0x800,DRCTL_WPDB = 0x400,DRCTL_WAITDB = 0x200,DRCTL_DIAGEN = 0x100,DRCTL_APWREN = 0x40,DRCTL_VPP2EN = 0x30,DRCTL_VPP2_OFF = 0x0,DRCTL_VPP2_VCC = 0x10,DRCTL_VPP2_VPP = 0x20,DRCTL_VPP2_ZIP = 0x30,DRCTL_VPP1EN = 0xC,DRCTL_VPP1_OFF = 0x0,DRCTL_VPP1_VCC = 0x4,DRCTL_VPP1_VPP = 0x8,DRCTL_VPP1_ZIP = 0xC,DRCTL_MSTPWR = 0x2,DRCTL_PCIFOE = 0x1,};
enum MACRO_DRWIN_ASPSEL {DRWIN_ASPSEL_M = 0xC0,DRWIN_ASPSEL_AM = 0x0,DRWIN_ASPSEL_CM = 0x40,DRWIN_ASPSEL_IO = 0x80,DRWIN_BASE_M = 0x3F,DRWIN_BASE_S = 0x0,DRWIN_RECDLY_M = 0x18,DRWIN_RECDLY_S = 0x3,DRWIN_WAITDLY_M = 0x6,DRWIN_WAITDLY_S = 0x1,DRWIN_WAITREQ_M = 0x1,DRWIN_WAITREQ_S = 0x0,};
enum MACRO_ELFCLASSNONE {ELFCLASSNONE = 0,ELFCLASS32 = 1,ELFCLASS64 = 2,};
enum MACRO_EM_EVENTSIZE {EM_EVENTSIZE = 4,};
enum MACRO_ENMAXFILTERS {ENMAXFILTERS = 255,};
enum MACRO_FBIODBLGINFO {FBIODBLGINFO = 17938,};
enum MACRO_FBIODBLSINFO {FBIODBLSINFO = 17939,};
enum MACRO_FBIOGETCMAPI {FBIOGETCMAPI = 17962,};
enum MACRO_FBIOPUTCMAPI {FBIOPUTCMAPI = 17961,};
enum MACRO_FBIORESWINFD {FBIORESWINFD = 17942,};
enum MACRO_FBIOSAVWINFD {FBIOSAVWINFD = 17941,};
enum MACRO_FBIOVERTICAL {FBIOVERTICAL = 17929,};
enum MACRO_FC_STATUS_OK {FC_STATUS_OK = 0,FC_STATUS_P_RJT = 2,FC_STATUS_F_RJT = 3,FC_STATUS_P_BSY = 4,FC_STATUS_F_BSY = 5,FC_STATUS_ERR_OFFLINE = 17,FC_STATUS_TIMEOUT = 18,FC_STATUS_ERR_OVERRUN = 19,FC_STATUS_UNKNOWN_CQ_TYPE = 32,FC_STATUS_BAD_SEG_CNT = 33,FC_STATUS_MAX_XCHG_EXCEEDED = 34,FC_STATUS_BAD_XID = 35,FC_STATUS_XCHG_BUSY = 36,FC_STATUS_BAD_POOL_ID = 37,FC_STATUS_INSUFFICIENT_CQES = 38,FC_STATUS_ALLOC_FAIL = 39,FC_STATUS_BAD_SID = 40,FC_STATUS_NO_SEQ_INIT = 41,FC_STATUS_ERROR = 128,FC_STATUS_ONLINE_TIMEOUT = 129,FC_STATUS_LOGIN_TIMEOUT = -2147483647,FC_STATUS_CQFULL = -2147483646,FC_STATUS_TRANSFAIL = -2147483645,FC_STATUS_RESETFAIL = -2147483644,};
enum MACRO_FDDEFGEOCHAR {FDDEFGEOCHAR = 1110,};
enum MACRO_FORM_COMMAND {MIN_FORM_COMMAND = 512,MAX_FORM_COMMAND = 568,};
enum MACRO_FSLARGEFILES {FSLARGEFILES = 0x1,};
enum MACRO_F_REMOTELOCK {F_REMOTELOCK = 0x10000,F_PXFSLOCK = 0x20000,};
enum MACRO_GRABLOCKINFO {GRABLOCKINFO = 17949,};
enum MACRO_GRABPAGEFREE {GRABPAGEFREE = 17931,};
enum MACRO_HID_KEYBOARD {HID_KEYBOARD_PROTOCOL = 0x1,HID_MOUSE_PROTOCOL = 0x2,};
enum MACRO_ICMP6_FILTER {ICMP6_FILTER = 0x1,};
enum MACRO_IEETHERADDRL {IEETHERADDRL = 6,IEMCADDRMAX = 64,};
enum MACRO_INCOMPATIBLE {INCOMPATIBLE = 0x10,};
enum MACRO_INVALID_LINK {INVALID_LINK_CONTROL = 0x8,INVALID_R_CTL = 0x9,INVALID_F_CTL = 0xA,INVALID_OX_ID = 0xB,INVALID_RX_ID = 0xC,INVALID_SEQ_ID = 0xD,INVALID_DF_CTL = 0xE,INVALID_SEQ_CNT = 0xF,INVALID_PARAMETER = 0x10,};
enum MACRO_LLC1_HIWATER {LLC1_HIWATER = 32000,LLC1_LOWATER = 4096,LLC1_DEFMAX = 4096,};
enum MACRO_LM_MAXSTRLEN {LM_MAXSTRLEN = 1024,};
enum MACRO_LOSTFOUNDINO {LOSTFOUNDINO = 3,};
enum MACRO_LUFS_VERSION {LUFS_VERSION = 1,LUFS_VERSION_LATEST = 1,};
enum MACRO_LctErrorNone {LctErrorNone = 0,LctErrorIconvCannotOpen = 1,LctErrorIconvError = 2,};
enum MACRO_MAPBLOCKSIZE {MAPBLOCKSIZE = 8192,};
enum MACRO_MAXERRMSGLEN {MAXERRMSGLEN = 255,};
enum MACRO_MAXISOOFFSET {MAXISOOFFSET = 2047,MAXISOMASK = -2048,};
enum MACRO_MAXYPDATALEN {MAXYPDATALEN = 1023,};
enum MACRO_MAX_IPOPTLEN {MAX_IPOPTLEN = 40,};
enum MACRO_MAX_THROTTLE {MAX_THROTTLE = 256,};
enum MACRO_MHIOCRELEASE {MHIOCRELEASE = 19715,};
enum MACRO_MIN_LONGLINK {MIN_LONGLINK_MFC_LENGTH = 6,MIN_LONGLINK_MFC_NREGS = 1,};
enum MACRO_MIN_LOWWATER {MIN_LOWWATER = 2,MIN_RTPR = 1,};
enum MACRO_MNTIOC_NMNTS {MNTIOC_NMNTS = 27905,MNTIOC_GETDEVLIST = 27906,MNTIOC_SETTAG = 27907,MNTIOC_CLRTAG = 27908,};
enum MACRO_MODE_TRAPSIG {MODE_TRAPSIG = 0x2,MODE_ACK = 0x4,MODE_SOFT_TAB = 0x8,MODE_LIT_ECHO = 0x10,MODE_MASK = 0x1F,MODE_FLOW = 0x100,MODE_ECHO = 0x200,MODE_INBIN = 0x400,MODE_OUTBIN = 0x800,MODE_FORCE = 0x1000,};
enum MACRO_MSIOGETPARMS {MSIOGETPARMS = 27905,};
enum MACRO_MSIOSETPARMS {MSIOSETPARMS = 27906,};
enum MACRO_MTDOUBLEFREE {MTDOUBLEFREE = 1,MTDEBUGPATTERN = 2,MTINITBUFFER = 4,MTCHUNKSIZE = 32,};
enum MACRO_MTIOCRELEASE {MTIOCRELEASE = 27913,};
enum MACRO_MTIOCRESERVE {MTIOCRESERVE = 27912,};
enum MACRO_NBITSMAJOR32 {NBITSMAJOR32 = 14,};
enum MACRO_NBITSMINOR32 {NBITSMINOR32 = 18,};
enum MACRO_NFS3_PROGRAM {NFS3_PROGRAM = 100003,};
enum MACRO_NONROOT_USRX {NONROOT_USRX = 2,};
enum MACRO_NORMALRETURN {NORMALRETURN = 0,JUSTRETURN = 1,};
enum MACRO_NOT_READABLE {NOT_READABLE = 7,};
enum MACRO_NSMADDRPROC1 {NSMADDRPROC1_NULL = 0,NSMADDRPROC1_REG = 1,NSMADDRPROC1_UNREG = 2,};
enum MACRO_NULL_xdrproc {NULL_xdrproc_t = 0,};
enum MACRO_OLD_MAXFIDSZ {OLD_MAXFIDSZ = 16,};
enum MACRO_OPROMGETCONS {OPROMGETCONS = 20234,};
enum MACRO_OPROMGETPROP {OPROMGETPROP = 20231,};
enum MACRO_OPROMNXTPROP {OPROMNXTPROP = 20232,};
enum MACRO_OPROMREADY64 {OPROMREADY64 = 20242,};
enum MACRO_OPROMSETOPT2 {OPROMSETOPT2 = 20228,};
enum MACRO_PANICBUFSIZE {PANICBUFSIZE = 8192,};
enum MACRO_PANICBUFVERS {PANICBUFVERS = 1,PANICNVNAMELEN = 16,};
enum MACRO_PANICSTKSIZE {PANICSTKSIZE = 8192,};
enum MACRO_PC_MAXFATSEC {PC_MAXFATSEC = 256,};
enum MACRO_PT_OVERWRITE {PT_OVERWRITE = 0x1,PT_INFO_ONLY = 0x2,PT_RENAME = 0x4,PT_DEBUG = 0x8,PT_SILENT = 0x10,PT_ODTSTREAM = 0x40,};
enum MACRO_REG_EXTENDED {REG_EXTENDED = 0x1,REG_NEWLINE = 0x8,REG_ICASE = 0x4,REG_NOSUB = 0x2,REG_EGREP = 0x1000,REG_DELIM = 0x10,REG_DEBUG = 0x20,REG_ANCHOR = 0x40,REG_WORDS = 0x80,REG_MUST = 0x100,REG_NOTBOL = 0x200,REG_NOTEOL = 0x400,REG_NOOPT = 0x800,REG_OK = 0x0,REG_NOMATCH = 0x1,REG_ECOLLATE = 0x2,REG_EESCAPE = 0x3,REG_ENEWLINE = 0x4,REG_ENSUB = 0x5,REG_ESUBREG = 0x6,REG_EBRACK = 0x7,REG_EPAREN = 0x8,REG_EBRACE = 0x9,REG_ERANGE = 0xA,REG_ESPACE = 0xB,REG_BADRPT = 0xC,REG_ECTYPE = 0xD,REG_BADPAT = 0xE,REG_BADBR = 0xF,REG_EFATAL = 0x10,REG_ECHAR = 0x11,REG_STACK = 0x12,REG_ENOSYS = 0x13,REG__LAST = 0x14,REG_EBOL = 0x15,REG_EEOL = 0x16,};
enum MACRO_RES_MAXNDOTS {RES_MAXNDOTS = 15,RES_INIT = 1,RES_DEBUG = 2,RES_AAONLY = 4,RES_USEVC = 8,RES_PRIMARY = 16,RES_IGNTC = 32,RES_RECURSE = 64,RES_DEFNAMES = 128,RES_STAYOPEN = 256,RES_DNSRCH = 512,RES_INSECURE1 = 1024,RES_INSECURE2 = 2048,RES_NOALIASES = 4096,RES_USE_INET6 = 8192,RES_DEFAULT = 704,RES_PRF_STATS = 1,RES_PRF_UPDATE = 2,RES_PRF_CLASS = 4,RES_PRF_CMD = 8,RES_PRF_QUES = 16,RES_PRF_ANS = 32,RES_PRF_AUTH = 64,RES_PRF_ADD = 128,RES_PRF_HEAD1 = 256,RES_PRF_HEAD2 = 512,RES_PRF_TTLID = 1024,RES_PRF_HEADX = 2048,RES_PRF_QUERY = 4096,RES_PRF_REPLY = 8192,RES_PRF_INIT = 16384,};
enum MACRO_RETURN_FIRST {RETURN_FIRST_TUPLE = 0xFF,RETURN_NEXT_TUPLE = 0xFF,};
enum MACRO_RFLUSHPCPROT {RFLUSHPCPROT = 0x20,};
enum MACRO_RUSERSVERS_0 {RUSERSVERS = 3,MAXUSERS = 100,};
enum MACRO_RUSERSVERS_3 {RUSERSVERS_3 = 3,};
enum MACRO_RX_FIFO_MASK {RX_FIFO_MASK = 0xF,};
enum MACRO_SCSI_DEFAULT {SCSI_DEFAULT_RESET_DELAY = 3000,SCSI_DEFAULT_SELECTION_TIMEOUT = 250,};
enum MACRO_SIOCGLIFCONF {SIOCGLIFCONF = -1072666248,};
enum MACRO_SM_REMOVABLE {SM_REMOVABLE_DISK = 0x20005,SM_FLOPPY = 0x10002,SM_PCMCIA_MEM = 0x20006,SM_NOT_PRESENT = 0xFFFF,};
enum MACRO_SRIOCISREDIR {SRIOCISREDIR = 480116738,};
enum MACRO_STC_DTRCLOSE {STC_DTRCLOSE = 0x4,STC_CFLOWFLUSH = 0x8,STC_CFLOWMSG = 0x10,STC_INSTANTFLOW = 0x20,STC_DTRFORCE = 0x40,};
enum MACRO_SUSP_VERSION {SUSP_VERSION = 1,};
enum MACRO_S_IOCGETMODE {S_IOCGETMODE = 0x7A01,S_IOCSETMODE = 0x7A02,S_IOCGETSTATS = 0x7A03,S_IOCCLRSTATS = 0x7A04,S_IOCGETSPEED = 0x7A05,S_IOCGETMRU = 0x7A06,S_IOCSETMRU = 0x7A07,S_IOCGETMTU = 0x7A08,S_IOCSETMTU = 0x7A09,S_IOCGETMCTL = 0x7A0A,S_IOCSETDTR = 0x7A0B,};
enum MACRO_SetGroupAddr {SetGroupAddr = 0x5,};
enum MACRO_TASKQ_ACTIVE {TASKQ_ACTIVE = 0x10000,TASKQ_NAMELEN = 0x1F,};
enum MACRO_TCL_CHECKSUM {TCL_CHECKSUM = 1536,};
enum MACRO_TIFIOCGBLOCK {TIFIOCGBLOCK = 29711,};
enum MACRO_TIFIOCGSTATE {TIFIOCGSTATE = 29701,};
enum MACRO_TIFIOCSPIDON {TIFIOCSPIDON = 29707,};
enum MACRO_TIOCGSOFTCAR {TIOCGSOFTCAR = 21609,};
enum MACRO_TIOCSSOFTCAR {TIOCSSOFTCAR = 21610,};
enum MACRO_TMP_MUSTHAVE {TMP_MUSTHAVE = 0x1,};
enum MACRO_TNOSTRUCTYPE {TNOSTRUCTYPE = 20,};
enum MACRO_UNACCESSIBLE {UNACCESSIBLE = 1,};
enum MACRO_UT_UNMOUNTED {UT_UNMOUNTED = 0,UT_MOUNTED = 1,UT_HLOCKING = 2,};
enum MACRO_VOLIOCCANCEL {VOLIOCCANCEL = 30218,};
enum MACRO_VOLIOCDAEMON {VOLIOCDAEMON = 30223,};
enum MACRO_VOLIOCDCHECK {VOLIOCDCHECK = 30217,};
enum MACRO_VOLIOCDGATTR {VOLIOCDGATTR = 30215,};
enum MACRO_VOLIOCDINUSE {VOLIOCDINUSE = 30222,};
enum MACRO_VOLIOCDSATTR {VOLIOCDSATTR = 30216,};
enum MACRO_VOLIOCSYMDEV {VOLIOCSYMDEV = 30230,};
enum MACRO_WINDOWSIZE32 {WINDOWSIZE32 = 64,};
enum MACRO_YPPASSWDPROC {YPPASSWDPROC_UPDATE = 1,};
enum MACRO_YPPASSWDPROG {YPPASSWDPROG = 100009,};
enum MACRO_YPPASSWDVERS {YPPASSWDVERS = 1,};
enum MACRO__D_QNEXTLESS {_D_QNEXTLESS = 0x40,_D_MTOCSHARED = 0x80,};
enum MACRO__FIODIRECTIO {_FIODIRECTIO = 536897100,};
enum MACRO__FIOLOGRESET {_FIOLOGRESET = 536897098,};
enum MACRO__POSIX_ASYNC {_POSIX_ASYNC_IO = 1,_POSIX_ASYNCHRONOUS_IO = 1,_POSIX_FSYNC = 1,_POSIX_JOB_CONTROL = 1,_POSIX_MAPPED_FILES = 1,_POSIX_MEMLOCK = 1,_POSIX_MEMLOCK_RANGE = 1,_POSIX_MEMORY_PROTECTION = 1,_POSIX_MESSAGE_PASSING = 1,_POSIX_PRIORITY_SCHEDULING = 1,_POSIX_REALTIME_SIGNALS = 1,_POSIX_SAVED_IDS = 1,_POSIX_SEMAPHORES = 1,_POSIX_SHARED_MEMORY_OBJECTS = 1,_POSIX_SYNC_IO = 1,_POSIX_SYNCHRONIZED_IO = 1,_POSIX_TIMERS = 1,_POSIX_THREAD_SAFE_FUNCTIONS = 1,_POSIX_THREADS = 1,_POSIX_THREAD_ATTR_STACKADDR = 1,_POSIX_THREAD_ATTR_STACKSIZE = 1,_POSIX_THREAD_PROCESS_SHARED = 1,_POSIX_THREAD_PRIORITY_SCHEDULING = 1,_POSIX_THREAD_PRIO_INHERIT = 1,_POSIX_THREAD_PRIO_PROTECT = 1,};
typedef void *OCF_AuthOpBuffer_t;
typedef struct OCF_OCF_PropertyList_t *OCF_PropertyList_t;
struct _FN_composite_name;
struct _FN_multigetlist_t;
struct _FN_search_control;
struct _FN_status_cnsvc_t;
typedef struct _F4A087914CCBD8B8061D53356491AFE5 _LC_core_charmap_t;
typedef struct _3BD9E21EDFC7EA3B12DCBE973656A8B8 _LC_core_collate_t;
typedef struct _AD898C726F4F86F79B78998236170483 _LC_core_numeric_t;
typedef void (*_LC_methods_func_t)(void);
typedef struct _00ED80C671E56402DFDA98FF57A0F9A3 _LC_methods_time_t;
struct __nsw_switchconfig {int vers;char *dbase;int num_lookups;struct __nsw_lookup *lookups;};
struct _pthread_mutexattr {void *__pthread_mutexattrp;};
typedef struct cachefs_metadata cachefs_metadata_t;
typedef struct cachefsio_remove cachefsio_remove_t;
struct compose_sequence_t {unsigned char first;unsigned char second;unsigned char iso;};
typedef struct _32C08F122C9B6B5AD3095757A88A96E6 dl_enabmulti_req_t;
typedef struct _32C08F122C9B6B5AD3095757A88A96E6 dl_phys_addr_ack_t;
typedef struct _5F450950E4D1D1BEF117F0FECB7D4E7F dl_phys_addr_req_t;
typedef struct _1F097835C705A71A99785C5F8D94F01C dl_promiscon_req_t;
typedef struct _2D2DEA9E8B1723DA9627F35ADE64BFFE dl_qos_cl_range1_t;
typedef struct _F595FC0EEBF0E630CD599952C6884CED dl_qos_co_range1_t;
typedef struct _20B967FD53182EA0ACEED1B6ABCFD823 dl_subs_bind_ack_t;
typedef struct _5F20F5A0DF59391F86268A875D1DFCE5 dl_subs_bind_req_t;
typedef void *fc_statec_cookie_t;
typedef struct fcp_scsi_bus_err fcp_scsi_bus_err_t;
typedef struct ifp_target_stats ifp_target_stats_t;
typedef struct la_els_rls_reply la_els_rls_reply_t;
typedef struct log_vol_hdr_desc log_vol_hdr_desc_t;
typedef struct log_vol_int_desc log_vol_int_desc_t;
struct mdi_set_resolution {int pixelfreq;int hfreq;int hfporch;int hsync;int hbporch;int hvistime;int hblanking;int vfreq;int vfporch;int vsync;int vbporch;int vvistime;int vblanking;};
typedef struct mib2_ipAddrEntry mib2_ipAddrEntry_t;
typedef struct nd_router_advert nd_router_advert_t;
typedef struct nfsreadargs nfslog_nfsreadargs;
struct nss_getent_context;
typedef struct _FC07BF6E13A3F29964B2741842A3FFCB pppReqValidation_t;
typedef struct _pthread_condattr pthread_condattr_t;
typedef struct _94B6D2E03277F36A7EAC6FE7B7D6A054 rpc_gss_callback_t;
typedef rpcbs_addrlist *rpcbs_addrlist_ptr;
typedef struct tnf_block_header tnf_block_header_t;
typedef struct usb_config_descr usb_config_descr_t;
typedef struct usb_device_descr usb_device_descr_t;
typedef struct usb_string_descr usb_string_descr_t;
typedef struct vt_kthread_label vt_kthread_label_t;
typedef struct vt_uthread_label vt_uthread_label_t;
typedef void *FN_ctx_svc_data_t;
typedef void (*FN_ctx_svc_func_t)();
typedef struct _FN_multigetlist_t FN_multigetlist_t;
typedef struct _FN_status_cnsvc_t FN_status_cnsvc_t;
typedef struct _488DA2D57F3DEC7D8F8D2973FF098AA5 LayoutEditSizeRec;
typedef struct _B089456DFBB446A2250D7264A8E39902 LclCharsetSegment;
enum MACRO_AIOAWRITE64 {AIOAWRITE64 = 18,};
enum MACRO_AIOCANCEL64 {AIOCANCEL64 = 19,};
enum MACRO_ALL_RESULTS {ALL_RESULTS = 8,};
enum MACRO_ARGPUSHSIZE {ARGPUSHSIZE = 24,ARGPUSH = 68,};
enum MACRO_ASCII_DEVID {ASCII_DEVID = 0x0,TOP_DEVID = 0x1,ISO_DEVID = 0x2,LIGHTPEN_DEVID = 0x79,BUTTON_DEVID = 0x7A,DIAL_DEVID = 0x7B,SUNVIEW_DEVID = 0x7C,PANEL_DEVID = 0x7D,SCROLL_DEVID = 0x7E,WORKSTATION_DEVID = 0x7F,LAST_DEVID = 0xFF,};
enum MACRO_ASCII_FIRST {ASCII_FIRST = 0,ASCII_LAST = 127,};
enum MACRO_AUDIO_DRAIN {AUDIO_DRAIN = 536887555,};
enum MACRO_A_GETPOLICY {A_GETPOLICY = 2,A_SETPOLICY = 3,A_GETKMASK = 4,A_SETKMASK = 5,A_GETQCTRL = 6,A_SETQCTRL = 7,A_GETCWD = 8,A_GETCAR = 9,A_GETSTAT = 12,A_SETSTAT = 13,A_SETUMASK = 14,A_SETSMASK = 15,A_GETCOND = 20,A_SETCOND = 21,A_GETCLASS = 22,A_SETCLASS = 23,A_GETPINFO = 24,A_SETPMASK = 25,A_SETFSIZE = 26,A_GETFSIZE = 27,A_GETPINFO_ADDR = 28,A_GETKAUDIT = 29,A_SETKAUDIT = 30,};
enum MACRO_BITSPERBYTE {BITSPERBYTE = 8,};
enum MACRO_BMACLNKTIME {BMACLNKTIME = 500000,};
enum MACRO_BUSYTIMEOUT {NO_BUSYTIMEOUT = 0,MIN_BUSYTIMEOUT = 0,MAX_BUSYTIMEOUT = 7200,};
enum MACRO_CACHEFS_MAX {CACHEFS_MAX_APOP_INQUEUE = 50,};
enum MACRO_CDROMRESUME {CDROMRESUME = 1176,};
enum MACRO_CDROM_MODE2 {CDROM_MODE2_SIZE = 2336,};
enum MACRO_CHECK_CYCLE {CHECK_CYCLE = 1,};
enum MACRO_CLGET_RETRY {CLGET_RETRY_TIMEOUT = 5,};
enum MACRO_CLOCK_10MHZ {CLOCK_10MHZ = 2,CLOCK_15MHZ = 3,CLOCK_20MHZ = 4,CLOCK_25MHZ = 5,CLOCK_30MHZ = 6,CLOCK_35MHZ = 7,CLOCK_40MHZ = 8,CLOCK_MASK = 7,};
enum MACRO_CPR_VERSION {CPR_VERSION = 4,CPR_PROP_BOOL_LEN = 6,CPR_CONFIG_MAGIC = 1131300455,CPR_DEFAULT_MAGIC = 1147554932,};
enum MACRO_CPU_RUNNING {CPU_RUNNING = 0x1,CPU_READY = 0x2,CPU_QUIESCED = 0x4,CPU_EXISTS = 0x8,CPU_ENABLE = 0x10,CPU_OFFLINE = 0x20,CPU_POWEROFF = 0x40,CPU_CPR_ONLINE = 0x1,CPU_CURRENT = 0xFFFFFFFD,};
enum MACRO_ConfigMCast {ConfigMCast = 0x1,ReconfigMCast = 0x2,CFGMULTICAST = 0x4,};
enum MACRO_DAYSPERWEEK {DAYSPERWEEK = 7,};
enum MACRO_DDI_SUCCESS {DDI_SUCCESS = 0,DDI_FAILURE = -1,DDI_NOT_WELL_FORMED = -2,};
enum MACRO_DEBUGGING_0 {DEBUGGING = 0,};
enum MACRO_DEF_FILEGRP {DEF_FILEGRP_SIZE = 256,DEF_POP_SIZE = 65536,};
enum MACRO_DES_MAXDATA {DES_MAXDATA = 8192,DES_DIRMASK = 1,DES_ENCRYPT = 0,DES_DECRYPT = 1,DES_DEVMASK = 2,DES_HW = 0,DES_SW = 2,};
enum MACRO_DEVI_DEVICE {DEVI_DEVICE_OFFLINE = 0x1,DEVI_DEVICE_DOWN = 0x2,DEVI_DEVICE_DEGRADED = 0x4,DEVI_BUS_QUIESCED = 0x100,DEVI_BUS_DOWN = 0x200,DEVI_NDI_CONFIG = 0x400,DEVI_S_ATTACHING = 0x10000,DEVI_S_DETACHING = 0x20000,DEVI_S_ONLINING = 0x40000,DEVI_S_OFFLINING = 0x80000,DEVI_S_INVOKING_DACF = 0x100000,DEVI_S_UNBOUND = 0x200000,DEVI_S_MD_UPDATE = 0x400000,DEVI_S_REPORT = 0x8000000,};
enum MACRO_DEVPOLLSIZE {DEVPOLLSIZE = 1000,};
enum MACRO_DINFOCPYALL {DINFOCPYALL = 57095,};
enum MACRO_DINFOCPYONE {DINFOCPYONE = 57088,};
enum MACRO_DI_SNAPSHOT {DI_SNAPSHOT_VERSION_0 = 0,DI_PRIVDATA_VERSION_0 = 10,DI_BIG_ENDIAN = 0,DI_LITTLE_ENDIAN = 1,DI_WALK_CLDFIRST = 0,DI_WALK_SIBFIRST = 1,DI_WALK_LINKGEN = 2,DI_WALK_MASK = 15,DI_WALK_CONTINUE = 0,DI_WALK_PRUNESIB = -1,DI_WALK_PRUNECHILD = -2,DI_WALK_TERMINATE = -3,DI_CHECK_ALIAS = 16,DI_CHECK_INTERNAL_PATH = 32,DI_CHECK_MASK = 240,DI_PSEUDO_NODEID = -1,DI_SID_NODEID = -2,DI_PROM_NODEID = -3,DI_DRIVER_DETACHED = 32768,DI_DEVICE_OFFLINE = 1,DI_DEVICE_DOWN = 2,DI_BUS_QUIESCED = 256,DI_BUS_DOWN = 512,DI_PROP_TYPE_BOOLEAN = 0,DI_PROP_TYPE_INT = 1,DI_PROP_TYPE_STRING = 2,DI_PROP_TYPE_BYTE = 3,DI_PROP_TYPE_UNKNOWN = 4,DI_PROP_TYPE_UNDEF_IT = 5,DI_NODE_NIL = 0,DI_MINOR_NIL = 0,DI_PROP_NIL = 0,DI_PROM_PROP_NIL = 0,DI_PROM_HANDLE_NIL = 0,};
enum MACRO_DKIOCADDBAD {DKIOCADDBAD = 1044,};
enum MACRO_DKIOCGAPART {DKIOCGAPART = 1029,};
enum MACRO_DKIOCGETDEF {DKIOCGETDEF = 1045,};
enum MACRO_DKIOCSAPART {DKIOCSAPART = 1028,};
enum MACRO_DKIOCSMPCMD {DKIOCSMPCMD = 25696,};
enum MACRO_DKIOCUNLOCK {DKIOCUNLOCK = 1032,};
enum MACRO_DL_MAXSTATE {DL_MAXSTATE = 20,};
enum MACRO_DMAGA_DEVID {DMAGA_DEVID = 0xF0000000,};
enum MACRO_DMA_INTPEND {DMA_INTPEND = 0x1,DMA_ERRPEND = 0x2,DMA_DRAINING = 0x4,DMA_INTEN = 0x10,DMA_RESET = 0x80,DMA_WRITE = 0x100,DMA_ENDVMA = 0x200,DMA_REQPEND = 0x400,DMA_DMAREV = 0x7800,DMA_WIDE_EN = 0x8000,DMA_DSBL_DRAIN = 0x20000,DMA_BURSTS = 0xC0000,DMA_TWO_CYCLE = 0x200000,DMA_DSBL_PARITY = 0x2000000,DMA_PAUSE_FAS = 0x4000000,DMA_RESET_FAS = 0x8000000,DMA_DEV_ID = 0xF0000000,DMA_INT_MASK = 0x3,DMA_BURST16 = 0x0,DMA_BURST32 = 0x40000,DMA_BURST64 = 0xC0000,DMA_CE_ID = 0xB0000000,};
enum MACRO_DRADDRLINES {DRADDRLINES = 20,};
enum MACRO_ELFCLASSNUM {ELFCLASSNUM = 201,};
enum MACRO_ELFDATANONE {ELFDATANONE = 0,ELFDATA2LSB = 1,ELFDATA2MSB = 2,};
enum MACRO_EXIT_STATUS {GOOD_EXIT_STATUS = 0,BAD_EXIT_STATUS = 1,};
enum MACRO_EXPER_DVMRP {EXPER_DVMRP_VIF = 1,EXPER_DVMRP_MRT = 2,};
enum MACRO_FBIOGCMSIZE {FBIOGCMSIZE = 17934,};
enum MACRO_FBIOGCURMAX {FBIOGCURMAX = 17948,};
enum MACRO_FBIOGCURPOS {FBIOGCURPOS = 17947,};
enum MACRO_FBIOGCURSOR {FBIOGCURSOR = 17945,};
enum MACRO_FBIOGETCMAP {FBIOGETCMAP = 17924,};
enum MACRO_FBIOGPLNGRP {FBIOGPLNGRP = 17933,};
enum MACRO_FBIOMONINFO {FBIOMONINFO = 17960,};
enum MACRO_FBIOPUTCMAP {FBIOPUTCMAP = 17923,};
enum MACRO_FBIOSCMSIZE {FBIOSCMSIZE = 17935,};
enum MACRO_FBIOSCURPOS {FBIOSCURPOS = 17946,};
enum MACRO_FBIOSCURSOR {FBIOSCURSOR = 17944,};
enum MACRO_FBIOSRWINFD {FBIOSRWINFD = 17943,};
enum MACRO_FCIO_BYPASS {FCIO_BYPASS_DEV = 18096,FCIO_ADISC_ELS = 18098,FCIO_FORCE_OFFLINE = 18099,FCIO_LOADUCODE = 18100,FCIO_DUMPXRAM = 18101,FCIO_DUMPXRAMBUF = 18102,FCIO_LOOPBACK_INTERNAL = 18110,FCIO_LOOPBACK_MANUAL = 18111,FCIO_NO_LOOPBACK = 18112,FCIO_LOOPBACK_FRAME = 18113,FCIO_DIAG_NOP = 18114,FCIO_DIAG_RAW = 18115,FCIO_DIAG_XRAM = 18116,FCIO_DIAG_SOC = 18117,FCIO_DIAG_HCB = 18118,FCIO_DIAG_SOCLB = 18119,FCIO_DIAG_SRDSLB = 18120,FCIO_DIAG_EXTLB = 18121,};
enum MACRO_FDGETCHANGE {FDGETCHANGE = 1078,};
enum MACRO_FDGETSEARCH {FDGETSEARCH = 1081,};
enum MACRO_FDISK_LINUX {FDISK_LINUX = 65,FDISK_LINUXDSWAP = 66,FDISK_LINUXDNAT = 67,FDISK_CPM = 82,};
enum MACRO_FDSETSEARCH {FDSETSEARCH = 1082,};
enum MACRO_FSETLOCKING {FSETLOCKING_QUERY = 0,FSETLOCKING_INTERNAL = 1,FSETLOCKING_BYCALLER = 2,};
enum MACRO_HDKIOCGDIAG {HDKIOCGDIAG = 1130,};
enum MACRO_HDKIOCGTYPE {HDKIOCGTYPE = 1126,};
enum MACRO_HDKIOCSTYPE {HDKIOCSTYPE = 1125,};
enum MACRO_HDK_NOERROR {HDK_NOERROR = 0,HDK_CORRECTED = 1,HDK_RECOVERED = 2,HDK_FATAL = 3,HDK_NONMEDIA = 0,HDK_ISMEDIA = 1,};
enum MACRO_HID_VERSION {HID_VERSION_V_0 = 0,HID_SUCCESS = 0,HID_FAILURE = 1,};
enum MACRO_HOURSPERDAY {HOURSPERDAY = 24,};
enum MACRO_HS_HASHSIZE {HS_HASHSIZE = 32,HS_HSTABLESIZE = 16384,};
enum MACRO_I82586ALIGN {I82586ALIGN = 4,};
enum MACRO_IA_NOCHANGE {IA_NOCHANGE = -32768,};
enum MACRO_ICMP_MINLEN {ICMP_MINLEN = 8,ICMP_MASKLEN = 12,ICMP_ECHOREPLY = 0,ICMP_UNREACH = 3,ICMP_UNREACH_NET = 0,ICMP_UNREACH_HOST = 1,ICMP_UNREACH_PROTOCOL = 2,ICMP_UNREACH_PORT = 3,ICMP_UNREACH_NEEDFRAG = 4,ICMP_UNREACH_SRCFAIL = 5,ICMP_UNREACH_NET_UNKNOWN = 6,ICMP_UNREACH_HOST_UNKNOWN = 7,ICMP_UNREACH_ISOLATED = 8,ICMP_UNREACH_NET_PROHIB = 9,ICMP_UNREACH_HOST_PROHIB = 10,ICMP_UNREACH_TOSNET = 11,ICMP_UNREACH_TOSHOST = 12,ICMP_UNREACH_FILTER_PROHIB = 13,ICMP_UNREACH_HOST_PRECEDENCE = 14,ICMP_UNREACH_PRECEDENCE_CUTOFF = 15,ICMP_SOURCEQUENCH = 4,ICMP_REDIRECT_NET = 0,ICMP_REDIRECT_HOST = 1,ICMP_REDIRECT_TOSNET = 2,ICMP_REDIRECT_TOSHOST = 3,ICMP_ECHO = 8,ICMP_ROUTERADVERT = 9,ICMP_ROUTERSOLICIT = 10,ICMP_TIMXCEED = 11,ICMP_TIMXCEED_INTRANS = 0,ICMP_TIMXCEED_REASS = 1,ICMP_PARAMPROB = 12,ICMP_PARAMPROB_OPTABSENT = 1,ICMP_PARAMPROB_BADLENGTH = 2,ICMP_TSTAMP = 13,ICMP_TSTAMPREPLY = 14,ICMP_IREQ = 15,ICMP_IREQREPLY = 16,ICMP_MASKREQ = 17,ICMP_MASKREPLY = 18,ICMP_MAXTYPE = 18,};
enum MACRO_IDLE_LENGTH {GET_IDLE_LENGTH = 0x1,SET_IDLE_LENGTH = 0x0,};
enum MACRO_IFLAGS_SVID {IFLAGS_SVID = 177,};
enum MACRO_ILDTCAPSIZE {ILDTCAPSIZE = 64,ILDTRCTABSIZ = 512,};
enum MACRO_ISPEED_SVID {ISPEED_SVID = 7,};
enum MACRO_KIOCABORT1A {KIOCABORT1A = -3,};
enum MACRO_KIOCGCOMPAT {KIOCGCOMPAT = 27409,};
enum MACRO_KIOCGDIRECT {KIOCGDIRECT = 27403,};
enum MACRO_KIOCSCOMPAT {KIOCSCOMPAT = 27408,};
enum MACRO_KIOCSDIRECT {KIOCSDIRECT = 27402,};
enum MACRO_KIOCSLAYOUT {KIOCSLAYOUT = 27411,};
enum MACRO_LLC1_CSMACD {LLC1_CSMACD_HDR_SIZE = 14,};
enum MACRO_LOCK_NORMAL {LOCK_NORMAL = 0x0,LOCK_ERRORCHECK = 0x2,LOCK_RECURSIVE = 0x4,};
enum MACRO_LOG_CONSMIN {LOG_CONSMIN = 0,LOG_LOGMIN = 5,LOG_BACKLOG = 5,LOG_CLONEMIN = 6,LOG_MAX = 22,LOG_MID = 44,LOG_MINPS = 0,LOG_MAXPS = 1024,LOG_LOWAT = 2048,LOG_HIWAT = 1048576,LOG_MAGIC = -267566839,LOG_RECENTSIZE = 8192,LOG_MINFREE = 4096,LOG_MAXFREE = 8192,LOG_MSGSIZE = 200,};
enum MACRO_MAGIC_BYTES {MAGIC_BYTES = 8,};
enum MACRO_MAPBLOCKOFF {MAPBLOCKOFF = 8191,MAPBLOCKMASK = -8192,};
enum MACRO_MAXASYNCHIO {MAXASYNCHIO = 200,};
enum MACRO_MAXCALLBACK {MAXCALLBACK = 20,};
enum MACRO_MAXHSOFFSET {MAXHSOFFSET = 2047,MAXHSMASK = -2048,};
enum MACRO_MAXLINESIZE {MAXLINESIZE = 80,};
enum MACRO_MAXSYMLINKS {MAXSYMLINKS = 20,MAXNAMELEN = 256,};
enum MACRO_MAX_COMMAND {MAX_COMMAND = 1023,};
enum MACRO_MAX_KEVENTS {MAX_KEVENTS = 512,MAX_ACL_ENTRIES = 1024,};
enum MACRO_MAX_MACHINE {MAX_MACHINE_NAME = 255,};
enum MACRO_MAX_TIMEOUT {MAX_TIMEOUT = 1800000,};
enum MACRO_MHIOCSTATUS {MHIOCSTATUS = 19716,};
enum MACRO_MINSIGSTKSZ {MINSIGSTKSZ = 2048,SIGSTKSZ = 8192,};
enum MACRO_MINSPERHOUR {MINSPERHOUR = 60,};
enum MACRO_MODE_STREAM {MODE_STREAM = 0x1,};
enum MACRO_MODGETDEVID {MODGETDEVID = 11,};
enum MACRO_MODRESERVED {MODRESERVED = 3,MODCONFIG = 4,};
enum MACRO_MOD_EXCLUDE {MOD_EXCLUDE = 0,MOD_INCLUDE = 1,MOD_FORCELOAD = 2,MOD_ROOTDEV = 3,MOD_ROOTFS = 4,MOD_SWAPDEV = 5,MOD_SWAPFS = 6,MOD_MODDIR = 7,MOD_SET = 8,MOD_UNKNOWN = 9,MOD_SET32 = 10,MOD_SET64 = 11,};
enum MACRO_MOD_MAXPATH {MOD_MAXPATH = 256,};
enum MACRO_MOD_SAMEOBJ {MOD_SAMEOBJ = 1024,};
enum MACRO_MONSPERYEAR {MONSPERYEAR = 12,};
enum MACRO_MSG_COMMAND {MSG_COMMAND_COMPLETE = 0x0,MSG_SAVE_DATA_PTR = 0x2,MSG_RESTORE_PTRS = 0x3,MSG_DISCONNECT = 0x4,MSG_INITIATOR_ERROR = 0x5,MSG_ABORT = 0x6,MSG_REJECT = 0x7,MSG_NOP = 0x8,MSG_MSG_PARITY = 0x9,MSG_LINK_CMPLT = 0xA,MSG_LINK_CMPLT_FLAG = 0xB,MSG_DEVICE_RESET = 0xC,MSG_ABORT_TAG = 0xD,MSG_CLEAR_QUEUE = 0xE,MSG_INITIATE_RECOVERY = 0xF,MSG_RELEASE_RECOVERY = 0x10,MSG_TERMINATE_PROCESS = 0x11,MSG_CONTINUE_TASK = 0x12,MSG_TARGET_TRAN_DIS = 0x13,MSG_CLEAR_ACA = 0x16,MSG_EXTENDED = 0x1,MSG_MODIFY_DATA_PTR = 0x0,MSG_SYNCHRONOUS = 0x1,MSG_IDENTIFY_EXTENDED = 0x2,MSG_WIDE_DATA_XFER = 0x3,MSG_SIMPLE_QTAG = 0x20,MSG_HEAD_QTAG = 0x21,MSG_ORDERED_QTAG = 0x22,MSG_IGNORE_WIDE_RESID = 0x23,MSG_ACA = 0x24,MSG_LUN_RESET = 0x25,MSG_IDENTIFY = 0x80,};
enum MACRO_MSIOBUTTONS {MSIOBUTTONS = 27907,};
enum MACRO_MT_NOREWIND {MT_NOREWIND = 4,MT_DENSITY_MASK = 24,MT_DENSITY1 = 0,MT_DENSITY2 = 8,MT_DENSITY3 = 16,MT_DENSITY4 = 24,MT_BSD = 64,};
enum MACRO_NFS3_FHSIZE {NFS3_FHSIZE = 64,NFS3_COOKIEVERFSIZE = 8,NFS3_CREATEVERFSIZE = 8,NFS3_WRITEVERFSIZE = 8,};
enum MACRO_NFS_FHANDLE {NFS_FHANDLE_LEN = 64,};
enum MACRO_NLM_NUMRPCS {NLM_NUMRPCS = 24,};
enum MACRO_NO_AUTHINFO {NO_AUTHINFO = 131072,};
enum MACRO_NO_RECOVERY {NO_RECOVERY = 3,NO_DATA = 4,NO_ADDRESS = 4,};
enum MACRO_NO_TERMINAL {NO_TERMINAL = 2,};
enum MACRO_NO_TIMEOUTS {NO_TIMEOUTS = 0x0,};
enum MACRO_ONBITSMAJOR {ONBITSMAJOR = 7,ONBITSMINOR = 8,};
enum MACRO_OPROMGETOPT {OPROMGETOPT = 20225,};
enum MACRO_OPROMNXTOPT {OPROMNXTOPT = 20227,};
enum MACRO_OPROMSETOPT {OPROMSETOPT = 20226,};
enum MACRO_ORIENTATION {ORIENTATION_LTR = 0x1,ORIENTATION_RTL = 0x2,ORIENTATION_TTBRL = 0x3,ORIENTATION_TTBLR = 0x4,ORIENTATION_CONTEXTUAL = 0x5,};
enum MACRO_O_BITSMAJOR {O_BITSMAJOR = 7,O_BITSMINOR = 8,O_MAXMAJ = 127,O_MAXMIN = 255,};
enum MACRO_Orientation {Orientation = 1,Context = 2,TypeOfText = 4,ImplicitAlg = 8,Swapping = 16,Numerals = 32,TextShaping = 64,ActiveDirectional = 65536,ActiveShapeEditing = 131072,ShapeCharset = 262144,ShapeCharsetSize = 524288,ShapeContextSize = 1048576,InOutTextDescrMask = 2097152,InOnlyTextDescr = 4194304,OutOnlyTextDescr = 8388608,CheckMode = 16777216,QueryValueSize = 33554432,};
enum MACRO_PAD_SAVPATH {PAD_SAVPATH = 0x1,PAD_MLD = 0x2,PAD_NOPATH = 0x4,PAD_ABSPATH = 0x8,PAD_NOATTRB = 0x10,PAD_SUSEROK = 0x20,PAD_SUSERNO = 0x40,PAD_LFLOAT = 0x80,PAD_NOAUDIT = 0x100,PAD_PATHFND = 0x200,PAD_SPRIV = 0x400,PAD_FPRIV = 0x800,PAD_SMAC = 0x1000,PAD_FMAC = 0x2000,PAD_AUDITME = 0x4000,PAD_IFLOAT = 0x8000,PAD_TRUE_CREATE = 0x10000,PAD_CORE = 0x20000,};
enum MACRO_PCFNAMESIZE {PCFNAMESIZE = 8,};
enum MACRO_PCMAXNAMLEN {PCMAXNAMLEN = 255,};
enum MACRO_PCMCIA_PROP {PCMCIA_PROP_UNKNOWN = 0x10000,PCMCIA_PROP_CIS = 0x20000,PCMCIA_PROP_SOCKET = 0x0,PCMCIA_PROP_COMPAT = 0x1,PCMCIA_PROP_DEFAULT_PM = 0x2,PCMCIA_PROP_ACTIVE = 0x3,PCMCIA_PROP_R2TYPE = 0x4,PCMCIA_PROP_CARDBUS = 0x5,PCMCIA_PROP_OLDCS = 0x6,PCMCIA_PROP_REG = 0x7,PCMCIA_PROP_INTR = 0x8,};
enum MACRO_PC_FATBLOCK {PC_FATBLOCK = 1,};
enum MACRO_PR_WORDSIZE {PR_WORDSIZE = 8,PR_MASK = 7,PR_MAX_IO_LEN = 1024,PR_MAX_IO_RANGES = 4,PR_MAX_MEM_LEN = 1024,PR_MAX_MEM_RANGES = 32,PR_MAX_IOADDR = -1,PR_MAX_MEMADDR = -1,PR_MAX_INTERRUPTS = 255,};
enum MACRO_RECALIBRATE {RECALIBRATE = 0x7,SNSISTAT = 0x8,};
enum MACRO_REPORT_TYPE {REPORT_TYPE_INPUT = 0x100,REPORT_TYPE_OUTPUT = 0x200,REPORT_TYPE_FEATURE = 0x300,};
enum MACRO_RJT_INVALID {RJT_INVALID_CMD_CODE = 0x1,RJT_LOGICAL_ERROR = 0x3,RJT_CANT_PERFORM_RQST = 0x9,RJT_CMD_NOT_SUPPORTED = 0xB,};
enum MACRO_SBIOCGCHUNK {SBIOCGCHUNK = 16901,};
enum MACRO_SBIOCGFLAGS {SBIOCGFLAGS = 16905,};
enum MACRO_SBIOCSCHUNK {SBIOCSCHUNK = 16900,};
enum MACRO_SBIOCSFLAGS {SBIOCSFLAGS = 16904,};
enum MACRO_SCALE_PHASE {SCALE_PHASE = 4194304,SCALE_USEC = 65536,SCALE_UPDATE = 4096,};
enum MACRO_SCMD_GROUP0 {SCMD_GROUP0 = 0x0,SCMD_TEST_UNIT_READY = 0x0,SCMD_REQUEST_SENSE = 0x3,SCMD_INQUIRY = 0x12,SCMD_COPY = 0x18,SCMD_GDIAG = 0x1C,SCMD_SDIAG = 0x1D,SCMD_REZERO_UNIT = 0x1,SCMD_FORMAT = 0x4,SCMD_REASSIGN_BLOCK = 0x7,SCMD_READ = 0x8,SCMD_WRITE = 0xA,SCMD_SEEK = 0xB,SCMD_MODE_SELECT = 0x15,SCMD_RESERVE = 0x16,SCMD_RELEASE = 0x17,SCMD_MODE_SENSE = 0x1A,SCMD_START_STOP = 0x1B,SCMD_DOORLOCK = 0x1E,SCMD_REWIND = 0x1,SCMD_READ_BLKLIM = 0x5,SCMD_TRK_SEL = 0xB,SCMD_READ_REVERSE = 0xF,SCMD_WRITE_FILE_MARK = 0x10,SCMD_SPACE = 0x11,SCMD_VERIFY_G0 = 0x13,SCMD_RECOVER_BUF = 0x14,SCMD_ERASE = 0x19,SCMD_LOAD = 0x1B,SCMD_PRINT = 0xA,SCMD_SLEW_PRINT = 0xB,SCMD_FLUSH_PRINT_BUF = 0x10,SCMD_STOP_PRINT = 0x1B,SCMD_RECEIVE = 0x8,SCMD_SEND = 0xA,SCMD_GROUP1 = 0x20,SCMD_COMPARE = 0x39,SCMD_COPY_VERIFY = 0x3A,SCMD_READ_CAPACITY = 0x25,SCMD_READ_G1 = 0x28,SCMD_WRITE_G1 = 0x2A,SCMD_SEEK_G1 = 0x2B,SCMD_WRITE_VERIFY = 0x2E,SCMD_VERIFY = 0x2F,SCMD_SEARCH_HIGH = 0x30,SCMD_SEARCH_EQUAL = 0x31,SCMD_SEARCH_LOW = 0x32,SCMD_SET_LIMITS = 0x33,SCMD_READ_DEFECT_LIST = 0x37,SCMD_WRITE_BUFFER = 0x3B,SCMD_READ_BUFFER = 0x3C,SCMD_RESERVE_G1 = 0x56,SCMD_RELEASE_G1 = 0x57,SCMD_MODE_SELECT_G1 = 0x55,SCMD_MODE_SENSE_G1 = 0x5A,SCMD_GET_CONFIGURATION = 0x46,SCMD_LOG_SENSE_G1 = 0x4D,};
enum MACRO_SCMD_GROUP5 {SCMD_GROUP5 = 0xA0,};
enum MACRO_SD_BECOMING {SD_BECOMING_ACTIVE = 0x1,};
enum MACRO_SD_QUEUEING {SD_QUEUEING = 0x10,SD_NOSERIAL = 0x20,SD_EACCES = 0x1,SD_READY_VALID = 0x0,SD_TUR_FAILED = 0x1,SD_MEDIUM_NOT_PRESENT = 0x2,SD_EINTR = 0x5,SD_CONF_VERSION = 0x1,SD_CONF_SET_THROTTLE = 0x0,SD_CONF_SET_CTYPE = 0x1,SD_CONF_SET_NOTREADY_RETRIES = 0x2,SD_CONF_SET_NOSERIAL = 0x3,SD_CONF_SET_NOCACHE = 0x4,SD_CONF_BSET_THROTTLE = 0x1,SD_CONF_BSET_CTYPE = 0x2,SD_CONF_BSET_NRR_COUNT = 0x4,SD_CONF_BSET_NOSERIAL = 0x8,SD_CONF_BSET_NOCACHE = 0x10,SD_CONF_MAX_ITEMS = 0x5,SD_SPINDLE_OFF = 0x0,SD_SPINDLE_ON = 0x1,};
enum MACRO_SHF_ORDERED {SHF_ORDERED = 0x40000000,SHF_EXCLUDE = 0x80000000,};
enum MACRO_SIOCGIFCONF {SIOCGIFCONF = -1073190636,};
enum MACRO_SI_SHUTDOWN {SI_SHUTDOWN = 18790,SI_LISTEN = 18791,SI_SETMYNAME = 18792,SI_SETPEERNAME = 18793,SI_GETINTRANSIT = 18794,SI_TCL_LINK = 18795,SI_TCL_UNLINK = 18796,SI_SOCKPARAMS = 18797,SI_GETUDATA = 18798,};
enum MACRO_SRIOCSREDIR {SRIOCSREDIR = 480116737,};
enum MACRO_STACK_ALIGN {STACK_ALIGN = 8,STACK_BIAS = 0,};
enum MACRO_ST_OSYSCALL {ST_OSYSCALL = 0x0,ST_BREAKPOINT = 0x1,ST_DIV0 = 0x2,ST_FLUSH_WINDOWS = 0x3,ST_CLEAN_WINDOWS = 0x4,ST_RANGE_CHECK = 0x5,ST_FIX_ALIGN = 0x6,ST_INT_OVERFLOW = 0x7,ST_SYSCALL = 0x8,ST_HOTPATCH_TRAP = 0xA,ST_GETCC = 0x20,ST_SETCC = 0x21,ST_GETPSR = 0x22,ST_SETPSR = 0x23,ST_GETHRTIME = 0x24,ST_GETHRVTIME = 0x25,ST_SELFXCALL = 0x26,ST_GETHRESTIME = 0x27,ST_SETV9STACK = 0x28,ST_TRACE_0 = 0x30,ST_TRACE_1 = 0x31,ST_TRACE_2 = 0x32,ST_TRACE_3 = 0x33,ST_TRACE_4 = 0x34,ST_TRACE_5 = 0x35,ST_TRACE_RESERVED = 0x36,ST_TRACE_WRITE_BUFFER = 0x37,ST_KADB_TRAP = 0x7D,ST_KADB_BREAKPOINT = 0x7E,ST_MON_BREAKPOINT = 0x7F,};
enum MACRO_SYNC_PERIOD {SYNC_PERIOD_MASK = 0x1F,};
enum MACRO_SYS_syscall {SYS_syscall = 0,SYS_exit = 1,SYS_fork = 2,SYS_read = 3,SYS_write = 4,SYS_open = 5,SYS_close = 6,SYS_wait = 7,SYS_creat = 8,SYS_link = 9,SYS_unlink = 10,SYS_exec = 11,SYS_chdir = 12,SYS_time = 13,SYS_mknod = 14,SYS_chmod = 15,SYS_chown = 16,SYS_brk = 17,SYS_stat = 18,SYS_lseek = 19,SYS_getpid = 20,SYS_mount = 21,SYS_umount = 22,SYS_setuid = 23,SYS_getuid = 24,SYS_stime = 25,SYS_pcsample = 26,SYS_alarm = 27,SYS_fstat = 28,SYS_pause = 29,SYS_utime = 30,SYS_stty = 31,SYS_gtty = 32,SYS_access = 33,SYS_nice = 34,SYS_statfs = 35,SYS_sync = 36,SYS_kill = 37,SYS_fstatfs = 38,SYS_pgrpsys = 39,SYS_xenix = 40,SYS_dup = 41,SYS_pipe = 42,SYS_times = 43,SYS_profil = 44,SYS_plock = 45,SYS_setgid = 46,SYS_getgid = 47,SYS_signal = 48,SYS_msgsys = 49,SYS_syssun = 50,SYS_sysi86 = 50,SYS_acct = 51,SYS_shmsys = 52,SYS_semsys = 53,SYS_ioctl = 54,SYS_uadmin = 55,SYS_utssys = 57,SYS_fdsync = 58,SYS_execve = 59,SYS_umask = 60,SYS_chroot = 61,SYS_fcntl = 62,SYS_ulimit = 63,SYS_tasksys = 70,SYS_acctctl = 71,SYS_exacctsys = 72,SYS_reserved_73 = 73,SYS_reserved_74 = 74,SYS_reserved_75 = 75,SYS_reserved_76 = 76,SYS_reserved_77 = 77,SYS_reserved_78 = 78,SYS_rmdir = 79,SYS_mkdir = 80,SYS_getdents = 81,SYS_sysfs = 84,SYS_getmsg = 85,SYS_putmsg = 86,SYS_poll = 87,SYS_lstat = 88,SYS_symlink = 89,SYS_readlink = 90,SYS_setgroups = 91,SYS_getgroups = 92,SYS_fchmod = 93,SYS_fchown = 94,SYS_sigprocmask = 95,SYS_sigsuspend = 96,SYS_sigaltstack = 97,SYS_sigaction = 98,SYS_sigpending = 99,SYS_context = 100,SYS_evsys = 101,SYS_evtrapret = 102,SYS_statvfs = 103,SYS_fstatvfs = 104,SYS_getloadavg = 105,SYS_nfssys = 106,SYS_waitsys = 107,SYS_sigsendsys = 108,SYS_hrtsys = 109,SYS_acancel = 110,SYS_async = 111,SYS_priocntlsys = 112,SYS_pathconf = 113,SYS_mincore = 114,SYS_mmap = 115,SYS_mprotect = 116,SYS_munmap = 117,SYS_fpathconf = 118,SYS_vfork = 119,SYS_fchdir = 120,SYS_readv = 121,SYS_writev = 122,SYS_xstat = 123,SYS_lxstat = 124,SYS_fxstat = 125,SYS_xmknod = 126,SYS_clocal = 127,SYS_setrlimit = 128,SYS_getrlimit = 129,SYS_lchown = 130,SYS_memcntl = 131,SYS_getpmsg = 132,SYS_putpmsg = 133,SYS_rename = 134,SYS_uname = 135,SYS_setegid = 136,SYS_sysconfig = 137,SYS_adjtime = 138,SYS_systeminfo = 139,SYS_seteuid = 141,SYS_vtrace = 142,SYS_fork1 = 143,SYS_sigtimedwait = 144,SYS_lwp_info = 145,SYS_yield = 146,SYS_lwp_sema_wait = 147,SYS_lwp_sema_post = 148,SYS_lwp_sema_trywait = 149,SYS_corectl = 151,SYS_modctl = 152,SYS_fchroot = 153,SYS_utimes = 154,SYS_vhangup = 155,SYS_gettimeofday = 156,SYS_getitimer = 157,SYS_setitimer = 158,SYS_lwp_create = 159,SYS_lwp_exit = 160,SYS_lwp_suspend = 161,SYS_lwp_continue = 162,SYS_lwp_kill = 163,SYS_lwp_self = 164,SYS_lwp_setprivate = 165,SYS_lwp_getprivate = 166,SYS_lwp_wait = 167,SYS_lwp_mutex_wakeup = 168,SYS_lwp_mutex_lock = 169,SYS_lwp_cond_wait = 170,SYS_lwp_cond_signal = 171,SYS_lwp_cond_broadcast = 172,SYS_pread = 173,SYS_pwrite = 174,SYS_llseek = 175,SYS_inst_sync = 176,SYS_srmlimitsys = 177,SYS_kaio = 178,SYS_cpc = 179,SYS_tsolsys = 184,SYS_acl = 185,SYS_auditsys = 186,SYS_processor_bind = 187,SYS_processor_info = 188,SYS_p_online = 189,SYS_sigqueue = 190,SYS_clock_gettime = 191,SYS_clock_settime = 192,SYS_clock_getres = 193,SYS_timer_create = 194,SYS_timer_delete = 195,SYS_timer_settime = 196,SYS_timer_gettime = 197,SYS_timer_getoverrun = 198,SYS_nanosleep = 199,SYS_facl = 200,SYS_door = 201,SYS_setreuid = 202,SYS_setregid = 203,SYS_install_utrap = 204,SYS_signotify = 205,SYS_schedctl = 206,SYS_pset = 207,SYS_sparc_utrap_install = 208,SYS_resolvepath = 209,SYS_signotifywait = 210,SYS_lwp_sigredirect = 211,SYS_lwp_alarm = 212,SYS_getdents64 = 213,SYS_mmap64 = 214,SYS_stat64 = 215,SYS_lstat64 = 216,SYS_fstat64 = 217,SYS_statvfs64 = 218,SYS_fstatvfs64 = 219,SYS_setrlimit64 = 220,SYS_getrlimit64 = 221,SYS_pread64 = 222,SYS_pwrite64 = 223,SYS_creat64 = 224,SYS_open64 = 225,SYS_rpcsys = 226,SYS_so_socket = 230,SYS_so_socketpair = 231,SYS_bind = 232,SYS_listen = 233,SYS_accept = 234,SYS_connect = 235,SYS_shutdown = 236,SYS_recv = 237,SYS_recvfrom = 238,SYS_recvmsg = 239,SYS_send = 240,SYS_sendmsg = 241,SYS_sendto = 242,SYS_getpeername = 243,SYS_getsockname = 244,SYS_getsockopt = 245,SYS_setsockopt = 246,SYS_sockconfig = 247,SYS_ntp_gettime = 248,SYS_ntp_adjtime = 249,SYS_lwp_mutex_unlock = 250,SYS_lwp_mutex_trylock = 251,SYS_lwp_mutex_init = 252,SYS_cladm = 253,SYS_lwp_sigtimedwait = 254,SYS_umount2 = 255,};
enum MACRO_TCL_BADADDR {TCL_BADADDR = 22,TCL_BADOPT = 22,TCL_NOPEER = 14,TCL_PEERBADSTATE = 71,};
enum MACRO_TCP_ISSINCR {TCP_ISSINCR = 128000,};
enum MACRO_TEXT_SHAPED {TEXT_SHAPED = 0x1000000,TEXT_NOMINAL = 0x2000000,TEXT_SHFORM1 = 0x3000000,TEXT_SHFORM2 = 0x4000000,TEXT_SHFORM3 = 0x5000000,TEXT_SHFORM4 = 0x6000000,};
enum MACRO_TNOTSUPPORT {TNOTSUPPORT = 18,};
enum MACRO_TPLFMTFLAGS {TPLFMTFLAGS_ADDR = 0x1,TPLFMTFLAGS_AUTO = 0x2,};
enum MACRO_TS_NOCHANGE {TS_NOCHANGE = -32768,TS_GETDPSIZE = 1,TS_GETDPTBL = 2,TS_SETDPTBL = 3,};
enum MACRO_USCSIGETRQS {USCSIGETRQS = 1226,};
enum MACRO_VOLIOCCHECK {VOLIOCCHECK = 30213,};
enum MACRO_VOLIOCDROOT {VOLIOCDROOT = 30225,};
enum MACRO_VOLIOCEJECT {VOLIOCEJECT = 30212,};
enum MACRO_VOLIOCEVENT {VOLIOCEVENT = 30211,};
enum MACRO_VOLIOCFLAGS {VOLIOCFLAGS = 30224,};
enum MACRO_VOLIOCGATTR {VOLIOCGATTR = 30221,};
enum MACRO_VOLIOCINUSE {VOLIOCINUSE = 30214,};
enum MACRO_VOLIOCSATTR {VOLIOCSATTR = 30220,};
enum MACRO_VOLIOCUNMAP {VOLIOCUNMAP = 30210,};
enum MACRO_VUIDGFORMAT {VUIDGFORMAT = 30210,};
enum MACRO_VUIDSFORMAT {VUIDSFORMAT = 30209,};
enum MACRO_VUID_NATIVE {VUID_NATIVE = 0,VUID_FIRM_EVENT = 1,};
enum MACRO_WCHAR_SHIFT {WCHAR_SHIFT = 7,WCHAR_S_MASK = 127,WCHAR_CSMASK = 805306368,};
enum MACRO__FIOCNVTMNT {_FIOCNVTMNT = 536897104,};
enum MACRO__FIOISLOGOK {_FIOISLOGOK = 536897097,};
enum MACRO__STRUCTURED {_STRUCTURED_PROC = 1,};
typedef void *OCF_EventHandle_t;
typedef struct OCF_OCF_ReadersList_t *OCF_ReadersList_t;
struct _FN_bindinglist_t;
struct _FN_compound_name;
struct _FN_search_filter;
struct _FN_status_asvc_t;
struct _FN_status_csvc_t;
struct _FN_status_psvc_t;
typedef struct _58179321A8150557048736423AF6F76C _LC_core_locale_t;
struct _pthread_condattr {void *__pthread_condattrp;};
typedef struct ami_private_key *ami_private_key_t;
typedef struct ami_session_key *ami_session_key_t;
typedef struct au_header32_tok au_header32_tok_t;
typedef struct au_header64_tok au_header64_tok_t;
typedef struct au_ipc_perm_tok au_ipc_perm_tok_t;
typedef char *bp_machine_name_t;
enum cachefs_connected {CFS_CD_CONNECTED = 0x801,CFS_CD_DISCONNECTED = 0x802,CFS_CD_RECONNECTING = 0x803,};
typedef struct cachefs_rl_info cachefs_rl_info_t;
typedef struct cachefsio_mkdir cachefsio_mkdir_t;
typedef struct cachefsio_rmdir cachefsio_rmdir_t;
typedef char cfga_ap_phys_id_t[1024];
typedef struct _D52C4F604E0EF4858A4DDDAA58B8A08E chapPasswdEntry_t;
typedef void *ddi_devmap_data_t;
typedef struct devctl_ap_state devctl_ap_state_t;
typedef struct _151922ADF64B06A7DAF3138A8711D7E7 dl_data_ack_ind_t;
typedef struct _7B9922258B8A0A4B0B5326F3B4359CE8 dl_data_ack_req_t;
typedef struct _CB6AA1DC15048494E8DB562E85E5F184 dl_unitdata_ind_t;
typedef struct _187C6244C967198C5905B382B0BFB5FB dl_unitdata_req_t;
typedef struct FC2_FRAME_HDR fc_frame_header_t;
enum fp_direction_type {fp_nearest = 0x0,fp_tozero = 0x1,fp_positive = 0x2,fp_negative = 0x3,};
enum fp_exception_type {fp_inexact = 0x0,fp_division = 0x1,fp_underflow = 0x2,fp_overflow = 0x3,fp_invalid = 0x4,};
enum fp_precision_type {fp_extended = 0x0,fp_single = 0x1,fp_double = 0x2,fp_precision_3 = 0x3,};
typedef struct isdn_format_req isdn_format_req_t;
enum isdn_message_type {ISDN_VPH_VENDOR = 0x0,ISDN_PH_AI = 0x1,ISDN_PH_DI = 0x2,ISDN_PH_AR = 0x3,ISDN_PH_DATA_RQ = 0x4,ISDN_PH_DATA_IN = 0x5,ISDN_MPH_AI = 0x6,ISDN_MPH_DI = 0x7,ISDN_MPH_EI1 = 0x8,ISDN_MPH_EI2 = 0x9,ISDN_MPH_II_C = 0xA,ISDN_MPH_II_D = 0xB,};
typedef struct la_els_identify la_els_identify_t;
typedef struct ldterm_mod ldtermstd_state_t;
typedef struct llc2GetConStats llc2GetConStats_t;
typedef struct llc2GetSapStats llc2GetSapStats_t;
typedef struct llc2GetStaStats llc2GetStaStats_t;
typedef struct lock_descriptor lock_descriptor_t;
typedef struct mhioc_resv_desc mhioc_resv_desc_t;
typedef struct pm_state_change pm_state_change_t;
typedef struct prop_handle_ops prop_handle_ops_t;
struct rpc_gss_principal {int len;char name[1];};
typedef struct _2FF20837F70D0E9E2C94D4E9C91813B8 rpc_gss_rawcred_t;
typedef struct sf_al_addr_pair sf_al_addr_pair_t;
typedef struct sf_target_stats sf_target_stats_t;
typedef struct space_bmap_desc space_bmap_desc_t;
typedef struct tnf_file_header tnf_file_header_t;
typedef struct tnf_probe_setup tnf_probe_setup_t;
typedef struct _tnf_tag_version tnf_tag_version_t;
enum ufsd_fsck_state_t {UFSDFS_NONE = 0x0,UFSDFS_DISPATCH = 0x1,UFSDFS_ERREXIT = 0x2,UFSDFS_SUCCESS = 0x3,};
typedef struct unall_space_ent unall_space_ent_t;
typedef struct usb_pipe_handle *usb_pipe_handle_t;
typedef struct usb_pipe_policy usb_pipe_policy_t;
typedef struct vt_elapsed_time vt_elapsed_time_t;
typedef struct vt_process_fork vt_process_fork_t;
typedef struct vt_process_name vt_process_name_t;
typedef struct FC2_FRAME_HDR *FC2_FRAME_HDRptr;
typedef struct _FN_attrmodlist FN_attrmodlist_t;
typedef struct _FN_bindinglist_t FN_bindinglist_t;
typedef struct _FN_status_asvc_t FN_status_asvc_t;
typedef struct _FN_status_csvc_t FN_status_csvc_t;
typedef struct _FN_status_psvc_t FN_status_psvc_t;
enum MACRO_ACCOUNTING {ACCOUNTING = 9,};
enum MACRO_ACKTIMEOUT {MIN_ACKTIMEOUT = 5,MAX_ACKTIMEOUT = 7200,};
enum MACRO_ADDRSTRLEN {INET_ADDRSTRLEN = 16,INET6_ADDRSTRLEN = 46,};
enum MACRO_AIOAREAD64 {AIOAREAD64 = 17,};
enum MACRO_AIOERROR64 {AIOERROR64 = 15,AIOLIOWAIT64 = 16,};
enum MACRO_AIOLIOWAIT {AIOLIOWAIT = 10,};
enum MACRO_ATTR_UTIME {ATTR_UTIME = 0x1,ATTR_EXEC = 0x2,ATTR_COMM = 0x4,ATTR_HINT = 0x8,ATTR_REAL = 0x10,};
enum MACRO_AUDIO_INIT {AUDIO_INIT = 0x20,AUDIO_INIT_INIT = 0x2101,AUDIO_MUX = 0x40,AUDIO_MUX_MCR1 = 0x4101,AUDIO_MUX_MCR2 = 0x4201,AUDIO_MUX_MCR3 = 0x4301,AUDIO_MUX_MCR4 = 0x4401,AUDIO_MAP = 0x60,AUDIO_MAP_X = 0x6110,AUDIO_MAP_R = 0x6210,AUDIO_MAP_GX = 0x6302,AUDIO_MAP_GR = 0x6402,AUDIO_MAP_GER = 0x6502,AUDIO_MAP_STG = 0x6602,AUDIO_MAP_FTGR = 0x6702,AUDIO_MAP_ATGR = 0x6802,AUDIO_MAP_MMR1 = 0x6901,AUDIO_MAP_MMR2 = 0x6A01,AUDIO_MAP_ALL = 0x6B2E,AUDIO_MAP_GX_MIN = 0x0,AUDIO_MAP_GX_MAX = 0xC,AUDIO_MAP_GR_MIN = 0xFFFFFFF4,AUDIO_MAP_GR_MAX = 0x0,AUDIO_MAP_GER_MIN = 0xFFFFFFF6,AUDIO_MAP_GER_MAX = 0x12,AUDIO_MAP_STG_MIN = 0xFFFFFFEE,AUDIO_MAP_STG_MAX = 0x0,AUDIO_MAP_FTGR_MIN = 0x10,AUDIO_MAP_FTGR_MAX = 0xF9F,AUDIO_MAP_ATGR_MIN = 0xFFFFFFEE,AUDIO_MAP_ATGR_MAX = 0x0,AUDIO_INIT_BITS_IDLE = 0x0,AUDIO_INIT_BITS_ACTIVE = 0x1,AUDIO_INIT_BITS_NOMAP = 0x20,AUDIO_INIT_BITS_INT_ENABLED = 0x0,AUDIO_INIT_BITS_INT_DISABLED = 0x4,AUDIO_INIT_BITS_CLOCK_DIVIDE_2 = 0x0,AUDIO_INIT_BITS_CLOCK_DIVIDE_1 = 0x8,AUDIO_INIT_BITS_CLOCK_DIVIDE_4 = 0x10,AUDIO_INIT_BITS_CLOCK_DIVIDE_3 = 0x20,AUDIO_INIT_BITS_RECEIVE_ABORT = 0x40,AUDIO_INIT_BITS_TRANSMIT_ABORT = 0x80,AUDIO_MUX_PORT_NONE = 0x0,AUDIO_MUX_PORT_B1 = 0x1,AUDIO_MUX_PORT_B2 = 0x2,AUDIO_MUX_PORT_BA = 0x3,AUDIO_MUX_PORT_BB = 0x4,AUDIO_MUX_PORT_BC = 0x5,AUDIO_MUX_PORT_BD = 0x6,AUDIO_MUX_PORT_BE = 0x7,AUDIO_MUX_PORT_BF = 0x8,AUDIO_MUX_MCR4_BITS_INT_ENABLE = 0x8,AUDIO_MUX_MCR4_BITS_INT_DISABLE = 0x0,AUDIO_MUX_MCR4_BITS_REVERSE_BB = 0x10,AUDIO_MUX_MCR4_BITS_REVERSE_BC = 0x20,AUDIO_MMR1_BITS_A_LAW = 0x1,AUDIO_MMR1_BITS_u_LAW = 0x0,AUDIO_MMR1_BITS_LOAD_GX = 0x2,AUDIO_MMR1_BITS_LOAD_GR = 0x4,AUDIO_MMR1_BITS_LOAD_GER = 0x8,AUDIO_MMR1_BITS_LOAD_X = 0x10,AUDIO_MMR1_BITS_LOAD_R = 0x20,AUDIO_MMR1_BITS_LOAD_STG = 0x40,AUDIO_MMR1_BITS_LOAD_DLB = 0x80,AUDIO_MMR2_BITS_AINA = 0x0,AUDIO_MMR2_BITS_AINB = 0x1,AUDIO_MMR2_BITS_EAR = 0x0,AUDIO_MMR2_BITS_LS = 0x2,AUDIO_MMR2_BITS_DTMF = 0x4,AUDIO_MMR2_BITS_TONE = 0x8,AUDIO_MMR2_BITS_RINGER = 0x10,AUDIO_MMR2_BITS_HIGH_PASS = 0x20,AUDIO_MMR2_BITS_AUTOZERO = 0x40,};
enum MACRO_AU_BUFSIZE {AU_BUFSIZE = 128,AU_PAGE = 4096,};
enum MACRO_BMAC_TPAL1 {BMAC_TPAL1_XM_SERIAL = 1,BMAC_TPAL1_LB = 2,BMAC_TPAL1_MS = 4,BMAC_TPAL1_LINKTESTEN = 8,BMAC_TPAL1_LINKSTATUS = 16,BMAC_TPAL1_PGYBAC_DIS = 1,BMAC_TPAL1_LOOP_EN = 2,BMAC_TPAL1_CLK_LOOP_EN = 4,BMAC_TPAL1_CLK_FSTSLW = 8,BMAC_TPAL2_MDC_BIT_POS = 0,BMAC_TPAL2_MDIO_EN_BIT_POS = 1,BMAC_TPAL2_MII_MDIO_BIT_POS = 2,BMAC_TPAL2_PGYBAC_MDIO_BIT_POS = 3,BMAC_TPAL2_MDC = 1,BMAC_TPAL2_MDIO_EN = 2,BMAC_TPAL2_MII_MDIO = 4,BMAC_TPAL2_PGYBAC_MDIO = 8,BMAC_EXTERNAL_PHYAD = 0,BMAC_INTERNAL_PHYAD = 1,BMAC_MII_CTLREG = 0,BMAC_MII_STATREG = 1,BMAC_MII_CTL_RESET = 32768,BMAC_MII_CTL_LOOPBACK = 16384,BMAC_MII_CTL_SPEED_100 = 8192,BMAC_MII_CTL_AUTO_SPEED = 4096,BMAC_MII_CTL_POWER_DOWN = 2048,BMAC_MII_CTL_ISOLATE = 1024,BMAC_MII_STAT_LINKUP = 4,BMAC_MII_STAT_JABBER = 2,BMAC_MII_STAT_EXT_CAP = 1,};
enum MACRO_BOTTOMFUNC {BOTTOMFUNC = 0x630,};
enum MACRO_BPP_ISOPEN {BPP_ISOPEN = 0x1,BPP_SUSPENDED = 0x2,BPP_VERSATEC = 0x4,BPP_BUSY = 0x8,BPP_ISWAITING = 0x10,};
enum MACRO_BT_ULSHIFT {BT_ULSHIFT = 5,BT_NBIPUL = 32,BT_ULMASK = 31,BT_ULMAXMASK = -1,};
enum MACRO_BUS_ACTIVE {BUS_ACTIVE = 0x10,BUS_QUIESCED = 0x20,BUS_SHUTDOWN = 0x40,};
enum MACRO_CDROMEJECT {CDROMEJECT = 1183,};
enum MACRO_CDROMPAUSE {CDROMPAUSE = 1175,};
enum MACRO_CDROMSTART {CDROMSTART = 1182,};
enum MACRO_CDROM_MODE {CDROM_MODE_SPEED = 0x31,};
enum MACRO_CFSVERSION {CFSVERSION = 6,};
enum MACRO_CISTPL_EXT {CISTPL_EXT_BIT = 0x80,CISTPL_DEVSPEED_TABLE = 0x1,CISTPL_DEVSPEED_EXT = 0x2,CISTPL_DEVSPEED_MAX_TBL = 0x8,CISTPL_DEVSPEED_MAX_EXP = 0x8,CISTPL_DEVSPEED_MAX_MAN = 0x10,CISTPL_DEVICE_DTYPE_NULL = 0x0,CISTPL_DEVICE_DTYPE_ROM = 0x1,CISTPL_DEVICE_DTYPE_OTPROM = 0x2,CISTPL_DEVICE_DTYPE_EPROM = 0x3,CISTPL_DEVICE_DTYPE_EEPROM = 0x4,CISTPL_DEVICE_DTYPE_FLASH = 0x5,CISTPL_DEVICE_DTYPE_SRAM = 0x6,CISTPL_DEVICE_DTYPE_DRAM = 0x7,CISTPL_DEVICE_DTYPE_RSVD_8 = 0x8,CISTPL_DEVICE_DTYPE_RSVD_9 = 0x9,CISTPL_DEVICE_DTYPE_RSVD_a = 0xA,CISTPL_DEVICE_DTYPE_RSVD_b = 0xB,CISTPL_DEVICE_DTYPE_RSVD_c = 0xC,CISTPL_DEVICE_DTYPE_FUNCSPEC = 0xD,CISTPL_DEVICE_DTYPE_EXTEND = 0xE,CISTPL_DEVICE_DTYPE_RSVD_f = 0xF,CISTPL_DEVICE_WPS = 0x1,CISTPL_DEVICE_OC_MWAIT = 0x10000,CISTPL_DEVICE_OC_Vcc_MASK = 0x60000,CISTPL_DEVICE_OC_Vcc5 = 0x0,CISTPL_DEVICE_OC_Vcc33 = 0x20000,CISTPL_DEVICE_OC_VccXX = 0x40000,CISTPL_DEVICE_OC_VccYY = 0x60000,CISTPL_DEVICE_MAX_DEVICES = 0xA,CISTPL_DEVICE_SPEED_SIZE_IGNORE = 0xFF,CISTPL_CONFIG_MAX_CONFIG_REGS = 0x80,CISTPL_VERS_1_MAX_PROD_STRINGS = 0x4,CISTPL_JEDEC_MAX_IDENTIFIERS = 0x4,};
enum MACRO_CLASS_CODE {MASS_STORAGE_CLASS_CODE = 8,HUB_CLASS_CODE = 9,};
enum MACRO_C_NOCOMMIT {C_NOCOMMIT = 0,C_COMMIT = 1,C_DELAYCOMMIT = 2,};
enum MACRO_C_SENDCHAR {C_SENDCHAR = 1,C_NEW = 2,C_UNBLK = 3,C_DELETE = 4,C_EXIT = 5,C_DEFUNCT = 6,C_SENDNCHARS = 7,C_RESHAPE = 8,C_RUN = 9,C_NOFLOW = 10,C_YESFLOW = 11,};
enum MACRO_DC_CLSLEEP {DC_CLSLEEP = 0,DC_CLNOSLEEP = 1,};
enum MACRO_DINFOFORCE {DINFOFORCE = 0xDF20,};
enum MACRO_DINFOIDENT {DINFOIDENT = 0xDF82,};
enum MACRO_DINFOLODRV {DINFOLODRV = 0xDF81,};
enum MACRO_DINFOMINOR {DINFOMINOR = 0xDF02,};
enum MACRO_DINFOUSRLD {DINFOUSRLD = 0xDF80,};
enum MACRO_DKIOCEJECT {DKIOCEJECT = 1030,};
enum MACRO_DKIOCGGEOM {DKIOCGGEOM = 1025,};
enum MACRO_DKIOCGVTOC {DKIOCGVTOC = 1035,};
enum MACRO_DKIOCSGEOM {DKIOCSGEOM = 1026,};
enum MACRO_DKIOCSTATE {DKIOCSTATE = 1037,};
enum MACRO_DKIOCSVTOC {DKIOCSVTOC = 1036,};
enum MACRO_DK_UNKNOWN {DK_UNKNOWN = 0x0,DK_MO_ERASABLE = 0x3,DK_MO_WRITEONCE = 0x4,DK_AS_MO = 0x5,DK_CDROM = 0x8,DK_CDR = 0x9,DK_CDRW = 0xA,DK_DVDROM = 0x10,DK_DVDR = 0x11,DK_DVDRAM = 0x12,DK_FIXED_DISK = 0x10001,DK_FLOPPY = 0x10002,DK_ZIP = 0x10003,DK_JAZ = 0x10004,};
enum MACRO_DL_MAXPRIM {DL_MAXPRIM = 53,};
enum MACRO_DRAIN_SIZE {MIN_DRAIN_SIZE = 4,MAX_DRAIN_SIZE = 1024,};
enum MACRO_DRT_CHANGE {DRT_CHANGE_DEFAULT = 6144,DRT_CHANGE_MASK = 4032,};
enum MACRO_DUMP_MAGIC {DUMP_MAGIC = 0xDEFEC8ED,DUMP_VERSION = 0x9,DUMP_PANICSIZE = 0xC8,DUMP_COMPRESS_RATIO = 0x2,DUMP_OFFSET = 0x10000,DUMP_LOGSIZE = 0x200000,};
enum MACRO_D_MTOCEXCL {D_MTOCEXCL = 0x800,D_MTPUTSHARED = 0x1000,D_MTPERQ = 0x2000,D_MTQPAIR = 0x4000,D_MTPERMOD = 0x6000,D_MTOUTPERIM = 0x8000,};
enum MACRO_ELFCLASS64 {ELFCLASS64_INTC = 200,};
enum MACRO_ELFDATANUM {ELFDATANUM = 3,};
enum MACRO_ERRTIMEOUT {MIN_ERRTIMEOUT = 1,MAX_ERRTIMEOUT = 480,};
enum MACRO_ETHERADDRL {ETHERADDRL = 6,};
enum MACRO_EUC_TWIDTH {EUC_TWIDTH = 255,EUC_BSWIDTH = 254,EUC_NLWIDTH = 253,EUC_CRWIDTH = 252,};
enum MACRO_EXACCT_MAX {EXACCT_MAX_BUFSIZE = 65536,};
enum MACRO_EXPER_IGMP {EXPER_IGMP = 1025,EXPER_DVMRP = 1026,EXPER_RAWIP = 1027,EXPER_RANGE_START = 1025,EXPER_RANGE_END = 1027,};
enum MACRO_EX_CURRENT {EX_CURRENT_VERSION = 2,EX_NOSUID = 1,EX_ACLOK = 2,EX_PUBLIC = 4,EX_NOSUB = 8,EX_INDEX = 16,EX_LOG = 32,EX_LOG_ALLOPS = 64,};
enum MACRO_EX_SUCCESS {EX_SUCCESS = 0,EX_NO_PERM = 1,EX_SYNTAX = 2,EX_BADARG = 3,EX_ID_EXISTS = 4,EX_INCONSISTENT = 5,EX_NAME_NOT_EXIST = 6,EX_MISSING = 7,EX_BUSY = 8,EX_NAME_EXISTS = 9,EX_UPDATE = 10,EX_NOSPACE = 11,EX_HOMEDIR = 12,EX_NL_USED = 13,EX_FAILURE = 14,};
enum MACRO_FBIOGVIDEO {FBIOGVIDEO = 17928,};
enum MACRO_FBIOGXINFO {FBIOGXINFO = 17959,};
enum MACRO_FBIOSVIDEO {FBIOSVIDEO = 17927,};
enum MACRO_FBIOSWINFD {FBIOSWINFD = 17940,};
enum MACRO_FD_CLOEXEC {FD_CLOEXEC = 1,};
enum MACRO_FD_NUMPART {FD_NUMPART = 4,};
enum MACRO_FLK_UNLOCK {FLK_UNLOCK = 0x1,FLK_DOWNGRADE = 0x2,FLK_UPGRADE = 0x3,FLK_STAY_SAME = 0x4,};
enum MACRO_FS_GENERAL {FS_GENERAL_MULTICAST = 0xFFFFF7,FS_WELL_KNOWN_MULTICAST = 0xFFFFF8,FS_HUNT_GROUP = 0xFFFFF9,FS_MANAGEMENT_SERVER = 0xFFFFFA,FS_TIME_SERVER = 0xFFFFFB,FS_NAME_SERVER = 0xFFFFFC,FS_FABRIC_CONTROLLER = 0xFFFFFD,FS_FABRIC_F_PORT = 0xFFFFFE,FS_BROADCAST = 0xFFFFFF,};
enum MACRO_FS_RECLAIM {FS_RECLAIM = 0x1,FS_RECLAIMING = 0x2,FS_CHECKCLEAN = 0x4,FS_CHECKRECLAIM = 0x8,FS_OPTTIME = 0x0,FS_OPTSPACE = 0x1,FS_42POSTBLFMT = 0xFFFFFFFF,FS_DYNAMICPOSTBLFMT = 0x1,};
enum MACRO_FULLSCREEN {FULLSCREEN = 0x10,};
enum MACRO_GETCONTEXT {GETCONTEXT = 0,SETCONTEXT = 1,};
enum MACRO_GRABATTACH {GRABATTACH = 17932,};
enum MACRO_HDKIOCGBAD {HDKIOCGBAD = 1128,};
enum MACRO_HDKIOCSBAD {HDKIOCSBAD = 1127,};
enum MACRO_HDKIOCSCMD {HDKIOCSCMD = 1129,};
enum MACRO_HEADERSIZE {HEADERSIZE = 128,};
enum MACRO_HME_PHYRST {HME_PHYRST_MAXDELAY = 500,HME_MIF_CFGPS = 1,HME_MIF_CFGPE = 2,HME_MIF_CFGBB = 4,HME_MIF_CFGPR = 248,HME_MIF_CFGM0 = 256,HME_MIF_CFGM1 = 512,HME_MIF_CFGPD = 31744,HME_MIF_CFGPR_SHIFT = 3,HME_MIF_CFGPD_SHIFT = 10,HME_MIF_POLL_DELAY = 200,HME_INTERNAL_PHYAD = 1,HME_EXTERNAL_PHYAD = 0,HME_MIF_INTMASK = 65535,HME_MIF_STATUS = 65535,HME_MIF_BASIC = 4294901760,HME_MIF_FSM = 1023,};
enum MACRO_HOSTNAMESZ {HOSTNAMESZ = 32,};
enum MACRO_IFPIOCGMAP {IFPIOCGMAP = 55809,};
enum MACRO_IPV6_RTHDR {IPV6_RTHDR_TYPE_0 = 0,IPV6_UNICAST_HOPS = 5,IPV6_MULTICAST_IF = 6,IPV6_MULTICAST_HOPS = 7,IPV6_MULTICAST_LOOP = 8,IPV6_JOIN_GROUP = 9,IPV6_LEAVE_GROUP = 10,IPV6_ADD_MEMBERSHIP = 9,IPV6_DROP_MEMBERSHIP = 10,IPV6_PKTINFO = 11,IPV6_HOPLIMIT = 12,IPV6_NEXTHOP = 13,IPV6_HOPOPTS = 14,IPV6_DSTOPTS = 15,IPV6_RTHDR = 16,IPV6_RTHDRDSTOPTS = 17,IPV6_RECVPKTINFO = 18,IPV6_RECVHOPLIMIT = 19,IPV6_RECVHOPOPTS = 20,IPV6_RECVDSTOPTS = 21,IPV6_RECVRTHDR = 22,IPV6_RECVRTHDRDSTOPTS = 23,IPV6_CHECKSUM = 24,IPV6_BOUND_IF = 65,IPV6_UNSPEC_SRC = 66,};
enum MACRO_IP_FORWARD {IP_FORWARD_NEVER = 0,IP_FORWARD_ALWAYS = 1,};
enum MACRO_ISO_SECTOR {ISO_SECTOR_SIZE = 2048,ISO_SECTOR_SHIFT = 11,ISO_SYSAREA_SEC = 0,ISO_VOLDESC_SEC = 16,};
enum MACRO_KIOCABORT1 {KIOCABORT1 = -1,};
enum MACRO_KIOCABORT2 {KIOCABORT2 = -2,};
enum MACRO_KIOCGETKEY {KIOCGETKEY = 27394,};
enum MACRO_KIOCGTRANS {KIOCGTRANS = 27397,};
enum MACRO_KIOCLAYOUT {KIOCLAYOUT = 27412,};
enum MACRO_KIOCSETKEY {KIOCSETKEY = 27393,};
enum MACRO_LANCEALIGN {LANCEALIGN = 8,};
enum MACRO_LARGEBUFSZ {LARGEBUFSZ = 512,};
enum MACRO_LI_ENFORCE {LI_ENFORCE = 0x1,LI_UPDATE = 0x2,LI_ALLOC = 0x4,LI_FREE = 0x8,LI_DUP = 0x10,};
enum MACRO_LM_IGNORED {LM_IGNORED = 0xFF,};
enum MACRO_LS_SECTORS {LS_SECTORS = 2,};
enum MACRO_MAP_FAILED {MAP_FAILED = -1,};
enum MACRO_MAXALIASES {MAXALIASES = 35,};
enum MACRO_MAXBOFFSET {MAXBOFFSET = 8191,MAXBMASK = -8192,};
enum MACRO_MAXDFLSRCH {MAXDFLSRCH = 3,};
enum MACRO_MAXSYSARGS {MAXSYSARGS = 8,};
enum MACRO_MAX_MNTOPT {MAX_MNTOPT_TAG = 64,};
enum MACRO_MAX_NETOBJ {MAX_NETOBJ_SZ = 1024,};
enum MACRO_MAX_PASSWD {MAX_PASSWD_LENGTH = 32,};
enum MACRO_MC_NOCANON {MC_NOCANON = 0,MC_DOCANON = 1,MC_CANONQUERY = 2,MC_SERVICEIMM = 3,MC_SERVICEDEF = 4,MC_NOIFLAG = 5,MC_NOOFLAG = 6,MC_NOLFLAG = 7,};
enum MACRO_MHIOCTKOWN {MHIOCTKOWN = 19714,};
enum MACRO_MHIOC_RESV {MHIOC_RESV_KEY_SIZE = 8,};
enum MACRO_MIB2_IP_20 {MIB2_IP_20 = 20,MIB2_IP_21 = 21,MIB2_IP_22 = 22,MIB2_TCP_CONN = 13,MIB2_TCP6_CONN = 14,MIB2_TCP_13 = 13,MIB2_TCP_closed = 1,MIB2_TCP_listen = 2,MIB2_TCP_synSent = 3,MIB2_TCP_synReceived = 4,MIB2_TCP_established = 5,MIB2_TCP_finWait1 = 6,MIB2_TCP_finWait2 = 7,MIB2_TCP_closeWait = 8,MIB2_TCP_lastAck = 9,MIB2_TCP_closing = 10,MIB2_TCP_timeWait = 11,MIB2_TCP_deleteTCB = 12,MIB2_UDP_ENTRY = 5,MIB2_UDP6_ENTRY = 6,MIB2_UDP_5 = 5,MIB2_UDP_unbound = 1,MIB2_UDP_idle = 2,MIB2_UDP_connected = 3,MIB2_UDP_unknown = 4,};
enum MACRO_MINFRAME32 {MINFRAME32 = 92,};
enum MACRO_MODGETNAME {MODGETNAME = 9,};
enum MACRO_MODGETPATH {MODGETPATH = 6,};
enum MACRO_MODMAXLINK {MODMAXLINK = 10,};
enum MACRO_MOD_OFFSET {MOD_OFFSET = 0x1,MOD_FREQUENCY = 0x2,MOD_MAXERROR = 0x4,MOD_ESTERROR = 0x8,MOD_STATUS = 0x10,MOD_TIMECONST = 0x20,MOD_CLKB = 0x4000,MOD_CLKA = 0x8000,};
enum MACRO_MOD_SHARED {MOD_SHARED = 1,MOD_EXCL = 2,};
enum MACRO_MOUSELDISC {MOUSELDISC = 5,};
enum MACRO_MTIOCLRERR {MTIOCLRERR = 27910,};
enum MACRO_MTIOCSTATE {MTIOCSTATE = 27917,};
enum MACRO_NAMESERVER {NAMESERVER_PORT = 53,};
enum MACRO_NBITSMAJOR {NBITSMAJOR = 14,};
enum MACRO_NBITSMINOR {NBITSMINOR = 18,};
enum MACRO_NDENSITIES {NDENSITIES = 4,};
enum MACRO_NFS_ACL_V3 {NFS_ACL_V3 = 3,};
enum MACRO_NLSUNKNOWN {NLSUNKNOWN = 3,NLSDISABLED = 4,};
enum MACRO_NOTPRESENT {NOTPRESENT = 0xFF,};
enum MACRO_NPRXFILLER {NPRXFILLER = 8,};
enum MACRO_OBP_NONODE {OBP_NONODE = 0,OBP_BADNODE = -1,OBP_MAXDRVNAME = 32,OBP_MAXPROPNAME = 32,OBP_MAXPATHLEN = 256,OBP_STACKDEPTH = 85,};
enum MACRO_OPROMCHILD {OPROMCHILD = 20230,};
enum MACRO_O_ONEVALUE {O_ONEVALUE = 0x1,O_SHOWDESC = 0x2,O_ROWMAJOR = 0x4,O_IGNORECASE = 0x8,O_SHOWMATCH = 0x10,O_NONCYCLIC = 0x20,O_SELECTABLE = 0x1,};
enum MACRO_PAGELENGTH {PAGELENGTH_MODE_CONTROL_SCSI3 = 0xA,};
enum MACRO_PCA_RDONLY {PCA_RDONLY = 0x1,PCA_HIDDEN = 0x2,PCA_SYSTEM = 0x4,PCA_LABEL = 0x8,PCA_DIR = 0x10,PCA_ARCH = 0x20,};
enum MACRO_PCFEXTSIZE {PCFEXTSIZE = 3,PCMAXPATHLEN = 1024,};
enum MACRO_PCMCIA_MAX {PCMCIA_MAX_FUNCTIONS = 8,};
enum MACRO_PC_SECSIZE {PC_SECSIZE = 512,};
enum MACRO_PC_SUCCESS {PC_SUCCESS = 1,PC_FAILURE = 0,PC_MEM_AM = 0,PC_MEM_CM = 1,};
enum MACRO_PER_TARGET {NLUNS_PER_TARGET = 8,SCSI_16LUNS_PER_TARGET = 16,SCSI_32LUNS_PER_TARGET = 32,SCSI_1LUN_PER_TARGET = 1,};
enum MACRO_PI_TYPELEN {PI_TYPELEN = 16,PI_FPUTYPE = 32,};
enum MACRO_PMAPVERS_0 {PMAPVERS = 2,};
enum MACRO_POLLWRNORM {POLLWRNORM = 4,POLLRDBAND = 128,POLLWRBAND = 256,};
enum MACRO_PPC_STROBE {PPC_STROBE_W = 2,PPC_DATA_SETUP = 2,PPC_ACK_TIMEOUT = 60,PPC_ERR_TIMEOUT = 5,PPC_BSY_TIMEOUT = 10,PPC_ACK_POLL = 5,PPC_ERRMSG_TIME = 40,};
enum MACRO_PRECOMPMSK {PRECOMPMSK = 0x1C,};
enum MACRO_PROC_CHUNK {PROC_CHUNK = 100,};
enum MACRO_PROTOTYPES {PROTOTYPES = 1,};
enum MACRO_PR_STOPPED {PR_STOPPED = 0x1,PR_ISTOP = 0x2,PR_DSTOP = 0x4,PR_STEP = 0x8,PR_ASLEEP = 0x10,PR_PCINVAL = 0x20,PR_ASLWP = 0x40,PR_AGENT = 0x80,PR_ISSYS = 0x1000,PR_VFORKP = 0x2000,PR_ORPHAN = 0x4000,PR_FORK = 0x100000,PR_RLC = 0x200000,PR_KLC = 0x400000,PR_ASYNC = 0x800000,PR_MSACCT = 0x1000000,PR_BPTADJ = 0x2000000,PR_PTRACE = 0x4000000,PR_MSFORK = 0x8000000,PR_REQUESTED = 0x1,PR_SIGNALLED = 0x2,PR_SYSENTRY = 0x3,PR_SYSEXIT = 0x4,PR_JOBCONTROL = 0x5,PR_FAULTED = 0x6,PR_SUSPENDED = 0x7,PR_CHECKPOINT = 0x8,};
enum MACRO_P_ABSOLUTE {P_ABSOLUTE = 0x1,P_RELATIVE = 0x2,P_EXIST = 0x4,P_NEXIST = 0x8,P_REG = 0x10,P_DIR = 0x20,P_BLK = 0x40,P_CHR = 0x80,P_NONZERO = 0x100,P_READ = 0x200,P_WRITE = 0x400,P_EXEC = 0x800,P_CREAT = 0x1000,};
enum MACRO_QINSERVICE {QINSERVICE = 0x10000,QWCLOSE = 0x20000,QEND = 0x40000,QWANTWSYNC = 0x80000,QSYNCSTR = 0x100000,QISDRV = 0x200000,QHOT = 0x400000,QNEXTHOT = 0x800000,_QINSERTING = 0x4000000,_QREMOVING = 0x8000000,};
enum MACRO_RD_VERSION {RD_VERSION = 1,};
enum MACRO_REMOTEMODE {REMOTEMODE = 0x1,};
enum MACRO_RIGHTSHIFT {RIGHTSHIFT = 3,};
enum MACRO_RIPVERSION {RIPVERSION = 1,};
enum MACRO_RPCBVERS_0 {RPCBVERS = 3,};
enum MACRO_RPCSEC_GSS {RPCSEC_GSS_DATA = 0,RPCSEC_GSS_INIT = 1,RPCSEC_GSS_CONTINUE_INIT = 2,RPCSEC_GSS_DESTROY = 3,RPCSEC_GSS_VERSION = 1,};
enum MACRO_RPC_SVC_MT {RPC_SVC_MT_NONE = 0,RPC_SVC_MT_AUTO = 1,RPC_SVC_MT_USER = 2,};
enum MACRO_RQUOTAPROC {RQUOTAPROC_GETQUOTA = 1,RQUOTAPROC_GETACTIVEQUOTA = 2,};
enum MACRO_RQUOTAPROG {RQUOTAPROG = 100011,};
enum MACRO_RQUOTAVERS {RQUOTAVERS = 1,};
enum MACRO_RUSERSPROC {RUSERSPROC_NUM = 1,RUSERSPROC_NAMES = 2,RUSERSPROC_ALLNAMES = 3,};
enum MACRO_RUSERSPROG {RUSERSPROG = 100002,};
enum MACRO_RUSERSVERS {RUSERSVERS_IDLE = 2,};
enum MACRO_RX_TIMEOUT {RX_TIMEOUT = 0x80,RX_BREAK = 0x8,RX_PARITY = 0x4,RX_FRAMING = 0x2,RX_OVERRUN = 0x1,};
enum MACRO_SBIOCCTIME {SBIOCCTIME = 16899,};
enum MACRO_SBIOCGSNAP {SBIOCGSNAP = 16903,};
enum MACRO_SBIOCGTIME {SBIOCGTIME = 16898,};
enum MACRO_SBIOCSSNAP {SBIOCSSNAP = 16902,};
enum MACRO_SBIOCSTIME {SBIOCSTIME = 16897,};
enum MACRO_SCSI_DEBUG {SCSI_DEBUG_TGT = 0x1,SCSI_DEBUG_LIB = 0x2,SCSI_DEBUG_HA = 0x4,SCSI_OPTIONS_LINK = 0x10,SCSI_OPTIONS_TAG = 0x80,SCSI_OPTIONS_DR = 0x8,SCSI_OPTIONS_SYNC = 0x20,SCSI_OPTIONS_PARITY = 0x40,SCSI_OPTIONS_FAST = 0x100,SCSI_OPTIONS_WIDE = 0x200,SCSI_OPTIONS_FAST20 = 0x400,SCSI_OPTIONS_FAST40 = 0x800,SCSI_OPTIONS_FAST80 = 0x1000,SCSI_OPTIONS_NLUNS_MASK = 0x70000,SCSI_OPTIONS_NLUNS_DEFAULT = 0x0,SCSI_OPTIONS_NLUNS_1 = 0x10000,SCSI_OPTIONS_NLUNS_8 = 0x20000,SCSI_OPTIONS_NLUNS_16 = 0x30000,SCSI_OPTIONS_NLUNS_32 = 0x40000,};
enum MACRO_SCSI_WATCH {SCSI_WATCH_IO_TIME = 120,SCSI_WATCH_TERMINATE_WAIT = 0,SCSI_WATCH_TERMINATE_NOWAIT = 1,SCSI_WATCH_TERMINATE_SUCCESS = 0,SCSI_WATCH_TERMINATE_FAIL = 1,};
enum MACRO_SC_FAILURE {SC_FAILURE = -1,};
enum MACRO_SC_NOERROR {SC_NOERROR = 0,SC_NOMEM = 1,SC_OPENFAIL = 2,SC_NOTFOUND = 3,SC_BADENTRIES = 4,};
enum MACRO_SECSPERMIN {SECSPERMIN = 60,};
enum MACRO_SE_32RVAL1 {SE_32RVAL1 = 0x0,SE_32RVAL2 = 0x1,SE_64RVAL = 0x2,SE_RVAL_MASK = 0x3,SE_LOADABLE = 0x8,SE_LOADED = 0x10,SE_NOUNLOAD = 0x20,SE_ARGC = 0x40,};
enum MACRO_SHN_BEFORE {SHN_BEFORE = 0xFF00,SHN_AFTER = 0xFF01,};
enum MACRO_SIOCXPROTO {SIOCXPROTO = 536900407,};
enum MACRO_SI_SYSNAME {SI_SYSNAME = 1,SI_HOSTNAME = 2,SI_RELEASE = 3,SI_VERSION = 4,SI_MACHINE = 5,SI_ARCHITECTURE = 6,SI_HW_SERIAL = 7,SI_HW_PROVIDER = 8,SI_SRPC_DOMAIN = 9,SI_SET_HOSTNAME = 258,SI_SET_SRPC_DOMAIN = 265,SI_PLATFORM = 513,SI_ISALIST = 514,SI_DHCP_CACHE = 515,};
enum MACRO_SM_WRITE_0 {SM_WRITE = 0x1,SM_ASYNC = 0x2,SM_FREE = 0x4,SM_INVAL = 0x8,SM_DONTNEED = 0x10,};
enum MACRO_STC_SERIAL {STC_SERIAL = 0x1,STC_PARALLEL = 0x2,STC_CNTRL = 0x4,STC_IOREG = 0x1,STC_PPCREG = 0x0,STC_CDEFSET = 0x1,STC_CDEFGET = 0x2,STC_SPARAM_SET = 0x4,STC_SPARAM_GET = 0x8,STC_REGIOR = 0x100,STC_REGIOW = 0x200,STC_PPCREGR = 0x400,STC_PPCREGW = 0x800,STC_CFLUSH = 0x8000,STC_SETCAR = 0x10000000,STC_NOTOPEN_ERR = 0x3,};
enum MACRO_SUA_ENOMEM {SUA_ENOMEM = -5,SUA_EINVAL = -6,};
enum MACRO_SUSP_CHECK {SUSP_CHECK_BYTE_1 = 0xBE,SUSP_CHECK_BYTE_2 = 0xEF,};
enum MACRO_SVCPOOL_ID {NFS_SVCPOOL_ID = 0x1,NLM_SVCPOOL_ID = 0x2,};
enum MACRO_TAPE_SENSE {TAPE_SENSE_LENGTH = 32,};
enum MACRO_TCO_NOPEER {TCO_NOPEER = 146,TCO_PEERNOROOMONQ = 146,TCO_PEERBADSTATE = 146,TCO_PEERINITIATED = 131,TCO_PROVIDERINITIATED = 131,};
enum MACRO_TCP_NDEBUG {TCP_NDEBUG = 100,TCP_NSTATES = 11,};
enum MACRO_TCP_NOTIFY {TCP_NOTIFY_THRESHOLD = 0x10,TCP_ABORT_THRESHOLD = 0x11,TCP_CONN_NOTIFY_THRESHOLD = 0x12,TCP_CONN_ABORT_THRESHOLD = 0x13,TCP_RECVDSTADDR = 0x14,TCP_ANONPRIVBIND = 0x20,TCP_EXCLBIND = 0x21,};
enum MACRO_TIMER_RATE {TIMER_RATE = 30,};
enum MACRO_TIOCGPPSEV {TIOCGPPSEV = 21631,};
enum MACRO_TIOCGWINSZ {TIOCGWINSZ = 21608,};
enum MACRO_TIOCREMOTE {TIOCREMOTE = 29726,};
enum MACRO_TIOCSIGNAL {TIOCSIGNAL = 29727,};
enum MACRO_TIOCSWINSZ {TIOCSWINSZ = 21607,};
enum MACRO_TMPMINFREE {TMPMINFREE = 2097152,};
enum MACRO_TOP_COMMIT {TOP_COMMIT_SIZE = 0,TOP_MAX_RESV = 524288,};
enum MACRO_TPLBYTEMAP {TPLBYTEMAP_LOW = 0x0,TPLBYTEMAP_HIGH = 0x1,TPLBYTEMAP_VS = 0x80,};
enum MACRO_TPLBYTEORD {TPLBYTEORD_LOW = 0x0,TPLBYTEORD_HIGH = 0x1,TPLBYTEORD_VS = 0x80,};
enum MACRO_TPLFMTTYPE {TPLFMTTYPE_DISK = 0x0,TPLFMTTYPE_MEM = 0x1,TPLFMTTYPE_VS = 0x80,};
enum MACRO_TSPVERSION {TSPVERSION = 1,};
enum MACRO_TSTATECHNG {TSTATECHNG = 19,};
enum MACRO_TS_SOFTCAR {TS_SOFTCAR = 0x2,};
enum MACRO_TYPE_BASIC {TYPE_BASIC_LS = 0x0,TYPE_EXTENDED_LS = 0x1,TYPE_IS8802 = 0x4,TYPE_IS8802_SNAP = 0x5,TYPE_SCSI_FCP = 0x8,TYPE_SCSI_GPP = 0x9,TYPE_HIPP_FP = 0xA,TYPE_IPI3_MASTER = 0x11,TYPE_IPI3_SLAVE = 0x12,TYPE_IPI3_PEER = 0x13,};
enum MACRO_T_FMT_AMPM {T_FMT_AMPM = 50,};
enum MACRO_T_INET_UDP {T_INET_UDP = 17,T_UDP_CHECKSUM = 1536,T_INET_IP = 0,T_IP_TTL = 4,T_IP_REUSEADDR = 260,T_IP_DONTROUTE = 261,T_IP_BROADCAST = 262,T_IP_OPTIONS = 263,T_IP_TOS = 264,T_ROUTINE = 0,T_PRIORITY = 1,T_IMMEDIATE = 2,T_FLASH = 3,T_OVERRIDEFLASH = 4,T_CRITIC_ECP = 5,T_INETCONTROL = 6,T_NETCONTROL = 7,T_NOTOS = 0,T_LDELAY = 16,T_HITHRPT = 8,T_HIREL = 4,T_LOCOST = 2,T_LISTEN = 1,T_CONNECT = 2,T_DATA = 4,T_EXDATA = 8,T_UDERR = 64,T_ORDREL = 128,T_GODATA = 256,T_GOEXDATA = 512,T_MORE = 1,T_EXPEDITED = 2,T_PUSH = 4,T_IOV_MAX = 16,T_SENDZERO = 1,T_ORDRELDATA = 2,T_BIND = 1,T_OPTMGMT = 2,T_CALL = 3,T_DIS = 4,T_UNITDATA = 5,T_UDERROR = 6,T_INFO = 7,T_ADDR = 1,T_OPT = 2,T_UDATA = 4,T_ALL = 65535,T_UNINIT = 0,T_UNBND = 1,T_IDLE = 2,T_OUTCON = 3,T_INCON = 4,T_DATAXFER = 5,T_OUTREL = 6,T_INREL = 7,T_UNUSED = -1,T_ABSREQ = 32768,};
enum MACRO_UDPMSGSIZE {UDPMSGSIZE = 8800,};
enum MACRO_UFSROOTINO {UFSROOTINO = 2,};
enum MACRO_UNEXPECTED {UNEXPECTED_ACK = 0x14,UNEXPECTED_LINK_RESP = 0x15,};
enum MACRO_UPILWPCHAN {UPILWPCHAN_BITS = 9,UPILWPCHAN_TABSIZ = 512,};
enum MACRO_UT_PRECISE {UT_PRECISE_MAXTRAPS = 33,};
enum MACRO_VLOC_BATCH {VLOC_BATCH = 32644,VLOC_LAST = 32645,};
enum MACRO_VOLIOCINFO {VOLIOCINFO = 30219,};
enum MACRO_VOLIOCROOT {VOLIOCROOT = 30226,};
enum MACRO_VOL_SYMDEV {VOL_SYMDEV_LEN = 1024,VOL_SYMNAME_LEN = 256,};
enum MACRO_VT_ENABLED {VT_ENABLED = 0x80,VT_USED = 0x40,VT_STRING_5 = 0x10,VT_STRING_4 = 0x8,VT_STRING_3 = 0x4,VT_STRING_2 = 0x2,VT_STRING_1 = 0x1,VT_STRING_MASK = 0x1F,VT_MAPSIZE = 0x10000,};
enum MACRO_VT_VERSION {VT_VERSION_MAJOR = 3,VT_VERSION_MINOR = 0,VT_VERSION_MICRO = 0,VT_FAC_SHIFT = 24,VT_FAC_MASK = 255,VT_TAG_SHIFT = 16,VT_TAG_MASK = 255,VT_EVENT_SHIFT = 16,VT_EVENT_MASK = 65535,VT_TIME_SHIFT = 0,VT_TIME_MASK = 65535,VT_MAX_FAC = 255,VT_MAX_TAG = 255,VT_MAX_EVENT = 65535,VT_MAX_WORDS = 64,VT_MAX_BYTES = 256,};
enum MACRO_VUID_QUEUE {VUID_QUEUE_NULL = 0,VUID_Q_NODE_NULL = 0,VUID_STATE_NULL = 0,VUID_VALUE_NULL = 0,VUID_SEG_NULL = 0,};
enum MACRO_WINDOWSIZE {WINDOWSIZE = 64,};
enum MACRO_ZSWR1_INIT {ZSWR1_INIT = 19,};
enum MACRO__ALIGNMENT {_ALIGNMENT_REQUIRED = 1,};
enum MACRO__FIOBOINFO {_FIOBOINFO = 536897103,};
enum MACRO__FIOISBUSY {_FIOISBUSY = 536897099,};
enum MACRO__FIOSATIME {_FIOSATIME = 536897092,};
enum MACRO__HIDDENBIT {_HIDDENBIT = 1,};
enum MACRO__POSIX2_BC {_POSIX2_BC_BASE_MAX = 99,_POSIX2_BC_DIM_MAX = 2048,_POSIX2_BC_SCALE_MAX = 99,_POSIX2_BC_STRING_MAX = 1000,_POSIX2_COLL_WEIGHTS_MAX = 10,_POSIX2_EXPR_NEST_MAX = 32,_POSIX2_LINE_MAX = 2048,_POSIX2_RE_DUP_MAX = 255,};
enum MACRO___dontcare {__dontcare__ = -1,};
struct _FN_searchlist_t;
typedef struct _750EEDBB3ABCF24E6FC38F698DC1AE07 _LC_bind_table_t;
typedef void *_LC_bind_value_t;
typedef struct _A32966EE8414B065154C0C0FBC0CDA05 _LC_core_ctype_t;
struct __auth__auth_ops {void (*ah_nextverf)(struct __auth *);int (*ah_marshal)(struct __auth *, XDR *);int (*ah_validate)(struct __auth *, struct opaque_auth *);int (*ah_refresh)(struct __auth *, void *);void (*ah_destroy)(struct __auth *);};
typedef struct alloc_ext_desc alloc_ext_desc_t;
typedef struct ami_public_key *ami_public_key_t;
struct arq_private_data {struct buf *arq_save_bp;struct fas_cmd *arq_save_sp;};
typedef struct au_evclass_map au_evclass_map_t;
typedef struct au_invalid_tok au_invalid_tok_t;
typedef struct au_trailer_tok au_trailer_tok_t;
typedef struct auditinfo_addr auditinfo_addr_t;
enum authdes_namekind {ADN_FULLNAME = 0x0,ADN_NICKNAME = 0x1,};
struct cachefs_cnvt_mnt {int cm_op;int cm_namelen;char *cm_name;};
typedef struct cachefs_fsinfo cachefs_fsinfo_t;
typedef struct cachefsio_dcmd cachefsio_dcmd_t;
typedef struct cachefsio_link cachefsio_link_t;
typedef struct cachefsio_pack cachefsio_pack_t;
typedef char cfga_ap_log_id_t[20];
typedef struct cfga_list_data cfga_list_data_t;
typedef struct cfga_stat_data cfga_stat_data_t;
typedef struct cfs_dlog_entry cfs_dlog_entry_t;
typedef union _5396904C4F40B9D23631641FAE141A5A dbri_intrq_ent_t;
typedef struct _F9CE4197C78490B9950BF1AD06D064B7 ddi_dma_cookie_t;
typedef void *ddi_dma_handle_t;
typedef struct des_clnt_data dh_k4_clntdata_t;
typedef struct di_prom_handle *di_prom_handle_t;
typedef struct _6601AD8F8068B3BD81BCD4072DAC7812 dl_connect_con_t;
typedef struct _D34CDA88D8A7072F4DEA084B2AED3D31 dl_connect_ind_t;
typedef struct _ECD491B309C6C7D8FCBA014B12E7CF40 dl_connect_req_t;
typedef struct _1C7EDB14D495611F6D5B778EE61996F1 dl_connect_res_t;
typedef struct _1E4540432FE6FCBAA14615B1753B1498 dl_qos_cl_sel1_t;
typedef struct _03B9D2AB7EC31E7B5953C0F06C8B7AA9 dl_qos_co_sel1_t;
typedef struct _CD160A28723B1B650FC96BC3CBBCB54B dl_uderror_ind_t;
typedef struct extension_name_struct extension_name_t;
typedef struct gss_OID_set_desc_struct gss_OID_set_desc;
typedef int gss_cred_usage_t;
struct ifp_target_stats {int logouts_recvd;int task_mgmt_failures;int data_ro_mismatches;int dl_len_mismatches;};
typedef struct indirect_entry indirect_entry_t;
typedef struct _45D578D1CAA1736E8819435F592D8C84 ipd_unregister_t;
enum isdn_param_maint {ISDN_PARAM_MAINT_OFF = 0x0,ISDN_PARAM_MAINT_ECHO = 0x1,ISDN_PARAM_MAINT_ON = 0x2,};
enum iso_voldesc_type {ISO_VD_BOOT = 0x0,ISO_VD_PVD = 0x1,ISO_VD_SVD = 0x2,ISO_VD_VPD = 0x3,ISO_VD_EOV = 0xFF,};
struct kobj_notify_list {unsigned int kn_version;void (*kn_func)(unsigned int, struct modctl *);unsigned int kn_type;struct kobj_notify_list *kn_prev;struct kobj_notify_list *kn_next;};
typedef struct _ldterm_cs_data ldterm_cs_data_t;
typedef struct lif_ifinfo_req lif_ifinfo_req_t;
typedef struct mdb_walk_state mdb_walk_state_t;
struct mdi_set_gammalut {int index;int count;unsigned short *red;unsigned short *green;unsigned short *blue;};
typedef struct mhioc_key_list mhioc_key_list_t;
typedef struct mhioc_register mhioc_register_t;
typedef struct mhioc_resv_key mhioc_resv_key_t;
typedef struct mib2_udp6Entry mib2_udp6Entry_t;
struct modspecific_info {char msi_linkinfo[32];int msi_p0;};
enum nispasswd_status {NPD_SUCCESS = 0x0,NPD_TRYAGAIN = 0x1,NPD_PARTIALSUCCESS = 0x2,NPD_FAILED = 0x3,};
typedef unsigned int nss_innetgr_argc;
typedef char **nss_innetgr_argv;
enum nss_netgr_status {NSS_NETGR_FOUND = 0x0,NSS_NETGR_NO = 0x1,NSS_NETGR_NOMEM = 0x2,};
typedef struct _062E89D0DC7E46D06DD8F412839F5BDD papPasswdEntry_t;
enum pppLinkMediaType {pppSync = 0x0,pppAsync = 0x1,};
typedef struct _807D4AC2255C0A3001450ADEC11FD819 pppProtoFinish_t;
enum ppp_diag_outdest {PPP_DG_STRLOG_DEST = 0x0,};
typedef struct _16D4A1559E041DBB68E7A1F4F9CBF232 processor_info_t;
typedef struct proto_dev_info proto_dev_info_t;
typedef struct _pthread_rwlock pthread_rwlock_t;
typedef struct gss_OID_desc_struct rpc_gss_OID_desc;
typedef rpcb_stat rpcb_stat_byvers[3];
typedef struct sadb_supported sadb_supported_t;
typedef int sigfpe_code_type;
typedef struct __svc_local_cred_t svc_local_cred_t;
typedef int tnfctl_ind_obj_f(void *,  struct tnfctl_ind_obj_info *, void *);
typedef struct _C5DA07C86C437AAC183EB88624185419 ttcompat_state_t;
enum ufsd_boot_type_t {UFSDB_NONE = 0x0,UFSDB_CLEAN = 0x1,UFSDB_POSTPANIC = 0x2,};
typedef struct unall_spc_desc unall_spc_desc_t;
typedef struct usb_log_handle *usb_log_handle_t;
typedef struct vt_global_info vt_global_info_t;
typedef struct _FN_bindingset FN_bindingset_t;
typedef struct _0A17130E4CE82B668D029EC1E9F64ADD FN_identifier_t;
typedef struct _FN_searchlist_t FN_searchlist_t;
typedef struct LA_RLS_reply *LA_RLS_replyptr;
typedef struct LOGI_PAYLOAD *LOGI_PAYLOADptr;
typedef struct _la_sparc_regs La_sparcv8_regs;
typedef struct _LclFormAttrInfo LclFormAttrInfo;
enum MACRO_ADDR_SIZE {ETHER_ADDR_SIZE = 8,IEEE_ADDR_SIZE = 7,TOKEN_ADDR_SIZE = 7,};
enum MACRO_AIOAWRITE {AIOAWRITE = 12,};
enum MACRO_AIOCANCEL {AIOCANCEL = 3,AIONOTIFY = 4,};
enum MACRO_ALIGNMENT {_CHAR_ALIGNMENT = 1,_SHORT_ALIGNMENT = 2,_INT_ALIGNMENT = 4,_LONG_LONG_ALIGNMENT = 8,_DOUBLE_ALIGNMENT = 8,};
enum MACRO_ALLOCSIZE {ALLOCSIZE = 160,};
enum MACRO_AUDITUSER {AUDITUSER_DB_NCOL = 3,AUDITUSER_DB_NKEYCOL = 1,AUDITUSER_SUCCESS = 0,AUDITUSER_PARSE_ERANGE = 1,AUDITUSER_NOT_FOUND = 2,AUDITUSER_KEYCOL0 = 0,};
enum MACRO_AU_MAXMEM {AU_MAXMEM = 2097152,};
enum MACRO_A_MAXPATH {A_MAXPATH = 1024,};
enum MACRO_BMAC_XIFC {BMAC_XIFC_XIFLPBK = 2,BMAC_XIFC_MIILPBK = 4,BMAC_XIFC_MIIBUFDIS = 8,BMAC_XIFC_SQETSTENB = 16,BMAC_XIFC_SQETSTWIN = 992,BMAC_XIFC_LANCE_ENAB = 16,BMAC_XIFC_LANCE_IPG0 = 992,BMAC_XIFC_IPG0_SHIFT = 5,BMAC_TX_RESET = 1,BMAC_TXCFG_RES1 = 30,BMAC_TXCFG_NBKOFF = 256,BMAC_TXCFG_FDX = 512,BMAC_RXCFG_RES1 = 30,};
enum MACRO_BRK_DELAY {BRK_DELAY = 0x28,};
enum MACRO_BW2HSIZEX {BW2HSIZEX = 1600,};
enum MACRO_BW2HSIZEY {BW2HSIZEY = 1280,BW2HBYTES = 256000,};
enum MACRO_CACHEFSIO {CACHEFSIO_PACK = 536897105,CACHEFSIO_UNPACK = 536897106,CACHEFSIO_UNPACKALL = 536897107,CACHEFSIO_PACKINFO = 536897108,CACHEFSIO_DCMD = 536897109,};
enum MACRO_CARTRIDGE {CARTRIDGE_PROT_CMD = 0xC,TRANSLATE_LBA_CMD = 0x22,READ_FORMAT_CAP_CMD = 0x23,FORMAT_VERIFY_CMD = 0x24,READ_LONG_CMD = 0x3E,WRITE_LONG_CMD = 0x3F,};
enum MACRO_CDROMCDDA {CDROMCDDA = 1191,};
enum MACRO_CDROMCDXA {CDROMCDXA = 1192,};
enum MACRO_CDROMSTOP {CDROMSTOP = 1181,};
enum MACRO_CD_CHANGE {CD_CHANGE = 0x40,CD_ON = 0x40,};
enum MACRO_CFS_WRITE {CFS_WRITE_AROUND = 0x1,CFS_NONSHARED = 0x2,CFS_NOCONST_MODE = 0x8,CFS_ACCESS_BACKFS = 0x10,CFS_CODCONST_MODE = 0x80,CFS_DISCONNECTABLE = 0x100,CFS_SOFT = 0x200,CFS_NOACL = 0x400,CFS_LLOCK = 0x800,CFS_SLIDE = 0x1000,CFS_NOFILL = 0x2000,};
enum MACRO_CLSET_SVC {CLSET_SVC_ADDR = 16,CLSET_PUSH_TIMOD = 17,CLSET_POP_TIMOD = 18,CLSET_RETRY_TIMEOUT = 4,};
enum MACRO_CL_NODEID {CL_NODEID = 0,CL_HIGHEST_NODEID = 1,CL_GDEV_PREFIX = 2,};
enum MACRO_CMD_RESET {CMD_RESET_FAS = 0x2,};
enum MACRO_CONFIGURE {CONFIGURE = 0x13,MT = 0x80,};
enum MACRO_CORRUPTED {CORRUPTED = 3,};
enum MACRO_CPC_ULTRA {CPC_ULTRA_PCR_USR = 2,CPC_ULTRA_PCR_SYS = 1,CPC_ULTRA_PCR_PRIVPIC = 0,CPC_ULTRA_PCR_PIC0_SHIFT = 4,CPC_ULTRA2_PCR_PIC0_MASK = 15,CPC_ULTRA3_PCR_PIC0_MASK = 63,CPC_ULTRA_PCR_PIC1_SHIFT = 11,CPC_ULTRA2_PCR_PIC1_MASK = 15,CPC_ULTRA3_PCR_PIC1_MASK = 63,CPC_BIND_LWP_INHERIT = 1,CPC_BIND_EMT_OVF = 2,CPC_ULTRA1 = 1000,CPC_ULTRA2 = 1001,CPC_ULTRA3 = 1002,CPC_PENTIUM = 2000,CPC_PENTIUM_MMX = 2001,CPC_PENTIUM_PRO = 2002,CPC_PENTIUM_PRO_MMX = 2003,CPC_VER_CURRENT = 1,CPC_VER_NONE = 0,};
enum MACRO_DATASETUP {MIN_DATASETUP = 0,MAX_DATASETUP = 30,};
enum MACRO_DCMD_READ {DCMD_READ = 1,DCMD_WRITE = 2,DCMD_FMTTRK = 3,DCMD_FMTDRV = 4,DCMD_RECAL = 5,DCMD_SEEK = 6,DCMD_RDVER = 7,DCMD_GETDEF = 8,DCMD_LOCK = 9,DCMD_UNLOCK = 10,DCMD_START_MOTOR = 11,DCMD_STOP_MOTOR = 12,DCMD_EJECT = 13,DCMD_UPDATE_GEOM = 14,DCMD_GET_STATE = 15,DCMD_PAUSE = 16,DCMD_RESUME = 17,DCMD_PLAYTRKIND = 18,DCMD_PLAYMSF = 19,DCMD_SUBCHNL = 20,DCMD_READMODE1 = 21,DCMD_READTOCHDR = 22,DCMD_READTOCENT = 23,DCMD_READOFFSET = 24,DCMD_READMODE2 = 25,DCMD_VOLCTRL = 26,};
enum MACRO_DEBUGGING {DEBUGGING_ALL = 0,};
enum MACRO_DELIMITER {DELIMITER_ERROR = 0x6,};
enum MACRO_DINFOPROP {DINFOPROP = 0xDF04,};
enum MACRO_DIRBLKSIZ {DIRBLKSIZ = 512,};
enum MACRO_DKIOCINFO {DKIOCINFO = 1027,};
enum MACRO_DKIOCLOCK {DKIOCLOCK = 1031,};
enum MACRO_DKIOC_EBP {DKIOC_EBP_ENABLE = 1064,DKIOC_EBP_DISABLE = 1065,};
enum MACRO_DMAGA_CHK {DMAGA_CHK_MASK = 1027,DMAGA_INT_MASK = 3,};
enum MACRO_DONT_SHOW {DONT_SHOW_CURSOR = 0x1,};
enum MACRO_DRSOCKETS {DRSOCKETS = 2,};
enum MACRO_DRWINDOWS {DRWINDOWS = 3,};
enum MACRO_DRWINSIZE {DRWINSIZE = 1048576,};
enum MACRO_D_MTINNER {D_MTINNER_MOD = 69760,D_MTOUTER_MOD = 2048,D_MP = 32,D_64BIT = 512,D_SYNCSTR = 1024,D_DEVMAP = 256,D_HOTPLUG = 4,};
enum MACRO_ECPP_FIFO {ECPP_FIFO_EMPTY = 0x1,ECPP_FIFO_FULL = 0x2,ECPP_INTR_SRV = 0x4,ECPP_DMA_ENABLE = 0x8,ECPP_INTR_MASK = 0x10,};
enum MACRO_EJECT_DMA {EJECT_DMA = 0x20,};
enum MACRO_ELF_SPARC {ELF_SPARC_MAXPGSZ = 0x10000,ELF_SPARCV9_MAXPGSZ = 0x100000,};
enum MACRO_ESP_CLOCK {ESP_CLOCK_DELAY = 7682,};
enum MACRO_ETHERFCSL {ETHERFCSL = 4,};
enum MACRO_ETHERTYPE {ETHERTYPE_PUP = 0x200,ETHERTYPE_IP = 0x800,ETHERTYPE_ARP = 0x806,ETHERTYPE_REVARP = 0x8035,ETHERTYPE_IPV6 = 0x86DD,ETHERTYPE_MAX = 0xFFFF,ETHERTYPE_TRAIL = 0x1000,ETHERTYPE_NTRAILER = 0x10,};
enum MACRO_EUC_FIRST {EUC_FIRST = 0,EUC_LAST = 255,};
enum MACRO_EXCESSIVE {EXCESSIVE_SEQUENCES = 0x17,};
enum MACRO_EXPINLINE {EXPINLINE = 0x2,};
enum MACRO_E_BADARGS {E_BADARGS = 1,E_NOPRIV = 2,E_SAFERR = 3,E_SYSERR = 4,E_NOEXIST = 5,E_DUP = 6,E_PMRUN = 7,E_PMNOTRUN = 8,E_RECOVER = 9,E_SACNOTRUN = 10,};
enum MACRO_FAS_STAT2 {FAS_STAT2_SEQCNT = 0x1,FAS_STAT2_FLATCHED = 0x2,FAS_STAT2_CLATCHED = 0x4,FAS_STAT2_CACTIVE = 0x8,FAS_STAT2_SCSI16 = 0x10,FAS_STAT2_ISHUTTLE = 0x20,FAS_STAT2_OSHUTTLE = 0x40,FAS_STAT2_EMPTY = 0x80,FAS_BUSID_ENCODID = 0x10,FAS_BUSID_32BIT_COUNTER = 0x40,};
enum MACRO_FBIOGATTR {FBIOGATTR = 17926,};
enum MACRO_FBIOGINFO {FBIOGINFO = 17922,};
enum MACRO_FBIOGTYPE {FBIOGTYPE = 17920,};
enum MACRO_FBIOSATTR {FBIOSATTR = 17925,};
enum MACRO_FC_STATUS {FC_STATUS_ENTRIES = 256,};
enum MACRO_FDIOGCHAR {FDIOGCHAR = 1075,};
enum MACRO_FDIOSCHAR {FDIOSCHAR = 1076,};
enum MACRO_FD_SILENT {FD_SILENT = 0x1,FD_DIAGNOSE = 0x2,FD_ISOLATE = 0x4,FD_READ = 0x8,FD_WRITE = 0x10,};
enum MACRO_FIFOHIWAT {FIFOHIWAT = 9216,};
enum MACRO_FIFOLOWAT {FIFOLOWAT = 0,};
enum MACRO_FLTACCESS {FLTACCESS = 5,};
enum MACRO_FLTBOUNDS {FLTBOUNDS = 6,};
enum MACRO_FLTCPCOVF {FLTCPCOVF = 13,};
enum MACRO_FLUSHDATA {FLUSHDATA = 0,TRANSPARENT = 4294967295,};
enum MACRO_FNONBLOCK {FNONBLOCK = 0x80,};
enum MACRO_FSSUSPEND {FSSUSPEND = 0xFFFFFFFE,};
enum MACRO_GETACLCNT {GETACLCNT = 3,};
enum MACRO_GETNFSTYP {GETNFSTYP = 3,};
enum MACRO_GET_FIRST {GET_FIRST_LTUPLEF = 0x1,GET_LAST_LTUPLEF = 0x2,};
enum MACRO_GOODERROR {GOODERROR = 0x600DBEEF,};
enum MACRO_HMEPERIOD {HMEPERIOD = 20,};
enum MACRO_HME_BBCLK {HME_BBCLK_LOW = 0,HME_BBCLK_HIGH = 1,HME_MIF_FRDATA = 65535,HME_MIF_FRTA0 = 65536,HME_MIF_FRTA1 = 131072,HME_MIF_FRREGAD = 8126464,HME_MIF_FRPHYAD = 260046848,HME_MIF_FROP = 805306368,HME_MIF_FRST = -1073741824,HME_MIF_FRREGAD_SHIFT = 18,HME_MIF_FRPHYAD_SHIFT = 23,HME_MIF_FRREAD = 1610743808,HME_MIF_FRWRITE = 1342308352,};
enum MACRO_HOMEARROW {HOMEARROW = 0x0,UPARROW = 0x1,DOWNARROW = 0x2,};
enum MACRO_HOURSHIFT {HOURSHIFT = 11,};
enum MACRO_HUB_LOCAL {HUB_LOCAL_POWER_STATUS = 0x1,HUB_OVER_CURRENT = 0x2,};
enum MACRO_IAMAXUPRI {IAMAXUPRI = 60,};
enum MACRO_IAOFFUPRI {IAOFFUPRI = 29,};
enum MACRO_ICMP6_MAX {ICMP6_MAX_INFO_TYPE = 137,ICMP6_DST_UNREACH_NOROUTE = 0,ICMP6_DST_UNREACH_ADMIN = 1,ICMP6_DST_UNREACH_NOTNEIGHBOR = 2,ICMP6_DST_UNREACH_ADDR = 3,ICMP6_DST_UNREACH_NOPORT = 4,ICMP6_TIME_EXCEED_TRANSIT = 0,ICMP6_TIME_EXCEED_REASSEMBLY = 1,ICMP6_PARAMPROB_HEADER = 0,ICMP6_PARAMPROB_NEXTHEADER = 1,ICMP6_PARAMPROB_OPTION = 2,ICMP6_MAX_HOST_REPORT_DELAY = 10,};
enum MACRO_IENULLOFF {IENULLOFF = 0xFFFF,};
enum MACRO_IESCPADDR {IESCPADDR = 0xFFFFF4,};
enum MACRO_INCORRECT {INCORRECT_LENGTH = 0x13,};
enum MACRO_INPLOOKUP {INPLOOKUP_WILDCARD = 1,INPLOOKUP_SETLOCAL = 2,};
enum MACRO_IP6_ALERT {IP6_ALERT_MLD = 0x0,IP6_ALERT_RSVP = 0x1,IP6_ALERT_AN = 0x2,IP6_BUF_ACK = 0x80,IP6_BUF_HOME = 0x40,IP6_BUF_COA = 0x20,IP6_BUF_ROUTER = 0x10,};
enum MACRO_IPFRAGTTL {IPFRAGTTL = 60,};
enum MACRO_IPOPT_POS {IPOPT_POS_VAL = 0,IPOPT_POS_LEN = 1,IPOPT_POS_OFF = 2,IPOPT_POS_OV_FLG = 3,IPOPT_MINOFF_SR = 4,IPOPT_MINOFF_IT = 5,IPOPT_MINLEN_IT = 5,IPOPT_IT_TIME = 0,IPOPT_IT_TIME_ADDR = 1,IPOPT_IT_SPEC = 3,IPOPT_IT_SPEC_BSD = 2,IPOPT_IT_TIMELEN = 4,};
enum MACRO_IPV6_PAD1 {IPV6_PAD1_OPT = 0,};
enum MACRO_IPVERSION {IPVERSION = 4,};
enum MACRO_IP_SIMPLE {IP_SIMPLE_HDR_LENGTH_IN_WORDS = 5,IP_SIMPLE_HDR_LENGTH = 20,IP_MAX_HDR_LENGTH = 60,IP_MIN_MTU = 68,IP_SIMPLE_HDR_VERSION = 69,IP_IOCTL = 26992,IP_IOC_IRE_DELETE = 4,IP_IOC_IRE_DELETE_NO_REPLY = 5,IP_IOC_IRE_ADVISE_NO_REPLY = 6,IP_IOC_RTS_REQUEST = 7,};
enum MACRO_IRE_FLUSH {IRE_FLUSH_DELETE = 0,IRE_FLUSH_ADD = 1,};
enum MACRO_ISO_FIRST {ISO_FIRST = 512,ISO_LAST = 767,};
enum MACRO_IS_SYSCLK {TXC_IS_SYSCLK = 4,RXC_IS_SYSCLK = 4,};
enum MACRO_KBENABLED {KBENABLED = 21514,};
enum MACRO_KIOCTRANS {KIOCTRANS = 27392,};
enum MACRO_LARGEFILE {_LFS_LARGEFILE = 1,_LFS64_LARGEFILE = 1,};
enum MACRO_LAYOUTKEY {LAYOUTKEY = 0xFE,};
enum MACRO_LEFTARROW {LEFTARROW = 0x3,RIGHTARROW = 0x4,FUNCKEYS = 0x600,};
enum MACRO_LIFNAMSIZ {LIFNAMSIZ = 32,};
enum MACRO_LLC1IDNUM {LLC1IDNUM = 0x8022,};
enum MACRO_LLC2_INIT {LLC2_INIT = 1275068417,LLC2_UNINIT = 1275068418,LLC2_GET_STA_STATS = 1275068419,LLC2_GET_SAP_STATS = 1275068420,LLC2_GET_CON_STATS = 1275068421,};
enum MACRO_LOCK_PRIO {LOCK_PRIO_NONE = 0x0,LOCK_PRIO_INHERIT = 0x10,LOCK_PRIO_PROTECT = 0x20,LOCK_STALL_NP = 0x0,LOCK_ROBUST_NP = 0x40,LOCK_OWNERDEAD = 0x1,LOCK_NOTRECOVERABLE = 0x2,LOCK_INITED = 0x4,LOCK_UNMAPPED = 0x8,};
enum MACRO_LOC_FIRST {LOC_FIRST_DELTA = 32640,LOC_X_DELTA = 32640,LOC_Y_DELTA = 32641,LOC_LAST_DELTA = 32641,LOC_FIRST_ABSOLUTE = 32642,LOC_X_ABSOLUTE = 32642,LOC_Y_ABSOLUTE = 32643,LOC_LAST_ABSOLUTE = 32643,};
enum MACRO_LOG_SENSE {LOG_SENSE_CMD = 0x4D,LOG_SELECT_CMD = 0x4C,};
enum MACRO_LONG_SIGN {LONG_SIGN_BIT = 0x80000000,};
enum MACRO_L_SUCCESS {L_SUCCESS = 0,L_NAMELEN = 1,L_TMPLOCK = 2,L_TMPWRITE = 3,L_MAXTRYS = 4,L_ERROR = 5,L_MANLOCK = 6,};
enum MACRO_MAP_TYPE1 {MAP_TYPE1 = 1,MAP_TYPE2 = 2,MAP_TYPE1_LEN = 6,MAP_TYPE2_LEN = 64,};
enum MACRO_MAXBSHIFT {MAXBSHIFT = 13,};
enum MACRO_MAXCDNAME {MAXCDNAME = 255,};
enum MACRO_MAXCOOKIE {MAXCOOKIE_SIZE = 36,};
enum MACRO_MAXCSBUFS {MAXCSBUFS = 32,};
enum MACRO_MAXDNSRCH {MAXDNSRCH = 6,};
enum MACRO_MAXGLITCH {MAXGLITCH = 30,};
enum MACRO_MAXIOCBSZ {MAXIOCBSZ = 1024,};
enum MACRO_MAXMNTLEN {MAXMNTLEN = 512,};
enum MACRO_MAXMSGLEN {MAXMSGLEN = 80,};
enum MACRO_MAXPROJID {MAXPROJID = 2147483647,};
enum MACRO_MAXSTRMSG {MAXSTRMSG = 58,};
enum MACRO_MAX_AUDIO {MAX_AUDIO_DEV_LEN = 16,};
enum MACRO_MAX_FCODE {MAX_FCODE_SIZE = 0x2000,};
enum MACRO_MAX_FRAME {MAX_FRAME_SIZE = 2112,};
enum MACRO_MAX_GRANT {MAX_GRANT_LOCKS = 52,};
enum MACRO_MAX_INPUT {MAX_INPUT = 512,MAX_CANON = 256,};
enum MACRO_MAX_PORTS {MAX_PORTS = 7,};
enum MACRO_MAX_STACK {MAX_STACK_BUF = 512,};
enum MACRO_MAX_TRACE {MAX_TRACE_NPROCS = 64,};
enum MACRO_MDI_NMAPS {MDI_NMAPS = 13,MDI_DIRECT_MAP = 268435456,MDI_CTLREG_MAP = 536870912,MDI_CURSOR_MAP = 805306368,MDI_SHDW_VRT_MAP = 1073741824,MDI_CHUNKY_XBGR_MAP = 1342177280,MDI_CHUNKY_BGR_MAP = 1610612736,MDI_PLANAR_X16_MAP = 1879048192,MDI_PLANAR_C16_MAP = -2147483648,MDI_PLANAR_X32_MAP = -1879048192,MDI_PLANAR_B32_MAP = -1610612736,MDI_PLANAR_G32_MAP = -1342177280,MDI_PLANAR_R32_MAP = -1073741824,MDI_DEFAULT_DEPTH = 8,MDI_DEFAULT_WIDTH = 1152,MDI_DEFAULT_HEIGHT = 900,MDI_MAX = 4,MDI_MAX_CLUTS = 3,MDI_PAGESIZE = 4096,MDI_MAPSIZE = 65536,MDI_REGOFFSET = 0,MDI_CURSOFFSET = 4096,MDI_DACOFFSET = 8192,MDI_XLUTOFFSET = 12288,MDI_CLUT1OFFSET = 16384,MDI_CLUT2OFFSET = 20480,MDI_CLUT3OFFSET = 24576,MDI_AUTOOFFSET = 61440,MDI_MCR_8PIX = 0,MDI_MCR_16PIX = 2,MDI_MCR_32PIX = 3,MDI_MCR_PIXPIPE0 = 0,MDI_MCR_PIXPIPE1 = 4,MDI_MCR_PIXPIPE2 = 8,MDI_MCR_PIXPIPE3 = 12,MDI_MCS_PIXSHIFT = 2,MDI_PPR_GREY = 0,MDI_PPR_LUT1 = 1,MDI_PPR_LUT2 = 2,MDI_PPR_LUT3 = 3,MDI_PPR_LEFT = 192,MDI_PPR_RIGHT = 48,MDI_PPR_LEFTSHIFT = 6,MDI_PPR_RIGHTSHIFT = 4,MDI_TMS0_MUX_STATE = 8,MDI_TMS0_IVS = 7,MDI_TMS1_CET = 240,MDI_TMS1_CST = 15,MDI_MSR_INTPEND = 32,MDI_MSR_VINT = 16,MDI_MSR_FAULT = 1,MDI_FSR_WERR = 1,MDI_FSR_UNIMP = 4,MDI_RSR_REVMASK = 240,MDI_RSR_IMPLMASK = 15,};
enum MACRO_MEM_SPEED {MEM_SPEED_MIN = 100,MEM_SPEED_MAX = 1370,};
enum MACRO_MNTMAXSTR {MNTMAXSTR = 128,};
enum MACRO_MODEVENTS {MODEVENTS = 15,MODGETFBNAME = 16,};
enum MACRO_MODSIZEOF {MODSIZEOF_DEVID = 10,};
enum MACRO_MSG_HIPRI {MSG_HIPRI = 0x1,MSG_ANY = 0x2,MSG_BAND = 0x4,MSG_XPG4 = 0x8,};
enum MACRO_MS_RDONLY {MS_RDONLY = 0x1,MS_FSS = 0x2,MS_DATA = 0x4,MS_NOSUID = 0x10,MS_REMOUNT = 0x20,MS_NOTRUNC = 0x40,MS_OVERLAY = 0x80,MS_OPTIONSTR = 0x100,MS_GLOBAL = 0x200,MS_FORCE = 0x400,MS_NOMNTTAB = 0x800,MS_SYSSPACE = 0x8,MS_NOSPLICE = 0x1000,MS_NOCHECK = 0x2000,MS_MASK = 0xBF7,MS_UMOUNT_MASK = 0x400,};
enum MACRO_MULBSHIFT {MULBSHIFT = 9,MULKSIZE = 1024,};
enum MACRO_MULKSHIFT {MULKSHIFT = 10,};
enum MACRO_MULLSHIFT {MULLSHIFT = 2,MULBSIZE = 512,};
enum MACRO_MULWSHIFT {MULWSHIFT = 1,MULLSIZE = 4,};
enum MACRO_NCR53C90A {NCR53C90A = 1,ESP236 = 2,};
enum MACRO_ND_ROUTER {ND_ROUTER_SOLICIT = 133,ND_ROUTER_ADVERT = 134,ND_NEIGHBOR_SOLICIT = 135,ND_NEIGHBOR_ADVERT = 136,ND_REDIRECT = 137,};
enum MACRO_NFS_OWNER {NFS_OWNER_MAGIC = 0x1D81E,};
enum MACRO_NISPASSWD {NISPASSWD_PROG = 100303,NISPASSWD_VERS = 1,NISPASSWD_AUTHENTICATE = 1,NISPASSWD_UPDATE = 2,};
enum MACRO_NIS_BOUND {NIS_BOUND = 0x1,NIS_TRANSIENT_ERRORS = 0x2,};
enum MACRO_NLM_VERS3 {NLM_VERS3 = 3,NLM_SHARE = 20,NLM_UNSHARE = 21,NLM_NM_LOCK = 22,NLM_FREE_ALL = 23,};
enum MACRO_NL_ARGMAX {NL_ARGMAX = 9,NL_LANGMAX = 14,NL_MSGMAX = 32767,NL_NMAX = 1,NL_SETMAX = 255,NL_TEXTMAX = 2048,};
enum MACRO_NOTACTIVE {NOTACTIVE = 0,ACTIVE = 128,};
enum MACRO_NUM_SENSE {NUM_SENSE_KEYS = 16,};
enum MACRO_OLD_ALLOW {OLD_ALLOW = 1,OLD_DISALLOW = 0,};
enum MACRO_OPROMCONS {OPROMCONS_NOT_WSCONS = 0,OPROMCONS_STDIN_IS_KBD = 1,OPROMCONS_STDOUT_IS_FB = 2,OPROMCONS_OPENPROM = 4,};
enum MACRO_OPROMNEXT {OPROMNEXT = 20229,};
enum MACRO_OUTSCREEN {OUTSCREEN = 0,OUTUARTA = 1,OUTUARTB = 2,};
enum MACRO_O_ACCMODE {O_ACCMODE = 3,};
enum MACRO_O_VISIBLE {O_VISIBLE = 0x1,O_ACTIVE = 0x2,O_PUBLIC = 0x4,O_EDIT = 0x8,O_WRAP = 0x10,O_BLANK = 0x20,O_AUTOSKIP = 0x40,O_NULLOK = 0x80,O_PASSOK = 0x100,O_STATIC = 0x200,O_NL_OVERLOAD = 0x1,O_BS_OVERLOAD = 0x2,};
enum MACRO_PART_OPEN {PART_OPEN_INT = 0x0,PART_CLOSE_INT = 0x1,PART_STABLE_INT = 0x2,};
enum MACRO_PCFS_PART {PCFS_PART = 0x1BE,PCFS_NUMPART = 0x4,PCFS_TYPESTRING_OFFSET16 = 0x36,PCFS_TYPESTRING_OFFSET32 = 0x52,PCFS_BPB = 0xB,PCFS_SIGN = 0x1FE,};
enum MACRO_PFIOCSETF {PFIOCSETF = 20481,};
enum MACRO_PF_UNSPEC {PF_UNSPEC = 0,PF_UNIX = 1,PF_INET = 2,PF_IMPLINK = 3,PF_PUP = 4,PF_CHAOS = 5,PF_NS = 6,PF_NBS = 7,PF_ECMA = 8,PF_DATAKIT = 9,PF_CCITT = 10,PF_SNA = 11,PF_DECnet = 12,PF_DLI = 13,PF_LAT = 14,PF_HYLINK = 15,PF_APPLETALK = 16,PF_NIT = 17,PF_802 = 18,PF_OSI = 19,PF_X25 = 20,PF_OSINET = 21,PF_GOSIP = 22,PF_IPX = 23,PF_ROUTE = 24,PF_LINK = 25,PF_INET6 = 26,PF_KEY = 27,PF_MAX = 27,};
enum MACRO_PMTAGSIZE {PMTAGSIZE = 14,};
enum MACRO_PM_STATUS {PM_STATUS = 1,PM_UNKNOWN = 2,PM_STARTING = 1,PM_ENABLED = 2,PM_DISABLED = 3,PM_STOPPING = 4,};
enum MACRO_PPC_ERROR {PPC_ERROR_B = 0x8,PPC_SELECT_IN_B = 0x10,PPC_PAPER_OUT_B = 0x20,PPC_ACK_B = 0x40,PPC_BUSY_B = 0x80,PPC_STROBE = 0x1,PPC_AFX = 0x2,PPC_INIT = 0x4,PPC_SLCT = 0x8,PPC_IRQE = 0x10,PPC_OUTPUT = 0x20,};
enum MACRO_PPC_LINES {PPC_LINES = 1,};
enum MACRO_PRSYSARGS {PRSYSARGS = 8,};
enum MACRO_PR_SLOWHZ {PR_SLOWHZ = 2,PR_FASTHZ = 5,PR_ATOMIC = 1,PR_ADDR = 2,PR_CONNREQUIRED = 4,PR_WANTRCVD = 8,PR_RIGHTS = 16,PR_OOB_ADDR = 32,};
enum MACRO_P_INITPID {P_INITPID = 1,P_INITUID = 0,P_INITPGID = 0,};
enum MACRO_P_OFFLINE {P_OFFLINE = 1,P_ONLINE = 2,P_STATUS = 3,P_BAD = 4,P_POWEROFF = 5,P_NOINTR = 6,};
enum MACRO_QECPERIOD {QECPERIOD = 10,};
enum MACRO_Q_QUOTAON {Q_QUOTAON = 1,Q_QUOTAOFF = 2,Q_SETQUOTA = 3,Q_GETQUOTA = 4,Q_SETQLIM = 5,Q_SYNC = 6,Q_ALLSYNC = 7,Q_QUOTACTL = 197001,};
enum MACRO_RADIXCHAR {RADIXCHAR = 39,};
enum MACRO_RECOMPUTE {RECOMPUTE_DONE = 0x80,};
enum MACRO_RELOCATED {RELOCATED_DIR = 0x4,};
enum MACRO_RESET_ALL {RESET_ALL = 0,RESET_TARGET = 1,RESET_BUS = 2,};
enum MACRO_RIGHTCTRL {RIGHTCTRL = 5,CTRLMASK = 48,};
enum MACRO_RIGHTFUNC {RIGHTFUNC = 0x610,};
enum MACRO_RMODEMASK {RMODEMASK = 0x3,RPROTDAT = 0x4,RPROTDIS = 0x8,RPROTNORM = 0x10,};
enum MACRO_RPCBVERS4 {RPCBVERS4 = 4,};
enum MACRO_RPROTMASK {RPROTMASK = 0x1C,RFLUSHMASK = 0x20,};
enum MACRO_RSETCTSET {RSETCTSET = 0x600,RSETCRSET = 0x800,};
enum MACRO_RSTATPROC {RSTATPROC_STATS = 1,RSTATPROC_HAVEDISK = 2,};
enum MACRO_RSTATPROG {RSTATPROG = 100001,};
enum MACRO_RSTATVERS {RSTATVERS_VAR = 4,};
enum MACRO_R_CTL_ACK {R_CTL_ACK_1 = 0xC0,R_CTL_ACK_N = 0xC1,R_CTL_P_RJT = 0xC2,R_CTL_F_RJT = 0xC3,R_CTL_P_BSY = 0xC4,R_CTL_F_BSY_DF = 0xC5,R_CTL_F_BSY_LC = 0xC6,R_CTL_LCR = 0xC7,};
enum MACRO_SCSIPROBE {SCSIPROBE_EXISTS = 0,SCSIPROBE_NONCCS = 1,SCSIPROBE_NORESP = 2,SCSIPROBE_NOMEM = 3,SCSIPROBE_FAILURE = 4,SCSIPROBE_BUSY = 5,SCSIPROBE_NOMEM_CB = 6,};
enum MACRO_SC_STATUS {SC_STATUS = 1,SC_ENABLE = 2,SC_DISABLE = 3,SC_READDB = 4,};
enum MACRO_SC_WCLOSE {SC_WCLOSE = 0x20000,};
enum MACRO_SEC_QUERY {SEC_QUERY = 0x1,};
enum MACRO_SE_NOSWAP {SE_NOSWAP = -1,SE_NOANON = -2,};
enum MACRO_SFIOCGMAP {SFIOCGMAP = 55809,};
enum MACRO_SHIFTKEYS {SHIFTKEYS = 0x100,BUCKYBITS = 0x200,};
enum MACRO_SHIFTLOCK {SHIFTLOCK = 1,LEFTSHIFT = 2,};
enum MACRO_SHIFTMASK {SHIFTMASK = 0xE,};
enum MACRO_SIOCADDRT {SIOCADDRT = -2144308726,};
enum MACRO_SIOCDELRT {SIOCDELRT = -2144308725,};
enum MACRO_SI_CACHED {SI_CACHED = 0x1,};
enum MACRO_SM_FORMAT {SM_FORMAT_LONG = 0x2001,SM_FORMAT_QUICK = 0x2002,SM_FORMAT_FORCE = 0x2003,SM_FORMAT_HD = 0x2011,SM_FORMAT_DD = 0x2012,SM_FORMAT_ED = 0x2013,SM_FORMAT_MD = 0x2014,SM_FORMAT_IMMEDIATE = 0x2021,SM_FORMAT_BLOCKED = 0x2022,};
enum MACRO_SOFT_CARR {SOFT_CARR = 0x2,};
enum MACRO_SOMAXCONN {SOMAXCONN = 5,};
enum MACRO_SPRAYPROC {SPRAYPROC_SPRAY = 1,SPRAYPROC_GET = 2,SPRAYPROC_CLEAR = 3,};
enum MACRO_SPRAYPROG {SPRAYPROG = 100012,};
enum MACRO_SPRAYVERS {SPRAYVERS = 1,};
enum MACRO_STC_DEBUG {STC_DEBUG_DEFLEVEL = 1,STC_TRACK = 5,STC_DEBUG = 9,STC_TESTING = 3,STC_EXTRACT_FAILURE = -1,STC_BOOLEAN = 0,STC_VALUED = 1,STC_LINES = 8,};
enum MACRO_STC_DRAIN {STC_DRAIN_BSIZE = 64,STC_RTPR = 18,};
enum MACRO_STC_WOPEN {STC_WOPEN = 0x1,STC_ISOPEN = 0x2,STC_OUT = 0x4,STC_CARR_ON = 0x8,STC_XCLUDE = 0x10,STC_STOPPED = 0x20,STC_DELAY = 0x40,STC_BREAK = 0x80,STC_BUSY = 0x100,STC_FLUSH = 0x200,STC_OPEN_INH = 0x400,STC_WCLOSE = 0x800,STC_XWAIT = 0x1000,STC_IXOFF = 0x2000,STC_CANWAIT = 0x4000,STC_CONTROL = 0x8000,STC_SBREAK = 0x10000,STC_EBREAK = 0x20000,STC_ISROOT = 0x40000,STC_STARTED = 0x80000,STC_TXWORK = 0x100000,STC_RXWORK = 0x200000,STC_CVBROADCAST = 0x400000,STC_UNTIMEOUT = 0x800000,STC_MHANGUP = 0x1000000,STC_MUNHANGUP = 0x2000000,STC_MBREAK = 0x4000000,STC_INSOFTINT = 0x8000000,STC_LP = 0x10000000,STC_ACKWAIT = 0x40000000,STC_DRAIN = 0x80000000,STC_SOFTINTROK = 0x1,STC_CD180INTROK = 0x2,STC_PPCINTROK = 0x4,STC_REGOK = 0x8,STC_ATTACHOK = 0x10,STC_COPYIN = 0x1,STC_COPYOUT = 0x2,};
enum MACRO_STDISABLE {STDISABLE = 5,};
enum MACRO_STEP_NONE {STEP_NONE = 0,STEP_REQUESTED = 1,STEP_ACTIVE = 2,STEP_WASACTIVE = 3,};
enum MACRO_STR_CLONE {STR_CLONE = 1,};
enum MACRO_SUPPORTED {SUPPORTED_LOG_PAGES_PAGE = 0x0,TAPE_ALERT_PAGE = 0x2E,};
enum MACRO_SYSTEMBIT {SYSTEMBIT = 1,SYSTEMMASK = 256,};
enum MACRO_TADDRBUSY {TADDRBUSY = 23,};
enum MACRO_TA_BINARY {TA_BINARY = 1,TA_CRYPT = 2,TA_XDR = 4,TA_SEARCHABLE = 8,TA_CASE = 16,TA_MODIFIED = 32,TA_ASN1 = 64,};
enum MACRO_TBUFOVFLW {TBUFOVFLW = 11,};
enum MACRO_TCO_LTPDU {TCO_LTPDU = 0x100,TCO_ACKTIME = 0x200,TCO_REASTIME = 0x300,TCO_EXTFORM = 0x400,TCO_FLOWCTRL = 0x500,TCO_CHECKSUM = 0x600,TCO_NETEXP = 0x700,TCO_NETRECPTCF = 0x800,TCO_PREFCLASS = 0x900,TCO_ALTCLASS1 = 0xA00,TCO_ALTCLASS2 = 0xB00,TCO_ALTCLASS3 = 0xC00,TCO_ALTCLASS4 = 0xD00,};
enum MACRO_TCSADRAIN {TCSADRAIN = 21519,};
enum MACRO_TCSAFLUSH {TCSAFLUSH = 21520,};
enum MACRO_TIMEOUT_0 {TIMEOUT = 0x1,WOPEN = 0x2,ISOPEN = 0x4,};
enum MACRO_TIOCFLUSH {TIOCFLUSH = 29712,};
enum MACRO_TIOCGPGRP {TIOCGPGRP = 29716,};
enum MACRO_TIOCNOTTY {TIOCNOTTY = 29809,};
enum MACRO_TIOCSPGRP {TIOCSPGRP = 29717,};
enum MACRO_TIOCSTART {TIOCSTART = 29806,};
enum MACRO_TM_SUNDAY {TM_SUNDAY = 0,TM_MONDAY = 1,TM_TUESDAY = 2,TM_WEDNESDAY = 3,TM_THURSDAY = 4,TM_FRIDAY = 5,TM_SATURDAY = 6,TM_JANUARY = 0,TM_FEBRUARY = 1,TM_MARCH = 2,TM_APRIL = 3,TM_MAY = 4,TM_JUNE = 5,TM_JULY = 6,TM_AUGUST = 7,TM_SEPTEMBER = 8,TM_OCTOBER = 9,TM_NOVEMBER = 10,TM_DECEMBER = 11,TM_YEAR_BASE = 1900,};
enum MACRO_TNF_DATUM {TNF_DATUM_NULL = 0,TNF_ERRNO_MAX = 1023,};
enum MACRO_TOP_FIRST {TOP_FIRST = 256,TOP_LAST = 511,};
enum MACRO_TOUTSTATE {TOUTSTATE = 6,};
enum MACRO_TPLFMTEDC {TPLFMTEDC_NONE = 0x0,TPLFMTEDC_CKSUM = 0x1,TPLFMTEDC_CRC = 0x2,TPLFMTEDC_PCC = 0x3,TPLFMTEDC_VS = 0x80,};
enum MACRO_TP_NINDIR {TP_NINDIR = 512,};
enum MACRO_TR_CANNOT {TR_CANNOT = 0,TR_CAN = 1,};
enum MACRO_TSETCTSET {TSETCTSET = 0xC0,TSETCRSET = 0x100,RSETCLK = 0xE00,};
enum MACRO_TS_XCLUDE {TS_XCLUDE = 0x1,TS_TTSTOP = 0x2,TS_TBLOCK = 0x4,TS_QUOT = 0x8,TS_ERASE = 0x10,TS_SLNCH = 0x20,TS_PLNCH = 0x40,TS_TTCR = 0x80,TS_NOCANON = 0x100,TS_RESCAN = 0x400,TS_MREAD = 0x800,TS_FLUSHWAIT = 0x1000,TS_MEUC = 0x10000,TS_WARNED = 0x20000,TS_CLOSE = 0x40000,TS_IFBLOCK = 0x100000,TS_OFBLOCK = 0x200000,TS_ISPTSTTY = 0x400000,};
enum MACRO_TXBUFSIZE {LINE_TXBUFSIZE = 16,PPC_TXBUFSIZE = 16,};
enum MACRO_USB_CLASS {USB_CLASS_DESCR_TYPE_REPORT = 0x2200,};
enum MACRO_USB_DESCR {USB_DESCR_TYPE_HID = 0x21,USB_HID_DESCR_SIZE = 0xA,};
enum MACRO_UTMAXTYPE {UTMAXTYPE = 9,};
enum MACRO_VERSQUIET {SVCGET_VERSQUIET = 1,SVCSET_VERSQUIET = 2,};
enum MACRO_VOLIOCMAP {VOLIOCMAP = 30209,};
enum MACRO_VUIDGADDR {VUIDGADDR = 30212,};
enum MACRO_VUIDSADDR {VUIDSADDR = 30211,};
enum MACRO_V_VERSION {V_VERSION = 0x1,V_UNASSIGNED = 0x0,V_BOOT = 0x1,V_ROOT = 0x2,V_SWAP = 0x3,V_USR = 0x4,V_BACKUP = 0x5,V_STAND = 0x6,V_VAR = 0x7,V_HOME = 0x8,V_ALTSCTR = 0x9,V_CACHE = 0xA,V_UNMNT = 0x1,V_RONLY = 0x10,};
enum MACRO_WCHAR_CS0 {WCHAR_CS0 = 0x0,WCHAR_CS1 = 0x30000000,WCHAR_CS2 = 0x10000000,WCHAR_CS3 = 0x20000000,};
enum MACRO_WUNTRACED {WUNTRACED = 0x4,WNOHANG = 0x40,};
enum MACRO_YEARSHIFT {YEARSHIFT = 9,};
enum MACRO__FIOISLOG {_FIOISLOG = 536897096,};
enum MACRO__INFINITY {_INFINITY = 16000,};
enum MACRO__NOCHANGE {_NOCHANGE = -1,};
enum MACRO__PC_ERROR {_PC_ERROR = 0,};
enum MACRO__STRREDIR {_STRREDIR_MODID = 7326,};
enum MACRO___NAMESER {__NAMESER = 19961001,};
typedef struct OCF_OCF_CardsList_t *OCF_CardsList_t;
typedef struct vuid_addr_probe Vuid_addr_probe;
struct _FN_attrmodlist;
struct _FN_valuelist_t;
typedef struct _4DE03E8ED1D3CAFD22EDD6A1211D4CC8 _LC_core_time_t;
typedef struct __LC_transtabs_t _LC_transtabs_t;
enum __nsw_parse_err {__NSW_CONF_PARSE_SUCCESS = 0x0,__NSW_CONF_PARSE_NOFILE = 0x1,__NSW_CONF_PARSE_NOPOLICY = 0x2,__NSW_CONF_PARSE_SYSERR = 0x3,};
struct _nl_catd_struct {void *__content;int __size;};
typedef struct ami_nss_cert_list *ami_cert_list_t;
struct attrcache_index {unsigned int ach_written : 1;unsigned int ach_offset : 31;};
typedef struct au_attr32_tok au_attr32_tok_t;
typedef struct au_attr64_tok au_attr64_tok_t;
typedef struct au_file32_tok au_file32_tok_t;
typedef struct au_file64_tok au_file64_tok_t;
typedef struct au_groups_tok au_groups_tok_t;
typedef struct au_inaddr_tok au_inaddr_tok_t;
typedef struct au_opaque_tok au_opaque_tok_t;
typedef struct au_proc32_tok au_proc32_tok_t;
typedef struct au_proc64_tok au_proc64_tok_t;
typedef struct au_server_tok au_server_tok_t;
typedef struct au_socket_tok au_socket_tok_t;
typedef struct au_subj32_tok au_subj32_tok_t;
typedef struct au_subj64_tok au_subj64_tok_t;
enum cachefs_rl_type {CACHEFS_RL_NONE = 0x101,CACHEFS_RL_FREE = 0x102,CACHEFS_RL_GC = 0x103,CACHEFS_RL_ACTIVE = 0x104,CACHEFS_RL_ATTRFILE = 0x105,CACHEFS_RL_MODIFIED = 0x106,CACHEFS_RL_PACKED = 0x107,CACHEFS_RL_PACKED_PENDING = 0x108,CACHEFS_RL_MF = 0x109,};
typedef struct cachefs_stats cachefs_stats_t;
typedef struct callout_table callout_table_t;
typedef char cfga_phys_ext_t[1054];
typedef struct dacf_rsrvlist dacf_rsrvlist_t;
typedef struct dbri_chip_cmd dbri_chip_cmd_t;
typedef struct ddi_intr_info ddi_intr_info_t;
struct ddi_minor_alias {struct ddi_minor_data *dmp;};
typedef struct _6F34A6491CA243DAC3BD57A8740A9A28 dl_attach_req_t;
typedef struct _54EC9098503BC20AC050B3CB62F30CBC dl_detach_req_t;
typedef struct _4675A006519F4470174748AEB7610016 dl_resilience_t;
typedef struct _1095822099D52E0E523F071FF4F33828 dl_transdelay_t;
typedef struct _54EC9098503BC20AC050B3CB62F30CBC dl_unbind_req_t;
typedef struct extension_signature_struct ext_signature_t;
enum fc_reset_action {FC_RESET_RETURN_NONE = 0x0,FC_RESET_RETURN_ALL = 0x1,FC_RESET_RETURN_OUTSTANDING = 0x2,};
typedef struct file_set_desc file_set_desc_t;
typedef struct ftrace_record ftrace_record_t;
typedef struct gss_buffer_desc_struct gss_buffer_desc;
enum hs_voldesc_type {VD_BOOT = 0x0,VD_SFS = 0x1,VD_CCFS = 0x2,VD_UNSPEC = 0x3,VD_EOV = 0xFF,};
typedef struct ildTraceEntry ildTraceEntry_t;
typedef struct _CAD4AC390BD8237C223B7EC96D9848DF ipd_blacklist_t;
typedef struct isdn_conn_req isdn_conn_req_t;
typedef struct isdn_conn_tab isdn_conn_tab_t;
enum isdn_param_asmb {ISDN_PARAM_TE_ASMB_UNKNOWN = 0xFFFFFFFF,ISDN_PARAM_TE_ASMB_CCITT88 = 0x0,ISDN_PARAM_TE_ASMB_CTS2 = 0x1,};
typedef struct _725E3ED3C7EFF3B90CE6F33C2B731462 llc_con_parms_t;
typedef struct mhioc_inresvs mhioc_inresvs_t;
typedef struct mib2_udpEntry mib2_udpEntry_t;
struct nd_hostservlist {int h_cnt;struct nd_hostserv *h_hostservs;};
typedef struct nd_opt_rd_hdr nd_opt_rd_hdr_t;
enum nfs_access_type {NFS_ACCESS_UNKNOWN = 0x0,NFS_ACCESS_ALLOWED = 0x1,NFS_ACCESS_DENIED = 0x2,};
struct nfs_readdir_req {int (*readdir)();struct rddir_cache *rdc;};
struct nfsl_flush_args {int version;int directive;char *buff;int buff_len;};
enum nispasswd_field {NPD_PASSWD = 0x0,NPD_GECOS = 0x1,NPD_SHELL = 0x2,NPD_SECRETKEY = 0x3,};
typedef struct nss_XbyY_args nss_XbyY_args_t;
typedef struct nss_db_params nss_db_params_t;
typedef struct _A74C68CDF7A8346DB4740D5AEB53B0D9 papValidation_t;
typedef struct part_int_desc part_int_desc_t;
enum pppLinkVersions {pppRFC1171 = 0x1,pppRFC1331 = 0x2,};
typedef struct _AAC6986373C252F265E5EE15F2042600 pppPAPMessage_t;
typedef struct _807D4AC2255C0A3001450ADEC11FD819 pppProtoStart_t;
typedef struct _31AE19E04776D95D90F1AA36D4709208 ppp_diag_conf_t;
enum ppp_diag_ioctls {PPP_DIAG_GET_CONF = 0x300,PPP_DIAG_SET_CONF = 0x301,};
typedef struct _pthread_mutex pthread_mutex_t;
typedef struct rce_interface rce_interface_t;
typedef struct _211BFD783D8D84C3D8E218C4E6F77865 rpc_doorcalls_t;
typedef struct _E9AB0BCACA98F703B381F818839B97CB rpc_gss_error_t;
typedef struct _C9224CB3878060960E30C62E95CBCE30 rpc_gss_ucred_t;
struct rsm_es_mod_stat {unsigned char modfail : 1;unsigned char rsvd01 : 1;unsigned char dual_fan_failure : 1;unsigned char rsvd02 : 5;};
typedef struct sadb_lifetime sadb_lifetime_t;
typedef struct sadb_spirange sadb_spirange_t;
struct scsi_bfi_defect {unsigned int cyl : 24;unsigned int head : 8;int bytes_from_index;};
typedef struct smdevice_info smdevice_info_t;
typedef struct smmedium_property smmedium_prop_t;
typedef struct _E7FD7F5919C5B86C45B84B2C205CAA78 strlog_struct_t;
struct tblock__tar_hdr {char t_name[100];char t_mode[8];char t_uid[8];char t_gid[8];char t_size[12];char t_mtime[12];char t_cksum[8];char t_typeflag;char t_linkname[100];char t_magic[6];char t_version[2];char t_uname[32];char t_gname[32];char t_devmajor[8];char t_devminor[8];char t_prefix[155];};
typedef struct _37DC3B712C7ED020EE15F9E8AA85032C tcp_sack_info_t;
typedef struct td_synchandle td_synchandle_t;
typedef struct td_thr_events td_thr_events_t;
typedef unsigned char tnf_byte_lock_t;
typedef struct _69B63B591732E05C41D6CC17B4FA972F tnf_probevals_t;
typedef struct tnfctl_handle tnfctl_handle_t;
typedef struct usb_hid_descr usb_hid_descr_t;
typedef struct usb_hub_descr usb_hub_descr_t;
struct usoc_fm_version {int fcode_ver_len;int mcode_ver_len;int prom_ver_len;char *fcode_ver;char *mcode_ver;char *prom_ver;};
typedef void *utrap_handler_t;
typedef struct vt_kthread_id vt_kthread_id_t;
typedef struct vt_start_time vt_start_time_t;
typedef struct vt_total_time vt_total_time_t;
typedef struct vt_uthread_id vt_uthread_id_t;
typedef struct _FN_attribute FN_attribute_t;
typedef struct _0F6DEF3B8E99612FFBC8A726FE9B31C3 FN_attrvalue_t;
typedef struct _FN_valuelist_t FN_valuelist_t;
typedef struct _488DA2D57F3DEC7D8F8D2973FF098AA5 *LayoutEditSize;
typedef struct _192236FE3311D06A1856619BA2C00C00 LayoutValueRec;
typedef struct _LclCharsetInfo LclCharsetInfo;
typedef struct _96509CB31A3C50C1F728CA63BB4787CF LclCharsetList;
typedef struct _AF17FACC7559AA50C79D476A9538E1B7 LclContentInfo;
enum MACRO_ACDIRMAX {ACDIRMAX = 60,};
enum MACRO_ACDIRMIN {ACDIRMIN = 30,};
enum MACRO_ACLPROC2 {ACLPROC2_NULL = 0,ACLPROC2_GETACL = 1,ACLPROC2_SETACL = 2,ACLPROC2_GETATTR = 3,ACLPROC2_ACCESS = 4,};
enum MACRO_ACLPROC3 {ACLPROC3_NULL = 0,ACLPROC3_GETACL = 1,ACLPROC3_SETACL = 2,};
enum MACRO_ACMAXMAX {ACMAXMAX = 36000,};
enum MACRO_ACMINMAX {ACMINMAX = 3600,};
enum MACRO_ACREGMIN {ACREGMIN = 3,ACREGMAX = 60,};
enum MACRO_ADDRSORT {ADDRSORT = 1,MAXADDR = 10,};
enum MACRO_ADDR_LEN {IPV4_ADDR_LEN = 4,IP_ADDR_LEN = 4,};
enum MACRO_AIOAREAD {AIOAREAD = 11,};
enum MACRO_AIOERROR {AIOERROR = 9,};
enum MACRO_AIOFSYNC {AIOFSYNC = 20,};
enum MACRO_AIOLIO64 {AIOLIO64 = 13,};
enum MACRO_AIOSTART {AIOSTART = 6,};
enum MACRO_ALLDELAY {ALLDELAY = 0xFF00,};
enum MACRO_ALL_VIFS {ALL_VIFS = 65535,};
enum MACRO_ALTGRAPH {ALTGRAPH = 9,ALTGRAPHMASK = 512,};
enum MACRO_AREGTYPE {AREGTYPE = 0,LNKTYPE = 49,};
enum MACRO_AUTHATTR {AUTHATTR_DB_NCOL = 6,AUTHATTR_DB_NKEYCOL = 1,AUTHATTR_KEYCOL0 = 0,};
enum MACRO_AUTOPUSH {SET_AUTOPUSH = 0,GET_AUTOPUSH = 1,CLR_AUTOPUSH = 2,};
enum MACRO_AU_CLASS {AU_CLASS_NAME_MAX = 8,AU_CLASS_DESC_MAX = 72,AU_EVENT_NAME_MAX = 30,AU_EVENT_DESC_MAX = 50,AU_EVENT_LINE_MAX = 256,};
enum MACRO_A_REBOOT {A_REBOOT = 1,A_SHUTDOWN = 2,A_FREEZE = 3,A_REMOUNT = 4,A_DUMP = 5,A_FTRACE = 15,A_SWAPCTL = 16,};
enum MACRO_BADFTYPE {BADFTYPE = 63,};
enum MACRO_BADINPUT {BADINPUT = 1,};
enum MACRO_BADMAJOR {BADMAJOR = 4294967295,};
enum MACRO_BADMINOR {BADMINOR = 4294967295,};
enum MACRO_BURST128 {BURST128 = 0x80,};
enum MACRO_BW2BYTES {BW2BYTES = 129600,};
enum MACRO_BW2SIZEX {BW2SIZEX = 1152,};
enum MACRO_BW2SIZEY {BW2SIZEY = 900,};
enum MACRO_CAPSLOCK {CAPSLOCK = 0,CAPSMASK = 1,};
enum MACRO_CFS_DLOG {CFS_DLOG_VERSION = 1001,CFS_FS_CONNECTED = 0,CFS_FS_DISCONNECTED = 1,CFS_FS_RECONNECTING = 2,};
enum MACRO_CHAR_MIN {CHAR_MIN = -128,CHAR_MAX = 127,};
enum MACRO_CHECKSUM {CHECKSUM = 84446,};
enum MACRO_COMPOSE2 {COMPOSE2 = 3,FLTACCENT = 4,};
enum MACRO_CONTINUE {CONTINUE = 3,TRANSIENT = 4,};
enum MACRO_CONTTYPE {CONTTYPE = 55,TSUID = 2048,};
enum MACRO_CPC_BIND {CPC_BIND_EVENT = 0,CPC_TAKE_SAMPLE = 1,CPC_USR_EVENTS = 2,CPC_SYS_EVENTS = 3,CPC_INVALIDATE = 4,CPC_RELE = 5,};
enum MACRO_CRNCYSTR {CRNCYSTR = 43,};
enum MACRO_CS_TYPE0 {CS_TYPE0 = 0x0,CS_TYPE1 = 0x1,CS_TYPE2 = 0x2,CS_TYPE3 = 0x3,CS_TYPE4 = 0x4,CS_TYPE5 = 0x5,CS_TYPE6 = 0x6,CS_TYPE7 = 0x7,CS_TYPE8 = 0x8,};
enum MACRO_CTLSMASK {CTLSMASK = 0x100,};
enum MACRO_DAYSHIFT {DAYSHIFT = 0,DAYMASK = 31,};
enum MACRO_DDI_PROP {DDI_PROP_DONTPASS = 0x1,DDI_PROP_CANSLEEP = 0x2,DDI_PROP_SYSTEM_DEF = 0x4,DDI_PROP_NOTPROM = 0x8,DDI_PROP_DONTSLEEP = 0x10,DDI_PROP_STACK_CREATE = 0x20,DDI_PROP_UNDEF_IT = 0x40,DDI_PROP_HW_DEF = 0x80,DDI_PROP_TYPE_INT = 0x100,DDI_PROP_TYPE_STRING = 0x200,DDI_PROP_TYPE_BYTE = 0x400,DDI_PROP_TYPE_COMPOSITE = 0x800,DDI_PROP_TYPE_ANY = 0xF00,DDI_PROP_TYPE_MASK = 0xF00,DDI_DEV_T_NONE = 0xFFFFFFFF,DDI_DEV_T_ANY = 0xFFFFFFFE,DDI_MAJOR_T_UNKNOWN = 0x0,};
enum MACRO_DDI_UMEM {DDI_UMEM_SLEEP = 0x0,DDI_UMEM_NOSLEEP = 0x1,DDI_UMEM_PAGEABLE = 0x2,DDI_UMEMLOCK_READ = 0x1,DDI_UMEMLOCK_WRITE = 0x2,};
enum MACRO_DEFGROUP {DEFGROUP = 1,};
enum MACRO_DEFINACT {DEFINACT = 0,MAXGLEN = 9,MAXDLEN = 80,};
enum MACRO_DEMANGLE {DEMANGLE_ESPACE = -1,DEMANGLE_ENAME = 1,};
enum MACRO_DEVCLASS {DEVCLASS_MASK = 0xE,};
enum MACRO_DF_VALID {DF_VALID = 0x1,DF_COMPLETE = 0x2,DF_LIVE = 0x4,};
enum MACRO_DIAGPART {DIAGPART = 18,};
enum MACRO_DIOCGETB {DIOCGETB = 25602,};
enum MACRO_DIOCGETC {DIOCGETC = 25601,};
enum MACRO_DIOCGETP {DIOCGETP = 25608,};
enum MACRO_DIOCSETE {DIOCSETE = 25603,};
enum MACRO_DIOCSETP {DIOCSETP = 25609,};
enum MACRO_DIRECTIO {DIRECTIO_OFF = 0,DIRECTIO_ON = 1,};
enum MACRO_DISALLOW {DISALLOW_BOTH = 65538,};
enum MACRO_DK_LABEL {DK_LABEL_SIZE = 512,DK_ACYL = 2,DK_DEVID_BLKSIZE = 512,DK_DEVID_REV_MSB = 0,DK_DEVID_REV_LSB = 1,DK_DEVLEN = 16,};
enum MACRO_DLIOCRAW {DLIOCRAW = 17409,};
enum MACRO_DMA_REV1 {DMA_REV1 = 0x8,DMA_REV2 = 0x9,};
enum MACRO_DMA_REV3 {DMA_REV3 = 0xA,};
enum MACRO_DONTWAIT {DONTWAIT = 0,WAIT = 1,};
enum MACRO_DOWNLOAD {DOWNLOAD_REQUIRED = 2,};
enum MACRO_DRSELMSK {DRSELMSK = 0x3,RQM = 0x80,};
enum MACRO_DUPCACHE {DUPCACHE_FIXEDTIME = 0,};
enum MACRO_ECPP_MAX {ECPP_MAX_TIMEOUT = 604800,ECPP_W_TIMEOUT_DEFAULT = 60,ECPP_reseverd1 = 1,ECPP_reseverd2 = 2,ECPP_reserved3 = 4,ECPP_nERR = 8,ECPP_SLCT = 16,ECPP_PE = 32,ECPP_nACK = 64,ECPP_nBUSY = 128,ECPP_STB = 1,ECPP_AFX = 2,ECPP_nINIT = 4,ECPP_SLCTIN = 8,ECPP_INTR_EN = 16,ECPP_REV_DIR = 32,ECPP_reseverd4 = 64,ECPP_reserved5 = 128,ECPP_DCR_SET = 192,ECPP_PORT_DMA = 1,ECPP_PORT_PIO = 2,ECPP_PORT_TDMA = 3,};
enum MACRO_EF_SPARC {EF_SPARC_32PLUS_MASK = 0xFFFF00,EF_SPARC_32PLUS = 0x100,EF_SPARC_EXT_MASK = 0xFFFF00,EF_SPARC_SUN_US1 = 0x200,EF_SPARC_HAL_R1 = 0x400,EF_SPARC_SUN_US3 = 0x800,EF_SPARCV9_MM = 0x3,EF_SPARCV9_TSO = 0x0,EF_SPARCV9_PSO = 0x1,EF_SPARCV9_RMO = 0x2,};
enum MACRO_ENOSPACE {ENOSPACE = 3,EBADOP = 4,};
enum MACRO_ERRORKEY {ERRORKEY = 0x7E,};
enum MACRO_ESP_SIZE {ESP_SIZE = 0x2000,};
enum MACRO_ESP_TEST {ESP_TEST_TGT = 0x1,ESP_TEST_INI = 0x2,ESP_TEST_TRI = 0x4,ESP_CONF2_RESETF = 0x80,ESP_CONF2_FENABLE = 0x40,ESP_CONF2_STATPL = 0x40,ESP_CONF2_BYTECM = 0x20,ESP_CONF2_TRIDMA = 0x10,ESP_CONF2_SCSI2 = 0x8,ESP_CONF2_TBADPAR = 0x4,ESP_CONF2_REGPAR = 0x2,ESP_CONF2_DMAPAR = 0x1,ESP_CONF3_236_IDRESCHK = 0x80,ESP_CONF3_236_QUENB = 0x40,ESP_CONF3_236_CDB10 = 0x20,ESP_CONF3_236_FASTSCSI = 0x10,ESP_CONF3_236_FASTCLK = 0x8,ESP_CONF3_236_SAVERESB = 0x4,ESP_CONF3_236_ALTDMA = 0x2,ESP_CONF3_236_THRESH8 = 0x1,ESP_CONF3_100A_IDRESCHK = 0x10,ESP_CONF3_100A_QUENB = 0x8,ESP_CONF3_100A_CDB10 = 0x4,ESP_CONF3_100A_FASTSCSI = 0x2,ESP_CONF3_100A_FASTCLK = 0x1,ESP_FAS100A = 0x0,ESP_FAS236 = 0x2,ESP_REV_MASK = 0x7,ESP_FCODE_MASK = 0xF8,};
enum MACRO_ETHERMAX {ETHERMAX = 1514,};
enum MACRO_ETHERMIN {ETHERMIN = 60,};
enum MACRO_ETHERMTU {ETHERMTU = 1500,};
enum MACRO_EUC_MAXW {EUC_MAXW = 4,EUC_WARNCNT = 20,};
enum MACRO_EXCHANGE {EXCHANGE_ERROR = 0x11,PROTOCOL_ERROR = 0x12,};
enum MACRO_EXECATTR {EXECATTR_DB_NCOL = 7,EXECATTR_DB_NKEYCOL = 2,EXECATTR_KEYCOL0 = 0,EXECATTR_KEYCOL1 = 5,};
enum MACRO_EXPER_IP {EXPER_IP_GROUP_MEMBERSHIP = 100,EXPER_IP6_GROUP_MEMBERSHIP = 101,};
enum MACRO_FASTSCSI {FASTSCSI_THRESHOLD = 50,};
enum MACRO_FAS_STAT {FAS_STAT_IPEND = 0x80,FAS_STAT_GERR = 0x40,FAS_STAT_PERR = 0x20,FAS_STAT_XZERO = 0x10,FAS_STAT_XCMP = 0x8,FAS_STAT_MSG = 0x4,FAS_STAT_CD = 0x2,FAS_STAT_IO = 0x1,FAS_PHASE_MASK = 0x7,FAS_PHASE_DATA_OUT = 0x0,FAS_PHASE_DATA_IN = 0x1,FAS_PHASE_COMMAND = 0x2,FAS_PHASE_STATUS = 0x3,FAS_PHASE_MSG_OUT = 0x6,FAS_PHASE_MSG_IN = 0x7,FAS_INT_RESET = 0x80,FAS_INT_ILLEGAL = 0x40,FAS_INT_DISCON = 0x20,FAS_INT_BUS = 0x10,FAS_INT_FCMP = 0x8,FAS_INT_RESEL = 0x4,FAS_INT_SELATN = 0x2,FAS_INT_SEL = 0x1,FAS_STEP_MASK = 0x7,FAS_STEP_ARBSEL = 0x0,FAS_STEP_SENTID = 0x1,FAS_STEP_NOTCMD = 0x2,FAS_STEP_PCMD = 0x3,FAS_STEP_DONE = 0x4,FAS_CONF_SLOWMODE = 0x80,FAS_CONF_DISRINT = 0x40,FAS_CONF_PARTEST = 0x20,FAS_CONF_PAREN = 0x10,FAS_CONF_CHIPTEST = 0x8,FAS_CONF_BUSID = 0x7,FAS_TEST_TGT = 0x1,FAS_TEST_INI = 0x2,FAS_TEST_TRI = 0x4,FAS_CONF2_XL32 = 0x80,FAS_CONF2_MKDONE = 0x40,FAS_CONF2_PAUSE_INTR_DISABLE = 0x20,FAS_CONF2_FENABLE = 0x10,FAS_CONF2_SCSI2 = 0x8,FAS_CONF2_TGT_BAD_PRTY_ABORT = 0x4,FAS_CONF2_DMA_PRTY_ENABLE = 0x1,FAS_CONF3_ODDBYTE_AUTO = 0x80,FAS_CONF3_WIDE = 0x40,FAS_CONF3_IDBIT3 = 0x20,FAS_CONF3_IDRESCHK = 0x10,FAS_CONF3_QUENB = 0x8,FAS_CONF3_CDB10 = 0x4,FAS_CONF3_FASTSCSI = 0x2,FAS_CONF3_FASTCLK = 0x1,FAS_CONF4_PADMSGS = 0x20,FAS_REV_MASK = 0x7,FAS_FCODE_MASK = 0xF8,FAS_CLOCK_DELAY = 0x1E02,};
enum MACRO_FBIOSCMS {FBIOSCMS = 17936,};
enum MACRO_FEEDBACK {FEEDBACK_REXMIT1 = 1,FEEDBACK_OK = 2,};
enum MACRO_FIFOSIZE {FIFOSIZE = 16,};
enum MACRO_FIFOTYPE {FIFOTYPE = 54,};
enum MACRO_FILNMLEN {FILNMLEN = 14,};
enum MACRO_FINEUSEC {FINEUSEC = 4194304,};
enum MACRO_FIORDCHK {FIORDCHK = 26115,};
enum MACRO_FLTSTACK {FLTSTACK = 10,};
enum MACRO_FLTWATCH {FLTWATCH = 12,};
enum MACRO_FLUSHALL {FLUSHALL = 1,};
enum MACRO_FMNAMESZ {FMNAMESZ = 8,};
enum MACRO_FSACTIVE {FSACTIVE = 0,FSCLEAN = 1,FSSTABLE = 2,};
enum MACRO_GETFSIND {GETFSIND = 1,GETFSTYP = 2,};
enum MACRO_GET_NEXT {GET_NEXT_LTUPLEF = 0x7,GET_PREV_LTUPLEF = 0x8,};
enum MACRO_GET_PORT {GET_PORT_STATUS = 163,GET_HUB_STATUS = 160,GET_HUB_DESCRIPTOR = 160,};
enum MACRO_HFIXEDSZ {HFIXEDSZ = 12,};
enum MACRO_HOST_LLC {HOST_LLC_IN_USE = 8,};
enum MACRO_HOURMASK {HOURMASK = 0x1F,};
enum MACRO_IANPROCS {IANPROCS = 60,};
enum MACRO_IESCPPAD {IESCPPAD = 5,};
enum MACRO_IFNAMSIZ {IFNAMSIZ = 16,};
enum MACRO_ILL_FRAG {ILL_FRAG_HASH_TBL_COUNT = 64,};
enum MACRO_INET_UDP {INET_UDP = 17,};
enum MACRO_INTLEVEL {INTLEVEL_SOFT = 0x10,INTLEVEL_ONBOARD = 0x20,INTLEVEL_SBUS = 0x30,};
enum MACRO_IPTTLDEC {IPTTLDEC = 1,};
enum MACRO_ISP_MBOX {ISP_MBOX_EVENT_MASK = 0xF000,ISP_MBOX_EVENT_ASYNCH = 0x8000,ISP_MBOX_EVENT_CMD = 0x4000,ISP_MBOX_STATUS_MASK = 0xFF,ISP_MBOX_STATUS_OK = 0x0,ISP_MBOX_STATUS_INVALID_CMD = 0x1,ISP_MBOX_STATUS_INVALID_PARAMS = 0x2,ISP_MBOX_STATUS_BOOT_ERR = 0x3,ISP_MBOX_STATUS_FIRMWARE_ERR = 0x4,ISP_MBOX_ASYNC_RESET = 0x1,ISP_MBOX_ASYNC_ERR = 0x2,ISP_MBOX_ASYNC_REQ_DMA_ERR = 0x3,ISP_MBOX_ASYNC_RESP_DMA_ERR = 0x4,ISP_MBOX_ASYNC_WAKEUP = 0x5,ISP_MBOX_ASYNC_INT_RESET = 0x6,ISP_MBOX_ASYNC_INT_DEV_RESET = 0x9,ISP_MBOX_ASYNC_INT_ABORT = 0x8,ISP_MBOX_ASYNC_OVR_RESET = 0xD,ISP_MBOX_ASYNC_FASTPOST = 0x20,ISP_MBOX_BUSY = 0x4,ISP_AEN_RESET = 0xFFFFFFFF,ISP_AEN_SUCCESS = 0x1,ISP_AEN_FAILURE = 0x0,ISP_MBOX_CMD_NOP = 0x0,ISP_MBOX_CMD_ABOUT_PROM = 0x8,ISP_MBOX_CMD_CHECKSUM_FIRMWARE = 0xE,ISP_MBOX_CMD_STOP_FW = 0x14,ISP_MBOX_CMD_LOAD_RAM = 0x1,ISP_MBOX_CMD_START_FW = 0x2,ISP_MBOX_CMD_DUMP_RAM = 0x3,ISP_MBOX_CMD_LOAD_WORD = 0x4,ISP_MBOX_CMD_DUMP_WORD = 0x5,ISP_MBOX_CMD_WRAP_MAILBOXES = 0x6,ISP_MBOX_CMD_CHECKSUM = 0x7,ISP_MBOX_CMD_INIT_REQUEST_QUEUE = 0x10,ISP_MBOX_CMD_INIT_RESPONSE_QUEUE = 0x11,ISP_MBOX_CMD_SCSI_CMD = 0x12,ISP_MBOX_CMD_WAKE_UP = 0x13,ISP_MBOX_CMD_ABORT_IOCB = 0x15,ISP_MBOX_CMD_ABORT_DEVICE = 0x16,ISP_MBOX_CMD_ABORT_TARGET = 0x17,ISP_MBOX_CMD_BUS_RESET = 0x18,ISP_MBOX_CMD_STOP_QUEUE = 0x19,ISP_MBOX_CMD_START_QUEUE = 0x1A,ISP_MBOX_CMD_STEP_QUEUE = 0x1B,ISP_MBOX_CMD_ABORT_QUEUE = 0x1C,ISP_MBOX_CMD_GET_DEVICE_QUEUE_STATE = 0x1D,ISP_MBOX_CMD_GET_ISP_STAT = 0x1E,ISP_MBOX_CMD_GET_FIRMWARE_STATUS = 0x1F,ISP_MBOX_CMD_GET_SXP_CONFIG = 0x2F,ISP_MBOX_CMD_SET_SXP_CONFIG = 0x3F,ISP_MBOX_CMD_GET_SCSI_ID = 0x20,ISP_MBOX_CMD_SET_SCSI_ID = 0x30,ISP_MBOX_CMD_GET_SEL_TIMEOUT = 0x21,ISP_MBOX_CMD_SET_SEL_TIMEOUT = 0x31,ISP_MBOX_CMD_GET_RETRY_ATTEMPTS = 0x22,ISP_MBOX_CMD_SET_RETRY_ATTEMPTS = 0x32,ISP_MBOX_CMD_GET_AGE_LIMIT = 0x23,ISP_MBOX_CMD_SET_AGE_LIMIT = 0x33,ISP_MBOX_CMD_GET_CLOCK_RATE = 0x24,ISP_MBOX_CMD_SET_CLOCK_RATE = 0x34,ISP_MBOX_CMD_GET_PULL_UPS = 0x25,ISP_MBOX_CMD_SET_PULL_UPS = 0x35,ISP_MBOX_CMD_GET_DATA_TRANS_TIME = 0x26,ISP_MBOX_CMD_SET_DATA_TRANS_TIME = 0x36,ISP_MBOX_CMD_GET_BUS_INTERFACE = 0x27,ISP_MBOX_CMD_SET_BUS_INTERFACE = 0x37,ISP_MBOX_CMD_GET_TARGET_CAP = 0x28,ISP_MBOX_CMD_SET_DELAY_BDR = 0x3B,ISP_MBOX_CMD_SET_TARGET_CAP = 0x38,ISP_MBOX_CMD_GET_DEVICE_QUEUE_PARAMS = 0x29,ISP_MBOX_CMD_SET_DEVICE_QUEUE_PARAMS = 0x39,ISP_MBOX_CMD_GET_QFULL_RETRIES = 0x4E,ISP_MBOX_CMD_SET_QFULL_RETRIES = 0x5E,ISP_MBOX_CMD_GET_QFULL_RETRY_INTERVAL = 0x4F,ISP_MBOX_CMD_SET_QFULL_RETRY_INTERVAL = 0x5F,ISP_MBOX_CMD_SET_FW_FEATURES = 0x4A,ISP_PCI_MBOX_CMD_RET_BIOS_BLK_ADDR = 0x40,ISP_PCI_MBOX_CMD_WRITE_4_RAM_WORDS = 0x41,ISP_PCI_MBOX_CMD_EXEC_BIOS_IOCB = 0x42,ISP_MBOX_CMD_SET_DATA_OVR_RECOV_MODE = 0x5A,ISP_CAP_DISCONNECT = 0x8000,ISP_CAP_PARITY = 0x4000,ISP_CAP_WIDE = 0x2000,ISP_CAP_SYNC = 0x1000,ISP_CAP_TAG = 0x800,ISP_CAP_AUTOSENSE = 0x400,ISP_CAP_ERRSTOP = 0x200,ISP_CAP_ERRSYNC = 0x100,ISP_20M_SYNC_PERIOD = 0xC,ISP_20M_SYNC_OFFSET = 0x8,ISP_20M_SYNC_PARAMS = 0x80C,ISP_10M_SYNC_PERIOD = 0x19,ISP_10M_SYNC_OFFSET = 0xC,ISP_10M_SYNC_PARAMS = 0xC19,ISP_8M_SYNC_PERIOD = 0x25,ISP_8M_SYNC_OFFSET = 0xC,ISP_8M_SYNC_PARAMS = 0xC25,ISP_5M_SYNC_PERIOD = 0x32,ISP_5M_SYNC_OFFSET = 0xC,ISP_5M_SYNC_PARAMS = 0xC32,ISP_4M_SYNC_PERIOD = 0x41,ISP_4M_SYNC_OFFSET = 0xC,ISP_4M_SYNC_PARAMS = 0xC41,ISP_MAX_MBOX_REGS = 0x8,ISP_MBOX_CMD_TIMEOUT = 0xA,ISP_MBOX_CMD_RETRY_CNT = 0x1,ISP_MBOX_CMD_FLAGS_COMPLETE = 0x1,ISP_MBOX_CMD_FLAGS_Q_NOT_INIT = 0x2,ISP_MBOX_CMD_BUSY_WAIT_TIME = 0x1,ISP_MBOX_CMD_BUSY_POLL_DELAY_TIME = 0x64,ISP_BUS_BIU_REGS_OFF = 0x0,ISP_SBUS_MBOX_REGS_OFF = 0x80,ISP_PCI_MBOX_REGS_OFF = 0x70,ISP_SBUS_SXP_REGS_OFF = 0x200,ISP_PCI_SXP_REGS_OFF = 0x80,ISP_SBUS_RISC_REGS_OFF = 0x400,ISP_PCI_RISC_REGS_OFF = 0x80,ISP_SBUS_REG_NUMBER = 0x0,ISP_PCI_REG_NUMBER = 0x2,ISP_BUS_CONF0_HW_MASK = 0xF,ISP_SBUS_CONF1_PARITY = 0x100,ISP_SBUS_CONF1_FCODE_MASK = 0xF0,ISP_PCI_CONF1_FIFO_128 = 0x40,ISP_PCI_CONF1_FIFO_64 = 0x30,ISP_PCI_CONF1_FIFO_32 = 0x20,ISP_PCI_CONF1_FIFO_16 = 0x10,ISP_BUS_CONF1_BURST_ENABLE = 0x4,ISP_SBUS_CONF1_FIFO_64 = 0x3,ISP_SBUS_CONF1_FIFO_32 = 0x2,ISP_SBUS_CONF1_FIFO_16 = 0x1,ISP_SBUS_CONF1_FIFO_8 = 0x0,ISP_SBUS_CONF1_BURST8 = 0x8,ISP_PCI_CONF1_SXP = 0x8,ISP_BUS_ICR_ENABLE_DMA_INT = 0x20,ISP_BUS_ICR_ENABLE_CDMA_INT = 0x10,ISP_BUS_ICR_ENABLE_SXP_INT = 0x8,ISP_BUS_ICR_ENABLE_RISC_INT = 0x4,ISP_BUS_ICR_ENABLE_ALL_INTS = 0x2,ISP_BUS_ICR_DISABLE_ALL_INTS = 0x0,ISP_BUS_ICR_SOFT_RESET = 0x1,ISP_BUS_ISR_DMA_INT = 0x20,ISP_BUS_ISR_CDMA_INT = 0x10,ISP_BUS_ISR_SXP_INT = 0x8,ISP_BUS_ISR_RISC_INT = 0x4,ISP_BUS_ISR_INT_PENDING = 0x2,ISP_BUS_SEMA_STATUS = 0x2,ISP_BUS_SEMA_LOCK = 0x1,ISP_DMA_CONF_ENABLE_SXP_DMA = 0x8,ISP_DMA_CONF_ENABLE_INTS = 0x4,ISP_DMA_CONF_ENABLE_BURST = 0x2,ISP_DMA_CONF_DMA_DIRECTION = 0x1,ISP_DMA_CON_SUSPEND_CHAN = 0x10,ISP_DMA_CON_CLEAR_CHAN = 0x8,ISP_DMA_CON_CLEAR_FIFO = 0x4,ISP_DMA_CON_RESET_INT = 0x2,ISP_DMA_CON_STROBE = 0x1,ISP_SBUS_DMA_STATUS_PIPE_MASK = 0xC0,ISP_SBUS_DMA_STATUS_CHAN_MASK = 0x30,ISP_SBUS_DMA_STATUS_BUS_PARITY = 0x8,ISP_SBUS_DMA_STATUS_BUS_ERR = 0x4,ISP_SBUS_DMA_STATUS_TERM_COUNT = 0x2,ISP_SBUS_DMA_STATUS_INTERRUPT = 0x1,ISP_PCI_DMA_STATUS_INTERRUPT = 0x8000,ISP_PCI_DMA_STATUS_RETRY_STAT = 0x4000,ISP_PCI_DMA_STATUS_CHAN_MASK = 0x3000,ISP_PCI_DMA_STATUS_FIFO_OVR = 0x100,ISP_PCI_DMA_STATUS_FIFO_UDR = 0x80,ISP_PCI_DMA_STATUS_BUS_ERR = 0x40,ISP_PCI_DMA_STATUS_BUS_PARITY = 0x20,ISP_PCI_DMA_STATUS_CLR_PEND = 0x10,ISP_PCI_DMA_STATUS_TERM_COUNT = 0x8,ISP_PCI_DMA_STATUS_DMA_SUSP = 0x4,ISP_PCI_DMA_STATUS_PIPE_MASK = 0x3,ISP_SBUS_DMA_PIPE_FULL = 0xC0,ISP_SBUS_DMA_PIPE_OVERRUN = 0x80,ISP_SBUS_DMA_PIPE_STAGE1 = 0x40,ISP_PCI_DMA_PIPE_FULL = 0x3,ISP_PCI_DMA_PIPE_OVERRUN = 0x2,ISP_PCI_DMA_PIPE_STAGE1 = 0x1,ISP_DMA_PIPE_EMPTY = 0x0,ISP_SBUS_DMA_CHAN_SUSPEND = 0x30,ISP_SBUS_DMA_CHAN_TRANSFER = 0x20,ISP_SBUS_DMA_CHAN_ACTIVE = 0x10,ISP_PCI_DMA_CHAN_TRANSFER = 0x3000,ISP_PCI_DMA_CHAN_SUSPEND = 0x2000,ISP_PCI_DMA_CHAN_ACTIVE = 0x1000,ISP_DMA_CHAN_IDLE = 0x0,ISP_DMA_FIFO_STATUS_OVERRUN = 0x200,ISP_DMA_FIFO_STATUS_UNDERRUN = 0x100,ISP_SBUS_DMA_FIFO_COUNT_MASK = 0x7F,ISP_PCI_DMA_FIFO_COUNT_MASK = 0xFF,ISP_SXP_CONF1_ASYNCH_SETUP = 0xF000,ISP_SXP_CONF1_SELECTION_UNIT = 0x0,ISP_SXP_CONF1_SELECTION_TIMEOUT = 0x600,ISP_SXP_CONF1_CLOCK_FACTOR = 0xE0,ISP_SXP_CONF1_SCSI_ID = 0xF,ISP_SXP_CONF2_DISABLE_FILTER = 0x40,ISP_SXP_CONF2_REQ_ACK_PULLUPS = 0x20,ISP_SXP_CONF2_DATA_PULLUPS = 0x10,ISP_SXP_CONF2_CONFIG_AUTOLOAD = 0x8,ISP_SXP_CONF2_RESELECT = 0x2,ISP_SXP_CONF2_SELECT = 0x1,ISP_SXP_INT_PARITY_ERR = 0x8000,ISP_SXP_INT_GROSS_ERR = 0x4000,ISP_SXP_INT_FUNCTION_ABORT = 0x2000,ISP_SXP_INT_CONDITION_FAILED = 0x1000,ISP_SXP_INT_FIFO_EMPTY = 0x800,ISP_SXP_INT_BUF_COUNTER_ZERO = 0x400,ISP_SXP_INT_XFER_ZERO = 0x200,ISP_SXP_INT_INT_PENDING = 0x80,ISP_SXP_INT_CMD_RUNNING = 0x40,ISP_SXP_INT_INT_RETURN_CODE = 0xF,ISP_SXP_GROSS_OFFSET_RESID = 0x40,ISP_SXP_GROSS_OFFSET_UNDERFLOW = 0x20,ISP_SXP_GROSS_OFFSET_OVERFLOW = 0x10,ISP_SXP_GROSS_FIFO_UNDERFLOW = 0x8,ISP_SXP_GROSS_FIFO_OVERFLOW = 0x4,ISP_SXP_GROSS_WRITE_ERR = 0x2,ISP_SXP_GROSS_ILLEGAL_INST = 0x1,ISP_SXP_EXCEPT_USER_0 = 0x8000,ISP_SXP_EXCEPT_USER_1 = 0x4000,ISP_PCI_SXP_EXCEPT_SCAM = 0x400,ISP_SXP_EXCEPT_BUS_FREE = 0x200,ISP_SXP_EXCEPT_TARGET_ATN = 0x100,ISP_SXP_EXCEPT_RESELECTED = 0x80,ISP_SXP_EXCEPT_SELECTED = 0x40,ISP_SXP_EXCEPT_ARBITRATION = 0x20,ISP_SXP_EXCEPT_GROSS_ERR = 0x10,ISP_SXP_EXCEPT_BUS_RESET = 0x8,ISP_SXP_ORIDE_EXT_TRIGGER = 0x8000,ISP_SXP_ORIDE_STEP = 0x4000,ISP_SXP_ORIDE_BREAKPOINT = 0x2000,ISP_SXP_ORIDE_PIN_WRITE = 0x1000,ISP_SXP_ORIDE_FORCE_OUTPUTS = 0x800,ISP_SXP_ORIDE_LOOPBACK = 0x400,ISP_SXP_ORIDE_PARITY_TEST = 0x200,ISP_SXP_ORIDE_TRISTATE_ENA_PINS = 0x100,ISP_SXP_ORIDE_TRISTATE_PINS = 0x80,ISP_SXP_ORIDE_FIFO_RESET = 0x8,ISP_SXP_ORIDE_CMD_TERMINATE = 0x4,ISP_SXP_ORIDE_RESET_REG = 0x2,ISP_SXP_ORIDE_RESET_MODULE = 0x1,ISP_SXP_RESET_BUS_CMD = 0x300B,ISP_SXP_EXCEPT_1 = 0x2,ISP_SXP_EXCEPT_0 = 0x1,ISP_SXP_SELECTING_ID = 0xF00,ISP_SXP_SELECT_ID = 0xF,ISP_SXP_DCONF1_SYNC_HOLD = 0x7000,ISP_SXP_DCONF1_SYNC_SETUP = 0xF00,ISP_SXP_DCONF1_SYNC_OFFSET = 0xF,ISP_SXP_DCONF2_FLAGS_MASK = 0xF000,ISP_SXP_DCONF2_WIDE = 0x400,ISP_SXP_DCONF2_PARITY = 0x200,ISP_SXP_DCONF2_BLOCK_MODE = 0x100,ISP_SXP_DCONF2_ASSERTION_MASK = 0x7,ISP_SXP_PHASE_STATUS_PTR = 0x1000,ISP_SXP_PHASE_MSG_IN_PTR = 0x700,ISP_SXP_PHASE_COM_PTR = 0xF0,ISP_SXP_PHASE_MSG_OUT_PTR = 0x7,ISP_SXP_FIFO_TOP_RESID = 0x8000,ISP_SXP_FIFO_ACK_RESID = 0x4000,ISP_SXP_FIFO_COUNT_MASK = 0x1C,ISP_SXP_FIFO_BOTTOM_RESID = 0x1,ISP_SXP_PINS_CON_PHASE = 0x8000,ISP_SXP_PINS_CON_PARITY_HI = 0x400,ISP_SXP_PINS_CON_PARITY_LO = 0x200,ISP_SXP_PINS_CON_REQ = 0x100,ISP_SXP_PINS_CON_ACK = 0x80,ISP_SXP_PINS_CON_RST = 0x40,ISP_SXP_PINS_CON_BSY = 0x20,ISP_SXP_PINS_CON_SEL = 0x10,ISP_SXP_PINS_CON_ATN = 0x8,ISP_SXP_PINS_CON_MSG = 0x4,ISP_SXP_PINS_CON_CD = 0x2,ISP_SXP_PINS_CON_IO = 0x1,ISP_SXP_SCSI_BUS_RESET_HOLD_TIME = 0xFA,ISP_SXP_PHASE_MASK = 0x7,ISP_SXP_PHASE_DATA_OUT = 0x0,ISP_SXP_PHASE_DATA_IN = 0x1,ISP_SXP_PHASE_COMMAND = 0x2,ISP_SXP_PHASE_STATUS = 0x3,ISP_SXP_PHASE_MSG_OUT = 0x6,ISP_SXP_PHASE_MSG_IN = 0x7,ISP_SXP_BUS_BUSY = 0x30,ISP_SXP_PINS_DIFF_SENSE = 0x200,ISP_SXP_PINS_DIFF_MODE = 0x100,ISP_SXP_PINS_DIFF_ENABLE_OUTPUT = 0x80,ISP_SXP_PINS_DIFF_PINS_MASK = 0x7C,ISP_SXP_PINS_DIFF_TARGET = 0x2,ISP_SXP_PINS_DIFF_INITIATOR = 0x1,ISP_RISC_PSR_FORCE_TRUE = 0x8000,ISP_RISC_PSR_LOOP_COUNT_DONE = 0x4000,ISP_RISC_PSR_RISC_INT = 0x2000,ISP_RISC_PSR_TIMER_ROLLOVER = 0x1000,ISP_RISC_PSR_ALU_OVERFLOW = 0x800,ISP_RISC_PSR_ALU_MSB = 0x400,ISP_RISC_PSR_ALU_CARRY = 0x200,ISP_RISC_PSR_ALU_ZERO = 0x100,ISP_RISC_PSR_DMA_INT = 0x10,ISP_RISC_PSR_SXP_INT = 0x8,ISP_RISC_PSR_HOST_INT = 0x4,ISP_RISC_PSR_INT_PENDING = 0x2,ISP_RISC_PSR_FORCE_FALSE = 0x1,ISP_RISC_PCR_NOP = 0x0,ISP_RISC_PCR_RESTORE_PCR = 0x1000,ISP_RISC_MTR_PAGE1_DEFAULT = 0x1200,ISP_RISC_MTR_PAGE0_DEFAULT = 0x12,ISP_HCCR_CMD_NOP = 0x0,ISP_HCCR_CMD_RESET = 0x1000,ISP_HCCR_CMD_PAUSE = 0x2000,ISP_HCCR_CMD_RELEASE = 0x3000,ISP_HCCR_CMD_STEP = 0x4000,ISP_HCCR_CMD_SET_HOST_INT = 0x5000,ISP_HCCR_CMD_CLEAR_HOST_INT = 0x6000,ISP_HCCR_CMD_CLEAR_RISC_INT = 0x7000,ISP_HCCR_CMD_BREAKPOINT = 0x8000,ISP_PCI_HCCR_CMD_BIOS = 0x9000,ISP_PCI_HCCR_CMD_PARITY = 0xA000,ISP_PCI_HCCR_CMD_PARITY_ERR = 0xE000,ISP_HCCR_CMD_TEST_MODE = 0xF000,ISP_PCI_HCCR_PARITY = 0x400,ISP_PCI_HCCR_PARITY_ENABLE_1 = 0x200,ISP_PCI_HCCR_PARITY_ENABLE_0 = 0x100,ISP_HCCR_HOST_INT = 0x80,ISP_HCCR_RESET = 0x40,ISP_HCCR_PAUSE = 0x20,ISP_HCCR_BREAKPOINT_EXT = 0x10,ISP_HCCR_BREAKPOINT_1 = 0x8,ISP_HCCR_BREAKPOINT_0 = 0x4,ISP_PCI_HCCR_BREAKPOINT_INT = 0x2,ISP_PCI_HCCR_BIOS = 0x1,};
enum MACRO_I_IFLAGS {I_IFLAGS = 0,I_CFLAGS = 852157,};
enum MACRO_I_TRCLOG {I_TRCLOG = 19457,I_ERRLOG = 19458,I_CONSLOG = 19459,};
enum MACRO_JWINSIZE {JWINSIZE = 27141,};
enum MACRO_JXTPROTO {JXTPROTO = 27147,};
enum MACRO_JZOMBOOT {JZOMBOOT = 27143,};
enum MACRO_KBDLDISC {KBDLDISC = 6,};
enum MACRO_KIOCGKEY {KIOCGKEY = 27405,};
enum MACRO_KIOCGLED {KIOCGLED = 27407,};
enum MACRO_KIOCSKEY {KIOCSKEY = 27404,};
enum MACRO_KIOCSLED {KIOCSLED = 27406,};
enum MACRO_KIOCTYPE {KIOCTYPE = 27401,};
enum MACRO_LA_RJT_0 {LA_RJT = 0x1000000,LA_ACC = 0x2000000,LA_LOGI = 0x3000000,LA_LOGO = 0x4000000,LA_RLS = 0xD000000,LA_IDENT = 0x20000000,};
enum MACRO_LDL_SCAN {LDL_SCAN = 0x1,LDL_ERROR = 0x2,};
enum MACRO_LEFTCTRL {LEFTCTRL = 4,};
enum MACRO_LEFTFUNC {LEFTFUNC = 0x600,};
enum MACRO_LIOCGETP {LIOCGETP = 27649,};
enum MACRO_LIOCGETS {LIOCGETS = 27653,};
enum MACRO_LIOCSETP {LIOCSETP = 27650,};
enum MACRO_LIOCSETS {LIOCSETS = 27654,};
enum MACRO_LLCTRACE {LLCTRACE = 0x1,LLCERRS = 0x2,LLCRECV = 0x4,LLCSEND = 0x8,LLCPROT = 0x10,};
enum MACRO_LM_SYSID {LM_SYSID = 0x1,LM_SYSID_MAX = 0x3FFF,LM_SYSID_CLIENT = 0x4000,LM_STATD_DELAY = 0xA,LM_NO_TIMOUT = 0x0,LM_GR_TIMOUT = 0x14,LM_SM_TIMOUT = 0x5,LM_CR_TIMOUT = 0x14,LM_RLOCK_SLP = 0x14,LM_ERROR_SLP = 0x1E,LM_GRACE_SLP = 0xA,LM_BLOCK_SLP = 0x3C,LM_RETRY = 0x5,LM_RECLAIM_RETRY = 0x64,LM_ASYN_RETRY = 0x3,LM_PMAP_TIMEOUT = 0xF,LM_GR_RETRY = 0x1,};
enum MACRO_LOG_MODE {LOG_MODE = 0x180,};
enum MACRO_LWP_USER {LWP_USER = 0x1,LWP_SYS = 0x2,};
enum MACRO_L_GETPPA {L_GETPPA = 19457,L_SETPPA = 19458,L_GETSTATS = 19461,L_ZEROSTATS = 19462,};
enum MACRO_LctNNone {LctNNone = 1,};
enum MACRO_MAXADDRS {MAXADDRS = 35,};
enum MACRO_MAXBSIZE {MAXBSIZE = 8192,};
enum MACRO_MAXFIDSZ {MAXFIDSZ = 64,};
enum MACRO_MAXMAJ32 {MAXMAJ32 = 0x3FFF,};
enum MACRO_MAXMIN32 {MAXMIN32 = 0x3FFFF,};
enum MACRO_MAXPHASE {MAXPHASE = 512000,MAXFREQ = 33554432,};
enum MACRO_MAX_ATTR {MAX_ATTR_LEN = 128,};
enum MACRO_MAX_AUTH {MAX_AUTH_BYTES = 400,};
enum MACRO_MAX_FIFO {MAX_FIFO_FLAG = 15,};
enum MACRO_MAX_NAME {MAX_NAME_LEN = 64,MAX_GSS_MECH = 128,MAX_GSS_NAME = 128,};
enum MACRO_MAX_PATH {MAX_PATH_LEN = 1024,MAX_FILEID = 32,};
enum MACRO_MAX_RTPR {MAX_RTPR = 255,};
enum MACRO_MAX_SACK {MAX_SACK_BLK = 5,};
enum MACRO_MAX_TREE {MAX_TREE_DEPTH = 64,MAX_PTR_IN_PRV = 5,};
enum MACRO_MD_FIXED {MD_FIXED = 0xF8,};
enum MACRO_MHIOCGRP {MHIOCGRP_INKEYS = 19717,MHIOCGRP_INRESV = 19718,MHIOCGRP_REGISTER = 19719,MHIOCGRP_RESERVE = 19720,MHIOCGRP_PREEMPTANDABORT = 19721,MHIOCGRP_PREEMPT = 19722,MHIOCGRP_CLEAR = 19723,};
enum MACRO_MICROSEC {MICROSEC = 1000000,};
enum MACRO_MINBSIZE {MINBSIZE = 4096,};
enum MACRO_MINFRAME {MINFRAME = 92,};
enum MACRO_MINPSIZE {MINPSIZE = 4,};
enum MACRO_MINSHIFT {MINSHIFT = 5,};
enum MACRO_MODDEBUG {MODDEBUG_LOADMSG = 0x80000000,MODDEBUG_ERRMSG = 0x40000000,MODDEBUG_LOADMSG2 = 0x20000000,MODDEBUG_NOAUL_DACF = 0x8000,MODDEBUG_KEEPTEXT = 0x4000,MODDEBUG_NOPACK = 0x2000,MODDEBUG_NOAUL_DRV = 0x1000,MODDEBUG_NOAUL_EXEC = 0x800,MODDEBUG_NOAUL_FS = 0x400,MODDEBUG_NOAUL_MISC = 0x200,MODDEBUG_NOAUL_SCHED = 0x100,MODDEBUG_NOAUL_STR = 0x80,MODDEBUG_NOAUL_SYS = 0x40,MODDEBUG_NOSYMS = 0x20,MODDEBUG_NOAUTOUNLOAD = 0x10,MODDEBUG_UNLOCKSYMBOLS = 0x8,MODDEBUG_LOCKSYMBOLS = 0x4,MODDEBUG_STUBBPT = 0x2,MODDEBUG_USERDEBUG = 0x1,};
enum MACRO_MODEMASK {MODEMASK = 0xFFF,};
enum MACRO_MODEPAGE {MODEPAGE_DISCO_RECO = 0x2,MODEPAGE_CACHING = 0x8,MODEPAGE_PDEVICE = 0x9,MODEPAGE_CTRL_MODE = 0xA,MODEPAGE_POWER_COND = 0x1A,MODEPAGE_INFO_EXCPT = 0x1C,MODEPAGE_ALLPAGES = 0x3F,};
enum MACRO_MODE_DAD {MODE_DAD_WP = 0x80,MODE_DAD_DPOFUA = 0x10,};
enum MACRO_MONSHIFT {MONSHIFT = 5,};
enum MACRO_MON_TYPE {MON_TYPE_STEREO = 0x8,MON_TYPE_0_OFFSET = 0x4,MON_TYPE_OVERSCAN = 0x2,MON_TYPE_GRAY = 0x1,};
enum MACRO_MTIOCGET {MTIOCGET = 27906,};
enum MACRO_MTIOCTOP {MTIOCTOP = 27905,};
enum MACRO_MULWSIZE {MULWSIZE = 2,};
enum MACRO_NCARGS32 {NCARGS32 = 0x100000,NCARGS64 = 0x200000,};
enum MACRO_NCBCLASS {NCBCLASS = 13,};
enum MACRO_NCR53C90 {NCR53C90 = 0,ESP100A = 1,};
enum MACRO_NFSPROC3 {NFSPROC3_NULL = 0,NFSPROC3_GETATTR = 1,NFSPROC3_SETATTR = 2,NFSPROC3_LOOKUP = 3,NFSPROC3_ACCESS = 4,NFSPROC3_READLINK = 5,NFSPROC3_READ = 6,NFSPROC3_WRITE = 7,NFSPROC3_CREATE = 8,NFSPROC3_MKDIR = 9,NFSPROC3_SYMLINK = 10,NFSPROC3_MKNOD = 11,NFSPROC3_REMOVE = 12,NFSPROC3_RMDIR = 13,NFSPROC3_RENAME = 14,NFSPROC3_LINK = 15,NFSPROC3_READDIR = 16,NFSPROC3_READDIRPLUS = 17,NFSPROC3_FSSTAT = 18,NFSPROC3_FSINFO = 19,NFSPROC3_PATHCONF = 20,NFSPROC3_COMMIT = 21,};
enum MACRO_NFS_ARGS {NFS_ARGS_EXTA = 1,NFS_ARGS_EXTB = 2,};
enum MACRO_NFS_FIFO {NFS_FIFO_MODE = 8192,NFS_FIFO_DEV = 4294967295,NFS_FHSIZE = 32,};
enum MACRO_NIS_READ {NIS_READ_ACC = 1,NIS_MODIFY_ACC = 2,NIS_CREATE_ACC = 4,NIS_DESTROY_ACC = 8,};
enum MACRO_NLMPROC4 {NLMPROC4_NULL = 0,NLMPROC4_TEST = 1,NLMPROC4_LOCK = 2,NLMPROC4_CANCEL = 3,NLMPROC4_UNLOCK = 4,NLMPROC4_GRANTED = 5,NLMPROC4_TEST_MSG = 6,NLMPROC4_LOCK_MSG = 7,NLMPROC4_CANCEL_MSG = 8,NLMPROC4_UNLOCK_MSG = 9,NLMPROC4_GRANTED_MSG = 10,NLMPROC4_TEST_RES = 11,NLMPROC4_LOCK_RES = 12,NLMPROC4_CANCEL_RES = 13,NLMPROC4_UNLOCK_RES = 14,NLMPROC4_GRANTED_RES = 15,NLMPROC4_SHARE = 20,NLMPROC4_UNSHARE = 21,NLMPROC4_NM_LOCK = 22,NLMPROC4_FREE_ALL = 23,};
enum MACRO_NLSSTART {NLSSTART = 0,NLSFORMAT = 2,};
enum MACRO_NMSTATES {NMSTATES = 10,};
enum MACRO_NOASSIGN {NOASSIGN = 0x1,NORUN = 0x2,};
enum MACRO_NOSCROLL {NOSCROLL = 0x303,};
enum MACRO_NO_CACHE {NO_CACHE = 16,};
enum MACRO_NO_COLOR {NO_COLOR = 0,NO_CHECK_CYCLE = 0,};
enum MACRO_NPRXGREG {NPRXGREG = 8,};
enum MACRO_NPRXOREG {NPRXOREG = 8,};
enum MACRO_NQFRETRY {NQFRETRY = 10,};
enum MACRO_NSIGPOLL {NSIGPOLL = 6,};
enum MACRO_NSIGPROF {NSIGPROF = 1,};
enum MACRO_NSIGSEGV {NSIGSEGV = 2,};
enum MACRO_NSIGTRAP {NSIGTRAP = 5,};
enum MACRO_NSYSCALL {NSYSCALL = 256,};
enum MACRO_NTARGETS {NTARGETS = 8,};
enum MACRO_NULLPROC {NULLPROC = 0,};
enum MACRO_NUMERALS {NUMERALS_NOMINAL = 0x100000,NUMERALS_NATIONAL = 0x200000,NUMERALS_CONTEXTUAL = 0x300000,};
enum MACRO_NUM_IMPL {NUM_IMPL_SENSE_KEYS = 7,};
enum MACRO_NUM_INTS {NUM_INTS = 2,NUM_REGS = 1,};
enum MACRO_N_BTMASK {N_BTMASK = 0xF,N_TMASK = 0x30,N_TMASK1 = 0xC0,N_TMASK2 = 0xF0,N_BTSHFT = 0x4,N_TSHIFT = 0x2,};
enum MACRO_OPENFAIL {OPENFAIL = -1,};
enum MACRO_OPROMU2P {OPROMU2P = 20233,};
enum MACRO_ORDINARY {ORDINARY = 0,CONTROL = 1,BACKSPACE = 2,};
enum MACRO_OTTYDISC {OTTYDISC = 0,NETLDISC = 1,NTTYDISC = 2,};
enum MACRO_OUTUARTC {OUTUARTC = 3,OUTUARTD = 4,};
enum MACRO_OVERFLOW {OVERFLOW = 3,UNDERFLOW = 4,};
enum MACRO_O_TANDEM {O_TANDEM = 0x1,O_CBREAK = 0x2,O_LCASE = 0x4,O_ECHO = 0x8,O_CRMOD = 0x10,O_RAW = 0x20,O_ODDP = 0x40,O_EVENP = 0x80,O_ANYP = 0xC0,O_NLDELAY = 0x300,O_NL0 = 0x0,O_NL1 = 0x100,O_NL2 = 0x200,O_NL3 = 0x300,O_TBDELAY = 0xC00,O_TAB0 = 0x0,O_TAB1 = 0x400,O_TAB2 = 0x800,O_XTABS = 0xC00,O_CRDELAY = 0x3000,O_CR0 = 0x0,O_CR1 = 0x1000,O_CR2 = 0x2000,O_CR3 = 0x3000,O_VTDELAY = 0x4000,O_FF0 = 0x0,O_FF1 = 0x4000,O_BSDELAY = 0x8000,O_BS0 = 0x0,O_BS1 = 0x8000,O_ALLDELAY = 0xFF00,O_CRTBS = 0x10000,O_PRTERA = 0x20000,O_CRTERA = 0x40000,O_TILDE = 0x80000,O_MDMBUF = 0x100000,O_LITOUT = 0x200000,O_TOSTOP = 0x400000,O_FLUSHO = 0x800000,O_NOHANG = 0x1000000,O_L001000 = 0x2000000,O_CRTKIL = 0x4000000,O_PASS8 = 0x8000000,O_CTLECH = 0x10000000,O_PENDIN = 0x20000000,O_DECCTQ = 0x40000000,O_NOFLSH = 0x80000000,};
enum MACRO_P1284IOC {P1284IOC_ONE = 536899635,P1284IOC_TWO = 536899636,P1284IOC_FAKE_INTR = 536896054,};
enum MACRO_PACKETSZ {PACKETSZ = 512,MAXDNAME = 1025,};
enum MACRO_PADENTER {PADENTER = 0x711,};
enum MACRO_PADEQUAL {PADEQUAL = 0x700,};
enum MACRO_PADMINUS {PADMINUS = 0x703,};
enum MACRO_PADSLASH {PADSLASH = 0x701,};
enum MACRO_PATHSIZE {PATHSIZE = 1024,};
enum MACRO_PCCFAULT {PCCFAULT = 7,PCSSIG = 8,};
enum MACRO_PCM_NAME {PCM_NAME_1275 = 0x1,PCM_NAME_VERS1 = 0x2,PCM_NAME_GENERIC = 0x4,PCM_NO_CONFIG = 0x8,PCM_OTHER_NOCIS = 0x100,PCM_MULTI_FUNCTION = 0x200,PCM_MAX_R2_MEM = 0x3FFFFFF,PCM_TYPE_MULTI = 0x0,PCM_TYPE_MEMORY = 0x1,PCM_TYPE_SERIAL = 0x2,PCM_TYPE_PARALLEL = 0x3,PCM_TYPE_FIXED = 0x4,PCM_TYPE_VIDEO = 0x5,PCM_TYPE_LAN = 0x6,};
enum MACRO_PCSENTRY {PCSENTRY = 14,};
enum MACRO_PCSFAULT {PCSFAULT = 13,};
enum MACRO_PCSFPREG {PCSFPREG = 19,};
enum MACRO_PCSTRACE {PCSTRACE = 12,};
enum MACRO_PCSVADDR {PCSVADDR = 22,};
enum MACRO_PCUNKILL {PCUNKILL = 10,};
enum MACRO_PERMMASK {PERMMASK = 0x1FF,};
enum MACRO_PF_RCOLL {PF_RCOLL = 0x1,PF_WCOLL = 0x2,PF_ECOLL = 0x4,PF_NBIO = 0x8,PF_ASYNC = 0x10,PF_WOPEN = 0x20,PF_CARR_ON = 0x40,PF_SLAVEGONE = 0x80,PF_PKT = 0x100,PF_STOPPED = 0x200,PF_REMOTE = 0x400,PF_NOSTOP = 0x800,PF_UCNTL = 0x1000,PF_43UCNTL = 0x2000,PF_IOCTL = 0x4000,PF_WAIT = 0x8000,PF_READ = 0x10000,PF_WRITE = 0x20000,PF_WREAD = 0x40000,PF_WWRITE = 0x80000,};
enum MACRO_PLN_CTLR {PLN_CTLR_STATE_ATTACHED = 0,PLN_CTLR_STATE_CLOSED = 1,PLN_CTLR_STATE_OPENING = 2,PLN_CTLR_STATE_OPEN = 3,PLN_CTLR_STATE_SENSING = 4,PLN_CTLR_STATE_RWAIT = 5,PLN_CTLR_STATE_DETACHING = 6,PLN_CTLR_IO_TIME = 35,PLN_CTLR_RETRY_COUNT = 4,};
enum MACRO_PMAPPORT {PMAPPORT = 111,};
enum MACRO_PMAPPROC {PMAPPROC_NULL = 0,PMAPPROC_SET = 1,PMAPPROC_UNSET = 2,PMAPPROC_GETPORT = 3,PMAPPROC_DUMP = 4,PMAPPROC_CALLIT = 5,};
enum MACRO_PMAPPROG {PMAPPROG = 100000,};
enum MACRO_PMAPVERS {PMAPVERS_PROTO = 2,PMAPVERS_ORIG = 1,};
enum MACRO_POLLNORM {POLLNORM = 64,};
enum MACRO_PROFATTR {PROFATTR_DB_NCOL = 5,PROFATTR_DB_NKEYCOL = 1,PROFATTR_KEYCOL0 = 0,};
enum MACRO_PROTOCOL {BOOT_PROTOCOL = 0x0,REPORT_PROTOCOL = 0x1,};
enum MACRO_QFIXEDSZ {QFIXEDSZ = 4,RRFIXEDSZ = 10,};
enum MACRO_QUE_LAST {QUE_LAST_COMMAND = 8,};
enum MACRO_REM_OPTS {REM_OPTS = 0xFFFF,REM_DISALLOW = 0x2,REM_OPTIONAL = 0x4,REM_MAND = 0x8,};
enum MACRO_REQ_LEFT {REQ_LEFT_ITEM = 512,REQ_RIGHT_ITEM = 513,REQ_UP_ITEM = 514,REQ_DOWN_ITEM = 515,REQ_SCR_ULINE = 516,REQ_SCR_DLINE = 517,REQ_SCR_DPAGE = 518,REQ_SCR_UPAGE = 519,REQ_FIRST_ITEM = 520,REQ_LAST_ITEM = 521,REQ_NEXT_ITEM = 522,REQ_PREV_ITEM = 523,REQ_TOGGLE_ITEM = 524,REQ_CLEAR_PATTERN = 525,REQ_BACK_PATTERN = 526,REQ_NEXT_MATCH = 527,REQ_PREV_MATCH = 528,};
enum MACRO_RERRMASK {RERRMASK = 3,WERRNORM = 4,WERRNONPERSIST = 8,};
enum MACRO_RERRNORM {RERRNORM = 0x1,RERRNONPERSIST = 0x2,};
enum MACRO_RESERVED {ADD_RESERVED = 2048,REM_RESERVED = 4096,};
enum MACRO_RESETKEY {RESETKEY = 0xFF,};
enum MACRO_RESIDENT {LLC_RESIDENT = 1,ADAPTER_RESIDENT = 1,};
enum MACRO_RETURN_0 {RETURN = 6,};
enum MACRO_RIGHTALT {RIGHTALT = 12,UPMASK = 128,};
enum MACRO_RPCBPROC {RPCBPROC_SET = 1,RPCBPROC_UNSET = 2,RPCBPROC_GETADDR = 3,RPCBPROC_DUMP = 4,RPCBPROC_CALLIT = 5,RPCBPROC_GETTIME = 6,RPCBPROC_UADDR2TADDR = 7,RPCBPROC_TADDR2UADDR = 8,};
enum MACRO_RPCBPROG {RPCBPROG = 100000,};
enum MACRO_RPCBSTAT {RPCBSTAT_HIGHPROC = 13,};
enum MACRO_RPCBVERS {RPCBVERS_STAT = 3,RPCBVERS_4_STAT = 2,RPCBVERS_3_STAT = 1,RPCBVERS_2_STAT = 0,};
enum MACRO_RSETCOFF {RSETCOFF = 0x0,RSETCRBRG = 0x200,RSETCTBRG = 0x400,};
enum MACRO_SCSI_RSM {SCSI_RSM_ES_OUT_PAGE_LEN = 0x12,SCSI_RSM_ENCL_GD_LEN = 0x4,SCSI_RSM_NUM_UNIT_TYPES = 0x1,SCSI_RSM_DEV_DSCP_LEN = 0x1,SCSI_RSM_ES_IN_PAGE_LEN = 0x1C,SCSI_RSM_ES_IN_PAGE_SIZE = 0x20,SCSI_RSM_ES_OUT_PAGE_SIZE = 0x16,};
enum MACRO_SCTRSHFT {SCTRSHFT = 9,};
enum MACRO_SDLCFLAG {SDLCFLAG = 0x7E,};
enum MACRO_SECSHIFT {SECSHIFT = 0,SECMASK = 31,};
enum MACRO_SECS_PER {SECS_PER_HOUR = 3600,SECS_PER_DAY = 86400,};
enum MACRO_SECURITY {SECURITY_NOT_SUPPORTED = 0x19,};
enum MACRO_SENDZERO {SENDZERO = 0x1000,};
enum MACRO_SET_BOOT {SET_BOOT_PROTOCOL = 0x0,SET_REPORT_PROTOCOL = 0x100,};
enum MACRO_SHM_LOCK {SHM_LOCK = 3,SHM_UNLOCK = 4,};
enum MACRO_SIGDEFER {SIGDEFER = 0x100,SIGHOLD = 0x200,SIGRELSE = 0x400,SIGIGNORE = 0x800,SIGPAUSE = 0x1000,};
enum MACRO_SI_MAXSZ {SI_MAXSZ = 128,};
enum MACRO_SMDEVICE {SMDEVICE_INFO_V_0 = 0,};
enum MACRO_SM_WRITE {SM_WRITE_PROTECT_DISABLE = 0x1000,SM_WRITE_PROTECT_NOPASSWD = 0x1002,SM_WRITE_PROTECT_PASSWD = 0x1004,SM_READ_WRITE_PROTECT = 0x1008,SM_TEMP_UNLOCK_MODE = 0x1010,SM_STATUS_UNKNOWN = 0x10FF,SM_UNPROTECTED = 0x1000,SM_WRITE_PROTECTED = 0x1002,SM_WRITE_PROTECTED_WP = 0x1004,SM_READ_WRITE_PROTECTED = 0x1008,};
enum MACRO_SO_DEBUG {SO_DEBUG = 0x1,SO_ACCEPTCONN = 0x2,SO_REUSEADDR = 0x4,SO_KEEPALIVE = 0x8,SO_DONTROUTE = 0x10,SO_BROADCAST = 0x20,SO_USELOOPBACK = 0x40,SO_LINGER = 0x80,SO_OOBINLINE = 0x100,SO_DGRAM_ERRIND = 0x200,SO_DONTLINGER = 0xFFFFFF7F,SO_SNDBUF = 0x1001,SO_RCVBUF = 0x1002,SO_SNDLOWAT = 0x1003,SO_RCVLOWAT = 0x1004,SO_SNDTIMEO = 0x1005,SO_RCVTIMEO = 0x1006,SO_ERROR = 0x1007,SO_TYPE = 0x1008,SO_PROTOTYPE = 0x1009,};
enum MACRO_SO_STATE {SO_STATE = 0x2000,};
enum MACRO_SPECIALS {SPECIALS_MASK = 15,};
enum MACRO_SPRAYMAX {SPRAYMAX = 8845,};
enum MACRO_SP_MBMEM {SP_MBMEM = 0x1000,SP_MBIO = 0x1100,SP_ATMEM = 0x2000,SP_ATIO = 0x2100,SP_FBMEM = 0x3000,SP_FBIO = 0x3100,SP_UBMEM = 0x4000,SP_UBIO = 0x4100,SP_INVALID = 0xFFFFFFFF,};
enum MACRO_SSD_CONF {SSD_CONF_VERSION = 1,SSD_CONF_SET_THROTTLE = 0,SSD_CONF_BSET_THROTTLE = 1,SSD_CONF_SET_NOTREADY_RETRIES = 1,SSD_CONF_BSET_NRR_COUNT = 2,SSD_CONF_SET_BUSY_RETRIES = 2,SSD_CONF_BSET_BSY_RETRY_COUNT = 4,SSD_SPINDLE_OFF = 0,SSD_SPINDLE_ON = 1,SSD_BECOMING_ACTIVE = 1,};
enum MACRO_STANDOUT {A_STANDOUT = 0x200000,_STANDOUT = 0x200000,};
enum MACRO_STAT_BUS {STAT_BUS_RESET = 0x8,STAT_DEV_RESET = 0x10,STAT_ABORTED = 0x20,STAT_TERMINATED = 0x80,STAT_TIMEOUT = 0x40,STAT_DISCON = 0x1,STAT_SYNC = 0x2,STAT_PERR = 0x4,};
enum MACRO_STBWIDTH {MIN_STBWIDTH = 1,MAX_STBWIDTH = 30,};
enum MACRO_STC_FCS2 {STC_FCS2_REV = 5,};
enum MACRO_STRCANON {STRCANON = 0x1,RECOPY = 0x2,};
enum MACRO_ST_INDEL {ST_INDEL = 0x1,ST_DOINGDEL = 0x2,};
enum MACRO_ST_STATE {ST_STATE_CLOSED = 0,ST_STATE_OFFLINE = 1,ST_STATE_INITIALIZING = 2,ST_STATE_OPENING = 3,ST_STATE_OPEN_PENDING_IO = 4,ST_STATE_APPEND_TESTING = 5,ST_STATE_OPEN = 6,ST_STATE_RESOURCE_WAIT = 7,ST_STATE_CLOSING = 8,ST_STATE_SENSING = 9,ST_PWR_NORMAL = 0,ST_PWR_SUSPENDED = 1,ST_PWR_PM_SUSPENDED = 2,ST_OP_NIL = 0,ST_OP_CTL = 1,ST_OP_READ = 2,ST_OP_WRITE = 3,ST_OP_WEOF = 4,ST_NO_EOF = 0,ST_EOF_PENDING = 1,ST_EOF = 2,ST_EOT_PENDING = 3,ST_EOT = 4,ST_EOM = 5,ST_WRITE_AFTER_EOM = 6,ST_RQS_OVR = 1,ST_RQS_VALID = 2,ST_RQS_READ = 4,ST_RQS_ERROR = 8,};
enum MACRO_SWAPPING {SWAPPING_NO = 0x10000,SWAPPING_YES = 0x20000,};
enum MACRO_SXTSWTCH {SXTSWTCH = 90,};
enum MACRO_SYMNMLEN {SYMNMLEN = 8,};
enum MACRO_TABLDISC {TABLDISC = 3,NTABLDISC = 4,};
enum MACRO_TBADADDR {TBADADDR = 1,TBADOPT = 2,};
enum MACRO_TBADDATA {TBADDATA = 10,};
enum MACRO_TBADNAME {TBADNAME = 21,};
enum MACRO_TBADQLEN {TBADQLEN = 22,};
enum MACRO_TCIFLUSH {TCIFLUSH = 0,TCOFLUSH = 1,TCIOFLUSH = 2,};
enum MACRO_TCPS_SYN {TCPS_SYN_RECEIVED = 3,};
enum MACRO_TCP_PUSH {TCP_PUSH_BIT = 0x10,};
enum MACRO_TERM_BAD {TERM_BAD_MALLOC = 6,};
enum MACRO_TINVALID {TINVALID = 4095,};
enum MACRO_TIOCCBRK {TIOCCBRK = 29818,};
enum MACRO_TIOCCDTR {TIOCCDTR = 29816,};
enum MACRO_TIOCEXCL {TIOCEXCL = 29709,};
enum MACRO_TIOCGETC {TIOCGETC = 29714,};
enum MACRO_TIOCGETD {TIOCGETD = 29696,};
enum MACRO_TIOCGETP {TIOCGETP = 29704,};
enum MACRO_TIOCGLTC {TIOCGLTC = 29812,};
enum MACRO_TIOCGPPS {TIOCGPPS = 21629,};
enum MACRO_TIOCGSID {TIOCGSID = 29718,};
enum MACRO_TIOCHPCL {TIOCHPCL = 29698,};
enum MACRO_TIOCKBOF {TIOCKBOF = 21513,};
enum MACRO_TIOCKBON {TIOCKBON = 21512,};
enum MACRO_TIOCLBIC {TIOCLBIC = 29822,};
enum MACRO_TIOCLBIS {TIOCLBIS = 29823,};
enum MACRO_TIOCLGET {TIOCLGET = 29820,};
enum MACRO_TIOCLSET {TIOCLSET = 29821,};
enum MACRO_TIOCMBIC {TIOCMBIC = 29724,};
enum MACRO_TIOCMBIS {TIOCMBIS = 29723,};
enum MACRO_TIOCMGET {TIOCMGET = 29725,};
enum MACRO_TIOCMSET {TIOCMSET = 29722,};
enum MACRO_TIOCNXCL {TIOCNXCL = 29710,};
enum MACRO_TIOCOUTQ {TIOCOUTQ = 29811,};
enum MACRO_TIOCSBRK {TIOCSBRK = 29819,};
enum MACRO_TIOCSDTR {TIOCSDTR = 29817,};
enum MACRO_TIOCSETC {TIOCSETC = 29713,};
enum MACRO_TIOCSETD {TIOCSETD = 29697,};
enum MACRO_TIOCSETN {TIOCSETN = 29706,};
enum MACRO_TIOCSETP {TIOCSETP = 29705,};
enum MACRO_TIOCSLTC {TIOCSLTC = 29813,};
enum MACRO_TIOCSPPS {TIOCSPPS = 21630,};
enum MACRO_TIOCSSID {TIOCSSID = 29720,};
enum MACRO_TIOCSTOP {TIOCSTOP = 29807,};
enum MACRO_TNOUDERR {TNOUDERR = 15,TBADFLAG = 16,};
enum MACRO_TOO_LONG {ENTRY_TOO_LONG = 4,TERMINFO_TOO_LONG = 5,};
enum MACRO_TP_BSIZE {TP_BSIZE = 1024,};
enum MACRO_TRANSFER {TRANSFER_TIMEOUT = 0x1,FAKEOUT_TIMEOUT = 0x10,TEST1_TIMEOUT = 0x20,TEST2_TIMEOUT = 0x40,};
enum MACRO_TRAP_ENT {TRAP_ENT_TBR = 0x0,TRAP_ENT_PSR = 0x4,TRAP_ENT_PC = 0x8,TRAP_ENT_SP = 0xC,TRAP_ENT_G7 = 0x10,TRAP_ENT_TR = 0x14,TRAP_ENT_F1 = 0x18,TRAP_ENT_F2 = 0x1C,TRAP_ENT_SIZE = 0x20,TRAP_TSIZE = 0x2000,};
enum MACRO_TRESADDR {TRESADDR = 27,};
enum MACRO_TRESQLEN {TRESQLEN = 26,};
enum MACRO_TSETCOFF {TSETCOFF = 0x0,TSETCRBRG = 0x40,TSETCTBRG = 0x80,};
enum MACRO_TS_INUSE {TS_INUSE = 0x1,TS_W_IN = 0x2,TS_W_OUT = 0x4,TS_WRITER_Q = 0x0,TS_READER_Q = 0x1,TS_NUM_Q = 0x2,};
enum MACRO_TS_UNBND {TS_UNBND = 0,TS_WACK_BREQ = 1,TS_WACK_UREQ = 2,TS_IDLE = 3,TS_WACK_OPTREQ = 4,TS_WACK_CREQ = 5,TS_WCON_CREQ = 6,TS_WRES_CIND = 7,TS_WACK_CRES = 8,TS_DATA_XFER = 9,TS_WIND_ORDREL = 10,TS_WREQ_ORDREL = 11,TS_WACK_DREQ6 = 12,TS_WACK_DREQ7 = 13,TS_WACK_DREQ9 = 14,TS_WACK_DREQ10 = 15,TS_WACK_DREQ11 = 16,TS_NOSTATES = 17,};
enum MACRO_TVERSLEN {TVERSLEN = 2,REGTYPE = 48,};
enum MACRO_TX_FLOFF {TX_FLOFF = 0x4,TX_FLON = 0x2,};
enum MACRO_TYPE_NOT {TYPE_NOT_SUPPORTED = 0x7,};
enum MACRO_T_CLASS0 {T_CLASS0 = 0,T_CLASS1 = 1,T_CLASS2 = 2,T_CLASS3 = 3,T_CLASS4 = 4,T_PRITOP = 0,T_PRIHIGH = 1,T_PRIMID = 2,T_PRILOW = 3,T_PRIDFLT = 4,T_NOPROTECT = 1,T_PASSIVEPROTECT = 2,T_ACTIVEPROTECT = 4,T_LTPDUDFLT = 128,};
enum MACRO_T_OUTPUT {T_OUTPUT = 0,T_TIME = 1,T_SUSPEND = 2,T_RESUME = 3,T_BLOCK = 4,T_UNBLOCK = 5,T_RFLUSH = 6,T_WFLUSH = 7,T_BREAK = 8,T_INPUT = 9,T_PARM = 11,T_SWTCH = 12,};
enum MACRO_UID_LONG {UID_LONG = 65535,GID_LONG = 65535,};
enum MACRO_UPIMUTEX {UPIMUTEX_TABSIZE = 512,UPIMUTEX_TRY = 1,UPIMUTEX_BLOCK = 0,};
enum MACRO_USCSICMD {USCSICMD = 1225,};
enum MACRO_USCSIIOC {USCSIIOC = 0x400,};
enum MACRO_USERATTR {USERATTR_DB_NCOL = 5,USERATTR_DB_NKEYCOL = 2,USERATTR_KEYCOL0 = 0,USERATTR_KEYCOL1 = 1,};
enum MACRO_VDISCARD {VDISCARD = 13,};
enum MACRO_VFS_LINE {VFS_LINE_MAX = 1024,VFS_TOOLONG = 1,VFS_TOOMANY = 2,VFS_TOOFEW = 3,};
enum MACRO_VREPRINT {VREPRINT = 12,};
enum MACRO_WALLPROC {WALLPROC_WALL = 2,};
enum MACRO_WALLPROG {WALLPROG = 100008,};
enum MACRO_WALLVERS {WALLVERS = 1,};
enum MACRO_WCONTFLG {WCONTFLG = 0xFFFF,};
enum MACRO_WCOREFLG {WCOREFLG = 0x80,};
enum MACRO_WERRMASK {WERRMASK = 12,};
enum MACRO_WOPTMASK {WOPTMASK = 463,};
enum MACRO_WSIGMASK {WSIGMASK = 0x7F,};
enum MACRO_WSTOPFLG {WSTOPFLG = 0x7F,};
enum MACRO_YEARMASK {YEARMASK = 0x7F,};
enum MACRO__DEXPLEN {_DEXPLEN = 11,};
enum MACRO__FIOGDIO {_FIOGDIO = 536897094,};
enum MACRO__FIOLFSS {_FIOLFSS = 536897089,};
enum MACRO__FIOSDIO {_FIOSDIO = 536897093,};
enum MACRO__FIOTUNE {_FIOTUNE = 536897101,};
enum MACRO__FSTYPSZ {_FSTYPSZ = 16,};
enum MACRO__IOMYBUF {_IOMYBUF = 0x8,};
enum MACRO__ISALNUM {_ISALNUM = 16388,};
enum MACRO__ISUPPER {_ISUPPER = 1,_ISLOWER = 2,_ISDIGIT = 4,_ISSPACE = 8,_ISPUNCT = 16,_ISCNTRL = 32,_ISBLANK = 64,_ISXDIGIT = 128,_ISGRAPH = 8192,_ISALPHA = 16384,_ISPRINT = 32768,};
enum MACRO__LENBASE {_LENBASE = 1,_EXPBASE = 2,_FEXPLEN = 8,DMAXEXP = 1024,};
enum MACRO__PBLKSIZ {_PBLKSIZ = 1024,_DBLKSIZ = 4096,};
enum MACRO__POINTER {_POINTER_ALIGNMENT = 4,_MAX_ALIGNMENT = 8,};
enum MACRO__XFTWVER {_XFTWVER = 2,};
typedef struct nis_hash_table NIS_HASH_TABLE;
struct _FN_bindingset;
struct _FN_namelist_t;
typedef struct _8716BC3DCA46F0A7F3673119A555C1D4 _LC_euc_info_t;
enum __lc_type_id_t {_LC_CAR = 0x1,_LC_LOCALE = 0x2,_LC_CHARMAP = 0x3,_LC_CTYPE = 0x4,_LC_COLLATE = 0x5,_LC_NUMERIC = 0x6,_LC_MONETARY = 0x7,_LC_TIME = 0x8,_LC_MESSAGES = 0x9,};
struct _obscured_list {struct PANEL *panel_p;int start;int end;struct _obscured_list *next;};
typedef struct __private_execattr _priv_execattr;
typedef struct FC2_FRAME_HDR aFC2_FRAME_HDR;
typedef struct FC2_RJT_PARAM aFC2_RJT_PARAM;
typedef struct au_arg32_tok au_arg32_tok_t;
typedef struct au_arg64_tok au_arg64_tok_t;
typedef struct au_class_ent au_class_ent_t;
typedef struct au_event_ent au_event_ent_t;
typedef struct au_iport_tok au_iport_tok_t;
typedef struct au_ret32_tok au_ret32_tok_t;
typedef struct au_ret64_tok au_ret64_tok_t;
typedef struct audio_device audio_device_t;
typedef struct audio_prinfo audio_prinfo_t;
typedef struct audtrace_hdr audtrace_hdr_t;
struct cachefs_boinfo {int boi_which;int boi_device;int boi_len;char *boi_value;};
typedef struct cachefscache cachefscache_t;
struct cachefsio_pack {char p_name[256];int p_status;};
typedef char cfga_log_ext_t[30];
typedef struct _D2112DACD5F28F06A12FA1BD43CEEAAF compat_state_t;
typedef struct _condvar_impl condvar_impl_t;
typedef struct cyc_coverage cyc_coverage_t;
typedef struct cyc_pcbuffer cyc_pcbuffer_t;
typedef struct cyc_tracebuf cyc_tracebuf_t;
typedef struct cyc_tracerec cyc_tracerec_t;
typedef struct cyc_xcallarg cyc_xcallarg_t;
typedef void *dacf_infohdl_t;
struct dbri_code_chil {unsigned int : 12;unsigned int : 16;unsigned int overflow : 1;unsigned int nofs : 1;unsigned int xact : 1;unsigned int ract : 1;};
struct dbri_code_sbri {unsigned int : 12;unsigned int : 9;unsigned int vta : 1;unsigned int berr : 1;unsigned int ferr : 1;unsigned int mfm : 1;unsigned int fsc : 1;unsigned int rif4 : 1;unsigned int rif0 : 1;unsigned int act : 1;unsigned int tss : 3;};
typedef struct dbri_dts_cmd dbri_dts_cmd_t;
typedef union _DBB18890394B8029ED37E44DCE2D8EED ddi_dma_aobj_t;
typedef struct ddi_dma_attr ddi_dma_attr_t;
enum ddi_dma_ctlops {DDI_DMA_FREE = 0x0,DDI_DMA_SYNC = 0x1,DDI_DMA_HTOC = 0x2,DDI_DMA_KVADDR = 0x3,DDI_DMA_MOVWIN = 0x4,DDI_DMA_REPWIN = 0x5,DDI_DMA_GETERR = 0x6,DDI_DMA_COFF = 0x7,DDI_DMA_NEXTWIN = 0x8,DDI_DMA_NEXTSEG = 0x9,DDI_DMA_SEGTOC = 0xA,DDI_DMA_RESERVE = 0xB,DDI_DMA_RELEASE = 0xC,DDI_DMA_RESETH = 0xD,DDI_DMA_CKSYNC = 0xE,DDI_DMA_IOPB_ALLOC = 0xF,DDI_DMA_IOPB_FREE = 0x10,DDI_DMA_SMEM_ALLOC = 0x11,DDI_DMA_SMEM_FREE = 0x12,DDI_DMA_SET_SBUS64 = 0x13,DDI_DMA_E_ACQUIRE = 0x14,DDI_DMA_E_FREE = 0x15,DDI_DMA_E_1STPTY = 0x16,DDI_DMA_E_GETCB = 0x17,DDI_DMA_E_FREECB = 0x18,DDI_DMA_E_PROG = 0x19,DDI_DMA_E_SWSETUP = 0x1A,DDI_DMA_E_SWSTART = 0x1B,DDI_DMA_E_ENABLE = 0x1C,DDI_DMA_E_STOP = 0x1D,DDI_DMA_E_DISABLE = 0x1E,DDI_DMA_E_GETCNT = 0x1F,DDI_DMA_E_GETLIM = 0x20,DDI_DMA_E_GETATTR = 0x21,};
typedef struct ddi_dma_impl ddi_dma_impl_t;
typedef void *ddi_intrspec_t;
typedef void *ddi_softintr_t;
typedef struct _13471B52BA0ED10EDFBC0B01A6831312 decimal_record;
typedef char decimal_string[512];
typedef struct devid_nmlist devid_nmlist_t;
typedef struct di_prom_prop *di_prom_prop_t;
typedef struct _D4691ED55A662893A224D2D25A30EEEC dl_error_ack_t;
typedef struct _151922ADF64B06A7DAF3138A8711D7E7 dl_reply_ind_t;
typedef struct _7B9922258B8A0A4B0B5326F3B4359CE8 dl_reply_req_t;
typedef struct _54EC9098503BC20AC050B3CB62F30CBC dl_reset_con_t;
typedef struct _5A986AD36714D9EA4A4C301E327B6C4C dl_reset_ind_t;
typedef struct _54EC9098503BC20AC050B3CB62F30CBC dl_reset_req_t;
typedef struct _54EC9098503BC20AC050B3CB62F30CBC dl_reset_res_t;
typedef struct _2051B98100A0C61393C608F0D7B8F621 dl_token_ack_t;
typedef struct _54EC9098503BC20AC050B3CB62F30CBC dl_token_req_t;
typedef struct _52996A3AC8C68F1BEA5587A21EB91746 dl_udqos_req_t;
typedef struct em_event_ind em_event_ind_t;
typedef entry_obj *entry_object_p;
typedef struct _26B314697E7266AC176F51890C474785 ether_uninit_t;
typedef struct ext_attr_hdr ext_attr_hdr_t;
typedef struct extent_block extent_block_t;
typedef struct f_audit_data f_audit_data_t;
typedef struct fc_transport fc_transport_t;
typedef void *fc_uc_cookie_t;
typedef struct fcp_ent_addr fcp_ent_addr_t;
typedef struct fcp_xfer_rdy fcp_xfer_rdy_t;
typedef struct _9CAE931C1CBD273987054BC4D502AAC2 flk_callback_t;
typedef struct gss_clnt_data gss_clntdata_t;
typedef struct icmp6_filter icmp6_filter_t;
struct ifnet__ifqueue {struct mbuf *ifq_head;struct mbuf *ifq_tail;int ifq_len;int ifq_maxlen;int ifq_drops;};
typedef struct _19E1246DE095363392431173B011D54A ipd_get_info_t;
typedef struct _45D578D1CAA1736E8819435F592D8C84 ipd_register_t;
typedef struct isdn_message isdn_message_t;
typedef struct itimerspec32 itimerspec32_t;
typedef struct krb4_svc_data krb4_svcdata_t;
typedef struct la_els_adisc la_els_adisc_t;
typedef struct la_rls_reply la_rls_reply_t;
typedef struct _501B9B174B09982FAB310FE6A591F791 llc2ConParms_t;
typedef struct llc_mac_info llc_mac_info_t;
typedef struct lm_blockinfo lm_blockinfo_t;
typedef struct log_vol_desc log_vol_desc_t;
typedef struct mhioc_inkeys mhioc_inkeys_t;
typedef union _9A6DBE2689E4D78A6CC46A56A422909E mmcodec_ctrl_t;
typedef union _722BC7DC76932F8652A49C80584F2606 mmcodec_data_t;
enum nispasswd_code {NPD_NOTMASTER = 0x0,NPD_NOSUCHENTRY = 0x1,NPD_IDENTINVALID = 0x2,NPD_NOPASSWD = 0x3,NPD_NOSHDWINFO = 0x4,NPD_SHDWCORRUPT = 0x5,NPD_NOTAGED = 0x6,NPD_CKGENFAILED = 0x7,NPD_VERFINVALID = 0x8,NPD_PASSINVALID = 0x9,NPD_ENCRYPTFAIL = 0xA,NPD_DECRYPTFAIL = 0xB,NPD_KEYSUPDATED = 0xC,NPD_KEYNOTREENC = 0xD,NPD_PERMDENIED = 0xE,NPD_SRVNOTRESP = 0xF,NPD_NISERROR = 0x10,NPD_SYSTEMERR = 0x11,NPD_BUFTOOSMALL = 0x12,NPD_INVALIDARGS = 0x13,};
typedef struct _3CF515CC911B8F03DF4F355C5ACD22AD nss_XbyY_buf_t;
enum nss_netgr_argn {NSS_NETGR_MACHINE = 0x0,NSS_NETGR_USER = 0x1,NSS_NETGR_DOMAIN = 0x2,NSS_NETGR_N = 0x3,};
struct openprom_opr64 {int return_code;int nodeid;char message[1];};
struct p1284_ioctl_st {int array[10];char *cptr;char *name;};
typedef struct p_audit_data p_audit_data_t;
typedef struct pcm_device_node pcm_dev_node_t;
enum pppLinkCRCSize {pppCRC16 = 0x10,pppCRC32 = 0x20,};
enum pppLinkQuality {pppGood = 0x1,pppBad = 0x2,};
typedef struct _807D4AC2255C0A3001450ADEC11FD819 pppProtoDown_t;
typedef struct prpageheader prpageheader_t;
typedef struct _pthread_attr pthread_attr_t;
typedef struct _pthread_cond pthread_cond_t;
typedef struct _once pthread_once_t;
typedef struct rd_event_msg rd_event_msg_t;
typedef struct _E66DCE15917F5E19886463E233EC4453 rpc_gss_lock_t;
typedef struct sadb_address sadb_address_t;
typedef struct sect_trailer sect_trailer_t;
typedef struct segvn_crargs segvn_crargs_t;
typedef struct signotify_id signotify_id_t;
typedef struct t_audit_data t_audit_data_t;
typedef struct td_event_msg td_event_msg_t;
enum td_sync_type_e {TD_SYNC_UNKNOWN = 0x0,TD_SYNC_COND = 0x1,TD_SYNC_MUTEX = 0x2,TD_SYNC_SEMA = 0x3,TD_SYNC_RWLOCK = 0x4,};
typedef struct td_thrhandle td_thrhandle_t;
typedef struct _D27487023F7BC296C96A54641356F89B tifiocgblock_t;
typedef struct _tnf_tag_data tnf_tag_data_t;
typedef struct tnfctl_probe_handle tnfctl_probe_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef struct usb_bulk_cbw usb_bulk_cbw_t;
typedef struct usb_bulk_csw usb_bulk_csw_t;
struct vis_cursorcmap {int version;int reserved;unsigned char *red;unsigned char *green;unsigned char *blue;};
struct vis_identifier {char name[128];};
typedef struct vol_desc_ptr vol_desc_ptr_t;
struct ypall_callback {int (*foreach)();char *data;};
typedef struct _FE43560485AD2DF497423A9D2646B91A Elf32_Syminfo;
typedef struct _12883A0710B467FBB4742064A9BE69DF Elf32_Verdaux;
typedef struct _E714B4690DCD4CE2097239CD07373860 Elf32_Vernaux;
typedef struct _DDB9E5FBB16C40A976BC405025678C57 Elf32_Verneed;
typedef struct _2FC37C12F50461D7B99376C23209E757 Elf64_Syminfo;
typedef struct _D758E79311354DDC9AF0CC7E7C22CD10 Elf64_Verdaux;
typedef struct _A46BFD4B6B8C284ED478D587B5722CAB Elf64_Vernaux;
typedef struct _DBDB4AF8E469679C3A4CD785AB502395 Elf64_Verneed;
typedef struct _FN_namelist_t FN_namelist_t;
typedef struct _FN_ref_addr FN_ref_addr_t;
enum MACRO_ACCESS2 {ACCESS2_READ = 0x1,ACCESS2_LOOKUP = 0x2,ACCESS2_MODIFY = 0x4,ACCESS2_EXTEND = 0x8,ACCESS2_DELETE = 0x10,ACCESS2_EXECUTE = 0x20,};
enum MACRO_ACCESS3 {ACCESS3_READ = 0x1,ACCESS3_LOOKUP = 0x2,ACCESS3_MODIFY = 0x4,ACCESS3_EXTEND = 0x8,ACCESS3_DELETE = 0x10,ACCESS3_EXECUTE = 0x20,};
enum MACRO_AIOINIT {AIOINIT = 5,};
enum MACRO_AIOREAD {AIOREAD = 0,AIOWRITE = 1,AIOWAIT = 2,};
enum MACRO_ANYADDR {ANYADDR = 0,};
enum MACRO_ANYCRED {ANYCRED = -1,};
enum MACRO_ANYMARK {ANYMARK = 0x1,LASTMARK = 0x2,STR = 0x5300,};
enum MACRO_AT_NULL {AT_NULL = 0,AT_IGNORE = 1,AT_EXECFD = 2,AT_PHDR = 3,AT_PHENT = 4,AT_PHNUM = 5,AT_PAGESZ = 6,AT_BASE = 7,AT_FLAGS = 8,AT_ENTRY = 9,AT_DCACHEBSIZE = 10,AT_ICACHEBSIZE = 11,AT_UCACHEBSIZE = 12,AT_SUN_UID = 2000,AT_SUN_RUID = 2001,AT_SUN_GID = 2002,AT_SUN_RGID = 2003,AT_SUN_LDELF = 2004,AT_SUN_LDSHDR = 2005,AT_SUN_LDNAME = 2006,AT_SUN_LPAGESZ = 2007,AT_SUN_PLATFORM = 2008,AT_SUN_HWCAP = 2009,AT_SUN_IFLUSH = 2010,AT_SUN_CPU = 2011,AT_SUN_EMUL_ENTRY = 2012,AT_SUN_EMUL_EXECFD = 2013,AT_SUN_EXECNAME = 2014,AT_SUN_MMU = 2015,};
enum MACRO_AU_IPv4 {AU_IPv4 = 4,AU_IPv6 = 16,};
enum MACRO_B115200 {B115200 = 18,};
enum MACRO_B153600 {B153600 = 19,};
enum MACRO_B230400 {B230400 = 20,};
enum MACRO_B307200 {B307200 = 21,};
enum MACRO_B460800 {B460800 = 22,};
enum MACRO_BADCONT {BADCONT = -1,};
enum MACRO_BADMODE {BADMODE = 4294967295,};
enum MACRO_BAD_CIS {BAD_CIS_ADDR = 0x80000000,};
enum MACRO_BARRIER {BARRIER_LOCK = 0x100,GRANTED_LOCK = 0x200,CANCELLED_LOCK = 0x400,DELETED_LOCK = 0x800,INTERRUPTED_LOCK = 0x1000,LOCKMGR_LOCK = 0x2000,PXFS_LOCK = 0x4000,};
enum MACRO_BLKTYPE {BLKTYPE = 52,};
enum MACRO_BUTTON1 {BUTTON1_RELEASED = 0x1,BUTTON1_PRESSED = 0x2,BUTTON1_CLICKED = 0x4,BUTTON1_DOUBLE_CLICKED = 0x8,BUTTON1_TRIPLE_CLICKED = 0x10,};
enum MACRO_BUTTON2 {BUTTON2_RELEASED = 0x20,BUTTON2_PRESSED = 0x40,BUTTON2_CLICKED = 0x80,BUTTON2_DOUBLE_CLICKED = 0x100,BUTTON2_TRIPLE_CLICKED = 0x200,};
enum MACRO_BUTTON3 {BUTTON3_RELEASED = 0x400,BUTTON3_PRESSED = 0x800,BUTTON3_CLICKED = 0x1000,BUTTON3_DOUBLE_CLICKED = 0x2000,BUTTON3_TRIPLE_CLICKED = 0x4000,};
enum MACRO_BYTESIZ {BYTESIZ = 8,};
enum MACRO_CACHEFS {CACHEFS_PREFIX_LEN = 5,};
enum MACRO_CALLOUT {CALLOUT_FANOUT_BITS = 3,CALLOUT_TYPE_BITS = 1,CALLOUT_NTYPES = 2,CALLOUT_FANOUT = 8,CALLOUT_FANOUT_MASK = 7,CALLOUT_COUNTER_SHIFT = 4,CALLOUT_COUNTER_LOW = 16,CALLOUT_TABLES = 16,CALLOUT_TABLE_MASK = 15,CALLOUT_LONGTERM_TICKS = 16384,CALLOUT_BUCKETS = 512,CALLOUT_BUCKET_MASK = 511,CALLOUT_THREADS = 2,CALLOUT_REALTIME = 0,CALLOUT_NORMAL = 1,};
enum MACRO_CB_CODE {CB_CODE_CPR_CHKPT = 0,CB_CODE_CPR_RESUME = 1,};
enum MACRO_CFS_MAX {CFS_MAX_THREADS = 5,CFS_CM_FRONT = 1,CFS_CM_BACK = 2,CFS_BOI_ROOTFS = 1,CFS_BOI_FRONTFS = 2,CFS_BOI_BACKFS = 3,};
enum MACRO_CHANGED {COR_CHANGED = 0x40,COR1_CHANGED = 0x2,COR2_CHANGED = 0x4,COR3_CHANGED = 0x8,};
enum MACRO_CHRTYPE {CHRTYPE = 51,};
enum MACRO_CISTPLF {CISTPLF_NOERROR = 0x0,CISTPLF_UNKNOWN = 0x1,CISTPLF_REGS = 0x2,CISTPLF_COPYOK = 0x4,CISTPLF_VALID = 0x8,CISTPLF_GLOBAL_CIS = 0x10,CISTPLF_MF_CIS = 0x20,CISTPLF_FROM_AM = 0x40,CISTPLF_FROM_CM = 0x80,CISTPLF_IGNORE_TUPLE = 0x100,CISTPLF_VENDOR_SPECIFIC = 0x200,CISTPLF_LINK_INVALID = 0x1000000,CISTPLF_PARAMS_INVALID = 0x2000000,CISTPLF_AM_SPACE = 0x10000000,CISTPLF_CM_SPACE = 0x20000000,CISTPLF_LM_SPACE = 0x40000000,CISTPLF_MEM_ERR = 0x80000000,CISTPLF_SPACE_MASK = 0x70000000,CISTPLF_FROM_MASK = 0xC0,};
enum MACRO_CIS_GET {CIS_GET_LTUPLE_OPMASK = 0xFFFF,CIS_GET_LTUPLE_IGNORE = 0x10000,};
enum MACRO_CKUNNUM {CKUNNUM = 0x1,CKALPHA = 0x2,CKONEFLAG = 0x4,};
enum MACRO_CLDPEND {CLDPEND = 0x1,CLDCONT = 0x2,};
enum MACRO_CLUSTER {CLUSTER_CONFIGURED = 0x1,CLUSTER_BOOTED = 0x2,};
enum MACRO_CMD_NOP {CMD_NOP = 0x0,CMD_FLUSH = 0x1,CMD_RESET_ESP = 0x2,CMD_RESET_SCSI = 0x3,CMD_RESEL_SEQ = 0x40,CMD_SEL_NOATN = 0x41,CMD_SEL_ATN = 0x42,CMD_SEL_STOP = 0x43,CMD_EN_RESEL = 0x44,CMD_DIS_RESEL = 0x45,CMD_SEL_ATN3 = 0x46,CMD_TRAN_INFO = 0x10,CMD_COMP_SEQ = 0x11,CMD_MSG_ACPT = 0x12,CMD_TRAN_PAD = 0x18,CMD_SET_ATN = 0x1A,CMD_CLR_ATN = 0x1B,CMD_DISCONNECT = 0x27,CMD_DMA = 0x80,};
enum MACRO_CNSWTCH {CNSWTCH = 0,CSUSP = 26,};
enum MACRO_CN_NEED {CN_NEED_FRONT_SYNC = 0x100,CN_ALLOC_PENDING = 0x200,CN_STALE = 0x400,CN_MODIFIED = 0x800,CN_POPULATION_PENDING = 0x1000,CN_ASYNC_POPULATE = 0x2000,CN_ASYNC_POP_WORKING = 0x4000,CN_PENDRM = 0x8000,CN_MAPWRITE = 0x100000,CN_CMODINPROG = 0x200000,};
enum MACRO_CODESET {CODESET = 49,};
enum MACRO_COMMAND {COMMAND_DONE = 0,COMMAND_DONE_ERROR = 1,};
enum MACRO_COMPOSE {COMPOSE = 0x309,};
enum MACRO_CONTEXT {CONTEXT_LTR = 0x10,CONTEXT_RTL = 0x20,};
enum MACRO_CWERASE {CWERASE = 23,};
enum MACRO_DC_EXCL {DC_EXCL = 1,};
enum MACRO_DDI_DMA {DDI_DMA_FORCE_PHYSICAL = 0x100,};
enum MACRO_DECIMAL {DECIMAL_STRING_LENGTH = 512,};
enum MACRO_DEFAULT {DEFAULT_MAXPID = 30000,DEFAULT_JUMPPID = 0,};
enum MACRO_DIRTYPE {DIRTYPE = 53,};
enum MACRO_DMAGATE {DMAGATE = 0x8,};
enum MACRO_DOSDATA {DOSDATA = 86,};
enum MACRO_DOSHUGE {DOSHUGE = 6,};
enum MACRO_DOSOS12 {DOSOS12 = 1,PCIXOS = 2,DOSOS16 = 4,};
enum MACRO_DO_CHAP {DO_CHAP = 1,DO_PAP = 2,};
enum MACRO_DS18SPT {DS18SPT = 0xF0,};
enum MACRO_DTR_OFF {DTR_OFF = 0x1,DTR_ON = 0x0,};
enum MACRO_DUMPREG {DUMPREG = 0xE,};
enum MACRO_ECTSIZE {ECTSIZE = 2048,IETSIZE = 8192,};
enum MACRO_EEXISTS {EEXISTS = 6,};
enum MACRO_EI_FLAG {EI_FLAG_DIRTY = 0x0,EI_FLAG_PROT = 0x1,};
enum MACRO_ELFMAG0 {ELFMAG0 = 0x7F,};
enum MACRO_ELFMAG1 {ELFMAG1 = 69,};
enum MACRO_ELFMAG2 {ELFMAG2 = 76,};
enum MACRO_ELFMAG3 {ELFMAG3 = 70,};
enum MACRO_ELF_386 {ELF_386_MAXPGSZ = 0x10000,};
enum MACRO_ELF_M32 {ELF_M32_MAXPGSZ = 0x2000,ELF_NOTE_PAGESIZE_HINT = 0x1,};
enum MACRO_EM_INIT {EM_INIT_REQ = 0,EM_INFO_REQ = 1,EM_MODIFY_EVENT_MASK_REQ = 2,EM_GET_FIRST_TUPLE_REQ = 3,EM_GET_NEXT_TUPLE_REQ = 4,EM_INIT_ACK = 5,EM_INFO_ACK = 6,EM_EVENT_IND = 7,EM_ADAPTER_INFO_REQ = 8,EM_ADAPTER_INFO_ACK = 9,EM_SOCKET_INFO_REQ = 10,EM_SOCKET_INFO_ACK = 11,EM_GET_SOCKET_REQ = 12,EM_GET_SOCKET_ACK = 13,EM_IDENT_SOCKET_REQ = 14,EM_GET_FIRST_TUPLE_ACK = 15,EM_BADPRIM = 1,EM_VERSION = 1,EM_CURRENT_VERSION = 1,EM_CLASS_SIZE = 32,EM_EVENT_MASK_SIZE = 32,};
enum MACRO_ENCSTAT {ENCSTAT_UNRECOV = 0x1,ENCSTAT_CRITICAL = 0x2,ENCSTAT_NONCRITICAL = 0x4,ENCSTAT_INFO = 0x8,};
enum MACRO_ENOUSER {ENOUSER = 7,};
enum MACRO_EUCMASK {EUCMASK = 0x30000000,};
enum MACRO_EXABYTE {EXABYTE_WRITE_ERROR_THRESHOLD = 6,EXABYTE_READ_ERROR_THRESHOLD = 3,EXABYTE_MIN_TRANSFER = 26214400,};
enum MACRO_FAS100A {FAS100A = 3,FAS236 = 4,};
enum MACRO_FBVIDEO {FBVIDEO_OFF = 0,FBVIDEO_ON = 1,};
enum MACRO_FB_CMAP {FB_CMAP_BLOCK = 0x1,FB_CMAP_KERNEL = 0x2,};
enum MACRO_FCP_RSP {FCP_RSP_SCSI_BUS_ERR = 1,FCP_RSP_SCSI_PORT_ERR = 2,FCP_RSP_SOC_ERR = 3,};
enum MACRO_FDEJECT {FDEJECT = 1077,};
enum MACRO_FDIOCMD {FDIOCMD = 1083,};
enum MACRO_FDRAW_0 {FDRAW = 1094,};
enum MACRO_FEATURE {SET_PORT_FEATURE = 35,CLEAR_HUB_FEATURE = 32,CLEAR_PORT_FEATURE = 35,SET_CLEAR_PORT_FEATURE = 35,};
enum MACRO_FLK_USE {FLK_USE_GRAPH = 0,FLK_INIT_GRAPH = 1,};
enum MACRO_FLTIOVF {FLTIOVF = 7,FLTIZDIV = 8,};
enum MACRO_FLTPAGE {FLTPAGE = 11,};
enum MACRO_FLUSHRW {FLUSHRW = 0x3,FLUSHBAND = 0x4,};
enum MACRO_FMAXEXP {FMAXEXP = 128,MAXBEXP = 1024,};
enum MACRO_FOFFMAX {FOFFMAX = 0x2000,};
enum MACRO_FOPEN_0 {FOPEN = 0xFFFFFFFF,};
enum MACRO_FORREAL {FORREAL = 0,JUSTLOOKING = 1,};
enum MACRO_FSR_FTT {FSR_FTT_SHIFT = 14,FSR_FTT_IEEE = 16384,FSR_FTT_UNFIN = 32768,FSR_FTT_UNIMP = 49152,FSR_FTT_SEQ = 65536,FSR_FTT_ALIGN = 81920,FSR_FTT_DFAULT = 98304,FSR_TEM_NX = 8388608,FSR_TEM_DZ = 16777216,FSR_TEM_UF = 33554432,FSR_TEM_OF = 67108864,FSR_TEM_NV = 134217728,};
enum MACRO_FSTYPSZ {FSTYPSZ = 16,};
enum MACRO_FTLEXIT {FTLEXIT = 0x1,};
enum MACRO_FTLFUNC {FTLFUNC = 0x2000,};
enum MACRO_F_RDACC {F_RDACC = 0x1,F_WRACC = 0x2,F_RWACC = 0x3,F_NODNY = 0x0,F_RDDNY = 0x1,F_WRDNY = 0x2,F_RWDNY = 0x3,F_COMPAT = 0x8,};
enum MACRO_F_ULOCK {F_ULOCK = 0,F_LOCK = 1,F_TLOCK = 2,F_TEST = 3,};
enum MACRO_GETNCNT {GETNCNT = 3,GETPID = 4,};
enum MACRO_GETZCNT {GETZCNT = 7,SETVAL = 8,};
enum MACRO_GROUP_0 {GROUP = 0x8,};
enum MACRO_HANDTPL {HANDTPL_NOERROR = 0x0,HANDTPL_SET_FLAGS = 0x1,HANDTPL_COPY_DONE = 0x2,HANDTPL_PARSE_LTUPLE = 0x4,HANDTPL_RETURN_NAME = 0x8,HANDTPL_ERROR = 0x1000000,};
enum MACRO_HID_GET {HID_GET_REPORT = 0x1,HID_GET_IDLE = 0x2,HID_GET_PROTOCOL = 0x3,HID_SET_REPORT = 0x9,HID_SET_IDLE = 0xA,HID_SET_PROTOCOL = 0xB,};
enum MACRO_HIWATER {MIN_HIWATER = 2,MAX_HIWATER = 1022,};
enum MACRO_HME_PHY {HME_PHY_BMCR = 0x0,HME_PHY_BMSR = 0x1,HME_PHY_IDR1 = 0x2,HME_PHY_IDR2 = 0x3,HME_PHY_ANAR = 0x4,HME_PHY_ANLPAR = 0x5,HME_PHY_ANER = 0x6,HME_PHY_DIS = 0x12,HME_PHY_FCSC = 0x13,HME_PHY_NWAYTR = 0x14,HME_PHY_REC = 0x15,HME_PHY_SRR = 0x16,HME_PHY_CSC = 0x17,HME_PHY_LBREMR = 0x18,HME_PHY_AR = 0x19,HME_PHY_VRES1 = 0x1A,HME_PHY_TPISR = 0x1B,HME_PHY_NICR = 0x1C,HME_PHY_BTXPC = 0x1F,};
enum MACRO_HME_RMD {HME_RMD_BUFALIGN = 64,};
enum MACRO_HNAMLEN {HNAMLEN = 256,EXPNLEN = 1024,};
enum MACRO_HSFSMNT {HSFSMNT_NORRIP = 0x1,HSFSMNT_NOTRAILDOT = 0x2,HSFSMNT_NOMAPLCASE = 0x4,};
enum MACRO_HSIZLEN {HSIZLEN = 2,TNAMLEN = 100,};
enum MACRO_HTIMLEN {HTIMLEN = 2,};
enum MACRO_IBSHIFT {IBSHIFT = 16,};
enum MACRO_IDLEKEY {IDLEKEY = 0x7F,};
enum MACRO_IFP_CMD {IFP_CMD_CMPLT = 0x0,IFP_CMD_INCOMPLETE = 0x1,IFP_CMD_DMA_DERR = 0x2,IFP_CMD_TRAN_ERR = 0x3,IFP_CMD_RESET = 0x4,IFP_CMD_ABORTED = 0x5,IFP_CMD_TIMEOUT = 0x6,IFP_CMD_DATA_OVR = 0x7,IFP_CMD_ABORT_REJECTED = 0xE,IFP_CMD_RESET_REJECTED = 0x12,IFP_CMD_DATA_UNDER = 0x15,IFP_CMD_QUEUE_FULL = 0x1C,IFP_CMD_PORT_UNAVAIL = 0x28,IFP_CMD_PORT_LOGGED_OUT = 0x29,IFP_CMD_PORT_CONFIG_CHANGED = 0x2A,};
enum MACRO_IF_SCSI {IF_SCSI = 0x0,IF_FLOPPY = 0x1,IF_PCMCIA = 0x2,};
enum MACRO_IGMPMSG {IGMPMSG_NOCACHE = 1,IGMPMSG_WRONGVIF = 2,IGMPMSG_WHOLEPKT = 3,};
enum MACRO_IMPLINK {IMPLINK_IP = 155,IMPLINK_LOWEXPER = 156,IMPLINK_HIGHEXPER = 158,};
enum MACRO_INET_IP {INET_IP = 0,};
enum MACRO_INHERIT {INHERIT_VFS_FLAG = 9,};
enum MACRO_INOFLCK {INOFLCK = 0x1,SETFLCK = 0x2,SLPFLCK = 0x4,RCMDLCK = 0x8,PCMDLCK = 0x10,};
enum MACRO_INT16SZ {INT16SZ = 2,INADDRSZ = 4,IN6ADDRSZ = 16,};
enum MACRO_INT32SZ {INT32SZ = 4,};
enum MACRO_INT_NUM {STC_INT_NUM = 0,PPC_INT_NUM = 1,};
enum MACRO_INUARTC {INUARTC = 3,INUARTD = 4,};
enum MACRO_INVALID {INVALID_D_ID = 0x1,INVALID_S_ID = 0x2,};
enum MACRO_IOCPARM {IOCPARM_MASK = 0xFF,};
enum MACRO_IOCTYPE {IOCTYPE = 0xFF00,};
enum MACRO_IPPROTO {IPPROTO_IP = 0,IPPROTO_HOPOPTS = 0,IPPROTO_ICMP = 1,IPPROTO_IGMP = 2,IPPROTO_GGP = 3,IPPROTO_ENCAP = 4,IPPROTO_TCP = 6,IPPROTO_EGP = 8,IPPROTO_PUP = 12,IPPROTO_UDP = 17,IPPROTO_IDP = 22,IPPROTO_IPV6 = 41,IPPROTO_ROUTING = 43,IPPROTO_FRAGMENT = 44,IPPROTO_RSVP = 46,IPPROTO_ESP = 50,IPPROTO_AH = 51,IPPROTO_ICMPV6 = 58,IPPROTO_NONE = 59,IPPROTO_DSTOPTS = 60,IPPROTO_HELLO = 63,IPPROTO_ND = 77,IPPROTO_EON = 80,IPPROTO_PIM = 103,IPPROTO_RAW = 255,IPPROTO_MAX = 256,};
enum MACRO_IP_ADDR {IP_ADDR_TYPE = 1,};
enum MACRO_IP_HOST {IP_HOST_MASK = 0xFFFFFFFF,};
enum MACRO_ISO_DIR {ISO_DIR_NAMELEN = 31,ISO_FILE_NAMELEN = 31,};
enum MACRO_I_STRFT {I_STRFT = 0x5328,I_STRFTON = 0x5329,I_STRFTOFF = 0x532A,I_STRFTSTR = 0x532B,I_STRFTALL = 0x532C,I_STRFTZERO = 0x532D,};
enum MACRO_JUSTIFY {JUSTIFY_LEFT = 1,JUSTIFY_CENTER = 2,JUSTIFY_RIGHT = 3,};
enum MACRO_KBD_CMD {KBD_CMD_RESET = 0x1,KBD_CMD_BELL = 0x2,KBD_CMD_NOBELL = 0x3,KBD_CMD_CLICK = 0xA,KBD_CMD_NOCLICK = 0xB,KBD_CMD_AUTOTEST = 0xC,KBD_CMD_SETLED = 0xE,KBD_CMD_GETLAYOUT = 0xF,};
enum MACRO_KB_SUN3 {KB_SUN3 = 3,KB_SUN4 = 4,KB_USB = 6,KB_PC = 101,KB_ASCII = 15,};
enum MACRO_KIOCCMD {KIOCCMD = 27400,};
enum MACRO_KM_WAIT {KM_WAIT = 0x0,KM_NOWAIT = 0x1,KM_TEMP = 0x1000,};
enum MACRO_LBLSIZE {LBLSIZE = 16,NAMELEN = 64,};
enum MACRO_LDCLOSE {LDCLOSE = 17409,};
enum MACRO_LEFTALT {LEFTALT = 10,ALTMASK = 5120,};
enum MACRO_LLC_GET {LLC_GET_CON_PARMS_REQ = 1275068424,LLC_SET_CON_PARMS_REQ = 1275068425,LLC_GETPPA = 1275068426,LLC_SETPPA = 1275068427,};
enum MACRO_LM_MODE {LM_MODE = 1,LM_FORWARDMASK = 2,LM_SLC = 3,};
enum MACRO_LOADAVG {LOADAVG_1MIN = 0,LOADAVG_5MIN = 1,LOADAVG_15MIN = 2,LOADAVG_NSTATS = 3,};
enum MACRO_LOGNAME {LOGNAME_MAX = 8,TTYNAME_MAX = 128,};
enum MACRO_LOG_VOL {LOG_VOL_OPEN_INT = 0x0,LOG_VOL_CLOSE_INT = 0x1,};
enum MACRO_LWPNULL {LWPNULL = 0,};
enum MACRO_MAPINOK {MAPINOK = 0x1,NOMAPIN = 0x2,REMAPOK = 0x4,NOREMAP = 0x8,};
enum MACRO_MAXBLKS {MAXBLKS = 1422,};
enum MACRO_MAXDEVS {MAXDEVS = 7,};
enum MACRO_MAXFRAG {MAXFRAG = 8,};
enum MACRO_MAXLINK {MAXLINK = 32767,};
enum MACRO_MAXVIFS {MAXVIFS = 32,};
enum MACRO_MAX_HDR {MAX_HDR = 128,MAX_COMP_HDR = 16,};
enum MACRO_MAX_HWC {MAX_HWC_LINESIZE = 1024,};
enum MACRO_MAX_QOP {MAX_QOP_NUM_PAIRS = 128,MAX_QOPS_PER_MECH = 128,MAX_UINT = 4294967295,MAX_ULONG = 4294967295,MAX_USHORT = 65535,};
enum MACRO_MAX_SHR {MAX_SHR_OWNER_LEN = 1024,};
enum MACRO_MDB_SYM {MDB_SYM_NAMLEN = 1024,MDB_SYM_FUZZY = 0,MDB_SYM_EXACT = 1,MDB_OBJ_EXEC = 0,MDB_OBJ_RTLD = 1,MDB_OBJ_EVERY = -1,MDB_OPT_SETBITS = 1,MDB_OPT_CLRBITS = 2,MDB_OPT_STR = 3,MDB_OPT_UINTPTR = 4,MDB_OPT_UINT64 = 5,};
enum MACRO_MDI_CCR {MDI_CCR_PCGCLK_ENABLE = 0x4,MDI_CCR_CLKSEL1_ENABLE = 0x2,MDI_CCR_CLKSEL0_ENABLE = 0x1,MDI_CCR_PCGSCLK = 0x1,MDI_CCR_PCGSDAT = 0x2,MDI_CCR_PCGSDAT_DIRSEL = 0x4,MDI_CCR_PCGASXSEL = 0x8,MDI_CCR_PCGAXS = 0x10,MDI_CCR_DATABITS = 0xF0,MDI_CCR_DATASHIFT = 0x4,MDI_ICS_NREGS = 0x10,MDI_TST_BLUE = 0xFF0000,MDI_TST_GREEN = 0xFF00,MDI_TST_RED = 0xFF,};
enum MACRO_MDI_HCT {MDI_HCT = 0x3FF,MDI_VCT = 0xFFF,MDI_HBS = 0x3FF,MDI_HBC = 0x3FF,MDI_HSS = 0x3FF,MDI_HSC = 0x3FF,MDI_CSC = 0x3FF,MDI_VBS = 0xFFF,MDI_VBC = 0xFFF,MDI_VSS = 0xFFF,MDI_VSC = 0xFFF,MDI_XCS = 0x3FF,MDI_XCC = 0x3FF,MDI_CURS_SIZE = 0x20,MDI_CURS_ENTRIES = 0x2,MDI_CURS_ENABLE = 0x4,MDI_CURS_SELECT = 0x2,MDI_CURS_DBUF = 0x1,MDI_CURS_XMASK = 0xFFF,MDI_CURS_YMASK = 0xFFF,MDI_CURS_ALPHAMASK = 0xF8000000,MDI_CURS_PIXVAL = 0xFFFFFF,MDI_CMAP_ENTRIES = 0x100,MDI_CMAP_MASK = 0xFF,};
enum MACRO_METABIT {METABIT = 0,METAMASK = 128,};
enum MACRO_MIB2_IP {MIB2_IP_ADDR = 20,MIB2_IP_ROUTE = 21,MIB2_IP_MEDIA = 22,MIB2_IP6_ROUTE = 23,MIB2_IP6_MEDIA = 24,MIB2_IP6_ADDR = 25,};
enum MACRO_MINMASK {MINMASK = 0x3F,};
enum MACRO_MIN_ACL {MIN_ACL_ENTRIES = 4,};
enum MACRO_MIN_INT {MIN_INT = -2147483648,MIN_LONG = -2147483648,MIN_SHORT = -32768,};
enum MACRO_MI_HARD {MI_HARD = 0x1,MI_PRINTED = 0x2,MI_INT = 0x4,MI_DOWN = 0x8,MI_NOAC = 0x10,MI_NOCTO = 0x20,MI_DYNAMIC = 0x40,MI_LLOCK = 0x80,MI_GRPID = 0x100,MI_RPCTIMESYNC = 0x200,MI_LINK = 0x400,MI_SYMLINK = 0x800,MI_READDIR = 0x1000,MI_ACL = 0x2000,MI_BINDINPROG = 0x4000,MI_LOOPBACK = 0x8000,MI_SEMISOFT = 0x10000,MI_NOPRINT = 0x20000,MI_DIRECTIO = 0x40000,};
enum MACRO_MI_INFO {MI_INFO_ONE = 1,MI_INFO_ALL = 2,MI_INFO_CNT = 4,MI_LOADED = 1,MI_INSTALLED = 2,};
enum MACRO_MMCODEC {MMCODEC_OM0_ENABLE = 0x1,MMCODEC_OM1_ENABLE = 0x1,MMCODEC_MIN_ATEN = 0x0,MMCODEC_MAX_ATEN = 0x1F,MMCODEC_MAX_DEV_ATEN = 0x3F,MMCODEC_SM = 0x1,MMCODEC_OVR_CLR = 0x0,MMCODEC_OVR = 0x1,MMCODEC_IS_LINE = 0x0,MMCODEC_IS_MIC = 0x1,MMCODEC_MIN_GAIN = 0x0,MMCODEC_MAX_GAIN = 0xF,MMCODEC_MA_MIN_ATEN = 0x0,MMCODEC_MA_MAX_ATEN = 0xF,MMCODEC_DCB = 0x1,MMCODEC_SRE = 0x1,MMCODEC_VS0 = 0x0,MMCODEC_VS1 = 0x1,MMCODEC_DFR_8000 = 0x0,MMCODEC_DFR_5513 = 0x0,MMCODEC_DFR_16000 = 0x1,MMCODEC_DFR_11025 = 0x1,MMCODEC_DFR_27429 = 0x2,MMCODEC_DFR_18900 = 0x2,MMCODEC_DFR_32000 = 0x3,MMCODEC_DFR_22050 = 0x3,MMCODEC_DFR_37800 = 0x4,MMCODEC_DFR_44100 = 0x5,MMCODEC_DFR_48000 = 0x6,MMCODEC_DFR_33075 = 0x6,MMCODEC_DFR_9600 = 0x7,MMCODEC_DFR_6615 = 0x7,MMCODEC_ST_MONO = 0x0,MMCODEC_ST_STEREO = 0x1,MMCODEC_DF_16_BIT = 0x0,MMCODEC_DF_ULAW = 0x1,MMCODEC_DF_ALAW = 0x2,MMCODEC_MCK_MSTR = 0x0,MMCODEC_MCK_XTAL1 = 0x1,MMCODEC_MCK_XTAL2 = 0x2,MMCODEC_MCK_EXT = 0x3,MMCODEC_BSEL_64 = 0x0,MMCODEC_BSEL_128 = 0x1,MMCODEC_BSEL_256 = 0x2,MMCODEC_XCLK = 0x1,MMCODEC_XEN = 0x0,MMCODEC_ENL = 0x1,MMCODEC_ADL_DIG = 0x0,MMCODEC_ADL_ANLG = 0x1,MMCODEC_LEN = 0x100,};
enum MACRO_MODLOAD {MODLOAD = 0,MODUNLOAD = 1,MODINFO = 2,};
enum MACRO_MODOPEN {MODOPEN = 0x1,CLONEOPEN = 0x2,CONSOPEN = 0x4,};
enum MACRO_MONMASK {MONMASK = 0xF,};
enum MACRO_MORECTL {MORECTL = 1,MOREDATA = 2,};
enum MACRO_MSCALE0 {MSCALE0 = 4,};
enum MACRO_MSGMARK {MSGMARK = 0x1,MSGNOLOOP = 0x2,MSGDELIM = 0x4,MSGNOGET = 0x8,MSGMARKNEXT = 0x10,MSGNOTMARKNEXT = 0x20,};
enum MACRO_MS_LEFT {MS_LEFT = 32544,MS_MIDDLE = 32545,MS_RIGHT = 32546,};
enum MACRO_MTERASE {MTERASE = 9,};
enum MACRO_MTONOFF {MTONOFF = 0xB,};
enum MACRO_MT_ISTS {MT_ISTS = 0x1,MT_ISHT = 0x2,MT_ISTM = 0x3,MT_ISMT = 0x4,MT_ISUT = 0x5,MT_ISCPC = 0x6,MT_ISAR = 0x7,MT_ISSC = 0x8,MT_ISSYSGEN11 = 0x10,MT_ISSYSGEN = 0x11,MT_ISDEFAULT = 0x12,MT_ISCCS3 = 0x13,MT_ISMT02 = 0x14,MT_ISVIPER1 = 0x15,MT_ISWANGTEK1 = 0x16,MT_ISCCS7 = 0x17,MT_ISCCS8 = 0x18,MT_ISCCS9 = 0x19,MT_ISCCS11 = 0x1A,MT_ISCCS12 = 0x1B,MT_ISCCS13 = 0x1C,MT_ISCCS14 = 0x1D,MT_ISCCS15 = 0x1E,MT_ISCCS16 = 0x1F,MT_ISCDC = 0x20,MT_ISFUJI = 0x21,MT_ISKENNEDY = 0x22,MT_ISHP = 0x23,MT_ISSTC = 0x24,MT_ISANRITSU = 0x25,MT_ISCCS23 = 0x26,MT_ISCCS24 = 0x27,MT_ISEXABYTE = 0x28,MT_ISEXB8500 = 0x29,MT_ISWANGTHS = 0x2A,MT_ISWANGDAT = 0x2B,MT_ISPYTHON = 0x2C,MT_ISCCS28 = 0x2D,MT_ISCCS29 = 0x2E,MT_ISCCS30 = 0x2F,MT_ISCCS31 = 0x30,MT_ISCCS32 = 0x31,MT_ISQIC = 0x32,MT_ISREEL = 0x33,MT_ISDAT = 0x34,MT_IS8MM = 0x35,MT_ISOTHER = 0x36,MT_ISTAND25G = 0x37,MT_ISDLT = 0x38,MT_ISSTK9840 = 0x39,};
enum MACRO_MT_NONE {MT_NONE = 0x0,MT_TRANSACT = 0x1,MT_MATAMAP = 0x2,MT_WRITE_CHECK = 0x4,MT_LOG_WRITE_CHECK = 0x8,MT_CHECK_MAP = 0x10,MT_TRACE = 0x20,MT_SIZE = 0x40,MT_NOASYNC = 0x80,MT_FORCEROLL = 0x100,MT_SCAN = 0x200,MT_PREWRITE = 0x400,};
enum MACRO_NANOSEC {NANOSEC = 1000000000,};
enum MACRO_NBPSCTR {NBPSCTR = 512,};
enum MACRO_NDEFECT {ST506_NDEFECT = 127,ESDI_NDEFECT = 127,};
enum MACRO_ND_BASE {ND_BASE = 19968,ND_GET = 19968,ND_SET = 19969,};
enum MACRO_NEWLINE {NEWLINE = 3,TAB = 4,};
enum MACRO_NFSAUTH {NFSAUTH_DENIED = 0x1,NFSAUTH_RO = 0x2,NFSAUTH_RW = 0x4,NFSAUTH_ROOT = 0x8,NFSAUTH_DROP = 0x10,NFSAUTH_MAPNONE = 0x20,NFSAUTH_PROG = 0x18787,NFSAUTH_VERS = 0x1,NFSAUTH_ACCESS = 0x1,};
enum MACRO_NFS_ACL {NFS_ACL_MAX_ENTRIES = 1024,};
enum MACRO_NGROUPS {NGROUPS_UMIN = 0,NGROUPS_UMAX = 32,NGROUPS_MAX_DEFAULT = 16,};
enum MACRO_NOCLASS {NOCLASS = -1,};
enum MACRO_NONROOT {NONROOT_USR = 2,};
enum MACRO_NO_AUTH {NO_AUTH = 0,};
enum MACRO_NPCHASH {NPCHASH = 1,};
enum MACRO_NPRGREG {NPRGREG = 38,};
enum MACRO_NSIGBUS {NSIGBUS = 3,};
enum MACRO_NSIGCLD {NSIGCLD = 6,};
enum MACRO_NSIGEMT {NSIGEMT = 2,};
enum MACRO_NSIGFPE {NSIGFPE = 8,};
enum MACRO_NSIGILL {NSIGILL = 8,};
enum MACRO_NSPEEDS {NSPEEDS = 4,};
enum MACRO_NUMLOCK {NUMLOCK = 11,NUMLOCKMASK = 2048,};
enum MACRO_NWINDOW {NWINDOW = 7,};
enum MACRO_N_UNDEF {N_UNDEF = 0,N_ABS = -1,N_DEBUG = -2,N_TV = 65533,};
enum MACRO_OCFAuth {OCFAuth_Loopback = 0,OCFAuth_Enter_PIN = 1,OCFAuth_Enter_PIN_External = 2,OCFAuth_Enter_Password = 3,OCFAuth_Enter_Username = 4,OCFAuth_Insert_Card = 5,OCFAuth_Invalid_PIN = 20,OCFAuth_Invalid_Password = 21,OCFAuth_Invalid_Username = 22,OCFAuth_Auth_Failure = 23,OCFAuth_Auth_Error = 24,OCFAuth_No_Card = 25,OCFAuth_Invalid_Card = 26,OCFAuth_Verify_Password = 40,OCFAuth_TextMsg = 60,OCFAuth_TextMsg_NOCONF = 61,OCFAuth_TextMsg_DELETE = 62,OCFAuth_TextMsg_INPUT = 63,OCFAuth_ErrorMsg = 80,OCFAuth_ErrorMsg_NOCONF = 81,OCFAuth_ErrorMsg_DELETE = 82,OCFAuth_Success = 0,OCFAuth_Internal_Error = 1,OCFAuth_Retry_Operation = 2,OCFAuth_Unknown_Tag = 3,OCFAuth_Conversation_Interrupt = 4,OCFAuth_Failed = 5,OCFAuth_Password_Verify_OK = 20,OCFAuth_Password_Verify_ERROR = 21,OCFAuth_Password_Verify_UNABLE = 22,};
enum MACRO_OMAXMAJ {OMAXMAJ = 0x7F,};
enum MACRO_OMAXMIN {OMAXMIN = 0xFF,};
enum MACRO_OTHEROS {OTHEROS = 98,};
enum MACRO_OTYPCNT {OTYPCNT = 5,};
enum MACRO_OUTLINE {OUTLINE = 131072,};
enum MACRO_PADKEYS {PADKEYS = 0x700,};
enum MACRO_PADPLUS {PADPLUS = 0x708,};
enum MACRO_PADSTAR {PADSTAR = 0x702,};
enum MACRO_PBLKSIZ {PBLKSIZ = 1024,DBLKSIZ = 4096,};
enum MACRO_PCAGENT {PCAGENT = 24,};
enum MACRO_PCSASRS {PCSASRS = 28,};
enum MACRO_PCSCRED {PCSCRED = 27,};
enum MACRO_PCSEXIT {PCSEXIT = 15,PCSET = 16,};
enum MACRO_PCSHOLD {PCSHOLD = 11,};
enum MACRO_PCSXREG {PCSXREG = 20,};
enum MACRO_PCUNSET {PCUNSET = 17,};
enum MACRO_PCWATCH {PCWATCH = 23,};
enum MACRO_PCWRITE {PCWRITE = 26,};
enum MACRO_PCWSTOP {PCWSTOP = 3,PCTWSTOP = 4,};
enum MACRO_PDFLAGS {PDFLAGS = 15,};
enum MACRO_PFKEYV2 {PFKEYV2_REVISION = 199806,};
enum MACRO_POLLERR {POLLERR = 0x8,POLLHUP = 0x10,POLLNVAL = 0x20,POLLREMOVE = 0x800,};
enum MACRO_PPP_MAX {PPP_MAX_PASSWD = 255,PPP_MAX_ERROR = 255,};
enum MACRO_PRARGSZ {PRARGSZ = 80,};
enum MACRO_PREMOTE {PREMOTE = 39,MAXPATHLEN = 1024,};
enum MACRO_PRESSED {PRESSED = 0x0,RELEASED = 0x80,};
enum MACRO_PRMAPSZ {PRMAPSZ = 64,};
enum MACRO_PRNODEV {PRNODEV = 4294967295,};
enum MACRO_PROCESS {INIT_PROCESS = 5,LOGIN_PROCESS = 6,USER_PROCESS = 7,DEAD_PROCESS = 8,};
enum MACRO_PSARGSZ {PSARGSZ = 80,};
enum MACRO_PSR_ICC {PSR_ICC_SHIFT = 20,PSR_IMPLVER_SHIFT = 24,PSR_TSTATE_CC_SHIFT = 12,PSR_PSTATE_EF_SHIFT = 8,PSR_FPRS_FEF_SHIFT = 10,};
enum MACRO_PTHREAD {PTHREAD_CREATE_DETACHED = 0x40,PTHREAD_CREATE_JOINABLE = 0x0,PTHREAD_SCOPE_SYSTEM = 0x1,PTHREAD_SCOPE_PROCESS = 0x0,PTHREAD_INHERIT_SCHED = 0x1,PTHREAD_EXPLICIT_SCHED = 0x0,PTHREAD_PROCESS_SHARED = 0x1,PTHREAD_PROCESS_PRIVATE = 0x0,};
enum MACRO_PTSSTTY {PTSSTTY = 20483,};
enum MACRO_RESPMAX {RESPMAX = 70000,};
enum MACRO_RFSCALL {RFSCALL_SOFT = 0x1,};
enum MACRO_RPCTEST {RPCTEST_PROGRAM = 1,RPCTEST_VERSION = 1,RPCTEST_NULL_PROC = 2,RPCTEST_NULL_BATCH_PROC = 3,};
enum MACRO_RPC_GSS {RPC_GSS_ER_SUCCESS = 0,RPC_GSS_ER_SYSTEMERROR = 1,};
enum MACRO_RPC_MSG {RPC_MSG_VERSION = 2,RPC_SERVICE_PORT = 2048,};
enum MACRO_RPC_SVC {RPC_SVC_USE_POLLFD = 10,RPC_SVC_CONNMAXREC_SET = 11,RPC_SVC_CONNMAXREC_GET = 12,};
enum MACRO_RTBACKQ {RTBACKQ = 0x2,};
enum MACRO_RTSXOFF {RTSXOFF = 0x1,CTSXON = 0x2,DTRXOFF = 0x4,CDXON = 0x8,ISXOFF = 0x10,};
enum MACRO_RX_DATA {RX_DATA = 0x10,RX_RET = 0x1,};
enum MACRO_RX_FIFO {MIN_RX_FIFO = 1,MAX_RX_FIFO = 8,};
enum MACRO_R_SPARC {R_SPARC_NONE = 0,R_SPARC_8 = 1,R_SPARC_16 = 2,R_SPARC_32 = 3,R_SPARC_DISP8 = 4,R_SPARC_DISP16 = 5,R_SPARC_DISP32 = 6,R_SPARC_WDISP30 = 7,R_SPARC_WDISP22 = 8,R_SPARC_HI22 = 9,R_SPARC_22 = 10,R_SPARC_13 = 11,R_SPARC_LO10 = 12,R_SPARC_GOT10 = 13,R_SPARC_GOT13 = 14,R_SPARC_GOT22 = 15,R_SPARC_PC10 = 16,R_SPARC_PC22 = 17,R_SPARC_WPLT30 = 18,R_SPARC_COPY = 19,R_SPARC_GLOB_DAT = 20,R_SPARC_JMP_SLOT = 21,R_SPARC_RELATIVE = 22,R_SPARC_UA32 = 23,R_SPARC_PLT32 = 24,R_SPARC_HIPLT22 = 25,R_SPARC_LOPLT10 = 26,R_SPARC_PCPLT32 = 27,R_SPARC_PCPLT22 = 28,R_SPARC_PCPLT10 = 29,R_SPARC_10 = 30,R_SPARC_11 = 31,R_SPARC_64 = 32,R_SPARC_OLO10 = 33,R_SPARC_HH22 = 34,R_SPARC_HM10 = 35,R_SPARC_LM22 = 36,R_SPARC_PC_HH22 = 37,R_SPARC_PC_HM10 = 38,R_SPARC_PC_LM22 = 39,R_SPARC_WDISP16 = 40,R_SPARC_WDISP19 = 41,R_SPARC_GLOB_JMP = 42,R_SPARC_7 = 43,R_SPARC_5 = 44,R_SPARC_6 = 45,R_SPARC_DISP64 = 46,R_SPARC_PLT64 = 47,R_SPARC_HIX22 = 48,R_SPARC_LOX10 = 49,R_SPARC_H44 = 50,R_SPARC_M44 = 51,R_SPARC_L44 = 52,R_SPARC_REGISTER = 53,R_SPARC_UA64 = 54,R_SPARC_UA16 = 55,R_SPARC_NUM = 56,};
enum MACRO_SB_DFLT {SB_DFLT_CHUNK = 8192,SB_SEND_ON_WRITE = 1,SB_NO_HEADER = 2,SB_NO_PROTO_CVT = 4,SB_DEFER_CHUNK = 8,SB_NO_DROPS = 16,SB_FRCVD = 1,};
enum MACRO_SB_XBOX {SB_XBOX = 0x500,};
enum MACRO_SCSIREG {SCSIREG = 15,};
enum MACRO_SC_FREE {SC_FREE = 0x0,SC_SLEEP = 0x1,SC_RUN = 0x2,SC_ONPROC = 0x4,SC_STOPPED = 0x10,SC_IGNORE = 0xFFFFFFFE,SC_NOPREEMPT = 0xFFFFFFFD,SC_MAX_TICKS = 0x2,SC_STATE = 0x1,SC_BLOCK = 0x2,SC_PRIORITY = 0x4,SC_PREEMPT = 0x8,SC_DOOR = 0x10,};
enum MACRO_SDFLAGS {SDFLAGS = 3,};
enum MACRO_SD_STOP {SD_STOP = 0,SD_START = 1,SD_EJECT = 2,};
enum MACRO_SECSIZE {SECSIZE = 512,};
enum MACRO_SEGSIZE {SEGSIZE = 512,};
enum MACRO_SELFMAG {SELFMAG = 4,};
enum MACRO_SESSTAT {SESSTAT_UNSUPPORTED = 0,SESSTAT_OK = 1,SESSTAT_CRIT = 2,SESSTAT_NONCRIT = 3,SESSTAT_UNRECOV = 4,SESSTAT_NOTINSTALLED = 5,SESSTAT_UNKNOWN = 6,SESSTAT_NOTAVAIL = 7,};
enum MACRO_SIG2STR {SIG2STR_MAX = 32,};
enum MACRO_SMMEDIA {SMMEDIA_PROP_V_0 = 0,};
enum MACRO_SM_PRIV {SM_PRIV = 0x1,SM_ATOMIC = 0x2,SM_ADDR = 0x4,SM_CONNREQUIRED = 0x8,SM_FDPASSING = 0x10,SM_EXDATA = 0x20,SM_OPTDATA = 0x40,SM_BYTESTREAM = 0x80,SM_ACCEPTOR_ID = 0x100,};
enum MACRO_SNDZERO {SNDZERO = 0x1,SNDPIPE = 0x2,};
enum MACRO_SONPROC {SONPROC = 6,};
enum MACRO_SPECIAL {SPECIAL_I = 11,SPECIAL_D = 15,};
enum MACRO_SPECIFY {SPECIFY = 0x3,SNSDSTAT = 0x4,};
enum MACRO_STCNTRS {STCNTRS = 7,STTCHAN = 8,STGET = 22528,};
enum MACRO_STFLUSH {STFLUSH = 0x100,STWRAP = 0x200,STAPPL = 0x400,};
enum MACRO_STPRINT {STPRINT = 3,STENABLE = 4,};
enum MACRO_STRHIGH {STRHIGH = 5120,};
enum MACRO_STRUIOT {STRUIOT_NONE = -1,STRUIOT_DONTCARE = 0,STRUIOT_STANDARD = 1,STRUIOT_IP = 2,};
enum MACRO_STSTART {STSTART = 1,STHALT = 2,};
enum MACRO_STTHROW {STTHROW = 22530,};
enum MACRO_STWLINE {STWLINE = 22531,};
enum MACRO_ST_INIT {ST_INIT_RESERVE = 0x1,ST_RELEASE = 0x2,ST_RESERVE = 0x4,ST_PRESERVE_RESERVE = 0x8,ST_RESERVATION_CONFLICT = 0x10,ST_LOST_RESERVE = 0x20,ST_RESERVATION_DELAY = 0x7A120,ST_NAMESIZE = 0x2C,};
enum MACRO_ST_TYPE {ST_TYPE_INVALID = 0x0,ST_TYPE_SYSGEN1 = 0x10,ST_TYPE_SYSGEN = 0x11,ST_TYPE_DEFAULT = 0x12,ST_TYPE_EMULEX = 0x14,ST_TYPE_ARCHIVE = 0x15,ST_TYPE_WANGTEK = 0x16,ST_TYPE_CDC = 0x20,ST_TYPE_FUJI = 0x21,ST_TYPE_KENNEDY = 0x22,ST_TYPE_ANRITSU = 0x25,ST_TYPE_HP = 0x23,ST_TYPE_HIC = 0x26,ST_TYPE_REEL = 0x27,ST_TYPE_DAT = 0x2D,ST_TYPE_EXABYTE = 0x28,ST_TYPE_EXB8500 = 0x29,ST_TYPE_WANGTHS = 0x2A,ST_TYPE_WANGDAT = 0x2B,ST_TYPE_PYTHON = 0x2C,ST_TYPE_STC3490 = 0x24,ST_TYPE_TAND25G = 0x37,ST_TYPE_DLT = 0x38,ST_TYPE_STK9840 = 0x39,ST_DYNAMIC = 0x2000,ST_VARIABLE = 0x1,ST_QIC = 0x2,ST_REEL = 0x4,ST_BSF = 0x8,ST_BSR = 0x10,ST_LONG_ERASE = 0x20,ST_AUTODEN_OVERRIDE = 0x40,ST_NOBUF = 0x80,ST_RESERVED_BIT1 = 0x100,ST_KNOWS_EOD = 0x200,ST_UNLOADABLE = 0x400,ST_SOFT_ERROR_REPORTING = 0x800,ST_LONG_TIMEOUTS = 0x1000,ST_BUFFERED_WRITES = 0x4000,ST_NO_RECSIZE_LIMIT = 0x8000,ST_MODE_SEL_COMP = 0x10000,ST_NO_RESERVE_RELEASE = 0x20000,ST_READ_IGNORE_ILI = 0x40000,ST_READ_IGNORE_EOFS = 0x80000,ST_SHORT_FILEMARKS = 0x100000,ST_EJECT_ON_CHANGER_FAILURE = 0x200000,ST_RETRY_ON_RECOVERED_DEFERRED_ERROR = 0x400000,ST_CLN_TYPE_1 = 0x10000000,ST_CLN_TYPE_2 = 0x20000000,ST_CLN_TYPE_3 = 0x40000000,};
enum MACRO_ST_USER {ST_USER_CONTEXT = 1,};
enum MACRO_SUNIXOS {SUNIXOS = 130,};
enum MACRO_SUN_KEY {SUN_KEY_FATAL = 0x10,SUN_KEY_TIMEOUT = 0x11,SUN_KEY_EOF = 0x12,SUN_KEY_EOT = 0x13,SUN_KEY_LENGTH = 0x14,SUN_KEY_BOT = 0x15,SUN_KEY_WRONGMEDIA = 0x16,};
enum MACRO_SUN_MIN {SUN_MIN_SENSE_LENGTH = 4,};
enum MACRO_SUSPEND {SUSPEND_NORMAL = 0,SUSPEND_PAUSE = 1,};
enum MACRO_SYMINFO {SYMINFO_FLG_DIRECT = 0x1,SYMINFO_FLG_PASSTHRU = 0x2,SYMINFO_FLG_COPY = 0x4,SYMINFO_FLG_LAZYLOAD = 0x8,SYMINFO_BT_SELF = 0xFFFF,SYMINFO_BT_PARENT = 0xFFFE,SYMINFO_BT_LOWRESERVE = 0xFF00,SYMINFO_NONE = 0x0,SYMINFO_CURRENT = 0x1,SYMINFO_NUM = 0x2,};
enum MACRO_SYMTYPE {SYMTYPE = 50,};
enum MACRO_SYSCANC {SYSCANC = 9,};
enum MACRO_SYSMINT {SYSMINT = 7,SYSRAWC = 8,};
enum MACRO_SYSNAME {SYSNAME = 9,};
enum MACRO_SYSOUTC {SYSOUTC = 10,};
enum MACRO_SYSRINT {SYSRINT = 5,};
enum MACRO_SYSXINT {SYSXINT = 6,};
enum MACRO_S_INPUT {S_INPUT = 0x1,S_HIPRI = 0x2,S_OUTPUT = 0x4,S_MSG = 0x8,S_ERROR = 0x10,S_HANGUP = 0x20,S_RDNORM = 0x40,S_WRNORM = 0x4,S_RDBAND = 0x80,S_WRBAND = 0x100,S_BANDURG = 0x200,};
enum MACRO_S_SIGIO {S_SIGIO = 0x1,S_SIGURG = 0x2,};
enum MACRO_S_WINFO {S_WINFO = 0x1000,S_WRDISABLE = 0x2000,S_WUNBIND = 0x4000,S_IGNORE_FLOW = 0x8000,S_WUNBIND_DISCON = 0x10000,};
enum MACRO_TBADSEQ {TBADSEQ = 7,TSYSERR = 8,};
enum MACRO_TCP_IOC {TCP_IOC_DEFAULT_Q = 21555,};
enum MACRO_TCP_MAX {TCP_MAX_COMBINED_HEADER_LENGTH = 120,TCP_MAX_IP_OPTIONS_LENGTH = 40,TCP_MAX_HDR_LENGTH = 60,TCP_MIN_HEADER_LENGTH = 20,TCP_MAXWIN = 65535,TCP_MAX_WINSHIFT = 14,TCP_MAX_LARGEWIN = 1073725440,};
enum MACRO_TCP_TTL {TCP_TTL = 60,};
enum MACRO_TCRCLEN {TCRCLEN = 8,};
enum MACRO_TCSANOW {TCSANOW = 21518,};
enum MACRO_TCSETAF {TCSETAF = 21508,};
enum MACRO_TCSETAW {TCSETAW = 21507,};
enum MACRO_TCSETSF {TCSETSF = 21520,};
enum MACRO_TCSETSW {TCSETSW = 21519,};
enum MACRO_TCSETXF {TCSETXF = 22532,};
enum MACRO_TCSETXW {TCSETXW = 22531,};
enum MACRO_TELQUAL {TELQUAL_IS = 0,TELQUAL_SEND = 1,TELQUAL_INFO = 2,TELQUAL_REPLY = 2,TELQUAL_NAME = 3,};
enum MACRO_TGIDLEN {TGIDLEN = 8,};
enum MACRO_TGWRITE {TGWRITE = 0x10,};
enum MACRO_THOUSEP {THOUSEP = 40,};
enum MACRO_TIMEOUT {CLSET_TIMEOUT = 1,CLGET_TIMEOUT = 2,};
enum MACRO_TIME_OK {TIME_OK = 0,TIME_INS = 1,TIME_DEL = 2,TIME_OOP = 3,TIME_WAIT = 4,TIME_ERROR = 5,};
enum MACRO_TINDOUT {TINDOUT = 24,};
enum MACRO_TIOCPKT {TIOCPKT_DATA = 0x0,TIOCPKT_FLUSHREAD = 0x1,TIOCPKT_FLUSHWRITE = 0x2,TIOCPKT_STOP = 0x4,TIOCPKT_START = 0x8,TIOCPKT_NOSTOP = 0x10,TIOCPKT_DOSTOP = 0x20,TIOCPKT_IOCTL = 0x40,};
enum MACRO_TIOCSTI {TIOCSTI = 29719,};
enum MACRO_TMAGLEN {TMAGLEN = 6,};
enum MACRO_TMODLEN {TMODLEN = 8,};
enum MACRO_TMXOPEN {TMXOPEN = 1,TMXPLINK = 2,};
enum MACRO_TNOADDR {TNOADDR = 5,};
enum MACRO_TNODATA {TNODATA = 13,};
enum MACRO_TOFFSET {TOFFSET = 0x7FF,};
enum MACRO_TOPFUNC {TOPFUNC = 0x620,};
enum MACRO_TOWRITE {TOWRITE = 0x2,};
enum MACRO_TPLFUNC {TPLFUNC_MULTI = 0x0,TPLFUNC_MEMORY = 0x1,TPLFUNC_SERIAL = 0x2,TPLFUNC_PARALLEL = 0x3,TPLFUNC_FIXED = 0x4,TPLFUNC_VIDEO = 0x5,TPLFUNC_LAN = 0x6,TPLFUNC_AIMS = 0x7,TPLFUNC_SCSI = 0x8,TPLFUNC_SECURITY = 0x9,TPLFUNC_VENDOR_SPECIFIC = 0xFE,TPLFUNC_UNKNOWN = 0xFF,};
enum MACRO_TPLINIT {TPLINIT_POST = 0x1,TPLINIT_ROM = 0x2,};
enum MACRO_TR_DATA {TR_DATA_MIN = 8,TR_DATA_MAX = 12,};
enum MACRO_TR_NONE {TR_NONE = 0,TR_ASCII = 1,TR_EVENT = 2,TR_UNTRANS_EVENT = 3,};
enum MACRO_TSIZLEN {TSIZLEN = 12,};
enum MACRO_TS_LOAD {TS_LOAD = 0x1,TS_DONT_SWAP = 0x2,TS_SWAPENQ = 0x4,TS_ON_SWAPQ = 0x8,TS_CSTART = 0x100,TS_UNPAUSE = 0x200,TS_XSTART = 0x400,TS_PSTART = 0x800,TS_RESUME = 0x1000,TS_CREATE = 0x2000,TS_ALLSTART = 0x3F00,};
enum MACRO_TS_TAPE {TS_TAPE = 1,TS_INODE = 2,TS_ADDR = 4,TS_BITS = 3,TS_CLRI = 6,TS_END = 5,TS_EOM = 7,};
enum MACRO_TTIMLEN {TTIMLEN = 12,};
enum MACRO_TUIDLEN {TUIDLEN = 8,};
enum MACRO_TUWRITE {TUWRITE = 0x80,};
enum MACRO_TYPE_IP {TYPE_IP = 0x40,TYPE_UNCOMPRESSED_TCP = 0x70,TYPE_COMPRESSED_TCP = 0x80,TYPE_ERROR = 0x0,TYPE_BAD_TCP = 0xFFFFFFFF,};
enum MACRO_T_RESET {T_RESET = 0x0,T_TEXT_FAULT = 0x1,T_UNIMP_INSTR = 0x2,T_PRIV_INSTR = 0x3,T_FP_DISABLED = 0x4,T_CP_DISABLED = 0x24,T_WIN_OVERFLOW = 0x5,T_WIN_UNDERFLOW = 0x6,T_ALIGNMENT = 0x7,T_FP_EXCEPTION = 0x8,T_CP_EXCEPTION = 0x28,T_DATA_FAULT = 0x9,T_TAG_OVERFLOW = 0xA,T_INT_LEVEL = 0xF,T_INT_LEVEL_1 = 0x11,T_INT_LEVEL_2 = 0x12,T_INT_LEVEL_3 = 0x13,T_INT_LEVEL_4 = 0x14,T_INT_LEVEL_5 = 0x15,T_INT_LEVEL_6 = 0x16,T_INT_LEVEL_7 = 0x17,T_INT_LEVEL_8 = 0x18,T_INT_LEVEL_9 = 0x19,T_INT_LEVEL_10 = 0x1A,T_INT_LEVEL_11 = 0x1B,T_INT_LEVEL_12 = 0x1C,T_INT_LEVEL_13 = 0x1D,T_INT_LEVEL_14 = 0x1E,T_INT_LEVEL_15 = 0x1F,T_TEXT_ERROR = 0x21,T_UNIMP_FLUSH = 0x25,T_DATA_ERROR = 0x29,T_IDIV0 = 0x2A,T_DATA_STORE = 0x2B,T_SOFTWARE_TRAP = 0x80,T_ESOFTWARE_TRAP = 0xFF,T_OSYSCALL = 0x80,T_BREAKPOINT = 0x81,T_DIV0 = 0x82,T_FLUSH_WINDOWS = 0x83,T_CLEAN_WINDOWS = 0x84,T_RANGE_CHECK = 0x85,T_FIX_ALIGN = 0x86,T_INT_OVERFLOW = 0x87,T_SYSCALL = 0x88,T_HOTPATCH_TRAP = 0x8A,T_GETCC = 0xA0,T_SETCC = 0xA1,T_INTERRUPT = 0x100,T_SPURIOUS = 0x110,T_FAULT = 0x200,T_AST = 0x400,T_FLUSH_PCB = 0x410,T_SYS_RTT_PAGE = 0x420,T_ZERO = 0x0,};
enum MACRO_UID_MAX {UID_MAX = 2147483647,USI_MAX = 4294967295,SYSPID_MAX = 1,};
enum MACRO_ULOCKFS {ULOCKFS_BUSY = 0x1,ULOCKFS_NOIACC = 0x4,ULOCKFS_NOIDEL = 0x8,ULOCKFS_ULOCK = 0x1,ULOCKFS_WLOCK = 0x2,ULOCKFS_NLOCK = 0x4,ULOCKFS_DLOCK = 0x8,ULOCKFS_HLOCK = 0x10,ULOCKFS_ELOCK = 0x20,ULOCKFS_ROELOCK = 0x40,ULOCKFS_SLOCK = 0x80000000,ULOCKFS_READ_MASK = 0x80000030,ULOCKFS_WRITE_MASK = 0x80000072,ULOCKFS_GETATTR_MASK = 0x80000030,ULOCKFS_SETATTR_MASK = 0x80000072,ULOCKFS_ACCESS_MASK = 0x80000030,ULOCKFS_LOOKUP_MASK = 0x80000030,ULOCKFS_CREATE_MASK = 0x80000072,ULOCKFS_REMOVE_MASK = 0x8000007E,ULOCKFS_LINK_MASK = 0x80000072,ULOCKFS_RENAME_MASK = 0x80000076,ULOCKFS_MKDIR_MASK = 0x80000072,ULOCKFS_RMDIR_MASK = 0x8000007E,ULOCKFS_READDIR_MASK = 0x80000030,ULOCKFS_SYMLINK_MASK = 0x80000072,ULOCKFS_READLINK_MASK = 0x80000030,ULOCKFS_FSYNC_MASK = 0x80000030,ULOCKFS_FID_MASK = 0x80000030,ULOCKFS_RWLOCK_MASK = 0x80000030,ULOCKFS_RWUNLOCK_MASK = 0x80000030,ULOCKFS_SEEK_MASK = 0x80000030,ULOCKFS_FRLOCK_MASK = 0x80000030,ULOCKFS_SPACE_MASK = 0x80000072,ULOCKFS_QUOTA_MASK = 0x80000072,ULOCKFS_GETREAD_MASK = 0x80000030,ULOCKFS_GETWRITE_MASK = 0x80000072,ULOCKFS_MAP_MASK = 0x80000030,ULOCKFS_FIODUTIMES_MASK = 0x80000072,ULOCKFS_FIODIO_MASK = 0x80000072,ULOCKFS_FIODIOS_MASK = 0x80000030,ULOCKFS_PATHCONF_MASK = 0x80000030,ULOCKFS_VGET_MASK = 0x80000030,ULOCKFS_DELETE_MASK = 0x80000072,};
enum MACRO_UNKNOWN {UNKNOWN_WIDTH = 251,};
enum MACRO_USOCIOC {USOCIOC = 17920,};
enum MACRO_VERSION {_POSIX_VERSION = 199506,_POSIX2_VERSION = 199209,_POSIX2_C_VERSION = 199209,_XOPEN_XCU_VERSION = 4,};
enum MACRO_VMAGLEN {VMAGLEN = 8,};
enum MACRO_VVOLLEN {VVOLLEN = 6,VFILLEN = 464,};
enum MACRO_VWERASE {VWERASE = 14,};
enum MACRO_WEXITED {WEXITED = 0x1,WTRAPPED = 0x2,WSTOPPED = 0x4,WCONTINUED = 0x8,WNOWAIT = 0x80,_WNOCHLD = 0x100,};
enum MACRO_X86BOOT {X86BOOT = 190,};
enum MACRO_XR_TYPE {XR_TYPE_V8P = 1,};
enum MACRO_YESEXPR {YESEXPR = 56,};
enum MACRO_ZFIFOSZ {ZFIFOSZ = 3,};
enum MACRO__CONFIG {_CONFIG_NGROUPS = 2,_CONFIG_CHILD_MAX = 3,_CONFIG_OPEN_FILES = 4,_CONFIG_POSIX_VER = 5,_CONFIG_PAGESIZE = 6,_CONFIG_CLK_TCK = 7,_CONFIG_XOPEN_VER = 8,_CONFIG_PROF_TCK = 10,_CONFIG_NPROC_CONF = 11,_CONFIG_NPROC_ONLN = 12,_CONFIG_AIO_LISTIO_MAX = 13,_CONFIG_AIO_MAX = 14,_CONFIG_AIO_PRIO_DELTA_MAX = 15,_CONFIG_DELAYTIMER_MAX = 16,_CONFIG_MQ_OPEN_MAX = 17,_CONFIG_MQ_PRIO_MAX = 18,_CONFIG_RTSIG_MAX = 19,_CONFIG_SEM_NSEMS_MAX = 20,_CONFIG_SEM_VALUE_MAX = 21,_CONFIG_SIGQUEUE_MAX = 22,_CONFIG_SIGRT_MIN = 23,_CONFIG_SIGRT_MAX = 24,_CONFIG_TIMER_MAX = 25,_CONFIG_PHYS_PAGES = 26,_CONFIG_AVPHYS_PAGES = 27,_CONFIG_COHERENCY = 28,_CONFIG_SPLIT_CACHE = 29,_CONFIG_ICACHESZ = 30,_CONFIG_DCACHESZ = 31,_CONFIG_ICACHELINESZ = 32,_CONFIG_DCACHELINESZ = 33,_CONFIG_ICACHEBLKSZ = 34,_CONFIG_DCACHEBLKSZ = 35,_CONFIG_DCACHETBLKSZ = 36,_CONFIG_ICACHE_ASSOC = 37,_CONFIG_DCACHE_ASSOC = 38,_CONFIG_MAXPID = 42,_CONFIG_STACK_PROT = 43,};
enum MACRO__FIOCOD {_FIOCOD = 536897102,};
enum MACRO__FIOFFS {_FIOFFS = 536897090,};
enum MACRO__FIOLFS {_FIOLFS = 536897088,};
enum MACRO__INFTIM {_INFTIM = -1,};
enum MACRO__IOREAD {_IOREAD = 0x1,_IOWRT = 0x2,_IORW = 0x80,};
enum MACRO__LC_MAX {_LC_MAX_OBJECTS = 256,};
enum MACRO__POSIX2 {_POSIX2_C_BIND = 1,_POSIX2_CHAR_TERM = 1,_POSIX2_LOCALEDEF = 1,_POSIX2_C_DEV = 1,_POSIX2_SW_DEV = 1,_POSIX2_UPE = 1,};
enum MACRO__POSTED {_POSTED = 0x1,};
enum MACRO__SBFSIZ {_SBFSIZ = 8,};
enum MACRO___CLOCK {__CLOCK_REALTIME0 = 0,};
typedef struct nis_hash_data NIS_HASH_ITEM;
struct _FN_attribute;
struct _FN_ctx_svc_t;
typedef struct _5F8D13B29616A56F84BD15B89191A8F7 _LC_classnm_t;
typedef struct _2ED74837B10F4575EAFC3A6A8D0E8399 _LC_methods_t;
typedef struct _82C0C6D790EF9405DE6F913108BCAA59 _LC_transnm_t;
struct _pthread_attr {void *__pthread_attrp;};
typedef struct LA_RLS_reply aLA_RLS_reply;
typedef struct LOGI_PAYLOAD aLOGI_PAYLOAD;
enum ami_mechanism {AMI_RSA = 0x1,AMI_DSA = 0x2,AMI_MD2 = 0x3,AMI_MD5 = 0x4,AMI_SHA1 = 0x5,AMI_RSA_ENCR = 0x6,AMI_MD2WithRSAEncryption = 0x7,AMI_MD5WithRSAEncryption = 0x8,AMI_SHA1WithRSAEncryption = 0x9,AMI_SHA1WithDSASignature = 0xA,AMI_DES_CBC = 0xB,AMI_DES3_CBC = 0xC,AMI_RC2_CBC = 0xD,AMI_RC4 = 0xE,};
typedef struct au_attr_tok au_attr_tok_t;
typedef struct au_data_tok au_data_tok_t;
typedef struct au_exit_tok au_exit_tok_t;
typedef struct au_path_tok au_path_tok_t;
typedef struct au_text_tok au_text_tok_t;
typedef struct au_tid_addr au_tid_addr_t;
typedef struct au_user_ent au_user_ent_t;
struct au_user_str_s {char *au_name;char *au_always;char *au_never;};
typedef struct au_user_str_s au_user_str_t;
enum autofs_action {AUTOFS_MOUNT_RQ = 0x0,AUTOFS_LINK_RQ = 0x1,AUTOFS_NONE = 0x2,};
struct cdrom_volctrl {unsigned char channel0;unsigned char channel1;unsigned char channel2;unsigned char channel3;};
typedef struct cfs_dlog_tm cfs_dlog_tm_t;
typedef struct cl_tcp_info_s cl_tcp_info_t;
typedef struct cpu_sysinfo cpu_sysinfo_t;
typedef struct cpu_syswait cpu_syswait_t;
typedef struct cyc_backend cyc_backend_t;
typedef struct cyc_handler cyc_handler_t;
typedef struct cyc_softbuf cyc_softbuf_t;
typedef void *dacf_arghdl_t;
typedef struct dacf_module dacf_module_t;
struct dbri_code_rex {unsigned int XXX : 32;};
typedef struct ddi_dma_lim ddi_dma_lim_t;
typedef struct _06F14C8D328ECA5949F7DFEA2A047922 ddi_dma_obj_t;
typedef struct ddi_dma_req ddi_dma_req_t;
typedef void *ddi_dma_seg_t;
typedef void *ddi_dma_win_t;
typedef void *ddi_regspec_t;
struct defect_header {int head;unsigned char *buffer;};
typedef struct krb4_svc_data des_svcdata_t;
struct dkbad__bt_bad {short bt_cyl;short bt_trksec;};
typedef struct _AD4457FAA5FAAE8991C949BB8D588EAD dl_bind_ack_t;
typedef struct _D097637AB270BABD14B3012188BFE07C dl_bind_req_t;
typedef struct _140052591CB0062D1DDFF0A358260292 dl_info_ack_t;
typedef struct _54EC9098503BC20AC050B3CB62F30CBC dl_info_req_t;
typedef struct _318570FC7384B19A4DCAD3D835569F28 dl_priority_t;
typedef struct _551C78EEC93CDF0108C003355B4DC50B dl_test_con_t;
typedef struct _551C78EEC93CDF0108C003355B4DC50B dl_test_ind_t;
typedef struct _5F5854608C3B35F56B7E671DFC3D4679 dl_test_req_t;
typedef struct _5F5854608C3B35F56B7E671DFC3D4679 dl_test_res_t;
typedef struct ELS_payload els_payload_t;
typedef struct em_info_ack em_info_ack_t;
typedef struct em_info_req em_info_req_t;
typedef struct em_init_ack em_init_ack_t;
typedef struct em_init_req em_init_req_t;
struct exception_map {unsigned int exc_care;unsigned int exc_mask;int exc_key;unsigned short exc_entry;};
struct exportfs_args {char *dname;struct exportdata *uex;};
typedef struct hard_addr fc_hardaddr_t;
typedef struct port_type fc_porttype_t;
typedef struct fmodsw_impl fmodsw_impl_t;
enum fp_class_type {fp_zero = 0x0,fp_subnormal = 0x1,fp_normal = 0x2,fp_infinity = 0x3,fp_quiet = 0x4,fp_signaling = 0x5,};
typedef struct ftrace_data ftrace_data_t;
typedef void *gss_cred_id_t;
typedef struct _4F78B3A32EAF514EACC363DCB345C490 hme_ioc_cmd_t;
typedef struct _066FE788D2AC1D75EE490E561209D556 hme_ioc_hdr_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef struct _BDA3EB51A42C3AF06EADB485CA225508 ipd_con_dis_t;
typedef struct _9243195F0116F1DC43EDD9D2343B9004 ipd_dis_ind_t;
typedef struct _60F784A34F5D801B175C2936E7100D6B ipd_err_ind_t;
typedef struct _45D578D1CAA1736E8819435F592D8C84 ipd_make_if_t;
typedef struct _7C2C393CADA02B1A2D153D5E661EE10D ipd_set_tim_t;
typedef struct ipv6_member ipv6_member_t;
typedef struct isdn_format isdn_format_t;
struct krb4_svc_data {int window;};
typedef struct kstat_named kstat_named_t;
typedef struct kstat_timer kstat_timer_t;
typedef struct la_logi la_els_logi_t;
typedef struct la_els_logo la_els_logo_t;
typedef struct la_els_prli la_els_prli_t;
enum lm_disp_reply {LM_REPLY = 0xA,LM_DONT = 0xB,};
typedef struct mdb_bitmask mdb_bitmask_t;
typedef struct mdb_modinfo mdb_modinfo_t;
typedef struct nd_redirect nd_redirect_t;
struct nfs_args_extA {struct sec_data *secdata;};
struct nfs_args_extB {struct sec_data *secdata;struct nfs_args *next;};
typedef struct notsack_blk notsack_blk_t;
typedef struct nss_backend nss_backend_t;
typedef struct nss_db_root nss_db_root_t;
enum nss_dbp_flags {NSS_USE_DEFAULT_CONFIG = 0x1,};
struct old_pcfs_args {int secondswest;int dsttime;};
typedef struct pci_phys_spec pci_regspec_t;
typedef struct pln_address pln_address_t;
typedef struct proc_vertex proc_vertex_t;
typedef int processorid_t;
typedef struct ddi_prop_handle prop_handle_t;
struct ps_prochandle;
typedef unsigned int pthread_key_t;
typedef struct rd_plt_info rd_plt_info_t;
struct romvec_sunmon {char *v_initsp;void (*v_startmon)();int *v_diagberr;struct bootparam **v_bootparam;unsigned int *v_memorysize;unsigned char (*v_getchar)();void (*v_putchar)();int (*v_mayget)();int (*v_mayput)();unsigned char *v_echo;unsigned char *v_insource;unsigned char *v_outsink;int (*v_getkey)();void (*v_initgetkey)();unsigned int *v_translation;unsigned char *v_keybid;int *v_screen_x;int *v_screen_y;struct keybuf *v_keybuf;char *v_mon_id;void (*v_fwritechar)();int *v_fbaddr;char **v_font;void (*v_fwritestr)();void (*v_boot_me)();unsigned char *v_linebuf;unsigned char **v_lineptr;int *v_linesize;void (*v_getline)();unsigned char (*v_getone)();unsigned char (*v_peekchar)();int *v_fbthere;int (*v_getnum)();int (*v_printf)();void (*v_printhex)();unsigned char *v_leds;void (*v_set_leds)();void (*v_nmi)();void (*v_abortent)();int *v_nmiclock;int *v_fbtype;unsigned int v_romvec_version;struct globram *v_gp;struct zscc_device *v_keybzscc;int *v_keyrinit;unsigned char *v_keyrtick;unsigned int *v_memoryavail;int *v_resetaddr;int *v_resetmap;void (*v_exit_to_mon)();unsigned char **v_memorybitmap;void (*v_setcxsegmap)();void (**v_vector_cmd)();unsigned int *v_exp_trap_signal;unsigned int *v_trap_vector_table_base;int dummy1z;int dummy2z;int dummy3z;int dummy4z;};
struct rstat_timeval {int tv_sec;int tv_usec;};
typedef struct rwlock_impl rwlock_impl_t;
typedef struct _17DB385B90B304C8609CE6820D4849CB segplckstat_t;
struct si_sockparams {int sp_family;int sp_type;int sp_protocol;};
typedef struct _sleepq_head sleepq_head_t;
typedef struct socal_stats socal_stats_t;
struct symlink_cache {char *contents;int len;int size;};
typedef struct td_syncinfo td_syncinfo_t;
typedef struct td_ta_stats td_ta_stats_t;
typedef struct td_thragent td_thragent_t;
typedef struct _8730B17123942F667165FE26F5FCD7CE tifiocstate_t;
typedef struct timespec32 timestruc32_t;
typedef float tnf_float32_t;
typedef double tnf_float64_t;
struct tnfctl_handle;
typedef struct ufs_aclmask ufs_aclmask_t;
enum ufsd_log_op_t {UFSDLO_NONE = 0x0,UFSDLO_COMMIT = 0x1,UFSDLO_GET = 0x2,UFSDLO_PUT = 0x3,UFSDLO_RESET = 0x4,};
typedef unsigned char uint_least8_t;
typedef int utrap_entry_t;
struct vis_cursorpos {short x;short y;};
struct volcopy_label {char v_magic[8];char v_volume[6];char v_reels;char v_reel;int v_time;int v_length;int v_dens;int v_reelblks;int v_blksize;int v_nblocks;char v_fill[464];int v_offset;int v_type;};
typedef struct vt_abs_time vt_abs_time_t;
typedef struct vt_cpu_info vt_cpu_info_t;
typedef struct vt_num_cpus vt_num_cpus_t;
typedef struct vt_pagesize vt_pagesize_t;
typedef int BooleanValue;
typedef struct _A0565235DB0A025ED98270EC8F0003BF Elf32_Verdef;
typedef long long Elf64_Sxword;
typedef struct _75FD820D0CE6C215ACE04A8FAA270A6D Elf64_Verdef;
struct Exp_cpio_hdr {char E_magic[6];char E_ino[8];char E_mode[8];char E_uid[8];char E_gid[8];char E_nlink[8];char E_mtime[8];char E_filesize[8];char E_maj[8];char E_min[8];char E_rmaj[8];char E_rmin[8];char E_namesize[8];char E_chksum[8];char E_name[1024];};
typedef struct _FN_attrset FN_attrset_t;
typedef struct _FN_ctx_svc_t FN_ctx_svc_t;
typedef struct _FN_nameset FN_nameset_t;
struct LA_RLS_reply {int code;int link_failure;int loss_of_sync;int loss_of_signal;int primitive_error;int code_violations;int invalid_crc;};
typedef struct _LayoutObject *LayoutObject;
typedef struct _192236FE3311D06A1856619BA2C00C00 *LayoutValues;
typedef struct _B2F3592E62A4F6542AD886252093AD89 LclIconvAtom;
typedef struct _LclIconvInfo LclIconvInfo;
enum MACRO_ACTIVE {ACTIVE_LOCK = 0x1,SLEEPING_LOCK = 0x2,IO_LOCK = 0x4,REFERENCED_LOCK = 0x8,QUERY_LOCK = 0x10,WILLING_TO_SLEEP_LOCK = 0x20,RECOMPUTE_LOCK = 0x40,};
enum MACRO_AIOLIO {AIOLIO = 7,AIOSUSPEND = 8,};
enum MACRO_ANCHOR {ANCHOR_VOL_DESC_LOC = 256,ANCHOR_VOL_DESC_LEN = 512,};
enum MACRO_ARPHRD {ARPHRD_ETHER = 1,};
enum MACRO_ATEXIT {ATEXIT_MAX = 32,_XOPEN_IOV_MAX = 16,IOV_MAX = 16,FCHR_MAX = 1048576,PID_MAX = 999999,CHILD_MAX = 25,OPEN_MAX = 256,};
enum MACRO_ATRSIZ {ATRSIZ = 64,};
enum MACRO_AT_IPC {AT_IPC_MSG = 1,AT_IPC_SEM = 2,AT_IPC_SHM = 3,};
enum MACRO_AUE_at {AUE_at_create = 6144,AUE_at_delete = 6145,AUE_at_perm = 6146,AUE_cron_invoke = 6147,AUE_crontab_create = 6148,AUE_crontab_delete = 6149,AUE_crontab_perm = 6150,AUE_inetd_connect = 6151,AUE_login = 6152,AUE_logout = 6153,AUE_telnet = 6154,AUE_rlogin = 6155,AUE_mountd_mount = 6156,AUE_mountd_umount = 6157,AUE_rshd = 6158,AUE_su = 6159,AUE_halt_solaris = 6160,AUE_reboot_solaris = 6161,AUE_rexecd = 6162,AUE_passwd = 6163,AUE_rexd = 6164,AUE_ftpd = 6165,AUE_init_solaris = 6166,AUE_uadmin_solaris = 6167,AUE_shutdown_solaris = 6168,AUE_poweroff_solaris = 6169,AUE_crontab_mod = 6170,AUE_allocate_succ = 6200,AUE_allocate_fail = 6201,AUE_deallocate_succ = 6202,AUE_deallocate_fail = 6203,AUE_listdevice_succ = 6205,AUE_listdevice_fail = 6206,AUE_create_user = 6207,AUE_modify_user = 6208,AUE_delete_user = 6209,AUE_disable_user = 6210,AUE_enable_user = 6211,};
enum MACRO_AUTH_F {AUTH_F_RPCTIMESYNC = 0x1,AUTH_F_TRYNONE = 0x2,AUTH_NONE = 0x0,AUTH_NULL = 0x0,AUTH_SYS = 0x1,AUTH_UNIX = 0x1,AUTH_SHORT = 0x2,AUTH_DH = 0x3,AUTH_DES = 0x3,AUTH_KERB = 0x4,};
enum MACRO_AUTOFS {AUTOFS_MAXPATHLEN = 1024,AUTOFS_MAXCOMPONENTLEN = 255,AUTOFS_MAXOPTSLEN = 1024,AUTOFS_DAEMONCOOKIE = 100000,AUTOFS_PROG = 100099,AUTOFS_VERS = 3,AUTOFS_NULL = 0,AUTOFS_MOUNT = 1,AUTOFS_UNMOUNT = 2,AUTOFS_READDIR = 3,AUTOFS_LOOKUP = 4,};
enum MACRO_AUXESZ {AUXESZ = 18,};
enum MACRO_AU_PRS {AU_PRS_SUCCESS = 1,AU_PRS_FAILURE = 2,AU_PRS_BOTH = 3,AU_PRS_USECACHE = 0,AU_PRS_REREAD = 1,AU_CACHE_FREE = 0,AU_CACHE_NAME = 1,AU_CACHE_NUMBER = 2,AU_TO_NO_WRITE = 0,AU_TO_WRITE = 1,};
enum MACRO_AV_INT {AV_INT_SPURIOUS = -1,};
enum MACRO_B19200 {B19200 = 14,};
enum MACRO_B38400 {B38400 = 15,};
enum MACRO_B57600 {B57600 = 16,};
enum MACRO_B76800 {B76800 = 17,};
enum MACRO_BBLOCK {BBLOCK = 0,SBLOCK = 16,};
enum MACRO_BBSIZE {BBSIZE = 8192,};
enum MACRO_BOOTSZ {BOOTSZ = 446,};
enum MACRO_BPPIOC {BPPIOC_TESTIO = 536896006,};
enum MACRO_BUFSIZ {BUFSIZ = 1024,};
enum MACRO_BURST1 {BURST1 = 0x1,BURST2 = 0x2,BURST4 = 0x4,BURST8 = 0x8,BURST16 = 0x10,BURST32 = 0x20,BURST64 = 0x40,};
enum MACRO_BUSY_0 {BUSY = 0x20,WIOC = 0x40,WGETTY = 0x80,TTSTOP = 0x100,EXTPROC = 0x200,TACT = 0x400,CLESC = 0x800,RTO = 0x1000,TTIOW = 0x2000,TTXON = 0x4000,TTXOFF = 0x8000,};
enum MACRO_BUTTON {BUTTON_RELEASED = 0,BUTTON_PRESSED = 1,BUTTON_CLICKED = 2,BUTTON_DOUBLE_CLICKED = 3,BUTTON_TRIPLE_CLICKED = 4,};
enum MACRO_CBPROC {CBPROC_RECEIVE = 1,CBPROC_FINISH = 2,CBPROC_ERROR = 3,};
enum MACRO_CDIRTY {CDIRTY = 0x80,};
enum MACRO_CDSUSP {CDSUSP = 25,};
enum MACRO_CERASE {CERASE = 0x7F,};
enum MACRO_CFLAGS {CFLAGS = 177,};
enum MACRO_CFLUSH {CFLUSH = 15,};
enum MACRO_CHAR_8 {CHAR_8 = 0x3,CHAR_7 = 0x2,CHAR_6 = 0x1,CHAR_5 = 0x0,};
enum MACRO_CIBAUD {CIBAUD = 0xF0000,PAREXT = 0x100000,CBAUDEXT = 0x200000,CIBAUDEXT = 0x400000,};
enum MACRO_CISTPL {CISTPL_NULL = 0x0,CISTPL_DEVICE = 0x1,CISTPL_LONGLINK_CB = 0x2,CISTPL_CONFIG_CB = 0x4,CISTPL_CFTABLE_ENTRY_CB = 0x5,CISTPL_LONGLINK_MFC = 0x6,CISTPL_BAR = 0x7,CISTPL_CHECKSUM = 0x10,CISTPL_LONGLINK_A = 0x11,CISTPL_LONGLINK_C = 0x12,CISTPL_LINKTARGET = 0x13,CISTPL_NO_LINK = 0x14,CISTPL_VERS_1 = 0x15,CISTPL_ALTSTR = 0x16,CISTPL_DEVICE_A = 0x17,CISTPL_JEDEC_C = 0x18,CISTPL_JEDEC_A = 0x19,CISTPL_CONFIG = 0x1A,CISTPL_CFTABLE_ENTRY = 0x1B,CISTPL_DEVICE_OC = 0x1C,CISTPL_DEVICE_OA = 0x1D,CISTPL_DEVICEGEO = 0x1E,CISTPL_DEVICEGEO_A = 0x1F,CISTPL_MANFID = 0x20,CISTPL_FUNCID = 0x21,CISTPL_FUNCE = 0x22,CISTPL_SWIL = 0x23,CISTPL_VERS_2 = 0x40,CISTPL_FORMAT = 0x41,CISTPL_GEOMETRY = 0x42,CISTPL_BYTEORDER = 0x43,CISTPL_DATE = 0x44,CISTPL_BATTERY = 0x45,CISTPL_FORMAT_A = 0x47,CISTPL_ORG = 0x46,CISTPL_VEND_SPEC_80 = 0x80,CISTPL_VEND_SPEC_81 = 0x81,CISTPL_VEND_SPEC_82 = 0x82,CISTPL_VEND_SPEC_83 = 0x83,CISTPL_VEND_SPEC_84 = 0x84,CISTPL_VEND_SPEC_85 = 0x85,CISTPL_VEND_SPEC_86 = 0x86,CISTPL_VEND_SPEC_87 = 0x87,CISTPL_VEND_SPEC_88 = 0x88,CISTPL_VEND_SPEC_89 = 0x89,CISTPL_VEND_SPEC_8a = 0x8A,CISTPL_VEND_SPEC_8b = 0x8B,CISTPL_VEND_SPEC_8c = 0x8C,CISTPL_VEND_SPEC_8d = 0x8D,CISTPL_VEND_SPEC_8e = 0x8E,CISTPL_VEND_SPEC_8f = 0x8F,CISTPL_SPCL = 0x90,CISTPL_END = 0xFF,CISTPL_VENDSPEC_START = 0x80,CISTPL_VENDSPEC_END = 0x8F,};
enum MACRO_CLIENT {CLIENT_OWNS_IMAGE = 0x200,};
enum MACRO_CLNEXT {CLNEXT = 22,};
enum MACRO_CLOCKS {CLOCKS_PER_SEC = 1000000,};
enum MACRO_CLSSIZ {CLSSIZ = 64,};
enum MACRO_CRPRNT {CRPRNT = 18,};
enum MACRO_CS4231 {CS4231_IDNUM = 0x6175,CS4231_MINPACKET = 0x0,CS4231_MAXPACKET = 0x4000,CS4231_SUP_INST = 0x1,CS4231_SAMPR5510 = 0x1586,CS4231_SAMPR6620 = 0x19DC,CS4231_SAMPR8000 = 0x1F40,CS4231_SAMPR9600 = 0x2580,CS4231_SAMPR11025 = 0x2B11,CS4231_SAMPR16000 = 0x3E80,CS4231_SAMPR18900 = 0x49D4,CS4231_SAMPR22050 = 0x5622,CS4231_SAMPR27420 = 0x6B1C,CS4231_SAMPR32000 = 0x7D00,CS4231_SAMPR33075 = 0x8133,CS4231_SAMPR37800 = 0x93A8,CS4231_SAMPR44100 = 0xAC44,CS4231_SAMPR48000 = 0xBB80,CS4231_DEFAULT_SR = 0x1F40,CS4231_DEFAULT_CH = 0x1,CS4231_DEFAULT_PREC = 0x8,CS4231_DEFAULT_ENC = 0x1,CS4231_DEFAULT_PGAIN = 0x7F,CS4231_DEFAULT_RGAIN = 0x7F,CS4231_DEFAULT_MONITOR_GAIN = 0x0,CS4231_DEFAULT_BAL = 0x20,CS4231_BSIZE = 0x2000,};
enum MACRO_CSDATA {CSDATA_SET = 49921,CSDATA_GET = 49922,};
enum MACRO_CSWTCH {CSWTCH = 0x1A,};
enum MACRO_CS_DCD {CS_DCD_DOWN = 0x8,CS_DCD_UP = 0xC,CS_DCD_DROP = 0x10,CS_CTS_DOWN = 0x20,CS_CTS_UP = 0x30,CS_CTS_DROP = 0x40,CS_CTS_TO = 0x80,CS_DCD = 0x8,CS_CTS = 0x20,};
enum MACRO_CUSAGE {CUSAGE_ACTIVE = 1,CUSAGE_NEED_ADJUST = 2,};
enum MACRO_CYCLIC {CYCLIC_NONE = 0,};
enum MACRO_C_BACK {C_BACK_CHECK = 0x2,C_MAX_ALLOCINFO_SLOTS = 0x20,};
enum MACRO_C_EFCN {C_EFCN = -1,C_NULL = 0,C_AUTO = 1,C_EXT = 2,C_STAT = 3,C_REG = 4,C_EXTDEF = 5,C_LABEL = 6,C_ULABEL = 7,C_MOS = 8,C_ARG = 9,C_STRTAG = 10,C_MOU = 11,C_UNTAG = 12,C_TPDEF = 13,C_USTATIC = 14,C_ENTAG = 15,C_MOE = 16,C_REGPARM = 17,C_FIELD = 18,C_BLOCK = 100,C_FCN = 101,C_EOS = 102,C_FILE = 103,C_LINE = 104,C_ALIAS = 105,C_HIDDEN = 106,C_SHADOW = 107,};
enum MACRO_DADKIO {DADKIO_RWCMD_READ = 1,DADKIO_RWCMD_WRITE = 2,DADKIO_FLAG_SILENT = 1,DADKIO_FLAG_RESERVED = 2,DADKIO_ERROR_INFO_LEN = 128,DADKIO_STAT_NO_ERROR = 0,DADKIO_STAT_NOT_READY = 1,DADKIO_STAT_MEDIUM_ERROR = 2,DADKIO_STAT_HARDWARE_ERROR = 3,DADKIO_STAT_ILLEGAL_REQUEST = 4,DADKIO_STAT_ILLEGAL_ADDRESS = 5,DADKIO_STAT_WRITE_PROTECTED = 6,DADKIO_STAT_TIMED_OUT = 7,DADKIO_STAT_PARITY = 8,DADKIO_STAT_BUS_ERROR = 9,DADKIO_STAT_SOFT_ERROR = 10,DADKIO_STAT_NO_RESOURCES = 11,DADKIO_STAT_NOT_FORMATTED = 12,DADKIO_STAT_RESERVED = 13,DADKIO_STAT_NOT_SUPPORTED = 14,};
enum MACRO_DDI_ME {DDI_ME_GENERIC = -1,DDI_ME_UNIMPLEMENTED = -2,DDI_ME_NORESOURCES = -3,DDI_ME_UNSUPPORTED = -4,DDI_ME_REGSPEC_RANGE = -5,DDI_ME_RNUMBER_RANGE = -6,DDI_ME_INVAL = -7,};
enum MACRO_DEFGID {DEFGID = 99,};
enum MACRO_DEFRID {DEFRID = 99,};
enum MACRO_DESERR {DESERR_NONE = 0,DESERR_NOHWDEVICE = 1,DESERR_HWERROR = 2,DESERR_BADPARAM = 3,};
enum MACRO_DEVCTL {DEVCTL_IOC = 0xDC0000,DEVCTL_BUS_QUIESCE = 0xDC0001,DEVCTL_BUS_UNQUIESCE = 0xDC0002,DEVCTL_BUS_RESETALL = 0xDC0003,DEVCTL_BUS_RESET = 0xDC0004,DEVCTL_BUS_GETSTATE = 0xDC0005,DEVCTL_DEVICE_ONLINE = 0xDC0006,DEVCTL_DEVICE_OFFLINE = 0xDC0007,DEVCTL_DEVICE_GETSTATE = 0xDC0009,DEVCTL_DEVICE_RESET = 0xDC000A,DEVCTL_BUS_CONFIGURE = 0xDC000B,DEVCTL_BUS_UNCONFIGURE = 0xDC000C,DEVCTL_DEVICE_REMOVE = 0xDC000D,DEVCTL_AP_CONNECT = 0xDC000E,DEVCTL_AP_DISCONNECT = 0xDC000F,DEVCTL_AP_INSERT = 0xDC0010,DEVCTL_AP_REMOVE = 0xDC0011,DEVCTL_AP_CONFIGURE = 0xDC0012,DEVCTL_AP_UNCONFIGURE = 0xDC0013,DEVCTL_AP_GETSTATE = 0xDC0014,DEVCTL_AP_CONTROL = 0xDC0015,};
enum MACRO_DEVICE {DEVICE_ONLINE = 0x1,DEVICE_BUSY = 0x2,DEVICE_OFFLINE = 0x4,DEVICE_DOWN = 0x8,};
enum MACRO_DEVMAP {DEVMAP_OPS_REV = 1,DEVMAP_DEFAULTS = 0,DEVMAP_MAPPING_INVALID = 1,DEVMAP_ALLOW_REMAP = 2,DEVMAP_USE_PAGESIZE = 4,DEVMAP_UNLOAD_PENDING = 8,DEVMAP_SETUP_DONE = 256,DEVMAP_LOCK_INITED = 512,DEVMAP_FAULTING = 1024,DEVMAP_LOCKED = 2048,DEVMAP_FLAG_LARGE = 4096,DEVMAP_FLAG_KPMEM = 8192,DEVMAP_FLAG_KMEM = 16384,DEVMAP_FLAG_DEVMEM = 32768,};
enum MACRO_DIMNUM {DIMNUM = 4,};
enum MACRO_DIOCTL {DIOCTL_GETGEOM = 1,DIOCTL_GETPHYGEOM = 2,DIOCTL_RWCMD = 5,};
enum MACRO_DIRBUF {DIRBUF = 1048,};
enum MACRO_DKIOCG {DKIOCG_PHYGEOM = 1056,DKIOCG_VIRTGEOM = 1057,};
enum MACRO_DL_IOC {DL_IOC_HDR_INFO = 17418,DL_CURRENT_VERSION = 2,DL_VERSION_2 = 2,DL_INFO_REQ = 0,DL_INFO_ACK = 3,DL_ATTACH_REQ = 11,DL_DETACH_REQ = 12,DL_BIND_REQ = 1,DL_BIND_ACK = 4,DL_UNBIND_REQ = 2,DL_OK_ACK = 6,DL_ERROR_ACK = 5,DL_SUBS_BIND_REQ = 27,DL_SUBS_BIND_ACK = 28,DL_SUBS_UNBIND_REQ = 21,DL_ENABMULTI_REQ = 29,DL_DISABMULTI_REQ = 30,DL_PROMISCON_REQ = 31,DL_PROMISCOFF_REQ = 32,DL_UNITDATA_REQ = 7,DL_UNITDATA_IND = 8,DL_UDERROR_IND = 9,DL_UDQOS_REQ = 10,DL_CONNECT_REQ = 13,DL_CONNECT_IND = 14,DL_CONNECT_RES = 15,DL_CONNECT_CON = 16,DL_TOKEN_REQ = 17,DL_TOKEN_ACK = 18,DL_DISCONNECT_REQ = 19,DL_DISCONNECT_IND = 20,DL_RESET_REQ = 23,DL_RESET_IND = 24,DL_RESET_RES = 25,DL_RESET_CON = 26,DL_DATA_ACK_REQ = 33,DL_DATA_ACK_IND = 34,DL_DATA_ACK_STATUS_IND = 35,DL_REPLY_REQ = 36,DL_REPLY_IND = 37,DL_REPLY_STATUS_IND = 38,DL_REPLY_UPDATE_REQ = 39,DL_REPLY_UPDATE_STATUS_IND = 40,DL_XID_REQ = 41,DL_XID_IND = 42,DL_XID_RES = 43,DL_XID_CON = 44,DL_TEST_REQ = 45,DL_TEST_IND = 46,DL_TEST_RES = 47,DL_TEST_CON = 48,DL_PHYS_ADDR_REQ = 49,DL_PHYS_ADDR_ACK = 50,DL_SET_PHYS_ADDR_REQ = 51,DL_GET_STATISTICS_REQ = 52,DL_GET_STATISTICS_ACK = 53,DL_UNATTACHED = 4,DL_ATTACH_PENDING = 5,DL_DETACH_PENDING = 6,DL_UNBOUND = 0,DL_BIND_PENDING = 1,DL_UNBIND_PENDING = 2,DL_IDLE = 3,DL_UDQOS_PENDING = 7,DL_OUTCON_PENDING = 8,DL_INCON_PENDING = 9,DL_CONN_RES_PENDING = 10,DL_DATAXFER = 11,DL_USER_RESET_PENDING = 12,DL_PROV_RESET_PENDING = 13,DL_RESET_RES_PENDING = 14,DL_DISCON8_PENDING = 15,DL_DISCON9_PENDING = 16,DL_DISCON11_PENDING = 17,DL_DISCON12_PENDING = 18,DL_DISCON13_PENDING = 19,DL_SUBS_BIND_PND = 20,DL_SUBS_UNBIND_PND = 21,DL_ACCESS = 2,DL_BADADDR = 1,DL_BADCORR = 5,DL_BADDATA = 6,DL_BADPPA = 8,DL_BADPRIM = 9,DL_BADQOSPARAM = 10,DL_BADQOSTYPE = 11,DL_BADSAP = 0,DL_BADTOKEN = 12,DL_BOUND = 13,DL_INITFAILED = 14,DL_NOADDR = 15,DL_NOTINIT = 16,DL_OUTSTATE = 3,DL_SYSERR = 4,DL_UNSUPPORTED = 7,DL_UNDELIVERABLE = 17,DL_NOTSUPPORTED = 18,DL_TOOMANY = 19,DL_NOTENAB = 20,DL_BUSY = 21,DL_NOAUTO = 22,DL_NOXIDAUTO = 23,DL_NOTESTAUTO = 24,DL_XIDAUTO = 25,DL_TESTAUTO = 26,DL_PENDING = 27,DL_CSMACD = 0,DL_TPB = 1,DL_TPR = 2,DL_METRO = 3,DL_ETHER = 4,DL_HDLC = 5,DL_CHAR = 6,DL_CTCA = 7,DL_FDDI = 8,DL_FC = 16,DL_ATM = 17,DL_IPATM = 18,DL_X25 = 19,DL_ISDN = 20,DL_HIPPI = 21,DL_100VG = 22,DL_100VGTPR = 23,DL_ETH_CSMA = 24,DL_100BT = 25,DL_FRAME = 10,DL_MPFRAME = 11,DL_ASYNC = 12,DL_IPX25 = 13,DL_LOOP = 14,DL_OTHER = 9,DL_CODLS = 1,DL_CLDLS = 2,DL_ACLDLS = 4,DL_STYLE1 = 1280,DL_STYLE2 = 1281,DL_PROVIDER = 1792,DL_USER = 1793,DL_CONREJ_DEST_UNKNOWN = 2048,DL_CONREJ_DEST_UNREACH_PERMANENT = 2049,DL_CONREJ_DEST_UNREACH_TRANSIENT = 2050,DL_CONREJ_QOS_UNAVAIL_PERMANENT = 2051,DL_CONREJ_QOS_UNAVAIL_TRANSIENT = 2052,DL_CONREJ_PERMANENT_COND = 2053,DL_CONREJ_TRANSIENT_COND = 2054,DL_DISC_ABNORMAL_CONDITION = 2055,DL_DISC_NORMAL_CONDITION = 2056,DL_DISC_PERMANENT_CONDITION = 2057,DL_DISC_TRANSIENT_CONDITION = 2058,DL_DISC_UNSPECIFIED = 2059,DL_RESET_FLOW_CONTROL = 2304,DL_RESET_LINK_ERROR = 2305,DL_RESET_RESYNCH = 2306,DL_CMD_MASK = 15,DL_CMD_OK = 0,DL_CMD_RS = 1,DL_CMD_UE = 5,DL_CMD_PE = 6,DL_CMD_IP = 7,DL_CMD_UN = 9,DL_CMD_IT = 15,DL_RSP_MASK = 240,DL_RSP_OK = 0,DL_RSP_RS = 16,DL_RSP_NE = 48,DL_RSP_NR = 64,DL_RSP_UE = 80,DL_RSP_IP = 112,DL_RSP_UN = 144,DL_RSP_IT = 240,DL_RQST_RSP = 1,DL_RQST_NORSP = 2,DL_FACT_PHYS_ADDR = 1,DL_CURR_PHYS_ADDR = 2,DL_POLL_FINAL = 1,DL_AUTO_XID = 1,DL_AUTO_TEST = 2,DL_PEER_BIND = 1,DL_HIERARCHICAL_BIND = 2,DL_PROMISC_PHYS = 1,DL_PROMISC_SAP = 2,DL_PROMISC_MULTI = 3,DL_NONE = 2817,DL_MONITOR = 2818,DL_MAXIMUM = 2819,DL_UNKNOWN = -1,DL_QOS_DONT_CARE = -2,DL_QOS_CO_RANGE1 = 257,DL_QOS_CO_SEL1 = 258,DL_QOS_CL_RANGE1 = 259,DL_QOS_CL_SEL1 = 260,};
enum MACRO_DMAESC {DMAESC_BSIZE = 0x800,DMAESC_TCZERO = 0x1000,DMAESC_EN_TCI = 0x2000,DMAESC_INTPEND = 0x4000,DMAESC_PEN = 0x8000,DMAESC_PERR = 0x10000,DMAESC_DRAIN = 0x20000,DMAESC_EN_ADD = 0x40000,};
enum MACRO_DOMAIN {DOMAIN = 1,SING = 2,};
enum MACRO_DOUBLE {DOUBLE_2CLUTS = 0x0,DOUBLE_3CLUTS = 0x1,};
enum MACRO_DRSTAT {DRSTAT_ZERO = 0x8000,DRSTAT_SCINT = 0x4000,DRSTAT_CDCHG = 0x2000,DRSTAT_BVD2CHG = 0x1000,DRSTAT_BVD1CHG = 0x800,DRSTAT_BVDCHG = 0x800,DRSTAT_RDYCHG = 0x400,DRSTAT_WPCHG = 0x200,DRSTAT_PCTO = 0x100,DRSTAT_LIVE = 0xFF,DRSTAT_CD2ST = 0x80,DRSTAT_CD1ST = 0x40,DRSTAT_CD_MASK = 0xC0,DRSTAT_PRESENT_OK = 0xC0,DRSTAT_BVD2ST = 0x20,DRSTAT_BVD1ST = 0x10,DRSTAT_BVDST = 0x30,DRSTAT_BATT_LOW = 0x20,DRSTAT_BATT_OK = 0x30,DRSTAT_RDYST = 0x8,DRSTAT_WPST = 0x4,DRSTAT_WAITST = 0x2,DRSTAT_PWRON = 0x1,DRSTAT_IOINT = 0x8000,DRSTAT_SPKR = 0x20,DRSTAT_STSCHG = 0x10,DRSTAT_IOREQ = 0x8,DRSTAT_IOIS16 = 0x4,DRSTAT_PCTYS_M = 0x30,DRSTAT_PCTYS_S = 0x4,DRSTAT_REV_M = 0xF,DRSTAT_REV_S = 0x0,};
enum MACRO_DRVSEL {DRVSEL = 0x1,DSKCHG = 0x80,};
enum MACRO_DS8SPT {DS8SPT = 0xFF,};
enum MACRO_DS9SPT {DS9SPT = 0xFD,};
enum MACRO_DT_NON {DT_NON = 0,DT_PTR = 1,DT_FCN = 2,DT_ARY = 3,};
enum MACRO_D_TAPE {D_TAPE = 0x8,D_MTSAFE = 0x20,};
enum MACRO_EBADID {EBADID = 5,};
enum MACRO_EBSIZE {EBSIZE = 16,TTXOLO = 132,};
enum MACRO_EF_M32 {EF_M32_MAU = 1,};
enum MACRO_EMINOR {EMINOR_UNKNOWN = 4294967295,};
enum MACRO_ENDIAN {LITTLE_ENDIAN = 1234,BIG_ENDIAN = 4321,PDP_ENDIAN = 3412,};
enum MACRO_ESP100 {ESP100 = 0,};
enum MACRO_EUNDEF {EUNDEF = 0,ENOTFOUND = 1,EACCESS = 2,};
enum MACRO_EXACCT {EXACCT_VERSION = 1,};
enum MACRO_EXPAND {EXPAND_NAME = 64,};
enum MACRO_EXPIRE {EXPIRE_TIME = 180,GARBAGE_TIME = 240,};
enum MACRO_EXTDOS {EXTDOS = 5,};
enum MACRO_FABRIC {FABRIC_BUSY = 0x1,NPORT_BUSY = 0x3,PHYSICAL_BUSY = 0x1,RESOURSE_BUSY = 0x3,};
enum MACRO_FAS100 {FAS100 = 3,};
enum MACRO_FAS366 {FAS366 = 0,};
enum MACRO_FBTYPE {FBTYPE_NOTYPE = -1,FBTYPE_SUN1BW = 0,FBTYPE_SUN1COLOR = 1,FBTYPE_SUN2BW = 2,FBTYPE_SUN2COLOR = 3,FBTYPE_SUN2GP = 4,FBTYPE_SUN5COLOR = 5,FBTYPE_SUN3COLOR = 6,FBTYPE_MEMCOLOR = 7,FBTYPE_SUN4COLOR = 8,FBTYPE_NOTSUN1 = 9,FBTYPE_NOTSUN2 = 10,FBTYPE_NOTSUN3 = 11,FBTYPE_SUNFAST_COLOR = 12,FBTYPE_SUNROP_COLOR = 13,FBTYPE_SUNFB_VIDEO = 14,FBTYPE_SUNGIFB = 15,FBTYPE_SUNGPLAS = 16,FBTYPE_SUNGP3 = 17,FBTYPE_SUNGT = 18,FBTYPE_SUNLEO = 19,FBTYPE_MDICOLOR = 20,FBTYPE_LASTPLUSONE = 21,};
enum MACRO_FB_CUR {FB_CUR_SETCUR = 0x1,FB_CUR_SETPOS = 0x2,FB_CUR_SETHOT = 0x4,FB_CUR_SETCMAP = 0x8,FB_CUR_SETSHAPE = 0x10,FB_CUR_SETALL = 0x1F,};
enum MACRO_FB_WID {FB_WID_SHARED_8 = 0,FB_WID_SHARED_24 = 1,FB_WID_DBL_8 = 2,FB_WID_DBL_24 = 3,};
enum MACRO_FB_WIN {FB_WIN_STEREO = 0x2,};
enum MACRO_FCFLAG {FCFLAG_NOINTR = 1,FCFLAG_COMPLETE = 2,};
enum MACRO_FCREAT {FCREAT = 0x100,FTRUNC = 0x200,FEXCL = 0x400,FNOCTTY = 0x800,FASYNC = 0x1000,FNODSYNC = 0x10000,};
enum MACRO_FC_MAX {FC_MAX_ELS = 56,};
enum MACRO_FC_WWN {FC_WWN_SIZE = 8,};
enum MACRO_FILENO {STDIN_FILENO = 0,STDOUT_FILENO = 1,STDERR_FILENO = 2,};
enum MACRO_FIOLOG {FIOLOG_ENONE = 0,FIOLOG_ETRANS = 1,FIOLOG_EROFS = 2,FIOLOG_EULOCK = 3,FIOLOG_EWLOCK = 4,FIOLOG_ECLEAN = 5,FIOLOG_ENOULOCK = 6,};
enum MACRO_FLTBPT {FLTBPT = 3,FLTTRACE = 4,};
enum MACRO_FLTFPE {FLTFPE = 9,};
enum MACRO_FLTILL {FLTILL = 1,FLTPRIV = 2,};
enum MACRO_FLUSHR {FLUSHR = 0x1,FLUSHW = 0x2,};
enum MACRO_FMTTRK {FMTTRK = 0xD,};
enum MACRO_FOLLOW {FOLLOW_LINKS = 1,FOLLOW_PATH = 2,};
enum MACRO_FORMAT {FORMAT = 0x2000,};
enum MACRO_FSHIFT {FSHIFT = 8,FSCALE = 256,};
enum MACRO_FSINFO {FSINFO_UNKNOWN = -1,};
enum MACRO_FSOKAY {FSOKAY = 0x7C269D38,};
enum MACRO_FTLACT {FTLACT = 0x3F,};
enum MACRO_FTLCLN {FTLCLN = 0x4000,};
enum MACRO_FTLJMP {FTLJMP = 0x2,};
enum MACRO_FTLMSG {FTLMSG = 0x8000,};
enum MACRO_FTLRET {FTLRET = 0x0,};
enum MACRO_FTRACE {FTRACE_READY = 0x1,FTRACE_ENABLED = 0x2,FTRACE_NENT = 0x400,};
enum MACRO_F_FILE {F_FILE_ONLY = 0x1,F_CONTAINED = 0x2,F_CDIR = 0x1,F_RDIR = 0x2,F_TEXT = 0x4,F_MAP = 0x8,F_OPEN = 0x10,F_TRACE = 0x20,F_TTY = 0x40,};
enum MACRO_GETACL {GETACL = 1,SETACL = 2,};
enum MACRO_GETALL {GETALL = 6,};
enum MACRO_GETVAL {GETVAL = 5,};
enum MACRO_GROUPS {IMPMEM_GROUPS = 1,RECURS_GROUPS = 2,NEGMEM_GROUPS = 4,};
enum MACRO_HMERMD {HMERMD_CKSUM = 0xFFFF,HMERMD_BUFSIZE = 0x3FFF0000,HMERMD_OVFLOW = 0x40000000,HMERMD_OWN = 0x80000000,HMERMD_BUFSIZE_SHIFT = 0x10,};
enum MACRO_HMETMD {HMETMD_BUFSIZE = 0x3FFF,HMETMD_CSSTART = 0xFC000,HMETMD_CSSTUFF = 0xFF00000,HMETMD_CSENABL = 0x10000000,HMETMD_EOP = 0x20000000,HMETMD_SOP = 0x40000000,HMETMD_OWN = 0x80000000,HMETMD_CSSTART_SHIFT = 0xE,HMETMD_CSSTUFF_SHIFT = 0x14,};
enum MACRO_HOPCNT {HOPCNT_INFINITY = 16,};
enum MACRO_HS_DIR {HS_DIR_NAMELEN = 31,HS_FILE_NAMELEN = 31,};
enum MACRO_IAKPRI {IAKPRI = 0x1,IABACKQ = 0x2,IASLEPT = 0x4,};
enum MACRO_IBSIZE {IBSIZE = 16,OBSIZE = 64,};
enum MACRO_IECONF {IECONF_SAVBF = 0x8000,IECONF_SRDY = 0x4000,IECONF_EXTLP = 0x80,IECONF_INTLP = 0x40,IECONF_PREAM = 0x30,IECONF_ACLOC = 0x8,IECONF_ALEN = 0x7,IECONF_BOF = 0x80,IECONF_ACR = 0x70,IECONF_LINPRIO = 0x70,IECONF_RETRY = 0xF0,IECONF_SLTTMH = 0x7,IECONF_PAD = 0x8000,IECONF_HDLC = 0x4000,IECONF_CRC16 = 0x2000,IECONF_NOCRC = 0x1000,IECONF_NOCARR = 0x800,IECONF_MANCH = 0x400,IECONF_NOBRD = 0x200,IECONF_PROMISC = 0x100,IECONF_CDSRC = 0x80,IECONF_CDFILT = 0x70,IECONF_CRSRC = 0x8,IECONF_CRFILT = 0x7,};
enum MACRO_IE_NOP {IE_NOP = 0x0,IE_IADDR = 0x100,IE_CONFIG = 0x200,IE_MADDR = 0x300,IE_TRANSMIT = 0x400,IE_TDR = 0x500,IE_DUMP = 0x600,IE_DIAGNOSE = 0x700,};
enum MACRO_IFLAGS {IFLAGS = 416,};
enum MACRO_IFSHAD {IFSHAD = 0xB000,};
enum MACRO_IFSOCK {IFSOCK = 0xC000,};
enum MACRO_IGNBRK {IGNBRK = 0x1,BRKINT = 0x2,IGNPAR = 0x4,PARMRK = 0x8,INPCK = 0x10,ISTRIP = 0x20,INLCR = 0x40,IGNCR = 0x80,ICRNL = 0x100,IUCLC = 0x200,IXON = 0x400,IXANY = 0x800,IXOFF = 0x1000,IMAXBEL = 0x2000,DOSMODE = 0x8000,};
enum MACRO_ILL_BD {ILL_BD = -4,};
enum MACRO_INADDR {INADDR_ANY = 0x0,INADDR_LOOPBACK = 0x7F000001,INADDR_BROADCAST = 0xFFFFFFFF,INADDR_UNSPEC_GROUP = 0xE0000000,INADDR_ALLHOSTS_GROUP = 0xE0000001,INADDR_ALLRTRS_GROUP = 0xE0000002,INADDR_MAX_LOCAL_GROUP = 0xE00000FF,};
enum MACRO_INFPSZ {INFPSZ = -1,};
enum MACRO_INFTIM {INFTIM = -1,};
enum MACRO_INKEYB {INKEYB = 0,INUARTA = 1,INUARTB = 2,};
enum MACRO_INTRPT {INTRPT = -1,};
enum MACRO_INVERT {TXC_IS_INVERT = 5,RXC_IS_INVERT = 5,TRXD_NO_INVERT = 0,RXD_IS_INVERT = 1,TXD_IS_INVERT = 2,TRXD_IS_INVERT = 3,};
enum MACRO_IP6OPT {IP6OPT_TYPE_SKIP = 0x0,IP6OPT_TYPE_DISCARD = 0x40,IP6OPT_TYPE_FORCEICMP = 0x80,IP6OPT_TYPE_ICMP = 0xC0,IP6OPT_MUTABLE = 0x20,IP6OPT_PAD1 = 0x0,IP6OPT_PADN = 0x1,IP6OPT_JUMBO = 0xC2,IP6OPT_NSAP_ADDR = 0xC3,IP6OPT_TUNNEL_LIMIT = 0x4,IP6OPT_ROUTER_ALERT = 0x5,IP6OPT_BINDING_UPDATE = 0xC6,IP6OPT_BINDING_ACK = 0x7,IP6OPT_BINDING_REQ = 0x8,IP6OPT_HOME_ADDRESS = 0xC9,IP6OPT_EID = 0x8A,IP6OPT_JUMBO_LEN = 0x6,};
enum MACRO_IPPORT {IPPORT_ECHO = 7,IPPORT_DISCARD = 9,IPPORT_SYSTAT = 11,IPPORT_DAYTIME = 13,IPPORT_NETSTAT = 15,IPPORT_FTP = 21,IPPORT_TELNET = 23,IPPORT_SMTP = 25,IPPORT_TIMESERVER = 37,IPPORT_NAMESERVER = 42,IPPORT_WHOIS = 43,IPPORT_MTP = 57,IPPORT_BOOTPS = 67,IPPORT_BOOTPC = 68,IPPORT_TFTP = 69,IPPORT_RJE = 77,IPPORT_FINGER = 79,IPPORT_TTYLINK = 87,IPPORT_SUPDUP = 95,IPPORT_EXECSERVER = 512,IPPORT_LOGINSERVER = 513,IPPORT_CMDSERVER = 514,IPPORT_EFSSERVER = 520,IPPORT_BIFFUDP = 512,IPPORT_WHOSERVER = 513,IPPORT_ROUTESERVER = 520,IPPORT_RESERVED = 1024,IPPORT_USERRESERVED = 5000,};
enum MACRO_IP_ADD {IP_ADD_PROXY_ADDR = 0x40,IP_BOUND_IF = 0x41,IP_UNSPEC_SRC = 0x42,IP_REUSEADDR = 0x104,IP_DONTROUTE = 0x105,IP_BROADCAST = 0x106,IP_DEFAULT_MULTICAST_TTL = 0x1,IP_DEFAULT_MULTICAST_LOOP = 0x1,};
enum MACRO_IP_ARP {IP_ARP_PROTO_TYPE = 0x800,};
enum MACRO_IP_MAX {IP_MAX_HW_LEN = 40,IP_LOOPBACK_MTU = 8192,IP_DL_SAP = 2048,};
enum MACRO_IP_MSS {IP_MSS = 576,};
enum MACRO_ISO_ID {ISO_ID_STRLEN = 5,ISO_ID_VER = 1,ISO_FILE_STRUCT_ID_VER = 1,ISO_SYS_ID_STRLEN = 32,ISO_VOL_ID_STRLEN = 32,ISO_VOL_SET_ID_STRLEN = 128,ISO_PUB_ID_STRLEN = 128,ISO_PREP_ID_STRLEN = 128,ISO_APPL_ID_STRLEN = 128,ISO_COPYR_ID_STRLEN = 37,ISO_ABSTR_ID_STRLEN = 37,ISO_SHORT_DATE_LEN = 7,ISO_DATE_LEN = 17,};
enum MACRO_ISPEED {ISPEED = 13,};
enum MACRO_ISPIPE {ISPIPE = 0x1,FIFOSEND = 0x2,FIFOOPEN = 0x4,FIFOCLOSE = 0x8,FIFOCONNLD = 0x10,FIFOFAST = 0x20,FIFOWANTR = 0x40,FIFOWANTW = 0x80,FIFOSETSIG = 0x100,FIFOHIWATW = 0x200,FIFORWBUSY = 0x400,FIFOPOLLW = 0x800,FIFOPOLLR = 0x1000,FIFOISOPEN = 0x2000,FIFOSYNC = 0x4000,FIFOWOCR = 0x8000,FIFOROCR = 0x10000,};
enum MACRO_ITIMER {ITIMER_REAL = 0,ITIMER_VIRTUAL = 1,ITIMER_PROF = 2,ITIMER_REALPROF = 3,};
enum MACRO_IWRITE {IWRITE = 0x80,};
enum MACRO_I_SYNC {I_SYNC = 1,I_DSYNC = 2,I_ASYNC = 0,I_FREE = 1,I_DIR = 2,I_IBLK = 4,I_CHEAP = 8,I_SHAD = 16,I_QUOTA = 32,};
enum MACRO_JAGENT {JAGENT = 27145,};
enum MACRO_JTIMOM {JTIMOM = 27142,};
enum MACRO_KEYMAP {KEYMAP_SIZE = 128,};
enum MACRO_LA_ELS {LA_ELS_RJT = 0x1,LA_ELS_ACC = 0x2,LA_ELS_PLOGI = 0x3,LA_ELS_FLOGI = 0x4,LA_ELS_LOGO = 0x5,LA_ELS_ABTX = 0x6,LA_ELS_RCS = 0x7,LA_ELS_RES = 0x8,LA_ELS_RSS = 0x9,LA_ELS_RSI = 0xA,LA_ELS_ESTS = 0xB,LA_ELS_ESTC = 0xC,LA_ELS_ADVC = 0xD,LA_ELS_RTV = 0xE,LA_ELS_RLS = 0xF,LA_ELS_ECHO = 0x10,LA_ELS_RRQ = 0x12,LA_ELS_PRLI = 0x20,LA_ELS_PRLO = 0x21,LA_ELS_SCN = 0x22,LA_ELS_TPLS = 0x23,LA_ELS_GPRLO = 0x24,LA_ELS_GAID = 0x30,LA_ELS_FACT = 0x31,LA_ELS_FDACT = 0x32,LA_ELS_NACT = 0x33,LA_ELS_NDACT = 0x34,LA_ELS_QoSR = 0x40,LA_ELS_RVCS = 0x41,LA_ELS_PDISC = 0x50,LA_ELS_FDISC = 0x51,LA_ELS_ADISC = 0x52,LA_ELS_NEW_IDENT = 0xF0,LA_ELS_DISPLAY = 0xF1,LA_ELS_IDENT = 0x20,};
enum MACRO_LA_RJT {LA_RJT_INVALID = 0x1,LA_RJT_LOGICAL_ERR = 0x3,LA_RJT_LOGICAL_BUSY = 0x5,LA_RJT_PROTOCOL_ERR = 0x7,LA_RJT_UNABLE_TO_PERFORM = 0x9,LA_RJT_NOT_SUPPORTED = 0xB,LA_RJT_VENDOR = 0xFF,LA_RJT_NOEXPLANATION = 0x0,LA_RJT_OPTIONS = 0x1,LA_RJT_INITIATOR = 0x3,LA_RJT_RECIPIENT = 0x5,LA_RJT_DATA_FIELD_SIZE = 0x7,LA_RJT_CONCURRENT = 0x9,LA_RJT_CREDIT = 0xB,LA_RJT_INVALID_PORT_WWNAME = 0xD,LA_RJT_INVALID_NODE_WWNAME = 0xE,LA_RJT_INVALID_COMMON_SVC = 0xF,LA_RJT_INVALID_ASSOC_HEADER = 0x11,LA_RJT_ASSOC_HDR_REQD = 0x13,LA_RJT_INVALID_ORIG_SID = 0x15,LA_RJT_INVALID_FQXID = 0x17,LA_RJT_REQUEST_IN_PROGRESS = 0x19,LA_RJT_INVALID_NPORT_ID = 0x1F,LA_RJT_ABT_INVALID_XID = 0x23,LA_RJT_ABT_INACTIVE_XID = 0x25,LA_RJT_RRQ_REQUIRED = 0x27,LA_RJT_INSUFFICENT = 0x29,LA_RJT_REQUESTED_DATA = 0x2A,LA_RJT_REQUEST_NOT_SUPPORTED = 0x2C,};
enum MACRO_LCRTBS {LCRTBS = 1,LPRTERA = 2,LCRTERA = 4,LTILDE = 8,LMDMBUF = 16,LLITOUT = 32,LTOSTOP = 64,LFLUSHO = 128,LNOHANG = 256,LCRTKIL = 1024,LPASS8 = 2048,LCTLECH = 4096,LPENDIN = 8192,LDECCTQ = 16384,LNOFLSH = 281474976677888,};
enum MACRO_LDDMAP {LDDMAP = 17522,};
enum MACRO_LDEMAP {LDEMAP = 17521,};
enum MACRO_LDGETT {LDGETT = 17416,};
enum MACRO_LDGMAP {LDGMAP = 17519,};
enum MACRO_LDNMAP {LDNMAP = 17520,};
enum MACRO_LDOPEN {LDOPEN = 17408,};
enum MACRO_LDSETT {LDSETT = 17417,};
enum MACRO_LDSMAP {LDSMAP = 17518,};
enum MACRO_LDTERM {LDTERM_DATA_VERSION = 1,LDTERM_CS_TYPE_MIN = 1,LDTERM_CS_TYPE_EUC = 1,LDTERM_CS_TYPE_PCCS = 2,LDTERM_CS_TYPE_UTF8 = 3,LDTERM_CS_TYPE_MAX = 3,LDTERM_CS_MAX_BYTE_LENGTH = 8,LDTERM_CS_MAX_CODESETS = 10,LDTERM_CS_TYPE_EUC_MIN_SUBCS = 0,LDTERM_CS_TYPE_EUC_MAX_SUBCS = 3,LDTERM_CS_TYPE_PCCS_MIN_SUBCS = 1,LDTERM_CS_TYPE_PCCS_MAX_SUBCS = 10,LDTERM_CS_TYPE_UTF8_MIN_BYTE = 128,LDTERM_CS_TYPE_UTF8_MAX_BYTE = 191,LDTERM_CS_TYPE_UTF8_MIN_P14 = 917504,LDTERM_CS_TYPE_UTF8_MAX_P14 = 917631,LDTERM_CS_TYPE_UTF8_SHIFT_BITS = 6,LDTERM_CS_TYPE_UTF8_BIT_MASK = 63,};
enum MACRO_LENGTH {MIN_LINKTARGET_LENGTH = 3,LINKTARGET_AC_HEADER_LENGTH = 2,MIN_LONGLINK_AC_LENGTH = 4,};
enum MACRO_LINESZ {LINESZ = 6,};
enum MACRO_LLC_UI {LLC_UI = 0x3,LLC_XID = 0xAF,LLC_TEST = 0xE3,LLC_P = 0x10,LLC_XID_FMTID = 0x81,LLC_SERVICES = 0x1,LLC_GLOBAL_SAP = 0xFF,LLC_NULL_SAP = 0x0,LLC_SNAP_SAP = 0xAA,LLC_GROUP_ADDR = 0x1,LLC_RESPONSE = 0x1,LLC_NOVELL_SAP = 0xFFFFFFFF,LLC_XID_INFO_SIZE = 0x3,LLC_XID_CLASS_I = 0x1,LLC_XID_CLASS_II = 0x3,LLC_XID_CLASS_III = 0x5,LLC_XID_CLASS_IV = 0x7,LLC_XID_TYPE_1 = 0x1,LLC_XID_TYPE_2 = 0x2,LLC_XID_TYPE_3 = 0x4,};
enum MACRO_LM_SVC {LM_SVC_CUR_VERS = 30,NFSL_FLUSH_ARGS_VERS = 1,};
enum MACRO_LOCKFS {LOCKFS_ULOCK = 0,LOCKFS_WLOCK = 1,LOCKFS_NLOCK = 2,LOCKFS_DLOCK = 3,LOCKFS_HLOCK = 4,LOCKFS_ELOCK = 5,LOCKFS_ROELOCK = 6,LOCKFS_MAXLOCK = 6,LOCKFS_BUSY = 1,LOCKFS_MOD = 2,LOCKFS_MAXCOMMENTLEN = 1024,};
enum MACRO_LOGCTL {LOGCTL = 19456,};
enum MACRO_LOGDMX {LOGDMX_IOC_QEXCHANGE = 28161,};
enum MACRO_LOOKUP {LOOKUP_DIR = 0x1,};
enum MACRO_LS_MAX {LS_MAX_STACK_DEPTH = 50,LS_MAX_WATCH = 32,};
enum MACRO_LS_RJT {LS_RJT = 0x1000000,LS_ACC = 0x2000000,LS_PLOGI = 0x3000000,LS_FLOGI = 0x4000000,LS_LOGO = 0x5000000,LS_ABTX = 0x6000000,LS_RCS = 0x7000000,LS_RES = 0x8000000,LS_RSS = 0x9000000,LS_RSI = 0xA000000,LS_ESTS = 0xB000000,LS_ESTC = 0xC000000,LS_ADVC = 0xD000000,LS_RTV = 0xE000000,LS_RLS = 0xF000000,LS_ECHO = 0x10000000,LS_TEST = 0x11000000,LS_RRQ = 0x12000000,LS_IDENT = 0x20000000,LS_DISPLAY = 0x21000000,};
enum MACRO_MASTER {MASTER_ONLY = 32,};
enum MACRO_MAXCON {MAXCON = 100,};
enum MACRO_MAXDOS {MAXDOS = 65535,};
enum MACRO_MAXEND {MAXEND = 9223372036854775807,};
enum MACRO_MAXFPQ {MAXFPQ = 16,};
enum MACRO_MAXIPL {MAXIPL = 16,};
enum MACRO_MAXLNS {MAXLNS = 6,};
enum MACRO_MAXMAJ {MAXMAJ = 16383,};
enum MACRO_MAXMIN {MAXMIN = 262143,};
enum MACRO_MAXSEC {MAXSEC = 1200,};
enum MACRO_MAXSIG {MAXSIG = 45,};
enum MACRO_MAXTTL {MAXTTL = 255,};
enum MACRO_MAXUID {MAXUID = 2147483647,};
enum MACRO_MINSEC {MINSEC = 16,};
enum MACRO_MM_STD {MM_STD = 0,MM_NOSTD = 256,MM_GET = 0,MM_NOGET = 512,MM_ACTION = 1024,MM_NOCONSOLE = 0,MM_SVCMD = 73728,};
enum MACRO_MNTIOC {MNTIOC = 27904,};
enum MACRO_MODREV {MODREV_1 = 1,};
enum MACRO_MSG_DR {MSG_DR_IDENTIFY = 192,MSG_LUNTAR = 32,MSG_LUNRTN = 7,};
enum MACRO_MS_RBC {MS_RBC_T10_SUB_CLASS = 0x1,MS_SFF8020I_SUB_CLASS = 0x2,MS_QIC_157_SUB_CLASS = 0x3,MS_UFI_SUB_CLASS = 0x4,MS_SFF8070I_SUB_CLASS = 0x5,MS_SCSI_SUB_CLASS = 0x6,MS_CBI_WC_PROTOCOL = 0x0,MS_CBI_PROTOCOL = 0x1,MS_ISD_1999_SILICON_PROTOCOL = 0x2,MS_BULK_ONLY_PROTOCOL = 0x50,};
enum MACRO_MTGRSZ {MTGRSZ = 13,};
enum MACRO_MTLOAD {MTLOAD = 14,};
enum MACRO_MTNBSF {MTNBSF = 11,};
enum MACRO_MTOFFL {MTOFFL = 6,};
enum MACRO_MTSRSZ {MTSRSZ = 12,};
enum MACRO_MTWEOF {MTWEOF = 0,MTFSF = 1,MTBSF = 2,};
enum MACRO_M_DATA {M_DATA = 0x0,M_PROTO = 0x1,M_BREAK = 0x8,M_PASSFP = 0x9,M_EVENT = 0xA,M_SIG = 0xB,M_DELAY = 0xC,M_CTL = 0xD,M_IOCTL = 0xE,M_SETOPTS = 0x10,M_RSE = 0x11,M_IOCACK = 0x81,M_IOCNAK = 0x82,M_PCPROTO = 0x83,M_PCSIG = 0x84,M_READ = 0x85,M_FLUSH = 0x86,M_STOP = 0x87,M_START = 0x88,M_HANGUP = 0x89,M_ERROR = 0x8A,M_COPYIN = 0x8B,M_COPYOUT = 0x8C,M_IOCDATA = 0x8D,M_PCRSE = 0x8E,M_STOPI = 0x8F,M_STARTI = 0x90,M_PCEVENT = 0x91,M_UNHANGUP = 0x92,};
enum MACRO_NCARGS {NCARGS = 1048576,};
enum MACRO_NDADDR {NDADDR = 12,};
enum MACRO_NDKBAD {NDKBAD = 126,};
enum MACRO_NDKMAP {NDKMAP = 8,};
enum MACRO_ND_MAX {ND_MAX_HDW_LEN = 64,ND_UNCHANGED = 0,ND_INCOMPLETE = 1,ND_REACHABLE = 2,ND_STALE = 3,ND_DELAY = 4,ND_PROBE = 5,ND_UNREACHABLE = 6,ND_STATE_VALID_MIN = 0,ND_STATE_VALID_MAX = 6,};
enum MACRO_NFSLOG {NFSLOG_PROGRAM = 42,NFSLOG_VERSION = 1,NFSLOG_VERSMIN = 1,NFSLOG_VERSMAX = 1,NFSLOG_NULL = 0,NFSLOG_SHARE = 1,NFSLOG_UNSHARE = 2,NFSLOG_LOOKUP = 3,NFSLOG_GETFH = 4,NFSLOG_BUF_VERSION = 1,};
enum MACRO_NFSMNT {NFSMNT_SOFT = 0x1,NFSMNT_WSIZE = 0x2,NFSMNT_RSIZE = 0x4,NFSMNT_TIMEO = 0x8,NFSMNT_RETRANS = 0x10,NFSMNT_HOSTNAME = 0x20,NFSMNT_INT = 0x40,NFSMNT_NOAC = 0x80,NFSMNT_ACREGMIN = 0x100,NFSMNT_ACREGMAX = 0x200,NFSMNT_ACDIRMIN = 0x400,NFSMNT_ACDIRMAX = 0x800,NFSMNT_SECURE = 0x1000,NFSMNT_NOCTO = 0x2000,NFSMNT_KNCONF = 0x4000,NFSMNT_GRPID = 0x8000,NFSMNT_RPCTIMESYNC = 0x10000,NFSMNT_KERBEROS = 0x20000,NFSMNT_POSIX = 0x40000,NFSMNT_LLOCK = 0x80000,NFSMNT_LOOPBACK = 0x100000,NFSMNT_SEMISOFT = 0x200000,NFSMNT_NOPRINT = 0x400000,NFSMNT_NEWARGS = 0x800000,NFSMNT_DIRECTIO = 0x1000000,};
enum MACRO_NFS_V3 {NFS_V3 = 3,};
enum MACRO_NIADDR {NIADDR = 3,};
enum MACRO_NMAGIC {NMAGIC = 0x108,};
enum MACRO_NMOUNT {NMOUNT = 40,CANBSIZ = 256,};
enum MACRO_NOBODY {UID_NOBODY = 60001,GID_NOBODY = 60001,};
enum MACRO_NOBUSY {NOBUSY_POLLTIME = 5,};
enum MACRO_NOCRED {NOCRED = 0,};
enum MACRO_NODEID {NODEID_UNKNOWN = 0,};
enum MACRO_NOEXPR {NOEXPR = 57,};
enum MACRO_NOFILE {NOFILE = 20,};
enum MACRO_NOPOST {NOPOST = 0x1,NOISIG = 0x2,STOPB = 0x4,};
enum MACRO_NORMAL {NORMAL = 0,ABORT1 = 1,COMPOSE1 = 2,};
enum MACRO_NOT_IN {NOT_IN_HW = 0x100,};
enum MACRO_NOVELL {NOVELL_LENGTH = 0x4,NOVELL_TYPE = 0x3,};
enum MACRO_NO_ANS {NO_ANS = -3,};
enum MACRO_NO_Ldv {NO_Ldv = -7,};
enum MACRO_OBP_MB {OBP_MB_IDLE_LOW = 0x90,OBP_MB_IDLE_HIGH = 0xEF,OBP_MB_ACTIVE = 0xF0,OBP_MB_EXIT_STOP = 0xFB,OBP_MB_ENTER_IDLE = 0xFC,OBP_MB_BRKPT_IDLE = 0xFD,OBP_MB_WATCHDOG_STOP = 0xFE,};
enum MACRO_OFFSET {DTR_OFFSET = 0x400,CD180_OFFSET = 0x800,IACK_OFFSET = 0xC00,PPC_OFFSET = 0xE00,};
enum MACRO_OLDDEV {OLDDEV = 0,NEWDEV = 1,};
enum MACRO_OMAGIC {OMAGIC = 0x107,};
enum MACRO_ONPAGE {ONPAGE = 32,};
enum MACRO_PADDOT {PADDOT = 0x710,};
enum MACRO_PADSEP {PADSEP = 0x704,};
enum MACRO_PASSWD {PASSWD = 0x1000,};
enum MACRO_PCCSIG {PCCSIG = 6,};
enum MACRO_PCKILL {PCKILL = 9,};
enum MACRO_PCMCIA {PCMCIA_MAX_ADAPTERS = 8,PCMCIA_MAX_SOCKETS = 64,PCMCIA_MAX_WIN_ADAPT = 40,PCMCIA_MAX_WINDOWS = 320,PCMCIA_MAX_POWER = 16,};
enum MACRO_PCNICE {PCNICE = 21,};
enum MACRO_PCNULL {PCNULL = 0,PCSTOP = 1,PCDSTOP = 2,};
enum MACRO_PCREAD {PCREAD = 25,};
enum MACRO_PCSREG {PCSREG = 18,};
enum MACRO_PC_MOD {PC_MOD = 0x1,PC_CHG = 0x2,PC_INVAL = 0x4,PC_EXTERNAL = 0x8,PC_ACC = 0x10,PC_RELEHOLD = 0x80,};
enum MACRO_PC_REG {PC_REG_TYPE_CARDBUS = 0,PC_REG_TYPE_16BIT = 1,PC_REG_SPACE_CONFIG = 0,PC_REG_SPACE_IO = 1,PC_REG_SPACE_MEMORY = 2,PC_REG_SPACE_ATTRIBUTE = 4,};
enum MACRO_PF_KEY {PF_KEY_V2 = 2,};
enum MACRO_PKGSIZ {PKGSIZ = 64,};
enum MACRO_POLLIN {POLLIN = 0x1,POLLPRI = 0x2,POLLOUT = 0x4,POLLRDNORM = 0x40,};
enum MACRO_PRCLSZ {PRCLSZ = 8,};
enum MACRO_PRCSIG {PRCSIG = 0x1,PRCFAULT = 0x2,PRSTEP = 0x4,PRSABORT = 0x8,PRSTOP = 0x10,};
enum MACRO_PREFIX {PREFIX_INFINITY = 0xFFFFFFFF,};
enum MACRO_PRELIM {PRELIM = 1,COMPLETE = 2,};
enum MACRO_PRFNSZ {PRFNSZ = 16,};
enum MACRO_PS_OBJ {PS_OBJ_EXEC = 0x0,PS_OBJ_LDSO = 0x1,};
enum MACRO_PTLOCK {PTLOCK = 0x1,PTMOPEN = 0x2,PTSOPEN = 0x4,PTSTTY = 0x8,ISPTM = 0x5001,};
enum MACRO_PTRACE {PTRACE_TRACEME = 0,PTRACE_CHILDDONE = 0,PTRACE_PEEKTEXT = 1,PTRACE_PEEKDATA = 2,PTRACE_PEEKUSER = 3,PTRACE_POKETEXT = 4,PTRACE_POKEDATA = 5,PTRACE_POKEUSER = 6,PTRACE_CONT = 7,PTRACE_KILL = 8,PTRACE_SINGLESTEP = 9,PTRACE_ATTACH = 10,PTRACE_DETACH = 11,PTRACE_GETREGS = 12,PTRACE_SETREGS = 13,PTRACE_GETFPREGS = 14,PTRACE_SETFPREGS = 15,PTRACE_READDATA = 16,PTRACE_WRITEDATA = 17,PTRACE_READTEXT = 18,PTRACE_WRITETEXT = 19,PTRACE_GETFPAREGS = 20,PTRACE_SETFPAREGS = 21,PTRACE_GETWINDOW = 22,PTRACE_SETWINDOW = 23,PTRACE_SYSCALL = 24,PTRACE_DUMPCORE = 25,PTRACE_SETWRBKPT = 26,PTRACE_SETACBKPT = 27,PTRACE_CLRDR7 = 28,PTRACE_TRAPCODE = 29,PTRACE_SETBPP = 30,PTRACE_WPPHYS = 31,};
enum MACRO_P_FREE {P_FREE = 0x80,P_NORELOC = 0x40,};
enum MACRO_QDELAY {QDELAY = 180,};
enum MACRO_RCIBRG {RCIBRG = 0x0,RCTSET = 0x8,RCRSET = 0x10,TSETCLK = 0x1C0,};
enum MACRO_RDSIDE {RDSIDE = 1,WRSIDE = 2,};
enum MACRO_REPORT {REPORT_MOUSE_POSITION = 0x8000,};
enum MACRO_RETURN {RETURN_RESULT = 128,};
enum MACRO_REVARP {REVARP_REQUEST = 3,REVARP_REPLY = 4,};
enum MACRO_RIPCMD {RIPCMD_REQUEST = 1,RIPCMD_RESPONSE = 2,RIPCMD_TRACEON = 3,RIPCMD_TRACEOFF = 4,RIPCMD_POLL = 5,RIPCMD_POLLENTRY = 6,RIPCMD_MAX = 7,};
enum MACRO_RJEGID {RJEGID = 8,QUELEN = 50,};
enum MACRO_RJEUID {RJEUID = 68,};
enum MACRO_RLIM64 {RLIM64_INFINITY = -3,RLIM64_SAVED_MAX = -2,RLIM64_SAVED_CUR = -1,};
enum MACRO_RLIMIT {RLIMIT_CPU = 0,RLIMIT_FSIZE = 1,RLIMIT_DATA = 2,RLIMIT_STACK = 3,RLIMIT_CORE = 4,RLIMIT_NOFILE = 5,RLIMIT_VMEM = 6,RLIMIT_AS = 6,};
enum MACRO_RLOGIN {RLOGIN_MAGIC = 0xFF,};
enum MACRO_ROMVEC {ROMVEC_BLKSIZE = 512,};
enum MACRO_RPCSEC {RPCSEC_GSS = 6,};
enum MACRO_RUSAGE {RUSAGE_SELF = 0,RUSAGE_CHILDREN = -1,};
enum MACRO_RUSERS {RUSERS_MAXUSERLEN = 32,RUSERS_MAXLINELEN = 32,RUSERS_MAXHOSTLEN = 257,RUSERS_EMPTY = 0,RUSERS_RUN_LVL = 1,RUSERS_BOOT_TIME = 2,RUSERS_OLD_TIME = 3,RUSERS_NEW_TIME = 4,RUSERS_INIT_PROCESS = 5,RUSERS_LOGIN_PROCESS = 6,RUSERS_USER_PROCESS = 7,RUSERS_DEAD_PROCESS = 8,RUSERS_ACCOUNTING = 9,};
enum MACRO_SADIOC {SADIOC = 17408,};
enum MACRO_SARMAG {SARMAG = 8,};
enum MACRO_SA_NOT {SA_NOT = 0x1,};
enum MACRO_SBSIZE {SBSIZE = 8192,};
enum MACRO_SC_ADD {SC_ADD = 1,SC_LIST = 2,SC_REMOVE = 3,SC_GETNSWP = 4,SC_AINFO = 5,};
enum MACRO_SECDIV {SECDIV = 9,};
enum MACRO_SEEK_0 {SEEK = 0xF,};
enum MACRO_SEGDRV {SEGDRV_CONTINUE = -10,SEGDRV_HANDLED = -11,SEGDRV_IGNORE = -12,};
enum MACRO_SESCTL {SESCTL_CSEL = 0x80,SESCTL_PRDFAIL = 0x40,SESCTL_DISABLE = 0x20,SESCTL_RSTSWAP = 0x10,SESCTL_DRVLCK = 0x40,SESCTL_RQSINS = 0x8,SESCTL_RQSRMV = 0x4,SESCTL_RQSID = 0x2,SESCTL_RQSFLT = 0x20,SESCTL_DEVOFF = 0x10,SESCTL_RQSTFAIL = 0x40,SESCTL_RQSTON = 0x20,};
enum MACRO_SESIOC {SESIOC = 25856,};
enum MACRO_SESTYP {SESTYP_UNSPECIFIED = 0x0,SESTYP_DEVICE = 0x1,SESTYP_POWER = 0x2,SESTYP_FAN = 0x3,SESTYP_THERM = 0x4,SESTYP_DOORLOCK = 0x5,SESTYP_ALARM = 0x6,SESTYP_ESCC = 0x7,SESTYP_SCC = 0x8,SESTYP_NVRAM = 0x9,SESTYP_UPS = 0xB,SESTYP_DISPLAY = 0xC,SESTYP_KEYPAD = 0xD,SESTYP_SCSIXVR = 0xF,SESTYP_LANGUAGE = 0x10,SESTYP_COMPORT = 0x11,SESTYP_VOM = 0x12,SESTYP_AMMETER = 0x13,SESTYP_SCSI_TGT = 0x14,SESTYP_SCSI_INI = 0x15,SESTYP_SUBENC = 0x16,};
enum MACRO_SETALL {SETALL = 9,};
enum MACRO_SF_IOC {SF_IOC = 0xDA00,};
enum MACRO_SF_NUM {SF_NUM_ENTRIES_IN_MAP = 127,};
enum MACRO_SHARED {SHARED = 0x10,PRIVATE = 0x20,};
enum MACRO_SHF_IA {SHF_IA_64_SHORT = 0x10000000,SHF_IA_64_NORECOV = 0x20000000,};
enum MACRO_SHQUID {SHQUID = 69,};
enum MACRO_SHT_IA {SHT_IA_64_EXT = 0x70000000,SHT_IA_64_UNWIND = 0x70000001,};
enum MACRO_SIGNAL {SIGHUP = 1,SIGINT = 2,SIGQUIT = 3,SIGILL = 4,SIGTRAP = 5,SIGIOT = 6,SIGABRT = 6,SIGEMT = 7,SIGFPE = 8,SIGKILL = 9,SIGBUS = 10,SIGSEGV = 11,SIGSYS = 12,SIGPIPE = 13,SIGALRM = 14,SIGTERM = 15,SIGUSR1 = 16,SIGUSR2 = 17,SIGCLD = 18,SIGCHLD = 18,SIGPWR = 19,SIGWINCH = 20,SIGURG = 21,SIGPOLL = 22,SIGIO = 22,SIGSTOP = 23,SIGTSTP = 24,SIGCONT = 25,SIGTTIN = 26,SIGTTOU = 27,SIGVTALRM = 28,SIGPROF = 29,SIGXCPU = 30,SIGXFSZ = 31,SIGWAITING = 32,SIGLWP = 33,SIGFREEZE = 34,SIGTHAW = 35,SIGCANCEL = 36,SIGLOST = 37,_SIGRTMIN = 38,_SIGRTMAX = 45,};
enum MACRO_SINGLE {SINGLE_2CLUTS = 0x2,SINGLE_3CLUTS = 0x3,};
enum MACRO_SL_DOT {SL_DOT = 1,SL_DOTDOT = 2,};
enum MACRO_SOURCE {_LARGEFILE64_SOURCE = 1,_LARGEFILE_SOURCE = 1,};
enum MACRO_SPLTTY {SPLTTY = 12,};
enum MACRO_SS8SPT {SS8SPT = 0xFE,};
enum MACRO_SS9SPT {SS9SPT = 0xFC,};
enum MACRO_SSDERR {SSDERR_ALL = 0,SSDERR_UNKNOWN = 1,SSDERR_INFORMATIONAL = 2,SSDERR_RECOVERED = 3,SSDERR_RETRYABLE = 4,SSDERR_FATAL = 5,};
enum MACRO_SSD_IO {SSD_IO_TIME = 60,SSD_FMT_TIME = 7200,SSD_RESET_THROTTLE_TIMEOUT = 60,SSD_RETRY_COUNT = 3,SSD_MAXUNIT = 32,SSD_WAIT_CMDS_COMPLETE = 30,SSD_RELEASE = 0,SSD_RESERVE = 1,SSD_TKOWN = 2,SSD_LOST_RESERVE = 4,SSD_FAILFAST = 128,SSD_WANT_RESERVE = 256,SSD_RESERVATION_CONFLICT = 512,SSD_PRIORITY_RESERVE = 1024,SSD_MAX_NODES = 16,SSD_REINSTATE_RESV_DELAY = 6000000,SSD_STOP = 0,SSD_START = 1,SSD_NODISC = 1,SSD_NOPARITY = 2,SSD_MULTICMD = 4,SSD_EIOENABLE = 8,SSD_QUEUEING = 16,SSD_EACCES = 1,};
enum MACRO_SSLEEP {SSLEEP = 1,SRUN = 2,};
enum MACRO_SSPEED {SSPEED = 7,};
enum MACRO_SSSDTL {SSSDTL = 0xFF,};
enum MACRO_STATES {MAX_STATES = 16,MIN_STATES = 3,};
enum MACRO_STATIC {STATIC_SCHED = 0xFFFFFFFF,};
enum MACRO_STATUS {STATUS_MASK = 0x3E,STATUS_GOOD = 0x0,STATUS_CHECK = 0x2,STATUS_MET = 0x4,STATUS_BUSY = 0x8,STATUS_INTERMEDIATE = 0x10,STATUS_SCSI2 = 0x20,STATUS_INTERMEDIATE_MET = 0x14,STATUS_RESERVATION_CONFLICT = 0x18,STATUS_TERMINATED = 0x22,STATUS_QFULL = 0x28,STATUS_ACA_ACTIVE = 0x30,STATUS_SIZE = 0x4,};
enum MACRO_STPOLL {STPOLL = 6,};
enum MACRO_STRING {STRING = 0x500,};
enum MACRO_STRLOW {STRLOW = 1024,};
enum MACRO_STRUIO {STRUIO_SPEC = 0x1,STRUIO_DONE = 0x2,STRUIO_IP = 0x4,STRUIO_ZC = 0x8,STRUIO_ICK = 0x10,};
enum MACRO_ST_DEV {ST_DEV_CONFIG_PAGE = 0x10,ST_DEV_CONFIG_ALLOC_LEN = 0x1C,ST_DEV_CONFIG_COMP_BYTE = 0x1A,ST_DEV_CONFIG_PL_BYTE = 0xD,ST_DEV_CONFIG_NO_COMP = 0x0,ST_DEV_CONFIG_DEF_COMP = 0x1,ST_COMPRESSION_DENSITY = 0x3,ST_DEV_DATACOMP_PAGE = 0xF,ST_DEV_DATACOMP_ALLOC_LEN = 0x1C,ST_DEV_DATACOMP_COMP_BYTE = 0xE,ST_DEV_DATACOMP_DCE_MASK = 0x80,};
enum MACRO_ST_HIB {ST_HIB_TID = 0x1,ST_DELAY_TID = 0x2,};
enum MACRO_ST_MAX {ST_MAX_THROTTLE = 4,ST_SPACE_TIME = 3600,ST_LONG_SPACE_TIME_X = 5,ST_IO_TIME = 120,ST_LONG_TIMEOUT_X = 5,ST_INTERRUPT_CONTEXT = 1,ST_START_CONTEXT = 2,ST_RETRY_COUNT = 20,ST_SEL_RETRY_COUNT = 2,ST_DEFERRED_ERROR = 1,ST_MAXUNIT = 128,ST_WAIT_CMDS_COMPLETE = 10,};
enum MACRO_SUNMON {SUNMON_START = 0xFFD00000,SUNMON_END = 0xFFF00000,};
enum MACRO_SUPPLY {SUPPLY_INTERVAL = 30,};
enum MACRO_SVCGET {SVCGET_XID = 4,};
enum MACRO_SVCSET {SVCSET_KEEPALIVE = 5,SVCSET_CONNMAXREC = 6,};
enum MACRO_SYMESZ {SYMESZ = 18,};
enum MACRO_S_IFMT {S_IFMT = 0xF000,S_IAMB = 0x1FF,S_IFIFO = 0x1000,S_IFCHR = 0x2000,S_IFDIR = 0x4000,S_IFNAM = 0x5000,S_INSEM = 0x1,S_INSHD = 0x2,S_IFBLK = 0x6000,S_IFREG = 0x8000,S_IFLNK = 0xA000,S_IFSOCK = 0xC000,S_IFDOOR = 0xD000,S_ISUID = 0x800,S_ISGID = 0x400,S_ISVTX = 0x200,S_IREAD = 0x100,S_IWRITE = 0x80,S_IEXEC = 0x40,S_ENFMT = 0x400,S_IRWXU = 0x1C0,S_IRUSR = 0x100,S_IWUSR = 0x80,S_IXUSR = 0x40,S_IRWXG = 0x38,S_IRGRP = 0x20,S_IWGRP = 0x10,S_IXGRP = 0x8,S_IRWXO = 0x7,S_IROTH = 0x4,S_IWOTH = 0x2,S_IXOTH = 0x1,};
enum MACRO_S_INET {S_INET_LISTEN = 0x40000,};
enum MACRO_TACCES {TACCES = 3,TBADF = 4,};
enum MACRO_TCDSET {TCDSET = 21536,};
enum MACRO_TCFLSH {TCFLSH = 21511,};
enum MACRO_TCGETA {TCGETA = 21505,};
enum MACRO_TCGETS {TCGETS = 21517,};
enum MACRO_TCGETX {TCGETX = 22529,};
enum MACRO_TCOOFF {TCOOFF = 0,TCOON = 1,TCIOFF = 2,};
enum MACRO_TCPOOB {TCPOOB_HAVEDATA = 0x1,TCPOOB_HADDATA = 0x2,};
enum MACRO_TCPOPT {TCPOPT_EOL = 0,TCPOPT_NOP = 1,TCPOPT_MAXSEG = 2,TCPOPT_WSCALE = 3,TCPOPT_SACK_PERMITTED = 4,TCPOPT_SACK = 5,TCPOPT_TSTAMP = 8,};
enum MACRO_TCSBRK {TCSBRK = 21509,};
enum MACRO_TCSETA {TCSETA = 21506,};
enum MACRO_TCSETS {TCSETS = 21518,};
enum MACRO_TCSETX {TCSETX = 22530,};
enum MACRO_TCXONC {TCXONC = 21510,};
enum MACRO_TELCMD {TELCMD_FIRST = 236,TELCMD_LAST = 255,};
enum MACRO_TELIOC {TELIOC = 28160,};
enum MACRO_TELOPT {TELOPT_BINARY = 0,TELOPT_ECHO = 1,TELOPT_RCP = 2,TELOPT_SGA = 3,TELOPT_NAMS = 4,TELOPT_STATUS = 5,TELOPT_TM = 6,TELOPT_RCTE = 7,TELOPT_NAOL = 8,TELOPT_NAOP = 9,TELOPT_NAOCRD = 10,TELOPT_NAOHTS = 11,TELOPT_NAOHTD = 12,TELOPT_NAOFFD = 13,TELOPT_NAOVTS = 14,TELOPT_NAOVTD = 15,TELOPT_NAOLFD = 16,TELOPT_XASCII = 17,TELOPT_LOGOUT = 18,TELOPT_BM = 19,TELOPT_DET = 20,TELOPT_SUPDUP = 21,TELOPT_SUPDUPOUTPUT = 22,TELOPT_SNDLOC = 23,TELOPT_TTYPE = 24,TELOPT_EOR = 25,TELOPT_TUID = 26,TELOPT_OUTMRK = 27,TELOPT_TTYLOC = 28,TELOPT_3270REGIME = 29,TELOPT_X3PAD = 30,TELOPT_NAWS = 31,TELOPT_TSPEED = 32,TELOPT_LFLOW = 33,TELOPT_LINEMODE = 34,TELOPT_XDISPLOC = 35,TELOPT_OLD_ENVIRON = 36,TELOPT_AUTHENTICATION = 37,TELOPT_ENCRYPT = 38,TELOPT_NEW_ENVIRON = 39,TELOPT_EXOPL = 255,TELOPT_FIRST = 0,TELOPT_LAST = 39,};
enum MACRO_TGEXEC {TGEXEC = 0x8,};
enum MACRO_TGREAD {TGREAD = 0x20,};
enum MACRO_TH_PSH {TH_PSH = 0x8,TH_ACK_ACCEPTABLE = 0x400,TH_XMIT_NEEDED = 0x800,TH_REXMIT_NEEDED = 0x1000,TH_ACK_NEEDED = 0x2000,TH_NEED_SACK_REXMIT = 0x4000,TH_TIMER_NEEDED = 0x8000,TH_ORDREL_NEEDED = 0x10000,TH_MARKNEXT_NEEDED = 0x20000,TH_SEND_URP_MARK = 0x40000,};
enum MACRO_TIME_0 {TIME = 1,UPROCP = 2,};
enum MACRO_TNODIS {TNODIS = 14,};
enum MACRO_TNOREL {TNOREL = 17,};
enum MACRO_TOEXEC {TOEXEC = 0x1,};
enum MACRO_TOREAD {TOREAD = 0x4,};
enum MACRO_TPROTO {TPROTO = 29,};
enum MACRO_TQFULL {TQFULL = 28,};
enum MACRO_TRAPTR {TRAPTR_NEXT = 0,TRAPTR_FIRST = 4,TRAPTR_LIMIT = 8,TRAPTR_SIZE_SHIFT = 4,};
enum MACRO_TR_FAC {TR_FAC_TRACE = 0,TR_FAC_TEST = 1,TR_FAC_TRAP = 2,TR_FAC_INTR = 3,TR_FAC_SYSCALL = 4,TR_FAC_DISP = 5,TR_FAC_VM = 6,TR_FAC_PROC = 7,TR_FAC_LOCK = 8,TR_FAC_BCOPY = 9,TR_FAC_KMEM = 10,TR_FAC_STREAMS_FR = 11,TR_FAC_STREAMS_MOD = 12,TR_FAC_SOCKMOD = 13,TR_FAC_TCP = 14,TR_FAC_UDP = 15,TR_FAC_IP = 16,TR_FAC_ARP = 17,TR_FAC_LE = 18,TR_FAC_IPI = 19,TR_FAC_SCSI = 21,TR_FAC_LWP = 22,TR_FAC_SYS_LWP = 23,TR_FAC_CALLOUT = 24,TR_FAC_SPECFS = 29,TR_FAC_SWAPFS = 30,TR_FAC_TMPFS = 31,TR_FAC_UFS = 32,TR_FAC_NFS = 33,TR_FAC_DDI = 35,TR_FAC_KRPC = 36,TR_FAC_SCHED = 37,TR_FAC_SCSI_RES = 38,TR_FAC_SCSI_ISP = 39,TR_FAC_IA = 40,TR_FAC_S5 = 41,TR_FAC_QE = 42,TR_FAC_BE = 43,TR_FAC_FIFO = 44,TR_FAC_RLOGINP = 45,TR_FAC_AE = 46,TR_FAC_PHYSIO = 47,TR_FAC_META = 48,TR_FAC_SCSI_FAS = 49,TR_FAC_SOCKFS = 50,TR_FAC_DEVMAP = 51,TR_FAC_DADA = 52,TR_END = 0,TR_VERSION = 1,TR_TITLE = 2,TR_PAD = 3,TR_LABEL = 4,TR_PAGESIZE = 5,TR_NUM_CPUS = 6,TR_CPU = 7,TR_DATA_4 = 8,TR_DATA_8 = 9,TR_DATA_16 = 10,TR_DATA_32 = 11,TR_DATA_64 = 12,TR_ABS_TIME = 13,TR_START_TIME = 14,TR_ELAPSED_TIME = 15,TR_TOTAL_TIME = 16,TR_KTHREAD_ID = 17,TR_UTHREAD_ID = 18,TR_CLOCK_FREQUENCY = 19,TR_RAW_KTHREAD_ID = 64,TR_RAW_UTHREAD_ID = 65,TR_KTHREAD_LABEL = 66,TR_UTHREAD_LABEL = 67,TR_PROCESS_NAME = 68,TR_PROCESS_FORK = 69,TR_SPEED_0 = 0,TR_SPEED_1 = 1,TR_SPEED_1_STRING = 2,TR_SPEED_2 = 3,TR_SPEED_2_STRING = 4,TR_SPEED_3 = 5,TR_SPEED_3_STRING = 6,TR_SPEED_4 = 7,TR_SPEED_4_STRING = 8,TR_SPEED_5 = 9,TR_SPEED_5_STRING = 10,TR_TRACE_FLUSH_START = 11,TR_TRACE_FLUSH_END = 12,TR_TRACE_VN_WRITE_START = 13,TR_TRACE_VN_WRITE_END = 14,TR_TRAP_START = 0,TR_TRAP_END = 1,TR_KERNEL_WINDOW_OVERFLOW = 2,TR_KERNEL_WINDOW_UNDERFLOW = 3,TR_USER_WINDOW_OVERFLOW = 4,TR_USER_WINDOW_UNDERFLOW = 5,TR_C_TRAP_HANDLER_ENTER = 6,TR_C_TRAP_HANDLER_EXIT = 7,TR_INTR_START = 0,TR_INTR_END = 1,TR_INTR_EXIT = 2,TR_INTR_PASSIVATE = 3,TR_SYSCALL_START = 0,TR_SYSCALL_END = 1,TR_DISP_START = 0,TR_DISP_END = 1,TR_SWTCH_START = 2,TR_SWTCH_END = 3,TR_PREEMPT_START = 4,TR_PREEMPT_END = 5,TR_RESUME_START = 6,TR_RESUME_END = 7,TR_FRONTQ = 8,TR_BACKQ = 9,TR_CPU_RESCHED = 10,TR_SLEEP = 11,TR_TRAPRET = 12,TR_TICK = 13,TR_UPDATE = 14,TR_CPU_CHOOSE = 15,TR_CPU_SURRENDER = 16,TR_PREEMPT = 17,TR_PAGE_INIT = 0,TR_PAGE_WS_IN = 1,TR_PAGE_WS_OUT = 2,TR_PAGE_WS_FREE = 3,TR_PAGE_WS_RECLAIM = 4,TR_PAGEOUT_START = 5,TR_PAGEOUT_END = 6,TR_PAGEOUT_HAND_WRAP = 7,TR_PAGEOUT_MAXPGIO = 8,TR_PAGEOUT_ISREF = 9,TR_PAGEOUT_FREE = 10,TR_PAGEOUT_CV_SIGNAL = 11,TR_HAT_SETMOD = 12,TR_HAT_SETREF = 13,TR_HAT_SETREFMOD = 14,TR_HAT_CLRMOD = 15,TR_HAT_CLRREF = 16,TR_HAT_CLRREFMOD = 17,TR_HME_ADD = 18,TR_HME_SUB = 19,TR_SEGMAP_FAULT = 20,TR_SEGMAP_GETMAP = 21,TR_SEGMAP_RELMAP = 22,TR_SEGMAP_PAGECREATE = 23,TR_SEGMAP_GETPAGE = 24,TR_SEGVN_FAULT = 25,TR_SEGVN_GETPAGE = 26,TR_ANON_GETPAGE = 27,TR_ANON_PRIVATE = 28,TR_SEGKMEM_ALLOC = 29,TR_SWAP_ALLOC = 30,TR_PVN_READ_KLUSTER = 31,TR_PVN_GETDIRTY = 32,TR_PAGE_CREATE_START = 33,TR_PAGE_CREATE_TOOBIG = 34,TR_PAGE_CREATE_NOMEM = 35,TR_PAGE_CREATE_SUCCESS = 36,TR_PAGE_CREATE_SLEEP_START = 37,TR_PAGE_CREATE_SLEEP_END = 38,TR_PAGE_CREATE_ALLOC = 39,TR_PAGE_FREE_FREE = 40,TR_PAGE_FREE_CACHE_HEAD = 41,TR_PAGE_FREE_CACHE_TAIL = 42,TR_PAGE_UNFREE_FREE = 43,TR_PAGE_UNFREE_CACHE = 44,TR_PAGE_DESTROY = 45,TR_PAGE_HASHIN = 46,TR_PAGE_HASHOUT = 47,TR_ANON_PROC = 48,TR_ANON_SHM = 49,TR_ANON_TMPFS = 50,TR_ANON_SWAP = 51,TR_ANON_EXEC = 52,TR_ANON_SEGKP = 53,TR_SAMPLE_REF = 54,TR_SAMPLE_MOD = 55,TR_SAMPLE_WS_START = 56,TR_SAMPLE_WS_END = 57,TR_KAS_INFO = 58,TR_AS_INFO = 59,TR_SEG_INFO = 60,TR_PAGE_RENAME = 61,TR_SWAP_RENAME = 62,TR_PROC_EXEC = 0,TR_PROC_EXIT = 1,TR_PROC_FORK = 2,TR_EXECMAP_PREREAD = 3,TR_EXECMAP_NO_PREREAD = 4,TR_SWAPIN = 0,TR_SWAPOUT = 1,TR_RUNIN = 2,TR_RUNOUT = 3,TR_CHOOSE_SWAPOUT = 4,TR_CHOOSE_SWAPIN = 5,TR_SOFTSWAP = 6,TR_HARDSWAP = 7,TR_DESPERATE = 8,TR_HIGH_DEFICIT = 9,TR_SWAPIN_VALUES = 10,TR_UNLOAD = 11,TR_SWAPOUT_LWP = 12,TR_SWAPQ_LWP = 13,TR_SWAPQ_PROC = 14,TR_RW_ENTER_RD_START = 0,TR_RW_ENTER_RD_END = 1,TR_RW_ENTER_WR_START = 2,TR_RW_ENTER_WR_END = 3,TR_RW_EXIT_START = 4,TR_RW_EXIT_END = 5,TR_BCOPY_START = 0,TR_KCOPY_START = 1,TR_PGCOPY_START = 2,TR_COPYOUT_START = 3,TR_COPYIN_START = 4,TR_COPY_END = 5,TR_COPY_FAULT = 6,TR_COPYOUT_FAULT = 7,TR_COPYIN_FAULT = 8,TR_COPYIN_NOERR_START = 9,TR_COPYOUT_NOERR_START = 10,TR_KMEM_ALLOC_START = 0,TR_KMEM_ALLOC_END = 1,TR_KMEM_ZALLOC_START = 2,TR_KMEM_ZALLOC_END = 3,TR_KMEM_FREE_START = 4,TR_KMEM_FREE_END = 5,TR_KMEM_CACHE_ALLOC_START = 12,TR_KMEM_CACHE_ALLOC_END = 13,TR_KMEM_CACHE_FREE_START = 14,TR_KMEM_CACHE_FREE_END = 15,TR_KMEM_SLAB_CREATE_START = 16,TR_KMEM_SLAB_CREATE_END = 17,TR_KMEM_SLAB_DESTROY_START = 18,TR_KMEM_SLAB_DESTROY_END = 19,TR_KMEM_GETPAGES_START = 20,TR_KMEM_GETPAGES_END = 21,TR_KMEM_FREEPAGES_START = 22,TR_KMEM_FREEPAGES_END = 23,TR_KMEM_ASYNC_DISPATCH_START = 24,TR_KMEM_ASYNC_DISPATCH_END = 25,TR_KMEM_ASYNC_SERVICE_START = 26,TR_KMEM_ASYNC_SERVICE_END = 27,TR_KMEM_HASH_RESCALE_START = 28,TR_KMEM_HASH_RESCALE_END = 29,TR_STROPEN = 0,TR_STRCLOSE = 1,TR_STRCLEAN = 2,TR_STRREAD_ENTER = 3,TR_STRREAD_WAIT = 4,TR_STRREAD_DONE = 5,TR_STRREAD_AWAKE = 6,TR_STRRPUT_ENTER = 7,TR_STRRPUT_PROTERR = 8,TR_STRRPUT_WAKE = 9,TR_STRRPUT_WAKE2 = 10,TR_STRWSRV = 11,TR_IOCTL_ENTER = 12,TR_I_CANT_FIND = 13,TR_I_PUSH = 14,TR_I_POP = 15,TR_I_LINK = 16,TR_STPDOWN = 17,TR_I_UNLINK = 18,TR_STRDOIOCTL = 19,TR_STRDOIOCTL_WAIT = 20,TR_STRDOIOCTL_PUT = 21,TR_STRDOIOCTL_WAIT2 = 22,TR_STRDOIOCTL_ACK = 23,TR_STRSENDSIG = 24,TR_QATTACH_FLAGS = 25,TR_STRTIME = 26,TR_STR2TIME = 27,TR_STR3TIME = 28,TR_STRWAITQ_TIME = 31,TR_STRWAITQ_WAIT2 = 32,TR_STRWAITQ_INTR2 = 33,TR_STRWAITQ_WAKE2 = 34,TR_QRUN_START = 35,TR_QRUN_DONE = 36,TR_DQ_SERVICE = 37,TR_RMV_QP = 38,TR_QRUNSERVICE_START = 39,TR_BACKGROUND_DQ = 40,TR_BACKGROUND_DONE = 41,TR_SENDSIG = 42,TR_INSERTQ = 43,TR_REMOVEQ = 44,TR_DRAIN_SYNCQ_PUT = 45,TR_FILL_SYNCQ = 46,TR_CANPUT_IN = 47,TR_CANPUT_OUT = 48,TR_BCANPUT_IN = 49,TR_BCANPUT_OUT = 50,TR_STRWRITE_IN = 51,TR_STRWRITE_OUT = 52,TR_STRWRITE_WAIT = 53,TR_STRWRITE_WAKE = 54,TR_STRWRITE_PUT = 55,TR_STRWRITE_RESID = 56,TR_STRPUTMSG_IN = 57,TR_STRPUTMSG_WAIT = 58,TR_STRPUTMSG_WAKE = 59,TR_STRPUTMSG_OUT = 60,TR_QENABLE = 61,TR_QRUNFLAG = 62,TR_RUNQUEUES = 63,TR_QRUN_DQ = 64,TR_QRUNSERVICE_END = 65,TR_BACKGROUND_AWAKE = 66,TR_QRUN_LEAVES = 67,TR_PUT_START = 68,TR_PUT_END = 69,TR_PUTNEXT_START = 70,TR_PUTNEXT_END = 71,TR_DRAIN_SYNCQ_START = 72,TR_DRAIN_SYNCQ_END = 73,TR_STRGETMSG_ENTER = 74,TR_STRGETMSG_WAIT = 75,TR_STRGETMSG_DONE = 76,TR_STRGETMSG_AWAKE = 77,TR_KSTRGETMSG_ENTER = 78,TR_KSTRGETMSG_WAIT = 79,TR_KSTRGETMSG_DONE = 80,TR_KSTRGETMSG_AWAKE = 81,TR_KSTRPUTMSG_IN = 82,TR_KSTRPUTMSG_WAIT = 83,TR_KSTRPUTMSG_WAKE = 84,TR_KSTRPUTMSG_OUT = 85,TR_CANPUTNEXT_IN = 86,TR_CANPUTNEXT_OUT = 87,TR_MI_TIMER_RSRV_IN = 0,TR_MI_TIMER_RSRV_OUT = 1,TR_MI_TIMER_FIRE = 2,TR_MCOPYMSG = 3,TR_SOCKMOD_RPUT_IN = 0,TR_SOCKMOD_RPUT_OUT = 1,TR_SOCKMOD_WPUT_IN = 2,TR_SOCKMOD_WPUT_OUT = 3,TR_SOCKMOD_RSRV_IN = 4,TR_SOCKMOD_RSRV_OUT = 5,TR_SOCKMOD_WSRV_IN = 6,TR_SOCKMOD_WSRV_OUT = 7,TR_TCP_OPEN = 0,TR_TCP_CLOSE = 1,TR_TCP_RPUT_IN = 2,TR_TCP_RPUT_OUT = 3,TR_TCP_WPUT_IN = 4,TR_TCP_WPUT_OUT = 5,TR_TCP_RSRV_IN = 6,TR_TCP_RSRV_OUT = 7,TR_TCP_WSRV_IN = 8,TR_TCP_WSRV_OUT = 9,TR_TCP_WPUT_SLOW_IN = 10,TR_TCP_WPUT_SLOW_OUT = 11,TR_TCP_RPUT_SLOW_IN = 12,TR_TCP_RPUT_SLOW_OUT = 13,TR_UDP_OPEN = 0,TR_UDP_CLOSE = 1,TR_UDP_RPUT_START = 2,TR_UDP_RPUT_END = 3,TR_UDP_WPUT_START = 4,TR_UDP_WPUT_END = 5,TR_UDP_WPUT_OTHER_START = 6,TR_UDP_WPUT_OTHER_END = 7,TR_IP_OPEN = 0,TR_IP_CLOSE = 1,TR_IP_RPUT_START = 2,TR_IP_RPUT_END = 3,TR_IP_WPUT_START = 4,TR_IP_WPUT_END = 5,TR_IP_WSRV_START = 6,TR_IP_WSRV_END = 7,TR_IP_LRPUT_START = 8,TR_IP_LRPUT_END = 9,TR_IP_LWPUT_START = 10,TR_IP_LWPUT_END = 11,TR_IP_RPUT_LOCL_START = 12,TR_IP_RPUT_LOCL_END = 13,TR_IP_RPUT_LOCL_ERR = 14,TR_IP_RSRV_START = 15,TR_IP_RSRV_END = 16,TR_IP_CKSUM_START = 17,TR_IP_CKSUM_END = 18,TR_IP_CKSUM_COPY_START = 19,TR_IP_CKSUM_COPY_END = 20,TR_IP_WPUT_IRE_START = 21,TR_IP_WPUT_IRE_END = 22,TR_IP_WPUT_FRAG_START = 23,TR_IP_WPUT_FRAG_END = 24,TR_IP_WPUT_LOCAL_START = 25,TR_IP_WPUT_LOCAL_END = 26,TR_ARP_OPEN = 0,TR_ARP_CLOSE = 1,TR_ARP_RPUT_START = 2,TR_ARP_RPUT_END = 3,TR_ARP_WPUT_START = 4,TR_ARP_WPUT_END = 5,TR_ARP_WSRV_START = 6,TR_ARP_WSRV_END = 7,TR_LE_OPEN = 0,TR_LE_CLOSE = 1,TR_LE_WPUT_START = 2,TR_LE_WPUT_END = 3,TR_LE_WSRV_START = 4,TR_LE_WSRV_END = 5,TR_LE_START_START = 6,TR_LE_START_END = 7,TR_LE_INTR_START = 8,TR_LE_INTR_END = 9,TR_LE_READ_START = 10,TR_LE_READ_END = 11,TR_LE_SENDUP_START = 12,TR_LE_SENDUP_END = 13,TR_LE_ADDUDIND_START = 14,TR_LE_ADDUDIND_END = 15,TR_LE_GETBUF_START = 16,TR_LE_GETBUF_END = 17,TR_LE_FREEBUF_START = 18,TR_LE_FREEBUF_END = 19,TR_LE_PROTO_START = 20,TR_LE_PROTO_END = 21,TR_LE_INIT_START = 22,TR_LE_INIT_END = 23,TR_LE_PROTO_IN = 24,TR_LE_PROTO_OUT = 25,TR_QE_OPEN = 0,TR_QE_CLOSE = 1,TR_QE_WPUT_START = 2,TR_QE_WPUT_END = 3,TR_QE_WSRV_START = 4,TR_QE_WSRV_END = 5,TR_QE_START_START = 6,TR_QE_START_END = 7,TR_QE_INTR_START = 8,TR_QE_INTR_END = 9,TR_QE_READ_START = 10,TR_QE_READ_END = 11,TR_QE_SENDUP_START = 12,TR_QE_SENDUP_END = 13,TR_QE_ADDUDIND_START = 14,TR_QE_ADDUDIND_END = 15,TR_QE_GETBUF_START = 16,TR_QE_GETBUF_END = 17,TR_QE_FREEBUF_START = 18,TR_QE_FREEBUF_END = 19,TR_QE_PROTO_START = 20,TR_QE_PROTO_END = 21,TR_QE_INIT_START = 22,TR_QE_INIT_END = 23,TR_QE_PROTO_IN = 24,TR_QE_PROTO_OUT = 25,TR_BE_OPEN = 0,TR_BE_CLOSE = 1,TR_BE_WPUT_START = 2,TR_BE_WPUT_END = 3,TR_BE_WSRV_START = 4,TR_BE_WSRV_END = 5,TR_BE_START_START = 6,TR_BE_START_END = 7,TR_BE_INTR_START = 8,TR_BE_INTR_END = 9,TR_BE_READ_START = 10,TR_BE_READ_END = 11,TR_BE_SENDUP_START = 12,TR_BE_SENDUP_END = 13,TR_BE_ADDUDIND_START = 14,TR_BE_ADDUDIND_END = 15,TR_BE_GETBUF_START = 16,TR_BE_GETBUF_END = 17,TR_BE_FREEBUF_START = 18,TR_BE_FREEBUF_END = 19,TR_BE_PROTO_START = 20,TR_BE_PROTO_END = 21,TR_BE_INIT_START = 22,TR_BE_INIT_END = 23,TR_BE_PROTO_IN = 24,TR_BE_PROTO_OUT = 25,TR_AE_OPEN = 0,TR_AE_CLOSE = 1,TR_AE_WPUT_START = 2,TR_AE_WPUT_END = 3,TR_AE_WSRV_START = 4,TR_AE_WSRV_END = 5,TR_AE_START_START = 6,TR_AE_START_END = 7,TR_AE_INTR_START = 8,TR_AE_INTR_END = 9,TR_AE_READ_START = 10,TR_AE_READ_END = 11,TR_AE_SENDUP_START = 12,TR_AE_SENDUP_END = 13,TR_AE_ADDUDIND_START = 14,TR_AE_ADDUDIND_END = 15,TR_AE_GETBUF_START = 16,TR_AE_GETBUF_END = 17,TR_AE_FREEBUF_START = 18,TR_AE_FREEBUF_END = 19,TR_AE_PROTO_START = 20,TR_AE_PROTO_END = 21,TR_AE_INIT_START = 22,TR_AE_INIT_END = 23,TR_AE_PROTO_IN = 24,TR_AE_PROTO_OUT = 25,TR_PHYSIO_START = 0,TR_PHYSIO_LOCK_START = 1,TR_PHYSIO_LOCK_END = 2,TR_PHYSIO_UNLOCK_START = 3,TR_PHYSIO_UNLOCK_END = 4,TR_PHYSIO_GETBUF_START = 5,TR_PHYSIO_GETBUF_END = 6,TR_PHYSIO_END = 7,TR_PHYSIO_AS_LOCK_START = 8,TR_PHYSIO_SEG_LOCK_START = 9,TR_PHYSIO_SEG_LOCK_END = 10,TR_PHYSIO_AS_FAULT_START = 11,TR_PHYSIO_AS_LOCK_END = 12,TR_PHYSIO_AS_UNLOCK_START = 13,TR_PHYSIO_SEG_UNLOCK_START = 14,TR_PHYSIO_AS_UNLOCK_END = 15,TR_PHYSIO_SEGVN_START = 16,TR_PHYSIO_SEGVN_UNLOCK_END = 17,TR_PHYSIO_SEGVN_HIT_END = 18,TR_PHYSIO_SEGVN_FILL_END = 19,TR_PHYSIO_SEGVN_MISS_END = 20,TR_META_WRITE_START = 0,TR_META_WRITE_END = 1,TR_META_READ_START = 2,TR_META_READ_END = 3,TR_META_STRATEGY_START = 4,TR_META_STRATEGY_END = 5,TR_STRIPE_STRATEGY_START = 7,TR_STRIPE_STRATEGY_END = 8,TR_STRIPE_STRATEGY_CHKBUF_START = 9,TR_STRIPE_STRATEGY_CHKBUF_END = 10,TR_STRIPE_STRATEGY_BPMAPIN_START = 11,TR_STRIPE_STRATEGY_BPMAPIN_END = 12,TR_STRIPE_STRATEGY_ALLOC_START = 13,TR_STRIPE_STRATEGY_ALLOC_END = 14,TR_STRIPE_STRATEGY_MAPBUF_START = 15,TR_STRIPE_STRATEGY_MAPBUF_END = 16,TR_STRIPE_STRATEGY_STRIPE_START = 17,TR_STRIPE_STRATEGY_STRIPE_END = 18,TR_STRIPE_STRATEGY_CALLDRV_START = 19,TR_STRIPE_STRATEGY_CALLDRV_END = 20,TR_IPI_START = 0,TR_IPI_RESET_SLAVE = 1,TR_IPI_RESET_CHAN = 2,TR_IPI_RESET_BOARD = 3,TR_IPI_TEST_BOARD = 4,TR_IPI_GET_XFER_MODE = 5,TR_IPI_SET_XFER_MODE = 6,TR_IPI_INTR_1 = 7,TR_IPI_INTR_2 = 8,TR_IPI_POLL_1 = 9,TR_IPI_POLL_2 = 10,TR_IPI_RETRY = 11,TR_IPI_IS_CMD = 12,TR_IPI_INTR_OK = 13,TR_IPI_INTR_RESP = 14,TR_IPI_INTR_ERR = 15,TR_PID_ON = 0,TR_PID_OFF = 1,TR_GROUP_ON = 2,TR_GROUP_OFF = 3,TR_CONTROL_TTY = 4,TR_ACTIVE_CHAIN = 5,TR_S5_SYNCIP_START = 0,TR_S5_SYNCIP_END = 1,TR_S5_OPEN = 2,TR_S5_CLOSE = 3,TR_S5_READ_START = 4,TR_S5_READ_END = 5,TR_S5_WRITE_START = 6,TR_S5_WRITE_END = 7,TR_S5_RWIP_START = 8,TR_S5_RWIP_END = 9,TR_S5_GETATTR_START = 10,TR_S5_GETATTR_END = 11,TR_S5_SETATTR_START = 12,TR_S5_SETATTR_END = 13,TR_S5_ACCESS_START = 14,TR_S5_ACCESS_END = 15,TR_S5_READLINK_START = 16,TR_S5_READLINK_END = 17,TR_S5_FSYNC_START = 18,TR_S5_FSYNC_END = 19,TR_S5_LOOKUP_START = 20,TR_S5_LOOKUP_END = 21,TR_S5_CREATE_START = 22,TR_S5_CREATE_END = 23,TR_S5_REMOVE_START = 24,TR_S5_REMOVE_END = 25,TR_S5_LINK_START = 26,TR_S5_LINK_END = 27,TR_S5_RENAME_START = 28,TR_S5_RENAME_END = 29,TR_S5_MKDIR_START = 30,TR_S5_MKDIR_END = 31,TR_S5_RMDIR_START = 32,TR_S5_RMDIR_END = 33,TR_S5_READDIR_START = 34,TR_S5_READDIR_END = 35,TR_S5_SYMLINK_START = 36,TR_S5_SYMLINK_END = 37,TR_S5_GETPAGE_START = 38,TR_S5_GETPAGE_END = 39,TR_S5_PUTPAGE_START = 40,TR_S5_PUTPAGE_END = 41,TR_S5_PUTAPAGE_START = 42,TR_S5_PUTAPAGE_END = 43,TR_S5_STARTIO_START = 44,TR_S5_STARTIO_END = 45,TR_S5_MAP_START = 46,TR_S5_MAP_END = 47,TR_ESPSVC_ACTION_CALL = 0,TR_ESPSVC_START = 1,TR_ESPSVC_END = 2,TR_ESP_CALLBACK_START = 3,TR_ESP_CALLBACK_END = 4,TR_ESP_DOPOLL_START = 5,TR_ESP_DOPOLL_END = 6,TR_ESP_FINISH_START = 7,TR_ESP_FINISH_END = 8,TR_ESP_FINISH_SELECT_START = 9,TR_ESP_FINISH_SELECT_RESET1_END = 10,TR_ESP_FINISH_SELECT_RETURN1_END = 11,TR_ESP_FINISH_SELECT_RETURN2_END = 12,TR_ESP_FINISH_SELECT_FINISH_END = 13,TR_ESP_FINISH_SELECT_ACTION1_END = 14,TR_ESP_FINISH_SELECT_ACTION2_END = 15,TR_ESP_FINISH_SELECT_RESET2_END = 16,TR_ESP_FINISH_SELECT_RESET3_END = 17,TR_ESP_FINISH_SELECT_ACTION3_END = 18,TR_ESP_HANDLE_CLEARING_START = 19,TR_ESP_HANDLE_CLEARING_END = 20,TR_ESP_HANDLE_CLEARING_FINRST_END = 21,TR_ESP_HANDLE_CLEARING_RETURN1_END = 22,TR_ESP_HANDLE_CLEARING_ABORT_END = 23,TR_ESP_HANDLE_CLEARING_LINKED_CMD_END = 24,TR_ESP_HANDLE_CLEARING_RETURN2_END = 25,TR_ESP_HANDLE_CLEARING_RETURN3_END = 26,TR_ESP_HANDLE_CMD_START_START = 27,TR_ESP_HANDLE_CMD_START_END = 28,TR_ESP_HANDLE_CMD_START_ABORT_CMD_END = 29,TR_ESP_HANDLE_CMD_DONE_START = 30,TR_ESP_HANDLE_CMD_DONE_END = 31,TR_ESP_HANDLE_CMD_DONE_ABORT1_END = 32,TR_ESP_HANDLE_CMD_DONE_ABORT2_END = 33,TR_ESP_HANDLE_C_CMPLT_START = 34,TR_ESP_HANDLE_C_CMPLT_FINRST_END = 35,TR_ESP_HANDLE_C_CMPLT_RETURN1_END = 36,TR_ESP_HANDLE_C_CMPLT_ACTION1_END = 37,TR_ESP_HANDLE_C_CMPLT_ACTION2_END = 38,TR_ESP_HANDLE_C_CMPLT_ACTION3_END = 39,TR_ESP_HANDLE_C_CMPLT_ACTION4_END = 40,TR_ESP_HANDLE_C_CMPLT_RETURN2_END = 41,TR_ESP_HANDLE_C_CMPLT_ACTION5_END = 42,TR_ESP_HANDLE_C_CMPLT_PHASEMANAGE_END = 43,TR_ESP_HANDLE_DATA_START = 44,TR_ESP_HANDLE_DATA_END = 45,TR_ESP_HANDLE_DATA_ABORT1_END = 46,TR_ESP_HANDLE_DATA_ABORT2_END = 47,TR_ESP_HANDLE_DATA_ABORT3_END = 48,TR_ESP_HANDLE_DATA_DONE_START = 49,TR_ESP_HANDLE_DATA_DONE_END = 50,TR_ESP_HANDLE_DATA_DONE_RESET_END = 51,TR_ESP_HANDLE_DATA_DONE_PHASEMANAGE_END = 52,TR_ESP_HANDLE_DATA_DONE_ACTION1_END = 53,TR_ESP_HANDLE_DATA_DONE_ACTION2_END = 54,TR_ESP_HANDLE_MORE_MSGIN_START = 55,TR_ESP_HANDLE_MORE_MSGIN_RETURN1_END = 56,TR_ESP_HANDLE_MORE_MSGIN_RETURN2_END = 57,TR_ESP_HANDLE_MSG_IN_START = 58,TR_ESP_HANDLE_MSG_IN_END = 59,TR_ESP_HANDLE_MSG_IN_DONE_START = 60,TR_ESP_HANDLE_MSG_IN_DONE_FINRST_END = 61,TR_ESP_HANDLE_MSG_IN_DONE_RETURN1_END = 62,TR_ESP_HANDLE_MSG_IN_DONE_PHASEMANAGE_END = 63,TR_ESP_HANDLE_MSG_IN_DONE_SNDMSG_END = 64,TR_ESP_HANDLE_MSG_IN_DONE_ACTION_END = 65,TR_ESP_HANDLE_MSG_IN_DONE_RETURN2_END = 66,TR_ESP_HANDLE_MSG_OUT_START = 67,TR_ESP_HANDLE_MSG_OUT_END = 68,TR_ESP_HANDLE_MSG_OUT_PHASEMANAGE_END = 69,TR_ESP_HANDLE_MSG_OUT_DONE_START = 70,TR_ESP_HANDLE_MSG_OUT_DONE_END = 71,TR_ESP_HANDLE_MSG_OUT_DONE_FINISH_END = 72,TR_ESP_HANDLE_MSG_OUT_DONE_PHASEMANAGE_END = 73,TR_ESP_HANDLE_SELECTION_START = 74,TR_ESP_HANDLE_SELECTION_END = 75,TR_ESP_HANDLE_UNKNOWN_START = 76,TR_ESP_HANDLE_UNKNOWN_END = 77,TR_ESP_HANDLE_UNKNOWN_INT_DISCON_END = 78,TR_ESP_HANDLE_UNKNOWN_PHASE_DATA_END = 79,TR_ESP_HANDLE_UNKNOWN_PHASE_MSG_OUT_END = 80,TR_ESP_HANDLE_UNKNOWN_PHASE_MSG_IN_END = 81,TR_ESP_HANDLE_UNKNOWN_PHASE_STATUS_END = 82,TR_ESP_HANDLE_UNKNOWN_PHASE_CMD_END = 83,TR_ESP_HANDLE_UNKNOWN_RESET_END = 84,TR_ESP_HDATAD_START = 85,TR_ESP_HDATAD_END = 86,TR_ESP_HDATA_START = 87,TR_ESP_HDATA_END = 88,TR_ESP_ISTART_START = 89,TR_ESP_ISTART_END = 90,TR_ESP_PHASEMANAGE_CALL = 91,TR_ESP_PHASEMANAGE_START = 92,TR_ESP_PHASEMANAGE_END = 93,TR_ESP_POLL_START = 94,TR_ESP_POLL_END = 95,TR_ESP_RECONNECT_START = 96,TR_ESP_RECONNECT_F1_END = 97,TR_ESP_RECONNECT_RETURN1_END = 98,TR_ESP_RECONNECT_F2_END = 99,TR_ESP_RECONNECT_PHASEMANAGE_END = 100,TR_ESP_RECONNECT_F3_END = 101,TR_ESP_RECONNECT_RESET1_END = 102,TR_ESP_RECONNECT_RESET2_END = 103,TR_ESP_RECONNECT_RESET3_END = 104,TR_ESP_RECONNECT_SEARCH_END = 105,TR_ESP_RECONNECT_RESET4_END = 106,TR_ESP_RECONNECT_RETURN2_END = 107,TR_ESP_RECONNECT_RESET5_END = 108,TR_ESP_RUNPOLL_START = 109,TR_ESP_RUNPOLL_END = 110,TR_ESP_SCSI_IMPL_PKTALLOC_START = 111,TR_ESP_SCSI_IMPL_PKTALLOC_END = 112,TR_ESP_SCSI_IMPL_PKTFREE_START = 113,TR_ESP_SCSI_IMPL_PKTFREE_END = 114,TR_ESP_STARTCMD_START = 115,TR_ESP_STARTCMD_END = 116,TR_ESP_STARTCMD_RE_SELECTION_END = 117,TR_ESP_STARTCMD_ALLOC_TAG1_END = 118,TR_ESP_STARTCMD_ALLOC_TAG2_END = 119,TR_ESP_STARTCMD_PREEMPT_CALL = 120,TR_ESP_START_START = 121,TR_ESP_START_END = 122,TR_ESP_START_PREPARE_PKT_END = 123,TR_ESP_WATCH_START = 124,TR_ESP_WATCH_END = 125,TR_MAKE_SD_CMD_START = 126,TR_MAKE_SD_CMD_END = 127,TR_MAKE_SD_CMD_NO_PKT_ALLOCATED1_END = 128,TR_MAKE_SD_CMD_NO_PKT_ALLOCATED2_END = 129,TR_MAKE_SD_CMD_G0_START = 130,TR_MAKE_SD_CMD_G0_END = 131,TR_MAKE_SD_CMD_G0_SBUF_START = 132,TR_MAKE_SD_CMD_G0_SBUF_END = 133,TR_MAKE_SD_CMD_G1_START = 134,TR_MAKE_SD_CMD_G1_END = 135,TR_MAKE_SD_CMD_INIT_PKT_START = 136,TR_MAKE_SD_CMD_INIT_PKT_END = 137,TR_MAKE_SD_CMD_INIT_PKT_SBUF_START = 138,TR_MAKE_SD_CMD_INIT_PKT_SBUF_END = 139,TR_MAKE_SD_CMD_RA_START = 140,TR_MAKE_SD_CMD_RA_END = 141,TR_SDDONE_BIODONE_CALL = 142,TR_SDDONE_START = 143,TR_SDDONE_END = 144,TR_SDINTR_START = 145,TR_SDINTR_END = 146,TR_SDINTR_COMMAND_DONE_END = 147,TR_SDINTR_QUE_COMMAND_END = 148,TR_SDINTR_QUE_FAILED_END = 149,TR_SDRUNOUT_START = 150,TR_SDRUNOUT_END = 151,TR_SDSTART_START = 152,TR_SDSTART_END = 153,TR_SDSTART_NO_WORK_END = 154,TR_SDSTART_NO_RESOURCES_END = 155,TR_SDSTRATEGY_START = 156,TR_SDSTRATEGY_END = 157,TR_SDSTRATEGY_DISKSORT_START = 158,TR_SDSTRATEGY_DISKSORT_END = 159,TR_SDSTRATEGY_SDSTART_START = 160,TR_SDSTRATEGY_SDSTART_END = 161,TR_SD_CHECK_ERROR_START = 162,TR_SD_CHECK_ERROR_QUE_COMMAND_END = 163,TR_SD_CHECK_ERROR_END = 164,TR__ESP_START_START = 165,TR__ESP_START_END = 166,TR_ESP_INIT_CMD_START = 167,TR_ESP_INIT_CMD_END = 168,TR_ESP_EMPTY_STARTQ_START = 169,TR_ESP_EMPTY_STARTQ_END = 170,TR_SDSTRATEGY_SMALL_WINDOW_START = 171,TR_SDSTRATEGY_SMALL_WINDOW_END = 172,TR_SDSTART_SMALL_WINDOW_START = 173,TR_SDSTART_SMALL_WINDOW_END = 174,TR_ESP_USTART_START = 175,TR_ESP_USTART_END = 176,TR_ESP_USTART_NOT_FOUND_END = 177,TR_ESP_USTART_DEFAULT_END = 178,TR_ESP_PREPARE_PKT_START = 179,TR_ESP_PREPARE_PKT_TRAN_BADPKT_END = 180,TR_ESP_PREPARE_PKT_TRAN_ACCEPT_END = 181,TR_ESP_ALLOC_TAG_START = 182,TR_ESP_ALLOC_TAG_END = 183,TR_ESP_CALL_PKT_COMP_START = 184,TR_ESP_CALL_PKT_COMP_END = 185,TR_ESP_CALL_PKT_COMP_RETURN1_END = 186,TR_ESP_CALL_PKT_COMP_RETURN2_END = 187,TR_ESP_POLL_LOOP_START = 188,TR_ESP_POLL_LOOP_END = 189,TR_ESP_POLL_SUN4D_START = 190,TR_ESP_POLL_SUN4D_END = 191,TR_ESP_SCSI_IMPL_DMAFREE_START = 192,TR_ESP_SCSI_IMPL_DMAFREE_END = 193,TR_SDWRITE_START = 194,TR_SDWRITE_END = 195,TR_SDREAD_START = 196,TR_SDREAD_END = 197,TR_ISP_SCSI_GETCAP_START = 1,TR_ISP_SCSI_GETCAP_END = 2,TR_ISP_SCSI_SETCAP_START = 3,TR_ISP_SCSI_SETCAP_END = 4,TR_ISP_SCAN_TIMEOUT_START = 5,TR_ISP_SCAN_TIMEOUT_END = 6,TR_ISP_SCSI_START_START = 7,TR_ISP_SCSI_START_DMA_START = 8,TR_ISP_SCSI_START_DMA_END = 9,TR_ISP_SCSI_START_END = 10,TR_ISP_I_START_CMD_START = 11,TR_ISP_I_START_CMD_Q_FULL_END = 12,TR_ISP_I_START_CMD_SLOT_ALLOC_START = 13,TR_ISP_I_START_CMD_SLOT_ALLOC_END = 14,TR_ISP_I_START_CMD_END = 15,TR_ISP_I_RUN_POLLED_CMD_START = 16,TR_ISP_I_RUN_POLLED_CMD_END = 17,TR_ISP_INTR_START = 18,TR_ISP_INTR_NO_INTR_END = 19,TR_ISP_INTR_EVENT_END = 20,TR_ISP_INTR_Q_START = 21,TR_ISP_INTR_INVALID_END = 22,TR_ISP_INTR_PKT_START = 23,TR_ISP_INTR_PKT_END = 24,TR_ISP_INTR_Q_END = 25,TR_ISP_INTR_END = 26,TR_ISP_I_FLAG_EVENT_START = 27,TR_ISP_I_FLAG_EVENT_IGNORE_END = 28,TR_ISP_I_FLAG_EVENT_END = 29,TR_ISP_I_EVENT_START = 30,TR_ISP_I_EVENT_RETURN_END = 31,TR_ISP_I_EVENT_END = 32,TR_ISP_I_ASYNCH_EVENT_START = 33,TR_ISP_I_ASYNCH_EVENT_END = 34,TR_ISP_I_CMD_EVENT_START = 35,TR_ISP_I_CMD_EVENT_END = 36,TR_ISP_I_RESPONSE_ERROR_START = 37,TR_ISP_I_RESPONSE_ERROR_END = 38,TR_ISP_I_SEND_CMD_START = 39,TR_ISP_I_SEND_CMD_END = 40,TR_ISP_I_CALLBACK_START = 41,TR_ISP_I_CALLBACK_END = 42,TR_ISP_I_WATCH_START = 43,TR_ISP_I_WATCH_END = 44,TR_ISP_I_TIMEOUT_START = 45,TR_ISP_I_TIMEOUT_END = 46,TR_ISP_I_QFLUSH_START = 47,TR_ISP_I_QFLUSH_END = 48,TR_ISP_I_SET_MARKER_START = 49,TR_ISP_I_SET_MARKER_END = 50,TR_ISP_SCSI_ABORT_START = 51,TR_ISP_SCSI_ABORT_FALSE_END = 52,TR_ISP_SCSI_ABORT_END = 53,TR_ISP_SCSI_RESET_START = 54,TR_ISP_SCSI_RESET_FALSE_END = 55,TR_ISP_SCSI_RESET_END = 56,TR_ISP_I_RESET_INTERFACE_START = 57,TR_ISP_I_RESET_INTERFACE_END = 58,TR_ISP_I_CALL_PKT_COMP_START = 59,TR_ISP_I_CALL_PKT_COMP_END = 60,TR_ISP_I_EMPTY_WAITQ_START = 61,TR_ISP_I_EMPTY_WAITQ_END = 62,TR_ISP_I_INIT_CMD_START = 63,TR_ISP_SCSI_START_BIG_CDB = 64,TR_ISP_I_INIT_CMD_END = 65,TR_ISP_I_START_CMD_AFTER_SYNC = 66,TR_ISP_INTR_LOOP_START = 67,TR_ISP_INTR_LOOP_END = 68,TR_ISP_INTR_ASYNC_END = 69,TR_ISP_INTR_MBOX_END = 70,TR_ISP_INTR_NO_RESP_END = 71,TR_ISP_INTR_AGAIN = 72,TR_ISP_I_MBOX_CMD_COMPLETE_START = 74,TR_ISP_I_MBOX_CMD_COMPLETE_END = 75,TR_ISP_I_MBOX_CMD_START_START = 76,TR_ISP_I_MBOX_CMD_START_END = 77,TR_ISP_SCSI_PKTALLOC_START = 78,TR_ISP_SCSI_PKTALLOC_END = 79,TR_ISP_SCSI_PKTFREE_START = 80,TR_ISP_SCSI_PKTFREE_DONE = 81,TR_ISP_SCSI_PKTFREE_END = 82,TR_ISP_SCSI_DMAGET_START = 83,TR_ISP_SCSI_DMAGET_ERROR_END = 84,TR_ISP_SCSI_DMAGET_END = 85,TR_ISP_SCSI_DMAFREE_START = 86,TR_ISP_SCSI_DMAFREE_END = 87,TR_ISP_I_RESET_INIT_CHIP_START = 88,TR_ISP_I_RESET_INIT_CHIP_END = 89,TR_FASSVC_ACTION_CALL = 1,TR_FASSVC_END = 2,TR_FASSVC_START = 3,TR_FAS_ALLOC_TAG_END = 4,TR_FAS_ALLOC_TAG_START = 5,TR_FAS_DOPOLL_END = 6,TR_FAS_DOPOLL_START = 7,TR_FAS_EMPTY_WAITQ_END = 8,TR_FAS_EMPTY_WAITQ_START = 9,TR_FAS_FINISH_END = 10,TR_FAS_FINISH_SELECT_ACTION3_END = 11,TR_FAS_FINISH_SELECT_FINISH_END = 12,TR_FAS_FINISH_SELECT_RESET1_END = 13,TR_FAS_FINISH_SELECT_RESET2_END = 14,TR_FAS_FINISH_SELECT_RESET3_END = 15,TR_FAS_FINISH_SELECT_START = 16,TR_FAS_FINISH_START = 17,TR_FAS_HANDLE_CLEARING_ABORT_END = 18,TR_FAS_HANDLE_CLEARING_END = 19,TR_FAS_HANDLE_CLEARING_RETURN1_END = 20,TR_FAS_HANDLE_CLEARING_RETURN3_END = 21,TR_FAS_HANDLE_CLEARING_START = 22,TR_FAS_HANDLE_CMD_DONE_ABORT1_END = 23,TR_FAS_HANDLE_CMD_DONE_END = 24,TR_FAS_HANDLE_CMD_DONE_START = 25,TR_FAS_HANDLE_CMD_START_END = 26,TR_FAS_HANDLE_CMD_START_START = 27,TR_FAS_HANDLE_C_CMPLT_ACTION1_END = 28,TR_FAS_HANDLE_C_CMPLT_ACTION2_END = 29,TR_FAS_HANDLE_C_CMPLT_ACTION3_END = 30,TR_FAS_HANDLE_C_CMPLT_ACTION4_END = 31,TR_FAS_HANDLE_C_CMPLT_ACTION5_END = 32,TR_FAS_HANDLE_C_CMPLT_RETURN1_END = 33,TR_FAS_HANDLE_C_CMPLT_START = 34,TR_FAS_HANDLE_DATA_ABORT1_END = 35,TR_FAS_HANDLE_DATA_ABORT2_END = 36,TR_FAS_HANDLE_DATA_DONE_ACTION2_END = 37,TR_FAS_HANDLE_DATA_DONE_PHASEMANAGE_END = 38,TR_FAS_HANDLE_DATA_DONE_RESET_END = 39,TR_FAS_HANDLE_DATA_DONE_START = 40,TR_FAS_HANDLE_DATA_END = 41,TR_FAS_HANDLE_DATA_START = 42,TR_FAS_HANDLE_MORE_MSGIN_RETURN2_END = 43,TR_FAS_HANDLE_MORE_MSGIN_START = 44,TR_FAS_HANDLE_MSG_IN_DONE_ACTION_END = 45,TR_FAS_HANDLE_MSG_IN_DONE_RETURN2_END = 46,TR_FAS_HANDLE_MSG_IN_DONE_SNDMSG_END = 47,TR_FAS_HANDLE_MSG_IN_DONE_START = 48,TR_FAS_HANDLE_MSG_IN_END = 49,TR_FAS_HANDLE_MSG_IN_START = 50,TR_FAS_HANDLE_MSG_OUT_DONE_END = 51,TR_FAS_HANDLE_MSG_OUT_DONE_PHASEMANAGE_END = 52,TR_FAS_HANDLE_MSG_OUT_DONE_START = 53,TR_FAS_HANDLE_MSG_OUT_END = 54,TR_FAS_HANDLE_MSG_OUT_PHASEMANAGE_END = 55,TR_FAS_HANDLE_MSG_OUT_START = 56,TR_FAS_HANDLE_UNKNOWN_INT_DISCON_END = 57,TR_FAS_HANDLE_UNKNOWN_RESET_END = 58,TR_FAS_HANDLE_UNKNOWN_START = 59,TR_FAS_ISTART_END = 60,TR_FAS_ISTART_START = 61,TR_FAS_PHASEMANAGE_CALL = 62,TR_FAS_PHASEMANAGE_END = 63,TR_FAS_PHASEMANAGE_START = 64,TR_FAS_POLL_END = 65,TR_FAS_POLL_START = 66,TR_FAS_PREPARE_PKT_TRAN_ACCEPT_END = 67,TR_FAS_PREPARE_PKT_TRAN_BADPKT_END = 68,TR_FAS_RECONNECT_F2_END = 69,TR_FAS_RECONNECT_RESET5_END = 70,TR_FAS_RECONNECT_RETURN2_END = 71,TR_FAS_RECONNECT_START = 72,TR_FAS_RUNPOLL_END = 73,TR_FAS_RUNPOLL_START = 74,TR_FAS_SCSI_IMPL_DMAFREE_END = 75,TR_FAS_SCSI_IMPL_DMAFREE_START = 76,TR_FAS_SCSI_IMPL_PKTALLOC_END = 77,TR_FAS_SCSI_IMPL_PKTALLOC_START = 78,TR_FAS_SCSI_IMPL_PKTFREE_END = 79,TR_FAS_SCSI_IMPL_PKTFREE_START = 80,TR_FAS_STARTCMD_END = 81,TR_FAS_STARTCMD_START = 82,TR_FAS_START_END = 83,TR_FAS_START_PREPARE_PKT_END = 84,TR_FAS_START_START = 85,TR_FAS_USTART_END = 86,TR_FAS_USTART_NOT_FOUND_END = 87,TR_FAS_USTART_START = 88,TR_FAS_WATCH_END = 89,TR_FAS_SCSI_IMPL_DMAGET_END = 90,TR_FAS_SCSI_IMPL_DMAGET_START = 91,TR__FAS_START_END = 92,TR__FAS_START_START = 93,TR_FAS_RECONNECT_RETURN1_END = 94,TR_FAS_RECONNECT_PHASEMANAGE_END = 95,TR_FAS_RECONNECT_F3_END = 96,TR_FAS_HANDLE_UNKNOWN_PHASE_DATA_END = 97,TR_FAS_HANDLE_UNKNOWN_PHASE_MSG_OUT_END = 98,TR_FAS_HANDLE_UNKNOWN_PHASE_MSG_IN_END = 99,TR_FAS_HANDLE_UNKNOWN_PHASE_STATUS_END = 100,TR_FAS_HANDLE_UNKNOWN_PHASE_CMD_END = 101,TR_FAS_HANDLE_CLEARING_FINRST_END = 102,TR_FAS_HANDLE_CLEARING_RETURN2_END = 103,TR_FAS_HANDLE_DATA_DONE_ACTION1_END = 104,TR_FAS_HANDLE_C_CMPLT_FINRST_END = 105,TR_FAS_HANDLE_MORE_MSGIN_RETURN1_END = 106,TR_FAS_HANDLE_MSG_IN_DONE_FINRST_END = 107,TR_FAS_HANDLE_MSG_IN_DONE_RETURN1_END = 108,TR_FAS_HANDLE_MSG_IN_DONE_PHASEMANAGE_END = 109,TR_FAS_HANDLE_MSG_OUT_DONE_FINISH_END = 110,TR_FAS_EMPTY_CALLBACKQ_START = 111,TR_FAS_EMPTY_CALLBACKQ_END = 112,TR_FAS_CALL_PKT_COMP_START = 113,TR_FAS_CALL_PKT_COMP_END = 114,TR_LWP_CREATE_START = 0,TR_LWP_CREATE_END = 1,TR_LWP_EXIT_START = 2,TR_LWP_EXIT_END = 3,TR_LWP_SUSPEND_START = 4,TR_LWP_SUSPEND_END = 5,TR_LWP_CONTINUE_START = 6,TR_LWP_CONTINUE_END = 7,TR_LWP_CREATE_ASEGKP = 8,TR_LWP_CREATE_ATHRC = 9,TR_LWP_CREATE_ABZ = 10,TR_LWP_CONT_ASR = 11,TR_LWP_EXIT_OFFQ = 12,TR_SYS_LWP_CREATE_START = 0,TR_SYS_LWP_CREATE_END1 = 1,TR_SYS_LWP_CREATE_END2 = 2,TR_SYS_LWP_EXIT_START = 3,TR_SYS_LWP_EXIT_END = 4,TR_SYS_LWP_WAIT = 5,TR_SYS_LWP_SELF = 6,TR_SYS_LWP_SUSPEND_START = 7,TR_SYS_LWP_SUSPEND_END = 8,TR_SYS_LWP_CONTINUE_START = 9,TR_SYS_LWP_CONTINUE_END = 10,TR_SYS_LWP_MUTEX_LOCK = 11,TR_SYS_LWP_MUTEX_UNLOCK = 12,TR_SYS_LWP_COND_WAIT_START = 13,TR_SYS_LWP_COND_WAIT_END = 14,TR_SYS_LWP_COND_SIGNAL_START = 15,TR_SYS_LWP_COND_SIGNAL_END = 16,TR_SYS_LWP_COND_BROADCAST = 17,TR_SYS_LWP_KILL_START = 18,TR_SYS_LWP_KILL_END = 19,TR_SYS_LWP_SETPRIVATE = 20,TR_SYS_LWP_GETPRIVATE = 21,TR_SYS_LWP_ACOPYIN = 22,TR_SYS_LWP_ABCP = 23,TR_SYS_LWP_ALWPTOT = 24,TR_SYS_LWP_CONTINUE_AIDTOT = 25,TR_SYS_LWP_CR_WAIT = 26,TR_TIMEOUT = 0,TR_UNTIMEOUT = 1,TR_UNTIMEOUT_BOGUS_ID = 2,TR_UNTIMEOUT_EXECUTING = 3,TR_UNTIMEOUT_SELF = 4,TR_CALLOUT_START = 5,TR_CALLOUT_END = 6,TR_SPECFS_GETPAGE = 0,TR_SPECFS_GETAPAGE = 1,TR_SPECFS_PUTPAGE = 2,TR_SPECFS_PUTAPAGE = 3,TR_SPECFS_SEGMAP = 4,TR_SPECFS_OPEN = 5,TR_SPECFS_READ_START = 6,TR_SPECFS_READ_END = 7,TR_SPECFS_CDEV = 8,TR_SPECFS_WRITE_START = 9,TR_SPECFS_WRITE_END = 10,TR_TMPFS_LOOKUP = 0,TR_TMPFS_CREATE = 1,TR_TMPFS_REMOVE = 2,TR_TMPFS_RENAME = 3,TR_TMPFS_RWTMP_START = 4,TR_TMPFS_RWTMP_END = 5,TR_SWAPFS_OPEN = 0,TR_SWAPFS_CLOSE = 1,TR_SWAPFS_GETPAGE = 2,TR_SWAPFS_GETAPAGE = 3,TR_SWAPFS_PUTPAGE = 4,TR_SWAPFS_PUTAPAGE = 5,TR_UFS_SYNCIP_START = 0,TR_UFS_SYNCIP_END = 1,TR_UFS_OPEN = 2,TR_UFS_CLOSE = 4,TR_UFS_READ_START = 6,TR_UFS_READ_END = 7,TR_UFS_WRITE_START = 8,TR_UFS_WRITE_END = 9,TR_UFS_RWIP_START = 10,TR_UFS_RWIP_END = 11,TR_UFS_GETATTR_START = 12,TR_UFS_GETATTR_END = 13,TR_UFS_SETATTR_START = 14,TR_UFS_SETATTR_END = 15,TR_UFS_ACCESS_START = 16,TR_UFS_ACCESS_END = 17,TR_UFS_READLINK_START = 18,TR_UFS_READLINK_END = 19,TR_UFS_FSYNC_START = 20,TR_UFS_FSYNC_END = 21,TR_UFS_LOOKUP_START = 22,TR_UFS_LOOKUP_END = 23,TR_UFS_CREATE_START = 24,TR_UFS_CREATE_END = 25,TR_UFS_REMOVE_START = 26,TR_UFS_REMOVE_END = 27,TR_UFS_LINK_START = 28,TR_UFS_LINK_END = 29,TR_UFS_RENAME_START = 30,TR_UFS_RENAME_END = 31,TR_UFS_MKDIR_START = 32,TR_UFS_MKDIR_END = 33,TR_UFS_RMDIR_START = 34,TR_UFS_RMDIR_END = 35,TR_UFS_READDIR_START = 36,TR_UFS_READDIR_END = 37,TR_UFS_SYMLINK_START = 38,TR_UFS_SYMLINK_END = 39,TR_UFS_GETPAGE_START = 40,TR_UFS_GETPAGE_END = 41,TR_UFS_GETAPAGE_START = 42,TR_UFS_GETAPAGE_END = 43,TR_UFS_PUTPAGE_START = 44,TR_UFS_PUTPAGE_END = 45,TR_UFS_PUTAPAGE_START = 46,TR_UFS_PUTAPAGE_END = 47,TR_UFS_MAP_START = 48,TR_UFS_MAP_END = 49,TR_UFS_GETSECATTR_START = 50,TR_UFS_GETSECATTR_END = 51,TR_UFS_SETSECATTR_START = 52,TR_UFS_SETSECATTR_END = 53,TR_RFSCALL_START = 0,TR_RFSCALL_END = 1,TR_FHTOVP_START = 2,TR_FHTOVP_END = 3,TR_VOP_GETATTR_START = 100,TR_VOP_GETATTR_END = 101,TR_VOP_SETATTR_START = 102,TR_VOP_SETATTR_END = 103,TR_VOP_LOOKUP_START = 104,TR_VOP_LOOKUP_END = 105,TR_VOP_READLINK_START = 106,TR_VOP_READLINK_END = 107,TR_VOP_RWLOCK_START = 108,TR_VOP_RWLOCK_END = 109,TR_VOP_ACCESS_START = 110,TR_VOP_ACCESS_END = 111,TR_VOP_OPEN_START = 112,TR_VOP_OPEN_END = 113,TR_VOP_READ_START = 114,TR_VOP_READ_END = 115,TR_VOP_CLOSE_START = 116,TR_VOP_CLOSE_END = 117,TR_VOP_RWUNLOCK_START = 118,TR_VOP_RWUNLOCK_END = 119,TR_VOP_WRITE_START = 120,TR_VOP_WRITE_END = 121,TR_VOP_CREATE_START = 122,TR_VOP_CREATE_END = 123,TR_VOP_REMOVE_START = 124,TR_VOP_REMOVE_END = 125,TR_VOP_RENAME_START = 126,TR_VOP_RENAME_END = 127,TR_VOP_LINK_START = 128,TR_VOP_LINK_END = 129,TR_VOP_SYMLINK_START = 130,TR_VOP_SYMLINK_END = 131,TR_VOP_MKDIR_START = 132,TR_VOP_MKDIR_END = 133,TR_VOP_RMDIR_START = 134,TR_VOP_RMDIR_END = 135,TR_VOP_READDIR_START = 136,TR_VOP_READDIR_END = 137,TR_SEGMAP_GETMAP_START = 138,TR_SEGMAP_GETMAP_END = 139,TR_AS_FAULT_START = 140,TR_AS_FAULT_END = 141,TR_RFS_GETATTR_START = 142,TR_RFS_GETATTR_END = 143,TR_RFS_SETATTR_START = 144,TR_RFS_SETATTR_END = 145,TR_RFS_LOOKUP_START = 146,TR_RFS_LOOKUP_END = 147,TR_RFS_READLINK_START = 148,TR_RFS_READLINK_END = 149,TR_RFS_READ_START = 150,TR_RFS_READ_END = 151,TR_RFS_WRITE_START = 152,TR_RFS_WRITE_END = 153,TR_RFS_CREATE_START = 154,TR_RFS_CREATE_END = 155,TR_RFS_REMOVE_START = 156,TR_RFS_REMOVE_END = 157,TR_RFS_RENAME_START = 158,TR_RFS_RENAME_END = 159,TR_RFS_LINK_START = 160,TR_RFS_LINK_END = 161,TR_RFS_SYMLINK_START = 162,TR_RFS_SYMLINK_END = 163,TR_RFS_MKDIR_START = 164,TR_RFS_MKDIR_END = 165,TR_RFS_RMDIR_START = 166,TR_RFS_RMDIR_END = 167,TR_RFS_READDIR_START = 168,TR_RFS_READDIR_END = 169,TR_RFS_STATFS_START = 170,TR_RFS_STATFS_END = 171,TR_SVC_SENDREPLY_START = 178,TR_SVC_SENDREPLY_END = 179,TR_VOP_FSYNC_START = 180,TR_VOP_FSYNC_END = 181,TR_VOP_PUTPAGE_START = 182,TR_VOP_PUTPAGE_END = 183,TR_SEGMAP_RELEASE_START = 184,TR_SEGMAP_RELEASE_END = 185,TR_SVC_GETARGS_START = 186,TR_SVC_GETARGS_END = 187,TR_FINDEXPORT_START = 188,TR_FINDEXPORT_END = 189,TR_SVC_FREEARGS_START = 192,TR_SVC_FREEARGS_END = 193,TR_RFS_RESFREE_START = 194,TR_RFS_RESFREE_END = 195,TR_RFS_CRFREE_START = 196,TR_RFS_CRFREE_END = 197,TR_SVC_DUPFOUND = 198,TR_NFSFP_QUE_REQ_START = 199,TR_NFSFP_QUE_REQ_END = 200,TR_NFSFP_PROC_REQ_END = 201,TR_NFSFP_XDR_ARG_START = 202,TR_NFSFP_XDR_ARG_END = 203,TR_NFSFP_XDR_RES_START = 204,TR_NFSFP_XDR_RES_END = 205,TR_NFSFP_DUP_CHECK_START = 206,TR_NFSFP_DUP_CHECK_END = 207,TR_NFSFP_UDP_SEND_START = 208,TR_NFSFP_UDP_SEND_END = 209,TR_NFSFP_SEND_REPLY_START = 210,TR_NFSFP_SEND_REPLY_END = 211,TR_NFSFP_QUE_REQ_ENQ = 212,TR_NFSFP_QUE_REQ_DEQ = 213,TR_NFSFP_RFS_READLINK_START = 214,TR_NFSFP_RFS_READLINK_END = 215,TR_NFSFP_SVCAUTH_UNIX_START = 216,TR_NFSFP_SVCAUTH_UNIX_END = 217,TR_SVC_FREERES_START = 222,TR_SVC_FREERES_END = 223,TR_DNLC_ENTER_START = 218,TR_DNLC_ENTER_END = 219,TR_DNLC_LOOKUP_START = 220,TR_DNLC_LOOKUP_END = 221,TR_CMN_DISPATCH_START = 224,TR_CMN_PROC_START = 225,TR_CMN_PROC_END = 226,TR_CMN_DISPATCH_END = 227,TR_VOP_SPACE_START = 228,TR_VOP_SPACE_END = 229,TR_DDI_DMA_BUF_SETUP_START = 0,TR_DDI_DMA_BUF_SETUP_END = 1,TR_IOMMUNEX_DMA_MAP_START = 2,TR_IOMMUNEX_DMA_MAP_END = 3,TR_IOMMUNEX_DMA_MAP_GETDVMAPAGES_START = 4,TR_IOMMUNEX_DMA_MAP_GETDVMAPAGES_END = 5,TR_SVC_GETREQ_START = 0,TR_SVC_GETREQ_END = 1,TR_SVC_GETREQ_LOOP_START = 2,TR_SVC_GETREQ_LOOP_END = 3,TR_SVC_RUN = 4,TR_SVC_CLTS_KRECV_START = 5,TR_SVC_CLTS_KRECV_END = 6,TR_XDR_CALLMSG_START = 7,TR_XDR_CALLMSG_END = 8,TR_SVC_CLTS_KSEND_START = 9,TR_SVC_CLTS_KSEND_END = 10,TR_XDR_REPLYMSG_START = 11,TR_XDR_REPLYMSG_END = 12,TR_RPCMODOPEN_START = 13,TR_RPCMODOPEN_END = 14,TR_RPCMODRPUT_START = 15,TR_RPCMODRPUT_END = 16,TR_RPCMODWPUT_START = 17,TR_RPCMODWPUT_END = 18,TR_RPCMODRSRV_START = 19,TR_RPCMODRSRV_END = 20,TR_RPCMODWSRV_START = 21,TR_RPCMODWSRV_END = 22,TR_SVC_QUEUEREQ_START = 23,TR_SVC_QUEUEREQ_END = 24,TR_SVC_GETREQ_AUTH_START = 25,TR_SVC_GETREQ_AUTH_END = 26,TR_SVC_DUPDONE = 27,TR_SVC_CLTS_KDUP_START = 28,TR_SVC_CLTS_KDUP_END = 29,TR_RPC_QUE_REQ_START = 30,TR_RPC_QUE_REQ_END = 31,TR_SVC_COTS_KRECV_START = 32,TR_SVC_COTS_KRECV_END = 33,TR_SVC_COTS_KDUP_DONE = 34,TR_SVC_COTS_KDUP_INPROGRESS = 35,TR_SVC_COTS_KSEND_START = 36,TR_SVC_COTS_KSEND_END = 37,TR_SCSI_INIT_PKT_START = 0,TR_SCSI_INIT_PKT_RETURN1_END = 1,TR_SCSI_INIT_PKT_RETURN2_END = 2,TR_SCSI_INIT_PKT_END = 3,TR_SCSI_INIT_PKT_PKTALLOC_START = 4,TR_SCSI_INIT_PKT_PKTALLOC_END = 5,TR_SCSI_INIT_PKT_PKTALLOC_FAILED = 6,TR_SCSI_INIT_PKT_DMAGET_START = 7,TR_SCSI_INIT_PKT_DMAGET_FAILED = 8,TR_SCSI_INIT_PKT_FREE_START = 9,TR_SCSI_ALLOC_CONSISTENT_BUF_START = 10,TR_SCSI_ALLOC_CONSISTENT_BUF_RETURN1_END = 11,TR_SCSI_ALLOC_CONSISTENT_BUF_RETURN2_END = 12,TR_SCSI_ALLOC_CONSISTENT_BUF_RETURN3_END = 13,TR_SCSI_ALLOC_CONSISTENT_BUF_END = 14,TR_SCSI_FREE_CONSISTENT_BUF_START = 15,TR_SCSI_FREE_CONSISTENT_BUF_END = 16,TR_SCSI_IMPL_PKTALLOC_START = 17,TR_SCSI_IMPL_PKTALLOC_END = 18,TR_SCSI_IMPL_PKTALLOC_CALLBACK_START = 19,TR_SCSI_IMPL_PKTALLOC_CALLBACK_END = 20,TR_SCSI_IMPL_PKTFREE_START = 21,TR_SCSI_IMPL_PKTFREE_END = 22,TR_SCSI_IMPL_PKTFREE_RUN_CALLBACK = 23,TR_SCSI_IMPL_DMAGET_START = 24,TR_SCSI_IMPL_DMAGET_END = 25,TR_SCSI_IMPL_DMAGET_BUFSETUP_START = 26,TR_SCSI_IMPL_DMAGET_BUFSETUP_FAILED = 27,TR_SCSI_DESTROY_PKT_START = 28,TR_SCSI_DESTROY_PKT_END = 29,TR_FIFOREAD_IN = 1,TR_FIFOREAD_OUT = 2,TR_FIFOREAD_WAIT = 3,TR_FIFOREAD_WAKE = 4,TR_FIFOREAD_STREAM = 5,TR_FIFOWRITE_IN = 6,TR_FIFOWRITE_OUT = 7,TR_FIFOWRITE_WAIT = 9,TR_FIFOWRITE_WAKE = 10,TR_FIFOWRITE_STREAM = 11,TR_RLOGINP_RPUT_IN = 0,TR_RLOGINP_RPUT_OUT = 1,TR_RLOGINP_RSRV_IN = 2,TR_RLOGINP_RSRV_OUT = 3,TR_RLOGINP_WSRV_IN = 4,TR_RLOGINP_WSRV_OUT = 5,TR_RLOGINP_WPUT_IN = 6,TR_RLOGINP_WPUT_OUT = 7,TR_RLOGINP_WINCTL_IN = 8,TR_RLOGINP_WINCTL_OUT = 9,TR_SOCKFS_OPEN = 0,TR_SOCKFS_CLOSE = 1,TR_DEVMAP_DUP = 0,TR_DEVMAP_UNMAP = 1,TR_DEVMAP_FREE = 2,TR_DEVMAP_FAULT = 3,TR_DEVMAP_FAULTA = 4,TR_DEVMAP_SETPROT = 5,TR_DEVMAP_CHECKPROT = 6,TR_DEVMAP_SEGDEV_BADOP = 7,TR_DEVMAP_SYNC = 8,TR_DEVMAP_INCORE = 9,TR_DEVMAP_LOCKOP = 10,TR_DEVMAP_GETPROT = 11,TR_DEVMAP_GETOFFSET = 12,TR_DEVMAP_GETTYPE = 13,TR_DEVMAP_GETVP = 14,TR_DEVMAP_ADVISE = 15,TR_DEVMAP_DUMP = 16,TR_DEVMAP_PAGELOCK = 17,TR_DEVMAP_GETMEMID = 18,TR_DEVMAP_SOFTUNLOCK = 19,TR_DEVMAP_FAULTPAGE = 20,TR_DEVMAP_FAULTPAGES = 21,TR_DEVMAP_SEGMAP_SETUP = 22,TR_DEVMAP_DEVICE = 23,TR_DEVMAP_DO_CTXMGT = 24,TR_DEVMAP_ROUNDUP = 25,TR_DEVMAP_FIND_HANDLE = 26,TR_DEVMAP_UNLOAD = 27,TR_DEVMAP_GET_LARGE_PGSIZE = 28,TR_DEVMAP_SOFTLOCK_INIT = 29,TR_DEVMAP_SOFTLOCK_RELE = 30,TR_DEVMAP_CTX_RELE = 31,TR_DEVMAP_LOAD = 32,TR_DEVMAP_SETUP = 33,TR_DEVMAP_SEGMAP = 34,TR_DEVMAP_DEVMEM_SETUP = 35,TR_DEVMAP_DEVMEM_REMAP = 36,TR_DEVMAP_UMEM_SETUP = 37,TR_DEVMAP_UMEM_REMAP = 38,TR_DEVMAP_SET_CTX_TIMEOUT = 39,TR_DEVMAP_DEFAULT_ACCESS = 40,TR_DEVMAP_UMEM_ALLOC = 41,TR_DEVMAP_UMEM_FREE = 42,TR_DEVMAP_CTXTO = 43,TR_DEVMAP_DUP_CK1 = 44,TR_DEVMAP_UNMAP_CK1 = 45,TR_DEVMAP_UNMAP_CK2 = 46,TR_DEVMAP_UNMAP_CK3 = 47,TR_DEVMAP_FAULT_CK1 = 48,TR_DEVMAP_SETPROT_CK1 = 49,TR_DEVMAP_FAULTPAGE_CK1 = 50,TR_DEVMAP_DO_CTXMGT_CK1 = 51,TR_DEVMAP_DO_CTXMGT_CK2 = 52,TR_DEVMAP_DO_CTXMGT_CK3 = 53,TR_DEVMAP_DO_CTXMGT_CK4 = 54,TR_DEVMAP_ROUNDUP_CK1 = 55,TR_DEVMAP_ROUNDUP_CK2 = 56,TR_DEVMAP_CTX_RELE_CK1 = 57,TR_DCDSTRATEGY_START = 1,TR_DCDSTRATEGY_DISKSORT_START = 2,TR_DCDSTRATEGY_DISKSORT_END = 3,TR_DCDSTRATEGY_SMALL_WINDOW_START = 4,TR_DCDSTRATEGY_SMALL_WINDOW_END = 5,TR_DCDSTRATEGY_END = 6,TR_DCDSTART_START = 7,TR_DCDSTART_NO_WORK_END = 8,TR_DCDSTART_NO_RESOURCES_END = 9,TR_DCASTART_SMALL_WINDOW_START = 10,TR_DCDSTART_SMALL_WINDOW_END = 11,TR_DCDSTART_END = 12,TR_MAKE_DCD_CMD_START = 13,TR_MAKE_DCD_CMD_INIT_PKT_START = 14,TR_MAKE_DCD_CMD_INIT_PKT_END = 15,TR_MAKE_DCD_CMD_NO_PKT_ALLOCATED1_END = 16,TR_MAKE_DCD_CMD_END = 17,TR_DCDINTR_START = 18,TR_DCDINTR_COMMAND_DONE_END = 19,TR_DCDINTR_END = 20,TR_DCDONE_START = 21,TR_DCDDONE_BIODONE_CALL = 22,TR_DCDDONE_END = 23,TR_DCD_CHECK_ERROR_START = 24,TR_DCD_CHECK_ERROR_END = 25,TR_DCDRUNOUT_START = 26,TR_DCDRUNOUT_END = 27,};
enum MACRO_TSKPRI {TSKPRI = 0x1,TSBACKQ = 0x2,TSIA = 0x4,TSIASET = 0x8,TSIANICED = 0x10,};
enum MACRO_TSTPAT {TSTPAT = 0xE5,};
enum MACRO_TTIPRI {TTIPRI = 28,};
enum MACRO_TTOPRI {TTOPRI = 29,};
enum MACRO_TTXOHI {TTXOHI = 180,HIWAT = 1024,};
enum MACRO_TUEXEC {TUEXEC = 0x40,};
enum MACRO_TUREAD {TUREAD = 0x100,};
enum MACRO_TX_RDY {TX_RDY = 0x4,TX_MPTY = 0x2,};
enum MACRO_T_CONN {T_CONN_REQ = 0,T_CONN_RES = 1,T_DISCON_REQ = 2,T_DATA_REQ = 3,T_EXDATA_REQ = 4,T_INFO_REQ = 5,T_BIND_REQ = 6,T_UNBIND_REQ = 7,T_UNITDATA_REQ = 8,T_SVR4_OPTMGMT_REQ = 9,T_OPTMGMT_REQ = 9,T_ORDREL_REQ = 10,T_CONN_IND = 11,T_CONN_CON = 12,T_DISCON_IND = 13,T_DATA_IND = 14,T_EXDATA_IND = 15,T_INFO_ACK = 16,T_BIND_ACK = 17,T_ERROR_ACK = 18,T_OK_ACK = 19,T_UNITDATA_IND = 20,T_UDERROR_IND = 21,T_OPTMGMT_ACK = 22,T_ORDREL_IND = 23,T_ADDR_REQ = 24,T_ADDR_ACK = 25,};
enum MACRO_T_COTS {T_COTS = 1,T_COTS_ORD = 2,T_CLTS = 3,T_NEGOTIATE = 4,T_CHECK = 8,T_DEFAULT = 16,T_SUCCESS = 32,T_FAILURE = 64,T_CURRENT = 128,T_PARTSUCCESS = 256,T_READONLY = 512,T_NOTSUPPORT = 1024,T_YES = 1,T_NO = 0,T_INFINITE = -1,T_INVALID = -2,T_UNSPEC = -3,T_ALLOPT = 0,};
enum MACRO_T_INET {T_INET_TCP = 6,T_TCP_NODELAY = 1,T_TCP_MAXSEG = 2,T_TCP_KEEPALIVE = 8,T_GARBAGE = 2,};
enum MACRO_T_INTR {T_INTR_THREAD = 0x1,T_WAKEABLE = 0x2,T_TOMASK = 0x4,T_TALLOCSTK = 0x8,T_WOULDBLOCK = 0x20,T_DONTBLOCK = 0x40,T_DONTPEND = 0x80,T_SYS_PROF = 0x100,T_WAITCVSEM = 0x200,T_WATCHPT = 0x400,T_PANIC = 0x800,};
enum MACRO_T_NULL {T_NULL = 0,T_ARG = 1,T_CHAR = 2,T_SHORT = 3,T_LONG = 5,T_FLOAT = 6,T_DOUBLE = 7,T_STRUCT = 8,T_UNION = 9,T_ENUM = 10,T_MOE = 11,T_UCHAR = 12,T_USHORT = 13,T_UINT = 14,T_ULONG = 15,};
enum MACRO_UBSIZE {UBSIZE = 512,};
enum MACRO_UFSMNT {UFSMNT_NOINTR = 0x1,UFSMNT_SYNCDIR = 0x2,UFSMNT_NOSETSEC = 0x4,UFSMNT_LARGEFILES = 0x8,UFSMNT_NOATIME = 0x1000,UFSMNT_NODFRATIME = 0x2000,UFSMNT_ONERROR_PANIC = 0x20,UFSMNT_ONERROR_LOCK = 0x40,UFSMNT_ONERROR_UMOUNT = 0x80,UFSMNT_ONERROR_FLGMASK = 0xE0,UFSMNT_ONERROR_DEFAULT = 0x20,UFSMNT_DISABLEDIRECTIO = 0x100,UFSMNT_FORCEDIRECTIO = 0x200,UFSMNT_NOFORCEDIRECTIO = 0x400,UFSMNT_LOGGING = 0x800,};
enum MACRO_ULLONG {ULLONG_MAX = -1,};
enum MACRO_UNIXOS {UNIXOS = 99,};
enum MACRO_UNLKPT {UNLKPT = 20482,};
enum MACRO_UNLOCK {UNLOCK = 0,PROCLOCK = 1,TXTLOCK = 2,DATLOCK = 4,};
enum MACRO_UPDATE {UPDATE_XLUT = 0x1,UPDATE_CLUT1 = 0x2,UPDATE_CLUT2 = 0x4,UPDATE_CLUT3 = 0x8,};
enum MACRO_USER_0 {USER = 0x2,};
enum MACRO_USOCIO {USOCIO_GETMAP = 18095,USOCIO_BYPASS_DEV = 18096,USOCIO_FORCE_LIP = 18097,USOCIO_ADISC_ELS = 18098,USOCIO_FORCE_OFFLINE = 18099,USOCIO_LOADUCODE = 18100,USOCIO_DUMPXRAM = 18101,USOCIO_DUMPXRAMBUF = 18102,USOCIO_LINKSTATUS = 18103,USOCIO_LOOPBACK_INTERNAL = 18110,USOCIO_LOOPBACK_MANUAL = 18111,USOCIO_NO_LOOPBACK = 18112,USOCIO_LOOPBACK_FRAME = 18113,USOCIO_DIAG_NOP = 18114,USOCIO_DIAG_RAW = 18115,USOCIO_DIAG_XRAM = 18116,USOCIO_DIAG_SOC = 18117,USOCIO_DIAG_HCB = 18118,USOCIO_DIAG_SOCLB = 18119,USOCIO_DIAG_SRDSLB = 18120,USOCIO_DIAG_EXTLB = 18121,USOCIO_FCODE_MCODE_VERSION = 18122,USOCIO_GET_LESB = 18123,USOCIO_ADD_POOL = 18221,USOCIO_ADD_BUFFER = 18222,USOCIO_DELETE_POOL = 18223,USOCIO_SEND_FRAME = 18224,USOCIO_RCV_FRAME = 18225,};
enum MACRO_USRMIN {USRMIN = 0,ADMMIN = 1,MAXAPUSH = 8,};
enum MACRO_VDSUSP {VDSUSP = 11,};
enum MACRO_VIDLEN {VIDLEN = 8,PIDLEN = 16,};
enum MACRO_VIDMAX {VIDMAX = 8,PIDMAX = 16,};
enum MACRO_VLNEXT {VLNEXT = 15,};
enum MACRO_VOLIOC {VOLIOC = 30208,};
enum MACRO_VSWTCH {VSWTCH = 7,VSTART = 8,};
enum MACRO_VWRITE {VWRITE = 0x80,};
enum MACRO_WRITER {WRITER_LOCK = 0x0,READER_LOCK = 0x1,};
enum MACRO_WRTCMD {WRTCMD = 0x5,};
enum MACRO_WRTDEL {WRTDEL = 0x9,};
enum MACRO_XCIBRG {XCIBRG = 0x0,XCTSET = 0x1,XCRSET = 0x2,RCVCLK = 0x38,};
enum MACRO_XMTCLK {XMTCLK = 0x7,};
enum MACRO_YESSTR {YESSTR = 41,};
enum MACRO_ZMAGIC {ZMAGIC = 0x10B,};
enum MACRO_ZSWR10 {ZSWR10_UNDERRUN_ABORT = 0x4,ZSWR10_NRZI = 0x20,ZSWR10_PRESET_ONES = 0x80,};
enum MACRO_ZSWR11 {ZSWR11_TRXC_XTAL = 0x0,ZSWR11_TRXC_XMIT = 0x1,ZSWR11_TRXC_BAUD = 0x2,ZSWR11_TRXC_DPLL = 0x3,ZSWR11_TRXC_OUT_ENA = 0x4,ZSWR11_TXCLK_RTXC = 0x0,ZSWR11_TXCLK_TRXC = 0x8,ZSWR11_TXCLK_BAUD = 0x10,ZSWR11_TXCLK_DPLL = 0x18,ZSWR11_RXCLK_RTXC = 0x0,ZSWR11_RXCLK_TRXC = 0x20,ZSWR11_RXCLK_BAUD = 0x40,ZSWR11_RXCLK_DPLL = 0x60,ZSWR11_RTXC_XTAL = 0x80,};
enum MACRO_ZSWR14 {ZSWR14_BAUD_ENA = 0x1,ZSWR14_BAUD_FROM_PCLK = 0x2,ZSWR14_DTR_IS_REQUEST = 0x4,ZSWR14_AUTO_ECHO = 0x8,ZSWR14_LOCAL_LOOPBACK = 0x10,ZSWR14_DPLL_NOP = 0x0,ZSWR14_DPLL_SEARCH = 0x20,ZSWR14_DPLL_RESET = 0x40,ZSWR14_DPLL_DISABLE = 0x60,ZSWR14_DPLL_SRC_BAUD = 0x80,ZSWR14_DPLL_SRC_RTXC = 0xA0,ZSWR14_DPLL_FM = 0xC0,ZSWR14_DPLL_NRZI = 0xE0,};
enum MACRO_ZS_MAX {ZS_MAX_PRIV_STR = 800,ZS_NEEDSOFT = 1,ZS_PL = 1536,ZS_PL_HI = 3072,};
enum MACRO__CPCIO {_CPCIO_IOC = 1668309760,};
enum MACRO__DMCM1 {_DMCM1 = 15,};
enum MACRO__FIOIO {_FIOIO = 536897095,};
enum MACRO__IOFBF {_IOFBF = 0x0,_IOLBF = 0x40,};
enum MACRO__IONBF {_IONBF = 0x4,_IOEOF = 0x10,_IOERR = 0x20,};
enum MACRO__ISPAD {_ISPAD = 0x1,_WINCHANGED = 0x2,_WINMOVED = 0x4,_WINSDEL = 0x8,};
enum MACRO__JBLEN {_JBLEN = 12,_SIGJBLEN = 19,};
enum MACRO__LFS64 {_LFS64_STDIO = 1,_LFS64_ASYNCHRONOUS_IO = 1,};
enum MACRO__NFILE {_NFILE = 20,};
enum MACRO__NGREG {_NGREG = 19,};
enum MACRO__POSIX {_POSIX_VDISABLE = 0,};
enum MACRO__SCHED {_SCHED_NEXT = 5,};
enum MACRO__XOPEN {_XOPEN_VERSION = 3,};
enum MACRO___BIND {__BIND = 19950621,};
enum MACRO_tdelta {tdelta_t_sz = 12,};
typedef struct _Mouse MOUSE_STATUS;
typedef struct _45D3B8D1F0A0E1A15D8490524663D915 NCONF_HANDLE;
typedef struct svcxprt_list_t SVCXPRT_LIST;
struct _FN_ref_addr;
typedef struct _50A8F2CBF9209E81C59E0189B8E8717A _LC_collel_t;
typedef struct _E9B6FB84B21FB1468EF2F76864DA4C61 _LC_object_t;
typedef long long __longlong_t;
struct _bool_struct {char _auto_left_margin;char _auto_right_margin;char _no_esc_ctlc;char _ceol_standout_glitch;char _eat_newline_glitch;char _erase_overstrike;char _generic_type;char _hard_copy;char _has_meta_key;char _has_status_line;char _ins_null_glitch;char _mem_above;char _mem_below;char _move_insert_mode;char _move_standout_mode;char _over_strike;char _status_line_esc_ok;char _dest_tabs_magic_smso;char _tilde_glitch;char _transparent_underline;char _xon_xoff;char _needs_xon_xoff;char _prtr_silent;char _hard_cursor;char _non_rev_rmcup;char _no_pad_char;char _non_dest_scroll_region;char _can_change;char _back_color_erase;char _hue_lightness_saturation;char _col_addr_glitch;char _cr_cancels_micro_mode;char _has_print_wheel;char _row_addr_glitch;char _semi_auto_right_margin;char _cpi_changes_res;char _lpi_changes_res;char Sentinel;};
struct _cat_msg_hdr {int __msg_no;int __msg_len;int __msg_offset;};
struct _cat_set_hdr {int __set_no;int __nmsgs;int __first_msg_hdr;};
struct _ns_flagdata {int mask;int shift;};
typedef struct _timespec _timestruc_t;
typedef void *acc_handle_t;
typedef struct ami_handle *ami_handle_t;
typedef struct au_acl_tok au_acl_tok_t;
typedef struct au_ipc_tok au_ipc_tok_t;
struct au_list_stat {int called;int hit;int miss;int free;int size;};
typedef struct au_seq_tok au_seq_tok_t;
typedef struct audio_info audio_info_t;
typedef void *bufcall_id_t;
typedef int callout_id_t;
struct cdrom_tochdr {unsigned char cdth_trk0;unsigned char cdth_trk1;};
typedef char cfga_class_t[12];
struct cfga_confirm {int (*confirm)(void *appdata_ptr,  char *message);void *appdata_ptr;};
typedef int cfga_flags_t;
enum cfs_dlog_val {CFS_DLOG_VAL_CRASH = 0x200,CFS_DLOG_VAL_COMMITTED = 0x201,CFS_DLOG_VAL_ERROR = 0x202,CFS_DLOG_VAL_PROCESSED = 0x203,};
enum cfsdcmd_cmds {CFSDCMD_DAEMONID = 0x0,CFSDCMD_STATEGET = 0x1,CFSDCMD_STATESET = 0x2,CFSDCMD_XWAIT = 0x3,CFSDCMD_EXISTS = 0x4,CFSDCMD_LOSTFOUND = 0x5,CFSDCMD_GETINFO = 0x6,CFSDCMD_CIDTOFID = 0x7,CFSDCMD_GETATTRFID = 0x8,CFSDCMD_GETATTRNAME = 0x9,CFSDCMD_GETSTATS = 0xA,CFSDCMD_ROOTFID = 0xB,CFSDCMD_CREATE = 0xC,CFSDCMD_REMOVE = 0xD,CFSDCMD_LINK = 0xE,CFSDCMD_RENAME = 0xF,CFSDCMD_MKDIR = 0x10,CFSDCMD_RMDIR = 0x11,CFSDCMD_SYMLINK = 0x12,CFSDCMD_SETATTR = 0x13,CFSDCMD_SETSECATTR = 0x14,CFSDCMD_PUSHBACK = 0x15,};
typedef struct classfuncs classfuncs_t;
typedef struct common_service common_svc_t;
typedef struct cpu_vminfo cpu_vminfo_t;
typedef int cyc_cookie_t;
enum dacf_devspec {DACF_DS_ERROR = 0xFFFFFFFF,DACF_DS_MIN_NT = 0x1,DACF_DS_DRV_MNAME = 0x2,DACF_DS_DEV_PATH = 0x3,};
typedef struct dacf_opset dacf_opset_t;
typedef struct _4DAB4BE26238A65C4840EC4623134811 db_next_desc;
typedef union _8118FFB9EEB2C3E80F209039896F74EE dbri_fcode_t;
enum decimal_form {fixed_form = 0x0,floating_form = 0x1,};
typedef struct _C07A277B0B1F71E677259B025564A502 decimal_mode;
typedef struct devctl_dummy_struct *devctl_hdl_t;
struct di_priv_data {int version;int n_parent;int n_driver;struct di_priv_format *parent;struct di_priv_format *driver;};
typedef struct _318570FC7384B19A4DCAD3D835569F28 dl_protect_t;
typedef struct _1095822099D52E0E523F071FF4F33828 dl_through_t;
typedef struct _551C78EEC93CDF0108C003355B4DC50B dl_xid_con_t;
typedef struct _551C78EEC93CDF0108C003355B4DC50B dl_xid_ind_t;
typedef struct _5F5854608C3B35F56B7E671DFC3D4679 dl_xid_req_t;
typedef struct _5F5854608C3B35F56B7E671DFC3D4679 dl_xid_res_t;
typedef struct _F9FB4C2AA908D131736A9D97993FD8DC ether_init_t;
struct fb_wid_alloc {unsigned int wa_type;int wa_index;unsigned int wa_count;};
typedef struct fc_dataseg fc_dataseg_t;
typedef int fc_devdata_t;
typedef struct fcp_status fcp_status_t;
typedef struct file_entry file_entry_t;
typedef struct grant_lock grant_lock_t;
typedef struct gss_OID_desc_struct gss_OID_desc;
typedef struct gss_buffer_desc_struct *gss_buffer_t;
typedef void *gss_ctx_id_t;
typedef struct ifa_msghdr ifa_msghdr_t;
typedef struct impl_devid impl_devid_t;
typedef char int_least8_t;
typedef struct inthandler inthandler_t;
typedef struct ip6_rthdr0 ip6_rthdr0_t;
enum isdn_iostate {ISDN_IO_UNKNOWN = 0xFFFFFFFF,ISDN_IO_STOPPED = 0x0,ISDN_IO_READY = 0x1,};
typedef struct isdn_param isdn_param_t;
typedef struct itimerspec itimerspec_t;
typedef struct kmem_cache kmem_cache_t;
typedef struct kstat_intr kstat_intr_t;
typedef struct _kthread *kthread_id_t;
typedef struct la_els_rjt la_els_rjt_t;
typedef struct la_els_rls la_els_rls_t;
typedef struct la_els_rrq la_els_rrq_t;
struct la_rls_reply {unsigned int code;unsigned int link_failure;unsigned int loss_of_sync;unsigned int loss_of_signal;unsigned int primitive;unsigned int invalid_transmission;unsigned int invalid_crc;};
typedef struct lif_nd_req lif_nd_req_t;
typedef struct _B9BBC47815B70F123F5B3D4C1D596CE1 lk_options_t;
typedef struct llc2Uninit llc2Uninit_t;
typedef struct _8A57A83BA984F7959D9E22CB0CD4E5F7 llc2_ioctl_t;
typedef struct mdb_walker mdb_walker_t;
typedef struct mib2_rawip mib2_rawip_t;
struct mt_tape_info {short t_type;char *t_name;char *t_dsbits;char *t_erbits;};
typedef struct mta_handle mta_handle_t;
typedef union mutex_impl mutex_impl_t;
typedef struct nd_opt_hdr nd_opt_hdr_t;
typedef struct nd_opt_mtu nd_opt_mtu_t;
typedef struct nfs_rwlock nfs_rwlock_t;
enum nsm_addr_res {nsm_addr_succ = 0x0,nsm_addr_fail = 0x1,};
struct nss_db_state;
typedef struct _BD5CA20501DDBF4BA8A0F05A067801C0 nss_getent_t;
typedef struct pam_handle pam_handle_t;
struct pam_response {char *resp;int resp_retcode;};
typedef struct panic_data panic_data_t;
typedef void pctx_errfn_t( char *fn,  char *fmt, va_list ap);
typedef pm__list *pmaplist_ptr;
typedef struct ppa_config ppa_config_t;
struct ppc_params_t {int flags;int state;int strobe_w;int data_setup;int ack_timeout;int error_timeout;int busy_timeout;};
typedef struct _13EF98051BCCC3A7BE0C6290BDC374BA pppAuthMsg_t;
typedef struct _ED04A3E3A2D9A6729338E838A059863A pppCPEntry_t;
typedef struct _01BD53472F26B36476AF1B984D5B2841 pppExEvent_t;
typedef struct _F0AAB1DC87F2E821A9EF19B3A8438CBF pppIPEntry_t;
typedef struct _E0B09092130FDFFEB4124EF1450B8417 pppProtoCh_t;
typedef struct _807D4AC2255C0A3001450ADEC11FD819 pppProtoUp_t;
enum ppp_messages {PPP_TL_UP = 0x0,PPP_TL_DOWN = 0x1,PPP_TL_START = 0x2,PPP_TL_FINISH = 0x3,PPP_NEED_VALIDATION = 0x4,PPP_CONFIG_CHANGED = 0x5,PPP_ERROR_IND = 0x6,PPP_AUTH_SUCCESS = 0x7,PPP_REMOTE_FAILURE = 0x8,PPP_LOCAL_FAILURE = 0x9,};
typedef struct prfpregset prfpregset_t;
typedef struct proc_graph proc_graph_t;
typedef struct proc_usage proc_usage_t;
typedef struct proxy_addr proxy_addr_t;
typedef struct rcm_handle rcm_handle_t;
typedef struct rd_loadobj rd_loadobj_t;
typedef unsigned char *reloc_dest_t;
typedef int rpc_inline_t;
typedef rp__list *rpcblist_ptr;
typedef struct rt_metrics rt_metrics_t;
typedef struct sadb_ident sadb_ident_t;
struct search_entry {char *key;char *data;};
typedef struct _BADA0C20D4FCFBDDC178EA94F25BDA19 seg_skiplist;
typedef struct _EF437A666C9BB0FC607366CF45CE1FC4 segadvstat_t;
typedef int sig_atomic_t;
typedef struct smwp_state smwp_state_t;
typedef struct stbl_entry stbl_entry_t;
typedef struct task_usage task_usage_t;
typedef struct td_thrinfo td_thrinfo_t;
typedef struct term_entry term_entry_t;
typedef unsigned int thread_key_t;
typedef struct thread_ops thread_ops_t;
typedef void *timeout_id_t;
typedef struct timespec32 timespec32_t;
typedef struct tl_credopt tl_credopt_t;
typedef char *tnf_record_p;
typedef unsigned short tnf_uint16_t;
typedef unsigned int tnf_uint32_t;
struct trace_record {unsigned int tr_time;short tr_tag;unsigned short tr_pid;unsigned int tr_datum0;unsigned int tr_datum1;unsigned int tr_datum2;unsigned int tr_datum3;unsigned int tr_datum4;unsigned int tr_datum5;};
typedef struct tty_common tty_common_t;
typedef unsigned long long u_longlong_t;
typedef struct ufs_ic_acl ufs_ic_acl_t;
enum ufsd_event_t {UFSDEV_NONE = 0x0,UFSDEV_REBOOT = 0x1,UFSDEV_FSCK = 0x2,UFSDEV_LOG_OP = 0x3,};
typedef struct usb_opaque *usb_opaque_t;
typedef struct vt_data_16 vt_data_16_t;
typedef struct vt_data_32 vt_data_32_t;
typedef struct vt_data_64 vt_data_64_t;
typedef struct vt_generic vt_generic_t;
typedef union vt_pointer vt_pointer_t;
typedef struct vt_version vt_version_t;
enum whymountroot {ROOT_INIT = 0x0,ROOT_REMOUNT = 0x1,ROOT_UNMOUNT = 0x2,ROOT_FRONTMOUNT = 0x3,ROOT_BACKMOUNT = 0x4,};
typedef unsigned long long Elf32_Lword;
typedef int Elf32_Sword;
typedef unsigned long long Elf64_Lword;
typedef int Elf64_Sword;
typedef unsigned long long Elf64_Xword;
typedef struct _FN_status FN_status_t;
typedef struct _FN_string FN_string_t;
typedef struct _66B76CCBD7517A35749D93819776E291 La_i86_regs;
typedef void *LayoutValue;
typedef struct _FF2DD7BE9DD2B738A1C99E37059CE979 LclContents;
typedef struct _LclFormInfo LclFormInfo;
enum MACRO_ABDAY {ABDAY_1 = 8,ABDAY_2 = 9,ABDAY_3 = 10,ABDAY_4 = 11,ABDAY_5 = 12,ABDAY_6 = 13,ABDAY_7 = 14,};
enum MACRO_ABITS {IP_ABITS = 32,IPV6_ABITS = 128,};
enum MACRO_ABMON {ABMON_1 = 27,ABMON_2 = 28,ABMON_3 = 29,ABMON_4 = 30,ABMON_5 = 31,ABMON_6 = 32,ABMON_7 = 33,ABMON_8 = 34,ABMON_9 = 35,ABMON_10 = 36,ABMON_11 = 37,ABMON_12 = 38,};
enum MACRO_ABORT {ABORT = 238,};
enum MACRO_AFORK {AFORK = 0x1,ASU = 0x2,AEXPND = 0x20,ACCTF = 0xC0,};
enum MACRO_ALGOR {ALGOR_BASIC = 0x1000,ALGOR_IMPLICIT = 0x2000,};
enum MACRO_ALT_0 {ALT = 10,};
enum MACRO_ARPOP {ARPOP_REQUEST = 1,ARPOP_REPLY = 2,};
enum MACRO_AR_CN {AR_CN_BOGON = 1,AR_CN_ANNOUNCE = 2,};
enum MACRO_ASCII {ASCII_SET_SIZE = 128,};
enum MACRO_ASCSZ {ASCSZ = 110,TARSZ = 512,};
enum MACRO_ASYNC {ASYNC_CMD = 0,SYNC_CMD = 1,};
enum MACRO_ATAPI {ATAPI_SET_CD_SPEED = 0xBB,ATAPI_CAPABILITIES = 0x2A,};
enum MACRO_AUDIO {AUDIO_ENCODING_NONE = 0,AUDIO_ENCODING_ULAW = 1,AUDIO_ENCODING_ALAW = 2,AUDIO_ENCODING_LINEAR = 3,AUDIO_ENCODING_DVI = 104,AUDIO_ENCODING_LINEAR8 = 105,AUDIO_MIN_GAIN = 0,AUDIO_MAX_GAIN = 255,AUDIO_MID_GAIN = 127,AUDIO_LEFT_BALANCE = 0,AUDIO_MID_BALANCE = 32,AUDIO_RIGHT_BALANCE = 64,AUDIO_BALANCE_SHIFT = 3,AUDIO_CHANNELS_MONO = 1,AUDIO_CHANNELS_STEREO = 2,AUDIO_MIN_PLAY_CHANNELS = 1,AUDIO_MAX_PLAY_CHANNELS = 2,AUDIO_MIN_REC_CHANNELS = 1,AUDIO_MAX_REC_CHANNELS = 2,AUDIO_PRECISION_8 = 8,AUDIO_PRECISION_16 = 16,AUDIO_MIN_PLAY_PRECISION = 8,AUDIO_MAX_PLAY_PRECISION = 32,AUDIO_MIN_REC_PRECISION = 8,AUDIO_MAX_REC_PRECISION = 32,AUDIO_NONE = 0,AUDIO_SPEAKER = 1,AUDIO_HEADPHONE = 2,AUDIO_LINE_OUT = 4,AUDIO_SPDIF_OUT = 8,AUDIO_AUX1_OUT = 16,AUDIO_AUX2_OUT = 32,AUDIO_MICROPHONE = 1,AUDIO_LINE_IN = 2,AUDIO_CD = 4,AUDIO_INTERNAL_CD_IN = 4,AUDIO_SPDIF_IN = 8,AUDIO_AUX1_IN = 16,AUDIO_AUX2_IN = 32,AUDIO_CODEC_LOOPB_IN = 64,AUDIO_SUNVTS = 128,AUDIO_HWFEATURE_DUPLEX = 1,AUDIO_HWFEATURE_MSCODEC = 2,AUDIO_HWFEATURE_IN2OUT = 4,AUDIO_SWFEATURE_MIXER = 1,};
enum MACRO_AUDIT {AUDIT_CNT = 0x1,AUDIT_AHLT = 0x2,AUDIT_ARGV = 0x4,AUDIT_ARGE = 0x8,AUDIT_PASSWD = 0x10,AUDIT_SEQ = 0x20,AUDIT_WINDATA = 0x40,AUDIT_USER = 0x80,AUDIT_GROUP = 0x100,AUDIT_TRAIL = 0x200,AUDIT_PATH = 0x400,};
enum MACRO_A_NUL {A_NUL = 0,A_SOH = 1,A_STX = 2,A_ETX = 3,A_EOT = 4,A_ENQ = 5,A_ACK = 6,A_BEL = 7,A_BS = 8,A_HT = 9,A_NL = 10,A_LF = 10,A_VT = 11,A_FF = 12,A_NP = 12,A_CR = 13,A_SO = 14,A_SI = 15,A_DLE = 16,A_DC1 = 17,A_DC2 = 18,A_DC3 = 19,A_DC4 = 20,A_NAK = 21,A_SYN = 22,A_ETB = 23,A_CAN = 24,A_EM = 25,A_SUB = 26,A_ESC = 27,A_FS = 28,A_GS = 29,A_RS = 30,A_US = 31,A_DEL = 127,A_CSI = 155,};
enum MACRO_B1200 {B1200 = 9,};
enum MACRO_B1800 {B1800 = 10,};
enum MACRO_B2400 {B2400 = 11,};
enum MACRO_B4800 {B4800 = 12,};
enum MACRO_B9600 {B9600 = 13,};
enum MACRO_BBOFF {BBOFF = 0,SBOFF = 8192,};
enum MACRO_BLKSZ {BLKSZ = 512,};
enum MACRO_BLOCK {BLOCK = 0,NETWORK = 1,BYTE = 2,};
enum MACRO_BREAK {BREAK = 243,};
enum MACRO_BYTES {BYTES_PER_XDR_UNIT = 4,};
enum MACRO_CACHE {CACHE_NOCACHE = 0x1,CACHE_ALLOC_PENDING = 0x4,CACHE_NOFILL = 0x8,CACHE_GARBAGE_COLLECT = 0x10,CACHE_CACHEW_THREADRUN = 0x20,CACHE_CACHEW_THREADEXIT = 0x40,CACHE_DIRTY = 0x80,CACHE_PACKED_PENDING = 0x100,CACHE_CHECK_RLTYPE = 0x200,};
enum MACRO_CALLB {CALLB_CPR_START = 1,CALLB_CPR_SAFE = 2,CALLB_CPR_ALWAYS_SAFE = 4,CALLB_MAX_RETRY = 3,CALLB_THREAD_DELAY = 10,};
enum MACRO_CBAUD {CBAUD = 0xF,CSIZE = 0x30,};
enum MACRO_CB_CL {CB_CL_CPR_DAEMON = 0,CB_CL_CPR_VM = 1,CB_CL_CPR_CALLOUT = 2,CB_CL_CPR_OBP = 3,CB_CL_CPR_FB = 4,CB_CL_PANIC = 5,CB_CL_CPR_RPC = 6,CB_CL_CPR_PROMPRINTF = 7,CB_CL_UADMIN = 8,CB_CL_CPR_PM = 9,CB_CL_HALT = 10,CB_CL_CPR_DMA = 11,CB_CL_CPR_POST_USER = 12,};
enum MACRO_CD180 {CD180_RESET_ALL = 0x81,};
enum MACRO_CDIOC {CDIOC = 0x400,};
enum MACRO_CDROM {CDROM_LBA = 0x1,CDROM_MSF = 0x2,CDROM_DATA_TRACK = 0x4,CDROM_LEADOUT = 0xAA,CDROM_AUDIO_INVALID = 0x0,CDROM_AUDIO_PLAY = 0x11,CDROM_AUDIO_PAUSED = 0x12,CDROM_AUDIO_COMPLETED = 0x13,CDROM_AUDIO_ERROR = 0x14,CDROM_AUDIO_NO_STATUS = 0x15,CDROM_DA_NO_SUBCODE = 0x0,CDROM_DA_SUBQ = 0x1,CDROM_DA_ALL_SUBCODE = 0x2,CDROM_DA_SUBCODE_ONLY = 0x3,CDROM_XA_DATA = 0x0,CDROM_XA_SECTOR_DATA = 0x1,CDROM_XA_DATA_W_ERROR = 0x2,CDROM_BLK_512 = 0x200,CDROM_BLK_1024 = 0x400,CDROM_BLK_2048 = 0x800,CDROM_BLK_2056 = 0x808,CDROM_BLK_2336 = 0x920,CDROM_BLK_2340 = 0x924,CDROM_BLK_2352 = 0x930,CDROM_BLK_2368 = 0x940,CDROM_BLK_2448 = 0x990,CDROM_BLK_2646 = 0xA56,CDROM_BLK_2647 = 0xA57,CDROM_BLK_SUBCODE = 0x60,CDROM_NORMAL_SPEED = 0x0,CDROM_DOUBLE_SPEED = 0x1,CDROM_QUAD_SPEED = 0x3,CDROM_TWELVE_SPEED = 0xC,CDROM_MAXIMUM_SPEED = 0xFF,};
enum MACRO_CD_ZD {CD_ZD = 0x40,CD_OD = 0x40,};
enum MACRO_CEOL2 {CEOL2 = 0,CEOF = 4,CSTART = 17,};
enum MACRO_CFLAG {CFLAG_CMDDISC = 0x1,CFLAG_WATCH = 0x2,CFLAG_FINISHED = 0x4,CFLAG_COMPLETED = 0x10,CFLAG_PREPARED = 0x20,CFLAG_IN_TRANSPORT = 0x40,CFLAG_RESTORE_PTRS = 0x80,CFLAG_TRANFLAG = 0xFF,CFLAG_CMDPROXY = 0x100,CFLAG_CMDARQ = 0x200,CFLAG_DMAVALID = 0x400,CFLAG_DMASEND = 0x800,CFLAG_CMDIOPB = 0x1000,CFLAG_CDBEXTERN = 0x2000,CFLAG_SCBEXTERN = 0x4000,CFLAG_FREE = 0x8000,CFLAG_PRIVEXTERN = 0x20000,CFLAG_DMA_PARTIAL = 0x40000,};
enum MACRO_CFS_C {CFS_C_HUB_LOCAL_POWER = 0,CFS_C_HUB_OVER_CURRENT = 1,CFS_PORT_CONNECTION = 0,CFS_PORT_ENABLE = 1,CFS_PORT_SUSPEND = 2,CFS_PORT_OVER_CURRENT = 3,CFS_PORT_RESET = 4,CFS_PORT_POWER = 8,CFS_PORT_LOW_SPEED = 9,CFS_C_PORT_CONNECTION = 16,CFS_C_PORT_ENABLE = 17,CFS_C_PORT_SUSPEND = 18,CFS_C_PORT_OVER_CURRENT = 19,CFS_C_PORT_RESET = 20,};
enum MACRO_CHECK {ACL_CHECK = 0x1,DEF_ACL_CHECK = 0x2,};
enum MACRO_CHRSZ {CHRSZ = 76,};
enum MACRO_CINTR {CINTR = 3,CQUIT = 28,};
enum MACRO_CKILL {CKILL = 21,};
enum MACRO_CLASS {CLASS_NOT_SUPPORTED = 0x5,};
enum MACRO_CLEAN {CLEAN_NOW = 20,};
enum MACRO_CLGET {CLGET_SERVER_ADDR = 3,CLGET_FD = 6,CLGET_SVC_ADDR = 7,};
enum MACRO_CLOCK {CLOCK_VIRTUAL = 1,CLOCK_PROF = 2,};
enum MACRO_CLONE {CLONE_DEV = 1,GLOBAL_DEV = 2,NODEBOUND_DEV = 4,NODESPECIFIC_DEV = 6,ENUMERATED_DEV = 8,};
enum MACRO_CLSET {CLSET_FD_CLOSE = 8,CLSET_FD_NCLOSE = 9,};
enum MACRO_CMASK {CMASK = 0x12,CDLIMIT = 0x800,NBPS = 0x20000,};
enum MACRO_COLOR {COLOR_BLACK = 0,COLOR_RED = 1,COLOR_GREEN = 2,COLOR_YELLOW = 3,COLOR_BLUE = 4,COLOR_MAGENTA = 5,COLOR_CYAN = 6,COLOR_WHITE = 7,};
enum MACRO_CPCIO {CPCIO_BIND_EVENT = 0x63706301,CPCIO_TAKE_SAMPLE = 0x63706302,CPCIO_RELE = 0x63706303,};
enum MACRO_CPRES {CPRES = 0x8000,};
enum MACRO_CSMAX {CSMAX = 4,};
enum MACRO_CSTOP {CSTOP = 0x13,};
enum MACRO_CTRLQ {CTRLQ = 0x305,};
enum MACRO_CTRLS {CTRLS = 0x304,};
enum MACRO_CTYPE {CTYPE_CDROM = 0,CTYPE_MD21 = 1,CTYPE_CCS = 2,};
enum MACRO_C_HUB {C_HUB_LOCAL_POWER_STATUS = 0x1,C_HUB_OVER_CURRENT = 0x2,};
enum MACRO_C_MAX {C_MAX_MOUNT_FSCDIRNAME = 128,};
enum MACRO_DAY_0 {DAY = 86400,};
enum MACRO_DCOPS {DCOPS_VERSION = 1,};
enum MACRO_DEVFD {DEVFD = 0,XMTRD = 1,ERRFD = 2,};
enum MACRO_DEVID {DEVID_MAGIC_MSB = 0x69,DEVID_MAGIC_LSB = 0x64,DEVID_REV_MSB = 0x0,DEVID_REV_LSB = 0x1,DEVID_HINT_SIZE = 0x4,};
enum MACRO_DIIOC {DIIOC = 0xDF00,};
enum MACRO_DKIOC {DKIOC = 0x400,};
enum MACRO_DLIOC {DLIOC = 17408,};
enum MACRO_DMAGA {DMAGA_INTPEND = 0x1,DMAGA_ERRPEND = 0x2,DMAGA_PACKCNT = 0xC,DMAGA_DRAINING = 0xC,DMAGA_INTEN = 0x10,DMAGA_FLUSH = 0x20,DMAGA_DRAIN = 0x40,DMAGA_SLVERR = 0x40,DMAGA_RESET = 0x80,DMAGA_WRITE = 0x100,DMAGA_ENDVMA = 0x200,DMAGA_REQPEND = 0x400,};
enum MACRO_DMAIS {DMAIS_NEEDINTBUF = 0x100,DMAIS_COMPLEMENT = 0x200,DMAIS_NOMERGE = 0x300,DMAIS_MAPPAGE = 0x400,DMAIS_PAGEPTR = 0x800,DMAIS_WINSTRT = 0x1000,DMAIS_WINUIB = 0x2000,DMAIS_WINEND = 0x8000,};
enum MACRO_DMGET {DMGET = 3,};
enum MACRO_DMSET {DMSET = 0,DMBIS = 1,DMBIC = 2,};
enum MACRO_DPIOC {DPIOC = 0xD000,};
enum MACRO_DRCTL {DRCTL_PROMEN = 0x2000,DRCTL_SCILVL = 0x1000,DRCTL_SCILVL_SB0 = 0x0,DRCTL_SCILVL_SB1 = 0x1000,DRCTL_CDIE = 0x800,DRCTL_BVD2IE = 0x400,DRCTL_BVD1IE = 0x200,DRCTL_RDYIE = 0x100,DRCTL_WPIE = 0x80,DRCTL_CTOIE = 0x40,DRCTL_IOIE = 0x10,};
enum MACRO_DRMAP {DRMAP_PROM = 0,DRMAP_CARD0_WIN0 = 1,DRMAP_CARD0_WIN1 = 2,DRMAP_CARD0_WIN2 = 3,DRMAP_ASIC_CSRS = 4,DRMAP_CARD1_WIN0 = 5,DRMAP_CARD1_WIN1 = 6,DRMAP_CARD1_WIN2 = 7,};
enum MACRO_DRWIN {DRWIN_CMDLNG_M = 0x7C00,DRWIN_CMDLNG_S = 0xA,DRWIN_CMDDLY_M = 0x300,DRWIN_CMDDLY_S = 0x8,};
enum MACRO_DSCRL {DSCRL = 0x57,};
enum MACRO_DSPWR {DSPWR = 5,};
enum MACRO_DTYPE {DTYPE_DIRECT = 0x0,DTYPE_SEQUENTIAL = 0x1,DTYPE_PRINTER = 0x2,DTYPE_PROCESSOR = 0x3,DTYPE_WORM = 0x4,DTYPE_RODIRECT = 0x5,DTYPE_SCANNER = 0x6,DTYPE_OPTICAL = 0x7,DTYPE_CHANGER = 0x8,DTYPE_COMM = 0x9,DTYPE_ARRAY_CTRL = 0xC,DTYPE_ESI = 0xD,DTYPE_UNKNOWN = 0x1F,DTYPE_MASK = 0x1F,};
enum MACRO_DT_IA {DT_IA_64_PLT_RESERVE = 0x70000000,};
enum MACRO_DVSCN {DVSCN = 0x60,};
enum MACRO_DV_NT {DV_NT_E = -12,};
enum MACRO_D_NEW {D_NEW = 0x0,};
enum MACRO_EJECT {EJECT = 0x80,};
enum MACRO_ELF32 {ELF32_FSZ_ADDR = 4,ELF32_FSZ_HALF = 2,ELF32_FSZ_OFF = 4,ELF32_FSZ_SWORD = 4,ELF32_FSZ_WORD = 4,};
enum MACRO_ELF64 {ELF64_FSZ_ADDR = 8,ELF64_FSZ_HALF = 2,ELF64_FSZ_OFF = 8,ELF64_FSZ_SWORD = 4,ELF64_FSZ_WORD = 4,ELF64_FSZ_SXWORD = 8,ELF64_FSZ_XWORD = 8,};
enum MACRO_EMBED {EMBED_XMIT = 0x20,EMBED_XMIT_LEN = 0x7,};
enum MACRO_EMPTY {EMPTY = 0,};
enum MACRO_EPOCH {EPOCH_YEAR = 1970,EPOCH_WDAY = 4,};
enum MACRO_ERA_D {ERA_D_FMT = 52,ERA_D_T_FMT = 53,ERA_T_FMT = 54,};
enum MACRO_ERRNO {EPERM = 1,ENOENT = 2,ESRCH = 3,EINTR = 4,EIO = 5,ENXIO = 6,E2BIG = 7,ENOEXEC = 8,EBADF = 9,ECHILD = 10,EAGAIN = 11,ENOMEM = 12,EACCES = 13,EFAULT = 14,ENOTBLK = 15,EBUSY = 16,EEXIST = 17,EXDEV = 18,ENODEV = 19,ENOTDIR = 20,EISDIR = 21,EINVAL = 22,ENFILE = 23,EMFILE = 24,ENOTTY = 25,ETXTBSY = 26,EFBIG = 27,ENOSPC = 28,ESPIPE = 29,EROFS = 30,EMLINK = 31,EPIPE = 32,EDOM = 33,ERANGE = 34,ENOMSG = 35,EIDRM = 36,ECHRNG = 37,EL2NSYNC = 38,EL3HLT = 39,EL3RST = 40,ELNRNG = 41,EUNATCH = 42,ENOCSI = 43,EL2HLT = 44,EDEADLK = 45,ENOLCK = 46,ECANCELED = 47,ENOTSUP = 48,EDQUOT = 49,EBADE = 50,EBADR = 51,EXFULL = 52,ENOANO = 53,EBADRQC = 54,EBADSLT = 55,EDEADLOCK = 56,EBFONT = 57,EOWNERDEAD = 58,ENOTRECOVERABLE = 59,ENOSTR = 60,ENODATA = 61,ETIME = 62,ENOSR = 63,ENONET = 64,ENOPKG = 65,EREMOTE = 66,ENOLINK = 67,EADV = 68,ESRMNT = 69,ECOMM = 70,EPROTO = 71,ELOCKUNMAPPED = 72,ENOTACTIVE = 73,EMULTIHOP = 74,EBADMSG = 77,ENAMETOOLONG = 78,EOVERFLOW = 79,ENOTUNIQ = 80,EBADFD = 81,EREMCHG = 82,ELIBACC = 83,ELIBBAD = 84,ELIBSCN = 85,ELIBMAX = 86,ELIBEXEC = 87,EILSEQ = 88,ENOSYS = 89,ELOOP = 90,ERESTART = 91,ESTRPIPE = 92,ENOTEMPTY = 93,EUSERS = 94,ENOTSOCK = 95,EDESTADDRREQ = 96,EMSGSIZE = 97,EPROTOTYPE = 98,ENOPROTOOPT = 99,EPROTONOSUPPORT = 120,ESOCKTNOSUPPORT = 121,EOPNOTSUPP = 122,EPFNOSUPPORT = 123,EAFNOSUPPORT = 124,EADDRINUSE = 125,EADDRNOTAVAIL = 126,ENETDOWN = 127,ENETUNREACH = 128,ENETRESET = 129,ECONNABORTED = 130,ECONNRESET = 131,ENOBUFS = 132,EISCONN = 133,ENOTCONN = 134,ESHUTDOWN = 143,ETOOMANYREFS = 144,ETIMEDOUT = 145,ECONNREFUSED = 146,EHOSTDOWN = 147,EHOSTUNREACH = 148,EWOULDBLOCK = 11,EALREADY = 149,EINPROGRESS = 150,ESTALE = 151,};
enum MACRO_ERROR {GRP_ERROR = 1,USER_ERROR = 2,OTHER_ERROR = 3,CLASS_ERROR = 4,DUPLICATE_ERROR = 5,MISS_ERROR = 6,MEM_ERROR = 7,ENTRY_ERROR = 8,};
enum MACRO_ESAME {ESAME = -1,};
enum MACRO_EUCIN {EUCIN = 0,EUCOUT = 1,};
enum MACRO_EVENT {EVENT_X = 0,EVENT_Y = 1,EVENT_BUT1 = 2,EVENT_BUT2 = 3,EVENT_BUT3 = 4,};
enum MACRO_EXPER {EXPER = 1024,};
enum MACRO_EXTRA {EXTRA_ALLOC = 8,};
enum MACRO_FAT32 {FAT32_FS_SIGN = 0x61417272,FAT32_BOOT_FSINFO_OFF = 0x1E0,};
enum MACRO_FBDBL {FBDBL_AVAIL = 0x80000000,FBDBL_DONT_BLOCK = 0x40000000,FBDBL_AVAIL_PG = 0x20000000,FBDBL_A = 0x1,FBDBL_B = 0x2,FBDBL_BOTH = 0x3,FBDBL_NONE = 0x4,};
enum MACRO_FC_PH {FC_PH_VERSION = 0x6,};
enum MACRO_FDATA {FDATA = 0xE5,};
enum MACRO_FDCMD {FDCMD_WRITE = 1,FDCMD_READ = 2,FDCMD_SEEK = 3,FDCMD_REZERO = 4,FDCMD_FORMAT_UNIT = 5,FDCMD_FORMAT_TRACK = 6,};
enum MACRO_FDIOC {FDIOC = 0x400,};
enum MACRO_FDISK {FDISK_IFS = 7,FDISK_AIXBOOT = 8,FDISK_AIXDATA = 9,FDISK_OS2BOOT = 10,FDISK_WINDOWS = 11,FDISK_EXT_WIN = 12,FDISK_FAT95 = 14,FDISK_EXTLBA = 15,};
enum MACRO_FDRAW {FDRAW_SPECIFY = 0x3,FDRAW_READID = 0xA,FDRAW_SENSE_DRV = 0x4,FDRAW_REZERO = 0x7,FDRAW_SEEK = 0xF,FDRAW_SENSE_INT = 0x8,FDRAW_FORMAT = 0xD,FDRAW_READTRACK = 0x2,FDRAW_WRCMD = 0x5,FDRAW_RDCMD = 0x6,FDRAW_WRITEDEL = 0x9,FDRAW_READDEL = 0xC,};
enum MACRO_FLUSH {FLUSH_ARP_TIME = 0x1,FLUSH_REDIRECT_TIME = 0x2,FLUSH_MTU_TIME = 0x4,};
enum MACRO_FMASK {FMASK = 0xA0FF,};
enum MACRO_FOPEN {FOPEN_MAX = 20,FILENAME_MAX = 1024,};
enum MACRO_FREAD {FREAD = 0x1,FWRITE = 0x2,FNDELAY = 0x4,FAPPEND = 0x8,FSYNC = 0x10,FDSYNC = 0x40,FRSYNC = 0x8000,};
enum MACRO_FSBAD {FSBAD = 0xFFFFFFFF,};
enum MACRO_FSFIX {FSFIX = 0xFFFFFFFC,};
enum MACRO_FSLOG {FSLOG = 0xFFFFFFFD,};
enum MACRO_FTBLK {FTBLK_EVNTS = 0x9,};
enum MACRO_FTYPE {FTYPE_UNALL_SPACE = 0x1,FTYPE_PART_INTEG = 0x2,FTYPE_INDIRECT = 0x3,FTYPE_DIRECTORY = 0x4,FTYPE_FILE = 0x5,FTYPE_BLOCK_DEV = 0x6,FTYPE_CHAR_DEV = 0x7,FTYPE_EAR = 0x8,FTYPE_FIFO = 0x9,FTYPE_C_ISSOCK = 0xA,FTYPE_T_ENTRY = 0xB,FTYPE_SYMLINK = 0xC,};
enum MACRO_FUNNY {FUNNY = 0x300,};
enum MACRO_F_CTL {F_CTL_XCHG_CONTEXT = 0x800000,F_CTL_SEQ_CONTEXT = 0x400000,F_CTL_FIRST_SEQ = 0x200000,F_CTL_LAST_SEQ = 0x100000,F_CTL_END_SEQ = 0x80000,F_CTL_END_CONNECT = 0x40000,F_CTL_CHAINED_SEQ = 0x20000,F_CTL_SEQ_INITIATIVE = 0x10000,F_CTL_XID_REASSIGNED = 0x8000,F_CTL_INVALIDATE_XID = 0x4000,F_CTL_CONTINUE_SEQ = 0xC0,F_CTL_ABORT_SEQ = 0x30,F_CTL_RO_PRESENT = 0x8,F_CTL_XCHG_REASSEMBLE = 0x4,F_CTL_FILL_BYTES = 0x3,F_CTL_RESERVED = 0x3F00,F_CTL_ALWAYS_ZERO = 0x6FFF4,};
enum MACRO_HDIOC {HDIOC = 0x400,};
enum MACRO_HOURS {HOURS_PER_DAY = 24,};
enum MACRO_ICMP6 {ICMP6_INFOMSG_MASK = 0x80,ICMP6_MINLEN = 0x8,ICMP6_DST_UNREACH = 0x1,ICMP6_PACKET_TOO_BIG = 0x2,ICMP6_TIME_EXCEEDED = 0x3,ICMP6_PARAM_PROB = 0x4,ICMP6_ECHO_REQUEST = 0x80,ICMP6_ECHO_REPLY = 0x81,ICMP6_MEMBERSHIP_QUERY = 0x82,ICMP6_MEMBERSHIP_REPORT = 0x83,ICMP6_MEMBERSHIP_REDUCTION = 0x84,};
enum MACRO_ICMPH {ICMPH_SIZE = 8,};
enum MACRO_IDLEN {IDLEN = 4,};
enum MACRO_IECMD {IECMD_RESET = 0x8000,IECMD_RU_START = 0x1000,IECMD_RU_RESUME = 0x2000,IECMD_RU_SUSPEND = 0x3000,IECMD_RU_ABORT = 0x4000,IECMD_ACK_CX = 0x80,IECMD_ACK_FR = 0x40,IECMD_ACK_CNA = 0x20,IECMD_ACK_RNR = 0x10,IECMD_CU_START = 0x1,IECMD_CU_RESUME = 0x2,IECMD_CU_SUSPEND = 0x3,IECMD_CU_ABORT = 0x4,};
enum MACRO_IECUS {IECUS_IDLE = 0,IECUS_SUSPENDED = 1,IECUS_ACTIVE = 2,};
enum MACRO_IERBD {IERBD_EOF = 0x80,IERBD_VALID = 0x40,IERBD_CNTHI = 0x3F,IERBD_EL = 0x80,IERBD_SIZEHI = 0x3F,};
enum MACRO_IERFD {IERFD_SHORT = 0x8000,IERFD_NOEOF = 0x4000,IERFD_DONE = 0x80,IERFD_BUSY = 0x40,IERFD_OK = 0x20,IERFD_CRCERR = 0x8,IERFD_ALIGN = 0x4,IERFD_NOSPACE = 0x2,IERFD_OVERRUN = 0x1,IERFD_EL = 0x80,IERFD_SUSP = 0x40,};
enum MACRO_IERUS {IERUS_IDLE = 0x0,IERUS_SUSPENDED = 0x1000,IERUS_NORESOURCE = 0x2000,IERUS_READY = 0x4000,};
enum MACRO_IESCB {IESCB_RUS = 0x7000,IESCB_CX = 0x80,IESCB_FR = 0x40,IESCB_CNA = 0x20,IESCB_RNR = 0x10,IESCB_CUS = 0x7,};
enum MACRO_IETBD {IETBD_EOF = 0x80,IETBD_CNTHI = 0x3F,};
enum MACRO_IETCB {IETCB_DEFER = 0x8000,IETCB_HEART = 0x4000,IETCB_XCOLL = 0x2000,IETCB_NCOLL = 0xF00,IETCB_DONE = 0x80,IETCB_BUSY = 0x40,IETCB_OK = 0x20,IETCB_ABORTED = 0x10,IETCB_NOCARR = 0x4,IETCB_NOCTS = 0x2,IETCB_UNDERRUN = 0x1,IETCB_CMD = 0x700,IETCB_EL = 0x80,IETCB_SUSP = 0x40,IETCB_INTR = 0x20,};
enum MACRO_IEXEC {IEXEC = 0x40,};
enum MACRO_IFBLK {IFBLK = 0x6000,IFREG = 0x8000,};
enum MACRO_IFIFO {IFIFO = 0x1000,IFCHR = 0x2000,IFDIR = 0x4000,};
enum MACRO_IFLNK {IFLNK = 0xA000,};
enum MACRO_IFNET {IFNET_SLOWHZ = 1,};
enum MACRO_IFPIO {IFPIO_FORCE_LIP = 18097,IFPIO_LINKSTATUS = 18103,};
enum MACRO_IFTUN {IFTUN_SECINFOLEN = 8,IFTUN_VERSION = 1,IFTUN_SRC = 1,IFTUN_DST = 2,IFTUN_SECURITY = 4,};
enum MACRO_INDIR {INDIR_MASK = 192,};
enum MACRO_INSTR {INSTR_VALID = 0x2,};
enum MACRO_IPOPT {IPOPT_CONTROL = 0x0,IPOPT_RESERVED1 = 0x20,IPOPT_DEBMEAS = 0x40,IPOPT_RESERVED2 = 0x60,IPOPT_EOL = 0x0,IPOPT_NOP = 0x1,IPOPT_RR = 0x7,IPOPT_TS = 0x44,IPOPT_SECURITY = 0x82,IPOPT_LSRR = 0x83,IPOPT_SATID = 0x88,IPOPT_SSRR = 0x89,IPOPT_OPTVAL = 0x0,IPOPT_OLEN = 0x1,IPOPT_OFFSET = 0x2,IPOPT_MINOFF = 0x4,IPOPT_TS_TSONLY = 0x0,IPOPT_TS_TSANDADDR = 0x1,IPOPT_TS_PRESPEC = 0x2,IPOPT_SECUR_UNCLASS = 0x0,IPOPT_SECUR_CONFID = 0xF135,IPOPT_SECUR_EFTO = 0x789A,IPOPT_SECUR_MMMM = 0xBC4D,IPOPT_SECUR_RESTR = 0xAF13,IPOPT_SECUR_SECRET = 0xD788,IPOPT_SECUR_TOPSECRET = 0x6BC5,};
enum MACRO_IPSEC {IPSEC_PREF_NEVER = 0x1,IPSEC_PREF_REQUIRED = 0x2,IPSEC_PREF_UNIQUE = 0x4,};
enum MACRO_IPTOS {IPTOS_LOWDELAY = 0x10,IPTOS_THROUGHPUT = 0x8,IPTOS_RELIABILITY = 0x4,IPTOS_PREC_NETCONTROL = 0xE0,IPTOS_PREC_INTERNETCONTROL = 0xC0,IPTOS_PREC_CRITIC_ECP = 0xA0,IPTOS_PREC_FLASHOVERRIDE = 0x80,IPTOS_PREC_FLASH = 0x60,IPTOS_PREC_IMMEDIATE = 0x40,IPTOS_PREC_PRIORITY = 0x20,IPTOS_PREC_ROUTINE = 0x0,};
enum MACRO_IP_DF {IP_DF = 0x4000,IP_MF = 0x2000,IP_MAXPACKET = 0xFFFF,};
enum MACRO_IREAD {IREAD = 0x100,};
enum MACRO_ISGID {ISGID = 0x400,};
enum MACRO_ISUID {ISUID = 0x800,};
enum MACRO_ISVTX {ISVTX = 0x200,};
enum MACRO_JBLOG {JBLOG = 6,NAMESZ = 8,LBUFMAX = 100,};
enum MACRO_JBOOT {JBOOT = 27137,};
enum MACRO_JTERM {JTERM = 27138,};
enum MACRO_JTRUN {JTRUN = 27146,};
enum MACRO_JTYPE {JTYPE = 27136,};
enum MACRO_KSTAT {KSTAT_IOC_BASE = 19200,KSTAT_IOC_CHAIN_ID = 19201,KSTAT_IOC_READ = 19202,KSTAT_IOC_WRITE = 19203,KSTAT_STRLEN = 31,KSTAT_TYPE_RAW = 0,KSTAT_TYPE_NAMED = 1,KSTAT_TYPE_INTR = 2,KSTAT_TYPE_IO = 3,KSTAT_TYPE_TIMER = 4,KSTAT_NUM_TYPES = 5,KSTAT_FLAG_VIRTUAL = 1,KSTAT_FLAG_VAR_SIZE = 2,KSTAT_FLAG_WRITABLE = 4,KSTAT_FLAG_PERSISTENT = 8,KSTAT_FLAG_DORMANT = 16,KSTAT_FLAG_INVALID = 32,KSTAT_READ = 0,KSTAT_WRITE = 1,KSTAT_DATA_CHAR = 0,KSTAT_DATA_INT32 = 1,KSTAT_DATA_UINT32 = 2,KSTAT_DATA_INT64 = 3,KSTAT_DATA_UINT64 = 4,KSTAT_DATA_LONG = 1,KSTAT_DATA_ULONG = 2,KSTAT_DATA_LONGLONG = 3,KSTAT_DATA_ULONGLONG = 4,KSTAT_DATA_FLOAT = 5,KSTAT_DATA_DOUBLE = 6,KSTAT_INTR_HARD = 0,KSTAT_INTR_SOFT = 1,KSTAT_INTR_WATCHDOG = 2,KSTAT_INTR_SPURIOUS = 3,KSTAT_INTR_MULTSVC = 4,KSTAT_NUM_INTRS = 5,};
enum MACRO_LANCE {LANCE_CSR0 = 0,LANCE_CSR1 = 1,LANCE_CSR2 = 2,LANCE_CSR3 = 3,LANCE_ERR = 32768,LANCE_BABL = 16384,LANCE_CERR = 8192,LANCE_MISS = 4096,LANCE_MERR = 2048,LANCE_RINT = 1024,LANCE_TINT = 512,LANCE_IDON = 256,LANCE_INTR = 128,LANCE_INEA = 64,LANCE_RXON = 32,LANCE_TXON = 16,LANCE_TDMD = 8,LANCE_STOP = 4,LANCE_STRT = 2,LANCE_INIT = 1,LANCE_BSWP = 4,LANCE_ACON = 2,LANCE_BCON = 1,};
enum MACRO_LCASE {LCASE = 0x4,CRMOD = 0x10,RAW = 0x20,ODDP = 0x40,EVENP = 0x80,};
enum MACRO_LDCHG {LDCHG = 17410,};
enum MACRO_LDIOC {LDIOC = 17408,};
enum MACRO_LEVEL {CLOCK_LEVEL = 10,LOCK_LEVEL = 10,DISP_LEVEL = 11,};
enum MACRO_LFLOW {LFLOW_OFF = 0,LFLOW_ON = 1,LFLOW_RESTART_ANY = 2,LFLOW_RESTART_XON = 3,};
enum MACRO_LLONG {LLONG_MIN = -9223372036854775808,LLONG_MAX = 9223372036854775807,};
enum MACRO_LOC_0 {LOC = 113,};
enum MACRO_LOGIN {LOGIN_REQUIRED = 0x16,};
enum MACRO_LOWAT {LOWAT = 200,LDCHUNK = 512,};
enum MACRO_L_SET {L_SET = 0,};
enum MACRO_MAGIC {MUTEX_MAGIC = 0x4D58,SEMA_MAGIC = 0x534D,COND_MAGIC = 0x4356,RWL_MAGIC = 0x5257,};
enum MACRO_MAXNS {MAXNS = 3,};
enum MACRO_MAXTC {MAXTC = 64,};
enum MACRO_MAX_U {MAX_U_OFF_T = 4294967295,MAX_U_OFFSET_T = -1,};
enum MACRO_MCErr {MCErr_Already = 0xF1,MCErr_Invalid = 0xF2,MCErr_Overflow = 0xF3,MCErr_None = 0xF4,MCErr_Command = 0xF5,};
enum MACRO_MCOR2 {MCOR2 = 64,};
enum MACRO_MC_NO {MC_NO_CANON = 0,MC_DO_CANON = 1,MC_PART_CANON = 3,};
enum MACRO_MEDIA {MEDIA_ACCESS_DELAY = 5000000,};
enum MACRO_MHIOC {MHIOC = 19712,};
enum MACRO_MINOR {IPV4_MINOR = 0,IPV6_MINOR = 1,};
enum MACRO_MODEM {MODEM_CHANGE = 1,};
enum MACRO_MOUSE {MOUSE_DEVID = 127,};
enum MACRO_MSG_R {MSG_R = 0x100,MSG_W = 0x80,MSG_RWAIT = 0x200,MSG_WWAIT = 0x400,MSG_NOERROR = 0x1000,};
enum MACRO_MSIOC {MSIOC = 27904,};
enum MACRO_MS_HW {MS_HW_BUT1 = 0x4,MS_HW_BUT2 = 0x2,MS_HW_BUT3 = 0x1,};
enum MACRO_MS_NO {MS_NO_RRIP = 0x800000,};
enum MACRO_MTEOM {MTEOM = 10,};
enum MACRO_MTFSR {MTFSR = 3,MTBSR = 4,};
enum MACRO_MTIOC {MTIOC = 27904,};
enum MACRO_MTNOP {MTNOP = 7,MTRETEN = 8,};
enum MACRO_MTREW {MTREW = 5,};
enum MACRO_MUTEX {MUTEX_NO_OWNER = -536870912,};
enum MACRO_MUXID {MUXID_ALL = -1,};
enum MACRO_M_CTL {M_CTL_MAGIC_NUMBER = 70,};
enum MACRO_M_MEM {M_MEM = 0,M_KMEM = 1,M_NULL = 2,M_ZERO = 12,};
enum MACRO_NADDR {NADDR = 13,};
enum MACRO_NBAND {NBAND = 256,};
enum MACRO_NCBRW {NCBRW = 0x9,};
enum MACRO_ND_RA {ND_RA_FLAG_OTHER = 0x40,ND_RA_FLAG_MANAGED = 0x80,ND_NA_FLAG_ROUTER = 0x80000000,ND_NA_FLAG_SOLICITED = 0x40000000,ND_NA_FLAG_OVERRIDE = 0x20000000,ND_OPT_SOURCE_LINKADDR = 0x1,ND_OPT_TARGET_LINKADDR = 0x2,ND_OPT_PREFIX_INFORMATION = 0x3,ND_OPT_REDIRECTED_HEADER = 0x4,ND_OPT_MTU = 0x5,ND_OPT_PI_FLAG_AUTO = 0x40,ND_OPT_PI_FLAG_ONLINK = 0x80,ND_MAX_INITIAL_RTR_ADVERT_INTERVAL = 0x3E80,ND_MAX_INITIAL_RTR_ADVERTISEMENTS = 0x3,ND_MAX_FINAL_RTR_ADVERTISEMENTS = 0x3,ND_MIN_DELAY_BETWEEN_RAS = 0xBB8,ND_MAX_RA_DELAY_TIME = 0x1F4,ND_MAX_RTR_SOLICITATION_DELAY = 0x3E8,ND_RTR_SOLICITATION_INTERVAL = 0xFA0,ND_MAX_RTR_SOLICITATIONS = 0x3,ND_MAX_MULTICAST_SOLICIT = 0x3,ND_MAX_UNICAST_SOLICIT = 0x3,ND_MAX_ANYCAST_DELAY_TIME = 0x3E8,ND_MAX_NEIGHBOR_ADVERTISEMENT = 0x3,ND_REACHABLE_TIME = 0x7530,ND_RETRANS_TIMER = 0x3E8,ND_DELAY_FIRST_PROBE_TIME = 0x1388,ND_MAX_REACHTIME = 0x36EE80,ND_MAX_REACHRETRANSTIME = 0x186A0,};
enum MACRO_NETDB {NETDB_INTERNAL = -1,NETDB_SUCCESS = 0,};
enum MACRO_NEW_C {NEW_C = 0x40,NEW_I = 0x20,NEW_S = 0x8,NEW_A = 0x4,NEW_W = 0x2,NEW_U = 0x1,};
enum MACRO_NGREG {NGREG = 19,};
enum MACRO_NGRPS {NGRPS = 16,};
enum MACRO_NHASH {DELTAMAP_NHASH = 512,LOGMAP_NHASH = 2048,};
enum MACRO_NODEV {NODEV = 4294967295,};
enum MACRO_NOKEY {NOKEY = -1,};
enum MACRO_NOPID {NOPID = -1,};
enum MACRO_NOSTR {NOSTR = 42,};
enum MACRO_NO_BD {NO_BD_A = -10,NO_BD_K = -11,};
enum MACRO_NO_IP {NO_IP_TP_CKSUM = 0xFFFF,};
enum MACRO_NPORT {NPORT_NOT_AVAIL_TEMP = 0x3,NPORT_NOT_AVAIL_PERM = 0x4,};
enum MACRO_NRBRW {NRBRW = 0x7,};
enum MACRO_NTAGS {NTAGS = 256,};
enum MACRO_NTREC {NTREC = 10,HIGHDENSITYTREC = 32,};
enum MACRO_NVECT {NVECT = 17,};
enum MACRO_NVRAM {NVRAM_WARN = 0x40000000,NVRAM_FAIL = 0x20000000,};
enum MACRO_NZERO {NZERO = 20,};
enum MACRO_N_STC {N_STC = 4,};
enum MACRO_OCTET {OCTET_LENGTH = 32,};
enum MACRO_OFLOW {OFLOW_CTL = 0x2,};
enum MACRO_OP64R {OP64R_READY = 0,OP64R_UPGRADE_REQUIRED = 1,OP64R_UPGRADE_RECOMMENDED = 2,};
enum MACRO_OPOST {OPOST = 0x1,OLCUC = 0x2,ONLCR = 0x4,OCRNL = 0x8,ONOCR = 0x10,ONLRET = 0x20,OFILL = 0x40,OFDEL = 0x80,NLDLY = 0x100,};
enum MACRO_PBIND {PBIND_NONE = -1,PBIND_QUERY = -2,};
enum MACRO_PBIOC {PBIOC = 28672,};
enum MACRO_PCIOC {PCIOC = 20480,};
enum MACRO_PCRUN {PCRUN = 5,};
enum MACRO_PERIM {PERIM_INNER = 1,PERIM_OUTER = 2,};
enum MACRO_PFIOC {PFIOC = 20480,};
enum MACRO_PF_IA {PF_IA_64_NORECOV = 0x80000000,};
enum MACRO_PGREL {PGREL_NOTREL = 0x1,PGREL_CLEAN = 0x2,PGREL_MOD = 0x3,};
enum MACRO_PILR1 {PILR1 = 0x80,};
enum MACRO_PILR2 {PILR2 = 0x81,};
enum MACRO_PILR3 {PILR3 = 0x82,};
enum MACRO_PLOSS {PLOSS = 6,};
enum MACRO_PPGRP {PPGRP = 3,LBOLT = 4,};
enum MACRO_PSR_0 {PSR = 0,PC = 1,nPC = 2,};
enum MACRO_PTR24 {PTR24_LSB = 5,PTR24_MSB = 29,PTR24_ALIGN = 32,PTR24_BASE = -536870912,};
enum MACRO_PT_IA {PT_IA_64_ARCHEXT = 0x70000000,PT_IA_64_UNWIND = 0x70000001,};
enum MACRO_QENAB {QENAB = 0x1,QWANTR = 0x2,QWANTW = 0x4,QFULL = 0x8,QREADR = 0x10,QUSE = 0x20,QNOENB = 0x40,QBACK = 0x100,QHLIST = 0x200,QPAIR = 0x800,QPERQ = 0x1000,QPERMOD = 0x2000,QMTSAFE = 0x4000,QMTOUTPERIM = 0x8000,};
enum MACRO_QNICE {QNICE = 0,BOOTDLY = 60,};
enum MACRO_QNORM {QNORM = 0x0,QPCTL = 0x80,};
enum MACRO_RDCMD {RDCMD = 0x6,};
enum MACRO_RDDEL {RDDEL = 0xC,};
enum MACRO_RDDIR {RDDIR = 0x1,RDDIRWAIT = 0x2,RDDIRREQ = 0x4,};
enum MACRO_RDTRK {RDTRK = 0x2,};
enum MACRO_RELOC {RELOC_DIR = -7,};
enum MACRO_RESET {RESET_CHAN = 0x80,};
enum MACRO_RLIOC {RLIOC = 29184,};
enum MACRO_RLMPL {RLMPL_PID = 1,RLMPL_OWNER = 2,};
enum MACRO_RNORM {RNORM = 0x0,RMSGD = 0x1,RMSGN = 0x2,};
enum MACRO_RSTAT {RSTAT_CPUSTATES = 4,RSTAT_DK_NDRIVE = 4,RSTAT_CPU_USER = 0,RSTAT_CPU_NICE = 1,RSTAT_CPU_SYS = 2,RSTAT_CPU_IDLE = 3,};
enum MACRO_R_386 {R_386_NONE = 0,R_386_32 = 1,R_386_PC32 = 2,R_386_GOT32 = 3,R_386_PLT32 = 4,R_386_COPY = 5,R_386_GLOB_DAT = 6,R_386_JMP_SLOT = 7,R_386_RELATIVE = 8,R_386_GOTOFF = 9,R_386_GOTPC = 10,R_386_32PLT = 11,R_386_NUM = 12,};
enum MACRO_R_CTL {R_CTL_ROUTING = 0xF0,R_CTL_INFO = 0xF,R_CTL_DEVICE_DATA = 0x0,R_CTL_EXTENDED_SVC = 0x20,R_CTL_FC4_SVC = 0x30,R_CTL_VIDEO_BUFF = 0x40,R_CTL_BASIC_SVC = 0x80,R_CTL_LINK_CTL = 0xC0,R_CTL_UNCATEGORIZED = 0x0,R_CTL_SOLICITED_DATA = 0x1,R_CTL_UNSOL_CONTROL = 0x2,R_CTL_SOLICITED_CONTROL = 0x3,R_CTL_UNSOL_DATA = 0x4,R_CTL_XFER_RDY = 0x5,R_CTL_COMMAND = 0x6,R_CTL_STATUS = 0x7,R_CTL_LS_NOP = 0x80,R_CTL_LS_ABTS = 0x81,R_CTL_LS_RMC = 0x82,R_CTL_LS_BA_ACC = 0x84,R_CTL_LS_BA_RJT = 0x85,R_CTL_ELS_REQ = 0x22,R_CTL_ELS_RSP = 0x23,};
enum MACRO_R_M32 {R_M32_NONE = 0,R_M32_32 = 1,R_M32_32_S = 2,R_M32_PC32_S = 3,R_M32_GOT32_S = 4,R_M32_PLT32_S = 5,R_M32_COPY = 6,R_M32_GLOB_DAT = 7,R_M32_JMP_SLOT = 8,R_M32_RELATIVE = 9,R_M32_RELATIVE_S = 10,R_M32_NUM = 11,};
enum MACRO_SAFTE {SAFTE_RD_RDCFG = 0x0,SAFTE_RD_RDESTS = 0x1,SAFTE_RD_RDDSTS = 0x4,SAFTE_WT_DSTAT = 0x10,SAFTE_WT_SLTOP = 0x12,SAFTE_WT_FANSPD = 0x13,SAFTE_WT_ACTPWS = 0x14,SAFTE_WT_GLOBAL = 0x15,};
enum MACRO_SBIOC {SBIOC = 16896,};
enum MACRO_SCALE {SCALE_KG = 64,SCALE_KF = 65536,SCALE_KH = 4,};
enum MACRO_SCHAR {SCHAR_MIN = -128,SCHAR_MAX = 127,};
enum MACRO_SCHED {SCHED_OTHER = 0,SCHED_FIFO = 1,SCHED_RR = 2,SCHED_SYS = 3,SCHED_IA = 4,};
enum MACRO_SCHR2 {SCHR2 = 0x13,};
enum MACRO_SCHR3 {SCHR3 = 0x0,};
enum MACRO_SCHR4 {SCHR4 = 0x0,MCOR1 = 0x40,};
enum MACRO_SCSI3 {SCSI3_RESV_READSHARED_OBSOLETE = 0,SCSI3_RESV_WRITEEXCLUSIVE = 1,SCSI3_RESV_READEXCLUSIVE_OBSOLETE = 2,SCSI3_RESV_EXCLUSIVEACCESS = 3,SCSI3_RESV_SHAREDACCESS_OBSOLETE = 4,SCSI3_RESV_WRITEEXCLUSIVEREGISTRANTSONLY = 5,SCSI3_RESV_EXCLUSIVEACCESSREGISTRANTSONLY = 6,SCSI3_SCOPE_LOGICALUNIT = 0,SCSI3_SCOPE_EXTENT_OBSOLETE = 1,SCSI3_SCOPE_ELEMENT = 2,};
enum MACRO_SDERR {SDERR_ALL = 0,SDERR_UNKNOWN = 1,SDERR_INFORMATIONAL = 2,SDERR_RECOVERED = 3,SDERR_RETRYABLE = 4,SDERR_FATAL = 5,};
enum MACRO_SD_IO {SD_IO_TIME = 60,SD_FMT_TIME = 7200,SD_RESET_THROTTLE_TIMEOUT = 60,SD_RETRY_COUNT = 5,SD_MAXUNIT = 32,SD_WAIT_CMDS_COMPLETE = 30,SD_REMOVAL_ALLOW = 0,SD_REMOVAL_PREVENT = 1,SD_DONTSAVE_PAGE = 0,SD_SAVE_PAGE = 1,SD_RELEASE = 0,SD_RESERVE = 1,SD_TKOWN = 2,SD_LOST_RESERVE = 4,SD_FAILFAST = 128,SD_WANT_RESERVE = 256,SD_RESERVATION_CONFLICT = 512,SD_MAX_NODES = 16,SD_REINSTATE_RESV_DELAY = 6000000,};
enum MACRO_SEM_A {SEM_A = 0x80,SEM_R = 0x100,SEM_UNDO = 0x1000,};
enum MACRO_SENSE {CLASS_EXTENDED_SENSE = 0x7,KEY_NO_SENSE = 0x0,};
enum MACRO_SETOP {SETOP_NONE = 0,SETOP_ASSIGN = 1,SETOP_AND = 2,SETOP_OR = 3,};
enum MACRO_SHIFT {SHIFT_CAPSLOCK = 32528,SHIFT_LOCK = 32529,SHIFT_LEFT = 32530,SHIFT_RIGHT = 32531,SHIFT_LEFTCTRL = 32532,SHIFT_CTRL = 32532,SHIFT_RIGHTCTRL = 32533,SHIFT_META = 32534,SHIFT_TOP = 32535,SHIFT_CMD = 32536,SHIFT_ALTG = 32537,SHIFT_ALT = 32538,SHIFT_NUMLOCK = 32539,};
enum MACRO_SHMSA {SHMSA_ISM = 1,};
enum MACRO_SIGEV {SIGEV_NONE = 1,SIGEV_SIGNAL = 2,SIGEV_THREAD = 3,};
enum MACRO_SIGNO {SIGNO_MASK = 0xFF,};
enum MACRO_SIMOD {SIMOD = 18688,};
enum MACRO_SINCR {SINCR = 4096,};
enum MACRO_SMERR {SMERR_TXC = 0x1,SMERR_RXC = 0x2,SMERR_IFLAGS = 0x4,SMERR_HDX = 0x8,SMERR_MPT = 0x10,SMERR_LPBKS = 0x20,SMERR_BAUDRATE = 0x40,SMERR_PLL = 0x80,};
enum MACRO_SOCAL {SOCAL_PROM_4TH_SELF_TST = 0x0,SOCAL_PROM_4TH_OBP_DRV = 0x1000,SOCAL_PROM_OBP_HDR = 0x5000,SOCAL_PROM_FW_DATE_CODE = 0x5300,SOCAL_PROM_SRVC_PARM = 0x5304,SOCAL_PROM_LA_BIT_MASK = 0x5344,SOCAL_PROM_RSRV1 = 0x534C,SOCAL_PROM_SOCAL_CODE = 0x6000,SOCAL_PROM_RSRV2 = 0xF000,SOCAL_XRAM_REQ_DESC = 0x200,SOCAL_XRAM_RSP_DESC = 0x220,SOCAL_XRAM_LESB_P0 = 0x240,SOCAL_XRAM_LESB_P1 = 0x258,SOCAL_XRAM_SERV_PARAMS = 0x280,SOCAL_XRAM_FW_DATE_STR = 0x2DC,SOCAL_XRAM_FW_DATE_CODE = 0x2F8,SOCAL_XRAM_HW_REV = 0x2FC,SOCAL_XRAM_UCODE = 0x300,SOCAL_XRAM_PORTA_WWN = 0x300,SOCAL_XRAM_PORTB_WWN = 0x308,SOCAL_XRAM_NODE_WWN = 0x310,SOCAL_XRAM_PORTA_HRDA = 0x318,SOCAL_XRAM_BUF_POOL = 0x4000,SOCAL_XRAM_EXCH_POOL = 0xC000,};
enum MACRO_SOMOD {SOMOD = 0x1,SOACC = 0x2,SOLOCKED = 0x10,SOREADLOCKED = 0x20,SOWANT = 0x40,SOCLONE = 0x80,};
enum MACRO_SPARC {SPARC_MAXREGWINDOW = 31,};
enum MACRO_SSIZE {SSIZE = 4096,};
enum MACRO_STACK {STACK_ALIGN32 = 8,};
enum MACRO_START {START_STOP_CYCLE_COUNTER_PAGE_SIZE = 0x28,START_STOP_CYCLE_PAGE = 0xE,START_STOP_CYCLE_VU_PAGE = 0x31,};
enum MACRO_STATE {STATE_GOT_BUS = 0x1,STATE_GOT_TARGET = 0x2,STATE_SENT_CMD = 0x4,STATE_XFERRED_DATA = 0x8,STATE_GOT_STATUS = 0x10,STATE_ARQ_DONE = 0x20,};
enum MACRO_STB_0 {STB = 0x48,};
enum MACRO_STRAT {STRAT_TYPE1 = 0x1,STRAT_TYPE2 = 0x2,STRAT_TYPE3 = 0x3,STRAT_TYPE4 = 0x4,STRAT_TYPE4096 = 0x1000,};
enum MACRO_STSET {STSET = 22529,};
enum MACRO_STTSV {STTSV = 22532,};
enum MACRO_SVSCN {SVSCN = 0x5E,};
enum MACRO_SYNCH {SYNCH = 242,};
enum MACRO_SZOMB {SZOMB = 3,SSTOP = 4,};
enum MACRO_TASKQ {TASKQ_PREPOPULATE = 0x1,TASKQ_CPR_SAFE = 0x2,};
enum MACRO_TCION {TCION = 3,tIOC = 29696,};
enum MACRO_TCPTV {TCPTV_SRTTBASE = 0,TCPTV_KEEPCNT = 8,};
enum MACRO_TD_SV {TD_SV_MAX_FLAGS = 8,};
enum MACRO_TFLOW {TFLOW = 12,};
enum MACRO_TIMER {TIMER_RELTIME = 0x0,TIMER_ABSTIME = 0x1,};
enum MACRO_TIMOD {TIMOD = 21504,};
enum MACRO_TIOCM {TIOCM_LE = 0x1,TIOCM_DTR = 0x2,TIOCM_RTS = 0x4,TIOCM_ST = 0x8,TIOCM_SR = 0x10,TIOCM_CTS = 0x20,TIOCM_CAR = 0x40,TIOCM_CD = 0x40,TIOCM_RNG = 0x80,TIOCM_RI = 0x80,TIOCM_DSR = 0x100,};
enum MACRO_TLOOK {TLOOK = 9,};
enum MACRO_TLOSS {TLOSS = 5,};
enum MACRO_TMODE {TMODE = 0xF000,};
enum MACRO_TOKEN {TOKEN_VERSION = 2,};
enum MACRO_TPLFE {TPLFE_SUB_SERIAL = 0,TPLFE_SUB_MODEM_COMMON = 1,TPLFE_SUB_MODEM_DATA = 2,TPLFE_SUB_MODEM_FAX = 3,TPLFE_SUB_VOICE = 4,TPLFE_CAP_MODEM_DATA = 5,TPLFE_CAP_MODEM_FAX = 6,TPLFE_CAP_MODEM_VOICE = 7,TPLFE_CAP_SERIAL_DATA = 8,TPLFE_CAP_SERIAL_FAX = 9,TPLFE_CAP_SERIAL_VOICE = 10,TPLFE_UA_8250 = 0,TPLFE_UA_16450 = 1,TPLFE_UA_16550 = 2,TPLFE_UC_PARITY_SPACE = 1,TPLFE_UC_PARITY_MARK = 2,TPLFE_UC_PARITY_ODD = 4,TPLFE_UC_PARITY_EVEN = 8,TPLFE_UC_CS5 = 256,TPLFE_UC_CS6 = 512,TPLFE_UC_CS7 = 1024,TPLFE_UC_CS8 = 2048,TPLFE_UC_STOP_1 = 4096,TPLFE_UC_STOP_15 = 8192,TPLFE_UC_STOP_2 = 16384,TPLFE_FC_TX_XONOFF = 1,TPLFE_FC_RX_XONOFF = 2,TPLFE_FC_TX_HW = 4,TPLFE_FC_RX_HW = 8,TPLFE_FC_TRANS = 16,TPLFE_MS_BELL103 = 1,TPLFE_MS_V21 = 2,TPLFE_MS_V23 = 4,TPLFE_MS_V22AB = 8,TPLFE_MS_BELL212 = 16,TPLFE_MS_V22BIS = 32,TPLFE_MS_V26 = 64,TPLFE_MS_V26BIS = 128,TPLFE_MS_V27BIS = 256,TPLFE_MS_V29 = 512,TPLFE_MS_V32 = 1024,TPLFE_MS_V32BIS = 2048,TPLFE_MS_VFAST = 4096,TPLFE_EM_MNP = 1,TPLFE_EM_V42 = 2,TPLFE_DC_V42BIS = 1,TPLFE_DC_MNP5 = 2,TPLFE_CM_AT1 = 1,TPLFE_CM_AT2 = 2,TPLFE_CM_AT3 = 4,TPLFE_CM_MNP_AT = 8,TPLFE_CM_V25BIS = 16,TPLFE_CM_V25A = 32,TPLFE_CM_DMCL = 64,TPLFE_EX_BREAK = 1,TPLFE_EX_PLUS = 2,TPLFE_EX_UD = 4,TPLFE_EF_CALLERID = 1,TPLFE_FM_V21C2 = 1,TPLFE_FM_V27TER = 2,TPLFE_FM_V29 = 4,TPLFE_FM_V17 = 8,TPLFE_FM_V33 = 16,TPLFE_FS_T3 = 1,TPLFE_FS_T4 = 2,TPLFE_FS_T6 = 4,TPLFE_FS_ECM = 8,TPLFE_FS_VOICEREQ = 16,TPLFE_FS_POLLING = 32,TPLFE_FS_FTP = 64,TPLFE_FS_PASSWORD = 128,TPLFE_NETWORK_INFO = 0,TPLFE_LAN_TECH_ARCNET = 1,TPLFE_LAN_TECH_ETHERNET = 2,TPLFE_LAN_TECH_TOKENRING = 3,TPLFE_LAN_TECH_LOCALTALK = 4,TPLFE_LAN_TECH_FDDI = 5,TPLFE_LAN_TECH_ATM = 6,TPLFE_LAN_TECH_WIRELESS = 7,TPLFE_LAN_MEDIA_INHERENT = 0,TPLFE_LAN_MEDIA_UTP = 1,TPLFE_LAN_MEDIA_STP = 2,TPLFE_LAN_MEDIA_THIN_COAX = 3,TPLFE_LAN_MEDIA_THICK_COAX = 4,TPLFE_LAN_MEDIA_FIBER = 5,TPLFE_LAN_MEDIA_SSR_902 = 6,TPLFE_LAN_MEDIA_SSR_2_4 = 7,TPLFE_LAN_MEDIA_SSR_5_4 = 8,TPLFE_LAN_MEDIA_DIFFUSE_IR = 9,TPLFE_LAN_MEDIA_PTP_IR = 10,};
enum MACRO_TSGID {TSGID = 0x400,};
enum MACRO_TSIGN {TSIGN = 0x800,};
enum MACRO_TSVTX {TSVTX = 0x200,};
enum MACRO_T_ACK {T_ACK_ON = 0x80,T_P_ON = 0x40,T_REJ_ON = 0x20,T_REM_BUSY_ON = 0x10,T_INACT_ON = 0x8,T_SEND_ACK_ON = 0x4,};
enum MACRO_T_FMT {T_FMT = 46,};
enum MACRO_T_SS2 {T_SS2 = 7,T_SS3 = 8,};
enum MACRO_UCHAR {UCHAR_MAX = 255,MB_LEN_MAX = 5,};
enum MACRO_UCRED {UCRED = 13,};
enum MACRO_ULONG {ULONG_MAX = -1,SIZE_MAX = -1,SSIZE_MAX = 2147483647,};
enum MACRO_USCRL {USCRL = 0x56,};
enum MACRO_USCSI {USCSI_WRITE = 0x0,USCSI_SILENT = 0x1,USCSI_DIAGNOSE = 0x2,USCSI_ISOLATE = 0x4,USCSI_READ = 0x8,USCSI_RESET = 0x4000,USCSI_RESET_ALL = 0x8000,USCSI_RQENABLE = 0x10000,USCSI_ASYNC = 0x1000,USCSI_SYNC = 0x2000,USCSI_NOINTR = 0x40,USCSI_NOTAG = 0x100,USCSI_OTAG = 0x200,USCSI_HTAG = 0x400,USCSI_HEAD = 0x800,USCSI_NOPARITY = 0x10,USCSI_NODISCON = 0x20,USCSI_RESERVED = 0xFFFE0000,};
enum MACRO_USHRT {USHRT_MAX = 65535,};
enum MACRO_USYNC {USYNC_THREAD = 0x0,USYNC_PROCESS = 0x1,};
enum MACRO_UTRAP {UTRAP_V8P_FP_DISABLED = 7,UTRAP_V8P_MEM_ADDRESS_NOT_ALIGNED = 15,};
enum MACRO_UVSCN {UVSCN = 0x5F,};
enum MACRO_VALID {VALID_ATTR = 55,};
enum MACRO_VCEOF {VCEOF = 8,};
enum MACRO_VCEOL {VCEOL = 9,};
enum MACRO_VEOL2 {VEOL2 = 6,};
enum MACRO_VEXEC {VEXEC = 0x40,};
enum MACRO_VHOME {VHOME = 0x46,};
enum MACRO_VINTR {VINTR = 0,VQUIT = 1,VERASE = 2,};
enum MACRO_VIOCF {VIOCF = 17920,};
enum MACRO_VKILL {VKILL = 3,VEOF = 4,};
enum MACRO_VOLID {VOLID_TMP = 0xFF00000000000000,};
enum MACRO_VREAD {VREAD = 0x100,};
enum MACRO_VROOT {VROOT = 0x1,VNOCACHE = 0x2,VNOMAP = 0x4,VDUP = 0x8,VNOSWAP = 0x10,VNOMOUNT = 0x20,VISSWAP = 0x40,VSWAPLIKE = 0x80,VVFSLOCK = 0x100,VVFSWAIT = 0x200,VVMLOCK = 0x400,VDIROPEN = 0x800,VVMEXEC = 0x1000,VPXFS = 0x2000,};
enum MACRO_VSGID {VSGID = 0x400,};
enum MACRO_VSTOP {VSTOP = 9,};
enum MACRO_VSUID {VSUID = 0x800,};
enum MACRO_VSUSP {VSUSP = 10,};
enum MACRO_VSVTX {VSVTX = 0x200,};
enum MACRO_VTIME {VTIME = 5,};
enum MACRO_VUIOC {VUIOC = 30208,};
enum MACRO_WCHAR {WCHAR_MAX = 2147483647,WCHAR_MIN = -2147483648,};
enum MACRO_WLOCK {HWORD_WLOCK = 0xFFFF,WORD_WLOCK = 0xFFFFFFFF,};
enum MACRO_WORLD {WORLD_DEFAULT = 1,GROUP_DEFAULT = 256,OWNER_DEFAULT = 983040,};
enum MACRO_XMTWR {XMTWR = 3,DSPRD = 4,};
enum MACRO_XR_O0 {XR_O0 = 0,XR_O1 = 1,XR_O2 = 2,XR_O3 = 3,XR_O4 = 4,XR_O5 = 5,XR_O6 = 6,XR_O7 = 7,};
enum MACRO_YPERR {YPERR_BADARGS = 1,YPERR_RPC = 2,YPERR_DOMAIN = 3,YPERR_MAP = 4,YPERR_KEY = 5,YPERR_YPERR = 6,YPERR_RESRC = 7,YPERR_NOMORE = 8,YPERR_PMAP = 9,YPERR_YPBIND = 10,YPERR_YPSERV = 11,YPERR_NODOM = 12,YPERR_BADDB = 13,YPERR_VERS = 14,YPERR_ACCESS = 15,YPERR_BUSY = 16,};
enum MACRO_ZSR15 {ZSR15_TIMER = 0x2,ZSR15_CD = 0x8,ZSR15_SYNC = 0x10,ZSR15_CTS = 0x20,ZSR15_TX_UNDER = 0x40,ZSR15_BREAK = 0x80,};
enum MACRO_ZSRR0 {ZSRR0_RX_READY = 0x1,ZSRR0_TIMER = 0x2,ZSRR0_TX_READY = 0x4,ZSRR0_CD = 0x8,ZSRR0_SYNC = 0x10,ZSRR0_CTS = 0x20,ZSRR0_TXUNDER = 0x40,ZSRR0_BREAK = 0x80,};
enum MACRO_ZSRR1 {ZSRR1_ALL_SENT = 0x1,ZSRR1_PE = 0x10,ZSRR1_DO = 0x20,ZSRR1_FE = 0x40,ZSRR1_RXEOF = 0x80,};
enum MACRO_ZSRR3 {ZSRR3_IP_B_STAT = 0x1,ZSRR3_IP_B_TX = 0x2,ZSRR3_IP_B_RX = 0x4,ZSRR3_IP_A_STAT = 0x8,ZSRR3_IP_A_TX = 0x10,ZSRR3_IP_A_RX = 0x20,};
enum MACRO_ZSWR0 {ZSWR0_REG = 0xF,ZSWR0_RESET_STATUS = 0x10,ZSWR0_SEND_ABORT = 0x18,ZSWR0_FIRST_RX = 0x20,ZSWR0_RESET_TXINT = 0x28,ZSWR0_RESET_ERRORS = 0x30,ZSWR0_CLR_INTR = 0x38,ZSWR0_RESET_RXCRC = 0x40,ZSWR0_RESET_TXCRC = 0x80,ZSWR0_RESET_EOM = 0xC0,};
enum MACRO_ZSWR1 {ZSWR1_SIE = 0x1,ZSWR1_TIE = 0x2,ZSWR1_PARITY_SPECIAL = 0x4,ZSWR1_RIE_FIRST_SPECIAL = 0x8,ZSWR1_RIE = 0x10,ZSWR1_RIE_SPECIAL_ONLY = 0x18,ZSWR1_REQ_IS_RX = 0x20,ZSWR1_REQ_NOT_WAIT = 0x40,ZSWR1_REQ_ENABLE = 0x80,};
enum MACRO_ZSWR3 {ZSWR3_RX_ENABLE = 0x1,ZSWR3_RXCRC_ENABLE = 0x8,ZSWR3_HUNT = 0x10,ZSWR3_AUTO_CD_CTS = 0x20,ZSWR3_RX_5 = 0x0,ZSWR3_RX_6 = 0x80,ZSWR3_RX_7 = 0x40,ZSWR3_RX_8 = 0xC0,};
enum MACRO_ZSWR4 {ZSWR4_PARITY_ENABLE = 0x1,ZSWR4_PARITY_EVEN = 0x2,ZSWR4_1_STOP = 0x4,ZSWR4_1_5_STOP = 0x8,ZSWR4_2_STOP = 0xC,ZSWR4_BISYNC = 0x10,ZSWR4_SDLC = 0x20,ZSWR4_X1_CLK = 0x0,ZSWR4_X16_CLK = 0x40,ZSWR4_X32_CLK = 0x80,ZSWR4_X64_CLK = 0xC0,};
enum MACRO_ZSWR5 {ZSWR5_TXCRC_ENABLE = 0x1,ZSWR5_RTS = 0x2,ZSWR5_CRC16 = 0x4,ZSWR5_TX_ENABLE = 0x8,ZSWR5_BREAK = 0x10,ZSWR5_TX_5 = 0x0,ZSWR5_TX_6 = 0x40,ZSWR5_TX_7 = 0x20,ZSWR5_TX_8 = 0x60,ZSWR5_DTR = 0x80,};
enum MACRO_ZSWR9 {ZSWR9_VECTOR_INCL_STAT = 0x1,ZSWR9_NO_VECTOR = 0x2,ZSWR9_DIS_LOWER_CHAIN = 0x4,ZSWR9_MASTER_IE = 0x8,ZSWR9_STAT_HIGH = 0x10,ZSWR9_RESET_CHAN_B = 0x40,ZSWR9_RESET_CHAN_A = 0x80,ZSWR9_RESET_WORLD = 0xC0,};
enum MACRO__CANT {_CANT_BE_IMMED = 0x10,};
enum MACRO__COLL {_COLL_FORWARD_MASK = 0x1,_COLL_BACKWARD_MASK = 0x2,_COLL_NOSUBS_MASK = 0x4,_COLL_POSITION_MASK = 0x8,_COLL_SUBS_MASK = 0x10,};
enum MACRO__DATE {_DATE_FMT = 58,};
enum MACRO__FILE {_FILE_OFFSET_BITS = 32,};
enum MACRO__IEEE {_IEEE = 1,};
enum MACRO__LINK {_LINK_NEEDED = 0x4,};
enum MACRO__LONG {_LONG_ALIGNMENT = 4,_LONG_DOUBLE_ALIGNMENT = 8,};
enum MACRO__NBBY {_NBBY = 8,};
enum MACRO__NULL {_NULL = 0,};
enum MACRO__SUBS {_SUBS_ACTIVE = 1,_SUBS_REGEXP = 2,};
enum MACRO__TIOC {_TIOC = 21504,};
enum MACRO__ZERO {_ZERO_ = 0,};
enum MACRO___LWP {__LWP_ASLWP = 0x100,};
enum MACRO___NPD {__NPD_MAXPASSBYTES = 12,};
enum MACRO___NSW {__NSW_STD_ERRS = 4,__NSW_SUCCESS = 0,__NSW_NOTFOUND = 1,__NSW_UNAVAIL = 2,__NSW_TRYAGAIN = 3,__NSW_CONTINUE = 0,__NSW_RETURN = 1,};
enum MACRO___RES {__RES = 19960801,};
enum MACRO___RPC {__RPC_CLNT_MINFD_SET = 8,__RPC_CLNT_MINFD_GET = 9,};
typedef struct svcxprt_ext_t SVCXPRT_EXT;
typedef struct segdrv_data Segdrv_Data;
typedef struct vuid_q_node Vuid_q_node;
typedef struct Xfer_Rdy *XFER_RDYptr;
typedef struct _C8DBEC58A6C5CAB5E40652D978B29F79 _Color_pair;
struct _FN_attrset;
struct _FN_nameset;
struct __mbstate_t {int __filler[6];};
enum __ns_opcode {ns_o_query = 0x0,ns_o_iquery = 0x1,ns_o_status = 0x2,ns_o_notify = 0x4,ns_o_update = 0x5,ns_o_max = 0x6,};
struct _num_struct {short _columns;short _init_tabs;short _lines;short _lines_of_memory;short _magic_cookie_glitch;short _padding_baud_rate;short _virtual_terminal;short _width_status_line;short _num_labels;short _labl_height;short _labl_width;short _max_attributes;short _maximum_windows;short _max_colors;short _max_pairs;short _no_color_video;short _buffer_capacity;short _dot_vert_spacing;short _dot_horz_spacing;short _max_micro_address;short _max_micro_jump;short _micro_char_size;short _micro_line_size;short _number_of_pins;short _output_res_char;short _output_res_line;short _output_res_horz_inch;short _output_res_vert_inch;short _print_rate;short _wide_char_size;short _buttons;short _bit_image_entwining;short _bit_image_type;short Sentinel;};
typedef struct _timespec _timespec_t;
enum accept_stat {SUCCESS = 0x0,PROG_UNAVAIL = 0x1,PROG_MISMATCH = 0x2,PROC_UNAVAIL = 0x3,GARBAGE_ARGS = 0x4,SYSTEM_ERR = 0x5,};
struct aflt_cookie {int handler_type;void *cookie;};
struct au_exit_tok {int status;int retval;};
typedef struct au_ip_tok au_ip_tok_t;
typedef struct au_termid au_termid_t;
struct audit_fstat {unsigned int af_filesz;unsigned int af_currsz;};
typedef struct auditinfo auditinfo_t;
enum autofs_stat {AUTOFS_ACTION = 0x0,AUTOFS_DONE = 0x1,};
typedef unsigned long long boot_cell_t;
typedef char *bp_fileid_t;
struct cache_label {int cl_cfsversion;int cl_maxblks;int cl_blkhiwat;int cl_blklowat;int cl_maxinodes;int cl_filehiwat;int cl_filelowat;int cl_blocktresh;int cl_blockmin;int cl_filetresh;int cl_filemin;int cl_maxfiles;};
enum cachefs_cmd {CFS_INVALID = 0x0,CFS_CACHE_SYNC = 0x1,CFS_PUTPAGE = 0x2,CFS_IDLE = 0x3,CFS_POPULATE = 0x4,CFS_NOOP = 0x5,};
typedef struct callb_cpr callb_cpr_t;
typedef int cfga_busy_t;
typedef char cfga_info_t[4096];
typedef char cfga_type_t[12];
enum cfs_dlog_op {CFS_DLOG_CREATE = 0x100,CFS_DLOG_REMOVE = 0x101,CFS_DLOG_LINK = 0x102,CFS_DLOG_RENAME = 0x103,CFS_DLOG_MKDIR = 0x104,CFS_DLOG_RMDIR = 0x105,CFS_DLOG_SYMLINK = 0x106,CFS_DLOG_SETATTR = 0x107,CFS_DLOG_SETSECATTR = 0x108,CFS_DLOG_MODIFIED = 0x109,CFS_DLOG_MAPFID = 0x10A,CFS_DLOG_TRAILER = 0x10B,};
typedef struct class_ops class_ops_t;
typedef struct cont_info_struct cont_info_t;
typedef char cookieverf3[8];
typedef void cpc_errfn_t( char *fn,  char *fmt, va_list ap);
typedef struct _cpc_event cpc_event_t;
struct cpu_syswait {int iowait;int swap;int physio;};
enum createmode3 {UNCHECKED = 0x0,GUARDED = 0x1,EXCLUSIVE = 0x2,};
typedef char createverf3[8];
typedef int cyc_index_t;
typedef struct dacf_rule dacf_rule_t;
struct dadkio_derr {int d_action;int d_severity;};
typedef struct dbri_intq dbri_intq_t;
typedef struct ddi_devid *ddi_devid_t;
typedef struct _A9BE18D8DE98772F097D505829E8B2F3 dl_ok_ack_t;
typedef unsigned int door_attr_t;
typedef struct door_cred door_cred_t;
typedef struct door_desc door_desc_t;
typedef struct door_info door_info_t;
typedef struct ea_object ea_object_t;
enum eject_state {VEJ_YES = 0x0,VEJ_NO = 0x1,VEJ_YESSTOP = 0x2,VEJ_NONE = 0x3,};
typedef struct ether_hdr ether_hdr_t;
struct exit_status {short e_termination;short e_exit;};
typedef struct extent_ad extent_ad_t;
typedef int faultcode_t;
struct fb_wid_item {unsigned int wi_type;int wi_index;unsigned int wi_attrs;unsigned int wi_values[32];};
struct fb_wid_list {unsigned int wl_flags;unsigned int wl_count;struct fb_wid_item *wl_list;};
typedef struct fc_packet fc_packet_t;
typedef struct port_id fc_portid_t;
typedef struct fdb_holes fdb_holes_t;
typedef struct fpollinfo fpollinfo_t;
enum fsh4_access {FSA_NONE = 0x0,FSA_R = 0x1,FSA_W = 0x2,FSA_RW = 0x3,};
typedef struct gss_OID_set_desc_struct *gss_OID_set;
enum handshake_t {BPP_NO_HS = 0x1,BPP_ACK_HS = 0x2,BPP_BUSY_HS = 0x3,BPP_ACK_BUSY_HS = 0x4,BPP_XSCAN_HS = 0x5,BPP_HSCAN_HS = 0x6,BPP_CLEAR_MEM = 0x7,BPP_SET_MEM = 0x8,BPP_VPRINT_HS = 0x9,BPP_VPLOT_HS = 0xA,};
enum hs_vol_type {HS_VOL_TYPE_HS = 0x0,HS_VOL_TYPE_ISO = 0x1,};
typedef struct icmp6_mld icmp6_mld_t;
typedef struct if_msghdr if_msghdr_t;
typedef struct ifp_stats ifp_stats_t;
typedef struct _029C14C2128B1475759967EB9FDC7B4A in_prefix_t;
typedef struct _0113267646EB0A9CEC05668EA2201D53 inetcksum_t;
typedef struct ip6_rthdr ip6_rthdr_t;
typedef struct ip_member ip_member_t;
typedef struct ipsec_req ipsec_req_t;
typedef struct iuvd_desc iuvd_desc_t;
typedef struct k_siginfo k_siginfo_t;
typedef struct _8E17CB6E332B6DCEA38208AF631FD83A kobj_stat_t;
typedef struct kstat_ctl kstat_ctl_t;
typedef struct la_ba_acc la_ba_acc_t;
typedef struct la_ba_rjt la_ba_rjt_t;
typedef struct llc1_multicast_addr llc_mcast_t;
enum lm_disp_how {LM_CALLBACK = 0x14,LM_SENDREPLY = 0x15,};
enum log_entry_t {LOG_NOP = 0x0,ADD_NAME = 0x1,REM_NAME = 0x2,MOD_NAME_OLD = 0x3,MOD_NAME_NEW = 0x4,ADD_IBASE = 0x5,REM_IBASE = 0x6,MOD_IBASE = 0x7,UPD_STAMP = 0x8,};
typedef struct lufs_save lufs_save_t;
typedef struct _lwp_mutex lwp_mutex_t;
typedef struct lwpstatus lwpstatus_t;
struct mdi_cfginfo {int mdi_ncluts;int mdi_type;int mdi_height;int mdi_width;int mdi_size;int mdi_mode;int mdi_pixfreq;};
typedef struct mib2_icmp mib2_icmp_t;
typedef struct ml_odunit ml_odunit_t;
struct modctl_list {struct modctl_list *modl_next;struct modctl *modl_modp;};
struct module_list {struct module_list *next;struct module *mp;};
typedef void module_mach;
struct module_stat {int ms_pcnt;int ms_scnt;int ms_ocnt;int ms_ccnt;int ms_acnt;char *ms_xptr;short ms_xsize;};
struct nd_addrlist {int n_cnt;struct netbuf *n_addrs;};
struct nd_hostserv {char *h_host;char *h_serv;};
struct nd_mergearg {char *s_uaddr;char *c_uaddr;char *m_uaddr;};
struct nfs_fhandle {int fh_len;char fh_buf[64];};
typedef struct p_inquiry p_inquiry_t;
struct pam_message {int msg_style;char *msg;};
typedef struct part_desc part_desc_t;
struct passwd_info {char *pw_gecos;char *pw_shell;};
typedef struct pcmcia_cs pcmcia_cs_t;
typedef struct pcmcia_if pcmcia_if_t;
typedef struct phdr_desc phdr_desc_t;
typedef struct _D89EB48B0F107D6E39C0EF37AAFDA6FD pppConfig_t;
typedef struct proc_edge proc_edge_t;
typedef struct prxregset prxregset_t;
typedef struct rd_notify rd_notify_t;
enum reject_stat {RPC_MISMATCH = 0x0,AUTH_ERROR = 0x1,};
typedef struct gss_OID_desc_struct *rpc_gss_OID;
typedef struct rt_msghdr rt_msghdr_t;
typedef unsigned short sa_family_t;
typedef struct sadb_comb sadb_comb_t;
typedef struct sadb_prop sadb_prop_t;
typedef struct sadb_sens sadb_sens_t;
typedef struct sc_public sc_public_t;
typedef struct sc_shared sc_shared_t;
struct sched_param {int sched_priority;int sched_nicelim;int sched_nice;int sched_pad[6];};
struct scsi_status {unsigned char sts_resvd : 1;unsigned char sts_vu7 : 1;unsigned char sts_vu6 : 1;unsigned char sts_is : 1;unsigned char sts_busy : 1;unsigned char sts_cm : 1;unsigned char sts_chk : 1;unsigned char sts_vu0 : 1;};
typedef struct _sema_impl sema_impl_t;
typedef struct ses_softc ses_softc_t;
typedef struct sf_al_map sf_al_map_t;
struct shrlocklist {struct shrlock *shr;struct shrlocklist *next;};
struct siginfolist {int nsiginfo;char **vsiginfo;};
typedef struct statvfs64 statvfs64_t;
struct stc_stats_t {int line_no;int cmd;int qpunt;int drain_timer;int no_canput;int no_rcv_drain;int stc_drain;int stc_break;int stc_sbreak;int stc_ebreak;int set_modem;int get_modem;int ioc_error;int set_params;int no_start;int xmit_int;int rcv_int;int rcvex_int;int modem_int;int xmit_cc;int rcv_cc;int break_cnt;int bufcall;int canwait;int nqfretry;};
typedef int suseconds_t;
typedef struct service_param svc_param_t;
typedef unsigned int t_uscalar_t;
typedef void task_func_t(void *);
typedef struct taskq_ent taskq_ent_t;
typedef struct td_notify td_notify_t;
struct td_ta_stats {int nthreads;int r_concurrency;int nrunnable_num;int nrunnable_den;int a_concurrency_num;int a_concurrency_den;int nlwps_num;int nlwps_den;int nidle_num;int nidle_den;};
struct td_thragent;
typedef struct term_desc term_desc_t;
typedef struct _B9298FF2B0C5BA7708F912183DC0A181 tifiocgfw_t;
typedef struct timespec timestruc_t;
typedef unsigned long long tnf_datum_t;
typedef short tnf_int16_t;
typedef int tnf_int32_t;
typedef unsigned char tnf_uint8_t;
typedef struct trace_ids trace_ids_t;
typedef struct tracedata tracedata_t;
typedef struct turnstile turnstile_t;
struct utmpidlearr {struct utmpidle **uia_arr;int uia_cnt;};
typedef struct vt_data_4 vt_data_4_t;
typedef struct vt_data_8 vt_data_8_t;
enum vuid_device {VUID_ASCII = 0x0,VUID_TOP = 0x1,VUID_ISO = 0x2,VUID_LIGHTPEN = 0x79,VUID_DIAL = 0x7B,VUID_SUNVIEW = 0x7C,VUID_PANEL = 0x7D,VUID_SCROLL = 0x7E,VUID_WORKSTATION = 0x7F,VUID_LAST = 0xFF,};
enum vuid_q_code {VUID_Q_OK = 0x0,VUID_Q_OVERFLOW = 0x1,VUID_Q_EMPTY = 0x2,};
typedef unsigned int Elf32_Addr;
typedef struct _4965EEC990952D9E46AE6A5DEA6146E6 Elf32_Boot;
typedef struct _160641F2D897670075418D2E6B733231 Elf32_Ehdr;
typedef unsigned short Elf32_Half;
typedef struct _2A4C46EAAE865C05377B30846399D3D1 Elf32_Move;
typedef struct _8A4D2DD0535D3740C9D9302B62B9E8F3 Elf32_Nhdr;
typedef struct _4788A0C65CEF1424AE2DE816674E1913 Elf32_Phdr;
typedef struct _AAECD496E21460385AB9540869BF9C78 Elf32_Rela;
typedef struct _0F2B39C4889BFBA0BBC9C66D38A1F5D3 Elf32_Shdr;
typedef unsigned int Elf32_Word;
typedef unsigned long long Elf64_Addr;
typedef struct _59C2F8BE822F39E0857CE77037A0F7B3 Elf64_Boot;
typedef struct _31DC1A9A30C8BE83503485AFF4563DAB Elf64_Ehdr;
typedef unsigned short Elf64_Half;
typedef struct _8D40ACCAC6057C8589735CF1D51B872E Elf64_Move;
typedef struct _CA18D99C52BF47BA3661A7BE783B3F23 Elf64_Nhdr;
typedef struct _61B607A2274ED5109A268B0B2173104D Elf64_Phdr;
typedef struct _4664B325D7B1C568276997F8FB024EC2 Elf64_Rela;
typedef struct _6C157D281FCCF3AD18E5920BAFADC6E6 Elf64_Shdr;
typedef unsigned int Elf64_Word;
typedef struct firm_event Firm_event;
typedef struct in6_addr Ip6Address;
typedef int LayoutDesc;
enum MACRO_AFLT {AFLT_ECC = 1,AFLT_SX = 2,AFLT_SUCCESS = 0,AFLT_NOTSUPPORTED = 1,AFLT_FAILURE = 2,AFLT_HANDLED = 0,AFLT_NOTHANDLED = 1,};
enum MACRO_ANON {ANON_PTRSHIFT = 2,ANON_SLEEP = 0,ANON_NOSLEEP = 1,ANON_ALLOC_FORCE = 2,};
enum MACRO_ANYP {ANYP = 0xC0,NLDELAY = 0x300,TBDELAY = 0x400,CRDELAY = 0x3000,VTDELAY = 0x4000,BSDELAY = 0x8000,};
enum MACRO_ASEG {ASEG = 0x58,};
enum MACRO_ATAB {ATAB = 0x53,};
enum MACRO_ATTR {ATTR_FOUND = 0,ATTR_NOT_FOUND = -1,ATTR_NO_RECOVERY = -2,};
enum MACRO_AUTH {AUTH_MMAPLEN = 1024,};
enum MACRO_B110 {B110 = 3,B134 = 4,};
enum MACRO_B150 {B150 = 5,};
enum MACRO_B200 {B200 = 6,};
enum MACRO_B300 {B300 = 7,B600 = 8,};
enum MACRO_BAUD {RX_BAUD = 13,TX_BAUD = 13,};
enum MACRO_BIAS {INTEGER_BIAS = 31,LONGLONG_BIAS = 63,SINGLE_BIAS = 127,DOUBLE_BIAS = 1023,EXTENDED_BIAS = 16383,};
enum MACRO_BMAC {BMAC_XIFC_MODE_SERIAL = 0x8,BMAC_XIFC_LPBK = 0x4,BMAC_XIFC_RSVD = 0x2,BMAC_XIFC_ENAB = 0x1,BMAC_STAT_DEFER = 0x8000,BMAC_STAT_NETCOLL = 0x4000,BMAC_STAT_LCOL = 0x2000,BMAC_STAT_EXCCOLL = 0x1000,BMAC_STAT_NORCOLL = 0x800,BMAC_STAT_MAXPKT = 0x400,BMAC_STAT_UFLO = 0x200,BMAC_STAT_TXINTR = 0x100,BMAC_STAT_RXCV = 0x40,BMAC_STAT_OFLO = 0x20,BMAC_STAT_LENGTH = 0x10,BMAC_STAT_CRC = 0x8,BMAC_STAT_ALNERR = 0x4,BMAC_STAT_RXFRMC = 0x2,BMAC_STAT_RXINTR = 0x1,BMAC_MASK_DEFERM = 0x8000,BMAC_MASK_NETCOLLM = 0x4000,BMAC_MASK_LCOLM = 0x2000,BMAC_MASK_EXCCOLLM = 0x1000,BMAC_MASK_NORCOLLM = 0x800,BMAC_MASK_MAXPKTM = 0x400,BMAC_MASK_UFLOM = 0x200,BMAC_MASK_TXINTRM = 0x100,BMAC_MASK_RXCV = 0x40,BMAC_MASK_OFLOM = 0x20,BMAC_MASK_LENGTH = 0x10,BMAC_MASK_CRCM = 0x8,BMAC_MASK_ALNERRM = 0x4,BMAC_MASK_RXFRMCM = 0x2,BMAC_MASK_RXINTRM = 0x1,BMAC_MASK_OTHER = 0x7E7E,BMAC_MASK_TINT_RINT = 0x101,BMAC_TXCFG_FDUP = 0x200,BMAC_TXCFG_NFCS = 0x80,BMAC_TXCFG_IGCOLL = 0x40,BMAC_TXCFG_SLOW = 0x20,BMAC_TXCFG_FIFO = 0x10,BMAC_TXCFG_ENAB = 0x1,BMAC_RXCFG_ADDR = 0x1000,BMAC_RXCFG_HASH = 0x800,BMAC_RXCFG_GRPROM = 0x400,BMAC_RXCFG_MYOWN = 0x200,BMAC_RXCFG_CRC = 0x100,BMAC_RXCFG_ERR = 0x80,BMAC_RXCFG_PROMIS = 0x40,BMAC_RXCFG_STRIP = 0x20,BMAC_RXCFG_FIFO = 0xE,BMAC_RXCFG_ENAB = 0x1,};
enum MACRO_BOOL {TRUE = 1,FALSE = 0,};
enum MACRO_BOOT {BOOT_SVC_FAIL = -1,BOOT_SVC_OK = 1,};
enum MACRO_BPRI {BPRI_LO = 1,BPRI_MED = 2,BPRI_HI = 3,BPRI_FT = 4,};
enum MACRO_BPRT {BPRT = 0x59,};
enum MACRO_BULK {BULK_ONLY_RESET = 0xFF,BULK_ONLY_GET_MAXLUN = 0xA1,};
enum MACRO_BUSY {BUSY_LOOP_C = 200000,BUSY_COUNT_C = 10,};
enum MACRO_BYTE {BYTE_ORDER = 4321,};
enum MACRO_CANT {CANT_ESTABLISH_EXCHANGE = 0x18,};
enum MACRO_CARR {CARR_ON = 0x10,};
enum MACRO_CB_0 {CB = 0x10,};
enum MACRO_CCTS {CCTS_OFLOW = 0x80000000,};
enum MACRO_CEOL {CEOL = 0,};
enum MACRO_CEOT {CEOT = 0x4,};
enum MACRO_CESC {CESC = 92,};
enum MACRO_CFGA {CFGA_AP_LOG_ID_LEN = 20,CFGA_AP_PHYS_ID_LEN = 1024,CFGA_INFO_LEN = 4096,CFGA_TYPE_LEN = 12,CFGA_CLASS_LEN = 12,CFGA_LOG_EXT_LEN = 30,CFGA_PHYS_EXT_LEN = 1054,CFGA_FLAG_FORCE = 1,CFGA_FLAG_VERBOSE = 2,CFGA_FLAG_LIST_ALL = 4,};
enum MACRO_CHAN {CHAN_CTL = 0x10,};
enum MACRO_CHAP {CHAP_MAX_PASSWD = 255,CHAP_MAX_NAME = 255,};
enum MACRO_CHAR {CHAR_BIT = 8,};
enum MACRO_CHDR {CHDR_OFFSET = 1024,};
enum MACRO_CISP {CISP_CIS_SETUP = 0x1,CISP_CIS_LIST_CREATE = 0x2,CISP_CIS_LIST_DESTROY = 0x3,CISP_CIS_GET_LTUPLE = 0x4,CISP_CIS_PARSE_TUPLE = 0x5,CISP_CIS_CONV_DEVSPEED = 0x6,CISP_CIS_CONV_DEVSIZE = 0x7,};
enum MACRO_CLCR {CLCR_SET_LOWVERS = 3,CLCR_GET_LOWVERS = 4,};
enum MACRO_CNUL {CNUL = 0,CDEL = 127,};
enum MACRO_COLL {COLL_WEIGHTS_MAX = 10,EXPR_NEST_MAX = 32,LINE_MAX = 2048,RE_DUP_MAX = 255,PASS_MAX = 8,CHARCLASS_NAME_MAX = 14,};
enum MACRO_CONN {CONN_HDX = 0x1,CONN_MPT = 0x2,CONN_IBM = 0x4,CONN_SIGNAL = 0x8,CONN_NRZI = 0x10,CONN_LPBK = 0x20,CONN_ECHO = 0x40,};
enum MACRO_COPY {COPY_PROTECTED = 0x80,};
enum MACRO_COR1 {COR1 = 19,};
enum MACRO_COR2 {COR2 = 0x0,COR3 = 0x4,SCHR1 = 0x11,};
enum MACRO_CORE {CORE_MAGIC = 0x80456,CORE_NAMELEN = 0x10,};
enum MACRO_CRTN {CRTN = 0x5B,};
enum MACRO_CRTS {CRTS_IFLOW = 0x40000000,};
enum MACRO_CTAB {CTAB = 0x55,};
enum MACRO_CTRL {CTRL_QMOD_RESTRICT = 0x0,CTRL_QMOD_UNRESTRICT = 0x1,};
enum MACRO_CURS {CURS_STUPID = 0,CURS_UNKNOWN = 1,CURS_BAD_MALLOC = 2,};
enum MACRO_CVID {CVID = 0x62,};
enum MACRO_C_RL {C_RL_MAXENTS = 0x4000,};
enum MACRO_DACF {DACF_MODREV_1 = 1,DACF_NUM_OPIDS = 2,DACF_SUCCESS = 0,DACF_FAILURE = -1,DACF_RULE_HASHSIZE = 8,DACF_MODULE_HASHSIZE = 8,DACF_INFO_HASHSIZE = 16,DACF_PROC_INVOKE = 1,DACF_PROC_RELE = 2,DACF_NUM_DEVSPECS = 3,DACF_ERR_MOD_NOTFOUND = -1,DACF_ERR_OPSET_NOTFOUND = -2,DACF_ERR_OP_NOTFOUND = -3,DACF_ERR_OP_FAILED = -4,DACF_DBG_MSGS = 1,DACF_DBG_DEVI = 2,};
enum MACRO_DATA {DATA = 0x3,ACK = 0x4,};
enum MACRO_DAYS {DAYS_PER_WEEK = 7,DAYS_PER_NYEAR = 365,DAYS_PER_LYEAR = 366,};
enum MACRO_DBLK {DBLK_REFMAX = 255,DBLK_REFMIN = 1,};
enum MACRO_DBRI {DBRI_NPIPES = 32,DBRI_STS_PIPEOFFSET = 16,DBRI_STS_P = 32768,DBRI_STS_S = 8192,DBRI_STS_E = 4096,DBRI_STS_G = 16384,DBRI_STS_X = 128,DBRI_STS_T = 64,DBRI_STS_N = 32,DBRI_STS_C = 16,DBRI_STS_F = 8,DBRI_STS_D = 4,DBRI_STS_H = 2,DBRI_STS_R = 1,DBRI_INTR_LIT_ENDIAN = 256,DBRI_INTR_MRR_ERR = 16,DBRI_INTR_LATE_ERR = 8,DBRI_INTR_BUS_GRANT_ERR = 4,DBRI_INTR_BURST_ERR = 2,DBRI_INTR_REQ = 1,DBRI_PIO_0 = 1,DBRI_PIO_1 = 2,DBRI_PIO_2 = 4,DBRI_PIO_3 = 8,DBRI_PIO0_EN = 16,DBRI_PIO1_EN = 32,DBRI_PIO2_EN = 64,DBRI_PIO3_EN = 128,DBRI_TST_MODE_SPEED = 4,DBRI_TST_MODE_PIO = 8,DBRI_OPSHIFT = 28,DBRI_OPMASK = -268435456,DBRI_CMD_WAIT = 0,DBRI_CMD_PAUSE = 268435456,DBRI_CMD_JMP = 536870912,DBRI_CMD_JMP_LEN = 2,DBRI_CMD_IIQ = 805306368,DBRI_CMD_REX = 1073741824,DBRI_OPCODE_REX = 4,DBRI_CMD_SDP = 1342177280,DBRI_CMD_CDP = 1610612736,DBRI_CMD_DTS = 1879048192,DBRI_OPCODE_DTS = 7,DBRI_CMD_SSP = 2147483648,DBRI_CMD_CHI = 2415919104,DBRI_CMD_NT = 2684354560,DBRI_CMD_TE = 2952790016,DBRI_CMD_CDEC = 3221225472,DBRI_CMD_TEST = 3489660928,DBRI_CMD_CDM = 3758096384,DBRI_CMDI = 134217728,DBRI_CMD_MASK = 4026531840,DBRI_SDP_COLL = 524288,DBRI_SDP_IRM = 0,DBRI_SDP_TWOSAME = 262144,DBRI_SDP_CHNG = 524288,DBRI_SDP_ALLVAL = 786432,DBRI_SDP_EOL = 131072,DBRI_SDP_IBEG = 65536,DBRI_SDP_TRANSPARENT = 0,DBRI_SDP_HDLC = 16384,DBRI_SDP_TE_DCHAN = 24576,DBRI_SDP_SERIAL = 32768,DBRI_SDP_FIXED = 49152,DBRI_SDP_MODEMASK = 57344,DBRI_SDP_D = 4096,DBRI_SDP_B = 2048,DBRI_SDP_PTR = 1024,DBRI_SDP_IDL = 512,DBRI_SDP_ABT = 256,DBRI_SDP_CLR = 128,DBRI_SDP_CMDMASK = 1920,DBRI_DTS_VI = 1,DBRI_DTS_VO = 1,DBRI_DTS_ID = 1,DBRI_DTS_DI = 1,DBRI_DTS_SINGLE = 0,DBRI_DTS_MONITOR = 2,DBRI_DTS_INDIRECT = 3,DBRI_DTS_ALTERNATE = 7,DBRI_CHI_INT = 32768,DBRI_CHI_CHIL = 16384,DBRI_CHI_OD = 8192,DBRI_CHI_FE = 4096,DBRI_CHI_FD = 2048,DBRI_NTE_F = 131072,DBRI_NTE_NBF = 65536,DBRI_NTE_IRM_STATUS = 32768,DBRI_NTE_IRM_SBRI = 16384,DBRI_NTE_ISNT = 8192,DBRI_NT_FT = 4096,DBRI_NTE_EZ = 2048,DBRI_NTE_IFA = 1024,DBRI_NTE_ACT = 512,DBRI_NT_MFE = 256,DBRI_TE_QE = 256,DBRI_NTE_RLB_D = 128,DBRI_NTE_RLB_B1 = 64,DBRI_NTE_RLB_B2 = 32,DBRI_NTE_LLB_D = 16,DBRI_NTE_LLB_B1 = 8,DBRI_NTE_LLB_B2 = 4,DBRI_NTE_FACT = 2,DBRI_NTE_ABV = 1,DBRI_CDEC_DISABL_CLK = 0,DBRI_CDEC_2MHZ = 16777216,DBRI_CDEC_1_5MHZ = 33554432,DBRI_TST_ROMMON = 5,DBRI_TST_SBUS = 6,DBRI_TST_SERIAL = 7,DBRI_TST_RAM_RD = 8,DBRI_TST_RAM_WT = 9,DBRI_TST_RAM_BIST = 10,DBRI_TST_UCTL_BIST = 11,DBRI_TST_ROM_DUMP = 12,DBRI_CDM_THI = 256,DBRI_CDM_RHI = 128,DBRI_CDM_RCE = 64,DBRI_CDM_CMSR = 32,DBRI_CDM_ODD = 16,DBRI_CDM_CMSX = 8,DBRI_CDM_XCE = 4,DBRI_CDM_XEN = 2,DBRI_CDM_REN = 1,DBRI_MAX_QWORDS = 63,DBRI_INT_IBITS = 2,DBRI_INT_MAX_CHAN = 32,DBRI_INT_TE_CHAN = 32,DBRI_INT_NT_CHAN = 34,DBRI_INT_CHI_CHAN = 36,DBRI_INT_REPORT_CHAN = 38,DBRI_INT_OTHER_CHAN = 40,DBRI_INT_BRDY = 1,DBRI_INT_MINT = 2,DBRI_INT_IBEG = 3,DBRI_INT_IEND = 4,DBRI_INT_EOL = 5,DBRI_INT_CMDI = 6,DBRI_INT_XCMP = 8,DBRI_INT_SBRI = 9,DBRI_INT_FXDT = 10,DBRI_INT_CHIL = 11,DBRI_INT_COLL = 11,DBRI_INT_DBYT = 12,DBRI_INT_RBYT = 13,DBRI_INT_LINT = 14,DBRI_INT_UNDR = 15,DBRI_NTINFO0_G1 = 0,DBRI_NTINFO2_G2 = 6,DBRI_NTINFO4_G3 = 7,DBRI_NTINFO0_G4 = 1,DBRI_TEINFO0_F1 = 0,DBRI_TEINFO0_F8 = 2,DBRI_TEINFO0_F3 = 3,DBRI_TEINFO1_F4 = 4,DBRI_TEINFO0_F5 = 5,DBRI_TEINFO3_F6 = 6,DBRI_TEINFO3_F7 = 7,DBRI_D_CLASS_1 = 0,DBRI_D_CLASS_2 = 1,DBRI_TMD_UNR = 8,DBRI_TMD_ABT = 4,DBRI_TMD_TFC = 2,DBRI_TMD_TBC = 1,DBRI_MAX_DMASIZE = 8191,DBRI_RMD_CRC = 128,DBRI_RMD_BBC = 64,DBRI_RMD_ABT = 32,DBRI_RMD_OVRN = 8,};
enum MACRO_DCMD {DCMD_ADDRSPEC = 0x1,DCMD_LOOP = 0x2,DCMD_LOOPFIRST = 0x4,DCMD_PIPE = 0x8,DCMD_PIPE_OUT = 0x10,DCMD_OK = 0x0,DCMD_ERR = 0x1,DCMD_USAGE = 0x2,DCMD_NEXT = 0x3,DCMD_ABORT = 0x4,};
enum MACRO_DCSR {DCSR_INT_PEND = 0x1,DCSR_ERR_PEND = 0x2,DCSR_INT_EN = 0x10,DCSR_RESET = 0x80,DCSR_WRITE = 0x100,DCSR_EN_DMA = 0x200,DCSR_CYC_PEND = 0x400,DCSR_EN_CNT = 0x2000,DCSR_TC = 0x4000,DCSR_CSR_DRAIN = 0x0,DCSR_DIAG = 0x0,DCSR_TCI_DIS = 0x800000,};
enum MACRO_DC_0 {DC = 0x4D,};
enum MACRO_DERR {DERR_SUCCESS = 0,DERR_AMNF = 1,DERR_TKONF = 2,DERR_ABORT = 3,DERR_DWF = 4,DERR_IDNF = 5,DERR_BUSY = 6,DERR_UNC = 7,DERR_BBK = 8,DERR_INVCDB = 9,DERR_HARD = 10,DERR_ILI = 11,DERR_EOM = 12,DERR_MCR = 13,DERR_RECOVER = 14,DERR_NOTREADY = 15,DERR_MEDIUM = 16,DERR_HW = 17,DERR_ILL = 18,DERR_UNIT_ATTN = 19,DERR_DATA_PROT = 20,DERR_MISCOMP = 21,DERR_RESV = 22,};
enum MACRO_DEVI {DEVI_PSEUDO_NODEID = -1,DEVI_SID_NODEID = -2,};
enum MACRO_DIOC {DIOC = 25600,};
enum MACRO_DM_0 {DM = 242,};
enum MACRO_DONT {DONT = 254,};
enum MACRO_DOOR {DOOR_INVAL = -1,DOOR_UNREF_DATA = 1,DOOR_QUERY = -2,DOOR_UNREF = 1,DOOR_PRIVATE = 2,DOOR_UNREF_MULTI = 16,DOOR_LOCAL = 4,DOOR_REVOKED = 8,DOOR_IS_UNREF = 32,DOOR_ATTR_MASK = 63,DOOR_DESCRIPTOR = 65536,DOOR_RELEASE = 262144,DOOR_DELAY = 524288,DOOR_UNREF_ACTIVE = 1048576,DOOR_CREATE = 0,DOOR_REVOKE = 1,DOOR_INFO = 2,DOOR_CALL = 3,DOOR_RETURN = 4,DOOR_CRED = 5,DOOR_BIND = 6,DOOR_UNBIND = 7,};
enum MACRO_DTAB {DTAB_ANDCRITERIA = 0x1,DTAB_EXCLUDEFLAG = 0x2,DTAB_LISTALL = 0x4,DTAB_MXALIASLN = 0xE,};
enum MACRO_DTDC {DTDC_DATADONE = 0x1,DTDC_CMDDONE = 0x3,};
enum MACRO_DUMP {DUMP_ALLOC = 0,DUMP_FREE = 1,DUMP_SCAN = 2,};
enum MACRO_DVID {DVID = 0x63,};
enum MACRO_ECPP {ECPP_CENTRONICS = 0x1,ECPP_COMPAT_MODE = 0x2,ECPP_BYTE_MODE = 0x3,ECPP_NIBBLE_MODE = 0x4,ECPP_ECP_MODE = 0x5,ECPP_FAILURE_MODE = 0x6,ECPP_DIAG_MODE = 0x7,ECPP_INIT_MODE = 0x8,};
enum MACRO_EEOL {EEOL = 0x4B,};
enum MACRO_EEOP {EEOP = 0x4C,};
enum MACRO_ENCI {ENCI_SVALID = 0x80,};
enum MACRO_ENFS {ENFS_TRYAGAIN = 999,};
enum MACRO_EPRT {EPRT = 0x5A,};
enum MACRO_ESC1 {ESC1_REV1 = 0x4,};
enum MACRO_EVEN {EVEN_P = 0x0,ODD_P = 0x80,NO_P = 0x0,FORCE_P = 0x20,NORMAL_P = 0x40,IGNORE_P = 0x10,USE_P = 0x0,};
enum MACRO_EXIT {EXIT_FAILURE = 1,EXIT_SUCCESS = 0,};
enum MACRO_EXTA {EXTA = 14,};
enum MACRO_EXTB {EXTB = 15,};
enum MACRO_FAIL {CONFIG_FAIL = 0x1,DISK_FAIL = 0x2,BOOT_FAIL = 0x4,MEM_FAIL = 0x8,};
enum MACRO_FAST {FAST = 5,};
enum MACRO_FBIO {FBIO_WID_ALLOC = 17950,FBIO_WID_FREE = 17951,FBIO_WID_PUT = 17952,FBIO_WID_GET = 17953,FBIO_DEVID = 17954,FBIO_U_RST = 17955,FBIO_FULLSCREEN_ELIMINATION_GROUPS = 17956,FBIO_WID_DBL_SET = 17957,};
enum MACRO_FCAL {FCAL_STATUS_OK = 0,FCAL_STATUS_P_RJT = 2,FCAL_STATUS_F_RJT = 3,FCAL_STATUS_P_BSY = 4,FCAL_STATUS_F_BSY = 5,FCAL_STATUS_ONLINE = 16,FCAL_STATUS_OLDPORT_ONLINE = 16,FCAL_STATUS_ERR_OFFLINE = 17,FCAL_STATUS_TIMEOUT = 18,FCAL_STATUS_ERR_OVERRUN = 19,FCAL_STATUS_LOOP_ONLINE = 20,FCAL_STATUS_OLD_PORT = 21,FCAL_STATUS_AL_PORT = 22,FCAL_STATUS_UNKNOWN_CQ_TYPE = 32,FCAL_STATUS_BAD_SEG_CNT = 33,FCAL_STATUS_MAX_XCHG_EXCEEDED = 34,FCAL_STATUS_BAD_XID = 35,FCAL_STATUS_XCHG_BUSY = 36,FCAL_STATUS_BAD_POOL_ID = 37,FCAL_STATUS_INSUFFICIENT_CQES = 38,FCAL_STATUS_ALLOC_FAIL = 39,FCAL_STATUS_BAD_SID = 40,FCAL_STATUS_NO_SEQ_INIT = 41,FCAL_STATUS_BAD_DID = 42,FCAL_STATUS_ABORTED = 48,FCAL_STATUS_ABORT_FAILED = 49,FCAL_STATUS_DIAG_BUSY = 50,FCAL_STATUS_DIAG_INVALID = 51,FCAL_STATUS_INCOMPLETE_DMA_ERR = 52,FCAL_STATUS_CRC_ERR = 53,FCAL_STATUS_OPEN_FAIL = 54,FCAL_STATUS_ERROR = 128,FCAL_STATUS_ONLINE_TIMEOUT = 129,FCAL_STATUS_MAX_STATUS = 53,};
enum MACRO_FCIO {FCIO_GETMAP = 18095,FCIO_FORCE_LIP = 18097,FCIO_LINKSTATUS = 18103,FCIO_FCODE_MCODE_VERSION = 18122,};
enum MACRO_FDGC {FDGC_HISTORY = 0x1,FDGC_CURRENT = 0x2,FDGC_CURWPROT = 0x10,FDGC_DETECTED = 0x20,};
enum MACRO_FIFO {FIFO_CNT_MASK = 0x1F,};
enum MACRO_FIND {FIND_LTUPLE_FWDF = 0x3,FIND_LTUPLE_BACKF = 0x4,FIND_NEXT_LTUPLEF = 0x5,FIND_PREV_LTUPLEF = 0x6,};
enum MACRO_FIOC {FIOC = 17920,};
enum MACRO_FIRM {FIRM_EVENT_NULL = 0,};
enum MACRO_FKEY {FKEY_FAIL = 0x20,EXC_FAIL = 0x40,INT_FAIL = 0x80,};
enum MACRO_FLAG {FLAG_STAG = 0x4000,FLAG_OTAG = 0x2000,FLAG_HTAG = 0x1000,FLAG_TAGMASK = 0x7000,FLAG_ACA = 0x100,FLAG_HEAD = 0x8000,FLAG_SENSING = 0x400,FLAG_NOINTR = 0x1,FLAG_NODISCON = 0x2,FLAG_NOPARITY = 0x8,FLAG_RENEGOTIATE_WIDE_SYNC = 0x1000000,FLAG_SUBLUN = 0x4,FLAG_QUEHOLD = 0x200,FLAG_IMMEDIATE_CB = 0x800,FLAG_SILENT = 0x10000,FLAG_DIAGNOSE = 0x20000,FLAG_ISOLATE = 0x40000,};
enum MACRO_FLOW {FLOW_RTSCTS = 0x2,FLOW_IXON = 0x40,FLOW_IXANY = 0x80,};
enum MACRO_FORM {FORM_N = 1,FORM_T = 2,FORM_C = 3,};
enum MACRO_FPRS {FPRS_DL = 0x1,FPRS_DU = 0x2,FPRS_FEF = 0x4,};
enum MACRO_FREE {FREE_SHAPE = 0x80,};
enum MACRO_FSF3 {FSF3_LINK = 0x1,FSF3_SYMLINK = 0x2,FSF3_HOMOGENEOUS = 0x8,FSF3_CANSETTIME = 0x10,};
enum MACRO_FTEV {FTEV_MASK = 0x1FFF,FTEV_ISWR = 0x8000,FTEV_CS = 0x4000,FTEV_PS = 0x2000,FTEV_QMASK = 0x1F00,FTEV_ALLOCMASK = 0x1FF8,FTEV_ALLOCB = 0x0,FTEV_ESBALLOC = 0x1,FTEV_DESBALLOC = 0x2,FTEV_ESBALLOCA = 0x3,FTEV_DESBALLOCA = 0x4,FTEV_ALLOCBIG = 0x5,FTEV_ALLOCBW = 0x6,FTEV_FREEB = 0x8,FTEV_DUPB = 0x9,FTEV_COPYB = 0xA,FTEV_CALLER = 0xF,FTEV_PUT = 0x100,FTEV_FSYNCQ = 0x103,FTEV_DSYNCQ = 0x104,FTEV_PUTQ = 0x105,FTEV_GETQ = 0x106,FTEV_RMVQ = 0x107,FTEV_INSQ = 0x108,FTEV_PUTBQ = 0x109,FTEV_FLUSHQ = 0x10A,FTEV_REPLYQ = 0x10B,FTEV_PUTNEXT = 0x10D,FTEV_RWNEXT = 0x10E,FTEV_QWINNER = 0x10F,FTEV_GEWRITE = 0x101,};
enum MACRO_G711 {G711_256_ARRAY_MIDPOINT = 128,G711_ULAW_MIDPOINT = 8192,G711_ALAW_MIDPOINT = 4096,};
enum MACRO_GLOB {GLOB_ERR = 0x1,GLOB_MARK = 0x2,GLOB_NOSORT = 0x4,GLOB_NOCHECK = 0x8,GLOB_DOOFFS = 0x10,GLOB_APPEND = 0x20,GLOB_NOESCAPE = 0x40,GLOB_NOSYS = 0xFFFFFFFC,GLOB_NOMATCH = 0xFFFFFFFD,GLOB_NOSPACE = 0xFFFFFFFE,GLOB_ABORTED = 0xFFFFFFFF,};
enum MACRO_GPLF {GPLF = 0x54,};
enum MACRO_GPLN {GPLN = 0x1B,};
enum MACRO_HARD {HARD_LOOKUP = 4,};
enum MACRO_HASH {HASH_SIZE = 32,HASH_SHIFT = 31,};
enum MACRO_HAVE {HAVE_SUSP = 0,HAVE_PROHIBITED = 1,};
enum MACRO_HDKL {HDKL_SOFT = 0x1,HDKL_HARD = 0x2,};
enum MACRO_HMEG {HMEG_RESET_ETX = 1,HMEG_RESET_ERX = 2,HMEG_RESET_GLOBAL = 3,HMEG_CONFIG_BURSTSZ = 3,HMEG_CONFIG_64BIT_XFER = 4,HMEG_CONFIG_PARITY = 8,HMEG_CONFIG_RES1 = 16,HMEG_CONFIG_BURST16 = 0,HMEG_CONFIG_BURST32 = 1,HMEG_CONFIG_BURST64 = 2,HMEG_CONFIG_BURST_RES = 3,HMEG_CONFIG_64BIT_SHIFT = 2,HMEG_STATUS_FRAME_RCVD = 1,HMEG_STATUS_RXF_CNT_EXP = 2,HMEG_STATUS_ALN_CNT_EXP = 4,HMEG_STATUS_CRC_CNT_EXP = 8,HMEG_STATUS_LEN_CNT_EXP = 16,HMEG_STATUS_RXFIFO_OVFL = 32,HMEG_STATUS_RCV_CNT_EXP = 64,HMEG_STATUS_SQE_TST_ERR = 128,HMEG_STATUS_FRAME_SENT = 256,HMEG_STATUS_TXFIFO_UNDR = 512,HMEG_STATUS_MXPKTSZ_ERR = 1024,HMEG_STATUS_NRMCOLC_EXP = 2048,HMEG_STATUS_EXCOLC_EXP = 4096,HMEG_STATUS_LATCOLC_EXP = 8192,HMEG_STATUS_FSTCOLC_EXP = 16384,HMEG_STATUS_DEFTIMR_EXP = 32768,HMEG_STATUS_RINT = 65536,HMEG_STATUS_RX_DROP = 131072,HMEG_STATUS_RX_ERR_ACK = 262144,HMEG_STATUS_RX_LATE_ERR = 524288,HMEG_STATUS_RX_PAR_ERR = 1048576,HMEG_STATUS_RX_TAG_ERR = 2097152,HMEG_STATUS_EOP_ERR = 4194304,HMEG_STATUS_MIF_INTR = 8388608,HMEG_STATUS_TINT = 16777216,HMEG_STATUS_TX_ALL = 33554432,HMEG_STATUS_TX_ERR_ACK = 67108864,HMEG_STATUS_TX_LATE_ERR = 134217728,HMEG_STATUS_TX_PAR_ERR = 268435456,HMEG_STATUS_TX_TAG_ERR = 536870912,HMEG_STATUS_SLV_ERR_ACK = 1073741824,HMEG_STATUS_SLV_PAR_ERR = -2147483648,HMEG_STATUS_FATAL_ERR = -58982400,HMEG_STATUS_NONFATAL_ERR = 196348,HMEG_STATUS_NORMAL_INT = 25231360,HMEG_STATUS_INTR = -16777476,HMEG_MASK_FRAME_RCVD = 1,HMEG_MASK_RXF_CNT_EXP = 2,HMEG_MASK_ALN_CNT_EXP = 4,HMEG_MASK_CRC_CNT_EXP = 8,HMEG_MASK_LEN_CNT_EXP = 16,HMEG_MASK_RXFIFO_OVFL = 32,HMEG_MASK_RCV_CNT_EXP = 64,HMEG_MASK_SQE_TST_ERR = 128,HMEG_MASK_FRAME_SENT = 256,HMEG_MASK_TXFIFO_UNDR = 512,HMEG_MASK_MXPKTSZ_ERR = 1024,HMEG_MASK_NRMCOLC_EXP = 2048,HMEG_MASK_EXECOLC_EXP = 4096,HMEG_MASK_LATCOLC_EXP = 8192,HMEG_MASK_FSTCOLC_EXP = 16384,HMEG_MASK_DEFTIMR_EXP = 32768,HMEG_MASK_RINT = 65536,HMEG_MASK_RX_DROP = 131072,HMEG_MASK_RX_ERR_ACK = 262144,HMEG_MASK_RX_LATE_ERR = 524288,HMEG_MASK_RX_PAR_ERR = 1048576,HMEG_MASK_RX_TAG_ERR = 2097152,HMEG_MASK_EOP_ERR = 4194304,HMEG_MASK_MIF_INTR = 8388608,HMEG_MASK_TINT = 16777216,HMEG_MASK_TX_ALL = 33554432,HMEG_MASK_TX_ERR_ACK = 67108864,HMEG_MASK_TX_LATE_ERR = 134217728,HMEG_MASK_TX_PAR_ERR = 268435456,HMEG_MASK_TX_TAG_ERR = 536870912,HMEG_MASK_SLV_ERR_ACK = 1073741824,HMEG_MASK_SLV_PAR_ERR = -2147483648,HMEG_MASK_INTR = 16777475,};
enum MACRO_HMER {HMER_CONFIG_RXDMA_EN = 1,HMER_CONFIG_RES1 = 6,HMER_CONFIG_FBOFFSET = 56,HMER_CONFIG_RES2 = 448,HMER_CONFIG_RXRINGSZ = 1536,HMER_CONFIG_RES3 = 63488,HMER_CONFIG_RX_CSSTART = 8323072,HMER_CONFIG_RXRINGSZ32 = 0,HMER_CONFIG_RXRINGSZ64 = 512,HMER_CONFIG_RXRINGSZ128 = 1024,HMER_CONFIG_RXRINGSZ256 = 1536,HMER_CONFIG_FBO_SHIFT = 3,HMER_RXRINGSZ_SHIFT = 9,};
enum MACRO_HMET {HMET_TXPEND_TDMD = 1,HMET_CONFIG_TXDMA_EN = 1,HMET_CONFIG_TXFIFOTH = 1022,HMET_CONFIG_DRAIN_INT = 1024,HMET_RINGSZ_SHIFT = 4,};
enum MACRO_HOLE {HOLE = 0x302,};
enum MACRO_HOME {HOME = 0x45,};
enum MACRO_HOST {HOST_NOT_FOUND = 1,};
enum MACRO_HREF {HREF = 1,};
enum MACRO_HSFS {HSFS_MAGIC = 0x3095500,HSFS_ERR_TRAILING_JUNK = 0x0,HSFS_ERR_LOWER_CASE_NM = 0x1,HSFS_ERR_BAD_ROOT_DIR = 0x2,HSFS_ERR_UNSUP_TYPE = 0x3,HSFS_ERR_BAD_FILE_LEN = 0x4,HSFS_MIN_DL_SHFT = 0x5,};
enum MACRO_ICMP {ICMP_ECHO_REPLY = 0,ICMP_DEST_UNREACHABLE = 3,ICMP_SOURCE_QUENCH = 4,ICMP_REDIRECT = 5,ICMP_ECHO_REQUEST = 8,ICMP_ROUTER_ADVERTISEMENT = 9,ICMP_ROUTER_SOLICITATION = 10,ICMP_TIME_EXCEEDED = 11,ICMP_PARAM_PROBLEM = 12,ICMP_TIME_STAMP_REQUEST = 13,ICMP_TIME_STAMP_REPLY = 14,ICMP_INFO_REQUEST = 15,ICMP_INFO_REPLY = 16,ICMP_ADDRESS_MASK_REQUEST = 17,ICMP_ADDRESS_MASK_REPLY = 18,ICMP_TTL_EXCEEDED = 0,ICMP_REASSEMBLY_TIME_EXCEEDED = 1,ICMP_NET_UNREACHABLE = 0,ICMP_HOST_UNREACHABLE = 1,ICMP_PROTOCOL_UNREACHABLE = 2,ICMP_PORT_UNREACHABLE = 3,ICMP_FRAGMENTATION_NEEDED = 4,ICMP_SOURCE_ROUTE_FAILED = 5,ICMP_DEST_NET_UNKNOWN = 6,ICMP_DEST_HOST_UNKNOWN = 7,ICMP_SRC_HOST_ISOLATED = 8,ICMP_DEST_NET_UNREACH_ADMIN = 9,ICMP_DEST_HOST_UNREACH_ADMIN = 10,ICMP_DEST_NET_UNREACH_TOS = 11,ICMP_DEST_HOST_UNREACH_TOS = 12,};
enum MACRO_IDDI {IDDI_INTR_TYPE_NORMAL = 1,IDDI_INTR_TYPE_FAST = 2,IDDI_INTR_TYPE_SOFT = 3,};
enum MACRO_IDLE {IDLE = 0x308,};
enum MACRO_IECB {IECB_DONE = 0x80,IECB_BUSY = 0x40,IECB_OK = 0x20,IECB_ABORTED = 0x10,IECB_CMD = 0x700,IECB_EL = 0x80,IECB_SUSP = 0x40,IECB_INTR = 0x20,};
enum MACRO_IFMT {IFMT = 0xF000,};
enum MACRO_IGMP {IGMP_MINLEN = 8,IGMP_MEMBERSHIP_QUERY = 17,IGMP_V1_MEMBERSHIP_REPORT = 18,IGMP_V2_MEMBERSHIP_REPORT = 22,IGMP_V2_LEAVE_GROUP = 23,IGMP_DVMRP = 19,IGMP_PIM = 20,IGMP_MTRACE_RESP = 30,IGMP_MTRACE = 31,IGMP_MAX_HOST_REPORT_DELAY = 10,IGMP_TIMER_SCALE = 10,IGMP_HOST_MEMBERSHIP_QUERY = 17,IGMP_HOST_MEMBERSHIP_REPORT = 18,IGMP_HOST_NEW_MEMBERSHIP_REPORT = 22,IGMP_HOST_LEAVE_MESSAGE = 23,IGMP_SLOWTIMO_INTERVAL = 10000,};
enum MACRO_INET {INET_TCP = 6,};
enum MACRO_INIT {INIT_ALL = -1,};
enum MACRO_IP6F {IP6F_OFF_MASK = 0xFFF8,IP6F_RESERVED_MASK = 0x6,IP6F_MORE_FRAG = 0x1,};
enum MACRO_IPCF {IPCF_CLOSING = 0x1,IPCF_CLOSE_DONE = 0x2,IPCF_OPENING = 0x4,IPCF_OPEN_DONE = 0x8,};
enum MACRO_IPV4 {IPV4_VERSION = 4,IP_VERSION = 4,};
enum MACRO_IPV6 {IPV6_FLOWINFO_FLOWLABEL = 0xFFFFF,IPV6_FLOWINFO_TCLASS = 0xFF00000,};
enum MACRO_IP_0 {IP = 244,};
enum MACRO_ISDN {ISDN_PH_ACTIVATE_REQ = 536887562,ISDN_MPH_DEACTIVATE_REQ = 536887563,ISDN_PARAM_POWER_OFF = 0,ISDN_PARAM_POWER_ON = 1,ISDN_PROTO_MAGIC = 1769170030,};
enum MACRO_ISIG {ISIG = 0x1,ICANON = 0x2,XCASE = 0x4,ECHO = 0x8,ECHOE = 0x10,ECHOK = 0x20,ECHONL = 0x40,NOFLSH = 0x80,TOSTOP = 0x100,ECHOCTL = 0x200,ECHOPRT = 0x400,ECHOKE = 0x800,DEFECHO = 0x1000,FLUSHO = 0x2000,PENDIN = 0x4000,IEXTEN = 0x8000,};
enum MACRO_IUPD {IUPD = 0x1,IACC = 0x2,IMOD = 0x4,ICHG = 0x8,INOACC = 0x10,IMODTIME = 0x20,IREF = 0x40,ISYNC = 0x80,IFASTSYMLNK = 0x100,IMODACC = 0x200,IATTCHG = 0x400,IBDWRITE = 0x800,ISTALE = 0x1000,IDEL = 0x2000,IDIRECTIO = 0x4000,};
enum MACRO_JMPX {JMPX = 27139,};
enum MACRO_KCPC {KCPC_CTX_FREEZE = 0x1,KCPC_CTX_SIGOVF = 0x2,KCPC_CTX_NONPRIV = 0x4,KCPC_CTX_LWPINHERIT = 0x8,KCPC_CTX_INVALID = 0x100,KCPC_CTX_ALLFLAGS = 0x10F,};
enum MACRO_KIOC {KIOC = 27392,};
enum MACRO_KOBJ {KOBJ_EXEC = 0x4,KOBJ_INTERP = 0x8,KOBJ_PRIM = 0x10,KOBJ_RESOLVED = 0x20,KOBJ_NVERSION_NONE = 0x0,KOBJ_NVERSION_CURRENT = 0x1,KOBJ_NVERSION_NUM = 0x2,KOBJ_NOTIFY_MODLOAD = 0x1,KOBJ_NOTIFY_MODUNLOAD = 0x2,KOBJ_NOTIFY_MAX = 0x2,};
enum MACRO_KTAB {KTAB_STRLEN = 10,};
enum MACRO_LDBL {LDBL_MANT_DIG = 113,LDBL_DIG = 33,LDBL_MIN_EXP = -16381,LDBL_MIN_10_EXP = -4931,LDBL_MAX_EXP = 16384,LDBL_MAX_10_EXP = 4932,};
enum MACRO_LIFC {LIFC_NOXMIT = 0x1,LIFC_EXTERNAL_SOURCE = 0x2,};
enum MACRO_LINK {CHILD_LINK = 0x1,PARENT_LINK = 0x2,};
enum MACRO_LIOC {LIOC = 27648,};
enum MACRO_LLC1 {LLC1_MAX_MULTICAST = 16,LLC1_LINKED = 1,LLC1_AVAILABLE = 2,LLC1_INFO_WAIT = 4,LLC1_DEF_PPA = 8,LLC1_RAW_WAIT = 16,LLC1_USING_RAW = 32,LLC1_AUTO_XID = 64,LLC1_AUTO_TEST = 128,LLC1_BINDING = 256,};
enum MACRO_LLC2 {LLC2_MAX_SAPS = 128,LLC2_MAX_CONS = 256,};
enum MACRO_LLCE {LLCE_OK = -1,LLCE_NOBUFFER = 4097,};
enum MACRO_LLCS {LLCS_NOBUFFER = 0,LLCS_MULTIXMT = 1,LLCS_MULTIRCV = 2,LLCS_BRDCSTXMT = 3,LLCS_BRDCSTRCV = 4,LLCS_BLOCKED = 5,LLCS_PKTXMT = 6,LLCS_PKTRCV = 7,LLCS_BYTEXMT = 8,LLCS_BYTERCV = 9,LLCS_XIDXMT = 10,LLCS_XIDRCV = 11,LLCS_TESTXMT = 12,LLCS_TESTRCV = 13,LLCS_IERRORS = 14,LLCS_OERRORS = 15,};
enum MACRO_LOCK {LOCK_HELD_VALUE = 0xFF,};
enum MACRO_LOFI {LOFI_IOC_BASE = 4998656,LOFI_MAP_FILE = 4998657,LOFI_MAP_FILE_MINOR = 4998658,LOFI_UNMAP_FILE = 4998659,LOFI_UNMAP_FILE_MINOR = 4998660,LOFI_GET_FILENAME = 4998661,LOFI_GET_MINOR = 4998662,LOFI_GET_MAXMINOR = 4998663,};
enum MACRO_LONG {LONG_MIN = -2147483648,LONG_MAX = 2147483647,};
enum MACRO_LUFS {LUFS_EXTENTS = 0,};
enum MACRO_MACE {MACE_XMTFC_DRTRY = 0x80,MACE_XMTFC_DXMTFCS = 0x8,MACE_XMTFC_APADXMT = 0x1,MACE_XMTFS_XMTSV = 0x80,MACE_XMTFS_UFLO = 0x40,MACE_XMTFS_LCOL = 0x20,MACE_XMTFS_MORE = 0x10,MACE_XMTFS_ONE = 0x8,MACE_XMTFS_DEFER = 0x4,MACE_XMTFS_LCAR = 0x2,MACE_XMTFS_RTRY = 0x1,MACE_XMTRC_EXDEF = 0x80,MACE_XMTRC_XMTRC = 0xF,MACE_RCVFC_LLRCV = 0x8,MACE_RCVFC_MR = 0x4,MACE_RCVFC_ASTRPRCV = 0x1,MACE_RCVFS_OFLO = 0x80,MACE_RCVFS_CLSN = 0x40,MACE_RCVFS_FRAM = 0x20,MACE_RCVFS_FCS = 0x10,MACE_RCVFS_RCVCNT = 0xF,MACE_FIFOFC_RCVFC = 0xF0,MACE_FIFOFC_XMTFC = 0xF,MACE_IR_JAB = 0x80,MACE_IR_BABL = 0x40,MACE_IR_CERR = 0x20,MACE_IR_RCVCCO = 0x10,MACE_IR_RPCO = 0x8,MACE_IR_MPCO = 0x4,MACE_IR_RCVINT = 0x2,MACE_IR_XMTINT = 0x1,MACE_IMR_BABLM = 0x40,MACE_IMR_CERRM = 0x20,MACE_IMR_MPCOM = 0x4,MACE_IMR_RCVINTM = 0x2,MACE_IMR_XMTINTM = 0x1,MACE_PR_XMTSV = 0x80,MACE_PR_TDTREQ = 0x40,MACE_PR_RDTREQ = 0x20,MACE_BIU_BSWP = 0x40,MACE_BIU_XMTSP = 0x30,MACE_BIU_XMTSPSHIFTL = 0x4,MACE_BIU_XMTSP4 = 0x0,MACE_BIU_XMTSP16 = 0x1,MACE_BIU_XMTSP64 = 0x2,MACE_BIU_XMTSP112 = 0x3,MACE_BIU_SWSRT = 0x1,MACE_FIFOCC_XMTFW = 0xC0,MACE_FIFOCC_XMTFW8 = 0x0,MACE_FIFOCC_XMTFW16 = 0x40,MACE_FIFOCC_XMTFW32 = 0x80,MACE_FIFOCC_RCVFW = 0x30,MACE_FIFOCC_RCVFW16 = 0x0,MACE_FIFOCC_RCVFW32 = 0x10,MACE_FIFOCC_RCVFW64 = 0x20,MACE_FIFOCC_XMTFWU = 0x8,MACE_FIFOCC_RCVFWU = 0x4,MACE_FIFOCC_XMTBRST = 0x2,MACE_FIFOCC_RCVBRST = 0x1,MACE_MACCC_PROM = 0x80,MACE_MACCC_DXMT2PD = 0x40,MACE_MACCC_EMBA = 0x20,MACE_MACCC_DRCVPA = 0x8,MACE_MACCC_DRCVBC = 0x4,MACE_MACCC_ENXMT = 0x2,MACE_MACCC_ENRCV = 0x1,MACE_PLSCC_XMTSEL = 0x8,MACE_PLSCC_PORTSEL = 0x6,MACE_PLSCC_PORTSELAUI = 0x0,MACE_PLSCC_PORTSELTP = 0x2,MACE_PLSCC_PORTSELDAI = 0x4,MACE_PLSCC_PORTSELGPSI = 0x6,MACE_PLSCC_ENPLSIO = 0x1,MACE_PHYCC_LNKST = 0x80,MACE_PHYCC_DLNKTST = 0x40,MACE_PHYCC_RCVPOL = 0x20,MACE_PHYCC_DAPC = 0x10,MACE_PHYCC_LTS = 0x8,MACE_PHYCC_ASEL = 0x4,MACE_PHYCC_RWAKE = 0x2,MACE_PHYCC_AWAKE = 0x1,MACE_CHIPID0_MAGIC = 0x41,MACE_CHIPID1_MAGIC = 0x9,MACE_IAC_ADDRCHG = 0x80,MACE_IAC_PHYADDR = 0x4,MACE_IAC_LOGADDR = 0x2,MACE_UTR_RTRE = 0x80,MACE_UTR_RTRD = 0x40,MACE_UTR_RPA = 0x20,MACE_UTR_FCOLL = 0x10,MACE_UTR_RCVFCSE = 0x8,MACE_UTR_LOOP = 0x6,MACE_UTR_LOOPNO = 0x0,MACE_UTR_LOOPEXT = 0x2,MACE_UTR_LOOPINT = 0x4,MACE_UTR_LOOPINTMENDEC = 0x6,};
enum MACRO_MADE {MADE_FP = 0x2,};
enum MACRO_MADV {MADV_NORMAL = 0,MADV_RANDOM = 1,MADV_SEQUENTIAL = 2,MADV_WILLNEED = 3,MADV_DONTNEED = 4,MADV_FREE = 5,};
enum MACRO_MASK {NESTLEVEL_MASK = 0xF,DISPLAYCELL_MASK = 0x80,};
enum MACRO_META {META_FIRST = 128,META_LAST = 255,};
enum MACRO_MIB2 {MIB2_SYSTEM = 257,MIB2_INTERFACES = 258,MIB2_AT = 259,MIB2_IP = 260,MIB2_ICMP = 261,MIB2_TCP = 262,MIB2_UDP = 263,MIB2_EGP = 264,MIB2_CMOT = 265,MIB2_TRANSMISSION = 266,MIB2_SNMP = 267,MIB2_IP6 = 268,MIB2_ICMP6 = 269,MIB2_TCP6 = 270,MIB2_UDP6 = 271,MIB2_RANGE_START = 257,MIB2_RANGE_END = 271,};
enum MACRO_MINS {MINS_PER_HOUR = 60,};
enum MACRO_MIOC {MIOC = 19712,};
enum MACRO_MODE {MODE_S = 1,MODE_B = 2,MODE_C = 3,};
enum MACRO_MODS {MODS_WEAK = 0x1,MODS_NOUNLOAD = 0x2,};
enum MACRO_MONS {MONS_PER_YEAR = 12,};
enum MACRO_M_RO {M_RO = 0x1,M_ROL = 0x2,M_RW = 0x4,M_RWL = 0x8,M_ROOT = 0x10,};
enum MACRO_NBBY {NBBY = 8,};
enum MACRO_NBRA {NBRA = 9,};
enum MACRO_NFS3 {NFS3_CURFHSIZE = 32,};
enum MACRO_NFSL {NFSL_ALL = 0x1,NFSL_RENAME = 0x2,NFSL_SYNC = 0x4,};
enum MACRO_NLM4 {NLM4_VERS = 4,};
enum MACRO_NL_0 {NL = 0x5C,};
enum MACRO_NONL {NONL = 0x30A,};
enum MACRO_NSIG {NSIG = 46,};
enum MACRO_NSLC {NSLC = 18,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_OBIE {OBIE_NORESET = 0x80,OBIE_NOLOOP = 0x40,OBIE_CA = 0x20,OBIE_IE = 0x10,OBIE_LEVEL2 = 0x4,OBIE_BUSERR = 0x2,OBIE_INTR = 0x1,};
enum MACRO_OIOC {OIOC = 20224,};
enum MACRO_OOPS {OOPS = 0x301,};
enum MACRO_OTYP {OTYP_BLK = 0,OTYP_MNT = 1,OTYP_CHR = 2,OTYP_SWP = 3,OTYP_LYR = 4,};
enum MACRO_O_SI {O_SI_GETUDATA = 18789,};
enum MACRO_PAD0 {PAD0 = 0x70F,};
enum MACRO_PAD1 {PAD1 = 0x70C,};
enum MACRO_PAD2 {PAD2 = 0x70D,};
enum MACRO_PAD3 {PAD3 = 0x70E,};
enum MACRO_PAD4 {PAD4 = 0x709,};
enum MACRO_PAD5 {PAD5 = 0x70A,};
enum MACRO_PAD6 {PAD6 = 0x70B,};
enum MACRO_PAD7 {PAD7 = 0x705,};
enum MACRO_PAD8 {PAD8 = 0x706,};
enum MACRO_PAD9 {PAD9 = 0x707,};
enum MACRO_PAGE {PAGE_HASHAVELEN = 4,PAGE_HASHVPSHIFT = 6,PAGE_IO_INUSE = 1,PAGE_IO_WANTED = 2,};
enum MACRO_PART {PART_ACC_RO = 0x1,PART_ACC_WO = 0x2,PART_ACC_RW = 0x3,PART_ACC_OW = 0x4,};
enum MACRO_PCCS {PCCS_MAGIC = 0x50434353,PCCS_VERSION = 0x20001,};
enum MACRO_PCFS {PCFS_FATMOD = 0x1,PCFS_LOCKED = 0x2,PCFS_WANTED = 0x4,PCFS_FAT16 = 0x400,PCFS_NOCHK = 0x800,PCFS_BOOTPART = 0x1000,PCFS_HIDDEN = 0x2000,PCFS_PCMCIA_NO_CIS = 0x4000,PCFS_FOLDCASE = 0x8000,PCFS_FAT32 = 0x10000,PCFS_IRRECOV = 0x20000,PCFS_MNT_HIDDEN = 0x1,PCFS_MNT_FOLDCASE = 0x2,PCFS_DISKTIMEOUT = 0x2,};
enum MACRO_PCIF {PCIF_MAGIC = 0x50434946,PCIF_VERSION = 0x1,PCIF_MIN_VERSION = 0x1,};
enum MACRO_PCLF {PCLF_FIRSTNAMESIZE = 10,PCLF_SECONDNAMESIZE = 12,PCLF_THIRDNAMESIZE = 4,};
enum MACRO_PCLK {PCLK = 4915200,};
enum MACRO_PCMD {PCMD_DEVTYPE = 0x1,PCMD_FUNCID = 0x2,PCMD_MANFID = 0x4,PCMD_FUNCE = 0x8,PCMD_VERS1 = 0x10,PCMD_JEDEC = 0x20,};
enum MACRO_PCON {PCON_INIT = 44,PCON_OPEN_INIT = 60,};
enum MACRO_PDEV {PDEV_SCSI = 0x0,PDEV_SMD = 0x1,PDEV_ESDI = 0x2,PDEV_IPI2 = 0x3,PDEV_IPI3 = 0x4,};
enum MACRO_PIPE {PIPE_BUF = 5120,PIPE_MAX = 5120,};
enum MACRO_PMAP {PMAP_IPPROTO_TCP = 6,PMAP_IPPROTO_UDP = 17,};
enum MACRO_POLL {POLL_IN = 1,POLL_OUT = 2,POLL_MSG = 3,POLL_ERR = 4,POLL_PRI = 5,POLL_HUP = 6,};
enum MACRO_PORT {PORT_STATUS_CCS = 0x1,PORT_STATUS_PES = 0x2,PORT_STATUS_PSS = 0x4,PORT_STATUS_POCI = 0x8,PORT_STATUS_PRS = 0x10,PORT_STATUS_PPS = 0x100,PORT_STATUS_LSDA = 0x200,PORT_STATUS_MASK = 0x11F,PORT_STATUS_OK = 0x103,PORT_CHANGE_CSC = 0x1,PORT_CHANGE_PESC = 0x2,PORT_CHANGE_PSSC = 0x4,PORT_CHANGE_OCIC = 0x8,PORT_CHANGE_PRSC = 0x10,};
enum MACRO_PPID {PPID = 11,};
enum MACRO_PPRH {PPRH = 0xF0,};
enum MACRO_PPRL {PPRL = 0x0,};
enum MACRO_PRCO {PRCO_GETOPT = 0,PRCO_SETOPT = 1,PRCO_NCMDS = 2,};
enum MACRO_PRIO {PRIO_PROCESS = 0,PRIO_PGRP = 1,PRIO_USER = 2,};
enum MACRO_PROB {A_PROB = -5,L_PROB = -6,};
enum MACRO_PROC {PROC_TEXT = 5,PROC_DATA = 7,};
enum MACRO_PROF {PROF_SIG = 1,};
enum MACRO_PROG {CLGET_PROG = 14,CLSET_PROG = 15,};
enum MACRO_PROP {PROP_1275_INT_SIZE = 4,};
enum MACRO_PROT {PROT_READ = 0x1,PROT_WRITE = 0x2,PROT_EXEC = 0x4,PROT_NONE = 0x0,};
enum MACRO_PSET {PSET_CREATE = 0,PSET_DESTROY = 1,PSET_ASSIGN = 2,PSET_INFO = 3,PSET_BIND = 4,};
enum MACRO_PSID {PSID = 12,};
enum MACRO_PS_0 {PS = 0,SP = 17,};
enum MACRO_PXFS {PXFS_LOCK_BLOCKED = -1,};
enum MACRO_P_TV {P_TV = 65532,};
enum MACRO_QECB {QECB_CONTROL_TDMD = 0x1,QECB_STATUS_MACE = 0x80000000,QECB_STATUS_TINT = 0x200000,QECB_STATUS_TMDER = 0x80000,QECB_STATUS_TXLATERR = 0x40000,QECB_STATUS_TXPARERR = 0x20000,QECB_STATUS_TXERRACK = 0x10000,QECB_STATUS_RINT = 0x20,QECB_STATUS_DROP = 0x10,QECB_STATUS_BUFF = 0x8,QECB_STATUS_RXLATERR = 0x4,QECB_STATUS_RXPARERR = 0x2,QECB_STATUS_RXERRACK = 0x1,QECB_STATUS_ERR = 0x800F001F,QECB_STATUS_INTR = 0x802F003F,QECB_STATUS_QEC = 0xF001F,QECB_QECERRM_TMDERM = 0x80000,QECB_QECERRM_TXLATERRM = 0x40000,QECB_QECERRM_TXPARERRM = 0x20000,QECB_QECERRM_TXERRACKM = 0x10000,QECB_QECERRM_DROPM = 0x10,QECB_QECERRM_BUFFM = 0x8,QECB_QECERRM_RXLATERRM = 0x4,QECB_QECERRM_RXPARERRM = 0x2,QECB_QECERRM_RXERRACKM = 0x1,QECB_BMACERRM_EXDERM = 0x1,};
enum MACRO_QECG {QECG_CONTROL_MODE = 0xF0000000,QECG_CONTROL_MACE = 0x40000000,QECG_CONTROL_BMAC = 0x10000000,QECG_CONTROL_PARITY = 0x20,QECG_CONTROL_ARB = 0x18,QECG_CONTROL_BURST64 = 0x4,QECG_CONTROL_BURST32 = 0x2,QECG_CONTROL_BURST16 = 0x0,QECG_CONTROL_RST = 0x1,QECG_STATUS_TINT = 0x8,QECG_STATUS_RINT = 0x4,QECG_STATUS_BMINT = 0x2,QECG_STATUS_QECERR = 0x1,QECG_PKTSIZE_2K = 0x0,QECG_PKTSIZE_4K = 0x1,QECG_PKTSIZE_6K = 0x10,QECG_PKTSIZE_8K = 0x11,};
enum MACRO_QECM {QECM_CONTROL_DRCV = 0x4,QECM_CONTROL_RST = 0x2,QECM_CONTROL_TDMD = 0x1,QECM_STATUS_EXDER = 0x10000000,QECM_STATUS_LCAR = 0x8000000,QECM_STATUS_RTRY = 0x4000000,QECM_STATUS_LCOL = 0x2000000,QECM_STATUS_UFLO = 0x1000000,QECM_STATUS_JAB = 0x800000,QECM_STATUS_BABL = 0x400000,QECM_STATUS_TINT = 0x200000,QECM_STATUS_COLCO = 0x100000,QECM_STATUS_TMDER = 0x80000,QECM_STATUS_TXLATERR = 0x40000,QECM_STATUS_TXPARERR = 0x20000,QECM_STATUS_TXERRACK = 0x10000,QECM_STATUS_RVCCO = 0x1000,QECM_STATUS_RPCO = 0x800,QECM_STATUS_MPCO = 0x400,QECM_STATUS_OFLO = 0x200,QECM_STATUS_CLSN = 0x100,QECM_STATUS_FMC = 0x80,QECM_STATUS_CRC = 0x40,QECM_STATUS_RINT = 0x20,QECM_STATUS_DROP = 0x10,QECM_STATUS_BUFF = 0x8,QECM_STATUS_RXLATERR = 0x4,QECM_STATUS_RXPARERR = 0x2,QECM_STATUS_RXERRACK = 0x1,QECM_STATUS_OTHER = 0x1FDF3FDF,QECM_QECERRM_COLLM = 0x100000,QECM_QECERRM_TMDERM = 0x80000,QECM_QECERRM_TXLATERRM = 0x40000,QECM_QECERRM_TXPARERRM = 0x20000,QECM_QECERRM_TXERRACKM = 0x10000,QECM_QECERRM_DROPM = 0x10,QECM_QECERRM_BUFFM = 0x8,QECM_QECERRM_RXLATERRM = 0x4,QECM_QECERRM_RXPARERRM = 0x2,QECM_QECERRM_RXERRACKM = 0x1,QECM_MACERRM_EXDERM = 0x10000000,QECM_MACERRM_LCARM = 0x8000000,QECM_MACERRM_RTRYM = 0x4000000,QECM_MACERRM_LCOLM = 0x2000000,QECM_MACERRM_UFLOM = 0x1000000,QECM_MACERRM_JABM = 0x800000,QECM_MACERRM_BABLM = 0x400000,QECM_MACERRM_OFLOM = 0x800,QECM_MACERRM_RVCCOM = 0x400,QECM_MACERRM_RPCOM = 0x200,QECM_MACERRM_MPCOM = 0x100,QECM_PIFS_ENABLE = 0x20,QECM_PIFS_MANUAL = 0x10,QECM_PIFS_1920 = 0xF,QECM_PIFS_1792 = 0xE,QECM_PIFS_1664 = 0xD,QECM_PIFS_1536 = 0xC,QECM_PIFS_1408 = 0xB,QECM_PIFS_1280 = 0xA,QECM_PIFS_1152 = 0x9,QECM_PIFS_1024 = 0x8,QECM_PIFS_896 = 0x7,QECM_PIFS_768 = 0x6,QECM_PIFS_640 = 0x5,QECM_PIFS_512 = 0x4,QECM_PIFS_384 = 0x3,QECM_PIFS_256 = 0x2,QECM_PIFS_128 = 0x1,QECM_PIFS_2048 = 0x0,};
enum MACRO_RAND {RAND_MAX = 32767,};
enum MACRO_RARP {RARP_REQUEST = 3,RARP_RESPONSE = 4,};
enum MACRO_RCVR {RCVR_DIS = 0x1,RCVR_ENA = 0x2,};
enum MACRO_RDEF {RDEF_ALL = 0,RDEF_MANUF = 1,RDEF_CKLEN = 2,};
enum MACRO_RDID {RDID = 0xA,};
enum MACRO_REOF {REOF = 0x1,RDIRTY = 0x2,RDONTWRITE = 0x4,RMODINPROGRESS = 0x8,RTRUNCATE = 0x10,RHAVEVERF = 0x20,RCOMMIT = 0x40,RCOMMITWAIT = 0x80,RHASHED = 0x100,ROUTOFSPACE = 0x200,RSERIALIZE = 0x400,RPURGECACHE = 0x800,RDIRECTIO = 0x1000,};
enum MACRO_RLIM {RLIM_NLIMITS = 7,RLIM_INFINITY = 2147483647,RLIM_SAVED_MAX = 2147483646,RLIM_SAVED_CUR = 2147483645,};
enum MACRO_ROOT {ROOT_HUB_DESCRIPTOR_LENGTH = 9,ROOT_HUB_DESCRIPTOR_TYPE = 41,ROOT_HUB_ADDR = 1,};
enum MACRO_RRIP {RRIP_VERSION = 1,RRIP_SUF_VERSION = 1,RRIP_EXT_VERSION = 1,RRIP_BIT = 1,RRIP_TIME_START_BP = 5,RRIP_TF_CREATION_BIT = 1,RRIP_TF_MODIFY_BIT = 2,RRIP_TF_ACCESS_BIT = 4,RRIP_TF_ATTRIBUTES_BIT = 8,RRIP_TF_BACKUP_BIT = 16,RRIP_TF_EXPIRATION_BIT = 32,RRIP_TF_EFFECTIVE_BIT = 64,RRIP_TF_LONG_BIT = 128,RRIP_NAME_LEN_BASE = 5,RRIP_NAME_CONTINUE = 1,RRIP_NAME_CURRENT = 2,RRIP_NAME_PARENT = 4,RRIP_NAME_ROOT = 8,RRIP_NAME_VOLROOT = 16,RRIP_NAME_HOST = 32,RRIP_NAME_CHANGE = 64,RRIP_SYM_LINK_COMPLETE = 128,RRIP_FILE_NAMELEN = 255,};
enum MACRO_RTLD {RTLD_NEXT = -1,RTLD_DEFAULT = -2,RTLD_LAZY = 1,RTLD_NOW = 2,RTLD_NOLOAD = 4,RTLD_GLOBAL = 256,RTLD_LOCAL = 0,RTLD_PARENT = 512,RTLD_GROUP = 1024,RTLD_WORLD = 2048,RTLD_NODELETE = 4096,RTLD_CONFGEN = 65536,RTLD_REL_RELATIVE = 1,RTLD_REL_EXEC = 2,RTLD_REL_DEPENDS = 4,RTLD_REL_PRELOAD = 8,RTLD_REL_SELF = 16,RTLD_REL_WEAK = 32,RTLD_REL_ALL = 4095,RTLD_MEMORY = 4096,RTLD_STRIP = 8192,RTLD_NOHEAP = 16384,RTLD_CONFSET = 65536,RTLD_DI_LMID = 1,RTLD_DI_LINKMAP = 2,RTLD_DI_CONFIGADDR = 3,RTLD_DI_MAX = 3,};
enum MACRO_RVAL {RVAL_CMD_UNKNOWN = -2,RVAL_PARM_INVALID = -3,RVAL_SYS_ERR = -4,RVAL_STA_INVALID = -5,RVAL_STA_OUTSTATE = -6,RVAL_SAP_INVALID = -7,RVAL_CON_INVALID = -8,RVAL_MAC_INVALID = -9,};
enum MACRO_R_G0 {R_G0 = 0,R_G1 = 1,R_G2 = 2,R_G3 = 3,R_G4 = 4,R_G5 = 5,R_G6 = 6,R_G7 = 7,R_O0 = 8,R_O1 = 9,R_O2 = 10,R_O3 = 11,R_O4 = 12,R_O5 = 13,R_O6 = 14,R_O7 = 15,R_L0 = 16,R_L1 = 17,R_L2 = 18,R_L3 = 19,R_L4 = 20,R_L5 = 21,R_L6 = 22,R_L7 = 23,R_I0 = 24,R_I1 = 25,R_I2 = 26,R_I3 = 27,R_I4 = 28,R_I5 = 29,R_I6 = 30,R_I7 = 31,R_PSR = 32,R_PC = 33,R_nPC = 34,R_Y = 35,R_WIM = 36,R_TBR = 37,R_PS = 32,R_SP = 14,R_FP = 30,R_R0 = 8,R_R1 = 9,};
enum MACRO_R_IA {R_IA_64_NONE = 0,R_IA_64_IMM14 = 33,R_IA_64_IMM22 = 34,R_IA_64_IMM64 = 35,R_IA_64_DIR32MSB = 36,R_IA_64_DIR32LSB = 37,R_IA_64_DIR64MSB = 38,R_IA_64_DIR64LSB = 39,R_IA_64_GPREL22 = 42,R_IA_64_GPREL64I = 43,R_IA_64_GPREL64MSB = 46,R_IA_64_GPREL64LSB = 47,R_IA_64_LTOFF22 = 50,R_IA_64_LTOFF64I = 51,R_IA_64_PLTOFF22 = 58,R_IA_64_PLTOFF64I = 59,R_IA_64_PLTOFF64MSB = 62,R_IA_64_PLTOFF64LSB = 63,R_IA_64_FPTR64I = 67,R_IA_64_FPTR32MSB = 68,R_IA_64_FPTR32LSB = 69,R_IA_64_FPTR64MSB = 70,R_IA_64_FPTR64LSB = 71,R_IA_64_PCREL21B = 73,R_IA_64_PCREL21M = 74,R_IA_64_PCREL21F = 75,R_IA_64_PCREL32MSB = 76,R_IA_64_PCREL32LSB = 77,R_IA_64_PCREL64MSB = 78,R_IA_64_PCREL64LSB = 79,R_IA_64_LTOFF_FPTR22 = 82,R_IA_64_LTOFF_FPTR64I = 83,R_IA_64_SEGREL32MSB = 92,R_IA_64_SEGREL32LSB = 93,R_IA_64_SEGREL64MSB = 94,R_IA_64_SEGREL64LSB = 95,R_IA_64_SECREL32MSB = 100,R_IA_64_SECREL32LSB = 101,R_IA_64_SECREL64MSB = 102,R_IA_64_SECREL64LSB = 103,R_IA_64_REL32MSB = 108,R_IA_64_REL32LSB = 109,R_IA_64_REL64MSB = 110,R_IA_64_REL64LSB = 111,R_IA_64_LTV32MSB = 112,R_IA_64_LTV32LSB = 113,R_IA_64_LTV64MSB = 114,R_IA_64_LTV64LSB = 115,R_IA_64_IPLTMSB = 128,R_IA_64_IPLTLSB = 129,R_IA_64_NUM = 130,};
enum MACRO_SADB {SADB_RESERVED = 0,SADB_GETSPI = 1,SADB_UPDATE = 2,SADB_ADD = 3,SADB_DELETE = 4,SADB_GET = 5,SADB_ACQUIRE = 6,SADB_REGISTER = 7,SADB_EXPIRE = 8,SADB_FLUSH = 9,SADB_DUMP = 10,SADB_X_PROMISC = 11,SADB_X_PCHANGE = 12,SADB_MAX = 12,SADB_SAFLAGS_PFS = 1,SADB_SAFLAGS_NOREPLAY = 2,SADB_X_SAFLAGS_USED = -2147483648,SADB_X_SAFLAGS_UNIQUE = 1073741824,SADB_X_SAFLAGS_AALG1 = 536870912,SADB_X_SAFLAGS_AALG2 = 268435456,SADB_X_SAFLAGS_EALG1 = 134217728,SADB_X_SAFLAGS_EALG2 = 67108864,SADB_SASTATE_LARVAL = 0,SADB_SASTATE_MATURE = 1,SADB_SASTATE_DYING = 2,SADB_SASTATE_DEAD = 3,SADB_SASTATE_MAX = 3,SADB_SATYPE_UNSPEC = 0,SADB_SATYPE_AH = 2,SADB_SATYPE_ESP = 3,SADB_SATYPE_RSVP = 5,SADB_SATYPE_OSPFV2 = 6,SADB_SATYPE_RIPV2 = 7,SADB_SATYPE_MIP = 8,SADB_SATYPE_MAX = 8,SADB_AALG_NONE = 0,SADB_AALG_MD5HMAC = 2,SADB_AALG_SHA1HMAC = 3,SADB_AALG_MAX = 3,SADB_EALG_NONE = 0,SADB_EALG_DESCBC = 2,SADB_EALG_3DESCBC = 3,SADB_EALG_NULL = 11,SADB_EALG_MAX = 11,SADB_EXT_RESERVED = 0,SADB_EXT_SA = 1,SADB_EXT_LIFETIME_CURRENT = 2,SADB_EXT_LIFETIME_HARD = 3,SADB_EXT_LIFETIME_SOFT = 4,SADB_EXT_ADDRESS_SRC = 5,SADB_EXT_ADDRESS_DST = 6,SADB_EXT_ADDRESS_PROXY = 7,SADB_EXT_KEY_AUTH = 8,SADB_EXT_KEY_ENCRYPT = 9,SADB_EXT_IDENTITY_SRC = 10,SADB_EXT_IDENTITY_DST = 11,SADB_EXT_SENSITIVITY = 12,SADB_EXT_PROPOSAL = 13,SADB_EXT_SUPPORTED_AUTH = 14,SADB_EXT_SUPPORTED_ENCRYPT = 15,SADB_EXT_SPIRANGE = 16,SADB_EXT_MAX = 16,SADB_IDENTTYPE_RESERVED = 0,SADB_IDENTTYPE_PREFIX = 1,SADB_IDENTTYPE_FQDN = 2,SADB_IDENTTYPE_USER_FQDN = 3,SADB_IDENTTYPE_MAX = 3,SADB_DPD_NONE = 0,SADB_DPD_MAX = 1,};
enum MACRO_SCHI {SCHI_SET_DATA_MODE = 8,SCHI_SET_CTRL_MODE = 0,SCHI_SET_INT_PDN = 4,SCHI_CLR_INT_PDN = 0,SCHI_SET_RESET = 0,SCHI_CLR_RESET = 2,SCHI_SET_PDN = 1,SCHI_CLR_PDN = 0,SCHI_ENA_MODE = 128,SCHI_ENA_INT_PDN = 64,SCHI_ENA_RESET = 32,SCHI_ENA_PDN = 16,SCHI_ENA_ALL = 240,};
enum MACRO_SCMD {SCMD_READ_TOC = 0x43,SCMD_PLAYAUDIO_MSF = 0x47,SCMD_PLAYAUDIO_TI = 0x48,SCMD_PAUSE_RESUME = 0x4B,SCMD_READ_SUBCHANNEL = 0x42,SCMD_PLAYAUDIO10 = 0x45,SCMD_PLAYTRACK_REL10 = 0x49,SCMD_READ_HEADER = 0x44,SCMD_PLAYAUDIO12 = 0xA5,SCMD_PLAYTRACK_REL12 = 0xA9,SCMD_READ_CD = 0xBE,SCMD_CD_PLAYBACK_CONTROL = 0xC9,SCMD_CD_PLAYBACK_STATUS = 0xC4,SCMD_READ_CDDA = 0xD8,SCMD_READ_CDXA = 0xDB,SCMD_READ_ALL_SUBCODES = 0xDF,};
enum MACRO_SCSI {SCSI_RESET_NOTIFY = 0x1,SCSI_RESET_CANCEL = 0x2,SCSI_MAXNAMELEN = 0x100,};
enum MACRO_SECS {SECS_PER_MIN = 60,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,};
enum MACRO_SEGV {SEGV_MAPERR = 1,SEGV_ACCERR = 2,};
enum MACRO_SELF {SELF_CHECK = 0x80000000,};
enum MACRO_SEND {SEND_SPEC1 = 0x21,SEND_SPEC2 = 0x22,};
enum MACRO_SESS {SESS_CLOSE = 1,};
enum MACRO_SGEN {SGEN_IOC = 5457664,SGEN_IOC_READY = 5457665,SGEN_IOC_DIAG = 5457666,};
enum MACRO_SHOW {SHOW_CROSSHAIRS = 0x2,SHOW_HORIZ_HAIR = 0x4,SHOW_VERT_HAIR = 0x8,};
enum MACRO_SHRT {SHRT_MIN = -32768,SHRT_MAX = 32767,};
enum MACRO_SHUT {SHUT_RD = 0,SHUT_WR = 1,SHUT_RDWR = 2,};
enum MACRO_SIDL {SIDL = 5,};
enum MACRO_SIZE {CDB_SIZE = 12,SCSI_CDB_SIZE = 16,};
enum MACRO_SMAP {SMAP_HASHAVELEN = 4,SMAP_HASHVPSHIFT = 6,};
enum MACRO_SMWP {SMWP_STATE_V_0 = 0,};
enum MACRO_SOCK {SOCK_STREAM = 2,SOCK_DGRAM = 1,SOCK_RAW = 4,SOCK_RDM = 5,SOCK_SEQPACKET = 6,};
enum MACRO_SOFT {SOFT_LOOKUP = 16384,};
enum MACRO_SPL3 {SPL3 = 6,};
enum MACRO_SPL5 {SPL5 = 12,};
enum MACRO_SPL7 {SPL7 = 13,};
enum MACRO_SPL8 {SPL8 = 15,};
enum MACRO_SP_F {SP_F_PORT_LOGIN = 0x10,};
enum MACRO_SSYS {SSYS = 0x1,STRC = 0x2,SLOAD = 0x8,SLOCK = 0x10,SPREXEC = 0x20,SPROCTR = 0x40,SPRFORK = 0x80,SKILLED = 0x100,SULOAD = 0x200,SRUNLCL = 0x400,SBPTADJ = 0x800,SKILLCL = 0x1000,SOWEUPC = 0x2000,SEXECED = 0x4000,SPASYNC = 0x8000,SJCTL = 0x10000,SNOWAIT = 0x20000,SVFORK = 0x40000,SVFWAIT = 0x80000,EXITLWPS = 0x100000,HOLDFORK = 0x200000,SWAITSIG = 0x400000,HOLDFORK1 = 0x800000,COREDUMP = 0x1000000,SMSACCT = 0x2000000,ASLWP = 0x4000000,SPRLOCK = 0x8000000,NOCD = 0x10000000,HOLDWATCH = 0x20000000,SMSFORK = 0x40000000,};
enum MACRO_STAB {STAB = 0x54,};
enum MACRO_STAT {STAT_SET = 0x2,STAT_CLEAR = 0x1,STAT_GET = 0x0,};
enum MACRO_STCE {STCE_EV = 0xC0,STCE_PD = 0xC1,};
enum MACRO_STEP {NORMAL_STEP = 0x4,WATCH_STEP = 0x8,};
enum MACRO_STOP {STOP_1 = 0x0,STOP_15 = 0x4,STOP_2 = 0x8,};
enum MACRO_STRU {STRU_F = 1,STRU_R = 2,STRU_P = 3,};
enum MACRO_SUPD {SUPD = 0x1,SACC = 0x2,SCHG = 0x4,SPRIV = 0x8,SLOFFSET = 0x10,SLOCKED = 0x20,SWANT = 0x40,SCLONE = 0x100,};
enum MACRO_SUSP {SUSP = 237,};
enum MACRO_SVID {SVID = 0x61,};
enum MACRO_SYNC {SYNC_ATTR = 0x1,SYNC_CLOSE = 0x2,SYNC_ALL = 0x4,};
enum MACRO_TAB0 {TAB0 = 0,TAB2 = 4096,};
enum MACRO_TAB3 {TAB3 = 0x1800,BSDLY = 0x2000,};
enum MACRO_TAPE {TAPE_ALERT_SUPPORT_UNKNOWN = 0,TAPE_ALERT_NOT_SUPPORTED = 1,TAPE_ALERT_SUPPORTED = 2,TAPE_ALERT_MAX_PARA = 64,};
enum MACRO_TASK {TASK_NORMAL = 0x0,TASK_FINAL = 0x1,TASK_FINALITY = 0x1,};
enum MACRO_TCOO {TCOO_NOPEER = 146,TCOO_PEERNOROOMONQ = 146,TCOO_PEERBADSTATE = 146,TCOO_PEERINITIATED = 131,TCOO_PROVIDERINITIATED = 131,};
enum MACRO_TCPS {TCPS_IDLE = -5,TCPS_BOUND = -4,TCPS_SYN_RCVD = -1,};
enum MACRO_TCPT {TCPT_NTIMERS = 4,TCPT_REXMT = 0,TCPT_PERSIST = 1,TCPT_KEEP = 2,TCPT_2MSL = 3,};
enum MACRO_TERM {TERM_NONE = 0,TERM_TEC = 1,TERM_V61 = 2,TERM_V10 = 3,TERM_TEX = 4,TERM_D40 = 5,TERM_H45 = 6,TERM_D42 = 7,};
enum MACRO_TEXT {TEXT_IMPLICIT = 0x100,TEXT_EXPLICIT = 0x200,TEXT_VISUAL = 0x300,};
enum MACRO_TIME {BOOT_TIME = 2,OLD_TIME = 3,NEW_TIME = 4,};
enum MACRO_TIOC {TIOC = 21504,};
enum MACRO_TRAN {TRAN_ACCEPT = 1,TRAN_BUSY = 0,TRAN_BADPKT = -1,TRAN_FATAL_ERROR = -2,};
enum MACRO_TRAP {TRAP_BRKPT = 1,TRAP_TRACE = 2,TRAP_RWATCH = 3,TRAP_WWATCH = 4,TRAP_XWATCH = 5,};
enum MACRO_TSAF {TSAF_EXP_QUEUED = 0x1,};
enum MACRO_TSRF {TSRF_INFO_REQ = 0x1,TSRF_IS_EXP_IN_RCVBUF = 0x2,TSRF_QLEN_REQ = 0x4,};
enum MACRO_TYPE {TYPE_A = 1,TYPE_E = 2,TYPE_I = 3,TYPE_L = 4,};
enum MACRO_UFSD {UFSD_FREE = 48,UFSD_ACL = 49,UFSD_DFACL = 50,};
enum MACRO_UINT {UINT_MAX = -1,};
enum MACRO_USER {USER_OBJ = 0x1,};
enum MACRO_USOC {USOC_PROM_4TH_SELF_TST = 0x0,USOC_PROM_4TH_OBP_DRV = 0x1000,USOC_PROM_OBP_HDR = 0x5000,USOC_PROM_FW_DATE_CODE = 0x5300,USOC_PROM_SRVC_PARM = 0x5304,USOC_PROM_LA_BIT_MASK = 0x5344,USOC_PROM_RSRV1 = 0x534C,USOC_PROM_USOC_CODE = 0x6000,USOC_PROM_RSRV2 = 0xF000,USOC_XRAM_REQ_DESC = 0x200,USOC_XRAM_RSP_DESC = 0x220,USOC_XRAM_LESB_P0 = 0x240,USOC_XRAM_LESB_P1 = 0x258,USOC_XRAM_SERV_PARAMS = 0x280,USOC_XRAM_FW_DATE_STR = 0x2DC,USOC_XRAM_FW_DATE_CODE = 0x2F8,USOC_XRAM_HW_REV = 0x2FC,USOC_XRAM_UCODE = 0x300,USOC_XRAM_PORTA_WWN = 0x300,USOC_XRAM_PORTB_WWN = 0x308,USOC_XRAM_NODE_WWN = 0x310,USOC_XRAM_BUF_POOL = 0x4000,USOC_XRAM_EXCH_POOL = 0xC000,};
enum MACRO_VEOL {VEOL = 5,};
enum MACRO_VERS {CLGET_VERS = 12,CLSET_VERS = 13,};
enum MACRO_VIFF {VIFF_TUNNEL = 0x1,VIFF_SRCRT = 0x2,VIFF_REGISTER = 0x4,};
enum MACRO_VIOC {VIOC = 22016,};
enum MACRO_VKEY {VKEY_FIRST = 32512,VKEY_UP = 0,VKEY_DOWN = 1,VKEY_KBD_CODES = 128,VKEY_FIRSTPSEUDO = 32512,VKEY_LASTPSEUDO = 32527,VKEY_FIRSTSHIFT = 32528,};
enum MACRO_VLOC {VLOC_FIRST = 32640,};
enum MACRO_VMEM {VMEM_ALLOC = 0x1,VMEM_FREE = 0x2,VMEM_SPAN = 0x10,};
enum MACRO_VMIN {VMIN = 4,};
enum MACRO_VTAB {VTAB = 5,};
enum MACRO_VTOC {VTOC_SANE = 0x600DDEEE,};
enum MACRO_VUID {VUID_SEG_SIZE = 256,};
enum MACRO_WALK {WALK_ERR = -1,WALK_NEXT = 0,WALK_DONE = 1,};
enum MACRO_WEOF {WEOF = -1,};
enum MACRO_WILL {WILL = 251,};
enum MACRO_WONT {WONT = 252,};
enum MACRO_WRDE {WRDE_APPEND = 0x1,WRDE_DOOFFS = 0x2,WRDE_NOCMD = 0x4,WRDE_REUSE = 0x8,WRDE_SHOWERR = 0x10,WRDE_UNDEF = 0x20,WRDE_ERRNO = 0x2,WRDE_BADCHAR = 0x3,WRDE_BADVAL = 0x4,WRDE_CMDSUB = 0x5,WRDE_NOSPACE = 0x6,WRDE_SYNTAX = 0x7,WRDE_NOSYS = 0x8,};
enum MACRO_XIOC {XIOC = 22528,};
enum MACRO_XMIT {XMIT_DATA = 2,RCV_DATA = 3,};
enum MACRO_XMTR {XMTR_DIS = 0x4,XMTR_ENA = 0x8,};
enum MACRO_XOFF {XOFF_2 = 0x0,XOFF_24 = 0x40,};
enum MACRO_XPG4 {XPG4_1 = 0x4,};
enum MACRO_YPOP {YPOP_CHANGE = 1,YPOP_INSERT = 2,YPOP_DELETE = 3,YPOP_STORE = 4,};
enum MACRO_ZSR2 {ZSR2_TX_EMPTY_B = 0x0,ZSR2_XSINT_B = 0x2,ZSR2_RX_AVAIL_B = 0x4,ZSR2_SRINT_B_OR_NONE = 0x6,ZSR2_TX_EMPTY_A = 0x8,ZSR2_XSINT_A = 0xA,ZSR2_RX_AVAIL_A = 0xC,ZSR2_SRINT_A = 0xE,ZSR2_STATUS_ALL = 0xE,};
enum MACRO__ARG {_ARG_MAX32 = 1048320,_ARG_MAX64 = 2096640,};
enum MACRO__CAT {_CAT_MAGIC = 0xFF88FF89,};
enum MACRO__DBM {_DBM_RDONLY = 0x1,_DBM_IOERR = 0x2,};
enum MACRO__MAP {_MAP_NEW = 0x80000000,};
enum MACRO__NCC {_NCC = 8,};
enum MACRO__ONE {_ONE_ = 1,};
enum MACRO__REG {_REG_BACKREF_MAX = 9,};
enum MACRO__RPC {_RPC_NONE = 0,_RPC_NETPATH = 1,_RPC_VISIBLE = 2,_RPC_CIRCUIT_V = 3,_RPC_DATAGRAM_V = 4,_RPC_CIRCUIT_N = 5,_RPC_DATAGRAM_N = 6,_RPC_TCP = 7,_RPC_UDP = 8,_RPC_LOCAL = 9,_RPC_DOOR = 10,_RPC_DOOR_LOCAL = 11,_RPC_DOOR_NETPATH = 12,};
enum MACRO__SYS {_SYS_NMLN = 257,};
enum MACRO__WIN {_WIN_ADD_ONE = 0x20,_WIN_INS_ONE = 0x64,};
enum MACRO_oEFT {oEFT_MAGIC = 0x90909090,};
enum MACRO_sIOC {sIOC = 29440,};
enum MACRO_xEOF {xEOF = 236,};
enum MACRO_zIOC {zIOC = 31232,};
typedef struct p1284_ioctl_st P1284Ioctl;
typedef void *Psocklen_t;
typedef struct vuid_queue Vuid_queue;
typedef struct vuid_value Vuid_value;
struct _FN_status;
struct _FN_string;
typedef struct _647FE789D073DDA1115A25D9160A600C _LC_subs_t;
enum __ns_class {ns_c_in = 0x1,ns_c_chaos = 0x3,ns_c_hs = 0x4,ns_c_none = 0xFE,ns_c_any = 0xFF,ns_c_max = 0x10000,};
enum __ns_rcode {ns_r_noerror = 0x0,ns_r_formerr = 0x1,ns_r_servfail = 0x2,ns_r_nxdomain = 0x3,ns_r_notimpl = 0x4,ns_r_refused = 0x5,ns_r_yxdomain = 0x6,ns_r_yxrrset = 0x7,ns_r_nxrrset = 0x8,ns_r_notauth = 0x9,ns_r_notzone = 0xA,ns_r_max = 0xB,};
typedef struct _cleanup _cleanup_t;
struct _sema_impl {struct _kthread *s_slpq;int s_count;};
struct action_arg {char *aa_path;char *aa_rawpath;char *aa_type;char *aa_media;char *aa_partname;char *aa_mountpoint;int aa_clean;int aa_mnt;};
typedef struct ami_cert *ami_cert_t;
typedef struct ani_free ani_free_t;
typedef short au_event_t;
typedef struct audit_fstat au_fstat_t;
typedef struct au_tid32 au_tid32_t;
typedef struct au_tid64 au_tid64_t;
typedef struct au_token au_token_t;
struct audit_stat {unsigned int as_version;unsigned int as_numevent;int as_generated;int as_nonattrib;int as_kernel;int as_audit;int as_auditctl;int as_enqueue;int as_written;int as_wblocked;int as_rblocked;int as_dropped;int as_totalsize;unsigned int as_memused;};
typedef struct authattr_s authattr_t;
enum autofs_res {AUTOFS_OK = 0x0,AUTOFS_NOENT = 0x2,AUTOFS_ECOMM = 0x5,AUTOFS_NOMEM = 0xC,AUTOFS_NOTDIR = 0x14,AUTOFS_SHUTDOWN = 0x3E8,};
typedef unsigned char *baseaddr_t;
struct cachefsops {int (*co_init_cobject)();int (*co_check_cobject)();void (*co_modify_cobject)();void (*co_invalidate_cobject)();void (*co_convert_cobject)();};
typedef void *callb_id_t;
typedef struct charspec charspec_t;
typedef struct cpu_stat cpu_stat_t;
typedef void (*cyc_func_t)(void *);
typedef struct cyc_time cyc_time_t;
typedef struct dacf_arg dacf_arg_t;
typedef union _3C540F5A14E02DF258E6208309F9E315 dbri_reg_t;
typedef struct dcanchor dcanchor_t;
enum dcop_state {DC_READONLY = 0x0,DC_INSTALLING = 0x1,DC_READY = 0x2,};
typedef struct ddi_prop ddi_prop_t;
enum delta_type {DT_NONE = 0x0,DT_SB = 0x1,DT_CG = 0x2,DT_SI = 0x3,DT_AB = 0x4,DT_ABZERO = 0x5,DT_DIR = 0x6,DT_INODE = 0x7,DT_FBI = 0x8,DT_QR = 0x9,DT_COMMIT = 0xA,DT_CANCEL = 0xB,DT_BOT = 0xC,DT_EOT = 0xD,DT_UD = 0xE,DT_SUD = 0xF,DT_SHAD = 0x10,DT_MAX = 0x11,};
typedef void *dev_info_t;
typedef struct _D53EBEF53D22F60B85DC57B7CC577C4D devalloc_t;
typedef struct di_minor *di_minor_t;
typedef struct dircache dircache_t;
typedef struct dirent64 dirent64_t;
enum dk_mpstate {DKS_INITIAL = 0x0,DKS_OFFLINE = 0x1,DKS_ONLINE = 0x2,DKS_FREEZE = 0x3,};
enum dkio_state {DKIO_NONE = 0x0,DKIO_EJECTED = 0x1,DKIO_INSERTED = 0x2,};
typedef struct door_arg door_arg_t;
typedef unsigned long long door_ptr_t;
typedef struct dump_map dump_map_t;
typedef struct dvpoll32 dvpoll32_t;
typedef struct ea_group ea_group_t;
typedef struct _256FEEFA99C080BE07F3A81A96D4694C eucwidth_t;
typedef struct execattr_s execattr_t;
struct exportinfo;
typedef struct failinfo failinfo_t;
enum fault_type {F_INVAL = 0x0,F_PROT = 0x1,F_SOFTLOCK = 0x2,F_SOFTUNLOCK = 0x3,};
typedef struct fcp_cntl fcp_cntl_t;
typedef struct fdbuffer fdbuffer_t;
typedef struct fifodata fifodata_t;
typedef struct fifolock fifolock_t;
typedef struct fifonode fifonode_t;
struct flushmeter {unsigned int f_ctx;unsigned int f_segment;unsigned int f_page;unsigned int f_partial;unsigned int f_usr;unsigned int f_region;};
typedef struct fpu fpregset_t;
enum fsh_access {fsa_NONE = 0x0,fsa_R = 0x1,fsa_W = 0x2,fsa_RW = 0x3,};
typedef struct ftevents ftevents_t;
enum gqr_status {Q_OK = 0x1,Q_NOQUOTA = 0x2,Q_EPERM = 0x3,};
struct grant_lock {struct filock *grant_lock_list[52];struct grant_lock *next;};
typedef void *gss_name_t;
typedef unsigned int gss_uint32;
typedef struct gwindows gwindows_t;
typedef struct id_space id_space_t;
enum ifta_proto {IFTAP_INVALID = 0x0,IFTAP_IPV4 = 0x1,IFTAP_IPV6 = 0x2,};
typedef struct in6_addr in6_addr_t;
typedef struct init_dev init_dev_t;
typedef struct ip6_dest ip6_dest_t;
typedef struct ip6_frag ip6_frag_t;
enum ipd_iftype {IPD_NULL = 0x0,IPD_PTP = 0x1,IPD_MTP = 0x2,};
typedef struct _5D176D33403591159BBBEF445356E214 k_sigset_t;
typedef struct _kcondvar kcondvar_t;
typedef struct _kcpc_ctx kcpc_ctx_t;
struct kmem_cache;
typedef struct kproject kproject_t;
typedef struct kstat_io kstat_io_t;
typedef struct llc2Init llc2Init_t;
struct llchdr_xid {unsigned char llcx_format;unsigned char llcx_class;unsigned char llcx_window;};
typedef struct lm_block lm_block_t;
typedef struct log_dump log_dump_t;
typedef long long longlong_t;
typedef struct lufs_buf lufs_buf_t;
typedef struct _lwp_cond lwp_cond_t;
typedef struct _lwp_sema lwp_sema_t;
typedef struct lwpsinfo lwpsinfo_t;
typedef struct mapentry mapentry_t;
typedef struct _D8694504BF76A56B9D38A17C122FF30C mcontext_t;
typedef struct mdb_dcmd mdb_dcmd_t;
typedef struct mdb_pipe mdb_pipe_t;
typedef struct mem_vtop mem_vtop_t;
struct mhioctkown {int reinstate_resv_delay;int min_ownership_delay;int max_ownership_delay;};
typedef struct mib2_tcp mib2_tcp_t;
typedef struct mib2_udp mib2_udp_t;
struct modlinkage {int ml_rev;void *ml_linkage[4];};
struct modlstrmod {struct mod_ops *strmod_modops;char *strmod_linkinfo;struct fmodsw *strmod_fmodsw;};
typedef struct mon_spec mon_spec_t;
struct mta_handle;
enum mtio_state {MTIO_NONE = 0x0,MTIO_EJECTED = 0x1,MTIO_INSERTED = 0x2,};
enum nlm4_stats {NLM4_GRANTED = 0x0,NLM4_DENIED = 0x1,NLM4_DENIED_NOLOCKS = 0x2,NLM4_BLOCKED = 0x3,NLM4_DENIED_GRACE_PERIOD = 0x4,NLM4_DEADLCK = 0x5,NLM4_ROFS = 0x6,NLM4_STALE_FH = 0x7,NLM4_FBIG = 0x8,NLM4_FAILED = 0x9,};
struct nlm_notify {char *name;int state;};
typedef int nss_dbop_t;
struct o_si_udata {int tidusize;int addrsize;int optsize;int etsdusize;int servtype;int so_state;int so_options;int tsdusize;};
typedef union _C57692D243E2F42291707545D24FC942 pad_info_t;
struct pam_handle;
typedef struct panic_nv panic_nv_t;
typedef struct pathname pathname_t;
struct pixrectops;
typedef struct _7E515F46519A2C03149F8E5448716EB7 pm_request;
typedef struct ppa_info ppa_info_t;
typedef struct _490D5F12417668765212E4CF5D599182 pppError_t;
enum ppp_errors {pppConfigFailed = 0x0,pppNegotiateFailed = 0x1,pppAuthFailed = 0x2,pppProtoClosed = 0x3,pppLocalAuthFailed = 0x4,pppRemoteAuthFailed = 0x5,pppLoopedBack = 0x6,};
enum ppp_ioctls {PPP_SET_CONF = 0x100,PPP_GET_CONF = 0x101,PPP_SET_AUTH = 0x102,PPP_GET_AUTH = 0x103,PPP_ACTIVE_OPEN = 0x104,PPP_PASSIVE_OPEN = 0x105,PPP_CLOSE = 0x106,PPP_UP = 0x107,PPP_DOWN = 0x108,PPP_SET_LOCAL_PASSWD = 0x109,PPP_GET_REMOTE_PASSWD = 0x10A,PPP_REMOTE_OK = 0x10B,PPP_REMOTE_NOK = 0x10C,PPP_GET_STATE = 0x10D,PPP_GET_LCP_STATS = 0x10E,PPP_GET_IPNCP_STATS = 0x10F,PPP_GET_IP_STATS = 0x110,PPP_GET_ERRS = 0x111,PPP_SET_DEBUG = 0x112,PPP_DELETE_MIB_ENTRY = 0x113,PPP_GET_VERSION = 0x114,PPP_OPEN = 0x115,PPP_AUTH_LOC = 0x116,PPP_AUTH_REM = 0x117,PPP_AUTH_BOTH = 0x118,PPP_FORCE_REM = 0x119,PPP_SET_REMOTE_PASSWD = 0x11A,};
typedef struct prewrite prewrite_t;
typedef struct prheader prheader_t;
struct proc_graph {struct proc_vertex **proc;int gcount;int free;int mark;};
typedef struct profattr_s profattr_t;
struct rcm_handle;
typedef struct rcm_info rcm_info_t;
typedef struct rd_agent rd_agent_t;
typedef struct _7B7425BDB71A818A922A1DDC8B4A1BCA regmatch_t;
enum reply_stat {MSG_ACCEPTED = 0x0,MSG_DENIED = 0x1,};
typedef struct rl_entry rl_entry_t;
typedef int rpcbs_proc[13];
typedef struct sack_blk sack_blk_t;
typedef struct sadb_alg sadb_alg_t;
typedef struct sadb_ext sadb_ext_t;
typedef struct sadb_key sadb_key_t;
typedef struct sadb_msg sadb_msg_t;
typedef struct sc_public schedctl_t;
typedef struct sec_data sec_data_t;
typedef struct seconfig seconfig_t;
typedef struct servinfo servinfo_t;
typedef struct _D69C93AF57A4C706A087FFCB2A33F062 ses_objarg;
typedef struct _43F9318D896FF98D6032380AA4C8DE55 ses_object;
typedef struct sf_stats sf_stats_t;
typedef struct short_ad short_ad_t;
typedef struct sig_args_struct sig_args_t;
typedef int sigjmp_buf[19];
typedef struct sigqueue sigqueue_t;
typedef struct _sobj_ops sobj_ops_t;
enum stable_how {UNSTABLE = 0x0,DATA_SYNC = 0x1,FILE_SYNC = 0x2,};
typedef int t_scalar_t;
struct tcp_base_s;
typedef struct timespec timespec_t;
typedef char tnf_char_t;
typedef signed char tnf_int8_t;
typedef struct ucontext ucontext_t;
typedef struct upimutex upimutex_t;
typedef struct userattr_s userattr_t;
typedef struct _19DEE1C64F7EC3DDB040A3404BEC0D9F utmp_array;
typedef struct vjcompress vjstruct_t;
typedef struct vnodeops vnodeops_t;
typedef struct vsecattr vsecattr_t;
typedef struct vt_label vt_label_t;
typedef struct vt_title vt_title_t;
struct vuid_queue {struct vuid_q_node *top;struct vuid_q_node *bottom;struct vuid_q_node *free;int num;int size;};
typedef char *wrapstring;
typedef char writeverf3[8];
typedef struct _68E4A9C261F68D94E3C41D4B3B334942 Elf32_Dyn;
typedef unsigned int Elf32_Off;
typedef struct _C772EEB8BDF2D9B03BC2113DCD14FF9B Elf32_Rel;
typedef struct _F5D530A8B9C8144C513F035766B8BD9F Elf32_Sym;
typedef struct _53F0EB4E985DBC87B1B2326D8BF9D556 Elf64_Dyn;
typedef unsigned long long Elf64_Off;
typedef struct _A313ED2DE25BE046A874D492CFBD731F Elf64_Rel;
typedef struct _7963ED2253978A4E491ADF870F9A304B Elf64_Sym;
typedef struct _0A0885A099C43036865B53B70EA12DCA Elf_Arhdr;
typedef struct _92C2B677F4D6F16C081E111A1354037E Elf_Arsym;
typedef struct typenode FIELDTYPE;
enum MACRO_ACE {ACE_F_PERMANENT = 0x1,ACE_F_PUBLISH = 0x2,ACE_F_DYING = 0x4,ACE_F_RESOLVED = 0x8,ACE_F_MAPPING = 0x10,ACE_F_MYADDR = 0x20,};
enum MACRO_ACL {ACL_DEFAULT = 0x1000,};
enum MACRO_ADD {ADD_OVERWRITE = 256,};
enum MACRO_AIO {AIO_POLL_BIT = 0x20,AIO_CANCELED = 0x0,AIO_ALLDONE = 0x1,AIO_NOTCANCELED = 0x2,};
enum MACRO_ALL {ALL_MOUSE_EVENTS = 0x7FFF,};
enum MACRO_ALT {ALT_DIGITS = 55,};
enum MACRO_AMI {AMI_OK = 0,AMI_EBUFSIZE = 1,AMI_ENOMEM = 2,AMI_BAD_FILE = 3,AMI_FILE_NOT_FOUND = 4,AMI_FILE_IO_ERR = 5,AMI_BAD_PASSWD = 6,AMI_UNKNOWN_USER = 7,AMI_ALGORITHM_UNKNOWN = 8,AMI_ASN1_ENCODE_ERR = 9,AMI_ASN1_DECODE_ERR = 10,AMI_BAD_KEY = 11,AMI_KEYGEN_ERR = 12,AMI_ENCRYPT_ERR = 13,AMI_DECRYPT_ERR = 14,AMI_SIGN_ERR = 15,AMI_VERIFY_ERR = 16,AMI_DIGEST_ERR = 17,AMI_OUTPUT_FORMAT_ERR = 18,AMI_SYSTEM_ERR = 19,AMI_ATTRIBUTE_UNKNOWN = 20,AMI_AMILOGIN_ERR = 21,AMI_AMILOGOUT_ERR = 22,AMI_NO_SUCH_ENTRY = 23,AMI_ENTRY_ALREADY_EXISTS = 24,AMI_AMISERV_DECRYPT_ERR = 25,AMI_AMISERV_SIGN_ERR = 26,AMI_USER_DID_NOT_AMILOGIN = 27,AMI_AMISERV_CONNECT = 28,AMI_KEYPKG_NOT_FOUND = 29,AMI_TIME_INVALID = 30,AMI_UNTRUSTED_PUBLIC_KEY = 31,AMI_EPARM = 32,AMI_BINARY_TO_RFC1421_ERR = 33,AMI_RFC1421_TO_BINARY_ERR = 34,AMI_RANDOM_NUM_ERR = 35,AMI_XFN_ERR = 36,AMI_CERT_CHAIN_ERR = 37,AMI_RDN_MISSING_EQUAL = 38,AMI_AVA_TYPE_MISSING = 39,AMI_AVA_VALUE_MISSING = 40,AMI_CERT_NOT_FOUND = 41,AMI_DN_NOT_FOUND = 42,AMI_CRITICAL_EXTNS_ERR = 43,AMI_ASN1_INIT_ERROR = 44,AMI_WRAP_ERROR = 45,AMI_UNWRAP_ERROR = 46,AMI_UNSUPPORTED_KEY_TYPE = 47,AMI_DH_PART1_ERR = 48,AMI_DH_PART2_ERR = 49,AMI_DOUBLE_ENCRYPT = 50,AMI_AMISERV_KEYPKG_UPDATE = 51,AMI_AMISERV_STAT_ERR = 52,AMI_GLOBAL_ERR = 53,AMI_TRUSTED_KEY_EXPIRED = 54,AMI_OPEN_ERR = 55,AMI_TOTAL_ERRNUM = 56,AMI_CERT_ERR = 57,AMI_KEYPKG_ERR = 58,AMI_ADD_DATA = 1,AMI_END_DATA = 2,AMI_DIGESTED_DATA = 3,AMI_DIGESTED_AND_ENCODED_DATA = 4,};
enum MACRO_ANI {ANI_MAX_POOL = 8,};
enum MACRO_ARG {ARG_MAX = 1048320,LINK_MAX = 32767,NGROUPS_MAX = 16,PATH_MAX = 1024,_POSIX_AIO_LISTIO_MAX = 2,_POSIX_AIO_MAX = 1,_POSIX_ARG_MAX = 4096,_POSIX_CHILD_MAX = 6,};
enum MACRO_ARP {ARP_REQUEST = 1,ARP_RESPONSE = 2,};
enum MACRO_ASI {ASI_N = 0x4,ASI_NL = 0xC,ASI_AIUP = 0x10,ASI_AIUS = 0x11,ASI_AIUPL = 0x18,ASI_AIUSL = 0x19,ASI_P = 0x80,ASI_S = 0x81,ASI_PNF = 0x82,ASI_SNF = 0x83,ASI_PL = 0x88,ASI_SL = 0x89,ASI_PNFL = 0x8A,ASI_SNFL = 0x8B,ASI_USER = 0x11,};
enum MACRO_ATF {ATF_INUSE = 0x1,ATF_COM = 0x2,ATF_PERM = 0x4,ATF_PUBL = 0x8,ATF_USETRAILERS = 0x10,};
enum MACRO_AUC {AUC_UNSET = 0,AUC_AUDITING = 1,AUC_NOAUDIT = 2,AUC_DISABLED = -1,};
enum MACRO_AUE {AUE_NULL = 0,AUE_EXIT = 1,AUE_FORK = 2,AUE_OPEN = 3,AUE_CREAT = 4,AUE_LINK = 5,AUE_UNLINK = 6,AUE_EXEC = 7,AUE_CHDIR = 8,AUE_MKNOD = 9,AUE_CHMOD = 10,AUE_CHOWN = 11,AUE_UMOUNT = 12,AUE_JUNK = 13,AUE_ACCESS = 14,AUE_KILL = 15,AUE_STAT = 16,AUE_LSTAT = 17,AUE_ACCT = 18,AUE_MCTL = 19,AUE_REBOOT = 20,AUE_SYMLINK = 21,AUE_READLINK = 22,AUE_EXECVE = 23,AUE_CHROOT = 24,AUE_VFORK = 25,AUE_SETGROUPS = 26,AUE_SETPGRP = 27,AUE_SWAPON = 28,AUE_SETHOSTNAME = 29,AUE_FCNTL = 30,AUE_SETPRIORITY = 31,AUE_CONNECT = 32,AUE_ACCEPT = 33,AUE_BIND = 34,AUE_SETSOCKOPT = 35,AUE_VTRACE = 36,AUE_SETTIMEOFDAY = 37,AUE_FCHOWN = 38,AUE_FCHMOD = 39,AUE_SETREUID = 40,AUE_SETREGID = 41,AUE_RENAME = 42,AUE_TRUNCATE = 43,AUE_FTRUNCATE = 44,AUE_FLOCK = 45,AUE_SHUTDOWN = 46,AUE_MKDIR = 47,AUE_RMDIR = 48,AUE_UTIMES = 49,AUE_ADJTIME = 50,AUE_SETRLIMIT = 51,AUE_KILLPG = 52,AUE_NFS_SVC = 53,AUE_STATFS = 54,AUE_FSTATFS = 55,AUE_UNMOUNT = 56,AUE_ASYNC_DAEMON = 57,AUE_NFS_GETFH = 58,AUE_SETDOMAINNAME = 59,AUE_QUOTACTL = 60,AUE_EXPORTFS = 61,AUE_MOUNT = 62,AUE_SEMSYS = 63,AUE_MSGSYS = 64,AUE_SHMSYS = 65,AUE_BSMSYS = 66,AUE_RFSSYS = 67,AUE_FCHDIR = 68,AUE_FCHROOT = 69,AUE_VPIXSYS = 70,AUE_PATHCONF = 71,AUE_OPEN_R = 72,AUE_OPEN_RC = 73,AUE_OPEN_RT = 74,AUE_OPEN_RTC = 75,AUE_OPEN_W = 76,AUE_OPEN_WC = 77,AUE_OPEN_WT = 78,AUE_OPEN_WTC = 79,AUE_OPEN_RW = 80,AUE_OPEN_RWC = 81,AUE_OPEN_RWT = 82,AUE_OPEN_RWTC = 83,AUE_MSGCTL = 84,AUE_MSGCTL_RMID = 85,AUE_MSGCTL_SET = 86,AUE_MSGCTL_STAT = 87,AUE_MSGGET = 88,AUE_MSGRCV = 89,AUE_MSGSND = 90,AUE_SHMCTL = 91,AUE_SHMCTL_RMID = 92,AUE_SHMCTL_SET = 93,AUE_SHMCTL_STAT = 94,AUE_SHMGET = 95,AUE_SHMAT = 96,AUE_SHMDT = 97,AUE_SEMCTL = 98,AUE_SEMCTL_RMID = 99,AUE_SEMCTL_SET = 100,AUE_SEMCTL_STAT = 101,AUE_SEMCTL_GETNCNT = 102,AUE_SEMCTL_GETPID = 103,AUE_SEMCTL_GETVAL = 104,AUE_SEMCTL_GETALL = 105,AUE_SEMCTL_GETZCNT = 106,AUE_SEMCTL_SETVAL = 107,AUE_SEMCTL_SETALL = 108,AUE_SEMGET = 109,AUE_SEMOP = 110,AUE_CORE = 111,AUE_CLOSE = 112,AUE_SYSTEMBOOT = 113,AUE_ASYNC_DAEMON_EXIT = 114,AUE_NFSSVC_EXIT = 115,AUE_SETCMWPLABEL = 116,AUE_SETCLEARANCE = 117,AUE_FGETCMWLABEL = 118,AUE_FSETCMWLABEL = 119,AUE_GETCMWFSRANGE = 120,AUE_GETCMWLABEL = 121,AUE_GETFILEPRIV = 122,AUE_LGETCMWLABEL = 123,AUE_MKFSO = 124,AUE_SETCMWLABEL = 125,AUE_SETFILEPRIV = 126,AUE_SETPROCPRIV = 127,AUE_WRITEL = 128,AUE_WRITEVL = 129,AUE_GETAUID = 130,AUE_SETAUID = 131,AUE_GETAUDIT = 132,AUE_SETAUDIT = 133,AUE_GETUSERAUDIT = 134,AUE_SETUSERAUDIT = 135,AUE_AUDITSVC = 136,AUE_AUDITUSER = 137,AUE_AUDITON = 138,AUE_AUDITON_GTERMID = 139,AUE_AUDITON_STERMID = 140,AUE_AUDITON_GPOLICY = 141,AUE_AUDITON_SPOLICY = 142,AUE_AUDITON_GESTATE = 143,AUE_AUDITON_SESTATE = 144,AUE_AUDITON_GQCTRL = 145,AUE_AUDITON_SQCTRL = 146,AUE_GETKERNSTATE = 147,AUE_SETKERNSTATE = 148,AUE_GETPORTAUDIT = 149,AUE_AUDITSTAT = 150,AUE_REVOKE = 151,AUE_MAC = 152,AUE_ENTERPROM = 153,AUE_EXITPROM = 154,AUE_IFLOAT = 155,AUE_PFLOAT = 156,AUE_UPRIV = 157,AUE_IOCTL = 158,AUE_FIND_RH = 159,AUE_BADSATTR = 160,AUE_TN_GEN = 161,AUE_TFRWRD = 162,AUE_TN_BYPASS = 163,AUE_TN_ISPRIV = 164,AUE_TN_CKRT = 165,AUE_TN_CKIPOUT = 166,AUE_KTNETD = 167,AUE_STNETD = 168,AUE_HLTSR = 169,AUE_STRTSR = 170,AUE_FREESR = 171,AUE_TN_ACCRED = 172,AUE_ONESIDE = 173,AUE_MSGGETL = 174,AUE_MSGRCVL = 175,AUE_MSGSNDL = 176,AUE_SEMGETL = 177,AUE_SHMGETL = 178,AUE_GETMLDADORN = 179,AUE_GETSLDNAME = 180,AUE_MLDLSTAT = 181,AUE_MLDSTAT = 182,AUE_SOCKET = 183,AUE_SENDTO = 184,AUE_PIPE = 185,AUE_SOCKETPAIR = 186,AUE_SEND = 187,AUE_SENDMSG = 188,AUE_RECV = 189,AUE_RECVMSG = 190,AUE_RECVFROM = 191,AUE_READ = 192,AUE_GETDENTS = 193,AUE_LSEEK = 194,AUE_WRITE = 195,AUE_WRITEV = 196,AUE_NFS = 197,AUE_READV = 198,AUE_OSTAT = 199,AUE_SETUID = 200,AUE_STIME = 201,AUE_UTIME = 202,AUE_NICE = 203,AUE_OSETPGRP = 204,AUE_SETGID = 205,AUE_READL = 206,AUE_READVL = 207,AUE_FSTAT = 208,AUE_DUP2 = 209,AUE_MMAP = 210,AUE_AUDIT = 211,AUE_PRIOCNTLSYS = 212,AUE_MUNMAP = 213,AUE_SETEGID = 214,AUE_SETEUID = 215,AUE_PUTMSG = 216,AUE_GETMSG = 217,AUE_PUTPMSG = 218,AUE_GETPMSG = 219,AUE_AUDITSYS = 220,AUE_AUDITON_GETKMASK = 221,AUE_AUDITON_SETKMASK = 222,AUE_AUDITON_GETCWD = 223,AUE_AUDITON_GETCAR = 224,AUE_AUDITON_GETSTAT = 225,AUE_AUDITON_SETSTAT = 226,AUE_AUDITON_SETUMASK = 227,AUE_AUDITON_SETSMASK = 228,AUE_AUDITON_GETCOND = 229,AUE_AUDITON_SETCOND = 230,AUE_AUDITON_GETCLASS = 231,AUE_AUDITON_SETCLASS = 232,AUE_FUSERS = 233,AUE_STATVFS = 234,AUE_XSTAT = 235,AUE_LXSTAT = 236,AUE_LCHOWN = 237,AUE_MEMCNTL = 238,AUE_SYSINFO = 239,AUE_XMKNOD = 240,AUE_FORK1 = 241,AUE_MODCTL = 242,AUE_MODLOAD = 243,AUE_MODUNLOAD = 244,AUE_MODCONFIG = 245,AUE_MODADDMAJ = 246,AUE_SOCKACCEPT = 247,AUE_SOCKCONNECT = 248,AUE_SOCKSEND = 249,AUE_SOCKRECEIVE = 250,AUE_ACLSET = 251,AUE_FACLSET = 252,AUE_DOORFS = 253,AUE_DOORFS_DOOR_CALL = 254,AUE_DOORFS_DOOR_RETURN = 255,AUE_DOORFS_DOOR_CREATE = 256,AUE_DOORFS_DOOR_REVOKE = 257,AUE_DOORFS_DOOR_INFO = 258,AUE_DOORFS_DOOR_CRED = 259,AUE_DOORFS_DOOR_BIND = 260,AUE_DOORFS_DOOR_UNBIND = 261,AUE_P_ONLINE = 262,AUE_PROCESSOR_BIND = 263,AUE_INST_SYNC = 264,AUE_SOCKCONFIG = 265,AUE_SETAUDIT_ADDR = 266,AUE_GETAUDIT_ADDR = 267,AUE_UMOUNT2 = 268,};
enum MACRO_AUF {AUF_NOOP = 0x0,AUF_POINT = 0x1,AUF_DUP = 0x2,AUF_COPY_IN = 0x4,AUF_SKIP = 0x8,};
enum MACRO_AUP {AUP_BINARY = 0,AUP_OCTAL = 1,AUP_DECIMAL = 2,AUP_HEX = 3,AUP_STRING = 4,};
enum MACRO_AUR {AUR_BYTE = 0,AUR_CHAR = 0,AUR_SHORT = 1,AUR_INT = 2,AUR_INT32 = 2,AUR_INT64 = 3,};
enum MACRO_AUT {AUT_INVALID = 0x0,AUT_OTHER_FILE = 0x11,AUT_OTHER_FILE32 = 0x11,AUT_OHEADER = 0x12,AUT_TRAILER = 0x13,AUT_HEADER = 0x14,AUT_HEADER32 = 0x14,AUT_HEADER32_EX = 0x15,AUT_TRAILER_MAGIC = 0xFFFFB105,AUT_DATA = 0x21,AUT_IPC = 0x22,AUT_PATH = 0x23,AUT_SUBJECT = 0x24,AUT_SUBJECT32 = 0x24,AUT_SERVER = 0x25,AUT_SERVER32 = 0x25,AUT_PROCESS = 0x26,AUT_PROCESS32 = 0x26,AUT_RETURN = 0x27,AUT_RETURN32 = 0x27,AUT_TEXT = 0x28,AUT_OPAQUE = 0x29,AUT_IN_ADDR = 0x2A,AUT_IP = 0x2B,AUT_IPORT = 0x2C,AUT_ARG = 0x2D,AUT_ARG32 = 0x2D,AUT_SOCKET = 0x2E,AUT_SEQ = 0x2F,AUT_ACL = 0x30,AUT_ATTR = 0x31,AUT_IPC_PERM = 0x32,AUT_LABEL = 0x33,AUT_GROUPS = 0x34,AUT_ILABEL = 0x35,AUT_SLABEL = 0x36,AUT_CLEAR = 0x37,AUT_PRIV = 0x38,AUT_UPRIV = 0x39,AUT_LIAISON = 0x3A,AUT_NEWGROUPS = 0x3B,AUT_EXEC_ARGS = 0x3C,AUT_EXEC_ENV = 0x3D,AUT_ATTR32 = 0x3E,AUT_XATOM = 0x40,AUT_XOBJ = 0x41,AUT_XPROTO = 0x42,AUT_XSELECT = 0x43,AUT_XCOLORMAP = 0x44,AUT_XCURSOR = 0x45,AUT_XFONT = 0x46,AUT_XGC = 0x47,AUT_XPIXMAP = 0x48,AUT_XPROPERTY = 0x49,AUT_XWINDOW = 0x4A,AUT_XCLIENT = 0x4B,AUT_CMD = 0x51,AUT_EXIT = 0x52,AUT_HOST = 0x70,AUT_ARG64 = 0x71,AUT_RETURN64 = 0x72,AUT_ATTR64 = 0x73,AUT_HEADER64 = 0x74,AUT_SUBJECT64 = 0x75,AUT_SERVER64 = 0x76,AUT_PROCESS64 = 0x77,AUT_OTHER_FILE64 = 0x78,AUT_HEADER64_EX = 0x79,AUT_SUBJECT32_EX = 0x7A,AUT_PROCESS32_EX = 0x7B,AUT_SUBJECT64_EX = 0x7C,AUT_PROCESS64_EX = 0x7D,AUT_IN_ADDR_EX = 0x7E,AUT_SOCKET_EX = 0x7F,};
enum MACRO_AUX {AUX_MBO = 0xF0,AUX_MBO4M = 0xC0,AUX_TC4M = 0x2,AUX_TC = 0x4,AUX_DENSITY = 0x20,AUX_DISKCHG = 0x10,AUX_DRVSELECT = 0x8,AUX_EJECT = 0x2,AUX_MEDIUM_DENSITY = 0x0,AUX_HIGH_DENSITY = 0x2,};
enum MACRO_AYT {AYT = 246,};
enum MACRO_BAD {BAD_SYS = -13,};
enum MACRO_BIT {WORD_BIT = 32,LONG_BIT = 32,};
enum MACRO_BLK {BLK_EOR = 0x80,BLK_EOF = 0x40,BLK_ERRORS = 0x20,BLK_RESTART = 0x10,BLK_BYTECOUNT = 0x2,};
enum MACRO_BPP {BPP_SLCTIN_PIN = 0x1,BPP_AFX_PIN = 0x2,BPP_INIT_PIN = 0x4,BPP_V1_PIN = 0x8,BPP_V2_PIN = 0x10,BPP_V3_PIN = 0x20,BPP_ALL_OUT_PINS = 0x3F,BPP_ERR_PIN = 0x1,BPP_SLCT_PIN = 0x2,BPP_PE_PIN = 0x4,BPP_ALL_IN_PINS = 0x7,BPP_ERR_ERR = 0x1,BPP_SLCT_ERR = 0x2,BPP_PE_ERR = 0x4,BPP_SLCTIN_ERR = 0x10,BPP_BUSY_ERR = 0x40,BPP_INT_PEND = 0x1,BPP_ERR_PEND = 0x2,BPP_DRAINING = 0xC,BPP_INT_EN = 0x10,BPP_FLUSH = 0x20,BPP_SLAVE_ERR = 0x40,BPP_RESET_BPP = 0x80,BPP_READ = 0x100,BPP_ENABLE_DMA = 0x200,BPP_ENABLE_BCNT = 0x2000,BPP_TERMINAL_CNT = 0x4000,BPP_BURST_SIZES_MASK = 0xC0000,BPP_TC_INTR_DISABLE = 0x800000,BPP_EN_CHAIN_DMA = 0x1000000,BPP_DMA_ON = 0x2000000,BPP_ADDR_VALID = 0x4000000,BPP_NEXT_VALID = 0x8000000,BPP_DEVICE_ID_MASK = 0xF0000000,BPP_BURST_4WORD = 0x0,BPP_BURST_16BYTE = 0x0,BPP_BURST_DEFAULT = 0x0,BPP_BURST_8WORD = 0x40000,BPP_BURST_32BYTE = 0x40000,BPP_BURST_1WORD = 0x80000,BPP_BURST_4BYTE = 0x80000,BPP_BURST_NOBURST = 0x80000,BPP_HIOD_DEVID = 0x40000000,BPP_DMA2P_DEVID = 0xA0000000,BPP_MAX_DMA = 0x1000000,BPP_DSS_MASK = 0x7F,BPP_DSS_SIZE = 0x7F,BPP_DSW_MASK = 0x7F00,BPP_DSW_SIZE = 0x7F,BPP_CNTR_TEST = 0x8000,BPP_SEVEN_BITS = 0x7F,BPP_EN_VERSATEC = 0x1,BPP_VERSATEC_INTERLOCK = 0x2,BPP_IDLE = 0x8,BPP_SRST = 0x80,BPP_ACK_OP = 0x100,BPP_BUSY_OP = 0x200,BPP_EN_DIAG = 0x400,BPP_ACK_BIDIR = 0x800,BPP_BUSY_BIDIR = 0x1000,BPP_DS_BIDIR = 0x2000,BPP_DMA_DATA = 0x4000,BPP_EN_MEM_CLR = 0x8000,BPP_DS_PIN = 0x1,BPP_ACK_PIN = 0x2,BPP_BUSY_PIN = 0x4,BPP_DIRECTION = 0x8,BPP_ERR_IRQ_EN = 0x1,BPP_ERR_IRP = 0x2,BPP_SLCT_IRQ_EN = 0x4,BPP_SLCT_IRP = 0x8,BPP_PE_IRQ_EN = 0x10,BPP_PE_IRP = 0x20,BPP_BUSY_IRQ_EN = 0x40,BPP_BUSY_IRP = 0x80,BPP_ACK_IRQ_EN = 0x100,BPP_DS_IRQ_EN = 0x200,BPP_ERR_IRQ = 0x400,BPP_SLCT_IRQ = 0x800,BPP_PE_IRQ = 0x1000,BPP_BUSY_IRQ = 0x2000,BPP_ACK_IRQ = 0x4000,BPP_DS_IRQ = 0x8000,BPP_ALL_IRQS = 0xFC00,};
enum MACRO_BRK {BRK = 0x0,HIQ = 0x1,};
enum MACRO_BS0 {BS0 = 0,VTDLY = 16384,};
enum MACRO_BSM {BSM_GETAUID = 19,BSM_SETAUID = 20,BSM_GETAUDIT = 21,BSM_SETAUDIT = 22,BSM_GETUSERAUDIT = 23,BSM_SETUSERAUDIT = 24,BSM_AUDIT = 25,BSM_AUDITUSER = 26,BSM_AUDITSVC = 27,BSM_AUDITON = 28,BSM_AUDITCTL = 29,BSM_GETKERNSTATE = 30,BSM_SETKERNSTATE = 31,BSM_GETPORTAUDIT = 32,BSM_REVOKE = 33,BSM_AUDITSTAT = 34,BSM_GETAUDIT_ADDR = 35,BSM_SETAUDIT_ADDR = 36,};
enum MACRO_BUS {BUS_ADRALN = 1,BUS_ADRERR = 2,BUS_OBJERR = 3,};
enum MACRO_BUT {BUT_FIRST = 32544,BUT_LAST = 32553,};
enum MACRO_BW2 {BW2_FBSIZE = 131072,BW2_FBSIZE_HIRES = 262144,BW2_USECOPYMEM = 1,};
enum MACRO_CBW {CBW_SIGNATURE = 0x43425355,CBW_DIR_IN = 0x80,CBW_DIR_OUT = 0x0,CBW_CDB_LEN = 0x10,};
enum MACRO_CDB {CDB_GROUPID_0 = 0,CDB_GROUPID_1 = 1,CDB_GROUPID_2 = 2,CDB_GROUPID_3 = 3,CDB_GROUPID_4 = 4,CDB_GROUPID_5 = 5,CDB_GROUPID_6 = 6,CDB_GROUPID_7 = 7,CDB_GROUP0 = 6,CDB_GROUP1 = 10,CDB_GROUP2 = 10,CDB_GROUP3 = 0,CDB_GROUP4 = 16,CDB_GROUP5 = 12,CDB_GROUP6 = 0,CDB_GROUP7 = 0,};
enum MACRO_CDE {CDE_VALID = 0x1,CDE_COMPLETE = 0x2,};
enum MACRO_CDN {CDN = 0x42,};
enum MACRO_CFS {CFS_FRONTFILE_NAME_SIZE = 18,CFS_MAXFREECNODES = 20,CFS_CID_LOCAL = 1,CFS_FS_FGP_BUCKET_SIZE = 64,CFS_FS_MAXIDLE = 100,CFS_FS_MOUNTED = 1,CFS_FS_READ = 2,CFS_FS_WRITE = 4,CFS_FS_ROOTFS = 8,CFS_FS_DIRTYINFO = 16,CFS_FS_HASHPRINT = 32,CFS_FS_CONST_STRICT = 11,CFS_FS_CONST_NOCONST = 12,CFS_FS_CONST_CODCONST = 13,CFS_FG_NOCACHE = 1,CFS_FG_ALLOC_ATTR = 2,CFS_FG_UPDATED = 4,CFS_FG_ALLOC_FILE = 16,CFS_FG_RL = 32,CFS_FG_READ = 64,CFS_FG_WRITE = 128,};
enum MACRO_CFT {CFT_UFS = 1,CFT_SPEC = 2,};
enum MACRO_CG6 {CG6_P4BASE = 0xFB000000,CG6_ADDR_ROM_SBUS = 0x0,CG6_ADDR_ROM_P4 = 0x380000,CG6_ADDR_CMAP = 0x200000,CG6_ADDR_DHC = 0x240000,CG6_ADDR_ALT = 0x280000,CG6_ADDR_FBC = 0x700000,CG6_ADDR_TEC = 0x701000,CG6_ADDR_P4REG = 0x300000,CG6_ADDR_OVERLAY = 0x400000,CG6_ADDR_FHC = 0x300000,CG6_ADDR_THC = 0x301000,CG6_ADDR_ENABLE = 0x600000,CG6_ADDR_COLOR = 0x800000,CG6_ADDR_FBCTEC = 0x700000,CG6_ADDR_FHCTHC = 0x300000,CG6_CMAP_SZ = 0x2000,CG6_FBCTEC_SZ = 0x2000,CG6_FHCTHC_SZ = 0x2000,CG6_ROM_SZ = 0x10000,CG6_FB_SZ = 0x100000,CG6_DHC_SZ = 0x2000,CG6_ALT_SZ = 0x2000,CG6_TEC_POFF = 0x1000,CG6_THC_POFF = 0x1000,CG6_VBASE = 0x70000000,CG6_VADDR_FBC = 0x70000000,CG6_VADDR_TEC = 0x70001000,CG6_VADDR_CMAP = 0x70002000,CG6_VADDR_FHC = 0x70004000,CG6_VADDR_THC = 0x70005000,CG6_VADDR_ROM = 0x70006000,CG6_VADDR_COLOR = 0x70016000,CG6_VADDR_DHC = 0x78000000,CG6_VADDR_ALT = 0x78002000,CG6_VADDR_UART = 0x78004000,CG6_VADDR_VRT = 0x78006000,CG6_VADDR_FBCTEC = 0x70000000,CG6_VADDR_FHCTHC = 0x70004000,CG6_CMAP_ENTRIES = 0x100,};
enum MACRO_CIO {CIO_PUTPAGES = 0x1,};
enum MACRO_CIS {CIS_MAX_TUPLE_DATA_LEN = 254,CIS_MAX_TUPLE_NAME_LEN = 40,CIS_MAX_FUNCTIONS = 8,};
enum MACRO_CLD {CLD_EXITED = 1,CLD_KILLED = 2,CLD_DUMPED = 3,CLD_TRAPPED = 4,CLD_STOPPED = 5,CLD_CONTINUED = 6,};
enum MACRO_CLE {CLE = 0x44,};
enum MACRO_CLN {CLN = 0x8,CLND = 0x10,};
enum MACRO_CMD {CMD_CMPLT = 0,CMD_INCOMPLETE = 1,CMD_DMA_DERR = 2,CMD_TRAN_ERR = 3,CMD_RESET = 4,CMD_ABORTED = 5,CMD_TERMINATED = 22,CMD_TIMEOUT = 6,CMD_DATA_OVR = 7,CMD_CMD_OVR = 8,CMD_STS_OVR = 9,CMD_BADMSG = 10,CMD_NOMSGOUT = 11,CMD_XID_FAIL = 12,CMD_IDE_FAIL = 13,CMD_ABORT_FAIL = 14,CMD_REJECT_FAIL = 15,CMD_NOP_FAIL = 16,CMD_PER_FAIL = 17,CMD_BDR_FAIL = 18,CMD_ID_FAIL = 19,CMD_UNX_BUS_FREE = 20,CMD_TAG_REJECT = 21,};
enum MACRO_CMN {CMN_ASC = 0x70701,CMN_BIN = 0x71C7,CMN_BBS = 0xC771,CMN_CRC = 0x70702,};
enum MACRO_CMS {CMS_LEN = 6,};
enum MACRO_CPC {CPC_OVERFLOW = 0x10,};
enum MACRO_CPR {CPR_KTHREAD_TIMEOUT_SEC = 15,};
enum MACRO_CPU {CPU_IDLE = 0,CPU_USER = 1,CPU_KERNEL = 2,CPU_WAIT = 3,CPU_STATES = 4,};
enum MACRO_CR0 {CR0 = 0,TABDLY = 6144,};
enum MACRO_CRI {CRI = 0x43,};
enum MACRO_CS5 {CS5 = 0,CS6 = 16,CS7 = 32,};
enum MACRO_CS8 {CS8 = 0x30,CSTOPB = 0x40,CREAD = 0x80,PARENB = 0x100,PARODD = 0x200,CLOCAL = 0x800,RCV1EN = 0x1000,XMT1EN = 0x2000,LOBLK = 0x4000,XCLUDE = 0x8000,CRTSXOFF = 0x40000000,CRTSCTS = 0x80000000,};
enum MACRO_CSI {CSI_IOC = 49920,};
enum MACRO_CSW {CSW_SIGNATURE = 0x53425355,CSW_STATUS_GOOD = 0x0,CSW_STATUS_FAILED = 0x1,CSW_STATUS_PHASE_ERROR = 0x2,CSW_LEN = 0xD,};
enum MACRO_CUP {CUP = 0x41,};
enum MACRO_CYF {CYF_FREE = 0x1,CYF_CPU_BOUND = 0x2,CYF_PART_BOUND = 0x4,};
enum MACRO_DAC {DAC_PIXEL_TEST_REG = 0x0,DAC_TEST_REG = 0x1,DAC_SYNC_TEST_REG = 0x2,DAC_ID_REG = 0x3,DAC_PIXEL_MASK_REG = 0x4,DAC_COMMAND_REG_2 = 0x6,DAC_COMMAND_REG_3 = 0x7,};
enum MACRO_DAD {DAD_MTYP_DFLT = 0x0,DAD_MTYP_FLXSS = 0x1,DAD_MTYP_FLXDS = 0x2,DAD_MTYP_FLX_8SSSD = 0x5,DAD_MTYP_FLX_8DSSD = 0x6,DAD_MTYP_FLX_8SSDD = 0x9,DAD_MTYP_FLX_8DSDD = 0xA,DAD_MTYP_FLX_5SSLD = 0xD,DAD_MTYP_FLX_5DSMD1 = 0x12,DAD_MTYP_FLX_5DSMD2 = 0x16,DAD_MTYP_FLX_5DSQD = 0x1A,DAD_MTYP_FLX_3DSLD = 0x1E,DAD_MODE_ERR_RECOV = 0x1,DAD_MODE_FORMAT = 0x3,DAD_MODE_GEOMETRY = 0x4,DAD_MODE_FLEXDISK = 0x5,DAD_MODE_VRFY_ERR_RECOV = 0x7,DAD_MODE_CACHE = 0x8,DAD_MODE_MEDIA_TYPES = 0xB,DAD_MODE_NOTCHPART = 0xC,DAD_MODE_POWER_COND = 0xD,};
enum MACRO_DAT {DAT_SMALL_WRITE_ERROR_THRESHOLD = 40,DAT_LARGE_WRITE_ERROR_THRESHOLD = 200,DAT_SMALL_READ_ERROR_THRESHOLD = 5,DAT_LARGE_READ_ERROR_THRESHOLD = 3,};
enum MACRO_DAY {DAY_1 = 1,DAY_2 = 2,DAY_3 = 3,DAY_4 = 4,DAY_5 = 5,DAY_6 = 6,DAY_7 = 7,};
enum MACRO_DBL {DBL_MANT_DIG = 53,DBL_DIG = 15,DBL_MIN_EXP = -1021,DBL_MIN_10_EXP = -307,DBL_MAX_EXP = 1024,DBL_MAX_10_EXP = 308,};
enum MACRO_DBM {DBM_INSERT = 0,DBM_REPLACE = 1,};
enum MACRO_DDI {DDI_PROP_SUCCESS = 0,DDI_PROP_NOT_FOUND = 1,DDI_PROP_UNDEFINED = 2,DDI_PROP_NO_MEMORY = 3,DDI_PROP_INVAL_ARG = 4,DDI_PROP_BUF_TOO_SMALL = 5,DDI_PROP_CANNOT_DECODE = 6,DDI_PROP_CANNOT_ENCODE = 7,DDI_PROP_END_OF_DATA = 8,DDI_PROP_FOUND_1275 = 255,};
enum MACRO_DEF {DEF_USER_OBJ = 4097,DEF_USER = 4098,DEF_GROUP_OBJ = 4100,DEF_GROUP = 4104,DEF_CLASS_OBJ = 4112,DEF_OTHER_OBJ = 4128,};
enum MACRO_DES {DES_MAXLEN = 65536,DES_QUICKLEN = 16,};
enum MACRO_DET {NO_SCHR_DET = 0x0,SCHR_DET = 0x10,};
enum MACRO_DEV {DEV_BSIZE = 512,DEV_BSHIFT = 9,};
enum MACRO_DIO {DIO = 0x40,};
enum MACRO_DKC {DKC_UNKNOWN = 0,DKC_CDROM = 1,DKC_WDC2880 = 2,DKC_XXX_0 = 3,DKC_XXX_1 = 4,DKC_DSD5215 = 5,DKC_ACB4000 = 7,DKC_MD21 = 8,DKC_XXX_2 = 9,DKC_NCRFLOPPY = 10,DKC_SMSFLOPPY = 12,DKC_SCSI_CCS = 13,DKC_INTEL82072 = 14,DKC_MD = 16,DKC_INTEL82077 = 19,DKC_DIRECT = 20,DKC_PCMCIA_MEM = 21,DKC_PCMCIA_ATA = 22,DKC_CUSTOMER_BASE = 1024,};
enum MACRO_DKF {DKF_DRV_RESERVED = 0x1,DKF_DRV_DUAL_ENABLED = 0x2,DKF_DRV_RESET = 0x4,DKF_DRV_WRTPROT = 0x8,DKF_DRV_BUSY = 0x10,DKF_DRV_TIMEOUT = 0x20,DKF_DRV_DUALPORTED = 0x40,DKF_DRV_ALTRSVD = 0x80,DKF_ADAPT_RESERVED = 0x100,DKF_ADAPT_RESET = 0x400,DKF_ADAPT_BUSY = 0x1000,DKF_ADAPT_TIMEOUT = 0x2000,DKF_CTLR_RESERVED = 0x10000,DKF_CTLR_RESET = 0x40000,DKF_CTLR_BUSY = 0x100000,DKF_CTLR_TIMEOUT = 0x2000000,DKF_DRV_RSV_LOST = 0x1,DKF_CTLR_RSV_LOST = 0x2,DKF_DRV_DIAGNOSED = 0x4,DKF_CTLR_DIAGNOSED = 0x8,DKF_ADAPT_DIAGNOSED = 0x10,DKF_DRV_FAILED = 0x1000,DKF_CTLR_FAILED = 0x100000,DKF_ADAPT_FAILED = 0x10000000,DKF_DRV_NOEXIST = 0x1,DKF_CTLR_NOEXIST = 0x2,DKF_ADAPT_NOEXIST = 0x4,DKF_ORDERED = 0x1,DKF_PANIC_ABORT = 0x2,DKF_RERUN_UNR_CMDS = 0x4,DKF_RERUN_RSV_CMDS = 0x8,DKF_AUTOFAIL = 0x10,DKF_RESERVE = 0x1,DKF_RELEASE = 0x2,DKF_RESET = 0x4,DKF_ABORT = 0x8,DKF_PROBE = 0x10,DKF_REINIT = 0x20,DKF_DIAGNOSE = 0x1,DKF_ISOLATE = 0x2,DKF_READ = 0x4,DKF_WRITE = 0x8,DKF_DESTRUCTIVE = 0x10,};
enum MACRO_DKI {DKI_BAD144 = 0x1,DKI_MAPTRK = 0x2,DKI_FMTTRK = 0x4,DKI_FMTVOL = 0x8,DKI_FMTCYL = 0x10,DKI_HEXUNIT = 0x20,DKI_PCMCIA_PFD = 0x40,};
enum MACRO_DKL {DKL_MAGIC = 0xDABE,FKL_MAGIC = 0xFF,};
enum MACRO_DLD {DLD_MAN_DEF_LIST = 0x10,DLD_GROWN_DEF_LIST = 0x8,DLD_BLOCK_FORMAT = 0x0,DLD_BFI_FORMAT = 0x4,DLD_PS_FORMAT = 0x5,};
enum MACRO_DMA {DMA_ATTR_V0 = 0,DMA_ATTR_VERSION = 0,};
enum MACRO_DMP {DMP_SHADOW = 0x20,DMP_LKIOPB = 0x40,DMP_LKSYSV = 0x80,DMP_IOCACHE = 0x100,DMP_USEHAT = 0x200,DMP_PHYSADDR = 0x400,DMP_INVALID = 0x800,DMP_NOLIMIT = 0x1000,DMP_VMEREQ = 0x10000000,DMP_BYPASSNEXUS = 0x20000000,DMP_NODEVSYNC = 0x40000000,DMP_NOCPUSYNC = 0x80000000,DMP_NOSYNC = 0xC0000000,};
enum MACRO_DOM {DOM_NM_LN = 64,};
enum MACRO_DOS {DOS_SYSFAT12 = 1,DOS_SYSFAT16 = 4,DOS_SYSHUGE = 6,DOS_FAT32 = 11,DOS_FAT32_LBA = 12,DOS_FAT16P_LBA = 14,DOS_FAT16_LBA = 15,DOS_F12MAXS = 20740,DOS_F12MAXC = 4086,DOS_ID1 = 233,DOS_ID2a = 235,DOS_ID2b = 144,DOS_SIGN = 43605,};
enum MACRO_DPQ {DPQ_POSSIBLE = 0x0,DPQ_SUPPORTED = 0x20,DPQ_NEVER = 0x60,DPQ_VUNIQ = 0x80,};
enum MACRO_DRT {DRT_NUMWINDOWS = 6,};
enum MACRO_DRV {DRV_MASK = 0x3,};
enum MACRO_DS9 {DS9_15SPT = 0xF9,};
enum MACRO_DSK {DSK_ERLOC = 16,DSK_IDLOC = 23,DSK_PHYS = 65536,DSK_WORD = 131072,DSK_COPY = 196608,DSK_INIT = 262144,DSK_PATTERN = 327680,DSK_MAP = 6,DSK_ERTYP = 65536,};
enum MACRO_DST {DST_NONE = 0,DST_USA = 1,DST_AUST = 2,DST_WET = 3,DST_MET = 4,DST_EET = 5,DST_CAN = 6,DST_GB = 7,DST_RUM = 8,DST_TUR = 9,DST_AUSTALT = 10,};
enum MACRO_DTF {DTF_1_PARINIT = 0x1,DTF_1_CONFEXP = 0x2,};
enum MACRO_DTR {DTR_ASSERT = 0x1,};
enum MACRO_DUP {DUP_NEW = 0x0,DUP_INPROGRESS = 0x1,DUP_DONE = 0x2,DUP_DROP = 0x3,DUP_ERROR = 0x4,};
enum MACRO_DVC {DVC_LEN = 80,};
enum MACRO_D_T {D_T_FMT = 44,D_FMT = 45,};
enum MACRO_EAI {EAI_ADDRFAMILY = 1,EAI_AGAIN = 2,EAI_BADFLAGS = 3,EAI_FAIL = 4,EAI_FAMILY = 5,EAI_MEMORY = 6,EAI_NODATA = 7,EAI_NONAME = 8,EAI_SERVICE = 9,EAI_SOCKTYPE = 10,EAI_SYSTEM = 11,};
enum MACRO_ECR {ECR_mode_000 = 0x0,ECR_mode_001 = 0x20,ECR_mode_010 = 0x40,ECR_mode_011 = 0x60,ECR_mode_110 = 0xC0,ECR_mode_111 = 0xE0,};
enum MACRO_EDC {EDC_LENGTH_MASK = 0x7,EDC_TYPE_MASK = 0xF,EDC_TYPE_SHIFT = 0x3,};
enum MACRO_ELF {ELF_F_DIRTY = 0x1,ELF_F_LAYOUT = 0x4,};
enum MACRO_EMT {EMT_TAGOVF = 1,EMT_CPCOVF = 2,};
enum MACRO_ENA {RX_ENA = 0x80,TX_ENA = 0x8,};
enum MACRO_END {END_OF_SUA_PARSING = -2,END_OF_SUA = -3,};
enum MACRO_ENF {ENF_NBPA = 10,ENF_NBPO = 6,ENF_NOP = 0,ENF_EQ = 1024,ENF_LT = 2048,ENF_LE = 3072,ENF_GT = 4096,ENF_GE = 5120,ENF_AND = 6144,ENF_OR = 7168,ENF_XOR = 8192,ENF_COR = 9216,ENF_CAND = 10240,ENF_CNOR = 11264,ENF_CNAND = 12288,ENF_NEQ = 13312,ENF_NOPUSH = 0,ENF_PUSHLIT = 1,ENF_PUSHZERO = 2,ENF_PUSHONE = 3,ENF_PUSHFFFF = 4,ENF_PUSHFF00 = 5,ENF_PUSH00FF = 6,ENF_PUSHWORD = 16,};
enum MACRO_ENV {ENV_ESC = 2,ENV_USERVAR = 3,};
enum MACRO_EOF {EOF = -1,};
enum MACRO_EOK {EOK = 0,};
enum MACRO_EOR {EOR = 239,};
enum MACRO_EPL {EPL = 0x20,};
enum MACRO_ERA {ERA = 51,};
enum MACRO_ERR {ERR = -1,};
enum MACRO_ESC {ESC = 0x1B,};
enum MACRO_ESP {ESP_FIFO_ONZ = 0x20,ESP_STAT_RES = 0x80,ESP_STAT_IPEND = 0x80,ESP_STAT_GERR = 0x40,ESP_STAT_PERR = 0x20,ESP_STAT_XZERO = 0x10,ESP_STAT_XCMP = 0x8,ESP_STAT_MSG = 0x4,ESP_STAT_CD = 0x2,ESP_STAT_IO = 0x1,ESP_PHASE_MASK = 0x7,ESP_PHASE_DATA_OUT = 0x0,ESP_PHASE_DATA_IN = 0x1,ESP_PHASE_COMMAND = 0x2,ESP_PHASE_STATUS = 0x3,ESP_PHASE_MSG_OUT = 0x6,ESP_PHASE_MSG_IN = 0x7,ESP_INT_RESET = 0x80,ESP_INT_ILLEGAL = 0x40,ESP_INT_DISCON = 0x20,ESP_INT_BUS = 0x10,ESP_INT_FCMP = 0x8,ESP_INT_RESEL = 0x4,ESP_INT_SELATN = 0x2,ESP_INT_SEL = 0x1,ESP_STEP_MASK = 0x7,ESP_STEP_ARBSEL = 0x0,ESP_STEP_SENTID = 0x1,ESP_STEP_NOTCMD = 0x2,ESP_STEP_PCMD = 0x3,ESP_STEP_DONE = 0x4,ESP_STEP_DONE5 = 0x5,ESP_STEP_DONE6 = 0x6,ESP_STEP_DONE7 = 0x7,ESP_CONF_SLOWMODE = 0x80,ESP_CONF_DISRINT = 0x40,ESP_CONF_PARTEST = 0x20,ESP_CONF_PAREN = 0x10,ESP_CONF_CHIPTEST = 0x8,ESP_CONF_BUSID = 0x7,};
enum MACRO_EUC {EUC_IOC = 50432,EUC_WSET = 50433,EUC_WGET = 50434,EUC_MSAVE = 50435,EUC_MREST = 50436,EUC_IXLOFF = 50437,EUC_IXLON = 50438,EUC_OXLOFF = 50439,EUC_OXLON = 50440,EUC_BCAST = 50448,EUC_B_CANON = 127,EUC_B_RAW = 1,};
enum MACRO_EUP {EUP_ALLOC = 0x0,EUP_NOALLOC = 0x1,EUP_ALLOC_MASK = 0x1,};
enum MACRO_EVC {EVC_BUCKETS = 128,};
enum MACRO_EXC {EXC_CATALOG_MASK = 0xF000000,EXC_NONE = 0x0,EXC_LOCAL = 0x1000000,EXC_DEFAULT = 0x0,};
enum MACRO_EXD {EXD_DATA_MASK = 0xFFFFFF,EXD_NONE = 0x0,EXD_VERSION = 0x1,EXD_FILETYPE = 0x2,EXD_CREATOR = 0x3,EXD_HOSTNAME = 0x4,EXD_GROUP_HEADER = 0xFF,EXD_GROUP_PROC = 0x100,EXD_GROUP_TASK = 0x101,EXD_GROUP_LWP = 0x102,EXD_GROUP_PROC_TAG = 0x103,EXD_GROUP_TASK_TAG = 0x104,EXD_GROUP_LWP_TAG = 0x105,EXD_GROUP_PROC_PARTIAL = 0x106,EXD_GROUP_TASK_PARTIAL = 0x107,EXD_GROUP_TASK_INTERVAL = 0x108,EXD_PROC_PID = 0x1000,EXD_PROC_UID = 0x1001,EXD_PROC_GID = 0x1002,EXD_PROC_TASKID = 0x1003,EXD_PROC_PROJID = 0x1004,EXD_PROC_HOSTNAME = 0x1005,EXD_PROC_COMMAND = 0x1006,EXD_PROC_START_SEC = 0x1007,EXD_PROC_START_NSEC = 0x1008,EXD_PROC_FINISH_SEC = 0x1009,EXD_PROC_FINISH_NSEC = 0x100A,EXD_PROC_CPU_USER_SEC = 0x100B,EXD_PROC_CPU_USER_NSEC = 0x100C,EXD_PROC_CPU_SYS_SEC = 0x100D,EXD_PROC_CPU_SYS_NSEC = 0x100E,EXD_PROC_TTY_MAJOR = 0x100F,EXD_PROC_TTY_MINOR = 0x1010,EXD_PROC_FAULTS_MAJOR = 0x1011,EXD_PROC_FAULTS_MINOR = 0x1012,EXD_PROC_MESSAGES_RCV = 0x1013,EXD_PROC_MESSAGES_SND = 0x1014,EXD_PROC_BLOCKS_IN = 0x1015,EXD_PROC_BLOCKS_OUT = 0x1016,EXD_PROC_CHARS_RDWR = 0x1017,EXD_PROC_CONTEXT_VOL = 0x1018,EXD_PROC_CONTEXT_INV = 0x1019,EXD_PROC_SIGNALS = 0x101A,EXD_PROC_SWAPS = 0x101B,EXD_PROC_SYSCALLS = 0x101C,EXD_PROC_ACCT_FLAGS = 0x101D,EXD_PROC_TAG = 0x101E,EXD_TASK_TASKID = 0x2000,EXD_TASK_PROJID = 0x2001,EXD_TASK_HOSTNAME = 0x2002,EXD_TASK_START_SEC = 0x2003,EXD_TASK_START_NSEC = 0x2004,EXD_TASK_FINISH_SEC = 0x2005,EXD_TASK_FINISH_NSEC = 0x2006,EXD_TASK_CPU_USER_SEC = 0x2007,EXD_TASK_CPU_USER_NSEC = 0x2008,EXD_TASK_CPU_SYS_SEC = 0x2009,EXD_TASK_CPU_SYS_NSEC = 0x200A,EXD_TASK_FAULTS_MAJOR = 0x200B,EXD_TASK_FAULTS_MINOR = 0x200C,EXD_TASK_MESSAGES_RCV = 0x200D,EXD_TASK_MESSAGES_SND = 0x200E,EXD_TASK_BLOCKS_IN = 0x200F,EXD_TASK_BLOCKS_OUT = 0x2010,EXD_TASK_CHARS_RDWR = 0x2011,EXD_TASK_CONTEXT_VOL = 0x2012,EXD_TASK_CONTEXT_INV = 0x2013,EXD_TASK_SIGNALS = 0x2014,EXD_TASK_SWAPS = 0x2015,EXD_TASK_SYSCALLS = 0x2016,EXD_TASK_TAG = 0x2017,};
enum MACRO_EXP {FLOW_EXP = 0x0,NO_FLOW_EXP = 0x20,};
enum MACRO_EXR {EXR_OK = 0,EXR_SYSCALL_FAIL = 1,EXR_CORRUPT_FILE = 2,EXR_EOF = 3,EXR_NO_CREATOR = 4,EXR_INVALID_BUF = 5,EXR_NOTSUPP = 6,EXR_UNKN_VERSION = 7,};
enum MACRO_EXT {EXT_TYPE_MASK = 0xF0000000,EXT_NONE = 0x0,EXT_UINT8 = 0x10000000,EXT_UINT16 = 0x20000000,EXT_UINT32 = 0x30000000,EXT_UINT64 = 0x40000000,EXT_DOUBLE = 0x50000000,EXT_STRING = 0x60000000,EXT_EXACCT_OBJECT = 0x70000000,EXT_RAW = 0x80000000,EXT_GROUP = 0xF0000000,};
enum MACRO_FAD {FAD_READ = 0x1,FAD_WRITE = 0x2,};
enum MACRO_FAS {FAS_FIFO_ONZ = 0x20,};
enum MACRO_FCP {FCP_SCSI_DATA = 0x1,FCP_SCSI_CMD = 0x2,FCP_SCSI_RSP = 0x3,FCP_SCSI_XFER_RDY = 0x5,FCP_QTYPE_SIMPLE = 0x0,FCP_QTYPE_HEAD_OF_Q = 0x1,FCP_QTYPE_ORDERED = 0x2,FCP_QTYPE_ACA_Q_TAG = 0x4,FCP_QTYPE_UNTAGGED = 0x5,FCP_CDB_SIZE = 0x10,FCP_LUN_SIZE = 0x8,FCP_MAX_RSP_IU_SIZE = 0x100,FCP_NO_FAILURE = 0x0,FCP_DL_LEN_MISMATCH = 0x1,FCP_CMND_INVALID = 0x2,FCP_DATA_RO_MISMATCH = 0x3,FCP_TASK_MGMT_NOT_SUPPTD = 0x4,FCP_TASK_MGMT_FAILED = 0x5,};
enum MACRO_FCR {FCR = 0x3,PCR = 0x4,};
enum MACRO_FDB {FDB_READ = 0x1,FDB_WRITE = 0x2,FDB_DONE = 0x4,FDB_ERROR = 0x8,FDB_ASYNC = 0x10,FDB_SYNC = 0x20,FDB_ICALLBACK = 0x40,FDB_ZEROHOLE = 0x80,};
enum MACRO_FDD {FDD_READY = 0x1,FDD_MOTON = 0x2,FDD_POLLABLE = 0x4,};
enum MACRO_FER {FER = 0x0,FAR = 0x1,PTR = 0x2,};
enum MACRO_FF0 {FF0 = 0,PAGEOUT = 65536,WRAP = 131072,};
enum MACRO_FID {FID_EXIST = 0x1,FID_DIR = 0x2,FID_DELETED = 0x4,FID_PARENT = 0x8,};
enum MACRO_FLK {FLK_INITIAL_STATE = 1,FLK_START_STATE = 2,FLK_ACTIVE_STATE = 3,FLK_SLEEPING_STATE = 4,FLK_GRANTED_STATE = 5,FLK_INTERRUPTED_STATE = 6,FLK_CANCELLED_STATE = 7,FLK_DEAD_STATE = 8,};
enum MACRO_FLP {FLP_DELAYED_FREE = -1,};
enum MACRO_FLT {FLT_RADIX = 2,FLT_MANT_DIG = 24,FLT_DIG = 6,FLT_MIN_EXP = -125,FLT_MIN_10_EXP = -37,FLT_MAX_EXP = 128,FLT_MAX_10_EXP = 38,};
enum MACRO_FNM {FNM_PATHNAME = 0x1,FNM_NOESCAPE = 0x2,FNM_PERIOD = 0x4,FNM_IGNORECASE = 0x8,FNM_NOMATCH = 0x1,FNM_ERROR = 0x2,FNM_NOSYS = 0x3,};
enum MACRO_FPB {FPB_BFI = 0x4,FPB_CMPLT = 0x8,FPB_DATA = 0x10,};
enum MACRO_FPE {FPE_INTDIV = 1,FPE_INTOVF = 2,FPE_FLTDIV = 3,FPE_FLTOVF = 4,FPE_FLTUND = 5,FPE_FLTRES = 6,FPE_FLTINV = 7,FPE_FLTSUB = 8,};
enum MACRO_FSD {FSD_FREE = 0,FSD_ACL = 1,FSD_DFACL = 2,FSD_RESERVED3 = 3,FSD_RESERVED4 = 4,FSD_RESERVED5 = 5,FSD_RESERVED6 = 6,FSD_RESERVED7 = 7,};
enum MACRO_FSR {FSR_CEXC = 0x1F,FSR_AEXC = 0x3E0,FSR_FCC = 0xC00,FSR_PR = 0x1000,FSR_QNE = 0x2000,FSR_FTT = 0x1C000,FSR_VER = 0xE0000,FSR_TEM = 0xF800000,FSR_RP = 0x30000000,FSR_RD = 0xC0000000,FSR_VER_SHIFT = 0x11,FSR_FCC1 = 0x3,FSR_FCC2 = 0xC,FSR_FCC3 = 0x30,FSR_CEXC_NX = 0x1,FSR_CEXC_DZ = 0x2,FSR_CEXC_UF = 0x4,FSR_CEXC_OF = 0x8,FSR_CEXC_NV = 0x10,FSR_AEXC_NX = 0x20,FSR_AEXC_DZ = 0x40,FSR_AEXC_UF = 0x80,FSR_AEXC_OF = 0x100,FSR_AEXC_NV = 0x200,};
enum MACRO_FTT {FTT_NONE = 0,FTT_IEEE = 1,FTT_UNFIN = 2,FTT_UNIMP = 3,FTT_SEQ = 4,FTT_ALIGN = 5,FTT_DFAULT = 6,};
enum MACRO_FTW {FTW_F = 0,FTW_D = 1,FTW_DNR = 2,FTW_NS = 3,FTW_SL = 4,FTW_DP = 6,FTW_SLN = 7,FTW_PHYS = 1,FTW_MOUNT = 2,FTW_CHDIR = 4,FTW_DEPTH = 8,FTW_SKD = 1,FTW_FOLLOW = 2,FTW_PRUNE = 4,};
enum MACRO_GET {GET_NEXT = 0,GET_NO_MORE = 1,GET_ONE = 0,GET_ALL = 1,};
enum MACRO_GSS {GSS_C_DELEG_FLAG = 1,GSS_C_MUTUAL_FLAG = 2,GSS_C_REPLAY_FLAG = 4,GSS_C_SEQUENCE_FLAG = 8,GSS_C_CONF_FLAG = 16,GSS_C_INTEG_FLAG = 32,GSS_C_ANON_FLAG = 64,GSS_C_PROT_READY_FLAG = 128,GSS_C_TRANS_FLAG = 256,GSS_C_BOTH = 0,GSS_C_INITIATE = 1,GSS_C_ACCEPT = 2,GSS_C_GSS_CODE = 1,GSS_C_MECH_CODE = 2,GSS_C_AF_UNSPEC = 0,GSS_C_AF_LOCAL = 1,GSS_C_AF_INET = 2,GSS_C_AF_IMPLINK = 3,GSS_C_AF_PUP = 4,GSS_C_AF_CHAOS = 5,GSS_C_AF_NS = 6,GSS_C_AF_NBS = 7,GSS_C_AF_ECMA = 8,GSS_C_AF_DATAKIT = 9,GSS_C_AF_CCITT = 10,GSS_C_AF_SNA = 11,GSS_C_AF_DECnet = 12,GSS_C_AF_DLI = 13,GSS_C_AF_LAT = 14,GSS_C_AF_HYLINK = 15,GSS_C_AF_APPLETALK = 16,GSS_C_AF_BSC = 17,GSS_C_AF_DSS = 18,GSS_C_AF_OSI = 19,GSS_C_AF_X25 = 21,GSS_C_AF_NULLADDR = 255,GSS_C_NO_NAME = 0,GSS_C_NO_BUFFER = 0,GSS_C_NO_OID = 0,GSS_C_NO_OID_SET = 0,GSS_C_NO_CONTEXT = 0,GSS_C_NO_CREDENTIAL = 0,GSS_C_NO_CHANNEL_BINDINGS = 0,GSS_C_NULL_OID = 0,GSS_C_NULL_OID_SET = 0,GSS_C_QOP_DEFAULT = 0,GSS_C_INDEFINITE = 4294967295,GSS_S_COMPLETE = 0,GSS_C_CALLING_ERROR_OFFSET = 24,GSS_C_ROUTINE_ERROR_OFFSET = 16,GSS_C_SUPPLEMENTARY_OFFSET = 0,GSS_C_CALLING_ERROR_MASK = 255,GSS_C_ROUTINE_ERROR_MASK = 255,GSS_C_SUPPLEMENTARY_MASK = 65535,GSS_S_CALL_INACCESSIBLE_READ = 16777216,GSS_S_CALL_INACCESSIBLE_WRITE = 33554432,GSS_S_CALL_BAD_STRUCTURE = 50331648,GSS_S_BAD_MECH = 65536,GSS_S_BAD_NAME = 131072,GSS_S_BAD_NAMETYPE = 196608,GSS_S_BAD_BINDINGS = 262144,GSS_S_BAD_STATUS = 327680,GSS_S_BAD_SIG = 393216,GSS_S_BAD_MIC = 393216,GSS_S_NO_CRED = 458752,GSS_S_NO_CONTEXT = 524288,GSS_S_DEFECTIVE_TOKEN = 589824,GSS_S_DEFECTIVE_CREDENTIAL = 655360,GSS_S_CREDENTIALS_EXPIRED = 720896,GSS_S_CONTEXT_EXPIRED = 786432,GSS_S_FAILURE = 851968,GSS_S_BAD_QOP = 917504,GSS_S_UNAUTHORIZED = 983040,GSS_S_UNAVAILABLE = 1048576,GSS_S_DUPLICATE_ELEMENT = 1114112,GSS_S_NAME_NOT_MN = 1179648,GSS_S_CONTINUE_NEEDED = 1,GSS_S_DUPLICATE_TOKEN = 2,GSS_S_OLD_TOKEN = 4,GSS_S_UNSEQ_TOKEN = 8,GSS_S_GAP_TOKEN = 16,};
enum MACRO_HDE {HDE_ROOT_DIR_REC_SIZE = 34,HDE_FDESIZE = 33,HDE_FUSIZE = 12,HDE_MAX_NAME_LEN = 210,HDE_EXISTENCE = 1,HDE_DIRECTORY = 2,HDE_ASSOCIATED = 4,HDE_RECORD = 8,HDE_PROTECTION = 16,HDE_UNUSED_FLAGS = 96,HDE_LAST_EXTENT = 128,HDE_PROHIBITED = 234,};
enum MACRO_HDK {HDK_SILENT = 0x1,HDK_DIAGNOSE = 0x2,HDK_ISOLATE = 0x4,HDK_READ = 0x8,HDK_WRITE = 0x10,HDK_KBUF = 0x20,};
enum MACRO_HID {HID_SUBCLASS = 1,HID_CLASS_CODE = 3,};
enum MACRO_HME {HME_IOC = 0x60201AE1,HME_IOC_GET_SPEED = 0x100,HME_IOC_SET_SPEED = 0x110,HME_AUTO_SPEED = 0x0,HME_FORCE_SPEED = 0x1,HME_SPEED_10 = 0xA,HME_SPEED_100 = 0x64,HME_HALF_DUPLEX = 0x0,HME_FULL_DUPLEX = 0x1,HME_HMDALIGN = 0x800,HME_TMDMAX = 0x100,HME_RMDMAX = 0x100,};
enum MACRO_HPE {HPE_FPESIZE = 8,};
enum MACRO_HRM {HRM_SHIFT = 4,HRM_BYTES = 16,HRM_PAGES = 64,HRM_PGPERBYTE = 4,HRM_PGBYTEMASK = 3,HRM_HASHSIZE = 512,HRM_HASHMASK = 511,HRM_BLIST_INCR = 512,HRM_SWSMONID = 1,};
enum MACRO_HSV {HSV_ID_STRLEN = 5,HSV_ID_VER = 1,HSV_FILE_STRUCT_ID_VER = 1,HSV_SYS_ID_STRLEN = 32,HSV_VOL_ID_STRLEN = 32,HSV_VOL_SET_ID_STRLEN = 128,HSV_PUB_ID_STRLEN = 128,HSV_PREP_ID_STRLEN = 128,HSV_APPL_ID_STRLEN = 128,HSV_COPYR_ID_STRLEN = 32,HSV_ABSTR_ID_STRLEN = 32,HSV_DATE_LEN = 16,};
enum MACRO_HUB {HUB_CHARS_POWER_SWITCHING_MODE = 0x3,HUB_CHARS_GANGED_POWER = 0x0,HUB_CHARS_INDIVIDUAL_PORT_POWER = 0x1,HUB_CHARS_NO_POWER_SWITCHING = 0x2,HUB_CHARS_COMPOUND_DEVICE = 0x4,HUB_CHARS_GLOBAL_OVER_CURRENT = 0x0,HUB_CHARS_INDIV_OVER_CURRENT = 0x8,HUB_CHARS_NO_OVER_CURRENT = 0x10,HUB_CHANGE_STATUS = 0x1,};
enum MACRO_IAC {IAC = 255,};
enum MACRO_ICB {ICB_FLAG_SHORT_AD = 0x0,ICB_FLAG_LONG_AD = 0x1,ICB_FLAG_EXT_AD = 0x2,ICB_FLAG_ONE_AD = 0x3,ICB_FLAG_SORTED = 0x8,ICB_FLAG_NON_RELOC = 0x10,ICB_FLAG_ARCHIVE = 0x20,ICB_FLAG_SETUID = 0x40,ICB_FLAG_SETGID = 0x80,ICB_FLAG_STICKY = 0x100,ICB_FLAG_CONTIG = 0x200,ICB_FLAG_SYSTEM = 0x400,ICB_FLAG_TRNSFRMED = 0x800,ICB_FLAG_MVERS = 0x1000,};
enum MACRO_ICK {ICK_REMAP = 8,ICK_VALID = 16,ICK_NONE = 0,ICK_M_CTL_MAGIC = -790708002,};
enum MACRO_IDE {IDE_ROOT_DIR_REC_SIZE = 34,IDE_FDESIZE = 33,IDE_MAX_NAME_LEN = 222,IDE_EXISTENCE = 1,IDE_DIRECTORY = 2,IDE_ASSOCIATED = 4,IDE_RECORD = 8,IDE_PROTECTION = 16,IDE_UNUSED_FLAGS = 96,IDE_LAST_EXTENT = 128,IDE_PROHIBITED = 234,};
enum MACRO_IFA {IFA_ROUTE = 0x1,};
enum MACRO_IFF {IFF_UP = 0x1,IFF_BROADCAST = 0x2,IFF_DEBUG = 0x4,IFF_LOOPBACK = 0x8,IFF_POINTOPOINT = 0x10,IFF_NOTRAILERS = 0x20,IFF_RUNNING = 0x40,IFF_NOARP = 0x80,IFF_PROMISC = 0x100,IFF_ALLMULTI = 0x200,IFF_INTELLIGENT = 0x400,IFF_MULTICAST = 0x800,IFF_MULTI_BCAST = 0x1000,IFF_UNNUMBERED = 0x2000,IFF_DHCPRUNNING = 0x4000,IFF_PRIVATE = 0x8000,IFF_NOXMIT = 0x10000,IFF_NOLOCAL = 0x20000,IFF_DEPRECATED = 0x40000,IFF_ADDRCONF = 0x80000,IFF_ROUTER = 0x100000,IFF_NONUD = 0x200000,IFF_ANYCAST = 0x400000,IFF_NORTEXCH = 0x800000,IFF_IPV4 = 0x1000000,IFF_IPV6 = 0x2000000,IFF_MIPRUNNING = 0x4000000,IFF_CANTCHANGE = 0x3003952,};
enum MACRO_IFP {IFP_NUM_ENTRIES_IN_MAP = 127,};
enum MACRO_IFQ {IFQ_MAXLEN = 50,};
enum MACRO_IFT {IFT_OTHER = 0x1,IFT_1822 = 0x2,IFT_HDH1822 = 0x3,IFT_X25DDN = 0x4,IFT_X25 = 0x5,IFT_ETHER = 0x6,IFT_ISO88023 = 0x7,IFT_ISO88024 = 0x8,IFT_ISO88025 = 0x9,IFT_ISO88026 = 0xA,IFT_STARLAN = 0xB,IFT_P10 = 0xC,IFT_P80 = 0xD,IFT_HY = 0xE,IFT_FDDI = 0xF,IFT_LAPB = 0x10,IFT_SDLC = 0x11,IFT_T1 = 0x12,IFT_CEPT = 0x13,IFT_ISDNBASIC = 0x14,IFT_ISDNPRIMARY = 0x15,IFT_PTPSERIAL = 0x16,IFT_PPP = 0x17,IFT_LOOP = 0x18,IFT_EON = 0x19,IFT_XETHER = 0x1A,IFT_NSIP = 0x1B,IFT_SLIP = 0x1C,IFT_ULTRA = 0x1D,IFT_DS3 = 0x1E,IFT_SIP = 0x1F,IFT_FRELAY = 0x20,IFT_RS232 = 0x21,IFT_PARA = 0x22,IFT_ARCNET = 0x23,IFT_ARCNETPLUS = 0x24,IFT_ATM = 0x25,IFT_MIOX25 = 0x26,IFT_SONET = 0x27,IFT_X25PLE = 0x28,IFT_ISO88022LLC = 0x29,IFT_LOCALTALK = 0x2A,IFT_SMDSDXI = 0x2B,IFT_FRELAYDCE = 0x2C,IFT_V35 = 0x2D,IFT_HSSI = 0x2E,IFT_HIPPI = 0x2F,IFT_MODEM = 0x30,IFT_AAL5 = 0x31,IFT_SONETPATH = 0x32,IFT_SONETVT = 0x33,IFT_SMDSICIP = 0x34,IFT_PROPVIRTUAL = 0x35,IFT_PROPMUX = 0x36,};
enum MACRO_IGN {IGN_PID = -1,};
enum MACRO_ILD {ILD_INIT = 0x1,ILD_UNINIT = 0x2,ILD_MAC = 0x3,ILD_TCAPSTART = 0x7,ILD_TCAPSTOP = 0x8,ILD_GCONFIG = 0xA,ILD_PPA_INFO = 0xD,ILD_PPA_CONFIG = 0xF,ILD_LLC2 = 0x49000008,};
enum MACRO_ILL {ILL_ILLOPC = 1,ILL_ILLOPN = 2,ILL_ILLADR = 3,ILL_ILLTRP = 4,ILL_PRVOPC = 5,ILL_PRVREG = 6,ILL_COPROC = 7,ILL_BADSTK = 8,};
enum MACRO_INF {INF = 1000000000,};
enum MACRO_INI {INI_CAN_DISCON = 0x40,};
enum MACRO_INP {INP_QSIZE = 32,};
enum MACRO_INT {INT_MIN = -2147483648,INT_MAX = 2147483647,};
enum MACRO_IOC {IOC_VOID = 0x20000000,IOC_OUT = 0x40000000,IOC_IN = 0x80000000,IOC_INOUT = 0xC0000000,};
enum MACRO_IP6 {IP6_DL_SAP = 0x86DD,};
enum MACRO_IPC {IPC_ALLOC = 0x8000,IPC_CREAT = 0x200,IPC_EXCL = 0x400,IPC_NOWAIT = 0x800,IPC_PRIVATE = 0x0,IPC_RMID = 0xA,IPC_SET = 0xB,IPC_STAT = 0xC,};
enum MACRO_IPD {IPD_SAPL = 0,IPD_MTP_ADDRL = 4,IPD_PTP_ADDRL = 0,IPD_MTU = 8232,IPD_LINKHDR = 4,IPD_MAX_PKTS = 10,IPD_IF_STATIC = -1,IPD_MINOR = 0,IPD_HOLDING_TIME = 10,IPD_MAXIFS = 64,IPD_MAXIPDCMS = 20,IPD_DLPI = 1,IPD_FLOWCTRL = 2,IPD_DDI = 4,IPD_DATA = 8,};
enum MACRO_IPE {IPE_FPESIZE = 8,};
enum MACRO_IPH {IPH_DF = 0x4000,IPH_MF = 0x2000,IPH_OFFSET = 0x1FFF,IPH_FRAG_HDR = 0x8000,};
enum MACRO_IRE {IRE_BROADCAST = 0x1,IRE_DEFAULT = 0x2,IRE_LOCAL = 0x4,IRE_LOOPBACK = 0x8,IRE_PREFIX = 0x10,IRE_CACHE = 0x20,IRE_IF_NORESOLVER = 0x40,IRE_IF_RESOLVER = 0x80,IRE_HOST = 0x100,IRE_HOST_REDIRECT = 0x200,IRE_INTERFACE = 0xC0,IRE_OFFSUBNET = 0x312,IRE_CACHETABLE = 0x2D,IRE_FORWARDTABLE = 0x3D2,IRE_MARK_CONDEMNED = 0x1,};
enum MACRO_ISO {ISO_TP = 0x100,};
enum MACRO_ISP {ISP_NORMAL = 0x0,ISP_RESERVE = 0x1,};
enum MACRO_KBD {KBD_CMD_LED1 = 0x4,KBD_CMD_NOLED1 = 0x5,KBD_CMD_LED2 = 0x6,KBD_CMD_NOLED2 = 0x7,};
enum MACRO_KBL {KBL = 0x51,};
enum MACRO_KBU {KBU = 0x52,};
enum MACRO_KEY {KEY_MIN = 0x101,KEY_BREAK = 0x101,KEY_DOWN = 0x102,KEY_UP = 0x103,KEY_LEFT = 0x104,KEY_RIGHT = 0x105,KEY_HOME = 0x106,KEY_BACKSPACE = 0x107,KEY_F0 = 0x108,KEY_DL = 0x148,KEY_IL = 0x149,KEY_DC = 0x14A,KEY_IC = 0x14B,KEY_EIC = 0x14C,KEY_CLEAR = 0x14D,KEY_EOS = 0x14E,KEY_EOL = 0x14F,KEY_SF = 0x150,KEY_SR = 0x151,KEY_NPAGE = 0x152,KEY_PPAGE = 0x153,KEY_STAB = 0x154,KEY_CTAB = 0x155,KEY_CATAB = 0x156,KEY_ENTER = 0x157,KEY_SRESET = 0x158,KEY_RESET = 0x159,KEY_PRINT = 0x15A,KEY_LL = 0x15B,KEY_A1 = 0x15C,KEY_A3 = 0x15D,KEY_B2 = 0x15E,KEY_C1 = 0x15F,KEY_C3 = 0x160,KEY_BTAB = 0x161,KEY_BEG = 0x162,KEY_CANCEL = 0x163,KEY_CLOSE = 0x164,KEY_COMMAND = 0x165,KEY_COPY = 0x166,KEY_CREATE = 0x167,KEY_END = 0x168,KEY_EXIT = 0x169,KEY_FIND = 0x16A,KEY_HELP = 0x16B,KEY_MARK = 0x16C,KEY_MESSAGE = 0x16D,KEY_MOVE = 0x16E,KEY_NEXT = 0x16F,KEY_OPEN = 0x170,KEY_OPTIONS = 0x171,KEY_PREVIOUS = 0x172,KEY_REDO = 0x173,KEY_REFERENCE = 0x174,KEY_REFRESH = 0x175,KEY_REPLACE = 0x176,KEY_RESTART = 0x177,KEY_RESUME = 0x178,KEY_SAVE = 0x179,KEY_SBEG = 0x17A,KEY_SCANCEL = 0x17B,KEY_SCOMMAND = 0x17C,KEY_SCOPY = 0x17D,KEY_SCREATE = 0x17E,KEY_SDC = 0x17F,KEY_SDL = 0x180,KEY_SELECT = 0x181,KEY_SEND = 0x182,KEY_SEOL = 0x183,KEY_SEXIT = 0x184,KEY_SFIND = 0x185,KEY_SHELP = 0x186,KEY_SHOME = 0x187,KEY_SIC = 0x188,KEY_SLEFT = 0x189,KEY_SMESSAGE = 0x18A,KEY_SMOVE = 0x18B,KEY_SNEXT = 0x18C,KEY_SOPTIONS = 0x18D,KEY_SPREVIOUS = 0x18E,KEY_SPRINT = 0x18F,KEY_SREDO = 0x190,KEY_SREPLACE = 0x191,KEY_SRIGHT = 0x192,KEY_SRSUME = 0x193,KEY_SSAVE = 0x194,KEY_SSUSPEND = 0x195,KEY_SUNDO = 0x196,KEY_SUSPEND = 0x197,KEY_UNDO = 0x198,KEY_MOUSE = 0x199,KEY_MAX = 0x1FF,};
enum MACRO_KID {KID_NONE = 0,KID_GOT_PREFACE = 1,KID_OK = 2,KID_GOT_LAYOUT = 3,};
enum MACRO_KMC {KMC_NOTOUCH = 0x10000,KMC_NODEBUG = 0x20000,KMC_NOMAGAZINE = 0x40000,KMC_NOHASH = 0x80000,KMC_QCACHE = 0x100000,};
enum MACRO_KNC {KNC_STRSIZE = 128,};
enum MACRO_KRR {KRR = 0x5,};
enum MACRO_LAV {LAV_NONE = 0,LAV_VERSION1 = 1,LAV_VERSION2 = 2,LAV_CURRENT = 2,LAV_NUM = 3,};
enum MACRO_LCA {LCA = 0x47,};
enum MACRO_LDL {LDL_MINTRANSFER = 32768,LDL_MAXTRANSFER = 1048576,LDL_DIVISOR = 1024,LDL_MINLOGSIZE = 1048576,LDL_MAXLOGSIZE = 67108864,LDL_MINBUFSIZE = 32768,};
enum MACRO_LED {LED_NUM_LOCK = 0x1,LED_COMPOSE = 0x2,LED_SCROLL_LOCK = 0x4,LED_CAPS_LOCK = 0x8,LED_KANA = 0x10,};
enum MACRO_LEN {LEN_DKL_ASCII = 128,LEN_DKL_VVOL = 8,};
enum MACRO_LIO {LIO_NOWAIT = 0,LIO_WAIT = 1,LIO_NOP = 0,LIO_READ = 1,LIO_WRITE = 2,};
enum MACRO_LLC {LLC_RAW = 0x1,LLC_FAST = 0x2,LLC_PROM = 0x4,LLC_SNAP = 0x8,LLC_SNAP_OID = 0x10,};
enum MACRO_LMD {LMD_OWN = 0x80,LMD_ERR = 0x40,LMD_STP = 0x2,LMD_ENP = 0x1,};
enum MACRO_LMS {LMS_USER = 0,LMS_SYSTEM = 1,LMS_TRAP = 2,LMS_TFAULT = 3,LMS_DFAULT = 4,LMS_KFAULT = 5,LMS_USER_LOCK = 6,LMS_SLEEP = 7,LMS_WAIT_CPU = 8,LMS_STOPPED = 9,};
enum MACRO_LOC {LOC_OPTS = 0xFFFF0000,LOC_DISALLOW = 0x10000,LOC_OPTIONAL = 0x20000,LOC_MAND = 0x40000,};
enum MACRO_LOG {LOG_KERN = 0,LOG_USER = 8,LOG_MAIL = 16,LOG_DAEMON = 24,LOG_AUTH = 32,LOG_SYSLOG = 40,LOG_LPR = 48,LOG_NEWS = 56,LOG_UUCP = 64,LOG_CRON = 120,LOG_LOCAL0 = 128,LOG_LOCAL1 = 136,LOG_LOCAL2 = 144,LOG_LOCAL3 = 152,LOG_LOCAL4 = 160,LOG_LOCAL5 = 168,LOG_LOCAL6 = 176,LOG_LOCAL7 = 184,LOG_NFACILITIES = 24,LOG_FACMASK = 1016,LOG_EMERG = 0,LOG_ALERT = 1,LOG_CRIT = 2,LOG_ERR = 3,LOG_WARNING = 4,LOG_NOTICE = 5,LOG_INFO = 6,LOG_DEBUG = 7,LOG_PRIMASK = 7,LOG_PID = 1,LOG_CONS = 2,LOG_ODELAY = 4,LOG_NDELAY = 8,LOG_NOWAIT = 16,};
enum MACRO_LSE {LSE_ENTER = 0x1,LSE_EXIT = 0x2,LSE_RECORD = 0x4,LSE_TRACE = 0x8,};
enum MACRO_LWP {LWP_DETACHED = 0x40,LWP_SUSPENDED = 0x80,};
enum MACRO_MAC {MAC_INST = 0x1,MAC_INIT = 0x4,};
enum MACRO_MAP {MAP_SHARED = 1,MAP_PRIVATE = 2,MAP_TYPE = 15,MAP_FIXED = 16,MAP_NORESERVE = 64,MAP_ANON = 256,MAP_ANONYMOUS = 256,MAP_RENAME = 32,};
enum MACRO_MAX {INT8_MAX = 127,INT16_MAX = 32767,INT32_MAX = 2147483647,INT64_MAX = 9223372036854775807,UINT8_MAX = 255,UINT16_MAX = 65535,UINT32_MAX = -1,UINT64_MAX = -1,INTMAX_MAX = 9223372036854775807,UINTMAX_MAX = -1,INT_LEAST8_MAX = 127,INT_LEAST16_MAX = 32767,INT_LEAST32_MAX = 2147483647,INT_LEAST64_MAX = 9223372036854775807,UINT_LEAST8_MAX = 255,UINT_LEAST16_MAX = 65535,UINT_LEAST32_MAX = -1,UINT_LEAST64_MAX = -1,};
enum MACRO_MBB {MBB_MAGIC = 0xAA55,};
enum MACRO_MCL {MCL_CURRENT = 0x1,MCL_FUTURE = 0x2,};
enum MACRO_MD5 {MD5_CONST_0 = 3614090360,MD5_CONST_1 = 3905402710,MD5_CONST_2 = 606105819,MD5_CONST_3 = 3250441966,MD5_CONST_4 = 4118548399,MD5_CONST_5 = 1200080426,MD5_CONST_6 = 2821735955,MD5_CONST_7 = 4249261313,MD5_CONST_8 = 1770035416,MD5_CONST_9 = 2336552879,MD5_CONST_10 = 4294925233,MD5_CONST_11 = 2304563134,MD5_CONST_12 = 1804603682,MD5_CONST_13 = 4254626195,MD5_CONST_14 = 2792965006,MD5_CONST_15 = 1236535329,MD5_CONST_16 = 4129170786,MD5_CONST_17 = 3225465664,MD5_CONST_18 = 643717713,MD5_CONST_19 = 3921069994,MD5_CONST_20 = 3593408605,MD5_CONST_21 = 38016083,MD5_CONST_22 = 3634488961,MD5_CONST_23 = 3889429448,MD5_CONST_24 = 568446438,MD5_CONST_25 = 3275163606,MD5_CONST_26 = 4107603335,MD5_CONST_27 = 1163531501,MD5_CONST_28 = 2850285829,MD5_CONST_29 = 4243563512,MD5_CONST_30 = 1735328473,MD5_CONST_31 = 2368359562,MD5_CONST_32 = 4294588738,MD5_CONST_33 = 2272392833,MD5_CONST_34 = 1839030562,MD5_CONST_35 = 4259657740,MD5_CONST_36 = 2763975236,MD5_CONST_37 = 1272893353,MD5_CONST_38 = 4139469664,MD5_CONST_39 = 3200236656,MD5_CONST_40 = 681279174,MD5_CONST_41 = 3936430074,MD5_CONST_42 = 3572445317,MD5_CONST_43 = 76029189,MD5_CONST_44 = 3654602809,MD5_CONST_45 = 3873151461,MD5_CONST_46 = 530742520,MD5_CONST_47 = 3299628645,MD5_CONST_48 = 4096336452,MD5_CONST_49 = 1126891415,MD5_CONST_50 = 2878612391,MD5_CONST_51 = 4237533241,MD5_CONST_52 = 1700485571,MD5_CONST_53 = 2399980690,MD5_CONST_54 = 4293915773,MD5_CONST_55 = 2240044497,MD5_CONST_56 = 1873313359,MD5_CONST_57 = 4264355552,MD5_CONST_58 = 2734768916,MD5_CONST_59 = 1309151649,MD5_CONST_60 = 4149444226,MD5_CONST_61 = 3174756917,MD5_CONST_62 = 718787259,MD5_CONST_63 = 3951481745,MD5_INIT_CONST_1 = 1732584193,MD5_INIT_CONST_2 = 4023233417,MD5_INIT_CONST_3 = 2562383102,MD5_INIT_CONST_4 = 271733878,MD5_SHIFT_11 = 7,MD5_SHIFT_12 = 12,MD5_SHIFT_13 = 17,MD5_SHIFT_14 = 22,MD5_SHIFT_21 = 5,MD5_SHIFT_22 = 9,MD5_SHIFT_23 = 14,MD5_SHIFT_24 = 20,MD5_SHIFT_31 = 4,MD5_SHIFT_32 = 11,MD5_SHIFT_33 = 16,MD5_SHIFT_34 = 23,MD5_SHIFT_41 = 6,MD5_SHIFT_42 = 10,MD5_SHIFT_43 = 15,MD5_SHIFT_44 = 21,};
enum MACRO_MDB {MDB_API_VERSION = 1,};
enum MACRO_MDI {MDI_RESET = 19713,MDI_GET_CFGINFO = 19714,MDI_SET_PIXELMODE = 19715,MDI_8_PIX = 8,MDI_16_PIX = 16,MDI_32_PIX = 32,MDI_SET_COUNTERS = 19716,MDI_SET_PPR = 19717,MDI_BLEND_LEFT_DIRECT = 0,MDI_BLEND_LEFT_CLUT1 = 64,MDI_BLEND_LEFT_CLUT2 = 128,MDI_BLEND_LEFT_CLUT3 = 192,MDI_BLEND_RIGHT_DIRECT = 0,MDI_BLEND_RIGHT_CLUT1 = 16,MDI_BLEND_RIGHT_CLUT2 = 32,MDI_BLEND_RIGHT_CLUT3 = 48,MDI_SOURCE_LEFT_TRUE = 0,MDI_SOURCE_LEFT_B = 4,MDI_SOURCE_LEFT_G = 8,MDI_SOURCE_LEFT_R = 12,MDI_SOURCE_RIGHT_X = 0,MDI_SOURCE_RIGHT_B = 1,MDI_SOURCE_RIGHT_G = 2,MDI_SOURCE_RIGHT_R = 3,MDI_VRT_CNTL = 19718,MDI_ENABLE_VIRQ = 1,MDI_DISABLE_VIRQ = 2,MDI_SET_CLUT = 19719,MDI_GET_CLUT = 19720,MDI_XLUT = 1,MDI_CLUT1 = 2,MDI_CLUT2 = 4,MDI_CLUT3 = 8,MDI_GAMMALUT = 16,MDI_CLUT_ALL = 23,MDI_SET_XLUT = 19721,MDI_GET_XLUT = 19722,MDI_SET_RESOLUTION = 19731,MDI_GAMMA_CORRECT = 19723,MDI_GAMMA_CORRECTION_OFF = 0,MDI_GAMMA_CORRECTION_ON = 1,MDI_SET_GAMMALUT = 19724,MDI_GET_GAMMALUT = 19725,MDI_SET_DEGAMMALUT = 19726,MDI_GET_DEGAMMALUT = 19727,MDI_GET_BUFFER_INFO = 19728,MDI_SET_CURSOR = 19729,MDI_GET_DIAGINFO = 19730,};
enum MACRO_MEM {MEM_VTOP = 19713,};
enum MACRO_MFB {MFB_OFF_ID = 0,MFB_OFF_REG = 4194304,MFB_OFF_FB = 8388608,MFB_OFF_DUMMY = 12582912,MFB_ID_MASK = -16,MFB_ID_VALUE = -33488640,MFB_CMAP_ENTRIES = 256,MFB_CR_INTEN = 128,MFB_CR_VIDEO = 64,MFB_CR_MASTER = 32,MFB_CR_CURSOR = 16,MFB_CR_X0 = 0,MFB_CR_X1 = 4,MFB_CR_X2 = 8,MFB_CR_TEST = 12,MFB_CR_DIV1 = 0,MFB_CR_DIV2 = 1,MFB_CR_DIV3 = 2,MFB_CR_DIV4 = 3,MFB_SR_INT = 128,MFB_SR_RES_MASK = 112,MFB_SR_1024_768 = 16,MFB_SR_1152_900 = 48,MFB_SR_1280_1024 = 64,MFB_SR_1600_1280 = 80,MFB_SR_ID_MASK = 15,MFB_SR_ID_COLOR = 1,MFB_SR_ID_MONO = 2,MFB_SR_ID_MONO_ECL = 3,MFB_REG_MMAP_OFFSET = 268435456,};
enum MACRO_MFM {MFM = 0x40,};
enum MACRO_MIN {INT8_MIN = -128,INT16_MIN = -32768,INT32_MIN = -2147483648,INT64_MIN = -9223372036854775808,INTMAX_MIN = -9223372036854775808,INT_LEAST8_MIN = -128,INT_LEAST16_MIN = -32768,INT_LEAST32_MIN = -2147483648,INT_LEAST64_MIN = -9223372036854775808,};
enum MACRO_MNT {MNT_LINE_MAX = 1024,MNT_TOOLONG = 1,MNT_TOOMANY = 2,MNT_TOOFEW = 3,};
enum MACRO_MOD {MOD_WIN = 10,};
enum MACRO_MON {MON_1 = 15,MON_2 = 16,MON_3 = 17,MON_4 = 18,MON_5 = 19,MON_6 = 20,MON_7 = 21,MON_8 = 22,MON_9 = 23,MON_10 = 24,MON_11 = 25,MON_12 = 26,};
enum MACRO_MRT {MRT_INIT = 100,MRT_DONE = 101,MRT_ADD_VIF = 102,MRT_DEL_VIF = 103,MRT_ADD_MFC = 104,MRT_DEL_MFC = 105,MRT_VERSION = 106,MRT_ASSERT = 107,};
enum MACRO_MSG {MSG_OOB = 0x1,MSG_PEEK = 0x2,MSG_DONTROUTE = 0x4,MSG_EOR = 0x8,MSG_CTRUNC = 0x10,MSG_TRUNC = 0x20,MSG_WAITALL = 0x40,MSG_DONTWAIT = 0x80,MSG_XPG4_2 = 0x8000,MSG_MAXIOVLEN = 0x10,};
enum MACRO_MTF {MTF_SCSI = 0x1,MTF_REEL = 0x2,MTF_ASF = 0x4,MTF_TAPE_HEAD_DIRTY = 0x8,MTF_TAPE_CLN_SUPPORTED = 0x10,};
enum MACRO_MTM {MTM_ROLL_EXIT = 0x1,MTM_ROLL_RUNNING = 0x2,MTM_FORCE_ROLL = 0x4,};
enum MACRO_NAA {NAA_ID_IEEE = 1,NAA_ID_IEEE_EXTENDED = 2,};
enum MACRO_NCC {NCC = 8,NCCS = 19,};
enum MACRO_NDF {NDF_ISROUTER_ON = 0x1,NDF_ISROUTER_OFF = 0x2,NDF_ANYCAST_ON = 0x4,NDF_ANYCAST_OFF = 0x8,NDF_PROXY_ON = 0x10,NDF_PROXY_OFF = 0x20,};
enum MACRO_NDM {NDM = 0x20,};
enum MACRO_NEW {NEW_ENV_VAR = 0,NEW_ENV_VALUE = 1,};
enum MACRO_NFF {NFF = 5,};
enum MACRO_NFS {NFS_PROGRAM = 100003,NFS_VERSMIN = 2,NFS_VERSMAX = 3,NFS_VERSION = 2,NFS_PORT = 2049,NFS_MAXDATA = 8192,NFS_MAXNAMLEN = 255,NFS_MAXPATHLEN = 1024,NFS_TIMEO = 11,NFS_RETRIES = 5,NFS_COTS_TIMEO = 600,NFS_UID_NOBODY = -2,NFS_GID_NOBODY = -2,};
enum MACRO_NIS {NIS_MAXSTRINGLEN = 255,NIS_MAXNAMELEN = 1024,NIS_MAXATTRNAME = 32,NIS_MAXATTRVAL = 2048,NIS_MAXCOLUMNS = 64,NIS_MAXATTR = 16,NIS_MAXPATH = 1024,NIS_MAXREPLICAS = 128,NIS_MAXLINKS = 16,NIS_PK_NONE = 0,NIS_PK_DH = 1,NIS_PK_RSA = 2,NIS_PK_KERB = 3,NIS_PK_DHEXT = 4,};
enum MACRO_NL0 {NL0 = 0,NL1 = 256,CRDLY = 1536,};
enum MACRO_NL2 {NL2 = 0x200,};
enum MACRO_NL3 {NL3 = 0x300,NOAL = 0x800,};
enum MACRO_NLM {NLM_PROG = 100021,NLM_VERS = 1,NLM_TEST = 1,NLM_LOCK = 2,NLM_CANCEL = 3,NLM_UNLOCK = 4,NLM_GRANTED = 5,NLM_TEST_MSG = 6,NLM_LOCK_MSG = 7,NLM_CANCEL_MSG = 8,NLM_UNLOCK_MSG = 9,NLM_GRANTED_MSG = 10,NLM_TEST_RES = 11,NLM_LOCK_RES = 12,NLM_CANCEL_RES = 13,NLM_UNLOCK_RES = 14,NLM_GRANTED_RES = 15,NLM_VERS2 = 2,};
enum MACRO_NON {NON_FATALOC = 24,NON_FATAL = 16777216,};
enum MACRO_NOT {NOT_OK = 0,};
enum MACRO_NSM {NSM_ADDR_PROGRAM = 100133,NSM_ADDR_V1 = 1,};
enum MACRO_NSS {NSS_DBOP_DESTRUCTOR = 0,NSS_DBOP_ENDENT = 1,NSS_DBOP_SETENT = 2,NSS_DBOP_GETENT = 3,NSS_DBOP_next_iter = 4,NSS_DBOP_next_noiter = 1,NSS_DBOP_next_ipv6_iter = 6,NSS_INCLUDE_UNSAFE = 1,NSS_BUFSIZ = 1024,NSS_LINELEN_GROUP = 4096,NSS_LINELEN_HOSTS = 2048,NSS_LINELEN_IPNODES = 2048,NSS_LINELEN_NETMASKS = 1024,NSS_LINELEN_NETWORKS = 1024,NSS_LINELEN_PASSWD = 1024,NSS_LINELEN_PRINTERS = 1024,NSS_LINELEN_PROTOCOLS = 1024,NSS_LINELEN_PUBLICKEY = 1024,NSS_LINELEN_RPC = 1024,NSS_LINELEN_SERVICES = 1024,NSS_LINELEN_SHADOW = 1024,NSS_LINELEN_ETHERS = 1024,NSS_LINELEN_BOOTPARAMS = 1024,NSS_LINELEN_ATTRDB = 1024,NSS_LINELEN_AUDITUSER = 1024,NSS_LINELEN_AUTHATTR = 1024,NSS_LINELEN_EXECATTR = 1024,NSS_LINELEN_PROFATTR = 1024,NSS_LINELEN_USERATTR = 1024,NSS_MMAPLEN_EXECATTR = 8192,NSS_BUFLEN_NETGROUP = 523,NSS_BUFLEN_NETWORKS = 1024,NSS_BUFLEN_PASSWD = 1024,NSS_BUFLEN_PROTOCOLS = 1024,NSS_BUFLEN_PUBLICKEY = 1024,NSS_BUFLEN_RPC = 1024,NSS_BUFLEN_SERVICES = 1024,NSS_BUFLEN_SHADOW = 1024,NSS_BUFLEN_ETHERS = 1024,NSS_BUFLEN_BOOTPARAMS = 1024,NSS_BUFLEN_ATTRDB = 1024,NSS_BUFLEN_AUDITUSER = 1024,NSS_BUFLEN_AUTHATTR = 1024,NSS_BUFLEN_EXECATTR = 1024,NSS_BUFLEN_PROFATTR = 1024,NSS_BUFLEN_USERATTR = 1024,NSS_STR_PARSE_SUCCESS = 0,NSS_STR_PARSE_PARSE = 1,NSS_STR_PARSE_ERANGE = 2,NSS_DBOP_GROUP_BYNAME = 4,NSS_DBOP_GROUP_BYGID = 5,NSS_DBOP_GROUP_BYMEMBER = 6,NSS_DBOP_PASSWD_BYNAME = 4,NSS_DBOP_PASSWD_BYUID = 5,NSS_DBOP_SHADOW_BYNAME = 4,NSS_DBOP_HOSTS_BYNAME = 4,NSS_DBOP_HOSTS_BYADDR = 5,NSS_DBOP_IPNODES_BYNAME = 4,NSS_DBOP_IPNODES_BYADDR = 5,NSS_DBOP_NAME_2ADDR = 6,NSS_DBOP_ADDR_2NAME = 7,NSS_DBOP_RPC_BYNAME = 4,NSS_DBOP_RPC_BYNUMBER = 5,NSS_DBOP_NETWORKS_BYNAME = 4,NSS_DBOP_NETWORKS_BYADDR = 5,NSS_DBOP_SERVICES_BYNAME = 4,NSS_DBOP_SERVICES_BYPORT = 5,NSS_DBOP_PROTOCOLS_BYNAME = 4,NSS_DBOP_PROTOCOLS_BYNUMBER = 5,NSS_DBOP_ETHERS_HOSTTON = 1,NSS_DBOP_ETHERS_NTOHOST = 2,NSS_DBOP_BOOTPARAMS_BYNAME = 1,NSS_DBOP_NETMASKS_BYNET = 1,NSS_DBOP_PRINTERS_BYNAME = 4,NSS_DBOP_NETGROUP_IN = 4,NSS_DBOP_NETGROUP_SET = 5,NSS_DBOP_KEYS_BYNAME = 4,NSS_DBOP_ATTRDB_BYNAME = 4,NSS_DBOP_AUDITUSER_BYNAME = 4,NSS_DBOP_AUTHATTR_BYNAME = 4,NSS_DBOP_EXECATTR_BYNAME = 4,NSS_DBOP_EXECATTR_BYID = 5,NSS_DBOP_EXECATTR_BYNAMEID = 6,NSS_DBOP_PROFATTR_BYNAME = 4,NSS_DBOP_USERATTR_BYNAME = 4,};
enum MACRO_NUM {NUM_ATTRIBUTES = 9,};
enum MACRO_NVR {NVR_OFFSET = 512,};
enum MACRO_OBJ {CLASS_OBJ = 0x10,OTHER_OBJ = 0x20,};
enum MACRO_OBP {OBP_MAGIC = 0x10010407,};
enum MACRO_OCF {OCF_Timeout_NoBlock = 0x1,OCF_Success = 0x0,OCF_NoCard = 0x1,OCF_CardError = 0x2,OCF_ReaderError = 0x3,OCF_ParameterError = 0x4,OCF_OperationTimeout = 0x5,OCF_ResourceUnavailable = 0x6,OCF_CardLocked = 0x7,OCF_DuplicateClient = 0x8,OCF_DuplicateHandler = 0x9,OCF_DuplicateEvent = 0xA,OCF_VerifyError = 0xB,OCF_PINAlreadySet = 0xC,OCF_NoPermission = 0xD,OCF_UnknownResource = 0xE,OCF_EncodingError = 0xF,OCF_ServerError = 0x10,OCF_VersionMismatch = 0x11,OCF_CardUnlocked = 0x12,OCF_Exception = 0x14,OCF_NoSuchProperty = 0x15,OCF_InvalidClientHandle = 0x1E,OCF_InvalidCardHandle = 0x1F,OCF_InvalidEventHandle = 0x20,OCF_NoReadersConfigured = 0x21,OCF_NoCardsConfigured = 0x22,OCF_AuthenticationError = 0x46,OCF_AuthenticationFailed = 0x47,OCF_AuthOp = 0x50,OCF_InvalidPin = 0x51,OCF_InvalidPassword = 0x52,OCF_UnsupportedAuthMech = 0x53,OCF_UnknownError = 0x5A,OCF_CardSpec_UseHandle = 0x1,OCF_Event_CardInserted = 0x1,OCF_Event_CardRemoved = 0x2,OCF_Event_CardReset = 0x4,OCF_Event_CardError = 0x8,OCF_Event_Exception = 0x10,};
enum MACRO_OFS {OFS_MAGIC = 60011,NFS_MAGIC = 60012,};
enum MACRO_OLD {OLD_ENV_VAR = 1,OLD_ENV_VALUE = 0,};
enum MACRO_ONE {ONE_MEG = 1048576,};
enum MACRO_OSC {OSC_10 = 2,OSC_9 = 1,};
enum MACRO_PAD {PAD_MACUSE = 0x1,PAD_MACREAD = 0x2,PAD_MACWRITE = 0x4,PAD_MACSEARCH = 0x8,PAD_MACKILL = 0x10,PAD_MACTRACE = 0x20,PAD_MACIOCTL = 0x40,PAD_MACMASK = 0x7E,PAD_SPRIVUSE = 0x80,PAD_FPRIVUSE = 0x100,PAD_NONATTR = 0x4000,PAD_FAILURE = 0x8000,};
enum MACRO_PAM {PAM_SUCCESS = 0,PAM_OPEN_ERR = 1,PAM_SYMBOL_ERR = 2,PAM_SERVICE_ERR = 3,PAM_SYSTEM_ERR = 4,PAM_BUF_ERR = 5,PAM_CONV_ERR = 6,PAM_PERM_DENIED = 7,PAM_MAXTRIES = 8,PAM_AUTH_ERR = 9,PAM_NEW_AUTHTOK_REQD = 10,PAM_CRED_INSUFFICIENT = 11,PAM_AUTHINFO_UNAVAIL = 12,PAM_USER_UNKNOWN = 13,PAM_CRED_UNAVAIL = 14,PAM_CRED_EXPIRED = 15,PAM_CRED_ERR = 16,PAM_ACCT_EXPIRED = 17,PAM_AUTHTOK_EXPIRED = 18,PAM_SESSION_ERR = 19,PAM_AUTHTOK_ERR = 20,PAM_AUTHTOK_RECOVERY_ERR = 21,PAM_AUTHTOK_LOCK_BUSY = 22,PAM_AUTHTOK_DISABLE_AGING = 23,PAM_NO_MODULE_DATA = 24,PAM_IGNORE = 25,PAM_ABORT = 26,PAM_TRY_AGAIN = 27,PAM_PROMPT_ECHO_OFF = 1,PAM_PROMPT_ECHO_ON = 2,PAM_ERROR_MSG = 3,PAM_TEXT_INFO = 4,PAM_MSG_NOCONF = 2001,PAM_CONV_INTERRUPT = 2002,PAM_MAX_NUM_MSG = 32,PAM_MAX_MSG_SIZE = 512,PAM_MAX_RESP_SIZE = 512,PAM_SERVICE = 1,PAM_USER = 2,PAM_TTY = 3,PAM_RHOST = 4,PAM_CONV = 5,PAM_AUTHTOK = 6,PAM_OLDAUTHTOK = 7,PAM_RUSER = 8,PAM_USER_PROMPT = 9,PAM_MSG_VERSION = 3001,PAM_SILENT = -2147483648,PAM_DISALLOW_NULL_AUTHTOK = 1,PAM_ESTABLISH_CRED = 1,PAM_DELETE_CRED = 2,PAM_REINITIALIZE_CRED = 4,PAM_REFRESH_CRED = 8,PAM_CHANGE_EXPIRED_AUTHTOK = 4,PAM_PRELIM_CHECK = 1,PAM_UPDATE_AUTHTOK = 2,};
enum MACRO_PAP {PAP_MAX_PASSWD = 255,};
enum MACRO_PCA {PCA_RES_NEED_IRQ = 0x1,PCA_RES_NEED_IO = 0x2,PCA_RES_NEED_MEM = 0x4,PCA_RES_CONSTRAINT = 0x8,PCA_IRQ_SMI_SHARE = 0x10,PCA_IRQ_SHAREABLE = 0x20,PCA_IRQ_ISA = 0x40,PCA_IO_OPENED = 0x100,};
enum MACRO_PCB {PCB_BPSEC = 11,PCB_SPC = 13,PCB_RESSEC = 14,PCB_NFAT = 16,PCB_NROOTENT = 17,PCB_NSEC = 19,PCB_MEDIA = 21,PCB_SPF = 22,PCB_SPT = 24,PCB_NHEAD = 26,PCB_HIDSEC = 28,};
enum MACRO_PCC {PCC_MULTI = 0,PCC_MEMORY = 1,PCC_SERIAL = 2,PCC_PARALLEL = 3,PCC_FIXED_DISK = 4,PCC_VIDEO = 5,PCC_LAN = 6,};
enum MACRO_PCD {PCD_UNUSED = 0x0,PCD_ERASED = 0xFFFFFFE5,};
enum MACRO_PCF {PCF_FREECLUSTER = 0x0,PCF_ERRORCLUSTER = 0x1,PCF_12BCLUSTER = 0xFF0,PCF_RESCLUSTER = 0xFFF0,PCF_RESCLUSTER32 = 0xFFFFFF0,PCF_BADCLUSTER = 0xFFF7,PCF_BADCLUSTER32 = 0xFFFFFF7,PCF_LASTCLUSTER = 0xFFF8,PCF_LASTCLUSTER32 = 0xFFFFFF8,PCF_LASTCLUSTERMARK = 0xFFFF,PCF_LASTCLUSTERMARK32 = 0xFFFFFFF,PCF_FIRSTCLUSTER = 0x2,};
enum MACRO_PCI {PCI_CONF_VENID = 0x0,PCI_CONF_DEVID = 0x2,PCI_CONF_COMM = 0x4,PCI_CONF_STAT = 0x6,PCI_CONF_REVID = 0x8,PCI_CONF_PROGCLASS = 0x9,PCI_CONF_SUBCLASS = 0xA,PCI_CONF_BASCLASS = 0xB,PCI_CONF_CACHE_LINESZ = 0xC,PCI_CONF_LATENCY_TIMER = 0xD,PCI_CONF_HEADER = 0xE,PCI_CONF_BIST = 0xF,PCI_CONF_BASE0 = 0x10,PCI_CONF_BASE1 = 0x14,PCI_CONF_BASE2 = 0x18,PCI_CONF_BASE3 = 0x1C,PCI_CONF_BASE4 = 0x20,PCI_CONF_BASE5 = 0x24,PCI_CONF_CIS = 0x28,PCI_CONF_SUBVENID = 0x2C,PCI_CONF_SUBSYSID = 0x2E,PCI_CONF_ROM = 0x30,PCI_CONF_CAP_PTR = 0x34,PCI_CONF_ILINE = 0x3C,PCI_CONF_IPIN = 0x3D,PCI_CONF_MIN_G = 0x3E,PCI_CONF_MAX_L = 0x3F,PCI_BCNF_PRIBUS = 0x18,PCI_BCNF_SECBUS = 0x19,PCI_BCNF_SUBBUS = 0x1A,PCI_BCNF_LATENCY_TIMER = 0x1B,PCI_BCNF_IO_BASE_LOW = 0x1C,PCI_BCNF_IO_LIMIT_LOW = 0x1D,PCI_BCNF_SEC_STATUS = 0x1E,PCI_BCNF_MEM_BASE = 0x20,PCI_BCNF_MEM_LIMIT = 0x22,PCI_BCNF_PF_BASE_LOW = 0x24,PCI_BCNF_PF_LIMIT_LOW = 0x26,PCI_BCNF_PF_BASE_HIGH = 0x28,PCI_BCNF_PF_LIMIT_HIGH = 0x2C,PCI_BCNF_IO_BASE_HI = 0x30,PCI_BCNF_IO_LIMIT_HI = 0x32,PCI_BCNF_CAP_PTR = 0x34,PCI_BCNF_ROM = 0x38,PCI_BCNF_ILINE = 0x3C,PCI_BCNF_IPIN = 0x3D,PCI_BCNF_BCNTRL = 0x3E,PCI_BCNF_BCNTRL_PARITY_ENABLE = 0x1,PCI_BCNF_BCNTRL_SERR_ENABLE = 0x2,PCI_BCNF_BCNTRL_MAST_AB_MODE = 0x20,PCI_BCNF_IO_MASK = 0xF0,PCI_BCNF_MEM_MASK = 0xFFF0,PCI_COMM_IO = 0x1,PCI_COMM_MAE = 0x2,PCI_COMM_ME = 0x4,PCI_COMM_SPEC_CYC = 0x8,PCI_COMM_MEMWR_INVAL = 0x10,PCI_COMM_PALETTE_SNOOP = 0x20,PCI_COMM_PARITY_DETECT = 0x40,PCI_COMM_WAIT_CYC_ENAB = 0x80,PCI_COMM_SERR_ENABLE = 0x100,PCI_COMM_BACK2BACK_ENAB = 0x200,PCI_INTA = 0x1,PCI_INTB = 0x2,PCI_INTC = 0x3,PCI_INTD = 0x4,PCI_STAT_CAP = 0x10,PCI_STAT_66MHZ = 0x20,PCI_STAT_UDF = 0x40,PCI_STAT_FBBC = 0x80,PCI_STAT_S_PERROR = 0x100,PCI_STAT_DEVSELT = 0x600,PCI_STAT_S_TARG_AB = 0x800,PCI_STAT_R_TARG_AB = 0x1000,PCI_STAT_R_MAST_AB = 0x2000,PCI_STAT_S_SYSERR = 0x4000,PCI_STAT_PERROR = 0x8000,PCI_STAT_DEVSELT_FAST = 0x0,PCI_STAT_DEVSELT_MEDIUM = 0x200,PCI_STAT_DEVSELT_SLOW = 0x400,PCI_BIST_SUPPORTED = 0x80,PCI_BIST_GO = 0x40,PCI_BIST_RESULT_M = 0xF,PCI_BIST_RESULT_OK = 0x0,PCI_CLASS_NONE = 0x0,PCI_CLASS_MASS = 0x1,PCI_CLASS_NET = 0x2,PCI_CLASS_DISPLAY = 0x3,PCI_CLASS_MM = 0x4,PCI_CLASS_MEM = 0x5,PCI_CLASS_BRIDGE = 0x6,PCI_CLASS_COMM = 0x7,PCI_CLASS_PERIPH = 0x8,PCI_CLASS_INPUT = 0x9,PCI_CLASS_DOCK = 0xA,PCI_CLASS_PROCESSOR = 0xB,PCI_CLASS_SERIALBUS = 0xC,PCI_NONE_NOTVGA = 0x0,PCI_NONE_VGA = 0x1,PCI_MASS_SCSI = 0x0,PCI_MASS_IDE = 0x1,PCI_MASS_FD = 0x2,PCI_MASS_IPI = 0x3,PCI_MASS_RAID = 0x4,PCI_MASS_OTHER = 0x80,PCI_IDE_IF_NATIVE_PRI = 0x1,PCI_IDE_IF_PROG_PRI = 0x2,PCI_IDE_IF_NATIVE_SEC = 0x4,PCI_IDE_IF_PROG_SEC = 0x8,PCI_IDE_IF_MASK = 0xF,PCI_NET_ENET = 0x0,PCI_NET_TOKEN = 0x1,PCI_NET_FDDI = 0x2,PCI_NET_ATM = 0x3,PCI_NET_OTHER = 0x80,PCI_DISPLAY_VGA = 0x0,PCI_DISPLAY_XGA = 0x1,PCI_DISPLAY_OTHER = 0x80,PCI_DISPLAY_IF_VGA = 0x0,PCI_DISPLAY_IF_8514 = 0x1,PCI_MM_VIDEO = 0x0,PCI_MM_AUDIO = 0x1,PCI_MM_OTHER = 0x80,PCI_MEM_RAM = 0x0,PCI_MEM_FLASH = 0x1,PCI_MEM_OTHER = 0x80,PCI_BRIDGE_HOST = 0x0,PCI_BRIDGE_ISA = 0x1,PCI_BRIDGE_EISA = 0x2,PCI_BRIDGE_MC = 0x3,PCI_BRIDGE_PCI = 0x4,PCI_BRIDGE_PCMCIA = 0x5,PCI_BRIDGE_NUBUS = 0x6,PCI_BRIDGE_CARDBUS = 0x7,PCI_BRIDGE_OTHER = 0x80,PCI_COMM_GENERIC_XT = 0x0,PCI_COMM_PARALLEL = 0x1,PCI_COMM_OTHER = 0x80,PCI_COMM_SERIAL_IF_GENERIC = 0x0,PCI_COMM_SERIAL_IF_16450 = 0x1,PCI_COMM_SERIAL_IF_16550 = 0x2,PCI_COMM_PARALLEL_IF_GENERIC = 0x0,PCI_COMM_PARALLEL_IF_BIDIRECT = 0x1,PCI_COMM_PARALLEL_IF_ECP = 0x2,PCI_PERIPH_PIC = 0x0,PCI_PERIPH_DMA = 0x1,PCI_PERIPH_TIMER = 0x2,PCI_PERIPH_RTC = 0x3,PCI_PERIPH_OTHER = 0x80,PCI_PERIPH_PIC_IF_GENERIC = 0x0,PCI_PERIPH_PIC_IF_ISA = 0x1,PCI_PERIPH_PIC_IF_EISA = 0x2,PCI_PERIPH_DMA_IF_GENERIC = 0x0,PCI_PERIPH_DMA_IF_ISA = 0x1,PCI_PERIPH_DMA_IF_EISA = 0x2,PCI_PERIPH_TIMER_IF_GENERIC = 0x0,PCI_PERIPH_TIMER_IF_ISA = 0x1,PCI_PERIPH_TIMER_IF_EISA = 0x2,PCI_PERIPH_RTC_IF_GENERIC = 0x0,PCI_PERIPH_RTC_IF_ISA = 0x1,PCI_INPUT_KEYBOARD = 0x0,PCI_INPUT_DIGITIZ = 0x1,PCI_INPUT_MOUSE = 0x2,PCI_INPUT_OTHER = 0x80,PCI_DOCK_GENERIC = 0x0,PCI_DOCK_OTHER = 0x80,PCI_PROCESSOR_386 = 0x0,PCI_PROCESSOR_486 = 0x1,PCI_PROCESSOR_PENT = 0x2,PCI_PROCESSOR_ALPHA = 0x10,PCI_PROCESSOR_POWERPC = 0x20,PCI_PROCESSOR_COPROC = 0x40,PCI_SERIAL_FIRE = 0x0,PCI_SERIAL_ACCESS = 0x1,PCI_SERIAL_SSA = 0x2,PCI_SERIAL_USB = 0x3,PCI_SERIAL_FIBRE = 0x4,PCI_HEADER_MULTI = 0x80,PCI_HEADER_ZERO = 0x0,PCI_HEADER_ONE = 0x1,PCI_HEADER_PPB = 0x1,PCI_HEADER_TYPE_M = 0x7F,PCI_BASE_SPACE_M = 0x1,PCI_BASE_SPACE_IO = 0x1,PCI_BASE_SPACE_MEM = 0x0,PCI_BASE_TYPE_MEM = 0x0,PCI_BASE_TYPE_LOW = 0x2,PCI_BASE_TYPE_ALL = 0x4,PCI_BASE_TYPE_RES = 0x6,PCI_BASE_TYPE_M = 0x6,PCI_BASE_PREF_M = 0x8,PCI_BASE_M_ADDR_M = 0xFFFFFFF0,PCI_BASE_IO_ADDR_M = 0xFFFFFFFE,PCI_BASE_ROM_ADDR_M = 0xFFFFF800,PCI_BASE_ROM_ENABLE = 0x1,PCI_PPB_ROM = 0x38,PCI_PPB_BASE_NUM = 0x2,PCI_CAP_ID = 0x0,PCI_CAP_NEXT_PTR = 0x1,PCI_CAP_ID_PM = 0x1,PCI_CAP_NEXT_PTR_NULL = 0x0,PCI_PMCAP = 0x2,PCI_PMCSR = 0x4,PCI_PMCSR_BSE = 0x6,PCI_PMDATA = 0x7,PCI_PMCAP_VER_1_0 = 0x1,PCI_PMCAP_VER_1_1 = 0x2,PCI_PMCAP_VER_MASK = 0x7,PCI_PMCAP_PME_CLOCK = 0x8,PCI_PMCAP_DSI = 0x20,PCI_PMCAP_AUX_CUR_SELF = 0x0,PCI_PMCAP_AUX_CUR_55mA = 0x40,PCI_PMCAP_AUX_CUR_100mA = 0x80,PCI_PMCAP_AUX_CUR_160mA = 0xC0,PCI_PMCAP_AUX_CUR_220mA = 0x100,PCI_PMCAP_AUX_CUR_270mA = 0x140,PCI_PMCAP_AUX_CUR_320mA = 0x180,PCI_PMCAP_AUX_CUR_375mA = 0x1C0,PCI_PMCAP_AUX_CUR_MASK = 0x1C0,PCI_PMCAP_D1 = 0x200,PCI_PMCAP_D2 = 0x400,PCI_PMCAP_D0_PME = 0x800,PCI_PMCAP_D1_PME = 0x1000,PCI_PMCAP_D2_PME = 0x2000,PCI_PMCAP_D3HOT_PME = 0x4000,PCI_PMCAP_D3COLD_PME = 0x8000,PCI_PMCAP_PME_MASK = 0xF800,PCI_PMCSR_D0 = 0x0,PCI_PMCSR_D1 = 0x1,PCI_PMCSR_D2 = 0x2,PCI_PMCSR_D3HOT = 0x3,PCI_PMCSR_STATE_MASK = 0x3,PCI_PMCSR_PME_EN = 0x100,PCI_PMCSR_DSEL_D0_PWR_C = 0x0,PCI_PMCSR_DSEL_D1_PWR_C = 0x200,PCI_PMCSR_DSEL_D2_PWR_C = 0x400,PCI_PMCSR_DSEL_D3_PWR_C = 0x600,PCI_PMCSR_DSEL_D0_PWR_D = 0x800,PCI_PMCSR_DSEL_D1_PWR_D = 0xA00,PCI_PMCSR_DSEL_D2_PWR_D = 0xC00,PCI_PMCSR_DSEL_D3_PWR_D = 0xE00,PCI_PMCSR_DSEL_COM_C = 0x1000,PCI_PMCSR_DSEL_MASK = 0x1E00,PCI_PMCSR_DSCL_UNKNOWN = 0x0,PCI_PMCSR_DSCL_1_BY_10 = 0x2000,PCI_PMCSR_DSCL_1_BY_100 = 0x4000,PCI_PMCSR_DSCL_1_BY_1000 = 0x6000,PCI_PMCSR_DSCL_MASK = 0x6000,PCI_PMCSR_PME_STAT = 0x8000,PCI_PMCSR_BSE_B2_B3 = 0x40,PCI_PMCSR_BSE_BPCC_EN = 0x80,PCI_BASE_NUM = 0x6,PCI_BASE_SIZE = 0x4,PCI_CONF_HDR_SIZE = 0x100,PCI_CLK_33MHZ = 0x2100000,PCI_CLK_66MHZ = 0x4200000,PCI_REG_REG_M = 0xFF,PCI_REG_FUNC_M = 0x700,PCI_REG_DEV_M = 0xF800,PCI_REG_BUS_M = 0xFF0000,PCI_REG_ADDR_M = 0x3000000,PCI_REG_ALIAS_M = 0x20000000,PCI_REG_PF_M = 0x40000000,PCI_REG_REL_M = 0x80000000,PCI_ADDR_MASK = 0x3000000,PCI_ADDR_CONFIG = 0x0,PCI_ADDR_IO = 0x1000000,PCI_ADDR_MEM32 = 0x2000000,PCI_ADDR_MEM64 = 0x3000000,PCI_ALIAS_B = 0x20000000,PCI_PREFETCH_B = 0x40000000,PCI_RELOCAT_B = 0x80000000,PCI_CONF_ADDR_MASK = 0xFFFFFF,PCI_HARDDEC_8514 = 0x2,PCI_HARDDEC_VGA = 0x3,PCI_HARDDEC_IDE = 0x4,PCI_HARDDEC_IDE_PRI = 0x2,PCI_HARDDEC_IDE_SEC = 0x2,};
enum MACRO_PCM {PCM_DEFAULT_NODEID = -1,};
enum MACRO_PCS {PCS_CARD_PRESENT = 0x1,PCS_MULTI_FUNCTION = 0x2,PCS_SOCKET_ADDED = 0x4,PCS_COOKIES_VALID = 0x8,PCS_IRQ_ENABLED = 0x10,PCS_SUSPENDED = 0x20,PCS_ENABLED = 0x2,};
enum MACRO_PEM {PEM_MAX_EVENTS = 64,PEM_IDNUM = 17741,PEM_MIN = 0,PEM_MAX = 1024,PEM_HIWATER = 4096,PEM_LOWATER = 1024,};
enum MACRO_PFN {PFN_INVALID = 4294967295,};
enum MACRO_PHY {PHY_BMCR_RESET = 32768,PHY_BMCR_LPBK = 16384,PHY_BMCR_100M = 8192,PHY_BMCR_ANE = 4096,PHY_BMCR_PWRDN = 2048,PHY_BMCR_ISOLATE = 1024,PHY_BMCR_RAN = 512,PHY_BMCR_FDX = 256,PHY_BMCR_COLTST = 128,PHY_BMCR_RES1 = 127,PHY_BMSR_100T4 = 32768,PHY_BMSR_100FDX = 16384,PHY_BMSR_100HDX = 8192,PHY_BMSR_10FDX = 4096,PHY_BMSR_10HDX = 2048,PHY_BMSR_RES1 = 1984,PHY_BMSR_ANC = 32,PHY_BMSR_REMFLT = 16,PHY_BMSR_ACFG = 8,PHY_BMSR_LNKSTS = 4,PHY_BMSR_JABDET = 2,PHY_BMSR_EXTCAP = 1,PHY_CAPABILITY_MASK = 30720,PHY_IDR2_OUILSB = 64512,PHY_IDR2_VNDMDL = 1008,PHY_IDR2_MDLREV = 15,PHY_ANAR_NP = 32768,PHY_ANAR_ACK = 16384,PHY_ANAR_RF = 8192,PHY_ANAR_RES1 = 7168,PHY_ANAR_T4 = 512,PHY_ANAR_TXFDX = 256,PHY_ANAR_TX = 128,PHY_ANAR_10FDX = 64,PHY_ANAR_10 = 32,PHY_ANAR_SELECT = 31,PHY_SELECTOR = 1,PHY_ANLPAR_NP = 32768,PHY_ANLPAR_ACK = 16384,PHY_ANLPAR_RF = 8192,PHY_ANLPAR_RES1 = 7168,PHY_ANLPAR_T4 = 512,PHY_ANLPAR_TXFDX = 256,PHY_ANLPAR_TX = 128,PHY_ANLPAR_10FDX = 64,PHY_ANLPAR_10 = 32,PHY_ANLPAR_SELECT = 31,PHY_ANER_RES1 = 65504,PHY_ANER_MLF = 16,PHY_ANER_LPNP = 8,PHY_ANER_NPABLE = 4,PHY_ANER_PAGERX = 2,PHY_ANER_LPNW = 1,PHY_NWAYTR_RES1 = 65280,PHY_NWAYTR_LPBK = 128,PHY_NWAYTR_RES2 = 127,PHY_CSCR_NRZIDIS = 32768,PHY_CSCR_RES1 = 16384,PHY_CSCR_TOCDIS = 8192,PHY_CSCR_REPTR = 4096,PHY_CSCR_ENCSEL = 2048,PHY_CSCR_RES2 = 1792,PHY_CSCR_CLK25M = 128,PHY_CSCR_FLN100 = 64,PHY_CSCR_FCONN = 32,PHY_CSCR_TXOFF = 16,PHY_CSCR_RES3 = 8,PHY_CSCR_CSTSEN = 4,PHY_CSCR_10FDXE = 2,PHY_CSCR_RES4 = 1,PHY_LBREMR_BPEB = 32768,PHY_LBREMR_BP4B5B = 16384,PHY_LBREMR_BPSCR = 8192,PHY_LBREMR_BPALIGN = 4096,PHY_LBREMR_EWRAP = 2048,PHY_LBREMR_XWRAP = 1024,PHY_LBREMR_LB = 768,PHY_LBREMR_RES1 = 224,PHY_LBREMR_CODE = 16,PHY_LBREMR_PME = 8,PHY_LBREMR_LINK = 4,PHY_LBREMR_PKT = 2,PHY_LBREMR_EB = 1,PHY_AR_RES1 = 65408,PHY_AR_SPEED10 = 64,PHY_AR_CONSTS = 32,PHY_AR_ADDR = 31,PHY_TPISR_RES1 = 64512,PHY_TPISR_10BTSER = 512,PHY_TPISR_RES2 = 511,PHY_NICR_RES1 = 65472,PHY_NICR_LD = 32,PHY_NICR_HBE = 16,PHY_NICR_UTP = 8,PHY_NICR_LSS = 4,PHY_NICR_RES2 = 2,PHY_NICR_JBEN = 1,PHY_BTXPC_DSCRAM = 1,};
enum MACRO_PIM {PIM_VERSION = 2,PIM_MINLEN = 8,PIM_REG_MINLEN = 28,PIM_REGISTER = 1,PIM_BORDER_REGISTER = -2147483648,PIM_NULL_REGISTER = 1073741824,};
enum MACRO_PKT {PKT_PRIV_SIZE = 1,PKT_PRIV_LEN = 8,};
enum MACRO_PLN {PLN_ENTITY_CONTROLLER = 0x0,PLN_ENTITY_DISK_SINGLE = 0x1,PLN_ENTITY_DISK_GROUPED = 0x2,};
enum MACRO_PMC {PMC = 0x6,};
enum MACRO_PPC {PPC_INTMASK = 0xA,};
enum MACRO_PPD {PPD_CARD_MULTI = 0x1,PPD_CARD_CARDBUS = 0x2,PPD_CB_BUSMASTER = 0x4,PPD_SUSPENDED = 0x8,};
enum MACRO_PPP {PPP_DG_MOD_ID = 2001,PPP_DG_MAX_OUTPUT = 1000,PPP_DG_ERR = 1,PPP_DG_INF = 2,PPP_DG_OPT = 4,PPP_DG_EXT = 8,PPP_DG_RAW = 16,PPP_DG_NDA = 32,PPP_DG_RFR = 64,PPP_DG_ERRREP = 128,PPP_DG_STAND = 7,PPP_DG_MIN = 3,PPP_DG_ALL = 175,};
enum MACRO_PPS {PPS_AVG = 2,PPS_SHIFT = 2,PPS_SHIFTMAX = 8,PPS_VALID = 120,};
enum MACRO_PRC {PRC_IFDOWN = 0,PRC_ROUTEDEAD = 1,PRC_QUENCH = 4,PRC_MSGSIZE = 5,PRC_HOSTDEAD = 6,PRC_HOSTUNREACH = 7,PRC_UNREACH_NET = 8,PRC_UNREACH_HOST = 9,PRC_UNREACH_PROTOCOL = 10,PRC_UNREACH_PORT = 11,PRC_UNREACH_NEEDFRAG = 12,PRC_UNREACH_SRCFAIL = 13,PRC_REDIRECT_NET = 14,PRC_REDIRECT_HOST = 15,PRC_REDIRECT_TOSNET = 16,PRC_REDIRECT_TOSHOST = 17,PRC_TIMXCEED_INTRANS = 18,PRC_TIMXCEED_REASS = 19,PRC_PARAMPROB = 20,PRC_GWDOWN = 21,PRC_NCMDS = 22,};
enum MACRO_PRU {PRU_ATTACH = 0,PRU_DETACH = 1,PRU_BIND = 2,PRU_LISTEN = 3,PRU_CONNECT = 4,PRU_ACCEPT = 5,PRU_DISCONNECT = 6,PRU_SHUTDOWN = 7,PRU_RCVD = 8,PRU_SEND = 9,PRU_ABORT = 10,PRU_CONTROL = 11,PRU_SENSE = 12,PRU_RCVOOB = 13,PRU_SENDOOB = 14,PRU_SOCKADDR = 15,PRU_PEERADDR = 16,PRU_CONNECT2 = 17,PRU_FASTTIMO = 18,PRU_SLOWTIMO = 19,PRU_PROTORCV = 20,PRU_PROTOSEND = 21,PRU_NREQ = 21,};
enum MACRO_PRV {PRV_CRASH = 17,PRV_RECOVERY = 18,};
enum MACRO_PSC {PSC_EVENT_LOST = 0x40000000,};
enum MACRO_PSL {PSL_ALLCC = 15728640,PSL_USER = 128,PSL_USERMASK = 15728640,PSL_UBITS = 15732736,};
enum MACRO_PSR {PSR_CWP = 0x1F,PSR_ET = 0x20,PSR_PS = 0x40,PSR_S = 0x80,PSR_PIL = 0xF00,PSR_EF = 0x1000,PSR_EC = 0x2000,PSR_RSV = 0xFC000,PSR_ICC = 0xF00000,PSR_C = 0x100000,PSR_V = 0x200000,PSR_Z = 0x400000,PSR_N = 0x800000,PSR_VER = 0xF000000,PSR_IMPL = 0xF0000000,};
enum MACRO_QEC {QEC_QMDMAX = 256,QEC_QMDALIGN = 2048,};
enum MACRO_QMD {QMD_OWN = 0x80000000,QMD_SOP = 0x40000000,QMD_EOP = 0x20000000,QMD_INUSE = 0x10000000,};
enum MACRO_QMT {QMT_TYPEMASK = 63488,};
enum MACRO_QUE {QUE_BUSY_COMMAND = 4,};
enum MACRO_RCM {RCM_INCLUDE_SUBTREE = 0x1,RCM_INCLUDE_DEPENDENT = 0x2,RCM_QUERY = 0x4,RCM_FORCE = 0x8,RCM_FILESYS = 0x10,RCM_NOPID = 0x20,RCM_DR_OPERATION = 0x40,RCM_MOD_INFO = 0x80,RCM_SUCCESS = 0x0,RCM_FAILURE = 0xFFFFFFFF,RCM_CONFLICT = 0xFFFFFFFE,RCM_STATE_UNKNOWN = 0x0,RCM_STATE_ONLINE = 0x1,RCM_STATE_ONLINING = 0x2,RCM_STATE_OFFLINE_FAIL = 0x3,RCM_STATE_OFFLINING = 0x4,RCM_STATE_OFFLINE = 0x5,RCM_STATE_REMOVING = 0x6,RCM_STATE_RESUMING = 0xA,RCM_STATE_SUSPEND_FAIL = 0xB,RCM_STATE_SUSPENDING = 0xC,RCM_STATE_SUSPEND = 0xD,RCM_STATE_REMOVE = 0xE,};
enum MACRO_RCV {RCV_EXP = 7,};
enum MACRO_RDF {RDF_LEVEL0 = 0x0,RDF_CCS = 0x1,RDF_SCSI2 = 0x2,};
enum MACRO_REC {REC_ESC = -1,REC_EOR = 1,REC_EOF = 2,};
enum MACRO_REG {REG_PSR = 0,REG_PC = 1,REG_nPC = 2,REG_Y = 3,REG_G1 = 4,REG_G2 = 5,REG_G3 = 6,REG_G4 = 7,REG_G5 = 8,REG_G6 = 9,REG_G7 = 10,REG_O0 = 11,REG_O1 = 12,REG_O2 = 13,REG_O3 = 14,REG_O4 = 15,REG_O5 = 16,REG_O6 = 17,REG_O7 = 18,REG_PS = 0,REG_SP = 17,REG_R0 = 11,REG_R1 = 12,};
enum MACRO_REM {REM_MULTIPLE = 512,};
enum MACRO_REQ {REQ_NEXT_PAGE = 512,REQ_PREV_PAGE = 513,REQ_FIRST_PAGE = 514,REQ_LAST_PAGE = 515,REQ_NEXT_FIELD = 516,REQ_PREV_FIELD = 517,REQ_FIRST_FIELD = 518,REQ_LAST_FIELD = 519,REQ_SNEXT_FIELD = 520,REQ_SPREV_FIELD = 521,REQ_SFIRST_FIELD = 522,REQ_SLAST_FIELD = 523,REQ_LEFT_FIELD = 524,REQ_RIGHT_FIELD = 525,REQ_UP_FIELD = 526,REQ_DOWN_FIELD = 527,REQ_NEXT_CHAR = 528,REQ_PREV_CHAR = 529,REQ_NEXT_LINE = 530,REQ_PREV_LINE = 531,REQ_NEXT_WORD = 532,REQ_PREV_WORD = 533,REQ_BEG_FIELD = 534,REQ_END_FIELD = 535,REQ_BEG_LINE = 536,REQ_END_LINE = 537,REQ_LEFT_CHAR = 538,REQ_RIGHT_CHAR = 539,REQ_UP_CHAR = 540,REQ_DOWN_CHAR = 541,REQ_NEW_LINE = 542,REQ_INS_CHAR = 543,REQ_INS_LINE = 544,REQ_DEL_CHAR = 545,REQ_DEL_PREV = 546,REQ_DEL_LINE = 547,REQ_DEL_WORD = 548,REQ_CLR_EOL = 549,REQ_CLR_EOF = 550,REQ_CLR_FIELD = 551,REQ_OVL_MODE = 552,REQ_INS_MODE = 553,REQ_SCR_FLINE = 554,REQ_SCR_BLINE = 555,REQ_SCR_FPAGE = 556,REQ_SCR_BPAGE = 557,REQ_SCR_FHPAGE = 558,REQ_SCR_BHPAGE = 559,REQ_SCR_FCHAR = 560,REQ_SCR_BCHAR = 561,REQ_SCR_HFLINE = 562,REQ_SCR_HBLINE = 563,REQ_SCR_HFHALF = 564,REQ_SCR_HBHALF = 565,REQ_VALIDATION = 566,REQ_NEXT_CHOICE = 567,REQ_PREV_CHOICE = 568,};
enum MACRO_RES {RES_TIMEOUT = 5,};
enum MACRO_RFS {RFS_NULL = 0,RFS_GETATTR = 1,RFS_SETATTR = 2,RFS_ROOT = 3,RFS_LOOKUP = 4,RFS_READLINK = 5,RFS_READ = 6,RFS_WRITECACHE = 7,RFS_WRITE = 8,RFS_CREATE = 9,RFS_REMOVE = 10,RFS_RENAME = 11,RFS_LINK = 12,RFS_SYMLINK = 13,RFS_MKDIR = 14,RFS_RMDIR = 15,RFS_READDIR = 16,RFS_STATFS = 17,RFS_NPROC = 18,};
enum MACRO_RJT {RJT_INVALID_CMD = 0x1,RJT_LOGICAL_ERR = 0x3,RJT_LOGICAL_BUSY = 0x5,RJT_PROTOCOL_ERR = 0x7,RJT_UNABLE = 0x9,RJT_UNSUPPORTED = 0xB,RJT_VENDOR = 0xFF,RJT_NOEXPLANATION = 0x0,RJT_INVALID_OSID = 0x1,RJT_INVALID_OXID_RXID = 0x3,RJT_INVALID_SEQID = 0x5,RJT_ABORT_INACTIVE_SEQ = 0x7,RJT_UNABLE_TO_SUPPLY = 0x9,};
enum MACRO_RMD {RMD_FRAM = 0x20,RMD_OFLO = 0x10,RMD_CRC = 0x8,RMD_BUFF = 0x4,};
enum MACRO_RPC {RPC_ANYSOCK = -1,RPC_ANYFD = -1,RPC_MAXDATASIZE = 9000,RPC_MAXADDRSIZE = 1024,RPC_CLIENT = 1,RPC_SERVER = 2,RPC_TEST = 3,RPC_SVC_MTMODE_SET = 1,RPC_SVC_MTMODE_GET = 2,RPC_SVC_THRMAX_SET = 3,RPC_SVC_THRMAX_GET = 4,RPC_SVC_THRTOTAL_GET = 5,RPC_SVC_THRCREATES_GET = 6,RPC_SVC_THRERRORS_GET = 7,};
enum MACRO_RPL {RPL_SPINDLE_SLAVE = 1,RPL_SPINDLE_MASTER = 2,RPL_SPINDLE_MASTER_CONTROL = 3,};
enum MACRO_RQS {RQS_OVR = 0x1,RQS_VALID = 0x2,};
enum MACRO_RRQ {RRQ = 0x1,WRQ = 0x2,};
enum MACRO_RTA {RTA_DST = 0x1,RTA_GATEWAY = 0x2,RTA_NETMASK = 0x4,RTA_GENMASK = 0x8,RTA_IFP = 0x10,RTA_IFA = 0x20,RTA_AUTHOR = 0x40,RTA_BRD = 0x80,RTA_NUMBITS = 0x8,};
enum MACRO_RTF {RTF_UP = 0x1,RTF_GATEWAY = 0x2,RTF_HOST = 0x4,RTF_REJECT = 0x8,RTF_DYNAMIC = 0x10,RTF_MODIFIED = 0x20,RTF_DONE = 0x40,RTF_MASK = 0x80,RTF_CLONING = 0x100,RTF_XRESOLVE = 0x200,RTF_LLINFO = 0x400,RTF_STATIC = 0x800,RTF_BLACKHOLE = 0x1000,RTF_PRIVATE = 0x2000,RTF_PROTO2 = 0x4000,RTF_PROTO1 = 0x8000,};
enum MACRO_RTM {RTM_VERSION = 3,RTM_ADD = 1,RTM_DELETE = 2,RTM_CHANGE = 3,RTM_GET = 4,RTM_LOSING = 5,RTM_REDIRECT = 6,RTM_MISS = 7,RTM_LOCK = 8,RTM_OLDADD = 9,RTM_OLDDEL = 10,RTM_RESOLVE = 11,RTM_NEWADDR = 12,RTM_DELADDR = 13,RTM_IFINFO = 14,};
enum MACRO_RTS {RTS_TOG = 21537,};
enum MACRO_RTV {RTV_MTU = 0x1,RTV_HOPCOUNT = 0x2,RTV_EXPIRE = 0x4,RTV_RPIPE = 0x8,RTV_SPIPE = 0x10,RTV_SSTHRESH = 0x20,RTV_RTT = 0x40,RTV_RTTVAR = 0x80,};
enum MACRO_RUN {RUN_LVL = 1,};
enum MACRO_RXC {RXC_IS_RXC = 0,RXC_IS_TXC = 1,RXC_IS_BAUD = 2,RXC_IS_PLL = 3,};
enum MACRO_S2E {S2E_SP = 0x1,S2E_MLD = 0x2,S2E_NPT = 0x4,};
enum MACRO_SAD {SAD_SAP = 17409,SAD_GAP = 17410,SAD_VML = 17411,};
enum MACRO_SAP {SAP_CLEAR = 0,SAP_ONE = 1,SAP_RANGE = 2,SAP_ALL = 3,};
enum MACRO_SCM {SCM_RIGHTS = 0x1010,};
enum MACRO_SEC {SEC = 1,MILLISEC = 1000,};
enum MACRO_SEM {SEM_FAILED = -1,};
enum MACRO_SES {SES_IOCTL_GETSTATE = 25857,SES_IOCTL_SETSTATE = 25858,SES_IOCTL_INQUIRY = 25859,};
enum MACRO_SET {SET_MONITOR_POWER = 19732,};
enum MACRO_SHF {SHF_WRITE = 0x1,SHF_ALLOC = 0x2,SHF_EXECINSTR = 0x4,SHF_MASKPROC = 0xF0000000,};
enum MACRO_SHM {SHM_R = 0x100,SHM_W = 0x80,SHM_RDONLY = 0x1000,SHM_RND = 0x2000,SHM_SHARE_MMU = 0x4000,};
enum MACRO_SHN {SHN_UNDEF = 0,SHN_LORESERVE = 65280,SHN_ABS = 65521,SHN_COMMON = 65522,SHN_HIRESERVE = 65535,SHN_LOPROC = 65280,SHN_HIPROC = 65311,};
enum MACRO_SHT {SHT_NULL = 0,SHT_PROGBITS = 1,SHT_SYMTAB = 2,SHT_STRTAB = 3,SHT_RELA = 4,SHT_HASH = 5,SHT_DYNAMIC = 6,SHT_NOTE = 7,SHT_NOBITS = 8,SHT_REL = 9,SHT_SHLIB = 10,SHT_DYNSYM = 11,SHT_NUM = 12,SHT_LOSUNW = 1879048186,SHT_SUNW_move = 1879048186,SHT_SUNW_COMDAT = 1879048187,SHT_SUNW_syminfo = 1879048188,SHT_SUNW_verdef = 1879048189,SHT_SUNW_verneed = 1879048190,SHT_SUNW_versym = 1879048191,SHT_HISUNW = 1879048191,SHT_LOPROC = 1879048192,SHT_HIPROC = 2147483647,SHT_LOUSER = -2147483648,SHT_HIUSER = -1,};
enum MACRO_SIG {SIG_BLOCK = 1,SIG_UNBLOCK = 2,SIG_SETMASK = 3,};
enum MACRO_SIO {SIO_LITE = 0x40,SIO_LITE_B = 0x90,SIO_REVA = 0x1A,SIO_REVB = 0x1B,};
enum MACRO_SLA {SLA_FREETNM = 1,};
enum MACRO_SLC {SLC_SYNCH = 1,SLC_BRK = 2,SLC_IP = 3,SLC_AO = 4,SLC_AYT = 5,SLC_EOR = 6,SLC_ABORT = 7,SLC_EOF = 8,SLC_SUSP = 9,SLC_EC = 10,SLC_EL = 11,SLC_EW = 12,SLC_RP = 13,SLC_LNEXT = 14,SLC_XON = 15,SLC_XOFF = 16,SLC_FORW1 = 17,SLC_FORW2 = 18,};
enum MACRO_SLF {SLF_TOSS = 1,};
enum MACRO_SLS {SLS_MDMSTAT = 0x1,SLS_LINKERR = 0x2,};
enum MACRO_SO4 {SO4_BITSMAJOR = 8,SO4_BITSMINOR = 8,SO4_MAXMAJ = 255,SO4_MAXMIN = 255,};
enum MACRO_SOA {SOA_DEFSIZE = 128,};
enum MACRO_SOC {SOC_EEPROM_4TH_SELF_TST = 0x0,SOC_EEPROM_4TH_OBP_DRV = 0x1000,SOC_EEPROM_OBP_HDR = 0x5000,SOC_EEPROM_FW_DATE_CODE = 0x5300,SOC_EEPROM_SRVC_PARM = 0x5304,SOC_EEPROM_LA_BIT_MASK = 0x5344,SOC_EEPROM_RSRV1 = 0x534C,SOC_EEPROM_SOC_CODE = 0x6000,SOC_EEPROM_RSRV2 = 0xF000,SOC_XRAM_REQ_DESC = 0x200,SOC_XRAM_RSP_DESC = 0x220,SOC_XRAM_LESB_P0 = 0x240,SOC_XRAM_LESB_P1 = 0x258,SOC_XRAM_SERVICE_PARAMS = 0x280,SOC_XRAM_FW_DATE_STR = 0x2D0,SOC_XRAM_FW_DATE_CODE = 0x2F8,SOC_XRAM_HW_REV = 0x2FC,};
enum MACRO_SOL {SOL_SOCKET = 0xFFFF,};
enum MACRO_SOU {SOU_MAGIC_EXPLICIT = 0x75787670,SOU_MAGIC_IMPLICIT = 0x616E6F6E,};
enum MACRO_SOV {SOV_STREAM = 0,SOV_DEFAULT = 1,SOV_SOCKSTREAM = 2,SOV_SOCKBSD = 3,SOV_XPG4_2 = 4,};
enum MACRO_SPB {SPB = 0x49,};
enum MACRO_SR0 {IC_SR0 = 0xC0,SE_SR0 = 0x20,EC_SR0 = 0x10,NR_SR0 = 0x8,H_SR0 = 0x4,DS_SR0 = 0x3,};
enum MACRO_SR1 {EN_SR1 = 0x80,DE_SR1 = 0x20,OR_SR1 = 0x10,ND_SR1 = 0x4,NW_SR1 = 0x2,MA_SR1 = 0x1,TO_SR1 = 0x8,};
enum MACRO_SR3 {WP_SR3 = 0x40,T0_SR3 = 0x10,};
enum MACRO_SRB {SRB_SUPPORTED = 4,};
enum MACRO_SRM {SRM_IF_MAJOR = 6,SRM_IF_MINOR = 0,};
enum MACRO_SS2 {SS2 = 0x8E,};
enum MACRO_SS3 {SS3 = 0x8F,};
enum MACRO_SSA {SSA_PRIORITY_RESERVE = 0x80,};
enum MACRO_SSD {SSD_STATE_NORMAL = 0,SSD_STATE_OFFLINE = 1,SSD_STATE_RWAIT = 2,SSD_STATE_DUMPING = 3,SSD_STATE_EJECTED = 4,SSD_STATE_SUSPENDED = 5,SSD_STATE_PM_SUSPENDED = 6,};
enum MACRO_SSL {SSL_NLEVELS = 4,SSL_BFACTOR = 4,SSL_LOG2BF = 2,};
enum MACRO_STA {STA_PLL = 0x1,STA_PPSFREQ = 0x2,STA_PPSTIME = 0x4,STA_FLL = 0x8,STA_INS = 0x10,STA_DEL = 0x20,STA_UNSYNC = 0x40,STA_FREQHOLD = 0x80,STA_PPSSIGNAL = 0x100,STA_PPSJITTER = 0x200,STA_PPSWANDER = 0x400,STA_PPSERROR = 0x800,STA_CLOCKERR = 0x1000,STA_RONLY = 0x1F00,};
enum MACRO_STB {STB_LOCAL = 0,STB_GLOBAL = 1,STB_WEAK = 2,STB_NUM = 3,STB_LOPROC = 13,STB_HIPROC = 15,};
enum MACRO_STC {STC_SREGS = 29691,STC_GREGS = 29692,STC_SPPC = 29693,STC_GPPC = 29694,STC_GSTATS = 29695,STC_SILOSIZE = 1024,};
enum MACRO_STD {STD_BLK = 1024,};
enum MACRO_STN {STN_UNDEF = 0,};
enum MACRO_STO {STO_SPARC_REGISTER_G2 = 0x2,STO_SPARC_REGISTER_G3 = 0x3,};
enum MACRO_STR {AM_STR = 47,PM_STR = 48,};
enum MACRO_STT {STT_NOTYPE = 0,STT_OBJECT = 1,STT_FUNC = 2,STT_SECTION = 3,STT_FILE = 4,STT_NUM = 5,STT_LOPROC = 13,STT_HIPROC = 15,};
enum MACRO_SUA {SUA_NULL_POINTER = -1,};
enum MACRO_SUF {SUF_SIG_LEN = 2,SUF_MIN_LEN = 4,};
enum MACRO_SUN {SUN_MIN_INQLEN = 4,};
enum MACRO_SVC {SVC_CODE_SZ = 14,};
enum MACRO_SWR {SWR = 0x80,};
enum MACRO_SYS {SYS_NMLN = 257,};
enum MACRO_TAG {TAG_DEBUG = 1,TAG_STATS = 2,TAG_GCACHE = 3,TAG_GCACHE_ALL = 3,TAG_DCACHE = 4,TAG_DCACHE_ONE = 4,TAG_OCACHE = 5,TAG_SECURE = 6,TAG_TCACHE_ONE = 7,TAG_DCACHE_ALL = 8,TAG_TCACHE_ALL = 9,TAG_GCACHE_ONE = 10,TAG_DCACHE_ONE_REFRESH = 11,TAG_READONLY = 12,TAG_READWRITE = 14,TAG_OPSTATS = 2048,TAG_THREADS = 2049,TAG_HEAP = 2050,TAG_UPDATES = 2051,TAG_VISIBLE = 2052,TAG_S_DCACHE = 2053,TAG_S_OCACHE = 2054,TAG_S_GCACHE = 2055,TAG_S_STORAGE = 2056,TAG_UPTIME = 2057,TAG_DIRLIST = 2058,TAG_NISCOMPAT = 2059,TAG_DNSFORWARDING = 2060,TAG_SECURITY_LEVEL = 2061,TAG_ROOTSERVER = 2062,};
enum MACRO_TCL {TCL_TRANSDEL = 0xD,TCL_RESERRORRATE = 0x3,TCL_PROTECTION = 0xA,TCL_PRIORITY = 0xB,};
enum MACRO_TCO {TCO_THROUGHPUT = 0x1,TCO_TRANSDEL = 0x2,TCO_RESERRORRATE = 0x3,TCO_TRANSFFAILPROB = 0x4,TCO_ESTFAILPROB = 0x5,TCO_RELFAILPROB = 0x6,TCO_ESTDELAY = 0x7,TCO_RELDELAY = 0x8,TCO_CONNRESIL = 0x9,TCO_PROTECTION = 0xA,TCO_PRIORITY = 0xB,TCO_EXPD = 0xC,};
enum MACRO_TCP {TCP_NODELAY = 0x1,TCP_MAXSEG = 0x2,TCP_KEEPALIVE = 0x8,};
enum MACRO_TEL {TEL_IOC_ENABLE = 28162,TEL_IOC_MODE = 28163,TEL_IOC_GETBLK = 28164,TEL_BINARY_IN = 1,TEL_BINARY_OUT = 2,};
enum MACRO_THR {THR_BOUND = 0x1,THR_NEW_LWP = 0x2,THR_DETACHED = 0x40,THR_SUSPENDED = 0x80,THR_DAEMON = 0x100,};
enum MACRO_TIE {TIE_RESET = 0x8000,TIE_NOLOOP = 0x4000,TIE_CA = 0x2000,TIE_IE = 0x1000,TIE_INTR = 0x100,};
enum MACRO_TLI {TLI_STACK_BUF_SIZE = 512,};
enum MACRO_TMD {TMD_RES = 0x20,TMD_MORE = 0x10,TMD_ONE = 0x8,TMD_DEF = 0x4,TMD_BUFF = 0x8000,TMD_UFLO = 0x4000,TMD_LCOL = 0x1000,TMD_LCAR = 0x800,TMD_RTRY = 0x400,TMD_TDR = 0x3F,TMD_ANYERROR = 0xDC00,};
enum MACRO_TMP {TMP_MAX = 17576,};
enum MACRO_TNF {TNF_MAGIC = 0x544E4600,TNF_MAGIC_1 = 0x464E54,TNF_TAG_GENERATION_NUM = 0xFFFFFFFF,TNF_SPACE_MASK = 0x80000000,TNF_SPACE_PERMANENT = 0x80000000,TNF_SPACE_RECLAIMABLE = 0x0,TNF_SPACE_SIGN_BIT = 0x40000000,TNF_REF32_TYPE_MASK = 0x3,TNF_REF32_T_FULL = 0x0,TNF_REF32_T_FWD = 0x0,TNF_REF32_T_PAIR = 0x1,TNF_REF32_T_TAG = 0x2,TNF_REF32_T_RSVD = 0x3,TNF_REF32_REF16_MASK = 0xFFFF,TNF_REF32_TAG16_SHIFT = 0x10,TNF_REF32_TAG16_MASK = 0xFFFF,TNF_REF16_TYPE_MASK = 0x3,TNF_TAG16_TYPE_MASK = 0x3,TNF_TAG16_T_ABS = 0x1,TNF_TAG16_T_REL = 0x0,TNF_NULL = 0x0,TNF_FILE_VERSION = 0x1,TNF_NEXT_INIT = 0xFFFFFFFF,};
enum MACRO_TOD {TOD_IOC = 29696,TOD_GET_DATE = 29696,TOD_SET_ALARM = 29697,TOD_CLEAR_ALARM = 29698,};
enum MACRO_TOP {TOP_SYNC = 0x1,TOP_ASYNC = 0x2,};
enum MACRO_TRS {TRS_VALID = 0,TRS_NONVOLATILE = 1,TRS_LWPID = 2,TRS_INVALID = 3,};
enum MACRO_TRY {TRY_AGAIN = 2,};
enum MACRO_TSP {TSP_ANY = 0,TSP_ADJTIME = 1,TSP_ACK = 2,TSP_MASTERREQ = 3,TSP_MASTERACK = 4,TSP_SETTIME = 5,TSP_MASTERUP = 6,TSP_SLAVEUP = 7,TSP_ELECTION = 8,TSP_ACCEPT = 9,TSP_REFUSE = 10,TSP_CONFLICT = 11,TSP_RESOLVE = 12,TSP_QUIT = 13,TSP_DATE = 14,TSP_DATEREQ = 15,TSP_DATEACK = 16,TSP_TRACEON = 17,TSP_TRACEOFF = 18,TSP_MSITE = 19,TSP_MSITEREQ = 20,TSP_TEST = 21,};
enum MACRO_TUP {TUP = 0x7,SID = 0x8,};
enum MACRO_TXC {TXC_IS_TXC = 0,TXC_IS_RXC = 1,TXC_IS_BAUD = 2,TXC_IS_PLL = 3,};
enum MACRO_UDF {UDF_102 = 0x102,UDF_150 = 0x150,UDF_200 = 0x200,};
enum MACRO_UDP {UDP_CHECKSUM = 0x600,};
enum MACRO_UFS {UFS_FILESIZE_BITS = 41,};
enum MACRO_UID {UID_NOACCESS = 60002,};
enum MACRO_USB {USB_SUCCESS = 0,USB_FAILURE = -1,USB_NO_RESOURCES = -2,USB_NO_BANDWIDTH = -3,USB_PIPE_RESERVED = -4,USB_PIPE_UNSHAREABLE = -5,USB_NOT_SUPPORTED = -6,USB_PIPE_ERROR = -8,USB_PIPE_BUSY = -9,USB_DEV_ONLINE = 1,USB_DEV_DISCONNECTED = 2,USB_DEV_CPR_SUSPEND = 3,USB_DEV_POWERED_DOWN = 4,USB_DEV_POWER_D0 = 1,USB_DEV_POWER_D1 = 5,USB_DEV_POWER_D2 = 6,USB_DEV_POWER_D3 = 4,USB_DEV_OS_POWER_0 = 0,USB_DEV_OS_POWER_1 = 1,USB_DEV_OS_POWER_2 = 2,USB_DEV_OS_POWER_3 = 3,USB_DEV_OS_POWER_OFF = 0,USB_DEV_OS_FULL_POWER = 3,USB_DEV_PWRMASK_D0 = 1,USB_DEV_PWRMASK_D1 = 2,USB_DEV_PWRMASK_D2 = 4,USB_DEV_PWRMASK_D3 = 8,USB_PMCOMP_NO = 5,USB_CONF_ATTR_SELFPWR = 64,USB_CONF_ATTR_REMOTE_WAKEUP = 32,USB_DEVICE_DESCR_SIZE = 18,USB_CONF_DESCR_SIZE = 9,USB_CONF_PWR_DESCR_SIZE = 18,USB_IF_DESCR_SIZE = 9,USB_IF_PWR_DESCR_SIZE = 15,USB_EPT_DESCR_SIZE = 7,USB_EPT_ADDR_MASK = 15,USB_EPT_DIR_MASK = 128,USB_EPT_DIR_OUT = 0,USB_EPT_DIR_IN = 128,USB_EPT_ATTR_CONTROL = 0,USB_EPT_ATTR_ISOCH = 1,USB_EPT_ATTR_BULK = 2,USB_EPT_ATTR_INTR = 3,USB_EPT_ATTR_MASK = 3,USB_MAXSTRINGLEN = 255,USB_PARSE_ERROR = 0,USB_DESCR_TYPE_ANY = -1,USB_DESCR_TYPE_SETUP_DEVICE = 256,USB_DESCR_TYPE_SETUP_CONFIGURATION = 512,USB_DESCR_TYPE_SETUP_STRING = 768,USB_DESCR_TYPE_SETUP_INTERFACE = 1024,USB_DESCR_TYPE_SETUP_ENDPOINT = 1280,USB_DESCR_TYPE_SETUP_CONFPOWER = 1792,USB_DESCR_TYPE_SETUP_IFPOWER = 2048,USB_DESCR_TYPE_DEVICE = 1,USB_DESCR_TYPE_CONFIGURATION = 2,USB_DESCR_TYPE_STRING = 3,USB_DESCR_TYPE_INTERFACE = 4,USB_DESCR_TYPE_ENDPOINT = 5,USB_DESCR_TYPE_CONFIGURATION_POWER = 7,USB_DESCR_TYPE_INTERFACE_POWER = 8,USB_COMBINED_NODE = -1,USB_FLAGS_SLEEP = 1,USB_FLAGS_ENQUEUE = 2,USB_FLAGS_OPEN_EXCL = 4,USB_FLAGS_SHORT_XFER_OK = 8,USB_PIPE_POLICY_V_0 = 0,USB_PIPE_TIMEOUT = 3,USB_CC_NOERROR = 0,USB_CC_CRC = 1,USB_CC_BITSTUFFING = 2,USB_CC_DATA_TOGGLE_MM = 3,USB_CC_STALL = 4,USB_CC_DEV_NOT_RESP = 5,USB_CC_PID_CHECKFAILURE = 6,USB_CC_UNEXP_PID = 7,USB_CC_DATA_OVERRUN = 8,USB_CC_DATA_UNDERRUN = 9,USB_CC_BUFFER_OVERRUN = 10,USB_CC_BUFFER_UNDERRUN = 11,USB_CC_TIMEOUT = 12,USB_CC_UNSPECIFIED_ERR = 65280,USB_DEV_REQ_HOST_TO_DEV = 0,USB_DEV_REQ_DEVICE_TO_HOST = 128,USB_DEV_REQ_TYPE_STANDARD = 0,USB_DEV_REQ_TYPE_CLASS = 32,USB_DEV_REQ_TYPE_VENDOR = 64,USB_DEV_REQ_RECIPIENT_DEVICE = 0,USB_DEV_REQ_RECIPIENT_INTERFACE = 1,USB_DEV_REQ_RECIPIENT_ENDPOINT = 2,USB_DEV_REQ_RECIPIENT_OTHER = 3,USB_REQ_GET_STATUS = 0,USB_REQ_CLEAR_FEATURE = 1,USB_REQ_SET_FEATURE = 3,USB_REQ_SET_ADDRESS = 5,USB_REQ_GET_DESCRIPTOR = 6,USB_REQ_SET_DESCRIPTOR = 7,USB_REQ_GET_CONFIGURATION = 8,USB_REQ_SET_CONFIGURATION = 9,USB_REQ_GET_INTERFACE = 10,USB_REQ_SET_INTERFACE = 11,USB_REQ_SYNC_FRAME = 12,USB_LANG_ID = 1033,USB_ENDPOINT_HALT = 0,USB_DEVICE_REMOTE_WAKEUP = 1,USB_INTERFACE_POWER_D0 = 2,USB_INTERFACE_POWER_D1 = 3,USB_INTERFACE_POWER_D2 = 4,USB_INTERFACE_POWER_D3 = 5,USB_REMOTE_WAKEUP = 2,USB_SELF_POWER = 1,USB_LOG_L0 = 0,USB_LOG_L1 = 1,USB_LOG_L2 = 2,USB_LOG_L3 = 3,USB_LOG_L4 = 4,USB_TOTAL_HOTPLUG_SUCCESS = 1,USB_HOTPLUG_SUCCESS = 2,USB_TOTAL_HOTPLUG_FAILURE = 4,USB_HOTPLUG_FAILURE = 8,};
enum MACRO_USE {USE_DGRAM = 65536,};
enum MACRO_UTS {UTS_UNAME = 0x0,UTS_USTAT = 0x2,UTS_FUSERS = 0x3,};
enum MACRO_VBC {VBC_VBR_FRAMEBASE = 0xFFF000,VBC_VBR_FBSHIFT = 0xC,VBC_MCR_VCONFIG = 0xC,VBC_MCR_TRC = 0x2,VBC_MCR_REN = 0x1,VBC_VCR_RRI = 0x3FF,VBC_VCA_HIRES = 0x2000,VBC_VCA_VRAM = 0x1000,VBC_VCA_VERS = 0xC00,VBC_VCA_VERSHIFT = 0xA,VBC_VCA_CAD = 0x3FF,};
enum MACRO_VER {VER_NDX_LOCAL = 0,VER_NDX_GLOBAL = 1,VER_NDX_LORESERVE = 65280,VER_NDX_ELIMINATE = 65281,VER_FLG_BASE = 1,VER_FLG_WEAK = 2,VER_DEF_NONE = 0,VER_DEF_CURRENT = 1,VER_DEF_NUM = 2,VER_NEED_NONE = 0,VER_NEED_CURRENT = 1,VER_NEED_NUM = 2,};
enum MACRO_VFL {VFL_ENXIO = 0x1,};
enum MACRO_VFS {VFS_NOFORCEOPT = 0x1,VFS_DISPLAY = 0x2,VFS_NODISPLAY = 0x4,VFS_CREATEOPT = 0x8,VFS_RDONLY = 0x1,VFS_NOMNTTAB = 0x2,VFS_NOSUID = 0x8,VFS_REMOUNT = 0x10,VFS_NOTRUNC = 0x20,VFS_UNLINKABLE = 0x40,VFS_PXFS = 0x80,VFS_UNMOUNTED = 0x100,};
enum MACRO_VID {VID_NORM = 0x0,VID_UL = 0x1,VID_BLNK = 0x2,VID_REV = 0x4,VID_DIM = 0x8,VID_BOLD = 0x10,VID_OFF = 0x20,};
enum MACRO_VIM {VIM_FLOPPY = 0x1,VIM_RDONLY = 0x2,};
enum MACRO_VIS {VIS_MAXNAMELEN = 128,VIS_GETIDENTIFIER = 22016,VIS_SETCURSOR = 17944,VIS_GETCURSOR = 17945,VIS_CURSOR_SETCURSOR = 1,VIS_CURSOR_SETPOSITION = 2,VIS_CURSOR_SETHOTSPOT = 4,VIS_CURSOR_SETCOLORMAP = 8,VIS_CURSOR_SETSHAPE = 16,VIS_CURSOR_SETALL = 31,VIS_MOVECURSOR = 17946,VIS_GETCURSORPOS = 17947,VIS_GETCMAP = 22025,VIS_PUTCMAP = 22026,VIS_CONS_MODE_CHANGE = 22027,};
enum MACRO_VOL {VOL_RSV_MAXIDLEN = 256,};
enum MACRO_VSA {VSA_ACL = 0x1,VSA_ACLCNT = 0x2,VSA_DFACL = 0x4,VSA_DFACLCNT = 0x8,};
enum MACRO_VSW {VSW_HASPROTO = 0x1,VSW_CANRWRO = 0x2,};
enum MACRO_VT0 {VT0 = 0,VT1 = 16384,FFDLY = 32768,};
enum MACRO_VTR {VTR_INIT = 0,VTR_FILE = 1,VTR_EVENTMAP = 2,VTR_EVENT = 3,VTR_START = 4,VTR_PAUSE = 5,VTR_RESUME = 6,VTR_INFO = 7,VTR_FLUSH = 8,VTR_RESET = 9,VTR_TEST = 10,VTR_PROCESS = 11,VTR_GET_STRING = 12,VTR_INFO_GLOBAL = 0,VTR_INFO_PERCPU = 1,VTR_NOFORCE = 0,VTR_FORCE = 1,VTR_STATE_NULL = 1,VTR_STATE_READY = 2,VTR_STATE_PAUSE = 4,VTR_STATE_ACTIVE = 8,VTR_STATE_PERPROC = 16,VTR_STATE_HALTED = 32,VTR_PROCESS_NULL = 1,VTR_PROCESS_TRACE = 2,VTR_PROCESS_NOTRACE = 4,};
enum MACRO_XDR {XDR_GET_BYTES_AVAIL = 1,};
enum MACRO_XID {CLGET_XID = 10,CLSET_XID = 11,};
enum MACRO_XON {XON_1 = 0x0,XON_13 = 0x80,};
enum MACRO_XRS {XRS_ID = 0x78727300,};
enum MACRO_XTI {XTI_GENERIC = 0xFFFE,XTI_DEBUG = 0x1,XTI_LINGER = 0x80,XTI_RCVBUF = 0x1002,XTI_RCVLOWAT = 0x1004,XTI_SNDBUF = 0x1001,XTI_SNDLOWAT = 0x1003,};
enum MACRO_YPU {YPU_PROG = 100028,YPU_VERS = 1,YPU_CHANGE = 1,YPU_INSERT = 2,YPU_DELETE = 3,YPU_STORE = 4,};
enum MACRO_ZMH {ZMH_VC = 1,ZMH_DG = 2,ZMH_AUTH = 4,};
enum MACRO_ZSH {ZSH_MAX_RSTANDBY = 6,ZSH_RDONE_MAX = 20,};
enum MACRO_ZSP {ZSP_SYNC = 0x1,ZSP_NRZI = 0x2,ZSP_PLL = 0x4,ZSP_LOOP = 0x8,ZSP_PARITY_SPECIAL = 0x10,ZSP_ECHO = 0x20,};
enum MACRO__CS {_CS_PATH = 65,_CS_LFS_CFLAGS = 68,_CS_LFS_LDFLAGS = 69,_CS_LFS_LIBS = 70,_CS_LFS_LINTFLAGS = 71,_CS_LFS64_CFLAGS = 72,_CS_LFS64_LDFLAGS = 73,_CS_LFS64_LIBS = 74,_CS_LFS64_LINTFLAGS = 75,_CS_XBS5_ILP32_OFF32_CFLAGS = 700,_CS_XBS5_ILP32_OFF32_LDFLAGS = 701,_CS_XBS5_ILP32_OFF32_LIBS = 702,_CS_XBS5_ILP32_OFF32_LINTFLAGS = 703,_CS_XBS5_ILP32_OFFBIG_CFLAGS = 705,_CS_XBS5_ILP32_OFFBIG_LDFLAGS = 706,_CS_XBS5_ILP32_OFFBIG_LIBS = 707,_CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 708,_CS_XBS5_LP64_OFF64_CFLAGS = 709,_CS_XBS5_LP64_OFF64_LDFLAGS = 710,_CS_XBS5_LP64_OFF64_LIBS = 711,_CS_XBS5_LP64_OFF64_LINTFLAGS = 712,_CS_XBS5_LPBIG_OFFBIG_CFLAGS = 713,_CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 714,_CS_XBS5_LPBIG_OFFBIG_LIBS = 715,_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 716,};
enum MACRO__E1 {_E1 = 0x100,_E2 = 0x200,_E3 = 0x400,_E4 = 0x800,_E5 = 0x1000,_E6 = 0x2000,_E7 = 0x4000,_E8 = 0x8000,_E9 = 0x10000,_E10 = 0x20000,_E11 = 0x40000,_E12 = 0x80000,_E13 = 0x100000,_E14 = 0x200000,_E15 = 0x400000,_E16 = 0x800000,_E17 = 0x1000000,_E18 = 0x2000000,_E19 = 0x4000000,_E20 = 0x8000000,_E21 = 0x10000000,_E22 = 0x20000000,_E23 = 0x40000000,_E24 = 0x80000000,};
enum MACRO__IN {_IN_DRIVER = 0x2,};
enum MACRO__LC {_LC_MAGIC = 0x5F1,_LC_VERSION_MAJOR = 0x2,_LC_VERSION_MINOR = 0x0,};
enum MACRO__NL {_NL_NUM_ITEMS = 59,};
enum MACRO__PC {_PC_LINK_MAX = 1,_PC_MAX_CANON = 2,_PC_MAX_INPUT = 3,_PC_NAME_MAX = 4,_PC_PATH_MAX = 5,_PC_PIPE_BUF = 6,_PC_NO_TRUNC = 7,_PC_VDISABLE = 8,_PC_CHOWN_RESTRICTED = 9,_PC_ASYNC_IO = 10,_PC_PRIO_IO = 11,_PC_SYNC_IO = 12,_PC_FILESIZEBITS = 67,_PC_LAST = 67,};
enum MACRO__SC {_SC_ARG_MAX = 1,_SC_CHILD_MAX = 2,_SC_CLK_TCK = 3,_SC_NGROUPS_MAX = 4,_SC_OPEN_MAX = 5,_SC_JOB_CONTROL = 6,_SC_SAVED_IDS = 7,_SC_VERSION = 8,_SC_PASS_MAX = 9,_SC_LOGNAME_MAX = 10,_SC_PAGESIZE = 11,_SC_XOPEN_VERSION = 12,_SC_NPROCESSORS_CONF = 14,_SC_NPROCESSORS_ONLN = 15,_SC_STREAM_MAX = 16,_SC_TZNAME_MAX = 17,_SC_AIO_LISTIO_MAX = 18,_SC_AIO_MAX = 19,_SC_AIO_PRIO_DELTA_MAX = 20,_SC_ASYNCHRONOUS_IO = 21,_SC_DELAYTIMER_MAX = 22,_SC_FSYNC = 23,_SC_MAPPED_FILES = 24,_SC_MEMLOCK = 25,_SC_MEMLOCK_RANGE = 26,_SC_MEMORY_PROTECTION = 27,_SC_MESSAGE_PASSING = 28,_SC_MQ_OPEN_MAX = 29,_SC_MQ_PRIO_MAX = 30,_SC_PRIORITIZED_IO = 31,_SC_PRIORITY_SCHEDULING = 32,_SC_REALTIME_SIGNALS = 33,_SC_RTSIG_MAX = 34,_SC_SEMAPHORES = 35,_SC_SEM_NSEMS_MAX = 36,_SC_SEM_VALUE_MAX = 37,_SC_SHARED_MEMORY_OBJECTS = 38,_SC_SIGQUEUE_MAX = 39,_SC_SIGRT_MIN = 40,_SC_SIGRT_MAX = 41,_SC_SYNCHRONIZED_IO = 42,_SC_TIMERS = 43,_SC_TIMER_MAX = 44,_SC_2_C_BIND = 45,_SC_2_C_DEV = 46,_SC_2_C_VERSION = 47,_SC_2_FORT_DEV = 48,_SC_2_FORT_RUN = 49,_SC_2_LOCALEDEF = 50,_SC_2_SW_DEV = 51,_SC_2_UPE = 52,_SC_2_VERSION = 53,_SC_BC_BASE_MAX = 54,_SC_BC_DIM_MAX = 55,_SC_BC_SCALE_MAX = 56,_SC_BC_STRING_MAX = 57,_SC_COLL_WEIGHTS_MAX = 58,_SC_EXPR_NEST_MAX = 59,_SC_LINE_MAX = 60,_SC_RE_DUP_MAX = 61,_SC_XOPEN_CRYPT = 62,_SC_XOPEN_ENH_I18N = 63,_SC_XOPEN_SHM = 64,_SC_2_CHAR_TERM = 66,_SC_XOPEN_XCU_VERSION = 67,_SC_ATEXIT_MAX = 76,_SC_IOV_MAX = 77,_SC_XOPEN_UNIX = 78,_SC_PAGE_SIZE = 11,_SC_T_IOV_MAX = 79,_SC_PHYS_PAGES = 500,_SC_AVPHYS_PAGES = 501,_SC_COHER_BLKSZ = 503,_SC_SPLIT_CACHE = 504,_SC_ICACHE_SZ = 505,_SC_DCACHE_SZ = 506,_SC_ICACHE_LINESZ = 507,_SC_DCACHE_LINESZ = 508,_SC_ICACHE_BLKSZ = 509,_SC_DCACHE_BLKSZ = 510,_SC_DCACHE_TBLKSZ = 511,_SC_ICACHE_ASSOC = 512,_SC_DCACHE_ASSOC = 513,_SC_MAXPID = 514,_SC_STACK_PROT = 515,_SC_THREAD_DESTRUCTOR_ITERATIONS = 568,_SC_GETGR_R_SIZE_MAX = 569,_SC_GETPW_R_SIZE_MAX = 570,_SC_LOGIN_NAME_MAX = 571,_SC_THREAD_KEYS_MAX = 572,_SC_THREAD_STACK_MIN = 573,_SC_THREAD_THREADS_MAX = 574,_SC_TTY_NAME_MAX = 575,_SC_THREADS = 576,_SC_THREAD_ATTR_STACKADDR = 577,_SC_THREAD_ATTR_STACKSIZE = 578,_SC_THREAD_PRIORITY_SCHEDULING = 579,_SC_THREAD_PRIO_INHERIT = 580,_SC_THREAD_PRIO_PROTECT = 581,_SC_THREAD_PROCESS_SHARED = 582,_SC_THREAD_SAFE_FUNCTIONS = 583,_SC_XOPEN_LEGACY = 717,_SC_XOPEN_REALTIME = 718,_SC_XOPEN_REALTIME_THREADS = 719,_SC_XBS5_ILP32_OFF32 = 720,_SC_XBS5_ILP32_OFFBIG = 721,_SC_XBS5_LP64_OFF64 = 722,_SC_XBS5_LPBIG_OFFBIG = 723,};
enum MACRO__SS {_SS_MAXSIZE = 256,};
enum MACRO__ST {_ST_FSTYPSZ = 16,};
enum MACRO___I {__I_PUSH_NOCTTY = 0x5327,};
typedef char *(*PTF_charP)();
typedef struct _21B5ADE7931223AA804E41EE15A82D4B Rel_entry;
typedef void *SLPHandle;
typedef struct srvurl SLPSrvURL;
enum __ns_flag {ns_f_qr = 0x0,ns_f_opcode = 0x1,ns_f_aa = 0x2,ns_f_tc = 0x3,ns_f_rd = 0x4,ns_f_ra = 0x5,ns_f_z = 0x6,ns_f_ad = 0x7,ns_f_cd = 0x8,ns_f_rcode = 0x9,ns_f_max = 0xA,};
enum __ns_sect {ns_s_qd = 0x0,ns_s_zn = 0x0,ns_s_an = 0x1,ns_s_pr = 0x1,ns_s_ns = 0x2,ns_s_ud = 0x2,ns_s_ar = 0x3,ns_s_max = 0x4,};
enum __ns_type {ns_t_a = 0x1,ns_t_ns = 0x2,ns_t_md = 0x3,ns_t_mf = 0x4,ns_t_cname = 0x5,ns_t_soa = 0x6,ns_t_mb = 0x7,ns_t_mg = 0x8,ns_t_mr = 0x9,ns_t_null = 0xA,ns_t_wks = 0xB,ns_t_ptr = 0xC,ns_t_hinfo = 0xD,ns_t_minfo = 0xE,ns_t_mx = 0xF,ns_t_txt = 0x10,ns_t_rp = 0x11,ns_t_afsdb = 0x12,ns_t_x25 = 0x13,ns_t_isdn = 0x14,ns_t_rt = 0x15,ns_t_nsap = 0x16,ns_t_nsap_ptr = 0x17,ns_t_sig = 0x18,ns_t_key = 0x19,ns_t_px = 0x1A,ns_t_gpos = 0x1B,ns_t_aaaa = 0x1C,ns_t_loc = 0x1D,ns_t_nxt = 0x1E,ns_t_eid = 0x1F,ns_t_nimloc = 0x20,ns_t_srv = 0x21,ns_t_atma = 0x22,ns_t_naptr = 0x23,ns_t_ixfr = 0xFB,ns_t_axfr = 0xFC,ns_t_mailb = 0xFD,ns_t_maila = 0xFE,ns_t_any = 0xFF,ns_t_max = 0x10000,};
typedef void *__va_list;
typedef struct Xfer_Rdy aXFER_RDY;
typedef struct _CC222016AA0BB783D225EB3000BADEC7 adapter_t;
typedef struct aiocb64 aiocb64_t;
typedef struct au_buff au_buff_t;
typedef short au_emod_t;
typedef struct au_mask au_mask_t;
typedef struct audit_stat au_stat_t;
enum auth_stat {AUTH_OK = 0x0,AUTH_BADCRED = 0x1,AUTH_REJECTEDCRED = 0x2,AUTH_BADVERF = 0x3,AUTH_REJECTEDVERF = 0x4,AUTH_TOOWEAK = 0x5,AUTH_INVALIDRESP = 0x6,AUTH_FAILED = 0x7,AUTH_KERB_GENERIC = 0x8,AUTH_TIMEEXPIRE = 0x9,AUTH_TKT_FILE = 0xA,AUTH_DECODE = 0xB,AUTH_NET_ADDR = 0xC,RPCSEC_GSS_NOCRED = 0xD,RPCSEC_GSS_FAILED = 0xE,};
struct authstr_s {char *name;char *res1;char *res2;char *short_desc;char *long_desc;char *attr;};
typedef struct authstr_s authstr_t;
typedef int blksize_t;
struct bootparam {char *bp_argv[8];char bp_strings[100];char bp_dev[2];int bp_ctlr;int bp_unit;int bp_part;char *bp_name;struct boottab *bp_boottab;};
typedef char *bp_path_t;
struct call_list {struct callsave *cl_head;struct callsave *cl_tail;};
typedef struct callout callout_t;
struct cdrom_msf {unsigned char cdmsf_min0;unsigned char cdmsf_sec0;unsigned char cdmsf_frame0;unsigned char cdmsf_min1;unsigned char cdmsf_sec1;unsigned char cdmsf_frame1;};
typedef struct cfs_cid cfs_cid_t;
enum clnt_stat {RPC_SUCCESS = 0x0,RPC_CANTENCODEARGS = 0x1,RPC_CANTDECODERES = 0x2,RPC_CANTSEND = 0x3,RPC_CANTRECV = 0x4,RPC_TIMEDOUT = 0x5,RPC_INTR = 0x12,RPC_UDERROR = 0x17,RPC_VERSMISMATCH = 0x6,RPC_AUTHERROR = 0x7,RPC_PROGUNAVAIL = 0x8,RPC_PROGVERSMISMATCH = 0x9,RPC_PROCUNAVAIL = 0xA,RPC_CANTDECODEARGS = 0xB,RPC_SYSTEMERROR = 0xC,RPC_UNKNOWNHOST = 0xD,RPC_UNKNOWNPROTO = 0x11,RPC_UNKNOWNADDR = 0x13,RPC_NOBROADCAST = 0x15,RPC_RPCBFAILURE = 0xE,RPC_PROGNOTREGISTERED = 0xF,RPC_N2AXLATEFAILURE = 0x16,RPC_TLIERROR = 0x14,RPC_FAILED = 0x10,RPC_INPROGRESS = 0x18,RPC_STALERACHANDLE = 0x19,RPC_CANTCONNECT = 0x1A,RPC_XPRTFAILED = 0x1B,RPC_CANTCREATESTREAM = 0x1C,};
typedef int clockid_t;
struct cprconfig {int cf_magic;int cf_type;char cf_path[256];char cf_fs[256];char cf_devfs[256];char cf_dev_prom[256];int is_cpr_capable;int is_cpr_default;int is_autowakeup_capable;int as_idle;int as_sh;int as_sm;int as_fh;int as_fm;char as_behavior[64];int ttychars_thold;float loadaverage_thold;int diskreads_thold;int nfsreqs_thold;char idlecheck_path[1024];int is_autopm_default;char apm_behavior[64];};
struct crash_hdr {char sanity[10];int timestamp;int mem_size;int seq_num;};
typedef void *cyb_arg_t;
typedef struct cyc_cpu cyc_cpu_t;
typedef struct dacf_op dacf_op_t;
enum db_action {DB_LOOKUP = 0x0,DB_REMOVE = 0x1,DB_ADD = 0x2,DB_FIRST = 0x3,DB_NEXT = 0x4,DB_ALL = 0x5,DB_RESET_NEXT = 0x6,};
enum db_status {DB_SUCCESS = 0x0,DB_NOTFOUND = 0x1,DB_NOTUNIQUE = 0x2,DB_BADTABLE = 0x3,DB_BADQUERY = 0x4,DB_BADOBJECT = 0x5,DB_MEMORY_LIMIT = 0x6,DB_STORAGE_LIMIT = 0x7,DB_INTERNAL_ERROR = 0x8,};
typedef struct dcentry dcentry_t;
typedef struct di_node *di_node_t;
typedef struct di_prop *di_prop_t;
enum dk_mptype {DKT_IPI = 0x0,DKT_SCSI = 0x1,DKT_UNKNOWN = 0x2,};
typedef unsigned long long door_id_t;
typedef char dstring_t;
typedef struct dumphdr dumphdr_t;
typedef struct ea_item ea_item_t;
struct exception {int type;char *name;double arg1;double arg2;double retval;};
typedef struct execenv execenv_t;
struct execstr_s {char *name;char *policy;char *type;char *res1;char *res2;char *id;char *attr;struct execstr_s *next;};
typedef struct execstr_s execstr_t;
struct fbdblinfo {unsigned int dbl_devstate;unsigned int dbl_read;unsigned int dbl_write;unsigned int dbl_display;int dbl_depth;char dbl_wid;};
typedef struct fcp_cmd fcp_cmd_t;
typedef struct fcp_rsp fcp_rsp_t;
struct fd_search {int fds_numentries;struct fd_char *fds_search;};
typedef struct svcfh fhandle_t;
typedef struct file_id file_id_t;
typedef struct filegrp filegrp_t;
typedef char *filename3;
typedef struct flock64 flock64_t;
enum fpclass_t {FP_SNAN = 0x0,FP_QNAN = 0x1,FP_NINF = 0x2,FP_PINF = 0x3,FP_NDENORM = 0x4,FP_PDENORM = 0x5,FP_NZERO = 0x6,FP_PZERO = 0x7,FP_NNORM = 0x8,FP_PNORM = 0x9,};
struct fpollinfo {struct _kthread *fp_thread;struct fpollinfo *fp_next;};
typedef struct fscache fscache_t;
enum fsh4_mode {FSM_DN = 0x0,FSM_DR = 0x1,FSM_DW = 0x2,FSM_DRW = 0x3,};
struct hard_addr {unsigned int rsvd : 8;unsigned int hard_addr : 24;};
typedef struct hid_req_struct hid_req_t;
typedef struct iaadmin iaadmin_t;
typedef struct iaclass iaclass_t;
typedef struct iadpent iadpent_t;
typedef struct iaparms iaparms_t;
typedef struct icb_tag icb_tag_t;
typedef struct if_data if_data_t;
typedef int ihandle_t;
typedef struct ip6_hbh ip6_hbh_t;
struct ip_addr_t {char net;char host;char lh;char impno;};
enum isdn_chan {ISDN_CHAN_NONE = 0x0,ISDN_CHAN_SELF = 0x1,ISDN_CHAN_HOST = 0x2,ISDN_CHAN_CTLR_MGT = 0x3,ISDN_CHAN_TE_MGT = 0x10,ISDN_CHAN_TE_D_TRACE = 0x11,ISDN_CHAN_TE_D = 0x12,ISDN_CHAN_TE_B1 = 0x13,ISDN_CHAN_TE_B2 = 0x14,ISDN_CHAN_NT_MGT = 0x20,ISDN_CHAN_NT_D_TRACE = 0x21,ISDN_CHAN_NT_D = 0x22,ISDN_CHAN_NT_B1 = 0x23,ISDN_CHAN_NT_B2 = 0x24,ISDN_CHAN_PRI_MGT = 0x30,ISDN_CHAN_PRI_D = 0x31,ISDN_CHAN_PRI_B0 = 0x32,ISDN_CHAN_PRI_B1 = 0x33,ISDN_CHAN_PRI_B2 = 0x34,ISDN_CHAN_PRI_B3 = 0x35,ISDN_CHAN_PRI_B4 = 0x36,ISDN_CHAN_PRI_B5 = 0x37,ISDN_CHAN_PRI_B6 = 0x38,ISDN_CHAN_PRI_B7 = 0x39,ISDN_CHAN_PRI_B8 = 0x3A,ISDN_CHAN_PRI_B9 = 0x3B,ISDN_CHAN_PRI_B10 = 0x3C,ISDN_CHAN_PRI_B11 = 0x3D,ISDN_CHAN_PRI_B12 = 0x3E,ISDN_CHAN_PRI_B13 = 0x3F,ISDN_CHAN_PRI_B14 = 0x40,ISDN_CHAN_PRI_B15 = 0x41,ISDN_CHAN_PRI_B16 = 0x42,ISDN_CHAN_PRI_B17 = 0x43,ISDN_CHAN_PRI_B18 = 0x44,ISDN_CHAN_PRI_B19 = 0x45,ISDN_CHAN_PRI_B20 = 0x46,ISDN_CHAN_PRI_B21 = 0x47,ISDN_CHAN_PRI_B22 = 0x48,ISDN_CHAN_PRI_B23 = 0x49,ISDN_CHAN_PRI_B24 = 0x4A,ISDN_CHAN_PRI_B25 = 0x4B,ISDN_CHAN_PRI_B26 = 0x4C,ISDN_CHAN_PRI_B27 = 0x4D,ISDN_CHAN_PRI_B28 = 0x4E,ISDN_CHAN_PRI_B29 = 0x4F,ISDN_CHAN_PRI_B30 = 0x50,ISDN_CHAN_PRI_B31 = 0x51,ISDN_CHAN_AUX0_MGT = 0x100,ISDN_CHAN_AUX0 = 0x101,ISDN_CHAN_AUX1_MGT = 0x102,ISDN_CHAN_AUX1 = 0x103,ISDN_CHAN_AUX2_MGT = 0x104,ISDN_CHAN_AUX2 = 0x105,ISDN_CHAN_AUX3_MGT = 0x106,ISDN_CHAN_AUX3 = 0x107,ISDN_CHAN_AUX4_MGT = 0x108,ISDN_CHAN_AUX4 = 0x109,ISDN_CHAN_AUX5_MGT = 0x10A,ISDN_CHAN_AUX5 = 0x10B,ISDN_CHAN_AUX6_MGT = 0x10C,ISDN_CHAN_AUX6 = 0x10D,ISDN_CHAN_AUX7_MGT = 0x10E,ISDN_CHAN_AUX7 = 0x10F,};
struct keyboards {int id;struct keyboard *table;};
typedef struct _klwp *klwp_id_t;
typedef struct _krwlock krwlock_t;
typedef struct _kthread kthread_t;
typedef struct la_logo la_logo_t;
typedef struct lb_addr lb_addr_t;
typedef struct llc1device llc1dev_t;
struct llc_stats {int llcs_nobuffer;int llcs_multixmt;int llcs_multircv;int llcs_brdcstxmt;int llcs_brdcstrcv;int llcs_blocked;int llcs_pktxmt;int llcs_pktrcv;int llcs_bytexmt;int llcs_bytercv;int llcs_xidxmt;int llcs_xidrcv;int llcs_testxmt;int llcs_testrcv;int llcs_ierrors;int llcs_oerrors;};
typedef union _F99502BFD9E4DD069DB8AE6B087E28E4 lldaddr_t;
enum lock_type {L_PAGELOCK = 0x0,L_PAGEUNLOCK = 0x1,L_PAGERECLAIM = 0x2,};
typedef struct log_ctl log_ctl_t;
typedef struct long_ad long_ad_t;
typedef struct ls_pend ls_pend_t;
typedef struct lswatch lswatch_t;
typedef struct _1186758DF1720BB7F25A7D498E851913 lwpchan_t;
typedef __mbstate_t mbstate_t;
typedef struct mdb_arg mdb_arg_t;
typedef struct mib2_ip mib2_ip_t;
typedef struct ml_unit ml_unit_t;
typedef struct mntinfo mntinfo_t;
typedef struct mntnode mntnode_t;
typedef struct mntopts mntopts_t;
struct modconfig {char drvname[256];char drvclass[256];int major;int num_aliases;struct aliases *ap;};
struct mode_page {unsigned char ps : 1;unsigned char : 1;unsigned char code : 6;unsigned char length;};
struct modlsched {struct mod_ops *sched_modops;char *sched_linkinfo;struct sclass *sched_class;};
typedef unsigned int msgqnum_t;
struct netconfig {char *nc_netid;unsigned int nc_semantics;unsigned int nc_flag;char *nc_protofmly;char *nc_proto;char *nc_device;unsigned int nc_nlookups;char **nc_lookups;unsigned int nc_unused[8];};
struct nfs_owner {int magic;char hname[16];char lowner[8];};
enum nfssys_op {OLD_NFS_SVC = 0x0,OLD_ASYNC_DAEMON = 0x1,EXPORTFS = 0x2,NFS_GETFH = 0x3,OLD_NFS_CNVT = 0x4,NFS_REVAUTH = 0x5,OLD_NFS_FH_TO_FID = 0x6,OLD_LM_SVC = 0x7,KILL_LOCKMGR = 0x8,LOG_FLUSH = 0x9,SVCPOOL_CREATE = 0xA,NFS_SVC = 0xB,LM_SVC = 0xC,};
enum nis_error {NIS_SUCCESS = 0x0,NIS_S_SUCCESS = 0x1,NIS_NOTFOUND = 0x2,NIS_S_NOTFOUND = 0x3,NIS_CACHEEXPIRED = 0x4,NIS_NAMEUNREACHABLE = 0x5,NIS_UNKNOWNOBJ = 0x6,NIS_TRYAGAIN = 0x7,NIS_SYSTEMERROR = 0x8,NIS_CHAINBROKEN = 0x9,NIS_PERMISSION = 0xA,NIS_NOTOWNER = 0xB,NIS_NOT_ME = 0xC,NIS_NOMEMORY = 0xD,NIS_NAMEEXISTS = 0xE,NIS_NOTMASTER = 0xF,NIS_INVALIDOBJ = 0x10,NIS_BADNAME = 0x11,NIS_NOCALLBACK = 0x12,NIS_CBRESULTS = 0x13,NIS_NOSUCHNAME = 0x14,NIS_NOTUNIQUE = 0x15,NIS_IBMODERROR = 0x16,NIS_NOSUCHTABLE = 0x17,NIS_TYPEMISMATCH = 0x18,NIS_LINKNAMEERROR = 0x19,NIS_PARTIAL = 0x1A,NIS_TOOMANYATTRS = 0x1B,NIS_RPCERROR = 0x1C,NIS_BADATTRIBUTE = 0x1D,NIS_NOTSEARCHABLE = 0x1E,NIS_CBERROR = 0x1F,NIS_FOREIGNNS = 0x20,NIS_BADOBJECT = 0x21,NIS_NOTSAMEOBJ = 0x22,NIS_MODFAIL = 0x23,NIS_BADREQUEST = 0x24,NIS_NOTEMPTY = 0x25,NIS_COLDSTART_ERR = 0x26,NIS_RESYNC = 0x27,NIS_FAIL = 0x28,NIS_UNAVAIL = 0x29,NIS_RES2BIG = 0x2A,NIS_SRVAUTH = 0x2B,NIS_CLNTAUTH = 0x2C,NIS_NOFILESPACE = 0x2D,NIS_NOPROC = 0x2E,NIS_DUMPLATER = 0x2F,};
enum nlm_stats {nlm_granted = 0x0,nlm_denied = 0x1,nlm_denied_nolocks = 0x2,nlm_blocked = 0x3,nlm_denied_grace_period = 0x4,nlm_deadlck = 0x5,};
typedef short o_nlink_t;
typedef struct pcadmin pcadmin_t;
struct pcfs_args {int secondswest;int dsttime;int flags;};
typedef struct pcparms pcparms_t;
typedef int phandle_t;
struct port_type {unsigned int port_type : 8;unsigned int rsvd : 24;};
typedef struct prasmap prasmap_t;
typedef struct priovec priovec_t;
struct proc_edge {struct proc_edge *next;int refcount;struct proc_vertex *to_proc;};
typedef struct procset procset_t;
struct profstr_s {char *name;char *res1;char *res2;char *desc;char *attr;};
typedef struct profstr_s profstr_t;
struct prop_info {char *pinf_name;int pinf_len;int pinf_offset;};
typedef struct prusage prusage_t;
typedef struct prwatch prwatch_t;
typedef struct pstatus pstatus_t;
typedef unsigned int pthread_t;
typedef int ptrdiff_t;
typedef long double quadruple;
typedef unsigned int rpcport_t;
typedef unsigned int rpcproc_t;
typedef unsigned int rpcprog_t;
typedef unsigned int rpcprot_t;
enum rpcsys_op {KRPC_REVAUTH = 0x0,};
typedef unsigned int rpcvers_t;
typedef struct rtadmin rtadmin_t;
typedef struct rtdpent rtdpent_t;
typedef struct rtparms rtparms_t;
typedef struct sadb_sa sadb_sa_t;
struct sc_public {short sc_nopreempt;short sc_yield;};
typedef struct siginfo siginfo_t;
typedef struct _250291EC3BC74262394306E05299BF94 ssl_spath;
struct stat_chge {char *mon_name;int state;};
typedef struct statvfs statvfs_t;
typedef struct string_to_int str_int_t;
struct str_mlist {char l_name[9];};
struct streamtab {struct qinit *st_rdinit;struct qinit *st_wrinit;struct qinit *st_muxrinit;struct qinit *st_muxwinit;};
typedef struct swapent swapent_t;
typedef struct swapres swapres_t;
typedef struct swaptable swaptbl_t;
enum symfollow {NO_FOLLOW = 0x0,FOLLOW = 0x1,};
typedef struct sysinfo sysinfo_t;
typedef struct tCapBuf tCapBuf_t;
typedef struct _tnf_ops tnf_ops_t;
struct trap_info;
typedef struct tsadmin tsadmin_t;
typedef struct tsdpent tsdpent_t;
typedef struct tsparms tsparms_t;
typedef struct ufs_acl ufs_acl_t;
typedef struct ufs_fsd ufs_fsd_t;
typedef unsigned int uintptr_t;
struct userstr_s {char *name;char *qualifier;char *res1;char *res2;char *attr;};
typedef struct userstr_s userstr_t;
enum vie_event {VIE_MISSING = 0x0,VIE_EJECT = 0x1,VIE_DEVERR = 0x2,VIE_CLOSE = 0x3,VIE_CANCEL = 0x4,VIE_NEWLABEL = 0x5,VIE_INSERT = 0x6,VIE_GETATTR = 0x7,VIE_SETATTR = 0x8,VIE_INUSE = 0x9,VIE_CHECK = 0xA,VIE_REMOVED = 0xB,VIE_SYMNAME = 0xC,VIE_SYMDEV = 0xD,VIE_REMOUNT = 0xE,};
typedef unsigned int wctrans_t;
enum xprt_stat {XPRT_DIED = 0x0,XPRT_MOREREQS = 0x1,XPRT_IDLE = 0x2,};
typedef struct _BDBAD8C22C982B900870BBCDB0629DB6 Elf_Data;
typedef void Elf_Void;
typedef struct _FN_ctx FN_ctx_t;
typedef struct _FN_ref FN_ref_t;
typedef int LayoutId;
typedef struct _601AB9009B78F952A53B6D0C69238ED9 LclError;
typedef struct link_map Link_map;
enum MACRO_AD {AD_HALT = 0,AD_BOOT = 1,AD_IBOOT = 2,AD_SBOOT = 3,AD_SIBOOT = 4,AD_POWEROFF = 6,AD_NOSYNC = 7,AD_COMPRESS = 0,AD_FORCE = 1,AD_CHECK = 2,AD_REUSEINIT = 3,AD_REUSABLE = 4,AD_REUSEFINI = 5,AD_FTRACE_START = 1,AD_FTRACE_STOP = 2,};
enum MACRO_AF {AF_UNSPEC = 0,AF_UNIX = 1,AF_INET = 2,AF_IMPLINK = 3,AF_PUP = 4,AF_CHAOS = 5,AF_NS = 6,AF_NBS = 7,AF_ECMA = 8,AF_DATAKIT = 9,AF_CCITT = 10,AF_SNA = 11,AF_DECnet = 12,AF_DLI = 13,AF_LAT = 14,AF_HYLINK = 15,AF_APPLETALK = 16,AF_NIT = 17,AF_802 = 18,AF_OSI = 19,AF_X25 = 20,AF_OSINET = 21,AF_GOSIP = 22,AF_IPX = 23,AF_ROUTE = 24,AF_LINK = 25,AF_INET6 = 26,AF_KEY = 27,AF_MAX = 27,};
enum MACRO_AI {AI_PASSIVE = 0x8,AI_CANONNAME = 0x10,AI_NUMERICHOST = 0x20,AI_V4MAPPED = 0x1,AI_ALL = 0x2,AI_ADDRCONFIG = 0x4,AI_DEFAULT = 0x5,};
enum MACRO_AO {AO = 245,};
enum MACRO_AP {AP_VERSION = 0,};
enum MACRO_AQ {AQ_HIWATER = 100,AQ_MAXHIGH = 10000,AQ_LOWATER = 10,AQ_BUFSZ = 1024,AQ_MAXBUFSZ = 1048576,AQ_DELAY = 20,AQ_MAXDELAY = 20000,};
enum MACRO_AR {AR_IOCTL = 0x4100,AR_ENTRY_ADD = 0x4101,AR_ENTRY_DELETE = 0x4102,AR_ENTRY_QUERY = 0x4103,AR_XMIT_REQUEST = 0x4104,AR_XMIT_TEMPLATE = 0x4105,AR_ENTRY_SQUERY = 0x4106,AR_MAPPING_ADD = 0x4107,AR_CLIENT_NOTIFY = 0x4108,AR_INTERFACE_UP = 0x4109,AR_INTERFACE_DOWN = 0x410A,AR_XMIT_RESPONSE = 0x410B,AR_INTERFACE_ON = 0x410C,AR_INTERFACE_OFF = 0x410D,AR_DLPIOP_DONE = 0x410E,};
enum MACRO_AS {AS_PAGLCK = 0x80,AS_CLAIMGAP = 0x40,AS_UNMAPWAIT = 0x20,AS_LREP_LINKEDLIST = 0x0,AS_LREP_SKIPLIST = 0x1,};
enum MACRO_AT {AT_TYPE = 0x1,AT_MODE = 0x2,AT_UID = 0x4,AT_GID = 0x8,AT_FSID = 0x10,AT_NODEID = 0x20,AT_NLINK = 0x40,AT_SIZE = 0x80,AT_ATIME = 0x100,AT_MTIME = 0x200,AT_CTIME = 0x400,AT_RDEV = 0x800,AT_BLKSIZE = 0x1000,AT_NBLOCKS = 0x2000,AT_VCODE = 0x4000,AT_ALL = 0x7FFF,AT_STAT = 0xFFE,AT_TIMES = 0x700,AT_NOSET = 0x7871,};
enum MACRO_AU {AU_NOAUDITID = -2,AU_NULL = 0,AU_FREAD = 1,AU_FWRITE = 2,AU_FACCESS = 4,AU_FMODIFY = 8,AU_FCREATE = 16,AU_FDELETE = 32,AU_CLOSE = 64,AU_PROCESS = 128,AU_NET = 256,AU_IPC = 512,AU_NONAT = 1024,AU_ADMIN = 2048,AU_LOGIN = 4096,AU_TFM = 8192,AU_APPL = 16384,AU_SETL = 32768,AU_IFLOAT = 65536,AU_PRIV = 131072,AU_MAC_RW = 262144,AU_XCONN = 524288,AU_XCREATE = 1048576,AU_XDELETE = 2097152,AU_XIFLOAT = 4194304,AU_XPRIVS = 8388608,AU_XPRIVF = 16777216,AU_XMOVE = 33554432,AU_XDACF = 67108864,AU_XMACF = 134217728,AU_XSECATTR = 268435456,AU_IOCTL = 536870912,AU_EXEC = 1073741824,AU_OTHER = -2147483648,AU_ALL = -1,};
enum MACRO_AV {AV_SPARC_HWMUL_32x32 = 1,AV_SPARC_HWDIV_32x32 = 2,AV_SPARC_HWFSMULD = 4,};
enum MACRO_B0 {B0 = 0,B50 = 1,B75 = 2,};
enum MACRO_BA {BA_DYNAMIC = 0,BA_PHDR = 1,BA_PHNUM = 2,BA_PHENT = 3,BA_ENTRY = 4,BA_PAGESZ = 5,BA_LPAGESZ = 6,BA_LDELF = 7,BA_LDSHDR = 8,BA_LDNAME = 9,BA_BSS = 10,BA_IFLUSH = 11,BA_CPU = 12,BA_MMU = 13,BA_GOTADDR = 14,BA_NEXTGOT = 15,BA_NUM = 16,};
enum MACRO_BC {BC_BASE_MAX = 99,BC_DIM_MAX = 2048,BC_SCALE_MAX = 99,BC_STRING_MAX = 1000,};
enum MACRO_BO {BO_NO_ALIGN = 0x1000,BO_ALIGN_L3 = 0x1000,BO_ALIGN_L2 = 0x40000,BO_ALIGN_L1 = 0x1000000,BO_VERSION = 0x9,};
enum MACRO_BT {BT_UISHIFT = 5,BT_NBIPUI = 32,BT_UIMASK = 31,};
enum MACRO_CB {CB_PROG = 100302,CB_VERS = 1,};
enum MACRO_CC {CC_SET_OPTIONS = 1,CC_GET_OPTIONS = 2,CC_SET_GLOBAL_PATH = 3,CC_GET_GLOBAL_PATH = 4,CC_SET_PROCESS_PATH = 5,CC_GET_PROCESS_PATH = 6,CC_GLOBAL_PATH = 1,CC_PROCESS_PATH = 2,CC_GLOBAL_SETID = 4,CC_PROCESS_SETID = 8,CC_GLOBAL_LOG = 16,CC_OPTIONS = 31,};
enum MACRO_CD {CD_INT = 0x40,};
enum MACRO_CE {CE_CONT = 0,CE_NOTE = 1,CE_WARN = 2,CE_PANIC = 3,CE_IGNORE = 4,};
enum MACRO_CG {CG_MAGIC = 0x90255,};
enum MACRO_CK {CK_CHECKSUM = 0,CK_MAKESUM = 1,};
enum MACRO_CL {CL_TCPI_V1 = 1,};
enum MACRO_CM {CM = 0x5D,};
enum MACRO_CN {CN_NOCACHE = 0x1,CN_DESTROY = 0x2,CN_ROOT = 0x4,CN_IDLE = 0x8,CN_NEEDOPEN = 0x10,CN_UPDATED = 0x40,};
enum MACRO_CP {CP_BIT = 0x20,};
enum MACRO_CS {CS = 0x4A,};
enum MACRO_CY {CY_LOW_LEVEL = 0,CY_LOCK_LEVEL = 1,CY_HIGH_LEVEL = 2,CY_SOFT_LEVELS = 2,CY_LEVELS = 3,};
enum MACRO_DA {DA_FREENAME = 1,};
enum MACRO_DB {DB_NAME_LEN = 15,};
enum MACRO_DC {DC_GETFLAGS = 0,DC_SETFLAGS = 1,DC_CASE = 1,DC_STD = 1,};
enum MACRO_DF {DF_P1_LAZYLOAD = 0x1,DF_P1_GROUPPERM = 0x2,DF_1_NOW = 0x1,DF_1_GLOBAL = 0x2,DF_1_GROUP = 0x4,DF_1_NODELETE = 0x8,DF_1_LOADFLTR = 0x10,DF_1_INITFIRST = 0x20,DF_1_NOOPEN = 0x40,DF_1_ORIGIN = 0x80,DF_1_DIRECT = 0x100,DF_1_TRANS = 0x200,DF_1_INTERPOSE = 0x400,DF_1_NODEFLIB = 0x800,DF_1_NODUMP = 0x1000,DF_1_CONFALT = 0x2000,DF_1_ENDFILTEE = 0x4000,};
enum MACRO_DI {DI_MAGIC = 0xDFDF,DI_BUS_OPS = 0x1,DI_CB_OPS = 0x2,DI_STREAM_OPS = 0x4,DI_PROP_DRV_LIST = 0x0,DI_PROP_SYS_LIST = 0x1,DI_PROP_GLB_LIST = 0x2,DI_PROP_HW_LIST = 0x3,};
enum MACRO_DK {DK_LABEL_LOC = 0,};
enum MACRO_DL {DL = 0x4E,};
enum MACRO_DM {DM_BATCH = 0x1,DM_ELABEL = 0x2,DM_FORMAT = 0x4,DM_FORMFS = 0x8,DM_WLABEL = 0x10,DM_OLABEL = 0x20,};
enum MACRO_DN {DN_CONF_PARSED = 0x1,DN_DEVI_MADE = 0x2,DN_WALKED_TREE = 0x4,DN_DEVS_ATTACHED = 0x8,DN_BUSY_LOADING = 0x10,DN_BUSY_UNLOADING = 0x20,DN_TAKEN_GETUDEV = 0x40,DN_BUSY_CHANGING_BITS = 0x30,};
enum MACRO_DO {DO = 253,};
enum MACRO_DP {DP_POLL = 53249,DP_ISPOLLED = 53250,};
enum MACRO_DQ {DQ_FTIMELIMIT = 604800,DQ_BTIMELIMIT = 604800,DQ_ERROR = 1,DQ_MOD = 4,DQ_BLKS = 16,DQ_FILES = 32,DQ_TRANS = 64,};
enum MACRO_DR {DR_NEWHEADER = 1,DR_INODEINFO = 2,DR_REDUMP = 4,DR_TRUEINC = 8,DR_HASMETA = 16,};
enum MACRO_DT {DT_NULL = 0,DT_NEEDED = 1,DT_PLTRELSZ = 2,DT_PLTGOT = 3,DT_HASH = 4,DT_STRTAB = 5,DT_SYMTAB = 6,DT_RELA = 7,DT_RELASZ = 8,DT_RELAENT = 9,DT_STRSZ = 10,DT_SYMENT = 11,DT_INIT = 12,DT_FINI = 13,DT_SONAME = 14,DT_RPATH = 15,DT_SYMBOLIC = 16,DT_REL = 17,DT_RELSZ = 18,DT_RELENT = 19,DT_PLTREL = 20,DT_DEBUG = 21,DT_TEXTREL = 22,DT_JMPREL = 23,DT_MAXPOSTAGS = 24,DT_DEPRECATED_SPARC_REGISTER = 117440513,DT_VALRNGLO = 1879047424,DT_CHECKSUM = 1879047672,DT_PLTPADSZ = 1879047673,DT_MOVEENT = 1879047674,DT_MOVESZ = 1879047675,DT_FEATURE_1 = 1879047676,DT_POSFLAG_1 = 1879047677,DT_SYMINSZ = 1879047678,DT_SYMINENT = 1879047679,DT_VALRNGHI = 1879047679,DT_ADDRRNGLO = 1879047680,DT_CONFIG = 1879047930,DT_DEPAUDIT = 1879047931,DT_AUDIT = 1879047932,DT_PLTPAD = 1879047933,DT_MOVETAB = 1879047934,DT_SYMINFO = 1879047935,DT_ADDRRNGHI = 1879047935,DT_RELACOUNT = 1879048185,DT_RELCOUNT = 1879048186,DT_FLAGS_1 = 1879048187,DT_VERDEF = 1879048188,DT_VERDEFNUM = 1879048189,DT_VERNEED = 1879048190,DT_VERNEEDNUM = 1879048191,DT_LOPROC = 1879048192,DT_AUXILIARY = 2147483645,DT_USED = 2147483646,DT_FILTER = 2147483647,DT_HIPROC = 2147483647,};
enum MACRO_DV {DV_NT_A = -8,DV_NT_K = -9,};
enum MACRO_EB {EB_NULL = 0,EB_DYNAMIC = 1,EB_LDSO_BASE = 2,EB_ARGV = 3,EB_ENVP = 4,EB_AUXV = 5,EB_DEVZERO = 6,EB_PAGESIZE = 7,EB_MAX = 8,};
enum MACRO_EC {EC = 247,};
enum MACRO_EF {EF_IA_64_MASKOS = 0xF,EF_IA_64_ABI64 = 0x10,EF_IA_64_ARCH = 0xFF000000,};
enum MACRO_EI {EI_NIDENT = 16,EI_MAG0 = 0,EI_MAG1 = 1,EI_MAG2 = 2,EI_MAG3 = 3,EI_CLASS = 4,EI_DATA = 5,EI_VERSION = 6,EI_PAD = 7,};
enum MACRO_EL {EL = 248,};
enum MACRO_EM {EM_NONE = 0,EM_M32 = 1,EM_SPARC = 2,EM_386 = 3,EM_68K = 4,EM_88K = 5,EM_486 = 6,EM_860 = 7,EM_MIPS = 8,EM_UNKNOWN9 = 9,EM_MIPS_RS3_LE = 10,EM_RS6000 = 11,EM_UNKNOWN12 = 12,EM_UNKNOWN13 = 13,EM_UNKNOWN14 = 14,EM_PA_RISC = 15,EM_nCUBE = 16,EM_VPP500 = 17,EM_SPARC32PLUS = 18,EM_UNKNOWN19 = 19,EM_PPC = 20,EM_SPARCV9 = 43,EM_IA_64 = 50,EM_NUM = 51,};
enum MACRO_EN {EN_BINARY = 1,EN_CRYPT = 2,EN_XDR = 4,EN_MODIFIED = 8,EN_ASN1 = 64,};
enum MACRO_EP {EP_RAW = 0,EP_EXACCT_OBJECT = 1,};
enum MACRO_ER {ER_EXT_ID_LOC = 8,};
enum MACRO_ES {ES_RSM_MAX_DRIVES = 7,ES_RSM_MAX_PWMS = 2,ES_RSM_MAX_FANS = 1,ES_RSM_MAX_TEMPS = 1,};
enum MACRO_ET {ET_NONE = 0,ET_REL = 1,ET_EXEC = 2,ET_DYN = 3,ET_CORE = 4,ET_NUM = 5,ET_LOPROC = 65280,ET_HIPROC = 65535,};
enum MACRO_EV {EV_NONE = 0,EV_CURRENT = 1,EV_NUM = 2,};
enum MACRO_EW {EW_PARTIAL = 0x1,EW_INTERVAL = 0x2,EW_FINAL = 0x4,};
enum MACRO_EX {EX_OK = 0,EX__BASE = 64,EX_USAGE = 64,EX_DATAERR = 65,EX_NOINPUT = 66,EX_NOUSER = 67,EX_NOHOST = 68,EX_UNAVAILABLE = 69,EX_SOFTWARE = 70,EX_OSERR = 71,EX_OSFILE = 72,EX_CANTCREAT = 73,EX_IOERR = 74,EX_TEMPFAIL = 75,EX_PROTOCOL = 76,EX_NOPERM = 77,EX_CONFIG = 78,EX_NOTFOUND = 79,EX__MAX = 79,};
enum MACRO_FA {FA_CLASS = 0x400,FA_UMLAUT = 0x400,FA_CFLEX = 0x401,FA_TILDE = 0x402,FA_CEDILLA = 0x403,FA_ACUTE = 0x404,FA_GRAVE = 0x405,};
enum MACRO_FB {FB_ATTR_NDEVSPECIFIC = 8,FB_ATTR_NEMUTYPES = 4,FB_ATTR_AUTOINIT = 1,FB_ATTR_DEVSPECIFIC = 2,};
enum MACRO_FC {FC_HWERR = 0x1,FC_ALIGN = 0x2,FC_OBJERR = 0x3,FC_PROT = 0x4,FC_NOMAP = 0x5,FC_NOSUPPORT = 0x6,};
enum MACRO_FD {FD_SETSIZE = 1024,};
enum MACRO_FE {FE_PAIR_NONE = 0,FE_PAIR_SET = 1,FE_PAIR_DELTA = 2,FE_PAIR_ABSOLUTE = 3,};
enum MACRO_FN {FN_E_SPI_CONTINUE = 130,FN_E_SPI_FOLLOW_LINK = 131,FN_SPI_LEAVE_TERMINAL_LINK = 1,FN_CTX_SVC_FUNC_ARRAY_SIZE = 21,};
enum MACRO_FP {FP_DISABLE = 0,FP_ENABLE = 1,FP_CLEAR = 0,FP_SET = 1,FP_X_INV = 16,FP_X_OFL = 8,FP_X_UFL = 4,FP_X_DZ = 2,FP_X_IMP = 1,};
enum MACRO_FS {FS_MAGIC = 0x11954,};
enum MACRO_FT {FT_EXIST = 0x0,FT_DELETE = 0x2,FT_FEDT = 0x3,FT_BACKUP = 0x5,};
enum MACRO_G2 {G2 = 5,};
enum MACRO_G3 {G3 = 6,};
enum MACRO_G4 {G4 = 7,G5 = 8,};
enum MACRO_G6 {G6 = 9,};
enum MACRO_G7 {G7 = 10,};
enum MACRO_GA {GA = 249,};
enum MACRO_HS {HS_SECTOR_SIZE = 2048,HS_SECTOR_SHIFT = 11,HS_SYSAREA_SEC = 0,HS_VOLDESC_SEC = 16,};
enum MACRO_IA {IA_OFF_QUANTUM = 1,IA_OFF_PRIORITY = 20,};
enum MACRO_IC {IC = 0x4F,};
enum MACRO_IE {IE_TE_MEMSIZE = 0x20000,IE_IORAM_SIZE = 0x1000,};
enum MACRO_IF {IF_NAMESIZE = 32,};
enum MACRO_IL {IL = 0x50,};
enum MACRO_IN {IN_CLASSA_NET = 0xFF000000,IN_CLASSA_NSHIFT = 0x18,IN_CLASSA_HOST = 0xFFFFFF,IN_CLASSA_MAX = 0x80,IN_CLASSB_NET = 0xFFFF0000,IN_CLASSB_NSHIFT = 0x10,IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x10000,IN_CLASSC_NET = 0xFFFFFF00,IN_CLASSC_NSHIFT = 0x8,IN_CLASSC_HOST = 0xFF,IN_CLASSD_NET = 0xF0000000,IN_CLASSD_NSHIFT = 0x1C,IN_CLASSD_HOST = 0xFFFFFFF,};
enum MACRO_IP {IP_OPTIONS = 1,IP_HDRINCL = 2,IP_TOS = 3,IP_TTL = 4,IP_RECVOPTS = 5,IP_RECVRETOPTS = 6,IP_RECVDSTADDR = 7,IP_RETOPTS = 8,IP_MULTICAST_IF = 16,IP_MULTICAST_TTL = 17,IP_MULTICAST_LOOP = 18,IP_ADD_MEMBERSHIP = 19,IP_DROP_MEMBERSHIP = 20,IP_SEC_OPT = 34,};
enum MACRO_IS {IS_PTSTTY = 0x4,};
enum MACRO_KB {KB_KLUNK = 0x0,KB_VT100 = 0x1,KB_SUN2 = 0x2,KB_VT220 = 0x81,KB_VT220I = 0x82,};
enum MACRO_KM {KM_SLEEP = 0x0,KM_NOSLEEP = 0x1,KM_PANIC = 0x2,KM_VMFLAGS = 0xFF,KM_FLAGS = 0xFFFF,};
enum MACRO_KV {KV_ESCAPE = 92,KV_ADD_KEYS = 16,KV_WILDCHAR = 42,KV_FLAG_NONE = 0,KV_FLAG_REQUIRED = 1,};
enum MACRO_LA {LA_FLG_BINDTO = 0x1,LA_FLG_BINDFROM = 0x2,LA_SYMB_NOPLTENTER = 0x1,LA_SYMB_NOPLTEXIT = 0x2,LA_SYMB_STRUCTCALL = 0x4,LA_SYMB_DLSYM = 0x8,LA_SYMB_ALTVALUE = 0x10,LA_SER_ORIG = 0x1,LA_SER_LIBPATH = 0x2,LA_SER_RUNPATH = 0x4,LA_SER_CONFIG = 0x8,LA_SER_DEFAULT = 0x40,LA_SER_SECURE = 0x80,LA_ACT_CONSISTENT = 0x0,LA_ACT_ADD = 0x1,LA_ACT_DELETE = 0x2,};
enum MACRO_LC {LC_CTYPE = 0,LC_NUMERIC = 1,LC_TIME = 2,LC_COLLATE = 3,LC_MONETARY = 4,LC_MESSAGES = 5,LC_ALL = 6,};
enum MACRO_LD {LD_SUP_DERIVED = 0x1,LD_SUP_INHERITED = 0x2,LD_SUP_EXTRACTED = 0x4,};
enum MACRO_LI {LI_SPPA = 0x2,};
enum MACRO_LM {LM_ID_BASE = 0x0,LM_ID_LDSO = 0x1,LM_ID_NUM = 0x2,LM_ID_NEWLM = 0xFF,};
enum MACRO_LS {LS_ADAPTIVE_MUTEX_SPIN = 0,LS_ADAPTIVE_MUTEX_BLOCK = 1,LS_SPIN_LOCK = 2,LS_THREAD_LOCK = 3,LS_RW_WRITER_BY_WRITER = 4,LS_RW_WRITER_BY_READERS = 5,LS_RW_READER_BY_WRITER = 6,LS_RW_READER_BY_WRITE_WANTED = 7,LS_ADAPTIVE_MUTEX_HOLD = 32,LS_SPIN_LOCK_HOLD = 33,LS_RW_WRITER_HOLD = 34,LS_RW_READER_HOLD = 35,LS_PROFILE_INTR = 56,LS_ERROR_BASE = 60,LS_RECURSION_DETECTED = 60,LS_ENTER_FAILED = 61,LS_EXIT_FAILED = 62,LS_RECORD_FAILED = 63,LS_MAX_EVENTS = 64,};
enum MACRO_MA {MA_READ = 0x4,MA_WRITE = 0x2,MA_EXEC = 0x1,MA_SHARED = 0x8,MA_ANON = 0x40,MA_ISM = 0x80,MA_BREAK = 0x10,MA_STACK = 0x20,};
enum MACRO_MC {MC_SYNC = 1,MC_LOCK = 2,MC_UNLOCK = 3,MC_ADVISE = 4,MC_LOCKAS = 5,MC_UNLOCKAS = 6,};
enum MACRO_MD {MD_CREATEDONE = 0x1,MD_POPULATED = 0x2,MD_FILE = 0x4,MD_FASTSYMLNK = 0x8,MD_PACKED = 0x10,MD_INVALREADDIR = 0x40,MD_PUTPAGE = 0x200,MD_FREE = 0x400,MD_PUSHDONE = 0x800,MD_MAPPING = 0x1000,MD_ACL = 0x2000,MD_ACLDIR = 0x4000,MD_LOCALMTIME = 0x8000,MD_LOCALCTIME = 0x10000,MD_LOCALFILENO = 0x20000,MD_NEEDATTRS = 0x40000,};
enum MACRO_ME {ME_FREE = 0x1,ME_HASH = 0x2,ME_CANCEL = 0x4,ME_AGE = 0x8,ME_LIST = 0x10,ME_ROLL = 0x20,};
enum MACRO_MI {MI_MIN_DEV = 2,MI_COPY_IN = 1,MI_COPY_OUT = 2,};
enum MACRO_MM {MM_MXLABELLN = 25,MM_MXTAGLN = 32,MM_MXTXTLN = 512,MM_MXACTLN = 512,MM_NULL = 0,MM_RECOVER = 256,MM_NRECOV = 512,MM_PRINT = 64,MM_NOSEV = 0,MM_HALT = 1,MM_NULLLBL = 0,MM_NULLSEV = 0,MM_NULLMC = 0,MM_NULLTXT = 0,MM_NULLACT = 0,MM_NULLTAG = 0,MM_NOTOK = -1,MM_OK = 0,MM_NOMSG = 1,MM_NOCON = 4,};
enum MACRO_MO {MO_SET = 0x1,MO_NODISPLAY = 0x2,MO_HASVALUE = 0x4,MO_IGNORE = 0x8,MO_DEFAULT = 0x1,MO_TAG = 0x10,MO_EMPTY = 0x20,};
enum MACRO_MQ {MQ_ENABLED = 0x1,};
enum MACRO_MS {MS_OLDSYNC = 0x0,MS_SYNC = 0x4,MS_ASYNC = 0x1,MS_INVALIDATE = 0x2,};
enum MACRO_MT {MT_FREE = 0,MT_DATA = 1,};
enum MACRO_NA {NA_USER_OBJ = 0x1,NA_USER = 0x2,NA_GROUP_OBJ = 0x4,NA_GROUP = 0x8,NA_CLASS_OBJ = 0x10,NA_OTHER_OBJ = 0x20,NA_ACL_DEFAULT = 0x1000,NA_READ = 0x4,NA_WRITE = 0x2,NA_EXEC = 0x1,NA_ACL = 0x1,NA_ACLCNT = 0x2,NA_DFACL = 0x4,NA_DFACLCNT = 0x8,};
enum MACRO_NC {NC_TPI_CLTS = 1,NC_TPI_COTS = 2,NC_TPI_COTS_ORD = 3,NC_TPI_RAW = 4,NC_NOFLAG = 0,NC_VISIBLE = 1,NC_BROADCAST = 2,};
enum MACRO_ND {ND_HOSTSERV = 0,ND_HOSTSERVLIST = 1,ND_ADDR = 2,ND_ADDRLIST = 3,ND_TRY_AGAIN = -5,ND_NO_RECOVERY = -4,ND_NO_DATA = -3,ND_NO_ADDRESS = -3,ND_BADARG = -2,ND_NOMEM = -1,ND_OK = 0,ND_NOHOST = 1,ND_NOSERV = 2,ND_NOSYM = 3,ND_OPEN = 4,ND_ACCESS = 5,ND_UKNWN = 6,ND_NOCTRL = 7,ND_FAILCTRL = 8,ND_SYSTEM = 9,ND_SET_BROADCAST = 1,ND_SET_RESERVEDPORT = 2,ND_CHECK_RESERVEDPORT = 3,ND_MERGEADDR = 4,};
enum MACRO_NI {NI_MAXHOST = 1025,NI_MAXSERV = 32,NI_NOFQDN = 1,NI_NUMERICHOST = 2,NI_NAMEREQD = 4,NI_NUMERICSERV = 8,NI_DGRAM = 16,};
enum MACRO_NL {NL_SETD = 1,NL_CAT_LOCALE = -1,};
enum MACRO_NO {NO_LOCKS_HELD = 1,NO_COMPETING_THREADS = 1,};
enum MACRO_NS {NS_PACKETSZ = 512,NS_MAXDNAME = 1025,NS_MAXCDNAME = 255,NS_MAXLABEL = 63,NS_HFIXEDSZ = 12,NS_QFIXEDSZ = 4,NS_RRFIXEDSZ = 10,NS_INT32SZ = 4,NS_INT16SZ = 2,NS_INT8SZ = 1,NS_INADDRSZ = 4,NS_IN6ADDRSZ = 16,NS_CMPRSFLGS = 192,NS_DEFAULTPORT = 53,NS_KEY_TYPEMASK = 49152,NS_KEY_TYPE_AUTH_CONF = 0,NS_KEY_TYPE_CONF_ONLY = 32768,NS_KEY_TYPE_AUTH_ONLY = 16384,NS_KEY_TYPE_NO_KEY = 49152,NS_KEY_NO_AUTH = 32768,NS_KEY_NO_CONF = 16384,NS_KEY_EXPERIMENTAL = 8192,NS_KEY_RESERVED3 = 4096,NS_KEY_RESERVED4 = 2048,NS_KEY_USERACCOUNT = 1024,NS_KEY_ENTITY = 512,NS_KEY_ZONEKEY = 256,NS_KEY_IPSEC = 128,NS_KEY_EMAIL = 64,NS_KEY_RESERVED10 = 32,NS_KEY_RESERVED11 = 16,NS_KEY_SIGNATORYMASK = 15,NS_KEY_RESERVED_BITMASK = 6192,NS_ALG_MD5RSA = 1,NS_ALG_EXPIRE_ONLY = 253,NS_ALG_PRIVATE_OID = 254,NS_MD5RSA_MIN_BITS = 512,NS_MD5RSA_MAX_BITS = 2552,NS_MD5RSA_MAX_BYTES = 5107,NS_MD5RSA_MAX_BASE64 = 6812,NS_SIG_TYPE = 0,NS_SIG_ALG = 2,NS_SIG_LABELS = 3,NS_SIG_OTTL = 4,NS_SIG_EXPIR = 8,NS_SIG_SIGNED = 12,NS_SIG_FOOT = 16,NS_SIG_SIGNER = 18,NS_NXT_BITS = 8,};
enum MACRO_NT {NT_PRSTATUS = 1,NT_PRFPREG = 2,NT_PRPSINFO = 3,NT_PRXREG = 4,NT_PLATFORM = 5,NT_AUXV = 6,NT_GWINDOWS = 7,NT_ASRS = 8,NT_PSTATUS = 10,NT_PSINFO = 13,NT_PRCRED = 14,NT_UTSNAME = 15,NT_LWPSTATUS = 16,NT_LWPSINFO = 17,};
enum MACRO_O0 {O0 = 11,};
enum MACRO_O1 {O1 = 12,};
enum MACRO_O2 {O2 = 13,};
enum MACRO_O3 {O3 = 14,};
enum MACRO_O4 {O4 = 15,O5 = 16,};
enum MACRO_O6 {O6 = 17,};
enum MACRO_O7 {O7 = 18,};
enum MACRO_OK {R_OK = 4,W_OK = 2,X_OK = 1,F_OK = 0,};
enum MACRO_ON {CTS_ON = 0x20,DSR_ON = 0x80,RTS_ON = 0x1,};
enum MACRO_PB {PB_BEGIN_MONITOR = 28673,PB_END_MONITOR = 28674,PB_CREATE_BUTTON_EVENT = 28675,PB_GET_EVENTS = 28676,PB_BUTTON_PRESS = 1,};
enum MACRO_PC {PC_VERSION = 1,PC_GETCID = 0,PC_GETCLINFO = 1,PC_SETPARMS = 2,PC_GETPARMS = 3,PC_ADMIN = 4,PC_GETPRIRANGE = 5,PC_CLNULL = -1,PC_CLNMSZ = 16,};
enum MACRO_PD {PD = 0x40,};
enum MACRO_PF {PF_R = 0x4,PF_W = 0x2,PF_X = 0x1,PF_MASKPROC = 0xF0000000,};
enum MACRO_PG {PG_REFERENCED = 0x2,PG_MODIFIED = 0x1,PG_HWMAPPED = 0x4,};
enum MACRO_PH {PH_FROM_PROM = 0x1,};
enum MACRO_PI {PI_INSTALLED = 0,PI_PARTIAL = 1,PI_PRESVR4 = 2,PI_UNKNOWN = 3,PI_SPOOLED = 4,};
enum MACRO_PM {PM_LEVEL_UNKNOWN = -1,};
enum MACRO_PP {PP_SHIFT = 8,PP_PAPER_OUT = 1,PP_ERROR = 2,PP_BUSY = 4,PP_SELECT = 8,PP_MSG = 131072,PP_SIGNAL = 65536,PP_SIGTYPE = 21,};
enum MACRO_PR {PR_MODEL_UNKNOWN = 0,PR_MODEL_ILP32 = 1,PR_MODEL_LP64 = 2,PR_MODEL_NATIVE = 1,};
enum MACRO_PS {PS_NONE = -1,PS_QUERY = -2,PS_SYSTEM = 1,PS_PRIVATE = 2,};
enum MACRO_PT {PT_NULL = 0,PT_LOAD = 1,PT_DYNAMIC = 2,PT_INTERP = 3,PT_NOTE = 4,PT_SHLIB = 5,PT_PHDR = 6,PT_NUM = 7,PT_LOSUNW = 1879048186,PT_SUNWBSS = 1879048186,PT_HISUNW = 1879048191,PT_LOPROC = 1879048192,PT_HIPROC = 2147483647,};
enum MACRO_PW {PW_INUSE = 0x1,PW_WAIT = 0x2,PW_REM = 0x4,};
enum MACRO_QB {QB_FULL = 0x1,QB_WANTW = 0x2,QB_BACK = 0x4,};
enum MACRO_R0 {R0 = 11,};
enum MACRO_R1 {R1 = 12,};
enum MACRO_RB {RB_AUTOBOOT = 0,RB_ASKNAME = 1,RB_SINGLE = 2,RB_NOSYNC = 4,RB_HALT = 8,RB_INITNAME = 16,RB_NOBOOTRC = 32,RB_DEBUG = 64,RB_DUMP = 128,RB_WRITABLE = 256,RB_STRING = 512,RB_CONFIG = 2048,RB_RECONFIG = 4096,RB_VERBOSE = 8192,RB_FLUSHCACHE = 65536,RB_KRTLD = 131072,RB_NOBOOTCLUSTER = 262144,};
enum MACRO_RD {RD_NEAR = 0,RD_ZER0 = 1,RD_POSINF = 2,RD_NEGINF = 3,};
enum MACRO_RL {RL_IOC_ENABLE = 29185,};
enum MACRO_RP {RP_DBLEXT = 0,RP_SINGLE = 1,RP_DOUBLE = 2,RP_RESERVED = 3,};
enum MACRO_RQ {RQ_PATHLEN = 1024,};
enum MACRO_RS {RS_HIPRI = 0x1,};
enum MACRO_RT {RT_NOCHANGE = -1,RT_TQINF = -2,RT_TQDEF = -3,RT_GETDPSIZE = 1,RT_GETDPTBL = 2,RT_SETDPTBL = 3,};
enum MACRO_RW {RW_HAS_WAITERS = 1,RW_WRITE_WANTED = 2,RW_WRITE_LOCKED = 4,RW_READ_LOCK = 8,RW_HOLD_COUNT = -8,RW_HOLD_COUNT_SHIFT = 3,RW_READ_COUNT = -8,RW_OWNER = -8,RW_LOCKED = -8,RW_WRITE_CLAIMED = 6,};
enum MACRO_RX {RX_FIFO_SIZE = 4,};
enum MACRO_SA {SA_NOCLDSTOP = 0x20000,SA_ONSTACK = 0x1,SA_RESETHAND = 0x2,SA_RESTART = 0x4,SA_SIGINFO = 0x8,SA_NODEFER = 0x10,SA_NOCLDWAIT = 0x10000,SA_WAITSIG = 0x10000,};
enum MACRO_SB {SB = 250,};
enum MACRO_SC {SC_WILDC = 0xFF,};
enum MACRO_SD {SD_STATE_NORMAL = 0,SD_STATE_OFFLINE = 1,SD_STATE_RWAIT = 2,SD_STATE_DUMPING = 3,SD_STATE_SUSPENDED = 4,SD_STATE_PM_SUSPENDED = 5,};
enum MACRO_SE {SE = 240,};
enum MACRO_SF {SF_FDXPTP = 0x1,SF_XMT_INPROG = 0x2,SF_LINKERR = 0x4,SF_FLUSH_WQ = 0x8,SF_INITIALIZED = 0x10,SF_PHONY = 0x20,SF_ZSH_START = 0x40,};
enum MACRO_SH {SH_NOW = 0,SH_CPR = -1,SH_SUSPEND = -1,SH_RESUME = -1,SH_RUID = 0,SH_EUID = 1,};
enum MACRO_SI {SI_NOINFO = 32767,SI_USER = 0,SI_LWP = -1,SI_QUEUE = -2,SI_TIMER = -3,SI_ASYNCIO = -4,SI_MESGQ = -5,};
enum MACRO_SK {SK = 0x20,MOT = 0x80,};
enum MACRO_SL {SL_FATAL = 0x1,SL_NOTIFY = 0x2,SL_ERROR = 0x4,SL_TRACE = 0x8,SL_CONSOLE = 0x10,SL_WARN = 0x20,SL_NOTE = 0x40,SL_CONSONLY = 0x1000,SL_LOGONLY = 0x2000,SL_USER = 0x4000,};
enum MACRO_SM {SM_MAXSTRLEN = 1024,SM_PROG = 100024,SM_VERS = 1,SM_STAT = 1,SM_MON = 2,SM_UNMON = 3,SM_UNMON_ALL = 4,SM_SIMU_CRASH = 5,SM_NOTIFY = 6,};
enum MACRO_SN {SN_PROC = 1,SN_CANCEL = 2,SN_SEND = 3,};
enum MACRO_SO {SO_ALL = 0x3F,SO_READOPT = 0x1,SO_WROFF = 0x2,SO_MINPSZ = 0x4,SO_MAXPSZ = 0x8,SO_HIWAT = 0x10,SO_LOWAT = 0x20,SO_MREADON = 0x40,SO_MREADOFF = 0x80,SO_NDELON = 0x100,SO_NDELOFF = 0x200,SO_ISTTY = 0x400,SO_ISNTTY = 0x800,SO_TOSTOP = 0x1000,SO_TONSTOP = 0x2000,SO_BAND = 0x4000,SO_DELIM = 0x8000,SO_NODELIM = 0x10000,SO_STRHOLD = 0x20000,SO_ERROPT = 0x40000,SO_COPYOPT = 0x80000,SO_MAXBLK = 0x100000,};
enum MACRO_SP {SP_VIRTUAL = 0x100,SP_OBMEM = 0x200,SP_OBIO = 0x210,SP_SBUS = 0x400,};
enum MACRO_SR {SR_SMODE = 64,};
enum MACRO_SS {SS_ONSTACK = 0x1,SS_DISABLE = 0x2,};
enum MACRO_ST {ST_RDONLY = 0x1,ST_NOSUID = 0x2,ST_NOTRUNC = 0x4,};
enum MACRO_TA {TA_INPUT = 0,TA_OUTPUT = 1,TA_USER = 2,TA_RESPOND = 3,TA_DROP = 4,};
enum MACRO_TD {TD_THR_ANY_USER_FLAGS = 0xFFFFFFFF,TD_THR_LOWEST_PRIORITY = 0x0,TD_SIGNO_MASK = 0x0,TD_EVENTSIZE = 0x2,};
enum MACRO_TE {TE_BIND_REQ = 0,TE_UNBIND_REQ = 1,TE_OPTMGMT_REQ = 2,TE_BIND_ACK = 3,TE_OPTMGMT_ACK = 4,TE_ERROR_ACK = 5,TE_OK_ACK1 = 6,TE_OK_ACK2 = 7,TE_OK_ACK3 = 8,TE_OK_ACK4 = 9,TE_CONN_REQ = 10,TE_CONN_RES = 11,TE_DISCON_REQ = 12,TE_DATA_REQ = 13,TE_EXDATA_REQ = 14,TE_ORDREL_REQ = 15,TE_CONN_IND = 16,TE_CONN_CON = 17,TE_DATA_IND = 18,TE_EXDATA_IND = 19,TE_ORDREL_IND = 20,TE_DISCON_IND1 = 21,TE_DISCON_IND2 = 22,TE_DISCON_IND3 = 23,TE_PASS_CONN = 24,TE_UNITDATA_REQ = 25,TE_UNITDATA_IND = 26,TE_UDERROR_IND = 27,TE_NOEVENTS = 28,};
enum MACRO_TF {TF_ACKNOW = 0x1,TF_DELACK = 0x2,TF_NODELAY = 0x4,TF_NOOPT = 0x8,TF_SENTFIN = 0x10,};
enum MACRO_TH {TH_FIN = 0x1,TH_SYN = 0x2,TH_RST = 0x4,TH_PUSH = 0x8,TH_ACK = 0x10,TH_URG = 0x20,};
enum MACRO_TI {TI_GETINFO = 21644,TI_OPTMGMT = 21645,TI_BIND = 21646,TI_UNBIND = 21647,TI_GETMYNAME = 21648,TI_GETPEERNAME = 21649,TI_SETMYNAME = 21650,TI_SETPEERNAME = 21651,TI_SYNC = 21652,TI_GETADDRS = 21653,TI_CAPABILITY = 21654,};
enum MACRO_TL {TL_PROT_LEVEL = 0x544C,TL_OPT_PEER_CRED = 0xA,TL_IOC = 0x544C00,TL_IOC_CREDOPT = 0x544C01,TL_IOC_SOCKET = 0x544C02,};
enum MACRO_TM {TM_NONE = 0x0,TM_SNL = 0x1,TM_ANL = 0x2,TM_LCF = 0x4,TM_CECHO = 0x8,TM_CINVIS = 0x10,TM_SET = 0x80,};
enum MACRO_TP {TP_HOLDLWP = 0x2,TP_TWAIT = 0x4,TP_LWPEXIT = 0x8,TP_PRSTOP = 0x10,TP_CHKPT = 0x20,TP_EXITLWP = 0x40,TP_PRVSTOP = 0x80,TP_MSACCT = 0x100,TP_STOPPING = 0x200,TP_WATCHPT = 0x400,TP_PAUSE = 0x800,TP_CHANGEBIND = 0x1000,};
enum MACRO_TR {TR_Dialout = 1,TR___add_group = 2,TR___alloc_mbrs = 3,TR___authenticate = 4,TR___bind_rpc = 5,TR___break_name = 6,TR___buf = 7,TR___callback_error = 8,TR___callback_finish = 9,TR___callback_stub = 10,TR___clnt_create_loopback = 11,TR___core_lookup = 12,TR___cvt2attr = 13,TR___default_domain = 14,TR___des_crypt = 15,TR___des_encrypt = 16,TR___des_setkey = 17,TR___do_callback = 18,TR___do_ismember = 19,TR___domainname = 20,TR___free_list = 21,TR___get_clnt_uaddr = 22,TR___get_group = 23,TR___get_local_names = 24,TR___get_obj_defaults = 25,TR___get_ti_clnt = 26,TR___getclnt = 27,TR___hostdata = 28,TR___implicit_member = 29,TR___insert_entry = 30,TR___insert_group = 31,TR___insert_list = 32,TR___make_binding = 33,TR___map_addr = 34,TR___msgout = 35,TR___name_distance = 36,TR___name_hash = 37,TR___nextsep_of = 38,TR___nis_clnt_ibops = 39,TR___nis_clnt_nameops = 40,TR___nis_get_server = 41,TR___nis_init_callback = 42,TR___nis_librand = 43,TR___nis_map_group = 44,TR___nis_path_list = 45,TR___nis_pingproc = 46,TR___nis_run_callback = 47,TR___nis_tagproc = 48,TR___remove_entry = 49,TR___remove_group = 50,TR___rpc_dtbsize = 51,TR___rpc_endconf = 52,TR___rpc_get_a_size = 53,TR___rpc_get_default_domain = 54,TR___rpc_get_local_uid = 55,TR___rpc_get_t_size = 56,TR___rpc_getconf = 57,TR___rpc_getconfip = 58,TR___rpc_negotiate_uid = 59,TR___rpc_openchild = 60,TR___rpc_select_to_poll = 61,TR___rpc_setconf = 62,TR___rpc_timeval_to_msec = 63,TR___rpc_trace = 64,TR___rpcgettp = 65,TR___seterr_reply = 66,TR___simple_lookup = 67,TR___stop_clock = 68,TR___svcauth_des = 69,TR___svcauth_null = 70,TR___svcauth_short = 71,TR___svcauth_sys = 72,TR___svcauth_unix = 73,TR___yp_dobind = 74,TR__alloc_buf = 75,TR__dummy = 76,TR__null_tiptr = 77,TR__rcv_conn_con = 78,TR__snd_conn_req = 79,TR__t_aligned_copy = 80,TR__t_alloc_bufs = 81,TR__t_blocksigpoll = 82,TR__t_checkfd = 83,TR__t_do_ioctl = 84,TR__t_is_event = 85,TR__t_is_ok = 86,TR__t_max = 87,TR__t_putback = 88,TR__t_restore_state = 89,TR__t_setsize = 90,TR_accepted = 91,TR_addProto = 92,TR_add_entry_1 = 93,TR_additem = 94,TR_alarmtr = 95,TR_altconn = 96,TR_ask = 97,TR_assert = 98,TR_auth_destroy = 99,TR_auth_errmsg = 100,TR_authdes_create = 101,TR_authdes_destroy = 102,TR_authdes_getucred = 103,TR_authdes_marshal = 104,TR_authdes_nextverf = 105,TR_authdes_ops = 106,TR_authdes_pk_seccreate = 107,TR_authdes_refresh = 108,TR_authdes_seccreate = 109,TR_authdes_validate = 110,TR_authnone_create = 111,TR_authnone_destroy = 112,TR_authnone_marshal = 113,TR_authnone_ops = 114,TR_authnone_refresh = 115,TR_authnone_validate = 116,TR_authnone_verf = 117,TR_authsys_create = 118,TR_authsys_create_default = 119,TR_authsys_destroy = 120,TR_authsys_marshal = 121,TR_authsys_nextverf = 122,TR_authsys_ops = 123,TR_authsys_refresh = 124,TR_authsys_validate = 125,TR_bin2hex = 126,TR_bindresvport = 127,TR_blank = 128,TR_bsfix = 129,TR_cache_get = 130,TR_cache_init = 131,TR_cache_ref = 132,TR_cache_set = 133,TR_cache_spot = 134,TR_cache_victim = 135,TR_calchash = 136,TR_callrpc = 138,TR_cbc_crypt = 139,TR_chat = 140,TR_check_binding = 141,TR_check_version = 142,TR_chkblk = 143,TR_cklock = 144,TR_classmatch = 145,TR_cleanup = 146,TR_clnt_broadcast = 147,TR_clnt_call = 148,TR_clnt_com_create = 149,TR_clnt_control = 150,TR_clnt_create = 151,TR_clnt_create_vers = 152,TR_clnt_destroy = 153,TR_clnt_dg_abort = 154,TR_clnt_dg_call = 155,TR_clnt_dg_control = 156,TR_clnt_dg_create = 157,TR_clnt_dg_destroy = 158,TR_clnt_dg_freeres = 159,TR_clnt_dg_geterr = 160,TR_clnt_dg_ops = 161,TR_clnt_freeres = 162,TR_clnt_geterr = 163,TR_clnt_pcreateerror = 164,TR_clnt_perrno = 165,TR_clnt_perror = 166,TR_clnt_raw_abort = 167,TR_clnt_raw_call = 168,TR_clnt_raw_control = 169,TR_clnt_raw_create = 170,TR_clnt_raw_destroy = 171,TR_clnt_raw_freeres = 172,TR_clnt_raw_geterr = 173,TR_clnt_raw_ops = 174,TR_clnt_spcreateerror = 175,TR_clnt_sperrno = 176,TR_clnt_sperror = 177,TR_clnt_tli_create = 178,TR_clnt_tp_create = 179,TR_clnt_vc_abort = 180,TR_clnt_vc_call = 181,TR_clnt_vc_control = 182,TR_clnt_vc_create = 183,TR_clnt_vc_destroy = 184,TR_clnt_vc_freeres = 185,TR_clnt_vc_geterr = 186,TR_clnt_vc_ops = 187,TR_clntraw_create = 188,TR_clnttcp_create = 189,TR_clntudp_bufcreate = 190,TR_clntudp_create = 191,TR_cmpdatum = 192,TR_comment = 193,TR_common_crypt = 194,TR_conn = 195,TR_currdev = 196,TR_currdial = 197,TR_currsys = 198,TR_dbm_access = 199,TR_dbmclose = 200,TR_dbmflush = 201,TR_dbminit = 202,TR_delete = 203,TR_delitem = 204,TR_delock = 205,TR_des_setparity = 206,TR_detachnode = 207,TR_devreset = 208,TR_dial = 209,TR_dial801 = 210,TR_dialreset = 211,TR_dkbreak = 212,TR_dkcall = 213,TR_dkdial = 214,TR_dkerr = 215,TR_dkerrmap = 216,TR_dkminor = 217,TR_dkndial = 218,TR_dksetup = 219,TR_dkteardown = 220,TR_do_accept = 221,TR_doassign = 222,TR_dobase = 223,TR_doconfig = 224,TR_dofirst = 225,TR_domaster = 226,TR_domatch = 227,TR_donext = 228,TR_doorder = 229,TR_dopop = 230,TR_dopush = 231,TR_dorun = 232,TR_dots_in_name = 233,TR_dtnamer = 234,TR_eaccess = 235,TR_eatwhite = 236,TR_ecb_crypt = 237,TR_endhostent = 238,TR_endnetconfig = 239,TR_endnetpath = 240,TR_endrpcent = 241,TR_err_conv = 242,TR_expect = 243,TR_exphone = 244,TR_extract_secret = 245,TR_fd_cklock = 246,TR_fd_mklock = 247,TR_fd_rmlock = 248,TR_fdig = 249,TR_fetch = 250,TR_ffs = 251,TR_fgetnetconfig = 252,TR_fill_input_buf = 253,TR_findProto = 254,TR_finds = 255,TR_firsthash = 256,TR_firstkey = 257,TR_fix_buf_size = 258,TR_fixline = 259,TR_flush_out = 260,TR_fn_cklock = 261,TR_forder = 262,TR_free_entry = 263,TR_free_name_item = 264,TR_freenetconfigent = 265,TR_freenode = 266,TR_gdial = 267,TR_getProto = 268,TR_get_default_domain = 269,TR_get_input_bytes = 270,TR_get_myaddress = 271,TR_getargs = 272,TR_getbit = 273,TR_getbroadcastnets = 274,TR_getbyte = 275,TR_getclnt = 276,TR_getclnthandle = 277,TR_getdesfd = 278,TR_getdevline = 279,TR_getdialline = 280,TR_getdomainname = 281,TR_getflag = 282,TR_getgroups = 283,TR_gethostbyaddr = 284,TR_gethostbynamadr = 285,TR_gethostbyname = 286,TR_gethostent = 287,TR_gethostname = 288,TR_getkeys_files = 289,TR_getkeys_nis = 290,TR_getkeys_nisplus = 291,TR_getkeyserv_handle = 292,TR_getline = 293,TR_getlookups = 294,TR_getname = 295,TR_getnetconfig = 296,TR_getnetconfigent = 297,TR_getnetid = 298,TR_getnetid_files = 299,TR_getnetid_nis = 300,TR_getnetid_nisplus = 301,TR_getnetlist = 302,TR_getnetname = 303,TR_getnetpath = 304,TR_getnettype = 305,TR_getnlookups = 306,TR_getpop = 307,TR_getpublicandprivatekey = 308,TR_getpublickey = 309,TR_getpush = 310,TR_getrpcbyname = 312,TR_getrpcbynumber = 313,TR_getrpcent = 314,TR_getsecretkey = 315,TR_getsysline = 316,TR_getto = 317,TR_gettoken = 318,TR_getvalue = 319,TR_got_entry = 320,TR_harmless = 321,TR_hashinc = 322,TR_hex2bin = 323,TR_hexval = 324,TR_host2netname = 325,TR_ifdate = 326,TR_inet_addr = 327,TR_inet_netof = 328,TR_inet_ntoa = 329,TR_interface = 330,TR_invalidate = 331,TR_ioctl = 332,TR_key_call = 333,TR_key_decryptsession = 334,TR_key_decryptsession_pk = 335,TR_key_encryptsession = 336,TR_key_encryptsession_pk = 337,TR_key_gendes = 338,TR_key_setsecret = 339,TR_load_dom_binding = 340,TR_load_xlate = 341,TR_local_rpcb = 342,TR_logent = 343,TR_makdatum = 344,TR_makefd_xprt = 345,TR_makenode = 346,TR_marshal_new_auth = 347,TR_memcp = 348,TR_mergeProto = 349,TR_mklock = 350,TR_mlock = 351,TR_msgout = 352,TR_namematch = 353,TR_nameparse = 354,TR_nap = 355,TR_nc_perror = 356,TR_nc_sperror = 357,TR_negotiate_broadcast = 358,TR_netconfig_dup = 359,TR_netconfig_free = 360,TR_netdir_free = 361,TR_netdir_getbyaddr = 362,TR_netdir_getbyname = 363,TR_netdir_options = 364,TR_netdir_perror = 365,TR_netdir_sperror = 366,TR_netlist_free = 367,TR_netname2host = 368,TR_netname2user = 369,TR_newborn = 370,TR_nextProto = 371,TR_nextdevices = 372,TR_nextdialers = 373,TR_nextkey = 374,TR_nextsystems = 375,TR_nis_add = 376,TR_nis_add_clnt = 377,TR_nis_add_entry = 378,TR_nis_addmember = 379,TR_nis_callback_clnt = 380,TR_nis_checkpoint = 381,TR_nis_checkpoint_clnt = 382,TR_nis_clone_object = 383,TR_nis_cptime_clnt = 384,TR_nis_creategroup = 385,TR_nis_data = 386,TR_nis_destroy_object = 387,TR_nis_destroygroup = 388,TR_nis_dir_cmp = 389,TR_nis_domain_of = 390,TR_nis_dump = 391,TR_nis_dump_clnt = 392,TR_nis_dumplog = 393,TR_nis_dumplog_clnt = 394,TR_nis_find_item = 395,TR_nis_finddirectory = 396,TR_nis_finddirectory_clnt = 397,TR_nis_first_entry = 398,TR_nis_flush_namelist = 399,TR_nis_flush_table = 400,TR_nis_flushgroups = 401,TR_nis_free_request = 402,TR_nis_freenames = 403,TR_nis_freeresult = 404,TR_nis_freeservlist = 405,TR_nis_get_object = 406,TR_nis_get_request = 407,TR_nis_get_static_storage = 408,TR_nis_getdtblsize = 409,TR_nis_getnames = 410,TR_nis_getservlist = 411,TR_nis_ibadd_clnt = 412,TR_nis_ibfirst_clnt = 413,TR_nis_iblist_clnt = 414,TR_nis_ibmodify_clnt = 415,TR_nis_ibnext_clnt = 416,TR_nis_ibremove_clnt = 417,TR_nis_in_table = 418,TR_nis_insert_item = 419,TR_nis_insert_name = 420,TR_nis_ismember = 421,TR_nis_leaf_of = 422,TR_nis_lerror = 423,TR_nis_list = 424,TR_nis_local_directory = 425,TR_nis_local_group = 426,TR_nis_local_host = 427,TR_nis_local_principal = 428,TR_nis_lookup = 429,TR_nis_lookup_clnt = 430,TR_nis_make_error = 431,TR_nis_make_rpchandle = 432,TR_nis_mkdir = 433,TR_nis_mkdir_clnt = 434,TR_nis_modify = 435,TR_nis_modify_clnt = 436,TR_nis_modify_entry = 437,TR_nis_name_of = 438,TR_nis_next_entry = 439,TR_nis_perror = 440,TR_nis_ping = 441,TR_nis_ping_clnt = 442,TR_nis_pop_item = 443,TR_nis_print_directory = 444,TR_nis_print_entry = 445,TR_nis_print_group = 446,TR_nis_print_group_entry = 447,TR_nis_print_link = 448,TR_nis_print_object = 449,TR_nis_print_rights = 450,TR_nis_print_server = 451,TR_nis_print_table = 452,TR_nis_read_obj = 453,TR_nis_remove = 454,TR_nis_remove_clnt = 455,TR_nis_remove_entry = 456,TR_nis_remove_item = 457,TR_nis_remove_name = 458,TR_nis_removemember = 459,TR_nis_rmdir = 460,TR_nis_rmdir_clnt = 461,TR_nis_servstate = 462,TR_nis_servstate_clnt = 463,TR_nis_sperrno = 464,TR_nis_sperror = 465,TR_nis_stats = 466,TR_nis_status_clnt = 467,TR_nis_verifygroup = 468,TR_nis_write_obj = 469,TR_notin = 470,TR_onelock = 471,TR_open801 = 472,TR_parsedata = 473,TR_passwd2des = 474,TR_pmap_getmaps = 475,TR_pmap_getport = 476,TR_pmap_rmtcall = 477,TR_pmap_set = 478,TR_pmap_unset = 479,TR_pop_push = 480,TR_print_column = 481,TR_processdev = 482,TR_prog_dispatch = 483,TR_protoString = 484,TR_rddev = 485,TR_read_coldstart_1 = 486,TR_read_vc = 487,TR_registerrpc = 488,TR_rejected = 489,TR_removeProto = 490,TR_remove_entry_1 = 491,TR_rendezvous_request = 492,TR_rendezvous_stat = 493,TR_repphone = 494,TR_restline = 495,TR_rmlock = 496,TR_rpc_broadcast = 497,TR_rpc_call = 498,TR_rpc_nullproc = 499,TR_rpc_reg = 500,TR_rpc_wrap_bcast = 501,TR_rpcb_getaddr = 502,TR_rpcb_getmaps = 503,TR_rpcb_gettime = 504,TR_rpcb_rmtcall = 505,TR_rpcb_set = 506,TR_rpcb_taddr2uaddr = 507,TR_rpcb_uaddr2taddr = 508,TR_rpcb_unset = 509,TR_rtime_tli = 510,TR_savline = 511,TR_scancfg = 512,TR_scansys = 513,TR_sendthem = 514,TR_set_input_fragment = 515,TR_setalarm = 516,TR_setbit = 517,TR_setconfig = 518,TR_setdevcfg = 519,TR_setdomainname = 520,TR_setfile = 521,TR_sethostent = 522,TR_sethup = 523,TR_setioctl = 524,TR_setline = 525,TR_setnetconfig = 526,TR_setnetpath = 527,TR_setrpcent = 528,TR_setservice = 529,TR_shift1left = 530,TR_show_tlook = 531,TR_skip_input_bytes = 532,TR_stlock = 533,TR_stoa = 534,TR_store = 535,TR_strecpy = 536,TR_strlocase = 537,TR_strsave = 538,TR_svc_auth_reg = 539,TR_svc_com_create = 540,TR_svc_create = 541,TR_svc_destroy = 542,TR_svc_dg_create = 543,TR_svc_dg_destroy = 544,TR_svc_dg_enablecache = 545,TR_svc_dg_freeargs = 546,TR_svc_dg_getargs = 547,TR_svc_dg_ops = 548,TR_svc_dg_recv = 549,TR_svc_dg_reply = 550,TR_svc_dg_stat = 551,TR_svc_exit = 552,TR_svc_fd_create = 553,TR_svc_find = 554,TR_svc_freeargs = 555,TR_svc_getargs = 556,TR_svc_getreq = 557,TR_svc_getreq_common = 558,TR_svc_getreq_poll = 559,TR_svc_getreqset = 560,TR_svc_getrpccaller = 561,TR_svc_raw_create = 562,TR_svc_raw_destroy = 563,TR_svc_raw_freeargs = 564,TR_svc_raw_getargs = 565,TR_svc_raw_ops = 566,TR_svc_raw_recv = 567,TR_svc_raw_reply = 568,TR_svc_raw_stat = 569,TR_svc_reg = 570,TR_svc_register = 571,TR_svc_run = 572,TR_svc_sendreply = 573,TR_svc_tli_create = 574,TR_svc_tp_create = 575,TR_svc_unreg = 576,TR_svc_unregister = 577,TR_svc_vc_create = 578,TR_svc_vc_destroy = 579,TR_svc_vc_freeargs = 580,TR_svc_vc_getargs = 581,TR_svc_vc_ops = 582,TR_svc_vc_recv = 583,TR_svc_vc_rendezvous_ops = 584,TR_svc_vc_reply = 585,TR_svc_vc_stat = 586,TR_svc_versquiet = 587,TR_svcerr_auth = 588,TR_svcerr_decode = 589,TR_svcerr_noproc = 590,TR_svcerr_noprog = 591,TR_svcerr_progvers = 592,TR_svcerr_systemerr = 593,TR_svcerr_weakauth = 594,TR_svcfd_create = 595,TR_svcraw_create = 596,TR_svctcp_create = 597,TR_svcudp_bufcreate = 598,TR_svcudp_create = 599,TR_synchronize = 600,TR_sysaccess = 601,TR_sysreset = 602,TR_sytcall = 603,TR_sytfix2line = 604,TR_sytfixline = 605,TR_t_accept = 606,TR_t_alloc = 607,TR_t_bind = 608,TR_t_close = 609,TR_t_connect = 610,TR_t_error = 611,TR_t_free = 612,TR_t_getinfo = 613,TR_t_getname = 614,TR_t_getstate = 615,TR_t_listen = 616,TR_t_look = 617,TR_t_open = 618,TR_t_optmgmt = 619,TR_t_rcv = 620,TR_t_rcvall = 621,TR_t_rcvconnect = 622,TR_t_rcvdis = 623,TR_t_rcvrel = 624,TR_t_rcvudata = 625,TR_t_rcvuderr = 626,TR_t_snd = 627,TR_t_snddis = 628,TR_t_sndrel = 629,TR_t_sndudata = 630,TR_t_sync = 631,TR_t_unbind = 632,TR_taddr2uaddr = 633,TR_tcpcall = 634,TR_tfaillog = 635,TR_time_not_ok = 636,TR_timout = 637,TR_tioctl = 638,TR_tlicall = 639,TR_tokenize = 640,TR_translate = 641,TR_tread = 642,TR_tsetup = 643,TR_tssetup = 644,TR_tteardown = 645,TR_ttygenbrk = 646,TR_twrite = 647,TR_uaddr2taddr = 648,TR_undial = 649,TR_unetcall = 650,TR_universal = 651,TR_user2netname = 652,TR_usetup = 653,TR_usingypmap = 654,TR_usralarm = 655,TR_uteardown = 656,TR_wrchr = 657,TR_write_vc = 658,TR_wrstr = 659,TR_x_destroy = 660,TR_x_getpostn = 661,TR_x_inline = 662,TR_x_putbytes = 663,TR_x_putlong = 664,TR_x_setpostn = 665,TR_xdecrypt = 666,TR_xdr_accepted_reply = 667,TR_xdr_array = 668,TR_xdr_authdes_cred = 669,TR_xdr_authdes_verf = 670,TR_xdr_authkern = 671,TR_xdr_authsys_parms = 672,TR_xdr_bool = 673,TR_xdr_bytes = 674,TR_xdr_callhdr = 675,TR_xdr_callmsg = 676,TR_xdr_cback_data = 677,TR_xdr_char = 678,TR_xdr_cp_result = 679,TR_xdr_cryptkeyarg = 680,TR_xdr_cryptkeyres = 681,TR_xdr_datum = 682,TR_xdr_des_block = 683,TR_xdr_destroy = 684,TR_xdr_directory_obj = 685,TR_xdr_double = 686,TR_xdr_dump_args = 687,TR_xdr_endpoint = 688,TR_xdr_entry_col = 689,TR_xdr_entry_obj = 690,TR_xdr_enum = 691,TR_xdr_fd_args = 692,TR_xdr_fd_result = 693,TR_xdr_float = 694,TR_xdr_free = 695,TR_xdr_getcredres = 696,TR_xdr_getpos = 697,TR_xdr_gid_t = 698,TR_xdr_group_obj = 699,TR_xdr_hyper = 700,TR_xdr_ib_request = 701,TR_xdr_inline = 702,TR_xdr_int = 703,TR_xdr_keybuf = 704,TR_xdr_keystatus = 705,TR_xdr_link_obj = 706,TR_xdr_log_entry = 707,TR_xdr_log_entry_t = 708,TR_xdr_log_result = 709,TR_xdr_long = 710,TR_xdr_longlong_t = 711,TR_xdr_netbuf = 712,TR_xdr_netconfig = 713,TR_xdr_netnamestr = 714,TR_xdr_netobj = 715,TR_xdr_nis_attr = 716,TR_xdr_nis_error = 717,TR_xdr_nis_name = 718,TR_xdr_nis_object = 719,TR_xdr_nis_oid = 720,TR_xdr_nis_result = 721,TR_xdr_nis_server = 722,TR_xdr_nis_tag = 723,TR_xdr_nis_taglist = 724,TR_xdr_ns_request = 725,TR_xdr_nstype = 726,TR_xdr_oar_mask = 727,TR_xdr_obj_p = 728,TR_xdr_objdata = 729,TR_xdr_opaque = 730,TR_xdr_opaque_auth = 731,TR_xdr_ping_args = 732,TR_xdr_pmap = 733,TR_xdr_pmaplist = 734,TR_xdr_pmaplist_ptr = 735,TR_xdr_pointer = 736,TR_xdr_quadruple = 737,TR_xdr_reference = 738,TR_xdr_rejected_reply = 739,TR_xdr_replymsg = 740,TR_xdr_rmtcall_args = 741,TR_xdr_rmtcallargs = 742,TR_xdr_rmtcallres = 743,TR_xdr_rpcb = 744,TR_xdr_rpcb_addrp = 745,TR_xdr_rpcb_entry = 746,TR_xdr_rpcb_entry_list = 747,TR_xdr_rpcb_entry_list_ptr = 748,TR_xdr_rpcb_rmtcallargs = 749,TR_xdr_rpcb_rmtcalllistp = 750,TR_xdr_rpcb_rmtcallres = 751,TR_xdr_rpcb_stat = 752,TR_xdr_rpcb_stat_byvers = 753,TR_xdr_rpcblist = 754,TR_xdr_rpcblist_ptr = 755,TR_xdr_rpcbs_addrlist = 756,TR_xdr_rpcbs_addrlist_ptr = 757,TR_xdr_rpcbs_proc = 758,TR_xdr_rpcbs_rmtcalllist = 759,TR_xdr_rpcbs_rmtcalllist_ptr = 760,TR_xdr_setpos = 761,TR_xdr_short = 762,TR_xdr_sizeof = 763,TR_xdr_string = 764,TR_xdr_table_col = 765,TR_xdr_table_obj = 766,TR_xdr_u_char = 767,TR_xdr_u_hyper = 768,TR_xdr_u_int = 769,TR_xdr_u_long = 770,TR_xdr_u_longlong_t = 771,TR_xdr_u_short = 772,TR_xdr_uid_t = 773,TR_xdr_union = 774,TR_xdr_unixcred = 775,TR_xdr_vector = 776,TR_xdr_void = 777,TR_xdr_wrapstring = 778,TR_xdr_yp_buf = 779,TR_xdr_ypall = 780,TR_xdr_ypbind_binding = 781,TR_xdr_ypbind_domain = 782,TR_xdr_ypbind_resp = 783,TR_xdr_ypbind_resptype = 784,TR_xdr_ypbind_setdom = 785,TR_xdr_ypdelete_args = 786,TR_xdr_ypdomain_wrap_string = 787,TR_xdr_ypmap_parms = 788,TR_xdr_ypmap_wrap_string = 789,TR_xdr_ypmaplist = 790,TR_xdr_ypmaplist_wrap_string = 791,TR_xdr_ypowner_wrap_string = 792,TR_xdr_yppushresp_xfr = 793,TR_xdr_ypreq_key = 794,TR_xdr_ypreq_newname_string = 795,TR_xdr_ypreq_newxfr = 796,TR_xdr_ypreq_nokey = 797,TR_xdr_ypreq_xfr = 798,TR_xdr_ypresp_key_val = 799,TR_xdr_ypresp_maplist = 800,TR_xdr_ypresp_master = 801,TR_xdr_ypresp_order = 802,TR_xdr_ypresp_val = 803,TR_xdr_ypupdate_args = 804,TR_xdr_zotypes = 805,TR_xdrmbuf_destroy = 806,TR_xdrmbuf_getbytes = 807,TR_xdrmbuf_getlong = 808,TR_xdrmbuf_getmbuf = 809,TR_xdrmbuf_getpos = 810,TR_xdrmbuf_init = 811,TR_xdrmbuf_inline = 812,TR_xdrmbuf_putbuf = 813,TR_xdrmbuf_putbytes = 814,TR_xdrmbuf_putlong = 815,TR_xdrmbuf_setpos = 816,TR_xdrmem_create = 817,TR_xdrmem_destroy = 818,TR_xdrmem_getbytes = 819,TR_xdrmem_getlong = 820,TR_xdrmem_getpos = 821,TR_xdrmem_inline = 822,TR_xdrmem_ops = 823,TR_xdrmem_putbytes = 824,TR_xdrmem_putlong = 825,TR_xdrmem_setpos = 826,TR_xdrrec_create = 827,TR_xdrrec_destroy = 828,TR_xdrrec_endofrecord = 829,TR_xdrrec_eof = 830,TR_xdrrec_getbytes = 831,TR_xdrrec_getlong = 832,TR_xdrrec_getpos = 833,TR_xdrrec_inline = 834,TR_xdrrec_ops = 835,TR_xdrrec_putbytes = 836,TR_xdrrec_putlong = 837,TR_xdrrec_setpos = 838,TR_xdrrec_skiprecord = 839,TR_xdrstdio_create = 840,TR_xdrstdio_destroy = 841,TR_xdrstdio_getbytes = 842,TR_xdrstdio_getlong = 843,TR_xdrstdio_getpos = 844,TR_xdrstdio_inline = 845,TR_xdrstdio_ops = 846,TR_xdrstdio_putbytes = 847,TR_xdrstdio_putlong = 848,TR_xdrstdio_setpos = 849,TR_xencrypt = 850,TR_xfer = 851,TR_xprt_register = 852,TR_xprt_unregister = 853,TR_yp_all = 854,TR_yp_bind = 855,TR_yp_first = 856,TR_yp_get_default_domain = 857,TR_yp_master = 858,TR_yp_match = 859,TR_yp_next = 860,TR_yp_order = 861,TR_yp_unbind = 862,TR_yp_update = 863,TR_ypbindproc_domain_3 = 864,TR_ypbindproc_null_3 = 865,TR_ypbindproc_setdom_3 = 866,TR_yperr_string = 867,TR_ypprot_err = 868,TR_check_cache = 869,TR_delete_cache = 870,TR_add_cache = 871,TR_rpcb_findaddr = 872,TR_svc_control = 873,TR_svc_dg_control = 874,TR_svc_raw_control = 875,TR_svc_vc_control = 876,TR___svc_versquiet_get = 877,TR___svc_versquiet_on = 878,TR___svc_versquiet_off = 879,TR_user2netname_nisplus = 880,TR_user2netname_nis = 881,TR_parse_netid_str = 882,TR_parse_uid_gidlist = 883,TR_parse_uid = 884,TR_parse_gidlist = 885,TR_netname2user_files = 886,TR_netname2user_nis = 887,TR_netname2user_nisplus = 888,TR_key_get_conv = 889,TR__t_look_locked = 890,TR__td_setnodelay = 891,TR__nss_initf_hosts = 892,TR__switch_gethostbyname_r = 893,TR__switch_gethostbyaddr_r = 894,TR_gethostent_r = 895,TR_str2hostent = 896,TR_gethostbyname_r = 897,TR_gethostbyaddr_r = 898,TR__nss_initf_rpc = 899,TR_getrpcbyname_r = 900,TR_getrpcbynumber_r = 901,TR_getrpcent_r = 902,TR_str2rpcent = 903,TR_key_secretkey_is_set = 904,TR_clnt_create_vers_timed = 905,TR_rendezvous_control = 906,TR___gss_authenticate = 907,TR_t_sndreldata = 908,TR_t_sndv = 909,TR_t_sndvudata = 910,TR_t_rcvreldata = 911,TR_t_rcvv = 912,TR_t_rcvvudata = 913,TR_t_sysconf = 914,TR__nss_initf_auuser = 915,TR_str2auuser = 916,TR_setauuser = 917,TR_endauuser = 918,TR_getauuser = 919,TR_getauusernam = 920,TR__nss_initf_authattr = 921,TR_str2authattr = 922,TR_setauthattr = 923,TR_endauthattr = 924,TR_getauthattr = 925,TR_getauthnam = 926,TR__nss_initf_execattr = 927,TR_str2execattr = 928,TR_setexecattr = 929,TR_endexecattr = 930,TR_getexecattr = 931,TR_getexecprof = 932,TR__nss_initf_profattr = 933,TR_str2profattr = 934,TR_setprofattr = 935,TR_endprofattr = 936,TR_getprofattr = 937,TR_getprofnam = 938,TR__nss_initf_userattr = 939,TR_str2userattr = 940,TR_setuserattr = 941,TR_enduserattr = 942,TR_getuserattr = 943,TR_getusernam = 944,};
enum MACRO_TS {TS_FREE = 0x0,TS_SLEEP = 0x1,TS_RUN = 0x2,TS_ONPROC = 0x4,TS_ZOMB = 0x8,TS_STOPPED = 0x10,};
enum MACRO_TT {TT_OV_USR = 0x51,TT_OV_SYS = 0x52,TT_OV_SHR = 0x53,TT_OV_SHRK = 0x54,TT_OV_BUF = 0x55,TT_OV_BUFK = 0x56,TT_UF_USR = 0x61,TT_UF_SYS = 0x62,TT_UF_FAULT = 0x63,TT_SC_RET = 0x881,TT_SC_POST = 0x882,TT_SC_TRAP = 0x883,TT_SYS_RTT = 0x6666,TT_SYS_RTTU = 0x7777,TT_INTR_ENT = 0xFFFFFFFF,TT_INTR_RET = 0xFFFFFFFE,TT_INTR_RET2 = 0xFFFFFFFD,TT_INTR_EXIT = 0x8888,};
enum MACRO_TX {TX_OFF = 0x0,TX_IDLE = 0x1,TX_RTS = 0x2,TX_ACTIVE = 0x4,TX_CRC = 0x8,TX_FLAG = 0x10,TX_LAST = 0x20,TX_ABORTED = 0x40,};
enum MACRO_TZ {TZ_MAX_TIMES = 370,TZ_MAX_TYPES = 256,TZ_MAX_CHARS = 50,TZ_MAX_LEAPS = 50,};
enum MACRO_UC {UC_SIGMASK = 0x1,UC_STACK = 0x2,UC_CPU = 0x4,UC_MAU = 0x8,UC_FPU = 0x8,UC_INTR = 0x10,UC_ASR = 0x20,UC_MCONTEXT = 0x2C,UC_ALL = 0x2F,};
enum MACRO_UD {UD_PRI_VOL_DESC = 0x1,UD_ANCH_VOL_DESC = 0x2,UD_VOL_DESC_PTR = 0x3,UD_IMPL_USE_DESC = 0x4,UD_PART_DESC = 0x5,UD_LOG_VOL_DESC = 0x6,UD_UNALL_SPA_DESC = 0x7,UD_TERM_DESC = 0x8,UD_LOG_VOL_INT = 0x9,UD_FILE_SET_DESC = 0x100,UD_FILE_ID_DESC = 0x101,UD_ALLOC_EXT_DESC = 0x102,UD_INDIRECT_ENT = 0x103,UD_TERMINAL_ENT = 0x104,UD_FILE_ENTRY = 0x105,UD_EXT_ATTR_HDR = 0x106,UD_UNALL_SPA_ENT = 0x107,UD_SPA_BMAP_DESC = 0x108,UD_PART_INT_DESC = 0x109,UD_EXT_FILE_ENT = 0x10A,};
enum MACRO_UL {UL_GMEMLIM = 3,UL_GDESLIM = 4,UL_GTXTOFF = 64,UL_GETFSIZE = 1,UL_SETFSIZE = 2,};
enum MACRO_UM {UM_NOSLEEP = 0x0,UM_SLEEP = 0x1,UM_GC = 0x2,};
enum MACRO_UT {UT_INSTRUCTION_DISABLED = 1,UT_INSTRUCTION_ERROR = 2,UT_INSTRUCTION_PROTECTION = 3,UT_ILLTRAP_INSTRUCTION = 4,UT_ILLEGAL_INSTRUCTION = 5,UT_PRIVILEGED_OPCODE = 6,UT_FP_DISABLED = 7,UT_FP_EXCEPTION_IEEE_754 = 8,UT_FP_EXCEPTION_OTHER = 9,UT_TAG_OVERFLOW = 10,UT_DIVISION_BY_ZERO = 11,UT_DATA_EXCEPTION = 12,UT_DATA_ERROR = 13,UT_DATA_PROTECTION = 14,UT_MEM_ADDRESS_NOT_ALIGNED = 15,UT_PRIVILEGED_ACTION = 16,UT_ASYNC_DATA_ERROR = 17,UT_TRAP_INSTRUCTION_16 = 18,UT_TRAP_INSTRUCTION_17 = 19,UT_TRAP_INSTRUCTION_18 = 20,UT_TRAP_INSTRUCTION_19 = 21,UT_TRAP_INSTRUCTION_20 = 22,UT_TRAP_INSTRUCTION_21 = 23,UT_TRAP_INSTRUCTION_22 = 24,UT_TRAP_INSTRUCTION_23 = 25,UT_TRAP_INSTRUCTION_24 = 26,UT_TRAP_INSTRUCTION_25 = 27,UT_TRAP_INSTRUCTION_26 = 28,UT_TRAP_INSTRUCTION_27 = 29,UT_TRAP_INSTRUCTION_28 = 30,UT_TRAP_INSTRUCTION_29 = 31,UT_TRAP_INSTRUCTION_30 = 32,UT_TRAP_INSTRUCTION_31 = 33,};
enum MACRO_V9 {V9_IMPLVER = 0xFE,V9_PSR_IMPLVER = 0xFE000000,};
enum MACRO_VE {VE_EXIST = 0x1,VE_FTYPE = 0x2,VE_ATTR = 0x4,VE_CONT = 0x8,VE_FAIL = 0x10,VE_TIME = 0x20,};
enum MACRO_VM {VM_SLEEP = 0x0,VM_NOSLEEP = 0x1,VM_PANIC = 0x2,VM_KMFLAGS = 0xFF,VM_BESTFIT = 0x100,};
enum MACRO_VP {VP_ADVICE_MASK = 0x7,VP_PPLOCK_MASK = 0x80,VP_PPLOCK_SHIFT = 0x7,};
enum MACRO_VT {VT_ERROR = -2,VT_EIO = -3,VT_EINVAL = -4,};
enum MACRO_WA {WA_READ = 0x4,WA_WRITE = 0x2,WA_EXEC = 0x1,WA_TRAPAFTER = 0x8,};
enum MACRO_WP {WP_NOWATCH = 0x1,WP_SETPROT = 0x2,};
enum MACRO_XR {XR_G0 = 0,XR_G1 = 1,XR_G2 = 2,XR_G3 = 3,XR_G4 = 4,XR_G5 = 5,XR_G6 = 6,XR_G7 = 7,};
enum MACRO_ZS {ZS_ON = 130,ZS_OFF = 0,};
enum MACRO__D {_D_OLD = 0x1,};
enum MACRO__I {_I_MUXID2FD = 0x532E,_I_INSERT = 0x532F,_I_REMOVE = 0x5330,};
enum MACRO__U {_U = 0x1,_L = 0x2,_N = 0x4,_S = 0x8,_P = 0x10,_C = 0x20,_B = 0x40,_X = 0x80,};
enum MACRO_st {st_debug = 0,};
typedef struct _CCC1A82A34D7085BB27B55F53CBFD610 Ms_parms;
typedef struct pmaplist PMAPLIST;
typedef void (*PTF_void)();
typedef struct rp__list RPCBLIST;
typedef struct term TERMINAL;
typedef struct vuid_seg Vuid_seg;
struct Xfer_Rdy {int seq_ro;int burst_len;int reserved;};
typedef struct _B661844E4DD166A431053E2B2F63C927 _KEY_MAP;
struct _cat_hdr {int __hdr_magic;int __nsets;int __mem;int __msg_hdr_offset;int __msg_text_offset;};
struct _choice_ {char *token;char *text;struct _choice_ *next;};
struct _krwlock {void *_opaque[1];};
struct _label_t {int val[2];};
typedef unsigned short _ochtype;
struct _tnf_ops;
typedef struct abisym abisym_t;
typedef struct acache acache_t;
typedef struct acl aclent_t;
typedef unsigned char action_t;
struct afswitch {int (*af_hash)();int (*af_netmatch)();};
typedef struct au_tid au_tid_t;
struct auth_res {int auth_perm;};
typedef struct ba_acc ba_acc_t;
typedef struct ba_rjt ba_rjt_t;
struct bandinfo {unsigned char bi_pri;int bi_flag;};
typedef int blkcnt_t;
struct callsave {struct t_call *c_cp;struct callsave *c_np;};
struct cdrom_ti {unsigned char cdti_trk0;unsigned char cdti_ind0;unsigned char cdti_trk1;unsigned char cdti_ind1;};
struct cfga_msg {int (*message_routine)(void *appdata_ptr,  char *message);void *appdata_ptr;};
typedef struct cirbuf cirbuf_t;
typedef struct commit commit_t;
typedef struct cyc_id cyc_id_t;
typedef struct cyclic cyclic_t;
struct dacf_arg {char *arg_name;char *arg_val;struct dacf_arg *arg_next;};
typedef struct dcfree dcfree_t;
typedef struct _EB9CBE9F844ABCF9E9277596B691C0BF dchead_t;
enum dev_type {DEV_INVALID = 0x0,DEV_GLOBAL = 0x2,DEV_NODEBOUND = 0x4,DEV_NODESPECIFIC = 0x6,DEV_ENUMERATED = 0x8,DEV_CLONE = 0x1,};
typedef struct _4F7711BDAF281951A6E73987538C1D62 devmap_t;
typedef struct dirent dirent_t;
typedef struct dvpoll dvpoll_t;
struct endpoint {char *uaddr;char *family;char *proto;};
typedef struct eucioc eucioc_t;
typedef unsigned int extended[3];
typedef struct extent extent_t;
typedef struct f_user f_user_t;
struct fbcmap_i {unsigned int flags;int id;int index;int count;unsigned char *red;unsigned char *green;unsigned char *blue;};
struct fbcurpos {short x;short y;};
struct fd_drive {int fdd_ejectable;int fdd_maxsearch;int fdd_writeprecomp;int fdd_writereduce;int fdd_stepwidth;int fdd_steprate;int fdd_headsettle;int fdd_headload;int fdd_headunload;int fdd_motoron;int fdd_motoroff;int fdd_precomplevel;int fdd_pins;int fdd_flags;};
struct fd_state {int fds_bsec;int fds_strack;int fds_step;int fds_rate;int fds_error;};
typedef int fds_mask;
typedef struct filock filock_t;
typedef struct fiolog fiolog_t;
typedef struct _85563A71CF7457DF5AD2FDE8FB997EAF fltset_t;
typedef struct fmodsw fmodsw_t;
enum fsh_mode {fsm_DN = 0x0,fsm_DR = 0x1,fsm_DW = 0x2,fsm_DRW = 0x3,};
typedef struct fshare fshare_t;
struct ftevents;
typedef struct ftevnt ftevnt_t;
typedef struct ftflwe ftflwe_t;
typedef struct iainfo iainfo_t;
typedef struct iaproc iaproc_t;
typedef struct ic_acl ic_acl_t;
struct icmpstat {int icps_error;int icps_oldshort;int icps_oldicmp;int icps_outhist[19];int icps_badcode;int icps_tooshort;int icps_checksum;int icps_badlen;int icps_reflect;int icps_inhist[19];};
struct init_dev {int socket;};
typedef int intptr_t;
enum ipd_msgs {IPD_MAKE_IF = 0x100,IPD_CON_REQ = 0x101,IPD_DIS_REQ = 0x102,IPD_DIS_IND = 0x103,IPD_ERR_IND = 0x104,IPD_SET_TIM = 0x105,IPD_BLACKLIST = 0x106,IPD_GET_INFO = 0x107,IPD_CON_DECLINE = 0x108,IPD_GET_VERSION = 0x109,IPD_REGISTER = 0x10A,IPD_UNREGISTER = 0x10B,};
enum jcaccess {JCREAD = 0x0,JCWRITE = 0x1,JCSETP = 0x2,JCGETP = 0x3,};
struct jerqmesg {char cmd;char chan;};
struct jwinsize {char bytesx;char bytesy;short bitsx;short bitsy;};
struct keyboard {struct keymap *k_normal;struct keymap *k_shifted;struct keymap *k_caps;struct keymap *k_altgraph;struct keymap *k_numlock;struct keymap *k_control;struct keymap *k_up;int k_idleshifts;int k_idlebuckys;unsigned char k_abort1;unsigned char k_abort1a;unsigned char k_abort2;int k_toggleshifts;struct exception_map *k_except;};
typedef struct mutex kmutex_t;
typedef struct la_rjt la_rjt_t;
typedef struct la_rls la_rls_t;
typedef union la_wwn la_wwn_t;
typedef int lagreg_t;
struct llcsaddr {unsigned char llca_saddr[6];unsigned short llca_ssap;};
enum lm_proto {LM_TCP = 0x0,LM_UDP = 0x1,};
struct mallinfo {unsigned int arena;unsigned int ordblks;unsigned int smblks;unsigned int hblks;unsigned int hblkhd;unsigned int usmblks;unsigned int fsmblks;unsigned int uordblks;unsigned int fordblks;unsigned int keepcost;};
enum maptypes {deltamaptype = 0x0,udmaptype = 0x1,logmaptype = 0x2,matamaptype = 0x3,};
typedef struct mntopt mntopt_t;
struct modldacf {struct mod_ops *dacf_modops;char *dacf_linkinfo;struct dacfsw *dacf_dacfsw;};
struct modlexec {struct mod_ops *exec_modops;char *exec_linkinfo;struct execsw *exec_execsw;};
struct modlmisc {struct mod_ops *misc_modops;char *misc_linkinfo;};
struct ms_softc {struct mousebuf *ms_buf;short ms_bufbytes;short ms_flags;short ms_oldoff;short ms_eventstate;short ms_readformat;short ms_vuidaddr;char ms_prevbuttons;};
enum msg_type {CALL = 0x0,REPLY = 0x1,};
typedef unsigned int msglen_t;
typedef struct mt_map mt_map_t;
enum name_pos {SAME_NAME = 0x0,HIGHER_NAME = 0x1,LOWER_NAME = 0x2,NOT_SEQUENTIAL = 0x3,BAD_NAME = 0x4,};
enum nfsftype {NFNON = 0x0,NFREG = 0x1,NFDIR = 0x2,NFBLK = 0x3,NFCHR = 0x4,NFLNK = 0x5,NFSOC = 0x6,};
typedef char *nfspath3;
enum nfsstat3 {NFS3_OK = 0x0,NFS3ERR_PERM = 0x1,NFS3ERR_NOENT = 0x2,NFS3ERR_IO = 0x5,NFS3ERR_NXIO = 0x6,NFS3ERR_ACCES = 0xD,NFS3ERR_EXIST = 0x11,NFS3ERR_XDEV = 0x12,NFS3ERR_NODEV = 0x13,NFS3ERR_NOTDIR = 0x14,NFS3ERR_ISDIR = 0x15,NFS3ERR_INVAL = 0x16,NFS3ERR_FBIG = 0x1B,NFS3ERR_NOSPC = 0x1C,NFS3ERR_ROFS = 0x1E,NFS3ERR_MLINK = 0x1F,NFS3ERR_NAMETOOLONG = 0x3F,NFS3ERR_NOTEMPTY = 0x42,NFS3ERR_DQUOT = 0x45,NFS3ERR_STALE = 0x46,NFS3ERR_REMOTE = 0x47,NFS3ERR_BADHANDLE = 0x2711,NFS3ERR_NOT_SYNC = 0x2712,NFS3ERR_BAD_COOKIE = 0x2713,NFS3ERR_NOTSUPP = 0x2714,NFS3ERR_TOOSMALL = 0x2715,NFS3ERR_SERVERFAULT = 0x2716,NFS3ERR_BADTYPE = 0x2717,NFS3ERR_JUKEBOX = 0x2718,};
typedef char *nis_name;
typedef unsigned int nodeid_t;
typedef void *opaque_t;
struct pam_conv {int (*conv)(int, struct pam_message **, struct pam_response **, void *);void *appdata_ptr;};
typedef struct pcinfo pcinfo_t;
typedef struct pm_req pm_req_t;
typedef struct pollfd pollfd_t;
struct pollhead;
enum pppSense {pppReceiveOnly = 0x1,pppSendOnly = 0x2,pppReceiveAndSend = 0x3,pppNone = 0x4,};
enum pppState {pppInitial = 0x0,pppStarting = 0x1,pppClosed = 0x2,pppStopped = 0x3,pppClosing = 0x4,pppStopping = 0x5,pppReqSent = 0x6,pppAckRcvd = 0x7,pppAckSent = 0x8,pppOpened = 0x9,};
typedef struct prcred prcred_t;
typedef int prgreg_t;
struct prheader {int pr_nent;int pr_entsize;};
struct protoent {char *p_name;char **p_aliases;int p_proto;};
typedef struct prxmap prxmap_t;
typedef unsigned int psaddr_t;
typedef int psetid_t;
typedef struct psinfo psinfo_t;
struct rcm_info;
struct rd_agent;
typedef struct refstr refstr_t;
typedef struct rtinfo rtinfo_t;
typedef struct rtproc rtproc_t;
typedef struct _rwlock rwlock_t;
typedef struct sclass sclass_t;
typedef union _B5B36604A4D7B91FFF9FA298D0BE592E seg_next;
typedef int selock_t;
typedef unsigned int shmatt_t;
typedef struct _57DBDB9F9E69733D408CC307EF34A958 sigset_t;
struct sigstack {void *ss_sp;int ss_onstack;};
struct sl_stats {int ipack;int opack;int ichar;int ochar;int abort;int crc;int cts;int dcd;int overrun;int underrun;int ierror;int oerror;int nobuffers;};
typedef struct sleepq sleepq_t;
typedef int spgcnt_t;
typedef struct _C9793B2A88A40550F3E6FCBE57C78800 sprayarr;
struct str_list {int sl_nmods;struct str_mlist *sl_modlist;};
struct strioctl {int ic_cmd;int ic_timout;int ic_len;char *ic_dp;};
typedef struct _8B85712FB09FAAC9E4FCB41A89281044 sysset_t;
typedef unsigned int tcflag_t;
typedef unsigned int thread_t;
enum time_how {DONT_CHANGE = 0x0,SET_TO_SERVER_TIME = 0x1,SET_TO_CLIENT_TIME = 0x2,};
struct timezone {int tz_minuteswest;int tz_dsttime;};
enum top_type {TOP_READ_SYNC = 0x0,TOP_WRITE = 0x1,TOP_WRITE_SYNC = 0x2,TOP_SETATTR = 0x3,TOP_CREATE = 0x4,TOP_REMOVE = 0x5,TOP_LINK = 0x6,TOP_RENAME = 0x7,TOP_MKDIR = 0x8,TOP_RMDIR = 0x9,TOP_SYMLINK = 0xA,TOP_FSYNC = 0xB,TOP_GETPAGE = 0xC,TOP_PUTPAGE = 0xD,TOP_SBUPDATE_FLUSH = 0xE,TOP_SBUPDATE_UPDATE = 0xF,TOP_SBUPDATE_UNMOUNT = 0x10,TOP_SYNCIP_CLOSEDQ = 0x11,TOP_SYNCIP_FLUSHI = 0x12,TOP_SYNCIP_HLOCK = 0x13,TOP_SYNCIP_SYNC = 0x14,TOP_SYNCIP_FREE = 0x15,TOP_SBWRITE_RECLAIM = 0x16,TOP_SBWRITE_STABLE = 0x17,TOP_IFREE = 0x18,TOP_IUPDAT = 0x19,TOP_MOUNT = 0x1A,TOP_COMMIT_ASYNC = 0x1B,TOP_COMMIT_FLUSH = 0x1C,TOP_COMMIT_UPDATE = 0x1D,TOP_COMMIT_UNMOUNT = 0x1E,TOP_SETSECATTR = 0x1F,TOP_QUOTA = 0x20,TOP_ITRUNC = 0x21,TOP_MAX = 0x22,};
typedef struct tsinfo tsinfo_t;
typedef struct tsproc tsproc_t;
typedef struct tstamp tstamp_t;
struct ttychars {char tc_erase;char tc_kill;char tc_intrc;char tc_quitc;char tc_startc;char tc_stopc;char tc_eofc;char tc_brkc;char tc_suspc;char tc_dsuspc;char tc_rprntc;char tc_flushc;char tc_werasc;char tc_lnextc;};
struct ufs_args {int flags;};
enum ufsdrc_t {UFSDRC_OK = 0x0,UFSDRC_NOENT = 0x2,UFSDRC_PERM = 0x1,UFSDRC_INVAL = 0x16,UFSDRC_NOEXEC = 0x8,UFSDRC_NODEV = 0x13,UFSDRC_NXIO = 0x6,UFSDRC_BUSY = 0x10,UFSDRC_OPNOTSUP = 0x7A,UFSDRC_EXECERR = 0xFE,UFSDRC_ERR = 0xFF,};
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef struct _F8793C5ADA5B1735862C612D8105FB3D uninit_t;
struct userdefs {int defrid;int defgroup;char *defgname;char *defparent;char *defskel;char *defshell;int definact;char *defexpire;char *defauth;char *defprof;char *defrole;};
typedef unsigned short ushort_t;
typedef struct vfsops vfsops_t;
typedef struct vminfo vminfo_t;
typedef struct vt_cpu vt_cpu_t;
typedef int wctype_t;
enum wnfsstat {WNFSERR_CLNT_FLAVOR = 0x4E21,};
typedef struct dl_info Dl_info;
struct Elf_Scn;
enum MACRO_A {A_UNDERLINE = 0x400000,A_REVERSE = 0x800000,A_BLINK = 0x1000000,A_DIM = 0x2000000,A_BOLD = 0x4000000,A_ALTCHARSET = 0x8000000,A_INVIS = 0x40000000,A_PROTECT = 0x80000000,A_NORMAL = 0x0,A_ATTRIBUTES = 0xCFFF8000,A_CHARTEXT = 0x30007FFF,A_COLOR = 0x1F8000,A_WATTRIBUTES = 0xCFE00000,A_WCHARTEXT = 0x301FFFFF,};
enum MACRO_B {B_BUSY = 0x1,B_DONE = 0x2,B_ERROR = 0x4,B_PAGEIO = 0x10,B_PHYS = 0x20,B_READ = 0x40,B_WRITE = 0x100,B_KERNBUF = 0x8,B_WANTED = 0x80,B_AGE = 0x200,B_ASYNC = 0x400,B_DELWRI = 0x800,B_STALE = 0x1000,B_DONTNEED = 0x2000,B_REMAPPED = 0x4000,B_FREE = 0x8000,B_INVAL = 0x10000,B_FORCE = 0x20000,B_HEAD = 0x40000,B_NOCACHE = 0x80000,B_TRUNC = 0x100000,B_SHADOW = 0x200000,B_RETRYWRI = 0x400000,};
enum MACRO_C {C_IRUSR = 0x100,C_IWUSR = 0x80,C_IXUSR = 0x40,C_IRGRP = 0x20,C_IWGRP = 0x10,C_IXGRP = 0x8,C_IROTH = 0x4,C_IWOTH = 0x2,C_IXOTH = 0x1,C_ISUID = 0x800,C_ISGID = 0x400,C_ISVTX = 0x200,C_ISDIR = 0x4000,C_ISFIFO = 0x1000,C_ISREG = 0x8000,C_ISBLK = 0x6000,C_ISCHR = 0x2000,C_ISCTG = 0x9000,C_ISLNK = 0xA000,C_ISSOCK = 0xC000,};
enum MACRO_D {D_HUNG = -2,};
enum MACRO_E {E_OK = 0,E_SYSTEM_ERROR = -1,E_BAD_ARGUMENT = -2,E_POSTED = -3,E_CONNECTED = -4,E_BAD_STATE = -5,E_NO_ROOM = -6,E_NOT_POSTED = -7,E_UNKNOWN_COMMAND = -8,E_NO_MATCH = -9,E_NOT_SELECTABLE = -10,E_NOT_CONNECTED = -11,E_REQUEST_DENIED = -12,E_INVALID_FIELD = -13,E_CURRENT = -14,};
enum MACRO_F {F_DUPFD = 0,F_GETFD = 1,F_SETFD = 2,F_GETFL = 3,F_SETFL = 4,F_CHKFL = 8,F_DUP2FD = 9,F_ALLOCSP = 10,F_ISSTREAM = 13,F_PRIV = 15,F_NPRIV = 16,F_QUOTACTL = 17,F_BLOCKS = 18,F_BLKSIZE = 19,F_GETOWN = 23,F_SETOWN = 24,F_HASREMOTELOCKS = 26,F_SETLK = 6,F_SETLKW = 7,F_FREESP = 11,F_GETLK = 14,F_SETLK64 = 34,F_SETLKW64 = 35,F_FREESP64 = 27,F_GETLK64 = 33,F_SHARE = 40,F_UNSHARE = 41,F_RDLCK = 1,F_WRLCK = 2,F_UNLCK = 3,F_UNLKSYS = 4,};
enum MACRO_G {G_TM_TAPE = 1,G_XY_DISK = 3,G_SD_DISK = 7,G_XT_TAPE = 8,G_SF_FLOPPY = 9,G_XD_DISK = 10,G_ST_TAPE = 11,G_NS = 12,G_RAM = 13,G_FT = 14,G_HD = 15,G_FD = 16,G_FILE = 28,G_NO_DEV = 29,G_DEV_MAX = 30,};
enum MACRO_I {I_NREAD = 0x5301,I_PUSH = 0x5302,I_POP = 0x5303,I_LOOK = 0x5304,I_FLUSH = 0x5305,I_SRDOPT = 0x5306,I_GRDOPT = 0x5307,I_STR = 0x5308,I_SETSIG = 0x5309,I_GETSIG = 0x530A,I_FIND = 0x530B,I_LINK = 0x530C,I_UNLINK = 0x530D,I_PEEK = 0x530F,I_FDINSERT = 0x5310,I_SENDFD = 0x5311,I_RECVFD = 0x530E,I_SWROPT = 0x5313,I_GWROPT = 0x5314,I_LIST = 0x5315,I_PLINK = 0x5316,I_PUNLINK = 0x5317,I_ANCHOR = 0x5318,I_FLUSHBAND = 0x531C,I_CKBAND = 0x531D,I_GETBAND = 0x531E,I_ATMARK = 0x531F,I_SETCLTIME = 0x5320,I_GETCLTIME = 0x5321,I_CANPUT = 0x5322,I_SERROPT = 0x5323,I_GERROPT = 0x5324,I_ESETSIG = 0x5325,I_EGETSIG = 0x5326,};
enum MACRO_L {L_tmpnam = 25,L_ctermid = 9,L_cuserid = 9,};
enum MACRO_M {M_MXFAST = 1,M_NLBLKS = 2,M_GRAIN = 3,M_KEEP = 4,};
enum MACRO_N {N_IEEE_EXCEPTION = 5,};
enum MACRO_O {O_RDONLY = 0,O_WRONLY = 1,O_RDWR = 2,O_NDELAY = 4,O_APPEND = 8,O_SYNC = 16,O_DSYNC = 64,O_RSYNC = 32768,O_NONBLOCK = 128,O_LARGEFILE = 8192,O_CREAT = 256,O_TRUNC = 512,O_EXCL = 1024,O_NOCTTY = 2048,};
enum MACRO_P {P_MYPID = 0,P_MYID = -1,};
enum MACRO_Q {Q_SQQUEUED = 0x1,Q_SQDRAINING = 0x2,};
enum MACRO_R {R_DEBUG_VERSION = 2,};
enum MACRO_S {S_SIGNAL = 1,S_SIGSET = 2,S_SIGACTION = 3,S_NONE = 4,};
enum MACRO_T {MAXOFF_T = 0x7FFFFFFF,MAXOFFSET_T = 0x7FFFFFFFFFFFFFFF,};
enum MACRO_V {V_NUMPAR = 8,};
enum MACRO_W {W_IO = 0,W_SWAP = 1,W_PIO = 2,W_STATES = 3,};
enum MACRO_Y {Y = 3,G1 = 4,};
typedef struct _A426C1BFA60F897E08DB82510E56FD03 MCast_t;
typedef struct _8A43A92A61C1A96F5CE7557D3343944D MD5_CTX;
typedef int OPTIONS;
struct Octet_s {int o_length;char o_bytes[32];};
typedef struct Octet_s Octet_t;
typedef int (*PTF_int)();
typedef struct _7DF901F2330FED44ED065D8472D22EDC SVCAUTH;
typedef struct __svcxprt SVCXPRT;
struct _FN_ctx;
struct _FN_ref;
typedef struct aiocb aiocb_t;
struct aliases {struct aliases *a_next;char *a_name;int a_len;};
typedef unsigned int anoff_t;
struct au_mask {unsigned int am_success;unsigned int am_failure;};
typedef char *caddr_t;
typedef char *charptr;
typedef union _EE75A551A8E099987506FD558A5F43CD chunk_t;
typedef int clock_t;
typedef struct cnode cnode_t;
struct comment {char *c_dept;char *c_name;char *c_acct;char *c_bin;};
struct cprinfo {int ci_magic;int ci_reusable;char ci_bootfile[256];char ci_bootdevice[256];char ci_autoboot[6];char ci_diagfile[256];char ci_diagdevice[256];};
typedef struct ctxop ctxop_t;
typedef int daddr_t;
enum desmode {CBC = 0x0,ECB = 0x1,};
struct dev_ops;
typedef struct dispq dispq_t;
struct dk_geom {unsigned short dkg_ncyl;unsigned short dkg_acyl;unsigned short dkg_bcyl;unsigned short dkg_nhead;unsigned short dkg_obs1;unsigned short dkg_nsect;unsigned short dkg_intrlv;unsigned short dkg_obs2;unsigned short dkg_obs3;unsigned short dkg_apc;unsigned short dkg_rpm;unsigned short dkg_pcyl;unsigned short dkg_write_reinstruct;unsigned short dkg_read_reinstruct;unsigned short dkg_extra[7];};
struct dl_info { char *dli_fname;void *dli_fbase; char *dli_sname;void *dli_saddr;};
typedef union dlsap dlsap_t;
typedef struct edesc edesc_t;
typedef struct execa execa_t;
struct fbsattr {int flags;int emu_type;int dev_specific[8];};
typedef int fd_mask;
struct fiotune {int maxcontig;int rotdelay;int maxbpg;int minfree;int optim;};
typedef struct flock flock_t;
typedef struct ftblk ftblk_t;
typedef struct ftflw ftflw_t;
typedef struct fthdr fthdr_t;
typedef struct graph graph_t;
typedef struct gss_OID_desc_struct *gss_OID;
struct hostent {char *h_name;char **h_aliases;int h_addrtype;int h_length;char **h_addr_list;};
struct iaadmin {struct iadpent *ia_dpents;short ia_ndpents;short ia_cmd;};
typedef struct icmp6_hdr icmp6_t;
typedef struct icmph_s icmph_t;
typedef struct _iconv_info *iconv_t;
typedef struct ierbd ierbd_t;
typedef struct ierfd ierfd_t;
typedef struct ietbd ietbd_t;
typedef struct ietcb ietcb_t;
typedef short index_t;
typedef struct inode inode_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
typedef struct ioreq ioreq_t;
typedef struct iovec iovec_t;
typedef struct ipllcmd_s ipllc_t;
typedef int jmp_buf[12];
typedef struct _ksema ksema_t;
typedef struct kstat kstat_t;
struct la_logo {unsigned int cmd;};
typedef struct _label_t label_t;
struct lb_addr {char lba_aaa[6];};
struct llcaddr {unsigned char llca_addr[6];unsigned char llca_sap;};
typedef struct _AC1F0727205AA235F31FA7E4FBAB6931 lldiv_t;
typedef union _8E64F109147703DFED6209FCF9267D5F lloff_t;
enum lm_fmly {LM_INET = 0x0,LM_INET6 = 0x1,LM_LOOPBACK = 0x2,};
typedef struct lnode lnode_t;
typedef struct lsctl lsctl_t;
typedef struct lsrec lsrec_t;
struct ltchars {char t_suspc;char t_dsuspc;char t_rprntc;char t_flushc;char t_werasc;char t_lnextc;};
typedef unsigned int lwpid_t;
typedef struct memid memid_t;
struct mod_ops {int (*modm_install)();int (*modm_remove)();int (*modm_info)();};
typedef unsigned int model_t;
struct modldrv {struct mod_ops *drv_modops;char *drv_linkinfo;struct dev_ops *drv_dev_ops;};
struct modlsys {struct mod_ops *sys_modops;char *sys_linkinfo;struct sysent *sys_sysent;};
struct mq_attr {int mq_flags;int mq_maxmsg;int mq_msgsize;int mq_curmsgs;int mq_pad[12];};
struct ncstats {int hits;int misses;int enters;int dbl_enters;int long_enter;int long_look;int move_to_front;int purges;};
enum nfsstat {NFS_OK = 0x0,NFSERR_PERM = 0x1,NFSERR_NOENT = 0x2,NFSERR_IO = 0x5,NFSERR_NXIO = 0x6,NFSERR_ACCES = 0xD,NFSERR_EXIST = 0x11,NFSERR_XDEV = 0x12,NFSERR_NODEV = 0x13,NFSERR_NOTDIR = 0x14,NFSERR_ISDIR = 0x15,NFSERR_INVAL = 0x16,NFSERR_FBIG = 0x1B,NFSERR_NOSPC = 0x1C,NFSERR_ROFS = 0x1E,NFSERR_OPNOTSUPP = 0x2D,NFSERR_NAMETOOLONG = 0x3F,NFSERR_NOTEMPTY = 0x42,NFSERR_DQUOT = 0x45,NFSERR_STALE = 0x46,NFSERR_REMOTE = 0x47,NFSERR_WFLUSH = 0x63,};
typedef struct _nl_catd_struct *nl_catd;
typedef int nl_item;
typedef short o_dev_t;
typedef short o_pid_t;
typedef char passbuf[12];
typedef struct pcpri pcpri_t;
struct pkginfo {char *pkginst;char *name;char *arch;char *version;char *vendor;char *basedir;char *catg;char status;};
struct port_id {unsigned int rsvd : 8;unsigned int port_id : 24;};
typedef struct prmap prmap_t;
struct protosw {short pr_type;struct domain *pr_domain;short pr_protocol;short pr_flags;int (*pr_input)();int (*pr_output)();int (*pr_ctlinput)();int (*pr_ctloutput)();int (*pr_usrreq)();int (*pr_init)();int (*pr_fasttimo)();int (*pr_slowtimo)();int (*pr_drain)();};
typedef struct qband qband_t;
enum qfields {QHIWAT = 0x0,QLOWAT = 0x1,QMAXPSZ = 0x2,QMINPSZ = 0x3,QCOUNT = 0x4,QFIRST = 0x5,QLAST = 0x6,QFLAG = 0x7,QSTRUIOT = 0x8,QBAD = 0x9,};
typedef struct _qop_num qop_num;
typedef struct queue queue_t;
typedef struct _E3ED4D72C7814978A91B05B99D56A6A2 regex_t;
typedef struct regid regid_t;
struct res_sym {int number;char *name;char *humanname;};
typedef struct rnode rnode_t;
struct rtadmin {struct rtdpent *rt_dpents;short rt_ndpents;short rt_cmd;};
struct seminfo {int semmni;int semmns;int semmnu;int semmsl;int semopm;int semume;int semusz;int semvmx;int semaem;};
struct servent {char *s_name;char **s_aliases;int s_port;char *s_proto;};
struct sm_name {char *mon_name;};
struct sm_stat {int state;};
typedef unsigned int speed_t;
typedef int ssize_t;
typedef struct sigaltstack stack_t;
struct stcntrs {char st_lrc;char st_xnaks;char st_rnaks;char st_xwaks;char st_rwaks;char st_scc;};
struct suminfo {int si_nbytes;int si_sum;};
typedef unsigned short symid_t;
enum syncobj {SOBJ_NONE = 0x0,SOBJ_MUTEX = 0x1,SOBJ_RWLOCK = 0x2,SOBJ_CV = 0x3,SOBJ_SEMA = 0x4,SOBJ_USER = 0x5,SOBJ_USER_PI = 0x6,SOBJ_SHUTTLE = 0x7,};
typedef short sysid_t;
typedef struct taskq taskq_t;
typedef struct tcphdra_s tcpha_t;
struct termiox {unsigned short x_hflag;unsigned short x_cflag;unsigned short x_rflag[5];unsigned short x_sflag;};
struct tftphdr {short th_opcode;short th_block;char th_data[1];};
typedef int timer_t;
struct token_s {struct token_s *tt_next;short tt_size;char *tt_data;};
typedef struct token_s token_t;
struct tsadmin {struct tsdpent *ts_dpents;short ts_ndpents;short ts_cmd;};
struct ttysize {int ts_lines;int ts_cols;};
typedef unsigned short u_short;
typedef unsigned char uchar_t;
struct udpstat {int udps_hdrops;int udps_badsum;int udps_badlen;int udps_fullsock;};
struct ufs_fsd {int fsd_type;int fsd_size;char fsd_data[1];};
typedef unsigned char uint8_t;
enum uio_seg {UIO_USERSPACE = 0x0,UIO_SYSSPACE = 0x1,UIO_USERISPACE = 0x2,};
typedef unsigned int ulong_t;
struct umntres {int status;};
typedef struct vattr vattr_t;
enum version {libm_ieee = 0xFFFFFFFF,c_issue_4 = 0x0,ansi_1 = 0x1,strict_ansi = 0x2,};
typedef struct vfssw vfssw_t;
struct viscmap {int index;int count;unsigned char *red;unsigned char *green;unsigned char *blue;};
typedef struct vnode vnode_t;
/// #define wchar_t  int ===DEFINED
struct winsize {unsigned short ws_row;unsigned short ws_col;unsigned short ws_xpixel;unsigned short ws_ypixel;};
enum zotypes {BOGUS_OBJ = 0x0,NO_OBJ = 0x1,DIRECTORY_OBJ = 0x2,GROUP_OBJ = 0x3,TABLE_OBJ = 0x4,ENTRY_OBJ = 0x5,LINK_OBJ = 0x6,PRIVATE_OBJ = 0x7,NIS_BOGUS_OBJ = 0x0,NIS_NO_OBJ = 0x1,NIS_DIRECTORY_OBJ = 0x2,NIS_GROUP_OBJ = 0x3,NIS_TABLE_OBJ = 0x4,NIS_ENTRY_OBJ = 0x5,NIS_LINK_OBJ = 0x6,NIS_PRIVATE_OBJ = 0x7,};
typedef struct _menu_ CKMENU;
typedef struct __client CLIENT;
typedef struct _A6F5D22C47870C9C34E13B26D36736E1 HEADER;
typedef struct msgb **MBLKPP;
typedef struct screen SCREEN;
typedef struct termios SGTTYS;
typedef struct tiuser TIUSER;
typedef struct _win_st WINDOW;
typedef struct _A556726339174AF4A052C1DB3ED032E6 _Color;
struct _Mouse {int x;int y;short button[3];int changes;};
struct __pctx;
union _h_val {unsigned int _i[2];double _d;};
struct _ksema {void *_opaque[2];};
struct _menu_ {char *label;int attr;short longest;short nchoices;struct _choice_ *choice;char **invis;};
struct abisym {void *a_real;int a_vflag;int a_tflag;};
struct ar_hdr {char ar_name[16];char ar_date[12];char ar_uid[6];char ar_gid[6];char ar_mode[8];char ar_size[10];char ar_fmag[2];};
typedef struct ar_client_notify_s arcn_t;
typedef struct arct_s arct_t;
typedef struct ar_entry_add_s area_t;
typedef struct ar_entry_delete_s ared_t;
typedef struct ar_entry_query_s areq_t;
typedef struct ar_mapping_add_s arma_t;
typedef struct _57D8EEF26067F90BF74ECA27AA5A03F5 auxv_t;
struct bagent {int size;char *src;char *dest;};
typedef int bool_t;
typedef unsigned int chtype;
enum create {CRCREAT = 0x0,CRMKNOD = 0x1,CRMKDIR = 0x2,};
typedef struct cred cred_t;
typedef struct datab dblk_t;
enum desdir {ENCRYPT = 0x0,DECRYPT = 0x1,};
struct diskhd {int b_flags;struct buf *b_forw;struct buf *b_back;struct buf *av_forw;struct buf *av_back;int b_bcount;};
typedef struct _disp disp_t;
typedef struct edge edge_t;
typedef struct _5A96F9ADF207CF237355020FDA0EFEF5 encobj;
typedef struct _75BAE6E6D7E8D7271432449CBE6780E8 encvec;
typedef int enum_t;
struct eucioc {unsigned char eucw[4];unsigned char scrw[4];};
struct fbcmap {int index;int count;unsigned char *red;unsigned char *green;unsigned char *blue;};
struct fbinfo {int fb_physaddr;int fb_hwwidth;int fb_hwheight;int fb_addrdelta;unsigned char *fb_ropaddr;int fb_unit;};
struct fbtype {int fb_type;int fb_height;int fb_width;int fb_depth;int fb_cmsize;int fb_size;};
struct fd_set {int fds_bits[32];};
typedef struct file file_t;
struct fmodsw {char f_name[9];struct streamtab *f_str;int f_flag;};
enum fp_rnd {FP_RN = 0x0,FP_RZ = 0x1,FP_RP = 0x2,FP_RM = 0x3,};
typedef int fpos_t;
typedef struct free_rtn frtn_t;
struct fshare {short f_access;short f_deny;int f_id;};
typedef struct _06CAB5296C39900A9CE51DBF4F560AD6 fsid_t;
enum ftype3 {NF3REG = 0x1,NF3DIR = 0x2,NF3BLK = 0x3,NF3CHR = 0x4,NF3LNK = 0x5,NF3SOCK = 0x6,NF3FIFO = 0x7,};
typedef int greg_t;
enum idtype {P_PID = 0x0,P_PPID = 0x1,P_PGID = 0x2,P_SID = 0x3,P_CID = 0x4,P_UID = 0x5,P_GID = 0x6,P_ALL = 0x7,P_LWPID = 0x8,P_TASKID = 0x9,P_PROJID = 0xA,};
typedef struct _F8793C5ADA5B1735862C612D8105FB3D init_t;
typedef char int8_t;
enum iotype {NFS_READ_AHEAD = 0x0,NFS_PUTAPAGE = 0x1,NFS_PAGEIO = 0x2,NFS_READDIR = 0x3,NFS_COMMIT = 0x4,};
typedef struct ip_m_s ip_m_t;
typedef struct ipha_s ipha_t;
typedef struct ipic_s ipic_t;
typedef struct ipid_s ipid_t;
struct ipstat {int ips_total;int ips_badsum;int ips_tooshort;int ips_toosmall;int ips_badhlen;int ips_badlen;int ips_fragments;int ips_fragdropped;int ips_fragtimeout;int ips_forward;int ips_cantforward;int ips_redirectsent;};
struct joblog {char j_file[8];unsigned int j_uid;int j_lvl;int j_cnt;};
struct keymap {unsigned short keymap[128];};
typedef struct _klwp klwp_t;
typedef struct _979FA3DE6ECCF956231BFC297C4278E6 ldiv_t;
struct linesw {int (*l_open)();int (*l_close)();int (*l_read)();int (*l_write)();int (*l_ioctl)();int (*l_input)();int (*l_output)();int (*l_mdmint)();};
struct linger {int l_onoff;int l_linger;};
typedef struct llc1 llc1_t;
struct llchdr {unsigned char llc_dsap;unsigned char llc_ssap;unsigned char llc_ctl;};
typedef struct lock_manager_pid_list lmpl_t;
typedef unsigned char lock_t;
struct loghdr {int h_pgrp;};
typedef struct msgb mblk_t;
struct mntopt {char *mo_name;char **mo_cancel;char *mo_arg;int mo_flags;void *mo_data;};
struct mnttab {char *mnt_special;char *mnt_mountp;char *mnt_fstype;char *mnt_mntopts;char *mnt_time;};
struct modcmd {char *mc_cmdname;int mc_type;};
struct modlfs {struct mod_ops *fs_modops;char *fs_linkinfo;struct vfssw *fs_vfssw;};
struct mounta {char *spec;char *dir;int flags;char *fstype;char *dataptr;int datalen;char *optptr;int optlen;};
struct msgbuf {int mtype;char mtext[1];};
struct namefd {int fd;};
struct netbuf {unsigned int maxlen;unsigned int len;char *buf;};
typedef unsigned int nfds_t;
typedef struct __ns_msg ns_msg;
enum nstype {UNKNOWN = 0x0,NIS = 0x1,SUNYP = 0x2,IVY = 0x3,DNS = 0x4,X500 = 0x5,DNANS = 0x6,XCHS = 0x7,CDS = 0x8,};
typedef struct page page_t;
struct pchead {struct pcnode *pch_forw;struct pcnode *pch_back;};
typedef struct __pctx pctx_t;
struct pollfd {int fd;short events;short revents;};
typedef struct proc proc_t;
typedef struct _quad quad_t;
typedef unsigned int rlim_t;
struct rpcent {char *r_name;char **r_aliases;int r_number;};
struct rtstat {short rts_badredirect;short rts_dynamic;short rts_newgateway;short rts_unreach;short rts_wildcard;};
typedef union rval rval_t;
struct sacmsg {int sc_size;char sc_type;};
struct screen;
enum seg_rw {S_OTHER = 0x0,S_READ = 0x1,S_WRITE = 0x2,S_EXEC = 0x3,S_CREATE = 0x4,};
typedef struct _sema sema_t;
typedef struct sess sess_t;
struct sgttyb {char sg_ispeed;char sg_ospeed;char sg_erase;char sg_kill;int sg_flags;};
union sigval {int sival_int;void *sival_ptr;};
typedef float single;
struct sleepq {struct _kthread *sq_first;};
struct srvurl {char *s_pcSrvType;char *s_pcHost;int s_iPort;char *s_pcNetFamily;char *s_pcSrvPart;};
struct status {char *mon_name;int state;char priv[16];};
struct tchars {char t_intrc;char t_quitc;char t_startc;char t_stopc;char t_eofc;char t_brkc;};
typedef struct tcphdr_s tcph_t;
struct termcb {char st_flgs;char st_termt;char st_crow;char st_ccol;char st_vrow;char st_lrow;};
struct termio {unsigned short c_iflag;unsigned short c_oflag;unsigned short c_cflag;unsigned short c_lflag;char c_line;unsigned char c_cc[8];};
struct termsw {int (*t_input)();int (*t_output)();int (*t_ioctl)();};
typedef int time_t;
typedef struct tune tune_t;
struct tzhead {char tzh_magic[4];char tzh_reserved[16];char tzh_ttisgmtcnt[4];char tzh_ttisstdcnt[4];char tzh_leapcnt[4];char tzh_timecnt[4];char tzh_typecnt[4];char tzh_charcnt[4];};
typedef unsigned char u_char;
typedef unsigned int u_long;
struct ufsvfs;
typedef unsigned int uint_t;
enum uio_rw {UIO_READ = 0x0,UIO_WRITE = 0x1,};
typedef unsigned char unchar;
typedef struct upib upib_t;
typedef struct user user_t;
typedef unsigned short ushort;
enum vcexcl {NONEXCL = 0x0,EXCL = 0x1,};
struct vfstab {char *vfs_special;char *vfs_fsckdev;char *vfs_mountp;char *vfs_fstype;char *vfs_fsckpass;char *vfs_automnt;char *vfs_mntopts;};
typedef struct vmem vmem_t;
typedef int wint_t;
enum xdr_op {XDR_ENCODE = 0x0,XDR_DECODE = 0x1,XDR_FREE = 0x2,};
typedef struct _0C787AC3F519F07F1A30A3F49C54BEF6 yp_buf;
typedef struct search_entry ENTRY;
typedef struct fieldnode FIELD;
typedef struct msgb *MBLKP;
typedef struct termio SGTTY;
typedef char *USERP;
typedef struct _2533481BB5519C9B22079276CD47D0A2 _PAGE;
struct _kvmd;
struct _quad {int val[2];};
struct adr_s {char *adr_stream;char *adr_now;};
typedef struct adr_s adr_t;
typedef struct _afd afd_t;
typedef struct pcmcia_adapter_nexus_private anp_t;
typedef struct ar_cmd_s arc_t;
typedef struct arh_s arh_t;
typedef struct buf buf_t;
struct bufhd {int b_flags;struct buf *b_forw;struct buf *b_back;};
struct c_hdr {char c_magic[6];char c_dev[6];char c_ino[6];char c_mode[6];char c_uid[6];char c_gid[6];char c_nlink[6];char c_rdev[6];char c_mtime[11];char c_namesz[6];char c_filesz[11];char c_name[256];};
typedef short cnt_t;
typedef struct cpu cpu_t;
struct ctxop {void (*save_op)(void *);void (*restore_op)(void *);void (*fork_op)(void *, void *);void (*lwp_create_op)(void *, void *);void (*free_op)(void *, int);void *arg;struct ctxop *next;};
typedef struct _D379431B13F78A36F2202C5AA386190E datum;
enum de_op {DE_CREATE = 0x0,DE_MKDIR = 0x1,DE_LINK = 0x2,DE_RENAME = 0x3,};
typedef struct _979FA3DE6ECCF956231BFC297C4278E6 div_t;
enum dr_op {DR_REMOVE = 0x0,DR_RMDIR = 0x1,DR_RENAME = 0x2,};
struct dwbuf {int b_flags;struct buf *b_forw;struct buf *b_back;struct buf *av_forw;struct buf *av_back;};
struct edesc {char *name;struct edesc *next;};
struct execa { char *fname; char **argp; char **envp;};
typedef struct fid fid_t;
struct frame {int fr_local[8];int fr_arg[6];struct frame *fr_savfp;int fr_savpc;char *fr_stret;int fr_argd[6];int fr_argx[1];};
typedef int int32;
typedef struct ip6_hdr ip6_t;
struct ipart {unsigned char bootid;unsigned char beghead;unsigned char begsect;unsigned char begcyl;unsigned char systid;unsigned char endhead;unsigned char endsect;unsigned char endcyl;int relsect;int numsect;};
typedef int irq_t;
typedef int key_t;
typedef int kid_t;
typedef struct kva_s kva_t;
typedef struct _kvmd kvm_t;
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;};
struct lines {char *l_host;char *l_sys;char *l_dir;char *l_prefix;char *l_dev;char *l_peri;char *l_parm;char l_buf[100];};
struct linka {char *dir;char *link;};
typedef struct log log_t;
typedef void *mqd_t;
struct mutex {void *_opaque[2];};
struct my_id {char *my_name;int my_prog;int my_vers;int my_proc;};
struct nlist {char *n_name;int n_value;short n_scnum;unsigned short n_type;char n_sclass;char n_numaux;};
typedef struct __ns_rr ns_rr;
typedef nis_object *obj_p;
typedef int off_t;
typedef struct pcb pcb_t;
typedef int (*pfi_t)();
typedef void (*pfv_t)();
typedef int pid_t;
typedef struct pim pim_t;
struct pinfo {char status;char pkg[65];char editflag;char aclass[65];struct pinfo *next;};
typedef short pri_t;
typedef int psw_t;
struct qelem {struct qelem *q_forw;struct qelem *q_back;};
struct qinit {int (*qi_putp)();int (*qi_srvp)();int (*qi_qopen)();int (*qi_qclose)();int (*qi_qadmin)();struct module_info *qi_minfo;struct module_stat *qi_mstat;int (*qi_rwp)();int (*qi_infop)();int qi_struiot;};
typedef struct _FB115A149FF37A3EAB946997DD4E3A6C sem_t;
struct so_ux {struct so_so *next;struct so_so *prev;};
struct sttsv {char st_major;short st_pcdnum;char st_devaddr;int st_csidev;};
typedef struct tag tag_t;
typedef unsigned int u_int;
typedef int uid_t;
typedef struct uio uio_t;
typedef unsigned int ulong;
typedef union _3C8E0388BDDD5F7551C53EF0F32B4233 val_t;
typedef struct vfs vfs_t;
enum vtype {VNON = 0x0,VREG = 0x1,VDIR = 0x2,VBLK = 0x3,VCHR = 0x4,VLNK = 0x5,VFIFO = 0x6,VDOOR = 0x7,VPROC = 0x8,VSOCK = 0x9,VBAD = 0xA,};
typedef struct whf whf_t;
typedef struct _A4BEC33DC2CEF1EA6A21E2966A3DEECD xrs_t;
struct zsops {void (*zsop_txint)();void (*zsop_xsint)();void (*zsop_rxint)();void (*zsop_srint)();int (*zsop_softint)();int (*zsop_suspend)();int (*zsop_resume)();};
typedef struct __auth AUTH;
typedef unsigned char Byte;
typedef struct _596FCBE93D83B7A9B9C02E2997D81DA7 CALL;
typedef int *ERRP;
typedef __FILE FILE;
typedef struct formnode FORM;
typedef struct iocblk *IOCP;
typedef struct _LCLd *LCLd;
typedef struct _LCTd *LCTd;
typedef struct mint MINT;
typedef pmap PMAP;
typedef rpcb RPCB;
typedef struct _987A4977B64401F127AD4A87403FCD8A TEXT;
typedef unsigned short WORD;
struct _afd {int *a_fd;short a_nfd;short a_stale;int a_buf[1];};
struct bind {struct bind *b_next;char *b_name;char *b_bind_name;int b_num;};
typedef unsigned char cc_t;
typedef struct dl dl_t;
typedef union _C43472A59D225774831BE4F95424A25C dnan;
struct edge {struct edge *edge_adj_next;struct edge *edge_adj_prev;struct edge *edge_in_next;struct edge *edge_in_prev;struct lock_descriptor *from_vertex;struct lock_descriptor *to_vertex;};
typedef int id_t;
enum idop {POP_DIFF = 0x0,POP_AND = 0x1,POP_OR = 0x2,POP_XOR = 0x3,};
struct kv_s {char *key;char *value;};
typedef struct kv_s kv_t;
struct mint {int len;short *val;};
struct regs {int r_psr;int r_pc;int r_npc;int r_y;int r_g1;int r_g2;int r_g3;int r_g4;int r_g5;int r_g6;int r_g7;int r_o0;int r_o1;int r_o2;int r_o3;int r_o4;int r_o5;int r_o6;int r_o7;};
typedef struct si si_t;
struct spwd {char *sp_namp;char *sp_pwdp;int sp_lstchg;int sp_min;int sp_max;int sp_warn;int sp_inact;int sp_expire;unsigned int sp_flag;};
struct sque {char sq_exfil[140];char sq_infil[48];char sq_jobnm[9];char sq_pgrmr[25];char sq_jobno[9];char sq_login[9];char sq_homed[48];int sq_min;};
struct stio {unsigned short ttyid;char row;char col;char orow;char ocol;char tab;char aid;char ss1;char ss2;unsigned short imode;unsigned short lmode;unsigned short omode;};
struct task;
struct tune {int t_gpgslo;int t_pad[7];int t_fsflushr;int t_minarmem;int t_minasmem;int t_flckrec;};
typedef unsigned int uint;
struct vmem;
typedef struct _CA21EB1FE968FC1A84C75EEC389382FF DBM;
typedef struct _FB71A6CB4CF311B023B9642DD77B0239 DIR;
struct Elf;
struct FTW {int quit;int base;int level;};
typedef char *IDP;
struct TNF;
struct cnt {char *fnpc;int mcnt;};
struct fpq {unsigned int *fpq_addr;unsigned int fpq_instr;};
struct hat;
struct map;
enum res {stat_succ = 0x0,stat_fail = 0x1,};
struct var {int v_buf;int v_call;int v_proc;int v_maxupttl;int v_nglobpris;int v_maxsyspri;int v_clist;int v_maxup;int v_hbuf;int v_hmask;int v_pbuf;int v_sptmap;int v_maxpmem;int v_autoup;int v_bufhwm;};
typedef unsigned char *DP;
enum rm {RMFILE = 0x0,RMDIRECTORY = 0x1,};
struct tc {char t_intrc;char t_quitc;char t_startc;char t_stopc;char t_eofc;char t_brkc;};
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;};
struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___54452C09C3FB8D7AD926D1B264F470FB {uint32_t offset;};
struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___6152E0D14B08C53F7D041BC3E28DC5EB {uint32_t asi;uint32_t offset;};
struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___E0F3893B754C74B700FBB8F1102F79FF {uint32_t image;uint32_t offset;};
struct k_siginfo_________1E1D46254D77D7AA17918C17CAF3F7C6___3D26F7DC2EE9BFA01DA7951ECDA8B430 {clock_t __utime;int __status;clock_t __stime;};
struct _pthread_mutex___1A7858AFF91A54C35A86C698AE036482___50F3AE10509153FFBB1A15F9D86B57ED {uint8_t __pthread_mutex_pad[8];};
struct accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76___D52F10176CE5E6769EE83800681284AC {rpcvers_t low;rpcvers_t high;};
struct rejected_reply___2B53589865B36E9C26DCD66F40988BA8___D52F10176CE5E6769EE83800681284AC {rpcvers_t low;rpcvers_t high;};
struct siginfo_________F5CA292679AFF35DF48F2E3B742B91CE___3D26F7DC2EE9BFA01DA7951ECDA8B430 {clock_t __utime;int __status;clock_t __stime;};
struct pln_address___5B09262AB1EEEA85D62AFB703E1F9FE4___D6F8DBE4DF26C786F25BF1CD90CF2E7E {ushort_t pa_entity;ushort_t pa_port;ushort_t pa_target;ushort_t pa_reserved;};
struct door_desc___25857EF0BB56C9434AE30E0D4D8F6E3F___4FC0E9F7C1E4FBF8E47EDF6D621C02B8 {int d_descriptor;door_id_t d_id;};
struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___F8DD959EF7757CB3FE124040C2995881 {void *__addr;int __trapno;caddr_t __pc;};
struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___53D01225980FCAE7122E28993227E8F1 {uint16_t u_du_zero;uint16_t u_du_mtu;};
struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___7B3B6785F52FEBD22F1447BAEAA20549 {uint8_t u_pp_ptr;uint8_t u_pp_rsvd[3];};
struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___BF1873CBC7925A80863A89A5F584CFD8 {uint16_t u_echo_ident;uint16_t u_echo_seqnum;};
struct in_addr___62419D96C55FD564B59AC1457FCC29DF___CA47E2D0110326C1FF3241D99B03738B {uint8_t s_b1;uint8_t s_b2;uint8_t s_b3;uint8_t s_b4;};
struct in_addr___62419D96C55FD564B59AC1457FCC29DF___F83FB9AF7C487DE20DBC314CA3F6F492 {uint16_t s_w1;uint16_t s_w2;};
struct objdata___B3007D6063AF66DF722E8A0D3E39E00C___C5CA305DAC14A48247D92F909AB77E9C {u_int po_data_len;char *po_data_val;};
struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___C0A0CADF59D9B7AA8DD004285CB4071F {int32_t s1;int32_t s2;};
struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___D52F10176CE5E6769EE83800681284AC {rpcvers_t low;rpcvers_t high;};
struct siginfo___61EAF0F09D3366CB297160630E2CDB63___F8DD959EF7757CB3FE124040C2995881 {void *__addr;int __trapno;caddr_t __pc;};
struct tmpnode___8A064BB42F06F947A31D89B2B058AC9B___B23A431050292DDB2A4FAE77ED622141 {struct tdirent *un_dirlist;uint_t un_dirents;};
union auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774___FAC801B16405A3810F07150B5E65B5F1 {struct auxent______FAC801B16405A3810F07150B5E65B5F1___6A81AB9DD74A0937A06BA2C0FB9C8664 x_lnsz;int x_fsize;};
struct fid___51BF437B1B3635FB7766BD36FE5A8A71___D6C94933DFB77C745B6D4069BF1BE876 {ushort_t len;char data[64];};
struct _5FF073EC236C3BFF212C817E6EDD9CDF___9FDBFB16591870EEECD4F897E60320A7 {ushort_t _idev_vector;ushort_t _idev_priority;};
struct _8E64F109147703DFED6209FCF9267D5F___A5946D7F0FF7E1FB159B888C46BEDC44 {int32_t _u;int32_t _l;};
struct _EE75A551A8E099987506FD558A5F43CD___1221EBEE0BC5770066296252685AA853 {uchar_t _byte0;uchar_t _byte1;uchar_t _byte2;uchar_t _byte3;uchar_t _byte4;uchar_t _byte5;uchar_t _byte6;uchar_t _byte7;};
struct _EE75A551A8E099987506FD558A5F43CD___E768FB53C124E6AD95EC19322F0DD4E9 {uint32_t _long0;uint32_t _long1;};
struct _F99502BFD9E4DD069DB8AE6B087E28E4___A5946D7F0FF7E1FB159B888C46BEDC44 {int32_t _u;int32_t _l;};
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_fddi_gen_struct {uint32_t ifru_fddi_gioctl;uint32_t ifru_fddi_gaddr;};
struct ELS_payload__els_cmd_u___6093A708197FAE24BE48D5551ABE0EB0 {uchar_t ls_command;uchar_t reserved[3];};
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__serial {uint32_t ua;uint32_t uc;};
struct cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C__disk {uint32_t bksize;uint32_t nblocks;uint32_t edcloc;};
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__modem {uint32_t fc;uint32_t cb;uint32_t eb;uint32_t tb;};
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__voice {uint32_t uv;uint32_t nsr;uint32_t sr[16];uint32_t nss;uint32_t ss[16];uint32_t nsc;uint32_t sc[16];};
struct cistpl_longlink_mfc_t___614D05123FB722C586C9743560705075 {uint32_t tas;uint32_t addr;};
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_fddi_stats {uint32_t stat_size;uint32_t fddi_stats;};
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_netmapents {uint32_t map_ent_size;uint32_t entry_number;uint32_t fddi_map_ent;};
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_dnld_reqs {uint32_t v_addr;uint32_t m_addr;uint32_t ex_addr;uint32_t size;};
struct mdi_register_address___77CD747F4C29F871554116EFE8364197 {unsigned int res0 : 18;unsigned int hires : 1;unsigned int ramspeed : 1;unsigned int version : 2;unsigned int cad : 10;};
union nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547 {struct nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547___E109A5D6027DEB813545D8BF49E916D8 host;struct servent *serv;};
union nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2 {struct nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2___E109A5D6027DEB813545D8BF49E916D8 host;struct servent *serv;};
union prxregset_____pr_v8p___5BB8866D8A3A461A966C1C583747DDAA {uint32_t pr_regs[32];double pr_dregs[16];long double pr_qregs[8];};
struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g0 {uchar_t addr1;uchar_t addr0;uchar_t count0;unsigned char vu_57 : 1;unsigned char vu_56 : 1;unsigned char rsvd : 3;unsigned char naca : 1;unsigned char flag : 1;unsigned char link : 1;};
struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g1 {uchar_t addr3;uchar_t addr2;uchar_t addr1;uchar_t addr0;uchar_t rsvd1;uchar_t count1;uchar_t count0;unsigned char vu_97 : 1;unsigned char vu_96 : 1;unsigned char rsvd0 : 3;unsigned char naca : 1;unsigned char flag : 1;unsigned char link : 1;};
struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g4 {uchar_t addr3;uchar_t addr2;uchar_t addr1;uchar_t addr0;uchar_t addtl_cdb_data3;uchar_t addtl_cdb_data2;uchar_t addtl_cdb_data1;uchar_t addtl_cdb_data0;uchar_t count3;uchar_t count2;uchar_t count1;uchar_t count0;uchar_t rsvd1;unsigned char vu_157 : 1;unsigned char vu_156 : 1;unsigned char rsvd0 : 3;unsigned char naca : 1;unsigned char flag : 1;unsigned char link : 1;};
struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g5 {uchar_t addr3;uchar_t addr2;uchar_t addr1;uchar_t addr0;uchar_t count3;uchar_t count2;uchar_t count1;uchar_t count0;uchar_t rsvd1;unsigned char vu_117 : 1;unsigned char vu_116 : 1;unsigned char rsvd0 : 3;unsigned char naca : 1;unsigned char flag : 1;unsigned char link : 1;};
struct _lwp_mutex___mutex_flags___mbcp_type_un___mtype_rcount {uint8_t count_type1;uint8_t count_type2;};
struct ifreq___031EB9357DA800073593637CA1D35508__ifr_ppaflags {short ifrup_flags;short ifrup_filler;uint_t ifrup_ppa;};
struct nis_bound_directory___F62E7BB7AC2DF8B83A7DAD8BC3B92E6C {u_int BEP_len;nis_bound_endpoint *BEP_val;};
union lookup_result_type___140B16D067C68AF228EDC44C385D8FF8 {struct linka lt_linka;};
union nfslog_writeresult___2A0DD4582CCBEFAEB0E3EA5381B6CC76 {uint32_t wr_size;};
struct r_rpcb_rmtcallargs___FEBD41F85E33D0E2AA5450E1B16FBC3A {uint32_t args_len;char *args_val;};
struct r_rpcb_rmtcallres___C5922F02EDBA7A11822BD586DD2777D6 {uint32_t results_len;char *results_val;};
struct rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D {u_int args_len;char *args_val;};
struct dbri_dts_opcode___E7979599CA1B17574DB8BEEF940714B1 {unsigned int cmd : 4;unsigned int cmdi : 1;unsigned int res : 9;unsigned int vi : 1;unsigned int vo : 1;unsigned int id : 1;unsigned int oldin : 5;unsigned int oldout : 5;unsigned int pipe : 5;};
struct rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB {u_int results_len;char *results_val;};
struct ufsd_log_data_t___8F822F98A258527A6C698449669E9920 {u_int umld_buf_len;char *umld_buf_val;};
union cdrom_tocentry___4A050E57821F0F876A45302BC49D06BB {struct cdrom_tocentry___4A050E57821F0F876A45302BC49D06BB___5680DDBB97F8FD3AF591112B550EB0BE msf;int lba;};
union cdrom_subchnl___426CCB5B871ABC0B6979E88E159E461E {struct cdrom_subchnl___426CCB5B871ABC0B6979E88E159E461E___5680DDBB97F8FD3AF591112B550EB0BE msf;int lba;};
struct directory_obj___1F9DB6EC5B4D38C4C9C3429D1A4D637D {u_int do_servers_len;nis_server *do_servers_val;};
struct directory_obj___C1C9E10248BAA10524C7D0EEA27D2609 {u_int do_armask_len;oar_mask *do_armask_val;};
struct mntinfo_kstat___BCB113A9A38551695E091F53F19F14C3 {uint32_t srtt;uint32_t deviate;uint32_t rtxcur;};
struct p_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D {u_int args_len;char *args_val;};
struct vt_start_time___AB8ADE090A0B9DD48F0CA973837EF690 {ulong_t hi32;ulong_t lo32;};
struct vt_total_time___AB8ADE090A0B9DD48F0CA973837EF690 {ulong_t hi32;ulong_t lo32;};
struct nss_XbyY_key___2B30735CA198EE135C9CF196B5967FEB {union nss_XbyY_key___2B30735CA198EE135C9CF196B5967FEB___1B8C580BAD0E12BFB07DA020F29DD50C serv; char *proto;};
struct p_rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9 {u_int res_len;char *res_val;};
struct nis_taglist___D5235F6F3B62BCE7910AF756FE53E6D0 {u_int tags_len;nis_tag *tags_val;};
struct rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D {u_int args_len;char *args_val;};
struct vt_abs_time___AB8ADE090A0B9DD48F0CA973837EF690 {ulong_t hi32;ulong_t lo32;};
struct WRITE3args___67EF420668BC39A8825B32AFBE42D0CA {uint_t data_len;char *data_val;};
union bp_address___3B940BBAFE206A608BBBF7EC1987BA49 {ip_addr_t ip_addr;};
struct ib_request___284138CD61DEACF1E3B0F8ADC9D2B817 {u_int ibr_srch_len;nis_attr *ibr_srch_val;};
struct ib_request___2D577313DCD2E74CD5A0055993933E3C {u_int ibr_cbhost_len;nis_server *ibr_cbhost_val;};
struct ib_request___BC4F227684F3C8C9122828D0FF4C6B30 {u_int ibr_obj_len;nis_object *ibr_obj_val;};
struct log_result___946B3E427CBAEF2C8E64E80E43621ACD {u_int lr_entries_len;log_entry *lr_entries_val;};
struct nis_result___4B6B45C3F1C3815D68D653B8D499AE33 {u_int objects_len;nis_object *objects_val;};
struct nis_server___DA92845B88BF4FFBAAA2281E50DC5AF5 {u_int ep_len;endpoint *ep_val;};
struct ns_request___C16B7AFEC0429C3BD747A37F4D827FFD {u_int ns_object_len;nis_object *ns_object_val;};
union prfpregset___3423A07CE9086D0915E1099AD093ACC1 {uint32_t pr_regs[32];double pr_dregs[16];};
struct rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9 {u_int res_len;char *res_val;};
struct ufsd_msg_t___5013129CDB1FAC507F9E476F5694139E {u_int um_spare_len;char *um_spare_val;};
struct des_block___5225801D107CE2D6470E1DB341886AD6 {uint32_t high;uint32_t low;};
union desparams___253CA3BE9A5A5329A1F720696CC4BB93 {uchar_t UDES_data[16];uchar_t *UDES_buf;};
union door_desc___25857EF0BB56C9434AE30E0D4D8F6E3F {struct door_desc___25857EF0BB56C9434AE30E0D4D8F6E3F___4FC0E9F7C1E4FBF8E47EDF6D621C02B8 d_desc;int d_resv[5];};
struct dump_args___00C533AE8545A66FA38641508A3DC473 {u_int da_cbhost_len;nis_server *da_cbhost_val;};
struct entry_col___E942B815045DEE9FABC14DA0AE6314FC {u_int ec_value_len;char *ec_value_val;};
struct entry_obj___9954B692FACAC347CBA764979909DFF4 {u_int en_cols_len;entry_col *en_cols_val;};
struct fd_result___864956CB4DA79F92CA310E20E4E9B271 {u_int signature_len;char *signature_val;};
struct fd_result___E188DDB4946479B1B04909415F6D7A2E {u_int dir_data_len;char *dir_data_val;};
struct log_entry___1E639176190539C4AF5A837E820AE922 {u_int le_attrs_len;nis_attr *le_attrs_val;};
union rd_notify___143F0EF771439D241AFD6E8AB1506B64 {psaddr_t bptaddr;int syscallno;};
union sigaction___3EF29538CA63FA48B196EFE7F55176B1 {void (*_handler)();void (*_sigaction)(int, siginfo_t *, void *);};
struct table_obj___37F826B7C2AFF7B3E483E0E1EE89ED51 {u_int ta_cols_len;table_col *ta_cols_val;};
union td_notify___143F0EF771439D241AFD6E8AB1506B64 {psaddr_t bptaddr;int syscallno;};
union fifo_reg___2C4CA6FC96781476665F04CD0317A0CB {uint8_t cfifo;uint8_t dfifo;uint8_t tfifo;uint8_t config_a;};
union info_reg___A99CADDF0A6969246070D83E4F241E67 {uint8_t datar;uint8_t afifo;};
struct link_obj___6E2208C80A69EAD3D69988E63D048B29 {u_int li_attrs_len;nis_attr *li_attrs_val;};
struct nis_attr___F2081D9F3F0358B3A954C101A2B200CE {u_int zattr_val_len;char *zattr_val_val;};
struct statsvar___7FCA211C9072D2949954B3DB78BFDDCD {u_int cp_time_len;int *cp_time_val;};
struct statsvar___BB7C6D2B3C1E1AB741C949E9CDEFD86D {u_int dk_xfer_len;int *dk_xfer_val;};
union lifconf___13CA4C53A4CDABC7C7076CCE366D4628 {caddr_t lifcu_buf;struct lifreq *lifcu_req;};
struct secattr___AC4F1B810FD413B8B20095E4821CDF90 {uint_t aclent_len;aclent *aclent_val;};
struct secattr___BBC7B5EFA13BC05BE06C962A868FC99E {uint_t dfaclent_len;aclent *dfaclent_val;};
struct fdcreg___C3A2651014D6C78917994F3FE5B85EFD {uchar_t fdc_control;uchar_t fdc_fifo;};
struct futmpx___11610CE8875B9446FC755A3DED782E56 {int16_t e_termination;int16_t e_exit;};
union ifconf___28C87C5ACD364976D94B96E40062B553 {caddr_t ifcu_buf;struct ifreq *ifcu_req;};
struct la_wwn___E7FEB4D8EB8DF71B4CA1F98BC2D628AC {unsigned int naa_id : 4;unsigned int nport_id : 12;unsigned int wwn_hi : 16;uint_t wwn_lo;};
union lifreq___45DD51CF1AA3D53B555DDF2404323785 {int lifru_addrlen;uint_t lifru_ppa;};
union syment___DDDE857849BC8DF52744F40651AC3747 {char _n_name[8];struct syment___DDDE857849BC8DF52744F40651AC3747___FF8ECF8B5000729F16967D2BEB64C9EE _n_n;char *_n_nptr[2];};
struct dlsap___9581DFA880E1BDAFBA851730491A1CBF {uchar_t dl_nodeaddr[6];uchar_t dl_sap;};
struct futmp___11610CE8875B9446FC755A3DED782E56 {int16_t e_termination;int16_t e_exit;};
struct _lwp_mutex___mutex_lock_un___mutex_lock {uint8_t pad[8];};
union fid___51BF437B1B3635FB7766BD36FE5A8A71 {int fid_pad;struct fid___51BF437B1B3635FB7766BD36FE5A8A71___D6C94933DFB77C745B6D4069BF1BE876 _fid;};
union fpu___5FAD1835C40B8F1B9C5FF4A2CD2D32A1 {uint32_t fpu_regs[32];double fpu_dregs[16];};
union as___FD7ECAE4B99ABB3F02DCF01D47D0EBC9 {struct seg *seglast;ssl_spath *spath;};
union fq___3D3D4FC1770C1E48B1A2982F7A6AC98A {double whole;struct fpq fpq;};
union fs___9F46D7DD5950A1025F84ACF2764AD23B {uint32_t fs_csp_pad[32];struct csum *fs_csp;};
struct _04DE162F931BF1138370E48C46D0BB8C {t_uscalar_t dl_primitive;t_uscalar_t dl_correlation;t_uscalar_t dl_status;};
struct _0C787AC3F519F07F1A30A3F49C54BEF6 {uint_t yp_buf_len;char *yp_buf_val;};
struct _1095822099D52E0E523F071FF4F33828 {t_scalar_t dl_target_value;t_scalar_t dl_accept_value;};
struct _1186758DF1720BB7F25A7D498E851913 {caddr_t lc_wchan0;caddr_t lc_wchan;};
struct _12883A0710B467FBB4742064A9BE69DF {Elf32_Word vda_name;Elf32_Word vda_next;};
struct _151922ADF64B06A7DAF3138A8711D7E7 {t_uscalar_t dl_primitive;t_uscalar_t dl_dest_addr_length;t_uscalar_t dl_dest_addr_offset;t_uscalar_t dl_src_addr_length;t_uscalar_t dl_src_addr_offset;t_uscalar_t dl_priority;t_uscalar_t dl_service_class;};
struct _17DB385B90B304C8609CE6820D4849CB {kstat_named_t cache_hit;kstat_named_t cache_miss;kstat_named_t active_pages;kstat_named_t cached_pages;kstat_named_t purge_count;};
struct _19DEE1C64F7EC3DDB040A3404BEC0D9F {u_int utmp_array_len;rusers_utmp *utmp_array_val;};
struct _1C7EDB14D495611F6D5B778EE61996F1 {t_uscalar_t dl_primitive;t_uscalar_t dl_correlation;t_uscalar_t dl_resp_token;t_uscalar_t dl_qos_length;t_uscalar_t dl_qos_offset;t_uscalar_t dl_growth;};
struct _1F097835C705A71A99785C5F8D94F01C {t_uscalar_t dl_primitive;t_uscalar_t dl_level;};
struct _1FF34CFEF9C2EB17EF4167068BB24E21 {t_uscalar_t dl_primitive;t_uscalar_t dl_correlation;t_uscalar_t dl_src_addr_length;t_uscalar_t dl_src_addr_offset;};
struct _2051B98100A0C61393C608F0D7B8F621 {t_uscalar_t dl_primitive;t_uscalar_t dl_token;};
struct _20B967FD53182EA0ACEED1B6ABCFD823 {t_uscalar_t dl_primitive;t_uscalar_t dl_subs_sap_offset;t_uscalar_t dl_subs_sap_length;};
struct _250291EC3BC74262394306E05299BF94 {seg_skiplist *ssls[4];};
struct _26B314697E7266AC176F51890C474785 {uchar_t nothing;};
struct _2ED74837B10F4575EAFC3A6A8D0E8399 {short nmethods;short ndefined;_LC_methods_func_t methods[1];};
struct _2FC37C12F50461D7B99376C23209E757 {Elf64_Half si_boundto;Elf64_Half si_flags;};
struct _318570FC7384B19A4DCAD3D835569F28 {t_scalar_t dl_min;t_scalar_t dl_max;};
struct _32C08F122C9B6B5AD3095757A88A96E6 {t_uscalar_t dl_primitive;t_uscalar_t dl_addr_length;t_uscalar_t dl_addr_offset;};
struct _3747F54EBF0E40BCD04B6F28DE7EFCF2 {t_uscalar_t dl_primitive;t_uscalar_t dl_reason;t_uscalar_t dl_correlation;};
struct _4675A006519F4470174748AEB7610016 {t_scalar_t dl_disc_prob;t_scalar_t dl_reset_prob;};
struct _4DAB4BE26238A65C4840EC4623134811 {uint_t db_next_desc_len;char *db_next_desc_val;};
struct _4F78B3A32EAF514EACC363DCB345C490 {hme_ioc_hdr_t hdr;int mode;int speed;};
struct _52996A3AC8C68F1BEA5587A21EB91746 {t_uscalar_t dl_primitive;t_uscalar_t dl_qos_length;t_uscalar_t dl_qos_offset;};
struct _54EC9098503BC20AC050B3CB62F30CBC {t_uscalar_t dl_primitive;};
struct _551C78EEC93CDF0108C003355B4DC50B {t_uscalar_t dl_primitive;t_uscalar_t dl_flag;t_uscalar_t dl_dest_addr_length;t_uscalar_t dl_dest_addr_offset;t_uscalar_t dl_src_addr_length;t_uscalar_t dl_src_addr_offset;};
struct _56A66AEB305BDFFF6669B4BC9F04D8CC {t_uscalar_t dl_primitive;t_uscalar_t dl_stat_length;t_uscalar_t dl_stat_offset;};
struct _57D8EEF26067F90BF74ECA27AA5A03F5 {int a_type;union _57D8EEF26067F90BF74ECA27AA5A03F5___9E371396825061504C3ADBBA51EB32E4 a_un;};
struct _5A96F9ADF207CF237355020FDA0EFEF5 {uchar_t enctype;uchar_t subenclosure;unsigned short svalid : 1;unsigned short priv : 15;uchar_t encstat[4];};
struct _5A986AD36714D9EA4A4C301E327B6C4C {t_uscalar_t dl_primitive;t_uscalar_t dl_originator;t_uscalar_t dl_reason;};
struct _5F20F5A0DF59391F86268A875D1DFCE5 {t_uscalar_t dl_primitive;t_uscalar_t dl_subs_sap_offset;t_uscalar_t dl_subs_sap_length;t_uscalar_t dl_subs_bind_class;};
struct _5F450950E4D1D1BEF117F0FECB7D4E7F {t_uscalar_t dl_primitive;t_uscalar_t dl_addr_type;};
struct _5F5854608C3B35F56B7E671DFC3D4679 {t_uscalar_t dl_primitive;t_uscalar_t dl_flag;t_uscalar_t dl_dest_addr_length;t_uscalar_t dl_dest_addr_offset;};
struct _6601AD8F8068B3BD81BCD4072DAC7812 {t_uscalar_t dl_primitive;t_uscalar_t dl_resp_addr_length;t_uscalar_t dl_resp_addr_offset;t_uscalar_t dl_qos_length;t_uscalar_t dl_qos_offset;t_uscalar_t dl_growth;};
struct _66B76CCBD7517A35749D93819776E291 {lagreg_t lr_esp;lagreg_t lr_ebp;};
struct _69B63B591732E05C41D6CC17B4FA972F {ulong_t probenum;int enabled;int traced;int attrsize;};
struct _6F34A6491CA243DAC3BD57A8740A9A28 {t_uscalar_t dl_primitive;t_uscalar_t dl_ppa;};
struct _734E31BBDA3A31A5E7F21845616A11EB {LayoutDesc inp;LayoutDesc out;};
struct _7B9922258B8A0A4B0B5326F3B4359CE8 {t_uscalar_t dl_primitive;t_uscalar_t dl_correlation;t_uscalar_t dl_dest_addr_length;t_uscalar_t dl_dest_addr_offset;t_uscalar_t dl_src_addr_length;t_uscalar_t dl_src_addr_offset;t_uscalar_t dl_priority;t_uscalar_t dl_service_class;};
struct _7E515F46519A2C03149F8E5448716EB7 {caddr_t who;int select;int level;caddr_t dependent;int size;};
struct _82C0C6D790EF9405DE6F913108BCAA59 { char *name;unsigned int index;int tmin;int tmax;};
struct _8716BC3DCA46F0A7F3673119A555C1D4 {char euc_bytelen0;char euc_bytelen1;char euc_bytelen2;char euc_bytelen3;char euc_scrlen0;char euc_scrlen1;char euc_scrlen2;char euc_scrlen3;int cs1_base;int cs2_base;int cs3_base;int dense_end;int cs1_adjustment;int cs2_adjustment;int cs3_adjustment;};
struct _8730B17123942F667165FE26F5FCD7CE {enum _8730B17123942F667165FE26F5FCD7CE___3DDB4C346819B22BEDB9C12A4C6CC876 buffer_state;int buffer_size;int trace_stopped;int pidfilter_mode;int pidfilter_size;};
struct _885C04ED232DA6939269E5648CBB0F98 {ushort_t pppAuthControlIndex;ushort_t pppAuthTypeLocal;ushort_t pppAuthTypeRemote;};
struct _8A4D2DD0535D3740C9D9302B62B9E8F3 {Elf32_Word n_namesz;Elf32_Word n_descsz;Elf32_Word n_type;};
struct _9CAE931C1CBD273987054BC4D502AAC2 {callb_cpr_t *(*cb_callback)(void *);void *cb_cbp;};
struct _A4BEC33DC2CEF1EA6A21E2966A3DEECD {unsigned int xrs_id;caddr_t xrs_ptr;};
struct _A6F5D22C47870C9C34E13B26D36736E1 {unsigned int id : 16;unsigned int qr : 1;unsigned int opcode : 4;unsigned int aa : 1;unsigned int tc : 1;unsigned int rd : 1;unsigned int ra : 1;unsigned int unused : 1;unsigned int ad : 1;unsigned int cd : 1;unsigned int rcode : 4;unsigned int qdcount : 16;unsigned int ancount : 16;unsigned int nscount : 16;unsigned int arcount : 16;};
struct _A74C68CDF7A8346DB4740D5AEB53B0D9 {papPasswdEntry_t passwd;};
struct _A9BE18D8DE98772F097D505829E8B2F3 {t_uscalar_t dl_primitive;t_uscalar_t dl_correct_primitive;};
struct _AD4457FAA5FAAE8991C949BB8D588EAD {t_uscalar_t dl_primitive;t_uscalar_t dl_sap;t_uscalar_t dl_addr_length;t_uscalar_t dl_addr_offset;t_uscalar_t dl_max_conind;t_uscalar_t dl_xidtest_flg;};
union _B5B36604A4D7B91FFF9FA298D0BE592E {struct seg *list;seg_skiplist *skiplist;};
struct _B9BBC47815B70F123F5B3D4C1D596CE1 {uint_t ppa;uint_t cmd;uint_t options;};
union _C57692D243E2F42291707545D24FC942 {int pi_pad[4];int pi_has_rmt;flk_callback_t pi_cback;};
struct _C9793B2A88A40550F3E6FCBE57C78800 {u_int sprayarr_len;char *sprayarr_val;};
struct _CA18D99C52BF47BA3661A7BE783B3F23 {Elf64_Word n_namesz;Elf64_Word n_descsz;Elf64_Word n_type;};
struct _CB6AA1DC15048494E8DB562E85E5F184 {t_uscalar_t dl_primitive;t_uscalar_t dl_dest_addr_length;t_uscalar_t dl_dest_addr_offset;t_uscalar_t dl_src_addr_length;t_uscalar_t dl_src_addr_offset;t_uscalar_t dl_group_address;};
struct _CD160A28723B1B650FC96BC3CBBCB54B {t_uscalar_t dl_primitive;t_uscalar_t dl_dest_addr_length;t_uscalar_t dl_dest_addr_offset;t_uscalar_t dl_unix_errno;t_uscalar_t dl_errno;};
struct _CE4930CE30C4A3FD577842D3323B273C {t_uscalar_t dl_primitive;t_uscalar_t dl_originator;t_uscalar_t dl_reason;t_uscalar_t dl_correlation;};
struct _D30353D08B71B27BB4CD9334EB50A9EF {int num;LclCharsetSegment *seg;};
struct _D34CDA88D8A7072F4DEA084B2AED3D31 {t_uscalar_t dl_primitive;t_uscalar_t dl_correlation;t_uscalar_t dl_called_addr_length;t_uscalar_t dl_called_addr_offset;t_uscalar_t dl_calling_addr_length;t_uscalar_t dl_calling_addr_offset;t_uscalar_t dl_qos_length;t_uscalar_t dl_qos_offset;t_uscalar_t dl_growth;};
struct _D4691ED55A662893A224D2D25A30EEEC {t_uscalar_t dl_primitive;t_uscalar_t dl_error_primitive;t_uscalar_t dl_errno;t_uscalar_t dl_unix_errno;};
struct _D758E79311354DDC9AF0CC7E7C22CD10 {Elf64_Word vda_name;Elf64_Word vda_next;};
struct _ECD491B309C6C7D8FCBA014B12E7CF40 {t_uscalar_t dl_primitive;t_uscalar_t dl_dest_addr_length;t_uscalar_t dl_dest_addr_offset;t_uscalar_t dl_qos_length;t_uscalar_t dl_qos_offset;t_uscalar_t dl_growth;};
struct _EF437A666C9BB0FC607366CF45CE1FC4 {kstat_named_t MADV_FREE_hit;kstat_named_t MADV_FREE_miss;};
struct _F8793C5ADA5B1735862C612D8105FB3D {uint_t mactype;uint_t ppa;};
struct _F9FB4C2AA908D131736A9D97993FD8DC {uchar_t macaddr[6];uchar_t multicast1[6];uchar_t multicast2[6];uchar_t multicast3[6];uchar_t multicast4[6];unsigned int novell;};
struct _FC07BF6E13A3F29964B2741842A3FFCB {uint_t ppp_message;};
struct _FE43560485AD2DF497423A9D2646B91A {Elf32_Half si_boundto;Elf32_Half si_flags;};
struct cistpl_cftable_entry_mem_window_t {uint32_t length;uint32_t card_addr;uint32_t host_addr;};
struct isdn_channel_info__isdn_io_stats {ulong_t packets;ulong_t octets;ulong_t errors;};
struct cistpl_cftable_entry_io_range_t {uint32_t addr;uint32_t length;};
struct mib2_udp6Entry__udp6EntryInfo_s {int ue_state;Ip6Address ue_RemoteAddress;int ue_RemotePort;};
struct nfs_fh3__nfs_fh3_u__nfs_fh3_i {fhandle_t fh3_i;};
struct cistpl_cftable_entry_speed_t {uint32_t flags;uint32_t wait;uint32_t nS_wait;uint32_t rdybsy;uint32_t nS_rdybsy;uint32_t rsvd;uint32_t nS_rsvd;};
struct cistpl_cftable_entry_misc_t {uint32_t flags;};
struct cachefs_log_logfile_header {uint_t lh_magic;uint_t lh_revision;int lh_errno;uint_t lh_blocks;uint_t lh_files;uint_t lh_maxbsize;uint_t lh_pagesize;};
struct cistpl_cftable_entry_irq_t {uint32_t flags;uint32_t irqs;};
struct cistpl_cftable_entry_pwr_t {uint32_t nomV;uint32_t nomV_flags;uint32_t minV;uint32_t minV_flags;uint32_t maxV;uint32_t maxV_flags;uint32_t staticI;uint32_t staticI_flags;uint32_t avgI;uint32_t avgI_flags;uint32_t peakI;uint32_t peakI_flags;uint32_t pdownI;uint32_t pdownI_flags;};
struct extension_signature_struct {char *ext_signature;uchar_t *(*sig_handler)();};
struct cistpl_devspeed_struct_t {uint32_t *table;uint32_t *tenfac;uint32_t *mantissa;uint32_t *exponent;};
struct em_modify_event_mask_req {uint32_t em_primitive;};
typedef FN_ctx_svc_func_t FN_ctx_svc_func_array_t[21];
typedef uint8_t *OCF_CardServiceMethod_t;
typedef uint32_t OCF_EventRegistration_t;
struct cachefsio_lostfound_arg {cfs_cid_t lf_cid;char lf_name[256];};
struct cistpl_devicegeo_info_t {uint32_t bus;uint32_t ebs;uint32_t rbs;uint32_t wbs;uint32_t part;uint32_t hwil;};
struct ip6_opt_binding_request {uint8_t ip6or_type;uint8_t ip6or_len;};
typedef enum isdn_activation_state isdn_activation_state_t;
struct scsi_reset_notify_entry {struct scsi_address *ap;void (*callback)(caddr_t);caddr_t arg;struct scsi_reset_notify_entry *next;};
typedef uint8_t *OCF_CardServiceClass_t;
typedef cachefs_metadata_t cfs_cachefs_metadata_t;
struct em_get_first_tuple_ack {uint32_t em_primitive;};
struct em_get_first_tuple_req {uint32_t em_primitive;uint32_t em_socket;uint32_t em_desired_tuple;};
struct ip6_opt_binding_update {uint8_t ip6ou_type;uint8_t ip6ou_len;uint8_t ip6ou_flags;uint8_t ip6ou_prefixlen;uint8_t ip6ou_seqno[2];uint8_t ip6ou_lifetime[4];uint8_t ip6ou_coa[16];};
struct OCF_Event_Exception_t {uint32_t flags;};
struct _LclCharsetLinkedList {char *name;LclCharsetLinkedList *next;};
struct em_get_next_tuple_ack {uint32_t em_primitive;};
struct em_get_next_tuple_req {uint32_t em_primitive;};
struct fdcreg__fdc_82077_reg {uchar_t fdc_filler1[2];uchar_t fdc_dor;uchar_t fdc_filler2;uchar_t fdc_control;uchar_t fdc_fifo;uchar_t fdc_filler3;uchar_t fdc_dir;};
struct getUserPasswordInfo_t {int8_t *type;int8_t *password;};
struct pcmcia_parent_private {int ppd_nreg;struct pcm_regs *ppd_reg;int ppd_intr;struct intrspec *ppd_intrspec;void *pcm_dummy[3];struct pcm_regs *ppd_assigned;short ppd_socket;short ppd_function;int ppd_active;uint32_t ppd_flags;void *ppd_handle;};
struct _kthread__tsd_thread {struct tsd_thread *ts_next;struct tsd_thread *ts_prev;uint_t ts_nkeys;void **ts_value;};
struct cistpl_device_node_t {uint32_t flags;uint32_t speed;uint32_t nS_speed;uint32_t type;uint32_t size;uint32_t size_in_bytes;};
struct cistpl_longlink_ac_t {uint32_t flags;uint32_t tpll_addr;};
struct emulex_format_params {uchar_t alt_cyl;unsigned char nheads : 4;unsigned char ssz : 1;unsigned char sst : 2;unsigned char : 1;unsigned char nsect;uchar_t ncyl_hi;uchar_t ncyl_lo;uchar_t head_skew;uchar_t reserved[3];};
typedef enum _A6580FDE48616C23ADC769BAB4D07B11 flk_lockmgr_status_t;
struct ip6_opt_home_address {uint8_t ip6oh_type;uint8_t ip6oh_len;uint8_t ip6oh_addr[16];};
typedef enum _628604CA069736C17E916A575687F61F isdn_loopback_chan_t;
typedef enum _A959B596F4A4BFCA9FCF924B52F0DB35 isdn_loopback_type_t;
typedef la_els_adisc_t la_els_adisc_reply_t;
typedef nss_backend_t *(*nss_backend_constr_t)( char *db_name,  char *src_name,  char *cfg_args);
struct nss_getnetgrent_args {char *buffer;int buflen;enum nss_netgr_status status;char *retp[3];};
union nss_netdirbyaddr_out {struct nd_hostservlist **nd_hslist;union nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547 nss;};
union nss_netdirbyname_out {struct nd_addrlist **nd_alist;union nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2 nss;};
struct nss_setnetgrent_args { char *netgroup;nss_backend_t *iterator;};
struct stp4020_window_ctl_t {ushort_t ctl0;ushort_t ctl1;};
struct cachefs_rl_listhead {uint_t rli_front;uint_t rli_back;int rli_blkcnt;int rli_itemcnt;};
struct cistpl_linktarget_t {uint32_t length;char tpltg_tag[254];};
struct em_adapter_info_ack {uint32_t em_primitive;uint32_t em_num_sockets;uint32_t em_num_windows;uint32_t em_num_power;uint32_t em_power_offset;uint32_t em_power_length;};
struct em_adapter_info_req {uint32_t em_primitive;};
struct em_ident_socket_req {uint32_t em_primitive;uint32_t em_socket;};
struct hme_rxfifo_aperture {uint_t rxfifo_loapert[512];uint_t rxfifo_hiapert[512];};
struct hme_txfifo_aperture {uint_t txfifo_loapert[512];uint_t txfifo_hiapert[512];};
struct ip6_opt_binding_ack {uint8_t ip6oa_type;uint8_t ip6oa_len;uint8_t ip6oa_status;uint8_t ip6oa_seqno[2];uint8_t ip6oa_lifetime[4];uint8_t ip6oa_refresh[4];};
typedef enum isdn_message_type isdn_message_type_t;
typedef la_els_logi_t la_els_logi_reply_t;
typedef la_els_logo_t la_els_logo_reply_t;
typedef la_els_prli_t la_els_prli_reply_t;
typedef la_els_prli_t la_els_prlo_reply_t;
struct nfslog_dirlistplus3 {nfslog_entryplus3 *entries;bool_t eof;};
typedef enum __ns_update_operation ns_update_operation;
struct scsi_extended_sense {unsigned char es_valid : 1;unsigned char es_class : 3;unsigned char es_code : 4;uchar_t es_segnum;unsigned char es_filmk : 1;unsigned char es_eom : 1;unsigned char es_ili : 1;unsigned char : 1;unsigned char es_key : 4;unsigned char es_info_1;uchar_t es_info_2;uchar_t es_info_3;uchar_t es_info_4;uchar_t es_add_len;uchar_t es_cmd_info[4];uchar_t es_add_code;uchar_t es_qual_code;uchar_t es_fru_code;uchar_t es_skey_specific[3];uchar_t es_add_info[2];};
struct tnfctl_ind_obj_info {int objfd;uintptr_t text_base;uintptr_t data_base; char *objname;};
struct usb_interface_descr {uint8_t bLength;uint8_t bDescriptorType;uint8_t bInterfaceNumber;uint8_t bAlternateSetting;uint8_t bNumEndpoints;uint8_t bInterfaceClass;uint8_t bInterfaceSubClass;uint8_t bInterfaceProtocol;uint8_t iInterface;};
typedef uint64_t OCF_ClientHandle_t;
struct __private_execattr { char *name; char *type; char *id; char *policy;int search_flag;execstr_t *head_exec;execstr_t *prev_exec;};
struct _ldterm_cs_methods {int (*ldterm_dispwidth)(uchar_t, void *, int);int (*ldterm_memwidth)(uchar_t, void *);};
struct _ldterm_eucpc_data {uchar_t byte_length;uchar_t screen_width;uchar_t msb_start;uchar_t msb_end;};
struct ar_client_notify_s {uint32_t arcn_cmd;uint32_t arcn_name_offset;uint32_t arcn_name_length;uint32_t arcn_code;};
struct bpp_transfer_parms {enum handshake_t read_handshake;int read_setup_time;int read_strobe_width;int read_timeout;enum handshake_t write_handshake;int write_setup_time;int write_strobe_width;int write_timeout;};
struct cistpl_byteorder_t {uint32_t order;uint32_t map;};
struct cistpl_devicegeo_t {cistpl_devicegeo_info_t info[42];};
struct cistpl_pd_struct_t {uint32_t *mantissa;uint32_t *exponent;};
typedef ddi_dma_impl_t ddi_dma_seg_impl_t;
typedef void door_server_func_t(door_info_t *);
struct em_socket_info_ack {uint32_t em_primitive;uint32_t em_status_int_caps;uint32_t em_status_report_caps;uint32_t em_control_indicator_caps;uint32_t em_socket_caps;};
struct em_socket_info_req {uint32_t em_primitive;uint32_t em_socket;};
typedef la_els_logo_t la_els_rrq_reply_t;
typedef enum _5CAC3459AD204328D83E0EB10D8F388D lm_server_status_t;
struct mdi_set_degammalut {int index;int count;uchar_t *degamma;};
union nfs_fh3__nfs_fh3_u {struct nfs_fh3__nfs_fh3_u__nfs_fh3_i nfs_fh3_i;char data[64];};
struct nss_backend_finder {nss_backend_constr_t (*lookup)(void *lkp_priv,  char *,  char *, void **del_privp);void (*delete)(void *del_priv, nss_backend_constr_t);struct nss_backend_finder *next;void *lookup_priv;};
struct oldsocket__sockbuf {ulong_t sb_cc;ulong_t sb_hiwat;ulong_t sb_mbcnt;ulong_t sb_mbmax;ulong_t sb_lowat;struct mbuf *sb_mb;struct proc *sb_sel;short sb_timeo;short sb_flags;};
struct validateUserInfo_t {int8_t *type;int8_t *userName;int8_t *password;};
struct ar_entry_delete_s {uint32_t ared_cmd;uint32_t ared_name_offset;uint32_t ared_name_length;uint32_t ared_proto;uint32_t ared_proto_addr_offset;uint32_t ared_proto_addr_length;};
struct autofs_lookupargs {char *map;char *path;char *name;char *subdir;char *opts;bool_t isdirect;};
struct cachefs_kstat_key {int ks_id;int ks_mounted;uint64_t ks_vfsp;uint64_t ks_mountpoint;uint64_t ks_backfs;uint64_t ks_cachedir;uint64_t ks_cacheid;};
struct cistpl_geometry_t {uint32_t spt;uint32_t tpc;uint32_t ncyl;};
typedef enum _B4C1E64CFFB78309CC76463EAA797381 ddi_prop_result_t;
struct em_get_socket_ack {uint32_t em_primitive;uint32_t em_socket;uint32_t em_vcc_level;uint32_t em_vpp1_level;uint32_t em_vpp2_level;uint32_t em_state;uint32_t em_control_ind;uint32_t em_ireq_routing;uint32_t em_iftype;};
struct em_get_socket_req {uint32_t em_primitive;uint32_t em_socket;};
struct fat32_boot_fsinfo {uint32_t fs_reserved1;uint32_t fs_signature;uint32_t fs_free_clusters;uint32_t fs_next_cluster;uint32_t fs_reserved2[4];};
typedef enum fc_reset_action fc_reset_action_t;
struct nd_router_solicit {icmp6_t nd_rs_hdr;};
typedef enum nfs_access_type nfs_access_type_t;
typedef nfsstat nfslog_sharefsres;
typedef enum _2FA655DF3B517FACB7949C2D644DAB43 rpc_gss_service_t;
struct scsi_watch_result {struct scsi_status *statusp;struct scsi_extended_sense *sensep;uchar_t actual_sense_length;struct scsi_pkt *pkt;};
struct setUserPassword_t {int8_t *type;int8_t *password;};
struct smmedium_property {int32_t sm_version;int32_t sm_media_type;int32_t sm_blocksize;int32_t sm_capacity;int32_t sm_pcyl;int32_t sm_nhead;int32_t sm_nsect;};
typedef enum _09E8BCDC574BDBEF68A1C2F08AD7DBBF tnfctl_bufstate_t;
struct u_shadow__s_nonsh {int32_t c_level;char c_filesys[64];char c_dev[64];char c_host[64];};
typedef uint64_t OCF_CardHandle_t;
struct __LC_transtabs_t { int *table;int tmin;int tmax;struct __LC_transtabs_t *next;};
struct ar_mapping_add_s {uint32_t arma_cmd;uint32_t arma_name_offset;uint32_t arma_name_length;uint32_t arma_proto;uint32_t arma_proto_addr_offset;uint32_t arma_proto_addr_length;uint32_t arma_proto_mask_offset;uint32_t arma_proto_extract_mask_offset;uint32_t arma_flags;uint32_t arma_hw_addr_offset;uint32_t arma_hw_addr_length;uint32_t arma_hw_mapping_start;};
struct autofs_rddirargs {char *rda_map;u_int rda_offset;u_int rda_count;};
struct block_descriptor {uchar_t density_code;uchar_t blks_hi;uchar_t blks_mid;uchar_t blks_lo;uchar_t reserved;uchar_t blksize_hi;uchar_t blksize_mid;uchar_t blksize_lo;};
struct bpp_error_status {char timeout_occurred;char bus_error;uchar_t pin_status;};
struct cachefs_idle_req {vnode_t *ci_vp;};
struct cistpl_battery_t {uint32_t rday;uint32_t xday;};
struct cont_info_struct {uint_t cont_lbn;uint_t cont_offset;uint_t cont_len;};
typedef enum _FE80D5111114141386C0BD10BAE533E0 ddi_devmap_cmd_t;
typedef enum _ABA88FFCF844ADB83559AF0FBF7F1E52 ddi_intr_ctlop_t;
typedef enum _96510381DCBEEC9773C8F1EFD3180D16 ddi_node_class_t;
typedef enum _414A75941736CF17FAE8ED5C32E2DBBB ea_object_type_t;
struct ecc_handler_args {uint_t e_uncorrectable;uint_t e_addrhi;uint_t e_addrlo;};
typedef enum _FFCF33584F0C155BE85F0F30A00BD3E4 flk_nlm_status_t;
struct ipdcm_minor_info {queue_t *rq;int registree;};
typedef enum _CC06B5739EA2B9882BCE8C0A287C133B isdn_interface_t;
typedef enum _4889CC838EABD4A4DF267BE559C2BCD8 isdn_param_tag_t;
struct mdi_clut_address {uint_t c_clut[256];uint_t c_clutd[256];uint_t c_clut_inc[256];uint_t c_clutd_inc[256];};
struct mdi_set_counters {ushort_t m_hct;ushort_t m_vct;ushort_t m_hbs;ushort_t m_hbc;ushort_t m_hss;ushort_t m_hsc;ushort_t m_csc;ushort_t m_vbs;ushort_t m_vbc;ushort_t m_vss;ushort_t m_vsc;ushort_t m_xcs;ushort_t m_xcc;};
struct mdi_xlut_address {uchar_t x_xlut[256];uchar_t x_xlutd[256];uchar_t x_pad0[1536];uchar_t x_xlut_inc[256];uchar_t x_xlutd_inc[256];};
struct nfs_revauth_args {int authtype;uid_t uid;};
typedef uint32_t prop_1275_cell_t;
typedef rcm_info_t rcm_info_tuple_t;
struct socal_fm_version {uint_t fcode_ver_len;uint_t mcode_ver_len;uint_t prom_ver_len;char *fcode_ver;char *mcode_ver;char *prom_ver;};
typedef void (*tnf_probe_func_t)(tnf_probe_setup_t *);
typedef tnf_uint32_t tnf_time_delta_t;
typedef enum _D6CA55EB07B097D421AB6298BB521718 tnfctl_errcode_t;
typedef enum _CE3E7AC5D93368FF00E554010E1E9915 tnfctl_targ_op_t;
typedef enum _DC3296B23F99D14FFD55E56129FBC05F usb_pipe_state_t;
struct usb_string_descr {uint8_t bLength;uint8_t bDescriptorType;uint8_t bString[1];};
typedef enum _980FA8BDE1FB627A165EC34D5A62F01B LclMailEncoding;
typedef uint32_t OCF_AuthOpTag_t;
struct _kthread__rprof {int rp_anystate;uint_t rp_state[10];};
typedef timestruc_t cfs_timestruc_t;
struct cheerio_dma_reg {uint32_t csr;uint32_t acr;uint32_t bcr;};
struct cistpl_funcid_t {uint32_t function;uint32_t sysinit;};
struct cistpl_manfid_t {uint32_t manf;uint32_t card;};
struct cistpl_vers_1_t {uint32_t major;uint32_t minor;uint32_t ns;char pi[4][254];};
struct cistpl_vers_2_t {uint32_t vers;uint32_t comply;uint32_t dindex;uint32_t reserved;uint32_t vspec8;uint32_t vspec9;uint32_t nhdr;char oem[254];char info[254];};
struct ddi_prop_handle {void *ph_data;void *ph_cur_pos;void *ph_save_pos;uint_t ph_size;uint_t ph_flags;struct prop_handle_ops *ph_ops;};
struct dk_mpdrv_status {uint_t dkd_cum_drv_soft_errors;uint_t dkd_cum_drv_hard_errors;uint_t dkd_cum_drv_retries;int dkd_pad[4];};
struct fb_wid_dbl_info {struct fb_wid_alloc dbl_wid;char dbl_fore;char dbl_back;char dbl_read_state;char dbl_write_state;};
struct la_els_identify {uint_t ls_code;uint_t byte_count;};
typedef la_logo_t la_logo_reply_t;
struct mdi_buffer_info {int b_num_bufs;int b_cur_buf;off_t b_buf_offset;};
struct mdi_dac_address {uchar_t dac_addr_reg;uchar_t dac_pad0[255];uchar_t dac_glut;uchar_t dac_pad1[255];uchar_t dac_reg_select;uchar_t dac_pad2[255];uchar_t dac_mode_reg;};
typedef enum _EA75FB217E367D75530EC23DCD9FC6C8 nss_netdir_op_t;
struct pcm_device_info {int pd_socket;int pd_function;int pd_type;uint32_t pd_handle;uint32_t pd_tuples;uint32_t pd_flags;char pd_bind_name[32];char pd_vers1_name[128];char pd_generic_name[32];};
struct pcm_device_node {struct pcm_device_node *pd_next;dev_info_t *pd_dip;char pd_name[16];int pd_flags;int pd_devtype;int pd_funcid;int pd_manfid;int pd_manmask;};
typedef enum _3EACBFB1F6A69D9CA6E99CE3BA7C8589 res_sendhookact;
struct rpcb_rmtcallres {char *addr;struct rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB results;};
struct sf_al_addr_pair {uchar_t sf_al_pa;uchar_t sf_hard_address;uchar_t sf_inq_dtype;uchar_t sf_node_wwn[8];uchar_t sf_port_wwn[8];};
struct sf_target_stats {uint_t els_failures;uint_t timeouts;uint_t abts_failures;uint_t task_mgmt_failures;uint_t data_ro_mismatches;uint_t dl_len_mismatches;uint_t logouts_recvd;};
typedef uint8_t td_sync_flags_t;
struct ufsd_log_data_t {int umld_eob;int umld_seq;struct ufsd_log_data_t___8F822F98A258527A6C698449669E9920 umld_buf;};
struct usoc_send_frame {unsigned int sft_rsvd : 8;unsigned int sft_d_id : 24;uint32_t sft_pattern;uint32_t sft_pool_id;};
struct vuid_addr_probe {short base;union vuid_addr_probe___E494C8051647BAD6AD0F3CB8B4EC75D8 data;};
typedef enum _3F8C702D250B5DC330EA07867C0DE268 LclContentType;
typedef enum _3186EC298029A051CEE1BF271F72D5DD LctNEAttribute;
typedef enum _041E3D91F6E47CF820A5EC5BE234707E SLPURLLifetime;
struct T_unitdata_ind {t_scalar_t PRIM_type;t_scalar_t SRC_length;t_scalar_t SRC_offset;t_scalar_t OPT_length;t_scalar_t OPT_offset;};
struct T_unitdata_req {t_scalar_t PRIM_type;t_scalar_t DEST_length;t_scalar_t DEST_offset;t_scalar_t OPT_length;t_scalar_t OPT_offset;};
typedef enum _16117E4F5BF7AAA0A2A7EB6F15A0B87C _LC_bind_tag_t;
struct _LC_messages_t {_LC_core_messages_t core; char *yesexpr; char *noexpr; char *yesstr; char *nostr;};
struct _LC_monetary_t {_LC_core_monetary_t core; char *int_curr_symbol; char *currency_symbol; char *mon_decimal_point; char *mon_thousands_sep; char *mon_grouping; char *positive_sign; char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;};
struct __nsw_long_err {int nsw_errno;action_t action;struct __nsw_long_err *next;};
union _kthread____tu {struct _kthread____tu____ts _ts;int _t_post_sys_ast;};
struct _la_sparc_regs {lagreg_t lr_rego0;lagreg_t lr_rego1;lagreg_t lr_rego2;lagreg_t lr_rego3;lagreg_t lr_rego4;lagreg_t lr_rego5;lagreg_t lr_rego6;lagreg_t lr_rego7;};
typedef enum _23CD138AFBA10A16D770AC92A674B7D9 ap_condition_t;
struct ar_entry_add_s {uint32_t area_cmd;uint32_t area_name_offset;uint32_t area_name_length;uint32_t area_proto;uint32_t area_proto_addr_offset;uint32_t area_proto_addr_length;uint32_t area_proto_mask_offset;uint32_t area_flags;uint32_t area_hw_addr_offset;uint32_t area_hw_addr_length;};
struct au_invalid_tok {ushort_t length;char *data;};
struct cachefsoptions {uint_t opt_flags;int opt_popsize;int opt_fgsize;};
struct cdrom_tocentry {unsigned char cdte_track;unsigned int cdte_adr : 4;unsigned int cdte_ctrl : 4;unsigned char cdte_format;union cdrom_tocentry___4A050E57821F0F876A45302BC49D06BB cdte_addr;unsigned char cdte_datamode;};
typedef enum cfs_dlog_val cfs_dlog_val_t;
typedef enum cfsdcmd_cmds cfsdcmd_cmds_t;
struct common_service {uint_t fcph;uint_t btob_crdt;uint_t cmn_features;uint_t reserved;};
typedef enum dacf_devspec dacf_devspec_t;
typedef enum _45009653CDC2001856F06EFDA9E04C5E ddi_ctl_enum_t;
typedef enum _03CC775CEF2B1D596517FD882262439F ddi_dma_atyp_t;
typedef enum _EDAFB8E8B9C907AF6E1D55EDA7356F26 ddi_minor_type;
typedef enum _3F61DD0375CBC1F37C02B00929A813F6 ddi_prop_cmd_t;
struct devctl_iocdata {uint_t cmd;char *dev_path;char *dev_name;char *dev_addr;char *dev_minor;uint_t *ret_state;};
struct ip6_opt_router {uint8_t ip6or_type;uint8_t ip6or_len;uint8_t ip6or_value[2];};
struct ip6_opt_tunnel {uint8_t ip6ot_type;uint8_t ip6ot_len;uint8_t ip6ot_encap_limit;};
struct krpc_revauth_1 {uid_t uid;int rpcsec_flavor;void *flavor_data;};
typedef la_els_logi_t la_els_pdisc_t;
struct mhioc_resv_key {uchar_t key[8];};
struct nfs_getfh_args {char *fname;fhandle_t *fhp;};
struct nis_hash_table {NIS_HASH_ITEM *keys[64];NIS_HASH_ITEM *first;};
struct nispasswd_verf {u_int npd_xid;u_int npd_xrandval;};
typedef void (*nss_db_initf_t)(nss_db_params_t *);
typedef uint16_t pc_cluster16_t;
typedef uint32_t pc_cluster32_t;
struct proto_dev_info {char *proto_devi_name;ddi_prop_t *proto_devi_sys_prop_ptr;};
struct sem_undo__undo {short un_aoe;ushort_t un_num;int un_id;};
struct stc_diagregs_t {int reg_flag;uchar_t reg_offset;uchar_t reg_data;};
struct svcxprt_list_t {struct svcxprt_list_t *next;SVCXPRT *xprt;};
typedef int td_sync_iter_f( td_synchandle_t *, void *);
typedef enum _D4AB9A46DE65367CC0FF11AD6E77796A td_thr_state_e;
typedef enum _3797F07133CAA59E79BE5E41B8631F21 tnf_arg_kind_t;
typedef enum _43D49273C3852A9CF5015CF659B9A833 tnfctl_event_t;
typedef enum whymountroot whymountroot_t;
typedef Elf32_Sword Elf3264_Sword;
struct FC2_RJT_PARAM {uchar_t rjt_action;uchar_t rjt_reason;uchar_t reserved[2];};
typedef uint32_t OCF_Boolean_t;
typedef uint8_t *OCF_CERTREF_t;
typedef uint8_t *OCF_KEYINFO_t;
struct OCF_Timeout_t {uint32_t flags;uint32_t timeout;};
struct T_optmgmt_ack {t_scalar_t PRIM_type;t_scalar_t OPT_length;t_scalar_t OPT_offset;t_scalar_t MGMT_flags;};
struct T_optmgmt_req {t_scalar_t PRIM_type;t_scalar_t OPT_length;t_scalar_t OPT_offset;t_scalar_t MGMT_flags;};
struct T_uderror_ind {t_scalar_t PRIM_type;t_scalar_t DEST_length;t_scalar_t DEST_offset;t_scalar_t OPT_length;t_scalar_t OPT_offset;t_scalar_t ERROR_type;};
typedef enum _BB6475131A51C96C40EE163F450A191D _LC_fc_type_t;
struct _LC_numeric_t {_LC_core_numeric_t core; char *decimal_point; char *thousands_sep; char *grouping;};
typedef enum _0C8CCBCA03C364CB9C340F4C94668308 _LC_pc_type_t;
struct _condvar_impl {ushort_t cv_waiters;};
struct au_opaque_tok {ushort_t length;char *data;};
typedef au_mask_t audit_state_t;
struct cdrom_subchnl {unsigned char cdsc_format;unsigned char cdsc_audiostatus;unsigned int cdsc_adr : 4;unsigned int cdsc_ctrl : 4;unsigned char cdsc_trk;unsigned char cdsc_ind;union cdrom_subchnl___426CCB5B871ABC0B6979E88E159E461E cdsc_absaddr;union cdrom_subchnl___426CCB5B871ABC0B6979E88E159E461E cdsc_reladdr;};
struct cdrom_subcode {unsigned int cdsc_length;caddr_t cdsc_addr;};
typedef enum cfs_dlog_op cfs_dlog_op_t;
struct cistpl_date_t {uint32_t time;uint32_t day;};
struct cistpl_swil_t {uint32_t intrlv;};
struct dbri_chip_cmd {uint32_t opcode;uint32_t arg[3];};
typedef enum _D7C0A176FE35DFEAAB524AEF710D9981 ddi_prop_op_t;
struct des_clnt_data {struct netbuf syncaddr;struct knetconfig *knconf;char *netname;int netnamelen;};
struct dma_phys_mapc {struct ddi_dma_req *dma_req;ddi_dma_impl_t *mp;int nptes;void *ptes;};
struct getUserInfo_t {int8_t *type;int8_t *userName;};
struct getquota_args {char *gqa_pathp;int32_t gqa_uid;};
struct ildTraceEntry {uint_t time;uint_t cpu_mod_line;uint_t parm1;uint_t parm2;};
struct ip6_opt_jumbo {uint8_t ip6oj_type;uint8_t ip6oj_len;uint8_t ip6oj_jumbo_len[4];};
struct isdn_conn_tab {int maxpaths;int npaths;isdn_conn_req_t *paths;};
struct isp_mbox_regs {uint16_t isp_mailbox0;uint16_t isp_mailbox1;uint16_t isp_mailbox2;uint16_t isp_mailbox3;uint16_t isp_mailbox4;uint16_t isp_mailbox5;uint16_t isp_pci_mailbox6;uint16_t isp_pci_mailbox7;};
struct isp_risc_regs {uint16_t isp_risc_acc;uint16_t isp_risc_r1;uint16_t isp_risc_r2;uint16_t isp_risc_r3;uint16_t isp_risc_r4;uint16_t isp_risc_r5;uint16_t isp_risc_r6;uint16_t isp_risc_r7;uint16_t isp_risc_r8;uint16_t isp_risc_r9;uint16_t isp_risc_r10;uint16_t isp_risc_r11;uint16_t isp_risc_r12;uint16_t isp_risc_r13;uint16_t isp_risc_r14;uint16_t isp_risc_r15;uint16_t isp_risc_psr;uint16_t isp_risc_ivr;uint16_t isp_risc_pcr;uint16_t isp_risc_rar0;uint16_t isp_risc_rar1;uint16_t isp_risc_lcr;uint16_t isp_risc_pc;uint16_t isp_risc_mtr;uint16_t isp_risc_emb;uint16_t isp_risc_sp;uint16_t gap[5];uint16_t isp_risc_hrl;uint16_t isp_hccr;uint16_t isp_bp0;uint16_t isp_bp1;uint16_t isp_tcr;uint16_t isp_tmr;};
struct jedec_ident_t {uint32_t id;uint32_t info;};
typedef enum _800308667964E9594463B69B6CCFCE10 kmutex_type_t;
typedef la_els_prli_t la_els_prlo_t;
typedef int (*mdb_walk_cb_t)(uintptr_t,  void *, void *);
struct mod_stub_info {uintptr_t mods_func_adr;struct mod_modinfo *mods_modinfo;uintptr_t mods_stub_adr;int (*mods_errfcn)();int mods_flag;};
struct nis_hash_data {nis_name name;int keychain;struct nis_hash_data *next;struct nis_hash_data *prv_item;struct nis_hash_data *nxt_item;};
struct pci_phys_spec {uint_t pci_phys_hi;uint_t pci_phys_mid;uint_t pci_phys_low;uint_t pci_size_hi;uint_t pci_size_low;};
typedef enum _BD2A00A5EDFC2FF1400278A291F46E84 pppProtocol_t;
struct scsi_capacity {uint_t capacity;uint_t lbasize;};
struct segmap_crargs {uint_t prot;uint_t shmsize;uint_t nfreelist;};
struct segspt_crargs {struct seg *seg_spt;struct anon_map *amp;uint_t prot;};
struct service_param {uchar_t data[16];};
struct setUserInfo_t {int8_t *type;int8_t *userName;};
typedef uchar_t socket_enum_t[8];
struct string_to_int {char *sti_str;uint32_t sti_int;};
typedef int td_key_iter_f(thread_key_t, void (*destructor)(), void *);
struct td_thr_events {uint_t event_bits[2];};
typedef int td_thr_iter_f( td_thrhandle_t *, void *);
typedef enum _89FB60EA18EC68E58342D0F505790FD5 td_thr_type_e;
typedef enum _13C394361E9AC5CA038584373CF0D1BD tnf_errcode_t;
struct usoc_add_pool {uint32_t pool_fc4type;uint32_t pool_buf_size;};
struct ypdelete_args {char *mapname;yp_buf key;};
struct ypupdate_args {char *mapname;yp_buf key;yp_buf datum;};
typedef Elf32_Addr Elf3264_Addr;
typedef Elf32_Rela Elf3264_Rela;
typedef Elf32_Shdr Elf3264_Shdr;
typedef Elf32_Word Elf3264_Word;
typedef Elf32_Half Elf32_Versym;
typedef Elf64_Half Elf64_Versym;
struct GETATTR2args {fhandle_t fh;};
typedef Elf64_Syminfo GElf_Syminfo;
typedef Elf64_Verdaux GElf_Verdaux;
typedef Elf64_Vernaux GElf_Vernaux;
typedef Elf64_Verneed GElf_Verneed;
typedef enum _27EF52B7EDF945EB8F92BA945907B559 LclDirection;
typedef uint8_t *OCF_FileID_t;
typedef uint8_t *OCF_KEYREF_t;
struct T_discon_ind {t_scalar_t PRIM_type;t_scalar_t DISCON_reason;t_scalar_t SEQ_number;};
struct T_discon_req {t_scalar_t PRIM_type;t_scalar_t SEQ_number;};
struct T_exdata_ind {t_scalar_t PRIM_type;t_scalar_t MORE_flag;};
struct T_exdata_req {t_scalar_t PRIM_type;t_scalar_t MORE_flag;};
struct T_ordrel_ind {t_scalar_t PRIM_type;};
struct T_ordrel_req {t_scalar_t PRIM_type;};
struct T_unbind_req {t_scalar_t PRIM_type;};
struct _LC_locale_t {_LC_core_locale_t core;struct lconv *nl_lconv;_LC_charmap_t *lc_charmap;_LC_collate_t *lc_collate;_LC_ctype_t *lc_ctype;_LC_monetary_t *lc_monetary;_LC_numeric_t *lc_numeric;_LC_messages_t *lc_messages;_LC_time_t *lc_time;int no_of_items;char *nl_info[59];};
typedef int *_LC_weight_t;
struct __nsw_lookup {char *service_name;action_t actions[4];struct __nsw_long_err *long_errs;struct __nsw_lookup *next;};
struct aio_result_t {ssize_t aio_return;int aio_errno;};
struct au_iport_tok {ushort_t iport;};
struct audio_device {char name[16];char version[16];char config[16];};
struct cistpl_bar_t {uint32_t attributes;uint32_t size;};
struct cistpl_org_t {uint32_t type;char desc[254];};
struct cyc_coverage {char *cyv_why;int cyv_passive_count;int cyv_count[3];uint64_t cyv_arg0;uint64_t cyv_arg1;};
struct cyc_pcbuffer {cyc_index_t *cypc_buf;int cypc_prodndx;int cypc_consndx;int cypc_sizemask;};
struct cyc_tracebuf {int cyt_ndx;cyc_tracerec_t cyt_buf[512];};
struct ddi_callback {struct ddi_callback *c_nfree;struct ddi_callback *c_nlist;int (*c_call)();caddr_t c_arg;int c_count;};
struct dirlistplus3 {entryplus3 *entries;bool_t eof;};
typedef uint32_t ea_catalog_t;
struct em_event_ind {uint32_t em_primitive;uint32_t em_logical_socket;uint32_t em_event;uint32_t em_event_info_offset;uint32_t em_event_info_length;};
struct ether_family {int ef_family;ushort_t ef_ethertype;struct ifqueue *(*ef_infunc)();int (*ef_outfunc)();int (*ef_netisr)();struct ether_family *ef_next;};
typedef enum _39FEE29CB19F6AB95D833477CB3CFB16 fc_ioclass_t;
struct fcp_ent_addr {ushort_t ent_addr_0;ushort_t ent_addr_1;ushort_t ent_addr_2;ushort_t ent_addr_3;};
struct fcp_rsp_info {uchar_t resvd1;uchar_t resvd2;uchar_t resvd3;uchar_t rsp_code;uchar_t resvd4;uchar_t resvd5;uchar_t resvd6;uchar_t resvd7;};
struct fcp_xfer_rdy {ulong_t fcp_seq_offset;ulong_t fcp_burst_len;ulong_t reserved;};
typedef void (*fdb_iodone_t)(struct fdbuffer *fdbuf, void *kargp, buf_t *bp);
typedef uint32_t fsblkcnt32_t;
typedef u_longlong_t fsblkcnt64_t;
typedef uint32_t fsfilcnt32_t;
typedef u_longlong_t fsfilcnt64_t;
struct icmp6_filter {uint32_t __icmp6_filt[8];};
struct if_nameindex {uint32_t if_index;char *if_name;};
struct ip6_opt_nsap {uint8_t ip6on_type;uint8_t ip6on_len;uint8_t ip6on_src_nsap_len;uint8_t ip6on_dst_nsap_len;};
struct isp_biu_regs {uint16_t isp_bus_id_lo;uint16_t isp_bus_id_hi;uint16_t isp_bus_conf0;uint16_t isp_bus_conf1;uint16_t isp_bus_icr;uint16_t isp_bus_isr;uint16_t isp_bus_sema;uint16_t isp_pci_nvram;uint16_t gap0[8];uint16_t isp_cdma_conf;uint16_t isp_cdma_control;uint16_t isp_cdma_status;uint16_t isp_cdma_fifo_status;uint16_t isp_cdma_count;uint16_t isp_cdma_reserved;uint16_t isp_cdma_addr0;uint16_t isp_cdma_addr1;uint16_t isp_pci_cdma_addr2;uint16_t isp_pci_cdma_addr3;uint16_t gap1[6];uint16_t isp_dma_conf;uint16_t isp_dma_control;uint16_t isp_dma_status;uint16_t isp_dma_fifo_status;uint16_t isp_dma_count_lo;uint16_t isp_dma_count_hi;uint16_t isp_dma_addr0;uint16_t isp_dma_addr1;uint16_t isp_pci_dma_addr2;uint16_t isp_pci_dma_addr3;uint16_t gap2[6];uint16_t isp_fifo_command;uint16_t isp_fifo_data;};
struct isp_sxp_regs {uint16_t isp_sxp_part_id;uint16_t isp_sxp_config1;uint16_t isp_sxp_config2;uint16_t isp_sxp_config3;uint16_t isp_sxp_reserved0[2];uint16_t isp_sxp_instruction;uint16_t isp_sxp_reserved1;uint16_t isp_sxp_return_addr;uint16_t isp_sxp_reserved2;uint16_t isp_sxp_command;uint16_t isp_sxp_reserved3;uint16_t isp_sxp_interrupt;uint16_t isp_sxp_reserved4;uint16_t isp_sxp_sequence;uint16_t isp_sxp_gross_err;uint16_t isp_sxp_execption;uint16_t isp_sxp_reserved5;uint16_t isp_sxp_override;uint16_t isp_sxp_reserved6;uint16_t isp_sxp_literal_base;uint16_t isp_sxp_reserved7;uint16_t isp_sxp_user_flags;uint16_t isp_sxp_reserved8;uint16_t isp_sxp_user_except;uint16_t isp_sxp_reserved9;uint16_t isp_sxp_breakpoint;uint16_t isp_sxp_reserved10[5];uint16_t isp_sxp_scsi_id;uint16_t isp_sxp_dev_config1;uint16_t isp_sxp_dev_config2;uint16_t isp_sxp_reserved11;uint16_t isp_sxp_phase_pointer;uint16_t isp_sxp_reserved12;uint16_t isp_sxp_buf_pointer;uint16_t isp_sxp_reserved13;uint16_t isp_sxp_buf_counter;uint16_t isp_sxp_buffer;uint16_t isp_sxp_buf_byte;uint16_t isp_sxp_buf_word;uint16_t isp_sxp_buf_word_tran;uint16_t isp_sxp_fifo;uint16_t isp_sxp_fifo_status;uint16_t isp_sxp_fifo_top;uint16_t isp_sxp_fifo_bottom;uint16_t isp_sxp_reserved15;uint16_t isp_sxp_tran_reg;uint16_t isp_sxp_reserved16;uint16_t isp_sxp_tran_count_lo;uint16_t isp_sxp_tran_count_hi;uint16_t isp_sxp_tran_counter_lo;uint16_t isp_sxp_tran_counter_hi;uint16_t isp_sxp_arb_data;uint16_t isp_sxp_pins_control;uint16_t isp_sxp_pins_data;uint16_t isp_sxp_pins_diff;};
typedef enum _635420CA75E4368650FCB176130922B4 ksema_type_t;
struct mdi_diaginfo {struct mdi_cfginfo mdi_cfg;int mdi_mihdel;int mdi_gstate;};
struct mdi_set_clut {int lut;int index;int count;uchar_t *alpha;uchar_t *red;uchar_t *green;uchar_t *blue;};
struct mdi_set_xlut {int index;int count;uchar_t *xbuf;uchar_t *maskbuf;int mask;};
struct nfs2_timeval {uint32_t tv_sec;uint32_t tv_usec;};
struct nfs_svc_args {int fd;char *netid;struct netbuf addrmask;};
struct nfsdiropargs {fhandle_t *da_fhandle;char *da_name;fhandle_t da_fhandle_buf;int da_flags;};
typedef enum _1323AA4975EEFDF9DDFDA31CD873A283 nss_status_t;
typedef enum _18F4D073277E58FDDB2C169A72F1FC3C pctx_event_t;
struct prom_memlist {struct prom_memlist *next;uint_t address;uint_t size;};
struct prpageheader {timestruc_t pr_tstamp;int pr_nmap;int pr_npage;};
struct scsi_inquiry {uchar_t inq_dtype;unsigned char inq_rmb : 1;unsigned char inq_qual : 7;unsigned char inq_iso : 2;unsigned char inq_ecma : 3;unsigned char inq_ansi : 3;unsigned char inq_aenc : 1;unsigned char inq_trmiop : 1;unsigned char inq_normaca : 1;unsigned char : 1;unsigned char inq_rdf : 4;unsigned char inq_len;unsigned char : 8;unsigned char : 2;unsigned char inq_port : 1;unsigned char inq_dualp : 1;unsigned char inq_mchngr : 1;unsigned char inq_ackqreqq : 1;unsigned char inq_addr32 : 1;unsigned char inq_addr16 : 1;unsigned char inq_reladdr : 1;unsigned char inq_wbus32 : 1;unsigned char inq_wbus16 : 1;unsigned char inq_sync : 1;unsigned char inq_linked : 1;unsigned char inq_trandis : 1;unsigned char inq_cmdque : 1;unsigned char inq_sftre : 1;char inq_vid[8];char inq_pid[16];char inq_revision[4];char inq_serial[12];};
struct sect_trailer {uint32_t st_tid;uint32_t st_ident;};
struct shr_locowner {pid_t sl_pid;int sl_id;};
struct signotify_id {pid_t sn_pid;int sn_index;int sn_pad;};
struct spraytimeval {u_int sec;u_int usec;};
struct st_drivetype {char *name;char length;char vid[24];char type;int bsize;int options;int max_rretries;int max_wretries;uchar_t densities[4];uchar_t default_density;uchar_t speeds[4];};
struct svcpool_args {uint32_t id;uint32_t maxthreads;uint32_t redline;uint32_t qsize;uint32_t timeout;uint32_t stksize;uint32_t max_same_xprt;};
typedef tnf_float64_t tnf_double_t;
typedef tnf_uint32_t tnf_opaque_t;
typedef u_longlong_t tnf_uint64_t;
typedef tnf_uint16_t tnf_ushort_t;
struct usb_bulk_cbw {uchar_t cbw_dCBWSignature[4];uchar_t cbw_dCBWTag[4];uchar_t cbw_dCBWDataTransferLength[4];uchar_t cbw_bmCBWFlags;unsigned char cbw_bCBWLUN : 4;unsigned char cbw_reserved1 : 4;unsigned char cbw_bCBWCBLength : 5;unsigned char cbw_reserved2 : 3;uchar_t cbw_bCBWCDB[16];};
struct usb_bulk_csw {uchar_t csw_dCSWSignature0;uchar_t csw_dCSWSignature1;uchar_t csw_dCSWSignature2;uchar_t csw_dCSWSignature3;uchar_t csw_dCSWTag3;uchar_t csw_dCSWTag2;uchar_t csw_dCSWTag1;uchar_t csw_dCSWTag0;uchar_t csw_dCSWDataResidue0;uchar_t csw_dCSWDataResidue1;uchar_t csw_dCSWDataResidue2;uchar_t csw_dCSWDataResidue3;uchar_t csw_bCSWStatus;};
typedef uint32_t DeviceIndex;
typedef Elf32_Dyn Elf3264_Dyn;
typedef Elf32_Rel Elf3264_Rel;
typedef Elf32_Sym Elf3264_Sym;
typedef Elf64_Sxword GElf_Sxword;
typedef Elf64_Verdef GElf_Verdef;
typedef Elf64_Versym GElf_Versym;
typedef enum _CF2A9B67847DD7930A13E7F75B3AE6C8 LclMailType;
typedef uint32_t OCF_Event_t;
typedef Octet_t PhysAddress;
struct T_error_ack {t_scalar_t PRIM_type;t_scalar_t ERROR_prim;t_scalar_t TLI_error;t_scalar_t UNIX_error;};
typedef enum vuid_device Vuid_device;
typedef enum vuid_q_code Vuid_q_code;
typedef enum _866CF79549BA537B648330022140BDBC ap_ostate_t;
typedef enum _EB79E54FE0EF018BB6845A2E0DAAE1E7 ap_rstate_t;
struct au_data_tok {uchar_t pfmt;uchar_t size;uchar_t number;char *data;};
struct au_path_tok {ushort_t length;char *name;};
struct au_text_tok {ushort_t length;char *data;};
struct au_user_ent {char *au_name;au_mask_t au_always;au_mask_t au_never;};
struct autofs_args {struct netbuf addr;char *path;char *opts;char *map;char *subdir;char *key;int mount_to;int rpc_to;int direct;};
typedef enum _81EF3FA8C4370F96570BE58B85740C0E cfga_cond_t;
typedef enum _AD2EB70E5A961F74EB9C4246C2983BC3 cfga_stat_t;
struct cfs_dlog_tm {cfs_timestruc_t tm_mtime;cfs_timestruc_t tm_ctime;};
typedef vattr_t cfs_vattr_t;
typedef uint16_t cyc_level_t;
struct cyc_softbuf {char cys_hard;char cys_soft;cyc_pcbuffer_t cys_buf[2];};
typedef enum _8A69B4244D68C55526C7E67A1302CC04 cyc_state_t;
typedef uintptr_t cyclic_id_t;
typedef enum _6C240A0F2C531038D6945D09C29C55E6 dacf_opid_t;
struct ddi_dma_lim {uint_t dlim_addr_lo;uint_t dlim_addr_hi;uint_t dlim_cntr_max;uint_t dlim_burstsizes;uint_t dlim_minxfer;uint_t dlim_dmaspeed;};
typedef lock_t disp_lock_t;
struct dk_smpstate {enum dk_mpstate dks_mpstate;int dks_pad[2];};
struct em_info_ack {uint32_t em_primitive;uint32_t em_version;uint32_t em_state;uint32_t em_event_mask_offset;uint32_t em_event_mask_length;uint32_t em_event_class_offset;uint32_t em_event_class_length;};
struct em_info_req {uint32_t em_primitive;};
struct em_init_ack {uint32_t em_primitive;};
struct em_init_req {uint32_t em_primitive;uint32_t em_logical_socket;uint32_t em_event_mask_offset;uint32_t em_event_mask_length;uint32_t em_event_class_offset;uint32_t em_event_class_length;};
typedef enum _29D01D9311FDD83E67B17289D334DF0B fc_iotype_t;
typedef enum _CDEA5F4E81121A9E1DEE9AC855E20971 fc_statec_t;
struct fdc_dma_reg {uint_t fdc_dcsr;uint_t fdc_dacr;uint_t fdc_dbcr;};
struct ftrace_data {int ftd_state;kmutex_t ftd_mutex;struct ftrace_record *ftd_cur;struct ftrace_record *ftd_first;struct ftrace_record *ftd_last;};
struct ipdpriminfo {int pi_minlen;uint_t pi_state;int (*pi_funcp)();};
typedef enum isdn_chan isdn_chan_t;
typedef enum _E739717CDB19454AC06785377AF9888B isdn_mode_t;
typedef enum _354CCF684609FF657B26F0F4A65DC75F isdn_path_t;
typedef enum _14C8EF536CF000E9A9D5F5EF83AA29EC lmb_state_t;
struct mdb_bitmask { char *bm_name;u_longlong_t bm_mask;u_longlong_t bm_bits;};
struct mod_modinfo {char *modm_module_name;struct modctl *mp;struct mod_stub_info modm_stubs[1];};
struct mode_header {uchar_t length;uchar_t medium_type;uchar_t device_specific;uchar_t bdesc_length;};
struct mtdrivetype {char name[64];char vid[25];char type;int bsize;int options;int max_rretries;int max_wretries;uchar_t densities[4];uchar_t default_density;uchar_t speeds[4];};
struct nfslog_rrok {uint32_t filesize;uint32_t rrok_count;};
struct nfsstatfsok {uint32_t fsok_tsize;uint32_t fsok_bsize;uint32_t fsok_blocks;uint32_t fsok_bfree;uint32_t fsok_bavail;};
struct nis_taglist {struct nis_taglist___D5235F6F3B62BCE7910AF756FE53E6D0 tags;};
struct nlm4_notify {char *name;int32 state;};
struct phy_address {ulong_t p_addr;ulong_t p_memtype;};
typedef enum ppp_ioctls ppp_ioctl_t;
typedef prgreg_t prgregset_t[38];
struct proc_vertex {pid_t pid;int sysid;struct proc_edge *edge;int incount;struct proc_edge *p_sedge;struct proc_vertex *p_stack;int atime;int dtime;int index;};
typedef enum _D5AA6F5ACB6BB33BF40F728DE6419DF2 rd_notify_e;
struct read_blklim {uchar_t reserved;uchar_t max_hi;uchar_t max_mid;uchar_t max_lo;uchar_t min_hi;uchar_t min_lo;};
struct rls_payload {uint_t rls_portno;uint_t rls_linkfail;uint_t rls_syncfail;uint_t rls_sigfail;uint_t rls_primitiverr;uint_t rls_invalidword;uint_t rls_invalidcrc;};
struct rusers_utmp {char *ut_user;char *ut_line;char *ut_host;int ut_type;int ut_time;u_int ut_idle;};
struct rwlock_impl {uintptr_t rw_wwwh;};
struct segmap_data {struct smap *smd_sm;struct smfree *smd_free;struct smap **smd_hash;short smd_nfree;uchar_t smd_prot;};
struct sm_stat_res {res res_stat;int state;};
struct sockaddr_un {sa_family_t sun_family;char sun_path[108];};
struct stc_state_t {int state;caddr_t addr;};
typedef enum symfollow symfollow_t;
typedef enum _E1B461D6ADC649FA7943809455C6C6EE td_notify_e;
struct ti_sync_req {uint32_t tsr_flags;};
typedef tnf_uint16_t tnf_abs16_t;
typedef tnf_float32_t tnf_float_t;
typedef longlong_t tnf_int64_t;
typedef tnf_uint32_t tnf_lwpid_t;
typedef tnf_int16_t tnf_ref16_t;
typedef tnf_int32_t tnf_ref32_t;
typedef tnf_int16_t tnf_short_t;
typedef tnf_uint8_t tnf_uchar_t;
typedef tnf_uint32_t tnf_ulong_t;
struct ufsbiostats {kstat_named_t ub_breads;kstat_named_t ub_bwrites;kstat_named_t ub_fbiwrites;kstat_named_t ub_getpages;kstat_named_t ub_getras;kstat_named_t ub_putsyncs;kstat_named_t ub_putasyncs;kstat_named_t ub_pageios;kstat_named_t ub_lreads;kstat_named_t ub_uds;kstat_named_t ub_lwrites;kstat_named_t ub_ldlreads;kstat_named_t ub_ldlwrites;kstat_named_t ub_mreads;kstat_named_t ub_snarf_prewrites;kstat_named_t ub_rwrites;};
typedef u_longlong_t ulonglong_t;
typedef uint_t vifbitmap_t;
struct vuid_q_node {struct vuid_q_node *next;struct vuid_q_node *prev;Firm_event firm_event;};
typedef uint AMI_STATUS;
typedef Octet_t DeviceName;
typedef Elf64_Sword GElf_Sword;
typedef Elf64_Xword GElf_Xword;
typedef uint8_t *OCF_ALGO_t;
typedef uint8_t *OCF_APDU_t;
typedef uint8_t *OCF_File_t;
typedef enum _E5CD0A0A25838301AC0CDA8DDEB498DA SLPBoolean;
struct T_addr_ack {t_scalar_t PRIM_type;t_scalar_t LOCADDR_length;t_scalar_t LOCADDR_offset;t_scalar_t REMADDR_length;t_scalar_t REMADDR_offset;};
struct T_addr_req {t_scalar_t PRIM_type;};
struct T_conn_con {t_scalar_t PRIM_type;t_scalar_t RES_length;t_scalar_t RES_offset;t_scalar_t OPT_length;t_scalar_t OPT_offset;};
struct T_conn_ind {t_scalar_t PRIM_type;t_scalar_t SRC_length;t_scalar_t SRC_offset;t_scalar_t OPT_length;t_scalar_t OPT_offset;t_scalar_t SEQ_number;};
struct T_conn_req {t_scalar_t PRIM_type;t_scalar_t DEST_length;t_scalar_t DEST_offset;t_scalar_t OPT_length;t_scalar_t OPT_offset;};
struct T_data_ind {t_scalar_t PRIM_type;t_scalar_t MORE_flag;};
struct T_data_req {t_scalar_t PRIM_type;t_scalar_t MORE_flag;};
struct T_info_ack {t_scalar_t PRIM_type;t_scalar_t TSDU_size;t_scalar_t ETSDU_size;t_scalar_t CDATA_size;t_scalar_t DDATA_size;t_scalar_t ADDR_size;t_scalar_t OPT_size;t_scalar_t TIDU_size;t_scalar_t SERV_type;t_scalar_t CURRENT_state;t_scalar_t PROVIDER_flag;};
struct T_info_req {t_scalar_t PRIM_type;};
typedef caddr_t Vuid_state;
struct _Vr2_Astrs {charptr _s1;charptr _s2;charptr _s3;charptr _s4;charptr _s5;charptr _s6;charptr _s7;charptr _s8;charptr _s9;charptr _s10;charptr _s11;charptr _s12;charptr _s13;charptr _s14;charptr _s15;charptr _s16;charptr _s17;charptr _s18;charptr _s19;charptr _s20;charptr _s21;charptr _s22;charptr _s23;charptr _s24;charptr _s25;charptr _s26;charptr _s27;charptr _s28;charptr _s29;charptr _s30;charptr _s31;charptr _s32;charptr _s33;charptr _s34;charptr _s35;charptr _s36;charptr _s37;charptr _s38;charptr _s39;charptr _s40;charptr _s41;charptr _s42;charptr _s43;charptr _s44;charptr _s45;charptr _s46;charptr _s47;charptr _s48;charptr _s49;charptr _s50;charptr _s51;charptr _s52;charptr _s53;charptr _s54;charptr _s55;charptr _s56;charptr _s57;charptr _s58;charptr _s59;charptr _s60;charptr _s61;charptr _s62;charptr _s63;charptr _s64;charptr _s65;charptr _s66;charptr _s67;charptr _s68;charptr _s69;charptr _s70;charptr _s71;charptr _s72;charptr _s73;charptr _s74;charptr _s75;charptr _s76;charptr _s77;charptr _s78;charptr _s79;charptr _s80;charptr _s81;charptr _s82;charptr _s83;charptr _s84;charptr _s85;charptr _s86;charptr _s87;charptr _s88;charptr _s89;charptr _s90;charptr _s91;charptr _s92;charptr _s93;charptr _s94;charptr _s95;charptr _s96;charptr _s97;charptr _s98;charptr _s99;charptr _s100;};
struct _Vr2_Bstrs {charptr _s101;charptr _s102;charptr _s103;charptr _s104;charptr _s105;charptr _s106;charptr _s107;charptr _s108;charptr _s109;charptr _s110;charptr _s111;charptr _s112;charptr _s113;charptr _s114;charptr _s115;charptr _s116;charptr _s117;charptr _s118;charptr _s119;charptr _s120;charptr _s121;charptr _s122;charptr _s123;charptr _s124;charptr _s125;charptr _s126;charptr _s127;charptr _s128;charptr _s129;charptr _s130;charptr _s131;charptr _s132;charptr _s133;charptr _s134;charptr _s135;charptr _s136;charptr _s137;charptr _s138;charptr _s139;charptr _s140;charptr _s141;charptr _s142;charptr _s143;charptr _s144;charptr _s145;};
struct au_acl_tok {ulong_t type;ulong_t id;ulong_t mode;};
typedef uint_t au_class_t;
struct au_ipc_tok {key_t id;};
struct au_seq_tok {uint_t num;};
typedef au_class_t au_state_t;
struct authattr_s {char *name;char *res1;char *res2;char *short_desc;char *long_desc;kva_t *attr;};
typedef int32_t blkcnt32_t;
typedef longlong_t blkcnt64_t;
struct bp_address {int address_type;union bp_address___3B940BBAFE206A608BBBF7EC1987BA49 bp_address;};
struct cdrom_cdda {unsigned int cdda_addr;unsigned int cdda_length;caddr_t cdda_data;unsigned char cdda_subcode;};
struct cdrom_cdxa {unsigned int cdxa_addr;unsigned int cdxa_length;caddr_t cdxa_data;unsigned char cdxa_format;};
struct cdrom_read {int cdread_lba;caddr_t cdread_bufaddr;int cdread_buflen;};
typedef enum _B8EA7248DE2247D155C7346AC11040D4 cfga_cmd_t;
typedef enum _2A9D6F0D138547ECB8E62D5BF66B49C5 cfga_err_t;
typedef time_t cfs_time_t;
struct config_ops {int (*devr_next)();int (*devr_child)();int (*devr_getproplen)();int (*devr_getprop)();int (*devr_setprop)();caddr_t (*devr_nextprop)();};
struct config_reg {uint8_t index;uint8_t data;};
struct cpu_vminfo {uint_t pgrec;uint_t pgfrec;uint_t pgin;uint_t pgpgin;uint_t pgout;uint_t pgpgout;uint_t swapin;uint_t pgswapin;uint_t swapout;uint_t pgswapout;uint_t zfod;uint_t dfree;uint_t scan;uint_t rev;uint_t hat_fault;uint_t as_fault;uint_t maj_fault;uint_t cow_fault;uint_t prot_fault;uint_t softlock;uint_t kernel_asflt;uint_t pgrrun;uint_t execpgin;uint_t execpgout;uint_t execfree;uint_t anonpgin;uint_t anonpgout;uint_t anonfree;uint_t fspgin;uint_t fspgout;uint_t fsfree;};
struct dacf_opset {char *opset_name;dacf_op_t *opset_ops;};
struct deskeydata {chunk_t keyval[16];};
typedef enum dev_type dev_type_t;
typedef longlong_t diskaddr_t;
struct dk_mpflags {uint_t dkf_config_flags;uint_t dkf_control_flags;int dkf_pad[4];};
struct ether_addr {uchar_t ether_addr_octet[6];};
struct execattr_s {char *name;char *policy;char *type;char *res1;char *res2;char *id;kva_t *attr;struct execattr_s *next;};
struct fc_dataseg {uint32_t fc_base;uint32_t fc_count;};
typedef enum _B41FB3A55F358278F5C27327EE531EB5 fc_sleep_t;
typedef enum _D95391997311E3A4E8F102D727D6CEF7 fdb_type_t;
typedef ulong_t fsblkcnt_t;
typedef ulong_t fsfilcnt_t;
struct hdk_badmap {caddr_t hdkb_bufaddr;};
struct hdk_loghdr {int hdkl_entries;int hdkl_max_size;caddr_t hdkl_logbfr;};
struct hme_global {uint_t reset;uint_t config;uint_t reserved[62];uint_t status;uint_t intmask;};
struct impl_devid {uchar_t did_magic_hi;uchar_t did_magic_lo;uchar_t did_rev_hi;uchar_t did_rev_lo;uchar_t did_type_hi;uchar_t did_type_lo;uchar_t did_len_hi;uchar_t did_len_lo;char did_driver[4];char did_id[1];};
typedef uint32_t (*intrfunc_t)(void *);
typedef uint_t k_fltset_t;
typedef enum _38ED0C2ADD2BD878794BFE6293F393A9 kcv_type_t;
typedef enum _C0126AC73A46DE8E745F9FEA17492D57 krw_type_t;
struct kstat_intr {uint_t intrs[5];};
struct la_els_rjt {uchar_t ls_code;uchar_t mbz[3];uchar_t reserved;uchar_t reason_code;uchar_t explanation;uchar_t vendor;};
struct la_els_rls {uchar_t ls_code;uchar_t mbz[3];uchar_t reserved;uchar_t nport_id[3];};
struct llc2Uninit {uint_t ppa;uint_t cmd;};
typedef enum _AF741F3DDD464A30547A6EB63D463D95 lm_match_t;
struct lofi_ioctl {uint32_t li_minor;char li_filename[1025];};
typedef enum _3C9CBA2A05837AB5EE7067EF57B45517 mdb_type_t;
struct mdb_walker { char *walk_name; char *walk_descr;int (*walk_init)(mdb_walk_state_t *);int (*walk_step)(mdb_walk_state_t *);void (*walk_fini)(mdb_walk_state_t *);void *walk_init_arg;};
struct mnttagdesc {uint_t mtd_major;uint_t mtd_minor;char *mtd_mntpt;char *mtd_tag;};
struct nd_opt_hdr {uint8_t nd_opt_type;uint8_t nd_opt_len;};
struct nd_opt_lla {uint8_t nd_opt_lla_type;uint8_t nd_opt_lla_len;uint8_t nd_opt_lla_hdw_addr[64];};
struct nfsrnmargs {struct nfsdiropargs rna_from;struct nfsdiropargs rna_to;};
struct pp_address {struct page *pp_pp;uint_t pp_offset;};
struct ppa_config {uint_t ppa;uint_t cmd;uint_t index;uint_t instance;};
struct profattr_s {char *name;char *res1;char *res2;char *desc;kva_t *attr;};
typedef enum _B4D4B12673F28533BE1E89CD44C7C9E5 psc_events;
struct ptable_idx {struct ptable_idx *idx_pptbl_idx;struct ptable *idx_mptbl;ushort_t idx_nochild;ushort_t idx_childid;};
struct qec_global {uint_t control;uint_t status;uint_t packetsize;uint_t memsize;uint_t rxsize;uint_t txsize;};
typedef enum _8724F201D2476C5A27302B0C46EAD9DC rd_event_e;
typedef enum _EAF20B011F47EDF33C1FCE09C227F824 rd_flags_e;
typedef enum _34D0A9496006982FFAE833C372B85A0C rd_state_e;
struct rpc_timers {clock_t rt_srtt;clock_t rt_deviate;clock_t rt_rtxcur;};
struct rpcb_entry {char *r_maddr;char *r_nc_netid;u_int r_nc_semantics;char *r_nc_protofmly;char *r_nc_proto;};
struct rt_metrics {uint32_t rmx_locks;uint32_t rmx_mtu;uint32_t rmx_hopcount;uint32_t rmx_expire;uint32_t rmx_recvpipe;uint32_t rmx_sendpipe;uint32_t rmx_ssthresh;uint32_t rmx_rtt;uint32_t rmx_rttvar;uint32_t rmx_pksent;};
typedef enum _9DF241986813CBC10D66CF006F720785 stabsret_t;
struct stbl_entry {uint32_t sent_ol;uint32_t sent_ml;};
struct strmodconf {int pos;caddr_t mod_name;};
struct t_unitdata {struct netbuf addr;struct netbuf opt;struct netbuf udata;};
struct task_usage {uint64_t tu_utime;uint64_t tu_stime;uint64_t tu_minflt;uint64_t tu_majflt;uint64_t tu_sndmsg;uint64_t tu_rcvmsg;uint64_t tu_ioch;uint64_t tu_iblk;uint64_t tu_oblk;uint64_t tu_vcsw;uint64_t tu_icsw;uint64_t tu_nsig;uint64_t tu_nswp;uint64_t tu_nscl;uint64_t tu_utimesec;uint64_t tu_utimensec;uint64_t tu_stimesec;uint64_t tu_stimensec;uint64_t tu_startsec;uint64_t tu_startnsec;uint64_t tu_finishsec;uint64_t tu_finishnsec;};
typedef enum _65CF98EECFB69F691B0631C04FBFD9D4 td_event_e;
typedef enum _99AB38EF265AA84A0F6A323035284FBD tnf_kind_t;
typedef tnf_int32_t tnf_long_t;
typedef tnf_uint32_t tnf_size_t;
typedef tnf_uint32_t tnf_uint_t;
typedef u_longlong_t u_offset_t;
typedef uint_t useconds_t;
struct userattr_s {char *name;char *qualifier;char *res1;char *res2;kva_t *attr;};
typedef ulong_t vt_trace_t;
struct vuid_value {struct vuid_value *next;ushort_t offset;int value;};
typedef enum auth_stat AUTH_STAT;
typedef uint32_t Counter32;
typedef Elf64_Addr GElf_Addr;
typedef Elf64_Ehdr GElf_Ehdr;
typedef Elf64_Half GElf_Half;
typedef Elf64_Move GElf_Move;
typedef Elf64_Phdr GElf_Phdr;
typedef Elf64_Rela GElf_Rela;
typedef Elf64_Shdr GElf_Shdr;
typedef Elf64_Word GElf_Word;
typedef uint32_t IpAddress;
typedef enum _C9268D8AE8F7D6801B05A9E10ADFAF15 LclFormat;
struct OCF_Any_t {int32_t length;void *data;};
typedef uint8_t *OCF_KEY_t;
typedef uint8_t *OCF_PIN_t;
typedef gss_uint32 OM_uint32;
typedef nl_item __nl_item;
struct _kcondvar {ushort_t _opaque;};
struct _timespec {time_t __tv_sec;int __tv_nsec;};
struct _xti_bind {struct netbuf addr;unsigned int qlen;};
typedef pid_t au_asid_t;
struct audit_s2e {au_event_t (*au_init)(au_event_t);int au_event;void (*au_start)(struct t_audit_data *);void (*au_finish)(struct t_audit_data *, int, union rval *);int au_ctrl;};
typedef enum _F5D0AC97B70F66A0B82E3660E1E74CD3 boolean_t;
typedef uint32_t caddr32_t;
typedef fid_t cfs_fid_t;
typedef uid_t cfs_uid_t;
typedef uchar_t cisdata_t;
typedef int32_t clock32_t;
typedef int32_t daddr32_t;
union des_block {struct des_block___5225801D107CE2D6470E1DB341886AD6 key;char c[8];};
typedef page_t devpage_t;
typedef uint64_t ea_size_t;
struct ecpp_regs {uint8_t dsr;uint8_t dcr;};
struct entry_obj {char *en_type;struct entry_obj___9954B692FACAC347CBA764979909DFF4 en_cols;};
struct extent_ad {uint32_t ext_len;uint32_t ext_loc;};
struct extmnttab {char *mnt_special;char *mnt_mountp;char *mnt_fstype;char *mnt_mntopts;char *mnt_time;uint_t mnt_major;uint_t mnt_minor;};
struct fc_pstats {uint_t port;uint_t requests;uint_t sol_resps;uint_t unsol_resps;uint_t lips;uint_t els_sent;uint_t els_rcvd;uint_t abts;uint_t abts_ok;uint_t offlines;uint_t onlines;uint_t online_loops;uint_t resp_status[256];};
struct getRoot_t {OCF_File_t path;};
typedef greg_t gregset_t[19];
typedef OM_uint32 gss_qop_t;
typedef uint32_t in_addr_t;
typedef uint16_t in_port_t;
struct ip6_rthdr {uint8_t ip6r_nxt;uint8_t ip6r_len;uint8_t ip6r_type;uint8_t ip6r_segleft;};
struct ipllcmd_s {uint_t ipllc_cmd;uint_t ipllc_name_offset;uint_t ipllc_name_length;};
struct la_ba_rjt {uchar_t reserved;uchar_t reason_code;uchar_t explanation;uchar_t vendor;};
struct lanceregs {uint16_t lance_rdp;uint16_t lance_rap;};
struct lancering {uint16_t lr_laddr;unsigned char lr_len : 3;unsigned char : 5;unsigned char lr_haddr;};
struct log_param {uchar_t pc_hi;uchar_t pc_lo;unsigned char du : 1;unsigned char ds : 1;unsigned char tsd : 1;unsigned char etc : 1;unsigned char tmc : 2;unsigned char : 1;unsigned char lp : 1;unsigned char length;};
typedef uint32_t major32_t;
typedef uint32_t minor32_t;
struct nis_sdata {void *buf;u_int size;};
typedef uint32_t nlink32_t;
struct nlm4_stat {nlm4_stats stat;};
typedef enum __ns_opcode ns_opcode;
struct p_inquiry {uchar_t inq_dtype;unsigned char inq_rmb : 1;unsigned char inq_qual : 7;unsigned char inq_iso : 2;unsigned char inq_ecma : 3;unsigned char inq_ansi : 3;unsigned char inq_aenc : 1;unsigned char inq_trmiop : 1;unsigned char : 2;unsigned char inq_rdf : 4;unsigned char inq_len;unsigned char : 8;unsigned char : 8;unsigned char inq_reladdr : 1;unsigned char inq_wbus32 : 1;unsigned char inq_wbus16 : 1;unsigned char inq_sync : 1;unsigned char inq_linked : 1;unsigned char : 1;unsigned char inq_cmdque : 1;unsigned char inq_sftre : 1;char inq_vid[8];char inq_pid[16];char inq_revision[4];char inq_firmware_rev[4];char inq_serial[12];char reserved[2];char inq_ports;char inq_tgts;};
struct part_info {daddr_t p_start;int p_length;};
struct pcmcia_cs {uint32_t pccs_magic;uint32_t pccs_version;int (*pccs_callback)();int (*pccs_getconfig)();};
struct pcmcia_if {uint32_t pcif_magic;uint32_t pcif_version;int (*pcif_set_callback)();int (*pcif_get_adapter)();int (*pcif_get_page)();int (*pcif_get_socket)();int (*pcif_get_status)();int (*pcif_get_window)();int (*pcif_inquire_adapter)();int (*pcif_inquire_socket)();int (*pcif_inquire_window)();int (*pcif_reset_socket)();int (*pcif_set_page)();int (*pcif_set_window)();int (*pcif_set_socket)();int (*pcif_set_interrupt)();int (*pcif_clr_interrupt)();int (*pcic_init_dev)();uint32_t (*pcic_get_tstamp)();};
typedef enum _37901662FEBD63C2ABBFAC806A9B9F40 pm_states;
struct ppcregs_t {uchar_t in_pdata;uchar_t in_pstat;uchar_t in_pcon;uchar_t in_pwierd;uchar_t pdata;uchar_t pstat;uchar_t pcon;uchar_t pwierd;uchar_t f14[500];uchar_t ipdata;uchar_t ipstat;uchar_t ipcon;uchar_t ipwierd;};
struct qecb_chan {uint_t control;uint_t status;uint_t rxring;uint_t txring;uint_t rintm;uint_t tintm;uint_t qecerrm;uint_t bmacerrm;uint_t lmrxwrite;uint_t lmrxread;uint_t lmtxwrite;uint_t lmtxread;uint_t coll;};
struct qecm_chan {uint_t control;uint_t status;uint_t rxring;uint_t txring;uint_t rintm;uint_t tintm;uint_t qecerrm;uint_t macerrm;uint_t lmrxwrite;uint_t lmrxread;uint_t lmtxwrite;uint_t lmtxread;uint_t coll;uint_t pifs;};
typedef enum qfields qfields_t;
typedef enum _AF097615159EB3CBDA82C5A5C14EBA11 r_state_e;
struct rangespec {uint_t rng_cbustype;uint_t rng_coffset;uint_t rng_bustype;uint_t rng_offset;uint_t rng_size;};
typedef enum _780B979F0B1070C2A1BEC9CE8B44076A rd_skip_e;
struct reservdev {char *devname;pid_t key;};
typedef int rl_iter_f( rd_loadobj_t *, void *);
struct segmapcnt {kstat_named_t smp_fault;kstat_named_t smp_faulta;kstat_named_t smp_getmap;kstat_named_t smp_get_use;kstat_named_t smp_get_reclaim;kstat_named_t smp_get_reuse;kstat_named_t smp_get_unused;kstat_named_t smp_get_nofree;kstat_named_t smp_rel_async;kstat_named_t smp_rel_write;kstat_named_t smp_rel_free;kstat_named_t smp_rel_abort;kstat_named_t smp_rel_dontneed;kstat_named_t smp_release;kstat_named_t smp_pagecreate;kstat_named_t smp_free_notfree;kstat_named_t smp_free_dirty;kstat_named_t smp_free;kstat_named_t smp_stolen;kstat_named_t smp_get_nomtx;};
struct sf_al_map {short sf_count;sf_al_addr_pair_t sf_addr_pair[127];sf_al_addr_pair_t sf_hba_addr;};
struct sl_status {int type;int status;timestruc_t tstamp;};
struct soaddr_ux {void *sou_vp;uint_t sou_magic;};
typedef uint32_t socklen_t;
typedef int32_t ssize32_t;
struct stciack_t {uchar_t pilr1;uchar_t pilr2;uchar_t pilr3;};
struct stcregs_t {uchar_t f0[1];uchar_t ccr;uchar_t ier;uchar_t cor1;uchar_t cor2;uchar_t cor3;uchar_t ccsr;uchar_t rdcr;uchar_t f1[1];uchar_t schr1;uchar_t schr2;uchar_t schr3;uchar_t schr4;uchar_t f2[3];uchar_t mcor1;uchar_t mcor2;uchar_t mcr;uchar_t f3[5];uchar_t rtpr;uchar_t f4[15];uchar_t msvr;uchar_t f5[8];uchar_t rbprh;uchar_t rbprl;uchar_t f6[6];uchar_t tbprh;uchar_t tbprl;uchar_t f7[5];uchar_t givr;uchar_t gicr;uchar_t f8[31];uchar_t pilr1;uchar_t pilr2;uchar_t pilr3;uchar_t car;uchar_t f9[6];uchar_t gfrcr;uchar_t f10[4];uchar_t pprh;uchar_t pprl;uchar_t f11[6];uchar_t rdr;uchar_t f12[1];uchar_t rcsr;uchar_t tdr;uchar_t f13[3];uchar_t eoir;};
struct strsigset {pid_t ss_pid;int ss_events;};
typedef enum syncobj syncobj_t;
struct t_kpalive {t_scalar_t kp_onoff;t_scalar_t kp_timeout;};
struct table_col {char *tc_name;uint_t tc_flags;uint_t tc_rights;};
struct taskq_ent {struct taskq_ent *tqent_next;struct taskq_ent *tqent_prev;task_func_t *tqent_func;void *tqent_arg;};
typedef tnf_int32_t tnf_int_t;
typedef tnf_int32_t tnf_pid_t;
typedef tnf_ref32_t tnf_tag_t;
struct trace_ids {short ti_mid;short ti_sid;int8_t ti_level;};
typedef uint64_t uintmax_t;
typedef enum uio_seg uio_seg_t;
struct unreg1res {nsm_addr_res status;};
struct v_address {caddr_t v_addr;struct as *v_as;void *v_priv;};
typedef vattr_t vattr32_t;
typedef bool_t (*xdrproc_t)();
typedef enum _401A9802811826260D9AA8000BA0BB75 Elf_Kind;
typedef enum _88495A355BB3E6D41AADF572D3BFAE21 Elf_Type;
typedef Elf64_Dyn GElf_Dyn;
typedef Elf64_Off GElf_Off;
typedef Elf64_Rel GElf_Rel;
typedef Elf64_Sym GElf_Sym;
typedef enum _43B36F08FB889DFA872E3981C7EFED93 SLPError;
struct T_ok_ack {t_scalar_t PRIM_type;t_scalar_t CORRECT_prim;};
struct T_opthdr {t_uscalar_t len;t_uscalar_t level;t_uscalar_t name;t_uscalar_t status;};
struct _cleanup {uintptr_t pthread_cleanup_pad[4];};
struct _qop_num {char *qop;OM_uint32 num;char *mech;};
struct ar_cmd_s {uint32_t arc_cmd;uint32_t arc_name_offset;uint32_t arc_name_length;};
struct au_tid32 {uint32_t port;uint32_t machine;};
struct biostats {kstat_named_t bio_lookup;kstat_named_t bio_hit;kstat_named_t bio_bufwant;kstat_named_t bio_bufwait;kstat_named_t bio_bufbusy;kstat_named_t bio_bufdup;};
struct bmactcvr {uint_t pal1;uint_t pal2;};
struct bpp_pins {uchar_t output_reg_pins;uchar_t input_reg_pins;};
struct bsys_mem {struct memlist *physinstalled;struct memlist *physavail;struct memlist *virtavail;uint_t extent;};
struct cg6_cmap {uint32_t addr;uint32_t cmap;uint32_t ctrl;uint32_t omap;};
struct charspec {uint8_t cs_type;char cs_info[63];};
typedef enum create create_t;
struct dcanchor {void *dca_dircache;kmutex_t dca_lock;};
typedef int32_t di_off_t;
struct dinfo_io {char root_path[1024];struct di_priv_data priv;};
struct dirlist3 {entry3 *entries;bool_t eof;};
struct dk_devid {uchar_t dkd_rev_hi;uchar_t dkd_rev_lo;uchar_t dkd_flags;uchar_t dkd_devid[505];uchar_t dkd_checksum3;uchar_t dkd_checksum2;uchar_t dkd_checksum1;uchar_t dkd_checksum0;};
struct dk_map32 {daddr32_t dkl_cylno;daddr32_t dkl_nblk;};
struct ea_group {uint32_t eg_nobjs;struct ea_object *eg_objs;};
struct fcp_cntl {uchar_t cntl_reserved_0;unsigned char cntl_reserved_1 : 5;unsigned char cntl_qtype : 3;unsigned char cntl_kill_tsk : 1;unsigned char cntl_clr_aca : 1;unsigned char cntl_reset : 1;unsigned char cntl_reserved_2 : 2;unsigned char cntl_clr_tsk : 1;unsigned char cntl_abort_tsk : 1;unsigned char cntl_reserved_3 : 1;unsigned char cntl_reserved_4 : 6;unsigned char cntl_read_data : 1;unsigned char cntl_write_data : 1;};
struct fk_label {uchar_t fkl_type;uchar_t fkl_magich;uchar_t fkl_magicl;uchar_t filler;};
typedef __longlong_t fpos64_t;
struct free_rtn {void (*free_func)();caddr_t free_arg;};
struct hdr_cpio {short h_magic;short h_dev;ushort_t h_ino;ushort_t h_mode;ushort_t h_uid;ushort_t h_gid;short h_nlink;short h_rdev;short h_mtime[2];short h_namesize;short h_filesize[2];char h_name[256];};
typedef longlong_t hrtime_t;
struct hwc_spec {struct hwc_spec *hwc_next;char *hwc_parent_name;char *hwc_class_name;proto_dev_info_t *hwc_proto;};
typedef enum idtype idtype_t;
typedef ulong_t ieaddr_t;
struct igmpstat {uint_t igps_rcv_total;uint_t igps_rcv_tooshort;uint_t igps_rcv_badsum;uint_t igps_rcv_queries;uint_t igps_rcv_badqueries;uint_t igps_rcv_reports;uint_t igps_rcv_badreports;uint_t igps_rcv_ourreports;uint_t igps_snd_reports;};
typedef int64_t intmax_t;
struct intrspec {uint_t intrspec_pri;uint_t intrspec_vec;uint_t (*intrspec_func)();};
typedef caddr_t ioaddr_t;
struct ip6_dest {uint8_t ip6d_nxt;uint8_t ip6d_len;};
typedef uint32_t ipaddr_t;
struct ipd_stat {kstat_named_t ipd_ipackets;kstat_named_t ipd_ierrors;kstat_named_t ipd_opackets;kstat_named_t ipd_oerrors;kstat_named_t ipd_nocanput;kstat_named_t ipd_allocbfail;};
struct ll_snioc {uchar_t lli_type;uchar_t lli_spare[3];int lli_ppa;int lli_index;};
struct log_dump {uint32_t ld_magic;uint32_t ld_msgsize;uint32_t ld_csum;uint32_t ld_msum;};
struct log_page {unsigned char : 2;unsigned char code : 6;unsigned char reserved;uchar_t length_hi;uchar_t length_lo;};
struct lufs_buf {buf_t lb_buf;void *lb_ptr;};
struct mfb_cmap {uchar_t addr;unsigned char : 8;unsigned char : 8;unsigned char : 8;unsigned char cmap;unsigned char : 8;unsigned char : 8;unsigned char : 8;unsigned char ctrl;unsigned char : 8;unsigned char : 8;unsigned char : 8;unsigned char omap;unsigned char : 8;unsigned char : 8;unsigned char : 8;};
typedef uint32_t mode32_t;
struct nc_stats {kstat_named_t ncs_hits;kstat_named_t ncs_misses;kstat_named_t ncs_neg_hits;kstat_named_t ncs_enters;kstat_named_t ncs_dbl_enters;kstat_named_t ncs_purge_total;kstat_named_t ncs_purge_all;kstat_named_t ncs_purge_vp;kstat_named_t ncs_purge_vfs;kstat_named_t ncs_purge_fs1;kstat_named_t ncs_pick_free;kstat_named_t ncs_pick_heur;kstat_named_t ncs_pick_last;kstat_named_t ncs_dir_hits;kstat_named_t ncs_dir_misses;kstat_named_t ncs_cur_dirs;kstat_named_t ncs_dir_num_ents;kstat_named_t ncs_dirs_cached;kstat_named_t ncs_dir_start_nm;kstat_named_t ncs_dir_add_nm;kstat_named_t ncs_dir_addabort;kstat_named_t ncs_dir_add_max;kstat_named_t ncs_dir_reme_fai;kstat_named_t ncs_dir_rems_fai;kstat_named_t ncs_dir_upd_fail;kstat_named_t ncs_dir_finipurg;kstat_named_t ncs_dir_rec_last;kstat_named_t ncs_dir_recl_any;};
struct nis_attr {char *zattr_ndx;struct nis_attr___F2081D9F3F0358B3A954C101A2B200CE zattr_val;};
struct nlm_stat {nlm_stats stat;};
typedef enum __ns_class ns_class;
typedef enum __ns_rcode ns_rcode;
struct nsr_desc {uint8_t nsr_str_type;uint8_t nsr_id[5];uint8_t nsr_ver;uint8_t nsr_res;uint8_t nsr_data[2040];};
typedef ushort_t o_mode_t;
typedef longlong_t offset_t;
struct panic_nv {char pnv_name[16];uint64_t pnv_value;};
struct pcm_regs {uint32_t phys_hi;uint32_t phys_lo;uint32_t phys_len;};
struct pmap_hdr {uint8_t maph_type;uint8_t maph_length;};
struct pmaplist {PMAP pml_map;struct pmaplist *pml_next;};
struct ppa_info {uint_t ppa;uint_t cmd;uint_t curppa;uint_t maxppa;};
typedef enum _A091DCDAEC8B8097B50B5275FBA122A0 pppVer_t;
struct proginfo {uint_t size;uint_t align;};
typedef id_t projid_t;
typedef enum _92D8A10D5D3318494FF31390A6A19662 ps_err_e;
typedef Elf32_Sym ps_sym_t;
typedef enum _176E06A90436C16DD1EC2E1A345EFA40 rd_err_e;
typedef ssize_t regoff_t;
typedef u_longlong_t rlim64_t;
struct rlimit64 {rlim64_t rlim_cur;rlim64_t rlim_max;};
struct rpcblist {RPCB rpcb_map;struct rpcblist *rpcb_next;};
struct sadb_ext {uint16_t sadb_ext_len;uint16_t sadb_ext_type;};
struct sadb_key {uint16_t sadb_key_len;uint16_t sadb_key_exttype;uint16_t sadb_key_bits;uint16_t sadb_key_reserved;};
struct scc_mode {char sm_txclock;char sm_rxclock;char sm_iflags;uchar_t sm_config;int sm_baudrate;int sm_retval;};
struct sem_undo {struct sem_undo *un_np;short un_cnt;struct sem_undo__undo un_ent[1];};
struct seq_mode {uchar_t reserved1;uchar_t reserved2;unsigned char wp : 1;unsigned char bufm : 3;unsigned char speed : 4;uchar_t bd_len;uchar_t density;uchar_t high_nb;uchar_t mid_nb;uchar_t low_nb;uchar_t reserved;uchar_t high_bl;uchar_t mid_bl;uchar_t low_bl;};
struct short_ad {uint32_t sad_ext_len;uint32_t sad_ext_loc;};
struct si_udata {int tidusize;int addrsize;int optsize;int etsdusize;int servtype;int so_state;int so_options;int tsdusize;struct si_sockparams sockparams;};
struct sigqueue {struct sigqueue *sq_next;k_siginfo_t sq_info;void (*sq_func)(struct sigqueue *);void *sq_backptr;};
typedef uint32_t size32_t;
struct sockaddr {sa_family_t sa_family;char sa_data[14];};
struct t_discon {struct netbuf udata;int reason;int sequence;};
struct t_linger {t_scalar_t l_onoff;t_scalar_t l_linger;};
struct t_opthdr {t_uscalar_t len;t_uscalar_t level;t_uscalar_t name;t_uscalar_t status;};
typedef id_t taskid_t;
struct tcphdr_s {uint8_t th_lport[2];uint8_t th_fport[2];uint8_t th_seq[4];uint8_t th_ack[4];uint8_t th_offset_and_rsrvd[1];uint8_t th_flags[1];uint8_t th_win[2];uint8_t th_sum[2];uint8_t th_urp[2];};
typedef enum _7763C6F5F90D633510BBD051BDA06E4F td_err_e;
typedef hrtime_t tdelta_t[12][2];
typedef int32_t time32_t;
struct timespec {time_t tv_sec;int tv_nsec;};
struct topstats {ulong_t mtm_top_num[34];ulong_t mtm_top_size_etot[34];ulong_t mtm_top_size_rtot[34];ulong_t mtm_top_size_max[34];ulong_t mtm_top_size_min[34];ulong_t mtm_delta_num[17];};
union u_shadow {struct u_shadow__s_nonsh c_nonsh;char c_shadow[1];};
typedef enum uio_rw uio_rw_t;
typedef uint64_t upad64_t;
typedef enum vcexcl vcexcl_t;
struct vsecattr {uint_t vsa_mask;int vsa_aclcnt;void *vsa_aclentp;int vsa_dfaclcnt;void *vsa_dfaclentp;};
struct vuid_seg {struct vuid_seg *next;ushort_t addr;char booleans[32];char ints[32];struct vuid_value *list;};
typedef uint32_t Counter;
typedef enum _014516C156DA5201E9C0253C2C7BF2C9 Elf_Cmd;
typedef enum _0975BDD6F157BDBA4D69597495967F12 LclForm;
typedef Elf32_Syminfo Syminfo;
typedef Elf32_Verdaux Verdaux;
typedef Elf32_Vernaux Vernaux;
typedef Elf32_Verneed Verneed;
struct _wctype {int tmin;int tmax;unsigned char *index;unsigned int *type;int cmin;int cmax;int *code;};
typedef uid_t au_id_t;
struct cmsghdr {socklen_t cmsg_len;int cmsg_level;int cmsg_type;};
typedef enum delta_type delta_t;
typedef uint32_t dev32_t;
struct dk_map2 {uint16_t p_tag;uint16_t p_flag;};
typedef phandle_t dnode_t;
struct fd_args {nis_name dir_name;nis_name requester;};
struct fd_char {uchar_t fdc_medium;int fdc_transfer_rate;int fdc_ncyl;int fdc_nhead;int fdc_sec_size;int fdc_secptrack;int fdc_steps;};
typedef fhandle_t fhandle;
typedef fid_t fid32_t;
typedef int32_t gid32_t;
struct hme_erx {uint_t config;uint_t rxring;uint_t rxbuf_ptr;uint_t rxfifo_wr_ptr;uint_t rxfifo_sdwr_ptr;uint_t rxfifo_rd_ptr;uint_t rxfifo_pkt_cnt;uint_t state_mach;};
struct hme_etx {uint_t txpend;uint_t config;uint_t txring;uint_t txbuf_base;uint_t txbuf_disp;uint_t txfifo_wr_ptr;uint_t txfifo_sdwr_ptr;uint_t txfifo_rd_ptr;uint_t txfifo_sdrd_ptr;uint_t txfifo_pkt_cnt;uint_t state_mach;uint_t txring_size;uint_t txbuf_ptr;};
struct hme_mif {uint_t mif_bbclk;uint_t mif_bbdata;uint_t mif_bbopenb;uint_t mif_frame;uint_t mif_cfg;uint_t mif_imask;uint_t mif_bsts;uint_t mif_fsm;};
struct hme_rmd {uint_t rmd_flags;uint_t rmd_addr;};
struct hme_tmd {uint_t tmd_flags;uint_t tmd_addr;};
struct iaclass {id_t pc_cid;int pc_clparms[8];};
struct iadpent {pri_t ia_globpri;int ia_quantum;pri_t ia_tqexp;pri_t ia_slpret;short ia_maxwait;short ia_lwait;};
struct iaparms {pri_t ia_uprilim;pri_t ia_upri;int ia_mode;int ia_nice;};
typedef ushort_t ieint_t;
typedef ushort_t ieoff_t;
typedef uint32_t ino32_t;
typedef u_longlong_t ino64_t;
struct instats {kstat_named_t in_size;kstat_named_t in_maxsize;kstat_named_t in_hits;kstat_named_t in_misses;kstat_named_t in_malloc;kstat_named_t in_mfree;kstat_named_t in_maxreached;kstat_named_t in_frfront;kstat_named_t in_frback;kstat_named_t in_qfree;kstat_named_t in_scan;kstat_named_t in_tidles;kstat_named_t in_lidles;kstat_named_t in_vidles;kstat_named_t in_kcalloc;kstat_named_t in_kcfree;kstat_named_t in_poc;};
typedef uint32_t instr_t;
struct ip6_hbh {uint8_t ip6h_nxt;uint8_t ip6h_len;};
struct ip6_opt {uint8_t ip6o_type;uint8_t ip6o_len;};
typedef int32_t key32_t;
struct kiockey {int kio_tablemask;uchar_t kio_station;uchar_t kio_entry;char kio_string[10];};
struct knetbuf {mblk_t *udata_mp;unsigned int maxlen;unsigned int len;char *buf;};
struct lastlog {time_t ll_time;char ll_line[8];char ll_host[16];};
struct linkblk {queue_t *l_qtop;queue_t *l_qbot;int l_index;};
struct lm_stat {time_t start_time;int servers;int cookie;int async_len;int block_len;int client_len;int sleep_len;int tot_in;int tot_out;int bad_in;int bad_out;int proc_in[24];int proc_out[24];};
struct lrusage {u_longlong_t minflt;u_longlong_t majflt;u_longlong_t nswap;u_longlong_t inblock;u_longlong_t oublock;u_longlong_t msgsnd;u_longlong_t msgrcv;u_longlong_t nsignals;u_longlong_t nvcsw;u_longlong_t nivcsw;u_longlong_t sysc;u_longlong_t ioch;};
struct lwpinfo {timestruc_t lwp_utime;timestruc_t lwp_stime;int lwpinfo_pad[64];};
typedef ulong_t major_t;
struct memlist {uint64_t address;uint64_t size;struct memlist *next;struct memlist *prev;};
struct memropc {ushort_t mrc_dest;ushort_t mrc_source1;ushort_t mrc_source2;ushort_t mrc_pattern;ushort_t mrc_mask1;ushort_t mrc_mask2;short mrc_shift;short mrc_op;short mrc_width;short mrc_opcount;short mrc_decoderout;short mrc_x11;short mrc_x12;short mrc_x13;short mrc_x14;short mrc_x15;};
struct mib2_ip {int ipForwarding;int ipDefaultTTL;Counter ipInReceives;Counter ipInHdrErrors;Counter ipInAddrErrors;Counter ipForwDatagrams;Counter ipInUnknownProtos;Counter ipInDiscards;Counter ipInDelivers;Counter ipOutRequests;Counter ipOutDiscards;Counter ipOutNoRoutes;int ipReasmTimeout;Counter ipReasmReqds;Counter ipReasmOKs;Counter ipReasmFails;Counter ipFragOKs;Counter ipFragFails;Counter ipFragCreates;int ipAddrEntrySize;int ipRouteEntrySize;int ipNetToMediaEntrySize;Counter ipRoutingDiscards;Counter tcpInErrs;Counter udpNoPorts;Counter ipInCksumErrs;Counter ipReasmDuplicates;Counter ipReasmPartDups;Counter ipForwProhibits;Counter udpInCksumErrs;Counter udpInOverflows;Counter rawipInOverflows;Counter ipsecInSucceeded;Counter ipsecInFailed;int ipMemberEntrySize;Counter ipInIPv6;Counter ipOutIPv6;Counter ipOutSwitchIPv6;};
typedef ulong_t minor_t;
struct mntopts {int mo_count;mntopt_t *mo_list;};
struct mrtstat {uint_t mrts_mfcfind_lookups;uint_t mrts_mfcfind_misses;uint_t mrts_mfc_hits;uint_t mrts_mfc_misses;uint_t mrts_upcalls;uint_t mrts_fwd_in;uint_t mrts_fwd_out;uint_t mrts_fwd_drop;uint_t mrts_bad_tunnel;uint_t mrts_cant_tunnel;uint_t mrts_wrong_if;uint_t mrts_upq_ovflw;uint_t mrts_cache_cleanups;uint_t mrts_drop_sel;uint_t mrts_q_overflow;uint_t mrts_pkt2large;uint_t mrts_vifctlSize;uint_t mrts_mfcctlSize;uint_t mrts_pim_badversion;uint_t mrts_pim_rcv_badcsum;uint_t mrts_pim_badregisters;uint_t mrts_pim_regforwards;uint_t mrts_pim_regsend_drops;uint_t mrts_pim_malformed;uint_t mrts_pim_nomemory;};
typedef lwp_mutex_t mutex_t;
typedef ushort_t n_short;
struct nc_hash {struct ncache *hash_next;struct ncache *hash_prev;kmutex_t hash_lock;};
struct netinfo {struct sockaddr rip_dst;int rip_metric;};
struct nfs_fid {ushort_t nf_len;ushort_t nf_pad;char nf_data[32];};
struct nfssrok {uint32_t srok_count;char *srok_data;};
struct nis_oid {uint32_t ctime;uint32_t mtime;};
struct nis_tag {u_int tag_type;char *tag_val;};
typedef ulong_t nlink_t;
typedef enum __ns_flag ns_flag;
typedef enum __ns_sect ns_sect;
typedef enum __ns_type ns_type;
typedef ushort_t o_ino_t;
typedef ushort_t o_uid_t;
typedef int32_t off32_t;
typedef longlong_t off64_t;
typedef int64_t pad64_t;
typedef ulong_t paddr_t;
struct pathcnf {int pc_link_max;short pc_max_canon;short pc_max_input;short pc_name_max;short pc_path_max;short pc_pipe_buf;uchar_t pc_vdisable;char pc_xxx;short pc_mask[5];};
struct pcparms {id_t pc_cid;int pc_clparms[8];};
typedef pfi_t (*pfpfi_t)();
typedef ulong_t pgcnt_t;
typedef int32_t pid32_t;
typedef enum _3EC23EC6F0FDADF0EEC41EBD5A8B52ED pm_cmds;
struct reg1res {nsm_addr_res status;};
struct regspec {uint_t regspec_bustype;uint_t regspec_addr;uint_t regspec_size;};
struct rtdpent {pri_t rt_globpri;int rt_quantum;};
struct ru_utmp {char ut_line[8];char ut_user[8];char ut_host[16];time_t ut_time;};
struct rwindow {greg_t rw_local[8];greg_t rw_in[8];};
struct snaphdr {uchar_t snap_oid[3];uchar_t snap_type[2];};
struct swapent {char *ste_path;off_t ste_start;off_t ste_length;int ste_pages;int ste_free;int ste_flags;};
struct swapres {char *sr_name;off_t sr_start;off_t sr_length;};
struct sysinfo {uint_t updates;uint_t runque;uint_t runocc;uint_t swpque;uint_t swpocc;uint_t waiting;};
typedef uint32_t tcp_seq;
struct tcpstat {uint_t tcps_connattempt;uint_t tcps_accepts;uint_t tcps_connects;uint_t tcps_drops;uint_t tcps_conndrops;uint_t tcps_closed;uint_t tcps_segstimed;uint_t tcps_rttupdated;uint_t tcps_delack;uint_t tcps_timeoutdrop;uint_t tcps_rexmttimeo;uint_t tcps_persisttimeo;uint_t tcps_keeptimeo;uint_t tcps_keepprobe;uint_t tcps_keepdrops;uint_t tcps_sndtotal;uint_t tcps_sndpack;uint_t tcps_sndbyte;uint_t tcps_sndrexmitpack;uint_t tcps_sndrexmitbyte;uint_t tcps_sndacks;uint_t tcps_sndprobe;uint_t tcps_sndurg;uint_t tcps_sndwinup;uint_t tcps_sndctrl;uint_t tcps_rcvtotal;uint_t tcps_rcvpack;uint_t tcps_rcvbyte;uint_t tcps_rcvbadsum;uint_t tcps_rcvbadoff;uint_t tcps_rcvshort;uint_t tcps_rcvduppack;uint_t tcps_rcvdupbyte;uint_t tcps_rcvpartduppack;uint_t tcps_rcvpartdupbyte;uint_t tcps_rcvoopack;uint_t tcps_rcvoobyte;uint_t tcps_rcvpackafterwin;uint_t tcps_rcvbyteafterwin;uint_t tcps_rcvafterclose;uint_t tcps_rcvwinprobe;uint_t tcps_rcvdupack;uint_t tcps_rcvacktoomuch;uint_t tcps_rcvackpack;uint_t tcps_rcvackbyte;uint_t tcps_rcvwinupd;};
struct tdirent {struct tmpnode *td_tmpnode;struct tdirent *td_next;struct tdirent *td_prev;uint_t td_offset;uint_t td_hash;struct tdirent *td_link;struct tmpnode *td_parent;char *td_name;};
struct tsdpent {pri_t ts_globpri;int ts_quantum;pri_t ts_tqexp;pri_t ts_slpret;short ts_maxwait;short ts_lwait;};
struct tsparms {pri_t ts_uprilim;pri_t ts_upri;};
typedef ulong_t u_off_t;
typedef int32_t uid32_t;
struct utimbuf {time_t actime;time_t modtime;};
struct utsname {char sysname[257];char nodename[257];char release[257];char version[257];char machine[257];};
typedef enum vtype vtype_t;
struct zs_prog {struct zscom *zs;uchar_t flags;uchar_t wr4;uchar_t wr11;uchar_t wr12;uchar_t wr13;uchar_t wr3;uchar_t wr5;uchar_t wr15;};
typedef enum _EDBA1914F16BC538415B0E0A3A3FD3BB ACTION;
typedef ulong_t Lmid_t;
typedef Elf32_Sword Sxword;
typedef Elf32_Verdef Verdef;
typedef Elf32_Versym Versym;
struct __FILE {ssize_t _cnt;unsigned char *_ptr;unsigned char *_base;unsigned char _flag;unsigned char _file;unsigned int __orientation : 2;unsigned int __ionolock : 1;unsigned int __filler : 5;};
struct afhash {uint_t afh_hosthash;uint_t afh_nethash;};
struct apdata {uint_t apd_anchor;};
struct arpreq {struct sockaddr arp_pa;struct sockaddr arp_ha;int arp_flags;};
typedef au_id_t auid_t;
struct ba_rjt {uchar_t reseved;uchar_t reason_code;uchar_t explanation;uchar_t vendor;};
typedef ushort_t comp_t;
typedef lwp_cond_t cond_t;
struct dacfsw {int dacf_rev;dacf_opset_t *dacf_opsets;};
struct dk_map {daddr_t dkl_cylno;daddr_t dkl_nblk;};
typedef enum _E36DDC315EED95A07EBF18BE166BF116 enctyp;
struct espreg {uint8_t esp_xcnt_lo;uint8_t _pad1;uint8_t _pad2;uint8_t _pad3;uint8_t esp_xcnt_mid;uint8_t _pad5;uint8_t _pad6;uint8_t _pad7;uint8_t esp_fifo_data;uint8_t _pad9;uint8_t _pad10;uint8_t _pad11;uint8_t esp_cmd;uint8_t _pad13;uint8_t _pad14;uint8_t _pad15;uint8_t esp_stat;uint8_t _pad17;uint8_t _pad18;uint8_t _pad19;uint8_t esp_intr;uint8_t _pad21;uint8_t _pad22;uint8_t _pad23;uint8_t esp_step;uint8_t _pad25;uint8_t _pad26;uint8_t _pad27;uint8_t esp_fifo_flag;uint8_t _pad29;uint8_t _pad30;uint8_t _pad31;uint8_t esp_conf;uint8_t _pad33;uint8_t _pad34;uint8_t _pad35;uint8_t esp_clock_conv;uint8_t _pad37;uint8_t _pad38;uint8_t _pad39;uint8_t esp_test;uint8_t _pad41;uint8_t _pad42;uint8_t _pad43;uint8_t esp_conf2;uint8_t _pad45;uint8_t _pad46;uint8_t _pad47;uint8_t esp_conf3;uint8_t _pad49;uint8_t _pad50;uint8_t _pad51;uint8_t _pad52;uint8_t _pad53;uint8_t _pad54;uint8_t _pad55;uint8_t esp_xcnt_hi;uint8_t _pad57;uint8_t _pad58;uint8_t _pad59;uint8_t esp_fifo_bottom;uint8_t _pad61;uint8_t _pad62;uint8_t _pad63;};
struct extent {uint32_t lbno;uint32_t pbno;uint32_t nbno;};
struct fasreg {uint8_t fas_xcnt_lo;uint8_t _pad1;uint8_t _pad2;uint8_t _pad3;uint8_t fas_xcnt_mid;uint8_t _pad5;uint8_t _pad6;uint8_t _pad7;uint8_t fas_fifo_data;uint8_t _pad9;uint8_t _pad10;uint8_t _pad11;uint8_t fas_cmd;uint8_t _pad13;uint8_t _pad14;uint8_t _pad15;uint8_t fas_stat;uint8_t _pad17;uint8_t _pad18;uint8_t _pad19;uint8_t fas_intr;uint8_t _pad21;uint8_t _pad22;uint8_t _pad23;uint8_t fas_step;uint8_t _pad25;uint8_t _pad26;uint8_t _pad27;uint8_t fas_fifo_flag;uint8_t _pad29;uint8_t _pad30;uint8_t _pad31;uint8_t fas_conf;uint8_t _pad33;uint8_t _pad34;uint8_t _pad35;uint8_t fas_clock_conv;uint8_t _pad37;uint8_t _pad38;uint8_t _pad39;uint8_t fas_test;uint8_t _pad41;uint8_t _pad42;uint8_t _pad43;uint8_t fas_conf2;uint8_t _pad45;uint8_t _pad46;uint8_t _pad47;uint8_t fas_conf3;uint8_t _pad49;uint8_t _pad50;uint8_t _pad51;uint8_t _pad_reserved[4];uint8_t fas_recmd_lo;uint8_t _pad52;uint8_t _pad53;uint8_t _pad54;uint8_t fas_recmd_hi;uint8_t _pad55;uint8_t _pad56;uint8_t _pad57;};
struct fd_raw {char fdr_cmd[10];short fdr_cnum;char fdr_result[10];ushort_t fdr_nbytes;char *fdr_addr;};
struct fiolog {uint_t nbytes_requested;uint_t nbytes_actual;int error;};
struct iainfo {pri_t ia_maxupri;};
typedef int32_t id32_t;
typedef enum idop idop_t;
struct ifconf {int ifc_len;union ifconf___28C87C5ACD364976D94B96E40062B553 ifc_ifcu;};
struct la_rjt {int code;uchar_t reserved;uchar_t reason_code;uchar_t explanation;uchar_t vendor;};
struct la_rls {unsigned int code;uchar_t reserved;uchar_t nport_id[3];};
struct lifnum {sa_family_t lifn_family;int lifn_flags;int lifn_count;};
struct lineno {union lineno___4D6E082ABC3813EFAD274BDB52D637EC l_addr;unsigned short l_lnno;};
typedef ulong_t mode_t;
struct mon_id {char *mon_name;struct my_id my_id;};
typedef ulong_t n_long;
typedef ulong_t n_time;
struct netent {char *n_name;char **n_aliases;int n_addrtype;in_addr_t n_net;};
struct netobj {uint_t n_len;char *n_bytes;};
typedef ushort_t o_mode;
struct opthdr {t_uscalar_t level;t_uscalar_t name;t_uscalar_t len;};
struct pcinfo {id_t pc_cid;char pc_clname[16];int pc_clinfo[8];};
struct pctime {ushort_t pct_time;ushort_t pct_date;};
struct pkgdev {int rdonly;int mntflg;longlong_t capacity;char *name;char *dirname;char *pathname;char *mount;char *fstyp;char *cdevice;char *bdevice;char *norewind;};
struct ptable {uchar_t filler[7];uchar_t dname_len;uchar_t dname[32];};
struct refstr {uint32_t rs_size;uint32_t rs_refcnt;char rs_string[1];};
struct rlimit {rlim_t rlim_cur;rlim_t rlim_max;};
struct rtinfo {pri_t rt_maxpri;};
struct sd_seg {struct sd_seg *sd_next;ulong_t sd_off;ulong_t sd_cnt;};
struct sec_ol {int sec_flags;uint_t sec_index;};
struct sembuf {ushort_t sem_num;short sem_op;short sem_flg;};
typedef uint_t size_t;
struct soaddr {struct sockaddr *soa_sa;t_uscalar_t soa_len;t_uscalar_t soa_maxlen;};
struct strbuf {int maxlen;int len;caddr_t buf;};
struct syment {union syment___DDDE857849BC8DF52744F40651AC3747 _n;unsigned int n_value;short n_scnum;unsigned short n_type;char n_sclass;char n_numaux;};
struct t_call {struct netbuf addr;struct netbuf opt;struct netbuf udata;int sequence;};
struct t_info {t_scalar_t addr;t_scalar_t options;t_scalar_t tsdu;t_scalar_t etsdu;t_scalar_t connect;t_scalar_t discon;t_scalar_t servtype;t_scalar_t flags;};
union tblock {char dummy[512];struct tblock__tar_hdr tbuf;};
struct tiuser {struct file *fp;struct t_info tp_info;int flags;};
struct tsinfo {pri_t ts_maxupri;};
union u_data {char s_addrs[512];int32_t s_inos[128];};
typedef u_int uint32;
typedef u_longlong_t uint64;
struct vfsops {int (*vfs_mount)(struct vfs *, struct vnode *, struct mounta *, struct cred *);int (*vfs_unmount)(struct vfs *, int, struct cred *);int (*vfs_root)(struct vfs *, struct vnode **);int (*vfs_statvfs)(struct vfs *, struct statvfs64 *);int (*vfs_sync)(struct vfs *, short, struct cred *);int (*vfs_vget)(struct vfs *, struct vnode **, struct fid *);int (*vfs_mountroot)(struct vfs *, enum whymountroot);int (*vfs_swapvp)(struct vfs *, struct vnode **, char *);void (*vfs_freevfs)(struct vfs *);};
typedef ushort_t vifi_t;
struct vminfo {uint64_t freemem;uint64_t swap_resv;uint64_t swap_alloc;uint64_t swap_avail;uint64_t swap_free;};
typedef uint32_t Gauge;
typedef Elf32_Lword Lword;
struct PANEL {WINDOW *win;int wstarty;int wendy;int wstartx;int wendx;struct _obscured_list *obscured;struct PANEL *below;struct PANEL *above;char *user;};
typedef Elf32_Sword Sword;
typedef enum _003F63A829E52477BDB4080710A1139D VISIT;
typedef Elf32_Word Xword;
struct _once {upad64_t __pthread_once_pad[4];};
struct arh_s {uchar_t arh_hardware[2];uchar_t arh_proto[2];uchar_t arh_hlen;uchar_t arh_plen;uchar_t arh_operation[2];};
struct cinfo {int cksum;int size;time_t modtime;};
typedef ulong_t dev_t;
struct dispq {kthread_id_t dq_first;kthread_id_t dq_last;int dq_sruncnt;};
struct dmaga {uint32_t dmaga_csr;uint32_t dmaga_addr;uint32_t dmaga_count;uint32_t dmaga_diag;};
struct dqblk {uint32_t dqb_bhardlimit;uint32_t dqb_bsoftlimit;uint32_t dqb_curblocks;uint32_t dqb_fhardlimit;uint32_t dqb_fsoftlimit;uint32_t dqb_curfiles;uint32_t dqb_btimelimit;uint32_t dqb_ftimelimit;};
typedef uid_t gid_t;
struct group {char *gr_name;char *gr_passwd;gid_t gr_gid;char **gr_mem;};
typedef ulong_t ino_t;
typedef longlong_t int64;
struct iovec {caddr_t iov_base;int iov_len;};
typedef enum _5B09411ABF7AF89741BC688D36351F9B krw_t;
struct kva_s {int length;kv_t *data;};
typedef u_longlong_t len_t;
struct mboot {char bootinst[446];char parts[64];ushort_t signature;};
struct memid {u_longlong_t val[2];};
typedef uint32 mode3;
typedef boolean_t (*pfb_t)();
typedef ulong_t pfn_t;
struct plock {kmutex_t pl_lock;};
struct pmmsg {char pm_type;uchar_t pm_state;char pm_maxclass;char pm_tag[15];int pm_size;};
struct regid {uint8_t reg_flags;char reg_id[23];char reg_ids[8];};
struct route {struct rtentry *ro_rt;struct sockaddr ro_dst;};
typedef uint64 size3;
struct strs2 {charptr _lab_f9;charptr _meta_off;charptr _meta_on;charptr _newline;charptr _pad_char;charptr _prm_dch;charptr _prm_delete_line;charptr _prm_down_cursor;charptr _prm_ich;charptr _prm_index;charptr _prm_insert_line;charptr _prm_left_cursor;charptr _prm_right_cursor;charptr _prm_rindex;charptr _prm_up_cursor;charptr _pkey_key;charptr _pkey_local;charptr _pkey_xmit;charptr _print_screen;charptr _prtr_off;charptr _prtr_on;charptr _repeat_char;charptr _reset_1string;charptr _reset_2string;charptr _reset_3string;charptr _reset_file;charptr _restore_cursor;charptr _row_address;charptr _save_cursor;charptr _scrll_forward;charptr _scrll_reverse;charptr _set_attributes;charptr _set_tab;charptr _set_window;charptr _tab;charptr _to_status_line;charptr _underline_char;charptr _up_half_line;charptr _init_prog;charptr _ky_a1;charptr _ky_a3;charptr _ky_b2;charptr _ky_c1;charptr _ky_c3;charptr _prtr_non;charptr _char_padding;charptr _acs_chars;charptr _plab_norm;charptr _ky_btab;charptr _entr_xon_mode;charptr _exit_xon_mode;charptr _entr_am_mode;charptr _exit_am_mode;charptr _xon_character;charptr _xoff_character;charptr _ena_acs;charptr _labl_on;charptr _labl_off;charptr _ky_beg;charptr _ky_cancel;charptr _ky_close;charptr _ky_command;charptr _ky_copy;charptr _ky_create;charptr _ky_end;charptr _ky_enter;charptr _ky_exit;charptr _ky_find;charptr _ky_help;charptr _ky_mark;charptr _ky_message;charptr _ky_move;charptr _ky_next;charptr _ky_open;charptr _ky_options;charptr _ky_previous;charptr _ky_print;charptr _ky_redo;charptr _ky_reference;charptr _ky_refresh;charptr _ky_replace;charptr _ky_restart;charptr _ky_resume;charptr _ky_save;charptr _ky_suspend;charptr _ky_undo;charptr _ky_sbeg;charptr _ky_scancel;charptr _ky_scommand;charptr _ky_scopy;charptr _ky_screate;charptr _ky_sdc;charptr _ky_sdl;charptr _ky_select;charptr _ky_send;charptr _ky_seol;charptr _ky_sexit;charptr _ky_sfind;charptr _ky_shelp;charptr _ky_shome;};
struct strs3 {charptr _ky_sic;charptr _ky_sleft;charptr _ky_smessage;charptr _ky_smove;charptr _ky_snext;charptr _ky_soptions;charptr _ky_sprevious;charptr _ky_sprint;charptr _ky_sredo;charptr _ky_sreplace;charptr _ky_sright;charptr _ky_srsume;charptr _ky_ssave;charptr _ky_ssuspend;charptr _ky_sundo;charptr _req_for_input;charptr _ky_f11;charptr _ky_f12;charptr _ky_f13;charptr _ky_f14;charptr _ky_f15;charptr _ky_f16;charptr _ky_f17;charptr _ky_f18;charptr _ky_f19;charptr _ky_f20;charptr _ky_f21;charptr _ky_f22;charptr _ky_f23;charptr _ky_f24;charptr _ky_f25;charptr _ky_f26;charptr _ky_f27;charptr _ky_f28;charptr _ky_f29;charptr _ky_f30;charptr _ky_f31;charptr _ky_f32;charptr _ky_f33;charptr _ky_f34;charptr _ky_f35;charptr _ky_f36;charptr _ky_f37;charptr _ky_f38;charptr _ky_f39;charptr _ky_f40;charptr _ky_f41;charptr _ky_f42;charptr _ky_f43;charptr _ky_f44;charptr _ky_f45;charptr _ky_f46;charptr _ky_f47;charptr _ky_f48;charptr _ky_f49;charptr _ky_f50;charptr _ky_f51;charptr _ky_f52;charptr _ky_f53;charptr _ky_f54;charptr _ky_f55;charptr _ky_f56;charptr _ky_f57;charptr _ky_f58;charptr _ky_f59;charptr _ky_f60;charptr _ky_f61;charptr _ky_f62;charptr _ky_f63;charptr _clr_bol;charptr _clear_margins;charptr _set_left_margin;charptr _set_right_margin;charptr _labl_format;charptr _set_clock;charptr _display_clock;charptr _remove_clock;charptr _create_window;charptr _goto_window;charptr _hangup;charptr _dial_phone;charptr _quick_dial;charptr _tone;charptr _pulse;charptr _flash_hook;charptr _fixed_pause;charptr _wait_tone;charptr _user0;charptr _user1;charptr _user2;charptr _user3;charptr _user4;charptr _user5;charptr _user6;charptr _user7;charptr _user8;charptr _user9;charptr _orig_pair;charptr _orig_colors;charptr _initialize_color;};
struct strs4 {charptr _initialize_pair;charptr _set_color_pair;charptr _set_foreground;charptr _set_background;charptr _change_char_pitch;charptr _change_line_pitch;charptr _change_res_horz;charptr _change_res_vert;charptr _define_char;charptr _entr_doublewide_mode;charptr _entr_draft_quality;charptr _entr_italics_mode;charptr _entr_leftward_mode;charptr _entr_micro_mode;charptr _entr_near_letter_quality;charptr _entr_normal_quality;charptr _entr_shadow_mode;charptr _entr_subscript_mode;charptr _entr_superscript_mode;charptr _entr_upward_mode;charptr _exit_doublewide_mode;charptr _exit_italics_mode;charptr _exit_leftward_mode;charptr _exit_micro_mode;charptr _exit_shadow_mode;charptr _exit_subscript_mode;charptr _exit_superscript_mode;charptr _exit_upward_mode;charptr _micro_column_address;charptr _micro_down;charptr _micro_left;charptr _micro_right;charptr _micro_row_address;charptr _micro_up;charptr _order_of_pins;charptr _prm_down_micro;charptr _prm_left_micro;charptr _prm_right_micro;charptr _prm_up_micro;charptr _select_char_set;charptr _set_bottom_margin;charptr _set_bottom_margin_parm;charptr _set_left_margin_parm;charptr _set_right_margin_parm;charptr _set_top_margin;charptr _set_top_margin_parm;charptr _start_bit_image;charptr _start_char_set_def;charptr _stop_bit_image;charptr _stop_char_set_def;charptr _subscript_characters;charptr _superscript_characters;charptr _these_cause_cr;charptr _zero_motion;charptr _char_set_names;charptr _ky_mouse;charptr _mouse_info;charptr _req_mouse_pos;charptr _get_mouse;charptr _set_a_foreground;charptr _set_a_background;charptr _pkey_plab;charptr _device_type;charptr _code_set_init;charptr _set0_des_seq;charptr _set1_des_seq;charptr _set2_des_seq;charptr _set3_des_seq;charptr _set_lr_margin;charptr _set_tb_margin;charptr _bit_image_repeat;charptr _bit_image_newline;charptr _bit_image_carriage_return;charptr _color_names;charptr _define_bit_image_region;charptr _end_bit_image_region;charptr _set_color_band;charptr _set_page_length;charptr _display_pc_char;charptr _entr_pc_charset_mode;charptr _exit_pc_charset_mode;charptr _entr_scancode_mode;charptr _exit_scancode_mode;charptr _pc_term_options;charptr _scancode_escape;charptr _alt_scancode_esc;charptr _entr_horizontal_hl_mode;charptr _entr_left_hl_mode;charptr _entr_low_hl_mode;charptr _entr_right_hl_mode;charptr _entr_top_hl_mode;charptr _entr_vertical_hl_mode;charptr _set_a_attributes;charptr _set_pglen_inch;charptr Sentinel;};
struct timeb {time_t time;unsigned short millitm;short timezone;short dstflag;};
typedef enum top_type top_t;
typedef uchar_t use_t;
struct vfssw {char *vsw_name;int (*vsw_init)(struct vfssw *, int);struct vfsops *vsw_vfsops;int vsw_flag;mntopts_t *vsw_optproto;};
struct vpage {uchar_t nvp_prot;uchar_t nvp_advice;};
typedef Elf32_Addr Addr;
typedef Elf32_Boot Boot;
typedef Elf32_Ehdr Ehdr;
typedef Elf32_Half Half;
typedef Elf32_Move Move;
typedef Elf32_Nhdr Nhdr;
typedef Elf32_Phdr Phdr;
typedef Elf32_Rela Rela;
typedef Elf32_Shdr Shdr;
typedef Elf32_Word Word;
struct _buf {intptr_t _fd;char *_ptr;char *_base;char *_name;int _size;int _cnt;int _off;int _ln;};
struct anon {struct vnode *an_vp;struct vnode *an_pvp;anoff_t an_off;anoff_t an_poff;struct anon *an_hash;int an_refcnt;};
struct csum {int32_t cs_ndir;int32_t cs_nbfree;int32_t cs_nifree;int32_t cs_nffree;};
struct exec {uint32_t a_magic;uint32_t a_text;uint32_t a_data;uint32_t a_bss;uint32_t a_syms;uint32_t a_entry;uint32_t a_trsize;uint32_t a_drsize;};
struct fclb {uchar_t outbound_frame[24];uchar_t inbound_frame[24];};
typedef uint32 gid3;
struct hbuf {int b_flags;struct buf *b_forw;struct buf *b_back;struct buf *av_forw;struct buf *av_back;int b_length;kmutex_t b_lock;};
struct mace {uchar_t rcvfifo;uchar_t xmtfifo;uchar_t xmtfc;uchar_t xmtfs;uchar_t xmtrc;uchar_t rcvfc;uchar_t rcvfs;uchar_t fifofc;uchar_t ir;uchar_t imr;uchar_t pr;uchar_t biucc;uchar_t fifocc;uchar_t maccc;uchar_t plscc;uchar_t phycc;uchar_t chipidlo;uchar_t chipidhi;uchar_t iac;uchar_t reserved0;uchar_t ladrf;uchar_t padr;uchar_t reserved1;uchar_t reserved2;uchar_t mpc;uchar_t reserved3;uchar_t rntpc;uchar_t rcvcc;uchar_t reserved4;uchar_t utr;uchar_t rtr1;uchar_t rtr2;};
struct msgb {struct msgb *b_next;struct msgb *b_prev;struct msgb *b_cont;unsigned char *b_rptr;unsigned char *b_wptr;struct datab *b_datap;unsigned char b_band;unsigned char b_ftflag;unsigned short b_flag;queue_t *b_queue;};
struct mtop {short mt_op;daddr_t mt_count;};
typedef quad_t quad;
struct rate {t_scalar_t targetvalue;t_scalar_t minacceptvalue;};
typedef enum rm rm_t;
struct strs {charptr _back_tab;charptr _bell;charptr _carriage_return;charptr _change_scroll_region;charptr _clear_all_tabs;charptr _clear_screen;charptr _clr_eol;charptr _clr_eos;charptr _column_address;charptr _command_character;charptr _crsr_address;charptr _crsr_down;charptr _crsr_home;charptr _crsr_invisible;charptr _crsr_left;charptr _crsr_mem_address;charptr _crsr_normal;charptr _crsr_right;charptr _crsr_to_ll;charptr _crsr_up;charptr _crsr_visible;charptr _dlt_character;charptr _dlt_line;charptr _dis_status_line;charptr _down_half_line;charptr _entr_alt_charset_mode;charptr _entr_blink_mode;charptr _entr_bold_mode;charptr _entr_ca_mode;charptr _entr_delete_mode;charptr _entr_dim_mode;charptr _entr_insert_mode;charptr _entr_secure_mode;charptr _entr_protected_mode;charptr _entr_reverse_mode;charptr _entr_standout_mode;charptr _entr_underline_mode;charptr _erase_chars;charptr _exit_alt_charset_mode;charptr _exit_attribute_mode;charptr _exit_ca_mode;charptr _exit_delete_mode;charptr _exit_insert_mode;charptr _exit_standout_mode;charptr _exit_underline_mode;charptr _flash_screen;charptr _form_feed;charptr _from_status_line;charptr _init_1string;charptr _init_2string;charptr _init_3string;charptr _init_file;charptr _ins_character;charptr _ins_line;charptr _ins_padding;charptr _ky_backspace;charptr _ky_catab;charptr _ky_clear;charptr _ky_ctab;charptr _ky_dc;charptr _ky_dl;charptr _ky_down;charptr _ky_eic;charptr _ky_eol;charptr _ky_eos;charptr _ky_f0;charptr _ky_f1;charptr _ky_f10;charptr _ky_f2;charptr _ky_f3;charptr _ky_f4;charptr _ky_f5;charptr _ky_f6;charptr _ky_f7;charptr _ky_f8;charptr _ky_f9;charptr _ky_home;charptr _ky_ic;charptr _ky_il;charptr _ky_left;charptr _ky_ll;charptr _ky_npage;charptr _ky_ppage;charptr _ky_right;charptr _ky_sf;charptr _ky_sr;charptr _ky_stab;charptr _ky_up;charptr _kpad_local;charptr _kpad_xmit;charptr _lab_f0;charptr _lab_f1;charptr _lab_f10;charptr _lab_f2;charptr _lab_f3;charptr _lab_f4;charptr _lab_f5;charptr _lab_f6;charptr _lab_f7;charptr _lab_f8;};
typedef hrtime_t ts_t;
typedef uint32 uid3;
typedef Elf32_Dyn Dyn;
typedef Elf32_Off Off;
typedef Elf32_Rel Rel;
typedef Elf32_Sym Sym;
struct dma {uint32_t dma_csr;uint32_t dma_addr;uint32_t dma_count;uint32_t dma_test;};
struct fid {union fid___51BF437B1B3635FB7766BD36FE5A8A71 un;};
struct hdr {char *lpc;char *hpc;size_t nfns;};
struct mon {struct mon_id mon_id;char priv[16];};
struct msg {struct msg *msg_next;int msg_type;size_t msg_size;void *msg_addr;};
struct qmd {uint_t qmd_flags;uint_t qmd_addr;};
struct tms {clock_t tms_utime;clock_t tms_stime;clock_t tms_cutime;clock_t tms_cstime;};
struct whf {uint_t width;uint_t height;uint_t vfreq;};
struct dl {int dl_hop;uint_t dl_lop;};
struct fq {union fq___3D3D4FC1770C1E48B1A2982F7A6AC98A FQu;};
union nss_netdirbyaddr_in___52654151BE2F33B35A12C07C8189686F___50C6C771A4EDD455CAD0D8DFE1969C14 {struct nss_netdirbyaddr_in______50C6C771A4EDD455CAD0D8DFE1969C14___A9483FE5E62180344C8B6F942B51662C host;struct nss_netdirbyaddr_in______50C6C771A4EDD455CAD0D8DFE1969C14___2B76CCD4C68FA5116F2B79D93ECF9A8B serv;};
union nss_netdirbyname_in___A81B8F3144EDB2CCC4B96A77B00E3123___199656A6E013B40F3B25B2A0A5E1878D {struct nss_netdirbyname_in______199656A6E013B40F3B25B2A0A5E1878D___5995339A35AADA7B31B84FCA93E4D7C5 host;struct nss_netdirbyname_in______199656A6E013B40F3B25B2A0A5E1878D___BFAC7FB397D43626CBC2D8E8416F15CB serv;};
struct k_siginfo_________1E1D46254D77D7AA17918C17CAF3F7C6___6C9D3494F7394A5542DE40AFB5D524A6 {uid_t __uid;union sigval __value;};
struct accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76___BFD7413E14FC21CAB05150D69A0647C0 {caddr_t where;xdrproc_t proc;};
struct siginfo_________F5CA292679AFF35DF48F2E3B742B91CE___6C9D3494F7394A5542DE40AFB5D524A6 {uid_t __uid;union sigval __value;};
union k_siginfo______E77A5845F57C2E0E9F7B0E52AACFC772___1E1D46254D77D7AA17918C17CAF3F7C6 {struct k_siginfo_________1E1D46254D77D7AA17918C17CAF3F7C6___6C9D3494F7394A5542DE40AFB5D524A6 __kill;struct k_siginfo_________1E1D46254D77D7AA17918C17CAF3F7C6___3D26F7DC2EE9BFA01DA7951ECDA8B430 __cld;};
union siginfo______B04DB3B3CC2294C7D842DC1A71FF04F2___F5CA292679AFF35DF48F2E3B742B91CE {struct siginfo_________F5CA292679AFF35DF48F2E3B742B91CE___6C9D3494F7394A5542DE40AFB5D524A6 __kill;struct siginfo_________F5CA292679AFF35DF48F2E3B742B91CE___3D26F7DC2EE9BFA01DA7951ECDA8B430 __cld;};
struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___C50A7FE09995E3AE62471BF9E2207266 {caddr_t __faddr;timestruc_t __tstamp;short __syscall;char __nsysarg;char __fault;};
struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___E77A5845F57C2E0E9F7B0E52AACFC772 {pid_t __pid;union k_siginfo______E77A5845F57C2E0E9F7B0E52AACFC772___1E1D46254D77D7AA17918C17CAF3F7C6 __pdata;};
struct siginfo___61EAF0F09D3366CB297160630E2CDB63___6967CB540280E7650496FA35CF8D6785 {caddr_t __faddr;timestruc_t __tstamp;short __syscall;char __nsysarg;char __fault;int __sysarg[8];int __mstate[10];};
struct siginfo___61EAF0F09D3366CB297160630E2CDB63___B04DB3B3CC2294C7D842DC1A71FF04F2 {pid_t __pid;union siginfo______B04DB3B3CC2294C7D842DC1A71FF04F2___F5CA292679AFF35DF48F2E3B742B91CE __pdata;};
union auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774___5426BF9CDAC0D098DF12E4CF0DDB9B67 {struct auxent______5426BF9CDAC0D098DF12E4CF0DDB9B67___A4FE982D5F029E6ACEFDE76E40C46556 x_fcn;struct auxent______5426BF9CDAC0D098DF12E4CF0DDB9B67___93D0B1966774B86D3450284C91FC650B x_ary;};
union _53F0EB4E985DBC87B1B2326D8BF9D556___933121F4FA1889599F702E16603DBB9F {Elf64_Xword d_val;Elf64_Addr d_ptr;};
union _8A43A92A61C1A96F5CE7557D3343944D___0586161EA22616021F7885215C69F5CE {uint8_t buf8[64];uint32_t buf32[16];};
union _F9CE4197C78490B9950BF1AD06D064B7___51177246DB161340A18046D041E50857 {uint64_t _dmac_ll;uint32_t _dmac_la[2];};
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__data_modem {uint32_t ud;uint32_t ms;uint32_t em;uint32_t dc;uint32_t cm;uint32_t ex;uint32_t dy;uint32_t ef;uint32_t ncd;uchar_t cd[16];};
union lock_manager_pid_list___4DC38F0FE7A8191D13CDBC3374F7BD69 {pid_t _pid;struct lock_manager_pid_list___4DC38F0FE7A8191D13CDBC3374F7BD69___DC12B69B71FCF6E7CE697C9B98D1D920 _own;};
struct cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C__mem {uint32_t flags;uint32_t reserved;caddr_t address;uint32_t edcloc;};
union mdi_register_address___1D710587ACD8F96B72E62202A6B4467B {struct mdi_register_address___1D710587ACD8F96B72E62202A6B4467B___AAF521FFECC16E0F4B08F725D6CA6B0D v_vcr1;struct mdi_register_address___1D710587ACD8F96B72E62202A6B4467B___7408794E9FAFA6D3794D2FEFC05E2672 v_vcr2;};
union mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0 {struct mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0___038C17E0070C4E198CB4CFD3D7418D00 v_mcr1;struct mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0___317870EC7F9E5F5CA168BD5488628DA7 v_mcr2;};
union mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176 {struct mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176___0B2A96B84180496199ED52D5315E28CF mcr1;struct mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176___AB6D7823DFFA587DE3AB49922CD65E6D mcr2;};
union nispasswd_authresult___B078DBBAB3D407E214C0776301111B02 {nispasswd_verf npd_verf;nispasswd_code npd_err;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_error {dev_t viee_dev;uint_t viee_errno;};
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__fax {uint32_t uf;uint32_t fm;uint32_t fy;uint32_t fs;uint32_t ncf;uchar_t cf[16];};
struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__lan {uint32_t tech;uint32_t speed;uint32_t media;uint32_t con;uint32_t id_sz;uchar_t id[16];};
union action_list_entry___C44F4EEF0FC4FD7005019F0CD0D984D6 {struct mounta mounta;struct linka linka;};
union cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C {struct cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C__disk disk;struct cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C__mem mem;};
struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_rtradv {uchar_t irt_num_addrs;uchar_t irt_wpa;n_short irt_lifetime;};
union _pthread_mutex___1A7858AFF91A54C35A86C698AE036482 {struct _pthread_mutex___1A7858AFF91A54C35A86C698AE036482___50F3AE10509153FFBB1A15F9D86B57ED __pthread_mutex_lock64;upad64_t __pthread_mutex_owner64;};
union accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76 {struct accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76___D52F10176CE5E6769EE83800681284AC AR_versions;struct accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76___BFD7413E14FC21CAB05150D69A0647C0 AR_results;};
union rejected_reply___2B53589865B36E9C26DCD66F40988BA8 {struct rejected_reply___2B53589865B36E9C26DCD66F40988BA8___D52F10176CE5E6769EE83800681284AC RJ_versions;enum auth_stat RJ_why;};
struct _pthread_cond___47F9AA781B8B3BD4B4EFEED0C176A991 {uint8_t __pthread_cond_flag[4];uint32_t __pthread_cond_type;};
union td_event_msg___1BD937C0E27E3130424F8B8CF85B0670 {td_synchandle_t *sh;uintptr_t data;};
struct npd_request___04A93ECC78428ACBA0FDC65FE7C8FE57 {u_int npd_authpass_len;u_char *npd_authpass_val;};
struct npd_request___C3CD0BD37319ED44942FA197CF7B5408 {u_int user_pub_key_len;u_char *user_pub_key_val;};
union pln_address___5B09262AB1EEEA85D62AFB703E1F9FE4 {fcp_ent_addr_t fcp_addr;struct pln_address___5B09262AB1EEEA85D62AFB703E1F9FE4___D6F8DBE4DF26C786F25BF1CD90CF2E7E pln_addr;};
struct READ3resok___AAF002B4BE02F6C1DC09698F914F418A {uint_t data_len;char *data_val;mblk_t *mp;};
struct cback_data___8577E6F7A3DA394015609B473F63AD7B {u_int entries_len;obj_p *entries_val;};
struct db_result___B843AB932F73FFE0B886650421EE9A7B {uint_t objects_len;entry_object_p *objects_val;};
union ea_object___0370017D977B975B2DEED3572138FADD {ea_group_t eo_u_group;ea_item_t eo_u_item;};
struct group_obj___6B1AF3D1F6DE7092D80225088D6E3A34 {u_int gr_members_len;nis_name *gr_members_val;};
union cistpl_t___C4278FD82B146D460B453B2BB46DF7C8 {cisdata_t *byte;uint16_t *sword;};
union fdbuffer___3B787F33FCB8F87ECFB5EACDDE5BCC6D {page_t *pages;caddr_t addr;};
union in6_addr___0B96DB6FF0520CC7F6D64D2FDA9E8D55 {uint8_t _S6_u8[16];uint32_t _S6_u32[4];uint32_t __S6_align;};
union fcp_rsp___7DE1CF9D6261DB3834188948652834A1 {fcp_status_t fcp_status;uint_t i_fcp_status;};
union ufs_acl___F7724D0603D30FF994A85BCBA2AD5333 {uint32_t acl_next;ushort_t acl_tag;};
struct auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774 {int x_tagndx;union auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774___FAC801B16405A3810F07150B5E65B5F1 x_misc;union auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774___5426BF9CDAC0D098DF12E4CF0DDB9B67 x_fcnary;unsigned short x_tvndx;};
union dsplog___DABDA4726C127F966E30EBE921BDE6CC {struct dsplog___DABDA4726C127F966E30EBE921BDE6CC___3312E2CECBED6EEC31AB8F3844196AC4 x;struct dsplog___DABDA4726C127F966E30EBE921BDE6CC___3AF9F845BE34840AF45A939F03073E99 r;};
struct dlsap___3C6A35A85173501EDF698F532F45D439 {uchar_t dl_nodeaddr[6];ushort_t dl_type;};
union pcdir___6D2C5C6D3B5BA21ED111F6CD0B750BD5 {uint16_t pcd_eattr;pc_cluster16_t pcd_scluster_hi;};
union _lwp_mutex___mutex_flags___mbcp_type_un {uint16_t bcptype;struct _lwp_mutex___mutex_flags___mbcp_type_un___mtype_rcount mtype_rcount;};
union buf___06720CD10B1F5166208F8EFA5A9BD2FD {caddr_t b_addr;int *b_words;struct fs *b_fs;struct csum *b_cs;struct cg *b_cg;struct dinode *b_dino;daddr32_t *b_daddr;};
struct _062E89D0DC7E46D06DD8F412839F5BDD {uint_t protocol;uchar_t papPeerIdLen;uchar_t papPeerId[255];uchar_t papPasswdLen;uchar_t papPasswd[255];};
struct _13471B52BA0ED10EDFBC0B01A6831312 {enum fp_class_type fpclass;int sign;int exponent;decimal_string ds;int more;int ndigits;};
struct _13EF98051BCCC3A7BE0C6290BDC374BA {uint_t message;pppProtocol_t protocol;};
struct _140052591CB0062D1DDFF0A358260292 {t_uscalar_t dl_primitive;t_uscalar_t dl_max_sdu;t_uscalar_t dl_min_sdu;t_uscalar_t dl_addr_length;t_uscalar_t dl_mac_type;t_uscalar_t dl_reserved;t_uscalar_t dl_current_state;t_scalar_t dl_sap_length;t_uscalar_t dl_service_mode;t_uscalar_t dl_qos_length;t_uscalar_t dl_qos_offset;t_uscalar_t dl_qos_range_length;t_uscalar_t dl_qos_range_offset;t_uscalar_t dl_provider_style;t_uscalar_t dl_addr_offset;t_uscalar_t dl_version;t_uscalar_t dl_brdcst_addr_length;t_uscalar_t dl_brdcst_addr_offset;t_uscalar_t dl_growth;};
struct _187C6244C967198C5905B382B0BFB5FB {t_uscalar_t dl_primitive;t_uscalar_t dl_dest_addr_length;t_uscalar_t dl_dest_addr_offset;dl_priority_t dl_priority;};
struct _192236FE3311D06A1856619BA2C00C00 {LayoutId name;LayoutValue value;};
struct _1E4540432FE6FCBAA14615B1753B1498 {t_uscalar_t dl_qos_type;t_scalar_t dl_trans_delay;t_scalar_t dl_priority;t_scalar_t dl_protection;t_scalar_t dl_residual_error;};
struct _3BD9E21EDFC7EA3B12DCBE973656A8B8 {_LC_object_t hdr;_LC_collate_t *(*init)(_LC_locale_t *);int (*destructor)(_LC_locale_t *);_LC_methods_collate_t *user_api;_LC_methods_collate_t *native_api;void *data;};
union _3C540F5A14E02DF258E6208309F9E315 {struct _3C540F5A14E02DF258E6208309F9E315___DCB49AB78C587BA8794D1A369764EF9D r;struct _3C540F5A14E02DF258E6208309F9E315___BA6BFB51A1B47E4DD1A444CD784794AC n;};
struct _4205C709627503FCC3E7DAAF0DB99385 {_LC_object_t hdr;_LC_messages_t *(*init)(_LC_locale_t *);int (*destructor)(_LC_locale_t *);_LC_methods_messages_t *user_api;_LC_methods_messages_t *native_api;void *data;};
struct _45AA4025EE1954AFBFB3DA359E0D02DB {short nmethods;short ndefined;char *(*nl_langinfo)(_LC_messages_t *, nl_item);_LC_methods_func_t placeholders[5];};
struct _45D578D1CAA1736E8819435F592D8C84 {uint_t msg;enum ipd_iftype iftype;uint_t ifunit;};
struct _490D5F12417668765212E4CF5D599182 {uint_t ppp_message;uint_t code;uint_t errlen;uchar_t errdata[255];};
struct _4DE03E8ED1D3CAFD22EDD6A1211D4CC8 {_LC_object_t hdr;_LC_time_t *(*init)(_LC_locale_t *);int (*destructor)(_LC_locale_t *);_LC_methods_time_t *user_api;_LC_methods_time_t *native_api;void *data;};
struct _53F0EB4E985DBC87B1B2326D8BF9D556 {Elf64_Xword d_tag;union _53F0EB4E985DBC87B1B2326D8BF9D556___933121F4FA1889599F702E16603DBB9F d_un;};
struct _58179321A8150557048736423AF6F76C {_LC_object_t hdr;_LC_locale_t *(*init)(_LC_locale_t *);int (*destructor)(_LC_locale_t *);_LC_methods_locale_t *user_api;_LC_methods_locale_t *native_api;void *data;};
union _5FF073EC236C3BFF212C817E6EDD9CDF {struct _5FF073EC236C3BFF212C817E6EDD9CDF___9FDBFB16591870EEECD4F897E60320A7 idu;uint_t idev_softint;};
struct _631FA0442200650F637355090EEC1282 {_LC_object_t hdr;_LC_monetary_t *(*init)(_LC_locale_t *);int (*destructor)(_LC_locale_t *);_LC_methods_monetary_t *user_api;_LC_methods_monetary_t *native_api;void *data;};
struct _750EEDBB3ABCF24E6FC38F698DC1AE07 { char *bindname;_LC_bind_tag_t bindtag;_LC_bind_value_t bindvalue;};
struct _75FD820D0CE6C215ACE04A8FAA270A6D {Elf64_Half vd_version;Elf64_Half vd_flags;Elf64_Half vd_ndx;Elf64_Half vd_cnt;Elf64_Word vd_hash;Elf64_Word vd_aux;Elf64_Word vd_next;};
struct _807D4AC2255C0A3001450ADEC11FD819 {uint_t ppp_message;pppProtocol_t protocol;};
struct _8A43A92A61C1A96F5CE7557D3343944D {uint32_t state[4];uint32_t count[2];union _8A43A92A61C1A96F5CE7557D3343944D___0586161EA22616021F7885215C69F5CE buf_un;};
union _8E64F109147703DFED6209FCF9267D5F {offset_t _f;struct _8E64F109147703DFED6209FCF9267D5F___A5946D7F0FF7E1FB159B888C46BEDC44 _p;};
struct _94B6D2E03277F36A7EAC6FE7B7D6A054 {uint_t program;uint_t version;bool_t (*callback)();};
struct _9FB80FD2F500D2E1F9F0E3DE3EE0B629 {unsigned int direction;unsigned int string_case;FN_string_t *component_separator;FN_string_t *begin_quote;FN_string_t *end_quote;FN_string_t *begin_quote2;FN_string_t *end_quote2;FN_string_t *escape;FN_string_t *type_separator;FN_string_t *ava_separator;FN_attr_syntax_locales_t *locales;};
struct _A0565235DB0A025ED98270EC8F0003BF {Elf32_Half vd_version;Elf32_Half vd_flags;Elf32_Half vd_ndx;Elf32_Half vd_cnt;Elf32_Word vd_hash;Elf32_Word vd_aux;Elf32_Word vd_next;};
struct _A313ED2DE25BE046A874D492CFBD731F {Elf64_Addr r_offset;Elf64_Xword r_info;};
struct _A32966EE8414B065154C0C0FBC0CDA05 {_LC_object_t hdr;_LC_ctype_t *(*init)(_LC_locale_t *);int (*destructor)(_LC_locale_t *);_LC_methods_ctype_t *user_api;_LC_methods_ctype_t *native_api;void *data;};
struct _A426C1BFA60F897E08DB82510E56FD03 {uint_t ppa;uint_t cmd;uchar_t multicast[4][6];};
struct _A46BFD4B6B8C284ED478D587B5722CAB {Elf64_Word vna_hash;Elf64_Half vna_flags;Elf64_Half vna_other;Elf64_Word vna_name;Elf64_Word vna_next;};
struct _AAC6986373C252F265E5EE15F2042600 {uchar_t pppPAPMessageLen;ushort_t pppPAPMessage[1];};
struct _AD898C726F4F86F79B78998236170483 {_LC_object_t hdr;_LC_numeric_t *(*init)(_LC_locale_t *);int (*destructor)(_LC_locale_t *);_LC_methods_numeric_t *user_api;_LC_methods_numeric_t *native_api;void *data;};
struct _AF17FACC7559AA50C79D476A9538E1B7 {LclContentType type;LclCharsetList *charset_list;};
struct _C07A277B0B1F71E677259B025564A502 {enum fp_direction_type rd;enum decimal_form df;int ndigits;};
union _C43472A59D225774831BE4F95424A25C {struct _C43472A59D225774831BE4F95424A25C___1FE8A4292B0E849E2B3091F413DEBC14 inf_parts;struct _C43472A59D225774831BE4F95424A25C___1313F18EDDC5C67AE4E5880DFDCB3F19 nan_parts;double d;};
struct _C772EEB8BDF2D9B03BC2113DCD14FF9B {Elf32_Addr r_offset;Elf32_Word r_info;};
struct _C9224CB3878060960E30C62E95CBCE30 {uid_t uid;gid_t gid;short gidlen;gid_t *gidlist;};
struct _CC222016AA0BB783D225EB3000BADEC7 {uchar_t ppa;uchar_t state;ushort_t adapterid;uchar_t bia[6];};
struct _D097637AB270BABD14B3012188BFE07C {t_uscalar_t dl_primitive;t_uscalar_t dl_sap;t_uscalar_t dl_max_conind;uint16_t dl_service_mode;uint16_t dl_conn_mgmt;t_uscalar_t dl_xidtest_flg;};
struct _D3341046612766E5971F0E9D3826E5FA {int req_flags;int time_req;gss_cred_id_t my_cred;gss_channel_bindings_t input_channel_bindings;};
struct _D38312C18728A251C58C258AA639B1E2 {int major_status;int minor_status;uint_t rpcsec_version;int ret_flags;int time_ret;gss_ctx_id_t gss_context;char actual_mechanism[128];};
struct _D52C4F604E0EF4858A4DDDAA58B8A08E {uint_t protocol;uchar_t chapPasswdLen;uchar_t chapPasswd[255];uchar_t chapNameLen;uchar_t chapName[255];};
struct _D69C93AF57A4C706A087FFCB2A33F062 {uint_t obj_id;uchar_t cstat[4];};
struct _D743D7FB93846D2A48423E379C4894F1 {short nmethods;short ndefined;char *(*nl_langinfo)(_LC_locale_t *, nl_item);struct lconv *(*localeconv)(_LC_locale_t *);_LC_methods_func_t placeholders[5];};
struct _D89EB48B0F107D6E39C0EF37AAFDA6FD {uint_t ppp_message;pppLinkControlEntry_t config;};
struct _DBDB4AF8E469679C3A4CD785AB502395 {Elf64_Half vn_version;Elf64_Half vn_cnt;Elf64_Word vn_file;Elf64_Word vn_aux;Elf64_Word vn_next;};
struct _DDB9E5FBB16C40A976BC405025678C57 {Elf32_Half vn_version;Elf32_Half vn_cnt;Elf32_Word vn_file;Elf32_Word vn_aux;Elf32_Word vn_next;};
struct _E66DCE15917F5E19886463E233EC4453 {bool_t locked;rpc_gss_rawcred_t *raw_cred;};
struct _E714B4690DCD4CE2097239CD07373860 {Elf32_Word vna_hash;Elf32_Half vna_flags;Elf32_Half vna_other;Elf32_Word vna_name;Elf32_Word vna_next;};
struct _E89C0C6DA392559E0E24C2B68700633F {size_t num_locales;FN_attr_syntax_locale_info_t *locales;};
struct _E9B6FB84B21FB1468EF2F76864DA4C61 {__lc_type_id_t type_id;unsigned int magic;unsigned short major_ver;unsigned short minor_ver;size_t size;};
struct _EB9CBE9F844ABCF9E9277596B691C0BF {dircache_t *dch_next;dircache_t *dch_prev;kmutex_t dch_lock;};
struct _ED04A3E3A2D9A6729338E838A059863A {ushort_t pppCPLinkNumber;uint_t pppCPRejects;uint_t pppCPInPackets;uint_t pppCPInOctets;uint_t pppCPOutPackets;uint_t pppCPOutOctets;uint_t pppCPOutCRs;uint_t pppCPInCRs;uint_t pppCPOutCAs;uint_t pppCPInCAs;uint_t pppCPOutCNs;uint_t pppCPInCNs;uint_t pppCPOutCRejs;uint_t pppCPInCRejs;uint_t pppCPOutTRs;uint_t pppCPInTRs;uint_t pppCPOutTAs;uint_t pppCPInTAs;uint_t pppCPOutCodeRejs;uint_t pppCPInCodeRejs;uint_t pppCPOutEchoReqs;uint_t pppCPInEchoReqs;uint_t pppCPOutEchoReps;uint_t pppCPInEchoReps;uint_t pppCPOutDiscReqs;uint_t pppCPInDiscReqs;};
union _EE75A551A8E099987506FD558A5F43CD {struct _EE75A551A8E099987506FD558A5F43CD___E768FB53C124E6AD95EC19322F0DD4E9 _longs;struct _EE75A551A8E099987506FD558A5F43CD___1221EBEE0BC5770066296252685AA853 _bytes;};
struct _F0AAB1DC87F2E821A9EF19B3A8438CBF {ushort_t pppIPLinkNumber;uint_t pppIPRejects;uint_t pppIPInPackets;uint_t pppIPInOctets;uint_t pppIPOutPackets;uint_t pppIPOutOctets;uint_t pppIPInVJcomp;uint_t pppIPInVJuncomp;uint_t pppIPInIP;uint_t pppIPOutVJcomp;uint_t pppIPOutVJuncomp;uint_t pppIPOutIP;};
struct _F60D842CE7A78CACE989B630880B9FF2 {short nmethods;short ndefined;char *(*nl_langinfo)(_LC_numeric_t *, nl_item);_LC_methods_func_t placeholders[5];};
union _F99502BFD9E4DD069DB8AE6B087E28E4 {diskaddr_t _f;struct _F99502BFD9E4DD069DB8AE6B087E28E4___A5946D7F0FF7E1FB159B888C46BEDC44 _p;};
typedef FN_ctx_svc_t *(*FN_ctx_svc_from_initial_func)(unsigned int, FN_status_t *);
struct cachefsio_getattrname_return {cfs_vattr_t cg_attr;cfs_fid_t cg_fid;};
struct gss_channel_bindings_struct {OM_uint32 initiator_addrtype;gss_buffer_desc initiator_address;OM_uint32 acceptor_addrtype;gss_buffer_desc acceptor_address;gss_buffer_desc application_data;};
struct _lwp_cond___lwp_cond_flags {uint8_t flag[4];uint16_t type;uint16_t magic;};
union _lwp_mutex___mutex_lock_un {struct _lwp_mutex___mutex_lock_un___mutex_lock lock64;upad64_t owner64;};
struct cistpl_cftable_entry_mem_t {uint32_t flags;uint32_t windows;cistpl_cftable_entry_mem_window_t window[8];};
struct mutex_impl__adaptive_mutex {uintptr_t _m_owner;uchar_t _m_waiters;uchar_t _m_filler[2];uchar_t _m_type;};
typedef FN_string_t *(*FN_ctx_csvc_parser_func_t)( FN_string_t *, FN_string_t **rest, FN_status_csvc_t *status);
struct cachefs_log_umount_record {int type;int error;cfs_time_t time;uint64_t vfsp;};
struct cistpl_cftable_entry_io_t {uint32_t flags;uint32_t addr_lines;uint32_t ranges;struct cistpl_cftable_entry_io_range_t range[16];};
struct cistpl_cftable_entry_pd_t {uint32_t flags;struct cistpl_cftable_entry_pwr_t pd_vcc;struct cistpl_cftable_entry_pwr_t pd_vpp1;struct cistpl_cftable_entry_pwr_t pd_vpp2;};
struct cachefsio_symlink_return {cfs_fid_t sy_newfid;cfs_timestruc_t sy_ctime;cfs_timestruc_t sy_mtime;};
struct cachefsio_create_return {cfs_fid_t cr_newfid;cfs_timestruc_t cr_ctime;cfs_timestruc_t cr_mtime;};
struct gss_OID_set_desc_struct {size_t count;gss_OID elements;};
struct st_tape_alert_parameter {struct log_param log_param;uchar_t param_value;};
struct usb_interface_pwr_descr {uint8_t bLength;uint8_t bDescriptorType;uint8_t bmCapabilitiesFlags;uint8_t bBusPowerSavingD1;uint8_t bSelfPowerSavingD1;uint8_t bBusPowerSavingD2;uint8_t bSelfPowerSavingD2;uint8_t bBusPowerSavingD3;uint8_t bSelfPowerSavingD3;uint16_t TransitionTimeFromD1;uint16_t TransitionTimeFromD2;uint16_t TransitionTimeFromD3;};
union ELS_payload__els_cmd_u {struct ELS_payload__els_cmd_u___6093A708197FAE24BE48D5551ABE0EB0 c;uint_t i;};
struct cfs_dlog_mapping_space {cfs_cid_t ms_cid;off_t ms_fid;off_t ms_times;};
struct isdn_activation_status {isdn_interface_t type;enum isdn_activation_state activation;};
struct cistpl_longlink_mfc_t {uint32_t nfuncs;uint32_t nregs;struct cistpl_longlink_mfc_t___614D05123FB722C586C9743560705075 function[8];};
struct extension_name_struct {char *extension_name;ushort_t ext_version;ext_signature_t *signature_table;};
struct la_els_identify_reply {uint_t ls_code;uchar_t fcode[8192];};
struct lock_manager_pid_list {int lmpl_type;pid_t lmpl_pid;union lock_manager_pid_list___4DC38F0FE7A8191D13CDBC3374F7BD69 un;struct lock_manager_pid_list *lmpl_next;};
struct mhioc_preemptandabort {mhioc_resv_desc_t resvdesc;mhioc_resv_key_t victim_key;};
struct mib2_ipv6IfStatsEntry {DeviceIndex ipv6IfIndex;int ipv6Forwarding;int ipv6DefaultHopLimit;int ipv6IfStatsEntrySize;int ipv6AddrEntrySize;int ipv6RouteEntrySize;int ipv6NetToMediaEntrySize;int ipv6MemberEntrySize;Counter ipv6InReceives;Counter ipv6InHdrErrors;Counter ipv6InTooBigErrors;Counter ipv6InNoRoutes;Counter ipv6InAddrErrors;Counter ipv6InUnknownProtos;Counter ipv6InTruncatedPkts;Counter ipv6InDiscards;Counter ipv6InDelivers;Counter ipv6OutForwDatagrams;Counter ipv6OutRequests;Counter ipv6OutDiscards;Counter ipv6OutFragOKs;Counter ipv6OutFragFails;Counter ipv6OutFragCreates;Counter ipv6ReasmReqds;Counter ipv6ReasmOKs;Counter ipv6ReasmFails;Counter ipv6InMcastPkts;Counter ipv6OutMcastPkts;Counter ipv6OutNoRoutes;Counter ipv6ReasmDuplicates;Counter ipv6ReasmPartDups;Counter ipv6ForwProhibits;Counter udpInCksumErrs;Counter udpInOverflows;Counter rawipInOverflows;Counter ipv6InIPv4;Counter ipv6OutIPv4;Counter ipv6OutSwitchIPv4;};
typedef void *(*tnf_probe_test_func_t)(void *, tnf_probe_control_t *, tnf_probe_setup_t *);
struct _ldterm_cs_data_user {uchar_t version;uchar_t codeset_type;uchar_t csinfo_num;uchar_t pad;char locale_name[256];ldterm_eucpc_data_t eucpc_data[10];};
struct mhioc_resv_desc_list {uint32_t listsize;uint32_t listlen;mhioc_resv_desc_t *list;};
struct mib2_ipv6IfIcmpEntry {DeviceIndex ipv6IfIcmpIfIndex;int ipv6IfIcmpEntrySize;Counter32 ipv6IfIcmpInMsgs;Counter32 ipv6IfIcmpInErrors;Counter32 ipv6IfIcmpInDestUnreachs;Counter32 ipv6IfIcmpInAdminProhibs;Counter32 ipv6IfIcmpInTimeExcds;Counter32 ipv6IfIcmpInParmProblems;Counter32 ipv6IfIcmpInPktTooBigs;Counter32 ipv6IfIcmpInEchos;Counter32 ipv6IfIcmpInEchoReplies;Counter32 ipv6IfIcmpInRouterSolicits;Counter32 ipv6IfIcmpInRouterAdvertisements;Counter32 ipv6IfIcmpInNeighborSolicits;Counter32 ipv6IfIcmpInNeighborAdvertisements;Counter32 ipv6IfIcmpInRedirects;Counter32 ipv6IfIcmpInGroupMembQueries;Counter32 ipv6IfIcmpInGroupMembResponses;Counter32 ipv6IfIcmpInGroupMembReductions;Counter32 ipv6IfIcmpOutMsgs;Counter32 ipv6IfIcmpOutErrors;Counter32 ipv6IfIcmpOutDestUnreachs;Counter32 ipv6IfIcmpOutAdminProhibs;Counter32 ipv6IfIcmpOutTimeExcds;Counter32 ipv6IfIcmpOutParmProblems;Counter32 ipv6IfIcmpOutPktTooBigs;Counter32 ipv6IfIcmpOutEchos;Counter32 ipv6IfIcmpOutEchoReplies;Counter32 ipv6IfIcmpOutRouterSolicits;Counter32 ipv6IfIcmpOutRouterAdvertisements;Counter32 ipv6IfIcmpOutNeighborSolicits;Counter32 ipv6IfIcmpOutNeighborAdvertisements;Counter32 ipv6IfIcmpOutRedirects;Counter32 ipv6IfIcmpOutGroupMembQueries;Counter32 ipv6IfIcmpOutGroupMembResponses;Counter32 ipv6IfIcmpOutGroupMembReductions;Counter32 ipv6IfIcmpInOverflows;Counter32 ipv6IfIcmpBadHoplimit;Counter32 ipv6IfIcmpInBadNeighborAdvertisements;Counter32 ipv6IfIcmpInBadNeighborSolicitations;Counter32 ipv6IfIcmpInBadRedirects;Counter32 ipv6IfIcmpInGroupMembTotal;Counter32 ipv6IfIcmpInGroupMembBadQueries;Counter32 ipv6IfIcmpInGroupMembBadReports;Counter32 ipv6IfIcmpInGroupMembOurReports;};
struct nfslog_buffer_header {uint32_t bh_length;uint32_t bh_version;uint32_t bh_flags;uint32_t bh_offset;timestruc32_t bh_timestamp;};
struct nispasswd_authresult {nispasswd_status status;union nispasswd_authresult___B078DBBAB3D407E214C0776301111B02 nispasswd_authresult_u;};
struct usb_config_pwr_descr {uint8_t bLength;uint8_t bDescriptorType;uint16_t SelfPowerConsumedD0_l;uint8_t SelfPowerConsumedD0_h;uint8_t bPowerSummaryId;uint8_t bBusPowerSavingD1;uint8_t bSelfPowerSavingD1;uint8_t bBusPowerSavingD2;uint8_t bSelfPowerSavingD2;uint8_t bBusPowerSavingD3;uint8_t bSelfPowerSavingD3;uint16_t TransitionTimeFromD1;uint16_t TransitionTimeFromD2;uint16_t TransitionTimeFromD3;};
struct cachefs_log_control {int lc_magic;char lc_path[1024];uchar_t lc_which[3];uint64_t lc_cachep;};
struct cachefs_putpage_req {vnode_t *cp_vp;offset_t cp_off;int cp_len;int cp_flags;};
struct importCertificate_t {OCF_CERTREF_t destination;OCF_Any_t certificate;};
struct nfslog_READLINK3res {nfsstat3 status;union nfslog_READLINK3res___A46E749FDD895D51A9B1F38A8D4A8ED6 nfslog_READLINK3res_u;};
struct nis_active_endpoint {endpoint ep;nis_name hostname;int rank;int uaddr_generation;nis_name uaddr;int cbep_generation;endpoint cbep;};
struct tnf_struct_type_hdr {tnf_ref32_t tag;tnf_ref32_t name;tnf_ref32_t properties;tnf_ref32_t slot_types;tnf_uint32_t type_size;};
typedef uint32_t OCF_EventHandler_t(OCF_Event_t, OCF_EventData_t);
struct cachefs_log_cookie {void *cl_head;void *cl_tail;uint_t cl_size;struct vnode *cl_logvp;cachefs_log_control_t *cl_logctl;int cl_magic;};
struct cis_u_malloc_tag_t {caddr_t addr;uint32_t len;};
struct lookup_result_type {autofs_action action;union lookup_result_type___140B16D067C68AF228EDC44C385D8FF8 lookup_result_type_u;};
struct mode_err_recov_ccs {struct mode_page mode_page;unsigned char awre : 1;unsigned char arre : 1;unsigned char tb : 1;unsigned char rc : 1;unsigned char eec : 1;unsigned char per : 1;unsigned char dte : 1;unsigned char dcr : 1;uchar_t retry_count;uchar_t correction_span;uchar_t head_offset_count;uchar_t strobe_offset_count;uchar_t recovery_time_limit;};
struct nfs3_pathconf_info {uint32 link_max;uint32 name_max;bool_t no_trunc;bool_t chown_restricted;bool_t case_insensitive;bool_t case_preserving;};
struct nfslog_sharefsargs {int sh_flags;uint32_t sh_anon;char *sh_path;fhandle sh_fh_buf;};
struct nfslog_writeresult {nfsstat wr_status;union nfslog_writeresult___2A0DD4582CCBEFAEB0E3EA5381B6CC76 nfslog_writeresult_u;};
struct scsi_format_params {ushort_t reserved;ushort_t length;struct scsi_bfi_defect list[127];};
struct tnf_array_type_hdr {tnf_ref32_t tag;tnf_ref32_t name;tnf_ref32_t properties;tnf_ref32_t slot_types;tnf_uint32_t header_size;};
struct usb_endpoint_descr {uint8_t bLength;uint8_t bDescriptorType;uint8_t bEndpointAddress;uint8_t bmAttributes;uint16_t wMaxPacketSize;uint8_t bInterval;};
struct vt_clock_frequency {vt_trace_t head;ulong_t freq;};
struct Pf_ext_packetfilt {uchar_t Pf_Priority;unsigned int Pf_FilterLen;ushort_t Pf_Filter[2047];};
struct action_list_entry {autofs_action action;union action_list_entry___C44F4EEF0FC4FD7005019F0CD0D984D6 action_list_entry_u;};
struct anch_vol_desc_ptr {tag_t avd_tag;extent_ad_t avd_main_vdse;extent_ad_t avd_res_vdse;char avd_res[480];};
struct cachefs_mountargs {struct cachefsoptions cfs_options;char *cfs_fsid;char cfs_cacheid[128];char *cfs_cachedir;char *cfs_backfs;uint_t cfs_acregmin;uint_t cfs_acregmax;uint_t cfs_acdirmin;uint_t cfs_acdirmax;char *cfs_hostname;char *cfs_backfsname;};
struct mount_result_type {autofs_stat status;union mount_result_type___BD08F148FCCB07EC8727A8AEAEF243F6 mount_result_type_u;};
struct r_rpcb_rmtcallres {char *addr;struct r_rpcb_rmtcallres___C5922F02EDBA7A11822BD586DD2777D6 results;xdrproc_t xdr_res;};
struct scsi_reassign_blk {ushort_t reserved;ushort_t length;uint_t defect;};
struct vt_raw_kthread_id {vt_trace_t head;ulong_t tid;};
struct vt_raw_uthread_id {vt_trace_t head;ulong_t pid;ulong_t lwpid;ulong_t tid;};
struct ar_entry_query_s {uint32_t areq_cmd;uint32_t areq_name_offset;uint32_t areq_name_length;uint32_t areq_proto;uint32_t areq_target_addr_offset;uint32_t areq_target_addr_length;uint32_t areq_flags;uint32_t areq_sender_addr_offset;uint32_t areq_sender_addr_length;uint32_t areq_xmit_count;uint32_t areq_xmit_interval;uint32_t areq_max_buffered;uchar_t areq_sap[8];};
struct attrcache_header {uint_t ach_count;int ach_nffs;int ach_nblks;uint_t ach_rlno;enum cachefs_rl_type ach_rl_current;};
struct authdes_fullname {char *name;des_block key;uint32_t window;};
struct autofs_lookupres {enum autofs_res lu_res;lookup_result_type lu_type;int lu_verbose;};
struct cistpl_callout_t {cisdata_t type;cisdata_t subtype;uint32_t flags;uint32_t (*handler)();char *text;};
struct fcp_scsi_bus_err {uchar_t rsp_info_type;uchar_t resv;ushort_t isp_status;ushort_t isp_state_flags;ushort_t isp_stat_flags;};
struct i_ddi_soft_state {void **array;kmutex_t lock;size_t size;size_t n_items;struct i_ddi_soft_state *next;};
struct la_els_rls_reply {uchar_t ls_code;uchar_t mbz[3];uint_t link_failure;uint_t loss_of_sync;uint_t loss_of_signal;uint_t primitive;uint_t invalid_transmission;uint_t invalid_crc;};
struct log_vol_hdr_desc {uint64_t lvhd_uniqid;uint8_t lvhd_pad[24];};
struct nd_router_advert {icmp6_t nd_ra_hdr;uint32_t nd_ra_reachable;uint32_t nd_ra_retransmit;};
struct nfslog_rddirargs {fhandle rda_fh;uint32_t rda_offset;uint32_t rda_count;};
struct nfslog_writeargs {fhandle waargs_fhandle;uint32_t waargs_begoff;uint32_t waargs_offset;uint32_t waargs_totcount;uint32_t waargs_count;};
struct nss_innetgr_1arg {nss_innetgr_argc argc;nss_innetgr_argv argv;};
struct nss_innetgr_args {struct nss_innetgr_1arg arg[3];struct nss_innetgr_1arg groups;enum nss_netgr_status status;};
struct otw_nfswriteargs {fhandle_t otw_wa_fhandle;uint32_t otw_wa_begoff;uint32_t otw_wa_offset;uint32_t otw_wa_totcount;};
struct sockaddr_storage {sa_family_t ss_family;char _ss_pad1[6];sockaddr_maxalign_t _ss_align;char _ss_pad2[240];};
struct usb_config_descr {uint8_t bLength;uint8_t bDescriptorType;uint16_t wTotalLength;uint8_t bNumInterfaces;uint8_t bConfigurationValue;uint8_t iConfiguration;uint8_t bmAttributes;uint8_t MaxPower;};
struct usb_device_descr {uint8_t bLength;uint8_t bDescriptorType;uint16_t bcdUSB;uint8_t bDeviceClass;uint8_t bDeviceSubClass;uint8_t bDeviceProtocol;uint8_t bMaxPacketSize0;uint16_t idVendor;uint16_t idProduct;uint16_t bcdDevice;uint8_t iManufacturer;uint8_t iProduct;uint8_t iSerialNumber;uint8_t bNumConfigurations;};
struct usoc_add_buffers {uint32_t pool_id;uint32_t pool_buf_count;uint64_t *pool_tokens;};
struct usoc_delete_pool {uint32_t pool_buf_count;uint32_t pool_fc4type;uint64_t *pool_tokens;};
struct vt_kthread_label {vt_trace_t head;ulong_t pid;ulong_t lwpid;ulong_t tid;ulong_t startpc;};
struct vt_uthread_label {vt_trace_t head;ulong_t pid;ulong_t lwpid;ulong_t tid;ulong_t startpc;};
struct _ldterm_cs_data {uchar_t version;uchar_t codeset_type;uchar_t csinfo_num;uchar_t pad;char *locale_name;ldterm_eucpc_data_t eucpc_data[10];};
struct cfs_dlog_mapfid {cfs_cid_t dl_cid;cfs_fid_t dl_fid;};
struct cistpl_config_t {uint32_t present;uint32_t nr;uint32_t hr;uint32_t regs[128];uint32_t base;uint32_t last;};
struct cistpl_device_t {uint32_t num_devices;cistpl_device_node_t devnode[10];};
struct cistpl_format_t {uint32_t type;uint32_t edc_length;uint32_t edc_type;uint32_t offset;uint32_t nbytes;union cistpl_format_t___C19B3D9FAD0E15A257B4195B94EC6F1C dev;};
union dbri_dts_opcode {struct dbri_dts_opcode___E7979599CA1B17574DB8BEEF940714B1 r;uint32_t word32;};
struct isdn_format_req {isdn_chan_t channel;isdn_format_t format;int reserved[4];};
struct nispasswd_error {nispasswd_field npd_field;nispasswd_code npd_code;struct nispasswd_error *next;};
struct nss_groupsbymem { char *username;gid_t *gid_array;int maxgids;int force_slow_way;int (*str2ent)( char *instr, int instr_len, void *ent, char *buffer, int buflen);nss_status_t (*process_cstr)( char *instr, int instr_len, struct nss_groupsbymem *);int numgids;};
struct scsi_defect_hdr {uchar_t reserved;uchar_t descriptor;ushort_t length;};
struct tnf_file_header {tnf_ref32_t tag;tnf_uint32_t file_version;tnf_uint32_t file_header_size;tnf_uint32_t file_log_size;tnf_uint32_t block_header_size;tnf_uint32_t block_size;tnf_uint32_t directory_size;tnf_uint32_t block_count;tnf_uint32_t blocks_valid;};
struct tnf_probe_setup {tnf_ops_t *tpd_p;void *buffer_p;tnf_probe_control_t *probe_p;};
struct vt_elapsed_time {vt_trace_t head;ulong_t time;};
struct vt_process_fork {vt_trace_t head;ulong_t cpid;ulong_t ppid;};
struct vt_process_name {vt_trace_t head;ulong_t pid;ulong_t name;};
struct alloc_ext_desc {tag_t aed_tag;uint32_t aed_rev_ael;uint32_t aed_len_aed;};
struct appendRecord_t {OCF_File_t file;OCF_Any_t data;};
struct au_evclass_map {au_event_t ec_number;au_class_t ec_class;};
struct au_trailer_tok {ushort_t magic;uint_t length;};
struct bp_getfile_arg {bp_machine_name_t client_name;bp_fileid_t file_id;};
struct cachefs_fsinfo {uint_t fi_mntflags;int fi_popsize;ino64_t fi_root;uint_t fi_resettimes;uint_t fi_resetfileno;ino64_t fi_localfileno;int fi_fgsize;uint_t fi_pad[1];};
struct cfs_dlog_rmdir {cfs_cid_t dl_parent_cid;cred_t dl_cred;char dl_buffer[316];};
struct cistpl_jedec_t {uint32_t nid;jedec_ident_t jid[4];};
struct di_priv_format {char drv_name[1024];size_t bytes;struct di_priv_format___DA5D4B001E276F918FB366B836D0F6B4 ptr[5];};
struct existsRecord_t {OCF_File_t file;OCF_Boolean_t status;};
struct hid_req_struct {uint16_t hid_req_version_no;uint16_t hid_req_wValue;uint16_t hid_req_wLength;mblk_t *hid_req_data;};
struct lif_ifinfo_req {uint8_t lir_maxhops;uint32_t lir_reachtime;uint32_t lir_reachretrans;uint32_t lir_maxmtu;};
struct mdb_walk_state {mdb_walk_cb_t walk_callback;void *walk_cbdata;uintptr_t walk_addr;void *walk_data;void *walk_arg; void *walk_layer;};
struct mhioc_key_list {uint32_t listsize;uint32_t listlen;mhioc_resv_key_t *list;};
struct mhioc_register {mhioc_resv_key_t oldkey;mhioc_resv_key_t newkey;boolean_t aptpl;};
struct mode_cache_ccs {struct mode_page mode_page;uchar_t mode;uchar_t threshold;uchar_t max_prefetch;uchar_t max_multiplier;uchar_t min_prefetch;uchar_t min_multiplier;uchar_t rsvd2[8];};
struct modeheader_seq {uchar_t datalen;uchar_t mediumtype;unsigned char wp : 1;unsigned char bufm : 3;unsigned char speed : 4;uchar_t bd_len;struct block_descriptor blk_desc;};
struct nfslog_rdlnres {nfsstat rl_status;union nfslog_rdlnres___76B6C630296FCDD7ACE84EB6A7558908 nfslog_rdlnres_u;};
struct rejected_reply {enum reject_stat rj_stat;union rejected_reply___2B53589865B36E9C26DCD66F40988BA8 ru;};
typedef res_sendhookact (*res_send_qhook)(struct sockaddr_in * *ns,  uchar_t **query, int *querylen, uchar_t *ans, int anssiz, int *resplen);
typedef res_sendhookact (*res_send_rhook)( struct sockaddr_in *ns,  uchar_t *query, int querylen, uchar_t *ans, int anssiz, int *resplen);
struct rpcbs_addrlist {rpcprog_t prog;rpcvers_t vers;int success;int failure;char *netid;struct rpcbs_addrlist *next;};
struct sadb_supported {uint16_t sadb_supported_len;uint16_t sadb_supported_exttype;uint32_t sadb_supported_reserved;};
struct usoc_rcv_frame {uint32_t rcv_type;uint32_t rcv_size;caddr_t rcv_buf;};
struct usocio_lilpmap {ushort_t lilp_magic;ushort_t lilp_myalpa;uchar_t lilp_length;uchar_t lilp_list[127];};
struct FC2_FRAME_HDR {unsigned int r_ctl : 8;unsigned int d_id : 24;unsigned int reserved1 : 8;unsigned int s_id : 24;unsigned int type : 8;unsigned int f_ctl : 24;unsigned int seq_id : 8;unsigned int df_ctl : 8;unsigned int seq_cnt : 16;ushort_t ox_id;ushort_t rx_id;uint_t ro;};
struct _pthread_cond {struct _pthread_cond___47F9AA781B8B3BD4B4EFEED0C176A991 __pthread_cond_flags;upad64_t __pthread_cond_data;};
struct adisc_payload {uint_t adisc_magic;uint_t adisc_hardaddr;uchar_t adisc_portwwn[8];uchar_t adisc_nodewwn[8];uint_t adisc_dest;};
struct au_file32_tok {int32_t sec;int32_t usec;ushort_t length;char *fname;};
struct au_file64_tok {int64_t sec;int64_t usec;ushort_t length;char *fname;};
struct bp_whoami_res {bp_machine_name_t client_name;bp_machine_name_t domain_name;bp_address router_address;};
struct cachefs_stats {uint_t st_hits;uint_t st_misses;uint_t st_passes;uint_t st_fails;uint_t st_modifies;uint_t st_gc_count;cfs_time_t st_gc_time;cfs_time_t st_gc_before_atime;cfs_time_t st_gc_after_atime;};
struct cistpl_spcl_t {uint32_t id;uint32_t seq;uint32_t bytes;uchar_t data[254];};
struct dacf_rsrvlist {dacf_rule_t *rsrv_rule;dacf_infohdl_t rsrv_ihdl;int rsrv_result;struct dacf_rsrvlist *rsrv_next;};
struct dadkio_status {int status;ulong_t resid;int failed_blk_is_valid;daddr_t failed_blk;int fru_code_is_valid;int fru_code;char add_error_info[128];};
struct keyboardstate {int k_id;uchar_t k_idstate;uchar_t k_state;uchar_t k_rptkey;uint_t k_buckybits;uint_t k_shiftmask;struct keyboard *k_curkeyboard;uint_t k_togglemask;};
struct mhioc_inresvs {uint32_t generation;mhioc_resv_desc_list_t *li;};
struct nss_db_params { char *name; char *config_name; char *default_config;unsigned int max_active_per_src;unsigned int max_dormant_per_src;enum nss_dbp_flags flags;nss_backend_finder_t *finders;void *c_private;void (*cleanup)(struct nss_db_params *);};
struct readRecords_t {OCF_File_t filename;int32_t numberOfRecords;OCF_Any_t *dataRead;};
struct sadb_spirange {uint16_t sadb_spirange_len;uint16_t sadb_spirange_exttype;uint32_t sadb_spirange_min;uint32_t sadb_spirange_max;uint32_t sadb_spirange_reserved;};
struct smdevice_info {uchar_t sm_version;int32_t sm_interface_type;char *sm_vendor_name;char *sm_product_name;char *sm_firmware_version;};
struct st_tape_alert {struct log_page log_page;struct st_tape_alert_parameter param[64];};
struct td_synchandle {td_thragent_t *sh_ta_p;psaddr_t sh_unique;};
struct tnf_array_hdr {tnf_ref32_t tag;tnf_uint32_t self_size;};
struct usb_hid_descr {uchar_t bLength;uchar_t bDescriptorType;ushort_t bcdHID;uchar_t bCountryCode;uchar_t bNumDescriptors;uchar_t bReportDescriptorType;ushort_t wReportDescriptorLength;};
struct usb_hub_descr {uchar_t bDescLength;uchar_t bDescriptorType;uchar_t bNbrPorts;uint16_t wHubCharacteristics;uchar_t bPwrOn2PwrGood;uchar_t bHubContrCurrent;uchar_t DeviceRemovable;uchar_t PortPwrCtrlMask;};
struct vt_kthread_id {vt_trace_t head;ulong_t pid;ulong_t lwpid;ulong_t tid;ulong_t vid;ulong_t name;};
struct vt_start_time {vt_trace_t head;struct vt_start_time___AB8ADE090A0B9DD48F0CA973837EF690 time;};
struct vt_total_time {vt_trace_t head;struct vt_total_time___AB8ADE090A0B9DD48F0CA973837EF690 time;};
struct vt_uthread_id {vt_trace_t head;ulong_t pid;ulong_t lwpid;ulong_t tid;ulong_t vid;ulong_t name;};
struct LOGI_PAYLOAD {uint_t code;uchar_t common_service_params[16];uchar_t port_name[8];uchar_t node_name[8];uchar_t class1_service_params[16];uchar_t class2_service_params[16];uchar_t class3_service_params[16];};
typedef void SLPRegReport(SLPHandle hSLP, SLPError errCode, void *pvCookie);
struct _sleepq_head {sleepq_t sq_queue;disp_lock_t sq_lock;};
struct _xti_optmgmt {struct netbuf opt;t_scalar_t flags;};
struct au_event_ent {au_event_t ae_number;char *ae_name;char *ae_desc;au_class_t ae_class;};
struct au_ret32_tok {uchar_t error;uint32_t retval;};
struct au_ret64_tok {uchar_t error;uint64_t retval;};
struct cyc_tracerec {hrtime_t cyt_tstamp;char *cyt_why;uint64_t cyt_arg0;uint64_t cyt_arg1;};
struct dev_spec_ear {uint32_t ds_atype;uint8_t ds_astype;uint8_t ds_res[3];uint32_t ds_attr_len;uint32_t ds_iu_len;uint32_t ds_major_id;uint32_t ds_minor_id;uint8_t ds_iu[4];};
struct ether_header {struct ether_addr ether_dhost;struct ether_addr ether_shost;ushort_t ether_type;};
struct ext_attr_hdr {tag_t eah_tag;uint32_t eah_ial;uint32_t eah_aal;};
struct fcp_prli_acc {uchar_t type;uchar_t resvd1;unsigned int orig_process_assoc_valid : 1;unsigned int resp_process_assoc_valid : 1;unsigned int image_pair_establsihed : 1;unsigned int resvd2 : 1;unsigned int accept_response_code : 4;unsigned int resvd3 : 8;uint_t orig_process_associator;uint_t resp_process_associator;unsigned int resvd4 : 26;unsigned int initiator_fn : 1;unsigned int target_fn : 1;unsigned int cmd_data_mixed : 1;unsigned int data_resp_mixed : 1;unsigned int read_xfer_rdy_disabled : 1;unsigned int write_xfer_rdy_disabled : 1;};
struct isdn_message {unsigned int magic;isdn_interface_t type;isdn_message_type_t message;unsigned int vendor[5];};
struct la_els_adisc {uchar_t ls_code;uchar_t mbz[3];uint_t hard_address;uchar_t port_wwn[8];uchar_t node_wwn[8];uint_t nport_id;};
struct lm_blockinfo {vnode_t *vp;int blocked;struct lm_sysid *ls;struct lm_nlm_disp *disp;struct lm_block *lmbp;union lm_blockinfo___EAAFFCB58334A5EE6261E6C340DE312B unr;struct lm_xprt *xprt;};
typedef int log_filter_t(log_t *, log_ctl_t *);
struct mhioc_inkeys {uint32_t generation;mhioc_key_list_t *li;};
struct mode_caching {struct mode_page mode_page;unsigned char : 5;unsigned char wce : 1;unsigned char mf : 1;unsigned char rcd : 1;unsigned char dmd_rd_ret_prio : 4;unsigned char write_ret_prio : 4;unsigned short pf_dsbl_trans_len;ushort_t min_prefetch;ushort_t max_prefetch;ushort_t max_prefetch_ceiling;};
struct mode_control {struct mode_page mode_page;unsigned char : 7;unsigned char rlec : 1;unsigned char que_mod : 4;unsigned char : 2;unsigned char que_err : 1;unsigned char qdisable : 1;unsigned char eeca : 1;unsigned char : 4;unsigned char raenp : 1;unsigned char uaaenp : 1;unsigned char eanp : 1;unsigned char reserved;ushort_t ready_aen_holdoff;};
struct nfslog_sattr {uint32_t sa_mode;uint32_t sa_uid;uint32_t sa_gid;uint32_t sa_size;nfs2_timeval sa_atime;nfs2_timeval sa_mtime;};
struct nfsrddirargs {fhandle_t rda_fh;uint32_t rda_offset;uint32_t rda_count;};
struct nlm_shareres {netobj cookie;nlm_stats stat;int sequence;};
typedef bool_t (*resultproc_t)(caddr_t, ...);
struct sadb_address {uint16_t sadb_address_len;uint16_t sadb_address_exttype;uint8_t sadb_address_proto;uint8_t sadb_address_prefixlen;uint16_t sadb_address_reserved;};
struct scsi_address {struct scsi_hba_tran *a_hba_tran;ushort_t a_target;uchar_t a_lun;uchar_t a_sublun;};
struct sioc_lsg_req {struct sockaddr_storage slr_src;struct sockaddr_storage slr_grp;uint_t slr_pktcnt;uint_t slr_bytecnt;uint_t slr_wrong_if;uint_t slr_pad;};
struct sioc_vif_req {vifi_t vifi;uint_t icount;uint_t ocount;uint_t ibytes;uint_t obytes;};
struct td_thrhandle {td_thragent_t *th_ta_p;psaddr_t th_unique;};
struct watched_area {struct watched_area *wa_forw;struct watched_area *wa_back;caddr_t wa_vaddr;caddr_t wa_eaddr;ulong_t wa_flags;};
struct xdr_bytesrec {bool_t xc_is_last_record;size_t xc_num_avail;};
struct ACCESS2args {fhandle_t fh;uint32 access;};
struct ELS_payload {union ELS_payload__els_cmd_u els_cmd;uchar_t els_data[56];};
struct GETACL2args {fhandle_t fh;uint32 mask;};
struct SETACL2args {fhandle_t fh;vsecattr_t acl;};
struct au_tid_addr {dev_t at_port;uint_t at_type;uint_t at_addr[4];};
struct autofsrddir {u_int rddir_offset;u_int rddir_size;bool_t rddir_eof;struct dirent64 *rddir_entries;};
struct cache_usage {int cu_blksused;int cu_filesused;uint_t cu_flags;ushort_t cu_unique;};
struct cyc_handler {cyc_func_t cyh_func;void *cyh_arg;cyc_level_t cyh_level;};
struct dacf_module {char *dm_name;krwlock_t dm_lock;int dm_loaded;dacf_opset_t *dm_opsets;};
struct dk_gmpstate {enum dk_mpstate dkg_mpstate;uint_t dkg_fail_state;uint_t dkg_current_status;int dkg_pad[4];};
struct fmodsw_impl {char f_name[9];struct streamtab *f_str;int f_flag;kmutex_t *f_lock;uint_t f_count;};
struct la_els_logo {uchar_t ls_code;uchar_t mbz[3];uchar_t reserved;uchar_t nport_id[3];la_wwn_t nport_ww_name;};
struct la_els_prli {uchar_t ls_code;uchar_t page_length;ushort_t payload_length;uchar_t service_params[16];};
struct nfslinkargs {fhandle_t *la_from;fhandle_t la_from_buf;struct nfsdiropargs la_to;};
struct nfslog_rdok {uint32_t rdok_offset;uint32_t rdok_size;bool_t rdok_eof;};
struct nfsreadargs {fhandle_t ra_fhandle;uint32_t ra_offset;uint32_t ra_count;uint32_t ra_totcount;};
struct notsack_blk {struct notsack_blk *next;tcp_seq begin;tcp_seq end;uint32_t sack_cnt;};
struct npd_newpass {u_int npd_xrandval;passbuf pass;};
struct rd_plt_info {rd_skip_e pi_skip_method;int pi_nstep;psaddr_t pi_target;};
struct rddir_cache {lloff_t _cookie;lloff_t _ncookie;char *entries;int eof;int entlen;int buflen;int flags;kcondvar_t cv;int error;struct rddir_cache *next;};
struct socal_stats {uint_t version;uint_t resets;uint_t reqq_intrs;uint_t qfulls;struct fc_pstats pstats[2];char drvr_name[256];char fw_revision[256];char node_wwn[17];char port_wwn[2][17];uint_t parity_chk_enabled;};
struct sockaddr_dl {ushort_t sdl_family;ushort_t sdl_index;uchar_t sdl_type;uchar_t sdl_nlen;uchar_t sdl_alen;uchar_t sdl_slen;char sdl_data[244];};
struct strfdinsert {struct strbuf ctlbuf;struct strbuf databuf;t_uscalar_t flags;int fildes;int offset;};
struct t_kunitdata {struct netbuf addr;struct netbuf opt;struct knetbuf udata;};
struct umntrequest {bool_t isdirect;dev32_t devid;dev32_t rdevid;struct umntrequest *next;};
struct usoc_pstats {uint_t port;uint_t requests;uint_t sol_resps;uint_t unsol_resps;uint_t lips;uint_t els_sent;uint_t els_rcvd;uint_t abts;uint_t abts_ok;uint_t offlines;uint_t onlines;uint_t online_loops;uint_t status[64];};
struct vioc_symdev {caddr_t sd_symname;caddr_t sd_symdevname;size_t sd_pathlen;size_t sd_symnamelen;};
struct vt_abs_time {vt_trace_t head;struct vt_abs_time___AB8ADE090A0B9DD48F0CA973837EF690 time;};
struct vt_num_cpus {vt_trace_t head;ulong_t num_cpus;};
struct vt_pagesize {vt_trace_t head;ulong_t pagesize;};
struct FREE_SPACE {uint16_t fs_cksum;uint8_t fs_freesp[2];};
struct T_bind_ack {t_scalar_t PRIM_type;t_scalar_t ADDR_length;t_scalar_t ADDR_offset;t_uscalar_t CONIND_number;};
struct T_bind_req {t_scalar_t PRIM_type;t_scalar_t ADDR_length;t_scalar_t ADDR_offset;t_uscalar_t CONIND_number;};
struct T_conn_res {t_scalar_t PRIM_type;t_uscalar_t ACCEPTOR_id;t_scalar_t OPT_length;t_scalar_t OPT_offset;t_scalar_t SEQ_number;};
struct _LC_time_t {_LC_core_time_t core; char *d_fmt; char *t_fmt; char *d_t_fmt; char *t_fmt_ampm; char *abday[7]; char *day[7]; char *abmon[12]; char *mon[12]; char *am_pm[2]; char **era; char *era_d_fmt; char *alt_digits; char *era_d_t_fmt; char *era_t_fmt; char *date_fmt;};
struct _cpc_event {int ce_cpuver;hrtime_t ce_hrt;uint64_t ce_tick;uint64_t ce_pic[2];uint64_t ce_pcr;};
struct classfuncs {class_ops_t sclass;thread_ops_t thread;};
struct fcp_status {ushort_t reserved_0;unsigned char reserved_1 : 4;unsigned char resid_under : 1;unsigned char resid_over : 1;unsigned char sense_len_set : 1;unsigned char rsp_len_set : 1;uchar_t scsi_status;};
struct ftimes_ear {uint32_t ft_atype;uint8_t ft_astype;uint8_t ft_res[3];uint32_t ft_attr_len;uint32_t ft_data_len;uint32_t ft_exist;uint8_t ft_ft[4];};
struct ifa_msghdr {ushort_t ifam_msglen;uchar_t ifam_version;uchar_t ifam_type;int ifam_addrs;int ifam_flags;ushort_t ifam_index;int ifam_metric;};
struct kiockeymap {int kio_tablemask;uchar_t kio_station;ushort_t kio_entry;char kio_string[10];};
struct knetconfig {unsigned int knc_semantics;caddr_t knc_protofmly;caddr_t knc_proto;dev_t knc_rdev;unsigned int knc_unused[8];};
struct la_els_rrq {uchar_t ls_code;uchar_t mbz[3];uchar_t reserved;uchar_t source_id[3];ushort_t ox_id;ushort_t rx_id;uchar_t assoc_header[32];};
struct lif_nd_req {struct sockaddr_storage lnr_addr;uint8_t lnr_state_create;uint8_t lnr_state_same_lla;uint8_t lnr_state_diff_lla;int lnr_hdw_len;int lnr_flags;int lnr_pad0;char lnr_hdw_addr[64];};
struct mode_cache {struct mode_page mode_page;unsigned char : 5;unsigned char wce : 1;unsigned char mf : 1;unsigned char rcd : 1;unsigned char read_reten_pri : 4;unsigned char write_reten_pri : 4;unsigned short dis_prefetch_len;ushort_t min_prefetch;ushort_t max_prefetch;ushort_t prefetch_ceiling;};
struct mode_speed {struct mode_page mode_page;uchar_t speed;uchar_t reserved;};
struct ns_request {nis_name ns_name;struct ns_request___C16B7AFEC0429C3BD747A37F4D827FFD ns_object;};
struct openpromio {uint_t oprom_size;union openpromio___323EE700B5499288BFC86B907B5BFC31 opio_u;};
struct packetfilt {uchar_t Pf_Priority;uchar_t Pf_FilterLen;ushort_t Pf_Filter[255];};
struct panic_data {uint32_t pd_version;uint32_t pd_msgoff;panic_nv_t pd_nvdata[1];};
struct pcmcia_mif {struct pcmcia_mif *mif_next;void (*mif_function)();uint32_t mif_id;uchar_t mif_events[4];};
struct rd_loadobj {psaddr_t rl_nameaddr;unsigned int rl_flags;psaddr_t rl_base;psaddr_t rl_data_base;Lmid_t rl_lmident;psaddr_t rl_refnameaddr;psaddr_t rl_plt_base;unsigned int rl_plt_size;psaddr_t rl_bend;psaddr_t rl_padstart;psaddr_t rl_padend;};
struct rmtcallres {rpcport_t port;struct rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9 res;};
struct sadb_ident {uint16_t sadb_ident_len;uint16_t sadb_ident_exttype;uint16_t sadb_ident_type;uint16_t sadb_ident_reserved;uint64_t sadb_ident_id;};
struct scsi_sense {unsigned char ns_valid : 1;unsigned char ns_class : 3;unsigned char ns_code : 4;unsigned char ns_vu : 3;unsigned char ns_lba_hi : 5;uchar_t ns_lba_mid;uchar_t ns_lba_lo;};
struct smwp_state {uchar_t sm_version;int32_t sm_new_state;int32_t sm_passwd_len;char sm_passwd[32];};
struct spraycumul {u_int counter;spraytimeval clock;};
struct term_entry {tag_t te_tag;icb_tag_t te_icb_tag;};
struct tie_device {ushort_t tie_csr;uchar_t tie_unused[15];uchar_t tie_ivec;};
struct timespec32 {time32_t tv_sec;int32_t tv_nsec;};
struct ufs_ic_acl {struct ufs_ic_acl *acl_ic_next;o_mode_t acl_ic_perm;uid_t acl_ic_who;};
struct unreg1args {u_int family;char *name;netobj address;};
struct usoc_stats {uint_t version;char drvr_name[256];char fw_revision[256];char node_wwn[17];char port_wwn[2][17];uint_t parity_chk_enabled;uint_t resets;uint_t reqq_intrs;uint_t qfulls;struct usoc_pstats pstats[2];};
struct vioc_eject {minor_t viej_unit;enum eject_state viej_state;};
struct vioc_flags {minor_t vfl_unit;uint_t vfl_flags;};
struct vioc_gattr {caddr_t ga_attr;caddr_t ga_value;size_t ga_val_len;size_t ga_attr_len;};
struct vioc_sattr {caddr_t sa_attr;caddr_t sa_value;size_t sa_attr_len;size_t sa_value_len;};
struct vis_cursor {short set;short enable;struct vis_cursorpos pos;struct vis_cursorpos hot;struct vis_cursorcmap cmap;struct vis_cursorpos size;char *image;char *mask;};
struct vt_data_16 {vt_trace_t head;ulong_t data[15];};
struct vt_data_32 {vt_trace_t head;ulong_t data[31];};
struct vt_data_64 {vt_trace_t head;ulong_t data[63];};
struct vt_generic {vt_trace_t head;ulong_t data[63];};
struct vt_version {vt_trace_t head;ulong_t v_major;ulong_t v_minor;ulong_t v_micro;ulong_t v_name;};
struct _lwp_cond {struct _lwp_cond___lwp_cond_flags flags;upad64_t data;};
struct au_termid {dev_t at_port;uint_t at_type;uint_t at_addr[4];};
struct cp_result {nis_error cp_status;uint32_t cp_zticks;uint32_t cp_dticks;};
struct dbri_intq {caddr32_t nextq;dbri_intrq_ent_t intr[63];};
struct ddi_minor {char *name;dev_t dev;int spec_type;char *node_type;minor_t iminor;minor_t eminor;unsigned int mdclass;};
struct door_desc {door_attr_t d_attributes;union door_desc___25857EF0BB56C9434AE30E0D4D8F6E3F d_data;};
struct entry_col {uint_t ec_flags;struct entry_col___E942B815045DEE9FABC14DA0AE6314FC ec_value;};
struct ether_hdr {uchar_t dl_nodeaddr[6];ushort_t dl_type;};
struct fdb_holes {struct fdb_holes *next_hole;u_offset_t off;size_t len;};
struct group_obj {uint_t gr_flags;struct group_obj___6B1AF3D1F6DE7092D80225088D6E3A34 gr_members;};
struct ifp_stats {int version;int lip_count;int ncmds;ifp_target_stats_t tstats[127];char drvr_name[256];char fw_revision[256];char node_wwn[17];char port_wwn[17];uint_t parity_chk_enabled;uint_t resp_status[256];};
struct ipsec_req {uint_t ipsr_ah_req;uint_t ipsr_esp_req;uint_t ipsr_self_encap_req;uint8_t ipsr_auth_alg;uint8_t ipsr_esp_alg;uint8_t ipsr_esp_auth_alg;};
struct kstat_ctl {kid_t kc_chain_id;kstat_t *kc_chain;int kc_kd;};
struct la_ba_acc {unsigned char seq_id : 8;uchar_t org_s_id[3];ushort_t ox_id;ushort_t rx_id;};
struct lufs_save {buf_t *sv_bp;size_t sv_nb_left;int sv_error;};
struct partition {ushort_t p_tag;ushort_t p_flag;daddr_t p_start;int p_size;};
struct path_comp {uint8_t pc_type;uint8_t pc_len;uint16_t pc_ver;uint8_t pc_id[4];};
struct pc_dirent {ino64_t d_ino;off64_t d_off;unsigned short d_reclen;char d_name[256];};
struct pcdir_lfn {uchar_t pcdl_ordinal;uchar_t pcdl_firstfilename[10];uchar_t pcdl_attr;uchar_t pcdl_type;uchar_t pcdl_checksum;uchar_t pcdl_secondfilename[12];pc_cluster16_t pcd_scluster;uchar_t pcdl_thirdfilename[4];};
struct ping_args {nis_name dir;uint32_t stamp;};
struct pmap_typ1 {uint8_t map1_type;uint8_t map1_length;uint16_t map1_vsn;uint16_t map1_pn;};
struct rd_notify {rd_notify_e type;union rd_notify___143F0EF771439D241AFD6E8AB1506B64 u;};
struct sadb_prop {uint16_t sadb_prop_len;uint16_t sadb_prop_exttype;uint8_t sadb_prop_replay;uint8_t sadb_prop_reserved[3];};
struct set_mode3 {bool_t set_it;mode3 mode;};
struct set_size3 {bool_t set_it;size3 size;};
struct sigaction {int sa_flags;union sigaction___3EF29538CA63FA48B196EFE7F55176B1 _funcptr;sigset_t sa_mask;int sa_resv[2];};
struct statstime {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_oerrors;int if_collisions;u_int v_swtch;int avenrun[3];rstat_timeval boottime;rstat_timeval curtime;int if_opackets;};
struct statvfs64 {unsigned int f_bsize;unsigned int f_frsize;fsblkcnt64_t f_blocks;fsblkcnt64_t f_bfree;fsblkcnt64_t f_bavail;fsfilcnt64_t f_files;fsfilcnt64_t f_ffree;fsfilcnt64_t f_favail;unsigned int f_fsid;char f_basetype[16];unsigned int f_flag;unsigned int f_namemax;char f_fstr[32];unsigned int f_filler[16];};
struct strrecvfd {int fd;uid_t uid;gid_t gid;char fill[8];};
struct table_obj {char *ta_type;int ta_maxcol;u_char ta_sep;struct table_obj___37F826B7C2AFF7B3E483E0E1EE89ED51 ta_cols;char *ta_path;};
struct td_notify {td_notify_e type;union td_notify___143F0EF771439D241AFD6E8AB1506B64 u;};
struct term_desc {tag_t td_tag;uint8_t td_res[496];};
struct timeval32 {time32_t tv_sec;int32_t tv_usec;};
struct uscsi_rqs {int rqs_flags;ushort_t rqs_buflen;ushort_t rqs_resid;caddr_t rqs_bufaddr;};
struct vt_data_4 {vt_trace_t head;ulong_t data[3];};
struct vt_data_8 {vt_trace_t head;ulong_t data[7];};
struct __client {AUTH *cl_auth;struct __client__clnt_ops *cl_ops;caddr_t cl_private;char *cl_netid;char *cl_tp;};
struct ani_free {kmutex_t ani_lock;pgcnt_t ani_count;};
struct attr_hdr {uint32_t ahdr_atype;uint8_t ahdr_astype;uint8_t ahdr_res[3];uint32_t ahdr_length;uint8_t ahdr_data[4];};
struct au_qctrl {size_t aq_hiwater;size_t aq_lowater;size_t aq_bufsz;clock_t aq_delay;};
struct au_tid64 {uint64_t port;uint32_t machine;};
struct cisptr_t {acc_handle_t handle;uint32_t size;uint32_t offset;uint32_t flags;};
struct ddi_prop {struct ddi_prop *prop_next;dev_t prop_dev;char *prop_name;int prop_flags;int prop_len;caddr_t prop_val;};
struct di_devnm {di_off_t name;di_off_t global_prop;di_off_t head;int flags;int instance;uint_t ops;};
struct dirent64 {ino64_t d_ino;off64_t d_off;unsigned short d_reclen;char d_name[1];};
struct dk_cinfo {char dki_cname[16];ushort_t dki_ctype;ushort_t dki_flags;ushort_t dki_cnum;uint_t dki_addr;uint_t dki_space;uint_t dki_prio;uint_t dki_vec;char dki_dname[16];uint_t dki_unit;uint_t dki_slave;ushort_t dki_partition;ushort_t dki_maxtransfer;};
struct dk_minfo {uint_t dki_media_type;uint_t dki_lbsize;diskaddr_t dki_capacity;};
struct dk_mpcmd {uint_t dkc_mpcmd;uint_t dkc_mpflags;caddr_t dkc_bufaddr;uint_t dkc_buflen;int dkc_pad[4];};
struct dump_map {offset_t dm_first;offset_t dm_next;offset_t dm_data;struct as *dm_as;uintptr_t dm_va;};
struct failinfo {struct vnode *vp;caddr_t fhp;void (*copyproc)(caddr_t, vnode_t *);int (*lookupproc)(vnode_t *, char *, vnode_t **, struct pathname *, int, vnode_t *, struct cred *, int);};
struct fbcursor {short set;short enable;struct fbcurpos pos;struct fbcurpos hot;struct fbcmap cmap;struct fbcurpos size;char *image;char *mask;};
struct fcp_prli {uchar_t type;uchar_t resvd1;unsigned int orig_process_assoc_valid : 1;unsigned int resp_process_assoc_valid : 1;unsigned int establish_image_pair : 1;unsigned int resvd2 : 13;uint_t orig_process_associator;uint_t resp_process_associator;unsigned int resvd3 : 25;unsigned int data_overlay_allowed : 1;unsigned int initiator_fn : 1;unsigned int target_fn : 1;unsigned int cmd_data_mixed : 1;unsigned int data_resp_mixed : 1;unsigned int read_xfer_rdy_disabled : 1;unsigned int write_xfer_rdy_disabled : 1;};
struct fifo_reg {union fifo_reg___2C4CA6FC96781476665F04CD0317A0CB fr;uint8_t config_b;uint8_t ecr;};
struct fifodata {fifolock_t fifo_lock;fifonode_t fifo_fnode[2];};
struct gwindows {int wbcnt;greg_t *spbuf[31];struct rwindow wbuf[31];};
struct hdk_type {ushort_t hdkt_hsect;ushort_t hdkt_promrev;uchar_t hdkt_drtype;uchar_t hdkt_drstat;};
struct hme_bmac {uint_t xifc;uint_t pad1[129];uint_t txrst;uint_t txcfg;uint_t ipg1;uint_t ipg2;uint_t alimit;uint_t slot;uint_t palen;uint_t papat;uint_t txsfd;uint_t jam;uint_t txmax;uint_t txmin;uint_t parg;uint_t dcnt;uint_t nccnt;uint_t fccnt;uint_t excnt;uint_t ltcnt;uint_t rseed;uint_t txsm;uint_t pad2[44];uint_t rxrst;uint_t rxcfg;uint_t rxmax;uint_t rxmin;uint_t madd2;uint_t madd1;uint_t madd0;uint_t frcnt;uint_t lecnt;uint_t aecnt;uint_t fecnt;uint_t rxsm;uint_t rxcv;uchar_t pad3[4];uint_t hash3;uint_t hash2;uint_t hash1;uint_t hash0;uint_t afr2;uint_t afr1;uint_t afr0;uint_t afmr;};
struct info_reg {union info_reg___A99CADDF0A6969246070D83E4F241E67 ir;uint8_t dsr;uint8_t dcr;};
struct ipasfrag {unsigned char ip_v : 4;unsigned char ip_hl : 4;uchar_t ipf_mff;short ip_len;ushort_t ip_id;short ip_off;uchar_t ip_ttl;uchar_t ip_p;ushort_t ip_sum;struct ipasfrag *ipf_next;struct ipasfrag *ipf_prev;};
struct kobj_mem {struct kobj_mem *km_next;struct kobj_mem *km_prev;uintptr_t km_addr;size_t km_size;uintptr_t km_alloc_addr;size_t km_alloc_size;};
struct kproject {projid_t kpj_id;uint_t kpj_count;};
struct link_map {unsigned int l_addr;char *l_name;Elf32_Dyn *l_ld;Link_map *l_next;Link_map *l_prev;char *l_refname;};
struct llc2Init {uint_t ppa;uint_t cmd;ushort_t ackTimerInt;ushort_t pollTimerInt;ushort_t rejTimerInt;ushort_t remBusyTimerInt;ushort_t inactTimerInt;ushort_t maxRetry;ushort_t xmitWindowSz;ushort_t rcvWindowSz;ushort_t timeinterval;ushort_t rspTimerInt;ushort_t loopback;};
struct lm_block {lmb_state_t lmb_state;bool_t lmb_no_callback;struct flock64 *lmb_flk;netobj *lmb_id;struct lm_vnode *lmb_vn;struct lm_block *lmb_next;};
struct mdb_pipe {uintptr_t *pipe_data;size_t pipe_len;};
struct mib2_tcp {int tcpRtoAlgorithm;int tcpRtoMin;int tcpRtoMax;int tcpMaxConn;Counter tcpActiveOpens;Counter tcpPassiveOpens;Counter tcpAttemptFails;Counter tcpEstabResets;Gauge tcpCurrEstab;Counter tcpInSegs;Counter tcpOutSegs;Counter tcpRetransSegs;int tcpConnTableSize;Counter tcpOutRsts;Counter tcpOutDataSegs;Counter tcpOutDataBytes;Counter tcpRetransBytes;Counter tcpOutAck;Counter tcpOutAckDelayed;Counter tcpOutUrg;Counter tcpOutWinUpdate;Counter tcpOutWinProbe;Counter tcpOutControl;Counter tcpOutFastRetrans;Counter tcpInAckSegs;Counter tcpInAckBytes;Counter tcpInDupAck;Counter tcpInAckUnsent;Counter tcpInDataInorderSegs;Counter tcpInDataInorderBytes;Counter tcpInDataUnorderSegs;Counter tcpInDataUnorderBytes;Counter tcpInDataDupSegs;Counter tcpInDataDupBytes;Counter tcpInDataPartDupSegs;Counter tcpInDataPartDupBytes;Counter tcpInDataPastWinSegs;Counter tcpInDataPastWinBytes;Counter tcpInWinProbe;Counter tcpInWinUpdate;Counter tcpInClosed;Counter tcpRttNoUpdate;Counter tcpRttUpdate;Counter tcpTimRetrans;Counter tcpTimRetransDrop;Counter tcpTimKeepalive;Counter tcpTimKeepaliveProbe;Counter tcpTimKeepaliveDrop;Counter tcpListenDrop;Counter tcpListenDropQ0;Counter tcpHalfOpenDrop;Counter tcpOutSackRetransSegs;int tcp6ConnTableSize;};
struct mon_info {uint_t mon_type;uint_t pixfreq;uint_t hfreq;uint_t vfreq;uint_t vsync;uint_t hsync;ushort_t hfporch;ushort_t hbporch;ushort_t vfporch;ushort_t vbporch;};
struct mon_spec {whf_t ms_whf;struct mdi_set_resolution ms_msr;};
struct nfssattr {uint32_t sa_mode;uint32_t sa_uid;uint32_t sa_gid;uint32_t sa_size;struct nfs2_timeval sa_atime;struct nfs2_timeval sa_mtime;};
struct nlm4_res {netobj cookie;nlm4_stat stat;};
struct nlm_lock {char *caller_name;netobj fh;netobj oh;int svid;uint_t l_offset;uint_t l_len;};
struct oar_mask {uint_t oa_rights;zotypes oa_otype;};
struct reg1args {u_int family;char *name;netobj address;};
struct sadb_alg {uint8_t sadb_alg_id;uint8_t sadb_alg_ivlen;uint16_t sadb_alg_minbits;uint16_t sadb_alg_maxbits;uint16_t sadb_alg_reserved;};
struct sec_data {uint_t secmod;uint_t rpcflavor;int flags;caddr_t data;};
struct seconfig {char sc_name[64];int sc_nfsnum;int sc_rpcnum;char sc_gss_mech[64];struct gss_OID_desc_struct *sc_gss_mech_type;uint_t sc_qop;rpc_gss_service_t sc_service;};
struct servinfo {struct knetconfig *sv_knconf;struct netbuf sv_addr;nfs_fhandle sv_fhandle;struct sec_data *sv_secdata;char *sv_hostname;int sv_hostnamelen;struct servinfo *sv_next;};
struct set_gid3 {bool_t set_it;gid3 gid;};
struct set_uid3 {bool_t set_it;uid3 uid;};
struct sf_stats {uint_t version;uint_t lip_count;uint_t lip_failures;uint_t cralloc_failures;uint_t ncmds;uint_t throttle_limit;uint_t cr_pool_size;struct sf_target_stats tstats[127];char drvr_name[256];};
struct sigevent {int sigev_notify;int sigev_signo;union sigval sigev_value;void (*sigev_notify_function)(union sigval);pthread_attr_t *sigev_notify_attributes;int __sigev_pad2;};
struct sysparam {struct sysparam *sys_next;int sys_type;int sys_op;char *sys_modnam;char *sys_ptr;u_longlong_t sys_info;char *sys_config;int sys_len;ulong_t *addrp;};
struct vt_label {vt_trace_t head;ulong_t facility;ulong_t tag;ulong_t length;ulong_t info;ulong_t npf;};
struct vt_title {vt_trace_t head;ulong_t title;};
struct dcentry {uint64_t de_handle;struct dcentry *de_next;int de_hash;uchar_t de_namelen;char de_name[1];};
struct fbgattr {int real_type;int owner;struct fbtype fbtype;struct fbsattr sattr;int emu_types[4];};
struct fcp_rsp {uint_t reserved_0;uint_t reserved_1;union fcp_rsp___7DE1CF9D6261DB3834188948652834A1 fcp_u;uint_t fcp_resid;uint_t fcp_sense_len;uint_t fcp_response_len;};
struct flock64 {short l_type;short l_whence;off64_t l_start;off64_t l_len;int l_sysid;pid_t l_pid;int l_pad[4];};
struct hdk_log {daddr_t hdkl_block;ulong_t hdkl_count;short hdkl_type;short hdkl_err1;short hdkl_err2;};
struct lifconf {sa_family_t lifc_family;int lifc_flags;int lifc_len;union lifconf___13CA4C53A4CDABC7C7076CCE366D4628 lifc_lifcu;};
struct lilpmap {ushort_t lilp_magic;ushort_t lilp_myalpa;uchar_t lilp_length;uchar_t lilp_list[127];};
struct lm_xprt {struct lm_xprt *next;SVCXPRT *xprt;kthread_t *thread;int valid;};
struct log_ctl {short mid;short sid;char level;short flags;clock_t ltime;time_t ttime;int seq_no;int pri;};
struct long_ad {uint32_t lad_ext_len;uint32_t lad_ext_loc;uint16_t lad_ext_prn;char lad_iu[6];};
struct lswatch {uintptr_t lw_base;size_t lw_size;};
struct mfb_reg {struct mfb_cmap cmap;uchar_t control;uchar_t status;uchar_t cursor_start;uchar_t cursor_end;uchar_t h_blank_set;uchar_t h_blank_clear;uchar_t h_sync_set;uchar_t h_sync_clear;uchar_t comp_sync_clear;uchar_t v_blank_set_high;uchar_t v_blank_set_low;uchar_t v_blank_clear;uchar_t v_sync_set;uchar_t v_sync_clear;uchar_t xfer_holdoff_set;uchar_t xfer_holdoff_clear;};
union nfs_ext {struct nfs_args_extA nfs_extA;struct nfs_args_extB nfs_extB;};
struct nfs_fh3 {uint_t fh3_length;union nfs_fh3__nfs_fh3_u fh3_u;};
struct nfsrdok {uint32_t rdok_offset;uint32_t rdok_size;bool_t rdok_eof;struct dirent64 *rdok_entries;};
struct nlm_res {netobj cookie;nlm_stat stat;};
struct pcadmin {id_t pc_cid;caddr_t pc_cladmin;};
struct priovec {void *pio_base;size_t pio_len;off_t pio_offset;};
struct prwatch {uintptr_t pr_vaddr;size_t pr_size;int pr_wflags;int pr_pad;};
struct quotctl {int op;uid_t uid;caddr_t addr;};
struct rtentry {uint_t rt_hash;struct sockaddr rt_dst;struct sockaddr rt_gateway;short rt_flags;short rt_refcnt;uint_t rt_use;struct ifnet *rt_ifp;};
struct rtparms {pri_t rt_pri;uint_t rt_tqsecs;int rt_tqnsecs;};
struct secinfo {seconfig_t s_secinfo;unsigned int s_flags;int s_window;int s_rootcnt;caddr_t *s_rootnames;};
struct ser_str {queue_t *str_rq;caddr_t str_com;int str_inst;int str_state;};
struct statvfs {unsigned int f_bsize;unsigned int f_frsize;fsblkcnt_t f_blocks;fsblkcnt_t f_bfree;fsblkcnt_t f_bavail;fsfilcnt_t f_files;fsfilcnt_t f_ffree;fsfilcnt_t f_favail;unsigned int f_fsid;char f_basetype[16];unsigned int f_flag;unsigned int f_namemax;char f_fstr[32];unsigned int f_filler[16];};
struct strpeek {struct strbuf ctlbuf;struct strbuf databuf;t_uscalar_t flags;};
struct tCapBuf {uint_t seqNum;uint_t lastFlag;ildTraceEntry_t t[64];};
struct t_uderr {struct netbuf addr;struct netbuf opt;t_scalar_t error;};
struct termios {tcflag_t c_iflag;tcflag_t c_oflag;tcflag_t c_cflag;tcflag_t c_lflag;cc_t c_cc[19];};
struct timeval {time_t tv_sec;suseconds_t tv_usec;};
struct upcount {struct upcount *up_next;uid_t up_uid;uint_t up_count;};
struct vol_str {caddr_t data;size_t data_len;};
struct aclent {int type;uid32_t id;o_mode perm;};
struct arphdr {ushort_t ar_hrd;ushort_t ar_pro;uchar_t ar_hln;uchar_t ar_pln;ushort_t ar_op;};
struct au_tid {dev_t port;uint_t machine;};
typedef uint_t (*avfunc)(caddr_t);
struct ba_acc {unsigned char seq_id : 8;uchar_t org_s_id[3];ushort_t ox_id;ushort_t rx_id;};
struct cyc_id {cyc_cpu_t *cyi_cpu;cyc_index_t cyi_ndx;struct cyc_id *cyi_prev;struct cyc_id *cyi_next;};
struct dcfree {uint64_t df_handle;struct dcfree *df_next;uint_t df_len;};
struct di_all {int version;int pd_version;int endianness;int generation;di_off_t top_devinfo;di_off_t devnames;di_off_t ppdata_format;di_off_t dpdata_format;int n_ppdata;int n_dpdata;int devcnt;uint_t command;uint_t map_size;char root_path[1];};
struct direct {uint32_t d_ino;ushort_t d_reclen;ushort_t d_namlen;char d_name[256];};
struct dirent {ino_t d_ino;off_t d_off;unsigned short d_reclen;char d_name[1];};
struct dvpoll {pollfd_t *dp_fds;nfds_t dp_nfds;int dp_timeout;};
struct f_user {pid_t fu_pid;int fu_flags;uid_t fu_uid;};
union fdcreg {struct fdcreg___C3A2651014D6C78917994F3FE5B85EFD fdc_82072_reg;struct fdcreg__fdc_82077_reg fdc_82077_reg;};
struct fhsize {fsid_t f1;ushort_t f2;char f3[4];ushort_t f4;char f5[4];};
struct ftevnt {ts_t ts;char *mid;ushort_t evnt;ushort_t data;};
struct ftflwe {char *mid;ushort_t evnt;ushort_t data;tdelta_t td;};
struct ic_acl {ufs_ic_acl_t *owner;ufs_ic_acl_t *group;ufs_ic_acl_t *other;ufs_ic_acl_t *users;ufs_ic_acl_t *groups;ufs_aclmask_t mask;};
struct ipid_s {ipllc_t ipid_ipllc;uint_t ipid_ire_type;uint_t ipid_addr_offset;uint_t ipid_addr_length;uint_t ipid_mask_offset;uint_t ipid_mask_length;};
union la_wwn {uchar_t raw_wwn[8];struct la_wwn___E7FEB4D8EB8DF71B4CA1F98BC2D628AC w;};
struct lockfs {ulong_t lf_lock;ulong_t lf_flags;ulong_t lf_key;ulong_t lf_comlen;caddr_t lf_comment;};
struct msghdr {void *msg_name;socklen_t msg_namelen;struct iovec *msg_iov;int msg_iovlen;caddr_t msg_accrights;int msg_accrightslen;};
struct passwd {char *pw_name;char *pw_passwd;uid_t pw_uid;gid_t pw_gid;char *pw_age;char *pw_comment;char *pw_gecos;char *pw_dir;char *pw_shell;};
struct prcred {uid_t pr_euid;uid_t pr_ruid;uid_t pr_suid;gid_t pr_egid;gid_t pr_rgid;gid_t pr_sgid;int pr_ngroups;gid_t pr_groups[1];};
struct sb_hdr {uint_t sbh_origlen;uint_t sbh_msglen;uint_t sbh_totlen;uint_t sbh_drops;struct timeval sbh_timestamp;};
struct sysent {char sy_narg;unsigned char sy_flags;int (*sy_call)();krwlock_t *sy_lock;int64_t (*sy_callc)();};
struct tstamp {uint16_t ts_tzone;uint16_t ts_year;uint8_t ts_month;uint8_t ts_day;uint8_t ts_hour;uint8_t ts_min;uint8_t ts_sec;uint8_t ts_csec;uint8_t ts_husec;uint8_t ts_usec;};
struct ux_dev {dev_t dev;ino_t ino;};
struct vt_cpu {vt_trace_t head;ulong_t cpu_num;};
struct dkbad {int bt_csn;ushort_t bt_mbz;ushort_t bt_flag;struct dkbad__bt_bad bt_bad[126];};
union dlsap {struct dlsap___3C6A35A85173501EDF698F532F45D439 ether;struct dlsap___9581DFA880E1BDAFBA851730491A1CBF llc;};
struct flock {short l_type;short l_whence;off_t l_start;off_t l_len;int l_sysid;pid_t l_pid;int l_pad[4];};
struct hsfid {ushort_t hf_len;ushort_t hf_dir_off;uint_t hf_dir_lbn;};
struct ifnet {char *if_name;short if_unit;short if_mtu;short if_flags;short if_timer;ushort_t if_promisc;int if_metric;struct ifaddr *if_addrlist;struct ifnet__ifqueue if_snd;int (*if_init)();int (*if_output)();int (*if_ioctl)();int (*if_reset)();int (*if_watchdog)();int if_ipackets;int if_ierrors;int if_opackets;int if_oerrors;int if_collisions;struct ifnet *if_next;struct ifnet *if_upper;struct ifnet *if_lower;int (*if_input)();int (*if_ctlin)();int (*if_ctlout)();struct map *if_memmap;};
struct ioreq {caddr_t ior_base;int ior_len;offset_t ior_offset;int ior_whence;int ior_errno;int ior_return;int ior_flag;};
struct mperm {struct mperm *mp_next;char *mp_drvname;char *mp_minorname;int mp_perm;char *mp_owner;char *mp_group;uid_t mp_uid;gid_t mp_gid;};
struct mtget {short mt_type;short mt_dsreg;short mt_erreg;daddr_t mt_resid;daddr_t mt_fileno;daddr_t mt_blkno;ushort_t mt_flags;short mt_bf;};
struct pcpri {id_t pc_cid;pri_t pc_clpmax;pri_t pc_clpmin;};
struct qband {struct qband *qb_next;size_t qb_count;struct msgb *qb_first;struct msgb *qb_last;size_t qb_hiwat;size_t qb_lowat;uint_t qb_flag;size_t qb_mblkcnt;};
struct svcfh {fsid_t fh_fsid;ushort_t fh_len;char fh_data[10];ushort_t fh_xlen;char fh_xdata[10];};
struct t_buf {mblk_t *bu_bp;unsigned char *bu_ptr;ushort_t bu_cnt;};
struct timex {uint32_t modes;int32_t offset;int32_t freq;int32_t maxerror;int32_t esterror;int32_t status;int32_t constant;int32_t precision;int32_t tolerance;int32_t ppsfreq;int32_t jitter;int32_t shift;int32_t stabil;int32_t jitcnt;int32_t calcnt;int32_t errcnt;int32_t stbcnt;};
struct ustat {daddr_t f_tfree;ino_t f_tinode;char f_fname[6];char f_fpack[6];};
struct ITEM {TEXT name;TEXT description;int index;struct MENU *imenu;int value;char *userptr;OPTIONS opt;int status;short y;short x;struct ITEM *left;struct ITEM *right;struct ITEM *up;struct ITEM *down;};
struct bmac {uint_t xifc;uchar_t pad2[252];uint_t stat;uint_t mask;uchar_t pad3[256];uint_t txrst;uint_t txcfg;uint_t ipg1;uint_t ipg2;uint_t alimit;uint_t slot;uint_t palen;uint_t papat;uint_t txsfd;uint_t jam;uint_t txmax;uint_t txmin;uint_t parg;uint_t dcnt;uint_t nccnt;uint_t ntcnt;uint_t excnt;uint_t ltcnt;uint_t rseed;uint_t txsm;uchar_t pad4[176];uint_t rxrst;uint_t rxcfg;uint_t rxmax;uint_t rxmin;uint_t madd2;uint_t madd1;uint_t madd0;uint_t frcnt;uint_t lecnt;uint_t aecnt;uint_t fecnt;uint_t rxsm;uint_t rxcv;uchar_t pad5[4];uint_t hash3;uint_t hash2;uint_t hash1;uint_t hash0;uint_t afr2;uint_t afr1;uint_t afr0;uint_t afmr;};
struct cwrd {int cwrd_ref;uint_t cwrd_ldbuf;uint_t cwrd_dirlen;caddr_t cwrd_dir;uint_t cwrd_lrbuf;uint_t cwrd_rootlen;caddr_t cwrd_root;};
struct fbuf {caddr_t fb_addr;uint_t fb_count;};
struct iecb {ushort_t iecb_status;ushort_t iecb_cmd;ieoff_t iecb_next;};
struct rpcb {rpcprog_t r_prog;rpcvers_t r_vers;char *r_netid;char *r_addr;char *r_owner;};
struct slot {enum slot___D48DA2B417DCEB42491146B2A8A36AD2 sl_status;daddr_t sl_blkno;int sl_offset;struct buf *sl_bp;struct pcdir *sl_ep;int sl_flags;};
struct smap {struct vnode *sm_vp;struct smap *sm_hash;struct smap *sm_next;struct smap *sm_prev;u_offset_t sm_off;ushort_t sm_bitmap;ushort_t sm_refcnt;};
struct upib {kmutex_t upib_lock;upimutex_t *upib_first;};
struct utmp {char ut_user[8];char ut_id[4];char ut_line[12];short ut_pid;short ut_type;struct exit_status ut_exit;time_t ut_time;};
struct XDR {enum xdr_op x_op;struct xdr_ops *x_ops;caddr_t x_public;caddr_t x_private;caddr_t x_base;int x_handy;};
struct acl {int a_type;uid_t a_id;o_mode_t a_perm;};
struct lmd {uint16_t lmd_ladr;uint8_t lmd_flags;unsigned char lmd_hadr : 8;uint16_t lmd_bcnt;uint16_t lmd_mcnt;};
struct pid {unsigned int pid_prinactive : 1;unsigned int pid_pgorphaned : 1;unsigned int pid_padding : 6;unsigned int pid_prslot : 24;pid_t pid_id;struct proc *pid_pglink;struct pid *pid_link;uint_t pid_ref;};
struct pim {unsigned char pim_vers : 4;unsigned char pim_type : 4;uint8_t pim_reserved;uint16_t pim_cksum;};
struct sem {ushort_t semval;pid_t sempid;ushort_t semncnt;ushort_t semzcnt;ushort_t semncnt_cv;ushort_t semzcnt_cv;};
struct tsp {uchar_t tsp_type;uchar_t tsp_vers;short tsp_seq;struct timeval tsp_time;char tsp_name[256];};
union _4965EEC990952D9E46AE6A5DEA6146E6___6E85EC2AA6609A2A5C09ADACFEBAAD54 {Elf32_Word eb_val;Elf32_Addr eb_ptr;Elf32_Off eb_off;};
union _59C2F8BE822F39E0857CE77037A0F7B3___8DBE08BFF46A6256412FDD0D3B09651A {Elf64_Xword eb_val;Elf64_Addr eb_ptr;Elf64_Off eb_off;};
union _68E4A9C261F68D94E3C41D4B3B334942___B21EF9EB666022D3B04E309DD56686B1 {Elf32_Word d_val;Elf32_Addr d_ptr;Elf32_Off d_off;};
union cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483 {struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___54452C09C3FB8D7AD926D1B264F470FB cfg;struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___6152E0D14B08C53F7D041BC3E28DC5EB mem;struct cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483___E0F3893B754C74B700FBB8F1102F79FF rom;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_eject {minor_t viej_unit;uid_t viej_user;dev_t viej_tty;int viej_force;};
struct ip6_hdr___BD1196ABBEDCD1C568FFAAAAE6BA5314__ip6_hdrctl {uint32_t ip6_un1_flow;uint16_t ip6_un1_plen;uint8_t ip6_un1_nxt;uint8_t ip6_un1_hlim;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_attr {minor_t viea_unit;char viea_attr[129];char viea_value[129];uid_t viea_uid;gid_t viea_gid;};
struct prxregset___13E89D14F043A1ECCED4B43807F5FAAC__pr_v8p {union prxregset_____pr_v8p___5BB8866D8A3A461A966C1C583747DDAA pr_xfr;uint32_t pr_xfsr;uint32_t pr_fprs;uint32_t pr_xg[8];uint32_t pr_xo[8];uint64_t pr_tstate;uint32_t pr_filler[8];};
struct _pthread_mutex___5CDA96BDFAA6A2FDFE604EF7C9E48890 {uint16_t __pthread_mutex_flag1;uint8_t __pthread_mutex_flag2;uint8_t __pthread_mutex_ceiling;uint32_t __pthread_mutex_type;};
union icmp6_hdr___85A0B7966B981BE593FDADBE0B8685D7 {uint32_t icmp6_un_data32[1];uint16_t icmp6_un_data16[2];uint8_t icmp6_un_data8[4];};
union in_addr___62419D96C55FD564B59AC1457FCC29DF {struct in_addr___62419D96C55FD564B59AC1457FCC29DF___CA47E2D0110326C1FF3241D99B03738B S_un_b;struct in_addr___62419D96C55FD564B59AC1457FCC29DF___F83FB9AF7C487DE20DBC314CA3F6F492 S_un_w;uint32_t S_addr;};
struct mib2_ipv6RouteEntry__ipv6RouteInfo_s {Gauge re_max_frag;Gauge re_rtt;Counter re_ref;int re_frag_flag;Ip6Address re_src_addr;int re_ire_type;Counter re_obpkt;Counter re_ibpkt;int re_flags;};
typedef uint32_t OCF_ClientAuthenticationCallback_t(OCF_AuthOpTag_t, void *, OCF_AuthOpBuffer_t, OCF_AuthOpBuffer_t *);
struct mib2_ipv6AddrEntry__ipv6AddrInfo_s {Gauge ae_mtu;int ae_metric;Ip6Address ae_pp_dst_addr;int ae_flags;Counter ae_ibcnt;Counter ae_obcnt;Counter ae_focnt;Ip6Address ae_subnet;int ae_subnet_len;Ip6Address ae_src_addr;};
struct _03B9D2AB7EC31E7B5953C0F06C8B7AA9 {t_uscalar_t dl_qos_type;t_scalar_t dl_rcv_throughput;t_scalar_t dl_rcv_trans_delay;t_scalar_t dl_xmt_throughput;t_scalar_t dl_xmt_trans_delay;t_scalar_t dl_priority;t_scalar_t dl_protection;t_scalar_t dl_residual_error;dl_resilience_t dl_resilience;};
struct _06F14C8D328ECA5949F7DFEA2A047922 {uint_t dmao_size;ddi_dma_atyp_t dmao_type;ddi_dma_aobj_t dmao_obj;};
struct _0F2B39C4889BFBA0BBC9C66D38A1F5D3 {Elf32_Word sh_name;Elf32_Word sh_type;Elf32_Word sh_flags;Elf32_Addr sh_addr;Elf32_Off sh_offset;Elf32_Word sh_size;Elf32_Word sh_link;Elf32_Word sh_info;Elf32_Word sh_addralign;Elf32_Word sh_entsize;};
struct _2A4C46EAAE865C05377B30846399D3D1 {Elf32_Lword m_value;Elf32_Word m_info;Elf32_Word m_poffset;Elf32_Half m_repeat;Elf32_Half m_stride;};
struct _2FF20837F70D0E9E2C94D4E9C91813B8 {uint_t version;char *mechanism;char *qop;rpc_gss_principal_t client_principal;char *svc_principal;rpc_gss_service_t service;};
struct _4664B325D7B1C568276997F8FB024EC2 {Elf64_Addr r_offset;Elf64_Xword r_info;Elf64_Sxword r_addend;};
struct _4788A0C65CEF1424AE2DE816674E1913 {Elf32_Word p_type;Elf32_Off p_offset;Elf32_Addr p_vaddr;Elf32_Addr p_paddr;Elf32_Word p_filesz;Elf32_Word p_memsz;Elf32_Word p_flags;Elf32_Word p_align;};
struct _60F784A34F5D801B175C2936E7100D6B {uint_t msg;enum ipd_iftype iftype;uint_t ifunit;struct sockaddr sa;uint_t error;};
union _722BC7DC76932F8652A49C80584F2606 {struct _722BC7DC76932F8652A49C80584F2606___437BBD4FFAE2830BB41C5AD6BD388D5E r;ushort_t word16[2];uint_t word32;};
struct _75BAE6E6D7E8D7271432449CBE6780E8 {int (*softc_init)(ses_softc_t *, int);int (*init_enc)(ses_softc_t *);int (*get_encstat)(ses_softc_t *, int);int (*set_encstat)(ses_softc_t *, uchar_t, int);int (*get_objstat)(ses_softc_t *, ses_objarg *, int);int (*set_objstat)(ses_softc_t *, ses_objarg *, int);};
struct _7A20DF675792E830F977E1284BC7C2E2 {ushort_t pppLinkErrorsIndex;ushort_t pppLinkLastUnknownProtocol;uint_t pppLinkBadAddresses;uint_t pppLinkBadControls;ushort_t pppLinkLastInvalidProtocol;uchar_t pppLinkLastBadControl;uchar_t pppLinkLastBadAddress;uint_t pppLinkInvalidProtocols;uint_t pppLinkUnknownProtocols;uint_t pppLinkPacketTooLongs;uint_t pppLinkPacketTooShorts;uint_t pppLinkHeaderTooShorts;uint_t pppLinkBadCRCs;uint_t pppLinkConfigTimeouts;uint_t pppLinkTerminateTimeouts;};
struct _7C2C393CADA02B1A2D153D5E661EE10D {uint_t msg;enum ipd_iftype iftype;uint_t ifunit;struct sockaddr sa;uint_t timeout;};
union _8118FFB9EEB2C3E80F209039896F74EE {uint32_t fcode_i[12];uint16_t fcode_s[24];uint8_t fcode_c[48];};
struct _8D40ACCAC6057C8589735CF1D51B872E {Elf64_Lword m_value;Elf64_Xword m_info;Elf64_Xword m_poffset;Elf64_Half m_repeat;Elf64_Half m_stride;};
union _9A6DBE2689E4D78A6CC46A56A422909E {struct _9A6DBE2689E4D78A6CC46A56A422909E___B189DDDFA0FB48CFB28663AECD3BBC94 r;ushort_t word16[4];uint_t word32[2];};
struct _AAECD496E21460385AB9540869BF9C78 {Elf32_Addr r_offset;Elf32_Word r_info;Elf32_Sword r_addend;};
struct _BDA3EB51A42C3AF06EADB485CA225508 {uint_t msg;enum ipd_iftype iftype;uint_t ifunit;struct sockaddr sa;};
struct _CAD4AC390BD8237C223B7EC96D9848DF {uint_t msg;enum ipd_iftype iftype;uint_t ifunit;struct sockaddr sa;uint_t blacklisttime;};
union _DBB18890394B8029ED37E44DCE2D8EED {struct v_address virt_obj;struct pp_address pp_obj;struct phy_address phys_obj;};
struct _E0B09092130FDFFEB4124EF1450B8417 {uint_t ppp_message;pppProtocol_t protocol;uchar_t data[1];};
struct _F3D1899E2E37EFD927B28027A707AB99 {bool_t established;rpc_gss_service_t service;uint_t qop_rcvd;void *context;uint_t seq_num;};
struct _F4A087914CCBD8B8061D53356491AFE5 {_LC_object_t hdr;_LC_charmap_t *(*init)(_LC_locale_t *);int (*destructor)(_LC_locale_t *);_LC_methods_charmap_t *user_api;_LC_methods_charmap_t *native_api;int (*__eucpctowc)(_LC_charmap_t *, int);int (*__wctoeucpc)(_LC_charmap_t *, int);void *data;};
struct _F5D530A8B9C8144C513F035766B8BD9F {Elf32_Word st_name;Elf32_Addr st_value;Elf32_Word st_size;unsigned char st_info;unsigned char st_other;Elf32_Half st_shndx;};
struct _F9CE4197C78490B9950BF1AD06D064B7 {union _F9CE4197C78490B9950BF1AD06D064B7___51177246DB161340A18046D041E50857 _dmu;size_t dmac_size;uint_t dmac_type;};
struct _FB115A149FF37A3EAB946997DD4E3A6C {uint32_t sem_count;uint16_t sem_type;uint16_t sem_magic;upad64_t sem_pad1[3];upad64_t sem_pad2[2];};
struct mib2_ipRouteEntry__ipRouteInfo_s {Gauge re_max_frag;Gauge re_rtt;Counter re_ref;int re_frag_flag;IpAddress re_src_addr;int re_ire_type;Counter re_obpkt;Counter re_ibpkt;int re_flags;};
struct mib2_ipAddrEntry__ipAdEntInfo_s {Gauge ae_mtu;int ae_metric;IpAddress ae_broadcast_addr;IpAddress ae_pp_dst_addr;int ae_flags;Counter ae_ibcnt;Counter ae_obcnt;Counter ae_focnt;IpAddress ae_subnet;int ae_subnet_len;IpAddress ae_src_addr;};
typedef FN_string_t *(*FN_ctx_psvc_parser_func_t)( FN_composite_name_t *, FN_composite_name_t **rest, FN_status_psvc_t *status);
struct cachefsio_getattrname_arg {cfs_fid_t cg_dir;char cg_name[256];cred_t cg_cred;gid_t cg_groups[15];};
typedef FN_ctx_svc_t *(*FN_ctx_svc_from_ref_func)( FN_ref_t *, unsigned int, FN_status_t *);
struct _lwp_mutex___mutex_flags {uint16_t flag1;uint8_t flag2;uint8_t ceiling;union _lwp_mutex___mutex_flags___mbcp_type_un mbcp_type_un;uint16_t magic;};
struct mib2_ipv6NetToMediaEntry {DeviceIndex ipv6NetToMediaIfIndex;Ip6Address ipv6NetToMediaNetAddress;PhysAddress ipv6NetToMediaPhysAddress;int ipv6NetToMediaType;int ipv6NetToMediaState;int ipv6NetToMediaLastUpdated;};
typedef int pctx_sysc_lwp_createfn_t(pctx_t *, pid_t, id_t, void *);
struct writeFilePartialArray_t {OCF_File_t filename;int32_t foffset;int32_t soffset;OCF_Any_t dataSource;int32_t length;};
struct mutex_impl__spin_mutex {lock_t m_dummylock;lock_t m_spinlock;ushort_t m_oldspl;ushort_t m_minspl;uchar_t m_filler;uchar_t _m_type;};
typedef int pctx_sysc_lwp_exitfn_t(pctx_t *, pid_t, id_t, void *);
typedef void *(*tnf_probe_alloc_func_t)(tnf_ops_t *, tnf_probe_control_t *, tnf_probe_setup_t *);
struct pcmcia_logical_window {int lw_window;int lw_socket;struct pcmcia_adapter *lw_adapter;pcmcia_if_t *lw_if;uint32_t lw_status;baseaddr_t lw_base;int lw_len;};
struct cachefs_populate_req {vnode_t *cpop_vp;offset_t cpop_off;size_t cpop_size;};
struct cachefsio_getattrfid {cfs_fid_t cg_backfid;cred_t cg_cred;gid_t cg_groups[15];};
struct stp4020_socket_csr_t {struct stp4020_window_ctl_t window[3];ushort_t ctl0;ushort_t ctl1;ushort_t stat0;ushort_t stat1;uchar_t filler[12];};
struct isdn_interface_info {isdn_interface_t interface;isdn_activation_state_t activation;ulong_t ph_ai;ulong_t ph_di;ulong_t mph_ai;ulong_t mph_di;ulong_t mph_ei1;ulong_t mph_ei2;ulong_t mph_ii_c;ulong_t mph_ii_d;};
struct mib2_ipv6RouteEntry {Ip6Address ipv6RouteDest;int ipv6RoutePfxLength;unsigned int ipv6RouteIndex;DeviceName ipv6RouteIfIndex;Ip6Address ipv6RouteNextHop;int ipv6RouteType;int ipv6RouteProtocol;unsigned int ipv6RoutePolicy;int ipv6RouteAge;unsigned int ipv6RouteNextHopRDI;unsigned int ipv6RouteMetric;unsigned int ipv6RouteWeight;struct mib2_ipv6RouteEntry__ipv6RouteInfo_s ipv6RouteInfo;};
typedef SLPBoolean SLPSrvTypeCallback(SLPHandle hSLP,  char *pcSrvTypes, SLPError errCode, void *pvCookie);
struct __svc_local_cred_t {uid_t euid;gid_t egid;uid_t ruid;gid_t rgid;pid_t pid;};
struct mode_control_scsi3 {struct mode_page mode_page;unsigned char : 6;unsigned char gltsd : 1;unsigned char rlec : 1;unsigned char que_mod : 4;unsigned char : 2;unsigned char que_err : 1;unsigned char qdisable : 1;unsigned char eeca : 1;unsigned char rac : 1;unsigned char byprtm : 1;unsigned char bybths : 1;unsigned char : 1;unsigned char raenp : 1;unsigned char uaaenp : 1;unsigned char eanp : 1;unsigned char reserved;ushort_t ready_aen_holdoff;ushort_t busy_timeout;uchar_t reserved_2[2];};
struct nis_bound_endpoint {endpoint ep;int generation;int rank;u_int flags;int hostnum;int epnum;nis_name uaddr;endpoint cbep;};
typedef int pctx_sysc_execfn_t(pctx_t *, pid_t, id_t, char *, void *);
typedef void pctx_sysc_exitfn_t(pctx_t *pctx, pid_t pid, id_t lwpid, void *arg);
typedef void pctx_sysc_forkfn_t(pctx_t *, pid_t, id_t, pid_t, void *);
struct tnfctl_probe_state {ulong_t id; char *attr_string;boolean_t enabled;boolean_t traced;boolean_t new_probe; char *obj_name; char * *func_names; uintptr_t *func_addrs;void *client_registered_data;int pad;};
typedef SLPBoolean SLPSrvURLCallback(SLPHandle hSLP,  char *pcSrvURL, unsigned short usLifetime, SLPError errCode, void *pvCookie);
struct cachefsio_getinfo {cfs_cid_t gi_cid;int gi_modified;cfs_vattr_t gi_attr;cfs_cid_t gi_pcid;uint_t gi_seq;char gi_name[256];};
struct isdn_channel_info {isdn_chan_t channel;enum isdn_iostate iostate;struct isdn_channel_info__isdn_io_stats transmit;struct isdn_channel_info__isdn_io_stats receive;};
struct mib2_ipRouteEntry {IpAddress ipRouteDest;DeviceName ipRouteIfIndex;int ipRouteMetric1;int ipRouteMetric2;int ipRouteMetric3;int ipRouteMetric4;IpAddress ipRouteNextHop;int ipRouteType;int ipRouteProto;int ipRouteAge;IpAddress ipRouteMask;int ipRouteMetric5;struct mib2_ipRouteEntry__ipRouteInfo_s ipRouteInfo;};
typedef int pctx_fini_lwpfn_t(pctx_t *, pid_t, id_t, void *);
typedef int pctx_init_lwpfn_t(pctx_t *, pid_t, id_t, void *);
struct rpcbs_rmtcalllist {rpcprog_t prog;rpcvers_t vers;rpcproc_t proc;int success;int failure;int indirect;char *netid;struct rpcbs_rmtcalllist *next;};
typedef tnfctl_errcode_t (*tnfctl_probe_op_t)(tnfctl_handle_t *, tnfctl_probe_t *, void *);
struct _klwp__lwp_watch {caddr_t wpaddr;size_t wpsize;int wpcode;greg_t wppc;};
struct cfs_dlog_trailer {int dl_len;cfs_dlog_op_t dl_op;cfs_dlog_val_t dl_valid;uint_t dl_seq;};
struct lance_init_block {unsigned short ib_prom : 1;unsigned short : 8;unsigned short ib_intl : 1;unsigned short ib_drty : 1;unsigned short ib_coll : 1;unsigned short ib_dtcr : 1;unsigned short ib_loop : 1;unsigned short ib_dtx : 1;unsigned short ib_drx : 1;uint8_t ib_padr[6];uint16_t ib_ladrf[4];struct {uint16_t lr_laddr;unsigned char lr_len : 3;unsigned char : 5;unsigned char lr_haddr;} ib_rdrp;struct lancering ib_tdrp;};
struct mib2_ipAddrEntry {IpAddress ipAdEntAddr;DeviceName ipAdEntIfIndex;IpAddress ipAdEntNetMask;int ipAdEntBcastAddr;int ipAdEntReasmMaxSize;struct mib2_ipAddrEntry__ipAdEntInfo_s ipAdEntInfo;};
struct mode_cache_scsi3 {struct mode_page mode_page;unsigned char ic : 1;unsigned char abpf : 1;unsigned char cap : 1;unsigned char disc : 1;unsigned char size : 1;unsigned char wce : 1;unsigned char mf : 1;unsigned char rcd : 1;unsigned char read_reten_pri : 4;unsigned char write_reten_pri : 4;ushort_t dis_prefetch_len;ushort_t min_prefetch;ushort_t max_prefetch;ushort_t prefetch_ceiling;unsigned char fsw : 1;unsigned char lbcss : 1;unsigned char dra : 1;unsigned char vu_124 : 1;unsigned char vu_123 : 1;unsigned char : 3;unsigned char num_cache_seg;ushort_t cache_seg_size;uchar_t reserved;uchar_t non_cache_seg_size_ub;uchar_t non_cache_seg_size_mb;uchar_t non_cache_seg_size_lb;};
struct scsi_defect_list {uchar_t reserved;uchar_t descriptor;ushort_t length;struct scsi_bfi_defect list[127];};
struct OCF_EventData_t {OCF_Event_t event;OCF_ClientHandle_t clienthandle;OCF_CardHandle_t cardhandle;void *eventprivate;void *clientdata;};
typedef SLPBoolean SLPAttrCallback(SLPHandle hSLP,  char *pcAttrList, SLPError errCode, void *pvCookie);
struct _LclCharsetInfo {char *name;char *mime_name;char *v3_name;char *iconv_name;LclMailEncoding mail_header_encoding;LclMailEncoding mail_body_encoding;LclFormat format;char *ascii_end;char *ascii_superset;LclCharsetInfo *next;};
struct _pthread_rwlock {int32_t __pthread_rwlock_readers;uint16_t __pthread_rwlock_type;uint16_t __pthread_rwlock_magic;upad64_t __pthread_rwlock_pad1[3];upad64_t __pthread_rwlock_pad2[2];upad64_t __pthread_rwlock_pad3[2];};
struct autofs_rddirres {enum autofs_res rd_status;u_int rd_bufsize;struct autofsrddir rd_rddir;};
struct cachefs_rl_info {uint_t rl_entries;cfs_time_t rl_gctime;cachefs_rl_listhead_t rl_items[9];};
struct cachefsio_rmdir {cfs_fid_t rd_dirfid;char rd_name[256];cred_t rd_cred;gid_t rd_groups[15];};
struct cfs_dlog_remove {cfs_cid_t dl_parent_cid;cfs_cid_t dl_child_cid;cfs_dlog_tm_t dl_times;cred_t dl_cred;char dl_buffer[316];};
struct cfs_dlog_rename {cfs_cid_t dl_oparent_cid;cfs_cid_t dl_nparent_cid;cfs_cid_t dl_child_cid;cfs_dlog_tm_t dl_times;cfs_cid_t dl_del_cid;cfs_dlog_tm_t dl_del_times;cred_t dl_cred;char dl_buffer[572];};
struct llc2GetSapStats {uint_t ppa;uint_t cmd;uchar_t sap;uchar_t clearFlag;uchar_t state;uint_t numCons;ushort_t cons[256];uint_t xidCmdSent;uint_t xidCmdRcvd;uint_t xidRspSent;uint_t xidRspRcvd;uint_t testCmdSent;uint_t testCmdRcvd;uint_t testRspSent;uint_t testRspRcvd;uint_t uiSent;uint_t uiRcvd;uint_t outOfState;uint_t allocFail;uint_t protocolError;};
struct llc2GetStaStats {uint_t ppa;uint_t cmd;uchar_t clearFlag;uchar_t state;ushort_t numSaps;uchar_t saps[128];uint_t nullSapXidCmdRcvd;uint_t nullSapXidRspSent;uint_t nullSapTestCmdRcvd;uint_t nullSapTestRspSent;uint_t outOfState;uint_t allocFail;uint_t protocolError;};
struct mdi_cursor_info {uint_t curs_enable0[32];uchar_t curs_ctl;ushort_t curs_xpos;ushort_t curs_ypos;};
struct mhioc_resv_desc {mhioc_resv_key_t key;uint8_t type;uint8_t scope;uint32_t scope_specific_addr;};
struct mode_disco_reco {struct mode_page mode_page;uchar_t buffer_full_ratio;uchar_t buffer_empty_ratio;ushort_t bus_inactivity_limit;ushort_t disconect_time_limit;ushort_t connect_time_limit;ushort_t max_burst_size;unsigned char emdp : 1;unsigned char fard : 1;unsigned char fawrt : 1;unsigned char fastat : 1;unsigned char dimm : 1;unsigned char dtdc : 3;uchar_t reserved;ushort_t first_burst_sz;};
struct pm_state_change {caddr_t physpath;int component;int event;time_t timestamp;int old_level;int new_level;size_t size;};
struct prop_handle_ops {int (*op_prop_int)(prop_handle_t *ph, uint_t cmd, int *data);int (*op_prop_str)(prop_handle_t *ph, uint_t cmd, char *data);int (*op_prop_bytes)(prop_handle_t *ph, uint_t cmd, uchar_t *data, uint_t size);};
struct sig_args_struct {uchar_t *dirp;uchar_t *name_p;int *name_len_p;short flags;ulong_t name_flags;uchar_t *SUF_ptr;struct hs_direntry *hdp;struct hsfs *fsp;cont_info_t *cont_info_p;};
struct space_bmap_desc {tag_t sbd_tag;uint32_t sbd_nbits;uint32_t sbd_nbytes;uint8_t sbd_bmap[500];};
struct _pthread_mutex {struct _pthread_mutex___5CDA96BDFAA6A2FDFE604EF7C9E48890 __pthread_mutex_flags;union _pthread_mutex___1A7858AFF91A54C35A86C698AE036482 __pthread_mutex_lock;upad64_t __pthread_mutex_data;};
struct bp_getfile_res {bp_machine_name_t server_name;bp_address server_address;bp_path_t server_path;};
struct indirect_entry {tag_t ie_tag;icb_tag_t ie_icb_tag;long_ad_t ie_indirecticb;};
struct mib2_udp6Entry {Ip6Address udp6LocalAddress;int udp6LocalPort;DeviceIndex udp6IfIndex;struct mib2_udp6Entry__udp6EntryInfo_s udp6EntryInfo;};
struct mode_err_recov {struct mode_page mode_page;unsigned char awre : 1;unsigned char arre : 1;unsigned char tb : 1;unsigned char rc : 1;unsigned char eec : 1;unsigned char per : 1;unsigned char dte : 1;unsigned char dcr : 1;uchar_t read_retry_count;uchar_t correction_span;uchar_t head_offset_count;uchar_t strobe_offset_count;uchar_t reserved;uchar_t write_retry_count;uchar_t reserved_2;ushort_t recovery_time_limit;};
struct nfs_pageio_req {int (*pageio)();page_t *pp;u_offset_t io_off;uint_t io_len;int flags;};
struct unall_spc_desc {tag_t ua_tag;uint32_t ua_vdsn;uint32_t ua_nad;uint8_t ua_al_dsc[488];};
struct wd90c24a2_info {ushort_t accessible_width;ushort_t accessible_height;ushort_t line_bytes;ushort_t hdb_capable;ushort_t vmsize;uchar_t boardrev;uchar_t slot;uint_t pad1;};
struct _LclIconvInfo {char *from_encoding;char *to_encoding;LclDirection direction;int atom_num;LclIconvAtom *atom;LclIconvInfo *next;};
struct au_attr32_tok {uint_t mode;uint_t uid;uint_t gid;int fs;int64_t node;uint32_t dev;};
struct au_attr64_tok {uint_t mode;uint_t uid;uint_t gid;int fs;int64_t node;uint64_t dev;};
struct authsys_parms {uint_t aup_time;char *aup_machname;uid_t aup_uid;gid_t aup_gid;uint_t aup_len;gid_t *aup_gids;};
struct cachefs_workq {struct cachefs_req *wq_head;struct cachefs_req *wq_tail;int wq_length;int wq_thread_count;int wq_max_len;int wq_halt_request;unsigned int wq_keepone : 1;unsigned int wq_logwork : 1;kcondvar_t wq_req_cv;kcondvar_t wq_halt_cv;kmutex_t wq_queue_lock;cachefscache_t *wq_cachep;};
struct cfs_dlog_link {cfs_cid_t dl_parent_cid;cfs_cid_t dl_child_cid;cfs_dlog_tm_t dl_times;cred_t dl_cred;char dl_buffer[316];};
struct copy_mgt_info {uint16_t cgms_cksum;uint8_t cgms_info;uint8_t cgms_dstype;uint32_t cgms_psi;};
struct dkl_partition {uint16_t p_tag;uint16_t p_flag;daddr32_t p_start;int32_t p_size;};
struct generateKey_t {OCF_KEYREF_t privateDesitnation;OCF_KEYREF_t publicDesitnation;int32_t strength;OCF_ALGO_t algorithm;};
struct gss_clnt_data {rpc_gss_OID_desc mechanism;rpc_gss_service_t service;char uname[64];char inst[64];char realm[64];uint_t qop;};
struct isdn_conn_req {isdn_chan_t from;isdn_chan_t to;isdn_path_t dir;isdn_format_t format;int reserved[4];};
struct mntinfo_kstat {char mik_proto[128];uint32_t mik_vers;uint_t mik_flags;uint_t mik_secmod;uint32_t mik_curread;uint32_t mik_curwrite;int mik_timeo;int mik_retrans;uint_t mik_acregmin;uint_t mik_acregmax;uint_t mik_acdirmin;uint_t mik_acdirmax;struct mntinfo_kstat___BCB113A9A38551695E091F53F19F14C3 mik_timers[4];uint32_t mik_noresponse;uint32_t mik_failover;uint32_t mik_remap;char mik_curserver[257];};
struct mode_geometry {struct mode_page mode_page;uchar_t cyl_ub;uchar_t cyl_mb;uchar_t cyl_lb;uchar_t heads;uchar_t precomp_cyl_ub;uchar_t precomp_cyl_mb;uchar_t precomp_cyl_lb;uchar_t current_cyl_ub;uchar_t current_cyl_mb;uchar_t current_cyl_lb;ushort_t step_rate;uchar_t landing_cyl_ub;uchar_t landing_cyl_mb;uchar_t landing_cyl_lb;unsigned char : 6;unsigned char rpl : 2;unsigned char rotational_offset;uchar_t reserved;ushort_t rpm;uchar_t reserved2[2];};
struct nd_opt_rd_hdr {uint8_t nd_opt_rh_type;uint8_t nd_opt_rh_len;uint16_t nd_opt_rh_reserved1;uint32_t nd_opt_rh_reserved2;};
struct nlm4_shareres {netobj cookie;nlm4_stats stat;int32 sequence;};
struct sadb_lifetime {uint16_t sadb_lifetime_len;uint16_t sadb_lifetime_exttype;uint32_t sadb_lifetime_allocations;uint64_t sadb_lifetime_bytes;uint64_t sadb_lifetime_addtime;uint64_t sadb_lifetime_usetime;};
struct writeRecord_t {OCF_File_t filename;int32_t recordNumber;OCF_Any_t data;};
struct au_arg32_tok {uchar_t num;uint32_t val;ushort_t length;char *data;};
struct au_arg64_tok {uchar_t num;uint64_t val;ushort_t length;char *data;};
struct audio_prinfo {uint_t sample_rate;uint_t channels;uint_t precision;uint_t encoding;uint_t gain;uint_t port;uint_t avail_ports;uint_t mod_ports;uint_t _xxx;uint_t buffer_size;uint_t samples;uint_t eof;uchar_t pause;uchar_t error;uchar_t waiting;uchar_t balance;ushort_t minordev;uchar_t open;uchar_t active;};
struct authdes_cred {enum authdes_namekind adc_namekind;struct authdes_fullname adc_fullname;uint32_t adc_nickname;};
struct ddi_dma_attr {uint_t dma_attr_version;uint64_t dma_attr_addr_lo;uint64_t dma_attr_addr_hi;uint64_t dma_attr_count_max;uint64_t dma_attr_align;uint_t dma_attr_burstsizes;uint32_t dma_attr_minxfer;uint64_t dma_attr_maxxfer;uint64_t dma_attr_seg;int dma_attr_sgllen;uint32_t dma_attr_granular;uint_t dma_attr_flags;};
struct extent_block {uint32_t type;int32_t chksum;uint32_t nextents;uint32_t nbytes;uint32_t nextbno;extent_t extents[1];};
struct isp_mbox_cmd {clock_t timeout;uchar_t retry_cnt;uchar_t n_mbox_out;uchar_t n_mbox_in;uint16_t mbox_out[8];uint16_t mbox_in[8];};
struct mode_pdevice {struct mode_page mode_page;ushort_t if_ident;uchar_t reserved[4];uchar_t vendor_uniqe[1];};
struct nfswriteargs {struct otw_nfswriteargs *wa_args;struct otw_nfswriteargs wa_args_buf;uint32_t wa_count;char *wa_data;mblk_t *wa_mblk;};
struct nlm_cancargs {netobj cookie;bool_t block;bool_t exclusive;struct nlm_lock alock;};
struct nlm_lockargs {netobj cookie;bool_t block;bool_t exclusive;struct nlm_lock alock;bool_t reclaim;int state;};
struct nlm_testargs {netobj cookie;bool_t exclusive;struct nlm_lock alock;};
struct p_rmtcallres {rpcport_t port;struct p_rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9 res;xdrproc_t xdr_res;};
struct readRecord_t {OCF_File_t filename;int32_t recordNumber;OCF_Any_t dataRead;};
struct t_audit_data {kthread_id_t tad_thread;unsigned int tad_scid;short tad_event;short tad_evmod;int tad_ctrl;int tad_flag;uint_t tad_pathlen;caddr_t tad_path;struct vnode *tad_vn;caddr_t tad_ad;struct t_audit_data *next;};
struct td_event_msg {td_event_e event; td_thrhandle_t *th_p;union td_event_msg___1BD937C0E27E3130424F8B8CF85B0670 msg;};
struct vio_labelent {off_t vl_off;size_t vl_len;bool_t vl_mapout;};
struct vioc_symname {dev_t sn_dev;caddr_t sn_symname;size_t sn_pathlen;};
struct watched_page {struct watched_page *wp_forw;struct watched_page *wp_back;caddr_t wp_vaddr;uchar_t wp_prot;uchar_t wp_oprot;uchar_t wp_umap[3];uchar_t wp_kmap[3];ushort_t wp_flags;short wp_read;short wp_write;short wp_exec;};
struct au_attr_tok {uint_t mode;uint_t uid;uint_t gid;int fs;int32_t node;uint32_t dev;};
struct cachefs_fid {ushort_t cf_len;ino64_t cf_fileno;uint_t cf_gen;};
struct ipv6_member {DeviceIndex ipv6GroupMemberIfIndex;Ip6Address ipv6GroupMemberAddress;Counter ipv6GroupMemberRefCnt;};
struct kstat_timer {char name[31];uchar_t resv;u_longlong_t num_events;hrtime_t elapsed_time;hrtime_t min_time;hrtime_t max_time;hrtime_t start_time;hrtime_t stop_time;};
struct mdb_modinfo {ushort_t mi_dvers; mdb_dcmd_t *mi_dcmds; mdb_walker_t *mi_walkers;};
struct mode_format {struct mode_page mode_page;ushort_t tracks_per_zone;ushort_t alt_sect_zone;ushort_t alt_tracks_zone;ushort_t alt_tracks_vol;ushort_t sect_track;ushort_t data_bytes_sect;ushort_t interleave;ushort_t track_skew;ushort_t cylinder_skew;unsigned char ssec : 1;unsigned char hsec : 1;unsigned char rmb : 1;unsigned char surf : 1;unsigned char _reserved_ins : 1;unsigned char : 3;uchar_t reserved[2];};
struct module_info {ushort_t mi_idnum;char *mi_idname;ssize_t mi_minpsz;ssize_t mi_maxpsz;size_t mi_hiwat;size_t mi_lowat;};
struct npd_request {char *username;char *domain;char *key_type;struct npd_request___C3CD0BD37319ED44942FA197CF7B5408 user_pub_key;struct npd_request___04A93ECC78428ACBA0FDC65FE7C8FE57 npd_authpass;u_int ident;};
struct opaque_auth {enum_t oa_flavor;caddr_t oa_base;uint_t oa_length;};
struct ti_sync_ack {t_scalar_t PRIM_type;t_scalar_t TSDU_size;t_scalar_t ETSDU_size;t_scalar_t CDATA_size;t_scalar_t DDATA_size;t_scalar_t ADDR_size;t_scalar_t OPT_size;t_scalar_t TIDU_size;t_scalar_t SERV_type;t_scalar_t CURRENT_state;t_scalar_t PROVIDER_flag;t_uscalar_t tsa_qlen;uint32_t tsa_flags;};
struct vt_cpu_info {ulong_t cpu_online;ulong_t reserved;u_longlong_t bytes_flushed;ulong_t max_flushsize;ulong_t tbuf_size;ulong_t tbuf_lowater;char **tbuf_headp;char *tbuf_start;char *tbuf_end;char *tbuf_wrap;char *tbuf_head;char *tbuf_tail;char *tbuf_redzone;char *tbuf_overflow;uchar_t *real_event_map;uchar_t *event_map;struct file *trace_file;};
struct writeFile_t {OCF_File_t filename;int32_t offset;OCF_Any_t dataSource;};
struct _lwp_mutex {struct _lwp_mutex___mutex_flags flags;union _lwp_mutex___mutex_lock_un lock;upad64_t data;};
struct audio_info {audio_prinfo_t play;audio_prinfo_t record;uint_t monitor_gain;uchar_t output_muted;uchar_t ref_cnt;uchar_t _xxx[2];uint_t hw_features;uint_t sw_features;uint_t sw_features_enabled;};
struct firm_event {ushort_t id;uchar_t pair_type;uchar_t pair;int value;struct timeval time;};
struct llc1device {int llc1_status;krwlock_t llc1_rwlock;int llc1_minors;int llc1_multisize;llc_mac_info_t *llc1_mac_next;llc_mac_info_t *llc1_mac_prev;int llc1_ndevice;int llc1_nextppa;llc1_t *llc1_str_next;llc1_t *llc1_str_prev;};
struct log_result {nis_error lr_status;netobj lr_cookie;struct log_result___946B3E427CBAEF2C8E64E80E43621ACD lr_entries;};
typedef int mdb_dcmd_f(uintptr_t, uint_t, int,  mdb_arg_t *);
struct nd_opt_mtu {uint8_t nd_opt_mtu_type;uint8_t nd_opt_mtu_len;uint16_t nd_opt_mtu_reserved;uint32_t nd_opt_mtu_mtu;};
struct nfs_rwlock {int count;int waiters;kthread_t *owner;kmutex_t lock;kcondvar_t cv;};
struct nlm4_share {char *caller_name;netobj fh;netobj oh;fsh4_mode mode;fsh4_access access;};
struct nlm_holder {bool_t exclusive;int svid;netobj oh;uint_t l_offset;uint_t l_len;};
struct npd_update {u_int ident;npd_newpass xnewpass;passwd_info pass_info;};
struct p9000_info {ushort_t accessible_width;ushort_t accessible_height;ushort_t line_bytes;ushort_t hdb_capable;ushort_t vmsize;uchar_t boardrev;uchar_t slot;uint_t pad1;};
struct p9100_info {ushort_t accessible_width;ushort_t accessible_height;ushort_t line_bytes;ushort_t hdb_capable;ushort_t vmsize;uchar_t boardrev;uchar_t slot;uint_t pad1;};
struct readFile_t {OCF_File_t filename;int32_t offset;int32_t length;OCF_Any_t dataRead;};
struct romvec_obp {uint_t op_magic;uint_t op_romvec_version;uint_t op_plugin_version;uint_t op_mon_id;struct memlist **v_physmemory;struct memlist **v_virtmemory;struct memlist **v_availmemory;struct config_ops *op_config_ops;char **v_bootcmd;uint_t (*v_open)();uint_t (*v_close)();uint_t (*v_read_blocks)();uint_t (*v_write_blocks)();uint_t (*v_xmit_packet)();uint_t (*v_poll_packet)();uint_t (*v_read_bytes)();uint_t (*v_write_bytes)();uint_t (*v_seek)();uchar_t *v_insource;uchar_t *v_outsink;uchar_t (*v_getchar)();void (*v_putchar)();int (*v_mayget)();int (*v_mayput)();void (*v_fwritestr)();void (*op_boot)();int (*v_printf)();void (*op_enter)();int *op_milliseconds;void (*op_exit)();void (**op_vector_cmd)();void (*op_interpret)();struct bootparam **v_bootparam;uint_t (*v_mac_address)();char **op2_bootpath;char **op2_bootargs;int *op2_stdin;int *op2_stdout;int (*op2_phandle)();caddr_t (*op2_alloc)();void (*op2_free)();caddr_t (*op2_map)();void (*op2_unmap)();int (*op2_open)();uint_t (*op2_close)();int (*op2_read)();int (*op2_write)();int (*op2_seek)();void (*op2_chain)();void (*op2_release)();caddr_t (*op3_alloc)();int *v_reserved[14];void (*op_setcxsegmap)();int (*op3_startcpu)();int (*op3_stopcpu)();int (*op3_idlecpu)();int (*op3_resumecpu)();};
struct signData_t {OCF_KEYREF_t privateKeyRef;OCF_ALGO_t algorithm;OCF_Any_t dataToBeSigned;OCF_Any_t signedData;};
struct signHash_t {OCF_KEYREF_t privateKeyRef;OCF_ALGO_t algorithm;OCF_Any_t hashedData;OCF_Any_t signedData;};
struct tl_credopt {uid_t tc_uid;gid_t tc_gid;uid_t tc_ruid;gid_t tc_rgid;uid_t tc_suid;gid_t tc_sgid;uint_t tc_ngroups;};
struct _kcpc_ctx {cpc_event_t c_event;uint64_t c_rawtick;uint64_t c_rawpic;struct _kcpc_ctx *c_next;uint_t c_flags;};
struct _sobj_ops {syncobj_t sobj_type;kthread_t *(*sobj_owner)();void (*sobj_unsleep)(kthread_t *);void (*sobj_change_pri)(kthread_t *, pri_t, pri_t *);};
struct callb_cpr {kmutex_t *cc_lockp;char cc_events;callb_id_t cc_id;kcondvar_t cc_callb_cv;kcondvar_t cc_stop_cv;};
struct dacf_rule {char *r_devspec_data;char *r_module;char *r_opset;dacf_opid_t r_opid;uint_t r_opts;uint_t r_refs;dacf_arg_t *r_args;};
struct db_result {db_status status;db_next_desc nextinfo;struct db_result___B843AB932F73FFE0B886650421EE9A7B objects;int ticks;};
struct door_cred {uid_t dc_euid;gid_t dc_egid;uid_t dc_ruid;gid_t dc_rgid;pid_t dc_pid;int dc_resv[4];};
struct dump_args {nis_name da_dir;uint32_t da_time;struct dump_args___00C533AE8545A66FA38641508A3DC473 da_cbhost;};
struct ea_object {ea_object_type_t eo_type;union ea_object___0370017D977B975B2DEED3572138FADD eo_u;struct ea_object *eo_next;ea_catalog_t eo_catalog;};
struct ether_arp {struct arphdr ea_hdr;struct ether_addr arp_sha;uchar_t arp_spa[4];struct ether_addr arp_tha;uchar_t arp_tpa[4];};
struct fieldnode {int status;int rows;int cols;int frow;int fcol;int drows;int dcols;int maxgrow;int nrow;int nbuf;int just;int page;int index;int pad;chtype fore;chtype back;OPTIONS opts;struct fieldnode *snext;struct fieldnode *sprev;struct fieldnode *link;struct formnode *form;FIELDTYPE *type;char *arg;char *buf;char *usrptr;};
struct icmp6_hdr {uint8_t icmp6_type;uint8_t icmp6_code;uint16_t icmp6_cksum;union icmp6_hdr___85A0B7966B981BE593FDADBE0B8685D7 icmp6_dataun;};
struct ip_member {DeviceName ipGroupMemberIfIndex;IpAddress ipGroupMemberAddress;Counter ipGroupMemberRefCnt;};
struct ml_odunit {uint32_t od_version;uint32_t od_badlog;uint32_t od_logalloc;uint32_t od_maxtransfer;uint32_t od_devbsize;int32_t od_bol_lof;int32_t od_eol_lof;uint32_t od_requestsize;uint32_t od_statesize;uint32_t od_logsize;int32_t od_statebno;int32_t od_logbno;int32_t od_head_lof;uint32_t od_head_ident;int32_t od_tail_lof;uint32_t od_tail_ident;uint32_t od_chksum;uint32_t od_head_tid;int32_t od_debug;struct timeval od_timestamp;};
struct nlm4_lock {char *caller_name;netobj fh;netobj oh;int32 svid;uint64 l_offset;uint64 l_len;};
struct nlm_share {char *caller_name;netobj fh;netobj oh;fsh_mode mode;fsh_access access;};
struct readKey_t {OCF_KEYREF_t publicKeyRef;OCF_ALGO_t algorithm;OCF_KEY_t publicKey;};
struct rpcb_stat {rpcbs_proc info;int setinfo;int unsetinfo;rpcbs_addrlist_ptr addrinfo;rpcbs_rmtcalllist_ptr rmtinfo;};
struct sadb_sens {uint16_t sadb_sens_len;uint16_t sadb_sens_exttype;uint32_t sadb_sens_dpd;uint8_t sadb_sens_sens_level;uint8_t sadb_sens_sens_len;uint8_t sadb_sens_integ_level;uint8_t sadb_sens_integ_len;uint32_t sadb_sens_reserved;};
struct sc_shared {uint_t sc_state;processorid_t sc_cpu;int sc_priority;sc_public_t sc_preemptctl;};
struct ses_ioctl {uint32_t page_size;uint8_t page_code;caddr_t page;};
struct turnstile {turnstile_t *ts_next;turnstile_t *ts_free;void *ts_sobj;int ts_waiters;pri_t ts_epri;struct _kthread *ts_inheritor;turnstile_t *ts_prioinv;sleepq_t ts_sleepq[2];};
struct uscsi_cmd {int uscsi_flags;short uscsi_status;short uscsi_timeout;caddr_t uscsi_cdb;caddr_t uscsi_bufaddr;size_t uscsi_buflen;size_t uscsi_resid;uchar_t uscsi_cdblen;uchar_t uscsi_rqlen;uchar_t uscsi_rqstatus;uchar_t uscsi_rqresid;caddr_t uscsi_rqbuf;void *uscsi_reserved_5;};
struct __ns_msg { uchar_t *_msg; uchar_t *_eom;uint16_t _id;uint16_t _flags;uint16_t _counts[4]; uchar_t *_sections[4];ns_sect _sect;int _rrnum; uchar_t *_ptr;};
struct anon_map {kmutex_t serial_lock;kmutex_t lock;size_t size;struct anon_hdr *ahp;size_t swresv;uint_t refcnt;void *a_resv;};
struct apcommon {uint_t apc_cmd;major_t apc_major;minor_t apc_minor;minor_t apc_lastminor;uint_t apc_npush;};
struct bpp_regs {uint_t dma_csr;uint_t dma_addr;uint_t dma_bcnt;uint_t unused;ushort_t hw_config;ushort_t op_config;uchar_t data;uchar_t trans_cntl;uchar_t out_pins;uchar_t in_pins;ushort_t int_cntl;};
struct cg6_info {ushort_t accessible_width;ushort_t accessible_height;ushort_t line_bytes;ushort_t hdb_capable;ushort_t vmsize;uchar_t boardrev;uchar_t slot;uint_t pad1;};
struct cistpl_t {cisdata_t type;cisdata_t len;cisdata_t *data;union cistpl_t___C4278FD82B146D460B453B2BB46DF7C8 read;uint32_t flags;uint32_t offset;struct cistpl_t *prev;struct cistpl_t *next;};
struct door_arg {char *data_ptr;size_t data_size;door_desc_t *desc_ptr;uint_t desc_num;char *rbuf;size_t rsize;};
struct dvpoll32 {caddr32_t dp_fds;uint32_t dp_nfds;int32_t dp_timeout;};
struct fifolock {kmutex_t flk_lock;int flk_ref;short flk_ocsync;kcondvar_t flk_wait_cv;uint_t flk_fill[4];};
struct hdk_diag {ushort_t hdkd_errcmd;daddr_t hdkd_errsect;uchar_t hdkd_errno;uchar_t hdkd_severe;};
struct id_space {id_t is_low;id_t is_high;id_t is_next;kmutex_t is_mutex;vmem_t *is_vmem;};
struct iemcaddr {struct iecb iemc_cb;ieint_t iemc_count;uchar_t iemc_addr[384];};
struct ip6_frag {uint8_t ip6f_nxt;uint8_t ip6f_reserved;uint16_t ip6f_offlg;uint32_t ip6f_ident;};
struct isp_mbox {ksema_t mbox_sema;uchar_t mbox_flags;struct isp_mbox_cmd mbox_cmd;};
struct kstat_io {u_longlong_t nread;u_longlong_t nwritten;uint_t reads;uint_t writes;hrtime_t wtime;hrtime_t wlentime;hrtime_t wlastupdate;hrtime_t rtime;hrtime_t rlentime;hrtime_t rlastupdate;uint_t wcnt;uint_t rcnt;};
struct link_obj {zotypes li_rtype;struct link_obj___6E2208C80A69EAD3D69988E63D048B29 li_attrs;nis_name li_name;};
struct nfsfattr {enum nfsftype na_type;uint32_t na_mode;uint32_t na_nlink;uint32_t na_uid;uint32_t na_gid;uint32_t na_size;uint32_t na_blocksize;uint32_t na_rdev;uint32_t na_blocks;uint32_t na_fsid;uint32_t na_nodeid;struct nfs2_timeval na_atime;struct nfs2_timeval na_mtime;struct nfs2_timeval na_ctime;};
struct prewrite {uint32_t pw_bufsize;int32_t pw_blkno;uint16_t pw_secmap;uint16_t pw_flags;};
struct qec_soft {uint_t qs_nchan;uint_t qs_memsize;void (**qs_intr_func)();void **qs_intr_arg;uint_t (*qs_reset_func)();void *qs_reset_arg;int (*qs_init_func)();dev_info_t *qs_init_arg;ddi_iblock_cookie_t qs_cookie;struct qec_global *qs_globregp;int qe_intr_flag;};
struct rl_entry {unsigned int rl_attrc : 1;unsigned int rl_fsck : 1;unsigned int rl_local : 1;ino64_t rl_fsid;ino64_t rl_fileno;enum cachefs_rl_type rl_current;uint_t rl_fwd_idx;uint_t rl_bkwd_idx;};
struct sadb_msg {uint8_t sadb_msg_version;uint8_t sadb_msg_type;uint8_t sadb_msg_errno;uint8_t sadb_msg_satype;uint16_t sadb_msg_len;uint16_t sadb_msg_reserved;uint32_t sadb_msg_seq;uint32_t sadb_msg_pid;};
struct spt_data {struct vnode *vp;struct anon_map *amp;size_t realsize;struct page **ppa;uint_t prot;kmutex_t lock;size_t pcachecnt;};
struct typenode {int status;int ref;struct typenode *left;struct typenode *right;PTF_charP makearg;PTF_charP copyarg;PTF_void freearg;PTF_int fcheck;PTF_int ccheck;PTF_int next;PTF_int prev;};
struct __ns_rr {char name[1025];uint16_t type;uint16_t cl;uint32_t ttl;uint16_t rdlength; uchar_t *rdata;};
struct _rwlock {int32_t readers;uint16_t type;uint16_t magic;uint16_t pad1[4];upad64_t pad10[2];uint16_t pad2[4];upad64_t pad20;uint16_t pad3[4];upad64_t pad30;};
struct _win_st {short _cury;short _curx;short _maxy;short _maxx;short _begy;short _begx;char _flags;short _yoffset;char _clear;char _leave;char _immed;char _sync;WINDOW *_padwin;_ochtype **_y16;short *_firstch;short *_lastch;short _tmarg;short _bmarg;unsigned int _scroll : 1;unsigned int _use_idl : 1;unsigned int _use_keypad : 1;unsigned int _notimeout : 1;unsigned int _use_idc : 1;chtype _attrs;chtype _bkgd;int _delay;short _ndescs;short _parx;short _pary;WINDOW *_parent;chtype **_y;short _nbyte;short _index;char _waitc[4];char _insmode;};
struct au_buff {caddr_t buf;struct au_buff *next_buf;struct au_buff *next_rec;ushort_t rec_len;uchar_t len;uchar_t flag;};
struct bootops {uint_t bsys_version;struct bootops *bsys_super;struct bsys_mem *boot_mem;uint32_t bsys_pad2[2];uint64_t bsys_1275_call;uint32_t bsys_pad1[7];uint32_t bsys_printf;};
struct dacf_op {dacf_opid_t op_id;int (*op_func)(dacf_infohdl_t, dacf_arghdl_t, int);};
struct di_node {di_off_t self;di_off_t parent;di_off_t child;di_off_t sibling;di_off_t next;di_off_t node_name;di_off_t address;di_off_t bind_name;di_off_t compat_names;di_off_t minor_data;di_off_t drv_prop;di_off_t sys_prop;di_off_t hw_prop;di_off_t parent_data;di_off_t driver_data;di_off_t devid;di_off_t pm_info;int compat_length;int drv_major;int instance;int nodeid;ddi_node_class_t node_class;int attributes;uint_t state;uint_t node_state;};
struct di_prop {di_off_t self;di_off_t next;di_off_t prop_name;di_off_t prop_data;major_t dev_major;minor_t dev_minor;int prop_flags;int prop_len;int prop_list;};
struct execenv {caddr_t ex_brkbase;size_t ex_brksize;vnode_t *ex_vp;short ex_magic;};
struct fcp_cmd {fcp_ent_addr_t fcp_ent_addr;fcp_cntl_t fcp_cntl;uchar_t fcp_cdb[16];int fcp_data_len;};
struct hrmstat {struct as *hrm_as;uintptr_t hrm_base;ushort_t hrm_id;struct hrmstat *hrm_anext;struct hrmstat *hrm_hnext;uchar_t hrm_bits[16];};
struct icb_tag {uint32_t itag_prnde;uint16_t itag_strategy;uint16_t itag_param;uint16_t itag_max_ent;uint8_t itag_rsvd;uint8_t itag_ftype;uint32_t itag_lb_loc;uint16_t itag_lb_prn;uint16_t itag_flags;};
struct if_data {uchar_t ifi_type;uchar_t ifi_addrlen;uchar_t ifi_hdrlen;uint_t ifi_mtu;uint_t ifi_metric;uint_t ifi_baudrate;uint_t ifi_ipackets;uint_t ifi_ierrors;uint_t ifi_opackets;uint_t ifi_oerrors;uint_t ifi_collisions;uint_t ifi_ibytes;uint_t ifi_obytes;uint_t ifi_imcasts;uint_t ifi_omcasts;uint_t ifi_iqdrops;uint_t ifi_noproto;struct timeval ifi_lastchange;};
struct ipd_str {struct ipd_str *st_next;queue_t *st_rq;struct ipd_softc *st_ifp;uint_t st_state;uint_t st_sap;minor_t st_minor;uint_t dst;char st_type;char st_raw;char st_all;};
struct la_logi {unsigned int code;common_svc_t common_service;la_wwn_t nport_ww_name;la_wwn_t node_ww_name;svc_param_t class_1;svc_param_t class_2;svc_param_t class_3;};
struct lvid_iu {regid_t lvidiu_regid;uint32_t lvidiu_nfiles;uint32_t lvidiu_ndirs;uint16_t lvidiu_mread;uint16_t lvidiu_mwrite;uint16_t lvidiu_maxwr;};
struct modinfo {int mi_info;int mi_state;int mi_id;int mi_nextid;caddr_t mi_base;size_t mi_size;int mi_rev;int mi_loadcnt;char mi_name[32];struct modspecific_info mi_msinfo[10];};
struct prasmap {uintptr_t pr_vaddr;size_t pr_npage;char pr_mapname[64];offset_t pr_offset;int pr_mflags;int pr_pagesize;int pr_shmid;int pr_filler[1];};
struct procset {idop_t p_op;idtype_t p_lidtype;id_t p_lid;idtype_t p_ridtype;id_t p_rid;};
struct prusage {id_t pr_lwpid;int pr_count;timestruc_t pr_tstamp;timestruc_t pr_create;timestruc_t pr_term;timestruc_t pr_rtime;timestruc_t pr_utime;timestruc_t pr_stime;timestruc_t pr_ttime;timestruc_t pr_tftime;timestruc_t pr_dftime;timestruc_t pr_kftime;timestruc_t pr_ltime;timestruc_t pr_slptime;timestruc_t pr_wtime;timestruc_t pr_stoptime;timestruc_t filltime[6];ulong_t pr_minf;ulong_t pr_majf;ulong_t pr_nswap;ulong_t pr_inblk;ulong_t pr_oublk;ulong_t pr_msnd;ulong_t pr_mrcv;ulong_t pr_sigs;ulong_t pr_vctx;ulong_t pr_ictx;ulong_t pr_sysc;ulong_t pr_ioch;ulong_t filler[10];};
struct s3_info {ushort_t accessible_width;ushort_t accessible_height;ushort_t line_bytes;ushort_t hdb_capable;ushort_t vmsize;uchar_t boardrev;uchar_t slot;uint_t pad1;};
struct sadb_sa {uint16_t sadb_sa_len;uint16_t sadb_sa_exttype;uint32_t sadb_sa_spi;uint8_t sadb_sa_replay;uint8_t sadb_sa_state;uint8_t sadb_sa_auth;uint8_t sadb_sa_encrypt;uint32_t sadb_sa_flags;};
struct secattr {uint32 mask;int aclcnt;struct secattr___AC4F1B810FD413B8B20095E4821CDF90 aclent;int dfaclcnt;struct secattr___BBC7B5EFA13BC05BE06C962A868FC99E dfaclent;};
struct shrlock {short s_access;short s_deny;int32_t s_sysid;pid_t s_pid;int s_own_len;caddr_t s_owner;};
struct ufs_acl {union ufs_acl___F7724D0603D30FF994A85BCBA2AD5333 acl_un;o_mode_t acl_perm;uid_t acl_who;};
struct __auth {struct opaque_auth ah_cred;struct opaque_auth ah_verf;union des_block ah_key;struct __auth__auth_ops *ah_ops;caddr_t ah_private;};
struct arct_s {pfi_t arct_pfi;uint32_t arct_cmd;int arct_min_len;boolean_t arct_ioctl_aware;boolean_t arct_priv_cmd;};
struct exdata {struct vnode *vp;size_t ux_tsize;size_t ux_dsize;size_t ux_bsize;size_t ux_lsize;int ux_nshlibs;short ux_mach;short ux_mag;off_t ux_toffset;off_t ux_doffset;off_t ux_loffset;caddr_t ux_txtorg;caddr_t ux_datorg;caddr_t ux_entloc;};
struct filock {kcondvar_t cv;struct flock set;struct filock___667AC850CFE8393E0756DB4723116C22 stat;struct filock *prev;struct filock *next;};
struct iaproc {int ia_timeleft;pri_t ia_cpupri;pri_t ia_uprilim;pri_t ia_upri;pri_t ia_umdpri;char ia_nice;unsigned char ia_flags;short ia_dispwait;kthread_t *ia_tp;int *ia_pstatp;pri_t *ia_pprip;uint_t *ia_pflagp;struct iaproc *ia_next;struct iaproc *ia_prev;int ia_mode;};
struct ieconf {struct iecb ieconf_cb;uchar_t ieconf_bytes;uchar_t ieconf_fifolim;ushort_t ieconf_data0;uchar_t ieconf_data1;uchar_t ieconf_space;uchar_t ieconf_slttml8;uchar_t ieconf_data2;ushort_t ieconf_data3;uchar_t ieconf_minfrm;uchar_t ieconf_pad;};
struct ieiscp {uchar_t ieiscp_busy;uchar_t ieiscp_unused;ieoff_t ieiscp_scb;ieaddr_t ieiscp_cbbase;};
struct iocblk {int ioc_cmd;cred_t *ioc_cr;uint_t ioc_id;size_t ioc_count;int ioc_error;int ioc_rval;int ioc_fill1;uint_t ioc_flag;int ioc_filler[2];};
struct ip_m_s {t_uscalar_t ip_m_mac_type;int ip_m_type;t_uscalar_t ip_m_sap;t_scalar_t ip_m_sap_length;t_scalar_t ip_m_brdcst_addr_length;uchar_t *ip_m_brdcst_addr;};
struct ipha_s {uint8_t ipha_version_and_hdr_length;uint8_t ipha_type_of_service;uint16_t ipha_length;uint16_t ipha_ident;uint16_t ipha_fragment_offset_and_flags;uint8_t ipha_ttl;uint8_t ipha_protocol;uint16_t ipha_hdr_checksum;ipaddr_t ipha_src;ipaddr_t ipha_dst;};
struct modctl {struct modctl *mod_next;struct modctl *mod_prev;int mod_id;void *mod_mp;kthread_t *mod_inprogress_thread;struct mod_modinfo *mod_modinfo;struct modlinkage *mod_linkage;char *mod_filename;char *mod_modname;int mod_busy;int mod_stub;char mod_loaded;char mod_installed;char mod_loadflags;char mod_want;struct modctl_list *mod_requisites;struct modctl_list *mod_dependents;int mod_loadcnt;char *mod_text;size_t mod_text_size;};
struct pc_fid {ushort_t pcfid_len;uint32_t pcfid_block;uint16_t pcfid_offset;uint16_t pcfid_ctime;};
struct rquota {int32_t rq_bsize;bool_t rq_active;uint32_t rq_bhardlimit;uint32_t rq_bsoftlimit;uint32_t rq_curblocks;uint32_t rq_fhardlimit;uint32_t rq_fsoftlimit;uint32_t rq_curfiles;uint32_t rq_btimeleft;uint32_t rq_ftimeleft;};
struct smfree {struct smap *sm_free;kmutex_t sm_mtx;kcondvar_t sm_free_cv;ushort_t sm_want;};
struct strtty {struct t_buf t_in;struct t_buf t_out;queue_t *t_rdqp;mblk_t *t_ioctlp;mblk_t *t_lbuf;int t_dev;int t_iflag;int t_oflag;int t_cflag;int t_lflag;short t_state;char t_line;char t_dstat;unsigned char t_cc[19];};
struct tcphdr {uint16_t th_sport;uint16_t th_dport;tcp_seq th_seq;tcp_seq th_ack;unsigned int th_off : 4;unsigned int th_x2 : 4;uchar_t th_flags;uint16_t th_win;uint16_t th_sum;uint16_t th_urp;};
struct tsproc {int ts_timeleft;uint_t ts_dispwait;pri_t ts_cpupri;pri_t ts_uprilim;pri_t ts_upri;pri_t ts_umdpri;char ts_nice;char ts_boost;unsigned char ts_flags;kthread_t *ts_tp;struct tsproc *ts_next;struct tsproc *ts_prev;};
struct udphdr {in_port_t uh_sport;in_port_t uh_dport;int16_t uh_ulen;uint16_t uh_sum;};
struct _LCLd {char *locale;void *db;LclFormInfo *form_info;LclIconvInfo *iconv_info;LclCharsetInfo *cs_info;};
struct _LCTd {LCLd lcld;LclFormAttrInfo *attr_info;LclContents *contents;};
struct _sema {uint32_t count;uint16_t type;uint16_t magic;upad64_t pad1[3];upad64_t pad2[2];};
struct delta {int64_t d_mof;int32_t d_nb;delta_t d_typ;};
struct futmp {char ut_user[8];char ut_id[4];char ut_line[12];int16_t ut_pid;int16_t ut_type;struct futmp___11610CE8875B9446FC755A3DED782E56 ut_exit;time32_t ut_time;};
struct ierfd {ushort_t ierfd_status;uchar_t ierfd_pad;uchar_t ierfd_command;ieoff_t ierfd_next;ieoff_t ierfd_rbd;uchar_t ierfd_dhost[6];uchar_t ierfd_shost[6];ushort_t ierfd_type;ushort_t pad;};
struct iescb {ushort_t iescb_status;ushort_t iescb_cmd;ieoff_t iescb_cbl;ieoff_t iescb_rfa;ieint_t iescb_crcerrs;ieint_t iescb_alnerrs;ieint_t iescb_rscerrs;ieint_t iescb_ovrnerrs;};
struct iescp {ushort_t iescp_unused0;uchar_t iescp_sysbus;uchar_t iescp_unused1[5];ieaddr_t iescp_iscp;};
struct ietbd {uchar_t ietbd_cntlo;uchar_t ietbd_eofcnthi;ieoff_t ietbd_next;ieaddr_t ietbd_buf;};
struct ietcb {ushort_t ietcb_status;ushort_t ietcb_command;ieoff_t ietcb_next;ieoff_t ietcb_tbd;uchar_t ietcb_dhost[6];ushort_t ietcb_type;};
struct iu_ea {uint32_t iuea_atype;uint8_t iuea_astype;uint8_t iuea_res[3];uint32_t iuea_attr_len;uint32_t iuea_iu_len;regid_t iuea_ii;uint8_t iuea_iu[4];};
struct lsrec {struct lsrec *ls_next;uintptr_t ls_lock;uintptr_t ls_caller;uint32_t ls_count;uint32_t ls_event;uintptr_t ls_refcnt;uint64_t ls_time;uint32_t ls_hist[64];uintptr_t ls_stack[50];};
struct prmap {uintptr_t pr_vaddr;size_t pr_size;char pr_mapname[64];offset_t pr_offset;int pr_mflags;int pr_pagesize;int pr_shmid;int pr_filler[1];};
struct tcpcb {struct tcpiphdr *seg_next;struct tcpiphdr *seg_prev;short t_state;short t_timer[4];short t_rxtshift;short t_rxtcur;short t_dupacks;ushort_t t_maxseg;char t_force;uchar_t t_flags;struct tcpiphdr *t_template;struct inpcb *t_inpcb;tcp_seq snd_una;tcp_seq snd_nxt;tcp_seq snd_up;tcp_seq snd_wl1;tcp_seq snd_wl2;tcp_seq iss;ushort_t snd_wnd;ushort_t rcv_wnd;tcp_seq rcv_nxt;tcp_seq rcv_up;tcp_seq irs;tcp_seq rcv_adv;tcp_seq snd_max;ushort_t snd_cwnd;ushort_t snd_ssthresh;short t_idle;short t_rtt;tcp_seq t_rtseq;short t_srtt;short t_rttvar;ushort_t max_rcvd;ushort_t max_sndwnd;char t_oobflags;char t_iobc;};
struct utmpx {char ut_user[32];char ut_id[4];char ut_line[32];pid_t ut_pid;short ut_type;struct exit_status ut_exit;struct timeval ut_tv;int ut_session;int pad[5];short ut_syslen;char ut_host[257];};
struct cred {uint_t cr_ref;uid_t cr_uid;gid_t cr_gid;uid_t cr_ruid;gid_t cr_rgid;uid_t cr_suid;gid_t cr_sgid;uint_t cr_ngroups;gid_t cr_groups[1];};
struct prof {void *pr_base;uintptr_t pr_off;size_t pr_size;uint32_t pr_scale;int pr_samples;};
struct tfid {uint16_t tfid_len;ino32_t tfid_ino;int32_t tfid_gen;};
struct user {gregset_t u_reg;greg_t *u_ar0;char u_psargs[80];void (**u_signal)();int u_code;caddr_t u_addr;};
struct vtoc {unsigned int v_bootinfo[3];unsigned int v_sanity;unsigned int v_version;char v_volume[8];ushort_t v_sectorsz;ushort_t v_nparts;unsigned int v_reserved[10];struct partition v_part[8];time_t timestamp[8];char v_asciilabel[128];};
struct fpu {union fpu___5FAD1835C40B8F1B9C5FF4A2CD2D32A1 fpu_fr;struct fq *fpu_q;uint32_t fpu_fsr;uint8_t fpu_qcnt;uint8_t fpu_q_entrysize;uint8_t fpu_en;};
struct log {queue_t *log_q;log_filter_t *log_wanted;mblk_t *log_data;short log_flags;int log_overflow;};
struct seg {caddr_t s_base;size_t s_size;struct as *s_as;seg_next s_next;struct seg *s_prev;struct seg_ops *s_ops;void *s_data;};
struct tag {uint16_t tag_id;uint16_t tag_desc_ver;uint8_t tag_cksum;uint8_t tag_res;uint16_t tag_sno;uint16_t tag_crc;uint16_t tag_crc_len;uint32_t tag_loc;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_missing {minor_t viem_unit;bool_t viem_ndelay;uid_t viem_user;dev_t viem_tty;};
union cachefs_req___5AF54FD280CEF09DDCE8149009F1980F {struct cachefs_fs_sync_req cu_fs_sync;struct cachefs_idle_req cu_idle;struct cachefs_putpage_req cu_putpage;struct cachefs_populate_req cu_populate;};
union k_siginfo___804257DC7E857FCD4172ACB0D5A910E9 {struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___E77A5845F57C2E0E9F7B0E52AACFC772 __proc;struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___F8DD959EF7757CB3FE124040C2995881 __fault;struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___EF0AB624753C0265765781C86414B739 __file;struct k_siginfo___804257DC7E857FCD4172ACB0D5A910E9___C50A7FE09995E3AE62471BF9E2207266 __prof;};
struct dbri_md___3585FD5177D2C3180482D2FE90B1A361 {unsigned int eof : 1;unsigned int com : 1;unsigned int : 1;unsigned int cnt : 13;unsigned int : 8;unsigned int status : 8;unsigned int bufp;caddr32_t fp;unsigned int : 16;unsigned int fint : 1;unsigned int mint : 1;unsigned int : 1;unsigned int bcnt : 13;};
struct dbri_md___5BDDECA1D345617A19D694F0479F5E14 {unsigned int eof : 1;unsigned int dcrc : 1;unsigned int : 1;unsigned int cnt : 13;unsigned int fint : 1;unsigned int mint : 1;unsigned int idl : 1;unsigned int fcnt : 13;unsigned int bufp;caddr32_t fp;uint_t status;};
union ea_item___4B8FAD181399369BBD31D3D213262D6C {uint8_t ei_u_uint8;uint16_t ei_u_uint16;uint32_t ei_u_uint32;uint64_t ei_u_uint64;double ei_u_double;char *ei_u_string;void *ei_u_object;void *ei_u_raw;};
union rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF {struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___CDFB08817BACAD3B52BC51E53A98F9E8 RE_err;enum auth_stat RE_why;struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___D52F10176CE5E6769EE83800681284AC RE_vers;struct rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF___C0A0CADF59D9B7AA8DD004285CB4071F RE_lb;};
union siginfo___61EAF0F09D3366CB297160630E2CDB63 {int __pad[29];struct siginfo___61EAF0F09D3366CB297160630E2CDB63___B04DB3B3CC2294C7D842DC1A71FF04F2 __proc;struct siginfo___61EAF0F09D3366CB297160630E2CDB63___F8DD959EF7757CB3FE124040C2995881 __fault;struct siginfo___61EAF0F09D3366CB297160630E2CDB63___EF0AB624753C0265765781C86414B739 __file;struct siginfo___61EAF0F09D3366CB297160630E2CDB63___6967CB540280E7650496FA35CF8D6785 __prof;};
struct _00ED80C671E56402DFDA98FF57A0F9A3 {short nmethods;short ndefined;char *(*nl_langinfo)(_LC_time_t *, nl_item);size_t (*strftime)(_LC_time_t *, char *, size_t,  char *,  struct tm *);char *(*strptime)(_LC_time_t *,  char *,  char *, struct tm *);struct tm *(*getdate)(_LC_time_t *,  char *);size_t (*__wcsftime_xpg5)(_LC_time_t *, int *, size_t,  char *,  struct tm *);_LC_methods_func_t placeholders[5];};
struct _160641F2D897670075418D2E6B733231 {unsigned char e_ident[16];Elf32_Half e_type;Elf32_Half e_machine;Elf32_Word e_version;Elf32_Addr e_entry;Elf32_Off e_phoff;Elf32_Off e_shoff;Elf32_Word e_flags;Elf32_Half e_ehsize;Elf32_Half e_phentsize;Elf32_Half e_phnum;Elf32_Half e_shentsize;Elf32_Half e_shnum;Elf32_Half e_shstrndx;};
struct _19E1246DE095363392431173B011D54A {uint_t msg;enum ipd_iftype iftype;uint_t ifunit;struct sockaddr sa;struct timeval timeout;struct timeval act_time;};
struct _31DC1A9A30C8BE83503485AFF4563DAB {unsigned char e_ident[16];Elf64_Half e_type;Elf64_Half e_machine;Elf64_Word e_version;Elf64_Addr e_entry;Elf64_Off e_phoff;Elf64_Off e_shoff;Elf64_Word e_flags;Elf64_Half e_ehsize;Elf64_Half e_phentsize;Elf64_Half e_phnum;Elf64_Half e_shentsize;Elf64_Half e_shnum;Elf64_Half e_shstrndx;};
struct _458B8F1C203FF7E73654EA82F46BE387 {short nmethods;short ndefined;char *(*nl_langinfo)(_LC_monetary_t *, nl_item);ssize_t (*strfmon)(_LC_monetary_t *, char *, size_t,  char *, va_list);_LC_methods_func_t placeholders[5];};
struct _501B9B174B09982FAB310FE6A591F791 {uint_t ppa;uint_t cmd;uchar_t sap;ushort_t con;llc_con_parms_t parms;};
struct _61B607A2274ED5109A268B0B2173104D {Elf64_Word p_type;Elf64_Word p_flags;Elf64_Off p_offset;Elf64_Addr p_vaddr;Elf64_Addr p_paddr;Elf64_Xword p_filesz;Elf64_Xword p_memsz;Elf64_Xword p_align;};
struct _6C157D281FCCF3AD18E5920BAFADC6E6 {Elf64_Word sh_name;Elf64_Word sh_type;Elf64_Xword sh_flags;Elf64_Addr sh_addr;Elf64_Off sh_offset;Elf64_Xword sh_size;Elf64_Word sh_link;Elf64_Word sh_info;Elf64_Xword sh_addralign;Elf64_Xword sh_entsize;};
struct _7963ED2253978A4E491ADF870F9A304B {Elf64_Word st_name;unsigned char st_info;unsigned char st_other;Elf64_Half st_shndx;Elf64_Addr st_value;Elf64_Xword st_size;};
struct _7DF901F2330FED44ED065D8472D22EDC {struct _7DF901F2330FED44ED065D8472D22EDC__svc_auth_ops svc_ah_ops;caddr_t svc_ah_private;svc_rpc_gss_parms_t svc_gss_parms;rpc_gss_rawcred_t raw_cred;};
struct _9243195F0116F1DC43EDD9D2343B9004 {uint_t msg;enum ipd_iftype iftype;uint_t ifunit;struct sockaddr sa;t_uscalar_t reason;};
struct _BDBAD8C22C982B900870BBCDB0629DB6 {Elf_Void *d_buf;Elf_Type d_type;size_t d_size;off_t d_off;size_t d_align;unsigned int d_version;};
struct _D76263573A98FEFDCCEEF233874FDEC5 {ushort_t pppLinkStatusIndex;uchar_t pppLinkVersion;uchar_t pppLinkCurrentState;uchar_t pppLinkPreviousState;uchar_t pppLinkQuality;timestruc_t pppLinkChangeTime;uint_t pppLinkMagicNumber;uint_t pppLinkLocalQualityPeriod;uint_t pppLinkRemoteQualityPeriod;uchar_t pppLinkProtocolCompression;uchar_t pppLinkACCompression;uchar_t pppLinkMeasurementsValid;uchar_t pppLinkPhysical;};
struct _D8694504BF76A56B9D38A17C122FF30C {gregset_t gregs;gwindows_t *gwins;fpregset_t fpregs;xrs_t xrs;int filler[19];};
struct _FF2DD7BE9DD2B738A1C99E37059CE979 {boolean_t copy;LclMailType mail_type;LctNEAttribute type;LctNEAttribute form;char *header;char *body;char *plaintext;char *taggedtext;char *buf;size_t buf_len;};
typedef FN_ctx_svc_t *(*FN_ctx_svc_from_ref_addr_func)( FN_ref_addr_t *,  FN_ref_t *, unsigned int, FN_status_t *);
struct cachefs_log_csymlink_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;int size;};
typedef FN_ref_t *(*FN_ctx_cnsvc_lookup_func_t)(FN_ctx_svc_t *ctx, FN_composite_name_t *name, unsigned int lookup_flag, FN_status_cnsvc_t *s);
struct cachefs_log_filldir_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;int size;};
struct cachefs_log_nocache_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;};
typedef FN_ref_t *(*FN_ctx_asvc_lookup_func_t)(FN_ctx_svc_t *ctx, FN_string_t *name, unsigned int lookup_flag, FN_status_asvc_t *s);
typedef FN_ref_t *(*FN_ctx_csvc_lookup_func_t)(FN_ctx_svc_t *ctx, FN_string_t *name, unsigned int lookup_flag, FN_status_csvc_t *s);
typedef FN_ref_t *(*FN_ctx_psvc_lookup_func_t)(FN_ctx_svc_t *ctx, FN_composite_name_t *name, unsigned int lookup_flag, FN_status_psvc_t *s);
struct cachefs_log_mount_record {int type;int error;cfs_time_t time;uint64_t vfsp;uint_t flags;uint_t popsize;uint_t fgsize;ushort_t pathlen;ushort_t cacheidlen;char path[2];};
struct cachefsio_pushback_arg {cfs_cid_t pb_cid;cfs_fid_t pb_fid;cred_t pb_cred;gid_t pb_groups[15];};
struct cachefsio_rename_arg {cfs_fid_t rn_olddir;char rn_oldname[256];cfs_fid_t rn_newdir;char rn_newname[256];cfs_cid_t rn_cid;int rn_del_getctime;cfs_cid_t rn_del_cid;cred_t rn_cred;gid_t rn_groups[15];};
struct nfslog_record_header {uint32_t rh_reclen;uint32_t rh_rec_id;uint32_t rh_prognum;uint32_t rh_procnum;uint32_t rh_version;uint32_t rh_auth_flavor;timestruc32_t rh_timestamp;uid_t rh_uid;gid_t rh_gid;};
struct cfs_dlog_setsecattr {cfs_cid_t dl_cid;cfs_dlog_tm_t dl_times;uint_t dl_mask;int dl_aclcnt;int dl_dfaclcnt;cred_t dl_cred;char dl_buffer[60];};
struct mdi_cursor_address {ulong_t curs_cpl0[32];ulong_t curs_cpl1[32];uchar_t curs_ccr;uchar_t curs_pad0[3];ushort_t curs_xcu;ushort_t curs_ycu;uint_t curs_cc1;uint_t curs_cc2;uint_t curs_pad1[444];ulong_t curs_cpl0i[32];ulong_t curs_cpl1i[32];};
struct mib2_ipv6AddrEntry {DeviceName ipv6AddrIfIndex;Ip6Address ipv6AddrAddress;uint_t ipv6AddrPfxLength;uint_t ipv6AddrType;uint_t ipv6AddrAnycastFlag;uint_t ipv6AddrStatus;struct mib2_ipv6AddrEntry__ipv6AddrInfo_s ipv6AddrInfo;};
struct tnfctl_trace_attrs {pid_t targ_pid; char *trace_file_name;size_t trace_buf_size;size_t trace_min_size;tnfctl_bufstate_t trace_buf_state;boolean_t trace_state;boolean_t filter_state;int pad;};
struct verifySignedData_t {OCF_KEYREF_t publicKeyRef;OCF_ALGO_t algorithm;OCF_Any_t originalData;OCF_Any_t signature;OCF_Boolean_t status;};
struct verifySignedHash_t {OCF_KEYREF_t publicKeyRef;OCF_ALGO_t algorithm;OCF_Any_t hashedData;OCF_Any_t signature;OCF_Boolean_t status;};
struct tnfctl_ind_config {int (*p_read)(void *, uintptr_t, void *, size_t);int (*p_write)(void *, uintptr_t, void *, size_t);pid_t (*p_getpid)(void *);int (*p_obj_iter)(void *, tnfctl_ind_obj_f *, void *);};
struct cachefsio_remove {cfs_cid_t rm_cid;cfs_fid_t rm_fid;char rm_name[256];int rm_getctime;cred_t rm_cred;gid_t rm_groups[15];};
struct cfs_dlog_setattr {cfs_vattr_t dl_attrs;int dl_flags;cfs_cid_t dl_cid;cfs_dlog_tm_t dl_times;cred_t dl_cred;char dl_buffer[60];};
struct rpcb_rmtcallargs {rpcprog_t prog;rpcvers_t vers;rpcproc_t proc;struct rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D args;};
struct tnf_block_header {tnf_ref32_t tag;tnf_uint32_t generation;tnf_uint16_t bytes_valid;tnf_byte_lock_t A_lock;tnf_byte_lock_t B_lock;struct tnf_block_header *next_block;};
struct cfs_dlog_modify {cfs_cid_t dl_cid;cfs_dlog_tm_t dl_times;off32_t dl_next;cred_t dl_cred;char dl_buffer[60];};
struct llc2GetConStats {uint_t ppa;uint_t cmd;uchar_t sap;ushort_t con;uchar_t clearFlag;uchar_t stateOldest;uchar_t stateOlder;uchar_t stateOld;uchar_t state;ushort_t sid;dlsap_t rem;ushort_t flag;uchar_t dataFlag;uchar_t k;uchar_t vs;uchar_t vr;uchar_t nrRcvd;ushort_t retryCount;uint_t numToBeAcked;uint_t numToResend;uint_t macOutSave;uint_t macOutDump;uchar_t timerOn;uint_t iSent;uint_t iRcvd;uint_t frmrSent;uint_t frmrRcvd;uint_t rrSent;uint_t rrRcvd;uint_t rnrSent;uint_t rnrRcvd;uint_t rejSent;uint_t rejRcvd;uint_t sabmeSent;uint_t sabmeRcvd;uint_t uaSent;uint_t uaRcvd;uint_t discSent;uint_t outOfState;uint_t allocFail;uint_t protocolError;uint_t localBusy;uint_t remoteBusy;uint_t maxRetryFail;uint_t ackTimerExp;uint_t pollTimerExp;uint_t rejTimerExp;uint_t remBusyTimerExp;uint_t inactTimerExp;uint_t sendAckTimerExp;};
struct scsi_arq_status {struct scsi_status sts_status;struct scsi_status sts_rqpkt_status;uchar_t sts_rqpkt_reason;uchar_t sts_rqpkt_resid;uint_t sts_rqpkt_state;uint_t sts_rqpkt_statistics;struct scsi_extended_sense sts_sensedata;};
struct unall_space_ent {tag_t use_tag;icb_tag_t use_icb_tag;uint32_t use_len_ad;uint8_t use_ad[484];};
struct OCF_CardSpec_t {uint32_t flags;OCF_CardHandle_t cardhandle;int8_t *readername;int8_t *cardname;int8_t *aid;OCF_Timeout_t timeout;};
struct auditinfo_addr {au_id_t ai_auid;au_mask_t ai_mask;au_tid_addr_t ai_termid;au_asid_t ai_asid;};
struct cachefsio_link {cfs_fid_t ln_dirfid;char ln_name[256];cfs_fid_t ln_filefid;cfs_cid_t ln_cid;cred_t ln_cred;gid_t ln_groups[15];};
struct cfs_dlog_mkdir {cfs_cid_t dl_parent_cid;cfs_cid_t dl_child_cid;cfs_vattr_t dl_attrs;cfs_fid_t dl_fid;cred_t dl_cred;char dl_buffer[316];};
struct target_private {struct scsi_pkt *x_fltpktp;struct buf *x_bp;union target_private___24B48541EFD51A0AE0FB2755EE87B349 targ;daddr_t x_srtsec;int x_seccnt;int x_byteleft;int x_bytexfer;int x_tot_bytexfer;ushort_t x_cdblen;short x_retry;int x_flags;opaque_t x_sdevp;void (*x_callback)();};
struct au_server_tok {au_id_t auid;uid_t euid;uid_t ruid;gid_t egid;pid_t pid;};
struct cl_tcp_info_s {ushort_t cl_tcpi_version;ushort_t cl_tcpi_ipversion;int32_t cl_tcpi_state;in_port_t cl_tcpi_lport;in_port_t cl_tcpi_fport;in6_addr_t cl_tcpi_laddr_v6;in6_addr_t cl_tcpi_faddr_v6;};
struct ftrace_record {char *ftr_event;kthread_t *ftr_thread;uint64_t ftr_tick;caddr_t ftr_caller;ulong_t ftr_data1;ulong_t ftr_data2;ulong_t ftr_data3;};
struct getFileInfo_t {OCF_File_t file;OCF_FileID_t fileID;int32_t fileLength;int32_t recordSize;OCF_Any_t fileHeader;int32_t fileType;};
struct nlm4_lockargs {netobj cookie;bool_t block;bool_t exclusive;struct nlm4_lock alock;bool_t reclaim;int32 state;};
struct svcxprt_ext_t {int flags;SVCXPRT *parent;struct rpc_msg *msg;struct svc_req *req;char *cred_area;int refcnt;SVCXPRT_LIST *my_xlist;mutex_t send_mutex;SVCAUTH xp_auth;};
struct dadkio_rwcmd {int cmd;int flags;daddr_t blkaddr;uint_t buflen;caddr_t bufaddr;struct dadkio_status status;};
struct ipd_addr_tbl {struct ipd_addr_tbl *next;struct ipd_addr_tbl *prev;ipaddr_t dst;int mux_id;queue_t *rq;mblk_t *pkt;int act_count;timestruc_t act_time;int timeout;int addr_timeout;struct ipd_softc *ifp;};
struct segvn_crargs {struct vnode *vp;struct cred *cred;u_offset_t offset;uchar_t type;uchar_t prot;uchar_t maxprot;uint_t flags;struct anon_map *amp;};
struct vol_desc_ptr {tag_t vdp_tag;uint32_t vdp_vdsn;extent_ad_t vdp_nvdse;uint8_t vdp_res[484];};
struct _str_struct {struct strs strs;struct strs2 strs2;struct strs3 strs3;struct strs4 strs4;};
struct cachefs_req {struct cachefs_req *cfs_next;enum cachefs_cmd cfs_cmd;cred_t *cfs_cr;union cachefs_req___5AF54FD280CEF09DDCE8149009F1980F cfs_req_u;kmutex_t cfs_req_lock;};
struct ddi_dma_req {ddi_dma_lim_t *dmar_limits;uint_t dmar_flags;int (*dmar_fp)();caddr_t dmar_arg;ddi_dma_obj_t dmar_object;};
struct la_els_logi {uchar_t ls_code;uchar_t mbz[3];common_svc_t common_service;la_wwn_t nport_ww_name;la_wwn_t node_ww_name;svc_param_t class_1;svc_param_t class_2;svc_param_t class_3;uchar_t reserved[16];uchar_t vendor_version_level[16];};
struct lm_svc_args {int version;int fd;enum lm_fmly n_fmly;enum lm_proto n_proto;dev_t n_rdev;int debug;time_t timout;int grace;time_t retransmittimeout;};
struct nlm4_holder {bool_t exclusive;int32 svid;netobj oh;uint64 l_offset;uint64 l_len;};
struct rmtcallargs {rpcprog_t prog;rpcvers_t vers;rpcproc_t proc;struct rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D args;};
struct scsi_device {struct scsi_address sd_address;dev_info_t *sd_dev;kmutex_t sd_mutex;void *sd_reserved;struct scsi_inquiry *sd_inq;struct scsi_extended_sense *sd_sense;caddr_t sd_private;};
struct nis_result {nis_error status;struct nis_result___4B6B45C3F1C3815D68D653B8D499AE33 objects;netobj cookie;uint32_t zticks;uint32_t dticks;uint32_t aticks;uint32_t cticks;};
struct nis_server {nis_name name;struct nis_server___DA92845B88BF4FFBAAA2281E50DC5AF5 ep;uint_t key_type;netobj pkey;};
struct prfpregset {union prfpregset___3423A07CE9086D0915E1099AD093ACC1 pr_fr;uint32_t pr_filler;uint32_t pr_fsr;uint8_t pr_qcnt;uint8_t pr_q_entrysize;uint8_t pr_en;struct fq pr_q[32];};
struct stroptions {uint_t so_flags;short so_readopt;ushort_t so_wroff;ssize_t so_minpsz;ssize_t so_maxpsz;size_t so_hiwat;size_t so_lowat;unsigned char so_band;ushort_t so_erropt;ssize_t so_maxblk;ushort_t so_copyopt;};
struct _lwp_sema {uint32_t count;uint16_t type;uint16_t magic;uint8_t flags[8];upad64_t data;};
struct auditinfo {au_id_t ai_auid;au_mask_t ai_mask;au_tid_t ai_termid;au_asid_t ai_asid;};
struct call_body {rpcvers_t cb_rpcvers;rpcprog_t cb_prog;rpcvers_t cb_vers;rpcproc_t cb_proc;struct opaque_auth cb_cred;struct opaque_auth cb_verf;};
struct class_ops {int (*cl_admin)(caddr_t, cred_t *);int (*cl_getclinfo)(void *);int (*cl_parmsin)(void *, id_t, cred_t *, id_t, cred_t *, void *);int (*cl_parmsout)(void *, id_t, cred_t *, id_t, cred_t *, void *);int (*cl_getclpri)(pcpri_t *);int (*cl_alloc)(void **, int);void (*cl_free)(void *);};
struct desparams {uchar_t des_key[8];enum desdir des_dir;enum desmode des_mode;uchar_t des_ivec[8];unsigned int des_len;union desparams___253CA3BE9A5A5329A1F720696CC4BB93 UDES;};
struct door_info {pid_t di_target;door_ptr_t di_proc;door_ptr_t di_data;door_attr_t di_attributes;door_id_t di_uniquifier;int di_resv[4];};
struct fd_result {nis_error status;nis_name source;struct fd_result___E188DDB4946479B1B04909415F6D7A2E dir_data;struct fd_result___864956CB4DA79F92CA310E20E4E9B271 signature;};
struct iftun_req {char ifta_lifr_name[32];struct sockaddr_storage ifta_saddr;struct sockaddr_storage ifta_daddr;uint_t ifta_flags;enum ifta_proto ifta_upper;enum ifta_proto ifta_lower;uint_t ifta_vers;uint32_t ifta_secinfo[8];};
struct ipd_softc {dev_info_t *if_dip;char *if_name;char if_unit;char if_type;uint_t if_ipackets;uint_t if_ierrors;uint_t if_opackets;uint_t if_oerrors;uint_t if_nocanput;uint_t if_allocbfail;kstat_t *if_stats;struct ipd_addr_tbl *if_conn;struct ipd_softc *if_next;queue_t *to_cnxmgr;};
struct ns_updrec {struct ns_updrec *r_prev;struct ns_updrec *r_next;uint8_t r_section;char *r_dname;uint16_t r_class;uint16_t r_type;uint32_t r_ttl;uchar_t *r_data;uint16_t r_size;int r_opcode;struct ns_updrec *r_grpnext;struct databuf *r_dp;struct databuf *r_deldp;uint16_t r_zone;};
struct oldsocket {short so_type;short so_options;short so_linger;short so_state;caddr_t so_pcb;struct protosw *so_proto;struct oldsocket *so_head;struct oldsocket *so_q0;struct oldsocket *so_q;short so_q0len;short so_qlen;short so_qlimit;short so_timeo;ushort_t so_error;short so_pgrp;ulong_t so_oobmark;struct oldsocket__sockbuf so_rcv;struct oldsocket__sockbuf so_snd;struct wupalt *so_wupalt;};
struct pmap_typ2 {uint8_t map2_type;uint8_t map2_length;uint16_t map2_pad1;regid_t map2_pti;uint16_t map2_vsn;uint16_t map2_pn;uint16_t map2_pl;uint8_t map2_nst;uint8_t map2_pad2;uint32_t map2_sest;uint32_t map2_st[4];};
struct sadb_comb {uint8_t sadb_comb_auth;uint8_t sadb_comb_encrypt;uint16_t sadb_comb_flags;uint16_t sadb_comb_auth_minbits;uint16_t sadb_comb_auth_maxbits;uint16_t sadb_comb_encrypt_minbits;uint16_t sadb_comb_encrypt_maxbits;uint32_t sadb_comb_reserved;uint32_t sadb_comb_soft_allocations;uint32_t sadb_comb_hard_allocations;uint64_t sadb_comb_soft_bytes;uint64_t sadb_comb_hard_bytes;uint64_t sadb_comb_soft_addtime;uint64_t sadb_comb_hard_addtime;uint64_t sadb_comb_soft_usetime;uint64_t sadb_comb_hard_usetime;};
struct tcphdra_s {in_port_t tha_lport;in_port_t tha_fport;uint32_t tha_seq;uint32_t tha_ack;uint8_t tha_offset_and_reserved;uint8_t tha_flags;uint16_t tha_win;uint16_t tha_sum;uint16_t tha_urp;};
struct tracedata {char *tbuf_start;char *tbuf_end;char *tbuf_wrap;char *tbuf_head;char *tbuf_tail;char *tbuf_redzone;char *tbuf_overflow;uchar_t *real_event_map;uchar_t *event_map;struct file *trace_file;uint32_t last_hrtime_lo32;kthread_id_t last_thread;ulong_t scratch[4];};
struct vioc_info {uint_t vii_inuse;uint64_t vii_id;caddr_t vii_devpath;size_t vii_pathlen;};
struct cpu_stat {uint_t __cpu_stat_lock[2];cpu_sysinfo_t cpu_sysinfo;cpu_syswait_t cpu_syswait;cpu_vminfo_t cpu_vminfo;};
struct di_minor {di_off_t self;di_off_t next;di_off_t name;di_off_t node_type;ddi_minor_type type;major_t dev_major;minor_t dev_minor;int spec_type;unsigned int mdclass;};
struct statsvar {struct statsvar___7FCA211C9072D2949954B3DB78BFDDCD cp_time;struct statsvar___BB7C6D2B3C1E1AB741C949E9CDEFD86D dk_xfer;u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_opackets;int if_oerrors;int if_collisions;u_int v_swtch;int avenrun[3];rstat_timeval boottime;rstat_timeval curtime;};
struct swapinfo {ulong_t si_soff;ulong_t si_eoff;struct vnode *si_vp;struct swapinfo *si_next;int si_allocs;short si_flags;pgcnt_t si_npgs;pgcnt_t si_nfpgs;int si_pnamelen;char *si_pname;ssize_t si_mapsize;uint_t *si_swapslots;pgcnt_t si_hint;ssize_t si_checkcnt;ssize_t si_alloccnt;};
struct upimutex {struct _kthread *upi_owner;int upi_waiter;upib_t *upi_upibp;lwp_mutex_t *upi_vaddr;lwpchan_t upi_lwpchan;upimutex_t *upi_nextchain;upimutex_t *upi_nextowned;};
struct aiocb64 {int aio_fildes;void *aio_buf;size_t aio_nbytes;off64_t aio_offset;int aio_reqprio;struct sigevent aio_sigevent;int aio_lio_opcode;aio_result_t aio_resultp;int aio_state;int aio__pad[1];};
struct autovec {avfunc av_vector;caddr_t av_intarg;dev_info_t *av_devi;uint_t av_fast;};
struct bootsec {uchar_t instr[3];uchar_t version[8];uchar_t bps[2];uchar_t spcl;uchar_t res_sec[2];uchar_t nfat;uchar_t rdirents[2];uchar_t numsect[2];uchar_t mediadesriptor;ushort_t fatsec;ushort_t spt;ushort_t nhead;ushort_t hiddensec;uint_t totalsec;};
struct callout {struct callout *c_idnext;struct callout *c_idprev;struct callout *c_lbnext;struct callout *c_lbprev;callout_id_t c_xid;clock_t c_runtime;void (*c_func)(void *);void *c_arg;kthread_id_t c_executor;kcondvar_t c_done;};
struct dk_vtoc {uint32_t v_version;char v_volume[8];uint16_t v_nparts;struct dk_map2 v_part[8];uint32_t v_bootinfo[3];uint32_t v_sanity;uint32_t v_reserved[10];time32_t v_timestamp[8];};
struct file_id {tag_t fid_tag;uint16_t fid_ver;uint8_t fid_flags;uint8_t fid_idlen;long_ad_t fid_icb;uint16_t fid_iulen;uint8_t fid_spec[2];};
struct filegrp {uint_t fg_flags;int fg_count;cfs_cid_t fg_id;struct fscache *fg_fscp;struct cnode *fg_cnodelist;struct filegrp *fg_next;struct vnode *fg_dirvp;struct vnode *fg_attrvp;struct attrcache_header *fg_header;struct attrcache_index *fg_offsets;uchar_t *fg_alloclist;int fg_headersize;int fg_filesize;kmutex_t fg_mutex;kmutex_t fg_cnodelock;};
struct hdk_cmd {ushort_t hdkc_cmd;int hdkc_flags;daddr_t hdkc_blkno;int hdkc_secnt;caddr_t hdkc_bufaddr;uint_t hdkc_buflen;};
struct ls_pend {uintptr_t lp_lock;uintptr_t lp_owner;hrtime_t lp_start_time;uint32_t lp_refcnt;uintptr_t lp_caller;lock_t lp_mylock;};
struct nfsrrok {struct nfsfattr rrok_attr;uint32_t rrok_count;char *rrok_data;uint_t rrok_bufsize;mblk_t *rrok_mp;};
struct r_debug {int r_version;Link_map *r_map;unsigned int r_brk;r_state_e r_state;unsigned int r_ldbase;Link_map *r_ldsomap;rd_event_e r_rdevent;rd_flags_e r_flags;};
struct xdr_ops {bool_t (*x_getlong)(struct XDR *, int *);bool_t (*x_putlong)(struct XDR *, int *);bool_t (*x_getbytes)(struct XDR *, caddr_t, int);bool_t (*x_putbytes)(struct XDR *, caddr_t, int);uint_t (*x_getpostn)(struct XDR *);bool_t (*x_setpostn)(struct XDR *, uint_t);rpc_inline_t *(*x_inline)(struct XDR *, int);void (*x_destroy)(struct XDR *);bool_t (*x_control)(struct XDR *, int, void *);};
union auxent {struct auxent___5EA42CFE0E3DB3BB9D91F0BBA790C774 x_sym;struct auxent___DCBB1492986F0BE2861FD6E058DF7EAB x_file;struct auxent___FB1486A92607447806F09823D579EE12 x_scn;struct auxent___F460BEB6336398C870E506DAD23CA9F2 x_tv;};
struct cirbuf {buf_t *cb_bp;buf_t *cb_dirty;buf_t *cb_free;caddr_t cb_va;size_t cb_nb;krwlock_t cb_rwlock;};
struct cyclic {hrtime_t cy_expire;hrtime_t cy_interval;void (*cy_handler)(void *);void *cy_arg;uint32_t cy_pend;uint16_t cy_flags;cyc_level_t cy_level;};
struct dc_ops {int version;int (*dc_get_major)(major_t *, char *);int (*dc_free_major)(major_t, char *);int (*dc_major_name)(major_t, char *);int (*dc_sync_instances)();int (*dc_instance_path)(major_t, char *, uint_t);int (*dc_get_instance)(major_t,  char *, uint_t *);int (*dc_free_instance)(major_t,  char *, uint_t);int (*dc_map_minor)(major_t, minor_t, minor_t *, dev_type_t);int (*dc_unmap_minor)(major_t, minor_t, minor_t, dev_type_t);int (*dc_resolve_minor)(major_t, minor_t, minor_t *, dev_type_t *);int (*dc_devconfig_lock)(int);int (*dc_devconfig_unlock)();int (*dc_service_config)(int, void *, int);};
struct fd_cmd {ushort_t fdc_cmd;int fdc_flags;daddr_t fdc_blkno;int fdc_secnt;caddr_t fdc_bufaddr;uint_t fdc_buflen;};
struct ipic_s {ipllc_t ipic_ipllc;uint_t ipic_ire_type;uint_t ipic_max_frag;uint_t ipic_addr_offset;uint_t ipic_addr_length;uint_t ipic_mask_offset;uint_t ipic_mask_length;uint_t ipic_src_addr_offset;uint_t ipic_src_addr_length;uint_t ipic_ll_hdr_offset;uint_t ipic_ll_hdr_length;uint_t ipic_gateway_addr_offset;uint_t ipic_gateway_addr_length;clock_t ipic_rtt;uint32_t ipic_ssthresh;clock_t ipic_rtt_sd;};
struct rtproc {int rt_pquantum;int rt_timeleft;pri_t rt_pri;ushort_t rt_flags;kthread_id_t rt_tp;char *rt_pstatp;pri_t *rt_pprip;uint_t *rt_pflagp;struct rtproc *rt_next;struct rtproc *rt_prev;};
struct sclass {char *cl_name;pri_t (*cl_init)(id_t, int, classfuncs_t **);classfuncs_t *cl_funcs;krwlock_t *cl_lock;int cl_count;};
struct _disp {disp_lock_t disp_lock;pri_t disp_npri;dispq_t *disp_q;dispq_t *disp_q_limit;ulong_t *disp_qactmap;pri_t disp_maxrunpri;pri_t disp_max_unbound_pri;int disp_nrunnable;struct cpu *disp_cpu;};
struct ainfo {char *local;mode_t mode;char owner[65];char group[65];major_t major;minor_t minor;};
struct aiocb {int aio_fildes;void *aio_buf;size_t aio_nbytes;off_t aio_offset;int aio_reqprio;struct sigevent aio_sigevent;int aio_lio_opcode;aio_result_t aio_resultp;int aio_state;int aio__pad[1];};
struct dquot {struct dquot *dq_forw;struct dquot *dq_back;struct dquot *dq_freef;struct dquot *dq_freeb;short dq_flags;ulong_t dq_cnt;uid_t dq_uid;struct ufsvfs *dq_ufsvfsp;offset_t dq_mof;struct dqblk dq_dqb;};
struct ierbd {uchar_t ierbd_cntlo;uchar_t ierbd_status;ieoff_t ierbd_next;ieaddr_t ierbd_buf;uchar_t ierbd_sizelo;uchar_t ierbd_elsize;ushort_t pad;};
struct lsctl {size_t lc_recsize;size_t lc_nrecs;hrtime_t lc_interval;uchar_t lc_event[64];hrtime_t lc_min_duration[64];lswatch_t lc_wlock[33];lswatch_t lc_wfunc[33];};
struct taskq {char tq_name[32];kmutex_t tq_lock;krwlock_t tq_threadlock;kcondvar_t tq_dispatch_cv;kcondvar_t tq_wait_cv;int tq_flags;int tq_active;int tq_nthreads;int tq_nalloc;int tq_minalloc;int tq_maxalloc;taskq_ent_t *tq_freelist;taskq_ent_t tq_task;};
struct MENU {int height;int width;int rows;int cols;int frows;int fcols;int namelen;int desclen;int marklen;int itemlen;char *pattern;int pindex;WINDOW *win;WINDOW *sub;WINDOW *userwin;WINDOW *usersub;ITEM **items;int nitems;ITEM *curitem;int toprow;int pad;chtype fore;chtype back;chtype grey;PTF_void menuinit;PTF_void menuterm;PTF_void iteminit;PTF_void itemterm;char *userptr;char *mark;OPTIONS opt;int status;};
struct core {int c_magic;int c_len;struct regs c_regs;struct exdata c_exdata;int c_signo;int c_tsize;int c_dsize;int c_ssize;char c_cmdname[17];struct fpu c_fpu;struct fq c_fpu_q[16];int c_ucode;};
struct file {kmutex_t f_tlock;ushort_t f_flag;ushort_t f_pad;struct vnode *f_vnode;offset_t f_offset;struct cred *f_cred;caddr_t f_audit_data;int f_count;};
struct pmap {rpcprog_t pm_prog;rpcvers_t pm_vers;rpcprot_t pm_prot;rpcport_t pm_port;};
struct ptem {tcflag_t cflags;mblk_t *dack_ptr;queue_t *q_ptr;struct winsize wsz;unsigned short state;};
struct si {struct si *s_next;struct si *s_forw;struct si *s_fore;int s_flags;ino_t s_shadow;dev_t s_dev;int s_signature;int s_use;int s_ref;krwlock_t s_lock;ic_acl_t s_a;ic_acl_t s_d;};
union scsi_cdb___C7BA4B60DE78D71094D9A2B3854B7108___283DB60FC2BC13980623105C0AF94F5F {uchar_t scsi[14];struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g0 g0;struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g1 g1;struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g4 g4;struct scsi_cdb______283DB60FC2BC13980623105C0AF94F5F__scsi_g5 g5;};
union lifreq___9C4034A34F2C584EFE8AFA556B44D076 {struct sockaddr_storage lifru_addr;struct sockaddr_storage lifru_dstaddr;struct sockaddr_storage lifru_broadaddr;struct sockaddr_storage lifru_token;struct sockaddr_storage lifru_subnet;int lifru_index;uint64_t lifru_flags;int lifru_metric;uint_t lifru_mtu;char lifru_data[1];char lifru_enaddr[6];int lif_muxid[2];struct lif_nd_req lifru_nd_req;struct lif_ifinfo_req lifru_ifinfo_req;};
struct _0A0885A099C43036865B53B70EA12DCA {char *ar_name;time_t ar_date;uid_t ar_uid;gid_t ar_gid;mode_t ar_mode;off_t ar_size;char *ar_rawname;};
struct _2D2DEA9E8B1723DA9627F35ADE64BFFE {t_uscalar_t dl_qos_type;dl_transdelay_t dl_trans_delay;dl_priority_t dl_priority;dl_protect_t dl_protection;t_scalar_t dl_residual_error;};
struct _3242DF98F1AD6AB2AF4D4F9FD3432406 {short nmethods;short ndefined;wctype_t (*wctype)(_LC_ctype_t *,  char *);int (*iswctype)(_LC_ctype_t *, int, wctype_t);wint_t (*towupper)(_LC_ctype_t *, wint_t);wint_t (*towlower)(_LC_ctype_t *, wint_t);int (*_trwctype)(_LC_ctype_t *, int, int);wctrans_t (*wctrans)(_LC_ctype_t *,  char *);wint_t (*towctrans)(_LC_ctype_t *, wint_t, wctrans_t);_LC_methods_func_t placeholders[5];};
struct _37DC3B712C7ED020EE15F9E8AA85032C {int32_t tcp_pipe;tcp_seq tcp_fack;tcp_seq tcp_sack_snxt;int32_t tcp_max_sack_blk;int32_t tcp_num_sack_blk;sack_blk_t tcp_sack_list[5];int32_t tcp_num_notsack_blk;uint32_t tcp_cnt_notsack_list;notsack_blk_t *tcp_notsack_list;};
struct _3A667C09CA9B6E1FC0A4AC3D89CABEC7 {ushort_t pppLinkControlIndex;uchar_t pppLinkMaxRestarts;uint_t pppLinkRestartTimerValue;uint_t pppLinkMediaType;uint_t pppLinkAllowMRU;uint_t pppLinkAllowHdrComp;uint_t pppLinkAllowPAComp;uint_t pppLinkAllowACC;uint_t pppLinkAllowAddr;uint_t pppLinkAllowAuth;uint_t pppLinkAllowQual;uint_t pppLinkAllowMagic;uint_t pppLinkLocalMRU;uint_t pppLinkRemoteMRU;uint_t pppLinkLocalACCMap;ipaddr_t pppIPLocalAddr;ipaddr_t pppIPRemoteAddr;uint_t pppLinkMaxLoopCount;clock_t pppLinkMaxNoFlagTime;};
struct _D27F01C753CDB3D015D2AEBC850E5649 {short nmethods;short ndefined;int (*strcoll)(_LC_collate_t *,  char *,  char *);size_t (*strxfrm)(_LC_collate_t *, char *,  char *, size_t);int (*wcscoll)(_LC_collate_t *,  int *,  int *);size_t (*wcsxfrm)(_LC_collate_t *, int *,  int *, size_t);int (*fnmatch)(_LC_collate_t *,  char *,  char *,  char *, int);int (*regcomp)(_LC_collate_t *, regex_t *,  char *, int);size_t (*regerror)(_LC_collate_t *, int,  regex_t *, char *, size_t);int (*regexec)(_LC_collate_t *,  regex_t *,  char *, size_t, regmatch_t *, int);void (*regfree)(_LC_collate_t *, regex_t *);_LC_methods_func_t placeholders[5];};
struct pcmcia_adapter_nexus_private {dev_info_t *an_dip;pcmcia_if_t *an_if;void *an_private;ddi_iblock_cookie_t *an_iblock;ddi_idevice_cookie_t *an_idev;uint32_t an_ipl;};
struct cachefs_log_mdcreate_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;uint_t count;};
struct cachefs_log_create_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;};
struct cachefs_log_remove_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;};
struct cachefs_log_rename_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t gone;ino64_t fileno;int removed;cfs_uid_t uid;};
struct cachefs_log_mkdir_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;};
struct cachefs_log_rfdir_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;};
struct cachefs_log_rmdir_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;};
struct cachefsio_setattr_arg {cfs_fid_t sa_backfid;cfs_cid_t sa_cid;cfs_vattr_t sa_vattr;int sa_flags;cred_t sa_cred;gid_t sa_groups[15];};
struct cachefsio_symlink_arg {cfs_fid_t sy_dirfid;char sy_name[256];cfs_cid_t sy_cid;char sy_link[1024];cfs_vattr_t sy_vattr;cred_t sy_cred;gid_t sy_groups[15];};
struct cachefsio_create_arg {cfs_fid_t cr_backfid;char cr_name[256];cfs_cid_t cr_cid;cfs_vattr_t cr_va;int cr_exclusive;int cr_mode;cred_t cr_cred;gid_t cr_groups[15];};
struct r_rpcb_rmtcallargs {rpcprog_t prog;rpcvers_t vers;rpcproc_t proc;struct r_rpcb_rmtcallargs___FEBD41F85E33D0E2AA5450E1B16FBC3A args;xdrproc_t xdr_args;};
struct cfs_dlog_symlink {cfs_cid_t dl_parent_cid;cfs_cid_t dl_child_cid;cfs_vattr_t dl_attrs;cfs_dlog_tm_t dl_times;cfs_fid_t dl_fid;cred_t dl_cred;char dl_buffer[1340];};
struct log_vol_int_desc {tag_t lvid_tag;tstamp_t lvid_tstamp;uint32_t lvid_int_type;extent_ad_t lvid_nie;log_vol_hdr_desc_t lvid_lvcu;uint32_t lvid_npart;uint32_t lvid_liu;uint32_t lvid_fst[2];};
struct au_header32_tok {uint_t length;uchar_t version;au_event_t event;ushort_t emod;int32_t sec;int32_t nsec;};
struct au_header64_tok {uint_t length;uchar_t version;au_event_t event;ushort_t emod;int64_t sec;int64_t nsec;};
struct auditpinfo_addr {pid_t ap_pid;au_id_t ap_auid;au_mask_t ap_mask;au_tid_addr_t ap_termid;au_asid_t ap_asid;};
struct cachefsio_mkdir {cfs_fid_t md_dirfid;char md_name[256];cfs_cid_t md_cid;cfs_vattr_t md_vattr;cred_t md_cred;gid_t md_groups[15];};
struct cfs_dlog_create {cfs_cid_t dl_parent_cid;cfs_cid_t dl_new_cid;cfs_vattr_t dl_attrs;int dl_excl;int dl_mode;int dl_exists;cfs_dlog_tm_t dl_times;cfs_fid_t dl_fid;cred_t dl_cred;char dl_buffer[316];};
struct usb_pipe_policy {uchar_t pp_version;int pp_timeout_value;uint_t pp_periodic_max_transfer_size;usb_opaque_t pp_callback_arg;int (*pp_callback)(usb_pipe_handle_t pipe, usb_opaque_t callback_arg, mblk_t *data);int (*pp_exception_callback)(usb_pipe_handle_t pipe, usb_opaque_t callback_arg, uint_t completion_reason, mblk_t *data, uint_t flag);};
struct _LC_charmap_t {_LC_core_charmap_t core; char *cm_csname;_LC_fc_type_t cm_fc_type;_LC_pc_type_t cm_pc_type;size_t cm_mb_cur_max;size_t cm_mb_cur_min;unsigned char cm_max_disp_width;_LC_euc_info_t *cm_eucinfo;};
struct _LC_collate_t {_LC_core_collate_t core;_LC_charmap_t *cmapp;unsigned char co_nord;_LC_weight_t co_sort;int co_wc_min;int co_wc_max;int co_hbound;int co_col_min;int co_col_max; _LC_weight_t *co_coltbl; _LC_collel_t **co_cetbl;unsigned char co_nsubs; _LC_subs_t *co_subs;};
struct au_proc32_tok {au_id_t auid;uid_t euid;gid_t egid;uid_t ruid;gid_t rgid;pid_t pid;pid_t sid;au_tid32_t tid;};
struct au_proc64_tok {au_id_t auid;uid_t euid;gid_t egid;uid_t ruid;gid_t rgid;pid_t pid;pid_t sid;au_tid64_t tid;};
struct au_subj32_tok {au_id_t auid;uid_t euid;gid_t egid;uid_t ruid;gid_t rgid;pid_t pid;pid_t sid;au_tid32_t tid;};
struct au_subj64_tok {au_id_t auid;uid_t euid;gid_t egid;uid_t ruid;gid_t rgid;pid_t pid;pid_t sid;au_tid64_t tid;};
struct callout_table {kmutex_t ct_lock;callout_t *ct_freelist;clock_t ct_curtime;clock_t ct_runtime;taskq_t *ct_taskq;callout_id_t ct_short_id;callout_id_t ct_long_id;callout_t *ct_idhash[512];callout_t *ct_lbhash[512];};
struct directory_obj {nis_name do_name;nstype do_type;struct directory_obj___1F9DB6EC5B4D38C4C9C3429D1A4D637D do_servers;uint32_t do_ttl;struct directory_obj___C1C9E10248BAA10524C7D0EEA27D2609 do_armask;};
struct p_rmtcallargs {rpcprog_t prog;rpcvers_t vers;rpcproc_t proc;struct p_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D args;xdrproc_t xdr_args;};
struct part_int_desc {tag_t pid_tag;icb_tag_t pid_idb_tag;tstamp_t pid_rtime;uint8_t pid_integ;uint8_t pid_res[175];regid_t pid_ii;uint8_t pid_iu[256];};
struct segdev_crargs {offset_t offset;int (*mapfunc)(dev_t dev, off_t off, int prot);dev_t dev;uchar_t type;uchar_t prot;uchar_t maxprot;uint_t hat_attr;uint_t hat_flags;void *devmap_data;};
struct p_audit_data {au_id_t pad_auid;au_mask_t pad_mask;au_termid_t pad_termid;au_asid_t pad_asid;struct cwrd *pad_cwrd;kmutex_t pad_lock;struct p_audit_data *next;};
struct auditpinfo {pid_t ap_pid;au_id_t ap_auid;au_mask_t ap_mask;au_tid_t ap_termid;au_asid_t ap_asid;};
struct inthandler {struct inthandler *next;struct inthandler *prev;int flags;uint32_t (*intr)(caddr_t);unsigned int handler_id;void *arg;unsigned int socket;unsigned int irq;unsigned int priority;ddi_softintr_t softid;ddi_iblock_cookie_t iblk_cookie;ddi_idevice_cookie_t idev_cookie;};
struct thread_ops {int (*cl_enterclass)(kthread_id_t, id_t, void *, cred_t *, void *);void (*cl_exitclass)(void *);int (*cl_canexit)(kthread_id_t, cred_t *);int (*cl_fork)(kthread_id_t, kthread_id_t, void *);void (*cl_forkret)(kthread_id_t, kthread_id_t);void (*cl_parmsget)(kthread_id_t, void *);int (*cl_parmsset)(kthread_id_t, void *, id_t, cred_t *);void (*cl_stop)(kthread_id_t, int, int);void (*cl_exit)(void);void (*cl_active)(kthread_id_t);void (*cl_inactive)(kthread_id_t);pri_t (*cl_swapin)(kthread_id_t, int);pri_t (*cl_swapout)(kthread_id_t, int);void (*cl_trapret)(kthread_id_t);void (*cl_preempt)(kthread_id_t);void (*cl_setrun)(kthread_id_t);void (*cl_sleep)(kthread_id_t, int);void (*cl_tick)(kthread_id_t);void (*cl_wakeup)(kthread_id_t);int (*cl_donice)(kthread_id_t, cred_t *, int, int *);pri_t (*cl_globpri)(kthread_id_t);void (*cl_set_process_group)(pid_t, pid_t, pid_t);void (*cl_yield)(kthread_id_t);};
struct dk_mpinfo {struct dk_gmpstate dke_mpstate;struct dk_mpflags dke_mpflags;struct dk_mpdrv_status dke_mpdrv_status;enum dk_mptype dke_mptype;int dke_qcapacity;uint_t dke_max_quiesce;int dke_pad[4];};
struct fc_packet {void *fc_pkt_cookie;void (*fc_pkt_comp)(struct fc_packet *);void *fc_pkt_private;int32_t fc_pkt_flags;int32_t fc_pkt_timeout;fc_ioclass_t fc_pkt_io_class;fc_devdata_t fc_pkt_io_devdata;fc_dataseg_t *fc_pkt_cmd;fc_dataseg_t *fc_pkt_rsp;fc_dataseg_t **fc_pkt_datap;unsigned int fc_pkt_status;int fc_pkt_statistics;fc_frame_header_t *fc_frame_cmd;fc_frame_header_t *fc_frame_resp;struct fc_packet *fc_pkt_next;struct fc_packet *fc_pkt_prev;};
struct part_desc {tag_t pd_tag;uint32_t pd_vdsn;uint16_t pd_pflags;uint16_t pd_pnum;regid_t pd_pcontents;uint8_t pd_pc_use[128];uint32_t pd_acc_type;uint32_t pd_part_start;uint32_t pd_part_length;regid_t pd_ii;uint8_t pd_iu[128];uint8_t pd_res[156];};
struct rt_msghdr {ushort_t rtm_msglen;uchar_t rtm_version;uchar_t rtm_type;ushort_t rtm_index;int rtm_flags;int rtm_addrs;pid_t rtm_pid;int rtm_seq;int rtm_errno;int rtm_use;uint_t rtm_inits;struct rt_metrics rtm_rmx;};
struct c_dirent {uint_t d_length;uint_t d_flag;cfs_cid_t d_id;offset_t d_offset;cfs_fid_t d_cookie;ushort_t d_namelen;char d_name[1];};
struct copyresp {int cp_cmd;cred_t *cp_cr;uint_t cp_id;caddr_t cp_rval;size_t cp_pad1;uint_t cp_pad2;mblk_t *cp_private;uint_t cp_flag;int cp_filler[3];};
struct dircache {struct dircache *dc_next;struct dircache *dc_prev;int64_t dc_actime;dcentry_t **dc_namehash;dcfree_t **dc_freehash;uint_t dc_num_entries;uint_t dc_num_free;uint_t dc_nhash_mask;uint_t dc_fhash_mask;struct dcanchor *dc_anchor;boolean_t dc_complete;};
struct formnode {int status;int rows;int cols;int currow;int curcol;int toprow;int begincol;int maxfield;int maxpage;int curpage;OPTIONS opts;WINDOW *win;WINDOW *sub;WINDOW *w;FIELD **field;FIELD *current;_PAGE *page;char *usrptr;PTF_void forminit;PTF_void formterm;PTF_void fieldinit;PTF_void fieldterm;};
struct ipc_perm {uid_t uid;gid_t gid;uid_t cuid;gid_t cgid;mode_t mode;uint_t seq;key_t key;int pad[4];};
struct lm_sysid {struct lm_sysid *next;int refcnt;struct knetconfig config;struct netbuf addr;char *name;sysid_t sysid;bool_t sm_client;bool_t sm_server;bool_t in_recovery;int sm_state;kmutex_t lock;};
struct mapentry {mapentry_t *me_next;mapentry_t *me_prev;mapentry_t *me_hash;mapentry_t *me_agenext;mapentry_t *me_cancel;int (*me_func)();ulong_t me_arg;off_t me_lof;ulong_t me_flags;uint32_t me_tid;ulong_t me_age;struct delta me_delta;};
struct scsi_pkt {opaque_t pkt_ha_private;struct scsi_address pkt_address;opaque_t pkt_private;void (*pkt_comp)(struct scsi_pkt *);uint_t pkt_flags;int pkt_time;uchar_t *pkt_scbp;uchar_t *pkt_cdbp;ssize_t pkt_resid;uint_t pkt_state;uint_t pkt_statistics;uchar_t pkt_reason;};
struct sockinfo {uint_t si_size;short si_family;short si_type;ushort_t si_flag;uint_t si_state;uint_t si_ux_laddr_sou_magic;uint_t si_ux_faddr_sou_magic;t_scalar_t si_serv_type;t_uscalar_t si_laddr_soa_len;t_uscalar_t si_faddr_soa_len;uint16_t si_laddr_family;uint16_t si_faddr_family;char si_laddr_sun_path[1025];char si_faddr_sun_path[1025];};
struct ucontext {uint_t uc_flags;ucontext_t *uc_link;sigset_t uc_sigmask;stack_t uc_stack;mcontext_t uc_mcontext;int uc_filler[23];};
struct copyreq {int cq_cmd;cred_t *cq_cr;uint_t cq_id;caddr_t cq_addr;size_t cq_size;uint_t cq_flag;mblk_t *cq_private;int cq_filler[4];};
struct ulockfs {ulong_t ul_flag;ulong_t ul_fs_lock;ulong_t ul_fs_mod;ulong_t ul_vnops_cnt;kmutex_t ul_lock;kcondvar_t ul_cv;kthread_id_t ul_sbowner;struct lockfs ul_lockfs;};
struct futmpx {char ut_user[32];char ut_id[4];char ut_line[32];pid32_t ut_pid;int16_t ut_type;struct futmpx___11610CE8875B9446FC755A3DED782E56 ut_exit;struct timeval32 ut_tv;int32_t ut_session;int32_t pad[5];int16_t ut_syslen;char ut_host[257];};
struct tmount {struct vfs *tm_vfsp;struct tmpnode *tm_rootnode;char *tm_mntpath;ulong_t tm_anonmax;pgcnt_t tm_anonmem;dev_t tm_dev;uint_t tm_gen;kmutex_t tm_contents;kmutex_t tm_renamelck;};
struct datab {frtn_t *db_frtnp;unsigned char *db_base;unsigned char *db_lim;unsigned char db_ref;unsigned char db_type;unsigned char db_flags;unsigned char db_struioflag;void *db_cache;struct msgb *db_mblk;void (*db_free)(struct msgb *, struct datab *);void (*db_lastfree)(struct msgb *, struct datab *);void *db_pad;unsigned char *db_struiobase;unsigned char *db_struiolim;unsigned char *db_struioptr;union datab___B2E8909E96C049C2A3E7A2AEEB3F3FB8 db_struioun;fthdr_t *db_fthdr;ftflw_t ***db_ftflw;uid_t db_uid;uid_t db_lid;};
struct kstat {hrtime_t ks_crtime;struct kstat *ks_next;kid_t ks_kid;char ks_module[31];uchar_t ks_resv;int ks_instance;char ks_name[31];uchar_t ks_type;char ks_class[31];uchar_t ks_flags;void *ks_data;uint_t ks_ndata;size_t ks_data_size;hrtime_t ks_snaptime;int (*ks_update)(struct kstat *, int);void *ks_private;int (*ks_snapshot)(struct kstat *, void *, int);void *ks_lock;};
struct pcdir {char pcd_filename[8];char pcd_ext[3];uchar_t pcd_attr;uchar_t pcd_ntattr;uchar_t pcd_crtime_msec;struct pctime pcd_crtime;ushort_t pcd_ladate;union pcdir___6D2C5C6D3B5BA21ED111F6CD0B750BD5 un;struct pctime pcd_mtime;pc_cluster16_t pcd_scluster_lo;int pcd_size;};
struct acct {char ac_flag;char ac_stat;uid32_t ac_uid;gid32_t ac_gid;dev32_t ac_tty;time32_t ac_btime;comp_t ac_utime;comp_t ac_stime;comp_t ac_etime;comp_t ac_mem;comp_t ac_io;comp_t ac_rw;char ac_comm[8];};
struct page {struct vnode *p_vnode;struct page *p_hash;struct page *p_vpnext;struct page *p_vpprev;struct page *p_next;struct page *p_prev;u_offset_t p_offset;selock_t p_selock;ushort_t p_lckcnt;ushort_t p_cowcnt;kcondvar_t p_cv;kcondvar_t p_io_cv;uchar_t p_iolock_state;uchar_t p_filler;uchar_t p_fsdata;uchar_t p_state;};
union rval {struct rval___8462DB5BA46F76167B8A3A69903806F1 r_v;off_t r_off;offset_t r_offset;time_t r_time;int64_t r_vals;};
struct stbl {tag_t stbl_tag;regid_t stbl_si;uint16_t stbl_len;uint16_t stbl_res1;uint32_t stbl_seqno;stbl_entry_t stbl_entry;};
struct ocg {uint32_t cg_link;uint32_t cg_rlink;time32_t cg_time;int32_t cg_cgx;short cg_ncyl;short cg_niblk;int32_t cg_ndblk;struct csum cg_cs;int32_t cg_rotor;int32_t cg_frotor;int32_t cg_irotor;int32_t cg_frsum[8];int32_t cg_btot[32];short cg_b[32][8];char cg_iused[256];int32_t cg_magic;uchar_t cg_free[1];};
struct pcb {int pcb_flags;uint32_t pcb_trap0addr;uint_t pcb_instr;enum pcb___A081279ABEE1631CD9A511E8616D291A pcb_xregstat;struct rwindow pcb_xregs;int pcb_step;caddr_t pcb_tracepc;};
struct uio {iovec_t *uio_iov;int uio_iovcnt;lloff_t _uio_offset;uio_seg_t uio_segflg;short uio_fmode;lldaddr_t _uio_limit;ssize_t uio_resid;};
struct cg {uint32_t cg_link;int32_t cg_magic;time32_t cg_time;int32_t cg_cgx;short cg_ncyl;short cg_niblk;int32_t cg_ndblk;struct csum cg_cs;int32_t cg_rotor;int32_t cg_frotor;int32_t cg_irotor;int32_t cg_frsum[8];int32_t cg_btotoff;int32_t cg_boff;int32_t cg_iusedoff;int32_t cg_freeoff;int32_t cg_nextfreeoff;int32_t cg_sparecon[16];uchar_t cg_space[1];};
union cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127 {struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__serial serial;struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__modem modem;struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__data_modem data_modem;struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__fax fax;struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__voice voice;struct cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127__lan lan;};
union objdata___B3007D6063AF66DF722E8A0D3E39E00C {struct directory_obj di_data;struct group_obj gr_data;struct table_obj ta_data;struct entry_obj en_data;struct link_obj li_data;struct objdata___B3007D6063AF66DF722E8A0D3E39E00C___C5CA305DAC14A48247D92F909AB77E9C po_data;};
union ifreq___031EB9357DA800073593637CA1D35508 {struct sockaddr ifru_addr;struct sockaddr ifru_dstaddr;char ifru_oname[16];struct sockaddr ifru_broadaddr;int ifru_index;short ifru_flags;int ifru_metric;char ifru_data[1];char ifru_enaddr[6];int if_muxid[2];struct ifreq___031EB9357DA800073593637CA1D35508__ifr_ppaflags ifru_ppaflags;struct ifreq___031EB9357DA800073593637CA1D35508__ifr_dnld_reqs ifru_dnld_req;struct ifreq___031EB9357DA800073593637CA1D35508__ifr_fddi_stats ifru_fddi_stat;struct ifreq___031EB9357DA800073593637CA1D35508__ifr_netmapents ifru_netmapent;struct ifreq___031EB9357DA800073593637CA1D35508__ifr_fddi_gen_struct ifru_fddi_gstruct;};
struct cachefs_log_populate_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;u_offset_t off;uint_t size;};
struct cachefs_log_readlink_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;uint_t length;};
struct cachefs_log_truncate_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;u_offset_t size;};
struct cachefs_log_readdir_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;u_offset_t offset;int eof;};
struct cachefs_log_symlink_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;uint_t size;cfs_uid_t uid;};
struct cachefs_log_calloc_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;u_offset_t off;uint_t len;};
struct cachefs_log_ualloc_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;u_offset_t off;uint_t len;};
struct cachefsio_setsecattr_arg {cfs_fid_t sc_backfid;cfs_cid_t sc_cid;uint_t sc_mask;int sc_aclcnt;int sc_dfaclcnt;aclent_t sc_acl[1024];cred_t sc_cred;gid_t sc_groups[15];};
struct cachefs_debug_info {char *cdb_message;uint_t cdb_flags;int cdb_int;void *cdb_pointer;uint_t cdb_count;cachefscache_t *cdb_cachep;struct fscache *cdb_fscp;struct cnode *cdb_cnode;vnode_t *cdb_frontvp;vnode_t *cdb_backvp;kthread_id_t cdb_thread;hrtime_t cdb_timestamp;int cdb_depth;uintptr_t cdb_stack[16];struct cachefs_debug_info *cdb_next;};
struct tnf_probe_control { struct tnf_probe_version *version;tnf_probe_control_t *next;tnf_probe_test_func_t test_func;tnf_probe_alloc_func_t alloc_func;tnf_probe_func_t probe_func;tnf_probe_func_t commit_func;uintptr_t index; char *attrs;tnf_tag_data_t ***slot_types;unsigned int tnf_event_size;};
struct _LclFormAttrInfo {LclForm type;LctNEAttribute name;LclCharsetLinkedList *header_charset;LclCharsetLinkedList *body_charset;LclMailEncoding header_encoding;LclMailEncoding body_encoding;LclMailType mail_type;LclFormAttrInfo *next;};
struct devctl_ap_state {ap_rstate_t ap_rstate;ap_ostate_t ap_ostate;ap_condition_t ap_condition;time_t ap_last_change;uint32_t ap_error_code;uint8_t ap_in_transition;};
struct lock_descriptor {struct lock_descriptor *l_next;struct lock_descriptor *l_prev;struct edge l_edge;struct lock_descriptor *l_stack;struct lock_descriptor *l_stack1;struct lock_descriptor *l_dstack;struct edge *l_sedge;int l_index;struct graph *l_graph;vnode_t *l_vnode;int l_type;int l_state;u_offset_t l_start;u_offset_t l_len;flock64_t l_flock;int l_color;kcondvar_t l_cv;int pvertex;int l_status;flk_nlm_status_t l_nlm_state;};
struct _tnf_tag_data {tnf_tag_version_t *tag_version;tnf_record_p (*tag_desc)(tnf_ops_t *, tnf_tag_data_t *);tnf_record_p tag_index; char *tag_name;tnf_tag_data_t ****tag_props;size_t tag_size;size_t tag_align;size_t tag_ref_size;tnf_arg_kind_t tag_kind;tnf_tag_data_t **tag_base;tnf_tag_data_t ***tag_slots;char **tag_slot_names;};
struct segdrv_crargs {int (*mapfunc)(dev_t dev, off_t off, int prot);size_t offset;dev_t dev;uint_t flags;caddr_t client;struct seg_ops *client_segops;int (*client_create)();uchar_t prot;uchar_t maxprot;};
struct _LclFormInfo {LclForm type;LctNEAttribute name;LclCharsetLinkedList *msg_header_charset;LclCharsetLinkedList *msg_body_charset;LclCharsetLinkedList *plaintext_body_charset;LclCharsetLinkedList *taggedtext_header_charset;LclCharsetLinkedList *taggedtext_body_charset;LclMailEncoding msg_header_encoding;LclMailEncoding msg_body_encoding;LclMailEncoding plaintext_body_encoding;LclMailEncoding taggedtext_header_encoding;LclMailEncoding taggedtext_body_encoding;LclMailType mail_type;LclFormInfo *next;};
struct cyc_xcallarg {cyc_cpu_t *cyx_cpu;cyc_handler_t *cyx_hdlr;cyc_time_t *cyx_when;cyc_index_t cyx_ndx;cyc_index_t *cyx_heap;cyclic_t *cyx_cyclics;cyc_index_t cyx_size;uint16_t cyx_flags;};
struct f_audit_data {kthread_id_t fad_thread;au_id_t fad_auid;au_mask_t fad_mask;au_termid_t fad_termid;int fad_flags;uint_t fad_lpbuf;uint_t fad_pathlen;caddr_t fad_path;struct f_audit_data *next;};
struct llc_mac_info {struct llc_mac_info *llcp_next;struct llc_mac_info *llcp_prev;int llcp_flags;int llcp_maxpkt;int llcp_minpkt;int llcp_type;int llcp_addrlen;unsigned char llcp_macaddr[6];unsigned char llcp_broadcast[6];queue_t *llcp_queue;int llcp_lindex;int llcp_ppa;int llcp_sap;mblk_t *llcp_data;queue_t *llcp_dataq;mblk_t *llcp_mb;int llcp_nstreams;llc_mcast_t *llcp_mcast;struct llc_stats llcp_stats;kstat_t *llcp_kstatp;uint_t llcp_iocid;};
union nss_XbyY_key {uid_t uid;gid_t gid; char *name;int number;struct nss_XbyY_key___CD5F44B92FE3ED666A24DAE448CD6B19 netaddr;struct nss_XbyY_key___94B6CF0C6915478CD98367858D940171 hostaddr;struct nss_XbyY_key___2B30735CA198EE135C9CF196B5967FEB serv;void *ether;struct nss_XbyY_key___E5450DB01C1CBC9C11C74BC5DC6DA3FB pkey;void *attrp;};
struct _LC_ctype_t {_LC_core_ctype_t core;_LC_charmap_t *cmapp;int min_wc;int max_wc;int max_upper;int max_lower; int *upper; int *lower; unsigned int *mask; unsigned int *qmask; unsigned char *qidx;int qidx_hbound;int nbinds;_LC_bind_table_t *bindtab;int ntrans;_LC_transnm_t *transname; _LC_transtabs_t *transtabs;size_t ctypesize; unsigned char *ctypedata;void *reserved[8];};
struct audit_queue {au_buff_t *head;au_buff_t *tail;ssize_t cnt;size_t hiwater;size_t lowater;size_t bufsz;size_t buflen;clock_t delay;int wt_block;int rd_block;kmutex_t lock;kcondvar_t write_cv;kcondvar_t read_cv;};
struct cyc_backend {cyb_arg_t (*cyb_configure)(cpu_t *);void (*cyb_unconfigure)(cyb_arg_t);void (*cyb_enable)(cyb_arg_t);void (*cyb_disable)(cyb_arg_t);void (*cyb_reprogram)(cyb_arg_t, hrtime_t);void (*cyb_softint)(cyb_arg_t, cyc_level_t);cyc_cookie_t (*cyb_set_level)(cyb_arg_t, cyc_level_t);void (*cyb_restore_level)(cyb_arg_t, cyc_cookie_t);void (*cyb_xcall)(cyb_arg_t, cpu_t *, cyc_func_t, void *);void (*cyb_suspend)(cyb_arg_t);void (*cyb_resume)(cyb_arg_t);cyb_arg_t cyb_arg;};
struct ufstransops {void (*trans_begin_sync)(struct ufstrans *, top_t, size_t);int (*trans_begin_async)(struct ufstrans *, top_t, size_t, int);void (*trans_end_sync)(struct ufstrans *, int *, top_t, size_t);void (*trans_end_async)(struct ufstrans *, top_t, size_t);void (*trans_delta)(struct ufstrans *, offset_t, off_t, delta_t, int (*)(), uintptr_t);int (*trans_ud_delta)(struct ufstrans *, offset_t, off_t, delta_t, int (*)(), uintptr_t);void (*trans_cancel)(struct ufstrans *, offset_t, off_t);void (*trans_log)(struct ufstrans *, char *, offset_t, off_t);int (*trans_iscancel)(struct ufstrans *, offset_t, off_t);void (*trans_seterror)(struct ufstrans *);int (*trans_iserror)(struct ufstrans *);void (*trans_mataadd)(struct ufstrans *, offset_t, off_t);void (*trans_matadel)(struct ufstrans *, offset_t, off_t);void (*trans_mataclr)(struct ufstrans *);};
struct ib_request {nis_name ibr_name;struct ib_request___284138CD61DEACF1E3B0F8ADC9D2B817 ibr_srch;u_int ibr_flags;struct ib_request___BC4F227684F3C8C9122828D0FF4C6B30 ibr_obj;struct ib_request___2D577313DCD2E74CD5A0055993933E3C ibr_cbhost;u_int ibr_bufsize;netobj ibr_cookie;};
struct tty_common {int t_flags;queue_t *t_readq;queue_t *t_writeq;tcflag_t t_iflag;tcflag_t t_cflag;uchar_t t_stopc;uchar_t t_startc;struct winsize t_size;mblk_t *t_iocpending;kmutex_t t_excl;};
struct iuvd_desc {tag_t iuvd_tag;uint32_t iuvd_vdsn;regid_t iuvd_ii;charspec_t iuvd_cset;dstring_t iuvd_lvi[128];dstring_t iuvd_ifo1[36];dstring_t iuvd_ifo2[36];dstring_t iuvd_ifo3[36];regid_t iuvd_iid;uint8_t iuvd_iu[128];};
struct devnames {char *dn_name;int dn_flags;struct par_list *dn_pl;kmutex_t dn_lock;kcondvar_t dn_wait;int dn_circular;kthread_id_t dn_busy_thread;dev_info_t *dn_head;int dn_instance;void *dn_inlist;ddi_prop_t *dn_global_prop_ptr;mta_handle_t *dn_mta;};
struct lwpsinfo {int pr_flag;id_t pr_lwpid;uintptr_t pr_addr;uintptr_t pr_wchan;char pr_stype;char pr_state;char pr_sname;char pr_nice;short pr_syscall;char pr_oldpri;char pr_cpu;int pr_pri;ushort_t pr_pctcpu;ushort_t pr_pad;timestruc_t pr_start;timestruc_t pr_time;char pr_clname[8];char pr_name[16];processorid_t pr_onpro;processorid_t pr_bindpro;psetid_t pr_bindpset;int pr_filler[5];};
struct msqid_ds {struct ipc_perm msg_perm;struct msg *msg_first;struct msg *msg_last;msglen_t msg_cbytes;msgqnum_t msg_qnum;msglen_t msg_qbytes;pid_t msg_lspid;pid_t msg_lrpid;time_t msg_stime;int32_t msg_pad1;time_t msg_rtime;int32_t msg_pad2;time_t msg_ctime;int32_t msg_pad3;short msg_cv;short msg_qnum_cv;int msg_pad4[3];};
struct vioc_map {dev_t vim_dev;caddr_t vim_path;size_t vim_pathlen;minor_t vim_unit;dev_t vim_basedev;uint64_t vim_id;uint_t vim_nvl;struct vio_labelent *vim_vl;uint_t vim_flags;};
struct dumphdr {uint32_t dump_magic;uint32_t dump_version;uint32_t dump_flags;uint32_t dump_wordsize;offset_t dump_start;offset_t dump_ksyms;offset_t dump_pfn;offset_t dump_map;offset_t dump_data;struct utsname dump_utsname;char dump_platform[257];char dump_panicstring[200];time_t dump_crashtime;int dump_pageshift;int dump_pagesize;int dump_hashmask;int dump_nvtop;pgcnt_t dump_npages;size_t dump_ksyms_size;size_t dump_ksyms_csize;};
struct mntnode {timespec_t mnt_time;size_t mnt_size;caddr_t mnt_base;uint_t mnt_nres;uint_t *mnt_devlist;ino_t mnt_ino;vnode_t *mnt_mountvp;vnode_t mnt_vnode;};
struct svc_req {rpcprog_t rq_prog;rpcvers_t rq_vers;rpcproc_t rq_proc;struct opaque_auth rq_cred;caddr_t rq_clntcred;SVCXPRT *rq_xprt;};
struct prxmap {uintptr_t pr_vaddr;size_t pr_size;char pr_mapname[64];offset_t pr_offset;int pr_mflags;int pr_pagesize;int pr_shmid;dev_t pr_dev;uint64_t pr_ino;ulong_t pr_anon;ulong_t pr_ashared;ulong_t pr_aref;ulong_t pr_amod;ulong_t pr_vnode;ulong_t pr_vshared;ulong_t pr_vref;ulong_t pr_vmod;ulong_t pr_filler[4];};
struct xp_ops {bool_t (*xp_recv)(SVCXPRT *, struct rpc_msg *);enum xprt_stat (*xp_stat)(SVCXPRT *);bool_t (*xp_getargs)(SVCXPRT *, xdrproc_t, caddr_t);bool_t (*xp_reply)(SVCXPRT *, struct rpc_msg *);bool_t (*xp_freeargs)(SVCXPRT *, xdrproc_t, caddr_t);void (*xp_destroy)(SVCXPRT *);bool_t (*xp_control)(SVCXPRT *,  uint_t, void *);};
struct sess {short s_ref;short s_mode;uid_t s_uid;gid_t s_gid;time_t s_ctime;dev_t s_dev;struct vnode *s_vp;struct pid *s_sidp;struct cred *s_cred;kmutex_t s_lock;kcondvar_t s_wait_cv;int s_cnt;int s_flag;};
union kstat_named___7F27F6A69995E91B81910D0AAA5ACCB4 {char c[16];int32_t i32;uint32_t ui32;int64_t i64;uint64_t ui64;int l;ulong_t ul;longlong_t ll;u_longlong_t ull;float f;double d;};
union _5396904C4F40B9D23631641FAE141A5A {struct _5396904C4F40B9D23631641FAE141A5A___EE37C16298BD5C3A4BE5EB624F81227B f;struct _5396904C4F40B9D23631641FAE141A5A___D98A3E97B5AFC2C9BD51B1758E1EE0CE code_cmdi;struct dbri_code_sbri code_sbri;struct _5396904C4F40B9D23631641FAE141A5A___01B336851ED8000991E8C2192EBE3996 code_fxdt;struct dbri_code_chil code_chil;struct dbri_code_rex code_rex;uint32_t word;};
struct _859BFE8FBA42C54E9900208E6ECF19F7 {short nmethods;short ndefined;char *(*nl_langinfo)(_LC_charmap_t *, nl_item);int (*mbtowc)(_LC_charmap_t *, int *,  char *, size_t);size_t (*mbstowcs)(_LC_charmap_t *, int *,  char *, size_t);int (*wctomb)(_LC_charmap_t *, char *, int);size_t (*wcstombs)(_LC_charmap_t *, char *,  int *, size_t);int (*mblen)(_LC_charmap_t *,  char *, size_t);int (*wcswidth)(_LC_charmap_t *,  int *, size_t);int (*wcwidth)(_LC_charmap_t *, int);int (*mbftowc)(_LC_charmap_t *, char *, int *, int (*)(void), int *);wint_t (*__fgetwc_xpg5)(_LC_charmap_t *, FILE *);wint_t (*btowc)(_LC_charmap_t *, int);int (*wctob)(_LC_charmap_t *, wint_t);int (*mbsinit)(_LC_charmap_t *,  mbstate_t *);size_t (*mbrlen)(_LC_charmap_t *,  char *, size_t, mbstate_t *);size_t (*mbrtowc)(_LC_charmap_t *, int *,  char *, size_t, mbstate_t *);size_t (*wcrtomb)(_LC_charmap_t *, char *, int, mbstate_t *);size_t (*mbsrtowcs)(_LC_charmap_t *, int *,  char **, size_t, mbstate_t *);size_t (*wcsrtombs)(_LC_charmap_t *, char *,  int **, size_t, mbstate_t *);_LC_methods_func_t placeholders[5];};
struct _C5DA07C86C437AAC183EB88624185419 {mblk_t *t_iocpending;compat_state_t t_curstate;struct sgttyb t_new_sgttyb;struct tchars t_new_tchars;struct ltchars t_new_ltchars;int t_new_lflags;int t_state;int t_iocid;int t_ioccmd;bufcall_id_t t_bufcallid;intptr_t t_arg;};
struct _F595FC0EEBF0E630CD599952C6884CED {t_uscalar_t dl_qos_type;dl_through_t dl_rcv_throughput;dl_transdelay_t dl_rcv_trans_delay;dl_through_t dl_xmt_throughput;dl_transdelay_t dl_xmt_trans_delay;dl_priority_t dl_priority;dl_protect_t dl_protection;t_scalar_t dl_residual_error;dl_resilience_t dl_resilience;};
struct cachefs_log_getpage_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;u_offset_t offset;uint_t len;};
struct cachefs_log_gpfront_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;u_offset_t off;uint_t len;};
struct cachefs_log_putpage_record {int type;int error;cfs_time_t time;uint64_t vfsp;cfs_fid_t fid;ino64_t fileno;cfs_uid_t uid;u_offset_t offset;uint_t len;};
struct cistpl_cftable_entry_t {uint32_t flags;uint32_t ifc;uint32_t pin;uint32_t index;struct cistpl_cftable_entry_pd_t pd;struct cistpl_cftable_entry_speed_t speed;struct cistpl_cftable_entry_io_t io;struct cistpl_cftable_entry_irq_t irq;struct cistpl_cftable_entry_mem_t mem;struct cistpl_cftable_entry_misc_t misc;};
struct __client__clnt_ops {enum clnt_stat (*cl_call)(struct __client *, rpcproc_t, xdrproc_t, caddr_t, xdrproc_t, caddr_t, struct timeval);void (*cl_abort)();void (*cl_geterr)(struct __client *, struct rpc_err *);bool_t (*cl_freeres)(struct __client *, xdrproc_t, caddr_t);void (*cl_destroy)(struct __client *);bool_t (*cl_control)(struct __client *, int, char *);int (*cl_settimers)(struct __client *, struct rpc_timers *, struct rpc_timers *, int, void (*)(), caddr_t, uint32_t);};
struct pcmcia_adapter {int pca_module;int pca_unit;int pca_number;struct dev_ops *pca_ops;dev_info_t *pca_dip;pcmcia_if_t *pca_if;void *pca_power;ddi_iblock_cookie_t *pca_iblock;ddi_idevice_cookie_t *pca_idev;kmutex_t *pca_mutex;int pca_numpower;int pca_numsockets;int pca_first_socket;uint32_t pca_flags;char pca_name[32];uint32_t pca_avail_intr;inthandler_t pca_int_handlers;};
struct ddi_intr_info {ddi_intrspec_t ii_ispec;ddi_iblock_cookie_t *ii_iblock_cookiep;ddi_idevice_cookie_t *ii_idevice_cookiep;uint_t (*ii_int_handler)(caddr_t ii_int_handler_arg);caddr_t ii_int_handler_arg;int32_t ii_kind;uint32_t ii_inum;};
struct rce_interface {int (*rce_start)(id_t, int);int (*rce_limitmemory)(size_t, struct as *, int);void (*rce_exit)(proc_t *);void (*rce_flush)(ulong_t);int (*rce_proccreate)(proc_t *);void (*rce_procdestroy)(proc_t *);void (*rce_setuid)(int, cred_t *);void (*rce_lwpfail)(proc_t *, kthread_id_t);void (*rce_lwpexit)(proc_t *, kthread_id_t);int (*rce_lwpnew)(proc_t *);uid_t (*rce_limid)(proc_t *);};
struct proc_usage {uint64_t pu_minflt;uint64_t pu_majflt;uint64_t pu_sndmsg;uint64_t pu_rcvmsg;uint64_t pu_ioch;uint64_t pu_iblk;uint64_t pu_oblk;uint64_t pu_vcsw;uint64_t pu_icsw;uint64_t pu_nsig;uint64_t pu_nswp;uint64_t pu_nscl;uint64_t pu_utimesec;uint64_t pu_utimensec;uint64_t pu_stimesec;uint64_t pu_stimensec;uint64_t pu_startsec;uint64_t pu_startnsec;uint64_t pu_finishsec;uint64_t pu_finishnsec;pid_t pu_pid;uid_t pu_ruid;gid_t pu_rgid;projid_t pu_projid;taskid_t pu_taskid;uint32_t pu_acflag;char *pu_command;uint32_t pu_major;uint32_t pu_minor;};
struct lm_sleep {struct lm_sleep *next;struct lm_sysid *sysid;pid_t pid;struct netobj fh;struct netobj oh;u_offset_t offset;len_t length;bool_t in_use;bool_t waiting;kcondvar_t cv;vnode_t *vp;};
struct syncline {struct ser_str sl_stream;struct scc_mode sl_mode;struct sl_stats sl_st;mblk_t *sl_rhead;mblk_t *sl_ractb;mblk_t *sl_rstandby[6];mblk_t *sl_xhead;mblk_t *sl_xactb;mblk_t *sl_xstandby;mblk_t *sl_rdone[20];int sl_rdone_wptr;int sl_rdone_rptr;mblk_t *sl_mstat;bufcall_id_t sl_bufcid;timeout_id_t sl_wd_id;int sl_wd_count;int sl_ocnt;int sl_mru;int sl_bad_count_int;uchar_t sl_rr0;uchar_t sl_address;uchar_t sl_txstate;uchar_t sl_flags;uchar_t sl_m_error;uchar_t sl_soft_active;};
struct pt_ttys {queue_t *ptm_rdq;queue_t *pts_rdq;mblk_t *pt_nullmsg;pid_t pt_pid;minor_t pt_minor;int pt_refcnt;ushort_t pt_state;kcondvar_t pt_cv;kmutex_t pt_lock;};
struct dupreq {uint32_t dr_xid;rpcproc_t dr_proc;rpcvers_t dr_vers;rpcprog_t dr_prog;struct netbuf dr_addr;struct netbuf dr_resp;int dr_status;time_t dr_time;uint_t dr_hash;struct dupreq *dr_next;struct dupreq *dr_prev;struct dupreq *dr_chain;struct dupreq *dr_prevchain;};
struct module {int total_allocated;Ehdr hdr;char *shdrs;Shdr *symhdr;Shdr *strhdr;char *depends_on;size_t symsize;char *symspace;int flags;size_t text_size;size_t data_size;char *text;char *data;unsigned int symtbl_section;char *symtbl;char *strings;unsigned int hashsize;symid_t *buckets;symid_t *chains;unsigned int nsyms;unsigned int bss_align;size_t bss_size;uintptr_t bss;char *filename;struct module_list *head;struct module_list *tail;reloc_dest_t destination;module_mach *machdata;};
struct queue {struct qinit *q_qinfo;struct msgb *q_first;struct msgb *q_last;struct queue *q_next;struct queue *q_link;void *q_ptr;size_t q_count;uint_t q_flag;ssize_t q_minpsz;ssize_t q_maxpsz;size_t q_hiwat;size_t q_lowat;struct qband *q_bandp;kmutex_t q_lock;struct stdata *q_stream;struct syncq *q_syncq;unsigned char q_nband;kcondvar_t q_wait;kcondvar_t q_sync;struct queue *q_nfsrv;struct queue *q_nbsrv;ushort_t q_draining;short q_struiot;uint_t q_syncqmsgs;size_t q_mblkcnt;struct msgb *q_sqhead;struct msgb *q_sqtail;uint_t q_sqflags;size_t q_refcnt;struct queue *q_sqnext;struct queue *q_sqprev;pri_t q_spri;};
struct vnode {kmutex_t v_lock;ushort_t v_flag;uint_t v_count;struct vfs *v_vfsmountedhere;struct vnodeops *v_op;struct vfs *v_vfsp;struct stdata *v_stream;struct page *v_pages;enum vtype v_type;dev_t v_rdev;caddr_t v_data;struct filock *v_filocks;struct shrlocklist *v_shrlocks;kcondvar_t v_cv;void *v_locality;};
struct llc1 {struct llc1 *llc_next;struct llc1 *llc_prev;mblk_t *llc_mb;int llc_state;int llc_style;int llc_minor;int llc_type;int llc_sap;uchar_t llc_snap[5];int llc_waiting_for;int llc_flags;int llc_multicnt;llc_mcast_t **llc_mcast;queue_t *llc_qptr;kmutex_t llc_lock;struct llc_mac_info *llc_mac_info;struct llc_stats *llc_stats;};
struct buf {int b_flags;struct buf *b_forw;struct buf *b_back;struct buf *av_forw;struct buf *av_back;o_dev_t b_dev;size_t b_bcount;union buf___06720CD10B1F5166208F8EFA5A9BD2FD b_un;lldaddr_t _b_blkno;char b_oerror;size_t b_resid;clock_t b_start;struct proc *b_proc;struct page *b_pages;clock_t b_reltime;size_t b_bufsize;int (*b_iodone)(struct buf *);struct vnode *b_vp;struct buf *b_chain;int b_reqcnt;int b_error;void *b_private;dev_t b_edev;ksema_t b_sem;ksema_t b_io;struct buf *b_list;struct page **b_shadow;};
struct pty {int pt_flags;mblk_t *pt_stuffqfirst;mblk_t *pt_stuffqlast;int pt_stuffqlen;tty_common_t pt_ttycommon;bufcall_id_t pt_wbufcid;struct proc *pt_selr;struct proc *pt_selw;struct proc *pt_sele;dev_t pt_sdev;struct vnode *pt_vnode;short pt_pgrp;uchar_t pt_send;uchar_t pt_ucntl;kmutex_t ptc_lock;kcondvar_t pt_cv_flags;kcondvar_t pt_cv_readq;kcondvar_t pt_cv_writeq;};
struct pcmcia_logical_socket {int ls_socket;uint32_t ls_flags;struct pcmcia_adapter *ls_adapter;pcmcia_if_t *ls_if;dev_info_t *ls_sockdrv;dev_info_t *ls_dip[8];dev_info_t *ls_mfintr_dip;int ls_functions;uint32_t ls_cs_events;uint32_t ls_intr_pri;uint32_t ls_intr_vec;int ls_intrrefs;struct intrspec ls_intrspec;inthandler_t *ls_inthandlers;ddi_iblock_cookie_t ls_iblk;ddi_idevice_cookie_t ls_idev;kmutex_t ls_ilock;int ls_error;};
struct cfga_stat_data {cfga_ap_log_id_t ap_log_id;cfga_ap_phys_id_t ap_phys_id;cfga_stat_t ap_r_state;cfga_stat_t ap_o_state;cfga_cond_t ap_cond;cfga_busy_t ap_busy;time_t ap_status_time;cfga_info_t ap_info;cfga_type_t ap_type;};
struct file_set_desc {tag_t fsd_tag;tstamp_t fsd_time;uint16_t fsd_ilevel;uint16_t fsd_mi_level;uint32_t fsd_cs_list;uint32_t fsd_mcs_list;uint32_t fsd_fs_no;uint32_t fsd_fsd_no;charspec_t fsd_lvidcs;char fsd_lvid[128];charspec_t fsd_fscs;char fsd_fsi[32];char fsd_cfi[32];char fsd_afi[32];long_ad_t fsd_root_icb;regid_t fsd_did;long_ad_t fsd_next;uint8_t fsd_res[48];};
struct ddi_dma_impl {ulong_t dmai_mapping;uint_t dmai_size;off_t dmai_offset;uint_t dmai_minxfer;uint_t dmai_burstsizes;uint_t dmai_ndvmapages;uint_t dmai_pool;uint_t dmai_rflags;uint_t dmai_inuse;uint_t dmai_nwin;uint_t dmai_winsize;caddr_t dmai_nexus_private;void *dmai_iopte;uint_t *dmai_sbi;void *dmai_minfo;dev_info_t *dmai_rdip;ddi_dma_obj_t dmai_object;ddi_dma_attr_t dmai_attr;ddi_dma_cookie_t *dmai_cookie;int (*dmai_fault_check)(struct ddi_dma_impl *handle);void (*dmai_fault_notify)(struct ddi_dma_impl *handle);int dmai_fault;};
struct log_vol_desc {tag_t lvd_tag;uint32_t lvd_vdsn;charspec_t lvd_desc_cs;dstring_t lvd_lvid[128];uint32_t lvd_log_bsize;regid_t lvd_dom_id;long_ad_t lvd_lvcu;uint32_t lvd_mtbl_len;uint32_t lvd_num_pmaps;regid_t lvd_ii;uint8_t lvd_iu[128];extent_ad_t lvd_int_seq_ext;uint8_t lvd_pmaps[72];};
union PPPmessages {uint_t ppp_message;pppProtoUp_t proto_up;pppProtoDown_t proto_down;pppProtoFinish_t proto_finish;pppProtoStart_t proto_start;pppError_t error_ind;pppAuthMsg_t auth_msg;pppConfig_t config;};
struct segdev_data {offset_t offset;kmutex_t lock;int (*mapfunc)(dev_t dev, off_t off, int prot);struct vnode *vp;uchar_t pageprot;uchar_t prot;uchar_t maxprot;uchar_t type;struct vpage *vpage;uint_t hat_attr;uint_t hat_flags;size_t softlockcnt;void *devmap_data;};
struct segdrv_data {kmutex_t lock;int (*mapfunc)(dev_t dev, off_t off, int prot);u_offset_t offset;uint_t flags;struct vnode *vp;uchar_t pageprot;uchar_t prot;uchar_t maxprot;struct vpage *vpage;caddr_t client;struct seg_ops *client_segops;int (*client_create)();};
struct td_syncinfo {td_thragent_t *si_ta_p;psaddr_t si_sv_addr;td_sync_type_e si_type;uint32_t si_shared_type;td_sync_flags_t si_flags[8];union td_syncinfo___si_un_state si_state;int si_size;uchar_t si_has_waiters;uchar_t si_is_wlock;td_thrhandle_t si_owner;psaddr_t si_data;};
struct ses_softc {enctyp ses_type;encvec ses_vec;uint_t ses_nobjects;void *ses_private;encobj *ses_objmap;uchar_t ses_encstat;struct scsi_device *ses_devp;struct buf *ses_rqbp;struct scsi_pkt *ses_rqpkt;struct buf *ses_sbufp;timeout_id_t ses_restart_id;kcondvar_t ses_sbufcv;uchar_t ses_sbufbsy;uchar_t ses_oflag;uchar_t ses_present;uchar_t ses_suspended;uchar_t ses_arq;uint_t ses_lyropen;int ses_retries;struct uscsi_cmd ses_uscsicmd;uchar_t ses_srqcdb[12];uchar_t ses_srqsbuf[20];};
struct fifonode {struct vnode fn_vnode;struct vnode *fn_realvp;ino_t fn_ino;fifonode_t *fn_dest;struct msgb *fn_mp;struct msgb *fn_tail;uint_t fn_count;fifolock_t *fn_lock;kcondvar_t fn_wait_cv;ushort_t fn_fill1;ushort_t fn_wcnt;ushort_t fn_rcnt;ushort_t fn_open;ushort_t fn_wsynccnt;ushort_t fn_rsynccnt;ushort_t fn_fill;time_t fn_atime;time_t fn_mtime;time_t fn_ctime;fifonode_t *fn_nextp;fifonode_t *fn_backp;int fn_insync;uint_t fn_flag;};
struct shmid_ds {struct ipc_perm shm_perm;size_t shm_segsz;struct anon_map *shm_amp;ushort_t shm_lkcnt;pid_t shm_lpid;pid_t shm_cpid;shmatt_t shm_nattch;ulong_t shm_cnattch;time_t shm_atime;int32_t shm_pad1;time_t shm_dtime;int32_t shm_pad2;time_t shm_ctime;int32_t shm_pad3;int32_t shm_pad4[4];};
struct fas_cmd {struct scsi_pkt *cmd_pkt;struct fas_cmd *cmd_forw;uchar_t *cmd_cdbp;uint32_t cmd_data_count;uint32_t cmd_cur_addr;ushort_t cmd_qfull_retries;ushort_t cmd_nwin;ushort_t cmd_cur_win;ushort_t cmd_saved_win;uint32_t cmd_saved_data_count;uint32_t cmd_saved_cur_addr;int cmd_pkt_flags;ddi_dma_handle_t cmd_dmahandle;ddi_dma_cookie_t cmd_dmacookie;uint32_t cmd_dmacount;uchar_t cmd_cdb[12];uint_t cmd_flags;struct scsi_arq_status cmd_scb;uchar_t cmd_scblen;uchar_t cmd_slot;uchar_t cmd_age;uchar_t cmd_cdblen;uint64_t cmd_pkt_private[1];uchar_t cmd_privlen;uchar_t cmd_tag[2];uchar_t cmd_actual_cdblen;};
struct ml_unit {struct ml_unit *un_next;int un_flags;buf_t *un_bp;void *un_ufsvfs;dev_t un_dev;extent_block_t *un_ebp;size_t un_nbeb;struct mt_map *un_deltamap;struct mt_map *un_udmap;struct mt_map *un_logmap;struct mt_map *un_matamap;uint32_t un_maxresv;uint32_t un_resv;uint32_t un_resv_wantin;uint32_t un_tid;cirbuf_t un_rdbuf;cirbuf_t un_wrbuf;struct ufstrans *un_ut;ml_odunit_t un_ondisk;kmutex_t un_log_mutex;kmutex_t un_state_mutex;};
struct snode {struct snode *s_next;struct vnode s_vnode;struct vnode *s_realvp;struct vnode *s_commonvp;dev_t s_dev;dev_info_t *s_dip;u_offset_t s_nextr;struct snode *s_list;u_offset_t s_size;ushort_t s_flag;dev_t s_fsid;time_t s_atime;time_t s_mtime;time_t s_ctime;int s_count;int s_mapcnt;kmutex_t s_lock;kcondvar_t s_cv;dev_t s_gdev;};
struct zscom {void (*zs_txint)();unsigned char *zs_wr_cur;unsigned char *zs_wr_lim;void (*zs_rxint)();unsigned char *zs_rd_cur;unsigned char *zs_rd_lim;struct zscc_device *zs_addr;void (*zs_xsint)();void (*zs_srint)();int (*zs_suspend)();int (*zs_resume)();uchar_t zs_wreg[16];caddr_t zs_priv;struct zsops *zs_ops;dev_info_t *zs_dip;time_t zs_dtrlow;short zs_unit;uchar_t zs_suspended;struct zs_prog *zs_prog_save;struct zscom *zs_next;struct zscom *zs_back;kmutex_t *zs_excl_hi;kmutex_t *zs_excl;kmutex_t *zs_ocexcl;kcondvar_t zs_flags_cv;ulong_t zs_priv_str[800];uchar_t zs_flags_need;uchar_t zs_flags_doing;kstat_t *intrstats;};
struct pcfs {struct vfs *pcfs_vfs;int pcfs_flags;int pcfs_ldrv;dev_t pcfs_xdev;struct vnode *pcfs_devvp;int pcfs_secsize;int pcfs_spcl;int pcfs_spt;int pcfs_sdshift;int pcfs_fatsec;int pcfs_numfat;int pcfs_rdirsec;daddr_t pcfs_dosstart;daddr_t pcfs_fatstart;daddr_t pcfs_rdirstart;daddr_t pcfs_datastart;int pcfs_clsize;int pcfs_ncluster;int pcfs_entps;int pcfs_nrefs;int pcfs_frefs;int pcfs_nxfrecls;uchar_t *pcfs_fatp;uchar_t *pcfs_fat_changemap;int pcfs_fatsize;int pcfs_fat_changemapsize;time_t pcfs_fattime;time_t pcfs_verifytime;kmutex_t pcfs_lock;kthread_id_t pcfs_owner;int pcfs_count;struct fat32_boot_fsinfo fsinfo_native;uint32_t f32fsinfo_sector;struct pcfs *pcfs_nxt;int pcfs_fatjustread;};
struct fs {uint32_t fs_link;uint32_t fs_rlink;daddr32_t fs_sblkno;daddr32_t fs_cblkno;daddr32_t fs_iblkno;daddr32_t fs_dblkno;int32_t fs_cgoffset;int32_t fs_cgmask;time32_t fs_time;int32_t fs_size;int32_t fs_dsize;int32_t fs_ncg;int32_t fs_bsize;int32_t fs_fsize;int32_t fs_frag;int32_t fs_minfree;int32_t fs_rotdelay;int32_t fs_rps;int32_t fs_bmask;int32_t fs_fmask;int32_t fs_bshift;int32_t fs_fshift;int32_t fs_maxcontig;int32_t fs_maxbpg;int32_t fs_fragshift;int32_t fs_fsbtodb;int32_t fs_sbsize;int32_t fs_csmask;int32_t fs_csshift;int32_t fs_nindir;int32_t fs_inopb;int32_t fs_nspf;int32_t fs_optim;int32_t fs_npsect;int32_t fs_interleave;int32_t fs_trackskew;int32_t fs_id[2];daddr32_t fs_csaddr;int32_t fs_cssize;int32_t fs_cgsize;int32_t fs_ntrak;int32_t fs_nsect;int32_t fs_spc;int32_t fs_ncyl;int32_t fs_cpg;int32_t fs_ipg;int32_t fs_fpg;struct csum fs_cstotal;char fs_fmod;char fs_clean;char fs_ronly;char fs_flags;char fs_fsmnt[512];int32_t fs_cgrotor;union fs___9F46D7DD5950A1025F84ACF2764AD23B fs_u;int32_t fs_cpc;short fs_opostbl[16][8];int32_t fs_sparecon[55];int32_t fs_state;quad_t fs_qbmask;quad_t fs_qfmask;int32_t fs_postblformat;int32_t fs_nrpos;int32_t fs_postbloff;int32_t fs_rotbloff;int32_t fs_magic;uchar_t fs_space[1];};
struct mdi_register_address {union mdi_register_address___6A5DEE847BEB548DCD7E1DF7A09F1176 m_mcr;uchar_t m_ppr;uchar_t m_tmsr0;uchar_t m_tmsr1;uchar_t m_msr;uchar_t m_fsr;struct mdi_register_address___8AF1E4FBAF14D0237CF30F045044651E m_rsr;uchar_t m_ccr;uint_t m_tmr;uchar_t m_mod;uchar_t m_acr;uchar_t m_pad0[6];ushort_t m_hct;ushort_t m_vct;ushort_t m_hbs;ushort_t m_hbc;ushort_t m_hss;ushort_t m_hsc;ushort_t m_csc;ushort_t m_vbs;ushort_t m_vbc;ushort_t m_vss;ushort_t m_vsc;ushort_t m_xcs;ushort_t m_xcc;ushort_t m_fsa;ushort_t m_adr;uchar_t m_pad2[206];uchar_t m_pcg[256];struct mdi_register_address___B4F8CB07784CFCBDA9ED96F36DDE887E v_vbr;union mdi_register_address___3B049E4E80A4E7835BDCE597C02848A0 v_mcr;union mdi_register_address___1D710587ACD8F96B72E62202A6B4467B v_vcr;struct mdi_register_address___77CD747F4C29F871554116EFE8364197 v_vca;uchar_t m_pad3[240];};
struct cfga_list_data {cfga_log_ext_t ap_log_id;cfga_phys_ext_t ap_phys_id;cfga_class_t ap_class;cfga_stat_t ap_r_state;cfga_stat_t ap_o_state;cfga_cond_t ap_cond;cfga_busy_t ap_busy;time_t ap_status_time;cfga_info_t ap_info;cfga_type_t ap_type;};
struct pri_vol_desc {tag_t pvd_tag;uint32_t pvd_vdsn;uint32_t pvd_pvdn;dstring_t pvd_vol_id[32];uint16_t pvd_vsn;uint16_t pvd_mvsn;uint16_t pvd_il;uint16_t pvd_mil;uint32_t pvd_csl;uint32_t pvd_mcsl;dstring_t pvd_vsi[128];charspec_t pvd_desc_cs;charspec_t pvd_exp_cs;extent_ad_t pvd_vol_abs;extent_ad_t pvd_vcn;regid_t pvd_appl_id;tstamp_t pvd_time;regid_t pvd_ii;char pvd_iu[64];uint32_t pvd_pvdsl;uint16_t pvd_flags;uint8_t pvd_res[22];};
struct hs_direntry {uint_t ext_lbn;uint_t ext_size;struct timeval cdate;struct timeval mdate;struct timeval adate;enum vtype type;mode_t mode;uint_t nlink;uid_t uid;gid_t gid;dev_t r_dev;unsigned int xar_prot : 1;uchar_t xar_len;uchar_t intlf_sz;uchar_t intlf_sk;ushort_t sym_link_flag;char *sym_link;};
struct file_entry {tag_t fe_tag;icb_tag_t fe_icb_tag;uint32_t fe_uid;uint32_t fe_gid;uint32_t fe_perms;uint16_t fe_lcount;uint8_t fe_rec_for;uint8_t fe_rec_dis;uint32_t fe_rec_len;uint64_t fe_info_len;uint64_t fe_lbr;tstamp_t fe_acc_time;tstamp_t fe_mod_time;tstamp_t fe_attr_time;uint32_t fe_ckpoint;long_ad_t fe_ea_icb;regid_t fe_impl_id;uint64_t fe_uniq_id;uint32_t fe_len_ear;uint32_t fe_len_adesc;char fe_spec[336];};
struct ldterm_mod {struct termios t_modes;struct termios t_amodes;struct termios t_dmodes;unsigned int t_state;int t_line;int t_col;int t_rocount;int t_rocol;mblk_t *t_message;mblk_t *t_endmsg;size_t t_msglen;mblk_t *t_echomp;int t_rd_request;int t_iocid;bufcall_id_t t_wbufcid;timeout_id_t t_vtid;uchar_t t_codeset;uchar_t t_eucleft;uchar_t t_eucign;uchar_t t_eucpad;eucioc_t eucwioc;uchar_t *t_eucp;mblk_t *t_eucp_mp;uchar_t t_maxeuc;int t_eucwarn;ldterm_cs_data_t t_csdata;struct _ldterm_cs_methods t_csmethods;uchar_t t_scratch[8];uchar_t t_scratch_len;};
struct segvn_data {krwlock_t lock;uchar_t pageprot;uchar_t prot;uchar_t maxprot;uchar_t type;u_offset_t offset;struct vnode *vp;ulong_t anon_index;struct anon_map *amp;struct vpage *vpage;struct cred *cred;size_t swresv;uchar_t advice;uchar_t pageadvice;ushort_t flags;ssize_t softlockcnt;};
struct fdbuffer {fdb_type_t fd_type;int fd_state;size_t fd_len;size_t fd_iocount;int fd_iodispatch;int fd_err;ssize_t fd_resid;buf_t *fd_parentbp;union fdbuffer___3B787F33FCB8F87ECFB5EACDDE5BCC6D fd_un;fdb_holes_t *fd_holes;page_t **fd_shadow;struct proc *fd_procp;fdb_iodone_t fd_iofunc;void *fd_iargp;kmutex_t fd_mutex;};
struct cyc_cpu {cpu_t *cyp_cpu;cyc_index_t *cyp_heap;cyclic_t *cyp_cyclics;cyc_index_t cyp_nelems;cyc_index_t cyp_size;cyc_state_t cyp_state;cyc_softbuf_t cyp_softbuf[2];cyc_backend_t *cyp_backend;ksema_t cyp_modify_wait;uint32_t cyp_modify_levels;uint32_t cyp_rpend;cyc_tracebuf_t cyp_trace[3];};
struct esp_cmd {struct scsi_pkt cmd_pkt;struct esp_cmd *cmd_forw;uchar_t *cmd_cdbp;uchar_t *cmd_scbp;uint_t cmd_flags;uint32_t cmd_data_count;uint32_t cmd_cur_addr;ushort_t cmd_nwin;ushort_t cmd_cur_win;ushort_t cmd_saved_win;uint32_t cmd_saved_data_count;uint32_t cmd_saved_cur_addr;ddi_dma_handle_t cmd_dmahandle;ddi_dma_cookie_t cmd_dmacookie;uint32_t cmd_dmacount;clock_t cmd_timeout;uchar_t cmd_cdb[12];uint64_t cmd_pkt_private[1];uchar_t cmd_cdblen;uchar_t cmd_cdblen_alloc;uchar_t cmd_qfull_retries;uint_t cmd_scblen;uint_t cmd_privlen;uchar_t cmd_scb[32];ushort_t cmd_age;uchar_t cmd_tag[2];};
struct term {char _b1;char _b2;char _b3;char _b4;char _b5;char _b6;char _b7;char _b8;char _b9;char _b10;char _b11;char _b12;char _b13;char _b14;char _b15;char _b16;char _b17;char _b18;char _b19;char _b20;char _b21;short _c1;short _c2;short _c3;short _c4;short _c5;short _c6;short _c7;short _c8;struct _Vr2_Astrs _Vr2_Astrs;struct _Vr2_Bstrs _Vr2_Bstrs;short Filedes;SGTTY Ottyb;SGTTY Nttyb;SGTTYS Ottybs;SGTTYS Nttybs;struct _bool_struct *_bools;struct _num_struct *_nums;struct _str_struct *_strs;char *_strtab;chtype sgr_mode;chtype sgr_faked;int _delay;int _inputfd;int _check_fd;_KEY_MAP **_keys;_KEY_MAP *internal_keys;short _ksz;short _lastkey_ordered;short _lastmacro_ordered;short _first_macro;char funckeystarter[256];char _fl_rawmode;char fl_typeahdok;char _cursorstate;char _iwait;short _regs[26];chtype _input_queue[32];short _ungotten;char _chars_on_queue;_ochtype *_acsmap;chtype *_acs32map;char *turn_on_seq[9];chtype bit_vector;char *cursor_seq[3];char _termname[15];char *turn_off_seq[3];chtype check_turn_off;chtype non_faked_mode;_Color_pair _cur_pair;_Color_pair *_pairs_tbl;_Color *_color_tbl;};
struct vfs {struct vfs *vfs_next;struct vfsops *vfs_op;struct vnode *vfs_vnodecovered;uint_t vfs_flag;uint_t vfs_bsize;int vfs_fstype;fsid_t vfs_fsid;caddr_t vfs_data;dev_t vfs_dev;ulong_t vfs_bcount;ushort_t vfs_nsubmounts;struct vfs *vfs_list;struct vfs *vfs_hash;ksema_t vfs_reflock;uint_t vfs_count;mntopts_t vfs_mntopts;char *vfs_resource;char *vfs_mntpt;time_t vfs_mtime;};
union em_primitives {uint32_t em_primitive;em_init_req_t init_req;em_info_req_t info_req;em_get_first_tuple_req_t get_first_tuple_req;em_get_next_tuple_req_t get_next_tuple_req;em_info_ack_t info_ack;em_event_ind_t event_ind;em_modify_event_mask_req_t modify_event_mask_req;em_get_socket_req_t get_socket_req;em_ident_socket_req_t ident_socket_req;};
union ipd_messages {uint_t msg;ipd_make_if_t make_if;ipd_con_dis_t con_dis;ipd_dis_ind_t dis_ind;ipd_err_ind_t err_ind;ipd_set_tim_t set_tim;ipd_blacklist_t blacklist;ipd_get_info_t get_info;ipd_register_t regist;ipd_unregister_t unregist;uint_t version;};
struct td_thrinfo {td_thragent_t *ti_ta_p;unsigned int ti_user_flags;thread_t ti_tid;char *ti_tls;psaddr_t ti_startfunc;psaddr_t ti_stkbase;int ti_stksize;psaddr_t ti_ro_area;int ti_ro_size;td_thr_state_e ti_state;uchar_t ti_db_suspended;td_thr_type_e ti_type;intptr_t ti_pc;intptr_t ti_sp;short ti_flags;int ti_pri;lwpid_t ti_lid;sigset_t ti_sigmask;uchar_t ti_traceme;uchar_t ti_preemptflag;uchar_t ti_pirecflag;sigset_t ti_pending;td_thr_events_t ti_events;};
struct lwpstatus {int pr_flags;id_t pr_lwpid;short pr_why;short pr_what;short pr_cursig;short pr_pad1;siginfo_t pr_info;sigset_t pr_lwppend;sigset_t pr_lwphold;struct sigaction pr_action;stack_t pr_altstack;uintptr_t pr_oldcontext;short pr_syscall;short pr_nsysarg;int pr_errno;int pr_sysarg[8];int pr_rval1;int pr_rval2;char pr_clname[8];timestruc_t pr_tstamp;int pr_filler[12];ulong_t pr_pad2;ulong_t pr_instr;prgregset_t pr_reg;prfpregset_t pr_fpreg;};
struct scsi_tape {struct scsi_device *un_sd;struct scsi_pkt *un_rqs;struct scsi_pkt *un_mkr_pkt;kcondvar_t un_sbuf_cv;kcondvar_t un_queue_cv;struct buf *un_sbufp;char *un_srqbufp;kcondvar_t un_clscv;struct buf *un_quef;struct buf *un_quel;struct buf *un_runqf;struct buf *un_runql;struct seq_mode *un_mspl;struct st_drivetype *un_dp;uint_t un_dp_size;caddr_t un_tmpbuf;daddr_t un_blkno;int un_oflags;int un_fileno;int un_err_fileno;daddr_t un_err_blkno;uint_t un_err_resid;short un_fmneeded;dev_t un_dev;uchar_t un_attached;int un_pwr_mgmt;uchar_t un_density_known;uchar_t un_curdens;uchar_t un_lastop;uchar_t un_eof;uchar_t un_laststate;uchar_t un_state;uchar_t un_status;uchar_t un_retry_ct;uchar_t un_tran_retry_ct;uchar_t un_read_only;uchar_t un_test_append;uchar_t un_arq_enabled;uchar_t un_untagged_qing;uchar_t un_allow_large_xfer;uchar_t un_sbuf_busy;uchar_t un_ncmds;uchar_t un_throttle;uchar_t un_last_throttle;uchar_t un_max_throttle;uchar_t un_persistence;uchar_t un_persist_errors;uchar_t un_flush_on_errors;uint_t un_kbytes_xferred;uint_t un_last_resid;uint_t un_last_count;struct kstat *un_stats;struct buf *un_rqs_bp;struct buf *un_wf;struct buf *un_wl;struct read_blklim *un_rbl;int un_maxdma;uint_t un_bsize;int un_maxbsize;uint_t un_minbsize;int un_errno;kcondvar_t un_state_cv;enum mtio_state un_mediastate;enum mtio_state un_specified_mediastate;timeout_id_t un_delay_tid;timeout_id_t un_hib_tid;opaque_t un_swr_token;uchar_t un_comp_page;uchar_t un_rsvd_status;kstat_t *un_errstats;int un_init_options;int un_save_fileno;daddr_t un_save_blkno;uchar_t un_restore_pos;uchar_t un_silent_skip;int un_power_level;short un_tids_at_suspend;kcondvar_t un_tape_busy_cv;kcondvar_t un_suspend_cv;uchar_t un_eject_tape_on_failure;uchar_t un_tape_alert;uchar_t un_rqs_state;caddr_t un_uscsi_rqs_buf;};
struct stat64 {dev_t st_dev;int st_pad1[3];ino64_t st_ino;mode_t st_mode;nlink_t st_nlink;uid_t st_uid;gid_t st_gid;dev_t st_rdev;int st_pad2[2];off64_t st_size;timestruc_t st_atim;timestruc_t st_mtim;timestruc_t st_ctim;blksize_t st_blksize;blkcnt64_t st_blocks;char st_fstype[16];int st_pad4[8];};
struct vattr {uint_t va_mask;vtype_t va_type;mode_t va_mode;uid_t va_uid;gid_t va_gid;dev_t va_fsid;u_longlong_t va_nodeid;nlink_t va_nlink;u_offset_t va_size;timestruc_t va_atime;timestruc_t va_mtime;timestruc_t va_ctime;dev_t va_rdev;uint_t va_blksize;u_longlong_t va_nblocks;uint_t va_vcode;};
struct stat {dev_t st_dev;int st_pad1[3];ino_t st_ino;mode_t st_mode;nlink_t st_nlink;uid_t st_uid;gid_t st_gid;dev_t st_rdev;int st_pad2[2];off_t st_size;int st_pad3;timestruc_t st_atim;timestruc_t st_mtim;timestruc_t st_ctim;blksize_t st_blksize;blkcnt_t st_blocks;char st_fstype[16];int st_pad4[8];};
struct as {kmutex_t a_contents;uchar_t a_flags;uchar_t a_vbits;kcondvar_t a_cv;struct hat *a_hat;struct hrmstat *a_hrm;caddr_t a_userlimit;union as___FD7ECAE4B99ABB3F02DCF01D47D0EBC9 a_cache;krwlock_t a_lock;int a_nwpage;struct watched_page *a_wpage;seg_next a_segs;size_t a_size;struct seg *a_tail;uint_t a_nsegs;uchar_t a_lrep;uchar_t a_hilevel;uchar_t a_unused;uchar_t a_updatedir;vnode_t **a_objectdir;size_t a_sizedir;};
union cfs_dlog_entry__cfs_dlog_entry_items {struct cfs_dlog_setattr dl_setattr;struct cfs_dlog_setsecattr dl_setsecattr;struct cfs_dlog_create dl_create;struct cfs_dlog_remove dl_remove;struct cfs_dlog_rmdir dl_rmdir;struct cfs_dlog_mkdir dl_mkdir;struct cfs_dlog_link dl_link;struct cfs_dlog_symlink dl_symlink;struct cfs_dlog_rename dl_rename;struct cfs_dlog_modify dl_modify;struct cfs_dlog_mapfid dl_mapfid;};
struct cachefscache {struct cachefscache *c_next;uint_t c_flags;struct cache_label c_label;struct cache_usage c_usage;struct cachefs_rl_info c_rlinfo;struct vnode *c_resfilevp;uint_t c_rl_window;rl_entry_t *c_rl_entries;struct vnode *c_dirvp;struct vnode *c_lockvp;struct vnode *c_lostfoundvp;int c_refcnt;struct fscache *c_fslist;struct cachefs_workq c_workq;kmutex_t c_contentslock;kmutex_t c_fslistlock;kmutex_t c_mflock;ushort_t c_unique;kcondvar_t c_cwcv;kcondvar_t c_cwhaltcv;uint_t c_gc_count;time_t c_gc_time;time_t c_gc_before;time_t c_gc_after;uint_t c_apop_inqueue;pid_t c_rootdaemonid;struct cachefs_log_cookie *c_log;struct cachefs_log_control *c_log_ctl;kmutex_t c_log_mutex;};
struct fc_transport {void *fc_cookie;ddi_dma_lim_t *fc_dmalimp;ddi_dma_attr_t *fc_dma_attrp;ddi_iblock_cookie_t *fc_iblock;kmutex_t fc_mtx;kcondvar_t fc_cv;int (*fc_transport)(struct fc_packet *fc, fc_sleep_t sleep);int (*fc_reset)(struct fc_packet *fc);fc_packet_t *(*fc_pkt_alloc)(void *cookie, fc_sleep_t sleep);void (*fc_pkt_free)(void *cookie, struct fc_packet *pkt);fc_statec_cookie_t (*fc_statec_register)(void *cookie, void (*callback)(void *, fc_statec_t), void *arg);void (*fc_statec_unregister)(void *cookie, fc_statec_cookie_t statec_cookie);void (*fc_interface_poll)(void *cookie);fc_uc_cookie_t (*fc_uc_register)(void *cookie, fc_devdata_t devdata, void (*callback)(void *), void *arg);void (*fc_uc_unregister)(void *cookie, fc_uc_cookie_t uc_cookie);int (*fc_uc_get_pkt)(void *cookie, struct fc_packet *pkt);};
struct mntinfo {kmutex_t mi_lock;struct servinfo *mi_servers;struct servinfo *mi_curr_serv;kcondvar_t mi_failover_cv;int mi_readers;struct vfs *mi_vfsp;enum vtype mi_type;uint_t mi_flags;int mi_tsize;int mi_stsize;int mi_timeo;int mi_retrans;uint_t mi_acregmin;uint_t mi_acregmax;uint_t mi_acdirmin;uint_t mi_acdirmax;len_t mi_maxfilesize;struct rpc_timers mi_timers[4];int mi_curread;int mi_curwrite;struct nfs_async_reqs *mi_async_reqs[5];struct nfs_async_reqs *mi_async_tail[5];struct nfs_async_reqs **mi_async_curr;uint_t mi_async_clusters[5];uint_t mi_async_init_clusters;kcondvar_t mi_async_reqs_cv;ushort_t mi_threads;ushort_t mi_max_threads;kcondvar_t mi_async_cv;uint_t mi_async_count;kmutex_t mi_async_lock;struct pathcnf *mi_pathconf;rpcprog_t mi_prog;rpcvers_t mi_vers;char **mi_rfsnames;kstat_named_t *mi_reqs;char *mi_call_type;char *mi_ss_call_type;char *mi_timer_type;clock_t mi_printftime;char **mi_aclnames;kstat_named_t *mi_aclreqs;char *mi_acl_call_type;char *mi_acl_ss_call_type;char *mi_acl_timer_type;uint_t mi_noresponse;uint_t mi_failover;uint_t mi_remap;struct kstat *mi_io_kstats;struct kstat *mi_ro_kstats;struct knetconfig *mi_klmconfig;};
struct pstatus {int pr_flags;int pr_nlwp;pid_t pr_pid;pid_t pr_ppid;pid_t pr_pgid;pid_t pr_sid;id_t pr_aslwpid;id_t pr_agentid;sigset_t pr_sigpend;uintptr_t pr_brkbase;size_t pr_brksize;uintptr_t pr_stkbase;size_t pr_stksize;timestruc_t pr_utime;timestruc_t pr_stime;timestruc_t pr_cutime;timestruc_t pr_cstime;sigset_t pr_sigtrace;fltset_t pr_flttrace;sysset_t pr_sysentry;sysset_t pr_sysexit;char pr_dmodel;char pr_pad[3];taskid_t pr_taskid;projid_t pr_projid;int pr_filler[17];lwpstatus_t pr_lwp;};
struct seg_ops {int (*dup)(struct seg *, struct seg *);int (*unmap)(struct seg *, caddr_t, size_t);void (*free)(struct seg *);faultcode_t (*fault)(struct hat *, struct seg *, caddr_t, size_t, enum fault_type, enum seg_rw);faultcode_t (*faulta)(struct seg *, caddr_t);int (*setprot)(struct seg *, caddr_t, size_t, uint_t);int (*checkprot)(struct seg *, caddr_t, size_t, uint_t);int (*kluster)(struct seg *, caddr_t, ssize_t);size_t (*swapout)(struct seg *);int (*sync)(struct seg *, caddr_t, size_t, int, uint_t);size_t (*incore)(struct seg *, caddr_t, size_t, char *);int (*lockop)(struct seg *, caddr_t, size_t, int, int, ulong_t *, size_t);int (*getprot)(struct seg *, caddr_t, size_t, uint_t *);u_offset_t (*getoffset)(struct seg *, caddr_t);int (*gettype)(struct seg *, caddr_t);int (*getvp)(struct seg *, caddr_t, struct vnode **);int (*advise)(struct seg *, caddr_t, size_t, uint_t);void (*dump)(struct seg *);int (*pagelock)(struct seg *, caddr_t, size_t, struct page ***, enum lock_type, enum seg_rw);int (*getmemid)(struct seg *, caddr_t, memid_t *);};
struct mt_map {mapentry_t *mtm_next;mapentry_t *mtm_prev;enum maptypes mtm_type;int mtm_flags;int mtm_ref;ulong_t mtm_debug;ulong_t mtm_age;mapentry_t *mtm_cancel;ulong_t mtm_nhash;mapentry_t **mtm_hash;struct topstats *mtm_tops;int mtm_nme;int mtm_nmet;int mtm_nud;int mtm_nsud;off_t mtm_tail_lof;size_t mtm_tail_nb;off_t mtm_trimlof;off_t mtm_trimtail;off_t mtm_trimalof;off_t mtm_trimclof;off_t mtm_trimrlof;ml_unit_t *mtm_ul;uint32_t mtm_tid;uint32_t mtm_committid;ushort_t mtm_closed;ushort_t mtm_seq;int mtm_wantin;int mtm_active;int mtm_activesync;ulong_t mtm_dirty;kmutex_t mtm_lock;kcondvar_t mtm_cv_commit;kcondvar_t mtm_cv_next;kcondvar_t mtm_cv_eot;kmutex_t mtm_mutex;kcondvar_t mtm_cv;krwlock_t mtm_rwlock;kmutex_t mtm_scan_mutex;};
struct psinfo {int pr_flag;int pr_nlwp;pid_t pr_pid;pid_t pr_ppid;pid_t pr_pgid;pid_t pr_sid;uid_t pr_uid;uid_t pr_euid;gid_t pr_gid;gid_t pr_egid;uintptr_t pr_addr;size_t pr_size;size_t pr_rssize;size_t pr_pad1;dev_t pr_ttydev;ushort_t pr_pctcpu;ushort_t pr_pctmem;timestruc_t pr_start;timestruc_t pr_time;timestruc_t pr_ctime;char pr_fname[16];char pr_psargs[80];int pr_wstat;int pr_argc;uintptr_t pr_argv;uintptr_t pr_envp;char pr_dmodel;char pr_pad2[3];taskid_t pr_taskid;projid_t pr_projid;int pr_filler[5];lwpsinfo_t pr_lwp;};
struct bpp_unit {kmutex_t bpp_mutex;kcondvar_t wr_cv;int flags;int openflags;timeout_id_t bpp_transfer_timeout_ident;timeout_id_t bpp_fakeout_timeout_ident;uchar_t timeouts;int sbus_clock_cycle;enum bpp_unit__trans_type last_trans;ddi_iblock_cookie_t bpp_block_cookie;ddi_dma_handle_t bpp_dma_handle;int transfer_remainder;dev_info_t *dip;struct buf *bpp_buffer;struct bpp_regs *bpp_regs_p;struct bpp_transfer_parms transfer_parms;struct bpp_pins pins;struct bpp_error_status error_stat;kstat_t *intrstats;};
struct dev_info {struct dev_info *devi_parent;struct dev_info *devi_child;struct dev_info *devi_sibling;char *devi_binding_name;char *devi_addr;int devi_nodeid;int devi_instance;struct dev_ops *devi_ops;caddr_t devi_parent_data;caddr_t devi_driver_data;ddi_prop_t *devi_drv_prop_ptr;ddi_prop_t *devi_sys_prop_ptr;struct ddi_minor_data *devi_minor;struct dev_info *devi_next;kmutex_t devi_lock;struct dev_info *devi_bus_map_fault;struct dev_info *devi_bus_dma_map;struct dev_info *devi_bus_dma_allochdl;struct dev_info *devi_bus_dma_freehdl;struct dev_info *devi_bus_dma_bindhdl;struct dev_info *devi_bus_dma_unbindhdl;struct dev_info *devi_bus_dma_flush;struct dev_info *devi_bus_dma_win;struct dev_info *devi_bus_dma_ctl;struct dev_info *devi_bus_ctl;void *devi_pm_info;char *devi_node_name;char *devi_compat_names;size_t devi_compat_length;int (*devi_bus_dma_bindfunc)(dev_info_t *, dev_info_t *, ddi_dma_handle_t, struct ddi_dma_req *, ddi_dma_cookie_t *, uint_t *);int (*devi_bus_dma_unbindfunc)(dev_info_t *, dev_info_t *, ddi_dma_handle_t);ddi_prop_t *devi_hw_prop_ptr;ddi_devid_t devi_devid;uint_t devi_pm_flags;int devi_pm_num_components;size_t devi_pm_comp_size;struct pm_component *devi_pm_components;uint_t devi_state;kcondvar_t devi_cv;int devi_ref;dacf_rsrvlist_t *devi_dacf_tasks;char *devi_last_addr;ddi_node_class_t devi_node_class;int devi_node_attributes;struct dev_info *devi_pm_ppm;void *devi_pm_ppm_private;int devi_pm_dev_thresh;kmutex_t devi_pm_lock;kmutex_t devi_pm_busy_lock;kmutex_t devi_pm_power_lock;int devi_pm_power_lock_ref;char *devi_pm_plockmask;int devi_pm_allcompcount;};
struct vnodeops {int (*vop_open)(struct vnode **vpp, int flag, struct cred *cr);int (*vop_close)(struct vnode *vp, int flag, int count, offset_t offset, struct cred *cr);int (*vop_read)(struct vnode *vp, struct uio *uiop, int ioflag, struct cred *cr);int (*vop_write)(struct vnode *vp, struct uio *uiop, int ioflag, struct cred *cr);int (*vop_ioctl)(struct vnode *vp, int cmd, intptr_t arg, int flag, struct cred *cr, int *rvalp);int (*vop_setfl)(struct vnode *vp, int oflags, int nflags, struct cred *cr);int (*vop_getattr)(struct vnode *vp, struct vattr *vap, int flags, struct cred *cr);int (*vop_setattr)(struct vnode *vp, struct vattr *vap, int flags, struct cred *cr);int (*vop_access)(struct vnode *vp, int mode, int flags, struct cred *cr);int (*vop_lookup)(struct vnode *dvp, char *nm, struct vnode **vpp, struct pathname *pnp, int flags, struct vnode *rdir, struct cred *);int (*vop_create)(struct vnode *dvp, char *name, struct vattr *vap, vcexcl_t excl, int mode, struct vnode **vpp, struct cred *cr, int flag);int (*vop_remove)(struct vnode *vp, char *nm, struct cred *cr);int (*vop_link)(struct vnode *tdvp, struct vnode *svp, char *tnm, struct cred *cr);int (*vop_rename)(struct vnode *sdvp, char *snm, struct vnode *tdvp, char *tnm, struct cred *cr);int (*vop_mkdir)(struct vnode *dvp, char *dirname, struct vattr *vap, struct vnode **vpp, struct cred *cr);int (*vop_rmdir)(struct vnode *vp, char *nm, struct vnode *cdir, struct cred *cr);int (*vop_readdir)(struct vnode *vp, struct uio *uiop, struct cred *cr, int *eofp);int (*vop_symlink)(struct vnode *dvp, char *linkname, struct vattr *vap, char *target, struct cred *cr);int (*vop_readlink)(struct vnode *vp, struct uio *uiop, struct cred *cr);int (*vop_fsync)(struct vnode *vp, int syncflag, struct cred *cr);void (*vop_inactive)(struct vnode *vp, struct cred *cr);int (*vop_fid)(struct vnode *vp, struct fid *fidp);void (*vop_rwlock)(struct vnode *vp, int write_lock);void (*vop_rwunlock)(struct vnode *vp, int write_lock);int (*vop_seek)(struct vnode *vp, offset_t ooff, offset_t *noffp);int (*vop_cmp)(struct vnode *vp1, struct vnode *vp2);int (*vop_frlock)(struct vnode *vp, int cmd, struct flock64 *bfp, int flag, offset_t offset, struct cred *cr);int (*vop_space)(struct vnode *vp, int cmd, struct flock64 *bfp, int flag, offset_t offset, struct cred *cr);int (*vop_realvp)(struct vnode *vp, struct vnode **vpp);int (*vop_getpage)(struct vnode *vp, offset_t off, size_t len, uint_t *protp, struct page **plarr, size_t plsz, struct seg *seg, caddr_t addr, enum seg_rw rw, struct cred *cr);int (*vop_putpage)(struct vnode *vp, offset_t off, size_t len, int flags, struct cred *cr);int (*vop_map)(struct vnode *vp, offset_t off, struct as *as, caddr_t *addrp, size_t len, uchar_t prot, uchar_t maxprot, uint_t flags, struct cred *cr);int (*vop_addmap)(struct vnode *vp, offset_t off, struct as *as, caddr_t addr, size_t len, uchar_t prot, uchar_t maxprot, uint_t flags, struct cred *cr);int (*vop_delmap)(struct vnode *vp, offset_t off, struct as *as, caddr_t addr, size_t len, uint_t prot, uint_t maxprot, uint_t flags, struct cred *cr);int (*vop_poll)(struct vnode *vp, short ev, int any, short *revp, struct pollhead **phpp);int (*vop_dump)(struct vnode *vp, caddr_t addr, int lbdn, int dblks);int (*vop_pathconf)(struct vnode *vp, int cmd, ulong_t *valp, struct cred *cr);int (*vop_pageio)(struct vnode *vp, struct page *pp, u_offset_t io_off, size_t io_len, int flags, struct cred *cr);int (*vop_dumpctl)(struct vnode *vp, int action, int *blkp);void (*vop_dispose)(struct vnode *vp, struct page *pp, int flag, int dn, struct cred *cr);int (*vop_setsecattr)(struct vnode *vp, vsecattr_t *vsap, int flag, struct cred *cr);int (*vop_getsecattr)(struct vnode *vp, vsecattr_t *vsap, int flag, struct cred *cr);int (*vop_shrlock)(struct vnode *vp, int cmd, struct shrlock *shr, int flag);};
struct fscache {ino64_t fs_cfsid;int fs_flags;struct vnode *fs_fscdirvp;struct vnode *fs_fsattrdir;struct vnode *fs_infovp;struct cachefscache *fs_cache;cachefs_fsinfo_t fs_info;struct vfs *fs_cfsvfsp;struct vfs *fs_backvfsp;struct vnode *fs_rootvp;offset_t fs_offmax;int fs_ref;int fs_cnodecnt;int fs_consttype;struct cachefsops *fs_cfsops;uint_t fs_acregmin;uint_t fs_acregmax;uint_t fs_acdirmin;uint_t fs_acdirmax;struct fscache *fs_next;struct cachefs_workq fs_workq;kmutex_t fs_fslock;struct vnode *fs_dlogfile;off_t fs_dlogoff;uint_t fs_dlogseq;struct vnode *fs_dmapfile;off_t fs_dmapoff;off_t fs_dmapsize;kmutex_t fs_dlock;kmutex_t fs_idlelock;int fs_idlecnt;int fs_idleclean;struct cnode *fs_idlefront;kmutex_t fs_cdlock;kcondvar_t fs_cdwaitcv;enum cachefs_connected fs_cdconnected;int fs_cdtransition;pid_t fs_cddaemonid;int fs_cdrefcnt;struct cnode *fs_idleback;cachefs_inum_trans_t *fs_inum_trans;int fs_inum_size;struct filegrp *fs_filegrp[64];timestruc_t fs_cod_time;int fs_kstat_id;cachefs_stats_t fs_stats;char *fs_mntpt;char *fs_hostname;char *fs_backfsname;};
struct sonode {struct vnode so_vnode;dev_t so_dev;struct vnode *so_accessvp;kmutex_t so_lock;kcondvar_t so_state_cv;kcondvar_t so_ack_cv;kcondvar_t so_connind_cv;kcondvar_t so_want_cv;uint_t so_state;uint_t so_mode;mblk_t *so_ack_mp;mblk_t *so_conn_ind_head;mblk_t *so_conn_ind_tail;mblk_t *so_unbind_mp;ushort_t so_flag;dev_t so_fsid;time_t so_atime;time_t so_mtime;time_t so_ctime;int so_count;short so_family;short so_type;short so_protocol;short so_version;short so_pushcnt;short so_options;struct linger so_linger;int so_sndbuf;int so_rcvbuf;ushort_t so_error;ushort_t so_delayed_error;int so_backlog;mblk_t *so_oobmsg;uint_t so_oobsigcnt;uint_t so_oobcnt;pid_t so_pgrp;t_uscalar_t so_tsdu_size;t_uscalar_t so_etsdu_size;t_scalar_t so_addr_size;t_uscalar_t so_opt_size;t_uscalar_t so_tidu_size;t_scalar_t so_serv_type;t_uscalar_t so_acceptor_id;struct tpi_provinfo *so_provinfo;struct soaddr so_laddr;struct soaddr so_faddr;mblk_t *so_eaddr_mp;struct soaddr_ux so_ux_laddr;struct soaddr_ux so_ux_faddr;struct vnode *so_ux_bound_vp;struct sonode *so_next;struct sonode *so_prev;};
struct cpu {processorid_t cpu_id;processorid_t cpu_seqid;ushort_t cpu_flags;kthread_id_t cpu_thread;kthread_id_t cpu_idle_thread;kthread_id_t cpu_pause_thread;klwp_id_t cpu_lwp;klwp_id_t cpu_fpowner;struct cpupart *cpu_part;int cpu_cache_offset;struct cpu *cpu_next;struct cpu *cpu_prev;struct cpu *cpu_next_onln;struct cpu *cpu_prev_onln;struct cpu *cpu_next_part;struct cpu *cpu_prev_part;disp_t cpu_disp;char cpu_runrun;char cpu_kprunrun;pri_t cpu_chosen_level;kthread_id_t cpu_dispthread;disp_lock_t cpu_thread_lock;pri_t cpu_dispatch_pri;clock_t cpu_last_swtch;caddr_t cpu_intr_stack;int cpu_on_intr;kthread_id_t cpu_intr_thread;uint_t cpu_intr_actv;int cpu_base_spl;cpu_stat_t cpu_stat;struct kstat *cpu_kstat;uintptr_t cpu_profile_cyclic_id;uintptr_t cpu_profile_pc;uintptr_t cpu_profile_pil;hrtime_t cpu_profile_when;hrtime_t cpu_profile_ilate;tracedata_t cpu_trace;ftrace_data_t cpu_ftrace;processor_info_t cpu_type_info;time_t cpu_state_begin;char cpu_cpr_flags;struct cyc_cpu *cpu_cyclic;};
struct rnode {struct rnode *r_freef;struct rnode *r_freeb;struct rnode *r_hash;vnode_t r_vnode;nfs_rwlock_t r_rwlock;nfs_rwlock_t r_lkserlock;kmutex_t r_statelock;nfs_fhandle r_fh;struct servinfo *r_server;char *r_path;u_offset_t r_nextr;ushort_t r_flags;short r_error;cred_t *r_cred;cred_t *r_unlcred;char *r_unlname;vnode_t *r_unldvp;len_t r_size;struct vattr r_attr;time_t r_attrtime;time_t r_mtime;int r_mapcnt;uint_t r_count;uint_t r_awcount;kcondvar_t r_cv;int r_seq;int (*r_putapage)(vnode_t *, page_t *, u_offset_t *, size_t *, int, cred_t *);rddir_cache *r_dir;rddir_cache *r_direof;symlink_cache r_symlink;writeverf3 r_verf;u_offset_t r_modaddr;commit_t r_commit;u_offset_t r_truncaddr;vsecattr_t *r_secattr;cookieverf3 r_cookieverf;lmpl_t *r_lmpl;nfs3_pathconf_info *r_pathconf;acache_t *r_acache;};
union T_primitives {t_scalar_t type;struct T_conn_req conn_req;struct T_conn_res conn_res;struct T_discon_req discon_req;struct T_data_req data_req;struct T_exdata_req exdata_req;struct T_info_req info_req;struct T_bind_req bind_req;struct T_unbind_req unbind_req;struct T_unitdata_req unitdata_req;struct T_optmgmt_req optmgmt_req;struct T_ordrel_req ordrel_req;struct T_addr_req addr_req;struct T_conn_ind conn_ind;struct T_conn_con conn_con;struct T_discon_ind discon_ind;struct T_data_ind data_ind;struct T_exdata_ind exdata_ind;struct T_info_ack info_ack;struct T_bind_ack bind_ack;struct T_error_ack error_ack;struct T_ok_ack ok_ack;struct T_unitdata_ind unitdata_ind;struct T_uderror_ind uderror_ind;struct T_optmgmt_ack optmgmt_ack;struct T_ordrel_ind ordrel_ind;struct T_addr_ack addr_ack;};
union vt_pointer {ulong_t *u_long_p;uchar_t *u_char_p;char *char_p;vt_trace_t *trace_p;vt_generic_t *generic_p;vt_version_t *version_p;vt_title_t *title_p;vt_label_t *label_p;vt_pagesize_t *pagesize_p;vt_num_cpus_t *num_cpus_p;vt_cpu_t *cpu_p;vt_data_4_t *data_4_p;vt_data_8_t *data_8_p;vt_data_16_t *data_16_p;vt_data_32_t *data_32_p;vt_data_64_t *data_64_p;vt_abs_time_t *abs_time_p;vt_start_time_t *start_time_p;vt_elapsed_time_t *elapsed_time_p;vt_total_time_t *total_time_p;vt_kthread_id_t *kthread_id_p;vt_uthread_id_t *uthread_id_p;vt_clock_frequency_t *clock_frequency_p;vt_raw_kthread_id_t *raw_kthread_id_p;vt_raw_uthread_id_t *raw_uthread_id_p;vt_kthread_label_t *kthread_label_p;vt_uthread_label_t *uthread_label_p;vt_process_name_t *process_name_p;vt_process_fork_t *process_fork_p;};
union au_token___48B8A567D7721A2375B9B4755C07ABC8 {au_arg32_tok_t arg32;au_arg64_tok_t arg64;au_acl_tok_t acl;au_attr32_tok_t attr32;au_attr64_tok_t attr64;au_data_tok_t data;au_exit_tok_t exit;au_file32_tok_t file32;au_file64_tok_t file64;au_groups_tok_t groups;au_header32_tok_t header32;au_header64_tok_t header64;au_inaddr_tok_t inaddr;au_ip_tok_t ip;au_ipc_perm_tok_t ipc_perm;au_ipc_tok_t ipc;au_iport_tok_t iport;au_invalid_tok_t invalid;au_opaque_tok_t opaque;au_path_tok_t path;au_proc32_tok_t proc32;au_proc64_tok_t proc64;au_ret32_tok_t ret32;au_ret64_tok_t ret64;au_server_tok_t server;au_seq_tok_t seq;au_socket_tok_t socket;au_subj32_tok_t subj32;au_subj64_tok_t subj64;au_text_tok_t text;au_trailer_tok_t trailer;};
union DL_primitives {t_uscalar_t dl_primitive;dl_info_req_t info_req;dl_info_ack_t info_ack;dl_attach_req_t attach_req;dl_detach_req_t detach_req;dl_bind_req_t bind_req;dl_bind_ack_t bind_ack;dl_unbind_req_t unbind_req;dl_subs_bind_req_t subs_bind_req;dl_subs_bind_ack_t subs_bind_ack;dl_subs_unbind_req_t subs_unbind_req;dl_ok_ack_t ok_ack;dl_error_ack_t error_ack;dl_connect_req_t connect_req;dl_connect_ind_t connect_ind;dl_connect_res_t connect_res;dl_connect_con_t connect_con;dl_token_req_t token_req;dl_token_ack_t token_ack;dl_disconnect_req_t disconnect_req;dl_disconnect_ind_t disconnect_ind;dl_reset_req_t reset_req;dl_reset_ind_t reset_ind;dl_reset_res_t reset_res;dl_reset_con_t reset_con;dl_unitdata_req_t unitdata_req;dl_unitdata_ind_t unitdata_ind;dl_uderror_ind_t uderror_ind;dl_udqos_req_t udqos_req;dl_enabmulti_req_t enabmulti_req;dl_disabmulti_req_t disabmulti_req;dl_promiscon_req_t promiscon_req;dl_promiscoff_req_t promiscoff_req;dl_phys_addr_req_t physaddr_req;dl_phys_addr_ack_t physaddr_ack;dl_set_phys_addr_req_t set_physaddr_req;dl_get_statistics_req_t get_statistics_req;dl_get_statistics_ack_t get_statistics_ack;dl_test_req_t test_req;dl_test_ind_t test_ind;dl_test_res_t test_res;dl_test_con_t test_con;dl_xid_req_t xid_req;dl_xid_ind_t xid_ind;dl_xid_res_t xid_res;dl_xid_con_t xid_con;dl_data_ack_req_t data_ack_req;dl_data_ack_ind_t data_ack_ind;dl_data_ack_status_ind_t data_ack_status_ind;dl_reply_req_t reply_req;dl_reply_ind_t reply_ind;dl_reply_status_ind_t reply_status_ind;dl_reply_update_req_t reply_update_req;dl_reply_update_status_ind_t reply_update_status_ind;};
struct isdn_param___CC0818EEDB9939D07B3B37CF76D5BC51___E3C3E6EDB4E40BC00986BE35B850D35D {isdn_chan_t channel;int paused;};
struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___0A785BFE2C1FC8F220D4B5E421FF4D4B {ipaddr_t u_rd_gateway;};
struct tmpnode___8A064BB42F06F947A31D89B2B058AC9B___9DB28C43D4E3267093DD49E88C2EC05A {struct anon_hdr *un_anon;size_t un_size;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_newlabel {minor_t vien_unit;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_remount {minor_t vier_unit;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_symname {dev_t vies_dev;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_cancel {minor_t viec_unit;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_insert {dev_t viei_dev;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_check {dev_t viec_dev;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_close {minor_t viecl_unit;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_inuse {dev_t vieu_dev;};
union nss_netdirbyaddr_in___52654151BE2F33B35A12C07C8189686F {struct netbuf *nd_nbuf;union nss_netdirbyaddr_in___52654151BE2F33B35A12C07C8189686F___50C6C771A4EDD455CAD0D8DFE1969C14 nss;};
union nss_netdirbyname_in___A81B8F3144EDB2CCC4B96A77B00E3123 {struct nd_hostserv *nd_hs;union nss_netdirbyname_in___A81B8F3144EDB2CCC4B96A77B00E3123___199656A6E013B40F3B25B2A0A5E1878D nss;};
union nfslog_LOOKUP3res___8A12F739DA201A0F01CC54A2347608A8 {nfs_fh3 object;};
union nfslog_createhow3___7B9F70D06961F114B24C4AB5E87688DF {set_size3 size;};
struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_rm {minor_t virm_unit;};
struct dbri_rex_opcode___213D8288DE2BBC7A9C1DC9B852CEBCC7 {unsigned int cmd : 4;unsigned int cmdi : 1;unsigned int pipe : 6;unsigned int tag : 21;};
union nfslog_rddirres___6F57ED1BD35F31BB173B09F6B543717D {nfslog_rdok rd_ok;};
union nfslog_rdresult___2EF0204D03A830622AF225C6F00B5166 {nfslog_rrok r_ok;};
struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_idseq {n_short icd_id;n_short icd_seq;};
union ufsd_log_msg_t___960FAB35EDE40EACAA5C69F67904DD69 {ufsd_log_data_t um_logdata;};
union getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B {rquota gqr_rquota;};
struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_pmtu {n_short ipm_void;n_short ipm_nextmtu;};
union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65 {struct nlm4_holder holder;};
struct dbri_dts_tsd___81D97CDFDE4B25C2022176D9D2324F3D {unsigned int len : 8;unsigned int cycle : 10;unsigned int di : 1;unsigned int mode : 3;unsigned int mon : 5;unsigned int next : 5;};
union krpc_revauth___777FC73716B11D775C37F1C4B1355BA9 {struct krpc_revauth_1 r;};
union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE {struct nlm_holder holder;};
union rd_event_msg___9ECDAEB3AD741762C56870A1C94CE353 {rd_state_e state;};
struct icmp___91F6810D45DA7C23E53CAA18FF826292__id_ts {n_time its_otime;n_time its_rtime;n_time its_ttime;};
union nfsattrstat___B6E4C4804F8B4E61D83A908BE84CFFC2 {struct nfsfattr ns_attr_u;};
union nfsrddirres___58E4E4C17AE20109EAEABA6611F00FE4 {struct nfsrdok rd_rdok_u;};
union nfsrdresult___6A35507E6474F6D0336B5312E06C8FBF {struct nfsrrok rr_ok_u;};
union nfsrdlnres___659D09B361D701D0D66EB16B547B6A97 {struct nfssrok rl_srok_u;};
union ux_extaddr___6B9E6D36BA9C529C32E2823564C5CFF8 {struct ux_dev tu_addr;int tp_addr;};
union nfsstatfs___08C78D7C851FA76173109663D8432C36 {struct nfsstatfsok fs_fsok_u;};
union prxregset___13E89D14F043A1ECCED4B43807F5FAAC {struct prxregset___13E89D14F043A1ECCED4B43807F5FAAC__pr_v8p pr_v8p;};
union mdb_arg___23C4DC01D1EF29DAF9BB24B228A431B7 { char *a_str;uintmax_t a_val;char a_char;};
struct mib2_ipNetToMediaEntry__ipNetToMediaInfo_s {PhysAddress ntm_mask;int ntm_flags;};
struct OCF_Event_CardInserted_RegistrationData_t {OCF_CardSpec_t cardspec;};
union ifaddr___0DF00F875CAF96EB397809642F17405E {struct sockaddr ifu_broadaddr;struct sockaddr ifu_dstaddr;};
struct OCF_Event_CardRemoved_RegistrationData_t {OCF_CardSpec_t cardspec;};
struct mib2_tcp6ConnEntry__tcp6ConnEntryInfo_s {Gauge ce_snxt;Gauge ce_suna;Gauge ce_swnd;Gauge ce_rnxt;Gauge ce_rack;Gauge ce_rwnd;Gauge ce_rto;Gauge ce_mss;int ce_state;};
struct OCF_Event_CardError_RegistrationData_t {OCF_CardHandle_t cardhandle;};
struct OCF_Event_CardReset_RegistrationData_t {OCF_CardHandle_t cardhandle;};
union rip___AFFF135AAACB9FA320A59FAF8451ECA8 {struct netinfo ru_nets[1];char ru_tracefile[1];};
struct mib2_tcpConnEntry__tcpConnEntryInfo_s {Gauge ce_snxt;Gauge ce_suna;Gauge ce_swnd;Gauge ce_rnxt;Gauge ce_rack;Gauge ce_rwnd;Gauge ce_rto;Gauge ce_mss;int ce_state;};
struct _01BD53472F26B36476AF1B984D5B2841 {pppProtocol_t protocol;};
struct _0A17130E4CE82B668D029EC1E9F64ADD {unsigned int format;size_t length;void *contents;};
struct _0F6DEF3B8E99612FFBC8A726FE9B31C3 {size_t length;void *contents;};
struct _50A8F2CBF9209E81C59E0189B8E8717A { char *ce_sym;_LC_weight_t ce_wgt;};
struct _601AB9009B78F952A53B6D0C69238ED9 {LctNEAttribute attribute;unsigned int error_code;void *detail;};
struct _647FE789D073DDA1115A25D9160A600C {_LC_weight_t ss_act; char *ss_src; char *ss_tgt;};
struct _7B7425BDB71A818A922A1DDC8B4A1BCA { char *rm_sp; char *rm_ep;regoff_t rm_so;regoff_t rm_eo;int rm_ss;int rm_es;};
struct _92C2B677F4D6F16C081E111A1354037E {char *as_name;size_t as_off;unsigned int as_hash;};
struct _B089456DFBB446A2250D7264A8E39902 {char *segment;char *charset;size_t size;};
struct _BD5CA20501DDBF4BA8A0F05A067801C0 {struct nss_getent_context *ctx;mutex_t lock;};
struct _E3ED4D72C7814978A91B05B99D56A6A2 {size_t re_nsub;void *re_comp;int re_cflags;size_t re_erroff;size_t re_len;struct _regex_ext_t *re_sc;};
struct mib2_udpEntry__udpEntryInfo_s {int ue_state;IpAddress ue_RemoteAddress;int ue_RemotePort;};
struct cachefsio_setsecattr_return {cfs_timestruc_t sc_ctime;cfs_timestruc_t sc_mtime;};
struct cachefsio_pushback_return {cfs_timestruc_t pb_ctime;cfs_timestruc_t pb_mtime;};
struct cachefsio_setattr_return {cfs_timestruc_t sa_ctime;cfs_timestruc_t sa_mtime;};
struct nfslog_READDIRPLUS3resok {nfslog_dirlistplus3 reply;};
struct cachefsio_rename_return {cfs_timestruc_t rn_ctime;cfs_timestruc_t rn_del_ctime;};
struct gss_buffer_desc_struct {size_t length;void *value;};
struct isdn_loopback_request {isdn_loopback_type_t type;int channels;};
struct cistpl_ignore_list_t {cisdata_t type;};
typedef la_els_logi_reply_t la_els_pdisc_reply_t;
struct tnf_derived_type_hdr {tnf_ref32_t tag;tnf_ref32_t name;tnf_ref32_t properties;tnf_ref32_t derived_base;};
struct gss_OID_desc_struct {OM_uint32 length;void *elements;};
typedef void tnf_error_handler_t(void *, TNF *, tnf_errcode_t);
struct cachefs_inum_trans {ino64_t cit_real;ino64_t cit_fake;};
struct cachefsio_getstats {int gs_total;int gs_gc;int gs_active;int gs_packed;int gs_free;cfs_time_t gs_gctime;};
struct nfslog_diropargs3 {nfs_fh3 dir;char *name;};
typedef tnf_ref32_t tnf_probe_event_t;
struct tnf_probe_version {size_t version_size;size_t probe_control_size;};
struct _tnf_ref32_align {char c;tnf_ref32_t t;};
struct _tnf_tag_version {size_t version_size;size_t tag_data_size;};
struct cachefs_allocmap {u_offset_t am_start_off;u_offset_t am_size;};
struct nfslog_diropargs {fhandle da_fhandle;char *da_name;};
struct nfslog_getfhargs {fhandle gfh_fh_buf;char *gfh_path;};
typedef nss_status_t (*nss_backend_op_t)(struct nss_backend *, void *args);
struct prop_driver_data {size_t pdd_size;void (*pdd_prop_free)(struct prop_driver_data *);};
struct au_ipc_perm_tok {struct ipc_perm ipc_perm;};
struct autofs_mountres {mount_result_type mr_type;int mr_verbose;};
struct rpcb_entry_list {rpcb_entry rpcb_entry_map;struct rpcb_entry_list *rpcb_entry_next;};
struct short_hand_verf {struct opaque_auth new_cred;};
typedef tnf_ref32_t tnf_reference_t;
typedef tnf_int64_t tnf_time_base_t;
typedef tnf_uint64_t tnf_ulonglong_t;
struct cachefsio_dcmd {cfsdcmd_cmds_t d_cmd;void *d_sdata;int d_slen;void *d_rdata;int d_rlen;};
struct nfslog_rnmargs {nfslog_diropargs rna_from;nfslog_diropargs rna_to;};
struct stp4020_regs_t {struct stp4020_socket_csr_t socket[2];};
typedef tnf_int64_t tnf_longlong_t;
struct tnf_tagged_hdr {tnf_ref32_t tag;};
struct vt_global_info {hrtime_t elapsed_time;int v_major;int v_minor;int v_micro;int tracing_state;int tracing_pid;int ncpus;void *tracedata_ptrs;};
struct GETATTR2resok {struct nfsfattr attr;};
struct PATHCONF3args {nfs_fh3 object;};
struct READLINK3args {nfs_fh3 symlink;};
struct _klwp__mstate {int ms_prev;hrtime_t ms_start;hrtime_t ms_term;hrtime_t ms_state_start;hrtime_t ms_acct[10];};
struct au_groups_tok {gid_t groups[16];};
struct bp_whoami_arg {bp_address client_address;};
struct fs_identity_t {dev_t fs_dev;char *fs_name;};
struct rsm_es_d_stat {unsigned char dp : 1;unsigned char dl : 1;unsigned char rsvd : 6;};
struct GETATTR3args {nfs_fh3 object;};
struct SETACL2resok {struct nfsfattr attr;};
struct au_class_ent {char *ac_name;au_class_t ac_class;char *ac_desc;};
struct devid_nmlist {char *devname;dev_t dev;};
struct isp_regs_off {offset_t isp_biu_regs_off;offset_t isp_mbox_regs_off;offset_t isp_sxp_regs_off;offset_t isp_risc_regs_off;};
struct itimerspec32 {struct timespec32 it_interval;struct timespec32 it_value;};
struct krpc_revauth {int version;union krpc_revauth___777FC73716B11D775C37F1C4B1355BA9 krpc_revauth_u;};
struct protocol_arg {dev_t dev;int flag;};
struct sioc_addrreq {struct sockaddr_storage sa_addr;int sa_res;int sa_pad;};
typedef tnf_reference_t tnf_string_t;
struct tnf_type_hdr {tnf_ref32_t tag;tnf_ref32_t name;tnf_ref32_t properties;};
struct FSINFO3args {nfs_fh3 fsroot;};
struct FSSTAT3args {nfs_fh3 fsroot;};
struct action_list {action_list_entry action;struct action_list *next;};
struct changePIN_t {OCF_PIN_t oldPIN;OCF_PIN_t newPIN;};
struct isdn_format {isdn_mode_t mode;unsigned int sample_rate;unsigned int channels;unsigned int precision;unsigned int encoding;unsigned int reserved[3];};
struct nfslog_drok {fhandle drok_fhandle;};
struct nss_backend {nss_backend_op_t *ops;int n_ops;};
struct nss_db_root {struct nss_db_state *s;mutex_t lock;};
struct pln_address {union pln_address___5B09262AB1EEEA85D62AFB703E1F9FE4 un;};
struct sigaltstack {void *ss_sp;size_t ss_size;int ss_flags;};
struct sptshm_data {struct as *sptas;struct anon_map *amp;size_t softlockcnt;struct seg *sptseg;};
struct ufs_aclmask {short acl_ismask;o_mode_t acl_maskbits;};
struct xdr_discrim {int value;xdrproc_t proc;};
struct cback_data {struct cback_data___8577E6F7A3DA394015609B473F63AD7B entries;};
struct exportdata {int ex_version;char *ex_path;size_t ex_pathlen;int ex_flags;unsigned int ex_anon;int ex_seccnt;struct secinfo *ex_secinfo;char *ex_index;char *ex_log_buffer;size_t ex_log_bufferlen;char *ex_tag;size_t ex_taglen;};
struct itimerspec {struct timespec it_interval;struct timespec it_value;};
struct mib2_rawip {Counter rawipInDatagrams;Counter rawipInCksumErrs;Counter rawipInErrors;Counter rawipOutDatagrams;Counter rawipOutErrors;};
struct proxy_addr {ipaddr_t pa_addr;ipaddr_t pa_mask;struct proxy_addr *pa_next;};
typedef tnf_string_t tnf_name_t;
struct vioc_dattr {minor_t vda_unit;char vda_value[128];int vda_errno;};
struct dk_allmap {struct dk_map dka_map[8];};
struct entryinfo {struct sockaddr rtu_dst;struct sockaddr rtu_router;short rtu_flags;short rtu_state;int rtu_timer;int rtu_metric;int int_flags;char int_name[16];};
struct itimerval {struct timeval it_interval;struct timeval it_value;};
struct k_siginfo {int si_signo;int si_code;int si_errno;union k_siginfo___804257DC7E857FCD4172ACB0D5A910E9 __data;};
struct lm_config {struct lm_config *next;struct file *fp;struct knetconfig config;};
struct mib2_icmp {Counter icmpInMsgs;Counter icmpInErrors;Counter icmpInDestUnreachs;Counter icmpInTimeExcds;Counter icmpInParmProbs;Counter icmpInSrcQuenchs;Counter icmpInRedirects;Counter icmpInEchos;Counter icmpInEchoReps;Counter icmpInTimestamps;Counter icmpInTimestampReps;Counter icmpInAddrMasks;Counter icmpInAddrMaskReps;Counter icmpOutMsgs;Counter icmpOutErrors;Counter icmpOutDestUnreachs;Counter icmpOutTimeExcds;Counter icmpOutParmProbs;Counter icmpOutSrcQuenchs;Counter icmpOutRedirects;Counter icmpOutEchos;Counter icmpOutEchoReps;Counter icmpOutTimestamps;Counter icmpOutTimestampReps;Counter icmpOutAddrMasks;Counter icmpOutAddrMaskReps;Counter icmpInCksumErrs;Counter icmpInUnknowns;Counter icmpInFragNeeded;Counter icmpOutFragNeeded;Counter icmpOutDrops;Counter icmpInOverflows;Counter icmpInBadRedirects;};
struct mouseinfo {char mi_x;char mi_y;char mi_buttons;struct timeval32 mi_time;};
struct phdr_desc {struct short_ad phdr_ust;struct short_ad phdr_usb;struct short_ad phdr_it;struct short_ad phdr_fst;struct short_ad phdr_fsb;};
struct specdata3 {uint32 specdata1;uint32 specdata2;};
struct swaptable {int swt_n;struct swapent swt_ent[1];};
struct wordexp_t {size_t we_wordc;char **we_wordv;size_t we_offs;char **we_wordp;int we_wordn;};
struct _si_user {struct _si_user *next;struct _si_user *prev;int fd;int ctlsize;char *ctlbuf;struct si_udata udata;int flags;int fflags;};
struct addrinfo {int ai_flags;int ai_family;int ai_socktype;int ai_protocol;size_t ai_addrlen;char *ai_canonname;struct sockaddr *ai_addr;struct addrinfo *ai_next;};
struct anon_hdr {pgcnt_t size;void **array_chunk;int flags;};
struct anoninfo {pgcnt_t ani_max;pgcnt_t ani_free;pgcnt_t ani_resv;};
struct auth_req {netobj req_client;char *req_netid;char *req_path;int req_flavor;};
struct cyc_time {hrtime_t cyt_when;hrtime_t cyt_interval;};
struct in6_addr {union in6_addr___0B96DB6FF0520CC7F6D64D2FDA9E8D55 _S6_un;};
struct mdb_dcmd { char *dc_name; char *dc_usage; char *dc_descr;mdb_dcmd_f *dc_funcp;void (*dc_help)(void);};
struct mem_vtop {struct as *m_as;void *m_va;pfn_t m_pfn;};
struct mib2_udp {Counter udpInDatagrams;Counter udpInErrors;Counter udpOutDatagrams;int udpEntrySize;int udp6EntrySize;Counter udpOutErrors;};
struct mousebuf {short mb_size;short mb_off;struct mouseinfo mb_info[1];};
struct nfstime3 {uint32 seconds;uint32 nseconds;};
struct par_list {struct par_list *par_next;struct hwc_spec *par_specs;major_t par_major;};
struct pathname {char *pn_buf;char *pn_path;size_t pn_pathlen;size_t pn_bufsize;};
struct pm__list {pmap pml_map;struct pm__list *pml_next;};
struct reqvalue {struct rate called;struct rate calling;};
struct rp__list {rpcb rpcb_map;struct rp__list *rpcb_next;};
struct sack_blk {tcp_seq begin;tcp_seq end;};
struct strapush {struct apcommon sap_common;char sap_list[8][9];};
struct transdel {struct reqvalue maxdel;struct reqvalue avgdel;};
struct ufstrans {struct ufstrans *ut_next;dev_t ut_dev;struct ufstransops *ut_ops;struct vfs *ut_vfsp;void *ut_data;void (*ut_onerror)();int ut_onerror_state;int ut_validfs;};
struct utmpidle {struct ru_utmp ui_utmp;unsigned int ui_idle;};
struct yppasswd {char *oldpass;struct passwd newpw;};
struct cfs_cid {ino64_t cid_fileno;int cid_flags;};
typedef uint64 cookie3;
typedef uint64 fileid3;
struct in_addr {union in_addr___62419D96C55FD564B59AC1457FCC29DF S_un;};
struct ip_mreq {struct in_addr imr_multiaddr;struct in_addr imr_interface;};
struct lfsnode {struct lfsnode *lfs_next;int lfs_refct;struct vfs *lfs_realvfs;struct vnode *lfs_realrootvp;struct vfs lfs_vfs;};
struct msginfo {size_t msgmax;size_t msgmnb;int msgmni;int msgtql;};
typedef o_uid_t o_gid_t;
typedef uint64 offset3;
struct shminfo {size_t shmmax;size_t shmmin;int shmmni;int shmseg;};
struct siginfo {int si_signo;int si_code;int si_errno;union siginfo___61EAF0F09D3366CB297160630E2CDB63 __data;};
struct t_iovec {void *iov_base;size_t iov_len;};
typedef uint32 count3;
struct dsplog {int d_type;union dsplog___DABDA4726C127F966E30EBE921BDE6CC d_un;};
struct glob_t {size_t gl_pathc;char **gl_pathv;size_t gl_offs;char **gl_pathp;int gl_pathn;};
struct loinfo {struct vfs *li_realvfs;struct vfs *li_mountvfs;struct vnode *li_rootvp;int li_mflag;int li_refct;dev_t li_rdev;struct lfsnode *li_lfs;};
struct ncache {struct ncache *hash_next;struct ncache *hash_prev;struct ncache *next_free;struct vnode *vp;struct vnode *dp;struct cred *cred;char *name;int namlen;int hash;};
struct pm_req {char *physpath;int component;int value;void *data;size_t datasize;};
struct rusage {struct timeval ru_utime;struct timeval ru_stime;int ru_maxrss;int ru_ixrss;int ru_idrss;int ru_isrss;int ru_minflt;int ru_majflt;int ru_nswap;int ru_inblock;int ru_oublock;int ru_msgsnd;int ru_msgrcv;int ru_nsignals;int ru_nvcsw;int ru_nivcsw;};
struct statfs {short f_fstyp;int f_bsize;int f_frsize;int f_blocks;int f_bfree;ino_t f_files;ino_t f_ffree;char f_fname[6];char f_fpack[6];};
struct fioio {ino_t fio_ino;int fio_gen;int fio_fd;};
struct ftblk {struct ftblk *nxt;int ix;struct ftevnt ev[9];};
struct ftflw {struct ftflw *nxt;int hash;int count;struct ftflwe ev[1];};
struct fthdr {struct ftblk *tail;unsigned int hash;void *thread;int cpu_seqid;struct ftblk first;};
struct ifreq {char ifr_name[16];union ifreq___031EB9357DA800073593637CA1D35508 ifr_ifru;};
struct thrpt {struct reqvalue maxthrpt;struct reqvalue avgthrpt;};
union nispasswd_updresult___493D7F93814B4BE288B5F7ADF9E01279 {nispasswd_error reason;nispasswd_code npd_err;};
union ddi_minor_data___C8F0215C6A1A24E3095D703645F6536F {struct ddi_minor d_minor;struct ddi_minor_alias d_alias;};
union authdes_verf___D072B0FF48589EAC93A5A80C9BF6CD34 {struct timeval adv_ctime;des_block adv_xtime;};
union ip6_hdr___BD1196ABBEDCD1C568FFAAAAE6BA5314 {struct ip6_hdr___BD1196ABBEDCD1C568FFAAAAE6BA5314__ip6_hdrctl ip6_un1;uint8_t ip6_un2_vfc;};
union tmpnode___8A064BB42F06F947A31D89B2B058AC9B {struct tmpnode___8A064BB42F06F947A31D89B2B058AC9B___B23A431050292DDB2A4FAE77ED622141 un_dirstruct;char *un_symlink;struct tmpnode___8A064BB42F06F947A31D89B2B058AC9B___9DB28C43D4E3267093DD49E88C2EC05A un_anonstruct;};
struct ip_timestamp__ipt_timestamp__ipt_ta {struct in_addr ipt_addr;n_long ipt_time;};
struct _211BFD783D8D84C3D8E218C4E6F77865 {int (*door_create)();int (*door_revoke)();int (*door_info)();int (*door_cred)();int (*door_call)();int (*door_return)();};
struct _4965EEC990952D9E46AE6A5DEA6146E6 {Elf32_Sword eb_tag;union _4965EEC990952D9E46AE6A5DEA6146E6___6E85EC2AA6609A2A5C09ADACFEBAAD54 eb_un;};
struct _59C2F8BE822F39E0857CE77037A0F7B3 {Elf64_Xword eb_tag;union _59C2F8BE822F39E0857CE77037A0F7B3___8DBE08BFF46A6256412FDD0D3B09651A eb_un;};
struct _68E4A9C261F68D94E3C41D4B3B334942 {Elf32_Sword d_tag;union _68E4A9C261F68D94E3C41D4B3B334942___B21EF9EB666022D3B04E309DD56686B1 d_un;};
union ip_timestamp__ipt_timestamp {n_long ipt_time[1];struct ip_timestamp__ipt_timestamp__ipt_ta ipt_ta[1];};
struct nfslog_READDIRPLUS3args {nfs_fh3 dir;count3 dircount;count3 maxcount;};
struct cistpl_longlink_cb_t {uint32_t flags;uint32_t addr;union cistpl_longlink_cb_t___B3034DB9D1F4D04895C46A23B7DB6483 space;};
struct ufsd_repairfs_args_t {fs_identity_t ua_fsid;u_int ua_attempts;};
struct nd_neighbor_solicit {icmp6_t nd_ns_hdr;struct in6_addr nd_ns_target;};
struct nfslog_SETATTR3args {nfs_fh3 object;set_size3 size;};
struct nis_bound_directory {int generation;int min_rank;int optimal_rank;directory_obj dobj;struct nis_bound_directory___F62E7BB7AC2DF8B83A7DAD8BC3B92E6C BEP;};
struct nispasswd_updresult {nispasswd_status status;union nispasswd_updresult___493D7F93814B4BE288B5F7ADF9E01279 nispasswd_updresult_u;};
struct nss_netdirbyaddr_in {nss_netdir_op_t op_t;union nss_netdirbyaddr_in___52654151BE2F33B35A12C07C8189686F arg;};
struct nss_netdirbyname_in {nss_netdir_op_t op_t;union nss_netdirbyname_in___A81B8F3144EDB2CCC4B96A77B00E3123 arg;};
struct nd_neighbor_advert {icmp6_t nd_na_hdr;struct in6_addr nd_na_target;};
struct nfslog_setattrargs {fhandle saa_fh;nfslog_sattr saa_sa;};
struct nfslog_symlinkargs {nfslog_diropargs sla_from;char *sla_tnm;nfslog_sattr sla_sa;};
struct mib2_tcpConnEntry {int tcpConnState;IpAddress tcpConnLocalAddress;int tcpConnLocalPort;IpAddress tcpConnRemAddress;int tcpConnRemPort;struct mib2_tcpConnEntry__tcpConnEntryInfo_s tcpConnEntryInfo;};
struct nfslog_LOOKUP3res {nfsstat3 status;union nfslog_LOOKUP3res___8A12F739DA201A0F01CC54A2347608A8 nfslog_LOOKUP3res_u;};
struct nfslog_MKNOD3args {nfslog_diropargs3 where;ftype3 type;};
struct nfslog_createargs {nfslog_sattr ca_sa;nfslog_diropargs ca_da;};
struct nfslog_createhow3 {createmode3 mode;union nfslog_createhow3___7B9F70D06961F114B24C4AB5E87688DF nfslog_createhow3_u;};
struct nfslog_LINK3args {nfs_fh3 file;nfslog_diropargs3 link;};
union dbri_rex_opcode {struct dbri_rex_opcode___213D8288DE2BBC7A9C1DC9B852CEBCC7 r;uint32_t word32;};
struct nfslog_linkargs {fhandle la_from;nfslog_diropargs la_to;};
struct nfslog_rddirres {nfsstat rd_status;union nfslog_rddirres___6F57ED1BD35F31BB173B09F6B543717D nfslog_rddirres_u;};
struct nfslog_rdresult {nfsstat r_status;union nfslog_rdresult___2EF0204D03A830622AF225C6F00B5166 nfslog_rdresult_u;};
struct nlm4_unlockargs {netobj cookie;struct nlm4_lock alock;};
struct cistpl_funce_t {uint32_t function;uint32_t subfunction;union cistpl_funce_t___D5FA95438D5A8A9C79108965BD5DD127 data;};
struct nlm_unlockargs {netobj cookie;struct nlm_lock alock;};
struct stc_defaults_t {int flags;int drain_size;int stc_hiwater;int stc_lowwater;int rtpr;int rx_fifo_thld;struct termios termios;int strobe_w;int data_setup;int ack_timeout;int error_timeout;int busy_timeout;int line_no;int op;uchar_t reg_offset;uchar_t reg_data;};
struct ufsd_log_msg_t {ufsd_log_op_t um_lop;union ufsd_log_msg_t___960FAB35EDE40EACAA5C69F67904DD69 ufsd_log_msg_t_u;};
struct au_socket_tok {short type;ushort_t lport;struct in_addr laddr;ushort_t fport;struct in_addr faddr;};
struct getquota_rslt {gqr_status status;union getquota_rslt___93D720EECC4BDA120269F9F7BB40A95B getquota_rslt_u;};
struct mib2_udpEntry {IpAddress udpLocalAddress;int udpLocalPort;struct mib2_udpEntry__udpEntryInfo_s udpEntryInfo;};
struct nlm4_testrply {nlm4_stats stat;union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65 nlm4_testrply_u;};
struct ACCESS2resok {struct nfsfattr attr;uint32 access;};
struct GETACL2resok {struct nfsfattr attr;vsecattr_t acl;};
struct audtrace_hdr {uint_t seq;int type;struct timeval timestamp;char _f[8];};
struct authdes_verf {union authdes_verf___D072B0FF48589EAC93A5A80C9BF6CD34 adv_time_u;uint32_t adv_int_u;};
struct ip_timestamp {uchar_t ipt_code;uchar_t ipt_len;uchar_t ipt_ptr;unsigned char ipt_oflw : 4;unsigned char ipt_flg : 4;union ip_timestamp__ipt_timestamp ipt_timestamp;};
struct nfscreatargs {struct nfsdiropargs ca_da;struct nfssattr *ca_sa;struct nfssattr ca_sa_buf;};
struct nlm4_testres {netobj cookie;nlm4_testrply stat;};
struct nlm_testrply {nlm_stats stat;union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE nlm_testrply_u;};
struct rd_event_msg {rd_event_e type;union rd_event_msg___9ECDAEB3AD741762C56870A1C94CE353 u;};
struct ACCESS3args {nfs_fh3 object;uint32 access;};
struct GETACL3args {nfs_fh3 fh;uint32 mask;};
struct SETACL3args {nfs_fh3 fh;vsecattr_t acl;};
struct cpu_sysinfo {uint_t cpu[4];uint_t wait[3];uint_t bread;uint_t bwrite;uint_t lread;uint_t lwrite;uint_t phread;uint_t phwrite;uint_t pswitch;uint_t trap;uint_t intr;uint_t syscall;uint_t sysread;uint_t syswrite;uint_t sysfork;uint_t sysvfork;uint_t sysexec;uint_t readch;uint_t writech;uint_t rcvint;uint_t xmtint;uint_t mdmint;uint_t rawch;uint_t canch;uint_t outch;uint_t msg;uint_t sema;uint_t namei;uint_t ufsiget;uint_t ufsdirblk;uint_t ufsipage;uint_t ufsinopage;uint_t inodeovf;uint_t fileovf;uint_t procovf;uint_t intrthread;uint_t intrblk;uint_t idlethread;uint_t inv_swtch;uint_t nthreads;uint_t cpumigrate;uint_t xcalls;uint_t mutex_adenters;uint_t rw_rdfails;uint_t rw_wrfails;uint_t modload;uint_t modunload;uint_t bawrite;uint_t rw_enters;uint_t win_uo_cnt;uint_t win_uu_cnt;uint_t win_so_cnt;uint_t win_su_cnt;uint_t win_suo_cnt;};
struct kstat_named {char name[31];uchar_t data_type;union kstat_named___7F27F6A69995E91B81910D0AAA5ACCB4 value;};
struct nd_redirect {icmp6_t nd_rd_hdr;struct in6_addr nd_rd_target;struct in6_addr nd_rd_dst;};
struct nfsattrstat {nfsstat ns_status;union nfsattrstat___B6E4C4804F8B4E61D83A908BE84CFFC2 ns_u;};
struct nfsrdresult {nfsstat rr_status;union nfsrdresult___6A35507E6474F6D0336B5312E06C8FBF rr_u;};
struct nlm_testres {netobj cookie;nlm_testrply stat;};
struct post_op_fh3 {bool_t handle_follows;nfs_fh3 handle;};
struct sattrguard3 {bool_t check;nfstime3 obj_ctime;};
struct sioc_sg_req {struct in_addr src;struct in_addr grp;uint_t pktcnt;uint_t bytecnt;uint_t wrong_if;};
struct diropargs3 {nfs_fh3 *dirp;nfs_fh3 dir;filename3 name;int flags;};
struct ip6_rthdr0 {uint8_t ip6r0_nxt;uint8_t ip6r0_len;uint8_t ip6r0_type;uint8_t ip6r0_segleft;uint8_t ip6r0_reserved;uint8_t ip6r0_slmap[3];struct in6_addr ip6r0_addr[1];};
union mutex_impl {struct mutex_impl__adaptive_mutex m_adaptive;struct mutex_impl__spin_mutex m_spin;};
struct nfsrdlnres {nfsstat rl_status;union nfsrdlnres___659D09B361D701D0D66EB16B547B6A97 rl_u;};
struct ntptimeval {struct timeval time;int32_t maxerror;int32_t esterror;};
struct ppsclockev {struct timeval tv;uint_t serial;};
struct ux_extaddr {size_t size;union ux_extaddr___6B9E6D36BA9C529C32E2823564C5CFF8 addr;};
struct LINK3args {nfs_fh3 file;diropargs3 link;};
struct icmp6_mld {icmp6_t icmp6m_hdr;struct in6_addr icmp6m_group;};
struct nfssaargs {fhandle_t saa_fh;struct nfssattr saa_sa;};
struct nfsslargs {struct nfsdiropargs sla_from;char *sla_tnm;int sla_tnm_flags;struct nfssattr *sla_sa;struct nfssattr sla_sa_buf;};
struct nfsstatfs {nfsstat fs_status;union nfsstatfs___08C78D7C851FA76173109663D8432C36 fs_u;};
struct prxregset {uint32_t pr_type;uint32_t pr_align;union prxregset___13E89D14F043A1ECCED4B43807F5FAAC pr_un;};
struct set_atime {time_how set_it;nfstime3 atime;};
struct set_mtime {time_how set_it;nfstime3 mtime;};
union sunromvec {struct romvec_obp obp;struct romvec_sunmon sunmon;};
struct au_token {char id;struct au_token *next;struct au_token *prev;char *data;ushort_t size;union au_token___48B8A567D7721A2375B9B4755C07ABC8 un;};
struct lm_vnode {struct vnode *vp;int count;struct lm_block *blocked;struct lm_vnode *next;nfs_fhandle fh2;nfs_fh3 fh3;};
struct nfs_args {struct netbuf *addr;struct netbuf *syncaddr;struct knetconfig *knconf;char *hostname;char *netname;caddr_t fh;int flags;int wsize;int rsize;int timeo;int retrans;int acregmin;int acregmax;int acdirmin;int acdirmax;struct pathcnf *pathconf;int nfs_args_ext;union nfs_ext nfs_ext_u;};
struct swapnode {struct swapnode *swap_next;ulong_t swap_vnum;struct vnode swap_vnode;};
struct wcc_attr {size3 size;nfstime3 mtime;nfstime3 ctime;};
struct bind_ux {struct sockaddr_un name;struct ux_extaddr ux_extaddr;};
struct ea_item {union ea_item___4B8FAD181399369BBD31D3D213262D6C ei_u;ea_size_t ei_size;};
struct ieiaddr {struct iecb ieia_cb;uchar_t ieia_addr[6];};
struct ip6_hdr {union ip6_hdr___BD1196ABBEDCD1C568FFAAAAE6BA5314 ip6_ctlun;struct in6_addr ip6_src;struct in6_addr ip6_dst;};
struct mdb_arg {mdb_type_t a_type;union mdb_arg___23C4DC01D1EF29DAF9BB24B228A431B7 a_un;};
struct nfsdrok {fhandle_t drok_fhandle;struct nfsfattr drok_attr;};
struct objdata {zotypes zo_type;union objdata___B3007D6063AF66DF722E8A0D3E39E00C objdata_u;};
struct rpc_err {enum clnt_stat re_status;union rpc_err___8A638CADF3CDC5D00CA52E17B179ACCF ru;};
struct ifaddr {struct sockaddr ifa_addr;union ifaddr___0DF00F875CAF96EB397809642F17405E ifa_ifu;struct ifnet *ifa_ifp;struct ifaddr *ifa_next;};
struct lifreq {char lifr_name[32];union lifreq___45DD51CF1AA3D53B555DDF2404323785 lifr_lifru1;int lifr_pad0;union lifreq___9C4034A34F2C584EFE8AFA556B44D076 lifr_lifru;};
struct lnode {struct lnode *lo_next;struct vnode *lo_vp;uint_t lo_looping;struct vnode *lo_crossedvp;struct vnode lo_vnode;};
struct rip {uchar_t rip_cmd;uchar_t rip_vers;uchar_t rip_res1[2];union rip___AFFF135AAACB9FA320A59FAF8451ECA8 ripun;};
union ufsd_msg_vardata_t___9AED1730912B846ACE4EBF2EED6B8961 {ufsd_boot_type_t umv_b;ufsd_fsck_state_t umv_fs;ufsd_log_msg_t umv_lm;};
union isdn_param___CC0818EEDB9939D07B3B37CF76D5BC51 {unsigned int us;unsigned int ms;unsigned int flag;unsigned int count;enum isdn_param_asmb asmb;enum isdn_param_maint maint;struct isdn_param___CC0818EEDB9939D07B3B37CF76D5BC51___E3C3E6EDB4E40BC00986BE35B850D35D pause;unsigned int reserved[2];};
struct scsi_cdb___C7BA4B60DE78D71094D9A2B3854B7108 {uchar_t cmd;unsigned char lun : 3;unsigned char tag : 5;union scsi_cdb___C7BA4B60DE78D71094D9A2B3854B7108___283DB60FC2BC13980623105C0AF94F5F sg;};
struct _8A57A83BA984F7959D9E22CB0CD4E5F7 {uint_t ppa;uint_t cmd;uint_t data1;uint_t data2;ushort_t buf[256];};
struct nfslog_request_record {nfslog_record_header re_header;char *re_principal_name;char *re_netid;char *re_tag;struct netbuf re_ipaddr;caddr_t re_rpc_arg;caddr_t re_rpc_res;};
struct mib2_tcp6ConnEntry {Ip6Address tcp6ConnLocalAddress;int tcp6ConnLocalPort;Ip6Address tcp6ConnRemAddress;int tcp6ConnRemPort;DeviceIndex tcp6ConnIfIndex;int tcp6ConnState;struct mib2_tcp6ConnEntry__tcp6ConnEntryInfo_s tcp6ConnEntryInfo;};
struct nd_opt_prefix_info {uint8_t nd_opt_pi_type;uint8_t nd_opt_pi_len;uint8_t nd_opt_pi_prefix_len;uint8_t nd_opt_pi_flags_reserved;uint32_t nd_opt_pi_valid_time;uint32_t nd_opt_pi_preferred_time;uint32_t nd_opt_pi_reserved2;struct in6_addr nd_opt_pi_prefix;};
struct nfs_async_read_req {void (*readahead)();u_offset_t blkoff;struct seg *seg;caddr_t addr;};
struct nfslog_COMMIT3args {nfs_fh3 file;offset3 offset;count3 count;};
struct nfslog_WRITE3resok {size3 filesize;count3 count;stable_how committed;};
struct nfslog_READ3args {nfs_fh3 file;offset3 offset;count3 count;};
struct accepted_reply {struct opaque_auth ar_verf;enum accept_stat ar_stat;union accepted_reply___A90005FDD45017CA8E2AC88DE72D6F76 ru;};
struct ddi_minor_data {struct ddi_minor_data *next;dev_info_t *dip;ddi_minor_type type;union ddi_minor_data___C8F0215C6A1A24E3095D703645F6536F mu;};
struct nlm4_shareargs {netobj cookie;nlm4_share share;bool_t reclaim;};
struct nlm4_cancargs {netobj cookie;bool_t block;bool_t exclusive;struct nlm4_lock alock;};
struct nlm4_testargs {netobj cookie;bool_t exclusive;struct nlm4_lock alock;};
struct nlm_shareargs {netobj cookie;nlm_share share;bool_t reclaim;};
struct nss_XbyY_args {nss_XbyY_buf_t buf;int stayopen;int (*str2ent)( char *instr, int instr_len, void *ent, char *buffer, int buflen);union nss_XbyY_key key;void *returnval;int erange;int h_errno;nss_status_t status;};
union dbri_dts_tsd {struct dbri_dts_tsd___81D97CDFDE4B25C2022176D9D2324F3D r;struct dbri_dts_tsd___5C60E47FC670D9F72FB94116E1FA1533 chi;uint32_t word32;};
struct COMMIT3args {nfs_fh3 file;offset3 offset;count3 count;};
struct nfsrddirres {nfsstat rd_status;uint_t rd_bufsize;union nfsrddirres___58E4E4C17AE20109EAEABA6611F00FE4 rd_u;};
struct sockaddr_in {sa_family_t sin_family;in_port_t sin_port;struct in_addr sin_addr;char sin_zero[8];};
struct rsm_es_out {uchar_t page_code;uchar_t rsvd1;ushort_t page_len;uchar_t encl_gd_len;uchar_t rsvd2;uchar_t num_unit_types;uchar_t rsvd3;unsigned short rsvd4 : 1;unsigned short alenb : 1;unsigned short rsvd5 : 2;unsigned short altime : 12;unsigned char rsvd6 : 1;unsigned char rpoff : 1;unsigned char rsvd7 : 6;uchar_t rsvd8;uchar_t max_drvs;uchar_t drv_dscp_len;struct rsm_es_d_stat devstat[7];uchar_t rsvd9;};
struct READ3args {nfs_fh3 file;offset3 offset;count3 count;};
struct if_msghdr {ushort_t ifm_msglen;uchar_t ifm_version;uchar_t ifm_type;int ifm_addrs;int ifm_flags;ushort_t ifm_index;struct if_data ifm_data;};
struct in_ifaddr {struct ifaddr ia_ifa;ulong_t ia_net;ulong_t ia_netmask;ulong_t ia_subnet;ulong_t ia_subnetmask;struct in_addr ia_netbroadcast;int ia_flags;struct in_ifaddr *ia_next;};
struct dk_label {char dkl_asciilabel[128];struct dk_vtoc dkl_vtoc;uint16_t dkl_write_reinstruct;uint16_t dkl_read_reinstruct;char dkl_pad[152];uint16_t dkl_rpm;uint16_t dkl_pcyl;uint16_t dkl_apc;uint16_t dkl_obs1;uint16_t dkl_obs2;uint16_t dkl_intrlv;uint16_t dkl_ncyl;uint16_t dkl_acyl;uint16_t dkl_nhead;uint16_t dkl_nsect;uint16_t dkl_obs3;uint16_t dkl_obs4;struct dk_map dkl_map[8];uint16_t dkl_magic;uint16_t dkl_cksum;};
union ioctypes {struct iocblk iocblk;struct copyreq copyreq;struct copyresp copyresp;};
union scsi_cdb {struct scsi_cdb___C7BA4B60DE78D71094D9A2B3854B7108 cdb_un;uchar_t cdb_opaque[16];uint_t cdb_long[4];};
union dbri_md {struct dbri_md___5BDDECA1D345617A19D694F0479F5E14 tx;struct dbri_md___3585FD5177D2C3180482D2FE90B1A361 rx;uint32_t _words[4];};
struct igmpmsg {uint_t unused1;uint_t unused2;uchar_t im_msgtype;uchar_t im_mbz;uchar_t im_vif;uchar_t unused3;struct in_addr im_src;struct in_addr im_dst;};
struct acache {uint32_t known;uint32_t allowed;struct rnode *rnode;cred_t *cred;struct acache *next;struct acache *list;};
struct entry3 {fileid3 fileid;filename3 name;cookie3 cookie;struct entry3 *nextentry;};
struct ipovly {caddr_t ih_next;caddr_t ih_prev;uchar_t ih_x1;uchar_t ih_pr;short ih_len;struct in_addr ih_src;struct in_addr ih_dst;};
struct pcnode {struct pcnode *pc_forw;struct pcnode *pc_back;int pc_flags;struct vnode *pc_vn;int pc_size;pc_cluster32_t pc_scluster;daddr_t pc_eblkno;int pc_eoffset;struct pcdir pc_entry;};
struct cfent {short volno;char ftype;char pkg_class[65];int pkg_class_idx;char *path;struct ainfo ainfo;struct cinfo cinfo;short npkgs;struct pinfo *pinfo;};
struct graph {kmutex_t gp_mutex;struct lock_descriptor active_locks;struct lock_descriptor sleeping_locks;int index;int mark;flk_lockmgr_status_t lockmgr_status;};
struct igmp {uchar_t igmp_type;uchar_t igmp_code;ushort_t igmp_cksum;struct in_addr igmp_group;};
struct ipq {struct ipq *next;struct ipq *prev;uchar_t ipq_ttl;uchar_t ipq_p;ushort_t ipq_id;struct ipasfrag *ipq_next;struct ipasfrag *ipq_prev;struct in_addr ipq_src;struct in_addr ipq_dst;};
struct ip {unsigned char ip_v : 4;unsigned char ip_hl : 4;uchar_t ip_tos;short ip_len;ushort_t ip_id;short ip_off;uchar_t ip_ttl;uchar_t ip_p;ushort_t ip_sum;struct in_addr ip_src;struct in_addr ip_dst;};
union icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A {struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___BF1873CBC7925A80863A89A5F584CFD8 u_echo;struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___53D01225980FCAE7122E28993227E8F1 u_du;struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___7B3B6785F52FEBD22F1447BAEAA20549 u_pp;struct icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A___0A785BFE2C1FC8F220D4B5E421FF4D4B u_rd;};
struct mib2_ipNetToMediaEntry {DeviceName ipNetToMediaIfIndex;PhysAddress ipNetToMediaPhysAddress;IpAddress ipNetToMediaNetAddress;int ipNetToMediaType;struct mib2_ipNetToMediaEntry__ipNetToMediaInfo_s ipNetToMediaInfo;};
struct nfslog_READ3resok {size3 filesize;count3 count;bool_t eof;uint32_t size;};
struct nfslog_WRITE3args {nfs_fh3 file;offset3 offset;count3 count;stable_how stable;};
struct READDIRPLUS3args {nfs_fh3 dir;cookie3 cookie;cookieverf3 cookieverf;count3 dircount;count3 maxcount;};
struct fat32_bootsec {struct bootsec f_bs;uint32_t f_fatlength;uint16_t f_flags;uint8_t f_major;uint8_t f_minor;uint32_t f_rootcluster;uint16_t f_infosector;uint16_t f_backupboot;uint16_t f_reserved2[6];};
struct READDIR3args {nfs_fh3 dir;cookie3 cookie;cookieverf3 cookieverf;count3 count;};
struct sockaddr_in6 {sa_family_t sin6_family;in_port_t sin6_port;uint32_t sin6_flowinfo;struct in6_addr sin6_addr;uint32_t sin6_scope_id;uint32_t __sin6_src_id;};
struct rsm_es_in {uchar_t page_code;unsigned char rsvd1 : 5;unsigned char abs : 1;unsigned char chk : 1;unsigned char efw : 1;ushort_t page_len;uchar_t encl_gd_len;uchar_t rsvd2;uchar_t num_unit_types;uchar_t rsvd3;unsigned short alsen : 1;unsigned short alenb : 1;unsigned short rsvd4 : 2;unsigned short altime : 12;unsigned char idsen : 1;unsigned char rsvd5 : 1;unsigned char dsdly : 1;unsigned char rsvd6 : 5;uchar_t rsvd7;uchar_t max_drvs;uchar_t drv_dscp_len;uchar_t max_pwms;uchar_t pwm_dscp_len;uchar_t max_fans;uchar_t fan_dscp_len;uchar_t max_temps;uchar_t temp_dscp_len;struct rsm_es_d_stat devstat[7];struct rsm_es_mod_stat pwm[2];struct rsm_es_mod_stat fan;struct rsm_es_mod_stat ovta;};
struct semid_ds {struct ipc_perm sem_perm;struct sem *sem_base;ushort_t sem_nsems;time_t sem_otime;int32_t sem_pad1;time_t sem_ctime;int32_t sem_pad2;int sem_binary;int sem_pad3[3];};
struct commit {page_t *c_pages;offset3 c_commbase;count3 c_commlen;kcondvar_t c_cv;};
struct mfcctl {struct in_addr mfcc_origin;struct in_addr mfcc_mcastgrp;vifi_t mfcc_parent;uint_t mfcc_pkt_cnt;uchar_t mfcc_ttls[32];};
struct vifctl {vifi_t vifc_vifi;uchar_t vifc_flags;uchar_t vifc_threshold;uint_t vifc_rate_limit;struct in_addr vifc_lcl_addr;struct in_addr vifc_rmt_addr;uint_t vifc_pkt_in;uint_t vifc_pkt_out;};
struct inpcb {struct inpcb *inp_next;struct inpcb *inp_prev;struct inpcb *inp_head;struct in_addr inp_faddr;ushort_t inp_fport;struct in_addr inp_laddr;ushort_t inp_lport;struct socket *inp_socket;caddr_t inp_ppcb;struct route inp_route;struct mbuf *inp_options;};
union icmp___6518A9D1B702C5C28B83CB067318DBE9 {uchar_t ih_pptr;struct in_addr ih_gwaddr;struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_idseq ih_idseq;int ih_void;struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_pmtu ih_pmtu;struct icmp___6518A9D1B702C5C28B83CB067318DBE9__ih_rtradv ih_rtradv;};
struct cfs_dlog_entry {int dl_len;cfs_dlog_op_t dl_op;cfs_dlog_val_t dl_valid;uint_t dl_seq;union cfs_dlog_entry__cfs_dlog_entry_items dl_u;struct cfs_dlog_trailer dl_trailer;};
struct nis_object {nis_oid zo_oid;nis_name zo_name;nis_name zo_owner;nis_name zo_group;nis_name zo_domain;uint_t zo_access;uint32_t zo_ttl;objdata zo_data;};
struct __svcxprt {int xp_fd;ushort_t xp_port;struct xp_ops *xp_ops;int xp_addrlen;char *xp_tp;char *xp_netid;struct netbuf xp_ltaddr;struct netbuf xp_rtaddr;char xp_raddr[16];struct opaque_auth xp_verf;caddr_t xp_p1;caddr_t xp_p2;caddr_t xp_p3;int xp_type;};
struct log_entry {uint32_t le_time;log_entry_t le_type;nis_name le_princp;nis_name le_name;struct log_entry___1E639176190539C4AF5A837E820AE922 le_attrs;nis_object le_object;};
struct tmpnode {struct tmpnode *tn_back;struct tmpnode *tn_forw;union tmpnode___8A064BB42F06F947A31D89B2B058AC9B un_tmpnode;struct vnode tn_vnode;int tn_gen;struct vattr tn_attr;krwlock_t tn_contents;krwlock_t tn_rwlock;kmutex_t tn_tlock;};
struct hsnode {struct hsnode *hs_hash;struct hsnode *hs_freef;struct hsnode *hs_freeb;struct vnode hs_vnode;struct hs_direntry hs_dirent;ulong_t hs_nodeid;uint_t hs_dir_lbn;uint_t hs_dir_off;struct ptable_idx *hs_ptbl_idx;uint_t hs_offset;int hs_mapcnt;uint_t hs_vcode;uint_t hs_flags;kmutex_t hs_contents_lock;};
struct o_acct {char ac_flag;char ac_stat;o_uid_t ac_uid;o_gid_t ac_gid;o_dev_t ac_tty;time32_t ac_btime;comp_t ac_utime;comp_t ac_stime;comp_t ac_etime;comp_t ac_mem;comp_t ac_io;comp_t ac_rw;char ac_comm[8];};
struct WRITE3args {nfs_fh3 file;offset3 offset;count3 count;stable_how stable;struct WRITE3args___67EF420668BC39A8825B32AFBE42D0CA data;mblk_t *mblk;};
struct sattr3 {set_mode3 mode;set_uid3 uid;set_gid3 gid;set_size3 size;set_atime atime;set_mtime mtime;};
struct so_so {int flags;int closeflags;queue_t *rdq;mblk_t *iocsave;struct t_info tp_info;struct netbuf raddr;struct netbuf laddr;struct ux_extaddr lux_dev;struct ux_extaddr rux_dev;int so_error;mblk_t *oob;struct so_so *so_conn;mblk_t *consave;struct si_udata udata;int so_option;mblk_t *bigmsg;struct so_ux so_ux;int hasoutofband;mblk_t *urg_msg;int sndbuf;int rcvbuf;int sndlowat;int rcvlowat;int linger;int sndtimeo;int rcvtimeo;int prototype;int so_cbacks_outstanding;int so_cbacks_inprogress;struct so_so *so_next;struct so_so **so_ptpn;int wbufcid;int rbufcid;int wtimoutid;int rtimoutid;queue_t *so_driverq;int so_isaccepting;struct so_so *so_acceptor;int so_id;};
struct hs_volume {ulong_t vol_size;uint_t lbn_size;uint_t lbn_shift;uint_t lbn_secshift;uint_t lbn_maxoffset;uchar_t file_struct_ver;uid_t vol_uid;gid_t vol_gid;uint_t vol_prot;struct timeval cre_date;struct timeval mod_date;struct hs_direntry root_dir;ushort_t ptbl_len;uint_t ptbl_lbn;ushort_t vol_set_size;ushort_t vol_set_seq;char vol_id[32];};
struct scsi_cmd {struct scsi_pkt cmd_pkt;uchar_t *cmd_cdbp;uchar_t *cmd_scbp;ulong_t cmd_data;ulong_t cmd_saved_data;ulong_t cmd_dmacount;struct sd_seg *cmd_dsegp;struct sd_seg cmd_dsegs;ddi_dma_handle_t cmd_dmahandle;ddi_dma_cookie_t cmd_dmacookie;int cmd_timeout;union scsi_cdb cmd_cdb_un;ulong_t cmd_flags;uchar_t cmd_pkt_private[8];uchar_t cmd_cdblen;uchar_t cmd_scblen;uchar_t cmd_privlen;uchar_t cmd_scb[4];uchar_t cmd_reserved[1];struct scsi_cmd *cmd_forw;ushort_t cmd_age;uchar_t cmd_tag[2];};
struct cachefs_metadata {struct vattr md_vattr;o_mode_t md_aclclass;ushort_t md_pad1;fid_t md_cookie;int md_flags;uint_t md_rlno;enum cachefs_rl_type md_rltype;int md_consttype;fid_t md_fid;uint_t md_frontblks;uint_t md_gen;struct cfs_cid md_parent;timestruc_t md_timestamp;timestruc_t md_x_time;timestruc_t md_localmtime;timestruc_t md_localctime;uint_t md_resettimes;ino64_t md_localfileno;uint_t md_resetfileno;uint_t md_seq;int md_allocents;struct cachefs_allocmap md_allocinfo[32];};
struct icommon {o_mode_t ic_smode;short ic_nlink;o_uid_t ic_suid;o_gid_t ic_sgid;u_offset_t ic_lsize;time32_t ic_atime;int32_t ic_atspare;time32_t ic_mtime;int32_t ic_mtspare;time32_t ic_ctime;int32_t ic_ctspare;daddr32_t ic_db[12];daddr32_t ic_ib[3];int32_t ic_flags;int32_t ic_blocks;int32_t ic_gen;int32_t ic_shadow;uid_t ic_uid;gid_t ic_gid;uint32_t ic_oeftflag;};
struct fattr3 {ftype3 type;mode3 mode;uint32 nlink;uid3 uid;gid3 gid;size3 size;size3 used;specdata3 rdev;uint64 fsid;fileid3 fileid;nfstime3 atime;nfstime3 mtime;nfstime3 ctime;};
struct cnode {int c_flags;struct cnode *c_next;struct cnode *c_idleback;struct cnode *c_idlefront;struct vnode *c_frontvp;struct vnode *c_backvp;struct vnode *c_acldirvp;u_offset_t c_size;struct filegrp *c_filegrp;struct cfs_cid c_id;int c_invals;int c_usage;struct vnode c_vnode;struct cachefs_metadata c_metadata;int c_error;kmutex_t c_statelock;krwlock_t c_rwlock;vnode_t *c_unldvp;char *c_unlname;cred_t *c_unlcred;int c_nio;uint_t c_ioflags;kcondvar_t c_iocv;kmutex_t c_iomutex;cred_t *c_cred;int c_ipending;int c_mapcnt;offset_t c_apopoffset;uint_t c_apoplen;u_offset_t c_modaddr;};
struct inode {struct inode *i_chain[2];struct icommon i_ic;struct vnode i_vnode;struct vnode *i_devvp;ushort_t i_flag;dev_t i_dev;ino_t i_number;off_t i_diroff;struct ufsvfs *i_ufsvfs;struct dquot *i_dquot;krwlock_t i_rwlock;krwlock_t i_contents;kmutex_t i_tlock;offset_t i_nextr;struct inode *i_freef;struct inode *i_freeb;uint_t i_vcode;int i_mapcnt;int *i_map;dev_t i_rdev;size_t i_delaylen;offset_t i_delayoff;offset_t i_nextrio;int i_writes;kcondvar_t i_wrcv;offset_t i_doff;si_t *i_ufs_acl;};
union vioc_event___65B959ED4465248677AB4A78D6E13327 {struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_missing vie_u_missing;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_eject vie_u_eject;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_insert vie_u_insert;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_inuse vie_u_inuse;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_check vie_u_check;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_error vie_u_error;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_close vie_u_close;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_cancel vie_u_cancel;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_newlabel vie_u_newlabel;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_attr vie_u_attr;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_rm vie_u_rm;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_symname vie_u_symname;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_symdev vie_u_symdev;struct vioc_event___65B959ED4465248677AB4A78D6E13327__ve_remount vie_u_remount;};
struct _klwp {struct pcb lwp_pcb;uintptr_t lwp_oldcontext;int *lwp_ap;int lwp_errno;char lwp_error;char lwp_eosys;char lwp_argsaved;char lwp_watchtrap;int lwp_arg[8];void *lwp_regs;void *lwp_fpu;label_t lwp_qsav;uchar_t lwp_cursig;uchar_t lwp_curflt;uchar_t lwp_sysabort;uchar_t lwp_asleep;stack_t lwp_sigaltstack;struct sigqueue *lwp_curinfo;k_siginfo_t lwp_siginfo;k_sigset_t lwp_sigoldmask;struct _klwp__lwp_watch lwp_watch[4];uint32_t lwp_oweupc;struct _klwp__mstate lwp_mstate;struct lrusage lwp_ru;int lwp_lastfault;caddr_t lwp_lastfaddr;struct itimerval lwp_timer[3];char lwp_unused;char lwp_state;ushort_t lwp_nostop;kcondvar_t lwp_cv;clock_t lwp_utime;clock_t lwp_stime;struct _kthread *lwp_thread;struct proc *lwp_procp;void *lwp_reserved;};
struct proc {struct vnode *p_exec;struct as *p_as;struct plock *p_lockp;kmutex_t p_crlock;struct cred *p_cred;int p_swapcnt;char p_stat;char p_wcode;ushort_t p_pidflag;int p_wdata;pid_t p_ppid;struct proc *p_link;struct proc *p_parent;struct proc *p_child;struct proc *p_sibling;struct proc *p_psibling;struct proc *p_sibling_ns;struct proc *p_child_ns;struct proc *p_next;struct proc *p_prev;struct proc *p_nextofkin;struct proc *p_orphan;struct proc *p_nextorph;struct proc *p_pglink;struct proc *p_ppglink;struct sess *p_sessp;struct pid *p_pidp;struct pid *p_pgidp;kcondvar_t p_cv;kcondvar_t p_flag_cv;kcondvar_t p_lwpexit;kcondvar_t p_holdlwps;ushort_t p_pad1;uint_t p_flag;clock_t p_utime;clock_t p_stime;clock_t p_cutime;clock_t p_cstime;caddr_t *p_segacct;caddr_t p_brkbase;size_t p_brksize;k_sigset_t p_sig;k_sigset_t p_ignore;k_sigset_t p_siginfo;struct sigqueue *p_sigqueue;struct sigqhdr *p_sigqhdr;struct sigqhdr *p_signhdr;uchar_t p_stopsig;char p_fixalignment;int p_lwptotal;int p_lwpcnt;int p_lwprcnt;int p_lwpwait;int p_zombcnt;int p_zomb_max;id_t *p_zomb_tid;kthread_t *p_tlist;k_sigset_t p_sigmask;k_fltset_t p_fltmask;struct vnode *p_trace;struct vnode *p_plist;kthread_t *p_agenttp;struct watched_area *p_warea;ulong_t p_nwarea;struct watched_page *p_wpage;int p_nwpage;int p_mapcnt;struct proc *p_rlink;kcondvar_t p_srwchan_cv;size_t p_stksize;hrtime_t p_mstart;hrtime_t p_mterm;hrtime_t p_mlreal;hrtime_t p_acct[10];struct lrusage p_ru;struct itimerval p_rprof_timer;timeout_id_t p_rprof_timerid;uint_t p_defunct;kmutex_t p_pflock;struct prof p_prof;struct user p_user;kthread_t *p_server_threads;struct door_node *p_door_list;struct door_node *p_unref_list;kcondvar_t p_server_cv;char p_unref_thread;uchar_t p_tnf_flags;caddr_t p_audit_data;kthread_t *p_aslwptp;size_t p_swrss;struct aio *p_aio;struct itimer **p_itimer;k_sigset_t p_notifsigs;kcondvar_t p_notifcv;timeout_id_t p_alarmid;uint_t p_sc_unblocked;struct vnode *p_sc_door;caddr_t p_usrstack;uint_t p_stkprot;model_t p_model;struct lwpchan_data *p_lcp;kmutex_t p_lcp_mutexinitlock;utrap_handler_t *p_utraps;refstr_t *p_corefile;void *p_rce;struct task *p_task;struct proc *p_taskprev;struct proc *p_tasknext;};
union cisparse_t {cistpl_config_t cistpl_config;cistpl_device_t cistpl_device;cistpl_vers_1_t cistpl_vers_1;cistpl_vers_2_t cistpl_vers_2;cistpl_jedec_t cistpl_jedec;cistpl_format_t cistpl_format;cistpl_geometry_t cistpl_geometry;cistpl_byteorder_t cistpl_byteorder;cistpl_date_t cistpl_date;cistpl_battery_t cistpl_battery;cistpl_org_t cistpl_org;cistpl_manfid_t cistpl_manfid;cistpl_funcid_t cistpl_funcid;cistpl_funce_t cistpl_funce;cistpl_cftable_entry_t cistpl_cftable_entry;cistpl_linktarget_t cistpl_linktarget;cistpl_longlink_ac_t cistpl_longlink_ac;cistpl_longlink_mfc_t cistpl_longlink_mfc;cistpl_spcl_t cistpl_spcl;cistpl_swil_t cistpl_swil;cistpl_bar_t cistpl_bar;cistpl_devicegeo_t cistpl_devicegeo;cistpl_longlink_cb_t cistpl_longlink_cb;cistpl_get_tuple_name_t cistpl_get_tuple_name;cistpl_config_t config;cistpl_device_t device;cistpl_vers_1_t version_1;cistpl_vers_2_t version_2;cistpl_jedec_t jedec;cistpl_format_t format;cistpl_geometry_t geometry;cistpl_byteorder_t byteorder;cistpl_date_t date;cistpl_battery_t battery;cistpl_org_t org;cistpl_manfid_t manfid;cistpl_funcid_t funcid;cistpl_funce_t funce;cistpl_cftable_entry_t cftable;cistpl_linktarget_t linktarget;cistpl_longlink_ac_t longlink_ac;cistpl_longlink_mfc_t longlink_mfc;cistpl_spcl_t spcl;cistpl_swil_t swil;cistpl_bar_t bar;cistpl_devicegeo_t devgeo;cistpl_longlink_cb_t longlink_cb;cistpl_get_tuple_name_t tuple_name;};
struct _kthread {struct _kthread *t_link;caddr_t t_stk;void (*t_startpc)(void);struct cpu *t_bound_cpu;short t_affinitycnt;short t_bind_cpu;ushort_t t_flag;ushort_t t_proc_flag;ushort_t t_schedflag;char t_preempt;char t_preempt_lk;uint_t t_state;pri_t t_pri;pri_t t_epri;label_t t_pcb;lwpchan_t t_lwpchan;struct _sobj_ops *t_sobj_ops;id_t t_cid;struct thread_ops *t_clfuncs;void *t_cldata;ctxop_t *t_ctx;uintptr_t t_lofault;label_t *t_onfault;void *t_nofault;caddr_t t_swap;lock_t t_lock;uint8_t t_lockstat;uint8_t t_pil;disp_lock_t t_pi_lock;struct cpu *t_cpu;struct _kthread *t_intr;uint_t t_did;caddr_t t_tnf_tpdp;id_t t_tid;id_t t_waitfor;timeout_id_t t_alarmid;struct itimerval t_realitimer;timeout_id_t t_itimerid;struct sigqueue *t_sigqueue;k_sigset_t t_sig;k_sigset_t t_hold;struct _kthread *t_forw;struct _kthread *t_back;klwp_t *t_lwp;struct proc *t_procp;caddr_t t_audit_data;struct _kthread *t_next;struct _kthread *t_prev;struct vnode *t_trace;ushort_t t_whystop;ushort_t t_whatstop;int t_dslot;struct pollstate *t_pollstate;struct pollcache *t_pollcache;struct cred *t_cred;time_t t_start;clock_t t_lbolt;hrtime_t t_stoptime;short t_sysnum;kcondvar_t t_delay_cv;uint_t t_pctcpu;disp_lock_t *t_lockp;ushort_t t_oldspl;char t_pre_sys;lock_t t_lock_flush;struct _disp *t_disp_queue;clock_t t_disp_time;uint_t t_kpri_req;union _kthread____tu _tu;hrtime_t t_waitrq;int t_mstate;struct _kthread__rprof *t_rprof;struct turnstile *t_prioinv;struct turnstile *t_ts;uint_t t_mmuctx;struct _kthread__tsd_thread *t_tsd;clock_t t_stime;struct door_data *t_door;kmutex_t *t_plockp;struct _kthread *t_handoff;struct sc_data *t_schedctl;struct cpupart *t_cpupart;int t_bind_pset;struct copyops *t_copyops;caddr_t t_stkbase;struct page *t_red_pp;struct _afd t_activefd;struct _kthread *t_priforw;struct _kthread *t_priback;struct sleepq *t_sleepq;struct trap_info *t_panic_trap;void *t_resv;struct upimutex *t_upimutex;uint32_t t_nupinest;kmutex_t t_delay_lock;};
union nfslog_READDIRPLUS3res___786DCC1D2A488653AF02F6DB35124A23 {nfslog_READDIRPLUS3resok ok;};
union nfslog_SYMLINK3res___058BB506E3BAF24ED448FA1BD4833203 {post_op_fh3 obj;};
union nfslog_MKDIR3res___058BB506E3BAF24ED448FA1BD4833203 {post_op_fh3 obj;};
union nfslog_MKNOD3res___058BB506E3BAF24ED448FA1BD4833203 {post_op_fh3 obj;};
union nfslog_WRITE3res___DDA83BA4CE32216F1031293F1AEA52A0 {nfslog_WRITE3resok ok;};
union nfslog_READ3res___7A0E25342C0EB6C2A4CC1C4D51748A56 {nfslog_READ3resok ok;};
union nfslog_diropres___6E9AE3E0D1C67C0F8C2DC1BF0AAAE32B {nfslog_drok dr_ok;};
union GETATTR2res___0E71511EAA16D209A4D602249505B5F8 {GETATTR2resok ok;};
struct __res_state___A6CBED0F63521320A773A1D0A80BE43A {struct in_addr addr;unsigned int mask;};
struct icmp___91F6810D45DA7C23E53CAA18FF826292__id_ip {struct ip idi_ip;};
union nfsdiropres___C6DD0A424400D28F5D0F3991578B73A6 {struct nfsdrok dr_drok_u;};
union ACCESS2res___7E87908D10127D23949DE19A8553FC52 {ACCESS2resok ok;};
union GETACL2res___B07A5DE58C687D3B3D1EE7EDFDAFE7CD {GETACL2resok ok;};
union SETACL2res___D746CAD3772CAAAF9A580AF137F34722 {SETACL2resok ok;};
union cstate___678131C900E44C8ADDA4E179752E682F {char csu_hdr[128];struct ip csu_ip;};
union dinode___7C68577AF0075A7E4A65BFF776A0DE33 {struct icommon di_icom;char di_size[128];};
struct _029C14C2128B1475759967EB9FDC7B4A {struct in_addr in_prefix_addr;unsigned int in_prefix_len;};
struct nfslog_CREATE3resok {post_op_fh3 obj;};
struct nfslog_SYMLINK3args {nfslog_diropargs3 where;char *symlink_data;};
struct nfslog_REMOVE3args {nfslog_diropargs3 object;};
struct nfslog_RENAME3args {nfslog_diropargs3 from;nfslog_diropargs3 to;};
struct nfslog_MKDIR3args {nfslog_diropargs3 where;};
struct nfslog_RMDIR3args {nfslog_diropargs3 object;};
struct nfslog_entryplus3 {post_op_fh3 name_handle;char *name;struct nfslog_entryplus3 *nextentry;};
struct GETATTR3resok {fattr3 obj_attributes;};
struct au_inaddr_tok {struct in_addr ia;};
struct LOOKUP3args {diropargs3 what;};
struct REMOVE3args {diropargs3 object;};
struct RENAME3args {diropargs3 from;diropargs3 to;};
struct in6_pktinfo {struct in6_addr ipi6_addr;unsigned int ipi6_ifindex;};
struct st_errstats {struct kstat_named st_softerrs;struct kstat_named st_harderrs;struct kstat_named st_transerrs;struct kstat_named st_vid;struct kstat_named st_pid;struct kstat_named st_revision;struct kstat_named st_serial;};
struct RMDIR3args {diropargs3 object;};
struct ipv6_mreq {struct in6_addr ipv6mr_multiaddr;unsigned int ipv6mr_interface;};
struct ipoption {struct in_addr ipopt_dst;char ipopt_list[40];};
struct dinode {union dinode___7C68577AF0075A7E4A65BFF776A0DE33 di_un;};
union createhow3___8A6FCB6AE8ABF4547E3A1B416D5A1A41 {sattr3 obj_attributes;createverf3 verf;};
union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC {struct accepted_reply RP_ar;struct rejected_reply RP_dr;};
struct nfslog_READDIRPLUS3res {nfsstat3 status;union nfslog_READDIRPLUS3res___786DCC1D2A488653AF02F6DB35124A23 nfslog_READDIRPLUS3res_u;};
struct nfslog_CREATE3args {nfslog_diropargs3 where;nfslog_createhow3 how;};
struct nfslog_SYMLINK3res {nfsstat3 status;union nfslog_SYMLINK3res___058BB506E3BAF24ED448FA1BD4833203 nfslog_SYMLINK3res_u;};
struct ufsd_msg_vardata_t {ufsd_event_t umv_ev;union ufsd_msg_vardata_t___9AED1730912B846ACE4EBF2EED6B8961 ufsd_msg_vardata_t_u;};
struct nfslog_MKDIR3res {nfsstat3 status;union nfslog_MKDIR3res___058BB506E3BAF24ED448FA1BD4833203 nfslog_MKDIR3res_u;};
struct nfslog_MKNOD3res {nfsstat3 status;union nfslog_MKNOD3res___058BB506E3BAF24ED448FA1BD4833203 nfslog_MKNOD3res_u;};
struct nfslog_WRITE3res {nfsstat3 status;union nfslog_WRITE3res___DDA83BA4CE32216F1031293F1AEA52A0 nfslog_WRITE3res_u;};
struct nfslog_READ3res {nfsstat3 status;union nfslog_READ3res___7A0E25342C0EB6C2A4CC1C4D51748A56 nfslog_READ3res_u;};
struct nfslog_diropres {nfsstat dr_status;union nfslog_diropres___6E9AE3E0D1C67C0F8C2DC1BF0AAAE32B nfslog_diropres_u;};
struct stc_lineparam_t {struct stc_defaults_t sd;uchar_t pcon;int ack_maxloops;uchar_t cor1;uchar_t cor2;uchar_t cor3;uchar_t schr1;uchar_t schr2;uchar_t schr3;uchar_t schr4;uchar_t mcor1;uchar_t mcor2;uchar_t rbprh;uchar_t rbprl;uchar_t tbprh;uchar_t tbprl;uchar_t rtpr;};
struct rpc_createerr {enum clnt_stat cf_stat;struct rpc_err cf_error;};
struct dbri_dts_cmd {union dbri_dts_opcode opcode;union dbri_dts_tsd input_tsd;union dbri_dts_tsd output_tsd;};
struct post_op_attr {bool_t attributes;fattr3 attr;};
struct symlinkdata3 {sattr3 symlink_attributes;nfspath3 symlink_data;};
struct GETATTR2res {enum nfsstat status;union GETATTR2res___0E71511EAA16D209A4D602249505B5F8 res_u;};
struct devicedata3 {sattr3 dev_attributes;specdata3 spec;};
struct nfsdiropres {nfsstat dr_status;union nfsdiropres___C6DD0A424400D28F5D0F3991578B73A6 dr_u;};
struct pre_op_attr {bool_t attributes;wcc_attr attr;};
struct ACCESS2res {enum nfsstat status;union ACCESS2res___7E87908D10127D23949DE19A8553FC52 res_u;};
struct GETACL2res {enum nfsstat status;union GETACL2res___B07A5DE58C687D3B3D1EE7EDFDAFE7CD res_u;};
struct MKDIR3args {diropargs3 where;sattr3 attributes;};
struct SETACL2res {enum nfsstat status;union SETACL2res___D746CAD3772CAAAF9A580AF137F34722 res_u;};
struct createhow3 {createmode3 mode;union createhow3___8A6FCB6AE8ABF4547E3A1B416D5A1A41 createhow3_u;};
struct isdn_param {isdn_param_tag_t tag;union isdn_param___CC0818EEDB9939D07B3B37CF76D5BC51 value;};
struct reply_body {enum reply_stat rp_stat;union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC ru;};
struct vioc_event {enum vie_event vie_type;union vioc_event___65B959ED4465248677AB4A78D6E13327 vie_un;};
struct au_ip_tok {uchar_t version;struct ip ip;};
struct tcpiphdr {struct ipovly ti_i;struct tcphdr ti_t;};
struct udpiphdr {struct ipovly ui_i;struct udphdr ui_u;};
struct wcc_data {pre_op_attr before;post_op_attr after;};
union icmp___91F6810D45DA7C23E53CAA18FF826292 {struct icmp___91F6810D45DA7C23E53CAA18FF826292__id_ts id_ts;struct icmp___91F6810D45DA7C23E53CAA18FF826292__id_ip id_ip;ulong_t id_mask;char id_data[1];};
struct SYMLINK3resok {post_op_fh3 obj;post_op_attr obj_attributes;wcc_data dir_wcc;};
struct CREATE3resok {post_op_fh3 obj;post_op_attr obj_attributes;wcc_data dir_wcc;};
struct FSSTAT3resok {post_op_attr obj_attributes;size3 tbytes;size3 fbytes;size3 abytes;size3 tfiles;size3 ffiles;size3 afiles;uint32 invarsec;};
struct SETATTR3args {nfs_fh3 object;sattr3 new_attributes;sattrguard3 guard;};
struct MKDIR3resok {post_op_fh3 obj;post_op_attr obj_attributes;wcc_data dir_wcc;};
struct MKNOD3resok {post_op_fh3 obj;post_op_attr obj_attributes;wcc_data dir_wcc;};
struct hstable {struct vfs *hs_vfsp;int hs_tablesize;krwlock_t hshash_lock;kmutex_t hsfree_lock;struct hsnode *hshash[32];struct hsnode *hsfree_f;struct hsnode *hsfree_b;int hs_nohsnode;struct hsnode hs_node[1];};
struct icmph_s {uint8_t icmph_type;uint8_t icmph_code;uint16_t icmph_checksum;union icmph_s___2B4909FAE3ED1823BFCC7374B8840F2A icmph_u;};
struct cstate {struct cstate *cs_next;ushort_t cs_hlen;uchar_t cs_id;uchar_t cs_filler;union cstate___678131C900E44C8ADDA4E179752E682F slcs_u;};
struct READDIRPLUS3resok {post_op_attr dir_attributes;cookieverf3 cookieverf;dirlistplus3 reply;uint_t size;uint_t count;uint_t maxcount;post_op_attr *attributes;post_op_fh3 *handles;};
struct nfs_commit_req {void (*commit)();page_t *plist;offset3 offset;count3 count;};
struct FSINFO3resok {post_op_attr obj_attributes;uint32 rtmax;uint32 rtpref;uint32 rtmult;uint32 wtmax;uint32 wtpref;uint32 wtmult;uint32 dtpref;size3 maxfilesize;nfstime3 time_delta;uint32 properties;};
struct WRITE3resok {wcc_data file_wcc;count3 count;stable_how committed;writeverf3 verf;};
struct __res_state {int retrans;int retry;uint_t options;int nscount;struct sockaddr_in nsaddr_list[3];ushort_t id;char *dnsrch[7];char defdname[256];uint_t pfcode;unsigned int ndots : 4;unsigned int nsort : 4;char unused[3];struct __res_state___A6CBED0F63521320A773A1D0A80BE43A sort_list[10];char pad[72];};
struct ufsd_msg_t {time_t um_time;u_int um_from;struct ufsd_msg_t___5013129CDB1FAC507F9E476F5694139E um_spare;ufsd_msg_vardata_t um_var;};
struct vjcompress {struct cstate *last_cs;uchar_t last_recv;uchar_t last_xmit;ushort_t flags;uint_t sls_packets;uint_t sls_compressed;uint_t sls_searches;uint_t sls_misses;uint_t sls_uncompressedin;uint_t sls_compressedin;uint_t sls_errorin;uint_t sls_tossed;struct cstate tstate[16];struct cstate rstate[16];uint_t maxslotin;uint_t compslotin;uint_t maxslotout;uint_t compslotout;};
struct tcp_debug {n_time td_time;short td_act;short td_ostate;caddr_t td_tcb;struct tcpiphdr td_ti;short td_req;struct tcpcb td_cb;};
struct hsfs {struct hsfs *hsfs_next;int hsfs_magic;struct vfs *hsfs_vfs;struct vnode *hsfs_rootvp;struct vnode *hsfs_devvp;enum hs_vol_type hsfs_vol_type;struct hs_volume hsfs_vol;struct ptable *hsfs_ptbl;int hsfs_ptbl_size;struct ptable_idx *hsfs_ptbl_idx;int hsfs_ptbl_idx_size;struct hstable *hsfs_hstbl;ulong_t ext_impl_bits;ushort_t sua_offset;ushort_t hsfs_namemax;ulong_t hsfs_err_flags;char *hsfs_fsmnt;ulong_t hsfs_flags;};
struct icmp {uchar_t icmp_type;uchar_t icmp_code;ushort_t icmp_cksum;union icmp___6518A9D1B702C5C28B83CB067318DBE9 icmp_hun;union icmp___91F6810D45DA7C23E53CAA18FF826292 icmp_dun;};
struct READDIR3resok {post_op_attr dir_attributes;cookieverf3 cookieverf;dirlist3 reply;uint_t size;uint_t count;cookie3 cookie;};
struct lm_nlm_disp {void (*proc)(void *gen_args, void *gen_res, struct lm_nlm_disp *disp, struct lm_sysid *ls, uint_t xid);enum lm_disp_reply do_disp_reply;enum lm_disp_reply do_block_reply;enum lm_disp_how callback_reply;unsigned char callback_proc;xdrproc_t xdrargs;xdrproc_t xdrres;};
struct READ3resok {post_op_attr file_attributes;count3 count;bool_t eof;struct READ3resok___AAF002B4BE02F6C1DC09698F914F418A data;uint_t size;};
struct entryplus3 {fileid3 fileid;filename3 name;cookie3 cookie;post_op_attr name_attributes;post_op_fh3 name_handle;struct entryplus3 *nextentry;};
struct u_spcl__s_spcl {int32_t c_type;time32_t c_date;time32_t c_ddate;int32_t c_volume;daddr32_t c_tapea;ino32_t c_inumber;int32_t c_magic;int32_t c_checksum;struct dinode c_dinode;int32_t c_count;union u_data c_data;char c_label[16];union u_shadow c_shadow;int32_t c_flags;int32_t c_firstrec;int32_t c_spare[32];};
struct stc_line_t {unsigned int state;unsigned int flags;tty_common_t stc_ttycommon;unsigned int unit_no;unsigned int line_no;dev_t *dev;timeout_id_t stc_timeout_id;timeout_id_t stc_draintimeout_id;timeout_id_t ppc_acktimeout_id;timeout_id_t ppc_out_id;struct stc_unit_t *stc;kcondvar_t *cvp;kmutex_t *line_mutex;uchar_t *dtr;uchar_t dtr_shadow;uchar_t stc_flowc;int stc_txbufsize;uchar_t stc_txbuf[16];int stc_txcount;int stc_silosize;int stc_sscnt;uchar_t *stc_source;uchar_t *stc_sink;uchar_t stc_ssilo[1024];int stc_qfcnt;bufcall_id_t stc_wbufcid;int drain_size;int stc_hiwater;int stc_lowwater;int rx_fifo_thld;struct stc_lineparam_t default_param;int strobe_w;int data_setup;int ack_timeout;int ack_loops;int ack_maxloops;uchar_t pcon_s;uchar_t *stc_txbufp;int pstate;int error_timeout;int error_cnt;int busy_timeout;int busy_cnt;struct stc_stats_t stc_stats;};
union nfslog_CREATE3res___F55170137A5E702654FDB5D890E6C4CA {nfslog_CREATE3resok ok;};
union GETATTR3res___6654F6005606AAD973D4218EB1EDC6A8 {GETATTR3resok ok;};
struct READDIRPLUS3resfail {post_op_attr dir_attributes;};
struct PATHCONF3resfail {post_op_attr obj_attributes;};
struct READLINK3resfail {post_op_attr symlink_attributes;};
struct READDIR3resfail {post_op_attr dir_attributes;};
struct SETATTR3resfail {wcc_data obj_wcc;};
struct SYMLINK3resfail {wcc_data dir_wcc;};
struct ACCESS3resfail {post_op_attr obj_attributes;};
struct COMMIT3resfail {wcc_data file_wcc;};
struct CREATE3resfail {wcc_data dir_wcc;};
struct FSINFO3resfail {post_op_attr obj_attributes;};
struct FSSTAT3resfail {post_op_attr obj_attributes;};
struct GETACL3resfail {post_op_attr attr;};
struct LOOKUP3resfail {post_op_attr dir_attributes;};
struct REMOVE3resfail {wcc_data dir_wcc;};
struct RENAME3resfail {wcc_data fromdir_wcc;wcc_data todir_wcc;};
struct SETACL3resfail {post_op_attr attr;};
struct MKDIR3resfail {wcc_data dir_wcc;};
struct MKNOD3resfail {wcc_data dir_wcc;};
struct RMDIR3resfail {wcc_data dir_wcc;};
struct SETATTR3resok {wcc_data obj_wcc;};
struct WRITE3resfail {wcc_data file_wcc;};
struct READ3resfail {post_op_attr file_attributes;};
struct REMOVE3resok {wcc_data dir_wcc;};
struct RENAME3resok {wcc_data fromdir_wcc;wcc_data todir_wcc;};
struct SETACL3resok {post_op_attr attr;};
struct RMDIR3resok {wcc_data dir_wcc;};
union u_spcl {char dummy[1024];struct u_spcl__s_spcl s_spcl;};
union READDIRPLUS3res___3D1E2784399C2722E4AD5035C7D7D261 {READDIRPLUS3resok ok;READDIRPLUS3resfail fail;};
union READDIR3res___0CEAD80A95B6A8F5BBE6BAE222F64D18 {READDIR3resok ok;READDIR3resfail fail;};
union SETATTR3res___3F242C945E6791122D97917754CE34B9 {SETATTR3resok ok;SETATTR3resfail fail;};
union SYMLINK3res___B5265A55B6FE6D7C72613D20EFCEC739 {SYMLINK3resok ok;SYMLINK3resfail fail;};
union CREATE3res___1344BCDC3351BD45A414A34C7BEA0F35 {CREATE3resok ok;CREATE3resfail fail;};
union FSINFO3res___6A2CEE5B34ED3E6D5EAD14FB19C2D2E6 {FSINFO3resok ok;FSINFO3resfail fail;};
union FSSTAT3res___DAFC2B488956910F0828456CE719C50E {FSSTAT3resok ok;FSSTAT3resfail fail;};
union REMOVE3res___00486109FBB382E14288CE702A95D1DD {REMOVE3resok ok;REMOVE3resfail fail;};
union RENAME3res___0FECC924FDA7A4B020BD4BBCBF891F20 {RENAME3resok ok;RENAME3resfail fail;};
union SETACL3res___4771722AF7BF6EE61E540B50092D29CD {SETACL3resok ok;SETACL3resfail fail;};
union mknoddata3___FC3C3F7D5DC5FC9EABD2DCD2E16DDF69 {devicedata3 device;sattr3 pipe_attributes;};
union MKDIR3res___7AAE3EB51BE7D5127C92F993C6C93453 {MKDIR3resok ok;MKDIR3resfail fail;};
union MKNOD3res___74BE56E58793F3A8CB87CC162DE62117 {MKNOD3resok ok;MKNOD3resfail fail;};
union RMDIR3res___90C320C3EFE33BF38799E3062F8F7E1F {RMDIR3resok ok;RMDIR3resfail fail;};
union WRITE3res___EFCBE02989981C7512DF7D166CC51BEC {WRITE3resok ok;WRITE3resfail fail;};
union READ3res___EBFFBF37F715F35896BDA07C9A2D80F4 {READ3resok ok;READ3resfail fail;};
union rpc_msg___7D774571B4FAB0E4BBD540829030FA52 {struct call_body RM_cmb;struct reply_body RM_rmb;};
struct nfslog_CREATE3res {nfsstat3 status;union nfslog_CREATE3res___F55170137A5E702654FDB5D890E6C4CA nfslog_CREATE3res_u;};
struct READDIRPLUS3res {nfsstat3 status;union READDIRPLUS3res___3D1E2784399C2722E4AD5035C7D7D261 res_u;};
struct PATHCONF3resok {post_op_attr obj_attributes;nfs3_pathconf_info info;};
struct READLINK3resok {post_op_attr symlink_attributes;nfspath3 data;};
struct ACCESS3resok {post_op_attr obj_attributes;uint32 access;};
struct COMMIT3resok {wcc_data file_wcc;writeverf3 verf;};
struct GETACL3resok {post_op_attr attr;vsecattr_t acl;};
struct LINK3resfail {post_op_attr file_attributes;wcc_data linkdir_wcc;};
struct LOOKUP3resok {nfs_fh3 object;post_op_attr obj_attributes;post_op_attr dir_attributes;};
struct SYMLINK3args {diropargs3 where;symlinkdata3 symlink;};
struct CREATE3args {diropargs3 where;createhow3 how;};
struct GETATTR3res {nfsstat3 status;union GETATTR3res___6654F6005606AAD973D4218EB1EDC6A8 res_u;};
struct READDIR3res {nfsstat3 status;union READDIR3res___0CEAD80A95B6A8F5BBE6BAE222F64D18 res_u;};
struct SETATTR3res {nfsstat3 status;union SETATTR3res___3F242C945E6791122D97917754CE34B9 res_u;};
struct SYMLINK3res {nfsstat3 status;union SYMLINK3res___B5265A55B6FE6D7C72613D20EFCEC739 res_u;};
struct CREATE3res {nfsstat3 status;union CREATE3res___1344BCDC3351BD45A414A34C7BEA0F35 res_u;};
struct FSINFO3res {nfsstat3 status;union FSINFO3res___6A2CEE5B34ED3E6D5EAD14FB19C2D2E6 res_u;};
struct FSSTAT3res {nfsstat3 status;union FSSTAT3res___DAFC2B488956910F0828456CE719C50E res_u;};
struct LINK3resok {post_op_attr file_attributes;wcc_data linkdir_wcc;};
struct REMOVE3res {nfsstat3 status;union REMOVE3res___00486109FBB382E14288CE702A95D1DD res_u;};
struct RENAME3res {nfsstat3 status;union RENAME3res___0FECC924FDA7A4B020BD4BBCBF891F20 res_u;};
struct SETACL3res {nfsstat3 status;union SETACL3res___4771722AF7BF6EE61E540B50092D29CD res_u;};
struct mknoddata3 {ftype3 type;union mknoddata3___FC3C3F7D5DC5FC9EABD2DCD2E16DDF69 mknoddata3_u;};
struct MKDIR3res {nfsstat3 status;union MKDIR3res___7AAE3EB51BE7D5127C92F993C6C93453 res_u;};
struct MKNOD3res {nfsstat3 status;union MKNOD3res___74BE56E58793F3A8CB87CC162DE62117 res_u;};
struct RMDIR3res {nfsstat3 status;union RMDIR3res___90C320C3EFE33BF38799E3062F8F7E1F res_u;};
struct WRITE3res {nfsstat3 status;union WRITE3res___EFCBE02989981C7512DF7D166CC51BEC res_u;};
struct READ3res {nfsstat3 status;union READ3res___EBFFBF37F715F35896BDA07C9A2D80F4 res_u;};
struct rpc_msg {uint32_t rm_xid;enum msg_type rm_direction;union rpc_msg___7D774571B4FAB0E4BBD540829030FA52 ru;};
union nfs_async_reqs___285A964DA793598A2BC2D03419F06D64 {struct nfs_async_read_req a_read_args;struct nfs_pageio_req a_pageio_args;struct nfs_readdir_req a_readdir_args;struct nfs_commit_req a_commit_args;};
struct stc_unit_t {kmutex_t *stc_mutex;ddi_iblock_cookie_t stc_blk_cookie;ddi_idevice_cookie_t stc_dev_cookie;kmutex_t *ppc_mutex;ddi_iblock_cookie_t ppc_blk_cookie;ddi_idevice_cookie_t ppc_dev_cookie;ddi_iblock_cookie_t soft_blk_cookie;ddi_idevice_cookie_t soft_dev_cookie;ddi_softintr_t softint_id;unsigned int flags;struct stc_line_t line[8];struct stc_line_t ppc_line;struct stc_line_t control_line;caddr_t prom;struct stcregs_t *regs;struct stciack_t *iack;struct ppcregs_t *ppc;unsigned short *stc_baud;dev_info_t *dip;};
union PATHCONF3res___13536796C3FFAE43AF7BA7B43E22E21C {PATHCONF3resok ok;PATHCONF3resfail fail;};
union READLINK3res___0806C2E1EA521BA65FFDD4738E23BA80 {READLINK3resok ok;READLINK3resfail fail;};
union ACCESS3res___BCC91F14EA47E4565CA39B38A6B5ED84 {ACCESS3resok ok;ACCESS3resfail fail;};
union COMMIT3res___7375445B622BC480C38364347647FC7B {COMMIT3resok ok;COMMIT3resfail fail;};
union GETACL3res___3F2F8CF2A694F3B296614A4B9D8F54E4 {GETACL3resok ok;GETACL3resfail fail;};
union LOOKUP3res___88DF73F2EA33FE7EB0040A420E6940DA {LOOKUP3resok ok;LOOKUP3resfail fail;};
union LINK3res___127574E1D56DCEC597578398563C3456 {LINK3resok ok;LINK3resfail fail;};
struct PATHCONF3res {nfsstat3 status;union PATHCONF3res___13536796C3FFAE43AF7BA7B43E22E21C res_u;};
struct READLINK3res {nfsstat3 status;union READLINK3res___0806C2E1EA521BA65FFDD4738E23BA80 res_u;};
struct ACCESS3res {nfsstat3 status;union ACCESS3res___BCC91F14EA47E4565CA39B38A6B5ED84 res_u;};
struct COMMIT3res {nfsstat3 status;union COMMIT3res___7375445B622BC480C38364347647FC7B res_u;};
struct GETACL3res {nfsstat3 status;union GETACL3res___3F2F8CF2A694F3B296614A4B9D8F54E4 res_u;};
struct LOOKUP3res {nfsstat3 status;union LOOKUP3res___88DF73F2EA33FE7EB0040A420E6940DA res_u;};
struct MKNOD3args {diropargs3 where;mknoddata3 what;};
struct LINK3res {nfsstat3 status;union LINK3res___127574E1D56DCEC597578398563C3456 res_u;};
struct nfs_async_reqs {struct nfs_async_reqs *a_next;kthread_t *a_queuer;struct vnode *a_vp;struct cred *a_cred;enum iotype a_io;union nfs_async_reqs___285A964DA793598A2BC2D03419F06D64 a_args;};



/// #endif ===true


