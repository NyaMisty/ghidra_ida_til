
#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\hppa\hpux.til.h"
/// #define HAVETYPE_bool ===DEFINED

/// #define GHIDRA ===DEFINED

/// #ifndef INCLUDE_GUARD_hpux_til ===true

/// #define INCLUDE_GUARD_hpux_til ===DEFINED


#line 1: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\5_gengdt\hppa\.\..\..\..\..\IDAPlugins\idatil2c\common.h"


/// #define __int64  long long ===DEFINED
/// #define __int32  int ===DEFINED
/// #define __int16  short ===DEFINED
/// #define __int8  char ===DEFINED

/// #ifdef GHIDRA ===true

typedef struct {
    long long u1;
    long long u2;
} __int128;
typedef struct {
    unsigned long long u1;
    unsigned long long u2;
} __uint128;
/// #endif ===true


typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;

typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;

/// #define _BYTE  uint8_t ===DEFINED
/// #define _WORD  uint16_t ===DEFINED
/// #define _QWORD  uint64_t ===DEFINED
/// #define _DWORD  uint32_t ===DEFINED



/// #ifndef HAVETYPE_bool ===false
//// 
////#define bool  char
/// #endif ===false


/// #ifndef HAVETYPE___u32 ===true

typedef uint32_t __u32;
/// #endif ===true

/// #ifndef HAVETYPE___u16 ===true

typedef uint16_t __u16;
/// #endif ===true

/// #ifndef HAVETYPE___u64 ===true

typedef uint64_t __u64;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_uid32_t ===true

typedef unsigned int __kernel_uid32_t;
/// #endif ===true

/// #ifndef HAVETYPE___kernel_mqd_t ===true

typedef int __kernel_mqd_t;
/// #endif ===true



/// #define __fastcall ===DEFINED

/// #define __unaligned ===DEFINED

/// #define __stdcall ===DEFINED

/// #define __cppobj ===DEFINED

/// #define __declspec([x])   ===DEFINED
/// #define __hidden ===DEFINED

/// #define __cdecl ===DEFINED

/// #define __noreturn ===DEFINED

/// #define __pascal ===DEFINED

/// #define __near ===DEFINED


/// #define const ===DEFINED

/// #define this  _this ===DEFINED
/// #define near ===DEFINED


typedef char _Mbstatet;

typedef void **va_list;





























 
#line 5: "D:\Workspaces\UtilWorkspace\Reverse\GhidraTools\ghidra_ida_til\4_til_til2c_headers\hppa\hpux.til.h"




struct nss_netdirbyaddr_in______402FC20F2F8747D95E943225C2B80849___88B30E819A32A7C5A2483FC60DF633B4;
struct nss_netdirbyaddr_in______402FC20F2F8747D95E943225C2B80849___DD9D9706BCA1D99FBF05A97517CD2BD0;
struct nss_netdirbyname_in______58B5E3A38D045874A5B40B03A1AE9E77___8B20E58A3D17A0A03EA6A023703226E6;
struct nss_netdirbyname_in______58B5E3A38D045874A5B40B03A1AE9E77___B1ACEB72480E629E65426FBD00A027EA;
struct nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547___E109A5D6027DEB813545D8BF49E916D8;
struct nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2___E109A5D6027DEB813545D8BF49E916D8;
union nss_netdirbyaddr_in___CE97B67DEE6148096F4FDE472C356D76___402FC20F2F8747D95E943225C2B80849;
union nss_netdirbyname_in___B0B77147B63B1091E6DA80F49542BFD7___58B5E3A38D045874A5B40B03A1AE9E77;
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___13A13C9AC154D3293650D38098572922;
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___21E63C530F687031DFD8E4B8854A680E;
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___288D37544811B10AE4E24B6D57380C02;
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___5549B831AA286DA3F16AE0851EE4EE00;
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___869E1047D9F600BAE047DCAE4A27A49B;
struct __siginfo_________351CB38BF906F3D7FDE4000F5FE338E8___93BC73C2FD9859FBCB9F013BD422D91B;
struct __siginfo_________351CB38BF906F3D7FDE4000F5FE338E8___CAB2F663BD9968F95DBAF91C3E75F559;
struct accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023___BFD7413E14FC21CAB05150D69A0647C0;
struct accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023___C081DE2363A7D6E022ACDA68492DBB3F;
struct cs_status_type___682E0335E9CE8EEE44965718E74190D0___D03C0DDF97FD6619B9EAA1F30E22A6B3;
struct cs_status_type___682E0335E9CE8EEE44965718E74190D0___D05744114636CA3463EA967E1C843D48;
struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___27B715C20D2F6054C21148B7BC75D683;
struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___49AAFE459BE1D762B9EE49F5713033E8;
struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___6811851F0FF4B086C89568DCBC52F637;
struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___A8892D7FDBBE71F5649C934073942EE6;
struct rejected_reply___D36433C375B856769A86CDA2CFADE497___C081DE2363A7D6E022ACDA68492DBB3F;
struct _xEvent_________82F47A5C57D4899F304609D6061CA549___B8AD833485FADDB6F1E0494B45611EC6;
struct _xEvent_________82F47A5C57D4899F304609D6061CA549___FB6660946ED728575FB5339601D7D5BE;
struct _xEvent_________82F47A5C57D4899F304609D6061CA549___FD3E7DCAA1FA6D37E77316D970071F0A;
union __siginfo______37F2AA42ADCA2FF6CA7A04382476AB9F___351CB38BF906F3D7FDE4000F5FE338E8;
struct dma_A_chain___9BFEA53F2269C7B565EDDA23D08FFFF2___9FFBE6516481B01D482839DFCF166653;
union _xEvent______F60DFC41729ECCA7C121C44CBFE60E95___82F47A5C57D4899F304609D6061CA549;
union icommon______93873D87F0901CE97F7811FAD71196E7___F0CF6F5BDB5C5FE94D6E2190A27003CF;
struct mount_data___3A2698B3DAC17E6F4BDDFCE59E817678___66909CDAA73D8BB361D0873CE34E06F0;
struct mount_data___3A2698B3DAC17E6F4BDDFCE59E817678___E4296C1DCBCDEF46C9FE471C8B3FCDB8;
struct radix_node___CC52EDE493CB4C10BEB5E770D2F4C875___7BFDF6A125AABD0BBEC78233D359225F;
struct radix_node___CC52EDE493CB4C10BEB5E770D2F4C875___E90AF929005CC4DA938BE2E2A9208386;
struct __siginfo___1490A58E020900B0C97A0746962B2B75___37F2AA42ADCA2FF6CA7A04382476AB9F;
struct __siginfo___1490A58E020900B0C97A0746962B2B75___3FF08C5ADC6BC526D5A84F94DC2433A6;
struct __siginfo___1490A58E020900B0C97A0746962B2B75___92A7EE6A1909C09ADD6B4865B3C321AB;
struct __siginfo___1490A58E020900B0C97A0746962B2B75___AABDA256947000BB9B5485581E6F54AA;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___06CC3EE1C785FF4C65A358F81D4770E3;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___0782806FB5FEE125636C30F93EC424E5;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___0F73BC087B0175F837E61BF86166AB84;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___210E680417EC90CA260E4854A6751754;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___316B218C709051C178B3BB07E6B18196;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3284E488B37AEC742A022E833068D497;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3C1A322C1CF5978F8E7C805C02DD70C8;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3F936A3A9A06092B5B70BD26A7DFD789;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___40ECE1105C1C479EC11371480E0EAEEE;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___4D6B1C2E2FE6C1124CAB2311E897D1AB;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___5A60174FC6A07BE0049C674473C6C1C3;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___674F3E4AE65A41A1BBF2ACE37596CB1B;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___99F5A2754EC45011AB028BB1CC2CE3C7;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___9C75AB6DDEADA42926A4005EFC1B4241;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___9E59406F0409BDE74EEED2CE1F683A76;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___B56843D1A807D13D0FEC0C0069626892;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___B652DCB1C62512FA77E4252B8A422175;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___C927E5D571B5CC43049437141E992D5C;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___CB6A6FBD4AABDC204CA09785462A5EAC;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___CF45A70F1381AC3E41639336F8DCFD08;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___D4E6015299E8C3BAFA52E0C7400AB6A6;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___E3E63ACF9DBDF6C56161A285CC120760;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___EDE3B33B7AF26E05A2A60AEE6589519E;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F0E773388BCCF7D4D022A846E01785CC;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F0EDD24BB588AB1974F0CC5CC47343A0;
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F60DFC41729ECCA7C121C44CBFE60E95;
struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___0740FC17DC46FEE1E8586A6E9026ED35;
struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___801C7CA5DE79B723878F032CAF38D5B0;
struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___AF441E7245BEEE4AAB09922872FD6942;
struct icommon___352D7131545A46E37526309B828AFFEE___93873D87F0901CE97F7811FAD71196E7;
struct objdata___B3007D6063AF66DF722E8A0D3E39E00C___C5CA305DAC14A48247D92F909AB77E9C;
struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___9A6B389160A794C8B35BE21A310C2350;
struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___C081DE2363A7D6E022ACDA68492DBB3F;
struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___CDFB08817BACAD3B52BC51E53A98F9E8;
struct dsplog___75873FF22CE910D1FBC726C0B659971B___5B9278AD49AD5E051BD6444728AFC48A;
struct dsplog___75873FF22CE910D1FBC726C0B659971B___E63CD43CEDAE183FD155659843AA0EEC;
struct GPIO___CD29CE3F9A5F74D2438ACA80101F6228___366513553158DE38125C184A44CDE853;
struct user___3B359A40351122B121A37E0734670C57___C57B77E03EE9D788D67ADCD794C5AE6F;
struct user___FFDA854C04C02961A1098ABC4F40B8D9___6D02ACB9AF8EC17C28B705B20C2A6BA3;
struct user___FFDA854C04C02961A1098ABC4F40B8D9___F40776A32F4CBFD4291F884ECF87D76A;
struct ____A46E883B39A63C4EC4A922C85CF23D6B___45B314D309058A4EE65C712D679F5776;
struct ____A46E883B39A63C4EC4A922C85CF23D6B___8A0E21D870C19C6340201A4DE96B0898;
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___00976F6E7C414A8449E5EC494793DABD;
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___41C6ACE15BB05B8ADC571FCC2068F6F8;
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___773984751D4B72F60DA8EA7FE0E4332C;
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___7BC4C9E2DA436E276E1C7B0AFF1E1BB3;
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___F809745BD539DDC0BF3F6B58B72333C1;
struct ____DBFE4481F7E01E99261898FD11F89AAA___1C4AE2D93AE23D77F4B47FB682A792B0;
struct ____DBFE4481F7E01E99261898FD11F89AAA___A0F582093321D483812420D2040EA3FB;
struct ____F4C8BAAF2D6A567135A62292FDA07584___EE0FC0C350DA985F345B12E3A23DD620;
union _03CB082776F9E7204BA8107224DE5806___2D9CBF48A86756B1ADA829A8808AD6C9;
union _06E84F0011827D3FA6D8BE033B4E11AE___6D780EA0E880820FFFF864F1AF607297;
union _0A5A2DC6F5DFEB19A95AB8D5777ED58E___F031A95ACFCBD1098C1A75B7F98C9502;
union _1102A1E8B20588E5B4B19CB5CB1C4961___5806BA520F5C48DBC2069CFC83B2A219;
struct _1168B6D6BD072B799143AF246A5E2670___CDF557A927ED2BFF93B09908D4EFCA76;
union _18E6F3C9731C18C7E69FAD80F00FC2BA___CF3C52492917230ECC0D04E3B0168E17;
union _1AA7F1335C4C6CFF07A82EACE5F12A97___334616D58205B64CBDE7625544988388;
struct _27E544B65E9C83BE0D136117478F1D06___9F80A07CA53E50C0896302A4F5D4F6CE;
union _2ABA9BEBDC7EA73331E3BF8D3E5C1422___502ABD2D56F7B15CE77DF0D562CA3A98;
union _2B25FEECC0AF4D3C6F228158D7F8DAAB___D75DB3281057538F2464105F3776F9CC;
struct _2B2D277CB94E3786AC978CB982FDCC47___0DD87E7D5067AFA6367924F4350962B4;
struct _2B2D277CB94E3786AC978CB982FDCC47___376D00C7E1B7A5ED22C80CA26753DCCE;
struct _2B2D277CB94E3786AC978CB982FDCC47___400BA39E42047056CF99A3263FA31D4C;
struct _2B2D277CB94E3786AC978CB982FDCC47___57292DFCF470BDC3494EA7118CBCC8BD;
struct _2B2D277CB94E3786AC978CB982FDCC47___73418DF873F0AEAE72664EE28475962B;
struct _2B2D277CB94E3786AC978CB982FDCC47___85517BA59E6BA55FB4735AB48AC251E7;
struct _2B2D277CB94E3786AC978CB982FDCC47___9C9DDB14D1D289A980AAF2B4D6C80B7E;
struct _2B2D277CB94E3786AC978CB982FDCC47___EC5C984D1ABB44D79E844BA1925B0F8F;
struct _2B2D277CB94E3786AC978CB982FDCC47___F3FCB5F8AADE779F0358406CD1E720C8;
struct _2B2D277CB94E3786AC978CB982FDCC47___F5F34547B09E0E11024B1056985C8E5F;
union _2DFE59F2EEA4B8B07854A40D678C7B6B___42720C520941BC117A8625B68870A086;
struct _369915EE1C7DFDD007AB874D1EA2C9E1___89204FF0ACC339210648FEBB897D4AF4;
union _39686138479B682CDBA24DAE5E6097FC___B9CAC9CAC2B72C332B1EA1EA6B7D3F24;
struct _465FCB570093E3F643B603A6D3E8A1C4___9C319EEE4375217EAF366142772AFB9D;
union _5546CF314AB66BC0C9A48B86C8E58389___F4C8BAAF2D6A567135A62292FDA07584;
union _5868E735110F708D87BF7192F3350519___886BC61DD18348B4C0FF3FD85A19BC0D;
union _5BB4136DB11763AB16A801C866FA2FFA___10EE4F2AA25F27C7DA0CE69BF1A43F86;
union _5BB4136DB11763AB16A801C866FA2FFA___4677EF6C4309B7A99408668B47D48789;
union _5BB4136DB11763AB16A801C866FA2FFA___F0E530FF1DC6AE3DC880294D4D1C5140;
union _5C140DC956AB8D8D3A2E81F1CC511829___B322D948E3ED25D84ECF3A20AB2BF161;
union _78DF8810A4494AE41997310F214AE739___4375D5A6E5CF2947662E7101211EFF8A;
union _7CE23751FA90F89F4E8DC4D527FC30AB___4677EF6C4309B7A99408668B47D48789;
union _7CE23751FA90F89F4E8DC4D527FC30AB___F0E530FF1DC6AE3DC880294D4D1C5140;
union _83CB33CAC2707097E650C7C1ACF13AE9___39B7D594E1E86DA02F33894B14792296;
union _85014B45290BE0AD558ABC6FDBC2A83C___F02C4E2EEC466ABBB014B1D19840A86D;
union _87DD1086F3DEF3641D7A72FDF168671B___976C4D09B735C238C10F32DEA4619B6C;
union _894170B0EF0892045A226947D0AC1D57___A18BDC6CF65CB354BF02B415939C20C7;
union _89EFAFA36DC2CA0A6742FD5F4BE18D8B___4943DBA6EC5888BF08830C6DAF61C6ED;
union _8E3F17DF06268256B33C950219C36638___933121F4FA1889599F702E16603DBB9F;
struct _99D5443F2C6554F8B5A9C5DC3E9406B8___6F851B7FD9227034FE5522CD2C548D71;
union _9E389EF8DB18C75445DC45CE7C2FFB9B___2798575F521600C1E26DD161E22996D8;
union _A3DAFC5B3B146A9587C3AC2DA81B7610___00C43480F04328215F4E5F36075FEB9C;
union _A730944FA410AA8A66044A1D444ACA29___BA8CFCC0194ACA3351216723ACBFD289;
struct _A888F4CBB68333EFDEC90D8B2463445D___F4941BA1D373F3B84FD701E76D927EC4;
union _A9F0CF7AEEAE18E8E3DE5B9A9FBAEC8A___E26DABB5958D65260C087DD1F50298F6;
union _B9A90B4DCE92DDAD69847E7BE964BAAE___DBFE4481F7E01E99261898FD11F89AAA;
union _BBE251C902F5B1253853EC586FC56F1D___C64D297F1DF5A22C084AC26BD4E7327B;
union _BE58583FCD7344D2421A54A7E98FFEA4___A46E883B39A63C4EC4A922C85CF23D6B;
struct _C4DC01CDDDF5A53B120EAA56060806A9___864F4118F25B9F87A90D9A329FD28BAF;
struct _C4DC01CDDDF5A53B120EAA56060806A9___E2AA81D64E46956BF76D69C9998515AC;
struct _C4DC01CDDDF5A53B120EAA56060806A9___EAF5EEBD71EE8006EF9C111F1CEF53E0;
struct _C4DC01CDDDF5A53B120EAA56060806A9___EBB8E7C0FA976B86CC5F6009BBD5451F;
struct _CE16222007FB0690EE3C9A36EEE011B3___0A101F8255B2594E50F8800F5A6D170D;
struct _D6F3C0EC0794CF7A820CAC9334CFC732___634CF919C5FB93A8137AC8DCFB324513;
struct _D6F3C0EC0794CF7A820CAC9334CFC732___F308977B809EAB96C4993BAEDE5FE847;
union _DD029A274B36A4E7FC38BFCAA6413DF4___DBC3C6E7BEE5206143AD9534499882BA;
struct _E74415E298CED5C737EBED6687E120B3___FD81188420716845991C1281658F5667;
union _EACB0B005B8FE7D9793BF30DB07B2838___60A8B0D42D5860F5822DDCFD2409BF0D;
union _EF1C5D99769BCE30319CAF8488AFDF20___199E9548C3C848AC2EFDDFCE03257421;
union _F0735D304A48E71B4E554EB40B66D311___B850ACC67C3D860999BBD062D5651151;
union _FA574A2BD4AEE35634BB9215CFACAEE0___B761B527D4EBA4CE9E382F1E32DFE1DE;
union _FB09744F3EA0A83ECD6BAFF51404F8F8___AD122AD315CF8E1C6CB6B6C3CF8662E2;
union _FDA21FF59698B5CB8B37673BE0D84FBD___D3782B7C0B6FCEFFEB5876E878B431ED;
union _FDDC11B99A740F6C560F43496CC4347E___6F0ABD87CABB855EB3CAE2F10CF94E08;
union _XIMStatusDrawCallbackStruct___D9A2F521BD917AA4B9408853DE8DEFA7;
union _XIMStringConversionText___DE48A4CD3A06187C4ACE99002CF90FB4;
struct icommon_________F0CF6F5BDB5C5FE94D6E2190A27003CF__ic_fifo;
union nispasswd_authresult___B078DBBAB3D407E214C0776301111B02;
union nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547;
union nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2;
union cascade_extend_desc___1F3199D8593E8E8D5214453974E41A85;
union cascade_extend_desc___3CE5E511DB73647918372162E9AC1B10;
union cascade_extend_desc___6B6D73BDC397005463F1A37C7D8B56B0;
union nispasswd_updresult___493D7F93814B4BE288B5F7ADF9E01279;
union nss_netdirbyaddr_in___CE97B67DEE6148096F4FDE472C356D76;
union nss_netdirbyname_in___B0B77147B63B1091E6DA80F49542BFD7;
union pst_stable_PA_RISC___811A57C25F847625213D630ECAF0A1B4;
struct r_rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D;
struct ____OldXSizeHints___CDF557A927ED2BFF93B09908D4EFCA76;
union mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A;
union mode_6_buff_no_bd___E6CD75BFDABAEAC9BFB2A973592BCE03;
union pfn_to_virt_entry___E1841ADC36515B8A77C0FB12DDA66068;
struct r_rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB;
union _sym_value_entry_type___sym_value_entry_value_union;
union ki_region_fields___A042BAEF98ABBE8604F9A3AE2EA65FF1;
union raw_audio_config___4B1DA410B3C012109C6DA8766FB16CE8;
struct rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D;
struct rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB;
struct _75F7E626134BF34BF20657FC27D19BCE___OldXSizeHints;
union accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023;
struct arg_descriptor___C93BFC27091A7443C74560EEB4626815;
struct aud_tok_strarr___88F822424AE28B2529C61A3800A9D8A2;
union cs_status_type___682E0335E9CE8EEE44965718E74190D0;
union dld_hook_param___5E48CF7DD17373C69C135A325D333391;
union dmem_lpmc_type___60B189A3D5F0BAB7BC0C1ACCC7AB7BD2;
struct icmp___13995140954385B7F735AD5DF5EAA771__ih_idseq;
struct mbuf___C6A95FC5135865A81007461C3A130A6A__mcluster;
union rejected_reply___D36433C375B856769A86CDA2CFADE497;
union self_audit_rec___E31DA5088C153CF27D2579D385278CCE;
union crt_diag_args___336BFC932CC464554F53EA629C0605BE;
union describe_type___0061AB6C73F294D5BF92924264208685;
union describe_type___1060D215955A02307301AB469C3C2B49;
union describe_type___F908C3B3D3727C8D53F435F55E8D13E8;
struct directory_obj___1F9DB6EC5B4D38C4C9C3429D1A4D637D;
struct directory_obj___C1C9E10248BAA10524C7D0EEA27D2609;
struct icmp___13995140954385B7F735AD5DF5EAA771__ih_pmtu;
union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65;
struct p_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D;
union __save_state___6400AEC7CA6EA3805CB5F513CAC8376A;
union __save_state___ADF62F0D2F86BC133A18056C2B731A2B;
union authdes_verf___D072B0FF48589EAC93A5A80C9BF6CD34;
union dma_A_buflet___7D706FA385198EE6A426E4F07D145E83;
union export_entry___1D13F0CFF919C64F9EE8456357D92C7A;
union fb_dynam_rel___7A5240DA174AE33C5B0D26713AD4FB53;
union key_netstres___2176196DCBB8522A9A1E300DB0535BE5;
union klm_testrply___40F9D261D31BF2147C1606393BAB8476;
struct mountres3_ok___F1D97EB055E5AF8E573F495D2D3F20C5;
union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE;
struct p_rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9;
union pst_swapinfo___3012E3C472EE422A626F70F0C4A32233;
union __iconv_rec___915B2C925088933724D30EF59E8F3BAA;
struct __res_state___B3BDC6EDFE034C45356CAA64B4B51D1E;
union cryptkeyres___EF36972044157FC290EE2FE4EF835697;
union dma_A_chain___9BFEA53F2269C7B565EDDA23D08FFFF2;
struct icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B__id_ip;
struct icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B__id_ts;
union mode_6_buff___4D7D3BCFC575904160AC3D2F3769897C;
struct nis_taglist___D5235F6F3B62BCE7910AF756FE53E6D0;
struct npd_request___04A93ECC78428ACBA0FDC65FE7C8FE57;
struct npd_request___C3CD0BD37319ED44942FA197CF7B5408;
struct rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D;
union ypbind_resp___6388FF0E9D8E3D6204BCCA80D0E2FE14;
struct cback_data___8577E6F7A3DA394015609B473F63AD7B;
union getcredres___C5134A0BDA290BA80D31944F899AB902;
struct ib_request___284138CD61DEACF1E3B0F8ADC9D2B817;
struct ib_request___2D577313DCD2E74CD5A0055993933E3C;
struct ib_request___BC4F227684F3C8C9122828D0FF4C6B30;
struct log_result___946B3E427CBAEF2C8E64E80E43621ACD;
union mount_data___3A2698B3DAC17E6F4BDDFCE59E817678;
struct nis_result___4B6B45C3F1C3815D68D653B8D499AE33;
struct nis_server___DA92845B88BF4FFBAAA2281E50DC5AF5;
struct ns_request___C16B7AFEC0429C3BD747A37F4D827FFD;
union pst_stable___70B85E80D6077E82B0FB95AE4C9AAAEC;
union radix_node___CC52EDE493CB4C10BEB5E770D2F4C875;
union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC;
struct rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9;
union sigcontext___DCBB5EB5722128CC8D5F2C319DF15B39;
union ypresponse___941A5461F0E0B639BD3DE282E3990A90;
union __siginfo___1490A58E020900B0C97A0746962B2B75;
union _xkbEvent___1A318C185F777B9ECB86573CC964DEF2;
struct db_result___9149203512B34436CC9F59DE53ABE05A;
struct des_block___DD2C0B234097C82BA23DADAC12E82EA1;
union desparams___F38C3328E965CE3ADB16864418918AD0;
struct dump_args___00C533AE8545A66FA38641508A3DC473;
struct entry_col___E942B815045DEE9FABC14DA0AE6314FC;
struct entry_obj___9954B692FACAC347CBA764979909DFF4;
struct fd_result___864956CB4DA79F92CA310E20E4E9B271;
struct fd_result___E188DDB4946479B1B04909415F6D7A2E;
struct group_obj___6B1AF3D1F6DE7092D80225088D6E3A34;
struct log_entry___1E639176190539C4AF5A837E820AE922;
union mountres3___3D7A0CB925F6CF28B22A74AF5DF0F9CE;
struct proc_exec___69BBFAFF681CFE287E192CA75A791E21;
union sigaction___8EFABCF72131BCDD3C87705B82C94E7E;
struct table_obj___37F826B7C2AFF7B3E483E0E1EE89ED51;
union yprequest___DEB989A88767ED55A1FBB16B6C8D997A;
union _XIMText___8281806D2C2C5E9220BA18F83AF5F330;
union fhstatus___5A86E21E7BD06EF982D138486E7C27D0;
struct link_obj___6E2208C80A69EAD3D69988E63D048B29;
struct nis_attr___F2081D9F3F0358B3A954C101A2B200CE;
struct statsvar___7FCA211C9072D2949954B3DB78BFDDCD;
struct statsvar___BB7C6D2B3C1E1AB741C949E9CDEFD86D;
struct unixcred___B86B6406BF4F2F34B5DC36D552B35DA0;
union _xEvent___4579D2F02645DC5461CD7DF0223F4600;
union callout___2D1E7CA6D4B906E5368CC371613F5AEC;
union icommon___352D7131545A46E37526309B828AFFEE;
union objdata___B3007D6063AF66DF722E8A0D3E39E00C;
struct reclock___08E871996A29648E8758F300DFC8D580;
union rpc_err___CA5666742FA4B309C5F6D2463611D7B4;
union rpc_msg___7D774571B4FAB0E4BBD540829030FA52;
union swaptab___528A43D156F95A0146E09811518D2E1A;
union tftphdr___E231DD2B7A2AA83F99CCA027C312551B;
struct cdnode___881309E4F9CA653DD687A11B61F33914;
union dsplog___75873FF22CE910D1FBC726C0B659971B;
union ifaddr___0DF00F875CAF96EB397809642F17405E;
union ifconf___28C87C5ACD364976D94B96E40062B553;
union ncache___E7616DCF58B0AC3D0D6587849AC64B92;
union region___2FADED55C95798441DEBE337753497DF;
struct sigval___014CB6D68A4C85AD73214A8B9F40ED8B;
union ifreq___B4C116E395E63C3ED2AA96136FF1ED60;
union inode___850AF533430B9DC3D40EA65B71826C63;
union inode___EA31F86E7C3F0C71466A5E96901DCEB4;
struct inode___FC33DB27FE0F857369E6C6F32AC20866;
struct _______00976F6E7C414A8449E5EC494793DABD;
struct _______1C4AE2D93AE23D77F4B47FB682A792B0;
struct _______41C6ACE15BB05B8ADC571FCC2068F6F8;
struct _______773984751D4B72F60DA8EA7FE0E4332C;
struct _______7BC4C9E2DA436E276E1C7B0AFF1E1BB3;
struct _______A0F582093321D483812420D2040EA3FB;
struct _______EE0FC0C350DA985F345B12E3A23DD620;
struct _______F809745BD539DDC0BF3F6B58B72333C1;
union GPIO___CD29CE3F9A5F74D2438ACA80101F6228;
union icmp___13995140954385B7F735AD5DF5EAA771;
union icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B;
union mbuf___C6A95FC5135865A81007461C3A130A6A;
struct svfd___282F8E0CA4B08493EA9E1EA060A0731E;
union user___3B359A40351122B121A37E0734670C57;
struct user___8801DF0D6A4608417C87B38E9E599B4F;
union user___E4D8091639DC7336013EE29C556C46C6;
union user___FFDA854C04C02961A1098ABC4F40B8D9;
struct wait___A9B06B564058D387211EDDD78142AD67;
struct wait___F04A95226779EAA910C193CF534C5AD2;
union fis___D2FBE5AA72B3FE89D07E39BB3AE19398;
union _9999A8100202244FE84754323DD949F8__uu;
union ____00C43480F04328215F4E5F36075FEB9C;
union ____4375D5A6E5CF2947662E7101211EFF8A;
union ____4943DBA6EC5888BF08830C6DAF61C6ED;
union ____6D780EA0E880820FFFF864F1AF607297;
struct ____9F80A07CA53E50C0896302A4F5D4F6CE;
union ____B761B527D4EBA4CE9E382F1E32DFE1DE;
union ____C64D297F1DF5A22C084AC26BD4E7327B;
union ____D3782B7C0B6FCEFFEB5876E878B431ED;
union ____DBFE4481F7E01E99261898FD11F89AAA;
union ____E26DABB5958D65260C087DD1F50298F6;
union ____F4C8BAAF2D6A567135A62292FDA07584;
struct _XIMPreeditStateNotifyCallbackStruct;
struct ip_timestamp__ipt_timestamp__ipt_ta;
struct _XIMStringConversionCallbackStruct;
struct _XmCascadeButtonGCacheObjClassPart;
struct _0021092ACCF2D90482BAA79C55566AD7;
struct _003EE3AD25CF627DEE371096C69783B0;
struct _00528F88FA4F09990CF67B6DC7309796;
struct _00A32F37F5118E39F36657EE3717F2D7;
struct _01593098553202BCB9DBD5F27E6226E8;
struct _016F7086AC9B0DCA4201D7895BC24650;
struct _0185B28A9005276F6D3BB9A22595A3AE;
struct _019CECDD6753AAB6598130682127E88A;
struct _01A217455DF1EC91AD6266E2E71665FD;
struct _023C7E5C1FA923CDA97A677B848735A7;
struct _028518915F7D7896123D89340F2F38F2;
struct _02A785B3A8D92BC19FFDFB76C1A58D9E;
struct _02B7C110B96F422043FD747664A5A945;
struct _02BF927D00A6078DB787849469CA32B9;
struct _02BF9CECF1D2B5E6E55E2C03E1C2E954;
struct _03198E5D4140E47D6CC7FA31B1147AB8;
struct _0340F183E3D57BA98D278D6E8F4BBAEC;
struct _037FA328FF3097084EC208F512F1E495;
struct _03C803DDC9061B143F519D4D73BD5571;
struct _03CB082776F9E7204BA8107224DE5806;
struct _03D5BB64BEC6FD91F45C473FB811595F;
struct _04253E8C02CEAE855A3D040489F646EA;
struct _045DC9DF8C87DC85FACEF28A55B81842;
struct _0490652D71022E8A5FAA6A6EE2F3573E;
struct _04BE85DF42EB3710F3E3DA7E472F659C;
struct _04F2FF642EF85672B24AFBAEAA33FAA3;
struct _064F821DAAD25287F43010D2D1702E84;
struct _069CA722659D31B5E21E1ACEADA10473;
struct _06C41AE9C3ADE0B1D3F5C4BB6B518DE2;
struct _06E84F0011827D3FA6D8BE033B4E11AE;
struct _0702AFAE85E523028461380896C86760;
struct _0769C413302D914EB03B061AECACDC27;
struct _07A0BBE0F3D6D0E97B5A30869B6D39C4;
struct _07CF3C5657E15CE751200314299C128D;
struct _0816025FBD9D05C7C86BC1E774A2CFFD;
struct _0826E4B532B0CD93EBA2471AF8AD5078;
struct _086284109A45697A934DE255CD0A4CB0;
struct _08D1E73019D0DDEC0EBB545A043C5282;
struct _08E7BB45AF45164209AD32D6030ECBA7;
struct _091A8121C3C792D8858188DBB434C01C;
struct _092DD72AC6B9BBA1C79AF097B6F8E844;
struct _0938F46EF6BF1A288D23C461D10040B7;
struct _094418222666B29D070F7EC8BDF6395B;
struct _0A132E968BCCC0DBF60AFD92D1AD913D;
struct _0A270F69B196F9EFA6F2CD4624EE5655;
struct _0A5A2DC6F5DFEB19A95AB8D5777ED58E;
struct _0A62F3378E7EE0C32D1AC7B808E76453;
struct _0A94BDF67700F0EDACCA5D00231D7516;
struct _0B3AA8EE748F245E929FFDAF01F33E77;
struct _0B70C6F502040464A5F78A20545EAF54;
struct _0B87BC502720C51E06AFFAF967DE0BDB;
struct _0B94EEFCBD76FB7E6E0B7C6C274F8F05;
struct _0C1A989C237847E9E0FEF5D20B714342;
struct _0C4BDC5C14F9FAF0AFA7E8A6E763419C;
union _0C96D94650C2A29052F166299D3A4777;
struct _0CC2C7B5C742C31129BAD132CF836E30;
struct _0CDC4BC8286924C5BFA22623C4B7938F;
struct _0D0114D795552F54A79F202DB3226B55;
struct _0D243FAD6E0128E307D753D10A84039C;
struct _0D6E5C2D914B483D77C02330A0CE773D;
struct _0E247DB22AD8AF66BC5F1E9B22EF7600;
struct _0E3097AA2FBED02B33E6A3FF3D033D09;
struct _0E7037D642DE9D2DAA89F1F3B41CD110;
struct _0F3BCE20E1217B8B60181F2FE2EFC047;
struct _0F462D16F92216AF6E2B02359C172FD3;
struct _0F4B06D36BC906735A699C1D59FCE038;
struct _0FFC4F2ED9639CB540D82866D6DE553D;
struct _101576DA344DBD97547D314B31F9E1E3;
struct _101E059DA351EB649268BB07F6C1B328;
struct _101ED56796A31C5C092EFC61C0F81522;
struct _1073DFC4CB91CB67014BB0410F5A46CA;
struct _10F395C20BEC4113025BB1D0BA3DF492;
struct _10F8C4C81A02E8CC11279456BCE6E63F;
struct _1102A1E8B20588E5B4B19CB5CB1C4961;
struct _1168B6D6BD072B799143AF246A5E2670;
struct _128846696A0AF303C7B67A876F3BD8E7;
struct _1296C23E7EDA709A08D87BF116515624;
struct _13470DA4B6A7AAE8ACC864F70C5FF73E;
struct _13A9DBF3EA1FE7F1698AD8D67A77FD73;
struct _13C5E316447D80627E30BA16FBD8BA91;
struct _13C78DD7EDF1CF1C4AE9B0D54E891AA2;
struct _13E12B2585DDAE3B8FAA42769F7D3B10;
struct _14517969CE1DE2400F22B62AB3BF03DD;
struct _1463B1446DFC3BE3591F88FAF0B4315C;
struct _149F28F052847359C6CBD46BA265755A;
struct _14C4DC63A35B6E2FD67711EA9BA1C1B3;
struct _150E10FD2D39BC72596D758DB7486435;
struct _15B26EF61FAF3427F660B22EA1DD1EB1;
struct _15B7F0BFFE6DCDCAE20B6A9217222101;
struct _15DEA2B51142D972C402EED3BEFCD481;
struct _160641F2D897670075418D2E6B733231;
struct _160BFFB979B4E4E895FB2627A5A1E75F;
struct _1643EA4171E7327ACC09A96188B3F1FC;
struct _16CFC57C4AEAAC7816B638D66FDFD80A;
struct _16E1D217A39631E87E4135AB759C85E6;
struct _16E2BEF1A7CBC54AADB59FB4B07532F9;
struct _1705DF5E8BDFFAFB7D4DA40F818A80C7;
struct _172CE1DA88C1EF8BB2AB85F8454FFEFC;
struct _1801593F65176DF1DA4677E119FA0B5C;
struct _18654165D8B17DA3E357B0DE9180FFF7;
struct _186F4C82598CEA2809B98BC2836275EF;
struct _18E6F3C9731C18C7E69FAD80F00FC2BA;
struct _1951E760351567381BAD8ED74E25D6B9;
struct _19819260117A2122793EF6A7F838A8D8;
struct _19958847318214F780EFE5EAB3B1A0C9;
struct _1A669B82059DE4CB2E4065120B43A549;
struct _1A6C5034386559CCB930A4FFFDAAB743;
struct _1AA7F1335C4C6CFF07A82EACE5F12A97;
struct _1ACC273C8335AF277D974713D57A5DCB;
struct _1B017AC3620941E612639F23B92A9141;
struct _1B25F028D599AD6042D2472447206E6C;
struct _1B427FA031BAB6FB82305F06403E5F56;
struct _1BAE1FE6DB6FC78B3C7B94C189E05017;
struct _1BB85DE3512B339811D8B67FC16B212D;
struct _1BE3EF8FAEFD838E59DA61E46CB3832E;
struct _1C6F78A52A2103385BA76901F31344C9;
struct _1C76DEC9422C2C08D66C4CAF0900D0FE;
struct _1C989109A1E2AFEC30347169F1D74F63;
struct _1CAD30E49B94B49075115A0AFC290EB7;
struct _1CCADE67AD141609F0BF116838B10204;
struct _1D277D18401E135FB6951F8B86FCCB69;
struct _1D4F7230B22579A4FD715C0E003DAA6E;
struct _1D8FF03A3D397B153C31EC45F7CFB27B;
struct _1DA914B8AB142FCB959C2D9AF0891F55;
struct _1E2A6A9B5EC919B5C597AB6887935210;
struct _1E4927A029C92C0FD595CCC76CE8B139;
struct _1E68C84E6BE3B673D767CBEC47B3DECA;
struct _1F1AC3FACFBF0931A43D0CD999C4D927;
struct _1F1E298AC6D409D251F9CAC94C3160CD;
struct _1F4B2514A14933A71BA9296C89FDE736;
struct _1F8075983AA770A7B0A58AA98FA0C1D3;
struct _2017A4559BD8DFB36CC7B04C7F93BD32;
struct _216E4BC742821D1F4E1C977B8BEA2F24;
struct _21AD2773B4EF3639ECA7EA03A86E1290;
struct _2216C948A4897CE5697307886BBC772A;
struct _221FB40353091864D31474CD79EAAEF6;
struct _22208A6C0129EEEAE2F226E4B4B59E23;
struct _22A5417DB981180C131776DADD61E5E0;
struct _22DD3C11A6774D6C25B32DE300762746;
struct _23D39CEB96D177F7D0B7BFAD0D72AB23;
struct _2448E62F5430D1C3997F8F16286DC850;
struct _245C026780A0DE345EB9112C5F51F306;
struct _249E14B8BF24C4EA206EE45FEC486099;
struct _24B457447694156ACAE248300D57FA49;
struct _257708480E694070BE2FEFA543B5E05B;
struct _25C099F9CE304AFBCEF26B9531BCDA3F;
struct _25D0D8CCEC98ADDB4521E2BA148959A7;
struct _2687827B17D2749AF2A3D46753AF4A11;
struct _26934E13CB11D4E3DDD70D95266A4A57;
struct _26B7AAC916B627D83A009BC2ED2E8DD9;
struct _26CCD8212792FCB317923F27ED2E42C1;
struct _26E851949BDE2473590BDE12DE36451F;
struct _272B86F1CC556AC2FE1FEA8F3F6F9065;
struct _27A89DBD85BC3B67227E722098DF0BF6;
struct _27AC02CFF97A742F93959B98FA171589;
struct _27CF53CBC4962E834EEC31FA11492A32;
struct _27E0D75A8414B78E0BA8E2B84253D452;
union _27E544B65E9C83BE0D136117478F1D06;
struct _28183F13DB7442E77993ED2BEDDC9E43;
struct _2849ABCE19C747DF192BAEA83DFD9407;
struct _286A111ACEDB435E271A47289B65D34E;
struct _286EA9114F2F3A904E3DC91FCEB716A0;
struct _292923DDD4ED46EE83D974C820DC3932;
struct _29A84F0A94EF9B7976BAF082CF524F09;
struct _29C593C589279C3E7D511580F3E78129;
struct _2A1341D2DCCA1CCA8C5B95293E5C0E70;
struct _2A2BB2E6A1A637B547E2DF81ADC3376A;
struct _2A859DA02CD5E3593B5918B42FA7FFEB;
struct _2ABA9BEBDC7EA73331E3BF8D3E5C1422;
struct _2AE07F4A994C5FC6C65BC46898F1D740;
struct _2B0FE3CE97643252456137D89C9199E9;
struct _2B25FEECC0AF4D3C6F228158D7F8DAAB;
struct _2B28F023E44E807B69CBD6D694D8FE1D;
struct _2B2D277CB94E3786AC978CB982FDCC47;
struct _2B411D419EAE038198223E092111BC6D;
struct _2B4C97E383E567F029CDA6243F5AAF9B;
struct _2B6C11629D4FEDD0D62560CB169B6CB3;
struct _2B6C772F9B0F9D5573534694AD1B578D;
struct _2B7D7D293671206B48F9F967EA75E77D;
struct _2B984BA6A93DC72E5B9A509864FD0EBE;
struct _2BF13069EBDEE5493612AD0930AE3BF3;
struct _2C268D9809C6E9DE2B818A0BB7518C2E;
struct _2C3C200F8615C3857493506364E8C173;
struct _2CACF028C2AAD0539EADF3383FC56D98;
struct _2D0C20B301ADA5F52D6F367B663BBC22;
struct _2D395617AE391EE8CCE4AB29A77DA091;
struct _2D417E1C50B482279BADE9736A991855;
struct _2D59FDEE4261500A2FE9AC0FF5270F5C;
struct _2D6649CE8084355660672F56E64D6188;
struct _2D6798695C6D5937015A42F87A43EF6F;
struct _2D67A7A7014400A846724E74753CE8EE;
struct _2DFE59F2EEA4B8B07854A40D678C7B6B;
struct _2E0E2C12F04118C9E52BAE749EE378FF;
struct _2E22270806C47E05D9B4938893A6CA7A;
struct _2E381990D243D58AF2A1DAAABF4281C8;
struct _2E56E956F88F593FE24676E86AAE3518;
struct _2EA2656FD07E452BFC8A303BAC941F0E;
struct _2EA3893163DD9A8A0A06709C222EDBE7;
struct _2EDAB78FCD79363D541BD4E7DC3907D7;
struct _2F09618765ADF879434C95865A0073B3;
struct _2F56EA87C64E67B129920ADE5189D39C;
struct _2FA041E8182EB8B5CCC89EC7ACEF90A4;
struct _2FE8A43D0B1C598C64B8CAA3C247D575;
struct _2FFD57BA50D73951380BC0AC0294DF96;
struct _300412910FB0CF3B4D618F8DD622E104;
struct _300684C4BCC789212D7EC604FBF8B546;
struct _30603793696FA81545BF79FFEAB12BD9;
struct _30EC503CDC11D33E3960EA03C63F0F86;
struct _313C3B353B46FFB1EDF86B43BFD8A7BC;
struct _31B9E7519FB4EBDB88DCDC42C7F248CE;
struct _31DC1A9A30C8BE83503485AFF4563DAB;
struct _3208E1BA8126707DC1A488F29A0DED72;
struct _322907DF9C9816BDE1A9DE75D9CF0E7D;
struct _323DB3A67F7F25776B114855EEBFF4A0;
struct _32453B3EC12C1083BBBEA47A258ADABA;
struct _327363286F15FD04A4B2959C61C89515;
struct _3281815EF510FB5432D1AC4F74C6C79F;
struct _32903A77322285C221D0A6A4314FFA28;
struct _32D4AADC56619380327806CDA46BE7E6;
struct _331AC9EA7DEA54BC7D149DCE58DE8017;
struct _332CB8E67E48984461DA80E3D7B1FF5F;
struct _3357D970642A072E0456347CD968AE51;
struct _335EDB02744B103283B800FF919FC940;
struct _3369594E17BD6DC3517892D04DD0216E;
struct _338644C2278094D31E58DDA0CC7454C7;
struct _33B5CD23EE89AEDD139A13DDD9AD8157;
struct _33E0BD21BC9E25CB376AFEED9A297D0A;
struct _3403786C5EE15D285179C38070580B61;
struct _3458ECA1217AB3E004713ABACF7C2EF2;
struct _34681C3D6FB58953006C9844DC50C14F;
struct _346B3FD68C26438FA8B69D57DEBF0D40;
struct _350BC2B23F9B41AFEB7D1AE3E404670A;
struct _3518B1C16AD615E8887B1326F3EF5649;
struct _355FFBAADB08B4CAA5BBFAF829DED10A;
struct _358F6377A75B2BC24E0856391D2F801A;
struct _35F7AFD9D1446B17D2F88B556DE97ABC;
struct _369006661770D1A820C272E8EA3E80F7;
union _369915EE1C7DFDD007AB874D1EA2C9E1;
struct _372CF5BD720E919E3995237E376467E3;
struct _37650F220AC0903949A382F68D80E2E0;
struct _377D72BC5BEAEFFF791FF5908AB0C8A7;
struct _37A9DB4B311662424B6FA129E06762F1;
struct _37BE2491590EE7EB76B44447C3CB76CA;
struct _37CF6FD3D8604C440825361FBCF768B5;
struct _389F741C4688F992C1DDC28AB9B68F46;
struct _38AB55CADF3218184FF2A828A7079C62;
struct _38BC431CF83E096863532D796A6E7F77;
struct _3907063ACFEA1ED8727BCBCBBA6E87C4;
struct _39686138479B682CDBA24DAE5E6097FC;
struct _39A4136BB030D7809586100094537552;
struct _39DC38FE6F9D9CB7A4182EA2E1F19530;
struct _3A4328BABB1376C167ED72E6C2928858;
struct _3AA4649CA836D4982B0435C77683A7C7;
struct _3ACF1F82BEC6DEE83FE33E625399BBD7;
struct _3AD473A9924D2058FA4FA6E47C9E79DE;
struct _3AD4CBF69EE89480875180DC2A9357C1;
struct _3AFF259FB5915F31DE3264913FDD68F1;
struct _3B00234C5998E2ECB70FFF97A8C8B026;
struct _3B49EEBA6D06A12F7D85BCEDA8059895;
struct _3B56314BB57D9CAEC1E1C6F1E501BCB8;
struct _3B80496DCDE561EAC81E803683D00588;
struct _3B81704CAFF80915670BCDC93E5E5502;
struct _3B895FF4AB049C141C5F7C25E8036379;
struct _3BCCBA65A7EB0D2F6C33DC1ED4428B78;
struct _3BE25E7CC08F2245A091500E0AFB6500;
struct _3BEEF239534EE9E2D4AD58999E56F197;
struct _3C1113B149FFAA5D64C1C5C2B316039A;
struct _3C2538FA24E756F47BA82769645E5270;
struct _3C4C38FC10522588E30AD31A846C8E7D;
struct _3C51A411EB84D0C6D8E8C9D21FE4898B;
struct _3C68DE36615A2A96935F4E8A62136411;
struct _3D2747B906FBDDB46B196214774699C1;
struct _3D421AC204675DEEFF21F1F77CFC6EF9;
struct _3D4A26743286481CAEF9451FC80F9AE7;
struct _3DDB46D984C469553E00D9B3BEA3349C;
struct _3E2FA201846E68D32C6E2BCBE5CC4D3C;
struct _3E84D1386F10E26A4E3E4F22FDD3C8B8;
struct _3EA3A21D55B8CD98827DAEDDCCDF7183;
struct _3EAF45F1241314E792C746AFD18B3532;
struct _3EC01B29E9C7693EBA183E8A62C6D0E0;
struct _3F6D9256F664518C180F1B78EC3229D4;
struct _3FD6ABFB741B2B22ED13B1D9854F5B27;
struct _3FD75763E3169B67FBB238E86E46A64A;
struct _3FFE3EAEF4D725F3ECBF98A049FA4704;
struct _401C8EE3E2CA8F69EEB69EE66DAE6AE5;
struct _40B85A3B6BBE9789377036CCC7E05A20;
struct _419D850E958B0F42F8B9D5E0BB3E2ED8;
struct _422DE13ADF73A408267F5BA68732DCDA;
struct _42AB50CCE4DA10B1F65C2C09D80E775D;
struct _431497C136870E9873948068EF0F03D8;
struct _43E2578F9B0C3A2B1F4F344D0EB9BECE;
struct _43F413DFE76D84785171E4F932967C4F;
struct _43F66B9FAB512FEC0C912857172689FE;
struct _441B4C0D047DF063F5C6816C3F022891;
struct _4425769459ED4D02F39F849992AF4AF1;
struct _447FC71AB694A71F5F8338F97A6324BE;
struct _44A07E0130C85419C01F2CC43BB02292;
struct _44C0AE5AD18E7CD0D8F56B2EE020CE64;
struct _44DBA8761062EA5D0E0445C058A5F0FB;
struct _44E50AEC2878F8A6376C06FA64195504;
struct _45331FD382D3B76DE50383933A2C35C9;
struct _453648157F8C28DF21474B3959DE4C9C;
struct _4571DE56C1A5FF05DDFD222F72236ED6;
struct _45939CCCDFB03014AF0E720819761CDF;
struct _45D3B8D1F0A0E1A15D8490524663D915;
struct _45D688CB45E801EDDCD39001FBABF3CD;
struct _45DCCDFC0525EE913BAEBC241F6FB2DF;
union _465FCB570093E3F643B603A6D3E8A1C4;
struct _4664B325D7B1C568276997F8FB024EC2;
struct _468E3F20F7462D23787414BB7174F8B3;
struct _46BEE3D9F82F9FFCDCD1E95DB471038A;
struct _46C3598924410A8263981A6EE1F85A96;
struct _46D157C3B2262130CAD8633945DA87DB;
struct _470449F8043B0E95436C3AE3811CEA11;
struct _473FB80C7F0EDE4D4A756518E07F01B9;
struct _476054893965215BC30A46A434D1D847;
struct _47D21BE5BB287FEA72F9A52CF871A5C0;
struct _4811DE8B61D0522D3363266E4D46EA9A;
struct _487CA7C5BD7AF327E4BD0CBF5F49799B;
struct _488EF114463850BAC9987E879A5DF652;
struct _48974C792553FBFA318CEC22C625F222;
struct _489E3F16CC6F83D9EE719C1997B5A755;
struct _48A0BCBFBE5BF4DD1FF757783C127908;
struct _48A6A373861130075F8524D5C353FEE6;
struct _48AD93219D69C082A7FA7555BF967BAD;
struct _48B3880E4699D314B19152DFBFE9205B;
struct _4928972DC66A9F7C89D199795A4AF315;
struct _49757C98BAD1C304A4F8D7FA5746E040;
struct _49F7EA5D491CD1DC2F293A1F3B03C1F5;
struct _4A647C60455AE07B29957B156A9865A4;
struct _4A831D13E31F100E58B8A5F4F6C06639;
struct _4AAF95CDB93A48CA96556BB33DEADB65;
struct _4B1EB49994F06B7B2A2F262429ED5715;
struct _4B97BEF68D37596A26C9A4C9C2EFDF5A;
struct _4C0A166D0FCB5B830093FB9F7D7DFC34;
struct _4C2068F4FA5FD804D09687C78D10F64A;
struct _4C29AD0BCFB47FFEE01CCDA185D4E4DF;
struct _4C2C40102FE02EE57912F207AF83DC3C;
struct _4C65BE1067297C4FADB11C7C25C29C00;
struct _4CEA7C0856663FB37AE47FD9F99BB511;
struct _4CF2A723A8F4F5EA6EDE16F5794DEA22;
struct _4D3DBF947D992ECBBC409CB8927D044E;
struct _4D69B6347F056FE268056727CEA155AA;
struct _4D6CF402BE6604EF49AB6A1F1F900B99;
struct _4D918DF5E629F4C28AE5A435B1E47B7A;
struct _4DAB985EC804DF06DE833983110A4312;
struct _4DCAC2088B3F168EF4BFBCEA383ECFD2;
struct _4DED8A72E96D1A05DB0C760DC4A016D9;
struct _4E230DA965C384CCE937FCE2A8CE1FCC;
struct _4E2DFB9F6290197309D31FB10928FA58;
struct _4E2E0661611BB9974179772E2A48C6DA;
struct _4E41D3592590DB7E479BB165B1ABED80;
struct _4E8A4C7FC2C9452EEDB2A455AEE467A8;
struct _4EB5A781921B45AC1AB8FBD134D3E0D0;
struct _4EC8E4A6CD67FCE8BB3EA802AF53C546;
struct _4EECDD18DE7D4606E508621736DA89A8;
struct _4F5DD4B298D84184D3112873FE652EAB;
struct _4F763A7D3653D2254F75B054CBA6F0C5;
struct _4FA67FD0121DE61C8BBE74D0ECEE2878;
struct _4FFA9527088137D66D8D180D61C68358;
struct _50444C3EFF8C2D01F53423DE01692AE5;
struct _504B016FD037AF4CEAA065367FBF726A;
struct _50A8F2CBF9209E81C59E0189B8E8717A;
struct _50D2B38DA8D5F7F9D092D3B0069535E8;
struct _5167EADB868224F0F55FBEC36E2D90F1;
struct _51749B1CBB08500DC0A3C077F7082133;
struct _518ACE51630D39AE769AAC20F2440B0D;
struct _51BDB5BB8E697D220A414B00E8CF85AE;
struct _5209941CB7D0C10FD4F27E8B15AD14E1;
struct _52EBF4196BFF6EA182C0B53510983968;
struct _53791A33E2911636F452B242C84B4B8B;
struct _53996C97E395EF20FC508697C3EEF92C;
struct _53A0FAA9DE94950BE2C50FA9F311A539;
struct _53A371D93AFA762A16435064A7495B18;
struct _53A84E5818A8BF56A6CBC41177A9FFE2;
struct _53B2C5E872CF4691EFE90F887D66B7FD;
struct _544A67C4B1E4A518808DDEC63E07788D;
struct _54554A9A149105D286AD985787231C0D;
struct _5462DF8C178A5086C137AD8B370A2274;
struct _547CC69396E14378E9D06CD437556A9B;
struct _54CFA59446578757670AC893D5443363;
struct _54DAE81C1FDB4CAB14152B166C6055EB;
struct _54EA74D72ADA89C2802A85C6983015A7;
struct _551F4F1EADB3AA2328EAA62400956C84;
struct _552C52AB05687DD02B6759D4331D5B07;
struct _5532C1654B9EF34861D348BF0E72BD7A;
struct _553FAF01ADE3C24D25CFBDA23B6F6D6A;
struct _5546CF314AB66BC0C9A48B86C8E58389;
struct _55BA9BC301B16CBF748D68913B45D214;
struct _55E5FD3CD940068B4EF67AAE284651A9;
struct _5611E7A482769785DE0F79EE532E4EC7;
struct _56236F995320E9550D01648098F1E75E;
struct _56876A3CF1ED32735E0999A0D66A4738;
struct _568B7DAEE9030118F2B9A79B2684B02F;
struct _56F59331F03F8FDAB1249A71F6343C1C;
struct _56F965C4CB1B37CA1C9344E914749FD8;
struct _5763F2EC7349805D26B2ED34581CC2B6;
struct _57642C20A930BC40CC56BFA51EFC45F8;
struct _57A765EA942AE9D5162F8EADA05AB765;
struct _57E6A23A76D16D83EF023BCC9C7B7628;
struct _58058F4C4926147A1BF935BBE1E04307;
struct _58330DD7ED50E0D1B016F20AC1EEBF6A;
struct _5844B3F658E992D348A8DA77109E2376;
struct _5868E735110F708D87BF7192F3350519;
struct _587F15487BC7F24AD565F67C2769F95D;
struct _58964FFE81FF7A5F550F9B44561E3FD1;
struct _58ED657282AEEEAAB6957A3B0877BB31;
struct _58FAD93ADC8A41E6E41FB2BF3A4FCE08;
struct _59186384A74AE4586A65E1BA0686E64A;
struct _59351FDCD0841299E6F657798DC5AE28;
struct _5998CF11E98D176CA30EF973C8091161;
struct _5A60C9F0480C450293B4087497D73F1D;
struct _5A8881B73C53918F890CB81CC2BCB847;
struct _5AB76884A00AA1EBE6B998CE45DBA4C9;
struct _5AD947F5E98A54D1DD7F12D200D092D7;
union _5AD9887C12C1EBF5921BF16B8374B7B4;
struct _5BB4136DB11763AB16A801C866FA2FFA;
struct _5BB888AFAE3DA1AF86E88EEDAEBE9855;
struct _5C0DD3C4E70CCCC9965B24A6BE5ED8FB;
struct _5C140DC956AB8D8D3A2E81F1CC511829;
struct _5C2B60FA26E73A1BF39A96E97412C65C;
struct _5C32FF1A7C4211025F70196E2E5CEFB8;
struct _5C41C718BCBFD6CC2A68DF59D547D717;
struct _5C59CCE56E8E593774E9628726BF3352;
struct _5C8C52F20E5837CD54FC695805FBC709;
struct _5CD0DDA75FC8A64FD62E45433429A157;
struct _5CEE1ED3B02D520814ABF86C9CF0DEF8;
struct _5D605798B949FE2847BA0CD5F658BE18;
struct _5D81407642129E8D3F1879551A611D5D;
struct _5D8B4C88FE874254192A5C2673EF8027;
struct _5DD49376C74765CB7E96286DDB46181E;
struct _5E04D711070F28523D4888D880E8635D;
struct _5E29C5FF94304EAD83140C47151323A4;
struct _5E32E18D9D191C64B2666EEAFB9BEDC0;
struct _5E8F645B7662834A694E868B27EBBB24;
struct _5E959B103B01C075C209A8FEB143708D;
struct _5EECF7E464F62285F8C0B2C4DC549E8B;
struct _5F1426FF167D9E06CE7F137AEA610D0C;
struct _5F2581EFA5F095F1677DD26E57B1FC1D;
struct _5F6372D609C25A56B6346C90751BD281;
struct _5FA36CED10B8B6FD8E7AA456D875B9FC;
struct _600CE1F1415CC4FBB5A956C0A4B10C91;
struct _603DBFA11DE2EC77704AC2D2BE78752D;
struct _607AEA48B84CC21B20A0FD7A7709DCF2;
struct _6095BE840E1ACBC7B5AC7593428C37D9;
struct _60FD28E41E68D30D206D9EC072DAC7C8;
union _612386ADEA876BB7391CC4765800258F;
struct _616DFE8EE921B679729534094133FEFF;
struct _6180D9D3CA56B1110646E5C5D8270DC5;
struct _61914AF5102B2D237A41D3779282DDDF;
struct _61ABC0BA638790D6FE8B525E20E3EE79;
struct _61B607A2274ED5109A268B0B2173104D;
struct _61E2EBDBC07397AF1726E583C640F08F;
struct _621D16500987A711CC39A0AD4484DBF8;
struct _625B72EC204AD184FA367A67F4C8645C;
struct _625DD72E42D2E4120693244DFAAD3348;
struct _627A07425D4376D35C2749D7EEB3514A;
struct _62B00FE65DC591A743796E3E26F02346;
struct _62C51BD45F432495E1F915DE1D05F502;
struct _62D70C4681D5FDEED922723C39F7026E;
struct _62FDF7DDCD87E5F8C2E5C55156639A56;
struct _632FCC76A12788D9E06A5D44275BFCFA;
struct _636E06EF14FC653C9FA755BCE21D4A3F;
struct _63AF34F92436E0E20A119355607DCC44;
struct _64419251F3172C7227A52AC30EAD3C9D;
struct _647FE789D073DDA1115A25D9160A600C;
struct _648D5B97A5A1D2D2729A4C51B6643734;
struct _6554ADDCE5A2948DCEB4E183D884FEE9;
struct _65610AF6115E0111CBDC28EBD9EDA308;
struct _65A7BC70F11250CC66A1AAC499DD4DF0;
struct _65A971B36897144817056F5407AD29D1;
struct _65B902F391CFF156201AD47DA98B3D7B;
struct _65CB4B56B993AF892F37749A62A14B51;
struct _665F1ADE1952A58E13B5D78D0B8A3255;
struct _666210E100F3CB5D4A75782C69E711A8;
struct _6696D83380ECD241D01FB0DC261CC039;
struct _66DA73451B2C91DDB1D8B91FCC8B26BF;
struct _67007EC0A0A5FA25533E9B447B17EF1A;
struct _674E79E828204A5EA95B7CAF67B0657E;
struct _67680BE24F0D27FD73CC311486674C45;
struct _67AB776A05D682900D1C01B50C60E7EB;
struct _67CA7CC32887388D86A8ADA32FEABADE;
struct _67E052DBE3D4216490A6D8B2745BB149;
struct _67E48886874B973177B50A719F6BD031;
struct _6811173A84BC2A7BD051BD3683D47430;
struct _681A300F6E908AA949975FF1E230A5DA;
struct _6891B45CD5C184FEB200E38CDC4FE1A6;
struct _691123D744001B8BE68B84780CEE447C;
struct _694362FD6BA4FD09E27A405438EEF682;
struct _694E7AF0BC9EE95CDB6E54249E923D7E;
struct _6955332288667D59DD3C97A58CBD715E;
struct _6971C49ED543898CFDE2AB3CD1189B70;
struct _697B32D3B5D3093ACC810617F93D908A;
struct _69A7D2DDFB50C675CD41E5682D0C8DC9;
struct _6A5D08A78EDB5A9C1147C38C7EB4CE9D;
struct _6A9F4E252AF5B29C924E4470887811E1;
struct _6AD1C0C303B7C98984BF80315D836E89;
union _6ADEE7E8E636EADD16A77F1733C8254B;
struct _6AE5D21AAEA04E1B024F0DA11C966966;
struct _6B1106A64659663BF4BA9950E3F10E4F;
struct _6B749E7B3ADE7B53BF5DB5005F238EAC;
struct _6BA9BAD34CD581FCA2A7610248080448;
struct _6BAE8AC6C2E6EF04B701C3F9CD3D4D29;
struct _6C0DBE15692AB0301FA41806B271F811;
struct _6C157D281FCCF3AD18E5920BAFADC6E6;
struct _6C531080E0330861B126A2833D727845;
struct _6C7AC434EA2B0F9E65955088C16EBFDA;
struct _6C8DA88AE0F795AA91A7651F5464995D;
struct _6CA79B54BE0B8C15E4B81B027FF362F3;
struct _6CDBBC56673808DBC2DA2091B1C251E0;
struct _6D1D2AD66BF959596DF5CC9E65B91062;
struct _6D3334F4551641FA7C3822F70436A958;
struct _6D3C85AC6D83151282A45A4C6F921D54;
struct _6D54C15C1E6E6575901DF83330F155E4;
struct _6E021F31F73E4CDD452D268F50E8CCC0;
struct _6E603A4D6E053F4C38E194015FCDFC50;
struct _6E97B2E3219292CDC06EE790A6590157;
struct _6EA1208F05D799B306741A1D21B7D8A7;
struct _6ECE5F7C46F37A2EF909042FBC6F3E21;
struct _6F769F3251074F30549E39033985F8DC;
struct _6FAE6FD2BAB65E382C9F13A182AC5702;
struct _6FB552EA524F38554FA8528F506D34FD;
struct _700E25E294696415C5EE3D6F0C9AA59E;
struct _701AB287855708548E3A9E6D7A33E099;
struct _705D0BEDE90FA70168249FE65D21D1D3;
struct _706327D4C18E3A6CAC6F680E53AC0541;
struct _70A9562056F67DACEF60FAD2632E0937;
struct _70A989625F397D986B701736EF2078A3;
struct _70E4CC7E54BA43D6E5622AB555079691;
struct _70F891D3DFE5F5563C0C4B91897BCFD5;
struct _7215FCA21C9177221950E694BDF162F7;
struct _7228480D3079CE2808B81A1C1362B902;
struct _7250734D77F79F0949305E641023FE62;
struct _725E8F7C15FD9EA8CEABFA325DB9AE90;
struct _7286F01C0F25CC9697D9D7CFCD5C4B3B;
struct _72E33BD22DCEAD37F3B82706335FF895;
struct _735C3716122317809AD8BB5A186A1FBE;
struct _735DE0EA43321C9AE91F95F7110249AF;
struct _73976483F74B7ACC860B7B84A6B492A9;
struct _73A71279A51BA5863B442246BC81936D;
struct _73B4058B96DB787648F70BEB3765CE40;
struct _73F4BB55DF18F0BF9735C1FEF6B6A448;
struct _741FF3E04B05F2C21E0DB832A952F2AD;
struct _7480CB9003AEDBEBEAFF24F3E95BA652;
struct _748E6396DB81A71CC67026C5868B0A61;
struct _749257863A78ACF83BA10F9F553F4560;
struct _74BD57DEBF7C027BB64500CA73459CBB;
struct _74F473584FBEEE22607318AA08113DD7;
struct _74FB751768FF96092D6BF552FB1F736A;
struct _7501B521F09A6EDD43C68106808E09A6;
struct _754617B2EE88B16E3A92B4EAD52B067C;
struct _754E82352BACFD73AE933254C0FF8B10;
struct _757904A2A8E77653612A3CA900C4F2B1;
struct _75A587EC71D839727FF00E499DB42A24;
struct _75A97C15B47FD417587C5C65E341B79B;
struct _75C8455111F1AB4D326C29F40C651C63;
struct _75E019FCB4A579099C3FEBED6B229425;
struct _75E873D448E8C803996EFA0EB2285D5F;
struct _75F7E626134BF34BF20657FC27D19BCE;
struct _75FF7BAF524F34136E9A08BA8B6AF6C3;
struct _7632AA8F19CB8AF724198E208337AAF8;
struct _76BB05525B3B0868C06F2DFB63E54F8F;
struct _76C432023C30A60D6F0CA03B71EF1A2A;
struct _7768503639F77374B09C8CE2FF45E7E1;
struct _77B5DA89F8222E8D6D7C1ABF47542A30;
struct _77F664D03ADE3D590F095E54D295E163;
struct _78B46019F679C5E70AAD7C2ED28277AC;
struct _78DF8810A4494AE41997310F214AE739;
struct _7905F1106D6192C786F48B3D63EB8F32;
struct _791AF81D366397FAE28AFC7E5E3FF4B5;
struct _7945D87D9A9F9BB91054424B8A8AB447;
struct _7963ED2253978A4E491ADF870F9A304B;
struct _797C48E4377D7A637C94D50E6E2A2705;
struct _79D3745B39F9E71262BFBA7985E1C7DE;
struct _79FC17A0C7A3F31E1105D33CC8C2AA30;
struct _7A455DB3BD331D79AF16B3231F86E0C5;
struct _7A953307C4CBF8DC3B970A060657095E;
struct _7B1AACD52ED53B3363F77B2C48FE4393;
struct _7B203B1D6B17DB4D229BE0C85CFA6293;
struct _7B44642C0B26E972D25A29993171BE3B;
struct _7B4AA9229546E18AEA17DF8DFD8F7E14;
struct _7B5944A022561F2F793FE21C0B5C7527;
struct _7B61BCBC246FA8722509A9D44D82CEAE;
struct _7B884385C9B34F9BF1E347FECD869B6E;
struct _7B88B4ABA479AD4CDA761A68FBF6E1B3;
struct _7BDACCE6E93DF8E6ADBB258A595CFD05;
struct _7BE28D0082C4485E6C4D391E690D11AD;
struct _7BEB7D159A7DB2A42EA34A43888FEB71;
struct _7BF2DDE055D8F1EE7B3AFF0D2575C61C;
struct _7C0E6FBDC2BF29A9AC5B4796EC5BE28C;
struct _7C51721F952AE208674F472DDD9AB61E;
struct _7CA3BFA0E2ACF16B623A64955922766D;
struct _7CE23751FA90F89F4E8DC4D527FC30AB;
struct _7D1B644A0EEA2B09DD88F0E6B7E788D2;
struct _7D99224004BCC92994234E51C52C480E;
struct _7DBE86895C9FAEA11C6FA571DFE5C5A7;
struct _7E62CC70772B05F37392B1746CC4A8DA;
struct _7E67FD4F3DB69CB7DBA92A468D15DC0A;
struct _7ED2C0F08B69F76F0C0AC87A8A72CD48;
struct _7EF5F1BDBA3A4538E26771909C573877;
struct _7F598FE20DE156C61CB8DECEFC23C88D;
struct _7FAD4DA9375019A5494A191BEF0405E8;
struct _80262239D5DEFAC7F5C75EBAC6CCD93C;
struct _808EA0A767ABACCBD96646A8EAE3059A;
struct _811A37D7B033DDB34701FA374271E678;
struct _81227E6A2E975B2588700A3A20196845;
struct _81BCCC75A8CBAE21806AA1556BEE0B6B;
struct _81C1ED238922402D884A6408DD965563;
struct _82207ABABC4EB421AD27F9EAB2AF6BD5;
struct _823A3963DE3EAD717009583170D6A1BB;
struct _82419EEADA9624744D635B7F10F1DD0F;
struct _82D86B5B3C9D9E6A7BE98808A956EE82;
struct _82EEF83FACFC8220E9483994E0DE4841;
struct _82FDC3B738EB124BDE7E441D9AE5DEF7;
struct _8385AD6390D9A75B3D83C4736A467DB2;
struct _83A32DBCC5475A0421ADD26B5424DCBB;
struct _83A9560127C5CA1AF601DD4E7C3B278F;
struct _83CB33CAC2707097E650C7C1ACF13AE9;
struct _84637925C97ECDBBFF1C7795F561A4FD;
struct _85014B45290BE0AD558ABC6FDBC2A83C;
struct _85A38AD8457FB66A4E5490FCDC48446B;
struct _85ADD90E39F3CB0C7E30B8F1E31A0398;
struct _862C78E84E0440EAFBA1B70B10D2ADC6;
struct _86549870A56B750901787CF4B94C9DDE;
struct _86667C1762D2D3E70596A778BAFE84E4;
struct _8697364FD96ED83358CE64124BFB470E;
struct _86EBEF6FA494C5E7B15E4A55F7A590B9;
struct _872DA2C06F6354E0B9D12CAAA5AF3997;
struct _8769733A5E2B58204D7D1C398CD68FC2;
struct _878771DB38D99FAEDA04208FA2D454F9;
struct _87D722ECD21497B94ED1D7223FEC05F4;
struct _87DD1086F3DEF3641D7A72FDF168671B;
struct _87E061934EE6919F8EE4F5F65571C106;
struct _884E74C734502FDAE5886BDFF852D3B6;
struct _88A5CE8C1B41ABBCB8E88E633D3889C9;
struct _88CB499CEF7C95AB64991FDC4A8C267A;
struct _88FB39CD3802D019F63911908A8052EF;
struct _894170B0EF0892045A226947D0AC1D57;
struct _8973D72E68A3D7427BDE924AB847E810;
struct _89EFAFA36DC2CA0A6742FD5F4BE18D8B;
struct _8A0C73BF129480B377085AACADB6EBAD;
struct _8A52654D24E42D3905926E1FC7E9ABF6;
struct _8A6937EA0F1140EDE7FB1476278A9B17;
struct _8A97B9BC9980E3C2910806BD3DED42AF;
struct _8AC18927BC3D48B2E1E053A2B1E052A9;
struct _8AC915922B7872008F9FA0F659707AB7;
struct _8B1EAF7AAA57F33F38F96E94C6EE2E44;
struct _8BD856D0EABB45DC0AE6203B505E4C05;
struct _8C544AC6C871408AE6573DA61B3B8C70;
struct _8CF3F0EEA440C7F93DC380FDE5207EC4;
struct _8D5227D256EF5B5AEB1F500684CBE9EC;
struct _8D66564F98126883EE28AC7CFF4C7324;
struct _8E1349AD4AC8D9A4F1DC84C54B0BE169;
struct _8E3F17DF06268256B33C950219C36638;
struct _8E967F7BF7D653C298E7010DBC578B10;
struct _8E9D6FDA341A5CD3E2BA41AECEFC8DB5;
struct _8EA7A0D2C6C155A9C144BE737FA9135D;
struct _8EC64436A5F83D08A6231CF287719D89;
struct _8ECAECA30B9B3465E00D93779597B662;
struct _8F2C7EBD5F5C00EC145265832DC3A795;
struct _8F45B6188928CD01F0FDE0FF1AAE7BC1;
struct _902F743089704F641F1AE7533B376F9E;
struct _90781A1EE0BF204281329EC3E50F50C8;
struct _90B3239242A1E7B072ABC9D9983310BF;
struct _90C6D76C8F7DA2A3EC6A739DF1FAFEF5;
struct _90F4279CED75C32CE4133781567FE5DA;
struct _91B6CB490464A345E007449761AA48F2;
struct _91D66C14A449B56AD19313465CE79FDB;
struct _92276D725373BB3B16F8CB5C6778E662;
struct _92512B1BC772871763CE6BA780016C1C;
struct _925C5E9ADF13AF08F8E4BE2898EADC8C;
struct _927F401B27F2876D054E6625E491BF29;
struct _92CA70A8DAB41318563B485CCB4742EF;
struct _931DBA82A19B61CA267B848FC88C1541;
struct _933190A6409BACA455C7408AF15FB423;
struct _936597F541877A62AE01CB1244CDD3B4;
struct _9375A326D5D02800B5E28ACECE8480CB;
struct _937DB4F83893A6A1F82E1079494CB89A;
struct _946F90356326732355482879C32EA6C8;
struct _94ACE20E5FEED38F4BC574FBC8AC4DA0;
struct _94B10172A4995A66031F1662354B7713;
struct _94B6BB2CA433A719FA3DF4B093FD2460;
struct _94BA1CF8E02B3DD63AEB474E08D83A67;
struct _94BF806C559D86C3BE5778D3957648AF;
struct _94C04A488373DB802AA4CC07AF27941B;
struct _94DE3FD15F99ADB1828A8006E569663B;
struct _94F528D68A4C572CDF725B1D8F1779AC;
struct _94FA839E2A2E2CDB2FF04022E6E0CAA1;
struct _95F74D7453875C15752E25CB7F1BF0CB;
struct _95FA76242027CA03F9C53902C97D80C2;
struct _96216AEB16E52CBDB14746947C216623;
struct _96F7C024A0E76E12CD4B29EEA702F0F5;
struct _9743F85D02716D406869F0C3FAA8980C;
struct _9750BD37C04375AEAD857CD1AEBC6ACD;
struct _9752589AB8932AA797ECA0639922ADEB;
struct _97824D292CB3BFD64DCF032B8AE1F8A2;
struct _979FA3DE6ECCF956231BFC297C4278E6;
struct _981CB342896EC9052433BEBA5A8FF76A;
struct _984028CEBAA862490ACFAD72BCDE57E1;
struct _988632284A71C49D1170FC4598DEA165;
struct _98C6CEFE241EF843C6088F142B2DB4C1;
struct _991DB0B5CB0892F70B164889AA9E2739;
struct _99446BF9ACEAEEC04402885045FD1BFF;
struct _9945DF4177DE84DA9B1E97E9EA74E45D;
struct _9990F7522FA29648C94CCC0846165B95;
struct _9999A8100202244FE84754323DD949F8;
struct _99C02650D618D1A0DF55A9E85FF77BBA;
union _99D5443F2C6554F8B5A9C5DC3E9406B8;
struct _9A231DBDEFAF4839DC9D8D20B6CD75A5;
struct _9A79A86C67FC8B79D589DEFE9BCD3BC9;
struct _9A7B13471624AF49EBC2FC2C06B8FE16;
struct _9AD92D66A9B7FE2D16898D79F4A40DAD;
struct _9B4395DE66E8574EC0897BBFC5E468E1;
struct _9B6DE42DFC0BE749FCDBD18B5A574DFA;
struct _9BD11453D851B840D226BDE30A5759A2;
struct _9BF61F8AD437FA790CCC153EAC25C4D7;
struct _9BF8B7FEFB40FCC7DC4E4D2CF29B580F;
struct _9C224668B7E64BE6AE9499E6FD772938;
struct _9C384A9E423E8568FC322ED8773458C9;
struct _9C4E191A23082E8382C3082F6BDAC149;
struct _9C8855C5416F841FBC956426CB420C87;
struct _9CB99F55F4760567A5B7FA05D1482C33;
struct _9D6FB564ED57422FFB268B9144C446E8;
struct _9D9F8CC524C7DD4F9704759512315B2D;
struct _9DF5225FB79C7EC3237B4B73EEC9C169;
struct _9DF924EC08184381CE6BEC6133B35008;
struct _9E389EF8DB18C75445DC45CE7C2FFB9B;
struct _9E547439B10E1F44156DCF6309E9ADBF;
struct _9E6AFD3F610E739A7AC12834FF3A90B2;
struct _9E831FE87E4AD00EC571C939110831F6;
struct _9EBEE5732934E798190927254B0CA2D3;
struct _9F409E83FC8000082C320A35EFC3B2CA;
struct _9F5B45B2D7EBF8D0E78555B7E3E45D4F;
struct _9FED812B80655AE33F3AD93E5626D145;
struct _A0124A5B65531604F00B7B938AEFE7E2;
struct _A02A59C49A68940E162F3D6545A6687B;
struct _A0578E93CE07CF80AAB250E46E312C74;
struct _A06AF73261543B69A785AD9B5C737D11;
struct _A139F5C23E4C0799A30BDE721D46880D;
struct _A145BC600EED1A472B5CFB66AAA6D9D9;
struct _A18BE809E4BD5A02207432E11B1979DB;
struct _A197BA92F4DBA6455332CB6FACE54059;
struct _A1E1C4876F7B4B8EFD713F49F668C581;
struct _A1E1CD086B71954ED0C94A8A26B6C32D;
struct _A1FF3E4A410D43047E8695E29D7CC7B1;
struct _A22909F33B82A39C7E5AA204EADDB941;
struct _A23F2D0A331F720D631E2B6171CC3ECA;
struct _A248EFEFD6212257CAA664392076CE36;
struct _A27389B7F44473FD8046F73BDABEA635;
struct _A27B2EF13B029B6AC017266492BED372;
struct _A27E5DC152941706DECC85ADB6E03D0F;
struct _A2FB221EC01549407EDCF016C4C0632F;
struct _A313ED2DE25BE046A874D492CFBD731F;
struct _A33417F0A315FD178FB7057BD253B71F;
struct _A35F2E1A5E531ECFC152E2BA15F78A6A;
struct _A386896A7A6A8667CB6DAB8066B01EA8;
struct _A38AB1DC10BE37D6B74E3A62DF3167E7;
struct _A3DAFC5B3B146A9587C3AC2DA81B7610;
struct _A45DC8244913A5DE9E65EAA74CBD4D3A;
struct _A467143AA6DED7F9A689DDE9D5460EF6;
struct _A47C75AE74EA14FC2F54815F4A8813BA;
struct _A494BB2C12950076D57A9A446D5D8018;
struct _A4EF4A77E40471EF410BD1BFBD9E090A;
struct _A4FDF02C5281A2AFC802B6B07368BDDD;
struct _A52021AA62F27114E0B08EAFF70959FC;
struct _A55E8F963C5B6AC40AFF9FD81070CC8F;
struct _A55EC71C5CB1FC4F12702587008E634D;
struct _A56827FA99728A529A1C213E34F0D83D;
struct _A5BAC5A3CF6488768EE2550160F65CDE;
struct _A6524737EEF8C4DE9F2A62890C064223;
struct _A66634CAD7B95962E094A16D3D5C00F3;
struct _A698AA5F34587C763CE927E865551A1F;
struct _A72D5FE34FE1565D7A5E27361D12995E;
struct _A730944FA410AA8A66044A1D444ACA29;
struct _A7DC40296C945E40AACCF86D5AC8BB16;
union _A888F4CBB68333EFDEC90D8B2463445D;
struct _A88F82F3855C63B78A51C35CB747714F;
struct _A8C20F0262151BE7C4013A7A313500C7;
struct _A8C26958E47A670C8BA111DF3C373603;
struct _A9429A734A24E6AA93342D0A902F5447;
struct _A94EB43F2838EBEBCA936AD6F7EBA6B5;
struct _A9893A2E584921FC9190E1D68D741492;
struct _A9F0CF7AEEAE18E8E3DE5B9A9FBAEC8A;
struct _AA1A19B97C4266B2BC3AEB2743D64DB3;
struct _AA5574FCAA16239E322F63F196E24F16;
struct _AA6493CD7EB9CABEB52E2F9509D300F7;
struct _AAA5532226BFEC93AB8B8FBABECEF692;
struct _AAB060B0944F50E5B6EB5012EC22DBB5;
struct _AAD257271AAA9A190B14D3482C45D035;
struct _AB60AF79FB7B576B8100E7E8971F6A9B;
struct _ABE13B6E6B6B6BFEE76F70FD1C3050FB;
struct _ABE60368F0168DDE4E32B527D5287C6B;
struct _ABE9B3A1FE09915A79192C7EFA47B9F6;
struct _AC22C39C8ED13EB46142D7E126F969C6;
struct _AC3C30478DB292C58361350945D68834;
struct _AC5C9E6D1F0E0913CA2851FF4338E565;
struct _AC93509FFB6B9C1B98C9154A5D973C79;
struct _ACACF89959AB7FA4D62A66E189D600C8;
struct _ACF034D5104D0F5B8D12F5FF38C4FBA5;
struct _ACF4F1EE2C462FBD16A67C26EF703AB2;
struct _AD58CDA99C93F34C31A743157D5C3E5C;
struct _AD97566547E5F77323709B4B3562439C;
struct _AEFF3C6DC132B38AB545D5E72AF87AF0;
struct _AF5FB4080A51E8992C2DCC85F9B13FAA;
struct _AFFA9A91EF6D729074F708225A2C291B;
struct _B005B6DFBEE50E3DE02814ABC4E5985A;
struct _B00CD904CB46A0C43826F3F9731A78AD;
struct _B00D0DA09FE05CEA0D3D84146BFBBA74;
struct _B02CF172870B14D5C42349F673AF0676;
struct _B05C30B25A8F0D780E68E0B4266EE664;
struct _B0E46AD18445ECFB72CED3D5FBF58205;
struct _B16FC8566897364FB8F68A61B8D500EB;
struct _B1B67A1858EAE29686262E19A9779EE3;
struct _B1BB4607B75CFFBC9D91E675F4E88C61;
struct _B1C2EC637ADF5C0C2FC0B892BBB4B229;
union _B20031452D9C70A13D819C8DDA3A0BA9;
struct _B29B9FE84B7739E1FA46EBF1C4FF2A7F;
struct _B2D1347A7314B3F7BD8A6C26E40DE0B3;
struct _B318B9FE24BEDCDC1EF7B4E1F2E85F51;
struct _B36C03EE0DB03800CDBEDA1CF8CFFD5F;
struct _B3807A7E298580816B8893D27A6B40D0;
struct _B3BB99D2BC4673D99925C9C5D2C08561;
struct _B4A4B66D2E6C3EE1B1D54A215021FA61;
struct _B4F2C86EC2AFA3B90E8AE0EA0F71367B;
struct _B5406AF633C6B856C397C3AA34CE31AC;
struct _B55126CE33CB6542D7325DF23CE7DCCD;
struct _B5CF7BA2901ABDB4A7D5E18D4AD5B79B;
struct _B5F988AB9D81746BF03F9185FDDAB771;
struct _B6049D59B0993A06102935602114B25B;
struct _B6111FD2FBA814EB95A97461B6DFBCB3;
struct _B69421B732FABD6E5282386FE63B3F7C;
struct _B6C2B50A2126E272B3960EB4DC4F6604;
struct _B6E4A2B848FCD9E33E06830EEF7A3E04;
struct _B6E7D1C43482AAA4EB74B93FC1D2BC12;
struct _B73D64128F8EC87CEF84A504D28B419F;
struct _B73E16D481CC06015184D41F6368AD16;
struct _B76BD181BFDAF7E9381A1626C6C45722;
struct _B7894D5E06F906915DCF2ADD1982514B;
struct _B79898920517315C7D12A700339C3F7F;
struct _B80E979E4C5F2317B232B96F3AA75482;
struct _B8243ED19B76CA5D55F9F69ED1E7C09F;
struct _B84634216268FC336CDDC596960689CC;
struct _B87C4D7F0283F327B3B9CE6AC5F074A7;
struct _B8BE427FC8694D49638950F9AF5F05C2;
struct _B8D43E9E5B323F7D273EC2E781EDD178;
struct _B91987CD365E539796DE78D87241D671;
struct _B98A3FFAF0CE02641AA237A8677CE1C6;
struct _B9A1077AA8A94E3FB7BECD083E4F56D6;
struct _B9A90B4DCE92DDAD69847E7BE964BAAE;
struct _B9DE48622BE1A30E91ED1262299F48A0;
struct _BA021C9E98B12E79B733DF8F1A0CE5B1;
struct _BA0C4C9D943B8C0F64DC63F042F2F4D9;
struct _BA1C9873524F37DFA28FC6E8B2A0BC7B;
struct _BA26A250EDF4BDE3453280FF6BC02B90;
struct _BA3217064F767CDA4642029FE8B5FCDE;
struct _BA6F146A8875BE4D14324A167F2E4000;
struct _BB279EA07E8836E412716D1B8B41E21D;
struct _BB89CE209BBC17F3F34A96F56602CE1C;
struct _BBE251C902F5B1253853EC586FC56F1D;
struct _BC0C03DE100E0ADBA9BE7AF77D01715A;
struct _BCAE7384F079FDFA9DD5F4EFBAB29817;
struct _BCDE0020825236A8F8A72B60AFA7374C;
struct _BD178E0A39C9899E81B8A1C4DD464555;
struct _BD2C716F10DB95031F526D8F604B25D1;
struct _BD361926F3A07F7106AD6464DEEBCE27;
struct _BD3BDD17C4EDBE852D24CB021FDA20B1;
struct _BD577CFD808EB4E77A4E3752FBFBD993;
struct _BD619B2F7AFF7BA6F06506AA27210664;
struct _BD70A3BCAFB9C7C5C0C679B3A9CE0A47;
struct _BD96F4C520841110C237EF8D06FD9BEE;
struct _BDA7F7EC09C455D172B8FEBDBF052954;
struct _BDC2BC4E1FC4E3665C531F87A904F1CB;
struct _BDC98B6B0C6F123FC30FB829F8EEF7EF;
struct _BDEA2C04F83C6E4F42140EC4EAC59F09;
struct _BDF903C03D0CED00076182B436D02DEE;
struct _BE3BBF0653DD7A6C094A79E8D11A6321;
struct _BE58583FCD7344D2421A54A7E98FFEA4;
struct _BE733542885A402087DA3ED85C7943DF;
struct _BEA3E970906BDE5578391186783FC521;
struct _BED8B740867CC68426DFEF7FC9B6CFFC;
struct _BEEF05F397D63AF6E1E65FBD0055FC1F;
struct _BF4288351412136996F9ADCD6FD7AF45;
struct _BF4B56A69C72B45AEF3FE8947B3D6067;
struct _BF64539E6524EAB933F699888D17B074;
struct _BFA06AD98FBBDDEDC0B582E2B4AC4030;
struct _BFB970BD49ED9B406D7CBF54A76D57DD;
struct _BFF6D439C72248A83F4F771634853519;
struct _C00C0DA83216725D22F9B6B75E95FFE0;
struct _C01B768C719C076F1885128ECB0E2F3B;
struct _C04761233C6B6D3917A9FB90584A60A5;
struct _C08104BD47142265B42A3F745A07258E;
struct _C08EB97F95DBE201B07D804A019DEBC7;
struct _C091F8996EF5667AFF510FF5B2E0143E;
struct _C0CF6D5FED3C9B9727D7B5E4FF32FB5D;
struct _C16308A46254792F555119C61B977CA2;
struct _C1989920CA0623FD92C1ECB77D31D883;
struct _C19E6F380814408DFD31968534DDA3C5;
struct _C1A851173DD816DDF7F0E0D062CEFEE2;
struct _C1B4A013CC5F946450FAD8622ABE0A9E;
struct _C1D1DCE5A0B9F389C9FAA487FACA5708;
struct _C277BFB7EDBCB4B16FDC5D70401A7F72;
struct _C2F976814A2B3F5987995BCD3B4FB1DE;
struct _C30FF1240D2A8075F6967DECC9305E3F;
struct _C32D75228195D08F6D42072DC87ED14F;
struct _C3581CCD385C546A273B2E08D561E47C;
struct _C3C74FE90578EF0C42EE47B900DACD06;
struct _C3DB689D4FACB49150CE8263CEC530B6;
struct _C459D5BB7F5319395AB9822D9CBB3596;
struct _C4D830AACD6CA9C030EA39190076ECCB;
struct _C4DC01CDDDF5A53B120EAA56060806A9;
struct _C4E976EB180D4B968178B983A0A1F774;
struct _C501B637C9D373C8193961C468F52341;
struct _C5BFDAA02BA3AB920A890AC8E50E0348;
struct _C642F6064919D5A0398A3A6264CD181D;
struct _C64C6FF65947C35F73E5DDA7D3ADCCD3;
struct _C65DFB72B3FBEEE777E9E71274DF712D;
struct _C66AC2913D384A8D84D2D1CA0773B121;
struct _C6CDCD31C181198FA4488211042318A2;
struct _C6DB73EBDDFB13DF2FA8D027C3235A3C;
struct _C72A05A9A89CB5CAE1B94D9CDA4D73F7;
struct _C735D198080D0544DA6E87E89A47BA62;
struct _C7406CB336B739A87F2A2E6FB42BC742;
struct _C785CF6C4EEFEB89ECBC9FAC0351909D;
struct _C793BDCA50E1B4A63C4D2E25C3A778F6;
struct _C7DCB3DE935305561D7C461D7E7A5D55;
struct _C7FD7A89DA92577ACDB656B79C5D8B79;
struct _C8947F8085B53BC448296C99056DF745;
struct _C8CD1AC7BB16F52EEB6B35007FE94FA3;
struct _CA1CD5B08005403884A7641019451813;
struct _CA8C8364FD28A714C428F7E9308C5190;
struct _CB0632EF2409CFA4902D18F029698548;
struct _CB86ED79A67F464A5E5DD7E35915D8C3;
struct _CBA5F02AFFC4EA4A3305BB276E7E8CDE;
struct _CC18AF02D55844FF82CD78427B281927;
struct _CC4BA52553A26164E40F03C0211728AA;
struct _CC9CB7E336EEB9C8B38770A3248C8F6D;
struct _CCAEDA52B750854C25441FD25B4DA915;
struct _CCFE153B660AB37B5EE7971165BA88F0;
struct _CD1186DFDE2B09DB150CB2EF4FAB66C0;
struct _CD460451436B92EA879ADEB542921FD3;
struct _CD83A85CD196BF48717FD004BA96949B;
struct _CDF557A927ED2BFF93B09908D4EFCA76;
struct _CE15CA8FCB6B9995A5D7B4D8593DCC23;
struct _CE16222007FB0690EE3C9A36EEE011B3;
struct _CE2CC21A8DF6496E4E3BA1994C658522;
struct _CE366FE051068AE4B5DAF48358622BF9;
struct _CE59E3C5EE56110A29DE550B3F2828FF;
struct _CE85B3FDED12F2C017F843E29D266AED;
struct _CEBF0A3380E34CA7D192D32F0B21F5A4;
struct _CEBF785F985159AE1C59B71C07E19AEB;
struct _CF5241A54E1FE5A7851EE8B8F8118B39;
struct _CF91FEEC29390B2E3A7754517937B585;
struct _CFC98DDC8C48D7D4D5B40C9CE62D3BBC;
struct _CFD68B7ADBC82BE7EABF4FDEA780590F;
struct _D080768009F0DDB41B1C12762747A1D5;
struct _D08E3E427138D596819F8CEF4AEF4F32;
struct _D0A230E2822E6F114388A4393E99A918;
struct _D0BF9774D4A82986A5A63FCC2C6E5647;
struct _D0F4880E5E163BC8F27E9DD5F5B3C82C;
struct _D1161C69BF81CBC5E33289869028550C;
struct _D14CA9F2C40E9D75D49C7FD5AB893FCE;
struct _D1A99149F7DEF10F5C1917DF5D27BC53;
struct _D20D275EAB1226EC1C38DFF3333DCDF2;
struct _D299CDB8D19E75BF1FB5C91684A275B9;
struct _D2A436EA22C40B91455F5B9FAC22C559;
struct _D2F477CF0A15BD07EBA4C7727B492ACA;
struct _D3BD8D5467099E62AC519BE3BD77B02F;
struct _D484A87E94E3DD0BB42E942E2185E2EE;
struct _D498926E8696BF91244D867CE73FD66E;
struct _D4B7CCBA990A156E447947BB060E0786;
struct _D4BA9A6E2D32E4BB8FEE36323FB115EB;
struct _D4FB496F61D4660631FE604D96639DD9;
struct _D50A70D0E3F027C6430054674F5D7982;
struct _D53EE25F80C41C95CC04B700465E64D8;
struct _D5FD3F584A706F39031E09C00DDE2C76;
struct _D60B59C14E4F896E4A7591EB7765B14B;
union _D6F3C0EC0794CF7A820CAC9334CFC732;
struct _D70593ABB97D9ADE4A069324C98D63AE;
struct _D71CF58A1EDDEAF67439A6E5BF4C5237;
struct _D769135999DFEE6143DE1D9CD80B3AD5;
union _D8231012D0728EC3472C30FA3109CEFA;
struct _D89E607749B4D1F5D66FC1721C178233;
struct _D90C9031D269F93C88B34E2B5464A64B;
struct _D948AA82C93D13609C5809B8A2ABF699;
struct _D95F8D3D3A203DD01E47E35C972F2798;
struct _D961FD5CCAA8184BC5759ED9932B4164;
struct _D964271DD6A251005E25C3AAAE129019;
union _D9E0BCFF4A8F2DAB04E179D1361C1258;
struct _DA3AB94F542A4F42932A1C212EF5DF0D;
struct _DA4C8A7C662E901D031392A43A7446A0;
struct _DA732864DAD897F0B587BCCAD8E078EE;
struct _DAE3AA21F13D443C5590C7BCADAB13AB;
struct _DAEBDFCF6641BEDF5371E5E95CD6FE55;
struct _DB0E3B2132CB3BCDB478CD47716D7AA6;
struct _DB64A8459715AF3CEFE23597C08B5967;
struct _DB90B039160079ECCA9FEE07AB98A9C7;
struct _DC015C62524E176FF119B9ED21E58D67;
struct _DC32A0924BDC2649CEA8C5E8AC72EF13;
struct _DCCBCD2DBAB4B946C04EEC5F9CA143FE;
struct _DD029A274B36A4E7FC38BFCAA6413DF4;
struct _DD1A60F664AD301361B26C5800787B5E;
struct _DD32CD37E943B9870F4F3BA5E795FA34;
struct _DD43D8CABB66A19A2E980F6986CCC925;
struct _DD6487706C9376B02E0B52997E69E388;
struct _DD9D370D246BA69938C95BC6536EB146;
struct _DDAC1D07D44FFC2E5C65864F60CCE1DF;
struct _DDC886CE58B08A3828A7006540E329D9;
struct _DE105A289448D8E7A65D047961DE384C;
struct _DEA6EB3579BA90947BB8CFA4C4EC84A1;
struct _DEB6ED3E3E48801FAB6806704D963455;
struct _DEC38AF16E696AF732A84E8DDBF5584E;
struct _DF21E726BD65398407620C5BBBA9E08C;
struct _DF35D159A1509306ACCF933DCAD10C10;
struct _DF9513CE871402C1F3633381C6F0F536;
struct _DFB242098A9806FF499E2A00C651AC7C;
struct _DFB5DF0860CF2898E76F59605993FDC8;
struct _DFC468A573BED393F8C22B677D1D24EF;
struct _DFCC977DF00F58347288DFBB1C9465DA;
struct _DFCE630A31DDB9AF8FAB2276CD8948BD;
struct _E019DD19C3E276A39E4768CCE95A0FD0;
struct _E0457597E4167E07E7B544A574F8E386;
struct _E058C916279CEDBDEE25D28521C04D5A;
struct _E063BC797211A487A47BDB1CDDBC4CF7;
struct _E0D258F3248B038EE90F289455DE9392;
struct _E0F2555E6D218DC1B08AC58B4F7A7F6B;
struct _E0F65D5058ACC2BC5F9AF2EDFFAF29D1;
struct _E1058C6CE9D10ECB65A245B878A205A2;
struct _E1260AB78985DBC228459590506E4C92;
struct _E1655291D14CE59495117F42FECB583D;
struct _E16AECF0CDFBBC96C88D9B1362676A69;
struct _E1CA6FCDCEF9A9C396CC3F3CDC444223;
struct _E2032B46AD056E419D159E4C80280834;
struct _E21C2301BB99EE91E0BC7B4A37773E5E;
struct _E2235DDCCCA1BC4668AAB86308430B74;
struct _E23A6C39C3F523A1F07F7D31A9774A09;
struct _E26EDD987AC6C35C9CCBF3E22FD45642;
struct _E27231AA724DCAE1F187F811797F6BBB;
struct _E2EF1D76D67D374CE85643D9E7E9B7FB;
struct _E32A7B8F021520E59B05D2002875B75A;
struct _E39927DDD69BFE5BB92B49A1337204CD;
struct _E3B595AE48A6ED76A827239878338848;
struct _E4260720E3379DD09D94BD71D6A7BC45;
struct _E4ABD7D5EA2E8D1C1EE8F507E91AEFB5;
struct _E55328F014D59CB8D8C2D56824FBB3BE;
struct _E59953A36063650DE92A1957B98E4A1B;
struct _E5E55CAD8ECB129EA540E15CC43132FC;
struct _E5FEC4B44082A4B8B21FC86BB58EB49C;
struct _E601E8C5C1487200B48FD548E1F703EE;
struct _E62B5AAF61A421D071E8F87B1ACD88C8;
struct _E63310F8A888390C3BA6AA5581A8704F;
struct _E67FDE50279B826B5B4895B5BA02F597;
struct _E6EABA4AA22781602E84D1DF4DA6148F;
struct _E6F7D190E2D2DD963C1A2E314C12AAB2;
struct _E74415E298CED5C737EBED6687E120B3;
struct _E87A67B62710FC3E5EEA1F2EA7C46530;
struct _E89CAE49E77FFA19927DB3E1B8EA1AFC;
struct _E8AA4611E972A29EE9197C1243BE1805;
struct _E8ACBD30146FEB9A0012F00D31FBC147;
struct _E8AE7D2799B28F177FB1DB3DC8745A46;
struct _E8C0CCE1B60E84FF431FA745320DCDBC;
struct _E933BCC3EA0E9DD82AEB507EEC5AF7E5;
struct _E9462818A0BC0C67C7E517AB6B971B97;
struct _E95EE22F70665493872DBE0B8C8FD00B;
struct _E985CC5BCD47EAFD9A20CA5B2CDE74AE;
struct _E997A7E9262D40FC83356A066D96F704;
struct _E99BC90019053CAF4DC18DC60688EDEF;
struct _E9D9387C3B11BC3046AC632B5B502F37;
struct _E9DCEB596F8CCA4461C00F60A01329A5;
struct _E9E5673C887B806F32B41DE6D906B7FD;
struct _E9EF7C8FFB9FACE44571DB02DBC6695F;
struct _EA67C4467E5D392AEC3890F142F1A94F;
struct _EA8C7CFFB417549A9149B8702E4079EF;
struct _EACB0B005B8FE7D9793BF30DB07B2838;
struct _EB03BB76CE0965D46ACEB5A56A93EB4A;
union _EB2535972657DA0245F770D5D18D2BD3;
struct _EB73C50A98CF683D2F515C85045FD863;
struct _EBE355A101A506B8BB9BC1A4B6A6F5B0;
struct _EBFCC0D8AA2B58B235FECAF898781E22;
struct _EC6FB11E4AF80479E38BABE612883A95;
struct _EC82DAE7E0933F1930E390E980E1D42C;
struct _EC87D4E5EFECFC4D155F79244EABA9BB;
struct _ECAD306E641EDB2496D7F2C26F74F3C2;
struct _ECEF055F1F15BE69869EA69D3AF4F0F6;
struct _ED47D6A6F4BD19776B9FA2710E12A889;
struct _EDB1A22D9B31A401FCB33FE96D068C50;
struct _EDB9F5A3CC951EB114C7B2D89D5CDEB5;
struct _EDCAE6FAA77F2844B16FB7E0B618EDD7;
struct _EDE17C06FAF221A5878FFED27CF569B6;
struct _EDF86E1F32B40B2525BDDB1BBC0182EA;
struct _EDFC536A603B7BCAB77AE790F95C9CC5;
struct _EE12D2414CDDA42C8B5793FBD319E9EA;
struct _EE1EC16C7EED2202F309301DFAD53D5F;
struct _EE292E56C0FD0E3707F186263B097CE2;
struct _EE3EAD23C079FD246783A616A7C4D4B9;
struct _EE50BAD242841D9D70217C5858A39822;
struct _EE6A206AE82CDE40AD82C65471471AC6;
struct _EE866C64B9E084E52F8894370051FA3D;
struct _EE866E46B57D84E2A02F424C24BE7B31;
struct _EEA792BA41020619123CDBDBFE92C7EE;
struct _EF1440E4CA89662D977D4B051E2FFAB7;
struct _EF15DCB28339270802C69A46485DD45C;
struct _EF1C5D99769BCE30319CAF8488AFDF20;
struct _EF304FE6BA47FBA4BF45C3CD79BE90AB;
struct _EF54914952AB89C7E0EBAF949772487D;
struct _EF6E92C885F7EBA601BD227CAE25DC00;
struct _EFD32AB26A9F2C4402B187171A2243FF;
struct _F0052A01C3D1A009220C94DA25225D1E;
struct _F018256A0B988F59FE0D70778CAD7356;
struct _F06AD9A177A3544FA3D3B37EB204DD20;
struct _F0735D304A48E71B4E554EB40B66D311;
struct _F0B6F56018B35AE6D958AA393C56DA44;
struct _F0BD037E525ACFEA0C1F272EFA8FD580;
struct _F0C48DF009CFE2148821D41751BF8823;
struct _F1364925D1106E1F4B606AEA80BC0A8A;
struct _F1472F09D9F4F4B2B771740E265DAEF8;
struct _F172F94299C982F5FEAF6C4E72460A72;
struct _F19CD3A20937CEF33F3E2EF5E2D906EF;
struct _F1C455A40F8068619788DEC05B45D2AF;
struct _F1DC5359840258F1056D6AC9280CBC0A;
struct _F1F59D4E10B5EBBB1C54F54D61116087;
struct _F1FFDF0E76C6F940FFACBA8A13B33CEB;
struct _F21D8018CF145B47A329D27C35E96B99;
struct _F2C3184CEEDD49A7FB665043E59AF1F0;
struct _F37A617C30FC1EA156DDE3FD35569A2F;
struct _F3865DA4DAB27EA9EE192F5975BA54C3;
struct _F38DCD124B444AE28722F96474B80F5D;
union _F39950DA96355FC65F113612EFFBB47D;
struct _F3EFAA27463B93CC96181BFE5F29A4C5;
struct _F3F3BF8BE106A877DE7FC4D65D49358E;
struct _F4538060D71DD562A33D9EF68435D712;
struct _F45EAA3ACE353930A02675094AE49F50;
struct _F464FEA7A4E5B570917C7E6E5C96B7A9;
struct _F466B234F46A211DC597B6DC6FDB33CA;
struct _F52D9FC92091A8183F87E95DDBDC622D;
struct _F53B3C946FF73649061E5AD36C6E157D;
struct _F571D10236F18BD99A11DF3B50D0C123;
struct _F57445CCAF99E2554B974CAECD301767;
struct _F5DE83966D4764611019A0F9A35F7E9F;
struct _F683121DA6B0B811B23B9D483FF7482A;
struct _F6BADC56E26A91DA12EC55F3CA8F7E89;
struct _F729A21D64D64CB485090C8C4309D6F8;
struct _F741E5E7F7BAA6E72717FD3C16E12410;
struct _F77DC320FB1DA70F5B7152F994D427EE;
struct _F80E3F154E69694439090B67229FB6AA;
struct _F8536B884003ADBD90188302B8AD267C;
struct _F88DFF0D39F146217256B482FD360ACC;
struct _F89A167C1B0B0C57C5FF404376C1C5C6;
struct _F9484FC408161C65EE7F9E60DCC13373;
struct _F94D37651AAFE0975D78E3AC0C195739;
struct _F96F2E029926CB4475F452724FD2C5B9;
struct _F9A11BF5FCA53245437FD040CE8F0807;
struct _F9A6D6133A9C4128732440A5253BF2B0;
struct _FA4FE0B2CA883E06053CBA1706060353;
struct _FA574A2BD4AEE35634BB9215CFACAEE0;
struct _FAAE646675EFFC2E42132545ADFD1943;
struct _FAC60B21728E5FEF5C66DDB2CB35B5A5;
struct _FB09744F3EA0A83ECD6BAFF51404F8F8;
struct _FB5A8BA194301548D93F9DB8FD340388;
struct _FB619B5CE8E6B82A3D0938CCE57F62CA;
struct _FB872D0C58DD36AB86724F5DA25D25F7;
struct _FBD7C3634F8B7AB01E77E408F9CF4A99;
struct _FC3BB1A81303FA005E7D17D8401F89AB;
struct _FCBEDAD8A539FBE868C0633AE68719B3;
struct _FCC23D59EDC7C9AEBCA8416FDF631F7E;
struct _FD02BCD3D36054250A4B3393D3E26B85;
struct _FD24C124EC918F75BF8194FC7995E204;
struct _FD52BE3056AC130D3626F17ACAA3487B;
struct _FD8FCB430836D04139012301F63EB9C6;
struct _FDA21FF59698B5CB8B37673BE0D84FBD;
struct _FDDC11B99A740F6C560F43496CC4347E;
struct _FDEF638EE31B74BBB9D41AD628E95644;
struct _FE5196223FD21582DDA89DFE87E0C538;
struct _FE8C559F4B68F5A3A5D9DBCE5E9919CF;
struct _FE9896265ABA69989620FFBB2F6B5FBF;
struct _FE9EBC63235A93018F05467EFFA60454;
struct _FEC8B8888F3B689040694BF1F630E941;
struct _FF08C0842BBC9F776F8E3FB9B4B4B239;
struct _FF2B271BD07173775CE163A4BE842405;
union _FF8B0CD0CE02EB91C291149776E6F766;
struct _FF8B70C3EB5683862853208A738C6C2E;
struct _FF9246841A32B78E17B3644398C154C0;
struct _XmCascadeButtonGCacheObjClassRec;
struct _XmFileSelectionBoxConstraintPart;
struct _XmOperationChangedCallbackStruct;
struct _XmToggleButtonGCacheObjClassPart;
struct _XmTraverseObscuredCallbackStruct;
struct _XmToggleButtonGCacheObjClassRec;
struct pdc_pat_mem_read_state_rtn_block;
struct pdc_pat_pd_get_pdc_rev_rtn_block;
struct pdc_sys_map_trans_path_rtn_block;
struct _XmDragDropFinishCallbackStruct;
struct _XmPushButtonGCacheObjClassPart;
struct _XmScrolledWindowConstraintPart;
struct _sym_val_forward_ref_entry_type;
struct pdc_pat_events_handle_rtn_block;
struct pdc_pat_events_notify_rtn_block;
struct pdc_sys_map_find_addr_rtn_block;
struct _XIMPreeditCaretCallbackStruct;
struct _XmBulletinBoardConstraintPart;
struct _XmCascadeButtonGadgetClassRec;
struct _XmDropSiteEnterCallbackStruct;
struct _XmDropSiteLeaveCallbackStruct;
struct _XmPushButtonGCacheObjClassRec;
struct _XmScrolledWindowConstraintRec;
struct _XmSeparatorGCacheObjClassPart;
struct _XmToggleButtonGadgetClassPart;
struct _XmTopLevelEnterCallbackStruct;
struct _XmTopLevelLeaveCallbackStruct;
struct pdc_sys_map_find_mod_rtn_block;
struct _XIMPreeditDrawCallbackStruct;
struct _XmArrowButtonGadgetClassPart;
struct _XmCascadeButtonGCacheObjPart;
struct _XmSelectionBoxConstraintPart;
struct _XmSeparatorGCacheObjClassRec;
struct _XmSimpleSpinBoxConstraintRec;
struct _XmSpecifyUnhighlightTraitRec;
struct _XmToggleButtonGadgetClassRec;
struct nfs_fh3__nfs_fh3_u__nfs_fh3_i;
struct pdc_pat_events_scan_rtn_block;
struct pdc_pat_pd_addr_map_rtn_block;
struct _XIMStatusDrawCallbackStruct;
struct _XmArrowButtonGadgetClassRec;
struct _XmCascadeButtonGCacheObjRec;
struct _XmDrawingAreaConstraintPart;
struct _XmPanedWindowConstraintPart;
struct _XmPushButtonGadgetClassPart;
struct _XmScrolledWindowClassExtRec;
struct _XmToggleButtonGCacheObjPart;
struct _sym_external_def_entry_type;
struct _sym_include_file_entry_type;
struct pdc_pat_cell_mod_maddr_block;
struct pdc_pat_events_cap_rtn_block;
struct _XmContainerCwidCellInfoRec;
struct _XmDragMotionCallbackStruct;
struct _XmDropFinishCallbackStruct;
struct _XmFileSelectionBoxClassRec;
struct _XmFocusMovedCallbackStruct;
struct _XmMainWindowConstraintPart;
struct _XmMessageBoxConstraintPart;
struct _XmPanedWindowConstraintRec;
struct _XmPushButtonGadgetClassRec;
struct _XmSecondaryResourceDataRec;
struct _XmSeparatorGadgetClassPart;
struct _XmToggleButtonGCacheObjRec;
struct _XmTraversalControlTraitRec;
struct __pthread_cleanup_handler_t;
struct _kregister__kregister_split;
struct _sym_forward_ref_entry_type;
struct _sym_nested_list_entry_type;
struct _xkbIndicatorDoodadWireDesc;
union ip_timestamp__ipt_timestamp;
struct pat_mem_cell_info_rtn_block;
struct pdc_pat_cell_info_rtn_block;
struct _XmCascadeButtonGadgetPart;
struct _XmContainerConstraintPart;
struct _XmDefaultBindingStringRec;
struct _XmDialogShellExtClassPart;
struct _XmDragStartCallbackStruct;
struct _XmDropSiteManagerClassRec;
struct _XmDropStartCallbackStruct;
struct _XmLabelGCacheObjClassPart;
struct _XmPushButtonGCacheObjPart;
struct _XmRowColumnConstraintPart;
struct _XmSeparatorGadgetClassRec;
struct _XmSimpleSpinBoxConstraint;
struct _XmVendorShellExtClassPart;
struct _physical_descriptor_set_t;
struct _sym_color_item_entry_type;
struct _xkbGetIndicatorStateReply;
struct _xkbGetNamedIndicatorReply;
struct _xkbSetDebuggingFlagsReply;
union pdc_model_cpu_id_rtn_block;
struct pdc_pat_cell_mod_rtn_block;
struct pdc_spaceid_bits_rtn_block;
struct subspace_dictionary_record;
struct _ApplicationShellClassRec;
struct _XkbExtensionDeviceNotify;
struct _XmCascadeButtonGadgetRec;
struct _XmCascadeButtonWidgetRec;
struct _XmContainerConstraintRec;
struct _XmDialogShellExtClassRec;
struct _XmDragProcCallbackStruct;
struct _XmDropProcCallbackStruct;
struct _XmIconGCacheObjClassPart;
struct _XmLabelGCacheObjClassRec;
struct _XmNotebookConstraintPart;
struct _XmPushButtonGCacheObjRec;
struct _XmRowColumnConstraintRec;
struct _XmScrolledWindowClassRec;
struct _XmSeparatorGCacheObjPart;
struct _XmSimpleSpinBoxClassPart;
struct _XmTearOffButtonClassPart;
struct _XmToggleButtonGadgetPart;
struct _XmVendorShellExtClassRec;
struct __XmDropSiteUpdateInfoRec;
struct _xkbExtensionDeviceNotify;
struct _xkbKTSetMapEntryWireDesc;
struct pdc_hwtlb_parms_rtn_block;
struct pdc_hwtlb_state_rtn_block;
struct pdc_pat_cpu_num_rtn_block;
struct pdc_pat_io_psba_rtn_block;
struct pdc_pat_io_slot_rtn_block;
struct _PrintGetImageResolution;
struct _PrintSetImageResolution;
struct _XIMStringConversionText;
struct _XkbDeviceValuatorAction;
struct _XmAccessTextualTraitRec;
struct _XmArrowButtonGadgetPart;
struct _XmBulletinBoardClassRec;
struct _XmCascadeButtonClassRec;
struct _XmCommandConstraintPart;
struct _XmContainerItemTraitRec;
struct _XmContainerXfrActionRec;
struct _XmDragOverShellClassRec;
struct _XmDropTransferClassPart;
struct _XmExcludedParentPaneRec;
struct _XmIconGCacheObjClassRec;
struct _XmListDragConvertStruct;
struct _XmManagerConstraintPart;
struct _XmNotebookConstraintRec;
struct _XmSeparatorGCacheObjRec;
struct _XmSimpleSpinBoxClassRec;
struct _XmTearOffButtonClassRec;
struct _XmToggleButtonClassPart;
struct _XmToggleButtonGadgetRec;
struct _sym_argument_entry_type;
struct _sym_callback_entry_type;
struct _xkbGetIndicatorMapReply;
struct _xkbIndicatorMapWireDesc;
struct _xkbSymInterpretWireDesc;
struct crash_event_table_struct;
struct pdc_btlb_parms_rtn_block;
struct pdc_capabilities_bitmask;
struct pdc_memory_map_rtn_block;
struct pdc_pat_io_num_rtn_block;
struct product_specific_aux_hdr;
struct symbol_dictionary_record;
struct _PrintGetPageDimensions;
struct _PrintRehashPrinterList;
struct _TransientShellClassRec;
struct _XcmsRegColorSpaceEntry;
struct _XmAccessColorsTraitRec;
struct _XmAnyICCCallbackStruct;
struct _XmArrowButtonClassPart;
struct _XmArrowButtonGadgetRec;
struct _XmButtonEventStatusRec;
struct _XmContainerItemDataRec;
struct _XmDialogShellWidgetRec;
struct _XmDrawnButtonClassPart;
struct _XmDropTransferClassRec;
struct _XmDropTransferEntryRec;
struct _XmLabelGadgetClassPart;
struct _XmManagerConstraintRec;
struct _XmPanedWindowClassPart;
struct _XmPrimitiveClassExtRec;
struct _XmPushButtonGadgetPart;
struct _XmSelectionBoxClassRec;
struct _XmSpecUnitTypeTraitRec;
struct _XmSpinBoxConstraintRec;
struct _XmTakesDefaultTraitRec;
struct _XmToggleButtonClassRec;
struct _sym_control_entry_type;
struct _sym_def_obj_entry_type;
struct _sym_section_entry_type;
struct _xkbListComponentsReply;
struct _xkbPerClientFlagsReply;
struct _xkbShapeDoodadWireDesc;
struct audio_select_thresholds;
union audit_bdy_data__ab_data;
struct cio_comp_list_head_type;
struct crash_proc_table_struct;
struct pdc_iodc_id_chief_block;
struct pdc_mem_setgm_rtn_block;
struct pdc_relocate_info_block;
struct pdc_sys_model_rtn_block;
struct pdc_tod_calib_rtn_block;
struct space_dictionary_record;
struct symbol_extension_record;
struct _OverrideShellClassRec;
struct _PrintGetContextScreen;
struct _TopLevelShellClassRec;
struct _XkbSwitchScreenAction;
struct _XmActivatableTraitRec;
struct _XmArrowButtonClassRec;
union _XmConvertSelectionRec;
struct _XmDialogSavvyTraitRec;
struct _XmDialogShellClassRec;
struct _XmDragContextClassRec;
struct _XmDrawingAreaClassRec;
struct _XmDrawnButtonClassRec;
struct _XmDropSiteManagerPart;
struct _XmDropTransferListRec;
struct _XmFileSelectionBoxRec;
struct _XmFrameConstraintPart;
struct _XmIconGadgetClassPart;
struct _XmIconHeaderClassPart;
struct _XmLabelGadgetClassRec;
struct _XmPanedWindowClassRec;
struct _XmPushButtonClassPart;
struct _XmPushButtonGadgetRec;
struct _XmScaleConstraintPart;
struct _XmScratchPixmapKeyRec;
struct _XmScrollFrameTraitRec;
struct _XmSeparatorGadgetPart;
struct _physical_descriptor_t;
struct _sym_module_entry_type;
struct _sym_widget_entry_type;
struct _xkbDeviceLedsWireDesc;
struct _xkbGetDeviceInfoReply;
struct _xkbKTMapEntryWireDesc;
struct _xkbLogoDoodadWireDesc;
struct _xkbOverlayKeyWireDesc;
struct _xkbOverlayRowWireDesc;
struct _xkbTextDoodadWireDesc;
struct acl_entry_internal_lsb;
struct acl_entry_internal_msb;
struct pat_cell_num_rtn_block;
struct pat_mem_read_rtn_block;
struct pdc_iodc_clr_rtn_block;
struct pdc_mem_info_rtn_block;
struct pdc_mem_read_rtn_block;
struct pdc_nvm_size_rtn_block;
struct pdc_tod_time_rtn_block;
struct _IceWatchedConnection;
struct _PrintGetDocumentData;
struct _PrintGetOneAttribute;
struct _PrintPutDocumentData;
struct _SessionShellClassRec;
struct _TransIntrCallbackRec;
struct _XkbNewKeyboardNotify;
struct _XkbRedirectKeyAction;
struct _XmAccessColorDataRec;
struct _XmAllProtocolsMgrRec;
struct _XmCareVisualTraitRec;
struct _XmClipWindowClassRec;
struct _XmContainerClassPart;
struct _XmDialogShellExtPart;
struct _XmDropSiteManagerRec;
struct _XmDropSiteVisualsRec;
struct _XmFormConstraintPart;
struct _XmFrameConstraintRec;
struct _XmGenericClassExtRec;
struct _XmGrabShellWidgetRec;
struct _XmIconGadgetClassRec;
struct _XmIconHeaderClassRec;
struct _XmLabelGCacheObjPart;
struct _XmMainWindowClassRec;
struct _XmMenuShellWidgetRec;
struct _XmMenuSystemTraitRec;
struct _XmMessageBoxClassRec;
struct _XmPrimitiveClassPart;
struct _XmPrintShellClassRec;
struct _XmPushButtonClassRec;
struct _XmRowColumnClassPart;
struct _XmRowColumnWidgetRec;
struct _XmScrollBarClassPart;
struct _XmScrollFrameDataRec;
struct _XmSeparatorClassPart;
struct _XmSeparatorGadgetRec;
struct _XmSpecRenderTraitRec;
struct _XmTextFieldClassPart;
struct _XtCheckpointTokenRec;
struct _kcaddr__kcaddr_split;
struct _kgaddr__kgaddr_split;
struct _pci_bus_dep_func_tbl;
struct _sym_parent_list_type;
struct _sym_value_entry_type;
struct _xPrintAttributeEvent;
struct _xkbAnyDoodadWireDesc;
struct _xkbGetCompatMapReply;
struct _xkbGetIndicatorState;
struct _xkbGetKbdByNameReply;
struct _xkbGetNamedIndicator;
struct _xkbNewKeyboardNotify;
struct _xkbSetDebuggingFlags;
struct _xkbSetNamedIndicator;
struct _xkbUseExtensionReply;
struct exchange_medium_parms;
struct pdc_chassis_rtn_block;
struct pdc_ss_size_rtn_block;
struct shlib_version_aux_hdr;
struct system_default_fields;
struct _ConstraintClassPart;
struct _PrintDestroyContext;
struct _PrintGetPrinterList;
struct _VendorShellClassRec;
struct _XkbDeviceLedChanges;
struct _XkbIndicatorChanges;
struct _XkbStateNotifyEvent;
struct _XmComboBoxClassPart;
struct _XmContainerClassRec;
struct _XmContainerTraitRec;
struct _XmDialogShellExtRec;
struct _XmDragOverShellPart;
struct _XmFormAttachmentRec;
struct _XmFormConstraintRec;
struct _XmGadgetClassExtRec;
union _XmGeoMajorLayoutRec;
struct _XmGrabShellClassRec;
struct _XmIconGCacheObjPart;
struct _XmLabelGCacheObjRec;
struct _XmMenuSavvyTraitRec;
struct _XmMenuShellClassRec;
struct _XmNavigatorTraitRec;
struct _XmNotebookClassPart;
struct _XmObjectClassExtRec;
struct _XmPrimitiveClassRec;
struct _XmProtocolClassPart;
struct _XmRowColumnClassRec;
struct _XmScrollBarClassRec;
struct _XmScrolledWindowRec;
struct _XmSeparatorClassRec;
struct _XmShellExtClassPart;
struct _XmSimpleSpinBoxPart;
struct _XmSpinBoxConstraint;
struct _XmSyntheticResource;
struct _XmTextFieldClassRec;
struct _XmVendorShellExtRec;
struct _sym_list_entry_type;
struct _sym_name_entry_type;
struct _sym_root_entry_type;
struct _xkbBehaviorWireDesc;
struct _xkbGetControlsReply;
struct _xkbGetGeometryReply;
struct _xkmIndicatorMapDesc;
struct _xkmSymInterpretDesc;
struct eeprom_function_data;
struct eeprom_per_slot_info;
struct fixup_request_record;
struct nispasswd_authresult;
union nss_netdirbyaddr_out;
union nss_netdirbyname_out;
struct pdc_coproc_rtn_block;
struct system_default_flags;
struct utmpx____exit_status;
struct _CompositeClassPart;
struct _ConstraintClassRec;
struct _PrintCreateContext;
struct _PrintGetAttributes;
struct _PrintInputSelected;
struct _PrintSetAttributes;
struct _XSyncSystemCounter;
struct _XicLocalPrivateRec;
struct _XicProtoPrivateRec;
struct _XimLocalPrivateRec;
struct _XimPendingCallback;
struct _XimProtoPrivateRec;
struct _XkbCompatMapNotify;
struct _XkbControlsChanges;
struct _XkbDeviceBtnAction;
struct _XkbIndicatorDoodad;
struct _XkbIndicatorMapRec;
struct _XkbIndicatorNotify;
struct _XkbSymInterpretRec;
struct _XmBulletinBoardRec;
struct _XmCascadeButtonRec;
struct _XmComboBoxClassRec;
struct _XmContainerDataRec;
struct _XmDesktopClassPart;
struct _XmDragIconClassRec;
struct _XmDragOverBlendRec;
struct _XmDragOverShellRec;
struct _XmDropTransferPart;
struct _XmIconGCacheObjRec;
struct _XmJoinSideTraitRec;
struct _XmManagerClassPart;
struct _XmNavigatorDataRec;
struct _XmProtocolClassRec;
struct _XmRCKidGeometryRec;
struct _XmShellExtClassRec;
struct _XmSimpleSpinBoxRec;
struct _XmSpinBoxClassPart;
struct _XmTearOffButtonRec;
struct _XmTextLineTableRec;
struct _XmToggleButtonPart;
struct _XmTransferTraitRec;
struct _XmVirtualKeysymRec;
struct _XmWidgetExtDataRec;
struct _pthread_stack_info;
struct _xkbCompatMapNotify;
struct _xkbGetIndicatorMap;
struct _xkbIndicatorNotify;
struct _xkbKeyTypeWireDesc;
struct _xkbOutlineWireDesc;
struct _xkbOverlayWireDesc;
struct _xkbSectionWireDesc;
struct _xkbSetIndicatorMap;
struct _xkbVModMapWireDesc;
struct argument_desc_array;
struct cascade_extend_desc;
struct fclwp_protocol_stat;
struct flex_geometry_parms;
struct floppy_format_media;
struct gpio1_diag_ctl_type;
struct mc_get_config_descr;
struct mc_set_config_descr;
struct nispasswd_updresult;
struct nss_netdirbyaddr_in;
struct nss_netdirbyname_in;
struct pdc_cache_rtn_block;
struct pdc_model_rtn_block;
struct pdt_mem_return_read;
struct str_async_sthinsert;
struct user_string_aux_hdr;
struct _CompositeClassRec;
struct _IceSavedReplyWait;
struct _LineTableExtraRec;
struct _PrintQueryScreens;
struct _PrintQueryVersion;
struct _ScanLineListBlock;
struct _XIMHotKeyTriggers;
struct _XkbComponentNames;
struct _XkbControlsNotify;
struct _XkbMapNotifyEvent;
struct _XlcConvMethodsRec;
struct _XmArrowButtonPart;
struct _XmBaseClassExtRec;
struct _XmBaselineMargins;
struct _XmCommandClassRec;
struct _XmDesktopClassRec;
struct _XmDisplayClassRec;
struct _XmDragContextPart;
struct _XmDrawnButtonPart;
struct _XmDropTransferRec;
struct _XmGadgetClassPart;
struct _XmLabelGadgetPart;
struct _XmManagerClassRec;
struct _XmPointInTraitRec;
struct _XmScreenClassPart;
struct _XmSelectionBoxRec;
struct _XmSpinBoxClassRec;
struct _XmToggleButtonRec;
struct __client__clnt_ops;
struct __nsw_switchconfig;
struct _db_globals_struct;
struct _descriptor_set0_t;
struct _hid_change_list_t;
struct _phys_desc_flags_t;
struct _xShmLinkInitReply;
struct _xkbActionWireDesc;
struct _xkbControlsNotify;
union _xkbDoodadWireDesc;
struct _xkbLatchLockState;
struct _xkbListComponents;
struct _xkbPerClientFlags;
struct _xkbSymMapWireDesc;
struct _xkmKTMapEntryDesc;
struct _xkmKTPreserveDesc;
struct debugger_footprint;
struct disktab__partition;
struct excal_pfail_status;
union nfs_fh3__nfs_fh3_u;
struct pdc_iodc_rtn_block;
struct pdc_pat_cell_range;
struct pdc_pci_iface_info;
struct pdc_pim_data_block;
struct pst_stable_PA_RISC;
struct r_rpcb_rmtcallargs;
struct virtual_block_type;
struct _ConversionValues;
struct _NotebookClassRec;
struct _PrintSelectInput;
struct _RectObjClassPart;
struct _SmcPropReplyWait;
struct _Uil_command_type;
struct _XIMHotKeyTrigger;
struct _XIntrCallbackRec;
struct _XcmsIntensityMap;
struct _XimCommitInfoRec;
struct _XkbAccessXNotify;
struct _XkbActionMessage;
struct _XkbCompatChanges;
struct _XkbComponentList;
struct _XkbComponentName;
struct _XkbDeviceChanges;
struct _XkbDeviceLedInfo;
struct _XkbGeometrySizes;
struct _XkbMessageAction;
struct _XkbPtrDfltAction;
struct _XmArrowButtonRec;
struct _XmCacheClassPart;
struct _XmDialogShellRec;
struct _XmDragContextRec;
struct _XmDrawingAreaRec;
struct _XmDrawnButtonRec;
struct _XmGadgetCacheRef;
struct _XmGadgetClassRec;
struct _XmIconGadgetPart;
struct _XmIconHeaderPart;
struct _XmKidGeometryRec;
struct _XmLabelClassPart;
struct _XmLabelGadgetRec;
struct _XmPanedWindowRec;
struct _XmProtocolMgrRec;
struct _XmPushButtonPart;
struct _XmScreenClassRec;
struct _XmVKeyBindingRec;
struct _XmWrapperDataRec;
struct _XrmHashBucketRec;
struct _db_header_struct;
struct _hid_descriptor_t;
struct _kpc__kpc_t_split;
struct _xPrintPrintEvent;
struct _xkbAccessXNotify;
struct _xkbActionMessage;
struct _xkbGetDeviceInfo;
struct _xkbGetNamesReply;
struct _xkbGetStateReply;
struct _xkbPointWireDesc;
struct _xkbSetDeviceInfo;
struct _xkbShapeWireDesc;
struct _xkmKeySymMapDesc;
struct audio_test_buffer;
struct cell_pdt_info_rtn;
struct connect_tab_entry;
struct copyright_aux_hdr;
struct eagle_extend_desc;
struct eisa_sysbrd_parms;
struct eisa_system_board;
struct element_addresses;
struct excal_extend_desc;
struct ki_pregion_fields;
struct lgpg_global_stats;
struct lst_symbol_record;
struct mirinfo__mirstate;
struct mode_6_buff_no_bd;
struct move_medium_parms;
struct ns_trace_link_hdr;
struct pdc_hpa_rtn_block;
struct pdc_mem_rtn_block;
struct pdc_pat_cell_proc;
struct pdc_pci_slot_info;
struct pdc_pim_rtn_block;
struct pfn_to_virt_entry;
struct r_rpcb_rmtcallres;
struct reservation_parms;
struct rpcbs_rmtcalllist;
struct scsi_block_limits;
struct shlib_unwind_info;
struct snapfddi_hdr_info;
struct sockaddr_ip_fclwp;
struct utmp__exit_status;
struct _ObjectClassPart;
struct _OnTheSpotDataTW;
struct _PrintGetContext;
struct _PrintSetContext;
struct _RectObjClassRec;
struct _SmcInteractWait;
struct _WMShellClassRec;
struct _XcmsFunctionSet;
struct _XcmsPerScrnInfo;
struct _XimProtoIntrRec;
struct _XkbClientMapRec;
struct _XkbCompatMapRec;
struct _XkbIndicatorRec;
struct _XkbPtrBtnAction;
struct _XkbServerMapRec;
struct _XmClipWindowRec;
struct _XmContainerPart;
struct _XmDragCursorRec;
struct _XmFormClassPart;
struct _XmFrameClassRec;
struct _XmIconGadgetRec;
struct _XmIconHeaderRec;
struct _XmKeyBindingRec;
struct _XmLabelClassRec;
struct _XmListClassPart;
struct _XmMainWindowRec;
struct _XmMessageBoxRec;
struct _XmPrimitivePart;
struct _XmPrintShellRec;
struct _XmPushButtonRec;
struct _XmReplayInfoRec;
struct _XmRowColumnPart;
struct _XmScaleClassRec;
struct _XmScrollBarPart;
struct _XmSeparatorPart;
struct _XmSimpleMenuRec;
struct _XmSourceDataRec;
struct _XmTextFieldPart;
struct _XmTextSourceRec;
struct __auth__auth_ops;
struct _physical_info_t;
struct _xQueryFontReply;
struct _xkbGetCompatMap;
struct _xkbGetKbdByName;
struct _xkbModsWireDesc;
struct _xkbSelectEvents;
struct _xkbSetCompatMap;
struct _xkbUseExtension;
struct _xkmBehaviorDesc;
struct _xwd_file_header;
struct authdes_fullname;
struct cdnode__cdcommon;
struct compilation_unit;
struct compression_page;
struct dma_channel_data;
struct eeprom_slot_data;
struct elem_status_data;
struct elem_status_page;
struct export_entry_ext;
union extend_desc_type;
struct ieee8023xsap_hdr;
struct ieee8024xsap_hdr;
struct interrupt_struct;
struct kd_locallookuppn;
struct kd_thread_create;
struct ki_region_fields;
struct linker_footprint;
struct load_module_desc;
struct mc_enable_events;
struct modspecific_stat;
struct mpe_prog_aux_hdr;
union pdc_capabilities;
union pdc_pat_cell_mod;
struct raw_audio_config;
struct rpcb_rmtcallargs;
struct security_id_info;
struct shlib_list_entry;
struct status_mask_type;
struct strfdinsert_attr;
union test_header__val;
struct try_queue_struct;
struct ypbind_oldsetdom;
struct _ConstraintPart;
struct _EdgeTableEntry;
struct _ObjectClassRec;
struct _PrintStartPage;
struct _WidgetClassRec;
struct _XComposeStatus;
struct _XOCGenericPart;
struct _XOMGenericPart;
struct _XcmsColorSpace;
struct _XcmsPerDpyInfo;
struct _XimDefICValues;
struct _XimDefIMValues;
struct _XkbCtrlsAction;
struct _XkbGroupAction;
struct _XkbKbdDpyState;
struct _XkbKeyAliasRec;
struct _XkbNameChanges;
struct _XkbNamesNotify;
struct _XkbShapeDoodad;
struct _XmComboBoxPart;
struct _XmContainerRec;
struct _XmExtClassPart;
struct _XmFormClassRec;
struct _XmGeoMatrixRec;
struct _XmGrabShellRec;
struct _XmListClassRec;
struct _XmMenuFocusRec;
struct _XmMenuShellRec;
struct _XmMenuStateRec;
struct _XmModalDataRec;
struct _XmNotebookPart;
struct _XmPartResource;
struct _XmPrimitiveRec;
struct _XmProtocolPart;
struct _XmRowColumnRec;
struct _XmSashClassRec;
struct _XmScrollBarRec;
struct _XmSeparatorRec;
struct _XmTextClassRec;
struct _XmTextFieldRec;
struct __reserved_str1;
struct __reserved_str2;
struct _bus_trans_desc;
struct _feature_data_t;
struct _xkbGetControls;
struct _xkbGetGeometry;
struct _xkbGetMapReply;
struct _xkbKeyWireDesc;
struct _xkbNamesNotify;
struct _xkbRowWireDesc;
struct _xkbSetControls;
struct _xkbSetGeometry;
struct _xkbStateNotify;
struct _xkmKeyTypeDesc;
struct _xkmSectionInfo;
struct addr_chain_type;
struct audio_beep_type;
struct audio_meter_ctl;
struct bt_info__bt_dev;
struct clnt_netaddru_t;
struct dev_insf_struct;
struct dev_select_info;
struct diag0_buff_type;
struct dmem_viper_type;
struct eeprom_gen_info;
struct elem_status_buf;
struct excal_tape_info;
struct floppy_geometry;
struct ieee8025_sr_hdr;
struct inode__i_select;
union ioconfig_record;
struct ioctl_intr_type;
struct kd_rfs_dispatch;
struct mir_state__pair;
struct mpe_som_aux_hdr;
struct nd_hostservlist;
struct nispasswd_error;
struct nlm4_unlockargs;
struct pdc_pat_cell_ba;
struct pdc_pat_cell_ca;
struct pdc_pat_cell_mc;
struct pfn_to_virt_ptr;
struct psm_public_info;
struct rdb_comm_area_t;
struct rpcb_entry_list;
struct rpcb_rmtcallres;
struct sense_2_aligned;
struct short_hand_verf;
struct sioc_bus_limits;
struct sioc_lun_limits;
struct sioc_tgt_limits;
struct slot_entry_type;
struct snap8025_sr_hdr;
struct som_exec_auxhdr;
struct stape_event_log;
struct tls_init_record;
struct HPPAC_INFO_REC;
struct Ki_nfsvarlen_t;
struct T_unitdata_ind;
struct T_unitdata_req;
struct _CompositePart;
struct _ConstraintRec;
struct _CoreClassPart;
struct _LC_core_ldx_t;
struct _LC_monetary_t;
struct _OnTheSpotData;
struct _OutputDataRec;
struct _PrintStartDoc;
struct _PrintStartJob;
struct _ShellClassRec;
struct _SmcPhase2Wait;
struct _Uil_comp_desc;
struct _XAnyClassinfo;
struct _XExtEventInfo;
union _XICPrivateRec;
union _XIMPrivateRec;
struct _XImage__funcs;
struct _XOCGenericRec;
struct _XOMGenericRec;
struct _XOMMethodsRec;
struct _XValuatorInfo;
struct _XkbBellNotify;
struct _XkbConverters;
struct _XkbDeviceInfo;
struct _XkbKTMapEntry;
struct _XkbKeyNameRec;
struct _XkbLogoDoodad;
struct _XkbMapChanges;
struct _XkbOverlayKey;
struct _XkbOverlayRow;
struct _XkbReadBuffer;
struct _XkbTextDoodad;
struct _XlcCharSetRec;
struct _XmArrowPixmap;
struct _XmComboBoxRec;
struct _XmCwidNodeRec;
struct _XmDisplayInfo;
struct _XmDragIconRec;
struct _XmExtClassRec;
struct _XmGadgetCache;
struct _XmManagerPart;
struct _XmNotebookRec;
struct _XmProtocolRec;
struct _XmShellExtRec;
struct _XmSpinBoxPart;
struct _XtCallbackRec;
struct __fp_dbl_block;
struct __fp_int_block;
struct __nsw_long_err;
struct _output_data_t;
struct _xAnyClassinfo;
struct _xValuatorInfo;
struct _xkbBellNotify;
struct _xkmActionDesc;
struct accepted_reply;
struct acl_entry_patt;
union arg_descriptor;
struct aud_tok_strarr;
struct audio_datainfo;
struct audio_describe;
struct audit_bdy_data;
struct audit_filename;
struct audit_str_data;
struct cio_lnkst_type;
struct cio_poll_chain;
struct cio_pquad_type;
struct cio_vquad_type;
struct clnt_netcfgu_t;
struct crt_fastlock_t;
struct cs_status_type;
struct dad_form_parms;
struct dld_hook_param;
struct dmem_bush_type;
struct dmem_lpmc_type;
struct driver_to_call;
struct drv_table_type;
struct eisa_boot_info;
struct element_status;
struct error_recovery;
struct fclwp_pcb_stat;
struct fclwp_str_stat;
struct geometry_parms;
struct hdl_subpregion;
struct ifnet__ifqueue;
struct io_module_adma;
struct ioctl_cmd_type;
struct iodc_rtn_block;
struct isc_table_type;
struct kd_asyncpageio;
struct kd_queuestart2;
struct kd_thread_exit;
struct klm_unlockargs;
struct lasi_misc_regs;
struct mpe_aux_header;
struct nis_hash_table;
struct nispasswd_verf;
struct nlm4_shareargs;
struct nlm_unlockargs;
struct per_open_entry;
struct physiobufstats;
struct pthread_rwlock;
struct rejected_reply;
struct req_entry_type;
struct rpcbs_addrlist;
struct scsi_cmd_parms;
struct self_audit_rec;
struct shl_descriptor;
struct sioc_bus_parms;
struct sioc_lun_parms;
struct sioc_tgt_parms;
struct snap8023xt_hdr;
struct snap8024xt_hdr;
struct sockaddr_fclwp;
struct strrecvfd_attr;
struct strsendfd_attr;
struct strtraceactive;
struct strtracefuture;
struct svc_netaddru_t;
struct tli_tunables_s;
struct ufs_livetunefs;
struct xsense_aligned;
struct ypall_callback;
struct ypbind_binding;
struct yppushresp_xfr;
struct ypresp_key_val;
struct ypresp_maplist;
union DL_primitives;
struct T_getaddr_ack;
struct T_getaddr_req;
struct T_optmgmt_ack;
struct T_optmgmt_req;
struct T_uderror_ind;
struct T_urgdata_ind;
struct _CodeRangeRec;
struct _CompositeRec;
struct _IceListenObj;
struct _IceWatchProc;
struct _InputDataRec;
struct _IntensityRec;
struct _IntensityTbl;
struct _LC_charmap_t;
struct _LC_collate_t;
struct _LC_numeric_t;
struct _PrintEndPage;
struct _ScanLineList;
struct _XkbAnyAction;
struct _XkbAnyDoodad;
struct _XkbISOAction;
struct _XkbModAction;
struct _XkbPtrAction;
struct _XkbSymMapRec;
struct _XmBackingRec;
struct _XmCommandRec;
struct _XmDesktopRec;
struct _XmDisplayRec;
struct _XmGadgetPart;
struct _XmManagerRec;
struct _XmScreenInfo;
struct _XmSpinBoxRec;
struct _XtActionsRec;
struct __bool_struct;
struct _input_data_t;
struct _pci_bus_info;
struct _xkbMapNotify;
struct _xkbSendEvent;
struct aud_event_tbl;
struct audit_str_hdr;
struct authsys_parms;
struct bus_info_type;
struct crt_diag_args;
struct describe_type;
struct directory_obj;
struct dkbad__bt_bad;
struct dl_header_ext;
struct dreloc_record;
struct fclwp_dg_stat;
struct floppy_format;
struct getquota_args;
struct getquota_rslt;
struct hdl_protrange;
struct hdl_subregion;
struct io_hpib_ident;
struct kd_miss_alpha;
struct kd_queuedone2;
struct kd_queuestart;
struct kd_smount_vfs;
struct kd_umount_vfs;
struct lasi_int_regs;
struct mc_get_config;
struct mc_set_config;
struct mt_dev_struct;
struct nis_hash_data;
struct nlm4_cancargs;
struct nlm4_lockargs;
struct nlm4_shareres;
struct nlm4_testargs;
struct nlm4_testrply;
struct nlm_shareargs;
struct p_rmtcallargs;
struct position_buff;
struct prm_byfsidinf;
struct prm_disk_prio;
struct pst_crashinfo;
struct pst_processor;
struct pst_vm_status;
struct pthread_mutex;
union rpb__pim_info;
struct rpc_createerr;
struct sector_search;
struct siglocal_misc;
struct str_async_ack;
struct strioctl_attr;
struct svc_netcfgu_t;
struct telnet_buffer;
struct ypbind_setdom;
struct ypdelete_args;
struct ypresp_master;
struct ypupdate_args;
struct T_discon_ind;
struct T_discon_req;
struct T_exdata_ind;
struct T_exdata_req;
struct T_ordrel_ind;
struct T_ordrel_req;
union T_primitives;
struct T_unbind_req;
struct XDR__xdr_ops;
struct _FillPolyReq;
struct _FontDataRec;
struct _IcePingWait;
struct _LC_locale_t;
struct _LockInfoRec;
struct _PrintEndDoc;
struct _PrintEndJob;
struct _PutImageReq;
struct _RectObjPart;
struct _XButtonInfo;
struct _XDeviceInfo;
struct _XcmsCmapRec;
struct _XicThaiPart;
struct _XkbAnyEvent;
struct _XkbBehavior;
struct _XkbControls;
struct _XkbGeometry;
struct _XkbNamesRec;
struct _XkbProperty;
struct _XkbStateRec;
struct _XlcResource;
struct _XmColorData;
struct _XmGadgetRec;
struct _XmLabelPart;
struct _XmScreenRec;
struct _XmTranslRec;
struct __nsw_lookup;
struct __num_struct;
struct __save_state;
struct __str_struct;
struct _xButtonInfo;
struct _xDeviceInfo;
struct _xShmLinkReq;
struct _xkbAnyEvent;
struct _xkbGetNames;
struct _xkbGetState;
struct _xkbSetNames;
struct _xkmFileInfo;
struct asp_isr_link;
struct audio_limits;
struct audio_status;
struct audit_string;
struct authdes_cred;
struct authdes_verf;
struct bp_dma_parms;
struct cache_config;
struct caching_page;
struct channel_gain;
struct cio_quadrant;
struct crt_gcslot_t;
struct cryptkeyarg2;
struct device_entry;
struct device_table;
struct dma_A_buflet;
struct eisa_if_info;
struct export_entry;
struct fb_dynam_rel;
struct fc_frame_hdr;
struct frame_marker;
struct ieee8022_hdr;
struct ieee8023_hdr;
struct ieee8024_hdr;
struct import_entry;
union inquiry_data;
struct ip_timestamp;
struct kd_getnewbuf;
struct kd_hardclock;
struct kd_queuedone;
struct key_netstarg;
struct key_netstres;
struct ki_proc_info;
struct klm_lockargs;
struct klm_testargs;
struct klm_testrply;
struct kmeminfo_ptr;
struct load_display;
struct loader_fixup;
struct mc_get_stats;
struct module_entry;
struct mongoose_reg;
struct mountres3_ok;
struct nlm4_testres;
struct nlm_cancargs;
struct nlm_lockargs;
struct nlm_shareres;
struct nlm_testargs;
struct nlm_testrply;
struct p_rmtcallres;
struct pam_response;
struct prm_diskinfo;
struct processorhpa;
struct pss_reserved;
struct pst_crashdev;
struct pst_diskinfo;
struct pst_fileinfo;
struct pst_swapinfo;
struct pthread_cond;
struct ptrace_event;
struct ptrace_state;
struct request_info;
struct sioc_vif_req;
struct snap8022_hdr;
struct snap8023_hdr;
struct snap8024_hdr;
struct straltactive;
struct straltfuture;
struct strpeek_attr;
struct strpmsg_attr;
struct strsthinsert;
struct trace_record;
struct trans_report;
struct tty_drivercp;
struct verify_parms;
struct wsio_if_info;
struct xdr_bytesrec;
struct ypresp_order;
struct C__trystuff;
struct T_error_ack;
struct _FontSetRec;
struct _LC_ctype_t;
struct _LRectangle;
struct _ObjectPart;
struct _POINTBLOCK;
struct _RectObjRec;
struct _VRotateRec;
struct _XOMCoreRec;
struct _XSyncValue;
struct _XkbChanges;
struct _XkbInfoRec;
struct _XkbKeyType;
struct _XkbOutline;
struct _XkbOverlay;
struct _XkbSection;
struct _XlcConvRec;
struct _XmFormPart;
struct _XmFrameRec;
struct _XmLabelRec;
struct _XmListPart;
struct _XmScaleRec;
struct _XmTextPart;
struct _XtResource;
struct _XtStateRec;
struct __iconv_rec;
struct __res_state;
struct __ss_narrow;
struct _lwp_rwlock;
struct _shmControl;
struct _xRectangle;
struct audio_bufio;
struct audio_gains;
struct audio_meter;
struct audio_regio;
struct buflet_info;
struct cache_parms;
struct compl_entry;
struct config_page;
struct cryptkeyarg;
struct cryptkeyres;
struct device_path;
struct dma_A_chain;
struct dma_A_pquad;
struct dmem_status;
struct dom_binding;
struct dtlb_config;
struct etherxt_hdr;
struct fb_header_t;
struct fc_hdr_info;
struct floppy_info;
struct io_map_cntl;
struct ipl_aux_hdr;
struct itlb_config;
struct kd_enqueue2;
struct kd_userproc;
struct kd_vfsmount;
struct keybit_info;
struct ki_kt_state;
struct ki_pk_state;
struct ki_runtimes;
struct kmembuckets;
struct locale_data;
struct mc_identify;
struct mode_6_buff;
struct module_info;
struct module_stat;
struct nd_addrlist;
struct nd_hostserv;
struct nd_mergearg;
struct nis_taglist;
struct nlm4_holder;
struct nlm4_notify;
struct nlm_testres;
struct npd_newpass;
struct npd_request;
struct opaque_auth;
struct pam_message;
struct passwd_info;
struct privgrp_map;
struct psb2160conf;
struct pst_dynamic;
struct pst_ipcinfo;
struct pst_msginfo;
struct pst_seminfo;
struct pst_shminfo;
struct pst_ss_path;
struct rex_ttymode;
struct rmtcallargs;
struct sched_param;
struct scsi_verify;
struct sioc_format;
struct sioc_sg_req;
struct sm_stat_res;
struct sockaddr_in;
struct sockaddr_un;
struct stape_event;
struct strfdinsert;
struct swapfs_info;
struct t_kunitdata;
struct telnet_data;
struct test_header;
struct user__squ_s;
struct utmpidlearr;
struct uxec_testrq;
struct volume_desc;
struct vpd_inquiry;
struct xdr_discrim;
struct xti_state_s;
struct ypbind_resp;
struct ypmap_parms;
struct ypreq_nokey;
struct T_addr_ack;
struct T_addr_req;
struct T_bind_ack;
struct T_bind_req;
struct T_conn_con;
struct T_conn_ind;
struct T_conn_req;
struct T_conn_res;
struct T_data_ind;
struct T_data_req;
struct T_info_ack;
struct T_info_req;
struct _LC_resp_t;
struct _LC_time_t;
struct _OMDataRec;
struct _ObjectRec;
struct _OutputRec;
struct _Vr2_Astrs;
struct _Vr2_Bstrs;
struct _WidgetRec;
struct _XAxisInfo;
struct _XIMFilter;
struct _XLockInfo;
union _XkbAction;
struct _XkbBounds;
union _XkbDoodad;
struct _XmFormRec;
struct _XmListRec;
struct _XmSashRec;
struct _XmTextRec;
struct __sigset_t;
struct __sub_ctxt;
struct __ucontext;
union _kregister;
struct _lwp_mutex;
struct _posix_sem;
struct _xAxisInfo;
struct _xkbGetMap;
struct _xkbSetMap;
struct audio_gain;
struct audit_sock;
struct block_desc;
struct break_inst;
struct cam_buffer;
struct cback_data;
struct cntrl_desc;
struct compl_head;
struct cs4215conf;
struct disc_recon;
struct dkdgnreslt;
struct dma_buflet;
struct dumpmodule;
struct eirrswitch;
struct eisa_iomap;
struct exportnode;
struct fb_imp_exp;
struct fb_lib_ver;
struct filter_rec;
struct floppy_cmd;
struct getcredres;
struct hdlpregion;
struct ib_request;
struct ioctl_type;
struct iomap_data;
struct itimerspec;
struct kd_1string;
struct kd_2string;
struct kd_enqueue;
struct kd_memfree;
struct kd_pregion;
struct kd_rfscall;
struct kd_syscall;
struct ki_iovec32;
struct ki_iovec64;
struct ki_p_state;
struct ki_space64;
struct ki_timeval;
struct klm_holder;
struct knetconfig;
struct lockaction;
struct log_result;
struct lst_header;
struct lwp_status;
struct map_struct;
struct mark_parms;
struct mc_get_mib;
struct mc_set_mib;
struct mcast_list;
struct mioc_rksym;
struct mount_data;
struct msemaphore;
struct nis_object;
struct nis_result;
struct nis_server;
struct nlm4_share;
struct nlm_holder;
struct nlm_notify;
struct npd_update;
struct ns_log_rec;
struct ns_request;
struct pam_handle;
struct pim_narrow;
struct pir_header;
struct pquad_type;
struct pr_default;
struct providersw;
struct pst_lvinfo;
struct pst_stable;
struct pst_static;
struct pst_status;
struct pst_vminfo;
struct pty_select;
struct radix_mask;
struct radix_node;
struct reply_body;
struct rex_result;
struct rmtcallres;
struct routeaddrs;
struct rpc_timers;
struct rpcb_entry;
struct scsi_erase;
union sense_data;
struct shl_symbol;
struct sigcontext;
struct spraycumul;
struct statsswtch;
struct str_config;
struct stroptions;
struct t_unitdata;
struct vas_window;
struct ypresp_val;
struct ypresponse;
struct PLT_entry;
struct SPECSTATE;
struct _CorePart;
struct _FonScope;
struct _InputRec;
struct _XDisplay;
struct _XExtData;
struct _XKeyInfo;
struct _XPrivate;
struct _XSpecRec;
struct _XkbColor;
union _XkbEvent;
struct _XkbPoint;
struct _XkbShape;
struct _XmExtRec;
struct _XmRegion;
struct __dirdesc;
struct __ksigset;
struct __siginfo;
struct __svcxprt;
struct _lwp_cond;
struct _lwp_sema;
struct _prefix_t;
struct _xKeyInfo;
struct _xSegment;
struct _xkbEvent;
struct acl_entry;
struct audit_arg;
struct audit_hdr;
struct bc_module;
struct beep_info;
struct call_body;
struct cdfs_args;
struct cdxar_hsg;
struct cdxar_iso;
struct cmd_parms;
struct cp_result;
struct cs80_2cmd;
struct db_result;
union des_block;
struct desparams;
struct dev_entry;
struct dev_field;
struct dl_header;
struct dld_parms;
struct dma_funcs;
struct dma_parms;
struct dump_args;
struct dyn_major;
struct entry_col;
struct entry_obj;
struct ether_arp;
struct ether_hdr;
struct exportent;
struct fclwp_pcb;
struct fd_result;
struct func_slot;
struct gpio1_ocs;
struct group_obj;
struct groupnode;
struct hdlregion;
struct inquiry_2;
struct interrupt;
struct io_module;
struct itimerval;
struct kd_active;
struct kd_brelse;
struct kd_closef;
struct kd_do_bio;
struct kd_region;
struct kd_resume;
struct kd_smount;
struct kd_struct;
struct ki_config;
struct kmemiov32;
struct kmemstats;
struct kmemusage;
struct load_info;
struct log_entry;
struct lwpcycles;
struct max_cddir;
struct min_cddir;
struct mir_state;
struct misc_info;
struct mod_kpath;
struct mod_minfo;
struct modstatus;
struct mountbody;
struct mountres3;
struct netconfig;
struct nis_sdata;
struct nlm4_lock;
struct nlm4_stat;
struct nlm_share;
struct node_info;
struct oipc_perm;
struct osemid_ds;
struct oshmid_ds;
struct page_desc;
struct ping_args;
struct pr_passwd;
struct proc_exec;
struct proc_info;
struct pst_osdep;
struct pst_ucomm;
struct pstcycles;
struct pstsigset;
struct rex_start;
struct rpcb_stat;
struct rsrc_node;
struct sense_hdr;
struct sigaction;
struct siglocalx;
struct size_info;
struct socklocks;
struct sockproto;
struct som_entry;
struct statstime;
struct str_mlist;
struct streamadm;
struct streamtab;
struct strrecvfd;
struct sw_intloc;
struct sys_clock;
struct t_kpalive;
struct t_optmgmt;
struct table_col;
struct table_obj;
struct trace_ids;
struct unit_desc;
struct ypmaplist;
struct ypreq_key;
struct ypreq_xfr;
struct yprequest;
struct PSMParam;
struct T_ok_ack;
struct _DefTree;
struct _IceConn;
struct _SmcConn;
struct _SmsConn;
struct _TwoDInt;
struct _UDCArea;
struct _XCVList;
struct _XIMText;
struct _XRegion;
struct _XcmsCCC;
struct _XkbDesc;
struct _XkbMods;
struct _XtTMRec;
struct __client;
struct __cycles;
struct _dirdesc;
struct _physadr;
struct _xkbBell;
struct afswitch;
struct aud_flag;
struct aud_type;
struct bandinfo;
struct blmodeio;
struct booleans;
struct bootpent;
struct cap_list;
struct capacity;
struct cddir_rr;
struct copyresp;
struct corehead;
struct corehpa2;
struct deactarg;
struct dev_flag;
struct dev_name;
struct dev_path;
struct dil_info;
struct diliovec;
struct dma_serv;
struct endpoint;
struct fb_unsat;
struct fhstatus;
struct forkstat;
struct free_rtn;
struct hid_1024;
struct hpib_cmd;
struct ifinfo_s;
struct io_parms;
struct ioconfig;
struct iodetail;
struct ipc_perm;
struct ipoption;
struct irinfo_s;
struct jwinsize;
struct kd_fault;
struct kd_mount;
struct kd_p_lle;
struct kd_sched;
struct kd_setrq;
struct kd_swtch;
struct ki_iovec;
struct klm_lock;
struct klm_stat;
struct ksysinfo;
struct lgpg_env;
struct link_obj;
struct mallinfo;
struct mc_event;
struct mod_mreg;
struct mod_path;
struct mod_smod;
struct mod_type;
struct nis_attr;
struct nlm4_res;
struct nlm_lock;
struct nlm_stat;
struct oar_mask;
struct pam_conv;
struct parm_rec;
struct pathname;
struct pim_wide;
struct pir_body;
struct pm__list;
struct pmaplist;
struct ppathcnf;
struct pr_field;
struct prc_host;
struct protoent;
struct pscoproc;
struct psdrvnam;
struct psfileid;
struct pshwpath;
struct psm_item;
struct pst_dump;
struct pty_info;
struct reqvalue;
struct rp__list;
struct rpcblist;
struct s_passwd;
struct sem_undo;
struct semid_ds;
struct shmid_ds;
struct sigevent;
struct siglocal;
struct sigstack;
struct sockaddr;
struct sprayarr;
struct statsvar;
struct str_list;
struct stralive;
struct strapush;
struct strdconf;
struct strioctl;
struct sva_type;
struct t_discon;
struct t_linger;
struct t_opthdr;
struct tcpiphdr;
struct timespec;
struct timezone;
struct tostruct;
struct transdel;
struct two_time;
union u_R_addr;
struct udpiphdr;
struct ufs_args;
struct unixcred;
struct utmpidle;
struct vnodeops;
struct whpde2_0;
struct yppasswd;
struct Elf_Scn;
struct _PCI_ID;
union _XEvent;
struct _XImage;
struct _XkbKey;
struct _XkbRow;
struct __reg32;
struct __reg64;
struct __stack;
struct __strs2;
struct __strs3;
struct __strs4;
union _kcaddr;
union _kgaddr;
struct _xEvent;
struct _xPoint;
struct amg_pda;
struct bh_sema;
struct bt_info;
struct callout;
struct ccblock;
struct copyreq;
struct corehpa;
struct dev_asg;
struct disktab;
struct fc_addr;
struct fd_args;
struct fd_info;
struct fssinfo;
struct fswdevt;
struct hostent;
struct hpde2_0;
struct hw_path;
struct icommon;
struct igmpmsg;
struct in_addr;
struct inquiry;
struct ip_mreq;
struct kd_exec;
struct kd_fork;
struct kd_mmap;
struct kd_open;
struct kd_swap;
struct kdm_dll;
struct kmemiov;
struct label_t;
struct linkblk;
struct lockmap;
struct log_ctl;
struct lprstat;
struct ltchars;
struct mem_map;
struct mirinfo;
struct mq_attr;
struct mrtstat;
struct msghdr2;
union name_pt;
struct nc_hash;
struct ncstats;
struct nfs_fh3;
struct nis_oid;
struct nis_tag;
struct nlist64;
struct nlm_res;
struct nmparms;
struct objdata;
struct panic_t;
struct pollsth;
struct pr_flag;
struct pr_term;
struct pregion;
struct promisc;
struct protosw;
struct pss_blk;
struct pst_cmd;
struct psttime;
struct reclock;
struct rpc_err;
struct rpc_msg;
struct rtentry;
struct rw_lock;
struct sc_info;
struct sctl_io;
struct seminfo;
struct sense_2;
struct servent;
struct sfe_rec;
struct shminfo;
struct sm_name;
struct sm_stat;
struct sockbuf;
struct sotimeq;
struct statvfs;
struct strpeek;
struct strpmsg;
struct svc_req;
struct swapmap;
struct swaptab;
struct syswait;
struct t_field;
struct t_kinfo;
struct t_uderr;
struct termiox;
struct tftphdr;
struct timeout;
struct timeval;
struct utimbuf;
struct utmparr;
struct utsname;
struct version;
struct vifinfo;
struct vmmeter;
struct vmtotal;
struct vnotify;
struct winsize;
struct xti_rcv;
struct Fd_set;
struct _Share;
struct __auth;
struct __strs;
struct __undo;
struct _horse;
struct afhash;
struct ar_hdr;
struct arphdr;
struct arpreq;
struct aux_id;
struct b_sema;
struct bt_lsm;
struct cblock;
struct cdnode;
struct ciodio;
struct cpu_id;
struct d0stat;
struct d0time;
struct devpri;
struct dirent;
struct domain;
struct dsplog;
struct eucioc;
struct fb_exp;
struct fc_arp;
struct fd_set;
struct fhsize;
struct g_regs;
struct hdlvas;
struct header;
struct hw_ift;
struct ifaddr;
struct ifconf;
struct iocblk;
struct ipcmap;
struct ipovly;
struct joblog;
struct kd_fd2;
struct linger;
struct lkinfo;
struct loghdr;
struct mapent;
struct mbstat;
struct mfcctl;
struct mntent;
struct mon_id;
struct msgbuf;
struct msghdr;
struct mtimer;
struct nc_lru;
struct ncache;
struct netbuf;
struct netent;
struct netobj;
struct passwd;
struct pollfd;
struct psfsid;
struct pss_fs;
struct rawarc;
struct region;
struct rlimit;
struct rpcent;
struct rquota;
struct rtlist;
struct rusage;
struct sembuf;
struct sgttyb;
union sigval;
struct sigvec;
struct sknode;
struct socket;
struct statfs;
struct status;
struct strbuf;
struct subc_t;
struct swpdbd;
struct symbol;
struct syserr;
struct t_bind;
struct t_call;
struct t_flag;
struct t_info;
struct tchars;
struct tcphdr;
struct tdkseg;
struct termio;
struct tlabel;
struct udphdr;
struct vfddbd;
struct vfsops;
struct vifctl;
struct vtimes;
struct xp_ops;
struct xsense;
struct _XLCd;
struct __sem;
struct __xsi;
struct _quad;
struct _xArc;
struct _xReq;
struct aiocb;
struct alias;
struct bnode;
struct broot;
struct bufhd;
struct cddir;
struct cdfid;
struct clist;
struct crash;
struct datab;
struct dkbad;
struct dqblk;
struct dquot;
struct entry;
struct event;
struct flock;
struct fspri;
struct fstab;
struct group;
struct hid_4;
struct hil11;
struct hil16;
struct icont;
struct ifnet;
struct ifreq;
struct inode;
struct iobuf;
struct iovec;
struct kd_fd;
struct lconv;
struct lines;
struct lockx;
struct lprio;
struct magic;
struct minfo;
struct mtget;
struct my_id;
struct nlist;
struct p_lle;
struct pir_t;
struct ps2_4;
struct psdev;
union pstun;
struct qband;
struct qinit;
struct queue;
struct route;
struct rtreq;
union semun;
struct stats;
struct svcfh;
struct swrev;
struct tcmdq;
struct thrpt;
struct timeb;
struct tmask;
struct ucred;
struct unpcb;
struct ustat;
struct utmpx;
struct venom;
struct vfdcw;
struct viper;
struct vnode;
struct whpde;
struct xauth;
struct GPIO;
struct _XIC;
struct _XIM;
struct _XOC;
struct _XOM;
struct _Xic;
struct _Xim;
union _kpc;
struct acct;
struct csum;
struct eft2;
struct eft4;
struct eft5;
struct gfsw;
struct hil2;
struct hpde;
struct icmp;
union idbd;
struct igmp;
struct lock;
struct mbuf;
struct msgb;
struct mtab;
struct mtop;
struct phdr;
struct pmap;
struct proc;
struct rate;
struct rpcb;
struct rrec;
struct sema;
struct spwd;
struct sque;
struct stat;
union svfd;
struct sync;
struct term;
struct ufid;
struct user;
struct utmp;
union wait;
struct Elf;
struct FTW;
struct XDR;
struct buf;
struct cnt;
struct dbd;
struct dir;
struct fid;
struct fis;
struct fss;
struct gdd;
struct hdr;
struct map;
struct mon;
struct pcb;
struct rpb;
struct skl;
struct tbf;
struct tcb;
struct tms;
struct var;
struct vas;
struct vfd;
struct vfs;
struct bf;
struct cg;
struct fs;
struct ha;
struct ip;
struct sa;
struct tm;

struct nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547___E109A5D6027DEB813545D8BF49E916D8 {struct hostent *hent;int *herrno_p;};
struct nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2___E109A5D6027DEB813545D8BF49E916D8 {struct hostent *hent;int *herrno_p;};
struct __siginfo_________351CB38BF906F3D7FDE4000F5FE338E8___CAB2F663BD9968F95DBAF91C3E75F559 {int __status;};
struct __siginfo___1490A58E020900B0C97A0746962B2B75___3FF08C5ADC6BC526D5A84F94DC2433A6 {void *__addr;void *__lockpage;int __dev_id;};
struct __siginfo___1490A58E020900B0C97A0746962B2B75___92A7EE6A1909C09ADD6B4865B3C321AB {int __fd;int __band;};
struct __siginfo___1490A58E020900B0C97A0746962B2B75___AABDA256947000BB9B5485581E6F54AA {void *__addr;};
struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___0740FC17DC46FEE1E8586A6E9026ED35 {struct callout *tc_thdr_next;};
struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___9A6B389160A794C8B35BE21A310C2350 {int s1;int s2;};
struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___CDFB08817BACAD3B52BC51E53A98F9E8 {int RE_errno;int RE_t_errno;};
struct dsplog___75873FF22CE910D1FBC726C0B659971B___5B9278AD49AD5E051BD6444728AFC48A {char d_file[8];int d_cnt;int d_trunc;};
struct GPIO___CD29CE3F9A5F74D2438ACA80101F6228___366513553158DE38125C184A44CDE853 {unsigned char upper;unsigned char lower;};
struct user___3B359A40351122B121A37E0734670C57___C57B77E03EE9D788D67ADCD794C5AE6F {int R_val1;int R_val2;};
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___00976F6E7C414A8449E5EC494793DABD {unsigned char dummy3;};
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___41C6ACE15BB05B8ADC571FCC2068F6F8 {unsigned char dummy;};
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___773984751D4B72F60DA8EA7FE0E4332C {unsigned char dummy2;};
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___F809745BD539DDC0BF3F6B58B72333C1 {unsigned char dummy1;};
struct ____DBFE4481F7E01E99261898FD11F89AAA___1C4AE2D93AE23D77F4B47FB682A792B0 {short catalog_class;short index;};
union _06E84F0011827D3FA6D8BE033B4E11AE___6D780EA0E880820FFFF864F1AF607297 {int hw_test_num;};
struct _1168B6D6BD072B799143AF246A5E2670___CDF557A927ED2BFF93B09908D4EFCA76 {int x;int y;};
struct _369915EE1C7DFDD007AB874D1EA2C9E1___89204FF0ACC339210648FEBB897D4AF4 {unsigned int gp_unused2;};
struct _465FCB570093E3F643B603A6D3E8A1C4___9C319EEE4375217EAF366142772AFB9D {unsigned int type;unsigned int s_opt;};
union _5C140DC956AB8D8D3A2E81F1CC511829___B322D948E3ED25D84ECF3A20AB2BF161 {char b[20];short s[10];int l[5];};
union _BBE251C902F5B1253853EC586FC56F1D___C64D297F1DF5A22C084AC26BD4E7327B {short subsys_idy;};
struct _D6F3C0EC0794CF7A820CAC9334CFC732___634CF919C5FB93A8137AC8DCFB324513 {char hp_type;char hp_count;char hp_buff[64];char hp_pad[2];};
struct _D6F3C0EC0794CF7A820CAC9334CFC732___F308977B809EAB96C4993BAEDE5FE847 {int port;};
struct _E74415E298CED5C737EBED6687E120B3___FD81188420716845991C1281658F5667 {unsigned int max_baud;};
struct icommon_________F0CF6F5BDB5C5FE94D6E2190A27003CF__ic_fifo {short if_frptr;short if_fwptr;short if_frcnt;short if_fwcnt;short if_fflag;short if_fifosize;};
struct ____OldXSizeHints___CDF557A927ED2BFF93B09908D4EFCA76 {int x;int y;};
union pfn_to_virt_entry___E1841ADC36515B8A77C0FB12DDA66068 {unsigned int offset_page;struct pfn_to_virt_entry___E1841ADC36515B8A77C0FB12DDA66068__alias *alias;};
struct arg_descriptor___C93BFC27091A7443C74560EEB4626815 {int arg_type;};
struct aud_tok_strarr___88F822424AE28B2529C61A3800A9D8A2 {char str[1];};
union crt_diag_args___336BFC932CC464554F53EA629C0605BE {unsigned int diag_attributes;unsigned char *diag_mapaddr;};
enum MACRO_sz_xChangeDeviceDontPropagateListReq {sz_xChangeDeviceDontPropagateListReq = 12,};
union swaptab___528A43D156F95A0146E09811518D2E1A {int st_start;};
union tftphdr___E231DD2B7A2AA83F99CCA027C312551B {short tu_block;short tu_code;char tu_stuff[1];};
struct cdnode___881309E4F9CA653DD687A11B61F33914 {struct cdnode *cdf_freef;struct cdnode **cdf_freeb;};
struct sigval___014CB6D68A4C85AD73214A8B9F40ED8B {int __svi_int;};
enum MACRO_OldNumPropStandardColormapElements {OldNumPropStandardColormapElements = 8,NumPropStandardColormapElements = 10,};
struct inode___FC33DB27FE0F857369E6C6F32AC20866 {struct inode *if_freef;struct inode **if_freeb;};
struct _______00976F6E7C414A8449E5EC494793DABD {unsigned char dummy3;};
struct _______1C4AE2D93AE23D77F4B47FB682A792B0 {short catalog_class;short index;};
struct _______41C6ACE15BB05B8ADC571FCC2068F6F8 {unsigned char dummy;};
struct _______773984751D4B72F60DA8EA7FE0E4332C {unsigned char dummy2;};
struct _______F809745BD539DDC0BF3F6B58B72333C1 {unsigned char dummy1;};
enum MACRO_sz_smSaveYourselfPhase2RequestMsg {sz_smSaveYourselfPhase2RequestMsg = 8,};
enum MACRO_sz_xGetDeviceDontPropagateListReq {sz_xGetDeviceDontPropagateListReq = 8,sz_xGetDeviceDontPropagateListReply = 32,};
enum MACRO_sz_xGetSelectedExtensionEventsReq {sz_xGetSelectedExtensionEventsReq = 8,sz_xGetSelectedExtensionEventsReply = 32,};
enum MACRO_sz_xHPGetDeviceModifierMappingReq {sz_xHPGetDeviceModifierMappingReq = 8,sz_xHPGetDeviceModifierMappingReply = 32,};
enum MACRO_sz_xHPSetDeviceModifierMappingReq {sz_xHPSetDeviceModifierMappingReq = 12,sz_xHPSetDeviceModifierMappingReply = 32,};
enum MACRO_sz_xieTecDecodeUncompressedSingle {sz_xieTecDecodeUncompressedSingle = 8,sz_xieTecDecodeUncompressedTriple = 16,};
enum MACRO_sz_xieTecEncodeUncompressedSingle {sz_xieTecEncodeUncompressedSingle = 4,sz_xieTecEncodeUncompressedTriple = 12,};
struct svfd___282F8E0CA4B08493EA9E1EA060A0731E {int pg_vfd;};
union user___E4D8091639DC7336013EE29C556C46C6 {double s_dummy;int s_stack[1];};
struct wait___A9B06B564058D387211EDDD78142AD67 {unsigned short w_pad;unsigned int w_Stopval;};
struct wait___F04A95226779EAA910C193CF534C5AD2 {unsigned short w_pad;unsigned int w_Termsig;};
enum MACRO_MultibufferUpdateActionUndefined {MultibufferUpdateActionUndefined = 0,MultibufferUpdateActionBackground = 1,MultibufferUpdateActionUntouched = 2,MultibufferUpdateActionCopied = 3,};
enum MACRO_sz_xieTypConvertFromRGBTechnique {sz_xieTypConvertFromRGBTechnique = 2,};
union fis___D2FBE5AA72B3FE89D07E39BB3AE19398 {float f;int i;unsigned char s[100];char *cp;};
enum MACRO_XIMStringConversionSubstitution {XIMStringConversionSubstitution = 0x1,XIMStringConversionRetrival = 0x2,};
enum MACRO_XmScrolledWindowClassExtVersion {XmScrolledWindowClassExtVersion = 1,};
enum MACRO_sz_xGetDeviceModifierMappingReq {sz_xGetDeviceModifierMappingReq = 8,};
enum MACRO_sz_xListInstalledColormapsReply {sz_xListInstalledColormapsReply = 32,};
enum MACRO_sz_xSetDeviceModifierMappingReq {sz_xSetDeviceModifierMappingReq = 8,sz_xSetDeviceModifierMappingReply = 32,};
enum MACRO_sz_xieTecGeomAntialiasByLowpass {sz_xieTecGeomAntialiasByLowpass = 4,sz_xieTecGeomBilinearInterpolation = 0,};
enum MACRO_sz_xieTecWhiteAdjustCIELabShift {sz_xieTecWhiteAdjustCIELabShift = 12,};
union ____6D780EA0E880820FFFF864F1AF607297 {int hw_test_num;};
union ____C64D297F1DF5A22C084AC26BD4E7327B {short subsys_idy;};
enum MACRO_PTHREAD_MUTEX_YIELDFREQDEFAULT {PTHREAD_MUTEX_YIELDFREQDEFAULT_NP = 0,PTHREAD_MUTEX_YIELDNEVER_NP = -1,};
enum MACRO_sz_xHPGetDeviceKeyMappingReply {sz_xHPGetDeviceKeyMappingReply = 32,sz_xHPChangeDeviceKeyMappingReq = 12,};
enum MACRO_sz_xHPSynchronizeColorRangeReq {sz_xHPSynchronizeColorRangeReq = 16,sz_xHPGetServerModeReq = 8,};
enum MACRO_sz_xPrintGetImageResolutionReq {sz_xPrintGetImageResolutionReq = 8,sz_xPrintGetImageResolutionReply = 32,};
enum MACRO_sz_xPrintSetImageResolutionReq {sz_xPrintSetImageResolutionReq = 12,sz_xPrintSetImageResolutionReply = 32,};
enum MACRO_sz_xRecordUnregisterClientsReq {sz_xRecordUnregisterClientsReq = 12,};
enum MACRO_sz_xieFloExportClientHistogram {sz_xieFloExportClientHistogram = 20,sz_xieFloExportClientLUT = 32,};
enum MACRO_sz_xieTypConvertToRGBTechnique {sz_xieTypConvertToRGBTechnique = 2,};
enum MACRO_xieValDecodeUncompressedSingle {xieValDecodeUncompressedSingle = 2,xieValDecodeUncompressedTriple = 3,xieValDecodeG31D = 4,xieValDecodeG32D = 6,xieValDecodeG42D = 8,xieValDecodeJPEGBaseline = 10,xieValDecodeJPEGLossless = 12,xieValDecodeTIFF2 = 14,xieValDecodeTIFFPackBits = 16,};
enum MACRO_MultibufferUpdateHintFrequent {MultibufferUpdateHintFrequent = 0,MultibufferUpdateHintIntermittent = 1,MultibufferUpdateHintStatic = 2,};
enum MACRO_sz_xChangeDeviceKeyMappingReq {sz_xChangeDeviceKeyMappingReq = 8,};
enum MACRO_sz_xChangeWindowAttributesReq {sz_xChangeWindowAttributesReq = 12,};
enum MACRO_sz_xGetDeviceButtonMappingReq {sz_xGetDeviceButtonMappingReq = 8,sz_xGetDeviceButtonMappingReply = 32,};
enum MACRO_sz_xHPGetCurrentDeviceMaskReq {sz_xHPGetCurrentDeviceMaskReq = 12,sz_xHPGetCurrentDeviceMaskReply = 32,};
enum MACRO_sz_xPrintGetPageDimensionsReq {sz_xPrintGetPageDimensionsReq = 8,sz_xPrintGetPageDimensionsReply = 32,};
enum MACRO_sz_xPrintRehashPrinterListReq {sz_xPrintRehashPrinterListReq = 4,sz_xPrintCreateContextReq = 16,};
enum MACRO_sz_xSetDeviceButtonMappingReq {sz_xSetDeviceButtonMappingReq = 8,sz_xSetDeviceButtonMappingReply = 32,};
enum MACRO_sz_xieTecColorAllocRequantize {sz_xieTecColorAllocRequantize = 4,sz_xieTecClipScale = 48,};
enum MACRO_sz_xieTecDitherErrorDiffusion {sz_xieTecDitherErrorDiffusion = 4,};
enum MACRO_sz_xieTypWhiteAdjustTechnique {sz_xieTypWhiteAdjustTechnique = 2,sz_xieFloImportClientLUT = 32,sz_xieFloImportClientPhoto = 48,};
enum MACRO_sz_xkbIndicatorDoodadWireDesc {sz_xkbIndicatorDoodadWireDesc = 20,};
typedef struct _XIMPreeditStateNotifyCallbackStruct XIMPreeditStateNotifyCallbackStruct;
enum MACRO_CIO_INVALID_ADAPTER_REVISION {CIO_INVALID_ADAPTER_REVISION = -22,};
enum MACRO_XtConstraintExtensionVersion {XtConstraintExtensionVersion = 1,};
enum MACRO_sz_xChangeKeyboardControlReq {sz_xChangeKeyboardControlReq = 8,sz_xBellReq = 4,};
enum MACRO_sz_xChangeKeyboardMappingReq {sz_xChangeKeyboardMappingReq = 8,};
enum MACRO_sz_xGetDeviceMotionEventsReq {sz_xGetDeviceMotionEventsReq = 16,sz_xGetDeviceMotionEventsReply = 32,};
enum MACRO_sz_xHPChangeDeviceControlReq {sz_xHPChangeDeviceControlReq = 12,};
enum MACRO_sz_xHPDeviceAutoRepeatOffReq {sz_xHPDeviceAutoRepeatOffReq = 8,sz_xHPPromptReq = 12,};
enum MACRO_sz_xPrintGetContextScreenReq {sz_xPrintGetContextScreenReq = 8,sz_xPrintGetContextScreenReply = 32,};
enum MACRO_sz_xRecordRegisterClientsReq {sz_xRecordRegisterClientsReq = 20,};
enum MACRO_sz_xieFloExportDrawablePlane {sz_xieFloExportDrawablePlane = 20,sz_xieFloExportLUT = 24,};
enum MACRO_sz_xieTecGeomAntialiasByArea {sz_xieTecGeomAntialiasByArea = 4,};
enum MACRO_sz_xieTecGeomNearestNeighbor {sz_xieTecGeomNearestNeighbor = 4,sz_xieTecHistogramFlat = 0,};
enum MACRO_sz_xieTecHistogramHyperbolic {sz_xieTecHistogramHyperbolic = 8,sz_xieTecWhiteAdjustNone = 0,};
enum MACRO_sz_xkbGetIndicatorStateReply {sz_xkbGetIndicatorStateReply = 32,sz_xkbGetIndicatorMapReq = 12,};
struct _XmCascadeButtonGCacheObjClassPart {int foo;};
typedef struct pdc_pat_mem_read_state_rtn_block pdc_pat_mem_read_state_rtn_block_t;
typedef struct pdc_pat_pd_get_pdc_rev_rtn_block pdc_pat_pd_get_pdc_rev_rtn_block_t;
enum _003F63A829E52477BDB4080710A1139D {preorder = 0x0,postorder = 0x1,endorder = 0x2,leaf = 0x3,};
enum _00936E974D231F5970CA52507412F98C {XmGRID = 0x1,XmCELLS = 0x2,};
enum _0112955827FC2F1F3D73B2DA97E42271 {XSyncPositiveTransition = 0x0,XSyncNegativeTransition = 0x1,XSyncPositiveComparison = 0x2,XSyncNegativeComparison = 0x3,};
enum _0137FC1D90824DC69895A8521CEA4F5E {XmMATCH_DEPTH = 0x0,XmDYNAMIC_DEPTH = 0x1,};
enum _0232AD16D6C3E7FDD249CAB34FDC4361 {XmPLACE_TOP = 0x0,XmPLACE_ABOVE_SELECTION = 0x1,XmPLACE_BELOW_SELECTION = 0x2,};
enum _02B2F3591FEAEB4334C5D9D93533B7DF {XmVISIBILITY_UNOBSCURED = 0x0,XmVISIBILITY_PARTIALLY_OBSCURED = 0x1,XmVISIBILITY_FULLY_OBSCURED = 0x2,};
enum _037ACE1B9B4B1A25B81D6E036414A9A9 {XmNUMERIC = 0x3,};
struct _0490652D71022E8A5FAA6A6EE2F3573E {int dl_target_value;int dl_accept_value;};
enum _060345A566748B6B7B3029A3D61D112D {TTS_WASSUSPENDED = 0x1,TTS_WASSLEEPING = 0x2,TTS_WASRUNNING = 0x4,TTS_WAITEDFOR = 0x8,TTS_INSYSCALL = 0x10,TTS_32BIT = 0x20,TTS_ATEXIT = 0x40,};
enum _063E23777D15350DF8C6D5AD0B44BA1D {NL_LTR = 0x0,NL_RTL = 0x1,};
enum _06C69AFBDB740103FE12417D7C2CD105 {R_INVALID_MACHINE = 0x0,R_PARISC = 0x1,};
enum _06C973D9A4916A3B799C0BC14C575189 {XmPAGE = 0x1,XmMAJOR_TAB = 0x2,XmMINOR_TAB = 0x3,XmSTATUS_AREA = 0x4,XmPAGE_SCROLLER = 0x5,};
struct _0769C413302D914EB03B061AECACDC27 {int type;int version_index;char *vendor;char *release;};
struct _086284109A45697A934DE255CD0A4CB0 {int type;char *error_message;};
enum _0A06CB5D611205B8E36B75ADDFBFE8DC {XmEXTERNAL_HIGHLIGHT = 0x0,XmINTERNAL_HIGHLIGHT = 0x1,};
enum _0A09C6BF7D777191F7534F5AEEECDF00 {XmPARSE_ERROR = 0x0,XmPARSE_NO_UNITS = 0x1,XmPARSE_UNITS_OK = 0x2,};
struct _0B70C6F502040464A5F78A20545EAF54 {int tts_pathlen;};
struct _0CDC4BC8286924C5BFA22623C4B7938F {unsigned char byte0;unsigned int byte_1_sp;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4_parm_len;unsigned int byte_5_link;};
struct _0FFC4F2ED9639CB540D82866D6DE553D {unsigned int flags;int input;int initialState;unsigned int iconPixmap;unsigned int iconWindow;int iconX;int iconY;unsigned int iconMask;unsigned int windowGroup;};
struct _101E059DA351EB649268BB07F6C1B328 {int wait_attr;int wait_time;};
enum _1245A1FB5F4A3D60B68851188167E7C1 {XSyncAbsolute = 0x0,XSyncRelative = 0x1,};
enum _12E524B91CF51C80381CF2D49C265A54 {XmSTATIC = 0x0,XmDYNAMIC = 0x1,};
struct _13C78DD7EDF1CF1C4AE9B0D54E891AA2 {short x;short y;};
enum _142CFC6DDCC083014C014320121AA9F9 {XmDROP_FAILURE = 0x0,XmDROP_SUCCESS = 0x1,};
enum _1579E08CF1665CA920D08737F0720C47 {XmQUICK_NAVIGATE = 0x1,XmINVALID_MATCH_BEHAVIOR = 0x2,};
struct _15DEA2B51142D972C402EED3BEFCD481 {short __r;short __g;short __b;};
enum _16895558D4BDD217FAFD5E9629D844BC {Not_used = 0x0,F_char = 0x1,F_uchar = 0x2,F_int16 = 0x3,F_uint16 = 0x4,F_int32 = 0x5,F_uint32 = 0x6,F_int64 = 0x7,F_uint64 = 0x8,F_float = 0x9,F_double = 0xA,F_Null_string = 0xB,F_Len_string = 0xC,F_fields_done = 0xD,};
struct _16CFC57C4AEAAC7816B638D66FDFD80A {int vendor_specific;};
enum _17DC033B3C2AE84FB8F187DC408B09AC {XmTOP_LEVEL_ENTER = 0x0,XmTOP_LEVEL_LEAVE = 0x1,XmDRAG_MOTION = 0x2,XmDROP_SITE_ENTER = 0x3,XmDROP_SITE_LEAVE = 0x4,XmDROP_START = 0x5,XmDROP_FINISH = 0x6,XmDRAG_DROP_FINISH = 0x7,XmOPERATION_CHANGED = 0x8,};
struct _186F4C82598CEA2809B98BC2836275EF {int dl_min;int dl_max;};
enum _190C3184BA7AC20E926F5102B254E542 {XmMAX_ON_TOP = 0x0,XmMAX_ON_BOTTOM = 0x1,XmMAX_ON_LEFT = 0x2,XmMAX_ON_RIGHT = 0x3,};
struct _19819260117A2122793EF6A7F838A8D8 {short x;short y;short width;short height;};
enum _1A11D3E47C98278181772FCE0DF81158 {XmWINDOW = 0x0,XmCURSOR = 0x2,XmDRAG_WINDOW = 0x3,};
enum _1A4BEB2B3031FA783E952A85A1F3D263 {ELF_T_BYTE = 0x0,ELF_T_ADDR = 0x1,ELF_T_DYN = 0x2,ELF_T_EHDR = 0x3,ELF_T_HALF = 0x4,ELF_T_OFF = 0x5,ELF_T_PHDR = 0x6,ELF_T_RELA = 0x7,ELF_T_REL = 0x8,ELF_T_SHDR = 0x9,ELF_T_SWORD = 0xA,ELF_T_SYM = 0xB,ELF_T_WORD = 0xC,ELF_T_NONE = 0xD,ELF_T_NUM = 0xE,};
struct _1A6C5034386559CCB930A4FFFDAAB743 {int tts_exitcode;};
enum _1A8A372CEF0D49D11A044F0F2E8415FC {XmCR_NONE = 0x0,XmCR_HELP = 0x1,XmCR_VALUE_CHANGED = 0x2,XmCR_INCREMENT = 0x3,XmCR_DECREMENT = 0x4,XmCR_PAGE_INCREMENT = 0x5,XmCR_PAGE_DECREMENT = 0x6,XmCR_TO_TOP = 0x7,XmCR_TO_BOTTOM = 0x8,XmCR_DRAG = 0x9,XmCR_ACTIVATE = 0xA,XmCR_ARM = 0xB,XmCR_DISARM = 0xC,XmCR_MAP = 0x10,XmCR_UNMAP = 0x11,XmCR_FOCUS = 0x12,XmCR_LOSING_FOCUS = 0x13,XmCR_MODIFYING_TEXT_VALUE = 0x14,XmCR_MOVING_INSERT_CURSOR = 0x15,XmCR_EXECUTE = 0x16,XmCR_SINGLE_SELECT = 0x17,XmCR_MULTIPLE_SELECT = 0x18,XmCR_EXTENDED_SELECT = 0x19,XmCR_BROWSE_SELECT = 0x1A,XmCR_DEFAULT_ACTION = 0x1B,XmCR_CLIPBOARD_DATA_REQUEST = 0x1C,XmCR_CLIPBOARD_DATA_DELETE = 0x1D,XmCR_CASCADING = 0x1E,XmCR_OK = 0x1F,XmCR_CANCEL = 0x20,XmCR_APPLY = 0x22,XmCR_NO_MATCH = 0x23,XmCR_COMMAND_ENTERED = 0x24,XmCR_COMMAND_CHANGED = 0x25,XmCR_EXPOSE = 0x26,XmCR_RESIZE = 0x27,XmCR_INPUT = 0x28,XmCR_GAIN_PRIMARY = 0x29,XmCR_LOSE_PRIMARY = 0x2A,XmCR_CREATE = 0x2B,XmCR_TEAR_OFF_ACTIVATE = 0x2C,XmCR_TEAR_OFF_DEACTIVATE = 0x2D,XmCR_OBSCURED_TRAVERSAL = 0x2E,XmCR_FOCUS_MOVED = 0x2F,XmCR_REPOST = 0x36,XmCR_COLLAPSED = 0x37,XmCR_EXPANDED = 0x38,XmCR_SELECT = 0x39,XmCR_DRAG_START = 0x3A,XmCR_NO_FONT = 0x3B,XmCR_NO_RENDITION = 0x3C,XmCR_POST = 0x3D,XmCR_SPIN_NEXT = 0x3E,XmCR_SPIN_PRIOR = 0x3F,XmCR_SPIN_FIRST = 0x40,XmCR_SPIN_LAST = 0x41,XmCR_PAGE_SCROLLER_INCREMENT = 0x42,XmCR_PAGE_SCROLLER_DECREMENT = 0x43,XmCR_MAJOR_TAB = 0x44,XmCR_MINOR_TAB = 0x45,XmCR_START_JOB = 0x46,XmCR_END_JOB = 0x47,XmCR_PAGE_SETUP = 0x48,XmCR_PDM_NONE = 0x49,XmCR_PDM_UP = 0x4A,XmCR_PDM_START_ERROR = 0x4B,XmCR_PDM_START_VXAUTH = 0x4C,XmCR_PDM_START_PXAUTH = 0x4D,XmCR_PDM_OK = 0x4E,XmCR_PDM_CANCEL = 0x4F,XmCR_PDM_EXIT_ERROR = 0x50,XmCR_PROTOCOLS = 0x1A0A,};
struct _1ACC273C8335AF277D974713D57A5DCB {unsigned char byte0;unsigned int byte_1_fixed;unsigned char byte_2_xfer_len;unsigned char byte_3_xfer_len;unsigned char byte_4_xfer_len;unsigned int byte_5_link;};
enum _1B378CA7E6769DBA655D66EA16101D09 {XmSYNTHETIC_NONE = 0x0,XmSYNTHETIC_LOAD = 0x1,};
struct _1B427FA031BAB6FB82305F06403E5F56 {unsigned short w_height;unsigned short w_width;struct _1B427FA031BAB6FB82305F06403E5F56___sym_value_entry_type *az_color_table;struct _1B427FA031BAB6FB82305F06403E5F56___sym_value_entry_type *az_rows;};
enum _1BE6D51F090742658AE24C9D345ACDA2 {XmSINGLE = 0x1,};
enum _1C2841DB270D08FF12D729B8B875CF0F {allow_release_timeout = 0x0,suppress_release_timeout = 0x1,};
enum _1D6F8982A11C468CA4ACB7CAC3BD4D6C {XmCOMBO_BOX = 0x0,XmDROP_DOWN_COMBO_BOX = 0x1,XmDROP_DOWN_LIST = 0x2,};
enum _1D76D12FA440303E20F41CC1A8F30E80 {R_INVALID_OS = 0x0,R_HPUX_OS = 0x1,};
enum _1EB735D257737D1C193CE2CC582D75C3 {XmPARENT_PROCESS_ANY = 0x0,XmINPUT_ACTION = 0x1,};
enum _1EC84628E8F0388C505545F79E7EF48D {XmN_OF_MANY = 0x1,XmONE_OF_MANY = 0x2,XmONE_OF_MANY_ROUND = 0x3,XmONE_OF_MANY_DIAMOND = 0x4,};
enum _1F20778458407F85C694B7916684628B {XmAUTO_DRAG_ENABLED = 0x0,XmAUTO_DRAG_DISABLED = 0x1,};
struct _1F4B2514A14933A71BA9296C89FDE736 {unsigned char class;unsigned char length;short num_buttons;char buttons[32];};
struct _1F8075983AA770A7B0A58AA98FA0C1D3 {int node;int min;int max;int threadscope;};
enum _20B43CE35CA63D467D88D706C39B67FF {XmDIALOG_WORK_AREA = 0x0,XmDIALOG_PROMPT = 0x1,XmDIALOG_SELECTION = 0x2,XmDIALOG_COMMAND = 0x3,XmDIALOG_FILE_SELECTION = 0x4,};
enum _21559D167E09D153A2BED9C0416C486B {XmLAST_POSITION = 0xFFFFFFFF,XmFIRST_POSITION = 0x0,};
struct _22208A6C0129EEEAE2F226E4B4B59E23 {unsigned char byte0;unsigned int byte_1_evpd;unsigned char byte_2_pg_code;unsigned char byte_3;unsigned char byte_4_alloc_len;unsigned int byte_5_link;};
struct _22A5417DB981180C131776DADD61E5E0 {unsigned char byte0;unsigned int byte_1_immediate;unsigned char byte_2_number;unsigned char byte_3_number;unsigned char byte_4_number;unsigned int byte_5_link;};
struct _23D39CEB96D177F7D0B7BFAD0D72AB23 {char *res_name;char *res_class;};
struct _26934E13CB11D4E3DDD70D95266A4A57 {char *string;char *symbolic;char *m_color;char *g4_color;char *g_color;char *c_color;};
enum _26EDB0994945127362ACA48D63AB8083 {XmOWN_NEVER = 0x0,XmOWN_ALWAYS = 0x1,XmOWN_MULTIPLE = 0x2,XmOWN_POSSIBLE_MULTIPLE = 0x3,};
enum _273F9245AF4031A58D8B6B8D9D4CC35E {XmPUSHBUTTON = 0x1,XmTOGGLEBUTTON = 0x2,XmRADIOBUTTON = 0x3,XmCASCADEBUTTON = 0x4,XmSEPARATOR = 0x5,XmDOUBLE_SEPARATOR = 0x6,XmTITLE = 0x7,};
enum _2822DB660D7EF61737B6E4145BC4B0BC {TTEVT_NONE = 0x0,TTEVT_SIGNAL = 0x1,TTEVT_FORK = 0x2,TTEVT_EXEC = 0x4,TTEVT_EXIT = 0x8,TTEVT_VFORK = 0x10,TTEVT_SYSCALL_RETURN = 0x20,TTEVT_LWP_CREATE = 0x40,TTEVT_LWP_TERMINATE = 0x80,TTEVT_LWP_EXIT = 0x100,TTEVT_LWP_ABORT_SYSCALL = 0x200,TTEVT_SYSCALL_ENTRY = 0x400,TTEVT_SYSCALL_RESTART = 0x800,};
enum _2893428BD927CDFCCAACC59ACD2F737F {XmSHADOW_IN = 0x7,XmSHADOW_OUT = 0x8,};
enum _28C8A916C7103946A5DCC8FD950343DA {_XM_IS_DEST_CTX = 0x0,_XM_IS_GC_DATA_CTX = 0x1,_XM_IS_PIXMAP_CTX = 0x2,};
enum _2ADBA43772B67ED345FDB99E9ECA2F5D {XmOFF = 0x0,XmBUTTON2_ADJUST = 0x1,XmBUTTON2_TRANSFER = 0x2,};
enum _2ADC401C2E21ED1A63A0FE0B868E544D {XOMOrientation_LTR_TTB = 0x0,XOMOrientation_RTL_TTB = 0x1,XOMOrientation_TTB_LTR = 0x2,XOMOrientation_TTB_RTL = 0x3,XOMOrientation_Context = 0x4,};
struct _2AE07F4A994C5FC6C65BC46898F1D740 {int present;short major_version;short minor_version;};
enum _2B0E7C9199D196C48E7B096B00E5C6FD {XmDISABLE_ACTIVATE = 0x0,XmENABLE_ACTIVATE = 0x1,};
enum _2B26690F68D03FCD551ABF86649C8A56 {TT_PROC_SETTRC = 0x400,TT_PROC_ATTACH = 0x401,TT_PROC_DETACH = 0x402,TT_PROC_RDTEXT = 0x403,TT_PROC_WRTEXT = 0x404,TT_PROC_RDDATA = 0x405,TT_PROC_WRDATA = 0x406,TT_PROC_STOP = 0x407,TT_PROC_CONTINUE = 0x408,TT_PROC_GET_PATHNAME = 0x409,TT_PROC_GET_EVENT_MASK = 0x40A,TT_PROC_SET_EVENT_MASK = 0x40B,TT_PROC_GET_FIRST_LWP_STATE = 0x40C,TT_PROC_GET_NEXT_LWP_STATE = 0x40D,TT_PROC_EXIT = 0x40E,TT_PROC_GET_MPROTECT = 0x40F,TT_PROC_SET_MPROTECT = 0x410,TT_PROC_SET_SCBM = 0x411,TT_PROC_CORE = 0x412,TT_LWP_STOP = 0x800,TT_LWP_CONTINUE = 0x801,TT_LWP_SINGLE = 0x802,TT_LWP_RUREGS = 0x803,TT_LWP_WUREGS = 0x804,TT_LWP_GET_EVENT_MASK = 0x805,TT_LWP_SET_EVENT_MASK = 0x806,TT_LWP_GET_STATE = 0x807,TT_NDR_GET_FLEV = 0xC00,};
struct _2B411D419EAE038198223E092111BC6D {char *text;char *function_name;char *data;int data_size;int event_code;unsigned char bus;unsigned char target;unsigned char lun;unsigned char retry_count;unsigned int reserved_1;unsigned int reserved_2;};
struct _2B7D7D293671206B48F9F967EA75E77D {unsigned char byte0;unsigned int byte_1_immediate;unsigned char byte_2;unsigned char byte_3;unsigned int byte_5_link;};
enum _2BDE4897412103F292048E41BB8A46E6 {XmSTRING_COMPONENT_UNKNOWN = 0x0,XmSTRING_COMPONENT_CHARSET = 0x1,XmSTRING_COMPONENT_TEXT = 0x2,XmSTRING_COMPONENT_DIRECTION = 0x3,XmSTRING_COMPONENT_SEPARATOR = 0x4,XmSTRING_COMPONENT_LOCALE_TEXT = 0x5,XmSTRING_COMPONENT_LOCALE = 0x6,XmSTRING_COMPONENT_WIDECHAR_TEXT = 0x7,XmSTRING_COMPONENT_LAYOUT_PUSH = 0x8,XmSTRING_COMPONENT_LAYOUT_POP = 0x9,XmSTRING_COMPONENT_RENDITION_BEGIN = 0xA,XmSTRING_COMPONENT_RENDITION_END = 0xB,XmSTRING_COMPONENT_TAB = 0xC,};
struct _2D395617AE391EE8CCE4AB29A77DA091 {int kind;int max_data_size;int device_id_mask[8];};
enum _2DD7089F8445D712A84BEBD6A685C444 {XmAPPEND = 0x0,XmCLOSEST = 0x1,XmFIRST_FIT = 0x2,};
struct _2E56E956F88F593FE24676E86AAE3518 {unsigned short count_values;char **supported_values;};
struct _30603793696FA81545BF79FFEAB12BD9 {char *text;char *function_name;char *data;int data_size;int event_code;unsigned char bus;unsigned char target;unsigned char lun;unsigned int reserved_1;unsigned int reserved_2;};
enum _3117C89E8107AE9270BADC6F61C8CFBE {XmARROW_UP = 0x0,XmARROW_DOWN = 0x1,XmARROW_LEFT = 0x2,XmARROW_RIGHT = 0x3,};
struct _322907DF9C9816BDE1A9DE75D9CF0E7D {void *lockpage;int dev_id;int _reserve[6];};
struct _323DB3A67F7F25776B114855EEBFF4A0 {char *__sends;short __keyval;};
struct _32D4AADC56619380327806CDA46BE7E6 {int crt_id;int crt_map_size;int crt_x;int crt_y;int crt_total_x;int crt_total_y;int crt_x_pitch;int crt_bits_per_pixel;int crt_bits_used;int crt_planes;int crt_plane_size;char crt_name[32];unsigned int crt_attributes;char *crt_frame_base;char *crt_control_base;char *crt_region[6];};
struct _335EDB02744B103283B800FF919FC940 {short x1;short y1;short x2;short y2;};
enum _33979EF12F27A31BA16073A8A9087BAD {XmCOMMAND_ABOVE_WORKSPACE = 0x0,XmCOMMAND_BELOW_WORKSPACE = 0x1,};
enum _3554E9F53AAF9A4A0C1CB35FF6413EF3 {XmDIALOG_TEMPLATE = 0x0,XmDIALOG_ERROR = 0x1,XmDIALOG_INFORMATION = 0x2,XmDIALOG_MESSAGE = 0x3,XmDIALOG_QUESTION = 0x4,XmDIALOG_WARNING = 0x5,XmDIALOG_WORKING = 0x6,};
enum _35A689336FE0D24D3433A45C728BDA9A {IceConnectPending = 0x0,IceConnectAccepted = 0x1,IceConnectRejected = 0x2,IceConnectIOError = 0x3,};
enum _3625853B835A2537B2B867F377585E90 {XmANY_ICON = 0x2,};
struct _372CF5BD720E919E3995237E376467E3 {unsigned char byte0;unsigned int byte_1_res;unsigned char byte_2;unsigned char byte_3;unsigned char magazine_position;unsigned char control;};
enum _3A31C82F3BA1D2DB30F299153F5AF851 {XmMOVE = 0x1,XmCOPY = 0x2,XmLINK = 0x4,XmOTHER = 0x5,};
enum _3A62C614979A92BEB5F3FA9C72B43E27 {XtGrabNone = 0x0,XtGrabNonexclusive = 0x1,XtGrabExclusive = 0x2,};
struct _3AA4649CA836D4982B0435C77683A7C7 {int fd;int result;};
struct _3ACF1F82BEC6DEE83FE33E625399BBD7 {short x;short y;unsigned short width;unsigned short height;short angle1;short angle2;};
enum _3B36FF783C075B54E328F5EC5332AAC2 {XmTOGGLE_BOOLEAN = 0x0,XmTOGGLE_INDETERMINATE = 0x1,};
enum _3CFCDC704AC2E792161A567F9635E493 {XmABSOLUTE = 0x0,XmRELATIVE = 0x1,};
struct _3D421AC204675DEEFF21F1F77CFC6EF9 {short subsys_id;int rs_filters;int device_id;char *device_name;int size;};
enum _3E13AB1AE3EB517EC8E207F624474D4A {XmDROP = 0x0,XmDROP_HELP = 0x1,XmDROP_CANCEL = 0x2,XmDROP_INTERRUPT = 0x3,};
struct _3E2FA201846E68D32C6E2BCBE5CC4D3C {unsigned char byte0;unsigned int byte_1_bt;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4;unsigned char byte_5;unsigned char byte_6;unsigned char byte_7;unsigned char byte_8;unsigned char control;};
struct _3EAF45F1241314E792C746AFD18B3532 {char __reserved[28];};
enum _3FACB9470AB8C003A92466181834F7E4 {XmBACKGROUND_COLOR = 0x0,XmFOREGROUND_COLOR = 0x1,XmTROUGH_COLOR = 0x2,XmSHADOWED_BACKGROUND = 0x3,};
struct _3FD6ABFB741B2B22ED13B1D9854F5B27 {int status;char *client_id;};
enum _405C8636DEE5D8D2C9F0466394C3E3EA {XrmoptionNoArg = 0x0,XrmoptionIsArg = 0x1,XrmoptionStickyArg = 0x2,XrmoptionSepArg = 0x3,XrmoptionResArg = 0x4,XrmoptionSkipArg = 0x5,XrmoptionSkipLine = 0x6,XrmoptionSkipNArgs = 0x7,};
enum _40DDC86762D4922A231DE7BCE40E1602 {XmFONT_IS_FONT = 0x0,XmFONT_IS_FONTSET = 0x1,};
struct _44E50AEC2878F8A6376C06FA64195504 {short x1;short x2;short y1;short y2;};
struct _45939CCCDFB03014AF0E720819761CDF {int type;int major_opcode;int version_index;char *vendor;char *release;};
struct _45D3B8D1F0A0E1A15D8490524663D915 {struct netconfig **nc_head;struct netconfig **nc_curr;};
enum _4645114C080423A315BE3A0EE193A9B2 {XmAUTOMATIC = 0x0,XmAPPLICATION_DEFINED = 0x1,};
enum _46B06E4047F74C58985665F08DBB0425 {XmZERO_BASED = 0x0,XmONE_BASED = 0x1,};
enum _4805655BE88EF9DDFB1A0EBC191B4778 {XmPARENT_ACTIVATE = 0x0,XmPARENT_CANCEL = 0x1,};
enum _4805EAB0B223F78A463BBC8BA0A6D5FF {IceAcceptSuccess = 0x0,IceAcceptFailure = 0x1,IceAcceptBadMalloc = 0x2,};
struct _487CA7C5BD7AF327E4BD0CBF5F49799B {int DataId;int PrivateId;};
struct _48AD93219D69C082A7FA7555BF967BAD {unsigned char class;unsigned char length;short num_keys;char keys[32];};
enum _48B191C8B077E4975F94B9F71AE4BFB2 {XmPIXELS = 0x0,Xm100TH_MILLIMETERS = 0x1,Xm1000TH_INCHES = 0x2,Xm100TH_POINTS = 0x3,Xm100TH_FONT_UNITS = 0x4,XmINCHES = 0x5,XmCENTIMETERS = 0x6,XmMILLIMETERS = 0x7,XmPOINTS = 0x8,XmFONT_UNITS = 0x9,};
enum _48BC290D844A5089CFC155FB9F341232 {ELF_C_NULL = 0x0,ELF_C_READ = 0x1,ELF_C_WRITE = 0x2,ELF_C_CLR = 0x3,ELF_C_SET = 0x4,ELF_C_FDDONE = 0x5,ELF_C_FDREAD = 0x6,ELF_C_RDWR = 0x7,ELF_C_NUM = 0x8,};
enum _493678FBD81AE11AFC56342574F569B2 {XmPATH_MODE_FULL = 0x0,XmPATH_MODE_RELATIVE = 0x1,};
struct _49757C98BAD1C304A4F8D7FA5746E040 {unsigned char byte0;unsigned int byte_1_res;unsigned char byte_2;unsigned char byte_3;unsigned char transfer_length;unsigned char control;};
struct _49F7EA5D491CD1DC2F293A1F3B03C1F5 {int in_size;int out_size;char buffer[24];};
enum _4A130DCDE97F329D07F4532896FFD2F9 {XmDROP_SITE_SIMPLE = 0x0,XmDROP_SITE_COMPOSITE = 0x1,XmDROP_SITE_SIMPLE_CLIP_ONLY = 0x80,XmDROP_SITE_COMPOSITE_CLIP_ONLY = 0x81,};
enum _4A29676AAA734113BCAB025ECBEC3878 {XmNO_LINE = 0x0,XmSINGLE_LINE = 0x1,XmDOUBLE_LINE = 0x2,XmSINGLE_DASHED_LINE = 0x3,XmDOUBLE_DASHED_LINE = 0x4,XmSHADOW_ETCHED_IN = 0x5,XmSHADOW_ETCHED_OUT = 0x6,XmSHADOW_ETCHED_IN_DASH = 0x7,XmSHADOW_ETCHED_OUT_DASH = 0x8,XmINVALID_SEPARATOR_TYPE = 0x9,};
enum _4B2B5DD9EDD220D7420EDB0C25BF71AD {MC_STATUS_UNSET = 0xFFFFFFFF,MC_STATUS_OK = 0x0,MC_STATUS_MODULE_MISSING = 0x1,MC_STATUS_REQ_UNIMPL = 0x2,MC_STATUS_EOD = 0x0,};
struct _4C2C40102FE02EE57912F207AF83DC3C {char model_num[16];int intf_type;unsigned int maxsva;unsigned int lgblksz;int dev_type;unsigned int flags;};
enum _4C653303E498A3FE7F1F168B8CB5DB1C {XmNEAR_SLIDER = 0x1,XmNEAR_BORDER = 0x2,};
struct _4E8A4C7FC2C9452EEDB2A455AEE467A8 {int update_hint;};
struct _4EECDD18DE7D4606E508621736DA89A8 {char data[1024];};
struct _4FFA9527088137D66D8D180D61C68358 {int family;int length;char *address;};
enum _5082B94BDE211399AF6F85937D2B1C0A {XmCR_TOP_LEVEL_ENTER = 0x0,XmCR_TOP_LEVEL_LEAVE = 0x1,XmCR_DRAG_MOTION = 0x2,XmCR_DROP_SITE_ENTER = 0x3,XmCR_DROP_SITE_LEAVE = 0x4,XmCR_DROP_START = 0x5,XmCR_DROP_FINISH = 0x6,XmCR_DRAG_DROP_FINISH = 0x7,XmCR_OPERATION_CHANGED = 0x8,_XmNUMBER_DND_CB_REASONS = 0x9,};
enum _51029A804AB5230DF66495289C243640 {XmALIGNMENT_CONTENTS_TOP = 0x3,XmALIGNMENT_CONTENTS_BOTTOM = 0x4,};
enum _51AD691829D8B52D9185C4E5F8346768 {XmFRAME_GENERIC_CHILD = 0x0,XmFRAME_WORKAREA_CHILD = 0x1,XmFRAME_TITLE_CHILD = 0x2,};
enum _52055E25BF9F5383269D645E2DD09E6F {NL_LATIN = 0x0,NL_NONLATIN = 0x1,};
enum _524C077D957471F3061D228C9C236D67 {IceClosedNow = 0x0,IceClosedASAP = 0x1,IceConnectionInUse = 0x2,IceStartedShutdownNegotiation = 0x3,};
struct _52EBF4196BFF6EA182C0B53510983968 {int dl_disc_prob;int dl_reset_prob;};
struct _53996C97E395EF20FC508697C3EEF92C {short lbearing;short rbearing;short width;short ascent;short descent;unsigned short attributes;};
struct _53A0FAA9DE94950BE2C50FA9F311A539 {unsigned int flags;unsigned int functions;unsigned int decorations;int inputMode;unsigned int status;};
enum _53D85B5D788E52D277529232F64946A1 {XmNOT_NAVIGABLE = 0x0,XmCONTROL_NAVIGABLE = 0x1,XmTAB_NAVIGABLE = 0x2,XmDESCENDANTS_NAVIGABLE = 0x3,XmDESCENDANTS_TAB_NAVIGABLE = 0x4,};
struct _54554A9A149105D286AD985787231C0D {char *name;char *modifiers;};
struct _547CC69396E14378E9D06CD437556A9B {unsigned int highwater_fifo_count;unsigned int lowwater_fifo_count;unsigned int cycle_stretch_fifo_count;unsigned int cycle_stretch_fine;unsigned int cycle_stretch_coarse;int flowctrl_retry_count;unsigned int flowctrl_buffer_zone;int _reserve[4];};
struct _551F4F1EADB3AA2328EAA62400956C84 {unsigned char lev3_idy;unsigned char lev4_class;unsigned char adv;unsigned char resvd;char resrv1;char num_rer;char resrv2;char port_id;char resrv3;char resrv4;char resrv5;char resrv6;};
struct _5532C1654B9EF34861D348BF0E72BD7A {unsigned char class;unsigned char length;unsigned char num_valuators;unsigned char mode;int *valuators;};
struct _553FAF01ADE3C24D25CFBDA23B6F6D6A {unsigned short xfer_cnt;unsigned short selftest_option;int hw_test_num;};
struct _55BA9BC301B16CBF748D68913B45D214 {char *product_id;unsigned int product_id_len;unsigned int xsense_length;unsigned int compression_info_page;unsigned int device_category;unsigned int forward_file_timeout;unsigned int backward_file_timeout;unsigned int space_eod_timeout;unsigned int mt_type;unsigned int scsi1;};
struct _5611E7A482769785DE0F79EE532E4EC7 {unsigned int flags;int x;int y;int width;int height;int minWidth;int minHeight;int maxWidth;int maxHeight;int widthInc;int heightInc;int minAspectX;int minAspectY;int maxAspectX;int maxAspectY;int baseWidth;int baseHeight;int winGravity;};
enum _5619CCF50B7A6021E29EA9A230F1DFA1 {XmVARIABLE = 0x0,XmCONSTANT = 0x1,XmRESIZE_IF_POSSIBLE = 0x2,};
enum _586B6CFCF0923FF0C25811C654157B1E {XmDEFAULT_READY = 0x0,XmDEFAULT_ON = 0x1,XmDEFAULT_OFF = 0x2,XmDEFAULT_FORGET = 0x3,};
struct _59186384A74AE4586A65E1BA0686E64A {int command;int ticks;int num_regs;int offsets[16];int buffer_method;};
enum _5A773820A0D67B4336D2749C8D45D255 {XrmBindTightly = 0x0,XrmBindLoosely = 0x1,};
struct _5AB76884A00AA1EBE6B998CE45DBA4C9 {unsigned int __c_iflag;unsigned int __c_oflag;unsigned int __c_cflag;unsigned int __c_lflag;unsigned int __c_reserved;unsigned char __c_cc[16];};
enum _5BA63364B4A472F890F3608163B41295 {P_PID = 0x0,P_PGID = 0x1,P_SID = 0x2,P_UID = 0x3,P_GID = 0x4,P_CID = 0x5,P_ALL = 0x6,};
struct _5BB888AFAE3DA1AF86E88EEDAEBE9855 {char *protocol_name;unsigned short protocol_data_length;char *protocol_data;char *network_id;char *auth_name;unsigned short auth_data_length;char *auth_data;};
enum _5BC141063E07A2854A710E771DE9E012 {on = 0x0,off = 0x1,};
struct _5C59CCE56E8E593774E9628726BF3352 {char *text;char *function_name;char *data;int data_size;int event_code;unsigned char bus;unsigned int reserved_1;unsigned int reserved_2;};
struct _5C8C52F20E5837CD54FC695805FBC709 {unsigned int subsystem_bits;};
enum _5CCAAB17D7B51A2C8AD8B4D8359CAFAA {XmDRAG_UNDER_NONE = 0x0,XmDRAG_UNDER_PIXMAP = 0x1,XmDRAG_UNDER_SHADOW_IN = 0x2,XmDRAG_UNDER_SHADOW_OUT = 0x3,XmDRAG_UNDER_HIGHLIGHT = 0x4,};
struct _5CEE1ED3B02D520814ABF86C9CF0DEF8 {char *colname;char *coldata;int colnum;};
struct _5E959B103B01C075C209A8FEB143708D {int minWidth;int minHeight;int maxWidth;int maxHeight;int widthInc;int heightInc;};
enum _5ED7AD68C402A171CEC288A4894B7D2F {XmHOR_SCROLLBAR = 0x2,XmVERT_SCROLLBAR = 0x3,XmCOMMAND_WINDOW = 0x4,XmMESSAGE_WINDOW = 0x6,XmSCROLL_HOR = 0x7,XmSCROLL_VERT = 0x8,XmNO_SCROLL = 0x9,XmCLIP_WINDOW = 0xA,XmGENERIC_CHILD = 0xB,};
struct _607AEA48B84CC21B20A0FD7A7709DCF2 {int id;int errno;int count;};
enum _62D23D4C9FF5CF3197FBB82C4CE39A6E {XmMULTICLICK_DISCARD = 0x0,XmMULTICLICK_KEEP = 0x1,};
struct _62D70C4681D5FDEED922723C39F7026E {unsigned char byte0;unsigned int byte_1_reserved1;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4;unsigned int byte_5_link;};
enum _62ECFD78CAD5E86BD8F4EB2EA097F9EA {XmSNAP_TO_GRID = 0x1,XmCENTER = 0x2,};
enum _6433742F7159E2D9C73691EBE15B918D {XmALIGNMENT_BEGINNING = 0x0,XmALIGNMENT_CENTER = 0x1,XmALIGNMENT_END = 0x2,};
enum _643CACA972DB0CC73C1CD7912E2F75C2 {MC_IDENTIFY_REQ = 0x200,MC_IDENTIFY_REP = 0x201,MC_GET_CONFIG_REQ = 0x202,MC_GET_CONFIG_REP = 0x203,MC_SET_CONFIG_DESCR_REQ = 0x204,MC_SET_CONFIG_DESCR_REP = 0x205,MC_SET_CONFIG_REQ = 0x206,MC_SET_CONFIG_REP = 0x207,MC_GET_STATS_REQ = 0x208,MC_GET_STATS_REP = 0x209,MC_GET_STATS_DESCR_REQ = 0x20A,MC_GET_STATS_DESCR_REP = 0x20B,MC_SET_STATS_REQ = 0x20C,MC_SET_STATS_REP = 0x20D,MC_GET_MIB_REQ = 0x20E,MC_GET_MIB_REP = 0x20F,MC_SET_MIB_REQ = 0x210,MC_SET_MIB_REP = 0x211,MC_ENABLE_EVENTS_REQ = 0x212,MC_ENABLE_EVENTS_REP = 0x213,MC_SET_TRAP_REQ = 0x214,MC_SET_TRAP_REP = 0x215,MC_EVENT = 0x216,};
enum _647855BBCBCC41342014BE867933E093 {XmSELECTION_DEFAULT = 0x0,XmSELECTION_INCREMENTAL = 0x1,XmSELECTION_PERSIST = 0x2,XmSELECTION_SNAPSHOT = 0x3,XmSELECTION_TRANSACT = 0x4,};
enum _64BCD09B3404CF3A21800C025666E4F2 {XmCONVERT_DEFAULT = 0x0,XmCONVERT_MORE = 0x1,XmCONVERT_MERGE = 0x2,XmCONVERT_REFUSE = 0x3,XmCONVERT_DONE = 0x4,};
enum _6522588C7CD9604858124E410B4A9F20 {XmCOLLAPSED = 0x0,XmEXPANDED = 0x1,};
enum _6624D1BB33FAAA2363CD84E153B36475 {CONTAINER_ICON = 0x0,CONTAINER_OUTLINE_BUTTON = 0x1,CONTAINER_HEADER = 0x2,};
enum _67DE420967B8B821C25ACDB855AEDCB1 {STR_MLANG_DLPI = 0x1,STR_MLANG_TPI = 0x2,STR_MLANG_NPI = 0x4,STR_MLANG_MCI = 0x8,};
struct _67E48886874B973177B50A719F6BD031 {int lp_log_pointer;int lplog[63];};
struct _681A300F6E908AA949975FF1E230A5DA {unsigned int reserved;};
struct _691123D744001B8BE68B84780CEE447C {unsigned char byte1;unsigned char byte2;};
struct _694362FD6BA4FD09E27A405438EEF682 {unsigned int reserved;};
enum _69739E4733C17D836FD502F6091A1E31 {XmFORMAT_XmSTRING = 0x0,XmFORMAT_MBYTE = 0x1,XmFORMAT_WCS = 0x2,};
struct _697B32D3B5D3093ACC810617F93D908A {unsigned char first;unsigned char last;};
enum _69ABF28885C3EE884E954BFA2752031E {XmRIGHT_TO_LEFT_TOP_TO_BOTTOM = 0x45,XmLEFT_TO_RIGHT_TOP_TO_BOTTOM = 0x46,XmRIGHT_TO_LEFT_BOTTOM_TO_TOP = 0x49,XmLEFT_TO_RIGHT_BOTTOM_TO_TOP = 0x4A,XmTOP_TO_BOTTOM_RIGHT_TO_LEFT = 0x85,XmTOP_TO_BOTTOM_LEFT_TO_RIGHT = 0x86,XmBOTTOM_TO_TOP_RIGHT_TO_LEFT = 0x89,XmBOTTOM_TO_TOP_LEFT_TO_RIGHT = 0x8A,XmTOP_TO_BOTTOM = 0xC7,XmBOTTOM_TO_TOP = 0xCB,XmRIGHT_TO_LEFT = 0xCD,XmLEFT_TO_RIGHT = 0xCE,XmDEFAULT_DIRECTION = 0xFF,};
enum _69B919E8893968F0F88511FED2EFE8F8 {XmATTACH_NORTH_WEST = 0x0,XmATTACH_NORTH = 0x1,XmATTACH_NORTH_EAST = 0x2,XmATTACH_EAST = 0x3,XmATTACH_SOUTH_EAST = 0x4,XmATTACH_SOUTH = 0x5,XmATTACH_SOUTH_WEST = 0x6,XmATTACH_WEST = 0x7,XmATTACH_CENTER = 0x8,XmATTACH_HOT = 0x9,};
struct _6B1106A64659663BF4BA9950E3F10E4F {int charset_count;char **charset_list;};
enum _6B7EBACD75708F75DFC04DB2E733742F {XmTEAR_OFF_ENABLED = 0x0,XmTEAR_OFF_DISABLED = 0x1,};
enum _6C885F0E8306281FDB6B3B6E50513AA7 {XmENABLE_WARP_ON = 0x0,XmENABLE_WARP_OFF = 0x1,};
enum _6CEC0457B2244633E225F78671745FCE {XmLARGE_ICON = 0x0,XmSMALL_ICON = 0x1,};
struct _6D1D2AD66BF959596DF5CC9E65B91062 {int spu;};
struct _6D3334F4551641FA7C3822F70436A958 {short msgid;int trn;};
enum _6F9A534032C3FA39E6E0F9F540CB117B {XmNO_PACKING = 0x0,XmPACK_TIGHT = 0x1,XmPACK_COLUMN = 0x2,XmPACK_NONE = 0x3,};
struct _6FAE6FD2BAB65E382C9F13A182AC5702 {char filenum[12];char trecnum[12];char retrynum[12];char datasize[12];char blknum[12];char blktype;char fill_pad;};
struct _706327D4C18E3A6CAC6F680E53AC0541 {unsigned char x[179];};
struct _70A989625F397D986B701736EF2078A3 {unsigned short xfer_cnt;unsigned short int_poll_option;unsigned short timeout;};
struct _73F4BB55DF18F0BF9735C1FEF6B6A448 {unsigned short xfer_cnt;};
enum _74B1213069A442AA4F809B3DD5A5FADF {XmGEO_PROPORTIONAL = 0x0,XmGEO_AVERAGING = 0x1,XmGEO_WRAP = 0x2,};
struct _74FB751768FF96092D6BF552FB1F736A {int delete_prop_index;};
enum _75E5AF31E9A64698E276A3C79BCF83A9 {XmOUTPUT_ALL = 0x0,XmOUTPUT_BETWEEN = 0x1,XmOUTPUT_BEGINNING = 0x2,XmOUTPUT_END = 0x3,XmOUTPUT_BOTH = 0x4,};
enum _75EC91A7C8FA6FACD63CC64E5292E769 {XmPOPUP_DISABLED = 0x0,XmPOPUP_KEYBOARD = 0x1,XmPOPUP_AUTOMATIC = 0x2,XmPOPUP_AUTOMATIC_RECURSIVE = 0x3,};
struct _797C48E4377D7A637C94D50E6E2A2705 {char *method_name;int ( **instance)();char *c_symbol[6];char *package[6];char *lib_name[6];char *meth_proto;};
enum _7A6D1403076F33F26AB38429B1986DDD {XtGeometryYes = 0x0,XtGeometryNo = 0x1,XtGeometryAlmost = 0x2,XtGeometryDone = 0x3,};
struct _7B4AA9229546E18AEA17DF8DFD8F7E14 {char *text;char *function_name;char *data;int data_size;int event_code;int callback_status;unsigned char fcp_state;unsigned int abts_state;unsigned int nport_state;unsigned int bhfcp_state;char topology_old;char topology_new;int nport_old;int nport_new;int seconds;int sest_index;unsigned int reserved_1;unsigned int reserved_2;unsigned char fabric_old[8];unsigned char fabric_new[8];};
struct _7B61BCBC246FA8722509A9D44D82CEAE {unsigned char byte0;unsigned int byte_1_immediate;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4;unsigned int byte_5_link;};
struct _7B884385C9B34F9BF1E347FECD869B6E {unsigned char class;unsigned char length;};
struct _7BEB7D159A7DB2A42EA34A43888FEB71 {int *link;int status;int lastlink;int residue;int tid;int type;int resvd[2];};
enum _7D9848B3DBBA8E5BB23B28AC12EF9B7C {XmLABEL_RENDER_TABLE = 0x1,XmBUTTON_RENDER_TABLE = 0x2,XmTEXT_RENDER_TABLE = 0x3,};
enum _7F2B51D7BA6B441FB87F459A5B295871 {XmNONE = 0x0,XmTAB_GROUP = 0x1,XmSTICKY_TAB_GROUP = 0x2,XmEXCLUSIVE_TAB_GROUP = 0x3,};
struct _7F598FE20DE156C61CB8DECEFC23C88D {unsigned char card_id;unsigned char firmware_id;unsigned short firmware_rev;unsigned int mod;unsigned char ports_less_1;unsigned char reqs_less_1;unsigned char max_bsize_hi;unsigned char max_bsize_lo;};
enum _7F7FFAF38A8AFB4DC3CA1268C5FB26EE {XmPDM_NOTIFY_FAIL = 0x0,XmPDM_NOTIFY_SUCCESS = 0x1,};
enum _81C5AE8457262FB4B2176DCA5350B614 {XmMULTI_LINE_EDIT = 0x0,XmSINGLE_LINE_EDIT = 0x1,};
enum _81CB9C9397203DD8391907B26844B7B6 {IceProcessMessagesSuccess = 0x0,IceProcessMessagesIOError = 0x1,IceProcessMessagesConnectionClosed = 0x2,};
enum _827EF60D098AE8A05731A9C4BE52FA4E {XmPAGE_FOUND = 0x0,XmPAGE_INVALID = 0x1,XmPAGE_EMPTY = 0x2,XmPAGE_DUPLICATED = 0x3,};
enum _83ED912A83F8B46BA56F8254A0E1C396 {XmINSERT = 0x0,XmTERMINATE = 0x1,XmINVOKE = 0x2,};
enum _8550641B0259C0F145DDEEFF69F64B1F {XmGET_ACTUAL_SIZE = 0x1,XmGET_PREFERRED_SIZE = 0x2,XmGEO_PRE_SET = 0x3,XmGEO_POST_SET = 0x4,};
enum _859212F894AD081D1D25ADC4B1130DC3 {XmBASELINE_GET = 0x0,XmBASELINE_SET = 0x1,};
enum _85A9F1A997C1404CDFD171F089FE86AB {XmDROP_SITE_ACTIVE = 0x0,XmDROP_SITE_INACTIVE = 0x1,XmDROP_SITE_IGNORE = 0x2,};
enum _86142F77BB0C999E4FDA022A0761FC03 {XmDIALOG_NONE = 0x0,XmDIALOG_APPLY_BUTTON = 0x1,XmDIALOG_CANCEL_BUTTON = 0x2,XmDIALOG_DEFAULT_BUTTON = 0x3,XmDIALOG_OK_BUTTON = 0x4,XmDIALOG_FILTER_LABEL = 0x5,XmDIALOG_FILTER_TEXT = 0x6,XmDIALOG_HELP_BUTTON = 0x7,XmDIALOG_LIST = 0x8,XmDIALOG_LIST_LABEL = 0x9,XmDIALOG_MESSAGE_LABEL = 0xA,XmDIALOG_SELECTION_LABEL = 0xB,XmDIALOG_SYMBOL_LABEL = 0xC,XmDIALOG_TEXT = 0xD,XmDIALOG_SEPARATOR = 0xE,XmDIALOG_DIR_LIST = 0xF,XmDIALOG_DIR_LIST_LABEL = 0x10,};
struct _86667C1762D2D3E70596A778BAFE84E4 {unsigned int pixel;unsigned short red;unsigned short green;unsigned short blue;char flags;char pad;};
struct _88A5CE8C1B41ABBCB8E88E633D3889C9 {int state;unsigned int iconWindow;};
enum _8955F610BCE94AAE8676F9CC0150C756 {XmDEST_SELECT = 0x0,XmPRIM_SELECT = 0x1,};
enum _896289CBBCAA8E9EB10EBEF74A83AAAC {XmLEFT = 0x1,XmRIGHT = 0x2,XmTOP = 0x3,XmBOTTOM = 0x4,};
enum _8996B462E04869337C51B90A17CF06C3 {XOMMultiByte = 0x0,XOMWideChar = 0x1,};
enum _89FC1B20F172ACED79941DFC60097C46 {XmNO_ORIENTATION = 0x0,XmVERTICAL = 0x1,XmHORIZONTAL = 0x2,};
struct _8A0C73BF129480B377085AACADB6EBAD {unsigned int reserved;};
struct _8AC18927BC3D48B2E1E053A2B1E052A9 {unsigned char byte0;unsigned int byte_2_pg_code;unsigned char byte_3;unsigned char byte_4_alloc_len;unsigned int byte_5_link;};
enum _8ACB7C61C0AD89FF227C23D1B4598563 {XmATTACH_NONE = 0x0,XmATTACH_FORM = 0x1,XmATTACH_OPPOSITE_FORM = 0x2,XmATTACH_WIDGET = 0x3,XmATTACH_OPPOSITE_WIDGET = 0x4,XmATTACH_POSITION = 0x5,XmATTACH_SELF = 0x6,};
enum _8C3F6FFEEEA4FDE62323156E011FAD74 {XStringStyle = 0x0,XCompoundTextStyle = 0x1,XTextStyle = 0x2,XStdICCTextStyle = 0x3,};
struct _8CF3F0EEA440C7F93DC380FDE5207EC4 {unsigned int video_out;};
enum _8D789D8C621DAD2FC02AE90C838DBC5D {POP_AND = 0x0,POP_OR = 0x1,POP_XOR = 0x2,POP_DIFF = 0x3,};
enum _8DF7415C893978EEFB8B0B1DFAE664DB {XlcUnknown = 0x0,XlcC0 = 0x1,XlcGL = 0x2,XlcC1 = 0x3,XlcGR = 0x4,XlcGLGR = 0x5,XlcOther = 0x6,XlcNONE = 0x7,};
enum _8F8E6D9517AB45AA51A20D9C7A3335AA {XmTEXT_FORWARD = 0x0,XmTEXT_BACKWARD = 0x1,};
enum _90B8F34FFAD33112C047DBF1D57A0386 {NL_ASCII = 0x0,NL_ALT = 0x1,};
struct _90C6D76C8F7DA2A3EC6A739DF1FAFEF5 {int __cnt;unsigned char *__ptr;unsigned char *__base;unsigned short __flag;unsigned char __fileL;unsigned char __fileH;unsigned char *__bufendp;unsigned char *__newbase;unsigned char __smbuf[16];void *__unused;};
struct _91D66C14A449B56AD19313465CE79FDB {short retry_count;unsigned char errorlog_on;};
enum _92336B21772268312063A1CDD1FC560B {TT_KILL_ON_EXIT = 0x0,TT_DETACH_ON_EXIT = 0x1,};
enum _924322573C6CAB618BBD90F5076C3820 {XmDIALOG_MODELESS = 0x0,XmDIALOG_PRIMARY_APPLICATION_MODAL = 0x1,XmDIALOG_FULL_APPLICATION_MODAL = 0x2,XmDIALOG_SYSTEM_MODAL = 0x3,};
struct _933190A6409BACA455C7408AF15FB423 {int index;void *context[2];};
enum _93A1FBAEEC97A9C11EB31E9DB6B68BE2 {XmUNSET = 0x0,XmSET = 0x1,XmINDETERMINATE = 0x2,};
enum _9429640C6C02F159A7FE4A1B9EC8245E {XmSELECTED = 0x0,XmNOT_SELECTED = 0x1,};
struct _94B10172A4995A66031F1662354B7713 {char *text;char *function_name;char *data;int data_size;int event_code;unsigned char bus;unsigned char target;unsigned char lun;unsigned char qtag;unsigned int reserved_1;unsigned int reserved_2;};
enum _957E72D1774592B3C622E4AA90E92412 {XmUNSPECIFIED_LOAD_MODEL = 0x0,XmLOAD_DEFERRED = 0x1,XmLOAD_IMMEDIATE = 0x2,};
enum _961B79B2C3FD4C51F22524CA68AEB3E6 {XmTRANSFER_DONE_SUCCEED = 0x0,XmTRANSFER_DONE_FAIL = 0x1,XmTRANSFER_DONE_CONTINUE = 0x2,XmTRANSFER_DONE_DEFAULT = 0x3,};
struct _9750BD37C04375AEAD857CD1AEBC6ACD {char *protocol_name;char *network_id;char *auth_name;unsigned short auth_data_length;char *auth_data;};
struct _979FA3DE6ECCF956231BFC297C4278E6 {int quot;int rem;};
enum _98AACC45B526BF8E56A46567C8EC9FBB {EditDone = 0x0,EditError = 0x1,EditReject = 0x2,};
struct _98C6CEFE241EF843C6088F142B2DB4C1 {unsigned char t[8191];};
struct _9BD11453D851B840D226BDE30A5759A2 {int flags;int functions;int decorations;int input_mode;int status;};
struct _9BF61F8AD437FA790CCC153EAC25C4D7 { char *dli_fname;void *dli_fbase; char *dli_sname;void *dli_saddr;int dli_type;};
enum _9CF57B51EE7F5AA4F23AA2AD25F2CCDA {XmBLEND_ALL = 0x0,XmBLEND_STATE_SOURCE = 0x1,XmBLEND_JUST_SOURCE = 0x2,XmBLEND_NONE = 0x3,};
enum _9E6EF2627F09602E7A6BA7313AAD8029 {XmBELL = 0x1,};
struct _A0578E93CE07CF80AAB250E46E312C74 {unsigned int require_break;};
struct _A06AF73261543B69A785AD9B5C737D11 {int depth;int bits_per_pixel;int scanline_pad;};
struct _A197BA92F4DBA6455332CB6FACE54059 {unsigned int type;};
struct _A22909F33B82A39C7E5AA204EADDB941 {char ppid[12];char time[12];};
enum _A2F248A013CE0CE975C3B9326FB85489 {XmARROWS_END = 0x0,XmARROWS_BEGINNING = 0x1,XmARROWS_SPLIT = 0x2,XmARROWS_FLAT_END = 0x3,XmARROWS_FLAT_BEGINNING = 0x4,};
enum _A3665E69DB87D7B6ED44928954CD85F4 {IcePoAuthHaveReply = 0x0,IcePoAuthRejected = 0x1,IcePoAuthFailed = 0x2,IcePoAuthDoneCleanup = 0x3,};
struct _A386896A7A6A8667CB6DAB8066B01EA8 {int min_width;int min_height;int max_width;int max_height;int width_inc;int height_inc;};
enum _A3D41E08E1CC9B464E8D88ACBD44C717 {XmGROW_MINOR = 0x0,XmGROW_MAJOR = 0x1,XmGROW_BALANCED = 0x2,};
struct _A5BAC5A3CF6488768EE2550160F65CDE {unsigned char byte0;unsigned int byte_1_fixed;unsigned char byte_2_xfer_len;unsigned char byte_3_xfer_len;unsigned char byte_4_xfer_len;unsigned int byte_5_link;};
struct _A66634CAD7B95962E094A16D3D5C00F3 {int process_type;};
enum _A8D0F53DAD5F2C5279C43A82FD30866F {XmABOVE = 0x0,XmBELOW = 0x1,};
enum _A8FC6844771AA3282EFCCA570AA6F766 {XmVALID_VALUE = 0x0,XmCURRENT_VALUE = 0x1,XmMAXIMUM_VALUE = 0x2,XmMINIMUM_VALUE = 0x3,XmINCREMENT_VALUE = 0x4,};
enum _A952B4CD0303A10D8C2FE0014FA84731 {XmOS_METHOD_NULL = 0x0,XmOS_METHOD_DEFAULTED = 0x1,XmOS_METHOD_REPLACED = 0x2,};
enum _A96A78AE7D07B94FCB852FDF8D9268F6 {XmSTRING_DIRECTION_L_TO_R = 0x0,XmSTRING_DIRECTION_R_TO_L = 0x1,XmSTRING_DIRECTION_UNSET = 0x3,XmSTRING_DIRECTION_DEFAULT = 0xFF,};
struct _A9893A2E584921FC9190E1D68D741492 {int command;unsigned int param[10];int pad[10];};
enum _AA4E34F0966344BC36BAC25D7E543C17 {XmFILTER_NONE = 0x0,XmFILTER_HIDDEN_FILES = 0x1,};
enum _AB8FA23934A1A251513C73E987687696 {XmTRAVERSE_CURRENT = 0x0,XmTRAVERSE_NEXT = 0x1,XmTRAVERSE_PREV = 0x2,XmTRAVERSE_HOME = 0x3,XmTRAVERSE_NEXT_TAB_GROUP = 0x4,XmTRAVERSE_PREV_TAB_GROUP = 0x5,XmTRAVERSE_UP = 0x6,XmTRAVERSE_DOWN = 0x7,XmTRAVERSE_LEFT = 0x8,XmTRAVERSE_RIGHT = 0x9,XmTRAVERSE_GLOBALLY_FORWARD = 0xA,XmTRAVERSE_GLOBALLY_BACKWARD = 0xB,};
struct _ACF4F1EE2C462FBD16A67C26EF703AB2 {unsigned int flags;unsigned int prefetch_lock;unsigned int prefetch_depth;unsigned int block_size;unsigned int read_current;unsigned int piow_dmar_ordering;unsigned int aggressive_flush;unsigned int pad[4];};
enum _AEA1FBBE7726CEC77267A27B4B646D95 {XmSINGLE_SELECT = 0x0,XmMULTIPLE_SELECT = 0x1,XmEXTENDED_SELECT = 0x2,XmBROWSE_SELECT = 0x3,};
enum _AED30218085D680B7EAFC4945949389D {XmSELECT_POSITION = 0x0,XmSELECT_WHITESPACE = 0x1,XmSELECT_WORD = 0x2,XmSELECT_LINE = 0x3,XmSELECT_ALL = 0x4,XmSELECT_PARAGRAPH = 0x5,XmSELECT_OUT_LINE = 0x6,};
struct _AFFA9A91EF6D729074F708225A2C291B {unsigned int reserved;};
struct _B00D0DA09FE05CEA0D3D84146BFBBA74 {int event_code;char *description;};
enum _B182F73AE0810C509E52E7A5D6327869 {XmEXPLICIT = 0x0,XmPOINTER = 0x1,};
enum _B20E073856E03551C4B45F4AB360DDE0 {XmALIGNMENT_BASELINE_TOP = 0x0,XmALIGNMENT_BASELINE_BOTTOM = 0x2,XmALIGNMENT_WIDGET_TOP = 0x3,XmALIGNMENT_WIDGET_BOTTOM = 0x4,};
enum _B3EE7E070A91A7478A9093983E000B1C {XmDESTROY = 0x0,XmUNMAP = 0x1,XmDO_NOTHING = 0x2,};
enum _B51E642313D221182EE26B6E59AAF50F {XmSOLID = 0x2,XmSPIRAL = 0x3,XmPIXMAP_OVERLAP_ONLY = 0x4,};
enum _B539734676A04848B68060D6D483E0A0 {XIMTextType = 0x0,XIMBitmapType = 0x1,};
enum _B58A5A92A05F4CEE8F196C7E2D224736 {XmCHARSET_TEXT = 0x0,XmMULTIBYTE_TEXT = 0x1,XmWIDECHAR_TEXT = 0x2,XmNO_TEXT = 0x3,};
enum _B59D8010EF5E191DC7423284124B6415 {XmMARQUEE = 0x0,XmMARQUEE_EXTEND_START = 0x1,XmMARQUEE_EXTEND_BOTH = 0x2,XmTOUCH_ONLY = 0x3,XmTOUCH_OVER = 0x4,};
struct _B5F988AB9D81746BF03F9185FDDAB771 {int dev_id;int _reserve[4];};
struct _B6111FD2FBA814EB95A97461B6DFBCB3 {char *crt_phys_frame_base;char *crt_phys_control_base;};
enum _B64C39E2ADABB22C50C1D912F1D253CC {XIMIsInvisible = 0x0,XIMIsPrimary = 0x1,XIMIsSecondary = 0x2,};
enum _B6A726AC2CF518BC07FABE64CF32259F {XmPER_SHELL = 0x0,XmPER_WIDGET = 0x1,XmINHERIT_POLICY = 0xFF,};
struct _B6E4A2B848FCD9E33E06830EEF7A3E04 {unsigned char byte0;unsigned int byte_1_res;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4;unsigned char byte_5;unsigned char byte_6;unsigned char byte_7;unsigned char byte_8;unsigned char byte_9;};
enum _B70FFA8651B5A745AF3F0D3359806272 {XmETCHED_LINE = 0x1,XmTHUMB_MARK = 0x2,XmROUND_MARK = 0x3,};
struct _B80E979E4C5F2317B232B96F3AA75482 {unsigned char load_default;};
struct _B8243ED19B76CA5D55F9F69ED1E7C09F {int quot;int rem;};
struct _B87C4D7F0283F327B3B9CE6AC5F074A7 {int subfunction;int da_flags;};
struct _B8D43E9E5B323F7D273EC2E781EDD178 {unsigned short reg;unsigned short wait_opt;unsigned short timeout;};
struct _B91987CD365E539796DE78D87241D671 {unsigned char class;unsigned char length;unsigned char num_valuators;unsigned char mode;int valuators[6];};
enum _B9867847443BB25721460208505189B7 {XtCallbackNoList = 0x0,XtCallbackHasNone = 0x1,XtCallbackHasSome = 0x2,};
enum _B9B1E3761F7AC9C80FCB354FC1070F12 {SmcClosedNow = 0x0,SmcClosedASAP = 0x1,SmcConnectionInUse = 0x2,};
struct _BA0C4C9D943B8C0F64DC63F042F2F4D9 {unsigned char b_letter;unsigned char b_index;unsigned short w_desc_offset;struct _BA0C4C9D943B8C0F64DC63F042F2F4D9___sym_value_entry_type *az_color;};
struct _BA26A250EDF4BDE3453280FF6BC02B90 {long long node;long long min;long long max;long long threadscope;};
struct _BA6F146A8875BE4D14324A167F2E4000 {int dot5TimerIfIndex;int dot5TimerReturnRepeat;int dot5TimerHolding;int dot5TimerQueuePDU;int dot5TimerValidTransmit;int dot5TimerNoToken;int dot5TimerActiveMon;int dot5TimerStandbyMon;int dot5TimerErrorReport;int dot5TimerBeaconTransmit;int dot5TimerBeaconReceive;};
enum _BA827A83394412734C7B517A2D57541A {XmCASCADE_BUTTON_BIT = 0x1,XmCASCADE_BUTTON_GADGET_BIT = 0x2,XmCOMMAND_BOX_BIT = 0x3,XmDIALOG_SHELL_BIT = 0x4,XmLIST_BIT = 0x5,XmFORM_BIT = 0x6,XmTEXT_FIELD_BIT = 0x7,XmGADGET_BIT = 0x8,XmLABEL_BIT = 0x9,XmLABEL_GADGET_BIT = 0xA,XmMAIN_WINDOW_BIT = 0xB,XmMANAGER_BIT = 0xC,XmMENU_SHELL_BIT = 0xD,XmDRAWN_BUTTON_BIT = 0xE,XmPRIMITIVE_BIT = 0xF,XmPUSH_BUTTON_BIT = 0x10,XmPUSH_BUTTON_GADGET_BIT = 0x11,XmROW_COLUMN_BIT = 0x12,XmSCROLL_BAR_BIT = 0x13,XmSCROLLED_WINDOW_BIT = 0x14,XmSELECTION_BOX_BIT = 0x15,XmSEPARATOR_BIT = 0x16,XmSEPARATOR_GADGET_BIT = 0x17,XmTEXT_BIT = 0x18,XmTOGGLE_BUTTON_BIT = 0x19,XmTOGGLE_BUTTON_GADGET_BIT = 0x1A,XmDROP_TRANSFER_BIT = 0x1B,XmDROP_SITE_MANAGER_BIT = 0x1C,XmDISPLAY_BIT = 0x1D,XmSCREEN_BIT = 0x1E,XmPRINT_SHELL_BIT = 0x1F,XmARROW_BUTTON_BIT = 0x20,XmARROW_BUTTON_GADGET_BIT = 0x21,XmBULLETIN_BOARD_BIT = 0x22,XmDRAWING_AREA_BIT = 0x23,XmFILE_SELECTION_BOX_BIT = 0x24,XmFRAME_BIT = 0x25,XmMESSAGE_BOX_BIT = 0x26,XmSASH_BIT = 0x27,XmSCALE_BIT = 0x28,XmPANED_WINDOW_BIT = 0x29,XmVENDOR_SHELL_BIT = 0x2A,XmCLIP_WINDOW_BIT = 0x2B,XmDRAG_ICON_BIT = 0x2C,XmTEAROFF_BUTTON_BIT = 0x2D,XmDRAG_OVER_SHELL_BIT = 0x2E,XmDRAG_CONTEXT_BIT = 0x2F,XmCONTAINER_BIT = 0x30,XmICONGADGET_BIT = 0x31,XmNOTEBOOK_BIT = 0x32,XmCSTEXT_BIT = 0x33,XmGRAB_SHELL_BIT = 0x34,XmCOMBO_BOX_BIT = 0x35,XmSPINBOX_BIT = 0x36,XmICONHEADER_BIT = 0x37,XmFAST_SUBCLASS_TAIL_BIT = 0x38,};
enum _BAEF02FECDDBB7C416F256F6C617BF3A {XmOUTLINE_BUTTON_PRESENT = 0x0,XmOUTLINE_BUTTON_ABSENT = 0x1,};
enum _BB7F0730DE77F9648F7620A59052A897 {R_INVALID_MAGIC = 0x0,R_EXEC_MAGIC = 0x1,R_SHMEM_MAGIC = 0x2,R_SHARE_MAGIC = 0x3,};
enum _BCBFBEF9B4DBDCBDB019F39924A8EC6D {XmWORK_AREA = 0x0,XmMENU_BAR = 0x1,XmMENU_PULLDOWN = 0x2,XmMENU_POPUP = 0x3,XmMENU_OPTION = 0x4,};
enum _BD894E2C1861A54BD61666934450D191 {TTRACE_WAITOK = 0x0,TTRACE_NOWAIT = 0x1,};
enum _BD94187AB2581C6A16F17507A67D7799 {XmRESIZE_NONE = 0x0,XmRESIZE_GROW = 0x1,XmRESIZE_ANY = 0x2,};
struct _BDEA2C04F83C6E4F42140EC4EAC59F09 {unsigned char byte0;unsigned int byte_1_code;unsigned char byte_2_cnt;unsigned char byte_3_cnt;unsigned char byte_4_cnt;unsigned int byte_5_link;};
enum _BDF226639BBB1D3BB43C1B0B3AAF5782 {MC_VERS_1 = 0x1,};
enum _BDFF07548720CB5FA5E849C13EF265E9 {NSS_HOST = 0x0,NSS_SERV = 0x1,NETDIR_BY = 0x2,};
enum _BE043CC66BC9A68312F52FD64117B1F0 {XmCACHE_EXTENSION = 0x1,XmDESKTOP_EXTENSION = 0x2,XmSHELL_EXTENSION = 0x3,XmPROTOCOL_EXTENSION = 0x4,XmDEFAULT_EXTENSION = 0x5,};
struct _BE3BBF0653DD7A6C094A79E8D11A6321 {int __addr;int __gp;};
enum _BE4FA2165E9AC0DB1826F5883CF117C2 {XmPOSITION_INDEX = 0x0,XmPOSITION_VALUE = 0x1,};
struct _BEA3E970906BDE5578391186783FC521 {int extension;int major_opcode;int first_event;int first_error;};
struct _BFB970BD49ED9B406D7CBF54A76D57DD {int key_click_percent;int bell_percent;int bell_pitch;int bell_duration;int led;int led_mode;int key;int auto_repeat_mode;};
struct _BFF6D439C72248A83F4F771634853519 {unsigned int informative_bit;};
struct _C1989920CA0623FD92C1ECB77D31D883 {char *user_acct;int result;};
enum _C25EDA2AFA4331EE1194B950D24C90A5 {XSyncAlarmActive = 0x0,XSyncAlarmInactive = 0x1,XSyncAlarmDestroyed = 0x2,};
enum _C5F64CB5D867F350BA974582962FEC30 {XmUNPOST = 0x0,XmUNPOST_AND_REPLAY = 0x1,};
struct _C6CDCD31C181198FA4488211042318A2 {int addr[15];int num_elements;};
enum _C6DE0E8AF8221E8B7722BED8F4800537 {XtListHead = 0x0,XtListTail = 0x1,};
struct _C72A05A9A89CB5CAE1B94D9CDA4D73F7 {unsigned int opt;};
enum _C7AEFA5450A6E3B6EAAFAEEC8106EDCC {XmAS_NEEDED = 0x1,};
enum _C9547D9B9E214CE5EBD681A7EEC38B08 {IceProtocolSetupSuccess = 0x0,IceProtocolSetupFailure = 0x1,IceProtocolSetupIOError = 0x2,IceProtocolAlreadyActive = 0x3,};
struct _CA1CD5B08005403884A7641019451813 {short x;short y;unsigned short width;unsigned short height;};
struct _CA8C8364FD28A714C428F7E9308C5190 {unsigned int event_mask;};
enum _CB86C33E4C099BDD4888D4811E9329EE {XmDRAG_NONE = 0x0,XmDRAG_DROP_ONLY = 0x1,XmDRAG_PREFER_PREREGISTER = 0x2,XmDRAG_PREREGISTER = 0x3,XmDRAG_PREFER_DYNAMIC = 0x4,XmDRAG_DYNAMIC = 0x5,XmDRAG_PREFER_RECEIVER = 0x6,};
enum _CCF1D35D1824FA2FD0CE85EC50CF6383 {MC_EVENT_TRANS_FAILURE = 0x1,MC_EVENT_PERM_FAILURE = 0x2,MC_EVENT_RESET = 0x4,MC_EVENT_TRAP = 0x8,MC_EVENT_OPER_MESSAGE = 0x10,MC_EVENT_IMPLEMENTATION = 0x0,};
struct _CDF557A927ED2BFF93B09908D4EFCA76 {int x;int y;};
enum _CE0FA36ECDD7533D23F81DF4FF364C06 {TTEO_NONE = 0x0,TTEO_NOSTRCCHLD = 0x1,TTEO_PROC_INHERIT = 0x2,TTEO_LWP_INHERIT = 0x4,TTEO_NORM_SIGTRAP = 0x8,};
struct _CEBF785F985159AE1C59B71C07E19AEB {unsigned char byte0;unsigned int byte_1_reserved1;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4_alloc_len;unsigned int byte_5_link;};
enum _D06503B10BF0E4ACB2E829F55AF9893F {XmLABEL_FONTLIST = 0x1,XmBUTTON_FONTLIST = 0x2,XmTEXT_FONTLIST = 0x3,};
struct _D1A99149F7DEF10F5C1917DF5D27BC53 {unsigned char input_class;unsigned char event_type_base;};
enum _D2435FF4F3AAF25C455EAA2CA1747697 {XtAddress = 0x0,XtBaseOffset = 0x1,XtImmediate = 0x2,XtResourceString = 0x3,XtResourceQuark = 0x4,XtWidgetBaseOffset = 0x5,XtProcedureArg = 0x6,};
enum _D4C42CA96243A2F463F056F2904FD1B2 {XmNO_AUTO_SELECT = 0x0,XmAUTO_SELECT = 0x1,};
struct _D5FD3F584A706F39031E09C00DDE2C76 {int log_class;int device_id;};
enum _D6AC00C6B4C5ACDAF8C10FADFC47B958 {XmCONVERTING_NONE = 0x0,XmCONVERTING_SAME = 0x1,XmCONVERTING_TRANSACT = 0x2,XmCONVERTING_PARTIAL = 0x4,};
enum _D7453980C02B4EC13C517CA2455C445E {XmEACH_SIDE = 0x1,XmMAX_SIDE = 0x2,XmMIN_SIDE = 0x3,};
enum _D808E88BFD58E9B6A8E33F7BC664BD2E {XmARROWS_VERTICAL = 0x0,XmARROWS_HORIZONTAL = 0x1,};
enum _D858D7C9E5EC4A14AD650DBBB6B515F8 {XmINDICATOR_NONE = 0x0,XmINDICATOR_FILL = 0x1,XmINDICATOR_BOX = 0xFF,XmINDICATOR_CHECK = 0x10,XmINDICATOR_CHECK_BOX = 0x11,XmINDICATOR_CROSS = 0x20,XmINDICATOR_CROSS_BOX = 0x21,};
struct _D961FD5CCAA8184BC5759ED9932B4164 {int o_length;unsigned char o_bytes[32];};
enum _DB4B60BC3E5D47BB5823C48350265A79 {XIMForwardChar = 0x0,XIMBackwardChar = 0x1,XIMForwardWord = 0x2,XIMBackwardWord = 0x3,XIMCaretUp = 0x4,XIMCaretDown = 0x5,XIMNextLine = 0x6,XIMPreviousLine = 0x7,XIMLineStart = 0x8,XIMLineEnd = 0x9,XIMAbsolutePosition = 0xA,XIMDontChange = 0xB,};
struct _DB90B039160079ECCA9FEE07AB98A9C7 {int __cnt;unsigned char *__ptr;unsigned char *__base;unsigned short __flag;unsigned char __fileL;unsigned char __fileH;};
struct _DD32CD37E943B9870F4F3BA5E795FA34 {int crt_id;int crt_x;int crt_y;int crt_x_pitch;int crt_planes;int cache_stride;unsigned int crt_system_config[2];unsigned int crt_configuration[3];unsigned int crt_config_nums[3];unsigned int crt_max_dma_size;int pad[8];};
enum _DD7C7A6F7774314680C00686808A9C69 {IcePaAuthContinue = 0x0,IcePaAuthAccepted = 0x1,IcePaAuthRejected = 0x2,IcePaAuthFailed = 0x3,};
enum _DE780EA72F8E98609D7C64E9E046D5B5 {disable_auto_release = 0x0,enable_auto_release = 0x1,};
struct _E019DD19C3E276A39E4768CCE95A0FD0 {int frabjous;};
enum _E0DDEABD8E0D109F5B9290526C46AAC0 {XmSTYLE_STRING = 0x0,XmSTYLE_COMPOUND_TEXT = 0x1,XmSTYLE_TEXT = 0x2,XmSTYLE_STANDARD_ICC_TEXT = 0x3,XmSTYLE_LOCALE = 0x20,XmSTYLE_COMPOUND_STRING = 0x21,};
struct _E16AECF0CDFBBC96C88D9B1362676A69 {long long wait_attr;long long wait_time;};
struct _E23A6C39C3F523A1F07F7D31A9774A09 {unsigned char byte0;unsigned int byte_1_res;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4;unsigned char byte_5;unsigned char byte_6;unsigned char byte_7;unsigned char magazine_position;unsigned char control;};
enum _E47FF6462DC373F46302D1643C3110BA {XmMENU_POPDOWN = 0x0,XmMENU_PROCESS_TREE = 0x1,XmMENU_TRAVERSAL = 0x2,XmMENU_SHELL_POPDOWN = 0x3,XmMENU_CALLBACK = 0x4,XmMENU_BUTTON = 0x5,XmMENU_CASCADING = 0x6,XmMENU_SUBMENU = 0x7,XmMENU_ARM = 0x8,XmMENU_DISARM = 0x9,XmMENU_BAR_CLEANUP = 0xA,XmMENU_STATUS = 0xB,XmMENU_MEMWIDGET_UPDATE = 0xC,XmMENU_BUTTON_POPDOWN = 0xD,XmMENU_RESTORE_EXCLUDED_TEAROFF_TO_TOPLEVEL_SHELL = 0xE,XmMENU_RESTORE_TEAROFF_TO_TOPLEVEL_SHELL = 0xF,XmMENU_RESTORE_TEAROFF_TO_MENUSHELL = 0x10,XmMENU_GET_LAST_SELECT_TOPLEVEL = 0x11,XmMENU_TEAR_OFF_ARM = 0x12,};
struct _E55328F014D59CB8D8C2D56824FBB3BE {char *name;char *desc;};
struct _E5E55CAD8ECB129EA540E15CC43132FC {unsigned int rev;};
enum _E79595227F6BDA2C423673671FC4E348 {XmCHANGE_ALL = 0x0,XmCHANGE_NONE = 0x1,XmCHANGE_WIDTH = 0x2,XmCHANGE_HEIGHT = 0x3,};
enum _E85AB9462C44CA88FCDDD856D94076DF {ELF_K_NONE = 0x0,ELF_K_AR = 0x1,ELF_K_ELF = 0x2,ELF_K_NUM = 0x3,};
enum _E86C706E9CF1494C2F453596344FEEEA {XmARROWS_INSENSITIVE = 0x0,XmARROWS_INCREMENT_SENSITIVE = 0x1,XmARROWS_DECREMENT_SENSITIVE = 0x2,XmARROWS_SENSITIVE = 0x3,XmARROWS_DEFAULT_SENSITIVITY = 0x4,};
enum _E899A937813FF0F496D2D85CB0B97843 {R_INVALID = 0x0,R_32BIT = 0x1,R_64BIT = 0x2,R_WRTEXT = 0x4,R_Q2SHARED = 0x8,R_SWLAZY = 0x10,};
struct _E8AE7D2799B28F177FB1DB3DC8745A46 {unsigned char lev3_idy;unsigned char lev4_class;unsigned char adv;unsigned char resvd;};
struct _E8C0CCE1B60E84FF431FA745320DCDBC {cio_poll_chain *link;};
struct _E9E5673C887B806F32B41DE6D906B7FD {int key_click_percent;int bell_percent;unsigned int bell_pitch;unsigned int bell_duration;unsigned int led_mask;int global_auto_repeat;char auto_repeats[32];};
enum _E9F3BD524B76C61AF16B8A561333FC34 {XmSLIDER = 0x0,XmTHERMOMETER = 0x1,};
enum _EA694365A6418A3DD1577EF52309349E {XmGEO_EXPAND = 0x0,XmGEO_CENTER = 0x1,XmGEO_PACK = 0x2,};
struct _EB03BB76CE0965D46ACEB5A56A93EB4A {unsigned char b_class;unsigned short b_subclass;unsigned char b_length;unsigned char b_token;char *at_name;};
enum _EBCA9F164108ED116591F6498DBF4ECF {_XmPLAIN_BG_BOX = 0x0,_XmFILL_BG_BOX = 0x1,_XmALWAYS_FILL_BG_BOX = 0x2,};
struct _EBE355A101A506B8BB9BC1A4B6A6F5B0 {unsigned short red;unsigned short green;unsigned short blue;};
enum _EBF75A9E76A9CEF4EBB28D1551F62A06 {XmAUTO_UNSET = 0x0,XmAUTO_BEGIN = 0x1,XmAUTO_MOTION = 0x2,XmAUTO_CANCEL = 0x3,XmAUTO_NO_CHANGE = 0x4,XmAUTO_CHANGE = 0x5,};
enum _EC4430DF07B90C5F659AF484C6831943 {XmPIXMAP = 0x1,XmSTRING = 0x2,};
struct _EC82DAE7E0933F1930E390E980E1D42C {short values_cnt;unsigned short *values;};
enum _ED89B77BBC0498CA6D4B15B58E0DB5B7 {XmTAB_NEXT = 0x0,XmTAB_NEWLINE = 0x1,XmTAB_EOS = 0x2,};
enum _EDBA1914F16BC538415B0E0A3A3FD3BB {FIND = 0x0,ENTER = 0x1,};
struct _EDFC536A603B7BCAB77AE790F95C9CC5 {char *name;unsigned int nlines;char **lines;};
struct _EE292E56C0FD0E3707F186263B097CE2 {unsigned short count;unsigned char card_id;unsigned char firmware_id;unsigned short firmware_rev;unsigned char mod;unsigned char ports_less_1;unsigned char reqs_less_1;unsigned char max_bsize_hi;unsigned char max_bsize_lo;unsigned char extension[64];};
enum _EEA1E45C87F2F12CF586C6CAA37C2E70 {XmNORMAL_MODE = 0x0,XmADD_MODE = 0x1,};
enum _EF45388F68EDF15F1284C14D8C9AFBF9 {XmsdLeft = 0x0,XmsdRight = 0x1,};
struct _F018256A0B988F59FE0D70778CAD7356 {int minor_axis;int d;int m;int m1;int incr1;int incr2;};
enum _F03D87357314FDF929A505A6F2750F7C {R_INVALID_ARCHITECTURE = 0x0,R_PARISC_1_0 = 0x1,R_PARISC_1_1 = 0x2,R_PARISC_1_2 = 0x3,R_PARISC_2_0 = 0x4,};
struct _F0C48DF009CFE2148821D41751BF8823 {unsigned char byte0;unsigned int byte_1_reserved;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4;unsigned int byte_5_link;};
enum _F2FA7DCB0BC74AA2AE1DC034F4E782CF {XmClipboardFail = 0x0,XmClipboardSuccess = 0x1,XmClipboardTruncate = 0x2,XmClipboardLocked = 0x4,XmClipboardBadFormat = 0x5,XmClipboardNoData = 0x6,};
enum _F31EAA3A8460C669313F2AF0A352AAF2 {XmGEO_ROW_MAJOR = 0x0,XmGEO_COLUMN_MAJOR = 0x1,};
struct _F53B3C946FF73649061E5AD36C6E157D {unsigned char byte0;unsigned int byte_1_res;unsigned char byte_2;unsigned char byte_3;unsigned char byte_4;unsigned char byte_5;unsigned char byte_6;unsigned char byte_7;unsigned char transfer_length;unsigned char control;};
struct _F5DE83966D4764611019A0F9A35F7E9F {unsigned int shift;};
enum _F7223B1E7C1DC13F2D08C27B96A6197A {XmHIGHLIGHT_NORMAL = 0x0,XmHIGHLIGHT_SELECTED = 0x1,XmHIGHLIGHT_SECONDARY_SELECTED = 0x2,XmSEE_DETAIL = 0x3,};
struct _F9484FC408161C65EE7F9E60DCC13373 {char b_tag;char b_type;unsigned short w_node_size;int user_data;struct _F9484FC408161C65EE7F9E60DCC13373___src_source_record_type *az_src_rec;unsigned char b_src_pos;unsigned char b_end_pos;};
struct _F94D37651AAFE0975D78E3AC0C195739 {unsigned char buff[996];};
struct _F96F2E029926CB4475F452724FD2C5B9 {unsigned int colormap;unsigned int red_max;unsigned int red_mult;unsigned int green_max;unsigned int green_mult;unsigned int blue_max;unsigned int blue_mult;unsigned int base_pixel;unsigned int visualid;unsigned int killid;};
enum _F993503C77100AD7A011D6DC65A9F0D7 {TTSF_USERSIGINFO = 0x1,};
struct _FB872D0C58DD36AB86724F5DA25D25F7 {char *domain_name;};
enum _FC4AADB96A9DD6E7CF562AA7AB1F6D8F {NL_KEY = 0x0,NL_SCREEN = 0x1,};
enum _FC6218B69985AC63482A1E06C8F2F561 {XmOUTLINE = 0x0,XmSPATIAL = 0x1,XmDETAIL = 0x2,};
struct _FE5196223FD21582DDA89DFE87E0C538 {char *spec;char *dir;int mflag;char *fstyp;char *dataptr;int datalen;};
enum _FF014EE17ED5831581850946D8EC063E {XmSKIP = 0x0,XmMERGE_REPLACE = 0x1,XmMERGE_OLD = 0x2,XmMERGE_NEW = 0x3,XmDUPLICATE = 0x4,};
enum _FF1FF5DA5604B4B1711E513F8BAF3747 {XmFOCUS_IN = 0x0,XmFOCUS_OUT = 0x1,XmENTER = 0x2,XmLEAVE = 0x3,};
struct _FF8B70C3EB5683862853208A738C6C2E {unsigned short first;unsigned short last;};
enum MACRO_MultibufferWindowUpdateHint {MultibufferWindowUpdateHint = 1,};
enum MACRO_XIMStringConversionLeftEdge {XIMStringConversionLeftEdge = 0x1,XIMStringConversionRightEdge = 0x2,XIMStringConversionTopEdge = 0x4,XIMStringConversionBottomEdge = 0x8,XIMStringConversionConcealed = 0x10,XIMStringConversionWrapped = 0x20,};
enum MACRO_XI_Add_XChangeDeviceControl {XI_Add_XChangeDeviceControl_Major = 1,XI_Add_XChangeDeviceControl_Minor = 3,};
enum MACRO_XkbXI_AllDeviceFeaturesMask {XkbXI_AllDeviceFeaturesMask = 0x1E,};
enum MACRO_XtCompositeExtensionVersion {XtCompositeExtensionVersion = 2,};
enum MACRO_sz_smRegisterClientReplyMsg {sz_smRegisterClientReplyMsg = 8,sz_smSaveYourselfMsg = 16,};
enum MACRO_sz_smSaveYourselfRequestMsg {sz_smSaveYourselfRequestMsg = 16,sz_smInteractRequestMsg = 8,};
enum MACRO_sz_xChangeKeyboardDeviceReq {sz_xChangeKeyboardDeviceReq = 8,sz_xChangeKeyboardDeviceReply = 32,};
enum MACRO_sz_xChangePointerControlReq {sz_xChangePointerControlReq = 12,};
enum MACRO_sz_xGetFeedbackControlReply {sz_xGetFeedbackControlReply = 32,sz_xChangeFeedbackControlReq = 12,};
enum MACRO_sz_xGetKeyboardMappingReply {sz_xGetKeyboardMappingReply = 32,};
enum MACRO_sz_xGetModifierMappingReply {sz_xGetModifierMappingReply = 32,sz_xListFontsWithInfoReq = 8,};
enum MACRO_sz_xHPUngrabDeviceButtonReq {sz_xHPUngrabDeviceButtonReq = 16,sz_xHPGrabDeviceKeyReq = 20,};
enum MACRO_sz_xPrintGetDocumentDataReq {sz_xPrintGetDocumentDataReq = 12,sz_xPrintGetDocumentDataReply = 32,};
enum MACRO_sz_xPrintGetOneAttributeReq {sz_xPrintGetOneAttributeReq = 16,sz_xPrintGetOneAttributeReply = 32,};
enum MACRO_sz_xRecordDisableContextReq {sz_xRecordDisableContextReq = 8,};
enum MACRO_sz_xSelectExtensionEventReq {sz_xSelectExtensionEventReq = 12,};
enum MACRO_sz_xSetModifierMappingReply {sz_xSetModifierMappingReply = 32,};
enum MACRO_sz_xieTecDecodeJPEGBaseline {sz_xieTecDecodeJPEGBaseline = 4,};
enum MACRO_sz_xieTecDecodeJPEGLossless {sz_xieTecDecodeJPEGLossless = 4,};
enum MACRO_sz_xieTecDecodeTIFFPackBits {sz_xieTecDecodeTIFFPackBits = 4,};
enum MACRO_sz_xieTecEncodeJPEGLossless {sz_xieTecEncodeJPEGLossless = 8,sz_xieTecEncodeTIFF2 = 4,};
enum MACRO_sz_xieTecEncodeServerChoice {sz_xieTecEncodeServerChoice = 4,};
enum MACRO_sz_xieTecEncodeTIFFPackBits {sz_xieTecEncodeTIFFPackBits = 4,sz_xieTecGamutNone = 0,sz_xieTecGamutClipRGB = 0,sz_xieTecGeomAntialias = 0,};
enum MACRO_sz_xieTypConstrainTechnique {sz_xieTypConstrainTechnique = 2,};
enum MACRO_sz_xkbExtensionDeviceNotify {sz_xkbExtensionDeviceNotify = 32,};
typedef struct _XIMStringConversionCallbackStruct XIMStringConversionCallbackStruct;
typedef struct _XmCascadeButtonGCacheObjClassPart XmCascadeButtonGCacheObjClassPart;
struct _XmFileSelectionBoxConstraintPart {char unused;};
struct _XmToggleButtonGCacheObjClassPart {int foo;};
typedef struct pdc_pat_events_handle_rtn_block pdc_pat_events_handle_rtn_block_t;
typedef struct pdc_pat_events_notify_rtn_block pdc_pat_events_notify_rtn_block_t;
typedef struct _7B1AACD52ED53B3363F77B2C48FE4393 xChangeDeviceDontPropagateListReq;
enum MACRO_IPTOS_PREC_INTERNETCONTROL {IPTOS_PREC_INTERNETCONTROL = 0xC0,};
enum MACRO_MultibufferBufferEventMask {MultibufferBufferEventMask = 1,};
enum MACRO_XI_Add_XSetDeviceValuators {XI_Add_XSetDeviceValuators_Major = 1,XI_Add_XSetDeviceValuators_Minor = 2,};
enum MACRO_XmCascadeButtonGadgetIndex {XmCascadeButtonGadgetIndex = 4,};
enum MACRO_XmPrimitiveClassExtVersion {XmPrimitiveClassExtVersion = 1,};
enum MACRO_sz_smSaveYourselfPhase2Msg {sz_smSaveYourselfPhase2Msg = 8,};
enum MACRO_sz_xChangeDeviceControlReq {sz_xChangeDeviceControlReq = 8,sz_xChangeDeviceControlReply = 32,};
enum MACRO_sz_xChangePointerDeviceReq {sz_xChangePointerDeviceReq = 8,sz_xChangePointerDeviceReply = 32,};
enum MACRO_sz_xGetDeviceKeyMappingReq {sz_xGetDeviceKeyMappingReq = 8,sz_xGetDeviceKeyMappingReply = 32,};
enum MACRO_sz_xGetExtensionVersionReq {sz_xGetExtensionVersionReq = 8,sz_xGetExtensionVersionReply = 32,};
enum MACRO_sz_xGetPointerControlReply {sz_xGetPointerControlReply = 32,};
enum MACRO_sz_xGetPointerMappingReply {sz_xGetPointerMappingReply = 32,};
enum MACRO_sz_xGetSelectionOwnerReply {sz_xGetSelectionOwnerReply = 32,};
enum MACRO_sz_xPrintGetPrinterListReq {sz_xPrintGetPrinterListReq = 12,sz_xPrintGetPrinterListReply = 32,};
enum MACRO_sz_xRecordCreateContextReq {sz_xRecordCreateContextReq = 20,};
enum MACRO_sz_xRecordEnableContextReq {sz_xRecordEnableContextReq = 8,sz_xRecordEnableContextReply = 32,};
enum MACRO_sz_xSetPointerMappingReply {sz_xSetPointerMappingReply = 32,};
enum MACRO_sz_xieDestroyPhotospaceReq {sz_xieDestroyPhotospaceReq = 8,sz_xieExecuteImmediateReq = 16,};
enum MACRO_sz_xieFloExportClientPhoto {sz_xieFloExportClientPhoto = 12,};
enum MACRO_sz_xieFloImplementationErr {sz_xieFloImplementationErr = 32,};
enum MACRO_sz_xieTecHistogramGaussian {sz_xieTecHistogramGaussian = 8,};
enum MACRO_sz_xieTypConvolveTechnique {sz_xieTypConvolveTechnique = 2,sz_xieTypDataClass = 1,};
enum MACRO_sz_xieTypGeometryTechnique {sz_xieTypGeometryTechnique = 2,sz_xieTypHistogramData = 8,};
enum MACRO_sz_xkbGetIndicatorMapReply {sz_xkbGetIndicatorMapReply = 32,sz_xkbIndicatorMapWireDesc = 12,};
enum MACRO_sz_xkbSetNamedIndicatorReq {sz_xkbSetNamedIndicatorReq = 32,sz_xkbGetNamesReq = 12,};
enum MACRO_sz_xkbSymInterpretWireDesc {sz_xkbSymInterpretWireDesc = 16,sz_xkbGetCompatMapReq = 12,};
typedef struct _XmCascadeButtonGCacheObjClassRec XmCascadeButtonGCacheObjClassRec;
typedef struct _14517969CE1DE2400F22B62AB3BF03DD XmContainerOutlineCallbackStruct;
typedef struct _9A231DBDEFAF4839DC9D8D20B6CD75A5 XmFileSelectionBoxCallbackStruct;
typedef struct _XmFileSelectionBoxConstraintPart XmFileSelectionBoxConstraintPart;
typedef char *( *XmMenuSavvyGetActivateCBNameProc)();
typedef struct _XmOperationChangedCallbackStruct XmOperationChangedCallbackStruct;
typedef struct _0185B28A9005276F6D3BB9A22595A3AE XmSpecifyLayoutDirectionTraitRec;
typedef struct _XmToggleButtonGCacheObjClassPart XmToggleButtonGCacheObjClassPart;
typedef struct _XmTraverseObscuredCallbackStruct XmTraverseObscuredCallbackStruct;
typedef struct _988632284A71C49D1170FC4598DEA165 xGetDeviceDontPropagateListReply;
typedef struct _90B3239242A1E7B072ABC9D9983310BF xGetSelectedExtensionEventsReply;
typedef struct _453648157F8C28DF21474B3959DE4C9C xHPGetDeviceModifierMappingReply;
typedef struct _C7FD7A89DA92577ACDB656B79C5D8B79 xHPSetDeviceModifierMappingReply;
enum MACRO_LLIO_TIMEOUT_ABORT_FAILED {LLIO_TIMEOUT_ABORT_FAILED = -72,};
enum MACRO_SmsRegisterClientProcMask {SmsRegisterClientProcMask = 1,SmsInteractRequestProcMask = 2,SmsInteractDoneProcMask = 4,SmsSaveYourselfRequestProcMask = 8,SmsSaveYourselfP2RequestProcMask = 16,SmsSaveYourselfDoneProcMask = 32,SmsCloseConnectionProcMask = 64,SmsSetPropertiesProcMask = 128,SmsDeletePropertiesProcMask = 256,SmsGetPropertiesProcMask = 512,};
enum MACRO_XIMStringConversionBuffer {XIMStringConversionBuffer = 0x1,XIMStringConversionLine = 0x2,XIMStringConversionWord = 0x3,XIMStringConversionChar = 0x4,};
enum MACRO_XmToggleButtonGadgetIndex {XmToggleButtonGadgetIndex = 4,};
enum MACRO_sz_smShutdownCancelledMsg {sz_smShutdownCancelledMsg = 8,};
enum MACRO_sz_xAllocColorPlanesReply {sz_xAllocColorPlanesReply = 32,};
enum MACRO_sz_xHPGetDeviceControlReq {sz_xHPGetDeviceControlReq = 8,sz_xHPGetDeviceControlReply = 64,};
enum MACRO_sz_xHPGrabDeviceButtonReq {sz_xHPGrabDeviceButtonReq = 24,};
enum MACRO_sz_xHPListInputDevicesReq {sz_xHPListInputDevicesReq = 4,sz_xHPListInputDevicesReply = 32,};
enum MACRO_sz_xHPSendDdxDriverMsgReq {sz_xHPSendDdxDriverMsgReq = 16,sz_xHPSendDdxDriverMsgReply = 32,};
enum MACRO_sz_xPrintGetAttributesReq {sz_xPrintGetAttributesReq = 12,sz_xPrintGetAttributesReply = 32,};
enum MACRO_sz_xPrintInputSelectedReq {sz_xPrintInputSelectedReq = 8,sz_xPrintInputSelectedReply = 32,};
enum MACRO_sz_xPrintSetAttributesReq {sz_xPrintSetAttributesReq = 16,};
enum MACRO_sz_xQueryTextExtentsReply {sz_xQueryTextExtentsReply = 32,};
enum MACRO_sz_xRecordQueryVersionReq {sz_xRecordQueryVersionReq = 8,sz_xRecordQueryVersionReply = 32,};
enum MACRO_sz_xSendExtensionEventReq {sz_xSendExtensionEventReq = 16,sz_xDeviceBellReq = 8,};
enum MACRO_sz_xSetDeviceValuatorsReq {sz_xSetDeviceValuatorsReq = 8,sz_xSetDeviceValuatorsReply = 32,};
enum MACRO_sz_xSetModifierMappingReq {sz_xSetModifierMappingReq = 4,sz_xPropIconSize = 24,};
enum MACRO_sz_xTestQueryInputSizeReq {sz_xTestQueryInputSizeReq = 4,XTestACTIONS_SIZE = 28,};
enum MACRO_sz_xUngrabDeviceButtonReq {sz_xUngrabDeviceButtonReq = 16,sz_xAllowDeviceEventsReq = 12,};
enum MACRO_sz_xieCreatePhotospaceReq {sz_xieCreatePhotospaceReq = 8,};
enum MACRO_sz_xieDestroyColorListReq {sz_xieDestroyColorListReq = 8,};
enum MACRO_sz_xieFloConvertFromIndex {sz_xieFloConvertFromIndex = 12,};
enum MACRO_sz_xieRedefinePhotofloReq {sz_xieRedefinePhotofloReq = 12,sz_xiePutClientDataReq = 20,};
enum MACRO_sz_xieTecConvolveConstant {sz_xieTecConvolveConstant = 12,sz_xieTecConvolveReplicate = 0,};
typedef struct _5EECF7E464F62285F8C0B2C4DC549E8B XmContainerSelectCallbackStruct;
typedef struct _XmToggleButtonGCacheObjClassRec XmToggleButtonGCacheObjClassRec;
struct _XmPushButtonGCacheObjClassPart {int foo;};
typedef struct pdc_pat_events_scan_rtn_block pdc_pat_events_scan_rtn_block_t;
typedef struct pdc_pat_pd_addr_map_rtn_block pdc_pat_pd_addr_map_rtn_block_t;
enum MACRO_IPTOS_PREC_FLASHOVERRIDE {IPTOS_PREC_FLASHOVERRIDE = 0x80,IPTOS_PREC_FLASH = 0x60,};
enum MACRO_MultibufferClobberNotify {MultibufferClobberNotify = 0,MultibufferUpdateNotify = 1,MultibufferNumberEvents = 2,};
enum MACRO_ReleaseByFreeingColormap {ReleaseByFreeingColormap = 1,};
enum MACRO_SYS_lwp_rwlock_tryrdlock {SYS_lwp_rwlock_tryrdlock = 458,SYS_LWP_RWLOCK_TRYWRLOCK = 459,};
enum MACRO_SYS_lwp_rwlock_trywrlock {SYS_lwp_rwlock_trywrlock = 459,SYS_LWP_RWLOCK_UNLOCK = 460,};
enum MACRO_XkbAllActionMessagesMask {XkbAllActionMessagesMask = 1,};
enum MACRO_XkbNewKeyboardNotifyMask {XkbNewKeyboardNotifyMask = 1,XkbMapNotifyMask = 2,XkbStateNotifyMask = 4,XkbControlsNotifyMask = 8,XkbIndicatorStateNotifyMask = 16,XkbIndicatorMapNotifyMask = 32,XkbNamesNotifyMask = 64,XkbCompatMapNotifyMask = 128,XkbBellNotifyMask = 256,XkbActionMessageMask = 512,XkbAccessXNotifyMask = 1024,XkbExtensionDeviceNotifyMask = 2048,XkbAllEventsMask = 4095,};
enum MACRO_XlibSpecificationRelease {XlibSpecificationRelease = 6,};
enum MACRO_XmArrowButtonGadgetIndex {XmArrowButtonGadgetIndex = 3,};
enum MACRO_XmManagerClassExtVersion {XmManagerClassExtVersion = 1,};
enum MACRO_XtObjectExtensionVersion {XtObjectExtensionVersion = 1,};
enum MACRO__devicePointerMotionHint {_devicePointerMotionHint = 0,_deviceButton1Motion = 1,_deviceButton2Motion = 2,_deviceButton3Motion = 3,_deviceButton4Motion = 4,_deviceButton5Motion = 5,_deviceButtonMotion = 6,_deviceButtonGrab = 7,_deviceOwnerGrabButton = 8,_noExtensionEvent = 9,};
enum MACRO_sz_smDeletePropertiesMsg {sz_smDeletePropertiesMsg = 8,};
enum MACRO_sz_smSaveYourselfDoneMsg {sz_smSaveYourselfDoneMsg = 8,};
enum MACRO_sz_xAllocColorCellsReply {sz_xAllocColorCellsReply = 32,};
enum MACRO_sz_xAllocNamedColorReply {sz_xAllocNamedColorReply = 32,};
enum MACRO_sz_xCreateGlyphCursorReq {sz_xCreateGlyphCursorReq = 32,sz_xRecolorCursorReq = 20,};
enum MACRO_sz_xGetMotionEventsReply {sz_xGetMotionEventsReply = 32,};
enum MACRO_sz_xHPGetExtEventMaskReq {sz_xHPGetExtEventMaskReq = 8,sz_xHPGetExtEventMaskReply = 32,};
enum MACRO_sz_xHPGetServerModeReply {sz_xHPGetServerModeReply = 32,sz_xHPGetDeviceKeyMappingReq = 12,};
enum MACRO_sz_xHPGetWindowCursorReq {sz_xHPGetWindowCursorReq = 8,sz_xHPGetWindowCursorReply = 32,};
enum MACRO_sz_xHPUngrabDeviceKeyReq {sz_xHPUngrabDeviceKeyReq = 16,sz_xHPDeviceAutoRepeatOnReq = 12,};
enum MACRO_sz_xPolyFillRectangleReq {sz_xPolyFillRectangleReq = 12,};
enum MACRO_sz_xPrintGetContextReply {sz_xPrintGetContextReply = 32,sz_xPrintDestroyContextReq = 8,};
enum MACRO_sz_xPrintQueryScreensReq {sz_xPrintQueryScreensReq = 4,sz_xPrintQueryScreensReply = 32,};
enum MACRO_sz_xPrintQueryVersionReq {sz_xPrintQueryVersionReq = 4,sz_xPrintQueryVersionReply = 32,};
enum MACRO_sz_xRecordFreeContextReq {sz_xRecordFreeContextReq = 8,};
enum MACRO_sz_xSetClipRectanglesReq {sz_xSetClipRectanglesReq = 12,sz_xCopyAreaReq = 28,sz_xCopyPlaneReq = 32,};
enum MACRO_sz_xSetSelectionOwnerReq {sz_xSetSelectionOwnerReq = 16,sz_xConvertSelectionReq = 24,sz_xSendEventReq = 44,};
enum MACRO_sz_xTranslateCoordsReply {sz_xTranslateCoordsReply = 32,};
enum MACRO_sz_xieCreateColorListReq {sz_xieCreateColorListReq = 8,};
enum MACRO_sz_xieDestroyPhotofloReq {sz_xieDestroyPhotofloReq = 8,sz_xieExecutePhotofloReq = 12,};
enum MACRO_sz_xieDestroyPhotomapReq {sz_xieDestroyPhotomapReq = 8,};
enum MACRO_sz_xieExportAvailableEvn {sz_xieExportAvailableEvn = 32,};
enum MACRO_sz_xieFloExportClientROI {sz_xieFloExportClientROI = 8,sz_xieFloExportDrawable = 20,};
enum MACRO_sz_xieFloImportClientROI {sz_xieFloImportClientROI = 8,sz_xieFloImportDrawable = 24,sz_xieFloImportDrawablePlane = 28,};
enum MACRO_sz_xieQueryTechniquesReq {sz_xieQueryTechniquesReq = 8,sz_xieQueryTechniquesReply = 32,};
enum MACRO_sz_xieTypDitherTechnique {sz_xieTypDitherTechnique = 2,};
enum MACRO_sz_xieTypEncodeTechnique {sz_xieTypEncodeTechnique = 2,sz_xieTypPhotospace = 4,};
enum MACRO_sz_xieTypPhotofloOutcome {sz_xieTypPhotofloOutcome = 1,};
enum MACRO_sz_xkbDeviceLedsWireDesc {sz_xkbDeviceLedsWireDesc = 20,};
enum MACRO_sz_xkbKTMapEntryWireDesc {sz_xkbKTMapEntryWireDesc = 8,sz_xkbKTSetMapEntryWireDesc = 4,};
enum MACRO_sz_xkbLogoDoodadWireDesc {sz_xkbLogoDoodadWireDesc = 20,};
enum MACRO_sz_xkbOverlayKeyWireDesc {sz_xkbOverlayKeyWireDesc = 8,sz_xkbShapeDoodadWireDesc = 20,};
enum MACRO_sz_xkbSetIndicatorMapReq {sz_xkbSetIndicatorMapReq = 12,sz_xkbGetNamedIndicatorReq = 16,sz_xkbGetNamedIndicatorReply = 32,};
enum MACRO_sz_xkbTextDoodadWireDesc {sz_xkbTextDoodadWireDesc = 20,};
enum MACRO_xieValConstrainClipScale {xieValConstrainClipScale = 2,xieValConstrainHardClip = 4,};
enum MACRO_xieValEncodeServerChoice {xieValEncodeServerChoice = 1,xieValEncodeUncompressedSingle = 2,xieValEncodeUncompressedTriple = 3,xieValEncodeG31D = 4,xieValEncodeG32D = 6,xieValEncodeG42D = 8,xieValEncodeJPEGBaseline = 10,xieValEncodeJPEGLossless = 12,xieValEncodeTIFF2 = 14,xieValEncodeTIFFPackBits = 16,};
enum MACRO_xieValWhiteAdjustDefault {xieValWhiteAdjustDefault = 0,xieValWhiteAdjustNone = 1,xieValWhiteAdjustCIELabShift = 2,};
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmCascadeButtonGadgetClassPart;
typedef struct _XmDragDropFinishCallbackStruct XmDragDropFinishCallbackStruct;
typedef struct _XmPushButtonGCacheObjClassPart XmPushButtonGCacheObjClassPart;
typedef struct _XmScrolledWindowConstraintPart XmScrolledWindowConstraintPart;
struct _XmBulletinBoardConstraintPart {char unused;};
struct _XmSeparatorGCacheObjClassPart {int foo;};
typedef struct pdc_pat_cell_mod_maddr_block pdc_pat_cell_mod_maddr_block_t;
typedef struct pdc_pat_events_cap_rtn_block pdc_pat_events_cap_rtn_block_t;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smSaveYourselfPhase2RequestMsg;
typedef struct _sym_val_forward_ref_entry_type sym_val_forward_ref_entry_type;
typedef struct _625B72EC204AD184FA367A67F4C8645C xGetDeviceDontPropagateListReq;
typedef struct _D0A230E2822E6F114388A4393E99A918 xGetDeviceModifierMappingReply;
typedef struct _625B72EC204AD184FA367A67F4C8645C xGetSelectedExtensionEventsReq;
typedef struct _EFD32AB26A9F2C4402B187171A2243FF xHPGetDeviceModifierMappingReq;
typedef struct _3357D970642A072E0456347CD968AE51 xHPSetDeviceModifierMappingReq;
typedef struct _5F1426FF167D9E06CE7F137AEA610D0C xSetDeviceModifierMappingReply;
typedef struct _63AF34F92436E0E20A119355607DCC44 xieTecDecodeUncompressedSingle;
typedef struct _C08104BD47142265B42A3F745A07258E xieTecDecodeUncompressedTriple;
typedef struct _9E6AFD3F610E739A7AC12834FF3A90B2 xieTecEncodeUncompressedSingle;
typedef struct _E1CA6FCDCEF9A9C396CC3F3CDC444223 xieTecEncodeUncompressedTriple;
enum MACRO_CIO_ILLEGAL_TERMINATION {CIO_ILLEGAL_TERMINATION = -29,};
enum MACRO_LLIO_CANNOT_RELEASE_MEM {LLIO_CANNOT_RELEASE_MEM = -24,};
enum MACRO_NumPropIconSizeElements {NumPropIconSizeElements = 6,};
enum MACRO_PTHREAD_CANCEL_DEFERRED {PTHREAD_CANCEL_DEFERRED = 0,PTHREAD_CANCEL_ASYNCHRONOUS = 1,PTHREAD_CANCELED = -3,};
enum MACRO_SmcSaveYourselfProcMask {SmcSaveYourselfProcMask = 1,SmcDieProcMask = 2,SmcSaveCompleteProcMask = 4,SmcShutdownCancelledProcMask = 8,};
enum MACRO_X_ieQueryImageExtension {X_ieQueryImageExtension = 1,X_ieQueryTechniques = 2,X_ieCreateColorList = 3,X_ieDestroyColorList = 4,X_iePurgeColorList = 5,X_ieQueryColorList = 6,X_ieCreateLUT = 7,X_ieDestroyLUT = 8,X_ieCreatePhotomap = 9,X_ieDestroyPhotomap = 10,X_ieQueryPhotomap = 11,X_ieCreateROI = 12,X_ieDestroyROI = 13,X_ieCreatePhotospace = 14,X_ieDestroyPhotospace = 15,X_ieExecuteImmediate = 16,X_ieCreatePhotoflo = 17,X_ieDestroyPhotoflo = 18,X_ieExecutePhotoflo = 19,X_ieModifyPhotoflo = 20,X_ieRedefinePhotoflo = 21,X_iePutClientData = 22,X_ieGetClientData = 23,X_ieQueryPhotoflo = 24,X_ieAwait = 25,X_ieAbort = 26,};
enum MACRO_XkbAllAccessXEventsMask {XkbAllAccessXEventsMask = 0xF,};
enum MACRO_XkbExplicitKeyType1Mask {XkbExplicitKeyType1Mask = 1,XkbExplicitKeyType2Mask = 2,XkbExplicitKeyType3Mask = 4,XkbExplicitKeyType4Mask = 8,XkbExplicitInterpretMask = 16,XkbExplicitAutoRepeatMask = 32,XkbExplicitBehaviorMask = 64,XkbExplicitVModMapMask = 128,XkbAllExplicitMask = 255,};
enum MACRO_XkbLC_ForceLatin1Lookup {XkbLC_ForceLatin1Lookup = 1,XkbLC_ConsumeLookupMods = 2,XkbLC_AlwaysConsumeShiftAndLock = 4,XkbLC_IgnoreNewKeyboards = 8,XkbLC_ControlFallback = 16,XkbLC_ConsumeKeysOnComposeFail = 536870912,XkbLC_ComposeLED = 1073741824,XkbLC_BeepOnComposeFail = -2147483648,XkbLC_AllComposeControls = -1073741824,XkbLC_AllControls = -1073741793,};
enum MACRO_XkbSA_SwitchApplication {XkbSA_SwitchApplication = 1,XkbSA_SwitchAbsolute = 4,};
enum MACRO_XmFileSelectionBoxIndex {XmFileSelectionBoxIndex = 9,};
enum MACRO_XmGadgetClassExtVersion {XmGadgetClassExtVersion = 2,};
enum MACRO_XmPushButtonGadgetIndex {XmPushButtonGadgetIndex = 4,};
enum MACRO_XtShellExtensionVersion {XtShellExtensionVersion = 1,};
enum MACRO_sz_smCloseConnectionMsg {sz_smCloseConnectionMsg = 8,};
enum MACRO_sz_smPropertiesReplyMsg {sz_smPropertiesReplyMsg = 8,};
enum MACRO_sz_xForceScreenSaverReq {sz_xForceScreenSaverReq = 4,};
enum MACRO_sz_xGetDeviceControlReq {sz_xGetDeviceControlReq = 8,sz_xGetDeviceControlReply = 32,};
enum MACRO_sz_xGetScreenSaverReply {sz_xGetScreenSaverReply = 32,};
enum MACRO_sz_xHPGetDeviceFocusReq {sz_xHPGetDeviceFocusReq = 8,sz_xHPGetDeviceFocusReply = 32,};
enum MACRO_sz_xHPSetDeviceFocusReq {sz_xHPSetDeviceFocusReq = 20,};
enum MACRO_sz_xHPSetInputDeviceReq {sz_xHPSetInputDeviceReq = 12,sz_xHPSetInputDeviceReply = 32,};
enum MACRO_sz_xListExtensionsReply {sz_xListExtensionsReply = 32,};
enum MACRO_sz_xListInputDevicesReq {sz_xListInputDevicesReq = 4,sz_xListInputDevicesReply = 32,};
enum MACRO_sz_xListPropertiesReply {sz_xListPropertiesReply = 32,};
enum MACRO_sz_xQueryDeviceStateReq {sz_xQueryDeviceStateReq = 8,sz_xQueryDeviceStateReply = 32,};
enum MACRO_sz_xQueryExtensionReply {sz_xQueryExtensionReply = 32,};
enum MACRO_sz_xQueryTextExtentsReq {sz_xQueryTextExtentsReq = 8,};
enum MACRO_sz_xRecordGetContextReq {sz_xRecordGetContextReq = 8,sz_xRecordGetContextReply = 32,};
enum MACRO_sz_xSetAccessControlReq {sz_xSetAccessControlReq = 4,sz_xGetKeyboardMappingReq = 8,};
enum MACRO_sz_xSetCloseDownModeReq {sz_xSetCloseDownModeReq = 4,sz_xClearAreaReq = 16,};
enum MACRO_sz_xieCreatePhotofloReq {sz_xieCreatePhotofloReq = 12,};
enum MACRO_sz_xieCreatePhotomapReq {sz_xieCreatePhotomapReq = 8,};
enum MACRO_sz_xieFloConvertFromRGB {sz_xieFloConvertFromRGB = 12,sz_xieFloConvertToIndex = 20,};
enum MACRO_sz_xieFloExportPhotomap {sz_xieFloExportPhotomap = 16,sz_xieFloExportROI = 12,};
enum MACRO_sz_xieImportObscuredEvn {sz_xieImportObscuredEvn = 32,};
enum MACRO_sz_xieModifyPhotofloReq {sz_xieModifyPhotofloReq = 12,};
enum MACRO_sz_xiePurgeColorListReq {sz_xiePurgeColorListReq = 8,};
enum MACRO_sz_xieQueryColorListReq {sz_xieQueryColorListReq = 8,sz_xieQueryColorListReply = 32,};
enum MACRO_sz_xieTypGamutTechnique {sz_xieTypGamutTechnique = 2,};
enum MACRO_sz_xieTypHistogramShape {sz_xieTypHistogramShape = 2,sz_xieTypInterleave = 1,};
enum MACRO_sz_xieTypTechniqueGroup {sz_xieTypTechniqueGroup = 1,sz_xieTypTechniqueRec = 8,sz_xieTypTile = 12,};
enum MACRO_sz_xkbAnyDoodadWireDesc {sz_xkbAnyDoodadWireDesc = 20,};
enum MACRO_sz_xkbGetCompatMapReply {sz_xkbGetCompatMapReply = 32,sz_xkbSetCompatMapReq = 16,sz_xkbGetIndicatorStateReq = 8,};
enum MACRO_sz_xkbLatchLockStateReq {sz_xkbLatchLockStateReq = 16,sz_xkbGetControlsReq = 8,};
enum MACRO_sz_xkbListComponentsReq {sz_xkbListComponentsReq = 8,sz_xkbListComponentsReply = 32,};
enum MACRO_sz_xkbNewKeyboardNotify {sz_xkbNewKeyboardNotify = 32,};
enum MACRO_sz_xkbPerClientFlagsReq {sz_xkbPerClientFlagsReq = 28,sz_xkbPerClientFlagsReply = 32,};
enum MACRO_xieEarliestMinorVersion {xieEarliestMinorVersion = 0,};
enum MACRO_xieValColorAllocDefault {xieValColorAllocDefault = 0,xieValColorAllocAll = 2,xieValColorAllocMatch = 4,xieValColorAllocRequantize = 6,};
typedef struct _XIMPreeditCaretCallbackStruct XIMPreeditCaretCallbackStruct;
typedef struct _XkbExtensionDeviceNotify XkbExtensionDeviceNotifyEvent;
typedef struct _XmBulletinBoardConstraintPart XmBulletinBoardConstraintPart;
typedef struct _XmCascadeButtonGadgetClassRec XmCascadeButtonGadgetClassRec;
typedef struct _XmDropSiteEnterCallbackStruct XmDropSiteEnterCallbackStruct;
typedef struct _XmDropSiteLeaveCallbackStruct XmDropSiteLeaveCallbackStruct;
typedef struct _XmFileSelectionBoxClassRec *XmFileSelectionBoxWidgetClass;
typedef struct _XmPushButtonGCacheObjClassRec XmPushButtonGCacheObjClassRec;
typedef struct _XmScrolledWindowConstraintRec *XmScrolledWindowConstraintPtr;
typedef struct _XmScrolledWindowConstraintRec XmScrolledWindowConstraintRec;
typedef struct _XmSeparatorGCacheObjClassPart XmSeparatorGCacheObjClassPart;
typedef struct _XmSimpleSpinBoxConstraint XmSimpleSpinBoxConstraintPart;
typedef struct _0185B28A9005276F6D3BB9A22595A3AE *XmSpecifyLayoutDirectionTrait;
typedef struct _D89E607749B4D1F5D66FC1721C178233 XmTextVerifyCallbackStructWcs;
typedef struct _XmToggleButtonGadgetClassPart XmToggleButtonGadgetClassPart;
typedef struct _XmTopLevelEnterCallbackStruct XmTopLevelEnterCallbackStruct;
typedef struct _XmTopLevelLeaveCallbackStruct XmTopLevelLeaveCallbackStruct;
struct _XmSelectionBoxConstraintPart {char unused;};
typedef struct _8CF3F0EEA440C7F93DC380FDE5207EC4 crt_config_nums_visx_entry0_t;
typedef struct pdc_pat_cell_info_rtn_block pdc_pat_cell_info_rtn_block_t;
typedef struct _E23A6C39C3F523A1F07F7D31A9774A09 select_cartridge_type_fujitsu;
typedef struct _16E2BEF1A7CBC54AADB59FB4B07532F9 xHPGetDeviceMotionEventsReply;
typedef struct _4A647C60455AE07B29957B156A9865A4 xPrintGetImageResolutionReply;
typedef struct _0938F46EF6BF1A288D23C461D10040B7 xPrintSetImageResolutionReply;
enum MACRO_CIO_ILLEGAL_DISCONNECT {CIO_ILLEGAL_DISCONNECT_ORDER = -30,};
enum MACRO_LLIO_LOCK_STAT_ALREADY {LLIO_LOCK_STAT_ALREADY_BUSY = -70,};
enum MACRO_MultibufferUnclobbered {MultibufferUnclobbered = 0,MultibufferPartiallyClobbered = 1,MultibufferFullyClobbered = 2,MultibufferClobberNotifyMask = 33554432,MultibufferUpdateNotifyMask = 67108864,};
enum MACRO_NISPASSWD_AUTHENTICATE {NISPASSWD_AUTHENTICATE = 1,NISPASSWD_UPDATE = 2,};
enum MACRO_NeedFunctionPrototypes {NeedFunctionPrototypes = 1,};
enum MACRO_NumPropWMHintsElements {NumPropWMHintsElements = 9,};
enum MACRO_NumPropWMStateElements {NumPropWMStateElements = 2,};
enum MACRO_OldNumPropSizeElements {OldNumPropSizeElements = 15,NumPropSizeElements = 18,};
enum MACRO_PDC_MODEL_CAPABILITIES {PDC_MODEL_CAPABILITIES_OS32 = 0x2,PDC_MODEL_CAPABILITIES_OS64 = 0x1,};
enum MACRO_RevertToFollowKeyboard {RevertToFollowKeyboard = 3,};
enum MACRO_SYS_lwp_cond_broadcast {SYS_lwp_cond_broadcast = 414,SYS_LWP_COND_WAIT_SYS = 415,};
enum MACRO_SYS_lwp_rwlock_destroy {SYS_lwp_rwlock_destroy = 455,SYS_LWP_RWLOCK_RDLOCK_SYS = 456,};
enum MACRO_SYS_sched_get_priority {SYS_sched_get_priority_min = 343,SYS_SCHED_RR_GET_INTERVAL = 344,};
enum MACRO_SYS_sched_getscheduler {SYS_sched_getscheduler = 340,SYS_SCHED_YIELD = 341,};
enum MACRO_SYS_sched_setscheduler {SYS_sched_setscheduler = 339,SYS_SCHED_GETSCHEDULER = 340,};
enum MACRO_X_MbufGetBufferVersion {X_MbufGetBufferVersion = 0,X_MbufCreateImageBuffers = 1,X_MbufDestroyImageBuffers = 2,X_MbufDisplayImageBuffers = 3,X_MbufSetMBufferAttributes = 4,X_MbufGetMBufferAttributes = 5,X_MbufSetBufferAttributes = 6,X_MbufGetBufferAttributes = 7,X_MbufGetBufferInfo = 8,X_MbufCreateStereoWindow = 9,X_MbufClearImageBufferArea = 10,};
enum MACRO_XkbActionMessageLength {XkbActionMessageLength = 6,};
enum MACRO_XkbAllBooleanCtrlsMask {XkbAllBooleanCtrlsMask = 0x1FFF,XkbAllControlsMask = 0xF8001FFF,};
enum MACRO_XkbSA_MessageOnRelease {XkbSA_MessageOnRelease = 2,XkbSA_MessageGenKeyEvent = 4,};
enum MACRO_XmDropSiteManagerIndex {XmDropSiteManagerIndex = 1,};
enum MACRO_XmSeparatorGadgetIndex {XmSeparatorGadgetIndex = 3,XmCascadeBGIndex = 4,};
enum MACRO__POSIX_THREAD_PRIORITY {_POSIX_THREAD_PRIORITY_SCHEDULING = 1,};
enum MACRO_sz_iceAuthNextPhaseMsg {sz_iceAuthNextPhaseMsg = 16,sz_iceConnectionReplyMsg = 8,};
enum MACRO_sz_iceProtocolSetupMsg {sz_iceProtocolSetupMsg = 16,sz_iceProtocolReplyMsg = 8,};
enum MACRO_sz_smRegisterClientMsg {sz_smRegisterClientMsg = 8,};
enum MACRO_sz_xAllocColorCellsReq {sz_xAllocColorCellsReq = 12,sz_xAllocColorPlanesReq = 16,};
enum MACRO_sz_xCirculateWindowReq {sz_xCirculateWindowReq = 8,};
enum MACRO_sz_xConfigureWindowReq {sz_xConfigureWindowReq = 12,};
enum MACRO_sz_xDPMSGetTimeoutsReq {sz_xDPMSGetTimeoutsReq = 4,sz_xDPMSGetTimeoutsReply = 32,};
enum MACRO_sz_xDPMSSetTimeoutsReq {sz_xDPMSSetTimeoutsReq = 12,};
enum MACRO_sz_xGetInputFocusReply {sz_xGetInputFocusReply = 32,sz_xQueryKeymapReply = 40,sz_xQueryFontReply = 60,};
enum MACRO_sz_xPrintSetContextReq {sz_xPrintSetContextReq = 8,sz_xPrintGetContextReq = 4,};
enum MACRO_sz_xQueryBestSizeReply {sz_xQueryBestSizeReply = 32,};
enum MACRO_sz_xTranslateCoordsReq {sz_xTranslateCoordsReq = 16,sz_xWarpPointerReq = 24,};
enum MACRO_sz_xUngrabDeviceKeyReq {sz_xUngrabDeviceKeyReq = 16,sz_xGrabDeviceButtonReq = 20,sz_xGrabDeviceButtonReply = 32,};
enum MACRO_sz_xieGetClientDataReq {sz_xieGetClientDataReq = 20,sz_xieGetClientDataReply = 32,};
enum MACRO_sz_xieQueryPhotofloReq {sz_xieQueryPhotofloReq = 12,sz_xieQueryPhotofloReply = 32,};
enum MACRO_sz_xieQueryPhotomapReq {sz_xieQueryPhotomapReq = 8,sz_xieQueryPhotomapReply = 48,};
enum MACRO_sz_xieTecColorAllocAll {sz_xieTecColorAllocAll = 4,sz_xieTecColorAllocMatch = 8,};
enum MACRO_sz_xieTecDitherOrdered {sz_xieTecDitherOrdered = 4,};
enum MACRO_sz_xieTypPhotofloState {sz_xieTypPhotofloState = 1,sz_xieTypPhotomap = 4,};
enum MACRO_sz_xieTypTripleofCARD8 {sz_xieTypTripleofCARD8 = 3,sz_xieTypTripleofCARD16 = 6,sz_xieTypTripleofCARD32 = 12,};
enum MACRO_sz_xkbBehaviorWireDesc {sz_xkbBehaviorWireDesc = 4,sz_xkbActionWireDesc = 8,sz_xkbGetMapReq = 28,sz_xkbGetMapReply = 40,};
enum MACRO_sz_xkbGetControlsReply {sz_xkbGetControlsReply = 92,sz_xkbSetControlsReq = 100,};
enum MACRO_sz_xkbGetDeviceInfoReq {sz_xkbGetDeviceInfoReq = 16,sz_xkbGetDeviceInfoReply = 32,};
enum MACRO_sz_xkbSetDeviceInfoReq {sz_xkbSetDeviceInfoReq = 12,sz_xkbSetDebuggingFlagsReq = 24,sz_xkbSetDebuggingFlagsReply = 32,};
enum MACRO_xieElemImportClientLUT {xieElemImportClientLUT = 1,xieElemImportClientPhoto = 2,xieElemImportClientROI = 3,xieElemImportDrawable = 4,xieElemImportDrawablePlane = 5,xieElemImportLUT = 6,xieElemImportPhotomap = 7,xieElemImportROI = 8,xieElemArithmetic = 9,xieElemBandCombine = 10,xieElemBandExtract = 11,xieElemBandSelect = 12,xieElemBlend = 13,xieElemCompare = 14,xieElemConstrain = 15,xieElemConvertFromIndex = 16,xieElemConvertFromRGB = 17,xieElemConvertToIndex = 18,xieElemConvertToRGB = 19,xieElemConvolve = 20,xieElemDither = 21,xieElemGeometry = 22,xieElemLogical = 23,xieElemMatchHistogram = 24,xieElemMath = 25,xieElemPasteUp = 26,xieElemPoint = 27,xieElemUnconstrain = 28,xieElemExportClientHistogram = 29,xieElemExportClientLUT = 30,xieElemExportClientPhoto = 31,xieElemExportClientROI = 32,xieElemExportDrawable = 33,xieElemExportDrawablePlane = 34,xieElemExportLUT = 35,xieElemExportPhotomap = 36,xieElemExportROI = 37,};
typedef struct _XIMPreeditDrawCallbackStruct XIMPreeditDrawCallbackStruct;
typedef unsigned short XIMStringConversionOperation;
typedef struct _XmArrowButtonGadgetClassPart XmArrowButtonGadgetClassPart;
typedef struct _XmCascadeButtonGCacheObjPart XmCascadeButtonGCacheObjPart;
typedef struct _XmDialogShellExtClassPart *XmDialogShellExtClassPartPtr;
typedef struct _XmDropSiteManagerClassRec *XmDropSiteManagerObjectClass;
typedef struct _XmFileSelectionBoxConstraintPart *XmFileSelectionBoxConstraint;
typedef struct _86EBEF6FA494C5E7B15E4A55F7A590B9 XmPopupHandlerCallbackStruct;
typedef struct _0CC2C7B5C742C31129BAD132CF836E30 XmSelectionBoxCallbackStruct;
typedef struct _XmSelectionBoxConstraintPart XmSelectionBoxConstraintPart;
typedef struct _XmSeparatorGCacheObjClassRec XmSeparatorGCacheObjClassRec;
typedef struct _XmSimpleSpinBoxConstraintRec *XmSimpleSpinBoxConstraintPtr;
typedef struct _XmSimpleSpinBoxConstraintRec XmSimpleSpinBoxConstraintRec;
typedef struct _XmSpecifyUnhighlightTraitRec XmSpecifyUnhighlightTraitRec;
typedef struct _01593098553202BCB9DBD5F27E6226E8 XmToggleButtonCallbackStruct;
typedef struct _XmToggleButtonGadgetClassRec XmToggleButtonGadgetClassRec;
typedef struct _50444C3EFF8C2D01F53423DE01692AE5 XmTransferDoneCallbackStruct;
typedef struct _XmVendorShellExtClassPart *XmVendorShellExtClassPartPtr;
typedef struct _D769135999DFEE6143DE1D9CD80B3AD5 XtChangeHookSetValuesDataRec;
struct _XmDrawingAreaConstraintPart {char unused;};
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_clear_local_busy_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_force_disconnect_req_t;
typedef struct _EB73C50A98CF683D2F515C85045FD863 dl_reply_update_status_ind_t;
typedef struct pdc_pat_cell_mod_rtn_block pdc_pat_cell_mod_rtn_block_t;
typedef struct _EE866C64B9E084E52F8894370051FA3D xGetDeviceButtonMappingReply;
typedef struct _8973D72E68A3D7427BDE924AB847E810 xGetDeviceModifierMappingReq;
typedef struct _E9EF7C8FFB9FACE44571DB02DBC6695F xHPChangeDeviceKeyMappingReq;
typedef struct _4EB5A781921B45AC1AB8FBD134D3E0D0 xHPGetCurrentDeviceMaskReply;
typedef struct _56876A3CF1ED32735E0999A0D66A4738 xListInstalledColormapsReply;
typedef struct _160BFFB979B4E4E895FB2627A5A1E75F xPrintGetPageDimensionsReply;
typedef struct _748E6396DB81A71CC67026C5868B0A61 xSetDeviceButtonMappingReply;
typedef struct _BB279EA07E8836E412716D1B8B41E21D xSetDeviceModifierMappingReq;
typedef struct _064F821DAAD25287F43010D2D1702E84 xieTecGeomAntialiasByLowpass;
typedef struct _DDC886CE58B08A3828A7006540E329D9 xieTecWhiteAdjustCIELabShift;
typedef struct _ApplicationShellClassRec *ApplicationShellWidgetClass;
typedef struct _331AC9EA7DEA54BC7D149DCE58DE8017 ConstraintClassExtensionRec;
enum MACRO_ApplicationShellIndex {ApplicationShellIndex = 9,};
enum MACRO_DisableScreenInterval {DisableScreenInterval = 0,};
enum MACRO_IPOPT_SECUR_TOPSECRET {IPOPT_SECUR_TOPSECRET = 0x6BC5,};
enum MACRO_LLIO_OVER_TEMPERATURE {LLIO_OVER_TEMPERATURE = -77,};
enum MACRO_MWM_INPUT_APPLICATION {MWM_INPUT_APPLICATION_MODAL = 1,};
enum MACRO_MrmOsOpenParamVersion {MrmOsOpenParamVersion = 1,};
enum MACRO_NeedVarargsPrototypes {NeedVarargsPrototypes = 1,};
enum MACRO_OLD_NS_LC_RESOURCELIM {OLD_NS_LC_RESOURCELIM = 4,NS_LC_PROLOG = 327681,};
enum MACRO_PTHREAD_STACK_INVALID {PTHREAD_STACK_INVALID_NP = 0,PTHREAD_STACK_VALID_NP = 1,};
enum MACRO_SYS_lwp_rwlock_rdlock {SYS_lwp_rwlock_rdlock_sys = 456,SYS_LWP_RWLOCK_WRLOCK_SYS = 457,};
enum MACRO_SYS_lwp_rwlock_unlock {SYS_lwp_rwlock_unlock = 460,SYS_TTRACE = 461,};
enum MACRO_SYS_lwp_rwlock_wrlock {SYS_lwp_rwlock_wrlock_sys = 457,SYS_LWP_RWLOCK_TRYRDLOCK = 458,};
enum MACRO_XRecordCurrentClients {XRecordCurrentClients = 1,XRecordFutureClients = 2,XRecordAllClients = 3,};
enum MACRO_X_GetExtensionVersion {X_GetExtensionVersion = 1,X_ListInputDevices = 2,X_OpenDevice = 3,X_CloseDevice = 4,X_SetDeviceMode = 5,X_SelectExtensionEvent = 6,X_GetSelectedExtensionEvents = 7,X_ChangeDeviceDontPropagateList = 8,X_GetDeviceDontPropagateList = 9,X_GetDeviceMotionEvents = 10,X_ChangeKeyboardDevice = 11,X_ChangePointerDevice = 12,X_GrabDevice = 13,X_UngrabDevice = 14,X_GrabDeviceKey = 15,X_UngrabDeviceKey = 16,X_GrabDeviceButton = 17,X_UngrabDeviceButton = 18,X_AllowDeviceEvents = 19,X_GetDeviceFocus = 20,X_SetDeviceFocus = 21,X_GetFeedbackControl = 22,X_ChangeFeedbackControl = 23,X_GetDeviceKeyMapping = 24,X_ChangeDeviceKeyMapping = 25,X_GetDeviceModifierMapping = 26,X_SetDeviceModifierMapping = 27,X_GetDeviceButtonMapping = 28,X_SetDeviceButtonMapping = 29,X_QueryDeviceState = 30,X_SendExtensionEvent = 31,X_DeviceBell = 32,X_SetDeviceValuators = 33,X_GetDeviceControl = 34,X_ChangeDeviceControl = 35,};
enum MACRO_XkbComponentNamesMask {XkbComponentNamesMask = 0x3F,XkbAllNamesMask = 0x3FFF,};
enum MACRO_XkbGeomMaxLabelColors {XkbGeomMaxLabelColors = 3,XkbGeomMaxPriority = 255,};
enum MACRO_XkbGeomPropertiesMask {XkbGeomPropertiesMask = 1,XkbGeomColorsMask = 2,XkbGeomShapesMask = 4,XkbGeomSectionsMask = 8,XkbGeomDoodadsMask = 16,XkbGeomKeyAliasesMask = 32,XkbGeomAllMask = 63,};
enum MACRO_XkbPerKeyBitArraySize {XkbPerKeyBitArraySize = 32,};
enum MACRO_XkbSA_ISONoAffectMods {XkbSA_ISONoAffectMods = 64,XkbSA_ISONoAffectGroup = 32,XkbSA_ISONoAffectPtr = 16,XkbSA_ISONoAffectCtrls = 8,};
enum MACRO_XkbXI_AllFeaturesMask {XkbXI_AllFeaturesMask = 0x1F,};
enum MACRO_XmBaseClassExtVersion {XmBaseClassExtVersion = 2,};
enum MACRO_XmScrolledWindowIndex {XmScrolledWindowIndex = 7,XmFormIndex = 8,};
enum MACRO_XtUnspecifiedShellInt {XtUnspecifiedShellInt = -1,};
enum MACRO__POSIX_THREAD_PROCESS {_POSIX_THREAD_PROCESS_SHARED = 1,};
enum MACRO__XtShellPositionValid {_XtShellPositionValid = 1,_XtShellNotReparented = 2,_XtShellPPositionOK = 4,_XtShellGeometryParsed = 8,};
enum MACRO_sz_iceAuthRequiredMsg {sz_iceAuthRequiredMsg = 16,};
enum MACRO_sz_smGetPropertiesMsg {sz_smGetPropertiesMsg = 8,};
enum MACRO_sz_smSetPropertiesMsg {sz_smSetPropertiesMsg = 8,};
enum MACRO_sz_xCreateColormapReq {sz_xCreateColormapReq = 16,sz_xCopyColormapAndFreeReq = 12,};
enum MACRO_sz_xDPMSGetVersionReq {sz_xDPMSGetVersionReq = 8,sz_xDPMSGetVersionReply = 32,};
enum MACRO_sz_xDeletePropertyReq {sz_xDeletePropertyReq = 12,sz_xGetPropertyReq = 24,};
enum MACRO_sz_xGetDeviceFocusReq {sz_xGetDeviceFocusReq = 8,sz_xGetDeviceFocusReply = 32,};
enum MACRO_sz_xGrabKeyboardReply {sz_xGrabKeyboardReply = 32,sz_xListFontsWithInfoReply = 60,};
enum MACRO_sz_xHPDisableResetReq {sz_xHPDisableResetReq = 4,sz_xHPGetDeviceMotionEventsReq = 20,sz_xHPGetDeviceMotionEventsReply = 32,};
enum MACRO_sz_xHPGetClipListsReq {sz_xHPGetClipListsReq = 16,sz_xHPGetClipListsReply = 32,};
enum MACRO_sz_xHPUnGrabDeviceReq {sz_xHPUnGrabDeviceReq = 12,sz_xHPSelectExtensionEventReq = 16,};
enum MACRO_sz_xPrintStartPageReq {sz_xPrintStartPageReq = 8,};
enum MACRO_sz_xQueryExtensionReq {sz_xQueryExtensionReq = 8,};
enum MACRO_sz_xQueryPointerReply {sz_xQueryPointerReply = 32,};
enum MACRO_sz_xSetDeviceFocusReq {sz_xSetDeviceFocusReq = 16,sz_xGetFeedbackControlReq = 8,};
enum MACRO_sz_xSetScreenSaverReq {sz_xSetScreenSaverReq = 12,};
enum MACRO_sz_xieDecodeNotifyEvn {sz_xieDecodeNotifyEvn = 32,};
enum MACRO_sz_xieFloConvertToRGB {sz_xieFloConvertToRGB = 12,sz_xieFloConvolve = 24,};
enum MACRO_sz_xieFloTechniqueErr {sz_xieFloTechniqueErr = 32,};
enum MACRO_sz_xieTecGeomGaussian {sz_xieTecGeomGaussian = 12,};
enum MACRO_sz_xieTypArithmeticOp {sz_xieTypArithmeticOp = 1,sz_xieTypColorAllocTechnique = 2,sz_xieTypColorList = 4,};
enum MACRO_sz_xieTypExportNotify {sz_xieTypExportNotify = 1,};
enum MACRO_sz_xkbCompatMapNotify {sz_xkbCompatMapNotify = 32,};
enum MACRO_sz_xkbGetKbdByNameReq {sz_xkbGetKbdByNameReq = 12,sz_xkbGetKbdByNameReply = 32,};
enum MACRO_sz_xkbIndicatorNotify {sz_xkbIndicatorNotify = 32,};
enum MACRO_sz_xkbOutlineWireDesc {sz_xkbOutlineWireDesc = 4,sz_xkbShapeWireDesc = 8,sz_xkbSectionWireDesc = 20,};
enum MACRO_sz_xkbOverlayWireDesc {sz_xkbOverlayWireDesc = 8,sz_xkbOverlayRowWireDesc = 4,};
enum MACRO_sz_xkbSelectEventsReq {sz_xkbSelectEventsReq = 16,sz_xkbSendEventReq = 48,};
enum MACRO_sz_xkbUseExtensionReq {sz_xkbUseExtensionReq = 8,sz_xkbUseExtensionReply = 32,};
enum MACRO_xieLatestMinorVersion {xieLatestMinorVersion = 0,XIE_FULL = 1,};
enum MACRO_xieValConvolveDefault {xieValConvolveDefault = 0,xieValConvolveConstant = 2,xieValConvolveReplicate = 4,};
typedef struct _XIMStatusDrawCallbackStruct XIMStatusDrawCallbackStruct;
typedef unsigned int XIMStringConversionFeedback;
typedef unsigned short XIMStringConversionPosition;
typedef struct _48A0BCBFBE5BF4DD1FF757783C127908 XmArrowButtonCallbackStruct;
typedef struct _XmArrowButtonGadgetClassRec XmArrowButtonGadgetClassRec;
typedef struct _XmCascadeButtonGCacheObjRec XmCascadeButtonGCacheObjRec;
typedef struct _XmCascadeButtonGCacheObjRec *XmCascadeButtonGCacheObject;
typedef struct _369006661770D1A820C272E8EA3E80F7 XmDestinationCallbackStruct;
typedef struct _XmDialogShellExtClassRec *XmDialogShellExtObjectClass;
typedef struct _9B6DE42DFC0BE749FCDBD18B5A574DFA XmDrawingAreaCallbackStruct;
typedef struct _XmDrawingAreaConstraintPart XmDrawingAreaConstraintPart;
typedef struct _F1C455A40F8068619788DEC05B45D2AF XmDrawnButtonCallbackStruct;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmFileSelectionBoxClassPart;
typedef struct _XmPanedWindowConstraintPart XmPanedWindowConstraintPart;
typedef struct _XmPushButtonGadgetClassPart XmPushButtonGadgetClassPart;
typedef struct _XmScrolledWindowClassExtRec XmScrolledWindowClassExtRec;
typedef struct _XmScrolledWindowClassRec *XmScrolledWindowWidgetClass;
typedef struct _XmToggleButtonGCacheObjPart XmToggleButtonGCacheObjPart;
typedef struct _XmVendorShellExtClassRec *XmVendorShellExtObjectClass;
struct _XmContainerCwidCellInfoRec {int cwid_width_in_cells;int cwid_height_in_cells;};
struct _XmMainWindowConstraintPart {char unused;};
struct _XmMessageBoxConstraintPart {char unused;};
struct __pthread_cleanup_handler_t {struct __pthread_cleanup_handler_t *__next_handler;void ( *__handler_function)(void *);void *__handler_arg;};
typedef struct _E9DCEB596F8CCA4461C00F60A01329A5 dl_hp_set_max_retries_req_t;
typedef struct _FB5A8BA194301548D93F9DB8FD340388 dl_hp_set_send_ack_to_req_t;
typedef struct pdc_pat_cpu_num_rtn_block pdc_pat_cpu_num_rtn_block_t;
typedef struct pdc_pat_io_psba_rtn_block pdc_pat_io_psba_rtn_block_t;
typedef struct pdc_pat_io_slot_rtn_block pdc_pat_io_slot_rtn_block_t;
typedef struct _sym_external_def_entry_type sym_external_def_entry_type;
typedef struct _sym_include_file_entry_type sym_include_file_entry_type;
typedef struct _C1A851173DD816DDF7F0E0D062CEFEE2 xChangeActivePointerGrabReq;
typedef struct _38AB55CADF3218184FF2A828A7079C62 xGetDeviceMotionEventsReply;
typedef struct _A52021AA62F27114E0B08EAFF70959FC xHPGetDeviceKeyMappingReply;
typedef struct _D4BA9A6E2D32E4BB8FEE36323FB115EB xHPGetDeviceMotionEventsReq;
typedef struct _245C026780A0DE345EB9112C5F51F306 xHPSynchronizeColorRangeReq;
typedef struct _FCBEDAD8A539FBE868C0633AE68719B3 xPrintGetContextScreenReply;
typedef struct _PrintGetImageResolution xPrintGetImageResolutionReq;
typedef struct _PrintSetImageResolution xPrintSetImageResolutionReq;
typedef struct _E997A7E9262D40FC83356A066D96F704 xRecordUnregisterClientsReq;
typedef struct _4C2068F4FA5FD804D09687C78D10F64A xieFloExportClientHistogram;
typedef struct _C00C0DA83216725D22F9B6B75E95FFE0 xieQueryImageExtensionReply;
typedef struct _81C1ED238922402D884A6408DD965563 CompositeClassExtensionRec;
enum MACRO_CIO_ILLEGAL_CONTINUE {CIO_ILLEGAL_CONTINUE = -28,};
enum MACRO_CIO_NO_REQUEST_FOUND {CIO_NO_REQUEST_FOUND_TO_ABORT = -41,};
enum MACRO_DL_HP_MULTICAST_LIST {DL_HP_MULTICAST_LIST_ACK = 0xE3,};
enum MACRO_DL_HP_SET_LOCAL_BUSY {DL_HP_SET_LOCAL_BUSY_REQ = 0xEA,};
enum MACRO_IPTOS_PREC_IMMEDIATE {IPTOS_PREC_IMMEDIATE = 0x40,IPTOS_PREC_PRIORITY = 0x20,IPTOS_PREC_ROUTINE = 0x0,};
enum MACRO_IP_DEFAULT_MULTICAST {IP_DEFAULT_MULTICAST_LOOP = 1,IP_MAX_MEMBERSHIPS = 20,};
enum MACRO_MultibufferBadBuffer {MultibufferBadBuffer = 0,MultibufferNumberErrors = 1,};
enum MACRO_NeedNestedPrototypes {NeedNestedPrototypes = 1,};
enum MACRO_PROTOCOLMAJORVERSION {PROTOCOLMAJORVERSION = 1,};
enum MACRO_PROTOCOLMINORVERSION {PROTOCOLMINORVERSION = 0,XIM_CONNECT = 1,XIM_CONNECT_REPLY = 2,XIM_DISCONNECT = 3,XIM_DISCONNECT_REPLY = 4,XIM_AUTH_REQUIRED = 10,XIM_AUTH_REPLY = 11,XIM_AUTH_NEXT = 12,XIM_AUTH_SETUP = 13,XIM_AUTH_NG = 14,XIM_ERROR = 20,XIM_OPEN = 30,XIM_OPEN_REPLY = 31,XIM_CLOSE = 32,XIM_CLOSE_REPLY = 33,XIM_REGISTER_TRIGGERKEYS = 34,XIM_TRIGGER_NOTIFY = 35,XIM_TRIGGER_NOTIFY_REPLY = 36,XIM_SET_EVENT_MASK = 37,XIM_ENCODING_NEGOTIATION = 38,XIM_ENCODING_NEGOTIATION_REPLY = 39,XIM_QUERY_EXTENSION = 40,XIM_QUERY_EXTENSION_REPLY = 41,XIM_SET_IM_VALUES = 42,XIM_SET_IM_VALUES_REPLY = 43,XIM_GET_IM_VALUES = 44,XIM_GET_IM_VALUES_REPLY = 45,XIM_CREATE_IC = 50,XIM_CREATE_IC_REPLY = 51,XIM_DESTROY_IC = 52,XIM_DESTROY_IC_REPLY = 53,XIM_SET_IC_VALUES = 54,XIM_SET_IC_VALUES_REPLY = 55,XIM_GET_IC_VALUES = 56,XIM_GET_IC_VALUES_REPLY = 57,XIM_SET_IC_FOCUS = 58,XIM_UNSET_IC_FOCUS = 59,XIM_FORWARD_EVENT = 60,XIM_SYNC = 61,XIM_SYNC_REPLY = 62,XIM_COMMIT = 63,XIM_RESET_IC = 64,XIM_RESET_IC_REPLY = 65,XIM_GEOMETRY = 70,XIM_STR_CONVERSION = 71,XIM_STR_CONVERSION_REPLY = 72,XIM_PREEDIT_START = 73,XIM_PREEDIT_START_REPLY = 74,XIM_PREEDIT_DRAW = 75,XIM_PREEDIT_CARET = 76,XIM_PREEDIT_CARET_REPLY = 77,XIM_PREEDIT_DONE = 78,XIM_STATUS_START = 79,XIM_STATUS_DRAW = 80,XIM_STATUS_DONE = 81,XIM_PREEDITSTATE = 82,};
enum MACRO_RecordMaxCoreRequest {RecordMaxCoreRequest = 127,RecordMaxExtRequest = 255,};
enum MACRO_RecordMinDeviceEvent {RecordMinDeviceEvent = 2,RecordMaxDeviceEvent = 6,RecordMaxError = 255,};
enum MACRO_SYS_lwp_getscheduler {SYS_lwp_getscheduler = 416,SYS_LWP_SETSCHEDULER = 417,};
enum MACRO_SYS_lwp_mutex_unlock {SYS_lwp_mutex_unlock = 411,SYS_LWP_COND_INIT = 412,};
enum MACRO_SYS_lwp_sema_destroy {SYS_lwp_sema_destroy = 474,SYS_STATVFS64 = 475,};
enum MACRO_SYS_lwp_sema_trywait {SYS_lwp_sema_trywait = 473,SYS_LWP_SEMA_DESTROY = 474,};
enum MACRO_SYS_lwp_setscheduler {SYS_lwp_setscheduler = 417,SYS_LWP_GETSTATE = 418,};
enum MACRO_SYS_timer_getoverrun {SYS_timer_getoverrun = 352,SYS_NANOSLEEP = 353,};
enum MACRO_VisibilityUnobscured {VisibilityUnobscured = 0,VisibilityPartiallyObscured = 1,VisibilityFullyObscured = 2,};
enum MACRO_X_RecordQueryVersion {X_RecordQueryVersion = 0,X_RecordCreateContext = 1,X_RecordRegisterClients = 2,X_RecordUnregisterClients = 3,X_RecordGetContext = 4,X_RecordEnableContext = 5,X_RecordDisableContext = 6,X_RecordFreeContext = 7,};
enum MACRO_XkbAllBellEventsMask {XkbAllBellEventsMask = 1,};
enum MACRO_XkbAllClientInfoMask {XkbAllClientInfoMask = 7,XkbAllServerInfoMask = 248,XkbAllMapComponentsMask = 255,};
enum MACRO_XkbAnyActionDataSize {XkbAnyActionDataSize = 7,};
enum MACRO_XkbModifierStateMask {XkbModifierStateMask = 1,XkbModifierBaseMask = 2,XkbModifierLatchMask = 4,XkbModifierLockMask = 8,XkbGroupStateMask = 16,XkbGroupBaseMask = 32,XkbGroupLatchMask = 64,XkbGroupLockMask = 128,XkbCompatStateMask = 256,XkbGrabModsMask = 512,XkbCompatGrabModsMask = 1024,XkbLookupModsMask = 2048,XkbCompatLookupModsMask = 4096,XkbPointerButtonMask = 8192,XkbAllStateComponentsMask = 16383,};
enum MACRO_XkbNewKeyboardNotify {XkbNewKeyboardNotify = 0,XkbMapNotify = 1,XkbStateNotify = 2,XkbControlsNotify = 3,XkbIndicatorStateNotify = 4,XkbIndicatorMapNotify = 5,XkbNamesNotify = 6,XkbCompatMapNotify = 7,XkbBellNotify = 8,XkbActionMessage = 9,XkbAccessXNotify = 10,XkbExtensionDeviceNotify = 11,};
enum MACRO_XkbSA_NoAcceleration {XkbSA_NoAcceleration = 1,XkbSA_MoveAbsoluteX = 2,XkbSA_MoveAbsoluteY = 4,XkbSA_ISODfltIsGroup = 128,};
enum MACRO_XkbSetMapResizeTypes {XkbSetMapResizeTypes = 1,XkbSetMapRecomputeActions = 2,XkbSetMapAllFlags = 3,sz_xkbSetMapReq = 36,};
enum MACRO_XkbXI_IndicatorsMask {XkbXI_IndicatorsMask = 0x1C,XkbAllExtensionDeviceEventsMask = 0x801F,};
enum MACRO_XkmSemanticsRequired {XkmSemanticsRequired = 3,XkmSemanticsOptional = 72,XkmSemanticsLegal = 75,};
enum MACRO_XmBulletinBoardIndex {XmBulletinBoardIndex = 7,};
enum MACRO_XmCascadeButtonIndex {XmCascadeButtonIndex = 6,};
enum MACRO_XmDEFAULT_FOREGROUND {XmDEFAULT_FOREGROUND_THRESHOLD = 70,};
enum MACRO_XmTopLevelShellIndex {XmTopLevelShellIndex = 8,};
enum MACRO_XpmPixmapColorFailed {XpmPixmapColorFailed = -4,};
enum MACRO_XpmPixmapFileInvalid {XpmPixmapFileInvalid = -2,};
enum MACRO__POSIX_MEMLOCK_RANGE {_POSIX_MEMLOCK_RANGE = 1,};
enum MACRO_sz_XRecordClientInfo {sz_XRecordClientInfo = 12,sz_XRecordState = 16,sz_XRecordDatum = 32,};
enum MACRO_sz_iceWantToCloseMsg {sz_iceWantToCloseMsg = 8,};
enum MACRO_sz_smInteractDoneMsg {sz_smInteractDoneMsg = 8,};
enum MACRO_sz_smSaveCompleteMsg {sz_smSaveCompleteMsg = 8,};
enum MACRO_sz_xChangeSaveSetReq {sz_xChangeSaveSetReq = 8,sz_xReparentWindowReq = 16,};
enum MACRO_sz_xConnClientPrefix {sz_xConnClientPrefix = 12,};
enum MACRO_sz_xGetAtomNameReply {sz_xGetAtomNameReply = 32,};
enum MACRO_sz_xGetFontPathReply {sz_xGetFontPathReply = 32,};
enum MACRO_sz_xGetGeometryReply {sz_xGetGeometryReply = 32,};
enum MACRO_sz_xGetPropertyReply {sz_xGetPropertyReply = 32,};
enum MACRO_sz_xGrabPointerReply {sz_xGrabPointerReply = 32,};
enum MACRO_sz_xHPAcknowledgeReq {sz_xHPAcknowledgeReq = 12,sz_xHPRegisterWindowReq = 16,sz_xHPRegisterWindowReply = 152,};
enum MACRO_sz_xHPEnableResetReq {sz_xHPEnableResetReq = 4,};
enum MACRO_sz_xHPGetClipListReq {sz_xHPGetClipListReq = 16,sz_xHPGetClipListReply = 32,};
enum MACRO_sz_xLookupColorReply {sz_xLookupColorReply = 32,};
enum MACRO_sz_xPolyRectangleReq {sz_xPolyRectangleReq = 12,};
enum MACRO_sz_xPrintStartDocReq {sz_xPrintStartDocReq = 8,};
enum MACRO_sz_xPrintStartJobReq {sz_xPrintStartJobReq = 8,};
enum MACRO_sz_xQueryBestSizeReq {sz_xQueryBestSizeReq = 12,};
enum MACRO_sz_xQueryColorsReply {sz_xQueryColorsReply = 32,};
enum MACRO_sz_xSetDeviceModeReq {sz_xSetDeviceModeReq = 8,sz_xSetDeviceModeReply = 32,};
enum MACRO_sz_xSetInputFocusReq {sz_xSetInputFocusReq = 12,};
enum MACRO_sz_xieFloBandCombine {sz_xieFloBandCombine = 12,sz_xieFloBandExtract = 28,};
enum MACRO_sz_xieFloOperatorErr {sz_xieFloOperatorErr = 32,};
enum MACRO_sz_xieTecCIEXYZToRGB {sz_xieTecCIEXYZToRGB = 44,};
enum MACRO_sz_xieTecDecodeTIFF2 {sz_xieTecDecodeTIFF2 = 4,};
enum MACRO_sz_xieTecRGBToCIEXYZ {sz_xieTecRGBToCIEXYZ = 40,};
enum MACRO_sz_xieTypExportState {sz_xieTypExportState = 1,sz_xieTypFloat = 4,};
enum MACRO_sz_xkbControlsNotify {sz_xkbControlsNotify = 32,};
enum MACRO_sz_xkbDoodadWireDesc {sz_xkbDoodadWireDesc = 20,};
enum MACRO_sz_xkbGetGeometryReq {sz_xkbGetGeometryReq = 12,sz_xkbGetGeometryReply = 32,};
enum MACRO_sz_xkbSetGeometryReq {sz_xkbSetGeometryReq = 28,};
enum MACRO_sz_xkbSymMapWireDesc {sz_xkbSymMapWireDesc = 8,sz_xkbVModMapWireDesc = 4,};
enum MACRO_sz_xkmKTPreserveDesc {sz_xkmKTPreserveDesc = 4,sz_xkmSymInterpretDesc = 16,};
typedef struct _XmBulletinBoardClassRec *XmBulletinBoardWidgetClass;
typedef struct _XmCascadeButtonGadgetClassRec *XmCascadeButtonGadgetClass;
typedef struct _XmCascadeButtonClassRec *XmCascadeButtonWidgetClass;
typedef struct _XmContainerCwidCellInfoRec XmContainerCwidCellInfoRec;
typedef struct _XmDragMotionCallbackStruct XmDragMotionCallbackStruct;
typedef struct _XmDragOverShellClassRec *XmDragOverShellWidgetClass;
typedef struct _XmDropFinishCallbackStruct XmDropFinishCallbackStruct;
typedef struct _DFCC977DF00F58347288DFBB1C9465DA XmDropSiteManagerClassPart;
typedef struct _XmFileSelectionBoxClassRec XmFileSelectionBoxClassRec;
typedef struct _XmFocusMovedCallbackStruct XmFocusMovedCallbackStruct;
typedef struct _XmMainWindowConstraintPart XmMainWindowConstraintPart;
typedef struct _XmMessageBoxConstraintPart XmMessageBoxConstraintPart;
typedef struct _XmOperationChangedCallbackStruct *XmOperationChangedCallback;
typedef struct _XmPanedWindowConstraintRec *XmPanedWindowConstraintPtr;
typedef struct _XmPanedWindowConstraintRec XmPanedWindowConstraintRec;
typedef struct _B6049D59B0993A06102935602114B25B XmPrintShellCallbackStruct;
typedef struct _48A0BCBFBE5BF4DD1FF757783C127908 XmPushButtonCallbackStruct;
typedef struct _XmPushButtonGadgetClassRec XmPushButtonGadgetClassRec;
typedef struct _XmScrolledWindowConstraintPart *XmScrolledWindowConstraint;
typedef struct _XmSecondaryResourceDataRec XmSecondaryResourceDataRec;
typedef struct _XmSeparatorGadgetClassPart XmSeparatorGadgetClassPart;
typedef struct _XmSimpleSpinBoxClassRec *XmSimpleSpinBoxWidgetClass;
typedef struct _XmTearOffButtonClassRec *XmTearOffButtonWidgetClass;
typedef struct _E2032B46AD056E419D159E4C80280834 XmTextVerifyCallbackStruct;
typedef struct _XmToggleButtonGCacheObjRec XmToggleButtonGCacheObjRec;
typedef struct _XmToggleButtonGCacheObjRec *XmToggleButtonGCacheObject;
typedef struct _XmTraversalControlTraitRec XmTraversalControlTraitRec;
struct _XmLabelGCacheObjClassPart {int foo;};
struct _XmSimpleSpinBoxConstraint {int unused;};
typedef struct _FB872D0C58DD36AB86724F5DA25D25F7 comsec_nss_nisplus_parms_t;
typedef struct _DD9D370D246BA69938C95BC6536EB146 dl_hp_multicast_list_ack_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_multicast_list_req_t;
typedef struct _2F56EA87C64E67B129920ADE5189D39C dl_hp_set_ack_thresh_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_set_local_busy_req_t;
typedef struct _B02CF172870B14D5C42349F673AF0676 dl_hp_set_remote_win_req_t;
typedef struct pdc_capabilities_bitmask pdc_capabilities_bitmask_t;
typedef struct pdc_pat_io_num_rtn_block pdc_pat_io_num_rtn_block_t;
typedef struct _sym_forward_ref_entry_type sym_forward_ref_entry_type;
typedef struct _sym_nested_list_entry_type sym_nested_list_entry_type;
typedef struct _28183F13DB7442E77993ED2BEDDC9E43 xChangeDeviceKeyMappingReq;
typedef struct _A2FB221EC01549407EDCF016C4C0632F xChangeKeyboardDeviceReply;
typedef struct _FCC23D59EDC7C9AEBCA8416FDF631F7E xChangeWindowAttributesReq;
typedef struct _8973D72E68A3D7427BDE924AB847E810 xGetDeviceButtonMappingReq;
typedef struct _BD3BDD17C4EDBE852D24CB021FDA20B1 xHPGetCurrentDeviceMaskReq;
typedef struct _02BF9CECF1D2B5E6E55E2C03E1C2E954 xHPSelectExtensionEventReq;
typedef struct _F464FEA7A4E5B570917C7E6E5C96B7A9 xPrintGetDocumentDataReply;
typedef struct _86549870A56B750901787CF4B94C9DDE xPrintGetOneAttributeReply;
typedef struct _PrintGetPageDimensions xPrintGetPageDimensionsReq;
typedef struct _PrintRehashPrinterList xPrintRehashPrinterListReq;
typedef struct _C785CF6C4EEFEB89ECBC9FAC0351909D xSetDeviceButtonMappingReq;
typedef struct _E9462818A0BC0C67C7E517AB6B971B97 xieTecColorAllocRequantize;
typedef struct _xkbIndicatorDoodadWireDesc xkbIndicatorDoodadWireDesc;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F ApplicationShellClassPart;
enum MACRO_AUDIO_SET_TXBUFSIZE {AUDIO_SET_TXBUFSIZE = 536887558,};
enum MACRO_CIO_ILLEGAL_MESSAGE {CIO_ILLEGAL_MESSAGE_ERROR = -102,};
enum MACRO_CIO_INVALID_ADAPTER {CIO_INVALID_ADAPTER_MODEL = -21,};
enum MACRO_ColormapUninstalled {ColormapUninstalled = 0,ColormapInstalled = 1,};
enum MACRO_DL_HP_HW_STATUS_ACK {DL_HP_HW_STATUS_ACK = 0xE5,};
enum MACRO_DL_HP_TRACE_BUF_ACK {DL_HP_TRACE_BUF_ACK = 0xF7,};
enum MACRO_FamilyKrb5Principal {FamilyKrb5Principal = 253,};
enum MACRO_LLIO_CANNOT_RELEASE {LLIO_CANNOT_RELEASE_RESOURCE = -23,};
enum MACRO_LLIO_DEVICE_OFFLINE {LLIO_DEVICE_OFFLINE = -52,};
enum MACRO_LLIO_NOT_UNDERSTOOD {LLIO_NOT_UNDERSTOOD = -4,};
enum MACRO_LLIO_REIMAGE_FAILED {LLIO_REIMAGE_FAILED = -63,};
enum MACRO_MITMiscNumberErrors {MITMiscNumberErrors = 0,};
enum MACRO_MITMiscNumberEvents {MITMiscNumberEvents = 0,};
enum MACRO_MultibufferModeMono {MultibufferModeMono = 0,MultibufferModeStereo = 1,};
enum MACRO_MultibufferSideMono {MultibufferSideMono = 0,MultibufferSideLeft = 1,MultibufferSideRight = 2,};
enum MACRO_PTHREAD_GETFIRSTSPU {PTHREAD_GETFIRSTSPU_NP = 1,PTHREAD_GETNEXTSPU_NP = 2,PTHREAD_GETCURRENTSPU_NP = 3,PTHREAD_BIND_ADVISORY_NP = 4,PTHREAD_BIND_FORCED_NP = 5,PTHREAD_SPUFLOAT_NP = -1,};
enum MACRO_PTHREAD_SPUNOCHANGE {PTHREAD_SPUNOCHANGE_NP = -2,};
enum MACRO_RecordMinExtRequest {RecordMinExtRequest = 128,};
enum MACRO_SYS_getdirentries64 {SYS_getdirentries64 = 362,SYS_GETRLIMIT64 = 363,};
enum MACRO_SYS_lwp_cond_signal {SYS_lwp_cond_signal = 413,SYS_LWP_COND_BROADCAST = 414,};
enum MACRO_SYS_sigsetstatemask {SYS_sigsetstatemask = 225,SYS_CS = 227,};
enum MACRO_SmInteractStyleNone {SmInteractStyleNone = 0,SmInteractStyleErrors = 1,SmInteractStyleAny = 2,};
enum MACRO_TransientShellIndex {TransientShellIndex = 8,};
enum MACRO_XK_hebrew_finalzadi {XK_hebrew_finalzadi = 0xCF5,XK_hebrew_zade = 0xCF6,};
enum MACRO_XLocaleNotSupported {XLocaleNotSupported = -2,};
enum MACRO_X_PrintQueryVersion {X_PrintQueryVersion = 0,X_PrintGetPrinterList = 1,X_PrintCreateContext = 2,X_PrintSetContext = 3,X_PrintGetContext = 4,X_PrintDestroyContext = 5,X_PrintGetContextScreen = 6,X_PrintStartJob = 7,X_PrintEndJob = 8,X_PrintStartDoc = 9,X_PrintEndDoc = 10,X_PrintPutDocumentData = 11,X_PrintGetDocumentData = 12,X_PrintStartPage = 13,X_PrintEndPage = 14,X_PrintSelectInput = 15,X_PrintInputSelected = 16,X_PrintGetAttributes = 17,X_PrintSetAttributes = 18,X_PrintGetOneAttribute = 19,X_PrintRehashPrinterList = 20,X_PrintGetPageDimensions = 21,X_PrintQueryScreens = 22,X_PrintSetImageResolution = 23,X_PrintGetImageResolution = 24,};
enum MACRO_X_ShapeQueryVersion {X_ShapeQueryVersion = 0,X_ShapeRectangles = 1,X_ShapeMask = 2,X_ShapeCombine = 3,X_ShapeOffset = 4,X_ShapeQueryExtents = 5,X_ShapeSelectInput = 6,X_ShapeInputSelected = 7,X_ShapeGetRectangles = 8,};
enum MACRO_XkbAX_SKOptionsMask {XkbAX_SKOptionsMask = 0xC0,XkbAX_AllOptionsMask = 0xFFF,};
enum MACRO_XkbKeycodesNameMask {XkbKeycodesNameMask = 1,XkbGeometryNameMask = 2,XkbSymbolsNameMask = 4,XkbPhysSymbolsNameMask = 8,XkbTypesNameMask = 16,XkbCompatNameMask = 32,XkbKeyTypeNamesMask = 64,XkbKTLevelNamesMask = 128,XkbIndicatorNamesMask = 256,XkbKeyNamesMask = 512,XkbKeyAliasesMask = 1024,XkbVirtualModNamesMask = 2048,XkbGroupNamesMask = 4096,XkbRGNamesMask = 8192,};
enum MACRO_XkbLastRequiredType {XkbLastRequiredType = 3,XkbNumRequiredTypes = 4,XkbMaxKeyTypes = 255,};
enum MACRO_XkbSA_AffectDfltBtn {XkbSA_AffectDfltBtn = 1,XkbSA_DfltBtnAbsolute = 4,};
enum MACRO_XkbSA_GroupAbsolute {XkbSA_GroupAbsolute = 4,XkbSA_UseDfltButton = 0,};
enum MACRO_XkbSA_ISOAffectMask {XkbSA_ISOAffectMask = 0x78,XkbSA_MessageOnPress = 0x1,};
enum MACRO_XkmIndicatorUnbound {XkmIndicatorUnbound = 0,sz_xkmIndicatorMapDesc = 12,};
enum MACRO_XmDEFAULT_INDICATOR {XmDEFAULT_INDICATOR_DIM = 9,};
enum MACRO_XmDropTransferIndex {XmDropTransferIndex = 1,XmDragOverShellIndex = 8,};
enum MACRO_XmSelectionBoxIndex {XmSelectionBoxIndex = 8,};
enum MACRO_XmToggleButtonIndex {XmToggleButtonIndex = 6,XmTearOffButtonIndex = 7,};
enum MACRO_XmUNSPECIFIED_COUNT {XmUNSPECIFIED_COUNT = -1,};
enum MACRO_XpmPixmapColorError {XpmPixmapColorError = 1,};
enum MACRO_XpmReturnColorTable {XpmReturnColorTable = 32768,XpmReturnAllocPixels = 65536,XpmAllocCloseColors = 131072,XpmBitmapFormat = 262144,XpmAllocColor = 524288,XpmFreeColors = 1048576,XpmColorClosure = 2097152,};
enum MACRO_XpmReturnExtensions {XpmReturnExtensions = 1024,XpmExactColors = 2048,XpmCloseness = 4096,XpmRGBCloseness = 8192,XpmColorKey = 16384,XpmColorTable = 32768,};
enum MACRO__LFS64_ASYNCHRONOUS {_LFS64_ASYNCHRONOUS_IO = 1,};
enum MACRO__POSIX_ASYNCHRONOUS {_POSIX_ASYNCHRONOUS_IO = 1,};
enum MACRO__POSIX_SYNCHRONIZED {_POSIX_SYNCHRONIZED_IO = 1,};
enum MACRO__deviceMotionNotify {_deviceMotionNotify = 0,};
enum MACRO_sym_k_callback_proc {sym_k_callback_proc = 1,sym_k_object_proc = 2,};
enum MACRO_sz_xAllocColorReply {sz_xAllocColorReply = 32,};
enum MACRO_sz_xConnSetupPrefix {sz_xConnSetupPrefix = 8,sz_xConnSetup = 32,};
enum MACRO_sz_xGrabKeyboardReq {sz_xGrabKeyboardReq = 16,};
enum MACRO_sz_xHPGrabDeviceReq {sz_xHPGrabDeviceReq = 24,sz_xHPGrabDeviceReply = 32,};
enum MACRO_sz_xInternAtomReply {sz_xInternAtomReply = 32,};
enum MACRO_sz_xPrintEndPageReq {sz_xPrintEndPageReq = 8,sz_xPrintSelectInputReq = 12,};
enum MACRO_sz_xSetMappingReply {sz_xSetMappingReply = 32,sz_xGetKeyboardControlReply = 52,};
enum MACRO_sz_xTestGetInputReq {sz_xTestGetInputReq = 8,sz_xTestStopInputReq = 4,};
enum MACRO_sz_xUngrabButtonReq {sz_xUngrabButtonReq = 12,sz_xChangeActivePointerGrabReq = 16,};
enum MACRO_sz_xUngrabDeviceReq {sz_xUngrabDeviceReq = 12,sz_xGrabDeviceKeyReq = 20,sz_xGrabDeviceKeyReply = 32,};
enum MACRO_sz_xieColorAllocEvn {sz_xieColorAllocEvn = 32,};
enum MACRO_sz_xieDestroyLUTReq {sz_xieDestroyLUTReq = 8,};
enum MACRO_sz_xieDestroyROIReq {sz_xieDestroyROIReq = 8,};
enum MACRO_sz_xieFloBandSelect {sz_xieFloBandSelect = 8,sz_xieFloBlend = 40,};
enum MACRO_sz_xieFloElementErr {sz_xieFloElementErr = 32,};
enum MACRO_sz_xieTecDecodeG31D {sz_xieTecDecodeG31D = 4,};
enum MACRO_sz_xieTecDecodeG32D {sz_xieTecDecodeG32D = 4,};
enum MACRO_sz_xieTecDecodeG42D {sz_xieTecDecodeG42D = 4,};
enum MACRO_sz_xieTecEncodeG31D {sz_xieTecEncodeG31D = 4,sz_xieTecEncodeG32D = 8,};
enum MACRO_sz_xieTecEncodeG42D {sz_xieTecEncodeG42D = 4,sz_xieTecEncodeJPEGBaseline = 16,};
enum MACRO_sz_xieTecRGBToYCbCr {sz_xieTecRGBToYCbCr = 36,};
enum MACRO_sz_xkbAccessXNotify {sz_xkbAccessXNotify = 32,};
enum MACRO_sz_xkbActionMessage {sz_xkbActionMessage = 32,};
enum MACRO_sz_xkbGetNamesReply {sz_xkbGetNamesReply = 32,sz_xkbSetNamesReq = 28,};
enum MACRO_sz_xkbPointWireDesc {sz_xkbPointWireDesc = 4,};
enum MACRO_sz_xkmKeySymMapDesc {sz_xkmKeySymMapDesc = 4,};
enum MACRO_xieValDitherDefault {xieValDitherDefault = 0,xieValDitherErrorDiffusion = 2,xieValDitherOrdered = 4,};
enum MACRO_xieValHistogramFlat {xieValHistogramFlat = 2,xieValHistogramGaussian = 4,xieValHistogramHyperbolic = 6,};
enum MACRO_xieValPredictorNone {xieValPredictorNone = 0,xieValPredictorA = 1,xieValPredictorB = 2,xieValPredictorC = 3,xieValPredictorABC = 4,xieValPredictorABC2 = 5,xieValPredictorBAC2 = 6,xieValPredictorAB2 = 7,};
enum MACRO_xieValPreferDefault {xieValPreferDefault = 0,xieValPreferSpace = 1,xieValPreferTime = 2,};
typedef struct _TransientShellClassRec *TransientShellWidgetClass;
typedef struct _XkbNewKeyboardNotify XkbNewKeyboardNotifyEvent;
typedef struct _XmBulletinBoardConstraintPart *XmBulletinBoardConstraint;
typedef struct _XmCascadeButtonGadgetPart XmCascadeButtonGadgetPart;
typedef struct _XmContainerConstraintPart XmContainerConstraintPart;
typedef struct _XmDefaultBindingStringRec XmDefaultBindingStringRec;
typedef struct _XmDialogShellExtClassPart XmDialogShellExtClassPart;
typedef struct _XmDragStartCallbackStruct XmDragStartCallbackStruct;
typedef struct _XmDropSiteManagerClassRec XmDropSiteManagerClassRec;
typedef struct _XmDropStartCallbackStruct XmDropStartCallbackStruct;
typedef struct _XmDropTransferClassRec *XmDropTransferObjectClass;
typedef struct _XmLabelGCacheObjClassPart XmLabelGCacheObjClassPart;
typedef struct _XmPushButtonGCacheObjPart XmPushButtonGCacheObjPart;
typedef struct _632FCC76A12788D9E06A5D44275BFCFA XmRowColumnCallbackStruct;
typedef struct _XmRowColumnConstraintPart XmRowColumnConstraintPart;
typedef struct _476054893965215BC30A46A434D1D847 XmScrollBarCallbackStruct;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmScrolledWindowClassPart;
typedef struct _XmSelectionBoxClassRec *XmSelectionBoxWidgetClass;
typedef struct _65A971B36897144817056F5407AD29D1 XmSelectionCallbackStruct;
typedef struct _XmSeparatorGadgetClassRec XmSeparatorGadgetClassRec;
typedef struct _XmSimpleSpinBoxConstraint *XmSimpleSpinBoxConstraint;
typedef struct _XmSpecifyUnhighlightTraitRec *XmSpecifyUnhighlightTrait;
typedef struct _XmToggleButtonGadgetClassRec *XmToggleButtonGadgetClass;
typedef struct _XmToggleButtonClassRec *XmToggleButtonWidgetClass;
typedef struct _XmVendorShellExtClassPart XmVendorShellExtClassPart;
typedef struct _D769135999DFEE6143DE1D9CD80B3AD5 *XtChangeHookSetValuesData;
typedef struct _00528F88FA4F09990CF67B6DC7309796 dl_hp_set_local_win_req_t;
typedef struct _F53B3C946FF73649061E5AD36C6E157D load_display_type_fujitsu;
typedef struct _physical_descriptor_set_t physical_descriptor_set_t;
typedef struct _sym_color_item_entry_type sym_color_item_entry_type;
typedef struct _A2FB221EC01549407EDCF016C4C0632F xChangeDeviceControlReply;
typedef struct _78B46019F679C5E70AAD7C2ED28277AC xChangeFeedbackControlReq;
typedef struct _925C5E9ADF13AF08F8E4BE2898EADC8C xChangeKeyboardControlReq;
typedef struct _F80E3F154E69694439090B67229FB6AA xChangeKeyboardMappingReq;
typedef struct _A2FB221EC01549407EDCF016C4C0632F xChangePointerDeviceReply;
typedef struct _88CB499CEF7C95AB64991FDC4A8C267A xGetDeviceKeyMappingReply;
typedef struct _FD8FCB430836D04139012301F63EB9C6 xGetDeviceMotionEventsReq;
typedef struct _CFD68B7ADBC82BE7EABF4FDEA780590F xGetExtensionVersionReply;
typedef struct _2E381990D243D58AF2A1DAAABF4281C8 xGetWindowAttributesReply;
typedef struct _58ED657282AEEEAAB6957A3B0877BB31 xHPChangeDeviceControlReq;
typedef struct _EFD32AB26A9F2C4402B187171A2243FF xHPDeviceAutoRepeatOffReq;
typedef struct _76BB05525B3B0868C06F2DFB63E54F8F xHPGetDeviceKeyMappingReq;
typedef struct _PrintGetContextScreen xPrintGetContextScreenReq;
typedef struct _DAEBDFCF6641BEDF5371E5E95CD6FE55 xPrintGetPrinterListReply;
typedef struct _2D59FDEE4261500A2FE9AC0FF5270F5C xRecordEnableContextReply;
typedef struct _791AF81D366397FAE28AFC7E5E3FF4B5 xRecordRegisterClientsReq;
typedef struct _6971C49ED543898CFDE2AB3CD1189B70 xieFloExportDrawablePlane;
typedef struct _13A9DBF3EA1FE7F1698AD8D67A77FD73 xieFloImportDrawablePlane;
typedef struct _6CA79B54BE0B8C15E4B81B027FF362F3 xieQueryImageExtensionReq;
typedef struct _D3BD8D5467099E62AC519BE3BD77B02F xieTecGeomAntialiasByArea;
typedef struct _BD2C716F10DB95031F526D8F604B25D1 xieTecGeomNearestNeighbor;
typedef struct _65B902F391CFF156201AD47DA98B3D7B xieTecHistogramHyperbolic;
typedef struct _xkbGetIndicatorStateReply xkbGetIndicatorStateReply;
typedef struct _xkbGetNamedIndicatorReply xkbGetNamedIndicatorReply;
typedef struct _xkbSetDebuggingFlagsReply xkbSetDebuggingFlagsReply;
typedef struct _ApplicationShellClassRec ApplicationShellClassRec;
typedef struct _331AC9EA7DEA54BC7D149DCE58DE8017 *ConstraintClassExtension;
enum MACRO_API_AFLAG_INTERNAL {API_AFLAG_INTERNAL = 110,};
enum MACRO_AUDIO_CHANNEL_LEFT {AUDIO_CHANNEL_LEFT = 1,AUDIO_CHANNEL_RIGHT = 2,};
enum MACRO_AUDIO_SET_CHANNELS {AUDIO_SET_CHANNELS = 536887579,};
enum MACRO_AUDIO_SET_FRAGMENT {AUDIO_SET_FRAGMENT = 536887642,AUDIO_UNSET_FRAGMENT = 536887643,AUDIO_SET_DEBUG = 536887644,AUDIO_UNSET_DEBUG = 536887645,};
enum MACRO_AccessColorInvalid {AccessColorInvalid = 0,AccessForeground = 1,AccessBackgroundPixel = 2,AccessHighlightColor = 4,AccessTopShadowColor = 8,AccessBottomShadowColor = 16,AccessSelectColor = 32,};
enum MACRO_CIO_CHANNEL_BROKEN {CIO_CHANNEL_BROKEN_ERROR = -106,};
enum MACRO_CIO_ILLEGAL_MEMORY {CIO_ILLEGAL_MEMORY_REPLY = 11,CIO_MEM_SEND_AND_RF_FAILED = -12,};
enum MACRO_CIO_UNKNOWN_ACTION {CIO_UNKNOWN_ACTION_ERROR = -105,};
enum MACRO_DisableScreenSaver {DisableScreenSaver = 0,};
enum MACRO_DontAllowExposures {DontAllowExposures = 0,AllowExposures = 1,DefaultExposures = 2,};
enum MACRO_DontPreferBlanking {DontPreferBlanking = 0,PreferBlanking = 1,DefaultBlanking = 2,};
enum MACRO_INTR_PARALLEL_MASK {INTR_PARALLEL_MASK = 14080,NO_RUPT_HANDLER = 134217728,};
enum MACRO_IOCONFIG_OVERWRITE {IOCONFIG_OVERWRITE = 257,IOCONFIG_CREATE = 1281,};
enum MACRO_IceAuthLockSuccess {IceAuthLockSuccess = 0,IceAuthLockError = 1,IceAuthLockTimeout = 2,};
enum MACRO_LLIO_TIMEOUT_ABORT {LLIO_TIMEOUT_ABORT = -71,};
enum MACRO_MT_TRANSPARENT_VAL {MT_TRANSPARENT_VAL = 0x3F,MT_PROPERTY_TABLE_MASK = 0xFFFFFF,};
enum MACRO_NeedWidePrototypes {NeedWidePrototypes = 1,};
enum MACRO_OverrideShellIndex {OverrideShellIndex = 6,};
enum MACRO_PDE2_0_REF_TRICKLE {PDE2_0_REF_TRICKLE_POS = 18,PDE2_0_VAR_PAGE_POS = 31,};
enum MACRO_PDE_SHADOW_BOFFSET {PDE_SHADOW_BOFFSET = 4096,};
enum MACRO_POWERFAIL_SUBQUEUE {POWERFAIL_SUBQUEUE = 0,DAM_INIT_REPLY_SUBQUEUE = 1,DIAG_REQUEST_SUBQUEUE = 2,CAM_IO_REPLY_SUBQUEUE = 4,DM_IO_REQUEST_SUBQUEUE = 6,LOCK_REQUEST_SUBQUEUE = 9,DAM_INIT_SUBQ_MASK = -1073741824,};
enum MACRO_PTHREAD_SPUINHERIT {PTHREAD_SPUINHERIT_NP = -3,PTHREAD_SELFTID_NP = 0,};
enum MACRO_SYS_getmount_entry {SYS_getmount_entry = 274,SYS_ACCEPT = 275,};
enum MACRO_SYS_lwp_mutex_lock {SYS_lwp_mutex_lock_sys = 410,SYS_LWP_MUTEX_UNLOCK = 411,};
enum MACRO_SYS_lwp_setprivate {SYS_lwp_setprivate = 68,SYS_MMAP = 71,};
enum MACRO_SYS_sched_getparam {SYS_sched_getparam = 338,SYS_SCHED_SETSCHEDULER = 339,};
enum MACRO_SmRestartIfRunning {SmRestartIfRunning = 0,SmRestartAnyway = 1,SmRestartImmediately = 2,SmRestartNever = 3,};
enum MACRO_TopLevelShellIndex {TopLevelShellIndex = 8,XmApplicationShellIndex = 9,};
enum MACRO_XConverterNotFound {XConverterNotFound = -3,};
enum MACRO_XI_Add_XDeviceBell {XI_Add_XDeviceBell_Minor = 1,};
enum MACRO_XSyncCounterNotify {XSyncCounterNotify = 0,XSyncAlarmNotify = 1,XSyncAlarmNotifyMask = 2,};
enum MACRO_XkbAXN_SKPressMask {XkbAXN_SKPressMask = 1,XkbAXN_SKAcceptMask = 2,XkbAXN_SKRejectMask = 4,XkbAXN_SKReleaseMask = 8,XkbAXN_BKAcceptMask = 16,XkbAXN_BKRejectMask = 32,XkbAXN_AXKWarningMask = 64,};
enum MACRO_XkbMinLegalKeyCode {XkbMinLegalKeyCode = 8,XkbMaxLegalKeyCode = 255,};
enum MACRO_XkbSA_ValScaleMask {XkbSA_ValScaleMask = 0x7,};
enum MACRO_XmArrowButtonIndex {XmArrowButtonIndex = 5,};
enum MACRO_XmDIRECTION_CHANGE {XmDIRECTION_CHANGE = 0,XmAS_IS = 255,};
enum MACRO_XmDialogShellIndex {XmDialogShellIndex = 9,};
enum MACRO_XmDragContextIndex {XmDragContextIndex = 1,};
enum MACRO_XmDrawingAreaIndex {XmDrawingAreaIndex = 7,XmClipWindowIndex = 8,};
enum MACRO_XmDrawnButtonIndex {XmDrawnButtonIndex = 6,};
enum MACRO_XmINDICATOR_SHADOW {XmINDICATOR_SHADOW_THICKNESS = 2,XmINVALID_DIMENSION = 65535,};
enum MACRO_XmLabelGadgetIndex {XmLabelGadgetIndex = 3,};
enum MACRO_XmPanedWindowIndex {XmPanedWindowIndex = 7,};
enum MACRO_XmUNSPECIFIED_ICON {XmUNSPECIFIED_ICON_SIZE = 0,XmLARGE_ICON_SIZE = 1,XmMEDIUM_ICON_SIZE = 2,XmSMALL_ICON_SIZE = 3,XmTINY_ICON_SIZE = 4,};
enum MACRO_XmUNSPECIFIED_PAGE {XmUNSPECIFIED_PAGE_NUMBER = -32768,};
enum MACRO_XtExposeNoCompress {XtExposeNoCompress = 0,XtExposeCompressSeries = 1,XtExposeCompressMultiple = 2,XtExposeCompressMaximal = 3,XtExposeGraphicsExpose = 16,XtExposeGraphicsExposeMerged = 32,XtExposeNoExpose = 64,XtExposeNoRegion = 128,};
enum MACRO_XtVersionDontCheck {XtVersionDontCheck = 0,};
enum MACRO__POSIX_THREAD_ATTR {_POSIX_THREAD_ATTR_STACKSIZE = 1,};
enum MACRO__POSIX_THREAD_SAFE {_POSIX_THREAD_SAFE_FUNCTIONS = 1,};
enum MACRO___LWP_SEMA_INVALID {__LWP_SEMA_INVALID = 0x7406,};
enum MACRO__deviceButtonPress {_deviceButtonPress = 0,_deviceButtonRelease = 1,};
enum MACRO__deviceStateNotify {_deviceStateNotify = 0,_deviceMappingNotify = 1,_changeDeviceNotify = 2,};
enum MACRO_osfXK_PrimaryPaste {osfXK_PrimaryPaste = 0x1004FF32,osfXK_Prior = 0x1004FF55,osfXK_PriorMinor = 0x1004FFF6,};
enum MACRO_sym_k_last_special {sym_k_last_special_op = 17,};
enum MACRO_sz_iceAuthReplyMsg {sz_iceAuthReplyMsg = 16,};
enum MACRO_sz_iceByteOrderMsg {sz_iceByteOrderMsg = 8,sz_iceConnectionSetupMsg = 16,};
enum MACRO_sz_icePingReplyMsg {sz_icePingReplyMsg = 8,};
enum MACRO_sz_xAllowEventsReq {sz_xAllowEventsReq = 8,sz_xGetMotionEventsReq = 16,};
enum MACRO_sz_xChangeHostsReq {sz_xChangeHostsReq = 8,sz_xListHostsReq = 4,};
enum MACRO_sz_xCloseDeviceReq {sz_xCloseDeviceReq = 8,};
enum MACRO_sz_xDPMSCapableReq {sz_xDPMSCapableReq = 4,sz_xDPMSCapableReply = 32,};
enum MACRO_sz_xDPMSDisableReq {sz_xDPMSDisableReq = 4,sz_xDPMSForceLevelReq = 8,};
enum MACRO_sz_xGrabPointerReq {sz_xGrabPointerReq = 24,};
enum MACRO_sz_xHPGrabResetReq {sz_xHPGrabResetReq = 4,sz_xHPGrabResetReply = 32,};
enum MACRO_sz_xImageText16Req {sz_xImageText16Req = 16,sz_xSetPointerMappingReq = 4,};
enum MACRO_sz_xListFontsReply {sz_xListFontsReply = 32,};
enum MACRO_sz_xListHostsReply {sz_xListHostsReply = 32,};
enum MACRO_sz_xPolyFillArcReq {sz_xPolyFillArcReq = 12,sz_xPolyText8Req = 16,};
enum MACRO_sz_xPolySegmentReq {sz_xPolySegmentReq = 12,sz_xFillPolyReq = 16,sz_xPutImageReq = 24,};
enum MACRO_sz_xPrintEndDocReq {sz_xPrintEndDocReq = 8,sz_xPrintPutDocumentDataReq = 16,};
enum MACRO_sz_xPrintEndJobReq {sz_xPrintEndJobReq = 8,};
enum MACRO_sz_xQueryColorsReq {sz_xQueryColorsReq = 8,sz_xLookupColorReq = 12,sz_xCreateCursorReq = 32,};
enum MACRO_sz_xQueryTreeReply {sz_xQueryTreeReply = 32,};
enum MACRO_sz_xSetFontPathReq {sz_xSetFontPathReq = 8,sz_xCreatePixmapReq = 16,};
enum MACRO_sz_xStoreColorsReq {sz_xStoreColorsReq = 8,sz_xStoreNamedColorReq = 16,};
enum MACRO_sz_xieCreateLUTReq {sz_xieCreateLUTReq = 8,};
enum MACRO_sz_xieCreateROIReq {sz_xieCreateROIReq = 8,};
enum MACRO_sz_xieFloAccessErr {sz_xieFloAccessErr = 32,};
enum MACRO_sz_xieFloDomainErr {sz_xieFloDomainErr = 32,};
enum MACRO_sz_xieFloImportLUT {sz_xieFloImportLUT = 8,sz_xieFloImportPhotomap = 12,};
enum MACRO_sz_xieFloImportROI {sz_xieFloImportROI = 8,sz_xieFloArithmetic = 32,};
enum MACRO_sz_xieFloLengthErr {sz_xieFloLengthErr = 32,};
enum MACRO_sz_xieFloSourceErr {sz_xieFloSourceErr = 32,};
enum MACRO_sz_xieTypAlignment {sz_xieTypAlignment = 1,};
enum MACRO_sz_xieTypCompareOp {sz_xieTypCompareOp = 1,sz_xieTypConstant = 12,};
enum MACRO_sz_xkbModsWireDesc {sz_xkbModsWireDesc = 4,sz_xkbKeyTypeWireDesc = 8,};
enum MACRO_sz_xkmBehaviorDesc {sz_xkmBehaviorDesc = 4,sz_xkmActionDesc = 8,};
enum MACRO_xieEvnNoColorAlloc {xieEvnNoColorAlloc = 0,xieEvnNoDecodeNotify = 1,xieEvnNoExportAvailable = 2,xieEvnNoImportObscured = 3,xieEvnNoPhotofloDone = 4,xieNumEvents = 5,};
enum MACRO_xieValGamutDefault {xieValGamutDefault = 0,xieValGamutNone = 1,xieValGamutClipRGB = 2,};
enum MACRO_xieValMaxTechGroup {xieValMaxTechGroup = 24,};
typedef struct _OverrideShellClassRec *OverrideShellWidgetClass;
typedef struct _TopLevelShellClassRec *TopLevelShellWidgetClass;
typedef struct _4E41D3592590DB7E479BB165B1ABED80 XChangeDeviceNotifyEvent;
typedef struct _6891B45CD5C184FEB200E38CDC4FE1A6 XDeviceResolutionControl;
typedef struct _90F4279CED75C32CE4133781567FE5DA XdbeBackBufferAttributes;
typedef struct _XmArrowButtonGadgetClassRec *XmArrowButtonGadgetClass;
typedef struct _XmArrowButtonClassRec *XmArrowButtonWidgetClass;
typedef struct _A145BC600EED1A472B5CFB66AAA6D9D9 XmBulletinBoardClassPart;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmCascadeButtonClassPart;
typedef struct _XmCascadeButtonGadgetRec XmCascadeButtonGadgetRec;
typedef struct _XmCascadeButtonWidgetRec XmCascadeButtonWidgetRec;
typedef struct _DE105A289448D8E7A65D047961DE384C XmComboBoxCallbackStruct;
typedef struct _XmContainerConstraintRec *XmContainerConstraintPtr;
typedef struct _XmContainerConstraintRec XmContainerConstraintRec;
typedef struct _XmDialogShellExtClassRec XmDialogShellExtClassRec;
typedef struct _XmDialogShellClassRec *XmDialogShellWidgetClass;
typedef struct _XmDragDropFinishCallbackStruct *XmDragDropFinishCallback;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmDragOverShellClassPart;
typedef struct _XmDragProcCallbackStruct XmDragProcCallbackStruct;
typedef struct _FDEF638EE31B74BBB9D41AD628E95644 XmDragReceiverInfoStruct;
typedef struct _XmDrawingAreaClassRec *XmDrawingAreaWidgetClass;
typedef struct _XmDrawnButtonClassRec *XmDrawnButtonWidgetClass;
typedef struct _XmDropProcCallbackStruct XmDropProcCallbackStruct;
typedef struct _XmDropSiteManagerPart *XmDropSiteManagerPartPtr;
typedef struct _XmFileSelectionBoxRec *XmFileSelectionBoxWidget;
typedef struct _XmIconGCacheObjClassPart XmIconGCacheObjClassPart;
typedef struct _XmLabelGCacheObjClassRec XmLabelGCacheObjClassRec;
typedef struct _377D72BC5BEAEFFF791FF5908AB0C8A7 XmNotebookCallbackStruct;
typedef struct _XmNotebookConstraintPart XmNotebookConstraintPart;
typedef struct _XmPanedWindowClassRec *XmPanedWindowWidgetClass;
typedef struct _XmPushButtonGCacheObjRec XmPushButtonGCacheObjRec;
typedef struct _XmPushButtonGCacheObjRec *XmPushButtonGCacheObject;
typedef struct _XmRowColumnConstraintRec XmRowColumnConstraintRec;
typedef struct _XmScrolledWindowClassExtRec *XmScrolledWindowClassExt;
typedef struct _XmScrolledWindowClassRec XmScrolledWindowClassRec;
typedef struct _XmSelectionBoxConstraintPart *XmSelectionBoxConstraint;
typedef struct _XmSeparatorGCacheObjPart XmSeparatorGCacheObjPart;
typedef struct _XmSimpleSpinBoxClassPart XmSimpleSpinBoxClassPart;
typedef struct _XmTearOffButtonClassPart XmTearOffButtonClassPart;
typedef struct _XmToggleButtonGadgetPart XmToggleButtonGadgetPart;
typedef struct _XmVendorShellExtClassRec XmVendorShellExtClassRec;
typedef struct _XmVendorShellClassRec *XmVendorShellWidgetClass;
typedef struct _CA8C8364FD28A714C428F7E9308C5190 XmbufSetBufferAttributes;
typedef struct _4E8A4C7FC2C9452EEDB2A455AEE467A8 XmbufSetWindowAttributes;
struct _XkbDeviceValuatorAction {unsigned char type;unsigned char device;unsigned char v1_what;unsigned char v1_ndx;unsigned char v1_value;unsigned char v2_what;unsigned char v2_ndx;unsigned char v2_value;};
typedef struct _A88F82F3855C63B78A51C35CB747714F _XmBuildVirtualKeyStruct;
struct _XmCommandConstraintPart {char unused;};
typedef struct __XmDropSiteUpdateInfoRec _XmDropSiteUpdateInfoRec;
struct _XmManagerConstraintPart {int unused;};
typedef struct _5A8881B73C53918F890CB81CC2BCB847 comsec_nss_files_parms_t;
typedef struct _EB73C50A98CF683D2F515C85045FD863 dl_data_ack_status_ind_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_force_unbind_req_t;
typedef struct _6D1D2AD66BF959596DF5CC9E65B91062 io_redirecting_info_type;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smRegisterClientReplyMsg;
typedef struct _94DE3FD15F99ADB1828A8006E569663B smSaveYourselfRequestMsg;
typedef struct _8973D72E68A3D7427BDE924AB847E810 xChangeKeyboardDeviceReq;
typedef struct _C19E6F380814408DFD31968534DDA3C5 xChangePointerControlReq;
typedef struct _092DD72AC6B9BBA1C79AF097B6F8E844 xGetFeedbackControlReply;
typedef struct _A35F2E1A5E531ECFC152E2BA15F78A6A xGetKeyboardControlReply;
typedef struct _E5FEC4B44082A4B8B21FC86BB58EB49C xGetKeyboardMappingReply;
typedef struct _0702AFAE85E523028461380896C86760 xGetModifierMappingReply;
typedef struct _FF08C0842BBC9F776F8E3FB9B4B4B239 xHPDeviceAutoRepeatOnReq;
typedef struct _5998CF11E98D176CA30EF973C8091161 xHPGetClipListsReplyData;
typedef struct _C3581CCD385C546A273B2E08D561E47C xHPGetDeviceControlReply;
typedef struct _04F2FF642EF85672B24AFBAEAA33FAA3 xHPListInputDevicesReply;
typedef struct _2687827B17D2749AF2A3D46753AF4A11 xHPSendDdxDriverMsgReply;
typedef struct _03198E5D4140E47D6CC7FA31B1147AB8 xHPUngrabDeviceButtonReq;
typedef struct _4C65BE1067297C4FADB11C7C25C29C00 xPrintGetAttributesReply;
typedef struct _PrintGetDocumentData xPrintGetDocumentDataReq;
typedef struct _PrintGetOneAttribute xPrintGetOneAttributeReq;
typedef struct _D498926E8696BF91244D867CE73FD66E xPrintInputSelectedReply;
typedef struct _PrintPutDocumentData xPrintPutDocumentDataReq;
typedef struct _6ECE5F7C46F37A2EF909042FBC6F3E21 xRecordDisableContextReq;
typedef struct _B16FC8566897364FB8F68A61B8D500EB xRecordQueryVersionReply;
typedef struct _8BD856D0EABB45DC0AE6203B505E4C05 xSelectExtensionEventReq;
typedef struct _A2FB221EC01549407EDCF016C4C0632F xSetDeviceValuatorsReply;
typedef struct _8AC915922B7872008F9FA0F659707AB7 xTestQueryInputSizeReply;
typedef struct _87E061934EE6919F8EE4F5F65571C106 xieTecDecodeJPEGBaseline;
typedef struct _10F8C4C81A02E8CC11279456BCE6E63F xieTecDecodeJPEGLossless;
typedef struct _4CF2A723A8F4F5EA6EDE16F5794DEA22 xieTecDecodeTIFFPackBits;
typedef struct _45D688CB45E801EDDCD39001FBABF3CD xieTecEncodeJPEGBaseline;
typedef struct _3281815EF510FB5432D1AC4F74C6C79F xieTecEncodeJPEGLossless;
typedef struct _EBFCC0D8AA2B58B235FECAF898781E22 xieTecEncodeServerChoice;
typedef struct _2B28F023E44E807B69CBD6D694D8FE1D xieTecEncodeTIFFPackBits;
typedef struct _xkbExtensionDeviceNotify xkbExtensionDeviceNotify;
typedef struct _xkbKTSetMapEntryWireDesc xkbKTSetMapEntryWireDesc;
typedef struct _81C1ED238922402D884A6408DD965563 *CompositeClassExtension;
enum MACRO_AutoRepeatModeOff {AutoRepeatModeOff = 0,AutoRepeatModeOn = 1,AutoRepeatModeDefault = 2,};
enum MACRO_CIO_ABORTED_REPLY {CIO_ABORTED_REPLY_FAILURE = -40,};
enum MACRO_CIO_CHANNEL_MSTAT {CIO_CHANNEL_MSTAT_ERROR = -24,};
enum MACRO_CIO_CHANNEL_RESET {CIO_CHANNEL_RESET_IN_PROGRESS = -57,};
enum MACRO_CIO_ILLEGAL_STATE {CIO_ILLEGAL_STATE_ERROR = -103,};
enum MACRO_CIO_MERR_LOOPBACK {CIO_MERR_LOOPBACK_CODE = -84,};
enum MACRO_CIO_MERR_PROTOCOL {CIO_MERR_PROTOCOL_CODE = -86,};
enum MACRO_CIO_NO_LOGCHANNEL {CIO_NO_LOGCHANNEL_RESOURCES = -14,};
enum MACRO_DAC_ASIO0_MAXIMUM {DAC_ASIO0_MAXIMUM = 7,MAX_PORT_MODULE_PER_CARD = 16,};
enum MACRO_DENSITY_SUPPORTED {DENSITY_SUPPORTED = 1,};
enum MACRO_DL_HP_CLEAR_LOCAL {DL_HP_CLEAR_LOCAL_BUSY_REQ = 0xE9,};
enum MACRO_DVKeyClickPercent {DVKeyClickPercent = 1,DVBellPercent = 2,DVBellPitch = 4,DVBellDuration = 8,DVLed = 16,DVLedMode = 32,DVKey = 64,DVAutoRepeatMode = 128,DVAccelNum = 256,DVAccelDenom = 512,DVThreshold = 1024,};
enum MACRO_DvKeyClickPercent {DvKeyClickPercent = 1,DvPercent = 2,DvPitch = 4,DvDuration = 8,DvLed = 16,DvLedMode = 32,DvKey = 64,DvAutoRepeatMode = 128,};
enum MACRO_EFFECTIVE_MAXGRPS {EFFECTIVE_MAXGRPS = 32,};
enum MACRO_FORMAT8mmNOMODIFY {FORMAT8mmNOMODIFY = 127,};
enum MACRO_ICMP_SOURCEQUENCH {ICMP_SOURCEQUENCH = 4,ICMP_REDIRECT = 5,};
enum MACRO_IPOPT_SECUR_RESTR {IPOPT_SECUR_RESTR = 0xAF13,IPOPT_SECUR_SECRET = 0xD788,};
enum MACRO_IPTOS_PREC_CRITIC {IPTOS_PREC_CRITIC_ECP = 0xA0,};
enum MACRO_KBKeyClickPercent {KBKeyClickPercent = 1,KBBellPercent = 2,KBBellPitch = 4,KBBellDuration = 8,KBLed = 16,KBLedMode = 32,KBKey = 64,KBAutoRepeatMode = 128,};
enum MACRO_LE_AXIN_ENABLE_L3 {LE_AXIN_ENABLE_L3_FAILED2 = 2035,LE_AXIN_DISABLE_L3_FAILED2 = 2036,LE_AXIN_ACTIVATE_L3_FAILED2 = 2037,LE_AXIN_BAD_FIRST_PVC_LCI = 2038,LE_AXIN_BAD_VC_NUMBER = 2039,LE_AXIN_EVENT_ZREAD_ERROR = 2040,LE_AXIN_INB_MSG_TOO_BIG = 2041,LE_AXIN_ZX25RESET_FAILED = 2042,LE_AXIN_EXP_DATA_REQ_ERR = 2043,LE_AXIN_BAD_EXP_DATA_LEN = 2044,LE_AXIN_EXP_DATA_PEND_ERR = 2045,LE_AXIN_L2_RESET_TX_FRMR = 2046,LE_AXIN_L2_RESET_RCV_FRMR = 2047,LE_AXIN_L2_RESET_RCV_DM = 2048,LE_AXIN_L2_RESET_RCV_SABM = 2049,LE_AXIN_ZCNTL_TERM_PARMS_FAILED2 = 2050,LE_AXIN_ZCNTL_STAT_FAILED = 2051,LE_AXIN_TOO_MANY_SVCS = 2052,LE_AXIN_ILLEGAL_CALL_PKT = 2053,LE_AXIN_MAP_TO_SERVER_FAILED2 = 2054,LE_AXIN_FS_REQ_CUD_LEN = 2055,LE_AXIN_CALL_REJ_FACILITY = 2056,LE_AXIN_GET_IFTBL_FAILED = 2057,LE_AXIN_ZPORT_FAILED = 2058,LE_AXIN_UNREC_IOCTL = 3001,LE_AXIN_UNREC_READ = 3002,LE_AXIN_UNREC_WRITE = 3003,AXIN_IEV_UNKNOWN_EVENT = 3004,AXIN_OUTB_TAG_MISMATCH = 3005,LE_AXIN_NO_L2_IN_ZLUTABLE = 3006,LW_AXIN_INVALID_X25_N2A = 3007,LW_AXIN_INVALID_X25_N2B = 3008,LW_AXIN_INVALID_X25_T1 = 3009,LW_AXIN_INVALID_X25_K1 = 3010,LW_AXIN_INVALID_X25_K2 = 3011,LW_AXIN_VC_RESET = 3012,LW_AXIN_EXP_DATA_TIMEOUT = 3013,AXIN_NO_INB_MBUFS_AVAIL = 4000,LE_AXIN_ALL_VCS_IN_USE = 4001,AXIN_NO_MBUFS_FOR_EXPDATA = 4002,LE_AXIN_NO_MEMORY = 4003,LE_AXIN_NO_EVENT_BUFS_AVAIL = 4004,AXIN_NO_MBUFS_FOR_INB_FRAG = 4005,AXIN_X25_BEING_INITIALIZED = 5000,AXIN_L2_IS_UP_STATUS = 5001,AXIN_X25_BEING_SHUTDOWN = 5002,AXIN_L2_IS_DOWN_STATUS = 5003,AXIN_UNKNOWN_EVENT_DETECTED = 5004,AXIN_UNKNOWN_L3_STATUS = 5005,AXIN_L2_IS_DOWN_LOST_CTS = 5006,AXIN_L2_IS_DOWN_LOST_DCD = 5007,AXIN_L2_RAN_OUTOF_BUFRS = 5008,AXIN_UNKNOWN_L2_STATUS = 5009,AXIN_FORCING_L2_DOWN = 5010,LW_AXIN_L2_EXCEEDED_N1 = 5011,AXIN_BAD_ZLU_IN_ASYNC_STATUS = 5012,};
enum MACRO_LLIO_BIND_BAD_REV {LLIO_BIND_BAD_REV_CODE = -10,};
enum MACRO_LLIO_DATA_OVERRUN {LLIO_DATA_OVERRUN = -38,};
enum MACRO_LLIO_LOCK_GRANTED {LLIO_LOCK_GRANTED_BUSY = -69,};
enum MACRO_LLIO_NO_MIRRORLOG {LLIO_NO_MIRRORLOG = -65,};
enum MACRO_LLIO_TRANSMISSION {LLIO_TRANSMISSION_ERR = -49,};
enum MACRO_MULTIBUFFER_MINOR {MULTIBUFFER_MINOR_VERSION = 1,};
enum MACRO_NGROUPS_RGID_SUPP {NGROUPS_RGID_SUPP = -6,};
enum MACRO_NGROUPS_SGID_SUPP {NGROUPS_SGID_SUPP = -7,};
enum MACRO_OLD_NS_LC_WARNING {OLD_NS_LC_WARNING = 3,NS_LC_RESOURCELIM = 262145,};
enum MACRO_PCI_CS_CLASS_PROG {PCI_CS_CLASS_PROG_IF = 0x9,PCI_CS_CACHE_LINE_SIZE = 0xC,PCI_CS_LATENCY_TIMER = 0xD,PCI_CS_HEADER_TYPE = 0xE,PCI_CS_BIST = 0xF,PCI_CS_BAR0 = 0x10,PCI_CS_BAR1 = 0x14,PCI_CS_BAR2 = 0x18,PCI_CS_BAR3 = 0x1C,PCI_CS_BAR4 = 0x20,PCI_CS_BAR5 = 0x24,PCI_CS_SUBVENDOR_ID = 0x28,PCI_CS_SUBDEVICE_ID = 0x2C,PCI_CS_EXP_ROM_BAR = 0x30,PCI_CS_INTERRUPT_LINE = 0x3C,PCI_CS_INTERRUPT_PIN = 0x3D,PCI_CS_MIN_GNT = 0x3E,PCI_CS_MAX_LAT = 0x3F,PCI_TYPE_MASK = 0x7F,PCI_TYPE_MF = 0x80,};
enum MACRO_PixmapColorFailed {PixmapColorFailed = -4,};
enum MACRO_PixmapFileInvalid {PixmapFileInvalid = -2,};
enum MACRO_SCSI_ABORT_FAILED {SCSI_ABORT_FAILED = -2,};
enum MACRO_SYS_aio_suspend64 {SYS_aio_suspend64 = 501,SYS_AIO_FSYNC64 = 502,};
enum MACRO_SYS_clock_gettime {SYS_clock_gettime = 346,SYS_CLOCK_GETRES = 347,};
enum MACRO_SYS_getdirentries {SYS_getdirentries = 195,SYS_STATFS = 196,};
enum MACRO_SYS_getdomainname {SYS_getdomainname = 192,SYS_SETDOMAINNAME = 193,};
enum MACRO_SYS_lwp_cond_wait {SYS_lwp_cond_wait_sys = 415,SYS_LWP_GETSCHEDULER = 416,};
enum MACRO_SYS_lwp_sema_post {SYS_lwp_sema_post = 471,SYS_LWP_SEMA_WAIT = 472,};
enum MACRO_SYS_lwp_sema_wait {SYS_lwp_sema_wait = 472,SYS_LWP_SEMA_TRYWAIT = 473,};
enum MACRO_SYS_lwp_terminate {SYS_lwp_terminate = 390,SYS_LWP_WAIT = 391,};
enum MACRO_SYS_proc_sendrecv {SYS_proc_sendrecv = 296,SYS_PROC_SYSCALL = 297,};
enum MACRO_SYS_setdomainname {SYS_setdomainname = 193,SYS_ASYNC_DAEMON = 194,};
enum MACRO_SYS_timer_gettime {SYS_timer_gettime = 351,SYS_TIMER_GETOVERRUN = 352,};
enum MACRO_SYS_timer_settime {SYS_timer_settime = 350,SYS_TIMER_GETTIME = 351,};
enum MACRO_SYS_zerokernelsum {SYS_zerokernelsum = 494,SYS_NFS_KSTAT = 495,};
enum MACRO_XIMPreeditUnKnown {XIMPreeditUnKnown = 0,XIMPreeditEnable = 1,XIMPreeditDisable = 2,};
enum MACRO_XIM_MODE_PRE_MASK {XIM_MODE_PRE_MASK = 31,XIM_MODE_STS_MASK = 992,};
enum MACRO_XIM_SETICDEFAULTS {XIM_SETICDEFAULTS = 1,XIM_CREATEIC = 2,XIM_SETICVALUES = 4,XIM_GETICVALUES = 8,XIM_PREEDIT_ATTR = 16,XIM_STATUS_ATTR = 32,};
enum MACRO_XIM_SETIMDEFAULTS {XIM_SETIMDEFAULTS = 1,XIM_SETIMVALUES = 2,XIM_GETIMVALUES = 4,};
enum MACRO_XI_DeviceValuator {XI_DeviceValuator = 0,XI_DeviceKeyPress = 1,XI_DeviceKeyRelease = 2,XI_DeviceButtonPress = 3,XI_DeviceButtonRelease = 4,XI_DeviceMotionNotify = 5,XI_DeviceFocusIn = 6,XI_DeviceFocusOut = 7,XI_ProximityIn = 8,XI_ProximityOut = 9,XI_DeviceStateNotify = 10,XI_DeviceMappingNotify = 11,XI_ChangeDeviceNotify = 12,XI_DeviceKeystateNotify = 13,XI_DeviceButtonstateNotify = 14,};
enum MACRO_XRecordBadContext {XRecordBadContext = 0,XRecordFromServerTime = 1,XRecordFromClientTime = 2,XRecordFromClientSequence = 4,};
enum MACRO_XRecordFromServer {XRecordFromServer = 0,XRecordFromClient = 1,XRecordClientStarted = 2,XRecordClientDied = 3,XRecordStartOfData = 4,XRecordEndOfData = 5,};
enum MACRO_XSyncNumberEvents {XSyncNumberEvents = 2,};
enum MACRO_XTestDELAY_DEVICE {XTestDELAY_DEVICE_ID = 0xF,};
enum MACRO_XTestMinorVersion {XTestMinorVersion = 2,};
enum MACRO_XTestNumberErrors {XTestNumberErrors = 0,XTestMajorVersion = 2,};
enum MACRO_XTestNumberEvents {XTestNumberEvents = 0,};
enum MACRO_X_GetHpKeyboardId {X_GetHpKeyboardId = 1,X_HPListInputDevices = 2,X_HPSetInputDevice = 3,X_HPGetExtEventMask = 4,X_HPGetDeviceFocus = 5,X_HPGetClipList = 6,X_HPGrabDevice = 7,X_HPSetDeviceFocus = 8,X_HPUnGrabDevice = 9,X_HPSelectExtensionEvent = 10,X_HPGetCurrentDeviceMask = 11,X_HPEnableReset = 12,X_HPDisableReset = 13,X_HPGetDeviceMotionEvents = 14,X_HPGrabDeviceButton = 15,X_HPUngrabDeviceButton = 16,X_HPGrabDeviceKey = 17,X_HPUngrabDeviceKey = 18,X_HPDeviceAutoRepeatOn = 19,X_HPDeviceAutoRepeatOff = 20,X_HPPrompt = 21,X_HPAcknowledge = 22,X_HPRegisterWindow = 23,X_HPUnRegisterWindow = 24,X_HPSynchronizeColorRange = 25,X_HPGetServerMode = 26,X_HPGetDeviceKeyMapping = 27,X_HPChangeDeviceKeyMapping = 28,X_HPGetDeviceModifierMapping = 29,X_HPSetDeviceModifierMapping = 30,X_HPGetDeviceControl = 31,X_HPChangeDeviceControl = 32,X_HPGetWindowCursor = 33,X_HPGrabReset = 34,X_HPSendDdxDriverMsg = 35,X_HPGetClipLists = 36,X_HPSSChange = 37,};
enum MACRO_X_ShmQueryVersion {X_ShmQueryVersion = 0,X_ShmAttach = 1,X_ShmDetach = 2,X_ShmPutImage = 3,X_ShmGetImage = 4,X_ShmCreatePixmap = 5,};
enum MACRO_X_XTestGetVersion {X_XTestGetVersion = 0,X_XTestCompareCursor = 1,X_XTestFakeInput = 2,X_XTestGrabControl = 3,};
enum MACRO_XkbMaxRadioGroups {XkbMaxRadioGroups = 32,XkbAllRadioGroupsMask = -1,};
enum MACRO_XkbNoModifierMask {XkbNoModifierMask = 0,XkbAllModifiersMask = 255,XkbAllVirtualModsMask = 65535,};
enum MACRO_XkbRepeatKeysMask {XkbRepeatKeysMask = 1,XkbSlowKeysMask = 2,XkbBounceKeysMask = 4,XkbStickyKeysMask = 8,XkbMouseKeysMask = 16,XkbMouseKeysAccelMask = 32,XkbAccessXKeysMask = 64,XkbAccessXTimeoutMask = 128,XkbAccessXFeedbackMask = 256,XkbAudibleBellMask = 512,XkbOverlay1Mask = 1024,XkbOverlay2Mask = 2048,XkbIgnoreGroupLockMask = 4096,XkbGroupsWrapMask = 134217728,XkbInternalModsMask = 268435456,XkbIgnoreLockModsMask = 536870912,XkbPerKeyRepeatMask = 1073741824,XkbControlsEnabledMask = -2147483648,};
enum MACRO_XkbSI_AnyOfOrNone {XkbSI_AnyOfOrNone = 1,XkbSI_AnyOf = 2,XkbSI_AllOf = 3,XkbSI_Exactly = 4,XkbIM_NoExplicit = 128,};
enum MACRO_XkmKeymapRequired {XkmKeymapRequired = 23,XkmKeymapOptional = 104,XkmKeymapLegal = 127,};
enum MACRO_XkmLayoutRequired {XkmLayoutRequired = 20,XkmLayoutOptional = 96,XkmLayoutLegal = 116,};
enum MACRO_XmIconGadgetIndex {XmIconGadgetIndex = 3,XmBulletinBIndex = 7,};
enum MACRO_XmMainWindowIndex {XmMainWindowIndex = 8,XmCommandIndex = 9,};
enum MACRO_XmMessageBoxIndex {XmMessageBoxIndex = 8,};
enum MACRO_XmPushButtonIndex {XmPushButtonIndex = 6,};
enum MACRO_XmSpinButtonIndex {XmSpinButtonIndex = 7,};
enum MACRO_XpmPixmapNoMemory {XpmPixmapNoMemory = -3,};
enum MACRO_XpmReturnComments {XpmReturnComments = 256,XpmUndefPixel = -2147483648,};
enum MACRO__POSIX2_LOCALEDEF {_POSIX2_LOCALEDEF = 1,_XBS5_ILP32_OFF32 = 32,};
enum MACRO__POSIX_SEMAPHORES {_POSIX_SEMAPHORES = 1,};
enum MACRO_osfXK_DeselectAll {osfXK_DeselectAll = 0x1004FF72,};
enum MACRO_sym_k_last_binary {sym_k_last_binary_op = 15,sym_k_valref_op = 16,sym_k_coerce_op = 17,};
enum MACRO_sym_k_unspecified {sym_k_unspecified_color = 0,sym_k_background_color = 1,sym_k_foreground_color = 2,};
enum MACRO_sym_k_userdefined {sym_k_userdefined_charset = 1,sym_k_fontlist_default_tag = 0,sym_k_unspecified_op = 0,};
enum MACRO_sz_xAllocColorReq {sz_xAllocColorReq = 16,sz_xAllocNamedColorReq = 12,};
enum MACRO_sz_xChangeModeReq {sz_xChangeModeReq = 4,sz_xRotatePropertiesReq = 12,sz_xReply = 32,};
enum MACRO_sz_xDPMSEnableReq {sz_xDPMSEnableReq = 4,};
enum MACRO_sz_xFreeColorsReq {sz_xFreeColorsReq = 12,};
enum MACRO_sz_xGetImageReply {sz_xGetImageReply = 32,};
enum MACRO_sz_xGrabButtonReq {sz_xGrabButtonReq = 24,};
enum MACRO_sz_xGrabDeviceReq {sz_xGrabDeviceReq = 20,sz_xGrabDeviceReply = 32,};
enum MACRO_sz_xHPSSChangeReq {sz_xHPSSChangeReq = 12,sz_xHPSSChangeReply = 32,};
enum MACRO_sz_xImageText8Req {sz_xImageText8Req = 16,};
enum MACRO_sz_xInternAtomReq {sz_xInternAtomReq = 8,sz_xChangePropertyReq = 24,};
enum MACRO_sz_xOpenDeviceReq {sz_xOpenDeviceReq = 8,sz_xOpenDeviceReply = 32,};
enum MACRO_sz_xPolyText16Req {sz_xPolyText16Req = 16,};
enum MACRO_sz_xieFloAllocErr {sz_xieFloAllocErr = 32,};
enum MACRO_sz_xieFloMatchErr {sz_xieFloMatchErr = 32,};
enum MACRO_sz_xieFloValueErr {sz_xieFloValueErr = 32,};
enum MACRO_sz_xieResourceErr {sz_xieResourceErr = 32,};
enum MACRO_sz_xieTecHardClip {sz_xieTecHardClip = 0,sz_xieTecRGBToCIELab = 40,};
enum MACRO_sz_xieTecRGBToYCC {sz_xieTecRGBToYCC = 28,sz_xieTecYCbCrToRGB = 40,};
enum MACRO_sz_xieTecYCCToRGB {sz_xieTecYCCToRGB = 32,sz_xieTecCIELabToRGB = 44,};
enum MACRO_sz_xieTypDataType {sz_xieTypDataType = 1,sz_xieTypDecodeTechnique = 2,};
enum MACRO_sz_xieTypPhotoflo {sz_xieTypPhotoflo = 4,sz_xieTypExecutable = 8,};
enum MACRO_sz_xieTypPhototag {sz_xieTypPhototag = 2,sz_xieTypProcessDomain = 12,sz_xieTypRectangle = 16,};
enum MACRO_sz_xkbGetStateReq {sz_xkbGetStateReq = 8,sz_xkbGetStateReply = 32,};
enum MACRO_sz_xkbKeyWireDesc {sz_xkbKeyWireDesc = 8,};
enum MACRO_sz_xkbNamesNotify {sz_xkbNamesNotify = 32,};
enum MACRO_sz_xkbRowWireDesc {sz_xkbRowWireDesc = 8,};
enum MACRO_sz_xkbStateNotify {sz_xkbStateNotify = 32,};
enum MACRO_sz_xkmKeyTypeDesc {sz_xkmKeyTypeDesc = 8,sz_xkmKTMapEntryDesc = 4,};
enum MACRO_xieErrNoColorList {xieErrNoColorList = 0,xieErrNoLUT = 1,xieErrNoPhotoflo = 2,xieErrNoPhotomap = 3,xieErrNoPhotospace = 4,xieErrNoROI = 5,xieErrNoFlo = 6,xieNumErrors = 7,};
enum MACRO_xieErrNoFloAccess {xieErrNoFloAccess = 1,xieErrNoFloAlloc = 2,xieErrNoFloColormap = 3,xieErrNoFloColorList = 4,xieErrNoFloDomain = 5,xieErrNoFloDrawable = 6,xieErrNoFloElement = 7,xieErrNoFloGC = 8,xieErrNoFloID = 9,xieErrNoFloLength = 10,xieErrNoFloLUT = 11,xieErrNoFloMatch = 12,xieErrNoFloOperator = 13,xieErrNoFloPhotomap = 14,xieErrNoFloROI = 15,xieErrNoFloSource = 16,xieErrNoFloTechnique = 17,xieErrNoFloValue = 18,xieErrNoFloImplementation = 19,};
enum MACRO_xieValBandByPixel {xieValBandByPixel = 1,xieValBandByPlane = 2,};
enum MACRO_xieValCIELabToRGB {xieValCIELabToRGB = 2,xieValCIEXYZToRGB = 4,xieValYCbCrToRGB = 6,xieValYCCToRGB = 8,};
enum MACRO_xieValConstrained {xieValConstrained = 1,xieValUnconstrained = 2,};
enum MACRO_xieValGeomDefault {xieValGeomDefault = 0,xieValGeomAntialias = 2,xieValGeomAntialiasByArea = 4,xieValGeomAntialiasByLPF = 6,xieValGeomBilinearInterp = 8,xieValGeomGaussian = 10,xieValGeomNearestNeighbor = 12,};
enum MACRO_xieValRGBToCIELab {xieValRGBToCIELab = 2,xieValRGBToCIEXYZ = 4,xieValRGBToYCbCr = 6,xieValRGBToYCC = 8,};
typedef struct _9DF924EC08184381CE6BEC6133B35008 ObjectClassExtensionRec;
typedef struct _SessionShellClassRec *SessionShellWidgetClass;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F TransientShellClassPart;
typedef struct _327363286F15FD04A4B2959C61C89515 XDeviceFocusChangeEvent;
typedef struct _2A1341D2DCCA1CCA8C5B95293E5C0E70 XDeviceStateNotifyEvent;
typedef struct _XIMStringConversionText XIMStringConversionText;
typedef unsigned short XIMStringConversionType;
typedef struct _82EEF83FACFC8220E9483994E0DE4841 XIntegerFeedbackControl;
typedef struct _5F6372D609C25A56B6346C90751BD281 XSyncCounterNotifyEvent;
typedef struct _XkbCompatMapNotify XkbCompatMapNotifyEvent;
typedef struct _XkbDeviceValuatorAction XkbDeviceValuatorAction;
typedef struct _XkbIndicatorNotify XkbIndicatorNotifyEvent;
typedef struct _XmAccessTextualTraitRec XmAccessTextualTraitRec;
typedef struct _XmArrowButtonGadgetPart XmArrowButtonGadgetPart;
typedef struct _XmBulletinBoardClassRec XmBulletinBoardClassRec;
typedef struct _XmCascadeButtonClassRec XmCascadeButtonClassRec;
typedef struct _XmClipWindowClassRec *XmClipWindowWidgetClass;
typedef struct _0CC2C7B5C742C31129BAD132CF836E30 XmCommandCallbackStruct;
typedef struct _XmCommandConstraintPart XmCommandConstraintPart;
typedef struct _XmContainerItemTraitRec XmContainerItemTraitRec;
typedef struct _XmContainerXfrActionRec XmContainerXfrActionRec;
typedef struct _E21C2301BB99EE91E0BC7B4A37773E5E XmConvertCallbackStruct;
typedef struct _81BCCC75A8CBAE21806AA1556BEE0B6B XmDisplayCallbackStruct;
typedef struct _XmDragOverShellClassRec XmDragOverShellClassRec;
typedef struct _XmDrawingAreaConstraintPart *XmDrawingAreaConstraint;
typedef struct _XmDropSiteEnterCallbackStruct *XmDropSiteEnterCallback;
typedef struct _XmDropSiteLeaveCallbackStruct *XmDropSiteLeaveCallback;
typedef struct _XmDropSiteManagerRec *XmDropSiteManagerObject;
typedef struct _XmDropTransferClassPart XmDropTransferClassPart;
typedef struct _XmExcludedParentPaneRec XmExcludedParentPaneRec;
typedef struct _XmIconGCacheObjClassRec XmIconGCacheObjClassRec;
typedef struct _XmListDragConvertStruct XmListDragConvertStruct;
typedef struct _XmMainWindowClassRec *XmMainWindowWidgetClass;
typedef struct _XmManagerConstraintPart XmManagerConstraintPart;
typedef struct _XmMessageBoxClassRec *XmMessageBoxWidgetClass;
typedef struct _XmNotebookConstraintRec *XmNotebookConstraintPtr;
typedef struct _XmNotebookConstraintRec XmNotebookConstraintRec;
typedef struct _XmPrintShellClassRec *XmPrintShellWidgetClass;
typedef struct _XmPushButtonGadgetClassRec *XmPushButtonGadgetClass;
typedef struct _XmPushButtonClassRec *XmPushButtonWidgetClass;
typedef struct _XmSecondaryResourceDataRec *XmSecondaryResourceData;
typedef struct _D0BF9774D4A82986A5A63FCC2C6E5647 XmSelectionBoxClassPart;
typedef struct _XmSeparatorGCacheObjRec XmSeparatorGCacheObjRec;
typedef struct _XmSeparatorGCacheObjRec *XmSeparatorGCacheObject;
typedef struct _XmSimpleSpinBoxClassRec XmSimpleSpinBoxClassRec;
typedef struct _F9A6D6133A9C4128732440A5253BF2B0 XmSpinBoxCallbackStruct;
typedef struct _XmSpinBoxConstraint XmSpinBoxConstraintPart;
typedef struct _XmTearOffButtonClassRec XmTearOffButtonClassRec;
typedef struct _XmToggleButtonClassPart XmToggleButtonClassPart;
typedef struct _XmToggleButtonGadgetRec XmToggleButtonGadgetRec;
typedef struct _XmTopLevelEnterCallbackStruct *XmTopLevelEnterCallback;
typedef struct _XmTopLevelLeaveCallbackStruct *XmTopLevelLeaveCallback;
typedef struct _XmTraversalControlTraitRec *XmTraversalControlTrait;
typedef struct _73A71279A51BA5863B442246BC81936D *XmVendorShellExtPartPtr;
typedef struct _BDC98B6B0C6F123FC30FB829F8EEF7EF XmbufClobberNotifyEvent;
typedef struct _1DA914B8AB142FCB959C2D9AF0891F55 _IceProtoSetupToYouInfo;
typedef struct _3FD6ABFB741B2B22ED13B1D9854F5B27 _SmcRegisterClientReply;
enum __itmr_sync_handshake_t {M_WAITING_FOR_NM = 0x1,NM_CHECK_IN = 0x2,READING = 0x3,DONE_READING = 0x4,};
struct audio_select_thresholds {unsigned int read_threshold;unsigned int write_threshold;unsigned int spare[4];};
struct cio_comp_list_head_type {int semaphore;int *link;int filler1;int filler2;};
typedef struct _FF9246841A32B78E17B3644398C154C0 deviceButtonStateNotify;
typedef struct _0826E4B532B0CD93EBA2471AF8AD5078 dl_get_statistics_ack_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_get_statistics_req_t;
typedef struct _332CB8E67E48984461DA80E3D7B1FF5F dl_hp_clear_func_addr_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_clear_stats_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_reset_stats_req_t;
typedef struct _A8C20F0262151BE7C4013A7A313500C7 dl_hp_set_busy_to_req_t;
typedef struct _701AB287855708548E3A9E6D7A33E099 hw_identify_format_type;
typedef struct _EB03BB76CE0965D46ACEB5A56A93EB4A key_keytable_entry_type;
struct pdc_iodc_id_chief_block {struct io_module *chieftain;int filler[31];};
typedef struct _101ED56796A31C5C092EFC61C0F81522 smSaveYourselfPhase2Msg;
typedef struct _sym_argument_entry_type sym_argument_entry_type;
typedef struct _sym_callback_entry_type sym_callback_entry_type;
typedef struct _99C02650D618D1A0DF55A9E85FF77BBA sym_proc_def_entry_type;
typedef struct _674E79E828204A5EA95B7CAF67B0657E sym_proc_ref_entry_type;
typedef struct _BCDE0020825236A8F8A72B60AFA7374C xChangeDeviceControlReq;
typedef struct _AD58CDA99C93F34C31A743157D5C3E5C xChangePointerDeviceReq;
typedef struct _DC32A0924BDC2649CEA8C5E8AC72EF13 xCopyColormapAndFreeReq;
typedef struct _6C8DA88AE0F795AA91A7651F5464995D xGetDeviceKeyMappingReq;
typedef struct _EF15DCB28339270802C69A46485DD45C xGetExtensionVersionReq;
typedef struct _019CECDD6753AAB6598130682127E88A xGetPointerControlReply;
typedef struct _F38DCD124B444AE28722F96474B80F5D xGetPointerMappingReply;
typedef struct _286A111ACEDB435E271A47289B65D34E xGetSelectionOwnerReply;
typedef struct _E933BCC3EA0E9DD82AEB507EEC5AF7E5 xHPGetExtEventMaskReply;
typedef struct _313C3B353B46FFB1EDF86B43BFD8A7BC xHPGetWindowCursorReply;
typedef struct _92276D725373BB3B16F8CB5C6778E662 xListFontsWithInfoReply;
typedef struct _PrintDestroyContext xPrintDestroyContextReq;
typedef struct _PrintGetPrinterList xPrintGetPrinterListReq;
typedef struct _DAEBDFCF6641BEDF5371E5E95CD6FE55 xPrintQueryScreensReply;
typedef struct _884E74C734502FDAE5886BDFF852D3B6 xPrintQueryVersionReply;
typedef struct _791AF81D366397FAE28AFC7E5E3FF4B5 xRecordCreateContextReq;
typedef struct _6ECE5F7C46F37A2EF909042FBC6F3E21 xRecordEnableContextReq;
typedef struct _51749B1CBB08500DC0A3C077F7082133 xieDestroyPhotospaceReq;
typedef struct _3518B1C16AD615E8887B1326F3EF5649 xieFloExportClientPhoto;
typedef struct _9CB99F55F4760567A5B7FA05D1482C33 xieFloImplementationErr;
typedef struct _AC5C9E6D1F0E0913CA2851FF4338E565 xieFloImportClientPhoto;
typedef struct _0A62F3378E7EE0C32D1AC7B808E76453 xieQueryTechniquesReply;
typedef struct _EDB1A22D9B31A401FCB33FE96D068C50 xieTecHistogramGaussian;
typedef struct _xkbGetIndicatorMapReply xkbGetIndicatorMapReply;
typedef struct _xkbGetIndicatorState xkbGetIndicatorStateReq;
typedef struct _xkbGetNamedIndicator xkbGetNamedIndicatorReq;
typedef struct _xkbIndicatorMapWireDesc xkbIndicatorMapWireDesc;
typedef struct _xkbSetDebuggingFlags xkbSetDebuggingFlagsReq;
typedef struct _xkbSetNamedIndicator xkbSetNamedIndicatorReq;
typedef struct _xkbSymInterpretWireDesc xkbSymInterpretWireDesc;
typedef struct _CFC98DDC8C48D7D4D5B40C9CE62D3BBC *ApplicationShellWidget;
typedef struct _07CF3C5657E15CE751200314299C128D *ICPreeditAttributesPtr;
enum MACRO_AUDIO_SET_OUTPUT {AUDIO_SET_OUTPUT = 536887560,};
enum MACRO_AUDIO_SET_SAMPLE {AUDIO_SET_SAMPLE_RATE = 536887577,};
enum MACRO_CIO_ILLEGAL_LOCK {CIO_ILLEGAL_LOCK_EVENT_OPTION = -55,};
enum MACRO_CIO_MERR_ADDRESS {CIO_MERR_ADDRESS_CODE = -87,};
enum MACRO_CIO_MERR_COMMAND {CIO_MERR_COMMAND_CODE = -81,};
enum MACRO_CIO_SUBCH_PAUSED {CIO_SUBCH_PAUSED = -33,};
enum MACRO_COMMAND_COMPLETE {COMMAND_COMPLETE_MSG = 0x0,DISCONNECT = 0x4,IDENTIFY_MSG = 0x80,};
enum MACRO_CORE_ARBITRATION {CORE_ARBITRATION = 0x4,};
enum MACRO_CS80_CMD_TO_NCIC {CS80_CMD_TO_NCIC = -92,};
enum MACRO_ContItemAllValid {ContItemAllValid = 0xFFFF,};
enum MACRO_ContItemViewType {ContItemViewType = 1,ContItemVisualEmphasis = 2,ContItemIconWidth = 4,ContItemDetailCount = 8,};
enum MACRO_DEFAULT_ACDIRMIN {DEFAULT_ACDIRMIN = 30,DEFAULT_ACDIRMAX = 60,};
enum MACRO_DEFAULT_ACREGMIN {DEFAULT_ACREGMIN = 3,DEFAULT_ACREGMAX = 60,};
enum MACRO_DL_HP_SET_REMOTE {DL_HP_SET_REMOTE_WIN_REQ = 0xEC,};
enum MACRO_DMA_TIMING_BURST {DMA_TIMING_BURST = 48,};
enum MACRO_DPMSMinorVersion {DPMSMinorVersion = 1,};
enum MACRO_DPMSNumberErrors {DPMSNumberErrors = 0,DPMSMajorVersion = 1,};
enum MACRO_DPMSNumberEvents {DPMSNumberEvents = 0,};
enum MACRO_EISA_ARBITRATION {EISA_ARBITRATION = 0x1,LASI_INT_LINES = 0x20,};
enum MACRO_EXTENDED_MESSAGE {EXTENDED_MESSAGE_MSG = 0x1,};
enum MACRO_FORMAT8mmDEFAULT {FORMAT8mmDEFAULT = -1,};
enum MACRO_GRAPH_DIAG_RESET {GRAPH_DIAG_RESET = 4,GRAPH_DIAG_ATTRIBUTES = 6,GRAPH_DIAG_MAPADDR = 7,};
enum MACRO_INIT_SEARCH_NEXT {INIT_SEARCH_NEXT = 2,INIT_MOD_AND_DEV = 4,INIT_DEV = 5,INIT_RETURN_MSG = 9,};
enum MACRO_IOCONFIG_CHANGED {IOCONFIG_CHANGED = 1,IOCONFIG_EIO = -1,};
enum MACRO_IOCONFIG_CORRUPT {IOCONFIG_CORRUPT = -3,};
enum MACRO_IO_READ_COMPLETE {IO_READ_COMPLETE = 1,IO_WRITE = 2,};
enum MACRO_IPOPT_SECUR_EFTO {IPOPT_SECUR_EFTO = 0x789A,IPOPT_SECUR_MMMM = 0xBC4D,};
enum MACRO_KI_STRSCHED_KXTI {KI_STRSCHED_KXTI_R = 591,};
enum MACRO_KbdFeedbackClass {KbdFeedbackClass = 0,PtrFeedbackClass = 1,StringFeedbackClass = 2,IntegerFeedbackClass = 3,LedFeedbackClass = 4,BellFeedbackClass = 5,};
enum MACRO_LLIO_BIND_BAD_HW {LLIO_BIND_BAD_HW_ADDR = -11,};
enum MACRO_LLIO_CANNOT_BIND {LLIO_CANNOT_BIND_LOWER = -15,};
enum MACRO_LLIO_NOT_PRESENT {LLIO_NOT_PRESENT = -73,};
enum MACRO_LOCALDOMAINPARTS {LOCALDOMAINPARTS = 2,RES_TIMEOUT = 5,MAXRESOLVSORT = 10,RES_MAXNDOTS = 15,};
enum MACRO_MAX_SLOT_ENTRIES {MAX_SLOT_ENTRIES = 2042,ITE_LOCK_SLOT = 2044,ITE_PSEUDO_THREAD_ID = -1,};
enum MACRO_MERC_DM_HARDWARE {MERC_DM_HARDWARE_FAILURE = -13,};
enum MACRO_MERC_DM_OPERATOR {MERC_DM_OPERATOR_ATTN = -12,};
enum MACRO_OLD_NS_LC_PROLOG {OLD_NS_LC_PROLOG = 5,NS_LC_MASK = 65535,};
enum MACRO_OLD_TR_LINK_LOOP {OLD_TR_LINK_LOOP = 0x40,TR_X25_L2_IN_HEADER = 0x80,TR_X25_L2_IN_FRAME = 0x100,TR_X25_L2_OUT_HEADER = 0x200,TR_X25_L2_OUT_FRAME = 0x400,TR_X25_L3_IN_HEADER = 0x800,TR_X25_L3_IN_PACKET = 0x1000,TR_X25_L3_OUT_HEADER = 0x2000,TR_X25_L3_OUT_PACKET = 0x4000,TR_X25_LOOPBACK = 0x8000,};
enum MACRO_PDE_ACCESSED_BIT {PDE_ACCESSED_BIT = 0x40000000,PDE_RTRAP_BIT = 0x20000000,PDE_DIRTY_BIT = 0x10000000,PDE_DBRK_BIT = 0x8000000,PDE_UNCACHE_BIT = 0x80000,PDE_EXECUTED_BIT = 0x1,};
enum MACRO_PDE_MODIFIED_BIT {PDE_MODIFIED_BIT = 0x8,};
enum MACRO_PixmapColorError {PixmapColorError = 1,};
enum MACRO_PropertyNewValue {PropertyNewValue = 0,PropertyDelete = 1,};
enum MACRO_SYS_aio_cancel64 {SYS_aio_cancel64 = 500,SYS_AIO_SUSPEND64 = 501,};
enum MACRO_SYS_aio_return64 {SYS_aio_return64 = 499,SYS_AIO_CANCEL64 = 500,};
enum MACRO_SYS_clock_getres {SYS_clock_getres = 347,SYS_TIMER_CREATE = 348,};
enum MACRO_SYS_gettimeofday {SYS_gettimeofday = 116,SYS_GETRUSAGE = 117,};
enum MACRO_SYS_ksem_trywait {SYS_ksem_trywait = 453,SYS_LWP_RWLOCK_INIT = 454,};
enum MACRO_SYS_lio_listio64 {SYS_lio_listio64 = 503,SYS_RECV2 = 504,};
enum MACRO_SYS_lwp_continue {SYS_lwp_continue = 403,SYS_GETACL = 404,};
enum MACRO_SYS_lwp_detached {SYS_lwp_detached_exit = 489,SYS_CRASHCONF = 490,};
enum MACRO_SYS_lwp_getstate {SYS_lwp_getstate = 418,SYS_LWP_SETSTATE = 419,};
enum MACRO_SYS_lwp_setstate {SYS_lwp_setstate = 419,SYS_LWP_DETACH = 420,};
enum MACRO_SYS_proc_syscall {SYS_proc_syscall = 297,SYS_SEMCTL = 312,};
enum MACRO_SYS_pstat_getlwp {SYS_pstat_getlwp = 401,SYS_LWP_EXIT = 402,};
enum MACRO_SYS_settimeofday {SYS_settimeofday = 122,SYS_FCHOWN = 123,};
enum MACRO_SYS_sigsetreturn {SYS_sigsetreturn = 224,SYS_SIGSETSTATEMASK = 225,};
enum MACRO_SYS_sigtimedwait {SYS_sigtimedwait = 429,SYS_SIGWAIT = 430,};
enum MACRO_SYS_timer_delete {SYS_timer_delete = 349,SYS_TIMER_SETTIME = 350,};
enum MACRO_ScreenSaverReset {ScreenSaverReset = 0,ScreenSaverActive = 1,};
enum MACRO_USB_HID_PROTOCOL {USB_HID_PROTOCOL_NONE = 0,USB_HID_PROTOCOL_KEYBOARD = 1,USB_HID_PROTOCOL_MOUSE = 2,USB_HID_CLASS_DESCRIPTOR = 33,USB_HID_REPORT_DESCRIPTOR = 34,USB_HID_PHYSICAL_DESCRIPTOR = 35,};
enum MACRO_USB_HID_SUBCLASS {USB_HID_SUBCLASS_BOOT = 1,};
enum MACRO_VendorShellIndex {VendorShellIndex = 7,XmTransientShellIndex = 8,};
enum MACRO_WRITE_0_FILEMARK {WRITE_0_FILEMARK = 1,};
enum MACRO_XIMHotKeyStateON {XIMHotKeyStateON = 0x1,XIMHotKeyStateOFF = 0x2,};
enum MACRO_XIM_MAXIMNAMELEN {XIM_MAXIMNAMELEN = 64,};
enum MACRO_XIM_MAXLCNAMELEN {XIM_MAXLCNAMELEN = 64,};
enum MACRO_XK_hebrew_daleth {XK_hebrew_daleth = 0xCE3,XK_hebrew_he = 0xCE4,XK_hebrew_waw = 0xCE5,XK_hebrew_zain = 0xCE6,};
enum MACRO_XK_hebrew_gimmel {XK_hebrew_gimmel = 0xCE2,XK_hebrew_dalet = 0xCE3,};
enum MACRO_XK_hebrew_samekh {XK_hebrew_samekh = 0xCF1,XK_hebrew_ayin = 0xCF2,XK_hebrew_finalpe = 0xCF3,XK_hebrew_pe = 0xCF4,XK_hebrew_finalzade = 0xCF5,};
enum MACRO_XPGetDocFinished {XPGetDocFinished = 0,XPGetDocSecondConsumer = 1,XPGetDocError = 2,};
enum MACRO_XPStartJobNotify {XPStartJobNotify = 0,XPEndJobNotify = 1,XPStartDocNotify = 2,XPEndDocNotify = 3,XPStartPageNotify = 4,XPEndPageNotify = 5,};
enum MACRO_X_DPMSGetVersion {X_DPMSGetVersion = 0,X_DPMSCapable = 1,X_DPMSGetTimeouts = 2,X_DPMSSetTimeouts = 3,X_DPMSEnable = 4,X_DPMSDisable = 5,X_DPMSForceLevel = 6,X_DPMSInfo = 7,};
enum MACRO_X_SyncInitialize {X_SyncInitialize = 0,X_SyncListSystemCounters = 1,X_SyncCreateCounter = 2,X_SyncSetCounter = 3,X_SyncChangeCounter = 4,X_SyncQueryCounter = 5,X_SyncDestroyCounter = 6,X_SyncAwait = 7,X_SyncCreateAlarm = 8,X_SyncChangeAlarm = 9,X_SyncQueryAlarm = 10,X_SyncDestroyAlarm = 11,X_SyncSetPriority = 12,X_SyncGetPriority = 13,};
enum MACRO_X_kbUseExtension {X_kbUseExtension = 0,X_kbSelectEvents = 1,X_kbBell = 3,X_kbGetState = 4,X_kbLatchLockState = 5,X_kbGetControls = 6,X_kbSetControls = 7,X_kbGetMap = 8,X_kbSetMap = 9,X_kbGetCompatMap = 10,X_kbSetCompatMap = 11,X_kbGetIndicatorState = 12,X_kbGetIndicatorMap = 13,X_kbSetIndicatorMap = 14,X_kbGetNamedIndicator = 15,X_kbSetNamedIndicator = 16,X_kbGetNames = 17,X_kbSetNames = 18,X_kbGetGeometry = 19,X_kbSetGeometry = 20,X_kbPerClientFlags = 21,X_kbListComponents = 22,X_kbGetKbdByName = 23,X_kbGetDeviceInfo = 24,X_kbSetDeviceInfo = 25,X_kbSetDebuggingFlags = 101,};
enum MACRO_XkbAllGroupsMask {XkbAllGroupsMask = 0xF,};
enum MACRO_XkbClientMapMask {XkbClientMapMask = 1,XkbServerMapMask = 2,XkbCompatMapMask = 4,XkbIndicatorMapMask = 8,XkbNamesMask = 16,XkbGeometryMask = 32,XkbControlsMask = 64,XkbAllComponentsMask = 127,};
enum MACRO_XkbIM_UseLatched {XkbIM_UseLatched = 2,XkbIM_UseLocked = 4,XkbIM_UseEffective = 8,XkbIM_UseCompat = 16,};
enum MACRO_XkbKeyNameLength {XkbKeyNameLength = 4,XkbMaxRedirectCount = 8,XkbGeomPtsPerMM = 10,XkbGeomMaxColors = 32,};
enum MACRO_XkbMaxShiftLevel {XkbMaxShiftLevel = 63,XkbMaxSymsPerKey = 252,};
enum MACRO_XkbOneLevelIndex {XkbOneLevelIndex = 0,XkbTwoLevelIndex = 1,XkbAlphabeticIndex = 2,XkbKeypadIndex = 3,};
enum MACRO_XkbSA_LastAction {XkbSA_LastAction = 20,XkbSA_NumActions = 21,XkbSA_BreakLatch = 1045249,};
enum MACRO_XkbSA_LockNoLock {XkbSA_LockNoLock = 1,XkbSA_LockNoUnlock = 2,XkbSA_UseModMapMods = 4,};
enum MACRO_XkbSymInterpMask {XkbSymInterpMask = 1,XkbGroupCompatMask = 2,XkbAllCompatMask = 3,};
enum MACRO_XkbUnknownDoodad {XkbUnknownDoodad = 0,XkbOutlineDoodad = 1,XkbSolidDoodad = 2,XkbTextDoodad = 3,XkbIndicatorDoodad = 4,XkbLogoDoodad = 5,};
enum MACRO_XkbWrapIntoRange {XkbWrapIntoRange = 0x0,XkbClampIntoRange = 0x40,XkbRedirectIntoRange = 0x80,};
enum MACRO_XmContainerIndex {XmContainerIndex = 7,};
enum MACRO_XmDEFAULT_SELECT {XmDEFAULT_SELECT_COLOR = -1,};
enum MACRO_XmGrabShellIndex {XmGrabShellIndex = 8,XmDisplayIndex = 10,};
enum MACRO_XmMenuShellIndex {XmMenuShellIndex = 7,};
enum MACRO_XmScrollBarIndex {XmScrollBarIndex = 5,};
enum MACRO_XmScrolledWIndex {XmScrolledWIndex = 7,};
enum MACRO_XmSelectioBIndex {XmSelectioBIndex = 8,};
enum MACRO_XmSeparatoGIndex {XmSeparatoGIndex = 3,};
enum MACRO_XmSeparatorIndex {XmSeparatorIndex = 5,};
enum MACRO_XmTextFieldIndex {XmTextFieldIndex = 5,};
enum MACRO_XpmPixmapSuccess {XpmPixmapSuccess = 0,XpmPixmapOpenFailed = -1,};
enum MACRO_XrmEnumAllLevels {XrmEnumAllLevels = 0,XrmEnumOneLevel = 1,XtSpecificationRelease = 6,};
enum MACRO__LFS64_LARGEFILE {_LFS64_LARGEFILE = 1,};
enum MACRO___PTHREAD_RWLOCK {__PTHREAD_RWLOCK_VALID = 0x8C,__LWP_RWLOCK_VALID = 0x8C91,};
enum MACRO_osfXK_QuickPaste {osfXK_QuickPaste = 0x1004FF33,osfXK_Reselect = 0x1004FF73,osfXK_Restore = 0x1004FF78,};
enum MACRO_sym_k_error_list {sym_k_error_list = 127,};
enum MACRO_sym_m_referenced {sym_m_referenced = 1,sym_m_cycle_checked = 2,sym_m_has_cycle = 4,sym_m_charset = 8,};
enum MACRO_sz_iceNoCloseMsg {sz_iceNoCloseMsg = 8,};
enum MACRO_sz_smInteractMsg {sz_smInteractMsg = 8,};
enum MACRO_sz_xImageTextReq {sz_xImageTextReq = 16,};
enum MACRO_sz_xListFontsReq {sz_xListFontsReq = 8,};
enum MACRO_sz_xPixmapFormat {sz_xPixmapFormat = 8,};
enum MACRO_sz_xPolyPointReq {sz_xPolyPointReq = 12,};
enum MACRO_sz_xTestResetReq {sz_xTestResetReq = 4,};
enum MACRO_sz_xieFloCompare {sz_xieFloCompare = 36,sz_xieFloConstrain = 24,};
enum MACRO_sz_xieFloLogical {sz_xieFloLogical = 32,sz_xieFloMatchHistogram = 24,};
enum MACRO_sz_xkbBellNotify {sz_xkbBellNotify = 32,};
enum MACRO_xieValExportDone {xieValExportDone = 1,xieValExportMore = 2,xieValExportEmpty = 3,xieValExportError = 4,};
enum MACRO_xieValFloSuccess {xieValFloSuccess = 1,xieValFloAbort = 2,xieValFloError = 3,};
enum MACRO_xieValSingleBand {xieValSingleBand = 1,xieValTripleBand = 2,};
typedef struct _EA67C4467E5D392AEC3890F142F1A94F OverrideShellClassPart;
typedef struct _735DE0EA43321C9AE91F95F7110249AF ShellClassExtensionRec;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F TopLevelShellClassPart;
typedef struct _TransientShellClassRec TransientShellClassRec;
typedef struct _VendorShellClassRec *VendorShellWidgetClass;
typedef struct _0F3BCE20E1217B8B60181F2FE2EFC047 XCirculateRequestEvent;
typedef struct _705D0BEDE90FA70168249FE65D21D1D3 XConfigureRequestEvent;
typedef struct _EF1440E4CA89662D977D4B051E2FFAB7 XDeviceResolutionState;
typedef struct _4D918DF5E629F4C28AE5A435B1E47B7A XSelectionRequestEvent;
typedef struct _735C3716122317809AD8BB5A186A1FBE XStringFeedbackControl;
typedef struct _XcmsRegColorSpaceEntry XcmsRegColorSpaceEntry;
typedef struct _XkbControlsNotify XkbControlsNotifyEvent;
typedef struct _XkbDeviceLedChanges *XkbDeviceLedChangesPtr;
typedef struct _XkbDeviceLedChanges XkbDeviceLedChangesRec;
typedef struct _XkbIndicatorChanges *XkbIndicatorChangesPtr;
typedef struct _XkbIndicatorChanges XkbIndicatorChangesRec;
typedef struct _XmAccessColorsTraitRec XmAccessColorsTraitRec;
typedef struct _XmAnyICCCallbackStruct XmAnyICCCallbackStruct;
typedef struct _XmArrowButtonClassPart XmArrowButtonClassPart;
typedef struct _XmArrowButtonGadgetRec XmArrowButtonGadgetRec;
typedef struct _XmButtonEventStatusRec XmButtonEventStatusRec;
typedef struct _487CA7C5BD7AF327E4BD0CBF5F49799B *XmClipboardPendingList;
typedef struct _XmContainerItemDataRec XmContainerItemDataRec;
typedef struct _XmContainerClassRec *XmContainerWidgetClass;
typedef struct _XmDefaultBindingStringRec *XmDefaultBindingString;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmDialogShellClassPart;
typedef struct _XmDialogShellExtRec *XmDialogShellExtObject;
typedef struct _XmDialogShellWidgetRec XmDialogShellWidgetRec;
typedef struct _EE866E46B57D84E2A02F424C24BE7B31 XmDragContextClassPart;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmDrawingAreaClassPart;
typedef struct _XmDrawnButtonClassPart XmDrawnButtonClassPart;
typedef struct _XmDropTransferClassRec XmDropTransferClassRec;
typedef struct _XmDropTransferEntryRec XmDropTransferEntryRec;
typedef struct _4E2E0661611BB9974179772E2A48C6DA XmFileSelectionBoxPart;
typedef struct _XmGrabShellClassRec *XmGrabShellWidgetClass;
typedef struct _XmLabelGadgetClassPart XmLabelGadgetClassPart;
typedef struct _XmMainWindowConstraintPart *XmMainWindowConstraint;
typedef struct _XmManagerConstraintRec *XmManagerConstraintPtr;
typedef struct _XmManagerConstraintRec XmManagerConstraintRec;
typedef struct _XmMenuShellClassRec *XmMenuShellWidgetClass;
typedef struct _XmMessageBoxConstraintPart *XmMessageBoxConstraint;
typedef struct _XmPanedWindowClassPart XmPanedWindowClassPart;
typedef struct _22DD3C11A6774D6C25B32DE300762746 XmParentInputActionRec;
typedef union _EB2535972657DA0245F770D5D18D2BD3 XmParentProcessDataRec;
typedef struct _XmPrimitiveClassExtRec XmPrimitiveClassExtRec;
typedef struct _XmPrimitiveClassRec *XmPrimitiveWidgetClass;
typedef struct _XmPushButtonGadgetPart XmPushButtonGadgetPart;
typedef struct _XmRowColumnClassRec *XmRowColumnWidgetClass;
typedef struct _XmScrollBarClassRec *XmScrollBarWidgetClass;
typedef struct _XmScrolledWindowRec *XmScrolledWindowWidget;
typedef struct _XmSelectionBoxClassRec XmSelectionBoxClassRec;
typedef struct _XmSeparatorGadgetClassRec *XmSeparatorGadgetClass;
typedef struct _XmSeparatorClassRec *XmSeparatorWidgetClass;
typedef struct _XmShellExtClassPart *XmShellExtClassPartPtr;
typedef struct _XmSpecUnitTypeTraitRec XmSpecUnitTypeTraitRec;
typedef struct _XmSpinBoxConstraintRec *XmSpinBoxConstraintPtr;
typedef struct _XmSpinBoxConstraintRec XmSpinBoxConstraintRec;
typedef struct _XmTakesDefaultTraitRec XmTakesDefaultTraitRec;
typedef struct _XmTextFieldClassRec *XmTextFieldWidgetClass;
typedef struct _XmToggleButtonClassRec XmToggleButtonClassRec;
typedef struct _XmVendorShellExtRec *XmVendorShellExtObject;
typedef struct _5462DF8C178A5086C137AD8B370A2274 XmbufUpdateNotifyEvent;
typedef struct _5DD49376C74765CB7E96286DDB46181E XtConfigureHookDataRec;
typedef struct _BD96F4C520841110C237EF8D06FD9BEE _IceProtoSetupToMeInfo;
struct _XkbSwitchScreenAction {unsigned char type;unsigned char flags;char screenXXX;};
struct _XmScaleConstraintPart {char unused;};
typedef struct _25D0D8CCEC98ADDB4521E2BA148959A7 _XmTextDropTransferRec;
enum _kthread_create_caller {KI_LWP_CALLER = 0x1,KI_SKTHREAD_D = 0x2,KI_UKTHREAD_D = 0x3,};
struct acl_entry_internal_msb {unsigned char uid_byte1;unsigned char gid_byte1;unsigned char gid_byte2;};
typedef struct _F729A21D64D64CB485090C8C4309D6F8 cio_pquad_dma_req_type;
typedef struct _700E25E294696415C5EE3D6F0C9AA59E dam_dm_info_entry_type;
typedef struct _A4EF4A77E40471EF410BD1BFBD9E090A deviceKeyButtonPointer;
typedef struct _85A38AD8457FB66A4E5490FCDC48446B dl_hp_set_ack_to_req_t;
typedef struct _3403786C5EE15D285179C38070580B61 dl_hp_set_rej_to_req_t;
typedef struct _58330DD7ED50E0D1B016F20AC1EEBF6A dl_set_phys_addr_req_t;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smShutdownCancelledMsg;
typedef struct _sym_control_entry_type sym_control_entry_type;
typedef struct _sym_def_obj_entry_type sym_def_obj_entry_type;
typedef struct _sym_section_entry_type sym_section_entry_type;
typedef struct _44DBA8761062EA5D0E0445C058A5F0FB xAllocColorPlanesReply;
typedef struct _2C268D9809C6E9DE2B818A0BB7518C2E xDeviceResolutionState;
typedef struct _A2FB221EC01549407EDCF016C4C0632F xGetDeviceControlReply;
typedef struct _8973D72E68A3D7427BDE924AB847E810 xGetFeedbackControlReq;
typedef struct _9A79A86C67FC8B79D589DEFE9BCD3BC9 xGetKeyboardMappingReq;
typedef struct _EFD32AB26A9F2C4402B187171A2243FF xHPGetDeviceControlReq;
typedef struct _7C0E6FBDC2BF29A9AC5B4796EC5BE28C xHPGetDeviceFocusReply;
typedef struct _BF4288351412136996F9ADCD6FD7AF45 xHPGrabDeviceButtonReq;
typedef struct _BFA06AD98FBBDDEDC0B582E2B4AC4030 xHPListInputDevicesReq;
typedef struct _BD70A3BCAFB9C7C5C0C679B3A9CE0A47 xHPRegisterWindowReply;
typedef struct _A27E5DC152941706DECC85ADB6E03D0F xHPSendDdxDriverMsgReq;
typedef struct _1CCADE67AD141609F0BF116838B10204 xHPSetInputDeviceReply;
typedef struct _38BC431CF83E096863532D796A6E7F77 xListInputDevicesReply;
typedef struct _PrintCreateContext xPrintCreateContextReq;
typedef struct _PrintGetAttributes xPrintGetAttributesReq;
typedef struct _PrintInputSelected xPrintInputSelectedReq;
typedef struct _PrintSetAttributes xPrintSetAttributesReq;
typedef struct _19958847318214F780EFE5EAB3B1A0C9 xQueryDeviceStateReply;
typedef struct _C30FF1240D2A8075F6967DECC9305E3F xQueryTextExtentsReply;
typedef struct _3208E1BA8126707DC1A488F29A0DED72 xRecordGetContextReply;
typedef struct _AAD257271AAA9A190B14D3482C45D035 xRecordQueryVersionReq;
typedef struct _2A859DA02CD5E3593B5918B42FA7FFEB xSendExtensionEventReq;
typedef struct _29C593C589279C3E7D511580F3E78129 xSetDeviceValuatorsReq;
typedef struct _F1472F09D9F4F4B2B771740E265DAEF8 xSetModifierMappingReq;
typedef struct _5CD0DDA75FC8A64FD62E45433429A157 xTestQueryInputSizeReq;
typedef struct _AC93509FFB6B9C1B98C9154A5D973C79 xUngrabDeviceButtonReq;
typedef struct _51749B1CBB08500DC0A3C077F7082133 xieCreatePhotospaceReq;
typedef struct _272B86F1CC556AC2FE1FEA8F3F6F9065 xieDestroyColorListReq;
typedef struct _46D157C3B2262130CAD8633945DA87DB xieExecuteImmediateReq;
typedef struct _C01B768C719C076F1885128ECB0E2F3B xieFloConvertFromIndex;
typedef struct _808EA0A767ABACCBD96646A8EAE3059A xieQueryColorListReply;
typedef struct _58964FFE81FF7A5F550F9B44561E3FD1 xieRedefinePhotofloReq;
typedef struct _C277BFB7EDBCB4B16FDC5D70401A7F72 xieTecConvolveConstant;
typedef struct _xkbListComponentsReply xkbListComponentsReply;
typedef struct _xkbPerClientFlagsReply xkbPerClientFlagsReply;
typedef struct _xkbShapeDoodadWireDesc xkbShapeDoodadWireDesc;
typedef struct _ConstraintClassRec *ConstraintWidgetClass;
typedef struct _XmContainerCwidCellInfoRec *ContainerCwidCellInfo;
typedef struct _5C32FF1A7C4211025F70196E2E5CEFB8 *ICStatusAttributesPtr;
enum MACRO_AMG_DM_HARDWARE {AMG_DM_HARDWARE_FAILURE = -31,};
enum MACRO_API_AFLAG_ERROR {API_AFLAG_ERROR = 101,};
enum MACRO_API_AFLAG_INPUT {API_AFLAG_INPUT = 105,API_AFLAG_OUTPUT = 111,};
enum MACRO_AUDIO_SET_INPUT {AUDIO_SET_INPUT = 536887581,};
enum MACRO_AnyPropertyType {AnyPropertyType = 0,};
enum MACRO_AsyncThisDevice {AsyncThisDevice = 0,SyncThisDevice = 1,ReplayThisDevice = 2,AsyncOtherDevices = 3,AsyncAll = 4,SyncAll = 5,};
enum MACRO_CHANNEL_0_IRQ13 {CHANNEL_0_IRQ13 = 0x1,CHANNEL_1_IRQ13 = 0x2,CHANNEL_2_IRQ13 = 0x4,CHANNEL_3_IRQ13 = 0x8,CHANNEL_5_IRQ13 = 0x20,CHANNEL_6_IRQ13 = 0x40,CHANNEL_7_IRQ13 = 0x80,};
enum MACRO_CIO_DA_SELFTEST {CIO_DA_SELFTEST_SEQ_ILLEGAL = -48,};
enum MACRO_CIO_ILLEGAL_CLC {CIO_ILLEGAL_CLC_ORDER = -31,};
enum MACRO_CIO_SPONTANEOUS {CIO_SPONTANEOUS_ABORT = -42,};
enum MACRO_CIO_SUBCH_ERROR {CIO_SUBCH_ERROR_TRAP = -34,};
enum MACRO_CIO_SUBC_STATUS {CIO_SUBC_STATUS_RFC = 0x0,CIO_SUBC_STATUS_AES = 0x10,CIO_SUBC_STATUS_DPE = 0x20,CIO_SUBC_STATUS_SCD = 0x30,CIO_SUBC_STATUS_SCR = 0x50,CIO_SUBC_STATUS_DOD = 0x60,CIO_SUBC_STATUS_PER = 0x70,CIO_SUBC_STATUS_ERT = 0x80,};
enum MACRO_CIO_TRANSPARENT {CIO_TRANSPARENT_STATUS = 0,CIO_ARQ_STATUS = 1,CIOCA_IDY = 134217728,CIOCA_DLD = 268435460,CIOCA_DLD1 = 285212676,CIOCA_PAU = 536870912,CIOCA_DIS = 805306368,CIOCA_RS = 1073741824,CIOCA_RS_D = 1090519040,CIOCA_WC = 1342177284,CIOCA_RD = 1610612736,CIOCA_WD = 1879048196,CIOCA_RTS = -2013265920,CIOCA_WTC = -1744830460,CIOCA_RDS = -1610612736,CIOCA_RDS1 = -1593835520,CIOCA_CLC = -1207959548,};
enum MACRO_CIO_UNSUPPORTED {CIO_UNSUPPORTED_DIAG_OPTION = -54,};
enum MACRO_CRERR_WRONGDUMP {CRERR_WRONGDUMP = -4,};
enum MACRO_CRERR_WRONGHOST {CRERR_WRONGHOST = -5,CR_OK = 0,};
enum MACRO_CRWARN_NOACTUAL {CRWARN_NOACTUAL = 2,CRWARN_MISMATCH = 1,};
enum MACRO_CS80_CMD_TO_NUN {CS80_CMD_TO_NUN = -93,};
enum MACRO_CS80_DRP_TO_NUN {CS80_DRP_TO_NUN = -102,};
enum MACRO_CS80_REP_TO_NUN {CS80_REP_TO_NUN = -99,};
enum MACRO_ConstraintIndex {ConstraintIndex = 5,};
enum MACRO_ContDetailOrder {ContDetailOrder = 1,ContDetailTabList = 2,ContFirstColumnWidth = 4,ContSelectionMode = 8,ContSelectColor = 16,};
enum MACRO_CoordModeOrigin {CoordModeOrigin = 0,CoordModePrevious = 1,};
enum MACRO_DEFAULT_RETRANS {DEFAULT_RETRANS = 4,DEFAULT_RETRY = 1,};
enum MACRO_DL_HP_HW_STATUS {DL_HP_HW_STATUS_REQ = 0xE6,};
enum MACRO_DL_HP_MULTICAST {DL_HP_MULTICAST_LIST_REQ = 0xE4,};
enum MACRO_DL_HP_SET_LOCAL {DL_HP_SET_LOCAL_WIN_REQ = 0xED,};
enum MACRO_DL_HP_TRACE_BUF {DL_HP_TRACE_BUF_REQ = 0xF8,};
enum MACRO_DL_HP_TRACE_OFF {DL_HP_TRACE_OFF_REQ = 0xF9,};
enum MACRO_ELF32_FSZ_SWORD {ELF32_FSZ_SWORD = 4,};
enum MACRO_ELF32_FSZ_XWORD {ELF32_FSZ_XWORD = 4,};
enum MACRO_ELF64_FSZ_XWORD {ELF64_FSZ_XWORD = 8,};
enum MACRO_FIRST_TRANSPORT {FIRST_TRANSPORT = 0,NUM_TRANSPORTS = 1,FIRST_STORAGE = 50,};
enum MACRO_FamilyLocalHost {FamilyLocalHost = 252,};
enum MACRO_FontLeftToRight {FontLeftToRight = 0,FontRightToLeft = 1,FontChange = 255,};
enum MACRO_GRAPH_INTERFACE {GRAPH_INTERFACE_A1017A = 0,GRAPH_INTERFACE_A1047A = 1,GRAPH_DIAG_READ_REG = 2,GRAPH_DIAG_WRITE_REG = 3,GRAPH_DIAG_WHICH_DISPLAY = 5,};
enum MACRO_ID_udpLsnNumEnt {ID_udpLsnNumEnt = 459777,ID_udpLsnTable = 459778,ID_udpLsnEntry = 459779,};
enum MACRO_INADDR_LOOPBACK {INADDR_LOOPBACK = 0x7F000001,INADDR_UNSPEC_GROUP = 0xE0000000,INADDR_ALLHOSTS_GROUP = 0xE0000001,INADDR_MAX_LOCAL_GROUP = 0xE00000FF,INADDR_NONE = 0xFFFFFFFF,};
enum MACRO_INVALID_OPTIONS {INVALID_OPTIONS_FLAGS = -6,};
enum MACRO_INVALID_SPACE_0 {INVALID_SPACE = 0xFFFF,INVALID_OFFSET = 0x0,};
enum MACRO_IO_CONFIGURATOR {IO_CONFIGURATOR_PORT = 0,IO_DIAGNOSTICS_PORT = 1,};
enum MACRO_KEYCHECKSUMSIZE {KEYCHECKSUMSIZE = 16,};
enum MACRO_KI_COMMITDAEMON {KI_COMMITDAEMON = 574,};
enum MACRO_KI_STRSCHED_BLK {KI_STRSCHED_BLK = 580,};
enum MACRO_KI_UNHASHDAEMON {KI_UNHASHDAEMON = 588,};
enum MACRO_LLIO_CANNOT_GET {LLIO_CANNOT_GET_MEM = -25,};
enum MACRO_LLIO_HW_PROBLEM {LLIO_HW_PROBLEM = -44,};
enum MACRO_LLIO_RETRANSMIT {LLIO_RETRANSMIT_BLOCK = -58,};
enum MACRO_LOG_NFACILITIES {LOG_NFACILITIES = 24,LOG_FACMASK = 1016,};
enum MACRO_LOQUIX_DMAENB16 {LOQUIX_DMAENB16 = 2,LOQUIX_DIRENB16 = 1,};
enum MACRO_MERC_DM_STACKER {MERC_DM_STACKER_FEEDER = -14,};
enum MACRO_MOUNTVERS_POSIX {MOUNTVERS_POSIX = 2,MOUNTPROC_PATHCONF = 7,};
enum MACRO_MSEM_IF_WAITERS {MSEM_IF_WAITERS = 0x1,};
enum MACRO_MT_INSTANCE_BIT {MT_INSTANCE_BIT_POS = 16,MT_TARGET_MASK = 15,};
enum MACRO_MappingModifier {MappingModifier = 0,MappingKeyboard = 1,MappingPointer = 2,};
enum MACRO_MrmRtypeInteger {MrmRtypeInteger = 1,MrmRtypeBoolean = 2,MrmRtypeChar8 = 3,MrmRtypeChar8Vector = 4,MrmRtypeCString = 5,MrmRtypeCStringVector = 6,MrmRtypeFloat = 7,MrmRtypeCallback = 9,MrmRtypePixmapImage = 10,MrmRtypePixmapDDIF = 11,MrmRtypeResource = 12,MrmRtypeNull = 13,MrmRtypeAddrName = 14,MrmRtypeIconImage = 15,MrmRtypeFont = 16,MrmRtypeFontList = 17,MrmRtypeColor = 18,MrmRtypeColorTable = 19,MrmRtypeAny = 20,MrmRtypeTransTable = 21,MrmRtypeClassRecName = 22,MrmRtypeIntegerVector = 23,MrmRtypeXBitmapFile = 24,MrmRtypeCountedVector = 25,MrmRtypeKeysym = 26,MrmRtypeSingleFloat = 27,MrmRtypeWideCharacter = 28,MrmRtypeFontSet = 29,MrmRtypeHorizontalInteger = 30,MrmRtypeVerticalInteger = 31,MrmRtypeHorizontalFloat = 32,MrmRtypeVerticalFloat = 33,};
enum MACRO_NIS_MAXATTRNAME {NIS_MAXATTRNAME = 32,NIS_MAXATTRVAL = 2048,};
enum MACRO_NMV_LOGLINKDOWN {NMV_LOGLINKDOWN = 11,NMV_LOGLINKUP = 12,};
enum MACRO_NavigDimensionX {NavigDimensionX = 1,NavigDimensionY = 2,};
enum MACRO_NoSuchExtension {NoSuchExtension = 1,};
enum MACRO_OLD_ACL_NSGROUP {OLD_ACL_NSGROUP = 65500,ACLUNUSED = -35,};
enum MACRO_OLD_NS_LC_ERROR {OLD_NS_LC_ERROR = 2,NS_LC_WARNING = 196610,};
enum MACRO_PDE2_0_UIP_WBIT {PDE2_0_UIP_WBIT = 31,};
enum MACRO_PROTID_SLEEPERS {PROTID_SLEEPERS = 0x20000000,PROTID_DELETED = 0x10000000,};
enum MACRO_PTHREAD_PROCESS {PTHREAD_PROCESS_PRIVATE = 0x1,PTHREAD_PROCESS_SHARED = 0x2,PTHREAD_MUTEX_NORMAL = 0x10,PTHREAD_MUTEX_RECURSIVE = 0x20,PTHREAD_MUTEX_ERRORCHECK = 0x40,PTHREAD_MUTEX_DEFAULT = 0x80,PTHREAD_PRIO_NONE = 0x100,PTHREAD_PRIO_PROTECT = 0x200,PTHREAD_PRIO_INHERIT = 0x400,};
enum MACRO_PropModeReplace {PropModeReplace = 0,PropModePrepend = 1,PropModeAppend = 2,};
enum MACRO_REQUEST_TIMEOUT {REQUEST_TIMEOUT = 1,AEN = 2,UNKNOWN_RESELECT = 3,};
enum MACRO_RPCTEST_VERSION {RPCTEST_VERSION = 1,RPCTEST_NULL_PROC = 2,RPCTEST_NULL_BATCH_PROC = 3,};
enum MACRO_RPC_MAXDATASIZE {RPC_MAXDATASIZE = 9000,RPC_MAXADDRSIZE = 1024,RPC_CLIENT = 1,};
enum MACRO_RecordNumErrors {RecordNumErrors = 1,};
enum MACRO_RecordNumEvents {RecordNumEvents = 0,sz_XRecordRange = 32,};
enum MACRO_SCSI_MSG_REJECT {SCSI_MSG_REJECT_NON_GOOD_STATUS = -5,};
enum MACRO_SOCKET_SPINLOCK {SOCKET_SPINLOCK_ORDER = 17,};
enum MACRO_SYS_aio_error64 {SYS_aio_error64 = 498,SYS_AIO_RETURN64 = 499,};
enum MACRO_SYS_aio_fsync64 {SYS_aio_fsync64 = 502,SYS_LIO_LISTIO64 = 503,};
enum MACRO_SYS_aio_suspend {SYS_aio_suspend = 437,SYS_AIO_FSYNC = 438,};
enum MACRO_SYS_aio_write64 {SYS_aio_write64 = 497,SYS_AIO_ERROR64 = 498,};
enum MACRO_SYS_ftruncate64 {SYS_ftruncate64 = 360,SYS_FSTAT64 = 361,};
enum MACRO_SYS_getpeername {SYS_getpeername = 278,SYS_GETSOCKNAME = 279,};
enum MACRO_SYS_getpriority {SYS_getpriority = 100,SYS_LF_SEND = 103,};
enum MACRO_SYS_getrlimit64 {SYS_getrlimit64 = 363,SYS_LOCKF64 = 364,};
enum MACRO_SYS_getsockname {SYS_getsockname = 279,SYS_GETSOCKOPT = 280,};
enum MACRO_SYS_ksem_unlink {SYS_ksem_unlink = 448,SYS_KSEM_CLOSE = 449,};
enum MACRO_SYS_lwp_suspend {SYS_lwp_suspend = 392,SYS_LWP_RESUME = 393,};
enum MACRO_SYS_msem_remove {SYS_msem_remove = 324,SYS_ADJTIME = 325,};
enum MACRO_SYS_ogetcontext {SYS_ogetcontext = 174,SYS_OSETCONTEXT = 175,};
enum MACRO_SYS_osetcontext {SYS_osetcontext = 175,SYS_BIGIO = 176,};
enum MACRO_SYS_sched_yield {SYS_sched_yield = 341,SYS_SCHED_GET_PRIORITY_MAX = 342,};
enum MACRO_SYS_setpriority {SYS_setpriority = 96,SYS_GETPRIORITY = 100,};
enum MACRO_SYS_setrlimit64 {SYS_setrlimit64 = 368,SYS_STAT64 = 369,};
enum MACRO_SYS_sigaltstack {SYS_sigaltstack = 381,SYS_WAITID = 382,};
enum MACRO_SYS_sigprocmask {SYS_sigprocmask = 185,SYS_SIGPENDING = 186,};
enum MACRO_SYS_sigwaitinfo {SYS_sigwaitinfo = 428,SYS_SIGTIMEDWAIT = 429,};
enum MACRO_SYS_socketpair2 {SYS_socketpair2 = 387,SYS_SETREGID = 388,};
enum MACRO_SYS_swapclients {SYS_swapclients = 182,SYS_RMTPROCESS = 183,};
enum MACRO_SYS_ttrace_wait {SYS_ttrace_wait = 462,SYS_LF_WIRE_MEM = 463,};
enum MACRO_ShapeNotifyMask {ShapeNotifyMask = 1,};
enum MACRO_Uil_k_terminate {Uil_k_terminate = 0,Uil_k_continue = 1,};
enum MACRO_XBufferOverflow {XBufferOverflow = -1,};
enum MACRO_XIMInitialState {XIMInitialState = 1,XIMPreserveState = 2,};
enum MACRO_XK_Greek_lambda {XK_Greek_lambda = 0x7EB,XK_Greek_mu = 0x7EC,XK_Greek_nu = 0x7ED,XK_Greek_xi = 0x7EE,XK_Greek_omicron = 0x7EF,XK_Greek_pi = 0x7F0,XK_Greek_rho = 0x7F1,XK_Greek_sigma = 0x7F2,XK_Greek_finalsmallsigma = 0x7F3,XK_Greek_tau = 0x7F4,XK_Greek_upsilon = 0x7F5,XK_Greek_phi = 0x7F6,XK_Greek_chi = 0x7F7,XK_Greek_psi = 0x7F8,XK_Greek_omega = 0x7F9,XK_Greek_switch = 0xFF7E,};
enum MACRO_XK_hebrew_zayin {XK_hebrew_zayin = 0xCE6,XK_hebrew_chet = 0xCE7,};
enum MACRO_XSyncBadCounter {XSyncBadCounter = 0,XSyncBadAlarm = 1,XSyncNumberErrors = 2,};
enum MACRO_XTestX_NEGATIVE {XTestX_NEGATIVE = 0x4,XTestY_NEGATIVE = 0x8,XTestX_MOTION_MASK = 0xF,XTestY_MOTION_MASK = 0xF0,};
enum MACRO_X_MITSetBugMode {X_MITSetBugMode = 0,X_MITGetBugMode = 1,};
enum MACRO_XkbKeyTypesMask {XkbKeyTypesMask = 1,XkbKeySymsMask = 2,XkbModifierMapMask = 4,XkbExplicitComponentsMask = 8,XkbKeyActionsMask = 16,XkbKeyBehaviorsMask = 32,XkbVirtualModsMask = 64,XkbVirtualModMapMask = 128,};
enum MACRO_XkbMajorVersion {XkbMajorVersion = 1,};
enum MACRO_XkbMinorVersion {XkbMinorVersion = 0,XkbExplicitKeyTypesMask = 15,};
enum MACRO_XkbNoShiftLevel {XkbNoShiftLevel = 0xFF,};
enum MACRO_XkbNumKbdGroups {XkbNumKbdGroups = 4,};
enum MACRO_XkbNumModifiers {XkbNumModifiers = 8,XkbNumVirtualMods = 16,XkbNumIndicators = 32,XkbAllIndicatorsMask = -1,};
enum MACRO_XkbOneLevelMask {XkbOneLevelMask = 1,XkbTwoLevelMask = 2,XkbAlphabeticMask = 4,XkbKeypadMask = 8,XkbAllRequiredTypes = 15,};
enum MACRO_XkbRGMaxMembers {XkbRGMaxMembers = 12,};
enum MACRO_XkbSA_IgnoreVal {XkbSA_IgnoreVal = 0x0,XkbSA_SetValMin = 0x10,XkbSA_SetValCenter = 0x20,XkbSA_SetValMax = 0x30,XkbSA_SetValRelative = 0x40,XkbSA_SetValAbsolute = 0x50,XkbSA_ValOpMask = 0x70,};
enum MACRO_XmCOLOR_LITE_TS {XmCOLOR_LITE_TS_FACTOR = 20,};
enum MACRO_XmComboBoxIndex {XmComboBoxIndex = 7,};
enum MACRO_XmDragIconIndex {XmDragIconIndex = 2,};
enum MACRO_XmDrawingAIndex {XmDrawingAIndex = 7,};
enum MACRO_XmMessageBIndex {XmMessageBIndex = 8,};
enum MACRO_XmNotebookIndex {XmNotebookIndex = 7,};
enum MACRO_XmToggleBGIndex {XmToggleBGIndex = 4,};
enum MACRO_XtInputNoneMask {XtInputNoneMask = 0,XtInputReadMask = 1,XtInputWriteMask = 2,XtInputExceptMask = 4,XtAllEvents = -1,};
enum MACRO_YPPUSHVERS_ORIG {YPPUSHVERS_ORIG = 1,};
enum MACRO__POSIX_PRIORITY {_POSIX_PRIORITY_SCHEDULING = 1,};
enum MACRO__POSIX_REALTIME {_POSIX_REALTIME_SIGNALS = 1,};
enum MACRO___PTHREAD_MUTEX {__PTHREAD_MUTEX_VALID = 0x36,__LWP_MTX_VALID = 0x940,};
enum MACRO__deviceKeyPress {_deviceKeyPress = 0,_deviceKeyRelease = 1,};
enum MACRO_osfXK_BackSpace {osfXK_BackSpace = 0x1004FF08,};
enum MACRO_osfXK_BeginLine {osfXK_BeginLine = 0x1004FF58,osfXK_Cancel = 0x1004FF69,};
enum MACRO_sym_k_max_value {sym_k_max_value = 33,sym_k_no_value = 34,};
enum MACRO_sz_xCreateGCReq {sz_xCreateGCReq = 16,sz_xChangeGCReq = 12,};
enum MACRO_sz_xDPMSInfoReq {sz_xDPMSInfoReq = 4,sz_xDPMSInfoReply = 32,};
enum MACRO_sz_xGetImageReq {sz_xGetImageReq = 20,};
enum MACRO_sz_xKeymapEvent {sz_xKeymapEvent = 32,sz_xReq = 4,};
enum MACRO_sz_xOpenFontReq {sz_xOpenFontReq = 12,};
enum MACRO_sz_xPolyLineReq {sz_xPolyLineReq = 12,};
enum MACRO_sz_xPolyTextReq {sz_xPolyTextReq = 16,};
enum MACRO_sz_xRecordRange {sz_xRecordRange = 24,};
enum MACRO_sz_xResourceReq {sz_xResourceReq = 8,sz_xCreateWindowReq = 32,};
enum MACRO_sz_xieFloDither {sz_xieFloDither = 24,sz_xieFloGeometry = 56,};
enum MACRO_sz_xieTypLevels {sz_xieTypLevels = 12,};
enum MACRO_sz_xieTypMatrix {sz_xieTypMatrix = 36,sz_xieTypOrientation = 1,};
enum MACRO_sz_xkbMapNotify {sz_xkbMapNotify = 32,};
enum MACRO_xieMajorVersion {xieMajorVersion = 5,};
enum MACRO_xieMinorVersion {xieMinorVersion = 0,};
enum MACRO_xieNumFloErrors {xieNumFloErrors = 19,};
enum MACRO_xieValAlignable {xieValAlignable = 1,xieValArbitrary = 2,};
enum MACRO_xieValFavorDown {xieValFavorDown = 1,xieValFavorUp = 2,xieValRoundNW = 3,xieValRoundNE = 4,xieValRoundSE = 5,xieValRoundSW = 6,};
typedef struct _OverrideShellClassRec OverrideShellClassRec;
typedef struct _pci_bus_dep_func_tbl *PPCI_BUS_DEP_FUNC_TBL;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F SessionShellClassPart;
typedef struct _TopLevelShellClassRec TopLevelShellClassRec;
typedef struct _Uil_comp_desc Uil_compile_desc_type;
typedef struct _AAA5532226BFEC93AB8B8FBABECEF692 XIntegerFeedbackState;
typedef struct _27A89DBD85BC3B67227E722098DF0BF6 XProximityNotifyEvent;
typedef struct _3C51A411EB84D0C6D8E8C9D21FE4898B XSyncAlarmNotifyEvent;
typedef struct _E9D9387C3B11BC3046AC632B5B502F37 XTestInputActionEvent;
typedef struct _XimPendingCallback XimPendingCallbackRec;
typedef struct _XkbAccessXNotify XkbAccessXNotifyEvent;
typedef struct _XkbActionMessage XkbActionMessageEvent;
typedef struct _XkbControlsChanges *XkbControlsChangesPtr;
typedef struct _XkbControlsChanges XkbControlsChangesRec;
typedef struct _XkbIndicatorDoodad *XkbIndicatorDoodadPtr;
typedef struct _XkbIndicatorDoodad XkbIndicatorDoodadRec;
typedef struct _XkbSwitchScreenAction XkbSwitchScreenAction;
typedef struct _XmActivatableTraitRec XmActivatableTraitRec;
typedef struct _XmArrowButtonClassRec XmArrowButtonClassRec;
typedef struct _XmBulletinBoardRec *XmBulletinBoardWidget;
typedef struct _XmCascadeButtonGadgetRec *XmCascadeButtonGadget;
typedef struct _XmCascadeButtonRec *XmCascadeButtonWidget;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmClipWindowClassPart;
typedef struct _487CA7C5BD7AF327E4BD0CBF5F49799B XmClipboardPendingRec;
typedef struct _XmComboBoxClassRec *XmComboBoxWidgetClass;
typedef struct _XmContainerConstraintPart *XmContainerConstraint;
typedef union _XmConvertSelectionRec XmConvertSelectionRec;
typedef struct _XmDesktopClassPart *XmDesktopClassPartPtr;
typedef struct _XmDialogSavvyTraitRec XmDialogSavvyTraitRec;
typedef struct _XmDialogShellClassRec XmDialogShellClassRec;
typedef struct _XmDragContextClassRec XmDragContextClassRec;
typedef struct _XmDragIconClassRec *XmDragIconObjectClass;
typedef struct _XmDragOverShellRec *XmDragOverShellWidget;
typedef struct _XmDrawingAreaClassRec XmDrawingAreaClassRec;
typedef struct _XmDrawnButtonClassRec XmDrawnButtonClassRec;
typedef struct _XmDropSiteManagerPart XmDropSiteManagerPart;
typedef struct _XmDropTransferListRec XmDropTransferListRec;
typedef struct _XmFileSelectionBoxRec XmFileSelectionBoxRec;
typedef struct _XmFrameConstraintPart XmFrameConstraintPart;
typedef struct _XmIconGadgetClassPart XmIconGadgetClassPart;
typedef struct _XmIconHeaderClassPart XmIconHeaderClassPart;
typedef struct _XmLabelGadgetClassRec XmLabelGadgetClassRec;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmMainWindowClassPart;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmMessageBoxClassPart;
typedef struct _XmNotebookClassRec *XmNotebookWidgetClass;
typedef struct _XmPanedWindowClassRec XmPanedWindowClassRec;
typedef struct _A66634CAD7B95962E094A16D3D5C00F3 XmParentProcessAnyRec;
typedef struct _EEA792BA41020619123CDBDBFE92C7EE XmPrintShellClassPart;
typedef struct _XmProtocolClassRec *XmProtocolObjectClass;
typedef struct _XmPushButtonClassPart XmPushButtonClassPart;
typedef struct _XmPushButtonGadgetRec XmPushButtonGadgetRec;
typedef struct _A1FF3E4A410D43047E8695E29D7CC7B1 XmScaleCallbackStruct;
typedef struct _XmScaleConstraintPart XmScaleConstraintPart;
typedef struct _XmScratchPixmapKeyRec XmScratchPixmapKeyRec;
typedef struct _XmScrollFrameTraitRec XmScrollFrameTraitRec;
typedef struct _XmSeparatorGadgetPart XmSeparatorGadgetPart;
typedef struct _XmShellExtClassRec *XmShellExtObjectClass;
typedef struct _XmSimpleSpinBoxRec *XmSimpleSpinBoxWidget;
typedef unsigned char XmStringComponentType;
typedef struct _XmTearOffButtonRec *XmTearOffButtonWidget;
typedef struct _4571DE56C1A5FF05DDFD222F72236ED6 XmbufBufferAttributes;
typedef struct _7501B521F09A6EDD43C68106808E09A6 XmbufWindowAttributes;
typedef struct _A47C75AE74EA14FC2F54815F4A8813BA XtGeometryHookDataRec;
struct _XkbRedirectKeyAction {unsigned char type;unsigned char new_key;unsigned char mods_mask;unsigned char mods;unsigned char vmods_mask0;unsigned char vmods_mask1;unsigned char vmods0;unsigned char vmods1;};
struct _XmDialogShellExtPart {int empty;};
typedef struct __XmDropSiteUpdateInfoRec *_XmDropSiteUpdateInfo;
typedef struct _pthread_stack_info _pthread_stack_info_t;
typedef struct _2EA3893163DD9A8A0A06709C222EDBE7 dl_hp_hw_status_ack_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_hw_status_req_t;
typedef struct _332CB8E67E48984461DA80E3D7B1FF5F dl_hp_set_func_addr_t;
typedef struct _3FFE3EAEF4D725F3ECBF98A049FA4704 dl_hp_trace_buf_ack_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_trace_buf_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_trace_off_req_t;
typedef struct _EB73C50A98CF683D2F515C85045FD863 dl_reply_status_ind_t;
typedef struct _6811173A84BC2A7BD051BD3683D47430 dl_reply_update_req_t;
typedef struct _150E10FD2D39BC72596D758DB7486435 dma_A_lower_page_type;
typedef struct _94BF806C559D86C3BE5778D3957648AF dma_A_upper_page_type;
struct exchange_medium_parms {unsigned short transport;unsigned short source;unsigned short first_destination;unsigned short second_destination;unsigned char invert_first;unsigned char invert_second;};
typedef struct _9999A8100202244FE84754323DD949F8 hpib_dam_message_type;
typedef struct _936597F541877A62AE01CB1244CDD3B4 hw_identify_info_type;
typedef struct _544A67C4B1E4A518808DDEC63E07788D hw_loopback_info_type;
typedef struct _936597F541877A62AE01CB1244CDD3B4 hw_rollcall_info_type;
typedef struct _350BC2B23F9B41AFEB7D1AE3E404670A iceConnectionReplyMsg;
typedef struct _5C41C718BCBFD6CC2A68DF59D547D717 iceConnectionSetupMsg;
typedef struct _91D66C14A449B56AD19313465CE79FDB mgr_control_info_type;
typedef struct _18E6F3C9731C18C7E69FAD80F00FC2BA nsdiag_event_msg_type;
typedef struct _physical_descriptor_t physical_descriptor_t;
typedef rpcbs_rmtcalllist *rpcbs_rmtcalllist_ptr;
typedef struct _372CF5BD720E919E3995237E376467E3 select_cartridge_type;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smDeletePropertiesMsg;
typedef struct _B8BE427FC8694D49638950F9AF5F05C2 smSaveYourselfDoneMsg;
typedef struct _F9484FC408161C65EE7F9E60DCC13373 sym_entry_header_type;
typedef struct _sym_module_entry_type sym_module_entry_type;
typedef struct _sym_widget_entry_type sym_widget_entry_type;
enum transfer_request_type {MAX_OVERLAP = 0x0,MAX_SPEED = 0x1,MUST_FHS = 0x2,MUST_INTR = 0x3,MUST_DMA = 0x4,};
typedef struct _2E22270806C47E05D9B4938893A6CA7A xAllocColorCellsReply;
typedef struct _73B4058B96DB787648F70BEB3765CE40 xAllocNamedColorReply;
typedef struct _A56827FA99728A529A1C213E34F0D83D xAllowDeviceEventsReq;
typedef struct _6C531080E0330861B126A2833D727845 xCreateGlyphCursorReq;
typedef struct _7286F01C0F25CC9697D9D7CFCD5C4B3B xDPMSGetTimeoutsReply;
typedef struct _53A84E5818A8BF56A6CBC41177A9FFE2 xGetMotionEventsReply;
typedef struct _31B9E7519FB4EBDB88DCDC42C7F248CE xHPDeviceMappingEvent;
typedef struct _75E873D448E8C803996EFA0EB2285D5F xHPGetExtEventMaskReq;
typedef struct _5A60C9F0480C450293B4087497D73F1D xHPGetServerModeReply;
typedef struct _811A37D7B033DDB34701FA374271E678 xHPGetWindowCursorReq;
typedef struct _9F409E83FC8000082C320A35EFC3B2CA xHPUngrabDeviceKeyReq;
typedef struct _37650F220AC0903949A382F68D80E2E0 xIntegerFeedbackState;
typedef struct _4DAB985EC804DF06DE833983110A4312 xPrintGetContextReply;
typedef struct _PrintQueryScreens xPrintQueryScreensReq;
typedef struct _PrintQueryVersion xPrintQueryVersionReq;
typedef struct _F96F2E029926CB4475F452724FD2C5B9 xPropStandardColormap;
typedef struct _6ECE5F7C46F37A2EF909042FBC6F3E21 xRecordFreeContextReq;
typedef struct _5E29C5FF94304EAD83140C47151323A4 xSetClipRectanglesReq;
typedef struct _0C1A989C237847E9E0FEF5D20B714342 xSetPointerMappingReq;
typedef struct _3C68DE36615A2A96935F4E8A62136411 xSetSelectionOwnerReq;
typedef struct _9D6FB564ED57422FFB268B9144C446E8 xTestInputActionEvent;
typedef struct _0F4B06D36BC906735A699C1D59FCE038 xTranslateCoordsReply;
typedef struct _272B86F1CC556AC2FE1FEA8F3F6F9065 xieCreateColorListReq;
typedef struct _D0F4880E5E163BC8F27E9DD5F5B3C82C xieDestroyPhotofloReq;
typedef struct _2017A4559BD8DFB36CC7B04C7F93BD32 xieDestroyPhotomapReq;
typedef struct _7B44642C0B26E972D25A29993171BE3B xieExecutePhotofloReq;
typedef struct _A139F5C23E4C0799A30BDE721D46880D xieExportAvailableEvn;
typedef struct _E32A7B8F021520E59B05D2002875B75A xieFloExportClientLUT;
typedef struct _55E5FD3CD940068B4EF67AAE284651A9 xieFloExportClientROI;
typedef struct _8EA7A0D2C6C155A9C144BE737FA9135D xieFloImportClientLUT;
typedef struct _2B0FE3CE97643252456137D89C9199E9 xieFloImportClientROI;
typedef struct _E0D258F3248B038EE90F289455DE9392 xieGetClientDataReply;
typedef struct _57A765EA942AE9D5162F8EADA05AB765 xieQueryPhotofloReply;
typedef struct _7632AA8F19CB8AF724198E208337AAF8 xieQueryPhotomapReply;
typedef struct _4CEA7C0856663FB37AE47FD9F99BB511 xieQueryTechniquesReq;
typedef struct _6BAE8AC6C2E6EF04B701C3F9CD3D4D29 xieTecColorAllocMatch;
typedef struct _xkbDeviceLedsWireDesc xkbDeviceLedsWireDesc;
typedef struct _xkbGetDeviceInfoReply xkbGetDeviceInfoReply;
typedef struct _xkbGetIndicatorMap xkbGetIndicatorMapReq;
typedef struct _xkbKTMapEntryWireDesc xkbKTMapEntryWireDesc;
typedef struct _xkbLogoDoodadWireDesc xkbLogoDoodadWireDesc;
typedef struct _xkbOverlayKeyWireDesc xkbOverlayKeyWireDesc;
typedef struct _xkbOverlayRowWireDesc xkbOverlayRowWireDesc;
typedef struct _xkbSetIndicatorMap xkbSetIndicatorMapReq;
typedef struct _xkbTextDoodadWireDesc xkbTextDoodadWireDesc;
typedef struct _B29B9FE84B7739E1FA46EBF1C4FF2A7F ApplicationShellPart;
typedef struct _CompositeClassRec *CompositeWidgetClass;
typedef int ( *IceHostBasedAuthProc)(char *);
enum MACRO_ALLOC_NOSFTMNT {ALLOC_NOSFTMNT = 0x1,};
enum MACRO_AUDIO_BEEP_OFF {AUDIO_BEEP_OFF = 0,AUDIO_BEEP_ON = 1,};
enum MACRO_AUDIO_SET_DATA {AUDIO_SET_DATA_FORMAT = 536887564,};
enum MACRO_AUDIO_TEST_INT {AUDIO_TEST_INT = 536887635,};
enum MACRO_AUTH_CAPBUFSIZ {AUTH_CAPBUFSIZ = 10240,AUTH_SEED_LOWER_LIM = 1,};
enum MACRO_AUTH_CLEARTEXT {AUTH_CLEARTEXT_SEG_CHARS = 8,AUTH_CIPHERTEXT_SEG_CHARS = 11,};
enum MACRO_BLK_DESCRIPTOR {BLK_DESCRIPTOR_LENGTH = 8,};
enum MACRO_CIO_BUFFER_NOT {CIO_BUFFER_NOT_ALIGNED = -26,};
enum MACRO_CIO_DA_ADDRESS {CIO_DA_ADDRESS_ILLEGAL = -5,};
enum MACRO_CIO_NO_MESSAGE {CIO_NO_MESSAGE_ERROR = -101,};
enum MACRO_CIO_NO_REQUEST {CIO_NO_REQUEST_BLOCK_RESOURCES = -17,};
enum MACRO_CIO_RTS_STATUS {CIO_RTS_STATUS_IDL = 0x0,CIO_RTS_STATUS_SWI = 0x1,CIO_RTS_STATUS_EOD = 0x2,CIO_RTS_STATUS_LCD = 0x3,CIO_RTS_STATUS_AES = 0x4,CIO_RTS_STATUS_ERT = 0x5,};
enum MACRO_CONV_BADBUFLEN {CONV_BADBUFLEN = -4,};
enum MACRO_CRERR_READONLY {CRERR_READONLY = -3,};
enum MACRO_CS80_EX_TO_NUN {CS80_EX_TO_NUN = -96,};
enum MACRO_ClipByChildren {ClipByChildren = 0,IncludeInferiors = 1,};
enum MACRO_CompositeIndex {CompositeIndex = 4,XmConstraintIndex = 5,};
enum MACRO_CopyFromParent {CopyFromParent = 0,};
enum MACRO_DAC_ASIO0_DMSB {DAC_ASIO0_DMSB = 1,DAC_ASIO0_IIR = 2,};
enum MACRO_DAC_ASIO0_FIFO {DAC_ASIO0_FIFO = 2,DAC_ASIO0_LCNTL = 3,DAC_ASIO0_MCNTL = 4,DAC_ASIO0_LSTAT = 5,DAC_ASIO0_MSTAT = 6,DAC_ASIO0_TELEBYTE = 7,};
enum MACRO_DIAG_BLOCKSIZE {DIAG_BLOCKSIZE = 1024,};
enum MACRO_DL_HP_INFO_ACK {DL_HP_INFO_ACK = 0xF5,};
enum MACRO_DL_HP_SET_BUSY {DL_HP_SET_BUSY_TO_REQ = 0xF1,};
enum MACRO_DL_HP_SET_SEND {DL_HP_SET_SEND_ACK_TO_REQ = 0xF0,};
enum MACRO_ELF32_FSZ_WORD {ELF32_FSZ_WORD = 4,};
enum MACRO_ELF64_FSZ_WORD {ELF64_FSZ_WORD = 4,ELF64_FSZ_SXWORD = 8,};
enum MACRO_FLOPPY_UNKNOWN {FLOPPY_UNKNOWN_M = 0,FLOPPY_FM = 1,FLOPPY_MFM = 2,};
enum MACRO_FSF_LARGEFILES {FSF_LARGEFILES = 0x2,FSF_LARGEUIDS = 0x4,FSF_KNOWN = 0x7,};
enum MACRO_FamilyInternet {FamilyInternet = 0,FamilyDECnet = 1,FamilyChaos = 2,};
enum MACRO_FollowKeyboard {FollowKeyboard = 3,};
enum MACRO_GPIO1_SOFTWARE {GPIO1_SOFTWARE_MODEL = 0x44,GPIO1_INTERFACE = 0x4404,};
enum MACRO_GRAPH_DIAG_ITE {GRAPH_DIAG_ITE = 0x1,};
enum MACRO_HID_SETDEFAULT {HID_SETDEFAULT = 0x20005014,HID_PROMPTMODE = 0x20005015,};
enum MACRO_HPIB_INTERFACE {HPIB_INTERFACE_TYPE = 9,HPIB_INTERFACE = 32,};
enum MACRO_HP_UX_OPT_FLAG {HP_UX_OPT_FLAG_INST = 0x1,};
enum MACRO_ICE_CONNECTION {ICE_CONNECTION_REPLY = 1,ICE_CONNECTION_ERROR = 2,ICE_PROTOCOL_REPLY = 3,ICE_PROTOCOL_ERROR = 4,};
enum MACRO_ICE_OUTBUFSIZE {ICE_OUTBUFSIZE = 1024,};
enum MACRO_ICMP_ECHOREPLY {ICMP_ECHOREPLY = 0,ICMP_UNREACH = 3,};
enum MACRO_IEEE8023_GROUP {IEEE8023_GROUP_ADDR = 0x1,IEEE8025_GROUP_NODE_ADDR = 0x80,};
enum MACRO_IFF_CANTCHANGE {IFF_CANTCHANGE = 18514,};
enum MACRO_INT_FAST16_MAX {INT_FAST16_MAX = 2147483647,};
enum MACRO_INT_FAST32_MAX {INT_FAST32_MAX = 2147483647,};
enum MACRO_INVALID_SEARCH {INVALID_SEARCH_KEY = -90,};
enum MACRO_IN_CLASSB_HOST {IN_CLASSB_HOST = 0xFFFF,IN_CLASSB_MAX = 0x10000,};
enum MACRO_IN_CLASSC_HOST {IN_CLASSC_HOST = 0xFF,};
enum MACRO_IN_CLASSD_HOST {IN_CLASSD_HOST = 0xFFFFFFF,};
enum MACRO_IN_LOOPBACKNET {IN_LOOPBACKNET = 127,};
enum MACRO_IOCONFIG_GROUP {IOCONFIG_GROUP = 3,IOCONFIG_OK = 0,};
enum MACRO_IO_CONDITIONAL {IO_CONDITIONAL = 0x0,IO_PREFETCHED = 0x40,IO_NO_SYNC = 0x10000,IO_SYNC_MEM = 0x20000,};
enum MACRO_IO_DIAGNOSTICS {IO_DIAGNOSTICS_SUBQ = 1,INT_SUBQ = 3,};
enum MACRO_IO_INTERLEAVED {IO_INTERLEAVED_DMA = 0x1,IO_NONINTERLEAVED_DMA = 0x2,IO_DEBUG_DMA = 0x4,LOWFAT_IO_NONINTERLEAVED_DMA = 0x8,IO_ATTR_COMPAT_10_OFF = 0x10,PHYSICAL = 0xFFFFFFFF,};
enum MACRO_IO_SYNC_FORDEV {IO_SYNC_FORDEV = 2,};
enum MACRO_IceCanContinue {IceCanContinue = 0,IceFatalToProtocol = 1,IceFatalToConnection = 2,IceBadMinor = 32768,IceBadState = 32769,IceBadLength = 32770,IceBadValue = 32771,};
enum MACRO_InputClassBits {InputClassBits = 0x3F,};
enum MACRO_KI_GETPRECTIME {KI_GETPRECTIME = 0,KI_SYSCALLS = 1,KI_ENQUEUE = 4,KI_QUEUESTART = 5,KI_QUEUEDONE = 6,KI_HARDCLOCK = 7,KI_CLOSEF = 8,KI_BRELSE = 9,KI_GETNEWBUF = 10,KI_MELCO_TRACE = 11,KI_SWTCH = 12,KI_RESUME = 14,};
enum MACRO_KI_STRSCHED_MP {KI_STRSCHED_MP = 581,};
enum MACRO_KI_STRSCHED_UP {KI_STRSCHED_UP = 582,};
enum MACRO_LE_AXIN_ENABLE {LE_AXIN_ENABLE_L2_FAILED = 2033,LE_AXIN_DISABLE_L3_FAILED = 2034,LE_AXIN_ENABLE_L2_FAILED2 = 2035,};
enum MACRO_LLIO_LOCK_STAT {LLIO_LOCK_STAT_ALREADY_SAFE = -68,};
enum MACRO_LLIO_NOT_BOUND {LLIO_NOT_BOUND = -17,};
enum MACRO_LLIO_NOT_READY {LLIO_NOT_READY = -29,};
enum MACRO_LLIO_POWERFAIL {LLIO_POWERFAIL_ABORTED = -2,};
enum MACRO_LLIO_READ_TERM {LLIO_READ_TERM_BY_BREAK = -55,};
enum MACRO_LLIO_READ_TIME {LLIO_READ_TIME_RETURNED = -54,};
enum MACRO_MAGNUS_1_SHORT {MAGNUS_1_SHORT = 0x26,DC9164 = 0x27,DC9200SL = 0x31,DC9210XL = 0x32,DC9200 = 0x34,DC9120XL = 0x35,DC9210SL = 0x36,DC9164XL = 0x37,DC9200XL = 0x40,QIC_139 = 0x41,P5_15 = 0xC1,P5_30 = 0xC2,P5_60 = 0xC3,P5_90 = 0xC4,};
enum MACRO_MAXHOSTNAMELEN {MAXHOSTNAMELEN = 64,};
enum MACRO_MAX_CACHE_LINE {MAX_CACHE_LINE_SIZE = 64,};
enum MACRO_MAX_CONCURRENT {MAX_CONCURRENT = 5000,};
enum MACRO_MESSAGE_PARITY {MESSAGE_PARITY_ERROR_MSG = 0x9,};
enum MACRO_MESSAGE_REJECT {MESSAGE_REJECT_MSG = 0x7,NO_OPERATION_MSG = 0x8,HEAD_OF_QUEUE_TAG_MSG = 0x21,OREDERED_QUEUE_TAG_MSG = 0x22,};
enum MACRO_MIB_icmpMAXCTR {MIB_icmpMAXCTR = 26,ID_tcp = 393216,ID_tcpRtoAlgorithm = 393217,ID_tcpRtoMin = 393218,ID_tcpRtoMax = 393219,ID_tcpMaxConn = 393220,ID_tcpActiveOpens = 393221,ID_tcpPassiveOpens = 393222,ID_tcpAttemptFails = 393223,ID_tcpEstabResets = 393224,ID_tcpCurrEstab = 393225,ID_tcpInSegs = 393226,ID_tcpOutSegs = 393227,ID_tcpRetransSegs = 393228,ID_tcpInErrs = 393229,ID_tcpOutRsts = 393230,};
enum MACRO_MT_TRANSPARENT {MT_TRANSPARENT_MASK = 0x3F,};
enum MACRO_MappingSuccess {MappingSuccess = 0,MappingBusy = 1,MappingFailed = 2,};
enum MACRO_NIS_MAXCOLUMNS {NIS_MAXCOLUMNS = 64,NIS_MAXATTR = 16,};
enum MACRO_NO_INITIALIZER {NO_INITIALIZER = 0,SHL_D_UX10 = 1,};
enum MACRO_NUMPTSTOBUFFER {NUMPTSTOBUFFER = 200,};
enum MACRO_NoVisualChange {NoVisualChange = 0,VisualForeground = 1,VisualHighlightPixmap = 2,VisualHighlightColor = 4,VisualBottomShadowPixmap = 8,VisualBottomShadowColor = 16,VisualTopShadowPixmap = 32,VisualTopShadowColor = 64,VisualBackgroundPixel = 128,VisualBackgroundPixmap = 256,VisualSelectColor = 512,};
enum MACRO_NotifyAncestor {NotifyAncestor = 0,NotifyVirtual = 1,NotifyInferior = 2,NotifyNonlinear = 3,NotifyNonlinearVirtual = 4,NotifyPointer = 5,NotifyPointerRoot = 6,NotifyDetailNone = 7,};
enum MACRO_PDE2_0_INVALID {PDE2_0_INVALID = 1,PDE2_0_VALID = 0,};
enum MACRO_PDE2_0_VTAG_LO {PDE2_0_VTAG_LO = 4,PDE2_0_PROT = 8,};
enum MACRO_PDE_AR_TRANSIT {PDE_AR_TRANSIT = 0x72,PIDMASK = 0xFFFE,PROTID_MASK = 0xFFFF,PROTID_RESTRICT = 0x80000000,};
enum MACRO_PDE_HASEXECUTE {PDE_HASEXECUTE = 0x20,PDE_HASWRITE = 0x10,};
enum MACRO_PRC_ERR_SELECT {PRC_ERR_SELECT = -4,};
enum MACRO_PS2_SETDEFAULT {PS2_SETDEFAULT = 0x20005014,PS2_PROMPTMODE = 0x20005015,};
enum MACRO_PTHREAD_CANCEL {PTHREAD_CANCEL_DISABLE = 0,PTHREAD_CANCEL_ENABLE = 1,};
enum MACRO_PTHREAD_CREATE {PTHREAD_CREATE_JOINABLE = 0xAB,};
enum MACRO_PixmapNoMemory {PixmapNoMemory = -3,};
enum MACRO_RS_BLOCK_VALID {RS_BLOCK_VALID_ERR = -116,};
enum MACRO_RecordMaxEvent {RecordMaxEvent = 127,};
enum MACRO_SHM_MIN_BUFFER {SHM_MIN_BUFFER_SPACE_new = 92160,};
enum MACRO_ST_DESTRUCTIVE {ST_DESTRUCTIVE = 0,ST_NON_DESTRUCTIVE = 1,ST_SPECIFIC = 2,};
enum MACRO_SYS___cnx_pmon {SYS___cnx_pmon_ctl = 511,};
enum MACRO_SYS_aio_cancel {SYS_aio_cancel = 436,SYS_AIO_SUSPEND = 437,};
enum MACRO_SYS_aio_read64 {SYS_aio_read64 = 496,SYS_AIO_WRITE64 = 497,};
enum MACRO_SYS_aio_return {SYS_aio_return = 435,SYS_AIO_CANCEL = 436,};
enum MACRO_SYS_fstatvfs64 {SYS_fstatvfs64 = 476,SYS_MSH_REGISTER = 477,};
enum MACRO_SYS_getaudproc {SYS_getaudproc = 242,SYS_SETAUDPROC = 243,};
enum MACRO_SYS_getcontext {SYS_getcontext = 357,SYS_SYSINFO = 358,};
enum MACRO_SYS_getsockopt {SYS_getsockopt = 280,SYS_LISTEN = 281,};
enum MACRO_SYS_ksem_close {SYS_ksem_close = 449,SYS_KSEM_POST = 450,};
enum MACRO_SYS_lwp_create {SYS_lwp_create = 389,SYS_LWP_TERMINATE = 390,};
enum MACRO_SYS_lwp_detach {SYS_lwp_detach = 420,SYS_MLOCK = 421,};
enum MACRO_SYS_lwp_resume {SYS_lwp_resume = 393,SYS_LWP_ABORT_SYSCALL = 395,};
enum MACRO_SYS_lwp_rwlock {SYS_lwp_rwlock_init = 454,SYS_LWP_RWLOCK_DESTROY = 455,};
enum MACRO_SYS_mq_getattr {SYS_mq_getattr = 446,SYS_KSEM_OPEN = 447,};
enum MACRO_SYS_mq_receive {SYS_mq_receive = 443,SYS_MQ_NOTIFY = 444,};
enum MACRO_SYS_mq_setattr {SYS_mq_setattr = 445,SYS_MQ_GETATTR = 446,};
enum MACRO_SYS_munlockall {SYS_munlockall = 424,SYS_SHM_OPEN = 425,};
enum MACRO_SYS_ogetaccess {SYS_ogetaccess = 249,SYS_FSCTL = 250,};
enum MACRO_SYS_proc_close {SYS_proc_close = 293,SYS_PROC_SEND = 294,};
enum MACRO_SYS_rmtprocess {SYS_rmtprocess = 183,SYS_DSKLESS_STATS = 184,};
enum MACRO_SYS_sendfile64 {SYS_sendfile64 = 481,SYS_SENDPATH64 = 482,};
enum MACRO_SYS_sendpath64 {SYS_sendpath64 = 482,SYS_MODLOAD = 483,};
enum MACRO_SYS_setaudproc {SYS_setaudproc = 243,SYS_GETEVENT = 244,};
enum MACRO_SYS_setcontext {SYS_setcontext = 380,SYS_SIGALTSTACK = 381,};
enum MACRO_SYS_setsockopt {SYS_setsockopt = 288,SYS_SHUTDOWN = 289,};
enum MACRO_SYS_shm_unlink {SYS_shm_unlink = 426,SYS_SIGQUEUE = 427,};
enum MACRO_SYS_sigcleanup {SYS_sigcleanup = 139,SYS_SETCORE = 140,};
enum MACRO_SYS_siginhibit {SYS_siginhibit = 491,SYS_SIGENABLE = 492,};
enum MACRO_SYS_sigpending {SYS_sigpending = 186,SYS_SIGSUSPEND = 187,};
enum MACRO_SYS_sigsetmask {SYS_sigsetmask = 110,SYS_SIGPAUSE = 111,};
enum MACRO_SYS_sigsuspend {SYS_sigsuspend = 187,SYS_SIGACTION = 188,};
enum MACRO_SYS_socketpair {SYS_socketpair = 291,SYS_PROC_OPEN = 292,};
enum MACRO_SYS_truncate64 {SYS_truncate64 = 370,SYS_ULIMIT64 = 371,};
enum MACRO_TRANSFER_READY {TRANSFER_READY = 0x0,TRANSFER_ERROR = 0x1,TRANSFER_WAIT = 0x2,};
enum MACRO_UNKNOWN_FORMAT {UNKNOWN_FORMAT = -1,};
enum MACRO_UNKNOWN_MEDIUM {UNKNOWN_MEDIUM = 0x0,DC300 = 0x2,};
enum MACRO_USB_HID_REPORT {USB_HID_REPORT_TYPE_INPUT = 0x1,USB_HID_REPORT_TYPE_OUTPUT = 0x2,USB_HID_REPORT_TYPE_FEATURE = 0x3,};
enum MACRO_VMTRACE_MALLOC {VMTRACE_MALLOC = 0,VMTRACE_FREE = 1,};
enum MACRO_WINDOWS_WINDOW {WINDOWS_WINDOW_CHAR_STOP = 0x2,WINDOW_MODE_TO_USER_CHAR = 0x3,NOTIFY_WHEN_CURRENT_CHAR = 0x19,};
enum MACRO_WindowObjIndex {WindowObjIndex = 2,};
enum MACRO_WithdrawnState {WithdrawnState = 0,NormalState = 1,IconicState = 3,};
enum MACRO_XIMPreeditArea {XIMPreeditArea = 0x1,XIMPreeditCallbacks = 0x2,XIMPreeditPosition = 0x4,XIMPreeditNothing = 0x8,XIMPreeditNone = 0x10,XIMStatusArea = 0x100,XIMStatusCallbacks = 0x200,XIMStatusNothing = 0x400,XIMStatusNone = 0x800,};
enum MACRO_XK_KP_Multiply {XK_KP_Multiply = 0xFFAA,XK_KP_Add = 0xFFAB,XK_KP_Separator = 0xFFAC,XK_KP_Subtract = 0xFFAD,XK_KP_Decimal = 0xFFAE,XK_KP_Divide = 0xFFAF,XK_KP_0 = 0xFFB0,XK_KP_1 = 0xFFB1,XK_KP_2 = 0xFFB2,XK_KP_3 = 0xFFB3,XK_KP_4 = 0xFFB4,XK_KP_5 = 0xFFB5,XK_KP_6 = 0xFFB6,XK_KP_7 = 0xFFB7,XK_KP_8 = 0xFFB8,XK_KP_9 = 0xFFB9,XK_F1 = 0xFFBE,XK_F2 = 0xFFBF,XK_F3 = 0xFFC0,XK_F4 = 0xFFC1,XK_F5 = 0xFFC2,XK_F6 = 0xFFC3,XK_F7 = 0xFFC4,XK_F8 = 0xFFC5,XK_F9 = 0xFFC6,XK_F10 = 0xFFC7,XK_F11 = 0xFFC8,};
enum MACRO_XK_Serbian_DZE {XK_Serbian_DZE = 0x6BF,XK_Cyrillic_yu = 0x6C0,XK_Cyrillic_a = 0x6C1,XK_Cyrillic_be = 0x6C2,XK_Cyrillic_tse = 0x6C3,XK_Cyrillic_de = 0x6C4,XK_Cyrillic_ie = 0x6C5,XK_Cyrillic_ef = 0x6C6,XK_Cyrillic_ghe = 0x6C7,XK_Cyrillic_ha = 0x6C8,XK_Cyrillic_i = 0x6C9,XK_Cyrillic_shorti = 0x6CA,XK_Cyrillic_ka = 0x6CB,XK_Cyrillic_el = 0x6CC,XK_Cyrillic_em = 0x6CD,XK_Cyrillic_en = 0x6CE,XK_Cyrillic_o = 0x6CF,XK_Cyrillic_pe = 0x6D0,XK_Cyrillic_ya = 0x6D1,XK_Cyrillic_er = 0x6D2,XK_Cyrillic_es = 0x6D3,XK_Cyrillic_te = 0x6D4,XK_Cyrillic_u = 0x6D5,XK_Cyrillic_zhe = 0x6D6,XK_Cyrillic_ve = 0x6D7,XK_Cyrillic_softsign = 0x6D8,XK_Cyrillic_yeru = 0x6D9,XK_Cyrillic_ze = 0x6DA,XK_Cyrillic_sha = 0x6DB,XK_Cyrillic_e = 0x6DC,XK_Cyrillic_shcha = 0x6DD,XK_Cyrillic_che = 0x6DE,XK_Cyrillic_hardsign = 0x6DF,XK_Cyrillic_YU = 0x6E0,XK_Cyrillic_A = 0x6E1,XK_Cyrillic_BE = 0x6E2,XK_Cyrillic_TSE = 0x6E3,XK_Cyrillic_DE = 0x6E4,XK_Cyrillic_IE = 0x6E5,XK_Cyrillic_EF = 0x6E6,XK_Cyrillic_GHE = 0x6E7,XK_Cyrillic_HA = 0x6E8,XK_Cyrillic_I = 0x6E9,XK_Cyrillic_SHORTI = 0x6EA,XK_Cyrillic_KA = 0x6EB,XK_Cyrillic_EL = 0x6EC,XK_Cyrillic_EM = 0x6ED,XK_Cyrillic_EN = 0x6EE,XK_Cyrillic_O = 0x6EF,XK_Cyrillic_PE = 0x6F0,XK_Cyrillic_YA = 0x6F1,XK_Cyrillic_ER = 0x6F2,XK_Cyrillic_ES = 0x6F3,XK_Cyrillic_TE = 0x6F4,XK_Cyrillic_U = 0x6F5,XK_Cyrillic_ZHE = 0x6F6,XK_Cyrillic_VE = 0x6F7,XK_Cyrillic_SOFTSIGN = 0x6F8,XK_Cyrillic_YERU = 0x6F9,XK_Cyrillic_ZE = 0x6FA,XK_Cyrillic_SHA = 0x6FB,XK_Cyrillic_E = 0x6FC,XK_Cyrillic_SHCHA = 0x6FD,XK_Cyrillic_CHE = 0x6FE,XK_Cyrillic_HARDSIGN = 0x6FF,XK_Greek_ALPHAaccent = 0x7A1,XK_Greek_EPSILONaccent = 0x7A2,XK_Greek_ETAaccent = 0x7A3,XK_Greek_IOTAaccent = 0x7A4,XK_Greek_IOTAdiaeresis = 0x7A5,XK_Greek_OMICRONaccent = 0x7A7,XK_Greek_UPSILONaccent = 0x7A8,XK_Greek_UPSILONdieresis = 0x7A9,XK_Greek_OMEGAaccent = 0x7AB,XK_Greek_accentdieresis = 0x7AE,XK_Greek_horizbar = 0x7AF,XK_Greek_alphaaccent = 0x7B1,XK_Greek_epsilonaccent = 0x7B2,XK_Greek_etaaccent = 0x7B3,XK_Greek_iotaaccent = 0x7B4,XK_Greek_iotadieresis = 0x7B5,XK_Greek_iotaaccentdieresis = 0x7B6,XK_Greek_omicronaccent = 0x7B7,XK_Greek_upsilonaccent = 0x7B8,XK_Greek_upsilondieresis = 0x7B9,XK_Greek_upsilonaccentdieresis = 0x7BA,XK_Greek_omegaaccent = 0x7BB,XK_Greek_ALPHA = 0x7C1,XK_Greek_BETA = 0x7C2,XK_Greek_GAMMA = 0x7C3,XK_Greek_DELTA = 0x7C4,XK_Greek_EPSILON = 0x7C5,XK_Greek_ZETA = 0x7C6,XK_Greek_ETA = 0x7C7,XK_Greek_THETA = 0x7C8,XK_Greek_IOTA = 0x7C9,XK_Greek_KAPPA = 0x7CA,XK_Greek_LAMDA = 0x7CB,};
enum MACRO_XK_Serbian_LJE {XK_Serbian_LJE = 0x6B9,XK_Cyrillic_NJE = 0x6BA,};
enum MACRO_XK_Serbian_NJE {XK_Serbian_NJE = 0x6BA,XK_Serbian_TSHE = 0x6BB,XK_Macedonia_KJE = 0x6BC,XK_Byelorussian_SHORTU = 0x6BE,XK_Cyrillic_DZHE = 0x6BF,};
enum MACRO_XK_Serbian_dze {XK_Serbian_dze = 0x6AF,XK_numerosign = 0x6B0,XK_Serbian_DJE = 0x6B1,XK_Macedonia_GJE = 0x6B2,XK_Cyrillic_IO = 0x6B3,XK_Ukrainian_IE = 0x6B4,};
enum MACRO_XK_Serbian_lje {XK_Serbian_lje = 0x6A9,XK_Cyrillic_nje = 0x6AA,};
enum MACRO_XK_Serbian_nje {XK_Serbian_nje = 0x6AA,XK_Serbian_tshe = 0x6AB,XK_Macedonia_kje = 0x6AC,XK_Byelorussian_shortu = 0x6AE,XK_Cyrillic_dzhe = 0x6AF,};
enum MACRO_XK_Ukranian_JE {XK_Ukranian_JE = 0x6B4,XK_Macedonia_DSE = 0x6B5,XK_Ukrainian_I = 0x6B6,};
enum MACRO_XK_Ukranian_YI {XK_Ukranian_YI = 0x6B7,XK_Cyrillic_JE = 0x6B8,};
enum MACRO_XK_Ukranian_yi {XK_Ukranian_yi = 0x6A7,XK_Cyrillic_je = 0x6A8,};
enum MACRO_XK_hebrew_beth {XK_hebrew_beth = 0xCE1,XK_hebrew_gimel = 0xCE2,};
enum MACRO_XK_hebrew_teth {XK_hebrew_teth = 0xCE8,XK_hebrew_yod = 0xCE9,XK_hebrew_finalkaph = 0xCEA,XK_hebrew_kaph = 0xCEB,XK_hebrew_lamed = 0xCEC,XK_hebrew_finalmem = 0xCED,XK_hebrew_mem = 0xCEE,XK_hebrew_finalnun = 0xCEF,XK_hebrew_nun = 0xCF0,XK_hebrew_samech = 0xCF1,};
enum MACRO_XK_hebrew_zadi {XK_hebrew_zadi = 0xCF6,XK_hebrew_qoph = 0xCF7,};
enum MACRO_XSyncCACounter {XSyncCACounter = 1,XSyncCAValueType = 2,XSyncCAValue = 4,XSyncCATestType = 8,XSyncCADelta = 16,XSyncCAEvents = 32,};
enum MACRO_XTestEXCLUSIVE {XTestEXCLUSIVE = 1,XTestPACKED_ACTIONS = 2,XTestPACKED_MOTION = 4,};
enum MACRO_X_CreateWindow {X_CreateWindow = 1,X_ChangeWindowAttributes = 2,X_GetWindowAttributes = 3,X_DestroyWindow = 4,X_DestroySubwindows = 5,X_ChangeSaveSet = 6,X_ReparentWindow = 7,X_MapWindow = 8,X_MapSubwindows = 9,X_UnmapWindow = 10,X_UnmapSubwindows = 11,X_ConfigureWindow = 12,X_CirculateWindow = 13,X_GetGeometry = 14,X_QueryTree = 15,X_InternAtom = 16,X_GetAtomName = 17,X_ChangeProperty = 18,X_DeleteProperty = 19,X_GetProperty = 20,X_ListProperties = 21,X_SetSelectionOwner = 22,X_GetSelectionOwner = 23,X_ConvertSelection = 24,X_SendEvent = 25,X_GrabPointer = 26,X_UngrabPointer = 27,X_GrabButton = 28,X_UngrabButton = 29,X_ChangeActivePointerGrab = 30,X_GrabKeyboard = 31,X_UngrabKeyboard = 32,X_GrabKey = 33,X_UngrabKey = 34,X_AllowEvents = 35,X_GrabServer = 36,X_UngrabServer = 37,X_QueryPointer = 38,X_GetMotionEvents = 39,X_TranslateCoords = 40,X_WarpPointer = 41,X_SetInputFocus = 42,X_GetInputFocus = 43,X_QueryKeymap = 44,X_OpenFont = 45,X_CloseFont = 46,X_QueryFont = 47,X_QueryTextExtents = 48,X_ListFonts = 49,X_ListFontsWithInfo = 50,X_SetFontPath = 51,X_GetFontPath = 52,X_CreatePixmap = 53,X_FreePixmap = 54,X_CreateGC = 55,X_ChangeGC = 56,X_CopyGC = 57,X_SetDashes = 58,X_SetClipRectangles = 59,X_FreeGC = 60,X_ClearArea = 61,X_CopyArea = 62,X_CopyPlane = 63,X_PolyPoint = 64,X_PolyLine = 65,X_PolySegment = 66,X_PolyRectangle = 67,X_PolyArc = 68,X_FillPoly = 69,X_PolyFillRectangle = 70,X_PolyFillArc = 71,X_PutImage = 72,X_GetImage = 73,X_PolyText8 = 74,X_PolyText16 = 75,X_ImageText8 = 76,X_ImageText16 = 77,X_CreateColormap = 78,X_FreeColormap = 79,X_CopyColormapAndFree = 80,X_InstallColormap = 81,X_UninstallColormap = 82,X_ListInstalledColormaps = 83,X_AllocColor = 84,X_AllocNamedColor = 85,X_AllocColorCells = 86,X_AllocColorPlanes = 87,X_FreeColors = 88,X_StoreColors = 89,X_StoreNamedColor = 90,X_QueryColors = 91,X_LookupColor = 92,X_CreateCursor = 93,X_CreateGlyphCursor = 94,X_FreeCursor = 95,X_RecolorCursor = 96,X_QueryBestSize = 97,X_QueryExtension = 98,X_ListExtensions = 99,X_ChangeKeyboardMapping = 100,X_GetKeyboardMapping = 101,X_ChangeKeyboardControl = 102,X_GetKeyboardControl = 103,X_Bell = 104,X_ChangePointerControl = 105,X_GetPointerControl = 106,X_SetScreenSaver = 107,X_GetScreenSaver = 108,X_ChangeHosts = 109,X_ListHosts = 110,X_SetAccessControl = 111,X_SetCloseDownMode = 112,X_KillClient = 113,X_RotateProperties = 114,X_ForceScreenSaver = 115,X_SetPointerMapping = 116,X_GetPointerMapping = 117,X_SetModifierMapping = 118,X_GetModifierMapping = 119,X_NoOperation = 127,};
enum MACRO_X_TestGetInput {X_TestGetInput = 2,X_TestStopInput = 3,X_TestReset = 4,X_TestQueryInputSize = 5,XTestMAX_ACTION_LIST_SIZE = 64,sz_xTestFakeInputReq = 72,};
enum MACRO_XkbGroup1Index {XkbGroup1Index = 0,XkbGroup2Index = 1,XkbGroup3Index = 2,XkbGroup4Index = 3,XkbAnyGroup = 254,XkbAllGroups = 255,};
enum MACRO_XkbMaxKbdGroup {XkbMaxKbdGroup = 3,XkbMaxMouseKeysBtn = 4,};
enum MACRO_XkbMaxKeyCount {XkbMaxKeyCount = 248,};
enum MACRO_XkbNoIndicator {XkbNoIndicator = 0xFF,};
enum MACRO_XkbSA_NoAction {XkbSA_NoAction = 0x0,XkbSA_SetMods = 0x1,XkbSA_LatchMods = 0x2,XkbSA_LockMods = 0x3,XkbSA_SetGroup = 0x4,XkbSA_LatchGroup = 0x5,XkbSA_LockGroup = 0x6,XkbSA_MovePtr = 0x7,XkbSA_PtrBtn = 0x8,XkbSA_LockPtrBtn = 0x9,XkbSA_SetPtrDflt = 0xA,XkbSA_ISOLock = 0xB,XkbSA_Terminate = 0xC,XkbSA_SwitchScreen = 0xD,XkbSA_SetControls = 0xE,XkbSA_LockControls = 0xF,XkbSA_ActionMessage = 0x10,XkbSA_RedirectKey = 0x11,XkbSA_DeviceBtn = 0x12,XkbSA_LockDeviceBtn = 0x13,XkbSA_DeviceValuator = 0x14,};
enum MACRO_XkmFileVersion {XkmFileVersion = 0,XkmSemanticsFile = 20,XkmLayoutFile = 21,XkmKeymapFile = 22,XkmGeometryFile = 23,XkmAlternateSymsFile = 24,};
enum MACRO_XmArrowBGIndex {XmArrowBGIndex = 3,};
enum MACRO_XmBOTTOM_RIGHT {XmBOTTOM_RIGHT = 0,};
enum MACRO_XmDIALOG_SAVVY {XmDIALOG_SAVVY_FORCE_ORIGIN = -1,};
enum MACRO_XmDialogSIndex {XmDialogSIndex = 9,};
enum MACRO_XmToggleBIndex {XmToggleBIndex = 6,};
enum MACRO_XmWMShellIndex {XmWMShellIndex = 6,};
enum MACRO_XpmColorFailed {XpmColorFailed = -4,};
enum MACRO_XpmFileInvalid {XpmFileInvalid = -2,};
enum MACRO_XpmReturnInfos {XpmReturnInfos = 256,XpmReturnPixels = 512,XpmExtensions = 1024,};
enum MACRO_XtSMDontChange {XtSMDontChange = 5,};
enum MACRO_YPPASSWDVERS_0 {YPPASSWDVERS = 1,};
enum MACRO_YPPUSH_BADARGS {YPPUSH_BADARGS = -7,};
enum MACRO_YPPUSH_REFUSED {YPPUSH_REFUSED = -14,};
enum MACRO__COLL_BACKWARD {_COLL_BACKWARD_MASK = 0x2,_COLL_NOSUBS_MASK = 0x4,_COLL_POSITION_MASK = 0x8,_COLL_COLLELEM_MASK = 0x10,};
enum MACRO__LFS_LARGEFILE {_LFS_LARGEFILE = 1,};
enum MACRO__POSIX2_C_BIND {_POSIX2_C_BIND = 1,};
enum MACRO__POSIX_MEMLOCK {_POSIX_MEMLOCK = 1,};
enum MACRO__POSIX_MESSAGE {_POSIX_MESSAGE_PASSING = 1,};
enum MACRO__POSIX_VERSION {_POSIX_VERSION = 199009,};
enum MACRO__XOPEN_VERSION {_XOPEN_VERSION = 4,_XOPEN_XPG4 = 1,};
enum MACRO___NSW_CONTINUE {__NSW_CONTINUE = 0,__NSW_RETURN = 1,};
enum MACRO___NSW_NOTFOUND {__NSW_NOTFOUND = 1,__NSW_UNAVAIL = 2,__NSW_TRYAGAIN = 3,__NSW_NODATA = 9,};
enum MACRO___PTHREAD_COND {__PTHREAD_COND_VALID = 0x26,__LWP_COND_VALID = 0x155B,};
enum MACRO__deviceFocusIn {_deviceFocusIn = 0,_deviceFocusOut = 1,};
enum MACRO_hpXK_Modelock1 {hpXK_Modelock1 = 0x1000FF48,hpXK_Modelock2 = 0x1000FF49,hpXK_Reset = 0x1000FF6C,hpXK_System = 0x1000FF6D,hpXK_User = 0x1000FF6E,};
enum MACRO_osfXK_NextMenu {osfXK_NextMenu = 0x1004FF5C,osfXK_NextMinor = 0x1004FFF5,};
enum MACRO_osfXK_PageDown {osfXK_PageDown = 0x1004FF42,};
enum MACRO_osfXK_PageLeft {osfXK_PageLeft = 0x1004FF40,osfXK_PageRight = 0x1004FF43,};
enum MACRO_osfXK_PrevMenu {osfXK_PrevMenu = 0x1004FF5B,};
enum MACRO_sym_k_callback {sym_k_callback_list = 8,sym_k_argument_list = 7,};
enum MACRO_sz_RECORDRANGE {sz_RECORDRANGE = 24,};
enum MACRO_sz_xGrabKeyReq {sz_xGrabKeyReq = 16,sz_xUngrabKeyReq = 12,};
enum MACRO_sz_xPolyArcReq {sz_xPolyArcReq = 12,};
enum MACRO_sz_xShmLinkReq {sz_xShmLinkReq = 12,SMT_MAGIC1 = 1397576753,};
enum MACRO_sz_xieAbortReq {sz_xieAbortReq = 12,sz_xiePhotofloDoneEvn = 32,};
enum MACRO_sz_xieAwaitReq {sz_xieAwaitReq = 12,};
enum MACRO_sz_xieFloIDErr {sz_xieFloIDErr = 32,};
enum MACRO_sz_xieFloPoint {sz_xieFloPoint = 20,sz_xieFloUnconstrain = 8,};
enum MACRO_sz_xkbAnyEvent {sz_xkbAnyEvent = 32,};
enum MACRO_sz_xkmFileInfo {sz_xkmFileInfo = 4,sz_xkmSectionInfo = 8,};
enum MACRO_xieNumProtoReq {xieNumProtoReq = 26,};
enum MACRO_xieValInactive {xieValInactive = 1,xieValActive = 2,xieValNonexistent = 3,};
typedef struct _9DF924EC08184381CE6BEC6133B35008 *ObjectClassExtension;
typedef struct _pci_bus_dep_func_tbl PCI_BUS_DEP_FUNC_TBL;
typedef struct _SessionShellClassRec SessionShellClassRec;
typedef struct _TransIntrCallbackRec *TransIntrCallbackPtr;
typedef struct _TransIntrCallbackRec TransIntrCallbackRec;
typedef struct _419D850E958B0F42F8B9D5E0BB3E2ED8 *TransientShellWidget;
typedef struct _EC82DAE7E0933F1930E390E980E1D42C *UilEnumSetDescDefPtr;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F VendorShellClassPart;
typedef struct _7215FCA21C9177221950E694BDF162F7 XBellFeedbackControl;
typedef struct _B55126CE33CB6542D7325DF23CE7DCCD XGraphicsExposeEvent;
typedef struct _47D21BE5BB287FEA72F9A52CF871A5C0 XRecordInterceptData;
typedef struct _96F7C024A0E76E12CD4B29EEA702F0F5 XSelectionClearEvent;
typedef struct _2FFD57BA50D73951380BC0AC0294DF96 XSetWindowAttributes;
typedef struct _9EBEE5732934E798190927254B0CA2D3 XStringFeedbackState;
typedef struct _BD577CFD808EB4E77A4E3752FBFBD993 XSyncAlarmAttributes;
typedef struct _DA4C8A7C662E901D031392A43A7446A0 XdbeScreenVisualInfo;
typedef struct _XkbComponentNames *XkbComponentNamesPtr;
typedef struct _XkbComponentNames XkbComponentNamesRec;
typedef struct _XkbRedirectKeyAction XkbRedirectKeyAction;
typedef struct _XmAccessColorDataRec XmAccessColorDataRec;
typedef struct _XmAccessTextualTraitRec *XmAccessTextualTrait;
typedef struct _XmAllProtocolsMgrRec XmAllProtocolsMgrRec;
typedef struct _XmCareVisualTraitRec XmCareVisualTraitRec;
typedef struct _XmClipWindowClassRec XmClipWindowClassRec;
typedef struct _XmCommandClassRec *XmCommandWidgetClass;
typedef struct _XmContainerClassPart XmContainerClassPart;
typedef struct _XmContainerItemTraitRec *XmContainerItemTrait;
typedef struct _XmDesktopClassRec *XmDesktopObjectClass;
typedef struct _XmDialogShellExtPart XmDialogShellExtPart;
typedef struct _XmDragMotionCallbackStruct *XmDragMotionCallback;
typedef struct _XmDropFinishCallbackStruct *XmDropFinishCallback;
typedef struct _XmDropSiteManagerRec XmDropSiteManagerRec;
typedef struct _XmDropSiteVisualsRec XmDropSiteVisualsRec;
typedef struct _XmDropTransferRec *XmDropTransferObject;
typedef struct _XmFocusMovedCallbackStruct *XmFocusMovedCallback;
typedef struct _XmFormConstraintPart XmFormConstraintPart;
typedef struct _XmFrameConstraintRec *XmFrameConstraintPtr;
typedef struct _XmFrameConstraintRec XmFrameConstraintRec;
typedef struct _XmGenericClassExtRec XmGenericClassExtRec;
typedef struct _3BE25E7CC08F2245A091500E0AFB6500 XmGeoColumnLayoutRec;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmGrabShellClassPart;
typedef struct _XmGrabShellWidgetRec XmGrabShellWidgetRec;
typedef struct _XmIconGadgetClassRec XmIconGadgetClassRec;
typedef struct _XmIconHeaderClassRec XmIconHeaderClassRec;
typedef struct _XmLabelGCacheObjPart XmLabelGCacheObjPart;
typedef struct _ABE13B6E6B6B6BFEE76F70FD1C3050FB XmListCallbackStruct;
typedef struct _XmMainWindowClassRec XmMainWindowClassRec;
typedef struct _441B4C0D047DF063F5C6816C3F022891 XmManagerClassExtRec;
typedef struct _XmManagerClassRec *XmManagerWidgetClass;
typedef struct _4D3DBF947D992ECBBC409CB8927D044E XmMenuShellClassPart;
typedef struct _XmMenuShellWidgetRec XmMenuShellWidgetRec;
typedef struct _XmMenuSystemTraitRec XmMenuSystemTraitRec;
typedef struct _XmMessageBoxClassRec XmMessageBoxClassRec;
typedef struct _XmNotebookConstraintPart *XmNotebookConstraint;
typedef struct _XmPrimitiveClassPart XmPrimitiveClassPart;
typedef struct _XmPrintShellClassRec XmPrintShellClassRec;
typedef struct _XmPushButtonClassRec XmPushButtonClassRec;
typedef struct _XmRowColumnClassPart XmRowColumnClassPart;
typedef struct _XmRowColumnWidgetRec XmRowColumnWidgetRec;
typedef struct _XmScreenClassPart *XmScreenClassPartPtr;
typedef struct _XmScrollBarClassPart XmScrollBarClassPart;
typedef struct _XmScrollFrameDataRec XmScrollFrameDataRec;
typedef struct _4B97BEF68D37596A26C9A4C9C2EFDF5A XmScrolledWindowPart;
typedef struct _XmSelectionBoxRec *XmSelectionBoxWidget;
typedef struct _XmSeparatorClassPart XmSeparatorClassPart;
typedef struct _XmSeparatorGadgetRec XmSeparatorGadgetRec;
typedef struct _XmSpecRenderTraitRec XmSpecRenderTraitRec;
typedef struct _XmSpinBoxClassRec *XmSpinBoxWidgetClass;
typedef struct _D2A436EA22C40B91455F5B9FAC22C559 XmTextContextDataRec;
typedef struct _XmTextFieldClassPart XmTextFieldClassPart;
typedef struct _XmToggleButtonGadgetRec *XmToggleButtonGadget;
typedef struct _XmToggleButtonRec *XmToggleButtonWidget;
typedef struct _73A71279A51BA5863B442246BC81936D XmVendorShellExtPart;
typedef struct _XtCheckpointTokenRec XtCheckpointTokenRec;
typedef struct _87D722ECD21497B94ED1D7223FEC05F4 XtDestroyHookDataRec;
typedef struct _447FC71AB694A71F5F8338F97A6324BE _IceConnectToYouInfo;
struct _XkbDeviceLedChanges {unsigned short led_class;unsigned short led_id;unsigned int defined;struct _XkbDeviceLedChanges *next;};
struct _XkbIndicatorChanges {unsigned int state_changes;unsigned int map_changes;};
typedef struct _B2D1347A7314B3F7BD8A6C26E40DE0B3 deviceKeyStateNotify;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_hw_reset_req_t;
typedef struct _67CA7CC32887388D86A8ADA32FEABADE dl_hp_ppa_info_t_obs;
typedef struct _00A32F37F5118E39F36657EE3717F2D7 dl_hp_set_p_to_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_trace_on_req_t;
typedef struct _2B984BA6A93DC72E5B9A509864FD0EBE dl_subs_unbind_req_t;
typedef struct _D90C9031D269F93C88B34E2B5464A64B do_unbind_reply_type;
typedef struct _30603793696FA81545BF79FFEAB12BD9 fcp_array_log_info_t;
struct fixup_request_record {unsigned int fixup_field;unsigned int subspace_offset;unsigned int symbol_index_one;unsigned int symbol_index_two;int fixup_constant;};
typedef struct _FDDC11B99A740F6C560F43496CC4347E gpio1_io_module_type;
typedef struct _936597F541877A62AE01CB1244CDD3B4 hw_descrip_info_type;
typedef struct _F06AD9A177A3544FA3D3B37EB204DD20 llio_std_header_type;
typedef struct pdc_pat_cell_range pdc_pat_cell_range_t;
typedef int pthread_rwlockattr_t;
typedef struct _A730944FA410AA8A66044A1D444ACA29 scsi_ctrl_reply_type;
typedef struct _F53B3C946FF73649061E5AD36C6E157D sense_cartridge_type;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smCloseConnectionMsg;
typedef struct _FD24C124EC918F75BF8194FC7995E204 smInteractRequestMsg;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smPropertiesReplyMsg;
typedef struct _sym_parent_list_type sym_parent_list_type;
typedef struct _sym_value_entry_type sym_value_entry_type;
struct system_default_flags {unsigned short fg_boot_authenticate;};
typedef struct _5C8C52F20E5837CD54FC695805FBC709 trace_kind_bits_type;
struct utmpx____exit_status {short __e_termination;short __e_exit;};
typedef struct _91B6CB490464A345E007449761AA48F2 xAllocColorPlanesReq;
typedef struct _F683121DA6B0B811B23B9D483FF7482A xConvertSelectionReq;
typedef struct _DA732864DAD897F0B587BCCAD8E078EE xDPMSGetVersionReply;
typedef struct _3B895FF4AB049C141C5F7C25E8036379 xDeviceResolutionCtl;
typedef struct _C16308A46254792F555119C61B977CA2 xGetDeviceControlReq;
typedef struct _76C432023C30A60D6F0CA03B71EF1A2A xGetDeviceFocusReply;
typedef struct _621D16500987A711CC39A0AD4484DBF8 xGetScreenSaverReply;
typedef struct _5763F2EC7349805D26B2ED34581CC2B6 xGrabDeviceButtonReq;
typedef struct _F1F59D4E10B5EBBB1C54F54D61116087 xHPDeviceKeymapEvent;
typedef struct _216E4BC742821D1F4E1C977B8BEA2F24 xHPGetClipListsReply;
typedef struct _EFD32AB26A9F2C4402B187171A2243FF xHPGetDeviceFocusReq;
typedef struct _2849ABCE19C747DF192BAEA83DFD9407 xHPRegisterWindowReq;
typedef struct _01A217455DF1EC91AD6266E2E71665FD xHPSetDeviceFocusReq;
typedef struct _62B00FE65DC591A743796E3E26F02346 xHPSetInputDeviceReq;
typedef struct _5E8F645B7662834A694E868B27EBBB24 xListExtensionsReply;
typedef struct _3BEEF239534EE9E2D4AD58999E56F197 xListInputDevicesReq;
typedef struct _C65DFB72B3FBEEE777E9E71274DF712D xListPropertiesReply;
typedef struct _xPrintAttributeEvent xPrintAttributeEvent;
typedef struct _PrintSelectInput xPrintSelectInputReq;
typedef struct _8973D72E68A3D7427BDE924AB847E810 xQueryDeviceStateReq;
typedef struct _C32D75228195D08F6D42072DC87ED14F xQueryExtensionReply;
typedef struct _F21D8018CF145B47A329D27C35E96B99 xQueryTextExtentsReq;
typedef struct _6ECE5F7C46F37A2EF909042FBC6F3E21 xRecordGetContextReq;
typedef struct _F8536B884003ADBD90188302B8AD267C xRotatePropertiesReq;
typedef struct _5D605798B949FE2847BA0CD5F658BE18 xStringFeedbackState;
typedef struct _58964FFE81FF7A5F550F9B44561E3FD1 xieCreatePhotofloReq;
typedef struct _2017A4559BD8DFB36CC7B04C7F93BD32 xieCreatePhotomapReq;
typedef struct _04BE85DF42EB3710F3E3DA7E472F659C xieFloConvertFromRGB;
typedef struct _C1D1DCE5A0B9F389C9FAA487FACA5708 xieFloConvertToIndex;
typedef struct _6971C49ED543898CFDE2AB3CD1189B70 xieFloExportDrawable;
typedef struct _BA021C9E98B12E79B733DF8F1A0CE5B1 xieFloExportPhotomap;
typedef struct _C501B637C9D373C8193961C468F52341 xieFloImportDrawable;
typedef struct _2B4C97E383E567F029CDA6243F5AAF9B xieFloImportPhotomap;
typedef struct _2BF13069EBDEE5493612AD0930AE3BF3 xieFloMatchHistogram;
typedef struct _7E67FD4F3DB69CB7DBA92A468D15DC0A xieImportObscuredEvn;
typedef struct _61ABC0BA638790D6FE8B525E20E3EE79 xieModifyPhotofloReq;
typedef struct _272B86F1CC556AC2FE1FEA8F3F6F9065 xiePurgeColorListReq;
typedef struct _272B86F1CC556AC2FE1FEA8F3F6F9065 xieQueryColorListReq;
typedef struct _xkbAnyDoodadWireDesc xkbAnyDoodadWireDesc;
typedef struct _xkbGetCompatMapReply xkbGetCompatMapReply;
typedef struct _xkbGetKbdByNameReply xkbGetKbdByNameReply;
typedef struct _xkbLatchLockState xkbLatchLockStateReq;
typedef struct _xkbListComponents xkbListComponentsReq;
typedef struct _xkbNewKeyboardNotify xkbNewKeyboardNotify;
typedef struct _xkbPerClientFlags xkbPerClientFlagsReq;
typedef struct _xkbUseExtensionReply xkbUseExtensionReply;
typedef struct _CFC98DDC8C48D7D4D5B40C9CE62D3BBC ApplicationShellRec;
typedef struct _ConstraintClassPart ConstraintClassPart;
typedef struct _07CF3C5657E15CE751200314299C128D ICPreeditAttributes;
enum MACRO_AMG_BLOCKSIZE {AMG_BLOCKSIZE = 32,CENT_BLOCKSIZE = 64,MERC_BLOCKSIZE = 8192,};
enum MACRO_AMG_DM_DEVICE {AMG_DM_DEVICE_ADAPTER_FAILURE = -22,};
enum MACRO_AMG_DM_PLATEN {AMG_DM_PLATEN_OPEN = -4,};
enum MACRO_AMG_DM_RIBBON {AMG_DM_RIBBON_FAIL = -5,};
enum MACRO_AMG_DM_STATUS {AMG_DM_STATUS_INVALID = -21,};
enum MACRO_AMG_DM_SYSTEM {AMG_DM_SYSTEM_POWERFAIL = -27,};
enum MACRO_ASYNC_PRIVATE {ASYNC_PRIVATE_MEMORY = 0x1,ASYNC_LARGE_REQS = 0x2,};
enum MACRO_AUDIO_CHANNEL {AUDIO_CHANNEL_0 = 0x1,AUDIO_CHANNEL_1 = 0x2,};
enum MACRO_AUDIO_MAX_REG {AUDIO_MAX_REG = 10,AUDIO_REG_DIAG = 15,};
enum MACRO_AUDIO_RECEIVE {AUDIO_RECEIVE = 0x1,AUDIO_TRANSMIT = 0x2,AUDIO_CONF_PAD = 0x7E,};
enum MACRO_AUTH_DEV_TYPE {AUTH_DEV_TYPE_SIZE = 1,};
enum MACRO_BitmapSuccess {BitmapSuccess = 0,BitmapOpenFailed = 1,BitmapFileInvalid = 2,BitmapNoMemory = 3,};
enum MACRO_CIO_BIND_PROC {CIO_BIND_PROC = 17,CIO_TIMER_PROC = 33,CIO_ABORT_PROC = 34,CIO_INIT_CA_PROC = 65,CIO_BUILD_SUBCH_PROC = 98,CIO_BUILD_LOGCH_PROC = 99,CIO_IO_DMA_PROC = 100,CIO_START_SUBCH_PROC = 101,CIO_START_LOGCH_PROC = 102,CIO_IO_CMPLT_PROC = 128,CIO_AEK_DA_PROC = 160,CIO_BUILD_SEND_PROC = 192,};
enum MACRO_CIO_INTERRUPT {CIO_INTERRUPT_TAG = 1,CIO_META_TAG = 2,HPIB_META_TAG = 3,DM_META_TAG = 4,MUX_DAM_META_TAG = 5,ALINK_DAM_META_TAG = 6,PSI_DAM_META_TAG = 7,GPIO_META_TAG = 8,GRAPH_META_TAG = 9,SCSI_META_TAG = 10,DISPLAY0_META_TAG = 11,ITE_META_TAG = 12,HIL_META_TAG = 13,FRAMEBUF_META_TAG = 14,HILKBD_META_TAG = 15,FL_META_TAG = 16,LAN_META_TAG = 17,LASI_META_TAG = 18,};
enum MACRO_CIO_MERR_DATA {CIO_MERR_DATA_CODE = -85,};
enum MACRO_CIO_NO_STATUS {CIO_NO_STATUS_BLOCK_RESOURCES = -16,};
enum MACRO_CIO_UNSTARTED {CIO_UNSTARTED_ABORT = -38,};
enum MACRO_CMDspace_file {CMDspace_file = 0x1,CMDspace_eod = 0x3,CMDspace_setmark = 0x4,CMDspace_seq_setmark = 0x5,};
enum MACRO_CNX_MACH_SPP1 {CNX_MACH_SPP1 = 1,CNX_MACH_SPP2 = 2,};
enum MACRO_CONV_BADCKSUM {CONV_BADCKSUM = -3,};
enum MACRO_COUTBAUDSHIFT {COUTBAUDSHIFT = 0,CINBAUDSHIFT = 24,CIBAUD = 520093696,};
enum MACRO_CPR_DM_PLATEN {CPR_DM_PLATEN_OPEN = -4,};
enum MACRO_CPR_DM_RIBBON {CPR_DM_RIBBON_FAIL = -5,};
enum MACRO_CPS_DIFFERENT {CPS_DIFFERENT_NODE = -3,};
enum MACRO_ClipboardFail {ClipboardFail = 0,ClipboardSuccess = 1,ClipboardTruncate = 2,ClipboardLocked = 4,ClipboardBadFormat = 5,ClipboardNoData = 6,};
enum MACRO_DAM_DM_NORMAL {DAM_DM_NORMAL = 0,DAM_DM_PF = 1,DA_CARD_ID = 2,MAX_IDY_LENGTH = 9,DAM_INIT_VQUADS = 19,LENGTH_OF_LOOPBACK_TEST = 64,};
enum MACRO_DAM_REQ_TABLE {DAM_REQ_TABLE_ERR = -113,};
enum MACRO_DA_DAP_LENGTH {DA_DAP_LENGTH_EXCEEDED = -46,};
enum MACRO_DEFAULT_ROUND {DEFAULT_ROUND_MARK_RADIUS = 3,THERMO_MARK_OFFSET = 10,};
enum MACRO_DEFAULT_WIDTH {DEFAULT_WIDTH = 20,RESOURCE_DEFAULT = -1,};
enum MACRO_DIAG_CHECKSUM {DIAG_CHECKSUM_ERROR = -65,};
enum MACRO_DL_HP_PPA_ACK {DL_HP_PPA_ACK_OBS = 0xFD,};
enum MACRO_DL_HP_PPA_REQ {DL_HP_PPA_REQ_OBS = 0xFE,};
enum MACRO_DL_HP_SET_ACK {DL_HP_SET_ACK_THRESH_REQ = 0xEE,};
enum MACRO_DL_HP_SET_MAX {DL_HP_SET_MAX_RETRIES_REQ = 0xEF,};
enum MACRO_DL_HP_SET_REJ {DL_HP_SET_REJ_TO_REQ = 0xF2,};
enum MACRO_DL_UNATTACHED {DL_UNATTACHED = 0x4,DL_ATTACH_PENDING = 0x5,DL_DETACH_PENDING = 0x6,};
enum MACRO_DMA_HINTS_MAX {DMA_HINTS_MAX_PREFETCH = 3,};
enum MACRO_DMA_SIZE_WORD {DMA_SIZE_WORD = 0x4,DMA_SIZE_DWORD = 0x8,DMA_TIMING_MASK = 0x30,};
enum MACRO_DMEM_RESERVED {DMEM_RESERVED = 1,DMEM_AVAILABLE = 2,DMEM_BUSY = 3,DMEM_HOLE = 4,DMEM_REMOVED = 5,MAX_DMEM_LOG = 32,MAX_PDT_ENTRIES = 250,};
enum MACRO_DXK_diaeresis {DXK_diaeresis = 0x1000FE22,DXK_Remove = 0x1000FF00,};
enum MACRO_DisableAccess {DisableAccess = 0,};
enum MACRO_DontCareState {DontCareState = 0,ZoomState = 2,InactiveState = 4,XNoMemory = -1,};
enum MACRO_EEPROM_ENABLE {EEPROM_ENABLE = 0xFF,EEPROM_DISABLE = 0x0,};
enum MACRO_ELFABIVERSION {ELFABIVERSION_HPUX_CURRENT = 1,ET_HP_IFILE = 65024,SHF_HP_TLS = 16777216,SHF_HP_NEAR_SHARED = 33554432,SHF_HP_FAR_SHARED = 67108864,SHF_HP_COMDAT = 134217728,};
enum MACRO_ELFOSABI_SYSV {ELFOSABI_SYSV = 0,SHF_COMDAT_DEPR = 8,SHT_COMDAT_DEPR = 12,DT_FINISZ_DEPR = 1879048193,};
enum MACRO_ETHERTYPE_PUP {ETHERTYPE_PUP = 0x200,ETHERTYPE_IP = 0x800,ETHERTYPE_ARP = 0x806,ETHERTYPE_HP = 0x8005,ETHERTYPE_APPLETALK = 0x809B,ETHERTYPE_AARP = 0x80F3,};
enum MACRO_FE_TOWARDZERO {FE_TOWARDZERO = 512,};
enum MACRO_FORMAT8mm8200 {FORMAT8mm8200 = 20,FORMAT8mm8200c = 144,};
enum MACRO_FORMAT8mm8500 {FORMAT8mm8500 = 21,FORMAT8mm8500c = 140,};
enum MACRO_FamilyNetname {FamilyNetname = 254,};
enum MACRO_ForgetGravity {ForgetGravity = 0,NorthWestGravity = 1,NorthGravity = 2,NorthEastGravity = 3,WestGravity = 4,CenterGravity = 5,EastGravity = 6,SouthWestGravity = 7,SouthGravity = 8,SouthEastGravity = 9,StaticGravity = 10,};
enum MACRO_GCCONFIG_VISX {GCCONFIG_VISX_GA_PRESENT = 0x4,GCCONFIG_VISX_TM_PRESENT = 0x8,GCCONFIG_VISX_IMAGING_PRESENT = 0x10,GCCONFIG_VISX_VIDEO_OUT_PRESENT = 0x20,GCCONFIG_VISX_VIDEO_OUT_HEADMOUNT_PRESENT = 0x40,GCCONFIG_VISX_ZBUFFER_PRESENT = 0x80,GCCONFIG_VISX_ALPHA_PRESENT = 0x100,GCCONFIG_VISX_ACCUMULATION_PRESENT = 0x200,GCCONFIG_VISX_DIGITAL_VIDEO_PRESENT = 0x400,GCCONFIG_VISX_AUXILARY_PRESENT = 0x800,GCCONFIG_VISX_MPEG_PRESENT = 0x1000,GCCONFIG_VISX_EXTERNAL_ACCELERATION_PRESENT = 0x2000,};
enum MACRO_GLOBAL_WINDOW {GLOBAL_WINDOW_ID = 0,};
enum MACRO_HASH_FUNCTION {HASH_FUNCTION_VERSION = 1,SYMTAB_DEFAULT_SIZE = 1103,};
enum MACRO_ICE_INBUFSIZE {ICE_INBUFSIZE = 1024,};
enum MACRO_ICMP_REDIRECT {ICMP_REDIRECT_NET = 0,ICMP_REDIRECT_HOST = 1,ICMP_REDIRECT_TOSNET = 2,ICMP_REDIRECT_TOSHOST = 3,ICMP_ECHO = 8,ICMP_TIMXCEED = 11,};
enum MACRO_ICMP_TIMXCEED {ICMP_TIMXCEED_INTRANS = 0,ICMP_TIMXCEED_REASS = 1,ICMP_PARAMPROB = 12,ICMP_TSTAMP = 13,ICMP_TSTAMPREPLY = 14,ICMP_IREQ = 15,ICMP_IREQREPLY = 16,ICMP_MASKREQ = 17,ICMP_MASKREPLY = 18,};
enum MACRO_INIT_COMPLETE {INIT_COMPLETE = 0,DAM_LOCK = 3,};
enum MACRO_INTR_PARALLEL {INTR_PARALLEL_BUSY = 0x1000,INTR_PARALLEL_ERROR = 0x400,INTR_PARALLEL_SELECT = 0x200,INTR_PARALLEL_PERROR = 0x100,};
enum MACRO_INT_FAST8_MAX {INT_FAST8_MAX = 2147483647,};
enum MACRO_INVALID_SPACE {INVALID_SPACE_ENTRY = 0xFFFFFFFF,INVALID_OFFSET_PAGE_ENTRY = 0x0,};
enum MACRO_IN_CLASSA_MAX {IN_CLASSA_MAX = 128,};
enum MACRO_IOCONFIG_MODE {IOCONFIG_MODE = 436,IOCONFIG_OWNER = 0,};
enum MACRO_IOCONFIG_READ {IOCONFIG_READ = 0,IOCONFIG_RDWR = 258,};
enum MACRO_IPPROTO_ENCAP {IPPROTO_ENCAP = 4,IPPROTO_TCP = 6,IPPROTO_EGP = 8,IPPROTO_IGP = 9,IPPROTO_PUP = 12,IPPROTO_UDP = 17,IPPROTO_IDP = 22,IPPROTO_XTP = 36,IPPROTO_OSPF = 89,IPPROTO_PXP = 241,IPPROTO_RAW = 255,IPPROTO_MAX = 256,IPPORT_RESERVED = 1024,IPPORT_USERRESERVED = 5000,};
enum MACRO_IceProtoMajor {IceProtoMajor = 1,};
enum MACRO_IceProtoMinor {IceProtoMinor = 0,};
enum MACRO_KERNELIOSPACE {KERNELIOSPACE = 0,};
enum MACRO_KI_DCEPTHREAD {KI_DCEPTHREAD = 577,};
enum MACRO_KI_STATDAEMON {KI_STATDAEMON = 596,};
enum MACRO_KI_SYNCDAEMON {KI_SYNCDAEMON = 593,};
enum MACRO_LASI_SVERSION {LASI_SVERSION_MODEL = 0x81,};
enum MACRO_LLIO_BAD_FUNC {LLIO_BAD_FUNC_CODE = -47,};
enum MACRO_LLIO_BIND_BAD {LLIO_BIND_BAD_META = -9,};
enum MACRO_LLIO_DOWNLOAD {LLIO_DOWNLOAD_FAIL = -61,};
enum MACRO_LLIO_INTERNAL {LLIO_INTERNAL_ERROR = -56,};
enum MACRO_LLIO_MOST_NEG {LLIO_MOST_NEG_STAT = -81,};
enum MACRO_LLIO_NO_WRITE {LLIO_NO_WRITE_ACCESS = -32,};
enum MACRO_LLIO_PROTOCOL {LLIO_PROTOCOL_ERROR = -42,};
enum MACRO_LLIO_RECEIVER {LLIO_RECEIVER_OVERRUN = -51,};
enum MACRO_MAXBUCKETSAVE {MAXBUCKETSAVE = 12,};
enum MACRO_MAXCOMPONENTS {MAXCOMPONENTS = 512,BLOCKSIZE = 1024,};
enum MACRO_MAXMAPNAMELEN {MAXMAPNAMELEN = 255,MAXYPDATALEN = 1023,};
enum MACRO_MAXNETNAMELEN {MAXNETNAMELEN = 255,};
enum MACRO_MAX_INSTANCES {MAX_INSTANCES_PER_CLASS = 256,};
enum MACRO_MAX_PAIRCOUNT {MAX_PAIRCOUNT = 900,};
enum MACRO_MERC_DM_POWER {MERC_DM_POWER_FAIL = -16,};
enum MACRO_MIB_tcpMAXCTR {MIB_tcpMAXCTR = 14,ID_tcpConnNumEnt = 394241,ID_tcpConnTable = 394242,ID_tcpConnEntry = 394243,ID_udp = 458752,ID_udpInDatagrams = 458753,ID_udpNoPorts = 458754,ID_udpInErrors = 458755,ID_udpOutDatagrams = 458756,};
enum MACRO_MIB_udpMAXCTR {MIB_udpMAXCTR = 4,ID_dot3 = 655367,ID_dot5 = 655369,};
enum MACRO_ModeBitsShift {ModeBitsShift = 6,numInputClasses = 7,IEVENTS = 15,};
enum MACRO_NETDIAG_EMPTY {NETDIAG_EMPTY = 0,NETDIAG_OK = 1,NETDIAG_STOP = -1,};
enum MACRO_NULL_CHAINPTR {NULL_CHAINPTR = -8,};
enum MACRO_OLD_ACLUNUSED {OLD_ACLUNUSED = 65501,ACL_DELOPT = -1,};
enum MACRO_PAM_AUTHTOKEN {PAM_AUTHTOKEN_REQD = 10,PAM_CRED_INSUFFICIENT = 11,PAM_AUTHINFO_UNAVAIL = 12,PAM_USER_UNKNOWN = 13,PAM_CRED_UNAVAIL = 14,PAM_CRED_EXPIRED = 15,PAM_CRED_ERR = 16,PAM_ACCT_EXPIRED = 17,PAM_AUTHTOK_EXPIRED = 18,PAM_SESSION_ERR = 19,PAM_AUTHTOK_ERR = 20,PAM_AUTHTOK_RECOVERY_ERR = 21,PAM_AUTHTOK_LOCK_BUSY = 22,PAM_AUTHTOK_DISABLE_AGING = 23,PAM_NO_MODULE_DATA = 24,PAM_IGNORE = 25,PAM_ABORT = 26,PAM_TRY_AGAIN = 27,};
enum MACRO_PRC_CONN_DONE {PRC_CONN_DONE = 6,PRC_CONN_NO_IPS = 135,PRC_CONN_FAILED = 136,PRC_CONN_REFUSED = 137,PRC_CONN_TIMEOUT = 138,};
enum MACRO_PTHREAD_64BIT {PTHREAD_64BIT_APP_NP = 0x1000000,PTHREAD_32BIT_APP_NP = 0x2000000,};
enum MACRO_PTHREAD_CHILD {PTHREAD_CHILD_NP = 2,PTHREAD_EXIT_NP = 3,};
enum MACRO_PTHREAD_COUNT {PTHREAD_COUNT_RESUME_NP = 0x1,PTHREAD_FORCE_RESUME_NP = 0x2,};
enum MACRO_PTHREAD_MUTEX {PTHREAD_MUTEX_SPINDEFAULT_NP = 0,PTHREAD_MUTEX_SPINONLY_NP = -1,};
enum MACRO_PTHREAD_SCOPE {PTHREAD_SCOPE_SYSTEM = 0x1,PTHREAD_SCOPE_PROCESS = 0x2,PTHREAD_INHERIT_SCHED = 0x10,PTHREAD_EXPLICIT_SCHED = 0x20,};
enum MACRO_PTHREAD_STACK {PTHREAD_STACK_UP_NP = 0x10000000,PTHREAD_STACK_DOWN_NP = 0x20000000,};
enum MACRO_PixmapSuccess {PixmapSuccess = 0,PixmapOpenFailed = -1,};
enum MACRO_PointerWindow {PointerWindow = 0,InputFocus = 1,};
enum MACRO_QueuedAlready {QueuedAlready = 0,QueuedAfterReading = 1,QueuedAfterFlush = 2,};
enum MACRO_RECORD_LOWEST {RECORD_LOWEST_MAJOR_VERSION = 1,RECORD_LOWEST_MINOR_VERSION = 12,};
enum MACRO_SEND_SELFTEST {SEND_SELFTEST = 1,CHECK_SELFTEST = 2,GET_DA_TYPE = 3,SEND_READ_IDY = 5,SEND_DA_INIT = 6,};
enum MACRO_SYS_aio_error {SYS_aio_error = 434,SYS_AIO_RETURN = 435,};
enum MACRO_SYS_aio_fsync {SYS_aio_fsync = 438,SYS_MQ_OPEN = 439,};
enum MACRO_SYS_aio_write {SYS_aio_write = 432,SYS_LIO_LISTIO = 433,};
enum MACRO_SYS_audswitch {SYS_audswitch = 247,SYS_AUDCTL = 248,};
enum MACRO_SYS_crashconf {SYS_crashconf = 490,SYS_SIGINHIBIT = 491,};
enum MACRO_SYS_fpathconf {SYS_fpathconf = 231,SYS_NFS_FCNTL = 234,};
enum MACRO_SYS_ftruncate {SYS_ftruncate = 130,SYS_SYSCONF = 132,};
enum MACRO_SYS_getaccess {SYS_getaccess = 408,SYS_LWP_MUTEX_INIT = 409,};
enum MACRO_SYS_getgroups {SYS_getgroups = 79,SYS_SETGROUPS = 80,};
enum MACRO_SYS_getitimer {SYS_getitimer = 86,SYS_DUP2 = 90,};
enum MACRO_SYS_getnumfds {SYS_getnumfds = 268,SYS_POLL = 269,};
enum MACRO_SYS_getrlimit {SYS_getrlimit = 144,SYS_SETRLIMIT = 145,};
enum MACRO_SYS_getrusage {SYS_getrusage = 117,SYS_READV = 120,};
enum MACRO_SYS_ksem_post {SYS_ksem_post = 450,SYS_KSEM_WAIT = 451,};
enum MACRO_SYS_ksem_read {SYS_ksem_read = 452,SYS_KSEM_TRYWAIT = 453,};
enum MACRO_SYS_ksem_wait {SYS_ksem_wait = 451,SYS_KSEM_READ = 452,};
enum MACRO_SYS_lf_unused {SYS_lf_unused = 469,SYS_LWP_SEMA_INIT = 470,};
enum MACRO_SYS_lf_unwire {SYS_lf_unwire_mem = 464,SYS_LF_SEND_PIN_MAP = 465,};
enum MACRO_SYS_lf_wakeup {SYS_lf_wakeup_conn_q = 468,SYS_LF_UNUSED = 469,};
enum MACRO_SYS_lwp_abort {SYS_lwp_abort_syscall = 395,SYS_LWP_INFO = 396,};
enum MACRO_SYS_lwp_mutex {SYS_lwp_mutex_init = 409,SYS_LWP_MUTEX_LOCK_SYS = 410,};
enum MACRO_SYS_mq_notify {SYS_mq_notify = 444,SYS_MQ_SETATTR = 445,};
enum MACRO_SYS_mq_unlink {SYS_mq_unlink = 441,SYS_MQ_SEND = 442,};
enum MACRO_SYS_nanosleep {SYS_nanosleep = 353,SYS_TOOLBOX = 354,};
enum MACRO_SYS_nfs_kstat {SYS_nfs_kstat = 495,SYS_AIO_READ64 = 496,};
enum MACRO_SYS_proc_recv {SYS_proc_recv = 295,SYS_PROC_SENDRECV = 296,};
enum MACRO_SYS_proc_send {SYS_proc_send = 294,SYS_PROC_RECV = 295,};
enum MACRO_SYS_pwritev64 {SYS_pwritev64 = 379,SYS_SETCONTEXT = 380,};
enum MACRO_SYS_recvfrom2 {SYS_recvfrom2 = 505,SYS_SEND2 = 506,};
enum MACRO_SYS_sched_get {SYS_sched_get_priority_max = 342,SYS_SCHED_GET_PRIORITY_MIN = 343,};
enum MACRO_SYS_serialize {SYS_serialize = 329,SYS_STATVFS = 330,};
enum MACRO_SYS_setgroups {SYS_setgroups = 80,SYS_GETPGRP2 = 81,};
enum MACRO_SYS_setitimer {SYS_setitimer = 83,SYS_WAIT3 = 84,};
enum MACRO_SYS_setresgid {SYS_setresgid = 127,SYS_RENAME = 128,};
enum MACRO_SYS_setresuid {SYS_setresuid = 126,SYS_SETRESGID = 127,};
enum MACRO_SYS_setrlimit {SYS_setrlimit = 145,SYS_LWP_SELF = 147,};
enum MACRO_SYS_sigaction {SYS_sigaction = 188,SYS_LW_GET_THREAD_TIMES = 189,};
enum MACRO_SYS_sigenable {SYS_sigenable = 492,SYS_SPUCTL = 493,};
enum MACRO_SYS_sigvector {SYS_sigvector = 108,SYS_SIGBLOCK = 109,};
enum MACRO_SYS_statvfs64 {SYS_statvfs64 = 475,SYS_FSTATVFS64 = 476,};
enum MACRO_SetModeInsert {SetModeInsert = 0,SetModeDelete = 1,};
enum MACRO_ShapeBounding {ShapeBounding = 0,ShapeClip = 1,};
enum MACRO_ShiftMapIndex {ShiftMapIndex = 0,LockMapIndex = 1,ControlMapIndex = 2,Mod1MapIndex = 3,Mod2MapIndex = 4,Mod3MapIndex = 5,Mod4MapIndex = 6,Mod5MapIndex = 7,Button1Mask = 256,Button2Mask = 512,Button3Mask = 1024,Button4Mask = 2048,Button5Mask = 4096,AnyModifier = 32768,};
enum MACRO_ShmCompletion {ShmCompletion = 0,ShmNumberEvents = 1,};
enum MACRO_SmDialogError {SmDialogError = 0,SmDialogNormal = 1,};
enum MACRO_SunXK_Compose {SunXK_Compose = 0xFF20,SunXK_AltGraph = 0xFF7E,};
enum MACRO_TCP_RECVSPACE {TCP_RECVSPACE = 32768,};
enum MACRO_TCP_SENDSPACE {TCP_SENDSPACE = 32768,};
enum MACRO_TIOCSIGNORMAL {TIOCSIGNORMAL = 0,TIOCSIGABORT = 1,TIOCSIGBLOCK = 2,};
enum MACRO_TRANSFER_TYPE {TRANSFER_TYPE_MASK = 0xC,};
enum MACRO_TRAPOPENCLOSE {TRAPOPENCLOSE = 0,PSEL_COLL = 1,};
enum MACRO_T_GETADDR_ACK {T_GETADDR_ACK = 33,T_URGDATA_IND = 100,};
enum MACRO_USB_HID_CLASS {USB_HID_CLASS = 0x3,USB_HID_SUBCLASS_NONE = 0x0,};
enum MACRO_XK_Arabic_heh {XK_Arabic_heh = 0x5E7,XK_Arabic_waw = 0x5E8,XK_Arabic_alefmaksura = 0x5E9,XK_Arabic_yeh = 0x5EA,XK_Arabic_fathatan = 0x5EB,XK_Arabic_dammatan = 0x5EC,XK_Arabic_kasratan = 0x5ED,XK_Arabic_fatha = 0x5EE,XK_Arabic_damma = 0x5EF,XK_Arabic_kasra = 0x5F0,XK_Arabic_shadda = 0x5F1,XK_Arabic_sukun = 0x5F2,XK_Arabic_switch = 0xFF7E,};
enum MACRO_XK_Serbian_JE {XK_Serbian_JE = 0x6B8,XK_Cyrillic_LJE = 0x6B9,};
enum MACRO_XK_Serbian_je {XK_Serbian_je = 0x6A8,XK_Cyrillic_lje = 0x6A9,};
enum MACRO_XK_Ukranian_I {XK_Ukranian_I = 0x6B6,XK_Ukrainian_YI = 0x6B7,};
enum MACRO_XK_Ukranian_i {XK_Ukranian_i = 0x6A6,XK_Ukrainian_yi = 0x6A7,};
enum MACRO_XK_VoidSymbol {XK_VoidSymbol = 0xFFFFFF,};
enum MACRO_XK_hebrew_het {XK_hebrew_het = 0xCE7,XK_hebrew_tet = 0xCE8,};
enum MACRO_XK_hebrew_kuf {XK_hebrew_kuf = 0xCF7,XK_hebrew_resh = 0xCF8,XK_hebrew_shin = 0xCF9,XK_hebrew_taw = 0xCFA,};
enum MACRO_XK_hebrew_taf {XK_hebrew_taf = 0xCFA,XK_Hebrew_switch = 0xFF7E,};
enum MACRO_XK_quoteright {XK_quoteright = 0x27,XK_parenleft = 0x28,XK_parenright = 0x29,XK_asterisk = 0x2A,XK_plus = 0x2B,XK_comma = 0x2C,XK_minus = 0x2D,XK_period = 0x2E,XK_slash = 0x2F,XK_0 = 0x30,XK_1 = 0x31,XK_2 = 0x32,XK_3 = 0x33,XK_4 = 0x34,XK_5 = 0x35,XK_6 = 0x36,XK_7 = 0x37,XK_8 = 0x38,XK_9 = 0x39,XK_colon = 0x3A,XK_semicolon = 0x3B,XK_less = 0x3C,XK_equal = 0x3D,XK_greater = 0x3E,XK_question = 0x3F,XK_at = 0x40,XK_A = 0x41,XK_B = 0x42,XK_C = 0x43,XK_D = 0x44,XK_E = 0x45,XK_F = 0x46,XK_G = 0x47,XK_H = 0x48,XK_I = 0x49,XK_J = 0x4A,XK_K = 0x4B,XK_L = 0x4C,XK_M = 0x4D,XK_N = 0x4E,XK_O = 0x4F,XK_P = 0x50,XK_Q = 0x51,XK_R = 0x52,XK_S = 0x53,XK_T = 0x54,XK_U = 0x55,XK_V = 0x56,XK_W = 0x57,XK_X = 0x58,XK_Y = 0x59,XK_Z = 0x5A,XK_bracketleft = 0x5B,XK_backslash = 0x5C,XK_bracketright = 0x5D,XK_asciicircum = 0x5E,XK_underscore = 0x5F,XK_grave = 0x60,};
enum MACRO_XPAttrReplace {XPAttrReplace = 1,XPAttrMerge = 2,};
enum MACRO_XPNoEventMask {XPNoEventMask = 0,XPPrintMask = 1,XPAttributeMask = 2,};
enum MACRO_XPPrintNotify {XPPrintNotify = 0,XPAttributeNotify = 1,};
enum MACRO_XP_ATTRIBUTES {XP_ATTRIBUTES = 5,};
enum MACRO_XdbeBadBuffer {XdbeBadBuffer = 0,};
enum MACRO_XdbeUndefined {XdbeUndefined = 0,XdbeBackground = 1,XdbeUntouched = 2,XdbeCopied = 3,};
enum MACRO_XimSYNCHRONUS {XimSYNCHRONUS = 0x1,XimLookupChars = 0x2,XimLookupKeySym = 0x4,XimLookupBoth = 0x6,};
enum MACRO_XkbGroup1Mask {XkbGroup1Mask = 1,XkbGroup2Mask = 2,XkbGroup3Mask = 4,XkbGroup4Mask = 8,XkbAnyGroupMask = 128,};
enum MACRO_XkbIM_UseNone {XkbIM_UseNone = 0,XkbIM_UseAnyGroup = 14,XkbIM_UseAnyMods = 31,};
enum MACRO_XkbMapPending {XkbMapPending = 1,XkbXlibNewKeyboard = 2,};
enum MACRO_XkbNoModifier {XkbNoModifier = 0xFF,};
enum MACRO_XkbUseCoreKbd {XkbUseCoreKbd = 0x100,XkbUseCorePtr = 0x200,XkbDfltXIClass = 0x300,XkbDfltXIId = 0x400,XkbAllXIClasses = 0x500,XkbAllXIIds = 0x600,XkbXINone = 0xFF00,};
enum MACRO_XkmKeyHasType {XkmKeyHasType = 8,XkmKeyHasActions = 16,XkmKeyHasBehavior = 32,XkmRepeatingKey = 64,XkmNonRepeatingKey = 128,};
enum MACRO_XkmTypesIndex {XkmTypesIndex = 0,XkmCompatMapIndex = 1,XkmSymbolsIndex = 2,XkmIndicatorsIndex = 3,XkmKeyNamesIndex = 4,XkmGeometryIndex = 5,XkmVirtualModsIndex = 6,};
enum MACRO_XlcCreateMask {XlcCreateMask = 1,XlcDefaultMask = 2,XlcGetMask = 4,XlcSetMask = 8,XlcIgnoreMask = 16,};
enum MACRO_XmArrowBIndex {XmArrowBIndex = 5,};
enum MACRO_XmCOLOR_LO_TS {XmCOLOR_LO_TS_FACTOR = 50,};
enum MACRO_XmCSTextIndex {XmCSTextIndex = 5,XmCascadeBIndex = 6,};
enum MACRO_XmDrawnBIndex {XmDrawnBIndex = 6,};
enum MACRO_XmFileSBIndex {XmFileSBIndex = 9,};
enum MACRO_XmGadgetIndex {XmGadgetIndex = 2,XmPrimitiveIndex = 4,XmManagerIndex = 6,};
enum MACRO_XmLabelGIndex {XmLabelGIndex = 3,};
enum MACRO_XmObjectIndex {XmObjectIndex = 0,};
enum MACRO_XmPanedWIndex {XmPanedWIndex = 7,};
enum MACRO_XmPushBGIndex {XmPushBGIndex = 4,};
enum MACRO_XmUNSPECIFIED {XmUNSPECIFIED_PIXMAP = 2,XmUNSPECIFIED_POSITION = -1,};
enum MACRO_XpmColorError {XpmColorError = 1,};
enum MACRO_XtCWQueryOnly {XtCWQueryOnly = 128,};
enum MACRO_YPBINDOLDVERS {YPBINDOLDVERS = 1,};
enum MACRO_YPPUSH_XFRERR {YPPUSH_XFRERR = -13,};
enum MACRO__LastCategory {_LastCategory = 6,LC_BUFSIZ = 1536,};
enum MACRO__POSIX2_C_DEV {_POSIX2_C_DEV = 1,_POSIX2_FORT_DEV = -1,};
enum MACRO__POSIX_SHARED {_POSIX_SHARED_MEMORY_OBJECTS = 1,};
enum MACRO__POSIX_THREAD {_POSIX_THREAD_ATTR_STACKADDR = 1,};
enum MACRO__POSIX_TIMERS {_POSIX_TIMERS = 1,};
enum MACRO__POSIX_TZNAME {_POSIX_TZNAME_MAX = 3,_POSIX_STREAM_MAX = 8,_POSIX_CLOCKRES_MIN = 20000000,};
enum MACRO__XOPEN_CURSES {_XOPEN_CURSES = 1,};
enum MACRO_osfXK_AddMode {osfXK_AddMode = 0x1004FF31,};
enum MACRO_osfXK_BackTab {osfXK_BackTab = 0x1004FF07,osfXK_BeginData = 0x1004FF5A,};
enum MACRO_osfXK_EndLine {osfXK_EndLine = 0x1004FF57,};
enum MACRO_osfXK_MenuBar {osfXK_MenuBar = 0x1004FF45,osfXK_Next = 0x1004FF56,osfXK_NextField = 0x1004FF5E,};
enum MACRO_sym_k_control {sym_k_control_list = 4,sym_k_proc_ref_list = 11,};
enum MACRO_sym_k_onebyte {sym_k_onebyte_charsize = 1,sym_k_twobyte_charsize = 2,sym_k_mixed1_2byte_charsize = 3,};
enum MACRO_sym_m_sixteen {sym_m_sixteen_bit = 4,sym_m_exp_eval = 8,};
enum MACRO_sz_icePingMsg {sz_icePingMsg = 8,};
enum MACRO_sz_xColorItem {sz_xColorItem = 12,};
enum MACRO_sz_xCopyGCReq {sz_xCopyGCReq = 16,sz_xSetDashesReq = 12,};
enum MACRO_sz_xRectangle {sz_xRectangle = 8,sz_xArc = 12,};
enum MACRO_sz_xTimecoord {sz_xTimecoord = 8,sz_xHostEntry = 4,};
enum MACRO_sz_xieFloMath {sz_xieFloMath = 20,sz_xieFloPasteUp = 28,};
enum MACRO_sz_xkbBellReq {sz_xkbBellReq = 28,};
enum MACRO_xieValDefault {xieValDefault = 0,xieValAll = 1,xieValColorAlloc = 2,xieValConstrain = 4,xieValConvertFromRGB = 6,xieValConvertToRGB = 8,xieValConvolve = 10,xieValDecode = 12,xieValDither = 14,xieValEncode = 16,xieValGamut = 18,xieValGeometry = 20,xieValHistogram = 22,xieValWhiteAdjust = 24,};
enum MACRO_xieValDisable {xieValDisable = 1,xieValFirstData = 2,xieValNewData = 3,};
enum MACRO_xieValLSFirst {xieValLSFirst = 1,xieValMSFirst = 2,};
typedef struct _39A4136BB030D7809586100094537552 *OverrideShellWidget;
typedef struct _735DE0EA43321C9AE91F95F7110249AF *ShellClassExtension;
typedef struct _A6524737EEF8C4DE9F2A62890C064223 *TopLevelShellWidget;
typedef struct _VendorShellClassRec VendorShellClassRec;
typedef struct _5C140DC956AB8D8D3A2E81F1CC511829 XClientMessageEvent;
typedef struct _4811DE8B61D0522D3363266E4D46EA9A XDestroyWindowEvent;
typedef struct _04253E8C02CEAE855A3D040489F646EA XDeviceMappingEvent;
typedef struct _CE366FE051068AE4B5DAF48358622BF9 XKbdFeedbackControl;
typedef struct _257708480E694070BE2FEFA543B5E05B XLedFeedbackControl;
typedef struct _A06AF73261543B69A785AD9B5C737D11 XPixmapFormatValues;
typedef struct _77F664D03ADE3D590F095E54D295E163 XPtrFeedbackControl;
typedef struct _ECAD306E641EDB2496D7F2C26F74F3C2 XResizeRequestEvent;
typedef struct _40B85A3B6BBE9789377036CCC7E05A20 XShmCompletionEvent;
typedef struct _XkbCompatChanges *XkbCompatChangesPtr;
typedef struct _XkbCompatChanges XkbCompatChangesRec;
typedef struct _XkbComponentList *XkbComponentListPtr;
typedef struct _XkbComponentList XkbComponentListRec;
typedef struct _XkbComponentName *XkbComponentNamePtr;
typedef struct _XkbComponentName XkbComponentNameRec;
typedef struct _XkbDeviceChanges *XkbDeviceChangesPtr;
typedef struct _XkbDeviceChanges XkbDeviceChangesRec;
typedef struct _XkbDeviceLedInfo *XkbDeviceLedInfoPtr;
typedef struct _XkbDeviceLedInfo XkbDeviceLedInfoRec;
typedef struct _XkbGeometrySizes *XkbGeometrySizesPtr;
typedef struct _XkbGeometrySizes XkbGeometrySizesRec;
typedef struct _XkbNamesNotify XkbNamesNotifyEvent;
typedef struct _XkbStateNotifyEvent XkbStateNotifyEvent;
typedef struct _XmAccessColorsTraitRec *XmAccessColorsTrait;
typedef struct _DD43D8CABB66A19A2E980F6986CCC925 XmAnyCallbackStruct;
typedef struct _XmArrowButtonGadgetRec *XmArrowButtonGadget;
typedef struct _XmArrowButtonRec *XmArrowButtonWidget;
typedef struct _26B7AAC916B627D83A009BC2ED2E8DD9 XmBulletinBoardPart;
typedef struct _XmCacheClassPart *XmCacheClassPartPtr;
typedef struct _8A97B9BC9980E3C2910806BD3DED42AF XmCascadeButtonPart;
typedef struct _XmComboBoxClassPart XmComboBoxClassPart;
typedef struct _XmCommandConstraintPart *XmCommandConstraint;
typedef struct _XmContainerClassRec XmContainerClassRec;
typedef struct _XmContainerItemDataRec *XmContainerItemData;
typedef struct _XmContainerTraitRec XmContainerTraitRec;
typedef struct _XmDialogShellExtRec XmDialogShellExtRec;
typedef struct _XmDialogShellRec *XmDialogShellWidget;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmDragIconClassPart;
typedef struct _XmDragOverShellPart XmDragOverShellPart;
typedef struct _XmDragStartCallbackStruct *XmDragStartCallback;
typedef struct _XmDrawingAreaRec *XmDrawingAreaWidget;
typedef struct _XmDrawnButtonRec *XmDrawnButtonWidget;
typedef struct _XmDropStartCallbackStruct *XmDropStartCallback;
typedef struct _XmDropTransferEntryRec *XmDropTransferEntry;
typedef struct _XmFormAttachmentRec XmFormAttachmentRec;
typedef struct _XmFormConstraintRec *XmFormConstraintPtr;
typedef struct _XmFormConstraintRec XmFormConstraintRec;
typedef struct _XmGadgetCacheRef *XmGadgetCacheRefPtr;
typedef struct _XmGadgetClassExtRec XmGadgetClassExtRec;
typedef union _XmGeoMajorLayoutRec XmGeoMajorLayoutRec;
typedef struct _XmGrabShellClassRec XmGrabShellClassRec;
typedef struct _XmIconGCacheObjPart XmIconGCacheObjPart;
typedef struct _XmLabelGCacheObjRec XmLabelGCacheObjRec;
typedef struct _XmLabelGCacheObjRec *XmLabelGCacheObject;
typedef struct _XmMenuSavvyTraitRec XmMenuSavvyTraitRec;
typedef struct _XmMenuShellClassRec XmMenuShellClassRec;
typedef struct _XmNavigatorTraitRec XmNavigatorTraitRec;
typedef struct _XmNotebookClassPart XmNotebookClassPart;
typedef struct _XmObjectClassExtRec XmObjectClassExtRec;
typedef struct _XmPanedWindowRec *XmPanedWindowWidget;
typedef union _EB2535972657DA0245F770D5D18D2BD3 *XmParentProcessData;
typedef struct _XmPrimitiveClassExtRec *XmPrimitiveClassExt;
typedef struct _XmPrimitiveClassRec XmPrimitiveClassRec;
typedef struct _72E33BD22DCEAD37F3B82706335FF895 *XmPrintShellPartPtr;
typedef struct _XmProtocolClassPart XmProtocolClassPart;
typedef struct _XmRowColumnClassRec XmRowColumnClassRec;
typedef struct _XmScrollBarClassRec XmScrollBarClassRec;
typedef struct _XmScrolledWindowRec XmScrolledWindowRec;
typedef struct _XmSeparatorClassRec XmSeparatorClassRec;
typedef struct _XmShellExtClassPart XmShellExtClassPart;
typedef struct _XmSimpleSpinBoxPart XmSimpleSpinBoxPart;
typedef struct _XmSpecUnitTypeTraitRec *XmSpecUnitTypeTrait;
typedef struct _XmSpinBoxConstraint *XmSpinBoxConstraint;
typedef struct _XmSyntheticResource XmSyntheticResource;
typedef struct _XmTakesDefaultTraitRec *XmTakesDefaultTrait;
typedef struct _32903A77322285C221D0A6A4314FFA28 XmTearOffButtonPart;
typedef struct _XmTextFieldClassRec XmTextFieldClassRec;
typedef unsigned char XmToggleButtonState;
typedef struct _XmVendorShellExtRec XmVendorShellExtRec;
typedef struct _XmVendorShellRec *XmVendorShellWidget;
typedef struct _13470DA4B6A7AAE8ACC864F70C5FF73E XtChangeHookDataRec;
typedef struct _5DD49376C74765CB7E96286DDB46181E *XtConfigureHookData;
typedef struct _9D9F8CC524C7DD4F9704759512315B2D XtCreateHookDataRec;
typedef struct _D4FB496F61D4660631FE604D96639DD9 _IceConnectToMeInfo;
typedef struct _086284109A45697A934DE255CD0A4CB0 _IceConnectionError;
typedef struct _0769C413302D914EB03B061AECACDC27 _IceConnectionReply;
typedef struct _82419EEADA9624744D635B7F10F1DD0F _LC_core_monetary_t;
struct _XkbControlsChanges {unsigned int changed_ctrls;unsigned int enabled_ctrls_changes;int num_groups_changed;};
struct _XkbDeviceBtnAction {unsigned char type;unsigned char flags;unsigned char count;unsigned char button;unsigned char device;};
struct _XmTextLineTableRec {unsigned int virt_line;};
typedef struct _E2EF1D76D67D374CE85643D9E7E9B7FB cio_ctrl_reply_type;
typedef struct _E8C0CCE1B60E84FF431FA745320DCDBC cio_poll_sync_reply;
typedef struct _B1B67A1858EAE29686262E19A9779EE3 dam_info_table_type;
typedef struct _749257863A78ACF83BA10F9F553F4560 deviceMappingNotify;
typedef struct _84637925C97ECDBBFF1C7795F561A4FD diag_event_msg_type;
typedef struct _58330DD7ED50E0D1B016F20AC1EEBF6A dl_disabmulti_req_t;
typedef struct _67680BE24F0D27FD73CC311486674C45 dl_disconnect_ind_t;
typedef struct _DC015C62524E176FF119B9ED21E58D67 dl_disconnect_req_t;
typedef struct _8EC64436A5F83D08A6231CF287719D89 dl_hp_ppa_ack_t_obs;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_rawdata_ind_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_rawdata_req_t;
typedef struct _83A32DBCC5475A0421ADD26B5424DCBB dl_promiscoff_req_t;
typedef struct _B6E4A2B848FCD9E33E06830EEF7A3E04 eject_magazine_type;
typedef struct _5C59CCE56E8E593774E9628726BF3352 fcp_cdio_log_info_t;
typedef union _D9E0BCFF4A8F2DAB04E179D1361C1258 fcp_log_info_ptrs_t;
struct floppy_format_media {int fmt_option;unsigned int interleave;};
struct gpio1_diag_ctl_type {int type;int arg[3];};
typedef struct _9E831FE87E4AD00EC571C939110831F6 hw_status_info_type;
typedef struct _BCAE7384F079FDFA9DD5F4EFBAB29817 iceAuthNextPhaseMsg;
typedef struct _DF35D159A1509306ACCF933DCAD10C10 iceProtocolReplyMsg;
typedef struct _1D4F7230B22579A4FD715C0E003DAA6E iceProtocolSetupMsg;
typedef struct _003EE3AD25CF627DEE371096C69783B0 int_completion_type;
typedef struct _BFF6D439C72248A83F4F771634853519 log_class_bits_type;
typedef struct _0F462D16F92216AF6E2B02359C172FD3 mib_ipNetToMediaEnt;
typedef struct pdc_pat_cell_proc pdc_pat_cell_proc_t;
struct pdt_mem_return_read {unsigned long long phys_addr;unsigned int et_bit;};
typedef struct pfn_to_virt_entry pfn_to_virt_entry_t;
typedef int pthread_mutexattr_t;
typedef struct _F0C48DF009CFE2148821D41751BF8823 read_blk_limit_type;
typedef rpcb_entry_list *rpcb_entry_list_ptr;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smRegisterClientMsg;
typedef struct _99446BF9ACEAEEC04402885045FD1BFF ss_N_fmt_parms_type;
typedef struct _sym_list_entry_type sym_list_entry_type;
typedef struct _sym_name_entry_type sym_name_entry_type;
typedef struct _3B56314BB57D9CAEC1E1C6F1E501BCB8 sym_obj_header_type;
typedef struct _sym_root_entry_type sym_root_entry_type;
typedef struct _5C2B60FA26E73A1BF39A96E97412C65C xAllocColorCellsReq;
typedef struct _4E2DFB9F6290197309D31FB10928FA58 xAllocNamedColorReq;
typedef struct _56F965C4CB1B37CA1C9344E914749FD8 xCirculateWindowReq;
typedef struct _57E6A23A76D16D83EF023BCC9C7B7628 xConfigureWindowReq;
typedef struct _625DD72E42D2E4120693244DFAAD3348 xDPMSGetTimeoutsReq;
typedef struct _F571D10236F18BD99A11DF3B50D0C123 xDPMSSetTimeoutsReq;
typedef struct _8E9D6FDA341A5CD3E2BA41AECEFC8DB5 xGetInputFocusReply;
typedef struct _DB0E3B2132CB3BCDB478CD47716D7AA6 xGetMotionEventsReq;
typedef struct _DFCE630A31DDB9AF8FAB2276CD8948BD xHPGetClipListReply;
typedef struct _DD6487706C9376B02E0B52997E69E388 xHPGetServerModeReq;
typedef struct _5E32E18D9D191C64B2666EEAFB9BEDC0 xHPGrabDeviceKeyReq;
typedef struct _B9DE48622BE1A30E91ED1262299F48A0 xIntegerFeedbackCtl;
typedef struct _PrintGetContext xPrintGetContextReq;
typedef struct _PrintSetContext xPrintSetContextReq;
typedef struct _9990F7522FA29648C94CCC0846165B95 xQueryBestSizeReply;
typedef struct _A2FB221EC01549407EDCF016C4C0632F xSetDeviceModeReply;
typedef struct _C7406CB336B739A87F2A2E6FB42BC742 xStoreNamedColorReq;
typedef struct _BC0C03DE100E0ADBA9BE7AF77D01715A xTranslateCoordsReq;
typedef struct _9C8855C5416F841FBC956426CB420C87 xUngrabDeviceKeyReq;
typedef struct _53791A33E2911636F452B242C84B4B8B xieGetClientDataReq;
typedef struct _18654165D8B17DA3E357B0DE9180FFF7 xiePutClientDataReq;
typedef struct _58FAD93ADC8A41E6E41FB2BF3A4FCE08 xieQueryPhotofloReq;
typedef struct _2017A4559BD8DFB36CC7B04C7F93BD32 xieQueryPhotomapReq;
typedef struct _43F66B9FAB512FEC0C912857172689FE xieTecColorAllocAll;
typedef struct _9C384A9E423E8568FC322ED8773458C9 xieTecDitherOrdered;
typedef struct _B73E16D481CC06015184D41F6368AD16 xieTypHistogramData;
typedef struct _2B6C11629D4FEDD0D62560CB169B6CB3 xieTypProcessDomain;
typedef struct _xkbBehaviorWireDesc xkbBehaviorWireDesc;
typedef struct _xkbGetControlsReply xkbGetControlsReply;
typedef struct _xkbGetDeviceInfo xkbGetDeviceInfoReq;
typedef struct _xkbGetGeometryReply xkbGetGeometryReply;
typedef struct _xkbSetDeviceInfo xkbSetDeviceInfoReq;
typedef struct _xkmIndicatorMapDesc xkmIndicatorMapDesc;
typedef struct _xkmSymInterpretDesc xkmSymInterpretDesc;
typedef struct _CompositeClassPart CompositeClassPart;
typedef struct _ConstraintClassRec ConstraintClassRec;
typedef struct _XmContainerXfrActionRec *ContainerXfrAction;
typedef struct _5C32FF1A7C4211025F70196E2E5CEFB8 ICStatusAttributes;
typedef struct _6A9F4E252AF5B29C924E4470887811E1 LINEAR_RGB_SCCData;
enum MACRO_ACL_ANYGROUP {ACL_ANYGROUP = -25,};
enum MACRO_AMG_DM_POWER {AMG_DM_POWER_FAIL = -8,};
enum MACRO_ATT_IEEE8023 {ATT_IEEE8023 = 1,ATT_SNAP8023 = 2,ATT_SNAP8024 = 4,ATT_INVALID = 1024,};
enum MACRO_ATT_SNAPFDDI {ATT_SNAPFDDI = 8,ATT_SNAP8025 = 9,ATT_ATR = 11,ATT_FCSNAP = 15,};
enum MACRO_AUDIO_FORMAT {AUDIO_FORMAT_ULAW = 0,AUDIO_FORMAT_ALAW = 1,AUDIO_FORMAT_LINEAR16BIT = 2,AUDIO_FORMAT_LINEAR16BIT_LE = 3,AUDIO_FORMAT_LINEAR8BIT = 4,};
enum MACRO_AUTH_MAX_DEV {AUTH_MAX_DEV_TYPE = 3,};
enum MACRO_AllTemporary {AllTemporary = 0,};
enum MACRO_AsyncPointer {AsyncPointer = 0,SyncPointer = 1,ReplayPointer = 2,AsyncKeyboard = 3,SyncKeyboard = 4,ReplayKeyboard = 5,AsyncBoth = 6,SyncBoth = 7,};
enum MACRO_BF_OVERWRITE {BF_OVERWRITE = 0x4,BF_OVERWRITE_BIT = 0x1D,};
enum MACRO_CIO_DA_SENSE {CIO_DA_SENSE_ARQ = 0x1,CIO_DA_SENSE_ARE = 0x4,CIO_DA_SENSE_LV1 = 0x8,CIO_DA_SENSE_NMI = 0x10,CIO_DA_SENSE_PRE = 0x20,CIO_DA_SENSE_PST = 0x40,CIO_DA_SENSE_RFC = 0x80,};
enum MACRO_CIO_DMA_WAIT {CIO_DMA_WAIT_SEQ_ILLEGAL = -49,};
enum MACRO_CIO_NO_REPLY {CIO_NO_REPLY_TO_ILLEGAL_MSG = -50,};
enum MACRO_CIO_SPURIOUS {CIO_SPURIOUS_INTERRUPT = 44,CIO_ILLEGAL_REQ_NUM_IN_TIMER = -45,};
enum MACRO_CMP_3480FUJ1 {CMP_3480FUJ1 = 0x84,CMP_3480FUJ2 = 0x2,};
enum MACRO_CMP_3480FUJ3 {CMP_3480FUJ3 = 0x83,};
enum MACRO_CPR_DM_PAPER {CPR_DM_PAPER_JAM = -3,};
enum MACRO_CPR_DM_POWER {CPR_DM_POWER_FAIL = -8,};
enum MACRO_CRERR_NOPAGE {CRERR_NOPAGE = -2,};
enum MACRO_CS80_EXECUTE {CS80_EXECUTE = 0,HPIB_EXECUTE = 1,MT7970_EXECUTE = 2,DA_REQUEST = 3,DAP_SEND = 4,DAP_EXECUTE = 5,SET_BLOCKING = 6,CLEAR_BLOCKING = 7,};
enum MACRO_CWBackPixmap {CWBackPixmap = 1,CWBackPixel = 2,CWBorderPixmap = 4,CWBorderPixel = 8,CWBitGravity = 16,CWWinGravity = 32,CWBackingStore = 64,CWBackingPlanes = 128,CWBackingPixel = 256,CWOverrideRedirect = 512,CWSaveUnder = 1024,CWEventMask = 2048,CWDontPropagate = 4096,CWColormap = 8192,CWCursor = 16384,};
enum MACRO_ContAllValid {ContAllValid = 0xFFFF,};
enum MACRO_DAP_IDENTIFY {DAP_IDENTIFY = 2,DACDLINIT = 536888320,};
enum MACRO_DEFAULT_CORE {DEFAULT_CORE_OPTS = 503,};
enum MACRO_DEN_8MM_8500 {DEN_8MM_8500 = 0x15,DEN_8MM_8500c = 0x8C,};
enum MACRO_DEN_QIC_1350 {DEN_QIC_1350 = 0x12,DEN_QIC_2100 = 0x1F,DEN_QIC_5010 = 0x21,DEN_QIC_2GB = 0x22,DEN_QIC_5GB = 0x28,};
enum MACRO_DEVICE_PPOLL {DEVICE_PPOLL = 0,DAM_UNLOCK_READY = 1,DEAD_OR_DYING = 2,DA_INTERRUPT = 3,DIAG_INTERRUPT = 4,};
enum MACRO_DIAG_INVALID {DIAG_INVALID_REG_OFFSET = -60,};
enum MACRO_DL_HP_RAWDLS {DL_HP_RAWDLS = 0x1000,};
enum MACRO_EISA1_MASTER {EISA1_MASTER_VECTOR = 0x0,EISA1_SLAVE_VECTOR = 0x8,};
enum MACRO_EISA_NMI_INT {EISA_NMI_INT_MASK = 0x1,HIL_GENERAL_INT_LINE = 0x1E,};
enum MACRO_ELFCLASSNONE {ELFCLASSNONE = 0,ELFCLASS32 = 1,ELFCLASS64 = 2,ELFCLASS64_A = 200,};
enum MACRO_EXECLIBMAGIC {EXECLIBMAGIC = 0x104,VERSION_ID = 0x5124000,NEW_VERSION_ID = 0x53113CC,};
enum MACRO_EnableAccess {EnableAccess = 1,};
enum MACRO_FCLWP_RCVBUF {FCLWP_RCVBUF = 1,FCLWP_SNDBUF = 2,FCLWP_MAX_SEQ_SZ = 65535,FCLWP_MAX_RCVBUF = 1048560,};
enum MACRO_FCMD_DUMPREG {FCMD_DUMPREG = 0xE,FCMD_SCAN_LE = 0x19,FCMD_SCAN_HE = 0x1D,FCMD_MTRACK = 0x80,};
enum MACRO_FCMD_INVALID {FCMD_INVALID = 1,FCMD_SETUP_FAILED = 2,FCMD_CMD_FAILED = 3,FCMD_TIMEOUT = 4,FCMD_DATA_FAILED = 5,FCMD_RESULTS_FAILED = 6,};
enum MACRO_FE_TONEAREST {FE_TONEAREST = 0,FE_UPWARD = 1024,FE_DOWNWARD = 1536,};
enum MACRO_GCSETMONTYPE {GCSETMONTYPE = 536889140,GCCLEMENCY = 536889141,GCSTI_UTIL = 536889142,};
enum MACRO_GLOB_NOSPACE {GLOB_NOSPACE = 1,GLOB_ABORTED = 2,GLOB_NOMATCH = 3,GLOB_NOSYS = 4,};
enum MACRO_GrabModeSync {GrabModeSync = 0,GrabModeAsync = 1,};
enum MACRO_HASHFRACTION {HASHFRACTION = 0x2,};
enum MACRO_HAS_IOCHKERR {HAS_IOCHKERR = 0x1,INITIALIZED = 0x2,INIT_ERROR = 0x4,IS_ISA_CARD = 0x8,};
enum MACRO_HISTFRACTION {HISTFRACTION = 2,};
enum MACRO_HPIB_TIMEOUT {HPIB_TIMEOUT = 0,HPIB_WIDTH = 1,HPIB_SPEED = 2,HPIB_READ_PATTERN = 3,};
enum MACRO_ICMP_MASKLEN {ICMP_MASKLEN = 12,};
enum MACRO_ICMP_MAXTYPE {ICMP_MAXTYPE = 18,};
enum MACRO_ICMP_UNREACH {ICMP_UNREACH_NET = 0,ICMP_UNREACH_HOST = 1,ICMP_UNREACH_PROTOCOL = 2,ICMP_UNREACH_PORT = 3,ICMP_UNREACH_NEEDFRAG = 4,ICMP_UNREACH_SRCFAIL = 5,};
enum MACRO_IEEE8023XSAP {IEEE8023XSAP_LEN = 10,SNAP8023_HLEN = 22,SNAP8023XT_HLEN = 26,};
enum MACRO_IEEE8023_MIN {IEEE8023_MIN = 43,SNAP8024_MTU = 8166,IEEE8024_MTU = 8171,};
enum MACRO_IEEE8025_RIF {IEEE8025_RIF_DIR = 0x80,SNAP8023_MTU = 0x5D4,IEEE8023_MTU = 0x5D9,};
enum MACRO_INVALID_TRON {INVALID_TRON_UID = -23,};
enum MACRO_IOCONFIG_BAD {IOCONFIG_BAD_MAGIC = -2,};
enum MACRO_IOC_ICASTART {IOC_ICASTART = 1,IOC_ICASTOP = 2,IOC_ICAINIT = 3,};
enum MACRO_IPOPT_OPTVAL {IPOPT_OPTVAL = 0,IPOPT_OLEN = 1,IPOPT_OFFSET = 2,IPOPT_MINOFF = 4,};
enum MACRO_KBD_JAPANESE {KBD_JAPANESE = 0x2,KBD_SWISS_FRENCH = 0x3,KBD_PORTUGESE = 0x4,KBD_ARABIC = 0x5,KBD_HEBREW = 0x6,KBD_CANADIAN_ENGLISH = 0x7,KBD_TURKISH = 0x8,KBD_GREEK = 0x9,KBD_THAI = 0xA,KBD_ITALIAN = 0xB,KBD_HANGUL = 0xC,KBD_DUTCH = 0xD,KBD_SWEDISH = 0xE,KBD_GERMAN = 0xF,KBD_CHINESE_PRC = 0x10,KBD_CHINESE_ROC = 0x11,KBD_SWISS_FRENCH_II = 0x12,KBD_SPANISH = 0x13,KBD_SWISS_GERMAN_II = 0x14,KBD_BELGIAN = 0x15,KBD_FINNISH = 0x16,KBD_UNITED_KINGDOM = 0x17,KBD_FRENCH_CANADIAN = 0x18,KBD_SWISS_GERMAN = 0x19,KBD_NORWEGIAN = 0x1A,KBD_FRENCH = 0x1B,KBD_DANISH = 0x1C,KBD_KATAKANA = 0x1D,KBD_LATIN_AMERICAN = 0x1E,KBD_UNITED_STATES = 0x1F,};
enum MACRO_KERNEL_SPACE {KERNEL_SPACE = 0,TST_DATA1 = 1431655765,TST_DATA2 = -1431655766,};
enum MACRO_LLIO_CHANNEL {LLIO_CHANNEL_TIMEOUT = -41,};
enum MACRO_LLIO_INV_REQ {LLIO_INV_REQ_TRANS_LEN = -43,};
enum MACRO_LLIO_NO_CTRL {LLIO_NO_CTRL_Y_PIN = -53,};
enum MACRO_LLIO_NO_UNBD {LLIO_NO_UNBD_ACTIVE_IO = -18,};
enum MACRO_LLIO_REIMAGE {LLIO_REIMAGE_DONE = -62,};
enum MACRO_LLIO_REQ_NOT {LLIO_REQ_NOT_STARTED = -46,};
enum MACRO_LLIO_SUSPECT {LLIO_SUSPECT_DATA = -45,};
enum MACRO_LLIO_TIMEOUT {LLIO_TIMEOUT = -40,};
enum MACRO_MAGIC_OFFSET {MAGIC_OFFSET = 0,RELOC_MAGIC = 262,EXEC_MAGIC = 263,SHARE_MAGIC = 264,SHMEM_MAGIC = 265,AR_MAGIC = 65381,};
enum MACRO_MAXALLOCSAVE {MAXALLOCSAVE = 4096,};
enum MACRO_MAXAUDSTRING {MAXAUDSTRING = 70,};
enum MACRO_MAXERRMSGLEN {MAXERRMSGLEN = 255,YPU_PROG = 100028,};
enum MACRO_MAX_IPOPTLEN {MAX_IPOPTLEN = 40,};
enum MACRO_MAX_LOOPBACK {MAX_LOOPBACK_TAG = 2,};
enum MACRO_MAX_PHYSADDR {MAX_PHYSADDR_LEN = 32,INDX_MASK = 65535,};
enum MACRO_MAX_SELFTEST {MAX_SELFTEST_FLAG = 0,WAIT = 1,};
enum MACRO_MIOC_LOCKSYM {MIOC_LOCKSYM = 536890632,MIOC_UNLOCKSYM = 536890633,};
enum MACRO_MODEL_NATIVE {MODEL_NATIVE = 1,IOC_MODELS = 3,};
enum MACRO_MPC_ADVISORY {MPC_ADVISORY = 0,MPC_MANDATORY = 1,MPC_UPBOUND = 2,};
enum MACRO_MT_ISEXABYTE {MT_ISEXABYTE = 0xA,MT_IS3480 = 0xB,MT_ISDLT = 0xC,MT_ISAIT = 0xD,MT_IS3590 = 0xE,MT_ISLTO = 0xF,};
enum MACRO_MT_ISUNKNOWN {MT_ISUNKNOWN = 0x0,MT_ISTS = 0x1,MT_ISHT = 0x2,MT_ISTM = 0x3,MT_IS7970E = 0x4,MT_ISHPIB_REEL = 0x5,MT_ISDDS1 = 0x6,MT_ISDDS2 = 0x7,};
enum MACRO_MrmwcUnknown {MrmwcUnknown = 1,};
enum MACRO_NBASEENTRIES {NBASEENTRIES = 3,NOPTENTRIES = 13,ACL_NSUSER = -36,};
enum MACRO_NGROUPS_EGID {NGROUPS_EGID_SUPP = -5,};
enum MACRO_NGROUPS_RGID {NGROUPS_RGID = -2,};
enum MACRO_NGROUPS_SGID {NGROUPS_SGID = -3,};
enum MACRO_NGROUPS_SUPP {NGROUPS_SUPP = -4,};
enum MACRO_NL_FORMATTER {NL_FORMATTER_SET = 1,NL_HPS_SET = 3,NL_CM_SET = 4,NL_FTAM_SET = 5,NL_FTAM_DIAG_SET = 6,NL_FTAM_AIF_SET = 7,NL_EM_SET = 8,NL_ULA_SET = 9,NL_SHM_SET = 12,NL_OSI0_DRIVER_SET = 13,NL_CIA_SET = 14,NL_ULIPC_SET = 15,NL_MMS_SET = 16,NL_ACSE_SET = 17,};
enum MACRO_NO_PARAMETER {NO_PARAMETER = 0,DAM_QUEUE_DEPTH = 2,};
enum MACRO_NS_LS_DRIVER {NS_LS_DRIVER = 11,NS_LS_RLBD = 12,NS_LS_BUFS = 13,NS_LS_CASE21 = 14,NS_LS_ROUTER21 = 15,NS_LS_NFS = 16,NS_LS_NETISR = 17,NS_LS_X25 = 18,NS_LS_NSE = 19,NS_LS_STRLOG = 20,NS_LS_TIRDWR = 21,NS_LS_TIMOD = 22,NS_LS_ICMP = 23,X25L2 = 24,X25L3 = 25,NS_TRC_FILTER = 26,NS_TRC_NAME = 27,NS_LS_AXIN = 28,NS_LS_IGMP = 29,TOKEN = 31,HIPPI = 32,EISA_FC = 33,SX25L2 = 34,SX25L3 = 35,NS_LS_SX25 = 36,ANYLAN_SUBSYS_ID = 37,EISA_ATM = 38,SEAH_FDDI = 39,TELECOM_HLR = 40,TELECOM_SCE = 41,TELECOM_SMS = 42,TELECOM_NEM = 43,FORE_ATM = 50,TMOS_TOB = 60,TELECOM_SCP = 62,TELECOM_SS7 = 63,FTAM_INIT = 64,FTAM_RESP = 65,MMS = 66,X400 = 67,NM_AGENT = 69,FTAM_VFS = 70,MMS_EB = 71,FTAM_USER = 72,FTAM_FTP_GW = 73,FTP_FTAM_GW = 74,OVA = 75,SNMP = 76,CMOT = 77,OVE = 78,OVC = 79,OVW = 80,OVD = 81,OVS = 82,OVCAPI = 83,OVEXTERNAL = 84,};
enum MACRO_NULL_xdrproc {NULL_xdrproc_t = 0,};
enum MACRO_NUMARGINREGS {NUMARGINREGS = 4,};
enum MACRO_NUMARGREGS32 {NUMARGREGS32 = 4,NUMARGREGS64 = 8,};
enum MACRO_NUM_STORAGES {NUM_STORAGES = 10,FIRST_IMPORT_EXPORT = 200,};
enum MACRO_NotifyNormal {NotifyNormal = 0,NotifyGrab = 1,NotifyUngrab = 2,NotifyWhileGrabbed = 3,};
enum MACRO_PAM_DISALLOW {PAM_DISALLOW_NULL_AUTHTOK = 2,PAM_ESTABLISH_CRED = 1,};
enum MACRO_PAM_MAX_RESP {PAM_MAX_RESP_SIZE = 512,PAM_SERVICE = 1,};
enum MACRO_PCI_CS_CLASS {PCI_CS_CLASS_SUB_CLASS = 0xA,};
enum MACRO_PDE2_0_BLOCK {PDE2_0_BLOCK_MAPPED = 19,};
enum MACRO_PDE_ACCESSED {PDE_ACCESSED_POS = 1,PDE_RTRAP_POS = 2,PDE_DIRTY_POS = 3,PDE_DBRK_POS = 4,PDE_UNCACHE_POS = 12,PDE_EXECUTED_POS = 31,};
enum MACRO_PDE_AR_URXKR {PDE_AR_URXKR = 47,PDE_AR_NOACC = 115,};
enum MACRO_PDE_MODIFIED {PDE_MODIFIED_POS = 28,PDE_REF_BIT = -2147483648,};
enum MACRO_PDE_UIP_WBIT {PDE_UIP_WBIT = 0,PDE_OS = 28,};
enum MACRO_PFAIL_VECTOR {PFAIL_VECTOR = 0x4,PF_DISABLED = 0x0,};
enum MACRO_PRC_ERR_RCMD {PRC_ERR_RCMD = -3,};
enum MACRO_PRIV_MAXGRPS {PRIV_MAXGRPS = 33,PRIV_MASKSIZ = 2,};
enum MACRO_PRTSCHEDBASE {PRTSCHEDBASE = 0,MAX_RTSCHED_PRI = 512,};
enum MACRO_PS2_NONE_BIT {PS2_NONE_BIT = 0x1,PS2_MOUSE_BIT = 0x2,PS2_KEYBD_BIT = 0x4,PS2_UNKNOWN_BIT = 0x8,};
enum MACRO_PSM_VALIDITY {PSM_VALIDITY_TRUE = 0,PSM_VALIDITY_FALSE = 1,PSM_ERROR_MSG_LENGHT_MAX = 255,};
enum MACRO_PS_TIMESHARE {PS_TIMESHARE = 0x1,PS_RTPRIO = 0x2,PS_FIFO = 0x4,PS_RR = 0x8,PS_RR2 = 0x10,};
enum MACRO_REG_EDUPOPER {REG_EDUPOPER = 26,REG_ENOEXPR = 27,REG_ENEWLINE = 36,REG_ENOSEARCH = 41,REG_EPAREN = 42,REG_ENSUB = 43,REG_EBRACE = 45,REG_EBRACK = 49,REG_ESPACE = 50,};
enum MACRO_REG_EXTENDED {REG_EXTENDED = 0x1,REG_NEWLINE = 0x2,REG_ICASE = 0x4,REG_NOSUB = 0x8,REG_EGREP = 0x100,};
enum MACRO_RESERVED_LDM {RESERVED_LDM_1 = 80,RESERVED_LDM_2 = 81,DH1_START_MSG = 82,SWITCHOVER_MSG = 83,RESERVED_LDM_20 = 99,START_CIO_MSG = 100,};
enum MACRO_RESERVED_NON {RESERVED_NON_HP_1 = 50,RESERVED_NON_HP_2 = 51,RESERVED_NON_HP_3 = 52,RESERVED_NON_HP_30 = 79,START_LDM = 80,};
enum MACRO_RESET_SYSTEM {RESET_SYSTEM_BUS = 0x1,SW_ENABLED = 0x2,FAILSAFE_ENABLED = 0x4,BUS_TO_ENABLED = 0x8,SW_NMI = 0x20,BUS_TO_NMI = 0x40,FAILSAFE_NMI = 0x80,};
enum MACRO_RLIMIT_FSIZE {RLIMIT_FSIZE = 1,RLIMIT_CORE = 4,RLIMIT_NOFILE = 6,};
enum MACRO_RQUOTAVERS_0 {RQUOTAVERS = 1,};
enum MACRO_RS_BLOCK_PTR {RS_BLOCK_PTR_ERR = -117,};
enum MACRO_RTLD_DEFAULT {RTLD_DEFAULT = -2,};
enum MACRO_RUSERSVERS_0 {RUSERSVERS = 2,MAXUSERS = 180,};
enum MACRO_R_PUSH_PCON2 {R_PUSH_PCON2 = 0x0,R_PUSH_SYM = 0x80,R_PUSH_PLABEL = 0x82,R_PUSH_NCON2 = 0xC0,R_COMP3 = 0xD2,};
enum MACRO_RectObjIndex {RectObjIndex = 1,XmWindowObjIndex = 2,};
enum MACRO_RectangleOut {RectangleOut = 0,RectangleIn = 1,RectanglePart = 2,};
enum MACRO_RevertToNone {RevertToNone = 0,RevertToPointerRoot = 1,RevertToParent = 2,};
enum MACRO_S9000_ID_ELM {S9000_ID_ELM = 0x26D1488C,S9000_ID_98765 = 0x27480DEF,S9000_ID_ELK_768 = 0x27482101,S9000_ID_STINGER = 0x27A4A402,};
enum MACRO_SCSI_TIMEOUT {SCSI_TIMEOUT_ABORT = 1,SCSI_TIMEOUT_ABORT_FAILED = -1,};
enum MACRO_SET_CHANNEL1 {SET_CHANNEL1_MASK = 0x2,SET_CHANNEL2_MASK = 0x4,SET_CHANNEL3_MASK = 0x8,};
enum MACRO_SET_CHANNEL4 {SET_CHANNEL4_MASK = 0x1,SET_CHANNEL5_MASK = 0x2,SET_CHANNEL6_MASK = 0x4,SET_CHANNEL7_MASK = 0x8,};
enum MACRO_SHARED_32BIT {SHARED_32BIT_QUAD4_END = -268435456,};
enum MACRO_SILI_BIT_OFF {SILI_BIT_OFF = 0,};
enum MACRO_SLLSPERBLOCK {SLLSPERBLOCK = 25,};
enum MACRO_SO_CHARACTER {SO_CHARACTER_COUNT = 0x1,SO_SKIP_SPARING = 0x2,SO_AUTO_SPARING = 0x4,SO_IMMEDIATE_REPORT = 0x8,SO_MEDIA_UNLOAD = 0x80,};
enum MACRO_STATUS_BLOCK {STATUS_BLOCK = 64,};
enum MACRO_STO_INTERNAL {STO_INTERNAL = 1,STO_HIDDEN = 2,STO_PROTECTED = 3,};
enum MACRO_STV_INTERNAL {STV_INTERNAL = 1,STV_HIDDEN = 2,STV_PROTECTED = 3,};
enum MACRO_SYS_SETPGRP2 {SYS_SETPGRP2 = 82,};
enum MACRO_SYS_audwrite {SYS_audwrite = 246,SYS_AUDSWITCH = 247,};
enum MACRO_SYS_exportfs {SYS_exportfs = 316,SYS_GETPMSG = 317,};
enum MACRO_SYS_fstatvfs {SYS_fstatvfs = 331,SYS_LCHOWN = 332,};
enum MACRO_SYS_getaudid {SYS_getaudid = 240,SYS_SETAUDID = 241,};
enum MACRO_SYS_getdents {SYS_getdents = 356,SYS_GETCONTEXT = 357,};
enum MACRO_SYS_getevent {SYS_getevent = 244,SYS_SETEVENT = 245,};
enum MACRO_SYS_getmount {SYS_getmount_cnt = 273,SYS_GETMOUNT_ENTRY = 274,};
enum MACRO_SYS_getpgrp2 {SYS_getpgrp2 = 81,SYS_SETPGID = 82,};
enum MACRO_SYS_lwp_cond {SYS_lwp_cond_init = 412,SYS_LWP_COND_SIGNAL = 413,};
enum MACRO_SYS_lwp_exit {SYS_lwp_exit = 402,SYS_LWP_CONTINUE = 403,};
enum MACRO_SYS_lwp_info {SYS_lwp_info = 396,SYS_LWP_KILL = 397,};
enum MACRO_SYS_lwp_kill {SYS_lwp_kill = 397,SYS_KSLEEP = 398,};
enum MACRO_SYS_lwp_self {SYS_lwp_self = 147,SYS_QUOTACTL = 148,};
enum MACRO_SYS_lwp_sema {SYS_lwp_sema_init = 470,SYS_LWP_SEMA_POST = 471,};
enum MACRO_SYS_lwp_wait {SYS_lwp_wait = 391,SYS_LWP_SUSPEND = 392,};
enum MACRO_SYS_mlockall {SYS_mlockall = 423,SYS_MUNLOCKALL = 424,};
enum MACRO_SYS_moduload {SYS_moduload = 484,SYS_MODPATH = 485,};
enum MACRO_SYS_mprotect {SYS_mprotect = 74,SYS_MADVISE = 75,};
enum MACRO_SYS_mq_close {SYS_mq_close = 440,SYS_MQ_UNLINK = 441,};
enum MACRO_SYS_ofgetacl {SYS_ofgetacl = 236,SYS_OSETACL = 237,};
enum MACRO_SYS_ofsetacl {SYS_ofsetacl = 238,SYS_PSTAT = 239,};
enum MACRO_SYS_pathconf {SYS_pathconf = 230,SYS_FPATHCONF = 231,};
enum MACRO_SYS_pipenode {SYS_pipenode = 177,SYS_LSYNC = 178,};
enum MACRO_SYS_preadv64 {SYS_preadv64 = 377,SYS_PWRITE64 = 378,};
enum MACRO_SYS_ptrace64 {SYS_ptrace64 = 478,SYS_SENDFILE = 479,};
enum MACRO_SYS_pwrite64 {SYS_pwrite64 = 378,SYS_PWRITEV64 = 379,};
enum MACRO_SYS_quotactl {SYS_quotactl = 148,SYS_GET_SYSINFO = 149,};
enum MACRO_SYS_readlink {SYS_readlink = 58,SYS_EXECVE = 59,};
enum MACRO_SYS_recvfrom {SYS_recvfrom = 283,SYS_RECVMSG = 284,};
enum MACRO_SYS_recvmsg2 {SYS_recvmsg2 = 384,SYS_SENDMSG2 = 385,};
enum MACRO_SYS_sched_rr {SYS_sched_rr_get_interval = 344,SYS_CLOCK_SETTIME = 345,};
enum MACRO_SYS_sendfile {SYS_sendfile = 479,SYS_SENDPATH = 480,};
enum MACRO_SYS_sendmsg2 {SYS_sendmsg2 = 385,SYS_SOCKET2 = 386,};
enum MACRO_SYS_sendpath {SYS_sendpath = 480,SYS_SENDFILE64 = 481,};
enum MACRO_SYS_setaudid {SYS_setaudid = 241,SYS_GETAUDPROC = 242,};
enum MACRO_SYS_setevent {SYS_setevent = 245,SYS_AUDWRITE = 246,};
enum MACRO_SYS_setpgrp2 {SYS_setpgrp2 = 82,SYS_SETITIMER = 83,};
enum MACRO_SYS_setpgrp3 {SYS_setpgrp3 = 39,SYS_LSTAT = 40,};
enum MACRO_SYS_setregid {SYS_setregid = 388,SYS_LWP_CREATE = 389,};
enum MACRO_SYS_shutdown {SYS_shutdown = 289,SYS_SOCKET = 290,};
enum MACRO_SYS_sigblock {SYS_sigblock = 109,SYS_SIGSETMASK = 110,};
enum MACRO_SYS_sigpause {SYS_sigpause = 111,SYS_SIGSTACK = 112,};
enum MACRO_SYS_sigqueue {SYS_sigqueue = 427,SYS_SIGWAITINFO = 428,};
enum MACRO_SYS_sigstack {SYS_sigstack = 112,SYS_GETTIMEOFDAY = 116,};
enum MACRO_SYS_truncate {SYS_truncate = 129,SYS_FTRUNCATE = 130,};
enum MACRO_SYS_ulimit64 {SYS_ulimit64 = 371,SYS_PREAD = 372,};
enum MACRO_SYS_vfsmount {SYS_vfsmount = 198,SYS_QMML = 199,};
enum MACRO_S_RECOVERRED {S_RECOVERRED_ERROR = 0x1,S_NOT_READY = 0x2,S_MEDIUM_ERROR = 0x3,S_HARDWARE_ERROR = 0x4,S_ILLEGAL_REQUEST = 0x5,S_UNIT_ATTENTION = 0x6,S_DATA_PROTECT = 0x7,S_BLANK_CHECK = 0x8,S_VENDOR_SPECIFIC = 0x9,S_COPY_ABORTED = 0xA,S_ABORTED_COMMAND = 0xB,S_EQUAL = 0xC,S_VOLUME_OVERFLOW = 0xD,S_MISCOMPARE = 0xE,S_RESERVED = 0xF,SCTL_INVALID_REQUEST = 0x100,SCTL_SELECT_TIMEOUT = 0x200,SCTL_INCOMPLETE = 0x400,SCTL_POWERFAIL = 0x800,};
enum MACRO_SmProtoMajor {SmProtoMajor = 1,};
enum MACRO_SmProtoMinor {SmProtoMinor = 0,};
enum MACRO_SmSaveGlobal {SmSaveGlobal = 0,SmSaveLocal = 1,SmSaveBoth = 2,};
enum MACRO_SunXK_PageUp {SunXK_PageUp = 0xFF55,SunXK_PageDown = 0xFF56,SunXK_Undo = 0xFF65,SunXK_Again = 0xFF66,SunXK_Find = 0xFF68,SunXK_Stop = 0xFF69,SunXK_Props = 0x1005FF70,SunXK_Front = 0x1005FF71,SunXK_Copy = 0x1005FF72,SunXK_Open = 0x1005FF73,SunXK_Paste = 0x1005FF74,SunXK_Cut = 0x1005FF75,SunXK_PowerSwitch = 0x1005FF76,SunXK_AudioLowerVolume = 0x1005FF77,SunXK_AudioMute = 0x1005FF78,SunXK_AudioRaiseVolume = 0x1005FF79,SunXK_VideoDegauss = 0x1005FF7A,SunXK_VideoLowerBrightness = 0x1005FF7B,SunXK_VideoRaiseBrightness = 0x1005FF7C,SunXK_PowerSwitchShift = 0x1005FF7D,};
enum MACRO_TCL_CHECKSUM {TCL_CHECKSUM = 1536,};
enum MACRO_TR_IF_NUNITS {TR_IF_NUNITS = 8,TR_IF_NTYPES = 7,};
enum MACRO_UNKNOWN_INTF {UNKNOWN_INTF = -1,};
enum MACRO_UNRESTRICTED {UNRESTRICTED = 0,SERVER = 1,WS = 2,};
enum MACRO_URMwcUnknown {URMwcUnknown = 1,};
enum MACRO_USB_HID_BOOT {USB_HID_BOOT_MODE = 0,USB_HID_REPORT_MODE = 1,};
enum MACRO_USB_HID_LEFT {USB_HID_LEFT_CTRL = 0x1,USB_HID_LEFT_SHIFT = 0x2,USB_HID_LEFT_ALT = 0x4,USB_HID_LEFT_GUI = 0x8,USB_HID_RIGHT_CTRL = 0x10,USB_HID_RIGHT_SHIFT = 0x20,USB_HID_RIGHT_ALT = 0x40,USB_HID_RIGHT_GUI = 0x80,};
enum MACRO_UnmapGravity {UnmapGravity = 0,};
enum MACRO_UseXKeyboard {UseXKeyboard = 0xFF,};
enum MACRO_VMTRACE_MCOR {VMTRACE_MCOR = 0x1,VMTRACE_MLEAK = 0x2,VMTRACE_MLOG = 0x4,};
enum MACRO_VisualNoMask {VisualNoMask = 0x0,VisualIDMask = 0x1,VisualScreenMask = 0x2,VisualDepthMask = 0x4,VisualClassMask = 0x8,VisualRedMaskMask = 0x10,VisualGreenMaskMask = 0x20,VisualBlueMaskMask = 0x40,VisualColormapSizeMask = 0x80,VisualBitsPerRGBMask = 0x100,VisualAllMask = 0x1FF,};
enum MACRO_WMShellIndex {WMShellIndex = 6,XmVendorShellIndex = 7,};
enum MACRO_WORD_ALIGNED {WORD_ALIGNED = 0x3,};
enum MACRO_WRDE_BADCHAR {WRDE_BADCHAR = 1,WRDE_BADVAL = 2,WRDE_CMDSUB = 3,WRDE_NOSPACE = 4,WRDE_SYNTAX = 5,WRDE_INTERNAL = 6,WRDE_NOSYS = -1,};
enum MACRO_XHPIFSuccess {XHPIFSuccess = 0,XHPIFDrawableErr = 1,XHPIFFileErr = 2,XHPIFRequestErr = 3,XHPIFAllocErr = 4,XHPIFHeaderErr = 5,};
enum MACRO_XIM_BadAlloc {XIM_BadAlloc = 1,XIM_BadStyle = 2,XIM_BadClientWindow = 3,XIM_BadFocusWindow = 4,XIM_BadArea = 5,XIM_BadSpotLocation = 6,XIM_BadColormap = 7,XIM_BadAtom = 8,XIM_BadPixel = 9,XIM_BadPixmap = 10,XIM_BadName = 11,XIM_BadCursor = 12,XIM_BadProtocol = 13,XIM_BadForeground = 14,XIM_BadBackground = 15,XIM_LocaleNotSupported = 16,XIM_BadSomething = 999,};
enum MACRO_XIM_Encoding {XIM_Encoding_NameCategory = 0,XIM_Encoding_DetailCategory = 1,XIM_Default_Encoding_IDX = -1,};
enum MACRO_XIM_MODE_PRE {XIM_MODE_PRE_GET = 1,XIM_MODE_PRE_SET = 2,XIM_MODE_PRE_CREATE = 4,XIM_MODE_PRE_ONCE = 8,XIM_MODE_PRE_DEFAULT = 16,XIM_MODE_STS_GET = 32,XIM_MODE_STS_SET = 64,XIM_MODE_STS_CREATE = 128,XIM_MODE_STS_ONCE = 256,XIM_MODE_STS_DEFAULT = 512,};
enum MACRO_XIM_OVERFLOW {XIM_OVERFLOW = -1,};
enum MACRO_XI_BadDevice {XI_BadDevice = 0,XI_BadEvent = 1,XI_BadMode = 2,XI_DeviceBusy = 3,XI_BadClass = 4,};
enum MACRO_XK_BackSpace {XK_BackSpace = 0xFF08,XK_Tab = 0xFF09,XK_Linefeed = 0xFF0A,XK_Clear = 0xFF0B,XK_Return = 0xFF0D,XK_Pause = 0xFF13,XK_Scroll_Lock = 0xFF14,XK_Sys_Req = 0xFF15,XK_Escape = 0xFF1B,XK_Delete = 0xFFFF,};
enum MACRO_XK_ISO_Group {XK_ISO_Group_Latch = 0xFE06,XK_ISO_Group_Lock = 0xFE07,XK_ISO_Next_Group = 0xFE08,XK_ISO_Next_Group_Lock = 0xFE09,XK_ISO_Prev_Group = 0xFE0A,XK_ISO_Prev_Group_Lock = 0xFE0B,XK_ISO_First_Group = 0xFE0C,XK_ISO_First_Group_Lock = 0xFE0D,XK_ISO_Last_Group = 0xFE0E,XK_ISO_Last_Group_Lock = 0xFE0F,XK_ISO_Left_Tab = 0xFE20,XK_ISO_Move_Line_Up = 0xFE21,XK_ISO_Move_Line_Down = 0xFE22,XK_ISO_Partial_Line_Up = 0xFE23,XK_ISO_Partial_Line_Down = 0xFE24,XK_ISO_Partial_Space_Left = 0xFE25,XK_ISO_Partial_Space_Right = 0xFE26,XK_ISO_Set_Margin_Left = 0xFE27,XK_ISO_Set_Margin_Right = 0xFE28,XK_ISO_Release_Margin_Left = 0xFE29,XK_ISO_Release_Margin_Right = 0xFE2A,XK_ISO_Release_Both_Margins = 0xFE2B,XK_ISO_Fast_Cursor_Left = 0xFE2C,XK_ISO_Fast_Cursor_Right = 0xFE2D,XK_ISO_Fast_Cursor_Up = 0xFE2E,XK_ISO_Fast_Cursor_Down = 0xFE2F,XK_ISO_Continuous_Underline = 0xFE30,XK_ISO_Discontinuous_Underline = 0xFE31,XK_ISO_Emphasize = 0xFE32,XK_ISO_Center_Object = 0xFE33,XK_ISO_Enter = 0xFE34,XK_dead_grave = 0xFE50,XK_dead_acute = 0xFE51,XK_dead_circumflex = 0xFE52,XK_dead_tilde = 0xFE53,XK_dead_macron = 0xFE54,XK_dead_breve = 0xFE55,XK_dead_abovedot = 0xFE56,XK_dead_diaeresis = 0xFE57,XK_dead_abovering = 0xFE58,XK_dead_doubleacute = 0xFE59,XK_dead_caron = 0xFE5A,XK_dead_cedilla = 0xFE5B,XK_dead_ogonek = 0xFE5C,XK_dead_iota = 0xFE5D,XK_dead_voiced_sound = 0xFE5E,XK_dead_semivoiced_sound = 0xFE5F,XK_dead_belowdot = 0xFE60,XK_First_Virtual_Screen = 0xFED0,XK_Prev_Virtual_Screen = 0xFED1,XK_Next_Virtual_Screen = 0xFED2,XK_Last_Virtual_Screen = 0xFED4,XK_Terminate_Server = 0xFED5,};
enum MACRO_XK_Page_Down {XK_Page_Down = 0xFF56,XK_End = 0xFF57,XK_Begin = 0xFF58,XK_Select = 0xFF60,XK_Print = 0xFF61,XK_Execute = 0xFF62,XK_Insert = 0xFF63,XK_Undo = 0xFF65,XK_Redo = 0xFF66,XK_Menu = 0xFF67,XK_Find = 0xFF68,XK_Cancel = 0xFF69,XK_Help = 0xFF6A,XK_Break = 0xFF6B,XK_Mode_switch = 0xFF7E,};
enum MACRO_XK_quoteleft {XK_quoteleft = 0x60,XK_a = 0x61,XK_b = 0x62,XK_c = 0x63,XK_d = 0x64,XK_e = 0x65,XK_f = 0x66,XK_g = 0x67,XK_h = 0x68,XK_i = 0x69,XK_j = 0x6A,XK_k = 0x6B,XK_l = 0x6C,XK_m = 0x6D,XK_n = 0x6E,XK_o = 0x6F,XK_p = 0x70,XK_q = 0x71,XK_r = 0x72,XK_s = 0x73,XK_t = 0x74,XK_u = 0x75,XK_v = 0x76,XK_w = 0x77,XK_x = 0x78,XK_y = 0x79,XK_z = 0x7A,XK_braceleft = 0x7B,XK_bar = 0x7C,XK_braceright = 0x7D,XK_asciitilde = 0x7E,XK_nobreakspace = 0xA0,XK_exclamdown = 0xA1,XK_cent = 0xA2,XK_sterling = 0xA3,XK_currency = 0xA4,XK_yen = 0xA5,XK_brokenbar = 0xA6,XK_section = 0xA7,XK_diaeresis = 0xA8,XK_copyright = 0xA9,XK_ordfeminine = 0xAA,XK_guillemotleft = 0xAB,XK_notsign = 0xAC,XK_hyphen = 0xAD,XK_registered = 0xAE,XK_macron = 0xAF,XK_degree = 0xB0,XK_plusminus = 0xB1,XK_twosuperior = 0xB2,XK_threesuperior = 0xB3,XK_acute = 0xB4,XK_mu = 0xB5,XK_paragraph = 0xB6,XK_periodcentered = 0xB7,XK_cedilla = 0xB8,XK_onesuperior = 0xB9,XK_masculine = 0xBA,XK_guillemotright = 0xBB,XK_onequarter = 0xBC,XK_onehalf = 0xBD,XK_threequarters = 0xBE,XK_questiondown = 0xBF,XK_Agrave = 0xC0,XK_Aacute = 0xC1,XK_Acircumflex = 0xC2,XK_Atilde = 0xC3,XK_Adiaeresis = 0xC4,XK_Aring = 0xC5,XK_AE = 0xC6,XK_Ccedilla = 0xC7,XK_Egrave = 0xC8,XK_Eacute = 0xC9,XK_Ecircumflex = 0xCA,XK_Ediaeresis = 0xCB,XK_Igrave = 0xCC,XK_Iacute = 0xCD,XK_Icircumflex = 0xCE,XK_Idiaeresis = 0xCF,XK_ETH = 0xD0,};
enum MACRO_XPBadContext {XPBadContext = 0,XPBadSequence = 1,XPBadResourceID = 2,};
enum MACRO_XcmsInitNone {XcmsInitNone = 0x0,XcmsInitSuccess = 0x1,XcmsInitFailure = 0xFF,};
enum MACRO_XkbErr_BadId {XkbErr_BadId = 0xFD,};
enum MACRO_XkbEventCode {XkbEventCode = 0,XkbNumberEvents = 1,};
enum MACRO_XkbSI_OpMask {XkbSI_OpMask = 0x7F,XkbSI_NoneOf = 0x0,};
enum MACRO_XkmTypesMask {XkmTypesMask = 1,XkmCompatMapMask = 2,XkmSymbolsMask = 4,XkmIndicatorsMask = 8,XkmKeyNamesMask = 16,XkmGeometryMask = 32,XkmVirtualModsMask = 64,};
enum MACRO_XmBACKGROUND {XmBACKGROUND = 1,XmFOREGROUND = 2,XmTOP_SHADOW = 4,XmBOTTOM_SHADOW = 8,XmSELECT = 16,XmHIGHLIGHT = 32,};
enum MACRO_XmCOLOR_DARK {XmCOLOR_DARK_SEL_FACTOR = 15,XmCOLOR_DARK_BS_FACTOR = 30,XmCOLOR_DARK_TS_FACTOR = 50,};
enum MACRO_XmCOLOR_LITE {XmCOLOR_LITE_SEL_FACTOR = 15,XmCOLOR_LITE_BS_FACTOR = 40,};
enum MACRO_XmFrameIndex {XmFrameIndex = 7,};
enum MACRO_XmLabelIndex {XmLabelIndex = 5,};
enum MACRO_XmMENU_BEGIN {XmMENU_BEGIN = 0,XmMENU_MIDDLE = 1,XmMENU_END = 2,};
enum MACRO_XmMainWIndex {XmMainWIndex = 8,};
enum MACRO_XmPushBIndex {XmPushBIndex = 6,};
enum MACRO_XmSTRING_TAG {XmSTRING_TAG_STRLEN = -1,};
enum MACRO_XmScaleIndex {XmScaleIndex = 7,};
enum MACRO_XmShellIndex {XmShellIndex = 5,};
enum MACRO_XtDragByPoll {XtDragByPoll = 0,XtDragByEvent = 1,};
enum MACRO_YPPASSWDPROC {YPPASSWDPROC_UPDATE = 1,};
enum MACRO_YPPASSWDPROG {YPPASSWDPROG = 100009,};
enum MACRO_YPPASSWDVERS {YPPASSWDVERS_ORIG = 1,};
enum MACRO_YPPUSH_CLEAR {YPPUSH_CLEAR = -11,};
enum MACRO_YPPUSH_FORCE {YPPUSH_FORCE = -12,};
enum MACRO_YPPUSH_MADDR {YPPUSH_MADDR = -5,};
enum MACRO_YPPUSH_NODOM {YPPUSH_NODOM = -2,};
enum MACRO_YPPUSH_YPERR {YPPUSH_YPERR = -6,};
enum MACRO__LC_MESSAGES {_LC_MESSAGES_SIZE = 256,};
enum MACRO__POSIX2_CHAR {_POSIX2_CHAR_TERM = 1,};
enum MACRO__POSIX2_COLL {_POSIX2_COLL_WEIGHTS_MAX = 2,_POSIX2_EXPR_NEST_MAX = 32,_POSIX2_LINE_MAX = 2048,};
enum MACRO__POSIX2_FORT {_POSIX2_FORT_RUN = -1,};
enum MACRO__POSIX_FSYNC {_POSIX_FSYNC = 1,};
enum MACRO__POSIX_SAVED {_POSIX_SAVED_IDS = 1,_POSIX_JOB_CONTROL = 2,_POSIX_VDISABLE = 255,};
enum MACRO__SC_PAGESIZE {_SC_PAGESIZE = 3001,_SC_SECURITY_CLASS = 10000,_SC_CPU_VERSION = 10001,_SC_IO_TYPE = 10002,_SC_MSEM_LOCKID = 10003,_SC_MCAS_OFFSET = 10004,_SC_CPU_KEYBITS1 = 10005,_SC_PROC_RSRC_MGR = 10006,_SC_SOFTPOWER = 10007,_SC_EXEC_INTERPRETER_LENGTH = 10008,_SC_SLVM_MAXNODES = 10009,_SC_SIGRTMIN = 10010,_SC_SIGRTMAX = 10011,_SC_LIBC_VERSION = 10012,_SC_KERNEL_BITS = 10013,_SC_KERNEL_IS_BIGENDIAN = 10014,_SC_HW_32_64_CAPABLE = 10015,_SC_INT_MIN = 10016,_SC_INT_MAX = 10017,_SC_LONG_MIN = 10018,_SC_LONG_MAX = 10019,_SC_SSIZE_MAX = 10020,_SC_WORD_BIT = 10021,_SC_LONG_BIT = 10022,_SC_CPU_CHIP_TYPE = 10023,};
enum MACRO__XOPEN_CRYPT {_XOPEN_CRYPT = 1,};
enum MACRO__proximityIn {_proximityIn = 0,_proximityOut = 1,};
enum MACRO_osfXK_Escape {osfXK_Escape = 0x1004FF1B,osfXK_Extend = 0x1004FF74,};
enum MACRO_osfXK_Insert {osfXK_Insert = 0x1004FF63,};
enum MACRO_osfXK_PageUp {osfXK_PageUp = 0x1004FF41,};
enum MACRO_osfXK_Select {osfXK_Select = 0x1004FF60,osfXK_SelectAll = 0x1004FF71,osfXK_SwitchDirection = 0x1004FF7E,};
enum MACRO_sym_k_not_op {sym_k_not_op = 1,sym_k_unary_plus_op = 2,sym_k_unary_minus_op = 3,sym_k_comp_str_op = 4,sym_k_wchar_str_op = 5,};
enum MACRO_sz_xCharInfo {sz_xCharInfo = 12,};
enum MACRO_sz_xFontProp {sz_xFontProp = 8,sz_xTextElt = 2,};
enum MACRO_sz_xShareReq {sz_xShareReq = 16,};
enum MACRO_sz_xieFloErr {sz_xieFloErr = 32,};
enum MACRO_sz_xieFloEvn {sz_xieFloEvn = 32,};
enum MACRO_sz_xieTypLUT {sz_xieTypLUT = 4,sz_xieTypMathOp = 1,};
enum MACRO_sz_xieTypROI {sz_xieTypROI = 4,sz_xieTypServiceClass = 1,};
typedef struct _48B3880E4699D314B19152DFBFE9205B *MrmRegisterArglist;
typedef struct _OnTheSpotDataTW OnTheSpotDataRecTW;
typedef struct _3D2747B906FBDDB46B196214774699C1 RECORD_CLIENT_INFO;
typedef struct _4E230DA965C384CCE937FCE2A8CE1FCC *SessionShellWidget;
typedef struct _6E603A4D6E053F4C38E194015FCDFC50 TransientShellPart;
typedef struct _WMShellClassRec *WMShellWidgetClass;
typedef struct _7215FCA21C9177221950E694BDF162F7 XBellFeedbackState;
typedef struct _85ADD90E39F3CB0C7E30B8F1E31A0398 XCreateWindowEvent;
typedef struct _4DED8A72E96D1A05DB0C760DC4A016D9 XDeviceButtonEvent;
typedef struct _C66AC2913D384A8D84D2D1CA0773B121 XDeviceMotionEvent;
typedef struct _XSyncSystemCounter XSyncSystemCounter;
typedef struct _CE2CC21A8DF6496E4E3BA1994C658522 XSyncWaitCondition;
typedef int ( *XcmsConversionProc)();
typedef struct _XicLocalPrivateRec XicLocalPrivateRec;
typedef struct _XicProtoPrivateRec XicProtoPrivateRec;
typedef struct _XimLocalPrivateRec XimLocalPrivateRec;
typedef struct _XimPendingCallback *XimPendingCallback;
typedef struct _XimProtoPrivateRec XimProtoPrivateRec;
typedef struct _XkbBellNotify XkbBellNotifyEvent;
typedef struct _XkbDeviceBtnAction XkbDeviceBtnAction;
typedef struct _XkbIndicatorMapRec *XkbIndicatorMapPtr;
typedef struct _XkbIndicatorMapRec XkbIndicatorMapRec;
typedef struct _XkbSymInterpretRec *XkbSymInterpretPtr;
typedef struct _XkbSymInterpretRec XkbSymInterpretRec;
typedef struct _XmActivatableTraitRec *XmActivatableTrait;
typedef struct _XmBulletinBoardRec XmBulletinBoardRec;
typedef struct _XmCascadeButtonRec XmCascadeButtonRec;
typedef struct _XmClipWindowRec *XmClipWindowWidget;
typedef struct _XmComboBoxClassRec XmComboBoxClassRec;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmCommandClassPart;
typedef struct _XmContainerDataRec XmContainerDataRec;
typedef struct _XmDesktopClassPart XmDesktopClassPart;
typedef struct _XmDialogSavvyTraitRec *XmDialogSavvyTrait;
typedef struct _C0CF6D5FED3C9B9727D7B5E4FF32FB5D XmDisplayClassPart;
typedef struct _XmDragContextClassRec *XmDragContextClass;
typedef struct _XmDragIconClassRec XmDragIconClassRec;
typedef struct _XmDragOverBlendRec XmDragOverBlendRec;
typedef struct _XmDragOverShellRec XmDragOverShellRec;
typedef struct _XmDragProcCallbackStruct *XmDragProcCallback;
typedef struct _FDEF638EE31B74BBB9D41AD628E95644 *XmDragReceiverInfo;
typedef struct _XmDropProcCallbackStruct *XmDropProcCallback;
typedef struct _XmDropTransferListRec *XmDropTransferList;
typedef struct _XmDropTransferPart XmDropTransferPart;
typedef struct _XmFrameClassRec *XmFrameWidgetClass;
typedef struct _XmIconGCacheObjRec XmIconGCacheObjRec;
typedef struct _XmIconGCacheObjRec *XmIconGCacheObject;
typedef struct _XmJoinSideTraitRec XmJoinSideTraitRec;
typedef struct _XmLabelGadgetClassRec *XmLabelGadgetClass;
typedef struct _XmLabelClassRec *XmLabelWidgetClass;
typedef struct _XmMainWindowRec *XmMainWindowWidget;
typedef struct _XmManagerClassPart XmManagerClassPart;
typedef struct _XmMessageBoxRec *XmMessageBoxWidget;
typedef struct _XmNavigatorDataRec XmNavigatorDataRec;
typedef struct _NotebookClassRec XmNotebookClassRec;
typedef struct _E063BC797211A487A47BDB1CDDBC4CF7 XmNotebookPageInfo;
typedef struct _XmPrintShellRec *XmPrintShellWidget;
typedef struct _XmProtocolClassRec XmProtocolClassRec;
typedef struct _XmPushButtonGadgetRec *XmPushButtonGadget;
typedef struct _XmPushButtonRec *XmPushButtonWidget;
typedef struct _XmRCKidGeometryRec XmRCKidGeometryRec;
typedef struct _XmScaleClassRec *XmScaleWidgetClass;
typedef struct _XmScratchPixmapKeyRec *XmScratchPixmapKey;
typedef struct _XmScrollFrameTraitRec *XmScrollFrameTrait;
typedef struct _5209941CB7D0C10FD4F27E8B15AD14E1 XmSelectionBoxPart;
typedef struct _XmShellExtClassRec XmShellExtClassRec;
typedef struct _XmSimpleSpinBoxRec XmSimpleSpinBoxRec;
typedef struct _XmSpinBoxClassPart XmSpinBoxClassPart;
typedef struct _XmTearOffButtonRec XmTearOffButtonRec;
typedef struct _XmTextLineTableRec XmTextLineTableRec;
typedef struct _D89E607749B4D1F5D66FC1721C178233 *XmTextVerifyPtrWcs;
typedef struct _XmToggleButtonPart XmToggleButtonPart;
typedef struct _XmTransferTraitRec XmTransferTraitRec;
typedef struct _XmVirtualKeysymRec XmVirtualKeysymRec;
typedef struct _XmWidgetExtDataRec XmWidgetExtDataRec;
typedef struct _A47C75AE74EA14FC2F54815F4A8813BA *XtGeometryHookData;
typedef struct _1AA7F1335C4C6CFF07A82EACE5F12A97 _IceProcessMsgInfo;
typedef struct _BD361926F3A07F7106AD6464DEEBCE27 _LC_core_charmap_t;
typedef struct _B4A4B66D2E6C3EE1B1D54A215021FA61 _LC_core_collate_t;
typedef struct _F0052A01C3D1A009220C94DA25225D1E _LC_core_numeric_t;
struct _XkbComponentNames {char *keymap;char *keycodes;char *types;char *compat;char *symbols;char *geometry;};
struct __nsw_switchconfig {int vers;char *dbase;int num_lookups;struct __nsw_lookup *lookups;};
struct _db_globals_struct {int version;int uil_max_arg;int uil_max_charset;int charset_lang_table_max;int uil_max_object;int uil_max_reason;int uil_max_enumval;int uil_max_enumset;int key_k_keyword_count;int key_k_keyword_max_length;int uil_max_child;};
struct _descriptor_set0_t {unsigned int length;};
struct _phys_desc_flags_t {unsigned int effort;};
typedef struct _70A9562056F67DACEF60FAD2632E0937 cascade_cntrl_desc;
typedef struct _BDC2BC4E1FC4E3665C531F87A904F1CB changeDeviceNotify;
typedef struct _6D54C15C1E6E6575901DF83330F155E4 cio_dma_reply_type;
typedef struct _5FA36CED10B8B6FD8E7AA456D875B9FC comsec_nss_parms_t;
typedef struct _6E021F31F73E4CDD452D268F50E8CCC0 creation_info_type;
typedef struct _32D4AADC56619380327806CDA46BE7E6 crt_frame_buffer_t;
typedef struct _5F2581EFA5F095F1677DD26E57B1FC1D da_info_table_type;
typedef struct _286EA9114F2F3A904E3DC91FCEB716A0 dam_lock_info_type;
typedef struct _A55EC71C5CB1FC4F12702587008E634D diag_req_info_type;
typedef struct _4C2C40102FE02EE57912F207AF83DC3C disk_describe_type;
struct disktab__partition {int p_size;short p_bsize;short p_fsize;};
typedef struct _58330DD7ED50E0D1B016F20AC1EEBF6A dl_enabmulti_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_link_down_ind_t;
typedef struct _58330DD7ED50E0D1B016F20AC1EEBF6A dl_phys_addr_ack_t;
typedef struct _69A7D2DDFB50C675CD41E5682D0C8DC9 dl_phys_addr_req_t;
typedef struct _83A32DBCC5475A0421ADD26B5424DCBB dl_promiscon_req_t;
typedef struct _54EA74D72ADA89C2802A85C6983015A7 dl_qos_cl_range1_t;
typedef struct _741FF3E04B05F2C21E0DB832A952F2AD dl_qos_co_range1_t;
typedef struct _2B984BA6A93DC72E5B9A509864FD0EBE dl_subs_bind_ack_t;
typedef struct _3EA3A21D55B8CD98827DAEDDCCDF7183 dl_subs_bind_req_t;
typedef struct _D90C9031D269F93C88B34E2B5464A64B do_bind_reply_type;
typedef struct _128846696A0AF303C7B67A876F3BD8E7 do_unbind_req_type;
struct excal_pfail_status {unsigned char msg_len;unsigned char status_flag;unsigned char data_loss_flag;unsigned char first_host_block_not_written_addr[4];};
typedef struct _2B411D419EAE038198223E092111BC6D fcp_dev_log_info_t;
typedef struct _94B10172A4995A66031F1662354B7713 fcp_mux_log_info_t;
typedef struct _70F891D3DFE5F5563C0C4B91897BCFD5 get_opt_parms_type;
typedef struct _03CB082776F9E7204BA8107224DE5806 gpio1_message_type;
typedef struct _A494BB2C12950076D57A9A446D5D8018 hw_rollcall_format;
typedef struct _3B80496DCDE561EAC81E803683D00588 iceAuthRequiredMsg;
typedef struct _E5E55CAD8ECB129EA540E15CC43132FC iodc_hversion_type;
typedef struct _C72A05A9A89CB5CAE1B94D9CDA4D73F7 iodc_sversion_type;
typedef struct kd_thread_create kd_thread_create_t;
typedef struct _82FDC3B738EB124BDE7E441D9AE5DEF7 mib_Dot3StatsEntry;
typedef struct _0D6E5C2D914B483D77C02330A0CE773D mib_Dot5StatsEntry;
typedef struct _BA6F146A8875BE4D14324A167F2E4000 mib_Dot5TimerEntry;
typedef union pdc_capabilities pdc_capabilities_t;
typedef union pdc_pat_cell_mod pdc_pat_cell_mod_t;
struct pdc_pim_data_block {int data[512];};
typedef int pthread_condattr_t;
typedef struct _3E2FA201846E68D32C6E2BCBE5CC4D3C read_position_type;
typedef rpcbs_addrlist *rpcbs_addrlist_ptr;
typedef struct _83CB33CAC2707097E650C7C1ACF13AE9 scsi_ctrl_req_type;
typedef struct _97824D292CB3BFD64DCF032B8AE1F8A2 scsi_io_reply_type;
typedef struct _0C4BDC5C14F9FAF0AFA7E8A6E763419C scsi_unfreeze_type;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smGetPropertiesMsg;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smSetPropertiesMsg;
typedef struct _8A0C73BF129480B377085AACADB6EBAD ss_N_fmt_flag_type;
typedef struct _E2235DDCCCA1BC4668AAB86308430B74 sym_obj_entry_type;
typedef struct _ACACF89959AB7FA4D62A66E189D600C8 tape_acl_ctrl_type;
typedef int terminal_ctrl_type;
typedef struct _61E2EBDBC07397AF1726E583C640F08F transfer_mode_type;
typedef struct _AC22C39C8ED13EB46142D7E126F969C6 xAnyExtensionEvent;
typedef struct _15B26EF61FAF3427F660B22EA1DD1EB1 xBellFeedbackState;
typedef struct _56236F995320E9550D01648098F1E75E xChangePropertyReq;
typedef struct _7CA3BFA0E2ACF16B623A64955922766D xCreateColormapReq;
typedef struct _ABE60368F0168DDE4E32B527D5287C6B xDPMSForceLevelReq;
typedef struct _02B7C110B96F422043FD747664A5A945 xDPMSGetVersionReq;
typedef struct _DF21E726BD65398407620C5BBBA9E08C xDeletePropertyReq;
typedef struct _8973D72E68A3D7427BDE924AB847E810 xGetDeviceFocusReq;
typedef struct _BFA06AD98FBBDDEDC0B582E2B4AC4030 xHPDisableResetReq;
typedef struct _7E62CC70772B05F37392B1746CC4A8DA xHPGetClipListsReq;
typedef struct _C6DB73EBDDFB13DF2FA8D027C3235A3C xHPGrabDeviceReply;
typedef struct _61914AF5102B2D237A41D3779282DDDF xHPUnGrabDeviceReq;
typedef struct _PrintStartPage xPrintStartPageReq;
typedef struct _32453B3EC12C1083BBBEA47A258ADABA xQueryExtensionReq;
typedef struct _616DFE8EE921B679729534094133FEFF xQueryPointerReply;
typedef struct _FF2B271BD07173775CE163A4BE842405 xReparentWindowReq;
typedef struct _F1FFDF0E76C6F940FFACBA8A13B33CEB xSetDeviceFocusReq;
typedef struct _A27B2EF13B029B6AC017266492BED372 xSetScreenSaverReq;
typedef struct _6AD1C0C303B7C98984BF80315D836E89 xStringFeedbackCtl;
typedef struct _504B016FD037AF4CEAA065367FBF726A xieDecodeNotifyEvn;
typedef struct _B5CF7BA2901ABDB4A7D5E18D4AD5B79B xieFloConvertToRGB;
typedef struct _08D1E73019D0DDEC0EBB545A043C5282 xieFloTechniqueErr;
typedef struct _A9429A734A24E6AA93342D0A902F5447 xiePhotofloDoneEvn;
typedef struct _7BDACCE6E93DF8E6ADBB258A595CFD05 xieTecGeomGaussian;
typedef struct _A1E1C4876F7B4B8EFD713F49F668C581 xieTypTechniqueRec;
typedef struct _xkbCompatMapNotify xkbCompatMapNotify;
typedef struct _xkbGetCompatMap xkbGetCompatMapReq;
typedef struct _xkbGetKbdByName xkbGetKbdByNameReq;
typedef struct _xkbIndicatorNotify xkbIndicatorNotify;
typedef struct _xkbKeyTypeWireDesc xkbKeyTypeWireDesc;
typedef struct _xkbOutlineWireDesc xkbOutlineWireDesc;
typedef struct _xkbOverlayWireDesc xkbOverlayWireDesc;
typedef struct _xkbSectionWireDesc xkbSectionWireDesc;
typedef struct _xkbSelectEvents xkbSelectEventsReq;
typedef struct _xkbSetCompatMap xkbSetCompatMapReq;
typedef struct _xkbUseExtension xkbUseExtensionReq;
typedef struct _xkbVModMapWireDesc xkbVModMapWireDesc;
typedef struct _CompositeClassRec CompositeClassRec;
typedef struct _LineTableExtraRec LineTableExtraRec;
enum MACRO_AMG_DM_READ {AMG_DM_READ_STATUS = -23,};
enum MACRO_AMG_DM_SELF {AMG_DM_SELF_TEST_FAIL = -6,};
enum MACRO_AUDIO_RESET {AUDIO_RESET = 536887569,AUDIO_PAUSE = 536887570,AUDIO_RESUME = 536887571,AUDIO_DRAIN = 536887572,};
enum MACRO_AUD_SUSPEND {AUD_SUSPEND = 1,AUD_RESUME = 0,AUD_SET = 0,};
enum MACRO_AUTH_REWIND {AUTH_REWIND = 0,AUTH_CURPOS = 1,};
enum MACRO_AUTH_SILENT {AUTH_SILENT = 0,AUTH_LIMITED = 1,AUTH_VERBOSE = 2,};
enum MACRO_A_UNDERLINE {A_UNDERLINE = 0x20000,};
enum MACRO_BIEXTENSION {BIEXTENSION = 0,};
enum MACRO_BITSPERBYTE {BITSPERBYTE = 8,};
enum MACRO_BOOTDEV_MEM {BOOTDEV_MEM_AREA = 0x3D0,KEYBOARD_MEM_AREA = 0x400,};
enum MACRO_CDMAXNAMLEN {CDMAXNAMLEN = 37,CDMAXRRNAMLEN = 255,};
enum MACRO_CDMINNAMLEN {CDMINNAMLEN = 1,CDROM_IS_DIR = 2,MAX_CDDIR_RECLEN = 256,};
enum MACRO_CIOC_MIRROR {CIOC_MIRROR = -1073716192,};
enum MACRO_CIOC_UNLOAD {CIOC_UNLOAD = 536896514,};
enum MACRO_CIO_ABORTED {CIO_ABORTED_WHILE_ACTIVE = -39,};
enum MACRO_CIO_ALREADY {CIO_ALREADY_LOCKED = -51,};
enum MACRO_CIO_CHANNEL {CIO_CHANNEL_NOT_READY = -23,};
enum MACRO_CIO_COMPLTN {CIO_COMPLTN_ADDR_INVALID = -60,};
enum MACRO_CIO_DAM_HAS {CIO_DAM_HAS_PENDING_REQUEST = -9,};
enum MACRO_CIO_ILLEGAL {CIO_ILLEGAL_META_FOR_BINDING = -4,};
enum MACRO_CIO_INVALID {CIO_INVALID_ADAPTER_TYPE = -20,};
enum MACRO_CIO_NO_DATA {CIO_NO_DATA_RESOURCES = -14,};
enum MACRO_CIO_NO_QUAD {CIO_NO_QUAD_ENTRY_RESOURCES = -15,};
enum MACRO_CIO_REQUEST {CIO_REQUEST_LIST_BAD = -19,};
enum MACRO_CIO_RESIDUE {CIO_RESIDUE_ADDR_INVALID = -59,};
enum MACRO_CIO_UNKNOWN {CIO_UNKNOWN_MESSAGE_ERROR = -104,};
enum MACRO_CLSET_RETRY {CLSET_RETRY_TIMEOUT = 4,CLGET_RETRY_TIMEOUT = 5,};
enum MACRO_CONSOLE_MEM {CONSOLE_MEM_AREA = 0x3A0,};
enum MACRO_CONV_BADFMT {CONV_BADFMT = -2,};
enum MACRO_CORE_FORMAT {CORE_FORMAT_VERSION = 1,};
enum MACRO_CPR_DM_SELF {CPR_DM_SELF_TEST_FAIL = -6,};
enum MACRO_CPS_GETWAIT {CPS_GETWAIT = 0,CPS_SETWAIT = 1,CPS_SETWAITI = 2,};
enum MACRO_CPS_SUSPEND {CPS_SUSPEND = 1,CPS_SPINWAIT = 2,CPS_WAIT_MAX = 700000,};
enum MACRO_CRASH_EVENT {CRASH_EVENT_TABLE_SIZE = 2048,};
enum MACRO_CS80_CMD_TO {CS80_CMD_TO = -91,};
enum MACRO_CS80_DRP_TO {CS80_DRP_TO_NCIC = -101,};
enum MACRO_CS80_REP_TO {CS80_REP_TO_NCIC = -98,};
enum MACRO_CurrentTime {CurrentTime = 0,};
enum MACRO_CursorShape {CursorShape = 0,TileShape = 1,StippleShape = 2,};
enum MACRO_DAM_MAX_NUM {DAM_MAX_NUM_STD_MSGS = 64,};
enum MACRO_DAM_UNKNOWN {DAM_UNKNOWN_TSTAT = -127,};
enum MACRO_DA_LOOPBACK {DA_LOOPBACK_FAILED = -38,};
enum MACRO_DEFAULT_ALT {DEFAULT_ALT_STRTAB = -2,ALT_OWN_MAJOR = -1,};
enum MACRO_DEMAND_MODE {DEMAND_MODE = 0x0,SINGLE_MODE = 0x40,BLOCK_MODE = 0x80,CASCADE_MODE = 0xC0,};
enum MACRO_DES_DECRYPT {DES_DECRYPT = 1,DES_DEVMASK = 2,};
enum MACRO_DEVICE_BITS {DEVICE_BITS = 0x7F,};
enum MACRO_DEV_REIMAGE {DEV_REIMAGE_MASK = 0x400000,DEV_BACKUP_MASK = 0x200000,};
enum MACRO_DIAGNOSTICS {DIAGNOSTICS_SUBQ = 2,FIRST_IOSUBQ = 4,LAST_IOSUBQ = 19,TIMER_INIT_SUBQ = 20,TIMER_LOGC_ABORT_SUBQ = 21,TIMER_SUBC_SUBQ = 22,TIMER_MERR_SUBQ = 23,};
enum MACRO_DISABLE_ALL {DISABLE_ALL_CHANNELS = 0x4,ROTATING_PRIORITY = 0x10,DRQ_LOW = 0x40,DAK_HIGH = 0x80,};
enum MACRO_DL_HP_CLEAR {DL_HP_CLEAR_STATS_REQ = 0xEB,};
enum MACRO_DL_HP_FORCE {DL_HP_FORCE_DISCONNECT_REQ = 0xFB,};
enum MACRO_DL_HP_RESET {DL_HP_RESET_STATS_REQ = 0xE7,};
enum MACRO_DL_HP_SET_P {DL_HP_SET_P_TO_REQ = 0xF3,};
enum MACRO_DL_HP_TRACE {DL_HP_TRACE_ON_REQ = 0xFA,};
enum MACRO_DL_OUTSTATE {DL_OUTSTATE = 0x3,DL_SYSERR = 0x4,DL_UNSUPPORTED = 0x7,DL_UNDELIVERABLE = 0x11,DL_NOTSUPPORTED = 0x12,DL_TOOMANY = 0x13,DL_NOTENAB = 0x14,DL_BUSY = 0x15,DL_NOAUTO = 0x16,DL_NOXIDAUTO = 0x17,DL_NOTESTAUTO = 0x18,DL_XIDAUTO = 0x19,DL_TESTAUTO = 0x1A,DL_PENDING = 0x1B,};
enum MACRO_DL_UNITDATA {DL_UNITDATA_REQ = 0x7,DL_UNITDATA_IND = 0x8,DL_UDERROR_IND = 0x9,DL_UDQOS_REQ = 0xA,DL_CONNECT_REQ = 0xD,DL_CONNECT_IND = 0xE,DL_CONNECT_RES = 0xF,DL_CONNECT_CON = 0x10,DL_TOKEN_REQ = 0x11,DL_TOKEN_ACK = 0x12,DL_DISCONNECT_REQ = 0x13,DL_DISCONNECT_IND = 0x14,DL_RESET_REQ = 0x17,DL_RESET_IND = 0x18,DL_RESET_RES = 0x19,DL_RESET_CON = 0x1A,DL_DATA_ACK_REQ = 0x21,DL_DATA_ACK_IND = 0x22,DL_DATA_ACK_STATUS_IND = 0x23,DL_REPLY_REQ = 0x24,DL_REPLY_IND = 0x25,DL_REPLY_STATUS_IND = 0x26,DL_REPLY_UPDATE_REQ = 0x27,DL_REPLY_UPDATE_STATUS_IND = 0x28,DL_XID_REQ = 0x29,DL_XID_IND = 0x2A,DL_XID_RES = 0x2B,DL_XID_CON = 0x2C,DL_TEST_REQ = 0x2D,DL_TEST_IND = 0x2E,DL_TEST_RES = 0x2F,DL_TEST_CON = 0x30,DL_PHYS_ADDR_REQ = 0x31,DL_PHYS_ADDR_ACK = 0x32,DL_SET_PHYS_ADDR_REQ = 0x33,DL_GET_STATISTICS_REQ = 0x34,DL_GET_STATISTICS_ACK = 0x35,};
enum MACRO_DMA_CHANNEL {DMA_CHANNEL_MASK = 0x7,DMA_SHARED = 0x40,DMA_MORE_ENTRIES = 0x80,};
enum MACRO_DO_EXTERNAL {DO_EXTERNAL_LOOPBACK = 49,RESET_STATISTICS = 50,RESET_INTERFACE = 51,ADD_MULTICAST = 52,DELETE_MULTICAST = 53,ENABLE_BROADCAST = 54,DISABLE_BROADCAST = 55,LOG_DSAP = 56,LOG_SSAP = 57,LOG_SNAP_TYPE = 803,};
enum MACRO_DT_ENCODING {DT_ENCODING = 30,DT_PREINIT_ARRAY = 32,DT_PREINIT_ARRAYSZ = 33,DT_LOOS = 1610612736,DT_HIOS = 1879048191,DT_LOPROC = 1879048192,DT_HIPROC = 2147483647,};
enum MACRO_DT_HP_DEBUG {DT_HP_DEBUG_PRIVATE = 0x1,DT_HP_DEBUG_CALLBACK = 0x2,DT_HP_DEBUG_CALLBACK_BOR = 0x4,DT_HP_NO_ENVVAR = 0x8,DT_HP_BIND_NOW = 0x10,DT_HP_BIND_NONFATAL = 0x20,DT_HP_BIND_VERBOSE = 0x40,DT_HP_BIND_RESTRICTED = 0x80,DT_HP_BIND_SYMBOLIC = 0x100,DT_HP_RPATH_FIRST = 0x200,DT_HP_BIND_DEPTH_FIRST = 0x400,DT_HP_GST = 0x800,DT_HP_SHLIB_FIXED = 0x1000,DT_HP_MERGE_SHLIB_SEG = 0x2000,DT_HP_NODELETE = 0x4000,DT_HP_GROUP = 0x8000,DF_HP_INTERPOSER = 0x80000000,};
enum MACRO_DXK_cedilla {DXK_cedilla_accent = 0x1000FE2C,};
enum MACRO_D_ALLCLOSES {D_ALLCLOSES = 0x2,D_IN_CLOSE = 0x4,D_MISSED_CLOSE = 0x8,D_WAIT_CLOSE = 0x10,DEVHSZ = 0x100,};
enum MACRO_ECTEST_TYPE {ECTEST_TYPE = 0x8003,};
enum MACRO_EISA1_IOMAP {EISA1_IOMAP_ADDR_OFFSET = 0x100000,EISA1_IOMAP_ADDR = 0xFC100000,};
enum MACRO_EISA_ENABLE {EISA_ENABLE = 0x1,EISA_IOCHKERR = 0x2,CFG_NOT_COMPLETE = 0x80,};
enum MACRO_ELFDATANONE {ELFDATANONE = 0,ELFDATA2LSB = 1,ELFDATA2MSB = 2,};
enum MACRO_EvenOddRule {EvenOddRule = 0,WindingRule = 1,};
enum MACRO_FATAL_ERROR {FATAL_ERROR = 128,};
enum MACRO_FCMD_SR0_IC {FCMD_SR0_IC_OK = 0x0,FCMD_SR0_IC_AT = 0x40,FCMD_SR0_IC_IC = 0x80,FCMD_SR0_IC_RY = 0xC0,};
enum MACRO_FNM_NOMATCH {FNM_NOMATCH = 1,FNM_NOSYS = 2,FNM_EPERIOD = 3,FNM_ESLASH = 4,};
enum MACRO_FP_ILOGBNAN {FP_ILOGBNAN = -2147483648,};
enum MACRO_FamilyLocal {FamilyLocal = 256,FamilyWild = 65535,};
enum MACRO_GCSETSELECT {GCSETSELECT = 536889133,GCSETMON = 536889134,};
enum MACRO_GCVERTBLANK {GCVERTBLANK_WAIT = 536889137,};
enum MACRO_GIOCREADREG {GIOCREADREG = 26368,GIOCWRITEREG = 26369,};
enum MACRO_GrabSuccess {GrabSuccess = 0,AlreadyGrabbed = 1,GrabInvalidTime = 2,GrabNotViewable = 3,GrabFrozen = 4,};
enum MACRO_HEXKEYBYTES {HEXKEYBYTES = 48,KEYSIZE = 192,};
enum MACRO_HID_CONTROL {HID_CONTROL_FILE = 0xFFFFFF,};
enum MACRO_HISTORYMASK {HISTORYMASK = 8191,};
enum MACRO_HPIB_SYSTEM {HPIB_SYSTEM_CTLR = 22,HPIB_CONTROL_INTR = 23,HPIB_SECONDARY = 24,};
enum MACRO_HPPAC_ERROR {HPPAC_ERROR_CODE = 0x1000000,HPPAC_ESCAPECODE = 0x700C8,};
enum MACRO_IEEE8024_FC {IEEE8024_FC = 0x62,};
enum MACRO_IEEE8025_16 {IEEE8025_16_MTU = 4170,FC_MTU = 65280,};
enum MACRO_IEEE8025_AC {IEEE8025_AC = 0x10,IEEE8025_FC = 0x40,};
enum MACRO_INFORMATIVE {INFORMATIVE = 0x1,WARNING = 0x2,};
enum MACRO_INIT_ACCESS {INIT_ACCESS_BYTE = 0x0,INIT_ACCESS_WORD = 0x1,INIT_ACCESS_DWORD = 0x2,INIT_MASK = 0x4,INIT_MORE_ENTRIES = 0x80,};
enum MACRO_INIT_SEARCH {INIT_SEARCH_FIRST = 2,};
enum MACRO_INTEGERTYPE {INTEGERTYPE = -2,};
enum MACRO_INT_LEAST16 {INT_LEAST16_MIN = -32768,};
enum MACRO_IPOPT_SECUR {IPOPT_SECUR_UNCLASS = 0x0,IPOPT_SECUR_CONFID = 0xF135,};
enum MACRO_I_PRIVIOCTL {I_PRIVIOCTL = 0x80,};
enum MACRO_IceBadMajor {IceBadMajor = 0,IceNoAuth = 1,IceNoVersion = 2,IceSetupFailed = 3,IceAuthRejected = 4,IceAuthFailed = 5,IceProtocolDuplicate = 6,IceMajorOpcodeDuplicate = 7,IceUnknownProtocol = 8,};
enum MACRO_IceLSBfirst {IceLSBfirst = 0,IceMSBfirst = 1,};
enum MACRO_InProximity {InProximity = 0,OutOfProximity = 2,};
enum MACRO_InputOutput {InputOutput = 1,InputOnly = 2,};
enum MACRO_KERNELSPACE {KERNELSPACE = 0,MAXCOMLEN = 14,NOFILE = 60,TWO_GIG = -2147483648,};
enum MACRO_KI_ALLOCREG {KI_ALLOCREG = 1,KI_FREEREG = 2,KI_DUPREG = 3,KI_GROWREG = 4,};
enum MACRO_KI_FREEPREG {KI_FREEPREG = 1,KI_DUPPREGION = 2,KI_ATTACHREG = 3,KI_GROWPREG = 4,};
enum MACRO_KI_SOCKREGD {KI_SOCKREGD = 595,};
enum MACRO_KI_STRSCHED {KI_STRSCHED_KXTI_S = 592,};
enum MACRO_KI_SUIDPROC {KI_SUIDPROC = 16,KI_RFSCALL = 19,KI_RFS_DISPATCH = 20,KI_SETRQ = 21,KI_DO_BIO = 22,KI_USERPROC = 23,KI_MEMFREE = 24,KI_ASYNCPAGEIO = 25,KI_LOCALLOOKUPPN = 26,KI_FAULT = 27,KI_MISS_ALPHA = 28,KI_PREGION = 29,KI_REGION = 30,KI_ACTIVE = 31,KI_SMOUNT = 32,KI_UMOUNT_VFS = 33,KI_THREAD_CREATE = 34,KI_THREAD_EXIT = 35,KI_MAXKERNCALLS = 50,KI_MAXSYSCALLS = 600,};
enum MACRO_KPFDISABLED {KPFDISABLED = 0,KPFENABLED = 1,};
enum MACRO_LASTV_32BIT {LASTV_32BIT_ADDR = 0xFFFFFFFF,};
enum MACRO_LDBL_MAX_10 {LDBL_MAX_10_EXP = 4932,};
enum MACRO_LDM_CREATED {LDM_CREATED = 0,LDM_BINDING = 1,LDM_NORMAL = 2,LDM_UNBOUND = -2,};
enum MACRO_LE_PR_UNSUP {LE_PR_UNSUP_FAMILY = 2001,LE_PR_ZERO_SEQNO = 2002,LE_PR_VREQ_HDR_SMALL = 2003,LE_PR_VREQ_DATA_SHORT = 2004,LE_PR_VREQ_BAD_REPLEN = 2005,LE_PR_VREQ_BAD_DREPLEN = 2006,LE_PR_VREQ_BAD_VERSION = 2007,LE_PR_VREQ_BAD_DOMAIN = 2008,LE_PR_VTAB_OVERFLOW = 2009,LE_PR_ARP_SHORT = 2010,LE_PR_ARP_DUP_IP = 2012,LE_PR_BAD_MBUF_CHAIN = 2013,LE_PR_BAD_MBUF_LEN = 2014,LE_PR_PULLUP_FAIL = 2015,LE_PR_BAD_HDR_LEN = 2016,LE_PR_BAD_VERSION = 2017,LE_PR_BAD_PACKET_TYPE = 2018,LE_PR_NREQ_TOO_SMALL = 2019,LE_PR_SET_NODE_NAME = 2020,LE_PR_BAD_NPR_RCVD = 2021,LE_PR_BAD_PR_GLA = 3000,LE_PR_BAD_PR_VTNEW = 3001,LE_PR_VSEQ_NOT_FOUND = 3002,LE_PR_BAD_GET_NODENAME = 3004,LE_PR_BAD_SEND_UNSOL = 3005,LE_PR_BAD_PR_NTNEW = 3006,LE_PR_NSEQ_NOT_FOUND = 3007,LE_PR_BAD_BUILD_PATH = 3008,LE_PR_BAD_SEND_NREP = 3009,LE_PR_BC_NO_MEM = 4000,LE_PR_VWHO_NO_MEM = 4001,LE_PR_ARPWHO_NO_MEM = 4002,LE_PR_UNSOL_NO_MEM = 4003,LE_PR_MA_CHARGE_FAIL = 4004,LE_PR_NWHO_NO_MEM = 4005,LE_PR_MPULLUP_NO_MEM = 4006,LE_PR_ARP_NO_MEM = 4007,LE_PR_HOST_UNREACH = 5000,LE_PR_VREQ_IP_NOT_IF = 5001,LE_PR_UNSUP_PACKET_TYPE = 5002,LE_PR_ARP_UNSUP_PROTO = 5003,};
enum MACRO_LLIO_BAD_HM {LLIO_BAD_HM_PORT_NUM = -22,};
enum MACRO_LLIO_CANNOT {LLIO_CANNOT_DO_UNBIND = -14,};
enum MACRO_LLIO_DEVICE {LLIO_DEVICE_RESET = -34,};
enum MACRO_LLIO_LOCKED {LLIO_LOCKED_BY_OTHER = -27,};
enum MACRO_LLIO_MEDIUM {LLIO_MEDIUM_ERROR = -78,};
enum MACRO_LLIO_MEMORY {LLIO_MEMORY_ERROR = -26,};
enum MACRO_LLIO_NORMAL {LLIO_NORMAL = 0,LLIO_RETRY_INCURRED = 1,LLIO_BEGINNING_OF_MEDIA = 2,LLIO_LOCK_STAT_ALREADY = 3,LLIO_MARGINAL_DATA = 4,LLIO_BIND_HW_TO = 5,LLIO_BIND_HW_ERR = 6,LLIO_EOF_FOUND = 7,LLIO_END_MEDIA = 8,LLIO_NORMAL_STATUS = 9,LLIO_READ_TERM_BY_AEOR = 10,LLIO_SETMARK_FOUND = 11,LLIO_CANNOT_IDY = 12,LLIO_HWRELOC_SUCCESS = 13,LLIO_NO_REDUNDANCY = 14,};
enum MACRO_LLIO_NOT_LM {LLIO_NOT_LM_BOUND = -19,};
enum MACRO_LLIO_ONLINE {LLIO_ONLINE_DISK_FAILED = -64,};
enum MACRO_LLIO_PARITY {LLIO_PARITY_ERROR = -48,};
enum MACRO_LLIO_UNINIT {LLIO_UNINIT_MEDIA = -36,};
enum MACRO_LOG_PRIMASK {LOG_PRIMASK = 0x7,};
enum MACRO_MAXHADDRLEN {MAXHADDRLEN = 6,};
enum MACRO_MAXIOCBLKSZ {MAXIOCBLKSZ = 8192,};
enum MACRO_MAXLNAMELEN {MAXLNAMELEN = 14,_LC_ALL_SIZE = 256,_LC_COLLATE_SIZE = 1024,_LC_CTYPE_SIZE = 2456,};
enum MACRO_MAXSYMLINKS {MAXSYMLINKS = 20,};
enum MACRO_MAXSYMNMLEN {MAXSYMNMLEN = 1024,};
enum MACRO_MAX_MACHINE {MAX_MACHINE_NAME = 255,};
enum MACRO_MEMRESERVED {MEMRESERVED = 0,GW_PAGE_VADDR = -1073741824,};
enum MACRO_MEM_CONTROL {MEM_CONTROL_INIT = 0x0,MEM_CONTROL_NORMAL = 0x100,MEM_HERR_SPA = 0x400,MEM_AERR_CORR = 0x6000,MEM_HERR_UNCORR = 0x6400,MEM_AERR_MAP = 0x6800,};
enum MACRO_MEM_CONT_HI {MEM_CONT_HI = 0x340,MEM_PHSIZE = 0x354,};
enum MACRO_MERC_DM_NOT {MERC_DM_NOT_ONLINE = -15,};
enum MACRO_MIN_TIMEOUT {MIN_TIMEOUT = 1,MIN_REG_NUM = 0,};
enum MACRO_MT_INSTANCE {MT_INSTANCE_MASK = 0xFF,};
enum MACRO_MT_ISSTREAM {MT_ISSTREAM = 0x5,MT_ISSCSI1 = 0x8,MT_PROP_MAX = 0x1F,BLOCK_SIZE_MAX = 0xFFFFFFFF,};
enum MACRO_MT_PROPERTY {MT_PROPERTY_TABLE_VAL = 0xFFFFFE,};
enum MACRO_MULTIBUFFER {MULTIBUFFER_MAJOR_VERSION = 1,};
enum MACRO_MWM_TEAROFF {MWM_TEAROFF_WINDOW = 1,};
enum MACRO_MrmRtypeMax {MrmRtypeMax = 33,MrmMaxResourceSize = 65535,};
enum MACRO_MrmRtypeMin {MrmRtypeMin = 1,};
enum MACRO_NACLENTRIES {NACLENTRIES = 16,};
enum MACRO_ND_HOSTSERV {ND_HOSTSERV = 0,ND_HOSTSERVLIST = 1,ND_ADDR = 2,ND_ADDRLIST = 3,ND_TRY_AGAIN = -5,ND_NO_RECOVERY = -4,ND_NO_DATA = -3,};
enum MACRO_NETDIAG_SET {NETDIAG_SET_MASK = 1,NETDIAG_RESET_MASK = 2,NETDIAG_RESET_ALL_MASK = 3,NETDIAG_SET_TO_MINUS_1 = 4,MAX_CARD_INSTANCE = 255,};
enum MACRO_NFS_VERSION {NFS_VERSION = 2,NFS_PORT = 2049,};
enum MACRO_NFS_VERSMIN {NFS_VERSMIN = 2,NFS_VERSMAX = 3,};
enum MACRO_NIS_MAXPATH {NIS_MAXPATH = 1024,NIS_MAXREPLICAS = 128,NIS_MAXLINKS = 16,NIS_PK_NONE = 0,};
enum MACRO_NMCISCOIGRP {NMCISCOIGRP = 11,NMBBNSPFIGP = 12,NMOSPF = 13,};
enum MACRO_NO_SETMARKS {NO_SETMARKS = 0,NO_SPACE_TO_EOD = 0,NO_STACKER = 0,NO_WRITE_0_FILEMARK = 0,};
enum MACRO_NS_LC_COUNT {NS_LC_COUNT = 6,};
enum MACRO_NoEventMask {NoEventMask = 0,KeyPressMask = 1,KeyReleaseMask = 2,ButtonPressMask = 4,ButtonReleaseMask = 8,EnterWindowMask = 16,LeaveWindowMask = 32,PointerMotionMask = 64,PointerMotionHintMask = 128,Button1MotionMask = 256,Button2MotionMask = 512,Button3MotionMask = 1024,Button4MotionMask = 2048,Button5MotionMask = 4096,ButtonMotionMask = 8192,KeymapStateMask = 16384,ExposureMask = 32768,VisibilityChangeMask = 65536,StructureNotifyMask = 131072,ResizeRedirectMask = 262144,SubstructureNotifyMask = 524288,SubstructureRedirectMask = 1048576,FocusChangeMask = 2097152,PropertyChangeMask = 4194304,ColormapChangeMask = 8388608,OwnerGrabButtonMask = 16777216,};
enum MACRO_OLD_TR_LINK {OLD_TR_LINK_OUTBOUND = 0x2,TR_LINK_LOOP = 0x800000,};
enum MACRO_OVERWRITING {OVERWRITING = 1,};
enum MACRO_ObjectIndex {ObjectIndex = 0,XmRectObjIndex = 1,};
enum MACRO_PDE2_0_NEXT {PDE2_0_NEXT = 28,};
enum MACRO_PDE2_0_PROT {PDE2_0_PROT_HI = 8,PDE2_0_PROT_LO = 12,PDE2_0_PPN = 16,};
enum MACRO_PDE2_0_VTAG {PDE2_0_VTAG = 0,PDE2_0_VTAG_HI = 0,};
enum MACRO_PDE_AR_KXUX {PDE_AR_KXUX = 0x2C,};
enum MACRO_PDE_AR_URKW {PDE_AR_URKW = 0x1C,PDE_AR_URWKW = 0x1F,PDE_AR_URXKW = 0x3C,PDE_AR_URWXKW = 0x3F,PDE_AR_INVALID = 0xFF,};
enum MACRO_PRF_ON_MASK {PRF_ON_MASK = 0x3,};
enum MACRO_PROTID_REST {PROTID_REST_POS = 0,PROTID_SUSPEND = 1073741824,};
enum MACRO_PSL_BFACTOR {PSL_BFACTOR = 4,PSL_LOG2BF = 2,};
enum MACRO_PSM_SESSION {PSM_SESSION_SO = 0x2,PSM_ST_NOT_INSTALLED = 0x100,PSM_ST_INTERNAL_ERROR = 0x101,PSM_ST_NOMEM = 0x102,PSM_ST_PSD_IO_ERROR = 0x103,PSM_ST_ALREADY_INITED = 0x105,PSM_ST_NO_CONFIG = 0x106,PSM_ST_NOT_INITED = 0x110,PSM_ST_PSD_CONFIG = 0x111,PSM_ST_PSD_INV_NAME = 0x112,PSM_ST_ALREADY_OPEN = 0x113,PSM_ST_INV_TOKEN = 0x114,PSM_ST_NO_TOKEN = 0x115,PSM_ST_INV_PIN = 0x116,PSM_ST_PIN_LOCKED = 0x117,PSM_ST_NOT_OPEN = 0x120,PSM_ST_INV_HANDLE = 0x121,PSM_ST_NOSUCH_DOMAIN = 0x122,PSM_ST_INV_ITEM = 0x130,PSM_ST_DOMAIN_NOTSELECT = 0x131,PSM_ST_NOSUCH_NAME = 0x132,PSM_ST_NAME_NOTSELECT = 0x135,PSM_ST_IDENT_EXISTS = 0x140,PSM_ST_PSD_NOSPACE = 0x141,PSM_ST_NOT_SO = 0x150,};
enum MACRO_PSM_SUCCESS {PSM_SUCCESS = 0,PSM_ERROR = 1,PSM_COMPL_PARAMETER_LENGTH_MAX = 80,};
enum MACRO_PS_BOOTTIME {PS_BOOTTIME = 0x1,PS_RUNTIME = 0x2,};
enum MACRO_PS_FASTSIZE {PS_FASTSIZE_512KB = 0x1,PS_FASTSIZE_1MB = 0x2,PS_FASTSIZE_2MB = 0x3,PS_FASTSIZE_4MB = 0x4,PS_FASTSIZE_8MB = 0x5,PS_FASTSIZE_16MB = 0x6,PS_FASTSIZE_32MB = 0x7,PS_FASTSIZE_64MB = 0x8,PS_FASTSIZE_128MB = 0x9,PS_FASTSIZE_256MB = 0xA,PS_FASTSIZE_512MB = 0xB,PS_FASTSIZE_1GB = 0xC,PS_FASTSIZE_2GB = 0xD,PS_FASTSIZE_ALL = 0xE,};
enum MACRO_PTHREAD_ANY {PTHREAD_ANY_NODE_NP = -2,PTHREAD_PARENT_NP = 1,};
enum MACRO_PTHREAD_MEM {PTHREAD_MEM_TYPE_DEFAULT_NP = 1,PTHREAD_MEM_TYPE_FAR_NP = 2,PTHREAD_MEM_TYPE_NEAR_NP = 3,PTHREAD_MEM_TYPE_NODE_NP = 4,PTHREAD_SAME_NODE_NP = -1,};
enum MACRO_PTRACE_MASK {PTRACE_MASK_HI = 255,};
enum MACRO_PUT_CHASSIS {PUT_CHASSIS_OK = 0x1,NVM_PANIC_ADDR = 0x80,};
enum MACRO_PointerRoot {PointerRoot = 1,};
enum MACRO_QUAD1_64BIT {QUAD1_64BIT_BEG_ADDR = 0x0,QUAD1_64BIT_END_ADDR = 0x3FFFF000,QUAD2_64BIT_BEG_ADDR = 0x40000000,QUAD2_64BIT_END_ADDR = 0x7FFFF000,QUAD3_64BIT_BEG_ADDR = 0x80000000,QUAD3_64BIT_END_ADDR = 0xBFFFF000,QUAD4_64BIT_BEG_ADDR = 0xC0000000,QUAD4_64BIT_END_ADDR = 0xEFFFF000,};
enum MACRO_RDB_NORS232 {RDB_NORS232_BIT = 17,};
enum MACRO_RES_DEFAULT {RES_DEFAULT = 704,RES_PRF_STATS = 1,};
enum MACRO_RLIMIT_OPEN {RLIMIT_OPEN_MAX = 6,RLIMIT_AS = 7,RLIMIT_TCACHE = 8,RLIMIT_AIO_OPS = 9,RLIMIT_AIO_MEM = 10,RLIM_NLIMITS = 11,};
enum MACRO_RS_INACTIVE {RS_INACTIVE = 0,RS_RENDEZ_IN_PROGRESS = 1,RS_RENDEZ_ACK = 2,RS_PF_ABORTED = 3,};
enum MACRO_R_PUSH_PROC {R_PUSH_PROC = 0x0,R_PUSH_CONST = 0x2,R_PREV_FIXUP = 0xD3,R_SEC_STMT = 0xD7,R_N0SEL = 0xD8,R_N1SEL = 0xD9,R_LINETAB = 0xDA,R_LINETAB_ESC = 0xDB,R_LTP_OVERRIDE = 0xDC,R_COMMENT = 0xDD,R_TP_OVERRIDE = 0xDE,R_RESERVED = 0xE0,};
enum MACRO_RaiseLowest {RaiseLowest = 0,LowerHighest = 1,};
enum MACRO_SCALING2TO1 {SCALING2TO1 = 0x10,HID_ENABLED = 0x20,PROMPT_MODE = 0x40,};
enum MACRO_SCSI_DIRECT {SCSI_DIRECT_ACCESS = 0x0,SCSI_SEQUENTIAL_ACCESS = 0x1,SCSI_PRINTER = 0x2,SCSI_PROCESSOR = 0x3,SCSI_WORM = 0x4,SCSI_CDROM = 0x5,SCSI_SCANNER = 0x6,SCSI_MO = 0x7,SCSI_AUTOCHANGER = 0x8,SCSI_COMMUNICATIONS = 0x9,SCSI_UNKNOWN_DEV_TYPE = 0x1F,};
enum MACRO_SCSI_PARITY {SCSI_PARITY_ERROR = -6,};
enum MACRO_SCTL_ENABLE {SCTL_ENABLE_WDTR = 0x40000000,};
enum MACRO_SEM_INVALID {SEM_INVALID_MAGIC = -2,SEM_NOPSHARED_MODE = 0,};
enum MACRO_SEM_PSHARED {SEM_PSHARED_MODE = 0x200,SEM_VALUE_MAX = 0x7FFF,};
enum MACRO_SEM_UNNAMED {SEM_UNNAMED_MAGIC = -1,};
enum MACRO_SHNX_LOPROC {SHNX_LOPROC = 0xFFFF00,SHNX_HIPROC = 0xFFFF1F,};
enum MACRO_SHORT_TIMER {SHORT_TIMER = 0,MED_TIMER = 1,LONG_TIMER = 2,};
enum MACRO_SIOCFLUSHRT {SIOCFLUSHRT = 536900151,};
enum MACRO_SNAP8025_16 {SNAP8025_16_MTU = 4170,};
enum MACRO_SOTIMEQHASH {SOTIMEQHASH_NB = 16,};
enum MACRO_SPRAYVERS_0 {SPRAYVERS = 1,SPRAYOVERHEAD = 86,SPRAYMAX = 8845,};
enum MACRO_SWFREEFRACT {SWFREEFRACT = 10,NSWPRI = 11,SYSMEMMAX = 512,};
enum MACRO_SYS_adjtime {SYS_adjtime = 325,SYS_KLOAD = 326,};
enum MACRO_SYS_connect {SYS_connect = 277,SYS_GETPEERNAME = 278,};
enum MACRO_SYS_dskless {SYS_dskless_stats = 184,SYS_SIGPROCMASK = 185,};
enum MACRO_SYS_fattach {SYS_fattach = 327,SYS_FDETACH = 328,};
enum MACRO_SYS_fcntl64 {SYS_fcntl64 = 359,SYS_FTRUNCATE64 = 360,};
enum MACRO_SYS_fdetach {SYS_fdetach = 328,SYS_SERIALIZE = 329,};
enum MACRO_SYS_fgetacl {SYS_fgetacl = 405,SYS_SETACL = 406,};
enum MACRO_SYS_fsetacl {SYS_fsetacl = 407,SYS_GETACCESS = 408,};
enum MACRO_SYS_fstat64 {SYS_fstat64 = 361,SYS_GETDIRENTRIES64 = 362,};
enum MACRO_SYS_fstatfs {SYS_fstatfs = 197,SYS_VFSMOUNT = 198,};
enum MACRO_SYS_getksym {SYS_getksym = 486,SYS_MODADM = 487,};
enum MACRO_SYS_getpmsg {SYS_getpmsg = 317,SYS_PUTPMSG = 318,};
enum MACRO_SYS_kwakeup {SYS_kwakeup = 399,SYS_PSTAT_GETLWP = 401,};
enum MACRO_SYS_lf_free {SYS_lf_free_buf = 466,SYS_LF_WAIT_NQ = 467,};
enum MACRO_SYS_lf_next {SYS_lf_next_scn = 154,SYS_LOCKF = 155,};
enum MACRO_SYS_lf_send {SYS_lf_send_pin_map = 465,SYS_LF_FREE_BUF = 466,};
enum MACRO_SYS_lf_wait {SYS_lf_wait_nq = 467,SYS_LF_WAKEUP_CONN_Q = 468,};
enum MACRO_SYS_lf_wire {SYS_lf_wire_mem = 463,SYS_LF_UNWIRE_MEM = 464,};
enum MACRO_SYS_lockf64 {SYS_lockf64 = 364,SYS_LSEEK64 = 365,};
enum MACRO_SYS_lseek64 {SYS_lseek64 = 365,SYS_LSTAT64 = 366,};
enum MACRO_SYS_lstat64 {SYS_lstat64 = 366,SYS_MMAP64 = 367,};
enum MACRO_SYS_madvise {SYS_madvise = 75,SYS_VHANGUP = 76,};
enum MACRO_SYS_modload {SYS_modload = 483,SYS_MODULOAD = 484,};
enum MACRO_SYS_modpath {SYS_modpath = 485,SYS_GETKSYM = 486,};
enum MACRO_SYS_modstat {SYS_modstat = 488,SYS_LWP_DETACHED_EXIT = 489,};
enum MACRO_SYS_mq_send {SYS_mq_send = 442,SYS_MQ_RECEIVE = 443,};
enum MACRO_SYS_munlock {SYS_munlock = 422,SYS_MLOCKALL = 423,};
enum MACRO_SYS_mwakeup {SYS_mwakeup = 322,SYS_MSEM_INIT = 323,};
enum MACRO_SYS_ogetacl {SYS_ogetacl = 235,SYS_OFGETACL = 236,};
enum MACRO_SYS_osetacl {SYS_osetacl = 237,SYS_OFSETACL = 238,};
enum MACRO_SYS_pread64 {SYS_pread64 = 376,SYS_PREADV64 = 377,};
enum MACRO_SYS_privgrp {SYS_privgrp = 151,SYS_RTPRIO = 152,};
enum MACRO_SYS_putpmsg {SYS_putpmsg = 318,SYS_MSYNC = 320,};
enum MACRO_SYS_pwritev {SYS_pwritev = 375,SYS_PREAD64 = 376,};
enum MACRO_SYS_recvmsg {SYS_recvmsg = 284,SYS_SEND = 285,};
enum MACRO_SYS_sendmsg {SYS_sendmsg = 286,SYS_SENDTO = 287,};
enum MACRO_SYS_sendto2 {SYS_sendto2 = 507,SYS_ACL = 508,};
enum MACRO_SYS_setcore {SYS_setcore = 140,SYS_GETRLIMIT = 144,};
enum MACRO_SYS_setpgid {SYS_setpgid = 82,};
enum MACRO_SYS_setpgrp {SYS_setpgrp = 383,SYS_RECVMSG2 = 384,};
enum MACRO_SYS_sigwait {SYS_sigwait = 430,SYS_AIO_READ = 431,};
enum MACRO_SYS_socket2 {SYS_socket2 = 386,SYS_SOCKETPAIR2 = 387,};
enum MACRO_SYS_statvfs {SYS_statvfs = 330,SYS_FSTATVFS = 331,};
enum MACRO_SYS_swapoff {SYS_swapoff = 77,SYS_GETGROUPS = 79,};
enum MACRO_SYS_symlink {SYS_symlink = 56,SYS_UTSSYS = 57,};
enum MACRO_SYS_sysconf {SYS_sysconf = 132,SYS_MKDIR = 136,};
enum MACRO_SYS_sysinfo {SYS_sysinfo = 358,SYS_FCNTL64 = 359,};
enum MACRO_SYS_toolbox {SYS_toolbox = 354,SYS_GETDENTS = 356,};
enum MACRO_SYS_vhangup {SYS_vhangup = 76,SYS_SWAPOFF = 77,};
enum MACRO_SYS_waitpid {SYS_waitpid = 200,SYS_SIGSETRETURN = 224,};
enum MACRO_ShapeNotify {ShapeNotify = 0,ShapeNumberEvents = 1,};
enum MACRO_TELQUAL_VAR {TELQUAL_VAR = 0,TELQUAL_VALUE = 1,TELQUAL_USERVAR = 3,};
enum MACRO_TEMPERATURE {TEMPERATURE_UNITS = 4,};
enum MACRO_TIOCSIGMODE {TIOCSIGMODE = 536900700,};
enum MACRO_TIOCSIGSEND {TIOCSIGSEND = 536900701,};
enum MACRO_TRANSPARENT {TRANSPARENT = -32768,};
enum MACRO_TR_ABNORMAL {TR_ABNORMAL = 0x0,TR_COUNT = 0x1,TR_MATCH = 0x2,TR_END = 0x4,};
enum MACRO_T_NOPROTECT {T_NOPROTECT = 1,T_PASSIVEPROTECT = 2,T_ACTIVEPROTECT = 4,T_LTPDUDFLT = 128,ISO_TP = 256,};
enum MACRO_UNSUPPORTED {UNSUPPORTED_OPTION = -93,};
enum MACRO_USB_HID_GET {USB_HID_GET_REPORT = 1,USB_HID_GET_IDLE = 2,USB_HID_GET_PROTOCOL = 3,USB_HID_SET_REPORT = 9,USB_HID_SET_IDLE = 10,USB_HID_SET_PROTOCOL = 11,};
enum MACRO_USB_HID_NUM {USB_HID_NUM_LED = 0x1,USB_HID_CAPS_LED = 0x2,USB_HID_SCROLL_LED = 0x4,USB_HID_COMPOSE_LED = 0x8,USB_HID_KANA_LED = 0x10,};
enum MACRO_VERIFYPARMS {VERIFYPARMS_SIZE = 8,};
enum MACRO_XIM_MODE_IC {XIM_MODE_IC_GET = 33,XIM_MODE_IC_SET = 66,XIM_MODE_IC_CREATE = 132,XIM_MODE_IC_ONCE = 264,XIM_MODE_IC_DEFAULT = 528,};
enum MACRO_XK_Ukranian {XK_Ukranian_je = 0x6A4,XK_Macedonia_dse = 0x6A5,XK_Ukrainian_i = 0x6A6,};
enum MACRO_XLookupNone {XLookupNone = 1,XLookupChars = 2,XLookupKeySym = 3,XLookupBoth = 4,};
enum MACRO_XPDocNormal {XPDocNormal = 1,XPDocRaw = 2,};
enum MACRO_XT_REVISION {XT_REVISION = 6,XtVersion = 11006,};
enum MACRO_XTestACTION {XTestACTION_TYPE_MASK = 0x3,XTestKEY_STATE_MASK = 0x4,};
enum MACRO_XcmsFailure {XcmsFailure = 0,XcmsSuccess = 1,XcmsSuccessWithCompression = 2,};
enum MACRO_XkbKeyboard {XkbKeyboard = 0,XkbNumberErrors = 1,XkbErr_BadDevice = 255,};
enum MACRO_XmCoreIndex {XmCoreIndex = 0,};
enum MACRO_XmDIRECTION {XmDIRECTION_IGNORED = 0x30,};
enum MACRO_XmDROP_NOOP {XmDROP_NOOP = 0,XmDROP_MOVE = 1,XmDROP_COPY = 2,XmDROP_LINK = 4,};
enum MACRO_XmHIGHLIGHT {XmHIGHLIGHT_COLOR = -3,};
enum MACRO_XmINDICATOR {XmINDICATOR_3D_BOX = 0x1,XmINDICATOR_FLAT_BOX = 0x2,XmINDICATOR_CHECK_GLYPH = 0x10,XmINDICATOR_CROSS_GLYPH = 0x20,};
enum MACRO_XmINTENSITY {XmINTENSITY_FACTOR = 75,};
enum MACRO_XmListIndex {XmListIndex = 5,};
enum MACRO_XmSashIndex {XmSashIndex = 5,XmRowColumnIndex = 7,};
enum MACRO_XmTEXT_DRAG {XmTEXT_DRAG_ICON_HEIGHT = 64,XmTEXT_DRAG_ICON_X_HOT = 10,XmTEXT_DRAG_ICON_Y_HOT = 4,};
enum MACRO_XmTOP_RIGHT {XmTOP_RIGHT = 1,};
enum MACRO_XmTextIndex {XmTextIndex = 5,};
enum MACRO_XpmComments {XpmComments = 256,};
enum MACRO_XpmNoMemory {XpmNoMemory = -3,};
enum MACRO_XtCacheNone {XtCacheNone = 0x1,XtCacheAll = 0x2,XtCacheByDisplay = 0x3,XtCacheRefCount = 0x100,};
enum MACRO_YPMAXDOMAIN {YPMAXDOMAIN = 64,};
enum MACRO_YPMAXRECORD {YPMAXRECORD = 1024,};
enum MACRO_YPPUSH_FILE {YPPUSH_FILE = -9,};
enum MACRO_YPPUSH_RSRC {YPPUSH_RSRC = -3,};
enum MACRO_YPPUSH_SKEW {YPPUSH_SKEW = -10,};
enum MACRO__DBM_RDONLY {_DBM_RDONLY = 0x1,};
enum MACRO__LC_NUMERIC {_LC_NUMERIC_SIZE = 128,_LC_TIME_SIZE = 912,};
enum MACRO__LC_VERSION {_LC_VERSION_R5 = 5,_LC_VERSION_R6 = 6,};
enum MACRO__POSIX2_UPE {_POSIX2_UPE = 1,};
enum MACRO__POSIX_LINK {_POSIX_LINK_MAX = 8,_POSIX_MAX_CANON = 255,};
enum MACRO__POSIX_NAME {_POSIX_NAME_MAX = 14,_POSIX_NGROUPS_MAX = 0,};
enum MACRO__POSIX_OPEN {_POSIX_OPEN_MAX = 16,_POSIX_PATH_MAX = 255,_POSIX_PIPE_BUF = 512,_POSIX_SSIZE_MAX = 32767,};
enum MACRO__SC_VERSION {_SC_VERSION = 102,_SC_BC_BASE_MAX = 200,_SC_BC_DIM_MAX = 201,_SC_BC_SCALE_MAX = 202,_SC_EXPR_NEST_MAX = 204,_SC_LINE_MAX = 205,_SC_RE_DUP_MAX = 207,_SC_2_VERSION = 211,_SC_2_C_BIND = 212,_SC_2_C_DEV = 213,_SC_2_FORT_DEV = 214,_SC_2_SW_DEV = 215,_SC_2_C_VERSION = 216,_SC_2_CHAR_TERM = 217,_SC_2_FORT_RUN = 218,_SC_2_LOCALEDEF = 219,_SC_2_UPE = 220,_SC_BC_STRING_MAX = 221,_SC_COLL_WEIGHTS_MAX = 222,};
enum MACRO__SETCONTEXT {_SETCONTEXT_RVAL = 100,};
enum MACRO__WAITIDMASK {_WAITIDMASK = 61,};
enum MACRO__XBS5_LPBIG {_XBS5_LPBIG_OFFBIG = 64,_CS_PATH = 200,_CS_XBS5_ILP32_OFF32_CFLAGS = 300,_CS_XBS5_ILP32_OFF32_LDFLAGS = 301,_CS_XBS5_ILP32_OFF32_LIBS = 302,_CS_XBS5_ILP32_OFF32_LINTFLAGS = 303,_CS_XBS5_ILP32_OFFBIG_CFLAGS = 304,_CS_XBS5_ILP32_OFFBIG_LDFLAGS = 305,_CS_XBS5_ILP32_OFFBIG_LIBS = 306,_CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 307,_CS_XBS5_LP64_OFF64_CFLAGS = 308,_CS_XBS5_LP64_OFF64_LDFLAGS = 309,_CS_XBS5_LP64_OFF64_LIBS = 310,_CS_XBS5_LP64_OFF64_LINTFLAGS = 311,_CS_XBS5_LPBIG_OFFBIG_CFLAGS = 312,_CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 313,_CS_XBS5_LPBIG_OFFBIG_LIBS = 314,_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 315,_CS_MACHINE_MODEL = 10000,_CS_HW_CPU_SUPP_BITS = 10001,_CS_KERNEL_BITS = 10002,_XOPEN_UNIX = -1,};
enum MACRO_osfXK_Clear {osfXK_Clear = 0x1004FF0B,};
enum MACRO_osfXK_Paste {osfXK_Paste = 0x1004FF04,osfXK_PrevField = 0x1004FF5D,};
enum MACRO_osfXK_Right {osfXK_Right = 0x1004FF53,osfXK_RightLine = 0x1004FFF7,};
enum MACRO_status_mask {status_mask_3 = 8191,};
enum MACRO_sym_k_error {sym_k_error_value = 0,sym_k_error_object = 0,sym_k_error_charset = 0,};
enum MACRO_sym_k_patch {sym_k_patch_add = 1,sym_k_bind_value_name = 2,sym_k_patch_list_add = 3,};
enum MACRO_sym_k_value {sym_k_value_entry = 1,sym_k_name_entry = 2,sym_k_widget_entry = 3,sym_k_control_entry = 4,sym_k_forward_ref_entry = 5,sym_k_external_def_entry = 6,sym_k_argument_entry = 7,sym_k_callback_entry = 8,sym_k_module_entry = 9,sym_k_proc_def_entry = 10,sym_k_proc_ref_entry = 11,sym_k_list_entry = 12,sym_k_child_entry = 13,sym_k_identifier_entry = 14,sym_k_color_item_entry = 15,sym_k_gadget_entry = 16,sym_k_root_entry = 17,sym_k_parent_list_entry = 18,sym_k_nested_list_entry = 19,sym_k_include_file_entry = 20,sym_k_section_entry = 21,sym_k_def_obj_entry = 22,sym_k_UNUSED23_entry = 23,sym_k_val_forward_ref_entry = 24,};
enum MACRO_sym_m_table {sym_m_table_entry = 1,sym_m_separate = 4,};
enum MACRO_sz_XWDColor {sz_XWDColor = 12,};
enum MACRO_sz_smDieMsg {sz_smDieMsg = 8,};
enum MACRO_sz_xkbEvent {sz_xkbEvent = 32,};
typedef struct _0A5A2DC6F5DFEB19A95AB8D5777ED58E *MrmOsOpenParamPtr;
typedef struct _E019DD19C3E276A39E4768CCE95A0FD0 OverrideShellPart;
typedef struct _ScanLineListBlock ScanLineListBlock;
typedef struct _338644C2278094D31E58DDA0CC7454C7 TopLevelShellPart;
typedef struct _419D850E958B0F42F8B9D5E0BB3E2ED8 TransientShellRec;
typedef struct _EC82DAE7E0933F1930E390E980E1D42C UilEnumSetDescDef;
typedef unsigned int Uil_continue_type;
typedef struct _FE9896265ABA69989620FFBB2F6B5FBF *VendorShellWidget;
typedef struct _2AE07F4A994C5FC6C65BC46898F1D740 XExtensionVersion;
typedef struct _3AD4CBF69EE89480875180DC2A9357C1 XFocusChangeEvent;
typedef struct _XIMHotKeyTriggers XIMHotKeyTriggers;
typedef struct _937DB4F83893A6A1F82E1079494CB89A XKbdFeedbackState;
typedef struct _42AB50CCE4DA10B1F65C2C09D80E775D XLedFeedbackState;
typedef unsigned char XPAttrReplacement;
typedef struct _77F664D03ADE3D590F095E54D295E163 XPtrFeedbackState;
typedef struct _02A785B3A8D92BC19FFDFB76C1A58D9E XRecordClientInfo;
typedef unsigned int XRecordClientSpec;
typedef struct _AA5574FCAA16239E322F63F196E24F16 XStandardColormap;
typedef struct _5D81407642129E8D3F1879551A611D5D XSyncCounterError;
typedef struct _88FB39CD3802D019F63911908A8052EF XTestFakeAckEvent;
typedef struct _67007EC0A0A5FA25533E9B447B17EF1A XWindowAttributes;
typedef struct _XcmsPerDpyInfo *XcmsPerDpyInfoPtr;
typedef struct _XkbKbdDpyState *XkbKbdDpyStatePtr;
typedef struct _XkbKbdDpyState XkbKbdDpyStateRec;
typedef struct _XkbMapNotifyEvent XkbMapNotifyEvent;
typedef struct _XkbNameChanges *XkbNameChangesPtr;
typedef struct _XkbNameChanges XkbNameChangesRec;
typedef struct _XkbShapeDoodad *XkbShapeDoodadPtr;
typedef struct _XkbShapeDoodad XkbShapeDoodadRec;
typedef struct _XlcConvMethodsRec XlcConvMethodsRec;
typedef struct _XmAccessColorDataRec *XmAccessColorData;
typedef struct _XmAllProtocolsMgrRec *XmAllProtocolsMgr;
typedef struct _XmArrowButtonPart XmArrowButtonPart;
typedef struct _XmBaseClassExtRec XmBaseClassExtRec;
typedef struct _XmBaselineMargins XmBaselineMargins;
typedef struct _XmCareVisualTraitRec *XmCareVisualTrait;
typedef struct _XmCommandClassRec XmCommandClassRec;
typedef struct _XmContainerRec *XmContainerWidget;
typedef struct _XmDesktopClassRec XmDesktopClassRec;
typedef struct _B05C30B25A8F0D780E68E0B4266EE664 XmDialogShellPart;
typedef struct _XmDisplayClassRec XmDisplayClassRec;
typedef struct _XmDragContextPart XmDragContextPart;
typedef struct _XmDragCursorRec *XmDragCursorCache;
typedef struct _CEBF0A3380E34CA7D192D32F0B21F5A4 *XmDragIconPartPtr;
typedef struct _8A6937EA0F1140EDE7FB1476278A9B17 XmDrawingAreaPart;
typedef struct _XmDrawnButtonPart XmDrawnButtonPart;
typedef struct _XmDropSiteVisualsRec *XmDropSiteVisuals;
typedef struct _XmDropTransferRec XmDropTransferRec;
typedef struct _XmExtClassPart *XmExtClassPartPtr;
typedef struct _XmFormClassRec *XmFormWidgetClass;
typedef struct _XmFrameConstraintPart *XmFrameConstraint;
typedef struct _XmGadgetClassPart XmGadgetClassPart;
typedef struct _XmGenericClassExtRec *XmGenericClassExt;
typedef struct _3BE25E7CC08F2245A091500E0AFB6500 *XmGeoColumnLayout;
typedef struct _8F2C7EBD5F5C00EC145265832DC3A795 XmGeoRowLayoutRec;
typedef struct _XmGrabShellWidgetRec *XmGrabShellWidget;
typedef struct _XmIconGadgetClassRec *XmIconGadgetClass;
typedef struct _XmIconHeaderClassRec *XmIconHeaderClass;
typedef struct _XmLabelGadgetPart XmLabelGadgetPart;
typedef struct _XmListClassRec *XmListWidgetClass;
typedef struct _441B4C0D047DF063F5C6816C3F022891 *XmManagerClassExt;
typedef struct _XmManagerClassRec XmManagerClassRec;
typedef struct _XmMenuShellWidgetRec *XmMenuShellWidget;
typedef struct _XmMenuSystemTraitRec *XmMenuSystemTrait;
typedef struct _F77DC320FB1DA70F5B7152F994D427EE XmPanedWindowPart;
typedef struct _XmPointInTraitRec XmPointInTraitRec;
typedef struct _XmPrimitiveRec *XmPrimitiveWidget;
typedef struct _XmProtocolMgrRec **XmProtocolMgrList;
typedef struct _XmProtocolPart *XmProtocolPartPtr;
typedef struct _6180D9D3CA56B1110646E5C5D8270DC5 XmRepTypeEntryRec;
typedef struct _XmRowColumnRec *XmRowColumnWidget;
typedef struct _XmSashClassRec *XmSashWidgetClass;
typedef struct _XmScaleConstraintPart *XmScaleConstraint;
typedef struct _XmScreenClassPart XmScreenClassPart;
typedef struct _XmScrollBarRec *XmScrollBarWidget;
typedef struct _XmScrollFrameDataRec *XmScrollFrameData;
typedef struct _XmSelectionBoxRec XmSelectionBoxRec;
typedef struct _XmSeparatorGadgetRec *XmSeparatorGadget;
typedef struct _XmSeparatorRec *XmSeparatorWidget;
typedef struct _DFB5DF0860CF2898E76F59605993FDC8 *XmShellExtPartPtr;
typedef struct _XmSpecRenderTraitRec *XmSpecRenderTrait;
typedef struct _XmSpinBoxClassRec XmSpinBoxClassRec;
typedef unsigned char XmStringDirection;
typedef struct _C1B4A013CC5F946450FAD8622ABE0A9E XmTextBlockRecWcs;
typedef struct _D2A436EA22C40B91455F5B9FAC22C559 *XmTextContextData;
typedef struct _XmTextFieldRec *XmTextFieldWidget;
typedef struct _XmTextClassRec *XmTextWidgetClass;
typedef struct _XmToggleButtonRec XmToggleButtonRec;
typedef struct _CB86ED79A67F464A5E5DD7E35915D8C3 *XrmOptionDescList;
typedef struct _XtCheckpointTokenRec *XtCheckpointToken;
typedef struct _87D722ECD21497B94ED1D7223FEC05F4 *XtDestroyHookData;
typedef struct _086284109A45697A934DE255CD0A4CB0 _IceProtocolError;
typedef struct _45939CCCDFB03014AF0E720819761CDF _IceProtocolReply;
typedef struct _3A4328BABB1376C167ED72E6C2928858 _LC_core_locale_t;
struct _Uil_command_type {char *source_file;char *resource_file;char *listing_file;unsigned int include_dir_count;char **include_dir;unsigned int issue_summary;unsigned int status_update_delay;char *database;unsigned int use_setlocale_flag;};
struct _XkbCompatChanges {unsigned char changed_groups;unsigned short first_si;unsigned short num_si;};
struct _XkbComponentName {unsigned short flags;char *name;};
struct _XkbGeometrySizes {unsigned int which;unsigned short num_properties;unsigned short num_colors;unsigned short num_shapes;unsigned short num_sections;unsigned short num_doodads;unsigned short num_key_aliases;};
struct _XkbMessageAction {unsigned char type;unsigned char flags;unsigned char message[6];};
struct _XkbPtrDfltAction {unsigned char type;unsigned char flags;unsigned char affect;char valueXXX;};
typedef struct _4425769459ED4D02F39F849992AF4AF1 _XmTextInsertPair;
typedef struct _AA1A19B97C4266B2BC3AEB2743D64DB3 _XmTextPrimSelect;
struct _XrmHashBucketRec;
struct _db_header_struct {int table_id;int num_items;int table_size;};
typedef struct _757904A2A8E77653612A3CA900C4F2B1 adapter_info_type;
struct audio_test_buffer {unsigned int test_buffer_addr[4];int spare[8];};
struct cell_pdt_info_rtn {unsigned int reserved;unsigned int max_pdt_entries;};
typedef struct _CD1186DFDE2B09DB150CB2EF4FAB66C0 cio_ctrl_req_type;
typedef struct _B73D64128F8EC87CEF84A504D28B419F cio_dump_req_type;
typedef struct _78DF8810A4494AE41997310F214AE739 cio_io_event_type;
struct connect_tab_entry {char *mod_name;int ( *mod_idy)();int module_found;int my_meta;int child_meta;};
typedef struct _73976483F74B7ACC860B7B84A6B492A9 cpr_dap_area_type;
typedef struct _7F598FE20DE156C61CB8DECEFC23C88D da_idy_bytes_type;
typedef struct _descriptor_set0_t descriptor_set0_t;
typedef struct _A55E8F963C5B6AC40AFF9FD81070CC8F deviceStateNotify;
typedef struct _55BA9BC301B16CBF748D68913B45D214 device_properties;
typedef struct _4C29AD0BCFB47FFEE01CCDA185D4E4DF dl_data_ack_ind_t;
typedef struct _9743F85D02716D406869F0C3FAA8980C dl_data_ack_req_t;
typedef struct _DA3AB94F542A4F42932A1C212EF5DF0D dl_hp_promiscon_t;
typedef struct _CE59E3C5EE56110A29DE550B3F2828FF dl_unitdata_ind_t;
typedef struct _E6F7D190E2D2DD963C1A2E314C12AAB2 dl_unitdata_req_t;
typedef struct dma_A_buflet dma_A_buflet_type;
typedef struct _872DA2C06F6354E0B9D12CAAA5AF3997 dma_A_module_type;
struct eagle_extend_desc {unsigned char msg_len[2];unsigned char ctrl_tbl_desc[6];unsigned char ctrl_hdr_bytes[8];unsigned char uv_tbl_desc[6];unsigned char uv_hdr_bytes[18];unsigned char uv_rec_bytes[14];unsigned char end_tbl_desc[6];};
struct eisa_system_board {unsigned char dma0_ch0_base_addr;unsigned char dma0_ch0_count;unsigned char dma0_ch1_base_addr;unsigned char dma0_ch1_count;unsigned char dma0_ch2_base_addr;unsigned char dma0_ch2_count;unsigned char dma0_ch3_base_addr;unsigned char dma0_ch3_count;unsigned char dma0_status;unsigned char dma0_request;unsigned char dma0_single_mask;unsigned char dma0_mode;unsigned char dma0_clr_byte_ptr;unsigned char dma0_master_clr;unsigned char dma0_clr_mask;unsigned char dma0_mask_all;unsigned char pad1[16];unsigned char int1_icw1;unsigned char int1_int_mask_reg;unsigned char pad2[30];unsigned char timer1_clock;unsigned char timer1_refresh_rqst;unsigned char timer1_speaker;unsigned char timer1_control;unsigned char pad3[4];unsigned char interval_timer2[3];unsigned char timer2_control;unsigned char pad4[21];unsigned char nmi_status;unsigned char pad5[14];unsigned char nmi_enable;unsigned char pad6[16];unsigned char dma0_ch2_low_page;unsigned char dma0_ch3_low_page;unsigned char dma0_ch1_low_page;unsigned char pad7[3];unsigned char dma0_ch0_low_page;unsigned char pad8;unsigned char dma1_ch6_low_page;unsigned char dma1_ch7_low_page;unsigned char dma1_ch5_low_page;unsigned char pad9[3];unsigned char refresh_low_page;unsigned char pad10[16];unsigned char int2_icw1;unsigned char int2_int_mask_reg;unsigned char pad11[30];unsigned char dma1_ch4_base_addr;unsigned char pad12;unsigned char dma1_ch4_count;unsigned char pad13;unsigned char dma1_ch5_base_addr;unsigned char pad14;unsigned char dma1_ch5_count;unsigned char pad15;unsigned char dma1_ch6_base_addr;unsigned char pad16;unsigned char dma1_ch6_count;unsigned char pad17;unsigned char dma1_ch7_base_addr;unsigned char pad18;unsigned char dma1_ch7_count;unsigned char pad19;unsigned char dma1_status;unsigned char pad20;unsigned char dma1_request;unsigned char pad21;unsigned char dma1_single_mask;unsigned char pad22;unsigned char dma1_mode;unsigned char pad23;unsigned char dma1_clr_byte_ptr;unsigned char pad24;unsigned char dma1_master_clr;unsigned char pad25;unsigned char dma1_clr_mask;unsigned char pad26;unsigned char dma1_mask_all;unsigned char pad27[802];unsigned char dma0_ch0_high_count;unsigned char pad28;unsigned char dma0_ch1_high_count;unsigned char pad29;unsigned char dma0_ch2_high_count;unsigned char pad30;unsigned char dma0_ch3_high_count;unsigned char pad31[2];unsigned char dma_int_pending;unsigned char dma0_extended_mode;unsigned char eisa_master;unsigned char pad32[84];unsigned char nmi_extended_status;unsigned char software_nmi;unsigned char pad33;unsigned char last_eisa_bus_master_byte0;unsigned char last_eisa_bus_master_byte1;unsigned char pad34[27];unsigned char dma0_ch2_high_page;unsigned char dma0_ch3_high_page;unsigned char dma0_ch1_high_page;unsigned char pad35[3];unsigned char dma0_ch0_high_page;unsigned char pad36;unsigned char dma1_ch6_high_page;unsigned char dma1_ch7_high_page;unsigned char dma1_ch5_high_page;unsigned char pad37[58];unsigned char dma1_ch5_high_count;unsigned char pad38[3];unsigned char dma1_ch6_high_count;unsigned char pad39[3];unsigned char dma1_ch7_high_count;unsigned char pad40;unsigned char int1_edge_level;unsigned char int2_edge_level;unsigned char pad41[2];unsigned char dma1_chaining_mode;unsigned char pad42;unsigned char dma1_extended_mode;unsigned char pad43[9];unsigned char dma0_ch0_stop0;unsigned char dma0_ch0_stop1;unsigned char dma0_ch0_stop2;unsigned char pad44;unsigned char dma0_ch1_stop0;unsigned char dma0_ch1_stop1;unsigned char dma0_ch1_stop2;unsigned char pad45;unsigned char dma0_ch2_stop0;unsigned char dma0_ch2_stop1;unsigned char dma0_ch2_stop2;unsigned char pad46;unsigned char dma0_ch3_stop0;unsigned char dma0_ch3_stop1;unsigned char dma0_ch3_stop2;unsigned char pad47[5];unsigned char dma1_ch5_stop0;unsigned char dma1_ch5_stop1;unsigned char dma1_ch5_stop2;unsigned char pad48;unsigned char dma1_ch6_stop0;unsigned char dma1_ch6_stop1;unsigned char dma1_ch6_stop2;unsigned char pad49;unsigned char dma1_ch7_stop0;unsigned char dma1_ch7_stop1;unsigned char dma1_ch7_stop2;unsigned char pad50[1921];unsigned char id_byte1;unsigned char id_byte2;unsigned char id_byte3;unsigned char id_byte4;};
struct element_addresses {unsigned short first_transport;unsigned short num_transports;unsigned short first_storage;unsigned short num_storages;unsigned short first_import_export;unsigned short num_import_exports;unsigned short first_data_transfer;unsigned short num_data_transfers;};
struct excal_extend_desc {unsigned char ctrl_tbl_desc[6];unsigned char ctrl_hdr_bytes[8];unsigned char uv_tbl_desc[6];unsigned char uv_hdr_bytes[18];unsigned char uv_rec_bytes[14];unsigned char end_tbl_desc[6];};
typedef struct _7B4AA9229546E18AEA17DF8DFD8F7E14 fcp_bh_log_info_t;
typedef struct _681A300F6E908AA949975FF1E230A5DA fmt_wrt_flag_type;
enum gc_dma_wait_types {GCDMA_WAIT_LAST_MARKER = 0x0,GCDMA_WAIT_CURRENT = 0x1,};
typedef struct _322907DF9C9816BDE1A9DE75D9CF0E7D gc_getfaultinfo_t;
typedef struct _AFFA9A91EF6D729074F708225A2C291B get_opt_flag_type;
typedef struct _694362FD6BA4FD09E27A405438EEF682 hdr_fmt_flag_type;
typedef struct _hid_change_list_t hid_change_list_t;
typedef struct _E63310F8A888390C3BA6AA5581A8704F hw_dump_info_type;
typedef struct _06E84F0011827D3FA6D8BE033B4E11AE hw_self_test_type;
typedef struct _B84634216268FC336CDDC596960689CC hw_util_info_type;
typedef struct _E8ACBD30146FEB9A0012F00D31FBC147 io_port_info_type;
struct lgpg_global_stats {int v_select_success[16];int v_select_failure[16];int v_pgalloc_success[16];int v_pgalloc_failure[16];int v_demotions[16];};
typedef struct _49757C98BAD1C304A4F8D7FA5746E040 load_display_type;
typedef struct _4B1EB49994F06B7B2A2F262429ED5715 mib_Dot3CollEntry;
struct mirinfo__mirstate {unsigned int spare;};
struct move_medium_parms {unsigned short transport;unsigned short source;unsigned short destination;unsigned char invert;};
typedef struct _D5FD3F584A706F39031E09C00DDE2C76 netdiag_l_filters;
typedef struct _2D395617AE391EE8CCE4AB29A77DA091 netdiag_t_filters;
typedef struct pdc_pat_cell_ba pdc_pat_cell_ba_t;
typedef struct pdc_pat_cell_ca pdc_pat_cell_ca_t;
typedef struct pdc_pat_cell_mc pdc_pat_cell_mc_t;
typedef struct _phys_desc_flags_t phys_desc_flags_t;
typedef struct _FDA21FF59698B5CB8B37673BE0D84FBD printer_ctrl_type;
typedef int raw_fmt_flag_type;
typedef struct req_entry_type *req_info_ptr_type;
struct reservation_parms {unsigned short element;unsigned char identification;unsigned char all_elements;};
enum scall_returnCheck {noCheck = 0x0,returnsPointer = 0x1,returnsLong = 0x2,returnsUnsignedLong = 0x3,returnsRange = 0x4,};
struct scsi_block_limits {unsigned int min_blk_size;unsigned int max_blk_size;};
typedef struct _6D3334F4551641FA7C3822F70436A958 search_value_type;
struct shlib_unwind_info {int magic;int shlib_name;int text_start;int data_start;int unwind_start;int unwind_end;int recover_start;int recover_end;};
typedef struct _6C0DBE15692AB0301FA41806B271F811 smInteractDoneMsg;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smSaveCompleteMsg;
typedef struct _0A132E968BCCC0DBF60AFD92D1AD913D smSaveYourselfMsg;
typedef struct _BF64539E6524EAB933F699888D17B074 status_reply_type;
typedef struct _BA0C4C9D943B8C0F64DC63F042F2F4D9 sym_color_element;
typedef struct _D90C9031D269F93C88B34E2B5464A64B unbind_reply_type;
typedef struct _D90C9031D269F93C88B34E2B5464A64B unlock_reply_type;
struct utmp__exit_status {short e_termination;short e_exit;};
typedef struct _9F5B45B2D7EBF8D0E78555B7E3E45D4F wants_status_type;
typedef struct _EC87D4E5EFECFC4D155F79244EABA9BB xChangeSaveSetReq;
typedef struct _07A0BBE0F3D6D0E97B5A30869B6D39C4 xConnClientPrefix;
typedef struct _B6C2B50A2126E272B3960EB4DC4F6604 xDPMSCapableReply;
typedef struct _8B1EAF7AAA57F33F38F96E94C6EE2E44 xGetAtomNameReply;
typedef struct _8E1349AD4AC8D9A4F1DC84C54B0BE169 xGetFontPathReply;
typedef struct _37BE2491590EE7EB76B44447C3CB76CA xGetGeometryReply;
typedef struct _D70593ABB97D9ADE4A069324C98D63AE xGetPropertyReply;
typedef struct _37CF6FD3D8604C440825361FBCF768B5 xGrabDeviceKeyReq;
typedef struct _8C544AC6C871408AE6573DA61B3B8C70 xGrabPointerReply;
typedef struct _B005B6DFBEE50E3DE02814ABC4E5985A xHPAcknowledgeReq;
typedef struct _BFA06AD98FBBDDEDC0B582E2B4AC4030 xHPEnableResetReq;
typedef struct _D948AA82C93D13609C5809B8A2ABF699 xHPExtensionEvent;
typedef struct _823A3963DE3EAD717009583170D6A1BB xHPGetClipListReq;
typedef struct _3B49EEBA6D06A12F7D85BCEDA8059895 xHPGrabResetReply;
typedef struct _4F763A7D3653D2254F75B054CBA6F0C5 xKbdFeedbackState;
typedef struct _95FA76242027CA03F9C53902C97D80C2 xLedFeedbackState;
typedef struct _79D3745B39F9E71262BFBA7985E1C7DE xLookupColorReply;
typedef struct _PrintStartDoc xPrintStartDocReq;
typedef struct _PrintStartJob xPrintStartJobReq;
typedef struct _1A669B82059DE4CB2E4065120B43A549 xPtrFeedbackState;
typedef struct _9A7B13471624AF49EBC2FC2C06B8FE16 xQueryBestSizeReq;
typedef struct _3C4C38FC10522588E30AD31A846C8E7D xQueryColorsReply;
typedef struct _27AC02CFF97A742F93959B98FA171589 xQueryKeymapReply;
typedef struct _1463B1446DFC3BE3591F88FAF0B4315C xRecolorCursorReq;
typedef struct _EDCAE6FAA77F2844B16FB7E0B618EDD7 xSetDeviceModeReq;
typedef struct _60FD28E41E68D30D206D9EC072DAC7C8 xSetInputFocusReq;
typedef struct _xShmLinkInitReply xShmLinkInitReply;
typedef struct _F466B234F46A211DC597B6DC6FDB33CA xTestFakeAckEvent;
typedef struct _221FB40353091864D31474CD79EAAEF6 xTestFakeInputReq;
typedef struct _5CD0DDA75FC8A64FD62E45433429A157 xTestStopInputReq;
typedef struct _5844B3F658E992D348A8DA77109E2376 xieFloBandCombine;
typedef struct _CC9CB7E336EEB9C8B38770A3248C8F6D xieFloBandExtract;
typedef struct _F3865DA4DAB27EA9EE192F5975BA54C3 xieFloOperatorErr;
typedef struct _A02A59C49A68940E162F3D6545A6687B xieFloResourceErr;
typedef struct _56F59331F03F8FDAB1249A71F6343C1C xieFloUnconstrain;
typedef struct _A1E1CD086B71954ED0C94A8A26B6C32D xieTecCIELabToRGB;
typedef struct _A1E1CD086B71954ED0C94A8A26B6C32D xieTecCIEXYZToRGB;
typedef struct _ACF034D5104D0F5B8D12F5FF38C4FBA5 xieTecDecodeTIFF2;
typedef struct _66DA73451B2C91DDB1D8B91FCC8B26BF xieTecEncodeTIFF2;
typedef struct _D20D275EAB1226EC1C38DFF3333DCDF2 xieTecRGBToCIELab;
typedef struct _D20D275EAB1226EC1C38DFF3333DCDF2 xieTecRGBToCIEXYZ;
typedef struct _xkbActionWireDesc xkbActionWireDesc;
typedef struct _xkbControlsNotify xkbControlsNotify;
typedef union _xkbDoodadWireDesc xkbDoodadWireDesc;
typedef struct _xkbGetControls xkbGetControlsReq;
typedef struct _xkbGetGeometry xkbGetGeometryReq;
typedef struct _xkbSetControls xkbSetControlsReq;
typedef struct _xkbSetGeometry xkbSetGeometryReq;
typedef struct _xkbSymMapWireDesc xkbSymMapWireDesc;
typedef struct _xkmKTMapEntryDesc xkmKTMapEntryDesc;
typedef struct _xkmKTPreserveDesc xkmKTPreserveDesc;
typedef struct _CompositeClassPart *CompositePartPtr;
typedef struct _ConstraintRec *ConstraintWidget;
typedef struct _ConversionValues ConversionValues;
typedef struct _9750BD37C04375AEAD857CD1AEBC6ACD IceAuthDataEntry;
typedef struct _5BB888AFAE3DA1AF86E88EEDAEBE9855 IceAuthFileEntry;
typedef struct _B69421B732FABD6E5282386FE63B3F7C IceReplyWaitInfo;
enum MACRO_ABORT_SUBQ {ABORT_SUBQ = 1,DIAG_REQ_SUBQ = 2,DAM_REPLY_SUBQ = 3,LDM_REQ_SUBQ = 4,NSUBQS = 5,};
enum MACRO_ARCDENSITY {ARCDENSITY = 2,MINARCS = 50,};
enum MACRO_AUDIO_BEEP {AUDIO_BEEP_TONE = 0,AUDIO_BEEP_ULAW = 1,};
enum MACRO_AUDIO_DONE {AUDIO_DONE = 0,AUDIO_BUSY = 1,AUDIO_PAUSED = 2,};
enum MACRO_AUDIO_TEST {AUDIO_TEST_MODE_OFF = 0,AUDIO_TEST_MODE_ON = 1,};
enum MACRO_AUD_LEGACY {AUD_LEGACY = 0x1,AUD_REALTIME = 0x2,AUD_BLOCK = 0x4,AUD_FILE = 0x8,AUD_NO_SETEVENT = 0x10,EN_CREATE = 0x400,EN_DELETE = 0x800,EN_MODDAC = 0xC00,EN_MODACCESS = 0x1000,EN_OPEN = 0x1400,EN_CLOSE = 0x1800,EN_PROCESS = 0x1C00,EN_REMOVABLE = 0x2000,EN_LOGIN = 0x2400,EN_ADMIN = 0x2800,EN_IPCCREAT = 0x2C00,EN_IPCOPEN = 0x3000,EN_IPCCLOSE = 0x3400,EN_UEVENT1 = 0x3800,EN_UEVENT2 = 0x3C00,EN_UEVENT3 = 0x4000,EN_IPCDGRAM = 0x4400,EN_READDAC = 0x4800,EN_LOGOFF = 0x4C00,EN_EXEC = 0x5000,EN_CREDS = 0x5400,EN_SOCK = 0x5800,EN_FILE = 0x5C00,EN_LINK = 0x6000,EN_UNLINK = 0x6400,};
enum MACRO_AUTH_TLSIZ {AUTH_TLSIZ = 100,};
enum MACRO_A_CHARTEXT {A_CHARTEXT = 0xFF,};
enum MACRO_BLOCKSHIFT {BLOCKSHIFT = 9,};
enum MACRO_BT_DESTDEV {BT_DESTDEV = 5,MAXDEVICES = 10,};
enum MACRO_BT_ROOTDEV {BT_ROOTDEV = 2,BT_SWAPDEV = 3,BT_DUMPDEV = 4,BT_EXTRAS = 5,};
enum MACRO_BUFFERZONE {BUFFERZONE = 25,};
enum MACRO_BUS_DEVICE {BUS_DEVICE_RESET_MSG = 0xC,CLEAR_QUEUE_MSG = 0xE,};
enum MACRO_B_ORDSHIFT {B_ORDSHIFT = 3,B_ORD2 = 31,};
enum MACRO_CENTIMETER {CENTIMETER = 0x1,RADIANS = 0x2,INCH = 0x3,DEGREES = 0x4,};
enum MACRO_CHUNKSHIFT {CHUNKSHIFT = 5,};
enum MACRO_CIOCA_S1S2 {CIOCA_S1S2 = 0x800000,};
enum MACRO_CIO_BUFFER {CIO_BUFFER_NOT_IN_MEMORY = -25,};
enum MACRO_CIO_DAM_IS {CIO_DAM_IS_NOT_BOUND = -8,};
enum MACRO_CIO_MEMORY {CIO_MEMORY_REQUEST_FAILED = -13,};
enum MACRO_CIO_PARITY {CIO_PARITY = 0x80000000,CIO_LOGMUX = 0x40000000,CIO_BREAK = 0x10000000,};
enum MACRO_CIO_UNBIND {CIO_UNBIND_REPLY_FAILURE = -10,};
enum MACRO_CMD_STOP_I {CMD_STOP_I = 128,CMD_FLUSH_I = 129,CMD_CHAIN_I = 130,CMD_CLEAR_I = 131,CMD_RESET_I = 133,};
enum MACRO_CMDrelease {CMDmode_sense = 26,CMDstart_stop_unit = 27,CMDsend_diag = 29,CMDprevent_allow_media = 30,CMDread_capacity = 37,CMDread_ext = 40,};
enum MACRO_CMDreserve {CMDreserve_unit = 0x16,CMDrelease_unit = 0x17,CMDstop_print = 0x1B,CMDmode_select_10 = 0x55,CMDmode_sense_10 = 0x5A,};
enum MACRO_CMDwrite10 {CMDwrite10 = 0x2A,CMDerase = 0x2C,CMDwriteNverify = 0x2E,CMDverify = 0x2F,CMDsync_cache = 0x35,CMDread_defect_data = 0x37,CMDwrite_buffer = 0x3B,CMDread_buffer = 0x3C,CMDlog_select = 0x4C,CMDlog_sense = 0x4D,CMDread12 = 0xA8,CMDwrite12 = 0xAA,CMDread_full = 0xF0,CMDmedia_test = 0xF1,CMDaccess_log = 0xF2,CMDwrite_full = 0xFC,CMDmanage_primary = 0xFD,CMDexecute_data = 0xFE,};
enum MACRO_COLLISIONS {COLLISIONS = 0,TX_FRAME_COUNT = 1,RX_FRAME_COUNT = 2,UNTRANS_FRAMES = 3,UNDEL_RX_FRAMES = 4,NO_TX_SPACE = 5,LITTLE_RX_SPACE = 6,DEFERRED = 7,ONE_COLLISION = 8,MORE_COLLISIONS = 9,EXCESS_RETRIES = 10,LATE_COLLISIONS = 11,CARRIER_LOST = 12,TDR = 13,RX_BAD_CRC_FRAMES = 15,ALIGNMENT_ERRORS = 16,ILLEGAL_FRAME_SIZE = 17,MISSED_FRAMES = 18,NO_HEARTBEAT = 19,BAD_CONTROL_FIELD = 21,UNKNOWN_PROTOCOL = 22,RX_XID = 23,RX_TEST = 24,RX_SPECIAL_DROPPED = 25,RX_ERRORS = 26,LAN_RESTART = 27,TRN_LINE_ERR = 28,TRN_BURST_ERR = 29,TRN_ARI_FCI_ERR = 30,TRN_LOST_ERR = 31,TRN_CONGESTION_ERR = 32,TRN_COPY_ERR = 33,TRN_TOKEN_ERR = 34,TRN_BUS_ERR = 35,TRN_PARITY_ERR = 36,TRN_RING_STATUS = 37,TRN_ADAPTER_CHECK = 38,TRN_COMMAND_REJ = 39,DEVICE_STATUS = 80,MULTICAST_ADDRESSES = 81,FRAME_HEADER = 82,ARQ_STATUS = 84,STATUS_BUFFER = 85,MULTICAST_ADDR_LIST = 86,LOCAL_ADDRESS = 87,PERMANENT_ADDRESS = 88,STATUS_BUFFER_CLEAR = 89,PEEK_ADDRESS = 90,IODC = 91,PEEK_DATA = 92,READ_REGISTER = 93,RESET_HT = 94,RESET_HI = 95,SELFTEST = 96,LAN_LOOPBACK = 97,PATCH = 98,PATCH_END = 99,FLASH_INIT = 100,LINK_SPEED = 101,MTU_BYTE_SIZE = 102,IF_UNIT_NUMBER = 103,TRN_FUNC_ADDR = 104,TRN_XID_RESPONSE = 105,FC_GET_DIAGSTAT = 106,FC_GET_MIBIISTAT = 107,FC_GET_FCMIBSTAT = 108,FC_NPORT_ID = 109,};
enum MACRO_CONNECTION {CONNECTION_MADE = 0,CONNECTION_REFUSED = 1,CONNECTION_CLOSED = 2,WINDOW_SHARED = 3,WINDOW_UNSHARED = 4,WINDOW_UNSHARABLE = 5,BAD_FONT = 6,INPUT_ALLOWED = 7,INPUT_DISALLOWED = 8,WINDOW_PROP_CHANGE = 9,SERVER_TIMEOUT = 10,BAD_COLOR = 11,SX_IO_ERROR = 12,BAD_GC_FUNCTION = 13,SX_DHX_CLIENT = 14,SX_COLORMAP_TOO_SMALL = 15,SX_NO_COLORMAP = 16,CONNECTION_REFUSED_LOCAL = 100,SX_OUT_OF_MEM = 101,SX_CANT_SHARE = 102,SX_FOCUS_NOTIFY = 103,SX_DHA_WINDOW_SHARED = 110,SX_DHA_WINDOW_UNSHARED = 111,};
enum MACRO_CORE_RESET {CORE_RESET = 0x1,LASI_RTC = 0x9000,LASI_MISC_REGS = 0xC000,LASI_LLA_OFFSET = 0x67C4C,};
enum MACRO_CPU_IOLINE {CPU_IOLINE = 64,};
enum MACRO_CRT_CONFIG {CRT_CONFIG_NUM_LENGTH = 3,CRT_PAD_LENGTH = 8,};
enum MACRO_CS80_EX_TO {CS80_EX_TO_NCIC = -95,};
enum MACRO_CapNotLast {CapNotLast = 0,CapButt = 1,CapRound = 2,CapProjecting = 3,};
enum MACRO_Constraint {Constraint_Tab = 1,Key_Table = 2,Key_Table_Case_Ins = 3,Allowed_Argument_Table = 4,Argument_Type_Table_Value = 5,Charset_Xmstring_Names_Table = 6,Charset_Wrdirection_Table = 7,Charset_Parsdirection_Table = 8,Charset_Charsize_Table = 9,Charset_Lang_Names_Table = 10,Charset_Lang_Codes_Table = 11,Allowed_Control_Table = 12,Enum_Set_Table = 13,Argument_Enum_Set_Table = 14,Enumval_Values_Table = 15,Uil_Widget_Names = 16,Uil_Argument_Names = 17,Uil_Reason_Names = 18,Uil_Enumval_names = 19,Uil_Charset_Names = 20,Related_Argument_Table = 21,Allowed_Reason_Table = 22,Uil_Widget_Funcs = 23,Uil_Gadget_Funcs = 24,Uil_Urm_Nondialog_Class = 25,Uil_Urm_Subtree_Resource = 26,Uil_Argument_Toolkit_Names = 27,Uil_Reason_Toolkit_Names = 28,Child_Class_Table = 29,Allowed_Child_Table = 30,Uil_Children_Names = 31,};
enum MACRO_DAM_GET_IO {DAM_GET_IO_QUADS_ERR = -8,};
enum MACRO_DAM_LOCKED {DAM_LOCKED_OTHER = 0,LOCKED_HW_FAILURE = 1,DAM_MAX_DEVICE_ADDR = 8,DAM_MAX_CONFIG_DM = 32,};
enum MACRO_DA_INVALID {DA_INVALID_BLOCKSIZE = -51,};
enum MACRO_DA_NOT_CIC {DA_NOT_CIC = -32,};
enum MACRO_DEN_M_3480 {DEN_M_3480 = 1,DEN_M_3480c = 2,DEN_M_9490 = 3,DEN_M_9490c = 4,DEN_M_SD_3 = 5,DEN_M_SD_3c = 6,DEN_M_9840 = 7,DEN_M_9840c = 8,};
enum MACRO_DEN_M_3590 {DEN_M_3590 = 1,DEN_M_3590c = 2,};
enum MACRO_DEN_M_DDS1 {DEN_M_DDS1 = 1,DEN_M_DDS1c = 2,DEN_M_DDS2 = 3,DEN_M_DDS2c = 4,DEN_M_DDS3 = 5,DEN_M_DDS3c = 6,DEN_M_DDS4 = 7,DEN_M_DDS4c = 8,};
enum MACRO_DES_MAXLEN {DES_MAXLEN = 65536,DES_QUICKLEN = 16,};
enum MACRO_DH_RELEASE {DH_RELEASE_LEN = 255,DH_DUMP_MAGIC = -1882586108,};
enum MACRO_DIAG_CHECK {DIAG_CHECK = 9,DIAG_STATUS = 4,};
enum MACRO_DIAG_IOCTL {DIAG_IOCTL = 1,DIAG_READ = 0,};
enum MACRO_DIAG_WRITE {DIAG_WRITE = 6,DEV_STAT_IN_ACTION = 7,SELF_TEST_IN_ACTION = 8,WRITE_LB_IN_ACTION = 9,READ_LB_IN_ACTION = 10,DIAG_STAT_IN_ACTION = 11,HARD_ID = 12,};
enum MACRO_DIL_UNLOCK {DIL_UNLOCK = 2,CHANNEL_TYPE = 22,};
enum MACRO_DL_BADCORR {DL_BADCORR = 0x5,DL_BADDATA = 0x6,DL_BADPPA = 0x8,DL_BADPRIM = 0x9,DL_BADQOSPARAM = 0xA,DL_BADQOSTYPE = 0xB,};
enum MACRO_DL_HP_INFO {DL_HP_INFO_REQ = 0xF6,};
enum MACRO_DL_HP_SEND {DL_HP_SEND_RR = 0x99,DL_HP_PPA_REQ = 0xE2,};
enum MACRO_DL_PROMISC {DL_PROMISC_PHYS = 0x1,DL_PROMISC_SAP = 0x2,DL_PROMISC_MULTI = 0x3,DL_NONE = 0xB01,DL_MONITOR = 0xB02,DL_MAXIMUM = 0xB03,DL_UNKNOWN = 0xFFFFFFFF,};
enum MACRO_DL_UNBOUND {DL_UNBOUND = 0x0,DL_BIND_PENDING = 0x1,DL_UNBIND_PENDING = 0x2,DL_IDLE = 0x3,DL_UDQOS_PENDING = 0x7,DL_OUTCON_PENDING = 0x8,DL_INCON_PENDING = 0x9,DL_CONN_RES_PENDING = 0xA,DL_DATAXFER = 0xB,DL_USER_RESET_PENDING = 0xC,DL_PROV_RESET_PENDING = 0xD,DL_RESET_RES_PENDING = 0xE,DL_DISCON8_PENDING = 0xF,DL_DISCON9_PENDING = 0x10,DL_DISCON11_PENDING = 0x11,DL_DISCON12_PENDING = 0x12,DL_DISCON13_PENDING = 0x13,DL_SUBS_BIND_PND = 0x14,DL_SUBS_UNBIND_PND = 0x15,};
enum MACRO_DL_VERSION {DL_VERSION_2 = 0x2,DL_INFO_REQ = 0x0,};
enum MACRO_DMA_A_WORD {DMA_A_WORD_HW = 0,DMA_A_BYTE_HW = 1,DMA_A_SHZM_HW = 2,DMA_A_LOQUIX_HW = 3,};
enum MACRO_DMA_ENABLE {DMA_ENABLE = 0x1,SPA_ENABLE = 0x20,};
enum MACRO_DMA_TIMING {DMA_TIMING_ISA = 0x0,DMA_TIMING_A = 0x10,DMA_TIMING_B = 0x20,DMA_TIMING_C = 0x30,};
enum MACRO_DPMSModeOn {DPMSModeOn = 0,DPMSModeStandby = 1,DPMSModeSuspend = 2,DPMSModeOff = 3,};
enum MACRO_D_HASHFAIL {D_HASHFAIL = -8,};
enum MACRO_DestroyAll {DestroyAll = 0,RetainPermanent = 1,RetainTemporary = 2,};
enum MACRO_DeviceMode {DeviceMode = 1,};
enum MACRO_DvAccelNum {DvAccelNum = 1,DvAccelDenom = 2,DvThreshold = 4,};
enum MACRO_EISA1_IACK {EISA1_IACK_REG_OFFSET = 0x1F000,EISA1_IACK_REG = 0x2F000,};
enum MACRO_ELF64_CORE {ELF64_CORE_VERSION = 1,};
enum MACRO_FC_NPORTID {FC_NPORTID_SIZE = 3,FC_TUPLE_SIZE = 8,MAX_FC_TUPLES = 83,};
enum MACRO_FD_CLOEXEC {FD_CLOEXEC = 1,};
enum MACRO_FLARGEFILE {FLARGEFILE = 2048,};
enum MACRO_FS_OPTTIME {FS_OPTTIME = 0,FS_OPTSPACE = 1,};
enum MACRO_GATEWAYSID {GATEWAYSID = 0x0,SYSCALLGATE = 0xC0000004,};
enum MACRO_GCFASTLOCK {GCFASTLOCK = 536889114,GCFASTLOCK_NOWAIT = 536889115,};
enum MACRO_GCFunction {GCFunction = 1,GCPlaneMask = 2,GCForeground = 4,GCBackground = 8,GCLineWidth = 16,GCLineStyle = 32,GCCapStyle = 64,GCJoinStyle = 128,GCFillStyle = 256,GCFillRule = 512,GCTile = 1024,GCStipple = 2048,GCTileStipXOrigin = 4096,GCTileStipYOrigin = 8192,GCFont = 16384,GCSubwindowMode = 32768,GCGraphicsExposures = 65536,GCClipXOrigin = 131072,GCClipYOrigin = 262144,GCClipMask = 524288,GCDashOffset = 1048576,GCDashList = 2097152,GCArcMode = 4194304,};
enum MACRO_GCVARIABLE {GCVARIABLE_CMAP = 536889100,GCRESET = 536889106,};
enum MACRO_GLOBAL_VAR {GLOBAL_VAR_MASK = 12910592,SAVE_STATE_MASK = 20643584,};
enum MACRO_GLOB_ABEND {GLOB_ABEND = 2,};
enum MACRO_GMT_MEDIUM {GMT_MEDIUM_MASK = 0xFF,};
enum MACRO_GRAPH_DIAG {GRAPH_DIAG_IDENT = 0,GRAPH_DIAG_WHICH_INTERFACE = 1,};
enum MACRO_HID_DEVICE {HID_DEVICE_ADD = 0x1,HID_DEVICE_DELETE = 0x0,HID_NONE = 0x0,};
enum MACRO_HP9000S800 {HP9000S800_ID = 523,};
enum MACRO_HPHYSINV_U {HPHYSINV_U = 0x0,HPHYSINV_L = 0x0,};
enum MACRO_HPPAC_TRAP {HPPAC_TRAP_INSTRUCTION = 0xB0001FE5,};
enum MACRO_HostInsert {HostInsert = 0,HostDelete = 1,};
enum MACRO_I64STRSIZE {I64STRSIZE = 22,};
enum MACRO_IEEE8025_4 {IEEE8025_4_MTU = 4170,};
enum MACRO_IEEESAP_HP {IEEESAP_HP = 0xFC,};
enum MACRO_IEEESAP_NM {IEEESAP_NM = 0xF8,IEEEXSAP_PROBE = 0x503,IEEEXSAP_DUX = 0x164F,};
enum MACRO_IGMP_TIMER {IGMP_TIMER_SCALE = 10,IGMP_DELAYING_MEMBER = 1,};
enum MACRO_INTSTRSIZE {INTSTRSIZE = 12,};
enum MACRO_INT_FAST16 {INT_FAST16_MIN = -2147483648,};
enum MACRO_INT_FAST32 {INT_FAST32_MIN = -2147483648,};
enum MACRO_INT_LEAST8 {INT_LEAST8_MAX = 127,INT_LEAST16_MAX = 32767,};
enum MACRO_INVLDCICRQ {INVLDCICRQ = -5,};
enum MACRO_IOC_NATIVE {IOC_NATIVE = 1,IOC_NONE = 0,};
enum MACRO_IO_TIMEOUT {IO_TIMEOUT = 1,IO_WIDTH = 2,IO_SPEED = 3,IO_READ_PATTERN = 4,IO_RESET = 5,IO_TERM_REASON = 6,IO_LOCK = 7,IO_UNLOCK = 8,IO_RAW_DEV = 9,IO_INTERRUPT = 10,IO_DMA = 11,IO_SET_MAP_ADDR = 12,};
enum MACRO_IPC_LOCKED {IPC_LOCKED = 0x4000,IPC_WANTED = 0x800,};
enum MACRO_IPTOS_PREC {IPTOS_PREC_NETCONTROL = 0xE0,};
enum MACRO_IP_DEFAULT {IP_DEFAULT_MULTICAST_TTL = 1,};
enum MACRO_IP_HDRINCL {IP_HDRINCL = 0x1002,IP_RECVOPTS = 0x1005,IP_RECVRETOPTS = 0x1006,IP_RECVDSTADDR = 0x1007,IP_RETOPTS = 0x1008,IP_BROADCAST_IFNAME = 0x1015,IP_RECVIFADDR = 0x1016,IP_LINK_STATUS = 0x1017,IP_BROADCAST_IF = 0x1018,};
enum MACRO_ISA_TIMING {ISA_TIMING = 0x0,TYPEA_TIMING = 0x10,TYPEB_TIMING = 0x20,TYPEC_TIMING = 0x30,};
enum MACRO_I_LOOPBACK {I_LOOPBACK = 2,I_PPOLL_CONF = 68,I_PPOLL_IST = 71,I_SRQ = 73,I_ADDRESS = 75,I_DA_INIT = 77,I_ATN = 78,I_REN = 79,I_MISC_INT = 80,C_BUFSIZE = 84,};
enum MACRO_I_NONEXIST {I_NONEXIST = 0,I_HPMACH_CHK = 1,I_POW_FAIL = 2,I_RECOV_CTR = 3,I_EXT_INTP = 4,I_LPMACH_CHK = 5,I_IPGFT = 6,I_IMEM_PROT = 7,I_UNIMPL_INST = 8,I_BRK_INST = 9,I_PRIV_OP = 10,I_PRIV_REG = 11,I_OVFLO = 12,I_COND = 13,I_EXCEP = 14,I_DPGFT = 15,I_IPGFT_NA = 16,I_DPGFT_NA = 17,I_DMEM_PROT = 18,I_DMEM_BREAK = 19,I_TLB_DIRTY = 20,I_VIO_REF = 21,I_EMULAT = 22,I_HPRIV_XFR = 23,I_LPRIV_XFR = 24,I_TAKEN_BR = 25,T_KPREEMPT = 26,I_ICS_OVFL = 27,I_KS_OVFL = 28,T_MPSCHED = 29,T_PANIC = 31,};
enum MACRO_I_UNEXPECT {I_UNEXPECT = 30,I_PERF_MON = 60,};
enum MACRO_IsUnmapped {IsUnmapped = 0,IsUnviewable = 1,IsViewable = 2,};
enum MACRO_IsXPointer {IsXPointer = 0,IsXKeyboard = 1,IsXExtensionDevice = 2,};
enum MACRO_KBD_98203C {KBD_98203C_UNITED_STATES = 0x0,KBD_98203C_FRENCHQ = 0x1,KBD_98203C_GERMAN = 0x2,KBD_98203C_FINNISH = 0x3,KBD_98203C_SPANISH = 0x4,KBD_98203C_KATAKANA = 0x5,KBD_98203C_FRENCHA = 0x6,};
enum MACRO_KBD_IDTYPE {KBD_IDTYPE_98203C = 2,KBD_STAT_LEFTSHIFT = 16,KBD_STAT_RIGHTSHIFT = 64,};
enum MACRO_KI_INVALID {KI_INVALID = 1,KI_MPROTECT = 2,KI_MMAP_DBD_HOLE = 3,KI_COPYONWRITE = 4,KI_INTRANSIT = 5,KI_ACCESSRIGHT = 6,KI_PROTID = 7,KI_ALIGNMENT = 8,KI_HDL_OTHERFAULTS = 9,};
enum MACRO_KI_PFAULTN {KI_PFAULTN = 1,KI_VFAULTN = 2,};
enum MACRO_KI_SPINUPD {KI_SPINUPD = 590,};
enum MACRO_KI_STRWELD {KI_STRWELD = 583,};
enum MACRO_KI_SWAPPER {KI_SWAPPER = 598,};
enum MACRO_LASI_ERROR {LASI_ERROR_INT_LINE = 17,LASI_ERROR_INT_MASK = 16384,};
enum MACRO_LE_RCLFREE {LE_RCLFREE_NEG = 2000,LE_BUFS_SBAPPEND_DROP = 3000,LE_BUFS_NMBCLUSTERS_INUSE = 4000,LE_BUFS_NO_CREDITS = 4001,LE_BUFS_CDROPS = 5001,LE_BUFS_ADROPS = 5002,LE_BUFS_RDROPS = 5003,};
enum MACRO_LLIO_BLANK {LLIO_BLANK_CHECK = -79,};
enum MACRO_LLIO_CLEAR {LLIO_CLEAR_FAILURE = -60,};
enum MACRO_LLIO_ERROR {LLIO_ERROR_RD_STATUS = -57,};
enum MACRO_LLIO_LOWER {LLIO_LOWER_MGR_ERROR = -39,};
enum MACRO_LLIO_STILL {LLIO_STILL_BOUND = -16,};
enum MACRO_LLIO_WRONG {LLIO_WRONG_ID_CODE = -59,};
enum MACRO_LOQUIX_DIE {LOQUIX_DIE = 2,LOQUIX_EIE = 1,};
enum MACRO_LWP_WAKEUP {LWP_WAKEUP_ALL = 0x1,LWP_WAKEUP_ONE = 0x2,LWP_WAKEUP_OTHER = 0x100,};
enum MACRO_LW_SYSCALL {LW_SYSCALL_OFF_MI = 2,LW_SYSCALL_OFF_MP = 8,};
enum MACRO_LedModeOff {LedModeOff = 0,LedModeOn = 1,};
enum MACRO_MAP_FAILED {MAP_FAILED = -1,};
enum MACRO_MAP_SHARED {MAP_SHARED = 0x1,MAP_PRIVATE = 0x2,MAP_FIXED = 0x4,MAP_VARIABLE = 0x8,MAP_ANONYMOUS = 0x10,MAP_FILE = 0x20,MAP_SHLIB = 0x40,MAP_STATICPREDICTION = 0x80,MAP_FLIPPERDISABLE = 0x100,MAP_ADDR32 = 0x200,MAP_NORESERVE = 0x400,};
enum MACRO_MAXDFLSRCH {MAXDFLSRCH = 3,MAXDNSRCH = 6,};
enum MACRO_MAXDUMPDEV {MAXDUMPDEV = 16,V1_DH_DUMP_MAGIC = -1882586622,};
enum MACRO_MAXLOPTLEN {MAXLOPTLEN = 16,};
enum MACRO_MAXNAMELEN {MAXNAMELEN = 1025,};
enum MACRO_MAXPATHLEN {MAXPATHLEN = 1024,};
enum MACRO_MAX_METHOD {MAX_METHOD_NAME = 32,};
enum MACRO_MAX_MSGLEN {MAX_MSGLEN = 8192,MAX_BUFLEN = 32767,};
enum MACRO_MAX_MSGNUM {MAX_MSGNUM = 65534,};
enum MACRO_MAX_NETOBJ {MAX_NETOBJ_SZ = 1024,};
enum MACRO_MAX_PROTID {MAX_PROTID_IDs = 32768,INVALID_SPACE1 = 65535,INVALID_SPACE2 = -1,};
enum MACRO_MAX_SERIAL {MAX_SERIAL_CTRL = 8,};
enum MACRO_MAX_SETNUM {MAX_SETNUM = 65535,};
enum MACRO_MAX_SUBSYS {MAX_SUBSYS = 256,};
enum MACRO_MEM_ADSIZE {MEM_ADSIZE_HI = 0x348,MEM_FREE = 0x380,MEM_HPA = 0x384,MEM_PDC = 0x388,};
enum MACRO_MEM_DECODE {MEM_DECODE_20 = 0x0,MEM_DECODE_24 = 0x4,MEM_DECODE_32 = 0x8,INT_IRQ_MASK = 0xF,INT_LEVEL_TRIG = 0x20,INT_MORE_ENTRIES = 0x80,};
enum MACRO_MEM_PHSIZE {MEM_PHSIZE_HI = 0x344,MEM_ADSIZE = 0x358,};
enum MACRO_MIN_SHARES {MIN_SHARES = 1,MAX_SHARES = 100,};
enum MACRO_MM_NULLLBL {MM_NULLLBL = 0,MM_NULLSEV = 0,MM_NULLMC = 0,MM_NULLTXT = 0,MM_NULLACT = 0,MM_NULLTAG = 0,};
enum MACRO_MNTPATHLEN {MNTPATHLEN = 1024,};
enum MACRO_MODMAXLINK {MODMAXLINK = 4,MODMAXLINKINFOLEN = 81,};
enum MACRO_MOUNTVERS3 {MOUNTVERS3 = 3,};
enum MACRO_MQ_ENABLED {MQ_ENABLED = 0x1,};
enum MACRO_MSEM_NOVUS {MSEM_NOVUS = 1,};
enum MACRO_MT_DENSITY {MT_DENSITY_MASK = 0xF,MT_DENSITY_BIT_POS = 0x0,};
enum MACRO_MT_OFFLINE {MT_OFFLINE = 2,DOOR_OPEN_EVENT = 4,END_OF_TAPE = 7,MT_PF = 8,DECOMPRESSION_EXC = 9,MT_FIXED_BLK_SIZE = 10,MT_FORMAT_CHANGE = 11,MT_FORMAT_CHANGE_2 = 12,MT_NEED_TO_CLEAN = 13,MT_CLEAN_COMPLETE = 14,};
enum MACRO_M_DONTWAIT {M_DONTWAIT = 1,M_WAIT = 0,};
enum MACRO_MrmFAILURE {MrmFAILURE = 0,MrmNOT_FOUND = 2,MrmEXISTS = 4,MrmNUL_GROUP = 6,MrmNUL_TYPE = 8,MrmWRONG_GROUP = 10,MrmWRONG_TYPE = 12,MrmOUT_OF_RANGE = 14,MrmBAD_RECORD = 16,MrmNULL_DATA = 18,MrmBAD_DATA_INDEX = 20,MrmBAD_ORDER = 22,MrmBAD_CONTEXT = 24,MrmNOT_VALID = 26,MrmBAD_BTREE = 28,MrmBAD_WIDGET_REC = 30,MrmBAD_CLASS_TYPE = 32,MrmNO_CLASS_NAME = 34,MrmTOO_MANY = 36,MrmBAD_IF_MODULE = 38,MrmNULL_DESC = 40,MrmOUT_OF_BOUNDS = 42,MrmBAD_COMPRESS = 44,MrmBAD_ARG_TYPE = 46,MrmNOT_IMP = 48,MrmNULL_INDEX = 50,MrmBAD_KEY_TYPE = 52,MrmBAD_CALLBACK = 54,MrmNULL_ROUTINE = 56,MrmVEC_TOO_BIG = 58,MrmBAD_HIERARCHY = 60,MrmBAD_CLASS_CODE = 62,MrmDISPLAY_NOT_OPENED = 63,MrmEOF = 64,MrmUNRESOLVED_REFS = 65,};
enum MACRO_MrmSUCCESS {MrmSUCCESS = 1,MrmCREATE_NEW = 3,MrmINDEX_RETRY = 5,MrmINDEX_GT = 7,MrmINDEX_LT = 9,MrmPARTIAL_SUCCESS = 11,};
enum MACRO_NETDIAG_ON {NETDIAG_ON = 1,NETDIAG_OFF = 0,};
enum MACRO_NET_NETISR {NET_NETISR_UNDEFER = 34,NET_ATMARPINTR = 35,NET_FCLWPINTR = 36,NET_ACCINTR = 37,NET_VPN_FORWARD = 38,NET_FILTER_PACKETS = 39,NET_IP_OUTPUTPRE = 40,NET_SPOOF_RESET = 41,NET_IA_CHECK = 42,NET_SPOOF_CHECK = 43,NET_IP_OUTPUTPOST = 44,NET_IPINTR_MQ = 45,NET_CREATE_XPORT_DEV = 46,};
enum MACRO_NFS_FHSIZE {NFS_FHSIZE = 32,};
enum MACRO_NL_MAXDATE {NL_MAXDATE = 200,};
enum MACRO_NL_SPECMAX {NL_SPECMAX = 96,PID_MAX = 30000,PIPE_MAX = 2147483647,};
enum MACRO_NL_TEXTMAX {NL_TEXTMAX = 8192,};
enum MACRO_NOTFILTERD {NOTFILTERD = 0,};
enum MACRO_NO_ADDRESS {NO_ADDRESS = 4,};
enum MACRO_NULLSTRING {NULLSTRING = 0,};
enum MACRO_NUMARGREGS {NUMARGREGS = 4,};
enum MACRO_NUMBERS_OF {NUMBERS_OF_LOG_CLASS = 6,VALID_NS_LOG_EVENT = 6000,NON_EVENT = -1,};
enum MACRO_NUM_IMPORT {NUM_IMPORT_EXPORTS = 1,FIRST_DATA_TRANSFER = 230,};
enum MACRO_NavDimMask {NavDimMask = 1,NavValue = 2,NavMinimum = 4,NavMaximum = 8,NavSliderSize = 16,NavIncrement = 32,NavPageIncrement = 64,};
enum MACRO_NewPointer {NewPointer = 0,NewKeyboard = 1,};
enum MACRO_NotifyHint {NotifyHint = 1,};
enum MACRO_PAM_CHANGE {PAM_CHANGE_EXPIRED_AUTHTOK = 4,};
enum MACRO_PAM_DELETE {PAM_DELETE_CRED = 2,PAM_REINITIALIZE_CRED = 4,PAM_REFRESH_CRED = 8,};
enum MACRO_PAM_PRELIM {PAM_PRELIM_CHECK = 1,PAM_UPDATE_AUTHTOK = 2,};
enum MACRO_PAM_PROMPT {PAM_PROMPT_ECHO_OFF = 1,PAM_PROMPT_ECHO_ON = 2,PAM_ERROR_MSG = 3,PAM_TEXT_INFO = 4,PAM_MAX_NUM_ATTR = 10,PAM_MAX_ATTR_SIZE = 80,};
enum MACRO_PCI_CS_REV {PCI_CS_REV_CLASS = 0x8,PCI_CS_CLASS_BASE = 0xB,};
enum MACRO_PC_UNKNOWN {PC_UNKNOWN = 0x0,PC_TOC = 0x1,PC_HPMC = 0x2,};
enum MACRO_PDE2_0_PPN {PDE2_0_PPN_HI = 16,PDE2_0_PPN_LO = 20,};
enum MACRO_PDE2_0_REF {PDE2_0_REF_TRICKLE_MASK = 0x2000,PDE_REF_TRICKLE_MASK = 0x4,};
enum MACRO_PDE2_0_UIP {PDE2_0_UIP_BYTE = 11,PDE2_0_UIP_BIT = 63,};
enum MACRO_PDE_AR_CWX {PDE_AR_CWX = 47,};
enum MACRO_PDE_AR_KXR {PDE_AR_KXR = 0x20,PDE_AR_KXRW = 0x30,};
enum MACRO_PDE_AR_UXR {PDE_AR_UXR = 0x2F,};
enum MACRO_PDE_SHADOW {PDE_SHADOW_OFF = 1,PDE_SHADOW_BIT = 131072,};
enum MACRO_PF_ENABLED {PF_ENABLED = 1,PF_SAVESTATE = 0,};
enum MACRO_PF_HP_CODE {PF_HP_CODE = 0x40000,PF_HP_MODIFY = 0x80000,PF_HP_PAGE_SIZE = 0x100000,PF_HP_FAR_SHARED = 0x200000,PF_HP_NEAR_SHARED = 0x400000,PF_HP_LAZYSWAP = 0x800000,};
enum MACRO_PGSHIFT_4K {PGSHIFT_4K = 12,NBPG_4K = 4096,};
enum MACRO_PMAPVERS_0 {PMAPVERS = 2,};
enum MACRO_PRC_IFDOWN {PRC_IFDOWN = 0,PRC_ROUTEDEAD = 1,PRC_QUENCH = 4,PRC_MSGSIZE = 5,PRC_HOSTDEAD = 6,PRC_HOSTUNREACH = 7,PRC_UNREACH_NET = 8,PRC_UNREACH_HOST = 9,PRC_UNREACH_PROTOCOL = 10,PRC_UNREACH_PORT = 11,PRC_UNREACH_NEEDFRAG = 12,PRC_UNREACH_SRCFAIL = 13,PRC_REDIRECT_NET = 14,PRC_REDIRECT_HOST = 15,PRC_REDIRECT_TOSNET = 16,PRC_REDIRECT_TOSHOST = 17,PRC_TIMXCEED_INTRANS = 18,PRC_TIMXCEED_REASS = 19,PRC_PARAMPROB = 20,PRC_NCMDS = 21,};
enum MACRO_PROP_MOTIF {PROP_MOTIF_WM_INFO_ELEMENTS = 2,};
enum MACRO_PS_NOTUSED {PS_NOTUSED = 0,PS_USER_AREA = 1,PS_TEXT = 2,PS_DATA = 3,PS_STACK = 4,PS_SHARED_MEMORY = 5,PS_NULLDEREF = 6,PS_IO = 7,PS_MMF = 8,PS_GRAPHICS = 9,PS_GRAPHICS_DMA = 10,};
enum MACRO_PlaceOnTop {PlaceOnTop = 0,PlaceOnBottom = 1,};
enum MACRO_QUEUEPAIRS {QUEUEPAIRS = 3,};
enum MACRO_REG_BADPAT {REG_BADPAT = 2,REG_BADBR = 3,REG_ECHAR = 14,REG_EBOL = 15,REG_EEOL = 16,REG_NOMATCH = 20,REG_ECOLLATE = 21,REG_EESCAPE = 22,REG_ERANGE = 23,REG_ECTYPE = 24,REG_ESUBREG = 25,REG_BADRPT = 26,};
enum MACRO_REG_ENOSYS {REG_ENOSYS = 28,};
enum MACRO_REG_NOTBOL {REG_NOTBOL = 0x1,REG_NOTEOL = 0x2,};
enum MACRO_RENDEZVOUS {RENDEZVOUS_INT = 0,};
enum MACRO_RESTRICTED {RESTRICTED = 1,};
enum MACRO_RPCBVERS_0 {RPCBVERS = 3,};
enum MACRO_RPCBVERS_4 {RPCBVERS_4_STAT = 2,RPCBVERS_3_STAT = 1,RPCBVERS_2_STAT = 0,};
enum MACRO_RPC_SERVER {RPC_SERVER = 2,RPC_TEST = 3,};
enum MACRO_RPC_SVC_MT {RPC_SVC_MT_NONE = 0,RPC_SVC_MT_AUTO = 1,RPC_SVC_MT_USER = 2,};
enum MACRO_RQUOTAPROC {RQUOTAPROC_GETQUOTA = 1,RQUOTAPROC_GETACTIVEQUOTA = 2,};
enum MACRO_RQUOTAPROG {RQUOTAPROG = 100011,};
enum MACRO_RQUOTAVERS {RQUOTAVERS_ORIG = 1,};
enum MACRO_RS_ALL_NET {RS_ALL_NET_LOG = 41,};
enum MACRO_RTPRIO_MIN {RTPRIO_MIN = 0,RTPRIO_MAX = 127,NOTREALTIME = -1,};
enum MACRO_RUSERSPROC {RUSERSPROC_NUM = 1,RUSERSPROC_NAMES = 2,RUSERSPROC_ALLNAMES = 3,RUSERSPROG = 100002,};
enum MACRO_RUSERSVERS {RUSERSVERS_ORIG = 1,RUSERSVERS_IDLE = 2,};
enum MACRO_SA_ONSTACK {SA_ONSTACK = 0x1,SA_RESETHAND = 0x4,SA_NODEFER = 0x20,SA_RESTART = 0x40,SA_NOCLDWAIT = 0x80,_SA_SIGGFAULT = 0x100,};
enum MACRO_SCSI_ABORT {SCSI_ABORT = 1,SCSI_ABORT_TAG = 2,SCSI_CLEAR_QUEUE = 3,SCSI_BDR = 4,};
enum MACRO_SCSI_EVENT {SCSI_EVENT = -7,};
enum MACRO_SEM_OBJECT {SEM_OBJECT = 0x4,MSG_OBJECT = 0x8,PTH_MUTEX_OBJECT = 0x10,PTH_CONDVAR_OBJECT = 0x20,LWP_MUTEX_OBJECT = 0x40,LWP_CONDVAR_OBJECT = 0x80,RELATIVE_TIMEOUT_VALUE = 0x200,PTH_SPINLOCK_OBJECT = 0x1000,LWP_SEMA_OBJECT = 0x2000,};
enum MACRO_SHEADHIWAT {SHEADHIWAT = 65536,};
enum MACRO_SHEADLOWAT {SHEADLOWAT = 8192,};
enum MACRO_SHF_COMDAT {SHF_COMDAT = 8,SHT_COMDAT = 12,};
enum MACRO_SHF_PARISC {SHF_PARISC_SBP = 0x80000000,SHF_PARISC_HUGE = 0x40000000,SHF_PARISC_SHORT = 0x20000000,SHF_PARISC_WEAKORDER = 0x10000000,};
enum MACRO_SHM_RDONLY {SHM_RDONLY = 0x1000,SHM_RND = 0x2000,};
enum MACRO_SHN_LOPROC {SHN_LOPROC = 0xFF00,SHN_HIPROC = 0xFF1F,SHN_LOOS = 0xFF20,SHN_HIOS = 0xFF3F,SHN_ABS = 0xFFF1,SHN_COMMON = 0xFFF2,SHN_HIRESERVE = 0xFFFF,};
enum MACRO_SHN_PARISC {SHN_PARISC_ANSI_COMMON = 0xFF00,SHN_PARISC_HUGE_COMMON = 0xFF01,SHNX_PARISC_ANSI_COMMON = 0xFFFF00,SHNX_PARISC_HUGE_COMMON = 0xFFFF01,SHT_PARISC_EXT = 0x70000000,SHT_PARISC_UNWIND = 0x70000001,SHT_PARISC_DOC = 0x70000002,SHT_PARISC_ANNOT = 0x70000003,SHT_PARISC_DLKM = 0x70000004,};
enum MACRO_SHN_XINDEX {SHN_XINDEX = 0xFFFF,};
enum MACRO_SIG_RETURN {SIG_RETURN = 1,SIG_RESTART = 0,};
enum MACRO_SIOC_ABORT {SIOC_ABORT = 536892204,SIOC_INIT_ELEM_STAT = 536892211,};
enum MACRO_SIOC_RESET {SIOC_RESET_DEV = 536892229,};
enum MACRO_SNAP8025_4 {SNAP8025_4_MTU = 4170,};
enum MACRO_SP_INHERIT {SP_INHERIT = 15,};
enum MACRO_SS_NOFDREF {SS_NOFDREF = 0x1,SS_ISCONNECTED = 0x2,SS_ISCONNECTING = 0x4,SS_ISDISCONNECTING = 0x8,SS_CANTSENDMORE = 0x10,SS_CANTRCVMORE = 0x20,SS_RCVATMARK = 0x40,SS_PRIV = 0x80,SS_NBIO = 0x100,SS_ASYNC = 0x200,SS_INTERRUPTED = 0x400,SS_NOWAIT = 0x800,SS_NOUSER = 0x1000,SS_BOUND = 0x2000,SS_XOPEN_EXT1 = 0x4000,};
enum MACRO_SS_ONSTACK {SS_ONSTACK = 0x1,SS_DISABLE = 0x2,};
enum MACRO_STATE_NDAC {STATE_NDAC = 0x1,STATE_SRQ = 0x2,STATE_REN = 0x4,STATE_ACTIVE_CTLR = 0x8,STATE_SYSTEM_CTLR = 0x10,STATE_TALK = 0x20,STATE_LISTEN = 0x40,STATE_MY_ADDRESS = 0x80,STATUS_BITS = 0xFF,};
enum MACRO_STT_PARISC {STT_PARISC_MILLI = 0xD,};
enum MACRO_SYS_accept {SYS_accept = 275,SYS_BIND = 276,};
enum MACRO_SYS_access {SYS_access = 33,SYS_NICE = 34,};
enum MACRO_SYS_audctl {SYS_audctl = 248,SYS_OGETACCESS = 249,};
enum MACRO_SYS_chroot {SYS_chroot = 61,SYS_FCNTL = 62,};
enum MACRO_SYS_execve {SYS_execve = 59,SYS_UMASK = 60,};
enum MACRO_SYS_fchdir {SYS_fchdir = 272,SYS_GETMOUNT_CNT = 273,};
enum MACRO_SYS_fchmod {SYS_fchmod = 124,SYS_SETRESUID = 126,};
enum MACRO_SYS_fchown {SYS_fchown = 123,SYS_FCHMOD = 124,};
enum MACRO_SYS_getacl {SYS_getacl = 404,SYS_FGETACL = 405,};
enum MACRO_SYS_getgid {SYS_getgid = 47,SYS_ACCT = 51,};
enum MACRO_SYS_getmsg {SYS_getmsg = 270,SYS_PUTMSG = 271,};
enum MACRO_SYS_getpid {SYS_getpid = 20,SYS_MOUNT = 21,};
enum MACRO_SYS_getsid {SYS_getsid = 333,SYS_SYSFS = 334,};
enum MACRO_SYS_getuid {SYS_getuid = 24,SYS_STIME = 25,};
enum MACRO_SYS_ksleep {SYS_ksleep = 398,SYS_KWAKEUP = 399,};
enum MACRO_SYS_lchmod {SYS_lchmod = 18,SYS_LSEEK = 19,};
enum MACRO_SYS_lchown {SYS_lchown = 332,SYS_GETSID = 333,};
enum MACRO_SYS_listen {SYS_listen = 281,SYS_RECV = 282,};
enum MACRO_SYS_mkrnod {SYS_mkrnod = 170,SYS_TEST = 171,};
enum MACRO_SYS_mmap64 {SYS_mmap64 = 367,SYS_SETRLIMIT64 = 368,};
enum MACRO_SYS_modadm {SYS_modadm = 487,SYS_MODSTAT = 488,};
enum MACRO_SYS_msgctl {SYS_msgctl = 313,SYS_SHMCTL = 314,};
enum MACRO_SYS_msgget {SYS_msgget = 159,SYS_MSGSND = 161,};
enum MACRO_SYS_msgrcv {SYS_msgrcv = 162,SYS_SHMGET = 163,};
enum MACRO_SYS_msgsnd {SYS_msgsnd = 161,SYS_MSGRCV = 162,};
enum MACRO_SYS_msleep {SYS_msleep = 321,SYS_MWAKEUP = 322,};
enum MACRO_SYS_munmap {SYS_munmap = 73,SYS_MPROTECT = 74,};
enum MACRO_SYS_mysite {SYS_mysite = 180,SYS_SITELS = 181,};
enum MACRO_SYS_nfssvc {SYS_nfssvc = 190,SYS_GETFH = 191,};
enum MACRO_SYS_preadv {SYS_preadv = 373,SYS_PWRITE = 374,};
enum MACRO_SYS_profil {SYS_profil = 44,SYS_KI_CALL = 45,};
enum MACRO_SYS_ptrace {SYS_ptrace = 26,SYS_ALARM = 27,};
enum MACRO_SYS_putmsg {SYS_putmsg = 271,SYS_FCHDIR = 272,};
enum MACRO_SYS_pwrite {SYS_pwrite = 374,SYS_PWRITEV = 375,};
enum MACRO_SYS_reboot {SYS_reboot = 55,SYS_SYMLINK = 56,};
enum MACRO_SYS_rename {SYS_rename = 128,SYS_TRUNCATE = 129,};
enum MACRO_SYS_rtprio {SYS_rtprio = 152,SYS_PLOCK = 153,};
enum MACRO_SYS_select {SYS_select = 93,SYS_FSYNC = 95,};
enum MACRO_SYS_semctl {SYS_semctl = 312,SYS_MSGCTL = 313,};
enum MACRO_SYS_semget {SYS_semget = 156,SYS_SEMOP = 158,};
enum MACRO_SYS_sendto {SYS_sendto = 287,SYS_SETSOCKOPT = 288,};
enum MACRO_SYS_set_no {SYS_set_no_trunc = 229,SYS_PATHCONF = 230,};
enum MACRO_SYS_setacl {SYS_setacl = 406,SYS_FSETACL = 407,};
enum MACRO_SYS_setgid {SYS_setgid = 46,SYS_GETGID = 47,};
enum MACRO_SYS_setuid {SYS_setuid = 23,SYS_GETUID = 24,};
enum MACRO_SYS_shmctl {SYS_shmctl = 314,SYS_MPCTL = 315,};
enum MACRO_SYS_shmget {SYS_shmget = 163,SYS_SHMAT = 165,};
enum MACRO_SYS_sitels {SYS_sitels = 181,SYS_SWAPCLIENTS = 182,};
enum MACRO_SYS_socket {SYS_socket = 290,SYS_SOCKETPAIR = 291,};
enum MACRO_SYS_spuctl {SYS_spuctl = 493,SYS_ZEROKERNELSUM = 494,};
enum MACRO_SYS_stat64 {SYS_stat64 = 369,SYS_TRUNCATE64 = 370,};
enum MACRO_SYS_statfs {SYS_statfs = 196,SYS_FSTATFS = 197,};
enum MACRO_SYS_swapfs {SYS_swapfs = 259,SYS_FSS = 260,};
enum MACRO_SYS_swapon {SYS_swapon = 85,SYS_GETITIMER = 86,};
enum MACRO_SYS_ttrace {SYS_ttrace = 461,SYS_TTRACE_WAIT = 462,};
enum MACRO_SYS_ulimit {SYS_ulimit = 63,SYS_VFORK = 66,};
enum MACRO_SYS_umount {SYS_umount = 22,SYS_SETUID = 23,};
enum MACRO_SYS_unlink {SYS_unlink = 10,SYS_EXECV = 11,};
enum MACRO_SYS_utssys {SYS_utssys = 57,SYS_READLINK = 58,};
enum MACRO_SYS_waitid {SYS_waitid = 382,SYS_SETPGRP = 383,};
enum MACRO_SYS_writev {SYS_writev = 121,SYS_SETTIMEOFDAY = 122,};
enum MACRO_ShellIndex {ShellIndex = 5,XmOverrideShellIndex = 6,};
enum MACRO_StaticGray {StaticGray = 0,GrayScale = 1,StaticColor = 2,PseudoColor = 3,TrueColor = 4,DirectColor = 5,};
enum MACRO_TAG_DCACHE {TAG_DCACHE_ONE = 4,TAG_OCACHE = 5,TAG_SECURE = 6,TAG_TCACHE_ONE = 7,TAG_DCACHE_ALL = 8,TAG_TCACHE_ALL = 9,TAG_GCACHE_ONE = 10,TAG_DCACHE_ONE_REFRESH = 11,TAG_OPSTATS = 2048,TAG_THREADS = 2049,TAG_HEAP = 2050,TAG_UPDATES = 2051,TAG_VISIBLE = 2052,TAG_S_DCACHE = 2053,TAG_S_OCACHE = 2054,TAG_S_GCACHE = 2055,TAG_S_STORAGE = 2056,TAG_UPTIME = 2057,TAG_DIRLIST = 2058,TAG_NISCOMPAT = 2059,TAG_DNSFORWARDING = 2060,TAG_SECURITY_LEVEL = 2061,TAG_ROOTSERVER = 2062,};
enum MACRO_TAG_GCACHE {TAG_GCACHE_ALL = 3,TAG_DCACHE = 4,};
enum MACRO_TCP_MAXWIN {TCP_MAXWIN = 65535,};
enum MACRO_TIOCREMOTE {TIOCREMOTE = 536900713,};
enum MACRO_TRAPTERMIO {TRAPTERMIO = 1,TRAPNONTERMIO = 2,};
enum MACRO_TR_Dialout {TR_Dialout = 1,TR___add_group = 2,TR___alloc_mbrs = 3,TR___authenticate = 4,TR___bind_rpc = 5,TR___break_name = 6,TR___buf = 7,TR___callback_error = 8,TR___callback_finish = 9,TR___callback_stub = 10,TR___clnt_create_loopback = 11,TR___core_lookup = 12,TR___cvt2attr = 13,TR___default_domain = 14,TR___des_crypt = 15,TR___des_encrypt = 16,TR___des_setkey = 17,TR___do_callback = 18,TR___do_ismember = 19,TR___domainname = 20,TR___free_list = 21,TR___get_clnt_uaddr = 22,TR___get_group = 23,TR___get_local_names = 24,TR___get_obj_defaults = 25,TR___get_ti_clnt = 26,TR___getclnt = 27,TR___hostdata = 28,TR___implicit_member = 29,TR___insert_entry = 30,TR___insert_group = 31,TR___insert_list = 32,TR___make_binding = 33,TR___map_addr = 34,TR___msgout = 35,TR___name_distance = 36,TR___name_hash = 37,TR___nextsep_of = 38,TR___nis_clnt_ibops = 39,TR___nis_clnt_nameops = 40,TR___nis_get_server = 41,TR___nis_init_callback = 42,TR___nis_librand = 43,TR___nis_map_group = 44,TR___nis_path_list = 45,TR___nis_pingproc = 46,TR___nis_run_callback = 47,TR___nis_tagproc = 48,TR___remove_entry = 49,TR___remove_group = 50,TR___rpc_dtbsize = 51,TR___rpc_endconf = 52,TR___rpc_get_a_size = 53,TR___rpc_get_default_domain = 54,TR___rpc_get_local_uid = 55,TR___rpc_get_t_size = 56,TR___rpc_getconf = 57,TR___rpc_getconfip = 58,TR___rpc_negotiate_uid = 59,TR___rpc_openchild = 60,TR___rpc_select_to_poll = 61,TR___rpc_setconf = 62,TR___rpc_timeval_to_msec = 63,TR___rpc_trace = 64,TR___rpcgettp = 65,TR___seterr_reply = 66,TR___simple_lookup = 67,TR___stop_clock = 68,TR___svcauth_des = 69,TR___svcauth_null = 70,TR___svcauth_short = 71,TR___svcauth_sys = 72,TR___svcauth_unix = 73,TR___yp_dobind = 74,TR__alloc_buf = 75,TR__dummy = 76,TR__null_tiptr = 77,TR__rcv_conn_con = 78,TR__snd_conn_req = 79,TR__t_aligned_copy = 80,TR__t_alloc_bufs = 81,TR__t_blocksigpoll = 82,TR__t_checkfd = 83,TR__t_do_ioctl = 84,TR__t_is_event = 85,TR__t_is_ok = 86,TR__t_max = 87,TR__t_putback = 88,TR__t_restore_state = 89,TR__t_setsize = 90,TR_accepted = 91,TR_addProto = 92,TR_add_entry_1 = 93,TR_additem = 94,TR_alarmtr = 95,TR_altconn = 96,TR_ask = 97,TR_assert = 98,TR_auth_destroy = 99,TR_auth_errmsg = 100,TR_authdes_create = 101,TR_authdes_destroy = 102,TR_authdes_getucred = 103,TR_authdes_marshal = 104,TR_authdes_nextverf = 105,TR_authdes_ops = 106,TR_authdes_pk_seccreate = 107,TR_authdes_refresh = 108,TR_authdes_seccreate = 109,TR_authdes_validate = 110,TR_authnone_create = 111,TR_authnone_destroy = 112,TR_authnone_marshal = 113,TR_authnone_ops = 114,TR_authnone_refresh = 115,TR_authnone_validate = 116,TR_authnone_verf = 117,TR_authsys_create = 118,TR_authsys_create_default = 119,TR_authsys_destroy = 120,TR_authsys_marshal = 121,TR_authsys_nextverf = 122,TR_authsys_ops = 123,TR_authsys_refresh = 124,TR_authsys_validate = 125,TR_bin2hex = 126,TR_bindresvport = 127,TR_blank = 128,TR_bsfix = 129,TR_cache_get = 130,TR_cache_init = 131,TR_cache_ref = 132,TR_cache_set = 133,TR_cache_spot = 134,TR_cache_victim = 135,TR_calchash = 136,TR_callrpc = 138,TR_cbc_crypt = 139,TR_chat = 140,TR_check_binding = 141,TR_check_version = 142,TR_chkblk = 143,TR_cklock = 144,TR_classmatch = 145,TR_cleanup = 146,TR_clnt_broadcast = 147,TR_clnt_call = 148,TR_clnt_com_create = 149,TR_clnt_control = 150,TR_clnt_create = 151,TR_clnt_create_vers = 152,TR_clnt_destroy = 153,TR_clnt_dg_abort = 154,TR_clnt_dg_call = 155,TR_clnt_dg_control = 156,TR_clnt_dg_create = 157,TR_clnt_dg_destroy = 158,TR_clnt_dg_freeres = 159,TR_clnt_dg_geterr = 160,TR_clnt_dg_ops = 161,TR_clnt_freeres = 162,TR_clnt_geterr = 163,TR_clnt_pcreateerror = 164,TR_clnt_perrno = 165,TR_clnt_perror = 166,TR_clnt_raw_abort = 167,TR_clnt_raw_call = 168,TR_clnt_raw_control = 169,TR_clnt_raw_create = 170,TR_clnt_raw_destroy = 171,TR_clnt_raw_freeres = 172,TR_clnt_raw_geterr = 173,TR_clnt_raw_ops = 174,TR_clnt_spcreateerror = 175,TR_clnt_sperrno = 176,TR_clnt_sperror = 177,TR_clnt_tli_create = 178,TR_clnt_tp_create = 179,TR_clnt_vc_abort = 180,TR_clnt_vc_call = 181,TR_clnt_vc_control = 182,TR_clnt_vc_create = 183,TR_clnt_vc_destroy = 184,TR_clnt_vc_freeres = 185,TR_clnt_vc_geterr = 186,TR_clnt_vc_ops = 187,TR_clntraw_create = 188,TR_clnttcp_create = 189,TR_clntudp_bufcreate = 190,TR_clntudp_create = 191,TR_cmpdatum = 192,TR_comment = 193,TR_common_crypt = 194,TR_conn = 195,TR_currdev = 196,TR_currdial = 197,TR_currsys = 198,TR_dbm_access = 199,TR_dbmclose = 200,TR_dbmflush = 201,TR_dbminit = 202,TR_delete = 203,TR_delitem = 204,TR_delock = 205,TR_des_setparity = 206,TR_detachnode = 207,TR_devreset = 208,TR_dial = 209,TR_dial801 = 210,TR_dialreset = 211,TR_dkbreak = 212,TR_dkcall = 213,TR_dkdial = 214,TR_dkerr = 215,TR_dkerrmap = 216,TR_dkminor = 217,TR_dkndial = 218,TR_dksetup = 219,TR_dkteardown = 220,TR_do_accept = 221,TR_doassign = 222,TR_dobase = 223,TR_doconfig = 224,TR_dofirst = 225,TR_domaster = 226,TR_domatch = 227,TR_donext = 228,TR_doorder = 229,TR_dopop = 230,TR_dopush = 231,TR_dorun = 232,TR_dots_in_name = 233,TR_dtnamer = 234,TR_eaccess = 235,TR_eatwhite = 236,TR_ecb_crypt = 237,TR_endhostent = 238,TR_endnetconfig = 239,TR_endnetpath = 240,TR_endrpcent = 241,TR_err_conv = 242,TR_expect = 243,TR_exphone = 244,TR_extract_secret = 245,TR_fd_cklock = 246,TR_fd_mklock = 247,TR_fd_rmlock = 248,TR_fdig = 249,TR_fetch = 250,TR_ffs = 251,TR_fgetnetconfig = 252,TR_fill_input_buf = 253,TR_findProto = 254,TR_finds = 255,TR_firsthash = 256,TR_firstkey = 257,TR_fix_buf_size = 258,TR_fixline = 259,TR_flush_out = 260,TR_fn_cklock = 261,TR_forder = 262,TR_free_entry = 263,TR_free_name_item = 264,TR_freenetconfigent = 265,TR_freenode = 266,TR_gdial = 267,TR_getProto = 268,TR_get_default_domain = 269,TR_get_input_bytes = 270,TR_get_myaddress = 271,TR_getargs = 272,TR_getbit = 273,TR_getbroadcastnets = 274,TR_getbyte = 275,TR_getclnt = 276,TR_getclnthandle = 277,TR_getdesfd = 278,TR_getdevline = 279,TR_getdialline = 280,TR_getdomainname = 281,TR_getflag = 282,TR_getgroups = 283,TR_gethostbyaddr = 284,TR_gethostbynamadr = 285,TR_gethostbyname = 286,TR_gethostent = 287,TR_gethostname = 288,TR_getkeys_files = 289,TR_getkeys_nis = 290,TR_getkeys_nisplus = 291,TR_getkeyserv_handle = 292,TR_getline = 293,TR_getlookups = 294,TR_getname = 295,TR_getnetconfig = 296,TR_getnetconfigent = 297,TR_getnetid = 298,TR_getnetid_files = 299,TR_getnetid_nis = 300,TR_getnetid_nisplus = 301,TR_getnetlist = 302,TR_getnetname = 303,TR_getnetpath = 304,TR_getnettype = 305,TR_getnlookups = 306,TR_getpop = 307,TR_getpublicandprivatekey = 308,TR_getpublickey = 309,TR_getpush = 310,TR_getrpcbyname = 312,TR_getrpcbynumber = 313,TR_getrpcent = 314,TR_getsecretkey = 315,TR_getsysline = 316,TR_getto = 317,TR_gettoken = 318,TR_getvalue = 319,TR_got_entry = 320,TR_harmless = 321,TR_hashinc = 322,TR_hex2bin = 323,TR_hexval = 324,TR_host2netname = 325,TR_ifdate = 326,TR_inet_addr = 327,TR_inet_netof = 328,TR_inet_ntoa = 329,TR_interface = 330,TR_invalidate = 331,TR_ioctl = 332,TR_key_call = 333,TR_key_decryptsession = 334,TR_key_decryptsession_pk = 335,TR_key_encryptsession = 336,TR_key_encryptsession_pk = 337,TR_key_gendes = 338,TR_key_setsecret = 339,TR_load_dom_binding = 340,TR_load_xlate = 341,TR_local_rpcb = 342,TR_logent = 343,TR_makdatum = 344,TR_makefd_xprt = 345,TR_makenode = 346,TR_marshal_new_auth = 347,TR_memcp = 348,TR_mergeProto = 349,TR_mklock = 350,TR_mlock = 351,TR_msgout = 352,TR_namematch = 353,TR_nameparse = 354,TR_nap = 355,TR_nc_perror = 356,TR_nc_sperror = 357,TR_negotiate_broadcast = 358,TR_netconfig_dup = 359,TR_netconfig_free = 360,TR_netdir_free = 361,TR_netdir_getbyaddr = 362,TR_netdir_getbyname = 363,TR_netdir_options = 364,TR_netdir_perror = 365,TR_netdir_sperror = 366,TR_netlist_free = 367,TR_netname2host = 368,TR_netname2user = 369,TR_newborn = 370,TR_nextProto = 371,TR_nextdevices = 372,TR_nextdialers = 373,TR_nextkey = 374,TR_nextsystems = 375,TR_nis_add = 376,TR_nis_add_clnt = 377,TR_nis_add_entry = 378,TR_nis_addmember = 379,TR_nis_callback_clnt = 380,TR_nis_checkpoint = 381,TR_nis_checkpoint_clnt = 382,TR_nis_clone_object = 383,TR_nis_cptime_clnt = 384,TR_nis_creategroup = 385,TR_nis_data = 386,TR_nis_destroy_object = 387,TR_nis_destroygroup = 388,TR_nis_dir_cmp = 389,TR_nis_domain_of = 390,TR_nis_dump = 391,TR_nis_dump_clnt = 392,TR_nis_dumplog = 393,TR_nis_dumplog_clnt = 394,TR_nis_find_item = 395,TR_nis_finddirectory = 396,TR_nis_finddirectory_clnt = 397,TR_nis_first_entry = 398,TR_nis_flush_namelist = 399,TR_nis_flush_table = 400,TR_nis_flushgroups = 401,TR_nis_free_request = 402,TR_nis_freenames = 403,TR_nis_freeresult = 404,TR_nis_freeservlist = 405,TR_nis_get_object = 406,TR_nis_get_request = 407,TR_nis_get_static_storage = 408,TR_nis_getdtblsize = 409,TR_nis_getnames = 410,TR_nis_getservlist = 411,TR_nis_ibadd_clnt = 412,TR_nis_ibfirst_clnt = 413,TR_nis_iblist_clnt = 414,TR_nis_ibmodify_clnt = 415,TR_nis_ibnext_clnt = 416,TR_nis_ibremove_clnt = 417,TR_nis_in_table = 418,TR_nis_insert_item = 419,TR_nis_insert_name = 420,TR_nis_ismember = 421,TR_nis_leaf_of = 422,TR_nis_lerror = 423,TR_nis_list = 424,TR_nis_local_directory = 425,TR_nis_local_group = 426,TR_nis_local_host = 427,TR_nis_local_principal = 428,TR_nis_lookup = 429,TR_nis_lookup_clnt = 430,TR_nis_make_error = 431,TR_nis_make_rpchandle = 432,TR_nis_mkdir = 433,TR_nis_mkdir_clnt = 434,TR_nis_modify = 435,TR_nis_modify_clnt = 436,TR_nis_modify_entry = 437,TR_nis_name_of = 438,TR_nis_next_entry = 439,TR_nis_perror = 440,TR_nis_ping = 441,TR_nis_ping_clnt = 442,TR_nis_pop_item = 443,TR_nis_print_directory = 444,TR_nis_print_entry = 445,TR_nis_print_group = 446,TR_nis_print_group_entry = 447,TR_nis_print_link = 448,TR_nis_print_object = 449,TR_nis_print_rights = 450,TR_nis_print_server = 451,TR_nis_print_table = 452,TR_nis_read_obj = 453,TR_nis_remove = 454,TR_nis_remove_clnt = 455,TR_nis_remove_entry = 456,TR_nis_remove_item = 457,TR_nis_remove_name = 458,TR_nis_removemember = 459,TR_nis_rmdir = 460,TR_nis_rmdir_clnt = 461,TR_nis_servstate = 462,TR_nis_servstate_clnt = 463,TR_nis_sperrno = 464,TR_nis_sperror = 465,TR_nis_stats = 466,TR_nis_status_clnt = 467,TR_nis_verifygroup = 468,TR_nis_write_obj = 469,TR_notin = 470,TR_onelock = 471,TR_open801 = 472,TR_parsedata = 473,TR_passwd2des = 474,TR_pmap_getmaps = 475,TR_pmap_getport = 476,TR_pmap_rmtcall = 477,TR_pmap_set = 478,TR_pmap_unset = 479,TR_pop_push = 480,TR_print_column = 481,TR_processdev = 482,TR_prog_dispatch = 483,TR_protoString = 484,TR_rddev = 485,TR_read_coldstart_1 = 486,TR_read_vc = 487,TR_registerrpc = 488,TR_rejected = 489,TR_removeProto = 490,TR_remove_entry_1 = 491,TR_rendezvous_request = 492,TR_rendezvous_stat = 493,TR_repphone = 494,TR_restline = 495,TR_rmlock = 496,TR_rpc_broadcast = 497,TR_rpc_call = 498,TR_rpc_nullproc = 499,TR_rpc_reg = 500,TR_rpc_wrap_bcast = 501,TR_rpcb_getaddr = 502,TR_rpcb_getmaps = 503,TR_rpcb_gettime = 504,TR_rpcb_rmtcall = 505,TR_rpcb_set = 506,TR_rpcb_taddr2uaddr = 507,TR_rpcb_uaddr2taddr = 508,TR_rpcb_unset = 509,TR_rtime_tli = 510,TR_savline = 511,TR_scancfg = 512,TR_scansys = 513,TR_sendthem = 514,TR_set_input_fragment = 515,TR_setalarm = 516,TR_setbit = 517,TR_setconfig = 518,TR_setdevcfg = 519,TR_setdomainname = 520,TR_setfile = 521,TR_sethostent = 522,TR_sethup = 523,TR_setioctl = 524,TR_setline = 525,TR_setnetconfig = 526,TR_setnetpath = 527,TR_setrpcent = 528,TR_setservice = 529,TR_shift1left = 530,TR_show_tlook = 531,TR_skip_input_bytes = 532,TR_stlock = 533,TR_stoa = 534,TR_store = 535,TR_strecpy = 536,TR_strlocase = 537,TR_strsave = 538,TR_svc_auth_reg = 539,TR_svc_com_create = 540,TR_svc_create = 541,TR_svc_destroy = 542,TR_svc_dg_create = 543,TR_svc_dg_destroy = 544,TR_svc_dg_enablecache = 545,TR_svc_dg_freeargs = 546,TR_svc_dg_getargs = 547,TR_svc_dg_ops = 548,TR_svc_dg_recv = 549,TR_svc_dg_reply = 550,TR_svc_dg_stat = 551,TR_svc_exit = 552,TR_svc_fd_create = 553,TR_svc_find = 554,TR_svc_freeargs = 555,TR_svc_getargs = 556,TR_svc_getreq = 557,TR_svc_getreq_common = 558,TR_svc_getreq_poll = 559,TR_svc_getreqset = 560,TR_svc_getrpccaller = 561,TR_svc_raw_create = 562,TR_svc_raw_destroy = 563,TR_svc_raw_freeargs = 564,TR_svc_raw_getargs = 565,TR_svc_raw_ops = 566,TR_svc_raw_recv = 567,TR_svc_raw_reply = 568,TR_svc_raw_stat = 569,TR_svc_reg = 570,TR_svc_register = 571,TR_svc_run = 572,TR_svc_sendreply = 573,TR_svc_tli_create = 574,TR_svc_tp_create = 575,TR_svc_unreg = 576,TR_svc_unregister = 577,TR_svc_vc_create = 578,TR_svc_vc_destroy = 579,TR_svc_vc_freeargs = 580,TR_svc_vc_getargs = 581,TR_svc_vc_ops = 582,TR_svc_vc_recv = 583,TR_svc_vc_rendezvous_ops = 584,TR_svc_vc_reply = 585,TR_svc_vc_stat = 586,TR_svc_versquiet = 587,TR_svcerr_auth = 588,TR_svcerr_decode = 589,TR_svcerr_noproc = 590,TR_svcerr_noprog = 591,TR_svcerr_progvers = 592,TR_svcerr_systemerr = 593,TR_svcerr_weakauth = 594,TR_svcfd_create = 595,TR_svcraw_create = 596,TR_svctcp_create = 597,TR_svcudp_bufcreate = 598,TR_svcudp_create = 599,TR_synchronize = 600,TR_sysaccess = 601,TR_sysreset = 602,TR_sytcall = 603,TR_sytfix2line = 604,TR_sytfixline = 605,TR_t_accept = 606,TR_t_alloc = 607,TR_t_bind = 608,TR_t_close = 609,TR_t_connect = 610,TR_t_error = 611,TR_t_free = 612,TR_t_getinfo = 613,TR_t_getname = 614,TR_t_getstate = 615,TR_t_listen = 616,TR_t_look = 617,TR_t_open = 618,TR_t_optmgmt = 619,TR_t_rcv = 620,TR_t_rcvall = 621,TR_t_rcvconnect = 622,TR_t_rcvdis = 623,TR_t_rcvrel = 624,TR_t_rcvudata = 625,TR_t_rcvuderr = 626,TR_t_snd = 627,TR_t_snddis = 628,TR_t_sndrel = 629,TR_t_sndudata = 630,TR_t_sync = 631,TR_t_unbind = 632,TR_taddr2uaddr = 633,TR_tcpcall = 634,TR_tfaillog = 635,TR_time_not_ok = 636,TR_timout = 637,TR_tioctl = 638,TR_tlicall = 639,TR_tokenize = 640,TR_translate = 641,TR_tread = 642,TR_tsetup = 643,TR_tssetup = 644,TR_tteardown = 645,TR_ttygenbrk = 646,TR_twrite = 647,TR_uaddr2taddr = 648,TR_undial = 649,TR_unetcall = 650,TR_universal = 651,TR_user2netname = 652,TR_usetup = 653,TR_usingypmap = 654,TR_usralarm = 655,TR_uteardown = 656,TR_wrchr = 657,TR_write_vc = 658,TR_wrstr = 659,TR_x_destroy = 660,TR_x_getpostn = 661,TR_x_inline = 662,TR_x_putbytes = 663,TR_x_putlong = 664,TR_x_setpostn = 665,TR_xdecrypt = 666,TR_xdr_accepted_reply = 667,TR_xdr_array = 668,TR_xdr_authdes_cred = 669,TR_xdr_authdes_verf = 670,TR_xdr_authkern = 671,TR_xdr_authsys_parms = 672,TR_xdr_bool = 673,TR_xdr_bytes = 674,TR_xdr_callhdr = 675,TR_xdr_callmsg = 676,TR_xdr_cback_data = 677,TR_xdr_char = 678,TR_xdr_cp_result = 679,TR_xdr_cryptkeyarg = 680,TR_xdr_cryptkeyres = 681,TR_xdr_datum = 682,TR_xdr_des_block = 683,TR_xdr_destroy = 684,TR_xdr_directory_obj = 685,TR_xdr_double = 686,TR_xdr_dump_args = 687,TR_xdr_endpoint = 688,TR_xdr_entry_col = 689,TR_xdr_entry_obj = 690,TR_xdr_enum = 691,TR_xdr_fd_args = 692,TR_xdr_fd_result = 693,TR_xdr_float = 694,TR_xdr_free = 695,TR_xdr_getcredres = 696,TR_xdr_getpos = 697,TR_xdr_gid_t = 698,TR_xdr_group_obj = 699,TR_xdr_hyper = 700,TR_xdr_ib_request = 701,TR_xdr_inline = 702,TR_xdr_int = 703,TR_xdr_keybuf = 704,TR_xdr_keystatus = 705,TR_xdr_link_obj = 706,TR_xdr_log_entry = 707,TR_xdr_log_entry_t = 708,TR_xdr_log_result = 709,TR_xdr_long = 710,TR_xdr_longlong_t = 711,TR_xdr_netbuf = 712,TR_xdr_netconfig = 713,TR_xdr_netnamestr = 714,TR_xdr_netobj = 715,TR_xdr_nis_attr = 716,TR_xdr_nis_error = 717,TR_xdr_nis_name = 718,TR_xdr_nis_object = 719,TR_xdr_nis_oid = 720,TR_xdr_nis_result = 721,TR_xdr_nis_server = 722,TR_xdr_nis_tag = 723,TR_xdr_nis_taglist = 724,TR_xdr_ns_request = 725,TR_xdr_nstype = 726,TR_xdr_oar_mask = 727,TR_xdr_obj_p = 728,TR_xdr_objdata = 729,TR_xdr_opaque = 730,TR_xdr_opaque_auth = 731,TR_xdr_ping_args = 732,TR_xdr_pmap = 733,TR_xdr_pmaplist = 734,TR_xdr_pmaplist_ptr = 735,TR_xdr_pointer = 736,TR_xdr_quadruple = 737,TR_xdr_reference = 738,TR_xdr_rejected_reply = 739,TR_xdr_replymsg = 740,TR_xdr_rmtcall_args = 741,TR_xdr_rmtcallargs = 742,TR_xdr_rmtcallres = 743,TR_xdr_rpcb = 744,TR_xdr_rpcb_addrp = 745,TR_xdr_rpcb_entry = 746,TR_xdr_rpcb_entry_list = 747,TR_xdr_rpcb_entry_list_ptr = 748,TR_xdr_rpcb_rmtcallargs = 749,TR_xdr_rpcb_rmtcalllistp = 750,TR_xdr_rpcb_rmtcallres = 751,TR_xdr_rpcb_stat = 752,TR_xdr_rpcb_stat_byvers = 753,TR_xdr_rpcblist = 754,TR_xdr_rpcblist_ptr = 755,TR_xdr_rpcbs_addrlist = 756,TR_xdr_rpcbs_addrlist_ptr = 757,TR_xdr_rpcbs_proc = 758,TR_xdr_rpcbs_rmtcalllist = 759,TR_xdr_rpcbs_rmtcalllist_ptr = 760,TR_xdr_setpos = 761,TR_xdr_short = 762,TR_xdr_sizeof = 763,TR_xdr_string = 764,TR_xdr_table_col = 765,TR_xdr_table_obj = 766,TR_xdr_u_char = 767,TR_xdr_u_hyper = 768,TR_xdr_u_int = 769,TR_xdr_u_long = 770,TR_xdr_u_longlong_t = 771,TR_xdr_u_short = 772,TR_xdr_uid_t = 773,TR_xdr_union = 774,TR_xdr_unixcred = 775,TR_xdr_vector = 776,TR_xdr_void = 777,TR_xdr_wrapstring = 778,TR_xdr_yp_buf = 779,TR_xdr_ypall = 780,TR_xdr_ypbind_binding = 781,TR_xdr_ypbind_domain = 782,TR_xdr_ypbind_resp = 783,TR_xdr_ypbind_resptype = 784,TR_xdr_ypbind_setdom = 785,TR_xdr_ypdelete_args = 786,TR_xdr_ypdomain_wrap_string = 787,TR_xdr_ypmap_parms = 788,TR_xdr_ypmap_wrap_string = 789,TR_xdr_ypmaplist = 790,TR_xdr_ypmaplist_wrap_string = 791,TR_xdr_ypowner_wrap_string = 792,TR_xdr_yppushresp_xfr = 793,TR_xdr_ypreq_key = 794,TR_xdr_ypreq_newname_string = 795,TR_xdr_ypreq_newxfr = 796,TR_xdr_ypreq_nokey = 797,TR_xdr_ypreq_xfr = 798,TR_xdr_ypresp_key_val = 799,TR_xdr_ypresp_maplist = 800,TR_xdr_ypresp_master = 801,TR_xdr_ypresp_order = 802,TR_xdr_ypresp_val = 803,TR_xdr_ypupdate_args = 804,TR_xdr_zotypes = 805,TR_xdrmbuf_destroy = 806,TR_xdrmbuf_getbytes = 807,TR_xdrmbuf_getlong = 808,TR_xdrmbuf_getmbuf = 809,TR_xdrmbuf_getpos = 810,TR_xdrmbuf_init = 811,TR_xdrmbuf_inline = 812,TR_xdrmbuf_putbuf = 813,TR_xdrmbuf_putbytes = 814,TR_xdrmbuf_putlong = 815,TR_xdrmbuf_setpos = 816,TR_xdrmem_create = 817,TR_xdrmem_destroy = 818,TR_xdrmem_getbytes = 819,TR_xdrmem_getlong = 820,TR_xdrmem_getpos = 821,TR_xdrmem_inline = 822,TR_xdrmem_ops = 823,TR_xdrmem_putbytes = 824,TR_xdrmem_putlong = 825,TR_xdrmem_setpos = 826,TR_xdrrec_create = 827,TR_xdrrec_destroy = 828,TR_xdrrec_endofrecord = 829,TR_xdrrec_eof = 830,TR_xdrrec_getbytes = 831,TR_xdrrec_getlong = 832,TR_xdrrec_getpos = 833,TR_xdrrec_inline = 834,TR_xdrrec_ops = 835,TR_xdrrec_putbytes = 836,TR_xdrrec_putlong = 837,TR_xdrrec_setpos = 838,TR_xdrrec_skiprecord = 839,TR_xdrstdio_create = 840,TR_xdrstdio_destroy = 841,TR_xdrstdio_getbytes = 842,TR_xdrstdio_getlong = 843,TR_xdrstdio_getpos = 844,TR_xdrstdio_inline = 845,TR_xdrstdio_ops = 846,TR_xdrstdio_putbytes = 847,TR_xdrstdio_putlong = 848,TR_xdrstdio_setpos = 849,TR_xencrypt = 850,TR_xfer = 851,TR_xprt_register = 852,TR_xprt_unregister = 853,TR_yp_all = 854,TR_yp_bind = 855,TR_yp_first = 856,TR_yp_get_default_domain = 857,TR_yp_master = 858,TR_yp_match = 859,TR_yp_next = 860,TR_yp_order = 861,TR_yp_unbind = 862,TR_yp_update = 863,TR_ypbindproc_domain_3 = 864,TR_ypbindproc_null_3 = 865,TR_ypbindproc_setdom_3 = 866,TR_yperr_string = 867,TR_ypprot_err = 868,TR_check_cache = 869,TR_delete_cache = 870,TR_add_cache = 871,TR_rpcb_findaddr = 872,TR_svc_control = 873,TR_svc_dg_control = 874,TR_svc_raw_control = 875,TR_svc_vc_control = 876,TR___svc_versquiet_get = 877,TR___svc_versquiet_on = 878,TR___svc_versquiet_off = 879,TR_user2netname_nisplus = 880,TR_user2netname_nis = 881,TR_parse_netid_str = 882,TR_parse_uid_gidlist = 883,TR_parse_uid = 884,TR_parse_gidlist = 885,TR_netname2user_files = 886,TR_netname2user_nis = 887,TR_netname2user_nisplus = 888,TR_key_get_conv = 889,TR__t_look_locked = 890,TR__td_setnodelay = 891,TR__nss_initf_hosts = 892,TR__switch_gethostbyname_r = 893,TR__switch_gethostbyaddr_r = 894,TR_gethostent_r = 895,TR_str2hostent = 896,TR_gethostbyname_r = 897,TR_gethostbyaddr_r = 898,TR__nss_initf_rpc = 899,TR_getrpcbyname_r = 900,TR_getrpcbynumber_r = 901,TR_getrpcent_r = 902,TR_str2rpcent = 903,TR_key_secretkey_is_set = 904,TR___rpcfd_to_nconf = 905,};
enum MACRO_TR_TIMEOUT {TR_TIMEOUT = 0x40,};
enum MACRO_T_BIND_REQ {T_BIND_REQ = 1,T_CONN_REQ = 2,T_CONN_RES = 3,T_DATA_REQ = 4,T_DISCON_REQ = 5,T_EXDATA_REQ = 6,T_INFO_REQ = 7,T_OPTMGMT_REQ = 8,T_ORDREL_REQ = 9,T_UNBIND_REQ = 10,T_UNITDATA_REQ = 11,T_ADDR_REQ = 12,};
enum MACRO_T_SENDZERO {T_SENDZERO = 0x1,};
enum MACRO_UDPMSGSIZE {UDPMSGSIZE = 8800,};
enum MACRO_USPosition {USPosition = 1,USSize = 2,PPosition = 4,PSize = 8,PMinSize = 16,PMaxSize = 32,PResizeInc = 64,PAspect = 128,PBaseSize = 256,PWinGravity = 512,};
enum MACRO_WALLVERS_0 {WALLVERS = 1,};
enum MACRO_XHPOVERLAY {XHPOVERLAY_MODE = 1,XHPIMAGE_MODE = 2,XHPSTACKED_SCREENS_MODE = 3,XHPCOMBINED_MODE = 4,};
enum MACRO_XIMReverse {XIMReverse = 1,XIMUnderline = 2,XIMHighlight = 4,XIMPrimary = 32,XIMSecondary = 64,XIMTertiary = 128,XIMVisibleToForward = 256,XIMVisibleToBackword = 512,XIMVisibleToCenter = 1024,};
enum MACRO_XI_Initial {XI_Initial_Release_Major = 1,XI_Initial_Release_Minor = 0,};
enum MACRO_XK_AccessX {XK_AccessX_Enable = 0xFE70,XK_AccessX_Feedback_Enable = 0xFE71,XK_RepeatKeys_Enable = 0xFE72,XK_SlowKeys_Enable = 0xFE73,XK_BounceKeys_Enable = 0xFE74,XK_StickyKeys_Enable = 0xFE75,XK_MouseKeys_Enable = 0xFE76,XK_MouseKeys_Accel_Enable = 0xFE77,XK_Overlay1_Enable = 0xFE78,XK_Overlay2_Enable = 0xFE79,XK_AudibleBell_Enable = 0xFE7A,XK_Pointer_Left = 0xFEE0,XK_Pointer_Right = 0xFEE1,XK_Pointer_Up = 0xFEE2,XK_Pointer_Down = 0xFEE3,XK_Pointer_UpLeft = 0xFEE4,XK_Pointer_UpRight = 0xFEE5,XK_Pointer_DownLeft = 0xFEE6,XK_Pointer_DownRight = 0xFEE7,XK_Pointer_Button_Dflt = 0xFEE8,XK_Pointer_Button1 = 0xFEE9,XK_Pointer_Button2 = 0xFEEA,XK_Pointer_Button3 = 0xFEEB,XK_Pointer_Button4 = 0xFEEC,XK_Pointer_Button5 = 0xFEED,XK_Pointer_DblClick_Dflt = 0xFEEE,XK_Pointer_DblClick1 = 0xFEEF,XK_Pointer_DblClick2 = 0xFEF0,XK_Pointer_DblClick3 = 0xFEF1,XK_Pointer_DblClick4 = 0xFEF2,XK_Pointer_DblClick5 = 0xFEF3,XK_Pointer_Drag_Dflt = 0xFEF4,XK_Pointer_Drag1 = 0xFEF5,XK_Pointer_Drag2 = 0xFEF6,XK_Pointer_Drag3 = 0xFEF7,XK_Pointer_Drag4 = 0xFEF8,XK_Pointer_Drag5 = 0xFEFD,};
enum MACRO_XK_KP_Page {XK_KP_Page_Down = 0xFF9B,XK_KP_End = 0xFF9C,XK_KP_Begin = 0xFF9D,XK_KP_Insert = 0xFF9E,XK_KP_Delete = 0xFF9F,XK_KP_Equal = 0xFFBD,};
enum MACRO_XK_Pointer {XK_Pointer_EnableKeys = 0xFEF9,XK_Pointer_Accelerate = 0xFEFA,XK_Pointer_DfltBtnNext = 0xFEFB,XK_Pointer_DfltBtnPrev = 0xFEFC,};
enum MACRO_XK_Serbian {XK_Serbian_dje = 0x6A1,XK_Macedonia_gje = 0x6A2,XK_Cyrillic_io = 0x6A3,XK_Ukrainian_ie = 0x6A4,};
enum MACRO_XK_kana_HU {XK_kana_HU = 0x4CC,XK_kana_HE = 0x4CD,XK_kana_HO = 0x4CE,XK_kana_MA = 0x4CF,XK_kana_MI = 0x4D0,XK_kana_MU = 0x4D1,XK_kana_ME = 0x4D2,XK_kana_MO = 0x4D3,XK_kana_YA = 0x4D4,XK_kana_YU = 0x4D5,XK_kana_YO = 0x4D6,XK_kana_RA = 0x4D7,XK_kana_RI = 0x4D8,XK_kana_RU = 0x4D9,XK_kana_RE = 0x4DA,XK_kana_RO = 0x4DB,XK_kana_WA = 0x4DC,XK_kana_N = 0x4DD,XK_voicedsound = 0x4DE,XK_semivoicedsound = 0x4DF,XK_kana_switch = 0xFF7E,};
enum MACRO_XK_kana_TI {XK_kana_TI = 0x4C1,XK_kana_TSU = 0x4C2,};
enum MACRO_XK_kana_TU {XK_kana_TU = 0x4C2,XK_kana_TE = 0x4C3,XK_kana_TO = 0x4C4,XK_kana_NA = 0x4C5,XK_kana_NI = 0x4C6,XK_kana_NU = 0x4C7,XK_kana_NE = 0x4C8,XK_kana_NO = 0x4C9,XK_kana_HA = 0x4CA,XK_kana_HI = 0x4CB,XK_kana_FU = 0x4CC,};
enum MACRO_XK_kana_tu {XK_kana_tu = 0x4AF,XK_prolongedsound = 0x4B0,XK_kana_A = 0x4B1,XK_kana_I = 0x4B2,XK_kana_U = 0x4B3,XK_kana_E = 0x4B4,XK_kana_O = 0x4B5,XK_kana_KA = 0x4B6,XK_kana_KI = 0x4B7,XK_kana_KU = 0x4B8,XK_kana_KE = 0x4B9,XK_kana_KO = 0x4BA,XK_kana_SA = 0x4BB,XK_kana_SHI = 0x4BC,XK_kana_SU = 0x4BD,XK_kana_SE = 0x4BE,XK_kana_SO = 0x4BF,XK_kana_TA = 0x4C0,XK_kana_CHI = 0x4C1,};
enum MACRO_XP_PRESENT {XP_PRESENT = 1,XP_ERRORS = 3,};
enum MACRO_XTI_SNDBUF {XTI_SNDBUF = 0x1001,XTI_SNDLOWAT = 0x1003,XTI_DISTRIBUTE = 0x100C,};
enum MACRO_XT_VERSION {XT_VERSION = 11,};
enum MACRO_XTestDELAY {XTestDELAY_ACTION = 0,XTestKEY_ACTION = 1,XTestMOTION_ACTION = 2,XTestJUMP_ACTION = 3,XTestKEY_UP = 4,};
enum MACRO_XTestEVENT {XTestEVENT_COUNT = 2,X_TestFakeInput = 1,};
enum MACRO_XTestPRESS {XTestPRESS = 1,XTestRELEASE = 2,XTestSTROKE = 4,XTestSTROKE_DELAY_TIME = 10,};
enum MACRO_XTestSHORT {XTestSHORT_DELAY_TIME = 0xFFFF,};
enum MACRO_XkbKB_Lock {XkbKB_Lock = 0x1,XkbKB_RadioGroup = 0x2,XkbKB_Overlay1 = 0x3,XkbKB_Overlay2 = 0x4,XkbKB_RGAllowNone = 0x80,};
enum MACRO_XkbNoShape {XkbNoShape = 0xFF,};
enum MACRO_XmCOLOR_HI {XmCOLOR_HI_SEL_FACTOR = 15,XmCOLOR_HI_BS_FACTOR = 40,XmCOLOR_HI_TS_FACTOR = 60,};
enum MACRO_XmCOLOR_LO {XmCOLOR_LO_SEL_FACTOR = 15,XmCOLOR_LO_BS_FACTOR = 60,};
enum MACRO_XmNO_EVENT {XmNO_EVENT = 0x0,XmENTER_EVENT = 0x1,XmLEAVE_EVENT = 0x2,XmFOCUS_IN_EVENT = 0x4,XmFOCUS_OUT_EVENT = 0x8,XmMOTION_EVENT = 0x10,XmARM_EVENT = 0x20,XmACTIVATE_EVENT = 0x40,XmHELP_EVENT = 0x80,XmKEY_EVENT = 0x100,XmMULTI_ARM_EVENT = 0x200,XmMULTI_ACTIVATE_EVENT = 0x400,XmBDRAG_EVENT = 0x800,XmALL_EVENT = 0xFFF,};
enum MACRO_XmREVERSED {XmREVERSED_GROUND_COLORS = -2,};
enum MACRO_XmREVISION {XmREVISION = 1,};
enum MACRO_XmTRANSFER {XmTRANSFER_FAILURE = 0,XmTRANSFER_SUCCESS = 1,};
enum MACRO_XpmSuccess {XpmSuccess = 0,XpmOpenFailed = -1,};
enum MACRO_XtIMXEvent {XtIMXEvent = 1,XtIMTimer = 2,XtIMAlternateInput = 4,XtIMSignal = 8,XtIMAll = 15,};
enum MACRO_YPBINDPROC {YPBINDPROC_NULL = 0,YPBINDPROC_DOMAIN = 1,YPBINDPROC_SETDOM = 2,};
enum MACRO_YPBINDPROG {YPBINDPROG = 100007,};
enum MACRO_YPBINDVERS {YPBINDVERS = 2,YPBINDVERS_ORIG = 1,};
enum MACRO_YPPUSHPROC {YPPUSHPROC_NULL = 0,YPPUSHPROC_XFRRESP = 1,};
enum MACRO_YPPUSHVERS {YPPUSHVERS = 1,};
enum MACRO_YPPUSH_DBM {YPPUSH_DBM = -8,};
enum MACRO_YPPUSH_RPC {YPPUSH_RPC = -4,};
enum MACRO_YPU_CHANGE {YPU_CHANGE = 1,YPU_INSERT = 2,YPU_DELETE = 3,YPU_STORE = 4,};
enum MACRO_YP_BADARGS {YP_BADARGS = -7,};
enum MACRO__HIDDENBIT {_HIDDENBIT = 1,};
enum MACRO__MAXFUPLIM {_MAXFUPLIM = 2048,};
enum MACRO__MAXNAMLEN {_MAXNAMLEN = 255,};
enum MACRO__POSIX2_BC {_POSIX2_BC_SCALE_MAX = 99,_POSIX2_BC_STRING_MAX = 1000,};
enum MACRO__POSIX2_RE {_POSIX2_RE_DUP_MAX = 255,};
enum MACRO__POSIX2_SW {_POSIX2_SW_DEV = 1,};
enum MACRO__POSIX_MAX {_POSIX_MAX_INPUT = 255,};
enum MACRO__SIGWINDOW {_SIGWINDOW = 23,_SIGSTOP = 24,_SIGTSTP = 25,_SIGCONT = 26,_SIGTTIN = 27,_SIGTTOU = 28,_SIGURG = 29,_SIGLOST = 30,_SIGRESERVE = 31,_SIGDIL = 32,_SIGXCPU = 33,_SIGXFSZ = 34,_SIGCANCEL = 35,_SIGGFAULT = 36,_SIGRTMIN = 37,_SIGRTMAX = 44,};
enum MACRO__XOPEN_ENH {_XOPEN_ENH_I18N = 1,};
enum MACRO__XOPEN_XCU {_XOPEN_XCU_VERSION = 3,};
enum MACRO___LWP_SEMA {__LWP_SEMA_VALID = 0x9467,};
enum MACRO___dontcare {__dontcare__ = -1,};
enum MACRO_osfXK_Copy {osfXK_Copy = 0x1004FF02,osfXK_Cut = 0x1004FF03,osfXK_Delete = 0x1004FFFF,};
enum MACRO_osfXK_Down {osfXK_Down = 0x1004FF54,osfXK_EndData = 0x1004FF59,};
enum MACRO_osfXK_Help {osfXK_Help = 0x1004FF6A,};
enum MACRO_osfXK_Left {osfXK_Left = 0x1004FF51,osfXK_LeftLine = 0x1004FFF8,};
enum MACRO_osfXK_Menu {osfXK_Menu = 0x1004FF67,};
enum MACRO_osfXK_Undo {osfXK_Undo = 0x1004FF65,};
enum MACRO_sym_k_last {sym_k_last_unary_op = 5,sym_k_multiply_op = 6,sym_k_divide_op = 7,sym_k_add_op = 8,sym_k_subtract_op = 9,sym_k_left_shift_op = 10,sym_k_right_shift_op = 11,sym_k_and_op = 12,sym_k_xor_op = 13,sym_k_or_op = 14,sym_k_cat_op = 15,};
enum MACRO_sym_k_list {sym_k_list_section = 1,sym_k_procedure_section = 2,sym_k_value_section = 3,sym_k_identifier_section = 4,sym_k_object_section = 5,sym_k_include_section = 6,sym_k_section_tail = 7,};
enum MACRO_xieMaxElem {xieMaxElem = 37,};
enum MACRO_xieValFull {xieValFull = 1,xieValDIS = 2,xieValMaxBands = 3,};
typedef struct _OnTheSpotData OnTheSpotDataRec;
typedef struct _39A4136BB030D7809586100094537552 OverrideShellRec;
typedef struct _53A0FAA9DE94950BE2C50FA9F311A539 PropMotifWmHints;
typedef struct _RectObjClassPart RectObjClassPart;
typedef struct _50D2B38DA8D5F7F9D092D3B0069535E8 SessionShellPart;
typedef struct _ShellClassRec *ShellWidgetClass;
typedef struct _A6524737EEF8C4DE9F2A62890C064223 TopLevelShellRec;
typedef struct _Uil_command_type Uil_command_type;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F WMShellClassPart;
typedef struct _21AD2773B4EF3639ECA7EA03A86E1290 XDeviceTimeCoord;
typedef struct _C08EB97F95DBE201B07D804A019DEBC7 XFeedbackControl;
typedef struct _XIMFilter *XFilterEventList;
typedef struct _XIMHotKeyTrigger XIMHotKeyTrigger;
typedef struct _XIntrCallbackRec *XIntrCallbackPtr;
typedef struct _XIntrCallbackRec XIntrCallbackRec;
typedef struct _BFB970BD49ED9B406D7CBF54A76D57DD XKeyboardControl;
typedef struct _7FAD4DA9375019A5494A191BEF0405E8 XMapRequestEvent;
typedef struct _15B7F0BFFE6DCDCAE20B6A9217222101 XPAttributeEvent;
typedef struct _B79898920517315C7D12A700339C3F7F XPDataReadyEvent;
typedef struct _XValuatorInfo *XValuatorInfoPtr;
typedef struct _C64C6FF65947C35F73E5DDA7D3ADCCD3 XVisibilityEvent;
typedef struct _XcmsIntensityMap XcmsIntensityMap;
typedef struct _XimCommitInfoRec XimCommitInfoRec;
typedef struct _XkbDeviceInfo *XkbDeviceInfoPtr;
typedef struct _XkbDeviceInfo XkbDeviceInfoRec;
typedef struct _XkbKTMapEntry *XkbKTMapEntryPtr;
typedef struct _XkbKTMapEntry XkbKTMapEntryRec;
typedef struct _XkbLogoDoodad *XkbLogoDoodadPtr;
typedef struct _XkbLogoDoodad XkbLogoDoodadRec;
typedef struct _XkbMapChanges *XkbMapChangesPtr;
typedef struct _XkbMapChanges XkbMapChangesRec;
typedef struct _XkbMessageAction XkbMessageAction;
typedef struct _XkbOverlayKey *XkbOverlayKeyPtr;
typedef struct _XkbOverlayKey XkbOverlayKeyRec;
typedef struct _XkbOverlayRow *XkbOverlayRowPtr;
typedef struct _XkbOverlayRow XkbOverlayRowRec;
typedef struct _XkbPtrDfltAction XkbPtrDfltAction;
typedef struct _XkbReadBuffer *XkbReadBufferPtr;
typedef struct _XkbReadBuffer XkbReadBufferRec;
typedef struct _XkbTextDoodad *XkbTextDoodadPtr;
typedef struct _XkbTextDoodad XkbTextDoodadRec;
typedef struct _XmAnyICCCallbackStruct *XmAnyICCCallback;
typedef struct _XmArrowButtonRec XmArrowButtonRec;
typedef struct _XmCacheClassPart XmCacheClassPart;
typedef struct _6A5D08A78EDB5A9C1147C38C7EB4CE9D XmClipWindowPart;
typedef struct _XmComboBoxRec *XmComboBoxWidget;
typedef struct _XmContainerClassRec *XmContainerClass;
typedef struct _XmContainerTraitRec *XmContainerTrait;
typedef struct _B1BB4607B75CFFBC9D91E675F4E88C61 *XmDesktopPartPtr;
typedef struct _XmDialogShellRec XmDialogShellRec;
typedef struct _D2F477CF0A15BD07EBA4C7727B492ACA *XmDisplayPartPtr;
typedef struct _XmDragContextRec XmDragContextRec;
typedef struct _XmDragIconRec *XmDragIconObject;
typedef struct _XmDrawingAreaRec XmDrawingAreaRec;
typedef struct _XmDrawnButtonRec XmDrawnButtonRec;
typedef struct _XmExtClassRec *XmExtObjectClass;
typedef struct _XmFormAttachmentRec *XmFormAttachment;
typedef struct _XmFormConstraintPart *XmFormConstraint;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmFrameClassPart;
typedef struct _XmGadgetCache *XmGadgetCachePtr;
typedef struct _XmGadgetCacheRef XmGadgetCacheRef;
typedef struct _XmGadgetClassExtRec *XmGadgetClassExt;
typedef struct _XmGadgetClassRec XmGadgetClassRec;
typedef union _XmGeoMajorLayoutRec *XmGeoMajorLayout;
typedef struct _XmIconGadgetPart XmIconGadgetPart;
typedef struct _XmIconHeaderPart XmIconHeaderPart;
typedef struct _XmKidGeometryRec XmKidGeometryRec;
typedef struct _XmLabelClassPart XmLabelClassPart;
typedef struct _XmLabelGadgetRec XmLabelGadgetRec;
typedef struct _D50A70D0E3F027C6430054674F5D7982 XmMainWindowPart;
typedef struct _XmMenuSavvyTraitRec *XmMenuSavvyTrait;
typedef struct _0E3097AA2FBED02B33E6A3FF3D033D09 XmMessageBoxPart;
typedef unsigned char XmNavigationType;
typedef struct _XmNavigatorTraitRec *XmNavigatorTrait;
typedef struct _XmNotebookRec *XmNotebookWidget;
typedef struct _XmObjectClassExtRec *XmObjectClassExt;
typedef struct _XmPanedWindowRec XmPanedWindowRec;
typedef struct _72E33BD22DCEAD37F3B82706335FF895 XmPrintShellPart;
typedef struct _XmProtocolMgrRec XmProtocolMgrRec;
typedef struct _XmPushButtonPart XmPushButtonPart;
typedef struct _6180D9D3CA56B1110646E5C5D8270DC5 XmRepTypeListRec;
typedef struct _XmRowColumnClassRec *XmRowColumnClass;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmScaleClassPart;
typedef struct _XmScreenClassRec XmScreenClassRec;
typedef struct _XmShellExtRec *XmShellExtObject;
typedef struct _XmVKeyBindingRec XmVKeyBindingRec;
typedef struct _XmWrapperDataRec XmWrapperDataRec;
typedef struct _CB86ED79A67F464A5E5DD7E35915D8C3 XrmOptionDescRec;
typedef struct _13470DA4B6A7AAE8ACC864F70C5FF73E *XtChangeHookData;
typedef struct _7D1B644A0EEA2B09DD88F0E6B7E788D2 *XtConvertArgList;
typedef struct _9D9F8CC524C7DD4F9704759512315B2D *XtCreateHookData;
typedef struct _9FED812B80655AE33F3AD93E5626D145 XtWidgetGeometry;
typedef struct _02BF927D00A6078DB787849469CA32B9 _LC_core_ctype_t;
struct _XkbPtrBtnAction {unsigned char type;unsigned char flags;unsigned char count;unsigned char button;};
typedef struct _F89A167C1B0B0C57C5FF404376C1C5C6 _XmHighlightData;
typedef struct __XmStringContextRec *_XmStringContext;
typedef struct _468E3F20F7462D23787414BB7174F8B3 _XmTextActionRec;
struct __auth__auth_ops {void ( *ah_nextverf)(struct __auth *);int ( *ah_marshal)(struct __auth *, XDR *);int ( *ah_validate)(struct __auth *, struct opaque_auth *);int ( *ah_refresh)(struct __auth *);void ( *ah_destroy)(struct __auth *);};
enum __mlockall_flags {MCL_CURRENT = 0x1,MCL_FUTURE = 0x2,};
struct _physical_info_t {unsigned int preference;};
typedef struct _EACB0B005B8FE7D9793BF30DB07B2838 amg_message_type;
typedef struct _607AEA48B84CC21B20A0FD7A7709DCF2 async_completion;
enum authdes_namekind {ADN_FULLNAME = 0x0,ADN_NICKNAME = 0x1,};
typedef struct buflet_info buflet_info_type;
typedef struct _C3C74FE90578EF0C42EE47B900DACD06 cio_dma_req_type;
typedef struct _E8C0CCE1B60E84FF431FA745320DCDBC cio_poll_dma_req;
typedef struct _E3B595AE48A6ED76A827239878338848 ciper_write_type;
typedef struct _E16AECF0CDFBBC96C88D9B1362676A69 cps_wait_attr8_t;
typedef struct _A0578E93CE07CF80AAB250E46E312C74 dap_execute_type;
typedef struct _74FB751768FF96092D6BF552FB1F736A delete_prop_type;
typedef struct _AB60AF79FB7B576B8100E7E8971F6A9B dl_connect_con_t;
typedef struct _7B88B4ABA479AD4CDA761A68FBF6E1B3 dl_connect_ind_t;
typedef struct _EA8C7CFFB417549A9149B8702E4079EF dl_connect_req_t;
typedef struct _BA3217064F767CDA4642029FE8B5FCDE dl_connect_res_t;
typedef struct _D080768009F0DDB41B1C12762747A1D5 dl_hp_info_ack_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_info_req_t;
typedef struct _D71CF58A1EDDEAF67439A6E5BF4C5237 dl_hp_ppa_info_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_link_up_ind_t;
typedef struct _2EDAB78FCD79363D541BD4E7DC3907D7 dl_qos_cl_sel1_t;
typedef struct _037FA328FF3097084EC208F512F1E495 dl_qos_co_sel1_t;
typedef struct _FAC60B21728E5FEF5C66DDB2CB35B5A5 dl_uderror_ind_t;
typedef struct _B9A90B4DCE92DDAD69847E7BE964BAAE dm_io_event_type;
typedef struct _862C78E84E0440EAFBA1B70B10D2ADC6 dm_io_reply_type;
typedef struct dma_A_chain dma_A_chain_type;
typedef struct dma_A_pquad dma_A_pquad_type;
typedef struct _A0124A5B65531604F00B7B938AEFE7E2 do_bind_req_type;
typedef struct _E74415E298CED5C737EBED6687E120B3 eisa_mux0_config;
struct elem_status_data {unsigned char first_elem[2];unsigned char num_elems[2];unsigned char reserved;unsigned char byte_count[3];};
struct elem_status_page {unsigned char elem_type;unsigned char flags;unsigned char elem_descript_len[2];unsigned char reserved;unsigned char byte_count[3];};
typedef struct _B80E979E4C5F2317B232B96F3AA75482 envir_state_type;
struct export_entry_ext {int size;int dreloc;int same_list;int reserved2;int reserved3;};
typedef struct _2D67A7A7014400A846724E74753CE8EE gc_handlerdone_t;
typedef struct _1F1E298AC6D409D251F9CAC94C3160CD general_cmd_type;
typedef struct _hid_descriptor_t hid_descriptor_t;
typedef struct _401C8EE3E2CA8F69EEB69EE66DAE6AE5 hw_mcast_entry_t;
struct interrupt_struct {int cause;int mask;};
typedef struct kd_thread_exit kd_thread_exit_t;
typedef struct _878771DB38D99FAEDA04208FA2D454F9 ktl_msg_hdr_type;
typedef union _99D5443F2C6554F8B5A9C5DC3E9406B8 llio_status_type;
typedef struct _0CDC4BC8286924C5BFA22623C4B7938F mode_select_type;
typedef struct _2F09618765ADF879434C95865A0073B3 module_path_type;
typedef struct _E601E8C5C1487200B48FD548E1F703EE mt_property_type;
typedef struct _627A07425D4376D35C2749D7EEB3514A netdiag_subsys_t;
enum nispasswd_status {NPD_SUCCESS = 0x0,NPD_TRYAGAIN = 0x1,NPD_PARTIALSUCCESS = 0x2,NPD_FAILED = 0x3,};
typedef struct physiobufstats physiobufstats_t;
typedef struct prm_byfsidinf prm_byfsidinfo_t;
typedef struct _8697364FD96ED83358CE64124BFB470E probe_reply_type;
typedef struct pthread_rwlock pthread_rwlock_t;
typedef struct _D90C9031D269F93C88B34E2B5464A64B reset_reply_type;
typedef rpcb_stat rpcb_stat_byvers[3];
typedef struct _CEBF785F985159AE1C59B71C07E19AEB rq_sense_rq_type;
typedef struct _B318B9FE24BEDCDC1EF7B4E1F2E85F51 scsi_io_req_type;
struct security_id_info {unsigned char security_num[8];};
typedef struct _E67FDE50279B826B5B4895B5BA02F597 serial_ctrl_type;
struct shlib_list_entry {int shlib_name;unsigned char dash_l_reference;unsigned char bind;short highwater_mark;};
typedef struct _C642F6064919D5A0398A3A6264CD181D spare_block_type;
typedef struct _1B427FA031BAB6FB82305F06403E5F56 sym_icon_element;
union test_header__val {int seq_no;int do_check;};
struct try_queue_struct {struct C__trystuff *top;int errcode;};
typedef struct _A248EFEFD6212257CAA664392076CE36 ttsyscall_data_t;
typedef struct _C1989920CA0623FD92C1ECB77D31D883 user_acct_result;
typedef struct _0A270F69B196F9EFA6F2CD4624EE5655 xAllocColorReply;
typedef struct _F3F3BF8BE106A877DE7FC4D65D49358E xBellFeedbackCtl;
typedef struct _D60B59C14E4F896E4A7591EB7765B14B xConnSetupPrefix;
typedef struct _6FB552EA524F38554FA8528F506D34FD xCreateCursorReq;
typedef struct _1F1AC3FACFBF0931A43D0CD999C4D927 xCreatePixmapReq;
typedef struct _B76BD181BFDAF7E9381A1626C6C45722 xCreateWindowReq;
typedef struct _A2FB221EC01549407EDCF016C4C0632F xGrabDeviceReply;
typedef struct _94FA839E2A2E2CDB2FF04022E6E0CAA1 xGrabKeyboardReq;
typedef struct _FAAE646675EFFC2E42132545ADFD1943 xHPGrabDeviceReq;
typedef struct _F741E5E7F7BAA6E72717FD3C16E12410 xHPSSChangeReply;
typedef struct _FA4FE0B2CA883E06053CBA1706060353 xInternAtomReply;
typedef struct _80262239D5DEFAC7F5C75EBAC6CCD93C xOpenDeviceReply;
typedef struct _PrintEndPage xPrintEndPageReq;
typedef struct _xPrintPrintEvent xPrintPrintEvent;
typedef struct _FE8C559F4B68F5A3A5D9DBCE5E9919CF xSetMappingReply;
typedef struct _3369594E17BD6DC3517892D04DD0216E xTestGetInputReq;
typedef struct _37A9DB4B311662424B6FA129E06762F1 xUngrabButtonReq;
typedef struct _F57445CCAF99E2554B974CAECD301767 xUngrabDeviceReq;
typedef struct _xValuatorInfo *xValuatorInfoPtr;
typedef struct _F45EAA3ACE353930A02675094AE49F50 xieColorAllocEvn;
typedef struct _26E851949BDE2473590BDE12DE36451F xieDestroyLUTReq;
typedef struct _5E04D711070F28523D4888D880E8635D xieDestroyROIReq;
typedef struct _53A371D93AFA762A16435064A7495B18 xieFloArithmetic;
typedef struct _AD97566547E5F77323709B4B3562439C xieFloBandSelect;
typedef struct _9CB99F55F4760567A5B7FA05D1482C33 xieFloElementErr;
typedef struct _ACF034D5104D0F5B8D12F5FF38C4FBA5 xieTecDecodeG31D;
typedef struct _ACF034D5104D0F5B8D12F5FF38C4FBA5 xieTecDecodeG32D;
typedef struct _ACF034D5104D0F5B8D12F5FF38C4FBA5 xieTecDecodeG42D;
typedef struct _1B017AC3620941E612639F23B92A9141 xieTecEncodeG31D;
typedef struct _A8C26958E47A670C8BA111DF3C373603 xieTecEncodeG32D;
typedef struct _A27389B7F44473FD8046F73BDABEA635 xieTecEncodeG42D;
typedef struct _6AE5D21AAEA04E1B024F0DA11C966966 xieTecRGBToYCbCr;
typedef struct _927F401B27F2876D054E6625E491BF29 xieTecYCbCrToRGB;
typedef struct _BE58583FCD7344D2421A54A7E98FFEA4 xieTypExecutable;
typedef struct _xkbAccessXNotify xkbAccessXNotify;
typedef struct _xkbActionMessage xkbActionMessage;
typedef struct _xkbGetNamesReply xkbGetNamesReply;
typedef struct _xkbGetStateReply xkbGetStateReply;
typedef struct _xkbPointWireDesc xkbPointWireDesc;
typedef struct _xkbShapeWireDesc xkbShapeWireDesc;
typedef struct _xkmKeySymMapDesc xkmKeySymMapDesc;
typedef struct _CompositeRec *CompositeWidget;
typedef struct _WidgetClassRec *CoreWidgetClass;
typedef struct _931DBA82A19B61CA267B848FC88C1541 IcePaVersionRec;
typedef struct _DEA6EB3579BA90947BB8CFA4C4EC84A1 IcePoVersionRec;
enum MACRO_ABORT_MSG {ABORT_MSG = 0x6,ABORT_TAG_MSG = 0xD,};
enum MACRO_API_AFLAG {API_AFLAG_ENTRY_EXIT = 120,};
enum MACRO_ASYNC_REQ {ASYNC_REQ_SENSE = 1,};
enum MACRO_AUDIO_MAX {AUDIO_MAX_GAIN = 127,};
enum MACRO_AUDIO_OUT {AUDIO_OUT_SPEAKER = 1,AUDIO_OUT_HEADPHONE = 2,};
enum MACRO_AUDIO_REG {AUDIO_REG_ID = 0,AUDIO_REG_RESET = 1,AUDIO_REG_CNTL = 2,AUDIO_REG_GAINCTL = 3,AUDIO_REG_PNXTADD = 4,AUDIO_REG_PCURADD = 5,AUDIO_REG_RNXTADD = 6,AUDIO_REG_RCURADD = 7,AUDIO_REG_DSTATUS = 8,AUDIO_REG_OVRANGE = 9,AUDIO_REG_PIO = 10,};
enum MACRO_AUDIO_SET {AUDIO_SET_RXBUFSIZE = 536887556,};
enum MACRO_AUTH_SEED {AUTH_SEED_UPPER_LIM = 10000000,AUTH_LOCK_ATTEMPTS = 8,AUTH_RETRY_DELAY = 1,};
enum MACRO_AUTH_UNIX {AUTH_UNIX = 1,AUTH_SHORT = 2,AUTH_DES = 3,AUTH_KERB = 4,};
enum MACRO_AddToList {AddToList = 0,DeleteFromList = 1,};
enum MACRO_AllPlanes {AllPlanes = -1,};
enum MACRO_AllocNone {AllocNone = 0,AllocAll = 1,};
enum MACRO_AnyButton {AnyButton = 0,};
enum MACRO_BACKSPACE {BACKSPACE = 8,FORM_FEED = 12,};
enum MACRO_BADHEADER {BADHEADER = 0x1,BADTYPE = 0x2,BADLENGTH = 0x4,BADDATA = 0x8,INVALID_SRC = 0xFFFFFFFF,};
enum MACRO_BF_FDLOCK {BF_FDLOCK_BIT = 24,BF_NO_DUMP = 256,BF_NO_CONSOLE = 512,BF_NO_SWAP = 1024,BF_LV_M = 4096,BF_LV_Q = 8192,};
enum MACRO_BF_MIRROR {BF_MIRROR_S = 0x10,BF_MIRROR_P = 0x20,BF_MIRROR = 0x30,BF_MIRROR_X = 0x40,BF_FDLOCK = 0x80,};
enum MACRO_BI2_AZURE {BI2_AZURE_SSTEP1 = 0,BI2_AZURE_SSTEP2 = 1,BI2_AZURE_SSTEPSYSRET = 2,BI2_AZURE_SSTEPSIGSYSRET = 3,BI2_AZURE_SSTEPSIGTRAPRET = 4,BI2_AZURE_SSTEPSENDSIG = 5,BI2_AZURE_ABORT = 6,BI2_AZURE_EXECT = 7,BI2_AZURE_BPT = 8,BI2_AZURE_SIGRETURN = 9,BI2_AZURE_EXIT = 10,BI2_AZURE_REBOOT = 11,BI2_AZURE_LONGJMP = 12,BI2_AZURE_CRT0 = 13,};
enum MACRO_BIGENDIAN {BIGENDIAN = 66,LITTLEENDIAN = 108,};
enum MACRO_BP_BWRITE {BP_BWRITE = 1,BP_BDWRITE = 2,BP_ORDER = 3,BP_MUST_ORDER = 4,};
enum MACRO_BT_KBDDEV {BT_KBDDEV = 1,BT_BOOTDEV = 2,};
enum MACRO_BUS_ERROR {BUS_ERROR_INT_LINE = 17,BUS_ERROR_INT_MASK = 16384,};
enum MACRO_BYTESHIFT {BYTESHIFT = 2,PGNDXWDTH = 20,NBPG_PA83 = 2048,MAXPHYS = 262144,};
enum MACRO_BYTE_8BIT {BYTE_8BIT = 0x0,WORD_16BIT = 0x4,BYTE_32BIT = 0x8,BYTE_16BIT = 0xC,CYCLE_TIMING_MASK = 0x30,};
enum MACRO_B_BESTFIT {B_BESTFIT = 0x0,B_WORSTFIT = 0x1,B_DQ_FORCE = 0x2,};
enum MACRO_B_HWRELOC {B_HWRELOC = 0x0,B_WRITE = 0x0,};
enum MACRO_B_unknown {B_unknown = 0x0,};
enum MACRO_BadShmSeg {BadShmSeg = 0,ShmNumberErrors = 1,};
enum MACRO_CACHEPROG {CACHEPROG = 100301,};
enum MACRO_CHANNEL_0 {CHANNEL_0_ENABLED = 0x1,CHANNEL_1_ENABLED = 0x2,CHANNEL_2_ENABLED = 0x4,CHANNEL_3_ENABLED = 0x8,CHANNEL_5_ENABLED = 0x20,CHANNEL_6_ENABLED = 0x40,CHANNEL_7_ENABLED = 0x80,};
enum MACRO_CHANNEL_4 {CHANNEL_4_SELECT = 0x0,CHANNEL_5_SELECT = 0x1,CHANNEL_6_SELECT = 0x2,CHANNEL_7_SELECT = 0x3,ADDR_MODE_MASK = 0xC,};
enum MACRO_CIO_LOGCH {CIO_LOGCH_ERROR_TRAP = -43,};
enum MACRO_CIO_POWER {CIO_POWER_RECOVERY_IN_PROGRESS = -58,};
enum MACRO_CIO_PQUAD {CIO_PQUAD_EOC = 0xFFFFFFFF,};
enum MACRO_CIO_RESET {CIO_RESET_NOT_ALLOWED = -56,};
enum MACRO_CIO_SENSE {CIO_SENSE_RFC_PST = 192,CIO_SENSE_MASK = 208,};
enum MACRO_CIO_SUBCH {CIO_SUBCH_NOT_READY = -32,};
enum MACRO_CIO_TABLE {CIO_TABLE_INCONSISTENT = -18,};
enum MACRO_CIO_WRONG {CIO_WRONG_KEY_LOCK = -53,};
enum MACRO_CLOCKWISE {CLOCKWISE = 1,COUNTERCLOCKWISE = -1,};
enum MACRO_CLONEOPEN {CLONEOPEN = 0x2,};
enum MACRO_CMD_CLEAR {CMD_CLEAR = 3,CMD_RESET = 5,CMD_PORT = 32,CMD_RESET_ST = 261,};
enum MACRO_CMD_INPUT {CMD_INPUT = 8,CMD_OUTPUT = 9,COMMAND_IE = 128,};
enum MACRO_CMDformat {CMDformat = 0x4,CMDprint = 0xA,CMDslew_print = 0xB,CMDsync_buf = 0x10,CMDread_buf = 0x3C,};
enum MACRO_CMDlocate {CMDlocate_and_read = 0x0,CMDlocate_and_write = 0x2,CMDlocate_and_verify = 0x4,CMDspare_block = 0x6,CMDcopy_data = 0x8,CMDcold_load_read = 0xA,CMDrequest_status = 0xD,CMDrelease = 0xE,CMDrelease_denied = 0xF,CMDset_address_1V = 0x10,CMDset_address_3V = 0x11,CMDset_block_disp = 0x12,CMDset_length = 0x18,UNIT_BASE = 0x20,CMDinit_util_NEM = 0x30,CMDinit_util_REM = 0x31,CMDinit_util_SEM = 0x32,CMDinit_diagnostic = 0x33,CMDno_op = 0x34,CMDdescribe = 0x35,CMDinit_media = 0x37,CMDset_options = 0x38,CMDset_rps = 0x39,CMDset_retry_time = 0x3A,CMDset_release = 0x3B,CMDset_burst_LBO = 0x3C,CMDset_burst_ABT = 0x3D,CMDset_status_mask = 0x3E,VOLUME_BASE = 0x40,CMDset_retadd_mode = 0x48,CMDwrite_file_mark = 0x49,CMDunload = 0x4A,};
enum MACRO_CMDread10 {CMDread10 = 0x28,CMDwrite_ext = 0x2A,};
enum MACRO_CMDrewind {CMDrewind = 0x1,CMDreq_block_address = 0x2,CMDread_block_limits = 0x5,CMDseek_block = 0xC,CMDwrite_filemarks = 0x10,CMDspace = 0x11,CMDload = 0x1B,CMDlocate = 0x2B,CMDread_position = 0x34,};
enum MACRO_CMDrezero {CMDrezero_unit = 0x1,CMDformat_unit = 0x4,CMDreassign_blocks = 0x7,CMDread = 0x8,};
enum MACRO_CMDselect {CMDselect_cartridge = 0x2,CMDeject_magazine = 0xCC,};
enum MACRO_CMDwrite6 {CMDwrite6 = 0xA,CMDmode_select = 0x15,CMDreserve = 0x16,SCSI_CMDrelease = 0x17,};
enum MACRO_COUNTER_0 {COUNTER_0_SELECT = 0x0,COUNTER_1_SELECT = 0x40,COUNTER_2_SELECT = 0x80,READ_BACK = 0xC0,};
enum MACRO_CPS_SMART {CPS_SMART_NODE = -4,CPS_THREAD_PARALLEL = 1,};
enum MACRO_CPUSTATES {CPUSTATES = 9,CP_USER = 0,};
enum MACRO_CPU_CACHE {CPU_CACHE_LINE = 32,};
enum MACRO_CPU_M743i {CPU_M743i_A = 0x603,CPU_M743i_B = 0x604,CPU_M743v_A = 0x617,CPU_M743v_B = 0x618,};
enum MACRO_CT_NORMAL {CT_NORMAL = 0,CT_PANIC = 1,CT_TOC = 2,CT_HPMC = 3,TOC_MAGIC = 827617123,};
enum MACRO_CoreIndex {CoreIndex = 0,XmCompositeIndex = 4,};
enum MACRO_DACBROKEN {DACBROKEN = 536888327,};
enum MACRO_DAC_ASIO0 {DAC_ASIO0_INTENBL = 1,};
enum MACRO_DAM_EVENT {DAM_EVENT_SUBQ = 0,CONFIG_SUBQ = 1,};
enum MACRO_DAP_WRITE {DAP_WRITE = 0,DAP_READ = 1,DAP_STATUS = 2,DAP_ID = 3,DAP_CLEAR = 4,DAP_SELF_TEST = 5,DAP_WRITE_LB = 6,DAP_READ_LB = 7,DAP_DIAG_STAT = 8,};
enum MACRO_DATA_IDTS {DATA_IDTS = 6,};
enum MACRO_DAY_DIGIT {DAY_DIGIT = 2,};
enum MACRO_DA_CIC_OR {DA_CIC_OR_NOT_ADDR = -34,};
enum MACRO_DELSETLEN {DELSETLEN = 7,};
enum MACRO_DEN_M_800 {DEN_M_800 = 1,DEN_M_1600 = 2,DEN_M_6250 = 3,DEN_M_6250c = 4,};
enum MACRO_DEN_M_8MM {DEN_M_8MM_8200 = 1,DEN_M_8MM_8200c = 2,DEN_M_8MM_8500 = 3,DEN_M_8MM_8500c = 4,};
enum MACRO_DEN_M_AIT {DEN_M_AIT = 1,DEN_M_AITc = 2,};
enum MACRO_DEN_M_DLT {DEN_M_DLT_42500_24 = 1,DEN_M_DLT_42500_56 = 2,DEN_M_DLT_62500_64 = 3,DEN_M_DLT_62500_64c = 4,DEN_M_DLT_81633_64 = 5,DEN_M_DLT_81633_64c = 6,DEN_M_DLT_85937_52 = 7,DEN_M_DLT_85937_52c = 8,DEN_M_DLT_6667 = 9,DEN_M_DLT_10000 = 10,DEN_M_DLT_98250_52 = 11,DEN_M_DLT_98250_52c = 12,DEN_M_DLT_133000_56 = 13,DEN_M_DLT_133000_56c = 14,DEN_M_DLT_123100_84 = 15,DEN_M_DLT_123100_84c = 16,};
enum MACRO_DEN_M_QIC {DEN_M_QIC_11 = 1,DEN_M_QIC_24 = 2,DEN_M_QIC_120 = 3,DEN_M_QIC_150 = 4,DEN_M_QIC_525 = 5,DEN_M_QIC_1000 = 6,DEN_M_QIC_1350 = 7,DEN_M_QIC_2100 = 8,DEN_M_QIC_2GB = 9,DEN_M_QIC_5GB = 10,DEN_M_QIC_5010 = 11,};
enum MACRO_DEN_NOMOD {DEN_NOMOD = 0x7F,};
enum MACRO_DEV_BMASK {DEV_BMASK = 1023,BLKDEV_IOSIZE = 2048,};
enum MACRO_DIAG_CARD {DIAG_CARD_NOT_PRESENT = -66,};
enum MACRO_DIRBLKSIZ {DIRBLKSIZ = 1024,};
enum MACRO_DISABLE_0 {DISABLE = 0,};
enum MACRO_DL_ACCESS {DL_ACCESS = 0x2,DL_BADADDR = 0x1,};
enum MACRO_DL_BADSAP {DL_BADSAP = 0x0,DL_BADTOKEN = 0xC,DL_BOUND = 0xD,DL_INITFAILED = 0xE,DL_NOADDR = 0xF,DL_NOTINIT = 0x10,};
enum MACRO_DL_CMD_RS {DL_CMD_RS = 0x1,DL_CMD_UE = 0x5,DL_CMD_PE = 0x6,DL_CMD_IP = 0x7,DL_CMD_UN = 0x9,DL_CMD_IT = 0xF,DL_RSP_MASK = 0xF0,};
enum MACRO_DL_CSMACD {DL_CSMACD = 0x0,DL_TPB = 0x1,DL_TPR = 0x2,DL_METRO = 0x3,DL_ETHER = 0x4,DL_HDLC = 0x5,DL_CHAR = 0x6,DL_CTCA = 0x7,DL_FDDI = 0x8,DL_OTHER = 0x9,};
enum MACRO_DL_HP_PPA {DL_HP_PPA_ACK = 0xE1,DL_HP_RAWDATA_REQ = 0x100,DL_HP_RAWDATA_IND = 0x101,DL_HP_OK_TO_LOG_SNAP = 0x102,DL_LINK_DOWN_IND = 0x103,DL_LINK_UP_IND = 0x104,};
enum MACRO_DL_HP_SET {DL_HP_SET_ACK_TO_REQ = 0xF4,};
enum MACRO_DL_QOS_CO {DL_QOS_CO_RANGE1 = 0x101,DL_QOS_CO_SEL1 = 0x102,DL_QOS_CL_RANGE1 = 0x103,DL_QOS_CL_SEL1 = 0x104,};
enum MACRO_DL_UNBIND {DL_UNBIND_REQ = 0x2,DL_OK_ACK = 0x6,};
enum MACRO_DMA_HINTS {DMA_HINTS_GET = 0x1,DMA_HINTS_SET = 0x2,DMA_HINTS_RESET = 0x4,};
enum MACRO_DMA_TYPEC {DMA_TYPEC = 8,DMA_DEMAND = 16,DMA_SINGLE = 32,DMA_BLOCK = 64,DMA_CASCADE = 128,DMA_8BYTE = 256,DMA_16WORD = 512,DMA_16BYTE = 1024,DMA_32BYTE = 2048,DMA_READ = 4096,DMA_WRITE = 8192,DMA_SKIP_IOMAP = 16384,};
enum MACRO_DMEM_LPMC {DMEM_LPMC_FREE = 0,DMEM_LPMC_USED = 1,};
enum MACRO_DM_IO_REQ {DM_IO_REQ = 0,DA_INIT_IO_REQ = 1,DA_INTRPT_REQ = 2,DIAG_IO_REQ = 3,DM_DA_REQ = 4,PROBE_REQ = 5,DESC_REQ = 6,};
enum MACRO_DQ_LOCKED {DQ_LOCKED = 0x1,DQ_WANT = 0x2,DQ_MOD = 0x4,DQ_BLKS = 0x10,DQ_FILES = 0x20,DQ_SOFT_FILES = 0x40,DQ_HARD_FILES = 0x80,DQ_TIME_FILES = 0x100,DQ_SOFT_BLKS = 0x200,DQ_HARD_BLKS = 0x400,DQ_TIME_BLKS = 0x800,DQ_RESERVED = 0x1000,DQ_FREE = 0x2000,};
enum MACRO_DT_INITSZ {DT_INITSZ_DEPR = 0x70000000,};
enum MACRO_DXK_acute {DXK_acute_accent = 0x1000FE27,DXK_grave_accent = 0x1000FE60,DXK_tilde = 0x1000FE7E,};
enum MACRO_DvInteger {DvInteger = 1,};
enum MACRO_EFFECTIVE {EFFECTIVE_IOCPARM_MASK = 127,IOCCMD_MASK = 65535,IOC_VOID = 536870912,IOC_OUT = 1073741824,IOC_IN = -2147483648,IOC_INOUT = -1073741824,};
enum MACRO_EISA1_MIN {EISA1_MIN = 0x40,};
enum MACRO_EISA_CARD {EISA_CARD_ENABLE = 0x1,IOCHKERR = 0x2,IOCHKRESET = 0x4,NUM_DMA_CH_PER_BUS = 0x8,NUM_IRQ_PER_BUS = 0x10,};
enum MACRO_ELF32_FSZ {ELF32_FSZ_OFF = 4,};
enum MACRO_ELF64_FSZ {ELF64_FSZ_OFF = 8,ELF64_FSZ_SWORD = 4,};
enum MACRO_EMPTY_SET {EMPTY_SET = 0,};
enum MACRO_EN_NEWGRP {EN_NEWGRP = 0x1001,EN_OPEN_SENDFD = 0x1401,EN_OPEN_RECVFD = 0x1402,EN_LP = 0x140B,EN_LOGOUT = 0x2401,EN_LOGINS = 0x2402,EN_PIDWRITE = 0x2403,EN_RUNSTATE = 0x2801,EN_AUDISP = 0x2802,EN_AUDEVENT = 0x2803,EN_AUDSYS = 0x2804,EN_AUDUSR = 0x2805,EN_SAMADDUSR = 0x2806,EN_SAMDELUSR = 0x2807,EN_SAMREUSR = 0x2808,EN_SAMMODUSR = 0x2809,EN_SAMNEWGRP = 0x280A,EN_SAMDELGRP = 0x280B,EN_SAMMODGRP = 0x280C,EN_SAMNEWFS = 0x280D,EN_SAMMNTFS = 0x280E,EN_SAMUNMNTFS = 0x280F,EN_SAMSWAP = 0x2810,EN_SAMADDFSEN = 0x2811,EN_SAMRMFSEN = 0x2812,EN_SAMCHGFSEN = 0x2813,EN_SAMFBACKUP = 0x2814,EN_SAMIBACKUP = 0x2815,EN_SAMBUSCHED = 0x2816,EN_SAMRECINDEX = 0x2817,EN_SAMRECFILE = 0x2818,EN_SAMBUFILE = 0x2819,EN_SAMUUCP1 = 0x281A,EN_SAMUUCP2 = 0x281B,EN_SAMUUCP3 = 0x281C,EN_SAMUUCP4 = 0x281D,EN_SAMUUCP5 = 0x281E,EN_SAMADDTERM = 0x281F,EN_SAMGENMIN = 0x2820,EN_SAMGENFULL = 0x2821,EN_SAMGENCUST = 0x2822,EN_SAMLONGFN = 0x2823,EN_SAMADDLP = 0x2824,EN_SAMRMLP = 0x2825,EN_SAMLP = 0x2826,EN_CHFN = 0x2828,EN_CHSH = 0x2829,EN_PASSWD = 0x282A,EN_AUDOMON = 0x282B,EN_IPC_GETMSG = 0x3001,EN_IPC_PUTMSG = 0x3002,};
enum MACRO_ETHERTYPE {ETHERTYPE_TRAIL = 0x1000,ETHERTYPE_NTRAILER = 0x10,};
enum MACRO_ETHER_PKT {ETHER_PKT = 0,IEEE8023XSAP_PKT = 1,SNAP8023_PKT = 2,ETHERXT_PKT = 3,SNAP8024_PKT = 4,IEEE8023_PKT = 5,SNAP8023XT_PKT = 6,SNAP8024XT_PKT = 7,SNAPFDDI_PKT = 8,SNAP8025_PKT = 9,IEEE8025_PKT = 10,ATR_PKT = 11,FDDI_UI_PKT = 12,SNAPFDDI_LLA_PKT = 13,FDDI_LLA_PKT = 14,FCSNAP_PKT = 15,FC8022_PKT = 16,};
enum MACRO_EXPANSION {EXPANSION_SLOT = 0x0,EMBEDDED_DEV = 0x10,VIRTUAL_DEV = 0x20,NON_READABLE_PID = 0x40,DUPLICATES = 0x80,};
enum MACRO_EXTEVENTS {EXTEVENTS = 0,CORE_EVENTS = 64,};
enum MACRO_FCLWP_MAX {FCLWP_MAX_SNDBUF = 1048560,FCLWP_PROTO_PORT = 1,};
enum MACRO_FCLWP_RES {FCLWP_RES_PORTS = 1024,};
enum MACRO_FCMD_MODE {FCMD_MODE = 0x1,FCMD_READ_TRK = 0x2,FCMD_SPECIFY = 0x3,FCMD_SENSE_DEV = 0x4,FCMD_WRITE = 0x5,FCMD_READ = 0x6,FCMD_RECAL = 0x7,FCMD_SENSE_INT = 0x8,FCMD_WRITE_DD = 0x9,FCMD_READ_ID = 0xA,FCMD_READ_DD = 0xC,FCMD_FMT_TRACK = 0xD,FCMD_SEEK = 0xF,FCMD_SCAN_EQ = 0x11,FCMD_CONFIG = 0x13,};
enum MACRO_FCNTLCANT {FCNTLCANT = 131123,};
enum MACRO_FCODE_MAX {FCODE_MAX = 34,};
enum MACRO_FLEX_PAGE {FLEX_PAGE = 0x5,WRITE_PROTECT_BIT = 0x80,};
enum MACRO_FLOATTYPE {FLOATTYPE = -1,};
enum MACRO_FLT_RADIX {FLT_RADIX = 2,FLT_ROUNDS = 1,};
enum MACRO_FLUSHDATA {FLUSHDATA = 0x0,NOERROR = 0xFFFFFFFF,};
enum MACRO_FM_SIZE32 {FM_SIZE32 = 32,FM_SIZE64 = 16,};
enum MACRO_FP_ILOGB0 {FP_ILOGB0 = -2147483648,};
enum MACRO_FP_NORMAL {FP_NORMAL = 0,FP_ZERO = 1,FP_INFINITE = 2,FP_SUBNORMAL = 3,FP_NAN = 4,DECIMAL_DIG = 17,};
enum MACRO_FS_QCLEAN {FS_QCLEAN = 0x1,FS_QOK = 0x2,FS_QNOTOK = 0x3,};
enum MACRO_FillSolid {FillSolid = 0,FillTiled = 1,FillStippled = 2,FillOpaqueStippled = 3,};
enum MACRO_GCLastBit {GCLastBit = 22,};
enum MACRO_GCREGLOCK {GCREGLOCK = 536889126,};
enum MACRO_GET_PANIC {GET_PANIC_OK = 0x2,};
enum MACRO_GOOD_STAT {GOOD_STAT = 0xC0,};
enum MACRO_GPIO_REG0 {GPIO_REG0 = 10,GPIO_REG1 = 11,GPIO_REG3 = 12,GPIO_REG7 = 13,GPIO_REG9 = 14,GPIO_CLEAR = 15,GPIO_POLL = 16,GPIO_REGA = 17,GPIO_REGB = 19,GPIO_PORTNUM = 999,};
enum MACRO_GP_RDYEN1 {GP_RDYEN1 = 0x2,GP_RDYEN0 = 0x0,};
enum MACRO_GRAPHIC_2 {GRAPHIC_2_INT_LINE = 19,GRAPHIC_2_INT_MASK = 4096,};
enum MACRO_HANDSHAKE {HANDSHAKE_MODE_SIZE = 3,};
enum MACRO_HASH_PDIR {HASH_PDIR_MAX = 1048576,};
enum MACRO_HID_MOUSE {HID_MOUSE = 1,HID_KEYBD = 2,HID_UNKNOWN = 3,};
enum MACRO_HPDIRFREE {HPDIRFREE = 0xFFFFFFFF,};
enum MACRO_HPIBWRITE {HPIBWRITE = 0x0,HPIBREAD = 0x1,HPIBATN = 0x2,HPIBEOI = 0x4,HPIBCHAR = 0x8,};
enum MACRO_HPIB_CHAN {HPIB_CHAN = 1,HPIB_DEVICE = 2,};
enum MACRO_HPIB_DIAG {HPIB_DIAG_REQ = 1,HPIB_READ_REG = 20,HPIB_WRITE_REG = 21,HPIB_INPUT = 22,HPIB_OUTPUT = 23,DIAG_SHZM = 2048,};
enum MACRO_HPIB_READ {HPIB_READ = 35,HPIB_WRITE = 36,HPIB_CMD = 37,};
enum MACRO_HPIB_TALK {HPIB_TALK_ALWAYS = 0x40,HPIB_LISTEN_ALWAYS = 0x20,};
enum MACRO_HP_UX_OPT {HP_UX_OPT_ASMODEL_EXEC_MAGIC = 1,HP_UX_OPT_ASMODEL_SHMEM_MAGIC = 2,HP_UX_OPT_ASMODEL_MPAS = 3,};
enum MACRO_IGMP_IDLE {IGMP_IDLE_MEMBER = 2,IGMP_LAZY_MEMBER = 3,IGMP_SLEEPING_MEMBER = 4,IGMP_AWAKENING_MEMBER = 5,IGMP_AGE_THRESHOLD = 270,};
enum MACRO_INITIATOR {INITIATOR_DETECTED_ERROR_MSG = 0x5,LINKED_COMMAND_COMPLETE_MSG = 0xA,};
enum MACRO_INTERFACE {INTERFACE_HAS_ITE = 0x1,PORT_HAS_FIRST_KEYBD = 0x2,PORT_HAS_FIRST_MOUSE = 0x4,};
enum MACRO_INT_FAST8 {INT_FAST8_MIN = -2147483648,};
enum MACRO_INVLDEQID {INVLDEQID = -12,};
enum MACRO_IN_CLASSA {IN_CLASSA_HOST = 0xFFFFFF,};
enum MACRO_IN_CLASSB {IN_CLASSB_NET = 0xFFFF0000,IN_CLASSB_NSHIFT = 0x10,};
enum MACRO_IN_CLASSC {IN_CLASSC_NET = 0xFFFFFF00,IN_CLASSC_NSHIFT = 0x8,};
enum MACRO_IN_CLASSD {IN_CLASSD_NET = 0xF0000000,IN_CLASSD_NSHIFT = 0x1C,};
enum MACRO_IO_UPDATE {IO_UPDATE = 0x20,IO_SEQ_ENB = 0x40,IO_NO_SEQ = 0x8000,};
enum MACRO_IPFRAGTTL {IPFRAGTTL = 60,};
enum MACRO_IPOPT_EOL {IPOPT_EOL = 0,IPOPT_NOP = 1,IPOPT_RR = 7,IPOPT_TS = 68,IPOPT_SECURITY = 130,IPOPT_LSRR = 131,IPOPT_SATID = 136,IPOPT_SSRR = 137,};
enum MACRO_IPVERSION {IPVERSION = 4,IP_DF = 16384,};
enum MACRO_InputHint {InputHint = 1,StateHint = 2,IconPixmapHint = 4,IconWindowHint = 8,IconPositionHint = 16,IconMaskHint = 32,WindowGroupHint = 64,AllHints = 127,XUrgencyHint = 256,};
enum MACRO_JoinMiter {JoinMiter = 0,JoinRound = 1,JoinBevel = 2,};
enum MACRO_KEY_VERS2 {KEY_VERS2 = 2,KEY_ENCRYPT_PK = 6,KEY_DECRYPT_PK = 7,KEY_NET_PUT = 8,KEY_NET_GET = 9,KEY_GET_CONV = 10,};
enum MACRO_KI_NETISR {KI_NETISR = 594,};
enum MACRO_KI_NVSISR {KI_NVSISR = 584,};
enum MACRO_KI_STRMEM {KI_STRMEM = 579,};
enum MACRO_KI_XPORTD {KI_XPORTD = 589,};
enum MACRO_LE_NETISR {LE_NETISR_QUEUE_FULL = 2001,LE_NETISR_UNKNOWN_EVENT = 2002,LE_NETISR_NOT_RUNNING = 3001,LE_NETISR_DROPPED_MBUF = 3002,};
enum MACRO_LE_STRLOG {LE_STRLOG_NO_LOG = 4000,};
enum MACRO_LE_TIRDWR {LE_TIRDWR_STRHEAD_WARN = 3000,LE_TIRDWR_NO_TIRDWR = 4000,LE_TIRDWR_CANT_ALLOCB = 4001,};
enum MACRO_LLIO_BIND {LLIO_BIND_BAD_SUBSYS = -8,};
enum MACRO_LLIO_BUSY {LLIO_BUSY = -74,};
enum MACRO_LLIO_DATA {LLIO_DATA_ERROR = -35,};
enum MACRO_LLIO_LOCK {LLIO_LOCK_GRANTED_SAFE = -67,};
enum MACRO_LLIO_MECH {LLIO_MECH_FAULT = -80,};
enum MACRO_LLIO_MOST {LLIO_MOST_POS_STAT = 14,LLIO_ABORTED = -1,};
enum MACRO_LLIO_MUST {LLIO_MUST_BE_LOCKED = -28,};
enum MACRO_LLIO_OVER {LLIO_OVER_HUMIDITY = -76,};
enum MACRO_LLIO_READ {LLIO_READ_TIMEOUT = -50,};
enum MACRO_LOCK_BUSY {LOCK_BUSY_OK = 0,LOCK_SAFE_ONLY = 1,MAXBUFF = 32768,};
enum MACRO_LOCK_SUBQ {LOCK_SUBQ_MASK = -935329792,SW_FAILURE_SUBQ_MASK = -536870912,};
enum MACRO_LOG_EMERG {LOG_EMERG = 0,LOG_ALERT = 1,LOG_CRIT = 2,LOG_ERR = 3,LOG_WARNING = 4,LOG_NOTICE = 5,LOG_INFO = 6,LOG_DEBUG = 7,};
enum MACRO_LOG_START {LOG_START = 1,LOG_STOP = 2,};
enum MACRO_LOTSOFMEM {LOTSOFMEM = 8,};
enum MACRO_LW_MAXNUM {LW_MAXNUM = 253,};
enum MACRO_L_cuserid {L_cuserid = 9,};
enum MACRO_LineSolid {LineSolid = 0,LineOnOffDash = 1,LineDoubleDash = 2,};
enum MACRO_MARKPARMS {MARKPARMS_SIZE = 4,};
enum MACRO_MAXCDNAME {MAXCDNAME = 255,};
enum MACRO_MAXCSBUFS {MAXCSBUFS = 32,FS_MAGIC = 72020,FS_MAGIC_LFN = 610324,FD_FSMAGIC = 1660434,FD_FSMAGIC_2 = 86186388,};
enum MACRO_MAXFUPLIM {MAXFUPLIM = 2048,};
enum MACRO_MAXHTYPES {MAXHTYPES = 7,};
enum MACRO_MAXNAMLEN {MAXNAMLEN = 255,};
enum MACRO_MAXVPROTO {MAXVPROTO = 5,};
enum MACRO_MAX_CACHE {MAX_CACHE_LINE = 64,MAX_MSG_LEN = 128,};
enum MACRO_MAX_CNODE {MAX_CNODE = 255,};
enum MACRO_MAX_DIGIT {MAX_DIGIT_ALT = 35,MAX_PUNCT_ALT = 67,};
enum MACRO_MAX_HWLOG {MAX_HWLOG_BYTES = 40,};
enum MACRO_MAX_INPUT {MAX_INPUT = 512,};
enum MACRO_MAX_OPENS {MAX_OPENS = 16,};
enum MACRO_MAX_PROCS {MAX_PROCS = 16,};
enum MACRO_MAX_PROTO {MAX_PROTO_LEN = 20,DLPI_STREAMS_MASK = -2147483648,};
enum MACRO_MAX_SLOTS {MAX_SLOTS = 2046,};
enum MACRO_MAX_SMALL {MAX_SMALL_FILE_BITS = 32,MAX_LARGE_FILE_BITS = 42,MAX_SMALL_FILE = 2147483647,MAX_LARGE_FILE = -1,};
enum MACRO_MAX_SPACE {MAX_SPACE_IDs = 32768,};
enum MACRO_MAX_VALID {MAX_VALID_SYSCALL = 63,MAX_SYSCALL = 512,};
enum MACRO_MEMRESERV {MEMRESERV_NOCHK = 0x1,MEMRESERV_CHK = 0x2,MEMRESERV_WAIT = 0x4,MEMORY_USER = 0x8,MEMORY_KERNEL = 0x10,MEMORY_RHEAD = 0x20,};
enum MACRO_MGR_STATE {MGR_STATE_BROKEN = 0,MGR_STATE_FIXED = 1,};
enum MACRO_MINBUCKET {MINBUCKET = 5,MAXBUCKET = 20,};
enum MACRO_MIN_BYTES {MIN_BYTES_IN_MODE_SELECT = 12,};
enum MACRO_MIN_EVENT {MIN_EVENT_REQUEST = 1,MAX_EVENT_REQUEST = 11,};
enum MACRO_MIRCONFIG {MIRCONFIG_MAJ = 48,MIRCONFIG_MIN = 0,};
enum MACRO_MM_ACTION {MM_ACTION = 0x400,};
enum MACRO_MNTMAXSTR {MNTMAXSTR = 128,};
enum MACRO_MNTNAMLEN {MNTNAMLEN = 255,};
enum MACRO_MODE_MASK {MODE_MASK = 0xC,};
enum MACRO_MOUNTPROC {MOUNTPROC_NULL = 0,MOUNTPROC_MNT = 1,MOUNTPROC_DUMP = 2,MOUNTPROC_UMNT = 3,MOUNTPROC_UMNTALL = 4,MOUNTPROC_EXPORT = 5,MOUNTPROC_EXPORTALL = 6,};
enum MACRO_MOUNTPROG {MOUNTPROG = 100005,};
enum MACRO_MOUNTVERS {MOUNTVERS = 1,};
enum MACRO_MSG_HIPRI {MSG_HIPRI = 1,MSG_BAND = 2,MSG_ANY = 4,};
enum MACRO_MSG_MAGIC {MSG_MAGIC = 0x63060,};
enum MACRO_MSGmodify {MSGmodify_data_ptr = 0x0,MSGsync_req = 0x1,MSGwide_req = 0x3,MSGidentify = 0x80,};
enum MACRO_MS_RDONLY {MS_RDONLY = 1,MS_NOSUID = 2,MS_QUOTA = 4,MS_LARGEFILES = 16,MS_NOLARGEFILES = 32,MS_REMOUNT = 64,MS_OVERLAY = 128,};
enum MACRO_MTCONNECT {MTCONNECT = 0,MTCARRIER = 1,MTNOACTIVITY = 2,MTHANGUP = 3,};
enum MACRO_MT_CONFIG {MT_CONFIG_MASK = 0x3F,MT_DEFAULT_MASK = 0xFFFFFF00,};
enum MACRO_MT_FORMAT {MT_FORMAT_MASK = 0xF,MT_FORMAT_BIT_POS = 0x0,};
enum MACRO_MT_ISDDS3 {MT_ISDDS3 = 0x7,};
enum MACRO_MT_ISDDS4 {MT_ISDDS4 = 0x7,MT_ISSCSI_REEL = 0x8,MT_ISQIC = 0x9,MT_IS8MM = 0xA,};
enum MACRO_MT_TARGET {MT_TARGET_BIT_POS = 12,MT_LUN_MASK = 15,};
enum MACRO_MWM_DECOR {MWM_DECOR_ALL = 1,MWM_DECOR_BORDER = 2,MWM_DECOR_RESIZEH = 4,MWM_DECOR_TITLE = 8,MWM_DECOR_MENU = 16,MWM_DECOR_MINIMIZE = 32,MWM_DECOR_MAXIMIZE = 64,};
enum MACRO_MWM_INPUT {MWM_INPUT_MODELESS = 0,MWM_INPUT_PRIMARY_APPLICATION_MODAL = 1,MWM_INPUT_SYSTEM_MODAL = 2,MWM_INPUT_FULL_APPLICATION_MODAL = 3,};
enum MACRO_M_COPYALL {M_COPYALL = 1000000000,};
enum MACRO_M_DEVMASK {M_DEVMASK = 0xFFFF00,};
enum MACRO_NC_NAMLEN {NC_NAMLEN = 39,};
enum MACRO_NC_NOFLAG {NC_NOFLAG = 0x0,NC_VISIBLE = 0x1,NC_BROADCAST = 0x2,};
enum MACRO_NEXTTRACK {NEXTTRACK_SERVER = 0,MERGE_SERVER = 1,REL_70_SERVER = 2,REL_701_SERVER = 3,REL_80_SERVER = 4,REL_807_SERVER = 5,REL_90_SERVER = 6,REL_903_SERVER = 7,REL_905_SERVER = 8,REL_100_SERVER = 9,};
enum MACRO_NGROUPS_0 {NGROUPS = 20,};
enum MACRO_NISPASSWD {NISPASSWD_VERS = 1,};
enum MACRO_NIS_CACHE {NIS_CACHE_ADD_ENTRY = 1,NIS_CACHE_REMOVE_ENTRY = 2,NIS_CACHE_READ_COLDSTART = 3,NIS_CACHE_REFRESH_ENTRY = 4,};
enum MACRO_NLM_VERSX {NLM_VERSX = 3,NLM_SHARE = 20,NLM_UNSHARE = 21,NLM_NM_LOCK = 22,NLM_FREE_ALL = 23,};
enum MACRO_NL_ARGMAX {NL_ARGMAX = 9,NL_MSGMAX = 65534,};
enum MACRO_NL_SAFEFD {NL_SAFEFD = 3,STD_BLK = 512,};
enum MACRO_NMINVALID {NMINVALID = 2,NMDIRECT = 3,NMREMOTE = 4,};
enum MACRO_NOT_SCSI1 {NOT_SCSI1 = 0,BPI_800 = 1,BPI_1600 = 2,BPI_6250 = 3,BPI_NONE = 195,};
enum MACRO_NO_ACTION {NO_ACTION = 0,DAM_READ = 1,DAM_WRITE = 2,DOWNLOAD_IN_ACTION = 3,IDENTIFY_IN_ACTION = 4,};
enum MACRO_NO_DEVICE {NO_DEVICE = 0x0,HP_ITF_KBD = 0x1,PC101_KBD = 0x2,IBM3270_KBD = 0x3,LK201_KBD = 0x4,LK401_KBD = 0x5,UNIX_KBD = 0x6,SUN3_KBD = 0x7,SUN4_KBD = 0x8,HP_HIL = 0x40,PS2 = 0x80,SERIAL = 0xC0,ALLWINDOWS = 0xFFFFFFFF,};
enum MACRO_NSECTIONS {NSECTIONS = 16,};
enum MACRO_NULLQUARK {NULLQUARK = 0,};
enum MACRO_NUM_CLEAR {NUM_CLEAR_BYTES = 1,NUM_IDENTIFY_BYTES = 2,AMIGO_ID = 32,};
enum MACRO_NUM_SUBQS {NUM_SUBQS_NEEDED = 32,};
enum MACRO_NotUseful {NotUseful = 0,WhenMapped = 1,Always = 2,};
enum MACRO_OLD_NS_LC {OLD_NS_LC_DISASTER = 1,NS_LC_ERROR = 131076,};
enum MACRO_O_BLKSEEK {O_BLKSEEK = 0x40,};
enum MACRO_PAllHints {PAllHints = 252,};
enum MACRO_PDC_LOCAL {PDC_LOCAL_VAR_SIZE = 4,PDC_ARG_SIZE = 10,};
enum MACRO_PDC_MODEL {PDC_MODEL_CPU_KEY_QUAD_STORE = 0x1,PDC_MODEL_CPU_KEY_WORD_TO_IO = 0x2,PDC_MODEL_CPU_KEY_RECIP_SQRT = 0x4,PDC_MODEL_CPU_KEY_FDC_GRAPHICS = 0x8,};
enum MACRO_PDE_AR_CW {PDE_AR_CW = 15,};
enum MACRO_PDE_AR_GX {PDE_AR_GX = 0x4C,PDE_REF_POS = 0x0,};
enum MACRO_PDE_AR_KX {PDE_AR_KX = 0x20,PDE_AR_UXRW = 0x3F,};
enum MACRO_PDE_AR_UR {PDE_AR_UR = 0xF,PDE_AR_URW = 0x1F,PDE_AR_URX = 0x2F,PDE_AR_URWX = 0x3F,PDE_AR_UX = 0x7F,};
enum MACRO_PDE_MATCH {PDE_MATCH = 0x1,PDE_TRANS = 0x2,PDE_ALL = 0x4,PDE_SAVE = 0x8,PDE_RESET = 0x10,PDE_LOCKOK = 0x20,PDE_ALIAS = 0x40,};
enum MACRO_PDE_VADDR {PDE_VADDR = 0,PDE_PROT = 4,PDE_PPN = 8,PDE_NEXT = 12,};
enum MACRO_PF_UNSPEC {PF_UNSPEC = 0,PF_UNIX = 1,PF_INET = 2,PF_IMPLINK = 3,PF_PUP = 4,PF_CHAOS = 5,PF_NS = 6,PF_NBS = 7,PF_ECMA = 8,PF_DATAKIT = 9,PF_CCITT = 10,PF_SNA = 11,PF_DECnet = 12,PF_DLI = 13,PF_LAT = 14,PF_HYLINK = 15,PF_APPLETALK = 16,PF_OTS = 17,PF_NIT = 18,PF_VME_LINK = 19,PF_MAX = 20,};
enum MACRO_POWERFAIL {POWERFAIL_SUBQ = 0,};
enum MACRO_PRC_CONN2 {PRC_CONN2_WAIT = 50,};
enum MACRO_PRC_CONN3 {PRC_CONN3_WAIT = 19,PRC_READ_WAIT = 20,PRC_READ_READY = 21,};
enum MACRO_PRC_CSBIT {PRC_CSBIT_READ = 0x10,PRC_CSBIT_READ2 = 0x20,PRC_CSBIT_WRITE = 0x40,PRC_CSBIT_ERR = 0x80,};
enum MACRO_PRC_NULLP {PRC_NULLP = 0,};
enum MACRO_PRIO_PGRP {PRIO_PGRP = 1,PRIO_USER = 2,};
enum MACRO_PROCEDURE {PROCEDURE_TRACE_BIT = 0x8000000,};
enum MACRO_PROFILING {PROFILING_ON = 0,PROFILING_OFF = 3,PRF_ON_SAME = -1,};
enum MACRO_PROT_EXEC {PROT_EXEC = 4,PROT_KERNEL = 8,};
enum MACRO_PROT_NONE {PROT_NONE = 0x0,PROT_USER = 0x0,};
enum MACRO_PROT_READ {PROT_READ = 0x1,PROT_WRITE = 0x2,PROT_EXECUTE = 0x4,};
enum MACRO_PROT_URWX {PROT_URWX = 7,};
enum MACRO_PR_ATOMIC {PR_ATOMIC = 0x1,PR_ADDR = 0x2,PR_CONNREQUIRED = 0x4,PR_WANTRCVD = 0x8,PR_RIGHTS = 0x10,PR_WANTSETSOCKOPT = 0x20,PR_COPYAVOID = 0x40,PR_USESTH = 0x80,PR_CLONE_NOATT = 0x100,};
enum MACRO_PR_SLOWHZ {PR_SLOWHZ = 2,PR_FASTHZ = 5,};
enum MACRO_PSM_ERROR {PSM_ERROR_PIN_LENGHT_MAX = 120,};
enum MACRO_PST_VADDR {PST_VADDR = 0x1,PS_DRV_NAM_MAX = 0x20,};
enum MACRO_PS_INCORE {PS_INCORE = 0x1,PS_SYS = 0x2,PS_LOCKED = 0x4,PS_TRACE = 0x8,PS_TRACE2 = 0x10,PS_TXTLOCKED = 0x20,PS_DATLOCKED = 0x40,PS_SYSCALLTRACE = 0x80,PS_SWLAZY = 0x100,PS_64ASL = 0x200,};
enum MACRO_PS_MEMORY {PS_MEMORY_LOCKED = 0x1,PS_EXECUTABLE = 0x2,PS_SHARED = 0x4,PS_SHARED_LIBRARY = 0x8,};
enum MACRO_PT_SETTRC {PT_SETTRC = 0,PT_RIUSER = 1,PT_RDUSER = 2,PT_RUAREA = 3,PT_WIUSER = 4,PT_WDUSER = 5,PT_WUAREA = 6,PT_CONTIN = 7,PT_EXIT = 8,PT_SINGLE = 9,PT_RUREGS = 10,PT_WUREGS = 11,PT_ATTACH = 12,PT_DETACH = 13,PT_RDTEXT = 14,PT_RDDATA = 15,PT_WRTEXT = 16,PT_WRDATA = 17,PT_CONTIN1 = 18,PT_SINGLE1 = 19,PT_SET_EVENT_MASK = 20,PT_GET_EVENT_MASK = 21,PT_GET_PROCESS_STATE = 22,PT_GET_PROCESS_PATHNAME = 23,};
enum MACRO_Q_QUOTAON {Q_QUOTAON = 1,Q_QUOTAOFF = 2,Q_SETQUOTA = 3,Q_GETQUOTA = 4,Q_SETQLIM = 5,Q_SYNC = 6,Q_SETFSQUOTA = 7,Q_GETFSQUOTA = 8,DQ_FTIMELIMIT = 604800,};
enum MACRO_READ_DATA {READ_DATA = 1,WRITE_DATA = 2,};
enum MACRO_READ_ONLY {READ_ONLY_COMPRESSION = 1,};
enum MACRO_RPCBVERS4 {RPCBVERS4 = 4,RPCBPROC_BCAST = 5,RPCBPROC_GETVERSADDR = 9,RPCBPROC_INDIRECT = 10,RPCBPROC_GETADDRLIST = 11,RPCBPROC_GETSTAT = 12,};
enum MACRO_RPC_ANYFD {RPC_ANYFD = -1,};
enum MACRO_RSTATPROC {RSTATPROC_STATS = 1,RSTATPROC_HAVEDISK = 2,RSTATVERS_TIME = 3,RSTATVERS_VAR = 4,};
enum MACRO_RSTATPROG {RSTATPROG = 100001,};
enum MACRO_RSTATVERS {RSTATVERS_SWTCH = 2,};
enum MACRO_RTLD_SELF {RTLD_SELF = -3,};
enum MACRO_SAVE_DATA {SAVE_DATA_POINTERS_MSG = 0x2,TERMINATE_IO_PROCESS_MSG = 0x11,};
enum MACRO_SB_NOTIFY {SB_NOTIFY = 12,SB_MSGCOMPLETE = 32,SB_SYNC = 256,SB_SYNCINIT = 512,SB_COPYAVOID_REQ = 4096,SB_COPYAVOID_SUPP = 8192,SB_NVS = 16384,SB_NVS_WAIT = 32768,};
enum MACRO_SCSI_SYNC {SCSI_SYNC_TRANS = 1,SCSI_ASYNC_TRANS = 2,SCSI_NARROW_MASK = 3,SCSI_16_WIDE_TRANS = 4,SCSI_32_WIDE_TRANS = 8,};
enum MACRO_SCTL_SDTR {SCTL_SDTR_DONE = 0x1,SCTL_WDTR_DONE = 0x2,SCTL_ENABLE_SDTR = 0x80000000,};
enum MACRO_SCTL_TAGS {SCTL_TAGS_ACTIVE = 0x1,SCTL_ENABLE_TAGS = 0x80000000,};
enum MACRO_SEC_CLASS {SEC_CLASS_NONE = 0,SEC_CLASS_C2 = 1,SEC_CLASS_B1 = 2,};
enum MACRO_SHM_CLEAR {SHM_CLEAR = 0x200,SHM_DEST = 0x400,SHM_NOSWAP = 0x1000,};
enum MACRO_SHZM_DIAG {SHZM_DIAG_NINTIN = -2147483648,SHZM_DIAG_DMA_ENB = 134217728,SHZM_DIAG_CHAIN_CMD = 2097152,SHZM_DIAG_RESET_CMD = 1048576,SHZM_DIAG_FLUSH_CMD = 524288,SHZM_DIAG_IE = 262144,SHZM_DIAG_STOP_CMD = 131072,SHZM_DIAG_IIENB = 4096,};
enum MACRO_SHZM_TEST {SHZM_TEST_DMA_PAUSE = 64,};
enum MACRO_SIGWINDOW {SIGWINDOW = 23,SIGLOST = 30,SIGDIL = 32,_NSIG = 45,};
enum MACRO_SIOC_DISK {SIOC_DISK_EJECT = 536892171,};
enum MACRO_SMT_AWAIT {SMT_AWAIT_TRIGGER = 0x4,SunXK_FA_Grave = 0x1005FF00,SunXK_FA_Circum = 0x1005FF01,SunXK_FA_Tilde = 0x1005FF02,SunXK_FA_Acute = 0x1005FF03,SunXK_FA_Diaeresis = 0x1005FF04,SunXK_FA_Cedilla = 0x1005FF05,SunXK_F36 = 0x1005FF10,SunXK_F37 = 0x1005FF11,SunXK_Sys_Req = 0x1005FF60,};
enum MACRO_SOMAXCONN {SOMAXCONN = 20,};
enum MACRO_SO_BSDIPC {SO_BSDIPC = 1,SO_NETIPC = 2,SO_ULIPC = 3,};
enum MACRO_SPP_SONIC {SPP_SONIC_SV_ID = 0xA6,SCSI_F_EISA_SV_ID = 0x22F00C80,SCSI_EISA_SV_ID = 0x22F00C90,};
enum MACRO_SPRAYPROC {SPRAYPROC_SPRAY = 1,SPRAYPROC_GET = 2,SPRAYPROC_CLEAR = 3,};
enum MACRO_SPRAYPROG {SPRAYPROG = 100012,};
enum MACRO_SPRAYVERS {SPRAYVERS_ORIG = 1,};
enum MACRO_SS_GLOBAL {SS_GLOBAL = 2,SS_UNIVERSAL = 3,};
enum MACRO_STDEVENTS {STDEVENTS = -1,};
enum MACRO_ST_ONLINE {ST_ONLINE = 0x80000000,ST_MSA = 0x200000,ST_FROZEN = 0x100,ST_NCC = 0x80,ST_HSD = 0x40,ST_PTY = 0x20,ST_RPO = 0x8,};
enum MACRO_SUBSYSTEM {SUBSYSTEM_BITS = 0xFFFFF,ALL_KIND_BITS = 0xFFC00000,};
enum MACRO_SYS___cnx {SYS___cnx_gsched_ctl = 510,SYS___CNX_PMON_CTL = 511,};
enum MACRO_SYS_alarm {SYS_alarm = 27,SYS_CNX_LW_PMON_READ = 28,};
enum MACRO_SYS_async {SYS_async_daemon = 194,SYS_GETDIRENTRIES = 195,};
enum MACRO_SYS_bigio {SYS_bigio = 176,SYS_PIPENODE = 177,};
enum MACRO_SYS_chdir {SYS_chdir = 12,SYS_TIME = 13,};
enum MACRO_SYS_chmod {SYS_chmod = 15,SYS_CHOWN = 16,};
enum MACRO_SYS_chown {SYS_chown = 16,SYS_BRK = 17,};
enum MACRO_SYS_clock {SYS_clock_settime = 345,SYS_CLOCK_GETTIME = 346,};
enum MACRO_SYS_close {SYS_close = 6,SYS_WAIT = 7,};
enum MACRO_SYS_creat {SYS_creat = 8,SYS_LINK = 9,};
enum MACRO_SYS_execv {SYS_execv = 11,SYS_CHDIR = 12,};
enum MACRO_SYS_fcntl {SYS_fcntl = 62,SYS_ULIMIT = 63,};
enum MACRO_SYS_fsctl {SYS_fsctl = 250,SYS_SWAPFS = 259,};
enum MACRO_SYS_fstat {SYS_fstat = 92,SYS_SELECT = 93,};
enum MACRO_SYS_fsync {SYS_fsync = 95,SYS_SETPRIORITY = 96,};
enum MACRO_SYS_ftime {SYS_ftime = 35,SYS_SYNC = 36,};
enum MACRO_SYS_getfh {SYS_getfh = 191,SYS_GETDOMAINNAME = 192,};
enum MACRO_SYS_ioctl {SYS_ioctl = 54,SYS_REBOOT = 55,};
enum MACRO_SYS_kload {SYS_kload = 326,SYS_FATTACH = 327,};
enum MACRO_SYS_lockf {SYS_lockf = 155,SYS_SEMGET = 156,};
enum MACRO_SYS_lseek {SYS_lseek = 19,SYS_GETPID = 20,};
enum MACRO_SYS_lstat {SYS_lstat = 40,SYS_DUP = 41,};
enum MACRO_SYS_lsync {SYS_lsync = 178,SYS_MYSITE = 180,};
enum MACRO_SYS_mkdir {SYS_mkdir = 136,SYS_RMDIR = 137,};
enum MACRO_SYS_mknod {SYS_mknod = 14,SYS_CHMOD = 15,};
enum MACRO_SYS_mlock {SYS_mlock = 421,SYS_MUNLOCK = 422,};
enum MACRO_SYS_mount {SYS_mount = 21,SYS_UMOUNT = 22,};
enum MACRO_SYS_mpctl {SYS_mpctl = 315,SYS_EXPORTFS = 316,};
enum MACRO_SYS_msync {SYS_msync = 320,SYS_MSLEEP = 321,};
enum MACRO_SYS_pause {SYS_pause = 29,SYS_UTIME = 30,};
enum MACRO_SYS_plock {SYS_plock = 153,SYS_LF_NEXT_SCN = 154,};
enum MACRO_SYS_pread {SYS_pread = 372,SYS_PREADV = 373,};
enum MACRO_SYS_pstat {SYS_pstat = 239,SYS_GETAUDID = 240,};
enum MACRO_SYS_readv {SYS_readv = 120,SYS_WRITEV = 121,};
enum MACRO_SYS_recv2 {SYS_recv2 = 504,SYS_RECVFROM2 = 505,};
enum MACRO_SYS_rmdir {SYS_rmdir = 137,SYS_SIGCLEANUP = 139,};
enum MACRO_SYS_sched {SYS_sched_setparam = 337,SYS_SCHED_GETPARAM = 338,};
enum MACRO_SYS_semop {SYS_semop = 158,SYS_MSGGET = 159,};
enum MACRO_SYS_send2 {SYS_send2 = 506,SYS_SENDTO2 = 507,};
enum MACRO_SYS_shmat {SYS_shmat = 165,SYS_SHMDT = 166,};
enum MACRO_SYS_shmdt {SYS_shmdt = 166,SYS__SET_MEM_WINDOW = 167,};
enum MACRO_SYS_stime {SYS_stime = 25,SYS_PTRACE = 26,};
enum MACRO_SYS_sysfs {SYS_sysfs = 334,SYS_SCHED_SETPARAM = 337,};
enum MACRO_SYS_timer {SYS_timer_create = 348,SYS_TIMER_DELETE = 349,};
enum MACRO_SYS_times {SYS_times = 43,SYS_PROFIL = 44,};
enum MACRO_SYS_tsync {SYS_tsync = 267,SYS_GETNUMFDS = 268,};
enum MACRO_SYS_umask {SYS_umask = 60,SYS_CHROOT = 61,};
enum MACRO_SYS_utime {SYS_utime = 30,SYS_STTY = 31,};
enum MACRO_SYS_vfork {SYS_vfork = 66,SYS_LWP_GETPRIVATE = 67,};
enum MACRO_SYS_wait3 {SYS_wait3 = 84,SYS_SWAPON = 85,};
enum MACRO_SYS_write {SYS_write = 4,SYS_OPEN = 5,};
enum MACRO_S_BUFSIZE {S_BUFSIZE = 9,};
enum MACRO_ShiftMask {ShiftMask = 1,LockMask = 2,ControlMask = 4,Mod1Mask = 8,Mod2Mask = 16,Mod3Mask = 32,Mod4Mask = 64,Mod5Mask = 128,};
enum MACRO_TCP_ABORT {TCP_ABORT_THRESHOLD = 0x11,TCP_CONN_ABORT_THRESHOLD = 0x13,TCP_CWND_INIT = 0x16,};
enum MACRO_TIMEOFDAY {TIMEOFDAY = 1,};
enum MACRO_TIOCBREAK {TIOCBREAK = 536900702,};
enum MACRO_TIOCCLOSE {TIOCCLOSE = 536900706,};
enum MACRO_TIOCSTART {TIOCSTART = 536900718,};
enum MACRO_TRACE_ALL {TRACE_ALL_MINORS = -1,};
enum MACRO_TRACE_OWN {TRACE_OWN_MAJOR = -1,};
enum MACRO_TR_IF_LAN {TR_IF_LAN = 256,TR_IF_LOOP = 512,TR_IF_NI = 1024,TR_IF_X25 = 2048,};
enum MACRO_TR_NOTERM {TR_NOTERM = 0x0,};
enum MACRO_TYPE_DATA {TYPE_DATA = 2,TYPE_STORAGE = 7,TYPE_TSTORAGE = 16,};
enum MACRO_T_GARBAGE {T_GARBAGE = 0x2,INET_UDP = 0x11,UDP_CHECKSUM = 0x600,};
enum MACRO_T_GETADDR {T_GETADDR_REQ = 12,T_FEEDBACK_REQ = 19,T_BIND_ACK = 20,T_CONN_CON = 21,T_CONN_IND = 22,T_DATA_IND = 23,T_DISCON_IND = 24,T_ERROR_ACK = 25,T_EXDATA_IND = 26,T_INFO_ACK = 27,T_OK_ACK = 28,T_OPTMGMT_ACK = 29,T_ORDREL_IND = 30,T_UNITDATA_IND = 31,T_UDERROR_IND = 32,T_ADDR_ACK = 33,};
enum MACRO_T_HITHRPT {T_HITHRPT = 8,T_HIREL = 4,};
enum MACRO_T_INVALID {T_INVALID = -2,};
enum MACRO_T_ROUTINE {T_ROUTINE = 0,T_PRIORITY = 1,T_IMMEDIATE = 2,T_FLASH = 3,T_OVERRIDEFLASH = 4,T_CRITIC_ECP = 5,T_INETCONTROL = 6,T_NETCONTROL = 7,};
enum MACRO_UCHAR_MIN {UCHAR_MIN = 0,};
enum MACRO_UTMAXTYPE {UTMAXTYPE = 9,};
enum MACRO_Uil_k_max {Uil_k_max_status = 4,};
enum MACRO_VALID_DEV {VALID_DEV_SIGS = 4210688,};
enum MACRO_VFD_VALID {VFD_VALID_ON = 0x1,VFD_VALID_OFF = 0x2,VFD_COW_ON = 0x4,VFD_COW_OFF = 0x8,VFD_COW_IDENT = 0x10,VFD_PFN_MATCH = 0x20,DBD_TYPE_IDENT = 0x100,INDX_IS_BASE = 0x1000,INDX_NOT_BASE = 0x2000,};
enum MACRO_VIPER_ASP {VIPER_ASP_RESET = 0xF082F000,WIPER_ASP_RESET = 0xF182F000,};
enum MACRO_WAIT_CTLR {WAIT_CTLR = 0x1,WAIT_SRQ = 0x2,WAIT_TALK = 0x4,WAIT_LISTEN = 0x8,WAIT_READ = 0x20,WAIT_WRITE = 0x40,WAIT_MASK = 0x6F,INTR_DCL = 0x100,INTR_IFC = 0x200,INTR_GET = 0x400,INTR_LISTEN = 0x800,INTR_TALK = 0x1000,INTR_SRQ = 0x2000,INTR_REN = 0x4000,INTR_CTLR = 0x8000,INTR_PPOLL = 0x10000,INTR_PPCC = 0x20000,INTR_EOI = 0x40000,INTR_SPAS = 0x80000,INTR_ERR = 0x200000,INTR_UUC = 0x400000,INTR_APT = 0x800000,INTR_UAC = 0x1000000,INTR_MAC = 0x2000000,INTR_MASK = 0x3FFFF00,};
enum MACRO_WORD_SIZE {WORD_SIZE = 4,WORD_SIZE_BITS = 32,MP_RENDEZ_FAILED = -2,MP_NOT_VALID = -1,};
enum MACRO_XCSUCCESS {XCSUCCESS = 0,XCNOMEM = 1,XCNOENT = 2,};
enum MACRO_XIM_CHECK {XIM_CHECK_VALID = 0,XIM_CHECK_INVALID = 1,XIM_CHECK_ERROR = 2,};
enum MACRO_XKB_FORCE {XKB_FORCE_INT_KEYSYM = 1,};
enum MACRO_XKMFORMAT {XKMFORMAT_H = 1,};
enum MACRO_XK_Arabic {XK_Arabic_comma = 0x5AC,XK_Arabic_semicolon = 0x5BB,XK_Arabic_question_mark = 0x5BF,XK_Arabic_hamza = 0x5C1,XK_Arabic_maddaonalef = 0x5C2,XK_Arabic_hamzaonalef = 0x5C3,XK_Arabic_hamzaonwaw = 0x5C4,XK_Arabic_hamzaunderalef = 0x5C5,XK_Arabic_hamzaonyeh = 0x5C6,XK_Arabic_alef = 0x5C7,XK_Arabic_beh = 0x5C8,XK_Arabic_tehmarbuta = 0x5C9,XK_Arabic_teh = 0x5CA,XK_Arabic_theh = 0x5CB,XK_Arabic_jeem = 0x5CC,XK_Arabic_hah = 0x5CD,XK_Arabic_khah = 0x5CE,XK_Arabic_dal = 0x5CF,XK_Arabic_thal = 0x5D0,XK_Arabic_ra = 0x5D1,XK_Arabic_zain = 0x5D2,XK_Arabic_seen = 0x5D3,XK_Arabic_sheen = 0x5D4,XK_Arabic_sad = 0x5D5,XK_Arabic_dad = 0x5D6,XK_Arabic_tah = 0x5D7,XK_Arabic_zah = 0x5D8,XK_Arabic_ain = 0x5D9,XK_Arabic_ghain = 0x5DA,XK_Arabic_tatweel = 0x5E0,XK_Arabic_feh = 0x5E1,XK_Arabic_qaf = 0x5E2,XK_Arabic_kaf = 0x5E3,XK_Arabic_lam = 0x5E4,XK_Arabic_meem = 0x5E5,XK_Arabic_noon = 0x5E6,XK_Arabic_ha = 0x5E7,};
enum MACRO_XK_Henkan {XK_Henkan = 0xFF23,XK_Romaji = 0xFF24,XK_Hiragana = 0xFF25,XK_Katakana = 0xFF26,XK_Hiragana_Katakana = 0xFF27,XK_Zenkaku = 0xFF28,XK_Hankaku = 0xFF29,XK_Zenkaku_Hankaku = 0xFF2A,XK_Touroku = 0xFF2B,XK_Massyo = 0xFF2C,XK_Kana_Lock = 0xFF2D,XK_Kana_Shift = 0xFF2E,XK_Eisu_Shift = 0xFF2F,XK_Eisu_toggle = 0xFF30,XK_Zen_Koho = 0xFF3D,XK_Mae_Koho = 0xFF3E,XK_Home = 0xFF50,XK_Left = 0xFF51,XK_Up = 0xFF52,XK_Right = 0xFF53,XK_Down = 0xFF54,XK_Prior = 0xFF55,};
enum MACRO_XK_hebrew {XK_hebrew_doublelowline = 0xCDF,XK_hebrew_aleph = 0xCE0,XK_hebrew_bet = 0xCE1,};
enum MACRO_XK_rcaron {XK_rcaron = 0x1F8,XK_uring = 0x1F9,XK_tcedilla = 0x1FE,XK_abovedot = 0x1FF,XK_Hstroke = 0x2A1,XK_Hcircumflex = 0x2A6,XK_Iabovedot = 0x2A9,XK_Gbreve = 0x2AB,XK_Jcircumflex = 0x2AC,XK_hstroke = 0x2B1,XK_hcircumflex = 0x2B6,XK_idotless = 0x2B9,XK_gbreve = 0x2BB,XK_jcircumflex = 0x2BC,XK_Cabovedot = 0x2C5,XK_Ccircumflex = 0x2C6,XK_Gabovedot = 0x2D5,XK_Gcircumflex = 0x2D8,XK_Ubreve = 0x2DD,XK_Scircumflex = 0x2DE,XK_cabovedot = 0x2E5,XK_ccircumflex = 0x2E6,XK_gabovedot = 0x2F5,XK_gcircumflex = 0x2F8,XK_ubreve = 0x2FD,XK_scircumflex = 0x2FE,XK_kra = 0x3A2,};
enum MACRO_XK_script {XK_script_switch = 0xFF7E,XK_Num_Lock = 0xFF7F,XK_KP_Space = 0xFF80,XK_KP_Tab = 0xFF89,XK_KP_Enter = 0xFF8D,XK_KP_F1 = 0xFF91,XK_KP_F2 = 0xFF92,XK_KP_F3 = 0xFF93,XK_KP_F4 = 0xFF94,XK_KP_Home = 0xFF95,XK_KP_Left = 0xFF96,XK_KP_Up = 0xFF97,XK_KP_Right = 0xFF98,XK_KP_Down = 0xFF99,XK_KP_Prior = 0xFF9A,};
enum MACRO_XPJobAttr {XPJobAttr = 1,XPDocAttr = 2,XPPageAttr = 3,XPPrinterAttr = 4,XPServerAttr = 5,XPMediumAttr = 6,XPFontAttr = 7,XPResAttr = 8,XPTransAttr = 9,XPDelAttr = 10,XPAuxSPkg = 11,XPAuxS = 12,XPFinishAttr = 13,XPOutputAttr = 14,XPImpAttr = 15,XPSchedAttr = 16,XPIntJobAttr = 17,XPIntDocAttr = 18,XPResConAttr = 19,};
enum MACRO_XPM_GRAY4 {XPM_GRAY4 = 3,XPM_GREY = 4,};
enum MACRO_XP_EVENTS {XP_EVENTS = 2,};
enum MACRO_XTI_DEBUG {XTI_DEBUG = 0x1,XTI_LINGER = 0x80,XTI_RCVBUF = 0x1002,XTI_RCVLOWAT = 0x1004,};
enum MACRO_XTestFAKE {XTestFAKE_ACK_NOT_NEEDED = 0,XTestFAKE_ACK_REQUEST = 1,};
enum MACRO_XmDEFAULT {XmDEFAULT_DARK_THRESHOLD = 20,XmDEFAULT_LIGHT_THRESHOLD = 93,};
enum MACRO_XmDELAYED {XmDELAYED_PIXMAP = 1,XmUNSPECIFIED = -1,};
enum MACRO_XmDYNAMIC {XmDYNAMIC_DEFAULT_TAB_GROUP = 255,XmINVALID_POSITION = -1,};
enum MACRO_XmINITIAL {XmINITIAL = 0,XmADDITION = 1,XmMODIFICATION = 2,};
enum MACRO_XmKEYCODE {XmKEYCODE_TAG_SIZE = 32,};
enum MACRO_XmVERSION {XmVERSION = 2,};
enum MACRO_XpmFormat {XpmFormat = 3,XpmVersion = 4,XpmRevision = 9,XpmIncludeVersion = 30409,};
enum MACRO_XpmVisual {XpmVisual = 1,XpmColormap = 2,XpmDepth = 4,XpmSize = 8,XpmHotspot = 16,XpmCharsPerPixel = 32,XpmColorSymbols = 64,XpmRgbFilename = 128,XpmInfos = 256,};
enum MACRO_YPMAXPEER {YPMAXPEER = 64,YPMAX_TRANSID = 100000000,};
enum MACRO_YPOLDPROC {YPOLDPROC_NULL = 0,YPOLDPROC_DOMAIN = 1,YPOLDPROC_DOMAIN_NONACK = 2,YPOLDPROC_MATCH = 3,YPOLDPROC_FIRST = 4,YPOLDPROC_NEXT = 5,YPOLDPROC_POLL = 6,YPOLDPROC_PUSH = 7,YPOLDPROC_PULL = 8,YPOLDPROC_GET = 9,};
enum MACRO_YPOLDVERS {YPOLDVERS = 1,};
enum MACRO__LC_MAGIC {_LC_MAGIC = 0x5F1,_LC_VERSION = 0x2,};
enum MACRO__LWP_COND {_LWP_COND_VALID = 5467,};
enum MACRO__POSIX2_C {_POSIX2_C_VERSION = 199209,};
enum MACRO__SC_XOPEN {_SC_XOPEN_VERSION = 2001,_SC_XBS5_ILP32_OFF32 = 2005,_SC_XBS5_ILP32_OFFBIG = 2006,_SC_XBS5_LP64_OFF64 = 2007,_SC_XBS5_LPBIG_OFFBIG = 2008,_SC_AES_OS_VERSION = 3000,_SC_PAGE_SIZE = 3001,_SC_ATEXIT_MAX = 3002,};
enum MACRO__WAITMASK {_WAITMASK = 23,WLOW2BYTES = 65535,};
enum MACRO__XmTraitP {_XmTraitP_H = 1,};
enum MACRO___PTHREAD {__PTHREAD_LIBRARY_VERSION_1 = 0x1,};
enum MACRO_hpXK_mute {hpXK_mute_acute = 0x100000A8,hpXK_mute_grave = 0x100000A9,hpXK_mute_asciicircum = 0x100000AA,hpXK_mute_diaeresis = 0x100000AB,hpXK_mute_asciitilde = 0x100000AC,hpXK_lira = 0x100000AF,hpXK_guilder = 0x100000BE,hpXK_Ydiaeresis = 0x100000EE,};
enum MACRO_sxDynamic {sxDynamic = 0,sxLocal = 1,sxRemote = 2,};
enum MACRO_sym_k_any {sym_k_any_value = 1,sym_k_bool_value = 2,sym_k_char_8_value = 3,sym_k_compound_string_value = 4,sym_k_float_value = 5,sym_k_integer_value = 6,sym_k_single_float_value = 7,sym_k_localized_string_value = 8,sym_k_wchar_string_value = 9,sym_k_horizontal_integer_value = 10,sym_k_vertical_integer_value = 11,sym_k_horizontal_float_value = 12,sym_k_vertical_float_value = 13,sym_k_argument_value = 14,sym_k_asciz_table_value = 15,sym_k_class_rec_name_value = 16,sym_k_color_value = 17,sym_k_color_table_value = 18,sym_k_font_value = 19,sym_k_font_table_value = 20,sym_k_icon_value = 21,sym_k_identifier_value = 22,sym_k_integer_table_value = 23,sym_k_keysym_value = 24,sym_k_pixmap_value = 25,sym_k_reason_value = 26,sym_k_rgb_value = 27,sym_k_string_table_value = 28,sym_k_trans_table_value = 29,sym_k_widget_ref_value = 30,sym_k_xbitmapfile_value = 31,sym_k_fontset_value = 32,sym_k_child_value = 33,};
enum MACRO_sym_k_max {sym_k_max_entry = 24,sym_m_private = 1,};
enum MACRO_sym_k_not {sym_k_not_processed = 0,sym_k_queued = 1,sym_k_emitted = 2,};
enum MACRO_sym_m_def {sym_m_def_in_progress = 64,sym_m_managed = 128,sym_m_obj_is_reference = 256,sym_m_forward_ref = 512,sym_m_validated = 1024,};
enum MACRO_sz_iceMsg {sz_iceMsg = 8,sz_iceErrorMsg = 16,};
enum MACRO_sz_xDepth {sz_xDepth = 8,sz_xVisualType = 24,sz_xWindowRoot = 40,};
enum MACRO_sz_xError {sz_xError = 32,};
enum MACRO_sz_xEvent {sz_xEvent = 32,};
enum MACRO_sz_xieReq {sz_xieReq = 4,sz_xieQueryImageExtensionReq = 8,sz_xieQueryImageExtensionReply = 32,};
enum MACRO_xieValAdd {xieValAdd = 1,xieValSub = 2,xieValSubRev = 3,xieValMul = 4,xieValDiv = 5,xieValDivRev = 6,xieValMin = 7,xieValMax = 8,xieValGamma = 9,};
enum MACRO_xieValExp {xieValExp = 1,xieValLn = 2,xieValLog2 = 3,xieValLog10 = 4,xieValSquare = 5,xieValSqrt = 6,};
typedef struct _ObjectClassPart ObjectClassPart;
typedef struct _OnTheSpotDataTW *OnTheSpotDataTW;
typedef struct psm_public_info PSM_PUBLIC_INFO;
typedef struct _AA6493CD7EB9CABEB52E2F9509D300F7 PropMotifWmInfo;
typedef struct _355FFBAADB08B4CAA5BBFAF829DED10A RECORD_EXTRANGE;
typedef struct _RectObjClassRec RectObjClassRec;
typedef struct _754E82352BACFD73AE933254C0FF8B10 SashCallDataRec;
typedef struct _4E230DA965C384CCE937FCE2A8CE1FCC SessionShellRec;
typedef struct _4D6CF402BE6604EF49AB6A1F1F900B99 SubstitutionRec;
typedef unsigned int Uil_status_type;
typedef struct _16CFC57C4AEAAC7816B638D66FDFD80A VendorShellPart;
typedef struct _WMShellClassRec WMShellClassRec;
typedef struct _2B6C772F9B0F9D5573534694AD1B578D XCirculateEvent;
typedef struct _CD460451436B92EA879ADEB542921FD3 XConfigureEvent;
typedef struct _43E2578F9B0C3A2B1F4F344D0EB9BECE XDeviceKeyEvent;
typedef struct _XIMFilter XFilterEventRec;
typedef struct _6BA9BAD34CD581FCA2A7610248080448 XFontSetExtents;
typedef unsigned int XIMPreeditState;
typedef struct _C793BDCA50E1B4A63C4D2E25C3A778F6 *XIMResourceList;
typedef struct _D1A99149F7DEF10F5C1917DF5D27BC53 XInputClassInfo;
typedef struct _64419251F3172C7227A52AC30EAD3C9D XModifierKeymap;
typedef struct _3AD473A9924D2058FA4FA6E47C9E79DE XRecordExtRange;
typedef struct _65CB4B56B993AF892F37749A62A14B51 XSelectionEvent;
typedef struct _346B3FD68C26438FA8B69D57DEBF0D40 XShmSegmentInfo;
typedef struct _BD178E0A39C9899E81B8A1C4DD464555 XSyncAlarmError;
typedef struct _E59953A36063650DE92A1957B98E4A1B XTestMotionInfo;
typedef struct _B91987CD365E539796DE78D87241D671 XValuatorStatus;
typedef unsigned int XcmsColorFormat;
typedef struct _XcmsFunctionSet XcmsFunctionSet;
typedef struct _XcmsPerScrnInfo XcmsPerScrnInfo;
typedef struct _BB89CE209BBC17F3F34A96F56602CE1C XdbeBufferError;
typedef struct _XimProtoIntrRec XimProtoIntrRec;
typedef struct _XkbAnyDoodad *XkbAnyDoodadPtr;
typedef struct _XkbAnyDoodad XkbAnyDoodadRec;
typedef struct _XkbClientMapRec *XkbClientMapPtr;
typedef struct _XkbClientMapRec XkbClientMapRec;
typedef struct _XkbCompatMapRec *XkbCompatMapPtr;
typedef struct _XkbCompatMapRec XkbCompatMapRec;
typedef struct _XkbIndicatorRec *XkbIndicatorPtr;
typedef struct _XkbIndicatorRec XkbIndicatorRec;
typedef struct _XkbPtrBtnAction XkbPtrBtnAction;
typedef struct _XkbServerMapRec *XkbServerMapPtr;
typedef struct _XkbServerMapRec XkbServerMapRec;
typedef struct _XlcResource *XlcResourceList;
typedef struct _XmClipWindowRec XmClipWindowRec;
typedef struct _XmCommandRec *XmCommandWidget;
typedef struct _XmContainerDataRec *XmContainerData;
typedef struct _XmContainerPart XmContainerPart;
typedef struct _XmDesktopRec *XmDesktopObject;
typedef struct _XmDragCursorRec XmDragCursorRec;
typedef struct _XmDragOverBlendRec *XmDragOverBlend;
typedef struct __XmRenditionRec **XmFontListEntry;
typedef struct _XmFormClassPart XmFormClassPart;
typedef struct _XmFrameClassRec XmFrameClassRec;
typedef struct _300684C4BCC789212D7EC604FBF8B546 XmGrabShellPart;
typedef struct _XmIconGadgetRec XmIconGadgetRec;
typedef struct _XmIconHeaderRec XmIconHeaderRec;
typedef unsigned char XmIncludeStatus;
typedef struct _XmJoinSideTraitRec *XmJoinSideTrait;
typedef struct _XmKeyBindingRec XmKeyBindingRec;
typedef struct _XmLabelClassRec XmLabelClassRec;
typedef struct _XmListClassPart XmListClassPart;
typedef struct _XmMainWindowRec XmMainWindowRec;
typedef struct _XmManagerRec *XmManagerWidget;
typedef struct _35F7AFD9D1446B17D2F88B556DE97ABC XmMenuShellPart;
typedef struct _XmMessageBoxRec XmMessageBoxRec;
typedef struct _XmNavigatorDataRec *XmNavigatorData;
typedef struct _XmPrimitivePart XmPrimitivePart;
typedef struct _XmPrintShellRec XmPrintShellRec;
typedef struct _XmPushButtonRec XmPushButtonRec;
typedef struct _XmRCKidGeometryRec *XmRCKidGeometry;
typedef struct _XmReplayInfoRec XmReplayInfoRec;
typedef struct _XmRowColumnPart XmRowColumnPart;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmSashClassPart;
typedef struct _XmScaleClassRec XmScaleClassRec;
typedef struct _94F528D68A4C572CDF725B1D8F1779AC *XmScreenPartPtr;
typedef struct _XmScrollBarPart XmScrollBarPart;
typedef struct _XmSeparatorPart XmSeparatorPart;
typedef struct _XmSimpleMenuRec XmSimpleMenuRec;
typedef struct _XmSourceDataRec XmSourceDataRec;
typedef struct _XmSpinBoxRec *XmSpinBoxWidget;
typedef char *XmStringCharSet;
typedef struct __XmStringContextRec *XmStringContext;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F XmTextClassPart;
typedef struct _XmTextFieldPart XmTextFieldPart;
typedef struct _XmTextLineTableRec *XmTextLineTable;
typedef struct _XmTextSourceRec XmTextSourceRec;
typedef struct _E2032B46AD056E419D159E4C80280834 *XmTextVerifyPtr;
typedef struct _XmTransferTraitRec *XmTransferTrait;
typedef struct _XmVirtualKeysymRec *XmVirtualKeysym;
typedef struct _XmWidgetExtDataRec *XmWidgetExtData;
typedef struct _82207ABABC4EB421AD27F9EAB2AF6BD5 XmbufBufferInfo;
typedef struct _9C4E191A23082E8382C3082F6BDAC149 *XrmResourceList;
typedef struct _7D1B644A0EEA2B09DD88F0E6B7E788D2 XtConvertArgRec;
enum _KI_DEFINITIONS {KI_MAXPATH = 0x100,KI_MINTIMEOUT = 0xA,KI_MIN_TBSZ = 0x4000,KI_MAX_TBSZ = 0x200000,KI_MAX_LMEM_TBSZ = 0x400000,KI_MIN_CTSZ = 0x4,KI_MAX_CTSZ = 0x200000,KI_MAX_TRACE_REC = 0x100,};
typedef struct _BDF903C03D0CED00076182B436D02DEE _LC_core_resp_t;
typedef struct _67AB776A05D682900D1C01B50C60E7EB _LC_core_time_t;
struct _XkbCtrlsAction {unsigned char type;unsigned char flags;unsigned char ctrls3;unsigned char ctrls2;unsigned char ctrls1;unsigned char ctrls0;};
struct _XkbGroupAction {unsigned char type;unsigned char flags;char group_XXX;};
struct _XkbKbdDpyState;
struct _XkbNameChanges {unsigned int changed;unsigned char first_type;unsigned char num_types;unsigned char first_lvl;unsigned char num_lvls;unsigned char num_aliases;unsigned char num_rg;unsigned char first_key;unsigned char num_keys;unsigned short changed_vmods;unsigned int changed_indicators;unsigned char changed_groups;};
typedef struct _7DBE86895C9FAEA11C6FA571DFE5C5A7 _XmHighlightRec;
typedef struct _3AFF259FB5915F31DE3264913FDD68F1 _XmInsertSelect;
typedef struct _EC6FB11E4AF80479E38BABE612883A95 __async_request;
enum __nsw_parse_err {__NSW_CONF_PARSE_SUCCESS = 0x0,__NSW_CONF_PARSE_NOFILE = 0x1,__NSW_CONF_PARSE_NOPOLICY = 0x2,__NSW_CONF_PARSE_SYSERR = 0x3,};
struct __reserved_str1 {int __reserved;};
struct __reserved_str2 {int __reserved;};
struct _feature_data_t {unsigned int constant;};
struct audio_beep_type {unsigned int type;unsigned int datalen;unsigned char *data;unsigned int returnlen;unsigned int repeat_count;unsigned int sample_rate;unsigned int nchannels;unsigned int spare;};
struct audio_meter_ctl {unsigned short receive_meter_state;unsigned short spare2[3];unsigned short transmit_meter_state;unsigned short spare1[7];};
typedef struct _6D3C85AC6D83151282A45A4C6F921D54 bind_reply_type;
typedef struct _101E059DA351EB649268BB07F6C1B328 cps_wait_attr_t;
typedef struct _028518915F7D7896123D89340F2F38F2 dap_status_type;
typedef struct _A3DAFC5B3B146A9587C3AC2DA81B7610 diag_event_type;
typedef struct _BBE251C902F5B1253853EC586FC56F1D diag_reply_type;
typedef struct _7BF2DDE055D8F1EE7B3AFF0D2575C61C dl_attach_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_detach_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_ok_snap_t;
typedef struct _101576DA344DBD97547D314B31F9E1E3 dl_hp_ppa_ack_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_hp_ppa_req_t;
typedef struct _52EBF4196BFF6EA182C0B53510983968 dl_resilience_t;
typedef struct _0490652D71022E8A5FAA6A6EE2F3573E dl_transdelay_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_unbind_req_t;
typedef struct _5546CF314AB66BC0C9A48B86C8E58389 dm_io_func_type;
struct dmem_viper_type {unsigned int status;unsigned int data_zero;unsigned int data_one;unsigned int check_byte;unsigned int error_addr;};
struct excal_tape_info {unsigned char msg_len;unsigned char media_loaded_flag;unsigned char media_protect_flag;unsigned char cartridge_code;unsigned char cartridge_format;unsigned char compress_code;unsigned char compress_algorithm;unsigned char EORD_known_flag;unsigned char EORD_host_addr[4];unsigned char EORD_addr[4];unsigned char DABS_extent[4];};
typedef struct filter_rec filter_rec_type;
struct floppy_geometry {unsigned int heads;unsigned int tracks;unsigned int sectors;unsigned int sector_size;unsigned int transfer_rate;unsigned int track_density;unsigned int data_encoding;};
typedef struct _BCAE7384F079FDFA9DD5F4EFBAB29817 iceAuthReplyMsg;
typedef struct _694E7AF0BC9EE95CDB6E54249E923D7E iceByteOrderMsg;
typedef struct _16E1D217A39631E87E4135AB759C85E6 init_media_type;
struct inode__i_select {struct inode__i_select__proc *i_selp;short i_selflag;};
typedef struct _7D99224004BCC92994234E51C52C480E int_direct_type;
typedef struct _FB09744F3EA0A83ECD6BAFF51404F8F8 io_message_type;
typedef union _465FCB570093E3F643B603A6D3E8A1C4 iodc_entry_type;
typedef struct kd_queuedone2 kd_queuedone2_t;
typedef struct kd_smount_vfs kd_smount_vfs_t;
typedef struct kd_umount_vfs kd_umount_vfs_t;
typedef struct _94BA1CF8E02B3DD63AEB474E08D83A67 lock_reply_type;
typedef struct _8AC18927BC3D48B2E1E053A2B1E052A9 mode_sense_type;
typedef struct _B7894D5E06F906915DCF2ADD1982514B mt7970_req_type;
typedef struct _DD029A274B36A4E7FC38BFCAA6413DF4 mt_message_type;
struct nd_hostservlist {int h_cnt;struct nd_hostservlist__nd_hostserv *h_hostservs;};
enum nispasswd_field {NPD_PASSWD = 0x0,NPD_GECOS = 0x1,NPD_SHELL = 0x2,NPD_SECRETKEY = 0x3,};
typedef struct __omp_nest_lock *omp_nest_lock_t;
typedef struct _physical_info_t physical_info_t;
typedef struct pthread_mutex pthread_mutex_t;
struct rdb_comm_area_t {int rdb_version;int executing_flag;int single_step_flag;int cpu_state_change_flag;struct rdb_comm_area_t__MP_info *MP_info_addr;};
typedef struct _7BE28D0082C4485E6C4D391E690D11AD scsi_abort_type;
typedef struct _87DD1086F3DEF3641D7A72FDF168671B scsi_event_type;
typedef struct _2ABA9BEBDC7EA73331E3BF8D3E5C1422 scsi_reply_type;
struct sense_2_aligned {unsigned int error_code;unsigned char seg_num;unsigned int key;unsigned char info[4];unsigned char add_len;unsigned char cmd_info[4];unsigned char code;unsigned char qualifier;unsigned char fru;unsigned char key_specific[3];unsigned char add_sense_bytes[113];};
typedef struct _B0E46AD18445ECFB72CED3D5FBF58205 set_option_type;
typedef struct siglocal_misc siglocal_misc_t;
typedef struct _E8AA4611E972A29EE9197C1243BE1805 sio_port_info_t;
struct sioc_bus_limits {unsigned int flags;unsigned int max_width;unsigned int max_xfer_rate;unsigned int max_reqack_offset;unsigned int reserved[4];};
struct sioc_lun_limits {unsigned int flags;unsigned int max_q_depth;unsigned int reserved[4];};
struct sioc_tgt_limits {unsigned int flags;unsigned int max_width;unsigned int max_xfer_rate;unsigned int max_reqack_offset;unsigned int reserved[4];};
typedef struct _3C2538FA24E756F47BA82769645E5270 status_req_type;
struct tls_init_record {int index;unsigned int tls_size;unsigned int tls_offset;unsigned int tls_init_ptr;unsigned int tls_init_sz;struct tls_init_record *next;unsigned int reserved;};
typedef struct _F4538060D71DD562A33D9EF68435D712 ttsignal_data_t;
typedef struct _9945DF4177DE84DA9B1E97E9EA74E45D ttthread_data_t;
typedef struct _A33417F0A315FD178FB7057BD253B71F unbind_req_type;
typedef struct _3C2538FA24E756F47BA82769645E5270 unlock_req_type;
typedef int  vfs_mountroot_t(struct vfs *, int);
typedef struct _F3EFAA27463B93CC96181BFE5F29A4C5 xAllowEventsReq;
typedef struct _FB619B5CE8E6B82A3D0938CCE57F62CA xChangeHostsReq;
typedef struct _8973D72E68A3D7427BDE924AB847E810 xCloseDeviceReq;
typedef struct _625DD72E42D2E4120693244DFAAD3348 xDPMSCapableReq;
typedef struct _625DD72E42D2E4120693244DFAAD3348 xDPMSDisableReq;
typedef struct _F0BD037E525ACFEA0C1F272EFA8FD580 xGetPropertyReq;
typedef struct _79FC17A0C7A3F31E1105D33CC8C2AA30 xGrabPointerReq;
typedef struct _BFA06AD98FBBDDEDC0B582E2B4AC4030 xHPGrabResetReq;
typedef struct _24B457447694156ACAE248300D57FA49 xInputClassInfo;
typedef struct _1BAE1FE6DB6FC78B3C7B94C189E05017 xKbdFeedbackCtl;
typedef struct _95FA76242027CA03F9C53902C97D80C2 xLedFeedbackCtl;
typedef struct _57642C20A930BC40CC56BFA51EFC45F8 xListFontsReply;
typedef struct _EF54914952AB89C7E0EBAF949772487D xListHostsReply;
typedef struct _4E2DFB9F6290197309D31FB10928FA58 xLookupColorReq;
typedef struct _77B5DA89F8222E8D6D7C1ABF47542A30 xPolySegmentReq;
typedef struct _PrintEndDoc xPrintEndDocReq;
typedef struct _PrintEndJob xPrintEndJobReq;
typedef struct _08E7BB45AF45164209AD32D6030ECBA7 xPtrFeedbackCtl;
typedef struct _7905F1106D6192C786F48B3D63EB8F32 xQueryColorsReq;
typedef struct _xQueryFontReply xQueryFontReply;
typedef struct _DDAC1D07D44FFC2E5C65864F60CCE1DF xQueryTreeReply;
typedef struct _069CA722659D31B5E21E1ACEADA10473 xSetFontPathReq;
typedef struct _7905F1106D6192C786F48B3D63EB8F32 xStoreColorsReq;
typedef struct _F52D9FC92091A8183F87E95DDBDC622D xWarpPointerReq;
typedef struct _26E851949BDE2473590BDE12DE36451F xieCreateLUTReq;
typedef struct _5E04D711070F28523D4888D880E8635D xieCreateROIReq;
typedef struct _9CB99F55F4760567A5B7FA05D1482C33 xieFloAccessErr;
typedef struct _75A587EC71D839727FF00E499DB42A24 xieFloConstrain;
typedef struct _13C5E316447D80627E30BA16FBD8BA91 xieFloDomainErr;
typedef struct _43F413DFE76D84785171E4F932967C4F xieFloExportLUT;
typedef struct _2D0C20B301ADA5F52D6F367B663BBC22 xieFloExportROI;
typedef struct _E62B5AAF61A421D071E8F87B1ACD88C8 xieFloImportLUT;
typedef struct _3D4A26743286481CAEF9451FC80F9AE7 xieFloImportROI;
typedef struct _9CB99F55F4760567A5B7FA05D1482C33 xieFloLengthErr;
typedef struct _9CB99F55F4760567A5B7FA05D1482C33 xieFloSourceErr;
typedef struct _59351FDCD0841299E6F657798DC5AE28 xieTecClipScale;
typedef struct _39DC38FE6F9D9CB7A4182EA2E1F19530 xieTypRectangle;
typedef struct _xkbModsWireDesc xkbModsWireDesc;
typedef struct _xkbSendEvent xkbSendEventReq;
typedef struct _xkmBehaviorDesc xkmBehaviorDesc;
enum ypbind_resptype {YPBIND_SUCC_VAL = 0x1,YPBIND_FAIL_VAL = 0x2,};
typedef unsigned int AdjCR16Count_t;
typedef int AdjCR16Delta_t;
typedef int AdjuSecDelta_t;
typedef struct _bus_trans_desc BUS_TRANS_DESC;
typedef struct _ConstraintPart ConstraintPart;
typedef struct _EdgeTableEntry EdgeTableEntry;
struct HPPAC_INFO_REC {unsigned int HPPAC_instruction;unsigned int HPPAC_offset;unsigned int HPPAC_space_id;unsigned int HPPAC_error_code;unsigned int HPPAC_subcode;unsigned int HPPAC_operation;void *HPPAC_operand1_ptr;int HPPAC_operand1_leng;void *HPPAC_operand2_ptr;int HPPAC_operand2_leng;int *HPPAC_cc_ptr;int *HPPAC_status_ptr;int *HPPAC_carry_ptr;int HPPAC_sign_control;int HPPAC_shift_amount;int *HPPAC_shift_amt_ptr;};
struct Ki_nfsvarlen_t {short len;short offset;};
typedef struct _LineTableExtraRec *LineTableExtra;
enum MACRO_ADDR_ALL {ADDR_ALL = 0,ADDR_DBE = 1,PAGE_ALL = 2,PAGE_DBE = 3,};
enum MACRO_AREGTYPE {AREGTYPE = 0,LNKTYPE = 49,SYMTYPE = 50,CHRTYPE = 51,BLKTYPE = 52,DIRTYPE = 53,FIFOTYPE = 54,CONTTYPE = 55,TSUID = 2048,};
enum MACRO_AUDIO_ID {AUDIO_ID_PSB2160 = 1,AUDIO_ID_CS4215 = 2,AUDIO_ID_AD1819 = 3,AUDIO_ID_PCI128 = 4,AUDIO_ID_FM801 = 5,};
enum MACRO_AUDIO_IN {AUDIO_IN_NONE = 0x0,AUDIO_IN_MIKE = 0x1,AUDIO_IN_LINE = 0x2,AUDIO_IN_CD = 0x4,AUDIO_IN_STEREO_MIX = 0x8,AUDIO_IN_MONO_MIX = 0x10,};
enum MACRO_AUD_PROC {AUD_PROC = 1,AUD_CLEAR = 0,};
enum MACRO_AUTH_DEV {AUTH_DEV_PRINTER = 0,AUTH_DEV_TERMINAL = 1,AUTH_DEV_TAPE = 2,AUTH_DEV_REMOTE = 3,};
enum MACRO_AUTH_MAX {AUTH_MAX_PASSWD_LENGTH = 80,AUTH_SALT_SIZE = 2,};
enum MACRO_AUTH_SYS {AUTH_SYS = 1,};
enum MACRO_AUTH_TOD {AUTH_TOD_SIZE = 50,};
enum MACRO_ArcChord {ArcChord = 0,ArcPieSlice = 1,};
enum MACRO_BC_LOWER {BC_LOWER_PORT = 0x8,CORE_LASI_BA = 0x16,};
enum MACRO_BC_POWER {BC_POWER_LOST_MASK = 0x2,BC_POWER_FAIL_MASK = 0x5,BC_SEVERE_ERROR_MASK = 0x180,};
enum MACRO_BIOPCODE {BIOPCODE = 0,};
enum MACRO_BP_NULLP {BP_NULLP = 0,};
enum MACRO_BYTE_RTN {BYTE_RTN = 0xFF,};
enum MACRO_CDISCARD {CDISCARD = 0xF,CWERASE = 0x17,};
enum MACRO_CDLOCKED {CDLOCKED = 0x1,CDMOUNT = 0x8,CDWANT = 0x10,CDREF = 0x400,CDDUXMNT = 0x40000,CDDUXMRT = 0x100000,CDBUFVALID = 0x200000,CDPAGEVALID = 0x400000,CDOPEN = 0x800000,};
enum MACRO_CHANNEL0 {CHANNEL0_TC = 0x1,CHANNEL1_TC = 0x2,CHANNEL2_TC = 0x4,CHANNEL3_TC = 0x8,CHANNEL0_REQUEST = 0x10,CHANNEL1_REQUEST = 0x20,CHANNEL2_REQUEST = 0x40,CHANNEL3_REQUEST = 0x80,};
enum MACRO_CHANNEL4 {CHANNEL4_TC = 0x1,CHANNEL5_TC = 0x2,CHANNEL6_TC = 0x4,CHANNEL7_TC = 0x8,CHANNEL4_REQUEST = 0x10,CHANNEL5_REQUEST = 0x20,CHANNEL6_REQUEST = 0x40,CHANNEL7_REQUEST = 0x80,};
enum MACRO_CIO_BIND {CIO_BIND_REPLY_FAILURE = -7,};
enum MACRO_CIO_LVL1 {CIO_LVL1_CARD = 107,CIO_DO_BIND_PROC = 16,};
enum MACRO_CIO_MERR {CIO_MERR_DEPEND_CODE = -80,};
enum MACRO_CIO_RCVD {CIO_RCVD_SPURIOUS_TIMER_MSG = 46,CIO_CONTROL_FUNCTION_ILLEGAL = -47,};
enum MACRO_CIO_SUBC {CIO_SUBC_CMD_DSC = 0x0,CIO_SUBC_CMD_AEK = 0x10,CIO_SUBC_CMD_CSC = 0x20,CIO_SUBC_CMD_RSC = 0x40,CIO_SUBC_CMD_ETA = 0x50,};
enum MACRO_CKPTFILL {CKPTFILL = 37,};
enum MACRO_CKPTSIZE {CKPTSIZE = 128,};
enum MACRO_CMD_DATA {CMD_DATA_IN = 1,CMD_DATA_OUT = 2,CMD_NO_DATA = 3,MSG_OUT = 4,};
enum MACRO_CMD_IRQ0 {CMD_IRQ0 = 0x0,CMD_IRQ1 = 0x1,CMD_IRQ2 = 0x2,CMD_IRQ3 = 0x3,CMD_IRQ4 = 0x4,CMD_IRQ5 = 0x5,CMD_IRQ6 = 0x6,CMD_IRQ7 = 0x7,};
enum MACRO_CMD_IRQ8 {CMD_IRQ8 = 0x0,CMD_IRQ9 = 0x1,CMD_IRQ10 = 0x2,CMD_IRQ11 = 0x3,CMD_IRQ12 = 0x4,CMD_IRQ13 = 0x5,CMD_IRQ14 = 0x6,CMD_IRQ15 = 0x7,NS_EOI = 0x20,SP_EOI = 0x60,};
enum MACRO_CMD_STOP {CMD_STOP = 0,CMD_FLUSH = 1,CMD_CHAIN = 2,};
enum MACRO_CMDread6 {CMDread6 = 0x8,CMDwrite = 0xA,};
enum MACRO_CMDsense {CMDsense_cartridge = 0xCA,CMDselect_cartridge_fujitsu = 0xCB,};
enum MACRO_CMDspace {CMDspace_record = 0x0,CMDspace_seq_file = 0x2,};
enum MACRO_CMDwrite {CMDwrite_buf = 0x3B,};
enum MACRO_CMP_3480 {CMP_3480_4781 = 0x1,};
enum MACRO_CMP_3590 {CMP_3590 = 0x1,};
enum MACRO_CMP_9490 {CMP_9490 = 0x1,};
enum MACRO_CMP_9840 {CMP_9840 = 0x1,};
enum MACRO_CNTMVCMD {CNTMVCMD = -6,};
enum MACRO_CNX_MACH {CNX_MACH_SPP2000 = 3,};
enum MACRO_COMBINED {COMBINED_MODE = 0x4,};
enum MACRO_COMPRESS {COMPRESS_MAX = 0xFFFFFFFF,};
enum MACRO_COREFILE {COREFILE = 0,COREDIR = 1,CRASHDIR = 2,SPPADIR = 3,};
enum MACRO_CPS_NODE {CPS_NODE_PARALLEL = 2,CPS_OVER_SUBSCRIBE = 4,CPS_IGNORE_STACKSCOPE = 8,};
enum MACRO_CPU_IDLE {CPU_IDLE = 0,CPU_USER = 1,CPU_KERNEL = 2,CPU_WAIT = 3,CPU_SXBRK = 4,};
enum MACRO_CPU_M720 {CPU_M720 = 0x200,CPU_M7LC = 0x604,CPU_M715_D = 0x60A,CPU_M715_E = 0x60B,CPU_M715_F = 0x60C,CPU_M715_G = 0x619,};
enum MACRO_CPU_M725 {CPU_M725_C = 0x60D,CPU_M725_D = 0x60E,};
enum MACRO_CPU_M808 {CPU_M808 = 0x103,};
enum MACRO_CPU_M810 {CPU_M810 = 0x100,CPU_M815 = 0x103,};
enum MACRO_CPU_M822 {CPU_M822 = 0x101,CPU_M825 = 0x8,};
enum MACRO_CPU_M832 {CPU_M832 = 0x102,};
enum MACRO_CPU_M834 {CPU_M834 = 0xA,};
enum MACRO_CPU_M835 {CPU_M835 = 0xA,};
enum MACRO_CPU_M836 {CPU_M836 = 0xA,CPU_M840 = 0x4,};
enum MACRO_CPU_M842 {CPU_M842 = 0x104,};
enum MACRO_CPU_M843 {CPU_M843 = 0x104,CPU_M844 = 0xB,};
enum MACRO_CPU_M845 {CPU_M845 = 0xB,};
enum MACRO_CPU_M846 {CPU_M846 = 0xB,CPU_M850 = 0x80,};
enum MACRO_CPU_M850 {CPU_M850_OPDC = 0xC,CPU_M852 = 0x105,};
enum MACRO_CPU_M853 {CPU_M853 = 0x105,};
enum MACRO_CPU_M855 {CPU_M855 = 0x81,CPU_M860 = 0x82,CPU_M870 = 0x83,CPU_JADE = 0x184,CPU_MV2200 = 0x597,CPU_MV2500 = 0x5B4,CPU_N4000_36 = 0x5BE,CPU_N4000_44 = 0x5CC,};
enum MACRO_CS80_CMD {CS80_CMD_BUFFER_ERROR = -90,};
enum MACRO_CS80_DRP {CS80_DRP_TO = -100,};
enum MACRO_CS80_REP {CS80_REP_TO = -97,};
enum MACRO_CS80_REQ {CS80_REQ_LENGTH = 6,CS80_FCODE = 64,};
enum MACRO_DAM_INIT {DAM_INIT = 0,DAM_PRE_INIT = -1,};
enum MACRO_DAM_POST {DAM_POST_CREATE = 0,DAM_NORMAL = 1,DA_INIT = 2,};
enum MACRO_DAP_FUNC {DAP_FUNC_IDX = 0,TIMEOUT_IDX = 1,};
enum MACRO_DATA_OUT {DATA_OUT_PHASE = 0x0,DATA_IN_PHASE = 0x1,CMD_PHASE = 0x2,STATUS_PHASE = 0x3,MESG_OUT_PHASE = 0x6,MESG_IN_PHASE = 0x7,};
enum MACRO_DA_FCODE {DA_FCODE_UNIMP = -30,};
enum MACRO_DA_PPOLL {DA_PPOLL_INT_ENABLED = -39,};
enum MACRO_DBL_MANT {DBL_MANT_DIG = 53,};
enum MACRO_DC300XLP {DC300XLP = 0x2,DC600A = 0x4,};
enum MACRO_DC600XTD {DC600XTD = 0x4,};
enum MACRO_DEFAULT2 {DEFAULT_HEIGHT = 20,};
enum MACRO_DELIVERY {DELIVERY_SIGNALS = 1,};
enum MACRO_DEN_3480 {DEN_3480 = 0x9,DEN_9490 = 0x28,DEN_SD_3 = 0x2B,DEN_9840 = 0x42,};
enum MACRO_DEN_3590 {DEN_3590 = 0x29,DEN_QIC_11 = 0x4,};
enum MACRO_DEN_DDS1 {DEN_DDS1 = 0x13,DEN_DDS2 = 0x24,DEN_DDS3 = 0x25,DEN_DDS4 = 0x26,};
enum MACRO_DESCRIBE {DESCRIBE_TO = 2,DESCRIBE_RETRY = 3,DEVICE_NUM = 6,CS80_STATUS_LEN = 20,};
enum MACRO_DEV_8023 {DEV_8023 = 0x0,DEV_8024 = 0x1,DEV_8025 = 0x2,DEV_8026 = 0x3,DEV_ETHER = 0x4,DEV_HDLC = 0x5,DEV_CHAR = 0x6,DEV_CTCA = 0x7,DEV_FDDI = 0x8,DEV_OTHER = 0x9,DEV_FC = 0x10,DEV_ATM = 0x11,DEV_IPATM = 0x12,DEV_X25 = 0x13,DEV_ISDN = 0x14,DEV_HIPPI = 0x15,DEV_100VG = 0x16,DEV_100VGTPR = 0x17,DEV_ETH_CSMA = 0x18,DEV_100BT = 0x19,};
enum MACRO_DF_CLASS {DF_CLASS = 0,DF_KIND = 0,};
enum MACRO_DF_TRACE {DF_TRACE_LEN = -2,DF_NAME_LIST = 0,};
enum MACRO_DH1_DIAG {DH1_DIAG_UNEXPLAIN = 0x1000,DH1_DIAG_SHZM = 0x800,DH1_DIAG_GET = 0x400,DH1_DIAG_IFC = 0x200,DH1_DIAG_PARITY = 0x100,DH1_DIAG_STAT_CHNG = 0x80,DH1_DIAG_HNDSHK_ABORT = 0x40,DH1_DIAG_PPOLL = 0x20,DH1_DIAG_SRQ = 0x10,DH1_DIAG_OUT_AVL = 0x8,DH1_DIAG_IN_AVL = 0x4,DH1_DIAG_FIFO_IDL = 0x2,DH1_DIAG_DCL = 0x1,};
enum MACRO_DH_TABLE {DH_TABLE_TOO_BIG = 1,DH_INCOMPLETE_DUMP = 2,DH_DUMP_SAVED = 4,DH_BACKUP_HEADER = 8,DM_UNUSED = -1,};
enum MACRO_DIAG_BUF {DIAG_BUF_FULL = -61,};
enum MACRO_DIAG_GET {DIAG_GET = 0x400,DIAG_IFC = 0x200,DIAG_PARITY = 0x100,DIAG_STAT_CHNG = 0x80,DIAG_HNDSHK_ABORT = 0x40,DIAG_PPOLL = 0x20,DIAG_SRQ = 0x10,DIAG_OUT_AVL = 0x8,DIAG_IN_AVL = 0x4,DIAG_FIFO_IDL = 0x2,DIAG_DCL = 0x1,};
enum MACRO_DIAG_MAX {DIAG_MAX_TAG = 10,};
enum MACRO_DIAG_MIN {DIAG_MIN_TAG = 3,DIAG_BASE_TAG = 0,};
enum MACRO_DIAG_MSA {DIAG_MSA_READ = -63,};
enum MACRO_DIAG_NOT {DIAG_NOT_ADDR = -64,};
enum MACRO_DIRSIZ_0 {DIRSIZ = 14,};
enum MACRO_DISASTER {DISASTER = 0x8,NETMSG = 0x10,ALL_CLASS_BITS = 0x1F,};
enum MACRO_DLT_TAPE {DLT_TAPE_II = 0x82,DLT_TAPE_III = 0x83,DLT_TAPE_III_XT = 0x84,DLT_TAPE_IV = 0x85,SDLT_TAPE_I = 0x86,};
enum MACRO_DL_CODLS {DL_CODLS = 0x1,DL_CLDLS = 0x2,DL_ACLDLS = 0x4,DL_STYLE1 = 0x500,DL_STYLE2 = 0x501,DL_PROVIDER = 0x700,DL_USER = 0x701,DL_CONREJ_DEST_UNKNOWN = 0x800,DL_CONREJ_DEST_UNREACH_PERMANENT = 0x801,DL_CONREJ_DEST_UNREACH_TRANSIENT = 0x802,DL_CONREJ_QOS_UNAVAIL_PERMANENT = 0x803,DL_CONREJ_QOS_UNAVAIL_TRANSIENT = 0x804,DL_CONREJ_PERMANENT_COND = 0x805,DL_CONREJ_TRANSIENT_COND = 0x806,DL_DISC_ABNORMAL_CONDITION = 0x807,DL_DISC_NORMAL_CONDITION = 0x808,DL_DISC_PERMANENT_CONDITION = 0x809,DL_DISC_TRANSIENT_CONDITION = 0x80A,DL_DISC_UNSPECIFIED = 0x80B,DL_RESET_FLOW_CONTROL = 0x900,DL_RESET_LINK_ERROR = 0x901,DL_RESET_RESYNCH = 0x902,};
enum MACRO_DL_ERROR {DL_ERROR_ACK = 0x5,DL_SUBS_BIND_REQ = 0x1B,DL_SUBS_BIND_ACK = 0x1C,};
enum MACRO_DL_HP_HW {DL_HP_HW_RESET_REQ = 0xE8,};
enum MACRO_DMA_SIZE {DMA_SIZE_MASK = 0xC,DMA_SIZE_BYTE = 0x0,};
enum MACRO_DvString {DvString = 1,};
enum MACRO_EF_IA_64 {EF_IA_64_MASKOS = 0xFF000F,};
enum MACRO_EISA1_MG {EISA1_MG_REG_BASE_OFFSET = 0x10000,EISA1_MG_REG_BASE = 0xFC010000,};
enum MACRO_EISA_INT {EISA_INT_LINE = 21,EISA_INT_MASK = 1024,};
enum MACRO_EISA_NMI {EISA_NMI_INT_LINE = 31,};
enum MACRO_EISA_REG {EISA_REG_PAGE = 0xFFF,EISA_MAXPHYS = 0x400000,};
enum MACRO_ELAB_REF {ELAB_REF = 0x1,};
enum MACRO_ELFOSABI {ELFOSABI_NONE = 0,ELFOSABI_HPUX = 1,ELFOSABI_STANDALONE = 255,};
enum MACRO_ENDCHAIN {ENDCHAIN = 1,};
enum MACRO_ENOERROR {ENOERROR = 0,};
enum MACRO_ENOTSOCK {ENOTSOCK = 216,EDESTADDRREQ = 217,EMSGSIZE = 218,EPROTOTYPE = 219,ENOPROTOOPT = 220,EPROTONOSUPPORT = 221,EOPNOTSUPP = 223,EAFNOSUPPORT = 225,EADDRINUSE = 226,EADDRNOTAVAIL = 227,ENETDOWN = 228,ENETUNREACH = 229,ECONNABORTED = 231,ECONNRESET = 232,ENOBUFS = 233,EISCONN = 234,ENOTCONN = 235,ETIMEDOUT = 238,ECONNREFUSED = 239,EHOSTUNREACH = 242,EALREADY = 244,EINPROGRESS = 245,EWOULDBLOCK = 246,};
enum MACRO_ENTRY_IN {ENTRY_IN_USE = 1,};
enum MACRO_ERRORCNT {ERRORCNT = 0x30080,};
enum MACRO_ERRORNUM {ERRORNUM = 11,PACKETSIZE = 17,};
enum MACRO_ETHERMIN {ETHERMIN = 46,};
enum MACRO_ETHERMTU {ETHERMTU = 1500,};
enum MACRO_EXCAL_UV {EXCAL_UV_REC = 14,};
enum MACRO_EXTENDED {EXTENDED_ERR_LOGGING = 0x8,};
enum MACRO_EXTERNAL {EXTERNAL_INT_LINE = 10,EXTERNAL_INT_MASK = 2097152,ASP_LEVEL_6_INTS = 2114561,};
enum MACRO_EX_USAGE {EX_USAGE = 64,EX_DATAERR = 65,EX_NOINPUT = 66,EX_NOUSER = 67,EX_NOHOST = 68,EX_UNAVAILABLE = 69,EX_SOFTWARE = 70,EX_OSERR = 71,EX_OSFILE = 72,EX_CANTCREAT = 73,EX_IOERR = 74,EX_TEMPFAIL = 75,EX_PROTOCOL = 76,EX_NOPERM = 77,};
enum MACRO_FBLKSEEK {FBLKSEEK = 64,O_LARGEFILE = 2048,};
enum MACRO_FCMD_MFM {FCMD_MFM = 0x40,FCMD_SKIP = 0x20,FCMD_GOOD = 0x0,};
enum MACRO_FCMD_SR0 {FCMD_SR0_US_MASK = 0x3,FCMD_SR0_HS = 0x4,FCMD_SR0_NR = 0x8,FCMD_SR0_EC = 0x10,FCMD_SR0_SE = 0x20,FCMD_SR0_IC_MASK = 0xC0,};
enum MACRO_FCMD_SR1 {FCMD_SR1_MA = 0x1,FCMD_SR1_NW = 0x2,FCMD_SR1_ND = 0x4,FCMD_SR1_OR = 0x10,FCMD_SR1_DE = 0x20,FCMD_SR1_EN = 0x80,};
enum MACRO_FCMD_SR2 {FCMD_SR2_MD = 0x1,FCMD_SR2_BC = 0x2,FCMD_SR2_SN = 0x4,FCMD_SR2_SH = 0x8,FCMD_SR2_WC = 0x10,FCMD_SR2_DD = 0x20,FCMD_SR2_CM = 0x40,};
enum MACRO_FEEDBACK {FEEDBACK_REXMIT1 = 1,FEEDBACK_OK = 2,CLCR_SET_LOWVERS = 3,CLCR_GET_LOWVERS = 4,RPCSMALLMSGSIZE = 400,};
enum MACRO_FILENAME {FILENAME_MAX = 14,FOPEN_MAX = 60,EOF = -1,};
enum MACRO_FILLCHAR {FILLCHAR = 0,MAXSTRLEN = 1024,};
enum MACRO_FLT_MANT {FLT_MANT_DIG = 24,};
enum MACRO_FLUSHALL {FLUSHALL = 0x1,};
enum MACRO_FMNAMESZ {FMNAMESZ = 8,OSF_STREAMS_CONFIG_10 = 67264537,OSF_STREAMS_CONFIG_11 = 84107546,};
enum MACRO_FS_CLEAN {FS_CLEAN = 0x17,FS_OK = 0x53,};
enum MACRO_FS_INUSE {FS_INUSE = 0x1,};
enum MACRO_FS_MAGIC {FS_MAGIC_SEC = 0x612195,};
enum MACRO_FS_NOTOK {FS_NOTOK = 0x31,FS_INSTALL = 0x80,};
enum MACRO_FS_QMASK {FS_QMASK = 0x3,};
enum MACRO_FTW_PHYS {FTW_PHYS = 1,FTW_MOUNT = 2,FTW_DEPTH = 4,FTW_CHDIR = 8,};
enum MACRO_FUNCTION {FUNCTION_DISABLED = 0x80,};
enum MACRO_GCCONFIG {GCCONFIG_ACCESSED_COHERENT = 0x1,GCCONFIG_MODIFIED_COHERENT = 0x2,GCCONFIG_ACCESSED_ACC = 0x4,GCCONFIG_MODIFIED_ACC = 0x8,GCCONFIG_ACCESSED_DIRTY = 0x10,GCCONFIG_MODIFIED_DIRTY = 0x20,};
enum MACRO_GCSTATIC {GCSTATIC_CMAP = 536889099,GCVARIABLE_MAP = 536889100,};
enum MACRO_GETFSIND {GETFSIND = 1,GETFSTYP = 2,GETNFSTYP = 3,};
enum MACRO_GPIO_EIR {GPIO_EIR_CONTROL = 1,HPIB_PARITY = 19,HPIB_SET_ADDR = 20,};
enum MACRO_GPIO_STS {GPIO_STS_LINES = 8,GPIO_INTERFACE_TYPE = 9,GPIO_GET_CONFIG = 18,};
enum MACRO_HARDWARE {HARDWARE = 0,SOFTWARE = 1,};
enum MACRO_HAS_TYPE {HAS_TYPE_ENTRY = 0x1,MAX_FREEFORM_SIZE = 0xCD,};
enum MACRO_HFIXEDSZ {HFIXEDSZ = 12,};
enum MACRO_HID_2TO1 {HID_2TO1_SCALING = 0x20005018,HID_1TO1_SCALING = 0x20005019,};
enum MACRO_HID_NONE {HID_NONE_BIT = 0x1,HID_MOUSE_BIT = 0x2,HID_KEYBD_BIT = 0x4,HID_UNKNOWN_BIT = 0x8,HID_FIRST_BIT = 0x10,};
enum MACRO_HIL_HIGH {HIL_HIGH_INT_MASK = 0x4,SERIAL_1_INT_LINE = 0x1A,SERIAL_1_INT_MASK = 0x20,};
enum MACRO_HPERRORS {HPERRORS = 3,};
enum MACRO_HPEVENTS {HPEVENTS = 12,};
enum MACRO_HPGSHIFT {HPGSHIFT = 12,NBPG = 4096,};
enum MACRO_HPHYSINV {HPHYSINV = 0x0,};
enum MACRO_HPIB_EOI {HPIB_EOI = 1,HPIB_SIGNAL_MASK = 2,HPIB_LOCK = 3,HPIB_ADDRESS = 4,HPIB_RESET = 5,HPIB_PPOLL_RESP = 6,HPIB_PPOLL_IST = 7,HPIB_REN = 8,HPIB_ATN = 9,HPIB_SRQ = 10,HPIB_PASS_CONTROL = 11,HPIB_GET_CONTROL = 12,HPIB_PPOLL = 13,HPIB_SPOLL = 14,HPIB_BUS_STATUS = 15,HPIB_WAIT_ON_PPOLL = 16,HPIB_WAIT_ON_STATUS = 17,HPIB_TERM_REASON = 18,};
enum MACRO_HPIB_LDM {HPIB_LDM_REVISION = 2240,NO_REPLY = -1,};
enum MACRO_HPIB_REQ {HPIB_REQ_LENGTH = 10,HPIB_FCODE = 192,LDM_PRIMORDIAL = -1,};
enum MACRO_HPIB_SET {HPIB_SET_STATE = 536889609,HPIB_CLEAR_STATE = 536889610,HPIB_GET_STATE = 536889611,};
enum MACRO_HPIWRITE {HPIWRITE = 0x0,};
enum MACRO_HP_S_800 {HP_S_800 = 523,HP_S_700 = 528,};
enum MACRO_IEEE8023 {IEEE8023_HLEN = 17,};
enum MACRO_IEEE8024 {IEEE8024_HLEN = 16,IEEE8024XSAP_HLEN = 23,};
enum MACRO_IEEE8025 {IEEE8025_HLEN = 17,IEEE8025_SR_HLEN = 35,IEEE8025_RII = 128,};
enum MACRO_IEEECTRL {IEEECTRL_DEF = 0x3,IEEECTRL_XID = 0xBF,IEEECTRL_TEST = 0xF3,MIN_ETHER_TYPE = 0x600,};
enum MACRO_IFNAMSIZ {IFNAMSIZ = 16,};
enum MACRO_IGMP_MAX {IGMP_MAX_HOST_REPORT_DELAY = 10,};
enum MACRO_INACTIVE {INACTIVE = 0,INITIALIZING = 1,ACTIVE = 2,FAILED = 3,};
enum MACRO_INDIRECT {INDIRECT_PLABEL = 0x2,};
enum MACRO_INITIATE {INITIATE_RECOVERY_MSG = 0xF,};
enum MACRO_INIT_DEV {INIT_DEV_WITH_STR = 0x14,};
enum MACRO_INT8_MIN {INT8_MIN = -128,};
enum MACRO_INTERNAL {INTERNAL_CARD = 0x478000,};
enum MACRO_INTERUPT {INTERUPT_EN = 2097152,END_OF_TABLE = -1,};
enum MACRO_INT_CTLR {INT_CTLR = 0x1,INT_SRQ = 0x2,INT_TADS = 0x4,INT_LADS = 0x8,INT_PPL = 0x10,INT_READ = 0x20,INT_WRITE = 0x40,SIMON_FAKEISR = 0x80,};
enum MACRO_INVALID2 {INVALID_PIXEL = -1,};
enum MACRO_INVLDCMP {INVLDCMP = -3,};
enum MACRO_INVLDREQ {INVLDREQ = -10,};
enum MACRO_INVRSLTC {INVRSLTC = -4,};
enum MACRO_IOCONFIG {IOCONFIG_MAGIC = 0x21224941,};
enum MACRO_IODC_BUS {IODC_BUS_MASK = 0xF800,};
enum MACRO_IODC_MAX {IODC_MAX = 0x8000,IODC_STACK_RESERVE = 0x1D00,IODC_FRAME_SIZE = 0x200,IODC_SPA_SHIFT_MASK = 0x1F,};
enum MACRO_IODC_VSC {IODC_VSC_BUS = 0x2000,};
enum MACRO_IPC_RMID {IPC_RMID = 0,IPC_SET = 1,IPC_STAT = 2,IPC_ALLOC = 32768,};
enum MACRO_IPOPT_TS {IPOPT_TS_TSONLY = 0,IPOPT_TS_TSANDADDR = 1,IPOPT_TS_PRESPEC = 2,};
enum MACRO_IPTTLDEC {IPTTLDEC = 1,IP_MSS = 576,};
enum MACRO_KBD_STAT {KBD_STAT_SHIFT = 0x1,KBD_STAT_CTRL = 0x2,KBD_MAXVOLUME = 0xFF,};
enum MACRO_KEYBYTES {KEYBYTES = 24,};
enum MACRO_KEYPRESS {KEYPRESS_MASK = 1,KEYRELEASE_MASK = 2,DESTROYNOTIFY_MASK = 4,};
enum MACRO_KEY_PROG {KEY_PROG = 100029,};
enum MACRO_KEY_VERS {KEY_VERS = 1,};
enum MACRO_KI_ASYNC {KI_ASYNC_DAEMON = 573,};
enum MACRO_KI_KTEST {KI_KTEST = 575,};
enum MACRO_KI_LVMKD {KI_LVMKD = 586,};
enum MACRO_KI_NFSKD {KI_NFSKD = 576,};
enum MACRO_KI_TTISR {KI_TTISR = 578,};
enum MACRO_KI_VDMAD {KI_VDMAD = 587,};
enum MACRO_KI_VHAND {KI_VHAND = 597,};
enum MACRO_KLM_TEST {KLM_TEST = 1,KLM_LOCK = 2,KLM_CANCEL = 3,KLM_UNLOCK = 4,LM_MAXSTRLEN = 1024,};
enum MACRO_KLM_VERS {KLM_VERS = 1,};
enum MACRO_KeyClass {KeyClass = 0,ButtonClass = 1,ValuatorClass = 2,FeedbackClass = 3,ProximityClass = 4,FocusClass = 5,OtherClass = 6,};
enum MACRO_KeyPress {KeyPress = 2,KeyRelease = 3,ButtonPress = 4,ButtonRelease = 5,MotionNotify = 6,EnterNotify = 7,LeaveNotify = 8,FocusIn = 9,FocusOut = 10,KeymapNotify = 11,Expose = 12,GraphicsExpose = 13,NoExpose = 14,VisibilityNotify = 15,CreateNotify = 16,DestroyNotify = 17,UnmapNotify = 18,MapNotify = 19,MapRequest = 20,ReparentNotify = 21,ConfigureNotify = 22,ConfigureRequest = 23,GravityNotify = 24,ResizeRequest = 25,CirculateNotify = 26,CirculateRequest = 27,PropertyNotify = 28,SelectionClear = 29,SelectionRequest = 30,SelectionNotify = 31,ColormapNotify = 32,ClientMessage = 33,MappingNotify = 34,LASTEvent = 35,};
enum MACRO_LASI_EXT {LASI_EXT_INT_LINE = 10,LASI_EXT_INT_MASK = 2097152,};
enum MACRO_LDBL_DIG {LDBL_DIG = 33,LDBL_MIN_EXP = -16381,};
enum MACRO_LDBL_MAX {LDBL_MAX_EXP = 16384,};
enum MACRO_LDBL_MIN {LDBL_MIN_10_EXP = -4931,};
enum MACRO_LE_TIMOD {LE_TIMOD_NO_TIMOD = 4000,};
enum MACRO_LIBMAGIC {LIBMAGIC = 0x619,};
enum MACRO_LLIO_BAD {LLIO_BAD_LM_PORT_NUM = -20,};
enum MACRO_LLIO_DEV {LLIO_DEV_POWER_ON = -33,};
enum MACRO_LLIO_END {LLIO_END_OF_MEDIA = -31,};
enum MACRO_LLIO_INV {LLIO_INV_ADDR = -37,};
enum MACRO_LLIO_LVM {LLIO_LVM_SPARE = -81,};
enum MACRO_LLIO_NOT {LLIO_NOT_IMPLEMENTED = -3,};
enum MACRO_LLIO_REQ {LLIO_REQ_IN_INV_STATE = -6,};
enum MACRO_LLIO_TOO {LLIO_TOO_MANY = -21,};
enum MACRO_LLIO_TRY {LLIO_TRY_AGAIN = -75,};
enum MACRO_LOGMSGSZ {LOGMSGSZ = 128,};
enum MACRO_LOG_KERN {LOG_KERN = 0,LOG_USER = 8,LOG_MAIL = 16,LOG_DAEMON = 24,LOG_AUTH = 32,LOG_SYSLOG = 40,LOG_LPR = 48,LOG_NEWS = 56,LOG_UUCP = 64,LOG_CRON = 72,LOG_LOCAL0 = 128,LOG_LOCAL1 = 136,LOG_LOCAL2 = 144,LOG_LOCAL3 = 152,LOG_LOCAL4 = 160,LOG_LOCAL5 = 168,LOG_LOCAL6 = 176,LOG_LOCAL7 = 184,};
enum MACRO_LONG_BIT {LONG_BIT = 32,};
enum MACRO_LOOPBACK {LOOPBACK_GENERIC = 0,LOOPBACK_FRONTDOOR = 1,LOOPBACK_BACKDOOR = 2,LOOPBACK_RESERVE1 = 3,LOOPBACK_RESERVE2 = 4,LOOPBACK_RESERVE3 = 5,LOOPBACK_RESERVE4 = 6,LOOPBACK_RESERVE5 = 7,};
enum MACRO_LSBFirst {LSBFirst = 0,MSBFirst = 1,};
enum MACRO_MAGNUS_1 {MAGNUS_1_2 = 0x25,DC9100SL = 0x26,};
enum MACRO_MAXAPUSH {MAXAPUSH = 8,SAD_SAP = 536887553,SAD_GAP = 536887554,SAD_VML = 536887555,SAD_DCONF = 536887556,};
enum MACRO_MAXDNAME {MAXDNAME = 256,};
enum MACRO_MAXEVNTS {MAXEVNTS = 32,};
enum MACRO_MAXLABEL {MAXLABEL = 63,};
enum MACRO_MAXPROCS {MAXPROCS = 3,};
enum MACRO_MAXQSIZE {MAXQSIZE = 10,};
enum MACRO_MAX_AUTH {MAX_AUTH_BYTES = 400,};
enum MACRO_MAX_CCIO {MAX_CCIO_TRANSLATIONS = 2,};
enum MACRO_MAX_CHAR {MAX_CHAR = 4,};
enum MACRO_MAX_DATA {MAX_DATA = 8192,};
enum MACRO_MAX_EISA {MAX_EISA_SLOTS = 8,EEPROM_MAJ = 196,MAX_EEPROM_WRITES = 10000,};
enum MACRO_MAX_HOST {MAX_HOST_IPS = 5,};
enum MACRO_MAX_INFO {MAX_INFO_MSGS = 80,};
enum MACRO_MAX_LINE {MAX_LINE = 256,};
enum MACRO_MAX_LOCK {MAX_LOCK_SIZE = -2147483648,};
enum MACRO_MAX_NAME {MAX_NAME_LEN = 16,};
enum MACRO_MAX_PAGE {MAX_PAGE_BUCKETS = 8,M_WAITOK = 0,};
enum MACRO_MAX_PROF {MAX_PROF = 0x7FFFFFFF,};
enum MACRO_MAX_SLOT {MAX_SLOT_ZERO_SIZE = 70,SNAKES_EEPROM_BASE_ADDR = -259980288,SNAKES_EEPROM_REG_BASE = -259948544,};
enum MACRO_MAX_TAPE {MAX_TAPE_OPTIONS = 25,};
enum MACRO_MAX_TEST {MAX_TEST_BUFS = 4,};
enum MACRO_MCLSHIFT {MCLSHIFT = 12,MCLOFSET = 4095,};
enum MACRO_MEM_BYTE {MEM_BYTE = 0x0,MEM_WORD = 0x1,MEM_DWORD = 0x2,};
enum MACRO_MEM_CONT {MEM_CONT = 0x350,};
enum MACRO_MINBSIZE {MINBSIZE = 4096,};
enum MACRO_MIN_FSID {MIN_FSID = 0,MAX_FSID = 63,FSSGRP = 64,};
enum MACRO_MM_NOGET {MM_NOGET = 0x200,MM_GET = 0x0,};
enum MACRO_MM_NOSEV {MM_NOSEV = 0,MM_HALT = 1,MM_ERROR = 2,MM_WARNING = 3,MM_INFO = 4,MM_NOTOK = -1,};
enum MACRO_MM_NOSTD {MM_NOSTD = 0x100,MM_STD = 0x0,};
enum MACRO_MODEMASK {MODEMASK = 7,};
enum MACRO_MODE_0_0 {MODE_0 = 0x0,MODE_1 = 0x2,MODE_2 = 0x4,MODE_3 = 0x6,MODE_4 = 0x8,MODE_5 = 0xA,};
enum MACRO_MOD_TYPE {MOD_TYPE_NPROC = 0,MOD_TYPE_MEMORY = 1,MOD_TYPE_B_DMA_IO = 2,MOD_TYPE_B_DIRECT_IO = 3,MOD_TYPE_A_DMA_IO = 4,MOD_TYPE_A_DIRECT_IO = 5,MOD_TYPE_OTHER = 6,MOD_TYPE_BUSCONV = 7,MOD_TYPE_CIO_CHANNEL = 8,MOD_TYPE_CONSOLE = 9,MOD_TYPE_FOREIGN_IO = 10,MOD_TYPE_BUS_ADAPTER = 11,MOD_TYPE_IOA = 12,MOD_TYPE_BUS_BRIDGE = 13,};
enum MACRO_MSGident {MSGident_discon = 0x40,};
enum MACRO_MS_DELAY {MS_DELAY = 0x1,MS_BEHIND = 0x2,MS_FSASYNC = 0x4,MS_NO_FSASYNC = 0x8,};
enum MACRO_MT_SHORT {MT_SHORT_NAME = 14,MT_LONG_NAME = 60,MAX_DENSITY_STR = 64,STAPE_EVENT_BUF_SIZE = 256,};
enum MACRO_MWM_FUNC {MWM_FUNC_ALL = 1,MWM_FUNC_RESIZE = 2,MWM_FUNC_MOVE = 4,MWM_FUNC_MINIMIZE = 8,MWM_FUNC_MAXIMIZE = 16,MWM_FUNC_CLOSE = 32,};
enum MACRO_MWM_INFO {MWM_INFO_STARTUP_STANDARD = 1,MWM_INFO_STARTUP_CUSTOM = 2,PROP_MOTIF_WM_HINTS_ELEMENTS = 5,};
enum MACRO_M_NOWAIT {M_NOWAIT = 0x1,M_ALIGN = 0x2,M_EXECUTE = 0x4,M_ALLOC32 = 0x8,};
enum MACRO_M_RDONLY {M_RDONLY = 0x1,M_NOSUID = 0x2,M_QUOTA = 0x4,MS_DATA = 0x8,};
enum MACRO_NIS_READ {NIS_READ_ACC = 1,NIS_MODIFY_ACC = 2,NIS_CREATE_ACC = 4,NIS_DESTROY_ACC = 8,};
enum MACRO_NLMPROC4 {NLMPROC4_NULL = 0,NLMPROC4_TEST = 1,NLMPROC4_LOCK = 2,NLMPROC4_CANCEL = 3,NLMPROC4_UNLOCK = 4,NLMPROC4_GRANTED = 5,NLMPROC4_TEST_MSG = 6,NLMPROC4_LOCK_MSG = 7,NLMPROC4_CANCEL_MSG = 8,NLMPROC4_UNLOCK_MSG = 9,NLMPROC4_GRANTED_MSG = 10,NLMPROC4_TEST_RES = 11,NLMPROC4_LOCK_RES = 12,NLMPROC4_CANCEL_RES = 13,NLMPROC4_UNLOCK_RES = 14,NLMPROC4_GRANTED_RES = 15,NLMPROC4_SHARE = 20,NLMPROC4_UNSHARE = 21,NLMPROC4_NM_LOCK = 22,NLMPROC4_FREE_ALL = 23,};
enum MACRO_NLM_TEST {NLM_TEST = 1,NLM_LOCK = 2,NLM_CANCEL = 3,NLM_UNLOCK = 4,NLM_GRANTED = 5,NLM_TEST_MSG = 6,NLM_LOCK_MSG = 7,NLM_CANCEL_MSG = 8,NLM_UNLOCK_MSG = 9,NLM_GRANTED_MSG = 10,NLM_TEST_RES = 11,NLM_LOCK_RES = 12,NLM_CANCEL_RES = 13,NLM_UNLOCK_RES = 14,NLM_GRANTED_RES = 15,};
enum MACRO_NLM_VERS {NLM_VERS = 1,};
enum MACRO_NMSKBITS {NMSKBITS = 32,X11_OPEN_MAX = 256,};
enum MACRO_NNA_IEEE {NNA_IEEE = 0x10000000,NNA_NPORT = 0x30000000,NNA_IP = 0x40000000,};
enum MACRO_NONALIAS {NONALIAS = 0x0,ALIAS = 0x1,ALIAS_REMAP = 0x2,};
enum MACRO_NONE_LED {NONE_LED = 0x0,KANA_LED = 0x10,};
enum MACRO_NORMAL_0 {NORMAL = 0,AMG_DM_NOT_ON_LINE = -1,};
enum MACRO_NO_ASYNC {NO_ASYNC_REQ_SENSE = 0,NO_MODE_PAGE_COMPRESSION = 0,NO_DENSITY = 0,NO_OVERWRITING = 0,NO_READ_ONLY_COMPRESSION = 0,};
enum MACRO_NO_FLAGS {NO_FLAGS = 0x0,RESET_DBDs = 0x1,};
enum MACRO_NO_PAGES {NO_PAGES = 0,ERR_RECOV_PAGE = 1,DISCONNECT_RECONNECT_PAGE = 2,FORMAT_DEV_PAGE = 3,DISK_GEOMETRY_PAGE = 4,CACHE_PAGE = 8,COMPRESSION_PAGE = 15,DEVICE_CONFIG_PAGE = 16,ALL_PAGES = 63,};
enum MACRO_NO_SENSE {NO_SENSE = 0,RECOVERED_ERROR = 1,NOT_READY = 2,MEDIUM_ERROR = 3,HARDWARE_ERROR = 4,ILLEGAL_REQUEST = 5,UNIT_ATTENTION = 6,DATA_PROTECT = 7,BLANK_CHECK = 8,COPY_ABORTED = 10,ABORTED_COMMAND = 11,EQUAL = 12,VOLUME_OVERFLOW = 13,MISCOMPARE = 14,};
enum MACRO_NULLPROC {NULLPROC = 0,};
enum MACRO_NULL_PTR {NULL_PTR = 0,PSM_LENGTH_32 = 32,};
enum MACRO_NUM_DATA {NUM_DATA_TRANSFERS = 1,};
enum MACRO_NUM_EISA {NUM_EISA_BUSES = 1,EISA1_NUM_SLOTS_MAX = 8,};
enum MACRO_NUM_FRAG {NUM_FRAG_SIZES = 8,};
enum MACRO_NUM_MASK {NUM_MASK_ELEMENTS = 8,NUM_BITS_IN_INTEGER = 32,CARD_INSTANCE_MASK = 255,};
enum MACRO_NUM_MODS {NUM_MODS_PER_BUS = 64,FIRST_PAGE = 32768,};
enum MACRO_NoSymbol {NoSymbol = 0,};
enum MACRO_OLD_CARD {OLD_CARD = 67108864,};
enum MACRO_OPENFAIL {OPENFAIL = -1,};
enum MACRO_O_APPEND {O_APPEND = 0x8,O_NONBLOCK = 0x10000,};
enum MACRO_O_NDELAY {O_NDELAY = 0x4,FSYNC = 0x8000,};
enum MACRO_O_SYNCIO {O_SYNCIO = 32768,};
enum MACRO_O_TOSTOP {O_TOSTOP = 0x10000,O_PRTERA = 0x20000,O_CRTERA = 0x40000,O_TILDE = 0x80000,O_MDMBUF = 0x100000,O_LITOUT = 0x200000,O_CRTBS = 0x400000,O_FLUSHO = 0x800000,O_NOHANG = 0x1000000,O_L001000 = 0x2000000,O_CRTKIL = 0x4000000,O_PASS8 = 0x8000000,O_CTLECH = 0x10000000,O_PENDIN = 0x20000000,O_DECCTQ = 0x40000000,O_NOFLSH = 0x80000000,};
enum MACRO_PACKETSZ {PACKETSZ = 512,};
enum MACRO_PAM_USER {PAM_USER = 2,PAM_TTY = 3,PAM_RHOST = 4,PAM_CONV = 5,PAM_AUTHTOK = 6,PAM_OLDAUTHTOK = 7,PAM_RUSER = 8,PAM_USER_PROMPT = 9,PAM_SILENT = -2147483648,};
enum MACRO_PARALLEL {PARALLEL_INT_LINE = 24,PARALLEL_INT_MASK = 128,};
enum MACRO_PASSTHRU {PASSTHRU = 0,OVERSTRIKE = 1,};
enum MACRO_PCI_OKAY {PCI_OKAY = 0,PCI_BUS_HINTS_NOT_USED = 1,PCI_BUS_HINTS_BAD_DATA = 2,};
enum MACRO_PCI_STAT {PCI_STAT_ECP = 0x10,PCI_STAT_66MHZ = 0x20,PCI_STAT_FBB = 0x80,PCI_STAT_PERR_L = 0x100,PCI_STAT_DEVSEL_MASK = 0x600,PCI_STAT_ABORT_TGT = 0x800,PCI_STAT_TGT_ABORTED = 0x1000,PCI_STAT_MASTER_ABORT = 0x2000,PCI_STAT_SIG_SERR = 0x4000,PCI_STAT_PERR_DETECT = 0x8000,MEM_BASE_MASK = 0xFFFFFFF0,IO_BASE_MASK = 0xFFFFFFFC,ROM_BASE_MASK = 0xFFFFFFFE,};
enum MACRO_PDC_ARG2 {PDC_ARG2_NOT_RADDR = 0,PDC_ARG2_IS_RADDR = 1,};
enum MACRO_PDE_LOG2 {PDE_LOG2 = 5,};
enum MACRO_PDE_VOFF {PDE_VOFF = 12,PDE_PPAGE = 20,};
enum MACRO_PEND_RST {PEND_RST = 0x10,};
enum MACRO_PHASECNT {PHASECNT = 0x19,BD_ATP = 0x21523B05,BD_STF = 0xDEAD3B05,};
enum MACRO_PMAPPORT {PMAPPORT = 111,};
enum MACRO_PMAPPROC {PMAPPROC_NULL = 0,PMAPPROC_SET = 1,PMAPPROC_UNSET = 2,PMAPPROC_GETPORT = 3,PMAPPROC_DUMP = 4,PMAPPROC_CALLIT = 5,};
enum MACRO_PMAPPROG {PMAPPROG = 100000,};
enum MACRO_PMAPVERS {PMAPVERS_PROTO = 2,PMAPVERS_ORIG = 1,};
enum MACRO_POFFMASK {POFFMASK = 4095,};
enum MACRO_POLLNORM {POLLNORM = 1,INFTIM = -1,};
enum MACRO_PRC_CONN {PRC_CONN_NONE = 0,PRC_CONN1_WAIT = 65,};
enum MACRO_PRF_OPEN {PRF_OPEN = 1,PRF_NOMEM = 2,};
enum MACRO_PRIO_MAX {PRIO_MAX = 20,PRIO_PROCESS = 0,};
enum MACRO_PRM_VxVM {PRM_VxVM = 1,};
enum MACRO_PROP_MWM {PROP_MWM_INFO_ELEMENTS = 2,};
enum MACRO_PROT_URW {PROT_URW = 3,PROT_KRW = 11,};
enum MACRO_PROT_URX {PROT_URX = 5,};
enum MACRO_PRU_NREQ {PRU_NREQ = 27,};
enum MACRO_PS2_2TO1 {PS2_2TO1_SCALING = 0x20005018,PS2_1TO1_SCALING = 0x20005019,};
enum MACRO_PS2_NONE {PS2_NONE = 0,PS2_MOUSE = 1,PS2_KEYBD = 2,PS2_UNKNOWN = 3,};
enum MACRO_PST_ADDR {PST_ADDR = 0x1,PST_WCHAN = 0x2,PST_MAXRSS = 0x4,};
enum MACRO_PS_EARLY {PS_EARLY_DUMP = 0x1,PS_FASTSIZE_256KB = 0x0,};
enum MACRO_PS_OTHER {PS_OTHER = 5,};
enum MACRO_PS_SLEEP {PS_SLEEP = 1,PS_RUN = 2,PS_STOP = 3,PS_ZOMBIE = 4,PS_IDLE = 6,};
enum MACRO_QFIXEDSZ {QFIXEDSZ = 4,RRFIXEDSZ = 10,};
enum MACRO_QUOTELEN {QUOTELEN = 6,ERROR = -1,};
enum MACRO_RB_PANIC {RB_PANIC = 0,RB_BOOT = 1,};
enum MACRO_RDB_STOP {RDB_STOP = 0x2,RDB_STOP_BIT = 0x1E,RDB_NORS232 = 0x4000,};
enum MACRO_READ_IRR {READ_IRR = 0x2,PARITY_DISABLED = 0x4,IOCHK_DISABLED = 0x8,IOCHK_NMI = 0x40,PARITY_NMI = 0x80,};
enum MACRO_READ_ISR {READ_ISR = 0x3,};
enum MACRO_REG_DATA {REG_DATA = 4,MAX_TIMEOUT = 1800,};
enum MACRO_REG_EMEM {REG_EMEM = 50,};
enum MACRO_RELATIVE {RELATIVE = 0,ABSOLUTE = 2,};
enum MACRO_REQ_INFO {REQ_INFO_VALID_ERR = -119,};
enum MACRO_RESERVED {RESERVED_DO_NOT_USE = 0,ABORT_EVENT_MSG = 1,CREATION_MSG = 2,DO_BIND_REQ_MSG = 3,DO_BIND_REPLY_MSG = 4,BIND_REQ_MSG = 5,BIND_REPLY_MSG = 6,DO_UNBIND_REQ_MSG = 7,DO_UNBIND_REPLY_MSG = 8,UNBIND_REQ_MSG = 9,UNBIND_REPLY_MSG = 10,DIE_REQ_MSG = 11,DIE_REPLY_MSG = 12,INT_COMPLETION_MSG = 13,INT_DIRECT_MSG = 14,PROBE_REQ_MSG = 15,PROBE_REPLY_MSG = 16,POWER_ON_REQ_MSG = 17,POWER_ON_REPLY_MSG = 18,TIMER_EVENT_MSG = 19,DIAG_REQ_MSG = 20,DIAG_REPLY_MSG = 21,DIAG_EVENT_MSG = 22,STATUS_REQ_MSG = 23,STATUS_REPLY_MSG = 24,RESET_REQ_MSG = 25,RESET_REPLY_MSG = 26,LOCK_REQ_MSG = 27,LOCK_REPLY_MSG = 28,UNLOCK_REQ_MSG = 29,UNLOCK_REPLY_MSG = 30,RESERVED_HP_1 = 31,RESERVED_HP_2 = 32,RESERVED_HP_3 = 33,RESERVED_HP_4 = 34,RESERVED_HP_5 = 35,RESERVED_HP_19 = 49,START_RESERVED = 50,};
enum MACRO_RESOURCE {RESOURCE_UNAVAILABLE = -2,};
enum MACRO_RES_INIT {RES_INIT = 0x1,RES_DEBUG = 0x2,RES_AAONLY = 0x4,RES_USEVC = 0x8,RES_PRIMARY = 0x10,RES_IGNTC = 0x20,RES_RECURSE = 0x40,RES_DEFNAMES = 0x80,RES_STAYOPEN = 0x100,RES_DNSRCH = 0x200,RES_INSECURE1 = 0x400,RES_INSECURE2 = 0x800,RES_NOALIASES = 0x1000,};
enum MACRO_RPCBPROC {RPCBPROC_SET = 1,RPCBPROC_UNSET = 2,RPCBPROC_GETADDR = 3,RPCBPROC_DUMP = 4,RPCBPROC_CALLIT = 5,RPCBPROC_GETTIME = 6,RPCBPROC_UADDR2TADDR = 7,RPCBPROC_TADDR2UADDR = 8,};
enum MACRO_RPCBPROG {RPCBPROG = 100000,};
enum MACRO_RPCBSTAT {RPCBSTAT_HIGHPROC = 13,};
enum MACRO_RPCBVERS {RPCBVERS_STAT = 3,};
enum MACRO_RS_ASYNC {RS_ASYNC_EVENT = 1,};
enum MACRO_RS_BLOCK {RS_BLOCK_UID_ERR = -115,};
enum MACRO_RS_HIPRI {RS_HIPRI = 0x1,};
enum MACRO_RW_WRITE {RW_WRITE_QUEUE = 0x1,RW_WRITE_LOCK = 0x2,RW_UPGRADE_LOCK = 0x4,RW_READ_LOCK = 0x8,MAX_RW_LOCK = 0x40,};
enum MACRO_Relative {Relative = 0,Absolute = 1,ProximityState = 2,};
enum MACRO_S9000_ID {S9000_ID_A1659A = 0x26D1482A,S9000_ID_A1439A = 0x26D148EE,};
enum MACRO_SCSI_BUS {SCSI_BUS_ERROR = -3,};
enum MACRO_SCSI_CMD {SCSI_CMD_LEN = 12,};
enum MACRO_SCSI_INT {SCSI_INT_LINE = 22,SCSI_INT_MASK = 512,};
enum MACRO_SCSI_MSG {SCSI_MSG_REJECT = -4,SCSI_NON_GOOD_STATUS = 2,};
enum MACRO_SEC_CORE {SEC_CORE_MODE = 0x180,};
enum MACRO_SEC_HALF {SEC_HALF = 500000,};
enum MACRO_SEM_UNDO {SEM_UNDO = 0x1000,};
enum MACRO_SENDZERO {SENDZERO = 1,T_XPG4_1 = 2,};
enum MACRO_SETMARKS {SETMARKS_SUPPORTED = 1,};
enum MACRO_SETUNIT0 {SETUNIT0 = 0x20,DESCRIBE_CMD = 0x35,};
enum MACRO_SE_ERROR {SE_ERROR = 0x1,SE_HAVEDATA = 0x2,SE_HAVEOOB = 0x4,SE_DATAFULL = 0x8,SE_CONNOUT = 0x10,SE_CONNIN = 0x20,SE_SENDCONN = 0x40,SE_RECVCONN = 0x80,SE_POLL = 0x4000,SE_STATUS = 0x8000,};
enum MACRO_SFDSHIFT {SFDSHIFT = 5,LOCK_TRACK_MAX = 10,};
enum MACRO_SHM_LOCK {SHM_LOCK = 3,SHM_UNLOCK = 4,};
enum MACRO_SHZM_DMA {SHZM_DMA_PAUSE = 1,SHZM_DMA_NORMAL = 0,};
enum MACRO_SHZM_XFR {SHZM_XFR_RDY = 268435456,SHZM_LENGTH_CONFLICT = 512,};
enum MACRO_SIGSTKSZ {SIGSTKSZ = 8192,};
enum MACRO_SIGWORDS {SIGWORDS = 2,};
enum MACRO_SILI_BIT {SILI_BIT_ON = 1,};
enum MACRO_SNAP8024 {SNAP8024_HLEN = 21,SNAP8024XT_HLEN = 25,};
enum MACRO_SNAP8025 {SNAP8025_HLEN = 22,SNAP8025_SR_HLEN = 40,};
enum MACRO_SO_DEBUG {SO_DEBUG = 0x1,SO_ACCEPTCONN = 0x2,SO_REUSEADDR = 0x4,SO_KEEPALIVE = 0x8,SO_DONTROUTE = 0x10,SO_BROADCAST = 0x20,SO_USELOOPBACK = 0x40,SO_LINGER = 0x80,SO_OOBINLINE = 0x100,SO_REUSEPORT = 0x200,SO_GETIFADDR = 0x400,SO_PMTU = 0x800,SO_INPCB_COPY = 0x1000,SO_SNDBUF = 0x1001,SO_RCVBUF = 0x1002,SO_SNDLOWAT = 0x1003,SO_RCVLOWAT = 0x1004,SO_SNDTIMEO = 0x1005,SO_RCVTIMEO = 0x1006,SO_ERROR = 0x1007,SO_TYPE = 0x1008,SO_SND_COPYAVOID = 0x1009,SO_RCV_COPYAVOID = 0x100A,SO_PROTOTYPE = 0x100B,SO_DISTRIBUTE = 0x100C,};
enum MACRO_SPP_CORE {SPP_CORE_HV_ID = 0x4,SPP_EPIC_SV_ID = 0xA5,SPP_EPIC_HV_ID = 0x582,SPP_SAGA_HV_ID = 0x583,};
enum MACRO_SS_UNSAT {SS_UNSAT = 0,SS_EXTERNAL = 1,SS_LOCAL = 2,};
enum MACRO_STACKDIR {STACKDIR = 1,};
enum MACRO_ST_INDEL {ST_INDEL = 0x1,ST_FREE = 0x2,ST_INUSE = 0x4,ST_NOREL = 0x8,};
enum MACRO_ST_PPOLL {ST_PPOLL = 0x400000,ST_SRQ = 0x4000,ST_REN = 0x2000,ST_ACTIVE_CTLR = 0x1000,ST_TALK = 0x400,ST_LISTEN = 0x200,ST_DAT = 0x100,ST_GET = 0x10,ST_DCL = 0x4,ST_IFC = 0x1,};
enum MACRO_SYS_EXIT {SYS_EXIT = 1,};
enum MACRO_SYS_NMLN {SYS_NMLN = 9,};
enum MACRO_SYS_acct {SYS_acct = 51,SYS_SET_USERTHREADID = 52,};
enum MACRO_SYS_bind {SYS_bind = 276,SYS_CONNECT = 277,};
enum MACRO_SYS_dup2 {SYS_dup2 = 90,SYS_FSTAT = 92,};
enum MACRO_SYS_exit {SYS_exit = 1,SYS_FORK = 2,};
enum MACRO_SYS_fork {SYS_fork = 2,SYS_READ = 3,};
enum MACRO_SYS_gtty {SYS_gtty = 32,SYS_ACCESS = 33,};
enum MACRO_SYS_kill {SYS_kill = 37,SYS_STAT = 38,};
enum MACRO_SYS_ksem {SYS_ksem_open = 447,SYS_KSEM_UNLINK = 448,};
enum MACRO_SYS_link {SYS_link = 9,SYS_UNLINK = 10,};
enum MACRO_SYS_mmap {SYS_mmap = 71,SYS_MUNMAP = 73,};
enum MACRO_SYS_msem {SYS_msem_init = 323,SYS_MSEM_REMOVE = 324,};
enum MACRO_SYS_nice {SYS_nice = 34,SYS_FTIME = 35,};
enum MACRO_SYS_open {SYS_open = 5,SYS_CLOSE = 6,};
enum MACRO_SYS_pipe {SYS_pipe = 42,SYS_TIMES = 43,};
enum MACRO_SYS_poll {SYS_poll = 269,SYS_GETMSG = 270,};
enum MACRO_SYS_proc {SYS_proc_open = 292,SYS_PROC_CLOSE = 293,};
enum MACRO_SYS_qmml {SYS_qmml = 199,SYS_WAITPID = 200,};
enum MACRO_SYS_read {SYS_read = 3,SYS_WRITE = 4,};
enum MACRO_SYS_recv {SYS_recv = 282,SYS_RECVFROM = 283,};
enum MACRO_SYS_send {SYS_send = 285,SYS_SENDMSG = 286,};
enum MACRO_SYS_stat {SYS_stat = 38,SYS_SETPGRP3 = 39,};
enum MACRO_SYS_stty {SYS_stty = 31,SYS_GTTY = 32,};
enum MACRO_SYS_sync {SYS_sync = 36,SYS_KILL = 37,};
enum MACRO_SYS_test {SYS_test = 171,SYS_UNSP_OPEN = 172,};
enum MACRO_SYS_time {SYS_time = 13,SYS_MKNOD = 14,};
enum MACRO_SYS_unsp {SYS_unsp_open = 172,SYS_OGETCONTEXT = 174,};
enum MACRO_SYS_wait {SYS_wait = 7,SYS_CREAT = 8,};
enum MACRO_S_IOTREE {S_IOTREE = 0,S_BDEVSW = 1,S_CDEVSW = 2,};
enum MACRO_ShapeSet {ShapeSet = 0,ShapeUnion = 1,ShapeIntersect = 2,ShapeSubtract = 3,ShapeInvert = 4,};
enum MACRO_TBADADDR {TBADADDR = 1,TBADOPT = 2,TACCES = 3,TBADF = 4,TNOADDR = 5,TOUTSTATE = 6,TBADSEQ = 7,TSYSERR = 8,TLOOK = 9,TBADDATA = 10,TBUFOVFLW = 11,TFLOW = 12,TNODATA = 13,TNODIS = 14,TNOUDERR = 15,TBADFLAG = 16,TNOREL = 17,TNOTSUPPORT = 18,TSTATECHNG = 19,TNOSTRUCTYPE = 20,TBADNAME = 21,TBADQLEN = 22,TADDRBUSY = 23,TINDOUT = 24,TPROVMISMATCH = 25,TRESQLEN = 26,TRESADDR = 27,TQFULL = 28,TPROTO = 29,TNOENT = 30,TINVAL = 31,TNOMEM = 32,TNETUNREACH = 33,TCONNRESET = 34,TTIMEDOUT = 35,};
enum MACRO_TCCLOSED {TCCLOSED = 1,TCLISTEN = 2,TCSYNSENT = 3,TCSYNRECEIVE = 4,TCESTABLISED = 5,TCFINWAIT1 = 6,TCFINWAIT2 = 7,TCCLOSEWAIT = 8,TCLASTACK = 9,TCCLOSING = 10,TCTIMEWAIT = 11,TCDELETETCB = 12,MAXEVINFO = 40,};
enum MACRO_TIOCCBRK {TIOCCBRK = 536900730,};
enum MACRO_TIOCHPCL {TIOCHPCL = 536900610,TIOCEXCL = 536900621,TIOCNXCL = 536900622,TIOCSBRK = 536900731,};
enum MACRO_TIOCOPEN {TIOCOPEN = 536900707,};
enum MACRO_TIOCSTOP {TIOCSTOP = 536900719,};
enum MACRO_TOPLEAVE {TOPLEAVE = 1,BOTTOMLEAVE = 2,LEFTLEAVE = 4,RIGHTLEAVE = 8,};
enum MACRO_TRANSFER {TRANSFER_SIZE = -5,};
enum MACRO_TVERSLEN {TVERSLEN = 2,REGTYPE = 48,};
enum MACRO_TYPESIZE {TYPESIZE = 4,};
enum MACRO_T_ABSREQ {T_ABSREQ = 0x8000,T_INFINITE = 0xFFFFFFFF,};
enum MACRO_T_CLASS0 {T_CLASS0 = 0,T_CLASS1 = 1,T_CLASS2 = 2,T_CLASS3 = 3,T_CLASS4 = 4,};
enum MACRO_T_PRITOP {T_PRITOP = 0,T_PRIHIGH = 1,T_PRIMID = 2,T_PRILOW = 3,T_PRIDFLT = 4,};
enum MACRO_T_UNINIT {T_UNINIT = 0,T_UNBND = 1,T_IDLE = 2,T_OUTCON = 3,T_INCON = 4,T_DATAXFER = 5,T_OUTREL = 6,T_INREL = 7,};
enum MACRO_T_UNSPEC {T_UNSPEC = -3,T_ALLOPT = 0,};
enum MACRO_T_UNUSED {T_UNUSED = -1,T_NULL = 0,};
enum MACRO_UID_EUID {UID_EUID = -34,UID_RUID = -33,UID_SUID = -32,};
enum MACRO_UNLISTEN {UNLISTEN = 63,};
enum MACRO_UNLOCK_0 {UNLOCK = 0x0,PROCLOCK = 0x1,TXTLOCK = 0x2,DATLOCK = 0x4,SHLIBLOCK = 0x8,PROCSHLIBLOCK = 0x10,TXTSHLIBLOCK = 0x20,DATSHLIBLOCK = 0x40,PLOCKSIGNAL = 0x10000000,};
enum MACRO_USRSTACK {USRSTACK_MAX32BIT_ADDR = 2147418112,};
enum MACRO_Unsorted {Unsorted = 0,YSorted = 1,YXSorted = 2,YXBanded = 3,};
enum MACRO_VARIABLE {VARIABLE_BLK_SIZE = 0,FIXED_BLK_SIZE = 512,};
enum MACRO_WALLPROC {WALLPROC_WALL = 2,};
enum MACRO_WALLPROG {WALLPROG = 100008,};
enum MACRO_WALLVERS {WALLVERS_ORIG = 1,};
enum MACRO_WORD_RTN {WORD_RTN = 0xFFFFFFFF,};
enum MACRO_WSTOPPED {WSTOPPED = 0x8,WCONTINUED = 0x10,WEXITED = 0x20,WCONTFLG = 0xFFFF,};
enum MACRO_XCMDchan {XCMDchan_indep_clear = 0x8,XCMDcancel = 0x9,};
enum MACRO_XC_arrow {XC_arrow = 2,XC_based_arrow_down = 4,XC_based_arrow_up = 6,XC_boat = 8,XC_bogosity = 10,XC_bottom_left_corner = 12,XC_bottom_right_corner = 14,XC_bottom_side = 16,XC_bottom_tee = 18,XC_box_spiral = 20,XC_center_ptr = 22,XC_circle = 24,XC_clock = 26,XC_coffee_mug = 28,XC_cross = 30,XC_cross_reverse = 32,XC_crosshair = 34,XC_diamond_cross = 36,XC_dot = 38,XC_dotbox = 40,XC_double_arrow = 42,XC_draft_large = 44,XC_draft_small = 46,XC_draped_box = 48,XC_exchange = 50,XC_fleur = 52,XC_gobbler = 54,XC_gumby = 56,XC_hand1 = 58,XC_hand2 = 60,XC_heart = 62,XC_icon = 64,XC_iron_cross = 66,XC_left_ptr = 68,XC_left_side = 70,XC_left_tee = 72,XC_leftbutton = 74,XC_ll_angle = 76,XC_lr_angle = 78,XC_man = 80,XC_middlebutton = 82,XC_mouse = 84,XC_pencil = 86,XC_pirate = 88,XC_plus = 90,XC_question_arrow = 92,XC_right_ptr = 94,XC_right_side = 96,XC_right_tee = 98,XC_rightbutton = 100,XC_rtl_logo = 102,XC_sailboat = 104,XC_sb_down_arrow = 106,XC_sb_h_double_arrow = 108,XC_sb_left_arrow = 110,XC_sb_right_arrow = 112,XC_sb_up_arrow = 114,XC_sb_v_double_arrow = 116,XC_shuttle = 118,XC_sizing = 120,XC_spider = 122,XC_spraycan = 124,XC_star = 126,XC_target = 128,XC_tcross = 130,XC_top_left_arrow = 132,XC_top_left_corner = 134,XC_top_right_corner = 136,XC_top_side = 138,XC_top_tee = 140,XC_trek = 142,XC_ul_angle = 144,XC_umbrella = 146,XC_ur_angle = 148,XC_watch = 150,XC_xterm = 152,DXK_ring_accent = 268500656,};
enum MACRO_XIM_MODE {XIM_MODE_IM_GET = 1,XIM_MODE_IM_SET = 2,XIM_MODE_IM_DEFAULT = 4,};
enum MACRO_XIM_TRUE {XIM_TRUE = 1,XIM_FALSE = 0,};
enum MACRO_XK_Greek {XK_Greek_LAMBDA = 0x7CB,XK_Greek_MU = 0x7CC,XK_Greek_NU = 0x7CD,XK_Greek_XI = 0x7CE,XK_Greek_OMICRON = 0x7CF,XK_Greek_PI = 0x7D0,XK_Greek_RHO = 0x7D1,XK_Greek_SIGMA = 0x7D2,XK_Greek_TAU = 0x7D4,XK_Greek_UPSILON = 0x7D5,XK_Greek_PHI = 0x7D6,XK_Greek_CHI = 0x7D7,XK_Greek_PSI = 0x7D8,XK_Greek_OMEGA = 0x7D9,XK_Greek_alpha = 0x7E1,XK_Greek_beta = 0x7E2,XK_Greek_gamma = 0x7E3,XK_Greek_delta = 0x7E4,XK_Greek_epsilon = 0x7E5,XK_Greek_zeta = 0x7E6,XK_Greek_eta = 0x7E7,XK_Greek_theta = 0x7E8,XK_Greek_iota = 0x7E9,XK_Greek_kappa = 0x7EA,XK_Greek_lamda = 0x7EB,};
enum MACRO_XK_Kanji {XK_Kanji = 0xFF21,XK_Muhenkan = 0xFF22,XK_Henkan_Mode = 0xFF23,};
enum MACRO_XK_Multi {XK_Multi_key = 0xFF20,XK_SingleCandidate = 0xFF3C,XK_MultipleCandidate = 0xFF3D,XK_PreviousCandidate = 0xFF3E,};
enum MACRO_XK_Thorn {XK_Thorn = 0xDE,XK_ssharp = 0xDF,XK_agrave = 0xE0,XK_aacute = 0xE1,XK_acircumflex = 0xE2,XK_atilde = 0xE3,XK_adiaeresis = 0xE4,XK_aring = 0xE5,XK_ae = 0xE6,XK_ccedilla = 0xE7,XK_egrave = 0xE8,XK_eacute = 0xE9,XK_ecircumflex = 0xEA,XK_ediaeresis = 0xEB,XK_igrave = 0xEC,XK_iacute = 0xED,XK_icircumflex = 0xEE,XK_idiaeresis = 0xEF,XK_eth = 0xF0,XK_ntilde = 0xF1,XK_ograve = 0xF2,XK_oacute = 0xF3,XK_ocircumflex = 0xF4,XK_otilde = 0xF5,XK_odiaeresis = 0xF6,XK_division = 0xF7,XK_oslash = 0xF8,XK_ugrave = 0xF9,XK_uacute = 0xFA,XK_ucircumflex = 0xFB,XK_udiaeresis = 0xFC,XK_yacute = 0xFD,XK_thorn = 0xFE,XK_ydiaeresis = 0xFF,XK_Aogonek = 0x1A1,XK_breve = 0x1A2,XK_Lstroke = 0x1A3,XK_Lcaron = 0x1A5,XK_Sacute = 0x1A6,XK_Scaron = 0x1A9,XK_Scedilla = 0x1AA,XK_Tcaron = 0x1AB,XK_Zacute = 0x1AC,XK_Zcaron = 0x1AE,XK_Zabovedot = 0x1AF,XK_aogonek = 0x1B1,XK_ogonek = 0x1B2,XK_lstroke = 0x1B3,XK_lcaron = 0x1B5,XK_sacute = 0x1B6,XK_caron = 0x1B7,XK_scaron = 0x1B9,XK_scedilla = 0x1BA,XK_tcaron = 0x1BB,XK_zacute = 0x1BC,XK_doubleacute = 0x1BD,XK_zcaron = 0x1BE,XK_zabovedot = 0x1BF,XK_Racute = 0x1C0,XK_Abreve = 0x1C3,XK_Lacute = 0x1C5,XK_Cacute = 0x1C6,XK_Ccaron = 0x1C8,XK_Eogonek = 0x1CA,XK_Ecaron = 0x1CC,XK_Dcaron = 0x1CF,XK_Dstroke = 0x1D0,XK_Nacute = 0x1D1,XK_Ncaron = 0x1D2,XK_Odoubleacute = 0x1D5,XK_Rcaron = 0x1D8,XK_Uring = 0x1D9,XK_Udoubleacute = 0x1DB,XK_Tcedilla = 0x1DE,XK_racute = 0x1E0,XK_abreve = 0x1E3,XK_lacute = 0x1E5,XK_cacute = 0x1E6,XK_ccaron = 0x1E8,XK_eogonek = 0x1EA,XK_ecaron = 0x1EC,XK_dcaron = 0x1EF,XK_dstroke = 0x1F0,XK_nacute = 0x1F1,XK_ncaron = 0x1F2,XK_odoubleacute = 0x1F5,XK_udoubleacute = 0x1FB,};
enum MACRO_XK_kappa {XK_kappa = 0x3A2,XK_Rcedilla = 0x3A3,XK_Itilde = 0x3A5,XK_Lcedilla = 0x3A6,XK_Emacron = 0x3AA,XK_Gcedilla = 0x3AB,XK_Tslash = 0x3AC,XK_rcedilla = 0x3B3,XK_itilde = 0x3B5,XK_lcedilla = 0x3B6,XK_emacron = 0x3BA,XK_gcedilla = 0x3BB,XK_tslash = 0x3BC,XK_ENG = 0x3BD,XK_eng = 0x3BF,XK_Amacron = 0x3C0,XK_Iogonek = 0x3C7,XK_Eabovedot = 0x3CC,XK_Imacron = 0x3CF,XK_Ncedilla = 0x3D1,XK_Omacron = 0x3D2,XK_Kcedilla = 0x3D3,XK_Uogonek = 0x3D9,XK_Utilde = 0x3DD,XK_Umacron = 0x3DE,XK_amacron = 0x3E0,XK_iogonek = 0x3E7,XK_eabovedot = 0x3EC,XK_imacron = 0x3EF,XK_ncedilla = 0x3F1,XK_omacron = 0x3F2,XK_kcedilla = 0x3F3,XK_uogonek = 0x3F9,XK_utilde = 0x3FD,XK_umacron = 0x3FE,XK_overline = 0x47E,XK_kana_fullstop = 0x4A1,XK_kana_openingbracket = 0x4A2,XK_kana_closingbracket = 0x4A3,XK_kana_comma = 0x4A4,XK_kana_conjunctive = 0x4A5,};
enum MACRO_XK_space {XK_space = 0x20,XK_exclam = 0x21,XK_quotedbl = 0x22,XK_numbersign = 0x23,XK_dollar = 0x24,XK_percent = 0x25,XK_ampersand = 0x26,XK_apostrophe = 0x27,};
enum MACRO_XPM_GRAY {XPM_GRAY = 4,XPM_COLOR = 5,};
enum MACRO_XPOINTER {XPOINTER = 0,XKEYBOARD = 1,XOTHER = 2,NUM_DEV_TYPES = 19,MAX_POSITIONS = 28,MAX_LOGICAL_DEVS = 30,};
enum MACRO_XP_MAJOR {XP_MAJOR_VERSION = 1,XP_MINOR_VERSION = 0,XP_ABSENT = 0,};
enum MACRO_XP_PROTO {XP_PROTO_MAJOR = 1,XP_PROTO_MINOR = 0,};
enum MACRO_XTestKEY {XTestKEY_DOWN = 0x0,XTestMOTION_MAX = 0xF,XTestMOTION_MIN = 0xFFFFFFF1,};
enum MACRO_XTestMAX {XTestMAX_DEVICE_ID = 0xF,};
enum MACRO_XYBitmap {XYBitmap = 0,XYPixmap = 1,ZPixmap = 2,};
enum MACRO_XmBOTTOM {XmBOTTOM_LEFT = 2,};
enum MACRO_XmDIALOG {XmDIALOG_SUFFIX_SIZE = 6,};
enum MACRO_XmIGNORE {XmIGNORE_EVENTTYPE = -1,};
enum MACRO_XmRESIZE {XmRESIZE_SWINDOW = 10,};
enum MACRO_XmSTRING {XmSTRING_COMPONENT_END = 126,XmSTRING_COMPONENT_USER_BEGIN = 128,XmSTRING_COMPONENT_USER_END = 255,};
enum MACRO_XmUPDATE {XmUPDATE_LEVEL = 0,XmVersion = 2001,};
enum MACRO_YPMAXMAP {YPMAXMAP = 64,};
enum MACRO_YP_BADDB {YP_BADDB = -5,};
enum MACRO_YP_BADOP {YP_BADOP = -4,};
enum MACRO_YP_FALSE {YP_FALSE = 0,YP_NOMAP = -1,};
enum MACRO_YP_NODOM {YP_NODOM = -2,};
enum MACRO_YP_NOKEY {YP_NOKEY = -3,};
enum MACRO_YP_YPERR {YP_YPERR = -6,};
enum MACRO__FSTYPSZ {_FSTYPSZ = 16,};
enum MACRO__ISALPHA {_ISALPHA = 0x1,_ISALNUM = 0x2,_ISBLANK = 0x4,_ISCNTRL = 0x8,_ISDIGIT = 0x10,_ISGRAPH = 0x20,_ISLOWER = 0x40,_ISPRINT = 0x80,_ISPUNCT = 0x100,_ISSPACE = 0x200,_ISUPPER = 0x400,_ISXDIGIT = 0x800,};
enum MACRO__LENBASE {_LENBASE = 1,_EXPBASE = 2,_FEXPLEN = 8,};
enum MACRO__LWP_MTX {_LWP_MTX_DOHANDOFF = 0x1,};
enum MACRO__PBLKSIZ {_PBLKSIZ = 1024,_DBLKSIZ = 4096,};
enum MACRO__SC_COLL {_SC_COLL_ELEM_MAX = 203,_SC_PASTE_FILES_MAX = 206,_SC_SED_PATTERN_MAX = 208,_SC_SENDTO_MAX = 209,_SC_SORT_LINE_MAX = 210,_SC_TIMER_MAX = 400,_SC_FSYNC = 401,_SC_SYNCHRONIZED_IO = 402,_SC_PRIORITY_SCHEDULING = 403,_SC_TIMERS = 404,_SC_DELAYTIMER_MAX = 405,_SC_ASYNCHRONOUS_IO = 406,_SC_MAPPED_FILES = 407,_SC_MEMLOCK = 408,_SC_MEMLOCK_RANGE = 409,_SC_MEMORY_PROTECTION = 410,_SC_MESSAGE_PASSING = 411,_SC_PRIORITIZED_IO = 412,_SC_REALTIME_SIGNALS = 413,_SC_SEMAPHORES = 414,_SC_SHARED_MEMORY_OBJECTS = 415,_SC_AIO_LISTIO_MAX = 416,_SC_AIO_MAX = 417,_SC_AIO_PRIO_DELTA_MAX = 418,_SC_MQ_OPEN_MAX = 419,_SC_MQ_PRIO_MAX = 420,_SC_RTSIG_MAX = 421,_SC_SEM_NSEMS_MAX = 422,_SC_SEM_VALUE_MAX = 423,_SC_SIGQUEUE_MAX = 424,_SC_THREAD_DESTRUCTOR_ITERATIONS = 430,_SC_THREAD_KEYS_MAX = 431,_SC_THREAD_STACK_MIN = 432,_SC_THREAD_THREADS_MAX = 433,_SC_THREADS = 434,_SC_THREAD_ATTR_STACKADDR = 435,_SC_THREAD_ATTR_STACKSIZE = 436,_SC_THREAD_PRIORITY_SCHEDULING = 437,_SC_THREAD_PRIO_INHERIT = 438,_SC_THREAD_PRIO_PROTECT = 439,_SC_THREAD_PROCESS_SHARED = 440,_SC_THREAD_SAFE_FUNCTIONS = 441,_SC_GETGR_R_SIZE_MAX = 442,_SC_GETPW_R_SIZE_MAX = 443,_SC_LOGIN_NAME_MAX = 444,_SC_TTY_NAME_MAX = 445,_SC_CACHE_LINE_SIZE = 446,_SC_CLOCKS_PER_SEC = 2000,};
enum MACRO__SC_PASS {_SC_PASS_MAX = 9,_SC_XOPEN_CRYPT = 2002,_SC_XOPEN_ENH_I18N = 2003,_SC_XOPEN_SHM = 2004,};
enum MACRO__SC_XPG3 {_SC_XPG3_VERSION = 8,_SC_XPG4_VERSION = 2001,};
enum MACRO__SIGPOLL {_SIGPOLL = 22,_SIGWINCH = 23,};
enum MACRO__S_IFCHR {_S_IFCHR = 0x2000,_S_IFDIR = 0x4000,};
enum MACRO__S_IFIFO {_S_IFIFO = 0x1000,};
enum MACRO_osfXK_Up {osfXK_Up = 0x1004FF52,};
enum MACRO_privmask {privmask_word1 = 511,};
enum MACRO_xieValLT {xieValLT = 1,xieValLE = 2,xieValEQ = 3,xieValNE = 4,xieValGT = 5,xieValGE = 6,};
typedef struct _48B3880E4699D314B19152DFBFE9205B MRMRegisterArg;
typedef struct _0A5A2DC6F5DFEB19A95AB8D5777ED58E MrmOsOpenParam;
typedef struct _48B3880E4699D314B19152DFBFE9205B MrmRegisterArg;
typedef int MrmResource_id;
typedef struct nis_hash_table NIS_HASH_TABLE;
typedef struct _ObjectClassRec ObjectClassRec;
typedef struct _991DB0B5CB0892F70B164889AA9E2739 RECORD_RANGE16;
typedef unsigned int RawCR16Count_t;
typedef int RawCR16Delta_t;
typedef unsigned int RawCrItCount_t;
typedef int RawCrItDelta_t;
typedef unsigned int RawCrRcCount_t;
typedef int RawCrRcDelta_t;
typedef struct _EA67C4467E5D392AEC3890F142F1A94F ShellClassPart;
struct T_unitdata_ind {int PRIM_type;int SRC_length;int SRC_offset;int OPT_length;int OPT_offset;};
struct T_unitdata_req {int PRIM_type;int DEST_length;int DEST_offset;int OPT_length;int OPT_offset;};
typedef struct _BEEF05F397D63AF6E1E65FBD0055FC1F V1dumpheader_t;
typedef struct _FE9896265ABA69989620FFBB2F6B5FBF VendorShellRec;
typedef struct _WidgetClassRec WidgetClassRec;
typedef struct _XButtonInfo *XButtonInfoPtr;
typedef struct _0B94EEFCBD76FB7E6E0B7C6C274F8F05 XColormapEvent;
typedef struct _XComposeStatus XComposeStatus;
typedef struct _C04761233C6B6D3917A9FB90584A60A5 XCrossingEvent;
typedef struct _14C4DC63A35B6E2FD67711EA9BA1C1B3 XDeviceControl;
typedef struct _XDeviceInfo *XDeviceInfoPtr;
typedef struct _C08EB97F95DBE201B07D804A019DEBC7 XFeedbackState;
typedef unsigned int XIMHotKeyState;
typedef struct _E9E5673C887B806F32B41DE6D906B7FD XKeyboardState;
typedef struct _46C3598924410A8263981A6EE1F85A96 XLCdMethodsRec;
typedef struct _B00CD904CB46A0C43826F3F9731A78AD XNoExposeEvent;
typedef struct _XOCGenericPart XOCGenericPart;
typedef struct _6B1106A64659663BF4BA9950E3F10E4F XOMCharSetList;
typedef struct _XOMGenericPart XOMGenericPart;
typedef struct _9375A326D5D02800B5E28ACECE8480CB XOMOrientation;
typedef unsigned char XPDocumentType;
typedef unsigned char XPGetDocStatus;
typedef struct _3BCCBA65A7EB0D2F6C33DC1ED4428B78 XPropertyEvent;
typedef unsigned int XRecordContext;
typedef struct _FF8B70C3EB5683862853208A738C6C2E XRecordRange16;
typedef struct _29A84F0A94EF9B7976BAF082CF524F09 XReparentEvent;
typedef struct _1E4927A029C92C0FD595CCC76CE8B139 XTestDelayInfo;
typedef struct _5532C1654B9EF34861D348BF0E72BD7A XValuatorState;
typedef struct _BA1C9873524F37DFA28FC6E8B2A0BC7B XWindowChanges;
typedef struct _XcmsColorSpace XcmsColorSpace;
typedef struct _XcmsPerDpyInfo XcmsPerDpyInfo;
typedef unsigned char XdbeSwapAction;
typedef struct _665F1ADE1952A58E13B5D78D0B8A3255 XdbeVisualInfo;
typedef struct _XimDefICValues XimDefICValues;
typedef struct _XimDefIMValues XimDefIMValues;
typedef struct _XkbControls *XkbControlsPtr;
typedef struct _XkbControls XkbControlsRec;
typedef struct _XkbCtrlsAction XkbCtrlsAction;
typedef struct _XkbGeometry *XkbGeometryPtr;
typedef struct _XkbGeometry XkbGeometryRec;
typedef struct _XkbGroupAction XkbGroupAction;
typedef struct _XkbKeyAliasRec *XkbKeyAliasPtr;
typedef struct _XkbKeyAliasRec XkbKeyAliasRec;
typedef struct _XkbProperty *XkbPropertyPtr;
typedef struct _XkbProperty XkbPropertyRec;
typedef struct _XlcConvMethodsRec *XlcConvMethods;
typedef struct _XmBaseClassExtRec *XmBaseClassExt;
typedef struct _XmComboBoxPart XmComboBoxPart;
typedef struct _XmContainerRec XmContainerRec;
typedef struct _XmDisplayClassRec *XmDisplayClass;
typedef struct _CEBF0A3380E34CA7D192D32F0B21F5A4 XmDragIconPart;
typedef struct _XmExtClassPart XmExtClassPart;
typedef struct _XmFormClassRec XmFormClassRec;
typedef struct _XmGeoMatrixRec XmGeoMatrixRec;
typedef struct _8F2C7EBD5F5C00EC145265832DC3A795 *XmGeoRowLayout;
typedef struct _XmGrabShellRec XmGrabShellRec;
typedef struct _D964271DD6A251005E25C3AAAE129019 XmKeyboardData;
typedef struct _XmListClassRec XmListClassRec;
typedef struct _XmMenuFocusRec XmMenuFocusRec;
typedef struct _XmMenuShellRec XmMenuShellRec;
typedef struct _XmMenuStateRec XmMenuStateRec;
typedef struct _XmModalDataRec XmModalDataRec;
typedef struct _XmNotebookPart XmNotebookPart;
typedef struct __XmParseMappingRec *XmParseMapping;
typedef struct _XmPartResource XmPartResource;
typedef struct _XmPointInTraitRec *XmPointInTrait;
typedef struct _XmPrimitiveRec XmPrimitiveRec;
typedef struct _XmProtocolRec **XmProtocolList;
typedef struct _XmProtocolPart XmProtocolPart;
typedef struct _6180D9D3CA56B1110646E5C5D8270DC5 *XmRepTypeEntry;
typedef struct _XmRowColumnRec XmRowColumnRec;
typedef struct _XmSashClassRec XmSashClassRec;
typedef struct _XmScrollBarRec XmScrollBarRec;
typedef struct _XmSeparatorRec XmSeparatorRec;
typedef struct _DFB5DF0860CF2898E76F59605993FDC8 XmShellExtPart;
typedef struct _E1058C6CE9D10ECB65A245B878A205A2 XmTextBlockRec;
typedef struct _C1B4A013CC5F946450FAD8622ABE0A9E *XmTextBlockWcs;
typedef struct _XmTextClassRec XmTextClassRec;
typedef struct _XmTextFieldRec XmTextFieldRec;
typedef int XmTextPosition;
typedef struct _2EA2656FD07E452BFC8A303BAC941F0E XpmColorSymbol;
typedef struct _TranslationData *XtAccelerators;
typedef struct _XtCallbackRec *XtCallbackList;
typedef unsigned int XtGeometryMask;
typedef struct _7768503639F77374B09C8CE2FF45E7E1 XtPopdownIDRec;
typedef struct _XtResource *XtResourceList;
typedef struct _XtSaveYourselfRec *XtSaveYourself;
typedef struct _TranslationData *XtTranslations;
typedef struct _1E2A6A9B5EC919B5C597AB6887935210 *XtTypedArgList;
typedef struct _D08E3E427138D596819F8CEF4AEF4F32 _IcePaProtocol;
typedef struct _C091F8996EF5667AFF510FF5B2E0143E _IcePoProtocol;
struct _Uil_comp_desc {unsigned int compiler_version;unsigned int data_version;char *parse_tree_root;unsigned int message_count[5];};
struct _XImage__funcs {struct _XImage *( *create_image)();int ( *destroy_image)(struct _XImage *);unsigned int ( *get_pixel)(struct _XImage *, int, int);int ( *put_pixel)(struct _XImage *, int, int, unsigned int);struct _XImage *( *sub_image)(struct _XImage *, int, int, unsigned int, unsigned int);int ( *add_pixel)(struct _XImage *, int);};
struct _XkbReadBuffer {int error;int size;char *start;char *data;};
typedef struct _LC_core_ldx_t _XlcCoreObjRec;
struct _XmGadgetCache {struct _XmGadgetCache *next;struct _XmGadgetCache *prev;int ref_count;};
struct __fp_dbl_block {double ss_fp0;double ss_fp1;double ss_fp2;double ss_fp3;double ss_fp4;double ss_fp5;double ss_fp6;double ss_fp7;double ss_fp8;double ss_fp9;double ss_fp10;double ss_fp11;double ss_fp12;double ss_fp13;double ss_fp14;double ss_fp15;double ss_fp16;double ss_fp17;double ss_fp18;double ss_fp19;double ss_fp20;double ss_fp21;double ss_fp22;double ss_fp23;double ss_fp24;double ss_fp25;double ss_fp26;double ss_fp27;double ss_fp28;double ss_fp29;double ss_fp30;double ss_fp31;};
struct __fp_int_block {int ss_fpstat;int ss_fpexcept1;int ss_fpexcept2;int ss_fpexcept3;int ss_fpexcept4;int ss_fpexcept5;int ss_fpexcept6;int ss_fpexcept7;int ss_fp4_hi;int ss_fp4_lo;int ss_fp5_hi;int ss_fp5_lo;int ss_fp6_hi;int ss_fp6_lo;int ss_fp7_hi;int ss_fp7_lo;int ss_fp8_hi;int ss_fp8_lo;int ss_fp9_hi;int ss_fp9_lo;int ss_fp10_hi;int ss_fp10_lo;int ss_fp11_hi;int ss_fp11_lo;int ss_fp12_hi;int ss_fp12_lo;int ss_fp13_hi;int ss_fp13_lo;int ss_fp14_hi;int ss_fp14_lo;int ss_fp15_hi;int ss_fp15_lo;int ss_fp16_hi;int ss_fp16_lo;int ss_fp17_hi;int ss_fp17_lo;int ss_fp18_hi;int ss_fp18_lo;int ss_fp19_hi;int ss_fp19_lo;int ss_fp20_hi;int ss_fp20_lo;int ss_fp21_hi;int ss_fp21_lo;int ss_fp22_hi;int ss_fp22_lo;int ss_fp23_hi;int ss_fp23_lo;int ss_fp24_hi;int ss_fp24_lo;int ss_fp25_hi;int ss_fp25_lo;int ss_fp26_hi;int ss_fp26_lo;int ss_fp27_hi;int ss_fp27_lo;int ss_fp28_hi;int ss_fp28_lo;int ss_fp29_hi;int ss_fp29_lo;int ss_fp30_hi;int ss_fp30_lo;int ss_fp31_hi;int ss_fp31_lo;};
enum __lc_type_id_t {_LC_CAR = 0x1,_LC_LOCALE = 0x2,_LC_CHARMAP = 0x3,_LC_CTYPE = 0x4,_LC_COLLATE = 0x5,_LC_NUMERIC = 0x6,_LC_MONETARY = 0x7,_LC_TIME = 0x8,_LC_RESP = 0x9,};
enum __pofile_flags {UF_EXCLOSE = 0x1,UF_MAPPED = 0x2,UF_FDLOCK = 0x4,UF_INUSE = 0x8,};
enum __sched_policy {SCHED_INVALID = 0xFFFFFFFF,SCHED_FIFO = 0x0,SCHED_RR = 0x1,SCHED_HPUX = 0x2,SCHED_RR2 = 0x5,SCHED_RTPRIO = 0x6,SCHED_NOCHANGE = 0x7,};
typedef struct _db_header_struct *_db_header_ptr;
struct _output_data_t {unsigned int constant;};
typedef struct _FA574A2BD4AEE35634BB9215CFACAEE0 addr_ctrl_type;
typedef struct _A7DC40296C945E40AACCF86D5AC8BB16 aen_event_type;
struct audio_datainfo {unsigned int receive_nsamples;unsigned int receive_overrange_flag;unsigned int spare1[2];unsigned int receive_sample_sum[2];unsigned int spare2[2];unsigned int receive_sample_peak[2];unsigned int spare3[2];unsigned int transmit_nsamples;unsigned int spare4[3];unsigned int transmit_sample_sum[2];unsigned int spare5[2];unsigned int transmit_sample_peak[2];unsigned int spare6[4];unsigned short receive_meter_state;unsigned short spare7[3];unsigned short transmit_meter_state;unsigned short spare8[3];};
struct audio_describe {unsigned int audio_id;unsigned int nrates;unsigned int flags;unsigned int max_bits_per_sample;unsigned int nchannels;int min_receive_gain;int max_receive_gain;int min_transmit_gain;int max_transmit_gain;int min_monitor_gain;int max_monitor_gain;int sample_rate[8];int spare[12];};
typedef struct bp_dma_parms bp_dma_parms_t;
typedef struct _4F5DD4B298D84184D3112873FE652EAB buff_area_type;
typedef int buff_data_type;
typedef char char_buff_type[72];
struct cio_lnkst_type {int *link;int status;int *lastlink;int count;};
struct crt_fastlock_t {short locking_slot;unsigned char slot_array[2046];int future[511];unsigned int StateDescOffset;};
typedef struct _7ED2C0F08B69F76F0C0AC87A8A72CD48 dam_event_type;
typedef struct _DEC38AF16E696AF732A84E8DDBF5584E dam_reply_type;
typedef struct _1BB85DE3512B339811D8B67FC16B212D deviceValuator;
typedef struct _D90C9031D269F93C88B34E2B5464A64B die_reply_type;
typedef struct _754617B2EE88B16E3A92B4EAD52B067C dl_error_ack_t;
typedef struct _4C29AD0BCFB47FFEE01CCDA185D4E4DF dl_reply_ind_t;
typedef struct _9743F85D02716D406869F0C3FAA8980C dl_reply_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_reset_con_t;
typedef struct _094418222666B29D070F7EC8BDF6395B dl_reset_ind_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_reset_req_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_reset_res_t;
typedef struct _26CCD8212792FCB317923F27ED2E42C1 dl_token_ack_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_token_req_t;
typedef struct _E4ABD7D5EA2E8D1C1EE8F507E91AEFB5 dl_udqos_req_t;
typedef struct _3458ECA1217AB3E004713ABACF7C2EF2 dm_io_req_type;
typedef struct _422DE13ADF73A408267F5BA68732DCDA dm_mask_t_test;
typedef struct _9BF8B7FEFB40FCC7DC4E4D2CF29B580F dma_A_ars_type;
typedef struct _B98A3FFAF0CE02641AA237A8677CE1C6 dma_A_irs_type;
typedef struct _5BB4136DB11763AB16A801C866FA2FFA dma_A_srs_type;
typedef struct _894170B0EF0892045A226947D0AC1D57 dma_A_trs_type;
typedef struct _B98A3FFAF0CE02641AA237A8677CE1C6 dma_A_urs_type;
struct dmem_bush_type {unsigned int status_A;unsigned int addr_A;unsigned int synd_A;unsigned int status_B;unsigned int addr_B;unsigned int synd_B;};
typedef struct _51BDB5BB8E697D220A414B00E8CF85AE dot3_ext_mib_t;
typedef struct _7C51721F952AE208674F472DDD9AB61E dot5_ext_mib_t;
struct drv_table_type {int ( *iod_init)();int ( *iod_ident)();int ( *iod_clear_wopp)();int ( *iod_clear)();int ( *iod_scratch3)();int ( *iod_scratch4)();int ( *iod_tfr)();int ( *iod_pplset)();int ( *iod_pplclr)();int ( *iod_ppoll)();int ( *iod_spoll)();int ( *iod_preamb)();int ( *iod_postamb)();int ( *iod_mesg)();int ( *iod_hst)();int ( *iod_abort)();int ( *iod_ren)();int ( *iod_send_cmd)();int ( *iod_dil_abort)();int ( *iod_ctlr_status)();int ( *iod_set_ppoll_resp)();int ( *iod_srq)();int ( *iod_save_state)();int ( *iod_restore_state)();int ( *iod_io_check)();int ( *iod_dil_reset)();int ( *iod_status)();int ( *iod_pass_control)();int ( *iod_abort_io)();int ( *iod_scratch1)();int ( *iod_wait_set)();int ( *iod_wait_clr)();int ( *iod_intr_set)();struct drv_table_type__dma_chain *( *iod_dma_setup)();int ( *iod_set_addr)();int ( *iod_atn_ctl)();int ( *iod_reg_access)();int ( *iod_preamb_intr)();int ( *iod_scratch2)();};
struct element_status {unsigned short element;unsigned int full;unsigned char resv2;unsigned char sense_code;unsigned char sense_qualifier;unsigned int lun;unsigned char bus_address;unsigned char sub_lun;unsigned int resv4;unsigned short source_element;char pri_vol_tag[36];char alt_vol_tag[36];unsigned char misc_bytes[168];};
typedef entry_obj *entry_object_p;
typedef void (*f_endprpwent_t)(void);
typedef struct pr_passwd *(*f_getprpwent_t)(void);
typedef struct pr_passwd *( *f_getprpwnam_t)(char *);
typedef struct pr_passwd *( *f_getprpwuid_t)(int);
typedef int ( *f_putprpwnam_t)(char *, struct pr_passwd *);
typedef void (*f_setprpwent_t)(void);
typedef struct fc_frame_hdr fc_frame_hdr_t;
struct fclwp_str_stat {unsigned int no_port_drop;unsigned int window_drop;unsigned int mem_drop;unsigned int ctl_drop_c_i;unsigned int ctl_drop_c_r;unsigned int ctl_drop_eod;unsigned int ctl_drop_pkt_dis;unsigned int ooo_indication_rcv;unsigned int ooo_indication_sent;unsigned int send_q_full_wait;unsigned int xmit_error_resend;unsigned int connects;unsigned int accepts;};
typedef struct _B1C2EC637ADF5C0C2FC0B892BBB4B229 fl_volume_desc;
typedef struct __fp_dbl_block fp_dbl_block_t;
typedef struct __fp_int_block fp_int_block_t;
typedef struct frame_marker frame_marker_t;
enum gc_access_perm {GRAPH_ALLOW_ACCESS = 0x0,GRAPH_DISALLOW_ACCESS = 0x1,};
typedef struct _B6111FD2FBA814EB95A97461B6DFBCB3 gc_phys_addr_t;
typedef struct _85014B45290BE0AD558ABC6FDBC2A83C gpio0_msg_type;
typedef struct _62FDF7DDCD87E5F8C2E5C55156639A56 gpio0_pda_type;
typedef struct gpio1_ocs gpio1_ocs_type;
typedef struct _92512B1BC772871763CE6BA780016C1C gpio1_pda_type;
struct ioctl_cmd_type {char sc_state;int length;unsigned char data[122];};
typedef struct _A197BA92F4DBA6455332CB6FACE54059 iodc_type_type;
typedef struct kd_hardclock kd_hardclock_t;
typedef struct kd_queuedone kd_queuedone_t;
struct lasi_misc_regs {unsigned int pcr;unsigned int elr;unsigned int vcr;unsigned int iorr;unsigned int amr;int undefined[1019];};
typedef struct _3EC01B29E9C7693EBA183E8A62C6D0E0 limit_fmt_type;
typedef struct _67E48886874B973177B50A719F6BD031 log_align_type;
typedef struct _6095BE840E1ACBC7B5AC7593428C37D9 mib_ipRouteEnt;
typedef struct _D961FD5CCAA8184BC5759ED9932B4164 mib_physaddr_t;
typedef struct _ECEF055F1F15BE69869EA69D3AF4F0F6 mib_tcpConnEnt;
enum nispasswd_code {NPD_NOTMASTER = 0x0,NPD_NOSUCHENTRY = 0x1,NPD_IDENTINVALID = 0x2,NPD_NOPASSWD = 0x3,NPD_NOSHDWINFO = 0x4,NPD_SHDWCORRUPT = 0x5,NPD_NOTAGED = 0x6,NPD_CKGENFAILED = 0x7,NPD_VERFINVALID = 0x8,NPD_PASSINVALID = 0x9,NPD_ENCRYPTFAIL = 0xA,NPD_DECRYPTFAIL = 0xB,NPD_KEYSUPDATED = 0xC,NPD_KEYNOTREENC = 0xD,NPD_PERMDENIED = 0xE,NPD_SRVNOTRESP = 0xF,NPD_NISERROR = 0x10,NPD_SYSTEMERR = 0x11,NPD_BUFTOOSMALL = 0x12,NPD_INVALIDARGS = 0x13,};
struct per_open_entry {unsigned int timeout;struct proc *int_handler;short int_handler_pid;int po_lock_ct;struct per_open_entry *link;};
struct physiobufstats {unsigned int alloc_call;unsigned int alloc_hit;unsigned int alloc_miss;unsigned int alloc_sleep;unsigned int free_call;unsigned int free_hit;unsigned int free_miss;};
typedef struct prm_diskinfo prm_diskinfo_t;
typedef struct prm_disk_prio prm_diskprio_t;
typedef struct _F6BADC56E26A91DA12EC55F3CA8F7E89 probe_req_type;
typedef int pthread_attr_t;
typedef struct pthread_cond pthread_cond_t;
typedef struct _F37A617C30FC1EA156DDE3FD35569A2F pthread_once_t;
struct pthread_rwlock {short rw_short[2];int rw_int;int rw_int1[4];int rw_pad;void *rw_ptr;int rw_int2[2];short rw_short2[2];int rw_int3[5];int rw_int4[2];};
typedef struct ptrace_event ptrace_event_t;
typedef struct ptrace_state ptrace_state_t;
typedef struct _725E8F7C15FD9EA8CEABFA325DB9AE90 que_elements_t;
typedef struct _65610AF6115E0111CBDC28EBD9EDA308 read_prop_type;
typedef struct _3C2538FA24E756F47BA82769645E5270 reset_req_type;
typedef struct rw_lock rw_lock_data_t;
struct sioc_bus_parms {unsigned int flags;unsigned int max_width;unsigned int max_xfer_rate;unsigned int max_reqack_offset;unsigned int reserved[4];};
struct sioc_lun_parms {unsigned int flags;unsigned int max_q_depth;unsigned int reserved[4];};
struct sioc_tgt_parms {unsigned int flags;unsigned int width;unsigned int xfer_rate;unsigned int reqack_offset;unsigned int reserved[4];};
struct sockaddr_fclwp {short fclwp_family;short instance;unsigned int port;unsigned int fc_nna_hi;unsigned int fc_nna_lo;};
typedef struct _CE15CA8FCB6B9995A5D7B4D8593DCC23 sym_entry_type;
struct tli_tunables_s {int t_strmsgsz;int t_strctlsz;};
struct ufs_livetunefs {int ult_maxcontig;int ult_rotdelay;int ult_maxbpg;int ult_minfree;};
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef int  vfs_getmount_t(struct vfs *, char *, struct mount_data *, char *);
typedef struct _70E4CC7E54BA43D6E5622AB555079691 xAllocColorReq;
typedef struct _xButtonInfo *xButtonInfoPtr;
typedef struct _F88DFF0D39F146217256B482FD360ACC xChangeModeReq;
typedef struct _625DD72E42D2E4120693244DFAAD3348 xDPMSEnableReq;
typedef struct _81227E6A2E975B2588700A3A20196845 xDPMSInfoReply;
typedef struct _FC3BB1A81303FA005E7D17D8401F89AB xDeviceBellReq;
typedef struct _xDeviceInfo *xDeviceInfoPtr;
typedef struct _BDA7F7EC09C455D172B8FEBDBF052954 xFeedbackState;
typedef struct _091A8121C3C792D8858188DBB434C01C xFreeColorsReq;
typedef struct _1E68C84E6BE3B673D767CBEC47B3DECA xGetImageReply;
typedef struct _03C803DDC9061B143F519D4D73BD5571 xGrabButtonReq;
typedef struct _EDE17C06FAF221A5878FFED27CF569B6 xGrabDeviceReq;
typedef struct _1C6F78A52A2103385BA76901F31344C9 xHPSSChangeReq;
typedef struct _1CAD30E49B94B49075115A0AFC290EB7 xHPdevicefocus;
typedef struct _7A455DB3BD331D79AF16B3231F86E0C5 xInternAtomReq;
typedef struct _8973D72E68A3D7427BDE924AB847E810 xOpenDeviceReq;
typedef struct _5611E7A482769785DE0F79EE532E4EC7 xPropSizeHints;
typedef struct _75E019FCB4A579099C3FEBED6B229425 xValuatorState;
typedef struct _9CB99F55F4760567A5B7FA05D1482C33 xieFloAllocErr;
typedef struct _600CE1F1415CC4FBB5A956C0A4B10C91 xieFloConvolve;
typedef struct _8D5227D256EF5B5AEB1F500684CBE9EC xieFloGeometry;
typedef struct _9CB99F55F4760567A5B7FA05D1482C33 xieFloMatchErr;
typedef struct _8F45B6188928CD01F0FDE0FF1AAE7BC1 xieFloValueErr;
typedef struct _5D8B4C88FE874254192A5C2673EF8027 xieResourceErr;
typedef struct _7228480D3079CE2808B81A1C1362B902 xieTecRGBToYCC;
typedef struct _E27231AA724DCAE1F187F811797F6BBB xieTecYCCToRGB;
typedef struct _xkbGetMapReply xkbGetMapReply;
typedef struct _xkbGetNames xkbGetNamesReq;
typedef struct _xkbGetState xkbGetStateReq;
typedef struct _xkbKeyWireDesc xkbKeyWireDesc;
typedef struct _xkbNamesNotify xkbNamesNotify;
typedef struct _xkbRowWireDesc xkbRowWireDesc;
typedef struct _xkbSetNames xkbSetNamesReq;
typedef struct _xkbStateNotify xkbStateNotify;
typedef struct _xkmKeyTypeDesc xkmKeyTypeDesc;
typedef struct _xkmSectionInfo xkmSectionInfo;
struct xsense_aligned {unsigned int error_code;unsigned char seg_num;unsigned int sense_key;unsigned char lba[4];unsigned char add_len;unsigned char copysearch[4];unsigned char sense_code;unsigned char resv;unsigned char fru;unsigned char field;unsigned char field_ptr[2];unsigned char dev_error[4];unsigned char misc_bytes[106];};
struct ypall_callback {int ( *foreach)();char *data;};
struct yppushresp_xfr {unsigned int transid;unsigned int status;};
struct ypresp_maplist {unsigned int status;struct ypmaplist *list;};
typedef struct _CompositePart CompositePart;
typedef struct _ConstraintRec ConstraintRec;
typedef struct _CoreClassPart CoreClassPart;
enum MACRO_ACWMASK {ACWMASK = 0x7F0FFFE,};
enum MACRO_ADAPTER {ADAPTER_INFO = 1,SET_OPTIONS = 2,SEND_SCSI_ABORT = 3,RESET_SCSI_BUS = 4,SET_TRANSFER_MODE = 5,};
enum MACRO_ANYMARK {ANYMARK = 0x1,LASTMARK = 0x2,};
enum MACRO_AUD_GET {AUD_GET = 0x1,AUD_SETNEXT = 0x2,AUD_SETCURR = 0x3,AUD_ON = 0x4,AUD_OFF = 0x5,AUD_SWITCH = 0x6,AUD_STREAM_INIT = 0x7,AUD_DRIVER_INIT = 0x8,};
enum MACRO_A_ERROR {A_ERROR = 0,A_DO_BIND = 1,A_BIND = 2,A_IDENT = 3,A_ABORT = 4,A_DAP_LOAD = 5,A_CLEAR = 6,A_IO = 7,A_READ = 8,A_STAT = 9,A_STORE_READ = 10,A_LDM_REPLY = 11,A_STORE_STAT = 12,A_P_ON = 13,A_QUICK = 14,A_DIAG = 15,A_DIAG_REP = 16,A_HARD_ID = 17,A_STAT_REP = 18,};
enum MACRO_BC_PORT {BC_PORT_MASK = 0x8,BC_UPPER_PORT = 0x0,};
enum MACRO_BI2_ICS {BI2_ICS_PDC_CALL = 1,};
enum MACRO_BLOCKED {BLOCKED = 0x100000,};
enum MACRO_BOOTDEV {BOOTDEV_READ = 0,BOOTDEV_WRITE = 1,BOOTDEV_CLOSE = 4,DELTA_TO_HPA = 32,DELTA_TO_SPA = 36,DELTA_TO_IODC = 40,BOOT_MEM_AREA = 976,};
enum MACRO_BQUEUES {BQUEUES = 4,BQ_LRU = 0,};
enum MACRO_BUTTON1 {BUTTON1 = 0x1,BUTTON2 = 0x2,BUTTON3 = 0x4,BUTTON4 = 0x8,BUTTON5 = 0x10,};
enum MACRO_B_CACHE {B_CACHE_SIZE = 2,};
enum MACRO_B_DEPTH {B_DEPTH = 10,CHUNKENT = 32,};
enum MACRO_B_inode {B_inode = 0x10,B_dir = 0x20,B_cylgrp = 0x30,B_sblock = 0x40,B_indbk = 0x50,B_data = 0x60,B_fifo = 0x70,B_args = 0x80,B_swpbf = 0x90,B_phybf = 0xA0,B_pagebf = 0xB0,B_lvmbf = 0xC0,B_cachebf = 0xD0,B_kvm = 0xE0,B_no_data = 0xF0,};
enum MACRO_Button1 {Button1 = 1,Button2 = 2,Button3 = 3,Button4 = 4,Button5 = 5,};
enum MACRO_CANDELA {CANDELA_1 = 0x1,CANDELA_2 = 0x2,CANDELA_3 = 0x3,CANDELA_4 = 0x4,EXP_5 = 0x5,EXP_6 = 0x6,EXP_7 = 0x7,EXP_MINUS_8 = 0x8,EXP_MINUS_7 = 0x9,EXP_MINUS_6 = 0xA,EXP_MINUS_5 = 0xB,EXP_MINUS_4 = 0xC,EXP_MINUS_3 = 0xD,EXP_MINUS_2 = 0xE,EXP_MINUS_1 = 0xF,};
enum MACRO_CA_STOP {CA_STOP = 0,CA_CHAIN = 2,CA_RST = 5,};
enum MACRO_CB_PROG {CB_PROG = 100302,CB_VERS = 1,};
enum MACRO_CDWRITE {CDWRITE = 0x80,};
enum MACRO_CHANNEL {CHANNEL_0_SELECT = 0x0,CHANNEL_1_SELECT = 0x1,CHANNEL_2_SELECT = 0x2,CHANNEL_3_SELECT = 0x3,};
enum MACRO_CHARMAP {CHARMAP___MBSTOPCS = 0x0,CHARMAP___MBTOPC = 0x1,CHARMAP___PCSTOMBS = 0x2,CHARMAP___PCTOMB = 0x3,CHARMAP_CHARMAP_INIT = 0x5,CHARMAP_MBLEN = 0x6,CHARMAP_MBSTOWCS = 0x7,CHARMAP_MBTOWC = 0x8,CHARMAP_NL_LANGINFO = 0x9,CHARMAP_WCSTOMBS = 0xB,CHARMAP_WCSWIDTH = 0xC,CHARMAP_WCTOMB = 0xD,CHARMAP_WCWIDTH = 0xE,COLLATE_FNMATCH = 0xF,COLLATE_REGCOMP = 0x10,COLLATE_REGERROR = 0x11,COLLATE_REGEXEC = 0x12,COLLATE_REGFREE = 0x13,COLLATE_STRCOLL = 0x14,COLLATE_STRXFRM = 0x15,COLLATE_WCSCOLL = 0x16,COLLATE_WCSXFRM = 0x17,COLLATE_COLLATE_INIT = 0x18,CTYPE_WCTYPE = 0x19,CTYPE_CTYPE_INIT = 0x1A,CTYPE_ISWCTYPE = 0x1B,CTYPE_TOWLOWER = 0x1C,CTYPE_TOWUPPER = 0x1D,LOCALE_LOCALE_INIT = 0x1E,LOCALE_LOCALECONV = 0x1F,LOCALE_NL_LANGINFO = 0x20,MONETARY_MONETARY_INIT = 0x21,MONETARY_NL_LANGINFO = 0x22,MONETARY_STRFMON = 0x23,NUMERIC_NUMERIC_INIT = 0x2B,NUMERIC_NL_LANGINFO = 0x2C,RESP_RESP_INIT = 0x2D,RESP_NL_LANGINFO = 0x2E,RESP_RPMATCH = 0x2F,TIME_TIME_INIT = 0x30,TIME_NL_LANGINFO = 0x31,TIME_STRFTIME = 0x32,TIME_STRPTIME = 0x33,TIME_WCSFTIME = 0x34,};
enum MACRO_CHEETAH {CHEETAH_BC = 0x4,BC1_SMODEL = 0xC,BC_MODE_MASK = 0x180,};
enum MACRO_CIO_AEK {CIO_AEK_COMMAND = 1,CIO_DA_SELFTEST = 2,CIO_DA_STATUS = 3,CIO_DA_ASYNC_ENABLE = 4,CIO_DA_ASYNC_DISABLE = 5,CIO_SET_DA_BLOCKSIZE = 6,CIO_DA_PARITY_ENABLE = 7,CIO_DA_LOGCH_ENABLE = 8,CIO_DA_LOGCH_DISABLE = 9,CIO_GET_DIRECT_IO_PTR = 10,CIO_GET_DA_TYPE = 11,};
enum MACRO_CIO_CLC {CIO_CLC_BUFFER_ERROR = -27,};
enum MACRO_CIO_DAM {CIO_DAM_IS_ALREADY_BOUND = -6,};
enum MACRO_CIO_DEV {CIO_DEV_ADAPTER_NOT_READY = -35,};
enum MACRO_CIO_DMA {CIO_DMA_IO_REQ_MSG = 100,CIO_DMA_IO_REPLY_MSG = 101,CIO_CTRL_REQ_MSG = 102,CIO_CTRL_REPLY_MSG = 103,CIO_IO_EVENT_MSG = 104,CIO_INTERRUPT_MSG = 105,CIO_POLL_DMA_REQ_MSG = 106,CIO_POLL_ASYNC_MSG = 107,CIO_DMA_DUMP_REQ_MSG = 108,CIO_PQUAD_DMA_REQ_MSG = 109,START_HPIB_MSG = 110,};
enum MACRO_CIO_IDY {CIO_IDY_ORDER = 0x8,CIO_DLD_ORDER = 0x10,CIO_DLD1_ORDER = 0x11,CIO_PAU_ORDER = 0x20,CIO_DIS_ORDER = 0x30,CIO_RS_WORD_ORDER = 0x40,CIO_RS_WORD_DIS_ORDER = 0x41,CIO_RS_BYTE_ORDER = 0x48,CIO_RS_BYTE_DIS_ORDER = 0x49,CIO_WC_WORD_ORDER = 0x50,CIO_WC_BYTE_ORDER = 0x58,CIO_RD_WORD_ORDER = 0x60,CIO_RD_BYTE_ORDER = 0x68,CIO_WD_WORD_ORDER = 0x70,CIO_WD_BYTE_ORDER = 0x78,CIO_RTS_ORDER = 0x88,CIO_WTC_ORDER = 0x98,CIO_RDS_ORDER = 0xA0,CIO_RDS1_ORDER = 0xA1,CIO_CLC_ORDER = 0xB8,CIO_MEMORY_SEND_FAILED = 0xFFFFFFFF,};
enum MACRO_CIO_NON {CIO_NON_ZERO_RESIDUE = 36,CIO_ILLEGAL_ADDR_CLASS = -37,};
enum MACRO_CIO_RTS {CIO_RTS_CTRL_RLC = 0x1,CIO_RTS_CTRL_EOD = 0x2,CIO_RTS_CTRL_DLC = 0x3,CIO_RTS_CTRL_AEK = 0x4,};
enum MACRO_CL_MASK {CL_MASK = 0xF,};
enum MACRO_CMDinit {CMDinit_element_status = 0x7,CMDread_element_status = 0xB8,};
enum MACRO_CMDload {CMDload_display = 0x6,CMDload_display_fujitsu = 0xCF,};
enum MACRO_CMDmove {CMDmove_medium = 0xA5,CMDexchange_medium = 0xA6,};
enum MACRO_CMDread {CMDread_6 = 0x8,};
enum MACRO_CMDtest {CMDtest_unit_ready = 0x0,CMDrequest_sense = 0x3,CMDinquiry = 0x12,CMDsend_diagnostic = 0x1D,};
enum MACRO_CMP_DLT {CMP_DLT = 0x10,CMP_AIT = 0x3,};
enum MACRO_CMP_LTO {CMP_LTO = 0x1,};
enum MACRO_CNSWTCH {CNSWTCH = 0,CREPRINT = 18,};
enum MACRO_COMMAND {COMMAND = 48,};
enum MACRO_COMPOSE {COMPOSE_LED = 0x8,};
enum MACRO_CONNECT {CONNECT_EVENT = 0,MODEM_LOST_EVENT = 1,SIGNAL_EVENT = 2,};
enum MACRO_CONSOLE {CONSOLE_READ = 2,CONSOLE_WRITE = 3,};
enum MACRO_COUNTER {COUNTER_LATCH = 0x0,RW_LEAST = 0x10,RW_MOST = 0x20,RW_BOTH = 0x30,};
enum MACRO_CPS_ANY {CPS_ANY_NODE = -2,};
enum MACRO_CPS_FAR {CPS_FAR_STACK = 0,CPS_NEAR_STACK = 1,CPS_NODE_STACK = 2,};
enum MACRO_CPS_GET {CPS_GET_STACK_SIZE = 0,CPS_SET_STACK_SIZE = 1,CPS_GET_STACK_SCOPE = 2,CPS_SET_STACK_SCOPE = 3,};
enum MACRO_CR_PDIR {CR_PDIR = 24,CR_HTBL = 25,CR_TR2 = 26,CR_TR3 = 27,};
enum MACRO_CR_TLSP {CR_TLSP = 27,CR_TR4 = 28,CR_TR5 = 29,CR_TR6 = 30,CR_TR7 = 31,CCR_MASK = 255,PID_MASK = 65535,};
enum MACRO_CS80_EX {CS80_EX_TO = -94,};
enum MACRO_CTR_RST {CTR_RST = 0x20,};
enum MACRO_CURRENT {CURRENT = 0,CHANGEABLE = 1,DEFAULT = 2,SAVED = 3,};
enum MACRO_C_ELOOP {C_ELOOP = 0x7E,};
enum MACRO_C_ERROR {C_ERROR = 0,C_DO_BIND = 1,C_BIND_REPLY = 2,};
enum MACRO_C_ISCHR {C_ISCHR = 0x2000,C_ISCTG = 0x9000,C_ISLNK = 0xA000,C_ISSOCK = 0xC000,};
enum MACRO_C_ISDIR {C_ISDIR = 0x4000,C_ISFIFO = 0x1000,};
enum MACRO_C_ISREG {C_ISREG = 0x8000,C_ISBLK = 0x6000,};
enum MACRO_C_ISUID {C_ISUID = 0x800,C_ISGID = 0x400,C_ISVTX = 0x200,};
enum MACRO_Complex {Complex = 0,Nonconvex = 1,Convex = 2,};
enum MACRO_DAM_DAM {DAM_DAM_TABLE_ERR = -111,};
enum MACRO_DAM_GET {DAM_GET_MSG_FRAME_ERR = -7,};
enum MACRO_DAM_MAX {DAM_MAX_UIDS = 9,DAM_MAX_VQUADS = 4,};
enum MACRO_DAM_REQ {DAM_REQ_PTRS_ERR = -6,};
enum MACRO_DAM_REV {DAM_REV_CODE = 920701,};
enum MACRO_DAM_STD {DAM_STD_BLOCKSIZE = 64,};
enum MACRO_DAP_DEV {DAP_DEV_LOCKED_ERR = -27,};
enum MACRO_DAP_NOT {DAP_NOT_PRESENT = -29,};
enum MACRO_DA_DATA {DA_DATA_FROZEN = -37,};
enum MACRO_DA_IDLE {DA_IDLE = 0,DA_BUSY = 1,DA_PFAIL = 2,DA_NOTPRESENT = 3,DA_SICKCARD = 4,};
enum MACRO_DA_INIT {DA_INIT_SUBQ_MASK = -2013265920,REPLY_SUBQ_MASK = -939524096,NORMAL_SUBQ_MASK = -369098752,};
enum MACRO_DA_READ {DA_READ = 0x1,DA_WRITE = 0x2,DA_EXCLUSIVE = 0x4,DA_WHOLE_DEV = 0x8,};
enum MACRO_DBL_MAX {DBL_MAX_EXP = 1024,DBL_MAX_10_EXP = 308,};
enum MACRO_DBL_MIN {DBL_MIN_EXP = -1021,DBL_MIN_10_EXP = -307,};
enum MACRO_DEFAULT {DEFAULT_TIMEO = 7,};
enum MACRO_DENSITY {DENSITY_MAX = 0xFF,};
enum MACRO_DEN_800 {DEN_800 = 0x1,DEN_1600 = 0x2,DEN_6250 = 0x3,DEN_6250c = 0xC3,};
enum MACRO_DEN_8MM {DEN_8MM_8200 = 0x14,DEN_8MM_8200c = 0x90,};
enum MACRO_DEN_AIT {DEN_AIT = 0x30,DEN_U_18 = 0x40,};
enum MACRO_DEN_DLT {DEN_DLT_6667 = 0xA,DEN_DLT_10000 = 0x16,DEN_DLT_42500_24 = 0x17,DEN_DLT_42500_56 = 0x18,DEN_DLT_62500_64x = 0x19,DEN_DLT_81633_64x = 0x1A,DEN_DLT_85937_52x = 0x1B,DEN_DLT_98250_52x = 0x41,DEN_DLT_133000_56x = 0x48,DEN_DLT_62500_64 = 0x80,DEN_DLT_62500_64c = 0x81,DEN_DLT_81633_64 = 0x82,DEN_DLT_81633_64c = 0x83,DEN_DLT_85937_52 = 0x84,DEN_DLT_85937_52c = 0x85,DEN_DLT_123100_84 = 0x86,DEN_DLT_123100_84c = 0x87,DEN_DLT_98250_52 = 0x88,DEN_DLT_98250_52c = 0x89,DEN_DLT_133000_56 = 0x90,DEN_DLT_133000_56c = 0x91,};
enum MACRO_DEN_M_U {DEN_M_U_18 = 1,DEN_M_U_18c = 2,CMP_DEFAULT = 3567,};
enum MACRO_DEN_QIC {DEN_QIC_24 = 0x5,DEN_QIC_120 = 0xF,DEN_QIC_150 = 0x10,DEN_QIC_525 = 0x11,DEN_QIC_1000 = 0x15,};
enum MACRO_DEVICE2 {DEVICE_RESOLUTION = 1,};
enum MACRO_DEVMASK {DEVMASK = 255,};
enum MACRO_DH1_BUF {DH1_BUF_FULL = 0x40,DH1_NOT_ENOUGH_SPACE = 0x80,DH1_NOT_ENOUGH_DATA = 0x100,DH1_INVALID_CMD = 0x200,DH1_UNIMPLEMENTED = 0x400,DH1_INVALID_REG_OFFSET = 0x800,DH1_INVALID_TIMEOUT = 0x1000,DH1_INVALID_WAIT_OPT = 0x2000,DH1_INVALID_INT_POLL_OPT = 0x4000,DH1_NOT_LOCKED = 0x8000,DH1_LOCKED_BY_OTHER = 0x10000,DH1_ALREADY_LOCKED = 0x20000,DH1_ALREADY_UNLOCKED = 0x40000,DH1_EARLY_EOC = 0x80000,DH1_TIMEOUT = 0x200000,DH1_HW_PROBLEM = 0x1000000,DH1_SW_PROBLEM = 0x2000000,DH1_BAD_CHECKSUM = 0x4000000,DH1_CARD_NOT_PRESENT = 0x8000000,DH1_POWERFAIL = 0x10000000,DH1_UNEXPECTED_INTERRUPT = 0x80000000,};
enum MACRO_DIN_CLK {DIN_CLK_PCTL_SET_TO_CLEAR = 4,DIN_CLK_PFLG_READY_TO_BUSY = 16,DIN_CLK_PCTL_CLEAR_TO_SET = 20,DIN_CLK_READ_OF_LO_BYTE = 24,DIN_CLK_READ_OF_HI_BYTE = 28,LOGIC_SENSE_SIZE = 224,};
enum MACRO_DISABLE {DISABLE_CHAINING = 0x0,ENABLE_CHAINING = 0x4,START_CHAINING = 0x8,ON_CHAIN_TERMINATION = 0x10,};
enum MACRO_DISCARD {DISCARD_OLDEST = 0,DISCARD_NEWEST = 1,};
enum MACRO_DKFAULT {DKFAULT = 0x8000,DKNOINIT = 0xC000,};
enum MACRO_DKRESET {DKRESET = 0x8002,DKPWR = 0x8004,DKDGNSET = 0x8008,DKDGNACT = 0x8010,DKDGNDON = 0x8020,DKDGNRES = 0x8040,DKCPMERR = 0x8080,DKINITERR = 0x8100,};
enum MACRO_DL_AUTO {DL_AUTO_XID = 0x1,DL_AUTO_TEST = 0x2,};
enum MACRO_DL_BIND {DL_BIND_REQ = 0x1,DL_BIND_ACK = 0x4,};
enum MACRO_DL_FACT {DL_FACT_PHYS_ADDR = 0x1,DL_CURR_PHYS_ADDR = 0x2,};
enum MACRO_DL_INFO {DL_INFO_ACK = 0x3,DL_ATTACH_REQ = 0xB,DL_DETACH_REQ = 0xC,};
enum MACRO_DL_LOAD {DL_LOAD_PRE_INIT = 0x1,DL_LOAD_POST_INIT = 0x2,DL_LOAD_COMPLETE = 0x4,DL_UNLOAD_PRE_FINI = 0x8,DL_UNLOAD_POST_FINI = 0x10,DL_UNLOAD_COMPLETE = 0x20,DL_BOR = 0x40,DL_DYN_OPD_POST_INIT = 0x80,DL_TERMINATE_START = 0x100,};
enum MACRO_DL_PEER {DL_PEER_BIND = 0x1,DL_HIERARCHICAL_BIND = 0x2,};
enum MACRO_DL_POLL {DL_POLL_FINAL = 0x1,};
enum MACRO_DL_RQST {DL_RQST_RSP = 0x1,DL_RQST_NORSP = 0x2,};
enum MACRO_DL_SUBS {DL_SUBS_UNBIND_REQ = 0x15,DL_ENABMULTI_REQ = 0x1D,DL_DISABMULTI_REQ = 0x1E,DL_PROMISCON_REQ = 0x1F,DL_PROMISCOFF_REQ = 0x20,};
enum MACRO_DMAXEXP {DMAXEXP = 1024,};
enum MACRO_DMA_ISA {DMA_ISA = 0x1,DMA_TYPEA = 0x2,DMA_TYPEB = 0x4,DMA_BURST = 0x8,};
enum MACRO_DM_SEND {DM_SEND_ERROR = -10,};
enum MACRO_DONTUSE {DONTUSE_IDX = 2147483646,};
enum MACRO_DV_NT_E {DV_NT_E = -12,};
enum MACRO_ECHOCTL {ECHOCTL = 256,ECHOPRT = 512,ECHOKE = 1024,FLUSHO = 2048,PENDIN = 4096,};
enum MACRO_ELFMAG1 {ELFMAG1 = 69,ELFMAG2 = 76,};
enum MACRO_ELFMAG3 {ELFMAG3 = 70,};
enum MACRO_ENODATA {ENODATA = 51,ETIME = 52,ENOSR = 53,ENOSTR = 54,ENOLINK = 57,EPROTO = 61,EMULTIHOP = 64,EBADMSG = 67,EDQUOT = 69,ESTALE = 70,EOVERFLOW = 72,};
enum MACRO_ENOLOAD {ENOLOAD = 152,ERELOC = 153,ENOMATCH = 154,ENOUNLD = 155,EBADVER = 156,ECONFIG = 157,ENOREG = 158,ENOUNREG = 159,};
enum MACRO_ENOTBLK {ENOTBLK = 15,ETXTBSY = 26,ENOMSG = 35,EIDRM = 36,ELOOP = 249,};
enum MACRO_FAILURE {FAILURE = -1,};
enum MACRO_FEATURE {FEATURE = 0xA,END_COLLECTION = 0xC,};
enum MACRO_FILTERD {FILTERD = 1,};
enum MACRO_FIOCLEX {FIOCLEX = 536897025,FIONCLEX = 536897026,};
enum MACRO_FLT_MAX {FLT_MAX_EXP = 128,FLT_MAX_10_EXP = 38,};
enum MACRO_FLT_MIN {FLT_MIN_EXP = -125,FLT_MIN_10_EXP = -37,};
enum MACRO_FMAXEXP {FMAXEXP = 128,};
enum MACRO_FM_CLUP {FM_CLUP = -12,};
enum MACRO_FM_ESR4 {FM_ESR4 = -28,};
enum MACRO_FNBLOCK {FNBLOCK = 0x10000,FNOCTTY = 0x20000,FMASK = 0xF880F,};
enum MACRO_FORMERR {FORMERR = 1,SERVFAIL = 2,NXDOMAIN = 3,NOTIMP = 4,REFUSED = 5,NOCHANGE = 15,};
enum MACRO_FPU_SF1 {FPU_SF1 = 96,FPU_SF2 = 104,FPU_SF3 = 112,FPU_SF4 = 120,};
enum MACRO_FPU_SF5 {FPU_SF5 = 128,FPU_SF6 = 136,FPU_SF7 = 144,FPU_SF8 = 152,FPU_SF9 = 160,FPU_SF10 = 168,};
enum MACRO_FSTYPSZ {FSTYPSZ = 16,};
enum MACRO_FSYNCIO {FSYNCIO = 32768,FDSYNC = 262144,FRSYNC = 524288,};
enum MACRO_FS_STOP {FS_STOP = 0,FS_START = 1,FS_STATE = 2,FS_ID = 3,FS_CHUID = 4,FS_CHPID = 5,FS_CHPGRP = 6,FS_ADD = 7,FS_DELETE = 8,FS_READ = 9,FS_SHARES = 10,FS_CAROUSEL = 11,FS_DONT_USE1 = 12,FS_DONT_USE2 = 13,FS_DONT_USE3 = 14,FS_TICKS = 15,FS_GETSEQUENCE = 16,FS_CAP_ON = 17,FS_CAP_OFF = 18,FS_CAP_STATE = 19,PRM_DISK_ADD = 30,PRM_DISK_DELETE = 31,PRM_DISK_INFO = 32,PRM_DISK_START = 33,PRM_DISK_STOP = 34,PRM_DISK_STATE = 35,PRM_DISK_BYFSID = 36,ALL_DISK = -1,};
enum MACRO_FTLEXIT {FTLEXIT = 0x1,};
enum MACRO_FTLFUNC {FTLFUNC = 0x2000,};
enum MACRO_F_RDLCK {F_RDLCK = 0x1,F_WRLCK = 0x2,F_UNLCK = 0x3,};
enum MACRO_F_ULOCK {F_ULOCK = 0,F_LOCK = 1,F_TLOCK = 2,F_TEST = 3,_SC_IOV_MAX = 2100,_SC_XOPEN_UNIX = 2101,};
enum MACRO_GCNOITE {GCNOITE = 536889120,};
enum MACRO_GEN_REQ {GEN_REQ_PENDING = 0,GEN_POWERON = 1,GEN_LOCKED = 2,GEN_RETRYING = 3,GEN_RECOVERY = 4,GEN_HW_SICK = 5,GEN_HW_DEAD = 6,GEN_RESOURCES = 7,};
enum MACRO_GETNCNT {GETNCNT = 3,GETPID = 4,GETVAL = 5,GETALL = 6,GETZCNT = 7,SETVAL = 8,SETALL = 9,};
enum MACRO_GP_DMA0 {GP_DMA0 = 0x1,GP_DMA1 = 0x2,GP_WORD = 0x4,GP_BURST = 0x8,GP_ENAB = 0x80,};
enum MACRO_GP_EIR1 {GP_EIR1 = 0x1,GP_EIR0 = 0x0,};
enum MACRO_GRAPHIC {GRAPHIC_1_INT_LINE = 20,GRAPHIC_1_INT_MASK = 2048,};
enum MACRO_GXclear {GXclear = 0x0,GXand = 0x1,GXandReverse = 0x2,GXcopy = 0x3,GXandInverted = 0x4,GXnoop = 0x5,GXxor = 0x6,GXor = 0x7,GXnor = 0x8,GXequiv = 0x9,GXinvert = 0xA,GXorReverse = 0xB,GXcopyInverted = 0xC,GXorInverted = 0xD,GXnand = 0xE,GXset = 0xF,};
enum MACRO_HID_ALL {HID_ALL_TMAT = 0x2000500A,HID_ALL_MKBRK = 0x2000500B,HID_ALL_TMAT_MKBRK = 0x2000500C,HID_ALL_MK = 0x2000500D,};
enum MACRO_HP2631A {HP2631A_HP2635A = 0x2,HP2235B = 0xD,HP3630A = 0xE,};
enum MACRO_HP2631B {HP2631B_SUP = 0x9,};
enum MACRO_HP2631G {HP2631G_SUP = 0x2,HP2602 = 0x11,};
enum MACRO_HP2932A {HP2932A_SUP = 0x10,};
enum MACRO_HPE1480 {HPE1480 = 38,DIGITAL_AUDIO = 39,HP25560 = 41,IOSTART_ADDR = 4194304,START_ADDR = 6291456,};
enum MACRO_HPIB_IO {HPIB_IO_REQ_MSG = 110,HPIB_IO_REPLY_MSG = 111,HPIB_IO_EVENT_MSG = 112,HPIB_DUMP_REQ_MSG = 113,START_DM_MSG = 120,};
enum MACRO_HP_UTF8 {HP_UTF8 = 1,};
enum MACRO_HREFINV {HREFINV = 0x0,};
enum MACRO_HW_DUMP {HW_DUMP_RAM = 0,HW_DUMP_CONTR = 1,HW_DUMP_RESER2 = 2,HW_DUMP_RESER3 = 3,HW_DUMP_RESER4 = 4,HW_DUMP_RESER5 = 5,HW_DUMP_RESER6 = 6,HW_DUMP_RESER7 = 7,};
enum MACRO_HW_META {HW_META_TAG = -3,};
enum MACRO_IBSHIFT {IBSHIFT = 24,};
enum MACRO_IEEESAP {IEEESAP_IP = 0x6,IEEESAP_SNAP = 0xAA,IEEESAP_OSI = 0xFE,};
enum MACRO_IERRORS {IERRORS = 5,};
enum MACRO_IGMPMSG {IGMPMSG_NOCACHE = 1,IGMPMSG_WRONGVIF = 2,};
enum MACRO_ILLEGAL {ILLEGAL_CHANNEL = -7,};
enum MACRO_ILLGLPH {ILLGLPH = -7,};
enum MACRO_ILOCKED {ILOCKED = 0x1,ISHARED = 0x2,IPAUSED = 0x4,IWANT = 0x10,};
enum MACRO_IMPLINK {IMPLINK_IP = 155,IMPLINK_LOWEXPER = 156,IMPLINK_HIGHEXPER = 158,};
enum MACRO_INET_IP {INET_IP = 0x0,IP_OPTIONS = 0x1,IP_TOS = 0x8,IP_TTL = 0x10,IP_REUSEADDR = 0x1E,IP_DONTROUTE = 0x1F,IP_BROADCAST = 0x20,};
enum MACRO_INIT_LC {INIT_LC = 0x28,INT_LNKST = 0x88,};
enum MACRO_INT16SZ {INT16SZ = 2,INADDRSZ = 4,NAMESERVER_PORT = 53,};
enum MACRO_INT32SZ {INT32SZ = 4,};
enum MACRO_INT_OPT {INT_OPT = 1,};
enum MACRO_INVALID {INVALID_NS_SUBSYS_ID = 1,INVALID_NS_LOG_CLASS = 2,INVALID_NS_LOG_EVENT = 3,};
enum MACRO_INVPHRC {INVPHRC = -11,};
enum MACRO_IOCPARM {IOCPARM_MASK = 8191,EFFECTIVE_IOCSIZE_MASK = 8323072,};
enum MACRO_IOCSIZE {IOCSIZE_MASK = 0x1FFF0000,};
enum MACRO_IOCTYPE {IOCTYPE = 0xFF00,};
enum MACRO_IOSPACE {IOSPACE_MASK = 0xF0000000,IO_BROADCAST = 0xFFFC0000,};
enum MACRO_IO_DIAG {IO_DIAG_MAX_BUF_LEN = 72,};
enum MACRO_IO_RDWR {IO_RDWR = 2,IO_READ_START = 4,IO_ALWAYS = 8,IO_MODIFIED = 16,IO_ACCESSED = 32,};
enum MACRO_IO_READ {IO_READ = 0x1,};
enum MACRO_IO_SAFE {IO_SAFE = 0x2,};
enum MACRO_IO_SEMA {IO_SEMA = 0x1000,IO_IGN_ALIGNMENT = 0x2000,IO_CONTIGUOUS = 0x4000,IO_ALIGN_BUF = 0x40000,};
enum MACRO_IO_SYNC {IO_SYNC_FORCPU = 1,};
enum MACRO_IPPROTO {IPPROTO_IP = 0,IPPROTO_ICMP = 1,IPPROTO_IGMP = 2,IPPROTO_GGP = 3,IPPROTO_IPIP = 4,};
enum MACRO_KEY_CNT {KEY_CNT = 1,};
enum MACRO_KEY_MIN {KEY_MIN = 0x101,KEY_MOUSE = 0x199,KEY_MAX = 0x1FF,};
enum MACRO_KEY_SET {KEY_SET = 1,KEY_ENCRYPT = 2,KEY_DECRYPT = 3,KEY_GEN = 4,KEY_GETCRED = 5,};
enum MACRO_LANTEST {LANTEST_TYPE = 0x810,};
enum MACRO_LANUNIT {LANUNIT_ETHERNET = 49,LANUNIT_IEEE802 = 50,};
enum MACRO_LE_AXIN {LE_AXIN_EVENT_BUT_NO_SERVER = 1000,LE_AXIN_REQ_BUT_NO_SERVER = 1001,LE_AXIN_READ_LOG_TABLE_FAILED = 1002,LE_AXIN_SETUP_SERVER_FAILED = 1003,AXIN_GET_PZLU_ZCS_FAILED = 1004,AXIN_ZCOM_NOT_UP = 1005,AXIN_ZINIT_FAILED = 1006,AXIN_ZOPEN_FAILED = 1007,LE_AXIN_PDA_TOO_BIG = 1008,AXIN_ZX25INFO_FAILED = 1009,AXIN_ZSETKFUNC_FAILED = 1010,LE_AXIN_READ_PHYS_TABLE_FAILED = 1011,AXIN_ZLU_TBL_CORRUPT1 = 1012,AXIN_ZLU_TBL_CORRUPT2 = 1013,LE_AXIN_ZCOM_SHUTDOWN = 1014,AXIN_NUM_L2_TOO_SMALL = 1015,AXIN_NUM_L3_TOO_SMALL = 1016,AXIN_ZLU_TBL_TOO_SMALL = 1017,LE_AXIN_DIAG_ACCESS_UNSUPPORTED = 2000,LE_AXIN_ZLU_OUT_OF_RANGE = 2001,LE_AXIN_BAD_IF_INDEX = 2002,LE_AXIN_BAD_MODULO = 2003,LE_AXIN_BAD_SVC_PKTSIZE = 2004,LE_AXIN_BAD_PVC_PKTSIZE = 2005,LE_AXIN_READ_PHYS_TABLE_FAILED2 = 2006,LE_AXIN_ZCNTL_TERM_PARMS_FAILED = 2007,LE_AXIN_READ_LTT_FAILED = 2008,LE_AXIN_ZLTSTORE_FAILED = 2009,LE_AXIN_ENABLE_FAILED = 2010,LE_AXIN_DISABLE_FAILED = 2011,LE_AXIN_ZLTUP_FAILED = 2012,LE_AXIN_UNEXP_L2STAT_FAILURE = 2013,LE_AXIN_ACTIVATE_L3_FAILED = 2014,LE_AXIN_SHUTDOWN_TIMEOUT = 2015,LE_AXIN_DEACTIVATE_L3_FAILED = 2016,LE_AXIN_CNTL_WRT_FAILED = 2017,LE_AXIN_BAD_L2_ZLU_ON_WRT = 2018,LE_AXIN_BAD_L2_ZLU_ON_READ = 2019,LE_AXIN_L2_MUX_TIMEOUT = 2020,LE_AXIN_L2_BAD_CONFIG = 2021,AXIN_ENTERED_ON_ICS = 2022,AXIN_WRT_FAILED = 2023,AXIN_NO_X25LINE_ZLU = 2024,AXIN_BAD_CTI_AND_REQID = 2025,LE_AXIN_CALL_REQUEST_FAILED = 2026,LE_AXIN_CALL_ACPT_FAILED = 2027,LE_AXIN_ZSEND_FAILED = 2028,LE_AXIN_CALL_REJ_FAILED = 2029,LE_AXIN_NOT_ENOUGH_PVCS = 2030,LE_AXIN_NOT_ENOUGH_SVCS = 2031,LE_AXIN_MAP_TO_SERVER_FAILED = 2032,LE_AXIN_ENABLE_L3_FAILED = 2033,};
enum MACRO_LE_IGMP {LE_IGMP_BAD_QUERY = 3000,LE_IGMP_BAD_RPT = 3001,LE_IGMP_INPUT = 5000,LE_IGMP_SEND_RPT = 5001,};
enum MACRO_LE_RFAR {LE_RFAR_COPY_FAIL = 2000,LE_RFAR_IPC_CREATE = 2001,LE_RFAR_IPC_SHUTDOWN = 2002,LE_RFAR_IPC_MUX_CONN = 2003,LE_RFAR_IPC_CONTROL = 2004,LE_RFAR_IPC_DEST = 2005,LE_RFAR_IPC_SEND = 2006,LE_RFAR_IPC_MUX_RECV = 2007,LE_RFAR_CONN_FAIL = 2008,LE_RFAR_INODE = 3000,LE_RFAR_PROCMEM = 3001,LE_RFAR_NOMEM_RFP = 4000,LE_RFAR_NOMEM_NETP = 4001,LE_RFAR_NOMEM_PMP = 4002,LE_RFAR_NETUNAMS_PER_PROC = 4003,};
enum MACRO_LLA_PKT {LLA_PKT_RECV = 0x1,LLA_Q_OVERFLOW = 0x2,};
enum MACRO_LLIO_HW {LLIO_HW_EOF = -30,};
enum MACRO_LLIO_NO {LLIO_NO_STATUS_YET = -5,};
enum MACRO_LLIO_SW {LLIO_SW_PROBLEM = -7,};
enum MACRO_LOGGING {LOGGING_TRACE_BIT = 0x1000000,};
enum MACRO_LOGICAL {LOGICAL_UNIT_SHIFT = 8,LOGICAL_UNIT_MASK = 255,DIAG_BIT_MASK = 8388608,};
enum MACRO_LOG_FCP {LOG_FCP_CDIO = 0,LOG_FCP_BH = 1,LOG_FCP_DEV = 2,LOG_FCP_MUX = 3,LOG_FCP_ARRAY = 4,};
enum MACRO_LOG_PID {LOG_PID = 0x1,LOG_CONS = 0x2,LOG_ODELAY = 0x4,LOG_NDELAY = 0x8,LOG_NOWAIT = 0x10,};
enum MACRO_LPRTERA {LPRTERA = 2,LCRTERA = 4,LTILDE = 8,LMDMBUF = 16,LLITOUT = 32,LCRTBS = 64,LFLUSHO = 128,LNOHANG = 256,LCRTKIL = 1024,LPASS8 = 2048,LCTLECH = 4096,LPENDIN = 8192,LDECCTQ = 16384,LNOFLSH = -32768,};
enum MACRO_LTOSTOP {LTOSTOP = 0x1,};
enum MACRO_MAXBEXP {MAXBEXP = 1024,};
enum MACRO_MAXDEVS {MAXDEVS = 7,};
enum MACRO_MAXFRAG {MAXFRAG = 8,MAXMNTLEN = 512,};
enum MACRO_MAXGIDS {MAXGIDS = 16,};
enum MACRO_MAXLINK {MAXLINK = 0x7FFF,};
enum MACRO_MAXNICE {MAXNICE = 39,};
enum MACRO_MAXSUSE {MAXSUSE = 65535,};
enum MACRO_MAXVIFS {MAXVIFS = 32,};
enum MACRO_MAX_AUD {MAX_AUD_ARGS = 4,MAXAUDID = 2147483647,};
enum MACRO_MAX_BKT {MAX_BKT_SIZE = 10000,};
enum MACRO_MAX_DBD {MAX_DBD_DATA = 0x1FFFFFFE,};
enum MACRO_MAX_DMA {MAX_DMA_ENTRIES = 4,MAX_MEM_ENTRIES = 9,MAX_PORT_ENTRIES = 20,};
enum MACRO_MAX_ERA {MAX_ERA_FMTS = 16,LEN_INFO_MSGS = 80,};
enum MACRO_MAX_HDW {MAX_HDW_PATH_LEN = 100,};
enum MACRO_MAX_ICE {MAX_ICE_AUTH_NAMES = 32,ICE_MAX_AUTH_DATA_ENTRIES = 100,};
enum MACRO_MAX_INT {MAX_INT_ENTRIES = 7,};
enum MACRO_MAX_LAN {MAX_LAN_INTERFACES = 50,};
enum MACRO_MAX_MAC {MAX_MAC_ADDR_LEN = 20,HP_DLPI_MAJOR_NUMBER = 119,};
enum MACRO_MAX_REG {MAX_REG_NUM = 2047,};
enum MACRO_MAX_SEL {MAX_SEL_ENTRIES = 26,MAX_TYPE_ENTRIES = 80,};
enum MACRO_MAX_SHM {MAX_SHM_SIZE = 524288,};
enum MACRO_MEM_850 {MEM_850 = 0x4,MEM_COBRA = 0x13,MEM_CORAL = 0x15,MEM_OUTFIELD = 0x19,MEM_CORAL2 = 0x1A,MEM_MIOC = 0x26,MEM_CHEETAH = 0x37,MEM_V2200 = 0x5F,MEM_V2500 = 0x85,};
enum MACRO_MEM_BAR {MEM_BAR_TYPE_32_BIT = 0,MEM_BAR_TYPE_32_BELOW_1MEG = 2,MEM_BAR_TYPE_64_BIT = 4,MEM_BAR_TYPE_RESERVED = 6,MEM_BAR_PREFETCHABLE = 8,};
enum MACRO_MEM_MOD {MEM_MOD = 0,IO_MOD = 1,NUM_SBUS_MODS = 16,MSIZE = 256,MCLBYTES = 4096,};
enum MACRO_MEM_PDC {MEM_PDC_HI = 0x35C,MEM_10MSEC = 0x38C,FIRST_MEM_HPA = 0x390,FIRST_MEM_SPA_SIZE = 0x398,FIRST_MEM_SIZE = 0x39C,MEM_CONS_PATH = 0x3A0,MEM_CONS_HPA = 0x3C0,MEM_CONS_SPA = 0x3C4,MEM_CONS_IODC = 0x3C8,MEM_BOOT_SPA = 0x3F4,SPP_SPA_MATCH = 0xFFFF597F,};
enum MACRO_MEM_POW {MEM_POW_FAIL = 0x4,MEM_TOC = 0x8,MEM_TOC_LEN = 0xC,MEM_RENDEZ = 0x10,MEM_PF_LEN = 0x14,MEM_POW_FAIL_HI = 0x18,MEM_TOC_HI = 0x24,MEM_RENDEZ_HI = 0x28,MEM_OBP = 0x200,MEM_ERR = 0x360,};
enum MACRO_MEM_SYS {MEM_SYS = 0x0,MEM_EXP = 0x8,MEM_VIR = 0x10,MEM_OTH = 0x18,MEM_SHARED = 0x20,MEM_MORE_ENTRIES = 0x80,};
enum MACRO_MERC_DM {MERC_DM_NO_MESSAGE = -11,};
enum MACRO_MESSAGE {MESSAGE_NOT_FOUND = -92,};
enum MACRO_MGR_MAX {MGR_MAX_STATE_TAG = 1,MAX_BUFF_BYTES = 72,};
enum MACRO_MINIMUM {MINIMUM_HASH_POOL_LOCKS = 64,MAXIMUM_HASH_POOL_LOCKS = 4096,};
enum MACRO_MINNICE {MINNICE = 0,};
enum MACRO_MMINOFF {MMINOFF = 0,MBUF_HDR_SZ = 60,EFFECTIVE_CACHE_SIZE = 64,};
enum MACRO_MODOPEN {MODOPEN = 0x1,INFPSZ = 0xFFFFFFFF,};
enum MACRO_MORECTL {MORECTL = 0x1,MOREDATA = 0x2,};
enum MACRO_MPBLOCK {MPBLOCK = 0,MPIDLE = 1,MPUSER = 2,MPSYS = 3,MPSWAIT = 4,};
enum MACRO_MPROGS0 {MPROGS0 = 1000,};
enum MACRO_MSCALE0 {MSCALE0 = 4,};
enum MACRO_MSEM_IF {MSEM_IF_NOWAIT = 0x1,};
enum MACRO_MSGMARK {MSGMARK = 0x1,MSGNOLOOP = 0x2,MSGDELIM = 0x4,MSGCOPYAVOID = 0x8,MSGCOW = 0x10,MSGTRUSTED = 0x20,MSGPULLED = 0x40,MSGCOMPRESS = 0x100,MSGNOTIFY = 0x200,MSGDSUSP = 0x400,MSGLASTCLOSE = 0x800,MSGLOCKSHELD = 0x1000,MSGCKO = 0x2000,MSGNOACC = 0x4000,MSGRETRY = 0x8000,};
enum MACRO_MSGwith {MSGwith_flag = 0x1,MSGbus_device_reset = 0xC,MSGabort_tag = 0xD,MSGclear_queue = 0xE,MSGinitiate_recovery = 0xF,MSGrelease_recovery = 0x10,MSGterminate_io_proc = 0x11,MSGsimple_queue_tag = 0x20,MSGhead_of_queue_tag = 0x21,MSGordered_queue_tag = 0x22,MSGignore_wide_residue = 0x23,};
enum MACRO_MS_CDFS {MS_CDFS_CONV_CASE = 0x1,MS_CDFS_ZAP_VERSION = 0x2,MS_CDFS_RESERVED1 = 0x4,MS_CDFS_RESERVED2 = 0x8,MS_CDFS_WANT_RR = 0x10,};
enum MACRO_MT_WSIO {MT_WSIO = 205,MT_SIO = 212,};
enum MACRO_NBREPLY {NBREPLY = 64,};
enum MACRO_NETDIAG {NETDIAG_MAX_IOVECS = 20,NETDIAG_Q_DF = 200,NETDIAG_MAX_Q = 1000,};
enum MACRO_NET_ARP {NET_ARP = 0,NET_ARPIOCTL = 1,NET_DDPINTR = 2,NET_DOMAININIT = 3,NET_IFINIT = 4,NET_IFIOCTL = 5,NET_IPINTR = 6,NET_MAPINTR = 7,NET_MBINIT = 8,NET_NETISR_DAEMON = 9,NET_NIPCINIT = 10,NET_NSINTR = 11,NET_NTIMO_INIT = 12,NET_NULL_INIT = 13,NET_NVSINPUT = 14,NET_NVSJOIN = 15,NET_PROBE = 16,NET_RTIOCTL = 17,NET_SOO_STAT = 18,NET_UNP_GC = 19,NET_X25INTR = 20,NET_DUXINTR = 21,NET_PRBUNSOL = 22,NET_ARPINIT = 23,NET_ARPINTR = 24,NET_RAWINTR = 25,NETDDP_GETATNODE = 26,NETDDP_AARPINPUT = 27,NETDDP_ATALK_OUTPUT = 28,NETSTR_SCHED = 29,NETSTR_MEM = 30,NETSTR_WELD = 31,NET_NITINTR = 32,NET_ISDNINTR = 33,NET_NETISR_DEFER = 34,};
enum MACRO_NGROUPS {NGROUPS_MAX = 20,SSIZE_MAX = 2147483647,};
enum MACRO_NLIMITS {NLIMITS = 6,};
enum MACRO_NL_NMAX {NL_NMAX = 2,NL_SETMAX = 65535,};
enum MACRO_NL_SETN {NL_SETN = 1,};
enum MACRO_NMOTHER {NMOTHER = 1,NMLOCAL = 2,NMMGMT = 3,NMICMP = 4,NMEGP = 5,NMGGP = 6,NMHELLO = 7,NMRIP = 8,};
enum MACRO_NMTIMER {NMTIMER = 6,};
enum MACRO_NODELTA {NODELTA = 2147483647,};
enum MACRO_NONDISP {NONDISP = 0,TOP = 1,ABOVE = 2,BASE = 3,BELOW = 4,};
enum MACRO_NORMAL2 {NORMAL_TERMINATION = 0,UNABLE_TO_INITIALIZE_THE_DISPLAY = 1,INCORRECT_SB_DISPLAY_ADDR_ENVIRONMENT_VAR = 2,INCORRECT_GRM_SIZE_ENVIRONMENT_VAR = 3,UNABLE_TO_STARTUP_OR_CONNECT_TO_THE_GRM = 4,DISPLAY_TYPE_UNKNOWN_TO_SERVER = 5,DOUBLE_BUFFERING_NOT_SUPPORTED = 6,DOUBLE_BUFFERING_HARDWARE_NOT_PRESENT = 7,CANNOT_SUPPORT_DEPTHS_OPTION_ON_THIS_DISPLAY = 8,UNSUPPORTED_DEPTH_SPECIFIED = 9,HARDWARE_AT_THIS_DEPTH_NOT_PRESENT = 10,DUPLICATE_DEVICE_ENTRY_IN_FILE = 11,CANNOT_GET_DRIVER_INFO = 12,COMBINED_MODE_NOT_STACKED_SCREENS_MODE = 13,TWO_TIMES_COMBINED_MODE = 14,SECONDARY_DIFFERENT_FROM_PRIMARY = 15,};
enum MACRO_NO_BD_K {NO_BD_K = -11,};
enum MACRO_NO_QUES {NO_QUES = 2,};
enum MACRO_NO_SEND {NO_SEND_FILE = 0,};
enum MACRO_NO_STAT {NO_STAT = 0,CS80_CIO = 1,CS80_NIO = 2,CS80_ALINK_1 = 3,CS80_ALINK_2 = 4,CS80_ALINK_3 = 5,CS80_ALINK_4 = 6,GIOCUNLOAD = 26374,};
enum MACRO_NUMBERS {NUMBERS_OF_NS_SUBSYS = 29,};
enum MACRO_NUM_CAM {NUM_CAM_BUFS = 15,NUM_SUBQS = 24,ALL_SUBQS = -256,};
enum MACRO_NUM_LED {NUM_LED = 0x2,};
enum MACRO_NUM_MSG {NUM_MSG_POS = 8,};
enum MACRO_NoValue {NoValue = 0x0,XValue = 0x1,YValue = 0x2,WidthValue = 0x4,HeightValue = 0x8,AllValues = 0xF,XNegative = 0x10,YNegative = 0x20,};
enum MACRO_OFFLINE {OFFLINE = 0x0,ONLINE = 0x20002,PARTL_ON = 0x3B203B20,};
enum MACRO_OLD_ACL {OLD_ACL_NSUSER = 65500,ACL_NSGROUP = -36,};
enum MACRO_OLD_UID {OLD_UID_EUID = 65502,OLD_UID_RUID = 65503,OLD_UID_SUID = 65504,NGROUPS_EGID = -1,};
enum MACRO_OPTIONS {OPTIONS_BYTE_OFFSET = 1,CONTROL_BYTE_OFFSET = 9,};
enum MACRO_OVERLAY {OVERLAY_MODE = 0x1,IMAGE_MODE = 0x2,STACKED_MODE = 0x3,};
enum MACRO_O_HUPCL {O_HUPCL = 0x1,O_XTABS = 0x2,O_LCASE = 0x4,O_ECHO = 0x8,O_CRMOD = 0x10,O_RAW = 0x20,O_ODDP = 0x40,O_EVENP = 0x80,O_NLDELAY = 0x300,};
enum MACRO_PAM_MAX {PAM_MAX_NUM_MSG = 32,PAM_MAX_MSG_SIZE = 512,};
enum MACRO_PAM_REP {PAM_REP_DEFAULT = 0x0,PAM_REP_FILES = 0x1,PAM_REP_NIS = 0x2,PAM_REP_NISPLUS = 0x4,PAM_OPWCMD = 0x8,PAM_REP_DCE = 0x10,};
enum MACRO_PBLKSIZ {PBLKSIZ = 1024,DBLKSIZ = 4096,};
enum MACRO_PCI_CMD {PCI_CMD_IO_SPACE = 0x1,PCI_CMD_MEM_SPACE = 0x2,PCI_CMD_BUS_MASTER = 0x4,PCI_CMD_SPEC_CYCLES = 0x8,PCI_CMD_MEM_WR_INVAL_EN = 0x10,PCI_CMD_VGA_PAL_SNOOP = 0x20,PCI_CMD_PARITY_ERR_RESP = 0x40,PCI_CMD_WAIT_CYCLE_CNTL = 0x80,PCI_CMD_SERR_ENABLE = 0x100,PCI_CMD_FBB_ENB = 0x200,};
enum MACRO_PCI_GET {PCI_GET_FRU_INFO_NOT_IMPLEMENTED = 0,PCI_GET_FRU_INFO_DEV_NOT_FOUND = 1,PCI_GET_FRU_INFO_BUILT_IN_FRU = 2,PCI_GET_FRU_INFO_BUILT_IN_NO_FRU = 3,PCI_GET_FRU_INFO_EXPANSION_DEVICE = 4,};
enum MACRO_PCI_MEM {PCI_MEM_DIRECT_MAPPED_MODE = 0,PCI_MEM_SPECIAL_MODE = 1,PCI_FUNCTION_UNAVAILABLE = -1,};
enum MACRO_PC_PRIV {PC_PRIV_USER = 3,};
enum MACRO_PDC_HTA {PDC_HTA_OFFSET = 0x0,PDC_PPDP_OFFSET = 0x4,PDC_PSW_OFFSET = 0x8,PDC_PNUM_OFFSET = 0xC,};
enum MACRO_PDC_LOW {PDC_LOW = 0xEF000000,PDC_HIGH = 0xF1000000,FPA = 0xFFF80000,FLEX_MASK = 0xFFFC0000,};
enum MACRO_PDE_ODD {PDE_ODD_BIT = 4096,TWO_GIGS_OF_MEM = -2147483648,};
enum MACRO_PDE_REF {PDE_REF_TRICKLE_POS = 29,};
enum MACRO_PDE_UIP {PDE_UIP_BYTE = 8,PDE_UIP_BIT = 24,};
enum MACRO_PEND_EN {PEND_EN = 16777216,};
enum MACRO_PF_NONE {PF_NONE = 0x0,};
enum MACRO_PF_STAT {PF_STAT_CLEAR = 0x0,PF_ACTIVE_MASK = 0x1,FAIL_MASK = 0x2000000,};
enum MACRO_PGOFSET {PGOFSET = 4095,};
enum MACRO_PGSHIFT {PGSHIFT = 12,};
enum MACRO_POLLPRI {POLLPRI = 0x2,POLLERR = 0x8,POLLHUP = 0x10,POLLNVAL = 0x20,POLLRDNORM = 0x40,POLLRDBAND = 0x80,POLLWRNORM = 0x100,POLLWRBAND = 0x200,POLLMSG = 0x400,};
enum MACRO_PRC_ERR {PRC_ERR_NOFILE = -2,};
enum MACRO_PRTBASE {PRTBASE = 512,PTIMESHARE = 640,};
enum MACRO_PS2_ALL {PS2_ALL_TMAT = 0x2000500A,PS2_ALL_MKBRK = 0x2000500B,PS2_ALL_TMAT_MKBRK = 0x2000500C,PS2_ALL_MK = 0x2000500D,};
enum MACRO_PSTAT64 {PSTAT64_INTF = 0x80000000,PSTAT_PROC = 0x1,};
enum MACRO_PST_MAX {PST_MAX_CPUSTATES = 15,PST_MAX_PROCS = 32,PST_MAX_PA_RISC_STABLE = 256,};
enum MACRO_PS_CONF {PS_CONF_CHANGED = 0x2,PS_HEADER_VALID = 0x4,};
enum MACRO_PS_HPUX {PS_HPUX = 1,};
enum MACRO_PS_OSID {PS_OSID_NONE = 0x0,PS_OSID_HPUX = 0x1,PS_OSID_MPEXL = 0x2,};
enum MACRO_PS_PROT {PS_PROT_READ = 0x1,PS_PROT_WRITE = 0x2,PS_PROT_EXECUTE = 0x4,};
enum MACRO_PTHREAD {PTHREAD_CREATE_DETACHED = 0xDE,};
enum MACRO_RDB_BRK {RDB_BRK_EVENT = 1,RDB_STEP_BRK_EVENT = 2,RDB_RECOV_CTR_EVENT = 3,RDB_SYNC_EVENT = 4,RDB_COMMINT_EVENT = 5,RDB_PF_STOP_EVENT = 6,BAD_SEMA_ALIGN = 90,BAD_BUFFER = 91,BAD_ALIGN = 92,HARD_ERR = 93,BAD_CMD = 94,BAD_STATE = 95,COMM_SEMA_NOT_LOCK = 96,BAD_COMM_ACCESS = 97,BAD_MON_INT = 98,BAD_EXIT = 99,BAD_GLOBAL_STATE = 100,BAD_ENTRY_CODE = 101,PDC_DEATH = 102,UNKNOWN_INT = 103,BAD_HPA = 104,BAD_PDC_LAUNCH = 105,EIR_NOT_EXPECTED = 106,UNEXPECTED_COMM_INT = 107,BAD_STACK = 113,BAD_DEV_INT = 114,BAD_GET_IODC = 115,};
enum MACRO_RELEASE {RELEASE_RECOVERY_MSG = 0x10,};
enum MACRO_REQUEST {REQUEST_DMA = 0x4,};
enum MACRO_RESIDUE {RESIDUE = 0,COMPLETION = 1,NUMDA = 16,NUMLOGC = 112,PCHUNK = 4095,};
enum MACRO_RESTORE {RESTORE_POINTERS_MSG = 0x3,};
enum MACRO_RES_PRF {RES_PRF_CLASS = 0x4,RES_PRF_CMD = 0x8,RES_PRF_QUES = 0x10,RES_PRF_ANS = 0x20,RES_PRF_AUTH = 0x40,RES_PRF_ADD = 0x80,RES_PRF_HEAD1 = 0x100,RES_PRF_HEAD2 = 0x200,RES_PRF_TTLID = 0x400,RES_PRF_HEADX = 0x800,RES_PRF_QUERY = 0x1000,RES_PRF_REPLY = 0x2000,RES_PRF_INIT = 0x4000,};
enum MACRO_REXPROC {REXPROC_NULL = 0,REXPROC_START = 1,REXPROC_WAIT = 2,REXPROC_MODES = 3,REXPROC_WINCH = 4,REXPROC_SIGNAL = 5,};
enum MACRO_REXPROG {REXPROG = 100017,};
enum MACRO_REXVERS {REXVERS = 1,};
enum MACRO_RIGHT_0 {RIGHT = 1,LEFT = 2,};
enum MACRO_ROOTINO {ROOTINO = 2,LOSTFOUNDINO = 3,};
enum MACRO_RPCTEST {RPCTEST_PROGRAM = 1,};
enum MACRO_RPC_MSG {RPC_MSG_VERSION = 2,RPC_SERVICE_PORT = 2048,};
enum MACRO_RPC_SVC {RPC_SVC_MTMODE_SET = 1,RPC_SVC_MTMODE_GET = 2,RPC_SVC_THRMAX_SET = 3,RPC_SVC_THRMAX_GET = 4,RPC_SVC_THRTOTAL_GET = 5,RPC_SVC_THRCREATES_GET = 6,RPC_SVC_THRERRORS_GET = 7,};
enum MACRO_RS_DEAD {RS_DEAD_OR_DYING = 6,RS_PROTOCOL_ERR = 7,};
enum MACRO_RTSXOFF {RTSXOFF = 1,CTSXON = 2,};
enum MACRO_R_DFAIL {R_DFAIL = -2,};
enum MACRO_SB_LOCK {SB_LOCK = 0x1,SB_WANT = 0x2,SB_WAIT = 0x4,SB_SEL = 0x8,SB_COLL = 0x10,};
enum MACRO_SCSI_IO {SCSI_IO_REQ_MSG = 130,SCSI_IO_REPLY_MSG = 131,SCSI_CTRL_REQ_MSG = 132,SCSI_CTRL_REPLY_MSG = 133,SCSI_IO_EVENT_MSG = 134,SCSI_UNFREEZE_MSG = 135,START_FLEX_MSG = 140,};
enum MACRO_SCTL_NO {SCTL_NO_ATN = 8,SCTL_2BYTE = 16,SCTL_4BYTE = 32,};
enum MACRO_SDOCHAR {SDOCHAR = 43,VFS_AFSMAGIC = 1193046,};
enum MACRO_SECONDS {SECONDS_1 = 0x1,SECONDS_2 = 0x2,SECONDS_3 = 0x3,SECONDS_4 = 0x4,};
enum MACRO_SECTION {SECTION_NOT_INITIALIZED = 0x80,SLOT_IS_EMPTY = 0xFFFFFFFF,};
enum MACRO_SEGSIZE {SEGSIZE = 512,MAX_SEGSIZE = 65464,};
enum MACRO_SELFMAG {SELFMAG = 4,};
enum MACRO_SFDMASK {SFDMASK = 0x1F,};
enum MACRO_SHM_MIN {SHM_MIN_BUFFER_SPACE = 92160,};
enum MACRO_SIGPOLL {SIGPOLL = 22,};
enum MACRO_SIGPROF {SIGPROF = 21,};
enum MACRO_SIGTRAP {SIGTRAP = 5,SIGSYS = 12,};
enum MACRO_SM_STAT {SM_STAT = 1,SM_MON = 2,SM_UNMON = 3,SM_UNMON_ALL = 4,SM_SIMU_CRASH = 5,SM_MAXSTRLEN = 1024,};
enum MACRO_SNAPPED {SNAPPED_OUT = 1,};
enum MACRO_SNDZERO {SNDZERO = 0x1,MUXID_ALL = 0xFFFFFFFF,};
enum MACRO_SO_HASH {SO_HASH_LENGTH = 256,SO_HASH_MASK = 255,};
enum MACRO_SO_LOCK {SO_LOCK_LIST_LENGTH = 64,SO_LOCK_LIST_MASK = 63,};
enum MACRO_SPECTRO {SPECTRO_LGB_FB = 0x48,SPECTRO_LGB_CONTROL = 0x49,};
enum MACRO_SP_PIPE {SP_PIPE = 0x1,SP_WATOMIC = 0x2,SP_NOUAREA = 0x4,SP_LOCKABLE = 0x8,SP_CLOSING = 0x10,SP_RWAKEUP = 0x20,SP_WWAKEUP = 0x40,SP_EXTPRIV = 0x80,SP_FREEABLE = 0x8000,};
enum MACRO_SS_NAME {SS_NAME_LEN = 80,};
enum MACRO_STACKED {STACKED_MODE_FIRST_SCREEN = 0x3,STACKED_MODE_SECOND_SCREEN = 0x33,};
enum MACRO_STACKER {STACKER_SUPPORTED = 1,};
enum MACRO_ST_ARQ2 {ST_ARQ2 = 1,GPIO_LOCK = 5,GPIO_RESET = 6,GPIO_CTL_LINES = 7,GPIO_SET_CONFIG = 8,};
enum MACRO_ST_NULL {ST_NULL = 0,ST_ABSOLUTE = 1,ST_DATA = 2,ST_CODE = 3,ST_PRI_PROG = 4,ST_SEC_PROG = 5,ST_ENTRY = 6,ST_STORAGE = 7,ST_STUB = 8,ST_MODULE = 9,ST_SYM_EXT = 10,ST_ARG_EXT = 11,ST_MILLICODE = 12,ST_PLABEL = 13,ST_OCT_DIS = 14,ST_MILLI_EXT = 15,ST_TSTORAGE = 16,ST_COMDAT = 17,};
enum MACRO_ST_TALK {ST_TALK_ALWAYS = 0x40000000,ST_LISTEN_ALWAYS = 0x20000000,ST_NDAC = 0x8000,ST_SYSTEM_CTLR = 0x800,};
enum MACRO_SUBMASK {SUBMASK = 0xFFFFFFFF,};
enum MACRO_SW_LEFT {SW_LEFT = 2,SW_RIGHT = 0,};
enum MACRO_SYSTEM2 {SYSTEM_EVENTS = 0,DEVICE_EVENTS = 4,};
enum MACRO_SYS_acl {SYS_acl = 508,SYS___CNX_P2P_CTL = 509,};
enum MACRO_SYS_aio {SYS_aio_read = 431,SYS_AIO_WRITE = 432,};
enum MACRO_SYS_brk {SYS_brk = 17,SYS_LCHMOD = 18,};
enum MACRO_SYS_cds {SYS_cds = 228,SYS_SET_NO_TRUNC = 229,};
enum MACRO_SYS_cnx {SYS_cnx_lw_pmon_read = 28,SYS_PAUSE = 29,};
enum MACRO_SYS_dup {SYS_dup = 41,SYS_PIPE = 42,};
enum MACRO_SYS_fss {SYS_fss = 260,SYS_TSYNC = 267,};
enum MACRO_SYS_get {SYS_get_sysinfo = 149,SYS_PRIVGRP = 151,};
enum MACRO_SYS_lio {SYS_lio_listio = 433,SYS_AIO_ERROR = 434,};
enum MACRO_SYS_lwp {SYS_lwp_getprivate = 67,SYS_LWP_SETPRIVATE = 68,};
enum MACRO_SYS_msh {SYS_msh_register = 477,SYS_PTRACE64 = 478,};
enum MACRO_SYS_nfs {SYS_nfs_fcntl = 234,SYS_OGETACL = 235,};
enum MACRO_SYS_nsp {SYS_nsp_init = 168,SYS_MKRNOD = 170,};
enum MACRO_SYS_set {SYS_set_userthreadid = 52,SYS_IOCTL = 54,};
enum MACRO_SYS_shm {SYS_shm_open = 425,SYS_SHM_UNLINK = 426,};
enum MACRO_S_IFBLK {S_IFBLK = 24576,};
enum MACRO_S_IFCHR {S_IFCHR = 8192,S_IFDIR = 16384,};
enum MACRO_S_IFIFO {S_IFIFO = 4096,S_IFREG = 32768,S_IFLNK = 40960,};
enum MACRO_S_IFNWK {S_IFNWK = 0x9000,};
enum MACRO_S_INPUT {S_INPUT = 0x1,S_HIPRI = 0x2,S_OUTPUT = 0x4,S_MSG = 0x8,S_RDNORM = 0x10,S_RDBAND = 0x20,S_WRNORM = 0x40,S_WRBAND = 0x80,S_ERROR = 0x100,S_HANGUP = 0x200,S_BANDURG = 0x400,};
enum MACRO_S_IREAD {S_IREAD = 256,S_IWRITE = 128,S_IEXEC = 64,};
enum MACRO_S_IRGRP {S_IRGRP = 0x20,S_IWGRP = 0x10,S_IXGRP = 0x8,S_IRWXO = 0x7,};
enum MACRO_S_IROTH {S_IROTH = 0x4,S_IWOTH = 0x2,S_IXOTH = 0x1,};
enum MACRO_S_IRUSR {S_IRUSR = 0x100,S_IWUSR = 0x80,S_IXUSR = 0x40,S_IRWXG = 0x38,};
enum MACRO_S_ISVTX {S_ISVTX = 0x200,S_IFSOCK = 0xC000,};
enum MACRO_Success {Success = 0,BadRequest = 1,BadValue = 2,BadWindow = 3,BadPixmap = 4,BadAtom = 5,BadCursor = 6,BadFont = 7,BadMatch = 8,BadDrawable = 9,BadAccess = 10,BadAlloc = 11,BadColor = 12,BadGC = 13,BadIDChoice = 14,BadName = 15,BadLength = 16,BadImplementation = 17,FirstExtensionError = 128,LastExtensionError = 255,};
enum MACRO_TABLIST {TABLIST = 1,FIRSTCW = 2,};
enum MACRO_TCP_IOC {TCP_IOC_DEFAULT_Q = 536898355,};
enum MACRO_TCP_MAX {TCP_MAX_WINSHIFT = 14,};
enum MACRO_TELQUAL {TELQUAL_IS = 0,TELQUAL_SEND = 1,};
enum MACRO_TGWRITE {TGWRITE = 0x10,};
enum MACRO_TIMEOUT {TIMEOUT = 1,EARLY_READ = 2,GOT_STATUS_EARLY = 3,DIAG_CLEAR = 4,DIAG_ID = 5,DIAG_LOOP = 6,NO_READ = 7,DEFAULT_TIME = 10000000,};
enum MACRO_TIME_10 {TIME_10_MICSEC = 10,TIME_1_MSEC = 1000,TIME_5_MSEC = 5000,TIME_1_SEC = 1000000,TIME_3_SEC = 3000000,TIME_4_SEC = 4000000,TIME_10_SEC = 10000000,};
enum MACRO_TIOCPKT {TIOCPKT_DATA = 0x0,TIOCPKT_FLUSHREAD = 0x1,TIOCPKT_FLUSHWRITE = 0x2,TIOCPKT_STOP = 0x4,TIOCPKT_START = 0x8,TIOCPKT_NOSTOP = 0x10,TIOCPKT_DOSTOP = 0x20,};
enum MACRO_TMAGLEN {TMAGLEN = 6,};
enum MACRO_TOKEN_4 {TOKEN_4_BANDWIDTH = 4000000,ATR_BANDWIDTH = 12000000,};
enum MACRO_TORNADO {TORNADO_CPU_ID = 0xB,PCXL_CPU_ID = 0xD,PCXU_CPU_ID = 0xE,VR_CPU_ID = 0xF,PCXU_PLUS_CPU_ID = 0x10,PCXW_CPU_ID = 0x11,PCXW_PLUS_CPU_ID = 0x12,PIRANHA_CPU_ID = 0x13,MAKO_CPU_ID = 0x14,};
enum MACRO_TOWRITE {TOWRITE = 0x2,};
enum MACRO_TS_DATA {TS_DATA = 0,TS_IAC = 1,TS_SB = 3,TS_SE = 4,TS_WWDD = 5,TS_IACACK = 6,};
enum MACRO_TUWRITE {TUWRITE = 0x80,};
enum MACRO_T_NOTOS {T_NOTOS = 0,T_LDELAY = 16,};
enum MACRO_T_WRITE {T_WRITE = 0x1,T_EOI = 0x2,T_PPL = 0x4,};
enum MACRO_UDP_TTL {UDP_TTL = 64,UDP_NEWBROADCAST = 1,};
enum MACRO_UID_MAX {UID_MAX = 2147483647,};
enum MACRO_UNKNOWN {UNKNOWN_BUS = 0x0,PA_CORE = 0x70,PA_WAX = 0x8E,};
enum MACRO_USAGE_0 {USAGE = 0x0,USAGE_MINIMUM = 0x1,USAGE_MAXIMUM = 0x2,DESIGNATOR_INDEX = 0x3,DESIGNATOR_MINIMUM = 0x4,DESIGNATOR_MAXIMUM = 0x5,STRING_INDEX = 0x7,STRING_MINIMUM = 0x8,STRING_MAXIMUM = 0x9,SET_DELIMITER = 0xA,};
enum MACRO_USB_HID {USB_HID_BYTES_PER_KEY = 3,};
enum MACRO_VFDFILL {VFDFILL_WAIT = 0x100,VFDFILL_NOWAIT = 0x200,VFDFILL_CLRCOW = 0x400,};
enum MACRO_VMTRACE {VMTRACE_OBUCK = 21,VMTRACE_BUCK = 42,};
enum MACRO_VROTATE {VROTATE_NONE = 0,VROTATE_PART = 1,VROTATE_ALL = 2,};
enum MACRO_WAIT_BO {WAIT_BO = 0x1,WAIT_BI = 0x2,};
enum MACRO_WINDOWS {WINDOWS_WINDOW_CHAR_START = 0x1A,};
enum MACRO_WNOHANG {WNOHANG = 1,WUNTRACED = 2,_WNOWAIT = 4,};
enum MACRO_WNOWAIT {WNOWAIT = 4,WSTOPFLG = 127,};
enum MACRO_WRITE_0 {WRITE = 0,ID = 1,CLR = 2,DAP = 3,READ = 4,DEV_STAT = 5,SELF_TEST = 6,READ_SELF_TEST = 7,WRITE_LB = 8,READ_LB = 9,DIAG_STAT = 10,};
enum MACRO_XALLOCA {XALLOCA_H = 1,};
enum MACRO_XA_LAST {XA_LAST_PREDEFINED = 68,};
enum MACRO_XK_Page {XK_Page_Up = 0xFF55,XK_Next = 0xFF56,};
enum MACRO_XK_kana {XK_kana_middledot = 0x4A5,XK_kana_WO = 0x4A6,XK_kana_a = 0x4A7,XK_kana_i = 0x4A8,XK_kana_u = 0x4A9,XK_kana_e = 0x4AA,XK_kana_o = 0x4AB,XK_kana_ya = 0x4AC,XK_kana_yu = 0x4AD,XK_kana_yo = 0x4AE,XK_kana_tsu = 0x4AF,};
enum MACRO_XPSpool {XPSpool = 1,XPGetData = 2,};
enum MACRO_X_Reply {X_Reply = 1,X_Error = 0,};
enum MACRO_XimType {XimType_SeparatorOfNestedList = 0,XimType_CARD8 = 1,XimType_CARD16 = 2,XimType_CARD32 = 3,XimType_STRING8 = 4,XimType_Window = 5,XimType_XIMStyles = 10,XimType_XRectangle = 11,XimType_XPoint = 12,XimType_XFontSet = 13,XimType_XIMOptions = 14,XimType_XIMHotKeyTriggers = 15,XimType_XIMHotKeyState = 16,XimType_XIMStringConversion = 17,XimType_NEST = 32767,};
enum MACRO_XlcHead {XlcHead = 0,XlcTail = -1,};
enum MACRO_XmCOLOR {XmCOLOR_PERCENTILE = 655,};
enum MACRO_XmCR_WM {XmCR_WM_PROTOCOLS = 6666,};
enum MACRO_XmFIRST {XmFIRST_APPLICATION_SUBCLASS_BIT = 192,};
enum MACRO_XmFORCE {XmFORCE_COLOR = 1,XmUNSPECIFIED_PIXEL = -1,};
enum MACRO_XmLIGHT {XmLIGHT_FACTOR = 0,XmLUMINOSITY_FACTOR = 25,};
enum MACRO_XmMAJOR {XmMAJOR_TAB_SCROLLER = 12,XmMINOR_TAB_SCROLLER = 13,XmTAB_SCROLLER = 14,};
enum MACRO_XmRIGHT {XmRIGHT_TO_LEFT_MASK = 0x1,XmLEFT_TO_RIGHT_MASK = 0x2,XmHORIZONTAL_MASK = 0x3,XmTOP_TO_BOTTOM_MASK = 0x4,XmBOTTOM_TO_TOP_MASK = 0x8,XmVERTICAL_MASK = 0xC,XmPRECEDENCE_HORIZ_MASK = 0x40,XmPRECEDENCE_VERT_MASK = 0x80,XmPRECEDENCE_MASK = 0xC0,};
enum MACRO_YPMSGSZ {YPMSGSZ = 1600,};
enum MACRO_YP_VERS {YP_VERS = -8,};
enum MACRO__POSIX1 {_POSIX1_VERSION_88 = 198808,_POSIX1_VERSION_90 = 199009,_POSIX1_VERSION_93 = 199309,};
enum MACRO__POSIX2 {_POSIX2_BC_BASE_MAX = 99,_POSIX2_BC_DIM_MAX = 2048,};
enum MACRO__SBFSIZ {_SBFSIZ = 8,};
enum MACRO__SIGCLD {_SIGCLD = 18,_SIGPWR = 19,_SIGVTALRM = 20,_SIGPROF = 21,_SIGIO = 22,};
enum MACRO__SIGHUP {_SIGHUP = 1,SIGINT = 2,_SIGQUIT = 3,SIGILL = 4,_SIGTRAP = 5,SIGABRT = 6,};
enum MACRO__SIGIOT {_SIGIOT = 6,_SIGEMT = 7,SIGFPE = 8,_SIGKILL = 9,_SIGBUS = 10,SIGSEGV = 11,_SIGSYS = 12,_SIGPIPE = 13,_SIGALRM = 14,SIGTERM = 15,_SIGUSR1 = 16,_SIGUSR2 = 17,_SIGCHLD = 18,};
enum MACRO__SPARE4 {_SPARE4_SIZE = 3,_S_IFMT = 61440,};
enum MACRO_channel {channel_parity_error = 2,illegal_opcode = 5,module_addressing = 6,address_bounds = 7,parameter_bounds = 8,illegal_parameter = 9,message_sequence = 10,message_length = 12,cross_unit = 17,controller_fault = 19,unit_fault = 22,diagnostic_result = 24,operator_release_required = 26,diagnostic_release_required = 27,internal_maint_required = 28,power_fail = 30,retransmit = 31,illegal_parallel_operation = 32,uninitialized_media = 33,no_spares_available = 34,not_ready = 35,write_protect = 36,no_data_found = 37,unrecovb_data_overflow = 40,unrecovb_data = 41,end_of_file = 43,end_of_volume = 44,operator_request = 48,diagnostic_request = 49,intnl_maint_reqst = 50,media_wear = 51,latency_induced = 52,error_bit_53 = 53,error_bit_54 = 54,auto_sparing_invoked = 55,error_bit_56 = 56,recovb_data_overflow = 57,marginal_data = 58,recovb_data = 59,error_bit_60 = 60,maint_track_overflow = 61,error_bit_62 = 62,error_bit_63 = 63,NO_ERRORS = 64,};
enum MACRO_hpXK_IO {hpXK_IO = 0x100000EE,hpXK_longminus = 0x100000F6,hpXK_block = 0x100000FC,XK_Reset = 0x1000FF6C,XK_System = 0x1000FF6D,XK_User = 0x1000FF6E,XK_ClearLine = 0x1000FF6F,XK_InsertLine = 0x1000FF70,XK_DeleteLine = 0x1000FF71,XK_InsertChar = 0x1000FF72,XK_DeleteChar = 0x1000FF73,XK_BackTab = 0x1000FF74,XK_KP_BackTab = 0x1000FF75,XK_Ext16bit_L = 0x1000FF76,XK_Ext16bit_R = 0x1000FF77,};
enum MACRO_initial {initial_value = 0,};
enum MACRO_sz_xrgb {sz_xrgb = 8,sz_xGenericReply = 32,sz_xGetWindowAttributesReply = 44,};
typedef struct nis_hash_data NIS_HASH_ITEM;
typedef struct _OnTheSpotData *OnTheSpotData;
typedef struct _OutputDataRec OutputDataRec;
typedef union _F39950DA96355FC65F113612EFFBB47D PCI_PORT_HNDL;
typedef void *PHOST_ADAPTER;
typedef struct _pci_bus_info *PPCI_BUS_INFO;
typedef struct _F9A11BF5FCA53245437FD040CE8F0807 RECORD_RANGE8;
typedef struct _CDF557A927ED2BFF93B09908D4EFCA76 SelectionHint;
typedef struct _ShellClassRec ShellClassRec;
struct T_getaddr_ack {int PRIM_type;int BNDADDR_length;int BNDADDR_offset;int PEERADDR_length;int PEERADDR_offset;};
struct T_getaddr_req {int PRIM_type;int BNDADDR_maxlen;int PEERADDR_maxlen;};
struct T_optmgmt_ack {int PRIM_type;int OPT_length;int OPT_offset;int MGMT_flags;};
struct T_optmgmt_req {int PRIM_type;int OPT_length;int OPT_offset;int MGMT_flags;};
struct T_uderror_ind {int PRIM_type;int DEST_length;int DEST_offset;int OPT_length;int OPT_offset;int ERROR_type;};
struct T_urgdata_ind {int PRIM_type;int MORE_flag;};
typedef struct _DEB6ED3E3E48801FAB6806704D963455 *WMShellWidget;
typedef struct _XAnyClassinfo XAnyClassInfo;
typedef struct _1F4B2514A14933A71BA9296C89FDE736 XButtonStatus;
typedef struct _XExtEventInfo XExtEventInfo;
typedef struct _2C3C200F8615C3857493506364E8C173 XGravityEvent;
typedef struct _CF5241A54E1FE5A7851EE8B8F8118B39 XICMethodsRec;
typedef union _XICPrivateRec XICPrivateRec;
typedef struct _FD52BE3056AC130D3626F17ACAA3487B XIMMethodsRec;
typedef union _XIMPrivateRec XIMPrivateRec;
typedef unsigned int XIMResetState;
typedef struct _2E56E956F88F593FE24676E86AAE3518 XIMValuesList;
typedef struct _AC3C30478DB292C58361350945D68834 XMappingEvent;
typedef struct _XOCGenericRec XOCGenericRec;
typedef struct _EE50BAD242841D9D70217C5858A39822 XOCMethodsRec;
typedef struct _XOMGenericRec XOMGenericRec;
typedef struct _XOMMethodsRec XOMMethodsRec;
typedef struct _E55328F014D59CB8D8C2D56824FBB3BE *XPPrinterList;
typedef struct _697B32D3B5D3093ACC810617F93D908A XRecordRange8;
typedef struct _666210E100F3CB5D4A75782C69E711A8 XTestJumpInfo;
typedef struct _B3BB99D2BC4673D99925C9C5D2C08561 XTextProperty;
typedef void *XVaNestedList;
typedef struct _XValuatorInfo XValuatorInfo;
typedef struct _xwd_file_header XWDFileHeader;
typedef struct _XimCommitInfoRec *XimCommitInfo;
typedef struct _XkbChanges *XkbChangesPtr;
typedef struct _XkbChanges XkbChangesRec;
typedef struct _XkbConverters XkbConverters;
typedef struct _XkbKeyNameRec *XkbKeyNamePtr;
typedef struct _XkbKeyNameRec XkbKeyNameRec;
typedef struct _XkbKeyType *XkbKeyTypePtr;
typedef struct _XkbKeyType XkbKeyTypeRec;
typedef struct _XkbOutline *XkbOutlinePtr;
typedef struct _XkbOutline XkbOutlineRec;
typedef struct _XkbOverlay *XkbOverlayPtr;
typedef struct _XkbOverlay XkbOverlayRec;
typedef struct _XkbSection *XkbSectionPtr;
typedef struct _XkbSection XkbSectionRec;
typedef struct _XlcCharSetRec XlcCharSetRec;
typedef struct _XmArrowPixmap XmArrowPixmap;
typedef struct _XmComboBoxRec XmComboBoxRec;
typedef struct _74F473584FBEEE22607318AA08113DD7 XmCommandPart;
typedef struct _XmCwidNodeRec XmCwidNodeRec;
typedef struct _B1BB4607B75CFFBC9D91E675F4E88C61 XmDesktopPart;
typedef struct _XmDisplayInfo XmDisplayInfo;
typedef struct _D2F477CF0A15BD07EBA4C7727B492ACA XmDisplayPart;
typedef struct _XmDragContextRec *XmDragContext;
typedef struct _XmDragIconRec XmDragIconRec;
typedef struct _XmExtClassRec XmExtClassRec;
typedef struct _XmFontListContextRec *XmFontContext;
typedef struct _XmFrameRec *XmFrameWidget;
typedef struct _XmGadgetCache XmGadgetCache;
typedef struct _XmGadgetClassRec *XmGadgetClass;
typedef unsigned char XmInputPolicy;
typedef struct _XmKidGeometryRec *XmKidGeometry;
typedef struct _XmLabelGadgetRec *XmLabelGadget;
typedef struct _XmLabelRec *XmLabelWidget;
typedef struct _XmManagerPart XmManagerPart;
typedef struct _XmNotebookRec XmNotebookRec;
typedef struct _XmProtocolMgrRec *XmProtocolMgr;
typedef struct _XmProtocolRec XmProtocolRec;
typedef struct __XmRenderTableRec **XmRenderTable;
typedef struct _6180D9D3CA56B1110646E5C5D8270DC5 *XmRepTypeList;
typedef struct _XmScaleRec *XmScaleWidget;
typedef struct _XmScreenClassRec *XmScreenClass;
typedef struct _XmShellExtRec XmShellExtRec;
typedef struct _XmSpinBoxPart XmSpinBoxPart;
typedef struct _XmVKeyBindingRec *XmVKeyBinding;
typedef struct _XmWrapperDataRec *XmWrapperData;
typedef struct _62C51BD45F432495E1F915DE1D05F502 XpmAttributes;
typedef struct _XrmHashBucketRec *XrmHashBucket;
typedef struct _75C8455111F1AB4D326C29F40C651C63 XrmMethodsRec;
typedef unsigned int XtBlockHookId;
typedef struct _XtCallbackRec XtCallbackRec;
typedef unsigned int XtVersionType;
struct _CodeRangeRec {unsigned int start;unsigned int end;unsigned int dmy1;unsigned int dmy2;};
typedef struct _8ECAECA30B9B3465E00D93779597B662 _LC_classnm_t;
typedef struct _473FB80C7F0EDE4D4A756518E07F01B9 *_XPrivDisplay;
struct _XkbAnyAction {unsigned char type;unsigned char data[7];};
struct _XkbISOAction {unsigned char type;unsigned char flags;unsigned char mask;unsigned char real_mods;char group_XXX;unsigned char affect;unsigned char vmods1;unsigned char vmods2;};
struct _XkbModAction {unsigned char type;unsigned char flags;unsigned char mask;unsigned char real_mods;unsigned char vmods1;unsigned char vmods2;};
struct _XkbPtrAction {unsigned char type;unsigned char flags;unsigned char high_XXX;unsigned char low_XXX;unsigned char high_YYY;unsigned char low_YYY;};
struct _XkbSymMapRec {unsigned char kt_index[4];unsigned char group_info;unsigned char width;unsigned short offset;};
struct __bool_struct {char __auto_left_margin;char __auto_right_margin;char __no_esc_ctlc;char __ceol_standout_glitch;char __eat_newline_glitch;char __erase_overstrike;char __generic_type;char __hard_copy;char __has_meta_key;char __has_status_line;char __ins_null_glitch;char __mem_above;char __mem_below;char __move_insert_mode;char __move_standout_mode;char __over_strike;char __status_line_esc_ok;char __dest_tabs_magic_smso;char __tilde_glitch;char __transparent_underline;char __xon_xoff;char __needs_xon_xoff;char __prtr_silent;char __hard_cursor;char __non_rev_rmcup;char __no_pad_char;char __non_dest_scroll_region;char __can_change;char __back_color_erase;char __hue_lightness_saturation;char __col_addr_glitch;char __cr_cancels_micro_mode;char __has_print_wheel;char __row_addr_glitch;char __semi_auto_right_margin;char __cpi_changes_res;char __lpi_changes_res;char _Sentinel;};
enum __sigev_types {__SIGEV_NONE = 0x1,__SIGEV_SIGNAL = 0x2,};
typedef struct __ss_narrow __ss_narrow_t;
struct _input_data_t {unsigned int constant;};
typedef struct _8385AD6390D9A75B3D83C4736A467DB2 add_prop_type;
typedef struct _CD83A85CD196BF48717FD004BA96949B async_request;
struct aud_event_tbl {unsigned int uevent2;unsigned int readdac;};
typedef struct _1951E760351567381BAD8ED74E25D6B9 bind_req_type;
enum callout_flags {DRIVER_CALLOUT = 0x1,MP_CALLOUT = 0x2,PENDING_CALLOUT = 0x4,FREE_CALLOUT = 0x8,ABSTIME_CALLOUT = 0x10,DYNAMIC_CALLOUT = 0x20,HEADER_CALLOUT = 0x40,HEADER_HASH_CALLOUT = 0x80,HEADER_TIME_CALLOUT = 0x100,HEADER_EXPIRED_CALLOUT = 0x200,EXPIRED_CALLOUT = 0x400,REALTIME_CALLOUT = 0x800,};
typedef struct _EE12D2414CDDA42C8B5793FBD319E9EA capacity_type;
typedef cio_pquad_type *cio_pquad_ptr;
typedef cio_vquad_type *cio_vquad_ptr;
typedef struct crash_event_table_struct crash_event_t;
typedef struct _EF304FE6BA47FBA4BF45C3CD79BE90AB cs80_req_type;
typedef union _A888F4CBB68333EFDEC90D8B2463445D data_ptr_type;
enum ddaccess_code {DDC_GETCARD = 0x0,DDC_RELCARD = 0x1,DDC_BROKEN = 0x2,DDC_RESTORE = 0x3,DDC_RECONFIG = 0x4,DDC_GETPORT = 0x5,DDC_ISBROKE = 0x6,DDC_NOTBROKEN = 0x7,DDC_READ = 0x8,DDC_REGREAD = 0x9,DDC_REGWRITE = 0xA,DDC_RELPORT = 0xB,DDC_SUBTEST = 0xC,DDC_WRITE = 0xD,};
typedef struct _A9F0CF7AEEAE18E8E3DE5B9A9FBAEC8A diag_req_type;
typedef struct _54CFA59446578757670AC893D5443363 dl_bind_ack_t;
typedef struct _6955332288667D59DD3C97A58CBD715E dl_bind_req_t;
struct dl_header_ext {int size;int hash_array_size;int hash_buckets_per_entry;int hash_function_ver;int import_hashvals;int export_hashvals;int plabel_hashvals;int filter_table;int filter_table_count;int filter_tls_sz;int initsubsp_offset;int num_init;int finisubsp_offset;int num_fini;unsigned int tls_data;unsigned int tls_data_sz;unsigned int tls_align;int sorted_plts;unsigned int reserved;};
typedef struct _C2F976814A2B3F5987995BCD3B4FB1DE dl_hp_proto_t;
typedef struct _3C1113B149FFAA5D64C1C5C2B316039A dl_info_ack_t;
typedef struct _ABE9B3A1FE09915A79192C7EFA47B9F6 dl_info_req_t;
typedef struct _186F4C82598CEA2809B98BC2836275EF dl_priority_t;
typedef struct _1D277D18401E135FB6951F8B86FCCB69 dl_test_con_t;
typedef struct _1D277D18401E135FB6951F8B86FCCB69 dl_test_ind_t;
typedef struct _AAB060B0944F50E5B6EB5012EC22DBB5 dl_test_req_t;
typedef struct _AAB060B0944F50E5B6EB5012EC22DBB5 dl_test_res_t;
typedef struct _7CE23751FA90F89F4E8DC4D527FC30AB dma_A_rs_type;
typedef int download_type;
struct dreloc_record {int shlib;int symbol;int location;int value;unsigned char type;char reserved;short module_index;};
typedef struct fc_hdr_info fc_hdr_info_t;
struct fclwp_dg_stat {unsigned int sbuf_full_drop;unsigned int no_port_drop;unsigned int mem_drop;unsigned int send_q_full_drop;unsigned int rcv_q_full_drop;unsigned int xmit_error_drop;};
struct floppy_format {unsigned int head;unsigned int track;unsigned int interleave;};
typedef struct _547CC69396E14378E9D06CD437556A9B gc_flowctrl_t;
struct getquota_args {char *gqa_pathp;int gqa_uid;};
typedef struct hdl_subpregion hdl_subpreg_t;
typedef struct _C6CDCD31C181198FA4488211042318A2 hdw_path_type;
typedef struct hpde *hpde_handle_t;
typedef struct _A18BE809E4BD5A02207432E11B1979DB hpib_pda_type;
typedef struct _EDF86E1F32B40B2525BDDB1BBC0182EA hpib_req_type;
typedef int int_buff_type[18];
typedef short int_least16_t;
typedef int int_least32_t;
struct io_hpib_ident {unsigned char dev_type;short ident;};
typedef struct io_map_cntl io_map_cntl_t;
typedef struct _F5DE83966D4764611019A0F9A35F7E9F iodc_spa_type;
struct kd_smount_vfs;
typedef struct kd_userproc kd_userproc_t;
struct lasi_int_regs {int irr;int imr;int ipr;int icr;int iar;int undefined[1019];};
typedef struct _CE16222007FB0690EE3C9A36EEE011B3 lock_req_type;
typedef struct _EDB9F5A3CC951EB114C7B2D89D5CDEB5 mib_Dot5Entry;
typedef struct _172CE1DA88C1EF8BB2AB85F8454FFEFC mib_udpLsnEnt;
typedef struct _2D417E1C50B482279BADE9736A991855 nmapi_iftable;
typedef struct _1C76DEC9422C2C08D66C4CAF0900D0FE nmapi_logstat;
typedef struct _D1161C69BF81CBC5E33289869028550C nmapi_phystat;
typedef struct parm_rec parm_rec_type;
typedef int port_num_type;
struct position_buff {unsigned int resv;unsigned char filler[19];};
enum pregion_flags {PF_ALLOC = 0x1,PF_PLOCK = 0x2,PF_EXACT = 0x4,PF_ACTIVE = 0x8,PF_NOPAGE = 0x10,PF_NOMAP = 0x20,PF_PUBLIC = 0x40,PF_DAEMON = 0x80,PF_WRITABLE = 0x100,PF_INHERIT = 0x200,PF_VTEXT = 0x400,PF_ACCESSFIXED = 0x800,PF_DEACT = 0x1000,PF_SHLIB = 0x2000,PF_PSEUDO = 0x4000,PF_MOD = 0x8000,PF_GPFAULT = 0x10000,PF_SHARE32 = 0x20000,};
struct prm_disk_prio {unsigned int share[64];};
struct pst_crashinfo;
typedef int pthread_key_t;
struct pthread_mutex {short m_short[2];int m_int;int m_int1[4];int m_pad;void *m_ptr;int m_int2[2];int m_int3[4];short m_short2[2];int m_int4[5];int m_int5[2];};
typedef int pthread_spu_t;
typedef struct _6B749E7B3ADE7B53BF5DB5005F238EAC req_parm_type;
enum scall_argType {unspecifiedArg = 0x0,charArg = 0x1,uCharArg = 0x2,shortArg = 0x3,uShortArg = 0x4,intArg = 0x5,uIntArg = 0x6,longArg = 0x7,uLongArg = 0x8,pointerArg = 0x9,longLongArg = 0xA,uLongLongArg = 0xB,};
typedef struct _2B25FEECC0AF4D3C6F228158D7F8DAAB scsi_req_type;
struct sector_search {unsigned char error;unsigned char found;unsigned char addr_msb;unsigned char addr_2nd;unsigned char addr_3rd;unsigned char addr_lsb;};
typedef struct _F94D37651AAFE0975D78E3AC0C195739 send_rec_type;
struct siglocal_misc {int sm_syscall;int sm_onstack;int sm_omask;char sm_syscall_action;char sm_eosys;unsigned short sm_error;int sm_rval1;int sm_rval2;int sm_arg[4];};
typedef struct _101ED56796A31C5C092EFC61C0F81522 smInteractMsg;
struct telnet_buffer {int buffersize;int buffertimeout;};
typedef struct _0B70C6F502040464A5F78A20545EAF54 ttexec_data_t;
typedef struct _1A6C5034386559CCB930A4FFFDAAB743 ttexit_data_t;
typedef struct _3F6D9256F664518C180F1B78EC3229D4 ttfork_data_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned char uint_least8_t;
typedef int  vfs_statvfs_t(struct vfs *, struct statvfs *);
typedef int  vfs_unmount_t(struct vfs *);
enum vnotify_flags {NOTIFY_RW = 0x0,NOTIFY_RO = 0x1,};
typedef struct _22A5417DB981180C131776DADD61E5E0 write_fm_type;
typedef struct _xAnyClassinfo xAnyClassInfo;
typedef struct _53B2C5E872CF4691EFE90F887D66B7FD xClearAreaReq;
typedef struct _45331FD382D3B76DE50383933A2C35C9 xCopyPlaneReq;
typedef struct _33E0BD21BC9E25CB376AFEED9A297D0A xGenericReply;
typedef struct _D53EE25F80C41C95CC04B700465E64D8 xImageTextReq;
typedef struct _292923DDD4ED46EE83D974C820DC3932 xListFontsReq;
typedef struct _B4F2C86EC2AFA3B90E8AE0EA0F71367B xListHostsReq;
typedef struct _5C0DD3C4E70CCCC9965B24A6BE5ED8FB xPixmapFormat;
typedef struct _82D86B5B3C9D9E6A7BE98808A956EE82 xPolyPointReq;
typedef struct _5E959B103B01C075C209A8FEB143708D xPropIconSize;
typedef struct _7250734D77F79F0949305E641023FE62 xSendEventReq;
typedef struct _1296C23E7EDA709A08D87BF116515624 xSetDashesReq;
typedef struct _5CD0DDA75FC8A64FD62E45433429A157 xTestResetReq;
typedef struct _9DF5225FB79C7EC3237B4B73EEC9C169 xUngrabKeyReq;
typedef struct _xValuatorInfo xValuatorInfo;
typedef struct _E6EABA4AA22781602E84D1DF4DA6148F xieFloCompare;
typedef struct _0A94BDF67700F0EDACCA5D00231D7516 xieFloLogical;
typedef struct _A38AB1DC10BE37D6B74E3A62DF3167E7 xieFloPasteUp;
typedef struct _xkbBellNotify xkbBellNotify;
typedef struct _xkmActionDesc xkmActionDesc;
struct ypresp_master {unsigned int status;char *master;};
typedef struct _CodeRangeRec CodeRangeRec;
typedef struct _CompositePart *CompositePtr;
typedef struct _CompositeRec CompositeRec;
typedef struct _WidgetClassRec CoreClassRec;
typedef long long Elf64_Sxword;
typedef struct _FonScope FontScopeRec;
enum HPPAC_STATUS {HPPAC_NO_ERROR = 0x0,HPPAC_DECIMAL_OVERFLOW = 0x1,HPPAC_INVALID_ASCII_DIGIT = 0x2,HPPAC_INVALID_PACKED_DECIMAL_DIGIT = 0x3,HPPAC_INVALID_SOURCE_WORD_COUNT = 0x4,HPPAC_INVALID_DECIMAL_OPERAND_LENGTH = 0x5,HPPAC_DECIMAL_DIVIDE_BY_ZERO = 0x6,};
typedef int ( *INIT_ROUTINE)(struct isc_table_type *);
typedef struct _IceListenObj *IceListenObj;
typedef struct _InputDataRec InputDataRec;
typedef struct _IntensityRec IntensityRec;
typedef struct _IntensityTbl IntensityTbl;
enum MACRO_ACCESS {ACCESS_SHIFT = 20,};
enum MACRO_ACTUAL {ACTUAL = 0,LAST_AVAIL = 1,};
enum MACRO_AMG_DM {AMG_DM_PAPER_JAM = -3,};
enum MACRO_AMPERE {AMPERE_1 = 0x1,AMPERE_2 = 0x2,AMPERE_3 = 0x3,AMPERE_4 = 0x4,LUMINOUS_INTENSITY_UNITS = 0x6,};
enum MACRO_API_TR {API_TR_INT_ENTRY_EXIT = 0x10,API_TR_INT_ERROR = 0x20,API_TR_ENTRY_EXIT_MASK = 0xFFDF,};
enum MACRO_ARPHRD {ARPHRD_ETHER = 1,ARPHRD_IEEE = 6,};
enum MACRO_ATEXIT {ATEXIT_MAX = 32,};
enum MACRO_A_PROB {A_PROB = -5,};
enum MACRO_AnyKey {AnyKey = 0,};
enum MACRO_BAR_IO {BAR_IO_SPACE = 0x1,};
enum MACRO_BBSIZE {BBSIZE = 8192,};
enum MACRO_BC_OFF {BC_OFF = 0x0,BC_INCLUDE = 0x80,BC_EXCLUDE = 0x100,BC_PEEK = 0x180,};
enum MACRO_BD_MED {BD_MED = 0xACBADDCA,};
enum MACRO_BD_NPE {BD_NPE = 0x3B05,BD_NTR = 0xFEEDBEEF,};
enum MACRO_BLKDEV {BLKDEV_IOSHIFT = 11,BLKDEV_IOMASK = 2047,};
enum MACRO_BUFLET {BUFLET_ALLOC_FAILED = -9,BUS_MASTER_DMA = -1,};
enum MACRO_B_ONCE {B_ONCE = 0x1,B_TIME = 0x4,};
enum MACRO_B_READ {B_READ = 0x1,B_DONE = 0x2,B_ERROR = 0x4,B_BUSY = 0x8,B_PHYS = 0x10,B_END_OF_DATA = 0x20,B_WANTED = 0x40,B_NDELAY = 0x80,B_ASYNC = 0x100,B_DELWRI = 0x200,B_SKIPSTEAL = 0x400,B_REWRITE = 0x800,B_PRIVATE = 0x1000,B_WRITEV = 0x2000,B_PFTIMEOUT = 0x4000,B_CACHE = 0x8000,B_INVAL = 0x10000,B_FSYSIO = 0x20000,B_CALL = 0x40000,B_NOCACHE = 0x80000,B_RAW = 0x100000,B_BCACHE = 0x200000,B_SYNC = 0x400000,B_PAGEOUT = 0x1000000,B_DIL = 0x2000000,B_SCRACH1 = 0x4000000,B_SCRACH2 = 0x8000000,B_SCRACH3 = 0x10000000,B_SCRACH4 = 0x20000000,B_SCRACH5 = 0x40000000,B_SCRACH6 = 0x80000000,};
enum MACRO_B_SIZE {B_SIZE = 30,};
enum MACRO_CAM_IO {CAM_IO_ERROR = -22,};
enum MACRO_CAM_NO {CAM_NO_RESOURCES = -21,};
enum MACRO_CBLOCK {CBLOCK = 0x20,CTIME = 0x40,};
enum MACRO_CBPROC {CBPROC_RECEIVE = 1,CBPROC_FINISH = 2,CBPROC_ERROR = 3,};
enum MACRO_CBSIZE {CBSIZE = 26,};
enum MACRO_CCHUNK {CCHUNK = 31,};
enum MACRO_CDEXEC {CDEXEC = 0x40,CD_RR_MTIME = 0x1,};
enum MACRO_CDFBLK {CDFBLK = 0x8,};
enum MACRO_CDFCHR {CDFCHR = 0x10,};
enum MACRO_CDFDIR {CDFDIR = 0x2,};
enum MACRO_CDFLNK {CDFLNK = 0x4,};
enum MACRO_CDFREG {CDFREG = 0x1,CDREAD = 0x100,};
enum MACRO_CIO_DA {CIO_DA_CTRL_ARD = 0x1,CIO_DA_CTRL_ARE = 0x2,CIO_DA_CTRL_RQA = 0x4,CIO_DA_CTRL_NMK = 0x8,CIO_DA_CTRL_DEN = 0x10,CIO_DA_CTRL_DCL = 0x20,CIO_DA_CTRL_PEN = 0x40,};
enum MACRO_CIO_DO {CIO_DO_BIND_REPLY_FAILURE = -3,};
enum MACRO_CIO_IS {CIO_IS_NOT_LOCKED = -52,};
enum MACRO_CIO_NO {CIO_NO_FRAME_AVAILABLE = -2,};
enum MACRO_CLIENT {CLIENT_REQ = 1,};
enum MACRO_CLNEXT {CLNEXT = 0x16,CDSUSP = 0x19,CSUSP = 0x1A,};
enum MACRO_CLOCKS {CLOCKS_PER_SEC = 1000000,};
enum MACRO_CMP_SD {CMP_SD_3 = 0x1,CMP_8MM_EXA1 = 0x10,};
enum MACRO_COOKED {COOKED_MODE = 0,RAW_MODE = 1,};
enum MACRO_COUNT2 {COUNT = 0,};
enum MACRO_CPR_DM {CPR_DM_PAPER_OUT = -2,};
enum MACRO_CPS_PL {CPS_PL_NONE = 0,CPS_PL_PARALLEL = 1,CPS_PL_NODE = 2,CPS_PL_NTHREAD = 4,CPS_PL_THREAD = 8,CPS_PL_ASYMMETRIC = 16,};
enum MACRO_CRWARN {CRWARN_NOEXPECTED = 4,CRWARN_SWAPPEDON = 3,};
enum MACRO_CTR_FF {CTR_FF = 0x800,};
enum MACRO_C_GOOD {C_GOOD_DAM_REP = 4,C_IO_REQ = 5,C_READ_EARLY = 6,C_READ_IO = 7,C_DEV_STAT_REQ = 8,C_CLEAR_DEV = 9,C_P_ON_REQ = 10,C_P_ON_REPLY = 11,C_BAD_P_ON_TRN = 12,C_ABORT = 13,C_DIAG = 14,C_DIAG_REP = 15,C_QUICK_REQ = 16,C_DEV_CLOSE = 17,C_OLD_REPLY = 18,};
enum MACRO_C_OPEN {C_OPEN = 0x1,C_SEND = 0x2,C_RCVB = 0x3,C_CLOSE = 0x4,C_CMD = 0x6,C_SEXP = 0x8,C_SCNTL = 0xF,C_DGN = 0x10,C_ILOOP = 0x7F,};
enum MACRO_DACRLR {DACRLR = 536888334,DACCONFCLR = 536888335,DACRSTCLR = 536888336,};
enum MACRO_DAM_DM {DAM_DM_TABLE_ERR = -112,};
enum MACRO_DAM_NO {DAM_NO_UIDS_AVAIL = -114,};
enum MACRO_DAM_SW {DAM_SW_ERROR = -110,};
enum MACRO_DAP_SW {DAP_SW_IN_USE = -28,};
enum MACRO_DA_CIC {DA_CIC = -33,};
enum MACRO_DA_DAP {DA_DAP_ILLEGAL_DAL = -45,};
enum MACRO_DA_DCL {DA_DCL_DETECTED = -35,};
enum MACRO_DA_DOD {DA_DOD_PER = -44,};
enum MACRO_DA_IDY {DA_IDY_FAILED = -41,};
enum MACRO_DA_IFC {DA_IFC_DATA_ABORT = -36,};
enum MACRO_DA_IOS {DA_IOS_EXCEEDED = -50,};
enum MACRO_DA_NOT {DA_NOT_SC = -31,};
enum MACRO_DA_SST {DA_SST_FAILED = -40,};
enum MACRO_DC6150 {DC6150 = 0x6,};
enum MACRO_DC6250 {DC6250 = 0x6,DC6320 = 0x8,};
enum MACRO_DC6525 {DC6525 = 0x8,DC9135SL = 0x21,DC9210 = 0x22,DC9135 = 0x23,DC9100 = 0x24,};
enum MACRO_DC9100 {DC9100_SHORT = 0x26,};
enum MACRO_DEMAND {DEMAND_MAGIC = 0x10B,DL_MAGIC = 0x10D,SHL_MAGIC = 0x10E,HP9000_ID = 0x208,HP98x6_ID = 0x20A,HP9000S200_ID = 0x20C,};
enum MACRO_DESERR {DESERR_NONE = 0,DESERR_NOHWDEVICE = 1,DESERR_HWERROR = 2,DESERR_BADPARAM = 3,};
enum MACRO_DES_HW {DES_HW = 0,DES_SW = 2,};
enum MACRO_DEVICE {DEVICE_CLR = 1,BUS_CLR = 2,HW_CLR = 3,CLEAR_PPOLL = 16,};
enum MACRO_DF_UID {DF_UID = -1,DF_DEVICE_ID = 0,};
enum MACRO_DGNCMP {DGNCMP = 0x3334,};
enum MACRO_DILPRI {DILPRI = 668,};
enum MACRO_DIRSIZ {DIRSIZ_CONSTANT = 14,};
enum MACRO_DL_CMD {DL_CMD_MASK = 0xF,DL_CMD_OK = 0x0,};
enum MACRO_DL_HDR {DL_HDR_VERSION_ID = 89060912,DL_HDR_VERSION_ID2 = 93092112,};
enum MACRO_DL_QOS {DL_QOS_DONT_CARE = -2,};
enum MACRO_DL_RSP {DL_RSP_OK = 0x0,DL_RSP_RS = 0x10,DL_RSP_NE = 0x30,DL_RSP_NR = 0x40,DL_RSP_UE = 0x50,DL_RSP_IP = 0x70,DL_RSP_UN = 0x90,DL_RSP_IT = 0xF0,};
enum MACRO_DRIVER {DRIVER_CKO = 0x1,DRIVER_COW = 0x2,DRIVER_LFP = 0x4,DRIVER_LNP = 0x8,};
enum MACRO_DRV_MP {DRV_MP = 0x1,DRV_HP_SUPPORTED = 0x2,DRV_IP_MULTICAST = 0x4,DRV_CKO = 0x8,DRV_COW = 0x10,DRV_LFP = 0x20,DRV_NO_LOOPBACK = 0x40,DRV_LNP = 0x80,DRV_RETRY = 0x100,DRV_NO_SRC_ROUTING = 0x200,DRV_NO_FAST_PATH = 0x400,DRV_MBLK = 0x800,};
enum MACRO_D_CHAN {D_CHAN_LOCKED = 0x1,D_16_BIT = 0x2,D_RAW_CHAN = 0x4,D_MAPPED = 0x8,EIR_CONTROL = 0x10,READ_PATTERN = 0x40,EOI_CONTROL = 0x80,USE_DMA = 0x100,USE_INTR = 0x200,PC_HANDSHK = 0x400,PARITY_CONTROL = 0x4000000,ACTIVE_DMA = 0x20000000,RESERVED_DMA = 0x40000000,};
enum MACRO_D_DATA {D_DATA = 1,D_TYPE = 2,D_NEEDS = 3,};
enum MACRO_D_HUNG {D_HUNG = -2,};
enum MACRO_D_NONE {D_NONE = 0x0,D_CMD = 0x0,};
enum MACRO_ECHRNG {ECHRNG = 37,EL2NSYNC = 38,EL3HLT = 39,EL3RST = 40,ELNRNG = 41,EUNATCH = 42,ENOCSI = 43,EL2HLT = 44,ENONET = 50,ENOPKG = 55,EADV = 58,ESRMNT = 59,ECOMM = 60,EDOTDOT = 66,ENOSYM = 215,};
enum MACRO_ECTEST {ECTEST_INIT = 536898304,};
enum MACRO_EEPROM {EEPROM_BOOT_OFFSET = 0x1A00,ESB_SLOT_BASE = 0x1B62,};
enum MACRO_EFA_IA {EFA_IA_64 = 0x0,PT_IA_64_ARCHEXT = 0x70000000,PT_IA_64_UNWIND = 0x70000001,PF_IA_64_NORECOV = 0x80000000,};
enum MACRO_EITHER {EITHER = 4,CENTER = 5,};
enum MACRO_ELFABI {ELFABI_HPUX_NONE = 0,ELFABI_HPUX_REL11 = 1,};
enum MACRO_ENABLE {ENABLE_PSEUDO_EOF = 1,DISABLE_PSEUDO_EOF = 2,SET_EOF_CONDITION = 3,CLEAR_EOF_CONDITION = 4,SET_PRE_SPACE_MODE = 5,SET_POST_SPACE_MODE = 6,SET_CRITICAL_MODE = 7,CLEAR_CRITICAL_MODE = 8,};
enum MACRO_EUNDEF {EUNDEF = 0,ENOTFOUND = 1,EACCESS = 2,ENOSPACE = 3,EBADOP = 4,EBADID = 5,EEXISTS = 6,ENOUSER = 7,EOPTNEG = 8,};
enum MACRO_EUSERS {EUSERS = 68,EREMOTE = 71,ESOCKTNOSUPPORT = 222,EPFNOSUPPORT = 224,ENETRESET = 230,ESHUTDOWN = 236,ETOOMANYREFS = 237,EREFUSED = 239,EREMOTERELEASE = 240,EHOSTDOWN = 241,};
enum MACRO_FABRIC {FABRIC_NAME_SIZE = 8,DATA_SIZE = 40,};
enum MACRO_FCREAT {FCREAT = 0x100,FTRUNC = 0x200,FEXCL = 0x400,};
enum MACRO_FHSIZE {FHSIZE = 32,FHSIZE3 = 64,};
enum MACRO_FIRST2 {FIRST_SCROLL_FLAG = 1,VALUE_SET_FLAG = 2,END_TIMER = 4,ARROW1_AVAILABLE = 8,ARROW2_AVAILABLE = 16,SLIDER_AVAILABLE = 32,KEYBOARD_GRABBED = 64,OPERATION_CANCELLED = 128,};
enum MACRO_FLOPPY {FLOPPY_UNKNOWN = 0,FLOPPY_3INCH = 90,FLOPPY_5INCH = 130,FLOPPY_8INCH = 200,};
enum MACRO_FLUSHR {FLUSHR = 0x1,FLUSHW = 0x2,FLUSHRW = 0x3,FLUSHBAND = 0x40,};
enum MACRO_FMTERR {FMTERR_INV_FLAGS = 1,FMTERR_OUT_CREATE = 2,FMTERR_ACCESS_IN = 3,FMTERR_SYS_ERROR = 4,FMTERR_NO_MEM = 5,FMTERR_INV_OPT_FP = 6,FMTERR_INV_OPT_FD = 7,FMTERR_INV_MC_FP = 8,FMTERR_INV_MC_FD = 9,FMTERR_INV_BIN_MP = 10,FMTERR_INV_TL_MSG = 11,FMTERR_INV_HDR_PTR = 12,FMTERR_INV_HDR = 13,FMTERR_INV_OUT_FP = 14,FMTERR_INV_OUT_FD = 15,FMTERR_INV_NBYTES = 16,FMTERR_INV_DATA_PTR = 17,FMTERR_FORMAT_WRITE = 18,FMTERR_INV_L_STR = 19,FMTERR_FORMAT_FPRINTF = 20,NUMBERS_OF_LOG_EVENT = 1000,};
enum MACRO_FM_CRP {FM_CRP = -20,};
enum MACRO_FM_EDP {FM_EDP = -32,};
enum MACRO_FM_ERP {FM_ERP = -24,};
enum MACRO_FM_PSP {FM_PSP = -4,};
enum MACRO_FOLLOW {FOLLOW_LINKS = 1,FOLLOW_PATH = 2,HARD_LOOKUP = 4,ALL_RESULTS = 8,NO_CACHE = 16,MASTER_ONLY = 32,EXPAND_NAME = 64,RETURN_RESULT = 128,ADD_OVERWRITE = 256,REM_MULTIPLE = 512,MOD_SAMEOBJ = 1024,ADD_RESERVED = 2048,REM_RESERVED = 4096,MOD_EXCLUSIVE = 8192,USE_DGRAM = 65536,NO_AUTHINFO = 131072,};
enum MACRO_FORM_N {FORM_N = 1,FORM_T = 2,FORM_C = 3,};
enum MACRO_FSSDLY {FSSDLY = 1,FS_IDDEF = 0,};
enum MACRO_FSSDSH {FSSDSH = 1,};
enum MACRO_FTLACT {FTLACT = 0x3F,};
enum MACRO_FTLCLN {FTLCLN = 0x4000,};
enum MACRO_FTLJMP {FTLJMP = 0x2,};
enum MACRO_FTLRET {FTLRET = 0,};
enum MACRO_FTW_DP {FTW_DP = 4,FTW_CDF = 16,FTW_SERR = 32,};
enum MACRO_FTW_SL {FTW_SL = 5,};
enum MACRO_F_WORD {F_WORD_DMA = 0x2,F_PRIORITY_DMA = 0x4,F_SIMONB = 0x8,LOCKED = 0x10,ACTIVE_CONTROLLER = 0x40,SYSTEM_CONTROLLER = 0x80,IST = 0x100,STATE_SAVED = 0x200,BOBCAT_HPIB = 0x400,IN_HOLDOFF = 0x800,DO_BOBCAT_PPOLL = 0x1000,F_LWORD_DMA = 0x8000,FHS_TIMED_OUT = 0x10000,FHS_ACTIVE = 0x20000,DIOII_START_ADDR = 0x1000000,};
enum MACRO_GCLOCK {GCLOCK_BLOCKSIG_NOWAIT = 536889110,GCLOCK_NOWAIT = 536889111,};
enum MACRO_GCTEST {GCTEST_HIGHWATER_SIMULATE = 0,CRT_SYS_CONFIG_LENGTH = 2,CRT_CONFIG_LENGTH = 3,};
enum MACRO_GLOBAL {GLOBAL_RESERVED = 0x300000,};
enum MACRO_GP_INT {GP_INT_EIR = 0x4,GP_PSTS = 0x8,NO_TIMEOUT = 0x10000000,};
enum MACRO_GP_MAX {GP_MAX = 10,ID_sys = 65536,ID_sysDescr = 65537,ID_sysObjectID = 65538,ID_sysUpTime = 65539,ID_ifNumber = 131073,ID_ifTable = 131074,ID_ifEntry = 131075,ID_atNumEnt = 196609,ID_atTable = 196610,ID_atEntry = 196611,ID_ip = 262144,ID_ipForwarding = 262145,ID_ipDefaultTTL = 262146,ID_ipInReceives = 262147,ID_ipInHdrErrors = 262148,ID_ipInAddrErrors = 262149,ID_ipForwDatagrams = 262150,ID_ipInUnknownProtos = 262151,ID_ipInDiscards = 262152,ID_ipInDelivers = 262153,ID_ipOutRequests = 262154,ID_ipOutDiscards = 262155,ID_ipOutNoRoutes = 262156,ID_ipReasmTimeout = 262157,ID_ipReasmReqds = 262158,ID_ipReasmOKs = 262159,ID_ipReasmFails = 262160,ID_ipFragOKs = 262161,ID_ipFragFails = 262162,ID_ipFragCreates = 262163,ID_ipRoutingDiscards = 262167,};
enum MACRO_GP_sys {GP_sys = 1,GP_if = 2,GP_at = 3,GP_ip = 4,GP_icmp = 5,GP_tcp = 6,GP_udp = 7,GP_trans = 10,};
enum MACRO_HILDKR {HILDKR = 0x2000683D,HILER1 = 0x2000683E,HILER2 = 0x2000683F,HILP1 = 0x20006840,HILP2 = 0x20006841,HILP3 = 0x20006842,HILP4 = 0x20006843,HILP5 = 0x20006844,HILP6 = 0x20006845,HILP7 = 0x20006846,HILP = 0x20006847,HILA1 = 0x20006848,HILA2 = 0x20006849,HILA3 = 0x2000684A,HILA4 = 0x2000684B,HILA5 = 0x2000684C,HILA6 = 0x2000684D,HILA7 = 0x2000684E,HILA = 0x2000684F,};
enum MACRO_HOSINV {HOSINV = 0x0,};
enum MACRO_HP2235 {HP2235 = 0xB,MAX_BUFF_SIZE = 0x3E4,MAX_READ_LENGTH = 0x400,};
enum MACRO_HP2934 {HP2934 = 0x11,};
enum MACRO_HSWDTH {HSWDTH = 16,};
enum MACRO_HW_MAX {HW_MAX_DUMP_TAG = 1,INFO_DEFAULT_RETRIES = -1,};
enum MACRO_IEEE_0 {IEEE = 0x1,HP_EXT_IEEE = 0x2,SNAP = 0x4,ETHERTYPE = 0x8,NOVELL = 0x10,};
enum MACRO_IENFMT {IENFMT = 0x400,};
enum MACRO_IENQAK {IENQAK = 8192,IMAXBEL = 16384,};
enum MACRO_IGNBRK {IGNBRK = 0x1,BRKINT = 0x2,IGNPAR = 0x4,PARMRK = 0x8,INPCK = 0x10,ISTRIP = 0x20,INLCR = 0x40,IGNCR = 0x80,ICRNL = 0x100,_IUCLC = 0x200,IXON = 0x400,_IXANY = 0x800,IXOFF = 0x1000,_IENQAK = 0x2000,_IMAXBEL = 0x4000,};
enum MACRO_IGNORE {IGNORE_WIDE_RESIDUE_MSG = 0x23,};
enum MACRO_ILL_BD {ILL_BD = -4,};
enum MACRO_IMPMEM {IMPMEM_GROUPS = 1,RECURS_GROUPS = 2,NEGMEM_GROUPS = 4,};
enum MACRO_IMPORT {IMPORT_SYMBOLS = 0x1,EXPORT_SYMBOLS = 0x2,NO_VALUES = 0x4,GLOBAL_VALUES = 0x8,INITIALIZERS = 0x10,PROG_HANDLE = 0xFFFFFFFF,};
enum MACRO_INADDR {INADDR_ANY = 0x0,INADDR_BROADCAST = 0xFFFFFFFF,};
enum MACRO_INSTLD {INSTLD_UNIT_BYTE = 1,HDR_SIZE_BYTE = 3,CTRL_TYPE_BYTE = 4,};
enum MACRO_IOSCAN {IOSCAN_HPIB_FIXED_DISK = 0,IOSCAN_HPIB_REMOV_DISK = 1,IOSCAN_HPIB_TAPE = 2,};
enum MACRO_IPCPRI {IPCPRI = 665,PPIPE = 666,PVFS = 667,PWAIT = 670,PLOCK = 675,PSLEP = 680,PUSER = 690,PMAX_TIMESHARE = 767,PNOT_REALTIME = 32767,};
enum MACRO_IR_ANY {IR_ANY = 0x0,TCPS_INVALID = 0xFFFFFFF9,TCPS_CLOSED = 0xFFFFFFFA,TCPS_IDLE = 0xFFFFFFFB,TCPS_BOUND = 0xFFFFFFFC,TCPS_LISTEN = 0xFFFFFFFD,TCPS_SYN_SENT = 0xFFFFFFFE,TCPS_SYN_RCVD = 0xFFFFFFFF,};
enum MACRO_ITIMER {ITIMER_REAL = 0,ITIMER_VIRTUAL = 1,ITIMER_PROF = 2,ITIMER_THREAD_REAL = 3,ITIMER_THREAD_VIRTUAL = 4,ITIMER_THREAD_PROF = 5,};
enum MACRO_IWRITE {IWRITE = 0x80,};
enum MACRO_KELVIN {KELVIN_1 = 0x1,KELVIN_2 = 0x2,FAHRENHEIT_1 = 0x3,FAHRENHEIT_2 = 0x4,CURRENT_UNITS = 0x5,};
enum MACRO_KERNEL {KERNEL_DIAG_FROM_PORT = 0,};
enum MACRO_KEY_DL {KEY_DL = 0x148,KEY_IL = 0x149,KEY_DC = 0x14A,KEY_IC = 0x14B,KEY_EIC = 0x14C,KEY_CLEAR = 0x14D,KEY_EOS = 0x14E,KEY_EOL = 0x14F,KEY_SF = 0x150,KEY_SR = 0x151,KEY_NPAGE = 0x152,KEY_PPAGE = 0x153,KEY_STAB = 0x154,KEY_CTAB = 0x155,KEY_CATAB = 0x156,KEY_ENTER = 0x157,KEY_SRESET = 0x158,KEY_RESET = 0x159,KEY_PRINT = 0x15A,KEY_LL = 0x15B,KEY_A1 = 0x15C,KEY_A3 = 0x15D,KEY_B2 = 0x15E,KEY_C1 = 0x15F,KEY_C3 = 0x160,};
enum MACRO_KFALSE {KFALSE = 0,};
enum MACRO_KI_MAX {KI_MAX_PROCS = 32,};
enum MACRO_KI_VXD {KI_VXD = 585,};
enum MACRO_LABELG {LABELG_ACC_PAD = 15,};
enum MACRO_LENGTH {LENGTH_UNITS = 1,};
enum MACRO_LE_IPC {LE_IPC_SEND_NOMEM_VC = 3000,LE_NO_NAME_MEM = 4000,LE_CALL_SOCK_Q_LIM = 4001,LE_SOCK_ABORT = 5000,};
enum MACRO_LE_LAN {LE_LAN_BIND_ERROR = 1000,LE_LAN_CTRL_NOT_READY = 1001,LE_LAN_DMA_NOT_READY = 1002,LE_LAN_TIMER_EVENT = 1005,LE_LAN_EVENT_DOD = 1008,LE_LAN_EVENT_PER = 1009,LE_LAN_LLIO_HW_PROBLEM = 1011,LE_LAN_SOFTWARE_DISASTER = 1014,LE_LAN_EVENT_STF = 1015,LE_LAN_EVENT_WTF = 1016,LE_LAN_EVENT_APR = 1017,LE_LAN_HARDWARE_DISASTER = 1018,LE_LAN_DRAM_PARITY_ERR = 1019,LE_INIT_LOG_FAILURE = 1020,LE_LAN_OFFLINE = 1021,LE_LAN_RAM_NA_CHG_FAILURE = 1022,LE_LAN_HW_ID = 1023,LE_LAN_READ_NOVRAM_FAILURE = 1024,LE_LAN_EVENT_SCP_FAIL = 1025,LE_LAN_EVENT_596_SLFTST_FAIL = 1026,LE_LAN_EVENT_596_INT_LB_FAIL = 1027,LE_LAN_EVENT_INT_LB_501_FAIL = 1028,LE_LAN_CABLE_ERROR = 1029,LE_LAN_RINT_PKT_SIZE = 2001,LE_LAN_EVENT_PER_RESET = 2002,LE_LAN_TIMER_EVENT_RESET = 2003,LE_LAN_EVENT_EXT_LB_MAU_FAIL = 2004,LE_LAN_EVENT_596_CMD_TIMEOUT = 2005,LE_LAN_EVENT_ILLEGAL_FRAME = 2006,LE_LAN_SQE_ERROR = 2008,LE_LAN_CTRL_POWERFAIL = 3007,LE_LAN_EVENT_LAW = 3016,LE_LAN_EVENT_82596_BUG_A = 3017,LE_LAN_EVENT_82596_BUG_B = 3018,LE_LAN_EVENT_82596_BUG_C = 3019,LE_LAN_EVENT_82596_BUG_D = 3020,LE_LAN_UNEXPECTED_EVENT = 3029,LE_STRATEGY_NO_BUFFERS = 4001,LE_IEOUTPUT_NO_BUFS = 4002,LE_LAN_CTRL_NO_RESOURCES = 4003,LE_OUTQ_FULL = 4007,LE_LAN_EVENT_MBUF_ALLOC_FAIL = 4010,LE_OUTQ_NO_PACKETS = 5000,LE_IERINT_BAD_CTRL = 5008,LE_LOG_SAP = 5035,LE_LOG_TYPE = 5036,LE_LOG_CANON = 5037,LE_DROP_SAP = 5038,LE_DROP_TYPE = 5039,LE_DROP_CANON = 5040,LE_RINT_UNLOGGED_SAP = 5041,LE_RINT_UNLOGGED_TYPE = 5042,LE_RINT_UNLOGGED_CANON = 5043,LE_RINT_UNLOGGED_SNAP = 5044,LE_RINT_UNLOGGED_SNAP_EXT = 5045,LE_TRAILER_PKT_DROPPED = 5047,};
enum MACRO_LE_NFS {LE_NFS_MACCT_CREATE = 2000,LE_NFS_XDR_CALLHDR = 2001,LE_NFS_PROTO_FIND = 2002,LE_NFS_SOCREATE = 2003,LE_NFS_SOBIND = 2004,LE_NFS_XDRREPL = 2020,LE_NFS_READ_ERROR = 2021,LE_NFS_RWVP_SHORT_WRITE = 2022,LE_NFS_WRITE_ERROR = 2023,LE_NFS_WRITE_ERROR_DEFAULT = 2024,LE_NFS_FUNC_FAIL_ERROR = 2025,LE_NFS_LM_LOCKDENIED = 2030,LE_NFS_LM_UNLOCKDENIED = 2031,LE_NFS_LM_CANCEL_NOLOCKS = 2032,LE_NFS_LM_NOT_REGISTERED = 2033,LE_NFS_LM_RPCERROR = 2034,LE_NFS_LM_PORTMAP_NOT_UP = 2035,LE_NFS_LM_NOT_UP = 2036,LE_NFS_TEST_ERROR = 2099,LE_NFS_COPYIN_FAIL = 2100,LE_NFS_COPYOUT_FAIL = 2101,LE_NFS_FUNC_FAIL_WARN = 3000,LE_NFS_SERVER_OK = 3001,LE_NFS_SERVER_GIVE_UP = 3002,LE_NFS_SERVER_TRYING = 3003,LE_NFS_NO_BODY = 3004,LE_NFS_BAD_LEN = 3005,LE_NFS_PCBADDR = 3006,LE_NFS_FSEND_FAIL = 3007,LE_NFS_UNPRIV_REQ = 3008,LE_NFS_AUTH_LEN = 3020,LE_NFS_MARSHAL_FAIL = 3021,LE_NFS_U_SHORT_DECODE = 3022,LE_NFS_BOOL_DECODE = 3023,LE_NFS_OPAQUE_DECODE = 3024,LE_NFS_OPAQUE_ENCODE = 3025,LE_NFS_BYTES_SIZE = 3026,LE_NFS_BYTES_BAD = 3027,LE_NFS_ENUM_DSCMP = 3028,LE_NFS_STRING_SIZE = 3029,LE_NFS_STRING_BAD = 3030,LE_NFS_ARRAY_SIZE = 3031,LE_NFS_ARRAY_BAD = 3032,LE_NFS_OVERLAP = 3040,LE_NFS_LONG_BADOP = 3041,LE_NFS_U_LONG_BADOP = 3042,LE_NFS_STRING_BADOP = 3043,LE_NFS_BOOL_BADOP = 3044,LE_NFS_BYTES_BADOP = 3045,LE_NFS_U_SHORT_BADOP = 3046,LE_NFS_OPAQUE_BADOP = 3047,LE_NFS_LM_PORTMAP_GIVE_UP = 3050,LE_NFS_LM_PORTMAP_TRYING = 3051,LE_NFS_LM_PORTMAP_OK = 3052,LE_NFS_ROOT_ONLY = 3100,LE_NFS_LOOKUP_FAIL = 3101,LE_NFS_BAD_FLAGS = 3102,LE_NFS_LOAD_ADDR = 3103,LE_NFS_UNEXPORT_FAIL = 3104,LE_NFS_GETFH_FAIL = 3105,LE_NFS_MAKEFH_FAIL = 3106,LE_NFS_FINDEXIVP_FAIL = 3107,LE_NFS_BIND_MGET = 4000,LE_NFS_FSEND_MGET = 4001,LE_NFS_FRAG_MGET = 4002,LE_NFS_DUP_MGET = 4003,LE_NFS_MCLGETX_FAIL = 4004,LE_NFS_MGET_FAIL = 4005,LE_NFS_RROK_MBUF_FAIL = 4006,LE_NFS_EXPAND = 4007,LE_NFS_OVERDRAW = 4008,LE_NFS_ENOMEM = 4009,};
enum MACRO_LE_NSE {LE_NSE_CANT_UNLINK = 3000,LE_NSE_NO_STREAMS = 4000,LE_NSE_NO_QUEUES = 4001,LE_NSE_NO_STREVENT = 4002,LE_NSE_NO_KMEM = 4003,};
enum MACRO_LE_PXP {LE_PXP_INVALID_USER_OPTIONS = 2000,LE_PXP_SEQNUM_NO_MATCH = 3000,LE_PXP_RESOURCE_LIMITATION = 4000,LE_PXP_BAD_HEADER = 5001,LE_PXP_DUPLICATE_REQUEST = 5002,LE_PXP_CTLINPUT = 5003,LE_PXP_FUNC_NOT_SUPPORTED = 5004,LE_PXP_RETRY_EXCEEDED = 5005,};
enum MACRO_LE_TCP {LE_TCP_TERM = 3000,LE_TCP_INPUT_PKT_DROPPED = 3001,LE_TCP_CKSUM_ERR = 3002,LE_TCP_TOS_ERR = 3003,LE_TCP_SEC_ERR = 3004,LE_TCP_SHORT = 3005,LE_TCP_MM_MSG_2MANY = 3006,LE_TCP_MM_MSG_2BIG = 3007,LE_TCP_MORE_DATA_DEFER = 3008,LE_TCP_PKT_DROP_STATE = 3009,LE_TCP_PKT_DROP_SOCK = 3010,LE_TCP_CONN_DROP_RXMT = 3011,LE_TCP_CONN_DROP_KEEP_ALIVE = 3012,LE_TCP_CONN_DROP_UNREACH = 3013,LE_TCP_REASS_PKT_DROPPED = 3014,LE_TCP_DROP = 3015,LE_TCP_DROP_WITH_RST = 3016,LE_TCP_NO_MEM = 4000,LE_TCP_DRAIN = 5000,LE_TCP_INPUT = 5001,LE_TCP_SPORT_DPORT = 5002,LE_TCP_ACK = 5003,LE_TCP_NEW_WINDOW = 5004,LE_TCP_INPUT_EXIT = 5005,LE_TCP_OPT_PROC = 5006,LE_TCP_REASS = 5007,LE_TCP_PRESENT = 5008,LE_TCP_MMUPDT = 5009,LE_TCP_USRREQ_ENTRY = 5010,LE_TCP_USRREQ_EXIT = 5011,LE_TCP_OUTPUT = 5012,LE_TCP_OUTPUT_NIL = 5013,LE_TCP_RESPOND = 5014,LE_TCP_REXMT = 5015,LE_TCP_DATA_IN = 5016,LE_TCP_DATA_OUT = 5017,LE_TCP_USRREQ = 5018,LE_TCP_CHANGE_STATE = 5019,LE_TCP_RESET_SENT = 5020,};
enum MACRO_LE_UDP {LE_UDP_BADLEN = 3000,LE_UDP_CKSUM_ERR = 5000,LE_UDP_CTLINPUT = 5003,};
enum MACRO_LINKER {LINKER_AUX_ID = 1,MPE_AUX_ID = 2,DEBUGGER_AUX_ID = 3,HPUX_AUX_ID = 4,IPL_AUX_ID = 5,VERSION_AUX_ID = 6,MPE_PROG_AUX_ID = 7,MPE_SOM_AUX_ID = 8,COPYRIGHT_AUX_ID = 9,SHLIB_VERSION_AUX_ID = 10,PRODUCT_SPECIFIC_AUX_ID = 11,NLM_AUX_ID = 12,};
enum MACRO_LITTLE {LITTLE_ENDIAN = 1234,BIG_ENDIAN = 4321,};
enum MACRO_LOCALE {LOCALE_STATUS = 1,};
enum MACRO_LOCKED {LOCKED_DMA = 16777216,};
enum MACRO_LOQUIX {LOQUIX_DMA_STOP = 67108864,LOQUIX_DIAG_PEND_EIM = 268435456,};
enum MACRO_L_PROB {L_PROB = -6,};
enum MACRO_L_WANT {L_WANT = 0x1,L_BUSY = 0x2,L_NFS_WANTS_LOCK = 0x4,L_HOLD = 0x10,VSUID = 0x800,};
enum MACRO_MAGNUS {MAGNUS_1 = 0x24,DC9120 = 0x25,};
enum MACRO_MAXCPG {MAXCPG = 32,};
enum MACRO_MAXLNS {MAXLNS = 6,};
enum MACRO_MAXPID {MAXPID = 30000,};
enum MACRO_MAXSLP {MAXSLP = 20,SAFERSS = 32,DISKRPM = 45,};
enum MACRO_MAXTID {MAXTID = 30000,MAXUID = 2147483647,};
enum MACRO_MAXTTL {MAXTTL = 255,};
enum MACRO_MAX_ID {MAX_ID = 16,MAX_IO_PATH_ELEMENTS = 15,};
enum MACRO_MAX_MT {MAX_MT_DEV = 32,MAX_MT_STRING = 64,};
enum MACRO_MAX_VT {MAX_VT_ALARM = 2147483647,};
enum MACRO_MEMORY {MEMORY_ALLOC_FAILED = -4,};
enum MACRO_MININT {MININT = -1,};
enum MACRO_MINUTE {MINUTE_DIGIT = 2,};
enum MACRO_MIN_IO {MIN_IO_LINE = 16,};
enum MACRO_MIRAGE {MIRAGE_EEPROM_BASE_ADDR = 0xF00C0400,};
enum MACRO_MNTTAB {MNTTAB_MODE = 420,};
enum MACRO_MODE_0 {MODE = 0x1B4,E_NO_SET = 0x3E9,E_NO_MSG = 0x3EA,E_ILLEGAL_SET = 0x3EB,};
enum MACRO_MODE_S {MODE_S = 1,MODE_B = 2,MODE_C = 3,REC_ESC = -1,};
enum MACRO_MODIFY {MODIFY_DATA_POINTER_MSG = 0x0,SDTR_MSG = 0x1,WIDE_DATA_TRANSFER_REQ_MSG = 0x3,SCSI_PT = 0x9,};
enum MACRO_MOD_MS {MOD_MS_B_UNK = 0,MOD_MS_B_STATIC = 1,MOD_MS_B_REGED = 2,MOD_MS_B_LOADED = 4,};
enum MACRO_MOD_TY {MOD_TY_NONE = 0,MOD_TY_MISC = 1,MOD_TY_STR = 2,MOD_TY_WSIO2_CLASS = 3,MOD_TY_WSIO2_INTFC = 4,MOD_TY_WSIO_CLASS = 5,MOD_TY_WSIO_INTFC = 6,MOD_TY_SDEV = 7,};
enum MACRO_MQ_CKO {MQ_CKO_OUT0 = 2,MQ_CKO_OUT1 = 3,};
enum MACRO_MSGcmd {MSGcmd_complete = 0x0,MSGext_message = 0x1,MSGsave_data_ptr = 0x2,MSGrestore_ptr = 0x3,MSGdisconnect = 0x4,MSGinit_detect_error = 0x5,MSGabort = 0x6,MSGmsg_reject = 0x7,MSGno_op = 0x8,MSGmsg_parity_error = 0x9,MSGlinked_cmd_complete = 0xA,};
enum MACRO_MSKCNT {MSKCNT = 8,};
enum MACRO_MTWEOF {MTWEOF = 0,MTFSF = 1,MTBSF = 2,MTFSR = 3,MTBSR = 4,MTREW = 5,MTOFFL = 6,MTNOP = 7,MTEOD = 8,MTWSS = 9,MTFSS = 10,MTBSS = 11,MTSTARTVOL = 12,MTENDVOL = 13,MTRES = 14,MTREL = 15,MTERASE = 16,MAX_TOP_COUNT = 8388607,};
enum MACRO_MT_LUN {MT_LUN_BIT_POS = 8,MT_BSD_MASK = 128,};
enum MACRO_MT_UNA {MT_UNA = 0x10,};
enum MACRO_M_DATA {M_DATA = 0x0,M_PROTO = 0x1,M_BREAK = 0x8,M_PASSFP = 0x9,M_SIG = 0xB,M_DELAY = 0xC,M_CTL = 0xD,M_IOCTL = 0xE,M_SETOPTS = 0x10,M_RSE = 0x11,QPCTL = 0x80,M_IOCACK = 0x81,M_IOCNAK = 0x82,M_PCPROTO = 0x83,M_PCSIG = 0x84,M_FLUSH = 0x86,M_STOP = 0x87,M_START = 0x88,M_HANGUP = 0x89,M_ERROR = 0x8A,M_READ = 0x8B,M_HPDATA = 0x8C,M_COPYIN = 0x8D,M_COPYOUT = 0x8E,M_IOCDATA = 0x8F,M_PCRSE = 0x90,M_STOPI = 0x91,M_STARTI = 0x92,M_NOTIFY = 0x93,M_CLOSE = 0x94,M_CLOSE_REPL = 0x95,};
enum MACRO_M_FREE {M_FREE = 0,M_MBUF = 1,M_DYNAMIC = 2,M_HEADER = 3,M_SOCKET = 4,M_PCB = 5,M_RTABLE = 6,M_HTABLE = 7,M_ATABLE = 8,M_SONAME = 9,M_SOOPTS = 10,M_FTABLE = 11,M_RIGHTS = 12,M_IFADDR = 13,M_NTIMO = 14,M_DEVBUF = 15,M_ZOMBIE = 16,M_NAMEI = 17,M_GPROF = 18,M_IOCTLOPS = 19,M_SUPERBLK = 20,M_CRED = 21,M_TEMP = 22,M_VAS = 23,M_PREG = 24,M_REG = 25,M_IOSYS = 26,M_NIPCCB = 27,M_NIPCSR = 28,M_NIPCPR = 29,M_DQUOTA = 30,M_DMA = 31,M_GRAF = 32,M_ITE = 33,M_SYSVSEMCACHE = 34,M_LVM = 35,M_ATL = 36,M_LOCKLIST = 37,M_DBC = 38,M_KRUSAGE = 39,M_LOSTPAGE = 40,M_COWARGS = 41,M_SPINLOCK = 42,M_NFS_EXPORT = 43,M_NFS_ADDR = 44,M_NFS_LOCK = 45,M_MSEMP = 46,M_MSEMI = 47,M_RAM_DISK = 48,M_NFS_SWAP = 49,M_CALLOUT = 50,M_PTIMERS = 51,M_KTIMER = 52,M_NFS_XDR = 53,M_NFS_RPC = 54,M_NFS_GEN = 55,M_NFS_AUTH = 56,M_LOFS = 57,M_RTSCHED = 58,M_PROC = 59,M_PTRACE = 60,M_SYSVMSGBUF = 61,M_UNICENTER = 62,M_KTHREAD = 63,M_STREAMS = 64,M_STRSQ = 65,M_MBLK = 66,M_MBDATA = 67,M_STRMODSW = 68,M_STRSIGS = 69,M_STROSR = 70,M_STRPOLLS = 71,M_STRHEAD = 72,M_STRQUEUE = 73,M_STRQBAND = 74,M_TIMOD = 75,M_STREAMSPIPE = 76,M_STREAMSFFS = 77,M_KXTI = 78,M_KSIGINFO = 79,M_SOTIMEQ = 80,M_CHANQ = 81,M_CHANQ_KTINFO = 82,M_KT_TIMERS = 83,M_KSIGWAIT = 84,M_LOCKMAP = 85,M_LOCKACTION = 86,M_NSCHUNK = 87,M_SIGCOUNT = 88,M_AIO = 89,M_MQPINFO = 90,M_MQCNTL = 91,M_MSHINFO = 92,M_AUTOSYS = 93,M_SCALLARGS = 94,M_EXEC = 95,M_EXEC_INTERP = 96,M_ELF_PHDR = 97,M_CORE = 98,M_AUDIT = 99,M_SEM_PINFO = 100,M_SEM_PDESC = 101,M_SOCKBUF = 102,M_KVM = 103,M_SENDFILE = 104,M_SKLIST = 105,M_SKNODE = 106,M_EPIC = 107,M_FUNCTIONPTRS = 108,M_FUNCTIONNAMES = 109,M_1FUNCTIONNAME = 110,M_LGPG = 111,M_SWAPHD = 112,M_TLBTRACE = 113,M_BOR_LOCK = 114,M_KPERFMON = 115,M_DNLC = 116,M_PAGEIN = 117,M_LAST = 118,};
enum MACRO_NCARGS {NCARGS = 2048000,};
enum MACRO_NC_TPI {NC_TPI_CLTS = 1,NC_TPI_COTS = 2,NC_TPI_COTS_ORD = 3,NC_TPI_RAW = 4,};
enum MACRO_NDADDR {NDADDR = 12,};
enum MACRO_ND_SET {ND_SET_BROADCAST = 1,ND_SET_RESERVEDPORT = 2,ND_CHECK_RESERVEDPORT = 3,ND_MERGEADDR = 4,};
enum MACRO_NIADDR {NIADDR = 3,};
enum MACRO_NIMBUS {NIMBUS_LGB_FB = 0x4A,NIMBUS_LGB_CONTROL = 0x4B,SVER_MODEL_MAP8024 = 0x58,};
enum MACRO_NIOPDE {NIOPDE = 512,};
enum MACRO_NIS_PK {NIS_PK_DH = 1,NIS_PK_RSA = 2,NIS_PK_KERB = 3,};
enum MACRO_NL_CAT {NL_CAT_LOCALE = 1,};
enum MACRO_NMBPCL {NMBPCL = 16,};
enum MACRO_NOLINE {NOLINE = 30000,PASTENDPOS = 2147483647,};
enum MACRO_NORMAL {NORMAL_STRTAB = -1,};
enum MACRO_NOT_ON {NOT_ON_LIST = 7,ON_LIST = 8,};
enum MACRO_NOUNIT {NOUNIT = -9,};
enum MACRO_NO_ANS {NO_ANS = -3,};
enum MACRO_NO_Ldv {NO_Ldv = -7,};
enum MACRO_NSDIAG {NSDIAG_MAX_DATA = 20,NS_LF_NODATA = 1,};
enum MACRO_OCTART {OCTART = 1,BACKPLANE = 2,LINK = 3,QUADRILOOP = 4,};
enum MACRO_OFLUSH {OFLUSH = 0x2,SINT = 0x3,CHTIME = 0x4,RSLOT = 0x6,DKRES = 0x7,BLKSZ = 0x9,RRAM = 0xA,WRAM = 0xB,DKR_SEND = 0x14,DKR_RCVB = 0x15,DKR_REXP = 0x16,DKR_RCNTL = 0x17,DKR_ERR = 0x18,DKR_INDONE = 0x1C,DKR_OPEN = 0x1D,DKR_DGN = 0x1E,DKR_CPMUP = 0x1F,DKR_RSLOT = 0x32,DKR_RRAM = 0x33,DKR_WRAM = 0x34,};
enum MACRO_OLD_NS {OLD_NS_LC_LOGSTAT = 0,NS_LC_DISASTER = 65544,};
enum MACRO_OLD_TR {OLD_TR_LINK_INBOUND = 0x1,TR_LINK_OUTBOUND = 0x10000000,};
enum MACRO_ON_OFF {ON_OFF = 13,};
enum MACRO_O_SYNC {O_SYNC = 0x8000,O_DSYNC = 0x40000,O_RSYNC = 0x80000,};
enum MACRO_PARENB {PARENB = 0x200,PARODD = 0x400,_LOBLK = 0x2000,};
enum MACRO_PA_ISC {PA_ISC_TABLE_SIZE = 256,};
enum MACRO_PCI_CC {PCI_CC_LEGACY = 0x0,PCI_CC_MASSSTORE = 0x1,PCI_CC_NETWORK = 0x2,PCI_CC_DISPLAY = 0x3,PCI_CC_MULTIMEDIA = 0x4,PCI_CC_MEMORY = 0x5,PCI_CC_BRIDGE = 0x6,PCI_CC_SIMPLECOMM = 0x7,PCI_CC_BASESYSTEM = 0x8,PCI_CC_INPUTDEV = 0x9,PCI_CC_DOCKINGSTN = 0xA,PCI_CC_PROCESSOR = 0xB,PCI_CC_SERIALBUS = 0xC,PCI_CC_WIRELESS = 0xD,PCI_CC_I2O = 0xE,PCI_CC_SATCOMM = 0xF,PCI_CC_CRYPTCNTRL = 0x10,PCI_CC_DSP = 0x11,};
enum MACRO_PCI_CS {PCI_CS_VENDOR_ID = 0x0,PCI_CS_DEVICE_ID = 0x2,PCI_CS_COMMAND = 0x4,PCI_CS_STATUS = 0x6,PCI_CS_REV_ID = 0x8,};
enum MACRO_PDC_FM {PDC_FM_SIZE = 8,PDC_FRAME_SIZE = 22,PDC_STACK_SIZE = 8192,};
enum MACRO_PDE2_0 {PDE2_0_INV_ACWORD_U = 0x0,PDE2_0_INV_ACWORD_L = 0x0,};
enum MACRO_PDE_AR {PDE_AR_KR = 0x0,PDE_AR_KRW = 0x10,PDE_AR_KRX = 0x20,PDE_AR_KRWX = 0x30,};
enum MACRO_PDE_SB {PDE_SB_PREDICT = 0x1,PDE2_0_RTRAP_POS = 0x2,PDE2_0_DIRTY_POS = 0x3,PDE2_0_EXECUTED_POS = 0x14,PDE2_0_REF_POS = 0x15,PDE2_0_ACCESSED_POS = 0x16,PDE2_0_MODIFIED_POS = 0x17,};
enum MACRO_PF_NOT {PF_NOT_STARTED = 0,PF_PRE_RECOVERY = 1,PF_DOING_RECOVERY = 2,PF_CLOCK_SYNC = 3,PF_READY_TO_EXIT = 4,PF_ALL_DONE = 5,};
enum MACRO_PF_PFR {PF_PFR_SAVESTATE = 1,PF_LOCAL_PD = 3,PF_REMOTE_PD = 4,PF_RECOVERY = 6,};
enum MACRO_POLLIN {POLLIN = 0x1,POLLOUT = 0x4,};
enum MACRO_PRELIM {PRELIM = 1,COMPLETE = 2,CONTINUE = 3,TRANSIENT = 4,};
enum MACRO_PRF_GP {PRF_GP_MODE_SHIFT = 2,PRF_GP_MODE_MASK = 12,PRF_GP_MODE_VALID = 16,};
enum MACRO_PRF_ON {PRF_ON_FLAT = 0,PRF_ON_FULL = 1,};
enum MACRO_PROTID {PROTID_SHIFT = 1,PDE_INVALID = 65535,};
enum MACRO_PSW_CB {PSW_CB_HI = 0xFF,PSW_Y = 0x80000000,};
enum MACRO_PS_MAX {PS_MAX_HW_ELEMS = 32,PS_DK_CYL_SIZE = 80,};
enum MACRO_PS_MSG {PS_MSG_ALLOC = 0x1,PS_MSG_RWAIT = 0x2,PS_MSG_WWAIT = 0x4,};
enum MACRO_PS_SEM {PS_SEM_ALLOC = 0x1,};
enum MACRO_PS_SHM {PS_SHM_ALLOC = 0x1,PS_SHM_DEST = 0x2,PS_SHM_CLEAR = 0x4,};
enum MACRO_PTRACE {PTRACE_MASK = 2293504,};
enum MACRO_PWOPEN {PWOPEN = 0x1,PISOPEN = 0x2,PSPRES = 0x4,PMPRES = 0x8,PBLOCK = 0x10,PUNBLOCK = 0x20,PWMASTER = 0x40,};
enum MACRO_QREADR {QREADR = 0x1,QNOENB = 0x2,QFULL = 0x4,QWANTR = 0x8,QWANTW = 0x10,QUSE = 0x20,QENAB = 0x40,QBACK = 0x80,QOLD = 0x100,QHLIST = 0x200,QBACKTRACE = 0x400,QSYNCH = 0x1000,QSAFE = 0x2000,QWELDED = 0x4000,QUPMODE = 0x8000,QBLKING = 0x10000,QPOP = 0x20000,};
enum MACRO_QUELEN {QUELEN = 50,QDELAY = 180,};
enum MACRO_RANDOM {RANDOM = -1,};
enum MACRO_REBOOT {REBOOT_SYS_QUIESCENT = 0,REBOOT_SYS_REACTIVATED = 1,};
enum MACRO_RECORD {RECORD_MAJOR_VERSION = 1,RECORD_MINOR_VERSION = 13,};
enum MACRO_REMOTE {REMOTE_STATUS = 0,SRQ_STATUS = 1,NDAC_STATUS = 2,SYS_CONT_STATUS = 3,ACT_CONT_STATUS = 4,TALKER_STATUS = 5,LISTENER_STATUS = 6,CURRENT_BUS_ADDRESS = 7,};
enum MACRO_REPEAT {REPEAT_30 = 0,REPEAT_60 = 1,};
enum MACRO_RETURN {RETURN_BYTES_IN_RBL = 6,BUFFERED_MODE = 16,};
enum MACRO_REWIND {REWIND = 1,REWIND_UNLOAD = 2,WRITE_TAPE_MARK = 3,FORWARD_FILE = 4,BACKWARD_FILE = 5,FORWARD_RECORD = 6,BACKWARD_RECORD = 7,GAP_TAPE = 8,SET_DENSITY = 9,SET_COMPRESSION = 10,REMOTE_UNLOAD = 11,SET_START_STOP = 12,SET_STREAMING = 13,SET_IMMEDIATE = 14,SET_NON_IMMEDIATE = 15,SEEK_TO_EOD = 16,WRITE_SETMARK = 17,FORWARD_SETMARK = 18,BACK_SETMARK = 19,INQUIRY_INFO = 20,XSENSE_INFO = 21,SOFTWARE_STATUS = 22,DISPLAY_FUNC = 23,MOVE_MEDIUM = 24,LSSF_INQUIRY_INFO = 25,};
enum MACRO_RJEGID {RJEGID = 8,};
enum MACRO_RJEUID {RJEUID = 68,SHQUID = 69,};
enum MACRO_RLIMIT {RLIMIT_CPU = 0,RLIMIT_DATA = 2,RLIMIT_STACK = 3,RLIMIT_RSS = 5,};
enum MACRO_RS_ALL {RS_ALL_NET_TR = 58,};
enum MACRO_RTPRIO {RTPRIO_NOCHG = 1000,RTPRIO_RTOFF = 1001,};
enum MACRO_RUSAGE {RUSAGE_SELF = 0,RUSAGE_CHILDREN = -1,};
enum MACRO_R_PUSH {R_PUSH_PCON1 = 0x0,R_PUSH_DOT = 0x40,R_MAX = 0x41,R_MIN = 0x42,R_ADD = 0x43,R_SUB = 0x44,R_MULT = 0x45,R_DIV = 0x46,R_MOD = 0x47,R_AND = 0x48,R_OR = 0x49,R_XOR = 0x4A,R_NOT = 0x4B,R_LSHIFT = 0x60,R_ARITH_RSHIFT = 0x80,R_LOGIC_RSHIFT = 0xA0,R_PUSH_NCON1 = 0xC0,R_COMP2 = 0xD1,};
enum MACRO_SAMPLE {SAMPLE_10 = 0xA,SAMPLE_20 = 0x14,SAMPLE_40 = 0x28,SAMPLE_60 = 0x3C,SAMPLE_80 = 0x50,SAMPLE_100 = 0x64,SAMPLE_200 = 0xC8,};
enum MACRO_SARMAG {SARMAG = 8,};
enum MACRO_SBSIZE {SBSIZE = 8192,};
enum MACRO_SB_MAX {SB_MAX = 262144,};
enum MACRO_SCROLL {SCROLL_LED = 0x1,};
enum MACRO_SEARCH {SEARCH_ALL_SUBQS = 1,SEARCH_ENABLED_ONLY = 2,SEARCH_AND_DEQUEUE = 3,};
enum MACRO_SECDAY {SECDAY = 86400,SECYR = 31536000,};
enum MACRO_SECOND {SECOND_DIGIT = 2,};
enum MACRO_SECTOR {SECTOR_SIZ = 2048,};
enum MACRO_SEC_10 {SEC_10 = 10000000,};
enum MACRO_SEC_OP {SEC_OP_MASK = 5056,LDB = 1073741824,LDH = 1140850688,LDW = 1207959552,LDWM = 1275068416,STW = 1744830464,};
enum MACRO_SELECT {SELECT_TEXTURE_INTR = 0x1,SELECT_LOCK_REQST = 0x2,SELECT_CONTEXT_INTR = 0x4,};
enum MACRO_SERIAL {SERIAL_2_INT_LINE = 25,SERIAL_2_INT_MASK = 64,};
enum MACRO_SERVER {SERVER_CONNECTED = 1,DYNAMIC_EVENT_FLOW = 2,USE_AUTHORIZATION_FUNC = 4,};
enum MACRO_SETLEN {SETLEN = 4,};
enum MACRO_SHARE2 {SHARE_CLIENT = 0x0,SHARE_WINDOW = 0x1,UNSHARE_WINDOW = 0x2,UNSHARE_HOST = 0x3,SET_FLOOR = 0x4,SET_DELAY = 0x5,SX_NOTIFY = 0x6,ALLOW_INPUT = 0x7,DISALLOW_INPUT = 0x8,SX_VERSION = 0x9,SX_CHECK_AUTH = 0xA,SX_SEND_FOCUS = 0xB,SX_DHA_CLIENT = 0x20,};
enum MACRO_SHARED {SHARED_32BIT_QUAD4_BEG = -1073737728,SHARED_32BIT_IO = 268435456,};
enum MACRO_SHF_IA {SHF_IA_64_SHORT = 0x10000000,SHF_IA_64_NORECOV = 0x20000000,};
enum MACRO_SHMLBA {SHMLBA = 4096,};
enum MACRO_SHM_HI {SHM_HI_TIDE_new = 92160,};
enum MACRO_SHN_IA {SHN_IA_64_ANSI_COMMON = 65280,SHNX_IA_64_ANSI_COMMON = 16776960,SHT_IA_64_EXT = 1879048192,SHT_IA_64_UNWIND = 1879048193,};
enum MACRO_SIGBUS {SIGBUS = 10,SIGVTALRM = 20,SIGURG = 29,SIGXCPU = 33,SIGXFSZ = 34,};
enum MACRO_SIGHUP {SIGHUP = 1,SIGQUIT = 3,SIGKILL = 9,SIGPIPE = 13,SIGALRM = 14,SIGUSR1 = 16,SIGUSR2 = 17,SIGCHLD = 18,SIGSTOP = 24,SIGTSTP = 25,SIGCONT = 26,SIGTTIN = 27,SIGTTOU = 28,};
enum MACRO_SIGIOT {SIGIOT = 6,SIGEMT = 7,SIGCLD = 18,SIGPWR = 19,SIGIO = 22,SIGWINCH = 23,SIGCANCEL = 35,SIGGFAULT = 36,};
enum MACRO_SIMPLE {SIMPLE_QUEUE_TAG_MSG = 0x20,};
enum MACRO_SIOPDE {SIOPDE = 2,PDE_AR_GATE = 76,};
enum MACRO_SIZEOF {SIZEOF_TSTAT = 1,SELFTEST_PASSED = 64,};
enum MACRO_SI_MAX {SI_MAX_CPUSTATES = 15,SI_MAX_PROCS = 32,};
enum MACRO_SKNODE {SKNODE_ONLIST = 1,SKNODE_ISLEVELZERO = 2,};
enum MACRO_SOCKET {SOCKET_BETALOCK_ORDER = 150,SOTIMEQ_LOCK_ORDER = 200,};
enum MACRO_SO_GET {SO_GET = 1,SO_SET = 2,SOL_SOCKET = 65535,};
enum MACRO_SO_TPI {SO_TPI = 0,SO_NPI = 1,SO_DLPI = 2,SO_MAX_PROVIDERS = 3,};
enum MACRO_SSTATE {SSTATE = 1,GSTATE = 2,MSTATE = 3,STUNE = 4,GTUNE = 5,};
enum MACRO_STATUS {STATUS_ADDR = 8,};
enum MACRO_STB_HP {STB_HP_ALIAS = 0xA,STT_HP_OPAQUE = 0xB,STT_HP_STUB = 0xC,PT_HP_TLS = 0x60000000,PT_HP_CORE_NONE = 0x60000001,PT_HP_CORE_VERSION = 0x60000002,PT_HP_CORE_KERNEL = 0x60000003,PT_HP_CORE_COMM = 0x60000004,PT_HP_CORE_PROC = 0x60000005,PT_HP_CORE_LOADABLE = 0x60000006,PT_HP_CORE_STACK = 0x60000007,PT_HP_CORE_SHM = 0x60000008,PT_HP_CORE_MMF = 0x60000009,PT_HP_PARALLEL = 0x60000010,PT_HP_FASTBIND = 0x60000011,PT_HP_OPT_ANNOT = 0x60000012,PT_HP_HSL_ANNOT = 0x60000013,PT_HP_STACK = 0x60000014,};
enum MACRO_STR_IS {STR_IS_DEVICE = 0x1,STR_IS_MODULE = 0x2,STR_SYSV4_OPEN = 0x100,STR_QSAFETY = 0x200,STR_UP_MODE = 0x400,STR_MP_OPEN_CLOSE = 0x1000,STR_REPQ = 0x2000,OSF_STREAMS_10 = 0x4026019,OSF_STREAMS_11 = 0x503611B,};
enum MACRO_ST_MAX {ST_MAX_TAG = 2,};
enum MACRO_SUBSYS {SUBSYS_NULL = 0,SUBSYS_IO_SERVICES = 1000,SUBSYS_ENVIRON = 1001,SUBSYS_LVM = 1002,SUBSYS_SPT = 1003,SUBSYS_DIAG0 = 1020,SUBSYS_MUX0 = 1021,SUBSYS_MUX1 = 1022,SUBSYS_DISC0 = 1023,SUBSYS_LPR0 = 1024,SUBSYS_TAPE0 = 1025,SUBSYS_INSTR0 = 1026,SUBSYS_GPIO0 = 1027,SUBSYS_UXEC0 = 1028,SUBSYS_DISC1 = 1029,SUBSYS_DISC2 = 1030,SUBSYS_DIAGHPIB1 = 1031,SUBSYS_GPIO1 = 1032,SUBSYS_DISPLAY0 = 1033,SUBSYS_DISC3 = 1034,SUBSYS_AUTOX0 = 1035,SUBSYS_MUX4 = 1036,SUBSYS_LANTTY0 = 1037,SUBSYS_LPR10 = 1040,SUBSYS_TAPE10 = 1041,SUBSYS_TAPE11 = 1042,SUBSYS_LPR11 = 1043,SUBSYS_TAPE14 = 1044,SUBSYS_DISC30 = 1045,SUBSYS_CENT0 = 1046,SUBSYS_DISC31 = 1047,SUBSYS_LPR12 = 1048,SUBSYS_ISDNNET = 1050,SUBSYS_HPIB0 = 1060,SUBSYS_GPIO10 = 1061,SUBSYS_GPIO11 = 1062,SUBSYS_HPIB1 = 1063,SUBSYS_SCSI1 = 1065,SUBSYS_SCSI2 = 1066,SUBSYS_HPFL1 = 1067,SUBSYS_LANMUX0 = 1068,SUBSYS_SCSI3 = 1069,SUBSYS_CIO_CA0 = 1080,SUBSYS_GRAPH0 = 1081,SUBSYS_GRAPH2 = 1082,SUBSYS_GRAPH3 = 1083,SUBSYS_ITE = 1084,SUBSYS_FRAMEBUF = 1085,SUBSYS_HIL = 1086,SUBSYS_HILKBD = 1087,};
enum MACRO_SVCGET {SVCGET_VERSQUIET = 1,SVCSET_VERSQUIET = 2,};
enum MACRO_SWITCH {SWITCH_OFF = 0,SWITCH_ON = 1,SWITCH_UNKNOWN = 2,PF_READY_TO_FLUSH = 6,};
enum MACRO_SYMTAB {SYMTAB_DEFAULT_NBUCKETS = 3,};
enum MACRO_SYSTEM {SYSTEM_UNITS = 0,SI_LINEAR = 1,SI_ROTATION = 2,ENGLISH_LINEAR = 3,ENGLISH_ROTATION = 4,};
enum MACRO_SYS_cs {SYS_cs = 227,SYS_CDS = 228,};
enum MACRO_SYS_ki {SYS_ki_call = 45,SYS_SETGID = 46,};
enum MACRO_SYS_lf {SYS_lf_send = 103,SYS_SIGVECTOR = 108,};
enum MACRO_SYS_lw {SYS_lw_get_thread_times = 189,SYS_NFSSVC = 190,};
enum MACRO_SYS_mq {SYS_mq_open = 439,SYS_MQ_CLOSE = 440,};
enum MACRO_S_GOOD {S_GOOD = 0x0,S_CHECK_CONDITION = 0x2,S_CONDITION_MET = 0x4,S_BUSY = 0x8,S_INTERMEDIATE = 0x10,S_RESV_CONFLICT = 0x18,S_COMMAND_TERMINATED = 0x22,S_QUEUE_FULL = 0x28,};
enum MACRO_S_IFMT {S_IFMT = 61440,};
enum MACRO_TARGET {TARGET_META_TAG = -2,};
enum MACRO_TCPOPT {TCPOPT_EOL = 0,TCPOPT_NOP = 1,TCPOPT_MAXSEG = 2,TCPOPT_WINDOW = 3,TCPOPT_TIMESTAMP = 8,};
enum MACRO_TCSBRK {TCSBRK = 536892421,TCXONC = 536892422,TCFLSH = 536892423,};
enum MACRO_TELOPT {TELOPT_BINARY = 0,TELOPT_ECHO = 1,TELOPT_RCP = 2,TELOPT_SGA = 3,TELOPT_NAMS = 4,TELOPT_STATUS = 5,TELOPT_TM = 6,TELOPT_RCTE = 7,TELOPT_NAOL = 8,TELOPT_NAOP = 9,TELOPT_NAOCRD = 10,TELOPT_NAOHTS = 11,TELOPT_NAOHTD = 12,TELOPT_NAOFFD = 13,TELOPT_NAOVTS = 14,TELOPT_NAOVTD = 15,TELOPT_NAOLFD = 16,TELOPT_XASCII = 17,TELOPT_LOGOUT = 18,TELOPT_BM = 19,TELOPT_DET = 20,TELOPT_SUPDUP = 21,TELOPT_SUPDUPOUTPUT = 22,TELOPT_SNDLOC = 23,TELOPT_TTYPE = 24,TELOPT_EOR = 25,TELOPT_TUID = 26,TELOPT_OUTMRK = 27,TELOPT_TTYLOC = 28,TELOPT_3270REGIME = 29,TELOPT_X3PAD = 30,TELOPT_NAWS = 31,TELOPT_TERMSPEED = 32,TELOPT_LFLOW = 33,TELOPT_ENV = 36,TELOPT_EXOPL = 255,};
enum MACRO_TGEXEC {TGEXEC = 0x8,};
enum MACRO_TGREAD {TGREAD = 0x20,};
enum MACRO_THREAD {THREAD_PRIVATE_MEM = 1,NODE_PRIVATE_MEM = 2,NEAR_SHARED_MEM = 3,FAR_SHARED_MEM = 4,BLOCK_SHARED_MEM = 5,};
enum MACRO_TI9914 {TI9914_HOLDOFF = 0x1,PASS_IN = 0x2,PASS_OUT = 0x4,};
enum MACRO_TOEXEC {TOEXEC = 0x1,};
enum MACRO_TOREAD {TOREAD = 0x4,};
enum MACRO_TR_UNA {TR_UNA = 0x10,TR_LF = 0x2,TR_EOI = 0x1,};
enum MACRO_TUEXEC {TUEXEC = 0x40,};
enum MACRO_TUREAD {TUREAD = 0x100,};
enum MACRO_TYPE_A {TYPE_A = 1,TYPE_E = 2,TYPE_I = 3,TYPE_L = 4,};
enum MACRO_TZNAME {TZNAME_MAX = 19,BC_BASE_MAX = 99,BC_DIM_MAX = 2048,};
enum MACRO_T_ADDR {T_ADDR = 0x1,T_OPT = 0x2,T_UDATA = 0x4,T_ALL = 0xFFFF,};
enum MACRO_T_BIND {T_BIND = 1,T_OPTMGMT = 2,T_CALL = 3,T_DIS = 4,T_UNITDATA = 5,T_UDERROR = 6,T_INFO = 7,T_KUNITDATA = 8,};
enum MACRO_T_COTS {T_COTS = 1,T_COTS_ORD = 2,T_CLTS = 3,};
enum MACRO_T_MORE {T_MORE = 0x1,T_EXPEDITED = 0x2,T_NEGOTIATE = 0x4,T_CHECK = 0x8,T_DEFAULT = 0x10,T_SUCCESS = 0x20,T_FAILURE = 0x40,T_CURRENT = 0x80,T_PARTSUCCESS = 0x100,T_READONLY = 0x200,T_NOTSUPPORT = 0x400,T_RAW = 0x800,T_MOREDATA = 0x10000000,};
enum MACRO_UIOSEG {UIOSEG_USER = 0,UIOSEG_KERNEL = 1,UIOSEG_INSTR = 2,UIOSEG_LBCOPY = 3,UIOSEG_KFLUSH = 4,UIOSEG_LBFLUSH = 5,UIOSEG_PAGEIN = 6,UIOSEG_DISCARD = 7,};
enum MACRO_UNLKPT {UNLKPT = 536900678,ISPTM = 536900679,ISPTS = 536900681,TIOCSIGNAL = 536900728,};
enum MACRO_UNLOCK {UNLOCK_OBJECT = 0x4,};
enum MACRO_UNUSED {UNUSED_IDX = 2147483647,};
enum MACRO_UPAGES {UPAGES = 4,};
enum MACRO_UTSLEN {UTSLEN = 9,SNLEN = 15,};
enum MACRO_VERIFY {VERIFY_TRANSFER = 0x0,READ_TRANSFER = 0x4,WRITE_TRANSFER = 0x8,ENABLE_AUTO_INIT = 0x10,DECREMENT_ADDR = 0x20,CHANNEL_MODE_MASK = 0xC0,};
enum MACRO_VOLUME {VOLUME_BYTES = 13,};
enum MACRO_VPRINT {VPRINT = 0x40,VPLOT = 0x80,VPRINTPLOT = 0x100,};
enum MACRO_VSWTCH {VSWTCH = 7,};
enum MACRO_VWRITE {VWRITE = 0x80,};
enum MACRO_WAKEUP {WAKEUP_ONE = 0x1,WAKEUP_ALL = 0x2,};
enum MACRO_WANTED {WANTED = 536870912,};
enum MACRO_WINDOW {WINDOW_MINIMIZE_INFO = 0,WINDOW_MAXIMIZE_INFO = 1,WINDOW_MOVE_INFO = 2,WINDOW_RAISE_INFO = 3,WINDOW_RESIZE_NORTH_INFO = 4,WINDOW_RESIZE_SOUTH_INFO = 5,WINDOW_RESIZE_EAST_INFO = 6,WINDOW_RESIZE_WEST_INFO = 7,WINDOW_RESIZE_NORTHEAST_INFO = 8,WINDOW_RESIZE_NORTHWEST_INFO = 9,WINDOW_RESIZE_SOUTHEAST_INFO = 10,WINDOW_RESIZE_SOUTHWEST_INFO = 11,WINDOW_MENU_ITEM_SELECT_INFO = 12,WINDOW_DEICONIFY_INFO = 13,WINDOW_MENU_POST_INFO = 14,WINDOW_FOCUS_INFO = 15,WINDOW_MENU_UNPOST_INFO = 16,WINDOW_MENU_ITEM_CHECK_INFO = 17,ICON_MOVE_INFO = 18,ICON_MENU_POST_INFO = 19,ICON_MENU_UNPOST_INFO = 20,ICON_MENU_ITEM_SELECT_INFO = 21,};
enum MACRO_WRITER {WRITER_PROVIDES_DATA = 1,WRITER_BLOCKING = 2,WRITER_FLUSHES = 3,};
enum MACRO_XIM_CM {XIM_CM_DATA_SIZE = 20,};
enum MACRO_XI_Add {XI_Add_XDeviceBell_Major = 1,};
enum MACRO_XK_Eth {XK_Eth = 0xD0,XK_Ntilde = 0xD1,XK_Ograve = 0xD2,XK_Oacute = 0xD3,XK_Ocircumflex = 0xD4,XK_Otilde = 0xD5,XK_Odiaeresis = 0xD6,XK_multiply = 0xD7,XK_Ooblique = 0xD8,XK_Ugrave = 0xD9,XK_Uacute = 0xDA,XK_Ucircumflex = 0xDB,XK_Udiaeresis = 0xDC,XK_Yacute = 0xDD,XK_THORN = 0xDE,};
enum MACRO_XK_ISO {XK_ISO_Lock = 0xFE01,XK_ISO_Level2_Latch = 0xFE02,XK_ISO_Level3_Shift = 0xFE03,XK_ISO_Level3_Latch = 0xFE04,XK_ISO_Level3_Lock = 0xFE05,XK_ISO_Group_Shift = 0xFF7E,};
enum MACRO_XK_L10 {XK_L10 = 0xFFD1,XK_F21 = 0xFFD2,};
enum MACRO_XK_R10 {XK_R10 = 0xFFDB,XK_F31 = 0xFFDC,};
enum MACRO_XK_R11 {XK_R11 = 0xFFDC,XK_F32 = 0xFFDD,};
enum MACRO_XK_R12 {XK_R12 = 0xFFDD,XK_F33 = 0xFFDE,};
enum MACRO_XK_R13 {XK_R13 = 0xFFDE,XK_F34 = 0xFFDF,};
enum MACRO_XK_R14 {XK_R14 = 0xFFDF,XK_F35 = 0xFFE0,};
enum MACRO_XK_R15 {XK_R15 = 0xFFE0,XK_Shift_L = 0xFFE1,XK_Shift_R = 0xFFE2,XK_Control_L = 0xFFE3,XK_Control_R = 0xFFE4,XK_Caps_Lock = 0xFFE5,XK_Shift_Lock = 0xFFE6,XK_Meta_L = 0xFFE7,XK_Meta_R = 0xFFE8,XK_Alt_L = 0xFFE9,XK_Alt_R = 0xFFEA,XK_Super_L = 0xFFEB,XK_Super_R = 0xFFEC,XK_Hyper_L = 0xFFED,XK_Hyper_R = 0xFFEE,};
enum MACRO_XTI_TR {XTI_TR_ERROR = 128,};
enum MACRO_XTestX {XTestX_SIGN_BIT_MASK = 0x4,XTestY_SIGN_BIT_MASK = 0x8,XTestDEVICE_ID_MASK = 0xF0,};
enum MACRO_XkbAXN {XkbAXN_SKPress = 0,XkbAXN_SKAccept = 1,XkbAXN_SKReject = 2,XkbAXN_SKRelease = 3,XkbAXN_BKAccept = 4,XkbAXN_BKReject = 5,XkbAXN_AXKWarning = 6,};
enum MACRO_XkbErr {XkbErr_BadClass = 0xFE,};
enum MACRO_XkbGBN {XkbGBN_TypesMask = 1,XkbGBN_CompatMapMask = 2,XkbGBN_ClientSymbolsMask = 4,XkbGBN_ServerSymbolsMask = 8,XkbGBN_SymbolsMask = 12,XkbGBN_IndicatorMapMask = 16,XkbGBN_KeyNamesMask = 32,XkbGBN_GeometryMask = 64,XkbGBN_OtherNamesMask = 128,XkbGBN_AllComponentsMask = 255,};
enum MACRO_XkbNKN {XkbNKN_KeycodesMask = 1,XkbNKN_GeometryMask = 2,XkbNKN_DeviceIDMask = 4,XkbAllNewKeyboardEventsMask = 7,};
enum MACRO_XkbPCF {XkbPCF_DetectableAutoRepeatMask = 1,XkbPCF_GrabsUseXKBStateMask = 2,XkbPCF_AutoResetControlsMask = 4,XkbPCF_LookupStateWhenGrabbed = 8,XkbPCF_SendEventUsesXKBState = 16,XkbPCF_AllFlagsMask = 31,};
enum MACRO_XmCOPY {XmCOPY_FAILED = 0,XmCOPY_SUCCEEDED = 1,XmCOPY_TRUNCATED = 2,};
enum MACRO_XmDROP {XmDROP_SITE_INVALID = 2,XmDROP_SITE_VALID = 3,};
enum MACRO_XmFILE {XmFILE_DIRECTORY = 1,XmFILE_REGULAR = 2,XmFILE_ANY_TYPE = 3,};
enum MACRO_XmHELP {XmHELP = 2,};
enum MACRO_XmLOOK {XmLOOK_AT_SCREEN = 1,XmLOOK_AT_CMAP = 2,XmLOOK_AT_BACKGROUND = 4,XmLOOK_AT_FOREGROUND = 8,XmLOOK_AT_TOP_SHADOW = 16,XmLOOK_AT_BOTTOM_SHADOW = 32,XmLOOK_AT_SELECT = 64,};
enum MACRO_XmMENU {XmMENU_TORN_BIT = 1,XmMENU_TEAR_OFF_SHELL_DESCENDANT_BIT = 2,XmMENU_POPUP_POSTED_BIT = 4,XmMENU_IN_DRAG_MODE_BIT = 8,};
enum MACRO_XmNONE {XmNONE_OR_BC = 254,};
enum MACRO_XmTEXT {XmTEXT_DRAG_ICON_WIDTH = 64,};
enum MACRO_XmWEAK {XmWEAK_CHECK = 1,XmMEDIUM_CHECK = 2,XmSTRONG_CHECK = 3,};
enum MACRO_YPBIND {YPBIND_ERR_ERR = 1,YPBIND_ERR_NOSERV = 2,YPBIND_ERR_RESC = 3,};
enum MACRO_YPPROC {YPPROC_NULL = 0,YPPROC_DOMAIN = 1,YPPROC_DOMAIN_NONACK = 2,YPPROC_MATCH = 3,YPPROC_FIRST = 4,YPPROC_NEXT = 5,YPPROC_XFR = 6,YPPROC_CLEAR = 7,YPPROC_ALL = 8,YPPROC_MASTER = 9,YPPROC_ORDER = 10,YPPROC_MAPLIST = 11,};
enum MACRO_YPPROG {YPPROG = 100004,};
enum MACRO_YPPUSH {YPPUSH_SUCC = 1,YPPUSH_AGE = 2,YPPUSH_NOMAP = -1,};
enum MACRO_YPVERS {YPVERS = 2,YPVERS_ORIG = 1,};
enum MACRO__ESIZE {_ESIZE = 512,};
enum MACRO__IOFBF {_IOFBF = 0x0,_IOREAD = 0x1,_IOWRT = 0x2,_IONBF = 0x4,_IOMYBUF = 0x8,_IOEOF = 0x10,_IOERR = 0x20,_IOLBF = 0x80,_IORW = 0x100,_IOEXT = 0x200,_IODUMMY = 0x400,};
enum MACRO__JBLEN {_JBLEN = 128,FTLMSG = 32768,};
enum MACRO__LFS64 {_LFS64_STDIO = 1,};
enum MACRO__NFILE {_NFILE = 60,BUFSIZ = 1024,_DBUFSIZ = 8192,};
enum MACRO__POSIX {_POSIX_ARG_MAX = 4096,_POSIX_CHILD_MAX = 6,};
enum MACRO__RTSIG {_RTSIG_MAX = 8,};
enum MACRO__SBYTE {_SBYTE_CS = 0,_HP15_CS = 1,_EUC_CS = 2,_LC_MAX_OBJECTS = 256,};
enum MACRO__SNLEN {_SNLEN = 15,};
enum MACRO__XOPEN {_XOPEN_IOV_MAX = 16,};
enum MACRO__XmRAW {_XmRAW_MAP = 0,_XmPOPUP_MAP = 1,_XmMANAGE_MAP = 2,};
enum MACRO___MCAS {__MCAS_OK = 0,__MCAS_NOLOCKID = 1,__MCAS_PFAULT = 2,__MCAS_BUSY = 3,__MCAS_ALIGN = 4,};
enum MACRO___MSEM {__MSEM_MAGIC = 0x6D73656D,};
enum MACRO_status {status_mask_0 = 0,status_mask_1 = 0,status_mask_2 = 0,};
enum MACRO_xFalse {xFalse = 0,ELFlagFocus = 1,ELFlagSameScreen = 2,};
typedef struct _9BD11453D851B840D226BDE30A5759A2 MotifWmHints;
typedef struct MrmHierarchyDescStruct *MrmHierarchy;
typedef struct _45D3B8D1F0A0E1A15D8490524663D915 NCONF_HANDLE;
typedef struct _pci_bus_info PCI_BUS_INFO;
typedef struct _RectObjClassRec *RectObjClass;
typedef struct _19819260117A2122793EF6A7F838A8D8 *RectanglePtr;
typedef struct _19819260117A2122793EF6A7F838A8D8 RectangleRec;
typedef struct sfe_rec SFE_rec_type;
typedef struct _754E82352BACFD73AE933254C0FF8B10 *SashCallData;
typedef struct _ScanLineList ScanLineList;
typedef struct _2E0E2C12F04118C9E52BAE749EE378FF ScreenFormat;
typedef struct _C4DC01CDDDF5A53B120EAA56060806A9 SmcCallbacks;
typedef struct _2B2D277CB94E3786AC978CB982FDCC47 SmsCallbacks;
typedef struct _4D6CF402BE6604EF49AB6A1F1F900B99 *Substitution;
struct T_discon_ind {int PRIM_type;int DISCON_reason;int SEQ_number;};
struct T_discon_req {int PRIM_type;int SEQ_number;};
struct T_exdata_ind {int PRIM_type;int MORE_flag;};
struct T_exdata_req {int PRIM_type;int MORE_flag;};
struct T_ordrel_ind {int PRIM_type;};
struct T_ordrel_req {int PRIM_type;};
struct T_unbind_req {int PRIM_type;};
typedef struct _06C41AE9C3ADE0B1D3F5C4BB6B518DE2 TransSpecRec;
typedef struct _2FA041E8182EB8B5CCC89EC7ACEF90A4 V1dumparea_t;
typedef int ( *WSIO_ISR_OLD)(void *, void *);
typedef struct _XAnyClassinfo *XAnyClassPtr;
typedef struct _XAxisInfo *XAxisInfoPtr;
typedef struct _DAE3AA21F13D443C5590C7BCADAB13AB XButtonEvent;
typedef struct _1F4B2514A14933A71BA9296C89FDE736 XButtonState;
typedef struct _CF91FEEC29390B2E3A7754517937B585 XDeviceState;
typedef union _D8231012D0728EC3472C30FA3109CEFA XEDataObject;
typedef struct _44C0AE5AD18E7CD0D8F56B2EE020CE64 XExposeEvent;
typedef struct _C5BFDAA02BA3AB920A890AC8E50E0348 XHPaxis_data;
typedef struct _4FFA9527088137D66D8D180D61C68358 XHostAddress;
typedef struct _10F395C20BEC4113025BB1D0BA3DF492 XKeymapEvent;
typedef struct _EF6E92C885F7EBA601BD227CAE25DC00 XMotionEvent;
typedef unsigned char XPAttributes;
typedef char *( *XPHinterProc)();
typedef struct _E39927DDD69BFE5BB92B49A1337204CD XPPrintEvent;
typedef struct _E55328F014D59CB8D8C2D56824FBB3BE XPPrinterRec;
typedef struct _4FA67FD0121DE61C8BBE74D0ECEE2878 XRecordRange;
typedef struct _F1364925D1106E1F4B606AEA80BC0A8A XRecordState;
typedef struct _F172F94299C982F5FEAF6C4E72460A72 XSyncTrigger;
typedef struct _AF5FB4080A51E8992C2DCC85F9B13FAA XTestKeyInfo;
typedef struct _1BE3EF8FAEFD838E59DA61E46CB3832E XdbeSwapInfo;
typedef struct _9752589AB8932AA797ECA0639922ADEB XimImsportSW;
typedef struct _XkbAnyAction XkbAnyAction;
typedef struct _XkbBounds *XkbBoundsPtr;
typedef struct _XkbBounds XkbBoundsRec;
typedef union _XkbDoodad *XkbDoodadPtr;
typedef union _XkbDoodad XkbDoodadRec;
typedef struct _XkbISOAction XkbISOAction;
typedef struct _XkbModAction XkbModAction;
typedef struct _XkbPtrAction XkbPtrAction;
typedef struct _XkbSymMapRec *XkbSymMapPtr;
typedef struct _XkbSymMapRec XkbSymMapRec;
typedef struct _XmBackingRec XmBackingRec;
typedef unsigned char XmButtonType;
typedef struct _XmCommandRec XmCommandRec;
typedef struct _XmDesktopRec XmDesktopRec;
typedef struct _XmDisplayRec XmDisplayRec;
typedef struct _E0457597E4167E07E7B544A574F8E386 *XmExtPartPtr;
typedef struct _XmFormRec *XmFormWidget;
typedef struct _XmGadgetPart XmGadgetPart;
typedef struct _XmIconGadgetRec *XmIconGadget;
typedef struct _XmIconHeaderRec *XmIconHeader;
typedef struct _XmKeyBindingRec *XmKeyBinding;
typedef struct _XmListRec *XmListWidget;
typedef struct _XmManagerRec XmManagerRec;
typedef struct _XmSashRec *XmSashWidget;
typedef struct _XmScreenInfo XmScreenInfo;
typedef struct _94F528D68A4C572CDF725B1D8F1779AC XmScreenPart;
typedef struct _XmSimpleMenuRec *XmSimpleMenu;
typedef struct _XmSourceDataRec *XmSourceData;
typedef struct _XmSpinBoxRec XmSpinBoxRec;
typedef struct _XmTextSourceRec *XmTextSource;
typedef struct _XmTextRec *XmTextWidget;
typedef struct _EDFC536A603B7BCAB77AE790F95C9CC5 XpmExtension;
typedef int *XrmQuarkList;
typedef struct _XtActionsRec *XtActionList;
typedef struct _XtActionsRec XtActionsRec;
typedef struct _XtAppStruct *XtAppContext;
typedef struct _XtEventRec *XtEventTable;
typedef unsigned int XtIntervalId;
typedef unsigned int XtWorkProcId;
typedef struct _9AD92D66A9B7FE2D16898D79F4A40DAD _IceProtocol;
typedef struct _50A8F2CBF9209E81C59E0189B8E8717A _LC_collel_t;
typedef struct _1643EA4171E7327ACC09A96188B3F1FC _LC_coltbl_t;
typedef struct _6554ADDCE5A2948DCEB4E183D884FEE9 _LC_object_t;
typedef union _FF8B0CD0CE02EB91C291149776E6F766 _LC_weight_t;
struct _XkbBehavior {unsigned char type;unsigned char data;};
struct _XkbProperty {char *name;char *value;};
struct _XkbStateRec {unsigned char group;unsigned char locked_group;unsigned short base_group;unsigned short latched_group;unsigned char mods;unsigned char base_mods;unsigned char latched_mods;unsigned char locked_mods;unsigned char compat_state;unsigned char grab_mods;unsigned char compat_grab_mods;unsigned char lookup_mods;unsigned char compat_lookup_mods;unsigned short ptr_buttons;};
struct __num_struct {short __columns;short __init_tabs;short __lines;short __lines_of_memory;short __magic_cookie_glitch;short __padding_baud_rate;short __virtual_terminal;short __width_status_line;short __num_labels;short __labl_height;short __labl_width;short __max_attributes;short __maximum_windows;short __max_colors;short __max_pairs;short __no_color_video;short __buffer_capacity;short __dot_vert_spacing;short __dot_horz_spacing;short __max_micro_address;short __max_micro_jump;short __micro_col_size;short __micro_line_size;short __number_of_pins;short __output_res_char;short __output_res_line;short __output_res_horz_inch;short __output_res_vert_inch;short __print_rate;short __wide_char_size;short __buttons;short __bit_image_entwining;short __bit_image_type;short _Sentinel;};
typedef struct __sub_ctxt __sub_ctxt_t;
typedef struct _DF9513CE871402C1F3633381C6F0F536 _iconvTabHdr;
struct asp_isr_link {int ( *isr)();int arg1;int arg2;};
typedef struct _75A97C15B47FD417587C5C65E341B79B async_addseg;
typedef struct _2D6798695C6D5937015A42F87A43EF6F async_config;
struct audio_limits {unsigned int max_receive_buffer_size;unsigned int max_transmit_buffer_size;unsigned int spare[4];};
struct audio_status {unsigned int receive_status;unsigned int transmit_status;unsigned int receive_buffer_count;unsigned int transmit_buffer_count;unsigned int receive_overflow_count;unsigned int transmit_underflow_count;unsigned int receive_exact_count;unsigned int transmit_exact_count;unsigned int spare[2];};
struct cache_config {unsigned int hv_stuff;};
typedef struct __cache_sema *cache_sema_t;
struct channel_gain {int receive_gain;int transmit_gain;int monitor_gain;};
typedef union _27E544B65E9C83BE0D136117478F1D06 cio_cmd_type;
struct cio_quadrant {int rsvd1[3];int normal;int rsvd2[3];int cend;int rsvd3[3];int cbyte;int rsvd4[3];int cendbyte;};
typedef struct _39686138479B682CDBA24DAE5E6097FC cmd_struct_t;
typedef struct __mutex8 *cps_mutex8_t;
typedef struct _C4E976EB180D4B968178B983A0A1F774 cr_modinfo_t;
typedef struct crash_proc_table_struct crash_proc_t;
typedef struct _DD32CD37E943B9870F4F3BA5E795FA34 crt_config_t;
struct crt_gcslot_t {struct crt_fastlock_t *lock_struct_ptr;short slot;};
typedef struct _B87C4D7F0283F327B3B9CE6AC5F074A7 da_ctrl_type;
typedef struct _89EFAFA36DC2CA0A6742FD5F4BE18D8B dam_req_type;
typedef struct _2448E62F5430D1C3997F8F16286DC850 dap_exec_fmt;
typedef struct _1D8FF03A3D397B153C31EC45F7CFB27B dap_send_fmt;
typedef struct _C3DB689D4FACB49150CE8263CEC530B6 db_next_desc;
typedef struct _3C2538FA24E756F47BA82769645E5270 die_req_type;
typedef struct _C8947F8085B53BC448296C99056DF745 dl_hp_data_t;
typedef struct _186F4C82598CEA2809B98BC2836275EF dl_protect_t;
typedef struct _0490652D71022E8A5FAA6A6EE2F3573E dl_through_t;
typedef struct _1D277D18401E135FB6951F8B86FCCB69 dl_xid_con_t;
typedef struct _1D277D18401E135FB6951F8B86FCCB69 dl_xid_ind_t;
typedef struct _AAB060B0944F50E5B6EB5012EC22DBB5 dl_xid_req_t;
typedef struct _AAB060B0944F50E5B6EB5012EC22DBB5 dl_xid_res_t;
typedef struct _2FE8A43D0B1C598C64B8CAA3C247D575 dm_diag_type;
typedef struct _74BD57DEBF7C027BB64500CA73459CBB dma_A_pool_t;
typedef struct dma_buflet dma_buflet_t;
typedef struct _EE3EAD23C079FD246783A616A7C4D4B9 driver_ops_t;
typedef struct _902F743089704F641F1AE7533B376F9E dumpheader_t;
typedef struct dumpmodule dumpmodule_t;
struct eisa_if_info {int flags;char slot;};
typedef struct _E0F2555E6D218DC1B08AC58B4F7A7F6B err_vec_type;
typedef struct _B00D0DA09FE05CEA0D3D84146BFBBA74 event_code_t;
typedef struct _0B3AA8EE748F245E929FFDAF01F33E77 fl_unit_desc;
struct frame_marker {int fm_edp;int fm_esr4;int fm_erp;int fm_crp;int fm_sl;int fm_clup;int fm_ep;int fm_psp;};
enum gc_dma_flags {GCDMA_SAVE_STATE = 0x1,GCDMA_UNBUFFERED = 0x2,};
typedef struct _59186384A74AE4586A65E1BA0686E64A gc_logregs_t;
typedef struct _B5F988AB9D81746BF03F9185FDDAB771 gc_siginfo_t;
typedef struct hdl_subregion hdl_subreg_t;
typedef struct _70A989625F397D986B701736EF2078A3 hpib_input_t;
struct import_entry {int name;short reserved2;unsigned char type;unsigned int reserved1;};
typedef struct _22208A6C0129EEEAE2F226E4B4B59E23 inquiry_type;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef char int_least8_t;
typedef char io_name_type[16];
struct kmeminfo_ptr {struct kmemusage *kp_tbl;int kp_offset;};
struct load_display {char display_data[16];};
struct loader_fixup {int fixup_type;int space_index;int space_offset;int constant;};
typedef struct _lwp_rwlock lwp_rwlock_t;
typedef struct mcast_list mcast_list_t;
struct module_entry {int drelocs;int imports;int import_count;char flags;char reserved1;unsigned short module_dependencies;int reserved2;};
enum packet_kinds {LAN_SAP = 0x0,LAN_TYPE = 0x1,LAN_CANON = 0x2,LAN_SNAP = 0x3,LAN_SNAP_EXT = 0x4,};
typedef struct pam_handle pam_handle_t;
struct pam_response {char *resp;int resp_retcode;};
typedef struct pim_narrow pim_narrow_t;
typedef pm__list *pmaplist_ptr;
enum pregion_type {PT_UNUSED = 0x0,PT_UAREA = 0x1,PT_TEXT = 0x2,PT_DATA = 0x3,PT_STACK = 0x4,PT_SHMEM = 0x5,PT_NULLDREF = 0x6,PT_SIGSTACK = 0x9,PT_IO = 0xA,PT_MMAP = 0xB,PT_GRAFLOCKPG = 0xC,PT_ANON_SHMEM = 0xD,PT_GRAFDMA = 0xE,PT_NTYPES = 0xF,};
struct pss_reserved {char Pss_XXX[512];};
struct pst_crashdev;
struct pthread_cond {short c_short[2];int c_int;int c_int1[4];int c_pad;void *c_ptr;int c_int2[2];int c_int3[2];int c_int4[2];};
enum region_flags {RF_NOFLAG = 0x0,RF_NOFREE = 0x1,RF_ALLOC = 0x4,RF_MLOCKING = 0x8,RF_ZOMB = 0x10,RF_UNALIGNED = 0x20,RF_SWLAZY = 0x40,RF_WANTLOCK = 0x80,RF_HASHED = 0x100,RF_EVERSWP = 0x200,RF_NOWSWP = 0x400,RF_UNMAP = 0x1000,RF_IOMAP = 0x2000,RF_LOCAL = 0x4000,RF_EXCLUSIVE = 0x8000,RF_STATIC_PREDICT = 0x20000,RF_ALL_MLOCKED = 0x40000,RF_SWAPMEM = 0x80000,RF_LOCKED_LARGE = 0x100000,RF_SUPERPAGE_TEXT = 0x200000,RF_FLIPPER_DISABLE = 0x400000,RF_MPROTECTED = 0x1000000,RF_PGSIZE_FIXED = 0x2000000,};
struct request_info {int request;int argget;int argset;int pgrp;int errno_error;int return_value;int pid;int tid;};
typedef rp__list *rpcblist_ptr;
typedef struct __save_state save_state_t;
typedef struct _CE85B3FDED12F2C017F843E29D266AED set_rps_type;
typedef short si_buff_type[36];
typedef unsigned int sig_atomic_t;
typedef struct _FE5196223FD21582DDA89DFE87E0C538 smountargs_t;
typedef struct _BA26A250EDF4BDE3453280FF6BC02B90 spawn_sym8_t;
typedef struct str_config str_config_t;
struct straltactive {int alt_major;int alt_minor;int alt_index;unsigned int alt_flags;char alt_name[9];};
struct straltfuture {int alt_index;unsigned int alt_flags;char alt_name[9];};
typedef char (*string_array)[];
struct trace_record {unsigned int tr_time;short tr_tag;unsigned short tr_pid;unsigned int tr_datum0;unsigned int tr_datum1;unsigned int tr_datum2;unsigned int tr_datum3;unsigned int tr_datum4;unsigned int tr_datum5;};
struct trans_report {int generic_status;int report_class;char device_status[56];};
typedef unsigned long long u_longlong_t;
typedef unsigned int uint_fast8_t;
struct verify_parms {int start;int length;};
typedef int  vfs_freeze_t(struct vfs *);
enum vnotify_type {VDMA_GETBITS = 0x0,VDMA_DELETETRANS = 0x1,VDMA_USERPROTECT = 0x2,VDMA_USERUNPROTECT = 0x3,VDMA_PROCDETACH = 0x4,VDMA_UNVIRTUALIZE = 0x5,VDMA_UNSETBITS = 0x6,VDMA_READONLY = 0x7,};
struct wsio_if_info {int flags;char slot;};
typedef struct _xAnyClassinfo *xAnyClassPtr;
typedef struct _xAxisInfo *xAxisInfoPtr;
typedef struct _9E547439B10E1F44156DCF6309E9ADBF xButtonState;
typedef struct _0D0114D795552F54A79F202DB3226B55 xChangeGCReq;
typedef struct _3B81704CAFF80915670BCDC93E5E5502 xCopyAreaReq;
typedef struct _0340F183E3D57BA98D278D6E8F4BBAEC xCreateGCReq;
typedef struct _625DD72E42D2E4120693244DFAAD3348 xDPMSInfoReq;
typedef struct _DB64A8459715AF3CEFE23597C08B5967 xDeviceState;
typedef struct _BDA7F7EC09C455D172B8FEBDBF052954 xFeedbackCtl;
typedef struct _FillPolyReq xFillPolyReq;
typedef struct _4DCAC2088B3F168EF4BFBCEA383ECFD2 xGetImageReq;
typedef struct _4AAF95CDB93A48CA96556BB33DEADB65 xHPPromptReq;
typedef struct _34681C3D6FB58953006C9844DC50C14F xKeymapEvent;
typedef struct _431497C136870E9873948068EF0F03D8 xOpenFontReq;
typedef struct _4C0A166D0FCB5B830093FB9F7D7DFC34 xPolyTextReq;
typedef struct _0FFC4F2ED9639CB540D82866D6DE553D xPropWMHints;
typedef struct _88A5CE8C1B41ABBCB8E88E633D3889C9 xPropWMState;
typedef struct _PutImageReq xPutImageReq;
typedef struct _F0B6F56018B35AE6D958AA393C56DA44 xRecordRange;
typedef struct _A23F2D0A331F720D631E2B6171CC3ECA xResourceReq;
typedef struct _6F769F3251074F30549E39033985F8DC xieFloDither;
typedef struct _xkbGetMap xkbGetMapReq;
typedef struct _xkbMapNotify xkbMapNotify;
typedef struct _xkbSetMap xkbSetMapReq;
struct ypresp_order {unsigned int status;unsigned int ordernum;};
struct C__trystuff {int rp;int sp;int dp;int ss;int link;int regs[16];double fpregs[10];};
typedef void ( *DRIVER_SCAN)(void *);
typedef int Elf32_Sword;
typedef unsigned int Elf32_Xword;
typedef int Elf64_Sword;
typedef unsigned long long Elf64_Xword;
typedef char Fioc_buffer[48];
typedef struct _FontDataRec FontDataRec;
typedef struct _LockInfoRec LockInfoRec;
enum MACRO_ABORT {ABORT_ON_EXT_INT = 256,TRNSFR_CTR_EN = 268435456,};
enum MACRO_AFORK {AFORK = 0x1,ASU = 0x2,ACCTF = 0xC0,};
enum MACRO_ALIAS {ALIAS_RESERVED = 0x1,ALIAS_RELEASE = 0x2,EMPTY_ENTRY = 0xFFFF,};
enum MACRO_ALLOC {ALLOC_SWAPMAP = 0x1,ALLOC_SWAP = 0x2,};
enum MACRO_AMIGO {AMIGO_DM = 1,};
enum MACRO_ARPOP {ARPOP_REQUEST = 1,ARPOP_REPLY = 2,MAX_RIF_SIZE = 18,MAX_FC_ADDR = 254,};
enum MACRO_ASYNC {ASYNC_NOLOCK = 0,ASYNC_LOCK = 1,ASYNC_NOLOCKV = 2,};
enum MACRO_AUDIO {AUDIO_OUT_NONE = 0x0,AUDIO_OUT_INTERNAL = 0x1,AUDIO_OUT_EXTERNAL = 0x2,AUDIO_OUT_LINE = 0x4,};
enum MACRO_A_DIM {A_DIM = 0x100000,A_REVERSE = 0x40000,A_STANDOUT = 0x10000,};
enum MACRO_Above {Above = 0,Below = 1,TopIf = 2,BottomIf = 3,Opposite = 4,};
enum MACRO_BIT00 {BIT00 = 0x80000000,};
enum MACRO_BIT01 {BIT01 = 0x40000000,};
enum MACRO_BIT02 {BIT02 = 0x20000000,};
enum MACRO_BIT03 {BIT03 = 0x10000000,};
enum MACRO_BIT04 {BIT04 = 0x8000000,};
enum MACRO_BIT05 {BIT05 = 0x4000000,};
enum MACRO_BIT19 {BIT19 = 0x1000,};
enum MACRO_BIT22 {BIT22 = 0x200,};
enum MACRO_BIT23 {BIT23 = 0x100,};
enum MACRO_BIT24 {BIT24 = 0x80,};
enum MACRO_BIT25 {BIT25 = 0x40,OP_MASK = 0xFC000000,};
enum MACRO_BREAK {BREAK = 243,};
enum MACRO_BTENV {BTENV_COUNT = 0,BTENV_SYSCALL = 1,BTENV_LDRSTART = 2,BTENV_LDRSIZE = 3,BTENV_BOOTFLAGS = 4,BTENV_INITSTRING = 5,BTENV_BTINFO = 6,BTENV_LSMTABLE = 7,BTENV_LANPACKET = 8,BTENV_END = 9,GOOD_BOOT_INFO = 4001,};
enum MACRO_BUF_0 {BUF = 0x8,};
enum MACRO_BURST {BURST = 48,TC_INPUT = 64,STOP_DISABLED = 128,};
enum MACRO_BYTES {BYTES_PER_XDR_UNIT = 4,};
enum MACRO_B_rds {B_rds_strat = 0x100,B_rwvp = 0x700,B_exec_i = 0x800,B_realloccg = 0x900,B_ifree = 0xA00,B_bmap = 0xB00,B_dirmakedirect = 0xC00,B_blkatoff = 0xD00,B_iget = 0xE00,B_iupdat = 0xF00,B_itrunc = 0x1000,B_indirtrunc = 0x1100,B_ufs_mountroot = 0x1200,B_mountfs = 0x1300,B_unmount = 0x1400,B_sbupdate = 0x1500,B_fs_size = 0x1600,B_rwip = 0x1700,B_fifo_read = 0x1800,B_fifo_write = 0x1900,B_ufs_bread = 0x1A00,B_free = 0x1B00,B_fragextend = 0x1E00,B_alloccg = 0x1F00,B_ialloccg = 0x2000,B_swap = 0x2100,B_physio = 0x2200,B_geteblk = 0x2300,B_allocbuf = 0x2400,B_spec_rdwr = 0x2500,B_cdfs_rd = 0x2700,B_ufs_close = 0x2800,B_inactive = 0x2900,B_mp_physio = 0x2A00,B_vhand = 0x2B00,B_swapout = 0x2C00,B_devswap_pageout = 0x2D00,B_devswap_pagein = 0x2E00,B_vfs_pageout = 0x2F00,B_vfs_pagein = 0x3000,B_vfdswapo = 0x3100,B_vfdswapi = 0x3200,B_vfs_alloc_hole = 0x3300,B_bbdirinit = 0x3400,B_bbdirwrite = 0x3500,B_updatebbdir = 0x3600,B_bbdirend = 0x3700,B_vginit = 0x3800,B_table_reimage = 0x3900,B_lv_resynclx = 0x3A00,B_lv_resynclv = 0x3B00,B_lv_resyncpv = 0x3C00,B_readmwcrec = 0x3D00,B_writemwcrec = 0x3E00,B_readlvmrec = 0x3F00,B_writelvmrec = 0x4000,B_readvgda = 0x4100,B_writevgda = 0x4200,B_sa_write = 0x4300,B_sa_readvgsa = 0x4400,B_lv_cache_recover = 0x4500,B_sioc_io = 0x4600,B_scsi_cmd = 0x4700,B_vxfs = 0x4800,B_kvm_swapout = 0x4900,B_kvm_swapin = 0x4A00,B_start_request = 0x5500,};
enum MACRO_C0_DM {C0_DM_GEN_ERROR = -10,};
enum MACRO_CACHE {CACHE_VER_1 = 1,};
enum MACRO_CARET {CARET_HEIGHT = 5,};
enum MACRO_CBAUD {CBAUD = 31,};
enum MACRO_CD_RR {CD_RR_CTIME = 2,CD_RR_ATIME = 4,};
enum MACRO_CHAIN {CHAIN_SHIFT_ALIGN = 2,QUAD_SHIFT_ALIGN = 4,BUFLET_SHIFT_ALIGN = 6,};
enum MACRO_CHILD {CHILD_MAX = 25,OPEN_MAX = 60,LINK_MAX = 32767,};
enum MACRO_CIOCA {CIOCA_LNKST = 0x8,BYTE_MODE = 0x8000000,};
enum MACRO_CLSET {CLSET_TIMEOUT = 1,CLGET_TIMEOUT = 2,CLGET_SERVER_ADDR = 3,CLGET_FD = 6,CLGET_SVC_ADDR = 7,CLSET_FD_CLOSE = 8,CLSET_FD_NCLOSE = 9,CLGET_XID = 10,CLSET_XID = 11,CLGET_VERS = 12,CLSET_VERS = 13,CLGET_PROG = 14,CLSET_PROG = 15,CLSET_SVC_ADDR = 16,CLSET_PUSH_TIMOD = 17,CLSET_POP_TIMOD = 18,};
enum MACRO_CMASK {CMASK = 0,CDLIMIT = 536870911,};
enum MACRO_CNTRL {CNTRL_BYTES = 5,UNIT_BYTES = 19,};
enum MACRO_COMPL {COMPL_LISTHD_TYPE = 1,COMPL_ENTRY_TYPE = 2,QUAD_TYPE = 3,EQUIV_MEM_TYPE = 4,NONEQUIV_MEM_TYPE = 5,};
enum MACRO_COUNT {COUNT_BCD = 0x1,};
enum MACRO_CPUID {CPUID = 31,};
enum MACRO_CQUIT {CQUIT = 0x1C,CERASE = 0x23,CKILL = 0x40,};
enum MACRO_CRASH {CRASH_TABLE_SIZE = 2048,};
enum MACRO_CREAD {CREAD = 0x100,};
enum MACRO_CRERR {CRERR_ERRNO = -1,};
enum MACRO_CRMOD {CRMOD = 0x10,RAW = 0x20,ODDP = 0x40,EVENP = 0x80,ANYP = 0xC0,NLDELAY = 0x300,TBDELAY = 0x400,CRDELAY = 0x3000,VTDELAY = 0x4000,BSDELAY = 0x8000,ALLDELAY = 0xFF00,};
enum MACRO_CRT_Y {CRT_Y_EQUALS_2X = 0x1,CRT_BLOCK_MOVER_PRESENT = 0x2,CRT_ADVANCED_HARDWARE = 0x4,CRT_CAN_INTERRUPT = 0x8,CRT_GRAPHICS_ON_OFF = 0x10,CRT_ALPHA_ON_OFF = 0x20,CRT_VARIABLE_Y_SIZE = 0x40,CRT_ODD_BYTES_ONLY = 0x80,CRT_NEEDS_FLUSHING = 0x100,CRT_DMA_HARDWARE = 0x200,CRT_VDMA_HARDWARE = 0x400,CRT_DBL_WORD_ACCESS = 0x800,CRT_COLOR_RECOVERY_1 = 0x1000,CRT_YUV_TYPE_1 = 0x2000,CRT_YUV_TYPE_2 = 0x4000,CRT_YUV_TYPE_3 = 0x8000,CRT_STEREO = 0x10000,CRT_GRAYSCALE = 0x20000,CRT_NEW_GA = 0x40000000,CRT_NEW_FBC = 0x80000000,};
enum MACRO_CR_RC {CR_RC = 0,CR_PID1 = 8,CR_PID2 = 9,CR_CCR = 10,CR_SAR = 11,CR_PID3 = 12,CR_PID4 = 13,CR_IVA = 14,CR_EIEM = 15,CR_IT = 16,CR_PCSQ = 17,CR_PCOQ = 18,CR_IIR = 19,CR_ISR = 20,CR_IOR = 21,CR_IPSW = 22,CR_EIRR = 23,CR_PPDP = 24,};
enum MACRO_CSIZE {CSIZE = 0x60,};
enum MACRO_C_INT {C_INT_D = 0x2000,};
enum MACRO_C_MIN {C_MIN_HPIB_ADDR = 0,C_MAX_HPIB_ADDR = 31,};
enum MACRO_DA_NO {DA_NO_TSTAT = -43,};
enum MACRO_DC615 {DC615 = 0x4,DC6037 = 0x6,};
enum MACRO_DELTA {DELTA_TO_CLASS = 0x2C,};
enum MACRO_DEN_M {DEN_M_BEST = 0,DEN_M_DFLT = 14,DEN_M_NOMOD = 15,};
enum MACRO_DESCR {DESCR_SEARCH = 0,MSGID_SEARCH = 1,TRN_SEARCH = 2,MSGID_AND_TRN = 3,ANY_MSG = 4,};
enum MACRO_DEVFD {DEVFD = 0,XMTRD = 1,ERRFD = 2,XMTWR = 3,DSPRD = 4,DSPWR = 5,JBLOG = 6,NAMESZ = 8,LBUFMAX = 100,};
enum MACRO_DIOII {DIOII_SC_SIZE = 0x400000,};
enum MACRO_DL_FC {DL_FC = 0x10,DL_ATM = 0x11,DL_IPATM = 0x12,DL_X25 = 0x13,DL_ISDN = 0x14,DL_HIPPI = 0x15,DL_100VG = 0x16,DL_100VGTPR = 0x17,DL_ETH_CSMA = 0x18,DL_100BT = 0x19,DL_LOWFAT = 0x20,};
enum MACRO_DL_HP {DL_HP_FORCE_UNBIND_REQ = 0xFC,};
enum MACRO_DMA_A {DMA_A_OK = 0,DMA_A_FE_MODE = 1,DMA_A_POWER_FAIL = 2,};
enum MACRO_DM_IO {DM_IO_REQ_MSG = 120,DM_IO_REPLY_MSG = 121,DM_IO_EVENT_MSG = 122,START_SCSI_MSG = 130,};
enum MACRO_DTYPE {DTYPE_VNODE = 1,DTYPE_SOCKET = 2,DTYPE_STREAMS = 3,DTYPE_UNSP = 5,DTYPE_LLA = 6,MAXIOV = 16,};
enum MACRO_DT_HP {DT_HP_LOAD_MAP = 0x60000000,DT_HP_DLD_FLAGS = 0x60000001,DT_HP_DLD_HOOK = 0x60000002,DT_HP_UX10_INIT = 0x60000003,DT_HP_UX10_INITSZ = 0x60000004,DT_HP_PREINIT = 0x60000005,DT_HP_PREINITSZ = 0x60000006,DT_HP_NEEDED = 0x60000007,DT_HP_TIME_STAMP = 0x60000008,DT_HP_CHECKSUM = 0x60000009,DT_HP_GST_SIZE = 0x6000000A,DT_HP_GST_VERSION = 0x6000000B,DT_HP_GST_HASHVAL = 0x6000000C,DT_HP_EPLTREL = 0x6000000D,DT_HP_EPLTRELSZ = 0x6000000E,DT_HP_FILTERED = 0x6000000F,DT_HP_FILTER_TLS = 0x60000010,DT_HP_COMPAT_FILTERED = 0x60000011,DT_HP_LAZYLOAD = 0x60000012,};
enum MACRO_DT_IA {DT_IA_64_PLT_RESERVE = 0x70000000,};
enum MACRO_DV_NT {DV_NT_K = -9,};
enum MACRO_D_CTL {D_CTL = 0x1,D_STS = 0x2,};
enum MACRO_D_INT {D_INT_D = 0x4000,};
enum MACRO_DoRed {DoRed = 1,DoGreen = 2,DoBlue = 4,};
enum MACRO_EAGLE {EAGLE_UV_REC = 0xE,};
enum MACRO_EF_IA {EF_IA_64_TRAPNIL = 0x1,EF_IA_64_LAZYSWAP = 0x2,EF_IA_64_BE = 0x8,EF_IA_64_ABI64 = 0x10,EF_IA_64_REDUCEDFP = 0x20,EF_IA_64_CONSGP = 0x40,EF_IA_64_NOFUNCDESC_CONS_GP = 0x80,EF_IA_64_ABSOLUTE = 0x100,EF_IA_64_ARCH = 0xFF000000,};
enum MACRO_EISA1 {EISA1 = 0,ISR_IS_MP_SAFE = 1,SNAKES_EISA_BUS = 118,WAX_EISA_BUS = 144,EISA1_BASE_ADDR = -67108864,};
enum MACRO_ELF32 {ELF32_FSZ_ADDR = 4,ELF32_FSZ_HALF = 2,};
enum MACRO_ELF64 {ELF64_FSZ_ADDR = 8,ELF64_FSZ_HALF = 2,};
enum MACRO_EMPTY {EMPTY = 0x0,TAPE_ALERT_EVENT = 0x1,MEDIUM_ERROR_EVENT = 0x2,DEV_RESET_PWRON_EVENT = 0x3,SCTL_INCOMPLETE_EVENT = 0x4,INVALID_STATUS_EVENT = 0x5,};
enum MACRO_EM_IA {EM_IA_64 = 50,};
enum MACRO_ENTRY {ENTRY_FIRST_16 = 0,ENTRY_INIT = 3,ENTRY_IO = 4,};
enum MACRO_EPERM {EPERM = 1,ENOENT = 2,ESRCH = 3,EINTR = 4,EIO = 5,ENXIO = 6,E2BIG = 7,ENOEXEC = 8,EBADF = 9,ECHILD = 10,EAGAIN = 11,ENOMEM = 12,EACCES = 13,EFAULT = 14,EBUSY = 16,EEXIST = 17,EXDEV = 18,ENODEV = 19,ENOTDIR = 20,EISDIR = 21,EINVAL = 22,ENFILE = 23,EMFILE = 24,ENOTTY = 25,EFBIG = 27,ENOSPC = 28,ESPIPE = 29,EROFS = 30,EMLINK = 31,EPIPE = 32,EDEADLK = 45,ENOLCK = 46,EILSEQ = 47,ENOTEMPTY = 247,ENAMETOOLONG = 248,ENOSYS = 251,};
enum MACRO_ERROR {ERROR_TRACE_BIT = 0x2000000,};
enum MACRO_ESTAT {ESTAT = 64512,};
enum MACRO_ETHER {ETHER_HLEN = 14,ETHERXT_HLEN = 18,};
enum MACRO_EVENT {EVENT_DEVREC = 0,EVENT_TERMINAL = 1,EVENT_CONSOLE_MSG = 2,};
enum MACRO_EXCAL {EXCAL_CTRL_HDR = 8,EXCAL_UV_HDR = 18,};
enum MACRO_EX_OK {EX_OK = 0,EX__BASE = 64,};
enum MACRO_FALSE {FALSE = 0,};
enum MACRO_FATAL {FATAL = 0x8000,};
enum MACRO_FCLWP {FCLWP_ANYADDR = 0,AF_FCLWP = 19,FCLWP_PROTO = 257,};
enum MACRO_FCODE {FCODE_RESERVED = 0,DA_SET_REN = 1,DA_CLEAR_REN = 2,DA_SEND_IFC = 3,CONFIG_RESPONSE_PPOLL = 4,READ_PPOLL_CONFIG = 5,CONFIG_SRQ_RESPONSE = 6,DA_READ_INTERRUPT = 7,DA_WRITE_INT_MASK = 8,DA_READ_INT_MASK = 9,DA_WAIT_INTERRUPT = 10,DA_GO_ONLINE = 11,DA_GO_OFFLINE = 12,DA_ASSERT_ATN = 13,DA_DE_ASSERT_ATN = 14,DA_CONF_PPOLL_SENSE = 15,DA_CONDUCT_PPOLL = 16,CONFIG_HPIB_ADDRESS = 17,DA_READ_STATUS = 18,IDENTIFY_CONFIG = 19,LAST_SEC_ADDRESS = 20,ENABLE_PARITY_FREEZE = 21,DISABLE_PARITY_FREEZE = 22,LOOPBACK = 23,Z8_ACCESS_DIAG = 24,EXT_MEM_ACCESS_DIAG = 25,ENABLE_INT_MASK = 26,DISABLE_INT_MASK = 27,DA_IDY_DEVICE = 28,DA_MAKE_DA_CIC = 29,DA_ENABLE_PP_MASK = 30,DA_DISABLE_PP_MASK = 31,DA_CONFIG_SPEED = 32,DA_CONFIG_SC = 33,DA_DISABLE_INTR = 34,};
enum MACRO_FCOLD {FCOLD_COPY = 0x1000,};
enum MACRO_FIFOM {FIFOM = 0x7,};
enum MACRO_FIRST {FIRST_ENTRIES = 0x0,LAST_ENTRY = 0x1,};
enum MACRO_FIXED {FIXED_BLK_MODE = 0x1,MIN_BYTES_IN_MODE_SENSE = 0xC,};
enum MACRO_FM_EP {FM_EP = -8,};
enum MACRO_FM_SL {FM_SL = -16,};
enum MACRO_FOPEN {FOPEN = -1,};
enum MACRO_FREAD {FREAD = 0x1,FWRITE = 0x2,FNDELAY = 0x4,FAPPEND = 0x8,FMARK = 0x10,FDEFER = 0x20,FCOPYAVOID = 0x80,FPOSIX_AIO = 0x80000,};
enum MACRO_FULLM {FULLM = 0x6,};
enum MACRO_FULLS {FULLS = 0x4,NUM_OPENS_PER_LU = 0x10,};
enum MACRO_F_DAM {F_DAM_LOCKED = 0x1,NO_PPOLL = 0xFF,};
enum MACRO_False {False = 0,};
enum MACRO_GPIO1 {GPIO1_DIAG_RESET = 0,GPIO1_DIAG_IDENT = 1,GPIO1_DIAG_READ_REG = 2,GPIO1_DIAG_WRITE_REG = 3,};
enum MACRO_GRAPH {GRAPH_LOCK_IMPLICIT = 0,GRAPH_LOCK_IMPLICIT_PRIV = 1,GRAPH_LOCK_EXPLICIT = 2,MAX_TEST_PARAM = 10,};
enum MACRO_HADJI {HADJI_THREADS = 1,};
enum MACRO_HPPAC {HPPAC_MASK = 0x1000000,};
enum MACRO_HP_UX {HP_UX_OPT_ASMODEL_DEFAULT = 0,HP_UX_OPT_ASMODEL_MGAS = 0,HP_UX_OPT_ASMODEL_SHARE_MAGIC = 0,};
enum MACRO_HTYPE {HTYPE_UNKNOWN = 0,HTYPE_ETHERNET = 1,HTYPE_EXP_ETHERNET = 2,HTYPE_AX25 = 3,HTYPE_PRONET = 4,HTYPE_CHAOS = 5,HTYPE_IEEE802 = 6,HTYPE_ARCNET = 7,};
enum MACRO_IBEAM {IBEAM_WIDTH = 3,CARET_WIDTH = 9,};
enum MACRO_ICONV {ICONV_VERSION = 1,ICONV_MAGIC = 42465,};
enum MACRO_IDLEN {IDLEN = 8,};
enum MACRO_IEXEC {IEXEC = 0x40,};
enum MACRO_IFIFO {IFIFO = 0x1000,IFCHR = 0x2000,IFDIR = 0x4000,IFBLK = 0x6000,IFCONT = 0x7000,IFREG = 0x8000,IFNWK = 0x9000,IFLNK = 0xA000,IFSOCK = 0xC000,};
enum MACRO_INDEX {INDEX_SHORT = 0xC000000,};
enum MACRO_INDIR {INDIR_MASK = 0xC0,};
enum MACRO_INIT2 {INIT_SHM_LINK = 1,INIT_SHM_LINK_v2 = 3,};
enum MACRO_INPUT {INPUT = 0x8,OUTPUT = 0x9,COLLECTION = 0xB,};
enum MACRO_INT16 {INT16_MIN = -32768,};
enum MACRO_IOMAP {IOMAP_REF_COUNT = 1,IOMAP_PERMANENT = 2,WSIO_MAX_REGISTER_RANGES = 4,};
enum MACRO_IPOPT {IPOPT_CONTROL = 0x0,IPOPT_RESERVED1 = 0x20,IPOPT_DEBMEAS = 0x40,IPOPT_RESERVED2 = 0x60,};
enum MACRO_IPTOS {IPTOS_LOWDELAY = 0x10,IPTOS_THROUGHPUT = 0x8,IPTOS_RELIABILITY = 0x4,};
enum MACRO_IP_MF {IP_MF = 0x2000,IP_MAXPACKET = 0xFFFF,};
enum MACRO_IREAD {IREAD = 0x100,};
enum MACRO_ISGID {ISGID = 0x400,};
enum MACRO_ISUID {ISUID = 0x800,};
enum MACRO_ISVTX {ISVTX = 0x200,};
enum MACRO_I_GET {I_GET_QLEN = 536892255,I_ASYNC_ACK_PRI = 536892259,};
enum MACRO_I_SET {I_SET_HIWAT = 536892251,I_SET_LOWAT = 536892252,I_GET_HIWAT = 536892257,I_GET_LOWAT = 536892258,I_XTI_USND = 536893533,I_XTI_URCV = 536893534,};
enum MACRO_KTRUE {KTRUE = 1,};
enum MACRO_LABEL {LABEL_ACC_PAD = 15,};
enum MACRO_LASTV {LASTV_32BIT_FRSTQUAD = 0x3FFFFFFF,FIRSTV_THIRDQUAD = 0x80000000,LASTV_THIRDQUAD = 0xBFFFFFFF,};
enum MACRO_LCASE {LCASE = 0x4,};
enum MACRO_LDCTR {LDCTR = 0x800,};
enum MACRO_LEVEL {LEVEL_0_0 = 0,LEVEL_1_0 = 1,LEVEL_1_5 = 2,LEVEL_2_0 = 3,MEM_ARCH = 8,MEM_IMPL_DEP = 9,};
enum MACRO_LE_IP {LE_IP_TERM = 3000,LE_IP_SHORT = 3001,LE_IP_ICMP_SHORT = 3002,LE_IP_PKT_DROPPED = 3003,LE_IP_CKSUM_ERR = 3004,LE_IP_ICMP_CKSUM_ERR = 3005,LE_IP_PKT_LOST = 3006,LE_ICMP_PKT_DROPPED = 3007,LE_ICMP_BAD_CODE = 3008,LE_ICMP_TOO_BIG_IGNORED = 3009,LE_IP_VERSION_ERR = 3010,LE_IP_BAD_SOURCE = 3011,LE_IP_ICMP_NO_MEM = 4000,LE_IP_NO_MEM = 4001,LE_IP_DRAIN = 5000,LE_IP_ICMP_ERROR_MSG = 5001,LE_IP_ICMP_SEND = 5002,LE_IP_SRC_DST = 5003,LE_IP_INPUT = 5004,LE_IP_ICMP_INPUT = 5005,LE_IP_FRAG_PROC = 5006,LE_IP_FRAG_CMPLT = 5007,LE_IP_OPT_PROC = 5008,LE_IP_FORWARD = 5009,LE_IP_OUTPUT = 5010,LE_IP_OUTFRAG = 5011,LE_IP_ICMP_DEST = 5012,LE_IP_ICMP_SRC = 5013,LE_IP_ICMP_SEND_SRC_DST = 5014,};
enum MACRO_LE_PR {LE_PR_NO_MACCT = 1000,LE_PR_ARP_BROAD = 1001,LE_PR_BAD_INTERFACE = 2000,LE_PR_ARP_UNSUP_FAMILY = 2001,};
enum MACRO_LOCAL {LOCAL_PCB = 0x1,HEAD_PCB = 0x2,};
enum MACRO_LOCK2 {LOCK_SUCCESS = 0,LOCK_ERROR = 1,LOCK_TIMEOUT = 2,};
enum MACRO_LOGCH {LOGCH_BREAK = 0x200000,};
enum MACRO_LPR11 {LPR11 = 1,AMG_MSG_CLASS = 2,AMG_GET_ACTION = 3,AMG_EXEC_MSG = 4,AMG_GET_STATE = 5,AMG_CONFIG_CLASS = 6,AMG_DM_IO_CLASS = 7,AMG_DAM_BIND = 8,AMG_SAVE_DAM_INFO = 9,AMG_LDM_BIND_REPLY = 10,AMG_CREATION = 11,AMG_PDA_INIT = 12,AMG_SET_TIMER = 13,AMG_HARD_IDENTIFY = 14,AMG_HARD_ID_REPLY = 15,AMG_LOG_ERROR = 16,AMG_REPLY_DM_IO = 17,AMG_HALT_CODE_CK = 18,AMG_DAM_IO_CLASS = 19,AMG_DAM_READ_CLASS = 20,AMG_QUICK = 21,AMG_DAM_SEND = 22,AMG_LAST_STATUS = 23,AMG_BUF_DEV_STAT = 24,AMG_IO = 25,AMG_DIAG = 26,AMG_DIAG_REPLY = 27,AMG_DAM_P_ON_REPLY = 28,AMG_P_ON = 29,AMG_P_ON_REQ = 30,AMG_EVENT = 31,LPR11END = 32,};
enum MACRO_LPRIV {LPRIV_XFR_ON = 0x400000,};
enum MACRO_L_SET {L_SET = 0,L_INCR = 1,L_XTND = 2,};
enum MACRO_MAGIC {MAGIC_NONSPL_VAL = 0x4321,};
enum MACRO_MAJOR {MAJOR_TRANSPORT_VERSION = 0,};
enum MACRO_MATCH {MATCH_CHAR = 80,};
enum MACRO_MAXNS {MAXNS = 3,};
enum MACRO_MDSFU {MDSFU_HI = 0,MDSFU_LO = 4,MDSFU_OV = 8,};
enum MACRO_METER {METER_OFF = 0,METER_ON = 1,};
enum MACRO_MINOR {MINOR_TRANSPORT_VERSION = 0,};
enum MACRO_MM_OK {MM_OK = 0,MM_NOMSG = 1,MM_NOCON = 4,};
enum MACRO_MODEL {MODEL_ILP32 = 0x1,MODEL_LP64 = 0x2,MODEL_MASK = 0x3,};
enum MACRO_MOD_C {MOD_C_MREG = 1,MOD_C_UREG = 3,MODMAXNAMELEN = 15,MOD_C_MINFO = 97,MOD_C_KPATH = 98,MOD_C_SMOD = 99,};
enum MACRO_MONTH {MONTH_DIGIT = 2,};
enum MACRO_MOUNT {MOUNT_UFS = 0,MOUNT_NFS = 1,MOUNT_CDFS = 2,MOUNT_MAXTYPE = 3,};
enum MACRO_MPULL {MPULL_EXTRA = 32,};
enum MACRO_MTAIL {MTAIL = 64,MMAXOFF = 192,};
enum MACRO_MT_NO {MT_NO_REWIND_MASK = 0x40,MT_USER_CONFIG_MASK = 0x20,MT_INDEX_MASK = 0x1F,MT_INDEX_BIT_POS = 0x0,};
enum MACRO_MYSYS {MYSYS = 523,};
enum MACRO_NBHPG {NBHPG = 4096,};
enum MACRO_ND_NO {ND_NO_ADDRESS = -3,ND_BADARG = -2,ND_NOMEM = -1,};
enum MACRO_ND_OK {ND_OK = 0,ND_NOHOST = 1,ND_NOSERV = 2,ND_NOSYM = 3,ND_OPEN = 4,ND_ACCESS = 5,ND_UKNWN = 6,ND_NOCTRL = 7,ND_FAILCTRL = 8,ND_SYSTEM = 9,};
enum MACRO_NETTL {NETTL_VERSION_1000 = 1000,};
enum MACRO_NGRPS {NGRPS = 16,};
enum MACRO_NOERR {NOERR = 0,EPARAM = 1,ECOMB = 2,ETRANS = 3,EMASTER = 4,EDEVICE = 5,EOFFOPEN = 6,ESECONDOPEN = 7,EREIMOPEN = 8,EDRIVER = 9,EOFFON = 10,EDEVPRI = 11,EDEVSEC = 12,EDEVICES = 13,EINMIRPRI = 14,EINMIRSEC = 15,EPRINOTON = 16,ESECNOTOFF = 17,ENOTABLE = 18,EROOTSWAP = 19,ENOTMIRROR = 20,ENOTATOMIC = 21,ENOMIRRORLOG = 22,EREIMFAILED = 23,};
enum MACRO_NO_BD {NO_BD_A = -10,};
enum MACRO_NO_ID {NO_ID = 0,INTERNAL_HPIB = 1,HP98624 = 2,HP98626 = 3,HP98625 = 4,HP98627A = 5,HP98628 = 6,HP98204A = 7,HP98204B = 8,HP9826A = 9,HP9836A = 10,HP9836C = 11,HP9837H = 12,HP98700 = 13,HP98642 = 14,HP98643 = 15,HP98644 = 16,HP98622 = 17,BOBCAT = 18,SCUZZY = 19,HP98629 = 20,HP98577 = 21,HP98646 = 22,HP98641 = 23,HP98630D = 24,HP98630Q = 25,HP98253 = 26,HP98259 = 27,HP98623 = 28,HP98640 = 29,HP98691 = 30,HP98649 = 31,HP98647 = 32,HP98695 = 33,HP98633 = 34,HIL_CARD = 35,};
enum MACRO_NPDIR {NPDIR_LOCKS = 32,};
enum MACRO_NRPOS {NRPOS = 8,MAXIPG = 2048,UFS_MAXDEVBLK = 268435454,};
enum MACRO_NS_LC {NS_LC_LOGSTAT = 0,};
enum MACRO_NS_LF {NS_LF_DATA = 2,NS_LF_STR = 4,NS_LF_INFO = 8,NS_LF_DATA_DROPPED = 16,NS_LF_DATA_INMBUF = 32,};
enum MACRO_NS_LS {NS_LS_ARP = 10,NS_LS_LAN0 = 11,};
enum MACRO_NULL2 {NULL_DEVICE = 0,MOUSE = 1,TABLET = 2,KEYBOARD = 3,QUADRATURE = 4,TOUCHSCREEN = 5,TOUCHPAD = 6,BUTTONBOX = 7,BARCODE = 8,ONE_KNOB = 9,TRACKBALL = 10,KEYPAD = 11,NINE_KNOB = 12,ID_MODULE = 13,VCD_8_DIALBOX = 14,MMII_1812_TABLET = 15,SS_SPACEBALL = 16,APOLLO_LPFK = 17,MMII_1201_TABLET = 18,};
enum MACRO_NZERO {NZERO = 20,};
enum MACRO_OLCUC {OLCUC = 2,ONLCR = 4,OCRNL = 8,ONOCR = 16,ONLRET = 32,OFILL = 64,OFDEL = 128,NLDLY = 256,};
enum MACRO_OPOST {OPOST = 0x1,_OLCUC = 0x2,_ONLCR = 0x4,_OCRNL = 0x8,_ONOCR = 0x10,_ONLRET = 0x20,_OFILL = 0x40,_OFDEL = 0x80,_NLDLY = 0x100,};
enum MACRO_O_CR1 {O_CR1 = 0x1000,O_CR2 = 0x2000,O_VTDELAY = 0x4000,O_BSDELAY = 0x8000,};
enum MACRO_O_NL1 {O_NL1 = 0x100,O_NL2 = 0x200,O_TBDELAY = 0x400,O_NOAL = 0x800,O_CRDELAY = 0x3000,};
enum MACRO_PARMS {PARMS_STRUCT_FLD4 = 0,PARMS_STRUCT_FLD5 = 1,PARMS_STRUCT_FLD6 = 2,PARMS_STRUCT_FLD7 = 3,PARMS_STRUCT_FLD8 = 4,PARMS_STRUCT_FLD9 = 5,PARMS_STRUCT_FLD10 = 6,PARMS_STRUCT_FLD11 = 7,PARMS_STRUCT_FLD12 = 8,PARMS_STRUCT_FLD13 = 9,PARMS_STRUCT_FLD14 = 10,PARMS_STRUCT_FLD15 = 11,PARMS_STRUCT_FLD17 = 13,PARMS_STRUCT_USED = -1,};
enum MACRO_PARTL {PARTL_OF = 0x203B203B,};
enum MACRO_PFAIL {PFAIL_SUBQ = 0,IO_CONFIG_SUBQ = 1,};
enum MACRO_PFHDL {PFHDL_ASSIGNED = 0x1,PFHDL_NONULLREFPG = 0x2,PFHDL_PRESTRICT = 0x20,PFHDL_STATIC_PREDICT = 0x40,};
enum MACRO_PF_HP {PF_HP_CODE_DEPR = 0x1000000,PF_HP_MODIFY_DEPR = 0x2000000,PF_HP_LAZYSWAP_DEPR = 0x4000000,};
enum MACRO_PIDR1 {PIDR1 = 8,};
enum MACRO_PIDR2 {PIDR2 = 9,};
enum MACRO_PIDR3 {PIDR3 = 12,};
enum MACRO_PIDR4 {PIDR4 = 13,};
enum MACRO_PLLIO {PLLIO = 664,PZERO = 665,};
enum MACRO_PMASK {PMASK = 0xFFFF,PCATCH = 0x10000,};
enum MACRO_POWER {POWER_WARNING = 4,POWER_LOSS = 2,};
enum MACRO_PQUAD {PQUAD_EOC = 1,ID_UNKNOWN = 255,};
enum MACRO_PROBE {PROBE_FIRST = 0,PROBE_NEXT = 1,PROBE_ADDRESS = 2,MAX_PROBE_LAYERS = 6,MAX_DESC_LEN = 32,};
enum MACRO_PROOT {PROOT = 3,};
enum MACRO_PSEMN {PSEMN = 668,};
enum MACRO_PSEMZ {PSEMZ = 667,};
enum MACRO_PSTAT {PSTAT_STATIC = 2,PSTAT_DYNAMIC = 3,PSTAT_SETCMD = 4,PSTAT_VMINFO = 5,PSTAT_DISKINFO = 6,PSTAT_SEMINFO = 7,PSTAT_MSGINFO = 8,PSTAT_SHMINFO = 9,PSTAT_PROCESSOR = 10,PSTAT_LVINFO = 11,PSTAT_SWAPINFO = 12,PSTAT_FILEINFO = 13,PSTAT_IPCINFO = 14,PSTAT_PROC_VM = 15,PSTAT_STABLE = 16,PST_CLEN = 64,};
enum MACRO_PST_N {PST_N_PG_SIZES = 16,PST_SZ_DEFAULT = 0,};
enum MACRO_PSW_H {PSW_H_P = 8,PSW_L_P = 9,PSW_N_P = 10,PSW_X_P = 11,PSW_B_P = 12,PSW_C_P = 13,PSW_V_P = 14,PSW_M_P = 15,PSW_CB_P = 23,PSW_R_P = 27,PSW_Q_P = 28,PSW_P_P = 29,PSW_D_P = 30,PSW_I_P = 31,};
enum MACRO_PSW_W {PSW_W_SM = 0x200,PSW_E_SM = 0x100,PSW_T_P = 0x7,};
enum MACRO_PSW_Y {PSW_Y_P = 0,PSW_Z_P = 1,PSW_W_P = 4,PSW_E_P = 5,PSW_S_P = 6,PSW_W_SM_P = 22,PSW_O_P = 24,PSW_G_P = 25,PSW_F_P = 26,PSW_CB_HI_P64 = 31,PSW_Y_P64 = 32,PSW_Z_P64 = 33,PSW_W_P64 = 36,PSW_E_P64 = 37,PSW_S_P64 = 38,PSW_T_P64 = 39,PSW_H_P64 = 40,PSW_L_P64 = 41,PSW_N_P64 = 42,PSW_X_P64 = 43,PSW_B_P64 = 44,PSW_C_P64 = 45,PSW_V_P64 = 46,PSW_M_P64 = 47,PSW_CB_P64 = 55,PSW_O_P64 = 56,PSW_G_P64 = 57,PSW_F_P64 = 58,PSW_R_P64 = 59,PSW_Q_P64 = 60,PSW_P_P64 = 61,PSW_D_P64 = 62,PSW_I_P64 = 63,SYSTEM_MASK = 134217759,};
enum MACRO_PSW_Z {PSW_Z = 0x40000000,PSW_W = 0x8000000,PSW_E = 0x4000000,PSW_S = 0x2000000,PSW_O = 0x80,PSW_G = 0x40,PSW_F = 0x20,};
enum MACRO_PS_PA {PS_PA_RISC = 0x1,PST_MAXCLASSES = 0x20,};
enum MACRO_PTEVT {PTEVT_DEFAULT = 0,};
enum MACRO_PT_OS {PT_OS_PANIC = 0x0,PT_OS_DUMPOK = 0x9,PT_OS_DUMPSYNCOK = 0xA,};
enum MACRO_QNICE {QNICE = 0,BOOTDLY = 60,RESPMAX = 70000,};
enum MACRO_QNORM {QNORM = 0,};
enum MACRO_QUAD1 {QUAD1_32BIT_BEG_ADDR = 0x0,QUAD2_32BIT_BEG_ADDR = 0x40000000,QUAD3_32BIT_BEG_ADDR = 0x80000000,QUAD4_32BIT_BEG_ADDR = 0xC0000000,};
enum MACRO_QUAD4 {QUAD4_32BIT_BEG_FREE = 4096,};
enum MACRO_QUERY {QUERY = 0x0,IQUERY = 0x1,STATUS = 0x2,NS_NOTIFY_OP = 0x4,UPDATEA = 0x9,UPDATED = 0xA,UPDATEDA = 0xB,UPDATEM = 0xC,UPDATEMA = 0xD,ZONEINIT = 0xE,ZONEREF = 0xF,};
enum MACRO_READY {READY = 64,};
enum MACRO_RESET {RESET_RX_BUF = 0x1,RESET_TX_BUF = 0x2,RESET_RX_OVF = 0x4,RESET_TX_UNF = 0x8,RESET_OVRANGE = 0x10,};
enum MACRO_RES_1 {RES_1 = 0x0,RES_2 = 0x1,RES_3 = 0x2,RES_4 = 0x3,RES_USB = 0x10,};
enum MACRO_RETRY {RETRY_LIMIT = 15,};
enum MACRO_RIGHT {RIGHT_HAND = 1,LEFT_HAND = 2,BOTH_HANDS = 3,EITHER_HAND = 4,};
enum MACRO_RNORM {RNORM = 0x1,RMSGD = 0x2,RMSGN = 0x4,RFILL = 0x8,RPROTNORM = 0x10,RPROTDIS = 0x20,RPROTDAT = 0x40,RPROTCOMPRESS = 0x80,};
enum MACRO_S9000 {S9000_ID_98204A = 1,S9000_ID_9826A = 2,S9000_ID_9836A = 3,S9000_ID_9836C = 4,S9000_ID_98627A = 5,S9000_ID_98204B = 6,S9000_ID_9837 = 7,S9000_ID_98700 = 8,S9000_ID_S300 = 9,S9000_ID_98720 = 10,S9000_ID_98550 = 11,S9000_ID_A1096A = 12,S9000_ID_FRI = 13,S9000_ID_98730 = 14,S9000_ID_98705 = 650150000,S9000_ID_98736 = 651249835,};
enum MACRO_SAR_0 {SAR = 11,};
enum MACRO_SCALL {SCALL_MAXARGS = 10,};
enum MACRO_SCHAR {SCHAR_MAX = 127,SCHAR_MIN = -128,};
enum MACRO_SCHED {SCHED_LOCK_BREAKUP = 1,};
enum MACRO_SCSI1 {SCSI1 = 1,};
enum MACRO_SEM_A {SEM_A = 0x80,SEM_R = 0x100,SEMOPM = 0x1F4,SEMMSL = 0x800,};
enum MACRO_SFULL {SFULL = 0x1,SCNTL = 0x2,SABORT = 0x8,SBLOCK = 0x20,STIME = 0x40,SBOTM = 0x80,};
enum MACRO_SHARE {SHARE_DATA = 0x80,UNPAD_UNLOADABLE = 0x100,GLOBAL_HASH_TABLE = 0x200,PLABEL_CACHE = 0x400,SHLIB_FIXED_ENABLE = 0x800,SHLIB_MERGE_SEG_ENABLE = 0x1000,FILTERED_LIBS_ENABLED = 0x2000,SHLIB_TEXT_PRIVATE_ENABLE = 0x4000,SHLIB_DYNAMIC_TLS = 0x8000,};
enum MACRO_SHLIB {SHLIB_UNW_VERS_ID = 89081712,};
enum MACRO_SHM_R {SHM_R = 0x100,SHM_W = 0x80,};
enum MACRO_SHORT {SHORT_TERM_ENTRY = 0,LONG_TERM_ENTRY = 1,COBRA_ESB_ID = 586203136,CORAL_ESB_ID = 586203152,TWAYS_ESB_ID = 586203168,MACE_ESB_ID = 586203185,};
enum MACRO_SINCR {SINCR = 2,CANBSIZ = 256,};
enum MACRO_SIZEV {SIZEV_THIRDQUAD = 1073741824,};
enum MACRO_SLAVE {SLAVE = 0x2,MASTER = 0x4,SFNM = 0x10,};
enum MACRO_SNORM {SNORM = 0x0,SDEAD = 0x4,};
enum MACRO_SPACE {SPACE_TO_EOD = 1,};
enum MACRO_SQLVL {SQLVL_DEFAULT = 0,SQLVL_GLOBAL = 1,SQLVL_ELSEWHERE = 2,SQLVL_MODULE = 3,SQLVL_QUEUEPAIR = 4,SQLVL_QUEUE = 5,MAXSTRMSGSZ = 16384,};
enum MACRO_SSIZE {SSIZE = 2,};
enum MACRO_STAPE {STAPE_EVENT_SERIAL_SIZE = 32,};
enum MACRO_START {START_SHM_LINK = 2,SMT_DATA_IN_BUFFER = 9,};
enum MACRO_STATE {STATE_TRACE_BIT = 0x4000000,};
enum MACRO_STB_0 {STB = 0x60000000,STWM = 0x6C000000,};
enum MACRO_STDIN {STDIN_FILENO = 0,STDOUT_FILENO = 1,STDERR_FILENO = 2,};
enum MACRO_SYNC3 {SYNC_MAJOR_VERSION = 3,SYNC_MINOR_VERSION = 0,};
enum MACRO_SYS__ {SYS___cnx_p2p_ctl = 509,SYS___CNX_GSCHED_CTL = 510,};
enum MACRO_S_CDF {S_CDF = 0x800,S_ENFMT = 0x400,};
enum MACRO_S_MAX {S_MAX_TYPE = 2,};
enum MACRO_SunXK {SunXK_Print_Screen = 0xFF61,};
enum MACRO_Sv_St {Sv_St_WORDS = 68,};
enum MACRO_TIMED {TIMED_OUT = 2,};
enum MACRO_TIMER {TIMER_INIT = 1,TIMER_INACTIVE = 2,TIMER_STEST_DCL = 3,TIMER_STEST_DEN = 4,TIMER_SUBC_ABORT = 5,TIMER_ABORT_DCL = 6,TIMER_ABORT_DEN = 7,TIMER_RFC = 8,READ_SENSE_TRIALS = 20,};
enum MACRO_TOKEN {TOKEN_16_BANDWIDTH = 16000000,};
enum MACRO_TRACE {TRACE_QUEUE = 0,LOG_QUEUE = 1,KTL_MBLKS = -2,KTL_MBUFS = -1,};
enum MACRO_TRANS {TRANS_NORM = 0,TRANS_FAIL = 1,TRANS_TIMEOUT = 2,TRANS_POWER_ON = 4,TRANS_WARN = 8,};
enum MACRO_TR_IF {TR_IF_UNITMASK = 0xFF,TR_IF_TYPEMASK = 0xFF00,};
enum MACRO_TSGID {TSGID = 0x400,};
enum MACRO_TSVTX {TSVTX = 0x200,};
enum MACRO_T_WKS {T_WKS = 11,T_PTR = 12,T_HINFO = 13,T_MINFO = 14,T_MX = 15,T_TXT = 16,T_RP = 17,T_AFSDB = 18,T_X25 = 19,T_ISDN = 20,T_RT = 21,T_NSAP = 22,T_NSAP_PTR = 23,T_SIG = 24,T_KEY = 25,T_PX = 26,T_GPOS = 27,T_AAAA = 28,T_LOC = 29,T_UINFO = 100,T_UID = 101,T_GID = 102,};
enum MACRO_T_YES {T_YES = 1,T_NO = 0,};
enum MACRO_UAREA {UAREA_VIRT_PAGES = 16,UAREA_SIZE = 65536,USRSTACK_MAX32BIT_Q2SHARED_ADDR = 1073741824,};
enum MACRO_UCHAR {UCHAR_MAX = 255,UINT_MAX = -1,};
enum MACRO_ULONG {ULONG_MAX = -1,};
enum MACRO_USAGE {USAGE_PAGE = 0x0,LOGICAL_MINIMUM = 0x1,LOGICAL_MAXIMUM = 0x2,PHYSICAL_MINIMUM = 0x3,PHYSICAL_MAXIMUM = 0x4,UNIT_EXPONENT = 0x5,UNIT = 0x6,REPORT_SIZE = 0x7,REPORT_ID = 0x8,REPORT_COUNT = 0x9,PUSH = 0xA,POP = 0xB,};
enum MACRO_USHRT {USHRT_MAX = 65535,};
enum MACRO_Uil_k {Uil_k_info_status = 1,Uil_k_warning_status = 2,Uil_k_error_status = 3,Uil_k_severe_status = 4,};
enum MACRO_VAGUE {VAGUE_STATS = 0,};
enum MACRO_VALID {VALID_RAW_SIGS = 6322101,};
enum MACRO_VENOM {VENOM_SET_CONTEXT = 0x1,VENOM_SET_EXPLICIT = 0x2,VENOM_SET_IMPLICIT = 0x4,VENOM_SET_MASK = 0x7,NUM_LOGREGS = 0x10,};
enum MACRO_VEOL2 {VEOL2 = 6,SSPEED = 7,COUTBAUD = 31,CINBAUD = 520093696,};
enum MACRO_VEXEC {VEXEC = 0x40,};
enum MACRO_VINTR {VINTR = 0,VQUIT = 1,VERASE = 2,VKILL = 3,VEOF = 4,VEOL = 5,_VEOL2 = 6,};
enum MACRO_VIPER {VIPER_CONTROL_COPY = 0xDC,};
enum MACRO_VREAD {VREAD = 0x100,};
enum MACRO_VROOT {VROOT = 0x1,VTEXT = 0x2,VSWAP = 0x4,VSOFTHOLD = 0x8,VEXLOCK = 0x10,VSHLOCK = 0x20,VLWAIT = 0x40,VXDEVOK = 0x80,VMMF = 0x100,VMI_DEV = 0x200,VCONVERTED = 0x1000,VLISTSTRAT = 0x2000,VNOBCACHE = 0x4000,};
enum MACRO_VSGID {VSGID = 0x400,};
enum MACRO_VSVTX {VSVTX = 0x200,};
enum MACRO_WORLD {WORLD_DEFAULT = 1,GROUP_DEFAULT = 256,OWNER_DEFAULT = 983040,DEFAULT_RIGHTS = 983297,};
enum MACRO_WRITE {WRITE_PROTECT_FLAG = 0x1,CMDQUEUE_FLAG = 0x2,SUPPORT_VB_FLAG = 0x4,};
enum MACRO_XATOM {XATOM_H = 1,};
enum MACRO_XCASE {XCASE = 4,NCC = 8,};
enum MACRO_XCONN {XCONN_CHECK_FREQ = 256,};
enum MACRO_XDCCC {XDCCC_NUMBER = 0x8000000,};
enum MACRO_XK_IO {XK_IO = 0x100000EE,XK_longminus = 0x100000F6,XK_block = 0x100000FC,};
enum MACRO_XK_KP {XK_KP_Page_Up = 0xFF9A,XK_KP_Next = 0xFF9B,};
enum MACRO_XK_L1 {XK_L1 = 0xFFC8,XK_F12 = 0xFFC9,};
enum MACRO_XK_L2 {XK_L2 = 0xFFC9,XK_F13 = 0xFFCA,};
enum MACRO_XK_L3 {XK_L3 = 0xFFCA,XK_F14 = 0xFFCB,};
enum MACRO_XK_L4 {XK_L4 = 0xFFCB,XK_F15 = 0xFFCC,};
enum MACRO_XK_L5 {XK_L5 = 0xFFCC,XK_F16 = 0xFFCD,};
enum MACRO_XK_L6 {XK_L6 = 0xFFCD,XK_F17 = 0xFFCE,};
enum MACRO_XK_L7 {XK_L7 = 0xFFCE,XK_F18 = 0xFFCF,};
enum MACRO_XK_L8 {XK_L8 = 0xFFCF,XK_F19 = 0xFFD0,};
enum MACRO_XK_L9 {XK_L9 = 0xFFD0,XK_F20 = 0xFFD1,};
enum MACRO_XK_R1 {XK_R1 = 0xFFD2,XK_F22 = 0xFFD3,};
enum MACRO_XK_R2 {XK_R2 = 0xFFD3,XK_F23 = 0xFFD4,};
enum MACRO_XK_R3 {XK_R3 = 0xFFD4,XK_F24 = 0xFFD5,};
enum MACRO_XK_R4 {XK_R4 = 0xFFD5,XK_F25 = 0xFFD6,};
enum MACRO_XK_R5 {XK_R5 = 0xFFD6,XK_F26 = 0xFFD7,};
enum MACRO_XK_R6 {XK_R6 = 0xFFD7,XK_F27 = 0xFFD8,};
enum MACRO_XK_R7 {XK_R7 = 0xFFD8,XK_F28 = 0xFFD9,};
enum MACRO_XK_R8 {XK_R8 = 0xFFD9,XK_F29 = 0xFFDA,};
enum MACRO_XK_R9 {XK_R9 = 0xFFDA,XK_F30 = 0xFFDB,};
enum MACRO_XTABS {XTABS = 6144,};
enum MACRO_X_TCP {X_TCP_PORT = 6000,};
enum MACRO_XkbAX {XkbAX_SKPressFBMask = 1,XkbAX_SKAcceptFBMask = 2,XkbAX_FeatureFBMask = 4,XkbAX_SlowWarnFBMask = 8,XkbAX_IndicatorFBMask = 16,XkbAX_StickyKeysFBMask = 32,XkbAX_TwoKeysMask = 64,XkbAX_LatchToLockMask = 128,XkbAX_SKReleaseFBMask = 256,XkbAX_SKRejectFBMask = 512,XkbAX_BKRejectFBMask = 1024,XkbAX_DumbBellFBMask = 2048,XkbAX_FBOptionsMask = 3903,};
enum MACRO_XkbDF {XkbDF_DisableLocks = 1,};
enum MACRO_XkbIM {XkbIM_NoAutomatic = 64,XkbIM_LEDDrivesKB = 32,XkbIM_UseBase = 1,};
enum MACRO_XkbKB {XkbKB_Permanent = 0x80,XkbKB_OpMask = 0x7F,XkbKB_Default = 0x0,};
enum MACRO_XkbLC {XkbLC_Hidden = 1,XkbLC_Default = 2,XkbLC_Partial = 4,XkbLC_AlphanumericKeys = 256,XkbLC_ModifierKeys = 512,XkbLC_KeypadKeys = 1024,XkbLC_FunctionKeys = 2048,XkbLC_AlternateGroup = 4096,};
enum MACRO_XkbOD {XkbOD_Success = 0,XkbOD_BadLibraryVersion = 1,XkbOD_ConnectionRefused = 2,XkbOD_NonXkbServer = 3,XkbOD_BadServerVersion = 4,};
enum MACRO_XkbSA {XkbSA_ClearLocks = 1,XkbSA_LatchToLock = 2,};
enum MACRO_XkbSI {XkbSI_AutoRepeat = 1,XkbSI_LockingKey = 2,XkbSI_LevelOneOnly = 128,};
enum MACRO_XkbXI {XkbXI_KeyboardsMask = 1,XkbXI_ButtonActionsMask = 2,XkbXI_IndicatorNamesMask = 4,XkbXI_IndicatorMapsMask = 8,XkbXI_IndicatorStateMask = 16,XkbXI_UnsupportedFeatureMask = 32768,};
enum MACRO_XmADD {XmADD = 0,XmDELETE = 1,XmREPLACE = 2,};
enum MACRO_XmCBG {XmCBG_ARMED_BIT = 1,XmCBG_TRAVERSE_BIT = 2,XmCBG_WAS_POSTED_BIT = 4,};
enum MACRO_XmFSB {XmFSB_MAX_WIDGETS_VERT = 12,XmFS_NO_MATCH = 1,};
enum MACRO_XmMAX {XmMAX_SHORT = 65535,};
enum MACRO_XmREP {XmREP_TYPE_INVALID = 0x1FFF,};
enum MACRO_XmTAB {XmTAB_ANY = 255,};
enum MACRO_XmTOP {XmTOP_LEFT = 3,};
enum MACRO_YPERR {YPERR_BADARGS = 1,YPERR_RPC = 2,YPERR_DOMAIN = 3,YPERR_MAP = 4,YPERR_KEY = 5,YPERR_YPERR = 6,YPERR_RESRC = 7,YPERR_NOMORE = 8,YPERR_PMAP = 9,YPERR_YPBIND = 10,YPERR_YPSERV = 11,YPERR_NODOM = 12,YPERR_BADDB = 13,YPERR_VERS = 14,YPERR_ACCESS = 15,YPERR_BUSY = 16,};
enum MACRO__COLL {_COLL_WEIGHTS_INLINE = 2,_COLL_FORWARD_MASK = 1,};
enum MACRO__CONF {_CONF_FILE = 0,_FILES = 1,_NISPLUS = 2,};
enum MACRO__EXTA {_EXTA = 0x1E,_EXTB = 0x1F,CLOCAL = 0x1000,};
enum MACRO__IEEE {_IEEE = 1,_DEXPLEN = 11,};
enum MACRO__NBRA {_NBRA = 9,_BIGRANGE = 11,_BADNUM = 16,_BIGDIGIT = 25,_NODELIM = 36,_NOMATCHSTR = 41,_BADPAREN = 42,_BIGPAREN = 43,_SYNBRACEFMT = 44,_NOCLOSEBRACE = 45,_SEMBRACEFMT = 46,_BADBRACKET = 49,_BIGREGEXP = 50,_ABNORMAL = 99,};
enum MACRO__SUBS {_SUBS_ACTIVE = 1,_SUBS_REGEXP = 2,};
enum MACRO__TAB0 {_TAB0 = 0,_TAB1 = 2048,_TAB2 = 4096,_TAB3 = 6144,_BSDLY = 8192,};
enum MACRO__XBS5 {_XBS5_ILP32_OFFBIG = 32,_XBS5_LP64_OFF64 = 64,};
enum MACRO__XCMS {_XCMS_NEWNAME = -1,};
enum MACRO___LWP {__LWP_RWLOCK_INVALID = 0x7E9,};
enum MACRO___NPD {__NPD_MAXPASSBYTES = 12,NISPASSWD_PROG = 100303,};
enum MACRO___NSW {__NSW_STD_ERRS = 4,__NSW_SUCCESS = 0,};
enum MACRO___RES {__RES = 19931104,};
enum MACRO_e_one {e_one = 0,e_two = 1,e_pcrel = 2,e_con = 3,e_plabel = 7,e_abs = 18,};
enum MACRO_false {false = 0,__bool_true_false_are_defined = 1,};
enum MACRO_osfXK {osfXK_Activate = 0x1004FF44,};
enum MACRO_sym_k {sym_k_error_entry = 127,};
enum MACRO_sym_m {sym_m_exported = 2,sym_m_imported = 4,sym_m_reference = 8,sym_m_builtin = 16,sym_m_obj_is_gadget = 32,};
enum MACRO_trans {trans_report_offset = 64,};
enum MACRO_xTrue {xTrue = 1,};
typedef struct _E4260720E3379DD09D94BD71D6A7BC45 MotifWmInfo;
typedef struct _ObjectClassRec *ObjectClass;
typedef struct _A94EB43F2838EBEBCA936AD6F7EBA6B5 RECORDRANGE;
typedef struct _RectObjPart RectObjPart;
typedef struct _984028CEBAA862490ACFAD72BCDE57E1 *ShellWidget;
typedef struct _A467143AA6DED7F9A689DDE9D5460EF6 SmPropValue;
struct T_error_ack {int PRIM_type;int ERROR_prim;int TLI_error;int UNIX_error;};
typedef struct _7EF5F1BDBA3A4538E26771909C573877 TransportSW;
typedef struct _75F7E626134BF34BF20657FC27D19BCE WMShellPart;
typedef struct _WidgetClassRec *WidgetClass;
typedef struct _XButtonInfo XButtonInfo;
typedef struct _53996C97E395EF20FC508697C3EEF92C XCharStruct;
typedef struct _XDeviceInfo XDeviceInfo;
typedef struct _94ACE20E5FEED38F4BC574FBC8AC4DA0 XErrorEvent;
typedef unsigned int XEventClass;
typedef struct _B36C03EE0DB03800CDBEDA1CF8CFFD5F XFontStruct;
typedef struct _E1655291D14CE59495117F42FECB583D XIMCallback;
typedef unsigned int XIMFeedback;
typedef struct _C793BDCA50E1B4A63C4D2E25C3A778F6 XIMResource;
typedef struct _7B884385C9B34F9BF1E347FECD869B6E XInputClass;
typedef struct _XKeyInfo *XKeyInfoPtr;
typedef struct _54554A9A149105D286AD985787231C0D XLCdCoreRec;
typedef struct _46C3598924410A8263981A6EE1F85A96 *XLCdMethods;
typedef struct _3E84D1386F10E26A4E3E4F22FDD3C8B8 XOMFontInfo;
typedef struct _0D243FAD6E0128E307D753D10A84039C XShapeEvent;
typedef struct _648D5B97A5A1D2D2729A4C51B6643734 XTextItem16;
typedef struct _6EA1208F05D799B306741A1D21B7D8A7 XUnmapEvent;
typedef struct _27E0D75A8414B78E0BA8E2B84253D452 XVisualInfo;
typedef struct _XcmsCmapRec XcmsCmapRec;
typedef struct _XicThaiPart XicThaiPart;
typedef struct _XkbAnyEvent XkbAnyEvent;
typedef struct _XkbBehavior XkbBehavior;
typedef struct _XkbColor *XkbColorPtr;
typedef struct _XkbColor XkbColorRec;
typedef struct _XkbNamesRec *XkbNamesPtr;
typedef struct _XkbNamesRec XkbNamesRec;
typedef struct _XkbPoint *XkbPointPtr;
typedef struct _XkbPoint XkbPointRec;
typedef struct _XkbShape *XkbShapePtr;
typedef struct _XkbShape XkbShapeRec;
typedef struct _XkbStateRec *XkbStatePtr;
typedef struct _XkbStateRec XkbStateRec;
typedef int XlcPosition;
typedef struct _XlcResource XlcResource;
typedef struct _XmColorData XmColorData;
typedef unsigned char XmDirection;
typedef struct _XmExtRec *XmExtObject;
typedef struct _XmFocusDataRec *XmFocusData;
typedef struct _8A52654D24E42D3905926E1FC7E9ABF6 XmFramePart;
typedef struct _XmGadgetRec XmGadgetRec;
typedef struct _XmGeoMatrixRec *XmGeoMatrix;
typedef struct _XmLabelPart XmLabelPart;
typedef struct _XmMenuStateRec *XmMenuState;
typedef struct _XmModalDataRec *XmModalData;
typedef struct _44E50AEC2878F8A6376C06FA64195504 XmRegionBox;
typedef struct _XmRegion XmRegionRec;
typedef struct __XmRenditionRec **XmRendition;
typedef unsigned short XmRepTypeId;
typedef struct _7945D87D9A9F9BB91054424B8A8AB447 XmScalePart;
typedef struct _XmScreenRec XmScreenRec;
typedef char *XmStringTag;
typedef struct _E1058C6CE9D10ECB65A245B878A205A2 *XmTextBlock;
typedef struct _9C224668B7E64BE6AE9499E6FD772938 XmbTextItem;
typedef struct _XrmHashBucketRec *XrmDatabase;
typedef struct _9C4E191A23082E8382C3082F6BDAC149 XrmResource;
typedef struct _48974C792553FBFA318CEC22C625F222 *XrmValuePtr;
typedef int XtCacheType;
typedef unsigned int XtInputMask;
typedef struct _7768503639F77374B09C8CE2FF45E7E1 *XtPopdownID;
typedef unsigned int XtValueMask;
typedef struct _4D69B6347F056FE268056727CEA155AA XwcTextItem;
typedef struct _A4FDF02C5281A2AFC802B6B07368BDDD _Color_pair;
typedef struct _023C7E5C1FA923CDA97A677B848735A7 _IceVersion;
struct _LRectangle {int x;int y;int width;int height;};
struct _XSyncValue {int hi;unsigned int lo;};
typedef struct _LC_core_ldx_t *_XlcCoreObj;
struct _XtStateRec;
enum __clockid_t {CLOCK_INVALID = 0x0,CLOCK_REALTIME = 0x1,CLOCK_VIRTUAL = 0x2,CLOCK_PROFILE = 0x4,RTTIMER0 = 0x8,RTTIMER1 = 0x10,};
typedef struct _BE3BBF0653DD7A6C094A79E8D11A6321 __opd_entry;
struct __ss_narrow {int ss_gr1;int ss_rp;int ss_gr3;int ss_gr4;int ss_gr5;int ss_gr6;int ss_gr7;int ss_gr8;int ss_gr9;int ss_gr10;int ss_gr11;int ss_gr12;int ss_gr13;int ss_gr14;int ss_gr15;int ss_gr16;int ss_gr17;int ss_gr18;int ss_gr19;int ss_gr20;int ss_gr21;int ss_gr22;int ss_arg3;int ss_arg2;int ss_arg1;int ss_arg0;unsigned int ss_dp;unsigned int ss_ret0;unsigned int ss_ret1;unsigned int ss_sp;unsigned int ss_gr31;unsigned int ss_cr11;unsigned int ss_pcoq_head;unsigned int ss_pcsq_head;unsigned int ss_pcoq_tail;unsigned int ss_pcsq_tail;unsigned int ss_cr15;unsigned int ss_cr19;unsigned int ss_cr20;unsigned int ss_cr21;unsigned int ss_cr22;unsigned int ss_cpustate;unsigned int ss_sr4;unsigned int ss_sr0;unsigned int ss_sr1;unsigned int ss_sr2;unsigned int ss_sr3;unsigned int ss_sr5;unsigned int ss_sr6;unsigned int ss_sr7;unsigned int ss_cr0;unsigned int ss_cr8;unsigned int ss_cr9;unsigned int ss_cr10;unsigned int ss_cr12;unsigned int ss_cr13;unsigned int ss_cr24;unsigned int ss_cr25;unsigned int ss_cr26;unsigned int ss_cr27;unsigned int ss_mpsfu_low;unsigned int ss_mpsfu_ovflo;};
typedef struct _db_globals_struct _db_globals;
struct _lwp_rwlock {short rw_cookie;short pad1;int rw_waiting_wtrs;int rw_waiting_rdrs;int rw_lock_count;int pad2[2];};
enum accept_stat {SUCCESS = 0x0,PROG_UNAVAIL = 0x1,PROG_MISMATCH = 0x2,PROC_UNAVAIL = 0x3,GARBAGE_ARGS = 0x4,SYSTEM_ERR = 0x5,};
struct audio_bufio {int writeflag;unsigned int physaddr;char *bufptr;int spare[8];};
struct audio_gains {int receive_gain;int transmit_gain;int monitor_gain;int spare[4];};
struct audio_meter {unsigned int receive_nsamples;unsigned int spare1[3];unsigned int receive_sample_sum;unsigned int spare2[3];unsigned int receive_sample_peak;unsigned int spare3[3];unsigned int transmit_nsamples;unsigned int spare4[3];unsigned int transmit_sample_sum;unsigned int spare5[3];unsigned int transmit_sample_peak;unsigned int spare6[5];unsigned short receive_meter_state;unsigned short spare7[3];unsigned short transmit_meter_state;unsigned short spare8[3];};
struct audio_regio {int writeflag;int audio_register;unsigned int value;int spare[8];};
typedef struct _2DFE59F2EEA4B8B07854A40D678C7B6B cammsg_type;
typedef struct __mutex *cps_mutex_t;
typedef struct cs80_2cmd cs80_2cmd_t;
typedef struct _44A07E0130C85419C01F2CC43BB02292 dasave_type;
typedef struct _95F74D7453875C15752E25CB7F1BF0CB deviceFocus;
typedef struct dev_name device_name;
typedef struct _EE1EC16C7EED2202F309301DFAD53D5F dl_hp_mib_t;
typedef struct _E95EE22F70665493872DBE0B8C8FD00B dl_ok_ack_t;
typedef struct _ACF4F1EE2C462FBD16A67C26EF703AB2 dma_hints_t;
struct dmem_status {int dmem_page;int dmem_locked;int dmem_bad;int dmem_busy;int dmem_type;};
struct dtlb_config {unsigned int HV_field1;};
typedef struct _F0735D304A48E71B4E554EB40B66D311 dumpimage_t;
typedef struct dyn_major dyn_major_t;
typedef unsigned int ent_id_type;
struct fb_header_t {unsigned int lib_ver_list;unsigned int lib_ver_list_len;unsigned int imp_exp_list;unsigned int imp_exp_list_len;unsigned int dynam_rel_list;unsigned int dynam_rel_list_len;unsigned int unsat_list;unsigned int unsat_list_len;};
struct floppy_info {unsigned int media;unsigned int status;unsigned int valid;};
enum fsh4_access {FSA_NONE = 0x0,FSA_R = 0x1,FSA_W = 0x2,FSA_RW = 0x3,};
typedef struct _8D66564F98126883EE28AC7CFF4C7324 iceErrorMsg;
typedef int int_fast8_t;
struct itlb_config {unsigned int HV_field1;};
typedef unsigned char kcpustate_t;
typedef struct kd_closef kd_closef_t;
struct keybit_info {int cpu_version;int fpu_info;int keycnt;unsigned int key_bits[1];int end;};
typedef union _kregister kregister_t;
typedef struct load_info load_info_t;
struct locale_data {char LC_ALL_D[59];char LC_COLLATE_D[59];char LC_CTYPE_D[59];char LC_MONETARY_D[59];char LC_NUMERIC_D[59];char LC_TIME_D[59];char LC_MESSAGES_D[59];};
enum log_entry_t {LOG_NOP = 0x0,ADD_NAME = 0x1,REM_NAME = 0x2,MOD_NAME_OLD = 0x3,MOD_NAME_NEW = 0x4,ADD_IBASE = 0x5,REM_IBASE = 0x6,MOD_IBASE = 0x7,UPD_STAMP = 0x8,};
typedef struct _BF4B56A69C72B45AEF3FE8947B3D6067 long_double;
typedef struct _lwp_mutex lwp_mutex_t;
typedef struct _300412910FB0CF3B4D618F8DD622E104 mib_AtEntry;
typedef struct _E058C916279CEDBDEE25D28521C04D5A mib_ifEntry;
typedef struct _0E7037D642DE9D2DAA89F1F3B41CD110 mib_ipAdEnt;
struct module_stat {int ms_pcnt;int ms_scnt;int ms_ocnt;int ms_ccnt;int ms_acnt;char *ms_xptr;short ms_xsize;};
enum mpc_request {MPC_GETNUMSPUS = 0x1,MPC_GETFIRSTSPU = 0x2,MPC_GETNEXTSPU = 0x3,MPC_GETCURRENTSPU = 0x4,MPC_SETPROCESS = 0x7,MPC_SETPROCESS_FORCE = 0x8,MPC_SETLWP = 0x9,MPC_SETLWP_FORCE = 0xA,MPC_GETPROCESS_BINDINGTYPE = 0xB,MPC_GETLWP_BINDINGTYPE = 0xC,MPC_SETLWP_UP = 0xD,};
struct nd_addrlist {int n_cnt;struct netbuf *n_addrs;};
struct nd_hostserv {char *h_host;char *h_serv;};
struct nd_mergearg {char *s_uaddr;char *c_uaddr;char *m_uaddr;};
struct pam_message {int msg_style;char *msg;};
struct passwd_info {char *pw_gecos;char *pw_shell;};
struct psb2160conf {unsigned short rx_gain;unsigned short tx_gain;unsigned short tone_time1;unsigned short tone_time2;unsigned short tone_time3;unsigned short tone_freq1;unsigned short tone_freq2;unsigned short tone_freq3;unsigned char tone_gain1;unsigned char tone_gain2;unsigned char tone_gain3;unsigned char monitor_gain;unsigned char dtmf_high;unsigned char dtmf_low;unsigned char conf1;unsigned char conf2;unsigned char conf3;unsigned char conf4;unsigned char fr[10];unsigned char fx[10];};
typedef struct pst_ucomm pst_ucomm_t;
enum region_type {RT_UNUSED = 0x0,RT_PRIVATE = 0x1,RT_SHARED = 0x2,};
enum reject_stat {RPC_MISMATCH = 0x0,AUTH_ERROR = 0x1,};
typedef struct _7B61BCBC246FA8722509A9D44D82CEAE rewind_type;
struct sched_param {int sched_priority;int sched_reserved[7];};
struct scsi_verify {unsigned int start_lba;unsigned short block_cnt;};
struct sioc_format {short fmt_optn;short interleave;};
struct sockaddr_un {short sun_family;char sun_path[92];};
typedef struct _1F8075983AA770A7B0A58AA98FA0C1D3 spawn_sym_t;
typedef unsigned int subrange_32;
struct swapfs_info {int sw_priority;int sw_binuse;int sw_bavail;int sw_breserve;char sw_mntpoint[256];};
typedef unsigned int t_uscalar_t;
typedef struct timespec timestruc_t;
typedef struct try_queue_struct try_queue_t;
struct user__squ_s {struct user__squ_s__sqe_s *squ_next;struct user__squ_s__sqe_s *squ_prev;unsigned int squ_flags;};
struct utmpidlearr {struct utmpidle **uia_arr;int uia_cnt;};
typedef struct _FBD7C3634F8B7AB01E77E408F9CF4A99 verify_type;
struct vpd_inquiry {unsigned char page_code;unsigned char page_buf[126];};
typedef struct _xButtonInfo xButtonInfo;
typedef struct _xDeviceInfo xDeviceInfo;
typedef struct _FEC8B8888F3B689040694BF1F630E941 xGrabKeyReq;
typedef struct _xKeyInfo *xKeyInfoPtr;
typedef struct _xShmLinkReq xShmLinkReq;
typedef struct _CB0632EF2409CFA4902D18F029698548 xVisualType;
typedef struct _E0F65D5058ACC2BC5F9AF2EDFFAF29D1 xWindowRoot;
typedef struct _58FAD93ADC8A41E6E41FB2BF3A4FCE08 xieAbortReq;
typedef struct _58FAD93ADC8A41E6E41FB2BF3A4FCE08 xieAwaitReq;
typedef struct _603DBFA11DE2EC77704AC2D2BE78752D xieFloBlend;
typedef struct _552C52AB05687DD02B6759D4331D5B07 xieFloIDErr;
typedef struct _C735D198080D0544DA6E87E89A47BA62 xieFloPoint;
typedef struct _xkbAnyEvent xkbAnyEvent;
typedef struct _xkmFileInfo xkmFileInfo;
struct xti_state_s {unsigned int xtis_qlen;};
struct ypmap_parms {char *domain;char *map;unsigned int ordernum;char *owner;};
struct ypreq_nokey {char *domain;char *map;};
typedef struct _WidgetRec *CoreWidget;
typedef struct _249E14B8BF24C4EA206EE45FEC486099 *ElementPtr;
typedef unsigned int Elf32_Addr;
typedef unsigned char Elf32_Byte;
typedef unsigned char Elf32_Char;
typedef struct _160641F2D897670075418D2E6B733231 Elf32_Ehdr;
typedef unsigned short Elf32_Half;
typedef struct _25C099F9CE304AFBCEF26B9531BCDA3F Elf32_Phdr;
typedef struct _D299CDB8D19E75BF1FB5C91684A275B9 Elf32_Rela;
typedef struct _518ACE51630D39AE769AAC20F2440B0D Elf32_Shdr;
typedef unsigned int Elf32_Word;
typedef unsigned long long Elf64_Addr;
typedef unsigned char Elf64_Byte;
typedef struct _31DC1A9A30C8BE83503485AFF4563DAB Elf64_Ehdr;
typedef unsigned short Elf64_Half;
typedef struct _61B607A2274ED5109A268B0B2173104D Elf64_Phdr;
typedef struct _4664B325D7B1C568276997F8FB024EC2 Elf64_Rela;
typedef struct _6C157D281FCCF3AD18E5920BAFADC6E6 Elf64_Shdr;
typedef unsigned int Elf64_Word;
typedef struct _FontSetRec FontSetRec;
typedef void *IcePointer;
typedef struct _LRectangle LRectangle;
typedef char MACADDRESS[6];
enum MACRO_ADDR {ADDR_CHAIN = 0x1,NO_CHECK = 0x2,NO_ALLOC_CHAIN = 0x4,EISA_BYTE_ENABLE = 0x8,NO_WAIT = 0x10,USER_PHYS = 0x20,PAGELETS = 0x100,UNSUPPORTED_FLAG = 0xFFFFFFFF,};
enum MACRO_AEOI {AEOI = 0x2,};
enum MACRO_ALL2 {ALL_WINDOWS = 0,};
enum MACRO_ATTN {ATTN_FF = 0x1000,};
enum MACRO_AUTH {AUTH_NONE = 0,AUTH_NULL = 0,};
enum MACRO_B900 {B900 = 9,B3600 = 13,B7200 = 15,B57600 = 19,B115200 = 20,B230400 = 21,B460800 = 22,};
enum MACRO_BIND {BIND_IMMEDIATE = 0x0,BIND_DEFERRED = 0x1,BIND_REFERENCE = 0x2,BIND_FIRST = 0x4,BIND_NONFATAL = 0x8,BIND_NOSTART = 0x10,BIND_VERBOSE = 0x20,BIND_RESTRICTED = 0x40,DYNAMIC_PATH = 0x100,BIND_TOGETHER = 0x200,BIND_BREADTH_FIRST = 0x400,};
enum MACRO_BITS {BITS_PER_BYTE = 8,NUMBERS_OF_BYTES_PER_CLASS = 125,NUMBERS_OF_BYTES_IN_BITMAP = 750,};
enum MACRO_BOTH {BOTH = 0x3,};
enum MACRO_BPRI {BPRI_LO = 1,BPRI_MED = 2,BPRI_HI = 3,BPRI_WAITOK = 255,};
enum MACRO_BUSH {BUSH_RCME_DATA0 = 12,BUSH_RCME_DATA1 = 13,BUSH_RCME_KSR = 14,BUSH_RCME_FLAG = 15,BUSH_RCME_STATUS_A = 16,BUSH_RCME_ADDR_A = 17,BUSH_RCME_SYND_A = 18,BUSH_RCME_STATUS_B = 19,BUSH_RCME_ADDR_B = 20,BUSH_RCME_SYND_B = 21,PAT_MAX_BA_RANGES = 168,};
enum MACRO_BUSI {BUSI = 1073741824,};
enum MACRO_BYTE {BYTE_WIDE = 1,SHORT_WIDE = 2,LONG_WIDE = 4,};
enum MACRO_CAPS {CAPS_LED = 0x4,};
enum MACRO_CARD {CARD_ID_OFFSET = 0xC80,CARD_CONTROL_OFFSET = 0xC84,};
enum MACRO_CCMD {CCMD_OUT = 4,CCMD_IN = 0,};
enum MACRO_CEOF {CEOF = 0x4,CSTART = 0x11,CSTOP = 0x13,CSWTCH = 0x1A,};
enum MACRO_CEPV {CEPV_CPS_STID = 0,CEPV_CPS_KTID = 1,CEPV_CPS_NSTHREADS = 2,CEPV_CPS_PLEVEL = 3,CEPV_CPS_NODE_ID = 4,CEPV_CPS_NODE_CPUS = 5,CEPV_CPS_NODE_NTHREADS = 6,CEPV_CPS_COMPLEX_CPUS = 7,CEPV_CPS_COMPLEX_NTHREADS = 8,CEPV_CPS_COMPLEX_NODES = 9,CEPV_CPS_IS_PARALLEL = 10,CEPV_CPS_TOPOLOGY = 11,CEPV_CPS_PPCALL = 12,CEPV_CPS_PPCALLN = 13,CEPV_CPS_PPCALLV = 14,CEPV_CPS_THREAD_CREATE = 15,CEPV_CPS_THREAD_CREATEN = 16,CEPV_CPS_THREAD_EXIT = 17,CEPV_CPS_THREAD_WAIT = 18,CEPV_CPS_THREAD_STACK = 19,CEPV_CPS_WAIT_ATTR = 20,CEPV_CPS_THREAD_REGISTER_LOCK = 21,CEPV_C_FETCH32 = 22,CEPV_C_FETCH_AND_CLEAR32 = 23,CEPV_C_FETCH_AND_INC32 = 24,CEPV_C_FETCH_AND_DEC32 = 25,CEPV_C_FETCH_AND_SET32 = 26,CEPV_C_FETCH_AND_ADD32 = 27,CEPV_C_INIT32 = 28,CEPV_C_FREE32 = 29,CEPV_C_LOCK = 30,CEPV_C_UNLOCK = 31,CEPV_C_COND_LOCK = 32,CEPV_M_FETCH32 = 33,CEPV_M_FETCH_AND_CLEAR32 = 34,CEPV_M_FETCH_AND_INC32 = 35,CEPV_M_FETCH_AND_DEC32 = 36,CEPV_M_INIT32 = 37,CEPV_M_FREE32 = 38,CEPV_M_LOCK = 39,CEPV_M_UNLOCK = 40,CEPV_M_COND_LOCK = 41,CEPV_CPS_MUTEX_ALLOC = 42,CEPV_CPS_LIMITED_SPIN_MUTEX_ALLOC = 43,CEPV_CPS_MUTEX_FREE = 44,CEPV_CPS_MUTEX_LOCK = 45,CEPV_CPS_MUTEX_TRYLOCK = 46,CEPV_CPS_MUTEX_UNLOCK = 47,CEPV_CPS_BARRIER_ALLOC = 48,CEPV_CPS_LIMITED_SPIN_BARRIER_ALLOC = 49,CEPV_CPS_BARRIER_FREE = 50,CEPV_CPS_BARRIER = 51,CEPV_CPS_MAX = 52,};
enum MACRO_CESC {CESC = 92,CINTR = 127,};
enum MACRO_CHAR {CHAR_BIT = 8,CHAR_MAX = 127,CHAR_MIN = -128,};
enum MACRO_CHGR {CHGR_CLEAR_RESET = 536893442,};
enum MACRO_CIOC {CIOC_CANCEL = 536888075,};
enum MACRO_CLIC {CLIC = 0,};
enum MACRO_CNTL {CNTL = 1,SYS = 2,CAC = 3,PF = 4,};
enum MACRO_CNUL {CNUL = 0,CDEL = 255,};
enum MACRO_COLL {COLL_WEIGHTS_MAX = 4,EXPR_NEST_MAX = 32,LINE_MAX = 2048,};
enum MACRO_CONV {CONV_SUCCESS = 0,CONV_OVERFLOW = -1,};
enum MACRO_CORE {CORE_NONE = 0x0,CORE_FORMAT = 0x1,CORE_KERNEL = 0x2,CORE_PROC = 0x4,CORE_TEXT = 0x8,CORE_DATA = 0x10,CORE_STACK = 0x20,CORE_SHM = 0x40,CORE_MMF = 0x80,CORE_EXEC = 0x100,CORE_ANON_SHMEM = 0x200,};
enum MACRO_CS80 {CS80_SS_INTF = 0x0,CS80_MS_INTF = 0x1,CS80_SM_INTF = 0x2,CS80_MM_INTF = 0x3,SS80_SS_INTF = 0x4,SS80_MS_INTF = 0x5,SS80_SM_INTF = 0x6,SS80_MM_INTF = 0x7,FLEX_SS_INTF = 0xA,FLEX_MS_INTF = 0xB,FLEX_SM_INTF = 0xC,FLEX_PB_INTF = 0xD,FLEX_MM_INTF = 0xE,SCSI_INTF = 0x14,PC_FDC_INTF = 0x1E,UNKNOWN_DEV_TYPE = 0xFFFFFFFF,};
enum MACRO_CTRL {CTRL_TBL_TYPE = 0x3,UV_TBL_TYPE = 0x4,AV_TBL_TYPE = 0x6,END_TBL_TYPE = 0xFF,};
enum MACRO_C_IN {C_IN = 1,C_CHAOS = 3,C_HS = 4,C_ANY = 255,};
enum MACRO_DAPE {DAPE_REQ_LENGTH = 4,DAPE_FCODE = 88,};
enum MACRO_DAPS {DAPS_REQ_LENGTH = 6,DAPS_FCODE = 80,};
enum MACRO_DATA {DATA_ADDR = 1073741824,};
enum MACRO_DESC {DESC_DATA_LEN = 37,};
enum MACRO_DIAG {DIAG_OPEN_STATE = 3,DIAG_ACTIVE_STATE = 4,DIAG_CLOSED_STATE = 5,DIAG_CLOSING_STATE = 6,};
enum MACRO_DISK {DISK_DEV_TYPE = 0,CTD_DEV_TYPE = 1,WORM_DEV_TYPE = 2,MO_DEV_TYPE = 3,CDROM_DEV_TYPE = 4,};
enum MACRO_DLPI {DLPI_LOG_FLAG = 0x200,};
enum MACRO_DMEM {DMEM_IOMODE = 536898823,DMEM_MEMMODE = 536898824,};
enum MACRO_DONT {DONT = 254,};
enum MACRO_Dont {Dont_Check = 0,XInput_Initial_Release = 1,XInput_Add_XDeviceBell = 2,XInput_Add_XSetDeviceValuators = 3,XInput_Add_XChangeDeviceControl = 4,};
enum MACRO_EDGE {EDGE = 0x20,};
enum MACRO_EDOM {EDOM = 33,ERANGE = 34,};
enum MACRO_EIEM {EIEM = 15,};
enum MACRO_EIRR {EIRR = 23,};
enum MACRO_EISA {EISA_BUS = 0x76,VME_BUS = 0x78,};
enum MACRO_ELAB {ELAB_DEFINED = 0x1,INIT_DEFINED = 0x2,SHLIB_PATH_ENABLE = 0x4,EMBED_PATH_ENABLE = 0x8,SHLIB_PATH_FIRST = 0x10,SEARCH_ALL_STORS = 0x20,SHLIB_INTERNAL_NAME = 0x40,};
enum MACRO_EOEC {EOEC = 0,ECC_NO_CDIO_CLAIMED = 1001,ECC_COULD_NOT_CONFIG = 1002,ECC_NO_FCP_CLAIMED = 1003,ECC_CARD_OFFLINE = 1004,ECC_BAD_PORT_STATE = 1005,ECC_PUB_LOOP_NOT_SUPP = 1006,ECC_FCP_INQ_FAILED = 1007,ECC_BAD_LUN_NUMBER = 1008,ECC_NO_LUNS = 1009,ECC_INSERT_TABLE_FULL = 1010,ECC_TRUNCATED_LUN_LIST = 1011,ECC_IN_DATA_OVERFLOW = -1001,};
enum MACRO_EXIT {EXIT_FAILURE = 1,EXIT_SUCCESS = 0,};
enum MACRO_EXTA {EXTA = 30,EXTB = 31,LOBLK = 8192,};
enum MACRO_FAIL {FAIL = -1,};
enum MACRO_FCMD {FCMD_DATA_IN = 0x1,FCMD_NO_INT = 0x2,FCMD_NO_SELECT = 0x4,FCMD_NO_MOTOR = 0x8,FCMD_MASK = 0x1F,};
enum MACRO_FE_0 {FE = 0x80,};
enum MACRO_FIFO {FIFO_MASTER = 0,FULL_MASTER = 16777216,FULL_SLAVE = 33554432,};
enum MACRO_FILE {FILE_CHANGED = 5,};
enum MACRO_FIND {FIND_MEMALLOC_OK = 0x0,FIND_NOMEMALLOC = 0x1,};
enum MACRO_FIOC {FIOC_BUFFER_SIZE = 48,};
enum MACRO_FLAG {FLAG_CLEAN = 1,FLAG_BITMAP = 2,FLAG_FAILURE = 4,FLAG_CONFIG = 16,FLAG_NOREIM = 32,};
enum MACRO_FLEX {FLEX_DATA = 0xFFF80001,BC_RANGE_ALIGN = 0xFFFF0000,};
enum MACRO_FM_0 {FM = 0x8,};
enum MACRO_FORM {FORM_SHORT = 0,FORM_LONG = 1,ACL_FILEOWNER = -26,};
enum MACRO_FREE {FREE_ENTRY = 0,};
enum MACRO_FROM {FROM_SET_VALUE = 1,};
enum MACRO_FRST {FRST_MEM_HPA = 0x384,MEM_10MSE = 0x38C,IODC_MEMCNFIG = 0x390,IODC_CONSOLE = 0x3A0,IODC_BOOT_DEV = 0x3D0,IODC_KBD = 0x400,};
enum MACRO_FSEL {FSEL_COLL = 0x1,};
enum MACRO_FULL {FULL_HANDSHAKE_MODE = 0,PULSE_HANDSHAKE_MODE = 1,STROBE_HANDSHAKE_MODE = 2,SLAVE_HANDSHAKE_MODE = 3,};
enum MACRO_F_OK {F_OK = 0,X_OK = 1,W_OK = 2,R_OK = 4,};
enum MACRO_GCON {GCON = 536889089,GCOFF = 536889090,GCAON = 536889091,GCAOFF = 536889092,GCMAP = 536889093,GCUNMAP = 536889094,GCLOCK_BLOCKSIG = 536889095,GCUNLOCK = 536889096,GCLOCK = 536889097,GCSTATIC_MAP = 536889099,};
enum MACRO_GLOB {GLOB_ERR = 0x1,GLOB_MARK = 0x2,GLOB_NOSORT = 0x4,GLOB_NOCHECK = 0x8,GLOB_DOOFFS = 0x10,GLOB_APPEND = 0x20,GLOB_NOESCAPE = 0x40,};
enum MACRO_GOOD {GOOD = 0,CHECK_CONDITION = 2,COND_MET_GOOD = 4,BUSY = 8,INT_GOOD = 16,INT_COND_MET_GOOD = 20,RESERVATION_CONFLICT = 24,COMMAND_TERMINATED = 34,QUEUE_FULL = 40,};
enum MACRO_GPIO {GPIO_TIMEOUT = 0,GPIO_WIDTH = 1,GPIO_SPEED = 2,GPIO_SIGNAL_MASK = 4,};
enum MACRO_GRAM {GRAM_1 = 0x1,GRAM_2 = 0x2,SLUG_1 = 0x3,SLUG_2 = 0x4,};
enum MACRO_HALF {HALF_RTN = 0xFFFF,};
enum MACRO_HAND {HAND = 0x1,EYEBALL = 0x2,EYEBROW = 0x3,EYELID = 0x4,EAR = 0x5,NOSE = 0x6,MOUTH = 0x7,UPPER_LIP = 0x8,LOWER_LIP = 0x9,JAW = 0xA,NECK = 0xB,UPPER_ARM = 0xC,ELBOW = 0xD,FOREARM = 0xE,WRIST = 0xF,PALM = 0x10,THUMB = 0x11,INDEX_FINGE = 0x12,MIDDLE_FINGER = 0x13,RING_FINGER = 0x14,LITTLE_FINGER = 0x15,HEAD = 0x16,SHOULDER = 0x17,HIP = 0x18,WAIST = 0x19,THIGH = 0x1A,KNEE = 0x1B,CALF = 0x1C,ANKLE = 0x1D,FOOT = 0x1E,HEEL = 0x1F,BALL_OF_FOOT = 0x20,BIG_TOE = 0x21,SECOND_TOE = 0x22,THIRD_TOE = 0x23,FOURTH_TOE = 0x24,LITTLE_TOE = 0x25,BROW = 0x26,CHEEK = 0x27,};
enum MACRO_HARD {HARD_ERROR = 256,};
enum MACRO_HASH {HASH_FUNCTION_VERSION_1 = 1,};
enum MACRO_HDWR {HDWR_DEAD = -2147483648,};
enum MACRO_HOST {HOST_NOT_FOUND = 1,TRY_AGAIN = 2,NO_RECOVERY = 3,NO_DATA = 4,};
enum MACRO_HOUR {HOUR_DIGIT = 2,};
enum MACRO_HP15 {HP15_ASCII = 0,HP15_SJIS = 1,HP15_BIG5 = 2,HP15_CCDC = 3,HP15_GB = 4,};
enum MACRO_HPFL {HPFL_META_TAG = 16,};
enum MACRO_HPIB {HPIB_SV_ID = 0x80,PC_FDC_SV_ID = 0x83,PS2_SV_ID = 0x84,ARTIST_SV_ID = 0x85,SCSI_GSC_SV_ID = 0x89,LAN_LASI_SV_ID = 0x8A,SERIAL_LASI_SV_ID = 0x8C,TELEPHONY_TTY_SV_ID = 0x8D,SPP_DUART_TTY_SV_ID = 0xA1,};
enum MACRO_HP_S {HP_S_500 = 520,HP_S_200 = 522,HP_S_300 = 524,};
enum MACRO_ICMP {ICMP_MINLEN = 8,};
enum MACRO_ICW1 {ICW1 = 0x10,};
enum MACRO_ICW4 {ICW4_USED = 0x1,};
enum MACRO_IEEE {IEEE_8025_MAC_HLEN = 14,IEEE8023XSAP_HLEN = 24,};
enum MACRO_IFIR {IFIR = 0x1,IFIW = 0x2,PIPSIZ = 0x2000,};
enum MACRO_IFMT {IFMT = 0xF000,};
enum MACRO_IGMP {IGMP_MINLEN = 8,IGMP_HOST_MEMBERSHIP_QUERY = 17,IGMP_HOST_MEMBERSHIP_REPORT = 18,IGMP_DVMRP = 19,IGMP_PIM = 20,IGMP_HOST_NEW_MEMBERSHIP_REPORT = 22,IGMP_HOST_LEAVE_MESSAGE = 23,IGMP_MTRACE_RESP = 30,IGMP_MTRACE = 31,};
enum MACRO_INET {INET_TCP = 0x6,};
enum MACRO_INIT {INIT_NEW_CARDS = 536896774,};
enum MACRO_INT8 {INT8_MAX = 127,INT16_MAX = 32767,};
enum MACRO_INTM {INTM_OTHER = 1,INTM_INVALID = 2,INTM_DYNAMIC = 3,INTM_STATIC = 4,};
enum MACRO_INTR {INTR_GPIO_EIR = 0x400,INTR_GPIO_RDY = 0x800,INTR_PARALLEL_STROBE = 0x2000,};
enum MACRO_IODC {IODC_INTERRUPTS = 0x80,};
enum MACRO_IPSW {IPSW = 22,};
enum MACRO_IP_0 {IP = 244,};
enum MACRO_IR_0 {IR = 0x10,};
enum MACRO_ISB1 {ISB1 = 0,};
enum MACRO_ISC2 {ISC2 = 1,};
enum MACRO_ISIG {ISIG = 0x1,ICANON = 0x2,_XCASE = 0x4,ECHO = 0x8,ECHOE = 0x10,ECHOK = 0x20,ECHONL = 0x40,NOFLSH = 0x80,_ECHOCTL = 0x100,_ECHOPRT = 0x200,_ECHOKE = 0x400,_FLUSHO = 0x800,_PENDIN = 0x1000,TOSTOP = 0x40000000,IEXTEN = 0x80000000,};
enum MACRO_ITMR {ITMR = 16,};
enum MACRO_IUPD {IUPD = 0x2,IACC = 0x4,ITEXT = 0x20,ICHG = 0x40,IREF = 0x400,IRENAME = 0x1000,IACLEXISTS = 0x2000,IPURGED = 0x4000,ISYNCLOCKED = 0x10000,ISYNC = 0x20000,IDUXMNT = 0x40000,ISYNCWANT = 0x80000,IDUXMRT = 0x100000,IBUFVALID = 0x200000,IPAGEVALID = 0x400000,IOPEN = 0x800000,IFRAG = 0x1000000,IHARD = 0x2000000,INOFLUSH = 0x4000000,IF_MI_DEV = 0x8000000,IFRAGSYNC = 0x10000000,};
enum MACRO_KERN {KERN_ADDR = 0x0,SEGSIZE_32BIT = 0x40000000,};
enum MACRO_KI64 {KI64_INTF = -2147483648,};
enum MACRO_LACC {LACC_PFAULT = 1,LACC_NOPFAULT = 0,};
enum MACRO_LASI {LASI_LAN_INT_LINE = 23,LASI_LAN_INT_MASK = 256,};
enum MACRO_LAST {LAST_METHOD = 0x34,};
enum MACRO_LDBL {LDBL_MANT_DIG = 113,};
enum MACRO_LDBX {LDBX = 0,LDHX = 64,LDWX = 128,LDBS = 4096,LDHS = 4160,LDWS = 4224,STBYS = 4864,};
enum MACRO_LINK {LINK_UP = 1,LINK_DOWN = 2,DDN_X25 = 4,RFC877_X25 = 5,ETHERNET_CSMACD = 6,IEEE8023_CSMACD = 7,IEEE8025_TOKEN_RING = 9,APOLLO_TOKEN_RING = 10,NM_LOOPBACK = 24,ETHER_BANDWIDTH = 10000000,FDDI_BANDWIDTH = 100000000,};
enum MACRO_LLIO {LLIO_OK = 0,};
enum MACRO_LOCK {LOCK_EVENT_IGNORE = 0,LOCK_EVENT_NORMAL = 1,LOCK_EVENT_COPY = 2,LOCK_EVENT_DIVERT = 3,};
enum MACRO_LONG {LONG_MAX = 2147483647,LONG_MIN = -2147483648,};
enum MACRO_LOOP {LOOP_BACK_BIT = 0x800000,};
enum MACRO_LOST {LOST_MASK = 0x1000000,};
enum MACRO_LPMC {LPMC_ERR_NUM = -66,};
enum MACRO_LTIM {LTIM = 0x8,};
enum MACRO_MADV {MADV_NORMAL = 0,MADV_RANDOM = 1,MADV_SEQUENTIAL = 2,MADV_WILLNEED = 3,MADV_DONTNEED = 4,MADV_SPACEAVAIL = 5,MADV_VPS_PURGE = 6,MADV_VPS_INHERIT = 7,MADV_4K_PAGES = 12,MADV_16K_PAGES = 14,MADV_64K_PAGES = 16,MADV_256K_PAGES = 18,MADV_1M_PAGES = 20,MADV_4M_PAGES = 22,MADV_16M_PAGES = 24,MADV_64M_PAGES = 26,};
enum MACRO_MAIN {MAIN = 0,GLOBAL = 1,LOCAL = 2,LONG_ITEM = 3,LONG_ITEM_TAG = 15,};
enum MACRO_MASS {MASS_UNITS = 2,};
enum MACRO_MAX2 {MAX_MENU_ITEMS = 20,};
enum MACRO_MBIT {MBIT = 0x20,UBIT = 0x2000,TREG_LOAD = 0x1F0000,};
enum MACRO_MDCD {MDCD = 0x20000,};
enum MACRO_MDRS {MDRS = 0x4,MDTR = 0x20,MRTS = 0x200000,};
enum MACRO_MDSR {MDSR = 0x80000,};
enum MACRO_MERC {MERC_CLOSE_TOF = 1,MERC_CLOSE_FLUSH = 2,MERC_CLOSE_CLOSE = 3,MERC_OPEN_TOF = 10,MERC_OPEN_OPEN = 20,MERC_OPEN_STATUS_1 = 30,MERC_OPEN_STATUS_2 = 40,};
enum MACRO_MIN2 {MIN_SLIDER_THICKNESS = 1,MIN_SLIDER_LENGTH = 6,};
enum MACRO_MIOC {MIOC_ND = 99,MIOC_TCP = 107,};
enum MACRO_MLEN {MLEN = 192,};
enum MACRO_MODE {MODE_DEL = 0x100,};
enum MACRO_MORE {MORE_EVENTS = 0x80,};
enum MACRO_MSEM {MSEM_UNLOCKED = 0x0,MSEM_LOCKED = 0x1,};
enum MACRO_MT70 {MT70_REQ_LENGTH = 10,MT70_FCODE = 160,};
enum MACRO_NAME {NAME_MAX = 14,PATH_MAX = 1023,PIPE_BUF = 8192,};
enum MACRO_NBBY {NBBY = 8,MAXBSIZE = 65536,};
enum MACRO_NCCS {NCCS = 16,};
enum MACRO_NFS3 {NFS3_FHSIZE = 64,};
enum MACRO_NLM4 {NLM4_VERS = 4,};
enum MACRO_NMOK {NMOK = 0,ABT = -1,};
enum MACRO_NOAL {NOAL = 0x800,};
enum MACRO_NONE {NONE = 0x0,MAX_EVENT = 0x40,};
enum MACRO_NOTE {NOTE_HP_COMPILER = 1,NOTE_HP_COPYRIGHT = 2,NOTE_HP_VERSION = 3,NOTE_HP_SRCFILE_INFO = 4,NOTE_HP_LINKER = 5,NOTE_HP_INSTRUMENTED = 6,NOTE_HP_UX_OPTIONS = 7,};
enum MACRO_NO_0 {NO = 0,};
enum MACRO_NSIG {NSIG = 45,};
enum MACRO_NULL {NULL = 0,};
enum MACRO_None {None = 0,ParentRelative = 1,};
enum MACRO_OACK {OACK = 0x6,};
enum MACRO_OCW3 {OCW3 = 0x8,};
enum MACRO_OFF2 {OFF = 0,ON = 1,};
enum MACRO_OPEN {OPEN_BITS = 0xF,};
enum MACRO_PA83 {PA83_ODD_PAGE = 20,HSPOS = 26,};
enum MACRO_PASS {PASS_MAX = 8,_SYS_NMLN = 9,CHARCLASS_NAME_MAX = 255,ARG_MAX = 2048000,};
enum MACRO_PATH {PATH_REMAINDER = 8,PATH_LENGTH = 32,BAD_IODC = 107,};
enum MACRO_PCOQ {PCOQ = 18,};
enum MACRO_PCSQ {PCSQ = 17,};
enum MACRO_PDE2 {PDE2_0_INVALID_OFF = 0x80000000,PDE2_0_INVALID_SPACE = 0xFFFFFFFF,};
enum MACRO_PDIR {PDIR_EN = 0x40,};
enum MACRO_PEND {PEND_OPT_EN = 16,PDIR_OPT_EN = 64,};
enum MACRO_PFLG {PFLG_LOGIC_SENSE = 32,PCTL_LOGIC_SENSE = 64,PDDR_LOGIC_SENSE = 128,EDGE_LOGIC_SENSE = -2147483648,};
enum MACRO_PHYS {PHYS_PAGE_32_MASK = 0xFFFFF,AR_O_P_RT_M_MASK = 0x7F62100,};
enum MACRO_PID1 {PID1 = 1,PID2 = 3,PID3 = 5,PID4 = 7,};
enum MACRO_PID5 {PID5 = 0,PID6 = 2,PID7 = 4,PID8 = 6,PA_2_0_PIDS = 8,RANDOM_INSERT_MASK = 28,SAR_MASK = 31,};
enum MACRO_PMAP {PMAP_IPPROTO_TCP = 6,PMAP_IPPROTO_UDP = 17,};
enum MACRO_PMEM {PMEM = 640,PRIRWLOCK = 645,PRIBETA = 646,PRIALPHA = 647,PRISYNC = 648,PINOD = 650,PRIBIO = 660,PRIUBA = 664,};
enum MACRO_POLL {POLL_OPT = 0,MAX_IODC = 16,MAX_SW_VERS = 80,MAX_ID_DATA = 176,};
enum MACRO_PORT {PORT_NUMBER_MASK = 0x1F,PORT_SHARED = 0x40,PORT_MORE_ENTRIES = 0x80,};
enum MACRO_PPDA {PPDA = 24,};
enum MACRO_PRCO {PRCO_GETOPT = 0,PRCO_SETOPT = 1,PRCO_SHRINKBUFFER = 2,PRCO_NCMDS = 3,};
enum MACRO_PRIO {PRIO_MIN = -20,};
enum MACRO_PRIV {PRIV_RTPRIO = 1,PRIV_MLOCK = 2,PRIV_CHOWN = 3,PRIV_LOCKRDONLY = 4,PRIV_SETRUGID = 5,PRIV_MPCTL = 6,PRIV_RTSCHED = 7,PRIV_SERIALIZE = 8,PRIV_SPUCTL = 9,};
enum MACRO_PROC {PROC_DECONFIGED = 0,PROC_UNCONFIGED = 1,PROC_CONFIGED = 2,};
enum MACRO_PROP {PROP_MWM_HINTS_ELEMENTS = 5,};
enum MACRO_PROT {PROT_S = 1,PROT_E = 2,PROT_C = 3,PROT_P = 4,};
enum MACRO_PSWP {PSWP = 640,};
enum MACRO_PTOP {PTOP_BIT = 0x400000,};
enum MACRO_PTYM {PTYM_MAJOR = 16,PTYS_MAJOR = 17,};
enum MACRO_RAND {RAND_MAX = 32767,};
enum MACRO_RCTR {RCTR = 0,};
enum MACRO_READ {READ_ACCESS = 0x1,WORD_MODE = 0x2,CMDSIZE = 0x7A,};
enum MACRO_REIM {REIM_ON = 11,};
enum MACRO_REV0 {REV0 = 0x0,REV1 = 0x100,LOGICAL_ZERO = 0xFFFF,};
enum MACRO_RFIR {RFIR_INST = 0xCA0,};
enum MACRO_RHDL {RHDL_MMAP_ATTACHED = 0x1,RHDL_MMAP_PUBLIC = 0x2,RHDL_SID_ALLOC = 0x4,RHDL_PROTID_ALLOC = 0x10,};
enum MACRO_RLIM {RLIM_INFINITY = 0x7FFFFFFF,};
enum MACRO_RTLD {RTLD_NOW = 0x1,RTLD_LAZY = 0x2,RTLD_GLOBAL = 0x4,RTLD_LOCAL = 0x8,RTLD_NOLOAD = 0x10,RTLD_NODELETE = 0x20,RTLD_GROUP = 0x40,RTLD_PARENT = 0x80,RTLD_WORLD = 0x100,RTLD_NEXT = 0xFFFFFFFF,};
enum MACRO_R_IA {R_IA_64_NONE = 0x0,R_IA_64_IMM14 = 0x21,R_IA_64_IMM22 = 0x22,R_IA_64_IMM64 = 0x23,R_IA_64_DIR32MSB = 0x24,R_IA_64_DIR32LSB = 0x25,R_IA_64_DIR64MSB = 0x26,R_IA_64_DIR64LSB = 0x27,R_IA_64_GPREL22 = 0x2A,R_IA_64_GPREL64I = 0x2B,R_IA_64_GPREL32MSB = 0x2C,R_IA_64_GPREL32LSB = 0x2D,R_IA_64_GPREL64MSB = 0x2E,R_IA_64_GPREL64LSB = 0x2F,R_IA_64_LTOFF22 = 0x32,R_IA_64_LTOFF64I = 0x33,R_IA_64_PLTOFF22 = 0x3A,R_IA_64_PLTOFF64I = 0x3B,R_IA_64_PLTOFF64MSB = 0x3E,R_IA_64_PLTOFF64LSB = 0x3F,R_IA_64_FPTR64I = 0x43,R_IA_64_FPTR32MSB = 0x44,R_IA_64_FPTR32LSB = 0x45,R_IA_64_FPTR64MSB = 0x46,R_IA_64_FPTR64LSB = 0x47,R_IA_64_PCREL60B = 0x48,R_IA_64_PCREL21B = 0x49,R_IA_64_PCREL21M = 0x4A,R_IA_64_PCREL21F = 0x4B,R_IA_64_PCREL32MSB = 0x4C,R_IA_64_PCREL32LSB = 0x4D,R_IA_64_PCREL64MSB = 0x4E,R_IA_64_PCREL64LSB = 0x4F,R_IA_64_LTOFF_FPTR22 = 0x52,R_IA_64_LTOFF_FPTR64I = 0x53,R_IA_64_LTOFF_FPTR32MSB = 0x54,R_IA_64_LTOFF_FPTR32LSB = 0x55,R_IA_64_LTOFF_FPTR64MSB = 0x56,R_IA_64_LTOFF_FPTR64LSB = 0x57,R_IA_64_SEGREL32MSB = 0x5C,R_IA_64_SEGREL32LSB = 0x5D,R_IA_64_SEGREL64MSB = 0x5E,R_IA_64_SEGREL64LSB = 0x5F,R_IA_64_SECREL32MSB = 0x64,R_IA_64_SECREL32LSB = 0x65,R_IA_64_SECREL64MSB = 0x66,R_IA_64_SECREL64LSB = 0x67,R_IA_64_REL32MSB = 0x6C,R_IA_64_REL32LSB = 0x6D,R_IA_64_REL64MSB = 0x6E,R_IA_64_REL64LSB = 0x6F,R_IA_64_LTV32MSB = 0x74,R_IA_64_LTV32LSB = 0x75,R_IA_64_LTV64MSB = 0x76,R_IA_64_LTV64LSB = 0x77,R_IA_64_PCREL21BI = 0x79,R_IA_64_PCREL22 = 0x7A,R_IA_64_PCREL64I = 0x7B,R_IA_64_IPLTMSB = 0x80,R_IA_64_IPLTLSB = 0x81,R_IA_64_EPLTMSB = 0x82,R_IA_64_EPLTLSB = 0x83,R_IA_64_COPY = 0x84,R_IA_64_SUB = 0x85,R_IA_64_LTOFF22X = 0x86,R_IA_64_LDXMOV = 0x87,R_IA_64_TPREL14 = 0x91,R_IA_64_TPREL22 = 0x92,R_IA_64_TPREL64I = 0x93,R_IA_64_TPREL64MSB = 0x96,R_IA_64_TPREL64LSB = 0x97,R_IA_64_LTOFF_TPREL22 = 0x9A,R_IA_64_DTPMOD64MSB = 0xA6,R_IA_64_DTPMOD64LSB = 0xA7,R_IA_64_LTOFF_DTPMOD22 = 0xAA,R_IA_64_DTPREL14 = 0xB1,R_IA_64_DTPREL22 = 0xB2,R_IA_64_DTPREL64I = 0xB3,R_IA_64_DTPREL32MSB = 0xB4,R_IA_64_DTPREL32LSB = 0xB5,R_IA_64_DTPREL64MSB = 0xB6,R_IA_64_DTPREL64LSB = 0xB7,R_IA_64_LTOFF_DTPREL22 = 0xBA,R_IA_64_PCREL21BX = 0xF9,R_IA_64_PCREL21MX = 0xFA,};
enum MACRO_R_NO {R_NO_RELOCATION = 0x0,R_ZEROES = 0x20,R_UNINIT = 0x22,R_RELOCATION = 0x24,R_DATA_ONE_SYMBOL = 0x25,R_DATA_PLABEL = 0x27,R_SPACE_REF = 0x29,R_REPEATED_INIT = 0x2A,R_PCREL_CALL = 0x30,R_ABS_CALL = 0x40,R_DP_RELATIVE = 0x50,R_DATA_GPREL = 0x72,R_DTPMOD_OVERRIDE = 0x73,R_INDIRECT_CALL = 0x76,R_PLT_REL = 0x77,R_DLT_REL = 0x78,R_CODE_ONE_SYMBOL = 0x80,R_R19_LDST = 0xA3,R_MILLI_REL = 0xAE,R_CODE_PLABEL = 0xB0,R_BREAKPOINT = 0xB2,R_ENTRY = 0xB3,R_ALT_ENTRY = 0xB5,R_EXIT = 0xB6,R_BEGIN_TRY = 0xB7,R_END_TRY = 0xB8,R_BEGIN_BRTAB = 0xBB,R_END_BRTAB = 0xBC,R_STATEMENT = 0xBD,R_DATA_EXPR = 0xC0,R_CODE_EXPR = 0xC1,R_FSEL = 0xC2,R_LSEL = 0xC3,R_RSEL = 0xC4,R_N_MODE = 0xC5,R_S_MODE = 0xC6,R_D_MODE = 0xC7,R_R_MODE = 0xC8,R_DATA_OVERRIDE = 0xC9,R_TRANSLATED = 0xCE,R_AUX_UNWIND = 0xCF,R_COMP1 = 0xD0,};
enum MACRO_SAVE {SAVE_STATE_MASK_HI = 255,};
enum MACRO_SB_0 {SB = 250,};
enum MACRO_SCAN {SCAN_ADDR = 0,SCAN_SUBTREE = 1,SCAN_TO_INTERFACE = 2,SCAN_FIRST = 3,SCAN_NEXT = 4,MAX_ELEMENTS = 14,MAX_HW_PATH_STR = 64,};
enum MACRO_SCSI {SCSI_SV_ID = 0x71,LAN_SV_ID = 0x72,HIL_SV_ID = 0x73,CENT_SV_ID = 0x74,SERIAL_SV_ID = 0x75,SGC_SV_ID = 0x77,SCSI_FW_SV_ID = 0x7C,FDDI_SV_ID = 0x7D,SCSI_G_SV_ID = 0x82,};
enum MACRO_SCTL {SCTL_READ = 0x1,SCTL_INIT_WDTR = 0x2,SCTL_INIT_SDTR = 0x4,SCTL_NO_DISC = 0x8,};
enum MACRO_SDTA {SDTA_F_IGNORE = 0x1,ICS_SIZE = 0x6000,};
enum MACRO_SEEK {SEEK_SET = 0,SEEK_CUR = 1,SEEK_END = 2,};
enum MACRO_SEGV {SEGV_UNKNOWN = 0,};
enum MACRO_SEND {SEND_FILE = 1,};
enum MACRO_SHM2 {SHM_HI_TIDE = 92160,MAX_SHM_SIZE_new = 524288,};
enum MACRO_SHNX {SHNX_UNDEF = 0,SHNX_LORESERVE = 16776960,SHNX_TLS_COMMON = 16776992,SHNX_NS_COMMON = 16776993,SHNX_FS_COMMON = 16776994,SHNX_NS_UNDEF = 16776995,SHNX_FS_UNDEF = 16776996,SHNX_HP_EXTERN = 16776997,SHNX_HP_EXTHINT = 16776998,SHNX_ABS = 16777201,SHNX_COMMON = 16777202,SHNX_HIRESERVE = 16777215,};
enum MACRO_SHRT {SHRT_MAX = 32767,SHRT_MIN = -32768,};
enum MACRO_SHUT {SHUT_RD = 0,SHUT_WR = 1,SHUT_RDWR = 2,};
enum MACRO_SHZM {SHZM_CMD_FIFO_IN = 0x78,SHZM_CMD_FIFO_OUT = 0x79,SHZM_CMD_XFR3 = 0x7C,SHZM_CMD_SCLEAR = 0x7D,SHZM_CMD_SCLEAR_I = 0xFD,};
enum MACRO_SIE0 {SIE0 = 0,};
enum MACRO_SIE1 {SIE1 = 0,};
enum MACRO_SILI {SILI_MODE = 0x2,};
enum MACRO_SIOC {SIOC_RESET_BUS = 536892169,};
enum MACRO_SLOT {SLOT_IS_ISA = 0x1,DUPLICATE_ID = 0xF,SLOT_TYPE_MASK = 0x30,};
enum MACRO_SNGL {SNGL = 0x2,};
enum MACRO_SOCK {SOCK_STREAM = 1,SOCK_DGRAM = 2,SOCK_RAW = 3,SOCK_RDM = 4,SOCK_SEQPACKET = 5,};
enum MACRO_SOFF {SOFF = 0x1,ROFF = 0x2,INV_CMD = 0x81,DUP_SEND = 0x82,CL_SEND = 0x84,SOFT_ERR = 0x8088,FIFO_OVFL = 0x8089,DK_HUNG = 0x808B,DK_DOWN = 0x808C,};
enum MACRO_SOFT {SOFT_ERROR = 512,};
enum MACRO_STBS {STBS = 4608,};
enum MACRO_STHS {STHS = 4672,};
enum MACRO_STRU {STRU_F = 1,STRU_R = 2,STRU_P = 3,};
enum MACRO_STWS {STWS = 4736,};
enum MACRO_SVER {SVER_MODEL_RS232 = 0xE,SVER_MODEL_PEACOCK = 0xF,SVER_MODEL_PEACOCK_HIL = 0x14,};
enum MACRO_SWAP {SWAP_BASE = 2000,};
enum MACRO_SYNC {SYNC_NOLOCKWAIT = 0x1,SYNC_META = 0x2,SYNC_PANIC = 0x4,SYNC_REBOOT1 = 0x8,SYNC_REBOOT2 = 0x10,SYNC_SYNC = 0x20,M_OPTS = 0x10000,};
enum MACRO_SYS_ {SYS__set_mem_window = 167,SYS_NSP_INIT = 168,};
enum MACRO_S_DO {S_DO_BIND = 0,S_BIND = 1,S_DEV_OPEN = 2,S_ID = 3,S_DAP = 4,S_CLEAR = 5,S_WORK = 6,S_IO = 7,S_DIAG = 8,S_P_ON_1 = 9,S_P_ON_2 = 10,S_HARD_ID = 11,S_CLOSE_WAIT = 12,S_1_P_ON_CLOSE = 13,S_2_P_ON_CLOSE = 14,S_DEV_STAT = 15,};
enum MACRO_S_NO {S_NO_SENSE = 0x0,S_RECOVERED_ERROR = 0x1,};
enum MACRO_TAB0 {TAB0 = 0,TAB1 = 2048,TAB2 = 4096,TAB3 = 6144,BSDLY = 8192,};
enum MACRO_TCPS {TCPS_ESTABLISHED = 0,TCPS_CLOSE_WAIT = 1,TCPS_FIN_WAIT_1 = 2,TCPS_CLOSING = 3,TCPS_LAST_ACK = 4,TCPS_FIN_WAIT_2 = 5,TCPS_TIME_WAIT = 6,};
enum MACRO_TIME {TIME_UNITS = 3,};
enum MACRO_TIOC {TIOC = 21504,TIOCCONS = 536900712,};
enum MACRO_TLSP {TLSP = 27,};
enum MACRO_TRAP {TRAP_UNKNOWN = 0,};
enum MACRO_TREG {TREG_X_S = 0x1F,BREG = 0x3E00000,};
enum MACRO_TRUE {TRUE = 1,};
enum MACRO_TYPE {TYPE_UNDEFINED = 0,TYPE_PROCEDURE = 3,};
enum MACRO_T_SA {T_SA = 200,T_AXFR = 252,T_MAILB = 253,T_MAILA = 254,T_ANY = 255,};
enum MACRO_True {True = 1,};
enum MACRO_UBIT {UBIT_SHIFT = 19,PDE_BLOCKED_MAPPED = 30,};
enum MACRO_USER {USER = 0x20,PIM_SAVE_STATE_SIZE = 0x128,PIM2_0_SAVE_STATE_SIZE = 0x250,};
enum MACRO_VHDL {VHDL_SID_ALLOC = 0x1,VHDL_PRIVATE_TEXT = 0x2,VHDL_PROTID_ALLOC = 0x4,};
enum MACRO_VIFF {VIFF_TUNNEL = 0x1,VIFF_SRCRT = 0x2,MFCTBLSIZ = 0x100,};
enum MACRO_VLSI {VLSI = 0x40,TTL = 0x80,};
enum MACRO_VME1 {VME1_VSC = 0x5,VME1_ISC_START_ADDR = 0x50,VME1_ISC_END_ADDR = 0x60,};
enum MACRO_VME2 {VME2_VSC = 0x7,VME2_ISC_START_ADDR = 0x70,VME2_ISC_END_ADDR = 0x80,};
enum MACRO_VMIN {VMIN = 4,VTIME = 5,_CBAUD = 31,};
enum MACRO_VREL {VREL_90_SERVER = 506000,VREL_903_SERVER = 507000,};
enum MACRO_WAIT {WAIT_FOR_SRQ = 1,WAIT_FOR_CONTROL = 4,WAIT_FOR_TALKER = 5,WAIT_FOR_LISTENER = 6,MAX_HPIB_COMMANDS = 100,};
enum MACRO_WEOF {WEOF = -1,};
enum MACRO_WHAT {WHAT_LEN = 80,IS_1BYTE = 32768,};
enum MACRO_WILL {WILL = 251,};
enum MACRO_WONT {WONT = 252,};
enum MACRO_WORD {WORD_BIT = 32,NL_LANGMAX = 44,};
enum MACRO_WRDE {WRDE_APPEND = 0x1,WRDE_DOOFFS = 0x2,WRDE_NOCMD = 0x4,WRDE_REUSE = 0x8,WRDE_SHOWERR = 0x10,WRDE_UNDEF = 0x20,};
enum MACRO_XCMS {XCMS_FIRST_REG_DI_ID = 0x1,XCMS_FIRST_UNREG_DI_ID = 0x40000000,XCMS_FIRST_REG_DD_ID = 0x80000000,XCMS_FIRST_UNREG_DD_ID = 0xC0000000,};
enum MACRO_XPG4 {XPG4_1 = 2,};
enum MACRO_XREG {XREG = 0x1F0000,};
enum MACRO_Xm3D {Xm3D_ENHANCE_PIXEL = 2,};
enum MACRO_XmCB {XmCB_ARMED_BIT = 1,XmCB_TRAVERSE_BIT = 2,XmCB_WAS_POSTED_BIT = 4,};
enum MACRO_XmCR {XmCR_DROP_SITE_LEAVE_MESSAGE = 1,XmCR_DROP_SITE_ENTER_MESSAGE = 2,XmCR_DROP_SITE_MOTION_MESSAGE = 3,XmCR_DROP_MESSAGE = 4,};
enum MACRO_XmFS {XmFS_IN_FILE_SEARCH = 2,XmFS_DIR_SEARCH_PROC = 4,};
enum MACRO_XmNO {XmNO_DROP_SITE = 1,XmINVALID_DROP_SITE = 2,XmVALID_DROP_SITE = 3,};
enum MACRO_XmRC {XmRC_ARMED_BIT = 1,XmRC_BEING_ARMED_BIT = 2,XmRC_EXPOSE_BIT = 4,XmRC_WINDOW_MOVED_BIT = 8,XmRC_WIDGET_MOVED_BIT = 16,XmRC_POPPING_DOWN_BIT = 32,XmRC_FROM_RESIZE_BIT = 64,};
enum MACRO_XmSB {XmSB_MAX_WIDGETS_VERT = 8,};
enum MACRO_XmTO {XmTO_TORN_OFF_BIT = 1,XmTO_FROM_INIT_BIT = 2,XmTO_VISUAL_DIRTY_BIT = 4,XmTO_ACTIVE_BIT = 8,};
enum MACRO_YEAR {YEAR_DIGIT = 4,};
enum MACRO_YPOP {YPOP_CHANGE = 1,YPOP_INSERT = 2,YPOP_DELETE = 3,YPOP_STORE = 4,};
enum MACRO_ZONE {ZONE_DIGIT = 1,};
enum MACRO__AES {_AES_OS_VERSION = 1,_POSIX2_VERSION = 199209,};
enum MACRO__BS0 {_BS0 = 0,_BS1 = 8192,_VTDLY = 16384,};
enum MACRO__CR0 {_CR0 = 0,_CR1 = 512,_CR2 = 1024,_CR3 = 1536,_TABDLY = 6144,};
enum MACRO__DBM {_DBM_IOERR = 0x2,};
enum MACRO__FF0 {_FF0 = 0,_FF1 = 32768,};
enum MACRO__LC2 {_LC_LDX = 11,_LC_LDX_R6 = 12,};
enum MACRO__LFS {_LFS_ASYNCHRONOUS_IO = 1,};
enum MACRO__LWP {_LWP_MTX_VALID = 2368,};
enum MACRO__MAX {_MAX_VDMA_DEVICES = 8,};
enum MACRO__NL0 {_NL0 = 0,_NL1 = 256,_CRDLY = 1536,};
enum MACRO__NUM {_NUM_CLASSES = 12,};
enum MACRO__REG {_REG_SUBEXP_MAX = 255,};
enum MACRO__RPC {_RPC_NONE = 0,_RPC_NETPATH = 1,_RPC_VISIBLE = 2,_RPC_CIRCUIT_V = 3,_RPC_DATAGRAM_V = 4,_RPC_CIRCUIT_N = 5,_RPC_DATAGRAM_N = 6,_RPC_TCP = 7,_RPC_UDP = 8,};
enum MACRO__VT0 {_VT0 = 0,_VT1 = 16384,_FFDLY = 32768,};
enum MACRO_apXK {apXK_LineDel = 0x1000FF00,apXK_CharDel = 0x1000FF01,apXK_Copy = 0x1000FF02,apXK_Cut = 0x1000FF03,apXK_Paste = 0x1000FF04,apXK_Move = 0x1000FF05,apXK_Grow = 0x1000FF06,apXK_Cmd = 0x1000FF07,apXK_Shell = 0x1000FF08,apXK_LeftBar = 0x1000FF09,apXK_RightBar = 0x1000FF0A,apXK_LeftBox = 0x1000FF0B,apXK_RightBox = 0x1000FF0C,apXK_UpBox = 0x1000FF0D,apXK_DownBox = 0x1000FF0E,apXK_Pop = 0x1000FF0F,apXK_Read = 0x1000FF10,apXK_Edit = 0x1000FF11,apXK_Save = 0x1000FF12,apXK_Exit = 0x1000FF13,apXK_Repeat = 0x1000FF14,apXK_KP_parenleft = 0x1000FFA8,apXK_KP_parenright = 0x1000FFA9,};
enum MACRO_hpXK {hpXK_ClearLine = 0x1000FF6F,hpXK_InsertLine = 0x1000FF70,hpXK_DeleteLine = 0x1000FF71,hpXK_InsertChar = 0x1000FF72,hpXK_DeleteChar = 0x1000FF73,hpXK_BackTab = 0x1000FF74,hpXK_KP_BackTab = 0x1000FF75,};
enum MACRO_led0 {led0 = 0x1,led1 = 0x2,led2 = 0x4,led3 = 0x8,KERN_OK_LED = 0x10,DISK_DRV_LED = 0x20,LAN_RCV_LED = 0x40,LAN_XMIT_LED = 0x80,MAXINT = 0x7FFFFFFF,};
enum MACRO_true {true = 1,};
typedef struct _ObjectPart ObjectPart;
typedef struct _OutputDataRec *OutputData;
typedef union _612386ADEA876BB7391CC4765800258F PBLOCKTYPE;
typedef struct _POINTBLOCK POINTBLOCK;
typedef unsigned short PSM_USHORT;
typedef struct _RectObjRec RectObjRec;
struct T_addr_ack {int PRIM_type;int LOCADDR_length;int LOCADDR_offset;int REMADDR_length;int REMADDR_offset;};
struct T_addr_req {int PRIM_type;};
struct T_bind_ack {int PRIM_type;int ADDR_length;int ADDR_offset;unsigned int CONIND_number;};
struct T_bind_req {int PRIM_type;int ADDR_length;int ADDR_offset;unsigned int CONIND_number;};
struct T_conn_con {int PRIM_type;int RES_length;int RES_offset;int OPT_length;int OPT_offset;};
struct T_conn_ind {int PRIM_type;int SRC_length;int SRC_offset;int OPT_length;int OPT_offset;int SEQ_number;};
struct T_conn_req {int PRIM_type;int DEST_length;int DEST_offset;int OPT_length;int OPT_offset;};
struct T_conn_res {int PRIM_type;struct queue *QUEUE_ptr;int OPT_length;int OPT_offset;int SEQ_number;};
struct T_data_ind {int PRIM_type;int MORE_flag;};
struct T_data_req {int PRIM_type;int MORE_flag;};
struct T_info_ack {int PRIM_type;int TSDU_size;int ETSDU_size;int CDATA_size;int DDATA_size;int ADDR_size;int OPT_size;int TIDU_size;int SERV_type;int CURRENT_state;int PROVIDER_flag;};
struct T_info_req {int PRIM_type;};
typedef struct _TwoDInt TwoDIntRec;
typedef struct _UDCArea UDCAreaRec;
typedef struct _VRotateRec VRotateRec;
typedef struct _DEB6ED3E3E48801FAB6806704D963455 WMShellRec;
typedef struct _23D39CEB96D177F7D0B7BFAD0D72AB23 XClassHint;
typedef struct _B3807A7E298580816B8893D27A6B40D0 XEventList;
typedef struct _B5406AF633C6B856C397C3AA34CE31AC XICCoreRec;
typedef struct _CF5241A54E1FE5A7851EE8B8F8118B39 *XICMethods;
typedef struct _CC4BA52553A26164E40F03C0211728AA XIMCoreRec;
typedef struct _FD52BE3056AC130D3626F17ACAA3487B *XIMMethods;
typedef struct _48AD93219D69C082A7FA7555BF967BAD XKeyStatus;
typedef struct _EE6A206AE82CDE40AD82C65471471AC6 XOCCoreRec;
typedef struct _XOCGenericRec *XOCGeneric;
typedef struct _EE50BAD242841D9D70217C5858A39822 *XOCMethods;
typedef struct _XOMCoreRec XOMCoreRec;
typedef struct _XOMGenericRec *XOMGeneric;
typedef struct _XOMMethodsRec *XOMMethods;
typedef unsigned char XPSaveData;
typedef struct _CA1CD5B08005403884A7641019451813 XRectangle;
typedef struct _1168B6D6BD072B799143AF246A5E2670 XSizeHints;
typedef struct _XSyncValue XSyncValue;
typedef struct _58058F4C4926147A1BF935BBE1E04307 XTimeCoord;
typedef struct _XcmsCCC XcmsCCCRec;
typedef struct _CCAEDA52B750854C25441FD25B4DA915 XcmsCIELab;
typedef struct _F2C3184CEEDD49A7FB665043E59AF1F0 XcmsCIELuv;
typedef struct _6CDBBC56673808DBC2DA2091B1C251E0 XcmsCIEXYZ;
typedef struct _1C989109A1E2AFEC30347169F1D74F63 XcmsCIEuvY;
typedef struct _3DDB46D984C469553E00D9B3BEA3349C XcmsCIExyY;
typedef struct _D484A87E94E3DD0BB42E942E2185E2EE XcmsTekHVC;
typedef int ( *XhpCvtProc)();
typedef struct _XkbDesc *XkbDescPtr;
typedef struct _XkbDesc XkbDescRec;
typedef struct _XkbInfoRec *XkbInfoPtr;
typedef struct _XkbInfoRec XkbInfoRec;
typedef struct _XkbMods *XkbModsPtr;
typedef struct _XkbMods XkbModsRec;
typedef struct _46BEE3D9F82F9FFCDCD1E95DB471038A *XlcArgList;
typedef struct _XlcCharSetRec *XlcCharSet;
typedef struct _XlcConvRec XlcConvRec;
typedef struct __XmRenderTableRec **XmFontList;
typedef struct _XmFormPart XmFormPart;
typedef struct _XmFrameRec XmFrameRec;
typedef struct _XmLabelRec XmLabelRec;
typedef struct _XmListPart XmListPart;
typedef struct _XmProtocolRec *XmProtocol;
typedef struct _94B6BB2CA433A719FA3DF4B093FD2460 XmSashPart;
typedef struct _XmScaleRec XmScaleRec;
typedef struct _XmTextPart XmTextPart;
typedef struct _75C8455111F1AB4D326C29F40C651C63 *XrmMethods;
typedef struct _XtResource XtResource;
typedef unsigned int XtSignalId;
typedef struct _1E2A6A9B5EC919B5C597AB6887935210 XtTypedArg;
enum _KI_DEVICE {NO_DEV = 0xFFFFFFF3,DEV_SOCKET = 0xFFFFFFF4,DEV_NSIPC = 0xFFFFFFF5,DEV_UNSP = 0xFFFFFFF6,DEV_PIPE = 0xFFFFFFF7,DEV_LLA = 0xFFFFFFF8,};
typedef struct _647FE789D073DDA1115A25D9160A600C _LC_subs_t;
struct _Vr2_Astrs {char *__s1;char *__s2;char *__s3;char *__s4;char *__s5;char *__s6;char *__s7;char *__s8;char *__s9;char *__s10;char *__s11;char *__s12;char *__s13;char *__s14;char *__s15;char *__s16;char *__s17;char *__s18;char *__s19;char *__s20;char *__s21;char *__s22;char *__s23;char *__s24;char *__s25;char *__s26;char *__s27;char *__s28;char *__s29;char *__s30;char *__s31;char *__s32;char *__s33;char *__s34;char *__s35;char *__s36;char *__s37;char *__s38;char *__s39;char *__s40;char *__s41;char *__s42;char *__s43;char *__s44;char *__s45;char *__s46;char *__s47;char *__s48;char *__s49;char *__s50;char *__s51;char *__s52;char *__s53;char *__s54;char *__s55;char *__s56;char *__s57;char *__s58;char *__s59;char *__s60;char *__s61;char *__s62;char *__s63;char *__s64;char *__s65;char *__s66;char *__s67;char *__s68;char *__s69;char *__s70;char *__s71;char *__s72;char *__s73;char *__s74;char *__s75;char *__s76;char *__s77;char *__s78;char *__s79;char *__s80;char *__s81;char *__s82;char *__s83;char *__s84;char *__s85;char *__s86;char *__s87;char *__s88;char *__s89;char *__s90;char *__s91;char *__s92;char *__s93;char *__s94;char *__s95;char *__s96;char *__s97;char *__s98;char *__s99;char *__s100;};
struct _Vr2_Bstrs {char *__s101;char *__s102;char *__s103;char *__s104;char *__s105;char *__s106;char *__s107;char *__s108;char *__s109;char *__s110;char *__s111;char *__s112;char *__s113;char *__s114;char *__s115;char *__s116;char *__s117;char *__s118;char *__s119;char *__s120;char *__s121;char *__s122;char *__s123;char *__s124;char *__s125;char *__s126;char *__s127;char *__s128;char *__s129;char *__s130;char *__s131;char *__s132;char *__s133;char *__s134;char *__s135;char *__s136;char *__s137;char *__s138;char *__s139;char *__s140;char *__s141;char *__s142;char *__s143;char *__s144;char *__s145;};
struct _XAxisInfo {int resolution;int min_value;int max_value;};
struct _XkbBounds {short x1;short y1;short x2;short y2;};
enum __si_codes {SI_QUEUE = 0xFFFFFFFE,SI_USER = 0xFFFFFFFF,SI_TIMER = 0x1,SI_ASYNCIO = 0x2,SI_MESGQ = 0x3,};
struct __sigset_t {unsigned int sigset[8];};
typedef struct _db_header_struct _db_header;
typedef struct _587F15487BC7F24AD565F67C2769F95D _iconv_hdr;
struct _lwp_mutex {short mtx_flags;short mtx_cookie;int mtx_waiting;int mtx_lock[4];};
typedef struct __barrier8 *barrier8_t;
struct block_desc {unsigned char density_code;unsigned char blocks[3];unsigned char resv;unsigned char block_len[3];};
struct break_inst {unsigned int bi_i1;};
struct cam_buffer {struct cam_buffer *next_buffer;pquad_type *first_quad;pquad_type *first_initlc;unsigned int filler[5];char buflet[15][32];};
struct cs4215conf {unsigned int control;unsigned int dmastatus;unsigned int gainctl;unsigned int over_range;unsigned int pio;};
typedef struct deactarg deactarg_t;
struct dkdgnreslt {unsigned int d_rslt;unsigned int d_rd1;unsigned int d_rd2;unsigned int fftest;unsigned int phn;unsigned int tblsz;unsigned int devchan;};
typedef char *dm_message;
typedef struct dma_serv dma_serv_t;
typedef struct _A45DC8244913A5DE9E65EAA74CBD4D3A dumparea_t;
struct eirrswitch {void ( *int_action)();unsigned int eiem;void *int_arg;unsigned int io_int;};
struct eisa_iomap {int ( *setup_iomap)();int ( *release_iomap)();};
struct fb_imp_exp {unsigned int imp_index;unsigned int exp_index;};
struct fb_lib_ver {unsigned int timestamp;unsigned int checksum;unsigned int mod_bv;};
typedef unsigned int fsblkcnt_t;
typedef unsigned int fsfilcnt_t;
enum fsh_access {fsa_NONE = 0x0,fsa_R = 0x1,fsa_W = 0x2,fsa_RW = 0x3,};
enum gqr_status {Q_OK = 0x1,Q_NOQUOTA = 0x2,Q_EPERM = 0x3,};
typedef struct _EE292E56C0FD0E3707F186263B097CE2 idy_struct;
typedef struct ioconfig ioconfig_t;
struct ioctl_type {char sc_state;int type;int data[3];};
typedef unsigned char kboolean_t;
typedef struct kd_sched kd_sched_t;
typedef struct kd_setrq kd_setrq_t;
typedef struct kd_swtch kd_swtch_t;
typedef struct lgpg_env lgpg_env_t;
typedef struct _7BEB7D159A7DB2A42EA34A43888FEB71 lnkst_type;
enum lockf_type {L_LOCKF = 0x0,L_READ = 0x1,L_WRITE = 0x2,L_COPEN = 0x3,L_FCNTL = 0x4,};
typedef long long longlong_t;
typedef struct _1102A1E8B20588E5B4B19CB5CB1C4961 lpr0_msg_t;
typedef struct _lwp_cond lwp_cond_t;
typedef struct _lwp_sema lwp_sema_t;
struct mark_parms {int start;};
typedef struct __mem_sema *mem_sema_t;
typedef struct mod_path mod_path_t;
enum mountstat3 {MNT_OK = 0x0,MNT3ERR_PERM = 0x1,MNT3ERR_NOENT = 0x2,MNT3ERR_IO = 0x5,MNT3ERR_ACCES = 0xD,MNT3ERR_NOTDIR = 0x14,MNT3ERR_INVAL = 0x16,MNT3ERR_NAMETOOLONG = 0x3F,MNT3ERR_NOTSUPP = 0x2714,MNT3ERR_SERVERFAULT = 0x2716,};
struct msemaphore {unsigned int msem_lock;unsigned int magic;unsigned int locker;unsigned int wanted;};
typedef struct _92CA70A8DAB41318563B485CCB4742EF mt_req_fmt;
typedef char *netnamestr;
enum nlm4_stats {NLM4_GRANTED = 0x0,NLM4_DENIED = 0x1,NLM4_DENIED_NOLOCKS = 0x2,NLM4_BLOCKED = 0x3,NLM4_DENIED_GRACE_PERIOD = 0x4,NLM4_DEADLCK = 0x5,NLM4_ROFS = 0x6,NLM4_STALE_FH = 0x7,NLM4_FBIG = 0x8,NLM4_FAILED = 0x9,};
struct nlm_notify {char *name;int state;};
typedef unsigned int objectsize;
typedef struct __omp_lock *omp_lock_t;
struct pam_handle;
typedef struct pim_wide pim_wide_t;
struct pty_select {struct pty_select__kthread *pty_selp;short pty_selflag;};
typedef struct _B8D43E9E5B323F7D273EC2E781EDD178 read_reg_t;
typedef struct _C7DCB3DE935305561D7C461D7E7A5D55 reg_access;
typedef struct _BD619B2F7AFF7BA6F06506AA27210664 regmatch_t;
enum reply_stat {MSG_ACCEPTED = 0x0,MSG_DENIED = 0x1,};
struct rex_result {int rlt_stat;char *rlt_message;};
typedef int rpcbs_proc[13];
struct scsi_erase {unsigned int start_lba;unsigned short block_cnt;};
typedef struct _553FAF01ADE3C24D25CFBDA23B6F6D6A selftest_t;
typedef struct _shmControl shmControl;
typedef struct sigevent sigevent_t;
typedef double sigjmp_buf[64];
typedef struct _BDEA2C04F83C6E4F42140EC4EAC59F09 space_type;
typedef int t_scalar_t;
typedef struct __ucontext ucontext_t;
typedef unsigned int uintfast_t;
enum user_eosys {EOSYS_NOTSYSCALL = 0x0,EOSYS_NORMAL = 0x1,EOSYS_INTERRUPTED = 0x2,EOSYS_RESTART = 0x3,EOSYS_NORESTART = 0x4,RESTARTSYS = 0x2,EOSYS_EXEC = 0x6,};
enum user_sstep {ULINK = 0x1F,USSTEP = 0x20,UPCQM = 0x40,UBL = 0x80,UBE = 0x100,};
typedef int  vfs_root_t(struct vfs *, struct vnode **, char *);
typedef int  vfs_sync_t(struct vfs *, int);
typedef int  vfs_thaw_t(struct vfs *);
typedef int  vfs_vget_t(struct vfs *, struct vnode **, struct fid *);
typedef struct whpde2_0 whpde2_0_t;
typedef struct _1ACC273C8335AF277D974713D57A5DCB write_type;
typedef struct _48A6A373861130075F8524D5C353FEE6 xColorItem;
typedef struct _F19CD3A20937CEF33F3E2EF5E2D906EF xConnSetup;
typedef struct _D4B7CCBA990A156E447947BB060E0786 xCopyGCReq;
typedef struct _DB64A8459715AF3CEFE23597C08B5967 xDeviceCtl;
typedef struct _9B4395DE66E8574EC0897BBFC5E468E1 xHostEntry;
typedef struct _xRectangle xRectangle;
typedef struct _83A9560127C5CA1AF601DD4E7C3B278F xTimecoord;
typedef struct _D14CA9F2C40E9D75D49C7FD5AB893FCE xieFloMath;
typedef struct _E89CAE49E77FFA19927DB3E1B8EA1AFC xieTypTile;
typedef struct _xkbBell xkbBellReq;
enum ypresptype {YPRESP_VAL = 0x1,YPRESP_KEY_VAL = 0x2,YPRESP_MAP_PARMS = 0x3,};
typedef struct _CodeRangeRec *CodeRange;
typedef unsigned short Dimension;
typedef struct _2CACF028C2AAD0539EADF3383FC56D98 EdgeTable;
typedef struct _9E389EF8DB18C75445DC45CE7C2FFB9B Elf32_Dyn;
typedef unsigned int Elf32_Off;
typedef struct _D95F8D3D3A203DD01E47E35C972F2798 Elf32_Rel;
typedef struct _27CF53CBC4962E834EEC31FA11492A32 Elf32_Sym;
typedef struct _8E3F17DF06268256B33C950219C36638 Elf64_Dyn;
typedef unsigned long long Elf64_Off;
typedef struct _A313ED2DE25BE046A874D492CFBD731F Elf64_Rel;
typedef struct _7963ED2253978A4E491ADF870F9A304B Elf64_Sym;
typedef struct _0E247DB22AD8AF66BC5F1E9B22EF7600 Elf_Arhdr;
typedef struct _2216C948A4897CE5697307886BBC772A Elf_Arsym;
typedef unsigned int EventMask;
typedef struct _1073DFC4CB91CB67014BB0410F5A46CA Ext_mib_t;
typedef struct _FonScope *FontScope;
typedef struct _InputDataRec *InputData;
typedef struct _4EECDD18DE7D4606E508621736DA89A8 LABELTYPE;
enum MACRO_ACF {ACF_ETHER = 0x1,};
enum MACRO_ACL {ACL_FILEGROUP = -26,ACL_ANYUSER = -25,};
enum MACRO_ACT {ACT_8023 = 0x1,ACT_8024 = 0x2,ACT_FDDI = 0x3,ACT_8025 = 0x4,ACT_ATR = 0x5,ACT_FC = 0x6,};
enum MACRO_ADI {ADI = 0x4,};
enum MACRO_ALL {ALL_OK = 0,};
enum MACRO_ALT {ALT_ALL_MINORS = -1,};
enum MACRO_AMG {AMG_DM_PAPER_OUT = -2,};
enum MACRO_ANY {ANY_CHILD = 0,FIRST_BUTTON = 1,};
enum MACRO_API {API_TR_ENTRY_EXIT = 0x1,API_TR_INPUT = 0x2,API_TR_OUTPUT = 0x4,API_TR_INTERNAL = 0x10,API_TR_ERROR = 0x20,};
enum MACRO_ASP {ASP_INT_CONTROLLER_OFFSET = 0x2F000,ASP_INT_LINES = 0x20,};
enum MACRO_ATF {ATF_INUSE = 0x1,ATF_COM = 0x2,ATF_PERM = 0x4,ATF_PUBL = 0x8,ATF_USETRAILERS = 0x10,ATF_LOCAL = 0x20,};
enum MACRO_ATT {ATT_ARP = 0,ATT_ETHERXT = 3,};
enum MACRO_AUD {AUD_TOK_INT = 1,AUD_TOK_ULONG = 2,AUD_TOK_LONG = 3,AUD_TOK_STR = 4,AUD_TOK_PINT = 5,AUD_TOK_INTARR = 6,AUD_TOK_SOCKADDR = 7,AUD_TOK_PATH = 8,AUD_TOK_FD = 9,AUD_TOK_TIMEVAL = 10,AUD_TOK_TIMEZONE = 11,AUD_TOK_PCHAR = 12,AUD_TOK_PLONG = 13,AUD_TOK_ACL = 14,AUD_TOK_FDPAIR = 15,AUD_TOK_FATTR = 16,AUD_TOK_STRARR = 17,AUD_TOK_TIMESPEC = 18,AUD_TOK_SCH_PARM = 19,AUD_TOK_SEMBUF = 20,AUD_TOK_RLIMIT = 21,AUD_TOK_SYSV_ACL = 22,MAX_AUD_DATA = 60,MAX_AUD_TEXT = 32768,};
enum MACRO_AYT {AYT = 246,};
enum MACRO_BAR {BAR_SPACE_INDICATOR = 0x1,BAR_MEM_SPACE = 0x0,};
enum MACRO_BI1 {BI1_STOP = 0,BI1_RDCHAR = 1,BI1_WRTCHAR = 2,BI1_SYSCALL = 3,BI1_AZURE = 4,BI1_ICS = 5,BI1_ICA = 6,BI1_AC_START = 7,BI1_AC_STOP = 8,BI1_PF_RDBSTOP = 9,BI1_STEP_BRK = 10,BI1_DLKM_BRK = 11,};
enum MACRO_BI2 {BI2_SYSCALL_READ = 0,BI2_SYSCALL_WRITE = 1,BI2_SYSCALL_CLOSE = 2,BI2_SYSCALL_CREAT = 3,BI2_SYSCALL_OPEN = 4,BI2_SYSCALL_LSEEK = 5,BI2_SYSCALL_CHDIR = 6,BI2_SYSCALL_CHMOD = 7,BI2_SYSCALL_DUP = 8,BI2_SYSCALL_LINK = 9,BI2_SYSCALL_UNLINK = 10,BI2_SYSCALL_ACCESS = 11,BI2_SYSCALL_TIME = 12,BI2_SYSCALL_UMASK = 13,BI2_SYSCALL_HALT = 14,};
enum MACRO_BLK {BLK_EOF = 0x40,BLK_ERRORS = 0x20,BLK_RESTART = 0x10,BLK_BYTECOUNT = 0x2,};
enum MACRO_BS0 {BS0 = 0,BS1 = 8192,VTDLY = 16384,};
enum MACRO_BTF {BTF_VALID = 0x1,BTF_OVERRIDE = 0x2,BTF_NO_DEVICE = 0x4,BTF_DEFAULT = 0x8,};
enum MACRO_BUF {BUF_ALIGN_ERROR = -3,};
enum MACRO_BUS {BUS_UNKNOWN = 0,};
enum MACRO_CAM {CAM_SEND_ERROR = -20,};
enum MACRO_CCR {CCR = 10,};
enum MACRO_CFG {CFG_FREEFORM = 0x40,};
enum MACRO_CFS {CFS_GOOD_RETURN = 0,CFS_CAN_NOT_OPEN_FILE = 1,CFS_NO_FILE_CONTROL_ENTRY = 2,CFS_CAN_NOT_CHG_MODE = 3,CFS_CAN_NOT_CHG_OWNER_GROUP = 4,CFS_CAN_NOT_CHG_ACL = 5,};
enum MACRO_CIC {CIC = 30,};
enum MACRO_CIO {CIO_ETHERNET = 49,CIO_IEEE802 = 50,};
enum MACRO_CL0 {CL0 = 0x1,PEND_FF = 0x2000,};
enum MACRO_CL1 {CL1 = 0x2,};
enum MACRO_CL2 {CL2 = 0x4,};
enum MACRO_CL3 {CL3 = 0x100,};
enum MACRO_CL4 {CL4 = 0x200,};
enum MACRO_CL5 {CL5 = 0x400,};
enum MACRO_CLD {CLD_EXITED = 1,CLD_KILLED = 2,CLD_DUMPED = 3,CLD_TRAPPED = 4,CLD_STOPPED = 5,CLD_CONTINUED = 6,};
enum MACRO_CLF {CLF = 0x10,};
enum MACRO_CLK {CLK_TCK = 100,};
enum MACRO_CMD {CMD_ENC_CLEAR = 0,CMD_ENC_MIC = 1,CMD_ENC_ENC = 2,};
enum MACRO_CMP {CMP_DDS_HP1 = 0x20,CMP_3480DFLT = 0x1,};
enum MACRO_CNX {CNX_MACH_HP700 = 0,CNX_MACH_SPP1000 = 1,CNX_MACH_SPP1200 = 2,CNX_MACH_SPP1600 = 4,};
enum MACRO_COL {COL_ORDER = 0,_M_D_RECENT = 4,_M_D_OLD = 5,BYTES_CHAR = 49,DIRECTION = 50,ALT_DIGIT = 51,ALT_PUNCT = 52,YEAR_UNIT = 55,MON_UNIT = 56,DAY_UNIT = 57,HOUR_UNIT = 58,MIN_UNIT = 59,SEC_UNIT = 60,ERA_FMT = 61,LANGNAME = 63,REVISION = 64,LANGID = 65,CODE_SCHEME = 66,CSWIDTH = 67,CONTEXT = 68,ESC_CHAR = 69,COMM_CHAR = 70,CHARMAP = 71,__UNUSED_1 = 79,_NL_NUM_ITEMS = 80,};
enum MACRO_CPD {CPD_IOCTL = 89,};
enum MACRO_CPR {CPR_DM_NOT_ONLINE = -1,};
enum MACRO_CPS {CPS_SAME_NODE = -1,};
enum MACRO_CPU {CPU_PA_RISC1_0 = 0x20B,CPU_PA_RISC1_1 = 0x210,CPU_PA_RISC1_2 = 0x211,CPU_PA_RISC2_0 = 0x214,CPU_PA_RISC_MAX = 0x2FF,};
enum MACRO_CR0 {CR0 = 0,CR1 = 512,CR2 = 1024,CR3 = 1536,TABDLY = 6144,};
enum MACRO_CR8 {CR8 = 8,CR9 = 9,CR10 = 10,CR11 = 11,CR12 = 12,CR13 = 13,CR14 = 14,CR15 = 15,CR16 = 16,CR17 = 17,CR18 = 18,CR19 = 19,CR20 = 20,CR21 = 21,CR22 = 22,CR23 = 23,CR24 = 24,CR25 = 25,CR26 = 26,CR27 = 27,CR28 = 28,CR29 = 29,CR30 = 30,CR31 = 31,};
enum MACRO_CRC {CRC_NONE = 0,CRC_CHECK = 1,CRC_WRITE = 2,};
enum MACRO_CRT {CRT_MAX_REGIONS = 6,CRT_NAME_LENGTH = 32,LOCKED_PAGE_SIZE = 2048,};
enum MACRO_CS5 {CS5 = 0,CS6 = 32,CS7 = 64,CS8 = 96,CSTOPB = 128,HUPCL = 2048,};
enum MACRO_CTR {CTR_EN = 33554432,};
enum MACRO_CWX {CWX = 1,CWY = 2,CWWidth = 4,CWHeight = 8,CWBorderWidth = 16,CWSibling = 32,CWStackMode = 64,};
enum MACRO_DAC {DAC_ASIO0_RCV = 0,DAC_ASIO0_TX = 0,DAC_ASIO0_DLSB = 0,};
enum MACRO_DAM {DAM_REQ_OK = 0,READ_EOI_EVEN = 1,READ_EOI_ODD = 2,READ_COUNT_EVEN = 3,READ_COUNT_ODD = 4,READ_LF_EVEN = 5,READ_LF_ODD = 6,READ_MSA_EVEN = 7,READ_MSA_ODD = 8,READ_CEND = 9,DA_NO_DEVICE_IDY = 10,FIFO_EOI_COUNT_EVEN = 11,FIFO_EOI_COUNT_ODD = 12,FIFO_EOI_LF_EVEN = 13,FIFO_EOI_LF_ODD = 14,FIFO_EOI_MATCH_EVEN = 15,FIFO_EOI_MATCH_ODD = 16,FIFO_MATCH_EVEN = 17,FIFO_MATCH_ODD = 18,DIAG_SHORT_READ = 62,DAM_NO_SW_RESOURCES = -5,};
enum MACRO_DAP {DAP_DOWNLOAD_ERR = -26,};
enum MACRO_DAY {DAY = 86400,};
enum MACRO_DBD {DBD_NONE = 0,DBD_FSTORE = 1,DBD_BSTORE = 2,DBD_DZERO = 3,DBD_DFILL = 4,DBD_HOLE = 5,DBD_DEBUG_LUSERREMAP = 268435206,DBD_DINVAL = 536870911,};
enum MACRO_DBE {DBE_TYPE = 0,SBE_TYPE = 1,};
enum MACRO_DBL {DBL_DIG = 15,};
enum MACRO_DBM {DBM_INSERT = 0,DBM_REPLACE = 1,};
enum MACRO_DCR {DCR = 0x1,DTE = 0x2,PER = 0x4,EEC = 0x8,RC = 0x10,TB = 0x20,ARRE = 0x40,AWRE = 0x80,};
enum MACRO_DEN {DEN_BEST = 0xFFFFFFFF,DEN_DFLT = 0x0,};
enum MACRO_DES {DES_MAXDATA = 8192,DES_DIRMASK = 1,DES_ENCRYPT = 0,};
enum MACRO_DEV {DEV_BSIZE = 1024,DEV_BSHIFT = 10,};
enum MACRO_DH1 {DH1_EOC = 0,DH1_RESET_CMD = 1,DH1_LOCK_CMD = 2,DH1_UNLOCK_CMD = 3,DH1_IDENTIFY_CMD = 4,DH1_READ_REG_CMD = 5,DH1_WRITE_REG_CMD = 6,DH1_HPIB_INPUT_CMD = 7,DH1_HPIB_OUTPUT_CMD = 8,DH1_LOOPBACK_CMD = 9,DH1_STATUS_CMD = 10,DH1_SELFTEST_CMD = 11,};
enum MACRO_DIL {DIL_LOCK = 1,};
enum MACRO_DIN {DIN_CLK_SIZE = 28,DIN_CLK_PFLG_BUSY_TO_READY = 0,};
enum MACRO_DIO {DIO_BUS = 0x3,SGC_BUS = 0x5,GSC_BUS = 0x7,};
enum MACRO_DIR {DIR = 0x40,};
enum MACRO_DLD {DLD_ERROR = -13,};
enum MACRO_DLT {DLT_CLEANING = 0x81,DLT_TAPE_I = 0x82,};
enum MACRO_DMA {DMA_ACTIVE = 1,DMA_UNACTIVE = 2,DMA_RESERVE = 3,DMA_UNRESERVE = 4,DMA_LOCK = 5,DMA_UNLOCK = 6,};
enum MACRO_DRV {DRV_PSW = 0x4000F,};
enum MACRO_DST {DST_NONE = 0,DST_USA = 1,DST_AUST = 2,DST_WET = 3,DST_MET = 4,DST_EET = 5,};
enum MACRO_DVC {DVC_LEN = 30,INTRPT = -1,};
enum MACRO_DXK {DXK_circumflex_accent = 0x1000FE5E,};
enum MACRO_ECB {ECB_DEV_NPORT_CHANGED = 2001,ECB_TOPO_SWITCH_DELAY = 2002,ECB_FABRIC_CHANGED = 2003,ECB_HOST_NPORT_CHANGED = 2004,ECB_LINK_WAS_DOWN = 2005,ECB_BH_RESET_RECVD = 2006,ECB_CANT_INVALIDATE_SEST = 2007,ECB_PRLI_RESPONSE_FRAME = 2008,ECB_ONLINE_WO_OFFLINE = 2009,ECB_SWITCHING_TOPOLOGY = 2010,ECB_WARN_SEST_MAP_FAIL = 2011,ECB_WARN_SEST_MAP_CONTIG = 2012,ECB_WARN_SEST_MAP_ALIGN = 2013,ECB_WARN_SEST_MIN_ALLOC = 2014,ECB_WARN_SEST_DEPLETED = 2015,ECB_ERR_SEST_ALLOC = 2016,ECB_WARN_NA_OXID_DEPLETED = 2017,ECB_OPEN_FAILED = 2018,ECB_CLOSE_FAILED = 2019,ECB_UNKNOWN_FRAME_RECVD = 2020,ECB_REM_NPORT_AUTH_FAILED = 2021,ECB_3RD_PARTY_PROC_LOGOUT = 2022,ECB_RECVD_LS_RJT_FOR_RRQ = 2023,ECB_ABTS_FAILED = 2024,ECB_LOGGING_OUT = 2025,ECD_RSTCLR_RETRY = 3002,ECD_IN_DATA_OVERFLOW = -3001,};
enum MACRO_ECC {ECC = 0,SSE = 1,BSE = 2,CONT = 3,};
enum MACRO_ECM {ECM_SCSI_HANDSHAKE_TIMEOUT = 0x2,ECM_PARITY_ERROR_ITLQ = 0x3,ECM_SYNCHRONOUS_TRANSFER_ERROR = 0x4,ECM_BUS_FREE_ITLQ = 0x5,ECM_RESOURCE_BUSY = 0x6,ECM_BUS_RESET_COMP = 0x7,ECM_DEV_RESET_COMP = 0x8,ECM_RESTORE_POINTERS_ATTEMPT_ABORTED = 0x9,ECM_UNSUPPORTED_PROTOCOL = 0xA,ECM_INQUIRY_FAILED = 0x10,ECM_INV_TASK_MGT_CODE = 0x12,ECM_READ_INCOMPLETE = 0x13,ECM_RESIDUE_OVER = 0x14,ECM_WRITE_OVERFLOW = 0x15,ECM_MISSING_SENSE_DATA = 0x16,ECM_INVALID_REQ = 0x17,ECM_REQ_ABORTED = 0x18,ECM_UNKNOWN_STATUS = 0x19,ECM_DEV_RESET_FAILURE = 0x1A,ECM_BUS_RESET_FAILURE = 0x1B,ECM_BDR_TASK_MGT_FAIL = 0x1C,ECM_BDR_ABORTED = 0x1D,ECM_BUS_TASK_MGT_FAIL = 0x1E,ECM_BUS_RESET_ABORTED = 0x1F,ECM_TOO_MANY_BYTES = 0xF1,ECA_OPT_PARM_NOT_INIT = 0x1389,ECA_IN_DATA_OVERFLOW = 0xFFFFEC77,};
enum MACRO_EFA {EFA_PARISC_1_0 = 0x20B,EFA_PARISC_1_1 = 0x210,EFA_PARISC_2_0 = 0x214,PF_PARISC_SBP = 0x8000000,PT_PARISC_ARCHEXT = 0x70000000,PT_PARISC_UNWIND = 0x70000001,PT_PARISC_WEAKORDER = 0x70000002,};
enum MACRO_ELF {ELF_F_DIRTY = 0x1,ELF_F_LAYOUT = 0x4,};
enum MACRO_END {END_OF_CHAIN = 1,SHZM_PBUS_INT = 536870912,};
enum MACRO_EOC {EOC = 0,CAM_BUF_SIZE = 512,};
enum MACRO_EOI {EOI = 0,};
enum MACRO_EOM {EOM = 0x4,};
enum MACRO_EOR {EOR = 239,SYNCH = 242,};
enum MACRO_ERR {ERR = -1,};
enum MACRO_EUC {EUC_WSET = 536888577,EUC_WGET = 536888578,EUC_IXLON = 536888579,EUC_IXLOFF = 536888580,EUC_OXLON = 536888581,EUC_OXLOFF = 536888582,EUC_MSAVE = 536888583,EUC_MREST = 536888584,EUC_SET_HP15 = 536888586,EUC_GET_HP15 = 536888587,EUC_SET_UTF8 = 536888588,EUC_GET_UTF8 = 536888589,};
enum MACRO_FCP {FCP_LOG_DMESG = 0x80000000,};
enum MACRO_FDC {FDC_SR3_US_MASK = 0x3,FDC_SR3_HS = 0x4,FDC_SR3_T0 = 0x10,FDC_SR3_RY = 0x20,FDC_SR3_WP = 0x40,};
enum MACRO_FF0 {FF0 = 0,FF1 = 32768,};
enum MACRO_FLT {FLT_DIG = 6,};
enum MACRO_FNM {FNM_PATHNAME = 0x1,FNM_PERIOD = 0x2,_FNM_UAE = 0x4,FNM_NOESCAPE = 0x8,};
enum MACRO_FP0 {FP0 = 0,FP1 = 1,FP2 = 2,FP3 = 3,FP4 = 4,FP5 = 5,FP6 = 6,FP7 = 7,FP8 = 8,FP9 = 9,FP10 = 10,FP11 = 11,FP12 = 12,FP13 = 13,FP14 = 14,FP15 = 15,};
enum MACRO_FPE {FPE_UNKNOWN = 0,FPE_FLTOVF = 12,FPE_COND = 13,FPE_ASSISTX = 14,FPE_ASSISTEM = 22,};
enum MACRO_FPU {FPU_FR0 = 0,FPU_FR1 = 8,FPU_FR2 = 16,FPU_FR3 = 24,FPU_FR4 = 32,FPU_FR5 = 40,FPU_FR6 = 48,FPU_FR7 = 56,FPU_FR8 = 64,FPU_FR9 = 72,FPU_FR10 = 80,FPU_FR11 = 88,FPU_FR12 = 96,FPU_FR13 = 104,FPU_FR14 = 112,FPU_FR15 = 120,FPU_FR16 = 128,FPU_FR17 = 136,FPU_FR18 = 144,FPU_FR19 = 152,FPU_FR20 = 160,FPU_FR21 = 168,FPU_FR22 = 176,FPU_FR23 = 184,FPU_FR24 = 192,FPU_FR25 = 200,FPU_FR26 = 208,FPU_FR27 = 216,FPU_FR28 = 224,FPU_FR29 = 232,FPU_FR30 = 240,FPU_FR31 = 248,};
enum MACRO_FR0 {FR0 = 0,FR1 = 1,FR2 = 2,FR3 = 3,FR4 = 4,FR5 = 5,FR6 = 6,FR7 = 7,FR8 = 8,FR9 = 9,FR10 = 10,FR11 = 11,FR12 = 12,FR13 = 13,FR14 = 14,FR15 = 15,};
enum MACRO_FSF {FSF_LFN = 0x1,FSF_B1 = 0x2,};
enum MACRO_FTW {FTW_F = 0,FTW_D = 1,FTW_DNR = 2,FTW_NS = 3,FTW_SLN = 6,};
enum MACRO_GEN {GEN_ONLINE = 0,GEN_READY = 1,GEN_DEVICE_BUSY = 2,GEN_TIMEOUT = 3,GEN_CMD_REJECT = 4,GEN_DEVICE_END = 5,GEN_MEDIA_END = 6,GEN_MEDIA_START = 7,GEN_FILE_MARK = 8,GEN_IRREC_DATA_ERR = 9,GEN_REC_DATA_ERR = 10,GEN_HW_FAILURE = 11,GEN_POWERFAIL = 12,GEN_SPECIAL_END = 13,GEN_WRITE_ENABLED = 14,};
enum MACRO_GET {GET_SCANCODE = 0x0,SCANCODE_1 = 0x1,SCANCODE_2 = 0x2,SCANCODE_3 = 0x3,USB_HID_SCAN_CODE = 0x10,};
enum MACRO_GMT {GMT_EOF_MASK = 0x80000000,GMT_BOT_MASK = 0x40000000,GMT_EOT_MASK = 0x20000000,GMT_SM_MASK = 0x10000000,GMT_EOD_MASK = 0x8000000,GMT_WR_PROT_MASK = 0x4000000,GMT_ONLINE_MASK = 0x1000000,GMT_COMPRESS_MASK = 0x100000,GMT_DR_OPEN_MASK = 0x40000,GMT_IM_REP_EN_MASK = 0x10000,GMT_DENSITY_MASK = 0xFF00,GMT_DENSITY_SHIFT = 0x8,};
enum MACRO_GR0 {GR0 = 0,GR1 = 1,GR2 = 2,GR3 = 3,GR4 = 4,GR5 = 5,GR6 = 6,GR7 = 7,GR8 = 8,GR9 = 9,GR10 = 10,GR11 = 11,GR12 = 12,GR13 = 13,GR14 = 14,GR15 = 15,GR16 = 16,GR17 = 17,GR18 = 18,GR19 = 19,GR20 = 20,GR21 = 21,GR22 = 22,GR23 = 23,GR24 = 24,GR25 = 25,GR26 = 26,GR27 = 27,GR28 = 28,GR29 = 29,GR30 = 30,GR31 = 31,};
enum MACRO_GRP {GRP_COMDAT = 0x1,};
enum MACRO_GTL {GTL = 0x1,SDC = 0x4,PPC = 0x85,};
enum MACRO_GVA {GVA_OFFSET_BITS = 10,GVA_OFFSET_BITS_MASK = 1023,};
enum MACRO_HAS {HAS_FUNCTION_ENTRY = 0x1,HAS_MEMORY_ENTRY = 0x2,HAS_IRQ_ENTRY = 0x4,HAS_DMA_ENTRY = 0x8,HAS_PORT_ENTRY = 0x10,HAS_PORT_INIT = 0x20,};
enum MACRO_HDR {HDR_OUT_BIT = 0x40000000,};
enum MACRO_HDW {HDW_DEAD = 0x20,};
enum MACRO_HID {HID_ENABLE = 0x20005004,HID_DISABLE = 0x20005005,HID_STREAMMODE = 0x20005006,};
enum MACRO_HIL {HIL_GENERAL_INT_MASK = 0x2,HIL_HIGH_INT_LINE = 0x1D,};
enum MACRO_HP2 {HP_VENDOR_RELEASE_NUMBER = 600000,};
enum MACRO_HTA {HTA = 25,};
enum MACRO_HW2 {HW2_0_IOSPACE_POS = 10,MAX_PDMAP_ARRAY_SIZE = 16,};
enum MACRO_IAC {IAC = 255,};
enum MACRO_IC2 {IC_CONNECTED = 1,FABLICATED = 2,NEED_SYNC_REPLY = 4,};
enum MACRO_ICA {ICA_INITOFF = 0,ICA_INITON = 1,ICA_ISON = 2,ICA_ISOFF = 3,ICA_INITFAIL = 4,HISTORYLENGTH = 8192,};
enum MACRO_ICC {ICC_LARGEUIDS = 2,};
enum MACRO_ICE {ICE_Error = 0,ICE_ByteOrder = 1,ICE_ConnectionSetup = 2,ICE_AuthRequired = 3,ICE_AuthReply = 4,ICE_AuthNextPhase = 5,ICE_ConnectionReply = 6,ICE_ProtocolSetup = 7,ICE_ProtocolReply = 8,ICE_Ping = 9,ICE_PingReply = 10,ICE_WantToClose = 11,ICE_NoClose = 12,};
enum MACRO_IFF {IFF_UP = 0x1,IFF_BROADCAST = 0x2,IFF_DEBUG = 0x4,IFF_LOOPBACK = 0x8,IFF_POINTOPOINT = 0x10,IFF_NOTRAILERS = 0x20,IFF_RUNNING = 0x40,IFF_NOARP = 0x80,IFF_PROMISC = 0x100,IFF_ALLMULTI = 0x200,IFF_LOCALSUBNETS = 0x400,IFF_MULTICAST = 0x800,IFF_CKO = 0x1000,IFF_NOACC = 0x2000,IFF_OACTIVE = 0x4000,IFF_NOSR8025 = 0x8000,IFF_CKO_ETC = 0x10000,IFF_AR_SR8025 = 0x20000,IFF_ALT_SR8025 = 0x40000,IFF_MULTI_BCAST = 0x80000,IFF_UNNUMBERED = 0x100000,IFF_LFP = 0x200000,IFF_LNP = 0x400000,};
enum MACRO_IIC {IIC_BIT = 32,SECONDARY_LOSS = 65536,};
enum MACRO_IIR {IIR = 19,};
enum MACRO_ILI {ILI = 0x2,S_CURRENT_ERROR = 0x70,S_DEFERRED_ERROR = 0x71,};
enum MACRO_ILL {ILL_UNKNOWN = 0,ILL_ILLOPC = 8,ILL_ILLBRKINST = 9,ILL_PRVOPC = 10,ILL_PRVREG = 11,};
enum MACRO_INT {INT_LEAST8_MIN = -128,};
enum MACRO_IOC {IOC_ILP32 = 1,IOC_LP64 = 2,};
enum MACRO_IOM {IOM_WAITOK = 1,IOM_NOWAIT = 2,};
enum MACRO_IOR {IOR = 21,};
enum MACRO_IOV {IOV_MAX = 16,STREAM_MAX = 60,};
enum MACRO_IPC {IPC_CREAT = 0x200,IPC_EXCL = 0x400,IPC_NOWAIT = 0x800,IPC_SHARE32 = 0x1000,};
enum MACRO_ISA {ISA_CHANNEL_MASK = 0xF,};
enum MACRO_ISR {ISR = 20,};
enum MACRO_ITE {ITE_ON = 0,ITE_OFF = 1,};
enum MACRO_IVA {IVA = 14,};
enum MACRO_KBD {KBD_IDCODE_MASK = 0x7,KBD_IDTYPE_ITF = 0x0,};
enum MACRO_KEY {KEY_BREAK = 0x101,KEY_DOWN = 0x102,KEY_UP = 0x103,KEY_LEFT = 0x104,KEY_RIGHT = 0x105,KEY_HOME = 0x106,KEY_BACKSPACE = 0x107,KEY_F0 = 0x108,};
enum MACRO_KLM {KLM_PORT = 4045,KLM_PROG = 100020,};
enum MACRO_KNC {KNC_STRSIZE = 128,};
enum MACRO_LAG {LAG_BASE = 0x20,TAG_BASE = 0x40,SCG_BASE = 0x60,};
enum MACRO_LAN {LAN_INT_LINE = 23,LAN_INT_MASK = 256,};
enum MACRO_LDM {LDM_META_TAG = -1,};
enum MACRO_LEN {LEN_ERA_FMTS = 40,};
enum MACRO_LIM {LIM_NORAISE = 0,LIM_CPU = 1,LIM_FSIZE = 2,LIM_DATA = 3,LIM_STACK = 4,LIM_CORE = 5,LIM_MAXRSS = 6,};
enum MACRO_LIV {LIV_NONE = 0,LIV_CURRENT = 1,};
enum MACRO_LLA {LLA_SIGNAL_MASK = 65,LLA_NO_SIGNAL = 0,};
enum MACRO_LLO {LLO = 0x91,};
enum MACRO_LOG {LOG_CONTROL = 58,LOG_DEST_ADDR = 59,LOG_TYPE_FIELD = 60,LOG_READ_TIMEOUT = 61,LOG_READ_CACHE = 62,ENABLE_PROMISCUOUS = 63,DISABLE_PROMISCUOUS = 64,CHANGE_NODE_RAM_ADDR = 66,LOG_RAW_802MAC = 67,LOG_RIF_ADDR = 68,SET_TRN_FUNC_ADDR_MASK = 69,CLEAR_TRN_FUNC_ADDR_MASK = 70,};
enum MACRO_LWP {LWP_OMASK = 0x1,LWP_OWEUPC = 0x2,LWP_SEL = 0x4,LWP_FIRSTLWP = 0x8,LWP_DEACT = 0x10,LWP_DEACTSELF = 0x20,LWP_FAULTING = 0x40,LWP_ANYPAGE = 0x80,LWP_LPT = 0x100,LWP_RUNPROC = 0x200,LWP_MPLOCK = 0x400,LWP_MP_STOP = 0x800,LWP_MP_SEMA_BLOCK = 0x1000,LWP_MP_SEMA_NOSWAP = 0x2000,LWP_SIGABL = 0x4000,LWP_ACTIVE = 0x8000,LWP_HALTED = 0x10000,LWP_AST_NULL = 0x20000,LWP_AST_HALT = 0x40000,LWP_AST_TERMINATE = 0x80000,};
enum MACRO_MAP {MAP_EXCLUSIVE = 0x1,MAP_NOPAGE = 0x2,MAP_STATIC_PREDICT = 0x4,MAP_FLIPPER_DISABLE = 0x8,};
enum MACRO_MAX {MAX_CANON = 512,};
enum MACRO_MCL {MCL_NORMAL = 1,MCL_NFS = 2,MCL_DUX = 3,MCL_STREAMS = 4,MCL_OPS = 5,MCL_EXT = 6,};
enum MACRO_MDU {MDU_QUOTA = 0x1,MDU_DELAY = 0x2,MDU_BEHIND = 0x4,MDU_FSASYNC = 0x8,MDU_NO_FSASYNC = 0x10,};
enum MACRO_MEM {MEM_RAM = 0x1,MEM_CACHED = 0x2,MEM_TYPE_MASK = 0x18,};
enum MACRO_MGR {MGR_CODE_RESIDENT = 0,MGR_DATA_RESIDENT = 1,MGR_POOL_RESIDENT = 2,MGR_ICS_EXECUTABLE = 3,MGR_PROC_EXECUTABLE = 4,MGR_PROBE = 5,MGR_DYNAMIC_DS = 6,MGR_RECONFIG = 7,};
enum MACRO_MIB {MIB_ipMAXCTR = 19,ID_ipAddrNumEnt = 263169,ID_ipAddrTable = 263170,ID_ipAddrEntry = 263171,ID_ipRouteNumEnt = 263172,ID_ipRouteTable = 263173,ID_ipRouteEntry = 263174,ID_ipNetToMediaTableNum = 263175,ID_ipNetToMediaTable = 263176,ID_ipNetToMediaTableEnt = 263177,ID_icmp = 327680,ID_icmpInMsgs = 327681,ID_icmpInErrors = 327682,ID_icmpInDestUnreachs = 327683,ID_icmpInTimeExcds = 327684,ID_icmpInParmProbs = 327685,ID_icmpInSrcQuenchs = 327686,ID_icmpInRedirects = 327687,ID_icmpInEchos = 327688,ID_icmpInEchoReps = 327689,ID_icmpInTimestamps = 327690,ID_icmpInTimestampReps = 327691,ID_icmpInAddrMasks = 327692,ID_icmpInAddrMaskReps = 327693,ID_icmpOutMsgs = 327694,ID_icmpOutErrors = 327695,ID_icmpOutDestUnreachs = 327696,ID_icmpOutTimeExcds = 327697,ID_icmpOutParmProbs = 327698,ID_icmpOutSrcQuenchs = 327699,ID_icmpOutRedirects = 327700,ID_icmpOutEchos = 327701,ID_icmpOutEchoReps = 327702,ID_icmpOutTimestamps = 327703,ID_icmpOutTimestampReps = 327704,ID_icmpOutAddrMasks = 327705,ID_icmpOutAddrMaskReps = 327706,};
enum MACRO_MIN {MIN_IEEE8022_HLEN = 3,SNAP_802_2_HLEN = 8,IEEE_RAW8023_HLEN = 14,};
enum MACRO_MIR {MIR_UNCONFIG = 0,MIR_OFFLINE = 1,MIR_REIMAGE = 2,MIR_ONLINE = 3,};
enum MACRO_MOD {MOD_NAME_SIZE = 14,LC_NAME_SIZE = 45,};
enum MACRO_MPC {MPC_SPUNOCHANGE = -7,MPC_SPUFLOAT = -6,};
enum MACRO_MRI {MRI = 0x8,MCTS = 0x100000,};
enum MACRO_MRT {MRT_INIT = 100,MRT_DONE = 101,MRT_ADD_VIF = 102,MRT_DEL_VIF = 103,MRT_ADD_MFC = 104,MRT_DEL_MFC = 105,MRT_VERSION = 106,MRT_ASSERT = 107,};
enum MACRO_MSG {MSG_OOB = 0x1,MSG_PEEK = 0x2,MSG_DONTROUTE = 0x4,MSG_MAXIOVLEN = 0x10,};
enum MACRO_MWM {MWM_HINTS_FUNCTIONS = 1,MWM_HINTS_DECORATIONS = 2,MWM_HINTS_INPUT_MODE = 4,MWM_HINTS_STATUS = 8,};
enum MACRO_NET {NET_TRACE = 0,NET_LOG = 1,QUE_FULL = 2,};
enum MACRO_NEW {NEW_LINE = 10,CARRIAGE_RETURN = 13,BLANK = 32,DASH = 45,CPR_BLOCKSIZE = 992,};
enum MACRO_NFF {NFF = 10,};
enum MACRO_NFS {NFS_PROGRAM = 100003,};
enum MACRO_NIL {NIL = 0,};
enum MACRO_NIS {NIS_MAXSTRINGLEN = 255,NIS_MAXNAMELEN = 1024,};
enum MACRO_NL0 {NL0 = 0,NL1 = 256,CRDLY = 1536,};
enum MACRO_NL2 {NL2 = 0x200,NL3 = 0x300,};
enum MACRO_NLM {NLM_PROG = 100021,};
enum MACRO_NMV {NMV_COLDSTART = 0,NMV_WARMSTART = 1,NMV_LINKDOWN = 2,NMV_LINKUP = 3,NMV_AUTHENFAIL = 4,NMV_EGPNEIGHLOSS = 5,NMV_DUPLINKADDRS = 1025,};
enum MACRO_NNA {NNA_MASK = 0xF0000000,};
enum MACRO_NO2 {NO_IP = 1,NO_CONNECT = 2,NO_XSERVER = 3,NO_PERMISSION = 4,OUT_OF_MEM = 101,};
enum MACRO_NON {NON = 1,CONS = 2,LV = 3,FV1 = 4,FV2 = 5,FV3 = 6,BV1 = 7,BV2 = 8,BD = 9,TONE = 10,AD1 = 11,AD2 = 12,AD3 = 13,AV1 = 14,AV2 = 15,AV3 = 16,DEAD = 17,};
enum MACRO_NOP {NOP = 241,};
enum MACRO_NOT {NOT_MASK_AGENT = 0,};
enum MACRO_NUL {NUL = 0,};
enum MACRO_NUM {NUM_TBUFS = 4,KI_ALLOC_TRACEMEM = 10,KI_CONFIG_READ = 11,KI_TRACE_GET = 12,KI_USER_TRACE = 13,KI_ALLOCATE_CT = 14,KI_READ_CT = 15,KI_WRITE_CT = 16,KI_TIMEOUT_SET = 17,KI_PROC_TRACE = 18,KI_KMEM_GET = 19,KI_KMEM_GETV = 20,KI_SET_SYSCALLTRACE = 21,KI_CLR_SYSCALLTRACE = 22,KI_SET_ALL_SYSCALTRACES = 23,KI_CLR_ALL_SYSCALTRACES = 24,KI_SET_SYSCALLTRACE_BYPID = 25,KI_CLR_SYSCALLTRACE_BYPID = 26,KI_SET_KERNELTRACE = 27,KI_CLR_KERNELTRACE = 28,KI_SET_ALL_KERNELTRACES = 29,KI_CLR_ALL_KERNELTRACES = 30,KI_FREE_TRACEMEM = 31,KI_CONFIG_CLEAR = 32,KI_TRACE_SWITCH = 33,KI_TIMEOUT_GET = 34,};
enum MACRO_NVM {NVM_PANIC_SIZE = 128,};
enum MACRO_OFF {OFF_ON = 7,ON_REIM = 14,};
enum MACRO_OLD {OLD_MAXUID = 60000,OLD_UID_NOBODY = 65534,};
enum MACRO_PAM {PAM_SUCCESS = 0,PAM_OPEN_ERR = 1,PAM_SYMBOL_ERR = 2,PAM_SERVICE_ERR = 3,PAM_SYSTEM_ERR = 4,PAM_BUF_ERR = 5,PAM_CONV_ERR = 6,PAM_PERM_DENIED = 7,PAM_MAXTRIES = 8,PAM_AUTH_ERR = 9,PAM_NEW_AUTHTOK_REQD = 10,};
enum MACRO_PCI {PCI_BUS = 0x55,};
enum MACRO_PCL {PCL = 0x80,};
enum MACRO_PDC {PDC_ENTRY_PT = 0x388,};
enum MACRO_PDE {PDE_VPAGE = 20,};
enum MACRO_PDP {PDP_ENDIAN = 3412,};
enum MACRO_PDU {PDU_IN_BIT = 0x20000000,PDU_OUT_BIT = 0x10000000,};
enum MACRO_PEN {PEN = 0x8,};
enum MACRO_PFG {PFG = 0x40,};
enum MACRO_PFN {PFN_NONE = 0x0,VFD_SET_VALID = 0x1,VFD_CLEAR_VALID = 0x2,VFD_SET_CW = 0x4,VFD_CLEAR_CW = 0x8,};
enum MACRO_PPD {PPD = 0x70,};
enum MACRO_PPE {PPE = 0x60,};
enum MACRO_PPU {PPU = 0x15,SPE = 0x98,};
enum MACRO_PRC {PRC_OK = 0,PRC_ERR_NETWORKING = -1,};
enum MACRO_PRF {PRF_OFF = 536895746,PRF_RESET = 536895747,PRF_FREE = 536895748,};
enum MACRO_PRI {PRI_MI = 8,SEC_MI = 64,};
enum MACRO_PRM {PRM_DEV_ACTIVE = 2,PRM_LVM = 0,};
enum MACRO_PRN {PRN = 0x80,};
enum MACRO_PRU {PRU_ATTACH = 0,PRU_DETACH = 1,PRU_BIND = 2,PRU_LISTEN = 3,PRU_CONNECT = 4,PRU_ACCEPT = 5,PRU_DISCONNECT = 6,PRU_SHUTDOWN = 7,PRU_RCVD = 8,PRU_SEND = 9,PRU_ABORT = 10,PRU_CONTROL = 11,PRU_SENSE = 12,PRU_RCVOOB = 13,PRU_SENDOOB = 14,PRU_SOCKADDR = 15,PRU_PEERADDR = 16,PRU_CONNECT2 = 17,PRU_ACCEPTCONN = 18,PRU_REJECTCONN = 19,PRU_MESSAGE_MODE = 20,PRU_REQABORT = 21,PRU_UNBIND = 22,PRU_FASTTIMO = 23,PRU_SLOWTIMO = 24,PRU_PROTORCV = 25,PRU_PROTOSEND = 26,PRU_COPYAVOID = 27,};
enum MACRO_PS2 {PS2_ENABLE = 0x20005004,PS2_DISABLE = 0x20005005,PS2_STREAMMODE = 0x20005006,};
enum MACRO_PSD {PSD_VM = 0x1,PSD_AVM = 0x2,};
enum MACRO_PSF {PSF_OFFSET = 0x1,};
enum MACRO_PSH {PSH_SEGSZ = 0x1,};
enum MACRO_PSI {PSI_SHMMAX = 0x1,};
enum MACRO_PSL {PSL_NLEVELS = 4,};
enum MACRO_PSM {PSM_LENGTH_16 = 16,PSM_SESSION_READ_ONLY = 1,};
enum MACRO_PST {PST_UCOMMLEN = 15,};
enum MACRO_PSW {PSW_T = 0x1000000,PSW_H = 0x800000,PSW_L = 0x400000,PSW_N = 0x200000,PSW_X = 0x100000,PSW_B = 0x80000,PSW_C = 0x40000,PSW_V = 0x20000,PSW_M = 0x10000,PSW_CB = 0xFF00,PSW_R = 0x10,PSW_Q = 0x8,PSW_P = 0x4,PSW_D = 0x2,PSW_I = 0x1,};
enum MACRO_PUT {PUT_PANIC_OK = 0x1,};
enum MACRO_QIC {QIC_24 = 5,QIC_120 = 15,QIC_150 = 16,QIC_525 = 17,QIC_1000 = 21,};
enum MACRO_QUE {QUE_EMPTY = 0,QUE_OK = 1,MAX_T_LEN = 2000,};
enum MACRO_RAW {RAW_BUS = 31,};
enum MACRO_RCD {RCD = 0x1,MF = 0x2,WCE = 0x4,};
enum MACRO_RDB {RDB_BOOT = 0x1,RDB_BOOT_BIT = 0x1F,};
enum MACRO_REC {REC_EOR = 0x1,REC_EOF = 0x2,BLK_EOR = 0x80,};
enum MACRO_RED {RED_ZONE_PAGES = 2,RED_ZONE_SIZE = 8192,DATA_MINPAGES = 16384,DATA_MINSIZE = 67108864,UAREA = 2147418112,};
enum MACRO_REG {REG_NPAREN = 255,};
enum MACRO_REL {REL_1010_SERVER = 0,VR_MIT_RELEASE = 6,};
enum MACRO_REN {REN = 1,SRQ = 2,NDAC = 4,SC = 8,TCT = 16,TLK = 32,LTN = 64,ADDRESS = 128,PPOLL = 256,GET = 512,DCL = 1024,IFC = 2048,EIR = 4096,};
enum MACRO_REQ {REQ_INFO_UID_ERR = -118,};
enum MACRO_RES {RES_RETRANS = 1,RES_RETRY = 2,RES_NSCOUNT = 3,RES_NDOTS = 4,};
enum MACRO_REX {REX_INTERACTIVE = 1,REX_ONPROGRAM = 2,};
enum MACRO_RNF {RNF_NORMAL = 1,RNF_ROOT = 2,RNF_ACTIVE = 4,};
enum MACRO_RPC {RPC_ANYSOCK = -1,};
enum MACRO_RRQ {RRQ = 0x1,WRQ = 0x2,DATA = 0x3,ACK = 0x4,};
enum MACRO_RST {RST_BUSI = 8388608,RST_WANTED = 4194304,};
enum MACRO_RSV {RSV_MASK = 0x40,};
enum MACRO_RTF {RTF_UP = 0x1,RTF_GATEWAY = 0x2,RTF_HOST = 0x4,RTF_NO_PMTU = 0x8,RTF_DYNAMIC = 0x10,RTF_MODIFIED = 0x20,RTF_DYN_PMTU = 0x40,RTF_DOUBTFUL = 0x80,RTF_PERM_PMTU = 0x100,};
enum MACRO_RTN {RTN_DOUBTFUL = 0x1,RTN_NUKEREDIRS = 0x2,};
enum MACRO_RUN {RUN_LVL = 1,BOOT_TIME = 2,OLD_TIME = 3,NEW_TIME = 4,INIT_PROCESS = 5,LOGIN_PROCESS = 6,USER_PROCESS = 7,DEAD_PROCESS = 8,ACCOUNTING = 9,};
enum MACRO_SAP {SAP_ONE = 1,SAP_RANGE = 2,SAP_ALL = 3,SAP_CLEAR = 4,};
enum MACRO_SAR {SAR_MASK32 = 0x1F,SAR_MASK64 = 0x3F,};
enum MACRO_SEC {SEC_DEFAULT_MODE = 0x1C0,};
enum MACRO_SEG {SEG_SIZE = 1073741824,};
enum MACRO_SEM {SEM_LOCKED = 0x1,SEM_WANT = 0x2,BETA_MISS_LIMIT = 0xA,};
enum MACRO_SET {SET_MASK = 0x4,SET_CHANNEL0_MASK = 0x1,};
enum MACRO_SGC {SGC_VSC1 = 0x0,SGC_VSC2 = 0x1,CORE_VSC = 0x2,EISA_VSC = 0x4,CORE2_VSC = 0x6,EISA_ISC_START_ADDR = 0x40,EISA_ISC_END_ADDR = 0x50,};
enum MACRO_SHF {SHF_WRITE = 0x1,SHF_ALLOC = 0x2,SHF_EXECINSTR = 0x4,SHF_MERGE = 0x10,SHF_STRINGS = 0x20,SHF_INFO_LINK = 0x40,SHF_LINK_ORDER = 0x80,SHF_OS_NONCONFORMING = 0x100,SHF_GROUP = 0x200,SHF_MASKOS = 0xFF00000,SHF_MASKPROC = 0xF0000000,};
enum MACRO_SHI {SHI_HP_MERGE = 0x0,SHI_HP_PICKANY = 0x1,SHN_TLS_COMMON = 0xFF20,SHN_NS_COMMON = 0xFF21,SHN_FS_COMMON = 0xFF22,SHN_NS_UNDEF = 0xFF23,SHN_FS_UNDEF = 0xFF24,SHN_HP_EXTERN = 0xFF25,SHN_HP_EXTHINT = 0xFF26,SHT_HP_OVLBITS = 0x60000000,SHT_HP_DLKM = 0x60000001,SHT_HP_COMDAT = 0x60000002,SHT_HP_OBJDICT = 0x60000003,SHT_HP_ANNOT = 0x60000004,};
enum MACRO_SHM {SHM_FAILED = -1,};
enum MACRO_SHN {SHN_UNDEF = 0,SHN_LORESERVE = 65280,};
enum MACRO_SHT {SHT_NULL = 0,SHT_PROGBITS = 1,SHT_SYMTAB = 2,SHT_STRTAB = 3,SHT_RELA = 4,SHT_HASH = 5,SHT_DYNAMIC = 6,SHT_NOTE = 7,SHT_NOBITS = 8,SHT_REL = 9,SHT_SHLIB = 10,SHT_DYNSYM = 11,SHT_INIT_ARRAY = 14,SHT_FINI_ARRAY = 15,SHT_PREINIT_ARRAY = 16,SHT_GROUP = 17,SHT_SYMTAB_SHNDX = 18,SHT_LOOS = 1610612736,SHT_HIOS = 1879048191,SHT_LOPROC = 1879048192,SHT_HIPROC = 2147483647,};
enum MACRO_SIG {SIG_BLOCK = 0x0,SIG_UNBLOCK = 0x1,SIG_SETMASK = 0x2,MINSIGSTKSZ = 0x2000,};
enum MACRO_SKL {SKL_NLEVELS = 4,};
enum MACRO_SM2 {SM_Error = 0,SM_RegisterClient = 1,SM_RegisterClientReply = 2,SM_SaveYourself = 3,SM_SaveYourselfRequest = 4,SM_InteractRequest = 5,SM_Interact = 6,SM_InteractDone = 7,SM_SaveYourselfDone = 8,SM_Die = 9,SM_ShutdownCancelled = 10,SM_CloseConnection = 11,SM_SetProperties = 12,SM_DeleteProperties = 13,SM_GetProperties = 14,SM_PropertiesReply = 15,SM_SaveYourselfPhase2Request = 16,SM_SaveYourselfPhase2 = 17,SM_SaveComplete = 18,};
enum MACRO_SMT {SMT_EMPTY_BUFFER = 8,SMT_CONTINUE_REQUEST = 2,SMT_CONTINUE_AFTER_BUSY = 1,};
enum MACRO_SPD {SPD = 0x19,UNL = 0xBF,UNT = 0xDF,};
enum MACRO_SPP {SPP_DUART_TTY_HV_ID = 0x4,SPP_CORE_SV_ID = 0xA4,};
enum MACRO_SR0 {SR0 = 0,SR1 = 1,SR2 = 2,SR3 = 3,SR4 = 4,SR5 = 5,SR6 = 6,SR7 = 7,};
enum MACRO_ST0 {ST0 = 0x1,ATTN_EN = 0x80,};
enum MACRO_ST1 {ST1 = 0x2,};
enum MACRO_ST2 {ST2 = 0x4,};
enum MACRO_ST3 {ST3 = 0x100,};
enum MACRO_ST4 {ST4 = 0x200,};
enum MACRO_ST5 {ST5 = 0x400,};
enum MACRO_STB {STB_LOCAL = 0,STB_GLOBAL = 1,STB_WEAK = 2,STB_LOOS = 10,STB_HIOS = 12,STB_LOPROC = 13,STB_HIPROC = 15,};
enum MACRO_STH {STH = 0x64000000,};
enum MACRO_STN {STN_UNDEF = 0,};
enum MACRO_STO {STO_EXPORT = 3,STO_DEFAULT = 0,};
enum MACRO_STR {STR_TYPE_MASK = 0x3,};
enum MACRO_STT {STT_NOTYPE = 0,STT_OBJECT = 1,STT_FUNC = 2,STT_SECTION = 3,STT_FILE = 4,STT_COMMON = 5,STT_TLS = 6,STT_LOOS = 10,STT_HIOS = 12,STT_LOPROC = 13,STT_HIPROC = 15,};
enum MACRO_STV {STV_EXPORT = 3,STV_DEFAULT = 0,};
enum MACRO_SUA {SUA_HAS_PX = 1,SUA_HAS_PN = 2,SUA_HAS_SL = 4,SUA_HAS_NM = 8,SUA_HAS_CL = 16,SUA_HAS_PL = 32,SUA_HAS_RE = 64,SUA_HAS_TF = 128,};
enum MACRO_SW2 {SW_TOP = 1,SW_BOTTOM = 0,};
enum MACRO_SYS {SYS_NOTSYSCALL = 0,SYS_NOSYS = 0,SYS_nosys = 0,};
enum MACRO_S_I {S_I_CONDITION_MET = 20,};
enum MACRO_TAG {TAG_DEBUG = 1,TAG_STATS = 2,TAG_GCACHE = 3,};
enum MACRO_TBL {TBL_SIZE = 0x6,EAGLE_CTRL_HDR = 0x8,CASCADE_CTRL_HDR = 0x10,EAGLE_UV_HDR = 0x12,};
enum MACRO_TCL {TCL_RESERRORRATE = 3,TCL_PROTECTION = 10,TCL_PRIORITY = 11,TCO_LTPDU = 256,TCO_ACKTIME = 512,TCO_REASTIME = 768,TCO_EXTFORM = 1024,TCO_FLOWCTRL = 1280,TCO_CHECKSUM = 1536,TCO_NETEXP = 1792,TCO_NETRECPTCF = 2048,TCO_PREFCLASS = 2304,TCO_ALTCLASS1 = 2560,TCO_ALTCLASS2 = 2816,TCO_ALTCLASS3 = 3072,TCO_ALTCLASS4 = 3328,};
enum MACRO_TCO {TCO_THROUGHPUT = 0x1,TCO_TRANSDEL = 0x2,TCO_RESERRORRATE = 0x3,TCO_TRANSFFAILPROB = 0x4,TCO_ESTFAILPROB = 0x5,TCO_RELFAILPROB = 0x6,TCO_ESTDELAY = 0x7,TCO_RELDELAY = 0x8,TCO_CONNRESIL = 0x9,TCO_PROTECTION = 0xA,TCO_PRIORITY = 0xB,TCO_EXPD = 0xC,TCL_TRANSDEL = 0xD,};
enum MACRO_TCP {TCP_NODELAY = 0x1,TCP_MAXSEG = 0x2,TCP_KEEPALIVE = 0x8,};
enum MACRO_TEL {TEL_SLOCK = 0x1,TEL_CLOSE = 0x2,TEL_BIN = 0x10,TEL_BINACKON = 0x20,TEL_BINACKOFF = 0x40,TEL_INCR = 0x100,TEL_OUTCR = 0x200,TEL_IACNDACK = 0x1000,TEL_DOWILL = 0x2000,TEL_DONTWONT = 0x4000,TEL_MHANGUPSENT = 0x10000,TEL_SHANGUPSENT = 0x20000,TEL_TTSTOP = 0x100000,TEL_TTINSTOP = 0x200000,};
enum MACRO_TES {TES = 0x8,};
enum MACRO_TMP {TMP_MAX = 17576,};
enum MACRO_TR0 {TR0 = 24,};
enum MACRO_TR1 {TR1 = 25,};
enum MACRO_TR2 {TR2 = 26,};
enum MACRO_TR3 {TR3 = 27,};
enum MACRO_TR4 {TR4 = 28,};
enum MACRO_TR5 {TR5 = 29,};
enum MACRO_TR6 {TR6 = 30,};
enum MACRO_TS1 {TS1 = 2,};
enum MACRO_T_A {T_A = 1,T_NS = 2,T_MD = 3,T_MF = 4,T_CNAME = 5,T_SOA = 6,T_MB = 7,T_MG = 8,T_MR = 9,};
enum MACRO_UDP {UDP_RX_ICMP = 2,};
enum MACRO_UID {UID_NOBODY = -2,};
enum MACRO_UIO {UIO_AVOID_COPY = 128,UIO_CC_COPY = 4096,};
enum MACRO_USB {USB_HID_KEY_PRESS = 0x0,USB_HID_KEY_RELEASE = 0xFF,};
enum MACRO_USR {USR_WINDS = 10,NO_WINDS = 15,MAXPROTOARGS = 48,WIOC = 22272,};
enum MACRO_Uil {Uil_k_min_status = 0,Uil_k_success_status = 0,};
enum MACRO_VFD {VFD_SWRESV = 27,};
enum MACRO_VFS {VFS_RDONLY = 0x1,VFS_MLOCK = 0x2,VFS_MWAIT = 0x4,VFS_NOSUID = 0x8,VFS_EXPORTED = 0x10,VFS_REMOTE = 0x20,VFS_HASQUOTA = 0x40,VFS_MI_DEV = 0x100,VFS_MOUNTING = 0x200,VFS_ORD = 0x400,VFS_LARGEFILES = 0x800,};
enum MACRO_VPG {VPG_MOD = 1,VPG_REF = 2,B_ORD = 29,};
enum MACRO_VT0 {VT0 = 0,VT1 = 16384,FFDLY = 32768,};
enum MACRO_WTT {WTT_ISC1 = 1,WTT_ISC2 = 2,THAICAT_ISC = 3,NOISC = 255,};
enum MACRO_XDR {XDR_GET_BYTES_AVAIL = 1,};
enum MACRO_XFD {XFD_SETSIZE = 256,};
enum MACRO_XIM {XIM_IMID_VALID = 0x1,XIM_ICID_VALID = 0x2,};
enum MACRO_XKB {XKB_XLIB_MAP_MASK = 7,};
enum MACRO_XKM {XKM_H = 1,};
enum MACRO_XMD {XMD_H = 1,};
enum MACRO_XPM {XPM_MONO = 2,XPM_GREY4 = 3,};
enum MACRO_XTI {XTI_GENERIC = 0xFFFF,};
enum MACRO_XWD {XWD_FILE_VERSION = 7,sz_XWDheader = 100,};
enum MACRO_YES {YES = 1,};
enum MACRO_YPU {YPU_VERS = 1,};
enum MACRO_ZMH {ZMH_VC = 1,ZMH_DG = 2,ZMH_AUTH = 4,};
enum MACRO__LC {_LC_MONETARY_SIZE = 128,};
enum MACRO__NL {_NL_ITEM_MAX = 78,};
enum MACRO__PA {_PA_RISC1_0_ID = 523,_PA_RISC1_1_ID = 528,_PA_RISC1_2_ID = 529,_PA_RISC2_0_ID = 532,_PA_RISC_MAXID = 767,};
enum MACRO__PC {_PC_LINK_MAX = 0,_PC_MAX_CANON = 1,_PC_MAX_INPUT = 2,_PC_NAME_MAX = 3,_PC_PATH_MAX = 4,_PC_PIPE_BUF = 5,_PC_CHOWN_RESTRICTED = 6,_PC_NO_TRUNC = 7,_PC_VDISABLE = 8,_PC_SYNC_IO = 100,_PC_ASYNC_IO = 101,_PC_PRIO_IO = 102,_PC_FILESIZEBITS = 103,};
enum MACRO__SC {_SC_ARG_MAX = 0,_SC_CHILD_MAX = 1,_SC_CLK_TCK = 2,_SC_NGROUPS_MAX = 3,_SC_OPEN_MAX = 4,_SC_JOB_CONTROL = 5,_SC_SAVED_IDS = 6,_SC_1_VERSION_88 = 7,_SC_STREAM_MAX = 100,_SC_TZNAME_MAX = 101,_SC_1_VERSION_90 = 102,_SC_1_VERSION_93 = 103,};
enum MACRO_sym {sym_k_hash_table_limit = 127,};
enum MACRO_tkn {tkn_k_class_argument = 1,tkn_k_class_charset = 2,tkn_k_class_color = 3,tkn_k_class_enumval = 4,tkn_k_class_font = 5,tkn_k_class_identifier = 6,tkn_k_class_keyword = 7,tkn_k_class_literal = 8,tkn_k_class_reason = 9,tkn_k_class_reserved = 10,tkn_k_class_special = 11,tkn_k_class_unused = 12,tkn_k_class_class = 13,tkn_k_class_child = 14,};
enum MACRO_uPM {uPM = 0x1,};
typedef unsigned int Modifiers;
typedef unsigned short MrmOffset;
typedef struct _OMDataRec OMDataRec;
typedef struct _ObjectRec ObjectRec;
typedef struct _OutputRec OutputRec;
struct PLT_entry {int proc_addr;int ltptr_value;};
typedef unsigned int PSM_ULONG;
typedef struct _19819260117A2122793EF6A7F838A8D8 RECTANGLE;
struct SPECSTATE {int ss_gr[32];int ss_sr[8];int ss_rctr;int ss_cr10;int ss_cr11;int ss_pidr1;int ss_pidr2;int ss_pidr3;int ss_pidr4;int ss_iva;int ss_cr15;int ss_itmr;int ss_pcsq0;int ss_pcsq1;int ss_pcoq0;int ss_pcoq1;int ss_cr19;int ss_cr20;int ss_cr21;int ss_cr22;int ss_eirr;unsigned int ss_ppda;unsigned int ss_hta;int ss_cr26;int ss_tr3;int ss_tr4;int ss_tr5;int ss_tr6;int ss_tr7;int ss_fcode;};
typedef struct _65A7BC70F11250CC66A1AAC499DD4DF0 ShellPart;
typedef unsigned int TimeTicks;
typedef struct _WidgetRec WidgetRec;
typedef struct _B6E7D1C43482AAA4EB74B93FC1D2BC12 XAnyEvent;
typedef struct _XAxisInfo XAxisInfo;
typedef struct _BEA3E970906BDE5578391186783FC521 XExtCodes;
typedef struct _4928972DC66A9F7C89D199795A4AF315 XFontProp;
typedef struct _C459D5BB7F5319395AB9822D9CBB3596 XGCValues;
typedef struct _DD1A60F664AD301361B26C5800787B5E XIMStyles;
typedef struct _A386896A7A6A8667CB6DAB8066B01EA8 XIconSize;
typedef struct _90781A1EE0BF204281329EC3E50F50C8 XKeyEvent;
typedef struct _48AD93219D69C082A7FA7555BF967BAD XKeyState;
typedef struct _C8CD1AC7BB16F52EEB6B35007FE94FA3 XMapEvent;
typedef struct _636E06EF14FC653C9FA755BCE21D4A3F XTextItem;
typedef struct _EF1C5D99769BCE30319CAF8488AFDF20 XcmsColor;
typedef double XcmsFloat;
typedef union _XkbAction XkbAction;
typedef struct _XkbKey *XkbKeyPtr;
typedef struct _XkbKey XkbKeyRec;
typedef struct _XkbRow *XkbRowPtr;
typedef struct _XkbRow XkbRowRec;
typedef struct _XmBackingRec *XmBacking;
typedef struct _XmDisplayRec *XmDisplay;
typedef struct _E0457597E4167E07E7B544A574F8E386 XmExtPart;
typedef struct _XmFormRec XmFormRec;
typedef struct _XmListRec XmListRec;
typedef struct _XmSashRec XmSashRec;
typedef struct __XmTabListRec *XmTabList;
typedef struct _XmTextRec XmTextRec;
typedef char *XrmString;
typedef unsigned int XtInputId;
typedef void *XtPointer;
struct _FonScope {unsigned int start;unsigned int end;unsigned int shift;unsigned int shift_direction;};
typedef union _0C96D94650C2A29052F166299D3A4777 _IceReply;
struct _XDisplay;
struct _XPrivate;
struct _XkbColor {unsigned int pixel;char *spec;};
struct _XkbPoint {short x;short y;};
typedef union __XmStringRec *_XmString;
typedef char *__caddr_t;
struct __dirdesc {int __dd_fd;int __dd_loc;int __dd_size;int __dd_bbase;int __dd_entno;int __dd_bsize;char *__dd_buf;void *__dd_unused;};
struct __ksigset {int sigset[2];};
typedef struct __reg32 __reg32_t;
typedef struct __reg64 __reg64_t;
typedef double *__va_list;
enum _events_t {PTRACE_SIGNAL = 0x1,PTRACE_FORK = 0x2,PTRACE_EXEC = 0x4,PTRACE_EXIT = 0x8,PTRACE_VFORK = 0x10,};
struct _lwp_cond {int c_flags;int c_waiting;};
struct _lwp_sema {short sem_cookie;unsigned short flags;unsigned int initial_value;int value;int pad2[2];};
struct _prefix_t {unsigned int size;};
typedef unsigned char aclmode_t;
struct audit_arg {char *data;short len;};
enum auth_stat {AUTH_OK = 0x0,AUTH_BADCRED = 0x1,AUTH_REJECTEDCRED = 0x2,AUTH_BADVERF = 0x3,AUTH_REJECTEDVERF = 0x4,AUTH_TOOWEAK = 0x5,AUTH_INVALIDRESP = 0x6,AUTH_FAILED = 0x7,AUTH_KERB_GENERIC = 0x8,AUTH_TIMEEXPIRE = 0x9,AUTH_TKT_FILE = 0xA,AUTH_DECODE = 0xB,AUTH_NET_ADDR = 0xC,};
typedef struct __barrier *barrier_t;
struct beep_info {unsigned int frequency;unsigned int duration;unsigned int volume;unsigned int spare[4];};
typedef struct bh_sema bh_sema_t;
typedef struct callout callout_t;
struct cdfs_args {char *fspec;int flags;};
enum clnt_stat {RPC_SUCCESS = 0x0,RPC_CANTENCODEARGS = 0x1,RPC_CANTDECODERES = 0x2,RPC_CANTSEND = 0x3,RPC_CANTRECV = 0x4,RPC_TIMEDOUT = 0x5,RPC_INTR = 0x12,RPC_UDERROR = 0x17,RPC_VERSMISMATCH = 0x6,RPC_AUTHERROR = 0x7,RPC_PROGUNAVAIL = 0x8,RPC_PROGVERSMISMATCH = 0x9,RPC_PROCUNAVAIL = 0xA,RPC_CANTDECODEARGS = 0xB,RPC_SYSTEMERROR = 0xC,RPC_UNKNOWNHOST = 0xD,RPC_UNKNOWNPROTO = 0x11,RPC_UNKNOWNADDR = 0x13,RPC_NOBROADCAST = 0x15,RPC_RPCBFAILURE = 0xE,RPC_PROGNOTREGISTERED = 0xF,RPC_N2AXLATEFAILURE = 0x16,RPC_TLIERROR = 0x14,RPC_FAILED = 0x10,RPC_INPROGRESS = 0x18,RPC_STALERACHANDLE = 0x19,RPC_CANTCONNECT = 0x1A,RPC_XPRTFAILED = 0x1B,RPC_CANTCREATESTREAM = 0x1C,};
struct cmd_parms {int cmd_ticks;int exec_ticks;char cmd_length;char cmd_message[20];};
typedef struct _3907063ACFEA1ED8727BCBCBBA6E87C4 cr_info_t;
struct cs80_2cmd {unsigned char cmd1;unsigned char cmd2;unsigned char filler[62];};
enum db_action {DB_LOOKUP = 0x0,DB_REMOVE = 0x1,DB_ADD = 0x2,DB_FIRST = 0x3,DB_NEXT = 0x4,DB_ALL = 0x5,DB_RESET_NEXT = 0x6,};
enum db_status {DB_SUCCESS = 0x0,DB_NOTFOUND = 0x1,DB_NOTUNIQUE = 0x2,DB_BADTABLE = 0x3,DB_BADQUERY = 0x4,DB_BADOBJECT = 0x5,DB_MEMORY_LIMIT = 0x6,DB_STORAGE_LIMIT = 0x7,DB_INTERNAL_ERROR = 0x8,};
typedef struct _016F7086AC9B0DCA4201D7895BC24650 dh1_hdr_t;
struct dl_header {int hdr_version;int ltptr_value;int shlib_list_loc;int shlib_list_count;int import_list_loc;int import_list_count;int hash_table_loc;int hash_table_size;int export_list_loc;int export_list_count;int string_table_loc;int string_table_size;int dreloc_loc;int dreloc_count;int dlt_loc;int plt_loc;int dlt_count;int plt_count;short highwater_mark;short flags;int export_ext_loc;int module_loc;int module_count;int elaborator;int initializer;int embedded_path;int initializer_count;int tdsize;int fastbind_list_loc;};
typedef struct _CCFE153B660AB37B5EE7971165BA88F0 dl_status;
struct dld_parms {int version;int text_addr;int text_end;int prog_data_addr;char **envp;int orig_usr_sp;int system_id_addr;int keybits_1_ptr;unsigned int reserved1;int *ismt_p;int *ktepv_p;int *tepv_p;unsigned int tdsize;int ( *thread_init)();int *islwp_p;int dummy;char *pthread_args;int pthread_args_length;void ( *cxperf_dld_hook)();struct tls_init_record **__tls_init;int *__tls_prealloc_dtv;};
typedef struct _045DC9DF8C87DC85FACEF28A55B81842 dm_mask_t;
struct exportent {char *xent_dirname;char *xent_options;};
typedef union _6ADEE7E8E636EADD16A77F1733C8254B ext_mib_t;
typedef struct fc_addr fc_addr_t;
struct fclwp_pcb;
typedef unsigned int fexcept_t;
typedef struct svcfh fhandle_t;
typedef struct _3AA4649CA836D4982B0435C77683A7C7 fp_result;
enum fsh4_mode {FSM_DN = 0x0,FSM_DR = 0x1,FSM_DW = 0x2,FSM_DRW = 0x3,};
typedef struct fssinfo fssinfo_t;
struct func_slot {int function;int slot;};
typedef struct _A9893A2E584921FC9190E1D68D741492 gc_test_t;
typedef struct _49F7EA5D491CD1DC2F293A1F3B03C1F5 gc_util_t;
typedef union _369915EE1C7DFDD007AB874D1EA2C9E1 gpio0_dev;
typedef struct hpde2_0 hpde2_0_t;
typedef struct _CC18AF02D55844FF82CD78427B281927 hw_dlpi_t;
typedef struct hw_path hw_path_t;
typedef struct __iconv_rec iconv_rec;
typedef unsigned int in_addr_t;
struct inquiry_2 {unsigned int rdf;unsigned char added_len;unsigned char resv2[2];unsigned int sftre;char vendor_id[8];char product_id[16];char rev_num[4];unsigned char vendor_spec[20];unsigned char resv4[40];unsigned char vendor_parm_bytes[32];};
typedef struct _30EC503CDC11D33E3960EA03C63F0F86 insf_type;
struct interrupt {char *regaddr;char mask;char value;struct interrupt *next;int ( *isr)(void *arg1, void *arg2);char chainflag;char misc;int temp;};
typedef int intfast_t;
typedef struct kd_open kd_open_t;
typedef struct kdm_dll kdm_dll_t;
enum keystatus {KEY_SUCCESS = 0x0,KEY_NOSECRET = 0x1,KEY_UNKNOWN = 0x2,KEY_SYSTEMERR = 0x3,};
enum klm_stats {klm_granted = 0x0,klm_denied = 0x1,klm_denied_nolocks = 0x2,klm_working = 0x3,};
struct kmemusage {unsigned int ku_pagecnt;};
typedef struct kmemiov32 kmiov32_t;
typedef struct __ksigset ksigset_t;
typedef struct _7480CB9003AEDBEBEAFF24F3E95BA652 ktl_buf_t;
typedef union _D6F3C0EC0794CF7A820CAC9334CFC732 lb_status;
typedef struct _2B7D7D293671206B48F9F967EA75E77D load_type;
typedef struct _489E3F16CC6F83D9EE719C1997B5A755 lssf_type;
struct misc_info {short version;unsigned int arg_reloc;};
typedef struct _946F90356326732355482879C32EA6C8 mksf_type;
struct mod_kpath {char kpath[1024];};
typedef struct mountbody *mountlist;
struct netconfig {char *nc_netid;unsigned int nc_semantics;unsigned int nc_flag;char *nc_protofmly;char *nc_proto;char *nc_device;unsigned int nc_nlookups;char **nc_lookups;unsigned int nc_unused[8];};
enum nis_error {NIS_SUCCESS = 0x0,NIS_S_SUCCESS = 0x1,NIS_NOTFOUND = 0x2,NIS_S_NOTFOUND = 0x3,NIS_CACHEEXPIRED = 0x4,NIS_NAMEUNREACHABLE = 0x5,NIS_UNKNOWNOBJ = 0x6,NIS_TRYAGAIN = 0x7,NIS_SYSTEMERROR = 0x8,NIS_CHAINBROKEN = 0x9,NIS_PERMISSION = 0xA,NIS_NOTOWNER = 0xB,NIS_NOT_ME = 0xC,NIS_NOMEMORY = 0xD,NIS_NAMEEXISTS = 0xE,NIS_NOTMASTER = 0xF,NIS_INVALIDOBJ = 0x10,NIS_BADNAME = 0x11,NIS_NOCALLBACK = 0x12,NIS_CBRESULTS = 0x13,NIS_NOSUCHNAME = 0x14,NIS_NOTUNIQUE = 0x15,NIS_IBMODERROR = 0x16,NIS_NOSUCHTABLE = 0x17,NIS_TYPEMISMATCH = 0x18,NIS_LINKNAMEERROR = 0x19,NIS_PARTIAL = 0x1A,NIS_TOOMANYATTRS = 0x1B,NIS_RPCERROR = 0x1C,NIS_BADATTRIBUTE = 0x1D,NIS_NOTSEARCHABLE = 0x1E,NIS_CBERROR = 0x1F,NIS_FOREIGNNS = 0x20,NIS_BADOBJECT = 0x21,NIS_NOTSAMEOBJ = 0x22,NIS_MODFAIL = 0x23,NIS_BADREQUEST = 0x24,NIS_NOTEMPTY = 0x25,NIS_COLDSTART_ERR = 0x26,NIS_RESYNC = 0x27,NIS_FAIL = 0x28,NIS_UNAVAIL = 0x29,NIS_RES2BIG = 0x2A,NIS_SRVAUTH = 0x2B,NIS_CLNTAUTH = 0x2C,NIS_NOFILESPACE = 0x2D,NIS_NOPROC = 0x2E,NIS_DUMPLATER = 0x2F,};
enum nlm_stats {nlm_granted = 0x0,nlm_denied = 0x1,nlm_denied_nolocks = 0x2,nlm_blocked = 0x3,nlm_denied_grace_period = 0x4,nlm_deadlck = 0x5,};
typedef struct _B9A1077AA8A94E3FB7BECD083E4F56D6 p_entry_t;
struct page_desc {unsigned char page_code;unsigned char page_len;};
enum pc_status {HIT = 0x0,MISS = 0x1,NEAR_MISS = 0x2,};
typedef struct _13E12B2585DDAE3B8FAA42769F7D3B10 procset_t;
typedef struct promisc promisc_t;
typedef struct pst_cmd pst_cmd_t;
struct pst_ucomm {char s[15];};
typedef int pthread_t;
typedef int ptrdiff_t;
typedef struct _5CEE1ED3B02D520814ABF86C9CF0DEF8 pwtable_t;
typedef struct _A5BAC5A3CF6488768EE2550160F65CDE read_type;
struct rsrc_node {int entry_number;int size;struct rsrc_node *prev;struct rsrc_node *next;};
typedef struct rw_lock *rw_lock_t;
struct sense_hdr {unsigned char length;unsigned char medium_type;unsigned char misc;unsigned char bd_len;};
typedef unsigned int set_of_32;
typedef struct __siginfo siginfo_t;
struct size_info {int blocks;int block_size;};
typedef unsigned int skvalue_t;
struct sockproto {unsigned short sp_family;unsigned short sp_protocol;};
struct som_entry {unsigned int location;unsigned int length;};
struct str_mlist {char l_name[9];};
struct streamtab {struct streamtab__qinit *st_rdinit;struct streamtab__qinit *st_wrinit;struct streamtab__qinit *st_muxrinit;struct streamtab__qinit *st_muxwinit;};
struct sys_clock {unsigned int secs;unsigned int nanosecs;};
struct trace_ids {short ti_mid;short ti_sid;char ti_level;short ti_flags;};
typedef struct _0B87BC502720C51E06AFFAF967DE0BDB ttevent_t;
typedef struct _5868E735110F708D87BF7192F3350519 ttstate_t;
typedef unsigned int uintptr_t;
enum vas_flags {VA_HOLES = 0x1,VA_IOMAP = 0x2,VA_PSEUDO = 0x4,VA_MULTITHREADED = 0x8,VA_MCL_FUTURE = 0x10,VA_VPS_INHERIT = 0x20,};
typedef struct _E1260AB78985DBC228459590506E4C92 wordexp_t;
typedef struct _6696D83380ECD241D01FB0DC261CC039 xAnyEvent;
typedef struct _xAxisInfo xAxisInfo;
typedef struct _7B203B1D6B17DB4D229BE0C85CFA6293 xCharInfo;
typedef struct _45DCCDFC0525EE913BAEBC241F6FB2DF xFontProp;
typedef struct _E985CC5BCD47EAFD9A20CA5B2CDE74AE xKeyState;
typedef struct _Share xShareReq;
typedef struct _9CB99F55F4760567A5B7FA05D1482C33 xieFloErr;
typedef struct _0816025FBD9D05C7C86BC1E774A2CFFD xieFloEvn;
enum xprt_stat {XPRT_DIED = 0x0,XPRT_MOREREQS = 0x1,XPRT_IDLE = 0x2,};
struct ypmaplist {char ypml_name[65];struct ypmaplist *ypml_next;};
enum ypreqtype {YPREQ_KEY = 0x1,YPREQ_NOKEY = 0x2,YPREQ_MAP_PARMS = 0x3,};
typedef struct _F018256A0B988F59FE0D70778CAD7356 BRESINFO;
typedef struct _6FAE6FD2BAB65E382C9F13A182AC5702 CKPTTYPE;
typedef unsigned int Cardinal;
typedef struct _CorePart CorePart;
typedef struct _XmCwidNodeRec *CwidNode;
typedef struct _3FD75763E3169B67FBB238E86E46A64A Elf_Data;
typedef void Elf_Void;
typedef struct _5AD947F5E98A54D1DD7F12D200D092D7 FHDRTYPE;
typedef struct _8769733A5E2B58204D7D1C398CD68FC2 FTRLTYPE;
typedef struct _FontDataRec *FontData;
enum HPPAC_CC {HPPAC_CCG = 0x0,HPPAC_CCL = 0x1,HPPAC_CCE = 0x2,};
enum HPPAC_OP {HPPAC_CVAD_OP = 0x1,HPPAC_CVDA_OP = 0x2,HPPAC_CVBD_OP = 0x3,HPPAC_CVDB_OP = 0x4,HPPAC_ADDD_OP = 0x5,HPPAC_SUBD_OP = 0x6,HPPAC_CMPD_OP = 0x7,HPPAC_SLD_OP = 0x8,HPPAC_NSLD_OP = 0x9,HPPAC_SRD_OP = 0xA,HPPAC_MPYD_OP = 0xB,HPPAC_LONGDIVD_OP = 0xC,HPPAC_DIVD_OP = 0xD,};
typedef struct _InputRec InputRec;
enum MACRO_AD {AD_F_NOBEEPER = 0x1,AUDIO_OFF_GAIN = 0xFFFFFF80,};
enum MACRO_AF {AF_UNSPEC = 0,AF_UNIX = 1,AF_INET = 2,AF_IMPLINK = 3,AF_PUP = 4,AF_CHAOS = 5,AF_NS = 6,AF_NBS = 7,AF_ECMA = 8,AF_DATAKIT = 9,AF_CCITT = 10,AF_SNA = 11,AF_DECnet = 12,AF_DLI = 13,AF_LAT = 14,AF_HYLINK = 15,AF_APPLETALK = 16,AF_OTS = 17,AF_NIT = 18,AF_VME_LINK = 19,AF_MAX = 20,};
enum MACRO_AO {AO = 245,};
enum MACRO_AR {AR_NAME_LEN = 16,};
enum MACRO_B0 {B0 = 0,B50 = 1,B75 = 2,B110 = 3,B134 = 4,B150 = 5,B200 = 6,B300 = 7,B600 = 8,_B900 = 9,B1200 = 10,B1800 = 11,B2400 = 12,_B3600 = 13,B4800 = 14,_B7200 = 15,B9600 = 16,B19200 = 17,B38400 = 18,_B57600 = 19,_B115200 = 20,_B230400 = 21,_B460800 = 22,IUCLC = 512,IXANY = 2048,};
enum MACRO_B2 {B2_MORE = 0x1,B2_LIST = 0x2,B2_RETRYONERR = 0x4,B2_VHAND = 0x8,B2_DELAYCOMMIT = 0x10,B2_NOMERGE = 0x80,B2_FIRST = 0x100,B2_CHAIN = 0x200,B2_NOFLUSH = 0x400,B2_NOWAIT = 0x800,B2_LOWPRIO = 0x1000,B2_PURGECACHE = 0x2000,B2_REMAPPED = 0x4000,B2_LVM_REMAPPED = 0x8000,};
enum MACRO_BC {BC_SCALE_MAX = 99,BC_STRING_MAX = 1000,};
enum MACRO_BD {BD_ABT = 0xBDAB3B05,BD_SDSTF = 0xFACE3B05,};
enum MACRO_BF {BF_IO_VALID = 0x8,BF_IO_VALID_BIT = 0x1C,};
enum MACRO_BP {BP_DATA = 0,BP_COMMENT = 1,BP_BLANK = 2,};
enum MACRO_BQ {BQ_AGE = 1,BQ_EMPTY = 2,BQ_SENDFILE = 3,};
enum MACRO_BT {BT_VERSION = 1,BT_CONSDEV = 0,};
enum MACRO_BX {BX_BUFWAIT = 0x0,BX_NOBUFWAIT = 0x1,BX_INCORE = 0x2,BX_NONBLOCK = 0x4,BX_READASYNC = 0x8,BX_BUFCLEAR = 0x10,BX_ANYSIZE = 0x20,BX_MEMWAIT = 0x40,BX_NOMEMWAIT = 0x80,BX_PHYSICAL = 0x100,BX_PURGE = 0x200,BX_FORCE = 0x400,BX_READ = 0x800,BX_ANYSPACE = 0x1000,BX_PUSHDIRTY = 0x2000,BX_NDELAY = 0x4000,};
enum MACRO_C0 {C0_DM_PAPER_ERROR = -9,};
enum MACRO_CA {CA_WRITE = 4,};
enum MACRO_CB {CB_BMTRANS = 0x1,CB_OWNTERM = 0x2,};
enum MACRO_CC {CC_PURGE = 0x1,CC_FLUSH = 0x2,CC_IPURGE = 0x4,CC_EXTPURGE = 0x80000000,};
enum MACRO_CD {CD_ASSO = 0x4,CD_LE = 0x80,};
enum MACRO_CG {CG_MAGIC = 0x90255,};
enum MACRO_CL {CL_NULL = 0,CL_RANDOM = 1,CL_SEQU = 2,CL_DUPLEX = 7,CL_KEYBD = 8,CL_DISPL = 9,VSC_NULL_PATH = 255,};
enum MACRO_CP {CP_NICE = 1,CP_SYS = 2,CP_IDLE = 3,CP_WAIT = 4,CP_BLOCK = 5,CP_SWAIT = 6,CP_INTR = 7,CP_SSYS = 8,};
enum MACRO_CR {CR_NOCHECKSUM = 1,CR_DELAYMSGS = 2,CR_ERRORMSGS = 4,};
enum MACRO_CT {CT_MULTI_UNIT = 0x1,CT_MULTI_PORT = 0x2,CT_SUBSET_80 = 0x4,DESCRIBE_BYTES = 0x25,};
enum MACRO_DA {DA_DEV_SAME = -2,};
enum MACRO_DB {DB_Compiled_Version = 2,};
enum MACRO_DF {DF_ORIGIN = 0x1,DF_SYMBOLIC = 0x2,DF_TEXTREL = 0x4,DF_BIND_NOW = 0x8,DF_STATIC_TLS = 0x10,};
enum MACRO_DG {DG = 0x10,ESTAT_MASK = 0xFC00,};
enum MACRO_DH {DH_PANIC_MSG_LEN = 255,};
enum MACRO_DL {DL_CURRENT_VERSION = 2,};
enum MACRO_DM {DM = 242,};
enum MACRO_DO {DO = 253,};
enum MACRO_DQ {DQ_BTIMELIMIT = 604800,MAXQUOTAUID = 67000000,};
enum MACRO_DR {DR_PLABEL_EXT = 1,DR_PLABEL_INT = 2,DR_DATA_EXT = 3,DR_DATA_INT = 4,DR_PROPAGATE = 5,DR_INVOKE = 6,DR_TEXT_INT = 7,};
enum MACRO_DT {DT_NULL = 0,DT_NEEDED = 1,DT_PLTRELSZ = 2,DT_PLTGOT = 3,DT_HASH = 4,DT_STRTAB = 5,DT_SYMTAB = 6,DT_RELA = 7,DT_RELASZ = 8,DT_RELAENT = 9,DT_STRSZ = 10,DT_SYMENT = 11,DT_INIT = 12,DT_FINI = 13,DT_SONAME = 14,DT_RPATH = 15,DT_SYMBOLIC = 16,DT_REL = 17,DT_RELSZ = 18,DT_RELENT = 19,DT_PLTREL = 20,DT_DEBUG = 21,DT_TEXTREL = 22,DT_JMPREL = 23,DT_BIND_NOW = 24,DT_INIT_ARRAY = 25,DT_FINI_ARRAY = 26,DT_INIT_ARRAYSZ = 27,DT_FINI_ARRAYSZ = 28,DT_RUNPATH = 29,DT_FLAGS = 30,};
enum MACRO_DV {DV_NT_A = -8,};
enum MACRO_EC {EC = 247,};
enum MACRO_EF {EF_PARISC_ARCH = 0xFFFF,};
enum MACRO_EI {EI_MAG0 = 0,EI_MAG1 = 1,EI_MAG2 = 2,EI_MAG3 = 3,EI_CLASS = 4,EI_DATA = 5,EI_VERSION = 6,EI_OSABI = 7,EI_ABIVERSION = 8,EI_PAD = 9,EI_NIDENT = 16,};
enum MACRO_EL {EL = 248,};
enum MACRO_EM {EM_PARISC = 15,EF_PARISC_TRAPNIL = 65536,EF_PARISC_EXT = 131072,EF_PARISC_LSB = 262144,EF_PARISC_WIDE = 524288,EF_PARISC_NO_KABP = 1048576,EF_PARISC_LAZYSWAP = 4194304,};
enum MACRO_EN {EN_BINARY = 1,EN_CRYPT = 2,EN_XDR = 4,EN_MODIFIED = 8,EN_ASN1 = 64,};
enum MACRO_ET {ET_NONE = 0,ET_REL = 1,ET_EXEC = 2,ET_DYN = 3,ET_CORE = 4,ET_LOOS = 65024,ET_HIOS = 65279,ET_LOPROC = 65280,ET_HIPROC = 65535,};
enum MACRO_EV {EV_NONE = 0,EV_CURRENT = 1,ELFMAG0 = 127,};
enum MACRO_EX {EX_RDONLY = 0x1,EX_RDMOSTLY = 0x2,EX_ASYNC = 0x4,MAXFIDSZ = 0x10,};
enum MACRO_FB {FB_TIMESLICE = 10,};
enum MACRO_FC {FC_IPA_SIZE = 5,};
enum MACRO_FD {FD_SETSIZE = 2048,};
enum MACRO_FE {FE_INEXACT = 134217728,FE_UNDERFLOW = 268435456,FE_OVERFLOW = 536870912,FE_DIVBYZERO = 1073741824,FE_INVALID = -2147483648,FE_ALL_EXCEPT = -134217728,};
enum MACRO_FL {FL_IO_REQ_MSG = 140,FL_IO_REPLY_MSG = 141,FL_IO_EVENT_MSG = 142,};
enum MACRO_FM {FM_SIZE = 32,};
enum MACRO_FP {FP_TBIT = 0x40,};
enum MACRO_FS {FS_OFF = 0,FS_ON = 1,};
enum MACRO_GA {GA = 249,};
enum MACRO_GP {GP_READY = 0x1,};
enum MACRO_GR {GR_ARG3 = 23,GR_ARG2 = 24,GR_ARG1 = 25,GR_ARG0 = 26,GR_DP = 27,GR_FP = 28,GR_AP = 29,GR_SP = 30,GR_PC = 31,};
enum MACRO_GW {GW_PAGE_VADDR_INT = 0xC0000000,};
enum MACRO_HE {HE = 0x100,};
enum MACRO_HI {HI = 0,LO = 1,OV = 2,};
enum MACRO_HP {HP_UX_OPT_ABI = 1,HP_UX_OPT_ASMODEL = 2,HP_UX_OPT_FLAGS = 3,};
enum MACRO_HW {HW_IDENTIFY = 0,HW_SELFTEST = 1,HW_LOOPBACK = 2,HW_STATUS = 3,HW_DUMP = 4,HW_DESCRIPTION = 5,HW_ROLLCALL = 6,HW_UTILITY = 7,MGR_CONTROL = 8,MGR_SET_STATE = 9,IO_REDIRECTING = 10,};
enum MACRO_HZ {HZ = 100,MAX_ALARM = 21474836,MAX_VTALARM = 2147483647,};
enum MACRO_IC {IC_FASTLINK = 0x1,IC_LARGEUIDS = 0x2,};
enum MACRO_ID {ID_dot5_Entry = 655361,ID_dot5_StatsEntry = 655362,ID_dot3_StatsEntry = 655363,ID_dot3_CollEntry = 655365,};
enum MACRO_II {II_BIT = 32,};
enum MACRO_IN {IN_CLASSA_NET = 0xFF000000,IN_CLASSA_NSHIFT = 0x18,};
enum MACRO_IO {IO_TYPE_WSIO = 0x1,IO_TYPE_SIO = 0x2,IO_TYPE_CDIO = 0x3,HARITH = 0x10,HSHIFTADD = 0x20,CPU_HP_MC68020 = 0x20C,CPU_HP_MC68030 = 0x20D,CPU_HP_MC68040 = 0x20E,};
enum MACRO_IP {IP_MULTICAST_IF = 2,IP_MULTICAST_TTL = 3,IP_MULTICAST_LOOP = 4,IP_ADD_MEMBERSHIP = 5,IP_DROP_MEMBERSHIP = 6,};
enum MACRO_IR {IR_BROADCAST = 0x1,IR_GATEWAY = 0x2,IR_LOCAL = 0x4,IR_LOOPBACK = 0x8,IR_NET = 0x10,IR_ROUTE = 0x20,IR_SUBNET = 0x40,IR_RESOLVER = 0x80,IR_ROUTE_ASSOC = 0x100,IR_ROUTE_REDIRECT = 0x200,};
enum MACRO_IS {IS_MODE_PAGE_COMPRESSION = 1,};
enum MACRO_KI {KI_CLK_STACK_SIZE = 16,};
enum MACRO_KS {KS_RESERVED = 0x1,INDX_BITS = 0x6,SPU_BITS = 0x7,PAGECNT_BITS = 0x11,MAXPGCNT = 0x1FFFF,};
enum MACRO_KT {KT_SYS_CLOCK = 0,KT_USR_CLOCK = 1,KT_CSW_CLOCK = 2,KT_IDLE_CLOCK = 3,KT_INTUSR_CLOCK = 4,KT_INTIDLE_CLOCK = 5,KT_INTSYS_CLOCK = 6,KT_VFAULT_CLOCK = 7,KT_UPFAULT_CLOCK = 8,KT_PFAULT_CLOCK = 9,KT_TRAP_CLOCK = 10,KT_NUMB_CLOCKS = 11,};
enum MACRO_LC {LC_ALL = 0,LC_COLLATE = 1,LC_CTYPE = 2,LC_MONETARY = 3,LC_NUMERIC = 4,LC_TIME = 5,LC_MESSAGES = 6,C_LANGID = 99,};
enum MACRO_LD {LD_SPACE_REF = 0,LD_DATA_REF = 1,LD_XRT_REF = 2,LD_DATA_EXT = 3,LD_DATA_EXT2 = 4,};
enum MACRO_LE {LE_LOG_STARTING = 0,LE_LOG_TERM = 1,LE_LOG_TEST = 2,LE_LOG_TEST_STR = 3,LE_LOG_TEST_INFO = 4,LE_LOG_DROPPED = 5,LE_LOG_TEST_DATA = 6,LE_LOG_DISASTER_TEST = 1000,LE_LOG_ERROR_TEST = 2000,LE_LOG_WARNING_TEST = 3000,LE_LOG_DROPPED_MSG = 3001,LE_LOG_RESOURCELIM_TEST = 4000,LE_LOG_PROLOG_TEST = 5000,};
enum MACRO_LP {LP_OPEN = 0x1,LP_IO_PENDING = 0x2,LP_HOSED = 0x4,LP_HAVEBUFS = 0x8,TAB = 0x9,};
enum MACRO_LW {LW_SYSCALL_OFF_MS = 0x1,LW_SYSCALL_OFF_KI = 0x2,LW_SYSCALL_OFF_AUDIT = 0x4,};
enum MACRO_MB {MB_LEN_MAX = 4,INT_MAX = 2147483647,INT_MIN = -2147483648,};
enum MACRO_MF {MF_EOM = 0x1,MF_CKO_IN = 0x2,MF_CKO_OUT = 0x4,MF_NOACC = 0x8,MF_NODELAYFREE = 0x10,MF_EXT = 0x20,MF_BROADCAST = 0x40,MF_NO_LOOPBACK = 0x80,};
enum MACRO_MM {MM_HARD = 0x1,MM_SOFT = 0x2,MM_FIRM = 0x4,MM_APPL = 0x100,MM_UTIL = 0x200,MM_OPSYS = 0x400,MM_PRINT = 0x10000,MM_CONSOLE = 0x20000,MM_RECOVER = 0x1000000,MM_NRECOV = 0x2000000,};
enum MACRO_MQ {MQ_IFP = 0,MQ_RIF8025 = 2,MQ_CKO_IN = 3,};
enum MACRO_MS {MS_SYNC = 0x1,MS_ASYNC = 0x2,MS_INVALIDATE = 0x4,};
enum MACRO_MT {MT_FREE = 0,MT_DATA = 1,MT_HEADER = 2,MT_SOCKET = 3,MT_PCB = 4,MT_RTABLE = 5,MT_HTABLE = 6,MT_ATABLE = 7,MT_SONAME = 8,MT_ZOMBIE = 9,MT_SOOPTS = 10,MT_FTABLE = 11,MT_RIGHTS = 12,MT_IFADDR = 13,MT_IPMOPTS = 14,MT_IPMADDR = 15,MT_IFMADDR = 16,MT_MRTABLE = 17,MT_IPCCB = 18,MT_TOTAL = 19,};
enum MACRO_NC {NC_LANGID = 0,N_CATEGORY = 7,SL_NAME_SIZE = 59,};
enum MACRO_ND {ND_GET = 536896256,ND_SET = 536896257,};
enum MACRO_NL {NL_SETD = 1,};
enum MACRO_NM {NM_ASYNC_OFF = 0,NM_ASYNC_ON = 1,};
enum MACRO_NO {NO_PASS = 0,PASS = 1,};
enum MACRO_NS {NS_LS_LOGGING = 0,NS_LS_NFT = 1,NS_LS_LOOPBACK = 2,NS_LS_NI = 3,NS_LS_IPC = 4,NS_LS_SOCKREGD = 5,NS_LS_TCP = 6,NS_LS_PXP = 7,NS_LS_UDP = 8,NS_LS_IP = 9,NS_LS_PROBE = 10,};
enum MACRO_OK {OK = 0,};
enum MACRO_ON {ON_ON = 15,};
enum MACRO_OR {OR = 0x20,};
enum MACRO_OT {OT_PWD = 16,OT_GRP = 17,OT_PRPWD = 18,OT_TERM_CNTL = 19,OT_DFLT_CNTL = 21,OT_DEV_ASG = 23,};
enum MACRO_OV {OV_DM = 83,OVWAPI = 85,IPHASE_VG = 86,CNM_PLATFORM = 87,CNM_TOOL = 88,CNM_APPLICATION = 89,OTS = 90,OTS_NETWORK = 91,OTS_TRANSPORT = 92,OTS_SES = 93,OTS_ACSE_PRES = 94,FDDI = 95,TEST_ID_1 = 96,TEST_ID_2 = 97,DRIVER_OSI0_ID = 98,CIA_ID = 99,ULIPC_ID = 100,X500_DUA_SSID = 101,X500_DSA_SSID = 102,X500_SSA_SSID = 103,X500_DIB_SSID = 104,X500_API_SSID = 105,X500_TOOLS_SSID = 106,X4XFER = 109,DECODER = 110,ENCODER = 111,MTASD = 112,MTADI = 113,MTA = 114,RTSE = 115,SHM = 116,VTP = 117,ACSE_US = 119,ROS = 120,HPS = 121,CM = 122,EM = 123,ULA_UTILS = 124,ICS_DAEMON = 125,ICS_CONFIGURATOR = 126,FORMATTER = 127,ISDN = 128,STREAMS_NETTL_SUBSYS_ID = 129,ISDN_SCSI = 130,ISDN_SCSI_K = 131,CS_NSM = 132,CS_SO = 133,CS_CDR = 134,CS_FTPFM = 135,SAMPLE_ETHERNET_DRIVER = 140,BMP_SERVER = 141,BMP_COLLECTION = 142,BMP_COMMUNICATION = 143,BMP_DISTRIBUTION = 144,BMP_MANAGEMENT = 145,BMP_MONITOR = 146,BMP_PROCESSING = 147,BMP_UI = 148,BMP_MISC = 149,L1GW = 150,L1GW_BILLING = 151,L1GW_SSP = 152,L1GW_CLIENT_BOOT = 153,L1GW_CONSOLE = 154,BMP_ANR = 159,TPOIP_1129_PLUS = 160,TPOIP_SYS_MGNT = 161,TPOIP_VPFE = 162,SPP = 163,VT100 = 164,ISDN_ACC_USR = 165,ISDN_ACC_KNR = 166,OMC_R = 167,FE_EISA = 168,FE_PCI = 169,IPHASE_NIC = 170,PCI_100BT = 171,eisa100bt = 172,base100 = 173,eisa_fddi = 174,LOWFAT = 175,PCI_FDDI = 176,HSC_FDDI = 177,gsc100bt = 178,pci100bt = 179,spp100bt = 180,gle = 181,fqe = 182,CIS_FDDI = 183,FCMS = 184,HDR_IN_BIT = -2147483648,};
enum MACRO_P6 {P6_15 = 0x81,P6_30 = 0x82,P6_60 = 0x83,P6_90 = 0x84,P6_120 = 0x85,};
enum MACRO_PA {PA_LASI = 0x81,};
enum MACRO_PC {PC_PRIV_MASK = 3,PC_PRIV_KERN = 0,};
enum MACRO_PD {PD_LOCK_MASK = 31,};
enum MACRO_PF {PF_X = 0x1,PF_W = 0x2,PF_R = 0x4,PF_MASKOS = 0xFF0000,PF_MASKPROC = 0xFF000000,};
enum MACRO_PM {PM_REMOTE = 0x1,PM_TTY = 0x2,PM_PKT = 0x4,PM_TRAP = 0x8,PM_MONITOR = 0x10,PM_OPEN_ERROR = 0x20,PM_VALID = 0x3F,};
enum MACRO_PR {PR_HDL_CACHE = 0x1,};
enum MACRO_PS {PS_PA83_FPU = 0x1,PS_PA89_FPU = 0x2,PST_SIGWORDS = 0x8,};
enum MACRO_PT {PT_NULL = 0,PT_LOAD = 1,PT_DYNAMIC = 2,PT_INTERP = 3,PT_NOTE = 4,PT_SHLIB = 5,PT_PHDR = 6,PT_TLS = 7,PT_LOOS = 1610612736,PT_HIOS = 1879048191,PT_LOPROC = 1879048192,PT_HIPROC = 2147483647,};
enum MACRO_QB {QB_FULL = 0x1,QB_WANTW = 0x2,QB_BACK = 0x4,};
enum MACRO_R0 {R0 = 0,R1 = 1,R2 = 2,R3 = 3,R4 = 4,R5 = 5,R6 = 6,R7 = 7,R8 = 8,R9 = 9,R10 = 10,R11 = 11,R12 = 12,R13 = 13,R14 = 14,R15 = 15,R16 = 16,R17 = 17,R18 = 18,R19 = 19,R20 = 20,R21 = 21,R22 = 22,R23 = 23,R24 = 24,R25 = 25,R26 = 26,R27 = 27,R28 = 28,R29 = 29,R30 = 30,R31 = 31,};
enum MACRO_RB {RB_AUTOBOOT = 0x0,RB_ASKNAME = 0x1,RB_SINGLE = 0x2,RB_NOSYNC = 0x4,RB_HALT = 0x8,RB_INITNAME = 0x10,};
enum MACRO_RD {RD_TRACE_ON = 0x1,WR_TRACE_ON = 0x2,};
enum MACRO_RE {RE_DUP_MAX = 255,};
enum MACRO_RS {RS_CLASS = 0x1,RS_KIND = 0x2,RS_UID = 0x4,RS_DEVICE_ID = 0x8,RS_TRACE_LEN = 0x10,RS_SUBSYS = 0x20,RS_DEVICE_NAME = 0x40,};
enum MACRO_RW {RW_NO_DELAY = 0x0,RW_DELAY = 0xFFFFFFFF,};
enum MACRO_RY {RY = 0x40,};
enum MACRO_SA {SA_NOCLDSTOP = 0x8,SA_SIGINFO = 0x10,};
enum MACRO_SB {SB_CODESET = 0,SJIS_CODESET = 1,EUCJP_CODESET = 2,EUCTW_CODESET = 3,HP15_CODESET = 4,USR_CODESET = 5,MX_METHOD_CLASS = 6,};
enum MACRO_SE {SE = 240,};
enum MACRO_SF {SF_DISCONNECT = 1,};
enum MACRO_SG {SG_ANYSPU = -1,};
enum MACRO_SI {SI_UNKNOWN = 0,FPE_INTDIV = 101,FPE_INTOVF = 102,FPE_FLTDIV = 103,FPE_FLTUND = 104,FPE_FLTRES = 105,FPE_FLTINV = 106,FPE_FLTSUB = 107,SEGV_MAPERR = 108,SEGV_ACCERR = 109,BUS_ADRALN = 110,BUS_ADRERR = 111,BUS_OBJERR = 112,TRAP_BRKPT = 113,TRAP_TRACE = 114,ILL_ILLOPN = 115,ILL_ILLADR = 116,ILL_ILLTRP = 117,ILL_COPROC = 118,ILL_BADSTK = 119,POLL_IN = 120,POLL_OUT = 121,POLL_MSG = 122,POLL_ERR = 123,POLL_PRI = 124,POLL_HUP = 125,GFAULT_EXPLICIT = 201,GFAULT_IMPLICIT = 202,};
enum MACRO_SL {SL_FATAL = 0x1,SL_NOTIFY = 0x2,SL_ERROR = 0x4,SL_TRACE = 0x8,SL_CONSOLE = 0x10,SL_WARN = 0x20,SL_NOTE = 0x40,I_TRCLOG = 0x20000001,I_ERRLOG = 0x20000002,};
enum MACRO_SM {SM_PROG = 100024,SM_VERS = 1,};
enum MACRO_SO {SO_READOPT = 0x1,SO_WROFF = 0x2,SO_MINPSZ = 0x4,SO_MAXPSZ = 0x8,SO_HIWAT = 0x10,SO_LOWAT = 0x20,SO_ALL = 0x3F,SO_MREADON = 0x40,SO_MREADOFF = 0x80,SO_ISTTY = 0x100,SO_ISNTTY = 0x200,SO_NDELON = 0x400,SO_NDELOFF = 0x800,SO_TOSTOP = 0x1000,SO_TONSTOP = 0x2000,SO_BAND = 0x4000,SO_COWENABLE = 0x8000,SO_COWDISABLE = 0x10000,SO_WAKE_ONE = 0x20000,SO_WAKE_ALL = 0x40000,SO_FUNC_REG = 0x80000,};
enum MACRO_SP {SP_NOP = 0x40,SET_PRIORITY = 0xC0,};
enum MACRO_SS {SS_INTRAP = 0x1,SS_INSYSCALL = 0x2,SS_ININT = 0x4,SS_PSPKERNEL = 0x8,SS_ARGSVALID = 0x10,SS_DORFI = 0x20,SS_WIDEREGS = 0x40,SS_MODIFIEDWIDE = 0x80,SS_NARROWISINVALID = 0x100,KEEPERBITS = 0x1C0,};
enum MACRO_ST {ST_RDONLY = 0x1,ST_NOSUID = 0x2,ST_EXPORTED = 0x4,ST_QUOTA = 0x8,ST_LARGEFILES = 0x10,};
enum MACRO_SV {SV_ONSTACK = 1,SV_BSDSIG = 2,SV_RESETHAND = 4,};
enum MACRO_SW {SW_BLOCK = 0x2,SW_FS = 0x4,};
enum MACRO_SX {SX_NO_REASON = 0,SX_NO_IP = 1,SX_NO_CONNECT = 2,SX_NO_XSERVER = 3,SX_NO_PERMISSION = 4,};
enum MACRO_St {St_Unconfigured = 1,St_Mi_Head = 2,St_Mi = 3,St_Exiting = 4,St_Disabled = 5,St_Running = 6,ITICK_PER_SEC = 80000000,};
enum MACRO_Sv {Sv_St_GR = 0,Sv_St_SR = 128,Sv_St_CR = 160,Sv_St_IVA = 188,Sv_St_EIEM = 192,Sv_St_PCSQH = 200,Sv_St_PCSQT = 204,Sv_St_PCOQH = 208,Sv_St_PCOQT = 212,Sv_St_IIR = 216,Sv_St_ISR = 220,Sv_St_IOR = 224,Sv_St_IPSW = 228,Sv_St_EIRR = 232,Sv_St_PDA = 236,Sv_St_HTA = 240,Sv_St_TR = 244,Sv_St_SS_FCODE = 268,Sv_St_SIZE = 272,};
enum MACRO_TA {TA_BINARY = 1,TA_CRYPT = 2,TA_XDR = 4,TA_SEARCHABLE = 8,TA_CASE = 16,TA_MODIFIED = 32,TA_ASN1 = 64,};
enum MACRO_TE {TE_BIND_REQ = 1,TE_UNBIND_REQ = 2,TE_OPTMGMT_REQ = 3,TE_BIND_ACK = 4,TE_OPTMGMT_ACK = 5,TE_CONN_REQ = 6,TE_CONN_RES = 7,TE_DISCON_REQ = 8,TE_DATA_REQ = 9,TE_EXDATA_REQ = 10,TE_ORDREL_REQ = 11,TE_CONN_IND = 12,TE_CONN_CON = 13,TE_DATA_IND = 14,TE_EXDATA_IND = 15,TE_ORDREL_IND = 16,TE_DISCON_IND1 = 17,TE_DISCON_IND2 = 18,TE_DISCON_IND3 = 19,TE_ERROR_ACK = 20,TE_OK_ACK1 = 21,TE_OK_ACK2 = 22,TE_OK_ACK3 = 23,TE_OK_ACK4 = 24,TE_PASS_CONN = 25,TE_UNITDATA_REQ = 26,TE_UNITDATA_IND = 27,TE_UDERROR_IND = 28,TE_NOEVENTS = 29,};
enum MACRO_TF {TF_HAS_CRE = 1,TF_HAS_MOD = 2,TF_HAS_ACC = 4,TF_HAS_ATT = 8,TF_HAS_BAK = 16,TF_HAS_EXP = 32,TF_HAS_EFF = 64,TF_TIME_17 = 128,};
enum MACRO_TH {TH_FIN = 0x1,TH_SYN = 0x2,TH_RST = 0x4,TH_PUSH = 0x8,TH_ACK = 0x10,TH_URG = 0x20,};
enum MACRO_TI {TI_BIND = 21505,TI_GETINFO = 21506,TI_OPTMGMT = 21507,TI_UNBIND = 21508,TI_GETMYNAME = 21509,TI_GETPEERNAME = 21510,TI_XTI_HELLO = 21511,TI_XTI_GET_STATE = 21512,TI_XTI_CLEAR_EVENT = 21513,TI_XTI_MODE = 21514,TI_TLI_MODE = 21515,TI_GET_TUNABLES = 21516,};
enum MACRO_TR {TR_LINK_INBOUND = 536870912,};
enum MACRO_TS {TS_UNINIT = 0,TS_UNBND = 1,TS_WACK_BREQ = 2,TS_WACK_UREQ = 3,TS_IDLE = 4,TS_WACK_OPTREQ = 5,TS_WACK_CREQ = 6,TS_WCON_CREQ = 7,TS_WRES_CIND = 8,TS_WACK_CRES = 9,TS_DATA_XFER = 10,TS_WIND_ORDREL = 11,TS_WREQ_ORDREL = 12,TS_WACK_DREQ6 = 13,TS_WACK_DREQ7 = 14,TS_WACK_DREQ9 = 15,TS_WACK_DREQ10 = 16,TS_WACK_DREQ11 = 17,TS_WACK_ORDREL = 18,TS_NOSTATES = 19,};
enum MACRO_UI {UI_CONTROL = 3,XID_CONTROL = 191,TEST_CONTROL = 243,};
enum MACRO_UL {UL_GETFSIZE = 1,UL_SETFSIZE = 2,UL_GETMAXBRK = 3,};
enum MACRO_UN {UN_UN = 0,INV_MR = -1,};
enum MACRO_VM {VM_IO_LOCK = 0x1,BREAK_COW = 0x2,LOCK_OBJECT = 0x4,ASYNCIO = 0x8,VM_MEM_LOCK = 0x10,BREAK_LGPG = 0x20,};
enum MACRO_VN {VN_RELE_NOT_DONE = 0x0,};
enum MACRO_VR {VR_HP_RELEASE = 0,VR_HP_PATCH_LEVEL = 0,};
enum MACRO_WA {WA_NORMAL = 0,};
enum MACRO_WM {WM_NORTHWEST = 0,WM_NORTH = 1,WM_NORTHEAST = 2,WM_WEST = 3,WM_EAST = 4,WM_SOUTHWEST = 5,WM_SOUTH = 6,WM_SOUTHEAST = 7,INVALID = -1,};
enum MACRO_XA {XA_PRIMARY = 1,XA_SECONDARY = 2,XA_ARC = 3,XA_ATOM = 4,XA_BITMAP = 5,XA_CARDINAL = 6,XA_COLORMAP = 7,XA_CURSOR = 8,XA_CUT_BUFFER0 = 9,XA_CUT_BUFFER1 = 10,XA_CUT_BUFFER2 = 11,XA_CUT_BUFFER3 = 12,XA_CUT_BUFFER4 = 13,XA_CUT_BUFFER5 = 14,XA_CUT_BUFFER6 = 15,XA_CUT_BUFFER7 = 16,XA_DRAWABLE = 17,XA_FONT = 18,XA_INTEGER = 19,XA_PIXMAP = 20,XA_POINT = 21,XA_RECTANGLE = 22,XA_RESOURCE_MANAGER = 23,XA_RGB_COLOR_MAP = 24,XA_RGB_BEST_MAP = 25,XA_RGB_BLUE_MAP = 26,XA_RGB_DEFAULT_MAP = 27,XA_RGB_GRAY_MAP = 28,XA_RGB_GREEN_MAP = 29,XA_RGB_RED_MAP = 30,XA_STRING = 31,XA_VISUALID = 32,XA_WINDOW = 33,XA_WM_COMMAND = 34,XA_WM_HINTS = 35,XA_WM_CLIENT_MACHINE = 36,XA_WM_ICON_NAME = 37,XA_WM_ICON_SIZE = 38,XA_WM_NAME = 39,XA_WM_NORMAL_HINTS = 40,XA_WM_SIZE_HINTS = 41,XA_WM_ZOOM_HINTS = 42,XA_MIN_SPACE = 43,XA_NORM_SPACE = 44,XA_MAX_SPACE = 45,XA_END_SPACE = 46,XA_SUPERSCRIPT_X = 47,XA_SUPERSCRIPT_Y = 48,XA_SUBSCRIPT_X = 49,XA_SUBSCRIPT_Y = 50,XA_UNDERLINE_POSITION = 51,XA_UNDERLINE_THICKNESS = 52,XA_STRIKEOUT_ASCENT = 53,XA_STRIKEOUT_DESCENT = 54,XA_ITALIC_ANGLE = 55,XA_X_HEIGHT = 56,XA_QUAD_WIDTH = 57,XA_WEIGHT = 58,XA_POINT_SIZE = 59,XA_RESOLUTION = 60,XA_COPYRIGHT = 61,XA_NOTICE = 62,XA_FONT_NAME = 63,XA_FAMILY_NAME = 64,XA_FULL_NAME = 65,XA_CAP_HEIGHT = 66,XA_WM_CLASS = 67,XA_WM_TRANSIENT_FOR = 68,};
enum MACRO_XC {XC_num_glyphs = 154,XC_X_cursor = 0,};
enum MACRO_XI {XI_Absent = 0,XI_Present = 1,};
enum MACRO_XK {XK_mute_acute = 0x100000A8,XK_mute_grave = 0x100000A9,XK_mute_asciicircum = 0x100000AA,XK_mute_diaeresis = 0x100000AB,XK_mute_asciitilde = 0x100000AC,XK_lira = 0x100000AF,XK_guilder = 0x100000BE,XK_Ydiaeresis = 0x100000EE,};
enum MACRO_XM {XM_1_2_XTMACROS = 1,};
enum MACRO_XP {XP_DONT_CHECK = 0,XP_INITIAL_RELEASE = 1,};
enum MACRO_XT {XT_CONVERT_FAIL = 0x80000001,};
enum MACRO_YP {YP_TRUE = 1,YP_NOMORE = 2,};
enum MACRO__S {_S_IFREG = 0x8000,_S_IFBLK = 0x6000,};
enum MACRO_sz {sz_xSegment = 8,sz_xPoint = 4,};
typedef short MrmCount;
typedef short MrmGroup;
typedef unsigned char MrmSCode;
typedef struct pm__list PMAPLIST;
struct PSMParam {char parameter1[80];int validity_flag1;char parameter2[80];int validity_flag2;char *service_name;};
typedef unsigned char PSM_BYTE;
typedef struct psm_item PSM_ITEM;
typedef short Position;
typedef struct rp__list RPCBLIST;
typedef struct _8E967F7BF7D653C298E7010DBC578B10 RangeRec;
typedef struct _984028CEBAA862490ACFAD72BCDE57E1 ShellRec;
typedef struct term TERMINAL;
enum TFR_type {NO_TFR = 0x0,DMA_TFR = 0x1,INTR_TFR = 0x2,FHS_TFR = 0x3,BURST_TFR = 0x4,BO_END_TFR = 0x5,BUS_TRANSACTION = 0x6,};
struct T_ok_ack {int PRIM_type;int CORRECT_prim;};
typedef struct _568B7DAEE9030118F2B9A79B2684B02F VHDRTYPE;
typedef unsigned int VisualID;
typedef int XContext;
typedef struct _XExtData XExtData;
typedef struct _XOC *XFontSet;
typedef unsigned int XIMStyle;
typedef struct _XKeyInfo XKeyInfo;
typedef struct _54554A9A149105D286AD985787231C0D *XLCdCore;
typedef char *XPointer;
typedef struct _335EDB02744B103283B800FF919FC940 XSegment;
typedef struct _XSpecRec XSpecRec;
typedef struct _48A6A373861130075F8524D5C353FEE6 XWDColor;
typedef struct _981CB342896EC9052433BEBA5A8FF76A XWMHints;
typedef struct _389F741C4688F992C1DDC28AB9B68F46 XcmsRGBi;
typedef union _XkbEvent XkbEvent;
typedef struct _XmExtRec XmExtRec;
typedef struct _XmGadgetRec *XmGadget;
typedef int XmOffset;
typedef struct _XmRegion *XmRegion;
typedef struct _XmScreenRec *XmScreen;
typedef union __XmStringRec *XmString;
typedef struct _26934E13CB11D4E3DDD70D95266A4A57 XpmColor;
typedef struct _1801593F65176DF1DA4677E119FA0B5C XpmImage;
typedef int XrmQuark;
typedef struct _48974C792553FBFA318CEC22C625F222 XrmValue;
typedef int XtArgVal;
typedef unsigned int XtGCMask;
typedef struct _323DB3A67F7F25776B114855EEBFF4A0 _KEY_MAP;
struct _TwoDInt {int x;int y;};
struct _UDCArea {unsigned int start;unsigned int end;};
struct _XkbMods {unsigned char mask;unsigned char real_mods;unsigned short vmods;};
enum __aio_op {AIO_CANCELED = 0x1,AIO_NOTCANCELED = 0x2,AIO_ALLDONE = 0x3,};
enum __lio_op {LIO_READ = 0x1,LIO_WRITE = 0x2,LIO_NOP = 0x3,};
enum __lio_wf {LIO_WAIT = 0x1,LIO_NOWAIT = 0x2,};
typedef struct __undo __undo_t;
typedef unsigned short __ushort;
struct _dirdesc {int __dd_fd;int __dd_loc;int __dd_size;int __dd_bbase;int __dd_entno;int __dd_bsize;char *__dd_buf;void *__dd_unused;};
typedef unsigned char action_t;
struct afswitch {int ( *af_hash)();int ( *af_netmatch)();};
struct aud_flag {unsigned int param_count;unsigned char param[10];};
struct aud_type {unsigned char logit;};
typedef struct b_sema b_sema_t;
struct bandinfo {unsigned char bi_pri;int bi_flag;};
typedef int blkcnt_t;
struct blmodeio {unsigned int cb_flags;unsigned char cb_trig1c;unsigned char cb_trig2c;unsigned char cb_alertc;unsigned char cb_termc;unsigned char cb_replen;char cb_reply[64];};
struct booleans {unsigned int fillerx;};
struct bootpent {int bp_type;char *bp_text;};
struct cap_list {unsigned int process_hand;};
struct capacity {int lba;int blksz;};
struct corehpa2 {int irr;int imr;int ipr;int icr;int iar;int reserved1[3];unsigned char led_control;char reserved2[3];int status;};
typedef struct _4EC8E4A6CD67FCE8BB3EA802AF53C546 cs80_fmt;
typedef struct __cycles cycles_t;
typedef struct _706327D4C18E3A6CAC6F680E53AC0541 dap_type;
struct deactarg {int count;int max;int key;};
struct dev_flag {unsigned short fg_users;};
typedef struct devpri devpri_t;
struct diliovec {int *buffer;int count;int command;};
typedef double double_t;
typedef struct device_table dtable_t;
typedef struct device_table *dtaddr_t;
struct endpoint {char *uaddr;char *family;char *proto;};
enum err_code {ERR_IOSEND = 0x0,ERR_UNBOUND = 0x1,ERR_BADMSG = 0x2,ERR_PORTNUM = 0x3,ERR_BADSTAT = 0x4,ERR_MUXFAIL = 0x5,ERR_MUXEVENT = 0x6,ERR_PORTFAIL = 0x7,ERR_BADTYPE = 0x8,ERR_BADCSTAT = 0x9,ERR_IOTIMER = 0xA,};
typedef struct eucioc eucioc_t;
struct fb_unsat {unsigned int imp_index;};
typedef struct fc_arp fc_arp_t;
typedef struct _1B25F028D599AD6042D2472447206E6C fhandle3;
struct free_rtn {void ( *free_func)(char *);char *free_arg;};
enum fsh_mode {fsm_DN = 0x0,fsm_DR = 0x1,fsm_DW = 0x2,fsm_DRW = 0x3,};
typedef struct fswdevt fswdev_t;
typedef struct _BE733542885A402087DA3ED85C7943DF gc_dma_t;
struct hid_1024 {unsigned char b[1024];};
struct hpib_cmd {int length;char buffer[100];};
typedef struct _E26EDD987AC6C35C9CCBF3E22FD45642 hpib_fmt;
typedef struct hw_ift hw_ift_t;
typedef struct _73F4BB55DF18F0BF9735C1FEF6B6A448 idinfo_t;
typedef struct ifinfo_s ifinfo_t;
typedef int intptr_t;
typedef struct _933190A6409BACA455C7408AF15FB423 io_map_t;
struct iodetail {char mode;char terminator;int count;char *buf;};
typedef struct irinfo_s irinfo_t;
struct jwinsize {char bytesx;char bytesy;short bitsx;short bitsy;};
typedef union _kcaddr kcaddr_t;
typedef struct kd_fd2 kd_fd2_t;
typedef union _kgaddr kgaddr_t;
typedef struct ki_iovec32 kiov32_t;
typedef struct ki_iovec64 kiov64_t;
typedef unsigned short krecid_t;
typedef unsigned short krecsz_t;
typedef struct lkinfo lkinfo_t;
typedef int mc_xid_t;
typedef struct _FE9EBC63235A93018F05467EFFA60454 mem_type;
typedef struct _797C48E4377D7A637C94D50E6E2A2705 method_t;
struct mod_mreg {char md_modname[15];void *md_typedata;};
struct mod_path {int num_elements;char *mod[14];};
struct mod_type {unsigned int mtype;};
enum msg_type {CALL = 0x0,REPLY = 0x1,};
enum name_pos {SAME_NAME = 0x0,HIGHER_NAME = 0x1,LOWER_NAME = 0x2,NOT_SEQUENTIAL = 0x3,BAD_NAME = 0x4,};
typedef char *nis_name;
struct pam_conv {int ( *conv)(int, struct pam_message **, struct pam_response **, void *);void *appdata_ptr;};
struct pathname {char *pn_buf;char *pn_path;int pn_pathlen;};
typedef struct _358F6377A75B2BC24E0856391D2F801A pda_type;
typedef struct _prefix_t prefix_t;
struct protoent {char *p_name;char **p_aliases;int p_proto;};
struct psdrvnam {char psd_name[32];};
typedef struct _3D421AC204675DEEFF21F1F77CFC6EF9 rs_masks;
typedef struct _5167EADB868224F0F55FBEC36E2D90F1 runenv_t;
typedef unsigned short shmatt_t;
typedef struct __sigset_t sigset_t;
struct sigstack {void *ss_sp;int ss_onstack;};
typedef union sigval sigval_t;
enum skl_srch {SKL_SRCH_EXACT = 0x1,SKL_SRCH_EXACT_OR_NEXT = 0x2,};
typedef struct sknode sknode_t;
typedef struct _101ED56796A31C5C092EFC61C0F81522 smDieMsg;
struct sockaddr {unsigned short sa_family;char sa_data[14];};
struct sprayarr {int *data;int lnth;};
struct str_list {int sl_nmods;struct str_list__str_mlist *sl_modlist;};
struct stralive {int alive_major;int alive_max;};
struct strioctl {int ic_cmd;int ic_timout;int ic_len;char *ic_dp;};
typedef struct swpdbd swpdbd_t;
typedef unsigned int tcflag_t;
typedef struct _4A831D13E31F100E58B8A5F4F6C06639 tid_type;
struct timezone {int tz_minuteswest;int tz_dsttime;};
typedef struct tlabel tlabel_t;
struct tostruct {char *selfpc;int count;unsigned short link;unsigned char procindex;unsigned char spare;};
typedef struct _62D70C4681D5FDEED922723C39F7026E tur_type;
struct ufs_args {char *fspec;int flags;};
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
struct vnodeops;
typedef unsigned int wctype_t;
typedef struct _94C04A488373DB802AA4CC07AF27941B xBellReq;
typedef struct _54DAE81C1FDB4CAB14152B166C6055EB xHPEvent;
typedef struct _xKeyInfo xKeyInfo;
typedef struct _xSegment xSegment;
typedef struct _F1DC5359840258F1056D6AC9280CBC0A xTextElt;
typedef struct _xkbEvent xkbEvent;
typedef struct som_exec_auxhdr AOUTHDR;
typedef struct _C4D830AACD6CA9C030EA39190076ECCB *ArgList;
typedef char Boolean;
typedef struct _DFB242098A9806FF499E2A00C651AC7C ConvArr;
typedef struct _WidgetRec CoreRec;
typedef struct _DefTree DefTree;
typedef struct _XDisplay Display;
typedef struct _9BF61F8AD437FA790CCC153EAC25C4D7 Dl_info;
typedef struct _249E14B8BF24C4EA206EE45FEC486099 Element;
struct Elf_Scn;
typedef int Fd_mask;
typedef struct _FontSetRec *FontSet;
typedef struct _IceConn *IceConn;
typedef unsigned char KeyCode;
typedef unsigned int LineNum;
typedef struct _7A953307C4CBF8DC3B970A060657095E LineRec;
enum MACRO_A {A_NORMAL = 0x0,A_BLINK = 0x80000,A_BOLD = 0x200000,};
enum MACRO_B {B_SEMA_HTBL_SIZE = 64,};
enum MACRO_C {C_IRUSR = 0x100,C_IWUSR = 0x80,C_IXUSR = 0x40,C_IRGRP = 0x20,C_IWGRP = 0x10,C_IXGRP = 0x8,C_IROTH = 0x4,C_IWOTH = 0x2,C_IXOTH = 0x1,};
enum MACRO_D {D_T_FMT = 1,D_FMT = 2,T_FMT = 3,DAY_1 = 6,DAY_2 = 7,DAY_3 = 8,DAY_4 = 9,DAY_5 = 10,DAY_6 = 11,DAY_7 = 12,ABDAY_1 = 13,ABDAY_2 = 14,ABDAY_3 = 15,ABDAY_4 = 16,ABDAY_5 = 17,ABDAY_6 = 18,ABDAY_7 = 19,MON_1 = 20,MON_2 = 21,MON_3 = 22,MON_4 = 23,MON_5 = 24,MON_6 = 25,MON_7 = 26,MON_8 = 27,MON_9 = 28,MON_10 = 29,MON_11 = 30,MON_12 = 31,ABMON_1 = 32,ABMON_2 = 33,ABMON_3 = 34,ABMON_4 = 35,ABMON_5 = 36,ABMON_6 = 37,ABMON_7 = 38,ABMON_8 = 39,ABMON_9 = 40,ABMON_10 = 41,ABMON_11 = 42,ABMON_12 = 43,RADIXCHAR = 44,THOUSEP = 45,YESSTR = 46,NOSTR = 47,CRNCYSTR = 48,AM_STR = 53,PM_STR = 54,ERA_D_FMT = 61,CODESET = 62,YESEXPR = 72,NOEXPR = 73,T_FMT_AMPM = 74,ALT_DIGITS = 75,ERA = 76,ERA_D_T_FMT = 77,ERA_T_FMT = 78,};
enum MACRO_E {E_ILLEGAL_MSG = 1002,};
enum MACRO_F {F_DUPFD = 0,F_GETFD = 1,F_SETFD = 2,F_GETFL = 3,F_SETFL = 4,F_GETLK = 5,F_SETLK = 6,F_SETLKW = 7,F_GETOWN = 11,F_SETOWN = 12,};
enum MACRO_I {I_NREAD = 536892161,I_PUSH = 536892162,I_POP = 536892163,I_LOOK = 536892164,I_FLUSH = 536892165,I_SRDOPT = 536892166,I_GRDOPT = 536892167,I_STR = 536892168,I_SETSIG = 536892169,I_GETSIG = 536892170,I_FIND = 536892171,I_LINK = 536892172,I_UNLINK = 536892173,I_ISASTREAM = 536892174,I_PEEK = 536892175,I_FDINSERT = 536892176,I_SENDFD = 536892177,I_RECVFD = 536892178,I_FLUSHBAND = 536892179,I_SWROPT = 536892180,I_GWROPT = 536892181,I_LIST = 536892182,I_ATMARK = 536892183,I_CKBAND = 536892184,I_GETBAND = 536892185,I_CANPUT = 536892186,I_SETCLTIME = 536892187,I_GETCLTIME = 536892188,I_PLINK = 536892189,I_PUNLINK = 536892190,I_LINK_DEV = 536892191,I_PLINK_DEV = 536892192,I_WAKE_ONE = 536892193,I_WAKE_ALL = 536892194,I_GETMSG = 536892200,I_PUTMSG = 536892201,I_GETPMSG = 536892202,I_PUTPMSG = 536892203,I_PIPE = 536892204,I_FIFO = 536892205,I_ALTSTRTAB_ACTIVE = 536892210,I_ALTSTRTAB_FUTURE = 536892211,I_BACKENDTRACE_ACTIVE = 536892212,I_BACKENDTRACE_FUTURE = 536892213,I_STACKALIVE = 536892214,I_STR_ATTR = 536892220,I_PEEK_ATTR = 536892221,I_FDINSERT_ATTR = 536892222,I_SENDFD_ATTR = 536892223,I_RECVFD_ATTR = 536892224,I_GETMSG_ATTR = 536892225,I_PUTMSG_ATTR = 536892226,I_GETPMSG_ATTR = 536892227,I_PUTPMSG_ATTR = 536892228,I_SETCOW = 536892240,I_SETCOPYAVOID = 536892241,I_ASYNC_ACK = 536892242,I_ASYNC_ACK_NEW = 536892243,I_SET_XTI = 536892244,I_GET_STH_WROFF = 536892245,I_GET_STRMSGSZ = 536892246,I_GET_STRCTLSZ = 536892247,I_GET_PUSHCNT = 536892248,I_XTI_SND = 536893529,I_XTI_RCV = 536893530,};
enum MACRO_L {L_ctermid = 9,};
enum MACRO_M {M_MXFAST = 1,M_NLBLKS = 2,M_GRAIN = 3,M_KEEP = 4,M_BLOCK = 5,M_UBLOCK = 6,M_ENABLE_MMAP = 7,};
enum MACRO_N {N_PAGE_SIZES_SUPPORTED = 16,};
enum MACRO_O {O_RDONLY = 0x0,O_WRONLY = 0x1,O_RDWR = 0x2,O_ACCMODE = 0x3,O_CREAT = 0x100,O_TRUNC = 0x200,O_EXCL = 0x400,O_NOCTTY = 0x20000,};
enum MACRO_P {P_BEGIN = 0,P_DATA = 1,P_END = 2,MAXNODES = 3,};
enum MACRO_Q {Q_SW = 0x1,Q_HW = 0x2,Q_PSEUDO = 0x4,Q_DEVSW = 0x8,Q_SUBTREE = 0x10,Q_NEW = 0x20,Q_TRANS = 0x40,Q_GIO_INT = 0x80,Q_CONSOLE = 0x100,Q_ROOT = 0x200,Q_SWAP = 0x400,Q_DUMP = 0x800,Q_SAVE_CONF = 0x1000,Q_BOOT = 0x2000,Q_DYN_MAJOR = 0x4000,};
enum MACRO_R {R_PARISC_NONE = 0,R_PARISC_DIR32 = 1,R_PARISC_DIR21L = 2,R_PARISC_DIR17R = 3,R_PARISC_DIR17F = 4,R_PARISC_DIR14R = 6,R_PARISC_PCREL32 = 9,R_PARISC_PCREL21L = 10,R_PARISC_PCREL17R = 11,R_PARISC_PCREL17F = 12,R_PARISC_PCREL17C = 13,R_PARISC_PCREL14R = 14,R_PARISC_DPREL21L = 18,R_PARISC_DPREL14WR = 19,R_PARISC_DPREL14DR = 20,R_PARISC_DPREL14R = 22,R_PARISC_GPREL21L = 26,R_PARISC_GPREL14R = 30,R_PARISC_LTOFF21L = 34,R_PARISC_LTOFF14R = 38,R_PARISC_LTOFF14F = 39,R_PARISC_SETBASE = 40,R_PARISC_SECREL32 = 41,R_PARISC_BASEREL21L = 42,R_PARISC_BASEREL17R = 43,R_PARISC_BASEREL14R = 46,R_PARISC_SEGBASE = 48,R_PARISC_SEGREL32 = 49,R_PARISC_PLTOFF21L = 50,R_PARISC_PLTOFF14R = 54,R_PARISC_PLTOFF14F = 55,R_PARISC_LTOFF_FPTR32 = 57,R_PARISC_LTOFF_FPTR21L = 58,R_PARISC_LTOFF_FPTR14R = 62,R_PARISC_FPTR64 = 64,R_PARISC_FPTR32 = 65,R_PARISC_PCREL64 = 72,R_PARISC_PCREL22C = 73,R_PARISC_PCREL22F = 74,R_PARISC_PCREL14WR = 75,R_PARISC_PCREL14DR = 76,R_PARISC_PCREL16F = 77,R_PARISC_PCREL16WF = 78,R_PARISC_PCREL16DF = 79,R_PARISC_DIR64 = 80,R_PARISC_DIR14WR = 83,R_PARISC_DIR14DR = 84,R_PARISC_DIR16F = 85,R_PARISC_DIR16WF = 86,R_PARISC_DIR16DF = 87,R_PARISC_GPREL64 = 88,R_PARISC_GPREL14WR = 91,R_PARISC_GPREL14DR = 92,R_PARISC_GPREL16F = 93,R_PARISC_GPREL16WF = 94,R_PARISC_GPREL16DF = 95,R_PARISC_LTOFF64 = 96,R_PARISC_LTOFF14WR = 99,R_PARISC_LTOFF14DR = 100,R_PARISC_LTOFF16F = 101,R_PARISC_LTOFF16WF = 102,R_PARISC_LTOFF16DF = 103,R_PARISC_SECREL64 = 104,R_PARISC_BASEREL14WR = 107,R_PARISC_BASEREL14DR = 108,R_PARISC_SEGREL64 = 112,R_PARISC_PLTOFF14WR = 115,R_PARISC_PLTOFF14DR = 116,R_PARISC_PLTOFF16F = 117,R_PARISC_PLTOFF16WF = 118,R_PARISC_PLTOFF16DF = 119,R_PARISC_LTOFF_FPTR64 = 120,R_PARISC_LTOFF_FPTR14WR = 123,R_PARISC_LTOFF_FPTR14DR = 124,R_PARISC_LTOFF_FPTR16F = 125,R_PARISC_LTOFF_FPTR16WF = 126,R_PARISC_LTOFF_FPTR16DF = 127,R_PARISC_COPY = 128,R_PARISC_IPLT = 129,R_PARISC_EPLT = 130,R_PARISC_TPREL32 = 153,R_PARISC_TPREL21L = 154,R_PARISC_TPREL14R = 158,R_PARISC_LTOFF_TP21L = 162,R_PARISC_LTOFF_TP14R = 166,R_PARISC_LTOFF_TP14F = 167,R_PARISC_DTPMOD32 = 169,R_PARISC_LTOFF_DTPMOD21L = 178,R_PARISC_LTOFF_DTPMOD14R = 182,R_PARISC_LTOFF_DTPMOD14F = 183,R_PARISC_DTPREL64 = 208,R_PARISC_TPREL64 = 216,R_PARISC_TPREL14WR = 219,R_PARISC_TPREL14DR = 220,R_PARISC_TPREL16F = 221,R_PARISC_TPREL16WF = 222,R_PARISC_TPREL16DF = 223,R_PARISC_LTOFF_TP64 = 224,R_PARISC_LTOFF_TP14WR = 227,R_PARISC_LTOFF_TP14DR = 228,R_PARISC_LTOFF_TP16F = 229,R_PARISC_LTOFF_TP16WF = 230,R_PARISC_LTOFF_TP16DF = 231,R_PARISC_DTPMOD64 = 232,R_PARISC_LTOFF_DTPMOD64 = 240,R_PARISC_LTOFF_DTPMOD14WR = 243,R_PARISC_LTOFF_DTPMOD14DR = 244,R_PARISC_LTOFF_DTPMOD16F = 245,R_PARISC_LTOFF_DTPMOD16WF = 246,R_PARISC_LTOFF_DTPMOD16DF = 247,};
enum MACRO_S {S_ISUID = 0x800,S_ISGID = 0x400,S_IRWXU = 0x1C0,};
enum MACRO_T {T_LISTEN = 0x1,T_CONNECT = 0x2,T_DATA = 0x4,T_EXDATA = 0x8,T_DISCONNECT = 0x10,T_UDERR = 0x40,T_ORDREL = 0x80,T_GODATA = 0x100,T_GOEXDATA = 0x200,T_EVENTS = 0x400,};
enum MACRO_U {U_INFINITY = 0xFFFFFFFF,};
enum MACRO_W {W_IO = 0,W_SWAP = 1,W_PIO = 2,};
enum MACRO_X {X_PROTOCOL = 11,X_PROTOCOL_REVISION = 0,};
enum MACRO__ {__SIGINFO_PAD = 9,};
enum MACRO_e {e_fsel = 0,e_lssel = 1,e_rssel = 2,e_lsel = 3,e_rsel = 4,e_ldsel = 5,e_rdsel = 6,e_lrsel = 7,e_rrsel = 8,e_nsel = 9,};
enum MACRO_h {h_NETDB_INTERNAL = -1,h_NETDB_SUCCESS = 0,};
enum MACRO_i {i_exp14 = 0,i_exp21 = 1,i_exp11 = 2,i_rel17 = 3,i_rel12 = 4,i_data = 5,i_none = 6,i_abs17 = 7,i_milli = 8,i_break = 9,};
typedef short MrmCode;
typedef unsigned char MrmFlag;
typedef unsigned short MrmSize;
typedef short MrmType;
typedef unsigned char *Pointer;
typedef struct _RectObjRec *RectObj;
typedef struct __svcxprt SVCXPRT;
typedef struct _75FF7BAF524F34136E9A08BA8B6AF6C3 SXEvent;
typedef struct _SmcConn *SmcConn;
typedef struct _SmsConn *SmsConn;
typedef struct tli_tunables_s *TLITUSP;
typedef struct _TwoDInt *TwoDInt;
typedef struct _UDCArea *UDCArea;
typedef struct _VRotateRec *VRotate;
typedef struct _691123D744001B8BE68B84780CEE447C XChar2b;
typedef struct _488EF114463850BAC9987E879A5DF652 XDevice;
typedef struct _B5406AF633C6B856C397C3AA34CE31AC *XICCore;
typedef struct _CC4BA52553A26164E40F03C0211728AA *XIMCore;
typedef void ( *XIMProc)();
typedef struct _XIMText XIMText;
typedef struct _XLCd XLCdRec;
typedef struct _EE6A206AE82CDE40AD82C65471471AC6 *XOCCore;
typedef struct _XOMCoreRec *XOMCore;
typedef void ( *XOMProc)();
typedef struct _XcmsCCC *XcmsCCC;
typedef struct _DFC468A573BED393F8C22B677D1D24EF XcmsPad;
typedef struct _EBE355A101A506B8BB9BC1A4B6A6F5B0 XcmsRGB;
typedef struct _XlcConvRec *XlcConv;
typedef struct _2D6649CE8084355660672F56E64D6188 XpmInfo;
typedef struct _XtTMRec XtTMRec;
struct _PCI_ID {unsigned int device_id;};
struct __strs2 {char *__lab_f9;char *__meta_off;char *__meta_on;char *__newline;char *__pad_char;char *__prm_dch;char *__prm_delete_line;char *__prm_down_cursor;char *__prm_ich;char *__prm_index;char *__prm_insert_line;char *__prm_left_cursor;char *__prm_right_cursor;char *__prm_rindex;char *__prm_up_cursor;char *__pkey_key;char *__pkey_local;char *__pkey_xmit;char *__print_screen;char *__prtr_off;char *__prtr_on;char *__repeat_char;char *__reset_1string;char *__reset_2string;char *__reset_3string;char *__reset_file;char *__restore_cursor;char *__row_address;char *__save_cursor;char *__scrll_forward;char *__scrll_reverse;char *__set_attributes;char *__set_tab;char *__set_window;char *__tab;char *__to_status_line;char *__underline_char;char *__up_half_line;char *__init_prog;char *__ky_a1;char *__ky_a3;char *__ky_b2;char *__ky_c1;char *__ky_c3;char *__prtr_non;char *__mem_lock;char *__mem_unlock;char *__plab_norm;char *__labl_on;char *__labl_off;char *__ky_f11;char *__ky_f12;char *__ky_f13;char *__ky_f14;char *__ky_f15;char *__ky_f16;char *__ky_f17;char *__ky_f18;char *__ky_f19;char *__ky_f20;char *__ky_f21;char *__ky_f22;char *__ky_f23;char *__ky_f24;char *__ky_f25;char *__ky_f26;char *__ky_f27;char *__ky_f28;char *__ky_f29;char *__ky_f30;char *__ky_f31;char *__ky_f32;char *__ky_f33;char *__ky_f34;char *__ky_f35;char *__ky_f36;char *__ky_f37;char *__ky_f38;char *__ky_f39;char *__ky_f40;char *__ky_f41;char *__ky_f42;char *__ky_f43;char *__ky_f44;char *__ky_f45;char *__ky_f46;char *__ky_f47;char *__ky_f48;char *__ky_f49;char *__ky_f50;char *__ky_f51;char *__ky_f52;char *__ky_f53;char *__ky_f54;char *__ky_f55;char *__ky_f56;char *__ky_f57;char *__ky_f58;char *__ky_f59;char *__ky_f60;};
struct __strs3 {char *__ky_f61;char *__ky_f62;char *__ky_f63;char *__char_padding;char *__acs_chars;char *__ky_btab;char *__entr_xon_mode;char *__exit_xon_mode;char *__entr_am_mode;char *__exit_am_mode;char *__xon_character;char *__xoff_character;char *__ena_acs;char *__ky_beg;char *__ky_cancel;char *__ky_close;char *__ky_command;char *__ky_copy;char *__ky_create;char *__ky_end;char *__ky_enter;char *__ky_exit;char *__ky_find;char *__ky_help;char *__ky_mark;char *__ky_message;char *__ky_move;char *__ky_next;char *__ky_open;char *__ky_options;char *__ky_previous;char *__ky_print;char *__ky_redo;char *__ky_reference;char *__ky_refresh;char *__ky_replace;char *__ky_restart;char *__ky_resume;char *__ky_save;char *__ky_suspend;char *__ky_undo;char *__ky_sbeg;char *__ky_scancel;char *__ky_scommand;char *__ky_scopy;char *__ky_screate;char *__ky_sdc;char *__ky_sdl;char *__ky_select;char *__ky_send;char *__ky_seol;char *__ky_sexit;char *__ky_sfind;char *__ky_shelp;char *__ky_shome;char *__ky_sic;char *__ky_sleft;char *__ky_smessage;char *__ky_smove;char *__ky_snext;char *__ky_soptions;char *__ky_sprevious;char *__ky_sprint;char *__ky_sredo;char *__ky_sreplace;char *__ky_sright;char *__ky_srsume;char *__ky_ssave;char *__ky_ssuspend;char *__ky_sundo;char *__req_for_input;char *__clr_bol;char *__clear_margins;char *__set_left_margin;char *__set_right_margin;char *__labl_format;char *__set_clock;char *__display_clock;char *__remove_clock;char *__create_window;char *__goto_window;char *__hangup;char *__dial_phone;char *__quick_dial;char *__tone;char *__pulse;char *__flash_hook;char *__fixed_pause;char *__wait_tone;char *__user0;char *__user1;char *__user2;char *__user3;char *__user4;char *__user5;char *__user6;char *__user7;char *__user8;char *__user9;char *__orig_pair;};
struct __strs4 {char *__orig_colors;char *__initialize_color;char *__initialize_pair;char *__set_color_pair;char *__set_foreground;char *__set_background;char *__change_char_pitch;char *__change_line_pitch;char *__change_res_horz;char *__change_res_vert;char *__define_char;char *__entr_doublewide_mode;char *__entr_draft_quality;char *__entr_italics_mode;char *__entr_leftward_mode;char *__entr_micro_mode;char *__entr_near_letter_quality;char *__entr_normal_quality;char *__entr_shadow_mode;char *__entr_subscript_mode;char *__entr_superscript_mode;char *__entr_upward_mode;char *__exit_doublewide_mode;char *__exit_italics_mode;char *__exit_leftward_mode;char *__exit_micro_mode;char *__exit_shadow_mode;char *__exit_subscript_mode;char *__exit_superscript_mode;char *__exit_upward_mode;char *__micro_column_address;char *__micro_down;char *__micro_left;char *__micro_right;char *__micro_row_address;char *__micro_up;char *__order_of_pins;char *__prm_down_micro;char *__prm_left_micro;char *__prm_right_micro;char *__prm_up_micro;char *__select_char_set;char *__set_bottom_margin;char *__set_bottom_margin_parm;char *__set_left_margin_parm;char *__set_right_margin_parm;char *__set_top_margin;char *__set_top_margin_parm;char *__start_bit_image;char *__start_char_set_def;char *__stop_bit_image;char *__stop_char_set_def;char *__subscript_characters;char *__superscript_characters;char *__these_cause_cr;char *__zero_motion;char *__char_set_names;char *__ky_mouse;char *__mouse_info;char *__req_mouse_pos;char *__get_mouse;char *__set_a_foreground;char *__set_a_background;char *__pkey_plab;char *__device_type;char *__code_set_init;char *__set0_des_seq;char *__set1_des_seq;char *__set2_des_seq;char *__set3_des_seq;char *__set_lr_margin;char *__set_tb_margin;char *__bit_image_repeat;char *__bit_image_newline;char *__bit_image_carriage_return;char *__color_names;char *__define_bit_image_region;char *__end_bit_image_region;char *__set_color_band;char *__set_page_length;char *__display_pc_char;char *__entr_pc_charset_mode;char *__exit_pc_charset_mode;char *__entr_scancode_mode;char *__exit_scancode_mode;char *__pc_term_options;char *__scancode_escape;char *__alt_scancode_esc;char *__set_pglen_inch;char *__entr_horizontal_hl_mode;char *__entr_left_hl_mode;char *__entr_low_hl_mode;char *__entr_right_hl_mode;char *__entr_top_hl_mode;char *__entr_vertical_hl_mode;char *__set_a_attributes;char *__exit_horizontal_hl_mode;char *__exit_left_hl_mode;char *__exit_low_hl_mode;char *__exit_right_hl_mode;char *__exit_top_hl_mode;char *__exit_vertical_hl_mode;char *_Sentinel;};
typedef struct __xsi __xsi_t;
typedef struct alias alias_t;
typedef char boolean;
typedef struct broot broot_t;
typedef struct _3EAF45F1241314E792C746AFD18B3532 cchar_t;
typedef struct vfddbd chunk_t[32];
struct corehpa {char core_ioss_reset;char reserved1[31];char core_asp_version;char reserved2[31];char error_log;};
typedef unsigned int counter;
enum desmode {CBC = 0x0,ECB = 0x1,};
typedef char *dirpath;
typedef struct _BED8B740867CC68426DFEF7FC9B6CFFC dl_info;
typedef struct exportnode *exports;
struct fd_info {char state;char ba;char *cp;short pattern;char card_address;char reason;char addr;short temp;int dev;char card_type;struct sc_info *d_sc;};
typedef char fhandle[32];
typedef float float_t;
typedef struct fspri fspri_t;
struct fssinfo {int fssgrp;int fssdsh;int fssdly;};
typedef void *gaddr_t;
typedef struct __gate8 *gate8_t;
typedef struct _98C6CEFE241EF843C6088F142B2DB4C1 gc_8k_t;
typedef struct _horse horse_t;
struct hostent {char *h_name;char **h_aliases;int h_addrtype;int h_length;char **h_addr_list;};
struct hw_path {char first_index;char last_index;unsigned char addr[14];};
typedef struct __iconv_rec *iconv_t;
typedef struct _A698AA5F34587C763CE927E865551A1F id_type;
struct inquiry {unsigned char dev_type;unsigned int rdf;unsigned char added_len;unsigned char dev_class[3];char vendor_id[8];char product_id[16];char rev_num[4];unsigned char vendor_spec[20];unsigned char resv4[40];unsigned char vendor_parm_bytes[32];};
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
typedef int integer;
typedef union _5AD9887C12C1EBF5921BF16B8374B7B4 ioc_pad;
typedef unsigned int ip_addr;
typedef double jmp_buf[64];
typedef struct kd_fd kd_fd_t;
struct kdm_dll {struct kdm_dll *dll_next;struct kdm_dll *dll_prev;};
typedef struct kmemiov kmiov_t;
typedef struct ki_pk_state kpkst_t;
struct log_ctl {short mid;short sid;char level;short flags;int ltime;int ttime;int seq_no;};
struct lprstat {int status;};
struct ltchars {unsigned char t_suspc;unsigned char t_dsuspc;unsigned char t_rprntc;unsigned char t_flushc;unsigned char t_werasc;unsigned char t_lnextc;};
struct mq_attr {int mq_flags;int mq_maxmsg;int mq_msgsize;int mq_curmsgs;};
union name_pt {char *n_name;unsigned int n_strx;};
struct nc_hash {struct ncache *hash_next;struct ncache *hash_prev;};
struct ncstats {int hits;int misses;int long_enter;int long_look;int lru_empty;int purges;int probes;};
typedef int nl_catd;
typedef int nl_item;
struct nlist64 {char *n_name;char *n_qual;unsigned short n_type;unsigned short n_scope;unsigned int n_info;unsigned long long n_value;unsigned int reserved1;unsigned long long reserved2;unsigned long long reserved3;};
struct nmparms {unsigned int objid;void *buffer;unsigned int *len;};
typedef short optcode;
typedef unsigned int pagef_t;
typedef char passbuf[12];
typedef struct _physadr *physadr;
struct pollsth {void *sth;short events;short revents;};
struct pr_flag {unsigned short fg_pw_expire_warning;unsigned short fg_max_tries;unsigned short fg_secclass;};
struct promisc {int ( *func_ptr)();int data_ptr;struct promisc *next;};
struct pst_cmd {char s[64];};
typedef struct qband qband_t;
enum qfields {QHIWAT = 0x0,QLOWAT = 0x1,QMAXPSZ = 0x2,QMINPSZ = 0x3,QCOUNT = 0x4,QFIRST = 0x5,QLAST = 0x6,QFLAG = 0x7,QBAD = 0x8,};
typedef struct queue queue_t;
typedef struct _ED47D6A6F4BD19776B9FA2710E12A889 regex_t;
typedef struct _E8AE7D2799B28F177FB1DB3DC8745A46 req_idy;
struct sc_info {char mapped;char state;char card_type;};
struct sctl_io {unsigned int flags;unsigned int cdb_length;unsigned char cdb[16];void *data;unsigned int data_length;unsigned int max_msecs;unsigned int data_xfer;unsigned int cdb_status;unsigned char sense[256];unsigned int sense_status;unsigned int sense_xfer;unsigned int reserved[16];};
struct seminfo {int semmap;int semmni;int semmns;int semmnu;int semmsl;int semopm;int semume;int semusz;int semvmx;int semaem;};
struct sense_2 {unsigned int error_code;unsigned char seg_num;unsigned int key;unsigned char info[4];unsigned char add_len;unsigned int cmd_info;unsigned char code;unsigned char qualifier;unsigned char fru;unsigned char key_specific[3];unsigned char add_sense_bytes[113];};
struct servent {char *s_name;char **s_aliases;int s_port;char *s_proto;};
struct shminfo {int shmmax;int shmmin;int shmmni;int shmseg;};
typedef unsigned int skkey_t;
struct sm_name {char *mon_name;};
struct sm_stat {int state;};
typedef unsigned int speed_t;
typedef int ssize_t;
typedef struct __stack stack_t;
typedef struct _6C7AC434EA2B0F9E65955088C16EBFDA sxEvent;
struct termiox {unsigned short x_hflag;unsigned short x_cflag;unsigned short x_rflag[10];unsigned short x_sflag;};
typedef unsigned int timer_t;
typedef unsigned short u_short;
typedef unsigned char uchar_t;
typedef unsigned char uint8_t;
typedef unsigned int ulong_t;
struct utmparr {struct utmp **uta_arr;int uta_cnt;};
struct version {unsigned short date;unsigned short version;};
enum vfstype {VDUMMY = 0x0,VNFS = 0x1,VUFS = 0x2,VDEV_VN = 0x3,VNFS_SPEC = 0x4,VNFS_BDEV = 0x5,VNFS_FIFO = 0x6,VCDFS = 0x7,VVXFS = 0x8,VDFS = 0x9,VEFS = 0xA,VLOFS = 0xB,};
/// #define wchar_t  unsigned int ===DEFINED
typedef struct whpde whpde_t;
struct winsize {unsigned short ws_row;unsigned short ws_col;unsigned short ws_xpixel;unsigned short ws_ypixel;};
typedef struct _551F4F1EADB3AA2328EAA62400956C84 wvc_idy;
struct xti_rcv {int type;int error;int flags;int len;int len2;char *buf;char *buf2;};
enum zotypes {BOGUS_OBJ = 0x0,NO_OBJ = 0x1,DIRECTORY_OBJ = 0x2,GROUP_OBJ = 0x3,TABLE_OBJ = 0x4,ENTRY_OBJ = 0x5,LINK_OBJ = 0x6,PRIVATE_OBJ = 0x7,};
typedef struct _A22909F33B82A39C7E5AA204EADDB941 BKUPID;
typedef struct _44E50AEC2878F8A6376C06FA64195504 *BoxPtr;
typedef struct _44E50AEC2878F8A6376C06FA64195504 BoxRec;
typedef unsigned short CARD16;
typedef unsigned int CARD32;
typedef struct __client CLIENT;
typedef struct _DCCBCD2DBAB4B946C04EEC5F9CA143FE HEADER;
typedef struct msgb **MBLKPP;
typedef struct _OMDataRec *OMData;
typedef struct _ObjectRec *Object;
typedef struct _OutputRec *Output;
typedef struct _PCI_ID PCI_ID;
typedef struct _XRegion REGION;
typedef struct _03D5BB64BEC6FD91F45C473FB811595F Ranges;
typedef struct _XRegion *Region;
typedef struct __reserved_str2 SCREEN;
typedef struct _33B5CD23EE89AEDD139A13DDD9AD8157 Screen;
typedef unsigned int ShmSeg;
typedef struct _E99BC90019053CAF4DC18DC60688EDEF SmProp;
typedef char *String;
typedef struct tli_tunables_s TLITUS;
typedef unsigned long long UINT64;
typedef struct _FD02BCD3D36054250A4B3393D3E26B85 Visual;
typedef struct __reserved_str1 WINDOW;
typedef struct _WidgetRec *Widget;
typedef struct _86667C1762D2D3E70596A778BAFE84E4 XColor;
typedef union _XEvent XEvent;
typedef struct _XIC XICRec;
typedef struct _46BEE3D9F82F9FFCDCD1E95DB471038A XIMArg;
typedef struct _XIM XIMRec;
typedef struct _XImage XImage;
typedef struct _XOC XOCRec;
typedef struct _XOM XOMRec;
typedef struct _13C78DD7EDF1CF1C4AE9B0D54E891AA2 XPoint;
typedef struct _Xic XicRec;
typedef struct _Xim XimRec;
typedef struct _46BEE3D9F82F9FFCDCD1E95DB471038A XlcArg;
typedef unsigned char XtEnum;
typedef void (*XtProc)(void);
typedef struct _15DEA2B51142D972C402EED3BEFCD481 _Color;
typedef struct _90C6D76C8F7DA2A3EC6A739DF1FAFEF5 _FILEX;
enum _KI_ID {NO_PID = 0xFFFFFFFF,NO_TID = 0xFFFFFFFF,};
typedef struct _5AB76884A00AA1EBE6B998CE45DBA4C9 _SGTTY;
struct __strs {char *__back_tab;char *__bell;char *__carriage_return;char *__change_scroll_region;char *__clear_all_tabs;char *__clear_screen;char *__clr_eol;char *__clr_eos;char *__column_address;char *__command_character;char *__crsr_address;char *__crsr_down;char *__crsr_home;char *__crsr_invisible;char *__crsr_left;char *__crsr_mem_address;char *__crsr_normal;char *__crsr_right;char *__crsr_to_ll;char *__crsr_up;char *__crsr_visible;char *__dlt_character;char *__dlt_line;char *__dis_status_line;char *__down_half_line;char *__entr_alt_charset_mode;char *__entr_blink_mode;char *__entr_bold_mode;char *__entr_ca_mode;char *__entr_delete_mode;char *__entr_dim_mode;char *__entr_insert_mode;char *__entr_secure_mode;char *__entr_protected_mode;char *__entr_reverse_mode;char *__entr_standout_mode;char *__entr_underline_mode;char *__erase_chars;char *__exit_alt_charset_mode;char *__exit_attribute_mode;char *__exit_ca_mode;char *__exit_delete_mode;char *__exit_insert_mode;char *__exit_standout_mode;char *__exit_underline_mode;char *__flash_screen;char *__form_feed;char *__from_status_line;char *__init_1string;char *__init_2string;char *__init_3string;char *__init_file;char *__ins_character;char *__ins_line;char *__ins_padding;char *__ky_backspace;char *__ky_catab;char *__ky_clear;char *__ky_ctab;char *__ky_dc;char *__ky_dl;char *__ky_down;char *__ky_eic;char *__ky_eol;char *__ky_eos;char *__ky_f0;char *__ky_f1;char *__ky_f10;char *__ky_f2;char *__ky_f3;char *__ky_f4;char *__ky_f5;char *__ky_f6;char *__ky_f7;char *__ky_f8;char *__ky_f9;char *__ky_home;char *__ky_ic;char *__ky_il;char *__ky_left;char *__ky_ll;char *__ky_npage;char *__ky_ppage;char *__ky_right;char *__ky_sf;char *__ky_sr;char *__ky_stab;char *__ky_up;char *__kpad_local;char *__kpad_xmit;char *__lab_f0;char *__lab_f1;char *__lab_f10;char *__lab_f2;char *__lab_f3;char *__lab_f4;char *__lab_f5;char *__lab_f6;char *__lab_f7;char *__lab_f8;};
struct __undo {short un_aoe;short un_num;int un_id;};
typedef char *anyptr;
struct ar_hdr {char ar_name[16];char ar_date[12];char ar_uid[6];char ar_gid[6];char ar_mode[8];char ar_size[10];char ar_fmag[2];};
struct aux_id {unsigned int type;unsigned int length;};
struct b_sema {unsigned char b_lock;unsigned short order;struct b_sema__kthread *owner;};
typedef int bool_t;
struct bt_lsm {int lsm_flags;char lsm_fname[128];};
struct cblock {struct cblock *c_next;char c_first;char c_last;char c_data[26];};
typedef unsigned short comp_t;
struct cpu_id {unsigned int version;};
typedef struct ucred cred_t;
typedef struct datab dblk_t;
enum desdir {ENCRYPT = 0x0,DECRYPT = 0x1,};
struct devpri {struct devpri__swdevt *first;struct devpri__swdevt *curr;};
struct domain {int dom_family;char *dom_name;int ( *dom_init)();int ( *dom_externalize)();int ( *dom_dispose)();struct domain__protosw *dom_protosw;struct domain__protosw *dom_protoswNPROTOSW;struct domain *dom_next;};
typedef int enum_t;
struct eucioc {unsigned char eucw[4];unsigned char scrw[4];};
struct fb_exp {unsigned int exp_index;};
struct fd_set {int fds_bits[64];};
typedef unsigned int fenv_t;
typedef int fpos_t;
typedef struct free_rtn frtn_t;
struct g_regs {int start_reg;int count_reg;int reg_1;int reg_2;int reg_3;int reg_4;};
typedef struct __gate *gate_t;
typedef struct _AEFF3C6DC132B38AB545D5E72AF87AF0 glob_t;
typedef struct groupnode *groups;
typedef struct hpde hpde_t;
typedef struct _67E052DBE3D4216490A6D8B2745BB149 iceMsg;
typedef char int8_t;
typedef unsigned int ipaddr;
struct ipcmap {short m_size;unsigned short m_addr;};
typedef struct buf kbuf_t;
typedef char keybuf[48];
typedef struct ki_iovec kiov_t;
typedef struct ki_p_state kpst_t;
typedef unsigned short kspu_t;
typedef int ktid_t;
typedef struct ki_kt_state ktst_t;
typedef struct lockaction lact_t;
typedef struct _B8243ED19B76CA5D55F9F69ED1E7C09F ldiv_t;
struct linger {int l_onoff;int l_linger;};
struct lkinfo {char *lk_name;int lk_flags;int lk_pad[2];};
typedef struct lockmap lmap_t;
typedef struct lock lock_t;
struct loghdr {int h_pgrp;};
struct mapent {unsigned int m_size;unsigned int m_addr;};
typedef struct msgb mblk_t;
struct mntent {char *mnt_fsname;char *mnt_dir;char *mnt_type;char *mnt_opts;int mnt_freq;int mnt_passno;int mnt_time;unsigned short mnt_cnode;};
struct mtimer {unsigned short m_timers[6];};
struct nc_lru {struct ncache *hash_next;struct ncache *hash_prev;struct ncache *lru_next;struct ncache *lru_prev;};
struct netbuf {unsigned int maxlen;unsigned int len;char *buf;};
typedef unsigned int nfds_t;
enum nstype {UNKNOWN = 0x0,NIS = 0x1,SUNYP = 0x2,IVY = 0x3,DNS = 0x4,X500 = 0x5,DNANS = 0x6,XCHS = 0x7,CDS = 0x8,};
struct pollfd {int fd;short events;short revents;};
typedef struct prc_host *prcp_t;
typedef struct pregion preg_t;
struct rawarc {unsigned int raw_frompc;unsigned int raw_selfpc;int raw_count;};
typedef unsigned int rlim_t;
struct rpcent {char *r_name;char **r_aliases;int r_number;};
typedef short sbit16;
typedef struct sema sema_t;
struct sembuf {unsigned short sem_num;short sem_op;short sem_flg;};
struct sgttyb {char sg_ispeed;char sg_ospeed;char sg_erase;char sg_kill;int sg_flags;};
struct sigvec {void ( *sv_handler)(int);int sv_mask;int sv_flags;};
typedef unsigned int size_t;
struct status {char *mon_name;int state;char priv[16];};
typedef int stid_t;
struct strbuf {int maxlen;int len;char *buf;};
struct subc_t {int reserved1[4];int currquad_link;int currquad_cmd;int currquad_addr;int currquad_count;int reserved2[5];int stat;int ctrl;int reserved3;int subch_data[8];int reserved4[40];};
struct swpdbd {unsigned int dbd_swpmp;};
typedef struct swapmap swpm_t;
typedef struct swaptab swpt_t;
struct symbol {char sy_name[8];char sy_type;int sy_value;};
typedef struct sync sync_t;
struct syserr {int inodeovf;int fileovf;int textovf;int procovf;};
struct t_flag {unsigned short fg_login_timeout;};
struct tchars {char t_intrc;char t_quitc;char t_startc;char t_stopc;char t_eofc;char t_brkc;};
struct termio {unsigned short c_iflag;unsigned short c_oflag;unsigned short c_cflag;unsigned short c_lflag;char c_line;unsigned char c_cc[8];};
typedef unsigned int thresh;
typedef int time_t;
typedef unsigned char ttbm_t;
typedef unsigned char u_char;
typedef unsigned int u_long;
typedef unsigned short ubit16;
enum uio_rw {UIO_READ = 0x1,UIO_WRITE = 0x2,};
typedef struct user user_t;
typedef unsigned short ushort;
struct vtimes {int vm_utime;int vm_stime;unsigned int vm_idsrss;unsigned int vm_ixrss;int vm_maxrss;int vm_majflt;int vm_minflt;int vm_nswap;int vm_inblk;int vm_oublk;};
typedef unsigned int wint_t;
typedef struct _3B00234C5998E2ECB70FFF97A8C8B026 xDepth;
typedef struct _2A2BB2E6A1A637B547E2DF81ADC3376A xError;
typedef struct _xEvent xEvent;
typedef struct _xPoint xPoint;
typedef union _B20031452D9C70A13D819C8DDA3A0BA9 xReply;
enum xdr_op {XDR_ENCODE = 0x0,XDR_DECODE = 0x1,XDR_FREE = 0x2,};
typedef struct _E87A67B62710FC3E5EEA1F2EA7C46530 xieFlo;
typedef struct _A72D5FE34FE1565D7A5E27361D12995E xieReq;
typedef struct _149F28F052847359C6CBD46BA265755A yp_buf;
typedef struct _96216AEB16E52CBDB14746947C216623 BLKID;
typedef unsigned char CARD8;
typedef struct crash CRASH;
typedef struct _470449F8043B0E95436C3AE3811CEA11 Depth;
typedef struct entry ENTRY;
typedef unsigned int FdSet[8];
typedef short INT16;
typedef int INT32;
typedef struct _InputRec *Input;
typedef struct magic MAGIC;
typedef struct msgb *MBLKP;
typedef unsigned int Pixel;
typedef struct xti_state_s *XTISP;
typedef struct xauth Xauth;
typedef struct __XmTabRec *XmTab;
/// #define _Bool  unsigned int ===DEFINED
struct __sem {unsigned short semval;unsigned short sempid;unsigned short semncnt;unsigned short semzcnt;};
struct _quad {int val[2];};
typedef unsigned short bit16;
typedef unsigned int bit32;
typedef struct bootpent *bpp_t;
struct bufhd {int b_opaque;};
struct clist {int c_cc;struct clist__cblock *c_cf;struct clist__cblock *c_cl;};
typedef short cpu_t;
struct crash;
struct datab {unsigned char *db_base;unsigned char *db_lim;unsigned char db_ref;unsigned char db_type;short db_flag;unsigned int db_size;};
typedef struct _6E97B2E3219292CDC06EE790A6590157 datum;
typedef struct dbd dbd_t;
typedef struct _979FA3DE6ECCF956231BFC297C4278E6 div_t;
struct entry {char *key;void *data;};
struct fspri {struct fswdevt *first;struct fswdevt *curr;};
typedef struct fss fss_t;
struct fstab {char *fs_cspec;char *fs_spec;char *fs_file;char *fs_type;int fs_passno;int fs_freq;};
typedef unsigned int gauge;
struct hid_4 {unsigned char b[4];};
struct hil11 {unsigned char b[11];};
struct hil16 {unsigned char b[16];};
typedef unsigned int ino_t;
typedef union _kpc kpc_t;
typedef struct ki_proc_info kpi_t;
struct lconv {char *decimal_point;char *thousands_sep;char *grouping;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;char int_frac_digits;char frac_digits;char p_cs_precedes;char p_sep_by_space;char n_cs_precedes;char n_sep_by_space;char p_sign_posn;char n_sign_posn;};
struct lines {char *l_host;char *l_sys;char *l_dir;char *l_prefix;char *l_dev;char *l_peri;char *l_parm;char l_buf[100];};
struct lprio {short ind;short col;short line;short bksp;short open_ej;short close_ej;short raw_mode;};
struct magic {unsigned short system_id;unsigned short file_type;};
typedef unsigned int mflag;
struct minfo {int freemem;int freeswap;int vfault;int demand;int swap;int cache;int file;int pfault;int cw;int steal;int freedpgs;int unmodsw;int unmodfl;};
typedef int mqd_t;
struct my_id {char *my_name;int my_prog;int my_vers;int my_proc;};
struct nlist {char *n_name;char *n_qual;unsigned short n_type;unsigned short n_scope;unsigned int n_info;unsigned int n_value;};
typedef nis_object *obj_p;
typedef int off_t;
struct p_lle {struct p_lle__pregion *lle_next[4];struct p_lle__pregion *lle_prev;};
typedef struct pcb pcb_t;
struct ps2_4 {unsigned char b[4];};
typedef struct region reg_t;
typedef struct rpb rpb_t;
typedef char sbit8;
typedef struct _posix_sem sem_t;
typedef struct mapped_shl_entry *shl_t;
typedef struct skl skl_t;
typedef int spu_t;
struct swrev {unsigned int opt;};
struct tcmdq {unsigned short qtype;unsigned short qchan;unsigned short qlen;unsigned char qcntl;unsigned char qmode;int qaddr;};
typedef unsigned int u_int;
typedef unsigned char ubit8;
typedef unsigned int ulong;
typedef struct vas vas_t;
struct venom {int reserved0[32];int user_control;int span_count;int graphics_address;int reserved1;int zslope_fraction;int zslope_integer;int z_fraction;int z_integer;int reserved2[8];int blue_slope;int blue_color;int reserved3[2];int red_slope;int red_color;int reserved4[2];int green_slope;int green_color;int reserved5[966];int reserved6[32];int sup_control;int z_address;};
typedef union svfd vfd_t;
struct viper {int reserved1[9];int io_spa;int reserved2[22];int control;int status;int intr_word;int reserved3[13];int mem_control;int mem_write_chk_data;int mem_limit;int reserved4;int mem_err_word_0;int mem_err_word_1;int mem_err_check_byte;int mem_read_chk_data;int error_address;int reserved5[967];};
struct vnode {int v_opaque;};
enum vtype {VNON = 0x0,VREG = 0x1,VDIR = 0x2,VBLK = 0x3,VCHR = 0x4,VLNK = 0x5,VSOCK = 0x6,VBAD = 0x7,VFIFO = 0x8,VFNWK = 0x9,VEMPTYDIR = 0xA,};
struct whpde {unsigned int wpde_vaddr;unsigned int wpde_acword;unsigned int wpde_phys;unsigned int wpde_next;};
struct xauth {unsigned short family;unsigned short address_length;char *address;unsigned short number_length;char *number;unsigned short name_length;char *name;unsigned short data_length;char *data;};
typedef struct __auth AUTH;
typedef unsigned int Atom;
typedef struct _7B5944A022561F2F793FE21C0B5C7527 CALL;
typedef struct _DB90B039160079ECCA9FEE07AB98A9C7 FILE;
typedef signed char INT8;
typedef struct _7A953307C4CBF8DC3B970A060657095E *Line;
typedef unsigned int Mask;
typedef pmap PMAP;
typedef rpcb RPCB;
typedef unsigned int Time;
typedef unsigned short WORD;
typedef struct _3ACF1F82BEC6DEE83FE33E625399BBD7 XArc;
typedef struct _XLCd *XLCd;
typedef struct xti_state_s XTIS;
typedef unsigned int XmID;
typedef struct _XtTMRec *XtTM;
typedef unsigned char bit8;
typedef char bool;
typedef unsigned char cc_t;
struct eft2 {unsigned char b[2];};
struct eft4 {unsigned char b[4];};
struct eft5 {unsigned char b[5];};
struct gfsw {int ( *init)(struct isc_table_type *isc);int ( *diag)(struct buf *bp);};
struct hil2 {unsigned char b[2];};
struct hpde {unsigned int pde_space;unsigned int pde_executed;unsigned int pde_alias;struct hpde *pde_next;};
typedef struct ki_config kc_t;
typedef struct kd_struct kd_t;
typedef struct ki_runtimes kr_t;
typedef struct kd_syscall ks_t;
struct msgb {struct msgb *b_next;struct msgb *b_prev;struct msgb *b_cont;unsigned char *b_rptr;unsigned char *b_wptr;struct msgb__datab *b_datap;char *b_pad_osr;unsigned char b_band;unsigned char b_pad1;unsigned short b_flag;unsigned int b_quad[4];};
struct mtab {char m_path[32];char m_dname[32];char m_type[4];};
typedef char *name;
struct phdr {char *lpc;char *hpc;int ncnt;};
typedef unsigned int pl_t;
struct proc;
typedef struct _quad quad;
struct sque {char sq_exfil[140];char sq_infil[48];char sq_jobnm[9];char sq_pgrmr[25];char sq_jobno[9];char sq_login[9];char sq_homed[48];int sq_min;};
typedef unsigned int uint;
typedef struct _xArc xArc;
typedef struct _xReq xReq;
typedef struct _CBA5F02AFFC4EA4A3305BB276E7E8CDE xrgb;
typedef struct _C4D830AACD6CA9C030EA39190076ECCB Arg;
typedef struct _44E50AEC2878F8A6376C06FA64195504 BOX;
typedef struct _44E50AEC2878F8A6376C06FA64195504 Box;
typedef struct _1705DF5E8BDFFAFB7D4DA40F818A80C7 DBM;
typedef struct dir DIR;
struct Elf;
struct FTW {int base;int level;};
typedef struct _XIC *XIC;
typedef unsigned int XID;
typedef struct _XIM *XIM;
typedef struct _XOC *XOC;
typedef struct _XOM *XOM;
typedef struct _Xic *Xic;
typedef struct _Xim *Xim;
struct buf {int b_opaque;};
struct cnt {char *fnpc;int mcnt;};
struct dbd {unsigned int dbd_data;};
struct hdr {char *lpc;char *hpc;int nfns;};
struct map {struct map__mapent *m_limit;char *m_name;};
struct pcb {unsigned int pcb_r1;unsigned int pcb_r2;unsigned int pcb_r3;unsigned int pcb_r4;unsigned int pcb_r5;unsigned int pcb_r6;unsigned int pcb_r7;unsigned int pcb_r8;unsigned int pcb_r9;unsigned int pcb_r10;unsigned int pcb_r11;unsigned int pcb_r12;unsigned int pcb_r13;unsigned int pcb_r14;unsigned int pcb_r15;unsigned int pcb_r16;unsigned int pcb_r17;unsigned int pcb_r18;unsigned int pcb_r19;unsigned int pcb_r20;unsigned int pcb_r21;unsigned int pcb_r22;unsigned int pcb_r23;unsigned int pcb_r24;unsigned int pcb_r25;unsigned int pcb_r26;unsigned int pcb_r27;unsigned int pcb_r28;unsigned int pcb_r29;unsigned int pcb_r30;unsigned int pcb_r31;unsigned int pcb_sr0;unsigned int pcb_sr1;unsigned int pcb_sr2;unsigned int pcb_sr3;unsigned int pcb_sr4;unsigned int pcb_sr5;unsigned int pcb_sr6;unsigned int pcb_sr7;unsigned int pcb_cr0;unsigned int pcb_cr8;unsigned int pcb_cr9;unsigned int pcb_cr10;unsigned int pcb_cr11;unsigned int pcb_cr12;unsigned int pcb_cr13;unsigned int pcb_cr14;unsigned int pcb_cr15;unsigned int pcb_cr16;unsigned int pcb_cr17;unsigned int pcb_cr18;unsigned int pcb_cr19;unsigned int pcb_cr20;unsigned int pcb_cr21;unsigned int pcb_cr22;unsigned int pcb_cr23;unsigned int pcb_cr24;unsigned int pcb_cr25;unsigned int pcb_cr26;unsigned int pcb_cr27;unsigned int pcb_cr28;unsigned int pcb_cr29;unsigned int pcb_cr30;unsigned int pcb_cr31;unsigned int pcb_pc;unsigned int pcb_psw;unsigned int pcb_ipsw;unsigned int pcb_pcsqe;unsigned int pcb_pcoqe;unsigned int pcb_ksp;double pcb_fr0;double pcb_fr1;double pcb_fr2;double pcb_fr3;double pcb_fr4;double pcb_fr5;double pcb_fr6;double pcb_fr7;double pcb_fr8;double pcb_fr9;double pcb_fr10;double pcb_fr11;double pcb_fr12;double pcb_fr13;double pcb_fr14;double pcb_fr15;double pcb_fr16;double pcb_fr17;double pcb_fr18;double pcb_fr19;double pcb_fr20;double pcb_fr21;double pcb_fr22;double pcb_fr23;double pcb_fr24;double pcb_fr25;double pcb_fr26;double pcb_fr27;double pcb_fr28;double pcb_fr29;double pcb_fr30;double pcb_fr31;int *pcb_sswap;struct pcb__vfd *pcb_p0br;int pcb_p0lr;struct pcb__vfd *pcb_p1br;int pcb_p1lr;struct pcb__vfd *pcb_p2br;int pcb_p2lr;int pcb_sigc[3];int pcb_escapecode;struct pcb__C__trystuff *pcb_trychain;};
enum res {stat_succ = 0x0,stat_fail = 0x1,};
struct tcb {struct tcmdq *qstart;int qunload;int qload;int qsize;};
struct var {int v_buf;int v_call;int v_inode;char *ve_inode;int v_file;char *ve_file;int v_mount;char *ve_mount;int v_proc;char *ve_proc;int v_text;int v_region;int v_clist;int v_maxup;int v_hbuf;int v_hmask;int v_pbuf;int v_sptmap;int v_vhndfrac;int v_maxpmem;int v_autoup;int v_nofiles;int v_nqueue;int v_nstream;int v_nblk4096;int v_nblk2048;int v_nblk1024;int v_nblk512;int v_nblk256;int v_nblk128;int v_nblk64;int v_nblk16;int v_nblk4;};
struct vfd {unsigned int pg_pfnum;};
typedef struct _XGC *GC;
struct bf {int b_opaque;};
struct ha {int reg0;int eim_addr;int iodc_reg;int reserved1[6];int spa;int reserved2[2];int io_command;int io_status;int reserved3[2];int hpux_interrupt;int chain_ram_base;int sub_mask_clr;int sub_mask_set;int diagnostic;int reserved4;int io_dc_write;int *reset_address;int reset_data;};
struct tm {int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;};
struct nss_netdirbyaddr_in______402FC20F2F8747D95E943225C2B80849___88B30E819A32A7C5A2483FC60DF633B4 {char *addr;int len;int type;char *buf;size_t buflen;};
struct nss_netdirbyaddr_in______402FC20F2F8747D95E943225C2B80849___DD9D9706BCA1D99FBF05A97517CD2BD0 {int port;char *proto;char *buf;size_t buflen;};
struct nss_netdirbyname_in______58B5E3A38D045874A5B40B03A1AE9E77___8B20E58A3D17A0A03EA6A023703226E6 {char *name;char *proto;char *buf;size_t buflen;};
struct nss_netdirbyname_in______58B5E3A38D045874A5B40B03A1AE9E77___B1ACEB72480E629E65426FBD00A027EA {char *name;char *buf;size_t buflen;};
struct accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023___C081DE2363A7D6E022ACDA68492DBB3F {u_long low;u_long high;};
struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___27B715C20D2F6054C21148B7BC75D683 {struct load_module_desc *desc;size_t desc_size;};
struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___49AAFE459BE1D762B9EE49F5713033E8 {unsigned int startup_load;struct load_module_desc *desc;size_t desc_size;};
struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___A8892D7FDBBE71F5649C934073942EE6 {char *sym_name;struct load_module_desc *desc;size_t desc_size;};
struct rejected_reply___D36433C375B856769A86CDA2CFADE497___C081DE2363A7D6E022ACDA68492DBB3F {u_long low;u_long high;};
struct radix_node___CC52EDE493CB4C10BEB5E770D2F4C875___E90AF929005CC4DA938BE2E2A9208386 {uint32_t rn_L;uint32_t rn_R;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___0782806FB5FEE125636C30F93EC424E5 {CARD32 pad00;CARD32 time;CARD32 owner;CARD32 requestor;CARD32 selection;CARD32 target;CARD32 property;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___210E680417EC90CA260E4854A6751754 {CARD32 pad00;CARD32 parent;CARD32 window;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3F936A3A9A06092B5B70BD26A7DFD789 {CARD32 pad00;CARD32 event;CARD32 window;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___9E59406F0409BDE74EEED2CE1F683A76 {CARD32 pad00;CARD32 time;CARD32 requestor;CARD32 selection;CARD32 target;CARD32 property;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___B56843D1A807D13D0FEC0C0069626892 {CARD32 pad00;CARD32 time;CARD32 window;CARD32 atom;};
struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___801C7CA5DE79B723878F032CAF38D5B0 {u_int hc_walkcount;u_int hc_walklength;};
struct objdata___B3007D6063AF66DF722E8A0D3E39E00C___C5CA305DAC14A48247D92F909AB77E9C {u_int po_data_len;char *po_data_val;};
struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___C081DE2363A7D6E022ACDA68492DBB3F {u_long low;u_long high;};
struct ____D3782B7C0B6FCEFFEB5876E878B431ED___7BC4C9E2DA436E276E1C7B0AFF1E1BB3 {bit8 primary;bit8 secondary;};
union _0A5A2DC6F5DFEB19A95AB8D5777ED58E___F031A95ACFCBD1098C1A75B7F98C9502 {unsigned int related_nam;Boolean clobber_flg;};
struct _27E544B65E9C83BE0D136117478F1D06___9F80A07CA53E50C0896302A4F5D4F6CE {bit8 order;unsigned int exact;};
union _5BB4136DB11763AB16A801C866FA2FFA___10EE4F2AA25F27C7DA0CE69BF1A43F86 {uint32_t data;uint32_t addr;};
union _5BB4136DB11763AB16A801C866FA2FFA___4677EF6C4309B7A99408668B47D48789 {uint32_t data;uint32_t clear;};
union _5BB4136DB11763AB16A801C866FA2FFA___F0E530FF1DC6AE3DC880294D4D1C5140 {uint32_t in;uint32_t out;};
union _78DF8810A4494AE41997310F214AE739___4375D5A6E5CF2947662E7101211EFF8A {int int_info[4];bit8 byte_info[16];};
union _7CE23751FA90F89F4E8DC4D527FC30AB___4677EF6C4309B7A99408668B47D48789 {uint32_t data;uint32_t clear;};
union _7CE23751FA90F89F4E8DC4D527FC30AB___F0E530FF1DC6AE3DC880294D4D1C5140 {uint32_t in;uint32_t out;};
union _87DD1086F3DEF3641D7A72FDF168671B___976C4D09B735C238C10F32DEA4619B6C {aen_event_type aen_event;};
struct _99D5443F2C6554F8B5A9C5DC3E9406B8___6F851B7FD9227034FE5522CD2C548D71 {sbit8 error_num;sbit8 proc_num;short subsystem;};
union _A730944FA410AA8A66044A1D444ACA29___BA8CFCC0194ACA3351216723ACBFD289 {adapter_info_type adapter_info;};
union _F0735D304A48E71B4E554EB40B66D311___B850ACC67C3D860999BBD062D5651151 {uint64_t di_info;};
union _FDDC11B99A740F6C560F43496CC4347E___6F0ABD87CABB855EB3CAE2F10CF94E08 {u_int data;u_int clear;};
union _XIMStringConversionText___DE48A4CD3A06187C4ACE99002CF90FB4 {char *mbs;unsigned int *wcs;};
union nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547 {struct nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547___E109A5D6027DEB813545D8BF49E916D8 host;struct servent *serv;};
union nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2 {struct nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2___E109A5D6027DEB813545D8BF49E916D8 host;struct servent *serv;};
union cascade_extend_desc___1F3199D8593E8E8D5214453974E41A85 {unsigned char uv_rec_bytes[14];fl_volume_desc volume_rec;};
union cascade_extend_desc___3CE5E511DB73647918372162E9AC1B10 {unsigned char uv_hdr_bytes[18];fl_unit_desc unit_hdr;};
union cascade_extend_desc___6B6D73BDC397005463F1A37C7D8B56B0 {unsigned char ctrl_hdr_bytes[16];cascade_cntrl_desc ctrl_hdr;};
struct r_rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D {u_int args_len;char *args_val;};
struct r_rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB {u_int results_len;char *results_val;};
struct rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D {u_int args_len;char *args_val;};
struct rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB {u_int results_len;char *results_val;};
struct _75F7E626134BF34BF20657FC27D19BCE___OldXSizeHints {int flags;int x;int y;int width;int height;int min_width;int min_height;int max_width;int max_height;int width_inc;int height_inc;struct ____OldXSizeHints___CDF557A927ED2BFF93B09908D4EFCA76 min_aspect;struct ____OldXSizeHints___CDF557A927ED2BFF93B09908D4EFCA76 max_aspect;};
struct directory_obj___1F9DB6EC5B4D38C4C9C3429D1A4D637D {u_int do_servers_len;nis_server *do_servers_val;};
struct directory_obj___C1C9E10248BAA10524C7D0EEA27D2609 {u_int do_armask_len;oar_mask *do_armask_val;};
struct icmp___13995140954385B7F735AD5DF5EAA771__ih_pmtu {u_short ih_unused;u_short ih_next_hop_mtu;};
struct p_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D {u_int args_len;char *args_val;};
union dma_A_buflet___7D706FA385198EE6A426E4F07D145E83 {struct dma_A_buflet *link;u_char mem[64];};
union export_entry___1D13F0CFF919C64F9EE8456357D92C7A {int size;struct misc_info misc;};
union fb_dynam_rel___7A5240DA174AE33C5B0D26713AD4FB53 {struct fb_exp exp_info;unsigned int value;};
struct mountres3_ok___F1D97EB055E5AF8E573F495D2D3F20C5 {u_int auth_flavors_len;int *auth_flavors_val;};
struct p_rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9 {u_int res_len;char *res_val;};
union __iconv_rec___915B2C925088933724D30EF59E8F3BAA {void *dptr;uint32_t flag;uint32_t state;};
struct nis_taglist___D5235F6F3B62BCE7910AF756FE53E6D0 {u_int tags_len;nis_tag *tags_val;};
struct rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D {u_int args_len;char *args_val;};
struct ib_request___284138CD61DEACF1E3B0F8ADC9D2B817 {u_int ibr_srch_len;nis_attr *ibr_srch_val;};
struct ib_request___2D577313DCD2E74CD5A0055993933E3C {u_int ibr_cbhost_len;nis_server *ibr_cbhost_val;};
struct ib_request___BC4F227684F3C8C9122828D0FF4C6B30 {u_int ibr_obj_len;nis_object *ibr_obj_val;};
struct log_result___946B3E427CBAEF2C8E64E80E43621ACD {u_int lr_entries_len;log_entry *lr_entries_val;};
struct nis_result___4B6B45C3F1C3815D68D653B8D499AE33 {u_int objects_len;nis_object *objects_val;};
struct nis_server___DA92845B88BF4FFBAAA2281E50DC5AF5 {u_int ep_len;endpoint *ep_val;};
struct ns_request___C16B7AFEC0429C3BD747A37F4D827FFD {u_int ns_object_len;nis_object *ns_object_val;};
struct rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9 {u_int res_len;char *res_val;};
struct des_block___DD2C0B234097C82BA23DADAC12E82EA1 {u_long high;u_long low;};
union desparams___F38C3328E965CE3ADB16864418918AD0 {u_char UDES_data[16];u_char *UDES_buf;};
struct dump_args___00C533AE8545A66FA38641508A3DC473 {u_int da_cbhost_len;nis_server *da_cbhost_val;};
struct entry_col___E942B815045DEE9FABC14DA0AE6314FC {u_int ec_value_len;char *ec_value_val;};
struct entry_obj___9954B692FACAC347CBA764979909DFF4 {u_int en_cols_len;entry_col *en_cols_val;};
struct fd_result___864956CB4DA79F92CA310E20E4E9B271 {u_int signature_len;char *signature_val;};
struct fd_result___E188DDB4946479B1B04909415F6D7A2E {u_int dir_data_len;char *dir_data_val;};
struct log_entry___1E639176190539C4AF5A837E820AE922 {u_int le_attrs_len;nis_attr *le_attrs_val;};
union sigaction___8EFABCF72131BCDD3C87705B82C94E7E {void ( *__sa_sigaction)(int, siginfo_t *, void *);void ( *__sa_handler)(int);};
struct table_obj___37F826B7C2AFF7B3E483E0E1EE89ED51 {u_int ta_cols_len;table_col *ta_cols_val;};
union _XIMText___8281806D2C2C5E9220BA18F83AF5F330 {char *multi_byte;unsigned int *wide_char;};
union fhstatus___5A86E21E7BD06EF982D138486E7C27D0 {fhandle fhs_fhandle;};
struct link_obj___6E2208C80A69EAD3D69988E63D048B29 {u_int li_attrs_len;nis_attr *li_attrs_val;};
struct nis_attr___F2081D9F3F0358B3A954C101A2B200CE {u_int zattr_val_len;char *zattr_val_val;};
struct statsvar___7FCA211C9072D2949954B3DB78BFDDCD {u_int cp_time_len;int *cp_time_val;};
struct statsvar___BB7C6D2B3C1E1AB741C949E9CDEFD86D {u_int dk_xfer_len;int *dk_xfer_val;};
struct unixcred___B86B6406BF4F2F34B5DC36D552B35DA0 {u_int gids_len;u_int *gids_val;};
struct reclock___08E871996A29648E8758F300DFC8D580 {int port;u_long xid;};
union ifaddr___0DF00F875CAF96EB397809642F17405E {struct sockaddr ifu_broadaddr;struct sockaddr ifu_dstaddr;};
union ncache___E7616DCF58B0AC3D0D6587849AC64B92 {struct ucred *cred;lock_t *vfs_ncache_lk;};
union region___2FADED55C95798441DEBE337753497DF {skl_t *r_un_pregskl;struct region___2FADED55C95798441DEBE337753497DF__pregion *r_un_pregion;};
struct _______7BC4C9E2DA436E276E1C7B0AFF1E1BB3 {bit8 primary;bit8 secondary;};
union GPIO___CD29CE3F9A5F74D2438ACA80101F6228 {struct GPIO___CD29CE3F9A5F74D2438ACA80101F6228___366513553158DE38125C184A44CDE853 byte;unsigned short word;};
union user___3B359A40351122B121A37E0734670C57 {struct user___3B359A40351122B121A37E0734670C57___C57B77E03EE9D788D67ADCD794C5AE6F u_rv;int r_off;int r_time;};
struct user___8801DF0D6A4608417C87B38E9E599B4F {void *uss_alternatesp;size_t uss_size;unsigned int uss_inuse;};
union ____4375D5A6E5CF2947662E7101211EFF8A {int int_info[4];bit8 byte_info[16];};
struct ____9F80A07CA53E50C0896302A4F5D4F6CE {bit8 order;unsigned int exact;};
struct _XIMPreeditStateNotifyCallbackStruct {XIMPreeditState state;};
struct _0021092ACCF2D90482BAA79C55566AD7 {bit8 halt_code;bit8 dsj_index;bit8 stat_hi_index;bit8 stat_lo_index;bit8 misc_hi_index;bit8 misc_lo_index;bit8 hpib_id_high;bit8 hpib_id_low;};
struct _003EE3AD25CF627DEE371096C69783B0 {anyptr comp_entry;};
struct _00528F88FA4F09990CF67B6DC7309796 {uint32_t dl_primitive;uint32_t dl_local_win;};
struct _00A32F37F5118E39F36657EE3717F2D7 {uint32_t dl_primitive;uint32_t dl_p_to;};
struct _01593098553202BCB9DBD5F27E6226E8 {int reason;XEvent *event;int set;};
struct _016F7086AC9B0DCA4201D7895BC24650 {unsigned int status;int int_status;unsigned short cmd_count;unsigned int cmdbuf_size;unsigned int inbuf_size;unsigned int outbuf_size;cmd_struct_t *cmdbuf;char *outbuf;char *inbuf;};
struct _028518915F7D7896123D89340F2F38F2 {bit8 halt_code;bit8 high_timeout_counter;bit8 low_timeout_counter;bit8 dsj_index_1;bit8 dsj_index_2;bit8 dsj_index_3;unsigned int hpib_id_bytes;};
struct _0826E4B532B0CD93EBA2471AF8AD5078 {uint32_t dl_primitive;uint32_t dl_stat_length;uint32_t dl_stat_offset;};
struct _094418222666B29D070F7EC8BDF6395B {uint32_t dl_primitive;uint32_t dl_originator;uint32_t dl_reason;};
struct _0C4BDC5C14F9FAF0AFA7E8A6E763419C {bit8 target;bit8 identify;};
struct _0D6E5C2D914B483D77C02330A0CE773D {int dot5StatsIfIndex;counter dot5StatsLineErrors;counter dot5StatsBurstErrors;counter dot5StatsACErrors;counter dot5StatsAbortTransErrors;counter dot5StatsInternalErrors;counter dot5StatsLostFrameErrors;counter dot5StatsReceiveCongestions;counter dot5StatsFrameCopiedErrors;counter dot5StatsTokenErrors;counter dot5StatsSoftErrors;counter dot5StatsHardErrors;counter dot5StatsSignalLoss;counter dot5StatsTransmitBeacons;counter dot5StatsRecoverys;counter dot5StatsLobeWires;counter dot5StatsRemoves;counter dot5StatsSingles;counter dot5StatsFreqErrors;};
struct _0E7037D642DE9D2DAA89F1F3B41CD110 {ip_addr Addr;int IfIndex;ip_addr NetMask;ip_addr BcastAddr;int ReasmMaxSize;};
struct _101576DA344DBD97547D314B31F9E1E3 {uint32_t dl_primitive;uint32_t dl_length;uint32_t dl_count;uint32_t dl_offset;};
struct _1168B6D6BD072B799143AF246A5E2670 {int flags;int x;int y;int width;int height;int min_width;int min_height;int max_width;int max_height;int width_inc;int height_inc;struct _1168B6D6BD072B799143AF246A5E2670___CDF557A927ED2BFF93B09908D4EFCA76 min_aspect;struct _1168B6D6BD072B799143AF246A5E2670___CDF557A927ED2BFF93B09908D4EFCA76 max_aspect;int base_width;int base_height;int win_gravity;};
struct _149F28F052847359C6CBD46BA265755A {u_int yp_buf_len;char *yp_buf_val;};
struct _14C4DC63A35B6E2FD67711EA9BA1C1B3 {XID control;int length;};
struct _16E1D217A39631E87E4135AB759C85E6 {unsigned char dont_retain_factory;bit8 interleave;};
struct _1705DF5E8BDFFAFB7D4DA40F818A80C7 {int dbm_dirf;int dbm_pagf;int dbm_flags;int32_t dbm_maxbno;int32_t dbm_bitno;int32_t dbm_hmask;int32_t dbm_blkptr;int dbm_keyptr;int32_t dbm_blkno;int32_t dbm_pagbno;char dbm_pagbuf[1024];int32_t dbm_dirbno;char dbm_dirbuf[4096];};
struct _172CE1DA88C1EF8BB2AB85F8454FFEFC {ip_addr LocalAddress;short LocalPort;};
struct _1801593F65176DF1DA4677E119FA0B5C {unsigned int width;unsigned int height;unsigned int cpp;unsigned int ncolors;XpmColor *colorTable;unsigned int *data;};
struct _1B25F028D599AD6042D2472447206E6C {u_int fhandle3_len;char *fhandle3_val;};
struct _1C989109A1E2AFEC30347169F1D74F63 {XcmsFloat u_prime;XcmsFloat v_prime;XcmsFloat Y;};
struct _1D277D18401E135FB6951F8B86FCCB69 {uint32_t dl_primitive;uint32_t dl_flag;uint32_t dl_dest_addr_length;uint32_t dl_dest_addr_offset;uint32_t dl_src_addr_length;uint32_t dl_src_addr_offset;};
struct _1D8FF03A3D397B153C31EC45F7CFB27B {short logch_num;bit8 fcode;bit8 dev_id;short dap_length;};
struct _1DA914B8AB142FCB959C2D9AF0891F55 {int my_opcode;int my_auth_count;int *my_auth_indices;int auth_active;char my_auth_index;IcePointer my_auth_state;};
struct _21AD2773B4EF3639ECA7EA03A86E1290 {Time time;int *data;};
struct _2216C948A4897CE5697307886BBC772A {char *as_name;size_t as_off;unsigned int as_hash;};
struct _2448E62F5430D1C3997F8F16286DC850 {short logch_num;bit8 fcode;bit8 dev_id;};
struct _24B457447694156ACAE248300D57FA49 {CARD8 class;CARD8 event_type_base;};
struct _257708480E694070BE2FEFA543B5E05B {XID class;int length;XID id;int led_mask;int led_values;};
struct _26CCD8212792FCB317923F27ED2E42C1 {uint32_t dl_primitive;uint32_t dl_token;};
union _27E544B65E9C83BE0D136117478F1D06 {int cio_cmd;struct _27E544B65E9C83BE0D136117478F1D06___9F80A07CA53E50C0896302A4F5D4F6CE u;};
struct _2B984BA6A93DC72E5B9A509864FD0EBE {uint32_t dl_primitive;uint32_t dl_subs_sap_offset;uint32_t dl_subs_sap_length;};
struct _2CACF028C2AAD0539EADF3383FC56D98 {int ymax;int ymin;ScanLineList scanlines;};
struct _2D417E1C50B482279BADE9736A991855 {char nm_device[32];int nm_ppanum;u_int nm_ifindex;u_int nm_device_type;};
struct _2D6649CE8084355660672F56E64D6188 {unsigned int valuemask;char *hints_cmt;char *colors_cmt;char *pixels_cmt;unsigned int x_hotspot;unsigned int y_hotspot;unsigned int nextensions;XpmExtension *extensions;};
struct _2D6798695C6D5937015A42F87A43EF6F {char *buffer;size_t size;int signal;unsigned int max_concurrent;};
struct _2E0E2C12F04118C9E52BAE749EE378FF {XExtData *ext_data;int depth;int bits_per_pixel;int scanline_pad;};
struct _2EA2656FD07E452BFC8A303BAC941F0E {char *name;char *value;Pixel pixel;};
struct _2EA3893163DD9A8A0A06709C222EDBE7 {uint32_t dl_primitive;uint32_t dl_hw_status;};
struct _2EDAB78FCD79363D541BD4E7DC3907D7 {uint32_t dl_qos_type;int dl_trans_delay;int dl_priority;int dl_protection;int dl_residual_error;};
struct _2F56EA87C64E67B129920ADE5189D39C {uint32_t dl_primitive;uint32_t dl_ack_thresh;};
struct _3403786C5EE15D285179C38070580B61 {uint32_t dl_primitive;uint32_t dl_rej_to;};
struct _346B3FD68C26438FA8B69D57DEBF0D40 {ShmSeg shmseg;int shmid;char *shmaddr;int readOnly;};
union _369915EE1C7DFDD007AB874D1EA2C9E1 {struct _369915EE1C7DFDD007AB874D1EA2C9E1___89204FF0ACC339210648FEBB897D4AF4 GP;int all;};
struct _389F741C4688F992C1DDC28AB9B68F46 {XcmsFloat red;XcmsFloat green;XcmsFloat blue;};
struct _3C1113B149FFAA5D64C1C5C2B316039A {uint32_t dl_primitive;uint32_t dl_max_sdu;uint32_t dl_min_sdu;uint32_t dl_addr_length;uint32_t dl_mac_type;uint32_t dl_reserved;uint32_t dl_current_state;int dl_sap_length;uint32_t dl_service_mode;uint32_t dl_qos_length;uint32_t dl_qos_offset;uint32_t dl_qos_range_length;uint32_t dl_qos_range_offset;uint32_t dl_provider_style;uint32_t dl_addr_offset;uint32_t dl_version;uint32_t dl_brdcst_addr_length;uint32_t dl_brdcst_addr_offset;uint32_t dl_growth;};
struct _3D2747B906FBDDB46B196214774699C1 {CARD32 clientResource;CARD32 nRanges;};
struct _3DDB46D984C469553E00D9B3BEA3349C {XcmsFloat x;XcmsFloat y;XcmsFloat Y;};
struct _3E84D1386F10E26A4E3E4F22FDD3C8B8 {int num_font;XFontStruct **font_struct_list;char **font_name_list;};
struct _3EA3A21D55B8CD98827DAEDDCCDF7183 {uint32_t dl_primitive;uint32_t dl_subs_sap_offset;uint32_t dl_subs_sap_length;uint32_t dl_subs_bind_class;};
struct _3FFE3EAEF4D725F3ECBF98A049FA4704 {uint32_t dl_primitive;uint32_t dl_buf_len;uint32_t dl_buf_off;};
struct _401C8EE3E2CA8F69EEB69EE66DAE6AE5 {mcast_list_t *hw_mcast;int mc_threshold;};
struct _42AB50CCE4DA10B1F65C2C09D80E775D {XID class;int length;XID id;int led_values;int led_mask;};
struct _43F66B9FAB512FEC0C912857172689FE {CARD32 fill;};
struct _4425769459ED4D02F39F849992AF4AF1 {Atom selection;Atom target;};
struct _447FC71AB694A71F5F8338F97A6324BE {int auth_active;char my_auth_index;IcePointer my_auth_state;};
struct _45DCCDFC0525EE913BAEBC241F6FB2DF {CARD32 name;CARD32 value;};
struct _46BEE3D9F82F9FFCDCD1E95DB471038A {char *name;XPointer value;};
struct _470449F8043B0E95436C3AE3811CEA11 {int depth;int nvisuals;Visual *visuals;};
struct _476054893965215BC30A46A434D1D847 {int reason;XEvent *event;int value;int pixel;};
struct _48974C792553FBFA318CEC22C625F222 {unsigned int size;XPointer addr;};
struct _48A0BCBFBE5BF4DD1FF757783C127908 {int reason;XEvent *event;int click_count;};
struct _4928972DC66A9F7C89D199795A4AF315 {Atom name;unsigned int card32;};
struct _4A831D13E31F100E58B8A5F4F6C06639 {cammsg_type *msg;cam_buffer *buffers;pquad_type *align_quads;int timer;int trn;int msgid;int wtc_buffer;short residues_freed;short abort;};
struct _4B1EB49994F06B7B2A2F262429ED5715 {int dot3CollIndex;int dot3CollCount;counter dot3CollFrequencies;};
struct _4C29AD0BCFB47FFEE01CCDA185D4E4DF {uint32_t dl_primitive;uint32_t dl_dest_addr_length;uint32_t dl_dest_addr_offset;uint32_t dl_src_addr_length;uint32_t dl_src_addr_offset;uint32_t dl_priority;uint32_t dl_service_class;};
struct _4D6CF402BE6604EF49AB6A1F1F900B99 {char match;String substitution;};
struct _4EC8E4A6CD67FCE8BB3EA802AF53C546 {short logch_num;bit8 fcode;bit8 dev_addr;short timeout_value;};
struct _4F5DD4B298D84184D3112873FE652EAB {int current_length;send_rec_type *start_buff_ptr;send_rec_type *current_buff_ptr;};
struct _50A8F2CBF9209E81C59E0189B8E8717A { char *ce_sym;_LC_weight_t ce_wgt;};
struct _54CFA59446578757670AC893D5443363 {uint32_t dl_primitive;uint32_t dl_sap;uint32_t dl_addr_length;uint32_t dl_addr_offset;uint32_t dl_max_conind;uint32_t dl_xidtest_flg;};
struct _58058F4C4926147A1BF935BBE1E04307 {Time time;short x;short y;};
struct _58330DD7ED50E0D1B016F20AC1EEBF6A {uint32_t dl_primitive;uint32_t dl_addr_length;uint32_t dl_addr_offset;};
struct _587F15487BC7F24AD565F67C2769F95D {uint32_t version;unsigned short magic;char whatstr[80];};
struct _5998CF11E98D176CA30EF973C8091161 {CARD16 count;CARD16 size;};
struct _6095BE840E1ACBC7B5AC7593428C37D9 {ip_addr Dest;int IfIndex;int Metric1;int Metric2;int Metric3;int Metric4;ip_addr NextHop;int Type;int Proto;int Age;ip_addr Mask;};
struct _61E2EBDBC07397AF1726E583C640F08F {bit8 target;bit8 identify;bit8 transfer_type;};
struct _64419251F3172C7227A52AC30EAD3C9D {int max_keypermod;KeyCode *modifiermap;};
struct _647FE789D073DDA1115A25D9160A600C {_LC_weight_t ss_act; char *ss_src; char *ss_tgt;};
struct _65610AF6115E0111CBDC28EBD9EDA308 {int read_prop_index;mt_property_type read_prop;};
struct _665F1ADE1952A58E13B5D78D0B8A3255 {VisualID visual;int depth;int perflevel;};
struct _67680BE24F0D27FD73CC311486674C45 {uint32_t dl_primitive;uint32_t dl_originator;uint32_t dl_reason;uint32_t dl_correlation;};
struct _6811173A84BC2A7BD051BD3683D47430 {uint32_t dl_primitive;uint32_t dl_correlation;uint32_t dl_src_addr_length;uint32_t dl_src_addr_offset;};
struct _6891B45CD5C184FEB200E38CDC4FE1A6 {XID control;int length;int first_valuator;int num_valuators;int *resolutions;};
struct _69A7D2DDFB50C675CD41E5682D0C8DC9 {uint32_t dl_primitive;uint32_t dl_addr_type;};
struct _6A5D08A78EDB5A9C1147C38C7EB4CE9D {unsigned char flags;Dimension old_width;};
struct _6BA9BAD34CD581FCA2A7610248080448 {XRectangle max_ink_extent;XRectangle max_logical_extent;};
struct _6CDBBC56673808DBC2DA2091B1C251E0 {XcmsFloat X;XcmsFloat Y;XcmsFloat Z;};
struct _6E603A4D6E053F4C38E194015FCDFC50 {Widget transient_for;};
struct _6E97B2E3219292CDC06EE790A6590157 {char *dptr;size_t dsize;};
struct _701AB287855708548E3A9E6D7A33E099 {bit8 hw_identification[32];};
struct _7215FCA21C9177221950E694BDF162F7 {XID class;int length;XID id;int percent;int pitch;int duration;};
struct _73976483F74B7ACC860B7B84A6B492A9 {bit8 pda_dap[107];};
struct _754617B2EE88B16E3A92B4EAD52B067C {uint32_t dl_primitive;uint32_t dl_error_primitive;uint32_t dl_errno;uint32_t dl_unix_errno;};
struct _757904A2A8E77653612A3CA900C4F2B1 {bit8 scsi_id;bit8 data_width;unsigned char reserved;};
struct _75A97C15B47FD417587C5C65E341B79B {char *addr;size_t size;int lock;};
struct _75E019FCB4A579099C3FEBED6B229425 {CARD8 class;CARD8 length;CARD8 num_valuators;CARD8 mode;};
struct _7768503639F77374B09C8CE2FF45E7E1 {Widget shell_widget;Widget enable_widget;};
struct _77F664D03ADE3D590F095E54D295E163 {XID class;int length;XID id;int accelNum;int accelDenom;int threshold;};
struct _78DF8810A4494AE41997310F214AE739 {int event;union _78DF8810A4494AE41997310F214AE739___4375D5A6E5CF2947662E7101211EFF8A u;};
struct _7B5944A022561F2F793FE21C0B5C7527 {struct termio *attr;int32_t baud;int32_t speed;char *line;char *telno;int32_t modem;char *device;int32_t dev_len;};
struct _7B88B4ABA479AD4CDA761A68FBF6E1B3 {uint32_t dl_primitive;uint32_t dl_correlation;uint32_t dl_called_addr_length;uint32_t dl_called_addr_offset;uint32_t dl_calling_addr_length;uint32_t dl_calling_addr_offset;uint32_t dl_qos_length;uint32_t dl_qos_offset;uint32_t dl_growth;};
struct _7BE28D0082C4485E6C4D391E690D11AD {bit8 target;bit8 identify;bit8 tag;bit8 abort_type;};
struct _7BF2DDE055D8F1EE7B3AFF0D2575C61C {uint32_t dl_primitive;uint32_t dl_ppa;};
struct _7D99224004BCC92994234E51C52C480E {anyptr hpa;};
struct _7ED2C0F08B69F76F0C0AC87A8A72CD48 {bit8 device_number;bit8 event_info;int event_detail;};
struct _7EF5F1BDBA3A4538E26771909C573877 {char *transportname;int ( *config)(Xim, char *);};
struct _82207ABABC4EB421AD27F9EAB2AF6BD5 {VisualID visualid;int max_buffers;int depth;};
struct _82EEF83FACFC8220E9483994E0DE4841 {XID class;int length;XID id;int int_to_display;};
struct _82FDC3B738EB124BDE7E441D9AE5DEF7 {int dot3StatsIndex;counter dot3StatsAlignmentErrors;counter dot3StatsFCSErrors;counter dot3StatsSingleCollisionFrames;counter dot3StatsMultipleCollisionFrames;counter dot3StatsSQETestErrors;counter dot3StatsDeferredTransmissions;counter dot3StatsLateCollisions;counter dot3StatsExcessiveCollisions;counter dot3StatsInternalMacTransmitErrors;counter dot3StatsCarrierSenseErrors;counter dot3StatsFrameTooLongs;counter dot3StatsInternalMacReceiveErrors;counter dot3StatsExcessCollisions;counter dot3StatsControlFieldErrors;counter dot3StatsMulticastsAccepted;};
struct _8385AD6390D9A75B3D83C4736A467DB2 {int add_prop_index;mt_property_type add_prop;};
struct _83A32DBCC5475A0421ADD26B5424DCBB {uint32_t dl_primitive;uint32_t dl_level;};
struct _85A38AD8457FB66A4E5490FCDC48446B {uint32_t dl_primitive;uint32_t dl_ack_to;};
struct _87DD1086F3DEF3641D7A72FDF168671B {int event;union _87DD1086F3DEF3641D7A72FDF168671B___976C4D09B735C238C10F32DEA4619B6C u;};
struct _8E967F7BF7D653C298E7010DBC578B10 {XmTextPosition from;XmTextPosition to;};
struct _8EC64436A5F83D08A6231CF287719D89 {uint32_t dl_primitive;uint32_t dl_length;uint32_t dl_offset;};
struct _8ECAECA30B9B3465E00D93779597B662 {char *name;uint32_t mask;};
struct _92CA70A8DAB41318563B485CCB4742EF {short logch_num;bit8 fcode;bit8 termination;int data_len;bit8 dev_id;bit8 mt_motion_cmd;};
struct _936597F541877A62AE01CB1244CDD3B4 {int return_length;data_ptr_type return_buff;};
struct _937DB4F83893A6A1F82E1079494CB89A {XID class;int length;XID id;int click;int percent;int pitch;int duration;int led_mask;int global_auto_repeat;char auto_repeats[32];};
struct _94BF806C559D86C3BE5778D3957648AF {dma_A_trs_type trs[32];};
struct _96216AEB16E52CBDB14746947C216623 {char type[4];char last[4];char magic[12];char checksum[12];};
struct _9743F85D02716D406869F0C3FAA8980C {uint32_t dl_primitive;uint32_t dl_correlation;uint32_t dl_dest_addr_length;uint32_t dl_dest_addr_offset;uint32_t dl_src_addr_length;uint32_t dl_src_addr_offset;uint32_t dl_priority;uint32_t dl_service_class;};
struct _9752589AB8932AA797ECA0639922ADEB {int ( *checkprocessing)(Xim im);int ( *im_open)(Xim im);void ( *im_free)(Xim im);};
struct _991DB0B5CB0892F70B164889AA9E2739 {CARD16 first;CARD16 last;};
union _99D5443F2C6554F8B5A9C5DC3E9406B8 {int is_ok;struct _99D5443F2C6554F8B5A9C5DC3E9406B8___6F851B7FD9227034FE5522CD2C548D71 u;};
struct _9BF8B7FEFB40FCC7DC4E4D2CF29B580F {uint32_t io_err_sadd;uint32_t io_err_info;uint32_t io_err_madd;uint32_t type_U_0;uint32_t io_dma_link;uint32_t io_dma_command;uint32_t io_dma_address;uint32_t io_dma_count;uint32_t type_U_1[8];};
struct _9C224668B7E64BE6AE9499E6FD772938 {char *chars;int nchars;int delta;XFontSet font_set;};
struct _9C384A9E423E8568FC322ED8773458C9 {CARD8 thresholdOrder;CARD8 pad[3];};
struct _9F5B45B2D7EBF8D0E78555B7E3E45D4F {set_of_32 need;short frequency_of_envir;};
struct _A1FF3E4A410D43047E8695E29D7CC7B1 {int reason;XEvent *event;int value;};
struct _A248EFEFD6212257CAA664392076CE36 {int64_t tts_rval[2];int tts_errno;};
struct _A494BB2C12950076D57A9A446D5D8018 {bit8 hardware_list[64];unsigned char lower_level_exists;};
struct _A4FDF02C5281A2AFC802B6B07368BDDD {short __foreground;short __background;unsigned int __init;};
struct _A55EC71C5CB1FC4F12702587008E634D {unsigned int diag_opt;unsigned int hpib_timeout;unsigned int hpib_reg;data_ptr_type diag_data;unsigned int data_length;unsigned char wait_opt;unsigned char eoi_opt;};
struct _A698AA5F34587C763CE927E865551A1F {bit8 id_high;bit8 id_low;};
struct _A7DC40296C945E40AACCF86D5AC8BB16 {char *aen_info;mem_type mem;};
struct _A88F82F3855C63B78A51C35CB747714F {Modifiers mod;char *key;char *action;};
struct _A8C20F0262151BE7C4013A7A313500C7 {uint32_t dl_primitive;uint32_t dl_busy_to;};
struct _AAA5532226BFEC93AB8B8FBABECEF692 {XID class;int length;XID id;int resolution;int minVal;int maxVal;};
struct _AAB060B0944F50E5B6EB5012EC22DBB5 {uint32_t dl_primitive;uint32_t dl_flag;uint32_t dl_dest_addr_length;uint32_t dl_dest_addr_offset;};
struct _AB60AF79FB7B576B8100E7E8971F6A9B {uint32_t dl_primitive;uint32_t dl_resp_addr_length;uint32_t dl_resp_addr_offset;uint32_t dl_qos_length;uint32_t dl_qos_offset;uint32_t dl_growth;};
struct _ABE9B3A1FE09915A79192C7EFA47B9F6 {uint32_t dl_primitive;};
struct _ACACF89959AB7FA4D62A66E189D600C8 {ushort transport;ushort source;ushort destination;ushort invert;};
struct _AEFF3C6DC132B38AB545D5E72AF87AF0 {size_t gl_pathc;char **gl_pathv;size_t gl_offs;char *gl_mem;};
struct _B02CF172870B14D5C42349F673AF0676 {uint32_t dl_primitive;uint32_t dl_remote_win;};
struct _B0E46AD18445ECFB72CED3D5FBF58205 {bit8 target;bit8 identify;bit8 queue_depth;unsigned char reserved;};
struct _B3BB99D2BC4673D99925C9C5D2C08561 {unsigned char *value;Atom encoding;int format;unsigned int nitems;};
struct _B69421B732FABD6E5282386FE63B3F7C {unsigned int sequence_of_request;int major_opcode_of_request;int minor_opcode_of_request;IcePointer reply;};
struct _B73E16D481CC06015184D41F6368AD16 {CARD32 value;CARD32 count;};
struct _B7894D5E06F906915DCF2ADD1982514B {bit8 termination_conds;bit8 motion_cmd;unsigned int require_break;bit8 crc;};
struct _B84634216268FC336CDDC596960689CC {short util_opt;int util_len;data_ptr_type util_buff;};
struct _B98A3FFAF0CE02641AA237A8677CE1C6 {uint32_t reg[16];};
struct _BA3217064F767CDA4642029FE8B5FCDE {uint32_t dl_primitive;uint32_t dl_correlation;uint32_t dl_resp_token;uint32_t dl_qos_length;uint32_t dl_qos_offset;uint32_t dl_growth;};
struct _BD2C716F10DB95031F526D8F604B25D1 {CARD8 modify;CARD8 pad[3];};
struct _BD96F4C520841110C237EF8D06FD9BEE {int his_opcode;int my_opcode;int his_version_index;int my_version_index;char *his_vendor;char *his_release;char my_auth_index;IcePointer my_auth_state;int must_authenticate;};
struct _BED8B740867CC68426DFEF7FC9B6CFFC {int32_t dl_address;int32_t dl_count;};
struct _BF4B56A69C72B45AEF3FE8947B3D6067 {uint32_t word1;uint32_t word2;uint32_t word3;uint32_t word4;};
struct _C08EB97F95DBE201B07D804A019DEBC7 {XID class;int length;XID id;};
struct _C1B4A013CC5F946450FAD8622ABE0A9E {unsigned int *wcsptr;int length;};
struct _C3DB689D4FACB49150CE8263CEC530B6 {u_int db_next_desc_len;char *db_next_desc_val;};
struct _C4E976EB180D4B968178B983A0A1F774 {char *mdi_loadpath;char *mdi_savepath;uint64_t mdi_size;uint64_t mdi_checksum;};
struct _C5BFDAA02BA3AB920A890AC8E50E0348 {INT16 ax_num;INT16 ax_val;};
struct _C793BDCA50E1B4A63C4D2E25C3A778F6 {char *resource_name;XrmQuark xrm_name;int resource_size;int resource_offset;unsigned short mode;unsigned short id;};
struct _C7DCB3DE935305561D7C461D7E7A5D55 {uint32_t offset;uint32_t value;};
struct _CBA5F02AFFC4EA4A3305BB276E7E8CDE {CARD16 red;CARD16 green;CARD16 blue;CARD16 pad;};
struct _CCAEDA52B750854C25441FD25B4DA915 {XcmsFloat L_star;XcmsFloat a_star;XcmsFloat b_star;};
struct _CCFE153B660AB37B5EE7971165BA88F0 {char count;char status[64];};
struct _CD83A85CD196BF48717FD004BA96949B {short batch;short fd;char *buffer;int size;uint32_t offset;int rw;int id;};
struct _CE15CA8FCB6B9995A5D7B4D8593DCC23 {sym_entry_header_type header;char b_value[1];};
struct _CE366FE051068AE4B5DAF48358622BF9 {XID class;int length;XID id;int click;int percent;int pitch;int duration;int led_mask;int led_value;int key;int auto_repeat_mode;};
struct _CE59E3C5EE56110A29DE550B3F2828FF {uint32_t dl_primitive;uint32_t dl_dest_addr_length;uint32_t dl_dest_addr_offset;uint32_t dl_src_addr_length;uint32_t dl_src_addr_offset;uint32_t dl_group_address;};
struct _CE85B3FDED12F2C017F843E29D266AED {bit8 rps_time;bit8 rps_window;};
struct _D080768009F0DDB41B1C12762747A1D5 {uint32_t dl_primitive;uint32_t dl_mem_fails;uint32_t dl_queue_fails;uint32_t dl_ack_to;uint32_t dl_p_to;uint32_t dl_rej_to;uint32_t dl_busy_to;uint32_t dl_send_ack_to;uint32_t dl_ack_to_cnt;uint32_t dl_p_to_cnt;uint32_t dl_rej_to_cnt;uint32_t dl_busy_to_cnt;uint32_t dl_local_win;uint32_t dl_remote_win;uint32_t dl_i_pkts_in;uint32_t dl_i_pkts_in_oos;uint32_t dl_i_pkts_in_drop;uint32_t dl_i_pkts_out;uint32_t dl_i_pkts_retrans;uint32_t dl_s_pkts_in;uint32_t dl_s_pkts_out;uint32_t dl_u_pkts_in;uint32_t dl_u_pkts_out;uint32_t dl_bad_pkts;uint32_t dl_retry_cnt;uint32_t dl_max_retry_cnt;uint32_t dl_max_retries;uint32_t dl_ack_thresh;uint32_t dl_remote_busy_cnt;uint32_t dl_hw_req_fails;};
struct _D484A87E94E3DD0BB42E942E2185E2EE {XcmsFloat H;XcmsFloat V;XcmsFloat C;};
struct _D4FB496F61D4660631FE604D96639DD9 {int his_version_index;int my_version_index;char *his_vendor;char *his_release;char my_auth_index;IcePointer my_auth_state;int must_authenticate;};
struct _D90C9031D269F93C88B34E2B5464A64B {llio_status_type reply_status;};
struct _DA4C8A7C662E901D031392A43A7446A0 {int count;XdbeVisualInfo *visinfo;};
struct _DB64A8459715AF3CEFE23597C08B5967 {CARD16 control;CARD16 length;};
struct _DC015C62524E176FF119B9ED21E58D67 {uint32_t dl_primitive;uint32_t dl_reason;uint32_t dl_correlation;};
struct _DD1A60F664AD301361B26C5800787B5E {unsigned short count_styles;XIMStyle *supported_styles;};
struct _DD43D8CABB66A19A2E980F6986CCC925 {int reason;XEvent *event;};
struct _DD9D370D246BA69938C95BC6536EB146 {uint32_t dl_primitive;uint32_t dl_offset;uint32_t dl_length;uint32_t dl_count;};
struct _DFB242098A9806FF499E2A00C651AC7C {wint_t from;wint_t to;};
struct _DFB5DF0860CF2898E76F59605993FDC8 {unsigned int lastConfigureRequest;Boolean useAsyncGeometry;};
struct _DFC468A573BED393F8C22B677D1D24EF {XcmsFloat pad0;XcmsFloat pad1;XcmsFloat pad2;XcmsFloat pad3;};
struct _E0457597E4167E07E7B544A574F8E386 {Widget logicalParent;unsigned char extensionType;};
struct _E063BC797211A487A47BDB1CDDBC4CF7 {int page_number;Widget page_widget;Widget status_area_widget;Widget major_tab_widget;Widget minor_tab_widget;};
struct _E1260AB78985DBC228459590506E4C92 {size_t we_wordc;char **we_wordv;size_t we_offs;};
struct _E26EDD987AC6C35C9CCBF3E22FD45642 {short logch_num;bit8 fcode;bit8 termination;int data_len;bit8 dev_id;bit8 match_char;};
struct _E2EF1D76D67D374CE85643D9E7E9B7FB {llio_status_type llio_status;int ctrl_info;int extra_info;};
struct _E3B595AE48A6ED76A827239878338848 {int block_number;unsigned char end_block;bit8 cctl;};
struct _E4ABD7D5EA2E8D1C1EE8F507E91AEFB5 {uint32_t dl_primitive;uint32_t dl_qos_length;uint32_t dl_qos_offset;};
struct _E74415E298CED5C737EBED6687E120B3 {struct _E74415E298CED5C737EBED6687E120B3___FD81188420716845991C1281658F5667 port_module[16];};
struct _E87A67B62710FC3E5EEA1F2EA7C46530 {CARD16 elemType;CARD16 elemLength;};
struct _E8AA4611E972A29EE9197C1243BE1805 {port_num_type parent;port_num_type sibling;port_num_type child;int hdw_address;int drv_flags;int b_major;int c_major;char *drv_name;char *mod_name;char *class;void *reserved[6];};
struct _E8ACBD30146FEB9A0012F00D31FBC147 {port_num_type parent;port_num_type sibling;port_num_type child;int hdw_address;int mgr_index;int lu;int device_instance;int b_major;int c_major;char *manager;char *module;char *class;};
struct _E9462818A0BC0C67C7E517AB6B971B97 {CARD32 maxCells;};
struct _E95EE22F70665493872DBE0B8C8FD00B {uint32_t dl_primitive;uint32_t dl_correct_primitive;};
struct _E99BC90019053CAF4DC18DC60688EDEF {char *name;char *type;int num_vals;SmPropValue *vals;};
struct _E9DCEB596F8CCA4461C00F60A01329A5 {uint32_t dl_primitive;uint32_t dl_max_retries;};
struct _EA67C4467E5D392AEC3890F142F1A94F {XtPointer extension;};
struct _EA8C7CFFB417549A9149B8702E4079EF {uint32_t dl_primitive;uint32_t dl_dest_addr_length;uint32_t dl_dest_addr_offset;uint32_t dl_qos_length;uint32_t dl_qos_offset;uint32_t dl_growth;};
struct _EB73C50A98CF683D2F515C85045FD863 {uint32_t dl_primitive;uint32_t dl_correlation;uint32_t dl_status;};
struct _EBFCC0D8AA2B58B235FECAF898781E22 {CARD8 preference;CARD8 pad[3];};
struct _EC6FB11E4AF80479E38BABE612883A95 {short batch;short fd;char *buffer;int size;off_t offset;int rw;int id;};
struct _ECEF055F1F15BE69869EA69D3AF4F0F6 {int State;ip_addr LocalAddress;short LocalPort;ip_addr RemAddress;short RemPort;};
struct _ED47D6A6F4BD19776B9FA2710E12A889 {unsigned int __sys_id;void *__reg_expression;unsigned int __reserve;size_t re_nsub;unsigned int __reserve1[2];};
struct _EDB9F5A3CC951EB114C7B2D89D5CDEB5 {int dot5IfIndex;int dot5Commands;int dot5RingStatus;int dot5RingState;int dot5RingOpenStatus;int dot5RingSpeed;MACADDRESS dot5UpStream;int dot5ActMonParticipate;MACADDRESS dot5Functional;};
struct _EDF86E1F32B40B2525BDDB1BBC0182EA {bit8 termination_conds;bit8 matched_byte;bit8 crc;};
struct _EE12D2414CDDA42C8B5793FBD319E9EA {uint32_t lba;};
struct _EE3EAD23C079FD246783A616A7C4D4B9 {uint32_t driver_ops_type;uint32_t driver_ops_type_1;uint32_t driver_ops_type_2;};
struct _EF1440E4CA89662D977D4B051E2FFAB7 {XID control;int length;int num_valuators;int *resolutions;int *min_resolutions;int *max_resolutions;};
struct _EF304FE6BA47FBA4BF45C3CD79BE90AB {short timeout_value;bit8 crc;unsigned int transparent;};
struct _F06AD9A177A3544FA3D3B37EB204DD20 {short msg_descriptor;short message_id;int transaction_num;port_num_type from_port;};
struct _F1364925D1106E1F4B606AEA80BC0A8A {int enabled;int datum_flags;unsigned int nclients;XRecordClientInfo **client_info;};
struct _F2C3184CEEDD49A7FB665043E59AF1F0 {XcmsFloat L_star;XcmsFloat u_star;XcmsFloat v_star;};
union _F39950DA96355FC65F113612EFFBB47D {char *addr;uint32_t hndl;};
struct _F9A11BF5FCA53245437FD040CE8F0807 {CARD8 first;CARD8 last;};
struct _FAC60B21728E5FEF5C66DDB2CB35B5A5 {uint32_t dl_primitive;uint32_t dl_dest_addr_length;uint32_t dl_dest_addr_offset;uint32_t dl_unix_errno;uint32_t dl_errno;};
struct _FB5A8BA194301548D93F9DB8FD340388 {uint32_t dl_primitive;uint32_t dl_send_ack_to;};
union _FF8B0CD0CE02EB91C291149776E6F766 {unsigned int n[2]; unsigned int *p;};
typedef void ( *XmScrollFrameRemoveNavigatorProc)(Widget sf, Widget nav);
struct pdc_pat_mem_read_state_rtn_block {ulong_t actual_len;ulong_t reserved[31];};
struct pdc_sys_map_trans_path_rtn_block {u_long mod_addr;u_long mod_pgs;u_long add_addrs;u_long mod_index;u_long filler[28];};
struct _XmScrolledWindowConstraintPart {unsigned char child_type;Position orig_x;Position orig_y;};
struct pdc_pat_events_handle_rtn_block {ulong_t action_status;ulong_t reserved[31];};
struct pdc_pat_events_notify_rtn_block {ulong_t dest_io_sapic_addr;ulong_t dest_io_sapic_intin;ulong_t reserved[30];};
struct pdc_sys_map_find_addr_rtn_block {u_long mod_addr;u_long mod_pgs;u_long filler[30];};
typedef void ( *XmMenuSystemUpdateBindingsProc)(Widget, int);
struct _XmToggleButtonGadgetClassPart {XtPointer extension;};
struct pdc_sys_map_find_mod_rtn_block {u_long mod_addr;u_long mod_pgs;u_long add_addrs;u_long filler[29];};
typedef char *( *XmMenuSavvyGetAcceleratorProc)(Widget);
struct _XIMPreeditDrawCallbackStruct {int caret;int chg_first;int chg_length;XIMText *text;};
struct _XmArrowButtonGadgetClassPart {XtPointer extension;};
struct nfs_fh3__nfs_fh3_u__nfs_fh3_i {fhandle_t fh3_i;};
struct pdc_pat_events_scan_rtn_block {ulong_t which_event;ulong_t cont;ulong_t location;ulong_t data[5];ulong_t reserved[24];};
struct pdc_pat_pd_addr_map_rtn_block {ulong_t actual_len;ulong_t reserved[31];};
typedef CARD16 xieTypConvertFromRGBTechnique;
typedef int ( *XmAccessTextualPreferredProc)(Widget);
struct _XmPushButtonGadgetClassPart {XtPointer extension;};
struct pdc_pat_events_cap_rtn_block {ulong_t supported_events;ulong_t int_notify;ulong_t reserved[30];};
typedef Widget ( *XmMenuSystemPopupPostedProc)(Widget);
struct _XmSeparatorGadgetClassPart {XtPointer extension;};
struct _kregister__kregister_split {uint32_t high;uint32_t low;};
struct pdc_pat_cell_info_rtn_block {ulong_t cpu_info;ulong_t cell_info;ulong_t cell_location;ulong_t reo_location;ulong_t mem_size;ulong_t dimm_status;ulong_t pdc_rev;ulong_t fabric_info0;ulong_t fabric_info1;ulong_t fabric_info2;ulong_t fabric_info3;ulong_t reserved[21];};
typedef CARD16 xieTypConvertToRGBTechnique;
typedef XDeviceButtonEvent XDeviceButtonReleasedEvent;
struct _XmDefaultBindingStringRec {String vendorName;String defaults;};
struct _XmDialogShellExtClassPart {XtPointer extension;};
union pdc_model_cpu_id_rtn_block {int alignment;struct cpu_id rtn_block;};
struct pdc_pat_cell_mod_rtn_block {ulong_t count;ulong_t reserved[31];};
struct pdc_spaceid_bits_rtn_block {unsigned int reserved1;u_long filler[31];};
struct subspace_dictionary_record {int space_index;unsigned int reserved;int file_loc_init_value;unsigned int initialization_length;unsigned int subspace_start;unsigned int subspace_length;unsigned int alignment;union name_pt name;int fixup_request_index;unsigned int fixup_request_quantity;};
typedef CARD16 xieTypWhiteAdjustTechnique;
typedef XDeviceButtonEvent XDeviceButtonPressedEvent;
struct _XmIconGCacheObjClassPart {XtPointer extension;};
struct _XmNotebookConstraintPart {int page_number;unsigned char child_type;Boolean resizable;Boolean active;};
struct _XmSimpleSpinBoxClassPart {XtPointer extension;};
struct _XmTearOffButtonClassPart {String translations;};
struct pdc_hwtlb_parms_rtn_block {u_long min_size;u_long max_size;u_long filler[30];};
struct pdc_hwtlb_state_rtn_block {u_long state;u_long filler[31];};
struct pdc_pat_cpu_num_rtn_block {ulong_t cpu_num;ulong_t location;ulong_t reserved[30];};
struct pdc_pat_io_psba_rtn_block {ulong_t address;ulong_t reserved[31];};
struct pdc_pat_io_slot_rtn_block {ulong_t slot_status1;ulong_t slot_status2;ulong_t reserved[30];};
typedef CARD16 xieTypColorAllocTechnique;
typedef enum _81CB9C9397203DD8391907B26844B7B6 IceProcessMessagesStatus;
typedef Widget ( *XmGetContainerParentProc)(Widget);
struct _XmExcludedParentPaneRec {short pane_list_size;Widget *pane;short num_panes;};
struct _XmToggleButtonClassPart {XtPointer extension;};
struct crash_event_table_struct {int cet_reserved;ulong_t cet_hpa;int cet_event;struct crash_event_table_struct__rpb *cet_savestate;long long cet_start_itmr;long long cet_cur_itmr;};
struct pdc_btlb_parms_rtn_block {u_long min_size;u_long max_size;u_long fixed_range_info;u_long variable_range_info;u_long filler[28];};
struct pdc_capabilities_bitmask {u_int reserved;unsigned int serialize_calls;};
struct pdc_memory_map_rtn_block {u_int hpa;u_int more_pgs;};
struct pdc_pat_io_num_rtn_block {ulong_t num;ulong_t reserved[31];};
struct product_specific_aux_hdr {struct aux_id header_id;unsigned int key[1];};
struct symbol_dictionary_record {unsigned int arg_reloc;union name_pt name;union name_pt qualifier_name;unsigned int symbol_info;unsigned int symbol_value;};
typedef xSetMappingReply xSetModifierMappingReply;
typedef CARD16 xieTypConstrainTechnique;
typedef XDeviceKeyEvent XDeviceKeyReleasedEvent;
typedef void ( *XmDSMDestroyDSInfoTable)(XmDropSiteManagerObject);
typedef Widget ( *XmGetCallbackWidgetProc)(Widget);
struct _XcmsRegColorSpaceEntry {char *prefix;XcmsColorFormat id;};
struct _XmArrowButtonClassPart {XtPointer extension;};
struct _XmDrawnButtonClassPart {XtPointer extension;};
struct _XmManagerConstraintRec {XmManagerConstraintPart manager;};
struct _XmPanedWindowClassPart {XtPointer extension;};
struct _sym_def_obj_entry_type {sym_entry_header_type header;struct _sym_def_obj_entry_type *next;char b_object_info;char b_variant_info;};
typedef enum _kthread_create_caller kthread_create_caller_t;
typedef bit8 mgr_set_state_info_type;
struct pdc_mem_setgm_rtn_block {u_long filler[32];};
struct pdc_relocate_info_block {u_long pdc_size;u_long pdc_alignment;u_long pdc_address;u_long filler[29];};
struct pdc_sys_model_rtn_block {u_long mod_len;u_long filler[31];};
struct pdc_tod_calib_rtn_block {double it_freq;u_long todr_acc;u_long it_acc;u_long filler[28];};
struct space_dictionary_record {union name_pt name;unsigned int reserved2;int space_number;int subspace_index;unsigned int subspace_quantity;int loader_fix_index;unsigned int loader_fix_quantity;int init_pointer_index;unsigned int init_pointer_quantity;};
typedef xSetMappingReply xSetPointerMappingReply;
typedef CARD16 xieTypConvolveTechnique;
typedef CARD16 xieTypGeometryTechnique;
typedef enum _C9547D9B9E214CE5EBD681A7EEC38B08 IceProtocolSetupStatus;
typedef XDeviceKeyEvent XDeviceKeyPressedEvent;
typedef void ( *XmDSMCreateDSInfoTable)(XmDropSiteManagerObject);
typedef void ( *XmGeoExtDestructorProc)(XtPointer);
typedef void ( *XmMenuSystemDisarmProc)(Widget);
typedef int ( *XmMenuSystemWidgetProc)(Widget);
typedef void ( *XtCreatePopupChildProc)(Widget);
struct _XmFrameConstraintPart {int unused;unsigned char child_type;unsigned char child_h_alignment;Dimension child_h_spacing;unsigned char child_v_alignment;};
struct _XmIconHeaderClassPart {XtPointer extension;};
struct _XmPushButtonClassPart {XtPointer extension;};
struct _physical_descriptor_t {unsigned int designator;phys_desc_flags_t flags;};
struct _xkbOverlayKeyWireDesc {CARD8 over[4];CARD8 under[4];};
struct acl_entry_internal_lsb {unsigned char uid_byte3;unsigned char uid_byte4;unsigned char gid_byte3;unsigned char gid_byte4;aclmode_t mode;unsigned char uid_byte2;};
struct pat_cell_num_rtn_block {ulong_t cell_number;ulong_t cell_location;ulong_t reserved0;ulong_t reserved1;ulong_t filler[28];};
struct pat_mem_read_rtn_block {ulong_t pat_nbr_entries;ulong_t filler[31];};
struct pdc_iodc_clr_rtn_block {u_long stat;u_long sadd;u_long info;u_long madd;u_long filler[28];};
struct pdc_mem_info_rtn_block {u_long max_pdt_entries;u_long nbr_entries;unsigned int is;u_long lowest_dbe;u_long golden_mem;u_long filler[27];};
struct pdc_mem_read_rtn_block {u_long nbr_entries;u_long filler[31];};
struct pdc_nvm_size_rtn_block {u_long count;u_long filler[31];};
struct pdc_tod_time_rtn_block {u_long tod_sec;u_long tod_usec;u_long filler[30];};
typedef bit8 printer_ctrl_func_type;
typedef void ( *XlcCloseConverterProc)(XlcConv);
typedef void ( *XlcResetConverterProc)(XlcConv);
typedef unsigned char ( *XmSpecUnitTypeGetProc)(Widget wid);
typedef int ( *XmbTextEscapementProc)(XFontSet,  char *, int);
struct _XmScrollBarClassPart {XtPointer extension;};
struct _XmSeparatorClassPart {XtPointer extension;};
struct _XmTextFieldClassPart {XtPointer extension;};
struct _kcaddr__kcaddr_split {uint32_t high;uint32_t low;};
struct _kgaddr__kgaddr_split {uint32_t high;uint32_t low;};
struct _sym_parent_list_type {sym_entry_header_type header;struct _sym_parent_list_type___sym_widget_entry_type *parent;struct _sym_parent_list_type *next;};
typedef enum __itmr_sync_handshake_t itmr_sync_handshake_t;
struct pdc_chassis_rtn_block {u_long warning;u_long filler[31];};
struct pdc_ss_size_rtn_block {u_long count;u_long filler[31];};
struct shlib_version_aux_hdr {struct aux_id header_id;short version;};
typedef xListFontsReq xListFontsWithInfoReq;
typedef xPolySegmentReq xPolyFillRectangleReq;
typedef CARD16 xieTypDecodeTechnique;
typedef CARD16 xieTypDitherTechnique;
typedef CARD16 xieTypEncodeTechnique;
typedef CARD8 xieTypPhotofloOutcome;
typedef XButtonEvent XButtonReleasedEvent;
typedef XDeviceFocusChangeEvent XDeviceFocusOutEvent;
typedef int ( *XimTransShutdownProc)(Xim);
typedef enum _827EF60D098AE8A05731A9C4BE52FA4E XmNotebookPageStatus;
typedef XmStringCharSet *XmStringCharSetTable;
typedef enum _AB8FA23934A1A251513C73E987687696 XmTraversalDirection;
struct _XmComboBoxClassPart {XtPointer extension;};
struct _XmFormAttachmentRec {unsigned char type;Widget w;int percent;int offset;int value;int tempValue;};
struct _XmNotebookClassPart {XtPointer extension;};
struct _XmProtocolClassPart {XtPointer extension;};
struct _xkbBehaviorWireDesc {CARD8 key;CARD8 type;CARD8 data;CARD8 pad;};
union nss_netdirbyaddr_out {struct nd_hostservlist **nd_hslist;union nss_netdirbyaddr_out___316F132AA3D53DF36416F11E6CFB4547 nss;};
union nss_netdirbyname_out {struct nd_addrlist **nd_alist;union nss_netdirbyname_out___CEE05273D4B2788A50A519C89AA213E2 nss;};
struct pdc_coproc_rtn_block {u_long ccr;u_long present;u_long filler[30];};
typedef b_sema_t sock_betalock_data_t;
typedef lock_t sock_spinlock_data_t;
typedef xChangeModeReq xForceScreenSaverReq;
typedef xChangeModeReq xSetAccessControlReq;
typedef xChangeModeReq xSetCloseDownModeReq;
typedef CARD16 xieTypGamutTechnique;
typedef CARD16 xieTypHistogramShape;
typedef CARD8 xieTypTechniqueGroup;
typedef CARD16 xieTypTripleofCARD16[3];
typedef CARD32 xieTypTripleofCARD32[3];
typedef CARD32 *RecordClientSpecPtr;
typedef XButtonEvent XButtonPressedEvent;
typedef XDeviceFocusChangeEvent XDeviceFocusInEvent;
typedef int ( *XcmsParseStringProc)(char *, XcmsColor *);
typedef int ( *XimTransConnectProc)(Xim);
typedef char *( *XlcMapModifiersProc)(XLCd, char *, char *);
typedef enum _EF45388F68EDF15F1284C14D8C9AFBF9 XmTextScanDirection;
struct _XkbIndicatorDoodad {Atom name;unsigned char type;unsigned char priority;short top;short left;short angle;unsigned short shape_ndx;unsigned short on_color_ndx;unsigned short off_color_ndx;};
struct _XkbIndicatorMapRec {unsigned char flags;unsigned char which_groups;unsigned char groups;unsigned char which_mods;XkbModsRec mods;unsigned int ctrls;};
struct _XmWidgetExtDataRec {Widget widget;Widget reqWidget;Widget oldWidget;};
struct _pthread_stack_info {int stk_flags;short stk_stacksize_valid;size_t stk_stacksize;short stk_guardsize_valid;size_t stk_guardsize;short stk_reserved1_valid;size_t stk_reserved1_size;short stk_reserved2_valid;size_t stk_reserved2_size;void *stk_stack_base;void *stk_reserved3_base;void *stk_sp;void *stk_reserved4_ptr;void *stk_pc;void *stk_reserved[25];};
struct flex_geometry_parms {struct page_desc page_desc;unsigned char transfer_rate[2];unsigned char heads;unsigned char sectors;unsigned char sector_size[2];unsigned char tracks[2];unsigned char write_precomp[2];unsigned char reduced_write_current[2];unsigned char step_rate[2];unsigned char step_pulse_width;unsigned char head_settle_delay[2];unsigned char motor_on_delay;unsigned char motor_off_delay;unsigned char special_mode;unsigned char steps_per_track;unsigned char write_comp;unsigned char head_load_delay;unsigned char head_unload_delay;unsigned char pins_34_and_2;unsigned char pins_4_and_1;unsigned char rotation_rate[2];unsigned char reserved[2];};
struct pdc_model_rtn_block {u_long hversion;u_long sversion;u_long hw_id;u_long boot_id;u_long sw_id;u_long sw_cap;u_long arch_rev;u_long potential_key;u_long current_key;u_long width;u_long filler[22];};
struct user_string_aux_hdr {struct aux_id header_id;unsigned int string_length;char user_string[1];};
typedef CARD8 xieTypPhotofloState;
typedef CARD8 xieTypTripleofCARD8[3];
typedef void ( *InputGetSecResProc)(XmSecondaryResourceData *);
typedef char *( *XDefaultStringProc)(XLCd);
typedef XMotionEvent XPointerMovedEvent;
typedef XProximityNotifyEvent XProximityOutEvent;
typedef void ( *XcmsScreenFreeProc)(XPointer);
typedef int ( *XmCacheCompareProc)(XtPointer, XtPointer);
typedef enum _E0DDEABD8E0D109F5B9290526C46AAC0 XmICCEncodingStyle;
struct _IceSavedReplyWait {IceReplyWaitInfo *reply_wait;int reply_ready;struct _IceSavedReplyWait *next;};
struct _ScanLineListBlock {ScanLineList SLLs[25];struct _ScanLineListBlock *next;};
struct _XIMHotKeyTriggers {int num_hot_key;XIMHotKeyTrigger *key;};
struct _XmBaselineMargins {unsigned char get_or_set;Dimension margin_top;Dimension margin_bottom;Dimension shadow;Dimension highlight;Dimension text_height;Dimension margin_height;};
struct _XmScreenClassPart {XtPointer extension;};
struct _hid_change_list_t {uint8_t position;uint8_t change;uint8_t first_position;};
struct _xkbActionWireDesc {CARD8 type;CARD8 data[7];};
typedef enum gc_dma_wait_types gc_dma_wait_type_t;
union nfs_fh3__nfs_fh3_u {struct nfs_fh3__nfs_fh3_u__nfs_fh3_i nfs_fh3_i;char data[64];};
struct pdc_iodc_rtn_block {u_long size;int filler1[15];u_long hver_resv1;u_long filler2[15];};
struct pdc_pat_cell_range {ulong_t type;ulong_t start;ulong_t finish;};
struct pdc_pci_iface_info {u_long frequency;u_long bus_width;u_long num_slots;u_long num_built_ins;u_long opt_reg_map[6];};
typedef bit8 serial_option_type;
typedef bit8 status_option_type;
struct virtual_block_type {struct virtual_block_type *next_ptr;data_ptr_type buffer_ptr;int buffer_len;};
typedef xGrabPointerReply xGrabKeyboardReply;
typedef CARD8 xieTypArithmeticOp;
typedef CARD8 xieTypExportNotify;
typedef CARD8 xieTypServiceClass;
typedef void ( *IceIOErrorHandler)(IceConn);
typedef XCrossingEvent XEnterWindowEvent;
typedef enum _8C3F6FFEEEA4FDE62323156E011FAD74 XICCEncodingStyle;
typedef enum _DB4B60BC3E5D47BB5823C48350265A79 XIMCaretDirection;
typedef enum _B539734676A04848B68060D6D483E0A0 XIMStatusDataType;
typedef XKeyEvent XKeyReleasedEvent;
typedef XCrossingEvent XLeaveWindowEvent;
typedef XProximityNotifyEvent XProximityInEvent;
typedef void ( *XimTransFlushProc)(Xim);
typedef XmButtonType *XmButtonTypeTable;
typedef enum _F2FA7DCB0BC74AA2AE1DC034F4E782CF XmClipboardStatus;
typedef void ( *XmGadgetCacheProc)(XtPointer);
typedef XrmQuark XrmRepresentation;
typedef void ( *XtWidgetClassProc)(WidgetClass);
struct _ConversionValues {IntensityTbl IntensityTbl;};
struct _XkbComponentList {int num_keymaps;int num_keycodes;int num_types;int num_compat;int num_symbols;int num_geometry;XkbComponentNamePtr keymaps;XkbComponentNamePtr keycodes;XkbComponentNamePtr types;XkbComponentNamePtr compat;XkbComponentNamePtr symbols;XkbComponentNamePtr geometry;};
struct _XkbDeviceChanges {unsigned int changed;unsigned short first_btn;unsigned short num_btns;XkbDeviceLedChangesRec leds;};
struct _XmIconHeaderPart {Widget container_ID;};
struct _hid_descriptor_t {unsigned int hid;unsigned int num_descriptors;uint8_t descriptor[1];};
struct _kpc__kpc_t_split {uint32_t high;uint32_t low;};
struct _xkbPointWireDesc {INT16 x;INT16 y;};
struct _xkmKeySymMapDesc {CARD8 group_width;CARD8 num_groups;CARD8 modifier_map;CARD8 flags;};
struct copyright_aux_hdr {struct aux_id header_id;unsigned int string_length;char copyright[1];};
struct eisa_sysbrd_parms {uint32_t id;int num_slots;int max_slots;int size_iomap;};
typedef iceMsg iceWantToCloseMsg;
struct lst_symbol_record {unsigned int arg_reloc;union name_pt name;union name_pt qualifier_name;unsigned int symbol_info;unsigned int symbol_value;unsigned int symbol_descriptor;unsigned int num_args;unsigned int som_index;unsigned int symbol_key;unsigned int next_entry;};
struct pdc_hpa_rtn_block {u_long hpa;u_long cpu_num;u_long filler[30];};
struct pdc_mem_rtn_block {u_long status;u_long max_spa;u_long max_mem;u_long filler[29];};
struct pdc_pat_cell_proc {ulong_t id_eid;ulong_t reserved[507];};
struct pdc_pci_slot_info {u_int slot_number;u_int path_len;u_int *dev_num;};
struct pdc_pim_rtn_block {u_long size;u_long archsize;u_long filler[30];};
struct rpcbs_rmtcalllist {u_long prog;u_long vers;u_long proc;int success;int failure;int indirect;char *netid;struct rpcbs_rmtcalllist *next;};
typedef xPolySegmentReq xPolyRectangleReq;
typedef RECORD_CLIENT_INFO xRecordClientInfo;
typedef CARD8 xieTypExportState;
typedef CARD8 xieTypOrientation;
typedef enum _35A689336FE0D24D3433A45C728BDA9A IceConnectStatus;
typedef CARD32 RecordClientSpec;
typedef XKeyEvent XKeyPressedEvent;
typedef void ( *XmDragCancelProc)(XmDragContext);
typedef enum _1B378CA7E6769DBA655D66EA16101D09 XmImportOperator;
typedef void ( *XmMovePixmapProc)(XmDragIconObject, XmDragIconObject, XmDragIconObject, int, int);
typedef enum _A952B4CD0303A10D8C2FE0014FA84731 XmOSMethodStatus;
typedef void ( *XmResizeFlagProc)(Widget, int);
typedef enum _961B79B2C3FD4C51F22524CA68AEB3E6 XmTransferStatus;
typedef enum _B9867847443BB25721460208505189B7 XtCallbackStatus;
typedef enum _7A6D1403076F33F26AB38429B1986DDD XtGeometryResult;
struct _RectObjClassRec {RectObjClassPart rect_class;};
struct _XkbIndicatorRec {unsigned int phys_indicators;XkbIndicatorMapRec maps[32];};
struct _XmFormClassPart {XtPointer extension;};
struct _XmListClassPart {XtPointer extension;};
struct _xwd_file_header {CARD32 header_size;CARD32 file_version;CARD32 pixmap_format;CARD32 pixmap_depth;CARD32 pixmap_width;CARD32 pixmap_height;CARD32 xoffset;CARD32 byte_order;CARD32 bitmap_unit;CARD32 bitmap_bit_order;CARD32 bitmap_pad;CARD32 bits_per_pixel;CARD32 bytes_per_line;CARD32 visual_class;CARD32 red_mask;CARD32 green_mask;CARD32 blue_mask;CARD32 bits_per_rgb;CARD32 colormap_entries;CARD32 ncolors;CARD32 window_width;CARD32 window_height;CARD32 window_x;CARD32 window_y;CARD32 window_bdrwidth;};
struct compression_page {struct page_desc page_desc;unsigned int byte_3_reserved;unsigned char compression_algorithm[4];unsigned char decompression_algorithm[4];unsigned char reserved[4];};
typedef set_of_32 creation_options;
typedef bit8 diag_option_type;
typedef bit8 dm_function_type;
typedef enum gc_access_perm gc_access_perm_t;
struct ieee8024xsap_hdr {u_char frame_ctrl;u_char destaddr[6];u_char sourceaddr[6];u_char dsap;u_char ssap;u_char ctrl;u_char hdr_fill[3];u_char dxsap[2];u_char sxsap[2];};
struct load_module_desc {UINT64 text_base;UINT64 text_size;UINT64 data_base;UINT64 data_size;UINT64 unwind_base;UINT64 linkage_ptr;UINT64 phdr_base;UINT64 tls_size;UINT64 tls_start_addr;UINT64 unwind_size;UINT64 tls_index;};
typedef enum _16895558D4BDD217FAFD5E9629D844BC mc_field_descr_t;
struct modspecific_stat {char mss_linkinfo[81];int32_t mss_type;int32_t mss_p0[2];int32_t mss_p1[2];};
typedef data_ptr_type *space_array_type;
typedef bit8 status_kind_type;
struct strfdinsert_attr {struct strbuf ctlbuf;struct strbuf databuf;int flags;int fildes;int offset;struct strbuf attrbuf;};
typedef CARD8 xieTypInterleave;
typedef CARD32 xieTypPhotospace;
typedef enum _4805EAB0B223F78A463BBC8BA0A6D5FF IceAcceptStatus;
typedef enum _DD7C7A6F7774314680C00686808A9C69 IcePaAuthStatus;
typedef enum _A3665E69DB87D7B6ED44928954CD85F4 IcePoAuthStatus;
typedef int ( *XIOErrorHandler)(Display *);
typedef enum _C25EDA2AFA4331EE1194B950D24C90A5 XSyncAlarmState;
typedef XcmsConversionProc *XcmsFuncListPtr;
typedef enum _2B0E7C9199D196C48E7B096B00E5C6FD XmActivateState;
typedef enum _F7223B1E7C1DC13F2D08C27B96A6197A XmHighlightMode;
typedef enum _8F8E6D9517AB45AA51A20D9C7A3335AA XmTextDirection;
typedef void ( *XtBlockHookProc)(XtPointer);
struct _ConstraintPart {XtPointer mumble;};
struct _EdgeTableEntry {int ymax;BRESINFO bres;struct _EdgeTableEntry *next;struct _EdgeTableEntry *back;struct _EdgeTableEntry *nextWETE;int ClockWise;};
struct _ObjectClassRec {ObjectClassPart object_class;};
struct _WidgetClassRec {CoreClassPart core_class;};
struct _XComposeStatus {XPointer compose_ptr;int chars_matched;};
struct _XOMGenericPart {int data_num;OMData data;int on_demand_loading;char *object_name;};
struct _XkbShapeDoodad {Atom name;unsigned char type;unsigned char priority;short top;short left;short angle;unsigned short color_ndx;unsigned short shape_ndx;};
struct _xkmSectionInfo {CARD16 type;CARD16 format;CARD16 size;CARD16 offset;};
typedef bit8 addr_class_type;
typedef bit16 block_size_type;
typedef enum callout_flags callout_flags_t;
struct dev_select_info {Mask mask;int type;};
typedef bit8 diag_class_type;
typedef iceMsg icePingReplyMsg;
struct ieee8025_sr_hdr {u_char access_ctl;u_char frame_ctl;u_char destaddr[6];u_char sourceaddr[6];u_char rif[18];u_char dsap;u_char ssap;u_char ctrl;};
struct ioctl_intr_type {int eid;int cause;int mask;int ( *proc)();};
struct mpe_som_aux_hdr {struct aux_id header_id;unsigned int system_som;unsigned int num_xrts;unsigned int unwind_start;unsigned int unwind_end;unsigned int recover_start;unsigned int recover_end;unsigned int num_dxrts;unsigned int data_imports;unsigned int data_exports;};
typedef enum _BDFF07548720CB5FA5E849C13EF265E9 nss_netdir_op_t;
struct pdc_pat_cell_ca {ulong_t reserved[508];};
struct pdc_pat_cell_mc {ulong_t amount;ulong_t min_gni_base;ulong_t min_gni_len;ulong_t reserved[505];};
struct pfn_to_virt_ptr {pfn_to_virt_entry_t *pp_tbl;int pp_offset;};
typedef enum pregion_flags pregion_flags_t;
struct psm_public_info {char label[32];char domains[16];char owner_name[32];char version[16];};
struct rpcb_rmtcallres {char *addr;struct rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB results;};
typedef b_sema_t *sock_betalock_t;
typedef lock_t *sock_spinlock_t;
struct som_exec_auxhdr {struct aux_id som_auxhdr;int exec_tsize;int exec_tmem;int exec_tfile;int exec_dsize;int exec_dmem;int exec_dfile;int exec_bsize;int exec_entry;int exec_flags;int exec_bfill;};
typedef bit8 term_event_type;
typedef enum vnotify_flags vnotify_flags_t;
typedef xImageTextReq xImageText16Req;
typedef xPolySegmentReq xPolyFillArcReq;
typedef CARD8 xieTypAlignment;
typedef CARD32 xieTypColorList;
typedef CARD8 xieTypCompareOp;
typedef CARD8 xieTypDataClass;
typedef enum _524C077D957471F3061D228C9C236D67 IceCloseStatus;
typedef void ( *IceIOErrorProc)(IceConn);
typedef enum _KI_DEFINITIONS KI_DEFINITIONS;
typedef enum _B9B1E3761F7AC9C80FCB354FC1070F12 SmcCloseStatus;
typedef void ( *XDestroyOCProc)(XOC);
typedef XFocusChangeEvent XFocusOutEvent;
typedef enum _1245A1FB5F4A3D60B68851188167E7C1 XSyncValueType;
typedef void ( *XmCutPasteProc)(Widget w, int *data_id, int *private_id, int *reason);
typedef enum _53D85B5D788E52D277529232F64946A1 XmNavigability;
typedef enum _AED30218085D680B7EAFC4945949389D XmTextScanType;
typedef enum _5A773820A0D67B4336D2749C8D45D255 *XrmBindingList;
typedef void ( *XrmDestroyProc)(XPointer);
typedef void ( *XtErrorHandler)(String);
typedef enum _C6DE0E8AF8221E8B7722BED8F4800537 XtListPosition;
struct _LC_monetary_t {_LC_core_monetary_t core;char *int_curr_symbol;char *currency_symbol;char *mon_decimal_point;char *mon_thousands_sep;char *mon_grouping;char *positive_sign;char *negative_sign;signed char int_frac_digits;signed char frac_digits;signed char p_cs_precedes;signed char p_sep_by_space;signed char n_cs_precedes;signed char n_sep_by_space;signed char p_sign_posn;signed char n_sign_posn;char *debit_sign;char *credit_sign;};
struct _XAnyClassinfo {XID class;int length;};
struct _XkbKTMapEntry {int active;unsigned char level;XkbModsRec mods;};
struct _XkbKeyNameRec {char name[4];};
struct _XkbLogoDoodad {Atom name;unsigned char type;unsigned char priority;short top;short left;short angle;unsigned short color_ndx;unsigned short shape_ndx;char *logo_name;};
struct _XkbMapChanges {unsigned short changed;KeyCode min_key_code;KeyCode max_key_code;unsigned char first_type;unsigned char num_types;KeyCode first_key_sym;unsigned char num_key_syms;KeyCode first_key_act;unsigned char num_key_acts;KeyCode first_key_behavior;unsigned char num_key_behaviors;KeyCode first_key_explicit;unsigned char num_key_explicit;KeyCode first_modmap_key;unsigned char num_modmap_keys;KeyCode first_vmodmap_key;unsigned char num_vmodmap_keys;unsigned char pad;unsigned short vmods;};
struct _XkbOverlayKey {XkbKeyNameRec over;XkbKeyNameRec under;};
struct _XkbOverlayRow {unsigned short row_under;unsigned short num_keys;unsigned short sz_keys;XkbOverlayKeyPtr keys;};
struct _XkbTextDoodad {Atom name;unsigned char type;unsigned char priority;short top;short left;short angle;short width;short height;unsigned short color_ndx;char *text;char *font;};
struct _XmCwidNodeRec {struct _XmCwidNodeRec *next_ptr;struct _XmCwidNodeRec *prev_ptr;struct _XmCwidNodeRec *child_ptr;struct _XmCwidNodeRec *parent_ptr;Widget widget_ptr;};
struct __nsw_long_err {int nsw_errno;action_t action;struct __nsw_long_err *next;};
struct _xAnyClassinfo {CARD8 class;CARD8 length;};
struct _xkmActionDesc {CARD8 type;CARD8 data[7];};
union arg_descriptor {struct arg_descriptor___C93BFC27091A7443C74560EEB4626815 arg_desc;unsigned int word;};
struct aud_tok_strarr {unsigned int len;struct aud_tok_strarr___88F822424AE28B2529C61A3800A9D8A2 data;};
typedef bit8 bit8_buff_type[72];
struct cio_pquad_type {struct cio_pquad_type *link;cio_cmd_type command;int *address;int count;};
struct dad_form_parms {struct page_desc page_desc;unsigned short tracks_per_zone;unsigned short alt_sectors_per_zone;unsigned short alt_tracks_per_zone;unsigned short alt_tracks_per_vol;unsigned short sectors_per_track;unsigned short bytes_per_phys_sector;unsigned short interleave;unsigned short track_skew_factor;unsigned short cyl_skew_factor;unsigned char parms;unsigned char resv[3];};
typedef bit8 disc_direction;
struct error_recovery {struct page_desc page_desc;unsigned char error_bits;unsigned char retry_cnt;unsigned char correction;char head_offset;char data_strobe_offset;unsigned char resv;unsigned short recovery_time;};
typedef enum gc_dma_flags gc_dma_flags_t;
typedef set_of_32 generic_hw_set;
typedef set_of_32 generic_sw_set;
struct geometry_parms {struct page_desc page_desc;unsigned char num_cyl[3];unsigned char num_heads;unsigned char write_precomp[3];unsigned char write_current[3];unsigned short drive_step_rate;unsigned char land_zone_cyl[3];unsigned char resv[3];};
struct ifnet__ifqueue {struct ifnet__ifqueue__mbuf *ifq_head;struct ifnet__ifqueue__mbuf *ifq_tail;int ifq_len;int ifq_maxlen;int ifq_drops;lock_t *ifq_slock;};
struct io_module_adma {uint32_t reserved0;uint32_t io_eim;uint32_t io_dc_adata;uint32_t io_ii_cdata;uint32_t reserved1[4];uint32_t reserved2;uint32_t io_spa_address;uint32_t reserved3[2];uint32_t io_command;uint32_t io_status;uint32_t io_control;uint32_t io_data_inout;uint32_t io_err_sadd;uint32_t io_err_info;uint32_t io_err_madd;uint32_t reserved4;uint32_t io_ars_dma_link;uint32_t io_ars_dma_command;uint32_t io_ars_dma_address;uint32_t io_ars_dma_count;uint32_t io_ars_reserved[8];uint32_t io_admars_reserved0;uint32_t io_admars_eim;uint32_t io_admars_reserved1;uint32_t io_admars_cdata;uint32_t io_admars_dma_link;uint32_t io_admars_dma_command;uint32_t io_admars_dma_address;uint32_t io_admars_dma_count;uint32_t io_admars_reserved2[4];uint32_t io_admars_io_command;uint32_t io_admars_io_status;uint32_t io_admars_io_reserved3;uint32_t io_admars_data_inout;uint32_t lower_trs1[16];uint32_t lower_trs2[16];uint32_t lower_trs3[16];uint32_t lower_trs4[16];uint32_t lower_trs5[16];uint32_t lower_trs6[16];uint32_t lower_trs7[16];uint32_t lower_trs8[16];uint32_t lower_trs9[16];uint32_t hvrs[320];uint32_t upper_trs[512];};
typedef int32_t kschedpolicy_t;
typedef enum _643CACA972DB0CC73C1CD7912E2F75C2 mc_primitive_t;
struct nis_hash_table {NIS_HASH_ITEM *keys[64];NIS_HASH_ITEM *first;};
struct nispasswd_verf {u_long npd_xid;u_long npd_xrandval;};
typedef enum __pofile_flags pofile_flags_t;
typedef enum pregion_type pregion_type_t;
typedef bit8 random_control;
typedef enum region_flags region_flags_t;
struct rpcbs_addrlist {u_long prog;u_long vers;int success;int failure;char *netid;struct rpcbs_addrlist *next;};
struct scsi_cmd_parms {unsigned char cmd_type;unsigned char cmd_mode;uint32_t clock_ticks;unsigned char command[12];};
struct shl_descriptor {unsigned int tstart;unsigned int tend;unsigned int dstart;unsigned int dend;void *ltptr;shl_t handle;char filename[1025];void *initializer;unsigned int ref_count;unsigned int reserved3;unsigned int reserved2;unsigned int reserved1;unsigned int reserved0;};
struct snap8024xt_hdr {u_char frame_ctrl;u_char destaddr[6];u_char sourceaddr[6];u_char dsap;u_char ssap;u_char ctrl;u_char hdr_fill[3];u_char type[2];u_char dcanon_addr[2];u_char scanon_addr[2];};
struct strsendfd_attr {int fd;struct strbuf attrbuf;};
struct strtraceactive {int trace_major;int trace_minor;unsigned int flags;unsigned int trace_flags;char name[9];};
struct strtracefuture {unsigned int flags;unsigned int trace_flags;char name[9];};
typedef bit8 tape_ctrl_type;
typedef uint64_t uint_least64_t;
typedef enum vnotify_type vnotify_type_t;
typedef xImageTextReq xImageText8Req;
typedef xPolyTextReq xPolyText16Req;
typedef pthread_cond_t xcondition_rec;
typedef CARD8 xieTypDataType;
typedef CARD32 xieTypPhotoflo;
typedef CARD32 xieTypPhotomap;
typedef CARD16 xieTypPhototag;
struct ypresp_key_val {unsigned int status;datum keydat;datum valdat;};
typedef enum _ED89B77BBC0498CA6D4B15B58E0DB5B7 NextTabResult;
typedef uint32_t PCI_CFG_TOKEN;
typedef XFocusChangeEvent XFocusInEvent;
typedef enum _B64C39E2ADABB22C50C1D912F1D253CC XIMCaretStyle;
typedef enum _0112955827FC2F1F3D73B2DA97E42271 XSyncTestType;
typedef enum _FF1FF5DA5604B4B1711E513F8BAF3747 XmFocusChange;
typedef enum _3CFCDC704AC2E792161A567F9635E493 XmOffsetModel;
typedef enum _0A09C6BF7D777191F7534F5AEEECDF00 XmParseResult;
typedef XmString *XmStringTable;
typedef void ( *XmbFinishProc)(XPointer);
typedef enum _405C8636DEE5D8D2C9F0466394C3E3EA XrmOptionKind;
typedef enum _D2435FF4F3AAF25C455EAA2CA1747697 XtAddressMode;
typedef XtPointer XtVarArgsList;
struct _IceListenObj {struct _IceListenObj___XtransConnInfo *trans_conn;char *network_id;IceHostBasedAuthProc host_based_auth_proc;};
struct _IntensityRec {unsigned short value;XcmsFloat intensity;};
struct _IntensityTbl {IntensityRec *pBase;unsigned int nEntries;};
struct _LC_charmap_t {_LC_core_charmap_t core;char *cm_csname;int cm_mb_cur_max;int cm_mb_cur_min;unsigned char cm_max_disp_width;char *cm_name;char esc_char;char *cm_cswidth;};
struct _LC_numeric_t {_LC_core_numeric_t core;char *decimal_point;char *thousands_sep;unsigned char *grouping;unsigned char *alt_digit;};
struct _ScanLineList {int scanline;EdgeTableEntry *edgelist;struct _ScanLineList *next;};
struct _XkbAnyDoodad {Atom name;unsigned char type;unsigned char priority;short top;short left;short angle;};
struct crt_diag_args {int request;union crt_diag_args___336BFC932CC464554F53EA629C0605BE u_diag;};
typedef bit8 dev_stat_type;
struct dkbad__bt_bad {u_short bt_cyl;u_short bt_trksec;};
typedef iceMsg iceNoCloseMsg;
typedef int64_t int_least64_t;
typedef enum mpc_request mpc_request_t;
struct nis_hash_data {nis_name name;int keychain;struct nis_hash_data *next;struct nis_hash_data *prv_item;struct nis_hash_data *nxt_item;};
struct prm_byfsidinf {int64_t requested;int64_t transferred;int flags;int devno;};
typedef enum region_type region_type_t;
typedef bit8 std_char_sets;
struct strioctl_attr {int ic_cmd;int ic_timout;int ic_len;char *ic_dp;struct strbuf attrbuf;};
typedef uint64_t uint_fast64_t;
typedef uint32_t utrace_type_t;
typedef xPolyTextReq xPolyText8Req;
typedef pthread_key_t xthread_key_t;
struct ypdelete_args {char *mapname;yp_buf key;};
struct ypupdate_args {char *mapname;yp_buf key;yp_buf datum;};
typedef PropMotifWmHints PropMwmHints;
typedef void ( *XCloseLCProc)(XLCd);
typedef int ( *XCloseOMProc)(XOM);
typedef XLCd ( *XLCdLoadProc)(char *);
typedef enum _2ADC401C2E21ED1A63A0FE0B868E544D XOrientation;
typedef XID XSyncCounter;
typedef enum _75E5AF31E9A64698E276A3C79BCF83A9 XmParseModel;
typedef XmParseMapping *XmParseTable;
typedef enum _8955F610BCE94AAE8676F9CC0150C756 XmSelectType;
typedef Atom XmTextFormat;
typedef enum _98AACC45B526BF8E56A46567C8EC9FBB XmTextStatus;
typedef enum _02B2F3591FEAEB4334C5D9D93533B7DF XmVisibility;
typedef XrmQuarkList XrmClassList;
typedef XrmHashBucket *XrmHashTable;
typedef void ( *XtWidgetProc)(Widget);
struct _LC_locale_t {_LC_core_locale_t core;struct lconv *nl_lconv;_LC_charmap_t *lc_charmap;_LC_collate_t *lc_collate;_LC_ctype_t *lc_ctype;_LC_monetary_t *lc_monetary;_LC_numeric_t *lc_numeric;_LC_resp_t *lc_resp;_LC_time_t *lc_time;char *nl_info[80];};
struct _XButtonInfo {XID class;int length;short num_buttons;};
struct _XkbControls {unsigned char mk_dflt_btn;unsigned char num_groups;unsigned char groups_wrap;XkbModsRec internal;XkbModsRec ignore_lock;unsigned int enabled_ctrls;unsigned short repeat_delay;unsigned short repeat_interval;unsigned short slow_keys_delay;unsigned short debounce_delay;unsigned short mk_delay;unsigned short mk_interval;unsigned short mk_time_to_max;unsigned short mk_max_speed;short mk_curve;unsigned short ax_options;unsigned short ax_timeout;unsigned short axt_opts_mask;unsigned short axt_opts_values;unsigned int axt_ctrls_mask;unsigned int axt_ctrls_values;unsigned char per_key_repeat[32];};
struct _XlcResource {char *name;XrmQuark xrm_name;int size;int offset;unsigned int mask;};
struct _XmTranslRec {XtTranslations translations;struct _XmTranslRec *next;};
struct __nsw_lookup {char *service_name;action_t actions[4];struct __nsw_long_err *long_errs;struct __nsw_lookup *next;};
struct _xkmFileInfo {CARD8 type;CARD8 min_kc;CARD8 max_kc;CARD8 num_toc;};
struct audit_string {uint32_t a_strlen;char a_str[70];struct audit_string *next;};
struct caching_page {struct page_desc page_desc;char cache_control_bits;char retention_priorities;short disable_prefetch_len;short min_prefetch;short max_prefetch;short max_pref_ceiling;};
typedef bit32 da_addr_type;
struct dma_A_buflet {union dma_A_buflet___7D706FA385198EE6A426E4F07D145E83 u;};
struct export_entry {int next;int name;int value;union export_entry___1D13F0CFF919C64F9EE8456357D92C7A info;unsigned char type;unsigned int reserved1;short module_index;};
struct fb_dynam_rel {unsigned int imp_shl;unsigned int location;union fb_dynam_rel___7A5240DA174AE33C5B0D26713AD4FB53 misc;};
typedef uint32_t fsblkcnt32_t;
typedef uint64_t fsblkcnt64_t;
typedef uint32_t fsfilcnt32_t;
typedef uint64_t fsfilcnt64_t;
struct ieee8022_hdr {u_char dsap;u_char ssap;u_char ctrl;};
struct ieee8024_hdr {u_char frame_ctrl;u_char destaddr[6];u_char sourceaddr[6];u_char dsap;u_char ssap;u_char ctrl;};
typedef int64_t int_fast64_t;
typedef bit8 io_subq_type;
typedef uint8_t kclocktype_t;
typedef uint16_t ksyscallno_t;
struct mongoose_reg {u_char pad;u_char bus_lock;u_char liowait;u_char bus_speed;u_char unused1[4092];u_char pad2;u_char fifo_enable;u_char unused2[4094];u_char pad3;u_char bus_concurrency;u_char unused3[4094];};
typedef hpib_dam_message_type *msg_ptr_type;
typedef hpib_pda_type *pda_ptr_type;
struct prm_diskinfo {int64_t requested[64];int64_t transferred[64];int requestqlen;};
struct processorhpa {uint32_t io_eir;uint32_t nothing[11];uint32_t io_command;};
struct snap8024_hdr {u_char frame_ctrl;u_char destaddr[6];u_char sourceaddr[6];u_char dsap;u_char ssap;u_char ctrl;u_char hdr_fill[3];u_char type[2];};
typedef u_int spl_msk_type;
struct strpeek_attr {struct strbuf ctlbuf;struct strbuf databuf;int flags;struct strbuf attrbuf;};
struct strpmsg_attr {struct strbuf ctlbuf;struct strbuf databuf;int band;int flags;struct strbuf attrbuf;};
struct strsthinsert {struct strbuf ctlbuf;struct strbuf databuf;int flags;void *sth;int fildes;int offset;};
typedef set_of_32 subqueue_set;
typedef bit8 term_signals;
typedef enum user_eosys user_eosys_t;
typedef enum user_sstep user_sstep_t;
typedef xPolyPointReq xPolyLineReq;
typedef xcondition_rec *xcondition_t;
typedef CARD32 xieTypLevels[3];
typedef CARD8 xieTypMathOp;
typedef XID Multibuffer;
typedef int ( *PCI_GET_FRU)(void *, PCI_CFG_TOKEN, int *);
typedef PropMotifWmInfo PropMwmInfo;
typedef enum _8996B462E04869337C51B90A17CF06C3 XOMTextType;
typedef char *( *XlcNameProc)(XPointer);
typedef void ( *XmColorProc)(XColor *bg_color, XColor *fg_color, XColor *sel_color, XColor *ts_color, XColor *bs_color);
typedef enum _FF014EE17ED5831581850946D8EC063E XmMergeMode;
typedef XmOffset *XmOffsetPtr;
typedef char ( *XmbCharProc)(XPointer, char *, int *);
typedef void ( *XmbInitProc)(XPointer);
typedef XrmQuarkList XrmNameList;
typedef XtPointer XtRequestId;
struct _POINTBLOCK {XPoint pts[200];struct _POINTBLOCK *next;};
struct _XkbOutline {unsigned short num_points;unsigned short sz_points;unsigned short corner_radius;XkbPointPtr points;};
typedef lwp_sema_t _lwp_sema_t;
struct _shmControl {msemaphore writerSemaphore[2];msemaphore readerSemaphore[2];char *buffer;char *maxLoc;int maxRegion;char *hiTide;int MinBufferSpace;int clientID;char *writePointer;char *readPointer;char *bufferEnd;char *writerNeedsUpto;char *readerNeedsUpto;int readerNeedsTrigger;int triggerWasSent;int writePtrInvalid;int readPtrInvalid;int readerChecking;char currentLocked;char currentBlocker;int serverPid;int dirtyBuffer;int fileDes;int regionSize;int spares[2];};
struct cache_parms {struct page_desc page_desc;unsigned char control_bits;unsigned char rd_wr_priority;unsigned short disable_prefetch_len;unsigned short min_prefetch;unsigned short max_prefetch;unsigned short max_prefetch_ceiling;};
struct config_page {struct page_desc page_desc;unsigned int active_format;unsigned char active_partition;unsigned char write_buffer_full_ratio;unsigned char read_buffer_empty_ratio;unsigned char write_delay_time[2];unsigned int rew;unsigned char gap_size;unsigned int reserved2;unsigned char buffer_size_at_EW[3];unsigned char select_dc_algorithm;unsigned char reserved3;};
struct device_path {unsigned char flags;unsigned char bc[6];unsigned char mod;uint32_t layer[6];};
struct fc_hdr_info {u_char d_id[3];u_char ipa_valid;u_char ipa[4];u_char fc4_type;u_char class_type;u_char dsap;u_char ssap;u_char ctrl;u_char oid_type[5];};
typedef uintptr_t iophyspfn_t;
struct ipl_aux_hdr {struct aux_id header_id;unsigned int file_length;unsigned int address_dest;unsigned int entry_offset;unsigned int bss_size;unsigned int checksum;};
typedef uint32_t kclockcnt_t;
typedef enum _4B2B5DD9EDD220D7420EDB0C25BF71AD mc_status_t;
struct module_info {unsigned short mi_idnum;char *mi_idname;int mi_minpsz;int mi_maxpsz;ulong mi_hiwat;ulong mi_lowat;};
struct nis_taglist {struct nis_taglist___D5235F6F3B62BCE7910AF756FE53E6D0 tags;};
struct pst_dynamic {int32_t psd_proc_cnt;int32_t psd_max_proc_cnt;int32_t psd_last_pid;int32_t psd_rq;int32_t psd_dw;int32_t psd_pw;int32_t psd_sl;int32_t psd_sw;int32_t psd_vm;int32_t psd_avm;int32_t psd_rm;int32_t psd_arm;int32_t psd_vmtxt;int32_t psd_avmtxt;int32_t psd_rmtxt;int32_t psd_armtxt;int32_t psd_free;double psd_avg_1_min;double psd_avg_5_min;double psd_avg_15_min;int32_t psd_cpu_time[15];double psd_mp_avg_1_min[32];double psd_mp_avg_5_min[32];double psd_mp_avg_15_min[32];int32_t psd_mp_cpu_time[32][15];int32_t psd_openlv;int32_t psd_openvg;int32_t psd_allocpbuf;int32_t psd_usedpbuf;int32_t psd_maxpbuf;int32_t psd_activeprocs;int32_t psd_activeinodes;int32_t psd_activefiles;int32_t psd_mpdcnt;int32_t psd_procovf;int32_t psd_inodeovf;int32_t psd_fileovf;int32_t psd_global_virtual;int32_t psd_valid;};
struct pst_ipcinfo {int32_t psi_semmap;int32_t psi_semmni;int32_t psi_semmns;int32_t psi_semmnu;int32_t psi_semmsl;int32_t psi_semopm;int32_t psi_semume;int32_t psi_semusz;int32_t psi_semvmx;int32_t psi_semaem;int32_t psi_msgmap;int32_t psi_msgmax;int32_t psi_msgmnb;int32_t psi_msgmni;int32_t psi_msgssz;int32_t psi_msgtql;int32_t psi_msgseg;int32_t psi_shmmax;int32_t psi_shmmin;int32_t psi_shmmni;int32_t psi_shmseg;int32_t psi_valid;};
struct pst_ss_path {unsigned char psp_timer;unsigned char psp_busconv[6];unsigned char psp_module;uint32_t psp_layer[6];};
typedef enum _E899A937813FF0F496D2D85CB0B97843 r_asmodel_t;
typedef enum _06C69AFBDB740103FE12417D7C2CD105 r_machine_t;
struct sm_stat_res {res res_stat;int state;};
typedef enum _67DE420967B8B821C25ACDB855AEDCB1 str_mlang_t;
typedef int ( *strclose_V3)(queue_t *);
struct strfdinsert {struct strbuf ctlbuf;struct strbuf databuf;int flags;int fildes;int offset;};
struct t_kunitdata {struct netbuf addr;struct netbuf opt;struct msgb *udata;};
struct test_header {int node_no;int proc_no;int pack_type;union test_header__val val;int pack_length;};
typedef u_longlong_t ulonglong_t;
typedef enum vas_flags vas_flags_t;
typedef int  vfs_mount_t(struct vfs *, char *, smountargs_t *);
typedef u_long vifbitmap_t;
typedef xPolySegmentReq xPolyArcReq;
typedef uint32_t xdr_ulong_t;
typedef CARD32 xieTypFloat;
typedef CARD16 KeyButMask;
typedef int ( *PCI_ATTACH)(uint32_t, struct isc_table_type *);
typedef PSM_ULONG PSM_HANDLE;
typedef PSM_USHORT PSM_STATUS;
typedef Widget *WidgetList;
typedef XID XSyncAlarm;
typedef enum _40DDC86762D4922A231DE7BCE40E1602 XmFontType;
typedef void (*XmMenuProc)(int, Widget, ...);
typedef enum _B58A5A92A05F4CEE8F196C7E2D224736 XmTextType;
typedef enum _5A773820A0D67B4336D2749C8D45D255 XrmBinding;
typedef enum _3A62C614979A92BEB5F3FA9C72B43E27 XtGrabKind;
struct _LC_resp_t {_LC_core_resp_t core;char *yesexpr;char *noexpr;char *yesstr;char *nostr;};
struct _ObjectRec {ObjectPart object;};
struct _WidgetRec {CorePart core;};
struct _posix_sem {int ps_sem;int ps_flags;lwp_sema_t ps_lwp_lock;int ps_reserved1;int ps_reserved2;};
struct _xAxisInfo {CARD32 resolution;CARD32 min_value;CARD32 max_value;};
struct audio_gain {struct channel_gain cgain[2];int channel_mask;};
typedef int32_t blkcnt32_t;
typedef int64_t blkcnt64_t;
struct compl_head {uint32_t sema;uint32_t link;uint32_t filler[2];};
struct disc_recon {struct page_desc page_desc;unsigned char bfr_full_ratio;unsigned char bfr_empty_ratio;unsigned short bus_inactive;unsigned short discon_time;unsigned short connect_time;unsigned char resv[2];};
typedef bit8 event_type;
struct filter_rec {unsigned int wc_SFE_filter[80];struct filter_rec *next;};
struct floppy_cmd {unsigned int flags;unsigned int cmd_length;unsigned char cmd[16];unsigned char *data;unsigned int data_length;unsigned int max_msecs;unsigned int cmd_status;unsigned int data_xfer;unsigned char res[16];unsigned int res_xfer;};
typedef iceMsg icePingMsg;
struct iomap_data {ulong_t entry_value;};
struct ki_iovec32 {uint32_t iov32_base;uint32_t iov32_len;};
struct ki_iovec64 {uint64_t iov64_base;uint64_t iov64_len;};
struct ki_space64 {uint32_t pad1;uint32_t pad2;};
struct ki_timeval {uint32_t pad1;uint32_t pad2;};
struct lst_header {short system_id;short a_magic;unsigned int version_id;struct sys_clock file_time;unsigned int hash_loc;unsigned int hash_size;unsigned int module_count;unsigned int module_limit;unsigned int dir_loc;unsigned int export_loc;unsigned int export_count;unsigned int import_loc;unsigned int aux_loc;unsigned int aux_size;unsigned int string_loc;unsigned int string_size;unsigned int free_list;unsigned int file_end;unsigned int checksum;};
typedef enum _CCF1D35D1824FA2FD0CE85EC50CF6383 mc_event_t;
struct mcast_list {uint8_t addr[6];int ref_cnt;struct mcast_list *next;};
typedef save_state_t mcontext_t;
struct mioc_rksym {char *mirk_modname;char *mirk_symname;void *mirk_buf;size_t mirk_buflen;};
struct pim_narrow {uint32_t rp_gr0;uint32_t rp_gr1;uint32_t rp_rp;uint32_t rp_gr3;uint32_t rp_gr4;uint32_t rp_gr5;uint32_t rp_gr6;uint32_t rp_gr7;uint32_t rp_gr8;uint32_t rp_gr9;uint32_t rp_gr10;uint32_t rp_gr11;uint32_t rp_gr12;uint32_t rp_gr13;uint32_t rp_gr14;uint32_t rp_gr15;uint32_t rp_gr16;uint32_t rp_gr17;uint32_t rp_gr18;uint32_t rp_gr19;uint32_t rp_gr20;uint32_t rp_gr21;uint32_t rp_gr22;uint32_t rp_arg3;uint32_t rp_arg2;uint32_t rp_arg1;uint32_t rp_arg0;uint32_t rp_dp;uint32_t rp_ret0;uint32_t rp_ret1;uint32_t rp_sp;uint32_t rp_gr31;uint32_t rp_cr0;uint32_t rp_cr1;uint32_t rp_cr2;uint32_t rp_cr3;uint32_t rp_cr4;uint32_t rp_cr5;uint32_t rp_cr6;uint32_t rp_cr7;uint32_t rp_cr8;uint32_t rp_cr9;uint32_t rp_cr10;uint32_t rp_cr11;uint32_t rp_cr12;uint32_t rp_cr13;uint32_t rp_cr14;uint32_t rp_cr15;uint32_t rp_cr16;uint32_t rp_pcsq_head;uint32_t rp_pcoq_head;uint32_t rp_cr19;uint32_t rp_cr20;uint32_t rp_cr21;uint32_t rp_cr22;uint32_t rp_cr23;uint32_t rp_cr24;uint32_t rp_cr25;uint32_t rp_cr26;uint32_t rp_cr27;uint32_t rp_cr28;uint32_t rp_cr29;uint32_t rp_cr30;uint32_t rp_cr31;uint32_t rp_sr0;uint32_t rp_sr1;uint32_t rp_sr2;uint32_t rp_sr3;uint32_t rp_sr4;uint32_t rp_sr5;uint32_t rp_sr6;uint32_t rp_sr7;uint32_t rp_pcsq_tail;uint32_t rp_pcoq_tail;uint32_t rp_hpmc_type;uint32_t rp_hpmc_cpu_state;uint32_t rp_hpmc_detected_by;uint32_t rp_hpmc_cache;uint32_t rp_hpmc_tlb;uint32_t rp_hpmc_bus;uint32_t rp_hpmc_assists;uint32_t rp_hpmc_processor;uint32_t rp_hpmc_assist_id;uint32_t rp_hpmc_slave_addr;uint32_t rp_hpmc_master_addr;uint32_t rp_hversion_depend[40];};
struct providersw {int ( *bind_req)();MBLKP ( *addr_req)();int ( *conn_req)();MBLKP ( *conn_res)();MBLKP ( *discon_req)();MBLKP ( *info_req)();MBLKP ( *optmgmt_req)();MBLKP ( *unbind_req)();MBLKP ( *ordrel_req)();MBLKP ( *data_req)();MBLKP ( *exdata_req)();int ( *unitdata_req)();MBLKP ( *reset_req)();MBLKP ( *reset_res)();MBLKP ( *listen_req)();MBLKP ( *pvc_attach_req)();int ( *bind_ack)();MBLKP ( *addr_ack)();int ( *conn_ind)();int ( *conn_conf)();int ( *discon_ind)();MBLKP ( *discon_conf)();MBLKP ( *info_ack)();MBLKP ( *optmgmt_ack)();int ( *ordrel_ind)();int ( *listen_ack)();int ( *data_ind)();int ( *exdata_ind)();int ( *unitdata_ind)();int ( *reset_ind)();int ( *reset_conf)();MBLKP ( *listen_conf)();MBLKP ( *pvc_attach_conf)();MBLKP ( *ioctl_req_resp)();int ( *default_ind)();int ( *ok_ack)();};
struct routeaddrs {uint32_t rthost;uint32_t rtnet;uint32_t rthashsize;};
struct rpcb_entry {char *r_maddr;char *r_nc_netid;u_long r_nc_semantics;char *r_nc_protofmly;char *r_nc_proto;};
struct shl_symbol {char *name;short type;void *value;shl_t handle;};
typedef enum skl_srch skl_srch_t;
struct t_unitdata {struct netbuf addr;struct netbuf opt;struct netbuf udata;};
typedef enum _92336B21772268312063A1CDD1FC560B ttattopt_t;
typedef enum _2822DB660D7EF61737B6E4145BC4B0BC ttevents_t;
typedef uint16_t unsigned16;
typedef uint32_t unsigned32;
typedef uint32_t useconds_t;
typedef int32_t xdr_long_t;
typedef pthread_mutex_t xmutex_rec;
struct ypresp_val {unsigned int status;datum valdat;};
typedef enum auth_stat AUTH_STAT;
typedef CARD16 BITMASK16;
typedef CARD32 BITMASK32;
typedef CARD32 EVENTMASK;
typedef enum _KI_DEVICE KI_DEVICE;
typedef IcePointer SmPointer;
typedef XID XPContext;
struct _XExtData {int number;struct _XExtData *next;int ( *free_private)();XPointer private_data;};
struct _XKeyInfo {XID class;int length;unsigned short min_keycode;unsigned short max_keycode;unsigned short num_keys;};
struct _XmRegion {int size;int numRects;XmRegionBox *rects;XmRegionBox extents;};
typedef uint16_t __cnode_t;
typedef int32_t __daddr_t;
typedef int32_t __fd_mask;
typedef int32_t __swblk_t;
struct _xSegment {INT16 x1;INT16 y1;INT16 x2;INT16 y2;};
struct bc_module {uint32_t unused1[12];uint32_t io_command;uint32_t io_status;uint32_t io_control;uint32_t unused2[1];uint32_t io_err_resp;uint32_t io_err_info;uint32_t io_err_req;uint32_t unused3[11];uint32_t io_io_low;uint32_t io_io_high;};
struct cdxar_hsg {u_short xar_uid_lsb;u_short xar_uid_msb;u_short xar_gid_lsb;u_short xar_gid_msb;u_short xar_perm;char xar_create_year[4];char xar_create_month[2];char xar_create_day[2];char xar_create_hour[2];char xar_create_minute[2];char xar_create_second[2];char xar_create_centsecond[2];char xar_mod_year[4];char xar_mod_month[2];char xar_mod_day[2];char xar_mod_hour[2];char xar_mod_minute[2];char xar_mod_second[2];char xar_mod_centsecond[2];char xar_exp_year[4];char xar_exp_month[2];char xar_exp_day[2];char xar_exp_hour[2];char xar_exp_minute[2];char xar_exp_second[2];char xar_exp_centsecond[2];char xar_eff_year[4];char xar_eff_month[2];char xar_eff_day[2];char xar_eff_hour[2];char xar_eff_minute[2];char xar_eff_second[2];char xar_eff_centsecond[2];};
struct cdxar_iso {u_short xar_uid_lsb;u_short xar_uid_msb;u_short xar_gid_lsb;u_short xar_gid_msb;u_short xar_perm;char xar_create_year[4];char xar_create_month[2];char xar_create_day[2];char xar_create_hour[2];char xar_create_minute[2];char xar_create_second[2];char xar_create_centsecond[2];char xar_create_zone[1];char xar_mod_year[4];char xar_mod_month[2];char xar_mod_day[2];char xar_mod_hour[2];char xar_mod_minute[2];char xar_mod_second[2];char xar_mod_centsecond[2];char xar_mod_zone[1];char xar_exp_year[4];char xar_exp_month[2];char xar_exp_day[2];char xar_exp_hour[2];char xar_exp_minute[2];char xar_exp_second[2];char xar_exp_centsecond[2];char xar_exp_zone[1];char xar_eff_year[4];char xar_eff_month[2];char xar_eff_day[2];char xar_eff_hour[2];char xar_eff_minute[2];char xar_eff_second[2];char xar_eff_centsecond[2];char xar_eff_zone[1];};
typedef enum __clockid_t clockid_t;
union des_block {struct des_block___DD2C0B234097C82BA23DADAC12E82EA1 key;char c[8];};
typedef int32_t dir_off_t;
typedef bit32 disc_addr;
struct dyn_major {char rec_name[16];char name[16];int c_major;int b_major;int reserved;};
struct entry_obj {char *en_type;struct entry_obj___9954B692FACAC347CBA764979909DFF4 en_cols;};
struct io_module {uint32_t nothing;uint32_t io_eim;uint32_t io_dc_adata;uint32_t io_ii_cdata;uint32_t io_dma_link;uint32_t io_dma_command;uint32_t io_dma_address;uint32_t io_dma_count;uint32_t io_flex;uint32_t io_spa_address;uint32_t reserved1[2];uint32_t io_command;uint32_t io_status;uint32_t io_control;uint32_t io_data;uint32_t reserved2;uint32_t chain_addr;uint32_t sub_mask_clr;uint32_t reserved3[13];uint32_t undefined[480];uint32_t unpriv[512];};
struct kmemstats {int ks_flags;int ( *ks_check)();int ks_sleep;ulong_t ks_reslimit;ulong_t ks_resinuse;int ks_inuse;int ks_calls;};
typedef uint32_t kseqcnt_t;
struct load_info {uint64_t li_version;uint64_t li_length;uint64_t li_sysvec;uint64_t li_aout_path;uint64_t li_aout_hdr;uint64_t li_aout_prog_hdr;uint64_t li_dld_taddr;uint64_t li_dld_daddr;};
struct lwpcycles {uint64_t psc_hi;uint64_t psc_lo;};
typedef set_of_32 mask_type;
typedef enum _BDF226639BBB1D3BB43C1B0B3AAF5782 mc_vers_t;
struct mod_minfo {uint32_t flag;char modname[15];};
struct nis_sdata {void *buf;u_long size;};
typedef enum _063E23777D15350DF8C6D5AD0B44BA1D nl_direct;
typedef enum _90B8F34FFAD33112C047DBF1D57A0386 nl_outdgt;
struct nlm4_stat {nlm4_stats stat;};
typedef uint32_t physpfn_t;
struct pst_osdep {unsigned short pso_osid;unsigned short pso_pad1;uint32_t pso_pad2[5];};
struct pstcycles {uint32_t psc_hi;uint32_t psc_lo;};
struct pstsigset {int32_t pst_sigset[8];};
typedef enum qfields qfields_t;
typedef enum _BB7F0730DE77F9648F7620A59052A897 r_magic_t;
typedef size_t socklen_t;
struct sw_intloc {struct sw_intloc *link;int ( *proc)(char *arg);char *arg;char priority;char sub_priority;};
struct t_kpalive {t_scalar_t kp_onoff;t_scalar_t kp_timeout;};
struct table_col {char *tc_name;u_long tc_flags;u_long tc_rights;};
typedef uintptr_t u_machptr;
typedef uint64_t uintmax_t;
typedef uint8_t unsigned8;
typedef lock_t *vm_lock_t;
typedef b_sema_t vm_sema_t;
typedef bool_t (*xdrproc_t)(XDR *, ...);
typedef CARD32 xieTypLUT;
typedef CARD32 xieTypROI;
typedef pthread_t xthread_t;
struct ypreq_key {char *domain;char *map;datum keydat;};
struct ypreq_xfr {struct ypmap_parms map_parms;unsigned int transid;unsigned int proto;unsigned short port;};
typedef unsigned8 CMD_type;
typedef XID Colormap;
typedef XID Drawable;
typedef enum _E85AB9462C44CA88FCDDD856D94076DF Elf_Kind;
typedef enum _1A4BEB2B3031FA783E952A85A1F3D263 Elf_Type;
typedef XID GContext;
typedef MotifWmHints MwmHints;
typedef void ( *VoidProc)(Widget w, int *data_id, int *private_id, int *reason);
typedef XrmQuark XrmClass;
struct _XRegion {int size;int numRects;BOX *rects;BOX extents;};
struct __cycles {uint32_t hi;uint32_t lo;};
typedef uint16_t __site_t;
struct _physadr {intptr_t r[1];};
typedef bit8 adr_mode;
typedef uint16_t bptype_t;
struct corehead {int type;uint space;uint addr;uint len;};
struct dev_path {unsigned char io_dev_type;unsigned char bus_converter[6];unsigned char io_mod_adapter;uint32_t io_logical_id;uint32_t device_depend[5];};
typedef bit32 disc_len;
typedef enum _events_t events_t;
typedef int32_t fpos32_t;
typedef int64_t fpos64_t;
typedef int64_t hrtime_t;
typedef enum _5BA63364B4A472F890F3608163B41295 idtype_t;
typedef int64_t intmax_t;
typedef uint32_t kbufno_t;
typedef int16_t kftype_t;
struct klm_stat {klm_stats stat;};
typedef int16_t kmtype_t;
typedef uint32_t kpgcnt_t;
typedef uint64_t ksrval_t;
typedef uint8_t kstate_t;
typedef uint16_t kstype_t;
struct mallinfo {int32_t arena;int32_t ordblks;int32_t smblks;int32_t hblks;int32_t hblkhd;int32_t usmblks;int32_t fsmblks;int32_t uordblks;int32_t fordblks;int32_t keepcost;};
struct mod_smod {int32_t position;char modname[15];};
struct nis_attr {char *zattr_ndx;struct nis_attr___F2081D9F3F0358B3A954C101A2B200CE zattr_val;};
typedef enum _FC4AADB96A9DD6E7CF562AA7AB1F6D8F nl_order;
struct nlm_stat {nlm_stats stat;};
typedef uintptr_t pgaddr_t;
struct pim_wide {uint32_t rp_gr0_hi;uint32_t rp_gr0_low;uint32_t rp_gr1_hi;uint32_t rp_gr1_low;uint32_t rp_rp_hi;uint32_t rp_rp_low;uint32_t rp_gr3_hi;uint32_t rp_gr3_low;uint32_t rp_gr4_hi;uint32_t rp_gr4_low;uint32_t rp_gr5_hi;uint32_t rp_gr5_low;uint32_t rp_gr6_hi;uint32_t rp_gr6_low;uint32_t rp_gr7_hi;uint32_t rp_gr7_low;uint32_t rp_gr8_hi;uint32_t rp_gr8_low;uint32_t rp_gr9_hi;uint32_t rp_gr9_low;uint32_t rp_gr10_hi;uint32_t rp_gr10_low;uint32_t rp_gr11_hi;uint32_t rp_gr11_low;uint32_t rp_gr12_hi;uint32_t rp_gr12_low;uint32_t rp_gr13_hi;uint32_t rp_gr13_low;uint32_t rp_gr14_hi;uint32_t rp_gr14_low;uint32_t rp_gr15_hi;uint32_t rp_gr15_low;uint32_t rp_gr16_hi;uint32_t rp_gr16_low;uint32_t rp_gr17_hi;uint32_t rp_gr17_low;uint32_t rp_gr18_hi;uint32_t rp_gr18_low;uint32_t rp_gr19_hi;uint32_t rp_gr19_low;uint32_t rp_gr20_hi;uint32_t rp_gr20_low;uint32_t rp_gr21_hi;uint32_t rp_gr21_low;uint32_t rp_gr22_hi;uint32_t rp_gr22_low;uint32_t rp_arg3_hi;uint32_t rp_arg3_low;uint32_t rp_arg2_hi;uint32_t rp_arg2_low;uint32_t rp_arg1_hi;uint32_t rp_arg1_low;uint32_t rp_arg0_hi;uint32_t rp_arg0_low;uint32_t rp_dp_hi;uint32_t rp_dp_low;uint32_t rp_ret0_hi;uint32_t rp_ret0_low;uint32_t rp_ret1_hi;uint32_t rp_ret1_low;uint32_t rp_sp_hi;uint32_t rp_sp_low;uint32_t rp_gr31_hi;uint32_t rp_gr31_low;uint32_t rp_cr0_hi;uint32_t rp_cr0_low;uint32_t rp_cr1_hi;uint32_t rp_cr1_low;uint32_t rp_cr2_hi;uint32_t rp_cr2_low;uint32_t rp_cr3_hi;uint32_t rp_cr3_low;uint32_t rp_cr4_hi;uint32_t rp_cr4_low;uint32_t rp_cr5_hi;uint32_t rp_cr5_low;uint32_t rp_cr6_hi;uint32_t rp_cr6_low;uint32_t rp_cr7_hi;uint32_t rp_cr7_low;uint32_t rp_cr8_hi;uint32_t rp_cr8_low;uint32_t rp_cr9_hi;uint32_t rp_cr9_low;uint32_t rp_cr10_hi;uint32_t rp_cr10_low;uint32_t rp_cr11_hi;uint32_t rp_cr11_low;uint32_t rp_cr12_hi;uint32_t rp_cr12_low;uint32_t rp_cr13_hi;uint32_t rp_cr13_low;uint32_t rp_cr14_hi;uint32_t rp_cr14_low;uint32_t rp_cr15_hi;uint32_t rp_cr15_low;uint32_t rp_cr16_hi;uint32_t rp_cr16_low;uint32_t rp_pcsq_head_hi;uint32_t rp_pcsq_head_low;uint32_t rp_pcoq_head_hi;uint32_t rp_pcoq_head_low;uint32_t rp_cr19_hi;uint32_t rp_cr19_low;uint32_t rp_cr20_hi;uint32_t rp_cr20_low;uint32_t rp_cr21_hi;uint32_t rp_cr21_low;uint32_t rp_cr22_hi;uint32_t rp_cr22_low;uint32_t rp_cr23_hi;uint32_t rp_cr23_low;uint32_t rp_cr24_hi;uint32_t rp_cr24_low;uint32_t rp_cr25_hi;uint32_t rp_cr25_low;uint32_t rp_cr26_hi;uint32_t rp_cr26_low;uint32_t rp_cr27_hi;uint32_t rp_cr27_low;uint32_t rp_cr28_hi;uint32_t rp_cr28_low;uint32_t rp_cr29_hi;uint32_t rp_cr29_low;uint32_t rp_cr30_hi;uint32_t rp_cr30_low;uint32_t rp_cr31_hi;uint32_t rp_cr31_low;uint32_t rp_sr0_hi;uint32_t rp_sr0_low;uint32_t rp_sr1_hi;uint32_t rp_sr1_low;uint32_t rp_sr2_hi;uint32_t rp_sr2_low;uint32_t rp_sr3_hi;uint32_t rp_sr3_low;uint32_t rp_sr4_hi;uint32_t rp_sr4_low;uint32_t rp_sr5_hi;uint32_t rp_sr5_low;uint32_t rp_sr6_hi;uint32_t rp_sr6_low;uint32_t rp_sr7_hi;uint32_t rp_sr7_low;uint32_t rp_pcsq_tail_hi;uint32_t rp_pcsq_tail_low;uint32_t rp_pcoq_tail_hi;uint32_t rp_pcoq_tail_low;uint32_t rp_hpmc_type;uint32_t rp_hpmc_cpu_state;uint32_t rp_hpmc_cache;uint32_t rp_hpmc_tlb;uint32_t rp_hpmc_bus;uint32_t rp_hpmc_assists;uint32_t rp_hpmc_assist_id;uint32_t rp_path_info;uint32_t rp_hpmc_slave_addr_hi;uint32_t rp_hpmc_slave_addr;uint32_t rp_hpmc_master_addr_hi;uint32_t rp_hpmc_master_addr;uint32_t rp_hversion_depend[40];};
struct pmaplist {PMAP pml_map;struct pmaplist *pml_next;};
struct ppathcnf {int pc_link_max;short pc_max_canon;short pc_max_input;short pc_name_max;short pc_path_max;short pc_pipe_buf;u_char pc_vdisable;char pc_xxx;short pc_mask[2];};
struct pscoproc {uint32_t psc_present;uint32_t psc_enabled;};
struct pshwpath {int32_t psh_first_index;int32_t psh_last_index;char psh_name[32];};
struct psm_item {int len;PSM_BYTE *name;};
struct pst_dump {unsigned short psd_osid;unsigned short psd_flags;uint32_t psd_pad;uint32_t psd_device_high;uint32_t psd_device_low;uint32_t psd_offset_high;uint32_t psd_offset_low;};
typedef enum _F03D87357314FDF929A505A6F2750F7C r_arch_t;
typedef ssize_t regoff_t;
typedef uint32_t rlim32_t;
typedef uint64_t rlim64_t;
struct rpcblist {RPCB rpcb_map;struct rpcblist *rpcb_next;};
struct s_passwd {char *pw_name;char *pw_passwd;char *pw_age;int32_t pw_audid;int pw_audflg;};
struct sem_undo {struct sem_undo *un_np;short un_cnt;struct __undo un_ent[1];};
struct sigevent {int __sigev_notify;int __sigev_signo;sigval_t __sigev_value;void *__pad[2];int __sigev_reserved[8];};
typedef int16_t signed16;
typedef int32_t signed32;
typedef int ( *skcmpf_t)(skkey_t, skkey_t);
struct strapush {uint sap_cmd;int sap_major;int sap_minor;int sap_lastminor;int sap_npush;char sap_list[8][9];};
struct strdconf {uint sdc_flags;char sdc_name[9];int sdc_major;uint sdc_sync_level;char sdc_info[9];};
struct t_discon {struct netbuf udata;int reason;int sequence;};
struct t_linger {t_scalar_t l_onoff;t_scalar_t l_linger;};
struct t_opthdr {t_uscalar_t len;t_uscalar_t level;t_uscalar_t name;t_uscalar_t status;};
struct timespec {time_t tv_sec;int tv_nsec;};
typedef enum _CE0FA36ECDD7533D23F81DF4FF364C06 tteopt_t;
typedef enum _F993503C77100AD7A011D6DC65A9F0D7 ttsigf_t;
typedef enum _BD894E2C1861A54BD61666934450D191 ttwopt_t;
struct two_time {u_int post_time;u_int pre_time;};
typedef xmutex_rec *xmutex_t;
typedef enum _48BC290D844A5089CFC155FB9F341232 Elf_Cmd;
typedef CARD8 KEYCODE;
typedef MotifWmInfo MwmInfo;
typedef enum _5BC141063E07A2854A710E771DE9E012 OnOrOff;
typedef enum _8DF7415C893978EEFB8B0B1DFAE664DB XlcSide;
typedef XrmQuark XrmName;
struct _XkbKey {XkbKeyNameRec name;short gap;unsigned char shape_ndx;unsigned char color_ndx;};
struct __reg32 {uint32_t ss_reserved[2];uint32_t ss_gr1_hi;uint32_t ss_gr1_lo;uint32_t ss_rp_hi;uint32_t ss_rp_lo;uint32_t ss_gr3_hi;uint32_t ss_gr3_lo;uint32_t ss_gr4_hi;uint32_t ss_gr4_lo;uint32_t ss_gr5_hi;uint32_t ss_gr5_lo;uint32_t ss_gr6_hi;uint32_t ss_gr6_lo;uint32_t ss_gr7_hi;uint32_t ss_gr7_lo;uint32_t ss_gr8_hi;uint32_t ss_gr8_lo;uint32_t ss_gr9_hi;uint32_t ss_gr9_lo;uint32_t ss_gr10_hi;uint32_t ss_gr10_lo;uint32_t ss_gr11_hi;uint32_t ss_gr11_lo;uint32_t ss_gr12_hi;uint32_t ss_gr12_lo;uint32_t ss_gr13_hi;uint32_t ss_gr13_lo;uint32_t ss_gr14_hi;uint32_t ss_gr14_lo;uint32_t ss_gr15_hi;uint32_t ss_gr15_lo;uint32_t ss_gr16_hi;uint32_t ss_gr16_lo;uint32_t ss_gr17_hi;uint32_t ss_gr17_lo;uint32_t ss_gr18_hi;uint32_t ss_gr18_lo;uint32_t ss_gr19_hi;uint32_t ss_gr19_lo;uint32_t ss_gr20_hi;uint32_t ss_gr20_lo;uint32_t ss_gr21_hi;uint32_t ss_gr21_lo;uint32_t ss_gr22_hi;uint32_t ss_gr22_lo;uint32_t ss_arg3_hi;uint32_t ss_arg3_lo;uint32_t ss_arg2_hi;uint32_t ss_arg2_lo;uint32_t ss_arg1_hi;uint32_t ss_arg1_lo;uint32_t ss_arg0_hi;uint32_t ss_arg0_lo;unsigned int ss_dp_hi;unsigned int ss_dp_lo;unsigned int ss_ret0_hi;unsigned int ss_ret0_lo;unsigned int ss_ret1_hi;unsigned int ss_ret1_lo;unsigned int ss_sp_hi;unsigned int ss_sp_lo;unsigned int ss_gr31_hi;unsigned int ss_gr31_lo;unsigned int ss_cr11_hi;unsigned int ss_cr11_lo;unsigned int ss_pcoq_head_hi;unsigned int ss_pcoq_head_lo;unsigned int ss_pcsq_head_hi;unsigned int ss_pcsq_head_lo;unsigned int ss_pcoq_tail_hi;unsigned int ss_pcoq_tail_lo;unsigned int ss_pcsq_tail_hi;unsigned int ss_pcsq_tail_lo;unsigned int ss_cr15_hi;unsigned int ss_cr15_lo;unsigned int ss_cr19_hi;unsigned int ss_cr19_lo;unsigned int ss_cr20_hi;unsigned int ss_cr20_lo;unsigned int ss_cr21_hi;unsigned int ss_cr21_lo;unsigned int ss_cr22_hi;unsigned int ss_cr22_lo;unsigned int ss_cpustate_hi;unsigned int ss_cpustate_lo;unsigned int ss_sr4_hi;unsigned int ss_sr4_lo;unsigned int ss_sr0_hi;unsigned int ss_sr0_lo;unsigned int ss_sr1_hi;unsigned int ss_sr1_lo;unsigned int ss_sr2_hi;unsigned int ss_sr2_lo;unsigned int ss_sr3_hi;unsigned int ss_sr3_lo;unsigned int ss_sr5_hi;unsigned int ss_sr5_lo;unsigned int ss_sr6_hi;unsigned int ss_sr6_lo;unsigned int ss_sr7_hi;unsigned int ss_sr7_lo;unsigned int ss_cr0_hi;unsigned int ss_cr0_lo;unsigned int ss_cr8_hi;unsigned int ss_cr8_lo;unsigned int ss_cr9_hi;unsigned int ss_cr9_lo;unsigned int ss_cr10_hi;unsigned int ss_cr10_lo;unsigned int ss_cr12_hi;unsigned int ss_cr12_lo;unsigned int ss_cr13_hi;unsigned int ss_cr13_lo;unsigned int ss_cr24_hi;unsigned int ss_cr24_lo;unsigned int ss_cr25_hi;unsigned int ss_cr25_lo;unsigned int ss_cr26_hi;unsigned int ss_cr26_lo;unsigned int ss_cr27_hi;unsigned int ss_cr27_lo;unsigned int ss_reserved2[4];unsigned int ss_oldcksum;unsigned int ss_newcksum;};
struct __stack {void *ss_sp;int ss_flags;size_t ss_size;};
struct _xPoint {INT16 x;INT16 y;};
typedef int32_t aclid_t;
struct bh_sema {lock_t *beta_spinlock;struct bh_sema__kthread *fp;struct bh_sema__kthread *bp;struct bh_sema *link;};
typedef uint16_t bmcnt_t;
typedef uint16_t bqlen_t;
typedef __caddr_t caddr_t;
typedef uint32_t clock_t;
typedef __cnode_t cnode_t;
typedef __daddr_t daddr_t;
struct disktab {char *d_name;char *d_type;int d_secsize;int d_ntracks;int d_nsectors;int d_ncylinders;int d_rpm;struct disktab__partition d_partitions[16];};
struct fc_addr {u_char ipa_valid;u_char ipa[4];u_char nport_id[3];};
struct fd_args {nis_name dir_name;nis_name requester;};
typedef __fd_mask fd_mask;
struct in_addr {in_addr_t s_addr;};
typedef uint32_t ino32_t;
typedef uint64_t ino64_t;
struct ip_mreq {struct in_addr imr_multiaddr;struct in_addr imr_interface;};
typedef uint32_t kflag_t;
typedef uint8_t knice_t;
typedef uint32_t ksite_t;
typedef int8_t ktype_t;
struct label_t {int32_t lbl_rp;int32_t lbl_sp;int32_t lbl_s[17];int32_t lbl_ss[1];double lbl_sf[10];};
struct linkblk {queue_t *l_qtop;queue_t *l_qbot;int l_index;int l_pad[5];};
typedef int32_t lwpid_t;
typedef intptr_t machptr;
struct mrtstat {u_long mrts_mfc_lookups;u_long mrts_mfc_misses;u_long mrts_upcalls;u_long mrts_no_route;u_long mrts_bad_tunnel;u_long mrts_cant_tunnel;u_long mrts_wrong_if;u_long mrts_upq_ovflw;u_long mrts_cache_cleanups;u_long mrts_drop_sel;u_long mrts_q_overflow;u_long mrts_pkt2large;u_long mrts_upq_sockfull;u_long mrts_fwd_in;u_long mrts_fwd_out;u_long mrts_fwd_drop;};
typedef u_short n_short;
struct nis_oid {u_long ctime;u_long mtime;};
struct nis_tag {u_long tag_type;char *tag_val;};
typedef enum _52055E25BF9F5383269D645E2DD09E6F nl_mode;
typedef uint16_t nlink_t;
typedef int32_t off32_t;
typedef int64_t off64_t;
typedef uintptr_t paddr_t;
struct panic_t {u_char p_cksum;u_char p_type;u_char p_code;u_char p_flags;int p_timeofday;char p_release[8];char p_version[8];char p_string[80];u_char p_reserved[24];};
typedef int32_t pgcnt_t;
struct psttime {int32_t pst_sec;int32_t pst_usec;};
typedef uint32_t ptr32_t;
struct rw_lock {lock_t *interlock;unsigned int delay;int read_count;char want_write;char want_upgrade;char waiting;char no_swap;};
typedef int8_t signed8;
struct sotimeq {struct sotimeq *sotimeq_next;struct sotimeq *sotimeq_prev;int sotimeq_dtime;caddr_t sotimeq_wchan;};
typedef uint32_t space_t;
struct strpeek {struct strbuf ctlbuf;struct strbuf databuf;int flags;};
struct strpmsg {struct strbuf ctlbuf;struct strbuf databuf;int band;int flags;};
struct swapmap {ushort sm_ucnt;short sm_next;};
typedef __swblk_t swblk_t;
struct syswait {int biowait;uint32_t pad[7];};
struct t_kinfo {t_scalar_t addr;t_scalar_t options;t_scalar_t tsdu;t_scalar_t etsdu;t_scalar_t connect;t_scalar_t discon;t_scalar_t servtype;t_scalar_t flags;t_scalar_t current_state;t_scalar_t tidu;};
typedef u_long tcp_seq;
struct tftphdr {short th_opcode;union tftphdr___E231DD2B7A2AA83F99CCA027C312551B th_u;char th_data[1];};
struct timeout {int timeval;struct timeout *f_link;struct timeout *b_link;int ( *proc)(char *arg);char *arg;};
struct timeval {time_t tv_sec;int tv_usec;};
typedef enum _2B26690F68D03FCD551ABF86649C8A56 ttreq_t;
typedef uint16_t u_int16;
typedef uint32_t u_int32;
struct utimbuf {time_t actime;time_t modtime;};
struct utsname {char sysname[9];char nodename[9];char release[9];char version[9];char machine[9];char __idnumber[15];};
struct vmmeter {int v_swtch;int v_trap;int v_syscall;int v_intr;int v_pdma;int v_pswpin;int v_pswpout;int v_pgin;int v_pgout;int v_pgpgin;int v_pgpgout;int v_intrans;int v_pgrec;int v_xsfrec;int v_xifrec;int v_exfod;int v_zfod;int v_vrfod;int v_nexfod;int v_nzfod;int v_nvrfod;int v_pgfrec;int v_faults;int v_scan;int v_rev;int v_seqfree;int v_dfree;int v_cwfault;int f_bread;int f_breadcache;int f_breadsize;int f_breada;int f_breadacache;int f_breadasize;int f_bwrite;int f_bwritesize;int f_bdwrite;int f_bdwritesize;int v_pgtlb;int v_swpwrt;int v_fastpgrec;int f_clnbkfl;int f_flsempty;int f_bufbusy;struct lgpg_global_stats v_lgpg;int f_delwrite;int v_free;int v_swpin;int v_swpout;int v_runq;};
struct vmtotal {unsigned int t_rq;unsigned int t_dw;unsigned int t_pw;unsigned int t_sl;unsigned int t_sw;pgcnt_t t_vm;pgcnt_t t_avm;pgcnt_t t_rm;pgcnt_t t_arm;pgcnt_t t_vmtxt;pgcnt_t t_avmtxt;pgcnt_t t_rmtxt;pgcnt_t t_armtxt;pgcnt_t t_free;pgcnt_t t_global_virtual;};
typedef enum _EDBA1914F16BC538415B0E0A3A3FD3BB ACTION;
typedef CARD16 BITS16;
typedef CARD32 BITS32;
typedef XID Cursor;
struct Fd_set {Fd_mask fds_bits[64];};
typedef XID KeySym;
typedef XtPointer Opaque;
typedef XID Pixmap;
typedef XID Window;
struct _horse {fss_t *h_fss;struct _horse *h_next_time;struct _horse *h_next_diff;};
struct afhash {u_int afh_hosthash;u_int afh_nethash;};
typedef int32_t attr_t;
typedef uint32_t cdno_t;
typedef uint32_t chtype;
struct ciodio {struct cio_quadrant data;struct cio_quadrant ctlsens;struct cio_quadrant order;struct cio_quadrant statcmd;};
typedef cs80_fmt *cs_ptr;
struct d0stat {int io_ops;int io_misc;int io_qcnt;ushort io_unlog;};
typedef dap_exec_fmt *de_ptr;
struct dirent {ino_t d_ino;short d_reclen;short d_namlen;char d_name[256];};
typedef dap_send_fmt *ds_ptr;
typedef int32_t fsid_t[2];
struct header {short system_id;short a_magic;unsigned int version_id;struct sys_clock file_time;unsigned int entry_space;unsigned int entry_subspace;unsigned int entry_offset;unsigned int aux_header_location;unsigned int aux_header_size;unsigned int som_length;unsigned int presumed_dp;unsigned int space_location;unsigned int space_total;unsigned int subspace_location;unsigned int subspace_total;unsigned int loader_fixup_location;unsigned int loader_fixup_total;unsigned int space_strings_location;unsigned int space_strings_size;unsigned int init_array_location;unsigned int init_array_total;unsigned int compiler_location;unsigned int compiler_total;unsigned int symbol_location;unsigned int symbol_total;unsigned int fixup_request_location;unsigned int fixup_request_total;unsigned int symbol_strings_location;unsigned int symbol_strings_size;unsigned int unloadable_sp_location;unsigned int unloadable_sp_size;unsigned int checksum;};
typedef hpib_fmt *hp_ptr;
typedef enum _8D789D8C621DAD2FC02AE90C838DBC5D idop_t;
typedef uint8_t kcpu_t;
typedef uint16_t kpri_t;
typedef uint64_t kptr_t;
typedef uint32_t mask_t;
struct mbstat {u_long m_mbufs;u_long m_clusters;u_long m_spare;u_long m_clfree;u_long m_drops;u_long m_wait;u_long m_drain;u_long m_mtypes[256];};
typedef uint16_t mode_t;
struct mon_id {char *mon_name;struct my_id my_id;};
struct msgbuf {uint32_t msg_magic;int msg_bufx;char msg_bufc[4076];int msg_bufr;uint32_t __pad;struct msgbuf *__msg_nextbuf;};
struct msghdr {caddr_t msg_name;int msg_namelen;struct iovec *msg_iov;int msg_iovlen;caddr_t msg_accrights;int msg_accrightslen;};
typedef mt_req_fmt *mt_ptr;
typedef u_long n_long;
typedef u_long n_time;
struct netent {char *n_name;char **n_aliases;int n_addrtype;in_addr_t n_net;};
struct netobj {u_int n_len;char *n_bytes;};
typedef intptr_t page_t;
typedef uint32_t prot_t;
struct psfsid {int32_t psfs_id;int32_t psfs_type;};
struct pss_fs {uint32_t Pss_allocated;uint32_t Pss_min;uint32_t Pss_limit;uint32_t Pss_reserve;char Pss_mntpt[256];};
typedef enum _1D76D12FA440303E20F41CC1A8F30E80 r_os_t;
struct rlimit {rlim_t rlim_cur;rlim_t rlim_max;};
struct rtlist {int rtl_len;int rtl_cnt;int rtl_errno;uint32_t rtl_rtreq;};
struct rusage {struct timeval ru_utime;struct timeval ru_stime;int ru_maxrss;int ru_ixrss;int ru_idrss;int ru_isrss;int ru_minflt;int ru_majflt;int ru_nswap;int ru_inblock;int ru_oublock;int ru_ioch;int ru_msgsnd;int ru_msgrcv;int ru_nsignals;int ru_nvcsw;int ru_nivcsw;};
typedef int32_t sbit32;
union sigval {struct sigval___014CB6D68A4C85AD73214A8B9F40ED8B __svi_int_s;void *__sival_ptr;};
typedef __site_t site_t;
struct t_bind {struct netbuf addr;unsigned int qlen;};
struct t_call {struct netbuf addr;struct netbuf opt;struct netbuf udata;int sequence;};
struct t_info {t_scalar_t addr;t_scalar_t options;t_scalar_t tsdu;t_scalar_t etsdu;t_scalar_t connect;t_scalar_t discon;t_scalar_t servtype;t_scalar_t flags;};
typedef enum _1C2841DB270D08FF12D729B8B875CF0F t_type;
struct tdkseg {unsigned int dkxdma[256];struct tcb cmdqcb;struct tcb resqcb;int numchan;int inittime;int xmittime;int enqretry;int window;int dkbuffer[128];};
typedef enum _060345A566748B6B7B3029A3D61D112D ttsf_t;
typedef uint8_t u_int8;
typedef uint32_t ubit32;
struct udphdr {u_short uh_sport;u_short uh_dport;u_short uh_ulen;u_short uh_sum;};
typedef uint32_t uint32;
typedef u_longlong_t uint64;
typedef u_short vifi_t;
struct xsense {unsigned int error_code;unsigned char seg_num;unsigned int sense_key;unsigned char lba[4];unsigned char add_len;unsigned char copysearch[4];unsigned char sense_code;unsigned char resv;unsigned char fru;unsigned char field;unsigned short field_ptr;uint32_t dev_error;unsigned char misc_bytes[106];};
typedef CARD32 xwdval;
typedef enum _DE780EA72F8E98609D7C64E9E046D5B5 z_type;
typedef enum _KI_ID KI_ID;
typedef enum _003F63A829E52477BDB4080710A1139D VISIT;
typedef CARD16 XICID;
typedef CARD16 XIMID;
typedef int32_t aid_t;
struct alias {struct alias *aa_next;space_t space;unsigned int aa_saveprot;unsigned int offset_page;};
struct bnode {pgcnt_t b_key[30];int b_nelem;struct bnode *b_down[31];int pad[2];};
typedef int16_t cnt_t;
typedef int32_t dev_t;
struct dqblk {uint32_t dqb_bhardlimit;uint32_t dqb_bsoftlimit;uint32_t dqb_curblocks;uint32_t dqb_fhardlimit;uint32_t dqb_fsoftlimit;uint32_t dqb_curfiles;uint32_t dqb_btimelimit;uint32_t dqb_ftimelimit;};
struct event {struct timeval time;int code;int len;char info[40];};
typedef int32_t gid_t;
struct group {char *gr_name;char *gr_passwd;gid_t gr_gid;char **gr_mem;};
typedef int16_t int16;
typedef int32_t int32;
typedef longlong_t int64;
struct iovec {void *iov_base;size_t iov_len;};
typedef int32_t key_t;
typedef int32_t kid_t;
typedef int32_t pid_t;
struct psdev {int32_t psd_major;int32_t psd_minor;};
struct qband {struct qband *qb_next;ulong qb_count;struct msgb *qb_first;struct msgb *qb_last;ulong qb_hiwat;ulong qb_lowat;ulong qb_flag;int qb_pad1;};
struct queue {struct queue__qinit *q_qinfo;struct msgb *q_first;struct msgb *q_last;struct queue *q_next;struct queue *q_link;void *q_ptr;ulong q_count;ulong q_flag;int q_minpsz;int q_maxpsz;ulong q_hiwat;ulong q_lowat;struct queue__qband *q_bandp;unsigned char q_nband;unsigned char q_pad1[3];struct queue *q_other;struct queue__sth_s *queue_sth;};
union semun {int val;struct semid_ds *buf;ushort *array;};
typedef pid_t sid_t;
struct stats {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_opackets;int if_oerrors;int if_collisions;};
typedef int32_t tid_t;
struct timeb {time_t time;unsigned short millitm;short timezone;short dstflag;};
typedef int32_t uid_t;
typedef uint16_t use_t;
struct vfdcw {pgcnt_t v_start[5];pgcnt_t v_end[5];};
typedef CARD8 BOOL;
typedef CARD8 BYTE;
typedef XID Font;
struct GPIO {unsigned char ready;unsigned char id_reg;unsigned char intr_mask;unsigned char intr_control;union GPIO___CD29CE3F9A5F74D2438ACA80101F6228 data;unsigned char nop1;unsigned char p_status;};
struct csum {int32_t cs_ndir;int32_t cs_nbfree;int32_t cs_nifree;int32_t cs_nffree;};
typedef int32_t id_t;
typedef int8_t int8;
typedef uint64_t kt_t;
struct lock {u_int sl_lock;u_int sl_owner;u_int sl_flag;u_int sl_next_cpu;unsigned int sl_name_ptr;u_int sl_pad[3];};
struct mtop {short mt_op;daddr_t mt_count;};
struct pmap {u_long pm_prog;u_long pm_vers;u_long pm_prot;u_long pm_port;};
struct rate {t_scalar_t targetvalue;t_scalar_t minacceptvalue;};
struct rpcb {u_long r_prog;u_long r_vers;char *r_netid;char *r_addr;char *r_owner;};
struct fid {uint16_t fid_len;char fid_data[16];};
struct fis {int reqtype;int vtype;union fis___D2FBE5AA72B3FE89D07E39BB3AE19398 value;};
struct gdd {struct buf *b_actf;struct buf *b_actl;unsigned char comm_id;caddr_t diag_drv;};
struct mon {struct mon_id mon_id;char priv[16];};
struct tbf {u_long last_pkt_t;u_long n_tok;u_long q_len;};
struct tms {clock_t tms_utime;clock_t tms_stime;clock_t tms_cutime;clock_t tms_cstime;};
union nss_netdirbyaddr_in___CE97B67DEE6148096F4FDE472C356D76___402FC20F2F8747D95E943225C2B80849 {struct nss_netdirbyaddr_in______402FC20F2F8747D95E943225C2B80849___88B30E819A32A7C5A2483FC60DF633B4 host;struct nss_netdirbyaddr_in______402FC20F2F8747D95E943225C2B80849___DD9D9706BCA1D99FBF05A97517CD2BD0 serv;};
union nss_netdirbyname_in___B0B77147B63B1091E6DA80F49542BFD7___58B5E3A38D045874A5B40B03A1AE9E77 {struct nss_netdirbyname_in______58B5E3A38D045874A5B40B03A1AE9E77___B1ACEB72480E629E65426FBD00A027EA host;struct nss_netdirbyname_in______58B5E3A38D045874A5B40B03A1AE9E77___8B20E58A3D17A0A03EA6A023703226E6 serv;};
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___21E63C530F687031DFD8E4B8854A680E {void ( *ext_clfun)();caddr_t ext_clarg;caddr_t ext_buf;u_long ext_size;};
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___288D37544811B10AE4E24B6D57380C02 {int ( *mun_dux_clfun)();int mun_dux_clarg;space_t mun_sid;u_long mun_off;};
struct accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023___BFD7413E14FC21CAB05150D69A0647C0 {caddr_t where;xdrproc_t proc;};
struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___6811851F0FF4B086C89568DCBC52F637 {char *sym_name;struct load_module_desc *desc;size_t desc_size;UINT64 opd_ptr;};
struct _xEvent_________82F47A5C57D4899F304609D6061CA549___B8AD833485FADDB6F1E0494B45611EC6 {CARD32 type;INT16 shorts0;INT16 shorts1;INT16 shorts2;INT16 shorts3;INT16 shorts4;INT16 shorts5;INT16 shorts6;INT16 shorts7;INT16 shorts8;INT16 shorts9;};
struct _xEvent_________82F47A5C57D4899F304609D6061CA549___FB6660946ED728575FB5339601D7D5BE {CARD32 type;INT8 bytes[20];};
struct _xEvent_________82F47A5C57D4899F304609D6061CA549___FD3E7DCAA1FA6D37E77316D970071F0A {CARD32 type;INT32 longs0;INT32 longs1;INT32 longs2;INT32 longs3;INT32 longs4;};
union icommon______93873D87F0901CE97F7811FAD71196E7___F0CF6F5BDB5C5FE94D6E2190A27003CF {daddr_t ic_ib[3];struct icommon_________F0CF6F5BDB5C5FE94D6E2190A27003CF__ic_fifo ic_fifo;};
struct mount_data___3A2698B3DAC17E6F4BDDFCE59E817678___66909CDAA73D8BB361D0873CE34E06F0 {dev_t mdu_rdev;int32_t mdu_ufsopts;};
struct mount_data___3A2698B3DAC17E6F4BDDFCE59E817678___E4296C1DCBCDEF46C9FE471C8B3FCDB8 {int32_t mdn_nfsopts;int32_t mdn_retrans;int32_t mdn_timeo;int32_t mdn_rsize;int32_t mdn_wsize;uint32_t mdn_port;int32_t mdn_acregmin;int32_t mdn_acregmax;int32_t mdn_acdirmin;int32_t mdn_acdirmax;};
struct radix_node___CC52EDE493CB4C10BEB5E770D2F4C875___7BFDF6A125AABD0BBEC78233D359225F {u_int rn_Key;u_int rn_Mask;uint32_t rn_Dupedkey;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___5A60174FC6A07BE0049C674473C6C1C3 {CARD32 pad00;CARD32 window;CARD16 width;CARD16 height;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___99F5A2754EC45011AB028BB1CC2CE3C7 {CARD32 pad00;CARD32 window;CARD16 x;CARD16 y;CARD16 width;CARD16 height;CARD16 count;CARD16 pad2;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___9C75AB6DDEADA42926A4005EFC1B4241 {CARD32 pad00;CARD32 event;CARD32 window;INT16 x;INT16 y;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___CB6A6FBD4AABDC204CA09785462A5EAC {BYTE type;BYTE detail;CARD16 sequenceNumber;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___D4E6015299E8C3BAFA52E0C7400AB6A6 {CARD32 pad00;CARD32 window;BYTE mode;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___EDE3B33B7AF26E05A2A60AEE6589519E {CARD32 pad00;CARD32 event;CARD32 window;CARD32 parent;BYTE place;BYTE pad1;BYTE pad2;BYTE pad3;};
struct icommon___352D7131545A46E37526309B828AFFEE___93873D87F0901CE97F7811FAD71196E7 {daddr_t ic_db[12];union icommon______93873D87F0901CE97F7811FAD71196E7___F0CF6F5BDB5C5FE94D6E2190A27003CF ic_un;};
struct user___FFDA854C04C02961A1098ABC4F40B8D9___6D02ACB9AF8EC17C28B705B20C2A6BA3 {uint32_t u_ipsw_hi;uint32_t u_ipsw_lo;int32_t u_gr1_hi;int32_t u_gr1_lo;int32_t u_gr2_hi;int32_t u_gr2_lo;};
struct user___FFDA854C04C02961A1098ABC4F40B8D9___F40776A32F4CBFD4291F884ECF87D76A {uint64_t u_ipsw;int64_t u_gr1;int64_t u_gr2;};
struct ____A46E883B39A63C4EC4A922C85CF23D6B___45B314D309058A4EE65C712D679F5776 {xieTypPhotospace nameSpace;CARD32 floID;};
struct ____A46E883B39A63C4EC4A922C85CF23D6B___8A0E21D870C19C6340201A4DE96B0898 {CARD32 nameSpace;xieTypPhotoflo floID;};
struct ____DBFE4481F7E01E99261898FD11F89AAA___A0F582093321D483812420D2040EA3FB {term_event_type term_event_tag;term_signals sig_id;char sig_char;};
struct ____F4C8BAAF2D6A567135A62292FDA07584___EE0FC0C350DA985F345B12E3A23DD620 {status_kind_type type_of_status;status_option_type status_option;};
union _2B25FEECC0AF4D3C6F228158D7F8DAAB___D75DB3281057538F2464105F3776F9CC {scsi_io_req_type io;scsi_ctrl_req_type ctrl;};
union _894170B0EF0892045A226947D0AC1D57___A18BDC6CF65CB354BF02B415939C20C7 {dma_A_irs_type irs;dma_A_rs_type admars;};
union _8E3F17DF06268256B33C950219C36638___933121F4FA1889599F702E16603DBB9F {Elf64_Xword d_val;Elf64_Addr d_ptr;};
union _9E389EF8DB18C75445DC45CE7C2FFB9B___2798575F521600C1E26DD161E22996D8 {Elf32_Word d_val;Elf32_Addr d_ptr;};
struct _A888F4CBB68333EFDEC90D8B2463445D___F4941BA1D373F3B84FD701E76D927EC4 {space_t data_sid;anyptr data_vba;};
union _B9A90B4DCE92DDAD69847E7BE964BAAE___DBFE4481F7E01E99261898FD11F89AAA {int devrec_info;struct ____DBFE4481F7E01E99261898FD11F89AAA___A0F582093321D483812420D2040EA3FB term_event;struct ____DBFE4481F7E01E99261898FD11F89AAA___1C4AE2D93AE23D77F4B47FB682A792B0 event_console_msg;};
union _BE58583FCD7344D2421A54A7E98FFEA4___A46E883B39A63C4EC4A922C85CF23D6B {struct ____A46E883B39A63C4EC4A922C85CF23D6B___45B314D309058A4EE65C712D679F5776 immed;struct ____A46E883B39A63C4EC4A922C85CF23D6B___8A0E21D870C19C6340201A4DE96B0898 stored;};
struct _CE16222007FB0690EE3C9A36EEE011B3___0A101F8255B2594E50F8800F5A6D170D {io_subq_type event_subq;port_num_type event_port;};
union _XIMStatusDrawCallbackStruct___D9A2F521BD917AA4B9408853DE8DEFA7 {XIMText *text;Pixmap bitmap;};
union nispasswd_authresult___B078DBBAB3D407E214C0776301111B02 {nispasswd_verf npd_verf;nispasswd_code npd_err;};
union pst_stable_PA_RISC___811A57C25F847625213D630ECAF0A1B4 {struct pst_osdep Pss_osdep;struct pst_dump Pss_dump;};
union raw_audio_config___4B1DA410B3C012109C6DA8766FB16CE8 {struct psb2160conf psb2160_conf;struct cs4215conf cs4215_conf;unsigned char pad[126];};
union accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023 {struct accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023___C081DE2363A7D6E022ACDA68492DBB3F AR_versions;struct accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023___BFD7413E14FC21CAB05150D69A0647C0 AR_results;};
union dmem_lpmc_type___60B189A3D5F0BAB7BC0C1ACCC7AB7BD2 {struct dmem_viper_type viper;struct dmem_bush_type bush;};
union rejected_reply___D36433C375B856769A86CDA2CFADE497 {struct rejected_reply___D36433C375B856769A86CDA2CFADE497___C081DE2363A7D6E022ACDA68492DBB3F RJ_versions;enum auth_stat RJ_why;};
union __save_state___6400AEC7CA6EA3805CB5F513CAC8376A {__reg64_t ss_64;__reg32_t ss_32;};
union __save_state___ADF62F0D2F86BC133A18056C2B731A2B {fp_dbl_block_t fpdbl;fp_int_block_t fpint;};
union authdes_verf___D072B0FF48589EAC93A5A80C9BF6CD34 {struct timeval adv_ctime;des_block adv_xtime;};
struct __res_state___B3BDC6EDFE034C45356CAA64B4B51D1E {struct in_addr addr;u_int32 mask;};
struct npd_request___04A93ECC78428ACBA0FDC65FE7C8FE57 {u_int npd_authpass_len;u_char *npd_authpass_val;};
struct npd_request___C3CD0BD37319ED44942FA197CF7B5408 {u_int user_pub_key_len;u_char *user_pub_key_val;};
struct cback_data___8577E6F7A3DA394015609B473F63AD7B {u_int entries_len;obj_p *entries_val;};
union mount_data___3A2698B3DAC17E6F4BDDFCE59E817678 {struct mount_data___3A2698B3DAC17E6F4BDDFCE59E817678___66909CDAA73D8BB361D0873CE34E06F0 md_ufs;struct mount_data___3A2698B3DAC17E6F4BDDFCE59E817678___E4296C1DCBCDEF46C9FE471C8B3FCDB8 md_nfs;};
union radix_node___CC52EDE493CB4C10BEB5E770D2F4C875 {struct radix_node___CC52EDE493CB4C10BEB5E770D2F4C875___7BFDF6A125AABD0BBEC78233D359225F rn_leaf;struct radix_node___CC52EDE493CB4C10BEB5E770D2F4C875___E90AF929005CC4DA938BE2E2A9208386 rn_node;};
struct db_result___9149203512B34436CC9F59DE53ABE05A {u_int objects_len;entry_object_p *objects_val;};
struct group_obj___6B1AF3D1F6DE7092D80225088D6E3A34 {u_int gr_members_len;nis_name *gr_members_val;};
union ifreq___B4C116E395E63C3ED2AA96136FF1ED60 {struct sockaddr ifru_addr;struct sockaddr ifru_dstaddr;struct sockaddr ifru_broadaddr;short ifru_flags;int ifru_metric;caddr_t ifru_data;};
struct _______A0F582093321D483812420D2040EA3FB {term_event_type term_event_tag;term_signals sig_id;char sig_char;};
struct _______EE0FC0C350DA985F345B12E3A23DD620 {status_kind_type type_of_status;status_option_type status_option;};
union user___FFDA854C04C02961A1098ABC4F40B8D9 {struct user___FFDA854C04C02961A1098ABC4F40B8D9___F40776A32F4CBFD4291F884ECF87D76A u_64;struct user___FFDA854C04C02961A1098ABC4F40B8D9___6D02ACB9AF8EC17C28B705B20C2A6BA3 u_32;};
union ____DBFE4481F7E01E99261898FD11F89AAA {int devrec_info;struct ____DBFE4481F7E01E99261898FD11F89AAA___A0F582093321D483812420D2040EA3FB term_event;struct ____DBFE4481F7E01E99261898FD11F89AAA___1C4AE2D93AE23D77F4B47FB682A792B0 event_console_msg;};
typedef void ( *XmMenuSystemRecordPostFromWidgetProc)(Widget, Widget, Boolean);
struct ip_timestamp__ipt_timestamp__ipt_ta {struct in_addr ipt_addr;n_long ipt_time;};
struct _02A785B3A8D92BC19FFDFB76C1A58D9E {XRecordClientSpec client;unsigned int nranges;XRecordRange **ranges;};
struct _02B7C110B96F422043FD747664A5A945 {CARD8 reqType;CARD8 dpmsReqType;CARD16 length;CARD16 majorVersion;CARD16 minorVersion;};
struct _037FA328FF3097084EC208F512F1E495 {uint32_t dl_qos_type;int dl_rcv_throughput;int dl_rcv_trans_delay;int dl_xmt_throughput;int dl_xmt_trans_delay;int dl_priority;int dl_protection;int dl_residual_error;dl_resilience_t dl_resilience;};
struct _03D5BB64BEC6FD91F45C473FB811595F {Cardinal number;Cardinal maximum;RangeRec *range;};
struct _064F821DAAD25287F43010D2D1702E84 {INT16 kernelSize;CARD16 pad;};
struct _06C41AE9C3ADE0B1D3F5C4BB6B518DE2 {TransIntrCallbackPtr intr_cb;struct _06C41AE9C3ADE0B1D3F5C4BB6B518DE2___XtransConnInfo *trans_conn;int fd;char *address;Window window;int is_putback;};
struct _0A132E968BCCC0DBF60AFD92D1AD913D {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 unused1[2];CARD32 length;CARD8 saveType;CARD8 shutdown;CARD8 interactStyle;CARD8 fast;CARD8 unused2[4];};
struct _0C1A989C237847E9E0FEF5D20B714342 {CARD8 reqType;CARD8 nElts;CARD16 length;};
struct _0CC2C7B5C742C31129BAD132CF836E30 {int reason;XEvent *event;XmString value;int length;};
struct _0E247DB22AD8AF66BC5F1E9B22EF7600 {char *ar_name;time_t ar_date;int ar_uid;int ar_gid;unsigned int ar_mode;off_t ar_size;char *ar_rawname;};
struct _0F3BCE20E1217B8B60181F2FE2EFC047 {int type;unsigned int serial;int send_event;Display *display;Window parent;Window window;int place;};
struct _0F462D16F92216AF6E2B02359C172FD3 {int IfIndex;mib_physaddr_t PhysAddr;ip_addr NetAddr;int Type;};
struct _101ED56796A31C5C092EFC61C0F81522 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 unused[2];CARD32 length;};
struct _1073DFC4CB91CB67014BB0410F5A46CA {mib_ifEntry mib_if;ext_mib_t mib_ext;};
struct _10F395C20BEC4113025BB1D0BA3DF492 {int type;unsigned int serial;int send_event;Display *display;Window window;char key_vector[32];};
struct _128846696A0AF303C7B67A876F3BD8E7 {io_subq_type reply_subq;port_num_type lm_port_num;};
struct _14517969CE1DE2400F22B62AB3BF03DD {int reason;XEvent *event;Widget item;unsigned char new_outline_state;};
struct _15B7F0BFFE6DCDCAE20B6A9217222101 {int type;unsigned int serial;int send_event;Display *display;XPContext context;int detail;};
struct _1643EA4171E7327ACC09A96188B3F1FC {_LC_weight_t ct_wgt; _LC_collel_t *ct_collel;};
struct _1951E760351567381BAD8ED74E25D6B9 {io_subq_type reply_subq;io_subq_type hm_event_subq;short hm_subsys_num;short hm_meta_lang;int hm_rev_code;ulong_t hm_config_addr_3;ulong_t hm_config_addr_2;ulong_t hm_config_addr_1;};
struct _1A669B82059DE4CB2E4065120B43A549 {CARD8 class;CARD8 id;CARD16 length;CARD8 pad1;CARD8 pad2;CARD16 accelNum;CARD16 accelDenom;CARD16 threshold;};
struct _1BE3EF8FAEFD838E59DA61E46CB3832E {Window swap_window;XdbeSwapAction swap_action;};
struct _1C76DEC9422C2C08D66C4CAF0900D0FE {char nm_device[32];u_int ifindex;ip_addr netaddr;u_int in_packets;u_int out_packets;};
struct _1D4F7230B22579A4FD715C0E003DAA6E {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 protocolOpcode;CARD8 mustAuthenticate;CARD32 length;CARD8 versionCount;CARD8 authCount;CARD8 unused[6];};
struct _1E2A6A9B5EC919B5C597AB6887935210 {String name;String type;XtArgVal value;int size;};
struct _1F1E298AC6D409D251F9CAC94C3160CD {bit8 cmd_bytes[16];bit8 cmd_length;disc_direction direction;unsigned char cs80_transparent;};
struct _27E0D75A8414B78E0BA8E2B84253D452 {Visual *visual;VisualID visualid;int screen;int depth;int class;unsigned int red_mask;unsigned int green_mask;unsigned int blue_mask;int colormap_size;int bits_per_rgb;};
struct _28183F13DB7442E77993ED2BEDDC9E43 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 deviceid;CARD8 firstKeyCode;CARD8 keySymsPerKeyCode;CARD8 keyCodes;};
struct _29A84F0A94EF9B7976BAF082CF524F09 {int type;unsigned int serial;int send_event;Display *display;Window event;Window window;Window parent;int x;int y;int override_redirect;};
struct _2B0FE3CE97643252456137D89C9199E9 {CARD16 elemType;CARD16 elemLength;CARD32 rectangles;};
struct _2B28F023E44E807B69CBD6D694D8FE1D {xieTypOrientation encodedOrder;CARD8 pad[3];};
struct _2B6C11629D4FEDD0D62560CB169B6CB3 {INT32 offsetX;INT32 offsetY;xieTypPhototag domain;};
struct _2B6C772F9B0F9D5573534694AD1B578D {int type;unsigned int serial;int send_event;Display *display;Window event;Window window;int place;};
struct _2C268D9809C6E9DE2B818A0BB7518C2E {CARD16 control;CARD16 length;CARD32 num_valuators;};
struct _2C3C200F8615C3857493506364E8C173 {int type;unsigned int serial;int send_event;Display *display;Window event;Window window;int x;int y;};
struct _2F09618765ADF879434C95865A0073B3 {io_name_type name[15];int num_elements;};
struct _2FA041E8182EB8B5CCC89EC7ACEF90A4 {dev_t da_dev;dev_t da_lv;uint64_t da_offset;uint64_t da_size;};
struct _2FE8A43D0B1C598C64B8CAA3C247D575 {short request_msg_type;short reply_msg_type;scsi_req_type req;scsi_reply_type reply;};
struct _300412910FB0CF3B4D618F8DD622E104 {int IfIndex;mib_physaddr_t PhysAddr;ip_addr NetAddr;};
struct _332CB8E67E48984461DA80E3D7B1FF5F {uint32_t dl_addr;uint32_t ( *dl_proto_func)();uintptr_t dl_proto_info;};
struct _338644C2278094D31E58DDA0CC7454C7 {char *icon_name;Boolean iconic;Atom icon_name_encoding;};
struct _34681C3D6FB58953006C9844DC50C14F {BYTE type;BYTE map[31];};
struct _350BC2B23F9B41AFEB7D1AE3E404670A {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 versionIndex;CARD8 unused;CARD32 length;};
struct _355FFBAADB08B4CAA5BBFAF829DED10A {RECORD_RANGE8 majorCode;RECORD_RANGE16 minorCode;};
struct _377D72BC5BEAEFFF791FF5908AB0C8A7 {int reason;XEvent *event;int page_number;Widget page_widget;int prev_page_number;Widget prev_page_widget;};
struct _3907063ACFEA1ED8727BCBCBBA6E87C4 {char *cri_hostname;char *cri_model;char *cri_panic;char *cri_release;char *cri_dumptime;char *cri_savetime;uint64_t cri_chunksize;uint64_t cri_memsize;uint64_t cri_num_err;char **cri_errmsg;uint64_t cri_num_warn;char **cri_warnmsg;uint64_t cri_num_mod;cr_modinfo_t *cri_modinfo;uint64_t cri_mem_map_offset;};
struct _39DC38FE6F9D9CB7A4182EA2E1F19530 {INT32 x;INT32 y;CARD32 width;CARD32 height;};
struct _3A4328BABB1376C167ED72E6C2928858 {_LC_object_t hdr;char *( *nl_langinfo)(nl_item, _LC_locale_t *);struct _3A4328BABB1376C167ED72E6C2928858__lconv *( *localeconv)(_LC_locale_t *);_LC_locale_t *( *init)(_LC_locale_t *);void *data;};
struct _3AD473A9924D2058FA4FA6E47C9E79DE {XRecordRange8 ext_major;XRecordRange16 ext_minor;};
struct _3AD4CBF69EE89480875180DC2A9357C1 {int type;unsigned int serial;int send_event;Display *display;Window window;int mode;int detail;};
struct _3B56314BB57D9CAEC1E1C6F1E501BCB8 {sym_name_entry_type *az_name;sym_entry_type *az_reference;sym_entry_type *az_next;char *az_comment;unsigned int b_flags;};
struct _3B895FF4AB049C141C5F7C25E8036379 {CARD16 control;CARD16 length;CARD8 first_valuator;CARD8 num_valuators;CARD8 pad1;CARD8 pad2;};
struct _3BEEF239534EE9E2D4AD58999E56F197 {CARD8 reqType;CARD8 ReqType;CARD16 length;};
struct _3D4A26743286481CAEF9451FC80F9AE7 {CARD16 elemType;CARD16 elemLength;xieTypROI roi;};
struct _3F6D9256F664518C180F1B78EC3229D4 {pid_t tts_fpid;lwpid_t tts_flwpid;int tts_isparent;};
struct _44C0AE5AD18E7CD0D8F56B2EE020CE64 {int type;unsigned int serial;int send_event;Display *display;Window window;int x;int y;int width;int height;int count;};
union _465FCB570093E3F643B603A6D3E8A1C4 {u_int iodc16[4];struct _465FCB570093E3F643B603A6D3E8A1C4___9C319EEE4375217EAF366142772AFB9D iodc8;};
struct _47D21BE5BB287FEA72F9A52CF871A5C0 {XID id_base;Time server_time;unsigned int client_seq;int category;int client_swapped;unsigned char *data;unsigned int data_len;};
struct _4811DE8B61D0522D3363266E4D46EA9A {int type;unsigned int serial;int send_event;Display *display;Window event;Window window;};
struct _488EF114463850BAC9987E879A5DF652 {XID device_id;int num_classes;XInputClassInfo *classes;};
struct _48B3880E4699D314B19152DFBFE9205B {String name;XtPointer value;};
struct _4D69B6347F056FE268056727CEA155AA {unsigned int *chars;int nchars;int delta;XFontSet font_set;};
struct _4FA67FD0121DE61C8BBE74D0ECEE2878 {XRecordRange8 core_requests;XRecordRange8 core_replies;XRecordExtRange ext_requests;XRecordExtRange ext_replies;XRecordRange8 delivered_events;XRecordRange8 device_events;XRecordRange8 errors;int client_started;int client_died;};
struct _51BDB5BB8E697D220A414B00E8CF85AE {mib_Dot3StatsEntry dot3stats;mib_Dot3CollEntry dot3colls;};
struct _544A67C4B1E4A518808DDEC63E07788D {bit8 loopback_option;int loopback_length;data_ptr_type loopback_data_ptr;data_ptr_type return_data_ptr;};
struct _5462DF8C178A5086C137AD8B370A2274 {int type;unsigned int serial;int send_event;Display *display;Multibuffer buffer;};
struct _54DAE81C1FDB4CAB14152B166C6055EB {xEvent b;xHPExtensionEvent x;};
struct _568B7DAEE9030118F2B9A79B2684B02F {char magic[14];char machine[9];char sysname[9];char release[9];char nodename[9];char username[9];char recsize[8];char time[64];char mediause[5];char volno[5];char check[5];char indexsize[8];BKUPID backupid;char checksum[12];char numfiles[12];char lang[32];char fsmfreq[5];char pad[1809];};
struct _56F59331F03F8FDAB1249A71F6343C1C {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;};
struct _5844B3F658E992D348A8DA77109E2376 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src1;xieTypPhototag src2;xieTypPhototag src3;CARD16 pad;};
struct _59351FDCD0841299E6F657798DC5AE28 {xieTypFloat inputLow0;xieTypFloat inputLow1;xieTypFloat inputLow2;xieTypFloat inputHigh0;xieTypFloat inputHigh1;xieTypFloat inputHigh2;CARD32 outputLow0;CARD32 outputLow1;CARD32 outputLow2;CARD32 outputHigh0;CARD32 outputHigh1;CARD32 outputHigh2;};
struct _5AD947F5E98A54D1DD7F12D200D092D7 {BLKID com;BKUPID id;char filenum[12];};
struct _5C0DD3C4E70CCCC9965B24A6BE5ED8FB {CARD8 depth;CARD8 bitsPerPixel;CARD8 scanLinePad;CARD8 pad1;CARD32 pad2;};
struct _5C41C718BCBFD6CC2A68DF59D547D717 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 versionCount;CARD8 authCount;CARD32 length;CARD8 mustAuthenticate;CARD8 unused[7];};
struct _5CD0DDA75FC8A64FD62E45433429A157 {CARD8 reqType;CARD8 XTestReqType;CARD16 length;};
struct _5D605798B949FE2847BA0CD5F658BE18 {CARD8 class;CARD8 id;CARD16 length;CARD16 max_symbols;CARD16 num_syms_supported;};
struct _5D81407642129E8D3F1879551A611D5D {int type;Display *display;XSyncCounter counter;unsigned int serial;unsigned char error_code;unsigned char request_code;unsigned char minor_code;};
struct _5EECF7E464F62285F8C0B2C4DC549E8B {int reason;XEvent *event;WidgetList selected_items;int selected_item_count;unsigned char auto_selection_type;};
struct _5FA36CED10B8B6FD8E7AA456D875B9FC {comsec_nss_files_parms_t files_parms;comsec_nss_nisplus_parms_t nisplus_parms;int *nss_int;struct _5FA36CED10B8B6FD8E7AA456D875B9FC__pr_passwd *prpw;};
struct _625DD72E42D2E4120693244DFAAD3348 {CARD8 reqType;CARD8 dpmsReqType;CARD16 length;};
struct _632FCC76A12788D9E06A5D44275BFCFA {int reason;XEvent *event;Widget widget;char *data;char *callbackstruct;};
struct _63AF34F92436E0E20A119355607DCC44 {xieTypOrientation fillOrder;xieTypOrientation pixelOrder;CARD8 pixelStride;CARD8 leftPad;CARD8 scanlinePad;CARD8 pad[3];};
struct _648D5B97A5A1D2D2729A4C51B6643734 {XChar2b *chars;int nchars;int delta;Font font;};
struct _666210E100F3CB5D4A75782C69E711A8 {CARD8 header;CARD8 pad1;CARD16 jumpx;CARD16 jumpy;CARD16 delay_time;};
struct _6696D83380ECD241D01FB0DC261CC039 {xEvent b;xAnyExtensionEvent x;};
struct _67CA7CC32887388D86A8ADA32FEABADE {uint32_t dl_ppa;uint32_t dl_hw_path[5];uint32_t dl_hw_path_len;uint32_t dl_mac_type;uint8_t dl_phys_addr[6];uint8_t dl_pad[2];uint32_t dl_reserved1;uint32_t dl_reserved2;};
struct _67E052DBE3D4216490A6D8B2745BB149 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 data[2];CARD32 length;};
struct _694E7AF0BC9EE95CDB6E54249E923D7E {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 byteOrder;CARD8 unused;CARD32 length;};
struct _6955332288667D59DD3C97A58CBD715E {uint32_t dl_primitive;uint32_t dl_sap;uint32_t dl_max_conind;uint16_t dl_service_mode;uint16_t dl_conn_mgmt;uint32_t dl_xidtest_flg;};
struct _6A9F4E252AF5B29C924E4470887811E1 {XcmsFloat XYZtoRGBmatrix[3][3];XcmsFloat RGBtoXYZmatrix[3][3];IntensityTbl *pRedTbl;IntensityTbl *pGreenTbl;IntensityTbl *pBlueTbl;};
struct _6AD1C0C303B7C98984BF80315D836E89 {CARD8 class;CARD8 id;CARD16 length;CARD8 pad1;CARD8 pad2;CARD16 num_keysyms;};
union _6ADEE7E8E636EADD16A77F1733C8254B {dot3_ext_mib_t dot3_ext_mib;dot5_ext_mib_t dot5_ext_mib;};
struct _6AE5D21AAEA04E1B024F0DA11C966966 {CARD32 levels0;CARD32 levels1;CARD32 levels2;xieTypFloat lumaRed;xieTypFloat lumaGreen;xieTypFloat lumaBlue;xieTypFloat bias0;xieTypFloat bias1;xieTypFloat bias2;};
struct _6B749E7B3ADE7B53BF5DB5005F238EAC {data_ptr_type cmd_ptr;data_ptr_type data_ptr;data_ptr_type status_ptr;int cmd_count;int data_count;int status_count;addr_class_type cmd_class;addr_class_type data_class;addr_class_type status_class;};
struct _6C0DBE15692AB0301FA41806B271F811 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 cancelShutdown;CARD8 unused;CARD32 length;};
struct _6CA79B54BE0B8C15E4B81B027FF362F3 {CARD8 reqType;CARD8 opcode;CARD16 length;CARD16 majorVersion;CARD16 minorVersion;};
struct _6D3C85AC6D83151282A45A4C6F921D54 {llio_status_type reply_status;int lm_rev_code;short lm_queue_depth;io_subq_type lm_low_req_subq;io_subq_type lm_hi_req_subq;unsigned char lm_alignment;};
struct _6D54C15C1E6E6575901DF83330F155E4 {llio_status_type llio_status;cio_vquad_ptr vquad_chain;};
struct _6EA1208F05D799B306741A1D21B7D8A7 {int type;unsigned int serial;int send_event;Display *display;Window event;Window window;int from_configure;};
struct _705D0BEDE90FA70168249FE65D21D1D3 {int type;unsigned int serial;int send_event;Display *display;Window parent;Window window;int x;int y;int width;int height;int border_width;Window above;int detail;unsigned int value_mask;};
struct _70A9562056F67DACEF60FAD2632E0937 {unsigned16 iv;unsigned16 mitr;unsigned8 ct;unsigned8 host_id;unsigned8 host_ports;unsigned8 cont_mode;unsigned8 cn[3];unsigned8 csi[4];unsigned8 resrvd;};
struct _7228480D3079CE2808B81A1C1362B902 {CARD32 levels0;CARD32 levels1;CARD32 levels2;xieTypFloat lumaRed;xieTypFloat lumaGreen;xieTypFloat lumaBlue;xieTypFloat scale;};
struct _725E8F7C15FD9EA8CEABFA325DB9AE90 {int que_head;int que_tail;int que_state;int que_msgs_qued;int que_size;int que_high_water_mark;u_int que_msgs_dropped;u_int que_msgs_captured;int que_kill;int que_sleep;caddr_t que_save_msg;caddr_t *que_start;};
struct _735C3716122317809AD8BB5A186A1FBE {XID class;int length;XID id;int num_keysyms;KeySym *syms_to_display;};
struct _74F473584FBEEE22607318AA08113DD7 {XtCallbackList callback;XtCallbackList value_changed_callback;int history_max_items;Boolean error;};
struct _7B203B1D6B17DB4D229BE0C85CFA6293 {INT16 leftSideBearing;INT16 rightSideBearing;INT16 characterWidth;INT16 ascent;INT16 descent;CARD16 attributes;};
struct _7DBE86895C9FAEA11C6FA571DFE5C5A7 {XmTextPosition position;XmHighlightMode mode;};
struct _7FAD4DA9375019A5494A191BEF0405E8 {int type;unsigned int serial;int send_event;Display *display;Window parent;Window window;};
struct _83A9560127C5CA1AF601DD4E7C3B278F {CARD32 time;INT16 x;INT16 y;};
struct _84637925C97ECDBBFF1C7795F561A4FD {llio_std_header_type msg_header;diag_event_type diag_event;};
struct _85ADD90E39F3CB0C7E30B8F1E31A0398 {int type;unsigned int serial;int send_event;Display *display;Window parent;Window window;int x;int y;int width;int height;int border_width;int override_redirect;};
struct _862C78E84E0440EAFBA1B70B10D2ADC6 {llio_status_type reply_status;int transfer_count;dm_io_func_type func;};
struct _872DA2C06F6354E0B9D12CAAA5AF3997 {dma_A_lower_page_type lower_page;dma_A_upper_page_type upper_page;};
struct _8769733A5E2B58204D7D1C398CD68FC2 {BLKID com;char filenum[12];char status[2];};
struct _878771DB38D99FAEDA04208FA2D454F9 {short subsys_id;int kind;int class;unsigned short log_instance;uid_t uid;int dev_id;int pid;int rpr;int cm_path_id;int packetlen;int tracedlen;struct timeval time;unsigned int dropped_packets;char pkt;};
struct _87D722ECD21497B94ED1D7223FEC05F4 {String type;Widget widget;};
struct _88FB39CD3802D019F63911908A8052EF {int type;Display *display;Window window;};
struct _8A6937EA0F1140EDE7FB1476278A9B17 {Dimension margin_width;Dimension margin_height;XtCallbackList resize_callback;XtCallbackList expose_callback;XtCallbackList input_callback;unsigned char resize_policy;XtCallbackList convert_callback;XtCallbackList destination_callback;};
struct _8E3F17DF06268256B33C950219C36638 {Elf64_Sxword d_tag;union _8E3F17DF06268256B33C950219C36638___933121F4FA1889599F702E16603DBB9F d_un;};
struct _946F90356326732355482879C32EA6C8 {dev_t mksf_dev;int mksf_name_len;int mksf_index;mt_property_type mksf_prop;char mksf_path[61];char mksf_string[64];};
struct _94ACE20E5FEED38F4BC574FBC8AC4DA0 {int type;Display *display;XID resourceid;unsigned int serial;unsigned char error_code;unsigned char request_code;unsigned char minor_code;};
struct _94B6BB2CA433A719FA3DF4B093FD2460 {XtCallbackList sash_action;Boolean has_focus;};
struct _94BA1CF8E02B3DD63AEB474E08D83A67 {llio_status_type reply_status;io_subq_type request_subq;};
struct _94DE3FD15F99ADB1828A8006E569663B {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 unused1[2];CARD32 length;CARD8 saveType;CARD8 shutdown;CARD8 interactStyle;CARD8 fast;CARD8 global;CARD8 unused2[3];};
struct _97824D292CB3BFD64DCF032B8AE1F8A2 {llio_status_type reply_status;llio_status_type auto_sense_status;int data_residue;int sense_count;int msg_in_1_count;int msg_in_2_count;bit8 bad_msg_index;};
struct _99C02650D618D1A0DF55A9E85FF77BBA {sym_entry_header_type header;sym_obj_header_type obj_header;unsigned char v_arg_checking;unsigned char b_arg_count;unsigned char b_arg_type;unsigned char b_widget_type;};
struct _9A231DBDEFAF4839DC9D8D20B6CD75A5 {int reason;XEvent *event;XmString value;int length;XmString mask;int mask_length;XmString dir;int dir_length;XmString pattern;int pattern_length;};
struct _9AD92D66A9B7FE2D16898D79F4A40DAD {char *protocol_name;_IcePoProtocol *orig_client;_IcePaProtocol *accept_client;};
struct _9B6DE42DFC0BE749FCDBD18B5A574DFA {int reason;XEvent *event;Window window;};
struct _9C4E191A23082E8382C3082F6BDAC149 {int xrm_name;int xrm_class;int xrm_type;Cardinal xrm_size;int xrm_offset;int xrm_default_type;XtPointer xrm_default_addr;};
struct _9D6FB564ED57422FFB268B9144C446E8 {CARD8 type;CARD8 pad00;CARD16 sequenceNumber;CARD8 actions[28];};
struct _9E389EF8DB18C75445DC45CE7C2FFB9B {Elf32_Sword d_tag;union _9E389EF8DB18C75445DC45CE7C2FFB9B___2798575F521600C1E26DD161E22996D8 d_un;};
struct _9E547439B10E1F44156DCF6309E9ADBF {CARD8 class;CARD8 length;CARD8 num_buttons;BYTE pad1;CARD8 buttons[32];};
struct _9E6AFD3F610E739A7AC12834FF3A90B2 {xieTypOrientation fillOrder;xieTypOrientation pixelOrder;CARD8 pixelStride;CARD8 scanlinePad;};
struct _9E831FE87E4AD00EC571C939110831F6 {status_option_type status_option;int return_length;data_ptr_type return_buff;};
struct _9EBEE5732934E798190927254B0CA2D3 {XID class;int length;XID id;int max_symbols;int num_syms_supported;KeySym *syms_supported;};
struct _A313ED2DE25BE046A874D492CFBD731F {Elf64_Addr r_offset;Elf64_Xword r_info;};
struct _A33417F0A315FD178FB7057BD253B71F {io_subq_type reply_subq;port_num_type hm_port_num;};
struct _A45DC8244913A5DE9E65EAA74CBD4D3A {int64_t da_dev;int64_t da_lv;uint64_t da_offset;uint64_t da_size;};
struct _A72D5FE34FE1565D7A5E27361D12995E {CARD8 reqType;CARD8 opcode;CARD16 length;};
struct _A730944FA410AA8A66044A1D444ACA29 {llio_status_type reply_status;union _A730944FA410AA8A66044A1D444ACA29___BA8CFCC0194ACA3351216723ACBFD289 u;};
struct _AAD257271AAA9A190B14D3482C45D035 {CARD8 reqType;CARD8 recordReqType;CARD16 length;CARD16 majorVersion;CARD16 minorVersion;};
struct _ABE13B6E6B6B6BFEE76F70FD1C3050FB {int reason;XEvent *event;XmString item;int item_length;int item_position;XmString *selected_items;int selected_item_count;int *selected_item_positions;char selection_type;char auto_selection_type;};
struct _ABE60368F0168DDE4E32B527D5287C6B {CARD8 reqType;CARD8 dpmsReqType;CARD16 length;CARD16 level;CARD16 pad0;};
struct _AC3C30478DB292C58361350945D68834 {int type;unsigned int serial;int send_event;Display *display;Window window;int request;int first_keycode;int count;};
struct _AF5FB4080A51E8992C2DCC85F9B13FAA {CARD8 header;CARD8 keycode;CARD16 delay_time;};
struct _B00CD904CB46A0C43826F3F9731A78AD {int type;unsigned int serial;int send_event;Display *display;Drawable drawable;int major_code;int minor_code;};
struct _B05C30B25A8F0D780E68E0B4266EE664 {XtGrabKind grab_kind;Position old_x;Position old_y;};
struct _B1BB4607B75CFFBC9D91E675F4E88C61 {Widget parent;Widget *children;Cardinal num_children;Cardinal num_slots;};
struct _B3807A7E298580816B8893D27A6B40D0 {XEventClass event_type;XID device;};
struct _B55126CE33CB6542D7325DF23CE7DCCD {int type;unsigned int serial;int send_event;Display *display;Drawable drawable;int x;int y;int width;int height;int count;int major_code;int minor_code;};
struct _B6E7D1C43482AAA4EB74B93FC1D2BC12 {int type;unsigned int serial;int send_event;Display *display;Window window;};
struct _B79898920517315C7D12A700339C3F7F {int type;unsigned int serial;int send_event;Display *display;XPContext context;unsigned int available;};
struct _B8BE427FC8694D49638950F9AF5F05C2 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 success;CARD8 unused;CARD32 length;};
struct _B9A1077AA8A94E3FB7BECD083E4F56D6 {int ( *func_ptr)();caddr_t data_ptr;uint32_t filter_cnt;uint32_t no_filter_cnt;uint32_t phys_ref_cnt;uint32_t multi_ref_cnt;uint32_t sap_ref_cnt;};
struct _B9A90B4DCE92DDAD69847E7BE964BAAE {event_type dm_io_event_tag;union _B9A90B4DCE92DDAD69847E7BE964BAAE___DBFE4481F7E01E99261898FD11F89AAA u;};
struct _BB279EA07E8836E412716D1B8B41E21D {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 deviceid;CARD8 numKeyPerModifier;CARD16 pad1;};
struct _BD178E0A39C9899E81B8A1C4DD464555 {int type;Display *display;XSyncAlarm alarm;unsigned int serial;unsigned char error_code;unsigned char request_code;unsigned char minor_code;};
struct _BDA7F7EC09C455D172B8FEBDBF052954 {CARD8 class;CARD8 id;CARD16 length;};
struct _BDC98B6B0C6F123FC30FB829F8EEF7EF {int type;unsigned int serial;int send_event;Display *display;Multibuffer buffer;int state;};
struct _BDF903C03D0CED00076182B436D02DEE {_LC_object_t hdr;char *( *nl_langinfo)(nl_item, _LC_resp_t *);int ( *rpmatch)( char *, _LC_resp_t *);_LC_resp_t *( *init)(_LC_locale_t *);void *data;};
struct _BE733542885A402087DA3ED85C7943DF {gc_dma_flags_t flags;void *address;int size;gc_dma_wait_type_t wait_type;int _reserve[4];};
struct _BFA06AD98FBBDDEDC0B582E2B4AC4030 {CARD8 reqType;CARD8 hpReqType;CARD16 length;};
struct _C459D5BB7F5319395AB9822D9CBB3596 {int function;unsigned int plane_mask;unsigned int foreground;unsigned int background;int line_width;int line_style;int cap_style;int join_style;int fill_style;int fill_rule;int arc_mode;Pixmap tile;Pixmap stipple;int ts_x_origin;int ts_y_origin;Font font;int subwindow_mode;int graphics_exposures;int clip_x_origin;int clip_y_origin;Pixmap clip_mask;int dash_offset;char dashes;};
struct _C4D830AACD6CA9C030EA39190076ECCB {String name;XtArgVal value;};
struct _C642F6064919D5A0398A3A6264CD181D {disc_addr spare_da;unsigned char no_retain_data;bit8 mode_byte;};
struct _C64C6FF65947C35F73E5DDA7D3ADCCD3 {int type;unsigned int serial;int send_event;Display *display;Window window;int state;};
struct _C8947F8085B53BC448296C99056DF745 {uint32_t dl_data_len;uint8_t *dl_data;};
struct _C8CD1AC7BB16F52EEB6B35007FE94FA3 {int type;unsigned int serial;int send_event;Display *display;Window event;Window window;int override_redirect;};
struct _CB86ED79A67F464A5E5DD7E35915D8C3 {char *option;char *specifier;XrmOptionKind argKind;XPointer value;};
struct _CD1186DFDE2B09DB150CB2EF4FAB66C0 {io_subq_type reply_subq;bit8 da_number;bit8 ctrl_func;int ctrl_parm;};
struct _CD460451436B92EA879ADEB542921FD3 {int type;unsigned int serial;int send_event;Display *display;Window event;Window window;int x;int y;int width;int height;int border_width;Window above;int override_redirect;};
struct _CE2CC21A8DF6496E4E3BA1994C658522 {XSyncTrigger trigger;XSyncValue event_threshold;};
struct _CF91FEEC29390B2E3A7754517937B585 {XID device_id;int num_classes;XInputClass *data;};
struct _D1161C69BF81CBC5E33289869028550C {char nm_device[32];u_int ppa_num;u_int collisions;mib_ifEntry if_entry;};
struct _D2A436EA22C40B91455F5B9FAC22C559 {Screen *screen;XContext context;unsigned char type;};
struct _D3BD8D5467099E62AC519BE3BD77B02F {INT16 simple;CARD16 pad;};
struct _D71CF58A1EDDEAF67439A6E5BF4C5237 {uint32_t dl_next_offset;uint32_t dl_ppa;uint8_t dl_hw_path[100];uint32_t dl_mac_type;uint8_t dl_phys_addr[20];uint32_t dl_addr_length;uint32_t dl_mjr_num;uint8_t dl_name[64];uint32_t dl_instance_num;uint32_t dl_mtu;uint32_t dl_hdw_state;uint8_t dl_module_id_1[64];uint8_t dl_module_id_2[64];uint8_t dl_arpmod_name[64];uint32_t dl_nmid;uint32_t dl_reserved1;uint32_t dl_reserved2;};
struct _D95F8D3D3A203DD01E47E35C972F2798 {Elf32_Addr r_offset;Elf32_Xword r_info;};
struct _DA3AB94F542A4F42932A1C212EF5DF0D {uint32_t dl_level;uint32_t ( *dl_proto_func)();uintptr_t dl_proto_info;};
struct _DE105A289448D8E7A65D047961DE384C {int reason;XEvent *event;XmString item_or_text;int item_position;};
struct _DF35D159A1509306ACCF933DCAD10C10 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 versionIndex;CARD8 protocolOpcode;CARD32 length;};
struct _E1655291D14CE59495117F42FECB583D {XPointer client_data;XIMProc callback;};
struct _E2235DDCCCA1BC4668AAB86308430B74 {sym_entry_header_type header;sym_obj_header_type obj_header;};
struct _E39927DDD69BFE5BB92B49A1337204CD {int type;unsigned int serial;int send_event;Display *display;XPContext context;int cancel;int detail;};
struct _E59953A36063650DE92A1957B98E4A1B {CARD8 header;CARD8 motion_data;CARD16 delay_time;};
struct _E62B5AAF61A421D071E8F87B1ACD88C8 {CARD16 elemType;CARD16 elemLength;xieTypLUT lut;};
struct _E63310F8A888390C3BA6AA5581A8704F {bit8 dump_opt;int offset_buff;int return_length;data_ptr_type return_buff;};
struct _E6F7D190E2D2DD963C1A2E314C12AAB2 {uint32_t dl_primitive;uint32_t dl_dest_addr_length;uint32_t dl_dest_addr_offset;dl_priority_t dl_priority;};
struct _E985CC5BCD47EAFD9A20CA5B2CDE74AE {CARD8 class;CARD8 length;CARD8 num_keys;BYTE pad1;CARD8 keys[32];};
union _EB2535972657DA0245F770D5D18D2BD3 {XmParentProcessAnyRec any;XmParentInputActionRec input_action;};
struct _ECAD306E641EDB2496D7F2C26F74F3C2 {int type;unsigned int serial;int send_event;Display *display;Window window;int width;int height;};
struct _EE1EC16C7EED2202F309301DFAD53D5F {uint32_t req_type;uint8_t *dl_data;};
struct _EEA792BA41020619123CDBDBFE92C7EE {XmSyntheticResource *syn_resources;int num_syn_resources;XtPointer extension;};
struct _EF15DCB28339270802C69A46485DD45C {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD16 nbytes;CARD8 pad1;CARD8 pad2;};
struct _F0052A01C3D1A009220C94DA25225D1E {_LC_object_t hdr;char *( *nl_langinfo)(nl_item, _LC_numeric_t *);_LC_numeric_t *( *init)(_LC_locale_t *);void *data;};
struct _F1472F09D9F4F4B2B771740E265DAEF8 {CARD8 reqType;CARD8 numKeyPerModifier;CARD16 length;};
struct _F1C455A40F8068619788DEC05B45D2AF {int reason;XEvent *event;Window window;int click_count;};
struct _F1DC5359840258F1056D6AC9280CBC0A {CARD8 len;INT8 delta;};
struct _F1F59D4E10B5EBBB1C54F54D61116087 {BYTE type;BYTE deviceid;BYTE map[30];};
struct _F37A617C30FC1EA156DDE3FD35569A2F {char po_executing;char po_completed;pthread_mutex_t po_mutex;pthread_cond_t po_executed;};
struct _F571D10236F18BD99A11DF3B50D0C123 {CARD8 reqType;CARD8 dpmsReqType;CARD16 length;CARD16 standby;CARD16 suspend;CARD16 off;CARD16 pad0;};
struct _F6BADC56E26A91DA12EC55F3CA8F7E89 {io_subq_type reply_subq;bit8 probe_option;int hdw_address;bit8 num_layers;int hdw_layers[6];};
struct _F80E3F154E69694439090B67229FB6AA {CARD8 reqType;CARD8 keyCodes;CARD16 length;CARD8 firstKeyCode;CARD8 keySymsPerKeyCode;CARD16 pad1;};
struct _F89A167C1B0B0C57C5FF404376C1C5C6 {Cardinal number;Cardinal maximum;_XmHighlightRec *list;};
struct _FBD7C3634F8B7AB01E77E408F9CF4A99 {disc_addr verify_address;disc_len verify_length;};
struct _FD02BCD3D36054250A4B3393D3E26B85 {XExtData *ext_data;VisualID visualid;int class;unsigned int red_mask;unsigned int green_mask;unsigned int blue_mask;int bits_per_rgb;int map_entries;};
struct _FD24C124EC918F75BF8194FC7995E204 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 dialogType;CARD8 unused;CARD32 length;};
struct _FDDC11B99A740F6C560F43496CC4347E {u_int reserved_0;u_int io_eim;u_int io_dc;union _FDDC11B99A740F6C560F43496CC4347E___6F0ABD87CABB855EB3CAE2F10CF94E08 io_ii;u_int U_1[4];u_int reserved_2[4];u_int io_command;u_int io_status;u_int reserved_3[6];u_int io_dma_link;u_int io_dma_command;u_int io_dma_address;u_int io_dma_count;u_int reserved_5[8];u_int io_gpio_inlo;u_int reserved_6[7];u_int io_gpio_inhi;u_int reserved_7[7];u_int io_gpio_outlo;u_int reserved_8[7];u_int io_gpio_dma;u_int reserved_9[7];u_int io_gpio_outhi;u_int reserved_10[7];u_int io_gpio_config;u_int reserved_11[7];u_int io_gpio_control;u_int reserved_12[7];u_int io_gpio_delay;u_int reserved_13[7];u_int io_gpio_status;u_int reserved_14[61];u_int test_status;u_int diagnostic_status;u_int reserved_16[352];u_int upper_page[512];};
struct _FE9EBC63235A93018F05467EFFA60454 {bit16 num_bytes;bit8 alignment;bit8 type_object;};
struct _XmOperationChangedCallbackStruct {int reason;XEvent *event;Time timeStamp;unsigned char operation;unsigned char operations;unsigned char dropSiteStatus;};
typedef void ( *SmsSaveYourselfPhase2RequestProc)(SmsConn, SmPointer);
typedef void ( *XmMenuSystemControlTraversalProc)(Widget, Boolean);
struct pdc_pat_pd_get_pdc_rev_rtn_block {ulong_t legacy_revision;ulong_t pat_revision;pdc_capabilities_t pdc_cap_rtn;};
struct _XmDragDropFinishCallbackStruct {int reason;XEvent *event;Time timeStamp;};
struct _sym_val_forward_ref_entry_type {sym_entry_header_type header;struct _sym_val_forward_ref_entry_type *az_next_ref;char *a_update_location;sym_name_entry_type *az_name;unsigned char fwd_ref_flags;};
struct _XIMPreeditCaretCallbackStruct {int position;XIMCaretDirection direction;XIMCaretStyle style;};
struct _XmDropSiteLeaveCallbackStruct {int reason;XEvent *event;Time timeStamp;};
struct _XmScrolledWindowConstraintRec {XmManagerConstraintPart manager;XmScrolledWindowConstraintPart swindow;};
typedef void ( *XmMenuSystemEntryCallbackProc)(Widget, Widget, XtPointer);
typedef Boolean ( *XmMenuSystemUpdateHistoryProc)(Widget, Widget, Boolean);
typedef void ( *XmScrollFrameAddNavigatorProc)(Widget sf, Widget nav, Mask dimMask);
struct _XmCascadeButtonGCacheObjPart {Pixmap cascade_pixmap;int map_delay;Pixmap armed_pixmap;GC arm_gc;GC background_gc;};
typedef XtPointer ( *XmAccessTextualGetValuesProc)(Widget, int);
typedef void ( *XmAccessTextualSetValuesProc)(Widget, XtPointer, int);
typedef void ( *XmContainerItemGetValuesProc)(Widget w, XmContainerItemData contItemData);
typedef void ( *XmContainerItemSetValuesProc)(Widget w, XmContainerItemData contItemData);
struct _XIMStatusDrawCallbackStruct {XIMStatusDataType type;union _XIMStatusDrawCallbackStruct___D9A2F521BD917AA4B9408853DE8DEFA7 data;};
struct _sym_external_def_entry_type {sym_entry_header_type header;struct _sym_external_def_entry_type *az_next_object;sym_name_entry_type *az_name;};
struct _sym_include_file_entry_type {sym_entry_header_type header;sym_section_entry_type *sections;char file_name[255];char full_file_name[255];};
struct pdc_pat_cell_mod_maddr_block {ulong_t cba;ulong_t mod_info;ulong_t mod_location;ulong_t mod_path;pdc_pat_cell_mod_t mod;};
struct _XmDropFinishCallbackStruct {int reason;XEvent *event;Time timeStamp;unsigned char operation;unsigned char operations;unsigned char dropSiteStatus;unsigned char dropAction;unsigned char completionStatus;};
struct _XmPanedWindowConstraintRec {XmManagerConstraintPart manager;XmPanedWindowConstraintPart panedw;};
union ip_timestamp__ipt_timestamp {n_long ipt_time[1];struct ip_timestamp__ipt_timestamp__ipt_ta ipt_ta[1];};
struct pat_mem_cell_info_rtn_block {struct cell_pdt_info_rtn cell_info_pdt;ulong_t cell_good_mem;ulong_t dbe_loc;ulong_t clear_time;ulong_t filler[28];};
typedef void ( *SmsSaveYourselfRequestProc)(SmsConn, SmPointer, int, int, int, int, int);
typedef KeySym ( *XmMenuSavvyGetMnemonicProc)(Widget);
typedef Widget ( *XmTraversalRedirectionProc)(Widget old_focus, Widget new_focus, unsigned int focus_policy, XmTraversalDirection direction, unsigned int pass);
struct _XmDropSiteManagerClassRec {ObjectClassPart object_class;XmDropSiteManagerClassPart dropManager_class;};
struct _XmRowColumnConstraintPart {Boolean was_managed;Dimension margin_top;Dimension margin_bottom;Dimension baseline;short position_index;};
struct _physical_descriptor_set_t {physical_info_t physical_info;physical_descriptor_t *physical;};
struct _sym_color_item_entry_type {sym_entry_header_type header;struct _sym_color_item_entry_type *az_next;unsigned char b_letter;unsigned char b_index;unsigned char b_spare1;sym_value_entry_type *az_color;};
typedef void ( *SmcSaveYourselfPhase2Proc)(SmcConn, SmPointer);
typedef void ( *XmDSMOperationChangedProc)(XmDropSiteManagerObject, XtPointer, XtPointer);
typedef void ( *XmDialogSavvyMapUnmapProc)(Widget wid, Boolean map_unmap);
typedef int ( *XmbTextPerCharExtentsProc)(XFontSet,  char *, int, XRectangle *, XRectangle *, int, int *, XRectangle *, XRectangle *);
struct _XkbExtensionDeviceNotify {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;unsigned int reason;unsigned int supported;unsigned int unsupported;int first_btn;int num_btns;unsigned int leds_defined;unsigned int led_state;int led_class;int led_id;};
struct _XmContainerConstraintRec {XmManagerConstraintPart manager;XmContainerConstraintPart container;};
struct _XmRowColumnConstraintRec {XmManagerConstraintPart manager;XmRowColumnConstraintPart row_column;};
struct __XmDropSiteUpdateInfoRec {XmDropSiteManagerObject dsm;Widget refWidget;struct __XmDropSiteUpdateInfoRec *next;};
struct _xkbKTSetMapEntryWireDesc {CARD8 level;CARD8 realMods;CARD16 virtualMods;};
typedef void ( *SmcShutdownCancelledProc)(SmcConn, SmPointer);
typedef void ( *XmContainerGetValuesProc)(Widget w, XmContainerData contData);
typedef XmDirection ( *XmGetLayoutDirectionProc)(Widget);
typedef void ( *XmMenuSystemPositionProc)(Widget, XEvent *);
typedef GC ( *XmSpecifyUnhighlightProc)(Widget wid, Widget child);
typedef void ( *XmTakesDefaultNotifyProc)(Widget w, XtEnum state);
struct _XIMStringConversionText {unsigned short length;XIMStringConversionFeedback *feedback;int encoding_is_wchar;union _XIMStringConversionText___DE48A4CD3A06187C4ACE99002CF90FB4 string;};
struct _XmContainerItemTraitRec {int version;XmContainerItemSetValuesProc setValues;XmContainerItemGetValuesProc getValues;};
struct _XmListDragConvertStruct {Widget w;XmString *strings;int num_strings;};
struct _XmNotebookConstraintRec {XmManagerConstraintPart manager;XmNotebookConstraintPart notebook;};
typedef void ( *IceProtocolActivateProc)(IceConn, IcePointer);
typedef void ( *MakePositionVisibleProc)(XmTextWidget, XmTextPosition);
typedef void ( *SmsDeletePropertiesProc)(SmsConn, SmPointer, int, char **);
typedef void ( *SmsSaveYourselfDoneProc)(SmsConn, SmPointer, int);
typedef void ( *XmDSMUnregisterInfoProc)(XmDropSiteManagerObject, XtPointer);
typedef Widget ( *XmDisplayGetDisplayProc)(Display *);
typedef void ( *XmMenuSystemCascadeProc)(Widget, Widget, XEvent *);
typedef void ( *XmNavigatorGetValueProc)(Widget nav, XmNavigatorData nav_data);
struct _PrintRehashPrinterList {CARD8 reqType;CARD8 printReqType;CARD16 length;};
struct _XmAnyICCCallbackStruct {int reason;XEvent *event;Time timeStamp;};
struct _XmDropTransferClassRec {ObjectClassPart object_class;XmDropTransferClassPart dropTransfer_class;};
struct _XmDropTransferEntryRec {XtPointer client_data;Atom target;};
struct _XmSpinBoxConstraintRec {XmManagerConstraintPart manager;XmSpinBoxConstraintPart spinBox;};
struct _sym_section_entry_type {sym_entry_header_type header;struct _sym_section_entry_type *prev_section;sym_entry_type *next;sym_entry_type *entries;};
struct crash_proc_table_struct {ulong_t cpt_hpa;struct crash_proc_table_struct__mpinfo *cpt_ppdp;caddr_t cpt_pdc_vector;struct crash_proc_table_struct__rpb *cpt_hpmc_savestate;struct crash_proc_table_struct__rpb *cpt_toc_savestate;int cpt_hpmc_count;int cpt_toc_count;int cpt_state_saved;};
typedef void ( *SmsCloseConnectionProc)(SmsConn, SmPointer, int, char **);
typedef void ( *SmsInteractRequestProc)(SmsConn, SmPointer, int);
typedef void ( *XmDSMProcessMotionProc)(XmDropSiteManagerObject, XtPointer, XtPointer);
typedef unsigned char ( *XmJoinSideGetValueProc)(Widget tab, Dimension *join_thickness);
typedef void ( *XmJoinSideSetValueProc)(Widget tab, unsigned char join_side, Dimension join_thickness);
typedef void ( *XmMenuSavvyDisableProc)(Widget, XmActivateState);
typedef Boolean ( *XmSpatialPlacementProc)(Widget, Widget, unsigned char);
typedef void ( *_IceProcessCoreMsgProc)(IceConn, int, unsigned int, int, IceReplyWaitInfo *, int *, int *);
struct _XmDragContextClassRec {CoreClassPart core_class;XmDragContextClassPart drag_class;};
struct _XmDropTransferListRec {XmDropTransferEntry transfer_list;Cardinal num_transfers;};
struct _XmIconGadgetClassPart {XmGetContainerParentProc get_container_parent;XtPointer extension;};
struct _XmScratchPixmapKeyRec {Cardinal depth;Dimension width;Dimension height;};
struct _XmSeparatorGadgetPart {XmSeparatorGCacheObjPart *cache;Boolean fill_bg_box;};
struct _xkbDeviceLedsWireDesc {CARD16 ledClass;CARD16 ledID;CARD32 namesPresent;CARD32 mapsPresent;CARD32 physIndicators;CARD32 state;};
struct _xkbOverlayRowWireDesc {CARD8 rowUnder;CARD8 nKeys;CARD16 pad1;};
typedef int ( *SmsRegisterClientProc)(SmsConn, SmPointer, char *);
typedef void ( *XmAccessColorsGetProc)(Widget widget, XmAccessColorData color_data);
typedef void ( *XmAccessColorsSetProc)(Widget widget, XmAccessColorData color_data);
typedef XmNavigability ( *XmWidgetNavigableProc)(Widget);
typedef void ( *XtExtensionSelectProc)(Widget, int *, XtPointer *, int, XtPointer);
typedef void ( *XtResourceDefaultProc)(Widget, int, XrmValue *);
typedef void ( *XwcFreeStringListProc)(XLCd, unsigned int **);
typedef int ( *XwcTextEscapementProc)(XFontSet,  unsigned int *, int);
struct _IceWatchedConnection {IceConn iceConn;IcePointer watch_data;struct _IceWatchedConnection *next;};
struct _XkbNewKeyboardNotify {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;int old_device;int min_key_code;int max_key_code;int old_min_key_code;int old_max_key_code;unsigned int changed;char req_major;char req_minor;};
struct _XmAccessColorDataRec {Mask valueMask;Pixel foreground;Pixel background;Pixel highlight_color;Pixel top_shadow_color;Pixel bottom_shadow_color;Pixel select_color;};
struct _XmDropSiteManagerRec {ObjectPart object;XmDropSiteManagerPart dropManager;};
struct _XmFrameConstraintRec {XmManagerConstraintPart manager;XmFrameConstraintPart frame;};
struct _XtCheckpointTokenRec {int save_type;int interact_style;Boolean shutdown;Boolean fast;Boolean cancel_shutdown;int phase;int interact_dialog_type;Boolean request_cancel;Boolean request_next_phase;Boolean save_success;int type;Widget widget;};
struct _xkbGetIndicatorState {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 pad1;};
struct system_default_fields {time_t fd_inactivity_timeout;uint32_t fd_pw_seed_value;char fd_boot_authenticate;};
typedef void ( *GetPreferredSizeProc)(Widget, Dimension *, Dimension *);
typedef int ( *IceProtocolSetupProc)(IceConn, int, int, char *, char *, IcePointer *, char **);
typedef void ( *SmsGetPropertiesProc)(SmsConn, SmPointer);
typedef void ( *XConnectionWatchProc)(Display *, XPointer, int, int, XPointer *);
typedef void ( *XRecordInterceptProc)(XPointer, XRecordInterceptData *);
typedef XlcConv ( *XlcOpenConverterProc)(XLCd, char *, XLCd, char *);
typedef void ( *XmDSMDestroyInfoProc)(XmDropSiteManagerObject, Widget);
typedef void ( *XmDSMProcessDropProc)(XmDropSiteManagerObject, XtPointer, XtPointer);
typedef void ( *XmDSMStartUpdateProc)(XmDropSiteManagerObject, Widget);
typedef void ( *XmGrabShellPopupProc)(Widget, Widget, XEvent *);
typedef void ( *XtSignalCallbackProc)(XtPointer, XtSignalId *);
struct _XmFormConstraintRec {XmManagerConstraintPart manager;XmFormConstraintPart form;};
union _XmGeoMajorLayoutRec {XmGeoRowLayoutRec row;XmGeoColumnLayoutRec col;};
struct _XmPrimitiveClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;};
struct _XmSpinBoxConstraint {XmStringTable values;int position;int num_values;int minimum_value;int maximum_value;int increment_value;short decimal_points;unsigned char sb_child_type;unsigned char arrow_sensitivity;Boolean wrap;unsigned char position_type;};
struct _sym_list_entry_type {sym_entry_header_type header;sym_obj_header_type obj_header;unsigned short w_count;unsigned short w_gadget_count;};
struct _sym_name_entry_type {sym_entry_header_type header;sym_entry_type *az_object;struct _sym_name_entry_type *az_next_name_entry;struct _sym_name_entry_type *az_prev_name_entry;int az_cycle_id;unsigned char b_flags;char c_text[1];};
struct _xkmSymInterpretDesc {CARD32 sym;CARD8 mods;CARD8 match;CARD8 virtualMod;CARD8 flags;CARD8 actionType;CARD8 actionData[7];};
struct eeprom_function_data {u_int slot_id;u_char slot_info;u_char slot_features;u_char minor_cfg_ext_rev;u_char major_cfg_ext_rev;u_char selection[26];u_char function_info;u_char type[80];u_char mem_cfg[9][7];u_char intr_cfg[7][2];u_char dma_cfg[4][2];u_char port_cfg[20][3];u_char init_data[60];};
struct nispasswd_authresult {nispasswd_status status;union nispasswd_authresult___B078DBBAB3D407E214C0776301111B02 nispasswd_authresult_u;};
typedef void ( *IcePaProcessMsgProc)(IceConn, IcePointer, int, unsigned int, int);
typedef void ( *InputInvalidateProc)(XmTextWidget, XmTextPosition, XmTextPosition, int);
typedef void ( *SmcSaveCompleteProc)(SmcConn, SmPointer);
typedef void ( *SmcSaveYourselfProc)(SmcConn, SmPointer, int, int, int, int);
typedef void ( *SmsInteractDoneProc)(SmsConn, SmPointer, int);
typedef int ( *XcmsCompressionProc)(XcmsCCC, XcmsColor *, unsigned int, unsigned int, int *);
typedef void ( *XmDSMChangeRootProc)(XmDropSiteManagerObject, XtPointer, XtPointer);
typedef void ( *XmDSMInsertInfoProc)(XmDropSiteManagerObject, XtPointer, XtPointer);
typedef void ( *XmDSMRemoveInfoProc)(XmDropSiteManagerObject, XtPointer);
typedef void ( *XmMenuTraversalProc)(Widget, Widget, XmTraversalDirection);
typedef Widget ( *XmObjectAtPointProc)(Widget, Position, Position);
typedef Boolean ( *XmSpatialRemoveProc)(Widget, Widget);
typedef void ( *XmWidgetMarginsProc)(Widget, XmBaselineMargins *);
typedef Boolean ( *XtEventDispatchProc)(XEvent *);
typedef void ( *XtInputCallbackProc)(XtPointer, int *, XtInputId *);
typedef void ( *XtLoseSelectionProc)(Widget, Atom *);
typedef void ( *XtSelectionDoneProc)(Widget, Atom *, Atom *);
typedef void ( *XtTimerCallbackProc)(XtPointer, XtIntervalId *);
struct _XSyncSystemCounter {char *name;XSyncCounter counter;XSyncValue resolution;};
struct _XimPendingCallback {int major_opcode;Xim im;Xic ic;char *proto;int proto_len;struct _XimPendingCallback *next;};
struct _XkbCompatMapNotify {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;unsigned int changed_groups;int first_si;int num_si;int num_total_si;};
struct _XkbIndicatorNotify {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;unsigned int changed;unsigned int state;};
struct _XkbSymInterpretRec {KeySym sym;unsigned char flags;unsigned char match;unsigned char mods;unsigned char virtual_mod;XkbAnyAction act;};
struct _XmDragIconClassRec {RectObjClassPart rectangle_class;XmDragIconClassPart dragIcon_class;};
struct _XmJoinSideTraitRec {int version;XmJoinSideSetValueProc setValue;XmJoinSideGetValueProc getValue;};
struct _XmNavigatorDataRec {Mask valueMask;Mask dimMask;TwoDIntRec value;TwoDIntRec minimum;TwoDIntRec maximum;TwoDIntRec slider_size;TwoDIntRec increment;TwoDIntRec page_increment;};
struct _XmSpinBoxClassPart {XmGetCallbackWidgetProc get_callback_widget;XtPointer extension;};
struct _XmVirtualKeysymRec {String name;KeySym keysym;};
struct _xkbOutlineWireDesc {CARD8 nPoints;CARD8 cornerRadius;CARD16 pad;};
struct _xkbVModMapWireDesc {CARD8 key;CARD8 pad;CARD16 vmods;};
struct fclwp_protocol_stat {struct fclwp_str_stat stream;struct fclwp_dg_stat dgram;};
typedef int ( *XcmsScreenInitProc)(Display *, int, XcmsPerScrnInfo *);
typedef char *( *XkbGetAtomNameFunc)(Display *, Atom);
typedef char *( *XlcGetCSValuesProc)(XlcCharSet, XlcArgList, int);
typedef void ( *XmDSMEndUpdateProc)(XmDropSiteManagerObject, Widget);
typedef XtPointer ( *XmResourceBaseProc)(Widget, XtPointer);
typedef Boolean ( *XmVisualChangeProc)(Widget, Widget, Widget);
typedef int ( *XmbTextExtentsProc)(XFontSet,  char *, int, XRectangle *, XRectangle *);
struct _CompositeClassRec {CoreClassPart core_class;CompositeClassPart composite_class;};
struct _LineTableExtraRec {Dimension width;Boolean wrappedbychar;};
struct _PrintQueryScreens {CARD8 reqType;CARD8 printReqType;CARD16 length;};
struct _PrintQueryVersion {CARD8 reqType;CARD8 printReqType;CARD16 length;};
struct _XmDropTransferRec {ObjectPart object;XmDropTransferPart dropTransfer;};
struct _xkbListComponents {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 maxNames;};
struct _xkbSymMapWireDesc {CARD8 ktIndex[4];CARD8 groupInfo;CARD8 width;CARD16 nSyms;};
struct _xkmKTMapEntryDesc {CARD8 level;CARD8 realMods;CARD16 virtualMods;};
struct _xkmKTPreserveDesc {CARD8 realMods;CARD8 pad;CARD16 virtualMods;};
struct debugger_footprint {struct aux_id header_id;char debugger_product_id[12];char debugger_version_id[8];struct sys_clock debug_time;};
struct pst_stable_PA_RISC {struct pst_ss_path Pss_primary;unsigned char Pss_pad1[32];union pst_stable_PA_RISC___811A57C25F847625213D630ECAF0A1B4 Pss_osdep;unsigned char Pss_pad2[7];unsigned char Pss_fastsize;struct pst_ss_path Pss_console;struct pst_ss_path Pss_alternate;struct pst_ss_path Pss_keyboard;unsigned char Pss_pad4[64];};
typedef Atom ( *XkbInternAtomFunc)(Display *,  char *, int);
typedef void ( *XmCloneVisualProc)(XmDragIconObject, Widget, Widget);
typedef void ( *XmDSMSyncTreeProc)(XmDropSiteManagerObject, Widget);
typedef void ( *XmFocusChangeProc)(Widget, XmFocusChange);
typedef void ( *XmScreenColorProc)(Screen *screen, XColor *bg_color, XColor *fg_color, XColor *sel_color, XColor *ts_color, XColor *bs_color);
typedef void ( *XtErrorMsgHandler)(String, String, String, String, String *, Cardinal *);
struct _XcmsIntensityMap {VisualID visualID;XPointer screenData;void ( *pFreeScreenData)();struct _XcmsIntensityMap *pNext;};
struct _XkbAccessXNotify {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;int detail;int keycode;int sk_delay;int debounce_delay;};
struct _XkbDeviceLedInfo {unsigned short led_class;unsigned short led_id;unsigned int phys_indicators;unsigned int maps_present;unsigned int names_present;unsigned int state;Atom names[32];XkbIndicatorMapRec maps[32];};
struct _XmDragContextRec {CorePart core;XmDragContextPart drag;};
struct _XmGadgetCacheRef {XmGadgetCache cache;XtArgVal data;};
struct _XmGadgetClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;};
struct _XmKidGeometryRec {Widget kid;XtWidgetGeometry box;};
struct _XmVKeyBindingRec {KeySym keysym;Modifiers modifiers;KeySym virtkey;};
struct _xkbSetDeviceInfo {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD8 firstBtn;CARD8 nBtns;CARD16 change;CARD16 nDeviceLedFBs;};
struct _xkbShapeWireDesc {CARD32 name;CARD8 nOutlines;CARD8 primaryNdx;CARD8 approxNdx;CARD8 pad;};
struct pfn_to_virt_entry {space_t space;union pfn_to_virt_entry___E1841ADC36515B8A77C0FB12DDA66068 alias_or_offset;};
struct r_rpcb_rmtcallres {char *addr;struct r_rpcb_rmtcallres___E4942A9E2418DF914BE7A7BB122A60EB results;xdrproc_t xdr_res;};
struct snapfddi_hdr_info {u_char destaddr[6];u_short type;};
struct sockaddr_ip_fclwp {struct sockaddr ip_addr;struct sockaddr_fclwp fc_addr;};
typedef void ( *IcePingReplyProc)(IceConn, IcePointer);
typedef void ( *RemoveWidgetProc)(XmTextSource, XmTextWidget);
typedef char *( *XGetOCValuesProc)(XOC, XlcArgList, int);
typedef char *( *XGetOMValuesProc)(XOM, XlcArgList, int);
typedef char *( *XSetOCValuesProc)(XOC, XlcArgList, int);
typedef char *( *XSetOMValuesProc)(XOM, XlcArgList, int);
typedef int ( *XimTransReadProc)(Xim, XPointer, int, int *);
typedef void ( *XmFocusMovedProc)(Widget, XtPointer, XtPointer);
typedef void ( *XmGeoArrangeProc)(XmGeoMatrix, int, int, Dimension *, Dimension *);
typedef void ( *XmSpatialGetSize)(Widget, Dimension *, Dimension *);
typedef void ( *XtDeallocateProc)(Widget, XtPointer);
struct _OnTheSpotDataTW {XmTextPosition start;XmTextPosition end;XmTextPosition cursor;XmTextPosition over_len;XmTextPosition over_maxlen;char *over_str;int under_preedit;Boolean under_verify_preedit;Boolean verify_commit;int pad;};
struct _PrintGetContext {CARD8 reqType;CARD8 printReqType;CARD16 length;};
struct _XcmsPerScrnInfo {XcmsColor screenWhitePt;XPointer functionSet;XPointer screenData;unsigned char state;char pad[3];};
struct _XkbServerMapRec {unsigned short num_acts;unsigned short size_acts;XkbAction *acts;XkbBehavior *behaviors;unsigned short *key_acts;unsigned char *explicit;unsigned char vmods[16];unsigned short *vmodmap;};
struct _XmKeyBindingRec {KeySym keysym;Modifiers modifiers;};
struct _XmReplayInfoRec {Time time;Widget toplevel_menu;};
struct _XmSeparatorPart {Dimension margin;unsigned char orientation;unsigned char separator_type;GC separator_GC;};
struct _xkbModsWireDesc {CARD8 mask;CARD8 realMods;CARD16 virtualMods;};
struct _xkbSelectEvents {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 affectWhich;CARD16 clear;CARD16 selectAll;CARD16 affectMap;CARD16 map;};
struct _xkbUseExtension {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 wantedMajor;CARD16 wantedMinor;};
struct _xkmBehaviorDesc {CARD8 type;CARD8 data;CARD16 pad;};
struct authdes_fullname {char *name;des_block key;u_long window;};
struct compilation_unit {union name_pt name;union name_pt language_name;union name_pt product_id;union name_pt version_id;unsigned int chunk_flag;struct sys_clock compile_time;struct sys_clock source_time;};
struct ieee8023xsap_hdr {u_char destaddr[6];u_char sourceaddr[6];u_short length;u_char dsap;u_char ssap;u_char ctrl;u_char hdr_fill[3];u_short dxsap;u_short sxsap;};
struct linker_footprint {struct aux_id header_id;char product_id[12];char version_id[12];struct sys_clock htime;};
struct mpe_prog_aux_hdr {struct aux_id header_id;unsigned int entry_name;unsigned int unsat_name;int search_list;struct cap_list capabilities;unsigned int max_stacksize;unsigned int max_heap_size;unsigned int priority;};
union pdc_capabilities {ulong_t word3;pdc_capabilities_bitmask_t word3_bitmask;};
struct rpcb_rmtcallargs {u_long prog;u_long vers;u_long proc;struct rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D args;};
typedef void ( *IceErrorHandler)(IceConn, int, int, unsigned int, int, int, IcePointer);
typedef void ( *SmcErrorHandler)(SmcConn, int, int, unsigned int, int, int, SmPointer);
typedef void ( *SmcInteractProc)(SmcConn, SmPointer);
typedef void ( *SmsErrorHandler)(SmsConn, int, int, unsigned int, int, int, SmPointer);
typedef void ( *XmCacheCopyProc)(XtPointer, XtPointer, size_t);
typedef void ( *XmDSMUpdateProc)(XmDropSiteManagerObject, XtPointer, XtPointer);
typedef Boolean ( *XmGeoExceptProc)(XmGeoMatrix);
typedef void ( *XmMenuPopupProc)(Widget, Widget, XEvent *);
typedef void ( *XmTraversalProc)(Widget, XtPointer, XtPointer, int);
typedef Boolean ( *XtFilePredicate)(String);
struct _XOCGenericPart {XlcConv mbs_to_cs;XlcConv wcs_to_cs;int font_set_num;FontSet font_set;};
struct _XcmsPerDpyInfo {XcmsCCC paDefaultCCC;XcmsCmapRec *pClientCmaps;};
struct _XkbNamesNotify {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;unsigned int changed;int first_type;int num_types;int first_lvl;int num_lvls;int num_aliases;int num_radio_groups;unsigned int changed_vmods;unsigned int changed_groups;unsigned int changed_indicators;int first_key;int num_keys;};
struct _XmExtClassPart {XmSyntheticResource *syn_resources;int num_syn_resources;XtPointer extension;};
struct _XmPrimitiveRec {CorePart core;XmPrimitivePart primitive;};
struct _bus_trans_desc {uint32_t read_width;uint32_t write_width;uint8_t reserved[20];};
struct _xkbGetControls {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 pad;};
struct _xkmKeyTypeDesc {CARD8 realMods;CARD8 groupWidth;CARD16 virtualMods;CARD8 nMapEntries;CARD8 nLevelNames;CARD8 preserve;CARD8 pad;};
union ioconfig_record {char rec_name[16];ioconfig_t ioc;dyn_major_t dm;};
struct mir_state__pair {ushort error;ushort flags;ushort state_pri;ushort state_sec;dev_t dev_pri;dev_t dev_sec;};
struct nispasswd_error {nispasswd_field npd_field;nispasswd_code npd_code;struct nispasswd_error *next;};
struct pdc_pat_cell_ba {ulong_t reserved1;ulong_t range_num;pdc_pat_cell_range_t addr[168];ulong_t reserved2[2];};
struct snap8025_sr_hdr {u_char access_ctl;u_char frame_ctl;u_char destaddr[6];u_char sourceaddr[6];u_char rif[18];u_char dsap;u_char ssap;u_char ctrl;u_char orgid[3];u_short type;};
typedef int ( *CountLinesProc)(XmTextSource, XmTextPosition, unsigned int);
typedef void ( *InvalidateProc)(XmTextWidget, XmTextPosition, XmTextPosition, int);
typedef int ( *PCI_DESC_TRANS)(void *, PCI_CFG_TOKEN, BUS_TRANS_DESC *);
typedef int ( *XlcConvertProc)(XlcConv, XPointer *, int *, XPointer *, int *, XPointer *, int);
typedef void ( *XtCallbackProc)(Widget, XtPointer, XtPointer);
struct _LC_core_ldx_t {_LC_object_t lc_object_header;XLCd ( *default_loader)();int sticky;};
struct _OnTheSpotData {XmTextPosition start;XmTextPosition end;XmTextPosition cursor;int over_len;int over_maxlen;char *over_str;int under_preedit;Boolean under_verify_preedit;Boolean verify_commit;int pad;};
struct _PrintStartDoc {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD8 type;CARD8 pad1;CARD16 pad2;};
struct _PrintStartJob {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD8 saveData;CARD8 pad1;CARD16 pad2;};
struct _SmcPhase2Wait {SmcSaveYourselfPhase2Proc phase2_proc;SmPointer client_data;};
struct _XExtEventInfo {Mask mask;BYTE type;BYTE word;};
union _XICPrivateRec {XicLocalPrivateRec local;XicProtoPrivateRec proto;};
union _XIMPrivateRec {XimLocalPrivateRec local;XimProtoPrivateRec proto;};
struct _XValuatorInfo {XID class;int length;unsigned char num_axes;unsigned char mode;unsigned int motion_buffer;XAxisInfoPtr axes;};
struct _XmExtClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;};
struct _XtCallbackRec {XtCallbackProc callback;XtPointer closure;};
struct _xValuatorInfo {CARD8 class;CARD8 length;CARD8 num_axes;CARD8 mode;CARD32 motion_buffer_size;};
struct audit_filename {uint32_t apn_cnode;uint32_t apn_dev;uint32_t apn_inode;u_short apn_len;char apn_path[1024];struct audit_filename *next;};
struct fclwp_pcb_stat {uint32_t pcb_ptr_pad;struct fclwp_pcb *pcb_ptr;uint32_t next_pcb_ptr_pad;struct fclwp_pcb *next_pcb_ptr;uint32_t socket_ptr_pad;struct fclwp_pcb_stat__socket *socket_ptr;uint32_t dlpi_ptr_pad;caddr_t dlpi_ptr;unsigned int state;unsigned int protocol;unsigned int ift_instance;unsigned int pkts_send;unsigned int pkts_recv;unsigned int xmit_bytes_buffered;unsigned int xmit_bytes_unacked;unsigned int recv_bytes_buffered;unsigned int recv_bytes_unacked;unsigned int local_nport;unsigned int local_port;unsigned int remote_nport;unsigned int remote_port;unsigned int pending_connects;};
struct hdl_subpregion {hdl_subreg_t *p_subreg;int nelements;u_char mode[26];};
struct mpe_aux_header {struct aux_id header_id;unsigned int reserved;unsigned int num_xrts;unsigned int entry_name;unsigned int unsat_name;int search_list;struct cap_list capabilities;unsigned int max_stacksize;unsigned int max_heap_size;unsigned int unwind_start;unsigned int unwind_end;unsigned int recover_start;unsigned int recover_end;};
struct rejected_reply {enum reject_stat rj_stat;union rejected_reply___D36433C375B856769A86CDA2CFADE497 ru;};
struct snap8023xt_hdr {u_char destaddr[6];u_char sourceaddr[6];u_short length;u_char dsap;u_char ssap;u_char ctrl;u_char hdr_fill[3];u_short type;u_short dcanon_addr;u_short scanon_addr;};
typedef void ( *AddWidgetProc)(XmTextSource, XmTextWidget);
typedef int ( *XErrorHandler)(Display *, XErrorEvent *);
typedef int ( *XkbKSToMBFunc)(XPointer, KeySym, char *, int, int *);
typedef KeySym ( *XkbMBToKSFunc)(XPointer, char *, int, int *);
typedef void ( *XmQualifyProc)(Widget, XtPointer, XtPointer);
struct _CompositeRec {CorePart core;CompositePart composite;};
struct _XmBackingRec {Position x;Position y;Pixmap pixmap;};
struct _XmScreenInfo {XtPointer menu_state;Boolean destroyCallbackAdded;};
union rpb__pim_info {pim_narrow_t narrow;pim_wide_t wide;};
struct svc_netcfgu_t {int32_t xp_type;dev_t knc_rdev;};
typedef int ( *GET_FRU_INFO)(PHOST_ADAPTER, PCI_CFG_TOKEN, int *);
typedef int ( *GET_MEM_MODE)(PHOST_ADAPTER, PCI_CFG_TOKEN);
typedef void ( *IceWatchProc)(IceConn, IcePointer, int, IcePointer *);
typedef void ( *XmExportProc)(Widget, int, XtArgVal *);
typedef void ( *XmSearchProc)(Widget, XtPointer);
typedef void ( *XtAlmostProc)(Widget, Widget, XtWidgetGeometry *, XtWidgetGeometry *);
typedef void ( *XtStringProc)(Widget, String);
struct _IcePingWait {IcePingReplyProc ping_reply_proc;IcePointer client_data;struct _IcePingWait *next;};
struct _XkbAnyEvent {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;unsigned int device;};
struct _xButtonInfo {CARD8 class;CARD8 length;CARD16 num_buttons;};
struct _xDeviceInfo {CARD32 type;CARD8 id;CARD8 num_classes;CARD8 use;CARD8 pad1;};
struct _xkbGetState {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 pad;};
struct authdes_verf {union authdes_verf___D072B0FF48589EAC93A5A80C9BF6CD34 adv_time_u;u_long adv_int_u;};
struct device_entry {struct device_path path;uint32_t hpa;uint32_t spa;uint32_t iodc_io;uint32_t class;};
struct ieee8023_hdr {u_char destaddr[6];u_char sourceaddr[6];u_short length;u_char dsap;u_char ssap;u_char ctrl;};
union inquiry_data {struct inquiry inq1;struct inquiry_2 inq2;};
struct ip_timestamp {u_char ipt_code;u_char ipt_len;u_char ipt_ptr;unsigned char ipt_flg;union ip_timestamp__ipt_timestamp ipt_timestamp;};
struct key_netstarg {keybuf st_priv_key;keybuf st_pub_key;netnamestr st_netname;};
struct mountres3_ok {fhandle3 fhandle;struct mountres3_ok___F1D97EB055E5AF8E573F495D2D3F20C5 auth_flavors;};
struct nlm_shareres {netobj cookie;nlm_stats stat;int sequence;};
struct ptrace_event {sigset_t pe_signals;events_t pe_set_event;char pe_spare[28];};
struct ptrace_state {events_t pe_report_event;int pe_path_len;pid_t pe_other_pid;char pe_spare[20];};
typedef bool_t (*resultproc_t)(caddr_t, ...);
struct sioc_vif_req {vifi_t vifi;u_long icount;u_long ocount;u_long ibytes;u_long obytes;};
struct snap8022_hdr {u_char dsap;u_char ssap;u_char ctrl;u_char orgid[3];u_short type;};
struct snap8023_hdr {u_char destaddr[6];u_char sourceaddr[6];u_short length;u_char dsap;u_char ssap;u_char ctrl;u_char hdr_fill[3];u_short type;};
struct xdr_bytesrec {bool_t xc_is_last_record;size_t xc_num_avail;};
typedef XmTextPosition ( *XYToPosProc)(XmTextWidget, int, int);
typedef void ( *XtConverter)(XrmValue *, Cardinal *, XrmValue *, XrmValue *);
typedef Cardinal ( *XtOrderProc)(Widget);
struct _RectObjRec {ObjectPart object;RectObjPart rectangle;};
struct _XlcConvRec {XlcConvMethods methods;XPointer state;};
struct _xRectangle {INT16 x;INT16 y;CARD16 width;CARD16 height;};
struct compl_entry {uint32_t link;uint32_t status;uint32_t save_link;uint32_t save_count;port_num_type port;uint32_t filler[3];};
struct cryptkeyarg {netnamestr remotename;des_block deskey;};
struct etherxt_hdr {u_char destaddr[6];u_char sourceaddr[6];u_short type;u_short dcanon_addr;u_short scanon_addr;};
struct io_map_cntl {caddr_t ( *dma_alloc)(void *ioa, caddr_t *iova);void ( *dma_free)(void *ioa, caddr_t iova, caddr_t addr);int ( *map)(void *ioa, void *map_cb, int hints, int range_type, struct iovec *host_range, struct iovec *io_range);int ( *map_contiguous)(void *ioa, void *map_cb, int hints, int range_type, struct iovec *host_range, struct iovec *io_range);int ( *fastmap)(void *ioa, int range_type, struct iovec *host_range, struct iovec *io_range);int ( *remap)(void *ioa, int range_type, struct iovec *host_range, struct iovec *io_range);void ( *unmap)(void *ioa, struct iovec *io_range);caddr_t ( *get_pva)(void *ioa, caddr_t iova);void ( *set_attributes)(void **map_ptr, void *ioa, int attributes);void *arg;void ( *shmem_lock)();void ( *shmem_unlock)();void *shmem_arg;int ( *sync_busses)();};
struct npd_newpass {u_long npd_xrandval;passbuf pass;};
struct pst_msginfo {uint32_t psm_idx;int32_t psm_uid;int32_t psm_gid;int32_t psm_cuid;int32_t psm_cgid;uint32_t psm_mode;uint32_t psm_seq;uint32_t psm_key;uint32_t psm_qnum;uint32_t psm_qbytes;uint32_t psm_cbytes;int32_t psm_lspid;int32_t psm_lrpid;int32_t psm_stime;int32_t psm_rtime;int32_t psm_ctime;uint32_t psm_flags;};
struct pst_seminfo {uint32_t pse_idx;int32_t pse_uid;int32_t pse_gid;int32_t pse_cuid;int32_t pse_cgid;uint32_t pse_mode;uint32_t pse_seq;uint32_t pse_key;uint32_t pse_nsems;int32_t pse_otime;int32_t pse_ctime;uint32_t pse_flags;};
struct pst_shminfo {uint32_t psh_idx;int32_t psh_uid;int32_t psh_gid;int32_t psh_cuid;int32_t psh_cgid;uint32_t psh_mode;uint32_t psh_seq;uint32_t psh_key;uint32_t psh_segsz;int32_t psh_cpid;int32_t psh_lpid;uint32_t psh_nattch;uint32_t psh_cnattch;int32_t psh_atime;int32_t psh_dtime;int32_t psh_ctime;uint32_t psh_flags;int32_t psh_valid;};
struct rmtcallargs {u_long prog;u_long vers;u_long proc;struct rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D args;};
struct sioc_sg_req {struct in_addr src;struct in_addr grp;u_long pktcnt;u_long bytecnt;u_long wrong_if;};
struct sockaddr_in {short sin_family;u_short sin_port;struct in_addr sin_addr;char sin_zero[8];};
struct stape_event {ubit8 data[8];time_t event_timestamp;ubit8 event_type;};
typedef int ( *strclose_V4)(queue_t *, int, cred_t *);
struct uxec_testrq {int n_packets;int node_id;int proc_id;struct in_addr srcaddr;struct sockaddr destaddr;int pack_length;int arrival_time;int check_data;int is_802_test;short dxsap;short sxsap;char dsap;char ssap;char ctrl;};
typedef void ( *SmcDieProc)(SmcConn, SmPointer);
typedef void ( *XtCaseProc)(Display *, KeySym, KeySym *, KeySym *);
typedef Boolean ( *XtWorkProc)(XtPointer);
struct _LC_time_t {_LC_core_time_t core;char *d_fmt;char *t_fmt;char *d_t_fmt;char *t_fmt_ampm;char *abday[7];char *day[7];char *abmon[12];char *mon[12];char *am_pm[2];char *era;int *era_idx;char *era_year;char *era_d_fmt;char *alt_digits;int *alt_digits_idx;char *m_d_recent;char *m_d_old;char *era_d_t_fmt;char *era_t_fmt;char *year_unit;char *mon_unit;char *day_unit;char *hour_unit;char *min_unit;char *sec_unit;};
struct __sub_ctxt {struct __sub_ctxt____ucontext *__uc_link;sigset_t __uc_sigmask;stack_t __uc_stack;};
struct __ucontext {mcontext_t uc_mcontext;int uc_spares[8];unsigned int uc_reserved_flags;struct __sub_ctxt uc_subcontext;};
struct _xkbGetMap {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 full;CARD16 partial;CARD8 firstType;CARD8 nTypes;CARD8 firstKeySym;CARD8 nKeySyms;CARD8 firstKeyAct;CARD8 nKeyActs;CARD8 firstKeyBehavior;CARD8 nKeyBehaviors;CARD16 virtualMods;CARD8 firstKeyExplicit;CARD8 nKeyExplicit;CARD8 firstModMapKey;CARD8 nModMapKeys;CARD8 firstVModMapKey;CARD8 nVModMapKeys;CARD16 pad1;};
struct _xkbSetMap {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 present;CARD16 flags;CARD8 minKeyCode;CARD8 maxKeyCode;CARD8 firstType;CARD8 nTypes;CARD8 firstKeySym;CARD8 nKeySyms;CARD16 totalSyms;CARD8 firstKeyAct;CARD8 nKeyActs;CARD16 totalActs;CARD8 firstKeyBehavior;CARD8 nKeyBehaviors;CARD8 totalKeyBehaviors;CARD8 firstKeyExplicit;CARD8 nKeyExplicit;CARD8 totalKeyExplicit;CARD8 firstModMapKey;CARD8 nModMapKeys;CARD8 totalModMapKeys;CARD8 firstVModMapKey;CARD8 nVModMapKeys;CARD8 totalVModMapKeys;CARD16 virtualMods;};
struct audit_sock {uint32_t a_socklen;struct sockaddr a_sock;};
struct cntrl_desc {unsigned16 iv;unsigned16 mitr;unsigned8 ct;};
struct dumpmodule {uint32_t dm_dir;uint32_t dm_name;uint64_t dm_size;uint64_t dm_mtime;};
struct klm_holder {bool_t exclusive;int svid;uint64 l_offset;uint64 l_len;};
struct map_struct {caddr_t start_v_range;int size_used;int repeat_count;u_long start_pfn;};
struct ns_request {nis_name ns_name;struct ns_request___C16B7AFEC0429C3BD747A37F4D827FFD ns_object;};
struct pst_lvinfo {uint32_t psl_idx;struct psdev psl_dev;uint32_t psl_rxfer;uint32_t psl_rcount;uint32_t psl_wxfer;uint32_t psl_wcount;uint32_t psl_openlv;uint32_t psl_mwcwaitq;uint32_t psl_mwcsize;uint32_t psl_mwchits;uint32_t psl_mwcmisses;};
struct pst_static {int32_t max_proc;struct psdev console_device;int32_t boot_time;int32_t physical_memory;int32_t page_size;int32_t cpu_states;int32_t pst_status_size;int32_t pst_static_size;int32_t pst_dynamic_size;int32_t pst_vminfo_size;int32_t command_length;int32_t pst_processor_size;int32_t pst_diskinfo_size;int32_t pst_lvinfo_size;int32_t pst_swapinfo_size;int32_t pst_maxmem;int32_t pst_lotsfree;int32_t pst_desfree;int32_t pst_minfree;int32_t pst_max_ninode;int32_t pst_max_nfile;int32_t pst_stable_size;int32_t pst_supported_pgsize[16];};
struct pst_vminfo {int32_t psv_rdfree;int32_t psv_rintr;int32_t psv_rpgpgin;int32_t psv_rpgpgout;int32_t psv_rpgrec;int32_t psv_rpgtlb;int32_t psv_rscan;int32_t psv_rswtch;int32_t psv_rsyscall;int32_t psv_rxifrec;int32_t psv_rxsfrec;int32_t psv_cfree;int32_t psv_sswpin;int32_t psv_sswpout;int32_t psv_sdfree;int32_t psv_sexfod;int32_t psv_sfaults;int32_t psv_sintr;int32_t psv_sintrans;int32_t psv_snexfod;int32_t psv_snzfod;int32_t psv_spgfrec;int32_t psv_spgin;int32_t psv_spgout;int32_t psv_spgpgin;int32_t psv_spgpgout;int32_t psv_spswpin;int32_t psv_spswpout;int32_t psv_srev;int32_t psv_sseqfree;int32_t psv_sswtch;int32_t psv_ssyscall;int32_t psv_strap;int32_t psv_sxifrec;int32_t psv_sxsfrec;int32_t psv_szfod;int32_t psv_sscan;int32_t psv_spgrec;int32_t psv_deficit;int32_t psv_tknin;int32_t psv_tknout;int32_t psv_cntfork;int32_t psv_sizfork;uint32_t psv_lreads;uint32_t psv_lwrites;uint32_t psv_swpocc;uint32_t psv_swpque;int32_t psv_paging_thold;int32_t psv_sysmem;int32_t psv_swapspc_cnt;int32_t psv_swapspc_max;int32_t psv_swapmem_cnt;int32_t psv_swapmem_max;int32_t psv_swapper_mem;int32_t psv_lreadsize;int32_t psv_lwritesize;int32_t psv_swapmem_on;int32_t psv_select_success[16];int32_t psv_select_failure[16];int32_t psv_pgalloc_success[16];int32_t psv_pgalloc_failure[16];int32_t psv_demotions[16];};
struct radix_mask {char rm_b;u_char rm_flags;struct radix_mask *rm_mklist;u_int rm_mask;int rm_refs;};
struct rmtcallres {u_long port;struct rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9 res;};
struct rpc_timers {u_short rt_srtt;u_short rt_deviate;u_long rt_rtxcur;};
struct statsswtch {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_opackets;int if_oerrors;int if_collisions;u_int v_swtch;int avenrun[3];struct timeval boottime;};
struct str_config {uint sc_version;uint sc_sa_flags;char sc_sa_name[9];dev_t sc_devnum;};
typedef int ( *stropen_V3)(queue_t *, dev_t, int, int);
struct stroptions {ulong so_flags;short so_readopt;ushort so_wroff;int so_minpsz;int so_maxpsz;ulong so_hiwat;ulong so_lowat;unsigned char so_band;short so_device_id;short so_func_mask;};
struct vas_window {space_t q2_32bitSpaceid;struct vas_window__map *q2_32bitMap;space_t q3_32bitSpaceid;struct vas_window__map *q3_32bitMap;int key;unsigned int refCnt;pid_t lastSetpid;};
struct _XmExtRec {ObjectPart object;XmExtPart ext;};
struct _xKeyInfo {CARD8 class;CARD8 length;CARD8 min_keycode;CARD8 max_keycode;CARD16 num_keys;CARD8 pad1;CARD8 pad2;};
struct acl_entry {aclid_t uid;aclid_t gid;aclmode_t mode;};
struct cp_result {nis_error cp_status;u_long cp_zticks;u_long cp_dticks;};
struct dev_entry {struct dev_path io_dev_path;uint32_t dev_hpa;uint32_t dev_spa;uint32_t iodc_entry_io;uint32_t dev_class;};
struct entry_col {u_long ec_flags;struct entry_col___E942B815045DEE9FABC14DA0AE6314FC ec_value;};
struct ether_hdr {u_char destaddr[6];u_char sourceaddr[6];u_short type;};
struct gpio1_ocs {struct gpio1_ocs *o_next;struct gpio1_ocs *sig_next;u_int ext_int_mask;u_int signal_cause;struct proc *ext_int_handler_proc_ptr;struct proc *sig_proc;int o_error;int timeout_value;int time_remaining;int timer_id;short timer_msg_id;short open_lock_count;u_char abort_dma;u_char timeout_pending;struct proc *timeout_proc_ptr;};
struct group_obj {u_long gr_flags;struct group_obj___6B1AF3D1F6DE7092D80225088D6E3A34 gr_members;};
struct groupnode {name gr_name;groups gr_next;};
struct kd_active {kd_t kd_struct;pid_t p_pid;int flag;};
struct kmemiov32 {uint32_t buf_addr;uint32_t buf_len;uint32_t kern_addr;int32_t errnum;};
struct min_cddir {u_char mincdd_reclen;u_char mincdd_xar_len;char mincdd_loc_lsb[4];char mincdd_loc_msb[4];char mincdd_size_lsb[4];char mincdd_size_msb[4];u_char mincdd_year;u_char mincdd_month;u_char mincdd_day;u_char mincdd_hour;u_char mincdd_minute;u_char mincdd_second;char mincdd_timezone;u_char mincdd_flag;u_char mincdd_unit_size;u_char mincdd_lg_size;u_short mincdd_vol_seq_lsb;u_short mincdd_vol_seq_msb;u_char mincdd_idlen;char mincdd_file_id[1];};
struct mir_state {ushort subcommand;ushort paircount;struct mir_state__pair pairs[1];};
struct ping_args {nis_name dir;u_long stamp;};
struct rex_start {char **rst_cmd;char *rst_host;char *rst_fsname;char *rst_dirwithin;char **rst_env;u_short rst_port0;u_short rst_port1;u_short rst_port2;u_long rst_flags;};
struct sigaction {union sigaction___8EFABCF72131BCDD3C87705B82C94E7E __handler;sigset_t sa_mask;int sa_flags;};
struct statstime {int cp_time[4];int dk_xfer[4];u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_opackets;int if_oerrors;int if_collisions;u_int v_swtch;int avenrun[3];struct timeval boottime;struct timeval curtime;};
struct streamadm {uint sa_version;uint sa_flags;char sa_name[9];caddr_t sa_ttys;uint sa_sync_level;caddr_t sa_sync_info;};
struct strrecvfd {int fd;uid_t uid;gid_t gid;};
struct t_optmgmt {struct netbuf opt;t_scalar_t flags;};
struct table_obj {char *ta_type;int ta_maxcol;u_char ta_sep;struct table_obj___37F826B7C2AFF7B3E483E0E1EE89ED51 ta_cols;char *ta_path;};
struct unit_desc {unsigned8 dt;unsigned8 dn[3];unsigned16 nbpb;unsigned8 nbb;unsigned8 rbs;unsigned16 blocktime;unsigned16 catr;unsigned16 ort;unsigned16 atp;unsigned8 mif;unsigned8 fvb;unsigned8 rvb;};
struct _DefTree {struct _DefTree *next;struct _DefTree *succession;unsigned int modifier_mask;unsigned int modifier;KeySym keysym;char *mb;unsigned int *wc;KeySym ks;};
struct _SmcConn {unsigned int unused2;IceConn iceConn;int proto_major_version;int proto_minor_version;char *vendor;char *release;char *client_id;SmcCallbacks callbacks;_SmcInteractWait *interact_waits;_SmcPhase2Wait *phase2_wait;_SmcPropReplyWait *prop_reply_waits;};
struct _SmsConn {unsigned int unused2;IceConn iceConn;int proto_major_version;int proto_minor_version;char *client_id;SmsCallbacks callbacks;char interaction_allowed;};
struct _XCVList {xcondition_t cv;xReply *buf;struct _XCVList *next;};
struct _XIMText {unsigned short length;XIMFeedback *feedback;int encoding_is_wchar;union _XIMText___8281806D2C2C5E9220BA18F83AF5F330 string;};
struct __client {AUTH *cl_auth;struct __client__clnt_ops *cl_ops;caddr_t cl_private;char *cl_netid;char *cl_tp;};
struct dil_info {struct buf *dil_forw;struct buf *dil_back;struct buf *event_forw;struct buf *event_back;int eid;int ( *handler)();int event;int cause;int ppl_mask;struct dil_info__proc *dil_procp;int ( *dil_action)();int ( *dil_timeout_proc)();int intr_wait;int register_data;int hpibio_addr;int hpibio_cnt;int full_tfr_count;int open_flags;caddr_t map_addr;pid_t locking_pid;pid_t last_pid;char cmd_buf[128];struct buf *rel_bp_on_close;};
struct fhstatus {u_int fhs_status;union fhstatus___5A86E21E7BD06EF982D138486E7C27D0 fhstatus_u;};
struct ioconfig {char name[16];char class[16];hw_path_t hw_path;int instance;};
struct ki_iovec {kptr_t iov_base;uint64_t iov_len;};
struct klm_lock {char *server_name;netobj fh;unsigned int nlm_vers;int pid;uint64 l_offset;uint64 l_len;};
struct nlm4_res {netobj cookie;nlm4_stat stat;};
struct nlm_lock {char *caller_name;netobj fh;netobj oh;int svid;u_int l_offset;u_int l_len;};
struct oar_mask {u_long oa_rights;zotypes oa_otype;};
struct parm_rec {SFE_rec_type *SFE_ptr;char *options_file_name;FILE *subsys_filters_stream;FILE *other_filters_stream;FILE *file_to_pass_to_SFE;int trace_or_log;};
struct psfileid {struct psfsid psf_fsid;int32_t psf_fileid;int32_t psf_spare;};
struct siglocal {struct siglocal_misc sl_misc;save_state_t sl_ss;};
struct sva_type {unsigned16 utb;unsigned32 lfb;};
struct unixcred {u_int uid;u_int gid;struct unixcred___B86B6406BF4F2F34B5DC36D552B35DA0 gids;};
struct _XImage {int width;int height;int xoffset;int format;char *data;int byte_order;int bitmap_unit;int bitmap_bit_order;int bitmap_pad;int depth;int bytes_per_line;int bits_per_pixel;unsigned int red_mask;unsigned int green_mask;unsigned int blue_mask;XPointer obdata;struct _XImage__funcs f;};
struct _XkbRow {short top;short left;unsigned short num_keys;unsigned short sz_keys;int vertical;XkbKeyPtr keys;XkbBoundsRec bounds;};
struct ccblock {caddr_t c_ptr;ushort c_count;ushort c_size;};
struct fswdevt {struct fswdevt *fsw_next;int fsw_flags;pgcnt_t fsw_nfpgs;int fsw_allocated;unsigned int fsw_min;unsigned int fsw_limit;unsigned int fsw_reserve;int fsw_priority;struct vnode *fsw_vnode;uint fsw_bsize;short fsw_head;short fsw_tail;char fsw_mntpoint[256];};
struct kmemiov {kptr_t buf_addr;uint64_t buf_len;kptr_t kern_addr;int errnum;int kmiov_pad;};
struct mirinfo {struct mirinfo__mirstate state;int32_t mirtime;};
struct nfs_fh3 {uint32_t fh3_length;union nfs_fh3__nfs_fh3_u fh3_u;};
struct nlm_res {netobj cookie;nlm_stat stat;};
struct protosw {short pr_type;struct domain *pr_domain;short pr_protocol;short pr_flags;int ( *pr_input)();int ( *pr_output)();int ( *pr_ctlinput)();int ( *pr_ctloutput)();int ( *pr_usrreq)();int ( *pr_usrsend)();int ( *pr_usrrecv)();int ( *pr_init)();int ( *pr_fasttimo)();int ( *pr_slowtimo)();int ( *pr_drain)();short pr_pi;dev_t pr_dev;struct providersw pr_provider;};
struct pss_blk {struct psdev Pss_dev;uint32_t Pss_start;uint32_t Pss_nblks;uint32_t Pss_nblksavail;};
struct sfe_rec {char SFE_name[80];char ss_name[80];unsigned int wc_ss_name[80];filter_rec_type *filter_list;int defined;struct sfe_rec *next;};
struct swaptab {short st_free;short st_next;int st_flags;struct swaptab__swdevt *st_dev;struct swaptab__fswdevt *st_fsp;struct vnode *st_vnode;int st_nfpgs;struct swapmap *st_swpmp;union swaptab___528A43D156F95A0146E09811518D2E1A st_union;time_t st_free_time;};
struct t_uderr {struct netbuf addr;struct netbuf opt;t_scalar_t error;};
struct arphdr {u_short ar_hrd;u_short ar_pro;u_char ar_hln;u_char ar_pln;u_short ar_op;};
struct d0time {struct d0stat d0s;int io_bcnt;time_t io_resp;time_t io_act;};
struct fc_arp {struct arphdr ea_hdr;u_char arp_sha[254];u_char arp_spa[4];u_char arp_tha[254];u_char arp_tpa[4];};
struct fhsize {fsid_t f1;uint16_t f2;char f3[4];uint16_t f4;char f5[4];};
struct ifaddr {struct sockaddr ifa_addr;union ifaddr___0DF00F875CAF96EB397809642F17405E ifa_ifu;struct ifnet *ifa_ifp;struct ifaddr *ifa_next;};
struct ncache {struct ncache *hash_next;struct ncache *hash_prev;struct ncache *lru_next;struct ncache *lru_prev;struct vnode *vp;struct vnode *dp;char namlen;char name[39];union ncache___E7616DCF58B0AC3D0D6587849AC64B92 dn_un;struct ncache *vfs_next;struct ncache **vfs_prev;struct ncache *dp_next;struct ncache **dp_prev;struct ncache *vp_next;struct ncache **vp_prev;};
struct rquota {int rq_bsize;bool_t rq_active;u_long rq_bhardlimit;u_long rq_bsoftlimit;u_long rq_curblocks;u_long rq_fhardlimit;u_long rq_fsoftlimit;u_long rq_curfiles;u_long rq_btimeleft;u_long rq_ftimeleft;};
struct sknode {struct sknode *n_next[4];struct sknode *n_prev;skkey_t n_key;skvalue_t n_value;char n_flags;char n_cookie;};
struct tlabel {void ( *t_dopc)();space_t t_pcsq;caddr_t t_pcoq;space_t t_isr;caddr_t t_ior;unsigned int t_type;space_t t_okspace;caddr_t t_okoffset;unsigned int t_oklen;};
struct vfddbd {vfd_t c_vfd;dbd_t c_dbd;};
typedef void ( *RD_DD)(PHOST_ADAPTER, uint64_t *, uint64_t *);
typedef void ( *WR_DD)(PHOST_ADAPTER, uint64_t *, uint64_t);
struct __xsi {struct __sub_ctxt sc;int __padding;siginfo_t si;};
struct _xArc {INT16 x;INT16 y;CARD16 width;CARD16 height;INT16 angle1;INT16 angle2;};
struct _xReq {CARD8 reqType;CARD8 data;CARD16 length;};
struct dkbad {int bt_csn;u_short bt_mbz;u_short bt_flag;struct dkbad__bt_bad bt_bad[126];};
struct dquot {struct dquot *dq_forw;struct dquot *dq_back;struct dquot *dq_freef;struct dquot *dq_freeb;short dq_flags;short dq_cnt;uid_t dq_uid;struct dquot__mount *dq_mp;struct dqblk dq_dqb;};
struct flock {short l_type;short l_whence;off_t l_start;off_t l_len;pid_t l_pid;};
struct lockx {char *server_name;netobj fh;int pid;u_int l_offset;u_int l_len;char *caller_name;netobj oh;int svid;char *clnt_name;u_int ub;int op;};
struct mtget {int32_t mt_type;int32_t mt_resid;int32_t mt_dsreg1;int32_t mt_dsreg2;int32_t mt_gstat;int32_t mt_erreg;daddr_t mt_fileno;daddr_t mt_blkno;};
struct qinit {int ( *qi_putp)(queue_t *, mblk_t *);int ( *qi_srvp)(queue_t *);int ( *qi_qopen)();int ( *qi_qclose)();int (*qi_qadmin)(void);struct qinit__module_info *qi_minfo;struct qinit__module_stat *qi_mstat;};
struct route {struct route__rtentry *ro_rt;struct sockaddr ro_dst;u_int ro_flags;struct route__socket *ro_socket;};
struct svcfh {fsid_t fh_fsid;uint16_t fh_len;char fh_data[10];uint16_t fh_xlen;char fh_xdata[10];};
struct tmask {Mask mask;Pointer dev;};
struct ucred {uid_t cr_uid;gid_t cr_gid;gid_t cr_groups[20];uid_t cr_ruid;gid_t cr_rgid;int cr_ref;unsigned int cr_pag;};
struct unpcb {struct socket *unp_socket;struct vnode *unp_vnode;ino_t unp_ino;struct unpcb *unp_conn;struct unpcb *unp_refs;struct unpcb *unp_nextref;MBLKP unp_addr;int unp_cc;};
struct ustat {int32_t f_tfree;uint32_t f_tinode;char f_fname[6];char f_fpack[6];int32_t f_blksize;};
typedef void ( *RD_B)(PHOST_ADAPTER, uint8_t *, uint8_t *);
typedef void ( *RD_D)(PHOST_ADAPTER, uint32_t *, uint32_t *);
typedef void ( *RD_W)(PHOST_ADAPTER, uint16_t *, uint16_t *);
typedef void ( *WR_B)(PHOST_ADAPTER, uint8_t *, uint8_t);
typedef void ( *WR_D)(PHOST_ADAPTER, uint32_t *, uint32_t);
typedef void ( *WR_W)(PHOST_ADAPTER, uint16_t *, uint16_t);
struct _XIC {XICMethods methods;XICCoreRec core;};
struct _XIM {XIMMethods methods;XIMCoreRec core;};
struct _XOC {XOCMethods methods;XOCCoreRec core;};
struct _XOM {XOMMethods methods;XOMCoreRec core;};
union idbd {dbd_t idbd;uint32_t idbd_int;};
struct rrec {int16 r_zone;int16 r_class;int16 r_type;u_int32 r_ttl;int r_size;char *r_data;};
struct spwd {char *sp_namp;char *sp_pwdp;time_t sp_lstchg;time_t sp_min;time_t sp_max;time_t sp_warn;time_t sp_inact;time_t sp_expire;uint32_t sp_flag;};
union svfd {struct vfd pgm;struct svfd___282F8E0CA4B08493EA9E1EA060A0731E pgi;};
union wait {int w_status;struct wait___F04A95226779EAA910C193CF534C5AD2 w_T;struct wait___A9B06B564058D387211EDDD78142AD67 w_S;};
struct XDR {enum xdr_op x_op;struct XDR__xdr_ops *x_ops;caddr_t x_public;caddr_t x_private;caddr_t x_base;int x_handy;};
struct skl {sknode_t l_header;sknode_t *l_tail;sknode_t *l_cache;skcmpf_t l_cmpf;int l_level;char l_cookie;};
struct sa {struct ciodio direct[16];struct subc_t sub[16];};
union _xEvent______F60DFC41729ECCA7C121C44CBFE60E95___82F47A5C57D4899F304609D6061CA549 {struct _xEvent_________82F47A5C57D4899F304609D6061CA549___FD3E7DCAA1FA6D37E77316D970071F0A l;struct _xEvent_________82F47A5C57D4899F304609D6061CA549___B8AD833485FADDB6F1E0494B45611EC6 s;struct _xEvent_________82F47A5C57D4899F304609D6061CA549___FB6660946ED728575FB5339601D7D5BE b;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___0F73BC087B0175F837E61BF86166AB84 {CARD32 pad00;CARD32 window;CARD8 state;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___316B218C709051C178B3BB07E6B18196 {CARD32 pad00;CARD32 drawable;CARD16 x;CARD16 y;CARD16 width;CARD16 height;CARD16 minorEvent;CARD16 count;BYTE majorEvent;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3284E488B37AEC742A022E833068D497 {CARD32 pad00;CARD32 event;CARD32 window;BOOL override;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3C1A322C1CF5978F8E7C805C02DD70C8 {CARD32 pad00;CARD32 window;CARD32 colormap;BOOL new;BYTE state;BYTE pad1;BYTE pad2;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___40ECE1105C1C479EC11371480E0EAEEE {CARD32 pad00;CARD32 window;CARD32 atom;CARD32 time;BYTE state;BYTE pad1;CARD16 pad2;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___4D6B1C2E2FE6C1124CAB2311E897D1AB {CARD32 pad00;CARD8 request;CARD8 firstKeyCode;CARD8 count;BYTE pad1;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___674F3E4AE65A41A1BBF2ACE37596CB1B {CARD32 pad00;CARD32 event;CARD32 window;BOOL fromConfigure;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___CF45A70F1381AC3E41639336F8DCFD08 {CARD32 pad00;CARD32 parent;CARD32 window;CARD32 sibling;INT16 x;INT16 y;CARD16 width;CARD16 height;CARD16 borderWidth;CARD16 valueMask;CARD32 pad1;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___E3E63ACF9DBDF6C56161A285CC120760 {CARD32 pad00;CARD32 drawable;CARD16 minorEvent;BYTE majorEvent;BYTE bpad;};
union _2ABA9BEBDC7EA73331E3BF8D3E5C1422___502ABD2D56F7B15CE77DF0D562CA3A98 {scsi_io_reply_type io;scsi_ctrl_reply_type ctrl;scsi_event_type event;};
union _83CB33CAC2707097E650C7C1ACF13AE9___39B7D594E1E86DA02F33894B14792296 {set_option_type option;scsi_abort_type abort;transfer_mode_type transfer_mode;};
union _sym_value_entry_type___sym_value_entry_value_union {int l_integer;double d_real;char *c_value;XmString xms_value;float single_float;sym_color_element *z_color;sym_icon_element *z_icon;char *az_data;};
union pst_swapinfo___3012E3C472EE422A626F70F0C4A32233 {struct pss_blk Pss_blk;struct pss_fs Pss_fs;struct pss_reserved Pss_XX;};
union ypresponse___941A5461F0E0B639BD3DE282E3990A90 {struct ypresp_val yp_resp_valtype;struct ypresp_key_val yp_resp_key_valtype;struct ypmap_parms yp_resp_map_parmstype;};
union yprequest___DEB989A88767ED55A1FBB16B6C8D997A {struct ypreq_key yp_req_keytype;struct ypreq_nokey yp_req_nokeytype;struct ypmap_parms yp_req_map_parmstype;};
struct _019CECDD6753AAB6598130682127E88A {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 accelNumerator;CARD16 accelDenominator;CARD16 threshold;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _02BF927D00A6078DB787849469CA32B9 {_LC_object_t hdr;wint_t ( *towupper)(wint_t, _LC_ctype_t *);wint_t ( *towlower)(wint_t, _LC_ctype_t *);wctype_t ( *wctype)( char *, _LC_ctype_t *);int ( *iswctype)(wint_t, wctype_t, _LC_ctype_t *);_LC_ctype_t *( *init)(_LC_locale_t *);void *data;};
struct _04BE85DF42EB3710F3E3DA7E472F659C {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;xieTypConvertFromRGBTechnique convert;CARD16 lenParams;};
struct _04F2FF642EF85672B24AFBAEAA33FAA3 {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD32 ndevices;CARD32 t_axes;CARD32 data02;CARD32 data03;CARD32 data04;CARD32 data05;};
struct _069CA722659D31B5E21E1ACEADA10473 {CARD8 reqType;BYTE pad;CARD16 length;CARD16 nFonts;BYTE pad1;BYTE pad2;};
struct _06E84F0011827D3FA6D8BE033B4E11AE {int status_length;data_ptr_type status_buff;bit8 selftest_option;union _06E84F0011827D3FA6D8BE033B4E11AE___6D780EA0E880820FFFF864F1AF607297 u;};
struct _07A0BBE0F3D6D0E97B5A30869B6D39C4 {CARD8 byteOrder;BYTE pad;CARD16 majorVersion;CARD16 minorVersion;CARD16 nbytesAuthProto;CARD16 nbytesAuthString;CARD16 pad2;};
struct _08E7BB45AF45164209AD32D6030ECBA7 {CARD8 class;CARD8 id;CARD16 length;CARD8 pad1;CARD8 pad2;INT16 num;INT16 denom;INT16 thresh;};
struct _092DD72AC6B9BBA1C79AF097B6F8E844 {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD16 num_feedbacks;CARD16 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;CARD32 pad06;};
struct _0A270F69B196F9EFA6F2CD4624EE5655 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 red;CARD16 green;CARD16 blue;CARD16 pad2;CARD32 pixel;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _0A5A2DC6F5DFEB19A95AB8D5777ED58E {Cardinal version;char *default_fname;union _0A5A2DC6F5DFEB19A95AB8D5777ED58E___F031A95ACFCBD1098C1A75B7F98C9502 nam_flg;Display *display;};
struct _0A62F3378E7EE0C32D1AC7B808E76453 {CARD8 type;CARD8 data;CARD16 sequenceNum;CARD32 length;CARD16 numTechniques;CARD8 pad[22];};
struct _0B87BC502720C51E06AFFAF967DE0BDB {sigset_t tte_signals;ttevents_t tte_events;tteopt_t tte_opts;char tte_spare[24];};
struct _0B94EEFCBD76FB7E6E0B7C6C274F8F05 {int type;unsigned int serial;int send_event;Display *display;Window window;Colormap colormap;int new;int state;};
struct _0D243FAD6E0128E307D753D10A84039C {int type;unsigned int serial;int send_event;Display *display;Window window;int kind;int x;int y;unsigned int width;unsigned int height;Time time;int shaped;};
struct _10F8C4C81A02E8CC11279456BCE6E63F {xieTypInterleave interleave;xieTypOrientation bandOrder;CARD16 pad;};
struct _13E12B2585DDAE3B8FAA42769F7D3B10 {idtype_t p_lidtype;id_t p_lid;idop_t p_op;idtype_t p_ridtype;id_t p_rid;};
struct _15B26EF61FAF3427F660B22EA1DD1EB1 {CARD8 class;CARD8 id;CARD16 length;CARD8 percent;BYTE pad1;BYTE pad2;BYTE pad3;CARD16 pitch;CARD16 duration;};
struct _1B017AC3620941E612639F23B92A9141 {xieTypOrientation encodedOrder;BOOL alignEol;BOOL radiometric;CARD8 pad;};
struct _1C6F78A52A2103385BA76901F31344C9 {CARD8 reqType;CARD8 hpReqType;CARD16 length;CARD32 flags;CARD32 wid;};
struct _1CCADE67AD141609F0BF116838B10204 {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD32 status;CARD32 data01;CARD32 data02;CARD32 data03;CARD32 data04;CARD32 data05;};
struct _1E4927A029C92C0FD595CCC76CE8B139 {CARD8 header;CARD8 pad1;CARD16 pad2;CARD32 delay_time;};
struct _1F1AC3FACFBF0931A43D0CD999C4D927 {CARD8 reqType;CARD8 depth;CARD16 length;CARD32 pid;CARD32 drawable;CARD16 width;CARD16 height;};
struct _2017A4559BD8DFB36CC7B04C7F93BD32 {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypPhotomap photomap;};
struct _221FB40353091864D31474CD79EAAEF6 {CARD8 reqType;CARD8 XTestReqType;CARD16 length;CARD32 ack;CARD8 action_list[64];};
struct _22DD3C11A6774D6C25B32DE300762746 {int process_type;XEvent *event;int action;String *params;Cardinal *num_params;};
struct _245C026780A0DE345EB9112C5F51F306 {CARD8 reqType;CARD8 hpReqType;CARD16 length;CARD32 cmap;CARD32 start;CARD32 ncolors;};
struct _249E14B8BF24C4EA206EE45FEC486099 {Dimension height;Dimension width;Boolean selected;Boolean last_selected;Boolean LastTimeDrawn;int length;unsigned int first_char;};
struct _26E851949BDE2473590BDE12DE36451F {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypLUT lut;};
struct _272B86F1CC556AC2FE1FEA8F3F6F9065 {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypColorList colorList;};
struct _2849ABCE19C747DF192BAEA83DFD9407 {CARD8 reqType;CARD8 hpReqType;CARD16 length;CARD32 wid;CARD32 accelid;CARD32 flags;};
struct _286A111ACEDB435E271A47289B65D34E {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD32 owner;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _292923DDD4ED46EE83D974C820DC3932 {CARD8 reqType;BYTE pad;CARD16 length;CARD16 maxNames;CARD16 nbytes;};
struct _29C593C589279C3E7D511580F3E78129 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 deviceid;CARD8 first_valuator;CARD8 num_valuators;BYTE pad1;};
struct _2D0C20B301ADA5F52D6F367B663BBC22 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;xieTypROI roi;};
struct _2E22270806C47E05D9B4938893A6CA7A {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 nPixels;CARD16 nMasks;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _2FFD57BA50D73951380BC0AC0294DF96 {Pixmap background_pixmap;unsigned int background_pixel;Pixmap border_pixmap;unsigned int border_pixel;int bit_gravity;int win_gravity;int backing_store;unsigned int backing_planes;unsigned int backing_pixel;int save_under;int event_mask;int do_not_propagate_mask;int override_redirect;Colormap colormap;Cursor cursor;};
struct _32453B3EC12C1083BBBEA47A258ADABA {CARD8 reqType;BYTE pad;CARD16 length;CARD16 nbytes;BYTE pad1;BYTE pad2;};
struct _32903A77322285C221D0A6A4314FFA28 {Dimension margin;unsigned char orientation;unsigned char separator_type;GC separator_GC;Boolean set_recompute_size;};
struct _3357D970642A072E0456347CD968AE51 {CARD8 reqType;CARD8 hpReqType;CARD16 length;CARD8 numKeyPerModifier;CARD8 pad1;CARD16 pad2;XID deviceid;};
struct _3369594E17BD6DC3517892D04DD0216E {CARD8 reqType;CARD8 XTestReqType;CARD16 length;CARD32 mode;};
struct _33E0BD21BC9E25CB376AFEED9A297D0A {BYTE type;BYTE data1;CARD16 sequenceNumber;CARD32 length;CARD32 data00;CARD32 data01;CARD32 data02;CARD32 data03;CARD32 data04;CARD32 data05;};
struct _37A9DB4B311662424B6FA129E06762F1 {CARD8 reqType;CARD8 button;CARD16 length;CARD32 grabWindow;CARD16 modifiers;CARD16 pad;};
struct _38BC431CF83E096863532D796A6E7F77 {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 ndevices;CARD8 pad1;CARD8 pad2;CARD8 pad3;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;};
struct _3AFF259FB5915F31DE3264913FDD68F1 {Boolean done_status;Boolean success_status;XmSelectType select_type;XSelectionRequestEvent *event;};
struct _3B00234C5998E2ECB70FFF97A8C8B026 {CARD8 depth;CARD8 pad1;CARD16 nVisuals;CARD32 pad2;};
struct _3B80496DCDE561EAC81E803683D00588 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 authIndex;CARD8 unused1;CARD32 length;CARD16 authDataLength;CARD8 unused2[6];};
struct _3C4C38FC10522588E30AD31A846C8E7D {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 nColors;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _40B85A3B6BBE9789377036CCC7E05A20 {int type;unsigned int serial;int send_event;Display *display;Drawable drawable;int major_code;int minor_code;ShmSeg shmseg;unsigned int offset;};
struct _44A07E0130C85419C01F2CC43BB02292 {int islogc;int powfail;int status;int ispoll;int timer;pquad_type *lastpquad;short port;bit8 timer_status;io_subq_type subq;bit8 stest_retry;io_subq_type stest_subq;boolean level1_card;bit8 ismux;};
struct _44DBA8761062EA5D0E0445C058A5F0FB {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 nPixels;CARD16 pad2;CARD32 redMask;CARD32 greenMask;CARD32 blueMask;CARD32 pad3;CARD32 pad4;};
struct _453648157F8C28DF21474B3959DE4C9C {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD8 numKeyPerModifier;CARD8 pad0;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _4664B325D7B1C568276997F8FB024EC2 {Elf64_Addr r_offset;Elf64_Xword r_info;Elf64_Sxword r_addend;};
struct _468E3F20F7462D23787414BB7174F8B3 {XEvent *event;String *params;Cardinal *num_params;};
struct _48A6A373861130075F8524D5C353FEE6 {CARD32 pixel;CARD16 red;CARD16 green;CARD16 blue;CARD8 flags;CARD8 pad;};
struct _4AAF95CDB93A48CA96556BB33DEADB65 {CARD8 reqType;CARD8 hpReqType;CARD16 length;XID deviceid;CARD8 prompt;CARD8 pad1;CARD8 pad2;CARD8 pad3;};
struct _4CEA7C0856663FB37AE47FD9F99BB511 {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypTechniqueGroup techniqueGroup;CARD8 pad[3];};
struct _4CF2A723A8F4F5EA6EDE16F5794DEA22 {xieTypOrientation encodedOrder;BOOL normal;CARD16 pad;};
struct _4EB5A781921B45AC1AB8FBD134D3E0D0 {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD32 mask;CARD32 data01;CARD32 data02;CARD32 data03;CARD32 data04;CARD32 data05;};
struct _51749B1CBB08500DC0A3C077F7082133 {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypPhotospace nameSpace;};
struct _53A84E5818A8BF56A6CBC41177A9FFE2 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD32 nEvents;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _552C52AB05687DD02B6759D4331D5B07 {CARD8 error;CARD8 code;CARD16 sequenceNum;CARD32 floID;CARD16 minorOpcode;CARD8 majorOpcode;CARD8 floErrorCode;CARD32 nameSpace;CARD8 pad[16];};
struct _56876A3CF1ED32735E0999A0D66A4738 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 nColormaps;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _56F965C4CB1B37CA1C9344E914749FD8 {CARD8 reqType;CARD8 direction;CARD16 length;CARD32 window;};
struct _57642C20A930BC40CC56BFA51EFC45F8 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 nFonts;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _57A765EA942AE9D5162F8EADA05AB765 {CARD8 type;CARD8 state;CARD16 sequenceNum;CARD32 length;CARD16 expectedCount;CARD16 availableCount;CARD8 pad[20];};
struct _57E6A23A76D16D83EF023BCC9C7B7628 {CARD8 reqType;CARD8 pad;CARD16 length;CARD32 window;CARD16 mask;CARD16 pad2;};
struct _58964FFE81FF7A5F550F9B44561E3FD1 {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypPhotoflo floID;CARD16 numElements;CARD16 pad;};
struct _58FAD93ADC8A41E6E41FB2BF3A4FCE08 {CARD8 reqType;CARD8 opcode;CARD16 length;CARD32 nameSpace;CARD32 floID;};
struct _5A60C9F0480C450293B4087497D73F1D {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD32 mode;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _5D8B4C88FE874254192A5C2673EF8027 {CARD8 error;CARD8 code;CARD16 sequenceNum;CARD32 resourceID;CARD16 minorOpcode;CARD8 majorOpcode;CARD8 pad[21];};
struct _5E04D711070F28523D4888D880E8635D {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypROI roi;};
struct _5F1426FF167D9E06CE7F137AEA610D0C {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 success;CARD8 pad0;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _60FD28E41E68D30D206D9EC072DAC7C8 {CARD8 reqType;CARD8 revertTo;CARD16 length;CARD32 focus;CARD32 time;};
union _612386ADEA876BB7391CC4765800258F {char *ch;int *integ;BLKID *id;FHDRTYPE *hdr;FTRLTYPE *trl;};
struct _6180D9D3CA56B1110646E5C5D8270DC5 {String rep_type_name;String *value_names;unsigned char *values;unsigned char num_values;Boolean reverse_installed;XmRepTypeId rep_type_id;};
struct _625B72EC204AD184FA367A67F4C8645C {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 window;};
struct _627A07425D4376D35C2749D7EEB3514A {netdiag_t_filters trace;netdiag_l_filters log;device_name *device_ptr;};
struct _6554ADDCE5A2948DCEB4E183D884FEE9 {__lc_type_id_t type_id;unsigned short magic;uint32_t version;size_t size;};
struct _65A971B36897144817056F5407AD29D1 {int reason;XEvent *event;Atom selection;Atom target;Atom type;XtPointer transfer_id;int flags;int remaining;XtPointer value;unsigned int length;int format;};
struct _65B902F391CFF156201AD47DA98B3D7B {BOOL shapeFactor;CARD8 pad[3];xieTypFloat constant;};
struct _66DA73451B2C91DDB1D8B91FCC8B26BF {xieTypOrientation encodedOrder;BOOL radiometric;CARD16 pad;};
struct _6C8DA88AE0F795AA91A7651F5464995D {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 deviceid;CARD8 firstKeyCode;CARD8 count;BYTE pad1;};
struct _6E021F31F73E4CDD452D268F50E8CCC0 {creation_options create_options;int server_data_len;int max_msg_size;int num_msgs;bit8 num_subqueues;port_num_type port_num;};
struct _6ECE5F7C46F37A2EF909042FBC6F3E21 {CARD8 reqType;CARD8 recordReqType;CARD16 length;CARD32 context;};
struct _700E25E294696415C5EE3D6F0C9AA59E {port_num_type port_number;int probe_id;bind_req_type dm_bind_info;bit8 cur_dm_state;};
struct _70F891D3DFE5F5563C0C4B91897BCFD5 {int *status_ptr;FILE *subsys_strm;FILE *error_strm;FILE *log_strm;int ss_id;char *ss_name;nl_catd ss_msg_cat;get_opt_flag_type ss_n_get_opt_flag;char **ss_options_ptr_ptr;int ss_output_fd;char *options_file_name;int *options_filename_printed;};
struct _72E33BD22DCEAD37F3B82706335FF895 {Boolean xp_connected;Boolean last_page;unsigned short print_resolution;Position min_x;Position min_y;Position max_x;Position max_y;unsigned short default_pixmap_resolution;XtCallbackList start_job_callback;XtCallbackList end_job_callback;XtCallbackList page_setup_callback;XtCallbackList pdm_notification_callback;};
struct _73B4058B96DB787648F70BEB3765CE40 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD32 pixel;CARD16 exactRed;CARD16 exactGreen;CARD16 exactBlue;CARD16 screenRed;CARD16 screenGreen;CARD16 screenBlue;CARD32 pad2;CARD32 pad3;};
struct _74BD57DEBF7C027BB64500CA73459CBB {lock_t *lock;dma_A_chain_type *chain_list;uint32_t pad[14];};
struct _754E82352BACFD73AE933254C0FF8B10 {XEvent *event;String *params;Cardinal num_params;};
struct _75E873D448E8C803996EFA0EB2285D5F {CARD8 reqType;CARD8 hpReqType;CARD16 length;CARD32 evconst;};
struct _75FF7BAF524F34136E9A08BA8B6AF6C3 {int type;unsigned int serial;int send_event;Display *display;Window window;Atom host;int message;int tag;int extra;};
struct _791AF81D366397FAE28AFC7E5E3FF4B5 {CARD8 reqType;CARD8 recordReqType;CARD16 length;CARD32 context;CARD8 elementHeader;CARD8 pad;CARD16 pad0;CARD32 nClients;CARD32 nRanges;};
struct _79D3745B39F9E71262BFBA7985E1C7DE {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 exactRed;CARD16 exactGreen;CARD16 exactBlue;CARD16 screenRed;CARD16 screenGreen;CARD16 screenBlue;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _7A455DB3BD331D79AF16B3231F86E0C5 {CARD8 reqType;BOOL onlyIfExists;CARD16 length;CARD16 nbytes;CARD16 pad;};
struct _7A953307C4CBF8DC3B970A060657095E {XmTextPosition start;Boolean changed;XmTextPosition changed_position;Boolean past_end;LineTableExtra extra;};
struct _7C51721F952AE208674F472DDD9AB61E {mib_Dot5Entry dot5entry;mib_Dot5StatsEntry dot5stats;mib_Dot5TimerEntry dot5timer;};
struct _7CE23751FA90F89F4E8DC4D527FC30AB {uint32_t type_I_0;uint32_t io_eim;uint32_t type_I_1;union _7CE23751FA90F89F4E8DC4D527FC30AB___4677EF6C4309B7A99408668B47D48789 io_ii;uint32_t io_dma_link;uint32_t io_dma_command;uint32_t io_dma_address;uint32_t io_dma_count;uint32_t type_I_2[4];uint32_t io_command;uint32_t io_status;uint32_t type_I_3;union _7CE23751FA90F89F4E8DC4D527FC30AB___F0E530FF1DC6AE3DC880294D4D1C5140 io_data;};
struct _7D1B644A0EEA2B09DD88F0E6B7E788D2 {XtAddressMode address_mode;XtPointer address_id;Cardinal size;};
struct _7E62CC70772B05F37392B1746CC4A8DA {CARD8 reqType;CARD8 hpReqType;CARD16 length;CARD32 wid;CARD32 gcid;CARD32 nClipLists;};
struct _808EA0A767ABACCBD96646A8EAE3059A {CARD8 type;CARD8 data;CARD16 sequenceNum;CARD32 length;CARD32 colormap;CARD8 pad[20];};
struct _811A37D7B033DDB34701FA374271E678 {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window window;};
struct _823A3963DE3EAD717009583170D6A1BB {CARD8 reqType;CARD8 hpReqType;CARD16 length;CARD32 wid;CARD32 gcid;CARD32 format;};
struct _8697364FD96ED83358CE64124BFB470E {llio_status_type reply_status;int hdw_address;ent_id_type ent_id;bit8 num_layers;int hdw_layers[6];char description[32];};
struct _86EBEF6FA494C5E7B15E4A55F7A590B9 {int reason;XEvent *event;Widget menuToPost;Boolean postIt;Widget target;};
struct _88CB499CEF7C95AB64991FDC4A8C267A {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 keySymsPerKeyCode;CARD8 pad0;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _8973D72E68A3D7427BDE924AB847E810 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 deviceid;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _8AC915922B7872008F9FA0F659707AB7 {CARD8 type;CARD8 pad1;CARD16 sequenceNumber;CARD32 length;CARD32 size_return;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _8B1EAF7AAA57F33F38F96E94C6EE2E44 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 nameLength;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _8BD856D0EABB45DC0AE6203B505E4C05 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 window;CARD16 count;CARD16 pad00;};
struct _8C544AC6C871408AE6573DA61B3B8C70 {BYTE type;BYTE status;CARD16 sequenceNumber;CARD32 length;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _8D66564F98126883EE28AC7CFF4C7324 {CARD8 majorOpcode;CARD8 minorOpcode;CARD16 errorClass;CARD32 length;CARD8 offendingMinorOpcode;CARD8 severity;CARD16 unused;CARD32 offendingSequenceNum;};
struct _8E1349AD4AC8D9A4F1DC84C54B0BE169 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 nPaths;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _90781A1EE0BF204281329EC3E50F50C8 {int type;unsigned int serial;int send_event;Display *display;Window window;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;unsigned int keycode;int same_screen;};
struct _90B3239242A1E7B072ABC9D9983310BF {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD16 this_client_count;CARD16 all_clients_count;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;};
struct _94C04A488373DB802AA4CC07AF27941B {CARD8 reqType;INT8 percent;CARD16 length;};
struct _95FA76242027CA03F9C53902C97D80C2 {CARD8 class;CARD8 id;CARD16 length;CARD32 led_mask;CARD32 led_values;};
struct _981CB342896EC9052433BEBA5A8FF76A {int flags;int input;int initial_state;Pixmap icon_pixmap;Window icon_window;int icon_x;int icon_y;Pixmap icon_mask;XID window_group;};
struct _984028CEBAA862490ACFAD72BCDE57E1 {CorePart core;CompositePart composite;ShellPart shell;};
struct _988632284A71C49D1170FC4598DEA165 {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD16 count;CARD16 pad00;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;};
struct _9990F7522FA29648C94CCC0846165B95 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 width;CARD16 height;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _9A79A86C67FC8B79D589DEFE9BCD3BC9 {CARD8 reqType;BYTE pad;CARD16 length;CARD8 firstKeyCode;CARD8 count;CARD16 pad1;};
struct _9A7B13471624AF49EBC2FC2C06B8FE16 {CARD8 reqType;CARD8 class;CARD16 length;CARD32 drawable;CARD16 width;CARD16 height;};
struct _9B4395DE66E8574EC0897BBFC5E468E1 {CARD8 family;BYTE pad;CARD16 length;};
struct _9DF5225FB79C7EC3237B4B73EEC9C169 {CARD8 reqType;CARD8 key;CARD16 length;CARD32 grabWindow;CARD16 modifiers;CARD16 pad;};
struct _A27389B7F44473FD8046F73BDABEA635 {xieTypOrientation encodedOrder;BOOL radiometric;BOOL uncompressed;CARD8 pad;};
struct _A38AB1DC10BE37D6B74E3A62DF3167E7 {CARD16 elemType;CARD16 elemLength;CARD16 numTiles;CARD16 pad;CARD32 width;CARD32 height;xieTypFloat constant0;xieTypFloat constant1;xieTypFloat constant2;};
struct _A52021AA62F27114E0B08EAFF70959FC {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD8 keySymsPerKeyCode;CARD8 pad0;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _A8C26958E47A670C8BA111DF3C373603 {xieTypOrientation encodedOrder;BOOL alignEol;BOOL radiometric;BOOL uncompressed;CARD32 kFactor;};
struct _A94EB43F2838EBEBCA936AD6F7EBA6B5 {RECORD_RANGE8 coreRequests;RECORD_RANGE8 coreReplies;RECORD_EXTRANGE extRequests;RECORD_EXTRANGE extReplies;RECORD_RANGE8 deliveredEvents;RECORD_RANGE8 deviceEvents;RECORD_RANGE8 errors;BOOL clientStarted;BOOL clientDied;};
struct _AA1A19B97C4266B2BC3AEB2743D64DB3 {XmTextPosition position;Atom target;Time time;int num_chars;int ref_count;};
struct _AA5574FCAA16239E322F63F196E24F16 {Colormap colormap;unsigned int red_max;unsigned int red_mult;unsigned int green_max;unsigned int green_mult;unsigned int blue_max;unsigned int blue_mult;unsigned int base_pixel;VisualID visualid;XID killid;};
struct _ACF034D5104D0F5B8D12F5FF38C4FBA5 {xieTypOrientation encodedOrder;BOOL normal;BOOL radiometric;CARD8 pad;};
struct _AD58CDA99C93F34C31A743157D5C3E5C {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 xaxis;CARD8 yaxis;CARD8 deviceid;BYTE pad1;};
struct _AD97566547E5F77323709B4B3562439C {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD8 bandNumber;CARD8 pad;};
struct _B005B6DFBEE50E3DE02814ABC4E5985A {CARD8 reqType;CARD8 hpReqType;CARD16 length;XID deviceid;CARD8 ack;CARD8 pad1;CARD8 pad2;CARD8 pad3;};
struct _B16FC8566897364FB8F68A61B8D500EB {CARD8 type;CARD8 pad0;CARD16 sequenceNumber;CARD32 length;CARD16 majorVersion;CARD16 minorVersion;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _B2D1347A7314B3F7BD8A6C26E40DE0B3 {BYTE type;BYTE deviceid;CARD16 sequenceNumber;CARD8 keys[28];};
struct _B4F2C86EC2AFA3B90E8AE0EA0F71367B {CARD8 reqType;BYTE pad;CARD16 length;};
struct _B5CF7BA2901ABDB4A7D5E18D4AD5B79B {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;xieTypConvertToRGBTechnique convert;CARD16 lenParams;};
struct _B73D64128F8EC87CEF84A504D28B419F {cio_vquad_ptr vquad_chain;port_num_type cam_port;bit8 da_number;};
struct _B9DE48622BE1A30E91ED1262299F48A0 {CARD8 class;CARD8 id;CARD16 length;INT32 int_to_display;};
struct _BBE251C902F5B1253853EC586FC56F1D {llio_status_type reply_status;int transfer_count;diag_option_type diag_option;union _BBE251C902F5B1253853EC586FC56F1D___C64D297F1DF5A22C084AC26BD4E7327B u;};
struct _BCAE7384F079FDFA9DD5F4EFBAB29817 {CARD8 majorOpcode;CARD8 minorOpcode;CARD8 unused1[2];CARD32 length;CARD16 authDataLength;CARD8 unused2[6];};
struct _BCDE0020825236A8F8A72B60AFA7374C {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD16 control;CARD8 deviceid;BYTE pad0;};
struct _BD577CFD808EB4E77A4E3752FBFBD993 {XSyncTrigger trigger;XSyncValue delta;int events;XSyncAlarmState state;};
struct _BF64539E6524EAB933F699888D17B074 {llio_status_type reply_status;generic_hw_set hw_status;generic_sw_set sw_status;};
struct _C04761233C6B6D3917A9FB90584A60A5 {int type;unsigned int serial;int send_event;Display *display;Window window;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;int mode;int detail;int same_screen;int focus;unsigned int state;};
struct _C08104BD47142265B42A3F745A07258E {CARD8 leftPad[3];xieTypOrientation fillOrder;CARD8 pixelStride[3];xieTypOrientation pixelOrder;CARD8 scanlinePad[3];xieTypOrientation bandOrder;xieTypInterleave interleave;CARD8 pad[3];};
struct _C16308A46254792F555119C61B977CA2 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD16 control;CARD8 deviceid;BYTE pad2;};
struct _C2F976814A2B3F5987995BCD3B4FB1DE {uint32_t dl_proto_kind;uint8_t *dl_sap;uint32_t ( *dl_proto_func)();uintptr_t dl_proto_info;};
struct _C3C74FE90578EF0C42EE47B900DACD06 {io_subq_type reply_subq;bit8 da_number;cio_vquad_ptr vquad_chain;};
struct _C65DFB72B3FBEEE777E9E71274DF712D {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 nProperties;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _C6DB73EBDDFB13DF2FA8D027C3235A3C {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD32 status;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _C785CF6C4EEFEB89ECBC9FAC0351909D {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 deviceid;CARD8 map_length;BYTE pad1;BYTE pad2;};
struct _C7FD7A89DA92577ACDB656B79C5D8B79 {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD8 success;CARD8 pad0;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _CB0632EF2409CFA4902D18F029698548 {CARD32 visualID;CARD8 class;CARD8 bitsPerRGB;CARD16 colormapEntries;CARD32 redMask;CARD32 greenMask;CARD32 blueMask;CARD32 pad;};
struct _CC18AF02D55844FF82CD78427B281927 {caddr_t drv_data;intptr_t ( *dlpi_output)();int ( *dlpi_build_hdr)();intptr_t ( *dlpi_ioctl)();caddr_t mib_ptr;int mib_len;uint32_t reserved1;uint32_t reserved2;uint32_t reserved3;};
struct _CE16222007FB0690EE3C9A36EEE011B3 {io_subq_type reply_subq;bit8 lock_event;struct _CE16222007FB0690EE3C9A36EEE011B3___0A101F8255B2594E50F8800F5A6D170D u;};
struct _D0A230E2822E6F114388A4393E99A918 {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 numKeyPerModifier;CARD8 pad0;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _D0F4880E5E163BC8F27E9DD5F5B3C82C {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypPhotoflo floID;};
struct _D20D275EAB1226EC1C38DFF3333DCDF2 {xieTypFloat matrix00;xieTypFloat matrix01;xieTypFloat matrix02;xieTypFloat matrix10;xieTypFloat matrix11;xieTypFloat matrix12;xieTypFloat matrix20;xieTypFloat matrix21;xieTypFloat matrix22;xieTypWhiteAdjustTechnique whiteAdjusted;CARD16 lenParams;};
struct _D299CDB8D19E75BF1FB5C91684A275B9 {Elf32_Addr r_offset;Elf32_Xword r_info;Elf32_Sword r_addend;};
struct _D60B59C14E4F896E4A7591EB7765B14B {CARD8 success;BYTE lengthReason;CARD16 majorVersion;CARD16 minorVersion;CARD16 length;};
union _D6F3C0EC0794CF7A820CAC9334CFC732 {int32_t select;struct _D6F3C0EC0794CF7A820CAC9334CFC732___F308977B809EAB96C4993BAEDE5FE847 result;struct _D6F3C0EC0794CF7A820CAC9334CFC732___634CF919C5FB93A8137AC8DCFB324513 hp_result;};
struct _D769135999DFEE6143DE1D9CD80B3AD5 {Widget old;Widget req;ArgList args;Cardinal num_args;};
struct _D89E607749B4D1F5D66FC1721C178233 {int reason;XEvent *event;Boolean doit;int currInsert;int newInsert;int startPos;int endPos;XmTextBlockWcs text;};
struct _DAE3AA21F13D443C5590C7BCADAB13AB {int type;unsigned int serial;int send_event;Display *display;Window window;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;unsigned int button;int same_screen;};
struct _DD6487706C9376B02E0B52997E69E388 {CARD8 reqType;CARD8 hpReqType;CARD16 length;CARD32 screen;};
struct _DDAC1D07D44FFC2E5C65864F60CCE1DF {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD32 root;CARD32 parent;CARD16 nChildren;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _DEC38AF16E696AF732A84E8DDBF5584E {llio_status_type reply_status;block_size_type block_size;req_parm_type request_parms;int cmd_residue;int data_residue;int status_residue;};
struct _E0D258F3248B038EE90F289455DE9392 {CARD8 type;CARD8 newState;CARD16 sequenceNum;CARD32 length;CARD32 byteCount;CARD8 pad[20];};
struct _E2032B46AD056E419D159E4C80280834 {int reason;XEvent *event;Boolean doit;int currInsert;int newInsert;int startPos;int endPos;XmTextBlock text;};
struct _E21C2301BB99EE91E0BC7B4A37773E5E {int reason;XEvent *event;Atom selection;Atom target;XtPointer source_data;XtPointer location_data;int flags;XtPointer parm;int parm_format;unsigned int parm_length;Atom parm_type;int status;XtPointer value;Atom type;int format;unsigned int length;};
struct _E89CAE49E77FFA19927DB3E1B8EA1AFC {xieTypPhototag src;CARD16 pad;INT32 dstX;INT32 dstY;};
struct _E933BCC3EA0E9DD82AEB507EEC5AF7E5 {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD32 mask;CARD32 evtype;CARD32 data01;CARD32 data02;CARD32 data03;CARD32 data04;};
struct _E997A7E9262D40FC83356A066D96F704 {CARD8 reqType;CARD8 recordReqType;CARD16 length;CARD32 context;CARD32 nClients;};
struct _E9D9387C3B11BC3046AC632B5B502F37 {int type;Display *display;Window window;CARD8 actions[28];};
struct _EDCAE6FAA77F2844B16FB7E0B618EDD7 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 deviceid;CARD8 mode;BYTE pad1;BYTE pad2;};
struct _EF6E92C885F7EBA601BD227CAE25DC00 {int type;unsigned int serial;int send_event;Display *display;Window window;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;char is_hint;int same_screen;};
struct _EFD32AB26A9F2C4402B187171A2243FF {CARD8 reqType;CARD8 hpReqType;CARD16 length;XID deviceid;};
struct _F0735D304A48E71B4E554EB40B66D311 {dumparea_t di_area;uint64_t di_start;uint64_t di_end;union _F0735D304A48E71B4E554EB40B66D311___B850ACC67C3D860999BBD062D5651151 di_un;};
struct _F0B6F56018B35AE6D958AA393C56DA44 {CARD8 coreRequestsFirst;CARD8 coreRequestsLast;CARD8 coreRepliesFirst;CARD8 coreRepliesLast;CARD8 extRequestsMajorFirst;CARD8 extRequestsMajorLast;CARD16 extRequestsMinorFirst;CARD16 extRequestsMinorLast;CARD8 extRepliesMajorFirst;CARD8 extRepliesMajorLast;CARD16 extRepliesMinorFirst;CARD16 extRepliesMinorLast;CARD8 deliveredEventsFirst;CARD8 deliveredEventsLast;CARD8 deviceEventsFirst;CARD8 deviceEventsLast;CARD8 errorsFirst;CARD8 errorsLast;BOOL clientStarted;BOOL clientDied;};
struct _F19CD3A20937CEF33F3E2EF5E2D906EF {CARD32 release;CARD32 ridBase;CARD32 ridMask;CARD32 motionBufferSize;CARD16 nbytesVendor;CARD16 maxRequestSize;CARD8 numRoots;CARD8 numFormats;CARD8 imageByteOrder;CARD8 bitmapBitOrder;CARD8 bitmapScanlineUnit;CARD8 bitmapScanlinePad;CARD8 minKeyCode;CARD8 maxKeyCode;CARD32 pad2;};
struct _F1FFDF0E76C6F940FFACBA8A13B33CEB {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 focus;CARD32 time;CARD8 revertTo;CARD8 device;CARD16 pad01;};
struct _F3EFAA27463B93CC96181BFE5F29A4C5 {CARD8 reqType;CARD8 mode;CARD16 length;CARD32 time;};
struct _F4538060D71DD562A33D9EF68435D712 {int tts_signo;ttsigf_t tts_sigflags;uint64_t tts_sigaction;siginfo_t tts_siginfo;};
struct _F466B234F46A211DC597B6DC6FDB33CA {CARD8 type;CARD8 pad00;CARD16 sequenceNumber;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;CARD32 pad06;CARD32 pad07;CARD32 pad08;};
struct _F729A21D64D64CB485090C8C4309D6F8 {io_subq_type reply_subq;bit8 da_number;cio_pquad_ptr firstpquad;cio_pquad_ptr lastpquad;};
struct _F88DFF0D39F146217256B482FD360ACC {CARD8 reqType;BYTE mode;CARD16 length;};
struct _FA4FE0B2CA883E06053CBA1706060353 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD32 atom;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _FB619B5CE8E6B82A3D0938CCE57F62CA {CARD8 reqType;BYTE mode;CARD16 length;CARD8 hostFamily;BYTE pad;CARD16 hostLength;};
struct _FC3BB1A81303FA005E7D17D8401F89AB {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD8 deviceid;CARD8 feedbackid;CARD8 feedbackclass;INT8 percent;};
struct _FDEF638EE31B74BBB9D41AD628E95644 {Window frame;Window window;Widget shell;unsigned char flags;unsigned char dragProtocolStyle;int xOrigin;int yOrigin;unsigned int width;unsigned int height;unsigned int depth;XtPointer iccInfo;};
struct _FF9246841A32B78E17B3644398C154C0 {BYTE type;BYTE deviceid;CARD16 sequenceNumber;CARD8 buttons[28];};
struct _XmTraverseObscuredCallbackStruct {int reason;XEvent *event;Widget traversal_destination;XmTraversalDirection direction;};
typedef Widget ( *XmDropTransferStartTransferProc)(Widget, ArgList, Cardinal);
struct _XmDropSiteEnterCallbackStruct {int reason;XEvent *event;Time timeStamp;unsigned char operation;unsigned char operations;unsigned char dropSiteStatus;Position x;Position y;};
typedef void ( *XmDropTransferAddTransferProc)(Widget, XmDropTransferEntry, Cardinal);
typedef int ( *XmbTextPropertyToTextListProc)(XLCd, Display *, XTextProperty *, char ***, int *);
struct _XmSeparatorGCacheObjClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmSeparatorGCacheObjClassPart separator_class_cache;};
struct _XmSimpleSpinBoxConstraintRec {XmManagerConstraintPart manager;XmSpinBoxConstraintPart spinBox;XmSimpleSpinBoxConstraintPart simpleSpinBox;};
struct _XmArrowButtonGadgetClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;XmArrowButtonGadgetClassPart arrow_button_class;};
struct _XmDragMotionCallbackStruct {int reason;XEvent *event;Time timeStamp;unsigned char operation;unsigned char operations;unsigned char dropSiteStatus;Position x;Position y;};
struct _sym_forward_ref_entry_type {sym_entry_header_type header;struct _sym_forward_ref_entry_type *az_next_ref;char *a_update_location;sym_name_entry_type *az_name;sym_widget_entry_type *parent;};
struct _sym_nested_list_entry_type {sym_entry_header_type header;sym_obj_header_type obj_header;sym_list_entry_type *az_list;};
struct _xkbIndicatorDoodadWireDesc {CARD32 name;CARD8 type;CARD8 priority;INT16 top;INT16 left;INT16 angle;CARD8 shapeNdx;CARD8 onColorNdx;CARD8 offColorNdx;CARD8 pad1;CARD32 pad2;};
struct _XmDragStartCallbackStruct {int reason;XEvent *event;Widget widget;Boolean doit;};
struct _XmSeparatorGadgetClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;XmSeparatorGadgetClassPart separator_class;};
struct _xkbGetIndicatorStateReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD32 state;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
typedef int ( *XwcTextPerCharExtentsProc)(XFontSet,  unsigned int *, int, XRectangle *, XRectangle *, int, int *, XRectangle *, XRectangle *);
struct _XmLabelGCacheObjClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmLabelGCacheObjClassPart label_class_cache;};
typedef Boolean ( *XmScrollFrameGetInfoProc)(Widget sf, Cardinal *dimension, Widget **nav_list, Cardinal *num_nav_list);
typedef XmFontList ( *XmSpecRenderGetTableProc)(Widget wid, XtEnum type);
struct _PrintGetImageResolution {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;};
struct _PrintSetImageResolution {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;CARD16 imageRes;CARD16 pad1;};
struct _XmAccessTextualTraitRec {int version;XmAccessTextualGetValuesProc getValue;XmAccessTextualSetValuesProc setValue;XmAccessTextualPreferredProc preferredFormat;};
struct _XmDropTransferClassPart {XmDropTransferStartTransferProc start_drop_transfer;XmDropTransferAddTransferProc add_drop_transfer;XtPointer extension;};
struct _XmIconGCacheObjClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmIconGCacheObjClassPart icon_class_cache;};
struct _XmSeparatorGCacheObjRec {ObjectPart object;XmExtPart ext;XmSeparatorGCacheObjPart separator_cache;};
struct _sym_argument_entry_type {sym_entry_header_type header;sym_obj_header_type obj_header;sym_value_entry_type *az_arg_name;sym_value_entry_type *az_arg_value;};
struct _xkbGetIndicatorMapReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD32 which;CARD32 realIndicators;CARD8 nIndicators;CARD8 pad1;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _xkbIndicatorMapWireDesc {CARD8 flags;CARD8 whichGroups;CARD8 groups;CARD8 whichMods;CARD8 mods;CARD8 realMods;CARD16 virtualMods;CARD32 ctrls;};
struct _xkbSymInterpretWireDesc {CARD32 sym;CARD8 mods;CARD8 match;CARD8 virtualMod;CARD8 flags;xkbActionWireDesc act;};
typedef int ( *XmDSMGetTreeFromDSMProc)(XmDropSiteManagerObject, Widget, XtPointer);
typedef Boolean ( *XmMenuSystemPopdownProc)(Widget, XEvent *);
typedef void ( *XmNavigatorSetValueProc)(Widget nav, XmNavigatorData nav_data, Boolean notify);
typedef void ( *XmSelectionFinishedProc)(Widget, XtEnum, XmTransferDoneCallbackStruct *);
typedef Boolean ( *XmTraversalChildrenProc)(Widget, Widget **, Cardinal *);
typedef Boolean ( *XmWidgetDisplayRectProc)(Widget, XRectangle *);
typedef void ( *XtLoseSelectionIncrProc)(Widget, Atom *, XtPointer);
typedef void ( *XtSelectionCallbackProc)(Widget, XtPointer, Atom *, Atom *, XtPointer, unsigned int *, int *);
struct _PrintGetPageDimensions {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;};
struct _XmButtonEventStatusRec {Time time;Boolean verified;Boolean waiting_to_be_managed;XButtonEvent event;};
struct _XmContainerItemDataRec {Mask valueMask;unsigned char view_type;unsigned char visual_emphasis;Dimension icon_width;Cardinal detail_count;};
struct _XmLabelGadgetClassPart {XtWidgetProc setOverrideCallback;XmMenuProc menuProcs;XtPointer extension;};
struct _sym_control_entry_type {sym_entry_header_type header;sym_obj_header_type obj_header;sym_widget_entry_type *az_con_obj;};
struct _xkbListComponentsReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD16 nKeymaps;CARD16 nKeycodes;CARD16 nTypes;CARD16 nCompatMaps;CARD16 nSymbols;CARD16 nGeometries;CARD16 extra;CARD16 pad1;CARD32 pad2;CARD32 pad3;};
struct _xkbPerClientFlagsReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD32 supported;CARD32 value;CARD32 autoCtrls;CARD32 autoCtrlValues;CARD32 pad1;CARD32 pad2;};
typedef void ( *DrawInsertionPointProc)(XmTextWidget, XmTextPosition, OnOrOff);
typedef int ( *XimTransCallDispatcher)(Xim, INT16, XPointer);
typedef Boolean ( *XmCareVisualRedrawProc)(Widget kid, Widget cur_parent, Widget new_parent, Mask visual_flag);
typedef void ( *XmGetAutoDragRectsProc)(Widget, XRectangle **, Cardinal *);
typedef Boolean ( *XmMenuSystemVerifyProc)(Widget, XEvent *);
struct _PrintGetContextScreen {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;};
struct _XmArrowButtonClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmArrowButtonClassPart arrowbutton_class;};
struct _XmLabelGadgetClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;XmLabelGadgetClassPart label_class;};
struct _xkbKTMapEntryWireDesc {BOOL active;CARD8 mask;CARD8 level;CARD8 realMods;CARD16 virtualMods;CARD16 pad;};
typedef int ( *XimTransRegDispatcher)(Xim, int ( *)(Xim, INT16, XPointer, XPointer), XPointer);
typedef void ( *XmDSMRegisterInfoProc)(XmDropSiteManagerObject, Widget, XtPointer);
typedef XtPointer ( *XmDSMWidgetToInfoProc)(XmDropSiteManagerObject, Widget);
typedef void ( *XmGeoSegmentFixUpProc)(XmGeoMatrix, int, XmGeoMajorLayout, XmKidGeometry);
struct _PrintGetDocumentData {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;CARD32 maxBufferSize;};
struct _PrintGetOneAttribute {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;CARD32 nameLen;CARD8 type;CARD8 pad1;CARD16 pad2;};
struct _PrintPutDocumentData {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 drawable;CARD32 len_data;CARD16 len_fmt;CARD16 len_options;};
struct _XmAllProtocolsMgrRec {XmProtocolMgrList protocol_mgrs;Cardinal num_protocol_mgrs;Cardinal max_protocol_mgrs;Widget shell;};
struct _XmDropSiteVisualsRec {Pixel background;Pixel foreground;Pixel topShadowColor;Pixmap topShadowPixmap;Pixel bottomShadowColor;Pixmap bottomShadowPixmap;Dimension shadowThickness;Pixel highlightColor;Pixmap highlightPixmap;Dimension highlightThickness;Dimension borderWidth;};
struct _XmGenericClassExtRec {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;};
struct _XmIconGadgetClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;XmIconGadgetClassPart icong_class;};
struct _XmScrollFrameDataRec {XtCallbackProc move_cb;Widget scrollable;Widget *nav_list;Cardinal num_nav_list;Cardinal num_nav_slots;};
struct _xPrintAttributeEvent {BYTE type;BYTE detail;CARD16 sequenceNumber;CARD32 printContext;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _xkbAnyDoodadWireDesc {CARD32 name;CARD8 type;CARD8 priority;INT16 top;INT16 left;INT16 angle;CARD32 pad2;CARD32 pad3;};
struct _xkbGetCompatMapReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD8 groups;CARD8 pad1;CARD16 firstSI;CARD16 nSI;CARD16 nTotalSI;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _xkbGetNamedIndicator {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 ledClass;CARD16 ledID;CARD16 pad1;CARD32 indicator;};
struct _xkbSetDebuggingFlags {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 msgLength;CARD16 pad;CARD32 affectFlags;CARD32 flags;CARD32 affectCtrls;CARD32 ctrls;};
typedef void ( *SmsSetPropertiesProc)(SmsConn, SmPointer, int, SmProp **);
typedef Boolean ( *XmSpatialTestFitProc)(Widget, Widget, Position, Position);
typedef Boolean ( *XmWidgetBaselineProc)(Widget, Dimension **, int *);
typedef void ( *XmWidgetDispatchProc)(Widget, XEvent *, Mask);
typedef XrmMethods ( *XrmInitParseInfoProc)(XLCd, XPointer *);
struct _PrintDestroyContext {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;};
struct _PrintGetPrinterList {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printerNameLen;CARD32 localeLen;};
struct _XkbStateNotifyEvent {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;unsigned int changed;int group;int base_group;int latched_group;int locked_group;unsigned int mods;unsigned int base_mods;unsigned int latched_mods;unsigned int locked_mods;int compat_state;unsigned char grab_mods;unsigned char compat_grab_mods;unsigned char lookup_mods;unsigned char compat_lookup_mods;int ptr_buttons;KeyCode keycode;char event_type;char req_major;char req_minor;};
struct _XmLabelGCacheObjRec {ObjectPart object;XmExtPart ext;XmLabelGCacheObjPart label_cache;};
struct _XmObjectClassExtRec {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;};
struct _XmScrollBarClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmScrollBarClassPart scrollBar_class;};
struct _XmSeparatorClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmSeparatorClassPart separator_class;};
struct _XmSimpleSpinBoxPart {unsigned char arrow_sensitivity;Boolean wrap;short decimal_points;int increment_value;int maximum_value;int minimum_value;int num_values;int position;unsigned char position_type;XmStringTable values;short columns;Boolean editable;unsigned char sb_child_type;Widget text_field;};
struct _XmTextFieldClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmTextFieldClassPart text_class;};
struct _sym_root_entry_type {sym_entry_header_type header;struct _sym_root_entry_type___src_source_record_type *src_record_list;char file_name[255];char full_file_name[255];sym_section_entry_type *sections;sym_module_entry_type *module_hdr;};
struct _xkmIndicatorMapDesc {CARD8 indicator;CARD8 flags;CARD8 which_mods;CARD8 real_mods;CARD16 vmods;CARD8 which_groups;CARD8 groups;CARD32 ctrls;};
struct eeprom_per_slot_info {u_int slot_id;u_int cfg_data_offset;u_int write_count;u_short checksum;u_short number_of_functions;u_short cfg_data_size;u_char slot_info;u_char slot_features;u_char minor_cfg_ext_rev;u_char major_cfg_ext_rev;u_char function_info;u_char flags;u_char spares[24];};
typedef void ( *IcePoProcessMsgProc)(IceConn, IcePointer, int, unsigned int, int, IceReplyWaitInfo *, int *);
typedef int ( *XcmsWhiteAdjustProc)(XcmsCCC, XcmsColor *, XcmsColor *, XcmsColorFormat, XcmsColor *, unsigned int, int *);
typedef Cardinal ( *XmGetSecResDataFunc)(WidgetClass, XmSecondaryResourceData **);
typedef Boolean ( *XmParentProcessProc)(Widget, XmParentProcessData);
struct _ConstraintClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;};
struct _PrintCreateContext {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 contextID;CARD32 printerNameLen;CARD32 localeLen;};
struct _PrintGetAttributes {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;CARD8 type;CARD8 pad1;CARD16 pad2;};
struct _PrintInputSelected {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;};
struct _PrintSetAttributes {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;CARD32 stringLen;CARD8 type;CARD8 rule;CARD16 pad1;};
struct _XicLocalPrivateRec {int value_mask;DefTree *context;DefTree *composed;XicThaiPart thai;XIMResourceList ic_resources;unsigned int ic_num_resources;};
struct _XimLocalPrivateRec {XIC current_ic;DefTree *top;XlcConv ctom_conv;XlcConv ctow_conv;};
struct _XmDesktopClassPart {WidgetClass child_class;XtWidgetProc insert_child;XtWidgetProc delete_child;XtPointer extension;};
struct _XmDragOverBlendRec {XmDragIconObject sourceIcon;Position sourceX;Position sourceY;XmDragIconObject mixedIcon;GC gc;};
struct _XmIconGCacheObjRec {ObjectPart object;XmExtPart ext;XmIconGCacheObjPart icon_cache;};
struct _XmProtocolClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmProtocolClassPart protocol_class;};
struct _XmRCKidGeometryRec {Widget kid;XtWidgetGeometry box;Dimension margin_top;Dimension margin_bottom;Dimension baseline;};
struct _xkbGetIndicatorMap {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 pad;CARD32 which;};
struct _xkbKeyTypeWireDesc {CARD8 mask;CARD8 realMods;CARD16 virtualMods;CARD8 numLevels;CARD8 nMapEntries;BOOL preserve;CARD8 pad;};
struct _xkbOverlayWireDesc {CARD32 name;CARD8 nRows;CARD8 pad1;CARD16 pad2;};
struct _xkbSetIndicatorMap {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 pad1;CARD32 which;};
struct cascade_extend_desc {unsigned char msg_len[2];unsigned char ctrl_tbl_desc[6];union cascade_extend_desc___6B6D73BDC397005463F1A37C7D8B56B0 ctrl_u;unsigned char uv_tbl_desc[6];union cascade_extend_desc___3CE5E511DB73647918372162E9AC1B10 unit_u;union cascade_extend_desc___1F3199D8593E8E8D5214453974E41A85 vol_u;unsigned char end_tbl_desc[6];};
typedef void ( *InputGetValuesProc)(Widget, ArgList, Cardinal);
typedef void ( *InputSetValuesProc)(Widget, Widget, Widget, ArgList, Cardinal *);
typedef int ( *SET_SCAN_BOOKMARKS)(PHOST_ADAPTER, PCI_CFG_TOKEN, DRIVER_SCAN, DRIVER_SCAN, void *);
typedef int ( *XwcTextExtentsProc)(XFontSet,  unsigned int *, int, XRectangle *, XRectangle *);
struct _XkbControlsNotify {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;unsigned int changed_ctrls;unsigned int enabled_ctrls;unsigned int enabled_ctrl_changes;int num_groups;KeyCode keycode;char event_type;char req_major;char req_minor;};
struct _XkbMapNotifyEvent {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;unsigned int changed;unsigned int flags;int first_type;int num_types;KeyCode min_key_code;KeyCode max_key_code;KeyCode first_key_sym;KeyCode first_key_act;KeyCode first_key_behavior;KeyCode first_key_explicit;KeyCode first_modmap_key;KeyCode first_vmodmap_key;int num_key_syms;int num_key_acts;int num_key_behaviors;int num_key_explicit;int num_modmap_keys;int num_vmodmap_keys;unsigned int vmods;};
struct _XlcConvMethodsRec {XlcCloseConverterProc close;XlcConvertProc convert;XlcResetConverterProc reset;};
struct _XmDesktopClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmDesktopClassPart desktop_class;};
struct _xShmLinkInitReply {BYTE type;BYTE status;CARD16 sequenceNumber;CARD32 length;CARD32 fileSequence;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _xkbPerClientFlags {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 pad1;CARD32 change;CARD32 value;CARD32 ctrlsToChange;CARD32 autoCtrls;CARD32 autoCtrlValues;};
struct r_rpcb_rmtcallargs {u_long prog;u_long vers;u_long proc;struct r_rpcb_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D args;xdrproc_t xdr_args;};
typedef int ( *XimTransWriteProc)(Xim, INT16, XPointer);
typedef int ( *XpmAllocColorFunc)(Display *, Colormap, char *, XColor *, void *);
typedef int ( *XpmFreeColorsFunc)(Display *, Colormap, Pixel *, int, void *);
typedef Boolean ( *XtAcceptFocusProc)(Widget, Time *);
typedef XtGeometryResult ( *XtGeometryHandler)(Widget, XtWidgetGeometry *, XtWidgetGeometry *);
struct _PrintSelectInput {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;CARD32 eventMask;};
struct _XkbActionMessage {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;KeyCode keycode;int press;int key_event_follows;int group;unsigned int mods;char message[7];};
struct _XmArrowButtonRec {CorePart core;XmPrimitivePart primitive;XmArrowButtonPart arrowbutton;};
struct _XmProtocolMgrRec {Atom property;XmProtocolList protocols;Cardinal num_protocols;Cardinal max_protocols;};
struct _XmScreenClassRec {CoreClassPart core_class;XmDesktopClassPart desktop_class;XmScreenClassPart screen_class;};
struct _xkbGetDeviceInfo {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 wanted;BOOL allBtns;CARD8 firstBtn;CARD8 nBtns;CARD8 pad;CARD16 ledClass;CARD16 ledID;};
typedef Boolean ( *GetSelectionProc)(XmTextSource, XmTextPosition *, XmTextPosition *);
typedef void ( *OutputCreateProc)(Widget, ArgList, Cardinal);
typedef void ( *SetSelectionProc)(XmTextSource, XmTextPosition, XmTextPosition, Time);
typedef void ( *SmcPropReplyProc)(SmcConn, SmPointer, int, SmProp **);
typedef int ( *SmsNewClientProc)(SmsConn, SmPointer, unsigned int *, SmsCallbacks *, char **);
typedef int ( *XimProtoIntrProc)(Xim, INT16, XPointer, XPointer);
typedef int ( *XmAllocColorProc)(Display *display, Colormap colormap, XColor *screen_in_out);
typedef void ( *XmRealizeOutProc)(Widget, Mask *, XSetWindowAttributes *);
typedef void ( *XtConvertArgProc)(Widget, Cardinal *, XrmValue *);
struct _PrintSetContext {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 printContext;};
struct _XcmsFunctionSet {XcmsColorSpace **DDColorSpaces;XcmsScreenInitProc screenInitProc;XcmsScreenFreeProc screenFreeProc;};
struct _XimProtoIntrRec {XimProtoIntrProc func;CARD16 major_code;CARD16 minor_code;XPointer call_data;struct _XimProtoIntrRec *next;};
struct _XkbClientMapRec {unsigned char size_types;unsigned char num_types;XkbKeyTypePtr types;unsigned short size_syms;unsigned short num_syms;KeySym *syms;XkbSymMapPtr key_sym_map;unsigned char *modmap;};
struct _XkbCompatMapRec {XkbSymInterpretPtr sym_interpret;XkbModsRec groups[4];unsigned short num_si;unsigned short size_si;};
struct _XmDragCursorRec {struct _XmDragCursorRec *next;Cursor cursor;XmDragIconObject stateIcon;XmDragIconObject opIcon;XmDragIconObject sourceIcon;Boolean dirty;};
struct _XmLabelClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmLabelClassPart label_class;};
struct _xkbGetCompatMap {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD8 groups;BOOL getAllSI;CARD16 firstSI;CARD16 nSI;};
struct _xkbGetKbdByName {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 need;CARD16 want;BOOL load;CARD8 pad;};
struct _xkbSetCompatMap {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD8 pad1;BOOL recomputeActions;BOOL truncateSI;CARD8 groups;CARD16 firstSI;CARD16 nSI;CARD16 pad2;};
struct eeprom_slot_data {u_char slot_info;u_char major_cfg_rev;u_char minor_cfg_rev;u_char flags;u_short checksum;u_char number_of_functions;u_char function_info;u_int slot_id;};
union extend_desc_type {unsigned char data_bytes[128];struct eagle_extend_desc eagle_desc;struct cascade_extend_desc cascade_desc;struct excal_extend_desc excal_desc;};
typedef void ( *InputCreateProc)(Widget, ArgList, Cardinal);
typedef void ( *XmDragStartProc)(XmDragContext, Widget, XEvent *);
typedef XmGeoMatrix ( *XmGeoCreateProc)(Widget, Widget, XtWidgetGeometry *);
struct _PrintStartPage {CARD8 reqType;CARD8 printReqType;CARD16 length;CARD32 window;};
struct _XcmsColorSpace {char *prefix;XcmsColorFormat id;XcmsParseStringProc parseString;XcmsFuncListPtr to_CIEXYZ;XcmsFuncListPtr from_CIEXYZ;int inverse_flag;};
struct _XimDefIMValues {XIMValuesList *im_values_list;XIMValuesList *ic_values_list;XIMStyles *styles;XIMCallback destroy_callback;char *res_name;char *res_class;int visible_position;};
struct _XmListClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmListClassPart list_class;};
struct _XmMenuFocusRec {Widget oldWidget;Window oldFocus;int oldRevert;Time oldTime;};
struct _XmModalDataRec {Widget wid;XmVendorShellExtObject ve;XmVendorShellExtObject grabber;Boolean exclusive;Boolean springLoaded;};
struct _XmPartResource {String resource_name;String resource_class;String resource_type;Cardinal resource_size;Cardinal resource_offset;String default_type;XtPointer default_addr;};
struct _XmSashClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmSashClassPart sash_class;};
struct _XmScrollBarRec {CorePart core;XmPrimitivePart primitive;XmScrollBarPart scrollBar;};
struct _XmSeparatorRec {CorePart core;XmPrimitivePart primitive;XmSeparatorPart separator;};
struct _XmTextClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmTextClassPart text_class;};
struct _XmTextFieldRec {CorePart core;XmPrimitivePart primitive;XmTextFieldPart text;};
struct _xkbGetGeometry {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 pad;CARD32 name;};
struct _xkbGetMapReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD16 pad1;CARD8 minKeyCode;CARD8 maxKeyCode;CARD16 present;CARD8 firstType;CARD8 nTypes;CARD8 totalTypes;CARD8 firstKeySym;CARD16 totalSyms;CARD8 nKeySyms;CARD8 firstKeyAct;CARD16 totalActs;CARD8 nKeyActs;CARD8 firstKeyBehavior;CARD8 nKeyBehaviors;CARD8 totalKeyBehaviors;CARD8 firstKeyExplicit;CARD8 nKeyExplicit;CARD8 totalKeyExplicit;CARD8 firstModMapKey;CARD8 nModMapKeys;CARD8 totalModMapKeys;CARD8 firstVModMapKey;CARD8 nVModMapKeys;CARD8 totalVModMapKeys;CARD8 pad2;CARD16 virtualMods;};
struct _xkbKeyWireDesc {CARD8 name[4];INT16 gap;CARD8 shapeNdx;CARD8 colorNdx;};
struct _xkbSetGeometry {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD8 nShapes;CARD8 nSections;CARD32 name;CARD16 widthMM;CARD16 heightMM;CARD16 nProperties;CARD16 nColors;CARD16 nDoodads;CARD16 nKeyAliases;CARD8 baseColorNdx;CARD8 labelColorNdx;CARD16 pad;};
struct bt_info__bt_dev {unsigned int bt_flags;dev_t bt_dev;unsigned char bt_bmajor;unsigned char bt_cmajor;hdw_path_type bt_hdw;module_path_type bt_mod;unsigned int reserved;};
struct eeprom_gen_info {u_int write_count;u_char flags;u_char major_cfg_rev;u_char minor_cfg_rev;u_char number_of_slots;u_short checksum;u_char spares[10];};
struct elem_status_buf {struct elem_status_data data_hdr;struct elem_status_page page_hdr;struct element_status stat;};
typedef String ( *XtLanguageProc)(Display *, String, XtPointer);
struct _CompositePart {WidgetList children;Cardinal num_children;Cardinal num_slots;XtOrderProc insert_position;};
struct _ConstraintRec {CorePart core;CompositePart composite;ConstraintPart constraint;};
struct _ShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;};
struct _XOCGenericRec {XOCMethods methods;XOCCoreRec core;XOCGenericPart gen;};
struct _XOMGenericRec {XOMMethods methods;XOMCoreRec core;XOMGenericPart gen;};
struct _XkbDeviceInfo {char *name;Atom type;unsigned short device_spec;int has_own_state;unsigned short supported;unsigned short unsupported;unsigned short num_btns;XkbAction *btn_acts;unsigned short sz_leds;unsigned short num_leds;unsigned short dflt_kbd_fb;unsigned short dflt_led_fb;XkbDeviceLedInfoPtr leds;};
struct _XmDragIconRec {ObjectPart object;RectObjPart rectangle;XmDragIconPart drag;};
struct _XmProtocolRec {ObjectPart object;XmExtPart ext;XmProtocolPart protocol;};
struct acl_entry_patt {uid_t uid;gid_t gid;aclmode_t onmode;aclmode_t offmode;};
struct cio_poll_chain {struct cio_poll_chain *link;cio_pquad_ptr pquad_chain;llio_status_type llio_status;bit8 da_number;};
struct cio_vquad_type {cio_cmd_type command;int count;int residue;struct cio_vquad_type *link;data_ptr_type buffer;addr_class_type addr_class;};
struct clnt_netcfgu_t {uint32_t knc_semantics;Ki_nfsvarlen_t knc_protofmly;Ki_nfsvarlen_t knc_proto;dev_t knc_rdev;};
struct iodc_rtn_block {struct mod_type type;struct swrev sw_rev;u_int uid;u_int undefined;};
struct kd_thread_exit {kd_t kd_struct;tid_t ktid;uint32_t pad;};
struct strrecvfd_attr {int fd;uid_t uid;gid_t gid;struct strbuf attrbuf;};
typedef void ( *GetValuesProc)(Widget, ArgList, Cardinal);
typedef IcePaAuthStatus ( *IcePaAuthProc)(IceConn, IcePointer *, int, int, IcePointer, int *, IcePointer *, char **);
typedef IcePoAuthStatus ( *IcePoAuthProc)(IceConn, IcePointer *, int, int, int, IcePointer, int *, IcePointer *, char **);
typedef Boolean ( *MoveLinesProc)(XmTextWidget, LineNum, LineNum, LineNum);
typedef XOC ( *XCreateOCProc)(XOM, XlcArgList, int);
typedef Boolean ( *XmPointInProc)(Widget w, Position x, Position y);
typedef void ( *XtRealizeProc)(Widget, XtValueMask *, XSetWindowAttributes *);
struct _PrintEndPage {CARD8 reqType;CARD8 printReqType;CARD16 length;BOOL cancel;CARD8 pad1;CARD16 pad2;};
struct _XmDesktopRec {ObjectPart object;XmExtPart ext;XmDesktopPart desktop;};
struct _pci_bus_info {PHOST_ADAPTER host_adapter;PCI_CFG_TOKEN cfg_tok;PPCI_BUS_DEP_FUNC_TBL func_tbl;};
struct hdl_protrange {pgcnt_t idx;prot_t protid;u_short flags;};
struct nlm4_shareres {netobj cookie;nlm4_stats stat;int32 sequence;};
struct p_rmtcallargs {u_long prog;u_long vers;u_long proc;struct p_rmtcallargs___02068A94D23DDC29EF1B9402C6EFE20D args;xdrproc_t xdr_args;};
struct XDR__xdr_ops {bool_t ( *x_getlong)(struct XDR *, int *);bool_t ( *x_putlong)(struct XDR *, int *);bool_t ( *x_getbytes)(struct XDR *, caddr_t, int);bool_t ( *x_putbytes)(struct XDR *, caddr_t, int);u_int ( *x_getpostn)(struct XDR *);bool_t ( *x_setpostn)(struct XDR *, u_int);int *( *x_inline)(struct XDR *, int);void ( *x_destroy)(struct XDR *);bool_t ( *x_control)(struct XDR *, int, void *);};
typedef XmImportOperator ( *XmImportProc)(Widget, int, XtArgVal *);
typedef void ( *XtExposeProc)(Widget, XEvent *, Region);
struct _FontDataRec {char *name;XlcSide side;int scopes_num;FontScope scopes;char *xlfd_name;XFontStruct *font;};
struct _PrintEndDoc {CARD8 reqType;CARD8 printReqType;CARD16 length;BOOL cancel;CARD8 pad1;CARD16 pad2;};
struct _PrintEndJob {CARD8 reqType;CARD8 printReqType;CARD16 length;BOOL cancel;CARD8 pad1;CARD16 pad2;};
struct _RectObjPart {Position x;Position y;Dimension width;Dimension height;Dimension border_width;Boolean managed;Boolean sensitive;Boolean ancestor_sensitive;};
struct _XDeviceInfo {XID id;Atom type;char *name;int num_classes;int use;XAnyClassPtr inputclassinfo;};
struct _XmColorData {Screen *screen;Colormap color_map;unsigned char allocated;XColor background;XColor foreground;XColor top_shadow;XColor bottom_shadow;XColor select;};
struct _XmGadgetRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;};
struct _XmScreenRec {CorePart core;XmDesktopPart desktop;XmScreenPart screen;};
struct __save_state {int ss_flags;__ss_narrow_t ss_narrow;int ss_pad;union __save_state___ADF62F0D2F86BC133A18056C2B731A2B ss_fpblock;char ss_xor[128];union __save_state___6400AEC7CA6EA3805CB5F513CAC8376A ss_wide;};
struct _xShmLinkReq {CARD8 reqType;CARD8 subReqType;CARD16 length;CARD32 clientIP;CARD32 clientUID;};
struct _xkbGetNames {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 pad;CARD32 which;};
struct _xkbSetNames {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 virtualMods;CARD32 which;CARD8 firstType;CARD8 nTypes;CARD8 firstKTLevel;CARD8 nKTLevels;CARD32 indicators;CARD8 groupNames;CARD8 nRadioGroups;CARD8 firstKey;CARD8 nKeys;CARD8 nKeyAliases;CARD8 pad1;CARD16 totalKTLevelNames;};
struct authdes_cred {enum authdes_namekind adc_namekind;struct authdes_fullname adc_fullname;u_long adc_nickname;};
struct cryptkeyarg2 {netnamestr remotename;netobj remotekey;des_block deskey;};
struct device_table {struct device_table *next;dev_t dt_dev;u_int dt_mode;ushort dt_flags;ushort dt_opencount;ushort dt_usecount;ushort dt_in_open;};
struct fc_frame_hdr {u_char r_ctl;u_char d_id[3];u_char vc_id;u_char s_id[3];u_char type;u_char f_ctl[3];u_char seq_id;u_char df_ctl;u_short seq_cnt;u_short ox_id;u_short rx_id;u_int param;};
struct nlm_cancargs {netobj cookie;bool_t block;bool_t exclusive;struct nlm_lock lock;};
struct nlm_lockargs {netobj cookie;bool_t block;bool_t exclusive;struct nlm_lock lock;bool_t reclaim;int state;};
struct nlm_testargs {netobj cookie;bool_t exclusive;struct nlm_lock lock;};
struct p_rmtcallres {u_long port;struct p_rmtcallres___5A0C6745AA5B8D6FB55375E8521B5DC9 res;xdrproc_t xdr_res;};
struct _LC_ctype_t {_LC_core_ctype_t core;unsigned int min_wc;unsigned int max_wc;unsigned int max_upper;unsigned int max_lower; unsigned int *upper; unsigned int *lower; unsigned int *mask; unsigned int *qmask; unsigned char *qidx;unsigned int qidx_hbound;unsigned char nclasses; _LC_classnm_t *classnms;char *direction;char *context;unsigned char *alt_punct;unsigned char *_kanji1;unsigned char *_kanji2;unsigned char *__in_csize;unsigned char *__out_csize;unsigned char *__e_cset;unsigned char *__ein_csize;unsigned char *__eout_csize;int code_scheme;};
struct _VRotateRec {char *charset_name;XlcSide side;int num_cr;CodeRange code_range;char *xlfd_name;XFontStruct *font;};
struct _XmFormPart {Dimension horizontal_spacing;Dimension vertical_spacing;int fraction_base;Boolean rubber_positioning;Widget first_child;Boolean initial_width;Boolean initial_height;Boolean processing_constraints;};
struct _XmLabelRec {CorePart core;XmPrimitivePart primitive;XmLabelPart label;};
struct _XtResource {String resource_name;String resource_class;String resource_type;Cardinal resource_size;Cardinal resource_offset;String default_type;XtPointer default_addr;};
struct __res_state {int retrans;int retry;unsigned int options;int nscount;struct sockaddr_in nsaddr_list[3];u_short id;char defdname[256];char *dnsrch[7];unsigned int pfcode;unsigned char nsort;char unused[3];struct __res_state___B3BDC6EDFE034C45356CAA64B4B51D1E sort_list[10];};
struct buflet_info {space_t space;caddr_t buflet_beg;caddr_t buffer_beg;caddr_t iova_beg;u_int cnt_beg;caddr_t buflet_end;caddr_t buffer_end;caddr_t iova_end;u_int cnt_end;};
struct dma_A_pquad {uint32_t io_dma_link;uint32_t io_dma_command;uint32_t io_dma_address;uint32_t io_dma_count;struct dma_A_pquad *host_dma_link;struct dma_A_pquad *bq_link;space_t data_sid;anyptr data_vba;};
struct ki_runtimes {kt_t kp_accumtm;kclockcnt_t kp_clockcnt;uint32_t kp_data;};
struct npd_request {char *username;char *domain;char *key_type;struct npd_request___C3CD0BD37319ED44942FA197CF7B5408 user_pub_key;struct npd_request___04A93ECC78428ACBA0FDC65FE7C8FE57 npd_authpass;u_long ident;};
struct opaque_auth {enum_t oa_flavor;caddr_t oa_base;u_int oa_length;};
struct telnet_data {queue_t *tel_u_rdq_master;queue_t *tel_u_rdq_slave;queue_t *tel_l_rdq;lock_t *tel_lock;int tel_con_state;int tel_con_flags;int tel_lock_flag;queue_t *tel_dis_q[6];mblk_t *tel_master_hangup_msg;mblk_t *tel_slave_hangup_msg;int tel_bid;mblk_t *tel_blk;mblk_t *tel_fblk;lock_t *tel_buflock;int tel_counter;int tel_timerset;int tel_bufcount;int tel_timeout;int tel_buffer_flag;int tel_Firsttime;};
struct volume_desc {unsigned int maxcadd;unsigned8 maxhadd;unsigned16 maxsadd;unsigned16 maxsvadd_utb;unsigned32 maxsvadd_lfb;unsigned8 currentif;};
typedef int ( *UNMAP_PORT)(PHOST_ADAPTER, uint32_t, unsigned int, PCI_PORT_HNDL);
typedef void ( *XPSaveProc)(Display *display, XPContext context, unsigned char *data, unsigned int data_len, XPointer client_data);
typedef void ( *XtArgsProc)(Widget, ArgList, Cardinal *);
typedef void ( *XtInitProc)(Widget, Widget, ArgList, Cardinal *);
struct _OMDataRec {int charset_count;XlcCharSet *charset_list;int font_data_count;FontData font_data;int substitute_num;FontData substitute;int vmap_num;FontData vmap;int vrotate_type;int vrotate_num;CodeRange vrotate;};
struct _XmListRec {CorePart core;XmPrimitivePart primitive;XmListPart list;};
struct _XmSashRec {CorePart core;XmPrimitivePart primitive;XmSashPart sash;};
struct _XmTextRec {CorePart core;XmPrimitivePart primitive;XmTextPart text;};
struct exportnode {dirpath ex_dir;groups ex_groups;exports ex_next;};
struct hdlpregion {u_short hdlflags;u_short hdlar;prot_t hdlprot;hdl_subpreg_t *p_spreg;};
struct log_result {nis_error lr_status;netobj lr_cookie;struct log_result___946B3E427CBAEF2C8E64E80E43621ACD lr_entries;};
struct nlm4_share {char *caller_name;netobj fh;netobj oh;fsh4_mode mode;fsh4_access access;};
struct nlm_holder {bool_t exclusive;int svid;netobj oh;u_int l_offset;u_int l_len;};
struct npd_update {u_long ident;npd_newpass xnewpass;passwd_info pass_info;};
typedef int ( *stropen_V4)(queue_t *, dev_t *, int, int, cred_t *);
typedef int ( *BUS_TRANS)(PHOST_ADAPTER, PCI_CFG_TOKEN, BUS_TRANS_DESC *);
typedef void ( *XtKeyProc)(Display *, unsigned int, Modifiers, Modifiers *, KeySym *);
struct _XkbShape {Atom name;unsigned short num_outlines;unsigned short sz_outlines;XkbOutlinePtr outlines;XkbOutlinePtr approx;XkbOutlinePtr primary;XkbBoundsRec bounds;};
struct audit_hdr {uint32_t ah_time;pid_t ah_pid;u_short ah_error;u_short ah_event;u_short ah_len;};
struct db_result {db_status status;db_next_desc nextinfo;struct db_result___9149203512B34436CC9F59DE53ABE05A objects;int ticks;};
struct dma_parms {int channel;int dma_options;int flags;int key;int num_entries;buflet_info_type *buflet_key;struct iovec *chain_ptr;int chain_count;int chain_index;int ( *drv_routine)(caddr_t drv_arg);caddr_t drv_arg;int transfer_size;caddr_t addr;space_t spaddr;int count;};
struct dump_args {nis_name da_dir;u_long da_time;struct dump_args___00C533AE8545A66FA38641508A3DC473 da_cbhost;};
struct mountbody {name ml_hostname;dirpath ml_directory;mountlist ml_next;};
struct nlm4_lock {char *caller_name;netobj fh;netobj oh;int32 svid;uint64 l_offset;uint64 l_len;};
struct nlm_share {char *caller_name;netobj fh;netobj oh;fsh_mode mode;fsh_access access;};
struct proc_info {int sig;int trap_type;save_state_t hw_regs;lwpid_t lwpid;uint64_t user_tid;};
struct rpcb_stat {rpcbs_proc info;int setinfo;int unsetinfo;rpcbs_addrlist_ptr addrinfo;rpcbs_rmtcalllist_ptr rmtinfo;};
struct siglocalx {struct siglocal_misc sl_misc;ucontext_t sl_uc;siginfo_t sl_si;};
struct socklocks {sock_spinlock_data_t *sock_spinlock;sock_betalock_data_t sock_betalock;int refcnt;struct socket *sp_wake;ulong_t context;};
typedef int ( *GET_PORT)(PHOST_ADAPTER, uint32_t, unsigned int, PCI_PORT_HNDL *);
typedef void ( *RD_CFG_B)(PHOST_ADAPTER, PCI_CFG_TOKEN, int, uint8_t *);
typedef void ( *RD_CFG_D)(PHOST_ADAPTER, PCI_CFG_TOKEN, int, uint32_t *);
typedef void ( *RD_CFG_W)(PHOST_ADAPTER, PCI_CFG_TOKEN, int, uint16_t *);
typedef XmTextPosition ( *ReadProc)(XmTextSource, XmTextPosition, XmTextPosition, XmTextBlock);
typedef void ( *WR_CFG_B)(PHOST_ADAPTER, PCI_CFG_TOKEN, int, uint8_t);
typedef void ( *WR_CFG_D)(PHOST_ADAPTER, PCI_CFG_TOKEN, int, uint32_t);
typedef void ( *WR_CFG_W)(PHOST_ADAPTER, PCI_CFG_TOKEN, int, uint16_t);
struct io_parms {int flags;int key;int num_entries;int ( *drv_routine)(caddr_t drv_arg);caddr_t drv_arg;caddr_t host_addr;space_t spaddr;u_int size;};
struct irinfo_s {struct irinfo_s *ir_next;mblk_t *ir_ll_hdr_mp;queue_t *ir_rfq;queue_t *ir_stq;char *ir_ill;uint ir_ll_hdr_length;uint ir_type;char *ir_reserved0;char *ir_reserved1;char *ir_reserved2;char *ir_reserved3;};
struct kd_sched {ks_t kd_syscall;kpkst_t ki_pk_state;uint32_t p_pl_flags;uint32_t pad;};
struct link_obj {zotypes li_rtype;struct link_obj___6E2208C80A69EAD3D69988E63D048B29 li_attrs;nis_name li_name;};
struct prc_host {char *prc_hostid;u_long prc_ipaddr[5];int prc_prev_status;int prc_conn_status;time_t prc_conn_time;int prc_errno;char *prc_errmsg;FILE *prc_fp;FILE *prc_fp2;int prc_conn_close;int prc_caller_status;};
typedef void ( *RD_IO_B)(PHOST_ADAPTER, PCI_PORT_HNDL, unsigned int, uint8_t *);
typedef void ( *RD_IO_D)(PHOST_ADAPTER, PCI_PORT_HNDL, unsigned int, uint32_t *);
typedef void ( *RD_IO_W)(PHOST_ADAPTER, PCI_PORT_HNDL, unsigned int, uint16_t *);
typedef void ( *WR_IO_B)(PHOST_ADAPTER, PCI_PORT_HNDL, unsigned int, uint8_t);
typedef void ( *WR_IO_D)(PHOST_ADAPTER, PCI_PORT_HNDL, unsigned int, uint32_t);
typedef void ( *WR_IO_W)(PHOST_ADAPTER, PCI_PORT_HNDL, unsigned int, uint16_t);
struct __reg64 {int64_t ss_reserved;int64_t ss_gr1;int64_t ss_rp;int64_t ss_gr3;int64_t ss_gr4;int64_t ss_gr5;int64_t ss_gr6;int64_t ss_gr7;int64_t ss_gr8;int64_t ss_gr9;int64_t ss_gr10;int64_t ss_gr11;int64_t ss_gr12;int64_t ss_gr13;int64_t ss_gr14;int64_t ss_gr15;int64_t ss_gr16;int64_t ss_gr17;int64_t ss_gr18;int64_t ss_gr19;int64_t ss_gr20;int64_t ss_gr21;int64_t ss_gr22;int64_t ss_arg3;int64_t ss_arg2;int64_t ss_arg1;int64_t ss_arg0;uint64_t ss_dp;uint64_t ss_ret0;uint64_t ss_ret1;uint64_t ss_sp;uint64_t ss_gr31;uint64_t ss_cr11;uint64_t ss_pcoq_head;uint64_t ss_pcsq_head;uint64_t ss_pcoq_tail;uint64_t ss_pcsq_tail;uint64_t ss_cr15;uint64_t ss_cr19;uint64_t ss_cr20;uint64_t ss_cr21;uint64_t ss_cr22;uint64_t ss_cpustate;uint64_t ss_sr4;uint64_t ss_sr0;uint64_t ss_sr1;uint64_t ss_sr2;uint64_t ss_sr3;uint64_t ss_sr5;uint64_t ss_sr6;uint64_t ss_sr7;uint64_t ss_cr0;uint64_t ss_cr8;uint64_t ss_cr9;uint64_t ss_cr10;uint64_t ss_cr12;uint64_t ss_cr13;uint64_t ss_cr24;uint64_t ss_cr25;uint64_t ss_cr26;uint64_t ss_cr27;uint64_t ss_reserved2[2];uint32_t ss_oldcksum;uint32_t ss_newcksum;};
union _kcaddr {caddr_t kca_val;uint64_t kca_val64;struct _kcaddr__kcaddr_split split;};
union _kgaddr {gaddr_t kga_val;uint64_t kga_val64;struct _kgaddr__kgaddr_split split;};
struct igmpmsg {u_long unused1;u_long unused2;u_char im_msgtype;u_char im_mbz;u_char im_vif;u_char unused3;struct in_addr im_src;struct in_addr im_dst;};
struct mem_map {caddr_t ( *map_to_bus)(struct isc_table_type *isc, struct io_parms *io_parms);int ( *unmap_from_bus)(struct isc_table_type *isc, struct io_parms *io_parms);caddr_t ( *map_to_host)(struct isc_table_type *isc, caddr_t phys_addr, size_t size);int ( *unmap_from_host)(struct isc_table_type *isc, caddr_t virt_addr, size_t size);};
struct msghdr2 {caddr_t msg_name;socklen_t msg_namelen;struct iovec *msg_iov;u_int msg_iovlen;caddr_t msg_control;socklen_t msg_controllen;int msg_flags;};
struct svc_req {u_long rq_prog;u_long rq_vers;u_long rq_proc;struct opaque_auth rq_cred;caddr_t rq_clntcred;struct svc_req____svcxprt *rq_xprt;};
struct t_field {char fd_devname[14];uid_t fd_uid;time_t fd_slogin;uid_t fd_uuid;time_t fd_ulogin;uid_t fd_loutuid;time_t fd_louttime;int16_t fd_nlogins;int16_t fd_max_tries;time_t fd_logdelay;char fd_lock;int16_t fd_login_timeout;};
struct _Share {CARD8 reqType;CARD8 action;CARD16 length;CARD32 server_id;CARD32 window;CARD32 parent;};
struct __auth {struct opaque_auth ah_cred;struct opaque_auth ah_verf;union des_block ah_key;struct __auth__auth_ops *ah_ops;caddr_t ah_private;};
struct arpreq {int32_t ifindex;int32_t arp_flags;int32_t arp_hw_addr_len;struct sockaddr arp_pa;struct sockaddr arp_pa_mask;struct sockaddr arp_ha;u_char arp_pad[242];};
struct hdlvas {space_t hdl_textsid;prot_t hdl_textpid;space_t hdl_datasid;prot_t hdl_datapid;ushort v_hdlflags;};
struct iocblk {int ioc_cmd;cred_t *ioc_cr;uint ioc_id;uint ioc_flag;ioc_pad ioc_cnt;int ioc_error;int ioc_rval;int ioc_filler[4];};
struct mfcctl {struct in_addr mfcc_origin;struct in_addr mfcc_mcastgrp;vifi_t mfcc_parent;u_char mfcc_ttls[32];};
struct passwd {char *pw_name;char *pw_passwd;uid_t pw_uid;gid_t pw_gid;char *pw_age;char *pw_comment;char *pw_gecos;char *pw_dir;char *pw_shell;int32_t pw_audid;int pw_audflg;};
struct tcphdr {u_short th_sport;u_short th_dport;tcp_seq th_seq;tcp_seq th_ack;unsigned char th_x2;u_char th_flags;u_short th_win;u_short th_sum;u_short th_urp;};
struct _XLCd {XLCdMethods methods;XLCdCore core;XPointer opaque;};
struct aiocb {off_t aio_offset;int aio_fildes;void *aio_buf;size_t aio_nbytes;int aio_reqprio;struct sigevent aio_sigevent;int aio_lio_opcode;int aio_return;int aio_errno;int reserved[8];};
struct cdfid {u_short cdfid_len;cdno_t cdfid_cdno;int32_t cdfid_gen;};
struct rtreq {u_int rtr_destaddr;u_int rtr_gwayaddr;u_short rtr_flags;u_short rtr_refcnt;uint32_t rtr_use;int rtr_proto;uint32_t rtr_upd;int rtr_pmtu_timer;u_short rtr_pmtu;u_short rtr_ifmtu;char rtr_ifname[16];u_int rtr_subnetmask;};
struct _Xic {XICMethods methods;XICCoreRec core;XICPrivateRec private;};
struct _Xim {XIMMethods methods;XIMCoreRec core;XIMPrivateRec private;};
union _kpc {ulong_t kpc_val;uint64_t kpc_val64;struct _kpc__kpc_t_split split;};
struct igmp {u_char igmp_type;u_char igmp_code;u_short igmp_cksum;struct in_addr igmp_group;};
struct sema {lock_t *sa_lock;int sa_count;struct sema__kthread *sa_owner;struct sema__kthread *sa_wait_list;struct sema *sa_prev;struct sema *sa_next;u_int sa_turn;u_int sa_hits;ulong_t sa_it;ulong_t sa_busy_cycles;ulong_t sa_busy_megacycles;u_int sa_missers[16];int sa_order;int sa_priority;};
struct ufid {u_short ufid_len;uint32_t ufid_ino;int32_t ufid_gen;};
struct dir {uint16_t setnum;uint16_t msgnum;int32_t addr;int16_t length;int16_t reserved;};
struct rpb {char *sp;int rp_flag;union rpb__pim_info pim;uint32_t rp_itimer_hi;uint32_t rp_itimer_low;ulong_t rp_time;ulong_t rp_time2;ulong_t rp_proc_hpa;uint32_t rp_crash_type;int rp_pim_return;uint32_t rp_global_psw;uint32_t rp_nothread;int end_align;};
struct cg {int32_t cg_unused[2];int32_t cg_time;int32_t cg_cgx;short cg_ncyl;short cg_niblk;int32_t cg_ndblk;struct csum cg_cs;int32_t cg_rotor;int32_t cg_frotor;int32_t cg_irotor;int32_t cg_frsum[8];int32_t cg_btot[32];short cg_b[32][8];char cg_iused[256];int32_t cg_magic;u_char cg_free[1];};
struct ip {unsigned char ip_hl;u_char ip_tos;u_short ip_len;u_short ip_id;u_short ip_off;u_char ip_ttl;u_char ip_p;u_short ip_sum;struct in_addr ip_src;struct in_addr ip_dst;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___B652DCB1C62512FA77E4252B8A422175 {CARD32 pad00;CARD32 time;CARD32 root;CARD32 event;CARD32 child;INT16 rootX;INT16 rootY;INT16 eventX;INT16 eventY;KeyButMask state;BYTE mode;BYTE flags;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___C927E5D571B5CC43049437141E992D5C {CARD32 pad00;CARD32 event;CARD32 window;CARD32 parent;INT16 x;INT16 y;BOOL override;BYTE pad1;BYTE pad2;BYTE pad3;};
union _03CB082776F9E7204BA8107224DE5806___2D9CBF48A86756B1ADA829A8808AD6C9 {creation_info_type creation_info;do_bind_req_type do_bind_req;do_bind_reply_type do_bind_reply;int_direct_type int_direct;};
union _39686138479B682CDBA24DAE5E6097FC___B9CAC9CAC2B72C332B1EA1EA6B7D3F24 {selftest_t selftest_struct;idinfo_t id_struct;read_reg_t read_reg_struct;read_reg_t write_reg_struct;hpib_input_t hpib_input_struct;hpib_input_t hpib_output_struct;};
union _A3DAFC5B3B146A9587C3AC2DA81B7610___00C43480F04328215F4E5F36075FEB9C {bit8_buff_type bit8_buff;char_buff_type char_buff;int_buff_type int_buff;si_buff_type si_buff;};
union dld_hook_param___5E48CF7DD17373C69C135A325D333391 {struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___49AAFE459BE1D762B9EE49F5713033E8 load_event_desc;struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___27B715C20D2F6054C21148B7BC75D683 unload_event_desc;struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___A8892D7FDBBE71F5649C934073942EE6 bor_event_desc;struct dld_hook_param___5E48CF7DD17373C69C135A325D333391___6811851F0FF4B086C89568DCBC52F637 opd_event_desc;};
union rpc_err___CA5666742FA4B309C5F6D2463611D7B4 {struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___CDFB08817BACAD3B52BC51E53A98F9E8 RE_err;enum auth_stat RE_why;struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___C081DE2363A7D6E022ACDA68492DBB3F RE_vers;struct rpc_err___CA5666742FA4B309C5F6D2463611D7B4___9A6B389160A794C8B35BE21A310C2350 RE_lb;};
union ____00C43480F04328215F4E5F36075FEB9C {bit8_buff_type bit8_buff;char_buff_type char_buff;int_buff_type int_buff;si_buff_type si_buff;};
struct _XIMStringConversionCallbackStruct {XIMStringConversionPosition position;XIMCaretDirection direction;XIMStringConversionOperation operation;unsigned short factor;XIMStringConversionText *text;};
struct _03198E5D4140E47D6CC7FA31B1147AB8 {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window grabWindow;XID deviceid;CARD16 modifiers;CARD8 button;CARD8 pad1;};
struct _0340F183E3D57BA98D278D6E8F4BBAEC {CARD8 reqType;BYTE pad;CARD16 length;CARD32 gc;CARD32 drawable;CARD32 mask;};
struct _04253E8C02CEAE855A3D040489F646EA {int type;unsigned int serial;int send_event;Display *display;Window window;XID deviceid;Time time;int request;int first_keycode;int count;};
struct _0702AFAE85E523028461380896C86760 {BYTE type;CARD8 numKeyPerModifier;CARD16 sequenceNumber;CARD32 length;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _0816025FBD9D05C7C86BC1E774A2CFFD {CARD8 event;CARD8 pad1;CARD16 sequenceNum;CARD32 time;CARD32 instanceNameSpace;CARD32 instanceFloID;xieTypPhototag src;CARD16 type;CARD32 pad2;CARD32 pad3;CARD32 pad4;};
struct _08D1E73019D0DDEC0EBB545A043C5282 {CARD8 error;CARD8 code;CARD16 sequenceNum;CARD32 floID;CARD16 minorOpcode;CARD8 majorOpcode;CARD8 floErrorCode;CARD32 nameSpace;xieTypPhototag phototag;CARD16 type;CARD16 techniqueNumber;CARD16 lenTechParams;CARD8 techniqueGroup;CARD8 pad[7];};
struct _091A8121C3C792D8858188DBB434C01C {CARD8 reqType;BYTE pad;CARD16 length;CARD32 cmap;CARD32 planeMask;};
struct _0938F46EF6BF1A288D23C461D10040B7 {BYTE type;BOOL status;CARD16 sequenceNumber;CARD32 length;CARD16 prevRes;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
union _0C96D94650C2A29052F166299D3A4777 {int type;_IceConnectionReply connection_reply;_IceConnectionError connection_error;_IceProtocolReply protocol_reply;_IceProtocolError protocol_error;};
struct _0D0114D795552F54A79F202DB3226B55 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 gc;CARD32 mask;};
struct _1296C23E7EDA709A08D87BF116515624 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 gc;CARD16 dashOffset;CARD16 nDashes;};
struct _13470DA4B6A7AAE8ACC864F70C5FF73E {String type;Widget widget;XtPointer event_data;Cardinal num_event_data;};
struct _13C5E316447D80627E30BA16FBD8BA91 {CARD8 error;CARD8 code;CARD16 sequenceNum;CARD32 floID;CARD16 minorOpcode;CARD8 majorOpcode;CARD8 floErrorCode;CARD32 nameSpace;xieTypPhototag phototag;CARD16 type;xieTypPhototag domainSrc;CARD8 pad[10];};
struct _1463B1446DFC3BE3591F88FAF0B4315C {CARD8 reqType;BYTE pad;CARD16 length;CARD32 cursor;CARD16 foreRed;CARD16 foreGreen;CARD16 foreBlue;CARD16 backRed;CARD16 backGreen;CARD16 backBlue;};
struct _150E10FD2D39BC72596D758DB7486435 {dma_A_srs_type srs;dma_A_ars_type ars;dma_A_trs_type trs[10];dma_A_urs_type urs[20];};
struct _160641F2D897670075418D2E6B733231 {unsigned char e_ident[16];Elf32_Half e_type;Elf32_Half e_machine;Elf32_Word e_version;Elf32_Addr e_entry;Elf32_Off e_phoff;Elf32_Off e_shoff;Elf32_Word e_flags;Elf32_Half e_ehsize;Elf32_Half e_phentsize;Elf32_Half e_phnum;Elf32_Half e_shentsize;Elf32_Half e_shnum;Elf32_Half e_shstrndx;};
struct _160BFFB979B4E4E895FB2627A5A1E75F {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD16 width;CARD16 height;CARD16 rx;CARD16 ry;CARD16 rwidth;CARD16 rheight;CARD32 pad1;CARD32 pad2;CARD32 pad3;};
struct _16E2BEF1A7CBC54AADB59FB4B07532F9 {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD32 nEvents;INT16 axes;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _19958847318214F780EFE5EAB3B1A0C9 {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 num_classes;BYTE pad0;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _1E68C84E6BE3B673D767CBEC47B3DECA {BYTE type;CARD8 depth;CARD16 sequenceNumber;CARD32 length;CARD32 visual;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _216E4BC742821D1F4E1C977B8BEA2F24 {BYTE type;BYTE pad0;CARD16 sequenceNumber;CARD32 length;INT16 x;INT16 y;CARD16 width;CARD16 height;CARD32 count;CARD32 pad1;CARD32 pad2;CARD32 pad3;};
struct _25C099F9CE304AFBCEF26B9531BCDA3F {Elf32_Word p_type;Elf32_Off p_offset;Elf32_Addr p_vaddr;Elf32_Addr p_paddr;Elf32_Xword p_filesz;Elf32_Xword p_memsz;Elf32_Word p_flags;Elf32_Xword p_align;};
struct _25D0D8CCEC98ADDB4521E2BA148959A7 {Widget widget;XmTextPosition insert_pos;int num_chars;Time timestamp;Boolean move;};
struct _2687827B17D2749AF2A3D46753AF4A11 {CARD8 type;CARD8 pad0;CARD16 sequenceNumber;CARD32 length;INT32 nRepBytes;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _27A89DBD85BC3B67227E722098DF0BF6 {int type;unsigned int serial;int send_event;Display *display;Window window;XID deviceid;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;int same_screen;unsigned int device_state;unsigned char axes_count;unsigned char first_axis;int axis_data[6];};
struct _27AC02CFF97A742F93959B98FA171589 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;BYTE map[32];};
struct _27CF53CBC4962E834EEC31FA11492A32 {Elf32_Word st_name;Elf32_Addr st_value;Elf32_Xword st_size;unsigned char st_info;unsigned char st_other;Elf32_Half st_shndx;};
struct _2A1341D2DCCA1CCA8C5B95293E5C0E70 {int type;unsigned int serial;int send_event;Display *display;Window window;XID deviceid;Time time;int num_classes;char data[64];};
struct _2A2BB2E6A1A637B547E2DF81ADC3376A {BYTE type;BYTE errorCode;CARD16 sequenceNumber;CARD32 resourceID;CARD16 minorCode;CARD8 majorCode;BYTE pad1;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _2B4C97E383E567F029CDA6243F5AAF9B {CARD16 elemType;CARD16 elemLength;xieTypPhotomap photomap;BOOL notify;CARD8 pad[3];};
struct _2BF13069EBDEE5493612AD0930AE3BF3 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad1;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;CARD16 pad2;xieTypHistogramShape shape;CARD16 lenParams;};
struct _2D59FDEE4261500A2FE9AC0FF5270F5C {CARD8 type;CARD8 category;CARD16 sequenceNumber;CARD32 length;CARD8 elementHeader;BOOL clientSwapped;CARD16 pad1;CARD32 idBase;CARD32 serverTime;CARD32 recordedSequenceNumber;CARD32 pad3;CARD32 pad4;};
struct _313C3B353B46FFB1EDF86B43BFD8A7BC {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;Cursor cursor;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _31DC1A9A30C8BE83503485AFF4563DAB {unsigned char e_ident[16];Elf64_Half e_type;Elf64_Half e_machine;Elf64_Word e_version;Elf64_Addr e_entry;Elf64_Off e_phoff;Elf64_Off e_shoff;Elf64_Word e_flags;Elf64_Half e_ehsize;Elf64_Half e_phentsize;Elf64_Half e_phnum;Elf64_Half e_shentsize;Elf64_Half e_shnum;Elf64_Half e_shstrndx;};
struct _3208E1BA8126707DC1A488F29A0DED72 {CARD8 type;BOOL enabled;CARD16 sequenceNumber;CARD32 length;CARD8 elementHeader;CARD8 pad;CARD16 pad0;CARD32 nClients;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;};
struct _327363286F15FD04A4B2959C61C89515 {int type;unsigned int serial;int send_event;Display *display;Window window;XID deviceid;int mode;int detail;Time time;};
struct _3281815EF510FB5432D1AC4F74C6C79F {xieTypInterleave interleave;xieTypOrientation bandOrder;CARD16 lenTable;CARD8 predictor[3];CARD8 pad;};
struct _331AC9EA7DEA54BC7D149DCE58DE8017 {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;XtArgsProc get_values_hook;};
struct _35F7AFD9D1446B17D2F88B556DE97ABC {unsigned char focus_policy;XmFocusData focus_data;Boolean private_shell;XmFontList default_font_list;XmFontList button_font_list;XmFontList label_font_list;XmDirection layout_direction;};
struct _37650F220AC0903949A382F68D80E2E0 {CARD8 class;CARD8 id;CARD16 length;CARD32 resolution;INT32 min_value;INT32 max_value;};
struct _38AB55CADF3218184FF2A828A7079C62 {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD32 nEvents;CARD8 axes;CARD8 mode;BYTE pad1;BYTE pad2;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;};
struct _39A4136BB030D7809586100094537552 {CorePart core;CompositePart composite;ShellPart shell;OverrideShellPart override;};
struct _3B49EEBA6D06A12F7D85BCEDA8059895 {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;Atom evtype;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _3BCCBA65A7EB0D2F6C33DC1ED4428B78 {int type;unsigned int serial;int send_event;Display *display;Window window;Atom atom;Time time;int state;};
struct _3C68DE36615A2A96935F4E8A62136411 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 window;CARD32 selection;CARD32 time;};
struct _3FD75763E3169B67FBB238E86E46A64A {Elf_Void *d_buf;Elf_Type d_type;Elf64_Xword d_size;Elf64_Off d_off;Elf64_Xword d_align;unsigned int d_version;};
struct _431497C136870E9873948068EF0F03D8 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 fid;CARD16 nbytes;BYTE pad1;BYTE pad2;};
struct _43E2578F9B0C3A2B1F4F344D0EB9BECE {int type;unsigned int serial;int send_event;Display *display;Window window;XID deviceid;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;unsigned int keycode;int same_screen;unsigned int device_state;unsigned char axes_count;unsigned char first_axis;int axis_data[6];};
struct _45D688CB45E801EDDCD39001FBABF3CD {xieTypInterleave interleave;xieTypOrientation bandOrder;CARD8 horizontalSamples[3];CARD8 verticalSamples[3];CARD16 lenQtable;CARD16 lenACtable;CARD16 lenDCtable;CARD16 pad;};
struct _4A647C60455AE07B29957B156A9865A4 {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD16 imageRes;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _4C0A166D0FCB5B830093FB9F7D7DFC34 {CARD8 reqType;CARD8 pad;CARD16 length;CARD32 drawable;CARD32 gc;INT16 x;INT16 y;};
struct _4C65BE1067297C4FADB11C7C25C29C00 {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD32 stringLen;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _4D918DF5E629F4C28AE5A435B1E47B7A {int type;unsigned int serial;int send_event;Display *display;Window owner;Window requestor;Atom selection;Atom target;Atom property;Time time;};
struct _4DAB985EC804DF06DE833983110A4312 {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD32 printContext;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _4DCAC2088B3F168EF4BFBCEA383ECFD2 {CARD8 reqType;CARD8 format;CARD16 length;CARD32 drawable;INT16 x;INT16 y;CARD16 width;CARD16 height;CARD32 planeMask;};
struct _4DED8A72E96D1A05DB0C760DC4A016D9 {int type;unsigned int serial;int send_event;Display *display;Window window;XID deviceid;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;unsigned int button;int same_screen;unsigned int device_state;unsigned char axes_count;unsigned char first_axis;int axis_data[6];};
struct _4E2DFB9F6290197309D31FB10928FA58 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 cmap;CARD16 nbytes;BYTE pad1;BYTE pad2;};
struct _4E41D3592590DB7E479BB165B1ABED80 {int type;unsigned int serial;int send_event;Display *display;Window window;XID deviceid;Time time;int request;};
struct _50444C3EFF8C2D01F53423DE01692AE5 {int reason;XEvent *event;Atom selection;XtPointer transfer_id;XmTransferStatus status;XtPointer client_data;};
struct _518ACE51630D39AE769AAC20F2440B0D {Elf32_Word sh_name;Elf32_Word sh_type;Elf32_Xword sh_flags;Elf32_Addr sh_addr;Elf32_Off sh_offset;Elf32_Xword sh_size;Elf32_Word sh_link;Elf32_Word sh_info;Elf32_Xword sh_addralign;Elf32_Xword sh_entsize;};
struct _54EA74D72ADA89C2802A85C6983015A7 {uint32_t dl_qos_type;dl_transdelay_t dl_trans_delay;dl_priority_t dl_priority;dl_protect_t dl_protection;int dl_residual_error;};
struct _55E5FD3CD940068B4EF67AAE284651A9 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;xieTypExportNotify notify;CARD8 pad;};
struct _56236F995320E9550D01648098F1E75E {CARD8 reqType;CARD8 mode;CARD16 length;CARD32 window;CARD32 property;CARD32 type;CARD8 format;BYTE pad[3];CARD32 nUnits;};
struct _58ED657282AEEEAAB6957A3B0877BB31 {CARD8 reqType;CARD8 hpReqType;CARD16 length;XID deviceid;CARD32 mask;};
union _5AD9887C12C1EBF5921BF16B8374B7B4 {int l;ulong ul;caddr_t cp;mblk_t *mp;uint ui;};
struct _5BB4136DB11763AB16A801C866FA2FFA {uint32_t type_I_0;uint32_t io_eim;union _5BB4136DB11763AB16A801C866FA2FFA___10EE4F2AA25F27C7DA0CE69BF1A43F86 io_dc;union _5BB4136DB11763AB16A801C866FA2FFA___4677EF6C4309B7A99408668B47D48789 io_ii;uint32_t type_U_0[4];uint32_t type_R_0;uint32_t io_spa;uint32_t type_R_1[2];uint32_t io_command;uint32_t io_status;uint32_t io_control;union _5BB4136DB11763AB16A801C866FA2FFA___F0E530FF1DC6AE3DC880294D4D1C5140 io_data;};
struct _5C140DC956AB8D8D3A2E81F1CC511829 {int type;unsigned int serial;int send_event;Display *display;Window window;Atom message_type;int format;union _5C140DC956AB8D8D3A2E81F1CC511829___B322D948E3ED25D84ECF3A20AB2BF161 data;};
struct _5C2B60FA26E73A1BF39A96E97412C65C {CARD8 reqType;BOOL contiguous;CARD16 length;CARD32 cmap;CARD16 colors;CARD16 planes;};
struct _5DD49376C74765CB7E96286DDB46181E {String type;Widget widget;XtGeometryMask changeMask;XWindowChanges changes;};
struct _5E8F645B7662834A694E868B27EBBB24 {BYTE type;CARD8 nExtensions;CARD16 sequenceNumber;CARD32 length;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _5F6372D609C25A56B6346C90751BD281 {int type;unsigned int serial;int send_event;Display *display;XSyncCounter counter;XSyncValue wait_value;XSyncValue counter_value;Time time;int count;int destroyed;};
struct _61914AF5102B2D237A41D3779282DDDF {CARD8 reqType;CARD8 hpReqType;CARD16 length;Time time;XID deviceid;};
struct _61ABC0BA638790D6FE8B525E20E3EE79 {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypPhotoflo floID;xieTypPhototag start;CARD16 numElements;};
struct _61B607A2274ED5109A268B0B2173104D {Elf64_Word p_type;Elf64_Word p_flags;Elf64_Off p_offset;Elf64_Addr p_vaddr;Elf64_Addr p_paddr;Elf64_Xword p_filesz;Elf64_Xword p_memsz;Elf64_Xword p_align;};
struct _621D16500987A711CC39A0AD4484DBF8 {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;CARD16 timeout;CARD16 interval;BOOL preferBlanking;BOOL allowExposures;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _62B00FE65DC591A743796E3E26F02346 {CARD8 reqType;CARD8 hpReqType;CARD16 length;XID deviceid;CARD32 mode;};
struct _65CB4B56B993AF892F37749A62A14B51 {int type;unsigned int serial;int send_event;Display *display;Window requestor;Atom selection;Atom target;Atom property;Time time;};
struct _67007EC0A0A5FA25533E9B447B17EF1A {int x;int y;int width;int height;int border_width;int depth;Visual *visual;Window root;int class;int bit_gravity;int win_gravity;int backing_store;unsigned int backing_planes;unsigned int backing_pixel;int save_under;Colormap colormap;int map_installed;int map_state;int all_event_masks;int your_event_mask;int do_not_propagate_mask;int override_redirect;Screen *screen;};
struct _674E79E828204A5EA95B7CAF67B0657E {sym_entry_header_type header;sym_obj_header_type obj_header;sym_proc_def_entry_type *az_proc_def;sym_value_entry_type *az_arg_value;};
struct _67AB776A05D682900D1C01B50C60E7EB {_LC_object_t hdr;char *( *nl_langinfo)(nl_item, _LC_time_t *);size_t ( *strftime)(char *, size_t,  char *,  struct tm *, _LC_time_t *);char *( *strptime)( char *,  char *, struct tm *, _LC_time_t *);size_t ( *wcsftime)(unsigned int *, size_t,  char *,  struct tm *, _LC_time_t *);_LC_time_t *( *init)(_LC_locale_t *);void *data;};
struct _6971C49ED543898CFDE2AB3CD1189B70 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;INT16 dstX;INT16 dstY;CARD16 pad;CARD32 drawable;CARD32 gc;};
struct _6C157D281FCCF3AD18E5920BAFADC6E6 {Elf64_Word sh_name;Elf64_Word sh_type;Elf64_Xword sh_flags;Elf64_Addr sh_addr;Elf64_Off sh_offset;Elf64_Xword sh_size;Elf64_Word sh_link;Elf64_Word sh_info;Elf64_Xword sh_addralign;Elf64_Xword sh_entsize;};
struct _6C531080E0330861B126A2833D727845 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 cid;CARD32 source;CARD32 mask;CARD16 sourceChar;CARD16 maskChar;CARD16 foreRed;CARD16 foreGreen;CARD16 foreBlue;CARD16 backRed;CARD16 backGreen;CARD16 backBlue;};
struct _6FB552EA524F38554FA8528F506D34FD {CARD8 reqType;BYTE pad;CARD16 length;CARD32 cid;CARD32 source;CARD32 mask;CARD16 foreRed;CARD16 foreGreen;CARD16 foreBlue;CARD16 backRed;CARD16 backGreen;CARD16 backBlue;CARD16 x;CARD16 y;};
struct _70E4CC7E54BA43D6E5622AB555079691 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 cmap;CARD16 red;CARD16 green;CARD16 blue;CARD16 pad2;};
struct _7286F01C0F25CC9697D9D7CFCD5C4B3B {BYTE type;CARD8 pad0;CARD16 sequenceNumber;CARD32 length;CARD16 standby;CARD16 suspend;CARD16 off;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _735DE0EA43321C9AE91F95F7110249AF {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;XtGeometryHandler root_geometry_manager;};
struct _748E6396DB81A71CC67026C5868B0A61 {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 status;BYTE pad0;CARD16 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _749257863A78ACF83BA10F9F553F4560 {BYTE type;BYTE deviceid;CARD16 sequenceNumber;CARD8 request;CARD8 firstKeyCode;CARD8 count;BYTE pad1;CARD32 time;CARD32 pad00;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;};
struct _75A587EC71D839727FF00E499DB42A24 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;CARD32 levels0;CARD32 levels1;CARD32 levels2;xieTypConstrainTechnique constrain;CARD16 lenParams;};
struct _76BB05525B3B0868C06F2DFB63E54F8F {CARD8 reqType;CARD8 hpReqType;CARD16 length;XID deviceid;KeyCode firstKeyCode;CARD8 count;CARD16 pad1;};
struct _76C432023C30A60D6F0CA03B71EF1A2A {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD32 focus;CARD32 time;CARD8 revertTo;BYTE pad1;BYTE pad2;BYTE pad3;CARD32 pad01;CARD32 pad02;CARD32 pad03;};
struct _77B5DA89F8222E8D6D7C1ABF47542A30 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 drawable;CARD32 gc;};
struct _78B46019F679C5E70AAD7C2ED28277AC {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 mask;CARD8 deviceid;CARD8 feedbackid;BYTE pad1;BYTE pad2;};
struct _7905F1106D6192C786F48B3D63EB8F32 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 cmap;};
struct _7963ED2253978A4E491ADF870F9A304B {Elf64_Word st_name;unsigned char st_info;unsigned char st_other;Elf64_Half st_shndx;Elf64_Addr st_value;Elf64_Xword st_size;};
struct _7B1AACD52ED53B3363F77B2C48FE4393 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 window;CARD16 count;CARD8 mode;BYTE pad;};
struct _7B44642C0B26E972D25A29993171BE3B {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypPhotoflo floID;BOOL notify;CARD8 pad[3];};
struct _7BDACCE6E93DF8E6ADBB258A595CFD05 {CARD8 radius;BOOL simple;CARD16 pad;xieTypFloat sigma;xieTypFloat normalize;};
struct _7C0E6FBDC2BF29A9AC5B4796EC5BE28C {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;CARD32 status;CARD32 focus;Window revertTo;CARD32 data01;CARD32 data02;CARD32 data03;};
struct _7CA3BFA0E2ACF16B623A64955922766D {CARD8 reqType;BYTE alloc;CARD16 length;CARD32 mid;CARD32 window;CARD32 visual;};
struct _80262239D5DEFAC7F5C75EBAC6CCD93C {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 num_classes;BYTE pad1;BYTE pad2;BYTE pad3;CARD32 pad00;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;};
struct _81BCCC75A8CBAE21806AA1556BEE0B6B {int reason;XEvent *event;XmRendition rendition;char *font_name;XmRenderTable render_table;XmStringTag tag;};
struct _81C1ED238922402D884A6408DD965563 {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;Boolean accepts_objects;Boolean allows_change_managed_set;};
struct _82419EEADA9624744D635B7F10F1DD0F {_LC_object_t hdr;char *( *nl_langinfo)(nl_item, _LC_monetary_t *);ssize_t ( *strfmon)(char *, size_t,  char *, va_list, _LC_monetary_t *);_LC_monetary_t *( *init)(_LC_locale_t *);void *data;};
struct _82D86B5B3C9D9E6A7BE98808A956EE82 {CARD8 reqType;BYTE coordMode;CARD16 length;CARD32 drawable;CARD32 gc;};
struct _83CB33CAC2707097E650C7C1ACF13AE9 {uintptr_t scratch1;uintptr_t scratch2;io_subq_type reply_subq;bit8 function;union _83CB33CAC2707097E650C7C1ACF13AE9___39B7D594E1E86DA02F33894B14792296 u;};
struct _86549870A56B750901787CF4B94C9DDE {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD32 valueLen;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _87E061934EE6919F8EE4F5F65571C106 {xieTypInterleave interleave;xieTypOrientation bandOrder;BOOL upSample;CARD8 pad;};
struct _884E74C734502FDAE5886BDFF852D3B6 {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD16 majorVersion;CARD16 minorVersion;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _8A52654D24E42D3905926E1FC7E9ABF6 {Dimension margin_width;Dimension margin_height;unsigned char shadow_type;Dimension old_width;Dimension old_height;Dimension old_shadow_thickness;Position old_shadow_x;Position old_shadow_y;Widget work_area;Widget title_area;Boolean processing_constraints;};
struct _8E9D6FDA341A5CD3E2BA41AECEFC8DB5 {BYTE type;CARD8 revertTo;CARD16 sequenceNumber;CARD32 length;CARD32 focus;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _8EA7A0D2C6C155A9C144BE737FA9135D {CARD16 elemType;CARD16 elemLength;xieTypDataClass class;xieTypOrientation bandOrder;CARD16 pad;CARD32 length0;CARD32 length1;CARD32 length2;CARD32 levels0;CARD32 levels1;CARD32 levels2;};
struct _8F45B6188928CD01F0FDE0FF1AAE7BC1 {CARD8 error;CARD8 code;CARD16 sequenceNum;CARD32 floID;CARD16 minorOpcode;CARD8 majorOpcode;CARD8 floErrorCode;CARD32 nameSpace;xieTypPhototag phototag;CARD16 type;CARD32 badValue;CARD8 pad[8];};
struct _902F743089704F641F1AE7533B376F9E {uint32_t dh_magic;uint32_t dh_flags;uint64_t dh_time;int64_t dh_rootdev;char dh_panicmsg[256];char dh_release[256];uint64_t dh_memsize;dumparea_t dh_module_table;dumparea_t dh_string_table;dumparea_t dh_image_table;};
struct _91B6CB490464A345E007449761AA48F2 {CARD8 reqType;BOOL contiguous;CARD16 length;CARD32 cmap;CARD16 colors;CARD16 red;CARD16 green;CARD16 blue;};
struct _925C5E9ADF13AF08F8E4BE2898EADC8C {CARD8 reqType;BYTE pad;CARD16 length;CARD32 mask;};
struct _927F401B27F2876D054E6625E491BF29 {CARD32 levels0;CARD32 levels1;CARD32 levels2;xieTypFloat lumaRed;xieTypFloat lumaGreen;xieTypFloat lumaBlue;xieTypFloat bias0;xieTypFloat bias1;xieTypFloat bias2;xieTypGamutTechnique gamutCompress;CARD16 lenGamutParams;};
struct _95F74D7453875C15752E25CB7F1BF0CB {BYTE type;BYTE detail;CARD16 sequenceNumber;CARD32 time;CARD32 window;BYTE mode;CARD8 deviceid;BYTE pad1;BYTE pad2;CARD32 pad00;CARD32 pad01;CARD32 pad02;CARD32 pad03;};
struct _96F7C024A0E76E12CD4B29EEA702F0F5 {int type;unsigned int serial;int send_event;Display *display;Window window;Atom selection;Time time;};
struct _9C8855C5416F841FBC956426CB420C87 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 grabWindow;CARD16 modifiers;CARD8 modifier_device;CARD8 key;CARD8 grabbed_device;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _9CB99F55F4760567A5B7FA05D1482C33 {CARD8 error;CARD8 code;CARD16 sequenceNum;CARD32 floID;CARD16 minorOpcode;CARD8 majorOpcode;CARD8 floErrorCode;CARD32 nameSpace;xieTypPhototag phototag;CARD16 type;CARD8 pad[12];};
struct _9D9F8CC524C7DD4F9704759512315B2D {String type;Widget widget;ArgList args;Cardinal num_args;};
struct _9F409E83FC8000082C320A35EFC3B2CA {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window grabWindow;XID deviceid;CARD16 modifiers;CARD8 key;CARD8 pad1;};
struct _9FED812B80655AE33F3AD93E5626D145 {XtGeometryMask request_mode;Position x;Position y;Dimension width;Dimension height;Dimension border_width;Widget sibling;int stack_mode;};
struct _A02A59C49A68940E162F3D6545A6687B {CARD8 error;CARD8 code;CARD16 sequenceNum;CARD32 floID;CARD16 minorOpcode;CARD8 majorOpcode;CARD8 floErrorCode;CARD32 nameSpace;xieTypPhototag phototag;CARD16 type;CARD32 resourceID;CARD8 pad[8];};
struct _A139F5C23E4C0799A30BDE721D46880D {CARD8 event;CARD8 bandNumber;CARD16 sequenceNum;CARD32 time;CARD32 instanceNameSpace;CARD32 instanceFloID;xieTypPhototag src;CARD16 type;CARD32 data0;CARD32 data1;CARD32 data2;};
struct _A145BC600EED1A472B5CFB66AAA6D9D9 {Boolean always_install_accelerators;XmGeoCreateProc geo_matrix_create;XmFocusMovedProc focus_moved_proc;XtPointer extension;};
struct _A1E1C4876F7B4B8EFD713F49F668C581 {BOOL needsParam;xieTypTechniqueGroup group;CARD16 number;CARD8 speed;CARD8 nameLength;CARD16 pad;};
struct _A1E1CD086B71954ED0C94A8A26B6C32D {xieTypFloat matrix00;xieTypFloat matrix01;xieTypFloat matrix02;xieTypFloat matrix10;xieTypFloat matrix11;xieTypFloat matrix12;xieTypFloat matrix20;xieTypFloat matrix21;xieTypFloat matrix22;xieTypWhiteAdjustTechnique whiteAdjusted;CARD16 lenWhiteParams;xieTypGamutTechnique gamutCompress;CARD16 lenGamutParams;};
struct _A23F2D0A331F720D631E2B6171CC3ECA {CARD8 reqType;BYTE pad;CARD16 length;CARD32 id;};
struct _A27B2EF13B029B6AC017266492BED372 {CARD8 reqType;BYTE pad;CARD16 length;INT16 timeout;INT16 interval;BYTE preferBlank;BYTE allowExpose;CARD16 pad2;};
struct _A27E5DC152941706DECC85ADB6E03D0F {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window window;INT32 nMsgBytes;INT32 needReply;};
struct _A2FB221EC01549407EDCF016C4C0632F {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 status;BYTE pad1;BYTE pad2;BYTE pad3;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;};
struct _A3DAFC5B3B146A9587C3AC2DA81B7610 {llio_status_type llio_status;diag_class_type diag_class;bit8 hw_status_len;bit8 mgr_info_len;bit8 retry_count;unsigned char filler;short logging_subsys;union _A3DAFC5B3B146A9587C3AC2DA81B7610___00C43480F04328215F4E5F36075FEB9C u;};
struct _A47C75AE74EA14FC2F54815F4A8813BA {String type;Widget widget;XtWidgetGeometry *request;XtWidgetGeometry *reply;XtGeometryResult result;};
struct _A56827FA99728A529A1C213E34F0D83D {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 time;CARD8 mode;CARD8 deviceid;BYTE pad1;BYTE pad2;};
struct _A9429A734A24E6AA93342D0A902F5447 {CARD8 event;xieTypPhotofloOutcome outcome;CARD16 sequenceNum;CARD32 time;CARD32 instanceNameSpace;CARD32 instanceFloID;CARD8 pad[16];};
struct _AC22C39C8ED13EB46142D7E126F969C6 {BYTE type;BYTE count;CARD16 sequencenumber;XID deviceid;CARD32 pad00;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;};
struct _AC93509FFB6B9C1B98C9154A5D973C79 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 grabWindow;CARD16 modifiers;CARD8 modifier_device;CARD8 button;CARD8 grabbed_device;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _B36C03EE0DB03800CDBEDA1CF8CFFD5F {XExtData *ext_data;Font fid;unsigned int direction;unsigned int min_char_or_byte2;unsigned int max_char_or_byte2;unsigned int min_byte1;unsigned int max_byte1;int all_chars_exist;unsigned int default_char;int n_properties;XFontProp *properties;XCharStruct min_bounds;XCharStruct max_bounds;XCharStruct *per_char;int ascent;int descent;};
struct _B6049D59B0993A06102935602114B25B {int reason;XEvent *event;XPContext context;Boolean last_page;XtPointer detail;};
struct _B76BD181BFDAF7E9381A1626C6C45722 {CARD8 reqType;CARD8 depth;CARD16 length;CARD32 wid;CARD32 parent;INT16 x;INT16 y;CARD16 width;CARD16 height;CARD16 borderWidth;CARD16 class;CARD32 visual;CARD32 mask;};
struct _BA021C9E98B12E79B733DF8F1A0CE5B1 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;xieTypPhotomap photomap;xieTypEncodeTechnique encodeTechnique;CARD16 lenParams;};
struct _BD361926F3A07F7106AD6464DEEBCE27 {_LC_object_t hdr;char *( *nl_langinfo)(nl_item, _LC_charmap_t *);int ( *mbtowc)(unsigned int *,  char *, size_t, _LC_charmap_t *);size_t ( *mbstowcs)(unsigned int *,  char *, size_t, _LC_charmap_t *);int ( *wctomb)(char *, unsigned int, _LC_charmap_t *);size_t ( *wcstombs)(char *,  unsigned int *, size_t, _LC_charmap_t *);int ( *mblen)( char *, size_t, _LC_charmap_t *);int ( *wcswidth)( unsigned int *, size_t, _LC_charmap_t *);int ( *wcwidth)(unsigned int, _LC_charmap_t *);int ( *__mbtopc)(unsigned int *,  char *, size_t, int *, _LC_charmap_t *);size_t ( *__mbstopcs)(unsigned int *, size_t,  char *, size_t, int, char **, int *, _LC_charmap_t *);int ( *__pctomb)(char *,  unsigned int *, size_t, int *, _LC_charmap_t *);size_t ( *__pcstombs)(char *, size_t,  unsigned int *, size_t, char **, int *, _LC_charmap_t *);_LC_charmap_t *( *init)(_LC_locale_t *);void *data;};
struct _BD3BDD17C4EDBE852D24CB021FDA20B1 {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window window;XID deviceid;};
struct _BD70A3BCAFB9C7C5C0C679B3A9CE0A47 {BYTE type;BYTE pad0;CARD16 sequenceNumber;CARD32 length;INT32 error;CARD32 flags;BYTE path[80];CARD32 depth;INT32 w_class;INT32 w_screen;INT32 w_window;BYTE w_name[40];};
struct _BDC2BC4E1FC4E3665C531F87A904F1CB {BYTE type;BYTE deviceid;CARD16 sequenceNumber;CARD32 time;CARD8 request;BYTE pad1;BYTE pad2;BYTE pad3;CARD32 pad00;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;};
struct _BEEF05F397D63AF6E1E65FBD0055FC1F {unsigned int dh_magic;int dh_flags;time_t dh_time;dev_t dh_rootdev;char dh_panicmsg[255];char dh_release[255];uint64_t dh_memsize;V1dumparea_t dh_image[16];V1dumparea_t dh_module_table;V1dumparea_t dh_string_table;};
struct _C1A851173DD816DDF7F0E0D062CEFEE2 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 cursor;CARD32 time;CARD16 eventMask;CARD16 pad2;};
struct _C66AC2913D384A8D84D2D1CA0773B121 {int type;unsigned int serial;int send_event;Display *display;Window window;XID deviceid;Window root;Window subwindow;Time time;int x;int y;int x_root;int y_root;unsigned int state;char is_hint;int same_screen;unsigned int device_state;unsigned char axes_count;unsigned char first_axis;int axis_data[6];};
struct _C735D198080D0544DA6E87E89A47BA62 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;xieTypPhototag lut;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;CARD8 bandMask;CARD8 pad;};
struct _C7406CB336B739A87F2A2E6FB42BC742 {CARD8 reqType;CARD8 flags;CARD16 length;CARD32 cmap;CARD32 pixel;CARD16 nbytes;BYTE pad1;BYTE pad2;};
struct _CC9CB7E336EEB9C8B38770A3248C8F6D {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;CARD32 levels;xieTypFloat bias;xieTypFloat constant0;xieTypFloat constant1;xieTypFloat constant2;};
struct _CFD68B7ADBC82BE7EABF4FDEA780590F {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD16 major_version;CARD16 minor_version;BOOL present;CARD8 pad1;CARD8 pad2;CARD8 pad3;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;};
struct _D498926E8696BF91244D867CE73FD66E {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD32 eventMask;CARD32 allEventsMask;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;};
struct _D4B7CCBA990A156E447947BB060E0786 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 srcGC;CARD32 dstGC;CARD32 mask;};
struct _D50A70D0E3F027C6430054674F5D7982 {Dimension AreaWidth;Dimension AreaHeight;Dimension margin_width;Dimension margin_height;Widget CommandWindow;Widget MenuBar;Widget Message;unsigned char CommandLoc;XmSeparatorGadget Sep1;XmSeparatorGadget Sep2;XmSeparatorGadget Sep3;Boolean ManagingSep;Boolean ShowSep;};
struct _D70593ABB97D9ADE4A069324C98D63AE {BYTE type;CARD8 format;CARD16 sequenceNumber;CARD32 length;CARD32 propertyType;CARD32 bytesAfter;CARD32 nItems;CARD32 pad1;CARD32 pad2;CARD32 pad3;};
struct _D964271DD6A251005E25C3AAAE129019 {unsigned int eventType;KeySym keysym;KeyCode key;unsigned int modifiers;Widget component;Boolean needGrab;Boolean isMnemonic;};
struct _DA732864DAD897F0B587BCCAD8E078EE {BYTE type;CARD8 pad0;CARD16 sequenceNumber;CARD32 length;CARD16 majorVersion;CARD16 minorVersion;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _DAEBDFCF6641BEDF5371E5E95CD6FE55 {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD32 listCount;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _DB0E3B2132CB3BCDB478CD47716D7AA6 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 window;CARD32 start;CARD32 stop;};
struct _DC32A0924BDC2649CEA8C5E8AC72EF13 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 mid;CARD32 srcCmap;};
struct _DEB6ED3E3E48801FAB6806704D963455 {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;};
struct _DF21E726BD65398407620C5BBBA9E08C {CARD8 reqType;BYTE pad;CARD16 length;CARD32 window;CARD32 property;};
struct _DF9513CE871402C1F3633381C6F0F536 {_iconv_hdr hdr;uint32_t arr_size;int32_t is_1byte;wint_t Galley;};
struct _DFCE630A31DDB9AF8FAB2276CD8948BD {BYTE type;BYTE pad0;CARD16 sequenceNumber;CARD32 length;INT16 x;INT16 y;CARD16 width;CARD16 height;CARD32 count;CARD32 data03;CARD32 data04;CARD32 data05;};
struct _E058C916279CEDBDEE25D28521C04D5A {int ifIndex;char ifDescr[64];int ifType;int ifMtu;gauge ifSpeed;mib_physaddr_t ifPhysAddress;int ifAdmin;int ifOper;TimeTicks ifLastChange;counter ifInOctets;counter ifInUcastPkts;counter ifInNUcastPkts;counter ifInDiscards;counter ifInErrors;counter ifInUnknownProtos;counter ifOutOctets;counter ifOutUcastPkts;counter ifOutNUcastPkts;counter ifOutDiscards;counter ifOutErrors;gauge ifOutQlen;int ifSpecific;};
struct _E0F65D5058ACC2BC5F9AF2EDFFAF29D1 {CARD32 windowId;CARD32 defaultColormap;CARD32 whitePixel;CARD32 blackPixel;CARD32 currentInputMask;CARD16 pixWidth;CARD16 pixHeight;CARD16 mmWidth;CARD16 mmHeight;CARD16 minInstalledMaps;CARD16 maxInstalledMaps;CARD32 rootVisualID;CARD8 backingStore;BOOL saveUnders;CARD8 rootDepth;CARD8 nDepths;};
struct _E1CA6FCDCEF9A9C396CC3F3CDC444223 {CARD8 pixelStride[3];xieTypOrientation pixelOrder;CARD8 scanlinePad[3];xieTypOrientation fillOrder;xieTypOrientation bandOrder;xieTypInterleave interleave;CARD16 pad;};
struct _E27231AA724DCAE1F187F811797F6BBB {CARD32 levels0;CARD32 levels1;CARD32 levels2;xieTypFloat lumaRed;xieTypFloat lumaGreen;xieTypFloat lumaBlue;xieTypFloat scale;xieTypGamutTechnique gamutCompress;CARD16 lenGamutParams;};
struct _E5FEC4B44082A4B8B21FC86BB58EB49C {BYTE type;CARD8 keySymsPerKeyCode;CARD16 sequenceNumber;CARD32 length;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _E9EF7C8FFB9FACE44571DB02DBC6695F {CARD8 reqType;CARD8 hpReqType;CARD16 length;XID deviceid;CARD8 keyCodes;KeyCode firstKeyCode;CARD8 keySymsPerKeyCode;CARD8 pad1;};
struct _EC87D4E5EFECFC4D155F79244EABA9BB {CARD8 reqType;BYTE mode;CARD16 length;CARD32 window;};
struct _EDE17C06FAF221A5878FFED27CF569B6 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 grabWindow;CARD32 time;CARD16 event_count;CARD8 this_device_mode;CARD8 other_devices_mode;BOOL ownerEvents;CARD8 deviceid;CARD16 pad01;};
struct _EE866C64B9E084E52F8894370051FA3D {CARD8 repType;CARD8 RepType;CARD16 sequenceNumber;CARD32 length;CARD8 nElts;BYTE pad1;BYTE pad2;BYTE pad3;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;};
struct _EF54914952AB89C7E0EBAF949772487D {BYTE type;BOOL enabled;CARD16 sequenceNumber;CARD32 length;CARD16 nHosts;CARD16 pad1;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _F0BD037E525ACFEA0C1F272EFA8FD580 {CARD8 reqType;BOOL delete;CARD16 length;CARD32 window;CARD32 property;CARD32 type;CARD32 longOffset;CARD32 longLength;};
struct _F172F94299C982F5FEAF6C4E72460A72 {XSyncCounter counter;XSyncValueType value_type;XSyncValue wait_value;XSyncTestType test_type;};
struct _F21D8018CF145B47A329D27C35E96B99 {CARD8 reqType;BOOL oddLength;CARD16 length;CARD32 fid;};
struct _F3865DA4DAB27EA9EE192F5975BA54C3 {CARD8 error;CARD8 code;CARD16 sequenceNum;CARD32 floID;CARD16 minorOpcode;CARD8 majorOpcode;CARD8 floErrorCode;CARD32 nameSpace;xieTypPhototag phototag;CARD16 type;CARD8 operator;CARD8 pad[11];};
struct _F38DCD124B444AE28722F96474B80F5D {BYTE type;CARD8 nElts;CARD16 sequenceNumber;CARD32 length;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _F464FEA7A4E5B570917C7E6E5C96B7A9 {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD32 statusCode;CARD32 finishedFlag;CARD32 dataLen;CARD32 pad1;CARD32 pad2;CARD32 pad3;};
struct _F57445CCAF99E2554B974CAECD301767 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 time;CARD8 deviceid;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _F683121DA6B0B811B23B9D483FF7482A {CARD8 reqType;BYTE pad;CARD16 length;CARD32 requestor;CARD32 selection;CARD32 target;CARD32 property;CARD32 time;};
struct _F741E5E7F7BAA6E72717FD3C16E12410 {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;Atom evtype;CARD32 flags;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _F9A6D6133A9C4128732440A5253BF2B0 {int reason;XEvent *event;Widget widget;Boolean doit;int position;XmString value;Boolean crossed_boundary;};
struct _FCBEDAD8A539FBE868C0633AE68719B3 {BYTE type;CARD8 unused;CARD16 sequenceNumber;CARD32 length;CARD32 rootWindow;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _FCC23D59EDC7C9AEBCA8416FDF631F7E {CARD8 reqType;BYTE pad;CARD16 length;CARD32 window;CARD32 valueMask;};
struct _FD52BE3056AC130D3626F17ACAA3487B {int ( *close)(XIM);char *( *set_values)(XIM, XIMArg *);char *( *get_values)(XIM, XIMArg *);XIC ( *create_ic)(XIM, XIMArg *);int ( *ctstombs)(XIM, char *, int, char *, int, int *);int ( *ctstowcs)(XIM, char *, int, unsigned int *, int, int *);};
struct _FD8FCB430836D04139012301F63EB9C6 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 start;CARD32 stop;CARD8 deviceid;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _FE8C559F4B68F5A3A5D9DBCE5E9919CF {BYTE type;CARD8 success;CARD16 sequenceNumber;CARD32 length;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _FF08C0842BBC9F776F8E3FB9B4B4B239 {CARD8 reqType;CARD8 hpReqType;CARD16 length;XID deviceid;INT32 rate;};
struct _XmCascadeButtonGCacheObjClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmLabelGCacheObjClassPart label_class_cache;XmCascadeButtonGCacheObjClassPart cascade_button_class_cache;};
struct _XmToggleButtonGCacheObjClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmLabelGCacheObjClassPart label_class_cache;XmToggleButtonGCacheObjClassPart toggle_class_cache;};
struct _XmCascadeButtonGadgetClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;XmLabelGadgetClassPart label_class;XmCascadeButtonGadgetClassPart cascade_button_class;};
struct _XmPushButtonGCacheObjClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmLabelGCacheObjClassPart label_class_cache;XmPushButtonGCacheObjClassPart pushbutton_class_cache;};
struct _XmTopLevelLeaveCallbackStruct {int reason;XEvent *event;Time timeStamp;Screen *screen;Window window;};
typedef int ( *XmbTextListToTextPropertyProc)(XLCd, Display *, char **, int, XICCEncodingStyle, XTextProperty *);
typedef int ( *XwcTextPropertyToTextListProc)(XLCd, Display *, XTextProperty *, unsigned int ***, int *);
struct _XmToggleButtonGadgetClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;XmLabelGadgetClassPart label_class;XmToggleButtonGadgetClassPart toggle_class;};
typedef void ( *XtCancelConvertSelectionProc)(Widget, Atom *, Atom *, XtRequestId *, XtPointer);
struct _XmCascadeButtonGCacheObjRec {ObjectPart object;XmExtPart ext;XmLabelGCacheObjPart label_cache;XmCascadeButtonGCacheObjPart cascade_button_cache;};
struct _XmPanedWindowConstraintPart {int position;int dheight;Position dy;Position olddy;Dimension min;Dimension max;Boolean isPane;Boolean allow_resize;Boolean skip_adjust;Widget sash;Widget separator;short position_index;};
struct _XmScrolledWindowClassExtRec {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;XmGetAutoDragRectsProc get_hor_rects;XmGetAutoDragRectsProc get_vert_rects;};
struct _XmFocusMovedCallbackStruct {int reason;XEvent *event;Boolean cont;Widget old_focus;Widget new_focus;unsigned char focus_policy;XmTraversalDirection direction;};
struct _XmPushButtonGadgetClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;XmLabelGadgetClassPart label_class;XmPushButtonGadgetClassPart pushbutton_class;};
struct _XmToggleButtonGCacheObjRec {ObjectPart object;XmExtPart ext;XmLabelGCacheObjPart label_cache;XmToggleButtonGCacheObjPart toggle_cache;};
struct _XmContainerConstraintPart {Widget entry_parent;Widget related_cwid;CwidNode node_ptr;int position_index;int depth;int cell_idx;Boolean visible_in_outline;Position user_x;Position user_y;unsigned char outline_state;unsigned char selection_visual;unsigned char selection_state;unsigned char cwid_type;};
struct _xkbSetDebuggingFlagsReply {BYTE type;CARD8 disableLocks;CARD16 sequenceNumber;CARD32 length;CARD32 currentFlags;CARD32 currentCtrls;CARD32 supportedFlags;CARD32 supportedCtrls;CARD32 pad1;CARD32 pad2;};
typedef void ( *XmActivatableCallBackProc)(Widget w, XtCallbackProc activCB, XtPointer closure, Boolean setunset);
struct _XmCascadeButtonWidgetRec {CorePart core;XmPrimitivePart primitive;XmLabelPart label;XmCascadeButtonPart cascade_button;};
struct _XmDropProcCallbackStruct {int reason;XEvent *event;Time timeStamp;Widget dragContext;Position x;Position y;unsigned char dropSiteStatus;unsigned char operation;unsigned char operations;unsigned char dropAction;};
struct _XmPushButtonGCacheObjRec {ObjectPart object;XmExtPart ext;XmLabelGCacheObjPart label_cache;XmPushButtonGCacheObjPart pushbutton_cache;};
struct _XmSeparatorGCacheObjPart {Dimension margin;unsigned char orientation;unsigned char separator_type;GC separator_GC;GC background_GC;GC top_shadow_GC;GC bottom_shadow_GC;Pixel foreground;Pixel background;Pixel top_shadow_color;Pixmap top_shadow_pixmap;Pixel bottom_shadow_color;Pixmap bottom_shadow_pixmap;};
struct _XmToggleButtonGadgetPart {Boolean indicator_set;unsigned char set;unsigned char visual_set;Boolean Armed;XtCallbackList value_changed_CB;XtCallbackList arm_CB;XtCallbackList disarm_CB;XmToggleButtonGCacheObjPart *cache;Dimension detail_shadow_thickness;};
struct _xkbExtensionDeviceNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 pad1;CARD16 reason;CARD16 ledClass;CARD16 ledID;CARD32 ledsDefined;CARD32 ledState;CARD8 firstBtn;CARD8 nBtns;CARD16 supported;CARD16 unsupported;CARD16 pad3;};
struct _XmCascadeButtonClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmLabelClassPart label_class;XmCascadeButtonClassPart cascade_button_class;};
typedef void ( *XtSelectionDoneIncrProc)(Widget, Atom *, Atom *, XtRequestId *, XtPointer);
struct _XmArrowButtonGadgetRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;XmArrowButtonGadgetPart arrowbutton;};
struct _XmPushButtonGadgetPart {XtCallbackList activate_callback;XtCallbackList arm_callback;XtCallbackList disarm_callback;Dimension show_as_default;Boolean armed;int click_count;Boolean compatible;XmPushButtonGCacheObjPart *cache;};
struct _XmToggleButtonClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmLabelClassPart label_class;XmToggleButtonClassPart toggle_class;};
struct _xkbShapeDoodadWireDesc {CARD32 name;CARD8 type;CARD8 priority;INT16 top;INT16 left;INT16 angle;CARD8 colorNdx;CARD8 shapeNdx;CARD16 pad1;CARD32 pad2;};
typedef int ( *XmInitialDirectionProc)(XtPointer, XmTextType, XmStringTag, unsigned int *, XmDirection *);
typedef void ( *XmbDrawImageStringProc)(Display *, Drawable, XFontSet, GC, int, int,  char *, int);
typedef Boolean ( *XtConvertSelectionProc)(Widget, Atom *, Atom *, Atom *, XtPointer *, unsigned int *, int *);
struct _OverrideShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;OverrideShellClassPart override_shell_class;};
struct _XmDrawnButtonClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmLabelClassPart label_class;XmDrawnButtonClassPart drawnbutton_class;};
struct _sym_module_entry_type {sym_entry_header_type header;sym_obj_header_type obj_header;sym_value_entry_type *az_version;sym_value_entry_type *az_character_set;sym_value_entry_type *az_case_sense;sym_def_obj_entry_type *az_def_obj;};
struct _xkbGetDeviceInfoReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD16 present;CARD16 supported;CARD16 unsupported;CARD16 nDeviceLedFBs;CARD8 firstBtnWanted;CARD8 nBtnsWanted;CARD8 firstBtnRtrn;CARD8 nBtnsRtrn;CARD8 totalBtns;BOOL hasOwnState;CARD16 dfltKbdFB;CARD16 dfltLedFB;CARD16 pad;CARD32 devType;};
struct _xkbLogoDoodadWireDesc {CARD32 name;CARD8 type;CARD8 priority;INT16 top;INT16 left;INT16 angle;CARD8 colorNdx;CARD8 shapeNdx;CARD16 pad1;CARD32 pad2;};
struct _xkbTextDoodadWireDesc {CARD32 name;CARD8 type;CARD8 priority;INT16 top;INT16 left;INT16 angle;CARD16 width;CARD16 height;CARD8 colorNdx;CARD8 pad1;CARD16 pad2;};
typedef void ( *XmDSMRetrieveInfoProc)(XmDropSiteManagerObject, Widget, ArgList, Cardinal);
typedef void ( *XmNavigatorMoveCBProc)(Widget nav, XtCallbackProc moveCB, XtPointer closure, Boolean setunset);
struct _TransIntrCallbackRec {int ( *func)(Xim, INT16, XPointer, XPointer);XPointer call_data;TransIntrCallbackPtr next;};
struct _XmFormConstraintPart {XmFormAttachmentRec att[4];Widget next_sibling;Boolean sorted;Boolean resizable;Dimension preferred_width;Dimension preferred_height;};
struct _XmIconHeaderClassRec {RectObjClassPart rect_class;XmGadgetClassPart gadget_class;XmIconGadgetClassPart icong_class;XmIconHeaderClassPart iconh_class;};
struct _XmPushButtonClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmLabelClassPart label_class;XmPushButtonClassPart pushbutton_class;};
struct _XmSeparatorGadgetRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;XmSeparatorGadgetPart separator;};
struct _sym_value_entry_type {sym_entry_header_type header;sym_obj_header_type obj_header;unsigned char b_type;unsigned short w_length;char output_state;unsigned char b_table_count;unsigned char b_aux_flags;unsigned char b_arg_type;unsigned char b_data_offset;unsigned char b_pixel_type;unsigned char b_charset;unsigned char b_direction;unsigned char b_max_index;unsigned char b_expr_opr;unsigned int l_circular_ref_chk;unsigned short b_enumeration_value_code;MrmResource_id resource_id;struct _sym_value_entry_type *az_charset_value;struct _sym_value_entry_type *az_next_table_value;struct _sym_value_entry_type *az_first_table_value;struct _sym_value_entry_type *az_exp_op1;struct _sym_value_entry_type *az_exp_op2;union _sym_value_entry_type___sym_value_entry_value_union value;};
struct _xkbGetKbdByNameReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD8 minKeyCode;CARD8 maxKeyCode;BOOL loaded;BOOL newKeyboard;CARD16 found;CARD16 reported;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;};
struct _xkbNewKeyboardNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 oldDeviceID;CARD8 minKeyCode;CARD8 maxKeyCode;CARD8 oldMinKeyCode;CARD8 oldMaxKeyCode;CARD8 requestMajor;CARD8 requestMinor;CARD16 changed;CARD8 detail;CARD8 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;};
struct _xkbSetNamedIndicator {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 ledClass;CARD16 ledID;CARD16 pad1;CARD32 indicator;BOOL setState;BOOL on;BOOL setMap;BOOL createMap;CARD8 pad2;CARD8 flags;CARD8 whichGroups;CARD8 groups;CARD8 whichMods;CARD8 realMods;CARD16 virtualMods;CARD32 ctrls;};
struct _xkbUseExtensionReply {BYTE type;BOOL supported;CARD16 sequenceNumber;CARD32 length;CARD16 serverMajor;CARD16 serverMinor;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _XmMenuSavvyTraitRec {int version;XmMenuSavvyDisableProc disableCallback;XmMenuSavvyGetAcceleratorProc getAccelerator;XmMenuSavvyGetMnemonicProc getMnemonic;XmMenuSavvyGetActivateCBNameProc getActivateCBName;};
struct _XmSyntheticResource {String resource_name;Cardinal resource_size;Cardinal resource_offset;XmExportProc export_proc;XmImportProc import_proc;};
struct _xkbGetGeometryReply {CARD8 type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD32 name;BOOL found;CARD8 pad;CARD16 widthMM;CARD16 heightMM;CARD16 nProperties;CARD16 nColors;CARD16 nShapes;CARD16 nSections;CARD16 nDoodads;CARD16 nKeyAliases;CARD8 baseColorNdx;CARD8 labelColorNdx;};
typedef XmDirection ( *XmCharDirectionProc)(XtPointer, XmTextType, XmStringTag);
typedef void ( *XmDSMCreateInfoProc)(XmDropSiteManagerObject, Widget, ArgList, Cardinal);
typedef void ( *XmDSMUpdateInfoProc)(XmDropSiteManagerObject, Widget, ArgList, Cardinal);
struct _XmCascadeButtonRec {CorePart core;XmPrimitivePart primitive;XmLabelPart label;XmCascadeButtonPart cascade_button;};
struct _XmManagerClassPart {String translations;XmSyntheticResource *syn_resources;int num_syn_resources;XmSyntheticResource *syn_constraint_resources;int num_syn_constraint_resources;XmParentProcessProc parent_process;XtPointer extension;};
struct _XmShellExtClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmDesktopClassPart desktop_class;XmShellExtClassPart shell_class;};
struct _xkbCompatMapNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 changedGroups;CARD16 firstSI;CARD16 nSI;CARD16 nTotalSI;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;};
struct _xkbIndicatorNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 pad1;CARD16 pad2;CARD32 state;CARD32 changed;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _xkbSectionWireDesc {CARD32 name;INT16 top;INT16 left;CARD16 width;CARD16 height;INT16 angle;CARD8 priority;CARD8 nRows;CARD8 nDoodads;CARD8 nOverlays;CARD16 pad;};
struct mc_get_config_descr {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;};
struct mc_set_config_descr {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;};
struct pdc_cache_rtn_block {u_long ic_size;struct cache_config ic_conf;char *ic_start_addr;u_long ic_stride;u_long ic_step;u_long ic_loop;u_long dc_size;struct cache_config dc_conf;char *dc_start_addr;u_long dc_stride;u_long dc_step;u_long dc_loop;u_long it_size;struct itlb_config it_conf;u_long it_sp_addr;u_long it_sp_stride;u_long it_sp_count;char *it_offset;u_long it_stride;u_long it_step;u_long it_loop;u_long dt_size;struct dtlb_config dt_conf;u_long dt_sp_addr;u_long dt_sp_stride;u_long dt_sp_count;char *dt_offset;u_long dt_stride;u_long dt_step;u_long dt_loop;u_long filler[2];};
struct _XmManagerClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;};
struct _XmToggleButtonRec {CorePart core;XmPrimitivePart primitive;XmLabelPart label;XmToggleButtonPart toggle;};
struct _xkbControlsNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 numGroups;CARD16 pad1;CARD32 changedControls;CARD32 enabledControls;CARD32 enabledControlChanges;CARD8 keycode;CARD8 eventType;CARD8 requestMajor;CARD8 requestMinor;CARD32 pad2;};
struct _xkbLatchLockState {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD8 affectModLocks;CARD8 modLocks;BOOL lockGroup;CARD8 groupLock;CARD8 affectModLatches;CARD8 modLatches;CARD8 pad;BOOL latchGroup;INT16 groupLatch;};
typedef int ( *XmbDrawStringProc)(Display *, Drawable, XFontSet, GC, int, int,  char *, int);
struct _XIntrCallbackRec {int ( *func)(Xim, INT16, XPointer, XPointer);XPointer call_data;XIntrCallbackPtr next;};
struct _XmCacheClassPart {XmGadgetCache cache_head;XmCacheCopyProc cache_copy;XmGadgetCacheProc cache_delete;XmCacheCompareProc cache_compare;};
struct _XmDrawnButtonRec {CorePart core;XmPrimitivePart primitive;XmLabelPart label;XmDrawnButtonPart drawnbutton;};
struct _XmLabelClassPart {XtWidgetProc setOverrideCallback;XmMenuProc menuProcs;String translations;XtPointer extension;};
struct _XmLabelGadgetRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;XmLabelGadgetPart label;};
struct _xkbAccessXNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 keycode;CARD16 detail;CARD16 slowKeysDelay;CARD16 debounceDelay;CARD32 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;};
struct _xkbGetNamesReply {BYTE type;BYTE deviceID;CARD16 sequenceNumber;CARD32 length;CARD32 which;CARD8 minKeyCode;CARD8 maxKeyCode;CARD8 nTypes;CARD8 groupNames;CARD16 virtualMods;CARD8 firstKey;CARD8 nKeys;CARD32 indicators;CARD8 nRadioGroups;CARD8 nKeyAliases;CARD16 nKTLevels;CARD32 pad3;};
typedef int ( *XFilterEventProc)(Display *, Window, XEvent *, XPointer);
struct _WMShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;};
struct _XmIconGadgetRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;XmIconGadgetPart icong;};
struct _XmPushButtonRec {CorePart core;XmPrimitivePart primitive;XmLabelPart label;XmPushButtonPart pushbutton;};
union pdc_pat_cell_mod {pdc_pat_cell_proc_t proc;pdc_pat_cell_mc_t mem;pdc_pat_cell_ca_t ca;pdc_pat_cell_ba_t ba;};
typedef Boolean ( *XtSetValuesFunc)(Widget, Widget, Widget, ArgList, Cardinal *);
struct _XmProtocolPart {XtCallbackRec pre_hook;XtCallbackRec post_hook;XtCallbackList callbacks;Atom atom;Boolean active;};
struct _xkbNamesNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 pad1;CARD16 changed;CARD8 firstType;CARD8 nTypes;CARD8 firstLevelName;CARD8 nLevelNames;CARD8 pad2;CARD8 nRadioGroups;CARD8 nAliases;CARD8 changedGroupNames;CARD16 changedVirtualMods;CARD8 firstKey;CARD8 nKeys;CARD32 changedIndicators;CARD32 pad3;};
struct _xkbRowWireDesc {INT16 top;INT16 left;CARD8 nKeys;BOOL vertical;CARD16 pad;};
struct diag0_buff_type {struct diag0_buff_type *next_buff;space_array_type space_array[10];port_num_type send_port_num;io_subq_type send_subq;io_message_type req_msg;io_message_type reply_msg;int delay_time;int safe_lock;};
typedef void ( *XtDoChangeProc)(Widget, WidgetList, Cardinal *, WidgetList, Cardinal *, XtPointer);
typedef void ( *XtEventHandler)(Widget, XtPointer, XEvent *, Boolean *);
struct _XOMMethodsRec {XCloseOMProc close;XSetOMValuesProc set_values;XGetOMValuesProc get_values;XCreateOCProc create_oc;};
struct _XkbBellNotify {int type;unsigned int serial;int send_event;Display *display;Time time;int xkb_type;int device;int percent;int pitch;int duration;int bell_class;int bell_id;Atom name;Window window;int event_only;};
struct _XlcCharSetRec {char *name;XrmQuark xrm_name;char *encoding_name;XrmQuark xrm_encoding_name;XlcSide side;int char_size;int set_size;char *ct_sequence;XlcGetCSValuesProc get_values;int string_encoding;UDCArea udc_area;int udc_area_num;};
struct _XmShellExtRec {ObjectPart object;XmExtPart ext;XmDesktopPart desktop;XmShellExtPart shell;};
typedef Boolean ( *SetValuesProc)(Widget, Widget, Widget, ArgList, Cardinal *);
struct _XmManagerRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;};
struct _xkbMapNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 ptrBtnActions;CARD16 changed;CARD8 minKeyCode;CARD8 maxKeyCode;CARD8 firstType;CARD8 nTypes;CARD8 firstKeySym;CARD8 nKeySyms;CARD8 firstKeyAct;CARD8 nKeyActs;CARD8 firstKeyBehavior;CARD8 nKeyBehaviors;CARD8 firstKeyExplicit;CARD8 nKeyExplicit;CARD8 firstModMapKey;CARD8 nModMapKeys;CARD8 firstVModMapKey;CARD8 nVModMapKeys;CARD16 virtualMods;CARD16 pad1;};
struct authsys_parms {u_long aup_time;char *aup_machname;uid_t aup_uid;gid_t aup_gid;u_int aup_len;gid_t *aup_gids;};
struct mc_get_config {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;};
struct mc_set_config {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;int Name_offset;int Name_length;};
struct nlm4_lockargs {netobj cookie;bool_t block;bool_t exclusive;struct nlm4_lock lock;bool_t reclaim;int32 state;};
struct pst_processor {uint32_t psp_idx;uint32_t psp_fsreads;uint32_t psp_fswrites;uint32_t psp_nfsreads;uint32_t psp_nfswrites;uint32_t psp_bnfsread;uint32_t psp_bnfswrite;uint32_t psp_phread;uint32_t psp_phwrite;uint32_t psp_runocc;uint32_t psp_runque;uint32_t psp_sysexec;uint32_t psp_sysread;uint32_t psp_syswrite;uint32_t psp_sysnami;uint32_t psp_sysiget;uint32_t psp_dirblk;uint32_t psp_semacnt;uint32_t psp_msgcnt;uint32_t psp_muxincnt;uint32_t psp_muxoutcnt;uint32_t psp_ttyrawcnt;uint32_t psp_ttycanoncnt;uint32_t psp_ttyoutcnt;struct pscoproc psp_coprocessor;uint32_t psp_iticksperclktick;uint32_t psp_sysselect;struct pstcycles psp_idlecycles;double psp_avg_1_min;double psp_avg_5_min;double psp_avg_15_min;int32_t psp_cpu_time[15];};
typedef void ( *XPFinishProc)(Display *display, XPContext context, XPGetDocStatus status, XPointer client_data);
typedef void ( *XtActionProc)(Widget, XEvent *, String *, Cardinal *);
typedef void ( *XtDestructor)(XtAppContext, XrmValue *, XtPointer, XrmValue *, Cardinal *);
struct _FillPolyReq {CARD8 reqType;BYTE pad;CARD16 length;CARD32 drawable;CARD32 gc;BYTE shape;BYTE coordMode;CARD16 pad1;};
struct _PutImageReq {CARD8 reqType;CARD8 format;CARD16 length;CARD32 drawable;CARD32 gc;CARD16 width;CARD16 height;INT16 dstX;INT16 dstY;CARD8 leftPad;CARD8 depth;CARD16 pad;};
struct _XcmsCmapRec {Colormap cmapID;Display *dpy;Window windowID;Visual *visual;struct _XcmsCCC *ccc;struct _XcmsCmapRec *pNext;};
struct _XkbNamesRec {Atom keycodes;Atom geometry;Atom symbols;Atom types;Atom compat;Atom vmods[16];Atom indicators[32];Atom groups[4];XkbKeyNamePtr keys;XkbKeyAliasPtr key_aliases;Atom *radio_groups;Atom phys_symbols;unsigned char num_keys;unsigned char num_key_aliases;unsigned short num_rg;};
struct __str_struct {struct __strs __strs;struct __strs2 __strs2;struct __strs3 __strs3;struct __strs4 __strs4;};
struct _xkbAnyEvent {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 pad1;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct kd_getnewbuf {kd_t kd_struct;kptr_t bp;kptr_t b_vp;int32_t b_bufsize;bptype_t b_bptype;short spad;};
struct mc_get_stats {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;};
typedef Boolean ( *PosToXYProc)(XmTextWidget, XmTextPosition, Position *, Position *);
typedef XIM ( *XOpenIMProc)(XLCd, Display *, XrmDatabase, char *, char *);
typedef XOM ( *XOpenOMProc)(XLCd, Display *, XrmDatabase,  char *,  char *);
struct _XkbKeyType {XkbModsRec mods;unsigned char num_levels;unsigned char map_count;XkbKTMapEntryPtr map;XkbModsPtr preserve;Atom name;Atom *level_names;};
struct _XkbOverlay {Atom name;XkbSectionPtr section_under;unsigned short num_rows;unsigned short sz_rows;XkbOverlayRowPtr rows;XkbBoundsPtr bounds;};
struct _XkbSection {Atom name;unsigned char priority;short top;short left;unsigned short width;unsigned short height;short angle;unsigned short num_rows;unsigned short num_doodads;unsigned short num_overlays;unsigned short sz_rows;unsigned short sz_doodads;unsigned short sz_overlays;XkbRowPtr rows;XkbDoodadPtr doodads;XkbBoundsRec bounds;struct _XkbSection___XkbOverlay *overlays;};
struct mc_identify {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;};
struct nlm4_holder {bool_t exclusive;int32 svid;netobj oh;uint64 l_offset;uint64 l_len;};
struct rex_ttymode {struct sgttyb basic;struct tchars more;struct ltchars yetmore;u_long andmore;};
typedef Boolean ( *XtArgsFunc)(Widget, ArgList, Cardinal *);
struct _XLockInfo {xmutex_t mutex;int reply_bytes_left;int reply_was_read;struct _XCVList *reply_awaiters;struct _XCVList **reply_awaiters_tail;struct _XCVList *event_awaiters;struct _XCVList **event_awaiters_tail;int reply_first;int locking_level;xthread_t locking_thread;xcondition_t cv;xthread_t reading_thread;xthread_t conni_thread;xcondition_t writers;int num_free_cvls;struct _XCVList *free_cvls;void ( *pop_reader)(Display *, struct _XCVList **, struct _XCVList ***);struct _XCVList *( *push_reader)(Display *, struct _XCVList ***);void ( *condition_wait)(xcondition_t, xmutex_t);void ( *internal_lock_display)(Display *, int);void ( *condition_signal)(xcondition_t);void ( *condition_broadcast)(xcondition_t);void ( *lock_wait)(Display *);void ( *user_lock_display)(Display *);void ( *user_unlock_display)(Display *);struct _XCVList *( *create_cvl)(Display *);};
struct dma_buflet {u_char mem[64];struct dma_buflet *next;space_t b_sid;anyptr b_addr;uint32_t b_count;};
struct kd_memfree {kd_t kd_struct;kptr_t rp;physpfn_t r_nvalid;uint32_t pfn;};
struct lwp_status {int64_t lwp_idx;int64_t lwp_lwpid;int64_t lwp_pid;int64_t lwp_flag;int64_t lwp_stat;int64_t lwp_wchan;int64_t lwp_pri;int64_t lwp_cpu;int64_t lwp_spu;int64_t lwp_user_suspcnt;struct pstsigset lwp_sig;struct pstsigset lwp_sigmask;int64_t lwp_schedpolicy;int64_t lwp_ticksleft;int64_t lwp_start;uint64_t lwp_minorfaults;uint64_t lwp_majorfaults;uint64_t lwp_ndeact;uint64_t lwp_inblock;uint64_t lwp_oublock;uint64_t lwp_ioch;uint64_t lwp_msgsnd;uint64_t lwp_msgrcv;uint64_t lwp_nsignals;uint64_t lwp_nvcsw;uint64_t lwp_nivcsw;uint64_t lwp_syscall;int64_t lwp_syscall_code;int64_t lwp_utime;int64_t lwp_stime;struct lwpcycles lwp_usercycles;struct lwpcycles lwp_systemcycles;struct lwpcycles lwp_interruptcycles;int64_t lwp_valid;};
struct mc_get_mib {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;int Path_offset;int Path_length;int Index_offset;};
struct mc_set_mib {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;int Path_offset;int Path_length;int Index_offset;};
struct nis_result {nis_error status;struct nis_result___4B6B45C3F1C3815D68D653B8D499AE33 objects;netobj cookie;u_long zticks;u_long dticks;u_long aticks;u_long cticks;};
struct nis_server {nis_name name;struct nis_server___DA92845B88BF4FFBAAA2281E50DC5AF5 ep;u_long key_type;netobj pkey;};
struct radix_node {uint32_t rn_mklist;uint32_t rn_p;char rn_b;u_int rn_bmask;u_char rn_flags;union radix_node___CC52EDE493CB4C10BEB5E770D2F4C875 rn_u;};
union sense_data {struct xsense_aligned r_sense1a;struct sense_2_aligned r_sense2a;struct xsense r_sense1;struct sense_2 r_sense2;};
struct desparams {u_char des_key[8];enum desdir des_dir;enum desmode des_mode;u_char des_ivec[8];unsigned int des_len;union desparams___F38C3328E965CE3ADB16864418918AD0 UDES;};
struct fd_result {nis_error status;nis_name source;struct fd_result___E188DDB4946479B1B04909415F6D7A2E dir_data;struct fd_result___864956CB4DA79F92CA310E20E4E9B271 signature;};
struct hdlregion {space_t r_space;prot_t r_prot;caddr_t r_vaddr;u_short r_hdlflags;};
typedef void ( *DrawProc)(XmTextWidget, LineNum, XmTextPosition, XmTextPosition, XmHighlightMode);
typedef XmTextPosition ( *ScanProc)(XmTextSource, XmTextPosition, XmTextScanType, XmTextScanDirection, int, int);
struct copyresp {int cp_cmd;cred_t *cp_cr;uint cp_id;uint cp_flag;mblk_t *cp_private;ioc_pad cp_rv;uint cp_pad1;int cp_pad2;int cp_filler[4];};
struct ifinfo_s {struct ifinfo_s *ifi_hash_next;queue_t *ifi_rq;queue_t *ifi_wq;char *ifi_ill;char ifi_name[16];uint ifi_name_length;uint ifi_version;uint32_t ifi_addr[16];uint ifi_ppa;uchar_t ifi_sap[4];int ifi_sap_length;int ifi_hdr_length;char *ifi_reserved0;char *ifi_reserved1;char *ifi_reserved2;char *ifi_reserved3;};
struct ipc_perm {uid_t uid;gid_t gid;uid_t cuid;gid_t cgid;mode_t mode;unsigned short seq;key_t key;unsigned short __ndx;unsigned short __wait;char pad[20];};
struct shmid_ds {struct ipc_perm shm_perm;int shm_segsz;struct shmid_ds__vas *shm_vas;pid_t shm_lpid;pid_t shm_cpid;shmatt_t shm_nattch;shmatt_t shm_cnattch;time_t shm_atime;time_t shm_dtime;time_t shm_ctime;char shm_pad[24];};
struct statsvar {struct statsvar___7FCA211C9072D2949954B3DB78BFDDCD cp_time;struct statsvar___BB7C6D2B3C1E1AB741C949E9CDEFD86D dk_xfer;u_int v_pgpgin;u_int v_pgpgout;u_int v_pswpin;u_int v_pswpout;u_int v_intr;int if_ipackets;int if_ierrors;int if_opackets;int if_oerrors;int if_collisions;u_int v_swtch;int avenrun[3];struct timeval boottime;struct timeval curtime;};
struct copyreq {int cq_cmd;cred_t *cq_cr;uint cq_id;int cq_flag;mblk_t *cq_private;ioc_pad cq_ad;uint cq_size;int cq_filler[4];};
struct reclock {netobj cookie;bool_t block;bool_t exclusive;struct lockx lock;bool_t reclaim;int state;int rel;int w_flag;struct reclock___08E871996A29648E8758F300DFC8D580 connect_info;struct reclock *prev;struct reclock *nxt;struct reclock *wait_prev;struct reclock *wait_nxt;struct reclock *mnt_prev;struct reclock *mnt_nxt;struct reclock *pre_le;char *pre_fe;};
struct sockbuf {u_int sb_cc;u_int sb_hiwat;u_int sb_mbcnt;u_int sb_mbmax;u_int sb_lowat;MBLKP sb_mb;void *sb_sel;short sb_timeo;u_short sb_flags;struct sockbuf__socket *sb_so;void ( *sb_wakeup)();caddr_t sb_wakearg;};
struct hw_ift {hw_dlpi_t hp_dlpi;uint32_t mac_type;uint32_t llc_flags;uint32_t mjr_num;uint32_t nm_id;uint32_t instance_num;uint32_t mtu;char *name;uint8_t hdw_path[100];uint32_t hdw_state;uint32_t mac_addr_len;uint8_t mac_addr[20];uint32_t features;uint8_t *arpmod_name;uint32_t ppa;uint32_t watch_timer;uint32_t reserved2;lock_t *hwift_lock;struct hw_ift *next;};
struct ipovly {caddr_t ih_next;caddr_t ih_prev;u_char ih_x1;u_char ih_pr;u_short ih_len;struct in_addr ih_src;struct in_addr ih_dst;};
struct statfs {int32_t f_type;int32_t f_bsize;int32_t f_blocks;int32_t f_bfree;int32_t f_bavail;int32_t f_files;int32_t f_ffree;fsid_t f_fsid;int32_t f_magic;int32_t f_featurebits;int32_t f_spare[4];site_t f_cnode;int16_t f_pad;};
struct vifctl {vifi_t vifc_vifi;u_char vifc_flags;u_char vifc_threshold;u_int vifc_rate_limit;struct in_addr vifc_lcl_addr;struct in_addr vifc_rmt_addr;};
struct icont {ushort icc_mode;short icc_nlink;struct acl_entry_internal_lsb icc_acl_lsb[13];struct acl_entry_internal_msb icc_acl_msb[13];char icc_spare[3];int32_t icc_ciflags;};
struct ifnet {char *if_name;short if_unit;u_short if_mtu;int if_index;u_int if_flags;short if_timer;short if_pad;int if_metric;struct ifnet__ifaddr *if_addrlist;struct ifnet__ifqueue if_snd;lock_t *if_slock;int ( *if_init)();int ( *if_output)();int ( *if_ioctl)();int ( *if_control)();int ( *if_watchdog)();int if_ipackets;int if_ierrors;int if_opackets;int if_oerrors;int if_collisions;lock_t *if_stat_lock;struct ifnet *if_next;};
struct utmpx {char ut_user[24];char ut_id[4];char ut_line[12];pid_t ut_pid;short ut_type;struct utmpx____exit_status ut_exit;unsigned short ut_reserved1;struct timeval ut_tv;char ut_host[64];uint32_t ut_addr;char ut_reserved2[12];};
struct sync {lock_t *s_lock;int count;intptr_t sa_fill1;struct sync__kthread *wait_list;intptr_t sa_fill2[2];u_int sa_fill2b[2];ulong_t sa_fill2c[3];u_int sa_fill2d[16];int order;int sa_fill3;};
struct utmp {char ut_user[8];char ut_id[4];char ut_line[12];pid_t ut_pid;short ut_type;struct utmp__exit_status ut_exit;unsigned short ut_reserved1;time_t ut_time;char ut_host[16];uint32_t ut_addr;};
struct fss {cpu_t fs_grate;cpu_t fs_crate;int fs_pri;int fs_id;int fs_usage;char fs_active;u_char fs_spare1;cpu_t fs_prev;int fs_limit;cpu_t fs_ticks;cpu_t fs_pticks;ushort fs_notused1;ushort fs_flag;ushort fs_notused2;ushort fs_notused3;u_int fs_tticks;int fs_curr_debt[2];int fs_old_debt[2];};
struct dma_A_chain___9BFEA53F2269C7B565EDDA23D08FFFF2___9FFBE6516481B01D482839DFCF166653 {caddr_t io_chain_head;dma_A_pquad_type *chain_tail;dma_A_pquad_type *bq_head;dma_A_pquad_type *bq_tail;dma_A_pquad_type *host_chain_head;space_t data_sid;anyptr data_vba;uint32_t count;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___06CC3EE1C785FF4C65A358F81D4770E3 {CARD32 pad00;CARD32 time;CARD32 root;CARD32 event;CARD32 child;INT16 rootX;INT16 rootY;INT16 eventX;INT16 eventY;KeyButMask state;BOOL sameScreen;BYTE pad1;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F0E773388BCCF7D4D022A846E01785CC {CARD32 pad00;CARD32 event;CARD32 window;CARD32 aboveSibling;INT16 x;INT16 y;CARD16 width;CARD16 height;CARD16 borderWidth;BOOL override;BYTE bpad;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F0EDD24BB588AB1974F0CC5CC47343A0 {CARD32 pad00;CARD32 parent;CARD32 window;INT16 x;INT16 y;CARD16 width;CARD16 height;CARD16 borderWidth;BOOL override;BYTE bpad;};
struct _01A217455DF1EC91AD6266E2E71665FD {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window focus;XID deviceid;Time time;CARD8 revertTo;CARD8 pad00;CARD16 pad01;};
struct _02BF9CECF1D2B5E6E55E2C03E1C2E954 {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window window;CARD32 extensionMask;XID deviceid;};
struct _03C803DDC9061B143F519D4D73BD5571 {CARD8 reqType;BOOL ownerEvents;CARD16 length;CARD32 grabWindow;CARD16 eventMask;BYTE pointerMode;BYTE keyboardMode;CARD32 confineTo;CARD32 cursor;CARD8 button;BYTE pad;CARD16 modifiers;};
struct _0A94BDF67700F0EDACCA5D00231D7516 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src1;xieTypPhototag src2;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;CARD8 operator;CARD8 bandMask;xieTypFloat constant0;xieTypFloat constant1;xieTypFloat constant2;};
struct _0E3097AA2FBED02B33E6A3FF3D033D09 {unsigned char dialog_type;unsigned char default_type;Boolean internal_pixmap;Boolean minimize_buttons;unsigned char message_alignment;XmString message_string;Widget message_wid;Pixmap symbol_pixmap;Widget symbol_wid;XmString ok_label_string;XtCallbackList ok_callback;Widget ok_button;XmString cancel_label_string;XtCallbackList cancel_callback;XmString help_label_string;Widget help_button;Widget separator;};
struct _0F4B06D36BC906735A699C1D59FCE038 {BYTE type;BOOL sameScreen;CARD16 sequenceNumber;CARD32 length;CARD32 child;INT16 dstX;INT16 dstY;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;};
struct _13A9DBF3EA1FE7F1698AD8D67A77FD73 {CARD16 elemType;CARD16 elemLength;CARD32 drawable;INT16 srcX;INT16 srcY;CARD16 width;CARD16 height;CARD32 fill;CARD32 bitPlane;BOOL notify;CARD8 pad[3];};
struct _18654165D8B17DA3E357B0DE9180FFF7 {CARD8 reqType;CARD8 opcode;CARD16 length;CARD32 nameSpace;CARD32 floID;xieTypPhototag element;BOOL final;CARD8 bandNumber;CARD32 byteCount;};
struct _1BAE1FE6DB6FC78B3C7B94C189E05017 {CARD8 class;CARD8 id;CARD16 length;CARD8 key;CARD8 auto_repeat_mode;INT8 click;INT8 percent;INT16 pitch;INT16 duration;CARD32 led_mask;CARD32 led_values;};
struct _1BB85DE3512B339811D8B67FC16B212D {BYTE type;CARD8 deviceid;CARD16 sequenceNumber;KeyButMask device_state;CARD8 num_valuators;CARD8 first_valuator;INT32 valuator0;INT32 valuator1;INT32 valuator2;INT32 valuator3;INT32 valuator4;INT32 valuator5;};
struct _286EA9114F2F3A904E3DC91FCEB716A0 {port_num_type locking_port;io_subq_type locking_subq;bit8 asyn_event_type;io_subq_type event_subqueue;port_num_type event_port_num;boolean poweron_request;boolean w_poweron_reply;boolean reset_request;integer reset_msg_tron;short reset_msg_uid;io_subq_type reset_msg_subq;};
struct _2A859DA02CD5E3593B5918B42FA7FFEB {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 destination;CARD8 deviceid;BOOL propagate;CARD16 count;CARD8 num_events;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _2E381990D243D58AF2A1DAAABF4281C8 {BYTE type;CARD8 backingStore;CARD16 sequenceNumber;CARD32 length;CARD32 visualID;CARD16 class;CARD8 bitGravity;CARD8 winGravity;CARD32 backingBitPlanes;CARD32 backingPixel;BOOL saveUnder;BOOL mapInstalled;CARD8 mapState;BOOL override;CARD32 colormap;CARD32 allEventMasks;CARD32 yourEventMask;CARD16 doNotPropagateMask;CARD16 pad;};
struct _3458ECA1217AB3E004713ABACF7C2EF2 {io_subq_type reply_subq;addr_class_type data_class;data_ptr_type data_ptr;int data_len;dm_io_func_type func;uintptr_t scratch;};
struct _3518B1C16AD615E8887B1326F3EF5649 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;xieTypExportNotify notify;CARD8 pad;xieTypEncodeTechnique encodeTechnique;CARD16 lenParams;};
struct _369006661770D1A820C272E8EA3E80F7 {int reason;XEvent *event;Atom selection;XtEnum operation;int flags;XtPointer transfer_id;XtPointer destination_data;XtPointer location_data;Time time;};
struct _37BE2491590EE7EB76B44447C3CB76CA {BYTE type;CARD8 depth;CARD16 sequenceNumber;CARD32 length;CARD32 root;INT16 x;INT16 y;CARD16 width;CARD16 height;CARD16 borderWidth;CARD16 pad1;CARD32 pad2;CARD32 pad3;};
struct _37CF6FD3D8604C440825361FBCF768B5 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 grabWindow;CARD16 event_count;CARD16 modifiers;CARD8 modifier_device;CARD8 grabbed_device;CARD8 key;BYTE this_device_mode;BYTE other_devices_mode;BOOL ownerEvents;BYTE pad1;BYTE pad2;};
struct _3B81704CAFF80915670BCDC93E5E5502 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 srcDrawable;CARD32 dstDrawable;CARD32 gc;INT16 srcX;INT16 srcY;INT16 dstX;INT16 dstY;CARD16 width;CARD16 height;};
struct _3C51A411EB84D0C6D8E8C9D21FE4898B {int type;unsigned int serial;int send_event;Display *display;XSyncAlarm alarm;XSyncValue counter_value;XSyncValue alarm_value;Time time;XSyncAlarmState state;};
struct _43F413DFE76D84785171E4F932967C4F {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD8 merge;CARD8 pad;xieTypLUT lut;CARD32 start0;CARD32 start1;CARD32 start2;};
struct _441B4C0D047DF063F5C6816C3F022891 {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;XmTraversalChildrenProc traversal_children;XmObjectAtPointProc object_at_point;};
struct _45331FD382D3B76DE50383933A2C35C9 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 srcDrawable;CARD32 dstDrawable;CARD32 gc;INT16 srcX;INT16 srcY;INT16 dstX;INT16 dstY;CARD16 width;CARD16 height;CARD32 bitPlane;};
struct _46D157C3B2262130CAD8633945DA87DB {CARD8 reqType;CARD8 opcode;CARD16 length;xieTypPhotospace nameSpace;CARD32 floID;CARD16 numElements;BOOL notify;CARD8 pad;};
struct _473FB80C7F0EDE4D4A756518E07F01B9 {XExtData *ext_data;struct _XPrivate *private1;int fd;int private2;int proto_major_version;int proto_minor_version;char *vendor;XID private3;XID private4;XID private5;int private6;XID ( *resource_alloc)();int byte_order;int bitmap_unit;int bitmap_pad;int bitmap_bit_order;int nformats;ScreenFormat *pixmap_format;int private8;int release;struct _XPrivate *private9;struct _XPrivate *private10;int qlen;unsigned int last_request_read;unsigned int request;XPointer private11;XPointer private12;XPointer private13;XPointer private14;unsigned int max_request_size;struct _XrmHashBucketRec *db;int ( *private15)();char *display_name;int default_screen;int nscreens;Screen *screens;unsigned int motion_buffer;unsigned int private16;int min_keycode;int max_keycode;XPointer private17;XPointer private18;int private19;char *xdefaults;};
struct _4C2068F4FA5FD804D09687C78D10F64A {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;xieTypExportNotify notify;CARD8 pad1;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;CARD16 pad2;};
struct _4F763A7D3653D2254F75B054CBA6F0C5 {CARD8 class;CARD8 id;CARD16 length;CARD16 pitch;CARD16 duration;CARD32 led_mask;CARD32 led_values;BOOL global_auto_repeat;CARD8 click;CARD8 percent;BYTE pad;BYTE auto_repeats[32];};
struct _5167EADB868224F0F55FBEC36E2D90F1 {r_machine_t r_machine;r_arch_t r_arch;r_os_t r_os;r_asmodel_t r_asmodel;r_magic_t r_magic;};
struct _5209941CB7D0C10FD4F27E8B15AD14E1 {Widget list_label;XmString list_label_string;Widget list;XmString *list_items;int list_item_count;int list_visible_item_count;int list_selected_item_position;Widget selection_label;XmString selection_label_string;Widget text;XmString text_string;short text_columns;Widget work_area;Widget separator;Widget ok_button;XmString ok_label_string;Widget apply_button;XmString apply_label_string;XmString cancel_label_string;Widget help_button;XmString help_label_string;XtCallbackList ok_callback;XtCallbackList apply_callback;XtCallbackList cancel_callback;XtCallbackList no_match_callback;XtAccelerators text_accelerators;Boolean must_match;Boolean adding_sel_widgets;Boolean minimize_buttons;unsigned char dialog_type;unsigned char child_placement;};
struct _53791A33E2911636F452B242C84B4B8B {CARD8 reqType;CARD8 opcode;CARD16 length;CARD32 nameSpace;CARD32 floID;CARD32 maxBytes;xieTypPhototag element;BOOL terminate;CARD8 bandNumber;};
struct _53B2C5E872CF4691EFE90F887D66B7FD {CARD8 reqType;BOOL exposures;CARD16 length;CARD32 window;INT16 x;INT16 y;CARD16 width;CARD16 height;};
struct _5763F2EC7349805D26B2ED34581CC2B6 {CARD8 reqType;CARD8 ReqType;CARD16 length;CARD32 grabWindow;CARD8 grabbed_device;CARD8 modifier_device;CARD16 event_count;CARD16 modifiers;BYTE this_device_mode;BYTE other_devices_mode;CARD8 button;BOOL ownerEvents;BYTE pad1;BYTE pad2;};
struct _5E29C5FF94304EAD83140C47151323A4 {CARD8 reqType;BYTE ordering;CARD16 length;CARD32 gc;INT16 xOrigin;INT16 yOrigin;};
struct _600CE1F1415CC4FBB5A956C0A4B10C91 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;CARD8 bandMask;CARD8 kernelSize;xieTypConvolveTechnique convolve;CARD16 lenParams;};
struct _603DBFA11DE2EC77704AC2D2BE78752D {CARD16 elemType;CARD16 elemLength;xieTypPhototag src1;xieTypPhototag src2;xieTypPhototag alpha;CARD16 pad1;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;CARD8 bandMask;CARD8 pad2;xieTypFloat constant0;xieTypFloat constant1;xieTypFloat constant2;xieTypFloat alphaConst;};
struct _616DFE8EE921B679729534094133FEFF {BYTE type;BOOL sameScreen;CARD16 sequenceNumber;CARD32 length;CARD32 root;CARD32 child;INT16 rootX;INT16 rootY;INT16 winX;INT16 winY;CARD16 mask;CARD16 pad1;CARD32 pad;};
struct _65A7BC70F11250CC66A1AAC499DD4DF0 {char *geometry;XtCreatePopupChildProc create_popup_child_proc;XtGrabKind grab_kind;Boolean spring_loaded;Boolean popped_up;Boolean allow_shell_resize;Boolean client_specified;Boolean save_under;Boolean override_redirect;XtCallbackList popup_callback;XtCallbackList popdown_callback;Visual *visual;};
struct _6F769F3251074F30549E39033985F8DC {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD8 bandMask;CARD8 pad;CARD32 levels0;CARD32 levels1;CARD32 levels2;xieTypDitherTechnique dither;CARD16 lenParams;};
struct _7250734D77F79F0949305E641023FE62 {CARD8 reqType;BOOL propagate;CARD16 length;CARD32 destination;CARD32 eventMask;xEvent event;};
struct _75C8455111F1AB4D326C29F40C651C63 {XmbInitProc mbinit;XmbCharProc mbchar;XmbFinishProc mbfinish;XlcNameProc lcname;XrmDestroyProc destroy;};
struct _79FC17A0C7A3F31E1105D33CC8C2AA30 {CARD8 reqType;BOOL ownerEvents;CARD16 length;CARD32 grabWindow;CARD16 eventMask;BYTE pointerMode;BYTE keyboardMode;CARD32 confineTo;CARD32 cursor;CARD32 time;};
struct _81227E6A2E975B2588700A3A20196845 {BYTE type;CARD8 pad0;CARD16 sequenceNumber;CARD32 length;CARD16 power_level;BOOL state;CARD8 pad1;CARD32 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;};
struct _94FA839E2A2E2CDB2FF04022E6E0CAA1 {CARD8 reqType;BOOL ownerEvents;CARD16 length;CARD32 grabWindow;CARD32 time;BYTE pointerMode;BYTE keyboardMode;CARD16 pad;};
struct _99446BF9ACEAEEC04402885045FD1BFF {int *ss_status_ptr;FILE *ss_output_strm;int ss_output_fd;FILE *ss_error_strm;int ss_error_fd;nl_catd ss_msg_cat;char *ss_name;char *ss_binary_msg_ptr;char *ss_options_ptr;ss_N_fmt_flag_type ss_n_fmt_flag;char *time_buffer;int time_buffer_length;int output_file_count;fd_result output_files[1];int print_op;int user_count;user_acct_result *users;int inited_flag;int nettl_version;};
struct _A0124A5B65531604F00B7B938AEFE7E2 {io_subq_type reply_subq;port_num_type mgr_port_num;ulong_t config_addr_3;ulong_t config_addr_2;ulong_t config_addr_1;port_num_type lm_port_num;ent_id_type ent_id;boolean ent_id_valid;int mgr_index;};
struct _A55E8F963C5B6AC40AFF9FD81070CC8F {BYTE type;BYTE deviceid;CARD16 sequenceNumber;CARD32 time;CARD8 num_keys;CARD8 num_buttons;CARD8 num_valuators;CARD8 classes_reported;CARD8 buttons[4];CARD8 keys[4];INT32 valuator0;INT32 valuator1;INT32 valuator2;};
struct _AC5C9E6D1F0E0913CA2851FF4338E565 {CARD16 elemType;CARD16 elemLength;BOOL notify;xieTypDataClass class;CARD16 pad;CARD32 width0;CARD32 width1;CARD32 width2;CARD32 height0;CARD32 height1;CARD32 height2;CARD32 levels0;CARD32 levels1;CARD32 levels2;xieTypDecodeTechnique decodeTechnique;CARD16 lenParams;};
struct _B318B9FE24BEDCDC1EF7B4E1F2E85F51 {uintptr_t scratch1;uintptr_t scratch2;io_subq_type reply_subq;bit8 function;bit8 target;bit8 id_index;bit8 tag_index;int timer;addr_class_type cmd_class;addr_class_type data_class;addr_class_type status_class;data_ptr_type cmd_ptr;data_ptr_type data_ptr;data_ptr_type status_ptr;int msg_out_len;int cdb_len;int data_len;int status_len;int sense_len;};
struct _B4A4B66D2E6C3EE1B1D54A215021FA61 {_LC_object_t hdr;int ( *strcoll)( char *,  char *, _LC_collate_t *);size_t ( *strxfrm)(char *,  char *, size_t, _LC_collate_t *);int ( *wcscoll)( unsigned int *,  unsigned int *, _LC_collate_t *);size_t ( *wcsxfrm)(unsigned int *,  unsigned int *, size_t, _LC_collate_t *);int ( *fnmatch)( char *,  char *,  char *, int, _LC_collate_t *);int ( *regcomp)(regex_t *,  char *, int, _LC_collate_t *);size_t ( *regerror)(int,  regex_t *, char *, size_t, _LC_collate_t *);int ( *regexec)( regex_t *,  char *, size_t, regmatch_t *, int, _LC_collate_t *);void ( *regfree)(regex_t *, _LC_collate_t *);_LC_collate_t *( *init)(_LC_locale_t *);void *data;};
struct _B6C2B50A2126E272B3960EB4DC4F6604 {BYTE type;CARD8 pad0;CARD16 sequenceNumber;CARD32 length;BOOL capable;CARD8 pad1;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _BC0C03DE100E0ADBA9BE7AF77D01715A {CARD8 reqType;BYTE pad;CARD16 length;CARD32 srcWid;CARD32 dstWid;INT16 srcX;INT16 srcY;};
struct _C01B768C719C076F1885128ECB0E2F3B {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;xieTypDataClass class;CARD8 precision;CARD32 colormap;};
struct _C19E6F380814408DFD31968534DDA3C5 {CARD8 reqType;BYTE pad;CARD16 length;INT16 accelNum;INT16 accelDenum;INT16 threshold;BOOL doAccel;BOOL doThresh;};
struct _C32D75228195D08F6D42072DC87ED14F {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;BOOL present;CARD8 major_opcode;CARD8 first_event;CARD8 first_error;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _C501B637C9D373C8193961C468F52341 {CARD16 elemType;CARD16 elemLength;CARD32 drawable;INT16 srcX;INT16 srcY;CARD16 width;CARD16 height;CARD32 fill;BOOL notify;CARD8 pad[3];};
struct _CF5241A54E1FE5A7851EE8B8F8118B39 {void ( *destroy)(XIC);void ( *set_focus)(XIC);void ( *unset_focus)(XIC);char *( *set_values)(XIC, XIMArg *);char *( *get_values)(XIC, XIMArg *);char *( *mb_reset)(XIC);unsigned int *( *wc_reset)(XIC);int ( *mb_lookup_string)(XIC, XKeyEvent *, char *, int, KeySym *, int *);int ( *wc_lookup_string)(XIC, XKeyEvent *, unsigned int *, int, KeySym *, int *);};
struct _D14CA9F2C40E9D75D49C7FD5AB893FCE {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD16 pad;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;xieTypMathOp operator;CARD8 bandMask;};
struct _D4BA9A6E2D32E4BB8FEE36323FB115EB {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window window;Time start;Time stop;XID deviceid;};
struct _D53EE25F80C41C95CC04B700465E64D8 {CARD8 reqType;BYTE nChars;CARD16 length;CARD32 drawable;CARD32 gc;INT16 x;INT16 y;};
union _D9E0BCFF4A8F2DAB04E179D1361C1258 {void *any;fcp_cdio_log_info_t *cd;fcp_bh_log_info_t *bh;fcp_dev_log_info_t *dv;fcp_mux_log_info_t *mx;fcp_array_log_info_t *ar;};
struct _E32A7B8F021520E59B05D2002875B75A {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;xieTypExportNotify notify;xieTypOrientation bandOrder;CARD32 start0;CARD32 start1;CARD32 start2;CARD32 length0;CARD32 length1;CARD32 length2;};
struct _F3F3BF8BE106A877DE7FC4D65D49358E {CARD8 class;CARD8 id;CARD16 length;INT8 percent;BYTE pad1;BYTE pad2;BYTE pad3;INT16 pitch;INT16 duration;};
struct _F52D9FC92091A8183F87E95DDBDC622D {CARD8 reqType;BYTE pad;CARD16 length;CARD32 srcWid;CARD32 dstWid;INT16 srcX;INT16 srcY;CARD16 srcWidth;CARD16 srcHeight;INT16 dstX;INT16 dstY;};
struct _F8536B884003ADBD90188302B8AD267C {CARD8 reqType;BYTE pad;CARD16 length;CARD32 window;CARD16 nAtoms;INT16 nPositions;};
struct _FE9896265ABA69989620FFBB2F6B5FBF {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;};
struct _FEC8B8888F3B689040694BF1F630E941 {CARD8 reqType;BOOL ownerEvents;CARD16 length;CARD32 grabWindow;CARD16 modifiers;CARD8 key;BYTE pointerMode;BYTE keyboardMode;BYTE pad1;BYTE pad2;BYTE pad3;};
struct _FF2B271BD07173775CE163A4BE842405 {CARD8 reqType;BYTE pad;CARD16 length;CARD32 window;CARD32 parent;INT16 x;INT16 y;};
typedef int ( *XUnregisterIMInstantiateCBProc)(XLCd, Display *, XrmDatabase, char *, char *, XIMProc, XPointer *);
typedef int ( *XwcTextListToTextPropertyProc)(XLCd, Display *, unsigned int **, int, XICCEncodingStyle, XTextProperty *);
typedef int ( *XRegisterIMInstantiateCBProc)(XLCd, Display *, XrmDatabase, char *, char *, XIMProc, XPointer *);
struct _XmToggleButtonGCacheObjPart {unsigned char ind_type;Boolean visible;Dimension spacing;Dimension indicator_dim;Pixmap on_pixmap;Pixmap insen_pixmap;unsigned char ind_on;Boolean fill_on_select;Pixel select_color;GC select_GC;GC background_gc;GC arm_GC;unsigned char toggle_mode;Boolean reversed_select;Pixmap indeterminate_pixmap;Pixmap indeterminate_insensitive_pixmap;Pixel unselect_color;GC unselect_GC;GC indeterminate_GC;GC indeterminate_box_GC;Dimension ind_left_delta;Dimension ind_right_delta;Dimension ind_top_delta;Dimension ind_bottom_delta;};
struct _XmSecondaryResourceDataRec {XmResourceBaseProc base_proc;XtPointer client_data;String name;String res_class;XtResourceList resources;Cardinal num_resources;};
typedef Boolean ( *XtConvertSelectionIncrProc)(Widget, Atom *, Atom *, Atom *, XtPointer *, unsigned int *, int *, unsigned int *, XtPointer, XtRequestId *);
struct _XmDropStartCallbackStruct {int reason;XEvent *event;Time timeStamp;unsigned char operation;unsigned char operations;unsigned char dropSiteStatus;unsigned char dropAction;Position x;Position y;Window window;Atom iccHandle;};
struct _xkbGetNamedIndicatorReply {BYTE type;BYTE deviceID;CARD16 sequenceNumber;CARD32 length;CARD32 indicator;BOOL found;BOOL on;BOOL realIndicator;CARD8 ndx;CARD8 flags;CARD8 whichGroups;CARD8 groups;CARD8 whichMods;CARD8 mods;CARD8 realMods;CARD16 virtualMods;CARD32 ctrls;BOOL supported;CARD8 pad1;CARD16 pad2;};
struct _XmCascadeButtonGadgetRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;XmLabelGadgetPart label;XmCascadeButtonGadgetPart cascade_button;};
struct _XmDragProcCallbackStruct {int reason;XEvent *event;Time timeStamp;Widget dragContext;Position x;Position y;unsigned char dropSiteStatus;unsigned char operation;unsigned char operations;Boolean animate;};
struct _XmScrolledWindowClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmScrolledWindowClassPart swindow_class;};
struct _XmVendorShellExtClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmDesktopClassPart desktop_class;XmShellExtClassPart shell_class;XmVendorShellExtClassPart vendor_class;};
struct _XmBulletinBoardClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmBulletinBoardClassPart bulletin_board_class;};
struct _XmContainerXfrActionRec {Widget wid;XEvent *event;String *params;Cardinal *num_params;Atom operation;};
struct _XmTearOffButtonClassRec {CoreClassPart core_class;XmPrimitiveClassPart primitive_class;XmLabelClassPart label_class;XmPushButtonClassPart pushbutton_class;XmTearOffButtonClassPart tearoffbutton_class;};
struct _XmToggleButtonGadgetRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;XmLabelGadgetPart label;XmToggleButtonGadgetPart toggle;};
struct _sym_callback_entry_type {sym_entry_header_type header;sym_obj_header_type obj_header;sym_value_entry_type *az_call_reason_name;sym_proc_ref_entry_type *az_call_proc_ref;sym_list_entry_type *az_call_proc_ref_list;};
union audit_bdy_data__ab_data {u_int uival;int ival;uint32_t ulval;int32_t lval;u_short usval;short sval;u_char ucval;char cval;};
typedef void ( *XwcDrawImageStringProc)(Display *, Drawable, XFontSet, GC, int, int,  unsigned int *, int);
struct _XmDrawingAreaClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmDrawingAreaClassPart drawing_area_class;};
struct _XmPanedWindowClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmPanedWindowClassPart paned_window_class;};
struct _XmPushButtonGadgetRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;XmLabelGadgetPart label;XmPushButtonGadgetPart pushbutton;};
struct _XmContainerClassPart {XmSpatialTestFitProc test_fit_item;XmSpatialPlacementProc place_item;XmSpatialRemoveProc remove_item;XmSpatialGetSize get_spatial_size;XtPointer extension;};
struct _XmLabelGCacheObjPart {unsigned char label_type;unsigned char alignment;unsigned char string_direction;Dimension margin_height;Dimension margin_width;Dimension margin_left;Dimension margin_right;Dimension margin_top;Dimension margin_bottom;Boolean recompute_size;Boolean skipCallback;unsigned char menu_type;GC background_GC;GC top_shadow_GC;GC bottom_shadow_GC;GC highlight_GC;Pixel foreground;Pixel background;Pixel top_shadow_color;Pixmap top_shadow_pixmap;Pixel bottom_shadow_color;Pixmap bottom_shadow_pixmap;Pixel highlight_color;Pixmap highlight_pixmap;};
struct _XmMenuShellWidgetRec {CorePart core;CompositePart composite;ShellPart shell;OverrideShellPart override;XmMenuShellPart menu_shell;};
struct _XmPrimitiveClassPart {XtWidgetProc border_highlight;XtWidgetProc border_unhighlight;String translations;XtActionProc arm_and_activate;XmSyntheticResource *syn_resources;int num_syn_resources;XtPointer extension;};
struct _XmRowColumnWidgetRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmRowColumnPart row_column;};
struct _VendorShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;};
struct _XmContainerClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmContainerClassPart container_class;};
struct _XmIconGCacheObjPart {XmRenderTable render_table;GC selected_GC;GC inverse_GC;Pixel background;Pixel foreground;Pixel top_shadow_color;Pixel bottom_shadow_color;Pixel highlight_color;Pixmap background_pixmap;Pixmap top_shadow_pixmap;Pixmap bottom_shadow_pixmap;Pixmap highlight_pixmap;GC normal_GC;GC background_GC;GC insensitive_GC;GC top_shadow_GC;GC bottom_shadow_GC;GC highlight_GC;unsigned char alignment;Dimension spacing;Dimension margin_width;Dimension margin_height;};
struct _XmMenuShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;OverrideShellClassPart override_shell_class;XmMenuShellClassPart menu_shell_class;};
struct _XmRowColumnClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmRowColumnClassPart row_column_class;};
struct _XmScrolledWindowRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmScrolledWindowPart swindow;};
struct _XmVendorShellExtRec {ObjectPart object;XmExtPart ext;XmDesktopPart desktop;XmShellExtPart shell;XmVendorShellExtPart vendor;};
struct _xkbGetControlsReply {BYTE type;CARD8 deviceID;CARD16 sequenceNumber;CARD32 length;CARD8 mkDfltBtn;CARD8 numGroups;CARD8 groupsWrap;CARD8 internalMods;CARD8 ignoreLockMods;CARD8 internalRealMods;CARD8 ignoreLockRealMods;CARD8 pad1;CARD16 internalVMods;CARD16 ignoreLockVMods;CARD16 repeatDelay;CARD16 repeatInterval;CARD16 slowKeysDelay;CARD16 debounceDelay;CARD16 mkDelay;CARD16 mkInterval;CARD16 mkTimeToMax;CARD16 mkMaxSpeed;INT16 mkCurve;CARD16 axOptions;CARD16 axTimeout;CARD16 axtOptsMask;CARD16 axtOptsValues;CARD16 pad2;CARD32 axtCtrlsMask;CARD32 axtCtrlsValues;CARD32 enabledCtrls;BYTE perKeyRepeat[32];};
struct _XmBulletinBoardRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmBulletinBoardPart bulletin_board;};
struct _XmComboBoxClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmComboBoxClassPart combo_box_class;};
struct _XmTearOffButtonRec {CorePart core;XmPrimitivePart primitive;XmLabelPart label;XmPushButtonPart pushbutton;XmTearOffButtonPart tear_off_button;};
struct _XmDrawnButtonPart {Boolean pushbutton_enabled;unsigned char shadow_type;XtCallbackList activate_callback;XtCallbackList arm_callback;XtCallbackList disarm_callback;XtCallbackList expose_callback;XtCallbackList resize_callback;Boolean armed;Dimension old_width;Dimension old_height;Dimension old_shadow_thickness;Dimension old_highlight_thickness;XtIntervalId timer;unsigned char multiClick;int click_count;Time armTimeStamp;};
struct _XmSpinBoxClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmSpinBoxClassPart spinBox_class;};
union _xkbDoodadWireDesc {xkbAnyDoodadWireDesc any;xkbShapeDoodadWireDesc shape;xkbTextDoodadWireDesc text;xkbIndicatorDoodadWireDesc indicator;xkbLogoDoodadWireDesc logo;};
typedef int ( *XwcDrawStringProc)(Display *, Drawable, XFontSet, GC, int, int,  unsigned int *, int);
struct _NotebookClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmNotebookClassPart notebook_class;};
struct _XmDrawingAreaRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmDrawingAreaPart drawing_area;};
struct _XmPanedWindowRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmPanedWindowPart paned_window;};
struct _xPrintPrintEvent {BYTE type;BYTE detail;CARD16 sequenceNumber;CARD32 printContext;BOOL cancel;CARD8 pad1;CARD16 pad2;CARD32 pad3;CARD32 pad4;CARD32 pad5;CARD32 pad6;CARD32 pad7;};
struct _xkbActionMessage {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 keycode;BOOL press;BOOL keyEventFollows;CARD8 mods;CARD8 group;CARD8 message[8];CARD16 pad1;CARD32 pad2;CARD32 pad3;};
struct _xkbGetStateReply {BYTE type;BYTE deviceID;CARD16 sequenceNumber;CARD32 length;CARD8 mods;CARD8 baseMods;CARD8 latchedMods;CARD8 lockedMods;CARD8 group;CARD8 lockedGroup;INT16 baseGroup;INT16 latchedGroup;CARD8 compatState;CARD8 grabMods;CARD8 compatGrabMods;CARD8 lookupMods;CARD8 compatLookupMods;CARD8 pad1;CARD16 ptrBtnState;CARD16 pad2;CARD32 pad3;};
typedef void ( *XtActionHookProc)(Widget, XtPointer, String, XEvent *, String *, Cardinal *);
struct _XmFrameClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmFrameClassPart frame_class;};
struct _XmIconHeaderRec {ObjectPart object;RectObjPart rectangle;XmGadgetPart gadget;XmIconGadgetPart icong;XmIconHeaderPart iconh;};
struct _XmScaleClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmScaleClassPart scale_class;};
struct _XmSourceDataRec {XmTextSource source;XmTextWidget *widgets;XmTextPosition left;XmTextPosition right;char *ptr;char *value;char *gap_start;char *gap_end;char *PSWC_NWLN;int length;int maxlength;int old_length;int numwidgets;int maxallowed;Time prim_time;Boolean hasselection;Boolean editable;Boolean take_selection;};
struct mc_enable_events {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;mc_event_t Requested_event_mask;mc_event_t Enabled_event_mask;};
typedef Boolean ( *MeasureLineProc)(XmTextWidget, LineNum, XmTextPosition, XmTextPosition *, LineTableExtraRec **);
typedef Boolean ( *XtTypeConverter)(Display *, XrmValue *, Cardinal *, XrmValue *, XrmValue *, XtPointer *);
struct _XmContainerRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmContainerPart container;};
struct _XmMenuShellRec {CorePart core;CompositePart composite;ShellPart shell;OverrideShellPart override;XmMenuShellPart menu_shell;};
struct _XmRowColumnRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmRowColumnPart row_column;};
struct _xkbSetControls {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD8 affectInternalMods;CARD8 internalMods;CARD8 affectIgnoreLockMods;CARD8 ignoreLockMods;CARD16 affectInternalVMods;CARD16 internalVMods;CARD16 affectIgnoreLockVMods;CARD16 ignoreLockVMods;CARD8 mkDfltBtn;CARD8 groupsWrap;CARD16 axOptions;CARD16 pad1;CARD32 affectEnabledCtrls;CARD32 enabledCtrls;CARD32 changeCtrls;CARD16 repeatDelay;CARD16 repeatInterval;CARD16 slowKeysDelay;CARD16 debounceDelay;CARD16 mkDelay;CARD16 mkInterval;CARD16 mkTimeToMax;CARD16 mkMaxSpeed;INT16 mkCurve;CARD16 axTimeout;CARD32 axtCtrlsMask;CARD32 axtCtrlsValues;CARD16 axtOptsMask;CARD16 axtOptsValues;BYTE perKeyRepeat[32];};
struct _xkbStateNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 mods;CARD8 baseMods;CARD8 latchedMods;CARD8 lockedMods;CARD8 group;INT16 baseGroup;INT16 latchedGroup;CARD8 lockedGroup;CARD8 compatState;CARD8 grabMods;CARD8 compatGrabMods;CARD8 lookupMods;CARD8 compatLookupMods;CARD16 ptrBtnState;CARD16 changed;CARD8 keycode;CARD8 eventType;CARD8 requestMajor;CARD8 requestMinor;};
struct stape_event_log {dev_t dev;union inquiry_data inquiry_data;ubit8 serial[32];int32_t buf_offset;int32_t tape_alert_offset;struct stape_event event_buf[256];int32_t reserved[6];};
struct _XmArrowPixmap {Dimension height;Dimension width;unsigned int depth;unsigned char direction;Pixel top_shadow_color;Pixel bottom_shadow_color;Pixel foreground_color;Display *display;Screen *screen;Pixmap pixmap;};
struct _XmComboBoxRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmComboBoxPart combo_box;};
struct _XmDisplayInfo {Cursor SashCursor;Widget destinationWidget;Cursor TearOffCursor;XtPointer UniqueStamp;XmExcludedParentPaneRec excParentPane;unsigned short resetFocusFlag;Boolean traversal_in_progress;};
struct _XmNotebookRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmNotebookPart notebook;};
struct _xkbBellNotify {BYTE type;BYTE xkbType;CARD16 sequenceNumber;CARD32 time;CARD8 deviceID;CARD8 bellClass;CARD8 bellID;CARD8 percent;CARD16 pitch;CARD16 duration;CARD32 name;CARD32 window;BOOL eventOnly;CARD8 pad1;CARD16 pad2;CARD32 pad3;};
struct kd_queuestart2 {kptr_t bp;kptr_t b_vp;int32_t b_bcount;uint32_t b_flags;uint16_t b2_flags;uint16_t spad;daddr_t b_blkno;uint32_t b_sectno;uint32_t pad;};
struct _LC_collate_t {_LC_core_collate_t core;unsigned char co_nord;_LC_weight_t co_sort;unsigned int co_wc_min;unsigned int co_wc_max;unsigned int co_hbound;unsigned int co_col_min;unsigned int co_col_max;unsigned int co_ord_max; _LC_coltbl_t *co_coltbl;unsigned char co_nsubs; _LC_subs_t *co_subs;};
struct _XmSpinBoxRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmSpinBoxPart spinBox;};
struct _xkbSendEvent {CARD8 reqType;CARD8 xkbReqType;CARD16 length;BOOL propagate;BOOL synthesizeClick;CARD16 pad;CARD32 destination;CARD32 eventMask;xEvent event;};
struct audit_str_hdr {pid_t pid;pid_t ppid;aid_t aid;uid_t uid;gid_t gid;uid_t euid;gid_t egid;u_short tty;};
struct directory_obj {nis_name do_name;nstype do_type;struct directory_obj___1F9DB6EC5B4D38C4C9C3429D1A4D637D do_servers;u_long do_ttl;struct directory_obj___C1C9E10248BAA10524C7D0EEA27D2609 do_armask;};
struct kd_queuestart {kd_t kd_struct;dev_t b_dev;bmcnt_t b_merge_cnt;uint16_t spad;struct kd_queuestart2 ki_qstart;};
struct pst_diskinfo {int32_t psd_idx;struct psdev psd_dev;int32_t psd_dktime;int32_t psd_dkseek;int32_t psd_dkxfer;int32_t psd_dkwds;float psd_dkmspw;struct psdev psd_cdev;struct psdrvnam psd_drv_name;int32_t psd_token;int32_t psd_instance;struct pshwpath psd_hw_path;struct psttime psd_dkwait;struct psttime psd_dkresp;int32_t psd_dkcyl_index;int32_t psd_dkcyl[80];int32_t psd_dkqlen_curr;int32_t psd_dkqlen;int32_t psd_dkq_merged;int32_t psd_dkenq_cnt;int32_t psd_status;};
struct pst_fileinfo {uint32_t psf_idx;uint32_t psf_fd;struct psfileid psf_id;off32_t psf_offset;off64_t psf_offset64;int32_t psf_valid;};
typedef XmTextStatus ( *ReplaceProc)(XmTextWidget, XEvent *, XmTextPosition *, XmTextPosition *, XmTextBlock, int);
struct _FontSetRec {int id;int charset_count;XlcCharSet *charset_list;int font_data_count;FontData font_data;char *font_name;XFontStruct *info;XFontStruct *font;XlcSide side;int is_xchar2b;int substitute_num;FontData substitute;int vpart_initialize;int vmap_num;FontData vmap;int vrotate_num;VRotate vrotate;};
struct _XkbChanges {unsigned short device_spec;unsigned short state_changes;XkbMapChangesRec map;XkbControlsChangesRec ctrls;XkbIndicatorChangesRec indicators;XkbNameChangesRec names;XkbCompatChangesRec compat;};
struct _XkbInfoRec {unsigned int flags;unsigned int xlib_ctrls;XExtCodes *codes;int srv_major;int srv_minor;unsigned int selected_events;unsigned short selected_nkn_details;unsigned short selected_map_details;XkbDescRec *desc;XkbMapChangesRec changes;Atom composeLED;char *charset;XkbConverters cvt;};
struct _XmFrameRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmFramePart frame;};
struct _XmScaleRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmScalePart scale;};
union _XkbDoodad {XkbAnyDoodadRec any;XkbShapeDoodadRec shape;XkbTextDoodadRec text;XkbIndicatorDoodadRec indicator;XkbLogoDoodadRec logo;};
struct _InputRec {struct _InputDataRec *data;InputInvalidateProc Invalidate;InputGetValuesProc GetValues;InputSetValuesProc SetValues;XtWidgetProc destroy;InputGetSecResProc GetSecResData;};
struct _XSpecRec {XIntrCallbackPtr intr_cb;Atom imconnectid;Atom improtocolid;Atom immoredataid;Window lib_connect_wid;Window ims_connect_wid;XPointer ev;CARD32 major_code;CARD32 minor_code;CARD32 BoundarySize;};
struct ki_config {char kc_version[32];int kc_runningprocs;uint32_t kc_trace_sz;kcaddr_t kc_cbuf;uint32_t kc_timeout;uint32_t kc_timeoutct;uint32_t kc_nunit_per_sec;kseqcnt_t kc_sequence_count;kboolean_t kc_kernelenable[50];kgaddr_t kc_proc_info_addr[32];kboolean_t kc_syscallenable[600];uint32_t kc_count_sz;uint32_t ki_max_tbsz;};
struct modstatus {int32_t ms_id;uint64_t ms_base;uint32_t ms_size;uint64_t ms_bss;uint32_t ms_bss_size;int32_t ms_rev;char ms_path[1024];time_t ms_unload_delay;int32_t ms_holdcnt;int32_t ms_depcnt;struct modspecific_stat ms_msinfo[4];};
struct dma_serv {data_ptr_type b_ptr;addr_class_type b_class;uint32_t b_count;uint32_t b_dir;uint32_t segment_size;uint32_t seg_residue;dma_buflet_t *buflet_list;int ( *dma_func)(struct dma_serv *dma, caddr_t addr, uint32_t count);void *local_parms;};
struct kd_setrq {kd_t kd_struct;kptr_t setrq_caller;tid_t kt_tid;pid_t p_pid;kptr_t p_vas;kpkst_t ki_pk_state;};
struct mc_event {mc_primitive_t Prim;mc_vers_t Version;mc_status_t Status;mc_xid_t Trans_id;mc_event_t Event;};
struct pir_body {pid_t ppid;aid_t aid;uid_t ruid;gid_t rgid;uid_t euid;gid_t egid;dev_t tty;};
struct kd_open {ks_t kd_syscall;dev_t dev;ktype_t v_fstype;ktype_t v_type;kftype_t f_type;kptr_t f_data;};
struct rtentry {struct radix_node rt_nodes[2];struct sockaddr rt_dst;struct sockaddr rt_gateway;u_short rt_flags;u_short rt_refcnt;u_int rt_use;uint32_t rt_ifp;int rt_proto;int rt_upd;int rt_pmtu_timer;u_short rt_pmtu;u_int rt_subnetmask;};
struct statvfs {unsigned int f_bsize;unsigned int f_frsize;fsblkcnt_t f_blocks;fsblkcnt_t f_bfree;fsblkcnt_t f_bavail;fsfilcnt_t f_files;fsfilcnt_t f_ffree;fsfilcnt_t f_favail;char f_basetype[16];unsigned int f_namemax;char f_fstr[32];int32_t f_magic;int32_t f_type;int32_t f_featurebits;unsigned int f_flag;unsigned int f_fsindex;unsigned int f_fsid;time_t f_time;site_t f_cnode;short f_pad;unsigned int f_size;unsigned int f_spare[8];};
struct vifinfo {vifi_t vifi_vifi;u_char vifi_flags;u_char vifi_threshold;u_int vifi_rate_limit;struct in_addr vifi_lcl_addr;struct in_addr vifi_rmt_addr;u_long vifi_pkt_in;u_long vifi_pkt_out;u_long vifi_bytes_in;u_long vifi_bytes_out;};
struct vnotify {vnotify_type_t v_type;vas_t *v_vas;space_t v_space;caddr_t v_vaddr;int v_cnt;int v_hil_pfn;vnotify_flags_t v_flags;};
struct kd_fd2 {ks_t kd_syscall;dev_t dev1;dev_t dev2;kptr_t f_data1;kptr_t f_data2;kftype_t f_type1;kftype_t f_type2;uint32_t fd2_pad;};
struct socket {short so_type;short so_options;short so_linger;short so_state;caddr_t so_pcb;struct protosw *so_proto;struct socket *so_head;struct socket *so_q0;struct socket *so_q;struct socket *so_dq;short so_q0len;short so_qlen;short so_qlimit;short so_dqlen;short so_timeo;struct socket *( *so_connindication)();u_short so_error;short so_special;short so_spare;short so_pgrp;u_int so_oobmark;struct sockbuf *so_rcv;struct sockbuf *so_snd;int so_ipc;struct socket__socklocks *so_lock;ulong_t oldlevel;MBLKP so_inoobq;MBLKP so_indataq;MBLKP so_indata_tail;struct socket__sth_s *so_sth;int so_isastream;int so_msgfmt;int so_data_wroff;char so_remaddr[16];MBLKP so_bindaddr;short so_snd_timeo;short so_rcv_timeo;short so_flags;int so_sndbuf;int so_rcvbuf;char *so_fp;MBLKP so_conn_ind_queue;MBLKP so_conn_ind;struct socket **so_psoh;struct socket *so_hnext;};
struct xp_ops {bool_t ( *xp_recv)(struct xp_ops____svcxprt *, struct rpc_msg *);enum xprt_stat ( *xp_stat)(struct xp_ops____svcxprt *);bool_t ( *xp_getargs)(struct xp_ops____svcxprt *, xdrproc_t, caddr_t);bool_t ( *xp_reply)(struct xp_ops____svcxprt *, struct rpc_msg *);bool_t ( *xp_freeargs)(struct xp_ops____svcxprt *, xdrproc_t, caddr_t);void ( *xp_destroy)(struct xp_ops____svcxprt *);bool_t ( *xp_control)(struct xp_ops____svcxprt *,  u_int, void *);};
struct broot {struct broot__bnode *b_root;pgcnt_t b_depth;pgcnt_t b_npages;pgcnt_t b_rpages;chunk_t *b_list;int b_nfrag;struct broot__region *b_rp;pgcnt_t b_protoidx;struct dbd b_proto1;struct dbd b_proto2;struct vfdcw b_vproto;pgcnt_t b_key_cache[2];caddr_t b_val_cache[2];};
struct iobuf {uint32_t b_flags;struct buf *b_forw;struct buf *b_back;struct buf *b_actf;struct buf *b_actl;int b_queuelen;struct timeout timeo;struct sw_intloc intloc;int ( **markstack)();char timeflag;char b_active;char b_errcnt;char b_state;char io_s0;char in_fsm;caddr_t b_xaddr;int b_xcount;int b_headpos;struct iobuf__eblock *io_erec;int io_nreg;physadr io_addr;int io_s1;int io_s2;int io_s3;};
struct kd_fd {ks_t kd_syscall;dev_t dev;ktype_t v_fstype;ktype_t v_type;kftype_t f_type;kptr_t f_data;};
struct acct {char ac_flag;char ac_stat;uid_t ac_uid;gid_t ac_gid;int ac_prmid;dev_t ac_tty;time_t ac_btime;comp_t ac_utime;comp_t ac_stime;comp_t ac_etime;comp_t ac_mem;comp_t ac_io;comp_t ac_rw;char ac_comm[8];};
struct fs {int32_t fs_unused[2];daddr_t fs_sblkno;daddr_t fs_cblkno;daddr_t fs_iblkno;daddr_t fs_dblkno;int32_t fs_cgoffset;int32_t fs_cgmask;int32_t fs_time;int32_t fs_size;int32_t fs_dsize;int32_t fs_ncg;int32_t fs_bsize;int32_t fs_fsize;int32_t fs_frag;int32_t fs_minfree;int32_t fs_rotdelay;int32_t fs_rps;int32_t fs_bmask;int32_t fs_fmask;int32_t fs_bshift;int32_t fs_fshift;int32_t fs_maxcontig;int32_t fs_maxbpg;int32_t fs_fragshift;int32_t fs_fsbtodb;int32_t fs_sbsize;int32_t fs_csmask;int32_t fs_csshift;int32_t fs_nindir;int32_t fs_inopb;int32_t fs_nspf;int32_t fs_id[2];struct mirinfo fs_mirror;int32_t fs_featurebits;int32_t fs_optim;daddr_t fs_csaddr;int32_t fs_cssize;int32_t fs_cgsize;int32_t fs_ntrak;int32_t fs_nsect;int32_t fs_spc;int32_t fs_ncyl;int32_t fs_cpg;int32_t fs_ipg;int32_t fs_fpg;struct csum fs_cstotal;char fs_fmod;char fs_clean;char fs_ronly;char fs_flags;char fs_fsmnt[512];int32_t fs_cgrotor;struct csum *fs_csp;int32_t fs_csp_pad;int32_t fs_unused2[30];int32_t fs_cpc;short fs_postbl[32][8];int32_t fs_magic;char fs_fname[6];char fs_fpack[6];u_char fs_rotbl[1];};
union _5868E735110F708D87BF7192F3350519___886BC61DD18348B4C0FF3FD85A19BC0D {ttexec_data_t tts_exec;ttfork_data_t tts_fork;ttsignal_data_t tts_signal;ttthread_data_t tts_thread;ttsyscall_data_t tts_syscall;ttexit_data_t tts_exit;char tts_fill[128];};
union _89EFAFA36DC2CA0A6742FD5F4BE18D8B___4943DBA6EC5888BF08830C6DAF61C6ED {cs80_req_type cs80_req;hpib_req_type hpib_req;mt7970_req_type mt7970_req;bit8 da_req;dap_execute_type dap_execute_req;block_size_type block_size;};
union _FA574A2BD4AEE35634BB9215CFACAEE0___B761B527D4EBA4CE9E382F1E32DFE1DE {init_media_type init_media_rec;limit_fmt_type limit_fmt;verify_type verify_rec;general_cmd_type general_cmd_rec;set_rps_type set_rps_rec;spare_block_type spare_block_rec;};
union mode_6_buff_no_bd___E6CD75BFDABAEAC9BFB2A973592BCE03 {struct error_recovery err_recovery_page;struct caching_page caching_page;struct disc_recon disc_reconnect_page;struct dad_form_parms format_device_page;struct geometry_parms disk_geometry_page;struct flex_geometry_parms flex_geometry_page;};
union objdata___B3007D6063AF66DF722E8A0D3E39E00C {struct directory_obj di_data;struct group_obj gr_data;struct table_obj ta_data;struct entry_obj en_data;struct link_obj li_data;struct objdata___B3007D6063AF66DF722E8A0D3E39E00C___C5CA305DAC14A48247D92F909AB77E9C po_data;};
union ____4943DBA6EC5888BF08830C6DAF61C6ED {cs80_req_type cs80_req;hpib_req_type hpib_req;mt7970_req_type mt7970_req;bit8 da_req;dap_execute_type dap_execute_req;block_size_type block_size;};
union ____B761B527D4EBA4CE9E382F1E32DFE1DE {init_media_type init_media_rec;limit_fmt_type limit_fmt;verify_type verify_rec;general_cmd_type general_cmd_rec;set_rps_type set_rps_rec;spare_block_type spare_block_rec;};
struct _1CAD30E49B94B49075115A0AFC290EB7 {BYTE type;BYTE pad00;CARD16 sequencenumber;INT16 detail;BYTE mode;BYTE pad1;XID deviceid;Window window;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;};
struct _31B9E7519FB4EBDB88DCDC42C7F248CE {BYTE type;BYTE pad00;CARD16 sequencenumber;CARD8 request;KeyCode firstKeyCode;CARD8 count;BYTE pad1;XID deviceid;CARD32 pad01;CARD32 pad02;CARD32 pad03;CARD32 pad04;CARD32 pad05;};
struct _33B5CD23EE89AEDD139A13DDD9AD8157 {XExtData *ext_data;struct _XDisplay *display;Window root;int width;int height;int mwidth;int mheight;int ndepths;Depth *depths;int root_depth;Visual *root_visual;GC default_gc;Colormap cmap;unsigned int white_pixel;unsigned int black_pixel;int max_maps;int min_maps;int backing_store;int save_unders;int root_input_mask;};
struct _419D850E958B0F42F8B9D5E0BB3E2ED8 {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;TransientShellPart transient;};
struct _504B016FD037AF4CEAA065367FBF726A {CARD8 event;CARD8 bandNumber;CARD16 sequenceNum;CARD32 time;CARD32 instanceNameSpace;CARD32 instanceFloID;xieTypPhototag src;CARD16 type;xieTypDecodeTechnique decodeTechnique;BOOL aborted;CARD8 pad;CARD32 width;CARD32 height;};
struct _53A371D93AFA762A16435064A7495B18 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src1;xieTypPhototag src2;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;xieTypArithmeticOp operator;CARD8 bandMask;xieTypFloat constant0;xieTypFloat constant1;xieTypFloat constant2;};
struct _5868E735110F708D87BF7192F3350519 {pid_t tts_pid;lwpid_t tts_lwpid;uint64_t tts_user_tid;ttevents_t tts_event;ttsf_t tts_flags;int tts_scno;int tts_scnargs;uint64_t tts_scarg[10];union _5868E735110F708D87BF7192F3350519___886BC61DD18348B4C0FF3FD85A19BC0D tts_u;};
struct _5A8881B73C53918F890CB81CC2BCB847 {void *lib_handle;f_getprpwnam_t f_getprpwnam;f_getprpwuid_t f_getprpwuid;f_getprpwent_t f_getprpwent;f_putprpwnam_t f_putprpwnam;f_endprpwent_t f_endprpwent;f_setprpwent_t f_setprpwent;};
struct _5E32E18D9D191C64B2666EEAFB9BEDC0 {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window grabWindow;XID deviceid;CARD16 modifiers;BOOL ownerEvents;CARD8 key;BYTE pointerMode;BYTE keyboardMode;BYTE pad1;BYTE pad2;};
struct _6C7AC434EA2B0F9E65955088C16EBFDA {BYTE type;BYTE detail;CARD16 sequenceNumber;Window window;Atom host;Time time;CARD32 tag;CARD32 extra;CARD32 pad3;CARD32 pad4;};
struct _741FF3E04B05F2C21E0DB832A952F2AD {uint32_t dl_qos_type;dl_through_t dl_rcv_throughput;dl_transdelay_t dl_rcv_trans_delay;dl_through_t dl_xmt_throughput;dl_transdelay_t dl_xmt_trans_delay;dl_priority_t dl_priority;dl_protect_t dl_protection;int dl_residual_error;dl_resilience_t dl_resilience;};
struct _75F7E626134BF34BF20657FC27D19BCE {char *title;int wm_timeout;Boolean wait_for_wm;Boolean transient;Boolean urgency;Widget client_leader;String window_role;struct _75F7E626134BF34BF20657FC27D19BCE___OldXSizeHints size_hints;XWMHints wm_hints;int base_width;int base_height;int win_gravity;Atom title_encoding;};
struct _7E67FD4F3DB69CB7DBA92A468D15DC0A {CARD8 event;CARD8 pad;CARD16 sequenceNum;CARD32 time;CARD32 instanceNameSpace;CARD32 instanceFloID;xieTypPhototag src;CARD16 type;Window window;INT16 x;INT16 y;CARD16 width;CARD16 height;};
struct _8D5227D256EF5B5AEB1F500684CBE9EC {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;CARD8 bandMask;CARD8 pad;CARD32 width;CARD32 height;xieTypFloat a;xieTypFloat b;xieTypFloat c;xieTypFloat d;xieTypFloat tx;xieTypFloat ty;xieTypFloat constant0;xieTypFloat constant1;xieTypFloat constant2;xieTypGeometryTechnique sample;CARD16 lenParams;};
struct _A35F2E1A5E531ECFC152E2BA15F78A6A {BYTE type;BOOL globalAutoRepeat;CARD16 sequenceNumber;CARD32 length;CARD32 ledMask;CARD8 keyClickPercent;CARD8 bellPercent;CARD16 bellPitch;CARD16 bellDuration;CARD16 pad;BYTE map[32];};
struct _A6524737EEF8C4DE9F2A62890C064223 {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;TopLevelShellPart topLevel;};
struct _C00C0DA83216725D22F9B6B75E95FFE0 {CARD8 type;CARD8 data;CARD16 sequenceNum;CARD32 length;CARD16 majorVersion;CARD16 minorVersion;xieTypServiceClass serviceClass;xieTypAlignment alignment;CARD16 unconstrainedMantissa;INT32 unconstrainedMaxExp;INT32 unconstrainedMinExp;CARD8 pad2[8];};
struct _C30FF1240D2A8075F6967DECC9305E3F {BYTE type;CARD8 drawDirection;CARD16 sequenceNumber;CARD32 length;INT16 fontAscent;INT16 fontDescent;INT16 overallAscent;INT16 overallDescent;INT32 overallWidth;INT32 overallLeft;INT32 overallRight;CARD32 pad;};
struct _C3581CCD385C546A273B2E08D561E47C {CARD8 repType;CARD8 hpRepType;CARD16 sequenceNumber;CARD32 length;BOOL globalAutoRepeat;CARD8 keyClickPercent;CARD8 bellPercent;CARD8 pad0;CARD32 ledMask;CARD16 bellPitch;CARD16 bellDuration;CARD16 accelNumerator;CARD16 accelDenominator;CARD16 threshold;CARD16 pad1;CARD32 pad2;BYTE map[32];};
struct _CEBF0A3380E34CA7D192D32F0B21F5A4 {Cardinal depth;Pixmap pixmap;Dimension width;Dimension height;Pixmap mask;Position hot_x;Position hot_y;Position offset_x;Position offset_y;unsigned char attachment;Boolean isDirty;Region region;Region restore_region;Position x_offset;Position y_offset;};
struct _D08E3E427138D596819F8CEF4AEF4F32 {char *vendor;char *release;int version_count;IcePaVersionRec *version_recs;IceProtocolSetupProc protocol_setup_proc;IceProtocolActivateProc protocol_activate_proc;int auth_count;char **auth_names;IcePaAuthProc *auth_procs;IceHostBasedAuthProc host_based_auth_proc;IceIOErrorProc io_error_proc;};
union _D8231012D0728EC3472C30FA3109CEFA {Display *display;GC gc;Visual *visual;Screen *screen;ScreenFormat *pixmap_format;XFontStruct *font;};
struct _D948AA82C93D13609C5809B8A2ABF699 {BYTE type;BYTE ext_type;CARD16 sequencenumber;XID deviceid;INT16 axes_count;CARD16 pad00;XHPaxis_data data[4];CARD32 pad01;};
struct _F45EAA3ACE353930A02675094AE49F50 {CARD8 event;CARD8 pad1;CARD16 sequenceNum;CARD32 time;CARD32 instanceNameSpace;CARD32 instanceFloID;xieTypPhototag src;CARD16 type;xieTypColorList colorList;xieTypColorAllocTechnique colorAllocTechnique;CARD16 pad2;CARD32 data;};
struct _XmTopLevelEnterCallbackStruct {int reason;XEvent *event;Time timeStamp;Screen *screen;Window window;Position x;Position y;unsigned char dragProtocolStyle;Atom iccHandle;};
struct _XmCascadeButtonGadgetPart {Widget submenu;XtCallbackList activate_callback;XtCallbackList cascade_callback;Boolean armed;XRectangle cascade_rect;XtIntervalId timer;XmCascadeButtonGCacheObjPart *cache;};
struct _XmPushButtonGCacheObjPart {Boolean fill_on_arm;Pixel arm_color;Pixmap arm_pixmap;Pixmap unarm_pixmap;unsigned char multiClick;Dimension default_button_shadow_thickness;GC fill_gc;GC background_gc;XtIntervalId timer;};
struct _XmDialogShellExtClassRec {ObjectClassPart object_class;XmExtClassPart ext_class;XmDesktopClassPart desktop_class;XmShellExtClassPart shell_class;XmVendorShellExtClassPart vendor_class;XmDialogShellExtClassPart dialog_class;};
struct _XmDragOverShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;XmDragOverShellClassPart dragOver_shell_class;};
struct _XmSimpleSpinBoxClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmSpinBoxClassPart spinBox_class;XmSimpleSpinBoxClassPart simpleSpinBox_class;};
struct _TransientShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;TransientShellClassPart transient_shell_class;};
struct _XmPrimitiveClassExtRec {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;XmWidgetBaselineProc widget_baseline;XmWidgetDisplayRectProc widget_display_rect;XmWidgetMarginsProc widget_margins;};
struct _XmSelectionBoxClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmBulletinBoardClassPart bulletin_board_class;XmSelectionBoxClassPart selection_box_class;};
struct _TopLevelShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;TopLevelShellClassPart top_level_shell_class;};
struct _sym_widget_entry_type {sym_entry_header_type header;sym_obj_header_type obj_header;sym_list_entry_type *az_callbacks;sym_list_entry_type *az_arguments;sym_list_entry_type *az_controls;sym_proc_ref_entry_type *az_create_proc;sym_parent_list_type *parent_list;int output_state;MrmResource_id resource_id;};
struct _XmClipWindowClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmDrawingAreaClassPart drawing_area_class;XmClipWindowClassPart clip_window_class;};
struct _XmGrabShellWidgetRec {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm_shell;VendorShellPart vendor_shell;XmGrabShellPart grab_shell;};
struct _XmMainWindowClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmScrolledWindowClassPart swindow_class;XmMainWindowClassPart mwindow_class;};
struct _XmMessageBoxClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmBulletinBoardClassPart bulletin_board_class;XmMessageBoxClassPart message_box_class;};
struct _ConstraintClassPart {XtResourceList resources;Cardinal num_resources;Cardinal constraint_size;XtInitProc initialize;XtWidgetProc destroy;XtSetValuesFunc set_values;XtPointer extension;};
struct _XmDialogShellExtRec {ObjectPart object;XmExtPart ext;XmDesktopPart desktop;XmShellExtPart shell;XmVendorShellExtPart vendor;XmDialogShellExtPart dialog;};
struct _XmGadgetClassExtRec {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;XmWidgetBaselineProc widget_baseline;XmWidgetDisplayRectProc widget_display_rect;XmWidgetMarginsProc widget_margins;};
struct _XmGrabShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;XmGrabShellClassPart grab_shell_class;};
struct _XmContainerDataRec {Mask valueMask;Cardinal *detail_order;Cardinal detail_order_count;XmTabList detail_tablist;Dimension first_column_width;XtEnum selection_mode;Pixel select_color;};
struct _XmDragOverShellRec {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;XmDragOverShellPart drag;};
struct _XmSimpleSpinBoxRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmSpinBoxPart spinBox;XmSimpleSpinBoxPart simpleSpinBox;};
struct _XmToggleButtonPart {unsigned char ind_type;Boolean visible;Dimension spacing;Dimension indicator_dim;Boolean indicator_set;Pixmap on_pixmap;Pixmap insen_pixmap;unsigned char set;unsigned char visual_set;unsigned char ind_on;Boolean fill_on_select;Pixel select_color;GC select_GC;GC background_gc;GC arm_GC;XtCallbackList value_changed_CB;XtCallbackList arm_CB;XtCallbackList disarm_CB;Boolean Armed;unsigned char toggle_mode;Boolean reversed_select;Pixmap indeterminate_pixmap;Pixmap indeterminate_insensitive_pixmap;Pixel unselect_color;GC unselect_GC;GC indeterminate_GC;GC indeterminate_box_GC;Dimension ind_left_delta;Dimension ind_right_delta;Dimension ind_top_delta;Dimension ind_bottom_delta;Dimension detail_shadow_thickness;};
struct _XmSelectionBoxRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmBulletinBoardPart bulletin_board;XmSelectionBoxPart selection_box;};
struct _XmClipWindowRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmDrawingAreaPart drawing_area;XmClipWindowPart clip_window;};
struct _XmMainWindowRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmScrolledWindowPart swindow;XmMainWindowPart mwindow;};
struct _XmMessageBoxRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmBulletinBoardPart bulletin_board;XmMessageBoxPart message_box;};
struct kd_thread_create {kd_t kd_struct;kthread_create_caller_t caller;kflag_t flags;tid_t ktid;tid_t utid;ktst_t ki_kt_state;kptr_t ktc_start_routine;};
struct _XmFormClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmBulletinBoardClassPart bulletin_board_class;XmFormClassPart form_class;};
struct _XmGrabShellRec {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm_shell;VendorShellPart vendor_shell;XmGrabShellPart grab_shell;};
struct _XmMenuStateRec {Widget RC_LastSelectToplevel;XmButtonEventStatusRec RC_ButtonEventStatus;XmReplayInfoRec RC_ReplayInfo;Widget RC_activeItem;XmMenuFocusRec RC_menuFocus;Boolean RC_allowAcceleratedInsensitiveUnmanagedMenuItems;Time MS_LastManagedMenuTime;Boolean MU_InDragMode;Widget MU_CurrentMenuChild;Boolean MU_InPMMode;};
typedef void ( *XtAllocateProc)(WidgetClass, Cardinal *, Cardinal *, ArgList, Cardinal *, XtTypedArgList, Cardinal *, Widget *, XtPointer *);
struct isc_table_type {struct buf *b_actf;struct buf *b_actl;struct buf *ppoll_f;struct buf *ppoll_l;struct buf *event_f;struct buf *event_l;struct buf *status_f;struct buf *status_l;unsigned int state;char card_type;unsigned char my_isc;char my_address;char active;char int_lvl;unsigned char spoll_byte;enum TFR_type transfer;struct isc_table_type__drv_table_type *iosw;struct isc_table_type__tty_drivercp *tty_routine;int *card_ptr;unsigned short intcopy;unsigned short intmsksav;unsigned short intmskcpy;void *dma_chan;short dma_reserved;short dma_active;unsigned char int_flags;unsigned char int_enabled;struct buf *owner;char ppoll_flag;unsigned char ppoll_mask;unsigned char ppoll_sense;unsigned char tfr_control;unsigned short ppoll_resp;unsigned short pattern;int resid;caddr_t buffer;int count;struct sw_intloc intloc;struct sw_intloc intloc1;struct sw_intloc intloc2;int lock_count;uint32_t intr_wait;int locks_pending;int mapped;int transaction_state;int ( *transaction_proc)();pid_t locking_pid;char bus_type;struct bus_info_type *bus_info;int if_id;caddr_t if_reg_ptr;caddr_t if_info;int ftn_no;struct isc_table_type *next_ftn;struct isc_table_type__gfsw *gfsw;caddr_t ifsw;struct gdd *g_drv_data;caddr_t if_drv_data;struct dma_parms *dma_parms;void *drv_hdr;void *card_node;void *map_funcs;void *mem_map;void *dma_funcs;void *iomap_funcs;caddr_t reg_ptrs[4];void *dma_map_funcs;void *dma_map_arg;void *intr_ops;void *intr_object1;void *intr_object2;int if_inited;int eim_control;uint32_t eim;void **parms_table;void *olar_private;void *if_isc;void *reserved1;void *reserved2;void *reserved3;};
struct kd_hardclock {kd_t kd_struct;kregister_t pc;kregister_t dp;kregister_t sp;kcpustate_t cpstate;kboolean_t is64ASL;uint16_t spad;uint32_t pad;};
struct kd_queuedone {kd_t kd_struct;kt_t b_timeval_qs;dev_t b_dev;uint16_t retries;bmcnt_t b_merge_cnt;kd_queuedone2_t ki_qdone;};
typedef XmIncludeStatus ( *XmParseProc)(XtPointer *in_out, XtPointer text_end, XmTextType type, XmStringTag locale_tag, XmParseMapping entry, int pattern_length, XmString *str_include, XtPointer call_data);
struct _ObjectPart {Widget self;WidgetClass widget_class;Widget parent;XrmName xrm_name;Boolean being_destroyed;XtCallbackList destroy_callbacks;XtPointer constraints;};
struct ki_kt_state {kflag_t kt_flag;kstate_t kt_stat;kcpu_t kt_cpu;kpri_t kt_pri;kschedpolicy_t kt_schedpolicy;uint32_t p_pad2;};
struct _XmFormRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmBulletinBoardPart bulletin_board;XmFormPart form;};
union _kregister {unsigned int kreg_val;RawCrItCount_t kreg_it;RawCrItDelta_t kreg_itdelta;RawCrRcCount_t kreg_rc;uint64_t kreg_val64;struct _kregister__kregister_split split;uint32_t kreg_val32;};
struct ib_request {nis_name ibr_name;struct ib_request___284138CD61DEACF1E3B0F8ADC9D2B817 ibr_srch;u_long ibr_flags;struct ib_request___BC4F227684F3C8C9122828D0FF4C6B30 ibr_obj;struct ib_request___2D577313DCD2E74CD5A0055993933E3C ibr_cbhost;u_long ibr_bufsize;netobj ibr_cookie;};
struct ki_p_state {kid_t p_fsid;kflag_t p_flag;kstate_t p_stat;knice_t p_nice;uint16_t p_pad1;uint32_t p_pad2;};
struct mount_data {int32_t md_fstype;int32_t md_fsopts;time_t md_mnttime;site_t md_msite;int16_t md_spare;dev_t md_dev;union mount_data___3A2698B3DAC17E6F4BDDFCE59E817678 md_un;};
struct __svcxprt {int xp_fd;u_short xp_port;struct xp_ops *xp_ops;int xp_addrlen;char *xp_tp;char *xp_netid;struct netbuf xp_ltaddr;struct netbuf xp_rtaddr;char xp_raddr[16];struct opaque_auth xp_verf;caddr_t xp_p1;caddr_t xp_p2;caddr_t xp_p3;int32_t xp_type;};
struct kd_brelse {kd_t kd_struct;kt_t sttime;kptr_t bp;kptr_t b_vp;uint32_t b_flags;bptype_t b_bptype;uint16_t spad;};
struct _xkbBell {CARD8 reqType;CARD8 xkbReqType;CARD16 length;CARD16 deviceSpec;CARD16 bellClass;CARD16 bellID;INT8 percent;BOOL forceSound;BOOL eventOnly;CARD8 pad1;INT16 pitch;INT16 duration;CARD16 pad2;CARD32 name;CARD32 window;};
struct pr_field {char fd_name[9];uid_t fd_uid;char fd_encrypt[114];char fd_owner[9];char fd_boot_auth;mask_t fd_auditcntl;mask_t audit_reserve1;mask_t fd_auditdisp;mask_t audit_reserve2;aid_t fd_pw_audid;int32_t fd_pw_audflg;time_t fd_min;int32_t fd_maxlen;time_t fd_expire;time_t fd_lifetime;time_t fd_schange;time_t fd_uchange;time_t fd_acct_expire;time_t fd_max_llogin;time_t fd_pw_expire_warning;uid_t fd_pswduser;char fd_pick_pwd;char fd_gen_pwd;char fd_restrict;char fd_nullpw;uid_t fd_pwchanger;int32_t fd_pw_admin_num;char fd_gen_chars;char fd_gen_letters;char fd_tod[50];time_t fd_slogin;time_t fd_ulogin;char fd_suctty[14];int16_t fd_nlogins;char fd_unsuctty[14];int16_t fd_max_tries;char fd_lock;};
struct pty_info {struct pty_select pty_selr;struct pty_select pty_selw;struct pty_select pty_sele;char exclusive;char ptmsleep;struct pty_info__kthread *u_kthreadp;char trapbusy;char trapwait;char trapnoshake;char trappending;u_int pty_modes;char tiocsigmode;unsigned char pktbyte;char sendpktbyte;struct request_info trapinfo;unsigned int termio_ioctl;char ioctl_buf[128];u_int pty_state;u_int fileopen;u_char vhangup;int trapflags;b_sema_t pty_sema;u_char ptyto_flag;int ( *ptyto_func)();caddr_t ptyto_arg;int saved_putc;};
struct _4E2E0661611BB9974179772E2A48C6DA {XmString directory;XmString pattern;Widget dir_list_label;XmString dir_list_label_string;Widget dir_list;XmString *dir_list_items;int dir_list_item_count;int dir_list_selected_item_position;Widget filter_label;XmString filter_label_string;Widget filter_text;XmString dir_mask;XmString no_match_string;XmQualifyProc qualify_search_data_proc;XmSearchProc dir_search_proc;XmSearchProc file_search_proc;unsigned char file_type_mask;Boolean list_updated;Boolean directory_valid;unsigned char state_flags;XtEnum path_mode;XtEnum file_filter_style;Widget dir_text;Widget dir_text_label;XmString dir_text_label_string;time_t prev_dir_modtime;};
struct _50D2B38DA8D5F7F9D092D3B0069535E8 {SmcConn connection;String session_id;String *restart_command;String *clone_command;String *discard_command;String *resign_command;String *shutdown_command;String *environment;String current_dir;String program_path;unsigned char restart_style;unsigned char checkpoint_state;Boolean join_session;XtCallbackList save_callbacks;XtCallbackList interact_callbacks;XtCallbackList cancel_callbacks;XtCallbackList save_complete_callbacks;XtCallbackList die_callbacks;XtCallbackList error_callbacks;XtSaveYourself save;XtInputId input_id;XtPointer ses20;XtPointer ses19;XtPointer ses18;XtPointer ses17;XtPointer ses16;XtPointer ses15;XtPointer ses14;XtPointer ses13;XtPointer ses12;XtPointer ses11;XtPointer ses10;XtPointer ses9;XtPointer ses8;XtPointer ses7;XtPointer ses6;XtPointer ses5;XtPointer ses4;XtPointer ses3;XtPointer ses2;XtPointer ses1;};
struct _5C32FF1A7C4211025F70196E2E5CEFB8 {XRectangle area;XRectangle area_needed;Colormap colormap;Atom std_colormap;unsigned int foreground;unsigned int background;Pixmap background_pixmap;XFontSet fontset;int line_spacing;Cursor cursor;XIMCallback start_callback;XIMCallback done_callback;XIMCallback draw_callback;};
struct _7632AA8F19CB8AF724198E208337AAF8 {CARD8 type;BOOL populated;CARD16 sequenceNum;CARD32 length;xieTypDataClass dataClass;xieTypDataType dataType;xieTypDecodeTechnique decodeTechnique;CARD32 width0;CARD32 width1;CARD32 width2;CARD32 height0;CARD32 height1;CARD32 height2;CARD32 levels0;CARD32 levels1;CARD32 levels2;};
struct _8A97B9BC9980E3C2910806BD3DED42AF {XtCallbackList activate_callback;XtCallbackList cascade_callback;Widget submenu;Pixmap cascade_pixmap;int map_delay;GC arm_GC;GC background_GC;Boolean armed;XRectangle cascade_rect;XtIntervalId timer;Pixmap armed_pixmap;};
struct _92276D725373BB3B16F8CB5C6778E662 {BYTE type;CARD8 nameLength;CARD16 sequenceNumber;CARD32 length;xCharInfo minBounds;CARD32 walign1;xCharInfo maxBounds;CARD32 walign2;CARD16 minCharOrByte2;CARD16 maxCharOrByte2;CARD16 defaultChar;CARD16 nFontProps;CARD8 drawDirection;CARD8 minByte1;CARD8 maxByte1;BOOL allCharsExist;INT16 fontAscent;INT16 fontDescent;CARD32 nReplies;};
struct _A4EF4A77E40471EF410BD1BFBD9E090A {BYTE type;BYTE detail;CARD16 sequenceNumber;CARD32 time;CARD32 root;CARD32 event;CARD32 child;INT16 root_x;INT16 root_y;INT16 event_x;INT16 event_y;KeyButMask state;BOOL same_screen;CARD8 deviceid;};
struct _BF4288351412136996F9ADCD6FD7AF45 {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window grabWindow;XID deviceid;CARD32 eventMask;CARD16 modifiers;BOOL ownerEvents;CARD8 button;BYTE pointerMode;BYTE keyboardMode;CARD8 pad1;CARD8 pad2;};
struct _C1D1DCE5A0B9F389C9FAA487FACA5708 {CARD16 elemType;CARD16 elemLength;xieTypPhototag src;BOOL notify;CARD8 pad;CARD32 colormap;xieTypColorList colorList;xieTypColorAllocTechnique colorAlloc;CARD16 lenParams;};
struct _CFC98DDC8C48D7D4D5B40C9CE62D3BBC {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;TopLevelShellPart topLevel;ApplicationShellPart application;};
struct _E6EABA4AA22781602E84D1DF4DA6148F {CARD16 elemType;CARD16 elemLength;xieTypPhototag src1;xieTypPhototag src2;INT32 domainOffsetX;INT32 domainOffsetY;xieTypPhototag domainPhototag;xieTypCompareOp operator;BOOL combine;xieTypFloat constant0;xieTypFloat constant1;xieTypFloat constant2;CARD8 bandMask;CARD8 pad[3];};
struct _EE6A206AE82CDE40AD82C65471471AC6 {XOM om;XOC next;XlcResourceList resources;int num_resources;char *base_name_list;int om_automatic;XOMFontInfo font_info;XFontSetExtents font_set_extents;char *default_string;XOMCharSetList missing_list;XOrientation orientation;char *res_name;char *res_class;};
struct _F77DC320FB1DA70F5B7152F994D427EE {Boolean refiguremode;Boolean separator_on;Dimension margin_width;Dimension margin_height;Dimension spacing;Dimension sash_width;Dimension sash_height;Dimension sash_shadow_thickness;Position sash_indent;int starty;short increment_count;short pane_count;short num_slots;short num_managed_children;Boolean recursively_called;Boolean resize_at_realize;XmPanedWindowConstraintPtr top_pane;XmPanedWindowConstraintPtr bottom_pane;GC flipgc;WidgetList managed_children;unsigned char orientation;XtIntervalId timer;};
struct _FAAE646675EFFC2E42132545ADFD1943 {CARD8 reqType;CARD8 hpReqType;CARD16 length;Window grabWindow;Time time;XID deviceid;CARD32 eventMask;BOOL ownerEvents;CARD8 pad00;CARD16 pad01;};
struct _XmFileSelectionBoxClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmBulletinBoardClassPart bulletin_board_class;XmSelectionBoxClassPart selection_box_class;XmFileSelectionBoxClassPart file_selection_box_class;};
struct _ApplicationShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;TopLevelShellClassPart top_level_shell_class;ApplicationShellClassPart application_shell_class;};
struct _XmDialogShellWidgetRec {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;TransientShellPart transient;XmDialogShellPart dialog;};
struct _XmDialogShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;TransientShellClassPart transient_shell_class;XmDialogShellClassPart dialog_shell_part;};
struct _XmFileSelectionBoxRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmBulletinBoardPart bulletin_board;XmSelectionBoxPart selection_box;XmFileSelectionBoxPart file_selection_box;};
struct _XmArrowButtonPart {XtCallbackList activate_callback;XtCallbackList arm_callback;XtCallbackList disarm_callback;unsigned char direction;Boolean selected;short top_count;short cent_count;short bot_count;XRectangle *top;XRectangle *cent;XRectangle *bot;GC arrow_GC;XtIntervalId timer;unsigned char multiClick;int click_count;Time armTimeStamp;GC insensitive_GC;Dimension detail_shadow_thickness;};
struct _XmCommandClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ConstraintClassPart constraint_class;XmManagerClassPart manager_class;XmBulletinBoardClassPart bulletin_board_class;XmSelectionBoxClassPart selection_box_class;XmCommandClassPart command_class;};
struct _XmGadgetClassPart {XtWidgetProc border_highlight;XtWidgetProc border_unhighlight;XtActionProc arm_and_activate;XmWidgetDispatchProc input_dispatch;XmVisualChangeProc visual_change;XmSyntheticResource *syn_resources;int num_syn_resources;XmCacheClassPartPtr cache_part;XtPointer extension;};
struct __client__clnt_ops {enum clnt_stat ( *cl_call)(struct __client *, u_long, xdrproc_t, caddr_t, xdrproc_t, caddr_t, struct timeval);void ( *cl_abort)();void ( *cl_geterr)(struct __client *, struct rpc_err *);bool_t ( *cl_freeres)(struct __client *, xdrproc_t, caddr_t);void ( *cl_destroy)(struct __client *);bool_t ( *cl_control)(struct __client *, int, char *);u_long ( *cl_settimers)(struct __client *, struct rpc_timers *, struct rpc_timers *, int, void ( *)(), caddr_t, uint32_t);};
struct _XmDialogShellRec {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;TransientShellPart transient;XmDialogShellPart dialog;};
struct _XmIconGadgetPart {XmString label_string;Pixmap large_icon_mask;Pixmap large_icon_pixmap;Pixmap small_icon_mask;Pixmap small_icon_pixmap;unsigned char viewtype;unsigned char visual_emphasis;XmString *detail;Cardinal detail_count;Dimension label_rect_width;Dimension label_rect_height;Dimension large_icon_rect_width;Dimension large_icon_rect_height;Dimension small_icon_rect_width;Dimension small_icon_rect_height;String large_pixmap_name;String small_pixmap_name;XmIconGCacheObjPart *cache;Boolean check_set_render_table;};
struct _xQueryFontReply {BYTE type;BYTE pad1;CARD16 sequenceNumber;CARD32 length;xCharInfo minBounds;CARD32 walign1;xCharInfo maxBounds;CARD32 walign2;CARD16 minCharOrByte2;CARD16 maxCharOrByte2;CARD16 defaultChar;CARD16 nFontProps;CARD8 drawDirection;CARD8 minByte1;CARD8 maxByte1;BOOL allCharsExist;INT16 fontAscent;INT16 fontDescent;CARD32 nCharInfos;};
struct cdnode__cdcommon {uint32_t cdc_size;uint32_t cdc_seq;uint32_t cdc_loc;u_char cdc_fusize;u_char cdc_xarlen;u_char cdc_fugsize;u_char cdc_ftype;u_char cdc_fflag;uid_t cdc_uid;gid_t cdc_gid;u_short cdc_mode;int32_t cdc_gen;struct two_time cdc_record_t;char cdc_create_year[4];char cdc_create_month[2];char cdc_create_day[2];char cdc_create_hour[2];char cdc_create_minute[2];char cdc_create_second[2];char cdc_create_zone[1];char cdc_mod_year[4];char cdc_mod_month[2];char cdc_mod_day[2];char cdc_mod_hour[2];char cdc_mod_minute[2];char cdc_mod_second[2];char cdc_mod_zone[1];char cdc_exp_year[4];char cdc_exp_month[2];char cdc_exp_day[2];char cdc_exp_hour[2];char cdc_exp_minute[2];char cdc_exp_second[2];char cdc_exp_zone[1];char cdc_eff_year[4];char cdc_eff_month[2];char cdc_eff_day[2];char cdc_eff_hour[2];char cdc_eff_minute[2];char cdc_eff_second[2];char cdc_eff_zone[1];int32_t cdc_fversion;int32_t cdc_spare[3];};
struct kd_locallookuppn {kd_t kd_struct;kt_t sttime;kptr_t vp;dev_t dev;int32_t i_number;ktype_t v_fstype;ktype_t v_type;short error;uint32_t pad;};
struct kd_asyncpageio {kd_t kd_struct;kptr_t bp;kptr_t b_vp;uint32_t b_flags;int32_t b_bcount;daddr_t b_blkno;bptype_t b_bptype;uint16_t spad;};
struct _XmCommandRec {CorePart core;CompositePart composite;ConstraintPart constraint;XmManagerPart manager;XmBulletinBoardPart bulletin_board;XmSelectionBoxPart selection_box;XmCommandPart command;};
struct _XmGadgetPart {Dimension shadow_thickness;Dimension highlight_thickness;XtCallbackList help_callback;XtPointer user_data;Boolean traversal_on;Boolean highlight_on_enter;Boolean have_traversal;unsigned char unit_type;XmNavigationType navigation_type;Boolean highlight_drawn;Boolean highlighted;Boolean visible;Mask event_mask;XmDirection layout_direction;};
struct kd_umount_vfs {kd_t kd_struct;kptr_t umnt_vfsp;fsid_t umnt_fsid;kflag_t umnt_flag;dev_t umnt_dev;kmtype_t umnt_mtype;short umnt_spad;uint32_t smnt_pad;};
struct _XkbGeometry {Atom name;unsigned short width_mm;unsigned short height_mm;char *label_font;XkbColorPtr label_color;XkbColorPtr base_color;unsigned short sz_properties;unsigned short sz_colors;unsigned short sz_shapes;unsigned short sz_sections;unsigned short sz_doodads;unsigned short sz_key_aliases;unsigned short num_properties;unsigned short num_colors;unsigned short num_shapes;unsigned short num_sections;unsigned short num_doodads;unsigned short num_key_aliases;XkbPropertyPtr properties;XkbColorPtr colors;XkbShapePtr shapes;XkbSectionPtr sections;XkbDoodadPtr doodads;XkbKeyAliasPtr key_aliases;};
struct ki_proc_info {double kpi_freq_ratio;kt_t kpi_time;kptr_t kpi_next[4];kcaddr_t kpi_tbuf[4];kregister_t kpi_incmclk;kregister_t kpi_inckrc;kregister_t kpi_offset_correction;kregister_t kpi_inckclk;kr_t kpi_timestruct[11];kbufno_t kpi_curbuf;uint32_t kpi_kernelcounts[50];uint32_t kpi_syscallcounts[600];kt_t kpi_syscall_times[600];};
struct _XOMCoreRec {XLCd lcd;Display *display;XrmDatabase rdb;char *res_name;char *res_class;XOC oc_list;XlcResourceList resources;int num_resources;XOMCharSetList required_charset;XOMOrientation orientation_list;int directional_dependent;int contextual_drawing;int context_dependent;};
struct __iconv_rec {_iconv_hdr hdr;int ( *init)(iconv_t cd);size_t ( *exec)(iconv_t cd,  char **inbuf, size_t *inbytesleft, char **outbuf, size_t *outbytesleft);int ( *close)(iconv_t cd);int ( *mblen)( char *s, size_t len);shl_t meth_handle;shl_t loc_handle;ConvArr *Tptr;size_t tab_size;wint_t Galley;union __iconv_rec___915B2C925088933724D30EF59E8F3BAA xtend;};
struct kd_userproc {kd_t kd_struct;kr_t ks_swt[11];kt_t ki_syscallbeg;kt_t ks_sys_time;kpkst_t ki_pk_state;utrace_type_t usertype;ksyscallno_t ks_syscal;uint16_t spad;};
struct kd_syscall {kd_t kd_struct;kt_t ks_sttime;kstype_t ks_stype;kboolean_t ks_32bit;uint8_t ks_nargs;uint16_t ks_syscal;uint16_t ks_error;ksrval_t ks_rval1;ksrval_t ks_rval2;kt_t ks_sys_time;};
struct kd_closef {kd_t kd_struct;kptr_t f_data;dev_t f_dev;kftype_t f_type;ktype_t v_fstype;ktype_t v_type;int32_t f_count;uint32_t pad;};
struct kd_resume {kd_t kd_struct;struct ki_runtimes ks_swt[11];kt_t ki_syscallbeg;kpkst_t ki_pk_state;ksyscallno_t ks_syscal;uint16_t spad;uint32_t pad;};
struct kd_struct {krecsz_t rec_sz;krecid_t rec_id;kseqcnt_t seqcnt;kt_t cur_time;tid_t kt_tid;tid_t ut_tid;pid_t P_pid;kspu_t P_cpu;short pad;};
struct _XcmsCCC {Display *dpy;int screenNumber;Visual *visual;XcmsColor clientWhitePt;XcmsCompressionProc gamutCompProc;XPointer gamutCompClientData;XcmsWhiteAdjustProc whitePtAdjProc;XPointer whitePtAdjClientData;XcmsPerScrnInfo *pPerScrnInfo;};
struct vfs {struct vfs *vfs_next;struct vfs *vfs_hash;struct vfs__vfsops *vfs_op;struct vfs__vnode *vfs_vnodecovered;int32_t vfs_flag;int32_t vfs_bsize;uint16_t vfs_exroot;int16_t vfs_exflags;caddr_t vfs_data;int32_t vfs_icount;int16_t vfs_mtype;fsid_t vfs_fsid;struct vfs__log_hdrT *vfs_logp;time_t vfs_mnttime;char vfs_name[1024];dev_t vfs_dev;struct vfs__ncache *vfs_ncachehd;};
union _FDA21FF59698B5CB8B37673BE0D84FBD___D3782B7C0B6FCEFFEB5876E878B431ED {struct ____D3782B7C0B6FCEFFEB5876E878B431ED___7BC4C9E2DA436E276E1C7B0AFF1E1BB3 select_char_set;bit8 size;bit8 column;bit8 line_per_inch;bit8 scsi_clr;struct ____D3782B7C0B6FCEFFEB5876E878B431ED___41C6ACE15BB05B8ADC571FCC2068F6F8 cpr_clear;struct ____D3782B7C0B6FCEFFEB5876E878B431ED___F809745BD539DDC0BF3F6B58B72333C1 cpr_begin_job;struct ____D3782B7C0B6FCEFFEB5876E878B431ED___773984751D4B72F60DA8EA7FE0E4332C cpr_interpret_esc_codes;struct ____D3782B7C0B6FCEFFEB5876E878B431ED___00976F6E7C414A8449E5EC494793DABD cpr_send_pending_buffers;envir_state_type envir_of_peripheral;wants_status_type wants;};
union mode_6_buff___4D7D3BCFC575904160AC3D2F3769897C {struct error_recovery err_recovery_page;struct caching_page caching_page;struct disc_recon disc_reconnect_page;struct dad_form_parms format_device_page;struct geometry_parms disk_geometry_page;struct compression_page data_compr_page;struct config_page device_config_page;struct flex_geometry_parms flex_geometry_page;unsigned char vendor_unique_byte0;};
union ____D3782B7C0B6FCEFFEB5876E878B431ED {struct ____D3782B7C0B6FCEFFEB5876E878B431ED___7BC4C9E2DA436E276E1C7B0AFF1E1BB3 select_char_set;bit8 size;bit8 column;bit8 line_per_inch;bit8 scsi_clr;struct ____D3782B7C0B6FCEFFEB5876E878B431ED___41C6ACE15BB05B8ADC571FCC2068F6F8 cpr_clear;struct ____D3782B7C0B6FCEFFEB5876E878B431ED___F809745BD539DDC0BF3F6B58B72333C1 cpr_begin_job;struct ____D3782B7C0B6FCEFFEB5876E878B431ED___773984751D4B72F60DA8EA7FE0E4332C cpr_interpret_esc_codes;struct ____D3782B7C0B6FCEFFEB5876E878B431ED___00976F6E7C414A8449E5EC494793DABD cpr_send_pending_buffers;envir_state_type envir_of_peripheral;wants_status_type wants;};
struct _26B7AAC916B627D83A009BC2ED2E8DD9 {Dimension margin_width;Dimension margin_height;Widget default_button;Widget dynamic_default_button;Widget cancel_button;Widget dynamic_cancel_button;XtCallbackList focus_callback;XtCallbackList map_callback;XtCallbackList unmap_callback;XtTranslations text_translations;XmFontList button_font_list;XmFontList label_font_list;XmFontList text_font_list;Boolean allow_overlap;Boolean default_position;Boolean auto_unmanage;unsigned char resize_policy;Dimension old_width;Dimension old_height;Dimension old_shadow_thickness;unsigned char shadow_type;Boolean in_set_values;Boolean initial_focus;Boolean no_resize;unsigned char dialog_style;XmString dialog_title;Widget shell;Widget _UNUSED;XmGeoMatrix geo_cache;unsigned char check_set;};
struct _300684C4BCC789212D7EC604FBF8B546 {Cursor cursor;Dimension shadow_thickness;Pixel top_shadow_color;Pixmap top_shadow_pixmap;Pixel bottom_shadow_color;Pixmap bottom_shadow_pixmap;GC top_shadow_GC;GC bottom_shadow_GC;Boolean owner_events;int grab_style;Time post_time;Time unpost_time;Boolean mapped;Window old_focus;int old_revert_to;};
struct _4E230DA965C384CCE937FCE2A8CE1FCC {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;TopLevelShellPart topLevel;ApplicationShellPart application;SessionShellPart session;};
struct _62C51BD45F432495E1F915DE1D05F502 {unsigned int valuemask;Visual *visual;Colormap colormap;unsigned int depth;unsigned int width;unsigned int height;unsigned int x_hotspot;unsigned int y_hotspot;unsigned int cpp;Pixel *pixels;unsigned int npixels;XpmColorSymbol *colorsymbols;unsigned int numsymbols;char *rgb_fname;unsigned int nextensions;XpmExtension *extensions;unsigned int ncolors;XpmColor *colorTable;char *hints_cmt;char *colors_cmt;char *pixels_cmt;unsigned int mask_pixel;int exactColors;unsigned int closeness;unsigned int red_closeness;unsigned int green_closeness;unsigned int blue_closeness;int color_key;Pixel *alloc_pixels;int nalloc_pixels;int alloc_close_colors;int bitmap_format;XpmAllocColorFunc alloc_color;XpmFreeColorsFunc free_colors;void *color_closure;};
struct _92512B1BC772871763CE6BA780016C1C {anyptr *hpa;int eim_bits;dma_A_chain_type *dma_chain_ptr;port_num_type config_port;port_num_type gpio_port_num;u_int open_flag;u_int user_control_lines;int config_mask;u_int card_int_mask;u_int locker_pid;u_short lock_count;u_short delay;u_char width;u_char card_is_busy;u_char my_lu;struct buf buf;gpio1_ocs_type p_ocs[16];gpio1_ocs_type *current_req_ocs;gpio1_ocs_type *free_ocs_list;gpio1_ocs_type *busy_ocs_list;gpio1_ocs_type *signal_list;u_char io_gpio_control;u_char io_gpio_config;};
struct _CC4BA52553A26164E40F03C0211728AA {XLCd lcd;XIC ic_chain;Display *display;XrmDatabase rdb;char *res_name;char *res_class;XIMValuesList *im_values_list;XIMValuesList *ic_values_list;XIMStyles *styles;XIMCallback destroy_callback;char *im_name;XIMResourceList im_resources;unsigned int im_num_resources;XIMResourceList ic_resources;unsigned int ic_num_resources;int visible_position;};
struct _SessionShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;TopLevelShellClassPart top_level_shell_class;ApplicationShellClassPart application_shell_class;SessionShellClassPart session_shell_class;};
struct _XmPrintShellClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;TopLevelShellClassPart top_level_shell_class;ApplicationShellClassPart application_shell_class;XmPrintShellClassPart print_shell_class;};
struct _XicProtoPrivateRec {XICID icid;CARD16 dmy;BITMASK32 flag;BITMASK32 registed_filter_event;EVENTMASK forward_event_mask;EVENTMASK synchronous_event_mask;EVENTMASK filter_event_mask;EVENTMASK intercept_event_mask;EVENTMASK select_event_mask;char *preedit_font;int preedit_font_length;char *status_font;int status_font_length;XimCommitInfo commit_info;XIMResourceList ic_resources;unsigned int ic_num_resources;XIMResourceList ic_inner_resources;unsigned int ic_num_inner_resources;XrmQuark *saved_icvalues;int num_saved_icvalues;XimPendingCallback pend_cb_que;int waitCallback;};
struct _XmDisplayClassRec {CoreClassPart core_class;CompositeClassPart composite_class;ShellClassPart shell_class;WMShellClassPart wm_shell_class;VendorShellClassPart vendor_shell_class;TopLevelShellClassPart top_level_shell_class;ApplicationShellClassPart application_shell_class;XmDisplayClassPart display_class;};
struct _XmPushButtonPart {Boolean fill_on_arm;Dimension show_as_default;Pixel arm_color;Pixmap arm_pixmap;XtCallbackList activate_callback;XtCallbackList arm_callback;XtCallbackList disarm_callback;Boolean armed;Pixmap unarm_pixmap;GC fill_gc;GC background_gc;XtIntervalId timer;unsigned char multiClick;int click_count;Time armTimeStamp;Boolean compatible;Dimension default_button_shadow_thickness;};
struct _XmPrintShellRec {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;TopLevelShellPart topLevel;ApplicationShellPart application;XmPrintShellPart print;};
struct _XmTextSourceRec {struct _XmSourceDataRec *data;AddWidgetProc AddWidget;CountLinesProc CountLines;RemoveWidgetProc RemoveWidget;ReadProc ReadSource;ReplaceProc Replace;ScanProc Scan;GetSelectionProc GetSelection;SetSelectionProc SetSelection;};
struct _XmSpinBoxPart {Dimension arrow_size;Dimension margin_width;Dimension margin_height;Dimension spacing;unsigned int initial_delay;unsigned int repeat_delay;XtCallbackList modify_verify_cb;XtCallbackList value_changed_cb;XRectangle up_arrow_rect;XRectangle down_arrow_rect;Widget textw;int boundary;int last_hit;int make_change;Dimension ideal_height;Dimension ideal_width;GC arrow_gc;GC insensitive_gc;Mask dim_mask;XtIntervalId spin_timer;Boolean up_arrow_pressed;Boolean down_arrow_pressed;unsigned char arrow_layout;unsigned char default_arrow_sensitivity;Dimension detail_shadow_thickness;unsigned char arrow_orientation;};
struct req_entry_type {short uid;boolean powerfail;boolean logch_break_mode;io_subq_type reply_subqueue;bit8 original_request;diag_option_type diag_option;llio_std_header_type save_msg_header;req_parm_type save_io_ptrs;cio_vquad_ptr vquad_chain;cio_vquad_ptr data_vquad_ptr;int request_length;cio_vquad_type vquad[4];char request_block[64];char status_block[64];struct req_entry_type *link;};
struct _XmDisplayRec {CorePart core;CompositePart composite;ShellPart shell;WMShellPart wm;VendorShellPart vendor;TopLevelShellPart topLevel;ApplicationShellPart application;XmDisplayPart display;};
struct ki_pk_state {kid_t p_fsid;kflag_t p_flag;kstate_t p_stat;knice_t p_nice;kstate_t kt_stat;kcpu_t kt_cpu;kflag_t kt_flag;kschedpolicy_t kt_schedpolicy;kpri_t kt_pri;uint16_t pk_pad;};
struct pst_status {int32_t pst_idx;int32_t pst_uid;int32_t pst_pid;int32_t pst_ppid;int32_t pst_dsize;int32_t pst_tsize;int32_t pst_ssize;int32_t pst_nice;struct psdev pst_term;int32_t pst_pgrp;int32_t pst_pri;int32_t pst_addr;int32_t pst_cpu;int32_t pst_utime;int32_t pst_stime;int32_t pst_start;int32_t pst_flag;int32_t pst_stat;int32_t pst_wchan;int32_t pst_procnum;char pst_cmd[64];int32_t pst_time;int32_t pst_cpticks;int32_t pst_cptickstotal;int32_t pst_fss;float pst_pctcpu;int32_t pst_rssize;int32_t pst_suid;char pst_ucomm[15];int32_t pst_shmsize;int32_t pst_mmsize;int32_t pst_usize;int32_t pst_iosize;int32_t pst_vtsize;int32_t pst_vdsize;int32_t pst_vssize;int32_t pst_vshmsize;int32_t pst_vmmsize;int32_t pst_vusize;int32_t pst_viosize;uint32_t pst_minorfaults;uint32_t pst_majorfaults;uint32_t pst_nswap;uint32_t pst_nsignals;uint32_t pst_msgrcv;uint32_t pst_msgsnd;int32_t pst_maxrss;int32_t pst_sid;int32_t pst_schedpolicy;int32_t pst_ticksleft;struct psfileid pst_rdir;struct psfileid pst_cdir;struct psfileid pst_text;int32_t pst_highestfd;int32_t pst_euid;int32_t pst_egid;int32_t pst_ioch;struct pstcycles pst_usercycles;struct pstcycles pst_systemcycles;struct pstcycles pst_interruptcycles;int32_t pst_gid;int32_t pst_sgid;int32_t pst_nlwps;struct pstsigset pst_psig;int32_t pst_lwpid;int32_t pst_valid;int32_t pst_text_size;int32_t pst_data_size;};
struct _IceConn {unsigned int unused2;IceConnectStatus connection_status;unsigned char my_ice_version_index;struct _IceConn___XtransConnInfo *trans_conn;unsigned int send_sequence;unsigned int receive_sequence;char *connection_string;char *vendor;char *release;char *inbuf;char *inbufptr;char *inbufmax;char *outbuf;char *outbufptr;char *outbufmax;char *scratch;unsigned int scratch_size;int dispatch_level;IcePointer context;_IceProcessMsgInfo *process_msg_info;char his_min_opcode;char his_max_opcode;unsigned char open_ref_count;unsigned char proto_ref_count;IceListenObj listen_obj;_IceSavedReplyWait *saved_reply_waits;_IcePingWait *ping_waits;_IceConnectToYouInfo *connect_to_you;_IceProtoSetupToYouInfo *protosetup_to_you;_IceConnectToMeInfo *connect_to_me;_IceProtoSetupToMeInfo *protosetup_to_me;};
struct _XkbDesc {struct _XDisplay *dpy;unsigned short flags;unsigned short device_spec;KeyCode min_key_code;KeyCode max_key_code;XkbControlsPtr ctrls;XkbServerMapPtr server;XkbClientMapPtr map;XkbIndicatorPtr indicators;XkbNamesPtr names;XkbCompatMapPtr compat;XkbGeometryPtr geom;};
struct kd_swtch {kd_t kd_struct;kptr_t ki_kt_wchan;kptr_t ki_sleep_caller;kr_t ks_swt[11];kt_t ki_syscallbeg;kt_t ks_sys_time;kpkst_t ki_pk_state;ksyscallno_t ks_syscal;kpri_t ki_kt_usrpri;uint32_t pad;};
struct kd_fork {struct kd_syscall kd_syscall;kpkst_t ki_pk_state;uint32_t p_pl_flags;dev_t p_ttyd;uid_t p_uid;uid_t p_suid;pid_t p_pgrp;pid_t p_ppid;kptr_t p_vas;uid_t kd_u_uid;uid_t kd_u_ruid;gid_t kd_u_gid;gid_t kd_u_rgid;gid_t u_sgid;};
union _EF1C5D99769BCE30319CAF8488AFDF20___199E9548C3C848AC2EFDDFCE03257421 {XcmsRGB RGB;XcmsRGBi RGBi;XcmsCIEXYZ CIEXYZ;XcmsCIEuvY CIEuvY;XcmsCIExyY CIExyY;XcmsCIELab CIELab;XcmsCIELuv CIELuv;XcmsTekHVC TekHVC;XcmsPad Pad;};
struct _07CF3C5657E15CE751200314299C128D {XRectangle area;XRectangle area_needed;XPoint spot_location;Colormap colormap;Atom std_colormap;unsigned int foreground;unsigned int background;Pixmap background_pixmap;XFontSet fontset;int line_spacing;Cursor cursor;XIMCallback start_callback;XIMCallback done_callback;XIMCallback draw_callback;XIMCallback caret_callback;XIMPreeditState preedit_state;XIMCallback state_notify_callback;};
struct _7945D87D9A9F9BB91054424B8A8AB447 {int value;int maximum;int minimum;unsigned char orientation;unsigned char processing_direction;XmString title;XmFontList font_list;XFontStruct *font_struct;Boolean show_value;short decimal_points;Dimension scale_width;Dimension scale_height;Dimension highlight_thickness;Boolean highlight_on_enter;XtCallbackList drag_callback;XtCallbackList value_changed_callback;int last_value;int slider_size;GC foreground_GC;int show_value_x;int show_value_y;int show_value_width;int show_value_height;int scale_multiple;XtEnum sliding_mode;XtEnum slider_visual;XtEnum slider_mark;XtEnum show_arrows;Boolean editable;XtCallbackList convert_callback;Region value_region;};
struct _B1B67A1858EAE29686262E19A9779EE3 {bit8 cur_dam_state;bit8 cur_dam_substate;boolean frame_release;bit8 da_hw_address;port_num_type dam_port_num;integer dam_pf_num;port_num_type cam_port_num;io_subq_type cam_req_subq;dam_lock_info_type dam_lock_info;struct req_entry_type my_req;int probe_addr;int probe_id;int desc_retry;cs80_2cmd_t cs80cmd;bit8 desc[8][37];bit8 status[8][20];};
struct _XmArrowButtonGadgetPart {XtCallbackList activate_callback;XtCallbackList arm_callback;XtCallbackList disarm_callback;unsigned char direction;Boolean selected;short top_count;short cent_count;short bot_count;XRectangle *top;XRectangle *cent;XRectangle *bot;Position old_x;Position old_y;GC arrow_GC;XtIntervalId timer;unsigned char multiClick;int click_count;GC insensitive_GC;GC background_GC;GC top_shadow_GC;GC bottom_shadow_GC;GC highlight_GC;Pixel foreground;Pixel background;Pixel top_shadow_color;Pixmap top_shadow_pixmap;Pixel bottom_shadow_color;Pixmap bottom_shadow_pixmap;Pixel highlight_color;Pixmap highlight_pixmap;Boolean fill_bg_box;Dimension detail_shadow_thickness;};
struct _XmDropSiteManagerPart {XtCallbackProc notifyProc;XtCallbackProc treeUpdateProc;XtPointer client_data;XtPointer dragUnderData;XtPointer curInfo;Time curTime;Position curX;Position curY;Position oldX;Position oldY;unsigned char curDropSiteStatus;Widget curDragContext;Boolean curAnimate;unsigned char curOperations;unsigned char curOperation;XmRegion curAncestorClipRegion;XmRegion newAncestorClipRegion;XtPointer dsTable;XtPointer dsRoot;Position rootX;Position rootY;Dimension rootW;Dimension rootH;XtPointer clipperList;_XmDropSiteUpdateInfo updateInfo;};
struct _XmWrapperDataRec {struct _XmWrapperDataRec *next;WidgetClass widgetClass;XtInitProc initializeLeaf;XtSetValuesFunc setValuesLeaf;XtArgsProc getValuesLeaf;XtRealizeProc realize;XtWidgetClassProc classPartInitLeaf;XtWidgetProc resize;XtGeometryHandler geometry_manager;Cardinal init_depth;int initializeLeafCount;int setValuesLeafCount;int getValuesLeafCount;XtInitProc constraintInitializeLeaf;XtSetValuesFunc constraintSetValuesLeaf;int constraintInitializeLeafCount;int constraintSetValuesLeafCount;};
struct _XmPrimitivePart {Pixel foreground;Dimension shadow_thickness;Pixel top_shadow_color;Pixmap top_shadow_pixmap;Pixel bottom_shadow_color;Pixmap bottom_shadow_pixmap;Dimension highlight_thickness;Pixel highlight_color;Pixmap highlight_pixmap;XtCallbackList help_callback;XtPointer user_data;Boolean traversal_on;Boolean highlight_on_enter;Boolean have_traversal;unsigned char unit_type;XmNavigationType navigation_type;Boolean highlight_drawn;Boolean highlighted;GC highlight_GC;GC top_shadow_GC;GC bottom_shadow_GC;XtCallbackList convert_callback;XtCallbackList popup_handler_callback;XmDirection layout_direction;};
struct _XmScrollBarPart {int value;int minimum;int maximum;int slider_size;unsigned char orientation;unsigned char processing_direction;XtEnum show_arrows;int increment;int page_increment;int initial_delay;int repeat_delay;XtCallbackList value_changed_callback;XtCallbackList increment_callback;XtCallbackList decrement_callback;XtCallbackList page_increment_callback;XtCallbackList page_decrement_callback;XtCallbackList to_top_callback;XtCallbackList to_bottom_callback;XtCallbackList drag_callback;GC unhighlight_GC;GC foreground_GC;Pixel trough_color;Drawable pixmap;Boolean sliding_on;int saved_value;XtEnum etched_slider;XtEnum slider_mark;unsigned char flags;unsigned char add_flags;unsigned char change_type;XtIntervalId timer;short initial_x;short initial_y;short separation_x;short separation_y;short slider_x;short slider_y;short slider_width;short slider_height;short slider_area_x;short slider_area_y;short slider_area_width;short slider_area_height;short arrow1_x;short arrow1_y;unsigned char arrow1_orientation;Boolean arrow1_selected;short arrow2_x;short arrow2_y;unsigned char arrow2_orientation;Boolean arrow2_selected;short arrow_width;short arrow_height;short arrow1_top_count;short arrow1_cent_count;short arrow1_bot_count;XRectangle *arrow1_top;XRectangle *arrow1_cent;XRectangle *arrow1_bot;short arrow2_top_count;short arrow2_cent_count;short arrow2_bot_count;XRectangle *arrow2_top;XRectangle *arrow2_cent;XRectangle *arrow2_bot;GC unavailable_GC;unsigned short snap_back_multiple;XtEnum sliding_mode;Boolean editable;Mask dimMask;};
struct _XimDefICValues {XIMStyle input_style;Window client_window;Window focus_window;unsigned int filter_events;XIMCallback geometry_callback;char *res_name;char *res_class;XIMCallback destroy_callback;XIMCallback preedit_state_notify_callback;XIMCallback string_conversion_callback;XIMStringConversionText string_conversion;XIMResetState reset_state;XIMHotKeyTriggers *hotkey;XIMHotKeyState hotkey_state;ICPreeditAttributes preedit_attr;ICStatusAttributes status_attr;};
struct _XmNotebookPart {int current_page_number;int first_page_number;int last_page_number;unsigned char orientation;unsigned char back_page_pos;Cardinal back_page_number;Dimension back_page_size;Pixel back_page_foreground;Pixel back_page_background;Pixel frame_background;unsigned char binding_type;Pixmap binding_pixmap;Pixmap spiral_pixmap;Dimension binding_width;Dimension margin_width;Dimension margin_height;Dimension major_spacing;Dimension minor_spacing;Dimension shadow_thickness;XtCallbackList page_change_callback;Widget scroller;Widget scroller_child;Widget next_major;Widget prev_major;Widget next_minor;Widget prev_minor;Dimension real_binding_width;Dimension real_back_page_number;Dimension page_width;Dimension page_height;Dimension status_width;Dimension status_height;Dimension major_width;Dimension major_height;Dimension minor_width;Dimension minor_height;Dimension scroller_width;Dimension scroller_height;Dimension major_scroller_width;Dimension major_scroller_height;Dimension minor_scroller_width;Dimension minor_scroller_height;Dimension frame_width;Dimension frame_height;Widget first_major;Widget old_top_major;Widget top_major;Widget last_major;Widget first_minor;Widget old_top_minor;Widget top_minor;Widget last_minor;Widget constraint_child;Dimension major_shadow_thickness;Dimension minor_shadow_thickness;Widget major_shadow_child;Widget minor_shadow_child;Boolean in_setshadow;unsigned char major_pos;unsigned char minor_pos;unsigned char binding_pos;unsigned char which_tab;int last_alloc_num;unsigned char scroller_status;unsigned short need_scroller;Boolean dynamic_last_page_num;Boolean in_callback;GC back_page_gc;GC frame_gc;GC binding_gc;GC foreground_gc;GC background_gc;Boolean first_change_managed;XmScrollFrameData scroll_frame_data;};
struct _XmLabelPart {_XmString _label;_XmString _acc_text;KeySym mnemonic;XmStringCharSet mnemonicCharset;char *accelerator;unsigned char label_type;unsigned char alignment;unsigned char string_direction;XmFontList font;Dimension margin_height;Dimension margin_width;Dimension margin_left;Dimension margin_right;Dimension margin_top;Dimension margin_bottom;Boolean recompute_size;Pixmap pixmap;Pixmap pixmap_insen;GC normal_GC;GC insensitive_GC;XRectangle TextRect;XRectangle acc_TextRect;Boolean skipCallback;unsigned char menu_type;Boolean computing_size;Dimension acc_left_delta;Dimension acc_right_delta;Dimension *baselines;Boolean check_set_render_table;};
struct kd_enqueue2 {kt_t b_timeval_lu;kptr_t bp;uint32_t b_flags;int32_t b_bcount;daddr_t b_blkno;bptype_t b_bptype;uint16_t b2_flags;pid_t b_upid;pid_t b_apid;tid_t b_uutid;tid_t b_autid;tid_t b_uktid;tid_t b_aktid;int32_t b_sectno;int32_t pad;kptr_t b_vp;kt_t b_timeval_at;};
struct kd_smount {kd_t kd_struct;kptr_t smnt_vfsp;fsid_t smnt_fsid;kflag_t smnt_flag;int32_t smnt_bsize;int32_t smnt_mnttime;dev_t smnt_dev;kmtype_t smnt_mtype;uint16_t smnt_spad;uint32_t smnt_pad;};
struct cdnode {struct cdnode *cd_chain[2];struct vnode cd_vnode;struct vnode *cd_devvp;uint32_t cd_format;uint32_t cd_flag;dev_t cd_dev;cdno_t cd_pnum;cdno_t cd_num;cdno_t cd_nextnum;int cd_diroff;struct cdnode__cdfs *cd_fs;dev_t cd_rdev;daddr_t cd_nextr;struct cdnode___881309E4F9CA653DD687A11B61F33914 cd_fr;struct cdnode__mount *cd_mount;uint32_t cd_cddir_offset;uint32_t cd_dirent_offset;dev_t cd_fdev;time_t cd_mtime;time_t cd_ctime;time_t cd_atime;int32_t cd_rrflags;int32_t cd_spare[1];struct cdnode__cdcommon cd_cdc;};
struct term {char __b1;char __b2;char __b3;char __b4;char __b5;char __b6;char __b7;char __b8;char __b9;char __b10;char __b11;char __b12;char __b13;char __b14;char __b15;char __b16;char __b17;char __b18;char __b19;char __b20;char __b21;short __c1;short __c2;short __c3;short __c4;short __c5;short __c6;short __c7;short __c8;struct _Vr2_Astrs _Vr2_Astrs;struct _Vr2_Bstrs _Vr2_Bstrs;short _Filedes;_SGTTY _Ottyb;_SGTTY _Nttyb;struct __bool_struct *__bools;struct __num_struct *__nums;struct __str_struct *__strs;char *__strtab;int __timeout;attr_t __sgr_mode;attr_t __sgr_faked;int __delay;int __inputfd;int __check_fd;_KEY_MAP **__keys;_KEY_MAP *__internal_keys;short __ksz;short __lastkey_ordered;short __lastmacro_ordered;short __first_macro;unsigned int __funckeystarter[256];unsigned int __fl_rawmode;unsigned int __fl_typeahdok;unsigned int __cursorstate;unsigned int __iwait;short __regs[26];int __input_queue[32];short __ungotten;char __chars_on_queue;cchar_t *__acsmap;char *__turn_on_seq[15];attr_t __bit_vector;char *__cursor_seq[3];char __termname[15];char *__turn_off_seq[3];attr_t __check_turn_off;_Color_pair __cur_pair;_Color_pair *__pairs_tbl;_Color *__color_tbl;};
union _1102A1E8B20588E5B4B19CB5CB1C4961___5806BA520F5C48DBC2069CFC83B2A219 {dm_io_req_type dm_req;dm_io_reply_type dm_reply;dm_io_event_type dm_event;do_bind_req_type do_bind_req;do_bind_reply_type do_bind_reply;bind_req_type bind_req;bind_reply_type bind_reply;creation_info_type creation_info;diag_req_type diag_req;diag_reply_type diag_reply;};
union _85014B45290BE0AD558ABC6FDBC2A83C___F02C4E2EEC466ABBB014B1D19840A86D {creation_info_type creation_info;do_bind_req_type do_bind_req;do_bind_reply_type do_bind_reply;bind_req_type bind_req;bind_reply_type bind_reply;cio_dma_req_type cio_dma_req;cio_dma_reply_type cio_dma_reply;cio_io_event_type cio_io_event;cio_ctrl_req_type cio_ctrl_req;cio_ctrl_reply_type cio_ctrl_reply;};
struct _62FDF7DDCD87E5F8C2E5C55156639A56 {short state;short io_state;short old_card;short lu;short diag_port;short msg_id;short ctrl_msg_id;short msg_id_from_above;short pf_trans_num;int shadow7;int shadowB;int Reg_H;int next_msg_id;int trans_num;int timer_id;int req_state;int wait_status;mask_type config_mask;mask_type flags;gpio0_msg_type localmsg;struct buf buf;struct buf resetbuf;struct proc *req_process;mask_type int_mask;int interface_type;int usecs_left;int io_s0;int ctl;int hndshk;int edg;char b_data_buf[67];char *b_data;data_ptr_type b_data_dpt;int hw_addr_1;port_num_type config_port;port_num_type my_port;port_num_type cam_port;io_subq_type cam_subq;cio_vquad_type vquad;ciodio *ciodio_ptr;bit16 buffer_16;struct per_open_entry pot[16];struct per_open_entry *pot_head;struct per_open_entry *pot_end;pid_t locker;int pi_lock_ct;};
struct _XmDragOverShellPart {Position hotX;Position hotY;unsigned char cursorState;unsigned char mode;unsigned char activeMode;Position initialX;Position initialY;XmDragIconObject stateIcon;XmDragIconObject opIcon;XmDragOverBlendRec cursorBlend;XmDragOverBlendRec rootBlend;Pixel cursorForeground;Pixel cursorBackground;Cursor ncCursor;Cursor activeCursor;XmBackingRec backing;Pixmap tmpPix;Pixmap tmpBit;Boolean isVisible;Boolean installColormap;Boolean holePunched;Widget colormapWidget;Widget colormapShell;Boolean colormapOverride;Colormap *savedColormaps;int numSavedColormaps;};
struct _XmDropTransferPart {XmDropTransferEntry drop_transfers;Cardinal num_drop_transfers;Atom selection;Widget dragContext;Time timestamp;Boolean incremental;Window source_window;unsigned int tag;XtSelectionCallbackProc transfer_callback;unsigned char transfer_status;Atom motif_drop_atom;XmDropTransferList drop_transfer_lists;Cardinal num_drop_transfer_lists;Cardinal cur_drop_transfer_list;Cardinal cur_xfer;Atom *cur_targets;XtPointer *cur_client_data;};
struct _XmComboBoxPart {unsigned char type;unsigned char match_behavior;Dimension highlight_thickness;Dimension arrow_size;Dimension arrow_spacing;Dimension margin_width;Dimension margin_height;XtCallbackList selection_callback;XmString selected_item;int selected_position;XmFontList render_table;Widget list_shell;Widget list;Widget scrolled_w;Widget vsb;Widget hsb;int ideal_ebheight;int ideal_ebwidth;GC arrow_GC;XRectangle hit_rect;Dimension arrow_shadow_width;Boolean arrow_pressed;Boolean highlighted;Boolean scrolling;XtEnum shell_state;Boolean text_changed;Widget edit_box;XmStringTable items;int item_count;int visible_item_count;short columns;XtEnum position_mode;};
struct _XmGeoMatrixRec {Widget composite;Widget instigator;XtWidgetGeometry instig_request;XtWidgetGeometry parent_request;XtWidgetGeometry *in_layout;XmKidGeometry boxes;XmGeoMajorLayout layouts;Dimension margin_w;Dimension margin_h;Boolean stretch_boxes;Boolean uniform_border;Dimension border;Dimension max_major;Dimension boxes_minor;Dimension fill_minor;Dimension width;Dimension height;XmGeoExceptProc set_except;XmGeoExceptProc almost_except;XmGeoExceptProc no_geo_request;XtPointer extension;XmGeoExtDestructorProc ext_destructor;XmGeoArrangeProc arrange_boxes;unsigned char major_order;};
struct _InputDataRec {XmTextWidget widget;XmTextScanType *sarray;int sarraycount;int new_sel_length;int threshold;SelectionHint selectionHint;SelectionHint Sel2Hint;XtIntervalId select_id;XmTextScanType stype;XmTextScanDirection extendDir;XmTextScanDirection Sel2ExtendDir;XmTextPosition origLeft;XmTextPosition origRight;XmTextPosition Sel2OrigLeft;XmTextPosition Sel2OrigRight;XmTextPosition stuffpos;XmTextPosition sel2Left;XmTextPosition sel2Right;XmTextPosition anchor;Position select_pos_x;Position select_pos_y;Boolean pendingdelete;Boolean syncing;Boolean extending;Boolean Sel2Extending;Boolean hasSel2;Boolean has_destination;Boolean selectionMove;Boolean cancel;Boolean overstrike;Boolean sel_start;Time dest_time;Time sec_time;Time lasttime;Boolean selectionLink;XtIntervalId drag_id;_XmTextActionRec *transfer_action;};
struct vas {struct p_lle va_ll;int va_hilevel;preg_t *va_pslpath[4];int va_refcnt;pgcnt_t va_rss;pgcnt_t va_prss;pgcnt_t va_dprss;struct vas__proc *va_proc;vas_flags_t va_flags;struct vas__file *va_fp;uint32_t va_wcount;struct rw_lock va_vaslock;struct ucred *va_cred;struct hdlvas va_hdl;pgcnt_t va_ki_vss;u_char va_ki_flag;u_char va_stlocked;pgcnt_t va_ucount;runenv_t va_runenv;lgpg_env_t va_lgpg_env;unsigned int va_winId;struct vas_window *va_winMap;};
union _5546CF314AB66BC0C9A48B86C8E58389___F4C8BAAF2D6A567135A62292FDA07584 {int ctrl_word;int sector_addr;buff_data_type buff_data;int w_ctrl_word;int w_sector_addr;buff_data_type w_buff_data;ciper_write_type ciper_write;struct ____F4C8BAAF2D6A567135A62292FDA07584___EE0FC0C350DA985F345B12E3A23DD620 get_dev_status_func;addr_ctrl_type addr_ctrl;serial_ctrl_type serial_ctrl;terminal_ctrl_type terminal_ctrl;printer_ctrl_type printer_ctrl;tape_ctrl_type tape_ctrl;tape_acl_ctrl_type tape_acl_ctrl;da_ctrl_type da_ctrl;da_addr_type da_addr;};
union _A9F0CF7AEEAE18E8E3DE5B9A9FBAEC8A___E26DABB5958D65260C087DD1F50298F6 {hw_identify_info_type hw_identify_info;hw_self_test_type hw_self_test_info;hw_loopback_info_type hw_loopback_info;hw_status_info_type hw_status_info;hw_dump_info_type hw_dump_info;hw_descrip_info_type hw_descrip_info;hw_rollcall_info_type hw_rollcall_info;hw_util_info_type hw_util_info;mgr_control_info_type mgr_control_info;mgr_set_state_info_type mgr_set_state_info;io_redirecting_info_type io_redirecting_info;};
union ____E26DABB5958D65260C087DD1F50298F6 {hw_identify_info_type hw_identify_info;hw_self_test_type hw_self_test_info;hw_loopback_info_type hw_loopback_info;hw_status_info_type hw_status_info;hw_dump_info_type hw_dump_info;hw_descrip_info_type hw_descrip_info;hw_rollcall_info_type hw_rollcall_info;hw_util_info_type hw_util_info;mgr_control_info_type mgr_control_info;mgr_set_state_info_type mgr_set_state_info;io_redirecting_info_type io_redirecting_info;};
union ____F4C8BAAF2D6A567135A62292FDA07584 {int ctrl_word;int sector_addr;buff_data_type buff_data;int w_ctrl_word;int w_sector_addr;buff_data_type w_buff_data;ciper_write_type ciper_write;struct ____F4C8BAAF2D6A567135A62292FDA07584___EE0FC0C350DA985F345B12E3A23DD620 get_dev_status_func;addr_ctrl_type addr_ctrl;serial_ctrl_type serial_ctrl;terminal_ctrl_type terminal_ctrl;printer_ctrl_type printer_ctrl;tape_ctrl_type tape_ctrl;tape_acl_ctrl_type tape_acl_ctrl;da_ctrl_type da_ctrl;da_addr_type da_addr;};
struct _4B97BEF68D37596A26C9A4C9C2EFDF5A {int vmin;int vmax;int vOrigin;int vExtent;int hmin;int hmax;int hOrigin;int hExtent;Position hsbX;Position hsbY;Dimension hsbWidth;Dimension hsbHeight;Position vsbX;Position vsbY;Dimension vsbWidth;Dimension vsbHeight;Position GivenHeight;Position GivenWidth;Dimension AreaWidth;Dimension AreaHeight;Dimension WidthPad;Dimension HeightPad;Position XOffset;Position YOffset;Dimension pad;Boolean hasHSB;Boolean hasVSB;Boolean InInit;Boolean FromResize;unsigned char VisualPolicy;unsigned char ScrollPolicy;unsigned char ScrollBarPolicy;unsigned char Placement;XmScrollBarWidget hScrollBar;XmScrollBarWidget vScrollBar;XmDrawingAreaWidget ClipWindow;Widget WorkWindow;XtCallbackList traverseObscuredCallback;XtEnum auto_drag_model;XtIntervalId auto_drag_timer;Boolean scroll_frame_inited;XmScrollFrameData scroll_frame_data;XtPointer auto_drag_rects;XtPointer auto_drag_closure;};
struct _B5406AF633C6B856C397C3AA34CE31AC {XIM im;XIC next;Window client_window;XIMStyle input_style;Window focus_window;unsigned int filter_events;XIMCallback geometry_callback;char *res_name;char *res_class;XIMCallback destroy_callback;XIMCallback string_conversion_callback;XIMStringConversionText string_conversion;XIMResetState reset_state;XIMHotKeyTriggers *hotkey;XIMHotKeyState hotkey_state;ICPreeditAttributes preedit_attr;ICStatusAttributes status_attr;};
struct _XmLabelGadgetPart {_XmString _label;_XmString _acc_text;KeySym mnemonic;XmStringCharSet mnemonicCharset;char *accelerator;XmFontList font;Pixmap pixmap;Pixmap pixmap_insen;GC normal_GC;GC insensitive_GC;XRectangle TextRect;XRectangle acc_TextRect;XmLabelGCacheObjPart *cache;Dimension acc_left_delta;Dimension acc_right_delta;Dimension *baselines;XtEnum fill_bg_box;Boolean check_set_render_table;};
struct _OutputDataRec {XmFontList fontlist;unsigned int blinkrate;Boolean wordwrap;Boolean cursor_position_visible;Boolean autoshowinsertpoint;Boolean hasfocus;Boolean has_rect;Boolean handlingexposures;Boolean exposevscroll;Boolean exposehscroll;Boolean resizewidth;Boolean resizeheight;Boolean scrollvertical;Boolean scrollhorizontal;Boolean scrollleftside;Boolean scrolltopside;Boolean ignorevbar;Boolean ignorehbar;short cursor_on;Boolean refresh_ibeam_off;Boolean suspend_hoffset;Boolean use_fontset;Boolean have_inverted_image_gc;OnOrOff blinkstate;Position insertx;Position inserty;int number_lines;int leftmargin;int rightmargin;int topmargin;int bottommargin;int scrollwidth;int vsliderSize;int hoffset;int averagecharwidth;int tabwidth;short columns;short rows;Dimension lineheight;Dimension minwidth;Dimension minheight;Dimension prevW;Dimension prevH;Dimension cursorwidth;Dimension cursorheight;Dimension font_ascent;Dimension font_descent;XtIntervalId timerid;Pixmap cursor;Pixmap add_mode_cursor;Pixmap ibeam_off;Pixmap stipple_tile;GC gc;GC imagegc;Widget vbar;Widget hbar;XFontStruct *font;GC save_gc;short columns_set;short rows_set;XmRenderTable rendertable;GC cursor_gc;int scrollheight;int voffset;int tabheight;Dimension linewidth;Boolean suspend_voffset;};
union _xkbEvent___1A318C185F777B9ECB86573CC964DEF2 {xkbAnyEvent any;xkbNewKeyboardNotify new_kbd;xkbMapNotify map;xkbStateNotify state;xkbControlsNotify ctrls;xkbIndicatorNotify indicators;xkbNamesNotify names;xkbCompatMapNotify compat;xkbBellNotify bell;xkbActionMessage message;xkbAccessXNotify accessx;xkbExtensionDeviceNotify device;};
struct _XmMenuSystemTraitRec {int version;XmMenuSystemWidgetProc type;XmMenuSystemWidgetProc status;XmMenuSystemCascadeProc cascade;XmMenuSystemVerifyProc verifyButton;XmMenuSystemControlTraversalProc controlTraversal;XmMenuSystemDisarmProc menuBarCleanup;XmMenuSystemPopdownProc popdown;XmMenuSystemPopdownProc buttonPopdown;XmMenuSystemPositionProc reparentToTearOffShell;XmMenuSystemPositionProc reparentToMenuShell;XmMenuSystemDisarmProc arm;XmMenuSystemDisarmProc disarm;XmMenuSystemDisarmProc tearOffArm;XmMenuSystemEntryCallbackProc entryCallback;XmMenuSystemUpdateHistoryProc updateHistory;XmMenuSystemDisarmProc getLastSelectToplevel;XmMenuSystemPositionProc position;XmMenuSystemUpdateBindingsProc updateBindings;XmMenuSystemRecordPostFromWidgetProc recordPostFromWidget;XmMenuSystemPositionProc popdownEveryone;XmMenuSystemDisarmProc childFocus;XmMenuSystemPopupPostedProc getPopupPosted;};
struct _XmRowColumnPart {Dimension margin_height;Dimension margin_width;Dimension spacing;Dimension entry_border;Widget help_pushbutton;Widget cascadeBtn;XmString option_label;Widget option_submenu;XmRCKidGeometry boxes;WidgetClass entry_class;XtCallbackList entry_callback;XtCallbackList map_callback;XtCallbackList unmap_callback;Widget memory_subwidget;short num_columns;String menuPost;unsigned int postButton;int postEventType;unsigned int postModifiers;String menu_accelerator;KeySym mnemonic;XmStringCharSet mnemonicCharSet;unsigned char entry_alignment;unsigned char packing;unsigned char type;unsigned char orientation;Boolean armed;Boolean adjust_margin;Boolean adjust_last;Boolean do_alignment;Boolean radio;Boolean radio_one;Boolean homogeneous;Boolean resize_width;Boolean resize_height;XtEnum popup_enabled;Dimension old_width;Dimension old_height;Dimension old_shadow_thickness;Widget *postFromList;int postFromCount;int postFromListSize;Widget lastSelectToplevel;Widget popupPosted;unsigned char oldFocusPolicy;unsigned char TearOffModel;Widget ParentShell;Widget tear_off_control;Boolean to_state;XtCallbackList tear_off_activated_callback;XtCallbackList tear_off_deactivated_callback;Widget tear_off_lastSelectToplevel;Widget tear_off_focus_item;unsigned char entry_vertical_alignment;unsigned char popup_menu_click;XtWorkProcId popup_workproc;XmString tear_off_title;};
struct _XmManagerPart {Pixel foreground;Dimension shadow_thickness;Pixel top_shadow_color;Pixmap top_shadow_pixmap;Pixel bottom_shadow_color;Pixmap bottom_shadow_pixmap;Pixel highlight_color;Pixmap highlight_pixmap;XtCallbackList help_callback;XtPointer user_data;Boolean traversal_on;unsigned char unit_type;XmNavigationType navigation_type;Boolean event_handler_added;Widget active_child;Widget highlighted_widget;Widget accelerator_widget;Boolean has_focus;XmStringDirection string_direction;XmKeyboardData *keyboard_list;short num_keyboard_entries;short size_keyboard_list;XmGadget selected_gadget;XmGadget eligible_for_multi_button_event;GC background_GC;GC highlight_GC;GC top_shadow_GC;GC bottom_shadow_GC;Widget initial_focus;XtCallbackList popup_handler_callback;};
struct kd_queuedone2 {kt_t b_timeval_eq;kptr_t bp;kptr_t b_vp;kptr_t b_rp;dev_t b_lvdev;int32_t b_bcount;daddr_t b_blkno;pid_t b_upid;pid_t b_apid;tid_t b_uutid;tid_t b_autid;tid_t b_uktid;tid_t b_aktid;uint32_t b_resid;ksite_t b_site;uint32_t b_sectno;uint32_t b_flags;uint16_t b2_flags;bptype_t b_bptype;bqlen_t b_queuelen;uint16_t spad;uint32_t pad;};
struct stat {dev_t st_dev;ino_t st_ino;mode_t st_mode;nlink_t st_nlink;unsigned short st_reserved1;unsigned short st_reserved2;dev_t st_rdev;off_t st_size;time_t st_atime;int st_spare1;time_t st_mtime;int st_spare2;time_t st_ctime;int st_spare3;int st_blksize;blkcnt_t st_blocks;unsigned int st_remote;dev_t st_netdev;ino_t st_netino;__cnode_t st_cnode;__cnode_t st_rcnode;__site_t st_netsite;short st_fstype;dev_t st_realdev;unsigned short st_basemode;unsigned short st_spareshort;uid_t st_uid;gid_t st_gid;int32_t st_spare4[3];};
struct _46C3598924410A8263981A6EE1F85A96 {XCloseLCProc close;XlcMapModifiersProc map_modifiers;XOpenOMProc open_om;XOpenIMProc open_im;XrmInitParseInfoProc init_parse_info;XmbTextPropertyToTextListProc mb_text_prop_to_list;XwcTextPropertyToTextListProc wc_text_prop_to_list;XmbTextListToTextPropertyProc mb_text_list_to_prop;XwcTextListToTextPropertyProc wc_text_list_to_prop;XwcFreeStringListProc wc_free_string_list;XDefaultStringProc default_string;XRegisterIMInstantiateCBProc register_callback;XUnregisterIMInstantiateCBProc unregister_callback;};
struct _73A71279A51BA5863B442246BC81936D {XmFontList default_font_list;unsigned char focus_policy;XmFocusData focus_data;unsigned char delete_response;unsigned char unit_type;MwmHints mwm_hints;MwmInfo mwm_info;String mwm_menu;XtCallbackList focus_moved_callback;Widget old_managed;Position xAtMap;Position yAtMap;Position xOffset;Position yOffset;unsigned int lastOffsetSerial;unsigned int lastMapRequest;Boolean externalReposition;unsigned char mapStyle;XtCallbackList realize_callback;XtGrabKind grab_kind;Boolean audible_warning;XmFontList button_font_list;XmFontList label_font_list;XmFontList text_font_list;String input_method_string;String preedit_type_string;unsigned int light_threshold;unsigned int dark_threshold;unsigned int foreground_threshold;unsigned int im_height;XtPointer im_info;Boolean im_vs_height_set;XmDirection layout_direction;XmInputPolicy input_policy;Boolean verify_preedit;};
struct _94F528D68A4C572CDF725B1D8F1779AC {Boolean mwmPresent;unsigned short numReparented;int darkThreshold;int foregroundThreshold;int lightThreshold;XmDragIconObject defaultNoneCursorIcon;XmDragIconObject defaultValidCursorIcon;XmDragIconObject defaultInvalidCursorIcon;XmDragIconObject defaultMoveCursorIcon;XmDragIconObject defaultCopyCursorIcon;XmDragIconObject defaultLinkCursorIcon;XmDragIconObject defaultSourceCursorIcon;Cursor nullCursor;XmDragCursorRec *cursorCache;Cardinal maxCursorWidth;Cardinal maxCursorHeight;Cursor menuCursor;unsigned char unpostBehavior;XFontStruct *font_struct;int h_unit;int v_unit;XtPointer scratchPixmaps;unsigned char moveOpaque;XmScreenColorProc color_calc_proc;XmAllocColorProc color_alloc_proc;XtEnum bitmap_conversion_model;XmDragIconObject xmStateCursorIcon;XmDragIconObject xmMoveCursorIcon;XmDragIconObject xmCopyCursorIcon;XmDragIconObject xmLinkCursorIcon;XmDragIconObject xmSourceCursorIcon;GC imageGC;int imageGCDepth;Pixel imageForeground;Pixel imageBackground;XtPointer screenInfo;XtPointer user_data;Pixmap insensitive_stipple_bitmap;XtPointer inUsePixmaps;};
struct _EE50BAD242841D9D70217C5858A39822 {XDestroyOCProc destroy;XSetOCValuesProc set_values;XGetOCValuesProc get_values;XmbTextEscapementProc mb_escapement;XmbTextExtentsProc mb_extents;XmbTextPerCharExtentsProc mb_extents_per_char;XmbDrawStringProc mb_draw_string;XmbDrawImageStringProc mb_draw_image_string;XwcTextEscapementProc wc_escapement;XwcTextExtentsProc wc_extents;XwcTextPerCharExtentsProc wc_extents_per_char;XwcDrawStringProc wc_draw_string;XwcDrawImageStringProc wc_draw_image_string;};
union _XkbAction {XkbAnyAction any;XkbModAction mods;XkbGroupAction group;XkbISOAction iso;XkbPtrAction ptr;XkbPtrBtnAction btn;XkbPtrDfltAction dflt;XkbSwitchScreenAction screen;XkbCtrlsAction ctrls;XkbMessageAction msg;XkbRedirectKeyAction redirect;XkbDeviceBtnAction devbtn;XkbDeviceValuatorAction devval;unsigned char type;};
union _XkbEvent {int type;XkbAnyEvent any;XkbNewKeyboardNotifyEvent new_kbd;XkbMapNotifyEvent map;XkbStateNotifyEvent state;XkbControlsNotifyEvent ctrls;XkbIndicatorNotifyEvent indicators;XkbNamesNotifyEvent names;XkbCompatMapNotifyEvent compat;XkbBellNotifyEvent bell;XkbActionMessageEvent message;XkbAccessXNotifyEvent accessx;XkbExtensionDeviceNotifyEvent device;XEvent core;};
struct pregion {struct p_lle p_ll;pregion_flags_t p_flags;pregion_type_t p_type;reg_t *p_reg;space_t p_space;caddr_t p_vaddr;pgcnt_t p_off;pgcnt_t p_count;pgcnt_t p_ageremain;pgcnt_t p_agescan;pgcnt_t p_stealscan;struct pregion__vas *p_vas;tid_t p_tid;struct pregion *p_forw;struct pregion *p_back;sknode_t *p_regsknode;ushort p_nestediomaps;ushort p_pagein;char p_bestnice;char p_deactsleep;unsigned char p_locality;unsigned char p_strength;short p_prot;pgcnt_t p_nextfault;pgcnt_t p_last_rhead;int p_mq_refcnt;lmap_t *p_lchain;lact_t *p_lactions;struct hdlpregion p_hdl;};
union _EACB0B005B8FE7D9793BF30DB07B2838___60A8B0D42D5860F5822DDCFD2409BF0D {dm_io_req_type dm_req;dm_io_reply_type dm_reply;dam_req_type dam_req;dam_reply_type dam_reply;dm_io_event_type dm_event;hpib_req_type hpib_req;do_bind_req_type do_bind_req;do_bind_reply_type do_bind_reply;bind_req_type bind_req;bind_reply_type bind_reply;creation_info_type creation_info;diag_req_type diag_req_msg;diag_reply_type diag_reply;diag_event_msg_type diag_event;};
struct _D2F477CF0A15BD07EBA4C7727B492ACA {unsigned char dragInitiatorProtocolStyle;unsigned char dragReceiverProtocolStyle;unsigned char userGrabbed;WidgetClass dragContextClass;WidgetClass dropTransferClass;WidgetClass dropSiteManagerClass;XmDragContext activeDC;XmDropSiteManagerObject dsm;Time lastDragTime;Window proxyWindow;XmModalData modals;Cardinal numModals;Cardinal maxModals;XtPointer xmim_info;String bindingsString;XmVKeyBindingRec *bindings;XKeyEvent *lastKeyEvent;unsigned char keycode_tag[32];int shellCount;XtPointer displayInfo;XtPointer user_data;int motif_version;XtEnum enable_warp;Cardinal num_bindings;XtCallbackList dragStartCallback;XtCallbackList noFontCallback;XtCallbackList noRenditionCallback;Boolean displayHasShapeExtension;XtEnum enable_btn1_transfer;Boolean enable_button_tab;Boolean enable_etched_in_menu;Boolean default_button_emphasis;Boolean enable_toggle_color;Boolean enable_toggle_visual;Boolean enable_drag_icon;Boolean enable_unselectable_drag;Boolean enable_thin_thickness;Boolean enable_multi_key_bindings;};
struct _XmBaseClassExtRec {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;XtInitProc initializePrehook;XtSetValuesFunc setValuesPrehook;XtInitProc initializePosthook;XtSetValuesFunc setValuesPosthook;WidgetClass secondaryObjectClass;XtInitProc secondaryObjectCreate;XmGetSecResDataFunc getSecResData;unsigned char flags[32];XtArgsProc getValuesPrehook;XtArgsProc getValuesPosthook;XtWidgetClassProc classPartInitPrehook;XtWidgetClassProc classPartInitPosthook;XtResourceList ext_resources;XtResourceList compiled_ext_resources;Cardinal num_ext_resources;Boolean use_sub_resources;XmWidgetNavigableProc widgetNavigable;XmFocusChangeProc focusChange;XmWrapperData wrapperData;};
struct region {region_flags_t r_flags;region_type_t r_type;pgcnt_t r_pgsz;pgcnt_t r_nvalid;pgcnt_t r_dnvalid;pgcnt_t r_swalloc;pgcnt_t r_swapmem;pgcnt_t r_vfd_swapmem;pgcnt_t r_lockmem;struct region *r_pswapf;struct region *r_pswapb;ushort r_refcnt;short r_zomb;pgcnt_t r_off;ushort r_incore;uint32_t r_dbd;pgcnt_t r_scan;struct vnode *r_fstore;struct vnode *r_bstore;struct region *r_forw;struct region *r_back;struct region *r_hchain;ulong_t r_byte;size_t r_bytelen;rw_lock_data_t r_lock;vm_sema_t r_mlock;pgcnt_t r_poip;struct broot *r_root;pgcnt_t r_key;chunk_t *r_chunk;struct region *r_next;struct region *r_prev;union region___2FADED55C95798441DEBE337753497DF r_preg_un;skl_t r_psklh;struct region__proc *r_excproc;lmap_t *r_lchain;pgcnt_t r_mlockswap;pgcnt_t r_pgszhint;struct hdlregion r_hdl;};
struct _OutputRec {struct _OutputDataRec *data;XYToPosProc XYToPos;PosToXYProc PosToXY;MeasureLineProc MeasureLine;DrawProc Draw;DrawInsertionPointProc DrawInsertionPoint;MakePositionVisibleProc MakePositionVisible;MoveLinesProc MoveLines;InvalidateProc Invalidate;GetPreferredSizeProc GetPreferredSize;GetValuesProc GetValues;SetValuesProc SetValues;XmRealizeOutProc realize;XtWidgetProc destroy;XmResizeFlagProc resize;XtExposeProc expose;};
struct amg_pda {do_bind_req_type amg_info;bind_reply_type dam_info;bind_req_type ldm_info;port_num_type ldm_port_num;struct booleans booleans;int amg_old_state;int amg_state;int msg_class;int this_action;int last_action;int dm_io_in_prog;int p_on_state;int p_on_action;int p_on_class;int p_on_trn;int pfl_prog;int input_msg_subq;int transfer_count;int amg_dm_rev_level;set_of_32 amg_subqs;int trn;int save_trn;int mid;int timer_id;amg_message_type *req_msg_ptr;bit8 device_status;set_of_32 ldm_generic;llio_status_type llio_info;id_type id;anyptr ldm_data_addr;int ldm_data_len;int retry_ct;log_align_type lp_log11;int dap_stat;dap_status_type dap_status;int filler;bit8 dap_parms[2];dap_type *dap_area_ptr;buff_area_type buff_area;};
union _2DFE59F2EEA4B8B07854A40D678C7B6B___42720C520941BC117A8625B68870A086 {bind_req_type bind_req;bind_reply_type bind_reply;creation_info_type create_msg;do_bind_reply_type dobind_reply;do_bind_req_type dobind_req;cio_dma_req_type dma_req;cio_pquad_dma_req_type pquad_dma_req;cio_dma_reply_type dma_reply;cio_ctrl_req_type ctrl_req;cio_ctrl_reply_type ctrl_reply;cio_io_event_type io_event;cio_poll_dma_req poll_req;cio_poll_sync_reply async_reply;probe_req_type probe_req;probe_reply_type probe_reply;cio_dump_req_type dump_req;};
union _DD029A274B36A4E7FC38BFCAA6413DF4___DBC3C6E7BEE5206143AD9534499882BA {dm_io_req_type dm_req;dm_io_reply_type dm_reply;dm_io_event_type dm_event;do_bind_req_type do_bind_req;do_bind_reply_type do_bind_reply;bind_req_type bind_req;bind_reply_type bind_reply;creation_info_type creation_info;diag_req_type diag_req;diag_reply_type diag_reply;reset_req_type reset_req;reset_reply_type reset_reply;lock_req_type lock_req;lock_reply_type lock_reply;unlock_req_type unlock_req;unlock_reply_type unlock_reply;};
struct _ObjectClassPart {WidgetClass superclass;String class_name;Cardinal widget_size;XtProc class_initialize;XtWidgetClassProc class_part_initialize;XtEnum class_inited;XtInitProc initialize;XtArgsProc initialize_hook;XtProc obj1;XtPointer obj2;Cardinal obj3;XtResourceList resources;Cardinal num_resources;XrmClass xrm_class;Boolean obj4;XtEnum obj5;Boolean obj6;Boolean obj7;XtWidgetProc destroy;XtProc obj8;XtProc obj9;XtSetValuesFunc set_values;XtArgsFunc set_values_hook;XtProc obj10;XtArgsProc get_values_hook;XtProc obj11;XtVersionType version;XtPointer callback_private;String obj12;XtProc obj13;XtProc obj14;XtPointer extension;};
struct _XmDragContextPart {Atom *exportTargets;Cardinal numExportTargets;XmConvertSelectionRec convertProc;XtPointer clientData;XmDragIconObject sourceCursorIcon;XmDragIconObject stateCursorIcon;XmDragIconObject operationCursorIcon;XmDragIconObject sourcePixmapIcon;Pixel cursorBackground;Pixel cursorForeground;Pixel validCursorForeground;Pixel invalidCursorForeground;Pixel noneCursorForeground;XtCallbackList dragMotionCallback;XtCallbackList operationChangedCallback;XtCallbackList siteEnterCallback;XtCallbackList siteLeaveCallback;XtCallbackList topLevelEnterCallback;XtCallbackList topLevelLeaveCallback;XtCallbackList dropStartCallback;XtCallbackList dropFinishCallback;XtCallbackList dragDropFinishCallback;unsigned char dragOperations;Boolean incremental;unsigned char blendModel;Window srcWindow;Time dragStartTime;Atom iccHandle;Widget sourceWidget;Boolean sourceIsExternal;Boolean topWindowsFetched;unsigned char commType;unsigned char animationType;unsigned char operation;unsigned char operations;unsigned int lastEventState;unsigned char dragCompletionStatus;unsigned char dragDropCompletionStatus;Boolean forceIPC;Boolean serverGrabbed;Boolean useLocal;Boolean inDropSite;XtIntervalId dragTimerId;Time roundOffTime;Time lastChangeTime;Time crossingTime;Time dragFinishTime;Time dropFinishTime;Atom dropSelection;Widget srcShell;Position startX;Position startY;XmID siteID;Screen *currScreen;Window currWmRoot;XmDragOverShellWidget curDragOver;XmDragOverShellWidget origDragOver;XmDragReceiverInfoStruct *currReceiverInfo;XmDragReceiverInfoStruct *rootReceiverInfo;XmDragReceiverInfoStruct *receiverInfos;Cardinal numReceiverInfos;Cardinal maxReceiverInfos;unsigned char trackingMode;unsigned char activeProtocolStyle;unsigned char activeBlendModel;Boolean dragDropCancelEffect;int SaveEventMask;};
struct _XmTextFieldPart {XtCallbackList activate_callback;XtCallbackList focus_callback;XtCallbackList losing_focus_callback;XtCallbackList modify_verify_callback;XtCallbackList wcs_modify_verify_callback;XtCallbackList motion_verify_callback;XtCallbackList gain_primary_callback;XtCallbackList lose_primary_callback;XtCallbackList value_changed_callback;char *value;unsigned int *wc_value;XmFontList font_list;XFontStruct *font;XmTextScanType *selection_array;_XmHighlightData highlight;GC gc;GC image_gc;GC save_gc;Pixmap ibeam_off;Pixmap add_mode_cursor;Pixmap cursor;Pixmap putback;Pixmap stipple_tile;Pixmap image_clip;XmTextPosition cursor_position;XmTextPosition new_h_offset;XmTextPosition h_offset;XmTextPosition orig_left;XmTextPosition orig_right;XmTextPosition prim_pos_left;XmTextPosition prim_pos_right;XmTextPosition prim_anchor;XmTextPosition sec_pos_left;XmTextPosition sec_pos_right;XmTextPosition sec_anchor;XmTextPosition stuff_pos;Position select_pos_x;Time prim_time;Time dest_time;Time sec_time;Time last_time;XtIntervalId timer_id;XtIntervalId select_id;int blink_rate;int selection_array_count;int threshold;int size_allocd;int string_length;int cursor_height;int cursor_width;int sarray_index;int max_length;int max_char_size;short columns;Dimension margin_width;Dimension margin_height;Dimension average_char_width;Dimension margin_top;Dimension margin_bottom;Dimension font_ascent;Dimension font_descent;Boolean resize_width;Boolean pending_delete;Boolean editable;Boolean verify_bell;Boolean cursor_position_visible;Boolean traversed;Boolean add_mode;Boolean has_focus;Boolean blink_on;short cursor_on;Boolean refresh_ibeam_off;Boolean have_inverted_image_gc;Boolean has_primary;Boolean has_secondary;Boolean has_destination;Boolean sec_drag;Boolean selection_move;Boolean pending_off;Boolean fontlist_created;Boolean has_rect;Boolean do_drop;Boolean cancel;Boolean extending;Boolean sec_extending;Boolean changed_visible;Boolean have_fontset;Boolean in_setvalues;Boolean do_resize;Boolean redisplay;Boolean overstrike;Boolean sel_start;XtPointer extension;XtCallbackList destination_callback;Boolean selection_link;Boolean take_primary;GC cursor_gc;XtIntervalId drag_id;_XmTextActionRec *transfer_action;OnTheSpotData onthespot;Boolean check_set_render_table;Boolean programmatic_highlights;};
struct _XimProtoPrivateRec {Window im_window;XIMID imid;CARD16 unused;XIMStyles *default_styles;CARD32 *im_onkeylist;CARD32 *im_offkeylist;BITMASK32 flag;BITMASK32 registed_filter_event;EVENTMASK forward_event_mask;EVENTMASK synchronous_event_mask;XimProtoIntrRec *intrproto;XIMResourceList im_inner_resources;unsigned int im_num_inner_resources;XIMResourceList ic_inner_resources;unsigned int ic_num_inner_resources;char *hold_data;int hold_data_len;char *locale_name;CARD16 protocol_major_version;CARD16 protocol_minor_version;XrmQuark *saved_imvalues;int num_saved_imvalues;XlcConv ctom_conv;XlcConv ctow_conv;XimTransConnectProc connect;XimTransShutdownProc shutdown;XimTransWriteProc write;XimTransReadProc read;XimTransFlushProc flush;XimTransRegDispatcher register_dispatcher;XimTransCallDispatcher call_dispatcher;XPointer spec;};
struct _RectObjClassPart {WidgetClass superclass;String class_name;Cardinal widget_size;XtProc class_initialize;XtWidgetClassProc class_part_initialize;XtEnum class_inited;XtInitProc initialize;XtArgsProc initialize_hook;XtProc rect1;XtPointer rect2;Cardinal rect3;XtResourceList resources;Cardinal num_resources;XrmClass xrm_class;Boolean rect4;XtEnum rect5;Boolean rect6;Boolean rect7;XtWidgetProc destroy;XtWidgetProc resize;XtExposeProc expose;XtSetValuesFunc set_values;XtArgsFunc set_values_hook;XtAlmostProc set_values_almost;XtArgsProc get_values_hook;XtProc rect9;XtVersionType version;XtPointer callback_private;String rect10;XtGeometryHandler query_geometry;XtProc rect11;XtPointer extension;};
struct _XmContainerPart {WidgetList selected_items;Widget icon_header;Widget anchor_cwid;Widget druggee;Widget size_ob;Widget drag_context;CwidNode first_node;CwidNode last_node;Cardinal *detail_order;XmString *detail_heading;XSegment *outline_segs;XtCallbackList convert_cb;XtCallbackList default_action_cb;XtCallbackList destination_cb;XtCallbackList outline_cb;XtCallbackList selection_cb;XmTabList detail_tablist;XmFontList render_table;Pixel select_color;Pixmap collapsed_state_pixmap;Pixmap expanded_state_pixmap;GC normalGC;GC marqueeGC;Time last_click_time;Region cells_region;ContainerXfrAction transfer_action;XtIntervalId transfer_timer_id;XPoint anchor_point;XPoint marquee_start;XPoint marquee_end;XPoint marquee_smallest;XPoint marquee_largest;XPoint dropspot;unsigned int dynamic_resource;int max_depth;int outline_seg_count;int *cells;int cell_count;int next_free_cell;int current_width_in_cells;int current_height_in_cells;int drag_offset_x;int drag_offset_y;unsigned int selected_item_count;Cardinal detail_heading_count;Cardinal saved_detail_heading_count;Cardinal detail_order_count;Dimension first_col_width;Dimension real_first_col_width;Dimension large_cell_height;Dimension large_cell_width;Dimension small_cell_height;Dimension small_cell_width;Dimension real_large_cellh;Dimension real_large_cellw;Dimension real_small_cellh;Dimension real_small_cellw;Dimension margin_h;Dimension margin_w;Dimension outline_indent;Dimension ob_width;Dimension ob_height;Dimension prev_width;Dimension ideal_width;Dimension ideal_height;Boolean first_change_managed;Boolean extending_mode;Boolean marquee_mode;Boolean self;Boolean toggle_pressed;Boolean extend_pressed;Boolean ob_pressed;Boolean cancel_pressed;Boolean kaddmode;Boolean no_auto_sel_changes;Boolean started_in_anchor;Boolean marquee_drawn;Boolean have_primary;Boolean selecting;Boolean large_cell_dim_fixed;Boolean small_cell_dim_fixed;unsigned char automatic;unsigned char entry_viewtype;unsigned char include_model;unsigned char layout_type;unsigned char ob_policy;unsigned char outline_sep_style;unsigned char spatial_style;unsigned char primary_ownership;unsigned char resize_model;unsigned char selection_policy;unsigned char selection_technique;unsigned char snap_model;unsigned char create_cwid_type;unsigned char selection_state;unsigned char LeaveDir;XtIntervalId scroll_proc_id;int last_xmotion_x;int last_xmotion_y;XmString *cache_detail_heading;};
struct _XmListPart {Dimension spacing;short ItemSpacing;Dimension margin_width;Dimension margin_height;XmFontList font;XmString *items;int itemCount;XmString *selectedItems;int *selectedPositions;int selectedItemCount;int visibleItemCount;int LastSetVizCount;unsigned char SelectionPolicy;unsigned char ScrollBarDisplayPolicy;unsigned char SizePolicy;XmStringDirection StrDir;XtEnum AutoSelect;Boolean DidSelection;Boolean FromSetSB;Boolean FromSetNewSize;unsigned char SelectionMode;unsigned char LeaveDir;unsigned char HighlightThickness;int ClickInterval;XtIntervalId DragID;XtCallbackList SingleCallback;XtCallbackList MultipleCallback;XtCallbackList ExtendCallback;XtCallbackList BrowseCallback;XtCallbackList DefaultCallback;GC NormalGC;GC InverseGC;GC HighlightGC;Pixmap DashTile;ElementPtr *InternalList;int LastItem;int FontHeight;int top_position;char Event;int LastHLItem;int StartItem;int OldStartItem;int EndItem;int OldEndItem;Position BaseX;Position BaseY;Boolean MouseMoved;Boolean AppendInProgress;Boolean Traversing;Boolean KbdSelection;short DownCount;Time DownTime;int CurrentKbdItem;unsigned char SelectionType;GC InsensitiveGC;int vmin;int vmax;int vOrigin;int vExtent;int hmin;int hmax;int hOrigin;int hExtent;Dimension MaxWidth;Dimension CharWidth;Position XOrigin;XmScrollBarWidget hScrollBar;XmScrollBarWidget vScrollBar;XmScrolledWindowWidget Mom;Dimension MaxItemHeight;int selectedPositionCount;unsigned char matchBehavior;unsigned char AutoSelectionType;unsigned char PrimaryOwnership;XtCallbackList DestinationCallback;XmRendition scratchRend;Pixel selectColor;int previous_top_position;XtIntervalId drag_start_timer;char *drag_abort_action;XEvent drag_event;XmListDragConvertStruct *drag_conv;};
struct _XmTextPart {XmTextSource source;XtCallbackList activate_callback;XtCallbackList focus_callback;XtCallbackList losing_focus_callback;XtCallbackList value_changed_callback;XtCallbackList modify_verify_callback;XtCallbackList wcs_modify_verify_callback;XtCallbackList motion_verify_callback;XtCallbackList gain_primary_callback;XtCallbackList lose_primary_callback;char *value;unsigned int *wc_value;Dimension margin_height;Dimension margin_width;Position cursor_position_x;OutputCreateProc output_create;InputCreateProc input_create;XmTextPosition top_character;XmTextPosition bottom_position;XmTextPosition cursor_position;int max_length;int edit_mode;Boolean auto_show_cursor_position;Boolean editable;Boolean verify_bell;Boolean add_mode;Boolean traversed;Boolean in_redisplay;Boolean needs_redisplay;Boolean in_refigure_lines;Boolean needs_refigure_lines;Boolean in_setvalues;Boolean in_resize;Boolean in_expose;Boolean highlight_changed;Boolean pendingoff;char char_size;OnOrOff on_or_off;Output output;Input input;XmTextPosition first_position;XmTextPosition last_position;XmTextPosition forget_past;XmTextPosition force_display;XmTextPosition new_top;XmTextPosition last_top_char;XmTextPosition dest_position;int disable_depth;int pending_scroll;int total_lines;int top_line;int vsbar_scrolling;Cardinal number_lines;Cardinal maximum_lines;Line line;Ranges repaint;_XmHighlightData highlight;_XmHighlightData old_highlight;Widget inner_widget;XmTextLineTable line_table;unsigned int table_size;unsigned int table_index;XtCallbackList destination_callback;int hsbar_scrolling;OnTheSpotDataTW onthespot;};
struct _CorePart {Widget self;WidgetClass widget_class;Widget parent;XrmName xrm_name;Boolean being_destroyed;XtCallbackList destroy_callbacks;XtPointer constraints;Position x;Position y;Dimension width;Dimension height;Dimension border_width;Boolean managed;Boolean sensitive;Boolean ancestor_sensitive;XtEventTable event_table;XtTMRec tm;XtTranslations accelerators;Pixel border_pixel;Pixmap border_pixmap;WidgetList popup_list;Cardinal num_popups;String name;Screen *screen;Colormap colormap;Window window;Cardinal depth;Pixel background_pixel;Pixmap background_pixmap;Boolean visible;Boolean mapped_when_managed;};
struct _DFCC977DF00F58347288DFBB1C9465DA {XmDSMCreateInfoProc createInfo;XmDSMDestroyInfoProc destroyInfo;XmDSMStartUpdateProc startUpdate;XmDSMRetrieveInfoProc retrieveInfo;XmDSMUpdateInfoProc updateInfo;XmDSMEndUpdateProc endUpdate;XmDSMUpdateProc updateDSM;XmDSMProcessMotionProc processMotion;XmDSMProcessDropProc processDrop;XmDSMOperationChangedProc operationChanged;XmDSMChangeRootProc changeRoot;XmDSMInsertInfoProc insertInfo;XmDSMRemoveInfoProc removeInfo;XmDSMSyncTreeProc syncTree;XmDSMGetTreeFromDSMProc getTreeFromDSM;XmDSMCreateDSInfoTable createTable;XmDSMDestroyDSInfoTable destroyTable;XmDSMRegisterInfoProc registerInfo;XmDSMWidgetToInfoProc widgetToInfo;XmDSMUnregisterInfoProc unregisterInfo;XtPointer extension;};
struct user {struct pcb u_pcb;struct user__proc *u_procp;struct user__kthread *u_kthreadp;save_state_t *u_sstatep;save_state_t *u_pfaultssp;int u_arg[20];caddr_t u_ap;label_t u_qsave;u_short u_nargs;u_short u_error;union user___3B359A40351122B121A37E0734670C57 u_r;user_eosys_t u_eosys;u_short u_syscall;u_int u_spare1[4];label_t u_ssave;tlabel_t u_psave;time_t u_outime;ksigset_t u_oldmask;int u_code;struct user___8801DF0D6A4608417C87B38E9E599B4F u_signalstack;struct user__squ_s u_strsqh;stack_t u_curstack;ucontext_t *u_prevcontext;dev_t u_devsused;user_sstep_t u_sstep;unsigned int u_pcsq_head;unsigned int u_pcoq_head;unsigned int u_pcsq_tail;unsigned int u_pcoq_tail;union user___FFDA854C04C02961A1098ABC4F40B8D9 u_wide;kt_t u_syscall_time;kt_t u_accumin;char *u_vp;tid_t u_threadid;uint32_t u_ki_site;uint32_t u_swtchd_for_sema;unsigned char u_ktc_enabled;unsigned char u_ki_charpad[3];char *u_ki_clk_tos_ptr;char u_ki_clk_stack[16];int *send_term_ptr;int u_debug_spare;void *u_cnx_features;union user___E4D8091639DC7336013EE29C556C46C6 u_s;};
struct _CoreClassPart {WidgetClass superclass;String class_name;Cardinal widget_size;XtProc class_initialize;XtWidgetClassProc class_part_initialize;XtEnum class_inited;XtInitProc initialize;XtArgsProc initialize_hook;XtRealizeProc realize;XtActionList actions;Cardinal num_actions;XtResourceList resources;Cardinal num_resources;XrmClass xrm_class;Boolean compress_motion;XtEnum compress_exposure;Boolean compress_enterleave;Boolean visible_interest;XtWidgetProc destroy;XtWidgetProc resize;XtExposeProc expose;XtSetValuesFunc set_values;XtArgsFunc set_values_hook;XtAlmostProc set_values_almost;XtArgsProc get_values_hook;XtAcceptFocusProc accept_focus;XtVersionType version;XtPointer callback_private;String tm_table;XtGeometryHandler query_geometry;XtStringProc display_accelerator;XtPointer extension;};
union _9999A8100202244FE84754323DD949F8__uu {creation_info_type creation_info;do_bind_req_type do_bind_req;bind_req_type bind_req;do_bind_reply_type do_bind_reply;bind_reply_type bind_reply;probe_req_type probe_req;probe_reply_type probe_reply;diag_event_type diag_event;reset_req_type reset_req;reset_reply_type reset_reply;lock_req_type lock_req;lock_reply_type lock_reply;unlock_req_type unlock_req;unlock_reply_type unlock_reply;cio_dma_req_type cio_dma_req;cio_dma_reply_type cio_dma_reply;cio_ctrl_req_type cio_ctrl_req;cio_ctrl_reply_type cio_ctrl_reply;cio_io_event_type cio_io_event;dam_req_type dam_req;dam_reply_type dam_reply;dam_event_type dam_event;diag_req_type diag_req;diag_reply_type diag_reply;};
struct _pci_bus_dep_func_tbl {RD_CFG_B rd_cfg_b;RD_CFG_W rd_cfg_w;RD_CFG_D rd_cfg_d;WR_CFG_B wr_cfg_b;WR_CFG_W wr_cfg_w;WR_CFG_D wr_cfg_d;RD_IO_B rd_io_b;RD_IO_W rd_io_w;RD_IO_D rd_io_d;WR_IO_B wr_io_b;WR_IO_W wr_io_w;WR_IO_D wr_io_d;RD_B rd_uint8;RD_W rd_uint16;RD_D rd_uint32;RD_DD rd_uint64;WR_B wr_uint8;WR_W wr_uint16;WR_D wr_uint32;WR_DD wr_uint64;GET_PORT get_port;UNMAP_PORT unmap_port;GET_FRU_INFO get_fru_info;BUS_TRANS bus_trans;uintptr_t rev_field;uintptr_t reserved_future;uintptr_t reserved_busdep;GET_MEM_MODE get_mem_mode;uintptr_t reserved1;uintptr_t reserved2;uintptr_t reserved3;uintptr_t reserved4;};
union T_primitives {int type;struct T_bind_ack bind_ack;struct T_bind_req bind_req;struct T_conn_con conn_con;struct T_conn_ind conn_ind;struct T_conn_req conn_req;struct T_conn_res conn_res;struct T_data_ind data_ind;struct T_data_req data_req;struct T_discon_ind discon_ind;struct T_discon_req discon_req;struct T_exdata_ind exdata_ind;struct T_exdata_req exdata_req;struct T_error_ack error_ack;struct T_addr_req addr_req;struct T_getaddr_req getaddr_req;struct T_addr_ack addr_ack;struct T_getaddr_ack getaddr_ack;struct T_info_ack info_ack;struct T_info_req info_req;struct T_ok_ack ok_ack;struct T_optmgmt_ack optmgmt_ack;struct T_optmgmt_req optmgmt_req;struct T_ordrel_ind ordrel_ind;struct T_ordrel_req ordrel_req;struct T_unbind_req unbind_req;struct T_uderror_ind uderror_ind;struct T_unitdata_ind unitdata_ind;struct T_unitdata_req unitdata_req;struct T_urgdata_ind urgdata_ind;};
union u_R_addr {u_long Raddr_ints[31];struct pdc_chassis_rtn_block pdc_chassis_rtn;struct pdc_pim_rtn_block pdc_pim_rtn;struct pdc_model_rtn_block pdc_model_rtn;struct pdc_sys_model_rtn_block pdc_sys_model_rtn;struct pdc_cache_rtn_block pdc_cache_rtn;struct pdc_hpa_rtn_block pdc_hpa_rtn;struct pdc_coproc_rtn_block pdc_coproc_rtn;struct pdc_iodc_rtn_block pdc_iodc_rtn;struct iodc_rtn_block iodc_rtn;struct pdc_mem_rtn_block pdc_mem_rtn;struct pdc_iodc_clr_rtn_block pdc_iodc_clr_rtn;struct pdc_iodc_id_chief_block pdc_iodc_id_chief_rtn;struct pdc_relocate_info_block pdc_relocate_info;struct pdc_tod_time_rtn_block pdc_tod_time_rtn;struct pdc_tod_calib_rtn_block pdc_tod_calib_rtn;struct pdc_ss_size_rtn_block pdc_ss_size_rtn;struct pdc_nvm_size_rtn_block pdc_nvm_size_rtn;struct pdc_memory_map_rtn_block pdc_memory_map_rtn;struct pdc_btlb_parms_rtn_block pdc_block_tlb_rtn;struct pdc_hwtlb_parms_rtn_block pdc_hwtlb_rtn;struct pdc_hwtlb_state_rtn_block pdc_hwtlb_state_rtn;struct pdc_mem_info_rtn_block pdc_mem_info_rtn;struct pdc_mem_read_rtn_block pdc_mem_read_rtn;struct pdc_sys_map_find_mod_rtn_block pdc_find_mod_rtn;struct pdc_sys_map_find_addr_rtn_block pdc_find_addr_rtn;struct pdc_sys_map_trans_path_rtn_block pdc_trans_path_rtn;struct pat_cell_num_rtn_block pat_cell_num_rtn;struct pdc_pat_cell_mod_rtn_block pat_cell_mod_rtn;struct pat_mem_cell_info_rtn_block pat_mem_cell_info_rtn;struct pat_mem_read_rtn_block pat_mem_read_rtn;double Raddr_dbls[15];};
union _XEvent {int type;XAnyEvent xany;XKeyEvent xkey;XButtonEvent xbutton;XMotionEvent xmotion;XCrossingEvent xcrossing;XFocusChangeEvent xfocus;XExposeEvent xexpose;XGraphicsExposeEvent xgraphicsexpose;XNoExposeEvent xnoexpose;XVisibilityEvent xvisibility;XCreateWindowEvent xcreatewindow;XDestroyWindowEvent xdestroywindow;XUnmapEvent xunmap;XMapEvent xmap;XMapRequestEvent xmaprequest;XReparentEvent xreparent;XConfigureEvent xconfigure;XGravityEvent xgravity;XResizeRequestEvent xresizerequest;XConfigureRequestEvent xconfigurerequest;XCirculateEvent xcirculate;XCirculateRequestEvent xcirculaterequest;XPropertyEvent xproperty;XSelectionClearEvent xselectionclear;XSelectionRequestEvent xselectionrequest;XSelectionEvent xselection;XColormapEvent xcolormap;XClientMessageEvent xclient;XMappingEvent xmapping;XErrorEvent xerror;XKeymapEvent xkeymap;int pad[24];};
union _B20031452D9C70A13D819C8DDA3A0BA9 {xGenericReply generic;xGetGeometryReply geom;xQueryTreeReply tree;xInternAtomReply atom;xGetAtomNameReply atomName;xGetPropertyReply property;xListPropertiesReply listProperties;xGetSelectionOwnerReply selection;xGrabPointerReply grabPointer;xGrabKeyboardReply grabKeyboard;xQueryPointerReply pointer;xGetMotionEventsReply motionEvents;xTranslateCoordsReply coords;xGetInputFocusReply inputFocus;xQueryTextExtentsReply textExtents;xListFontsReply fonts;xGetFontPathReply fontPath;xGetImageReply image;xListInstalledColormapsReply colormaps;xAllocColorReply allocColor;xAllocNamedColorReply allocNamedColor;xAllocColorCellsReply colorCells;xAllocColorPlanesReply colorPlanes;xQueryColorsReply colors;xLookupColorReply lookupColor;xQueryBestSizeReply bestSize;xQueryExtensionReply extension;xListExtensionsReply extensions;xSetModifierMappingReply setModifierMapping;xGetModifierMappingReply getModifierMapping;xSetPointerMappingReply setPointerMapping;xGetKeyboardMappingReply getKeyboardMapping;xGetPointerMappingReply getPointerMapping;xGetPointerControlReply pointerControl;xGetScreenSaverReply screenSaver;xListHostsReply hosts;xError error;xEvent event;};
union _FB09744F3EA0A83ECD6BAFF51404F8F8___AD122AD315CF8E1C6CB6B6C3CF8662E2 {creation_info_type creation_info;do_bind_req_type do_bind_req;do_bind_reply_type do_bind_reply;bind_req_type bind_req;bind_reply_type bind_reply;probe_req_type probe_req;probe_reply_type probe_reply;unbind_req_type unbind_req;unbind_reply_type unbind_reply;do_unbind_req_type do_unbind_req;do_unbind_reply_type do_unbind_reply;die_req_type die_req;die_reply_type die_reply;reset_req_type reset_req;reset_reply_type reset_reply;diag_req_type diag_req;diag_reply_type diag_reply;diag_event_type diag_event;status_req_type status_req;status_reply_type status_reply;lock_req_type lock_req;lock_reply_type lock_reply;unlock_req_type unlock_req;unlock_reply_type unlock_reply;cio_dma_req_type cio_dma_req;cio_pquad_dma_req_type cio_pquad_dma_req;cio_dma_reply_type cio_dma_reply;cio_ctrl_req_type cio_ctrl_req;cio_ctrl_reply_type cio_ctrl_reply;cio_io_event_type cio_io_event;dam_req_type dam_req;dam_reply_type dam_reply;dam_event_type dam_event;scsi_req_type scsi_req;scsi_reply_type scsi_reply;dm_io_req_type dm_io_req;dm_io_reply_type dm_io_reply;dm_io_event_type dm_io_event;int_direct_type int_direct;int_completion_type int_completion;};
union DL_primitives {uint32_t dl_primitive;dl_info_req_t info_req;dl_info_ack_t info_ack;dl_attach_req_t attach_req;dl_detach_req_t detach_req;dl_bind_req_t bind_req;dl_bind_ack_t bind_ack;dl_unbind_req_t unbind_req;dl_subs_bind_req_t subs_bind_req;dl_subs_bind_ack_t subs_bind_ack;dl_subs_unbind_req_t subs_unbind_req;dl_ok_ack_t ok_ack;dl_error_ack_t error_ack;dl_connect_req_t connect_req;dl_connect_ind_t connect_ind;dl_connect_res_t connect_res;dl_connect_con_t connect_con;dl_token_req_t token_req;dl_token_ack_t token_ack;dl_disconnect_req_t disconnect_req;dl_disconnect_ind_t disconnect_ind;dl_reset_req_t reset_req;dl_reset_ind_t reset_ind;dl_reset_res_t reset_res;dl_reset_con_t reset_con;dl_unitdata_req_t unitdata_req;dl_unitdata_ind_t unitdata_ind;dl_uderror_ind_t uderror_ind;dl_udqos_req_t udqos_req;dl_enabmulti_req_t enabmulti_req;dl_disabmulti_req_t disabmulti_req;dl_promiscon_req_t promiscon_req;dl_promiscoff_req_t promiscoff_req;dl_phys_addr_req_t physaddr_req;dl_phys_addr_ack_t physaddr_ack;dl_set_phys_addr_req_t set_physaddr_req;dl_get_statistics_req_t get_statistics_req;dl_get_statistics_ack_t get_statistics_ack;dl_test_req_t test_req;dl_test_ind_t test_ind;dl_test_res_t test_res;dl_test_con_t test_con;dl_xid_req_t xid_req;dl_xid_ind_t xid_ind;dl_xid_res_t xid_res;dl_xid_con_t xid_con;dl_data_ack_req_t data_ack_req;dl_data_ack_ind_t data_ack_ind;dl_data_ack_status_ind_t data_ack_status_ind;dl_reply_req_t reply_req;dl_reply_ind_t reply_ind;dl_reply_status_ind_t reply_status_ind;dl_reply_update_req_t reply_update_req;dl_reply_update_status_ind_t reply_update_status_ind;};
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___13A13C9AC154D3293650D38098572922 {int ( *mun_osx_clfun)();caddr_t mun_osx_clarg;};
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___5549B831AA286DA3F16AE0851EE4EE00 {int ( *mun_clfun)();caddr_t mun_clarg;};
struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___869E1047D9F600BAE047DCAE4A27A49B {struct mbuf_____mcluster______869E1047D9F600BAE047DCAE4A27A49B__ioops *mun_ops_ops;caddr_t mun_ops_arg;};
struct __siginfo_________351CB38BF906F3D7FDE4000F5FE338E8___93BC73C2FD9859FBCB9F013BD422D91B {uid_t __uid;};
struct cs_status_type___682E0335E9CE8EEE44965718E74190D0___D03C0DDF97FD6619B9EAA1F30E22A6B3 {struct sva_type nta;int faulting;};
struct cs_status_type___682E0335E9CE8EEE44965718E74190D0___D05744114636CA3463EA967E1C843D48 {struct sva_type aaa;int afl;};
struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___AF441E7245BEEE4AAB09922872FD6942 {int ( *cc_func)();caddr_t cc_arg;};
struct dsplog___75873FF22CE910D1FBC726C0B659971B___E63CD43CEDAE183FD155659843AA0EEC {char d_file[8];int d_cnt;uid_t d_uid;int d_lvl;int d_rdr;};
union _18E6F3C9731C18C7E69FAD80F00FC2BA___CF3C52492917230ECC0D04E3B0168E17 {caddr_t ptr;char chars[20];int words[5];};
union nss_netdirbyaddr_in___CE97B67DEE6148096F4FDE472C356D76 {struct netbuf *nd_nbuf;union nss_netdirbyaddr_in___CE97B67DEE6148096F4FDE472C356D76___402FC20F2F8747D95E943225C2B80849 nss;};
union nss_netdirbyname_in___B0B77147B63B1091E6DA80F49542BFD7 {struct nd_hostserv *nd_hs;union nss_netdirbyname_in___B0B77147B63B1091E6DA80F49542BFD7___58B5E3A38D045874A5B40B03A1AE9E77 nss;};
union ki_region_fields___A042BAEF98ABBE8604F9A3AE2EA65FF1 {kptr_t r_un_pregskl;kptr_t r_un_pregion;};
struct icmp___13995140954385B7F735AD5DF5EAA771__ih_idseq {n_short icd_id;n_short icd_seq;};
union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65 {struct nlm4_holder holder;};
union key_netstres___2176196DCBB8522A9A1E300DB0535BE5 {key_netstarg knet;};
union klm_testrply___40F9D261D31BF2147C1606393BAB8476 {struct klm_holder holder;};
union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE {struct nlm_holder holder;};
union cryptkeyres___EF36972044157FC290EE2FE4EF835697 {des_block deskey;};
union dma_A_chain___9BFEA53F2269C7B565EDDA23D08FFFF2 {struct dma_A_chain *link;struct dma_A_chain___9BFEA53F2269C7B565EDDA23D08FFFF2___9FFBE6516481B01D482839DFCF166653 hdr;};
struct icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B__id_ip {struct ip idi_ip;};
struct icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B__id_ts {n_time its_otime;n_time its_rtime;n_time its_ttime;};
union getcredres___C5134A0BDA290BA80D31944F899AB902 {unixcred cred;};
union pst_stable___70B85E80D6077E82B0FB95AE4C9AAAEC {unsigned char Pss_PA_RISC_buffer[256];struct pst_stable_PA_RISC Pss_PA_RISC_stable;};
union mountres3___3D7A0CB925F6CF28B22A74AF5DF0F9CE {mountres3_ok mountinfo;};
struct proc_exec___69BBFAFF681CFE287E192CA75A791E21 {int u_magic;struct som_exec_auxhdr som_aux;};
union icommon___352D7131545A46E37526309B828AFFEE {struct icommon___352D7131545A46E37526309B828AFFEE___93873D87F0901CE97F7811FAD71196E7 ic_reg;char ic_symlink[60];};
union ifconf___28C87C5ACD364976D94B96E40062B553 {caddr_t ifcu_buf;struct ifreq *ifcu_req;};
union inode___EA31F86E7C3F0C71466A5E96901DCEB4 {daddr_t if_lastr;struct inode___EA31F86E7C3F0C71466A5E96901DCEB4__socket *is_socket;};
struct _0185B28A9005276F6D3BB9A22595A3AE {int version;XmGetLayoutDirectionProc get_direction;};
struct _023C7E5C1FA923CDA97A677B848735A7 {int major_version;int minor_version;_IceProcessCoreMsgProc process_core_msg_proc;};
struct _045DC9DF8C87DC85FACEF28A55B81842 {short subsys_id;int capture;int kind;int class;int device_id;int t_len;int size;uid_t uid;short number_of_cards;int firmlog_level_or_mask;char *device_name;};
struct _0B3AA8EE748F245E929FFDAF01F33E77 {unsigned8 unit_no;unsigned8 dt;unsigned8 dn[3];unsigned8 nbpb[2];unsigned8 nbb;unsigned8 rbs;unsigned8 blocktime[2];unsigned8 catr[2];unsigned8 ort[2];unsigned8 atp[2];unsigned8 mif;};
struct _2ABA9BEBDC7EA73331E3BF8D3E5C1422 {union _2ABA9BEBDC7EA73331E3BF8D3E5C1422___502ABD2D56F7B15CE77DF0D562CA3A98 u;};
struct _2B25FEECC0AF4D3C6F228158D7F8DAAB {union _2B25FEECC0AF4D3C6F228158D7F8DAAB___D75DB3281057538F2464105F3776F9CC u;};
struct _2D67A7A7014400A846724E74753CE8EE {unsigned int _pad;unsigned int NewStateDescOffset;gc_access_perm_t AccessPerm;unsigned int _reserve[5];};
struct _3C2538FA24E756F47BA82769645E5270 {io_subq_type reply_subq;};
struct _3EC01B29E9C7693EBA183E8A62C6D0E0 {adr_mode limit_format;};
struct _422DE13ADF73A408267F5BA68732DCDA {short subsys_id;int capture;int kind;int class;int device_id_mask[8];int t_len;int size;uid_t uid;short number_of_cards;int firmlog_level_or_mask;char *device_name;};
struct _4571DE56C1A5FF05DDFD222F72236ED6 {Window window;unsigned int event_mask;int buffer_index;int side;};
struct _489E3F16CC6F83D9EE719C1997B5A755 {dev_t lssf_dev;char lssf_string[64];};
struct _636E06EF14FC653C9FA755BCE21D4A3F {char *chars;int nchars;int delta;Font font;};
struct _6BAE8AC6C2E6EF04B701C3F9CD3D4D29 {xieTypFloat matchLimit;xieTypFloat grayLimit;};
struct _7480CB9003AEDBEBEAFF24F3E95BA652 {int len;caddr_t base;};
struct _7501B521F09A6EDD43C68106808E09A6 {int displayed_index;int update_action;int update_hint;int window_mode;int nbuffers;Multibuffer *buffers;};
struct _894170B0EF0892045A226947D0AC1D57 {union _894170B0EF0892045A226947D0AC1D57___A18BDC6CF65CB354BF02B415939C20C7 u;};
struct _90F4279CED75C32CE4133781567FE5DA {Window window;};
struct _931DBA82A19B61CA267B848FC88C1541 {int major_version;int minor_version;IcePaProcessMsgProc process_msg_proc;};
struct _9375A326D5D02800B5E28ACECE8480CB {int num_orientation;XOrientation *orientation;};
struct _9945DF4177DE84DA9B1E97E9EA74E45D {lwpid_t tts_target_lwpid;};
struct _A467143AA6DED7F9A689DDE9D5460EF6 {int length;SmPointer value;};
union _A888F4CBB68333EFDEC90D8B2463445D {char *data_ptr;struct _A888F4CBB68333EFDEC90D8B2463445D___F4941BA1D373F3B84FD701E76D927EC4 u;};
struct _AA6493CD7EB9CABEB52E2F9509D300F7 {int flags;Window wmWindow;};
struct _B1C2EC637ADF5C0C2FC0B892BBB4B229 {unsigned int maxcadd;unsigned8 maxhadd;unsigned8 maxsadd[2];unsigned8 maxsvadd_utb[2];unsigned8 maxsvadd_lfb[4];unsigned8 currentif;unsigned8 volume_no;};
struct _B29B9FE84B7739E1FA46EBF1C4FF2A7F {char *class;XrmClass xrm_class;int argc;char **argv;};
struct _BA1C9873524F37DFA28FC6E8B2A0BC7B {int x;int y;int width;int height;int border_width;Window sibling;int stack_mode;};
struct _BD619B2F7AFF7BA6F06506AA27210664 {regoff_t rm_so;regoff_t rm_eo;};
struct _BE58583FCD7344D2421A54A7E98FFEA4 {union _BE58583FCD7344D2421A54A7E98FFEA4___A46E883B39A63C4EC4A922C85CF23D6B u;};
struct _C277BFB7EDBCB4B16FDC5D70401A7F72 {xieTypFloat constant0;xieTypFloat constant1;xieTypFloat constant2;};
struct _DCCBCD2DBAB4B946C04EEC5F9CA143FE {u_int16 id;u_int16 qdcount;u_int16 ancount;u_int16 nscount;u_int16 arcount;};
struct _DDC886CE58B08A3828A7006540E329D9 {xieTypFloat whitePoint0;xieTypFloat whitePoint1;xieTypFloat whitePoint2;};
struct _DEA6EB3579BA90947BB8CFA4C4EC84A1 {int major_version;int minor_version;IcePoProcessMsgProc process_msg_proc;};
struct _E0F2555E6D218DC1B08AC58B4F7A7F6B {unsigned int err_parm_size;caddr_t err_parm_ptr;};
struct _E1058C6CE9D10ECB65A245B878A205A2 {char *ptr;int length;XmTextFormat format;};
struct _E4260720E3379DD09D94BD71D6A7BC45 {int flags;Window wm_window;};
struct _E601E8C5C1487200B48FD548E1F703EE {ubit32 density;ubit32 compression;ubit32 block_size;unsigned int in_use;};
struct _E67FDE50279B826B5B4895B5BA02F597 {serial_option_type serial_option;};
struct _EDB1A22D9B31A401FCB33FE96D068C50 {xieTypFloat mean;xieTypFloat sigma;};
struct _XmSpecifyUnhighlightTraitRec {int version;XmSpecifyUnhighlightProc getUnhighlightGC;};
struct _XmTraversalControlTraitRec {int version;XmTraversalRedirectionProc redirect;};
struct _XmAccessColorsTraitRec {int version;XmAccessColorsGetProc getColors;XmAccessColorsGetProc setColors;};
struct _XmSpecUnitTypeTraitRec {int version;XmSpecUnitTypeGetProc getUnitType;};
struct _XmTakesDefaultTraitRec {int version;XmTakesDefaultNotifyProc showAsDefault;};
struct symbol_extension_record {unsigned int num_args;union arg_descriptor symbol_desc;union arg_descriptor argument_desc[3];};
struct _XmActivatableTraitRec {int version;XmActivatableCallBackProc changeCB;};
struct _XmDialogSavvyTraitRec {int version;XmDialogSavvyMapUnmapProc callMapUnmapCB;};
struct _XmCareVisualTraitRec {int version;XmCareVisualRedrawProc redraw;};
struct _XmSpecRenderTraitRec {int version;XmSpecRenderGetTableProc getRenderTable;};
struct _XmContainerTraitRec {int version;XmContainerGetValuesProc getValues;};
struct _XmTransferTraitRec {int version;XtCallbackProc convertProc;XtCallbackProc destinationProc;XtCallbackProc destinationPreHookProc;};
struct argument_desc_array {unsigned int reserved;union arg_descriptor argument_desc[4];};
struct _XmPointInTraitRec {int version;XmPointInProc pointIn;};
struct _XIMHotKeyTrigger {KeySym keysym;int modifier;int modifier_mask;};
struct _XimCommitInfoRec {struct _XimCommitInfoRec *next;char *string;int string_len;KeySym *keysym;int keysym_len;};
struct ns_trace_link_hdr {short tr_event;short tr_if;short tr_traced_len;short tr_pkt_len;int tr_pid;struct timeval tr_time;short tr_subsys;};
struct dma_channel_data {struct isc_table_type *locked;unsigned char dma_mode_sw;unsigned char dma_extended_mode_sw;struct driver_to_call *driver_wait_list;struct dma_parms *dma_parms;struct addr_chain_type *next_cp;};
struct raw_audio_config {union raw_audio_config___4B1DA410B3C012109C6DA8766FB16CE8 audio_conf_union;};
struct status_mask_type {unsigned16 s_m[4];};
struct _XkbKeyAliasRec {char real[4];char alias[4];};
struct addr_chain_type {caddr_t phys_addr;unsigned int count;};
struct dev_insf_struct {dev_t insf_dev_t;char insf_dev_type;char insf_path[61];};
struct rpcb_entry_list {rpcb_entry rpcb_entry_map;struct rpcb_entry_list *rpcb_entry_next;};
struct short_hand_verf {struct opaque_auth new_cred;};
struct slot_entry_type {int card_id;int slot_num;caddr_t card_reg_ptr;int flags;};
typedef Drawable XdbeBackBuffer;
typedef KeySym ( *XkbToUpperFunc)(KeySym);
typedef Opaque XtActionHookId;
typedef XtActionProc *XtBoundActions;
struct audit_bdy_data {union audit_bdy_data__ab_data data[68];};
struct dld_hook_param {unsigned int version;char *filename;union dld_hook_param___5E48CF7DD17373C69C135A325D333391 event_desc;};
struct dmem_lpmc_type {unsigned int slot_status;unsigned int slot_num;union dmem_lpmc_type___60B189A3D5F0BAB7BC0C1ACCC7AB7BD2 d;};
struct driver_to_call {int ( *drv_routine)(caddr_t drv_arg);caddr_t drv_arg;struct driver_to_call__isc_table_type *isc;struct driver_to_call *next;};
struct eisa_boot_info {int slot_num;struct eeprom_per_slot_info b_slot_info;};
struct klm_unlockargs {struct klm_lock lock;};
typedef xieTypFloat xieTypConstant[3];
struct ypbind_binding {struct in_addr ypbind_binding_addr;unsigned short ypbind_binding_port;};
typedef KeySym *XmKeySymTable;
typedef XrmHashTable XrmSearchList[];
struct bus_info_type {int bus_type;struct bus_info_type__isc_table_type *isc;struct driver_to_call *iomap_wait_list;struct rsrc_node *iomap_rsrcmap;int *host_iomap_base;int *bus_iomap_base;caddr_t spec_bus_info;int bus_num;int bus_table_index;int ( *poll_error)();int ( *arb_enable)();int ( *arb_disable)();};
struct hdl_subregion {int nused;int nelements;int hint;int refcnt;struct hdl_protrange range[7];};
struct mt_dev_struct {dev_t mt_dev;char mt_dev_type;char mt_short_path[15];char mt_long_path[61];};
struct str_async_ack {short pos_prim;short neg_prim;int len1;int len2;caddr_t data1;caddr_t data2;caddr_t data1_mp;caddr_t data2_mp;};
struct ypbind_setdom {char ypsetdom_domain[65];struct ypbind_binding ypsetdom_binding;unsigned short ypsetdom_vers;};
struct _LockInfoRec {xmutex_t lock;};
struct _XicThaiPart {int comp_state;KeySym keysym;int input_mode;};
struct bp_dma_parms {struct dma_parms dma_parms;struct dma_parms *merge_dma_parms;};
struct tty_drivercp {int type;int ( *open)();int ( *close)();int ( *read)();int ( *write)();int ( *ioctl)();int ( *select)();int ( *kputchar)();int ( *wait)();int ( *pwr_init)();int ( *who_init)();struct tty_drivercp *next;};
typedef xieTypFloat xieTypMatrix[9];
struct kd_vfsmount {struct kd_syscall kd_syscall;};
struct kmembuckets {caddr_t kb_next;};
struct nlm4_notify {char *name;int32 state;};
struct privgrp_map {gid_t priv_groupno;unsigned int priv_mask[2];};
typedef int  vfs_quota_t(struct vfs *, int, uid_t, void *);
struct xdr_discrim {int value;xdrproc_t proc;};
typedef Opaque XtCacheRef;
struct cback_data {struct cback_data___8577E6F7A3DA394015609B473F63AD7B entries;};
struct itimerspec {struct timespec it_interval;struct timespec it_value;};
struct kd_1string {struct kd_syscall kd_syscall;};
struct kd_2string {struct kd_syscall kd_syscall;};
struct knetconfig {unsigned int knc_semantics;char *knc_protofmly;char *knc_proto;dev_t knc_rdev;unsigned int knc_unused[8];};
struct lockaction {struct lockaction *la_prev;struct lockaction *la_next;pgcnt_t la_start;pgcnt_t la_end;int la_state;struct lockmap *la_lmap;};
struct ns_log_rec {short log_event;short log_location;short log_class;short log_subsys;struct timeval log_time;int log_error;int log_context;int log_mask;int log_console_mask;int log_pid;short log_flags;unsigned short log_data_dropped;unsigned short log_dropped;unsigned short log_dlen;};
struct pquad_type {int *link;int command;int *address;int count;int *vquad;space_t space;int *offset;struct pquad_type *next_align;};
struct spraycumul {unsigned int counter;struct timeval clock;};
typedef int  vfs_size_t(dev_t);
struct _xkbEvent {union _xkbEvent___1A318C185F777B9ECB86573CC964DEF2 u;};
struct dev_field {char *fd_name;char **fd_devs;mask_t fd_type[1];char **fd_users;};
struct dma_funcs {int ( *dma_setup)(struct isc_table_type *isc, struct dma_parms *dma_parms);int ( *dma_cleanup)(struct isc_table_type *isc, struct dma_parms *dma_parms);};
struct itimerval {struct timeval it_interval;struct timeval it_value;};
struct node_info {int node_id;int proc_id;int packs_sent;int bytes_sent;int total_delay;int badpacks;int lostpacks;int whicherr;char status;int numbytes;int lastbytes;int numpacks;struct timeval start;struct timeval laststop;struct timeval stop;int do_check;struct node_info *next;};
struct oipc_perm {unsigned short uid;unsigned short gid;unsigned short cuid;unsigned short cgid;unsigned short mode;unsigned short seq;key_t key;unsigned short ndx;unsigned short wait;};
struct proc_exec {struct proc_exec___69BBFAFF681CFE287E192CA75A791E21 exdata;char cmd[15];};
struct dev_name {int tr_or_log;int firmlog_level;int len_of_device_name;struct dev_name *next;caddr_t device;};
struct forkstat {int cntfork;int cntvfork;int cntsfork;pgcnt_t sizfork;pgcnt_t sizvfork;pgcnt_t sizsfork;};
struct ipoption {struct in_addr ipopt_dst;char ipopt_list[40];};
struct kd_mount {struct kd_syscall kd_syscall;};
struct kd_p_lle {kptr_t lle_next[4];kptr_t lle_prev;};
struct lgpg_env {pgcnt_t lgpg_data_size;pgcnt_t lgpg_text_size;pgcnt_t lgpg_next_brk_inc;pgcnt_t lgpg_user_brk_cnt;pgcnt_t lgpg_next_stk_inc;};
struct pm__list {pmap pml_map;struct pm__list *pml_next;};
struct reqvalue {struct rate called;struct rate calling;};
struct rp__list {rpcb rpcb_map;struct rp__list *rpcb_next;};
struct transdel {struct reqvalue maxdel;struct reqvalue avgdel;};
struct utmpidle {struct utmp ui_utmp;unsigned int ui_idle;};
struct whpde2_0 {u_int32 wpde_vaddr_u;u_int32 wpde_vaddr_l;u_int32 wpde_acword_u;u_int32 wpde_acword_l;u_int32 wpde_phys_u;u_int32 wpde_phys_l;u_int32 wpde_next_u;u_int32 wpde_next_l;};
struct yppasswd {char *oldpass;struct passwd newpw;};
struct bt_info {unsigned short bt_size;unsigned short bt_version;struct bt_info__bt_dev bt_devs[10];unsigned int bt_mem;unsigned int bt_ncpu;unsigned int reserved[211];};
struct hpde2_0 {unsigned int pde_vpage;unsigned int pde_space;unsigned int pde_uip;unsigned int pde_os;unsigned int pde_phys_u;unsigned int var_page;u_int32 unused_upper;u_int32 pde_next;};
struct lockmap {struct lockmap *lm_prev;struct lockmap *lm_next;pgcnt_t lm_start;pgcnt_t lm_end;int lm_refcnt;int lm_kern_refcnt;};
struct ifconf {int ifc_len;union ifconf___28C87C5ACD364976D94B96E40062B553 ifc_ifcu;};
struct joblog {char j_file[8];uid_t j_uid;int j_lvl;int j_cnt;};
struct cddir {struct min_cddir cdd_min;char cdd_rest_id[36];};
struct ifreq {char ifr_name[16];union ifreq___B4C116E395E63C3ED2AA96136FF1ED60 ifr_ifru;};
struct thrpt {struct reqvalue maxthrpt;struct reqvalue avgthrpt;};
union __siginfo______37F2AA42ADCA2FF6CA7A04382476AB9F___351CB38BF906F3D7FDE4000F5FE338E8 {struct __siginfo_________351CB38BF906F3D7FDE4000F5FE338E8___93BC73C2FD9859FBCB9F013BD422D91B __kill;struct __siginfo_________351CB38BF906F3D7FDE4000F5FE338E8___CAB2F663BD9968F95DBAF91C3E75F559 __SIGCLD;};
struct __siginfo___1490A58E020900B0C97A0746962B2B75___37F2AA42ADCA2FF6CA7A04382476AB9F {pid_t __pid;union __siginfo______37F2AA42ADCA2FF6CA7A04382476AB9F___351CB38BF906F3D7FDE4000F5FE338E8 __pdata;};
struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F60DFC41729ECCA7C121C44CBFE60E95 {CARD32 pad00;CARD32 window;union _xEvent______F60DFC41729ECCA7C121C44CBFE60E95___82F47A5C57D4899F304609D6061CA549 u;};
union _1AA7F1335C4C6CFF07A82EACE5F12A97___334616D58205B64CBDE7625544988388 {IcePaProcessMsgProc accept_client;IcePoProcessMsgProc orig_client;};
struct _2B2D277CB94E3786AC978CB982FDCC47___0DD87E7D5067AFA6367924F4350962B4 {SmsSaveYourselfPhase2RequestProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___376D00C7E1B7A5ED22C80CA26753DCCE {SmsGetPropertiesProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___400BA39E42047056CF99A3263FA31D4C {SmsRegisterClientProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___57292DFCF470BDC3494EA7118CBCC8BD {SmsDeletePropertiesProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___73418DF873F0AEAE72664EE28475962B {SmsInteractRequestProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___85517BA59E6BA55FB4735AB48AC251E7 {SmsSaveYourselfRequestProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___9C9DDB14D1D289A980AAF2B4D6C80B7E {SmsCloseConnectionProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___EC5C984D1ABB44D79E844BA1925B0F8F {SmsSetPropertiesProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___F3FCB5F8AADE779F0358406CD1E720C8 {SmsInteractDoneProc callback;SmPointer manager_data;};
struct _2B2D277CB94E3786AC978CB982FDCC47___F5F34547B09E0E11024B1056985C8E5F {SmsSaveYourselfDoneProc callback;SmPointer manager_data;};
struct _C4DC01CDDDF5A53B120EAA56060806A9___864F4118F25B9F87A90D9A329FD28BAF {SmcSaveCompleteProc callback;SmPointer client_data;};
struct _C4DC01CDDDF5A53B120EAA56060806A9___E2AA81D64E46956BF76D69C9998515AC {SmcDieProc callback;SmPointer client_data;};
struct _C4DC01CDDDF5A53B120EAA56060806A9___EAF5EEBD71EE8006EF9C111F1CEF53E0 {SmcSaveYourselfProc callback;SmPointer client_data;};
struct _C4DC01CDDDF5A53B120EAA56060806A9___EBB8E7C0FA976B86CC5F6009BBD5451F {SmcShutdownCancelledProc callback;SmPointer client_data;};
union nispasswd_updresult___493D7F93814B4BE288B5F7ADF9E01279 {nispasswd_error reason;nispasswd_code npd_err;};
union describe_type___0061AB6C73F294D5BF92924264208685 {unsigned8 unit_bytes[19];struct unit_desc unit;};
union describe_type___1060D215955A02307301AB469C3C2B49 {unsigned8 cntrl_bytes[5];struct cntrl_desc controller;};
union describe_type___F908C3B3D3727C8D53F435F55E8D13E8 {unsigned8 volume_bytes[13];struct volume_desc volume;};
union sigcontext___DCBB5EB5722128CC8D5F2C319DF15B39 {struct siglocal sl;struct siglocalx sx;};
union dsplog___75873FF22CE910D1FBC726C0B659971B {struct dsplog___75873FF22CE910D1FBC726C0B659971B___E63CD43CEDAE183FD155659843AA0EEC x;struct dsplog___75873FF22CE910D1FBC726C0B659971B___5B9278AD49AD5E051BD6444728AFC48A r;};
struct _03CB082776F9E7204BA8107224DE5806 {llio_std_header_type msg_header;union _03CB082776F9E7204BA8107224DE5806___2D9CBF48A86756B1ADA829A8808AD6C9 u;};
struct _1102A1E8B20588E5B4B19CB5CB1C4961 {llio_std_header_type msg_header;union _1102A1E8B20588E5B4B19CB5CB1C4961___5806BA520F5C48DBC2069CFC83B2A219 u;};
struct _18E6F3C9731C18C7E69FAD80F00FC2BA {struct ns_log_rec log;union _18E6F3C9731C18C7E69FAD80F00FC2BA___CF3C52492917230ECC0D04E3B0168E17 data;};
struct _2DFE59F2EEA4B8B07854A40D678C7B6B {llio_std_header_type msg_header;union _2DFE59F2EEA4B8B07854A40D678C7B6B___42720C520941BC117A8625B68870A086 u;};
struct _30EC503CDC11D33E3960EA03C63F0F86 {dev_t insf_addr;int insf_name_len;int insf_count;struct dev_insf_struct insf_dev[32];};
struct _39686138479B682CDBA24DAE5E6097FC {optcode cmd;union _39686138479B682CDBA24DAE5E6097FC___B9CAC9CAC2B72C332B1EA1EA6B7D3F24 cmd_info;};
struct _5546CF314AB66BC0C9A48B86C8E58389 {dm_function_type io_func_tag;union _5546CF314AB66BC0C9A48B86C8E58389___F4C8BAAF2D6A567135A62292FDA07584 u;int io_rep_count;};
struct _85014B45290BE0AD558ABC6FDBC2A83C {llio_std_header_type msg_header;union _85014B45290BE0AD558ABC6FDBC2A83C___F02C4E2EEC466ABBB014B1D19840A86D u;};
struct _9999A8100202244FE84754323DD949F8 {llio_std_header_type msg_header;union _9999A8100202244FE84754323DD949F8__uu u;};
struct _BB89CE209BBC17F3F34A96F56602CE1C {int type;Display *display;XdbeBackBuffer buffer;unsigned int serial;unsigned char error_code;unsigned char request_code;unsigned char minor_code;};
struct _C0CF6D5FED3C9B9727D7B5E4FF32FB5D {XmDisplayGetDisplayProc GetDisplay;XtPointer extension;};
struct _D0BF9774D4A82986A5A63FCC2C6E5647 {XtCallbackProc list_callback;XtPointer extension;};
struct _DD029A274B36A4E7FC38BFCAA6413DF4 {llio_std_header_type msg_header;union _DD029A274B36A4E7FC38BFCAA6413DF4___DBC3C6E7BEE5206143AD9534499882BA u;};
struct _EACB0B005B8FE7D9793BF30DB07B2838 {llio_std_header_type msg_header;union _EACB0B005B8FE7D9793BF30DB07B2838___60A8B0D42D5860F5822DDCFD2409BF0D u;};
struct _EF1C5D99769BCE30319CAF8488AFDF20 {union _EF1C5D99769BCE30319CAF8488AFDF20___199E9548C3C848AC2EFDDFCE03257421 spec;unsigned int pixel;XcmsColorFormat format;};
struct _FA574A2BD4AEE35634BB9215CFACAEE0 {random_control random_cntl;union _FA574A2BD4AEE35634BB9215CFACAEE0___B761B527D4EBA4CE9E382F1E32DFE1DE u;};
struct _FB09744F3EA0A83ECD6BAFF51404F8F8 {llio_std_header_type msg_header;union _FB09744F3EA0A83ECD6BAFF51404F8F8___AD122AD315CF8E1C6CB6B6C3CF8662E2 union_name;};
struct _FDA21FF59698B5CB8B37673BE0D84FBD {printer_ctrl_func_type ptr_ctrl_func;union _FDA21FF59698B5CB8B37673BE0D84FBD___D3782B7C0B6FCEFFEB5876E878B431ED u;};
struct _XmVendorShellExtClassPart {XtCallbackProc delete_window_handler;XtCallbackProc offset_handler;XtPointer extension;};
union _XmConvertSelectionRec {XtConvertSelectionIncrProc sel_incr;XtConvertSelectionProc sel;};
typedef void ( *XmScrollFrameInitProc)(Widget sf, XtCallbackProc moveCB, Widget scrollable);
struct _XmShellExtClassPart {XtEventHandler structureNotifyHandler;XtPointer extension;};
struct nispasswd_updresult {nispasswd_status status;union nispasswd_updresult___493D7F93814B4BE288B5F7ADF9E01279 nispasswd_updresult_u;};
struct nss_netdirbyaddr_in {nss_netdir_op_t op_t;union nss_netdirbyaddr_in___CE97B67DEE6148096F4FDE472C356D76 arg;};
struct nss_netdirbyname_in {nss_netdir_op_t op_t;union nss_netdirbyname_in___B0B77147B63B1091E6DA80F49542BFD7 arg;};
struct _SmcPropReplyWait {SmcPropReplyProc prop_reply_proc;SmPointer client_data;struct _SmcPropReplyWait *next;};
struct mode_6_buff_no_bd {struct sense_hdr mode_parms;union mode_6_buff_no_bd___E6CD75BFDABAEAC9BFB2A973592BCE03 u;};
struct _SmcInteractWait {SmcInteractProc interact_proc;SmPointer client_data;struct _SmcInteractWait *next;};
struct nlm4_unlockargs {netobj cookie;struct nlm4_lock lock;};
struct audit_str_data {struct audit_str_hdr str_hdr;struct audit_bdy_data bdy_data;};
struct nlm_unlockargs {netobj cookie;struct nlm_lock lock;};
struct svc_netaddru_t {Ki_nfsvarlen_t addr;svc_netcfgu_t knconf;};
struct _IceWatchProc {IceWatchProc watch_proc;IcePointer client_data;_IceWatchedConnection *watched_connections;struct _IceWatchProc *next;};
struct _XtActionsRec {String string;XtActionProc proc;};
struct getquota_rslt {enum gqr_status gqr_status;struct rquota gqr_rquota;};
struct nlm4_testrply {nlm4_stats stat;union nlm4_testrply___19F65A684EF686FCB17D800C09B39B65 nlm4_testrply;};
struct pst_vm_status {int32_t pst_space;int32_t pst_vaddr64bit_pad;int32_t pst_vaddr;int32_t pst_length;int32_t pst_phys_pages;int32_t pst_flags;int32_t pst_type;int32_t pst_permission;struct psfileid pst_id;int32_t pst_valid;int32_t pst_pagesize_hint;int32_t pst_vps_pgsizes[16];};
struct key_netstres {keystatus status;union key_netstres___2176196DCBB8522A9A1E300DB0535BE5 key_netstres_u;};
struct klm_lockargs {bool_t block;bool_t exclusive;struct klm_lock lock;};
struct klm_testargs {bool_t exclusive;struct klm_lock lock;};
struct klm_testrply {klm_stats stat;union klm_testrply___40F9D261D31BF2147C1606393BAB8476 klm_testrply;};
struct nlm4_testres {netobj cookie;nlm4_testrply stat;};
struct nlm_testrply {nlm_stats stat;union nlm_testrply___25E723FE95144319ADEDD57F4FF59DDE nlm_testrply;};
struct pst_swapinfo {uint32_t pss_idx;uint32_t pss_flags;uint32_t pss_priority;uint32_t pss_nfpgs;union pst_swapinfo___3012E3C472EE422A626F70F0C4A32233 pss_un;uint32_t pss_swapchunk;};
struct cryptkeyres {keystatus status;union cryptkeyres___EF36972044157FC290EE2FE4EF835697 cryptkeyres_u;};
struct dma_A_chain {union dma_A_chain___9BFEA53F2269C7B565EDDA23D08FFFF2 u;uint32_t hw_class;char spu;};
struct dom_binding {struct dom_binding *dom_pnext;char dom_domain[65];struct sockaddr_in dom_server_addr;unsigned short dom_server_port;int dom_socket;CLIENT *dom_client;unsigned short dom_local_port;int dom_vers;};
struct nlm_testres {netobj cookie;nlm_testrply stat;};
struct getcredres {keystatus status;union getcredres___C5134A0BDA290BA80D31944F899AB902 getcredres_u;};
struct pst_stable {int32_t pss_size;int32_t pss_type;int32_t pss_pad[8];union pst_stable___70B85E80D6077E82B0FB95AE4C9AAAEC pss_un;};
struct sigcontext {union sigcontext___DCBB5EB5722128CC8D5F2C319DF15B39 sc_ctxt;int sc_args[4];struct frame_marker sc_sfm;};
struct ypresponse {enum ypresptype yp_resptype;union ypresponse___941A5461F0E0B639BD3DE282E3990A90 yp_respbody;};
struct call_body {u_long cb_rpcvers;u_long cb_prog;u_long cb_vers;u_long cb_proc;struct opaque_auth cb_cred;struct opaque_auth cb_verf;};
struct ether_arp {struct arphdr ea_hdr;u_char arp_sha[6];u_char arp_spa[4];u_char arp_tha[6];u_char arp_tpa[4];};
struct mountres3 {mountstat3 fhs_status;union mountres3___3D7A0CB925F6CF28B22A74AF5DF0F9CE mountres3_u;};
struct osemid_ds {struct oipc_perm sem_perm;struct __sem *sem_base;unsigned short sem_nsems;time_t sem_otime;time_t sem_ctime;};
struct oshmid_ds {struct oipc_perm shm_perm;unsigned int shm_segsz;struct oshmid_ds__vas *shm_vas;unsigned short shm_lpid;unsigned short shm_cpid;unsigned short shm_nattch;unsigned short shm_cnattch;time_t shm_atime;time_t shm_dtime;time_t shm_ctime;char shm_pad[148];};
struct pr_passwd {struct pr_field ufld;struct pr_flag uflg;struct pr_field sfld;struct pr_flag sflg;};
struct yprequest {enum ypreqtype yp_reqtype;union yprequest___DEB989A88767ED55A1FBB16B6C8D997A yp_reqbody;};
struct _XtTMRec {XtTranslations translations;XtBoundActions proc_table;struct _XtStateRec *current_state;unsigned int lastEventTime;};
struct ksysinfo {time_t cpu[15];int proc_cnt;int max_proc_cnt;time_t mp_cpu[32][15];time_t wait[3];int bread;int bwrite;int lread;int lwrite;int phread;int phwrite;int swapin;int swapout;int bswapin;int bswapout;int pswitch;int syscall;int sysread;int syswrite;int sysfork;int sysexec;int sysselect;int runque;int runocc;int mp_runque[32];int mp_runocc[32];int swpque;int swpocc;int iget;int namei;int dirblk;unsigned int readch;unsigned int writech;int rcvint;int xmtint;int mdmint;int rawch;int canch;int outch;int msg;int sema;int pnpfault;int wrtfault;};
struct semid_ds {struct ipc_perm sem_perm;struct __sem *sem_base;time_t sem_otime;time_t sem_ctime;unsigned short sem_nsems;unsigned int sem_spare;char sem_pad[16];};
struct tcpiphdr {struct ipovly ti_i;struct tcphdr ti_t;};
struct udpiphdr {struct ipovly ui_i;struct udphdr ui_u;};
struct dev_asg {struct dev_field ufld;struct dev_flag uflg;struct dev_field sfld;struct dev_flag sflg;};
struct kd_exec {struct kd_syscall kd_syscall;kptr_t vp;kptr_t p_vas;};
struct kd_swap {struct kd_syscall kd_syscall;uint32_t vtype;uint32_t vfstype;};
struct objdata {zotypes zo_type;union objdata___B3007D6063AF66DF722E8A0D3E39E00C objdata_u;};
struct pr_term {struct t_field ufld;struct t_flag uflg;struct t_field sfld;struct t_flag sflg;};
struct rpc_err {enum clnt_stat re_status;union rpc_err___CA5666742FA4B309C5F6D2463611D7B4 ru;};
struct pir_t {struct audit_hdr aud_head;struct pir_body pid_info;};
union callout___2D1E7CA6D4B906E5368CC371613F5AEC {struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___AF441E7245BEEE4AAB09922872FD6942 real_callout;struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___0740FC17DC46FEE1E8586A6E9026ED35 time_header;struct callout___2D1E7CA6D4B906E5368CC371613F5AEC___801C7CA5DE79B723878F032CAF38D5B0 hash_header;};
union icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B {struct icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B__id_ts id_ts;struct icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B__id_ip id_ip;u_long id_mask;char id_data[1];};
struct _1AA7F1335C4C6CFF07A82EACE5F12A97 {int in_use;int my_opcode;_IceProtocol *protocol;IcePointer client_data;int accept_flag;union _1AA7F1335C4C6CFF07A82EACE5F12A97___334616D58205B64CBDE7625544988388 process_msg_proc;};
struct _3BE25E7CC08F2245A091500E0AFB6500 {Boolean end;XmGeoSegmentFixUpProc fix_up;Dimension even_height;Dimension even_width;Dimension min_width;Boolean stretch_width;Boolean uniform_border;Dimension border;unsigned char fill_mode;unsigned char fit_mode;Boolean sticky_end;Dimension space_left;Dimension space_end;Dimension space_between;Dimension max_box_width;Dimension boxes_height;Dimension fill_height;Dimension box_count;};
struct _4D3DBF947D992ECBBC409CB8927D044E {XtActionProc popdownOne;XtActionProc popdownEveryone;XtActionProc popdownDone;XmMenuPopupProc popupSharedMenupane;XtPointer extension;};
struct _5F2581EFA5F095F1677DD26E57B1FC1D {unsigned int atn;bit8 ppoll_ist;bit8 ppoll_sense;bit8 ppoll_delay;bit8 srq_resp;bit8 card_address;bit8 interrupts[3];cio_vquad_type vquad[19];char c_buf[84];char d_buf[64];char s_buf[9];da_idy_bytes_type da_idy;};
struct _8F2C7EBD5F5C00EC145265832DC3A795 {Boolean end;XmGeoSegmentFixUpProc fix_up;Dimension even_width;Dimension even_height;Dimension min_height;Boolean stretch_height;Boolean uniform_border;Dimension border;unsigned char fill_mode;unsigned char fit_mode;Boolean sticky_end;Dimension space_above;Dimension space_end;Dimension space_between;Dimension max_box_height;Dimension boxes_width;Dimension fill_width;Dimension box_count;};
struct _A9F0CF7AEEAE18E8E3DE5B9A9FBAEC8A {io_subq_type reply_subq;diag_option_type diag_option;union _A9F0CF7AEEAE18E8E3DE5B9A9FBAEC8A___E26DABB5958D65260C087DD1F50298F6 u;};
struct _C091F8996EF5667AFF510FF5B2E0143E {char *vendor;char *release;int version_count;IcePoVersionRec *version_recs;int auth_count;char **auth_names;IcePoAuthProc *auth_procs;IceIOErrorProc io_error_proc;};
struct _EE866E46B57D84E2A02F424C24BE7B31 {XmDragStartProc start;XmDragCancelProc cancel;XtPointer extension;};
struct _XmNavigatorTraitRec {int version;XmNavigatorMoveCBProc changeMoveCB;XmNavigatorSetValueProc setValue;XmNavigatorGetValueProc getValue;};
struct _CompositeClassPart {XtGeometryHandler geometry_manager;XtWidgetProc change_managed;XtWidgetProc insert_child;XtWidgetProc delete_child;XtPointer extension;};
struct clnt_netaddru_t {clnt_netcfgu_t knconf;Ki_nfsvarlen_t addr;int32_t pad;};
struct accepted_reply {struct opaque_auth ar_verf;enum accept_stat ar_stat;union accepted_reply___A74D47F576A9520EEBD40CEAFF1DA023 ru;};
struct nlm4_shareargs {netobj cookie;nlm4_share share;bool_t reclaim;};
struct describe_type {union describe_type___1060D215955A02307301AB469C3C2B49 controller_tag;union describe_type___0061AB6C73F294D5BF92924264208685 unit_tag;union describe_type___F908C3B3D3727C8D53F435F55E8D13E8 volume_tag;};
struct kd_miss_alpha {kd_t kd_struct;uint32_t nswitches;uint32_t pad;struct ki_pk_state ki_pk_state;};
struct nlm4_cancargs {netobj cookie;bool_t block;bool_t exclusive;struct nlm4_lock lock;};
struct nlm4_testargs {netobj cookie;bool_t exclusive;struct nlm4_lock lock;};
struct nlm_shareargs {netobj cookie;nlm_share share;bool_t reclaim;};
struct mode_6_buff {struct sense_hdr mode_parms;struct block_desc block_desc;union mode_6_buff___4D7D3BCFC575904160AC3D2F3769897C u;};
struct _XIMFilter {struct _XIMFilter *next;Window window;unsigned int event_mask;int start_type;int end_type;XFilterEventProc filter;XPointer client_data;};
union __siginfo___1490A58E020900B0C97A0746962B2B75 {struct __siginfo___1490A58E020900B0C97A0746962B2B75___37F2AA42ADCA2FF6CA7A04382476AB9F __proc;struct __siginfo___1490A58E020900B0C97A0746962B2B75___AABDA256947000BB9B5485581E6F54AA __fault;struct __siginfo___1490A58E020900B0C97A0746962B2B75___92A7EE6A1909C09ADD6B4865B3C321AB __file;struct __siginfo___1490A58E020900B0C97A0746962B2B75___3FF08C5ADC6BC526D5A84F94DC2433A6 __gfault;};
union icmp___13995140954385B7F735AD5DF5EAA771 {u_char ih_pptr;struct in_addr ih_gwaddr;struct icmp___13995140954385B7F735AD5DF5EAA771__ih_idseq ih_idseq;struct icmp___13995140954385B7F735AD5DF5EAA771__ih_pmtu ih_mtu;int ih_void;};
struct _89EFAFA36DC2CA0A6742FD5F4BE18D8B {io_subq_type reply_subq;bit8 device_number;bit8 transfer_dir;unsigned int block_mode;req_parm_type request_parms;bit8 request;union _89EFAFA36DC2CA0A6742FD5F4BE18D8B___4943DBA6EC5888BF08830C6DAF61C6ED u;};
struct _A18BE809E4BD5A02207432E11B1979DB {dam_info_table_type dam_info;dam_dm_info_entry_type dm_info[32];da_info_table_type da_info;struct req_entry_type req_info[9];struct req_entry_type *uid_to_req[9];struct req_entry_type *next_rcs;};
struct _C4DC01CDDDF5A53B120EAA56060806A9 {struct _C4DC01CDDDF5A53B120EAA56060806A9___EAF5EEBD71EE8006EF9C111F1CEF53E0 save_yourself;struct _C4DC01CDDDF5A53B120EAA56060806A9___E2AA81D64E46956BF76D69C9998515AC die;struct _C4DC01CDDDF5A53B120EAA56060806A9___864F4118F25B9F87A90D9A329FD28BAF save_complete;struct _C4DC01CDDDF5A53B120EAA56060806A9___EBB8E7C0FA976B86CC5F6009BBD5451F shutdown_cancelled;};
struct _XmScrollFrameTraitRec {int version;XmScrollFrameInitProc init;XmScrollFrameGetInfoProc getInfo;XmScrollFrameAddNavigatorProc addNavigator;XmScrollFrameRemoveNavigatorProc removeNavigator;};
struct _XmRowColumnClassPart {XmMenuProc menuProcedures;XtActionProc armAndActivate;XmMenuTraversalProc traversalHandler;XtPointer extension;};
struct _XkbConverters {XkbKSToMBFunc KSToMB;XPointer KSToMBPriv;XkbMBToKSFunc MBToKS;XPointer MBToKSPriv;XkbToUpperFunc KSToUpper;};
struct nis_object {nis_oid zo_oid;nis_name zo_name;nis_name zo_owner;nis_name zo_group;nis_name zo_domain;u_long zo_access;u_long zo_ttl;objdata zo_data;};
struct callout {unsigned char c_cookie;unsigned char c_pad;callout_flags_t c_flag;u_int c_abs_time_hi;u_int c_abs_time_lo;struct callout *c_time_next;struct callout *c_time_prev;struct callout *c_hash_next;struct callout *c_hash_prev;union callout___2D1E7CA6D4B906E5368CC371613F5AEC var;spu_t c_spu;};
struct icmp {u_char icmp_type;u_char icmp_code;u_short icmp_cksum;union icmp___13995140954385B7F735AD5DF5EAA771 icmp_hun;union icmp___C66D4155BE5EFB5EA2B43AEFA187DD8B icmp_dun;};
union mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A {struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___5549B831AA286DA3F16AE0851EE4EE00 mun_cl_nfs;struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___288D37544811B10AE4E24B6D57380C02 mun_cl_dux;struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___13A13C9AC154D3293650D38098572922 mun_cl_osx;struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___869E1047D9F600BAE047DCAE4A27A49B mun_cl_ops;struct mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A___21E63C530F687031DFD8E4B8854A680E mun_ext;};
union cs_status_type___682E0335E9CE8EEE44965718E74190D0 {unsigned8 info[10];struct cs_status_type___682E0335E9CE8EEE44965718E74190D0___D03C0DDF97FD6619B9EAA1F30E22A6B3 nta_fault;struct cs_status_type___682E0335E9CE8EEE44965718E74190D0___D05744114636CA3463EA967E1C843D48 aaa_fault;signed8 uee[6];unsigned8 dor[6];struct sva_type ta;struct sva_type bba;signed8 urr[6];struct sva_type btbs;struct sva_type rba;};
struct _9DF924EC08184381CE6BEC6133B35008 {XtPointer next_extension;XrmQuark record_type;int version;Cardinal record_size;XtAllocateProc allocate;XtDeallocateProc deallocate;};
struct kd_rfs_dispatch {kd_t kd_struct;kt_t sttime;int32_t kr_which;int32_t kr_nfsvers;uint32_t kr_reqlength;uint32_t kr_reslength;short committed;short stable;svc_netaddru_t kr_addr;};
struct kd_enqueue {kd_t kd_struct;dev_t b_dev;bmcnt_t b_merge_cnt;bqlen_t b_queuelen;struct kd_enqueue2 ki_enq;};
struct log_entry {u_long le_time;log_entry_t le_type;nis_name le_princp;nis_name le_name;struct log_entry___1E639176190539C4AF5A837E820AE922 le_attrs;nis_object le_object;};
struct kd_rfscall {kd_t kd_struct;kt_t sttime;int32_t kr_which;int32_t kr_nfsvers;dev_t kr_mntno;uint32_t kr_reqlength;uint32_t kr_reslength;short stable;short committed;clnt_netaddru_t kr_addr;};
struct icommon {u_short ic_mode;short ic_nlink;ushort ic_uid_lsb;ushort ic_gid_lsb;quad ic_size;int32_t ic_atime;int32_t ic_atspare;int32_t ic_mtime;int32_t ic_mtspare;int32_t ic_ctime;int32_t ic_ctspare;union icommon___352D7131545A46E37526309B828AFFEE ic_un2;int32_t ic_flags;int32_t ic_blocks;int32_t ic_gen;ushort ic_uid_msb;ushort ic_gid_msb;int32_t ic_spare[2];uint32_t ic_contin;};
struct _358F6377A75B2BC24E0856391D2F801A {int chain_ram[512];tid_type tid[128];dasave_type subc[16];u_char id[16];pquad_type final_initlc;int logchlist[112];int logchead;int logchtail;lnkst_type *listhead;lnkst_type *dlisthead;int *fake_buffer;struct ha *hpa;struct sa *spa;int ca_address;pquad_type *lastpquad;int dump;int real_chain_ram;port_num_type my_port;int eim;int init_timer;int init_timer_stat;int merr_timer;int pfail_trn;u_char channel_type;mem_type membig;mem_type mem32;};
struct _XmSimpleMenuRec {int count;int post_from_button;XtCallbackProc callback;XmStringTable label_string;String *accelerator;XmStringTable accelerator_text;XmKeySymTable mnemonic;XmStringCharSetTable mnemonic_charset;XmButtonTypeTable button_type;int button_set;XmString option_label;KeySym option_mnemonic;};
struct ki_region_fields {region_flags_t r_flags;region_type_t r_type;pgcnt_t r_pgsz;pgcnt_t r_nvalid;pgcnt_t r_swalloc;pgcnt_t r_swapmem;pgcnt_t r_vfd_swapmem;pgcnt_t r_lockmem;uint16_t r_refcnt;int16_t r_zomb;pgcnt_t r_off;kptr_t r_fstore;kptr_t r_bstore;uint64_t r_byte;uint64_t r_bytelen;pgcnt_t r_poip;pgcnt_t r_pgszhint;kptr_t r_next;kptr_t r_prev;union ki_region_fields___A042BAEF98ABBE8604F9A3AE2EA65FF1 r_preg_un;uint16_t r_incore;uint16_t pad[3];};
struct pr_default {char dd_name[20];char dg_name;struct pr_field prd;struct pr_flag prg;struct t_field tcd;struct t_flag tcg;struct dev_field devd;struct dev_flag devg;struct system_default_fields sfld;struct system_default_flags sflg;};
struct _2B2D277CB94E3786AC978CB982FDCC47 {struct _2B2D277CB94E3786AC978CB982FDCC47___400BA39E42047056CF99A3263FA31D4C register_client;struct _2B2D277CB94E3786AC978CB982FDCC47___73418DF873F0AEAE72664EE28475962B interact_request;struct _2B2D277CB94E3786AC978CB982FDCC47___F3FCB5F8AADE779F0358406CD1E720C8 interact_done;struct _2B2D277CB94E3786AC978CB982FDCC47___85517BA59E6BA55FB4735AB48AC251E7 save_yourself_request;struct _2B2D277CB94E3786AC978CB982FDCC47___0DD87E7D5067AFA6367924F4350962B4 save_yourself_phase2_request;struct _2B2D277CB94E3786AC978CB982FDCC47___F5F34547B09E0E11024B1056985C8E5F save_yourself_done;struct _2B2D277CB94E3786AC978CB982FDCC47___9C9DDB14D1D289A980AAF2B4D6C80B7E close_connection;struct _2B2D277CB94E3786AC978CB982FDCC47___EC5C984D1ABB44D79E844BA1925B0F8F set_properties;struct _2B2D277CB94E3786AC978CB982FDCC47___57292DFCF470BDC3494EA7118CBCC8BD delete_properties;struct _2B2D277CB94E3786AC978CB982FDCC47___376D00C7E1B7A5ED22C80CA26753DCCE get_properties;};
struct kd_do_bio {kd_t kd_struct;kptr_t bp;dev_t mntno;uint32_t b_flags;int32_t b_bcount;bptype_t b_bptype;bqlen_t b_queuelen;pid_t b_upid;pid_t b_apid;tid_t b_uutid;tid_t b_autid;tid_t b_uktid;tid_t b_aktid;kt_t b_timeval_eq;kt_t b_timeval_qs;uint32_t b_resid;int32_t kr_nfsvers;uint32_t commit_buf_cnt;uint32_t commit_commlen;kptr_t b_vp;clnt_netaddru_t kr_addr;};
struct ki_pregion_fields {struct kd_p_lle p_ll;pregion_flags_t p_flags;pregion_type_t p_type;kptr_t p_reg;kptr_t p_vaddr;space_t p_space;pgcnt_t p_off;pgcnt_t p_count;pgcnt_t p_ageremain;pgcnt_t p_agescan;pgcnt_t p_stealscan;kptr_t p_vas;kptr_t p_regsknode;tid_t p_tid;uint16_t p_nestediomaps;uint16_t p_pagein;int8_t p_bestnice;int8_t p_deactsleep;uint8_t p_locality;uint8_t p_strength;pgcnt_t p_nextfault;pgcnt_t p_last_rhead;int32_t p_mq_refcnt;int16_t p_prot;uint16_t pad[3];};
struct vfsops {vfs_mount_t *vfs_mount;vfs_unmount_t *vfs_unmount;vfs_root_t *vfs_root;vfs_statvfs_t *vfs_statvfs;vfs_sync_t *vfs_sync;vfs_vget_t *vfs_vget;vfs_getmount_t *vfs_getmount;vfs_freeze_t *vfs_freeze;vfs_thaw_t *vfs_thaw;vfs_quota_t *vfs_quota;vfs_mountroot_t *vfs_mountroot;vfs_size_t *vfs_size;};
union pstun {struct pst_static *pst_static;struct pst_dynamic *pst_dynamic;struct pst_status *pst_status;char *pst_command;struct pst_vminfo *pst_vminfo;struct pst_diskinfo *pst_diskinfo;struct pst_processor *pst_processor;struct pst_lvinfo *pst_lv;struct pst_swapinfo *pst_swapinfo;struct pst_fileinfo *pst_fileinfo;struct pst_seminfo *pst_seminfo;struct pst_msginfo *pst_msginfo;struct pst_shminfo *pst_shminfo;struct pst_ipcinfo *pst_ipcinfo;struct pst_vm_status *pst_vm_status;struct pst_stable *pst_stable;struct pst_crashinfo *pst_crashinfo;struct pst_crashdev *pst_crashdev;};
union _xEvent___4579D2F02645DC5461CD7DF0223F4600 {struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___CB6A6FBD4AABDC204CA09785462A5EAC u;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___06CC3EE1C785FF4C65A358F81D4770E3 keyButtonPointer;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___B652DCB1C62512FA77E4252B8A422175 enterLeave;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___D4E6015299E8C3BAFA52E0C7400AB6A6 focus;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___99F5A2754EC45011AB028BB1CC2CE3C7 expose;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___316B218C709051C178B3BB07E6B18196 graphicsExposure;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___E3E63ACF9DBDF6C56161A285CC120760 noExposure;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___0F73BC087B0175F837E61BF86166AB84 visibility;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F0EDD24BB588AB1974F0CC5CC47343A0 createNotify;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3F936A3A9A06092B5B70BD26A7DFD789 destroyNotify;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___674F3E4AE65A41A1BBF2ACE37596CB1B unmapNotify;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3284E488B37AEC742A022E833068D497 mapNotify;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___210E680417EC90CA260E4854A6751754 mapRequest;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___C927E5D571B5CC43049437141E992D5C reparent;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F0E773388BCCF7D4D022A846E01785CC configureNotify;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___CF45A70F1381AC3E41639336F8DCFD08 configureRequest;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___9C75AB6DDEADA42926A4005EFC1B4241 gravity;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___5A60174FC6A07BE0049C674473C6C1C3 resizeRequest;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___EDE3B33B7AF26E05A2A60AEE6589519E circulate;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___40ECE1105C1C479EC11371480E0EAEEE property;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___B56843D1A807D13D0FEC0C0069626892 selectionClear;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___0782806FB5FEE125636C30F93EC424E5 selectionRequest;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___9E59406F0409BDE74EEED2CE1F683A76 selectionNotify;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___3C1A322C1CF5978F8E7C805C02DD70C8 colormap;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___4D6B1C2E2FE6C1124CAB2311E897D1AB mappingNotify;struct _xEvent___4579D2F02645DC5461CD7DF0223F4600___F60DFC41729ECCA7C121C44CBFE60E95 clientMessage;};
union self_audit_rec___E31DA5088C153CF27D2579D385278CCE {char text[32768];struct audit_str_data str_data;};
union ypbind_resp___6388FF0E9D8E3D6204BCCA80D0E2FE14 {unsigned int ypbind_error;struct ypbind_binding ypbind_bindinfo;};
struct str_async_sthinsert {void *sth;int offset;struct str_async_ack async;};
struct ypbind_oldsetdom {char ypoldsetdom_domain[65];struct ypbind_binding ypoldsetdom_binding;};
struct max_cddir {struct cddir cdd;char cdd_sua[186];};
struct _xEvent {union _xEvent___4579D2F02645DC5461CD7DF0223F4600 u;};
struct dsplog {int d_type;union dsplog___75873FF22CE910D1FBC726C0B659971B d_un;};
struct mbuf___C6A95FC5135865A81007461C3A130A6A__mcluster {u_short mun_cltype;u_short mun_clsize;struct mbuf *mun_clhead;int mun_clrefcnt;union mbuf_____mcluster___4C407957B5EB2C40FAFABBD1860C8E9A mun_cl;};
union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC {struct accepted_reply RP_ar;struct rejected_reply RP_dr;};
union inode___850AF533430B9DC3D40EA65B71826C63 {struct icommon i_ic;struct icont i_icc;};
union mbuf___C6A95FC5135865A81007461C3A130A6A {u_char mun_dat[192];struct mbuf___C6A95FC5135865A81007461C3A130A6A__mcluster m_cluster;};
struct self_audit_rec {struct audit_hdr aud_head;union self_audit_rec___E31DA5088C153CF27D2579D385278CCE aud_body;};
struct rpc_createerr {enum clnt_stat cf_stat;struct rpc_err cf_error;};
struct ypbind_resp {enum ypbind_resptype ypbind_status;union ypbind_resp___6388FF0E9D8E3D6204BCCA80D0E2FE14 ypbind_respbody;};
struct pir_header {struct pir_t pir;char hdr[20];};
struct reply_body {enum reply_stat rp_stat;union reply_body___3176F759A4E4A0B30BE44C0FA3C218CC ru;};
struct __siginfo {int si_signo;int si_code;int si_errno;sigval_t si_value;union __siginfo___1490A58E020900B0C97A0746962B2B75 __data;int __pad[9];};
struct kd_mmap {struct kd_syscall kd_syscall;kptr_t r_fstore;kptr_t r_bstore;kptr_t rp;kptr_t prp;struct ki_region_fields region;};
struct cs_status_type {unsigned8 vvvvuuuu;signed8 requesting_unit;struct status_mask_type errorbits;union cs_status_type___682E0335E9CE8EEE44965718E74190D0 st_u;};
struct kd_pregion {kd_t kd_struct;int cl_numb;uint32_t pad;kptr_t prp;struct ki_pregion_fields pregion;};
struct kd_region {kd_t kd_struct;int cl_numb;uint32_t pad;kptr_t rp;struct ki_region_fields region;};
struct kd_fault {kd_t kd_struct;int32_t cl_numb;int32_t wrt;int32_t space;int32_t pcause;kptr_t vaddr;kptr_t pcoq_head;int32_t r_nvalid;uint32_t pad;kptr_t prp;struct ki_pregion_fields pregion;};
struct mbuf {union mbuf___C6A95FC5135865A81007461C3A130A6A m_un;u_char m_pad[4];u_int m32_pad[3];u_short m_len;u_char m_type;u_char m_flags;struct mbuf *m_next;uintptr_t m_off;struct mbuf *m_act;int m_quad_hi[4];int m_quad[4];};
struct cddir_rr {struct max_cddir cdd_max;struct buf *cdd_rr_CE_buf[4];u_char cdd_rr_RR;char cdd_rr_NM_name[256];u_short cdd_rr_NM_len;char cdd_rr_NM_more;char cdd_rr_SL_path[1025];u_short cdd_rr_SL_len;char cdd_rr_SL_lmore;char cdd_rr_SL_cmore;dev_t cdd_rr_PN;mode_t cdd_rr_PX_mode;nlink_t cdd_rr_PX_nlink;uid_t cdd_rr_PX_uid;gid_t cdd_rr_PX_gid;u_char cdd_rr_TF_flags;time_t cdd_rr_TF_mtime;time_t cdd_rr_TF_atime;time_t cdd_rr_TF_ctime;uint32_t cdd_rr_CL;uint32_t cdd_rr_PL;char cdd_rr_RE;};
struct inode {struct inode *i_chain[2];dev_t i_dev;ino_t i_number;u_int i_flag;ushort i_lockword;tid_t i_tid;struct vnode i_vnode;struct vnode *i_devvp;int i_diroff;struct inode *i_contip;struct inode__fs *i_fs;struct inode__dquot *i_dquot;dev_t i_rdev;union inode___EA31F86E7C3F0C71466A5E96901DCEB4 i_un;struct inode___FC33DB27FE0F857369E6C6F32AC20866 i_fr;struct inode__i_select i_fselr;struct inode__i_select i_fselw;struct inode__mount *i_mount;union inode___850AF533430B9DC3D40EA65B71826C63 i_icun;ushort i_rcount;b_sema_t i_b_sema;int filler[2];};
union rpc_msg___7D774571B4FAB0E4BBD540829030FA52 {struct call_body RM_cmb;struct reply_body RM_rmb;};
struct rpc_msg {uint32_t rm_xid;enum msg_type rm_direction;union rpc_msg___7D774571B4FAB0E4BBD540829030FA52 ru;};



/// #endif ===true


